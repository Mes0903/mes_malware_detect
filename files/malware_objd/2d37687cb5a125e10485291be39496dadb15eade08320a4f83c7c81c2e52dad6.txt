
2d37687cb5a125e10485291be39496dadb15eade08320a4f83c7c81c2e52dad6.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xcc
  401009:	xor    DWORD PTR ds:0x42d014,0x42a000
  401013:	push   esi
  401014:	movzx  esi,WORD PTR ds:0x429014
  40101b:	sub    DWORD PTR ds:0x42a018,esi
  401021:	mov    esi,DWORD PTR ds:0x42ed49
  401027:	push   0x8
  401029:	push   0x42e545
  40102e:	and    DWORD PTR ds:0x42c010,0x110f
  401038:	call   esi
  40103a:	test   eax,eax
  40103c:	mov    DWORD PTR ds:0x42a018,0x6e1c
  401046:	je     0x40105d
  40104c:	adc    DWORD PTR ds:0x42a014,0x429000
  401056:	xor    eax,eax
  401058:	jmp    0x4029a4
  40105d:	push   edi
  40105e:	push   0x42e555
  401063:	xor    edi,edi
  401065:	and    DWORD PTR ds:0x42c004,0x42d018
  40106f:	inc    edi
  401070:	push   edi
  401071:	push   edi
  401072:	call   DWORD PTR ds:0x42ed79
  401078:	xor    DWORD PTR ds:0x42d01c,0x429020
  401082:	test   eax,eax
  401084:	mov    DWORD PTR ds:0x42c004,0x42a7
  40108e:	je     0x4010a5
  401094:	xor    eax,eax
  401096:	mov    DWORD PTR ds:0x42a018,0x32e7
  4010a0:	jmp    0x4029a3
  4010a5:	sbb    DWORD PTR ds:0x42a010,0x2663
  4010af:	push   ebx
  4010b0:	and    DWORD PTR ds:0x42d008,0x0
  4010ba:	mov    ebx,DWORD PTR ds:0x42d008
  4010c0:	inc    ebx
  4010c1:	mov    DWORD PTR ds:0x42d008,ebx
  4010c7:	cmp    DWORD PTR ds:0x42d008,0xb
  4010ce:	jne    0x4010e4
  4010d4:	push   0x2cfb
  4010d9:	push   0x7de9
  4010de:	call   DWORD PTR ds:0x42ed35
  4010e4:	cmp    DWORD PTR ds:0x42d008,0xa
  4010eb:	jne    0x4010fe
  4010f1:	mov    ebx,DWORD PTR ds:0x42d008
  4010f7:	inc    ebx
  4010f8:	mov    DWORD PTR ds:0x42d008,ebx
  4010fe:	cmp    DWORD PTR ds:0x42d008,0x12
  401105:	jb     0x4010ba
  40110b:	mov    ebx,DWORD PTR ds:0x42ed4d
  401111:	push   0x42e565
  401116:	sub    DWORD PTR ds:0x429014,0x429020
  401120:	push   edi
  401121:	mov    DWORD PTR ds:0x42b01c,0x3048
  40112b:	push   edi
  40112c:	call   ebx
  40112e:	and    DWORD PTR ds:0x42c00c,0x5ead
  401138:	test   eax,eax
  40113a:	jne    0x401e1f
  401140:	push   0xc
  401142:	push   0x42e589
  401147:	adc    DWORD PTR ds:0x42c010,0x42d010
  401151:	call   esi
  401153:	test   eax,eax
  401155:	mov    DWORD PTR ds:0x42a01c,0x6b4c
  40115f:	jne    0x401e1f
  401165:	push   0x7
  401167:	push   0x42e59d
  40116c:	call   esi
  40116e:	xor    DWORD PTR ds:0x429028,0x6216
  401178:	test   eax,eax
  40117a:	jne    0x401e1f
  401180:	add    DWORD PTR ds:0x429004,0x14dc
  40118a:	push   0x8
  40118c:	and    DWORD PTR ds:0x42c00c,0x42a000
  401196:	push   0x42e5ad
  40119b:	add    DWORD PTR ds:0x42a018,0x317f
  4011a5:	call   esi
  4011a7:	test   eax,eax
  4011a9:	mov    DWORD PTR ds:0x42c014,0x304b
  4011b3:	jne    0x401e1f
  4011b9:	push   0x42e5bd
  4011be:	xor    DWORD PTR ds:0x42d014,0x42b004
  4011c8:	push   edi
  4011c9:	push   edi
  4011ca:	sub    DWORD PTR ds:0x429010,0x429028
  4011d4:	call   DWORD PTR ds:0x42ed79
  4011da:	not    DWORD PTR ds:0x42b000
  4011e0:	test   eax,eax
  4011e2:	mov    DWORD PTR ds:0x429008,0x4a9f
  4011ec:	jne    0x401e1f
  4011f2:	push   0x42e5cd
  4011f7:	push   edi
  4011f8:	adc    DWORD PTR ds:0x42d000,0x42900c
  401202:	push   edi
  401203:	call   ebx
  401205:	test   eax,eax
  401207:	jne    0x401e1f
  40120d:	xor    DWORD PTR ds:0x429000,0x429010
  401217:	push   0xc
  401219:	and    DWORD PTR ds:0x42b00c,0x6767
  401223:	push   0x42e5f1
  401228:	sub    DWORD PTR ds:0x42a010,0x429018
  401232:	call   esi
  401234:	sub    DWORD PTR ds:0x429010,0x42a010
  40123e:	test   eax,eax
  401240:	jne    0x401e1f
  401246:	push   0x7
  401248:	push   0x42e605
  40124d:	and    DWORD PTR ds:0x42c004,0x42b014
  401257:	call   esi
  401259:	test   eax,eax
  40125b:	mov    DWORD PTR ds:0x42c014,0x7e03
  401265:	jne    0x401e1f
  40126b:	and    DWORD PTR ds:0x429020,0x42d000
  401275:	push   0x8
  401277:	sbb    DWORD PTR ds:0x42a008,0x42901c
  401281:	push   0x42e615
  401286:	add    DWORD PTR ds:0x42c01c,0x42d010
  401290:	call   esi
  401292:	test   eax,eax
  401294:	mov    DWORD PTR ds:0x429008,0x7503
  40129e:	jne    0x401e1f
  4012a4:	push   0x42e625
  4012a9:	and    DWORD PTR ds:0x42d008,0x42c000
  4012b3:	push   edi
  4012b4:	push   edi
  4012b5:	call   DWORD PTR ds:0x42ed79
  4012bb:	or     DWORD PTR ds:0x42c01c,0x42d000
  4012c5:	test   eax,eax
  4012c7:	jne    0x401e1f
  4012cd:	add    DWORD PTR ds:0x42b018,0x42d004
  4012d7:	push   0x42e635
  4012dc:	and    DWORD PTR ds:0x42900c,0x42a018
  4012e6:	push   edi
  4012e7:	push   edi
  4012e8:	and    DWORD PTR ds:0x42c018,0x4f5c
  4012f2:	call   ebx
  4012f4:	xor    DWORD PTR ds:0x42b00c,0x577f
  4012fe:	test   eax,eax
  401300:	jne    0x401e1f
  401306:	push   0xc
  401308:	push   0x42e659
  40130d:	xor    DWORD PTR ds:0x429018,0x2dc5
  401317:	call   esi
  401319:	mov    DWORD PTR ds:0x42d014,0x790c
  401323:	test   eax,eax
  401325:	mov    DWORD PTR ds:0x42a014,0x2892
  40132f:	jne    0x401e1f
  401335:	sub    DWORD PTR ds:0x42d004,0x3ee1
  40133f:	push   0x7
  401341:	xor    DWORD PTR ds:0x42a01c,0x42b018
  40134b:	push   0x42e66d
  401350:	and    DWORD PTR ds:0x42c018,0x42d014
  40135a:	call   esi
  40135c:	test   eax,eax
  40135e:	mov    DWORD PTR ds:0x429008,0x4095
  401368:	jne    0x401e1f
  40136e:	sub    DWORD PTR ds:0x42d008,0x42b000
  401378:	push   0x8
  40137a:	adc    DWORD PTR ds:0x42d018,0x42c00c
  401384:	push   0x42e67d
  401389:	xor    DWORD PTR ds:0x42c014,0x7b1e
  401393:	call   esi
  401395:	test   eax,eax
  401397:	mov    DWORD PTR ds:0x42c010,0x4421
  4013a1:	jne    0x401e1f
  4013a7:	push   0x42e68d
  4013ac:	xor    DWORD PTR ds:0x42d018,0x31e9
  4013b6:	push   edi
  4013b7:	push   edi
  4013b8:	dec    DWORD PTR ds:0x42b010
  4013be:	call   DWORD PTR ds:0x42ed79
  4013c4:	test   eax,eax
  4013c6:	mov    DWORD PTR ds:0x429008,0x30d5
  4013d0:	jne    0x401e1f
  4013d6:	push   0x42e69d
  4013db:	push   edi
  4013dc:	adc    DWORD PTR ds:0x42c018,0x42d014
  4013e6:	push   edi
  4013e7:	sbb    DWORD PTR ds:0x429024,0x42b00c
  4013f1:	call   ebx
  4013f3:	xor    DWORD PTR ds:0x42b004,0x3165
  4013fd:	test   eax,eax
  4013ff:	mov    DWORD PTR ds:0x429028,0x3c76
  401409:	jne    0x401e1f
  40140f:	push   0xc
  401411:	or     DWORD PTR ds:0x42d000,0x42c004
  40141b:	push   0x42e6c1
  401420:	call   esi
  401422:	test   eax,eax
  401424:	mov    DWORD PTR ds:0x42d01c,0x6bbc
  40142e:	jne    0x401e1f
  401434:	and    DWORD PTR ds:0x42c018,0x24ff
  40143e:	push   0x7
  401440:	push   0x42e6d5
  401445:	add    DWORD PTR ds:0x42c008,0x429024
  40144f:	call   esi
  401451:	adc    DWORD PTR ds:0x429008,0x42b004
  40145b:	test   eax,eax
  40145d:	jne    0x401e1f
  401463:	push   0x8
  401465:	push   0x42e6e5
  40146a:	or     DWORD PTR ds:0x42a00c,0x2f15
  401474:	call   esi
  401476:	test   eax,eax
  401478:	jne    0x401e1f
  40147e:	push   0x42e6f5
  401483:	push   edi
  401484:	add    DWORD PTR ds:0x42a008,0x52fe
  40148e:	push   edi
  40148f:	call   DWORD PTR ds:0x42ed79
  401495:	sub    DWORD PTR ds:0x429018,0x42c010
  40149f:	test   eax,eax
  4014a1:	mov    DWORD PTR ds:0x42d014,0x5fc2
  4014ab:	jne    0x401e1f
  4014b1:	push   0x42e705
  4014b6:	add    DWORD PTR ds:0x42b014,0x42a00c
  4014c0:	push   edi
  4014c1:	push   edi
  4014c2:	xor    DWORD PTR ds:0x42b00c,0x37e4
  4014cc:	call   ebx
  4014ce:	mov    DWORD PTR ds:0x429000,0x2bcb
  4014d8:	test   eax,eax
  4014da:	jne    0x401e1f
  4014e0:	push   0xc
  4014e2:	push   0x42e729
  4014e7:	call   esi
  4014e9:	and    DWORD PTR ds:0x42b000,0x6be4
  4014f3:	test   eax,eax
  4014f5:	mov    DWORD PTR ds:0x42b00c,0x4954
  4014ff:	jne    0x401e1f
  401505:	or     DWORD PTR ds:0x429004,0x2e1b
  40150f:	push   0x7
  401511:	push   0x42e73d
  401516:	neg    DWORD PTR ds:0x429018
  40151c:	call   esi
  40151e:	or     DWORD PTR ds:0x429004,0x7cc8
  401528:	test   eax,eax
  40152a:	mov    DWORD PTR ds:0x42a000,0x4af4
  401534:	jne    0x401e1f
  40153a:	sub    DWORD PTR ds:0x429020,0x6067
  401544:	push   0x8
  401546:	push   0x42e74d
  40154b:	call   esi
  40154d:	test   eax,eax
  40154f:	jne    0x401e1f
  401555:	xor    DWORD PTR ds:0x429008,0x42a00c
  40155f:	push   0x42e75d
  401564:	push   edi
  401565:	sbb    DWORD PTR ds:0x42a004,0x429028
  40156f:	push   edi
  401570:	adc    DWORD PTR ds:0x42c000,0x42b004
  40157a:	call   DWORD PTR ds:0x42ed79
  401580:	xor    DWORD PTR ds:0x42b01c,0x42d004
  40158a:	test   eax,eax
  40158c:	mov    DWORD PTR ds:0x429004,0x6f0c
  401596:	jne    0x401e1f
  40159c:	sbb    DWORD PTR ds:0x429010,0x42b010
  4015a6:	push   0x42e76d
  4015ab:	push   edi
  4015ac:	xor    DWORD PTR ds:0x42c000,0x17e1
  4015b6:	push   edi
  4015b7:	add    DWORD PTR ds:0x429024,0x42b018
  4015c1:	call   ebx
  4015c3:	sbb    DWORD PTR ds:0x42c004,0x42b018
  4015cd:	test   eax,eax
  4015cf:	jne    0x401e1f
  4015d5:	or     DWORD PTR ds:0x42d008,0x42d000
  4015df:	push   0xc
  4015e1:	push   0x42e791
  4015e6:	adc    DWORD PTR ds:0x42d01c,0x429000
  4015f0:	call   esi
  4015f2:	test   eax,eax
  4015f4:	jne    0x401e1f
  4015fa:	sbb    DWORD PTR ds:0x42b01c,0x35f4
  401604:	push   0x7
  401606:	adc    DWORD PTR ds:0x42d00c,0x4213
  401610:	push   0x42e7a5
  401615:	xor    DWORD PTR ds:0x42b01c,0x728b
  40161f:	call   esi
  401621:	test   eax,eax
  401623:	mov    DWORD PTR ds:0x429010,0x1355
  40162d:	jne    0x401e1f
  401633:	add    DWORD PTR ds:0x42c00c,0x42d000
  40163d:	push   0x8
  40163f:	sub    DWORD PTR ds:0x42d000,0x42a014
  401649:	push   0x42e7b5
  40164e:	xor    DWORD PTR ds:0x42900c,0x42a014
  401658:	call   esi
  40165a:	add    DWORD PTR ds:0x42d018,0x7270
  401664:	test   eax,eax
  401666:	jne    0x401e1f
  40166c:	xor    DWORD PTR ds:0x429028,0x318
  401676:	push   0x42e7c5
  40167b:	not    DWORD PTR ds:0x42b00c
  401681:	push   edi
  401682:	and    DWORD PTR ds:0x429024,0x42d004
  40168c:	push   edi
  40168d:	call   DWORD PTR ds:0x42ed79
  401693:	test   eax,eax
  401695:	jne    0x401e1f
  40169b:	push   0x42e7d5
  4016a0:	push   edi
  4016a1:	push   edi
  4016a2:	xor    DWORD PTR ds:0x42d004,0x42b004
  4016ac:	call   ebx
  4016ae:	sbb    DWORD PTR ds:0x42d01c,0x42a008
  4016b8:	test   eax,eax
  4016ba:	mov    DWORD PTR ds:0x42b008,0x59c6
  4016c4:	jne    0x401e1f
  4016ca:	mov    DWORD PTR ds:0x42a008,0x78fc
  4016d4:	push   0xc
  4016d6:	add    DWORD PTR ds:0x42900c,0x42c018
  4016e0:	push   0x42e7f9
  4016e5:	call   esi
  4016e7:	test   eax,eax
  4016e9:	jne    0x401e1f
  4016ef:	and    DWORD PTR ds:0x42d010,0x3029
  4016f9:	push   0x7
  4016fb:	xor    DWORD PTR ds:0x42d008,0x429020
  401705:	push   0x42e80d
  40170a:	call   esi
  40170c:	sub    DWORD PTR ds:0x42901c,0x49cd
  401716:	test   eax,eax
  401718:	mov    DWORD PTR ds:0x42900c,0x2477
  401722:	jne    0x401e1f
  401728:	push   0x8
  40172a:	push   0x42e81d
  40172f:	call   esi
  401731:	or     DWORD PTR ds:0x42c000,0x42b014
  40173b:	test   eax,eax
  40173d:	jne    0x401e1f
  401743:	sub    DWORD PTR ds:0x429018,0x4202
  40174d:	push   0x42e82d
  401752:	adc    DWORD PTR ds:0x42a000,0x15e
  40175c:	push   edi
  40175d:	push   edi
  40175e:	and    DWORD PTR ds:0x42d008,0x1b79
  401768:	call   DWORD PTR ds:0x42ed79
  40176e:	add    DWORD PTR ds:0x42b008,0x42c000
  401778:	test   eax,eax
  40177a:	mov    DWORD PTR ds:0x429004,0x4fab
  401784:	jne    0x401e1f
  40178a:	add    DWORD PTR ds:0x42b008,0x429018
  401794:	push   0x42e83d
  401799:	push   edi
  40179a:	adc    DWORD PTR ds:0x42d018,0x42b008
  4017a4:	push   edi
  4017a5:	call   ebx
  4017a7:	adc    DWORD PTR ds:0x42b01c,0x42a014
  4017b1:	test   eax,eax
  4017b3:	mov    DWORD PTR ds:0x42b008,0x413c
  4017bd:	jne    0x401e1f
  4017c3:	sub    DWORD PTR ds:0x42a004,0x429004
  4017cd:	push   0xc
  4017cf:	push   0x42e861
  4017d4:	sub    DWORD PTR ds:0x42b014,0x419d
  4017de:	call   esi
  4017e0:	sub    DWORD PTR ds:0x429014,0x429024
  4017ea:	test   eax,eax
  4017ec:	mov    DWORD PTR ds:0x42c018,0x3584
  4017f6:	jne    0x401e1f
  4017fc:	adc    DWORD PTR ds:0x42b014,0x3845
  401806:	push   0x7
  401808:	adc    DWORD PTR ds:0x42b014,0x5918
  401812:	push   0x42e875
  401817:	call   esi
  401819:	or     DWORD PTR ds:0x42b004,0x42a000
  401823:	test   eax,eax
  401825:	jne    0x401e1f
  40182b:	sub    DWORD PTR ds:0x42c010,0x7a9b
  401835:	push   0x8
  401837:	push   0x42e885
  40183c:	call   esi
  40183e:	or     DWORD PTR ds:0x42b018,0x42a018
  401848:	test   eax,eax
  40184a:	mov    DWORD PTR ds:0x42c018,0x6db6
  401854:	jne    0x401e1f
  40185a:	push   0x42e895
  40185f:	push   edi
  401860:	push   edi
  401861:	or     DWORD PTR ds:0x429024,0x42b004
  40186b:	call   DWORD PTR ds:0x42ed79
  401871:	test   eax,eax
  401873:	jne    0x401e1f
  401879:	push   0x42e8a5
  40187e:	mov    DWORD PTR ds:0x42d010,0x708e
  401888:	push   edi
  401889:	mov    DWORD PTR ds:0x42c01c,0x7ef
  401893:	push   edi
  401894:	call   ebx
  401896:	test   eax,eax
  401898:	mov    DWORD PTR ds:0x42a00c,0x3b87
  4018a2:	jne    0x401e1f
  4018a8:	mov    DWORD PTR ds:0x429004,0x503
  4018b2:	push   0xc
  4018b4:	xor    DWORD PTR ds:0x42c00c,0x6b3b
  4018be:	push   0x42e8c9
  4018c3:	call   esi
  4018c5:	test   eax,eax
  4018c7:	mov    DWORD PTR ds:0x42a004,0x812
  4018d1:	jne    0x401e1f
  4018d7:	push   0x7
  4018d9:	sub    DWORD PTR ds:0x42b000,0x42a00c
  4018e3:	push   0x42e8dd
  4018e8:	sub    DWORD PTR ds:0x42d008,0x6a91
  4018f2:	call   esi
  4018f4:	add    DWORD PTR ds:0x429000,0x3ce6
  4018fe:	test   eax,eax
  401900:	mov    DWORD PTR ds:0x42d018,0x1a2
  40190a:	jne    0x401e1f
  401910:	sub    DWORD PTR ds:0x42a008,0x42a010
  40191a:	push   0x8
  40191c:	push   0x42e8ed
  401921:	call   esi
  401923:	sub    DWORD PTR ds:0x42d00c,0x42900c
  40192d:	test   eax,eax
  40192f:	mov    DWORD PTR ds:0x429000,0x18ec
  401939:	jne    0x401e1f
  40193f:	sbb    DWORD PTR ds:0x42a01c,0x42a004
  401949:	push   0x42e8fd
  40194e:	adc    DWORD PTR ds:0x42c010,0x1027
  401958:	push   edi
  401959:	adc    DWORD PTR ds:0x42d014,0x61c0
  401963:	push   edi
  401964:	xor    DWORD PTR ds:0x42d004,0x42b000
  40196e:	call   DWORD PTR ds:0x42ed79
  401974:	and    DWORD PTR ds:0x42b00c,0x54e0
  40197e:	test   eax,eax
  401980:	jne    0x401e1f
  401986:	mov    DWORD PTR ds:0x42b014,0x48d
  401990:	push   0x42e90d
  401995:	xor    DWORD PTR ds:0x42b00c,0x429000
  40199f:	push   edi
  4019a0:	xor    DWORD PTR ds:0x42c008,0x7d0d
  4019aa:	push   edi
  4019ab:	and    DWORD PTR ds:0x42b010,0xad4
  4019b5:	call   ebx
  4019b7:	adc    DWORD PTR ds:0x42b01c,0x42d018
  4019c1:	test   eax,eax
  4019c3:	mov    DWORD PTR ds:0x42a00c,0x2f29
  4019cd:	jne    0x401e1f
  4019d3:	sub    DWORD PTR ds:0x42a010,0x429014
  4019dd:	push   0xc
  4019df:	add    DWORD PTR ds:0x42d004,0x38f3
  4019e9:	push   0x42e931
  4019ee:	sub    DWORD PTR ds:0x42d008,0x531f
  4019f8:	call   esi
  4019fa:	xor    DWORD PTR ds:0x42a00c,0x1332
  401a04:	test   eax,eax
  401a06:	jne    0x401e1f
  401a0c:	add    DWORD PTR ds:0x42d014,0x42b000
  401a16:	push   0x7
  401a18:	push   0x42e945
  401a1d:	adc    DWORD PTR ds:0x429028,0x23cf
  401a27:	call   esi
  401a29:	test   eax,eax
  401a2b:	jne    0x401e1f
  401a31:	push   0x8
  401a33:	add    DWORD PTR ds:0x429020,0x607a
  401a3d:	push   0x42e955
  401a42:	call   esi
  401a44:	or     DWORD PTR ds:0x42c000,0x42b00c
  401a4e:	test   eax,eax
  401a50:	mov    DWORD PTR ds:0x42c00c,0x4ca0
  401a5a:	jne    0x401e1f
  401a60:	sub    DWORD PTR ds:0x429000,0x42d010
  401a6a:	push   0x42e965
  401a6f:	push   edi
  401a70:	and    DWORD PTR ds:0x42901c,0x42a004
  401a7a:	push   edi
  401a7b:	xor    DWORD PTR ds:0x42b018,0x42a008
  401a85:	call   DWORD PTR ds:0x42ed79
  401a8b:	adc    DWORD PTR ds:0x42d004,0x42901c
  401a95:	test   eax,eax
  401a97:	mov    DWORD PTR ds:0x42c010,0x64f7
  401aa1:	jne    0x401e1f
  401aa7:	push   0x42e975
  401aac:	mov    DWORD PTR ds:0x42a014,0x62f7
  401ab6:	push   edi
  401ab7:	push   edi
  401ab8:	call   ebx
  401aba:	add    DWORD PTR ds:0x42a018,0x42d01c
  401ac4:	test   eax,eax
  401ac6:	mov    DWORD PTR ds:0x42c01c,0x72ca
  401ad0:	jne    0x401e1f
  401ad6:	mov    DWORD PTR ds:0x42c01c,0x7760
  401ae0:	push   0xc
  401ae2:	sub    DWORD PTR ds:0x42b018,0x3ed8
  401aec:	push   0x42e999
  401af1:	call   esi
  401af3:	test   eax,eax
  401af5:	mov    DWORD PTR ds:0x42d018,0x4329
  401aff:	jne    0x401e1f
  401b05:	push   0x7
  401b07:	push   0x42e9ad
  401b0c:	call   esi
  401b0e:	add    DWORD PTR ds:0x42b01c,0x42d008
  401b18:	test   eax,eax
  401b1a:	jne    0x401e1f
  401b20:	add    DWORD PTR ds:0x42a008,0x5e0b
  401b2a:	push   0x8
  401b2c:	sub    DWORD PTR ds:0x429018,0x42a00c
  401b36:	push   0x42e9bd
  401b3b:	call   esi
  401b3d:	test   eax,eax
  401b3f:	mov    DWORD PTR ds:0x42d008,0x514f
  401b49:	jne    0x401e1f
  401b4f:	sbb    DWORD PTR ds:0x42b000,0x42d000
  401b59:	push   0x42e9cd
  401b5e:	xor    DWORD PTR ds:0x42c018,0x40e4
  401b68:	push   edi
  401b69:	add    DWORD PTR ds:0x42b010,0x42c000
  401b73:	push   edi
  401b74:	add    DWORD PTR ds:0x42d004,0x42c010
  401b7e:	call   DWORD PTR ds:0x42ed79
  401b84:	mov    DWORD PTR ds:0x42a000,0x51c5
  401b8e:	test   eax,eax
  401b90:	mov    DWORD PTR ds:0x42b000,0x17c8
  401b9a:	jne    0x401e1f
  401ba0:	and    DWORD PTR ds:0x42d014,0x42d010
  401baa:	push   0x42e9dd
  401baf:	push   edi
  401bb0:	push   edi
  401bb1:	call   ebx
  401bb3:	sbb    DWORD PTR ds:0x429010,0x42b014
  401bbd:	test   eax,eax
  401bbf:	mov    DWORD PTR ds:0x42c01c,0x73a3
  401bc9:	jne    0x401e1f
  401bcf:	xor    DWORD PTR ds:0x42c01c,0x6e0
  401bd9:	push   0xc
  401bdb:	adc    DWORD PTR ds:0x429008,0x42c008
  401be5:	push   0x42ea01
  401bea:	adc    DWORD PTR ds:0x42901c,0x2688
  401bf4:	call   esi
  401bf6:	add    DWORD PTR ds:0x42c008,0x63eb
  401c00:	test   eax,eax
  401c02:	mov    DWORD PTR ds:0x429004,0x7742
  401c0c:	jne    0x401e1f
  401c12:	adc    DWORD PTR ds:0x42c014,0x42b008
  401c1c:	push   0x7
  401c1e:	adc    DWORD PTR ds:0x42c008,0x42b010
  401c28:	push   0x42ea15
  401c2d:	call   esi
  401c2f:	test   eax,eax
  401c31:	mov    DWORD PTR ds:0x42900c,0x5c79
  401c3b:	jne    0x401e1f
  401c41:	adc    DWORD PTR ds:0x42d008,0x429000
  401c4b:	push   0x8
  401c4d:	xor    DWORD PTR ds:0x42c008,0x42b014
  401c57:	push   0x42ea25
  401c5c:	sub    DWORD PTR ds:0x42d000,0x42b01c
  401c66:	call   esi
  401c68:	xor    DWORD PTR ds:0x429008,0x42a00c
  401c72:	test   eax,eax
  401c74:	jne    0x401e1f
  401c7a:	push   0x42ea35
  401c7f:	adc    DWORD PTR ds:0x429020,0x1586
  401c89:	push   edi
  401c8a:	push   edi
  401c8b:	and    DWORD PTR ds:0x429008,0x42a014
  401c95:	call   DWORD PTR ds:0x42ed79
  401c9b:	and    DWORD PTR ds:0x42a01c,0x429000
  401ca5:	test   eax,eax
  401ca7:	jne    0x401e1f
  401cad:	push   0x42ea45
  401cb2:	push   edi
  401cb3:	sub    DWORD PTR ds:0x42d000,0x429000
  401cbd:	push   edi
  401cbe:	call   ebx
  401cc0:	test   eax,eax
  401cc2:	jne    0x401e1f
  401cc8:	push   0xc
  401cca:	push   0x42ea69
  401ccf:	sbb    DWORD PTR ds:0x42a004,0x42a014
  401cd9:	call   esi
  401cdb:	test   eax,eax
  401cdd:	mov    DWORD PTR ds:0x42a018,0x57a5
  401ce7:	jne    0x401e1f
  401ced:	sub    DWORD PTR ds:0x42d018,0x45f
  401cf7:	push   0x7
  401cf9:	push   0x42ea7d
  401cfe:	call   esi
  401d00:	test   eax,eax
  401d02:	mov    DWORD PTR ds:0x42a010,0x77f7
  401d0c:	jne    0x401e1f
  401d12:	adc    DWORD PTR ds:0x42a008,0x42900c
  401d1c:	push   0x8
  401d1e:	sub    DWORD PTR ds:0x429008,0x429014
  401d28:	push   0x42ea8d
  401d2d:	and    DWORD PTR ds:0x429008,0x429018
  401d37:	call   esi
  401d39:	test   eax,eax
  401d3b:	mov    DWORD PTR ds:0x429000,0x2cbb
  401d45:	jne    0x401e1f
  401d4b:	and    DWORD PTR ds:0x42d01c,0x42b000
  401d55:	push   0x42ea9d
  401d5a:	or     DWORD PTR ds:0x42b010,0x58c8
  401d64:	push   edi
  401d65:	or     DWORD PTR ds:0x42c00c,0x42a00c
  401d6f:	push   edi
  401d70:	adc    DWORD PTR ds:0x42b004,0x42a01c
  401d7a:	call   DWORD PTR ds:0x42ed79
  401d80:	and    DWORD PTR ds:0x429020,0x42b000
  401d8a:	test   eax,eax
  401d8c:	jne    0x401e1f
  401d92:	or     DWORD PTR ds:0x42c01c,0x42b01c
  401d9c:	push   0x42eaad
  401da1:	push   edi
  401da2:	push   edi
  401da3:	call   ebx
  401da5:	sbb    DWORD PTR ds:0x42901c,0x42c01c
  401daf:	test   eax,eax
  401db1:	mov    DWORD PTR ds:0x429018,0x129d
  401dbb:	jne    0x401e1f
  401dc1:	sbb    DWORD PTR ds:0x42a004,0x14a1
  401dcb:	push   0xc
  401dcd:	push   0x42ead1
  401dd2:	call   esi
  401dd4:	sbb    DWORD PTR ds:0x42c00c,0x67e3
  401dde:	test   eax,eax
  401de0:	mov    DWORD PTR ds:0x42c014,0x5d4a
  401dea:	jne    0x401e1f
  401df0:	sbb    DWORD PTR ds:0x42c00c,0x7769
  401dfa:	push   0x7
  401dfc:	or     DWORD PTR ds:0x42b00c,0x1035
  401e06:	push   0x42eae5
  401e0b:	call   esi
  401e0d:	test   eax,eax
  401e0f:	mov    DWORD PTR ds:0x42d014,0xf4
  401e19:	je     0x401e3a
  401e1f:	sub    DWORD PTR ds:0x42b01c,0x42b000
  401e29:	xor    eax,eax
  401e2b:	mov    DWORD PTR ds:0x42c018,0x7f86
  401e35:	jmp    0x4029a2
  401e3a:	or     esi,DWORD PTR ds:0x429020
  401e40:	mov    DWORD PTR [ebp-0x10],0x0
  401e47:	movzx  esi,BYTE PTR ds:0x42d010
  401e4e:	add    DWORD PTR ds:0x42c004,esi
  401e54:	mov    eax,DWORD PTR [ebp-0x24]
  401e57:	dec    esi
  401e58:	mov    DWORD PTR [ebp-0x24],eax
  401e5b:	mov    ecx,0xf89c85b5
  401e60:	mov    edi,DWORD PTR ds:0x411fc4
  401e66:	mov    esi,DWORD PTR ds:0x411f58
  401e6c:	sub    esi,edi
  401e6e:	imul   edi,DWORD PTR [edi+esi*1]
  401e72:	mov    DWORD PTR [ebp-0x8],ecx
  401e75:	mov    DWORD PTR [ebp-0xc],0xf89c85b2
  401e7c:	and    DWORD PTR ds:0x42a004,0x0
  401e86:	jmp    0x401e98
  401e8b:	mov    edi,DWORD PTR ds:0x42a004
  401e91:	inc    edi
  401e92:	mov    DWORD PTR ds:0x42a004,edi
  401e98:	cmp    DWORD PTR ds:0x42a004,0x1c
  401e9f:	jae    0x401ed2
  401ea5:	cmp    DWORD PTR ds:0x42a004,0x25
  401eac:	jne    0x401ec3
  401eb2:	push   DWORD PTR [ebp-0x14]
  401eb5:	push   0x42a004
  401eba:	push   DWORD PTR [ebp-0x1c]
  401ebd:	call   DWORD PTR ds:0x42ed39
  401ec3:	jmp    0x401e8b
  401ec8:	sbb    DWORD PTR ds:0x42d000,0x3f97
  401ed2:	lea    eax,[ebp-0x34]
  401ed5:	mov    DWORD PTR [ebp-0x28],eax
  401ed8:	mov    esi,DWORD PTR ds:0x429018
  401ede:	and    esi,DWORD PTR ds:0x42901c
  401ee4:	mov    DWORD PTR ds:0x429018,esi
  401eea:	lea    eax,[ebp-0x30]
  401eed:	mov    DWORD PTR [ebp-0x1c],eax
  401ef0:	sub    DWORD PTR ds:0x429018,0x2a07
  401efa:	mov    eax,ds:0x42e435
  401eff:	mov    eax,DWORD PTR [eax+0x1c8]
  401f05:	or     DWORD PTR ds:0x429028,0x42b010
  401f0f:	mov    eax,DWORD PTR [eax]
  401f11:	mov    edx,DWORD PTR [ebp-0x1c]
  401f14:	mov    esi,0x7510896
  401f19:	adc    DWORD PTR ds:0x429014,edi
  401f1f:	xor    eax,esi
  401f21:	mov    edi,0x3272dd
  401f26:	add    eax,edi
  401f28:	mov    DWORD PTR ds:0x42d008,0xdc
  401f32:	mov    DWORD PTR [edx],eax
  401f34:	mov    eax,ds:0x42b000
  401f39:	mov    eax,ds:0x42ebcd
  401f3e:	cmp    eax,0x312bc9f6
  401f43:	jne    0x40206d
  401f49:	xor    eax,0x6ec6
  401f4e:	mov    eax,DWORD PTR [ebp-0x8]
  401f51:	mov    edx,DWORD PTR ds:0x42e435
  401f57:	or     DWORD PTR ds:0x42901c,0x3e24
  401f61:	mov    edx,DWORD PTR [edx+0x198]
  401f67:	or     DWORD PTR ds:0x42b018,edx
  401f6d:	xor    eax,esi
  401f6f:	and    ebx,0x7b5c
  401f75:	add    eax,edi
  401f77:	and    DWORD PTR ds:0x429028,0x0
  401f81:	jmp    0x401f93
  401f86:	mov    ebx,DWORD PTR ds:0x429028
  401f8c:	inc    ebx
  401f8d:	mov    DWORD PTR ds:0x429028,ebx
  401f93:	cmp    DWORD PTR ds:0x429028,0x10
  401f9a:	jae    0x401fc8
  401fa0:	cmp    DWORD PTR ds:0x429028,0x12
  401fa7:	jne    0x401fbd
  401fad:	push   0x42e010
  401fb2:	push   0x42e0c5
  401fb7:	call   DWORD PTR ds:0x42ed3d
  401fbd:	jmp    0x401f86
  401fc2:	sub    DWORD PTR ds:0x42c014,edx
  401fc8:	mov    DWORD PTR [edx],eax
  401fca:	sbb    DWORD PTR ds:0x42c014,edi
  401fd0:	mov    eax,DWORD PTR [ebp-0x8]
  401fd3:	mov    DWORD PTR ds:0x42c018,0x1d
  401fdd:	cmp    DWORD PTR ds:0x42c018,0x0
  401fe4:	je     0x402064
  401fea:	cmp    DWORD PTR ds:0x42c018,0x26
  401ff1:	jne    0x40200a
  401ff7:	push   0x887e
  401ffc:	push   0x81aa
  402001:	push   DWORD PTR [ebp-0x1c]
  402004:	call   DWORD PTR ds:0x42ed41
  40200a:	mov    ebx,DWORD PTR ds:0x42c018
  402010:	dec    ebx
  402011:	mov    DWORD PTR ds:0x42c018,ebx
  402017:	jmp    0x401fdd
  40201c:	and    DWORD PTR ds:0x42a018,0x0
  402026:	mov    ebx,DWORD PTR ds:0x42a018
  40202c:	inc    ebx
  40202d:	mov    DWORD PTR ds:0x42a018,ebx
  402033:	cmp    DWORD PTR ds:0x42a018,0x27
  40203a:	jne    0x402051
  402040:	push   DWORD PTR [ebp-0x10]
  402043:	push   0x429008
  402048:	push   DWORD PTR [ebp-0xc]
  40204b:	call   DWORD PTR ds:0x42ed45
  402051:	cmp    DWORD PTR ds:0x42a018,0x17
  402058:	jb     0x402026
  40205e:	xor    ebx,0x6fac
  402064:	xor    eax,esi
  402066:	add    eax,edi
  402068:	mov    ds:0x42ebcd,eax
  40206d:	sub    ebx,ebx
  40206f:	mov    eax,ds:0x42e435
  402074:	mov    eax,DWORD PTR [eax+0x18c]
  40207a:	sbb    DWORD PTR ds:0x42c004,ecx
  402080:	mov    eax,DWORD PTR [eax]
  402082:	mov    DWORD PTR [ebp-0x68],eax
  402085:	or     DWORD PTR ds:0x42900c,0x1063
  40208f:	mov    ebx,0xf89c85b1
  402094:	mov    DWORD PTR [ebp-0x10],ebx
  402097:	dec    DWORD PTR ds:0x429024
  40209d:	mov    DWORD PTR [ebp-0x10],ebx
  4020a0:	sub    DWORD PTR ds:0x429028,0x6632
  4020aa:	mov    DWORD PTR [ebp-0x10],ebx
  4020ad:	and    DWORD PTR ds:0x42b018,0x42a00c
  4020b7:	mov    DWORD PTR [ebp-0x1c],ecx
  4020ba:	mov    DWORD PTR [ebp-0x10],ebx
  4020bd:	add    DWORD PTR ds:0x42a008,0x61a5
  4020c7:	mov    DWORD PTR [ebp-0x10],0xf89c85bd
  4020ce:	adc    DWORD PTR ds:0x42a004,0x6791
  4020d8:	mov    eax,DWORD PTR [ebp-0x8]
  4020db:	and    DWORD PTR ds:0x42d008,0x429018
  4020e5:	xor    eax,esi
  4020e7:	add    eax,edi
  4020e9:	mov    DWORD PTR ds:0x42c00c,0x48a6
  4020f3:	jmp    0x4022be
  4020f8:	add    eax,eax
  4020fa:	mov    eax,DWORD PTR [ebp-0xc]
  4020fd:	adc    DWORD PTR ds:0x42c000,0x10b0
  402107:	mov    ecx,DWORD PTR [ebp-0x18]
  40210a:	xor    eax,esi
  40210c:	sub    DWORD PTR ds:0x42b00c,0x42a004
  402116:	lea    eax,[eax+ecx*1+0x3272dd]
  40211d:	push   eax
  40211e:	mov    DWORD PTR ds:0x42a014,0x1b
  402128:	cmp    DWORD PTR ds:0x42a014,0x0
  40212f:	je     0x40217e
  402135:	cmp    DWORD PTR ds:0x42a014,0x6
  40213c:	jne    0x402148
  402142:	call   DWORD PTR ds:0x42ed51
  402148:	cmp    DWORD PTR ds:0x42a014,0x7
  40214f:	jne    0x402160
  402155:	mov    eax,ds:0x42a014
  40215a:	dec    eax
  40215b:	mov    ds:0x42a014,eax
  402160:	mov    eax,ds:0x42a014
  402165:	dec    eax
  402166:	mov    ds:0x42a014,eax
  40216b:	jmp    0x402128
  402170:	xor    eax,eax
  402172:	add    eax,DWORD PTR ds:0x42a008
  402178:	sub    DWORD PTR ds:0x429024,eax
  40217e:	mov    eax,DWORD PTR [ebp-0x1c]
  402181:	adc    DWORD PTR ds:0x429020,0x429028
  40218b:	xor    eax,esi
  40218d:	lea    eax,[ebp+eax*1+0x3272e5]
  402194:	push   eax
  402195:	add    DWORD PTR ds:0x42900c,0x1bda
  40219f:	mov    eax,ds:0x42e435
  4021a4:	push   DWORD PTR [eax+0x1bc]
  4021aa:	xor    DWORD PTR ds:0x42c018,0x429018
  4021b4:	call   0x4029b7
  4021b9:	and    DWORD PTR ds:0x42b018,0x0
  4021c3:	jmp    0x4021d5
  4021c8:	mov    ecx,DWORD PTR ds:0x42b018
  4021ce:	inc    ecx
  4021cf:	mov    DWORD PTR ds:0x42b018,ecx
  4021d5:	cmp    DWORD PTR ds:0x42b018,0x1d
  4021dc:	jae    0x4021fa
  4021e2:	cmp    DWORD PTR ds:0x42b018,0x27
  4021e9:	jne    0x4021f5
  4021ef:	call   DWORD PTR ds:0x42ed55
  4021f5:	jmp    0x4021c8
  4021fa:	mov    eax,DWORD PTR [ebp-0xc]
  4021fd:	mov    ecx,DWORD PTR [ebp-0x18]
  402200:	and    DWORD PTR ds:0x429010,0x0
  40220a:	mov    edx,DWORD PTR ds:0x429010
  402210:	inc    edx
  402211:	mov    DWORD PTR ds:0x429010,edx
  402217:	cmp    DWORD PTR ds:0x429010,0x9
  40221e:	jne    0x402245
  402224:	push   DWORD PTR [ebp-0x20]
  402227:	push   DWORD PTR [ebp-0x14]
  40222a:	push   0x42a010
  40222f:	push   0x39f6
  402234:	push   DWORD PTR [ebp-0x10]
  402237:	push   0x1415
  40223c:	push   DWORD PTR [ebp-0x14]
  40223f:	call   DWORD PTR ds:0x42ed59
  402245:	cmp    DWORD PTR ds:0x429010,0x8
  40224c:	jne    0x40225f
  402252:	mov    edx,DWORD PTR ds:0x429010
  402258:	inc    edx
  402259:	mov    DWORD PTR ds:0x429010,edx
  40225f:	cmp    DWORD PTR ds:0x429010,0x17
  402266:	jb     0x40220a
  40226c:	and    DWORD PTR ds:0x42d01c,0x0
  402276:	jmp    0x402288
  40227b:	mov    edx,DWORD PTR ds:0x42d01c
  402281:	inc    edx
  402282:	mov    DWORD PTR ds:0x42d01c,edx
  402288:	cmp    DWORD PTR ds:0x42d01c,0x16
  40228f:	jae    0x4022b5
  402295:	cmp    DWORD PTR ds:0x42d01c,0x1f
  40229c:	jne    0x4022b0
  4022a2:	push   DWORD PTR [ebp-0xc]
  4022a5:	push   0x42e12b
  4022aa:	call   DWORD PTR ds:0x42ed5d
  4022b0:	jmp    0x40227b
  4022b5:	xor    eax,esi
  4022b7:	lea    eax,[ecx+eax*1+0x3272dd]
  4022be:	and    DWORD PTR ds:0x429000,0x0
  4022c8:	jmp    0x4022da
  4022cd:	mov    edx,DWORD PTR ds:0x429000
  4022d3:	inc    edx
  4022d4:	mov    DWORD PTR ds:0x429000,edx
  4022da:	cmp    DWORD PTR ds:0x429000,0x1a
  4022e1:	jae    0x402370
  4022e7:	cmp    DWORD PTR ds:0x429000,0x7
  4022ee:	jne    0x402308
  4022f4:	push   0x42e196
  4022f9:	push   0x1
  4022fb:	push   0x0
  4022fd:	push   0x72dd
  402302:	call   DWORD PTR ds:0x42ed61
  402308:	cmp    DWORD PTR ds:0x429000,0x6
  40230f:	jne    0x402322
  402315:	mov    edx,DWORD PTR ds:0x429000
  40231b:	inc    edx
  40231c:	mov    DWORD PTR ds:0x429000,edx
  402322:	jmp    0x4022cd
  402327:	and    DWORD PTR ds:0x42a014,0x0
  402331:	mov    edx,DWORD PTR ds:0x42a014
  402337:	inc    edx
  402338:	mov    DWORD PTR ds:0x42a014,edx
  40233e:	cmp    DWORD PTR ds:0x42a014,0x1b
  402345:	jne    0x402359
  40234b:	push   0x42d004
  402350:	push   DWORD PTR [ebp-0x18]
  402353:	call   DWORD PTR ds:0x42ed65
  402359:	cmp    DWORD PTR ds:0x42a014,0x11
  402360:	jb     0x402331
  402366:	and    DWORD PTR ds:0x42d018,0x567b
  402370:	mov    ecx,DWORD PTR [ebp-0xc]
  402373:	xor    edx,0x27b9
  402379:	mov    edx,DWORD PTR [ebp-0xc]
  40237c:	add    DWORD PTR ds:0x42a010,0x42d014
  402386:	xor    edx,esi
  402388:	xor    ecx,esi
  40238a:	and    DWORD PTR ds:0x42c00c,0x48dd
  402394:	add    ecx,edx
  402396:	mov    edx,DWORD PTR [ebp-0xc]
  402399:	neg    DWORD PTR ds:0x42c00c
  40239f:	xor    edx,esi
  4023a1:	lea    ecx,[ecx+edx*1+0x975897]
  4023a8:	mov    DWORD PTR ds:0x42b018,0x21
  4023b2:	mov    DWORD PTR [ebp-0x18],eax
  4023b5:	mov    DWORD PTR ds:0x42a010,0x55c5
  4023bf:	cmp    eax,ecx
  4023c1:	mov    DWORD PTR ds:0x42c01c,0x1ffa
  4023cb:	jbe    0x4020f8
  4023d1:	mov    eax,DWORD PTR [ebp+0xc]
  4023d4:	mov    ds:0x42e2b9,eax
  4023d9:	mov    eax,DWORD PTR [ebp+0x10]
  4023dc:	mov    ds:0x42e50d,eax
  4023e1:	mov    eax,ds:0x42e2b9
  4023e6:	mov    ecx,DWORD PTR [ebp-0x28]
  4023e9:	sub    eax,edi
  4023eb:	xor    eax,esi
  4023ed:	mov    DWORD PTR [ecx],eax
  4023ef:	mov    eax,DWORD PTR [ebp-0x24]
  4023f2:	cmp    eax,0xf89c85b5
  4023f7:	jne    0x4024d1
  4023fd:	lea    eax,[ebp-0x38]
  402400:	mov    DWORD PTR [ebp-0x70],eax
  402403:	lea    eax,[ebp+0x4]
  402406:	mov    DWORD PTR [ebp-0x38],eax
  402409:	mov    eax,DWORD PTR [ebp-0x38]
  40240c:	test   eax,eax
  40240e:	je     0x402987
  402414:	mov    eax,DWORD PTR [ebp-0x20]
  402417:	mov    eax,DWORD PTR [ebp-0xc]
  40241a:	mov    eax,DWORD PTR [ebp-0x8]
  40241d:	mov    DWORD PTR [ebp+0xc],eax
  402420:	mov    eax,eax
  402422:	mov    eax,ds:0x42e435
  402427:	mov    eax,DWORD PTR [eax+0x1c8]
  40242d:	mov    eax,DWORD PTR [eax]
  40242f:	cdq    
  402430:	mov    ebx,eax
  402432:	mov    eax,0xfabdbeed
  402437:	add    ebx,eax
  402439:	adc    edx,0xffffffff
  40243c:	and    DWORD PTR [ebp-0x10],0x0
  402440:	xor    edx,0x0
  402443:	mov    DWORD PTR [ebp-0x54],edx
  402446:	mov    edx,DWORD PTR [ebp+0xc]
  402449:	mov    DWORD PTR [ebp-0x14],edx
  40244c:	mov    ecx,0x8a29a127
  402451:	xor    ebx,ecx
  402453:	add    DWORD PTR [ebp-0x14],eax
  402456:	mov    edx,DWORD PTR [ebp-0x14]
  402459:	adc    DWORD PTR [ebp-0x10],0xffffffff
  40245d:	xor    edx,ecx
  40245f:	mov    DWORD PTR [ebp-0x4c],edx
  402462:	mov    edx,DWORD PTR [ebp-0x10]
  402465:	xor    edx,0x0
  402468:	mov    DWORD PTR [ebp-0x48],edx
  40246b:	cmp    DWORD PTR [ebp-0x4c],ebx
  40246e:	jne    0x402480
  402474:	mov    edx,DWORD PTR [ebp-0x54]
  402477:	cmp    DWORD PTR [ebp-0x48],edx
  40247a:	je     0x4024af
  402480:	mov    edx,DWORD PTR ds:0x42e435
  402486:	mov    edx,DWORD PTR [edx+0x1c0]
  40248c:	mov    edx,DWORD PTR [edx]
  40248e:	xor    ebx,ebx
  402490:	add    edx,eax
  402492:	adc    ebx,0xffffffff
  402495:	xor    edx,ecx
  402497:	xor    ebx,0x0
  40249a:	cmp    edx,0x70941fc9
  4024a0:	jne    0x402987
  4024a6:	cmp    ebx,0xffffffff
  4024a9:	jne    0x402987
  4024af:	mov    edx,DWORD PTR ds:0x42e4b1
  4024b5:	mov    ebx,DWORD PTR ds:0x42e4b9
  4024bb:	xor    edx,ebx
  4024bd:	mov    DWORD PTR ds:0x42e4b1,edx
  4024c3:	mov    ebx,DWORD PTR ds:0x42e4b1
  4024c9:	mov    edx,DWORD PTR [ebp-0x38]
  4024cc:	jmp    0x402946
  4024d1:	mov    eax,DWORD PTR [ebp-0x34]
  4024d4:	cmp    eax,0xf89c85b2
  4024d9:	je     0x402536
  4024df:	mov    eax,DWORD PTR [ebp-0x8]
  4024e2:	mov    ecx,DWORD PTR [ebp-0x30]
  4024e5:	xor    eax,esi
  4024e7:	add    eax,edi
  4024e9:	cmp    eax,ecx
  4024eb:	je     0x402536
  4024f1:	mov    eax,ds:0x42e435
  4024f6:	mov    eax,DWORD PTR [eax+0x194]
  4024fc:	mov    ecx,DWORD PTR [eax]
  4024fe:	mov    eax,DWORD PTR [ecx+0x3c]
  402501:	push   DWORD PTR ds:0x42e50d
  402507:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  40250b:	push   DWORD PTR ds:0x42e2b9
  402511:	add    eax,ecx
  402513:	mov    ecx,DWORD PTR ds:0x42e435
  402519:	mov    ecx,DWORD PTR [ecx+0x194]
  40251f:	push   DWORD PTR [ecx]
  402521:	call   eax
  402523:	mov    ecx,DWORD PTR ds:0x42e435
  402529:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40252f:	mov    DWORD PTR [ecx],eax
  402531:	jmp    0x402987
  402536:	mov    eax,DWORD PTR [ebp-0x8]
  402539:	mov    ecx,DWORD PTR [ebp-0x68]
  40253c:	xor    eax,esi
  40253e:	add    eax,edi
  402540:	cmp    eax,ecx
  402542:	jne    0x402850
  402548:	mov    eax,DWORD PTR [ebp-0x8]
  40254b:	mov    ecx,DWORD PTR ds:0x42e435
  402551:	mov    ecx,DWORD PTR [ecx+0x198]
  402557:	xor    eax,esi
  402559:	add    eax,edi
  40255b:	cmp    eax,DWORD PTR [ecx]
  40255d:	jne    0x40257c
  402563:	mov    eax,DWORD PTR [ebp-0x8]
  402566:	push   0xf89c85b5
  40256b:	xor    eax,esi
  40256d:	add    eax,edi
  40256f:	push   eax
  402570:	push   ebx
  402571:	push   DWORD PTR [ebp-0xc]
  402574:	push   DWORD PTR [ebp-0x8]
  402577:	call   0x40a327
  40257c:	mov    eax,DWORD PTR [ebp-0xc]
  40257f:	mov    DWORD PTR [ebp-0x3c],eax
  402582:	mov    eax,DWORD PTR [ebp-0x8]
  402585:	mov    DWORD PTR [ebp-0x18],eax
  402588:	mov    eax,DWORD PTR [ebp-0x18]
  40258b:	xor    eax,esi
  40258d:	add    eax,edi
  40258f:	mov    DWORD PTR [ebp+0x10],eax
  402592:	mov    eax,ds:0x42e2b5
  402597:	mov    eax,DWORD PTR [eax]
  402599:	mov    DWORD PTR [ebp+0x10],eax
  40259c:	mov    eax,ds:0x42e4bd
  4025a1:	mov    eax,DWORD PTR [eax]
  4025a3:	mov    DWORD PTR [ebp-0x1c],eax
  4025a6:	mov    DWORD PTR [ebp+0xc],0xf89c87b5
  4025ad:	mov    eax,DWORD PTR [ebp+0xc]
  4025b0:	xor    eax,esi
  4025b2:	add    eax,edi
  4025b4:	mov    DWORD PTR [ebp+0xc],eax
  4025b7:	mov    eax,ds:0x42e435
  4025bc:	mov    DWORD PTR [ebp+0xc],eax
  4025bf:	mov    eax,DWORD PTR [ebp+0x10]
  4025c2:	mov    DWORD PTR [ebp+0xc],eax
  4025c5:	mov    eax,DWORD PTR [ebp+0xc]
  4025c8:	push   0x4
  4025ca:	pop    ecx
  4025cb:	sub    ecx,eax
  4025cd:	add    ecx,DWORD PTR [ebp-0x1c]
  4025d0:	mov    DWORD PTR [ebp-0x28],0xf89c85f5
  4025d7:	mov    DWORD PTR [ebp+0x10],ecx
  4025da:	mov    DWORD PTR [ebp-0xcc],ebx
  4025e0:	mov    eax,DWORD PTR [ebp+0xc]
  4025e3:	mov    DWORD PTR [ebp-0xc8],eax
  4025e9:	mov    eax,DWORD PTR [ebp+0x10]
  4025ec:	mov    DWORD PTR [ebp-0xc4],eax
  4025f2:	mov    eax,DWORD PTR [ebp-0x28]
  4025f5:	xor    eax,esi
  4025f7:	add    eax,edi
  4025f9:	mov    DWORD PTR [ebp-0xc0],eax
  4025ff:	lea    eax,[ebp-0x78]
  402602:	mov    DWORD PTR [ebp-0xbc],eax
  402608:	mov    eax,DWORD PTR [ebp-0xcc]
  40260e:	xor    eax,esi
  402610:	add    eax,edi
  402612:	mov    DWORD PTR [ebp-0xcc],eax
  402618:	lea    eax,[ebp-0xcc]
  40261e:	push   eax
  40261f:	mov    eax,DWORD PTR [ebp-0x3c]
  402622:	xor    eax,esi
  402624:	add    eax,edi
  402626:	push   eax
  402627:	mov    eax,ds:0x42e455
  40262c:	push   0x42e3ab
  402631:	push   DWORD PTR [eax]
  402633:	call   0x40508b
  402638:	mov    eax,DWORD PTR [ebp+0xc]
  40263b:	mov    ecx,DWORD PTR [ebp+0x10]
  40263e:	mov    DWORD PTR [ebp-0x6c],ecx
  402641:	mov    ecx,DWORD PTR [ebp-0x18]
  402644:	xor    ecx,esi
  402646:	mov    DWORD PTR [ebp-0x1c],eax
  402649:	add    ecx,edi
  40264b:	jmp    0x4027f1
  402650:	lea    edx,[ecx+eax*1]
  402653:	mov    DWORD PTR [ebp+0x10],edx
  402656:	mov    edx,DWORD PTR [ebp-0x6c]
  402659:	sub    edx,ecx
  40265b:	mov    DWORD PTR [ebp+0xc],edx
  40265e:	mov    edx,DWORD PTR [ebp+0xc]
  402661:	mov    DWORD PTR [ebp-0x40],edx
  402664:	mov    edx,DWORD PTR [ebp+0x10]
  402667:	mov    DWORD PTR [ebp-0x44],0xf89c85b5
  40266e:	mov    DWORD PTR [ebp-0x64],edx
  402671:	mov    DWORD PTR [ebp+0x10],0xf89c85b2
  402678:	mov    edx,DWORD PTR [ebp-0x44]
  40267b:	xor    edx,esi
  40267d:	add    edx,edi
  40267f:	mov    DWORD PTR [ebp+0xc],edx
  402682:	mov    edx,DWORD PTR [ebp-0x44]
  402685:	xor    edx,esi
  402687:	add    edx,edi
  402689:	mov    DWORD PTR [ebp-0x4],edx
  40268c:	mov    DWORD PTR [ebp-0x60],0xf89c85d5
  402693:	mov    DWORD PTR [ebp-0x5c],0xf89c85bc
  40269a:	mov    edx,DWORD PTR [ebp-0x44]
  40269d:	mov    ebx,DWORD PTR [ebp-0x40]
  4026a0:	xor    edx,esi
  4026a2:	add    edx,edi
  4026a4:	cmp    ebx,edx
  4026a6:	je     0x4027e5
  4026ac:	mov    eax,DWORD PTR [ebp+0x10]
  4026af:	xor    eax,esi
  4026b1:	mov    edx,0xffcd8d23
  4026b6:	sub    edx,eax
  4026b8:	add    edx,DWORD PTR [ebp-0x40]
  4026bb:	mov    eax,DWORD PTR [ebp+0x10]
  4026be:	mov    ebx,DWORD PTR [ebp+0xc]
  4026c1:	xor    eax,esi
  4026c3:	add    eax,edi
  4026c5:	imul   eax,ebx
  4026c8:	cmp    eax,edx
  4026ca:	ja     0x4027e2
  4026d0:	mov    edx,DWORD PTR [ebp+0xc]
  4026d3:	mov    eax,DWORD PTR [ebp-0x40]
  4026d6:	mov    ebx,DWORD PTR [ebp-0x60]
  4026d9:	sub    eax,edx
  4026db:	xor    ebx,esi
  4026dd:	xor    edx,edx
  4026df:	add    ebx,edi
  4026e1:	div    ebx
  4026e3:	mov    DWORD PTR [ebp-0x4],eax
  4026e6:	mov    eax,DWORD PTR [ebp-0x5c]
  4026e9:	mov    edx,DWORD PTR [ebp-0x4]
  4026ec:	xor    eax,esi
  4026ee:	add    eax,edi
  4026f0:	cmp    edx,eax
  4026f2:	jbe    0x402702
  4026f8:	mov    eax,DWORD PTR [ebp-0x5c]
  4026fb:	xor    eax,esi
  4026fd:	add    eax,edi
  4026ff:	mov    DWORD PTR [ebp-0x4],eax
  402702:	mov    eax,DWORD PTR [ebp-0x60]
  402705:	mov    edx,DWORD PTR [ebp-0x4]
  402708:	xor    eax,esi
  40270a:	add    eax,edi
  40270c:	imul   eax,edx
  40270f:	mov    DWORD PTR [ebp-0x4],eax
  402712:	mov    eax,DWORD PTR [ebp-0x44]
  402715:	mov    edx,DWORD PTR [ebp-0x4]
  402718:	xor    eax,esi
  40271a:	add    eax,edi
  40271c:	cmp    edx,eax
  40271e:	je     0x4027cb
  402724:	mov    eax,DWORD PTR [ebp-0x4]
  402727:	mov    DWORD PTR [ebp-0x24],eax
  40272a:	mov    eax,DWORD PTR [ebp+0xc]
  40272d:	add    eax,DWORD PTR [ebp-0x64]
  402730:	mov    DWORD PTR [ebp-0x28],0xf89c85b5
  402737:	mov    DWORD PTR [ebp-0x48],eax
  40273a:	mov    eax,0xf89c85b2
  40273f:	mov    DWORD PTR [ebp-0x50],eax
  402742:	mov    DWORD PTR [ebp-0x10],0xf89c85b3
  402749:	mov    DWORD PTR [ebp-0x10],0xf89c85b0
  402750:	mov    DWORD PTR [ebp-0x54],eax
  402753:	mov    eax,DWORD PTR [ebp-0x28]
  402756:	xor    eax,esi
  402758:	add    eax,edi
  40275a:	jmp    0x402787
  40275f:	mov    eax,DWORD PTR [ebp-0x54]
  402762:	mov    edx,DWORD PTR [ebp-0x4]
  402765:	xor    eax,esi
  402767:	add    eax,edi
  402769:	imul   eax,edx
  40276c:	mov    edx,DWORD PTR [ebp-0x48]
  40276f:	mov    BYTE PTR [eax+edx*1],0x0
  402773:	mov    eax,DWORD PTR [ebp-0x10]
  402776:	mov    edx,DWORD PTR [ebp-0x50]
  402779:	xor    eax,esi
  40277b:	xor    edx,esi
  40277d:	add    eax,edi
  40277f:	add    edx,edi
  402781:	imul   eax,edx
  402784:	add    eax,DWORD PTR [ebp-0x4]
  402787:	mov    DWORD PTR [ebp-0x4],eax
  40278a:	mov    eax,DWORD PTR [ebp-0x4]
  40278d:	mov    edx,DWORD PTR [ebp-0x24]
  402790:	cmp    edx,eax
  402792:	jb     0x40275f
  402798:	mov    eax,DWORD PTR [ebp-0x50]
  40279b:	mov    edx,DWORD PTR [ebp-0x24]
  40279e:	xor    eax,esi
  4027a0:	add    eax,edi
  4027a2:	imul   eax,edx
  4027a5:	mov    edx,DWORD PTR [ebp-0x28]
  4027a8:	xor    edx,esi
  4027aa:	add    edx,edi
  4027ac:	or     eax,edx
  4027ae:	mov    edx,DWORD PTR [ebp+0x10]
  4027b1:	xor    edx,esi
  4027b3:	add    eax,edx
  4027b5:	mov    edx,DWORD PTR [ebp+0x10]
  4027b8:	xor    edx,esi
  4027ba:	add    eax,edx
  4027bc:	mov    edx,DWORD PTR [ebp+0xc]
  4027bf:	lea    eax,[eax+edx*1+0x64e5ba]
  4027c6:	jmp    0x4027da
  4027cb:	mov    eax,DWORD PTR [ebp+0x10]
  4027ce:	mov    edx,DWORD PTR [ebp+0xc]
  4027d1:	xor    eax,esi
  4027d3:	lea    eax,[eax+edx*1+0x3272dd]
  4027da:	mov    DWORD PTR [ebp+0xc],eax
  4027dd:	jmp    0x4026ac
  4027e2:	mov    eax,DWORD PTR [ebp-0x1c]
  4027e5:	mov    edx,DWORD PTR [ebp-0x3c]
  4027e8:	xor    edx,esi
  4027ea:	lea    ecx,[ecx+edx*1+0x3272dd]
  4027f1:	lea    edx,[ecx-0x3272dd]
  4027f7:	xor    edx,esi
  4027f9:	cmp    edx,0xf89c95b5
  4027ff:	jne    0x402650
  402805:	mov    ecx,DWORD PTR [ebp-0x18]
  402808:	mov    edx,DWORD PTR [ebp-0x3c]
  40280b:	mov    ebx,DWORD PTR [ebp-0x18]
  40280e:	xor    edx,esi
  402810:	mov    dl,BYTE PTR [edx+eax*1+0x3272dd]
  402817:	xor    ecx,esi
  402819:	mov    cl,BYTE PTR [ecx+eax*1+0x3272dd]
  402820:	xor    ebx,esi
  402822:	mov    BYTE PTR [ebx+eax*1+0x3272dd],dl
  402829:	mov    edx,DWORD PTR [ebp-0x3c]
  40282c:	xor    edx,esi
  40282e:	mov    BYTE PTR [edx+eax*1+0x3272dd],cl
  402835:	mov    eax,DWORD PTR [ebp-0x3c]
  402838:	mov    eax,DWORD PTR [ebp-0x8]
  40283b:	xor    eax,esi
  40283d:	add    eax,edi
  40283f:	mov    ds:0x42e4b9,eax
  402844:	mov    eax,DWORD PTR [ebp-0x8]
  402847:	xor    eax,esi
  402849:	add    eax,edi
  40284b:	mov    ds:0x42e4b1,eax
  402850:	lea    eax,[ebp-0x2c]
  402853:	mov    DWORD PTR [ebp-0x88],eax
  402859:	lea    eax,[ebp+0x4]
  40285c:	mov    DWORD PTR [ebp-0x2c],eax
  40285f:	mov    eax,DWORD PTR [ebp-0x2c]
  402862:	test   eax,eax
  402864:	je     0x402987
  40286a:	mov    DWORD PTR [ebp-0x80],0xf152c3a
  402871:	mov    DWORD PTR [ebp-0x74],0x712ed0f
  402878:	mov    DWORD PTR [ebp-0x7c],0x373fc2d
  40287f:	mov    DWORD PTR [ebp-0x84],0x72670a1d
  402889:	call   0x409f81
  40288e:	mov    eax,DWORD PTR [ebp-0x20]
  402891:	mov    eax,DWORD PTR [ebp-0xc]
  402894:	mov    eax,DWORD PTR [ebp-0x8]
  402897:	mov    DWORD PTR [ebp+0xc],eax
  40289a:	mov    eax,eax
  40289c:	mov    eax,ds:0x42e435
  4028a1:	mov    eax,DWORD PTR [eax+0x1c8]
  4028a7:	mov    eax,DWORD PTR [eax]
  4028a9:	cdq    
  4028aa:	mov    ebx,eax
  4028ac:	mov    eax,0xfabdbeed
  4028b1:	add    ebx,eax
  4028b3:	adc    edx,0xffffffff
  4028b6:	and    DWORD PTR [ebp-0x10],0x0
  4028ba:	xor    edx,0x0
  4028bd:	mov    DWORD PTR [ebp-0x54],edx
  4028c0:	mov    edx,DWORD PTR [ebp+0xc]
  4028c3:	mov    DWORD PTR [ebp-0x14],edx
  4028c6:	mov    ecx,0x8a29a127
  4028cb:	xor    ebx,ecx
  4028cd:	add    DWORD PTR [ebp-0x14],eax
  4028d0:	mov    edx,DWORD PTR [ebp-0x14]
  4028d3:	adc    DWORD PTR [ebp-0x10],0xffffffff
  4028d7:	xor    edx,ecx
  4028d9:	mov    DWORD PTR [ebp-0x4c],edx
  4028dc:	mov    edx,DWORD PTR [ebp-0x10]
  4028df:	xor    edx,0x0
  4028e2:	mov    DWORD PTR [ebp-0x48],edx
  4028e5:	cmp    DWORD PTR [ebp-0x4c],ebx
  4028e8:	jne    0x4028fa
  4028ee:	mov    edx,DWORD PTR [ebp-0x54]
  4028f1:	cmp    DWORD PTR [ebp-0x48],edx
  4028f4:	je     0x402929
  4028fa:	mov    edx,DWORD PTR ds:0x42e435
  402900:	mov    edx,DWORD PTR [edx+0x1c0]
  402906:	mov    edx,DWORD PTR [edx]
  402908:	xor    ebx,ebx
  40290a:	add    edx,eax
  40290c:	adc    ebx,0xffffffff
  40290f:	xor    edx,ecx
  402911:	xor    ebx,0x0
  402914:	cmp    edx,0x70941fc9
  40291a:	jne    0x402987
  402920:	cmp    ebx,0xffffffff
  402923:	jne    0x402987
  402929:	mov    edx,DWORD PTR ds:0x42e4b1
  40292f:	mov    ebx,DWORD PTR ds:0x42e4b9
  402935:	xor    edx,ebx
  402937:	mov    DWORD PTR ds:0x42e4b1,edx
  40293d:	mov    ebx,DWORD PTR ds:0x42e4b1
  402943:	mov    edx,DWORD PTR [ebp-0x2c]
  402946:	add    DWORD PTR [edx],ebx
  402948:	mov    edx,DWORD PTR [ebp+0xc]
  40294b:	xor    esi,edx
  40294d:	mov    edx,DWORD PTR ds:0x42e4b1
  402953:	add    esi,edi
  402955:	xor    ebx,ebx
  402957:	add    esi,eax
  402959:	adc    ebx,0xffffffff
  40295c:	xor    edi,edi
  40295e:	xor    esi,ecx
  402960:	xor    ebx,0x0
  402963:	add    edx,eax
  402965:	adc    edi,0xffffffff
  402968:	xor    edx,ecx
  40296a:	xor    edi,0x0
  40296d:	cmp    edx,esi
  40296f:	jne    0x402987
  402975:	cmp    edi,ebx
  402977:	jne    0x402987
  40297d:	mov    eax,ds:0x42e4b1
  402982:	mov    ds:0x42e4b9,eax
  402987:	mov    eax,ds:0x42e435
  40298c:	push   0x4
  40298e:	add    eax,0x1cc
  402993:	push   eax
  402994:	lea    eax,[ebp-0x20]
  402997:	push   eax
  402998:	call   0x4029b7
  40299d:	mov    eax,DWORD PTR [ebp-0x20]
  4029a0:	mov    eax,DWORD PTR [eax]
  4029a2:	pop    ebx
  4029a3:	pop    edi
  4029a4:	pop    esi
  4029a5:	leave  
  4029a6:	ret    0xc
  4029a9:	xor    eax,eax
  4029ab:	adc    DWORD PTR ds:0x429018,0x42b01c
  4029b5:	inc    eax
  4029b6:	ret    
  4029b7:	push   ebp
  4029b8:	mov    ebp,esp
  4029ba:	sub    esp,0x10
  4029bd:	mov    eax,0xf89c85b5
  4029c2:	and    DWORD PTR ds:0x42a004,0x0
  4029cc:	jmp    0x4029de
  4029d1:	mov    ecx,DWORD PTR ds:0x42a004
  4029d7:	inc    ecx
  4029d8:	mov    DWORD PTR ds:0x42a004,ecx
  4029de:	cmp    DWORD PTR ds:0x42a004,0x19
  4029e5:	jae    0x402a37
  4029eb:	cmp    DWORD PTR ds:0x42a004,0x8
  4029f2:	jne    0x402a18
  4029f8:	push   0x58e0
  4029fd:	push   0x42d014
  402a02:	push   DWORD PTR [ebp-0x28]
  402a05:	push   0x42e0f3
  402a0a:	push   0x48f7
  402a0f:	push   DWORD PTR [ebp-0x28]
  402a12:	call   DWORD PTR ds:0x42ed6d
  402a18:	cmp    DWORD PTR ds:0x42a004,0x7
  402a1f:	jne    0x402a32
  402a25:	mov    ecx,DWORD PTR ds:0x42a004
  402a2b:	inc    ecx
  402a2c:	mov    DWORD PTR ds:0x42a004,ecx
  402a32:	jmp    0x4029d1
  402a37:	mov    DWORD PTR [ebp-0x4],eax
  402a3a:	mov    DWORD PTR [ebp-0x8],0xf89c85b2
  402a41:	movzx  edx,WORD PTR ds:0x42901c
  402a48:	xor    edx,DWORD PTR ds:0x429024
  402a4e:	mov    DWORD PTR ds:0x42901c,edx
  402a54:	mov    ecx,DWORD PTR [ebp-0x4]
  402a57:	sbb    edx,0x1c35
  402a5d:	push   esi
  402a5e:	mov    esi,DWORD PTR ds:0x42c01c
  402a64:	sbb    esi,DWORD PTR ds:0x42d018
  402a6a:	mov    DWORD PTR ds:0x42c01c,esi
  402a70:	mov    edx,0x7510896
  402a75:	mov    esi,DWORD PTR ds:0x42a00c
  402a7b:	add    DWORD PTR ds:0x42d008,esi
  402a81:	xor    ecx,edx
  402a83:	add    esi,DWORD PTR ds:0x429018
  402a89:	mov    esi,0x3272dd
  402a8e:	sub    DWORD PTR ds:0x42d004,0x41ed
  402a98:	push   edi
  402a99:	mov    edi,DWORD PTR [ebp+0x10]
  402a9c:	add    ecx,esi
  402a9e:	mov    DWORD PTR ds:0x42c014,0x852
  402aa8:	cmp    ecx,edi
  402aaa:	mov    DWORD PTR ds:0x42b014,0x2a3e
  402ab4:	je     0x404f9d
  402aba:	inc    ecx
  402abb:	mov    ecx,DWORD PTR [ebp-0x4]
  402abe:	and    DWORD PTR ds:0x42a010,0x0
  402ac8:	mov    edi,DWORD PTR ds:0x42a010
  402ace:	inc    edi
  402acf:	mov    DWORD PTR ds:0x42a010,edi
  402ad5:	cmp    DWORD PTR ds:0x42a010,0x2a
  402adc:	jne    0x402ae8
  402ae2:	call   DWORD PTR ds:0x42ed71
  402ae8:	cmp    DWORD PTR ds:0x42a010,0x1b
  402aef:	jb     0x402ac8
  402af5:	mov    edi,DWORD PTR ds:0x42c00c
  402afb:	sbb    DWORD PTR ds:0x42a01c,edi
  402b01:	mov    edi,DWORD PTR [ebp+0x10]
  402b04:	xor    DWORD PTR ds:0x429010,0x457d
  402b0e:	xor    eax,eax
  402b10:	xor    DWORD PTR ds:0x42c010,0x42b010
  402b1a:	xor    ecx,edx
  402b1c:	add    DWORD PTR ds:0x429028,0x1d9a
  402b26:	add    ecx,esi
  402b28:	add    edi,0xfabdbeed
  402b2e:	mov    DWORD PTR ds:0x42d014,0x7361
  402b38:	adc    eax,0xffffffff
  402b3b:	xor    eax,0x0
  402b3e:	mov    DWORD PTR [ebp-0xc],eax
  402b41:	push   ebx
  402b42:	xor    ebx,ebx
  402b44:	xor    edi,0x8a29a127
  402b4a:	mov    eax,ecx
  402b4c:	add    eax,0xfabdbeed
  402b51:	adc    ebx,0xffffffff
  402b54:	xor    eax,0x8a29a127
  402b59:	xor    ebx,0x0
  402b5c:	cmp    eax,edi
  402b5e:	jne    0x404f2f
  402b64:	cmp    ebx,DWORD PTR [ebp-0xc]
  402b67:	je     0x404f97
  402b6d:	jmp    0x404f2f
  402b72:	mov    esi,0x3272dd
  402b77:	jmp    0x404f2f
  402b7c:	jmp    0x402b15
  402b7e:	iret   
  402b7f:	push   esi
  402b80:	jae    0x402b78
  402b82:	retf   
  402b83:	xchg   edi,eax
  402b84:	mov    al,ds:0x5755e01a
  402b89:	daa    
  402b8a:	mov    al,0x5c
  402b8c:	jp     0x402c08
  402b8e:	jp     0x402c0a
  402b90:	xlat   BYTE PTR ds:[ebx]
  402b91:	pop    edi
  402b92:	jp     0x402c0e
  402b94:	adc    eax,0x1921172c
  402b99:	and    eax,0x3a652f1b
  402b9e:	imul   esp,DWORD PTR [esi+0x6e],0x6d6a6a67
  402ba5:	xor    al,ch
  402ba7:	fsubr  st(1),st
  402ba9:	push   eax
  402baa:	dec    eax
  402bab:	imul   esp,DWORD PTR [ecx+0x5b],0xffffff90
  402baf:	pusha  
  402bb0:	ins    DWORD PTR es:[edi],dx
  402bb1:	pop    ecx
  402bb2:	iret   
  402bb3:	pop    ebp
  402bb4:	dec    edx
  402bb5:	and    BYTE PTR [edx+edi*8+0x4d577687],cl
  402bbc:	jg     0x402bf5
  402bbe:	jo     0x402b66
  402bc0:	jg     0x402b62
  402bc2:	mov    ds:0x66ff2c3b,al
  402bc7:	fdiv   st(2),st
  402bc9:	push   ebx
  402bca:	jg     0x402bea
  402bcc:	in     eax,dx
  402bcd:	cmp    ebp,ecx
  402bcf:	mov    edx,0xde1387ed
  402bd4:	mov    ebp,DWORD PTR [ecx]
  402bd6:	mulps  xmm5,XMMWORD PTR [ebx+0x6df7c48a]
  402bdd:	fld    QWORD PTR [esp+edx*8]
  402be0:	push   cs
  402be1:	cli    
  402be2:	sbb    BYTE PTR es:[eax+0xc],cl
  402be6:	imul   ebp,DWORD PTR es:[eax-0x47],0xffffffaf
  402beb:	adc    eax,DWORD PTR [ecx+0x5]
  402bee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402bef:	(bad)  
  402bf0:	jmp    0x32b4573e
  402bf5:	enter  0xf95b,0x1a
  402bf9:	cli    
  402bfa:	js     0x402b9d
  402bfc:	arpl   bp,bx
  402bfe:	cwde   
  402bff:	pop    edi
  402c00:	mov    esp,DWORD PTR [ecx+0x31821407]
  402c06:	repz sahf 
  402c08:	cmp    al,0x72
  402c0a:	jae    0x402c17
  402c0c:	fisubr DWORD PTR ds:0x33348d52
  402c12:	push   esp
  402c13:	jecxz  0x402be4
  402c15:	mov    ch,BYTE PTR [ecx]
  402c17:	mov    DWORD PTR [eax+0x5188ccb7],esi
  402c1d:	in     al,0x45
  402c1f:	push   edx
  402c20:	dec    esp
  402c21:	or     al,0x3e
  402c23:	repz add ebp,DWORD PTR ss:[ebp+0x30a7ca4b]
  402c2b:	rol    BYTE PTR [esi+edx*2],0xfd
  402c2f:	push   edx
  402c30:	push   esi
  402c31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402c32:	stc    
  402c33:	push   0x1542f8bf
  402c38:	mov    ah,0x57
  402c3a:	add    cl,ah
  402c3c:	jle    0x402bdb
  402c3e:	ins    DWORD PTR es:[edi],dx
  402c3f:	xor    al,0x3e
  402c41:	xor    eax,0x63eb3cd9
  402c46:	add    dl,BYTE PTR [eax-0x2b22e09e]
  402c4c:	outs   dx,DWORD PTR ds:[esi]
  402c4d:	test   esp,ecx
  402c4f:	or     eax,0xcec5bc2f
  402c54:	frstor [eax]
  402c56:	sub    ah,BYTE PTR [ebx*4+0xaec7bfd]
  402c5d:	(bad)  
  402c5e:	or     DWORD PTR [edx],ebp
  402c60:	lods   eax,DWORD PTR ds:[esi]
  402c61:	mov    dl,BYTE PTR [esi]
  402c63:	int3   
  402c64:	adc    eax,0xddbae0c5
  402c69:	popf   
  402c6a:	loop   0x402cb2
  402c6c:	inc    edi
  402c6d:	xor    al,0x7e
  402c6f:	cld    
  402c70:	aad    0x49
  402c72:	test   BYTE PTR [edi],0x9c
  402c75:	xchg   esp,eax
  402c76:	leave  
  402c77:	dec    eax
  402c78:	out    dx,al
  402c79:	neg    BYTE PTR [edi]
  402c7b:	jae    0x402c51
  402c7d:	mov    esi,0xfb18e1fd
  402c82:	cmc    
  402c83:	das    
  402c84:	out    0xae,al
  402c86:	inc    esi
  402c87:	xchg   esp,eax
  402c88:	fmul   DWORD PTR [ecx]
  402c8a:	jg     0x402c51
  402c8c:	pusha  
  402c8d:	test   eax,0x4ad9058b
  402c92:	fld    DWORD PTR [ebx+0xe8ad46b]
  402c98:	sub    al,0x53
  402c9a:	retf   
  402c9b:	cmp    eax,0x5249ea83
  402ca0:	fnsave [eax+0x74]
  402ca3:	out    0xdf,eax
  402ca5:	sbb    eax,0x204fd20a
  402caa:	pop    ss
  402cab:	pop    ds
  402cac:	sub    al,0x93
  402cae:	mov    WORD PTR [ebx],es
  402cb0:	cmp    al,BYTE PTR [eax]
  402cb2:	cwde   
  402cb3:	add    ah,0x45
  402cb6:	mov    cl,BYTE PTR [edi+ebp*2+0x282af86f]
  402cbd:	aad    0x21
  402cbf:	mov    WORD PTR [ecx],gs
  402cc1:	loopne 0x402c55
  402cc3:	enter  0x462b,0x67
  402cc7:	cs push edi
  402cc9:	daa    
  402cca:	repnz add DWORD PTR [esi+0x27],ebp
  402cce:	pop    esp
  402ccf:	imul   BYTE PTR [ebx+0x2e53d5dc]
  402cd5:	int3   
  402cd6:	or     eax,0xe557ee66
  402cdb:	mov    edi,0x898df354
  402ce0:	dec    ebx
  402ce1:	shl    cl,cl
  402ce3:	inc    eax
  402ce4:	je     0x402cdd
  402ce6:	repz lea edi,[edi-0x55]
  402cea:	add    BYTE PTR [ebx-0x67],bh
  402ced:	mov    edx,0x9fa8cb6d
  402cf2:	hlt    
  402cf3:	sub    BYTE PTR [ecx],dl
  402cf5:	mov    al,0xe6
  402cf7:	out    0xff,eax
  402cf9:	cmp    bh,BYTE PTR [eax]
  402cfb:	(bad)  
  402cfd:	dec    edx
  402cfe:	js     0x402c98
  402d00:	inc    bl
  402d02:	dec    edx
  402d03:	sbb    al,0x7e
  402d05:	es ffree st(3)
  402d08:	mov    eax,0x8590a53b
  402d0d:	sbb    ecx,DWORD PTR [ebx]
  402d0f:	jne    0x402d8f
  402d11:	cmp    al,0xd8
  402d13:	inc    eax
  402d14:	push   0xffffff85
  402d16:	mov    ecx,0xb9c7825c
  402d1b:	mov    cl,0x1b
  402d1d:	lock push esi
  402d1f:	sbb    al,0x77
  402d21:	loop   0x402cec
  402d23:	xchg   edi,eax
  402d24:	adc    bl,0x5d
  402d27:	lods   al,BYTE PTR ds:[esi]
  402d28:	ret    0x99bb
  402d2b:	or     al,0x49
  402d2d:	aaa    
  402d2e:	inc    edi
  402d2f:	inc    edx
  402d30:	jle    0x402d3e
  402d32:	jo     0x402cba
  402d34:	outs   dx,DWORD PTR ds:[esi]
  402d35:	mov    eax,ds:0xbd14c852
  402d3a:	pusha  
  402d3b:	test   DWORD PTR [esi-0x58],eax
  402d3e:	jns    0x402d9e
  402d40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d41:	test   DWORD PTR [edi],edx
  402d43:	repz out dx,eax
  402d45:	mov    ah,0x23
  402d47:	push   ds
  402d48:	scas   al,BYTE PTR es:[edi]
  402d49:	dec    esi
  402d4a:	or     DWORD PTR [ecx+0x10],0x38e914c2
  402d51:	cmp    eax,0xac4fb255
  402d56:	pop    es
  402d57:	pushf  
  402d58:	xor    BYTE PTR [edx],ah
  402d5a:	inc    ebp
  402d5b:	cmp    esi,DWORD PTR [ecx+0x6395cf2a]
  402d61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402d62:	mov    edi,0x26b4ea1
  402d67:	rol    DWORD PTR [edi+0x29ab0c06],0xef
  402d6e:	lahf   
  402d6f:	inc    edx
  402d70:	pop    edi
  402d71:	mov    BYTE PTR [ebx],dh
  402d73:	(bad)  
  402d75:	sti    
  402d76:	cmp    DWORD PTR [edi+0x624a1688],esi
  402d7c:	or     ch,bl
  402d7e:	jg     0x402dc9
  402d80:	cmp    BYTE PTR [esi+0x593d0286],0xe4
  402d87:	sti    
  402d88:	and    al,0x27
  402d8a:	adc    BYTE PTR [edi+0x47f39192],cl
  402d90:	test   DWORD PTR ds:[ecx],ebx
  402d93:	jnp    0x402d16
  402d95:	and    DWORD PTR [eax+0x23],eax
  402d98:	inc    ecx
  402d99:	sti    
  402d9a:	pop    ds
  402d9b:	or     edx,DWORD PTR [ecx-0x678e35a9]
  402da1:	and    bl,ah
  402da3:	mov    ebx,0x1e8cf291
  402da8:	fnsave [eax]
  402daa:	mov    eax,DWORD PTR [esi+0x73]
  402dad:	xchg   esi,eax
  402dae:	(bad)  
  402daf:	push   eax
  402db0:	sbb    eax,DWORD PTR [ebp+0x3957c46b]
  402db6:	and    esi,DWORD PTR [edx]
  402db8:	hlt    
  402db9:	(bad)  
  402dbb:	(bad)  [ecx+0x48]
  402dbe:	inc    edx
  402dbf:	in     al,dx
  402dc0:	cmp    DWORD PTR [eax-0x3f],edi
  402dc3:	add    BYTE PTR [edx+eax*2],bl
  402dc6:	push   esp
  402dc7:	imul   BYTE PTR [ebx+0x79]
  402dca:	push   esp
  402dcb:	add    eax,0xfdd35b8b
  402dd0:	xchg   ebx,eax
  402dd1:	push   0x69
  402dd3:	mov    ebp,DWORD PTR [edx]
  402dd5:	(bad)  
  402dd6:	aas    
  402dd7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402dd8:	test   eax,0xcf0ddbe
  402ddd:	out    dx,al
  402dde:	cmp    al,0xb6
  402de1:	pop    esp
  402de2:	ret    0x2023
  402de5:	jns    0x402e63
  402de7:	fiadd  DWORD PTR [ebx+0x2d19f54a]
  402ded:	mov    dl,0x71
  402def:	jno    0x402e23
  402df1:	adc    al,0xdd
  402df3:	adc    eax,0x5bb1ea5e
  402df8:	mov    ebx,0xc99ae6f0
  402dfd:	mov    WORD PTR [edi],gs
  402dff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402e00:	lds    ecx,FWORD PTR [ecx]
  402e02:	out    dx,eax
  402e03:	or     al,0x1f
  402e05:	sbb    al,0x9e
  402e07:	jno    0x402e2e
  402e09:	jmp    0x79c50535
  402e0e:	xchg   ebx,eax
  402e0f:	(bad)  
  402e10:	adc    BYTE PTR [ecx+0x4d0de8e8],0x1b
  402e17:	shl    BYTE PTR [ecx+0x6f33a007],cl
  402e1d:	and    ecx,DWORD PTR [edi+0x5e]
  402e20:	sbb    BYTE PTR [edx-0x73f5509d],ch
  402e26:	scas   eax,DWORD PTR es:[edi]
  402e27:	cli    
  402e28:	inc    ebx
  402e29:	int    0x16
  402e2b:	test   al,0x49
  402e2d:	ins    DWORD PTR es:[edi],dx
  402e2e:	xchg   esp,eax
  402e2f:	mov    ebx,0x5435dd28
  402e34:	es fwait
  402e36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402e37:	and    ch,BYTE PTR ds:[ebp-0x29013c9e]
  402e3e:	retf   0x7ea1
  402e41:	in     al,dx
  402e42:	bound  edx,QWORD PTR [edi+0x25]
  402e45:	mov    edi,0x6da79c59
  402e4a:	sbb    BYTE PTR [edx],al
  402e4c:	int3   
  402e4d:	int    0x8a
  402e4f:	loopne 0x402ec7
  402e51:	push   0xffffff94
  402e53:	and    BYTE PTR [esi-0x58],0xf7
  402e57:	push   ds
  402e58:	scas   eax,DWORD PTR es:[edi]
  402e59:	fisub  DWORD PTR [ecx+0x5]
  402e5c:	sbb    dh,BYTE PTR [eax]
  402e5e:	scas   eax,DWORD PTR es:[edi]
  402e5f:	adc    DWORD PTR [edi],edi
  402e61:	add    BYTE PTR [esi+0x3b782bf7],al
  402e67:	in     al,dx
  402e68:	in     eax,0x71
  402e6a:	jae    0x402e9b
  402e6c:	add    al,BYTE PTR [ebx+0x34]
  402e6f:	aas    
  402e70:	pop    edx
  402e71:	sub    BYTE PTR [edx+eax*1+0x54d8a583],bh
  402e78:	(bad)  
  402e79:	jl     0x402e2f
  402e7b:	setg   BYTE PTR [eax+ecx*8+0x52]
  402e80:	and    BYTE PTR ss:[edi],al
  402e83:	call   0x452512f7
  402e88:	out    dx,al
  402e89:	fs call 0x3c0261e8
  402e8f:	lahf   
  402e90:	xchg   edx,eax
  402e91:	cmc    
  402e92:	dec    ecx
  402e93:	cwde   
  402e94:	in     eax,dx
  402e95:	stc    
  402e96:	cwde   
  402e97:	or     cl,ch
  402e99:	fdivr  QWORD PTR [edx]
  402e9b:	xor    DWORD PTR [esp+edi*1+0x16],edi
  402e9f:	and    edx,esi
  402ea1:	jmp    0xed93832a
  402ea6:	(bad)  
  402ea7:	stc    
  402ea8:	stos   DWORD PTR es:[edi],eax
  402ea9:	(bad)  
  402eaa:	fisub  WORD PTR [ecx+0x68]
  402ead:	sahf   
  402eae:	je     0x402e8c
  402eb0:	popf   
  402eb1:	test   eax,0xc164643d
  402eb6:	(bad)  
  402eb7:	aas    
  402eb8:	or     ebp,edx
  402eba:	das    
  402ebb:	lock jg 0x402e71
  402ebe:	int3   
  402ebf:	icebp  
  402ec0:	mov    esi,0x2351a3fe
  402ec5:	jmp    0x60ddad5d
  402eca:	mov    ebp,0xfe9d2c7f
  402ecf:	push   esp
  402ed0:	inc    ebx
  402ed1:	repz fsub QWORD PTR [eax+0x70c1f615]
  402ed8:	(bad)  
  402ed9:	stos   BYTE PTR es:[edi],al
  402eda:	mov    eax,0x2b1124f7
  402edf:	mov    ch,0xc8
  402ee1:	dec    esi
  402ee2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402ee3:	inc    ebx
  402ee4:	sbb    DWORD PTR [edi+0x4494d0ff],ebx
  402eea:	rcr    DWORD PTR ds:0x96192605,cl
  402ef0:	sub    DWORD PTR [esi],ebx
  402ef2:	arpl   WORD PTR [edx],bp
  402ef4:	xchg   edx,eax
  402ef5:	das    
  402ef6:	pushf  
  402ef7:	jo     0x402ed6
  402ef9:	mov    DWORD PTR [edi-0x33676880],edx
  402eff:	add    al,0x68
  402f01:	push   esp
  402f02:	(bad)  
  402f03:	jnp    0x402f83
  402f05:	adc    esi,ecx
  402f07:	cmp    BYTE PTR [ebx+0x3e],bl
  402f0a:	dec    eax
  402f0b:	add    dl,BYTE PTR [esi+0x13]
  402f0e:	adc    dh,BYTE PTR [edx+0x58]
  402f11:	mov    BYTE PTR [edx+esi*4],cl
  402f14:	pop    es
  402f15:	scas   al,BYTE PTR es:[edi]
  402f16:	test   BYTE PTR [edi+0x32],bl
  402f19:	sbb    al,0xb
  402f1b:	xor    DWORD PTR [esi+edi*8+0x547a8a89],ebp
  402f22:	mov    ds:0xf1ed86e7,eax
  402f27:	inc    edi
  402f28:	sbb    eax,esi
  402f2a:	out    dx,al
  402f2b:	xlat   BYTE PTR ds:[ebx]
  402f2c:	in     al,dx
  402f2d:	sbb    al,0x19
  402f2f:	and    BYTE PTR [ebp+0x0],bl
  402f32:	cmp    DWORD PTR [ecx-0x1589fcf1],0x71c1e6fd
  402f3c:	int    0x58
  402f3e:	mov    ah,0x6a
  402f40:	mov    eax,ds
  402f42:	imul   ebp,DWORD PTR [edx-0x4a],0xbec75998
  402f49:	and    DWORD PTR [eax],0x48
  402f4c:	pop    ecx
  402f4d:	mov    edx,0x3acc94b6
  402f52:	es out dx,al
  402f54:	lahf   
  402f55:	pop    ebx
  402f56:	out    dx,al
  402f57:	jp     0x402eff
  402f59:	in     al,0xb7
  402f5b:	(bad)  
  402f5c:	mov    ah,BYTE PTR [ebx+ebp*2-0x12]
  402f60:	mov    edx,0x3508fc9e
  402f65:	jle    0x402fd0
  402f67:	jmp    0x402fad
  402f69:	inc    ebp
  402f6a:	sbb    al,0xe6
  402f6c:	mov    bl,0xbf
  402f6e:	lock loope 0x402f57
  402f71:	stc    
  402f72:	(bad)  
  402f73:	packsswb mm2,QWORD PTR [ecx+0x72]
  402f77:	out    dx,eax
  402f78:	xchg   esp,eax
  402f79:	xchg   ebp,eax
  402f7a:	fld    QWORD PTR [ebx]
  402f7c:	jmp    0x402f4c
  402f7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f7f:	ins    DWORD PTR es:[edi],dx
  402f80:	stos   BYTE PTR es:[edi],al
  402f81:	sub    DWORD PTR [ebp-0x56cd5509],edx
  402f87:	shl    DWORD PTR [eax-0x4e90a7c],0x18
  402f8e:	pop    esi
  402f8f:	mov    bl,BYTE PTR [ecx+eax*8+0x6f]
  402f93:	mov    ss,WORD PTR [ecx+0x28]
  402f96:	sbb    DWORD PTR [ebx],edx
  402f98:	push   cs
  402f99:	rcl    BYTE PTR [esi],1
  402f9b:	cmc    
  402f9c:	test   DWORD PTR cs:[edi+0x3f],eax
  402fa0:	mov    ds:0xc96d0ac2,eax
  402fa5:	mov    edi,0x469288c0
  402faa:	outs   dx,BYTE PTR ds:[esi]
  402fab:	sub    cl,BYTE PTR [ecx+0x793dcc33]
  402fb1:	loop   0x402f7e
  402fb3:	lahf   
  402fb4:	push   0x92040478
  402fb9:	dec    edx
  402fba:	push   ss
  402fbb:	in     al,dx
  402fbc:	cmp    DWORD PTR [ecx+0x79],edx
  402fbf:	sbb    edx,ebx
  402fc1:	adc    dh,cl
  402fc3:	test   al,0x95
  402fc5:	pop    esi
  402fc6:	jmp    0x402faf
  402fc8:	pop    edx
  402fc9:	mov    ah,0x93
  402fcb:	(bad)
  402fce:	(bad)  [edi-0x55]
  402fd1:	outs   dx,BYTE PTR ds:[esi]
  402fd2:	inc    ebx
  402fd3:	lods   al,BYTE PTR ds:[esi]
  402fd4:	fdiv   DWORD PTR ds:0x2a3baa43
  402fda:	jg     0x402fe2
  402fdc:	cmp    edx,ecx
  402fde:	or     al,dl
  402fe0:	jno    0x403038
  402fe2:	mov    edx,0x410a9c3d
  402fe7:	lea    edx,[eax-0x3e]
  402fea:	push   ecx
  402feb:	cmp    DWORD PTR [esi],ecx
  402fed:	mov    ah,0xe0
  402fef:	pop    esi
  402ff0:	adc    DWORD PTR [edi+0x79b7ff09],0xa02995cc
  402ffa:	imul   ebx,eax,0xb4af4e5
  403000:	hlt    
  403001:	sbb    BYTE PTR [edi],ah
  403003:	shl    DWORD PTR [edi+0x45],cl
  403006:	fmul   DWORD PTR [edi-0x7e]
  403009:	jmp    0xf336:0x9f5313e1
  403010:	and    BYTE PTR [ecx+0x7],ah
  403013:	xor    cl,BYTE PTR es:[edx-0x473bc1af]
  40301a:	loope  0x403035
  40301c:	add    eax,0x60225e24
  403021:	jbe    0x402fb2
  403023:	push   eax
  403024:	int3   
  403025:	mov    esp,0x173d4d3a
  40302a:	adc    eax,0xdd02fe19
  40302f:	into   
  403030:	xor    al,0x13
  403032:	data16 loopne 0x403050
  403035:	mov    al,0xa3
  403037:	sahf   
  403038:	mov    ch,BYTE PTR [ebx]
  40303a:	jle    0x403014
  40303c:	sbb    BYTE PTR [edx],bh
  40303e:	sbb    eax,0x96fe84cb
  403043:	push   ebx
  403044:	or     al,0xf2
  403046:	mov    DWORD PTR [edi],0xd1d0b170
  40304c:	mov    dl,0xf7
  40304e:	rcl    esi,1
  403050:	mov    bh,0x1d
  403052:	je     0x4030cd
  403054:	mov    DWORD PTR [esi+edi*8-0x76],edi
  403058:	cld    
  403059:	cld    
  40305a:	aad    0x23
  40305c:	test   DWORD PTR [eax-0x54],esi
  40305f:	fist   WORD PTR [ecx-0x2f3413fb]
  403065:	outs   dx,BYTE PTR ds:[esi]
  403066:	mov    ch,BYTE PTR [ebp-0x4d]
  403069:	cdq    
  40306a:	fwait
  40306b:	lods   eax,DWORD PTR ds:[esi]
  40306c:	or     eax,0xc0b10d51
  403071:	mov    BYTE PTR [edx+0x1a],dh
  403074:	mov    ds:0x218078dc,eax
  403079:	fistp  DWORD PTR [edi+0x29]
  40307c:	test   al,0xc4
  40307e:	or     edx,0xffffffbb
  403081:	int3   
  403082:	add    BYTE PTR [esi-0x446b4936],0xc8
  403089:	inc    esp
  40308a:	mov    ds,esp
  40308c:	dec    ebx
  40308e:	sar    BYTE PTR ds:0x1bb1253b,0x5
  403095:	push   DWORD PTR gs:[ecx+0x59]
  403099:	sub    al,0x3b
  40309b:	mov    esp,0xef5e5023
  4030a0:	mov    ebx,DWORD PTR ds:0xaf61d2b9
  4030a6:	arpl   bp,dx
  4030a8:	ret    0x1333
  4030ab:	sub    edx,DWORD PTR [edi]
  4030ad:	mov    ebx,0xbef25cac
  4030b2:	xor    ebx,DWORD PTR [esi]
  4030b4:	fld    QWORD PTR [ecx+0x38]
  4030b7:	xchg   esi,eax
  4030b8:	fst    QWORD PTR [ebp-0x55a1f64b]
  4030be:	adc    al,0xec
  4030c0:	jo     0x403043
  4030c2:	xor    ah,dl
  4030c4:	push   0xffffffdf
  4030c6:	gs and al,0xeb
  4030c9:	mov    al,0x1
  4030cb:	sub    ebp,DWORD PTR [edx+ebx*2+0x7b23ba41]
  4030d2:	jge    0x4030a9
  4030d4:	call   0x4921:0x13b693ba
  4030db:	push   edi
  4030dc:	xor    al,BYTE PTR [edx-0x13750d40]
  4030e2:	sbb    al,0xfb
  4030e4:	jmp    0x40314b
  4030e6:	aaa    
  4030e7:	test   al,0x77
  4030e9:	test   eax,0xd7d9d7b6
  4030ee:	inc    esi
  4030ef:	jnp    0x403147
  4030f1:	das    
  4030f2:	addr16 into 
  4030f4:	sbb    eax,0xb7296ad3
  4030f9:	loop   0x4030bc
  4030fb:	mov    bl,0x7f
  4030fd:	mov    ch,bl
  4030ff:	std    
  403100:	xchg   ebp,edx
  403102:	popf   
  403103:	pusha  
  403104:	sbb    eax,0xda48c4b4
  403109:	ds call 0x4c22:0x4f5f3461
  403111:	arpl   WORD PTR [ebp-0x47],cx
  403114:	push   ecx
  403115:	gs pop es
  403117:	int    0x57
  403119:	mov    dh,0x97
  40311b:	xchg   esi,eax
  40311c:	fcom   DWORD PTR [ecx-0x66]
  40311f:	xchg   edx,eax
  403120:	gs xor dl,dl
  403123:	fwait
  403124:	je     0x4030ef
  403126:	(bad)  
  403128:	xchg   ecx,eax
  403129:	scas   eax,DWORD PTR es:[edi]
  40312a:	lahf   
  40312b:	mov    bl,0xef
  40312d:	add    eax,0x11659399
  403132:	push   ecx
  403133:	sbb    al,0xa1
  403135:	push   ecx
  403136:	adc    ebp,DWORD PTR ds:0xea3ca5ea
  40313c:	xor    al,0xea
  40313e:	sti    
  40313f:	ja     0x4030d3
  403141:	and    DWORD PTR [edx+esi*1+0x513cd8ba],esi
  403148:	fnstcw WORD PTR [edx-0x7268e220]
  40314e:	lahf   
  40314f:	(bad)  [ebp+0x3b]
  403152:	push   eax
  403153:	fsubp  st(4),st
  403155:	loope  0x403150
  403157:	test   eax,0xc4ac8ac5
  40315c:	clc    
  40315d:	mov    dh,0x58
  40315f:	imul   ebp,DWORD PTR [eax-0xa8b2061],0xf2fc00e9
  403169:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40316a:	cmp    edx,DWORD PTR [ebp+0x2a962495]
  403170:	popf   
  403171:	cmp    al,0x7b
  403173:	je     0x403116
  403175:	pop    eax
  403176:	loop   0x403147
  403178:	cdq    
  403179:	jno    0x4030fb
  40317b:	popa   
  40317c:	es jno 0x4031bc
  40317f:	(bad)  
  403180:	jne    0x4031e1
  403182:	xchg   BYTE PTR [ebx-0x44],ah
  403185:	scas   al,BYTE PTR es:[edi]
  403186:	(bad)  
  403187:	call   DWORD PTR [edx-0x26]
  40318a:	inc    eax
  40318b:	inc    ecx
  40318c:	sbb    eax,DWORD PTR [eax+0x56]
  40318f:	push   ecx
  403190:	or     ebp,DWORD PTR [ebx+0x3c]
  403193:	jp     0x4031ca
  403195:	repz aam 0xbf
  403198:	xor    ch,bh
  40319a:	cdq    
  40319b:	jne    0x4031af
  40319d:	dec    eax
  40319e:	lds    esi,FWORD PTR [eax-0x80]
  4031a1:	jl     0x403127
  4031a3:	mov    dl,0xac
  4031a5:	cmp    eax,DWORD PTR [ebp-0x40]
  4031a8:	pop    esp
  4031a9:	cmp    BYTE PTR [edx+0x75],0xa1
  4031ad:	pop    eax
  4031ae:	push   cs
  4031af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4031b0:	mov    al,0xcf
  4031b2:	imul   ebp,esi,0x27
  4031b5:	push   esp
  4031b6:	arpl   WORD PTR [ebp+0x48a7567d],bp
  4031bc:	sbb    ecx,0x815c13c7
  4031c2:	adc    bl,BYTE PTR [ecx+eax*2]
  4031c5:	mov    ds:0xdbde2f70,eax
  4031ca:	add    al,BYTE PTR [ecx]
  4031cc:	ja     0x403207
  4031ce:	jmp    0x4031a6
  4031d0:	stc    
  4031d1:	out    0xf4,al
  4031d3:	dec    edi
  4031d4:	push   0x8b7b6c0
  4031d9:	sbb    al,0x7b
  4031db:	push   0x26
  4031dd:	into   
  4031de:	add    dl,cl
  4031e0:	and    ebx,DWORD PTR [ecx-0x55]
  4031e3:	lods   al,BYTE PTR ds:[esi]
  4031e4:	shr    BYTE PTR [esi],cl
  4031e6:	loop   0x403175
  4031e8:	enter  0xb37b,0xca
  4031ec:	cld    
  4031ed:	xor    eax,ecx
  4031ef:	mov    eax,ds:0xbd2dc840
  4031f4:	cwde   
  4031f5:	jnp    0x4031d0
  4031f7:	retf   0xa529
  4031fa:	push   0x9400435
  4031ff:	inc    eax
  403200:	inc    esp
  403201:	jae    0x403266
  403203:	sbb    eax,0x9e96a4a6
  403208:	call   0x9879645f
  40320d:	aaa    
  40320e:	ret    
  40320f:	xchg   edx,eax
  403210:	enter  0xccef,0xb1
  403214:	pop    ss
  403215:	pop    es
  403216:	dec    eax
  403217:	mov    esp,0xb88f14e3
  40321c:	push   esi
  40321d:	sahf   
  40321e:	sub    ebx,DWORD PTR [eax]
  403220:	addr16 mov ch,0x4
  403223:	(bad)  
  403224:	daa    
  403225:	pusha  
  403226:	out    0xcc,eax
  403228:	cdq    
  403229:	xchg   ebp,eax
  40322a:	retf   
  40322b:	jno    0x4031c3
  40322d:	pshufw mm3,QWORD PTR [esi+edx*1+0x3c],0xf4
  403233:	cmp    al,0xbd
  403235:	into   
  403236:	lea    edi,[esi+ebp*2]
  403239:	loop   0x4031f5
  40323b:	pop    ecx
  40323c:	sbb    ebp,DWORD PTR [edi-0x39]
  40323f:	mov    edi,0x90b31a5e
  403244:	or     al,BYTE PTR [edx+0x17]
  403247:	xor    edi,edx
  403249:	xchg   esi,eax
  40324a:	xchg   ebx,eax
  40324b:	leave  
  40324c:	lock and dh,BYTE PTR es:[ecx-0x7a6f295d]
  403254:	xchg   BYTE PTR [ebx+edx*2-0x4da3e918],cl
  40325b:	fistp  WORD PTR [edx+0x5d790e21]
  403261:	mov    esp,0x7d0eb204
  403266:	push   edx
  403267:	lea    eax,[edx]
  403269:	cpuid  
  40326b:	fimul  WORD PTR [esi]
  40326d:	scas   eax,DWORD PTR es:[edi]
  40326e:	icebp  
  40326f:	xchg   edi,eax
  403270:	pop    ss
  403271:	cmp    dl,BYTE PTR [eax-0xe32852d]
  403277:	inc    ecx
  403278:	pushf  
  403279:	dec    edi
  40327a:	or     al,0x6b
  40327c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40327d:	add    ebp,ebx
  40327f:	xchg   DWORD PTR [esp+esi*8+0x1e3f1515],edx
  403286:	sbb    eax,0xe3be5c65
  40328b:	lds    eax,FWORD PTR [ebp+0x3c7ba44e]
  403291:	test   DWORD PTR [edx+0x5a],0x2a02e757
  403298:	mov    bl,0x3d
  40329a:	das    
  40329b:	popa   
  40329c:	loop   0x403252
  40329e:	(bad)  
  40329f:	xchg   edi,eax
  4032a0:	retf   0xeb5d
  4032a3:	aam    0x65
  4032a5:	(bad)  
  4032a9:	jb     0x40330d
  4032ab:	cli    
  4032ac:	mov    bl,0x70
  4032ae:	ins    BYTE PTR es:[edi],dx
  4032af:	mov    ah,0x59
  4032b1:	jge    0x403260
  4032b3:	fist   WORD PTR [ebx+0x28]
  4032b6:	jbe    0x403267
  4032b8:	(bad)  
  4032b9:	in     eax,0x51
  4032bb:	into   
  4032bc:	nop
  4032bd:	inc    esi
  4032be:	pop    ebp
  4032bf:	push   esi
  4032c0:	ror    BYTE PTR [esi],cl
  4032c2:	dec    edx
  4032c3:	mov    ah,0xe3
  4032c5:	das    
  4032c6:	mov    ah,0x9d
  4032c8:	div    BYTE PTR [edi+0x290944e8]
  4032ce:	pop    esp
  4032cf:	jae    0x4032ba
  4032d1:	scas   al,BYTE PTR es:[edi]
  4032d2:	test   dl,al
  4032d4:	or     DWORD PTR ds:0x8cda832a,edx
  4032da:	push   cs
  4032db:	mov    ch,0x89
  4032dd:	test   BYTE PTR [eax],ah
  4032df:	dec    ecx
  4032e0:	sub    eax,0x30e2d3c4
  4032e5:	xchg   ecx,eax
  4032e6:	mov    dl,0x91
  4032e8:	jle    0x4032d2
  4032ea:	ja     0x4032ab
  4032ec:	pop    esi
  4032ed:	and    edi,DWORD PTR [esi-0x2521866e]
  4032f3:	shr    BYTE PTR [esi+0x7a],cl
  4032f6:	cmp    eax,0x97053d2
  4032fb:	mov    eax,ds:0x1fc0b36e
  403300:	pop    ds
  403301:	pop    ecx
  403302:	cwde   
  403303:	cmp    BYTE PTR [edx+eax*2-0x7a8c02e1],dh
  40330a:	sar    DWORD PTR [esp+eiz*4+0x1f750539],cl
  403311:	enter  0xeaf9,0x90
  403315:	mov    dh,dh
  403317:	add    BYTE PTR [edx+edx*8-0x3b1b2e63],0xa8
  40331f:	(bad)  
  403320:	jle    0x403315
  403322:	inc    eax
  403323:	dec    edi
  403324:	add    DWORD PTR [ebx],0xffffffd8
  403327:	loopne 0x4032e7
  403329:	sbb    al,0x7
  40332b:	mov    al,ds:0x6376007a
  403330:	call   0xf0537e4c
  403335:	and    BYTE PTR [ecx],ch
  403337:	leave  
  403338:	dec    eax
  403339:	push   es
  40333a:	pop    ecx
  40333b:	fwait
  40333c:	out    dx,al
  40333d:	fcmovnb st,st(2)
  40333f:	repz mov dl,0x3d
  403342:	jne    0x403360
  403344:	es adc al,0xfb
  403347:	cmp    esp,DWORD PTR [edx-0x5d134207]
  40334d:	scas   al,BYTE PTR es:[edi]
  40334e:	call   DWORD PTR [ecx]
  403350:	(bad)  
  403351:	(bad)  
  403352:	dec    esp
  403353:	lock pop edx
  403355:	push   edx
  403356:	push   es
  403357:	aaa    
  403358:	or     al,0x16
  40335a:	mov    DWORD PTR [ecx+0x1a],ebp
  40335d:	fs jo  0x40330a
  403360:	mov    ah,0xfc
  403362:	repnz push edx
  403364:	sbb    al,0x2a
  403366:	push   ebx
  403367:	push   cs
  403368:	sub    DWORD PTR [edx-0x30b709b9],0x73
  40336f:	sbb    BYTE PTR [eax+edx*1],0x6d
  403373:	adc    esi,ebx
  403375:	mov    ebx,0x256d12c
  40337a:	in     al,0xf7
  40337c:	call   0x5c54e31f
  403381:	mov    ah,0x9b
  403383:	lds    eax,FWORD PTR [ebp+0x26]
  403386:	dec    ebx
  403387:	test   eax,0x2f62b9dd
  40338c:	push   ds
  40338d:	and    bl,BYTE PTR [edi]
  40338f:	mov    es,edi
  403391:	addr16 cld 
  403393:	jmp    0x403407
  403395:	out    0xc7,al
  403397:	fdiv   QWORD PTR [edx+ebp*2-0x2684b734]
  40339e:	and    DWORD PTR [ebx],ecx
  4033a0:	cs cld 
  4033a2:	xor    eax,DWORD PTR [esi-0x2a]
  4033a5:	cmc    
  4033a6:	or     ecx,DWORD PTR [ebp-0x52]
  4033a9:	mov    WORD PTR [ecx],?
  4033ab:	adc    eax,0xd9a8319d
  4033b0:	retf   0x5d51
  4033b3:	mov    ds:0x421a3cec,al
  4033b8:	mov    edx,0xc032317
  4033bd:	push   ebp
  4033be:	inc    ecx
  4033bf:	data16 (bad) 
  4033c1:	leave  
  4033c2:	push   esp
  4033c3:	inc    ecx
  4033c4:	pushf  
  4033c5:	loopne 0x403432
  4033c7:	ja     0x40342e
  4033c9:	sbb    eax,0xc59addde
  4033ce:	rol    BYTE PTR [eax+0x6cd52f92],0x1c
  4033d5:	ins    DWORD PTR es:[edi],dx
  4033d6:	mov    WORD PTR [eax+0x36],ds
  4033d9:	(bad)  
  4033da:	adc    esp,DWORD PTR [ebp-0x6ddb8e75]
  4033e0:	fdivr  st(4),st
  4033e2:	inc    esi
  4033e3:	dec    ecx
  4033e4:	adc    DWORD PTR [ecx-0x7],eax
  4033e7:	and    edx,DWORD PTR [ecx-0x2e]
  4033ea:	xchg   esp,eax
  4033eb:	and    BYTE PTR [edi],ah
  4033ed:	mov    WORD PTR [edx],?
  4033ef:	lods   eax,DWORD PTR ds:[esi]
  4033f0:	pop    DWORD PTR [ebp-0x6a]
  4033f3:	push   esp
  4033f4:	aas    
  4033f5:	cli    
  4033f6:	in     eax,dx
  4033f7:	les    esi,FWORD PTR [eax]
  4033f9:	cld    
  4033fa:	xchg   ecx,eax
  4033fb:	adc    al,0x8b
  4033fd:	call   0x5445:0xe2c4b334
  403404:	push   ebp
  403405:	xchg   edi,eax
  403406:	inc    esi
  403407:	push   DWORD PTR [esi-0xeb75786]
  40340d:	test   al,0x8
  40340f:	and    bh,BYTE PTR [ebp*8-0x4f198ceb]
  403416:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403417:	xchg   esi,eax
  403418:	sub    eax,0xa80cc93c
  40341d:	pop    edx
  40341e:	xor    edi,DWORD PTR [eax]
  403420:	out    0x4b,al
  403422:	pop    ebp
  403423:	outs   dx,DWORD PTR ds:[esi]
  403424:	aad    0xed
  403426:	pop    ebx
  403427:	mov    ss,WORD PTR [ebp-0x30]
  40342a:	dec    eax
  40342b:	(bad)  
  40342c:	jmp    0x403432
  40342e:	jno    0x4033cc
  403430:	into   
  403431:	jp     0x40343e
  403433:	xlat   BYTE PTR ds:[ebx]
  403434:	les    ebp,FWORD PTR [edi]
  403436:	(bad)  
  403437:	shr    BYTE PTR [edx+eiz*8],0xcb
  40343b:	aaa    
  40343c:	xlat   BYTE PTR ds:[ebx]
  40343d:	push   es
  40343e:	push   0x26
  403440:	rcr    BYTE PTR [esi-0x57b2631e],cl
  403446:	gs out dx,eax
  403448:	mov    eax,edi
  40344a:	xchg   esp,eax
  40344b:	test   BYTE PTR [edi+0x36],dh
  40344e:	push   es
  40344f:	pop    edx
  403450:	scas   eax,DWORD PTR es:[edi]
  403451:	in     al,dx
  403452:	sub    eax,0xe55ae358
  403457:	pop    eax
  403458:	sbb    al,bh
  40345a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40345b:	push   esp
  40345c:	lahf   
  40345d:	outs   dx,DWORD PTR ds:[esi]
  40345e:	add    dh,ch
  403460:	mov    ch,0x43
  403462:	(bad)  
  403463:	outs   dx,DWORD PTR ds:[esi]
  403464:	dec    edi
  403465:	rcl    BYTE PTR [ebx],1
  403467:	aas    
  403468:	dec    ebp
  403469:	sub    BYTE PTR [ecx],0x7c
  40346c:	cmp    al,0x47
  40346e:	mov    ebx,0xab88f6dd
  403473:	dec    edx
  403474:	outs   dx,BYTE PTR ds:[esi]
  403475:	test   BYTE PTR [esp+edi*1-0x21260bb9],bl
  40347c:	inc    eax
  40347d:	sub    DWORD PTR [ebx+edi*2+0x6f6681f4],0xffffffd3
  403485:	and    DWORD PTR [edi],esp
  403487:	(bad)  
  403489:	hlt    
  40348a:	sar    DWORD PTR [ebp-0x5e5a73eb],0xde
  403491:	inc    dh
  403493:	jg     0x40341a
  403495:	rcl    DWORD PTR [ebx-0x4f],1
  403498:	rol    DWORD PTR [ebx],cl
  40349a:	gs inc esi
  40349c:	inc    edi
  40349d:	xor    BYTE PTR [esi-0x2f],ch
  4034a0:	ins    BYTE PTR es:[edi],dx
  4034a1:	js     0x40347d
  4034a3:	pop    ss
  4034a4:	and    DWORD PTR [eax-0x51acd1ba],edi
  4034aa:	inc    ebx
  4034ab:	adc    DWORD PTR es:[ecx+0x67],eax
  4034af:	add    edi,edx
  4034b1:	push   ebx
  4034b2:	add    al,0x95
  4034b4:	cmp    DWORD PTR [ecx],esp
  4034b6:	sbb    esp,eax
  4034b8:	std    
  4034b9:	add    al,0xdd
  4034bb:	xor    bh,BYTE PTR [eax]
  4034bd:	sbb    eax,0x22bda570
  4034c2:	fnsave [eax+0x6185a27e]
  4034c8:	mov    edi,ds
  4034ca:	adc    al,0xde
  4034cc:	sbb    DWORD PTR [edx-0x1e27ba65],edi
  4034d2:	xor    al,0xfa
  4034d4:	ins    DWORD PTR es:[di],dx
  4034d6:	and    BYTE PTR [eax],bl
  4034d8:	lea    esi,[esi]
  4034da:	jbe    0x4034d1
  4034dc:	xlat   BYTE PTR ds:[ebx]
  4034dd:	pushf  
  4034de:	jae    0x4034c8
  4034e0:	sub    eax,0x962e0708
  4034e5:	lea    edi,[eax+0xa]
  4034e8:	jbe    0x403540
  4034ea:	and    al,0xb6
  4034ec:	ja     0x403500
  4034ee:	or     ah,BYTE PTR [esi+0x4e39cc9f]
  4034f4:	jo     0x4034c5
  4034f6:	add    DWORD PTR [eax],esp
  4034f8:	imul   ebp,DWORD PTR [ebx+esi*2+0x21a1dab0],0x54cd8598
  403503:	loop   0x4034f5
  403505:	xchg   ebp,eax
  403506:	or     esi,ebp
  403508:	shl    bl,0xb5
  40350b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40350c:	push   es
  40350d:	push   ds
  40350e:	data16 jbe 0x403575
  403511:	test   eax,0x1a801611
  403516:	add    ch,bl
  403518:	imul   ebx,DWORD PTR [ebp+0x76],0x95c650cb
  40351f:	sbb    eax,0xaf851d28
  403524:	mov    ebp,ss
  403526:	push   cs
  403527:	mov    eax,0x9c28ee3e
  40352c:	(bad)  
  40352d:	mov    edi,0x367e3844
  403532:	jp     0x4034ca
  403534:	adc    cl,BYTE PTR [edi+edx*1+0x362556d6]
  40353b:	ins    BYTE PTR es:[edi],dx
  40353c:	in     al,dx
  40353d:	inc    ebp
  40353e:	push   ds
  40353f:	icebp  
  403540:	mov    ds:0x1218bb88,al
  403545:	lock or BYTE PTR [ebx-0x67b776c4],0xc2
  40354d:	mov    bl,0xc2
  40354f:	inc    ebx
  403550:	fwait
  403551:	jbe    0x40351a
  403553:	xor    bl,BYTE PTR [esi+edx*4+0x44894bcd]
  40355a:	pusha  
  40355b:	xor    eax,0x48fcc5bb
  403560:	push   edx
  403561:	or     DWORD PTR [edx-0x3c],edx
  403564:	jmp    0x3a94:0x8b941d9b
  40356b:	retf   
  40356c:	inc    ecx
  40356d:	jl     0x40354d
  40356f:	inc    esp
  403570:	pop    edx
  403571:	in     al,0x98
  403573:	aam    0xa5
  403575:	adc    al,0xf6
  403577:	inc    eax
  403578:	retf   
  403579:	pop    esp
  40357a:	or     BYTE PTR [esi+0x3e],ch
  40357d:	pop    es
  40357e:	and    al,0x10
  403580:	inc    eax
  403581:	xchg   esp,eax
  403582:	in     al,0x99
  403584:	cmp    eax,0x52db9e02
  403589:	sub    eax,0xef6c21fc
  40358e:	push   ss
  40358f:	cld    
  403590:	mov    cl,0x3a
  403592:	gs push edx
  403594:	add    esp,DWORD PTR [ebx-0x70218673]
  40359a:	mov    ecx,?
  40359c:	cmp    BYTE PTR [ecx+ecx*4],ch
  40359f:	gs pop edx
  4035a1:	ins    BYTE PTR es:[edi],dx
  4035a2:	hlt    
  4035a3:	cli    
  4035a4:	int3   
  4035a5:	leave  
  4035a6:	leave  
  4035a7:	in     al,0x60
  4035a9:	jle    0x40356e
  4035ab:	push   cs
  4035ac:	outs   dx,DWORD PTR ds:[esi]
  4035ad:	aam    0x5b
  4035af:	mov    WORD PTR [ebp-0x720677b],gs
  4035b5:	jo     0x403592
  4035b7:	hlt    
  4035b8:	call   0xf3174fc5
  4035bd:	jb     0x403550
  4035bf:	mov    ah,0x61
  4035c1:	hlt    
  4035c2:	push   edx
  4035c3:	dec    edx
  4035c4:	lea    ebx,ss:[edx+0x25344ecb]
  4035cb:	(bad)  
  4035cc:	cwde   
  4035cd:	adc    bl,0x33
  4035d0:	aam    0x74
  4035d2:	retf   
  4035d3:	mov    eax,0x52e76cd1
  4035d8:	(bad)  
  4035d9:	cwde   
  4035da:	pop    ebp
  4035db:	ja     0x4035ea
  4035dd:	pop    esi
  4035de:	les    eax,FWORD PTR [edi+0x21d859f6]
  4035e4:	fbld   TBYTE PTR [ebp-0x44dd66c5]
  4035ea:	repnz frstor [edx]
  4035ed:	icebp  
  4035ee:	les    ecx,FWORD PTR [eax-0xf0283e9]
  4035f4:	jo     0x403627
  4035f6:	mov    esi,0x18cb7567
  4035fb:	mov    ebx,0x34cbe147
  403600:	mov    bh,0xbc
  403602:	or     ecx,DWORD PTR [ebx-0x1f]
  403605:	mov    ecx,0x3a9343ec
  40360a:	mov    esi,DWORD PTR [eax]
  40360c:	cld    
  40360d:	hlt    
  40360e:	retf   
  40360f:	xchg   DWORD PTR [edx],ebx
  403611:	cld    
  403612:	pop    esi
  403613:	(bad)  
  403614:	imul   DWORD PTR [ebp-0x16]
  403617:	in     al,dx
  403618:	outs   dx,BYTE PTR ds:[esi]
  403619:	fs pop esi
  40361b:	mov    edi,0x447c1efd
  403620:	sbb    BYTE PTR ds:0x37228408,0x9f
  403627:	repnz cmp ecx,DWORD PTR [eax+0x4790442a]
  40362e:	jge    0x40368b
  403630:	jge    0x4035cb
  403632:	mov    ecx,0xcaeacfa1
  403637:	mov    esp,0x80655dba
  40363c:	out    dx,al
  40363d:	retf   0x232
  403640:	cmp    BYTE PTR [eax+0x596dec28],bh
  403646:	push   esp
  403647:	aad    0xca
  403649:	jo     0x403602
  40364b:	mov    al,BYTE PTR [ebp-0x10]
  40364e:	mov    WORD PTR [edx],fs
  403650:	fxam   
  403652:	lahf   
  403653:	push   esi
  403654:	push   cs
  403655:	sbb    eax,0xfddf706c
  40365a:	xchg   ebx,eax
  40365b:	js     0x4035ee
  40365d:	cmp    eax,DWORD PTR [eax+0xeab0756]
  403663:	(bad)  
  403664:	popf   
  403665:	arpl   WORD PTR ds:0x4b461c54,bp
  40366b:	adc    edi,ebx
  40366d:	ret    
  40366e:	push   ebp
  40366f:	js     0x4036a4
  403671:	aad    0x2c
  403673:	inc    ecx
  403674:	nop
  403675:	arpl   WORD PTR [esi-0x1533e1dc],dx
  40367b:	sub    esp,eax
  40367d:	adc    eax,0x1d2dabea
  403682:	xchg   esp,eax
  403683:	or     bh,BYTE PTR [edi+0x2b]
  403686:	mov    ch,0xc8
  403688:	int    0xe5
  40368a:	jmp    0x403669
  40368c:	lock js 0x40362e
  40368f:	cdq    
  403690:	push   ds
  403691:	or     DWORD PTR [ebp-0x57232866],edx
  403697:	mov    al,ds:0x4757a884
  40369c:	cdq    
  40369d:	add    al,0xb2
  40369f:	mov    edx,esi
  4036a1:	stos   BYTE PTR es:[edi],al
  4036a2:	enter  0xe82c,0x84
  4036a6:	push   es
  4036a7:	xor    eax,0x7a7d5ecf
  4036ac:	lods   eax,DWORD PTR ds:[esi]
  4036ad:	into   
  4036ae:	or     edx,DWORD PTR [ecx-0xc9f6fd6]
  4036b4:	rcl    al,0xb1
  4036b7:	mov    BYTE PTR [ecx+0x7b],al
  4036ba:	mov    ah,0x76
  4036bc:	add    al,0x36
  4036be:	out    0x79,eax
  4036c0:	push   edx
  4036c1:	fstp   QWORD PTR [ecx+ebx*2]
  4036c4:	pop    ecx
  4036c5:	and    cl,dh
  4036c7:	fst    st(6)
  4036c9:	(bad)  
  4036ca:	(bad)  
  4036cb:	cmp    al,0x26
  4036cd:	mov    ecx,DWORD PTR [edx+0x5cd8e51b]
  4036d3:	cmp    edi,DWORD PTR [ecx+ebp*4-0x698c034a]
  4036da:	shr    DWORD PTR [ebp+0x30],cl
  4036dd:	jle    0x403692
  4036df:	(bad)  
  4036e0:	jp     0x403678
  4036e2:	pop    eax
  4036e3:	and    BYTE PTR [eax],0x5b
  4036e6:	dec    ecx
  4036e7:	js     0x40367d
  4036e9:	cmc    
  4036ea:	pop    eax
  4036eb:	xor    esi,DWORD PTR [edi+0x45073076]
  4036f1:	idiv   ch
  4036f3:	push   ecx
  4036f4:	mov    ?,WORD PTR ds:0xf87cea60
  4036fa:	pop    ecx
  4036fb:	sub    al,0x30
  4036fd:	and    al,0x7c
  4036ff:	sub    esp,esi
  403701:	sub    eax,0xbfa3d29a
  403706:	fwait
  403707:	pop    esi
  403708:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403709:	ds repnz push es
  40370c:	dec    edi
  40370d:	aaa    
  40370e:	mov    esp,0x3ca7f911
  403713:	dec    eax
  403714:	push   es
  403715:	loope  0x403775
  403717:	mov    esi,DWORD PTR [edi-0x54]
  40371a:	cmp    al,0x1c
  40371c:	adc    ebp,DWORD PTR [edx]
  40371e:	cwde   
  40371f:	inc    ecx
  403720:	in     eax,dx
  403721:	iret   
  403722:	out    0xd,eax
  403724:	sub    DWORD PTR [ebp+0x7b],0xc
  403728:	push   ss
  403729:	(bad)  
  40372a:	ret    0xc5ae
  40372d:	xor    ebp,esi
  40372f:	add    ebp,DWORD PTR [ecx+0x7e29fdd]
  403735:	adc    al,0x3e
  403737:	inc    ebx
  403738:	mov    ebp,0x4b5bb035
  40373d:	jmp    0xd4cd:0x77d41102
  403744:	dec    esi
  403745:	cdq    
  403746:	xchg   edx,eax
  403747:	(bad)  
  403748:	fdivr  DWORD PTR [edx-0x3eff67f5]
  40374e:	cld    
  40374f:	pushf  
  403750:	adc    esp,ebp
  403752:	sub    BYTE PTR [eax-0x72],0x12
  403756:	rol    BYTE PTR [ebx-0x7437a0e],cl
  40375c:	push   cs
  40375d:	pop    ss
  40375e:	dec    esi
  40375f:	cld    
  403760:	ror    BYTE PTR [ecx-0x3ee24c1b],cl
  403766:	(bad)  
  403767:	xchg   ebx,eax
  403768:	shr    DWORD PTR ss:[eax-0x56ab6611],cl
  40376f:	jno    0x403796
  403771:	inc    eax
  403772:	adc    al,0x79
  403774:	inc    esp
  403775:	jo     0x4037a7
  403777:	int3   
  403778:	test   al,0x74
  40377a:	xlat   BYTE PTR ds:[ebx]
  40377b:	scas   eax,DWORD PTR es:[edi]
  40377c:	mov    ch,0x8
  40377e:	jl     0x4037f0
  403780:	cwde   
  403781:	or     bh,cl
  403783:	push   ebx
  403784:	pop    ds
  403785:	enter  0x690c,0x90
  403789:	icebp  
  40378a:	repz rcl BYTE PTR [edi+esi*4],0xe7
  40378f:	mov    bl,0x53
  403791:	add    al,0xc4
  403793:	jle    0x403805
  403795:	mov    esp,0xcba786c3
  40379a:	jns    0x4037f8
  40379c:	fcmovne st,st(6)
  40379e:	test   DWORD PTR [esi-0x5a9f94d],edi
  4037a4:	(bad)  
  4037a5:	in     eax,dx
  4037a6:	aam    0x99
  4037a8:	ret    0x4f74
  4037ab:	mov    esi,0xcfd0e7a7
  4037b0:	imul   ebx,ebp,0xe6861012
  4037b6:	push   ecx
  4037b7:	pop    ebx
  4037b8:	pop    edx
  4037b9:	test   al,0xbc
  4037bb:	cmp    cl,cl
  4037bd:	inc    edx
  4037be:	and    BYTE PTR [ecx],bh
  4037c0:	outs   dx,DWORD PTR ds:[esi]
  4037c1:	iret   
  4037c2:	xchg   ebp,eax
  4037c3:	and    DWORD PTR [ebp-0x15],edi
  4037c6:	sbb    bh,BYTE PTR [esi]
  4037c8:	arpl   WORD PTR [eax],bp
  4037ca:	add    BYTE PTR [edx-0x647cf657],dh
  4037d0:	inc    edx
  4037d1:	push   0x7cc1d11f
  4037d6:	push   cs
  4037d7:	or     DWORD PTR [ebp-0xc],ebx
  4037da:	jne    0x4037b7
  4037dc:	mov    eax,ds:0x9e78c912
  4037e1:	add    BYTE PTR [ecx],al
  4037e3:	push   esi
  4037e4:	mov    edi,0xc9b23c07
  4037e9:	mov    ebp,0x23b0a506
  4037ee:	mov    ecx,0x1b15596e
  4037f3:	sub    eax,0x6a496fe1
  4037f8:	or     esi,DWORD PTR [edx+0x757a6598]
  4037fe:	adc    ecx,ebp
  403800:	nop
  403801:	test   al,0xbd
  403803:	cmp    eax,0x11c4c552
  403808:	pop    es
  403809:	mov    bl,0x22
  40380b:	mov    gs,WORD PTR [ebx-0x7b]
  40380e:	push   DWORD PTR [esi-0x6ed9a150]
  403814:	push   cs
  403815:	pushf  
  403816:	clc    
  403817:	add    eax,0x3f1fa805
  40381c:	cs mov esi,0x735bf496
  403822:	inc    esi
  403823:	push   eax
  403824:	lods   eax,DWORD PTR ds:[esi]
  403825:	clc    
  403826:	add    al,al
  403828:	pop    ss
  403829:	sub    BYTE PTR [edx-0x8c69414],dl
  40382f:	js     0x403854
  403831:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403833:	aad    0x2c
  403835:	call   FWORD PTR [ecx-0x66a40f5b]
  40383b:	lods   eax,DWORD PTR ds:[esi]
  40383c:	xchg   esi,eax
  40383d:	mov    bh,0x97
  40383f:	mov    dh,0xc4
  403841:	popf   
  403842:	int    0x9
  403844:	add    DWORD PTR [ebx],eax
  403846:	sub    ecx,DWORD PTR [edx+ebp*2+0x61]
  40384a:	aam    0x22
  40384c:	jmp    0x40382a
  40384e:	jnp    0x403888
  403850:	dec    ebp
  403851:	xlat   BYTE PTR ds:[ebx]
  403852:	add    BYTE PTR [ebx-0x76],al
  403855:	jmp    0x2ef61359
  40385a:	dec    ebp
  40385b:	ds lock icebp 
  40385e:	sbb    eax,0x34d42657
  403863:	mov    ebx,0xb7ef3a08
  403868:	shl    BYTE PTR [edi-0x1bec3502],0x8a
  40386f:	push   esp
  403870:	sub    eax,0xce915627
  403875:	lods   al,BYTE PTR ds:[esi]
  403876:	ss cli 
  403878:	repnz mov ebp,0x171f896b
  40387e:	fisub  WORD PTR [ebp+0x31]
  403881:	xabort 0x56
  403884:	into   
  403885:	out    0xc5,al
  403887:	xor    ebp,edx
  403889:	mov    WORD PTR [esi+esi*8],?
  40388c:	adc    al,0x6
  40388e:	add    BYTE PTR [ebx],cl
  403890:	lock jmp 0xbe3b:0x843e8b22
  403898:	inc    esp
  403899:	jne    0x403856
  40389b:	cmp    edx,DWORD PTR [edi-0x70b8f003]
  4038a1:	ret    
  4038a2:	popa   
  4038a3:	add    BYTE PTR [esi+0x43a9e9a0],al
  4038a9:	loop   0x4038e4
  4038ab:	in     al,0xfd
  4038ad:	mov    eax,ds:0x7fb60bb7
  4038b2:	stos   BYTE PTR es:[edi],al
  4038b3:	or     ebp,ebp
  4038b5:	or     BYTE PTR [edi+0x1cee0cee],bl
  4038bb:	cmp    bh,bh
  4038bd:	or     BYTE PTR [esi-0xaa389e9],al
  4038c3:	repz pop es
  4038c5:	sub    BYTE PTR [esi+ebp*2+0x25e82afd],al
  4038cc:	fucom  st(2)
  4038ce:	ret    0xba57
  4038d1:	sbb    al,0xd5
  4038d3:	mov    edi,0x8777b9a3
  4038d8:	iret   
  4038d9:	xor    ecx,DWORD PTR [esp+ebp*8-0x731ec1e6]
  4038e0:	imul   DWORD PTR [ecx+0x42cf9ab6]
  4038e6:	bound  edx,QWORD PTR [edx-0x5a]
  4038e9:	pop    ecx
  4038ea:	lods   eax,DWORD PTR ds:[esi]
  4038eb:	cdq    
  4038ec:	pop    esi
  4038ed:	xchg   BYTE PTR [edx+0x6e],bl
  4038f0:	sub    al,0x1e
  4038f2:	fsubr  QWORD PTR [ebx+0x2d]
  4038f5:	pop    edx
  4038f6:	in     al,0xe1
  4038f8:	pop    ebp
  4038f9:	ret    
  4038fa:	and    BYTE PTR [ebx-0x4e770262],bh
  403900:	sbb    al,0xf8
  403902:	mov    cl,0x7e
  403904:	fnstenv [ebx]
  403906:	lods   eax,DWORD PTR ds:[esi]
  403907:	mov    ds:0xf8853fd2,al
  40390c:	pop    es
  40390d:	xchg   BYTE PTR [ecx+0x2aad59f9],bh
  403913:	loope  0x4038d6
  403915:	cld    
  403916:	push   cs
  403917:	(bad)  
  403918:	fdivr  st(3),st
  40391a:	idiv   DWORD PTR [edi+0x7d]
  40391d:	pop    edx
  40391e:	dec    ebx
  40391f:	xor    ah,BYTE PTR [ebx-0x6a33000b]
  403925:	das    
  403926:	push   0xd1707223
  40392b:	adc    eax,0x517ec203
  403930:	mov    dl,BYTE PTR [eax]
  403932:	mov    al,0x4f
  403934:	iret   
  403935:	mov    al,ds:0x92d0e419
  40393a:	jmp    0xd217:0xa338199b
  403941:	enter  0x9b2d,0xd7
  403945:	jl     0x4038ed
  403947:	push   ss
  403948:	test   DWORD PTR [ebp-0x138bc83a],edi
  40394e:	ja     0x4039a1
  403950:	push   es
  403951:	and    al,0xc0
  403953:	inc    ebp
  403954:	pop    ebp
  403955:	into   
  403956:	jns    0x40393b
  403958:	push   0x4e
  40395a:	mov    ds:0xcc377f8f,al
  40395f:	clc    
  403960:	call   0x7183:0x240d5a24
  403967:	mov    ds:0x9892dce6,al
  40396c:	rcr    BYTE PTR [edx],1
  40396e:	aad    0x20
  403970:	jb     0x40390f
  403972:	aaa    
  403973:	cld    
  403974:	dec    ebx
  403975:	ret    0xaf11
  403978:	call   0xfc15:0xd8a8e8a8
  40397f:	sub    al,0xfe
  403981:	imul   esi,ecx,0xffffffed
  403984:	xor    ebx,esp
  403986:	xor    al,0x76
  403988:	int    0x4c
  40398a:	mov    bh,0x25
  40398c:	(bad)  
  40398d:	adc    esp,DWORD PTR [eax]
  40398f:	or     bh,BYTE PTR [edx+0x26]
  403992:	xor    edx,edi
  403994:	shl    BYTE PTR [eax+0x76f19de7],cl
  40399a:	mov    eax,ds:0x57ead090
  40399f:	jns    0x403969
  4039a1:	mov    ecx,0x80c46dc7
  4039a6:	xchg   esp,eax
  4039a7:	ins    BYTE PTR es:[edi],dx
  4039a8:	sub    BYTE PTR [edx],dl
  4039aa:	adc    eax,0xf9c355d1
  4039af:	jmp    0x74252f95
  4039b4:	sbb    esi,DWORD PTR [ebx-0x1d]
  4039b7:	mov    edx,0x47cd1560
  4039bc:	shr    BYTE PTR [esi],cl
  4039be:	gs pop edi
  4039c0:	xor    edx,DWORD PTR [eax-0x458a4538]
  4039c6:	add    BYTE PTR [ebp-0x1a],cl
  4039c9:	add    eax,0x5babd40d
  4039ce:	adc    BYTE PTR ds:0x3314a86e,dl
  4039d4:	add    al,0x7f
  4039d6:	rcr    BYTE PTR [ebp+0x27],cl
  4039d9:	pop    ebp
  4039da:	mov    ebp,0x9131d79a
  4039df:	cli    
  4039e0:	jnp    0x403a4d
  4039e2:	inc    ecx
  4039e3:	jge    0x4039ae
  4039e5:	in     al,dx
  4039e6:	push   esi
  4039e7:	xlat   BYTE PTR ds:[ebx]
  4039e8:	mov    cl,0xc2
  4039ea:	fidiv  DWORD PTR [ecx-0x3113e499]
  4039f0:	dec    ecx
  4039f1:	ret    
  4039f2:	mov    ebx,0xf45a7343
  4039f7:	mov    ds:0xf40d5bae,eax
  4039fc:	outs   dx,DWORD PTR ds:[esi]
  4039fd:	or     dl,BYTE PTR [eax+ecx*1]
  403a00:	push   ebx
  403a01:	xor    eax,0x6bfe7497
  403a06:	xor    dh,BYTE PTR [edi-0x5b]
  403a09:	inc    ebp
  403a0a:	faddp  st(6),st
  403a0c:	inc    ebp
  403a0d:	mov    al,0x98
  403a0f:	outs   dx,BYTE PTR ds:[esi]
  403a10:	sbb    ebp,DWORD PTR [ebx-0x7f8b447a]
  403a16:	loop   0x403a3f
  403a18:	xchg   ecx,eax
  403a19:	jecxz  0x4039e2
  403a1b:	mov    ebp,0xa84db8fb
  403a20:	cmc    
  403a21:	add    edx,DWORD PTR [esi]
  403a23:	mov    cl,0xac
  403a25:	psubb  mm7,mm6
  403a28:	(bad)  
  403a29:	and    cl,BYTE PTR [edx-0x5b]
  403a2c:	adc    eax,0xdae0a33e
  403a31:	xchg   ebx,eax
  403a32:	mov    edx,0xa392f49a
  403a37:	mov    eax,edx
  403a39:	cpuid  
  403a3b:	push   ss
  403a3c:	or     ebp,DWORD PTR [eax+0x51]
  403a3f:	mov    edx,0xa2ab0849
  403a44:	xchg   ebx,eax
  403a45:	adc    DWORD PTR [ebx-0x397eeb35],edi
  403a4b:	sbb    al,0xee
  403a4d:	push   eax
  403a4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403a4f:	adc    dl,bl
  403a51:	gs mov edx,0x80485d5f
  403a57:	push   ebp
  403a58:	pop    ecx
  403a59:	adc    esi,DWORD PTR [ebx+0x28930ec5]
  403a5f:	cli    
  403a60:	xor    DWORD PTR ds:0x3eef609b,edi
  403a66:	mov    ebp,0xb83ac9db
  403a6b:	out    0x9b,eax
  403a6d:	gs test eax,0x61830f9b
  403a73:	shl    dl,0x46
  403a76:	lahf   
  403a77:	add    eax,0xec7cc244
  403a7c:	or     ebp,DWORD PTR [esi]
  403a7e:	leave  
  403a7f:	popf   
  403a80:	mov    esi,0x6551a55d
  403a85:	(bad)  
  403a86:	xchg   edx,eax
  403a87:	push   0x95de8f80
  403a8c:	sub    edx,esi
  403a8e:	inc    eax
  403a8f:	adc    BYTE PTR [ecx+0x78],dh
  403a92:	adc    DWORD PTR [edi],ebx
  403a94:	mov    eax,es
  403a96:	jle    0x403af7
  403a98:	pop    edx
  403a99:	lahf   
  403a9a:	(bad)  
  403a9b:	adc    al,BYTE PTR [ecx-0x1a7bc444]
  403aa1:	test   al,0x7a
  403aa3:	jo     0x403b01
  403aa5:	sbb    al,0xc2
  403aa7:	push   ebp
  403aa8:	add    cl,BYTE PTR [eax+eiz*2-0x3b]
  403aac:	push   eax
  403aad:	(bad)  
  403aae:	cld    
  403aaf:	pop    edx
  403ab0:	hlt    
  403ab1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403ab2:	push   eax
  403ab3:	out    0x6f,eax
  403ab5:	dec    esi
  403ab6:	add    dl,cl
  403ab8:	jno    0x403a58
  403aba:	xchg   ecx,eax
  403abb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403abc:	add    dh,BYTE PTR [edx]
  403abe:	add    dl,BYTE PTR [ecx-0x6fae6e72]
  403ac4:	(bad)  
  403ac6:	retf   0xe2c7
  403ac9:	mov    cl,BYTE PTR [ecx-0x58]
  403acc:	mov    edx,0x6f1554b2
  403ad1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403ad2:	jmp    0xec4a:0x6cbd94af
  403ad9:	dec    edi
  403ada:	cdq    
  403adb:	cmp    eax,0x3307886a
  403ae0:	loope  0x403b42
  403ae2:	arpl   WORD PTR [ecx+edi*1],dx
  403ae5:	gs dec ebp
  403ae7:	dec    eax
  403ae8:	out    0xf8,al
  403aea:	(bad)  
  403aeb:	xchg   esi,eax
  403aec:	popa   
  403aed:	adc    dl,al
  403aef:	or     al,0xbc
  403af1:	and    ch,0xe2
  403af4:	jmp    0x403b69
  403af6:	test   DWORD PTR [edi],esp
  403af8:	out    0x88,eax
  403afa:	jb     0x403b0c
  403afc:	and    ebp,eax
  403afe:	out    0x99,eax
  403b00:	xchg   edx,eax
  403b01:	icebp  
  403b02:	jle    0x403ab0
  403b04:	xor    eax,0x656e89bf
  403b09:	fucomip st,st(7)
  403b0b:	ret    
  403b0c:	xchg   ecx,eax
  403b0d:	mov    dh,0x35
  403b0f:	mov    WORD PTR [edx],fs
  403b11:	jle    0x403b87
  403b13:	cmp    eax,0x74a5e004
  403b18:	mov    bl,0xef
  403b1a:	and    ah,BYTE PTR [eax+0xd]
  403b1d:	sbb    DWORD PTR [edx+0x75],esp
  403b20:	push   ss
  403b21:	or     al,ch
  403b23:	adc    BYTE PTR [eax+0x62],ah
  403b26:	inc    eax
  403b27:	int3   
  403b28:	leave  
  403b29:	pop    esp
  403b2a:	jle    0x403b86
  403b2c:	dec    edi
  403b2d:	ret    0xb1ba
  403b30:	mov    eax,ds:0xbcbe354a
  403b35:	rcl    ecx,1
  403b37:	(bad)  
  403b38:	mov    ebx,0xf11d23c4
  403b3d:	clc    
  403b3e:	call   0xb388b666
  403b43:	adc    DWORD PTR [edx+0xe51b436],0x221b5a22
  403b4d:	dec    ebp
  403b4e:	jne    0x403ad3
  403b50:	xchg   ebx,eax
  403b51:	mov    ecx,0xf3b826f9
  403b56:	cmp    BYTE PTR [edx-0x5],0x14
  403b5a:	xchg   edi,eax
  403b5b:	and    DWORD PTR [edx-0x42d99c19],esp
  403b61:	adc    dh,BYTE PTR [edi]
  403b63:	pop    ecx
  403b64:	lock mov ebx,0xdce2fc76
  403b6a:	add    al,0xfc
  403b6c:	xor    DWORD PTR [ecx],ecx
  403b6e:	fild   DWORD PTR [ebp+0x1]
  403b71:	in     eax,dx
  403b72:	ret    
  403b73:	cwde   
  403b74:	mov    DWORD PTR [ecx+0x3b],edi
  403b77:	fnstsw WORD PTR [edx-0x92d51a5]
  403b7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403b7e:	shl    DWORD PTR [ebp+0x46a1da7c],0xd4
  403b85:	inc    eax
  403b86:	fcmovu st,st(3)
  403b88:	pop    ebp
  403b89:	jecxz  0x403b19
  403b8b:	and    eax,0x32a7f156
  403b90:	and    eax,0x1fab62d9
  403b95:	(bad)  
  403b96:	enter  0xc779,0x89
  403b9a:	xchg   ebx,eax
  403b9b:	mov    ebp,0x890288bf
  403ba0:	push   ecx
  403ba1:	xchg   ebp,eax
  403ba2:	adc    ebp,ecx
  403ba4:	(bad)  
  403ba5:	mov    ecx,0x9c63f083
  403baa:	mov    eax,0x25e6519
  403baf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403bb0:	mov    ch,BYTE PTR [ebp-0x59efe23f]
  403bb6:	sbb    DWORD PTR [ecx],esi
  403bb8:	lahf   
  403bb9:	jecxz  0x403c07
  403bbb:	out    0xae,al
  403bbd:	sbb    DWORD PTR [ecx+0x4d],edi
  403bc0:	pop    DWORD PTR [ecx-0x4a]
  403bc3:	js     0x403b99
  403bc5:	jb     0x403c44
  403bc7:	jge    0x403bfb
  403bc9:	push   esp
  403bca:	aaa    
  403bcb:	in     eax,dx
  403bcc:	xchg   edx,eax
  403bcd:	xchg   esp,eax
  403bce:	inc    esi
  403bcf:	jb     0x403bb9
  403bd1:	es lahf 
  403bd3:	cmp    eax,0x81f39bec
  403bd8:	mov    ecx,0xdc912d9c
  403bdd:	xor    edi,0x2b268a86
  403be3:	xchg   ebx,eax
  403be4:	cmp    al,0x69
  403be6:	loopne 0x403bd6
  403be8:	xlat   BYTE PTR ds:[ebx]
  403be9:	fsub   QWORD PTR [eax+ecx*1-0x5835a15d]
  403bf0:	add    eax,0x68c9fbaf
  403bf5:	push   ebp
  403bf6:	push   0x2051e830
  403bfb:	push   ebx
  403bfc:	test   DWORD PTR [esi+0x25c471c8],0x8695dc26
  403c06:	mov    ?,edi
  403c08:	jb     0x403c41
  403c0a:	call   0x3068:0xdf147895
  403c11:	mov    eax,ds:0xe84c5505
  403c16:	xlat   BYTE PTR ds:[ebx]
  403c17:	sbb    al,0xf7
  403c19:	stos   BYTE PTR es:[edi],al
  403c1a:	mov    dl,0x61
  403c1c:	pop    ebp
  403c1d:	push   cs
  403c1e:	retf   
  403c1f:	xor    al,BYTE PTR [eax+0x4e0d30cb]
  403c25:	bnd js 0x403c90
  403c28:	and    eax,0x44eca2aa
  403c2d:	pushw  es
  403c2f:	mov    bh,0xca
  403c31:	lea    esi,[eax-0x52842f1d]
  403c37:	xor    esi,edi
  403c39:	loope  0x403bc0
  403c3b:	sub    al,0x14
  403c3d:	repnz das 
  403c3f:	push   0xffffffd1
  403c41:	retf   0x6081
  403c44:	into   
  403c45:	pop    ebp
  403c46:	rol    DWORD PTR [ebx],cl
  403c48:	iret   
  403c49:	sbb    esi,esp
  403c4b:	data16 jmp 0x403c2e
  403c4e:	inc    edi
  403c4f:	iret   
  403c50:	repz sub eax,DWORD PTR [ecx-0x6f]
  403c54:	inc    ebx
  403c55:	jo     0x403cc0
  403c57:	pusha  
  403c58:	mov    ecx,0xc5b830cb
  403c5d:	xor    al,0x3d
  403c5f:	icebp  
  403c60:	das    
  403c61:	or     al,0x1
  403c63:	fisttp QWORD PTR [ebp-0x4b7ac31f]
  403c69:	jg     0x403cd7
  403c6b:	mov    DWORD PTR [esi],esp
  403c6d:	es xchg edx,eax
  403c6f:	pop    edx
  403c70:	shl    bl,1
  403c72:	fs sub eax,edi
  403c75:	outs   dx,DWORD PTR ds:[esi]
  403c76:	dec    esi
  403c77:	in     eax,0x92
  403c79:	lahf   
  403c7a:	scas   al,BYTE PTR es:[edi]
  403c7b:	sbb    ecx,DWORD PTR [esi]
  403c7d:	das    
  403c7e:	xor    eax,0x9dbf2181
  403c83:	or     ah,ah
  403c85:	push   edi
  403c86:	sbb    DWORD PTR [ebp-0x2e],ecx
  403c89:	(bad)  
  403c8a:	fmulp  st(2),st
  403c8c:	std    
  403c8d:	inc    edi
  403c8e:	push   ebp
  403c8f:	push   edx
  403c90:	mov    ebp,0x1190111b
  403c95:	cmp    DWORD PTR [ebx-0xf898549],eax
  403c9b:	pop    ebp
  403c9c:	adc    BYTE PTR [eax-0x28],0xe7
  403ca0:	lods   eax,DWORD PTR ds:[esi]
  403ca1:	out    0x99,eax
  403ca3:	inc    edi
  403ca4:	inc    ecx
  403ca5:	adc    eax,0x78073f01
  403caa:	mov    eax,ds:0x566677ea
  403caf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403cb0:	xchg   DWORD PTR [esi],edi
  403cb2:	clc    
  403cb3:	jle    0x403d30
  403cb5:	xor    al,0xa7
  403cb7:	mov    eax,ds:0x1fbd4c8e
  403cbc:	int    0xe9
  403cbe:	pop    es
  403cbf:	imul   ecx,DWORD PTR ds:0xbe4dc24b,0x688729d8
  403cc9:	and    al,0x31
  403ccb:	jne    0x403cd8
  403ccd:	call   0x8833e3e4
  403cd2:	xchg   ecx,eax
  403cd3:	fsubr  st,st(5)
  403cd5:	pop    esi
  403cd6:	pop    edx
  403cd7:	xor    eax,0x76408e70
  403cdc:	das    
  403cdd:	dec    edi
  403cde:	jmp    0x403ccf
  403ce0:	aas    
  403ce1:	xchg   esp,eax
  403ce2:	gs ret 0xa16f
  403ce6:	shr    ebx,cl
  403ce8:	xchg   ecx,eax
  403ce9:	fnsave [ebx]
  403ceb:	and    edx,DWORD PTR [ecx+0x2]
  403cee:	mov    ds:0x49968011,al
  403cf3:	push   eax
  403cf4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403cf5:	push   esi
  403cf6:	mov    eax,ds:0x64b77335
  403cfb:	sub    al,0x1
  403cfd:	nop
  403cfe:	adc    al,0x3
  403d00:	in     al,dx
  403d01:	call   0xb1c5:0xb5c7ce8
  403d08:	fwait
  403d09:	cmp    eax,0xc4901f92
  403d0f:	xor    cl,BYTE PTR [edi-0x197d4d76]
  403d15:	fmul   DWORD PTR [edx+ebx*4+0x62d6376a]
  403d1c:	and    DWORD PTR [esi+0x69],eax
  403d1f:	mov    bl,0x40
  403d21:	stc    
  403d22:	or     eax,0xaf49bda
  403d27:	mov    BYTE PTR [edi-0x42],ch
  403d2a:	sbb    BYTE PTR [ecx],bh
  403d2c:	push   cs
  403d2d:	das    
  403d2e:	in     eax,dx
  403d2f:	ins    DWORD PTR es:[edi],dx
  403d30:	(bad)  
  403d31:	sub    eax,0xae526b9b
  403d36:	push   ebp
  403d37:	sub    al,0xf1
  403d39:	inc    ebp
  403d3a:	xchg   ebx,eax
  403d3b:	or     esp,DWORD PTR [ebp-0x3d0e37cd]
  403d41:	outs   dx,DWORD PTR ds:[esi]
  403d42:	out    0xa7,al
  403d44:	mov    eax,0xc0a779fb
  403d49:	mov    BYTE PTR [ecx+ebx*1-0x2dd964f1],cl
  403d50:	sbb    eax,0x6964131f
  403d55:	push   ebp
  403d56:	adc    eax,0x181c0181
  403d5b:	stos   BYTE PTR es:[edi],al
  403d5c:	ror    BYTE PTR [esi],1
  403d5e:	retf   0x67a0
  403d61:	int    0xe2
  403d63:	xchg   ecx,eax
  403d64:	retf   0xe3ac
  403d67:	cmp    BYTE PTR [eax-0xe],dl
  403d6a:	mov    ds:0x109bf2e1,al
  403d6f:	jb     0x403d5c
  403d71:	push   ds
  403d72:	outs   dx,BYTE PTR ds:[esi]
  403d73:	pop    esp
  403d74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403d75:	xchg   ebx,eax
  403d76:	call   0xbc206174
  403d7b:	int    0x52
  403d7d:	fs pop ss
  403d7f:	jmp    0x403d25
  403d81:	dec    esp
  403d82:	imul   eax,DWORD PTR [ebp+0x61],0x3be7c193
  403d89:	loopne 0x403dc8
  403d8b:	jl     0x403d5d
  403d8d:	sar    bh,0x42
  403d90:	stos   DWORD PTR es:[edi],eax
  403d91:	pop    edi
  403d92:	or     bh,BYTE PTR [esi-0x1a25da5d]
  403d98:	cmp    al,0x2a
  403d9a:	dec    edx
  403d9b:	lea    ecx,[ebp-0x3e437081]
  403da1:	fwait
  403da2:	cs pusha 
  403da4:	xchg   BYTE PTR [eax+0x2916b3bc],bh
  403daa:	mov    edi,0xde43a9b4
  403daf:	push   esi
  403db0:	add    eax,0xae59fcb7
  403db5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403db6:	fstp   st(0)
  403db8:	and    eax,0xfee33baf
  403dbd:	mov    edi,0x89ad98c
  403dc2:	int    0x30
  403dc4:	outs   dx,BYTE PTR ds:[esi]
  403dc5:	in     eax,dx
  403dc6:	add    eax,0x683e851
  403dcb:	and    eax,0x4ef8bc03
  403dd0:	mov    cl,0x8b
  403dd2:	xlat   BYTE PTR ds:[ebx]
  403dd3:	sbb    al,0xd6
  403dd5:	or     dh,al
  403dd7:	push   0x4f681bfb
  403ddc:	jp     0x403db9
  403dde:	(bad)  
  403ddf:	rcr    BYTE PTR [esi-0x5a],0xc8
  403de3:	test   eax,0x97e33c9a
  403de8:	mov    eax,0x59025fb4
  403ded:	stos   DWORD PTR es:[edi],eax
  403dee:	mov    ecx,0x3fd1c294
  403df3:	and    BYTE PTR [ebp-0x4fa4c72c],0x65
  403dfa:	imul   eax,DWORD PTR [edx],0x6ad828a
  403e00:	das    
  403e01:	in     al,0xea
  403e03:	pop    ebx
  403e04:	outs   dx,DWORD PTR ds:[esi]
  403e05:	and    BYTE PTR [ecx],cl
  403e07:	fmul   QWORD PTR [ecx-0x7afc9110]
  403e0d:	cmp    eax,0x2b44a844
  403e12:	iret   
  403e13:	retf   
  403e14:	int3   
  403e15:	dec    ecx
  403e16:	ficomp DWORD PTR [ebx-0x77]
  403e19:	mov    ebx,0x9b28eae7
  403e1e:	test   ah,cl
  403e20:	mov    ss,eax
  403e22:	and    eax,0xa9b6aaa5
  403e27:	or     al,bl
  403e29:	loop   0x403e48
  403e2b:	(bad)  
  403e2d:	(bad)  
  403e2e:	jmp    0x51fc:0x5ed32db4
  403e35:	les    esp,FWORD PTR [esi]
  403e37:	sbb    BYTE PTR [edi-0x3adf5d7a],al
  403e3d:	inc    esi
  403e3e:	test   BYTE PTR [edx],0xe7
  403e41:	stos   DWORD PTR es:[edi],eax
  403e42:	jb     0x403e9c
  403e44:	mov    ebp,DWORD PTR [edi]
  403e46:	sub    dl,al
  403e48:	mov    ss,WORD PTR [ebx+0xf1d5663]
  403e4e:	jbe    0x403e97
  403e50:	xchg   esi,eax
  403e51:	xchg   edi,eax
  403e52:	mov    esi,0xba7bb2ab
  403e57:	sbb    DWORD PTR [edx+0x243e6c9c],esi
  403e5d:	add    DWORD PTR [edx-0x1e],ebx
  403e60:	cs dec edi
  403e62:	pop    ebp
  403e63:	es je  0x403e35
  403e66:	sub    ah,BYTE PTR [eax]
  403e68:	outs   dx,BYTE PTR ds:[esi]
  403e69:	retf   
  403e6a:	jae    0x403e87
  403e6c:	push   cs
  403e6d:	ror    BYTE PTR [esi],1
  403e6f:	or     ecx,DWORD PTR [ebp-0x2d]
  403e72:	mov    al,0x23
  403e74:	shl    DWORD PTR [eax-0x15f3de0b],1
  403e7a:	sbb    ch,cl
  403e7c:	scas   al,BYTE PTR es:[edi]
  403e7d:	das    
  403e7e:	ins    DWORD PTR es:[edi],dx
  403e7f:	mov    al,ds:0xd2650cae
  403e84:	xchg   edi,eax
  403e86:	mov    ah,0x19
  403e88:	aas    
  403e89:	fldcw  WORD PTR [edi]
  403e8b:	jle    0x403ec5
  403e8d:	test   BYTE PTR [ebx],ch
  403e8f:	cli    
  403e90:	ret    
  403e91:	add    eax,0x94aa9499
  403e96:	push   edx
  403e97:	push   ss
  403e98:	out    0xe1,al
  403e9a:	addr16 push esi
  403e9c:	xchg   esi,eax
  403e9d:	xchg   esp,eax
  403e9e:	(bad)  
  403e9f:	mov    al,0xbc
  403ea1:	jo     0x403e7b
  403ea3:	hlt    
  403ea4:	nop
  403ea5:	jnp    0x403e80
  403ea7:	jmp    FWORD PTR [ebp+0x21bb7ca8]
  403ead:	call   0xf813:0x6e061590
  403eb4:	mov    eax,0xbb34b7e4
  403eb9:	shr    ah,cl
  403ebb:	stos   DWORD PTR es:[edi],eax
  403ebc:	stc    
  403ebd:	repnz cmp eax,edx
  403ec0:	call   0x51a936aa
  403ec5:	sbb    eax,DWORD PTR [esi-0x51]
  403ec8:	xchg   edi,eax
  403ec9:	or     al,0xd
  403ecb:	jle    0x403eac
  403ecd:	pop    es
  403ece:	(bad)  
  403ecf:	in     al,0xec
  403ed1:	std    
  403ed2:	mov    edx,0x44e206af
  403ed7:	push   eax
  403ed8:	mov    ch,dh
  403eda:	push   ss
  403edb:	les    bx,DWORD PTR [ecx]
  403ede:	inc    ebp
  403edf:	dec    esp
  403ee0:	dec    dh
  403ee2:	inc    ebx
  403ee3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403ee4:	and    ebx,eax
  403ee6:	adc    al,0xb
  403ee8:	retf   0x211c
  403eeb:	dec    edi
  403eec:	mov    WORD PTR [eax-0x6b4e4e5b],ds
  403ef2:	stos   BYTE PTR es:[edi],al
  403ef3:	push   ebx
  403ef4:	and    eax,0xa3c49235
  403ef9:	mov    BYTE PTR ds:0x2f169d7d,dl
  403eff:	int    0x7
  403f01:	call   0x8c6b25f0
  403f06:	mov    eax,0x168a4298
  403f0b:	xor    ecx,edi
  403f0d:	fcmovb st,st(2)
  403f0f:	adc    ch,BYTE PTR ds:0x9adb22c0
  403f15:	les    edi,FWORD PTR [ecx+esi*4+0x6488be24]
  403f1c:	jae    0x403f0d
  403f1e:	sub    ch,ah
  403f20:	cld    
  403f21:	popf   
  403f22:	int3   
  403f23:	mov    ch,0x20
  403f25:	mov    ds:0x251d85db,al
  403f2a:	(bad)  
  403f2c:	pushf  
  403f2d:	in     al,0xdf
  403f2f:	xor    DWORD PTR [edi+0x26d1146b],eax
  403f35:	rcr    DWORD PTR [ecx+0x7fa997fc],cl
  403f3b:	mov    ds:0xc98ab83c,eax
  403f40:	mov    dl,0xa3
  403f42:	in     eax,dx
  403f43:	sub    al,BYTE PTR [ebx-0x6ce46680]
  403f49:	in     eax,0xd6
  403f4b:	push   cs
  403f4c:	xchg   ecx,eax
  403f4d:	sbb    BYTE PTR [edi-0x58],bl
  403f50:	enter  0x9941,0x14
  403f54:	sbb    DWORD PTR [edi],0x23
  403f57:	popa   
  403f58:	push   ebp
  403f59:	mov    dh,0xbf
  403f5b:	fidiv  DWORD PTR [edx+0x4f51cbcd]
  403f61:	int    0x5b
  403f63:	ret    0xa1a8
  403f66:	daa    
  403f67:	jmp    0x5e6919bc
  403f6c:	out    dx,eax
  403f6d:	dec    ecx
  403f6e:	xlat   BYTE PTR ds:[ebx]
  403f6f:	push   0x2ccb56e5
  403f74:	pop    edx
  403f75:	jmp    0xe879:0xb1e32967
  403f7c:	jno    0x403f8f
  403f7e:	mov    ebp,0x8f80b1d5
  403f83:	fisttp QWORD PTR [edi]
  403f85:	stos   DWORD PTR es:[edi],eax
  403f86:	mov    ebp,0x67d28415
  403f8b:	lods   eax,DWORD PTR ds:[esi]
  403f8c:	out    0x3d,al
  403f8e:	pop    ebx
  403f8f:	jnp    0x403f2c
  403f91:	call   0xe507:0x87650e10
  403f98:	scas   al,BYTE PTR es:[edi]
  403f99:	scas   al,BYTE PTR es:[edi]
  403f9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403f9b:	std    
  403f9c:	test   DWORD PTR [ebp+ecx*2-0x19],edx
  403fa0:	xor    eax,0xa579595
  403fa5:	test   al,0x8e
  403fa7:	jp     0x40400e
  403fa9:	pop    ss
  403faa:	loop   0x403f42
  403fac:	lea    ecx,[edi]
  403fae:	stos   DWORD PTR es:[edi],eax
  403faf:	push   ebp
  403fb0:	sbb    eax,0xd0aaf1c3
  403fb5:	test   BYTE PTR [edi],dh
  403fb7:	into   
  403fb8:	cdq    
  403fb9:	or     ebx,ecx
  403fbb:	adc    dh,ch
  403fbd:	sbb    DWORD PTR [esi+0x7a],esi
  403fc0:	icebp  
  403fc1:	daa    
  403fc2:	cmp    al,0x8b
  403fc4:	jmp    0x9a46:0x8c457d4b
  403fcb:	dec    eax
  403fcc:	jmp    0x4048:0x5418cdb2
  403fd3:	pop    eax
  403fd4:	xchg   ecx,eax
  403fd5:	dec    esi
  403fd6:	mov    al,0xc
  403fd8:	fs mov edi,0xb57b79c7
  403fde:	sbb    esp,DWORD PTR [edi-0x2254031e]
  403fe4:	mov    eax,ds:0xe622109f
  403fe9:	pop    eax
  403fea:	mov    dh,0x69
  403fec:	imul   ebx,DWORD PTR [ecx+0x4e],0x4f9997ba
  403ff3:	lods   al,BYTE PTR ds:[esi]
  403ff4:	and    DWORD PTR ds:0x36f6b878,0x23c4221c
  403fff:	push   ds
  404000:	(bad)  
  404002:	test   eax,0xc77fa11
  404007:	in     eax,0xd0
  404009:	jg     0x404077
  40400b:	ss lahf 
  40400d:	jp     0x404066
  40400f:	cmp    eax,0x190377c7
  404014:	data16 in al,dx
  404016:	repnz enter 0x8408,0x8d
  40401b:	outs   dx,DWORD PTR ds:[esi]
  40401c:	push   eax
  40401d:	sti    
  40401e:	in     eax,dx
  40401f:	js     0x403fae
  404021:	lock fcmovnu st,st(5)
  404024:	mov    dl,0x44
  404026:	or     al,0x7b
  404028:	pop    edx
  404029:	(bad)  
  40402a:	or     edx,edi
  40402c:	mov    eax,ds:0x2b4b15bc
  404031:	pop    ds
  404032:	neg    WORD PTR [edx+0x747a59c3]
  404039:	jle    0x404044
  40403b:	dec    ecx
  40403c:	std    
  40403d:	stos   BYTE PTR es:[edi],al
  40403e:	std    
  40403f:	adc    ah,BYTE PTR [ebx-0x1a]
  404042:	sbb    dh,bh
  404044:	retf   0x1dd4
  404047:	ror    bl,0x4
  40404a:	jl     0x404052
  40404c:	repnz inc ebx
  40404e:	pop    esi
  40404f:	dec    edx
  404050:	mov    ebx,DWORD PTR ss:[esi+esi*4-0x1926a06b]
  404058:	retf   
  404059:	les    edi,FWORD PTR [ebx-0x43]
  40405c:	sub    bh,dl
  40405e:	mul    eax
  404060:	dec    esi
  404061:	and    eax,0x7a3822e2
  404066:	mov    ebp,?
  404068:	aam    0x77
  40406a:	pushf  
  40406b:	sbb    al,0xee
  40406d:	fwait
  40406e:	hlt    
  40406f:	inc    edi
  404070:	setno  BYTE PTR [eax-0x52d70f15]
  404077:	shr    DWORD PTR [esi-0xf],cl
  40407a:	fs push eax
  40407c:	xchg   edi,eax
  40407d:	mov    ah,0x3c
  40407f:	mov    ebx,0x741d4909
  404084:	ds sbb al,0xba
  404087:	mov    ecx,0xfad0d284
  40408c:	or     BYTE PTR ds:0x70c06474,0x6c
  404093:	jns    0x4040c1
  404095:	and    DWORD PTR [esp+eiz*8+0x45e243b2],ebp
  40409c:	mov    WORD PTR [ecx+0x1908c80c],es
  4040a2:	dec    edi
  4040a3:	stos   BYTE PTR es:[edi],al
  4040a4:	bound  edi,QWORD PTR [ecx+0x5e3ef28e]
  4040aa:	jo     0x404098
  4040ac:	mov    al,ds:0x1c0d8285
  4040b1:	fbstp  TBYTE PTR [edi]
  4040b3:	cmp    cl,BYTE PTR [edi-0x26388f4a]
  4040b9:	cmp    DWORD PTR [ecx-0x66],ecx
  4040bc:	and    esi,eax
  4040be:	mov    ebx,esp
  4040c0:	(bad)  
  4040c1:	adc    dl,bh
  4040c3:	shl    BYTE PTR [ecx+esi*2-0x3aa90023],cl
  4040ca:	pop    ebp
  4040cb:	and    BYTE PTR [ebp+0x48638158],ch
  4040d1:	sbb    al,0x4b
  4040d3:	jb     0x40414e
  4040d5:	out    0x1c,al
  4040d7:	sub    bh,bh
  4040d9:	aam    0xee
  4040db:	call   0xbfeb3a83
  4040e0:	sbb    eax,0x9d91b4f0
  4040e5:	dec    eax
  4040e6:	pop    edx
  4040e7:	fidiv  DWORD PTR [edx+ebp*1-0x16]
  4040eb:	xchg   edx,eax
  4040ec:	addr16 pop esp
  4040ee:	stc    
  4040ef:	dec    BYTE PTR [eax-0x545be3b7]
  4040f5:	dec    ecx
  4040f6:	or     DWORD PTR [esi+ecx*8-0x4d5344f5],esi
  4040fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4040fe:	imul   esp,DWORD PTR [edx+ebx*2+0x48378ea8],0xb6be994c
  404109:	inc    ah
  40410b:	shl    BYTE PTR [eax+0x336ddd0],1
  404111:	sbb    DWORD PTR [eax-0x1eeeb937],0x2fd596e9
  40411b:	ss (bad) 
  40411d:	call   DWORD PTR [esi]
  40411f:	or     al,0xe8
  404121:	(bad)  
  404123:	and    BYTE PTR [eax],0xa0
  404126:	add    BYTE PTR [esi-0x5793cbde],bl
  40412c:	fild   QWORD PTR [esi-0x1e]
  40412f:	popf   
  404130:	mov    fs,WORD PTR [ecx]
  404132:	out    dx,al
  404133:	dec    esi
  404134:	or     BYTE PTR ss:[edx-0x65],ch
  404138:	mov    ecx,0x5b07a856
  40413d:	iret   
  40413e:	shr    ebp,1
  404140:	cmp    DWORD PTR [ebx-0x4],ebx
  404143:	clc    
  404144:	sub    BYTE PTR [ebp-0x4546644e],0x90
  40414b:	adc    edx,ebp
  40414d:	test   BYTE PTR [ebx],ah
  40414f:	inc    ecx
  404150:	xchg   esi,eax
  404151:	ja     0x404105
  404153:	mov    dh,0x16
  404155:	pop    esp
  404156:	jns    0x404155
  404158:	and    esp,esi
  40415a:	hlt    
  40415b:	stc    
  40415c:	mov    al,ds:0x407e7ef9
  404161:	mov    DWORD PTR [esi-0xe],edx
  404164:	adc    ch,BYTE PTR [ebp+0x4]
  404167:	adc    edi,DWORD PTR [edi-0x38]
  40416a:	imul   ebx,DWORD PTR [edx-0x59],0x27
  40416e:	mov    al,ds:0x7fcb49e9
  404173:	pop    esi
  404174:	mov    bl,0xa
  404176:	cmc    
  404177:	aad    0xf7
  404179:	repz jmp 0xc5affaf9
  40417f:	adc    eax,0xef0662ef
  404184:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404185:	mov    esp,0x7b8eb959
  40418a:	enter  0x179b,0x69
  40418e:	lahf   
  40418f:	ins    DWORD PTR es:[edi],dx
  404190:	stc    
  404191:	or     al,0x74
  404193:	mov    eax,0x975d8882
  404198:	add    DWORD PTR [esi-0x1a],eax
  40419b:	jo     0x40413f
  40419d:	mov    ebx,0x713e1066
  4041a2:	jno    0x4041ad
  4041a4:	call   0xcdd32425
  4041a9:	in     eax,0x99
  4041ab:	out    0xda,al
  4041ad:	add    esp,edx
  4041af:	and    esp,edx
  4041b1:	out    0xd8,eax
  4041b3:	mov    ebx,0x2dff7848
  4041b8:	xchg   esp,eax
  4041b9:	hlt    
  4041ba:	gs mov dl,0x35
  4041bd:	cld    
  4041be:	pop    ebx
  4041bf:	imul   esi,DWORD PTR [eax-0x755ce305],0xd
  4041c6:	js     0x40422e
  4041c8:	jg     0x404184
  4041ca:	xor    al,0xf7
  4041cc:	jl     0x404163
  4041ce:	mov    al,0xfa
  4041d0:	cmp    BYTE PTR [edi],dl
  4041d2:	inc    ebp
  4041d3:	scas   al,BYTE PTR es:[edi]
  4041d4:	out    0x2e,eax
  4041d6:	loop   0x4041d0
  4041d8:	push   cs
  4041d9:	fldenv [ecx-0x589ea169]
  4041e0:	mov    es,WORD PTR [ebx+0x56]
  4041e3:	sub    BYTE PTR [eax],bh
  4041e5:	cmp    BYTE PTR [ebp+0x31],al
  4041e8:	cdq    
  4041e9:	cmp    eax,0x692dab5f
  4041ee:	xor    al,0x7b
  4041f0:	lahf   
  4041f1:	mov    bh,BYTE PTR [ebp+0x1b3f7d68]
  4041f7:	fdivr  DWORD PTR [edi+0x254f4283]
  4041fd:	or     al,0xe1
  4041ff:	loop   0x40419b
  404201:	inc    edi
  404202:	pop    es
  404203:	add    al,al
  404205:	pop    esi
  404206:	cs mov dl,0x5a
  404209:	cs je  0x4041d1
  40420c:	mov    bl,0x10
  40420e:	mov    gs,WORD PTR [edi]
  404210:	or     esp,ecx
  404212:	call   0x4f117e1
  404217:	(bad)  
  404218:	adc    eax,0x91f9b617
  40421d:	sub    dh,BYTE PTR [edi+0x18c9de7a]
  404223:	push   ds
  404224:	jbe    0x4041ab
  404226:	xchg   DWORD PTR [eax-0x5a],ebp
  404229:	in     eax,0xd3
  40422b:	dec    ebx
  40422c:	sahf   
  40422d:	jg     0x4041b6
  40422f:	pop    ebx
  404230:	out    dx,eax
  404231:	cmp    esi,DWORD PTR [ebp+0xb]
  404234:	mov    ebx,0x85f854b8
  404239:	dec    esi
  40423a:	dec    edx
  40423b:	mov    ah,BYTE PTR [ebp-0x70fd0cd6]
  404241:	test   al,0x82
  404243:	(bad)  
  404244:	mov    al,ds:0x5675220c
  404249:	arpl   si,cx
  40424b:	sub    al,0x32
  40424d:	cmp    BYTE PTR [eax-0x46],dl
  404250:	dec    ebp
  404251:	xor    eax,0x912f550c
  404256:	jp     0x404261
  404258:	sbb    eax,0xfa1024ca
  40425d:	inc    esp
  40425e:	cli    
  40425f:	pop    ecx
  404260:	(bad)  
  404261:	jno    0x4041e8
  404263:	sbb    esp,DWORD PTR [ebx+0x5046b054]
  404269:	pop    esi
  40426a:	mov    ebx,0x953e733c
  40426f:	xor    DWORD PTR [eax-0x4],ebp
  404272:	add    esi,DWORD PTR [ebx+0x6b8b9420]
  404278:	shr    ebp,cl
  40427a:	out    dx,al
  40427b:	pop    esi
  40427c:	dec    esp
  40427d:	mov    ebx,0x4f56bb9a
  404282:	push   ebp
  404283:	pop    edi
  404284:	adc    al,0x52
  404286:	push   edi
  404287:	ins    BYTE PTR es:[edi],dx
  404288:	(bad)  
  404289:	mov    ebx,0x4fad1fed
  40428e:	push   edi
  40428f:	ss jge 0x40428f
  404292:	mov    esp,0x75f5421a
  404297:	stos   BYTE PTR es:[edi],al
  404298:	pop    ebp
  404299:	sbb    dh,BYTE PTR [edx-0x32b28db7]
  40429f:	dec    ebx
  4042a0:	outs   dx,DWORD PTR ds:[esi]
  4042a1:	adc    ebp,DWORD PTR [esi]
  4042a3:	mov    ch,0xb
  4042a5:	xor    edi,DWORD PTR [eax]
  4042a7:	and    BYTE PTR [ebx],bl
  4042a9:	inc    esi
  4042aa:	jle    0x40424c
  4042ac:	data16 mov BYTE PTR [edi-0x4b],bl
  4042b0:	pop    ebx
  4042b1:	jg     0x4042f9
  4042b3:	push   cs
  4042b4:	jnp    0x4042ee
  4042b6:	xchg   ebx,eax
  4042b7:	adc    ch,dl
  4042b9:	js     0x4042d0
  4042bb:	and    DWORD PTR [edx+ebx*2-0x398fba7f],0x49
  4042c3:	rcr    DWORD PTR [edx],1
  4042c5:	stos   DWORD PTR es:[edi],eax
  4042c6:	cmp    DWORD PTR [esi],edx
  4042c8:	dec    edi
  4042c9:	push   0x7c
  4042cb:	mov    esi,DWORD PTR [eax]
  4042cd:	pushf  
  4042ce:	cmc    
  4042cf:	cdq    
  4042d0:	gs or  dl,cl
  4042d3:	stos   BYTE PTR es:[edi],al
  4042d4:	call   0x6415:0x9ffb6f35
  4042db:	in     eax,dx
  4042dc:	test   DWORD PTR [ebx-0x6],eax
  4042df:	adc    ebx,edi
  4042e1:	sbb    eax,0x9582c018
  4042e6:	push   0xbd5eae2b
  4042eb:	add    cl,al
  4042ed:	mov    BYTE PTR [edi],dh
  4042ef:	pop    ebp
  4042f0:	rcl    esi,0xea
  4042f3:	add    edx,eax
  4042f5:	xchg   edx,eax
  4042f6:	iret   
  4042f7:	sub    eax,0xafca2b8
  4042fc:	mov    dl,0xb
  4042fe:	xchg   esi,eax
  4042ff:	sub    ch,BYTE PTR [ecx-0x30]
  404302:	mov    es,WORD PTR [esi]
  404304:	cmp    ebp,DWORD PTR [ecx]
  404306:	pop    eax
  404307:	push   es
  404308:	pop    edi
  404309:	adc    ah,cl
  40430b:	mov    eax,0x413ca1b8
  404310:	hlt    
  404311:	ds jmp 0x40429d
  404314:	cmp    al,0xf3
  404316:	data16 loope 0x4042e6
  404319:	call   0xcbbe:0x79bdb30f
  404320:	mov    cl,0xba
  404322:	cmp    DWORD PTR [esi-0x7c6a7c85],ecx
  404328:	stc    
  404329:	mov    BYTE PTR [edi+0x56],ah
  40432c:	stc    
  40432d:	jmp    0x4043a1
  40432f:	inc    esp
  404330:	push   edx
  404331:	lea    esi,[edx+0x74]
  404334:	pop    ecx
  404335:	push   eax
  404336:	or     eax,0x9180ef64
  40433b:	xor    cl,dh
  40433d:	in     al,0x16
  40433f:	push   esp
  404340:	xlat   BYTE PTR ds:[ebx]
  404341:	push   edi
  404342:	inc    esi
  404343:	adc    DWORD PTR [ebp+0x29],edi
  404346:	outs   dx,DWORD PTR ds:[esi]
  404347:	scas   eax,DWORD PTR es:[edi]
  404348:	imul   esp,edi,0x22
  40434b:	shr    DWORD PTR [ebx],1
  40434d:	adc    ch,bh
  40434f:	jle    0x40438d
  404351:	mov    esp,0x74365bf0
  404356:	sub    eax,0x750ff97f
  40435b:	jge    0x4042ff
  40435d:	cmc    
  40435e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40435f:	cs cld 
  404361:	and    DWORD PTR [edi-0x60f39d1f],0x92a718b9
  40436b:	jae    0x4043e1
  40436d:	ss call 0x7780:0x1835c85
  404375:	shl    esp,1
  404377:	push   esp
  404378:	ret    0xb928
  40437b:	jp     0x4043e7
  40437d:	or     DWORD PTR ds:0xca3db4,0x9290450e
  404387:	push   ebx
  404388:	repz inc ecx
  40438a:	jle    0x40431d
  40438c:	test   BYTE PTR [ebp+0x6c29227a],dh
  404392:	xchg   ebp,eax
  404393:	push   esp
  404394:	jno    0x4043b7
  404396:	(bad)  
  404397:	xchg   edi,eax
  404398:	sbb    eax,0x39e7f42b
  40439d:	xor    BYTE PTR ds:0xba3fa5c8,cl
  4043a3:	shr    edi,cl
  4043a5:	xchg   ecx,eax
  4043a6:	lods   al,BYTE PTR ds:[esi]
  4043a7:	mov    ch,0x44
  4043a9:	xchg   ebp,eax
  4043aa:	les    esi,FWORD PTR [edi]
  4043ac:	ror    edi,cl
  4043ae:	inc    edi
  4043af:	gs ins BYTE PTR es:[edi],dx
  4043b1:	inc    edx
  4043b2:	pop    edx
  4043b3:	sti    
  4043b4:	inc    edx
  4043b5:	pushf  
  4043b6:	arpl   bx,di
  4043b8:	jmp    0x4043a5
  4043ba:	mov    bh,0xd
  4043bc:	adc    eax,0x859687e1
  4043c1:	scas   eax,DWORD PTR es:[edi]
  4043c2:	popf   
  4043c3:	mov    al,0x30
  4043c5:	mov    ah,0x38
  4043c7:	mov    cl,0x10
  4043c9:	mov    BYTE PTR [esi-0x2f89042c],ch
  4043cf:	adc    DWORD PTR [esi+eax*2+0x3d7f32fc],esi
  4043d6:	inc    ebx
  4043d7:	pop    ebx
  4043d8:	shl    BYTE PTR [eax],1
  4043da:	shl    DWORD PTR [ecx-0x70],0x72
  4043de:	rcl    DWORD PTR [edi-0x6d],cl
  4043e1:	xchg   ecx,eax
  4043e2:	pop    eax
  4043e3:	rol    DWORD PTR [edx],cl
  4043e5:	in     eax,dx
  4043e6:	rol    esi,1
  4043e8:	clc    
  4043e9:	xchg   edi,eax
  4043ea:	mov    ebx,0xf009d8f7
  4043ef:	daa    
  4043f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4043f1:	pop    esp
  4043f2:	xchg   esp,eax
  4043f3:	std    
  4043f4:	adc    DWORD PTR [edi+0x654a6941],0x46
  4043fb:	mov    edi,DWORD PTR [eax+0x2717394]
  404401:	cmc    
  404402:	js     0x4043bd
  404404:	push   ds
  404405:	adc    BYTE PTR [ecx-0xa],dh
  404408:	jno    0x40447e
  40440a:	aaa    
  40440b:	loopne 0x404448
  40440d:	out    0x5c,eax
  40440f:	cmp    dh,BYTE PTR [edi+ecx*4]
  404412:	scas   eax,DWORD PTR es:[edi]
  404413:	mov    ch,0x8a
  404415:	or     eax,0xa7eff55c
  40441a:	cmp    DWORD PTR [edx],edx
  40441c:	nop
  40441d:	ss (bad) 
  40441f:	sub    al,0xb4
  404421:	pop    edi
  404422:	push   ds
  404423:	addr16 aam 0x66
  404426:	popa   
  404427:	mov    BYTE PTR [esi],dh
  404429:	lds    ebp,FWORD PTR [edx+0x6c233c86]
  40442f:	inc    ebx
  404430:	sub    DWORD PTR [edx+0x560ac09e],ecx
  404436:	sbb    esi,eax
  404438:	xlat   BYTE PTR ds:[ebx]
  404439:	xor    eax,DWORD PTR [eax+0x59]
  40443c:	das    
  40443d:	adc    ah,0xd5
  404440:	loope  0x404493
  404442:	jnp    0x4044a7
  404444:	sub    edi,esp
  404446:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404447:	pusha  
  404448:	mov    al,0xba
  40444a:	cmp    BYTE PTR [edx+0x26f2032b],ah
  404450:	add    eax,0x36e5b7f6
  404455:	sti    
  404456:	(bad)  
  404457:	and    dh,cl
  404459:	xchg   esi,eax
  40445a:	mov    esi,0x45223248
  40445f:	repnz xchg esi,eax
  404461:	sub    BYTE PTR [ecx+ecx*2-0x1],ch
  404465:	loopne 0x404416
  404467:	dec    esp
  404468:	dec    ebx
  404469:	push   esi
  40446a:	fist   DWORD PTR [edx-0x23]
  40446d:	in     al,dx
  40446e:	call   0xb556:0xbecfe678
  404475:	mov    bh,0x5
  404477:	xchg   esp,eax
  404478:	ror    BYTE PTR [edx-0x4ccfc56a],1
  40447e:	pop    esp
  40447f:	call   0x5149c131
  404484:	xor    ebp,ecx
  404486:	into   
  404487:	sub    eax,0xff86a36c
  40448c:	ss iret 
  40448e:	shl    BYTE PTR [esi+0x2970f3f8],cl
  404494:	adc    al,0x37
  404496:	xor    edx,edi
  404498:	repz (bad) 
  40449a:	fldenv [ecx-0x18]
  40449d:	into   
  40449e:	(bad)
  4044a1:	aad    0xe7
  4044a3:	bound  ebx,QWORD PTR [ebp-0x50]
  4044a6:	xchg   edx,eax
  4044a7:	out    0x32,eax
  4044a9:	sub    ecx,edx
  4044ab:	push   esp
  4044ac:	mov    edi,0xc7a65188
  4044b1:	push   ds
  4044b2:	inc    ebp
  4044b3:	adc    eax,0xeca0d7a1
  4044b8:	sbb    eax,0xc4feb188
  4044bd:	(bad)  
  4044bf:	inc    esp
  4044c0:	pop    ebx
  4044c1:	fdivp  st(6),st
  4044c3:	shl    BYTE PTR [ebx],1
  4044c5:	mov    WORD PTR [edi-0x7122e1ee],fs
  4044cb:	pop    edx
  4044cc:	jmp    0x4044f0
  4044ce:	stos   BYTE PTR es:[edi],al
  4044cf:	nop
  4044d0:	out    0x6b,al
  4044d2:	outs   dx,DWORD PTR ds:[esi]
  4044d3:	out    dx,eax
  4044d4:	and    ax,0xe479
  4044d8:	fisub  WORD PTR [eax-0x31]
  4044db:	dec    esi
  4044dc:	cmc    
  4044dd:	retf   
  4044de:	push   es
  4044df:	shl    BYTE PTR [esi],1
  4044e1:	ja     0x93ce4988
  4044e7:	(bad)  
  4044e9:	inc    ecx
  4044ea:	enter  0x5887,0x5e
  4044ee:	rcl    BYTE PTR [eax-0x5c],1
  4044f1:	in     eax,0x45
  4044f3:	sti    
  4044f4:	mov    bh,0xad
  4044f6:	pusha  
  4044f7:	fnstcw WORD PTR [edx+0x1b]
  4044fa:	cmp    edi,DWORD PTR [ebp+0x2d]
  4044fd:	mov    eax,0xfdf75ddb
  404502:	and    DWORD PTR [edi+0x3af9d843],edx
  404508:	ja     0x4044ca
  40450a:	ret    
  40450b:	les    edi,FWORD PTR [esi-0x54]
  40450e:	add    ebx,DWORD PTR [esi]
  404510:	jne    0x404498
  404512:	ret    
  404513:	stos   DWORD PTR es:[edi],eax
  404514:	mov    fs,ebx
  404516:	mov    esi,0x52ef74c7
  40451b:	inc    ecx
  40451c:	bound  eax,QWORD PTR [edx+0x19]
  40451f:	xlat   BYTE PTR ds:[ebx]
  404520:	mov    edx,DWORD PTR [ecx+0x7a]
  404523:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404524:	fld    QWORD PTR [ebx+0x511f746e]
  40452a:	inc    edx
  40452b:	sbb    DWORD PTR [ebp+eiz*4+0x29],0x8708b12a
  404533:	push   es
  404534:	nop
  404535:	imul   esi,DWORD PTR [ebx],0xd46e4796
  40453b:	mov    bh,0x65
  40453d:	ins    DWORD PTR es:[edi],dx
  40453e:	cmp    bh,BYTE PTR [edx]
  404540:	mov    bl,0x8
  404542:	dec    edi
  404543:	xchg   DWORD PTR [edx*1-0x4b4e196c],ebx
  40454a:	mov    cs,WORD PTR [edi+0x1e]
  40454d:	and    al,0xc0
  40454f:	mov    al,0xa6
  404551:	mov    ebp,0x3a59d6e1
  404556:	in     al,dx
  404557:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404558:	call   0x8eede2bf
  40455d:	jbe    0x40450a
  40455f:	ss out dx,eax
  404561:	push   eax
  404562:	fs sub eax,0x64ef88bc
  404568:	test   DWORD PTR [ecx+0x58],ecx
  40456b:	imul   eax
  40456d:	jno    0x404584
  40456f:	xor    ebp,DWORD PTR [edx+0x11]
  404572:	fbld   TBYTE PTR [edx-0x29]
  404575:	call   0x191c:0x1cea2f70
  40457c:	popa   
  40457d:	nop
  40457e:	fsubp  st(6),st
  404580:	rcr    DWORD PTR [ebx+0x2a0845a1],1
  404586:	push   ss
  404587:	out    dx,eax
  404588:	jne    0x404603
  40458a:	icebp  
  40458b:	or     edx,DWORD PTR ds:0x1685b1b6
  404591:	sub    DWORD PTR [ebp-0x27],ebx
  404594:	pop    edx
  404595:	mov    ch,0x3
  404597:	pop    ss
  404598:	verr   WORD PTR [eax+edi*1+0x2620ba4e]
  4045a0:	xchg   esp,eax
  4045a1:	sub    dh,cl
  4045a3:	cld    
  4045a4:	and    BYTE PTR [eax+ebp*1+0x460a72b0],dl
  4045ab:	ins    DWORD PTR es:[edi],dx
  4045ac:	mov    cl,0x1f
  4045ae:	or     BYTE PTR [esi+eiz*8+0x32508691],0xe7
  4045b6:	jnp    0x40453d
  4045b8:	imul   ebp,DWORD PTR [esi+eax*2-0x33cc87aa],0xc17be20a
  4045c3:	lds    esi,FWORD PTR [ecx]
  4045c5:	iret   
  4045c6:	retf   0xc6f4
  4045c9:	pop    ebp
  4045ca:	jno    0x404649
  4045cc:	mov    cl,ch
  4045ce:	jle    0x404608
  4045d0:	outs   dx,DWORD PTR ds:[esi]
  4045d1:	xor    BYTE PTR [ebx+0x50035cc1],bh
  4045d7:	mov    ds:0x306d0d8e,al
  4045dc:	sbb    bl,0x97
  4045df:	jmp    0xfeca8cd
  4045e4:	inc    ebx
  4045e5:	aaa    
  4045e6:	in     eax,dx
  4045e7:	cs out dx,eax
  4045e9:	je     0x4045a6
  4045eb:	sbb    ebp,DWORD PTR [ebx+0x6e965d66]
  4045f1:	xor    eax,0xdbf0f262
  4045f6:	sub    eax,0x3427b024
  4045fb:	ss cmps DWORD PTR ss:[esi],DWORD PTR es:[edi]
  4045fe:	and    ebx,DWORD PTR [edi]
  404600:	loop   0x4045cd
  404602:	dec    eax
  404603:	dec    edi
  404604:	inc    edi
  404605:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404606:	inc    ebp
  404607:	pop    edx
  404608:	in     al,0x3e
  40460a:	sub    DWORD PTR [ebp+0x15007363],0x7b
  404611:	fcom   DWORD PTR [esi]
  404613:	mov    edx,esi
  404615:	mov    dh,0x77
  404617:	jae    0x404672
  404619:	sar    dl,cl
  40461b:	push   ss
  40461c:	pop    ds
  40461d:	xor    eax,DWORD PTR [ecx]
  40461f:	inc    esp
  404620:	jle    0x404649
  404622:	jp     0x404689
  404624:	arpl   WORD PTR [edi],cx
  404626:	jne    0x40460a
  404628:	push   es
  404629:	xor    bh,al
  40462b:	jno    0x4045fb
  40462d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40462e:	push   ebp
  40462f:	inc    eax
  404630:	shl    BYTE PTR [ebx],1
  404632:	popa   
  404633:	or     edx,DWORD PTR [ebx]
  404635:	xchg   ecx,eax
  404636:	pop    edi
  404637:	hlt    
  404638:	add    BYTE PTR [bx-0x20],dh
  40463c:	sub    DWORD PTR [edi*4-0x9b49a2f],ebx
  404643:	aad    0x47
  404645:	dec    esp
  404646:	mov    BYTE PTR [ecx+0x748f97bd],al
  40464c:	jmp    esp
  40464e:	in     eax,dx
  40464f:	je     0x404644
  404651:	push   ss
  404652:	sbb    dh,al
  404654:	mov    al,ds:0x18bf5c2f
  404659:	lea    esp,[ebx]
  40465b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40465c:	ss fmul st,st(7)
  40465f:	xor    BYTE PTR [ecx+0x4c803d9b],bh
  404665:	xor    DWORD PTR [esi+0x1c40022b],0x689e373a
  40466f:	mov    cs,WORD PTR [edi+0x4b]
  404672:	xor    eax,0x3a2dd8f5
  404677:	inc    ebx
  404678:	push   ds
  404679:	lahf   
  40467a:	mov    eax,ds:0x492911b8
  40467f:	jge    0x404667
  404681:	xchg   ebx,eax
  404682:	repnz add DWORD PTR [ebp-0x166172f4],eax
  404689:	dec    eax
  40468a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40468b:	ret    
  40468c:	jl     0x404685
  40468e:	fwait
  40468f:	push   DWORD PTR [ecx]
  404691:	int3   
  404692:	in     al,0xf3
  404694:	clc    
  404695:	fadd   st,st(7)
  404697:	inc    DWORD PTR [ebp-0x3ce7ad2b]
  40469d:	(bad)  
  40469e:	loopne 0x40466c
  4046a0:	fsubr  DWORD PTR [esi+0x5f]
  4046a3:	ret    0xc3b8
  4046a6:	lods   eax,DWORD PTR ds:[esi]
  4046a7:	fwait
  4046a8:	push   eax
  4046a9:	test   BYTE PTR [edi],dl
  4046ab:	push   0x35
  4046ad:	or     eax,0x2b186e54
  4046b2:	mov    ebp,0x16c8f1f0
  4046b7:	mov    edi,0x269f83f
  4046bc:	add    eax,0xaa96f079
  4046c1:	xor    ch,BYTE PTR [ebx+ecx*8]
  4046c4:	ret    
  4046c5:	xor    cl,BYTE PTR [eax]
  4046c7:	push   edi
  4046c8:	dec    edi
  4046c9:	mov    esi,?
  4046cb:	push   edi
  4046cc:	push   ebp
  4046cd:	cmp    DWORD PTR [esi],ecx
  4046cf:	ja     0x4046c3
  4046d1:	xchg   esp,eax
  4046d2:	fwait
  4046d3:	cmp    bl,BYTE PTR [ebx]
  4046d5:	iret   
  4046d6:	(bad)  
  4046d7:	in     al,dx
  4046d8:	adc    bh,ch
  4046da:	fidivr WORD PTR [ebp+0x5b23a082]
  4046e0:	sbb    edi,ebp
  4046e2:	pop    edx
  4046e3:	mov    dl,0x24
  4046e5:	xchg   ebp,eax
  4046e6:	sub    ecx,eax
  4046e8:	and    bl,BYTE PTR [ebp-0x5c5760bd]
  4046ee:	pop    ds
  4046ef:	pop    ebx
  4046f0:	cmc    
  4046f1:	daa    
  4046f2:	add    esi,DWORD PTR [edx-0x58aa4e60]
  4046f8:	cmp    al,0xcd
  4046fa:	xor    esp,ecx
  4046fc:	call   0x7d65:0xe1f4c5db
  404703:	cmc    
  404704:	push   ecx
  404705:	sbb    BYTE PTR [ebx-0x2a],ah
  404708:	outs   dx,BYTE PTR ds:[esi]
  404709:	rcr    BYTE PTR [ecx+0x25],1
  40470c:	shr    BYTE PTR [ebp-0x23],1
  40470f:	add    esp,DWORD PTR [esi]
  404711:	adc    DWORD PTR [ebx],ebp
  404713:	(bad)  
  404715:	je     0x4046ca
  404717:	pop    eax
  404718:	jno    0x4046e2
  40471a:	scas   al,BYTE PTR es:[edi]
  40471b:	inc    eax
  40471c:	sub    al,0xb4
  40471e:	mov    ebx,0xecfcdaed
  404723:	(bad)  
  404724:	mov    dh,0xa8
  404726:	push   ecx
  404727:	pop    edx
  404728:	loopne 0x404766
  40472a:	test   eax,0x7bae5945
  40472f:	cwde   
  404730:	iret   
  404731:	aaa    
  404732:	or     esi,DWORD PTR [ecx]
  404734:	(bad)  
  404735:	not    BYTE PTR [ecx-0x6119c5e9]
  40473b:	(bad)  
  40473c:	and    ebp,ecx
  40473e:	push   ebx
  40473f:	inc    edi
  404740:	mov    bh,0x5b
  404742:	mov    WORD PTR [esi+eax*1],ds
  404745:	cmp    ah,BYTE PTR [ebp-0x1fe56d7e]
  40474b:	dec    esp
  40474c:	jne    0x4047cd
  40474e:	call   0x708fea0e
  404753:	outs   dx,BYTE PTR ds:[esi]
  404754:	jecxz  0x404791
  404756:	jecxz  0x404770
  404758:	fisub  WORD PTR [esi]
  40475a:	inc    eax
  40475b:	fst    QWORD PTR es:[edx+0x24]
  40475f:	(bad)  
  404761:	mov    DWORD PTR [ecx+0x5d],0x6e2b227b
  404768:	cmp    bl,cl
  40476a:	js     0x40473f
  40476c:	js     0x404793
  40476e:	loop   0x40475d
  404770:	sub    DWORD PTR [bx+si+0x17],esp
  404774:	dec    ebx
  404775:	pusha  
  404776:	popf   
  404777:	push   es
  404778:	aas    
  404779:	mov    dl,0x2c
  40477b:	xchg   ecx,eax
  40477c:	sub    ebp,0x6c
  40477f:	or     ch,dl
  404781:	(bad)  
  404782:	imul   eax,edx,0x71f71d2
  404788:	daa    
  404789:	int    0xfd
  40478b:	sbb    ebx,DWORD PTR [edi]
  40478d:	xchg   ebp,eax
  40478e:	inc    edx
  40478f:	rol    DWORD PTR [eax],0x6d
  404792:	cld    
  404793:	pop    esi
  404794:	enter  0xa233,0xf
  404798:	or     cl,bh
  40479a:	scas   eax,DWORD PTR es:[edi]
  40479b:	sbb    eax,0x404917ae
  4047a0:	rcl    DWORD PTR ds:0xd2be89af,0x85
  4047a7:	mov    ecx,0xcf8d3bcf
  4047ac:	jb     0x40472f
  4047ae:	push   ebx
  4047af:	xor    al,0x33
  4047b1:	mov    dh,0x1
  4047b3:	push   edx
  4047b4:	sbb    esi,edx
  4047b6:	ins    DWORD PTR es:[edi],dx
  4047b7:	out    0x18,al
  4047b9:	xchg   ecx,eax
  4047ba:	jne    0x404818
  4047bc:	sub    esi,DWORD PTR [ebx]
  4047be:	in     eax,dx
  4047bf:	jle    0x40476d
  4047c1:	push   0x57
  4047c3:	jge    0x404806
  4047c5:	iret   
  4047c6:	jmp    0x284fff28
  4047cb:	scas   eax,DWORD PTR es:[edi]
  4047cc:	mov    edx,0x3b8ecd1d
  4047d1:	push   ebx
  4047d2:	das    
  4047d3:	or     BYTE PTR [ebp-0x7a],ah
  4047d6:	rol    ah,cl
  4047d8:	int    0xb7
  4047da:	ins    DWORD PTR es:[edi],dx
  4047db:	cmp    DWORD PTR [ecx],ecx
  4047dd:	aas    
  4047de:	push   ds
  4047df:	out    dx,al
  4047e0:	mov    ecx,0xa231f308
  4047e5:	add    dl,ah
  4047e7:	cmc    
  4047e8:	rcr    DWORD PTR [ebx-0x6e],0x5a
  4047ec:	push   es
  4047ed:	add    al,0x8e
  4047ef:	fistp  WORD PTR [esi-0x1254b447]
  4047f5:	or     al,0x18
  4047f7:	mov    DWORD PTR [ecx+0x76],0x40de020e
  4047fe:	repnz xchg edx,eax
  404800:	in     eax,0x40
  404802:	retf   0x4c3a
  404805:	scas   al,BYTE PTR es:[edi]
  404806:	push   es
  404807:	test   al,0x46
  404809:	xchg   esp,eax
  40480a:	inc    edx
  40480b:	sbb    DWORD PTR [esi+0x6f8e2c5c],eax
  404811:	add    DWORD PTR [edx-0x6f],edx
  404814:	mov    esp,0x69dc0ea1
  404819:	and    eax,0x15478c44
  40481e:	mov    eax,0x7dbf16cc
  404823:	in     al,0xf3
  404825:	data16 je 0x404874
  404828:	cwde   
  404829:	hlt    
  40482a:	out    0xee,eax
  40482c:	pushf  
  40482d:	(bad)  
  40482e:	mov    edx,0x4b965182
  404833:	pop    ebx
  404834:	jecxz  0x404889
  404836:	sahf   
  404837:	inc    ecx
  404838:	add    ebx,DWORD PTR [esi-0x6a5c35ef]
  40483e:	push   ebx
  40483f:	ret    0xc471
  404842:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404843:	jge    0x4048a1
  404845:	retf   0x32e4
  404848:	add    ch,BYTE PTR [ecx+edx*4-0xacd5d4a]
  40484f:	push   es
  404850:	mov    DWORD PTR [ecx+eax*2],esp
  404853:	ss scas al,BYTE PTR es:[edi]
  404855:	cs and bl,ch
  404858:	jo     0x40486b
  40485a:	adc    BYTE PTR ds:0xd3216c45,bl
  404860:	icebp  
  404861:	add    al,0xc0
  404863:	jl     0x40485a
  404865:	test   edx,esp
  404867:	or     cl,BYTE PTR [ecx-0xc]
  40486a:	xchg   esi,eax
  40486b:	iret   
  40486c:	sbb    eax,0xa399bc01
  404871:	iret   
  404872:	jbe    0x40485e
  404874:	xchg   DWORD PTR [esi],esi
  404876:	xor    eax,0xb4d63160
  40487b:	adc    eax,0x7efba2e3
  404880:	xchg   esp,eax
  404881:	or     BYTE PTR [ebp+0x1be06684],bl
  404887:	push   0xffffffa5
  404889:	jae    0x40490a
  40488b:	retf   0xc712
  40488e:	add    edi,DWORD PTR [eax+0x43]
  404891:	push   ebp
  404892:	mov    edx,0xbc9b1e95
  404897:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404898:	stc    
  404899:	xor    DWORD PTR [eax-0x34cd6ee5],esp
  40489f:	popa   
  4048a0:	imul   esi,esi,0xfffffff5
  4048a3:	xor    bl,BYTE PTR [edx-0x1]
  4048a6:	lods   eax,DWORD PTR ds:[esi]
  4048a7:	or     eax,0xa3245ce0
  4048ac:	dec    esi
  4048ad:	iret   
  4048ae:	push   ebx
  4048af:	gs xchg esp,eax
  4048b1:	es mov ebp,0x1fe9a9bc
  4048b7:	add    ebx,edx
  4048b9:	ror    BYTE PTR [esi],0x5e
  4048bc:	or     eax,0x397473a2
  4048c1:	mov    edi,DWORD PTR [edx-0x17ca6775]
  4048c7:	adc    bh,dh
  4048c9:	fidiv  WORD PTR [esi+0x57e5232]
  4048cf:	aaa    
  4048d0:	std    
  4048d1:	ret    0x6530
  4048d4:	(bad)  
  4048d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4048d6:	mov    dl,0x20
  4048d8:	stos   BYTE PTR es:[edi],al
  4048d9:	ja     0x40485f
  4048db:	icebp  
  4048dc:	retf   0xfd24
  4048df:	cli    
  4048e0:	(bad)  
  4048e2:	or     DWORD PTR [edx-0x47b3628f],edi
  4048e8:	and    dl,BYTE PTR [ebx+ecx*8+0x76]
  4048ec:	je     0x404917
  4048ee:	lds    ebp,FWORD PTR [ecx+ebx*1+0x76]
  4048f2:	adc    eax,0x5a8bacd
  4048f8:	xchg   edx,eax
  4048f9:	sbb    bh,BYTE PTR [ebx+0x30]
  4048fc:	jge    0x404943
  4048fe:	dec    esp
  4048ff:	adc    bl,BYTE PTR [esi+0xc]
  404902:	push   ss
  404903:	pop    eax
  404904:	sub    eax,0x2aaa0c18
  404909:	mov    gs,WORD PTR [eax]
  40490b:	repz repnz test al,0xf0
  40490f:	rcr    DWORD PTR [esi+edx*8-0x643866f6],1
  404916:	sbb    esp,DWORD PTR [esi+0x596ddb40]
  40491c:	scas   eax,DWORD PTR es:[edi]
  40491d:	dec    esi
  40491e:	sub    eax,0x5807902f
  404923:	loopne 0x4048ae
  404925:	or     BYTE PTR [edi-0x5955f8b6],bh
  40492b:	mov    edx,0x25ee9ac
  404930:	jmp    0xf0fbea1e
  404935:	xlat   BYTE PTR ds:[ebx]
  404936:	iret   
  404937:	add    cl,BYTE PTR [ebx-0x3e]
  40493a:	or     BYTE PTR ds:0x3a0d51a7,cl
  404940:	pop    es
  404941:	repnz dec esp
  404943:	das    
  404944:	out    dx,eax
  404945:	lock lods al,BYTE PTR ds:[esi]
  404947:	mov    eax,ds:0x9c460d96
  40494c:	jl     0x4048e9
  40494e:	stos   BYTE PTR es:[edi],al
  40494f:	or     DWORD PTR [eax+0x70ef90e3],ebx
  404955:	dec    esi
  404956:	pop    ebx
  404957:	mov    ebp,0x99cdf7a0
  40495c:	push   0x52
  40495e:	mov    eax,ds:0xd00cc862
  404963:	popf   
  404964:	js     0x4048f9
  404966:	or     DWORD PTR [ecx-0x798d1223],eax
  40496c:	cwde   
  40496d:	adc    ah,BYTE PTR [esi+0x2d61d896]
  404973:	push   eax
  404974:	movsx  ebp,dl
  404977:	pop    edi
  404978:	stc    
  404979:	and    DWORD PTR [bp+si+0x34],esp
  40497d:	pusha  
  40497e:	clc    
  40497f:	popf   
  404980:	cwde   
  404981:	inc    esi
  404982:	cmp    esp,esp
  404984:	pop    es
  404985:	sbb    ebp,esi
  404987:	or     bh,BYTE PTR [esi-0x1c]
  40498a:	ss int 0xf5
  40498d:	imul   edx,DWORD PTR [edi],0xe6295de8
  404993:	lods   eax,DWORD PTR ss:[esi]
  404995:	stos   DWORD PTR es:[edi],eax
  404996:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404997:	das    
  404998:	fisttp WORD PTR [ebx-0x41d5d867]
  40499e:	arpl   WORD PTR [ebp-0x4dab6127],dx
  4049a4:	pop    esp
  4049a5:	cmp    ch,bh
  4049a7:	push   esi
  4049a8:	pop    esi
  4049a9:	dec    edx
  4049aa:	retf   
  4049ab:	sbb    dh,BYTE PTR [edx]
  4049ad:	sub    bl,BYTE PTR [ebp-0x5c]
  4049b0:	test   eax,0xfae0672e
  4049b5:	mov    ds:0xc8cc2227,al
  4049ba:	ret    0x93a4
  4049bd:	mov    ds:0x2a8c6cef,eax
  4049c2:	xchg   esp,eax
  4049c3:	mov    eax,DWORD PTR [ebx]
  4049c5:	pop    ebx
  4049c6:	push   ebp
  4049c7:	imul   esi,DWORD PTR [edi-0x6b],0xfffffffb
  4049cb:	(bad)  
  4049cc:	cld    
  4049cd:	ret    0x588d
  4049d0:	inc    ebp
  4049d1:	das    
  4049d2:	inc    edi
  4049d3:	out    dx,al
  4049d4:	in     al,0xc2
  4049d6:	outs   dx,DWORD PTR ds:[esi]
  4049d7:	inc    edi
  4049d8:	sbb    dl,ah
  4049da:	push   ds
  4049db:	repnz rcr BYTE PTR [ecx],0x6b
  4049df:	inc    edx
  4049e0:	or     cl,BYTE PTR [eax-0x1]
  4049e3:	loope  0x4049bb
  4049e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4049e6:	popa   
  4049e7:	call   0xa8ee652b
  4049ec:	push   edi
  4049ed:	out    0xbd,al
  4049ef:	outs   dx,BYTE PTR ds:[esi]
  4049f0:	cs pop esi
  4049f2:	jecxz  0x404a0f
  4049f4:	mov    cl,0xd8
  4049f6:	inc    ebx
  4049f7:	out    dx,al
  4049f8:	mov    bl,0xd7
  4049fa:	ds cmp eax,esp
  4049fd:	aad    0xca
  4049ff:	imul   ecx,DWORD PTR [ecx],0x2b0162b1
  404a05:	or     edi,DWORD PTR [ebx]
  404a07:	out    0xf6,eax
  404a09:	ja     0x404a29
  404a0b:	shr    ecx,0xb1
  404a0e:	fdivrp st(0),st
  404a10:	push   cs
  404a11:	cmp    BYTE PTR [esi],cl
  404a13:	sub    eax,0xb0f545d4
  404a18:	push   ds
  404a19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404a1a:	sub    eax,0x12f86550
  404a1f:	xchg   ebx,eax
  404a20:	scas   al,BYTE PTR es:[edi]
  404a21:	cmp    ch,ah
  404a23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404a24:	das    
  404a25:	outs   dx,DWORD PTR ds:[esi]
  404a26:	icebp  
  404a27:	not    esi
  404a29:	sub    edi,DWORD PTR [eax]
  404a2b:	cmp    DWORD PTR [esi-0x3e3cd092],eax
  404a31:	mov    cl,0xd5
  404a33:	pop    esp
  404a34:	(bad)  [eax]
  404a36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404a37:	mov    bl,0xf7
  404a39:	idiv   BYTE PTR [edi+0x75]
  404a3c:	jle    0x4049f6
  404a3e:	rol    DWORD PTR [ebx+edx*4+0x70eeafaf],1
  404a45:	xor    ebx,DWORD PTR ds:[esi]
  404a48:	xor    al,0x9
  404a4a:	xchg   ebp,eax
  404a4b:	fdiv   st,st(1)
  404a4d:	jae    0x404a34
  404a4f:	fxch   st(4)
  404a51:	shl    DWORD PTR [edx+0x542fa558],1
  404a57:	sub    al,0x84
  404a59:	out    0xf3,al
  404a5b:	clc    
  404a5c:	mov    ebx,0xeb572252
  404a61:	add    BYTE PTR [ebp+edx*8+0x3f],0x6c
  404a66:	xchg   DWORD PTR [esi+0xb],esi
  404a69:	dec    eax
  404a6a:	xlat   BYTE PTR ds:[ebx]
  404a6b:	sub    bh,BYTE PTR [edx-0xb]
  404a6e:	(bad)  
  404a6f:	imul   edx,DWORD PTR [esi],0x7d
  404a72:	test   BYTE PTR [eax+0x13],dh
  404a75:	push   0xfffffff9
  404a77:	bnd jo 0x404aae
  404a7a:	adc    DWORD PTR cs:[esi],edi
  404a7d:	cmp    DWORD PTR [esi],0x43
  404a80:	bound  esi,QWORD PTR [eax]
  404a82:	cwde   
  404a83:	push   es
  404a84:	and    edx,DWORD PTR [ebx-0x76a809d9]
  404a8a:	mov    ebp,0x7465dc73
  404a8f:	adc    dh,BYTE PTR [ecx+0x7]
  404a92:	mov    WORD PTR [edi],es
  404a94:	test   al,0xfe
  404a96:	push   eax
  404a97:	push   ebx
  404a98:	dec    ecx
  404a99:	lods   al,BYTE PTR ds:[esi]
  404a9a:	mul    DWORD PTR [ebx]
  404a9c:	dec    eax
  404a9d:	sti    
  404a9e:	cmp    ah,dl
  404aa0:	retf   
  404aa1:	mov    ebx,0xf979179f
  404aa6:	adc    eax,0x3de80af3
  404aab:	or     ecx,edx
  404aad:	dec    ecx
  404aae:	mov    DWORD PTR [ecx+0x517f51b4],edx
  404ab4:	iret   
  404ab5:	pop    edx
  404ab6:	out    dx,al
  404ab7:	adc    al,0x6a
  404ab9:	inc    esi
  404aba:	cmp    DWORD PTR [ecx-0x23],edx
  404abd:	cmp    eax,0x4dc82c26
  404ac2:	jmp    0x2ee1df27
  404ac7:	neg    DWORD PTR [ecx+0x6e49cefe]
  404acd:	mov    ds:0x9ba2ef7,eax
  404ad2:	lea    esp,[edi+0xcef90dc]
  404ad8:	add    bl,BYTE PTR [ecx]
  404ada:	fs repz in al,0xd5
  404ade:	jo     0x404aa7
  404ae0:	add    eax,ecx
  404ae2:	sbb    ch,dl
  404ae4:	xor    eax,0xb8b97ecb
  404ae9:	outs   dx,BYTE PTR ds:[esi]
  404aea:	push   esp
  404aeb:	jne    0x404a9f
  404aed:	rol    DWORD PTR [esi],0x57
  404af0:	sub    ch,dl
  404af2:	div    DWORD PTR [ebx+0x57d41e24]
  404af8:	cmp    ebx,DWORD PTR [ecx-0x457d5c89]
  404afe:	mov    dl,0xa4
  404b00:	popa   
  404b01:	lock into 
  404b03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404b04:	sub    BYTE PTR [ebx+edi*2+0xb6bcd16],0xfb
  404b0c:	adc    DWORD PTR [ebx],0x7cffba47
  404b12:	int3   
  404b13:	adc    eax,0x2da3a3ba
  404b18:	inc    eax
  404b19:	xchg   ecx,eax
  404b1a:	stc    
  404b1b:	scas   al,BYTE PTR es:[edi]
  404b1c:	stc    
  404b1d:	sbb    dh,BYTE PTR [ecx+ebp*4-0x49355d7e]
  404b24:	push   esp
  404b25:	add    ebp,DWORD PTR [ecx+0x1b891f56]
  404b2b:	pop    es
  404b2c:	popa   
  404b2d:	retf   0xcea5
  404b30:	sub    bh,BYTE PTR [eax]
  404b32:	mov    esi,edi
  404b34:	sbb    ch,BYTE PTR [esi-0x2109bbda]
  404b3a:	jne    0x404ac4
  404b3c:	test   BYTE PTR [ebp+0x2f6c025e],0xef
  404b43:	mov    DWORD PTR [ecx],eax
  404b45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404b46:	push   edx
  404b47:	mov    edi,0x63cd23d3
  404b4c:	jp     0x404b53
  404b4e:	outs   dx,DWORD PTR ds:[esi]
  404b4f:	mov    bh,0x87
  404b51:	push   edx
  404b52:	fldcw  WORD PTR [ecx-0x35]
  404b55:	int    0x11
  404b57:	and    DWORD PTR [ebp+0x43],edx
  404b5a:	mov    ds:0x4b74001e,eax
  404b5f:	dec    esi
  404b60:	add    al,0xba
  404b62:	(bad)  
  404b63:	into   
  404b64:	inc    eax
  404b65:	(bad)  
  404b66:	mov    ebx,0x464b6c5d
  404b6b:	sub    eax,0x5527bb7c
  404b70:	loopne 0x404b38
  404b72:	rdmsr  
  404b74:	xchg   ebp,esi
  404b76:	mov    dh,0x74
  404b78:	sbb    eax,0x7f0c3646
  404b7d:	mov    cl,0x88
  404b7f:	sub    ebp,eax
  404b81:	mov    cl,0x53
  404b83:	int    0x5a
  404b85:	sub    BYTE PTR ds:[eax+0x6b392f0b],dh
  404b8c:	fs xor al,0x16
  404b8f:	mov    ah,0xb5
  404b91:	bound  ecx,QWORD PTR [eax]
  404b93:	xor    BYTE PTR [edi+0x3d],ch
  404b96:	cmc    
  404b97:	scas   al,BYTE PTR es:[edi]
  404b98:	mov    ah,0x8a
  404b9a:	mov    dh,cl
  404b9c:	cmp    eax,ebp
  404b9e:	push   es
  404b9f:	ret    
  404ba0:	lock sub ah,BYTE PTR [ebp-0x376abd9e]
  404ba7:	mov    cl,0x6f
  404ba9:	sbb    dl,BYTE PTR [ebx-0x5b]
  404bac:	lahf   
  404bad:	inc    ebx
  404bae:	or     cl,bh
  404bb0:	out    dx,eax
  404bb1:	ds call 0x33f52131
  404bb7:	nop
  404bb8:	aam    0xa2
  404bba:	and    al,0x1b
  404bbc:	cmp    bl,BYTE PTR [di-0x19e6]
  404bc1:	retf   0x3ece
  404bc4:	mov    ebx,0x285dfba1
  404bc9:	fstp   DWORD PTR [ecx-0x23]
  404bcc:	dec    edi
  404bcd:	jmp    0xa4db08a3
  404bd2:	cmp    DWORD PTR [edi+ecx*2],0xffffff98
  404bd6:	(bad)  
  404bd7:	in     al,0xb1
  404bd9:	out    0x75,eax
  404bdb:	push   esi
  404bdc:	scas   eax,DWORD PTR es:[edi]
  404bdd:	stos   BYTE PTR es:[edi],al
  404bde:	jbe    0x404b96
  404be0:	mov    al,ds:0x996b133
  404be5:	fdiv   QWORD PTR [ecx-0x3]
  404be8:	add    ebp,DWORD PTR [ebx-0x24]
  404beb:	out    0x1d,eax
  404bed:	adc    esp,ecx
  404bef:	adc    eax,0xfd913985
  404bf4:	stos   DWORD PTR es:[edi],eax
  404bf5:	and    bl,BYTE PTR [ebx]
  404bf7:	sbb    bl,BYTE PTR [esp+eax*4]
  404bfa:	retf   0x749f
  404bfd:	out    0x46,eax
  404bff:	or     al,0x1
  404c01:	pop    ss
  404c02:	out    0xc6,al
  404c04:	fcom   DWORD PTR [ecx-0x56]
  404c07:	(bad)  
  404c08:	sub    eax,0xa7550ff8
  404c0d:	out    dx,eax
  404c0e:	or     esp,esp
  404c10:	jge    0x404c55
  404c12:	mov    ebx,0x8a749d01
  404c17:	sub    ebx,eax
  404c19:	xor    DWORD PTR [eax+0x4d3cd419],0x1eb0ef4e
  404c23:	int3   
  404c24:	jns    0x404c9d
  404c26:	cdq    
  404c27:	in     eax,0x50
  404c29:	es push ebx
  404c2b:	push   edx
  404c2c:	nop
  404c2d:	cmp    eax,DWORD PTR [ecx-0x2e]
  404c30:	adc    dh,BYTE PTR [ecx]
  404c32:	jno    0x404c4f
  404c34:	sbb    eax,0xc214a817
  404c39:	int3   
  404c3a:	adc    ebx,DWORD PTR [edx+0x3d54c32b]
  404c40:	out    0xd5,eax
  404c42:	stc    
  404c43:	loope  0x404c76
  404c45:	out    0x72,al
  404c47:	je     0x404c66
  404c49:	mov    eax,DWORD PTR [edx+0x7001f59f]
  404c4f:	pop    eax
  404c50:	jne    0x404c2e
  404c52:	jle    0x404cc9
  404c54:	ins    BYTE PTR es:[edi],dx
  404c55:	cmp    al,BYTE PTR [ebp+eiz*1+0x7c]
  404c59:	mov    ch,0x4
  404c5b:	jmp    0x404c0d
  404c5d:	xchg   ebx,eax
  404c5e:	test   dh,ah
  404c60:	adc    ecx,DWORD PTR [edx+0x3143afda]
  404c66:	xor    ah,dh
  404c68:	cli    
  404c69:	mov    ebp,DWORD PTR [ebx+0xae89576]
  404c6f:	jno    0x404ca8
  404c71:	into   
  404c72:	pop    ebx
  404c73:	sahf   
  404c74:	fld    TBYTE PTR [esp+esi*4]
  404c77:	xchg   edx,eax
  404c78:	(bad)  
  404c79:	inc    esp
  404c7a:	xchg   ecx,eax
  404c7b:	mov    ecx,DWORD PTR [edx+0x78b6ee4]
  404c81:	adc    ebx,DWORD PTR [eax-0x1b]
  404c84:	out    dx,al
  404c85:	cmp    ebp,DWORD PTR [ecx-0x21202c4c]
  404c8b:	cmp    ebp,ebx
  404c8d:	and    DWORD PTR [eax+0x7f],edx
  404c90:	ss dec edx
  404c92:	sbb    DWORD PTR [ebp-0x61],ecx
  404c95:	mov    esp,0x45b02094
  404c9a:	mov    ebp,0x35421c5a
  404c9f:	jle    0x404cdc
  404ca1:	mov    cl,0x3
  404ca3:	sbb    eax,0x69c39ba4
  404ca8:	cld    
  404ca9:	and    ecx,DWORD PTR [edi-0x19]
  404cac:	cli    
  404cad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404cae:	fcmovnu st,st(6)
  404cb0:	add    al,0x96
  404cb2:	retfw  
  404cb4:	stos   DWORD PTR es:[edi],eax
  404cb5:	mov    eax,0x4a7a3d7e
  404cba:	mov    dl,0x81
  404cbc:	inc    eax
  404cbd:	jp     0x404c7f
  404cbf:	retf   
  404cc0:	mov    cl,0x45
  404cc2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404cc3:	ror    BYTE PTR [esp],cl
  404cc6:	in     eax,0x9c
  404cc8:	jb     0x404d21
  404cca:	mov    ?,esi
  404ccc:	mov    esi,0x72ad87ab
  404cd1:	push   es
  404cd2:	mov    ds:0xaf3ce44e,al
  404cd7:	mov    BYTE PTR [esi+0x5ac85f73],bh
  404cdd:	out    0xc5,al
  404cdf:	mov    ebx,DWORD PTR [edi+edx*1-0x22c5b149]
  404ce6:	lock pop ecx
  404ce8:	addr16 (bad) 
  404cea:	(bad)  
  404ced:	mov    eax,ds:0x3f818f67
  404cf2:	jle    0x404cea
  404cf4:	add    bl,cl
  404cf6:	inc    edx
  404cf7:	cmc    
  404cf8:	in     al,0x99
  404cfa:	jne    0x404c8b
  404cfc:	bound  eax,QWORD PTR [edx-0x54]
  404cff:	shr    esi,1
  404d01:	lods   eax,DWORD PTR ds:[esi]
  404d02:	sti    
  404d03:	shr    DWORD PTR [ebx-0x6e],0x87
  404d07:	add    BYTE PTR [esi-0x10e156cd],bh
  404d0d:	sbb    eax,0x42bc97c4
  404d12:	pusha  
  404d13:	and    ebp,ecx
  404d15:	popa   
  404d16:	outs   dx,BYTE PTR ds:[esi]
  404d17:	bound  eax,QWORD PTR [ebp-0x4df8565b]
  404d1d:	aad    0x43
  404d1f:	push   edi
  404d20:	jno    0x404d14
  404d22:	std    
  404d23:	xchg   BYTE PTR [edx],ah
  404d25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404d26:	or     ah,BYTE PTR [edi]
  404d28:	stos   BYTE PTR es:[edi],al
  404d29:	ds fwait
  404d2b:	xchg   DWORD PTR [esi+0x74],ebp
  404d2e:	not    BYTE PTR [edx+0x4f98541b]
  404d34:	ins    BYTE PTR es:[edi],dx
  404d35:	mov    ebx,DWORD PTR [eax-0x2e]
  404d38:	inc    edi
  404d39:	cs pop ebp
  404d3b:	jg     0x404d45
  404d3d:	push   edx
  404d3e:	gs scas al,BYTE PTR es:[edi]
  404d40:	fimul  WORD PTR [ebx]
  404d42:	mov    al,0x83
  404d44:	inc    ecx
  404d45:	sbb    al,0x55
  404d47:	aad    0x3b
  404d49:	jbe    0x404d6e
  404d4b:	nop
  404d4c:	imul   esp,DWORD PTR [ebx-0x1db5cb7c],0xe
  404d53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404d54:	ret    
  404d55:	scas   eax,DWORD PTR es:[edi]
  404d56:	xchg   esp,eax
  404d57:	stos   BYTE PTR es:[edi],al
  404d58:	dec    ebp
  404d59:	into   
  404d5a:	mov    bl,0x14
  404d5c:	xchg   BYTE PTR [edx+0x389d492e],bl
  404d62:	pop    esi
  404d63:	adc    BYTE PTR [ebp+0x350449a7],0xc5
  404d6a:	sub    BYTE PTR [edx+edx*1-0x35dfd452],0x7f
  404d72:	cmc    
  404d73:	mov    edi,0x83b43b3
  404d78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404d79:	sub    BYTE PTR [edx-0x1fb56ca6],bh
  404d7f:	add    al,0x13
  404d81:	out    0x54,eax
  404d83:	ja     0x404d1c
  404d85:	out    0x9e,eax
  404d87:	or     dl,BYTE PTR [eax]
  404d89:	cwde   
  404d8a:	sti    
  404d8b:	jb     0x404d9e
  404d8d:	add    BYTE PTR [ebp+0x22],bh
  404d90:	push   ds
  404d91:	call   DWORD PTR [ebx+0x1]
  404d94:	and    cl,ah
  404d96:	sbb    DWORD PTR [ebx],ecx
  404d98:	mov    ecx,0x26b87fdd
  404d9d:	imul   ebx,DWORD PTR [ebp+0x7],0xffffffc3
  404da1:	or     ebp,DWORD PTR [ebx]
  404da3:	and    DWORD PTR [eax+0x2bc590d2],ecx
  404da9:	mov    dh,0xa5
  404dab:	fwait
  404dac:	pop    es
  404dad:	cdq    
  404dae:	lods   al,BYTE PTR ds:[esi]
  404daf:	cs xchg ecx,eax
  404db1:	stos   DWORD PTR es:[edi],eax
  404db2:	push   ss
  404db3:	xor    bh,BYTE PTR ss:[edx]
  404db6:	aaa    
  404db7:	shl    ebx,cl
  404db9:	mov    esi,0x317e6b5b
  404dbe:	push   ebp
  404dbf:	shl    DWORD PTR [ebx-0x6df10d03],cl
  404dc5:	call   0x31e3ffc2
  404dca:	call   0xf566c896
  404dcf:	cdq    
  404dd0:	cmp    al,0x23
  404dd2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404dd3:	xor    al,0xf5
  404dd5:	ret    0x37a3
  404dd8:	scas   al,BYTE PTR es:[edi]
  404dd9:	(bad)  
  404dda:	dec    edx
  404ddb:	sub    BYTE PTR [esi],ch
  404ddd:	das    
  404dde:	xchg   ebx,eax
  404ddf:	cmp    al,0x64
  404de1:	lock jp 0x404def
  404de4:	int3   
  404de5:	add    DWORD PTR [edx-0x1],0x2d9373c7
  404dec:	in     eax,dx
  404ded:	adc    BYTE PTR [edx],0x61
  404df0:	lods   eax,DWORD PTR ds:[esi]
  404df1:	adc    BYTE PTR [ebx+ebx*1],cl
  404df4:	xchg   DWORD PTR [ecx],esp
  404df6:	aas    
  404df7:	and    eax,DWORD PTR [esi-0x39]
  404dfa:	(bad)
  404dff:	add    esp,DWORD PTR [ebp*8-0x7f3ccfff]
  404e06:	repnz aas 
  404e08:	ja     0x404df0
  404e0a:	lds    ecx,FWORD PTR [ebx-0x25]
  404e0d:	or     eax,0x17c93758
  404e12:	jns    0x404e68
  404e14:	mov    ah,0x53
  404e16:	fadd   QWORD PTR [edi-0x7f]
  404e19:	xor    DWORD PTR [esi-0x5824ad89],ecx
  404e1f:	repz addr16 ds push 0x9294e346
  404e27:	xchg   DWORD PTR [esi+0x55],ebp
  404e2a:	or     BYTE PTR [eax+0x7d469acd],bh
  404e30:	popf   
  404e31:	sbb    DWORD PTR [ecx],edx
  404e33:	leave  
  404e34:	mov    al,0x79
  404e36:	std    
  404e37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e38:	cmp    DWORD PTR [edi],ebp
  404e3a:	sti    
  404e3b:	js     0x404e57
  404e3d:	xor    al,0x56
  404e3f:	xchg   ebx,eax
  404e40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404e41:	gs ret 0xd6d3
  404e45:	pop    esi
  404e46:	xor    ch,BYTE PTR [esi+ecx*1]
  404e49:	inc    edi
  404e4a:	out    dx,eax
  404e4b:	jp     0x404de9
  404e4d:	clc    
  404e4e:	leave  
  404e4f:	mov    dh,bl
  404e51:	push   0xffffffcb
  404e53:	fst    DWORD PTR [ebp+0x2a]
  404e56:	push   0xffffffc2
  404e58:	push   edi
  404e59:	pop    es
  404e5a:	mov    edx,0x2695e08b
  404e5f:	push   es
  404e60:	sti    
  404e61:	push   esi
  404e62:	and    al,0x3f
  404e64:	add    al,0xdf
  404e66:	dec    esp
  404e67:	xchg   edx,eax
  404e68:	jmp    0x9209:0x391820fa
  404e6f:	mov    dh,0x0
  404e71:	test   DWORD PTR [eax-0x68],ebx
  404e74:	leave  
  404e75:	adc    DWORD PTR [ebp+0x1d2e2556],ecx
  404e7b:	hlt    
  404e7c:	and    al,0x1a
  404e7e:	inc    edi
  404e7f:	xchg   ebp,eax
  404e80:	mov    edx,0xe171f9e6
  404e85:	mov    bh,BYTE PTR [ecx]
  404e87:	cli    
  404e88:	shl    DWORD PTR [esi+0xc],0x37
  404e8c:	data16 (bad) 
  404e8e:	test   eax,0xfaecf65c
  404e93:	sbb    BYTE PTR [ecx+0xd8565e7],dh
  404e99:	mov    bl,0x26
  404e9b:	(bad)  
  404e9c:	loopne 0x404e2c
  404e9e:	adc    eax,0x832c75d0
  404ea3:	sar    BYTE PTR [ebp-0x143cd3b5],cl
  404ea9:	pop    ebp
  404eaa:	fld    QWORD PTR [edx+0xb9fdf9b]
  404eb0:	enter  0x8380,0xe5
  404eb4:	mov    edx,0x72456b9c
  404eb9:	popa   
  404eba:	push   esp
  404ebb:	add    dh,BYTE PTR [ebp-0x3d]
  404ebe:	and    ebx,DWORD PTR [ebx]
  404ec0:	mov    ebx,0xbf2d3444
  404ec5:	test   al,0xb4
  404ec7:	jecxz  0x404e58
  404ec9:	dec    BYTE PTR [ebp+0x49f9d10]
  404ecf:	and    eax,DWORD PTR [edi-0x3ababe0b]
  404ed5:	mov    ebx,0x967ad66b
  404eda:	stc    
  404edb:	mov    WORD PTR [ebx],?
  404edd:	(bad)  
  404edf:	mov    WORD PTR [edi+0x5c67b43f],ss
  404ee5:	loop   0x404f59
  404ee7:	ss es xchg ebx,eax
  404eea:	xor    DWORD PTR [ebx+0x4c8ffc05],0x63197c0f
  404ef4:	ja     0x404f3d
  404ef6:	in     al,dx
  404ef7:	pop    esi
  404ef8:	fst    DWORD PTR [edx+0x67]
  404efb:	and    eax,0x699b8a0a
  404f00:	out    0x18,al
  404f02:	fwait
  404f03:	dec    esp
  404f04:	mov    gs,WORD PTR [ebx+edx*4+0x7]
  404f08:	out    dx,eax
  404f09:	lods   al,BYTE PTR ds:[esi]
  404f0a:	inc    ebp
  404f0b:	hlt    
  404f0c:	sbb    eax,0xacf98a93
  404f11:	xchg   esi,eax
  404f12:	pushf  
  404f13:	and    al,0x55
  404f15:	cld    
  404f16:	xor    BYTE PTR [eax+0x2214ce88],cl
  404f1c:	or     DWORD PTR [eax+0x3010e76a],esi
  404f22:	lahf   
  404f23:	add    edx,DWORD PTR ds:0xaa75167c
  404f29:	dec    edi
  404f2a:	xchg   edi,eax
  404f2b:	jo     0x404ee8
  404f2d:	mov    ?,WORD PTR [ebp-0x75]
  404f30:	inc    ebp
  404f31:	cld    
  404f32:	mov    edi,DWORD PTR [ebp-0x8]
  404f35:	xor    edi,edx
  404f37:	add    edi,esi
  404f39:	mov    esi,DWORD PTR [ebp+0x8]
  404f3c:	imul   edi,ecx
  404f3f:	mov    ebx,DWORD PTR [ebp+0xc]
  404f42:	xor    eax,edx
  404f44:	add    eax,ecx
  404f46:	mov    al,BYTE PTR [ebx+eax*1+0x3272dd]
  404f4d:	mov    BYTE PTR [edi+esi*1],al
  404f50:	mov    eax,DWORD PTR [ebp-0x8]
  404f53:	mov    esi,DWORD PTR [ebp+0x10]
  404f56:	xor    eax,edx
  404f58:	xor    ebx,ebx
  404f5a:	add    esi,0xfabdbeed
  404f60:	adc    ebx,0xffffffff
  404f63:	lea    ecx,[ecx+eax*1+0x3272dd]
  404f6a:	xor    edi,edi
  404f6c:	xor    esi,0x8a29a127
  404f72:	xor    ebx,0x0
  404f75:	mov    eax,ecx
  404f77:	add    eax,0xfabdbeed
  404f7c:	adc    edi,0xffffffff
  404f7f:	xor    eax,0x8a29a127
  404f84:	xor    edi,0x0
  404f87:	cmp    eax,esi
  404f89:	jne    0x402b72
  404f8f:	cmp    edi,ebx
  404f91:	jne    0x402b72
  404f97:	mov    eax,0xf89c85b2
  404f9c:	pop    ebx
  404f9d:	pop    edi
  404f9e:	pop    esi
  404f9f:	leave  
  404fa0:	ret    0xc
  404fa3:	push   ebp
  404fa4:	mov    ebp,esp
  404fa6:	push   ecx
  404fa7:	add    eax,DWORD PTR ds:0x42a000
  404fad:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  404fb4:	sbb    DWORD PTR ds:0x42b008,0x61d9
  404fbe:	mov    eax,DWORD PTR [ebp+0x8]
  404fc1:	xor    DWORD PTR ds:0x42c018,0x2d2e
  404fcb:	mov    al,BYTE PTR [eax]
  404fcd:	add    al,0xb
  404fcf:	xor    al,0x71
  404fd1:	cmp    al,0x29
  404fd3:	mov    DWORD PTR ds:0x429010,0x6c7b
  404fdd:	jne    0x40507a
  404fe3:	mov    eax,DWORD PTR [ebp+0x8]
  404fe6:	or     edx,DWORD PTR ds:0x42900c
  404fec:	mov    ecx,DWORD PTR [ebp+0x8]
  404fef:	and    DWORD PTR ds:0x42b00c,0x0
  404ff9:	mov    edx,DWORD PTR ds:0x42b00c
  404fff:	inc    edx
  405000:	mov    DWORD PTR ds:0x42b00c,edx
  405006:	cmp    DWORD PTR ds:0x42b00c,0x1a
  40500d:	jne    0x40501e
  405013:	push   0x42900c
  405018:	call   DWORD PTR ds:0x42ed75
  40501e:	cmp    DWORD PTR ds:0x42b00c,0x15
  405025:	jb     0x404ff9
  40502b:	or     DWORD PTR ds:0x42d008,0x1488
  405035:	add    ecx,DWORD PTR [eax+0x3c]
  405038:	mov    edx,0x7510896
  40503d:	mov    DWORD PTR [ebp+0x8],ecx
  405040:	mov    eax,DWORD PTR [ebp-0x4]
  405043:	xor    eax,edx
  405045:	push   esi
  405046:	mov    esi,DWORD PTR ds:0x42d000
  40504c:	and    DWORD PTR ds:0x42a00c,esi
  405052:	mov    esi,DWORD PTR [ebp+0x8]
  405055:	mov    ecx,0x3272dd
  40505a:	add    eax,ecx
  40505c:	cmp    DWORD PTR [esi+0x54],eax
  40505f:	pop    esi
  405060:	je     0x40506e
  405066:	mov    eax,DWORD PTR [ebp+0x8]
  405069:	jmp    0x405087
  40506e:	mov    eax,DWORD PTR [ebp-0x4]
  405071:	xor    eax,edx
  405073:	add    eax,ecx
  405075:	jmp    0x405087
  40507a:	mov    eax,DWORD PTR [ebp-0x4]
  40507d:	xor    eax,0x7510896
  405082:	add    eax,0x3272dd
  405087:	leave  
  405088:	ret    0x4
  40508b:	push   ebp
  40508c:	mov    ebp,esp
  40508e:	sub    esp,0x78
  405091:	push   ebx
  405092:	push   esi
  405093:	push   edi
  405094:	push   0x1f
  405096:	lea    eax,[ebp-0x78]
  405099:	xor    DWORD PTR ds:0x429018,0x42a014
  4050a3:	push   eax
  4050a4:	push   0x0
  4050a6:	mov    DWORD PTR ds:0x429010,0x21c3
  4050b0:	call   DWORD PTR ds:0x42ed69
  4050b6:	add    DWORD PTR ds:0x429024,0x42c000
  4050c0:	push   0x97898797
  4050c5:	call   DWORD PTR ds:0x42ed2d
  4050cb:	adc    DWORD PTR ds:0x42b018,0x6ca1
  4050d5:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  4050dc:	mov    DWORD PTR [ebp-0x14],0xf89c85b2
  4050e3:	mov    ecx,DWORD PTR [ebp-0x4]
  4050e6:	mov    ebx,0x7510896
  4050eb:	add    DWORD PTR ds:0x42a014,0x255d
  4050f5:	xor    ecx,ebx
  4050f7:	or     DWORD PTR ds:0x429000,0x7ff8
  405101:	mov    eax,0x3272dd
  405106:	add    ecx,eax
  405108:	mov    DWORD PTR [ebp-0x1c],ecx
  40510b:	not    DWORD PTR ds:0x42c018
  405111:	mov    ecx,DWORD PTR [ebp+0x14]
  405114:	test   ecx,ecx
  405116:	mov    DWORD PTR ds:0x42a00c,0x3f58
  405120:	je     0x40513a
  405126:	inc    ecx
  405127:	mov    ecx,DWORD PTR [ebp+0x14]
  40512a:	and    DWORD PTR ds:0x429014,0x1a66
  405134:	mov    ecx,DWORD PTR [ecx]
  405136:	dec    edi
  405137:	mov    DWORD PTR [ebp-0x1c],ecx
  40513a:	add    DWORD PTR ds:0x42901c,edx
  405140:	mov    ecx,0x7665
  405145:	and    DWORD PTR ds:0x42c008,0x0
  40514f:	jmp    0x405161
  405154:	mov    edi,DWORD PTR ds:0x42c008
  40515a:	inc    edi
  40515b:	mov    DWORD PTR ds:0x42c008,edi
  405161:	cmp    DWORD PTR ds:0x42c008,0x10
  405168:	jae    0x405192
  40516e:	cmp    DWORD PTR ds:0x42c008,0x1f
  405175:	jne    0x40518b
  40517b:	push   0x399e
  405180:	push   0x848f
  405185:	call   DWORD PTR ds:0x42ed35
  40518b:	jmp    0x405154
  405190:	xor    edi,edi
  405192:	imul   edx,eax
  405195:	movzx  esi,BYTE PTR ds:0x42c010
  40519c:	xor    DWORD PTR ds:0x42c004,esi
  4051a2:	mov    esi,0x76532
  4051a7:	add    edx,ecx
  4051a9:	and    DWORD PTR ds:0x42a018,0x0
  4051b3:	mov    edi,DWORD PTR ds:0x42a018
  4051b9:	inc    edi
  4051ba:	mov    DWORD PTR ds:0x42a018,edi
  4051c0:	cmp    DWORD PTR ds:0x42a018,0x6
  4051c7:	jne    0x4051e0
  4051cd:	push   0x8802
  4051d2:	push   0x429004
  4051d7:	push   DWORD PTR [ebp-0x24]
  4051da:	call   DWORD PTR ds:0x42ed39
  4051e0:	cmp    DWORD PTR ds:0x42a018,0x5
  4051e7:	jne    0x4051fa
  4051ed:	mov    edi,DWORD PTR ds:0x42a018
  4051f3:	inc    edi
  4051f4:	mov    DWORD PTR ds:0x42a018,edi
  4051fa:	cmp    DWORD PTR ds:0x42a018,0x10
  405201:	jb     0x4051b3
  405207:	and    DWORD PTR ds:0x42d00c,0x0
  405211:	jmp    0x405223
  405216:	mov    edi,DWORD PTR ds:0x42d00c
  40521c:	inc    edi
  40521d:	mov    DWORD PTR ds:0x42d00c,edi
  405223:	cmp    DWORD PTR ds:0x42d00c,0x15
  40522a:	jae    0x405278
  405230:	cmp    DWORD PTR ds:0x42d00c,0xa
  405237:	jne    0x40524d
  40523d:	push   0x42e05b
  405242:	push   0x42e010
  405247:	call   DWORD PTR ds:0x42ed3d
  40524d:	cmp    DWORD PTR ds:0x42d00c,0x9
  405254:	jne    0x405269
  40525a:	xor    edi,edi
  40525c:	or     edi,DWORD PTR ds:0x42d00c
  405262:	inc    edi
  405263:	mov    DWORD PTR ds:0x42d00c,edi
  405269:	jmp    0x405216
  40526e:	adc    DWORD PTR ds:0x42b000,0x4b16
  405278:	xchg   esi,ecx
  40527a:	xor    ecx,DWORD PTR ds:0x42a00c
  405280:	mov    edi,0x54354
  405285:	sub    edx,edi
  405287:	sbb    ecx,0x55bb
  40528d:	mov    ecx,DWORD PTR [ebp-0x4]
  405290:	sub    DWORD PTR ds:0x42a01c,edx
  405296:	xor    ecx,ebx
  405298:	mov    esi,DWORD PTR ds:0x42a018
  40529e:	and    esi,DWORD PTR ds:0x429000
  4052a4:	mov    DWORD PTR ds:0x42a018,esi
  4052aa:	add    ecx,eax
  4052ac:	mov    DWORD PTR [ebp-0x8],ecx
  4052af:	and    DWORD PTR ds:0x42b010,0x0
  4052b9:	jmp    0x4052cb
  4052be:	mov    esi,DWORD PTR ds:0x42b010
  4052c4:	inc    esi
  4052c5:	mov    DWORD PTR ds:0x42b010,esi
  4052cb:	cmp    DWORD PTR ds:0x42b010,0x1e
  4052d2:	jae    0x405313
  4052d8:	cmp    DWORD PTR ds:0x42b010,0x4
  4052df:	jne    0x4052f4
  4052e5:	push   DWORD PTR [ebp-0x1c]
  4052e8:	push   DWORD PTR [ebp-0x20]
  4052eb:	push   DWORD PTR [ebp-0xc]
  4052ee:	call   DWORD PTR ds:0x42ed41
  4052f4:	cmp    DWORD PTR ds:0x42b010,0x3
  4052fb:	jne    0x40530e
  405301:	mov    esi,DWORD PTR ds:0x42b010
  405307:	inc    esi
  405308:	mov    DWORD PTR ds:0x42b010,esi
  40530e:	jmp    0x4052be
  405313:	mov    ecx,DWORD PTR [ebp-0x14]
  405316:	xor    ecx,ebx
  405318:	add    ecx,eax
  40531a:	and    DWORD PTR ds:0x42a00c,0x4b6f
  405324:	mov    DWORD PTR [ebp-0x24],ecx
  405327:	mov    DWORD PTR ds:0x429024,0x1f
  405331:	cmp    DWORD PTR ds:0x429024,0x0
  405338:	je     0x405390
  40533e:	cmp    DWORD PTR ds:0x429024,0x6
  405345:	jne    0x40535e
  40534b:	push   0x5506
  405350:	push   0x42b000
  405355:	push   DWORD PTR [ebp-0x28]
  405358:	call   DWORD PTR ds:0x42ed45
  40535e:	cmp    DWORD PTR ds:0x429024,0x7
  405365:	jne    0x405378
  40536b:	mov    ecx,DWORD PTR ds:0x429024
  405371:	dec    ecx
  405372:	mov    DWORD PTR ds:0x429024,ecx
  405378:	mov    ecx,DWORD PTR ds:0x429024
  40537e:	dec    ecx
  40537f:	mov    DWORD PTR ds:0x429024,ecx
  405385:	jmp    0x405331
  40538a:	or     DWORD PTR ds:0x42a004,ebx
  405390:	mov    ecx,DWORD PTR [ebp-0x4]
  405393:	xor    ecx,ebx
  405395:	add    ecx,eax
  405397:	sub    esi,0x6631
  40539d:	mov    DWORD PTR [ebp-0x30],ecx
  4053a0:	dec    esi
  4053a1:	mov    esi,DWORD PTR [ebp-0x4]
  4053a4:	and    DWORD PTR ds:0x42d01c,0x0
  4053ae:	jmp    0x4053c2
  4053b3:	xor    ecx,ecx
  4053b5:	or     ecx,DWORD PTR ds:0x42d01c
  4053bb:	inc    ecx
  4053bc:	mov    DWORD PTR ds:0x42d01c,ecx
  4053c2:	cmp    DWORD PTR ds:0x42d01c,0x1e
  4053c9:	jae    0x405407
  4053cf:	cmp    DWORD PTR ds:0x42d01c,0xe
  4053d6:	jne    0x4053e2
  4053dc:	call   DWORD PTR ds:0x42ed51
  4053e2:	cmp    DWORD PTR ds:0x42d01c,0xd
  4053e9:	jne    0x4053fc
  4053ef:	mov    ecx,DWORD PTR ds:0x42d01c
  4053f5:	inc    ecx
  4053f6:	mov    DWORD PTR ds:0x42d01c,ecx
  4053fc:	jmp    0x4053b3
  405401:	or     ecx,DWORD PTR ds:0x42a000
  405407:	xor    esi,ebx
  405409:	dec    ecx
  40540a:	add    esi,eax
  40540c:	mov    ecx,DWORD PTR [ebp-0x24]
  40540f:	and    DWORD PTR ds:0x429000,0x42c018
  405419:	sub    ecx,eax
  40541b:	or     DWORD PTR ds:0x42b014,0x429024
  405425:	lea    edx,[esi-0x3272dd]
  40542b:	add    DWORD PTR ds:0x42d008,0x42a004
  405435:	xor    ecx,ebx
  405437:	adc    DWORD PTR ds:0x42d018,0x3588
  405441:	xor    edx,ebx
  405443:	cmp    edx,ecx
  405445:	je     0x4056db
  40544b:	mov    ecx,DWORD PTR [ebp-0x4]
  40544e:	or     DWORD PTR ds:0x42a004,0x7d41
  405458:	xor    ecx,ebx
  40545a:	sbb    DWORD PTR ds:0x42c004,0x1a4b
  405464:	add    ecx,eax
  405466:	cmp    esi,ecx
  405468:	mov    DWORD PTR ds:0x429018,0x444d
  405472:	jne    0x4056b8
  405478:	and    DWORD PTR ds:0x42b004,0x273e
  405482:	push   DWORD PTR [ebp+0x8]
  405485:	add    DWORD PTR ds:0x42d01c,0x42c004
  40548f:	call   0x404fa3
  405494:	mov    DWORD PTR [ebp-0x18],eax
  405497:	sub    ecx,ecx
  405499:	mov    eax,DWORD PTR [ebp-0x4]
  40549c:	and    DWORD PTR ds:0x42d010,0x0
  4054a6:	jmp    0x4054b8
  4054ab:	mov    edi,DWORD PTR ds:0x42d010
  4054b1:	inc    edi
  4054b2:	mov    DWORD PTR ds:0x42d010,edi
  4054b8:	cmp    DWORD PTR ds:0x42d010,0x1b
  4054bf:	jae    0x40557c
  4054c5:	cmp    DWORD PTR ds:0x42d010,0x10
  4054cc:	jne    0x4054d8
  4054d2:	call   DWORD PTR ds:0x42ed55
  4054d8:	cmp    DWORD PTR ds:0x42d010,0xf
  4054df:	jne    0x4054f2
  4054e5:	mov    edi,DWORD PTR ds:0x42d010
  4054eb:	inc    edi
  4054ec:	mov    DWORD PTR ds:0x42d010,edi
  4054f2:	jmp    0x4054ab
  4054f7:	mov    DWORD PTR ds:0x42c00c,0x1c
  405501:	cmp    DWORD PTR ds:0x42c00c,0x0
  405508:	je     0x40557c
  40550e:	cmp    DWORD PTR ds:0x42c00c,0x4
  405515:	jne    0x405544
  40551b:	push   0x213d
  405520:	push   0x2583
  405525:	push   0x42d000
  40552a:	push   0x5f61
  40552f:	push   0x589a
  405534:	push   0x1da2
  405539:	push   0x4b46
  40553e:	call   DWORD PTR ds:0x42ed59
  405544:	cmp    DWORD PTR ds:0x42c00c,0x5
  40554b:	jne    0x40555e
  405551:	mov    edi,DWORD PTR ds:0x42c00c
  405557:	dec    edi
  405558:	mov    DWORD PTR ds:0x42c00c,edi
  40555e:	xor    edi,edi
  405560:	add    edi,DWORD PTR ds:0x42c00c
  405566:	dec    edi
  405567:	mov    DWORD PTR ds:0x42c00c,edi
  40556d:	jmp    0x405501
  405572:	adc    DWORD PTR ds:0x42c004,0x62a8
  40557c:	mov    ecx,DWORD PTR [ebp-0x18]
  40557f:	dec    edi
  405580:	xor    eax,ebx
  405582:	sub    edi,0x56bd
  405588:	mov    edi,0x3272dd
  40558d:	mov    DWORD PTR ds:0x42d00c,0x2303
  405597:	add    eax,edi
  405599:	mov    DWORD PTR ds:0x42a00c,0x3ae7
  4055a3:	cmp    ecx,eax
  4055a5:	mov    DWORD PTR ds:0x42d018,0x39c7
  4055af:	je     0x407aa3
  4055b5:	add    DWORD PTR ds:0x42b004,0x7234
  4055bf:	push   DWORD PTR [ebp-0x18]
  4055c2:	push   DWORD PTR [ebp+0x8]
  4055c5:	call   0x40cc1e
  4055ca:	mov    ecx,DWORD PTR ds:0x42b01c
  4055d0:	sub    DWORD PTR ds:0x42a010,ecx
  4055d6:	mov    DWORD PTR [ebp-0x18],eax
  4055d9:	mov    eax,DWORD PTR [ebp-0x4]
  4055dc:	mov    ecx,DWORD PTR [ebp-0x18]
  4055df:	mov    DWORD PTR ds:0x429000,0x7fe2
  4055e9:	xor    eax,ebx
  4055eb:	or     DWORD PTR ds:0x42a01c,0x42c010
  4055f5:	add    eax,edi
  4055f7:	mov    DWORD PTR ds:0x42b010,0x7af8
  405601:	cmp    ecx,eax
  405603:	mov    DWORD PTR ds:0x429014,0x1a63
  40560d:	je     0x407aa3
  405613:	mov    eax,ds:0x411f6c
  405618:	mov    ecx,DWORD PTR ds:0x411f84
  40561e:	sub    eax,ecx
  405620:	sub    eax,DWORD PTR [eax+ecx*1]
  405623:	mov    eax,DWORD PTR [ebp-0x18]
  405626:	mov    eax,DWORD PTR [eax+0x18]
  405629:	mov    DWORD PTR [ebp-0x24],eax
  40562c:	and    DWORD PTR ds:0x429028,edi
  405632:	mov    eax,DWORD PTR [ebp-0x18]
  405635:	and    DWORD PTR ds:0x429014,0x0
  40563f:	xor    ecx,ecx
  405641:	xor    ecx,DWORD PTR ds:0x429014
  405647:	inc    ecx
  405648:	mov    DWORD PTR ds:0x429014,ecx
  40564e:	cmp    DWORD PTR ds:0x429014,0xa
  405655:	jne    0x405669
  40565b:	push   DWORD PTR [ebp-0xc]
  40565e:	push   0x42e0a1
  405663:	call   DWORD PTR ds:0x42ed5d
  405669:	cmp    DWORD PTR ds:0x429014,0x9
  405670:	jne    0x405683
  405676:	mov    ecx,DWORD PTR ds:0x429014
  40567c:	inc    ecx
  40567d:	mov    DWORD PTR ds:0x429014,ecx
  405683:	cmp    DWORD PTR ds:0x429014,0x1c
  40568a:	jb     0x40563f
  405690:	mov    ecx,DWORD PTR [ebp+0x8]
  405693:	add    ecx,DWORD PTR [eax+0x20]
  405696:	mov    DWORD PTR [ebp-0x2c],ecx
  405699:	mov    eax,DWORD PTR [ebp-0x18]
  40569c:	mov    ecx,DWORD PTR [ebp+0x8]
  40569f:	add    ecx,DWORD PTR [eax+0x24]
  4056a2:	mov    DWORD PTR [ebp-0x34],ecx
  4056a5:	mov    eax,DWORD PTR [ebp-0x18]
  4056a8:	mov    ecx,DWORD PTR [ebp+0x8]
  4056ab:	add    ecx,DWORD PTR [eax+0x1c]
  4056ae:	mov    eax,edi
  4056b0:	mov    DWORD PTR [ebp-0x18],ecx
  4056b3:	jmp    0x407a6b
  4056b8:	mov    ecx,DWORD PTR [ebp-0x2c]
  4056bb:	mov    edx,DWORD PTR [ebp+0x8]
  4056be:	add    edx,DWORD PTR [ecx+esi*4]
  4056c1:	mov    DWORD PTR [ebp-0x28],edx
  4056c4:	mov    ecx,DWORD PTR [ebp-0x4]
  4056c7:	mov    edx,DWORD PTR [ebp-0x28]
  4056ca:	xor    ecx,ebx
  4056cc:	add    ecx,eax
  4056ce:	cmp    edx,ecx
  4056d0:	je     0x407a6b
  4056d6:	jmp    0x407a57
  4056db:	mov    ecx,DWORD PTR [ebp-0x4]
  4056de:	mov    edx,DWORD PTR [ebp-0x8]
  4056e1:	xor    ecx,ebx
  4056e3:	add    ecx,eax
  4056e5:	cmp    edx,ecx
  4056e7:	je     0x407aaf
  4056ed:	jmp    0x407a45
  4056f2:	or     al,0xd7
  4056f4:	xchg   ebp,eax
  4056f5:	loop   0x40576c
  4056f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4056f8:	emms   
  4056fa:	adc    dl,BYTE PTR ds:0xa485f58a
  405700:	pop    ss
  405701:	vmaxsd xmm7,xmm5,QWORD PTR [edx+0x7a]
  405706:	aaa    
  405707:	pop    edi
  405708:	jp     0x405784
  40570a:	out    dx,eax
  40570b:	adc    BYTE PTR [edx+0x380ae280],al
  405711:	cdq    
  405712:	jge    0x4056f1
  405714:	xor    BYTE PTR [bp+si-0x79],ch
  405718:	push   edx
  405719:	xor    esp,DWORD PTR [esi-0x3ff7864b]
  40571f:	aad    0x66
  405721:	cli    
  405722:	pop    esi
  405723:	mov    edi,esp
  405725:	adc    BYTE PTR [edx+eax*4-0x7a3d7cf9],cl
  40572c:	mov    dh,0x1a
  40572e:	jmp    0x57b2:0x5a6a20d9
  405735:	xor    eax,0x28be66b6
  40573a:	out    dx,eax
  40573b:	mov    BYTE PTR [edx],al
  40573d:	xor    bh,cl
  40573f:	jg     0x405726
  405741:	inc    ebp
  405742:	xchg   esi,eax
  405743:	and    cl,BYTE PTR [edi]
  405745:	xor    al,0x22
  405747:	dec    esp
  405748:	pop    esi
  405749:	jl     0x405786
  40574b:	inc    edi
  40574c:	(bad)  
  40574e:	xor    dh,BYTE PTR [ecx+0x21]
  405751:	cld    
  405752:	push   ss
  405753:	loope  0x405779
  405755:	in     al,0x8f
  405757:	popf   
  405758:	fdivr  DWORD PTR [bx+si-0x1f85]
  40575d:	lahf   
  40575e:	cwde   
  40575f:	push   eax
  405760:	push   0x4c708ed3
  405765:	jg     0x405732
  405767:	gs ins DWORD PTR es:[edi],dx
  405769:	inc    esi
  40576a:	add    dh,BYTE PTR [edi-0x432f1048]
  405770:	mov    ebp,0x8b1e11cb
  405775:	je     0x405730
  405777:	jp     0x405715
  405779:	fs out dx,al
  40577b:	dec    edi
  40577c:	xor    DWORD PTR [ebp-0x5b78baa0],0x2361a131
  405786:	dec    esi
  405787:	jne    0x40576b
  405789:	mov    ebp,DWORD PTR [edx-0x47cbbe7e]
  40578f:	stos   BYTE PTR es:[edi],al
  405790:	popa   
  405791:	mov    DWORD PTR ds:0x92e94470,ebx
  405797:	pusha  
  405798:	push   ecx
  405799:	sub    ebx,DWORD PTR [esi+esi*8-0x22]
  40579d:	cdq    
  40579e:	cld    
  40579f:	nop
  4057a0:	mov    eax,eax
  4057a2:	lods   al,BYTE PTR ds:[esi]
  4057a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4057a4:	jle    0x405813
  4057a6:	inc    edi
  4057a7:	push   eax
  4057a8:	xchg   esi,eax
  4057a9:	push   esp
  4057aa:	arpl   WORD PTR [ebp+edx*1-0x6929807],sp
  4057b1:	repz out dx,eax
  4057b3:	pop    edi
  4057b4:	test   BYTE PTR [esi],0xea
  4057b7:	mov    al,ds:0xe10929e5
  4057bc:	in     al,dx
  4057bd:	retf   0x572a
  4057c0:	mov    edx,DWORD PTR [esi]
  4057c2:	dec    edi
  4057c3:	cmp    ch,BYTE PTR [ecx-0x2c]
  4057c6:	fsubr  DWORD PTR [eax]
  4057c8:	fnstenv [ebx-0x52]
  4057cb:	sub    DWORD PTR [ebx+eax*4],0x62c6a7b6
  4057d2:	push   0xa528554d
  4057d7:	iret   
  4057d8:	xor    BYTE PTR [eax-0x6f8b535f],dh
  4057de:	int3   
  4057df:	pop    es
  4057e0:	jl     0x4057f3
  4057e2:	ins    DWORD PTR es:[edi],dx
  4057e3:	pop    ebp
  4057e4:	inc    edi
  4057e5:	cmp    eax,0xf040f972
  4057ea:	xchg   esi,eax
  4057eb:	leave  
  4057ec:	daa    
  4057ed:	mov    edx,0x64b2be94
  4057f2:	mov    edx,0x63b8906
  4057f7:	mov    esp,0x98834acc
  4057fc:	fisttp WORD PTR [ebx+0x14]
  4057ff:	adc    BYTE PTR [ebx],bh
  405801:	sub    ecx,DWORD PTR [ebx+0x5829adb0]
  405807:	bound  esi,QWORD PTR [edx+ecx*8]
  40580a:	(bad)  
  40580b:	into   
  40580c:	hlt    
  40580d:	pop    ecx
  40580e:	inc    esp
  40580f:	inc    eax
  405810:	xchg   ebp,eax
  405811:	test   eax,0x8d6b52ee
  405816:	or     ecx,DWORD PTR [edi+0x5b]
  405819:	outs   dx,BYTE PTR ds:[esi]
  40581a:	je     0x4057f1
  40581c:	mov    eax,ds:0x48ab409b
  405821:	push   ecx
  405822:	and    BYTE PTR [edx+0x2f],dl
  405825:	icebp  
  405826:	imul   ebx,DWORD PTR ds:0x39a61691,0x943c07b
  405830:	test   DWORD PTR [ebp+0x7a],0xf55ae87f
  405837:	jle    0x40586f
  405839:	test   eax,0xbfdb20f6
  40583e:	cwde   
  40583f:	data16 in al,0x19
  405842:	mov    ds,WORD PTR ds:0xa9030c77
  405848:	arpl   WORD PTR [ebx],cx
  40584a:	adc    eax,0xffffffb3
  40584d:	(bad)  
  40584e:	xchg   ecx,eax
  40584f:	adc    DWORD PTR [edi-0x58d910cf],eax
  405855:	(bad)  
  405856:	and    ebp,DWORD PTR [edx-0x7aefa0bf]
  40585c:	stos   DWORD PTR es:[edi],eax
  40585d:	pop    eax
  40585e:	jne    0x4058d8
  405860:	je     0x405818
  405862:	sahf   
  405863:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405864:	jmp    0x5079ca41
  405869:	imul   ebx,eax,0x59
  40586c:	inc    ebp
  40586d:	sti    
  40586e:	imul   ebx,DWORD PTR [ebp+0x24],0x616fd54
  405875:	imul   esi,DWORD PTR [edi],0x5306835e
  40587b:	dec    ecx
  40587c:	adc    ah,dh
  40587e:	and    eax,0x519d9273
  405883:	retf   
  405884:	mov    bh,0xce
  405886:	jb     0x4058ef
  405888:	xchg   esi,eax
  405889:	sahf   
  40588a:	clc    
  40588b:	mov    DWORD PTR [esi],edi
  40588d:	out    dx,eax
  40588e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40588f:	inc    edi
  405890:	or     BYTE PTR [edx+ebp*1-0x3e589f3],cl
  405897:	pop    eax
  405898:	out    dx,al
  405899:	push   esp
  40589a:	jne    0x4058d7
  40589c:	mov    eax,ds:0x75cf869d
  4058a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4058a2:	(bad)  
  4058a3:	pushf  
  4058a4:	(bad)  
  4058a5:	mov    ds:0xedc8a831,al
  4058aa:	mov    edi,0x38fee6d0
  4058af:	out    0x8c,eax
  4058b1:	jle    0x405912
  4058b3:	in     al,0xac
  4058b5:	shl    DWORD PTR [ecx],1
  4058b7:	je     0x405897
  4058b9:	jle    0x40589c
  4058bb:	or     esi,DWORD PTR [edi]
  4058bd:	shl    DWORD PTR [ebx+0x5f],0xc4
  4058c1:	retf   0x9115
  4058c4:	rcl    BYTE PTR cs:[ecx-0x919db1a],cl
  4058cb:	loop   0x405916
  4058cd:	mov    al,ds:0xb7669e68
  4058d2:	push   eax
  4058d3:	daa    
  4058d4:	push   edx
  4058d5:	stos   DWORD PTR es:[edi],eax
  4058d6:	mov    bh,0x19
  4058d8:	xchg   edx,eax
  4058d9:	clc    
  4058da:	jae    0x405895
  4058dc:	dec    edx
  4058dd:	fcomip st,st(0)
  4058df:	inc    edx
  4058e0:	scas   eax,DWORD PTR es:[edi]
  4058e1:	addr16 inc ebp
  4058e3:	mov    eax,ds:0x54073708
  4058e8:	call   0x6431:0xa7c1052c
  4058ef:	add    DWORD PTR [ebx+0x18],esp
  4058f2:	adc    eax,0xd3f00ddd
  4058f7:	jae    0x40594e
  4058f9:	jmp    0x4ae4:0xe413ff25
  405900:	xor    al,0x68
  405902:	fcmovnu st,st(3)
  405904:	(bad)  
  405905:	cdq    
  405906:	test   DWORD PTR [esi-0x79],esp
  405909:	aaa    
  40590a:	sbb    al,0xee
  40590c:	xchg   edi,eax
  40590d:	call   0x5f0e7a9b
  405912:	(bad)  
  405913:	push   ds
  405914:	sbb    dl,bh
  405916:	repz sbb eax,0x1cf8db1d
  40591c:	es icebp 
  40591e:	test   al,ch
  405920:	cmp    ebx,0x1e067685
  405926:	or     BYTE PTR [ebx],dh
  405928:	mov    bh,0x77
  40592a:	cli    
  40592b:	loopne 0x40591c
  40592d:	lock cdq 
  40592f:	into   
  405930:	adc    al,0xfe
  405932:	arpl   WORD PTR [ebx],di
  405934:	mov    esi,ss
  405936:	pop    ss
  405937:	sub    ah,cl
  405939:	add    edx,DWORD PTR [edx]
  40593b:	jbe    0x4058c0
  40593d:	cmp    eax,0x13b3f9aa
  405942:	repnz sbb eax,DWORD PTR [eax+ebx*2+0x33bcb3e6]
  40594a:	stos   BYTE PTR es:[edi],al
  40594b:	in     eax,0xd1
  40594d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40594e:	jg     0x4058e5
  405950:	cli    
  405951:	sub    eax,0x34d07dbe
  405956:	mov    al,ds:0x46dbc08a
  40595b:	js     0x405925
  40595d:	xchg   BYTE PTR [ecx-0x12],ch
  405960:	pushfw 
  405962:	inc    ecx
  405963:	ja     0x4058f2
  405965:	aam    0xed
  405967:	sub    ch,dh
  405969:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40596a:	pop    esi
  40596b:	sub    DWORD PTR [eax-0x1],edi
  40596e:	mov    esi,0xb6b41522
  405973:	sub    cl,BYTE PTR [ebx+eiz*8]
  405976:	loop   0x405921
  405978:	xchg   ebx,eax
  405979:	xor    BYTE PTR [ecx+edx*4+0x4e],al
  40597d:	retf   0x25b5
  405980:	pop    esp
  405981:	jp     0x40593c
  405983:	inc    ecx
  405984:	dec    ebx
  405985:	push   esi
  405986:	or     DWORD PTR [eax-0x4f6e845b],ebx
  40598c:	push   eax
  40598d:	sub    al,0x9e
  40598f:	mov    esi,0xfd13c810
  405994:	sar    DWORD PTR [edi],0x32
  405997:	and    BYTE PTR [esi+esi*1-0x329acc39],ah
  40599e:	bound  ebx,QWORD PTR ds:0xc0209ba
  4059a4:	pop    DWORD PTR [edx]
  4059a6:	push   eax
  4059a7:	or     DWORD PTR [edi-0x2f8e1bec],esp
  4059ad:	adc    edi,edi
  4059af:	and    cl,BYTE PTR [esi]
  4059b1:	sbb    dl,BYTE PTR [ebx-0x2c]
  4059b4:	sti    
  4059b5:	sub    BYTE PTR [eax],dl
  4059b7:	(bad)  
  4059b8:	mov    eax,0x28fafdc2
  4059bd:	mov    bh,0x46
  4059bf:	out    0x14,eax
  4059c1:	jbe    0x405a25
  4059c3:	dec    esp
  4059c4:	add    DWORD PTR [edx-0x46c78aaa],esp
  4059ca:	in     al,0x38
  4059cc:	pop    edx
  4059cd:	out    0xa4,al
  4059cf:	jno    0x405a18
  4059d1:	in     eax,dx
  4059d2:	push   ss
  4059d3:	cmp    DWORD PTR [ebx],ebx
  4059d5:	lock shl BYTE PTR [eax],cl
  4059d8:	pop    eax
  4059d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4059da:	leave  
  4059db:	dec    edx
  4059dc:	mov    ebp,0x2e7a9040
  4059e1:	add    BYTE PTR [ecx],cl
  4059e3:	popa   
  4059e4:	mov    cl,0xd4
  4059e6:	sub    DWORD PTR [esi-0x30],edi
  4059e9:	cwde   
  4059ea:	jo     0x4059ed
  4059ec:	in     al,0xe3
  4059ee:	jbe    0x405a57
  4059f0:	stos   BYTE PTR es:[edi],al
  4059f1:	mov    esi,0x20386763
  4059f6:	not    BYTE PTR [ebp-0x31940889]
  4059fc:	add    BYTE PTR [ecx+0x24ca24e5],ch
  405a02:	and    al,0x6f
  405a04:	inc    eax
  405a05:	adc    bh,BYTE PTR [edi-0x1b70a13]
  405a0b:	idiv   cl
  405a0d:	or     al,0x41
  405a0f:	int3   
  405a10:	push   es
  405a11:	test   al,0xb
  405a13:	pop    eax
  405a14:	mov    bh,0xa4
  405a16:	sbb    DWORD PTR [esi],ebx
  405a18:	fidivr WORD PTR [ebx-0x51]
  405a1b:	frstor [ecx-0x70]
  405a1e:	dec    esi
  405a1f:	(bad)  
  405a20:	adc    edi,DWORD PTR ds:0x64ef6256
  405a26:	adc    edx,DWORD PTR [ebx+0x69800e91]
  405a2c:	rol    BYTE PTR [eax-0x5f],0x12
  405a30:	mov    al,al
  405a32:	inc    edx
  405a33:	lods   al,BYTE PTR ds:[esi]
  405a34:	dec    esp
  405a35:	fstp   TBYTE PTR [esi]
  405a37:	std    
  405a38:	sub    edx,DWORD PTR [esi]
  405a3a:	pop    ebx
  405a3b:	mov    eax,ds:0x46ab0c19
  405a40:	pop    ss
  405a41:	pop    ss
  405a42:	pop    esi
  405a43:	call   DWORD PTR ds:0x2e2560de
  405a49:	cmp    DWORD PTR [ebp+ebp*2-0x43],eax
  405a4d:	and    eax,0x1fd1c6d9
  405a52:	mov    ecx,0xb87d6a0a
  405a57:	sbb    eax,0xd17dda4b
  405a5c:	mov    edi,DWORD PTR [eax]
  405a5e:	mov    ebx,0xb80c8c01
  405a63:	cmp    DWORD PTR [eax],edi
  405a65:	jge    0x405a8b
  405a67:	sub    esi,eax
  405a69:	push   DWORD PTR [ecx+0x70b1866f]
  405a6f:	popa   
  405a70:	call   eax
  405a72:	adc    al,0x5f
  405a74:	cmp    eax,0xd82a076
  405a79:	inc    esp
  405a7a:	scas   eax,DWORD PTR es:[edi]
  405a7b:	and    DWORD PTR [ecx+0x190679f1],esi
  405a81:	dec    eax
  405a82:	sub    BYTE PTR [ebp+0x6b55e00a],0x41
  405a89:	jbe    0x405a10
  405a8b:	sbb    al,0x18
  405a8d:	sahf   
  405a8e:	xor    al,0xb7
  405a90:	sbb    DWORD PTR [ecx],eax
  405a92:	inc    edi
  405a93:	adc    eax,eax
  405a95:	xor    ebp,ebx
  405a97:	adc    cl,BYTE PTR [esi+0x7b10e3f1]
  405a9d:	std    
  405a9e:	cmp    BYTE PTR [esi],ch
  405aa0:	mov    al,0xbe
  405aa2:	mov    al,0xb2
  405aa4:	pop    ebp
  405aa5:	test   al,0x42
  405aa7:	ins    BYTE PTR es:[edi],dx
  405aa8:	pop    es
  405aa9:	mov    ch,ch
  405aab:	add    DWORD PTR [ebx],0x20236934
  405ab1:	dec    ebp
  405ab2:	cmp    eax,0x388252d7
  405ab7:	fmul   DWORD PTR [eax+0x6]
  405aba:	jae    0x405a4d
  405abc:	ds jne 0x405a68
  405abf:	and    eax,0x288e62e5
  405ac4:	clc    
  405ac5:	ins    DWORD PTR es:[edi],dx
  405ac6:	int3   
  405ac7:	clc    
  405ac8:	clc    
  405ac9:	stos   BYTE PTR es:[edi],al
  405aca:	sbb    BYTE PTR [ebp+ecx*8-0x23],bh
  405ace:	inc    eax
  405acf:	add    BYTE PTR [ecx-0x513c12f4],bh
  405ad5:	fidivr WORD PTR ds:0xa9aefed8
  405adb:	hlt    
  405adc:	aas    
  405add:	sbb    al,0xd1
  405adf:	imul   ecx,DWORD PTR [ecx-0x5b],0xca6dd0a2
  405ae6:	push   ds
  405ae7:	mov    ebp,ebp
  405ae9:	mov    bh,0xcc
  405aeb:	cmp    ah,BYTE PTR [edx]
  405aed:	and    eax,0x7734e1fd
  405af2:	loopne 0x405a82
  405af4:	xchg   esp,eax
  405af5:	mov    eax,ds:0x6f45d526
  405afa:	ds nop
  405afc:	push   esi
  405afd:	jbe    0x405b39
  405aff:	addr16 pop ss
  405b01:	push   0xb6e0cee9
  405b06:	mov    dl,0xfa
  405b08:	repz pop esi
  405b0a:	adc    DWORD PTR [ebx-0x31],esp
  405b0d:	aad    0xac
  405b0f:	test   bh,dl
  405b11:	mov    dh,0xdd
  405b13:	scas   al,BYTE PTR es:[edi]
  405b14:	xlat   BYTE PTR ds:[ebx]
  405b15:	shr    DWORD PTR [bx],1
  405b18:	sbb    DWORD PTR [ebp+0x1e],edi
  405b1b:	leave  
  405b1c:	pushf  
  405b1d:	sub    al,0x49
  405b1f:	or     ecx,DWORD PTR [eax]
  405b21:	xor    DWORD PTR [edx],0x11
  405b24:	pop    ds
  405b25:	enter  0xd5e6,0x61
  405b29:	fnstenv [ebx+0x1ff1f54d]
  405b2f:	call   0xefc9:0x393b68b1
  405b36:	xchg   esp,ebx
  405b38:	int3   
  405b39:	shr    bl,0xf9
  405b3c:	add    edx,eax
  405b3e:	cdq    
  405b3f:	or     DWORD PTR [edx-0x4f],esp
  405b42:	into   
  405b43:	push   ss
  405b44:	setge  bh
  405b47:	in     eax,dx
  405b48:	pusha  
  405b49:	not    BYTE PTR [eax-0x47]
  405b4c:	test   eax,0x7ea7c960
  405b51:	iret   
  405b52:	fmul   DWORD PTR [esi-0x5597e34d]
  405b58:	popa   
  405b59:	and    al,0x64
  405b5b:	outs   dx,DWORD PTR ds:[esi]
  405b5c:	mov    bh,0xb3
  405b5e:	inc    ebx
  405b5f:	call   0x1ebe62cb
  405b64:	xor    ah,BYTE PTR [ecx+0x135ad301]
  405b6a:	pop    es
  405b6b:	pop    ss
  405b6c:	sahf   
  405b6d:	inc    eax
  405b6e:	dec    DWORD PTR [ecx]
  405b70:	sti    
  405b71:	shl    BYTE PTR ds:0x29ad86de,0x7f
  405b78:	push   esi
  405b79:	out    dx,al
  405b7a:	mov    bh,0xf3
  405b7c:	push   es
  405b7d:	sahf   
  405b7e:	mov    eax,ds:0x460ddd0e
  405b83:	lea    ebx,[ebx]
  405b85:	enter  0xe4fb,0xf1
  405b89:	stos   DWORD PTR es:[edi],eax
  405b8a:	jnp    0x405bcc
  405b8c:	retf   0x3d68
  405b8f:	ror    DWORD PTR [ebx+0x1a015b45],1
  405b95:	pop    esp
  405b96:	inc    esi
  405b97:	bound  esp,QWORD PTR [ecx]
  405b99:	out    dx,al
  405b9a:	add    DWORD PTR [esi-0x7bc75b35],ecx
  405ba0:	leave  
  405ba1:	inc    edx
  405ba2:	dec    ecx
  405ba3:	cmp    DWORD PTR [edi-0x4a076ecc],0xffffffa4
  405baa:	push   eax
  405bab:	sub    DWORD PTR [edi-0x2c],0xc
  405baf:	jecxz  0x405b7c
  405bb1:	fild   DWORD PTR [eax+0x11]
  405bb4:	inc    ecx
  405bb5:	mov    al,ds:0x1e3da31b
  405bba:	in     eax,dx
  405bbb:	repnz shr DWORD PTR [edi],cl
  405bbe:	nop
  405bbf:	imul   edx,ebx,0xdc529cd7
  405bc5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405bc6:	icebp  
  405bc7:	and    eax,DWORD PTR [eax]
  405bc9:	sbb    bh,BYTE PTR [ecx-0x7e1347db]
  405bcf:	push   esi
  405bd0:	dec    edx
  405bd1:	fbld   TBYTE PTR [edi+0x36]
  405bd4:	xlat   BYTE PTR ds:[ebx]
  405bd5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405bd6:	inc    ebp
  405bd7:	add    dl,cl
  405bd9:	mov    edi,0x71d7d5ef
  405bde:	pop    esi
  405bdf:	iret   
  405be0:	jnp    0x405c43
  405be2:	imul   eax,DWORD PTR [ebx-0x57],0xffffffa0
  405be6:	(bad)  
  405be8:	popf   
  405be9:	or     BYTE PTR ss:[esi+0x21],0x30
  405bee:	xchg   esp,eax
  405bef:	cmp    BYTE PTR [edx-0x33e017ee],0xbd
  405bf6:	fisubr DWORD PTR [edi-0x65]
  405bf9:	mov    bl,0xb1
  405bfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405bfc:	inc    ebx
  405bfd:	pop    esp
  405bfe:	popa   
  405bff:	in     eax,dx
  405c00:	or     cl,BYTE PTR [ecx-0x30]
  405c03:	mov    cs,WORD PTR [ecx-0x76e48979]
  405c09:	push   0xd45d08bd
  405c0e:	pop    edi
  405c0f:	mov    ds:0xf15697bf,al
  405c14:	push   ebx
  405c15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405c16:	jge    0x405c56
  405c18:	inc    edi
  405c19:	push   ds
  405c1a:	jns    0x405c0f
  405c1c:	retf   
  405c1d:	aam    0x88
  405c1f:	inc    eax
  405c20:	sbb    bh,BYTE PTR [eax]
  405c22:	jns    0x405c86
  405c24:	int    0x90
  405c26:	push   0xffffffe7
  405c28:	pop    esp
  405c29:	retf   
  405c2a:	(bad)  
  405c2b:	jmp    0x5376ec73
  405c30:	pop    esp
  405c31:	xchg   esi,eax
  405c32:	cli    
  405c33:	sahf   
  405c34:	je     0x405c2b
  405c36:	(bad)  
  405c38:	dec    edi
  405c39:	push   0x48
  405c3b:	dec    eax
  405c3c:	repz push ds
  405c3e:	rcr    DWORD PTR [ebx-0x3011c54d],cl
  405c44:	cmp    bh,BYTE PTR [ebp-0x4c]
  405c47:	adc    eax,0x742d1821
  405c4c:	pop    esi
  405c4d:	jp     0x405c30
  405c4f:	mov    ds:0x84835ad5,eax
  405c54:	mov    al,0x29
  405c56:	add    BYTE PTR [edi],bl
  405c58:	(bad)  
  405c59:	dec    eax
  405c5a:	dec    edi
  405c5b:	push   edi
  405c5c:	push   ebx
  405c5d:	mov    ebx,0x91b77eeb
  405c62:	xchg   ax,ax
  405c64:	sub    ecx,DWORD PTR ds:0x47c5891d
  405c6a:	std    
  405c6b:	in     al,dx
  405c6c:	and    DWORD PTR [ebx],ebp
  405c6e:	jns    0x405c7a
  405c70:	nop
  405c71:	mov    ch,0x20
  405c73:	jp     0x405ce1
  405c75:	pop    ss
  405c76:	or     al,0x1c
  405c78:	iret   
  405c79:	imul   eax
  405c7b:	lahf   
  405c7c:	aam    0xed
  405c7e:	adc    DWORD PTR [ebp-0x6d],eax
  405c81:	cmp    DWORD PTR [esp+ebx*2+0x35],ebp
  405c85:	ret    0xc053
  405c88:	lea    eax,[edx-0x2a3a433e]
  405c8e:	adc    DWORD PTR [esi-0xe7d5c98],ebp
  405c94:	fstp   DWORD PTR [edx-0x20]
  405c97:	dec    edx
  405c98:	and    al,0x82
  405c9a:	shr    BYTE PTR [ebx+0x4287ce2],0xbd
  405ca1:	outs   dx,DWORD PTR ds:[esi]
  405ca2:	pop    edi
  405ca3:	repnz sar DWORD PTR [ebx-0x6],1
  405ca7:	or     ebx,DWORD PTR [esi-0xf199db4]
  405cad:	xor    ebx,DWORD PTR [ebp-0x5c6e57de]
  405cb3:	inc    ecx
  405cb4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405cb5:	outs   dx,DWORD PTR ds:[esi]
  405cb6:	loope  0x405d32
  405cb8:	xchg   BYTE PTR [edx+0x77f59faa],dl
  405cbe:	cmp    eax,0x8b5f469a
  405cc3:	xor    esp,edx
  405cc5:	and    ebp,DWORD PTR [edx]
  405cc7:	cwde   
  405cc8:	push   0xffffffb1
  405cca:	xor    esi,DWORD PTR [ecx-0x173eac4f]
  405cd0:	push   ecx
  405cd1:	fs scas al,BYTE PTR es:[edi]
  405cd3:	imul   esi,ecx,0xa3a88af4
  405cd9:	adc    ecx,0x46
  405cdc:	loope  0x405c67
  405cde:	add    eax,0xb4bcf701
  405ce3:	pop    ds
  405ce4:	aam    0x54
  405ce6:	stc    
  405ce7:	fisubr WORD PTR ss:[esi+0x259f345e]
  405cee:	xlat   BYTE PTR ds:[ebx]
  405cef:	jle    0x405d4e
  405cf1:	jbe    0x405c7e
  405cf3:	int3   
  405cf4:	push   ebp
  405cf5:	(bad)  
  405cf6:	mov    edi,0xe38750db
  405cfb:	push   es
  405cfc:	adc    eax,0x6ab29e3c
  405d01:	test   DWORD PTR [esi+0x421b3bc7],0xe14823db
  405d0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405d0c:	xlat   BYTE PTR ds:[ebx]
  405d0d:	mov    eax,0x853c068b
  405d12:	out    0xda,eax
  405d14:	mov    BYTE PTR [edi+0x3ddf62cc],0x1d
  405d1b:	and    eax,0x8c745dab
  405d20:	fs push eax
  405d22:	(bad)  
  405d24:	lods   al,BYTE PTR ds:[esi]
  405d25:	fnstcw WORD PTR [ebx+0x69bcd4da]
  405d2b:	lds    ebp,FWORD PTR [edx+0x55e2c178]
  405d31:	xor    al,0x18
  405d33:	or     ah,BYTE PTR [eax]
  405d35:	setbe  BYTE PTR es:[edi]
  405d39:	xlat   BYTE PTR ds:[ebx]
  405d3a:	sub    edx,DWORD PTR [ebp+0x36bc64e8]
  405d40:	mov    ebx,0x95548eed
  405d45:	cdq    
  405d46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405d47:	outs   dx,DWORD PTR ds:[esi]
  405d48:	pop    ecx
  405d49:	xchg   bl,cl
  405d4b:	call   0xd6bc64de
  405d50:	jl     0x405cda
  405d52:	mov    cl,0xe9
  405d54:	(bad)  
  405d55:	pop    edi
  405d56:	repz jno 0x405d33
  405d59:	xchg   edx,eax
  405d5a:	out    dx,al
  405d5b:	or     edi,ebp
  405d5d:	cmp    dh,BYTE PTR [eax+0x5e]
  405d60:	and    edx,eax
  405d62:	sub    eax,0x9be63bdf
  405d67:	outs   dx,DWORD PTR ds:[esi]
  405d68:	mov    ds:0xcd3269c0,eax
  405d6d:	out    dx,eax
  405d6e:	mov    ebx,0xf64457b
  405d73:	in     eax,dx
  405d74:	mov    bh,0x1d
  405d76:	xchg   BYTE PTR [edx-0x2ef41f75],al
  405d7c:	add    eax,0x1c426311
  405d81:	or     DWORD PTR [edx-0x1facf858],eax
  405d87:	jmp    0xc69d4f3b
  405d8c:	dec    edi
  405d8d:	cdq    
  405d8e:	jl     0x405d4a
  405d90:	stos   BYTE PTR es:[edi],al
  405d91:	sbb    BYTE PTR ds:0xdc1dfe07,bl
  405d97:	lds    ebx,FWORD PTR [edi]
  405d99:	aas    
  405d9a:	and    al,0x30
  405d9c:	push   ebx
  405d9d:	ins    DWORD PTR es:[edi],dx
  405d9e:	call   0x7c5f:0xc584978d
  405da5:	ds pop esi
  405da7:	sbb    BYTE PTR [ebp+ebx*2-0x4b],dl
  405dab:	jns    0x405d33
  405dad:	std    
  405dae:	mov    ds:0xf5d0f6b7,eax
  405db3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405db4:	ret    0x4e0b
  405db7:	jge    0x405dfe
  405db9:	cmp    ebx,DWORD PTR [esi+0x4314e9df]
  405dbf:	mov    ds:0xd01af4dd,eax
  405dc4:	lock mov ebx,0x8d067c1d
  405dca:	jge    0x405d90
  405dcc:	xchg   edi,eax
  405dcd:	add    eax,0x2dbe8b96
  405dd2:	mov    ds:0x64cd1320,eax
  405dd7:	cmp    al,0xab
  405dd9:	push   ebp
  405dda:	or     ebx,edx
  405ddc:	inc    eax
  405ddd:	out    dx,al
  405dde:	push   cs
  405ddf:	or     edi,DWORD PTR [eax+0x3dfe6208]
  405de5:	jae    0x405da6
  405de7:	or     esi,DWORD PTR [ecx+0x16de8d1b]
  405ded:	add    DWORD PTR [edx-0x5348078e],esp
  405df3:	push   0xcf3ba8f2
  405df8:	stos   DWORD PTR es:[edi],eax
  405df9:	sti    
  405dfa:	add    dl,BYTE PTR [edx-0x64d5c89d]
  405e00:	adc    eax,0x67bc4166
  405e05:	xor    ebx,DWORD PTR [edi-0xa]
  405e08:	ss jae 0x405e12
  405e0b:	add    BYTE PTR [ebp+0x45916041],bh
  405e11:	cld    
  405e12:	or     DWORD PTR [edx-0x13a21f6],ebp
  405e18:	test   eax,0x55c5604b
  405e1d:	xor    al,0xde
  405e1f:	sub    ebx,DWORD PTR [ebx+0x1f]
  405e22:	ror    BYTE PTR [ebx],0xd1
  405e25:	arpl   WORD PTR [edx],di
  405e27:	mov    esi,0xe728f643
  405e2c:	ja     0x405ddc
  405e2e:	xor    esi,DWORD PTR [edx]
  405e30:	test   al,0xd9
  405e32:	add    ecx,esp
  405e34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405e35:	push   ecx
  405e36:	or     DWORD PTR [edi+eax*4+0x41e85e74],ecx
  405e3d:	jge    0x405ebe
  405e3f:	scas   eax,DWORD PTR es:[edi]
  405e40:	pusha  
  405e41:	inc    esp
  405e42:	lahf   
  405e43:	adc    ecx,DWORD PTR [edx+0x690ebe8b]
  405e49:	das    
  405e4a:	stos   DWORD PTR es:[edi],eax
  405e4b:	mov    eax,0x9ad7a78a
  405e50:	pop    es
  405e51:	jmp    0x200c79ef
  405e56:	pop    es
  405e57:	imul   ebp,ebx,0x1d
  405e5a:	mov    al,ds:0x583c1e3d
  405e5f:	clc    
  405e60:	lahf   
  405e61:	pop    ebx
  405e62:	dec    ebx
  405e63:	icebp  
  405e64:	mov    al,0xd9
  405e66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405e67:	pushf  
  405e68:	push   ecx
  405e69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405e6a:	pop    ecx
  405e6b:	push   ds
  405e6c:	out    dx,al
  405e6d:	mov    ebp,0xcee68f1
  405e72:	mov    ds:0x5b939372,eax
  405e77:	(bad)  
  405e78:	ins    BYTE PTR es:[edi],dx
  405e79:	jb     0x405ead
  405e7b:	xchg   esi,eax
  405e7c:	rep lods al,BYTE PTR es:[esi]
  405e7f:	and    BYTE PTR [esi-0x13],0x20
  405e83:	test   ebx,edx
  405e85:	fs clc 
  405e87:	pop    esi
  405e88:	inc    edi
  405e89:	sub    eax,0xb1ef7c63
  405e8e:	cmp    BYTE PTR [edx+0x6c],al
  405e91:	test   DWORD PTR [eax],0x902a66bf
  405e97:	add    eax,0xccd99d70
  405e9c:	pop    ebx
  405e9d:	jo     0x405e93
  405e9f:	pop    ss
  405ea0:	xchg   ebp,eax
  405ea1:	mov    edi,0x3450fc0d
  405ea6:	pop    edi
  405ea7:	in     eax,0xc9
  405ea9:	out    dx,al
  405eaa:	sbb    ch,BYTE PTR [edx-0x37]
  405ead:	loope  0x405e3d
  405eaf:	xor    al,0xef
  405eb1:	int    0x26
  405eb3:	rol    BYTE PTR [ebx],0xaf
  405eb6:	add    BYTE PTR [edx],0x3b
  405eb9:	das    
  405eba:	jnp    0x405e9f
  405ebc:	aaa    
  405ebd:	rcr    DWORD PTR [edi+0x78d5ddb5],0x4b
  405ec4:	cmp    DWORD PTR [edi+0x78],edi
  405ec7:	pop    ebp
  405ec8:	repz cmp eax,0x286ecaef
  405ece:	and    bl,dl
  405ed0:	inc    edx
  405ed1:	push   ebx
  405ed2:	jmp    0xc02b:0x694529f0
  405ed9:	cmp    eax,0x38c37abc
  405ede:	mov    esp,0xe8fdbfdf
  405ee3:	or     dh,BYTE PTR [ebx+0x37]
  405ee6:	cdq    
  405ee7:	mov    WORD PTR [ebp+0x55],?
  405eea:	pop    eax
  405eeb:	(bad)
  405eee:	and    al,0xfc
  405ef0:	pop    ecx
  405ef1:	dec    esp
  405ef2:	call   ebx
  405ef4:	in     al,dx
  405ef5:	retf   0xccd4
  405ef8:	sbb    al,0x1a
  405efa:	add    esi,DWORD PTR ss:0xff65ac58
  405f01:	test   al,0x5e
  405f03:	mov    ds:0xff7e882d,eax
  405f08:	inc    esi
  405f09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405f0a:	xchg   ebp,eax
  405f0b:	cmp    DWORD PTR [esi],0x53
  405f0e:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405f10:	xchg   ebx,eax
  405f11:	cmp    BYTE PTR [edx],ah
  405f13:	cs popa 
  405f15:	daa    
  405f16:	push   ss
  405f17:	setns  BYTE PTR [edi]
  405f1a:	dec    edx
  405f1b:	in     eax,0x9a
  405f1d:	lock jmp 0x405f01
  405f20:	sahf   
  405f21:	pop    esp
  405f22:	push   ebp
  405f23:	jbe    0x405eed
  405f25:	mov    ebp,esp
  405f27:	push   0xffffffd7
  405f29:	cdq    
  405f2a:	and    BYTE PTR [ebx-0x43163080],ch
  405f30:	int3   
  405f31:	mov    ebp,0x825d16c6
  405f36:	and    BYTE PTR [esi-0x4c],0xf3
  405f3a:	jmp    0x405f9f
  405f3c:	popf   
  405f3d:	iret   
  405f3e:	dec    ebp
  405f3f:	xor    eax,0x2746ee58
  405f44:	jge    0x405f80
  405f46:	fwait
  405f47:	loope  0x405f2e
  405f49:	ret    0x64e7
  405f4c:	push   0x24
  405f4e:	bnd ret 0xc048
  405f52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405f53:	ins    DWORD PTR es:[edi],dx
  405f54:	add    eax,0xc3b53c06
  405f59:	push   es
  405f5a:	ins    BYTE PTR es:[edi],dx
  405f5b:	cmc    
  405f5c:	dec    ecx
  405f5d:	push   eax
  405f5e:	(bad)  
  405f5f:	shl    bh,0x6d
  405f62:	jns    0x405ef8
  405f64:	pop    esp
  405f65:	xor    esp,ebx
  405f67:	dec    ebp
  405f68:	xlat   BYTE PTR ds:[ebx]
  405f69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405f6a:	daa    
  405f6b:	mov    edi,0x5c3c2f43
  405f70:	sbb    cl,BYTE PTR [esi-0x143c89a2]
  405f76:	jge    0x405f74
  405f78:	inc    ecx
  405f79:	jmp    0x405f90
  405f7b:	out    0xbe,al
  405f7d:	pop    ebx
  405f7e:	xor    al,0xf2
  405f80:	or     DWORD PTR ds:0xc711118d,ebx
  405f86:	mov    cl,0x55
  405f88:	add    BYTE PTR [esi+edi*1],0xf5
  405f8c:	xlat   BYTE PTR ds:[ebx]
  405f8d:	ins    DWORD PTR es:[edi],dx
  405f8e:	sbb    eax,0xe696ab1f
  405f93:	mov    dl,BYTE PTR [eax]
  405f95:	(bad)  
  405f96:	cld    
  405f97:	jecxz  0x405fe6
  405f99:	mov    ebx,0xe449838b
  405f9e:	lea    ebx,[edx]
  405fa0:	mov    ebp,0x4299c9bc
  405fa5:	and    BYTE PTR [edx+esi*4+0x5],al
  405fa9:	aaa    
  405faa:	cmp    al,0x25
  405fac:	cmp    BYTE PTR [ecx-0x60278f75],bl
  405fb2:	sbb    eax,0xc3821768
  405fb7:	cmp    esp,DWORD PTR [esi]
  405fb9:	or     cl,BYTE PTR [ebp+0x15]
  405fbc:	sbb    bl,BYTE PTR [esp+eiz*4]
  405fbf:	fimul  WORD PTR [eax+0x7f89c4f7]
  405fc5:	jno    0x405fe9
  405fc7:	pop    edi
  405fc8:	and    BYTE PTR [eax-0x12],bh
  405fcb:	addr16 inc ecx
  405fcd:	mov    dh,0xe1
  405fcf:	js     0x406037
  405fd1:	dec    ebx
  405fd2:	sbb    al,0x4e
  405fd4:	push   ecx
  405fd5:	sbb    ah,0xa
  405fd8:	mov    edi,0x4f6eaed
  405fdd:	push   esi
  405fde:	rol    DWORD PTR [edi+0x1f4099f8],cl
  405fe4:	adc    ecx,DWORD PTR [esi-0x2a]
  405fe7:	out    dx,eax
  405fe8:	mov    cl,BYTE PTR ds:0xda93e899
  405fee:	mov    edi,0x8d955257
  405ff3:	xor    bh,BYTE PTR [edx]
  405ff5:	add    cl,BYTE PTR [ecx-0x6548f6cc]
  405ffb:	mov    cl,0x6
  405ffd:	pop    edx
  405ffe:	adc    dl,BYTE PTR [ecx+0x2f]
  406001:	mov    ecx,0x2af10fe7
  406006:	fild   QWORD PTR [ebx]
  406008:	pop    ebx
  406009:	shr    DWORD PTR [ebx+0x6f],1
  40600c:	imul   DWORD PTR [edi+0x10]
  40600f:	sti    
  406010:	cmp    BYTE PTR [ecx+0x53],bl
  406013:	stos   BYTE PTR es:[edi],al
  406014:	add    eax,0x3fcde720
  406019:	rcr    BYTE PTR [esi],0xb5
  40601c:	ss loope 0x406044
  40601f:	call   0xa75e5121
  406024:	mov    al,ds:0x2262b8fa
  406029:	pop    ss
  40602a:	mov    esp,0x3bb3c244
  40602f:	push   edx
  406030:	daa    
  406031:	dec    esi
  406032:	inc    edx
  406033:	jbe    0x40605c
  406035:	push   0x86419d4a
  40603a:	imul   edx,DWORD PTR [ebx],0x4bc3b2c5
  406040:	sbb    al,0x69
  406042:	cdq    
  406043:	stos   BYTE PTR es:[edi],al
  406044:	jp     0x406024
  406046:	push   esi
  406047:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406048:	mov    edx,0x36f8c050
  40604d:	mov    edi,0xdf607283
  406052:	lea    ebx,[ebx]
  406054:	dec    esi
  406055:	fdivr  st(6),st
  406057:	cmovbe edx,edx
  40605a:	add    eax,0xc828c239
  40605f:	sbb    edx,edx
  406061:	cs popa 
  406063:	adc    bl,BYTE PTR [ebx-0x1a]
  406066:	mov    ch,0xc9
  406068:	scas   al,BYTE PTR es:[edi]
  406069:	aas    
  40606a:	iret   
  40606b:	fnstenv [eax-0x71]
  40606e:	push   ds
  40606f:	mov    ebx,0x9691212d
  406074:	arpl   cx,di
  406076:	(bad)  
  406077:	ds dec edx
  406079:	es jp  0x4060e9
  40607c:	mov    eax,0x68a88720
  406081:	test   al,0xe7
  406083:	jle    0x406037
  406085:	cmp    dl,BYTE PTR [ebp-0x26]
  406088:	arpl   WORD PTR [edx+ecx*4],si
  40608b:	cld    
  40608c:	push   ebp
  40608d:	mov    esp,0xae5d3195
  406092:	sahf   
  406093:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406094:	mov    es,WORD PTR [ecx]
  406096:	loopne 0x4060cc
  406098:	nop
  406099:	mov    ebx,0xd5941150
  40609e:	scas   al,BYTE PTR es:[edi]
  40609f:	adc    DWORD PTR [eax+0x25],eax
  4060a2:	mov    bh,0x8
  4060a4:	lock inc esi
  4060a6:	mov    eax,ds:0x892dbf70
  4060ab:	dec    esp
  4060ac:	mov    bl,0x8b
  4060ae:	or     ebx,esp
  4060b0:	add    al,0x6d
  4060b2:	push   eax
  4060b3:	lods   eax,DWORD PTR ds:[esi]
  4060b4:	daa    
  4060b5:	leave  
  4060b6:	test   al,0x9
  4060b8:	mov    ebp,0x97616858
  4060bd:	call   0x4226:0x702496db
  4060c4:	test   al,0xe9
  4060c6:	sub    al,0x1
  4060c8:	bound  ecx,QWORD PTR [edi]
  4060ca:	pushf  
  4060cb:	scas   al,BYTE PTR es:[edi]
  4060cc:	(bad)  
  4060cd:	js     0x406119
  4060cf:	retf   
  4060d0:	fidivr DWORD PTR [ebx+0x3b]
  4060d3:	push   edi
  4060d4:	adc    BYTE PTR [ecx],ch
  4060d6:	neg    dl
  4060d8:	cmp    DWORD PTR [esi-0x6281f090],ecx
  4060de:	mov    ebp,0x82a5eed
  4060e3:	outs   dx,BYTE PTR ds:[esi]
  4060e4:	imul   ecx,DWORD PTR [ebp+0x22d0af54],0xc48006a6
  4060ee:	sbb    BYTE PTR [edx],dh
  4060f0:	jmp    0x3b950d20
  4060f5:	push   esi
  4060f6:	mov    bh,0x48
  4060f8:	loopne 0x406133
  4060fa:	push   ecx
  4060fb:	pop    ss
  4060fc:	sahf   
  4060fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4060fe:	dec    esi
  4060ff:	inc    edi
  406100:	in     eax,0x97
  406102:	enter  0xc514,0x32
  406106:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406107:	xor    bh,bl
  406109:	mov    ds:0xe472931d,eax
  40610e:	mov    ebx,0x73dbef23
  406113:	or     eax,0xaf431c0c
  406118:	fisttp WORD PTR [edi-0x11fff92f]
  40611e:	jne    0x40613b
  406120:	mov    BYTE PTR [ebx+0x7c3737fe],0xbc
  406127:	les    esi,FWORD PTR [edi]
  406129:	pusha  
  40612a:	dec    eax
  40612b:	test   BYTE PTR [ebp-0x4d58f36c],ch
  406131:	fucomi st,st(6)
  406133:	jmp    0x9361:0x5e6906d4
  40613a:	and    BYTE PTR [edx-0x7fac0c13],0xc6
  406141:	xchg   edi,eax
  406142:	leave  
  406143:	mov    ah,0x12
  406145:	aaa    
  406146:	loope  0x406155
  406148:	icebp  
  406149:	cmc    
  40614a:	retf   
  40614b:	mov    ds:0xd56a7e30,al
  406150:	loope  0x4061a4
  406152:	ss mov dh,0x2a
  406155:	mov    DWORD PTR [ecx+eax*4],eax
  406158:	(bad)  
  406159:	fdivr  DWORD PTR [edx-0x13d4dc4f]
  40615f:	mov    esp,0x581f8748
  406164:	gs call 0x2d4d:0x942e5467
  40616c:	sti    
  40616d:	push   ss
  40616e:	fisubr WORD PTR [edx]
  406170:	call   0xea064c32
  406175:	stc    
  406176:	icebp  
  406177:	repnz add eax,0xcedf3fa7
  40617d:	popa   
  40617e:	jns    0x406110
  406180:	xor    ebp,DWORD PTR [ebx+0x63]
  406183:	mov    edi,0x840dc20d
  406188:	out    dx,al
  406189:	adc    ecx,DWORD PTR [ebx-0x11]
  40618c:	jl     0x40619b
  40618e:	or     DWORD PTR [eax],eax
  406190:	add    al,0x8
  406192:	mov    ds:0x51fee718,eax
  406197:	pop    ebp
  406198:	pop    ss
  406199:	mov    ds,WORD PTR [ecx+0x3a74dde9]
  40619f:	adc    ebx,DWORD PTR [edi]
  4061a1:	scas   eax,DWORD PTR es:[edi]
  4061a2:	xchg   esi,eax
  4061a3:	xor    DWORD PTR [esi+0x3c968aab],eax
  4061a9:	push   cs
  4061aa:	add    ebp,DWORD PTR [ebx]
  4061ac:	mov    ds:0x171cbfb4,eax
  4061b1:	scas   eax,DWORD PTR es:[edi]
  4061b2:	fwait
  4061b3:	mov    DWORD PTR [ecx+0x276bd1ee],0xa1c1f0db
  4061bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4061be:	pop    esp
  4061bf:	pop    es
  4061c0:	fdiv   DWORD PTR [edi]
  4061c2:	sbb    al,0x9d
  4061c4:	lods   al,BYTE PTR ds:[esi]
  4061c5:	push   edx
  4061c6:	push   0xd4e0188
  4061cb:	adc    cl,bl
  4061cd:	neg    edx
  4061cf:	clc    
  4061d0:	sub    ecx,DWORD PTR [esi+0x3ccf53d8]
  4061d6:	ficomp WORD PTR [edx+eax*1]
  4061d9:	in     al,dx
  4061da:	push   ss
  4061db:	jnp    0x406248
  4061dd:	retf   0xf674
  4061e0:	xchg   eax,ecx
  4061e2:	cmc    
  4061e3:	out    0x80,eax
  4061e5:	in     eax,dx
  4061e6:	push   0x2df44b0
  4061eb:	and    al,0x7
  4061ed:	add    ecx,edi
  4061ef:	(bad)  
  4061f0:	xor    cl,BYTE PTR [ecx-0x1f]
  4061f3:	sbb    eax,0x48231d04
  4061f8:	adc    ecx,edi
  4061fa:	shl    BYTE PTR [ebx+eiz*2-0x4a4994c0],1
  406201:	mov    dl,0x47
  406203:	into   
  406204:	clc    
  406205:	push   ecx
  406206:	sbb    ah,BYTE PTR [ebx]
  406208:	cmp    BYTE PTR [edx],bh
  40620a:	sub    ah,BYTE PTR [edx+0x6a424687]
  406210:	cdq    
  406211:	sub    DWORD PTR [edi],ebx
  406213:	add    dl,al
  406215:	inc    esp
  406216:	fild   DWORD PTR [esi+0x9]
  406219:	cmp    DWORD PTR [esi],0xeb99397b
  40621f:	in     eax,0x3
  406221:	ret    
  406222:	loop   0x406226
  406224:	mov    ebx,0xee63d086
  406229:	addr16 pop ss
  40622b:	ss stc 
  40622d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40622e:	retf   
  40622f:	shl    BYTE PTR [eax-0x44],1
  406232:	shr    ebx,1
  406234:	xchg   esp,eax
  406235:	adc    bh,BYTE PTR [eax-0x4583464]
  40623b:	das    
  40623c:	enter  0xda07,0x5f
  406240:	inc    ebx
  406241:	ret    
  406242:	hlt    
  406243:	pop    edi
  406244:	daa    
  406245:	call   0xf10076ef
  40624a:	cmp    al,0x64
  40624c:	xor    DWORD PTR [ebp+0x52664907],0x6
  406253:	les    edx,FWORD PTR [esi]
  406255:	aad    0x76
  406257:	jnp    0x406213
  406259:	lods   al,BYTE PTR ds:[esi]
  40625a:	and    BYTE PTR [esi+0x49cdfc7d],dl
  406260:	inc    esi
  406261:	jo     0x4061e9
  406263:	mov    esp,0xd5388dce
  406268:	mov    ah,0x57
  40626a:	(bad)  
  40626b:	mov    cl,0x8f
  40626d:	pop    edi
  40626e:	nop
  40626f:	and    DWORD PTR [ebx],ebx
  406271:	adc    eax,DWORD PTR [edx]
  406273:	jns    0x4062b8
  406275:	shr    BYTE PTR [ebx-0x23],cl
  406278:	sbb    eax,0x715507f9
  40627d:	mov    bl,0x98
  40627f:	push   DWORD PTR [ebx-0x6eee80c6]
  406285:	ror    ah,0xd9
  406288:	add    BYTE PTR [ebx+esi*8],bl
  40628b:	jno    0x40626a
  40628d:	cli    
  40628e:	and    esi,DWORD PTR [ecx-0x1a]
  406291:	(bad)  
  406292:	in     al,dx
  406293:	push   ecx
  406294:	jnp    0x4062e3
  406296:	adc    BYTE PTR [ebp+0x5e],ch
  406299:	ret    0x87d4
  40629c:	out    0x3,eax
  40629e:	dec    edi
  40629f:	mov    ch,0x93
  4062a1:	cs jo  0x40628e
  4062a4:	xchg   esi,eax
  4062a5:	sub    eax,0x663261d4
  4062aa:	fcom   QWORD PTR [edx]
  4062ac:	cld    
  4062ad:	mov    eax,ds:0x25d88c33
  4062b2:	cmp    bl,BYTE PTR [eax+0x69]
  4062b5:	cs add al,0x7c
  4062b8:	test   BYTE PTR [esp+ecx*4-0x40],ch
  4062bc:	or     BYTE PTR [eax+esi*2],ah
  4062bf:	loopne 0x4062a7
  4062c1:	call   0x9d034e5
  4062c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4062c7:	outs   dx,DWORD PTR ds:[esi]
  4062c8:	ret    0x5ae3
  4062cb:	scas   eax,DWORD PTR es:[edi]
  4062cc:	mov    ecx,0x5e02a908
  4062d1:	sbb    edi,esp
  4062d3:	call   0x8d43b7e4
  4062d8:	pushf  
  4062d9:	mov    ch,0x16
  4062db:	add    ah,BYTE PTR [edi+0x32]
  4062de:	sub    al,0x20
  4062e0:	fucomi st,st(6)
  4062e2:	add    eax,0xafddfd57
  4062e7:	sub    eax,0xede5e9f3
  4062ec:	mov    esp,0x4e685d07
  4062f1:	and    esp,eax
  4062f3:	xchg   esp,eax
  4062f4:	enter  0x3e59,0xa0
  4062f8:	cmp    dl,bh
  4062fa:	and    esi,ebp
  4062fc:	or     al,0x58
  4062fe:	add    DWORD PTR [edi+0x14],ecx
  406301:	push   ds
  406302:	lahf   
  406303:	cmp    dh,BYTE PTR [edx+ebx*1-0x63]
  406307:	inc    ebp
  406308:	mov    ds:0x45ed14a3,al
  40630d:	or     BYTE PTR [ecx-0x1472af49],bl
  406313:	adc    eax,0x24062636
  406318:	(bad)  
  406319:	and    eax,DWORD PTR [edx-0x1979aaa2]
  40631f:	mov    eax,ds:0x8df084c5
  406324:	pop    ebp
  406325:	das    
  406326:	jmp    0xdc2f:0x38e402b6
  40632d:	sbb    ebp,DWORD PTR [ecx]
  40632f:	or     DWORD PTR [eax+0x2fdd7def],0xffffffd1
  406336:	sub    edx,esi
  406338:	test   al,0xb5
  40633a:	and    DWORD PTR [ebx+eax*8-0x50d4d253],esi
  406341:	and    al,0x5e
  406343:	(bad)  
  406344:	hlt    
  406345:	test   al,0x2c
  406347:	inc    esi
  406348:	add    BYTE PTR [eax-0x19],ah
  40634b:	sar    DWORD PTR [edi-0x1f],1
  40634e:	lods   al,BYTE PTR ds:[esi]
  40634f:	mov    ch,0x4
  406351:	xor    al,0x51
  406353:	jno    0x406342
  406355:	setb   BYTE PTR [edi]
  406358:	xchg   BYTE PTR [edx+0x27924ab4],bh
  40635e:	sbb    ebx,DWORD PTR [edi]
  406360:	sub    al,0xa9
  406362:	dec    ebp
  406363:	jecxz  0x4063c6
  406365:	in     eax,dx
  406366:	in     eax,dx
  406367:	cmp    al,0xbc
  406369:	mov    WORD PTR [edi+esi*1-0x7f],ds
  40636d:	push   ebp
  40636e:	push   es
  40636f:	jne    0x40633e
  406371:	clc    
  406372:	test   BYTE PTR [edi+0x21],cl
  406375:	bound  ecx,QWORD PTR [ebx-0x4a]
  406378:	(bad)  
  406379:	retf   
  40637a:	pop    edi
  40637b:	mov    ah,0x73
  40637d:	retf   
  40637e:	mov    ah,0x47
  406380:	dec    edx
  406381:	stos   DWORD PTR es:[edi],eax
  406382:	pop    eax
  406383:	mov    ds:0xb8e8c086,eax
  406388:	or     al,BYTE PTR [ecx-0x496272dd]
  40638e:	imul   eax,esp,0xb2955b46
  406394:	push   edx
  406395:	scas   al,BYTE PTR es:[edi]
  406396:	daa    
  406397:	mov    ah,0x46
  406399:	xchg   ebx,eax
  40639a:	jp     0x4063b0
  40639c:	xor    BYTE PTR [edx],0x76
  40639f:	sahf   
  4063a0:	xor    al,0x9e
  4063a2:	mov    ch,0xe1
  4063a4:	into   
  4063a5:	push   0x62
  4063a7:	loopne 0x406395
  4063a9:	xchg   ebx,eax
  4063aa:	inc    esi
  4063ab:	push   cs
  4063ac:	into   
  4063ad:	inc    edx
  4063ae:	jbe    0x40641b
  4063b0:	fldcw  WORD PTR [edi]
  4063b2:	stos   BYTE PTR es:[edi],al
  4063b3:	aaa    
  4063b4:	add    ch,BYTE PTR [edi]
  4063b6:	mov    ch,0x9c
  4063b8:	jbe    0x40639b
  4063ba:	call   0x7f8a:0x8f4e6cf4
  4063c1:	rcr    DWORD PTR [ecx+0x5f],1
  4063c4:	pop    es
  4063c5:	mov    BYTE PTR [ebp+0x25],dl
  4063c8:	jmp    0x134dc2a
  4063cd:	dec    edi
  4063ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4063cf:	jg     0x4063b8
  4063d1:	cmp    eax,0x7d3c68b1
  4063d6:	add    edi,DWORD PTR [eax]
  4063d8:	dec    esi
  4063d9:	mov    cl,0x9
  4063db:	rcr    BYTE PTR [ebx],1
  4063dd:	and    DWORD PTR [ecx+0x68deef1],edx
  4063e3:	adc    bh,dh
  4063e5:	jl     0x40638e
  4063e7:	xchg   DWORD PTR [ebx-0x75],ecx
  4063ea:	retf   
  4063eb:	das    
  4063ec:	arpl   WORD PTR [eax+0xc728c8],ax
  4063f2:	rcl    BYTE PTR [ebp-0x6ec80d34],cl
  4063f8:	pop    es
  4063f9:	inc    ebp
  4063fa:	(bad)  
  4063fb:	pop    esi
  4063fc:	outs   dx,DWORD PTR ds:[esi]
  4063fd:	cld    
  4063fe:	(bad)  
  4063ff:	fcomp  DWORD PTR [edx+0x4dfb6bc9]
  406405:	add    ch,BYTE PTR [ebx]
  406407:	xor    eax,0xac03e1c5
  40640c:	xor    al,0xcc
  40640e:	ret    0xe542
  406411:	sub    eax,0xb26c27dc
  406416:	mov    ?,WORD PTR [ebp-0x71]
  406419:	dec    esi
  40641a:	lock add ebx,esp
  40641d:	loope  0x4063e8
  40641f:	and    al,0x3f
  406421:	xchg   BYTE PTR [ebp+0x467b1ce4],dh
  406427:	dec    edx
  406428:	jmp    0xdf4c:0x500572fd
  40642f:	inc    esi
  406430:	or     BYTE PTR [edi],0x9c
  406433:	or     al,0x54
  406435:	sahf   
  406436:	nop
  406437:	sar    ecx,cl
  406439:	fst    st(2)
  40643b:	cli    
  40643c:	rcr    BYTE PTR [esi],0xa1
  40643f:	push   ebx
  406440:	or     ebp,0x5138f63b
  406446:	in     eax,dx
  406447:	rcr    BYTE PTR [esi+edi*8-0x2e57bca3],1
  40644e:	jl     0x4064b8
  406450:	or     al,ch
  406452:	and    eax,0x10e8fd25
  406457:	xchg   edx,eax
  406458:	and    esi,DWORD PTR [ebp-0xdc8fe71]
  40645e:	sbb    BYTE PTR [ebp-0x14],ah
  406461:	add    eax,0x4f22f14b
  406466:	out    dx,al
  406467:	add    eax,DWORD PTR [eax-0x1b849490]
  40646d:	sub    DWORD PTR [eax+0x3d],edx
  406470:	(bad)  [ebp-0x3d67309f]
  406476:	mov    dh,bh
  406478:	xchg   edx,eax
  406479:	mov    al,0x16
  40647b:	add    ebp,DWORD PTR [edx-0x7480fafb]
  406481:	dec    ebx
  406482:	outs   dx,BYTE PTR ds:[esi]
  406483:	daa    
  406484:	mov    edi,DWORD PTR [edx-0x48f622cf]
  40648a:	ja     0x4064e9
  40648c:	daa    
  40648d:	stos   DWORD PTR es:[edi],eax
  40648e:	mov    edi,0x67854318
  406493:	mov    cl,0x64
  406495:	(bad)  
  406496:	aad    0x91
  406498:	mov    ch,bl
  40649a:	sbb    DWORD PTR [ebp+0x4954147a],edi
  4064a0:	(bad)  
  4064a1:	or     dl,BYTE PTR [eax-0x3b]
  4064a4:	sbb    al,0x4d
  4064a6:	add    BYTE PTR [edx-0x18513ff9],dh
  4064ac:	push   ebx
  4064ad:	sbb    eax,0xcf49b06c
  4064b2:	mov    dh,0xc
  4064b4:	sbb    BYTE PTR [edi-0x30],al
  4064b7:	adc    eax,DWORD PTR [ebx+eiz*1-0x66]
  4064bb:	test   bl,0x7a
  4064be:	xlat   BYTE PTR ds:[ebx]
  4064bf:	dec    ebx
  4064c0:	cmp    eax,0xf02ee260
  4064c5:	sbb    al,0xc
  4064c7:	inc    edx
  4064c8:	cdq    
  4064c9:	and    eax,0xf54bfa7f
  4064ce:	inc    edx
  4064cf:	iret   
  4064d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4064d1:	fstp   DWORD PTR [edi+edx*2]
  4064d4:	jno    0x40650c
  4064d6:	lds    edx,FWORD PTR [edi-0x4e712cb6]
  4064dc:	(bad)  
  4064dd:	sti    
  4064de:	scas   al,BYTE PTR es:[edi]
  4064df:	push   ebx
  4064e0:	test   DWORD PTR [ebx-0x7f],edi
  4064e3:	ret    0xf7c9
  4064e6:	mov    al,0x1a
  4064e8:	jge    0x4064e2
  4064ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4064eb:	jle    0x40650d
  4064ed:	cmp    al,0xee
  4064ef:	and    eax,0x3dd4999d
  4064f4:	dec    esp
  4064f5:	sti    
  4064f6:	shl    al,1
  4064f8:	mov    eax,0x94a4db52
  4064fd:	fstp   TBYTE PTR ss:[eax+0x4ae0e63c]
  406504:	xchg   esp,eax
  406505:	jmp    0x4064d4
  406507:	mov    edi,DWORD PTR [esi]
  406509:	dec    esi
  40650a:	cmp    ecx,DWORD PTR [esi]
  40650c:	pushf  
  40650d:	loop   0x406542
  40650f:	add    dh,BYTE PTR [eax]
  406511:	sbb    cl,cl
  406513:	and    DWORD PTR [ebp+ebp*8-0x20],edi
  406517:	adc    BYTE PTR [ecx-0x5f],bh
  40651a:	jecxz  0x4064f3
  40651c:	mov    bl,0x67
  40651e:	(bad)  
  40651f:	fcmovnbe st,st(5)
  406521:	(bad)  
  406522:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406523:	aaa    
  406524:	xchg   ecx,eax
  406525:	ror    DWORD PTR [ecx-0x51a46115],1
  40652b:	lods   al,BYTE PTR ds:[esi]
  40652c:	mov    dl,0x6
  40652e:	sbb    DWORD PTR [esi],0x69234485
  406534:	jne    0x406567
  406536:	jecxz  0x40659f
  406538:	push   ds
  406539:	sbb    al,0xc2
  40653b:	test   eax,0xb30c1954
  406540:	jne    0x406502
  406542:	(bad)  
  406543:	xchg   edx,eax
  406544:	add    DWORD PTR [eax-0x78],0x7e
  406548:	ins    BYTE PTR es:[edi],dx
  406549:	sbb    edx,DWORD PTR [ebx+0x41b63bab]
  40654f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406550:	jns    0x406517
  406552:	fwait
  406553:	push   ebx
  406554:	sbb    eax,0x286a821d
  406559:	stos   DWORD PTR es:[edi],eax
  40655a:	cmp    ebp,DWORD PTR [edi+0x1f]
  40655d:	adc    al,0x62
  40655f:	jbe    0x4065b3
  406561:	je     0x4064e8
  406563:	lods   eax,DWORD PTR ds:[esi]
  406564:	or     eax,0x2e10acf8
  406569:	sub    bh,BYTE PTR [edx-0x3df1dcc6]
  40656f:	mov    ebx,0x250c8ce
  406574:	jle    0x4065e2
  406576:	pop    ecx
  406577:	jmp    0xc3ae:0x6dc3d0e8
  40657e:	sahf   
  40657f:	scas   eax,DWORD PTR es:[edi]
  406580:	or     eax,0xa2be322b
  406585:	cli    
  406586:	es cli 
  406588:	imul   edi,DWORD PTR [ebp-0x49],0x90ddb2dc
  40658f:	loope  0x406533
  406591:	(bad)  
  406592:	xor    al,0x1d
  406594:	push   0xfffffff9
  406596:	push   eax
  406597:	mov    edi,0x408de99b
  40659c:	jg     0x4065bb
  40659e:	inc    esi
  40659f:	sub    eax,0x79a7aa8
  4065a4:	in     al,dx
  4065a5:	cmp    DWORD PTR [edx-0x62],0x73a8c43c
  4065ac:	(bad)
  4065af:	fidivr WORD PTR ds:0x43f8f975
  4065b5:	and    DWORD PTR [ebx+0x47],ebx
  4065b8:	mov    edi,0xed31a8e6
  4065bd:	sbb    BYTE PTR [ecx+0x23],ah
  4065c0:	popf   
  4065c1:	in     eax,dx
  4065c2:	mov    ds:0x5148db5f,eax
  4065c7:	fistp  QWORD PTR [ebx+0x653f27d8]
  4065cd:	xor    BYTE PTR [edi],al
  4065cf:	jb     0x40658e
  4065d1:	je     0x4065ff
  4065d3:	scas   al,BYTE PTR es:[edi]
  4065d4:	lds    esp,FWORD PTR [ecx]
  4065d6:	jge    0x40657b
  4065d8:	push   ss
  4065d9:	push   ss
  4065da:	mov    es,WORD PTR [esi-0x4b]
  4065dd:	cmp    ah,cl
  4065df:	or     DWORD PTR [ecx+esi*1-0x764bebc6],0x6cbec4fa
  4065ea:	fnstsw WORD PTR [edi-0x2b25f77]
  4065f0:	mov    bl,0x8f
  4065f2:	push   ss
  4065f3:	mov    ebp,0x21bb39e8
  4065f8:	shr    BYTE PTR [edx-0x42],1
  4065fb:	test   al,0x41
  4065fd:	jne    0x40663d
  4065ff:	cmp    edi,DWORD PTR [esi+0x1]
  406602:	dec    esi
  406603:	xor    BYTE PTR es:[edx],cl
  406606:	jmp    0x8667a205
  40660b:	bound  esi,QWORD PTR [ebx+0x5f29b21c]
  406611:	loopne 0x406644
  406613:	cld    
  406614:	out    dx,eax
  406615:	dec    edx
  406616:	lds    edi,FWORD PTR [eax+0x37e56081]
  40661c:	fisttp QWORD PTR [ecx+0x77]
  40661f:	inc    esp
  406620:	inc    ebp
  406621:	test   al,0xd9
  406623:	mov    ?,WORD PTR [edx]
  406625:	repnz addr16 dec esp
  406628:	mov    edx,0x19f9e817
  40662d:	add    al,0xa2
  40662f:	(bad)  
  406630:	cdq    
  406631:	repnz imul ebp,DWORD PTR [edx+0x3e65c5e6],0xfffffffb
  406639:	xor    ecx,ebx
  40663b:	retf   
  40663c:	out    0x44,eax
  40663e:	mov    ds:0x965542d2,al
  406643:	(bad)  
  406645:	loopne 0x406624
  406647:	shl    BYTE PTR [edx+ebx*8+0x13],0x30
  40664c:	sub    ch,ch
  40664e:	out    0x17,al
  406650:	nop    DWORD PTR [ebp-0x5c127c8d]
  406657:	pop    eax
  406658:	inc    ebx
  406659:	les    esp,FWORD PTR [ebp-0x26]
  40665c:	jns    0x4066d8
  40665e:	cmp    al,0xbc
  406660:	mov    ?,WORD PTR [edi+0x3ebe88ed]
  406666:	dec    ebx
  406667:	xchg   BYTE PTR ds:0x1ded6e57,bl
  40666d:	pop    ecx
  40666e:	mov    dl,BYTE PTR [eax-0x4c7576e9]
  406674:	repz cmp al,0xd6
  406677:	push   ds
  406678:	push   edi
  406679:	or     al,0xca
  40667b:	or     al,al
  40667d:	cdq    
  40667e:	sub    al,0x9f
  406680:	lahf   
  406681:	(bad)  [edi+0x15]
  406684:	add    BYTE PTR [ebx],dl
  406686:	cmp    al,0x5a
  406688:	repz hlt 
  40668a:	mov    ds:0xdbd2b4c6,eax
  40668f:	xor    eax,0xe1650c9b
  406694:	out    0x7d,eax
  406696:	ror    DWORD PTR [ecx-0x5c],0xb9
  40669a:	bound  eax,QWORD PTR [edi-0x2f52cc61]
  4066a0:	cmp    ebp,0x264c6f4e
  4066a6:	and    eax,0x41803c9f
  4066ab:	inc    ebx
  4066ac:	mov    ebx,0x14a33323
  4066b1:	into   
  4066b2:	jb     0x40663d
  4066b4:	lds    ebx,FWORD PTR [eax]
  4066b6:	add    BYTE PTR [edi-0x435716fc],dl
  4066bc:	leave  
  4066bd:	rcl    DWORD PTR [edx+edi*8],cl
  4066c0:	adc    edx,DWORD PTR [ebx-0x5208816a]
  4066c6:	cmp    BYTE PTR [edx-0x48f3b788],dl
  4066cc:	jg     0x40671c
  4066ce:	je     0x40667b
  4066d0:	jecxz  0x40673b
  4066d2:	pop    esi
  4066d3:	call   0x1186:0x158246ef
  4066da:	push   esi
  4066db:	or     ebx,DWORD PTR [edi]
  4066dd:	aaa    
  4066de:	jmp    DWORD PTR [esi-0x48]
  4066e1:	das    
  4066e2:	stos   DWORD PTR es:[edi],eax
  4066e3:	xchg   edx,eax
  4066e4:	std    
  4066e5:	ffreep st(0)
  4066e7:	add    DWORD PTR [eax-0x39],edx
  4066ea:	sub    ebp,edi
  4066ec:	daa    
  4066ed:	ror    DWORD PTR [ebp+0x549a2815],0x90
  4066f4:	xlat   BYTE PTR ds:[ebx]
  4066f5:	dec    edi
  4066f6:	addr16 pop ecx
  4066f8:	inc    esi
  4066f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4066fa:	push   edi
  4066fb:	jl     0x406773
  4066fd:	fild   DWORD PTR [ecx]
  4066ff:	(bad)  
  406700:	arpl   WORD PTR [eax+0x645b61e2],ax
  406706:	leave  
  406707:	scas   al,BYTE PTR es:[edi]
  406708:	pop    esi
  406709:	xor    BYTE PTR ds:0x3f9b384a,0xd9
  406710:	gs jnp 0x406708
  406713:	leave  
  406714:	add    BYTE PTR [edx+0x5e],dh
  406717:	inc    ecx
  406718:	cs stos DWORD PTR es:[edi],eax
  40671a:	daa    
  40671b:	sub    BYTE PTR [esi-0x53],0xb5
  40671f:	push   esi
  406720:	cmp    DWORD PTR [eax-0x70fbabb4],edi
  406726:	ss icebp 
  406728:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406729:	add    eax,0x6e0c9e53
  40672e:	(bad)  [ebp+0x7e]
  406731:	add    al,0xf3
  406733:	inc    esp
  406734:	dec    eax
  406735:	out    dx,al
  406736:	imul   eax,DWORD PTR [eax+0x728d3d85],0xffffff8b
  40673d:	mov    WORD PTR [ecx+0x53],ss
  406740:	jge    0x406730
  406742:	pop    ds
  406743:	loop   0x406756
  406745:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406746:	js     0x406729
  406748:	es xchg esi,eax
  40674a:	jecxz  0x4066f2
  40674c:	cdq    
  40674d:	and    BYTE PTR [ebp+0x59],0xa6
  406751:	dec    eax
  406752:	push   cs
  406753:	clc    
  406754:	jno    0x4067a7
  406756:	icebp  
  406757:	jo     0x406724
  406759:	or     DWORD PTR [ecx-0x7272bc53],ebx
  40675f:	adc    DWORD PTR [edi-0x5f],0xffffffe5
  406763:	add    edi,DWORD PTR [edi+esi*2-0x3f]
  406767:	jmp    0xb3d32f8a
  40676c:	outs   dx,DWORD PTR ds:[esi]
  40676d:	(bad)  
  40676e:	shl    eax,0x8e
  406771:	ss xchg esi,eax
  406773:	jl     0x4067d2
  406775:	jns    0x406762
  406777:	dec    edi
  406778:	pushf  
  406779:	test   ebx,ebx
  40677b:	pop    edi
  40677c:	push   edi
  40677d:	or     cl,BYTE PTR [ecx-0x3d]
  406780:	sbb    eax,0xffffff83
  406783:	(bad)  
  406784:	mov    eax,0xa79b7300
  406789:	sbb    al,0xca
  40678b:	mov    al,0xfe
  40678d:	adc    bl,ah
  40678f:	dec    eax
  406790:	outs   dx,DWORD PTR ds:[esi]
  406791:	cmp    dl,BYTE PTR [ebx-0x25]
  406794:	out    0x8a,eax
  406796:	jnp    0x40672c
  406798:	(bad)  
  406799:	ins    DWORD PTR es:[edi],dx
  40679a:	pop    ds
  40679b:	xlat   BYTE PTR ds:[ebx]
  40679c:	xor    BYTE PTR [edi+0x44],dh
  40679f:	mov    cl,0x2e
  4067a1:	stos   BYTE PTR es:[edi],al
  4067a2:	and    eax,0x7ec3f246
  4067a7:	fs pushf 
  4067a9:	or     esi,eax
  4067ab:	xchg   ecx,eax
  4067ac:	into   
  4067ad:	int    0x4b
  4067af:	sub    esi,DWORD PTR [edx+0x62]
  4067b2:	jns    0x406771
  4067b4:	arpl   WORD PTR [edi],di
  4067b6:	adc    ebx,DWORD PTR [ebp-0x19]
  4067b9:	and    DWORD PTR [ecx+esi*8-0x2a],esi
  4067bd:	and    eax,0xa673adc3
  4067c2:	and    esi,DWORD PTR [eax]
  4067c4:	sub    eax,0x49f203fc
  4067c9:	lea    edx,[ebp+0x29bc8611]
  4067cf:	(bad)  [esp+eax*4+0x395cb839]
  4067d6:	push   es
  4067d7:	sub    BYTE PTR [ecx-0x4f],bh
  4067da:	jnp    0x406803
  4067dc:	repnz xchg esp,eax
  4067de:	test   BYTE PTR [eax],ah
  4067e0:	pop    ebx
  4067e1:	adc    eax,0xe5d50434
  4067e6:	stos   BYTE PTR es:[edi],al
  4067e7:	mov    dh,0xc8
  4067e9:	jecxz  0x4067f3
  4067eb:	cmp    al,0x1f
  4067ed:	data16 fs sahf 
  4067f0:	ror    DWORD PTR [ecx+0x36],cl
  4067f3:	shl    al,cl
  4067f5:	mov    cs,ebx
  4067f7:	daa    
  4067f8:	mov    al,0x46
  4067fa:	(bad)  
  4067fb:	xchg   ecx,eax
  4067fc:	push   ecx
  4067fd:	nop
  4067fe:	inc    esp
  4067ff:	pushf  
  406800:	stos   BYTE PTR es:[edi],al
  406801:	mov    DWORD PTR [ebp-0x42],0x3290f0cb
  406808:	pop    es
  406809:	hlt    
  40680a:	retf   0x8913
  40680d:	(bad)  [edi]
  40680f:	into   
  406810:	es xchg esp,eax
  406812:	and    eax,0x8511ec01
  406817:	mov    cl,dh
  406819:	aad    0x69
  40681b:	mov    esi,0x21a6a68d
  406820:	jmp    0xce1dfb98
  406825:	adc    cl,ah
  406827:	cld    
  406828:	and    dh,ah
  40682a:	pop    esp
  40682b:	dec    eax
  40682c:	loope  0x4067af
  40682e:	adc    BYTE PTR [ebx],0xb7
  406831:	adc    BYTE PTR [ebx],ah
  406833:	sbb    al,0xab
  406835:	or     esp,0xd14441fe
  40683b:	popf   
  40683c:	mov    eax,DWORD PTR [ebx-0x2b]
  40683f:	push   ds
  406840:	fnstsw WORD PTR [eax-0x1f87d6ae]
  406846:	and    dh,ah
  406848:	fnstenv [eax-0x2e7a07c1]
  40684e:	push   0xffffff87
  406850:	mov    edx,0x2ebb2ee2
  406855:	adc    BYTE PTR [ecx-0x740420c0],0xef
  40685c:	aaa    
  40685d:	sub    DWORD PTR [esi+0x5e],ebx
  406860:	(bad)  
  406861:	push   edi
  406862:	out    0x32,eax
  406864:	cmp    bl,ah
  406866:	loop   0x4068b2
  406868:	mov    ebx,0x98115341
  40686d:	ja     0x406822
  40686f:	jbe    0x4068b3
  406871:	jge    0x406847
  406873:	and    ah,BYTE PTR [esi+eiz*2-0x100da1a7]
  40687a:	and    al,0xd8
  40687c:	fmul   DWORD PTR [ebp+0x4ce7e8a0]
  406882:	xor    al,0x27
  406884:	jo     0x4068ad
  406886:	adc    eax,0xffffffb1
  406889:	xor    DWORD PTR [edx],esp
  40688b:	push   ss
  40688c:	cwde   
  40688d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40688e:	sti    
  40688f:	std    
  406890:	cmp    dl,BYTE PTR [ebx+0x29]
  406893:	jb     0x406898
  406895:	not    BYTE PTR [edx-0x60ad79c9]
  40689b:	cmp    eax,0x77f1387c
  4068a0:	adc    DWORD PTR [esi+0x64],eax
  4068a3:	push   ebx
  4068a4:	pop    ecx
  4068a5:	imul   esi,DWORD PTR [ebx],0x2c
  4068a8:	mov    eax,0xc6e3c636
  4068ad:	add    esp,DWORD PTR [ebx-0x16894c08]
  4068b3:	std    
  4068b4:	jnp    0x406875
  4068b6:	mov    ?,WORD PTR [eax-0x3eedad12]
  4068bc:	mov    eax,ds:0x7bbab46c
  4068c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4068c2:	mov    bh,BYTE PTR [eax+eiz*4-0x5ab95e52]
  4068c9:	bt     DWORD PTR [ecx-0x19ba54a2],edx
  4068d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4068d1:	jl     0x406949
  4068d3:	in     eax,dx
  4068d4:	scas   eax,DWORD PTR es:[edi]
  4068d5:	fstp   TBYTE PTR [edx]
  4068d7:	push   eax
  4068d8:	out    0x1,al
  4068da:	pop    ds
  4068db:	dec    ebx
  4068dc:	sbb    cl,bh
  4068de:	xchg   DWORD PTR [ecx+0x4a5dbb70],edi
  4068e4:	mov    bh,0xab
  4068e6:	dec    edi
  4068e7:	gs aam 0xd5
  4068ea:	mov    BYTE PTR [edi+0x594b28ac],0x30
  4068f1:	xchg   esp,eax
  4068f2:	push   ss
  4068f3:	mov    al,0xab
  4068f5:	imul   esi,DWORD PTR [edx+0x5a842017],0x61bd639
  4068ff:	inc    ecx
  406900:	push   ebp
  406901:	dec    esp
  406902:	sbb    eax,0xb70b9304
  406907:	mov    al,ds:0x3f11fb8f
  40690c:	jge    0x4068b2
  40690e:	push   cs
  40690f:	sbb    DWORD PTR [esp+edi*4],ebp
  406912:	xlat   BYTE PTR ds:[ebx]
  406913:	dec    esp
  406914:	xor    edx,DWORD PTR [ecx+0x3623963d]
  40691a:	iret   
  40691b:	add    cl,BYTE PTR [ebx-0x70]
  40691e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40691f:	mov    edx,ebp
  406921:	fsub   DWORD PTR ds:0xbbbb3f62
  406927:	push   eax
  406928:	dec    ebp
  406929:	aas    
  40692a:	loope  0x406916
  40692c:	sti    
  40692d:	adc    DWORD PTR [eax],edx
  40692f:	mov    es,WORD PTR [esi+0x103d6932]
  406935:	(bad)  
  406937:	ret    
  406938:	dec    esi
  406939:	push   cs
  40693a:	inc    ebx
  40693b:	xor    DWORD PTR [edi],ebp
  40693d:	fild   WORD PTR [ecx]
  40693f:	fs test al,0xa9
  406942:	and    bl,cl
  406944:	mov    edx,0x94afb3f7
  406949:	dec    edx
  40694a:	push   es
  40694b:	pop    edi
  40694c:	jae    0x406924
  40694e:	ins    DWORD PTR es:[edi],dx
  40694f:	test   DWORD PTR ds:[esi],eax
  406952:	pop    eax
  406953:	cmp    esi,DWORD PTR [eax+edx*1]
  406956:	mov    bh,0x14
  406958:	outs   dx,BYTE PTR ds:[esi]
  406959:	mov    ecx,0x2a86cb0c
  40695e:	(bad)  
  40695f:	jnp    0x406946
  406961:	push   0x2271311e
  406966:	mov    edi,ss
  406968:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406969:	sbb    edi,edx
  40696b:	push   0x529ba9f1
  406970:	cmp    ebx,DWORD PTR [eax+0xd]
  406973:	in     al,dx
  406974:	pop    ecx
  406975:	mov    BYTE PTR [edi+ecx*2],bl
  406978:	aam    0xb8
  40697a:	pop    edi
  40697b:	add    edi,ebp
  40697d:	das    
  40697e:	lods   al,BYTE PTR ds:[esi]
  40697f:	jns    0x40691d
  406981:	inc    esp
  406982:	mov    al,0x83
  406984:	ror    BYTE PTR [ecx-0x48],0x9b
  406988:	push   edi
  406989:	cmp    al,0xe2
  40698b:	jne    0x4069ac
  40698d:	dec    edi
  40698e:	sub    cl,dh
  406990:	fwait
  406991:	dec    esi
  406992:	out    dx,al
  406993:	mov    edx,0x85fd2375
  406998:	clc    
  406999:	shl    BYTE PTR [ebp-0x4bdec3fc],1
  40699f:	and    edi,DWORD PTR [eax+eax*2+0x4a48aa40]
  4069a6:	outs   dx,DWORD PTR ds:[esi]
  4069a7:	popf   
  4069a8:	mov    al,ds:0x3a9ac6c5
  4069ad:	mov    ebx,0x7612d5df
  4069b2:	dec    ebp
  4069b3:	xchg   BYTE PTR [edi-0x70],dl
  4069b6:	mov    ds,WORD PTR ds:0x9d8cfce7
  4069bc:	sbb    esi,edx
  4069be:	clc    
  4069bf:	lds    edi,FWORD PTR [edi-0x54]
  4069c2:	xor    ebx,DWORD PTR [eax+ebx*4+0x41f307e9]
  4069c9:	out    0x25,al
  4069cb:	in     eax,0xd5
  4069cd:	outs   dx,DWORD PTR ds:[esi]
  4069ce:	(bad)  
  4069cf:	pop    edx
  4069d0:	sbb    al,0xf5
  4069d2:	(bad)  
  4069d3:	sub    bl,BYTE PTR [eax+0x5c]
  4069d6:	imul   ebp,DWORD PTR [eax],0x6347d04f
  4069dc:	test   DWORD PTR [ebp+0x468d1b2],esi
  4069e2:	add    DWORD PTR [ebx],eax
  4069e4:	and    al,0xaf
  4069e6:	clc    
  4069e7:	dec    ebp
  4069e8:	cmp    eax,0xd900bff9
  4069ed:	rcl    BYTE PTR [edi+0x710cc9e],cl
  4069f3:	or     DWORD PTR [ecx+0x0],0x74
  4069f7:	add    dh,al
  4069f9:	inc    esp
  4069fa:	lods   eax,DWORD PTR gs:[esi]
  4069fc:	mov    edi,0x61470ad5
  406a01:	shl    DWORD PTR [ebx],1
  406a03:	cld    
  406a04:	shl    DWORD PTR [esi],1
  406a06:	adc    BYTE PTR [ebx-0x71b6173b],al
  406a0c:	(bad)  
  406a0d:	je     0x4069f1
  406a0f:	sub    edx,0x1f
  406a12:	adc    BYTE PTR [edx],0xa7
  406a15:	mov    dl,0xbe
  406a17:	xor    ecx,esp
  406a19:	adc    eax,0x12756a8f
  406a1e:	retf   0x589
  406a21:	(bad)  
  406a23:	push   ebx
  406a24:	cmp    dh,BYTE PTR [edx]
  406a26:	test   al,0xc7
  406a28:	imul   edx,DWORD PTR cs:[edi],0xf
  406a2c:	mov    al,0x5b
  406a2e:	xchg   edx,eax
  406a2f:	scas   al,BYTE PTR es:[edi]
  406a30:	int3   
  406a31:	jb     0x4069dc
  406a33:	rcl    DWORD PTR [esi-0x25f6c9ce],cl
  406a39:	pop    ecx
  406a3a:	mov    cl,0xf2
  406a3c:	data16 ffree st(3)
  406a3f:	outs   dx,DWORD PTR ds:[esi]
  406a40:	ja     0x406a56
  406a42:	sbb    eax,0x20a9f74c
  406a47:	ds jbe 0x4069e4
  406a4a:	popf   
  406a4b:	into   
  406a4c:	jg     0x406a0c
  406a4e:	push   ebx
  406a4f:	hlt    
  406a50:	mov    ds:0x54a1c256,al
  406a55:	shr    eax,cl
  406a57:	outs   dx,BYTE PTR ds:[esi]
  406a58:	sbb    al,0x15
  406a5a:	dec    esi
  406a5b:	lods   eax,DWORD PTR ds:[esi]
  406a5c:	inc    ebx
  406a5d:	jg     0x406a9b
  406a5f:	dec    edi
  406a60:	jle    0x406a76
  406a62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406a63:	jns    0x406a87
  406a65:	xchg   edx,eax
  406a66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406a67:	mov    ebx,0xf037fa78
  406a6c:	jns    0x406ad6
  406a6e:	or     ch,BYTE PTR [edi+eax*1+0x53adb580]
  406a75:	mov    ecx,0x6492889e
  406a7a:	and    BYTE PTR [ebp-0x7f],bl
  406a7d:	imul   edx,DWORD PTR [ebx-0x4ef385fb],0xffffff9d
  406a84:	jg     0x406a07
  406a86:	in     eax,dx
  406a87:	sub    eax,0x4f4553a6
  406a8c:	aad    0x98
  406a8e:	pop    es
  406a8f:	out    dx,eax
  406a90:	xchg   edx,eax
  406a91:	cmp    DWORD PTR [edi+ebp*2+0x1],0xec14018c
  406a99:	adc    esp,DWORD PTR [ecx+0x471fc1bc]
  406a9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406aa0:	rcl    BYTE PTR [ebx-0x48],1
  406aa3:	pop    ecx
  406aa4:	mov    ebp,0xc78eed6
  406aa9:	imul   esp,DWORD PTR [edx],0x1a6cba6a
  406aaf:	add    al,BYTE PTR [edi-0x26]
  406ab2:	aas    
  406ab3:	imul   edi,DWORD PTR [edi+ecx*4-0x5c],0x905d58eb
  406abb:	jmp    0x9067af3c
  406ac0:	inc    edi
  406ac1:	(bad)  [edi-0x30]
  406ac4:	inc    ebx
  406ac5:	mov    esi,0xb5c60fd3
  406aca:	call   0x1cee:0x432f2442
  406ad1:	pop    edi
  406ad2:	push   es
  406ad3:	push   ds
  406ad4:	sbb    edi,DWORD PTR [eax]
  406ad6:	rcr    BYTE PTR [ebp+0x29],cl
  406ad9:	add    eax,0xbe269b45
  406ade:	retf   0xe0ec
  406ae1:	jecxz  0x406b22
  406ae3:	jo     0x406aa2
  406ae5:	das    
  406ae6:	lahf   
  406ae7:	or     DWORD PTR [eax+0x7dd539bd],edx
  406aed:	adc    al,dl
  406aef:	jae    0x406a90
  406af1:	pop    ss
  406af2:	enter  0x5fa3,0x3c
  406af6:	(bad)  
  406af7:	sub    DWORD PTR [esi+0x60],ebx
  406afa:	ja     0x406b67
  406afc:	mov    esi,DWORD PTR [edi]
  406afe:	mov    edi,0xadca68d9
  406b03:	arpl   WORD PTR ds:0x74de6bc0,bp
  406b09:	int    0x12
  406b0b:	sub    DWORD PTR [edx+0x2319337c],ebp
  406b11:	push   ds
  406b12:	mov    esi,0xa4720d95
  406b17:	mov    DWORD PTR ds:0x53beb6a4,eax
  406b1d:	cdq    
  406b1e:	mov    edx,0xae8e5d98
  406b23:	xchg   ecx,eax
  406b24:	or     dl,bh
  406b26:	fist   WORD PTR [ecx]
  406b28:	lahf   
  406b29:	adc    esi,DWORD PTR ds:0x59cbadad
  406b2f:	cmp    bh,BYTE PTR [edi]
  406b31:	or     DWORD PTR ds:[esi+ebx*2-0x5eb7ec9d],0x4e
  406b3a:	call   0xfae50293
  406b3f:	ficomp DWORD PTR [ebp-0x5c53a598]
  406b45:	ins    DWORD PTR es:[edi],dx
  406b46:	pop    es
  406b47:	add    eax,0x8112ef4d
  406b4c:	xor    bh,dl
  406b4e:	mov    bl,0xb1
  406b50:	dec    ecx
  406b51:	sti    
  406b52:	mov    al,0xb6
  406b54:	in     eax,dx
  406b55:	pusha  
  406b56:	cmp    ecx,DWORD PTR [edx]
  406b58:	cwde   
  406b59:	(bad)  
  406b5a:	mov    fs,WORD PTR [esi-0x75]
  406b5d:	imul   ebp,DWORD PTR [ecx],0xb2b9768
  406b63:	or     al,BYTE PTR ds:0xb4c3907c
  406b69:	outs   dx,DWORD PTR ds:[esi]
  406b6a:	cwde   
  406b6b:	sahf   
  406b6c:	xchg   esi,eax
  406b6d:	mov    dh,0x5e
  406b6f:	sar    BYTE PTR [edi+0x37331102],1
  406b75:	loop   0x406b46
  406b77:	push   ebx
  406b78:	aam    0x36
  406b7a:	add    BYTE PTR [eax],ah
  406b7c:	xor    BYTE PTR [edi-0x7915e8c6],dl
  406b82:	mov    ds:0x1e884189,eax
  406b87:	sub    bh,0x20
  406b8a:	jno    0x406b7d
  406b8c:	pusha  
  406b8d:	jecxz  0x406bbb
  406b8f:	into   
  406b90:	push   ebx
  406b91:	popf   
  406b92:	mov    al,0xc2
  406b94:	inc    ebx
  406b95:	sbb    edi,DWORD PTR [ecx]
  406b97:	jbe    0x406b23
  406b99:	jns    0x406b22
  406b9b:	(bad)  
  406b9c:	push   edi
  406b9d:	mov    dl,0xe8
  406b9f:	pop    esi
  406ba0:	in     al,0xf2
  406ba2:	push   edx
  406ba3:	dec    esi
  406ba4:	loope  0x406bad
  406ba6:	shl    BYTE PTR [eax],0xaf
  406ba9:	(bad)  
  406baa:	popf   
  406bab:	dec    edi
  406bac:	jb     0x406c01
  406bae:	test   ecx,edi
  406bb0:	daa    
  406bb1:	and    al,0x1c
  406bb3:	sahf   
  406bb4:	mov    dl,0x6a
  406bb6:	fiadd  DWORD PTR gs:[eax-0x7c766e87]
  406bbd:	jno    0x406b75
  406bbf:	mov    al,0x84
  406bc1:	mov    cl,BYTE PTR [ecx+0x3a10d4b9]
  406bc7:	mov    dh,0x25
  406bc9:	sbb    esp,DWORD PTR [ecx-0x5]
  406bcc:	jge    0x406bc7
  406bce:	lods   eax,DWORD PTR ds:[esi]
  406bcf:	es mov dh,0xf0
  406bd2:	inc    ebx
  406bd3:	push   esp
  406bd4:	cwde   
  406bd5:	add    al,0x43
  406bd7:	and    BYTE PTR [ecx+edi*4],dl
  406bda:	arpl   WORD PTR [esi-0x51],si
  406bdd:	sbb    eax,0x2df36839
  406be2:	js     0x406bb6
  406be4:	imul   esp,DWORD PTR [esi],0x4f
  406be7:	sahf   
  406be8:	xor    edi,ecx
  406bea:	jnp    0x406bbf
  406bec:	and    cl,BYTE PTR [ecx+ebx*8]
  406bef:	ja     0x406b96
  406bf1:	xchg   ah,bl
  406bf3:	rcr    BYTE PTR [ebp+0x41c3c03a],1
  406bf9:	jmp    0x406bfe
  406bfb:	loop   0x406c76
  406bfd:	cwde   
  406bfe:	sub    esp,DWORD PTR [ebp-0x469f391b]
  406c04:	test   BYTE PTR [edi+0xa],dl
  406c07:	cwde   
  406c08:	xor    cl,al
  406c0a:	out    dx,eax
  406c0b:	iret   
  406c0c:	ret    
  406c0d:	adc    al,0x32
  406c0f:	idiv   DWORD PTR [eax+0x2]
  406c12:	cmp    ebp,DWORD PTR [edi+edx*4-0x2b]
  406c16:	pop    ebp
  406c17:	test   BYTE PTR [ebx+0x7a],bh
  406c1a:	adc    eax,0xe7614892
  406c1f:	sub    ah,BYTE PTR [esi-0x52e12808]
  406c25:	add    eax,0x619bc7c1
  406c2a:	fisttp QWORD PTR ds:0x3968955b
  406c30:	loopne 0x406bbb
  406c32:	inc    esi
  406c33:	adc    DWORD PTR [ecx+0x2a068625],0xffffff93
  406c3a:	or     BYTE PTR [ebp+0x8],0x19
  406c3e:	mov    edx,DWORD PTR [edx+eax*1+0x2f]
  406c42:	imul   ebx,DWORD PTR [esi],0x968d215d
  406c48:	outs   dx,DWORD PTR ds:[esi]
  406c49:	sbb    bl,BYTE PTR [eax-0x43c4ecaa]
  406c4f:	xlat   BYTE PTR ds:[ebx]
  406c50:	mov    edx,0xf1518b42
  406c55:	dec    edx
  406c56:	sbb    eax,DWORD PTR [eax-0x70]
  406c59:	jbe    0x406c3b
  406c5b:	mov    ds:0x840f710e,eax
  406c60:	jbe    0x406c74
  406c62:	jmp    DWORD PTR [ebx-0x62]
  406c65:	out    0xf1,al
  406c67:	nop
  406c68:	test   eax,0x856965bc
  406c6d:	into   
  406c6e:	xchg   ecx,eax
  406c6f:	scas   eax,DWORD PTR es:[edi]
  406c70:	repz inc esi
  406c72:	and    ecx,DWORD PTR [edi]
  406c74:	cwde   
  406c75:	sub    al,0xda
  406c77:	xor    DWORD PTR [edi-0x3797bdd],eax
  406c7d:	stos   DWORD PTR es:[edi],eax
  406c7e:	xor    eax,0xccb61de8
  406c83:	fcomp  st(6)
  406c85:	ret    
  406c86:	lods   eax,DWORD PTR ds:[esi]
  406c87:	add    eax,0xa427d396
  406c8c:	sbb    DWORD PTR [esi],esp
  406c8e:	(bad)  
  406c8f:	sub    edi,0x22bd88f2
  406c95:	rol    BYTE PTR [bx],0xe0
  406c99:	ja     0x406cdb
  406c9b:	dec    esi
  406c9c:	xlat   BYTE PTR ds:[ebx]
  406c9d:	push   ss
  406c9e:	xchg   esp,eax
  406c9f:	loopne 0x406cb3
  406ca1:	fwait
  406ca2:	in     eax,dx
  406ca3:	xor    edx,DWORD PTR [esi-0x75e1c5e9]
  406ca9:	sbb    eax,0x204ccb79
  406cae:	daa    
  406caf:	mov    fs,WORD PTR [edi+eax*4+0x5a]
  406cb3:	push   cs
  406cb4:	jle    0x406d24
  406cb6:	sbb    ebx,DWORD PTR [ecx-0x62]
  406cb9:	cs aas 
  406cbb:	adc    edx,esi
  406cbd:	cld    
  406cbe:	and    eax,0xdfa19d19
  406cc3:	jg     0x406ce2
  406cc5:	addr16 mov edi,0x203d3318
  406ccb:	xchg   edi,eax
  406ccc:	dec    BYTE PTR [edi+0x2a]
  406ccf:	mov    cl,0x17
  406cd1:	adc    edi,edx
  406cd3:	jne    0x406d33
  406cd5:	loopne 0x406c57
  406cd7:	inc    eax
  406cd8:	fisub  DWORD PTR [esi+ebx*8-0x2bf39bc]
  406cdf:	pop    edx
  406ce0:	sub    BYTE PTR [ebx],bl
  406ce2:	mov    dl,0xf5
  406ce4:	fucompp 
  406ce6:	loopne 0x406cee
  406ce8:	and    ch,BYTE PTR ds:0xe8c99d65
  406cee:	(bad)  
  406cef:	fdivr  DWORD PTR [ecx+0x3b]
  406cf2:	xchg   esp,eax
  406cf3:	dec    edx
  406cf4:	enter  0xf61,0x17
  406cf8:	call   0xff70a181
  406cfd:	stos   BYTE PTR es:[edi],al
  406cfe:	pop    ecx
  406cff:	pop    ebx
  406d00:	sbb    al,0xcf
  406d02:	je     0x406d42
  406d04:	push   ss
  406d05:	(bad)  
  406d06:	cmp    ax,WORD PTR [ecx+0x5ee20479]
  406d0d:	ror    DWORD PTR [eax],cl
  406d0f:	dec    edx
  406d10:	jle    0x406d23
  406d12:	add    eax,0x1af0fcf3
  406d17:	sbb    esp,DWORD PTR [ecx]
  406d19:	in     eax,0x31
  406d1b:	outs   dx,DWORD PTR ds:[esi]
  406d1c:	aas    
  406d1d:	dec    edi
  406d1e:	xor    DWORD PTR [edx-0x1b],esi
  406d21:	xor    eax,0x4720dded
  406d26:	rol    BYTE PTR [bx+si],1
  406d29:	sub    edi,edi
  406d2b:	sbb    eax,DWORD PTR [esi+0x0]
  406d2e:	rol    DWORD PTR [edi*1+0x1260e48a],cl
  406d35:	dec    esp
  406d36:	pop    ecx
  406d37:	outs   dx,BYTE PTR ds:[esi]
  406d38:	into   
  406d39:	icebp  
  406d3a:	xchg   BYTE PTR [ebp-0x18],dl
  406d3d:	jmp    0x95ebd22b
  406d42:	std    
  406d43:	loope  0x406da2
  406d45:	cwde   
  406d46:	test   esp,0x151f726e
  406d4c:	lds    ecx,FWORD PTR [esi-0x6d]
  406d4f:	fsub   st(4),st
  406d51:	mov    eax,ds:0xda391ae8
  406d56:	add    eax,0x33aff6c1
  406d5b:	jbe    0x406d97
  406d5d:	jg     0x406d47
  406d5f:	jae    0x406d04
  406d61:	jb     0x406cf6
  406d63:	int3   
  406d64:	or     eax,DWORD PTR [esi-0x4e]
  406d67:	fisttp QWORD PTR [eax-0x11]
  406d6a:	sahf   
  406d6b:	ins    BYTE PTR es:[edi],dx
  406d6c:	in     eax,0x30
  406d6e:	pop    ebx
  406d6f:	push   ebx
  406d70:	push   eax
  406d71:	rcl    BYTE PTR [edx],cl
  406d73:	adc    DWORD PTR [ebp-0x1f40de8d],esi
  406d79:	mov    bh,0x4d
  406d7b:	or     dl,ch
  406d7d:	mov    edi,DWORD PTR [ebx]
  406d7f:	dec    edx
  406d80:	cmp    DWORD PTR [ebx],edi
  406d82:	inc    eax
  406d83:	fst    DWORD PTR [esi-0x44]
  406d86:	icebp  
  406d87:	inc    edi
  406d88:	push   esp
  406d89:	push   0xffffffd5
  406d8b:	dec    eax
  406d8c:	in     eax,0x30
  406d8e:	inc    DWORD PTR [ecx+ebp*1+0x60]
  406d92:	xor    BYTE PTR [esi+0x57b549da],bh
  406d98:	test   al,0xf
  406d9a:	pop    esi
  406d9b:	out    dx,al
  406d9c:	mov    esp,0xf4e87e37
  406da1:	push   esp
  406da2:	jno    0x406dd3
  406da4:	mov    ds,WORD PTR [edi+0x70235a96]
  406daa:	test   ebx,0xc797ee32
  406db0:	or     al,0x36
  406db2:	push   esp
  406db3:	outs   dx,DWORD PTR ds:[esi]
  406db4:	repz clc 
  406db6:	leave  
  406db7:	xchg   ecx,eax
  406db8:	in     eax,dx
  406db9:	push   eax
  406dba:	inc    esi
  406dbb:	std    
  406dbc:	or     BYTE PTR [ecx+0x77],dl
  406dbf:	and    ax,WORD PTR [ebx-0x5e]
  406dc3:	fsub   QWORD PTR [ecx-0x6853a590]
  406dc9:	add    ebx,DWORD PTR [eax]
  406dcb:	jp     0x406dbb
  406dcd:	loope  0x406da9
  406dcf:	popa   
  406dd0:	push   ebx
  406dd1:	pop    edi
  406dd2:	cmc    
  406dd3:	mov    bl,0x6a
  406dd5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406dd6:	cmp    DWORD PTR cs:[esp+ebx*2-0x360b722e],0x2f
  406ddf:	cli    
  406de0:	in     eax,0x44
  406de2:	sar    DWORD PTR [ebx],cl
  406de4:	mov    esi,0x7927a4ba
  406de9:	fwait
  406dea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406deb:	arpl   WORD PTR [edi-0x62],cx
  406dee:	sub    eax,0xf39b9771
  406df3:	mov    ds:0x12748989,al
  406df8:	call   DWORD PTR [edi-0x2d]
  406dfb:	mov    esp,0xffd213cb
  406e00:	(bad)  
  406e02:	imul   edx,DWORD PTR [edx-0x4fe9cc76],0x50
  406e09:	push   ebx
  406e0a:	jns    0x406dee
  406e0c:	pop    ds
  406e0d:	or     BYTE PTR [eax-0x4e8b5a10],dl
  406e13:	jge    0x406dc5
  406e15:	push   ebp
  406e16:	sub    bl,BYTE PTR [edi-0x26]
  406e19:	add    BYTE PTR [edi+0x9d6709e],ah
  406e1f:	pop    edx
  406e20:	xchg   BYTE PTR [esi+0x5b],bl
  406e23:	cwde   
  406e24:	arpl   bx,bx
  406e26:	or     ebx,DWORD PTR [eax+esi*1-0xf7976a2]
  406e2d:	ds pop es
  406e2f:	adc    edi,esp
  406e31:	mov    esp,0xb2c05a3d
  406e36:	push   eax
  406e37:	mov    ch,cl
  406e39:	cmp    al,cl
  406e3b:	lahf   
  406e3c:	ins    BYTE PTR es:[edi],dx
  406e3d:	lahf   
  406e3e:	pop    ecx
  406e3f:	cmp    DWORD PTR fs:[edi],esp
  406e42:	or     ch,BYTE PTR [ebx+0x7e841a05]
  406e48:	pop    ebp
  406e49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406e4a:	add    DWORD PTR [ecx],edi
  406e4c:	dec    ecx
  406e4d:	lock seta al
  406e51:	sub    eax,0x90833426
  406e56:	imul   esp,ebx,0xb619b2f1
  406e5c:	push   0xffffff9d
  406e5e:	or     BYTE PTR [edx-0x79],bl
  406e61:	jmp    0x5c82:0xc960e765
  406e68:	out    0x17,eax
  406e6a:	xor    edi,edx
  406e6c:	gs cs (bad) 
  406e6f:	call   0xce25:0x7f8775e4
  406e76:	sub    DWORD PTR [ebp+ebx*1+0x45],ecx
  406e7a:	inc    sp
  406e7c:	push   0x6f93fd67
  406e81:	jne    0x406e97
  406e83:	xor    edi,ebp
  406e85:	inc    edx
  406e86:	or     esi,DWORD PTR es:[edi-0x60]
  406e8a:	int3   
  406e8b:	sbb    BYTE PTR [esi+0x79],ch
  406e8e:	sbb    al,0x44
  406e90:	pop    esi
  406e91:	jl     0x406e7c
  406e93:	push   es
  406e94:	mov    ds:0xe87f81af,eax
  406e99:	pusha  
  406e9a:	adc    al,0x74
  406e9c:	mov    ecx,0x577d3f4a
  406ea1:	or     ebx,DWORD PTR [ebp-0x33]
  406ea4:	xchg   cl,ah
  406ea6:	xchg   ebx,eax
  406ea7:	dec    ebp
  406ea8:	mov    ah,bh
  406eaa:	sbb    edi,DWORD PTR [edi+0x3d]
  406ead:	jno    0x406f1c
  406eaf:	repz jle 0x406ec3
  406eb2:	dec    edx
  406eb3:	sub    DWORD PTR [ebx+0x52],0x26
  406eb7:	adc    DWORD PTR [ecx+0x51],0x36
  406ebb:	push   ecx
  406ebc:	push   edx
  406ebd:	pop    esi
  406ebe:	jecxz  0x406e5a
  406ec0:	sub    al,0x41
  406ec2:	out    dx,eax
  406ec3:	pop    ds
  406ec4:	dec    eax
  406ec5:	pop    es
  406ec6:	add    esp,edi
  406ec8:	inc    edi
  406ec9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406eca:	mov    ds:0x2dd9e48d,eax
  406ecf:	dec    esi
  406ed0:	jne    0x6f425938
  406ed6:	cdq    
  406ed7:	pop    esp
  406ed8:	inc    esi
  406ed9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406eda:	je     0x406f3c
  406edc:	stc    
  406edd:	in     al,0x6
  406edf:	cwde   
  406ee0:	pop    es
  406ee1:	jmp    0xaad6:0x31d27164
  406ee8:	pop    ebp
  406ee9:	mov    esi,0xf8cc4af8
  406eee:	sbb    DWORD PTR [edi+0x70],ecx
  406ef1:	rcl    DWORD PTR [esi-0x3d050ab3],0xc1
  406ef8:	das    
  406ef9:	mov    dl,0x8f
  406efb:	aaa    
  406efc:	cmp    BYTE PTR [ecx-0x5b],cl
  406eff:	ror    DWORD PTR [edx-0x20],0xf
  406f03:	mov    BYTE PTR [ebp+eiz*4+0x412843a1],cl
  406f0a:	mov    al,ds:0x823e79ba
  406f0f:	pusha  
  406f10:	repnz (bad) 
  406f12:	cmp    BYTE PTR [eax+0x7e],ah
  406f15:	in     ax,dx
  406f17:	inc    edi
  406f18:	popf   
  406f19:	scas   eax,DWORD PTR es:[edi]
  406f1a:	pop    ss
  406f1b:	push   esp
  406f1c:	aas    
  406f1d:	add    ebx,DWORD PTR [esp+edx*4+0x45]
  406f21:	lods   al,BYTE PTR ds:[esi]
  406f22:	xchg   esp,eax
  406f23:	push   0x4d42ba97
  406f28:	push   eax
  406f29:	outs   dx,BYTE PTR ds:[esi]
  406f2a:	outs   dx,DWORD PTR ds:[esi]
  406f2b:	jecxz  0x406eea
  406f2d:	add    dh,BYTE PTR [ebx]
  406f2f:	ss and eax,0xb11b40f1
  406f35:	mov    ebx,0xd0d6fec6
  406f3a:	mov    eax,0xb7d5e225
  406f3f:	jmp    0x406f27
  406f41:	arpl   WORD PTR [ebx+0x3782ecd4],ax
  406f47:	cli    
  406f48:	push   0x9f918a40
  406f4d:	clc    
  406f4e:	mov    bp,0xed5b
  406f52:	cmp    eax,0x58c3237d
  406f57:	jl     0x406f0e
  406f59:	inc    edi
  406f5a:	addr16 imul bl
  406f5d:	ins    BYTE PTR es:[edi],dx
  406f5e:	xchg   dl,ah
  406f60:	enter  0x51b5,0x7a
  406f64:	or     BYTE PTR [eax],cl
  406f66:	xor    eax,0xe0624756
  406f6b:	into   
  406f6c:	mov    dl,0xd8
  406f6e:	pop    esp
  406f6f:	inc    esp
  406f70:	cmp    al,BYTE PTR [eax+0x4cbf5562]
  406f76:	inc    esp
  406f77:	dec    edx
  406f78:	daa    
  406f79:	int    0x10
  406f7b:	mov    DWORD PTR [ebp+0x63],ebp
  406f7e:	adc    eax,0x3e803b61
  406f83:	aaa    
  406f84:	in     al,0x7a
  406f86:	mov    ah,0xf5
  406f88:	fld    TBYTE PTR [esi+ecx*4+0x2f]
  406f8c:	lock cmp DWORD PTR [edx-0x367b31f2],ebx
  406f93:	or     DWORD PTR [esi],ebx
  406f95:	xchg   esp,eax
  406f96:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  406f98:	pushf  
  406f99:	scas   eax,DWORD PTR es:[edi]
  406f9a:	fstp   st(7)
  406f9c:	adc    al,0xdb
  406f9e:	adc    DWORD PTR [ebx+0x45],ebp
  406fa1:	cmp    eax,0xbcea4380
  406fa6:	loope  0x406f72
  406fa8:	inc    ebx
  406fa9:	dec    edx
  406faa:	pop    ebx
  406fac:	pop    ebp
  406fad:	or     ebx,DWORD PTR [ecx-0x50]
  406fb0:	aaa    
  406fb1:	mov    cl,0x79
  406fb3:	pusha  
  406fb4:	dec    esp
  406fb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406fb6:	call   0x33f46c23
  406fbb:	daa    
  406fbc:	(bad)  
  406fbd:	std    
  406fbe:	push   ebp
  406fbf:	xor    eax,0xf221cabe
  406fc4:	repz cwde 
  406fc6:	add    esi,DWORD PTR [esi+0x70]
  406fc9:	jnp    0x407026
  406fcb:	mov    esp,0x3322f204
  406fd1:	sub    esp,esi
  406fd3:	call   0x4461:0xc849d14
  406fda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406fdb:	or     dl,bh
  406fdd:	enter  0xaafe,0x7e
  406fe1:	bound  edx,QWORD PTR [edi+0x10]
  406fe4:	add    cl,cl
  406fe6:	jmp    0xb001:0x8cb3ebe
  406fed:	cmp    al,0x9e
  406fef:	mov    ebx,0x4916ed19
  406ff4:	sub    DWORD PTR [ecx],edx
  406ff6:	or     eax,0x7190f374
  406ffb:	cmp    dl,ah
  406ffd:	ret    0x20df
  407000:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407001:	mov    ecx,0x93eb50f6
  407006:	popw   ds
  407008:	scas   al,BYTE PTR es:[edi]
  407009:	dec    esi
  40700a:	jp     0x40705f
  40700c:	sub    al,0x1f
  40700f:	xor    al,0x44
  407011:	push   0xffffffa1
  407013:	or     bh,bl
  407015:	and    ch,BYTE PTR [ebx-0x6bec98c5]
  40701b:	aaa    
  40701c:	and    al,0xee
  40701e:	repnz push ebp
  407020:	repnz fsub DWORD PTR [ebx+eax*8+0x4b]
  407025:	lahf   
  407026:	mov    eax,ds:0x87d323fa
  40702b:	dec    esp
  40702c:	inc    ecx
  40702d:	stos   DWORD PTR es:[edi],eax
  40702e:	push   ecx
  40702f:	add    BYTE PTR [edi+esi*1-0x17],bl
  407033:	call   0xab5dcd8f
  407038:	pop    edi
  407039:	mov    esi,0xde62b26c
  40703e:	sub    esp,DWORD PTR [edx+edx*2+0x27]
  407042:	cwde   
  407043:	and    eax,0xf486734b
  407048:	loope  0x40705e
  40704a:	sub    eax,0xeff4a7ff
  40704f:	test   eax,ebx
  407051:	aad    0x37
  407053:	outs   dx,DWORD PTR ds:[esi]
  407054:	and    al,0xdb
  407056:	pop    ss
  407057:	scas   eax,DWORD PTR es:[edi]
  407058:	imul   edi,DWORD PTR ds:[edx+0x3d],0xffffffb6
  40705d:	mov    eax,ds:0x919a0720
  407062:	sahf   
  407063:	xor    al,0x61
  407065:	pusha  
  407066:	inc    edi
  407067:	sbb    DWORD PTR [ecx],ebp
  407069:	out    0x66,al
  40706b:	pushf  
  40706c:	sub    al,0xe2
  40706e:	pop    ebx
  40706f:	(bad)  
  407070:	push   esp
  407071:	pop    edi
  407072:	xor    BYTE PTR [ecx-0x58],cl
  407075:	jp     0x4070ee
  407077:	dec    ebp
  407078:	xor    al,0xe8
  40707a:	pop    edx
  40707b:	jge    0x4070c1
  40707d:	cmp    eax,DWORD PTR [esi]
  40707f:	push   cs
  407080:	jno    0x4070c4
  407082:	nop
  407083:	push   0xac6388eb
  407088:	mov    eax,ds:0x2c5df4e1
  40708d:	pop    eax
  40708e:	dec    esp
  40708f:	test   ah,dh
  407091:	mov    edx,DWORD PTR [ebp+0x3a544048]
  407097:	cmc    
  407098:	into   
  407099:	mov    ds,WORD PTR [ebx]
  40709b:	stc    
  40709c:	jnp    0x407106
  40709e:	ja     0x407027
  4070a0:	jge    0x4070ea
  4070a2:	mov    ebp,0xbeb47ee8
  4070a7:	scas   al,BYTE PTR es:[edi]
  4070a8:	clc    
  4070a9:	out    dx,al
  4070aa:	dec    ebp
  4070ab:	test   BYTE PTR [eax+edi*2+0x5decdbe7],0xbc
  4070b3:	and    eax,0x28e48326
  4070b8:	shr    DWORD PTR [eax+0x112a33c4],0xe0
  4070bf:	inc    eax
  4070c0:	xchg   edx,eax
  4070c1:	xor    esp,DWORD PTR [ecx-0x30347876]
  4070c7:	jmp    0x407095
  4070c9:	xchg   edx,eax
  4070ca:	adc    al,0x23
  4070cc:	adc    BYTE PTR [edx],dl
  4070ce:	xchg   edi,eax
  4070cf:	dec    eax
  4070d0:	dec    ecx
  4070d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4070d2:	add    ebx,eax
  4070d4:	rcl    DWORD PTR [ebp+0xb],0x64
  4070d8:	test   eax,0x1609c03a
  4070dd:	push   eax
  4070de:	(bad)  [ebx]
  4070e0:	sbb    cl,BYTE PTR [ecx-0x328d1b56]
  4070e6:	add    cl,BYTE PTR [ebx+0x461af5e7]
  4070ec:	push   es
  4070ed:	daa    
  4070ee:	ds call 0x2d20:0x6659d907
  4070f6:	std    
  4070f7:	dec    esp
  4070f8:	leave  
  4070f9:	fsub   DWORD PTR [eax+0x64f096ad]
  4070ff:	test   DWORD PTR [ecx],esi
  407101:	xchg   esp,eax
  407102:	mov    WORD PTR [edx-0x1e],ds
  407105:	rol    DWORD PTR [ebx+0x5e],cl
  407108:	sti    
  407109:	inc    edi
  40710a:	aad    0xc5
  40710c:	or     al,0x61
  40710e:	gs xchg esp,eax
  407110:	mov    WORD PTR [esi+ebx*2+0x3a],gs
  407114:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407115:	inc    edx
  407116:	sbb    BYTE PTR [edx+0x28f7feef],al
  40711c:	lods   eax,DWORD PTR ds:[esi]
  40711d:	cmp    al,0x1f
  40711f:	pop    edi
  407120:	sahf   
  407121:	mov    ebx,0x62f36ec5
  407126:	popa   
  407127:	push   esp
  407128:	mov    ds:0x56baac4b,al
  40712d:	cmp    esi,DWORD PTR [ebp+0x3cbd936c]
  407133:	(bad)  
  407134:	ins    DWORD PTR es:[edi],dx
  407135:	xchg   edi,eax
  407136:	out    0xd2,eax
  407138:	mov    cs,esp
  40713a:	loope  0x407192
  40713c:	fldcw  WORD PTR [ebp+0x3b]
  40713f:	jne    0x4071b6
  407141:	imul   edi,eax,0xb
  407144:	sub    bh,BYTE PTR [eax-0x39b2422c]
  40714a:	adc    al,0x90
  40714c:	imul   esp,ebx,0xffffff83
  40714f:	push   ebp
  407150:	mov    edx,0x1bb47fcf
  407155:	sub    DWORD PTR [esi+0x33],esp
  407158:	sbb    DWORD PTR [ecx+0x53fa75a4],eax
  40715e:	stc    
  40715f:	loopne 0x4071a8
  407161:	(bad)  
  407162:	sub    bl,BYTE PTR ds:0x9677e91d
  407168:	cmp    cl,bl
  40716a:	test   ecx,ebx
  40716c:	out    0xea,eax
  40716e:	push   edi
  40716f:	push   esp
  407170:	pop    es
  407171:	fdivr  QWORD PTR [ecx-0x63]
  407174:	mov    al,ds:0x69dba907
  407179:	(bad)
  40717d:	xchg   DWORD PTR [eax+ebp*4+0x31],esi
  407181:	xchg   esp,eax
  407182:	xor    ch,al
  407184:	sti    
  407185:	div    eax
  407187:	sub    BYTE PTR [edi],dh
  407189:	repz daa 
  40718b:	push   edi
  40718c:	ins    BYTE PTR es:[edi],dx
  40718d:	popf   
  40718e:	aaa    
  40718f:	ror    ebx,1
  407191:	mov    bh,0x56
  407193:	and    BYTE PTR [esi+eax*2-0x5],dl
  407197:	add    ecx,ecx
  407199:	adc    BYTE PTR [ebp+0x50],ch
  40719c:	into   
  40719d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40719e:	pop    ss
  40719f:	pop    ecx
  4071a0:	in     al,dx
  4071a1:	and    DWORD PTR [esp+ecx*2],edx
  4071a4:	or     bl,bh
  4071a6:	inc    ecx
  4071a7:	mov    ebp,0x747a2e5c
  4071ac:	jmp    0x407162
  4071ae:	xlat   BYTE PTR ds:[ebx]
  4071af:	mov    dl,dh
  4071b1:	inc    esp
  4071b2:	(bad)  
  4071b3:	sub    eax,0x5a6aefac
  4071b8:	in     al,0x6e
  4071ba:	call   0x3995:0x51eedaa6
  4071c1:	sub    BYTE PTR [ecx],bh
  4071c3:	sahf   
  4071c4:	mov    ecx,0x7694f808
  4071c9:	xchg   edi,eax
  4071ca:	test   al,0x5c
  4071cc:	nop
  4071cd:	mov    al,ds:0xee7a60ab
  4071d2:	cmp    eax,0xa5dde448
  4071d7:	dec    ecx
  4071d8:	xor    eax,0x5c4015c3
  4071dd:	paddb  mm7,QWORD PTR [eax]
  4071e0:	int3   
  4071e1:	push   ss
  4071e2:	mov    esp,0xd72c0366
  4071e7:	xchg   edi,eax
  4071e8:	mov    bh,0xd0
  4071ea:	leave  
  4071eb:	fs dec ecx
  4071ed:	repnz das 
  4071ef:	sub    eax,ebx
  4071f1:	out    0xa0,eax
  4071f3:	xchg   ebx,eax
  4071f4:	mov    WORD PTR [ecx+0x611d4aac],cs
  4071fa:	inc    edi
  4071fb:	jmp    0x40726e
  4071fd:	repnz ds mov ebx,0x92959e42
  407204:	xor    eax,0x85e42e00
  407209:	add    DWORD PTR [ebx+0x5e33a9b],edi
  40720f:	test   al,0x89
  407211:	sub    eax,0x1d635207
  407216:	mov    cl,0x59
  407218:	dec    esp
  407219:	xchg   ecx,eax
  40721a:	jbe    0x4071d7
  40721c:	push   ebp
  40721d:	sbb    ebx,DWORD PTR cs:[ecx-0x23]
  407221:	sti    
  407222:	pop    ebp
  407223:	repnz pop esp
  407225:	sub    BYTE PTR [ebx],bl
  407227:	js     0x407263
  407229:	lods   al,BYTE PTR ds:[esi]
  40722a:	ds jge 0x407289
  40722d:	cmp    cl,BYTE PTR [edi]
  40722f:	mov    esi,DWORD PTR [esi-0x20d3610]
  407235:	lahf   
  407236:	bound  esp,QWORD PTR [eax-0x5c]
  407239:	bound  esp,QWORD PTR es:[eax+eiz*8]
  40723d:	popa   
  40723e:	sub    bh,cl
  407240:	jle    0x4071c2
  407242:	xor    al,0x71
  407244:	scas   eax,DWORD PTR es:[edi]
  407245:	mov    esp,DWORD PTR [ebx-0x13]
  407248:	sahf   
  407249:	neg    DWORD PTR [ebp+0x7d]
  40724c:	fisttp WORD PTR [ebx+0x2eecb036]
  407252:	mov    dh,0xc7
  407254:	or     cl,BYTE PTR [ecx+0x57]
  407257:	mov    edx,0xd025ffe6
  40725c:	cwde   
  40725d:	(bad)  
  40725e:	dec    edi
  40725f:	fidivr DWORD PTR [eax+0xa]
  407262:	jp     0x4071e4
  407264:	push   esp
  407265:	or     BYTE PTR [eax],bh
  407267:	iret   
  407268:	xor    ebp,DWORD PTR [edx+0x76]
  40726b:	xor    edi,DWORD PTR [esi+0x40]
  40726e:	std    
  40726f:	dec    ebx
  407270:	xchg   DWORD PTR [ebx],ecx
  407272:	push   ebx
  407273:	pusha  
  407274:	bound  edx,QWORD PTR [ecx+ebp*1+0x5c]
  407278:	pushf  
  407279:	mov    dh,0xa7
  40727b:	mov    ecx,0x8044aa34
  407280:	shl    DWORD PTR [eax],0x1a
  407283:	clc    
  407284:	ret    
  407285:	stc    
  407286:	cmp    eax,ebx
  407288:	adc    al,0x16
  40728a:	push   0xffffffd0
  40728c:	mov    ebx,0x3e88333f
  407291:	arpl   si,si
  407293:	add    BYTE PTR [esi-0xe936a47],bl
  407299:	call   0x4f4f:0xeb129a42
  4072a0:	stos   DWORD PTR es:[edi],eax
  4072a1:	imul   ebx,DWORD PTR [esp+eiz*4+0x268b8e2e],0xf66ad209
  4072ac:	or     eax,0xb1d9b7aa
  4072b1:	stos   BYTE PTR es:[edi],al
  4072b2:	sub    eax,0x2476930d
  4072b7:	mov    WORD PTR [edx],ds
  4072b9:	dec    ebx
  4072ba:	jl     0x40726b
  4072bc:	adc    eax,DWORD PTR [ecx-0xc89ea48]
  4072c2:	and    DWORD PTR [edx-0x6e],0xffffff87
  4072c6:	clc    
  4072c7:	ins    DWORD PTR es:[edi],dx
  4072c8:	dec    eax
  4072c9:	inc    ebx
  4072ca:	dec    eax
  4072cb:	(bad)  
  4072cc:	cli    
  4072cd:	ret    0x449c
  4072d0:	imul   ebx
  4072d2:	pop    ebx
  4072d3:	and    edi,DWORD PTR [ebx-0x5b]
  4072d6:	out    0x9a,eax
  4072d8:	mov    edi,0xa2454c35
  4072dd:	adc    ch,al
  4072df:	push   edx
  4072e0:	dec    edx
  4072e1:	leave  
  4072e2:	xchg   ebp,eax
  4072e3:	icebp  
  4072e4:	add    esi,DWORD PTR [ebp-0x29360729]
  4072ea:	arpl   WORD PTR [eax-0x49],dx
  4072ed:	adc    eax,0xa892ba9b
  4072f2:	sbb    al,0x51
  4072f4:	push   ebp
  4072f5:	mov    dl,0x52
  4072f7:	jbe    0x40728b
  4072f9:	mov    dl,0x2c
  4072fb:	(bad)  
  4072fc:	cmp    al,cl
  4072fe:	mov    al,ds:0xf3540750
  407303:	mov    eax,0x2bfeb05f
  407308:	and    al,0x58
  40730a:	fistp  QWORD PTR ds:0x3aedf5b1
  407310:	pop    ss
  407311:	in     al,dx
  407312:	retf   0xdb23
  407315:	xchg   DWORD PTR [ebp-0x5b],edx
  407318:	add    bl,BYTE PTR [edx-0x682c4024]
  40731e:	mov    dh,0x3e
  407320:	ret    
  407321:	inc    ecx
  407322:	imul   esi,DWORD PTR [edi-0x65fc472b],0x32465791
  40732c:	in     al,dx
  40732d:	xchg   esp,eax
  40732e:	test   al,0x77
  407330:	and    BYTE PTR [ebp+0x60d21fb7],ah
  407336:	addr16 clc 
  407338:	stos   BYTE PTR es:[edi],al
  407339:	fwait
  40733a:	dec    esp
  40733b:	jns    0x40732b
  40733d:	or     eax,DWORD PTR [ebp-0x4922a465]
  407343:	pop    ecx
  407345:	(bad)  
  407347:	les    ecx,FWORD PTR [edx-0x570c2cfb]
  40734d:	fisub  DWORD PTR [ebx-0x2c84f81b]
  407353:	loope  0x40732a
  407355:	or     BYTE PTR [eax-0x78a6bc98],ah
  40735b:	test   al,0x90
  40735d:	dec    esp
  40735e:	cmp    eax,0x5ef7c1f8
  407363:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407364:	fistp  QWORD PTR [eax-0x57e03f11]
  40736a:	jg     0x4072f1
  40736c:	sbb    ebx,DWORD PTR [ebx+0x47]
  40736f:	add    eax,0x88283724
  407374:	lahf   
  407375:	daa    
  407376:	xor    al,0x4e
  407378:	cwde   
  407379:	cmp    eax,0x5f6a9699
  40737e:	enter  0xb15a,0xd
  407382:	cmp    DWORD PTR [ebp-0x621f7b50],edi
  407388:	adc    ebp,edx
  40738a:	fxch   st(1)
  40738c:	sbb    eax,0xcf422816
  407391:	jns    0x40740f
  407393:	gs xchg edi,eax
  407395:	sar    BYTE PTR [eax],1
  407397:	add    DWORD PTR [ecx+0x7f],esp
  40739a:	xor    eax,0x8e3ac05f
  40739f:	les    edx,FWORD PTR [edx-0x1575fec4]
  4073a5:	and    eax,0xd8fa5d90
  4073aa:	jle    0x4073d3
  4073ac:	dec    ebp
  4073ad:	aam    0x1e
  4073af:	or     al,0x58
  4073b1:	add    BYTE PTR [ebx+0xf],al
  4073b4:	bnd jmp 0x4073f9
  4073b7:	or     al,0xfd
  4073b9:	sub    ecx,edi
  4073bb:	cmp    ecx,esp
  4073bd:	ja     0x407396
  4073bf:	or     cl,bl
  4073c1:	add    eax,0x606d6c67
  4073c6:	cmc    
  4073c7:	sub    edx,DWORD PTR [di]
  4073ca:	es xchg edi,eax
  4073cc:	mov    ecx,0x6e6178ae
  4073d1:	push   ebx
  4073d2:	push   es
  4073d3:	sub    al,0x5d
  4073d5:	sub    bh,BYTE PTR [edi]
  4073d7:	(bad)  [eax]
  4073d9:	push   0xffffffde
  4073db:	adc    al,0x6b
  4073dd:	fadd   DWORD PTR [ebx+0x575a404b]
  4073e3:	sbb    DWORD PTR [edx],edx
  4073e5:	popfw  
  4073e7:	inc    esi
  4073e8:	cli    
  4073e9:	les    esp,FWORD PTR [ecx]
  4073eb:	loopne 0x407404
  4073ed:	mov    bh,ah
  4073ef:	es in  al,0x2f
  4073f2:	add    al,0xdf
  4073f4:	xor    al,0xf1
  4073f6:	shl    DWORD PTR [esi+0x2a595648],0x92
  4073fd:	repnz inc esi
  4073ff:	(bad)  
  407400:	xchg   esp,eax
  407401:	call   0x9822efdc
  407406:	retf   
  407407:	pop    ecx
  407408:	or     al,0x3d
  40740a:	push   ebp
  40740b:	popa   
  40740c:	push   ebp
  40740d:	jbe    0x407391
  40740f:	nop
  407410:	sar    ch,0x53
  407413:	sbb    BYTE PTR [ebp+0x1a85a1dc],ch
  407419:	xor    BYTE PTR [edi+ebx*2],dl
  40741c:	mov    ds:0xf5f80a30,eax
  407421:	cmc    
  407422:	cmp    DWORD PTR [edi-0xa],eax
  407425:	mov    eax,ds:0x4678a9f0
  40742a:	mov    al,0x4
  40742c:	and    eax,0x6f529be6
  407431:	repz and ecx,esp
  407434:	sub    ecx,DWORD PTR [esi+0x54]
  407437:	mov    ecx,0x6a463890
  40743c:	add    eax,DWORD PTR [ecx+0x58ba382a]
  407442:	fwait
  407443:	das    
  407444:	and    DWORD PTR [esi],edi
  407446:	repz add dl,BYTE PTR [edx+0x19]
  40744a:	enter  0x8eb8,0x39
  40744e:	jg     0x407473
  407450:	cmp    eax,0xdb696daf
  407455:	(bad)  
  407456:	mov    ah,cl
  407458:	lds    ax,DWORD PTR [eax+edi*1+0x7b6c588]
  407460:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407461:	mov    ah,0xfa
  407463:	neg    DWORD PTR [eax+edi*4+0x1e]
  407467:	stos   BYTE PTR es:[edi],al
  407468:	adc    bl,dh
  40746a:	les    ecx,FWORD PTR [edi]
  40746c:	cmc    
  40746d:	mov    ds:0xc619a4be,eax
  407472:	ins    DWORD PTR es:[edi],dx
  407473:	jmp    0x407402
  407475:	lahf   
  407476:	stos   BYTE PTR es:[edi],al
  407477:	mov    ds:0x459a36b7,al
  40747c:	int3   
  40747d:	stc    
  40747e:	loopne 0x407465
  407480:	mov    ebx,0xded25f4
  407485:	fwait
  407486:	test   DWORD PTR [ebp-0x2e],eax
  407489:	sub    al,0xe1
  40748b:	jmp    0x4074b9
  40748d:	or     esp,esp
  40748f:	jbe    0x407414
  407491:	iret   
  407492:	cmp    al,0xf2
  407494:	out    dx,al
  407495:	mov    ebp,DWORD PTR [ecx+0x61]
  407498:	test   esp,ecx
  40749a:	lds    eax,FWORD PTR [eax-0x7a]
  40749d:	xchg   ebx,edi
  40749f:	dec    edx
  4074a0:	xchg   ebx,ebx
  4074a2:	cmp    BYTE PTR [edx+esi*2-0x1a79d92b],dh
  4074a9:	mov    cl,0xd9
  4074ab:	fs xor esp,ebp
  4074ae:	out    dx,al
  4074af:	mov    eax,0x988e5c26
  4074b5:	dec    edi
  4074b6:	stos   BYTE PTR es:[edi],al
  4074b7:	push   ebx
  4074b8:	or     BYTE PTR [ecx+0x78536bfd],dh
  4074be:	mov    esi,0x2492b1dc
  4074c3:	adc    al,0xc
  4074c5:	mov    al,BYTE PTR [ebx-0x8]
  4074c8:	(bad)  
  4074c9:	cld    
  4074ca:	add    eax,0xfbecd305
  4074cf:	data16 sbb ch,BYTE PTR [eax]
  4074d2:	in     eax,dx
  4074d3:	lea    ecx,[eax-0x15]
  4074d6:	and    edx,esi
  4074d8:	add    BYTE PTR [ebx],0xb9
  4074db:	ja     0x407462
  4074dd:	pop    ds
  4074de:	fsub   st,st(7)
  4074e0:	and    esi,DWORD PTR [esi+edx*2-0x1363601b]
  4074e7:	call   0x423e15f0
  4074ec:	loope  0x4074ed
  4074ee:	fs jns 0x4074be
  4074f1:	and    DWORD PTR [ebp-0x54c112f9],ebx
  4074f7:	sub    al,0xa1
  4074f9:	test   eax,0x5d80f32c
  4074fe:	frstor [ecx]
  407500:	adc    al,0x3a
  407502:	cmp    eax,0x20b72389
  407507:	xchg   esp,eax
  407508:	dec    edi
  407509:	jne    0x407589
  40750b:	inc    ebp
  40750c:	mov    edi,0xa0b728d6
  407511:	inc    ecx
  407512:	adc    eax,0x72
  407515:	int    0xae
  407517:	jb     0x4074f9
  407519:	xchg   esi,eax
  40751a:	mov    dh,0xd8
  40751c:	mov    ss,WORD PTR [ebp+0x55]
  40751f:	push   eax
  407520:	hlt    
  407521:	jecxz  0x4074ab
  407523:	mov    esp,0x94ad1789
  407528:	and    esp,DWORD PTR [ecx-0x39]
  40752b:	dec    ebp
  40752c:	shl    DWORD PTR [ebx-0x71],0x8f
  407530:	stc    
  407531:	xchg   esp,eax
  407532:	ins    DWORD PTR es:[edi],dx
  407533:	popa   
  407534:	jbe    0x4075a8
  407536:	pop    ebp
  407537:	call   0x9a01:0x6fae7b81
  40753e:	repnz mov ebp,0xbc2a1738
  407544:	mov    DWORD PTR [ebx],ebp
  407546:	mov    al,ds:0x2ad5e5be
  40754b:	lea    esi,[esi-0x28]
  40754e:	mov    dh,0xd2
  407550:	out    0x91,al
  407552:	inc    ebp
  407553:	lea    ebx,[ebx]
  407555:	mov    al,0x90
  407557:	out    0xb2,eax
  407559:	mov    edi,0xf1f64a05
  40755e:	sti    
  40755f:	and    esp,eax
  407561:	pop    edx
  407562:	aad    0x4e
  407564:	loopne 0x4074e6
  407566:	mov    esp,0xdfc5e0bb
  40756b:	bound  ecx,QWORD PTR [eax-0x1955ebec]
  407571:	push   ecx
  407572:	pop    edi
  407573:	adc    ax,0x347b
  407577:	out    dx,al
  407578:	pop    ecx
  407579:	add    DWORD PTR [edi],eax
  40757b:	pop    edi
  40757c:	and    eax,0xfe5b2b81
  407581:	clc    
  407582:	out    dx,al
  407583:	or     al,0x45
  407585:	ja     0x4075a5
  407587:	and    cl,dl
  407589:	enter  0x8d97,0xad
  40758d:	xor    DWORD PTR [ebx],ebx
  40758f:	mov    edx,0x90f575d4
  407594:	dec    esp
  407595:	mov    al,0x9
  407597:	out    dx,eax
  407598:	cmp    al,0xb6
  40759a:	mov    al,ds:0xb8a786a2
  40759f:	push   edi
  4075a0:	sub    bh,BYTE PTR [ecx+0x31]
  4075a3:	into   
  4075a4:	fidiv  DWORD PTR [ecx]
  4075a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4075a7:	mov    ch,0x17
  4075a9:	mov    ecx,DWORD PTR [esi-0x70e64367]
  4075af:	xchg   esi,eax
  4075b0:	xor    edx,DWORD PTR [esi]
  4075b2:	mov    WORD PTR [ebx],?
  4075b4:	mov    ds:0xe030a985,eax
  4075b9:	jno    0x407583
  4075bb:	shr    dl,cl
  4075bd:	or     al,0x47
  4075bf:	aas    
  4075c0:	scas   eax,DWORD PTR es:[edi]
  4075c1:	jp     0x4075ae
  4075c3:	push   es
  4075c4:	pop    ds
  4075c5:	retf   
  4075c6:	push   es
  4075c7:	inc    edi
  4075c8:	sub    DWORD PTR [eax],0x1276d274
  4075ce:	push   ebx
  4075cf:	fidivr DWORD PTR [eax-0x3f]
  4075d2:	ja     0x407636
  4075d4:	push   edx
  4075d5:	leave  
  4075d6:	jle    0x4075e6
  4075d8:	jae    0x407561
  4075da:	cld    
  4075db:	and    BYTE PTR [ecx+0x79c980a],0x3f
  4075e2:	add    DWORD PTR [edi+0x4b],ebp
  4075e5:	gs jne 0x407626
  4075e8:	out    0xfc,al
  4075ea:	jne    0x407608
  4075ec:	xor    dh,BYTE PTR [eax-0x2c4fa6d6]
  4075f2:	test   eax,0x6c61f0a8
  4075f7:	adc    eax,DWORD PTR [edx+0x34d35b49]
  4075fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4075fe:	push   0x96823c06
  407603:	addr16 in eax,0x1f
  407606:	sub    al,0xf9
  407608:	popf   
  407609:	sar    ebp,cl
  40760b:	jecxz  0x40759d
  40760d:	dec    ebp
  40760e:	lock stos DWORD PTR es:[edi],eax
  407610:	(bad)  
  407611:	mov    cl,0x1b
  407613:	leave  
  407614:	jne    0x40764e
  407616:	mov    DWORD PTR [edi-0x248ccea0],edx
  40761c:	mov    ecx,0x9ba13328
  407621:	shr    BYTE PTR [ecx-0x34],0x5f
  407625:	popf   
  407626:	mov    ch,0x69
  407628:	dec    ecx
  407629:	sahf   
  40762a:	stos   BYTE PTR es:[edi],al
  40762b:	outs   dx,DWORD PTR ds:[esi]
  40762c:	popf   
  40762d:	sar    DWORD PTR [edi+0xd0125e1],cl
  407633:	js     0x407633
  407635:	cld    
  407636:	int3   
  407637:	aad    0xe6
  407639:	out    0xeb,al
  40763b:	sub    BYTE PTR [edi+ebx*4],dl
  40763e:	pop    ecx
  40763f:	prefetch BYTE PTR ds:0x7932f954
  407646:	imul   ebp,DWORD PTR [edx*8+0x5600e2f1],0x42
  40764e:	dec    edx
  40764f:	push   0xe888e290
  407654:	ror    esi,1
  407656:	popa   
  407657:	test   DWORD PTR [edi+eiz*8],eax
  40765a:	cmp    al,0xd
  40765c:	loope  0x4076d7
  40765e:	sar    DWORD PTR [edi-0x16],0xb0
  407662:	sbb    DWORD PTR [edi+0x48],eax
  407665:	enter  0x9200,0xff
  407669:	mov    esi,0x2f42ad4
  40766e:	mov    ds:0xee649b10,al
  407673:	or     al,BYTE PTR [edx+ebx*2-0x1b]
  407677:	(bad)  
  407678:	sub    edx,DWORD PTR [eax-0x62d7a70c]
  40767e:	pop    ss
  40767f:	(bad)  
  407680:	cmp    esi,edi
  407682:	cdq    
  407683:	not    DWORD PTR [esi-0x70]
  407686:	imul   eax,DWORD PTR [edx-0x4144e21f],0x9c62f4dd
  407690:	push   ebx
  407691:	into   
  407692:	out    dx,eax
  407693:	repnz imul eax,DWORD PTR [edi],0xffffffc0
  407697:	jno    0x4076cf
  407699:	rol    bh,1
  40769b:	scas   eax,DWORD PTR es:[edi]
  40769c:	mov    ebx,0x4cd281c5
  4076a1:	nop
  4076a2:	popa   
  4076a3:	ins    BYTE PTR es:[edi],dx
  4076a4:	sbb    ecx,esp
  4076a6:	test   DWORD PTR ss:[edx+edi*4-0x59],eax
  4076ab:	cmp    BYTE PTR [ecx-0x47],dh
  4076ae:	sbb    BYTE PTR [ecx+0x1ed97f17],ch
  4076b4:	mov    BYTE PTR [edi],dl
  4076b6:	sti    
  4076b7:	mov    ?,WORD PTR [edi+0x1a]
  4076ba:	or     BYTE PTR [ebx],dh
  4076bc:	jle    0x407687
  4076be:	cmp    BYTE PTR [esi-0x80],dl
  4076c1:	xor    DWORD PTR [eax+0x7b7758ed],edi
  4076c7:	and    al,BYTE PTR [eax]
  4076c9:	mov    esi,0x3f38bd93
  4076ce:	push   ss
  4076cf:	psubusw mm7,QWORD PTR [ecx+0x1886b03d]
  4076d6:	fnsave [esi]
  4076d8:	mov    edi,0x37c8b5d0
  4076dd:	sbb    DWORD PTR fs:[edx+0x7b],0xfec742a5
  4076e5:	loopne 0x407724
  4076e7:	add    bl,BYTE PTR [ecx]
  4076e9:	dec    edi
  4076ea:	scas   al,BYTE PTR es:[edi]
  4076eb:	fwait
  4076ec:	jmp    0x4076a5
  4076ee:	out    dx,eax
  4076ef:	int3   
  4076f0:	out    0xd3,eax
  4076f2:	fnsave [edi-0x255f85ea]
  4076f8:	push   0x1bbfb2d1
  4076fd:	popf   
  4076fe:	adc    edi,eax
  407700:	stos   BYTE PTR es:[edi],al
  407701:	das    
  407702:	xor    dh,BYTE PTR [ebp+0x78]
  407705:	push   ebp
  407706:	sti    
  407707:	icebp  
  407708:	or     bl,BYTE PTR [esi-0x53d6ee77]
  40770e:	jl     0x407750
  407710:	jno    0x4076d7
  407712:	rcr    DWORD PTR [ebx+esi*1-0x66],cl
  407716:	mov    ecx,0x6882d915
  40771b:	jg     0x40776f
  40771d:	cmp    eax,0x43596a9c
  407722:	xlat   BYTE PTR ds:[ebx]
  407723:	mov    bh,0x3b
  407725:	sbb    edi,DWORD PTR [ebx+0x5b]
  407728:	xchg   DWORD PTR [edx+0x344dc541],ebx
  40772e:	mov    ebp,0xd4a5431
  407733:	cli    
  407734:	call   0xdaa96f8
  407739:	call   0xf4478438
  40773e:	fwait
  40773f:	imul   eax,DWORD PTR [edx-0x51],0xffffffc9
  407743:	ret    0x7a65
  407746:	out    dx,eax
  407747:	je     0x407792
  407749:	lock mov bl,0x8
  40774c:	lds    esi,FWORD PTR [esi]
  40774e:	jb     0x407711
  407750:	shl    DWORD PTR [esi+0x60],1
  407753:	mov    bl,BYTE PTR [ebx+0x3bb5c125]
  407759:	retf   0xba46
  40775c:	dec    eax
  40775d:	mov    DWORD PTR [esi+0x3a50b5b7],edx
  407763:	jmp    0x5ca6c483
  407768:	out    dx,al
  407769:	repz sub BYTE PTR [esi],0x83
  40776d:	mov    al,0x4c
  40776f:	push   ds
  407770:	jp     0x4077bc
  407772:	out    dx,eax
  407773:	mov    edi,0xbd082e25
  407778:	repz push eax
  40777a:	or     BYTE PTR [edi+ebx*8-0x76],ah
  40777e:	jl     0x407743
  407780:	aaa    
  407781:	or     BYTE PTR [ecx-0x1e],bl
  407784:	pop    ebx
  407785:	and    ah,0x27
  407788:	adc    ah,BYTE PTR [ecx]
  40778a:	mov    ah,0x46
  40778c:	push   esi
  40778d:	and    DWORD PTR [esi+0x47ca827b],edx
  407793:	loopne 0x407729
  407795:	mov    edx,DWORD PTR [edx+0x7e]
  407798:	fadd   DWORD PTR [ebp-0x5a]
  40779b:	push   edi
  40779c:	pushf  
  40779d:	sbb    dh,BYTE PTR [esi]
  40779f:	repnz push esi
  4077a1:	pop    ds
  4077a2:	push   ds
  4077a3:	pop    ecx
  4077a4:	pushf  
  4077a5:	adc    DWORD PTR [ecx+0x439e8c39],esp
  4077ab:	xlat   BYTE PTR ds:[ebx]
  4077ac:	cli    
  4077ad:	fimul  WORD PTR [edi]
  4077af:	sub    al,0xb3
  4077b1:	sbb    BYTE PTR [ecx+0x36588f38],ch
  4077b7:	lock fwait
  4077b9:	adc    DWORD PTR [ebx-0x2f3b3a0a],esi
  4077bf:	stc    
  4077c0:	aas    
  4077c1:	loopne 0x4077b9
  4077c3:	sti    
  4077c4:	mov    ds:0x72dfac33,eax
  4077c9:	cdq    
  4077ca:	sub    ch,BYTE PTR [edi+0x41]
  4077cd:	xor    al,0x7a
  4077cf:	add    ecx,esi
  4077d1:	inc    ecx
  4077d2:	adc    BYTE PTR [ebx],bl
  4077d4:	call   0xe161:0x1ff8d501
  4077db:	or     al,0xe5
  4077dd:	mov    ch,BYTE PTR ds:0x84b25100
  4077e3:	inc    esp
  4077e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4077e5:	mov    cl,0x6a
  4077e7:	mov    edi,DWORD PTR [ebx+esi*8+0xd]
  4077eb:	mov    eax,DWORD PTR [edi-0x26c07fa]
  4077f1:	cs out dx,eax
  4077f3:	add    DWORD PTR [eax],ecx
  4077f5:	fcomp  QWORD PTR [ebx+0x1a]
  4077f8:	mov    al,0xb4
  4077fa:	lds    ebx,FWORD PTR [edi-0x422f251c]
  407800:	arpl   WORD PTR [edx-0x25],cx
  407803:	mov    al,0x50
  407805:	jmp    0x60ce:0x5dea0155
  40780c:	and    eax,0xa1e81643
  407811:	mov    ch,0xb6
  407813:	jb     0x407829
  407815:	ficom  DWORD PTR [esi+0x20e2cde2]
  40781b:	in     eax,0xf3
  40781d:	sbb    dh,BYTE PTR ds:0xd9a49906
  407823:	jmp    0x98c8:0x13c4e6a9
  40782a:	mov    dl,bh
  40782c:	add    ebp,ebx
  40782e:	and    BYTE PTR [edi],ah
  407830:	cmp    al,0x4f
  407832:	loop   0x4077bc
  407834:	fdivp  st(3),st
  407836:	xor    DWORD PTR [edi-0x73],edx
  407839:	push   esi
  40783a:	mov    dl,0x70
  40783c:	jmp    0x4689:0x6526c680
  407843:	xor    al,0xb8
  407845:	mov    DWORD PTR [ecx-0x1a],0x3a61efac
  40784c:	and    edx,ebx
  40784e:	int3   
  40784f:	(bad)  [edi-0x5c]
  407852:	fdivr  QWORD PTR [esi-0x595b7b3f]
  407858:	push   es
  407859:	(bad)  
  40785a:	je     0x4078c7
  40785c:	inc    ecx
  40785d:	popf   
  40785e:	and    al,0x5e
  407860:	push   esp
  407861:	mov    dl,0xb1
  407863:	cmp    al,0xd4
  407865:	in     eax,dx
  407866:	dec    edx
  407867:	arpl   bx,cx
  407869:	jne    0x407884
  40786b:	sub    al,0x75
  40786d:	cli    
  40786e:	adc    eax,0xea581797
  407873:	sar    DWORD PTR [edx-0x24],cl
  407876:	mov    bl,0x65
  407878:	les    esi,FWORD PTR [esi]
  40787a:	out    0xe2,eax
  40787c:	fisttp WORD PTR [ecx+0x12]
  40787f:	pop    es
  407880:	int3   
  407881:	dec    ebx
  407882:	in     al,0xbd
  407884:	sub    DWORD PTR [edi-0x36ce0f5c],esi
  40788a:	cmc    
  40788b:	test   BYTE PTR [ebp+0x9],dh
  40788e:	cwde   
  40788f:	mov    ebp,DWORD PTR [edi]
  407891:	nop
  407892:	mov    bl,0x10
  407894:	rol    ch,0x1a
  407897:	xor    eax,0x47749479
  40789c:	scas   eax,DWORD PTR es:[edi]
  40789d:	int    0xfd
  40789f:	push   edi
  4078a0:	ds add eax,0x68b7b6b4
  4078a6:	xor    bl,ah
  4078a8:	mov    ecx,0xcbf87ae3
  4078ad:	fs test ebp,0xeb35d284
  4078b4:	mov    cl,0x6e
  4078b6:	jecxz  0x407902
  4078b8:	dec    ebp
  4078b9:	rcl    BYTE PTR [edx-0x588e6233],1
  4078bf:	out    dx,al
  4078c0:	in     al,0xb9
  4078c2:	call   0x6834:0x8064f3cb
  4078c9:	and    BYTE PTR [eax-0x36340d00],0xbb
  4078d0:	jmp    DWORD PTR [edx*2-0x7e7e1159]
  4078d7:	xor    eax,0x896ef58c
  4078dc:	sub    eax,esp
  4078de:	mov    esi,0x921fdbf9
  4078e3:	and    BYTE PTR [esp+edi*4],bl
  4078e6:	call   0x9ece:0xfe98e310
  4078ed:	pop    esi
  4078ee:	mov    esp,0xa6f282f4
  4078f3:	ins    BYTE PTR es:[edi],dx
  4078f4:	jae    0x407897
  4078f6:	xor    esp,DWORD PTR ds:0xe1b65fdf
  4078fc:	push   ss
  4078fd:	mov    ah,BYTE PTR [esi]
  4078ff:	fisubr WORD PTR [edi+0x183fb003]
  407905:	enter  0x7455,0xf7
  407909:	sbb    al,0x13
  40790b:	stos   BYTE PTR es:[edi],al
  40790c:	jl     0x407987
  40790e:	or     BYTE PTR [ebx],al
  407910:	sub    ebx,edi
  407912:	pop    ebx
  407913:	inc    edx
  407914:	push   ecx
  407915:	neg    BYTE PTR [eax]
  407917:	(bad)  
  407918:	repz pop eax
  40791a:	push   ebp
  40791b:	mov    eax,0xe5a731f7
  407920:	inc    esp
  407921:	loope  0x4078e0
  407923:	lods   al,BYTE PTR ds:[esi]
  407924:	call   0xf510:0x614646ac
  40792b:	lock sahf 
  40792d:	and    eax,0x260f64da
  407932:	push   ebp
  407933:	(bad)  
  407934:	daa    
  407935:	das    
  407936:	push   0xf88d5f0f
  40793b:	xor    dh,BYTE PTR [esi+0x7d0cce99]
  407941:	rcl    BYTE PTR [edi+eiz*2],0x20
  407945:	int    0x1a
  407947:	push   edx
  407948:	dec    ebp
  407949:	lods   eax,DWORD PTR ds:[esi]
  40794a:	inc    eax
  40794b:	mov    dl,0x34
  40794d:	aad    0x62
  40794f:	jg     0x40793e
  407951:	adc    al,0x8f
  407953:	or     BYTE PTR [edx],0xb7
  407956:	bound  esi,QWORD PTR [eax+eax*8+0x5c6026b7]
  40795d:	repz xchg ebx,eax
  40795f:	cmp    edx,ebp
  407961:	hlt    
  407962:	in     al,dx
  407963:	out    dx,eax
  407964:	mov    ch,0x6e
  407966:	mov    edi,0x2ba7ca34
  40796b:	pusha  
  40796c:	xor    eax,0x98b9b3ad
  407971:	js     0x40793c
  407973:	jg     0x4079dd
  407975:	jnp    0x4079d1
  407977:	mov    ah,0xa
  407979:	adc    ah,BYTE PTR [ecx-0x44]
  40797c:	cld    
  40797d:	sbb    al,0xb6
  40797f:	shl    edx,cl
  407981:	dec    esp
  407982:	push   esi
  407983:	retf   0x38f4
  407986:	out    dx,al
  407987:	lahf   
  407988:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407989:	push   edi
  40798a:	cmp    edx,DWORD PTR [ebp-0x37b3c199]
  407990:	dec    ecx
  407991:	xchg   DWORD PTR [eax-0x48e2f112],esp
  407997:	pop    ds
  407998:	fild   QWORD PTR [ecx-0x71]
  40799b:	lahf   
  40799c:	sti    
  40799d:	pop    eax
  40799e:	push   edi
  40799f:	mul    BYTE PTR cs:[esi+0x7a]
  4079a3:	and    al,BYTE PTR [ecx]
  4079a5:	adc    al,0x39
  4079a7:	mul    DWORD PTR [esp+ebp*4+0x60]
  4079ab:	sbb    DWORD PTR [edx-0x63],esi
  4079ae:	icebp  
  4079af:	(bad)  
  4079b0:	int    0x35
  4079b2:	out    0x9c,al
  4079b4:	xor    dh,al
  4079b6:	test   al,0x1f
  4079b8:	aas    
  4079b9:	repz scas al,BYTE PTR es:[edi]
  4079bb:	and    DWORD PTR [eax],edi
  4079bd:	(bad)  
  4079be:	cld    
  4079bf:	test   al,0x4c
  4079c1:	fstp   TBYTE PTR [edi]
  4079c3:	adc    eax,0xbed6e0c
  4079c8:	test   eax,0x6523ae68
  4079cd:	lods   eax,DWORD PTR ds:[esi]
  4079ce:	lods   al,BYTE PTR ds:[esi]
  4079cf:	leave  
  4079d0:	repz adc bl,BYTE PTR [edi]
  4079d3:	dec    edi
  4079d4:	sub    eax,0xa58a0fec
  4079d9:	repnz and DWORD PTR [ecx+0x5891184c],0x4a
  4079e1:	leave  
  4079e2:	xor    DWORD PTR [ebx+0x20],edx
  4079e5:	adc    eax,0xf5e7ef1a
  4079ea:	lock out 0x34,al
  4079ed:	dec    esp
  4079ee:	pop    esi
  4079ef:	int    0x15
  4079f1:	in     eax,dx
  4079f2:	fsub   st(7),st
  4079f4:	call   0x7742d64
  4079f9:	inc    ebp
  4079fa:	add    DWORD PTR [bx+di],ebx
  4079fd:	mov    al,ds:0xd9421021
  407a02:	fwait
  407a03:	inc    esp
  407a04:	cmp    DWORD PTR [esp+esi*8],eax
  407a07:	xchg   ebx,eax
  407a08:	jne    0x407990
  407a0a:	jl     0x407a7a
  407a0c:	fs call 0xa543608e
  407a12:	bound  edx,QWORD PTR [edi-0x18979e1e]
  407a18:	dec    esi
  407a19:	mov    eax,ds:0xb51d26f5
  407a1e:	daa    
  407a1f:	pop    edx
  407a20:	and    ah,dl
  407a22:	pop    ds
  407a23:	stos   DWORD PTR es:[edi],eax
  407a24:	cmp    DWORD PTR [ebp*2-0x6edb9cb3],edi
  407a2b:	or     eax,0xc2ac38d4
  407a30:	sub    BYTE PTR [esi+0x54d5e47a],ch
  407a36:	push   cs
  407a37:	ins    DWORD PTR es:[edi],dx
  407a38:	int    0x7d
  407a3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407a3b:	aad    0x76
  407a3d:	cmp    edx,edi
  407a3f:	js     0x407a52
  407a41:	aad    0xff
  407a43:	lahf   
  407a44:	loopne 0x4079d1
  407a46:	dec    ebp
  407a47:	cld    
  407a48:	mov    edx,DWORD PTR [ebp-0x30]
  407a4b:	xor    ecx,ebx
  407a4d:	add    ecx,eax
  407a4f:	cmp    edx,ecx
  407a51:	je     0x407abe
  407a57:	lea    eax,[ebp-0x8]
  407a5a:	push   eax
  407a5b:	push   DWORD PTR [ebp-0x28]
  407a5e:	push   DWORD PTR [ebp+0xc]
  407a61:	call   0x40f238
  407a66:	mov    eax,0x3272dd
  407a6b:	mov    ecx,DWORD PTR [ebp-0x4]
  407a6e:	mov    edx,DWORD PTR [ebp-0x8]
  407a71:	xor    ecx,ebx
  407a73:	add    ecx,eax
  407a75:	cmp    edx,ecx
  407a77:	je     0x407a92
  407a7d:	mov    ecx,DWORD PTR [ebp-0x34]
  407a80:	movzx  ecx,WORD PTR [ecx+esi*2]
  407a84:	mov    edx,DWORD PTR [ebp-0x18]
  407a87:	mov    ecx,DWORD PTR [edx+ecx*4]
  407a8a:	mov    DWORD PTR [ebp-0x38],ecx
  407a8d:	jmp    0x4056db
  407a92:	mov    ecx,DWORD PTR [ebp-0x14]
  407a95:	xor    ecx,ebx
  407a97:	lea    esi,[esi+ecx*1+0x3272dd]
  407a9e:	jmp    0x40540c
  407aa3:	mov    eax,DWORD PTR [ebp-0x4]
  407aa6:	xor    eax,ebx
  407aa8:	add    eax,edi
  407aaa:	jmp    0x409f7a
  407aaf:	mov    eax,DWORD PTR [ebp-0x4]
  407ab2:	xor    eax,ebx
  407ab4:	add    eax,0x3272dd
  407ab9:	jmp    0x409f7a
  407abe:	mov    ecx,DWORD PTR [ebp-0x38]
  407ac1:	add    ecx,DWORD PTR [ebp+0x8]
  407ac4:	mov    DWORD PTR [ebp-0x10],ecx
  407ac7:	mov    ecx,DWORD PTR [ebp-0x1c]
  407aca:	test   ecx,ecx
  407acc:	je     0x409f05
  407ad2:	mov    DWORD PTR [ebp-0x20],0x0
  407ad9:	push   0x3
  407adb:	xor    edx,edx
  407add:	pop    edx
  407ade:	add    edx,0x8
  407ae1:	push   edx
  407ae2:	pop    ecx
  407ae3:	push   0x6
  407ae5:	dec    ecx
  407ae6:	pop    ebx
  407ae7:	dec    ebx
  407ae8:	xchg   ebx,ecx
  407aea:	sub    ebx,ecx
  407aec:	xchg   ebx,ecx
  407aee:	dec    ecx
  407aef:	mov    eax,DWORD PTR [ebp-0x1c]
  407af2:	imul   eax,ecx
  407af5:	sub    esp,eax
  407af7:	mov    DWORD PTR [ebp-0x20],esp
  407afa:	mov    eax,DWORD PTR [ebp-0x4]
  407afd:	mov    ecx,0x7510896
  407b02:	xor    eax,ecx
  407b04:	mov    edx,0x3272dd
  407b09:	add    eax,edx
  407b0b:	mov    DWORD PTR [ebp+0x8],eax
  407b0e:	mov    eax,DWORD PTR [ebp-0x14]
  407b11:	xor    eax,ecx
  407b13:	add    eax,edx
  407b15:	mov    edx,DWORD PTR [ebp+0x14]
  407b18:	jmp    0x409e70
  407b1d:	push   es
  407b1e:	or     DWORD PTR [esi],ebx
  407b20:	xchg   DWORD PTR [ecx],eax
  407b22:	xchg   DWORD PTR [ebx+0x7caff18b],ecx
  407b28:	xor    eax,0x6d544fa4
  407b2d:	nop
  407b2e:	and    BYTE PTR [edx+0x7a],bh
  407b31:	aaa    
  407b32:	pop    edi
  407b33:	jp     0x407baf
  407b35:	xchg   esp,eax
  407b36:	idiv   DWORD PTR [eax+0x53]
  407b39:	mov    ebp,edx
  407b3b:	nop
  407b3c:	xchg   ebp,eax
  407b3d:	mov    ah,BYTE PTR [ecx+0x1d]
  407b40:	inc    edi
  407b41:	mov    eax,0xc915525a
  407b46:	jno    0x407b78
  407b48:	adc    al,0x5d
  407b4a:	gs pop esp
  407b4c:	sbb    ecx,DWORD PTR [eax+0x6e]
  407b4f:	inc    esp
  407b50:	mov    dl,0x52
  407b52:	dec    edx
  407b53:	cmp    eax,0xa4b2ae28
  407b58:	adc    eax,0xb3720f6b
  407b5d:	add    BYTE PTR [ecx-0x39ead5ca],dl
  407b63:	jecxz  0x407b08
  407b65:	cmp    BYTE PTR [ebp-0x54f13d0],bl
  407b6b:	aaa    
  407b6c:	gs out 0x1,eax
  407b6f:	out    0x30,eax
  407b71:	or     BYTE PTR [edi+eiz*8+0x50],0xef
  407b76:	sbb    ebp,DWORD PTR [ecx-0x6a]
  407b79:	sbb    DWORD PTR [eax],edx
  407b7b:	jmp    0x4233:0xfb8a1842
  407b82:	iret   
  407b83:	mov    dl,0xd7
  407b85:	jae    0x407b2e
  407b87:	and    al,0x65
  407b89:	int    0x31
  407b8b:	adc    eax,0xc63fdecc
  407b90:	dec    ecx
  407b91:	outs   dx,DWORD PTR ds:[esi]
  407b92:	push   cs
  407b93:	clc    
  407b94:	leave  
  407b95:	and    BYTE PTR [edx],bl
  407b97:	test   DWORD PTR [edx+edi*1-0x1d],ebx
  407b9b:	lods   eax,DWORD PTR ds:[esi]
  407b9c:	push   0x7999d94e
  407ba1:	inc    edi
  407ba2:	dec    ebx
  407ba3:	add    DWORD PTR [edx],eax
  407ba5:	aam    0xda
  407ba7:	cmp    al,0x39
  407ba9:	dec    eax
  407baa:	mov    bl,0x71
  407bac:	sahf   
  407bad:	retf   
  407bae:	pop    ss
  407baf:	loope  0x407be5
  407bb1:	mov    ebp,0x963b81e7
  407bb6:	setg   ch
  407bb9:	mov    edx,0xb705e385
  407bbe:	leave  
  407bbf:	pushf  
  407bc0:	(bad)  
  407bc2:	sbb    BYTE PTR [ecx],bl
  407bc4:	in     al,dx
  407bc5:	dec    eax
  407bc6:	test   BYTE PTR [ecx],ah
  407bc8:	aam    0x26
  407bca:	cs dec edx
  407bcc:	and    esp,ebp
  407bce:	cmp    eax,0x722463dd
  407bd3:	fwait
  407bd4:	jae    0x407b86
  407bd6:	bound  ebp,QWORD PTR [edi+ebx*8-0x15d64eee]
  407bdd:	push   ebp
  407bde:	in     al,0x8
  407be0:	sub    edi,ebx
  407be2:	sub    dh,BYTE PTR [ebx-0x7e5ebc1f]
  407be8:	xchg   ecx,eax
  407be9:	or     BYTE PTR [ebx],ch
  407beb:	(bad)  
  407bec:	jp     0x407b89
  407bee:	out    dx,al
  407bef:	push   ds
  407bf0:	mov    al,0x40
  407bf2:	mov    dl,0x17
  407bf4:	shl    DWORD PTR [edi+ecx*2-0x21],1
  407bf8:	sbb    DWORD PTR [edx+0x7231eab6],edi
  407bfe:	jbe    0x407c76
  407c00:	outs   dx,BYTE PTR ds:[esi]
  407c01:	adc    BYTE PTR [esi],ah
  407c03:	xchg   edx,eax
  407c04:	sbb    edi,DWORD PTR [eax-0xa]
  407c07:	test   DWORD PTR [esi+0x70],ecx
  407c0a:	mov    BYTE PTR [edx+0x3cabd7e7],cl
  407c10:	fdivrp st(6),st
  407c12:	ds iret 
  407c14:	jne    0x407c33
  407c16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407c17:	imul   BYTE PTR [ecx+0xe83b7e6]
  407c1d:	xor    al,0xfd
  407c1f:	xchg   BYTE PTR [edx+ebp*1+0x5b],bh
  407c23:	into   
  407c24:	cmc    
  407c25:	push   ds
  407c26:	mov    esp,0x93cbab21
  407c2b:	mov    cl,0xc3
  407c2d:	inc    esp
  407c2e:	out    0x68,eax
  407c30:	xor    al,BYTE PTR [esp+esi*2+0x5c1af026]
  407c37:	cmp    BYTE PTR [esi],0x3b
  407c3a:	jle    0x407bd1
  407c3c:	inc    esp
  407c3d:	sbb    al,0xf3
  407c3f:	outs   dx,BYTE PTR ds:[esi]
  407c40:	mov    al,0xb5
  407c42:	jecxz  0x407c29
  407c44:	cmp    edx,DWORD PTR [ecx+0x9]
  407c47:	call   0x9d7d1f17
  407c4c:	and    edx,edx
  407c4e:	sub    DWORD PTR [edx],esp
  407c50:	jmp    0x1ede7725
  407c55:	lods   al,BYTE PTR ds:[esi]
  407c56:	mov    edx,0xd72ce7ca
  407c5b:	mov    edi,0xdb896486
  407c60:	and    al,0x8e
  407c62:	dec    esi
  407c63:	xchg   ecx,eax
  407c64:	fsubr  st,st(0)
  407c66:	popa   
  407c67:	mov    esp,0xbab96d7
  407c6c:	pop    edi
  407c6d:	xchg   esp,eax
  407c6e:	mov    ebp,0x91b0d602
  407c73:	stos   BYTE PTR es:[edi],al
  407c74:	sbb    esi,ecx
  407c76:	push   esi
  407c77:	ja     0x407c04
  407c79:	arpl   cx,sp
  407c7b:	test   DWORD PTR [edx+0x176944f5],0xe406df3e
  407c85:	xlat   BYTE PTR ds:[ebx]
  407c86:	out    0xd0,al
  407c88:	fnstsw WORD PTR [ebx+0x73cc8dcb]
  407c8e:	sub    DWORD PTR [ecx-0x59de05db],0xff791332
  407c98:	sbb    ebx,edi
  407c9a:	je     0x407cea
  407c9c:	mov    esi,0x2a417436
  407ca1:	mov    edi,0xc1efab2b
  407ca6:	jl     0x407cf0
  407ca8:	aam    0xde
  407caa:	pop    ebx
  407cab:	or     al,0x48
  407cad:	es test al,0xf4
  407cb0:	(bad)  
  407cb1:	pop    edi
  407cb2:	jns    0x407cd0
  407cb4:	ret    
  407cb5:	loopne 0x407c68
  407cb7:	inc    ebp
  407cb9:	mov    WORD PTR ds:0x559867dd,ss
  407cbf:	mov    bh,0x7c
  407cc1:	xchg   edx,eax
  407cc2:	(bad)  
  407cc3:	sbb    eax,0x97cad976
  407cc8:	xchg   edi,eax
  407cc9:	ins    BYTE PTR es:[edi],dx
  407cca:	popf   
  407ccb:	lods   al,BYTE PTR ds:[esi]
  407ccc:	push   es
  407ccd:	mov    al,0x1d
  407ccf:	lahf   
  407cd0:	sbb    dl,cl
  407cd2:	js     0x407cba
  407cd4:	adc    ch,bh
  407cd6:	push   ss
  407cd7:	or     al,0xb6
  407cd9:	fisttp DWORD PTR [esi-0x22e003c3]
  407cdf:	sbb    bl,BYTE PTR [edx+esi*8]
  407ce2:	push   ebx
  407ce3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407ce4:	loope  0x407c9e
  407ce6:	fisttp QWORD PTR ss:[edi-0x4e6fc4f3]
  407ced:	dec    ebp
  407cee:	inc    ebp
  407cef:	pop    ebp
  407cf0:	fidiv  WORD PTR [edi+0x4b]
  407cf3:	mov    esp,0xdd7a2211
  407cf8:	inc    edx
  407cf9:	fisub  DWORD PTR [ebx+0x6f628320]
  407cff:	jg     0x407ccc
  407d01:	sub    eax,0x6f468bac
  407d06:	mov    esi,0xc22c15d7
  407d0b:	gs mov dl,0xbc
  407d0e:	out    0x46,eax
  407d10:	(bad)  
  407d11:	fwait
  407d12:	mov    ds:0xa46e2d29,al
  407d17:	mov    eax,DWORD PTR [edi]
  407d19:	dec    ebx
  407d1a:	test   BYTE PTR [edx+0x2e],0x30
  407d1e:	mov    ds:0x1fbc74d8,al
  407d23:	ret    
  407d24:	jb     0x407d59
  407d26:	xor    BYTE PTR [edi+0x26fd7a7],al
  407d2c:	mov    edi,0xfca44083
  407d31:	in     al,dx
  407d32:	fdivr  DWORD PTR [esi-0x15]
  407d35:	cs repz or al,0xa4
  407d39:	retf   
  407d3a:	sbb    DWORD PTR [ecx+0x6d],edx
  407d3d:	or     ebp,DWORD PTR [edi+0x29ccb5db]
  407d43:	(bad)  
  407d44:	int3   
  407d45:	inc    esp
  407d46:	lds    esi,FWORD PTR [ecx]
  407d48:	lea    ebp,[esi+0x1e]
  407d4b:	outs   dx,DWORD PTR ds:[esi]
  407d4c:	nop
  407d4d:	mov    ebp,0xae595c50
  407d52:	push   ebp
  407d53:	in     al,dx
  407d54:	inc    edi
  407d55:	cmp    eax,0xf4c3078
  407d5a:	je     0x407d7c
  407d5c:	cmp    al,0x8d
  407d5e:	not    al
  407d60:	xor    BYTE PTR [esi],dh
  407d62:	fadd   QWORD PTR [ecx-0x144eeef7]
  407d68:	inc    ebp
  407d69:	or     edx,DWORD PTR [ebx+0x65f2d88f]
  407d6f:	xor    DWORD PTR [ecx-0xf222342],ecx
  407d75:	mov    BYTE PTR [edi-0x18d61df6],ah
  407d7b:	js     0x407dce
  407d7d:	lea    edx,[edi+edi*1-0x1648e87a]
  407d84:	mov    ds:0x1686c1e4,eax
  407d89:	cmp    BYTE PTR [edx+0x22048b8d],al
  407d8f:	rol    BYTE PTR [ebx],1
  407d91:	jb     0x407dcb
  407d93:	cmp    bh,dl
  407d95:	enter  0xfa1d,0x40
  407d99:	mov    eax,ds:0xceab22a3
  407d9e:	jnp    0x407d3f
  407da0:	clc    
  407da1:	xchg   edx,eax
  407da2:	cmp    eax,0x78acac73
  407da7:	addr16 push ecx
  407da9:	mov    al,ds:0xd1388286
  407dae:	or     BYTE PTR [ebp+edx*4+0x3],dl
  407db2:	add    esp,DWORD PTR [esi-0x5b]
  407db5:	xchg   esi,eax
  407db6:	leave  
  407db7:	xor    al,0x2a
  407db9:	jmp    0x407e1a
  407dbb:	fldcw  WORD PTR [eax+0x27]
  407dbe:	test   eax,0x2862e739
  407dc3:	mov    ds:0x1dbd3587,al
  407dc8:	add    BYTE PTR [ebp-0x3aea50f1],bh
  407dce:	aas    
  407dcf:	dec    ebx
  407dd0:	int    0xd1
  407dd2:	in     eax,dx
  407dd3:	out    0xf8,eax
  407dd5:	mov    WORD PTR [edx*1+0x143f9c3c],fs
  407ddc:	push   ebx
  407ddd:	adc    eax,0xf88aa6cb
  407de2:	xchg   edi,eax
  407de3:	out    dx,eax
  407de4:	std    
  407de5:	mov    DWORD PTR [ecx],eax
  407de7:	dec    esp
  407de8:	pop    edi
  407de9:	retf   0xb622
  407dec:	(bad)  
  407ded:	cs test al,0xc1
  407df0:	jp     0x407dc3
  407df2:	scas   al,BYTE PTR es:[edi]
  407df3:	clc    
  407df4:	mov    edx,0xc8d6415f
  407df9:	(bad)  
  407dfa:	jecxz  0x407d9e
  407dfc:	push   0x92bad5bb
  407e01:	call   0x984b:0xf2adc5a4
  407e08:	xchg   edx,eax
  407e09:	data16 jns 0x407e02
  407e0c:	cmp    eax,0xae74c101
  407e11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407e12:	std    
  407e13:	aam    0x77
  407e15:	cli    
  407e16:	daa    
  407e17:	jecxz  0x407e10
  407e19:	pushf  
  407e1a:	stos   BYTE PTR es:[edi],al
  407e1b:	(bad)  
  407e1c:	nop
  407e1d:	pop    es
  407e1e:	test   eax,0x735864f6
  407e23:	mov    ds:0x612746df,al
  407e28:	xlat   BYTE PTR ds:[ebx]
  407e29:	popf   
  407e2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407e2b:	cmp    eax,0xbceb4a1
  407e30:	jnp    0x407dcc
  407e32:	call   0x764f:0x21735c35
  407e39:	xchg   DWORD PTR [ebx-0x4ee7f1e7],edi
  407e3f:	push   cs
  407e40:	xlat   BYTE PTR ds:[ebx]
  407e41:	mov    al,ds:0xcdfaf623
  407e46:	repz retf 
  407e48:	or     eax,0x39049244
  407e4d:	jl     0x407e79
  407e4f:	ret    
  407e50:	aad    0x27
  407e52:	dec    esi
  407e53:	mov    cl,0x64
  407e55:	retf   0xe0c3
  407e58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407e59:	fld    QWORD PTR [esi-0x6f53c811]
  407e5f:	retf   0x8b51
  407e62:	dec    esp
  407e63:	add    eax,0x92b0b38e
  407e68:	stos   DWORD PTR es:[edi],eax
  407e69:	imul   ebx,DWORD PTR [esi-0x347082f0],0x7d
  407e70:	cmp    al,0xff
  407e72:	xchg   ebx,eax
  407e73:	xchg   ebp,eax
  407e74:	test   eax,0x292e2f6a
  407e79:	mov    ch,0x15
  407e7b:	inc    ecx
  407e7c:	and    dl,al
  407e7e:	mov    ds:0x7f7e0ec7,al
  407e83:	xor    al,0xee
  407e85:	aaa    
  407e86:	mov    cl,0x6f
  407e88:	xor    DWORD PTR ss:[edx],esp
  407e8b:	mov    ah,0xe9
  407e8d:	fimul  DWORD PTR [esi+0x29]
  407e90:	add    DWORD PTR [ebp-0x22],0x24
  407e94:	jnp    0x407e55
  407e96:	in     eax,0x56
  407e98:	cmc    
  407e99:	push   esi
  407e9a:	mov    ?,WORD PTR [edi-0x6a42b90d]
  407ea0:	in     eax,dx
  407ea1:	ror    bh,0x8f
  407ea4:	out    dx,al
  407ea5:	in     al,dx
  407ea6:	sub    eax,0xf3d4719e
  407eab:	hlt    
  407eac:	(bad)  
  407ead:	out    dx,eax
  407eae:	mov    dh,0x19
  407eb0:	aad    0xd9
  407eb2:	mov    bh,0xe2
  407eb4:	fwait
  407eb5:	mov    DWORD PTR [eax+0x67],esi
  407eb8:	sbb    DWORD PTR [ebp+0x34],ebp
  407ebb:	jge    0x407f26
  407ebd:	mov    ebp,0xc0fb3516
  407ec2:	jp     0x407ed0
  407ec4:	xor    ecx,edi
  407ec6:	push   ecx
  407ec7:	inc    esp
  407ec8:	bound  edx,QWORD PTR [eax+0x4e]
  407ecb:	inc    ebp
  407ecc:	(bad)  
  407ecd:	sbb    al,0x14
  407ecf:	hlt    
  407ed0:	add    eax,0x9f30bda6
  407ed5:	imul   esi,DWORD PTR [ecx-0x146f93f8],0x2b
  407edc:	pop    esi
  407edd:	mov    ebp,0xcba41bbf
  407ee2:	mov    esi,0x6a0cbc6e
  407ee7:	rcl    BYTE PTR [edx+0x61],0x7a
  407eeb:	jge    0x407f30
  407eed:	adc    al,0xdf
  407eef:	or     ecx,DWORD PTR [eax]
  407ef1:	and    ebp,DWORD PTR [edi]
  407ef3:	shr    DWORD PTR [edx],cl
  407ef5:	cmp    ah,al
  407ef7:	pop    ebp
  407ef8:	bound  edi,QWORD PTR [eax-0x32]
  407efb:	aad    0xa3
  407efd:	mov    al,0x97
  407eff:	dec    edi
  407f00:	(bad)  
  407f01:	cli    
  407f02:	test   eax,0x91536efe
  407f07:	cmp    bl,BYTE PTR [esi-0x50]
  407f0a:	xor    al,0xe
  407f0c:	push   ebx
  407f0d:	aaa    
  407f0e:	loop   0x407f5f
  407f10:	mov    bh,0x2c
  407f12:	inc    ebp
  407f13:	es jns 0x407f69
  407f16:	shl    bl,1
  407f18:	lods   eax,DWORD PTR ds:[esi]
  407f19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407f1a:	xor    al,0xd7
  407f1c:	or     al,0x57
  407f1e:	fcomp  st(6)
  407f20:	xlat   BYTE PTR ds:[ebx]
  407f21:	adc    eax,0xfa298686
  407f26:	scas   al,BYTE PTR es:[edi]
  407f27:	add    eax,edi
  407f29:	sub    esp,ebx
  407f2b:	in     eax,dx
  407f2c:	inc    edx
  407f2d:	pushf  
  407f2e:	shl    BYTE PTR [edx+0xf],1
  407f31:	mov    al,ds:0x1fc6ddd3
  407f36:	cdq    
  407f37:	lahf   
  407f38:	fbld   TBYTE PTR [eax]
  407f3a:	and    DWORD PTR [edi+0x299f943f],ebp
  407f40:	add    esp,DWORD PTR [edx]
  407f42:	(bad)
  407f45:	inc    edx
  407f46:	(bad)  
  407f47:	out    dx,eax
  407f48:	jg     0x407f0a
  407f4a:	scas   eax,DWORD PTR es:[edi]
  407f4b:	psubsw mm4,QWORD PTR [ebp-0x41c85f6d]
  407f52:	add    eax,0xb97f8b1b
  407f57:	mov    esi,0x16edbea3
  407f5c:	fwait
  407f5d:	jns    0x407f6b
  407f5f:	(bad)  
  407f60:	cmp    esp,DWORD PTR [edx-0x41]
  407f63:	add    dl,BYTE PTR [ebx+ebx*8+0x46]
  407f67:	in     eax,dx
  407f68:	imul   edi,DWORD PTR [ecx],0x6ff9804e
  407f6e:	es jmp 0xf964:0xa0765bb6
  407f76:	push   eax
  407f77:	jae    0x407f88
  407f79:	push   esi
  407f7a:	jle    0x407ff7
  407f7c:	inc    eax
  407f7d:	or     ebx,DWORD PTR ds:0xcb9cb309
  407f83:	sub    DWORD PTR [edx+0x31163277],ecx
  407f89:	inc    eax
  407f8a:	fldcw  WORD PTR [ebp-0x5a]
  407f8d:	xor    dl,ah
  407f8f:	mov    ebx,0x113f8705
  407f94:	adc    BYTE PTR [esi+0x34],0xee
  407f98:	aad    0xa7
  407f9a:	test   al,0x2e
  407f9c:	scas   al,BYTE PTR es:[edi]
  407f9d:	imul   edi,eax,0xadc342b8
  407fa3:	adc    dh,BYTE PTR ss:[edx+ebp*2]
  407fa7:	les    eax,FWORD PTR [ecx+0x16f96c1f]
  407fad:	(bad)  
  407fae:	sbb    bh,BYTE PTR [edi-0x2f]
  407fb1:	push   esi
  407fb2:	sub    al,0x43
  407fb4:	mov    WORD PTR [ecx-0x4a],?
  407fb7:	jmp    0x84f7:0xbdb682c4
  407fbe:	push   ebp
  407fbf:	mov    eax,0xf40510ab
  407fc4:	lods   al,BYTE PTR ds:[esi]
  407fc5:	lock xchg esp,eax
  407fc7:	pushf  
  407fc8:	push   ebx
  407fc9:	pop    ecx
  407fca:	jmp    0x31c72e21
  407fcf:	jns    0x407fbd
  407fd1:	cmp    eax,0xd0c6dd94
  407fd6:	les    edi,FWORD PTR [ecx+esi*1+0x56bdad7e]
  407fdd:	pop    ebp
  407fde:	fdivp  st(2),st
  407fe0:	mov    al,ds:0xea6989e4
  407fe5:	scas   al,BYTE PTR es:[edi]
  407fe6:	fsub   DWORD PTR [ebp-0x5d2afc03]
  407fec:	jg     0x408013
  407fee:	sbb    eax,0x32acde28
  407ff3:	fst    QWORD PTR [edx-0x60a444e1]
  407ff9:	mov    BYTE PTR [eax+0x44],al
  407ffc:	data16 jle 0x407fd0
  407fff:	sbb    BYTE PTR [edi],ah
  408001:	test   eax,0xa62819f1
  408006:	mov    cl,dl
  408008:	push   ss
  408009:	add    al,0x0
  40800b:	fbstp  TBYTE PTR [ebx-0x75]
  40800e:	shr    DWORD PTR [eax+0x5223be03],cl
  408014:	into   
  408015:	aad    0xc
  408017:	or     WORD PTR [ebp+0x3c],si
  40801b:	retf   
  40801c:	cs (bad) 
  40801e:	in     al,dx
  40801f:	xchg   ebx,eax
  408020:	mov    ds:0xa9714739,eax
  408025:	adc    ch,ah
  408027:	push   ecx
  408028:	dec    edx
  408029:	sbb    DWORD PTR [ecx-0x41],eax
  40802c:	bound  eax,QWORD PTR [ecx+0x5]
  40802f:	aaa    
  408030:	dec    esi
  408031:	rcl    bl,1
  408033:	pop    ecx
  408034:	sbb    bl,BYTE PTR ds:0x7917db54
  40803a:	ret    0x342c
  40803d:	add    ah,al
  40803f:	shl    BYTE PTR [edx+0x1ab3ce72],0x9b
  408046:	jmp    0x634b864b
  40804b:	call   0xda3c:0x3b268501
  408052:	jg     0x4080b9
  408054:	divps  xmm4,XMMWORD PTR [eax]
  408057:	ins    DWORD PTR es:[edi],dx
  408058:	xchg   esi,eax
  408059:	xor    BYTE PTR [ebp+0x60345adb],0x4b
  408060:	push   ecx
  408061:	call   0x310837ae
  408066:	scas   eax,DWORD PTR es:[edi]
  408067:	sbb    BYTE PTR [esp+eax*8-0x725b450],bh
  40806e:	sar    ebp,cl
  408070:	loop   0x408017
  408072:	adc    al,0x68
  408074:	xor    DWORD PTR [eax+0x4a],ebx
  408077:	sbb    eax,0xea4b08db
  40807c:	gs in  eax,0xda
  40807f:	test   al,0x51
  408081:	mov    esi,DWORD PTR [ecx+0x6abe3973]
  408087:	add    bh,BYTE PTR [ebx-0x7e0b12a9]
  40808d:	test   al,0xa1
  40808f:	sub    ah,cl
  408091:	nop
  408092:	lods   eax,DWORD PTR ds:[esi]
  408093:	fs fs mov cl,0xaa
  408097:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408098:	push   0xffffff8b
  40809a:	ds push ebp
  40809c:	out    dx,al
  40809d:	or     al,0x10
  40809f:	and    al,0x58
  4080a1:	(bad)
  4080a4:	mov    ds:0x764b9102,al
  4080a9:	mov    eax,0x9cf4500a
  4080ae:	jbe    0x40807a
  4080b0:	(bad)  
  4080b1:	frstor [ebx+0x1a]
  4080b4:	addr16 clc 
  4080b6:	je     0x4080d4
  4080b8:	push   ss
  4080b9:	jbe    0x4080d9
  4080bb:	arpl   WORD PTR [edi-0x1353fae7],bp
  4080c1:	(bad)  
  4080c2:	jmp    0xf80:0xf3a2a53f
  4080c9:	pop    esp
  4080ca:	mov    edi,0x994b1d97
  4080cf:	outs   dx,DWORD PTR gs:[esi]
  4080d1:	call   0x8951:0x72c53e0f
  4080d8:	mov    bl,0x30
  4080da:	and    BYTE PTR [eax-0xc],dl
  4080dd:	sub    ebx,DWORD PTR [edx+0x4b]
  4080e0:	mov    bl,BYTE PTR [edx]
  4080e2:	add    DWORD PTR [esp+edi*4],ecx
  4080e5:	and    DWORD PTR [ebp+esi*8+0x3cf80813],0x67
  4080ed:	push   ebp
  4080ee:	mov    ds:0x388c2269,eax
  4080f3:	loopne 0x4080c0
  4080f5:	mov    ebx,0xa0153a84
  4080fa:	add    al,0xcf
  4080fd:	loope  0x40809d
  4080ff:	dec    BYTE PTR [ebx]
  408101:	into   
  408102:	xchg   edi,eax
  408103:	std    
  408104:	scas   al,BYTE PTR es:[edi]
  408105:	jmp    0x8fab:0xff5ad023
  40810c:	xor    bh,dh
  40810e:	inc    eax
  40810f:	dec    ebx
  408110:	xlat   BYTE PTR ds:[ebx]
  408111:	das    
  408112:	xchg   ecx,eax
  408113:	or     bl,ah
  408115:	pop    edi
  408116:	pushf  
  408117:	sub    dl,BYTE PTR [eax]
  408119:	icebp  
  40811a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40811b:	sub    eax,0x72e4058
  408120:	dec    esi
  408121:	test   dl,ah
  408123:	mov    eax,ds:0x30d140a6
  408128:	scas   eax,DWORD PTR es:[di]
  40812a:	das    
  40812b:	fdivr  QWORD PTR [ebx]
  40812d:	mov    ds:0xea798ab1,al
  408132:	sbb    dh,dl
  408134:	rcr    DWORD PTR [ebx-0x72f1f50d],cl
  40813a:	inc    esi
  40813b:	nop
  40813c:	cmp    ch,0x3d
  40813f:	sbb    DWORD PTR [esp+esi*1],0x19a92f34
  408146:	(bad)  
  408147:	sbb    eax,0xea789b79
  40814c:	mov    cl,0x5e
  40814e:	push   esp
  40814f:	fimul  DWORD PTR [eax+0x69]
  408152:	sub    ebx,DWORD PTR [ebp+0xc5c4a48]
  408158:	xchg   ebx,eax
  408159:	scas   al,BYTE PTR es:[edi]
  40815a:	cwde   
  40815b:	sbb    DWORD PTR [eax+0x39],edx
  40815e:	jb     0x4080f6
  408160:	mov    edi,eax
  408162:	inc    ebp
  408163:	jo     0x40812b
  408165:	in     al,dx
  408166:	or     esi,DWORD PTR [esi]
  408168:	sbb    esi,DWORD PTR [eax+0x5180f9cd]
  40816e:	mov    edx,0x4a03becd
  408173:	(bad)  
  408174:	fadd   DWORD PTR [ebx-0x32]
  408177:	add    eax,DWORD PTR [edi-0x6494797d]
  40817d:	repnz inc edi
  40817f:	sub    DWORD PTR [esi],0x49
  408182:	sub    ah,dh
  408184:	js     0x408199
  408186:	pop    ecx
  408187:	test   cl,ah
  408189:	aam    0xb9
  40818b:	cs add al,dl
  40818e:	scas   al,BYTE PTR es:[edi]
  40818f:	int3   
  408190:	out    0xaf,al
  408192:	xor    ebx,ebp
  408194:	jp     0x4081e5
  408196:	int3   
  408197:	push   cs
  408198:	adc    eax,0x8608067f
  40819d:	(bad)  
  40819f:	sub    eax,0x65190b92
  4081a4:	not    cl
  4081a6:	inc    edx
  4081a7:	pop    ebp
  4081a8:	mov    ecx,?
  4081aa:	(bad)  
  4081ab:	retf   
  4081ac:	fbld   TBYTE PTR [edi+eiz*2]
  4081af:	fdiv   st(3),st
  4081b1:	repnz inc edi
  4081b3:	or     bh,BYTE PTR [edx+0x6c55870c]
  4081b9:	mov    cl,0x77
  4081bb:	mov    bh,0x96
  4081bd:	aaa    
  4081be:	das    
  4081bf:	fld    QWORD PTR [ebp+0x13f88986]
  4081c5:	cmc    
  4081c6:	jmp    0x4081d6
  4081c8:	push   edx
  4081c9:	mov    ds:0xc050d868,al
  4081ce:	scas   al,BYTE PTR es:[edi]
  4081cf:	aas    
  4081d0:	ficomp WORD PTR ds:0x70157910
  4081d6:	dec    ebx
  4081d7:	pop    esi
  4081d8:	mov    edx,0x4182707b
  4081dd:	out    dx,eax
  4081de:	lods   al,BYTE PTR ds:[esi]
  4081df:	pop    ecx
  4081e0:	and    BYTE PTR [edx-0x6b2f12c5],0x6c
  4081e7:	ins    DWORD PTR es:[edi],dx
  4081e8:	adc    DWORD PTR [edx+0x73],esi
  4081eb:	pushf  
  4081ec:	test   eax,0xda0b656
  4081f1:	repnz or bl,BYTE PTR [esi+0x0]
  4081f5:	repnz mov ecx,0x35725051
  4081fb:	(bad)  
  4081fc:	lds    ebp,FWORD PTR [eax+0x55]
  4081ff:	popa   
  408200:	les    ecx,FWORD PTR [edi+0x2a]
  408203:	mov    ecx,0x5506d236
  408208:	in     al,dx
  408209:	sahf   
  40820a:	aaa    
  40820b:	aam    0xf4
  40820d:	jnp    0x408239
  40820f:	in     eax,dx
  408210:	lahf   
  408211:	ret    0xc31e
  408214:	bound  esp,QWORD PTR [ebx-0x7861b771]
  40821a:	mov    bl,0xbe
  40821c:	push   edx
  40821d:	push   cs
  40821e:	repnz push ss
  408220:	jne    0x408223
  408222:	data16 into 
  408224:	mov    DWORD PTR [edi],edi
  408226:	pop    esi
  408227:	ss add al,0x52
  40822a:	iret   
  40822b:	ins    BYTE PTR es:[edi],dx
  40822c:	add    ch,BYTE PTR [ebx]
  40822e:	ret    0x2b20
  408231:	retf   0xacb5
  408234:	in     al,0x13
  408236:	lods   al,BYTE PTR ds:[esi]
  408237:	(bad)  
  408239:	fisubr DWORD PTR [eax+esi*1-0x15]
  40823d:	cmp    BYTE PTR [ebp-0x41],al
  408240:	repnz aas 
  408242:	mov    bh,0x5e
  408244:	adc    eax,0x5fcb84cc
  408249:	jl     0x408288
  40824b:	ins    BYTE PTR es:[edi],dx
  40824c:	mov    edi,ebx
  40824e:	dec    edx
  40824f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408250:	cld    
  408251:	repnz (bad) 
  408254:	rol    BYTE PTR [edi-0x2a],1
  408257:	int3   
  408258:	ds pop esi
  40825a:	ins    BYTE PTR es:[edi],dx
  40825b:	(bad)  
  40825c:	or     eax,0x29f6fa6e
  408261:	lods   eax,DWORD PTR ds:[esi]
  408262:	add    al,0xc6
  408264:	and    cl,BYTE PTR [ecx+ebp*1+0x6b19d9b9]
  40826b:	stos   BYTE PTR es:[edi],al
  40826c:	mov    eax,0x4e924ece
  408271:	sbb    eax,0xd66c8703
  408276:	mov    ds:0x9fc1f8be,al
  40827b:	sub    cl,BYTE PTR [esi]
  40827d:	xchg   ebx,eax
  40827e:	fldenv [ecx]
  408280:	out    dx,eax
  408281:	call   FWORD PTR [edi-0x60ab3715]
  408287:	repz into 
  408289:	mov    esp,0x5ba34e1
  40828e:	xchg   ch,dl
  408290:	jns    0x408228
  408292:	mov    DWORD PTR [edx+0x7c],edx
  408295:	xor    BYTE PTR [eax-0x69],bh
  408298:	push   edi
  408299:	mov    dl,0xed
  40829b:	push   ebx
  40829c:	imul   edi,DWORD PTR [edi+edx*1-0x68e409ad],0x1b
  4082a4:	adc    edi,DWORD PTR [ecx-0x2c4c676a]
  4082aa:	xchg   BYTE PTR [ecx],ah
  4082ac:	sbb    BYTE PTR [esp+eiz*2],bh
  4082af:	cdq    
  4082b0:	mov    al,0x4d
  4082b2:	ins    DWORD PTR es:[edi],dx
  4082b3:	push   0xfe88d5a1
  4082b8:	mov    ds:0x69e66f0c,al
  4082bd:	aam    0xa4
  4082bf:	psrlq  mm5,QWORD PTR ds:0x98baf6e3
  4082c6:	and    bl,BYTE PTR [edi+0x1e]
  4082c9:	add    DWORD PTR [ebp-0x71],edi
  4082cc:	pop    edx
  4082cd:	add    eax,0x522ffdcc
  4082d2:	into   
  4082d3:	mov    bh,BYTE PTR [edx+0x71]
  4082d6:	fmul   QWORD PTR [ebx+0x21320b54]
  4082dc:	jg     0x40829b
  4082de:	mov    bh,0xfb
  4082e0:	mov    dl,0x35
  4082e2:	push   ebp
  4082e3:	fsubr  st(2),st
  4082e5:	cdq    
  4082e6:	sar    BYTE PTR [esi-0x7bf191a7],cl
  4082ec:	dec    esp
  4082ed:	cmp    eax,0x91aac128
  4082f2:	add    al,0x14
  4082f4:	je     0x408310
  4082f6:	and    eax,0xf9393a22
  4082fb:	icebp  
  4082fc:	adc    BYTE PTR [edi+0x240d8e15],dh
  408302:	mov    dl,0x14
  408304:	sub    ah,BYTE PTR [ecx]
  408306:	add    eax,0x4f102d75
  40830b:	pusha  
  40830c:	lock mov cl,0x64
  40830f:	outs   dx,DWORD PTR ds:[esi]
  408310:	int3   
  408311:	lods   al,BYTE PTR ds:[esi]
  408312:	outs   dx,DWORD PTR ds:[esi]
  408313:	or     bh,dh
  408315:	mov    ch,0x12
  408317:	jb     0x4082bd
  408319:	adc    DWORD PTR [esi-0x53],esp
  40831c:	inc    edi
  40831d:	xchg   BYTE PTR [esi],cl
  40831f:	add    ebx,esi
  408321:	dec    esp
  408322:	lahf   
  408323:	sbb    BYTE PTR [ecx-0x75e35eb3],bl
  408329:	test   DWORD PTR [ebx+0x33],ebx
  40832c:	dec    edi
  40832d:	dec    edx
  40832e:	ins    BYTE PTR es:[edi],dx
  40832f:	fsubr  st(6),st
  408331:	push   ds
  408332:	dec    esp
  408333:	sti    
  408334:	and    BYTE PTR [esi+0x18],dh
  408337:	cmp    DWORD PTR [esi-0x3dac361],ebx
  40833d:	mov    eax,0x183123bb
  408342:	jmp    0x1e6:0x900d5a3c
  408349:	jae    0x40835f
  40834b:	mov    bl,0xaf
  40834d:	mov    ecx,0xbaa9db57
  408352:	xchg   ecx,eax
  408353:	retf   
  408354:	or     dh,bh
  408356:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408357:	mov    BYTE PTR [ebp+0x868befe],ch
  40835d:	jg     0x408352
  40835f:	sub    ebp,DWORD PTR [edx]
  408361:	or     bl,BYTE PTR [edi+0x6f3a1e0d]
  408367:	out    0x24,al
  408369:	lods   eax,DWORD PTR ds:[esi]
  40836a:	or     DWORD PTR [esi-0x67],edx
  40836d:	mov    dh,0xe6
  40836f:	sahf   
  408370:	mul    BYTE PTR [ebp+edi*8-0x242f0bd0]
  408377:	das    
  408378:	add    edi,DWORD PTR [edi+0x28]
  40837b:	fnop   
  40837d:	ds test al,0x95
  408380:	(bad)  
  408381:	mov    ebp,0x3cf411f8
  408386:	jno    0x408337
  408388:	loopne 0x4083fb
  40838a:	jg     0x4083e7
  40838c:	hlt    
  40838d:	leave  
  40838e:	or     edi,esi
  408390:	cmp    edx,ebx
  408392:	cdq    
  408393:	mov    gs,WORD PTR [edx+0x293a83ba]
  408399:	mov    ebx,0xf9319294
  40839e:	and    DWORD PTR ds:0x9941e14e,ecx
  4083a4:	or     ah,ah
  4083a6:	int3   
  4083a7:	fs fs and ebp,eax
  4083ab:	pop    eax
  4083ac:	div    BYTE PTR [edx+0x6d]
  4083af:	xor    BYTE PTR [ebp-0x6e80a1a2],al
  4083b5:	cmc    
  4083b6:	fidiv  WORD PTR [ebp*1-0x3f4b8e0f]
  4083bd:	fsub   QWORD PTR [ebp+ecx*2-0x46]
  4083c1:	and    al,cl
  4083c3:	cmc    
  4083c4:	div    DWORD PTR [esi+edx*4+0x7a]
  4083c8:	adc    bh,ch
  4083ca:	lds    ecx,FWORD PTR [ecx+0x7f0c2a48]
  4083d0:	and    BYTE PTR [esi-0x2f9f55a5],dh
  4083d6:	stos   DWORD PTR es:[edi],eax
  4083d7:	mov    esi,0xb2a56675
  4083dc:	leave  
  4083dd:	lods   eax,DWORD PTR ds:[esi]
  4083de:	aam    0x42
  4083e0:	shl    BYTE PTR [edx+0x2],0x67
  4083e4:	push   ds
  4083e5:	mov    eax,0x2c2b1546
  4083ea:	or     al,0x14
  4083ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4083ed:	and    BYTE PTR [ecx+edx*2+0x5d03ffca],0xb6
  4083f5:	inc    ebp
  4083f6:	stc    
  4083f7:	out    dx,al
  4083f8:	out    dx,al
  4083f9:	(bad)  
  4083fb:	cli    
  4083fc:	idiv   DWORD PTR [edi]
  4083fe:	ror    DWORD PTR [ecx+0x5c],cl
  408401:	push   es
  408402:	jmp    0xeda9d5e
  408407:	repnz dec edi
  408409:	cmp    DWORD PTR [edx-0x66],edi
  40840c:	inc    eax
  40840d:	call   FWORD PTR [ecx]
  40840f:	mov    edx,0x3ae81520
  408414:	int3   
  408415:	in     al,0x86
  408417:	adc    DWORD PTR [edx-0x3885dd9c],ebx
  40841d:	jne    0x4083a2
  40841f:	arpl   WORD PTR [eiz*4+0x38664b8a],bx
  408426:	jae    0x408493
  408428:	int3   
  408429:	inc    ecx
  40842a:	lahf   
  40842b:	inc    esp
  40842c:	stos   DWORD PTR es:[edi],eax
  40842d:	rcr    ch,1
  40842f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408430:	cmp    eax,0x5743430d
  408435:	dec    ebp
  408436:	inc    esi
  408437:	mov    esi,edi
  408439:	mov    bl,0x3c
  40843b:	gs ds (bad) 
  40843e:	sar    BYTE PTR [esi+0x48521614],1
  408444:	and    eax,0xd09e4034
  408449:	rol    ebp,1
  40844b:	dec    esp
  40844c:	push   ecx
  40844d:	shl    DWORD PTR [ebx+0x40a60158],cl
  408453:	(bad)  
  408454:	cmp    eax,0xbe5e2a0d
  408459:	cmc    
  40845a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40845b:	aam    0xe6
  40845d:	dec    esi
  40845e:	sbb    DWORD PTR [edi-0x2a],eax
  408461:	fadd   DWORD PTR [ebp+0x61984b2]
  408467:	sti    
  408468:	jbe    0x4084b9
  40846a:	dec    eax
  40846b:	pop    esp
  40846c:	call   0xc458:0x7899a5cc
  408473:	ja     0x40841e
  408475:	std    
  408476:	fdiv   DWORD PTR [ebp-0x76b0c92]
  40847c:	and    edi,DWORD PTR [ecx]
  40847e:	mov    BYTE PTR [ebp-0x19],dl
  408481:	adc    al,0x7f
  408483:	fimul  DWORD PTR [ecx-0x7d]
  408486:	fadd   QWORD PTR [esi+0x5e]
  408489:	das    
  40848a:	xor    ecx,DWORD PTR [ecx-0x5d6eb234]
  408490:	or     esi,edx
  408492:	add    al,0xcc
  408494:	pop    edx
  408495:	scas   al,BYTE PTR es:[edi]
  408496:	bound  ebx,QWORD PTR [edx+0x47]
  408499:	stos   BYTE PTR es:[edi],al
  40849a:	push   edi
  40849b:	mov    ds,WORD PTR [ecx-0x3c]
  40849e:	mov    esi,0x35f762cb
  4084a3:	ficom  DWORD PTR [ebx+eax*1]
  4084a6:	jp     0x4084b8
  4084a8:	cmp    DWORD PTR [ebx+0x5],eax
  4084ab:	add    ecx,DWORD PTR [ebx-0x7bce4893]
  4084b1:	fnop   
  4084b3:	jl     0x4084b1
  4084b5:	or     al,0x76
  4084b7:	ss and eax,0x472e4974
  4084bd:	push   edi
  4084be:	popf   
  4084bf:	pop    esp
  4084c0:	std    
  4084c1:	cmp    al,BYTE PTR es:[ebx+0x3b]
  4084c5:	aas    
  4084c6:	xchg   BYTE PTR [ebx-0x38],dl
  4084c9:	(bad)  
  4084cb:	stc    
  4084cc:	fisub  DWORD PTR [esi+edi*4+0x2a0bbcc3]
  4084d3:	jmp    0xc786b955
  4084d8:	lock or al,0x2d
  4084db:	fadd   st(6),st
  4084dd:	pop    es
  4084de:	sbb    eax,0xcd391562
  4084e3:	adc    eax,0x32c32ede
  4084e8:	(bad)  
  4084e9:	fstp   QWORD PTR [esi-0x7d]
  4084ec:	rol    DWORD PTR [ecx+0x3a66f89f],1
  4084f2:	mov    ebp,0x3470a287
  4084f7:	add    ebp,esp
  4084f9:	lds    ecx,FWORD PTR [ebx]
  4084fb:	add    BYTE PTR [ecx],0x25
  4084fe:	(bad)  
  4084ff:	fcmovnb st,st(3)
  408501:	xor    BYTE PTR [esi],al
  408503:	scas   al,BYTE PTR es:[edi]
  408504:	add    eax,0xf64a3083
  408509:	outs   dx,BYTE PTR ds:[esi]
  40850a:	mul    ch
  40850c:	dec    ebp
  40850d:	mov    ecx,0x36fff885
  408512:	(bad)  
  408513:	mov    ds:0xbd172bf7,ax
  408519:	or     esi,ebx
  40851b:	sbb    al,0xc4
  40851d:	clc    
  40851e:	nop
  40851f:	push   ecx
  408520:	imul   edi,DWORD PTR [esi-0x72],0xdd417687
  408527:	push   edi
  408528:	pop    esp
  408529:	dec    esp
  40852a:	jmp    0x408590
  40852c:	clc    
  40852d:	push   ss
  40852e:	mov    al,0xe8
  408530:	pop    edi
  408531:	dec    edx
  408532:	pushf  
  408533:	(bad)  
  408535:	ret    0xc035
  408538:	jp     0x40859f
  40853a:	or     eax,0xaadc0035
  40853f:	push   cs
  408540:	jo     0x408522
  408542:	inc    ecx
  408543:	out    dx,al
  408544:	int    0x4a
  408546:	fs mov esi,0xa0cf4f87
  40854c:	retf   
  40854d:	mul    BYTE PTR [ecx+0xc]
  408550:	sar    BYTE PTR [ebx+eax*2],0xd0
  408554:	das    
  408555:	jg     0x408515
  408557:	push   edi
  408558:	mov    ah,ch
  40855a:	adc    BYTE PTR [edi],dl
  40855c:	or     esi,DWORD PTR [edi+0x1e5490af]
  408562:	lea    edi,[ebx+ebx*1+0x50905738]
  408569:	sbb    DWORD PTR [ebx-0x74c86b86],edi
  40856f:	mov    dl,BYTE PTR ds:0xe544aaea
  408575:	jp     0x408565
  408577:	and    BYTE PTR [esi-0x55821445],0xa4
  40857e:	jbe    0x408570
  408580:	push   es
  408581:	out    0x6d,eax
  408583:	(bad)  [edi+0x68]
  408586:	clc    
  408587:	in     eax,0xe1
  408589:	fwait
  40858a:	mov    dl,0x53
  40858c:	shl    BYTE PTR [esi-0x15],1
  40858f:	imul   ebp,ebx,0xdcee7212
  408595:	sub    al,0x5f
  408597:	ret    0xe941
  40859a:	xchg   ebp,eax
  40859b:	mov    ds:0x529d381a,al
  4085a0:	inc    esi
  4085a1:	xlat   BYTE PTR ds:[ebx]
  4085a2:	imul   DWORD PTR [ecx]
  4085a4:	push   ss
  4085a5:	sub    DWORD PTR [eax],esp
  4085a7:	push   es
  4085a8:	(bad)  [ebp-0x54]
  4085ab:	inc    ebp
  4085ac:	inc    ebp
  4085ad:	dec    ebp
  4085ae:	pop    ds
  4085af:	push   esi
  4085b0:	aaa    
  4085b1:	arpl   WORD PTR [ecx-0xb],ax
  4085b4:	aam    0xc2
  4085b6:	jp     0x4085e4
  4085b8:	sub    DWORD PTR [ecx+edi*8-0x75376384],edi
  4085bf:	jle    0x4085b8
  4085c1:	retf   
  4085c2:	or     al,0x28
  4085c4:	pop    ecx
  4085c5:	adc    BYTE PTR [ecx-0x5e829e4d],dh
  4085cb:	xchg   ebx,eax
  4085cc:	stos   BYTE PTR es:[edi],al
  4085cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4085ce:	mov    esi,0x14295f54
  4085d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4085d4:	add    al,0xb8
  4085d6:	mov    dh,0x38
  4085d8:	call   0x791e2b08
  4085dd:	push   eax
  4085de:	mov    ebx,0x6bb218b6
  4085e3:	retf   
  4085e4:	fstp   TBYTE PTR [edx]
  4085e6:	out    dx,al
  4085e7:	imul   esi,esp,0x29e9f968
  4085ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4085ee:	push   edx
  4085ef:	xchg   ebx,eax
  4085f0:	imul   ebp,DWORD PTR [ecx+eiz*2+0x9fe2106],0xf66e7905
  4085fb:	rcl    DWORD PTR ds:0xbea81e28,1
  408601:	out    dx,eax
  408602:	sbb    ah,ah
  408604:	dec    edx
  408605:	hlt    
  408606:	jbe    0x40858d
  408608:	mov    dh,0x86
  40860a:	add    edi,ebp
  40860c:	jle    0x408666
  40860e:	jo     0x7a6e0f80
  408614:	pop    ebp
  408615:	stc    
  408616:	bound  esi,QWORD PTR [ebx+edi*2+0x64]
  40861a:	nop
  40861b:	scas   al,BYTE PTR es:[edi]
  40861c:	sti    
  40861d:	lods   eax,DWORD PTR ds:[esi]
  40861e:	fdivr  st,st(5)
  408620:	and    dl,ah
  408622:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408623:	pop    es
  408624:	cdq    
  408625:	mov    eax,0x808f2335
  40862a:	xchg   ebx,eax
  40862b:	les    ecx,FWORD PTR [edx-0x70]
  40862e:	sub    eax,0xb59c7d0f
  408633:	xchg   ebx,eax
  408634:	retf   0x1cb2
  408637:	xor    DWORD PTR [ebx+0xd108555],ebp
  40863d:	out    dx,al
  40863e:	daa    
  40863f:	inc    ecx
  408640:	cmc    
  408641:	cmc    
  408642:	scas   eax,DWORD PTR es:[edi]
  408643:	shr    dh,0x6d
  408646:	jae    0x408604
  408648:	mov    cl,0xc6
  40864a:	sbb    BYTE PTR [edi],ah
  40864c:	in     eax,0x1e
  40864e:	jmp    FWORD PTR ds:0xf2c14a6a
  408654:	mov    ch,0x8e
  408656:	xchg   esp,eax
  408657:	scas   eax,DWORD PTR es:[edi]
  408658:	mov    cl,0x8c
  40865a:	mov    ah,0x53
  40865c:	xchg   ecx,eax
  40865d:	xchg   esi,eax
  40865e:	(bad)  
  40865f:	fdivr  QWORD PTR [ebp-0x5e]
  408662:	out    0x6c,eax
  408664:	sub    al,0xb2
  408666:	into   
  408667:	test   al,0x21
  408669:	mov    bl,0x3
  40866b:	mov    ch,0xfa
  40866d:	add    al,0xaa
  40866f:	mov    edx,ds
  408671:	pop    ss
  408672:	nop
  408673:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408674:	enter  0x573d,0x3b
  408678:	mov    ss:0xbfa3625e,al
  40867e:	inc    esp
  40867f:	mov    esp,DWORD PTR [ebp-0x3d]
  408682:	dec    eax
  408683:	push   0xd95c5b0d
  408688:	mov    ds:0x5bf1c0bc,al
  40868d:	es push ebx
  40868f:	scas   al,BYTE PTR es:[edi]
  408690:	xchg   ecx,eax
  408691:	lahf   
  408692:	outs   dx,BYTE PTR ds:[esi]
  408693:	call   FWORD PTR [eax]
  408695:	sub    esp,DWORD PTR [edx-0x5b]
  408698:	je     0x4086b1
  40869a:	jg     0x40864b
  40869c:	out    dx,al
  40869d:	pop    ds
  40869e:	xor    al,0x4f
  4086a0:	add    eax,0x946caca0
  4086a5:	jb     0x408711
  4086a7:	or     ecx,0x25fac584
  4086ad:	fwait
  4086ae:	mov    ecx,0x7b599699
  4086b3:	xchg   ebx,eax
  4086b4:	and    al,0x9a
  4086b6:	jmp    0x4086b1
  4086b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4086b9:	mov    esp,0xcdfd5477
  4086be:	cmp    al,0x40
  4086c0:	jnp    0x40870e
  4086c2:	fsubp  st(1),st
  4086c4:	xor    bl,BYTE PTR [eax+0xc]
  4086c7:	jo     0x408738
  4086c9:	mov    edi,0xb58f004
  4086ce:	inc    eax
  4086cf:	xchg   edi,eax
  4086d0:	retf   
  4086d1:	ror    DWORD PTR [ebp+0x33],0x67
  4086d5:	xor    al,0x2f
  4086d7:	sbb    eax,DWORD PTR [ebx]
  4086d9:	inc    ebp
  4086da:	xchg   BYTE PTR [edi],bh
  4086dc:	jo     0x408678
  4086de:	jl     0x40867d
  4086e0:	retf   0x18e2
  4086e3:	dec    esp
  4086e4:	mov    eax,0xb1104bf6
  4086e9:	lods   al,BYTE PTR ds:[esi]
  4086ea:	push   ebx
  4086eb:	les    ecx,FWORD PTR [ebx+0x5f]
  4086ee:	and    eax,0x12b24c79
  4086f3:	jno    0x408733
  4086f5:	shl    BYTE PTR [edx+0x6a],cl
  4086f8:	jo     0x4086b9
  4086fa:	sahf   
  4086fb:	and    al,0xf1
  4086fd:	xor    eax,0x247f7dec
  408702:	push   ds
  408703:	shl    DWORD PTR [esi+0x3317f1d6],0x7a
  40870a:	enter  0x21e,0xe2
  40870e:	mov    ebp,0xc3a420dc
  408713:	es int 0x85
  408716:	hlt    
  408717:	mov    eax,DWORD PTR [esi]
  408719:	repnz sub bh,bh
  40871c:	or     esi,DWORD PTR [ebx-0x6b2eb1ca]
  408722:	mov    bl,0x93
  408724:	(bad)  
  408725:	fdivr  QWORD PTR [edx+ebx*1-0x34]
  408729:	mov    ecx,0x17e6a233
  40872e:	and    DWORD PTR [edx+0x5e73db99],ecx
  408734:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408735:	cwde   
  408736:	addr16 push ebp
  408738:	fsub   QWORD PTR [esi-0x57]
  40873b:	sub    ecx,ecx
  40873d:	mov    ebp,0x451b
  408742:	xor    eax,0xbee2a32b
  408747:	inc    ebx
  408748:	jp     0x408764
  40874a:	cmp    DWORD PTR [esi+0x6c],eax
  40874d:	in     al,dx
  40874e:	sub    al,0xd8
  408750:	push   edi
  408751:	loop   0x408766
  408753:	(bad)  
  408754:	aaa    
  408755:	outs   dx,BYTE PTR ds:[esi]
  408756:	push   ss
  408757:	xor    BYTE PTR [edx+0x48],dh
  40875a:	inc    esi
  40875b:	adc    BYTE PTR [edx],al
  40875d:	mov    cl,0x99
  40875f:	pop    ss
  408760:	pop    ebp
  408761:	fmul   st,st(1)
  408763:	mov    eax,ds:0x49a547a
  408768:	jmp    0x607af288
  40876d:	in     eax,dx
  40876e:	je     0x408777
  408770:	xor    edi,ebp
  408772:	or     bl,BYTE PTR [esi]
  408774:	lock lea ebp,[ebp-0x299a3d04]
  40877b:	mov    edx,0xa09c2d8a
  408780:	sar    BYTE PTR [edx],0xac
  408783:	push   ss
  408784:	add    BYTE PTR [ebx+eiz*1-0x54da8104],dh
  40878b:	push   eax
  40878c:	cs mov dl,0xe6
  40878f:	loop   0x4087d8
  408791:	xlat   BYTE PTR ds:[ebx]
  408792:	cdq    
  408793:	dec    eax
  408794:	sahf   
  408795:	inc    ebx
  408796:	cmp    eax,0xf0eb7b0f
  40879b:	mov    ds:0xcf70296d,eax
  4087a0:	daa    
  4087a1:	popa   
  4087a2:	ret    0xd8e7
  4087a5:	addr16 daa 
  4087a7:	jmp    0x91b3668
  4087ac:	jmp    0x40882c
  4087ae:	retf   
  4087af:	pop    edi
  4087b0:	scas   eax,DWORD PTR es:[edi]
  4087b1:	push   ebx
  4087b2:	push   0xffffffc5
  4087b4:	cli    
  4087b5:	mov    edi,0xa05049cf
  4087ba:	ins    DWORD PTR es:[edi],dx
  4087bb:	lods   eax,DWORD PTR ds:[esi]
  4087bc:	xchg   DWORD PTR [ecx],ebp
  4087be:	(bad)  
  4087bf:	in     al,dx
  4087c0:	push   edx
  4087c1:	inc    esp
  4087c2:	xchg   ecx,eax
  4087c3:	int3   
  4087c4:	push   ss
  4087c5:	fnstsw WORD PTR [esi+0x73]
  4087c8:	shl    BYTE PTR [esi+0x1d],cl
  4087cb:	add    eax,0x306e5a3b
  4087d0:	mov    ebp,0xd0d2418d
  4087d5:	aad    0xf3
  4087d7:	adc    bh,ch
  4087d9:	out    dx,al
  4087da:	push   ebp
  4087db:	jne    0x4087eb
  4087dd:	stos   DWORD PTR es:[edi],eax
  4087de:	cmp    al,0x82
  4087e0:	sar    ah,0x70
  4087e3:	ret    
  4087e4:	push   ds
  4087e5:	mov    bx,0x8e59
  4087e9:	inc    eax
  4087ea:	aam    0x9
  4087ec:	call   0xe8bce8ed
  4087f1:	fild   QWORD PTR [edx]
  4087f3:	repnz mov bl,0xd3
  4087f6:	scas   eax,DWORD PTR es:[edi]
  4087f7:	sub    ebp,DWORD PTR [edi+0x34]
  4087fa:	ins    BYTE PTR es:[edi],dx
  4087fb:	push   esp
  4087fc:	jae    0x4087e7
  4087fe:	js     0x408847
  408800:	add    esp,DWORD PTR [ecx]
  408802:	addr16 push ecx
  408804:	popa   
  408805:	lea    ebx,[edx-0xd1e83f2]
  40880b:	cmc    
  40880c:	inc    esi
  40880d:	cmp    esi,DWORD PTR [esi-0x23]
  408810:	pushf  
  408811:	arpl   ax,sp
  408813:	pop    ebp
  408814:	ret    0xf3e7
  408817:	fs loop 0x4087ee
  40881a:	xchg   esp,eax
  40881b:	out    dx,eax
  40881c:	aad    0xbc
  40881e:	add    BYTE PTR [esi-0x3912df27],bh
  408824:	adc    bl,al
  408826:	data16 sar BYTE PTR [eax+0x61d05468],1
  40882d:	leave  
  40882e:	xor    ecx,DWORD PTR [eax]
  408830:	adc    al,0x8d
  408832:	cwde   
  408833:	jg     0x4087fb
  408835:	(bad)  
  408836:	xor    DWORD PTR [esi-0x50],esp
  408839:	lds    edi,FWORD PTR [ebp+0x2f]
  40883c:	sbb    DWORD PTR [ecx],esp
  40883e:	sub    DWORD PTR [esi+edx*8+0x7e4a0e06],esp
  408845:	push   eax
  408846:	psllq  mm1,QWORD PTR [ebx-0x66]
  40884a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40884b:	ss in  al,0x69
  40884e:	mov    dl,dl
  408850:	sub    BYTE PTR [edi+0x459ea5c0],0xc6
  408857:	stc    
  408858:	loopne 0x4088bb
  40885a:	jno    0x408896
  40885c:	jnp    0x40884d
  40885e:	or     BYTE PTR [edx+0x7565077f],bl
  408864:	mov    edx,0xc37e58ea
  408869:	pop    eax
  40886a:	or     ah,dh
  40886c:	sbb    edi,ecx
  40886e:	pushf  
  40886f:	jno    0x408889
  408871:	push   esi
  408872:	inc    edx
  408873:	sub    BYTE PTR [edi-0x32],dh
  408876:	mov    eax,0xf2f6fab1
  40887b:	sar    DWORD PTR [edx+0x6089c20d],cl
  408881:	mov    eax,0x64c9755e
  408886:	icebp  
  408887:	sub    eax,0x12eb3e27
  40888c:	lahf   
  40888d:	(bad)  
  40888e:	ror    BYTE PTR [ecx],cl
  408890:	mov    esi,edi
  408892:	inc    eax
  408893:	push   ebx
  408894:	xchg   edx,eax
  408895:	ss ret 0x2eb0
  408899:	popf   
  40889a:	(bad)  
  40889c:	push   edi
  40889d:	repnz sub edi,DWORD PTR [ebp-0x38089aa5]
  4088a4:	mov    bh,0x7f
  4088a6:	sbb    cl,BYTE PTR [edi]
  4088a8:	outs   dx,DWORD PTR ds:[esi]
  4088a9:	adc    BYTE PTR [ebx-0x37],dl
  4088ac:	lods   eax,DWORD PTR ds:[esi]
  4088ad:	fstp   TBYTE PTR [ebp-0x3a]
  4088b0:	repnz aad 0x5c
  4088b3:	xchg   edx,eax
  4088b4:	inc    edx
  4088b5:	iret   
  4088b6:	out    0x95,eax
  4088b8:	loop   0x40891a
  4088ba:	call   0x2424e3a4
  4088bf:	sub    DWORD PTR [ecx-0x1c3944dd],0xf6d869af
  4088c9:	lahf   
  4088ca:	out    dx,eax
  4088cb:	shl    DWORD PTR [ecx],0xfc
  4088ce:	aas    
  4088cf:	dec    edi
  4088d0:	lods   eax,DWORD PTR ds:[esi]
  4088d1:	pop    ds
  4088d2:	mov    ds:0xa70dbf34,eax
  4088d7:	jnp    0x4088a5
  4088d9:	sti    
  4088da:	add    ebp,edi
  4088dc:	jmp    0x9029:0xd3d7269c
  4088e3:	xor    BYTE PTR [esi+0x7b],dl
  4088e6:	jns    0x4088b5
  4088e8:	xor    al,0x16
  4088ea:	xor    al,BYTE PTR [edx+0x5a72a5cf]
  4088f0:	ss jl  0x4088f7
  4088f3:	je     0x40892b
  4088f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4088f6:	jge    0x408890
  4088f8:	pop    esi
  4088f9:	(bad)  
  4088fa:	(bad)  
  4088fb:	lods   al,BYTE PTR ds:[si]
  4088fd:	jl     0x408977
  4088ff:	test   DWORD PTR [eax-0x13],esi
  408902:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408903:	mov    edi,0x85ff8570
  408908:	cli    
  408909:	cli    
  40890a:	push   es
  40890b:	jmp    0x1581:0x8bfd8c1
  408912:	rcl    BYTE PTR [edx+0x22],1
  408915:	das    
  408916:	addr16 in al,dx
  408918:	hlt    
  408919:	dec    edx
  40891a:	pop    esi
  40891b:	sub    al,0xb3
  40891d:	mov    cl,0x39
  40891f:	data16 fwait
  408921:	push   cs
  408922:	xchg   DWORD PTR [ecx+0x4d],edi
  408925:	call   0xe6fee487
  40892a:	outs   dx,DWORD PTR ds:[esi]
  40892b:	cli    
  40892c:	jae    0x408985
  40892e:	xor    edx,esp
  408930:	jl     0x408942
  408932:	ret    0xfaf3
  408935:	enter  0xb2e1,0x93
  408939:	pop    ecx
  40893a:	jnp    0x408949
  40893c:	repz jno 0x408994
  40893f:	dec    eax
  408940:	jbe    0x4088f2
  408942:	fcmovbe st,st(0)
  408944:	fimul  WORD PTR [edx-0x1a]
  408947:	jg     0x408904
  408949:	pop    edx
  40894a:	xchg   DWORD PTR [edi+eax*2],ebx
  40894d:	push   ds
  40894e:	ret    0xa4aa
  408951:	stos   BYTE PTR es:[edi],al
  408952:	xchg   ebx,eax
  408953:	cwde   
  408954:	mov    esp,DWORD PTR [edx+0x68a9d6d0]
  40895a:	aam    0x25
  40895c:	ja     0x40891c
  40895e:	sahf   
  40895f:	inc    ecx
  408960:	jbe    0x408907
  408962:	jae    0x40895d
  408964:	jns    0x4088eb
  408966:	cmp    esi,ecx
  408968:	ret    0x9c79
  40896b:	cmp    BYTE PTR [esi+eiz*4],ch
  40896e:	lods   eax,DWORD PTR ds:[esi]
  40896f:	retf   
  408970:	cmp    BYTE PTR [eax],ah
  408972:	xor    eax,0x546cbe9c
  408977:	mov    ecx,0x2ddb8d12
  40897c:	gs aam 0x78
  40897f:	cld    
  408980:	inc    ebp
  408981:	mov    dh,0x4f
  408983:	sub    al,0x36
  408985:	xlat   BYTE PTR ds:[ebx]
  408986:	mov    ds:0xefcb0d82,eax
  40898b:	dec    esi
  40898c:	push   ds
  40898d:	hlt    
  40898e:	fisttp DWORD PTR [edi+ecx*8-0x11]
  408992:	leave  
  408993:	pop    ebx
  408994:	push   ecx
  408995:	out    0x5,eax
  408997:	pop    edi
  408998:	shl    BYTE PTR [eax+0x497b695c],1
  40899e:	dec    esp
  40899f:	cmp    al,0xd2
  4089a1:	imul   edx,esp,0x5e0e97bf
  4089a7:	xor    eax,0x5a4ed7b
  4089ac:	and    BYTE PTR [ebx+0x6c1e1555],bh
  4089b2:	cmp    bl,BYTE PTR [ebp+0x211565f]
  4089b8:	jmp    0x408a26
  4089ba:	sub    BYTE PTR [ecx-0x5a],ch
  4089bd:	jns    0x408967
  4089bf:	mov    dh,0xac
  4089c1:	pop    ebp
  4089c2:	mov    ch,0x4a
  4089c4:	lahf   
  4089c5:	sub    ecx,ebx
  4089c7:	adc    BYTE PTR [edx],0x81
  4089ca:	mov    ah,0xc4
  4089cc:	(bad)  
  4089cd:	ror    DWORD PTR [ebp+ecx*2+0x59],cl
  4089d1:	in     al,0x7d
  4089d3:	adc    BYTE PTR [esi+ebx*8+0x77c3bc47],ch
  4089da:	sub    al,0xb5
  4089dc:	ja     0x408a3e
  4089de:	leave  
  4089df:	bound  esp,QWORD PTR [ebp+0x29]
  4089e2:	sbb    eax,0x7f13c6
  4089e7:	mov    esi,0xb9ec4ea8
  4089ec:	jecxz  0x408982
  4089ee:	aaa    
  4089ef:	push   0xa
  4089f1:	fwait
  4089f2:	mov    esi,0xa8cfdbce
  4089f7:	dec    ebx
  4089f8:	xor    al,0x33
  4089fa:	pop    ebp
  4089fb:	fs ins BYTE PTR es:[edi],dx
  4089fd:	sbb    al,0x6e
  4089ff:	xor    eax,DWORD PTR [edx+0x1219698f]
  408a05:	out    0x8,al
  408a07:	and    dh,dl
  408a09:	sahf   
  408a0a:	lea    esi,[ecx-0x73]
  408a0d:	cmp    eax,0xbaa0a440
  408a12:	mov    ch,0x39
  408a14:	inc    edx
  408a15:	jle    0x408a1e
  408a17:	ins    DWORD PTR es:[edi],dx
  408a18:	retf   0x6873
  408a1b:	adc    DWORD PTR [ecx+0x14],ebp
  408a1e:	retf   
  408a1f:	mul    BYTE PTR [esi+0x2fc595f8]
  408a25:	loopne 0x408a81
  408a27:	es out dx,al
  408a29:	mov    ebx,DWORD PTR [ecx-0xfc79cfd]
  408a2f:	fisubr WORD PTR [esi]
  408a31:	jmp    0xf63d6227
  408a36:	cmp    BYTE PTR [edx+0x5d],ah
  408a39:	push   eax
  408a3a:	sbb    BYTE PTR [edi],cl
  408a3c:	mov    ebp,0x531ee29a
  408a41:	dec    edx
  408a42:	inc    ecx
  408a43:	pop    es
  408a44:	cs jle 0x408aac
  408a47:	push   cs
  408a48:	or     ch,BYTE PTR [eax+0x4ebea46b]
  408a4e:	push   esi
  408a4f:	mov    eax,0xed9c514f
  408a54:	fdivrp st(2),st
  408a56:	mov    ds:0xb8c088a4,eax
  408a5b:	push   0x528293c6
  408a60:	xlat   BYTE PTR ds:[ebx]
  408a61:	fwait
  408a62:	adc    BYTE PTR [ebp-0x62],bl
  408a65:	fbld   TBYTE PTR [eax+esi*2]
  408a68:	and    cl,BYTE PTR ds:0xe8ab4fd9
  408a6e:	aas    
  408a6f:	adc    al,0x90
  408a71:	jg     0x408a99
  408a73:	int3   
  408a74:	dec    esi
  408a75:	push   esi
  408a76:	pop    edi
  408a77:	sbb    DWORD PTR [ebx-0x39],ecx
  408a7a:	xchg   edi,eax
  408a7b:	inc    edi
  408a7c:	les    eax,FWORD PTR [esi+0x53]
  408a7f:	cmp    DWORD PTR [ecx-0x639c01f7],ecx
  408a85:	ret    
  408a86:	stos   DWORD PTR es:[edi],eax
  408a87:	mov    ecx,0x23a19534
  408a8c:	out    0xd0,eax
  408a8e:	rcr    DWORD PTR [edx+0x1fb36196],cl
  408a94:	sub    al,0xee
  408a96:	cmp    al,0x49
  408a98:	adc    al,0x2c
  408a9a:	mov    bl,0xcf
  408a9c:	pop    edi
  408a9d:	popa   
  408a9e:	out    dx,al
  408a9f:	std    
  408aa0:	call   0xb50e1030
  408aa5:	(bad)  
  408aa6:	(bad)  
  408aa8:	pop    edx
  408aa9:	mov    ds:0x66061ce,eax
  408aae:	js     0x408a49
  408ab0:	add    eax,0xd1a191f4
  408ab5:	fist   WORD PTR [edx]
  408ab7:	mov    WORD PTR [eax+0x70fb97cb],es
  408abd:	aad    0x18
  408abf:	popf   
  408ac0:	es xchg ebx,eax
  408ac2:	push   ebp
  408ac3:	add    esp,DWORD PTR [ecx+0x40]
  408ac6:	or     DWORD PTR [eax+ebx*8-0xee8836a],edi
  408acd:	push   edx
  408ace:	mov    esi,0xf8eb85ef
  408ad3:	jg     0x408b53
  408ad5:	mov    dh,0x58
  408ad7:	push   0x5076aa98
  408adc:	sbb    BYTE PTR [esi-0x28],bl
  408adf:	inc    ebx
  408ae0:	and    al,0xcc
  408ae2:	lahf   
  408ae3:	push   0x2d
  408ae5:	xchg   ebp,eax
  408ae6:	jg     0x408b23
  408ae8:	cmp    DWORD PTR [eax],edx
  408aea:	lock cmp dh,BYTE PTR [esp+ebp*4-0xa]
  408aef:	rcl    bl,cl
  408af1:	popa   
  408af2:	and    DWORD PTR [edi+0x78],ecx
  408af5:	int3   
  408af6:	les    eax,FWORD PTR [esi+0x23295160]
  408afc:	xor    DWORD PTR [esi+0x32832588],ebp
  408b02:	scas   al,BYTE PTR es:[edi]
  408b03:	cmp    BYTE PTR [ecx-0x3a],ch
  408b06:	(bad)
  408b09:	nop
  408b0a:	pop    ds
  408b0b:	jae    0x408b8a
  408b0d:	loopne 0x408b04
  408b0f:	lea    eax,[ecx]
  408b11:	fwait
  408b12:	out    dx,eax
  408b13:	add    eax,0xffd3026a
  408b18:	fsub   st(2),st
  408b1a:	dec    esp
  408b1b:	das    
  408b1c:	icebp  
  408b1d:	xchg   ebx,eax
  408b1e:	sahf   
  408b1f:	jecxz  0x408ad8
  408b21:	fisub  DWORD PTR [ecx+0x7bc080c4]
  408b27:	cli    
  408b28:	jp     0x408ab3
  408b2a:	mov    ds:0xea581383,al
  408b2f:	sub    esi,esi
  408b31:	fsubr  QWORD PTR [eax+0x7a]
  408b34:	adc    bh,bl
  408b36:	aad    0x16
  408b38:	int3   
  408b39:	or     eax,0x6b2856f2
  408b3e:	xlat   BYTE PTR ds:[ebx]
  408b3f:	mov    bh,0xbd
  408b41:	jp     0x408bad
  408b43:	mov    eax,ds:0x455acb8a
  408b48:	cmp    bh,BYTE PTR [ebx+0x4e439429]
  408b4e:	addr16 xchg esi,eax
  408b50:	rol    DWORD PTR [ebp-0x3b74957a],0xef
  408b57:	retf   0x114b
  408b5a:	xchg   ebx,eax
  408b5b:	ret    0x8877
  408b5e:	and    dl,BYTE PTR [edi+esi*2]
  408b61:	xor    BYTE PTR [edi+0x5fdb5579],dl
  408b67:	jg     0x408b98
  408b69:	pop    edx
  408b6a:	inc    ebx
  408b6b:	ja     0x408b32
  408b6d:	xor    eax,0x88364010
  408b72:	xchg   edi,eax
  408b73:	into   
  408b74:	inc    esp
  408b75:	les    ebx,FWORD PTR ds:0xd9e1772d
  408b7b:	mov    cs,edx
  408b7d:	outs   dx,DWORD PTR ds:[esi]
  408b7e:	sbb    eax,ebp
  408b80:	addr16 aas 
  408b82:	in     al,0xfc
  408b84:	loope  0x408bad
  408b86:	inc    esp
  408b87:	mov    ecx,0x9b68b6f1
  408b8c:	js     0x408ba7
  408b8e:	pusha  
  408b8f:	ret    
  408b90:	outs   dx,DWORD PTR ds:[esi]
  408b91:	xchg   dh,ah
  408b93:	adc    eax,0x584e44a5
  408b98:	pop    edi
  408b99:	add    eax,0xa655e6fd
  408b9e:	push   ss
  408b9f:	pusha  
  408ba0:	ficom  WORD PTR gs:[edx]
  408ba3:	mov    ds:0x160f540e,eax
  408ba8:	mov    dl,0x3e
  408baa:	add    al,0xe4
  408bac:	ror    BYTE PTR [edi-0x1a],0xfc
  408bb0:	out    0x1b,al
  408bb2:	and    DWORD PTR [eax],ecx
  408bb4:	shr    bh,1
  408bb6:	les    esi,FWORD PTR [eax+esi*4-0x2acffbc3]
  408bbd:	add    DWORD PTR [eax+0xe3c5099],edi
  408bc3:	jp     0x408bb9
  408bc5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408bc6:	mov    ebp,0x944966da
  408bcb:	mov    ebp,DWORD PTR [ebp+0x42]
  408bce:	mov    cl,0x69
  408bd0:	cmp    BYTE PTR [ebp-0x559f1eb2],al
  408bd6:	test   DWORD PTR [esi+0x7f],esi
  408bd9:	int    0xdf
  408bdb:	push   esi
  408bdc:	jnp    0x408bd7
  408bde:	cdq    
  408bdf:	scas   al,BYTE PTR es:[edi]
  408be0:	dec    eax
  408be1:	jg     0x408bc5
  408be3:	test   al,0x2e
  408be5:	inc    ebp
  408be6:	je     0x408b69
  408be8:	scas   eax,DWORD PTR es:[edi]
  408be9:	lock sti 
  408beb:	or     edi,ebx
  408bed:	jge    0x408b77
  408bef:	mov    edx,0x5f25a74b
  408bf4:	test   BYTE PTR [edx-0x62],ch
  408bf7:	xlat   BYTE PTR ds:[ebx]
  408bf8:	jnp    0x408c6b
  408bfa:	fucomip st,st(0)
  408bfc:	ss inc esp
  408bfe:	mov    ecx,0x7d18922c
  408c03:	inc    ecx
  408c04:	ja     0x408bfa
  408c06:	hlt    
  408c07:	jae    0x408c1a
  408c09:	lds    esp,FWORD PTR [edx]
  408c0b:	mov    ecx,0x6f9a5d66
  408c10:	sbb    al,0x20
  408c12:	pop    ds
  408c13:	mov    ecx,0x19b87b51
  408c18:	jge    0x408c79
  408c1a:	test   BYTE PTR [ecx],bl
  408c1c:	push   edx
  408c1d:	mov    ecx,0xa95b04ad
  408c22:	stos   DWORD PTR es:[edi],eax
  408c23:	clc    
  408c24:	adc    ebp,DWORD PTR [ecx-0x11]
  408c27:	fwait
  408c28:	adc    edx,DWORD PTR [esi]
  408c2a:	and    DWORD PTR [eax+ebx*8+0x15],edx
  408c2e:	loope  0x408c13
  408c30:	leave  
  408c31:	dec    ebx
  408c32:	test   eax,0xff0dd292
  408c37:	add    al,BYTE PTR [edx]
  408c39:	adc    edx,esi
  408c3b:	into   
  408c3c:	mov    ebx,0x5383d0cf
  408c41:	aaa    
  408c42:	imul   eax,DWORD PTR [edx+0x68],0x5
  408c46:	cmp    DWORD PTR [eax],ecx
  408c48:	pop    eax
  408c49:	jns    0x408beb
  408c4b:	fcmovnb st,st(6)
  408c4d:	and    BYTE PTR [esi+0x2315966e],0xda
  408c54:	call   0xe864:0xc651f32a
  408c5b:	div    DWORD PTR [ecx]
  408c5d:	or     al,0x91
  408c5f:	and    eax,0x24ee8a86
  408c64:	lea    edx,[ebp-0x7cc2b68b]
  408c6a:	(bad)  [ebp+esi*2+0x39e35d7b]
  408c71:	or     BYTE PTR [esi],ah
  408c73:	push   0xffffffe2
  408c75:	inc    ecx
  408c76:	fistp  QWORD PTR [edi]
  408c78:	test   DWORD PTR [ebx+0x179ddb45],0x72864ead
  408c82:	les    edi,FWORD PTR [edi+ebp*4-0x58ac94ab]
  408c89:	aam    0x60
  408c8b:	std    
  408c8c:	add    bl,dl
  408c8e:	jle    0x408c28
  408c90:	and    DWORD PTR [edx+0x1c2d9d14],ebp
  408c96:	lods   eax,DWORD PTR ds:[esi]
  408c97:	sub    al,0x2
  408c99:	jmp    FWORD PTR [edx+0x25]
  408c9c:	mov    bl,BYTE PTR [edi]
  408c9e:	pop    esi
  408c9f:	adc    edx,ebp
  408ca1:	dec    esi
  408ca2:	xchg   DWORD PTR [ebx],ecx
  408ca4:	inc    ecx
  408ca5:	mov    bh,0x31
  408ca7:	mov    es,esp
  408ca9:	or     edx,DWORD PTR [ebx+esi*2-0xb]
  408cad:	xor    BYTE PTR [ecx+0x2e469b3b],dl
  408cb3:	inc    esp
  408cb4:	imul   eax,ebx,0xffffffaf
  408cb7:	mov    dl,0x29
  408cb9:	(bad)  
  408cba:	cmp    dh,ch
  408cbc:	inc    ebp
  408cbd:	push   edx
  408cbe:	aaa    
  408cbf:	jbe    0x408c67
  408cc1:	cmp    BYTE PTR [ecx+eiz*8-0x5add4b5d],0xde
  408cc9:	js     0x408d18
  408ccb:	mov    bh,0x10
  408ccd:	mov    ds:0x6af657e6,eax
  408cd2:	mov    al,0x66
  408cd4:	mov    ds:0xf93d3c15,eax
  408cd9:	xor    bh,BYTE PTR [ebp-0x48]
  408cdc:	clc    
  408cdd:	xor    ah,BYTE PTR [eax+0x58e1017d]
  408ce3:	pop    eax
  408ce4:	sar    BYTE PTR [edi+0x21a76692],cl
  408cea:	inc    ebx
  408ceb:	xor    dl,dl
  408ced:	or     DWORD PTR ds:0x2af3698a,0xffffffe9
  408cf4:	dec    edi
  408cf5:	repnz cld 
  408cf7:	adc    eax,0x4476de8d
  408cfc:	pop    es
  408cfd:	rol    DWORD PTR [ebx],cl
  408cff:	repnz mov edi,0xb3b76792
  408d05:	jb     0x408d07
  408d07:	mov    edi,esi
  408d09:	or     BYTE PTR [ecx-0x3a1eb9a8],0xe8
  408d10:	dec    ebx
  408d11:	adc    eax,0x97bf88fe
  408d16:	jne    0x408d91
  408d18:	js     0x408d67
  408d1a:	mov    eax,0x985d3daf
  408d1f:	xor    BYTE PTR [esi],bh
  408d21:	sub    DWORD PTR [ebp-0x42],edx
  408d24:	jmp    0xe66a:0xad950b47
  408d2b:	mov    eax,ds:0x4151cc3c
  408d30:	test   BYTE PTR cs:[ebx],0xcb
  408d34:	in     al,dx
  408d35:	sti    
  408d36:	xor    DWORD PTR [ebp+0x73],0x848ef028
  408d3d:	jmp    0x67ae:0x18b2032b
  408d44:	loopne 0x408d99
  408d46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d47:	push   es
  408d48:	inc    ebx
  408d49:	leave  
  408d4a:	(bad)  [esp+esi*2+0x34aa7f9e]
  408d51:	adc    al,0xdc
  408d53:	in     al,dx
  408d54:	jnp    0x408ced
  408d56:	ins    DWORD PTR es:[edi],dx
  408d57:	inc    eax
  408d58:	test   ebx,ebp
  408d5a:	fs mov cl,0xb7
  408d5d:	lods   eax,DWORD PTR ds:[esi]
  408d5e:	shl    BYTE PTR [ebx+edi*4+0x42],1
  408d62:	(bad)  
  408d63:	mov    dl,0x15
  408d65:	stos   DWORD PTR es:[edi],eax
  408d66:	and    ch,BYTE PTR [edi+0x0]
  408d69:	test   BYTE PTR [ebx],dl
  408d6b:	leave  
  408d6c:	(bad)  
  408d6d:	sbb    eax,0x4dc737b2
  408d72:	sub    BYTE PTR [edi],bl
  408d74:	leave  
  408d75:	loop   0x408d85
  408d77:	test   ebp,0x1b9c222a
  408d7d:	xor    al,0x4d
  408d7f:	pop    edi
  408d80:	add    DWORD PTR [esi+0x65ecf30b],0x7b
  408d87:	jmp    0x408de0
  408d89:	and    ch,dh
  408d8b:	pusha  
  408d8c:	pop    ds
  408d8d:	dec    dx
  408d8f:	(bad)  
  408d90:	loop   0x408dc2
  408d92:	imul   ebx,ebx,0xffffffef
  408d95:	hlt    
  408d96:	adc    BYTE PTR [esp+edx*8+0x27],ch
  408d9a:	pop    es
  408d9b:	cmp    ecx,DWORD PTR [ecx+edi*1+0x7e78894c]
  408da2:	mov    ecx,0x24f5f5dd
  408da7:	xchg   DWORD PTR [ecx+0x7559c716],esi
  408dad:	sub    eax,0xa3a44462
  408db2:	or     edx,DWORD PTR [edx]
  408db4:	add    ecx,DWORD PTR [ebx]
  408db6:	xchg   esp,eax
  408db7:	shr    DWORD PTR [esi],0x80
  408dba:	rsqrtps xmm3,XMMWORD PTR [bx-0x2e]
  408dbf:	cmp    al,0x35
  408dc1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408dc2:	push   esp
  408dc3:	dec    eax
  408dc4:	sub    eax,0x1ee5981e
  408dc9:	push   0xe2887109
  408dce:	call   0x10:0x32a7951b
  408dd5:	mov    esi,0xdec5d284
  408dda:	data16 stos BYTE PTR es:[edi],al
  408ddc:	loope  0x408e05
  408dde:	aas    
  408ddf:	jo     0x408d8d
  408de1:	ins    DWORD PTR es:[edi],dx
  408de2:	pop    ebx
  408de3:	call   0x663795e8
  408de8:	mov    ds:0x2a887455,al
  408ded:	aaa    
  408dee:	sar    BYTE PTR [eax+0x4b68414b],cl
  408df4:	inc    eax
  408df5:	fisub  WORD PTR ds:0x4142a568
  408dfb:	js     0x408e5f
  408dfd:	int3   
  408dfe:	inc    eax
  408dff:	adc    DWORD PTR [eax],ecx
  408e01:	imul   esi,DWORD PTR [edx-0x515d7c5],0xd9805b5e
  408e0b:	mov    edi,0xb7bd987a
  408e10:	mov    edx,DWORD PTR [esi+0x6b313e0c]
  408e16:	xor    al,0x91
  408e18:	cwde   
  408e19:	shl    eax,cl
  408e1b:	mov    ds:0x611af44f,al
  408e20:	out    0x8,eax
  408e22:	in     eax,dx
  408e23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408e24:	aas    
  408e25:	(bad)  
  408e26:	fnstcw WORD PTR [eax]
  408e28:	in     eax,0xa8
  408e2a:	or     ch,BYTE PTR [ebp-0x39cea5b4]
  408e30:	add    DWORD PTR [ecx-0x2e],edi
  408e33:	out    0x84,al
  408e35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408e36:	pop    edx
  408e37:	push   0xb
  408e39:	inc    ecx
  408e3a:	(bad)  
  408e3b:	xor    edx,DWORD PTR [ebp-0x21]
  408e3e:	cmp    eax,DWORD PTR [edi+eax*1]
  408e41:	xchg   edx,eax
  408e42:	push   ds
  408e43:	pop    es
  408e44:	arpl   WORD PTR [edx-0x52],bp
  408e47:	mov    ebx,0xff59edf5
  408e4c:	jne    0x408e94
  408e4e:	push   ss
  408e4f:	das    
  408e50:	xchg   edx,eax
  408e51:	sub    ah,BYTE PTR [ecx+0x75]
  408e54:	inc    DWORD PTR [ecx+0x276fc5bc]
  408e5a:	mov    ecx,0x8f81d34a
  408e5f:	dec    ebp
  408e60:	sti    
  408e61:	repnz and bh,BYTE PTR [edx-0x49478bf8]
  408e68:	aas    
  408e69:	stos   BYTE PTR es:[edi],al
  408e6a:	adc    eax,0x9cd0d345
  408e6f:	mov    ah,0x29
  408e71:	stos   DWORD PTR es:[edi],eax
  408e72:	mov    ebp,0x9e769468
  408e77:	outs   dx,WORD PTR ds:[esi]
  408e79:	mov    eax,0xba225bb0
  408e7e:	and    eax,0xd793a3ec
  408e83:	and    BYTE PTR [ecx+0x1e1748a6],dl
  408e89:	mov    ds:0x7c567152,al
  408e8e:	sar    edx,1
  408e90:	mov    cl,0xa0
  408e92:	fild   QWORD PTR [esi]
  408e94:	push   ss
  408e95:	int    0x37
  408e97:	add    edx,DWORD PTR [esi]
  408e99:	push   edx
  408e9a:	fwait
  408e9b:	dec    ecx
  408e9c:	dec    esp
  408e9d:	call   0x9eccb3cf
  408ea2:	jge    0x408e9e
  408ea4:	jo     0x408ed8
  408ea6:	(bad)  
  408ea8:	xor    BYTE PTR [ebx-0x4c],0x6f
  408eac:	fisub  WORD PTR [esi]
  408eae:	lods   al,BYTE PTR ds:[esi]
  408eaf:	out    0x47,al
  408eb1:	sbb    bl,cl
  408eb3:	pop    ecx
  408eb4:	pop    ebp
  408eb5:	push   ebx
  408eb6:	mov    BYTE PTR [edi],cl
  408eb8:	sbb    dh,dl
  408eba:	push   edi
  408ebb:	dec    edi
  408ebc:	lods   eax,DWORD PTR ds:[esi]
  408ebd:	sub    BYTE PTR [edx],0xaa
  408ec0:	add    al,0x87
  408ec2:	and    DWORD PTR [esi+0x3092c330],edi
  408ec8:	jmp    0xcbd9:0x309a6b55
  408ecf:	xor    ch,BYTE PTR [edi+ebp*1+0x6b]
  408ed3:	push   0x23
  408ed5:	leave  
  408ed6:	pushf  
  408ed7:	jmp    DWORD PTR [ecx+esi*2]
  408eda:	out    0x6e,eax
  408edc:	sbb    al,0x31
  408ede:	xor    BYTE PTR [eax],ah
  408ee0:	jne    0x408ec4
  408ee2:	cmc    
  408ee3:	loope  0x408eda
  408ee5:	cld    
  408ee6:	fiadd  DWORD PTR [edi-0x8]
  408ee9:	push   edx
  408eea:	inc    di
  408eec:	jae    0x408eec
  408eee:	std    
  408eef:	fstp   DWORD PTR [esi+0x12]
  408ef2:	pusha  
  408ef3:	mov    cl,0x85
  408ef5:	aam    0xa9
  408ef7:	stos   BYTE PTR es:[edi],al
  408ef8:	sar    al,0xb8
  408efb:	loop   0x408eaa
  408efd:	add    al,0xfe
  408eff:	inc    edi
  408f00:	sbb    al,dl
  408f02:	ror    DWORD PTR [eax+0x8],cl
  408f05:	std    
  408f06:	xchg   esi,eax
  408f07:	lock arpl WORD PTR [edx+0x1c],si
  408f0b:	or     eax,0x26a472dc
  408f10:	jnp    0x408f53
  408f12:	jg     0x408f89
  408f14:	jns    0x408f3e
  408f16:	mov    ebx,0x695d6a8d
  408f1b:	xchg   ebp,eax
  408f1c:	cs push es
  408f1e:	aaa    
  408f1f:	adc    al,bh
  408f21:	pop    edi
  408f22:	or     al,dl
  408f24:	cli    
  408f25:	das    
  408f26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408f27:	imul   edi,DWORD PTR [esi-0x1f],0x325c78da
  408f2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408f2f:	or     eax,0x5d7fe6e1
  408f34:	rol    DWORD PTR [ebx+0x19b3f772],1
  408f3a:	fstp   QWORD PTR [edi-0x5e]
  408f3d:	test   DWORD PTR [edi-0x5994c826],esi
  408f43:	xchg   ebx,eax
  408f44:	gs xchg ebx,eax
  408f46:	xchg   esp,eax
  408f47:	push   ebx
  408f48:	popf   
  408f49:	(bad)  
  408f4a:	popa   
  408f4b:	sbb    DWORD PTR [esp+ecx*4],eax
  408f4e:	pop    ebp
  408f4f:	(bad)  
  408f50:	lock pop edx
  408f52:	(bad)  
  408f53:	popa   
  408f54:	repz les esi,FWORD PTR [ecx]
  408f57:	sbb    ch,ch
  408f59:	rol    al,cl
  408f5b:	imul   eax,edx,0x6a461353
  408f61:	pop    edi
  408f62:	xor    al,0x8f
  408f64:	dec    esi
  408f65:	ins    BYTE PTR es:[edi],dx
  408f66:	jg     0x408fb7
  408f68:	pop    edx
  408f69:	mov    DWORD PTR [ebp-0x40],ebx
  408f6c:	cmc    
  408f6d:	lea    edi,[ecx]
  408f6f:	pop    ebp
  408f70:	scas   eax,DWORD PTR es:[edi]
  408f71:	out    0xdf,al
  408f73:	and    BYTE PTR [ecx+0x121a5a66],al
  408f79:	hlt    
  408f7a:	aaa    
  408f7b:	femms  
  408f7d:	fwait
  408f7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408f7f:	jb     0x408fbf
  408f81:	push   ds
  408f82:	jge    0x408fa9
  408f84:	sbb    BYTE PTR [ecx],ah
  408f86:	mov    ds:0xdf60d5d5,al
  408f8b:	pop    esp
  408f8c:	imul   eax,DWORD PTR ds:0xf802b9ed,0xffffffdb
  408f93:	ins    DWORD PTR es:[edi],dx
  408f94:	sbb    eax,0x391f2ed9
  408f99:	mov    edx,0x95e970df
  408f9e:	mov    ch,0x59
  408fa0:	sub    BYTE PTR [eax-0x733c7f65],0xc2
  408fa7:	add    eax,0x88cffe48
  408fac:	out    dx,eax
  408fad:	outs   dx,DWORD PTR ds:[esi]
  408fae:	mov    ds:0xa773a11f,al
  408fb3:	sub    dl,al
  408fb5:	and    eax,0x9
  408fb8:	fidivr DWORD PTR [edx+0x28692df]
  408fbe:	adc    ch,BYTE PTR [edi]
  408fc0:	mov    al,0x8f
  408fc2:	push   es
  408fc3:	scas   eax,DWORD PTR es:[edi]
  408fc4:	in     al,dx
  408fc5:	xchg   ah,ah
  408fc7:	add    eax,0x601ff3af
  408fcc:	xchg   BYTE PTR [eax+0x62],dl
  408fcf:	dec    eax
  408fd0:	in     al,dx
  408fd1:	dec    ebp
  408fd2:	sar    ebx,0xf0
  408fd5:	mov    bl,0xa5
  408fd7:	mov    edx,0x8173b38
  408fdc:	push   cs
  408fdd:	rcr    eax,1
  408fdf:	push   edi
  408fe0:	inc    ecx
  408fe1:	inc    esp
  408fe2:	dec    esi
  408fe3:	js     0x408fda
  408fe5:	sub    al,0x2d
  408fe7:	cmp    dl,BYTE PTR [esi-0x6d942d4a]
  408fed:	popa   
  408fee:	loope  0x40902f
  408ff0:	retf   
  408ff1:	arpl   bp,cx
  408ff3:	arpl   WORD PTR [edi-0x65],si
  408ff6:	jecxz  0x40904e
  408ff8:	sar    DWORD PTR [esi],1
  408ffa:	call   0xece6:0x65f679f9
  409001:	mov    es:0xb41f984d,eax
  409007:	xor    DWORD PTR [esi+0x4790a3f3],edx
  40900d:	and    al,0x41
  40900f:	ret    0x7af5
  409012:	into   
  409013:	js     0x409018
  409015:	adc    eax,0x2241bc68
  40901a:	mov    ecx,0x19693410
  40901f:	inc    ebx
  409020:	out    0x16,eax
  409022:	rcl    BYTE PTR [ebx],1
  409024:	retf   0xdf05
  409027:	neg    BYTE PTR [eax]
  409029:	push   0xffffffac
  40902b:	jne    0x40907a
  40902d:	dec    ebp
  40902e:	adc    ebp,DWORD PTR [eax]
  409030:	es xchg esp,eax
  409032:	push   esp
  409033:	adc    cl,BYTE PTR [esi]
  409035:	aam    0x67
  409037:	inc    esp
  409038:	jmp    FWORD PTR [eax+edi*8-0x3730af69]
  40903f:	inc    ebx
  409040:	out    dx,eax
  409041:	pop    edx
  409042:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409043:	or     DWORD PTR [edx+0x20],edi
  409046:	(bad)  [ebp+0x1aeb7e45]
  40904c:	cmc    
  40904d:	adc    edi,DWORD PTR [esi+0x4c]
  409050:	cmp    bl,ch
  409052:	fdivr  DWORD PTR ds:0x1ee0a25
  409058:	cs int3 
  40905a:	aam    0x88
  40905c:	xchg   edx,eax
  40905d:	xchg   esi,eax
  40905e:	dec    ecx
  40905f:	ret    
  409060:	or     edi,edx
  409062:	ror    DWORD PTR [ebx+0x3f],cl
  409065:	inc    ebp
  409066:	(bad)  
  409067:	pop    ds
  409068:	clc    
  409069:	test   BYTE PTR ss:[esi-0x6355923c],dh
  409070:	inc    ebp
  409071:	fadd   DWORD PTR [ebx-0x7b]
  409074:	pop    edx
  409075:	cmp    BYTE PTR [eax],dh
  409077:	dec    edi
  409078:	mov    esp,0x864f6d4f
  40907d:	mov    ds:0xea902946,eax
  409082:	cmp    dh,BYTE PTR [edi]
  409084:	lahf   
  409085:	pop    ebp
  409086:	add    ecx,DWORD PTR [ecx]
  409088:	test   al,0xfd
  40908a:	and    ebx,esp
  40908c:	xchg   ebp,eax
  40908d:	sbb    cl,BYTE PTR [eax-0x60]
  409090:	js     0x409063
  409092:	in     eax,dx
  409093:	mov    edi,0xd7a55769
  409098:	adc    esi,DWORD PTR [eax+0x436f9f]
  40909e:	es mov ecx,0x19ca523e
  4090a4:	jp     0x4090c7
  4090a6:	sbb    bh,BYTE PTR [eax+0x15e8e944]
  4090ac:	cld    
  4090ad:	daa    
  4090ae:	pop    ecx
  4090af:	pop    eax
  4090b0:	lahf   
  4090b1:	push   esp
  4090b2:	ins    DWORD PTR es:[edi],dx
  4090b3:	clc    
  4090b4:	push   ecx
  4090b5:	pop    ebp
  4090b6:	adc    al,0x35
  4090b8:	test   ch,ah
  4090ba:	daa    
  4090bb:	iret   
  4090bc:	retf   0x959f
  4090bf:	jp     0x409084
  4090c1:	scas   al,BYTE PTR es:[edi]
  4090c2:	stos   BYTE PTR es:[edi],al
  4090c3:	inc    edx
  4090c4:	inc    eax
  4090c5:	pop    ebx
  4090c6:	push   eax
  4090c7:	jmp    0x40907b
  4090c9:	jne    0x4090bb
  4090cb:	xor    BYTE PTR [eax+0x3d],0x7
  4090cf:	push   edi
  4090d0:	mov    eax,0x464c1a03
  4090d5:	aad    0xa9
  4090d7:	mov    al,0x3d
  4090d9:	and    ecx,DWORD PTR [ebx]
  4090db:	fldenv [edx]
  4090dd:	js     0x409082
  4090df:	inc    esi
  4090e0:	push   ebx
  4090e1:	loopne 0x4090fc
  4090e3:	sbb    esp,esi
  4090e5:	push   ebx
  4090e6:	call   0x35a641dc
  4090eb:	mov    eax,gs
  4090ed:	mov    bh,0xbd
  4090ef:	add    esi,DWORD PTR [edx+0x64]
  4090f2:	sbb    BYTE PTR [eax],ch
  4090f4:	sub    edx,DWORD PTR ds:0xe0f481bd
  4090fa:	xor    eax,0x5b11345f
  4090ff:	sbb    al,0x1b
  409101:	aam    0x53
  409103:	or     edi,DWORD PTR [eax+0x7061afd9]
  409109:	jmp    0x409125
  40910b:	gs hlt 
  40910d:	inc    eax
  40910e:	push   esi
  40910f:	outs   dx,BYTE PTR ds:[esi]
  409110:	ror    dh,1
  409112:	scas   eax,DWORD PTR es:[edi]
  409113:	imul   ecx,DWORD PTR [edi+0x47260db1],0x5b
  40911a:	rcl    DWORD PTR [edx],cl
  40911c:	push   es
  40911d:	jns    0x409136
  40911f:	adc    al,0x2b
  409121:	ja     0x4090cd
  409123:	mov    cl,0x7f
  409125:	fstp   st(5)
  409127:	popf   
  409128:	retf   0x7721
  40912b:	arpl   bp,ax
  40912d:	outs   dx,BYTE PTR ds:[esi]
  40912e:	cmc    
  40912f:	ins    DWORD PTR es:[edi],dx
  409130:	push   ecx
  409131:	xor    al,0x8f
  409133:	and    ecx,DWORD PTR [ebp+0x21]
  409136:	adc    ch,dl
  409138:	push   ecx
  409139:	sahf   
  40913a:	imul   DWORD PTR [edi-0x75b39f5b]
  409140:	push   esi
  409141:	mov    edx,ebx
  409143:	push   ss
  409144:	ins    DWORD PTR es:[edi],dx
  409145:	test   al,0x6b
  409147:	icebp  
  409148:	bound  edx,QWORD PTR [edi]
  40914a:	das    
  40914b:	call   0x2fe635c6
  409150:	inc    edi
  409151:	or     DWORD PTR [esi+0xb],esi
  409154:	fcom   DWORD PTR [edx]
  409156:	cmp    dh,BYTE PTR [ebp+0x29]
  409159:	mov    ch,0x24
  40915b:	das    
  40915c:	cli    
  40915d:	in     eax,0x1c
  40915f:	xchg   esi,eax
  409160:	cmp    dh,BYTE PTR [ebx-0x39f641e2]
  409166:	adc    al,0xc0
  409168:	mov    cl,bl
  40916a:	or     BYTE PTR [edx+0x48],dh
  40916d:	sbb    BYTE PTR [edx],dh
  40916f:	rol    DWORD PTR [ecx+0x2e],0x7e
  409173:	test   BYTE PTR [esi+0x13da48d0],0xa3
  40917a:	retf   
  40917b:	and    eax,0x99e038f6
  409180:	scas   eax,DWORD PTR es:[edi]
  409181:	scas   eax,DWORD PTR es:[edi]
  409182:	aad    0xc4
  409184:	push   0x89b3e887
  409189:	jecxz  0x409126
  40918b:	loopne 0x4091a9
  40918d:	rcl    BYTE PTR [esi-0x3fa4ca2e],1
  409193:	inc    esi
  409194:	(bad)  
  409195:	and    eax,DWORD PTR [edx+esi*4+0x2d]
  409199:	inc    ecx
  40919a:	repz jno 0x4091d3
  40919d:	(bad)  
  40919e:	rol    BYTE PTR [edx],1
  4091a0:	idiv   BYTE PTR [eax-0x1c44f4f4]
  4091a6:	sub    BYTE PTR [ebx-0xc],al
  4091a9:	dec    edi
  4091aa:	xchg   BYTE PTR [edi+edx*2],bh
  4091ad:	dec    esi
  4091ae:	retf   
  4091af:	mov    bl,BYTE PTR [esi-0x6d1b1482]
  4091b5:	push   ecx
  4091b6:	xor    cl,cl
  4091b8:	dec    edx
  4091b9:	xchg   esp,eax
  4091ba:	daa    
  4091bb:	js     0x409225
  4091bd:	mov    edx,0xd678397b
  4091c2:	jns    0x4091a5
  4091c4:	fsubrp st(7),st
  4091c6:	sbb    ebp,DWORD PTR [esi+0x5c992f6b]
  4091cc:	movaps XMMWORD PTR [esi-0x38],xmm4
  4091d0:	sbb    eax,0xb6f3b499
  4091d5:	imul   BYTE PTR [edx+0x3c]
  4091d8:	rcr    DWORD PTR [ebx],1
  4091da:	xor    esp,DWORD PTR [esi]
  4091dc:	leave  
  4091dd:	sbb    DWORD PTR [ecx-0x7f],ebp
  4091e0:	fdivr  QWORD PTR [esi+0x375a890]
  4091e6:	stos   DWORD PTR es:[edi],eax
  4091e7:	and    DWORD PTR [ecx-0x4db10351],0x49
  4091ee:	leave  
  4091ef:	sub    edi,DWORD PTR [eax+esi*1]
  4091f2:	fstp   TBYTE PTR [esi-0x1b18dbab]
  4091f8:	test   eax,0xec31309e
  4091fd:	out    dx,al
  4091fe:	out    0xf3,al
  409200:	loope  0x40920c
  409202:	sub    eax,0xb4751add
  409207:	pop    ds
  409208:	push   DWORD PTR ds:0x9035f684
  40920e:	sbb    edx,esi
  409210:	cs aas 
  409212:	xchg   ecx,eax
  409213:	mov    al,ds:0x9eb0cab8
  409218:	cmp    DWORD PTR [edx+0x640ac16e],esi
  40921e:	cmp    bl,BYTE PTR [edi+0x2d52b79]
  409224:	cmp    BYTE PTR [ecx+0x575ed004],ch
  40922a:	or     BYTE PTR [eax-0x1e],dh
  40922d:	mov    dl,BYTE PTR [ebx-0x23eb888b]
  409233:	dec    ebx
  409234:	sti    
  409235:	sub    BYTE PTR [eax-0x5a],bl
  409238:	test   dh,al
  40923a:	cmp    DWORD PTR [edx-0x18fabc7d],ecx
  409240:	mov    edi,0x59064a5c
  409245:	div    BYTE PTR [edi]
  409247:	in     al,dx
  409248:	repz mov ebp,es
  40924b:	(bad)  
  40924c:	mov    ah,0xce
  40924e:	ds push ds
  409250:	sub    cl,BYTE PTR [esi-0x48]
  409253:	push   es
  409254:	pushf  
  409255:	cmp    dh,BYTE PTR [esi]
  409257:	sub    DWORD PTR [ebx+0x21],eax
  40925a:	or     cl,BYTE PTR [ebp-0x3b]
  40925d:	ret    0x422f
  409260:	sub    DWORD PTR [edx-0x1468c0d6],0x4c
  409267:	xchg   esp,esp
  409269:	retf   
  40926a:	xor    edi,0x76
  40926d:	and    BYTE PTR [esi],bh
  40926f:	xor    DWORD PTR [ebx+0x3b],edx
  409272:	cmp    esi,ebx
  409274:	lock dec edx
  409276:	mov    esp,es
  409278:	bnd ja 0x409243
  40927b:	push   ebx
  40927c:	jl     0x4092f4
  40927e:	push   0x65f89e4
  409283:	xor    ebp,DWORD PTR [ebp+edx*4+0x17ce5ed]
  40928a:	lea    eax,[esi+0x96f731b]
  409290:	es pushf 
  409292:	jnp    0x4092ca
  409294:	mov    ch,0x93
  409296:	and    ch,BYTE PTR [eax-0x676b2e0e]
  40929c:	je     0x4092eb
  40929e:	inc    ebp
  40929f:	pop    ebx
  4092a0:	jb     0x4092af
  4092a2:	inc    ebx
  4092a3:	and    dl,BYTE PTR [eax]
  4092a5:	jle    0x40926e
  4092a7:	mov    eax,0x19a56965
  4092ac:	mov    eax,ds:0x8c50b94f
  4092b1:	and    DWORD PTR ds:0x7890c13e,ecx
  4092b7:	repnz xchg ebp,eax
  4092b9:	mov    ah,0xbd
  4092bb:	add    eax,0xf0877230
  4092c0:	std    
  4092c1:	push   edx
  4092c2:	inc    edx
  4092c3:	out    0x7a,al
  4092c5:	mov    esp,0xc642511f
  4092ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4092cb:	pop    ebx
  4092cc:	enter  0x9c2,0xcd
  4092d0:	clc    
  4092d1:	push   0xffffffd2
  4092d3:	and    edi,edx
  4092d5:	and    ebx,ecx
  4092d7:	sbb    eax,0xf632215e
  4092dc:	push   eax
  4092dd:	mov    al,0xf
  4092df:	jno    0x40933f
  4092e1:	repz push 0xea799251
  4092e7:	mov    ah,0x19
  4092e9:	jle    0x4092ef
  4092eb:	adc    edx,esp
  4092ed:	(bad)  
  4092ef:	(bad)  
  4092f0:	mov    dh,0x5d
  4092f2:	and    ebx,DWORD PTR [ecx+esi*8]
  4092f5:	sub    ch,BYTE PTR [esi+0x391c5dc5]
  4092fb:	fisubr DWORD PTR [ecx]
  4092fd:	repnz mov eax,ds:0xde0b4dbe
  409303:	pop    edx
  409304:	push   esi
  409305:	lahf   
  409306:	jne    0x4092ec
  409308:	xchg   ecx,eax
  409309:	sbb    edi,DWORD PTR [edi+0x10]
  40930c:	mov    esi,0x1700963b
  409311:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409312:	push   ebx
  409313:	call   DWORD PTR [eax+0x22]
  409316:	xor    DWORD PTR [edx-0x3e],ebp
  409319:	retf   0xb85f
  40931c:	test   al,0x48
  40931e:	ja     0x409339
  409320:	outs   dx,DWORD PTR ds:[esi]
  409321:	mov    esp,0x729d3b75
  409326:	aad    0x5b
  409328:	loop   0x409373
  40932a:	mov    ch,0x72
  40932c:	jmp    DWORD PTR ds:0xbe531c7a
  409332:	and    edx,ebp
  409334:	jle    0x4093b2
  409336:	ret    
  409337:	loope  0x40935d
  409339:	data16 mov cl,0x80
  40933c:	int    0x78
  40933e:	xor    bh,ah
  409340:	and    esi,DWORD PTR [edx+0xe]
  409343:	scas   al,BYTE PTR es:[edi]
  409344:	dec    ebx
  409345:	fild   QWORD PTR [edi]
  409347:	call   0x27e6:0xcf232ee9
  40934e:	dec    edi
  40934f:	jno    0x409363
  409351:	push   0x64f18387
  409356:	rep stos BYTE PTR es:[edi],al
  409358:	push   edi
  409359:	jl     0x40935c
  40935b:	sar    dl,cl
  40935d:	push   cs
  40935e:	cmp    esp,DWORD PTR [ecx-0x32ffe681]
  409364:	sbb    DWORD PTR ds:0xa1cdc45d,ecx
  40936a:	push   edi
  40936b:	mov    al,ds:0x478b2d79
  409370:	jnp    0x409372
  409372:	shr    BYTE PTR [esi],1
  409374:	cmp    eax,0xabaf9761
  409379:	fucomi st,st(6)
  40937b:	and    BYTE PTR [esi+edi*2],ah
  40937e:	cmp    ch,BYTE PTR [edx-0x1ca3e96b]
  409384:	sbb    bl,BYTE PTR [esi+0x18e08196]
  40938a:	jl     0x4093a0
  40938c:	lods   eax,DWORD PTR ds:[esi]
  40938d:	(bad)  
  40938e:	jmp    0x4093cf
  409390:	sar    DWORD PTR [ebp+0x5d],1
  409393:	stos   BYTE PTR es:[edi],al
  409394:	inc    esp
  409395:	mov    DWORD PTR [ebx+0x47ed5ac6],ebx
  40939b:	(bad)  
  40939c:	sti    
  40939d:	mov    BYTE PTR [edi],dh
  40939f:	jae    0x4093dd
  4093a1:	adc    cl,BYTE PTR [ebp+edi*8-0x34]
  4093a5:	popa   
  4093a6:	outs   dx,BYTE PTR ds:[esi]
  4093a7:	shl    bl,cl
  4093a9:	mov    bl,0xf8
  4093ab:	dec    edx
  4093ac:	and    al,BYTE PTR [edx+0x613fce29]
  4093b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4093b3:	jno    0x409347
  4093b5:	and    al,BYTE PTR [ecx+ecx*1]
  4093b8:	int3   
  4093b9:	cld    
  4093ba:	out    0x9b,al
  4093bc:	xor    al,0xd9
  4093be:	add    eax,0xa1953d67
  4093c3:	test   ah,bl
  4093c5:	out    0xfa,eax
  4093c7:	jecxz  0x4093a4
  4093c9:	lahf   
  4093ca:	lods   eax,DWORD PTR ds:[esi]
  4093cb:	into   
  4093cc:	xor    bl,BYTE PTR [ebx]
  4093ce:	ss adc eax,ebx
  4093d1:	mov    bl,0x4d
  4093d3:	inc    ecx
  4093d4:	or     BYTE PTR [edi+edi*2],cl
  4093d7:	cmc    
  4093d8:	call   0xbb84:0x9ba17d4d
  4093df:	pop    ecx
  4093e0:	dec    eax
  4093e1:	pop    eax
  4093e2:	int    0xd2
  4093e4:	(bad)  
  4093e5:	pop    esi
  4093e6:	loopne 0x409397
  4093e8:	jecxz  0x4093f6
  4093ea:	gs mov bl,0xd0
  4093ed:	inc    DWORD PTR [eax]
  4093ef:	xor    eax,esp
  4093f1:	xchg   edi,eax
  4093f2:	jo     0x40945c
  4093f4:	cmp    dh,ch
  4093f6:	or     al,0xb7
  4093f8:	arpl   WORD PTR [esi+edx*4-0x63],sp
  4093fc:	add    eax,0xc329f29b
  409401:	(bad)  
  409402:	test   cl,0xc0
  409405:	(bad)  
  409406:	xor    edi,DWORD PTR [ecx+0x73601b7e]
  40940c:	adc    DWORD PTR ds:0xfc69c308,eax
  409412:	sbb    cl,BYTE PTR [esi+edi*8-0x77]
  409416:	iret   
  409417:	dec    edx
  409418:	sub    eax,0x5ee75f93
  40941d:	push   esp
  40941e:	popa   
  40941f:	or     al,0xfb
  409421:	stos   BYTE PTR es:[edi],al
  409422:	xchg   esp,eax
  409423:	aaa    
  409424:	xchg   esi,eax
  409425:	xchg   ecx,eax
  409426:	adc    BYTE PTR [edi-0x5948b533],bh
  40942c:	pop    ss
  40942d:	adc    eax,DWORD PTR [eax+0x3d1dff43]
  409433:	lahf   
  409434:	push   0xfffffff0
  409436:	add    al,BYTE PTR [eax]
  409438:	pop    eax
  409439:	ret    0xf88f
  40943c:	ins    DWORD PTR es:[edi],dx
  40943d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40943e:	push   ss
  40943f:	mov    ch,dl
  409441:	inc    edx
  409442:	fidiv  DWORD PTR ss:[edi]
  409445:	call   0xb85e:0x1da220f1
  40944c:	fwait
  40944d:	neg    DWORD PTR [esi+ebp*2-0x16]
  409451:	jae    0x409416
  409453:	sub    ch,BYTE PTR [ebx]
  409455:	cld    
  409456:	dec    ebp
  409457:	loopne 0x409488
  409459:	fsubr  QWORD PTR [edi+0x5a]
  40945c:	repnz mov ah,0x8e
  40945f:	mov    ebp,0x74610297
  409464:	iret   
  409465:	adc    ah,cl
  409467:	out    dx,eax
  409468:	push   0x16379096
  40946d:	jae    0x4094bc
  40946f:	mov    cs,edi
  409471:	inc    eax
  409472:	push   esp
  409473:	std    
  409474:	inc    eax
  409475:	or     DWORD PTR [eax-0x27],eax
  409478:	neg    DWORD PTR ds:[ecx-0x6308fd2e]
  40947f:	icebp  
  409480:	dec    esi
  409481:	add    bl,BYTE PTR [esi-0x11]
  409484:	in     al,dx
  409485:	dec    esi
  409486:	sbb    BYTE PTR [edi+0x30],ah
  409489:	xor    dh,BYTE PTR [edx+0x7eb6f6]
  40948f:	xor    BYTE PTR [eax],bh
  409491:	push   edi
  409492:	jno    0x4094db
  409494:	pop    es
  409495:	xchg   ebx,eax
  409496:	lods   al,BYTE PTR ds:[esi]
  409497:	(bad)  [esi]
  409499:	cmp    BYTE PTR [ebp+0x50d217e5],cl
  40949f:	jne    0x4094cd
  4094a1:	cld    
  4094a2:	hlt    
  4094a3:	push   esp
  4094a4:	cmp    BYTE PTR [ebx+0x6bf33896],ch
  4094aa:	dec    ebx
  4094ab:	fiadd  WORD PTR [edi]
  4094ad:	or     ebx,DWORD PTR [edi+0x95f4d76]
  4094b3:	and    di,WORD PTR [edi+0x4d]
  4094b7:	or     BYTE PTR [edx],al
  4094b9:	shl    DWORD PTR [edi+0x1b],0xf6
  4094bd:	adc    al,0x78
  4094bf:	and    ebp,eax
  4094c1:	push   0x32b3ba81
  4094c6:	mov    dl,0xc0
  4094c8:	aam    0x84
  4094ca:	add    al,0xcd
  4094cc:	or     DWORD PTR [edi-0x77699751],esp
  4094d2:	js     0x40951b
  4094d4:	pop    es
  4094d5:	mov    dl,0x1d
  4094d7:	pop    ecx
  4094d8:	iret   
  4094d9:	(bad)  
  4094da:	mov    cl,0x50
  4094dc:	jg     0x4094ec
  4094de:	fs jge 0x40946c
  4094e1:	mov    eax,ds:0x692964cb
  4094e6:	out    0x8b,al
  4094e8:	push   ebp
  4094e9:	and    DWORD PTR [edi+0x20f81410],ebx
  4094ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4094f0:	pop    ebx
  4094f1:	fdivr  QWORD PTR [ecx]
  4094f3:	xchg   edx,eax
  4094f4:	jp     0x4094ec
  4094f6:	sub    eax,0xb4d72f65
  4094fb:	inc    ecx
  4094fc:	hlt    
  4094fd:	out    0xe9,al
  4094ff:	fcomip st,st(6)
  409501:	je     0x4094fc
  409503:	mov    dh,0x13
  409505:	pop    ebp
  409506:	fdiv   DWORD PTR [eax]
  409508:	popf   
  409509:	adc    eax,esi
  40950b:	mov    ah,0x96
  40950d:	inc    eax
  40950e:	sbb    ebp,DWORD PTR [esi]
  409510:	xchg   esi,eax
  409511:	pop    esp
  409512:	mov    dh,0xfb
  409514:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409515:	push   ebx
  409516:	inc    ecx
  409517:	cmc    
  409518:	push   ebx
  409519:	lods   eax,DWORD PTR ds:[esi]
  40951a:	pop    eax
  40951b:	pop    bp
  40951d:	cmp    bh,dh
  40951f:	fiadd  DWORD PTR [ebx+edi*8-0x40]
  409523:	retf   0xec88
  409526:	jnp    0x4094dc
  409528:	clc    
  409529:	fwait
  40952a:	lods   al,BYTE PTR ds:[esi]
  40952b:	pop    ds
  40952c:	test   eax,esp
  40952e:	enter  0xbb0,0x5c
  409532:	mov    ebx,0xd415ab7
  409537:	push   es
  409538:	fdivr  DWORD PTR [esi-0x9]
  40953b:	es retf 
  40953d:	sub    al,0x5b
  40953f:	aaa    
  409540:	jecxz  0x409595
  409542:	push   ecx
  409543:	in     eax,dx
  409544:	cmp    DWORD PTR [ecx-0x62c6a95d],ebp
  40954a:	sbb    bh,BYTE PTR [ecx-0x47146caa]
  409550:	test   BYTE PTR [ebp+0x25],dl
  409553:	cmp    esi,DWORD PTR [edi-0x39]
  409556:	push   eax
  409557:	add    BYTE PTR [ecx+0x17209cf5],bl
  40955d:	xchg   ecx,eax
  40955e:	loopne 0x4095bb
  409560:	jmp    0x1517:0xe2c8557a
  409567:	shr    BYTE PTR [eax-0x3824a2b],0xa
  40956e:	ins    DWORD PTR es:[edi],dx
  40956f:	outs   dx,DWORD PTR ds:[esi]
  409570:	je     0x409559
  409572:	push   eax
  409573:	aas    
  409574:	inc    esp
  409575:	push   esi
  409576:	mov    dh,ah
  409578:	cmp    BYTE PTR [edx],dh
  40957a:	repz dec edx
  40957c:	xchg   ebx,eax
  40957d:	aad    0xf0
  40957f:	cmp    DWORD PTR [esi+eiz*1+0x568fd3d9],edi
  409586:	inc    ebp
  409587:	and    bl,BYTE PTR [esi+0x81a4b47]
  40958d:	stc    
  40958e:	push   0xffffffe2
  409590:	mov    dl,0x9a
  409592:	(bad)  
  409593:	aas    
  409594:	jnp    0x4095d0
  409596:	cdq    
  409597:	int3   
  409598:	jmp    0x932c3fa9
  40959d:	jge    0x409608
  40959f:	push   ebp
  4095a0:	out    0x4e,eax
  4095a2:	mov    dh,0xf1
  4095a4:	mov    ecx,0x3c3eb315
  4095a9:	push   ds
  4095aa:	xchg   edi,eax
  4095ab:	les    edi,FWORD PTR [ebp-0x3b]
  4095ae:	sub    al,0xc
  4095b0:	call   0x2218:0x4b81cfac
  4095b7:	iret   
  4095b8:	mov    dh,ah
  4095ba:	cwde   
  4095bb:	jmp    0xf4f9:0xc6ab59f8
  4095c2:	push   es
  4095c3:	mov    edx,0x2ba2f826
  4095c8:	sbb    eax,0xcd94251
  4095cd:	repnz dec esp
  4095cf:	or     DWORD PTR [ecx+0x2c061e76],eax
  4095d5:	test   BYTE PTR [esi+0x51],al
  4095d8:	pop    ebx
  4095d9:	xor    dl,cl
  4095db:	cmp    DWORD PTR [ebp-0x43],edi
  4095de:	add    ah,BYTE PTR [edx+0x2a0f9c2]
  4095e4:	add    edi,eax
  4095e6:	jne    0x40965b
  4095e8:	enter  0xdbc9,0xd3
  4095ec:	bound  ebx,QWORD PTR [ebx*1-0x48c272e0]
  4095f3:	adc    al,0xd8
  4095f5:	jbe    0x409602
  4095f7:	push   0xffffff89
  4095f9:	mov    al,0xa3
  4095fb:	out    0x2e,eax
  4095fd:	mul    eax
  4095ff:	mov    al,ds:0x834f71f6
  409604:	pop    edi
  409605:	mov    cl,BYTE PTR [ebx]
  409607:	xchg   ebx,eax
  409608:	dec    edi
  409609:	pusha  
  40960a:	pop    eax
  40960b:	aad    0x3a
  40960d:	sbb    cl,BYTE PTR [edx]
  40960f:	(bad)  
  409610:	jge    0x409674
  409612:	xchg   esp,eax
  409613:	xlat   BYTE PTR ds:[ebx]
  409615:	cdq    
  409616:	pop    ebp
  409617:	cdq    
  409618:	jo     0x409650
  40961a:	dec    ebx
  40961b:	adc    cl,BYTE PTR [ecx-0x7d]
  40961e:	lea    eax,[eax-0x61d50803]
  409624:	les    ebx,FWORD PTR [edi-0x6e]
  409627:	ds xor al,0x51
  40962a:	xchg   esp,eax
  40962b:	(bad)  
  40962c:	cwde   
  40962d:	xor    eax,0x4cc56820
  409632:	int3   
  409633:	pop    ecx
  409634:	push   fs
  409636:	leave  
  409637:	pop    ebp
  409638:	es rcr eax,1
  40963b:	loopne 0x40961d
  40963d:	out    0x2d,eax
  40963f:	ret    
  409640:	mov    bl,0x1
  409642:	and    al,0x4e
  409644:	mov    esp,0x8c54442c
  409649:	and    ch,0x37
  40964c:	ror    al,0x25
  40964f:	xor    DWORD PTR [edi],edx
  409651:	cmp    al,0xca
  409653:	shr    BYTE PTR [ebx+0x3a5dcad6],0x4f
  40965a:	adc    BYTE PTR [ebp-0x24abfa53],dh
  409660:	push   0xffffffdd
  409662:	adc    ebp,edx
  409664:	lea    esp,[eax+0x743a9640]
  40966a:	push   ebx
  40966b:	sub    BYTE PTR [ecx+0x758c0d13],bh
  409671:	jno    0x4095f6
  409673:	enter  0xec35,0x46
  409677:	inc    ebp
  409678:	popa   
  409679:	(bad)  
  40967a:	mov    cl,0x19
  40967c:	mov    edi,0x16ccc16
  409681:	not    DWORD PTR [ebx+0xb]
  409684:	mov    dl,0x4e
  409686:	ins    DWORD PTR es:[edi],dx
  409687:	or     DWORD PTR [ecx+ebp*2-0x1c3ac69a],eax
  40968e:	test   eax,0x31c987df
  409693:	pop    esi
  409694:	aaa    
  409695:	mov    ebp,0xac688e8
  40969a:	jns    0x409691
  40969c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40969d:	mov    ebp,0x9e8f88f6
  4096a2:	std    
  4096a3:	cmp    dl,BYTE PTR [esi+0x7d79307d]
  4096a9:	(bad)  
  4096aa:	js     0x409692
  4096ac:	pop    ecx
  4096ad:	push   eax
  4096ae:	scas   eax,DWORD PTR es:[edi]
  4096af:	fldenv [eax]
  4096b1:	pop    edx
  4096b2:	enter  0x1c8f,0xf8
  4096b6:	(bad)  
  4096b7:	in     eax,dx
  4096b8:	xchg   edx,eax
  4096b9:	adc    BYTE PTR [ecx+eiz*8+0x3],ah
  4096bd:	daa    
  4096be:	idiv   BYTE PTR [eax+0xc]
  4096c1:	push   esp
  4096c2:	inc    esp
  4096c3:	outs   dx,DWORD PTR ds:[esi]
  4096c4:	aaa    
  4096c5:	inc    ecx
  4096c6:	jp     0x40972c
  4096c8:	or     eax,0xccd2cd7f
  4096cd:	mov    dl,0x31
  4096cf:	stos   DWORD PTR es:[edi],eax
  4096d0:	cmp    ebx,ebp
  4096d2:	sub    BYTE PTR [ebp-0x56],0xd0
  4096d6:	out    0x2,al
  4096d8:	sar    BYTE PTR [ebx],cl
  4096da:	sbb    al,ch
  4096dc:	inc    eax
  4096dd:	imul   ecx,DWORD PTR [ecx-0x5f80783a],0x628b9bf7
  4096e7:	(bad)  
  4096e8:	mov    ds:0xb3de8369,eax
  4096ed:	mov    esp,0x84ed5332
  4096f2:	stos   DWORD PTR es:[edi],eax
  4096f3:	xor    eax,0x550763ee
  4096f8:	out    dx,eax
  4096f9:	inc    eax
  4096fa:	shl    BYTE PTR [edi],1
  4096fc:	dec    ebp
  4096fd:	push   ebx
  4096fe:	and    eax,eax
  409700:	adc    edi,eax
  409702:	sub    eax,0x5ef15f6f
  409707:	or     ah,BYTE PTR ds:0x81631fc2
  40970d:	ins    DWORD PTR es:[edi],dx
  40970e:	sub    eax,0x5f738014
  409713:	xchg   ebx,eax
  409714:	pop    ebp
  409715:	and    cl,BYTE PTR [edx]
  409717:	xchg   esi,eax
  409718:	inc    esp
  409719:	mov    WORD PTR [edx],cs
  40971b:	xchg   esp,eax
  40971c:	xchg   DWORD PTR [ebx-0x2b2fcfb0],eax
  409722:	xlat   BYTE PTR ds:[ebx]
  409723:	call   0x3e62:0xf5f8d2ba
  40972a:	leave  
  40972b:	dec    eax
  40972c:	iret   
  40972d:	in     al,0xbc
  40972f:	ins    BYTE PTR es:[edi],dx
  409730:	gs adc al,0xde
  409733:	fist   WORD PTR [ebx]
  409735:	push   ss
  409736:	sbb    dl,BYTE PTR [ecx]
  409738:	repnz sbb eax,0xb0d6f10
  40973e:	sub    dh,dh
  409740:	neg    BYTE PTR [ecx+eax*2+0x2d]
  409744:	idiv   esp
  409746:	fdiv   DWORD PTR [esi]
  409748:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409749:	jp     0x4096eb
  40974b:	imul   edi,DWORD PTR [ebp-0x54dbec0],0xfffffff4
  409752:	mov    bl,0x7a
  409754:	stos   BYTE PTR es:[edi],al
  409755:	pop    esp
  409756:	or     ebp,DWORD PTR [ebx]
  409758:	cmp    BYTE PTR [esi+0x4a],ah
  40975b:	add    ebx,eax
  40975d:	inc    edx
  40975e:	fnstenv [esi-0x72498cb2]
  409764:	sub    BYTE PTR [esi-0x3d],0x40
  409768:	aad    0x6c
  40976a:	fisub  DWORD PTR [esi]
  40976c:	mov    ebx,0xa80e0181
  409771:	lgs    edx,FWORD PTR [ebx+ecx*1+0x2dc066fc]
  409779:	ins    BYTE PTR es:[edi],dx
  40977a:	and    eax,0x5a7b6154
  40977f:	dec    ebp
  409780:	cmp    al,0x62
  409782:	xchg   ebx,eax
  409783:	shl    ah,cl
  409785:	fst    DWORD PTR [ebx+0x33]
  409788:	sub    BYTE PTR [edi-0x78],ch
  40978b:	stos   DWORD PTR es:[edi],eax
  40978c:	into   
  40978d:	mov    WORD PTR [edx-0x1bb90f4d],sp
  409794:	mov    ds:0xee58967c,al
  409799:	stos   DWORD PTR es:[edi],eax
  40979a:	test   al,0xe7
  40979c:	loopne 0x4097f4
  40979e:	inc    edi
  40979f:	push   esp
  4097a0:	fidiv  DWORD PTR [edi]
  4097a2:	dec    edx
  4097a3:	loop   0x4097ef
  4097a5:	inc    ebp
  4097a6:	mov    ch,0xa
  4097a8:	mov    esi,0xfbfd2afe
  4097ad:	dec    DWORD PTR [eax-0x761f1bb1]
  4097b3:	mov    ?,edi
  4097b5:	ins    BYTE PTR es:[edi],dx
  4097b6:	bound  eax,QWORD PTR [ecx-0x50]
  4097b9:	jo     0x409814
  4097bb:	or     DWORD PTR ds:0x3ef7d5fd,esp
  4097c1:	mov    ecx,0x182248bd
  4097c6:	jno    0x4097eb
  4097c8:	or     BYTE PTR [esp+ebp*4],al
  4097cb:	xlat   BYTE PTR ds:[ebx]
  4097cc:	out    dx,eax
  4097cd:	jae    0x4097a9
  4097cf:	pop    ss
  4097d0:	and    bl,BYTE PTR [ebp-0x10]
  4097d3:	jmpw   0x740a
  4097d7:	in     al,dx
  4097d8:	pop    eax
  4097d9:	adc    BYTE PTR [edx+0xe],cl
  4097dc:	sub    eax,0x11b575ac
  4097e1:	jne    0x4097e5
  4097e3:	xchg   DWORD PTR [eax],ebx
  4097e5:	out    0x42,eax
  4097e7:	test   eax,0x9dc10dc8
  4097ec:	or     eax,0xf2aaf06d
  4097f1:	fwait
  4097f2:	mov    cl,0x3c
  4097f4:	outs   dx,DWORD PTR ds:[esi]
  4097f5:	inc    eax
  4097f6:	or     BYTE PTR [ebx],0x45
  4097f9:	stc    
  4097fa:	mov    cl,0xf
  4097fc:	ds ret 
  4097fe:	xchg   esi,eax
  4097ff:	mov    esp,0x592538f7
  409804:	test   eax,0xbf551a74
  409809:	inc    eax
  40980a:	(bad)  
  40980b:	data16 adc al,0x3d
  40980e:	es xor al,0xce
  409811:	or     ebx,DWORD PTR [edi+0x44]
  409814:	dec    ebp
  409815:	or     BYTE PTR [edx],ch
  409817:	in     al,0xc5
  409819:	jb     0x409857
  40981b:	xor    DWORD PTR [edi+0x16128a81],ecx
  409821:	push   esp
  409822:	mov    ecx,ss
  409824:	adc    eax,0x4d352efd
  409829:	lea    ebp,[ecx]
  40982b:	aas    
  40982c:	(bad)  
  40982d:	(bad)  
  40982e:	jb     0x409831
  409830:	sti    
  409831:	(bad)  
  409832:	cmp    ch,bh
  409834:	xor    ecx,DWORD PTR [bp+di-0x16a5]
  409839:	les    esp,FWORD PTR [ebx+edi*8+0x4ed6bb5e]
  409840:	rsqrtps xmm6,XMMWORD PTR [esi]
  409843:	outs   dx,BYTE PTR ds:[esi]
  409844:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  409846:	test   DWORD PTR [ecx-0x240b56c1],edx
  40984c:	mov    ebx,0x63eace37
  409851:	test   al,0xa1
  409853:	scas   eax,DWORD PTR es:[edi]
  409854:	jecxz  0x4097db
  409856:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409857:	pushf  
  409858:	ins    BYTE PTR es:[edi],dx
  409859:	fcmovnbe st,st(5)
  40985b:	shr    BYTE PTR [esi+0x19902963],cl
  409861:	aaa    
  409862:	sar    bh,0x60
  409865:	cmp    DWORD PTR [edx-0x4f],ebx
  409868:	inc    ecx
  409869:	in     eax,0x78
  40986b:	add    BYTE PTR [esi],cl
  40986d:	div    BYTE PTR [eax+0x7a]
  409870:	push   edx
  409871:	cld    
  409872:	dec    ebp
  409873:	sub    BYTE PTR [ecx],ch
  409875:	arpl   WORD PTR ds:0x62ead82a,ax
  40987b:	pop    esp
  40987c:	pop    ss
  40987d:	sbb    al,0xc0
  40987f:	frstor es:[edi-0x7d6fac81]
  409886:	mov    esp,0x1517581b
  40988b:	adc    ch,BYTE PTR [edx-0x45f8d14d]
  409891:	(bad)
  409894:	sbb    bl,BYTE PTR [esi+0x35]
  409897:	out    dx,eax
  409898:	push   ebx
  409899:	add    ah,dh
  40989b:	add    edi,DWORD PTR [edi+0x6b]
  40989e:	mov    bl,0xa2
  4098a0:	lock out dx,eax
  4098a2:	jno    0x409871
  4098a4:	push   eax
  4098a5:	jne    0x4098ef
  4098a7:	sub    eax,0xfbcecc36
  4098ac:	push   edi
  4098ad:	cmp    ebp,DWORD PTR [eax]
  4098af:	mov    ds:0xd002d851,eax
  4098b4:	mov    ebx,DWORD PTR [ecx-0x24b355b2]
  4098ba:	xchg   ebx,eax
  4098bb:	jmp    0x4098cb
  4098bd:	das    
  4098be:	dec    edx
  4098bf:	pop    ebp
  4098c0:	inc    ecx
  4098c1:	and    esi,esp
  4098c3:	push   0xc6b59e19
  4098c8:	fs div dl
  4098cb:	lods   al,BYTE PTR ds:[esi]
  4098cc:	and    bh,dl
  4098ce:	rcr    eax,cl
  4098d0:	xchg   edx,eax
  4098d1:	retf   0xf117
  4098d4:	ds pop esi
  4098d6:	out    dx,al
  4098d7:	popa   
  4098d8:	adc    ah,BYTE PTR [eax+0x18]
  4098db:	sar    BYTE PTR [ecx+0x5adc460e],1
  4098e1:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  4098e3:	push   0x689aaa3
  4098e8:	jecxz  0x40992d
  4098ea:	(bad)  
  4098ec:	arpl   WORD PTR [edi+0x78],si
  4098ef:	jp     0x409916
  4098f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4098f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4098f3:	call   0x7964:0xf7baad5d
  4098fa:	sub    edi,DWORD PTR [ebp+0x65ee050c]
  409900:	arpl   ax,di
  409902:	dec    edx
  409903:	pop    es
  409904:	leave  
  409905:	and    BYTE PTR [esi-0xae1c0da],0x61
  40990c:	dec    edx
  40990d:	sub    al,0x9d
  40990f:	add    BYTE PTR [edi-0x20],dh
  409912:	sbb    eax,0x1c831efb
  409917:	adc    bh,bh
  409919:	pop    ebx
  40991a:	dec    esp
  40991b:	cmp    edi,esi
  40991d:	rcl    DWORD PTR [esi-0x43],cl
  409920:	clc    
  409921:	jns    0x409956
  409923:	js     0x409932
  409925:	xor    eax,0x46b2a790
  40992a:	jae    0x40994d
  40992c:	stos   BYTE PTR es:[edi],al
  40992d:	dec    eax
  40992e:	mov    esi,0xd035231b
  409933:	mov    esi,0x6faebc66
  409938:	adc    eax,0x34b0c0b
  40993d:	mov    edx,0x7909e444
  409942:	out    0xb9,eax
  409944:	cli    
  409945:	or     edx,ebx
  409947:	adc    BYTE PTR [eax],al
  409949:	sbb    eax,0x37da1935
  40994e:	cli    
  40994f:	repnz sub DWORD PTR [eax],edi
  409952:	and    esp,DWORD PTR [ebx+0x5c]
  409955:	inc    edi
  409956:	test   DWORD PTR [edi-0x6845938c],ebx
  40995c:	jle    0x409900
  40995e:	xchg   esi,eax
  40995f:	jne    0x4099ac
  409961:	adc    al,0x46
  409963:	mov    dl,0x38
  409965:	inc    DWORD PTR cs:[edi-0x3d]
  409969:	mov    bl,0x90
  40996b:	pop    ss
  40996c:	cmc    
  40996d:	inc    esp
  40996e:	icebp  
  40996f:	push   esp
  409970:	scas   al,BYTE PTR es:[edi]
  409971:	in     eax,dx
  409972:	fst    st(1)
  409974:	arpl   cx,ax
  409976:	mov    ch,0xa1
  409978:	fwait
  409979:	add    DWORD PTR [edx-0x36],esp
  40997c:	push   es
  40997d:	mov    bl,0xd5
  40997f:	sub    DWORD PTR [ebx],edx
  409981:	jne    0x40990b
  409983:	mov    ds:0x73a8e50,al
  409988:	ret    
  409989:	popa   
  40998a:	hlt    
  40998b:	xor    dh,BYTE PTR [ebx-0x4363462a]
  409991:	jno    0x40993c
  409993:	int    0x83
  409995:	or     BYTE PTR [edx-0x130968b9],0x8b
  40999c:	fdivr  DWORD PTR [ebx+0x8aa7547]
  4099a2:	jmp    DWORD PTR [esi+0x6]
  4099a5:	and    BYTE PTR [edi+edx*4],ah
  4099a8:	jp     0x409973
  4099aa:	xchg   ecx,eax
  4099ab:	pop    edx
  4099ac:	fisub  WORD PTR [esp+edi*4+0x3e27537]
  4099b3:	mov    ch,0xd4
  4099b5:	ss enter 0x2ac6,0x89
  4099ba:	inc    ecx
  4099bb:	rcr    DWORD PTR [ebx+0x564a0c58],1
  4099c1:	test   al,0xbc
  4099c3:	push   ebp
  4099c4:	pop    edi
  4099c5:	stc    
  4099c6:	stc    
  4099c7:	in     al,0xe2
  4099c9:	lods   al,BYTE PTR ds:[esi]
  4099ca:	xchg   esi,eax
  4099cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4099cc:	pop    ss
  4099cd:	loopne 0x4099cf
  4099cf:	fistp  WORD PTR [ecx]
  4099d1:	mov    ebx,0x998e5c46
  4099d6:	cmp    BYTE PTR [ebp+0x253bdd18],dh
  4099dc:	or     al,BYTE PTR [ebx]
  4099de:	pop    ds
  4099df:	retf   
  4099e0:	aas    
  4099e1:	and    ebp,DWORD PTR [esi+0x14d4681f]
  4099e7:	mov    bl,0xf0
  4099e9:	jbe    0x409a4e
  4099eb:	xchg   ecx,eax
  4099ec:	push   esi
  4099ed:	xor    edi,DWORD PTR [edx]
  4099ef:	ss into 
  4099f1:	mov    eax,0xc46d2ba4
  4099f6:	outs   dx,DWORD PTR ds:[esi]
  4099f7:	inc    edx
  4099f8:	mov    dh,0x3
  4099fa:	into   
  4099fb:	loope  0x4099fc
  4099fd:	mov    WORD PTR [ebp-0x38],?
  409a00:	jle    0x4099b0
  409a02:	xchg   edx,eax
  409a03:	fs xchg esp,eax
  409a05:	cmp    eax,DWORD PTR [ebp-0x7d]
  409a08:	add    edx,DWORD PTR [ebp+0x54de4f6c]
  409a0e:	call   0x5131:0x5946c742
  409a15:	test   DWORD PTR [edi-0x4d],edx
  409a18:	xor    al,al
  409a1a:	bound  eax,QWORD PTR [ebp+eax*2+0x8]
  409a1e:	push   es
  409a1f:	push   ds
  409a20:	fist   DWORD PTR [ecx]
  409a22:	fwait
  409a23:	mov    esi,0x40eb498b
  409a28:	cmp    esp,DWORD PTR [eax]
  409a2a:	jl     0x409a63
  409a2c:	out    0x9a,al
  409a2e:	adc    eax,0xcbd60032
  409a33:	test   al,0xd8
  409a35:	mov    esp,0x7a92cd9e
  409a3a:	dec    edi
  409a3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409a3c:	inc    ebx
  409a3d:	aas    
  409a3e:	shl    BYTE PTR [eax+0x2b5e462],1
  409a44:	lea    esp,[edi]
  409a46:	or     DWORD PTR [ebp-0x20],esi
  409a49:	inc    eax
  409a4a:	push   esp
  409a4b:	xchg   edx,eax
  409a4c:	dec    esi
  409a4d:	pop    ss
  409a4e:	xor    DWORD PTR [edx],esi
  409a50:	rcr    DWORD PTR [edx+eiz*2],1
  409a53:	pop    ebp
  409a54:	in     eax,dx
  409a55:	jl     0x409a7a
  409a57:	mov    eax,0x3e07eee2
  409a5c:	mov    eax,ds:0x9e3d5883
  409a61:	or     al,0x93
  409a63:	xor    esp,ebp
  409a65:	test   BYTE PTR [edi],cl
  409a67:	leave  
  409a68:	add    al,0x6
  409a6a:	in     al,dx
  409a6b:	mov    al,0xa2
  409a6d:	dec    ebp
  409a6e:	mov    ch,0xe5
  409a70:	xor    al,0x61
  409a72:	(bad)  
  409a73:	jns    0x409a3d
  409a75:	xchg   ebx,eax
  409a76:	out    0xc8,al
  409a78:	neg    DWORD PTR [ebp-0x63]
  409a7b:	ret    0x986f
  409a7e:	ins    BYTE PTR es:[edi],dx
  409a7f:	in     al,0xb8
  409a81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409a82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409a83:	pop    eax
  409a84:	imul   DWORD PTR [edx+0x633cc98f]
  409a8a:	jo     0x409a7d
  409a8c:	stos   BYTE PTR es:[edi],al
  409a8d:	aaa    
  409a8e:	pop    es
  409a8f:	or     DWORD PTR [esi+0xf],ecx
  409a92:	jae    0x409a71
  409a94:	into   
  409a95:	jmp    0x409a77
  409a97:	mov    edi,0x40fdf52f
  409a9c:	dec    ebx
  409a9d:	loopne 0x409a7c
  409a9f:	(bad)  
  409aa0:	call   0x53df:0x16f93b6
  409aa7:	fldl2e 
  409aa9:	sbb    eax,0x9c074a72
  409aae:	dec    ecx
  409aaf:	adc    bl,cl
  409ab1:	dec    ebx
  409ab2:	aaa    
  409ab3:	cli    
  409ab4:	mov    BYTE PTR [edi+0x1128bd9e],al
  409aba:	add    edi,DWORD PTR ds:0x4ce4cb43
  409ac0:	icebp  
  409ac1:	mov    gs,edx
  409ac3:	xor    BYTE PTR [eax-0x5],bl
  409ac6:	jne    0x409b1a
  409ac8:	imul   edi,edx,0xd381af84
  409ace:	inc    edi
  409acf:	mov    dl,0xa9
  409ad1:	inc    eax
  409ad2:	stc    
  409ad3:	mov    edi,DWORD PTR [esi]
  409ad5:	sahf   
  409ad6:	mov    edi,DWORD PTR [ebx+0x76]
  409ad9:	dec    ebp
  409ada:	jecxz  0x409b45
  409adc:	jge    0x409aa0
  409ade:	outs   dx,BYTE PTR ds:[esi]
  409adf:	inc    ebx
  409ae0:	cmp    ecx,DWORD PTR [edx+0xf]
  409ae3:	fimul  DWORD PTR [edi-0x3]
  409ae6:	adc    BYTE PTR [ebx+0x53ca9ba3],dh
  409aec:	out    0x9a,al
  409aee:	sub    bl,ah
  409af0:	(bad)  
  409af1:	sbb    eax,0x750b7783
  409af6:	xchg   edx,eax
  409af7:	mov    eax,0x2ffefab
  409afc:	add    eax,0x74d655ca
  409b01:	out    0xb8,al
  409b03:	dec    eax
  409b04:	xchg   esi,eax
  409b05:	aaa    
  409b06:	stc    
  409b07:	sub    eax,0x7cdacd18
  409b0c:	mov    dh,0x7a
  409b0e:	jmp    0x409ad5
  409b10:	fisub  DWORD PTR [eax-0x3d]
  409b13:	lods   eax,DWORD PTR ds:[esi]
  409b14:	xor    eax,0x54486b
  409b19:	cmp    al,0x8f
  409b1b:	lods   al,BYTE PTR ds:[esi]
  409b1c:	add    eax,0x42cf5908
  409b21:	and    eax,0x6aafb54d
  409b26:	jbe    0x409ac8
  409b28:	dec    esi
  409b29:	adc    DWORD PTR [edi+ebx*8],edi
  409b2c:	(bad)  
  409b2d:	les    eax,FWORD PTR [esp+eax*8-0x7]
  409b31:	test   eax,0xe06863e8
  409b36:	sahf   
  409b37:	or     al,0x31
  409b39:	rcl    eax,cl
  409b3b:	or     BYTE PTR [ebp-0x3d],dh
  409b3e:	or     ebx,esi
  409b40:	fbstp  TBYTE PTR [edi-0x3b36117]
  409b46:	jmp    0xb0712461
  409b4b:	pop    ecx
  409b4c:	push   cs
  409b4d:	or     ebx,DWORD PTR [ebx+0x6d]
  409b50:	inc    esp
  409b51:	out    0xe4,al
  409b53:	fwait
  409b54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409b55:	enter  0x591a,0x1c
  409b59:	in     eax,dx
  409b5a:	outs   dx,BYTE PTR ds:[esi]
  409b5b:	loopne 0x409b2f
  409b5d:	xchg   edi,eax
  409b5e:	cli    
  409b5f:	sar    bl,cl
  409b61:	aam    0xd5
  409b63:	sub    al,0xfb
  409b65:	and    DWORD PTR [edi+ebp*2],ebp
  409b68:	xchg   edi,eax
  409b69:	and    al,0xa2
  409b6b:	ret    0x1b5f
  409b6e:	jbe    0x409bae
  409b70:	mov    eax,0x1aa418d4
  409b75:	add    bh,dh
  409b77:	fwait
  409b78:	mov    ah,0xe7
  409b7a:	fist   WORD PTR [ecx+ebx*1]
  409b7d:	push   0x72cfd02f
  409b82:	mov    eax,ds:0x3d69756f
  409b87:	pop    esp
  409b88:	rcl    DWORD PTR [ebx+0x61ce34ce],cl
  409b8e:	arpl   WORD PTR [edx+0x1d],dx
  409b91:	outs   dx,BYTE PTR ds:[esi]
  409b92:	pop    es
  409b93:	imul   edx,DWORD PTR [ebp-0x2eb5e4e3],0x4a
  409b9a:	popf   
  409b9b:	leave  
  409b9c:	push   0xffffffb2
  409b9e:	retf   
  409b9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409ba0:	push   0x1d
  409ba2:	mov    ecx,0xe78fddb2
  409ba7:	ds push edi
  409ba9:	mov    edx,0xf65abef1
  409bae:	xchg   esp,eax
  409baf:	push   0xffffffd6
  409bb1:	dec    ebp
  409bb2:	iret   
  409bb3:	out    dx,eax
  409bb4:	mov    ebp,0xc41df8ad
  409bb9:	out    0x8d,eax
  409bbb:	sbb    al,0x72
  409bbd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409bbe:	vmwrite edx,DWORD PTR [eax+edi*1+0x4]
  409bc3:	dec    edx
  409bc4:	xchg   esi,eax
  409bc5:	mov    ds:0x478ced77,al
  409bca:	xchg   BYTE PTR [esi-0x2],dl
  409bcd:	or     ah,BYTE PTR [ebp+0x759ad26d]
  409bd3:	stos   BYTE PTR es:[edi],al
  409bd4:	xor    eax,0x779e65e3
  409bd9:	lods   al,BYTE PTR ds:[esi]
  409bda:	rcl    ebx,1
  409bdc:	loop   0x409b60
  409bde:	frstor [edi+0x3dbef56c]
  409be4:	or     DWORD PTR [edx+0x67],esp
  409be7:	(bad)  
  409be8:	shl    bh,1
  409bea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409beb:	dec    edx
  409bec:	enter  0x4443,0x53
  409bf0:	add    bl,0xf9
  409bf3:	in     eax,dx
  409bf4:	mov    cl,0x86
  409bf6:	(bad)  
  409bf7:	pushf  
  409bf8:	pop    edx
  409bf9:	aad    0xb6
  409bfb:	scas   eax,DWORD PTR es:[edi]
  409bfc:	fs fwait
  409bfe:	pushf  
  409bff:	cwde   
  409c00:	outs   dx,DWORD PTR ds:[esi]
  409c01:	jnp    0x409c6c
  409c03:	mov    ecx,0xe779bafe
  409c08:	cmp    al,0x7c
  409c0a:	mov    ebp,DWORD PTR ds:0x76e01dc0
  409c10:	sub    al,0x70
  409c12:	adc    ebp,ebp
  409c14:	and    bh,BYTE PTR [edi-0x3f]
  409c17:	mov    bl,0xc4
  409c19:	xor    BYTE PTR [bp+0x5],cl
  409c1d:	ins    DWORD PTR es:[edi],dx
  409c1e:	fsubr  QWORD PTR [edi-0x2d85f1a9]
  409c24:	mov    eax,ds:0x2f7b0ffe
  409c29:	or     DWORD PTR [ebp+eiz*1+0x6dd76dd0],esp
  409c30:	pop    ebx
  409c31:	jo     0x409caa
  409c33:	mov    BYTE PTR [edx-0x627435af],cl
  409c39:	fmul   st(3),st
  409c3b:	test   eax,0xe88282c7
  409c40:	mov    dl,0xf6
  409c42:	or     DWORD PTR [ecx],esp
  409c44:	mov    DWORD PTR [eax+ebp*4],edx
  409c47:	fwait
  409c48:	adc    DWORD PTR [ebx+0x1c],ecx
  409c4b:	add    eax,0x1a4fe595
  409c50:	jmp    0x71ad:0x27e64960
  409c57:	je     0x409c75
  409c59:	cmp    dl,BYTE PTR [eax]
  409c5b:	mov    ds:0x2a6add6c,al
  409c60:	shl    DWORD PTR [edx],1
  409c62:	jns    0x409c36
  409c64:	and    al,0xf5
  409c66:	mov    dl,0x9f
  409c68:	pop    esp
  409c69:	cmp    esp,edx
  409c6b:	jns    0x409c27
  409c6d:	cmp    ecx,esi
  409c6f:	je     0x409ceb
  409c71:	(bad)  
  409c72:	aas    
  409c73:	push   0xaa08ce67
  409c78:	cmp    DWORD PTR [edx+0x2f919c3],esp
  409c7e:	retf   
  409c7f:	push   0xfffffff9
  409c81:	aad    0x6d
  409c83:	(bad)  
  409c84:	jns    0x409cb9
  409c86:	sbb    DWORD PTR [edx+0x5f],esi
  409c89:	aaa    
  409c8a:	or     eax,0x9bb3a48a
  409c8f:	icebp  
  409c90:	cld    
  409c91:	retf   
  409c92:	add    eax,0x248d34f0
  409c97:	cmp    edi,DWORD PTR [ebx+ebp*2+0x2fe742ad]
  409c9e:	imul   esi,DWORD PTR [edx+0x40],0xffffffed
  409ca2:	dec    edi
  409ca3:	jl     0x409c7e
  409ca5:	cdq    
  409ca6:	je     0x409d02
  409ca8:	aam    0x88
  409caa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409cab:	xchg   BYTE PTR [esi],ah
  409cad:	ins    BYTE PTR es:[edi],dx
  409cae:	call   0xd76f:0x80fc0c68
  409cb5:	sub    BYTE PTR [esi+0x26],al
  409cb8:	mov    ecx,ebp
  409cba:	mov    BYTE PTR gs:[ebp-0x4f],ah
  409cbe:	jl     0x409d15
  409cc0:	jl     0x409d22
  409cc2:	dec    esp
  409cc3:	cdq    
  409cc4:	or     esp,DWORD PTR [ecx]
  409cc6:	cmp    al,0x24
  409cc8:	adc    dh,bl
  409cca:	test   al,0x2
  409ccc:	out    0xd6,al
  409cce:	xchg   ecx,eax
  409ccf:	movhps xmm2,QWORD PTR [ebp+0x2edbbbc1]
  409cd6:	mov    es,WORD PTR [esi+0x2426c639]
  409cdc:	shl    BYTE PTR [eax],1
  409cde:	mov    ecx,0xdaa87399
  409ce3:	push   ebx
  409ce4:	fdiv   QWORD PTR [esp+ecx*2-0x7f962850]
  409ceb:	sbb    DWORD PTR [edx-0x8e74f72],eax
  409cf1:	dec    esp
  409cf2:	outs   dx,DWORD PTR ds:[esi]
  409cf3:	push   ebp
  409cf4:	jg     0x409c94
  409cf6:	mov    cl,0x7e
  409cf8:	fwait
  409cf9:	xchg   ebp,eax
  409cfa:	mov    ebp,0xfba0464f
  409cff:	mov    edi,0x5b3914e4
  409d04:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  409d06:	and    BYTE PTR ds:0x2a38b2fe,dl
  409d0c:	out    dx,al
  409d0d:	mov    ecx,0xe2e4db87
  409d12:	mov    ch,0x70
  409d14:	jmp    0x24442532
  409d19:	loope  0x409cf0
  409d1b:	lea    edx,[edi+ebp*2+0x72b2dc3e]
  409d22:	(bad)  
  409d23:	out    dx,eax
  409d24:	in     al,dx
  409d25:	add    al,0x22
  409d27:	inc    ebx
  409d28:	mov    DWORD PTR [edi],ebx
  409d2a:	push   edx
  409d2b:	mov    eax,0x18616084
  409d30:	call   0x2eb5fec0
  409d35:	fsubr  DWORD PTR [esi+ebx*1]
  409d38:	jae    0x409cc3
  409d3a:	inc    esp
  409d3b:	sub    dl,dh
  409d3d:	dec    ebx
  409d3e:	pop    edx
  409d3f:	push   ds
  409d40:	retf   
  409d41:	sbb    cl,ah
  409d43:	into   
  409d44:	jno    0x409d0a
  409d46:	mov    bh,0xd2
  409d48:	xor    eax,DWORD PTR fs:[edi]
  409d4b:	sub    edx,ebx
  409d4d:	mov    al,BYTE PTR [esi-0x76afa96f]
  409d53:	add    BYTE PTR [edi],dh
  409d55:	jg     0x409db4
  409d57:	and    esp,DWORD PTR [ecx]
  409d59:	inc    ebx
  409d5a:	mov    BYTE PTR [eax+0x5a],0xb0
  409d5e:	push   esi
  409d5f:	test   BYTE PTR [ebx+0x254990e6],0xa0
  409d66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409d67:	mov    esp,DWORD PTR [esi+ebp*2]
  409d6a:	imul   BYTE PTR [eax-0x6f]
  409d6d:	push   ds
  409d6e:	pop    eax
  409d6f:	mov    ds:0x1e70cfdc,eax
  409d74:	push   ebp
  409d75:	dec    eax
  409d76:	xchg   ebp,eax
  409d77:	push   cs
  409d78:	jns    0x409dab
  409d7a:	xchg   ebp,eax
  409d7b:	pop    esi
  409d7c:	cmp    DWORD PTR [edi],esi
  409d7e:	fild   DWORD PTR ds:0x13927533
  409d84:	mov    DWORD PTR [esi+0x62],edi
  409d87:	sub    BYTE PTR [eax],dh
  409d89:	push   ds
  409d8a:	jnp    0x409dac
  409d8c:	mov    bl,0x3f
  409d8e:	(bad)  
  409d8f:	enter  0x8dd,0x65
  409d93:	mov    edi,0x5cb3e53c
  409d98:	das    
  409d99:	sahf   
  409d9a:	imul   ebx,DWORD PTR [ebx+0x1f87d5ac],0xffffffd1
  409da1:	cmp    DWORD PTR [eax-0x301132f9],0xf1ddd4c8
  409dab:	adc    DWORD PTR [eax+0x2fd631b7],0x30
  409db2:	fwait
  409db3:	dec    eax
  409db4:	sub    BYTE PTR [esi+0x3c],dh
  409db7:	in     eax,dx
  409db8:	into   
  409db9:	(bad)  
  409dba:	pop    ss
  409dbb:	addr16 mov eax,ds:0x6585
  409dbf:	pushf  
  409dc0:	stos   DWORD PTR es:[edi],eax
  409dc1:	pop    esi
  409dc2:	sbb    ecx,DWORD PTR [eax]
  409dc4:	mov    ch,0x9b
  409dc6:	dec    ebp
  409dc7:	daa    
  409dc8:	mov    eax,ds:0xd8d22749
  409dcd:	xchg   ecx,eax
  409dce:	(bad)  
  409dcf:	push   edi
  409dd0:	cwde   
  409dd1:	lods   al,BYTE PTR ds:[esi]
  409dd2:	jmp    0x5f88:0x1d3fd1c4
  409dd9:	out    0x47,al
  409ddb:	mov    ch,0x58
  409ddd:	sahf   
  409dde:	jmp    0x409de5
  409de0:	ret    0xadd0
  409de3:	ret    
  409de4:	push   cs
  409de5:	(bad)  
  409de6:	cmp    eax,0x49f44b73
  409deb:	cs enter 0xd54f,0x46
  409df0:	mov    edi,0xa019a698
  409df5:	(bad)  
  409df7:	stos   BYTE PTR es:[edi],al
  409df8:	scas   eax,DWORD PTR es:[edi]
  409df9:	jle    0x409db6
  409dfb:	int    0xa8
  409dfd:	scas   al,BYTE PTR es:[edi]
  409dfe:	mov    bh,0xcb
  409e00:	hlt    
  409e01:	push   0x26
  409e03:	aam    0xbd
  409e05:	mov    ebx,0xf4b29fba
  409e0a:	xadd   BYTE PTR [esi+0x4f],ch
  409e0e:	push   0x56
  409e10:	pop    ebx
  409e11:	(bad)  
  409e12:	xlat   BYTE PTR ds:[ebx]
  409e13:	mov    bh,0xd1
  409e15:	sub    al,0x57
  409e17:	ror    DWORD PTR [edi+0x1bb53627],0x8b
  409e1e:	dec    ebp
  409e1f:	dec    ebx
  409e20:	ret    0x1c14
  409e23:	lahf   
  409e24:	fidiv  DWORD PTR ds:0xae57afe4
  409e2a:	test   al,0x46
  409e2c:	adc    ecx,esp
  409e2e:	int    0xd5
  409e30:	jp     0x409dda
  409e32:	fmul   DWORD PTR [ecx-0x2e]
  409e35:	das    
  409e36:	push   edx
  409e37:	lock add al,0x79
  409e3a:	aam    0x34
  409e3c:	inc    ebp
  409e3d:	sbb    DWORD PTR [ebp+0x15784b53],0x74
  409e44:	mov    ebp,0xfe466d9
  409e49:	(bad)  
  409e4a:	test   DWORD PTR [ecx+0x9],0xee49330d
  409e51:	mov    esp,0xa42e4c40
  409e56:	and    al,0x8a
  409e58:	inc    DWORD PTR [ebx+0x3a0b0b3b]
  409e5e:	gs xchg ebp,eax
  409e60:	(bad)  
  409e61:	pusha  
  409e62:	sbb    esi,ecx
  409e64:	mov    WORD PTR [edx],es
  409e66:	(bad)  
  409e67:	jno    0x409e6f
  409e69:	fnstsw WORD PTR [esp+eax*4-0x639d2050]
  409e70:	imul   eax,DWORD PTR [edx]
  409e73:	mov    edx,DWORD PTR [ebp-0x4]
  409e76:	xor    edx,ecx
  409e78:	mov    ecx,DWORD PTR [ebp+0x8]
  409e7b:	lea    ecx,[edx+ecx*1+0x3272dd]
  409e82:	cmp    ecx,eax
  409e84:	je     0x409efb
  409e8a:	mov    edi,DWORD PTR [ebp-0x14]
  409e8d:	mov    eax,DWORD PTR [ebp+0x8]
  409e90:	mov    edx,DWORD PTR [ebp+0x14]
  409e93:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  409e97:	mov    ecx,0x7510896
  409e9c:	xor    edx,edx
  409e9e:	xor    edi,ecx
  409ea0:	mov    esi,0x3272dd
  409ea5:	add    edi,esi
  409ea7:	div    edi
  409ea9:	mov    edx,DWORD PTR [ebp-0x4]
  409eac:	xor    edx,ecx
  409eae:	lea    eax,[edx+eax*1+0x3272dd]
  409eb5:	mov    edx,DWORD PTR [ebp+0x8]
  409eb8:	mov    edi,DWORD PTR [ebp-0x20]
  409ebb:	mov    DWORD PTR [edi+edx*4],eax
  409ebe:	mov    eax,DWORD PTR [ebp-0x14]
  409ec1:	mov    edx,DWORD PTR [ebp+0x8]
  409ec4:	xor    eax,ecx
  409ec6:	lea    eax,[eax+edx*1+0x3272dd]
  409ecd:	mov    DWORD PTR [ebp+0x8],eax
  409ed0:	mov    eax,DWORD PTR [ebp-0x14]
  409ed3:	mov    edx,DWORD PTR [ebp+0x14]
  409ed6:	xor    eax,ecx
  409ed8:	add    eax,esi
  409eda:	imul   eax,DWORD PTR [edx]
  409edd:	mov    edx,DWORD PTR [ebp-0x4]
  409ee0:	xor    edx,ecx
  409ee2:	mov    ecx,DWORD PTR [ebp+0x8]
  409ee5:	lea    ecx,[edx+ecx*1+0x3272dd]
  409eec:	cmp    ecx,eax
  409eee:	jne    0x409e8a
  409ef4:	mov    eax,esi
  409ef6:	jmp    0x409f00
  409efb:	mov    eax,0x3272dd
  409f00:	mov    ebx,0x7510896
  409f05:	mov    ecx,DWORD PTR [ebp-0x4]
  409f08:	xor    ecx,ebx
  409f0a:	add    ecx,eax
  409f0c:	mov    DWORD PTR [ebp-0xc],ecx
  409f0f:	mov    ebx,0x65655
  409f14:	add    ebx,0x3234
  409f1a:	xchg   ebx,esi
  409f1c:	xor    ebx,ebx
  409f1e:	push   esi
  409f1f:	mov    esi,ebx
  409f21:	pop    ebx
  409f22:	mov    edx,esi
  409f24:	add    ebx,0x1002
  409f2a:	lea    eax,[ebp-0x10]
  409f2d:	add    edx,eax
  409f2f:	add    edx,0x5
  409f32:	push   edx
  409f33:	inc    esi
  409f34:	pop    ecx
  409f35:	dec    ecx
  409f36:	xchg   ecx,eax
  409f37:	dec    eax
  409f38:	xchg   ecx,eax
  409f39:	dec    ecx
  409f3a:	xchg   ecx,edx
  409f3c:	dec    edx
  409f3d:	push   edx
  409f3e:	mov    edx,ebx
  409f40:	pop    ebx
  409f41:	dec    ebx
  409f42:	call   DWORD PTR [ebx]
  409f44:	cmp    DWORD PTR [ebp+0x10],esi
  409f47:	je     0x409f66
  409f4d:	xchg   edx,eax
  409f4e:	push   0xb
  409f50:	pop    ecx
  409f51:	push   0x4
  409f53:	pop    ebx
  409f54:	inc    ebx
  409f55:	xchg   ebx,ecx
  409f57:	sub    ebx,ecx
  409f59:	xchg   ebx,ecx
  409f5b:	dec    ecx
  409f5c:	dec    ecx
  409f5d:	mov    eax,DWORD PTR [ebp-0x1c]
  409f60:	imul   eax,ecx
  409f63:	add    esp,eax
  409f65:	xchg   edx,eax
  409f66:	push   eax
  409f67:	xor    ebx,ebx
  409f69:	mov    edx,esp
  409f6b:	dec    edx
  409f6c:	inc    ebx
  409f6d:	add    ebx,DWORD PTR [edx+ebx*1]
  409f70:	dec    ebx
  409f71:	xor    edx,edx
  409f73:	add    DWORD PTR [ebp-0xc],ebx
  409f76:	pop    ebx
  409f77:	mov    eax,DWORD PTR [ebp-0xc]
  409f7a:	pop    edi
  409f7b:	pop    esi
  409f7c:	pop    ebx
  409f7d:	leave  
  409f7e:	ret    0x10
  409f81:	push   ebp
  409f82:	mov    ebp,esp
  409f84:	sub    esp,0x7c
  409f87:	xor    ecx,ecx
  409f89:	xor    ecx,DWORD PTR ds:0x42c014
  409f8f:	xor    DWORD PTR ds:0x42d018,ecx
  409f95:	push   esi
  409f96:	push   edi
  409f97:	movzx  edi,WORD PTR ds:0x429014
  409f9e:	adc    edi,DWORD PTR ds:0x42c018
  409fa4:	mov    DWORD PTR ds:0x429014,edi
  409faa:	mov    eax,ds:0x42e435
  409faf:	or     ecx,0x9a5
  409fb5:	mov    DWORD PTR [ebp-0x24],eax
  409fb8:	mov    eax,ds:0x42e541
  409fbd:	mov    DWORD PTR [ebp-0x34],eax
  409fc0:	or     edi,eax
  409fc2:	and    DWORD PTR [ebp-0x30],0x0
  409fc6:	xor    DWORD PTR ds:0x429018,0x17b1
  409fd0:	mov    DWORD PTR [ebp-0x2c],0xf89c85b5
  409fd7:	mov    DWORD PTR [ebp-0x28],0xf89c85b2
  409fde:	mov    eax,DWORD PTR [ebp-0x10]
  409fe1:	mov    ecx,DWORD PTR [ebp-0x10]
  409fe4:	sub    eax,ecx
  409fe6:	mov    DWORD PTR [ebp-0x10],eax
  409fe9:	xor    DWORD PTR [ebp-0x10],0xf89cb5b5
  409ff0:	and    DWORD PTR ds:0x42901c,0x0
  409ffa:	xor    eax,eax
  409ffc:	or     eax,DWORD PTR ds:0x42901c
  40a002:	inc    eax
  40a003:	mov    ds:0x42901c,eax
  40a008:	cmp    DWORD PTR ds:0x42901c,0xb
  40a00f:	jne    0x40a029
  40a015:	push   0x42e14e
  40a01a:	push   DWORD PTR [ebp-0xc]
  40a01d:	push   DWORD PTR [ebp-0x18]
  40a020:	push   DWORD PTR [ebp-0x24]
  40a023:	call   DWORD PTR ds:0x42ed61
  40a029:	cmp    DWORD PTR ds:0x42901c,0xa
  40a030:	jne    0x40a041
  40a036:	mov    eax,ds:0x42901c
  40a03b:	inc    eax
  40a03c:	mov    ds:0x42901c,eax
  40a041:	cmp    DWORD PTR ds:0x42901c,0x13
  40a048:	jb     0x409ffa
  40a04e:	sub    eax,esi
  40a050:	mov    eax,DWORD PTR [ebp-0x18]
  40a053:	mov    ecx,DWORD PTR [ebp-0x18]
  40a056:	sub    eax,ecx
  40a058:	mov    DWORD PTR [ebp-0x18],eax
  40a05b:	and    DWORD PTR ds:0x429000,0x0
  40a065:	mov    edi,DWORD PTR ds:0x429000
  40a06b:	inc    edi
  40a06c:	mov    DWORD PTR ds:0x429000,edi
  40a072:	cmp    DWORD PTR ds:0x429000,0xe
  40a079:	jne    0x40a08f
  40a07f:	push   0x429000
  40a084:	push   0x4a29
  40a089:	call   DWORD PTR ds:0x42ed65
  40a08f:	cmp    DWORD PTR ds:0x429000,0xd
  40a096:	jne    0x40a0ab
  40a09c:	xor    edi,edi
  40a09e:	or     edi,DWORD PTR ds:0x429000
  40a0a4:	inc    edi
  40a0a5:	mov    DWORD PTR ds:0x429000,edi
  40a0ab:	cmp    DWORD PTR ds:0x429000,0x1e
  40a0b2:	jb     0x40a065
  40a0b8:	and    eax,0x2f3f
  40a0bd:	or     DWORD PTR [ebp-0x18],0xf89f05b5
  40a0c4:	mov    eax,DWORD PTR [ebp-0xc]
  40a0c7:	mov    ecx,DWORD PTR [ebp-0xc]
  40a0ca:	or     edi,esi
  40a0cc:	sub    eax,ecx
  40a0ce:	xor    edi,edi
  40a0d0:	xor    edi,DWORD PTR ds:0x42d004
  40a0d6:	and    DWORD PTR ds:0x429008,edi
  40a0dc:	mov    DWORD PTR [ebp-0xc],eax
  40a0df:	sbb    DWORD PTR ds:0x42a018,0x66a3
  40a0e9:	or     DWORD PTR [ebp-0xc],0xf89c85f5
  40a0f0:	adc    DWORD PTR ds:0x42b010,ecx
  40a0f6:	mov    eax,DWORD PTR [ebp-0x1c]
  40a0f9:	mov    ecx,DWORD PTR [ebp-0x1c]
  40a0fc:	xor    esi,esi
  40a0fe:	xor    esi,DWORD PTR ds:0x411fec
  40a104:	mov    edi,DWORD PTR ds:0x411ff8
  40a10a:	sub    edi,esi
  40a10c:	and    esi,DWORD PTR [esi+edi*1]
  40a10f:	sub    eax,ecx
  40a111:	and    DWORD PTR ds:0x42c008,0x0
  40a11b:	mov    ecx,DWORD PTR ds:0x42c008
  40a121:	inc    ecx
  40a122:	mov    DWORD PTR ds:0x42c008,ecx
  40a128:	cmp    DWORD PTR ds:0x42c008,0x16
  40a12f:	jne    0x40a159
  40a135:	push   0x2fca
  40a13a:	push   0x42c014
  40a13f:	push   0x8b86
  40a144:	push   0x42e0af
  40a149:	push   0x5b55
  40a14e:	push   0x1406
  40a153:	call   DWORD PTR ds:0x42ed6d
  40a159:	cmp    DWORD PTR ds:0x42c008,0x10
  40a160:	jb     0x40a11b
  40a166:	add    DWORD PTR ds:0x42a018,ecx
  40a16c:	mov    DWORD PTR [ebp-0x1c],eax
  40a16f:	adc    DWORD PTR ds:0x42d018,ebx
  40a175:	or     DWORD PTR [ebp-0x1c],0xf89c85d5
  40a17c:	mov    eax,DWORD PTR [ebp-0x20]
  40a17f:	mov    ecx,DWORD PTR [ebp-0x20]
  40a182:	mov    DWORD PTR ds:0x42c014,0x17
  40a18c:	cmp    DWORD PTR ds:0x42c014,0x0
  40a193:	je     0x40a1be
  40a199:	cmp    DWORD PTR ds:0x42c014,0x22
  40a1a0:	jne    0x40a1ac
  40a1a6:	call   DWORD PTR ds:0x42ed71
  40a1ac:	mov    esi,DWORD PTR ds:0x42c014
  40a1b2:	dec    esi
  40a1b3:	mov    DWORD PTR ds:0x42c014,esi
  40a1b9:	jmp    0x40a18c
  40a1be:	sub    eax,ecx
  40a1c0:	and    DWORD PTR ds:0x42a004,0x0
  40a1ca:	jmp    0x40a1dc
  40a1cf:	mov    edi,DWORD PTR ds:0x42a004
  40a1d5:	inc    edi
  40a1d6:	mov    DWORD PTR ds:0x42a004,edi
  40a1dc:	cmp    DWORD PTR ds:0x42a004,0x15
  40a1e3:	jae    0x40a220
  40a1e9:	cmp    DWORD PTR ds:0x42a004,0x6
  40a1f0:	jne    0x40a201
  40a1f6:	push   0x42c008
  40a1fb:	call   DWORD PTR ds:0x42ed75
  40a201:	cmp    DWORD PTR ds:0x42a004,0x5
  40a208:	jne    0x40a21b
  40a20e:	mov    edi,DWORD PTR ds:0x42a004
  40a214:	inc    edi
  40a215:	mov    DWORD PTR ds:0x42a004,edi
  40a21b:	jmp    0x40a1cf
  40a220:	mov    DWORD PTR [ebp-0x20],eax
  40a223:	mov    eax,DWORD PTR [ebp-0x2c]
  40a226:	mov    ecx,DWORD PTR [ebp-0x20]
  40a229:	mov    esi,0x7510896
  40a22e:	xor    eax,esi
  40a230:	mov    edi,0x3272dd
  40a235:	add    eax,edi
  40a237:	or     eax,ecx
  40a239:	mov    DWORD PTR [ebp-0x20],eax
  40a23c:	mov    eax,DWORD PTR [ebp-0x4]
  40a23f:	mov    ecx,DWORD PTR [ebp-0x4]
  40a242:	sub    eax,ecx
  40a244:	mov    DWORD PTR [ebp-0x4],eax
  40a247:	or     DWORD PTR [ebp-0x4],0xf89c85be
  40a24e:	mov    eax,DWORD PTR [ebp-0xc]
  40a251:	xor    eax,esi
  40a253:	add    eax,edi
  40a255:	push   eax
  40a256:	mov    eax,DWORD PTR [ebp-0x10]
  40a259:	xor    eax,esi
  40a25b:	add    eax,edi
  40a25d:	push   eax
  40a25e:	mov    eax,DWORD PTR [ebp-0x4]
  40a261:	xor    eax,esi
  40a263:	add    eax,edi
  40a265:	push   eax
  40a266:	lea    eax,[ebp-0x7c]
  40a269:	push   eax
  40a26a:	push   DWORD PTR [ebp-0x2c]
  40a26d:	push   DWORD PTR [ebp-0x28]
  40a270:	call   0x40f163
  40a275:	test   eax,eax
  40a277:	je     0x40a2a5
  40a27d:	lea    eax,[ebp-0x7c]
  40a280:	push   eax
  40a281:	mov    eax,DWORD PTR [ebp-0x28]
  40a284:	xor    eax,esi
  40a286:	add    eax,edi
  40a288:	push   eax
  40a289:	mov    eax,DWORD PTR [ebp-0x24]
  40a28c:	add    eax,0xaa
  40a291:	push   eax
  40a292:	mov    eax,DWORD PTR [ebp-0x24]
  40a295:	mov    eax,DWORD PTR [eax+0x198]
  40a29b:	push   DWORD PTR [eax]
  40a29d:	call   0x40508b
  40a2a2:	mov    DWORD PTR [ebp-0x14],eax
  40a2a5:	lea    eax,[ebp+0x4]
  40a2a8:	mov    DWORD PTR [ebp-0x30],eax
  40a2ab:	mov    eax,DWORD PTR [ebp-0x14]
  40a2ae:	test   eax,eax
  40a2b0:	je     0x40a318
  40a2b6:	lea    eax,[ebp-0x8]
  40a2b9:	mov    DWORD PTR [ebp-0x38],eax
  40a2bc:	mov    eax,DWORD PTR [ebp-0x34]
  40a2bf:	mov    DWORD PTR [ebp-0x8],eax
  40a2c2:	mov    eax,DWORD PTR [ebp-0x8]
  40a2c5:	mov    ecx,DWORD PTR [ebp-0x14]
  40a2c8:	sub    eax,ecx
  40a2ca:	mov    DWORD PTR [ebp-0x8],eax
  40a2cd:	mov    ecx,DWORD PTR [ebp-0x4]
  40a2d0:	xor    ecx,esi
  40a2d2:	mov    eax,0xffcd8d23
  40a2d7:	sub    eax,ecx
  40a2d9:	add    DWORD PTR [ebp-0x8],eax
  40a2dc:	mov    eax,DWORD PTR [ebp-0x8]
  40a2df:	mov    ecx,DWORD PTR [ebp-0x14]
  40a2e2:	mov    DWORD PTR [ecx+0x1],eax
  40a2e5:	mov    eax,DWORD PTR [ebp-0x14]
  40a2e8:	push   DWORD PTR [ebp-0x24]
  40a2eb:	mov    BYTE PTR [eax],0xe9
  40a2ee:	mov    eax,ds:0x42e2b1
  40a2f3:	push   DWORD PTR [eax]
  40a2f5:	push   DWORD PTR ds:0x42e50d
  40a2fb:	push   DWORD PTR ds:0x42e2b9
  40a301:	push   DWORD PTR ds:0x42e4ed
  40a307:	push   DWORD PTR ds:0x42eafd
  40a30d:	push   DWORD PTR [ebp-0x28]
  40a310:	push   DWORD PTR [ebp-0x2c]
  40a313:	mov    eax,DWORD PTR [ebp-0x14]
  40a316:	call   eax
  40a318:	mov    eax,DWORD PTR [ebp-0x30]
  40a31b:	mov    ecx,DWORD PTR ds:0x42e4b1
  40a321:	add    DWORD PTR [eax],ecx
  40a323:	pop    edi
  40a324:	pop    esi
  40a325:	leave  
  40a326:	ret    
  40a327:	push   ebp
  40a328:	mov    ebp,esp
  40a32a:	sub    esp,0x18
  40a32d:	mov    DWORD PTR [ebp-0x10],0xf89f85b5
  40a334:	lea    eax,[ebp+0x14]
  40a337:	mov    DWORD PTR [ebp-0x4],eax
  40a33a:	add    edx,0x781f
  40a340:	push   esi
  40a341:	and    esi,esi
  40a343:	mov    esi,0xf89c85b5
  40a348:	mov    DWORD PTR [ebp-0xc],esi
  40a34b:	lea    eax,[ebp-0xc]
  40a34e:	mov    DWORD PTR [ebp-0x14],eax
  40a351:	mov    eax,DWORD PTR [ebp-0xc]
  40a354:	mov    edx,DWORD PTR [ebp-0x14]
  40a357:	mov    ecx,0x7510896
  40a35c:	and    DWORD PTR ds:0x42d010,0x34d
  40a366:	xor    eax,ecx
  40a368:	sub    DWORD PTR ds:0x42a00c,0x429018
  40a372:	add    eax,0x3272dd
  40a377:	adc    DWORD PTR ds:0x42d00c,0x760b
  40a381:	mov    DWORD PTR [edx],eax
  40a383:	dec    edx
  40a384:	mov    eax,ds:0x42e2ad
  40a389:	sub    DWORD PTR ds:0x429008,ecx
  40a38f:	mov    edx,DWORD PTR [ebp-0x4]
  40a392:	mov    eax,DWORD PTR [eax]
  40a394:	and    DWORD PTR ds:0x42d004,0x42a01c
  40a39e:	add    eax,DWORD PTR [edx]
  40a3a0:	push   edi
  40a3a1:	mov    DWORD PTR [ebp-0x8],eax
  40a3a4:	and    DWORD PTR ds:0x42c008,0x0
  40a3ae:	jmp    0x40a3c0
  40a3b3:	mov    edi,DWORD PTR ds:0x42c008
  40a3b9:	inc    edi
  40a3ba:	mov    DWORD PTR ds:0x42c008,edi
  40a3c0:	cmp    DWORD PTR ds:0x42c008,0x1f
  40a3c7:	jae    0x40a451
  40a3cd:	cmp    DWORD PTR ds:0x42c008,0x25
  40a3d4:	jne    0x40a3e8
  40a3da:	push   0x3550
  40a3df:	push   DWORD PTR [ebp-0x1c]
  40a3e2:	call   DWORD PTR ds:0x42ed35
  40a3e8:	jmp    0x40a3b3
  40a3ed:	and    DWORD PTR ds:0x42d018,0x0
  40a3f7:	jmp    0x40a407
  40a3fc:	mov    eax,ds:0x42d018
  40a401:	inc    eax
  40a402:	mov    ds:0x42d018,eax
  40a407:	cmp    DWORD PTR ds:0x42d018,0x1a
  40a40e:	jae    0x40a451
  40a414:	cmp    DWORD PTR ds:0x42d018,0x8
  40a41b:	jne    0x40a434
  40a421:	push   DWORD PTR [ebp-0x1c]
  40a424:	push   0x42d014
  40a429:	push   0x5fa0
  40a42e:	call   DWORD PTR ds:0x42ed39
  40a434:	cmp    DWORD PTR ds:0x42d018,0x7
  40a43b:	jne    0x40a44c
  40a441:	mov    eax,ds:0x42d018
  40a446:	inc    eax
  40a447:	mov    ds:0x42d018,eax
  40a44c:	jmp    0x40a3fc
  40a451:	mov    edi,DWORD PTR [ebp+0x8]
  40a454:	mov    eax,ds:0x42e435
  40a459:	and    DWORD PTR ds:0x42a00c,0x728
  40a463:	mov    eax,DWORD PTR [eax+0x198]
  40a469:	xor    edi,ecx
  40a46b:	mov    edx,0x3272dd
  40a470:	and    DWORD PTR ds:0x42b010,0x42d000
  40a47a:	add    edi,edx
  40a47c:	mov    DWORD PTR ds:0x429000,0x5af1
  40a486:	cmp    DWORD PTR [eax],edi
  40a488:	je     0x40a49f
  40a48e:	mov    DWORD PTR ds:0x429000,0x225c
  40a498:	mov    eax,DWORD PTR [eax]
  40a49a:	jmp    0x40cc18
  40a49f:	mov    eax,0x3847
  40a4a4:	mov    eax,DWORD PTR [ebp+0x18]
  40a4a7:	cmp    eax,esi
  40a4a9:	mov    DWORD PTR ds:0x429014,0x6496
  40a4b3:	jne    0x40a4d7
  40a4b9:	mov    DWORD PTR ds:0x42b000,0x18c7
  40a4c3:	push   0xf89c85b2
  40a4c8:	mov    DWORD PTR ds:0x42c014,0x18
  40a4d2:	jmp    0x40cc07
  40a4d7:	mov    esi,DWORD PTR [ebp+0x18]
  40a4da:	mov    DWORD PTR ds:0x42b000,ebx
  40a4e0:	mov    eax,0xf89c85b3
  40a4e5:	cmp    esi,eax
  40a4e7:	mov    DWORD PTR ds:0x42b008,0x2007
  40a4f1:	jne    0x40cbf7
  40a4f7:	mov    eax,ds:0x42c008
  40a4fc:	xor    DWORD PTR ds:0x429004,eax
  40a502:	mov    eax,DWORD PTR [ebp+0x10]
  40a505:	dec    esi
  40a506:	xor    eax,ecx
  40a508:	adc    esi,DWORD PTR ds:0x42d008
  40a50e:	add    eax,edx
  40a510:	xor    esi,esi
  40a512:	or     esi,DWORD PTR ds:0x42c008
  40a518:	adc    DWORD PTR ds:0x42d010,esi
  40a51e:	mov    DWORD PTR [ebp-0x18],eax
  40a521:	mov    eax,DWORD PTR [ebp+0xc]
  40a524:	adc    DWORD PTR ds:0x42d010,0x3da6
  40a52e:	mov    esi,DWORD PTR [ebp-0x8]
  40a531:	xor    eax,ecx
  40a533:	add    DWORD PTR ds:0x42d018,0x6859
  40a53d:	add    eax,edx
  40a53f:	imul   eax,DWORD PTR [esi]
  40a542:	mov    esi,DWORD PTR [ebp+0x8]
  40a545:	or     DWORD PTR ds:0x42d014,0x363e
  40a54f:	xor    esi,ecx
  40a551:	mov    DWORD PTR ds:0x42b010,0xc36
  40a55b:	add    esi,edx
  40a55d:	mov    DWORD PTR ds:0x42d010,0x490b
  40a567:	cmp    esi,eax
  40a569:	mov    eax,ds:0x42d018
  40a56e:	mov    eax,DWORD PTR [ebp-0x4]
  40a571:	push   ebx
  40a572:	mov    DWORD PTR ds:0x42a008,0x30a3
  40a57c:	je     0x40a688
  40a582:	mov    DWORD PTR ds:0x42d008,0x4e69
  40a58c:	mov    esi,DWORD PTR [ebp-0x18]
  40a58f:	or     DWORD PTR ds:0x42a01c,0x42c010
  40a599:	add    DWORD PTR [eax],esi
  40a59b:	mov    DWORD PTR ds:0x42b00c,0x14
  40a5a5:	cmp    DWORD PTR ds:0x42b00c,0x0
  40a5ac:	je     0x40a5f7
  40a5b2:	cmp    DWORD PTR ds:0x42b00c,0x3
  40a5b9:	jne    0x40a5cf
  40a5bf:	push   0x42e0a1
  40a5c4:	push   0x42e035
  40a5c9:	call   DWORD PTR ds:0x42ed3d
  40a5cf:	cmp    DWORD PTR ds:0x42b00c,0x4
  40a5d6:	jne    0x40a5e7
  40a5dc:	mov    eax,ds:0x42b00c
  40a5e1:	dec    eax
  40a5e2:	mov    ds:0x42b00c,eax
  40a5e7:	mov    eax,ds:0x42b00c
  40a5ec:	dec    eax
  40a5ed:	mov    ds:0x42b00c,eax
  40a5f2:	jmp    0x40a5a5
  40a5f7:	mov    eax,DWORD PTR [ebp-0x4]
  40a5fa:	mov    DWORD PTR ds:0x42d004,0x12
  40a604:	cmp    DWORD PTR ds:0x42d004,0x0
  40a60b:	je     0x40a64f
  40a611:	cmp    DWORD PTR ds:0x42d004,0x21
  40a618:	jne    0x40a633
  40a61e:	push   0x5688
  40a623:	push   0x5318
  40a628:	push   0x314e
  40a62d:	call   DWORD PTR ds:0x42ed41
  40a633:	mov    esi,DWORD PTR ds:0x42d004
  40a639:	dec    esi
  40a63a:	mov    DWORD PTR ds:0x42d004,esi
  40a640:	jmp    0x40a604
  40a645:	sub    DWORD PTR ds:0x42c010,0x7728
  40a64f:	mov    esi,DWORD PTR [ebp+0xc]
  40a652:	add    DWORD PTR ds:0x42c018,0x42b00c
  40a65c:	xor    esi,ecx
  40a65e:	xor    DWORD PTR ds:0x429020,0x39e1
  40a668:	add    esi,edx
  40a66a:	xor    DWORD PTR ds:0x42b00c,0x429028
  40a674:	imul   esi,DWORD PTR [eax]
  40a677:	mov    DWORD PTR [eax],esi
  40a679:	mov    DWORD PTR ds:0x42d000,0x1b30
  40a683:	jmp    0x40a68f
  40a688:	and    edi,edi
  40a68a:	mov    esi,DWORD PTR [ebp+0x14]
  40a68d:	xor    DWORD PTR [eax],esi
  40a68f:	sbb    eax,edi
  40a691:	mov    eax,DWORD PTR [ebp-0x4]
  40a694:	mov    DWORD PTR ds:0x429020,0x1e
  40a69e:	cmp    DWORD PTR ds:0x429020,0x0
  40a6a5:	je     0x40a6f7
  40a6ab:	cmp    DWORD PTR ds:0x429020,0xf
  40a6b2:	jne    0x40a6cb
  40a6b8:	push   DWORD PTR [ebp-0x24]
  40a6bb:	push   0x42b000
  40a6c0:	push   0x2936
  40a6c5:	call   DWORD PTR ds:0x42ed45
  40a6cb:	cmp    DWORD PTR ds:0x429020,0x10
  40a6d2:	jne    0x40a6e5
  40a6d8:	mov    esi,DWORD PTR ds:0x429020
  40a6de:	dec    esi
  40a6df:	mov    DWORD PTR ds:0x429020,esi
  40a6e5:	mov    esi,DWORD PTR ds:0x429020
  40a6eb:	dec    esi
  40a6ec:	mov    DWORD PTR ds:0x429020,esi
  40a6f2:	jmp    0x40a69e
  40a6f7:	mov    edi,DWORD PTR [ebp+0x10]
  40a6fa:	xor    edi,ecx
  40a6fc:	mov    esi,0xffcd8d23
  40a701:	mov    ebx,esi
  40a703:	sub    ebx,edi
  40a705:	jmp    0x40caae
  40a70a:	inc    ecx
  40a70b:	sbb    al,0x8b
  40a70e:	fwait
  40a70f:	jnp    0x40a702
  40a711:	mov    BYTE PTR [ebx-0xca83f7d],bl
  40a717:	nop
  40a718:	jno    0x40a6af
  40a71a:	ins    DWORD PTR es:[edi],dx
  40a71b:	add    al,0x7a
  40a71d:	jp     0x40a705
  40a71f:	pop    edi
  40a720:	jp     0x40a79c
  40a722:	daa    
  40a723:	(bad)  
  40a724:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a725:	sbb    DWORD PTR [edx-0x4d],0x31866e3b
  40a72c:	lods   eax,DWORD PTR ds:[esi]
  40a72d:	add    BYTE PTR [edi-0x11],bh
  40a730:	and    cl,BYTE PTR [edx-0x74]
  40a733:	jmp    0x40a736
  40a735:	iret   
  40a736:	lds    esp,FWORD PTR ds:0xccddb569
  40a73c:	out    0xbb,eax
  40a73e:	adc    bl,bl
  40a740:	push   cs
  40a741:	mov    dl,0x6
  40a743:	mov    edx,0x5e153ad3
  40a748:	jns    0x40a70f
  40a74a:	jne    0x40a73b
  40a74c:	mov    bl,0x93
  40a74e:	jo     0x40a714
  40a750:	in     eax,0x31
  40a752:	xor    DWORD PTR [ebx+0x796404b2],ebx
  40a758:	ss icebp 
  40a75a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a75b:	adc    eax,esp
  40a75d:	in     al,0x7b
  40a75f:	sbb    eax,0x9e91e46d
  40a764:	pusha  
  40a765:	and    al,0xbf
  40a767:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a768:	cs pop esi
  40a76a:	test   DWORD PTR [esi-0x7a3e0f58],0xfa2dcaf1
  40a774:	adc    BYTE PTR [ebx+0x675ecfb9],dl
  40a77a:	imul   esi,edx,0x14706061
  40a780:	imul   ecx,DWORD PTR [ebp+0x71],0xffffff87
  40a784:	sub    BYTE PTR [eax],dh
  40a786:	push   ecx
  40a787:	es test eax,0xf8bb19f1
  40a78d:	pop    esp
  40a78e:	std    
  40a78f:	sub    dl,BYTE PTR [ecx-0x42001205]
  40a795:	mov    al,0x10
  40a797:	dec    ebp
  40a798:	jmp    0xdfc9e516
  40a79d:	pop    es
  40a79e:	cmc    
  40a79f:	push   ecx
  40a7a0:	int3   
  40a7a1:	sbb    DWORD PTR [edx+eiz*2-0x6e],0x5d
  40a7a6:	call   0x6400ca7b
  40a7ab:	pop    es
  40a7ac:	pop    ss
  40a7ad:	jg     0x40a78f
  40a7af:	(bad)  
  40a7b0:	leave  
  40a7b1:	lea    edx,[esi]
  40a7b3:	add    al,0x8a
  40a7b5:	retf   0xb2d0
  40a7b8:	int3   
  40a7b9:	add    DWORD PTR [ebx+0x4b48c8aa],esp
  40a7bf:	sbb    esp,esp
  40a7c1:	js     0x40a81e
  40a7c3:	mov    edx,0x560b568f
  40a7c8:	adc    DWORD PTR [esi+eax*2],ecx
  40a7cb:	ja     0x40a78a
  40a7cd:	xchg   esp,eax
  40a7ce:	push   edi
  40a7cf:	les    edx,FWORD PTR [eax]
  40a7d1:	retf   
  40a7d2:	mov    esp,0x637ce05d
  40a7d7:	xor    al,0xe3
  40a7d9:	sub    edi,DWORD PTR [edi]
  40a7db:	pop    ecx
  40a7dc:	sub    bh,dl
  40a7de:	stos   BYTE PTR es:[edi],al
  40a7df:	jb     0x40a815
  40a7e1:	push   eax
  40a7e2:	dec    edi
  40a7e3:	inc    ebp
  40a7e4:	inc    edi
  40a7e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a7e6:	in     al,dx
  40a7e7:	mov    gs,WORD PTR [ebx-0x22]
  40a7ea:	push   eax
  40a7eb:	clc    
  40a7ec:	xor    eax,0x1cc53c4b
  40a7f1:	in     al,dx
  40a7f2:	mov    bl,0xc8
  40a7f4:	pop    ebx
  40a7f5:	clc    
  40a7f6:	fs inc eax
  40a7f8:	ins    DWORD PTR es:[edi],dx
  40a7f9:	aas    
  40a7fa:	mov    al,0xd9
  40a7fc:	cs aas 
  40a7fe:	cdq    
  40a7ff:	hlt    
  40a800:	xor    al,0xe4
  40a802:	mov    cl,BYTE PTR [eax]
  40a804:	inc    edx
  40a805:	fdivr  QWORD PTR [edx]
  40a807:	loope  0x40a7fa
  40a809:	scas   al,BYTE PTR es:[edi]
  40a80a:	mov    edx,0x18d74be5
  40a80f:	in     al,0xfa
  40a811:	xchg   edx,ecx
  40a813:	dec    esi
  40a814:	xchg   ebp,eax
  40a815:	dec    ecx
  40a816:	jmp    0x2d57:0x8c1f593b
  40a81d:	xchg   DWORD PTR [ebx],ecx
  40a81f:	dec    esi
  40a820:	mov    dl,0x47
  40a822:	aad    0xe3
  40a824:	int3   
  40a825:	xchg   ecx,eax
  40a826:	repz jl 0x40a828
  40a829:	sub    BYTE PTR [eax],0xf
  40a82c:	or     eax,0xf4b8f082
  40a831:	addr16 push eax
  40a833:	xchg   al,bh
  40a835:	mov    DWORD PTR [edi+0x33312467],ebx
  40a83b:	sbb    al,BYTE PTR [ecx-0x58]
  40a83e:	mov    bl,0x43
  40a840:	jne    0x40a8ac
  40a842:	stc    
  40a843:	push   edx
  40a844:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a845:	int3   
  40a846:	xchg   ebx,eax
  40a847:	add    DWORD PTR [edx*4+0x76b2fe1d],edi
  40a84e:	push   esp
  40a84f:	and    ebx,ebx
  40a851:	or     BYTE PTR [eax+ecx*8-0x31c5e128],dl
  40a858:	inc    edx
  40a859:	inc    ebp
  40a85a:	push   ebp
  40a85b:	add    al,0x36
  40a85d:	fist   WORD PTR [edx+0xd2af3ad]
  40a863:	sti    
  40a864:	shl    BYTE PTR [ecx],0x48
  40a867:	gs xor eax,0x4bee35da
  40a86d:	and    eax,0x88c6c72c
  40a872:	jbe    0x40a8a6
  40a874:	call   DWORD PTR [edx-0x70]
  40a877:	test   al,0xc3
  40a879:	mov    ah,0x13
  40a87b:	sbb    eax,0xb5306c16
  40a880:	jge    0x40a8e5
  40a882:	pop    edi
  40a883:	adc    BYTE PTR ds:0x9f8d1702,dh
  40a889:	les    ebx,FWORD PTR [eax-0x17]
  40a88c:	pop    ecx
  40a88d:	mov    ebx,0x181bd857
  40a892:	lods   al,BYTE PTR ds:[esi]
  40a893:	xchg   ah,dl
  40a895:	out    dx,eax
  40a896:	mov    al,0x7f
  40a898:	test   eax,0x42f4792d
  40a89d:	int    0x36
  40a89f:	xchg   ebp,eax
  40a8a0:	sbb    eax,0x5c7c8a62
  40a8a5:	sub    al,0x4a
  40a8a7:	popa   
  40a8a8:	lods   al,BYTE PTR ds:[esi]
  40a8a9:	sub    eax,0x24eb8475
  40a8ae:	xor    BYTE PTR [edx+0x580e2504],0x76
  40a8b5:	call   0xe42586eb
  40a8ba:	aas    
  40a8bb:	nop
  40a8bc:	fiadd  DWORD PTR [ebp-0x5ba77a5]
  40a8c2:	call   0xf9b8db44
  40a8c7:	neg    DWORD PTR [esi+edi*8]
  40a8ca:	ror    BYTE PTR [edi],0x6
  40a8cd:	dec    edx
  40a8ce:	xchg   BYTE PTR [edx],al
  40a8d0:	add    DWORD PTR [ecx+esi*2+0x2a655d47],edx
  40a8d7:	call   0x5ee2:0x424afb37
  40a8de:	loopne 0x40a893
  40a8e0:	sbb    dh,BYTE PTR [ecx+0x36b4a4d2]
  40a8e6:	mov    ah,0xf0
  40a8e8:	push   cs
  40a8e9:	pop    esi
  40a8ea:	push   ebp
  40a8eb:	or     esi,DWORD PTR [ebx-0x48d81d74]
  40a8f1:	cmp    al,0xd4
  40a8f3:	mov    esp,0x1cd9a7b5
  40a8f8:	js     0x40a94c
  40a8fa:	cwde   
  40a8fb:	pop    es
  40a8fc:	call   0x6e92:0x1a18a4bf
  40a903:	cmp    bh,ch
  40a905:	ins    DWORD PTR es:[edi],dx
  40a906:	xchg   BYTE PTR [ebp-0x27d7fd8],al
  40a90c:	outs   dx,BYTE PTR ds:[esi]
  40a90d:	ins    DWORD PTR es:[edi],dx
  40a90e:	fbld   TBYTE PTR [ebx]
  40a910:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a911:	xchg   ebp,eax
  40a912:	retf   
  40a913:	pop    ebx
  40a914:	mov    ebp,0x76a51203
  40a919:	popf   
  40a91a:	mov    dh,0xbb
  40a91c:	sbb    DWORD PTR [ebp+0x5],esi
  40a91f:	mov    ebx,0x2e56af6b
  40a924:	sbb    dh,BYTE PTR [ebp+0x7f]
  40a927:	into   
  40a928:	fld    QWORD PTR [ecx]
  40a92a:	jecxz  0x40a8ba
  40a92c:	push   0xf65c8188
  40a931:	push   esp
  40a932:	xchg   edi,eax
  40a933:	mov    DWORD PTR [edi-0x2e],edi
  40a936:	nop
  40a937:	(bad)  
  40a939:	imul   ecx,DWORD PTR [eax+0x68],0xffffffa0
  40a93d:	push   ss
  40a93e:	std    
  40a93f:	cmp    ch,BYTE PTR [edx-0x3]
  40a942:	clc    
  40a943:	or     dl,BYTE PTR [edx]
  40a945:	xor    al,0xa5
  40a947:	mov    dh,0xc1
  40a949:	jne    0x40a924
  40a94b:	scas   eax,DWORD PTR es:[edi]
  40a94c:	inc    ecx
  40a94d:	adc    al,BYTE PTR ss:[eax+0x4df1589e]
  40a954:	popa   
  40a955:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a956:	sub    ah,dl
  40a958:	jne    0x40a91d
  40a95a:	lock (bad) 
  40a95c:	and    edx,DWORD PTR [ecx+0x3b]
  40a95f:	jae    0x40a9c9
  40a961:	into   
  40a962:	or     ecx,DWORD PTR [ebx+0x7d]
  40a965:	(bad)  
  40a966:	lea    edi,[esi-0x11d20dec]
  40a96c:	ror    DWORD PTR [eax+0x14cd7838],0xe8
  40a973:	fucomi st,st(7)
  40a975:	mov    ecx,0xfcff0cad
  40a97a:	call   0x17ce:0x17f83fa3
  40a981:	dec    esp
  40a982:	out    dx,eax
  40a983:	pusha  
  40a984:	and    eax,0x261c310b
  40a989:	jns    0x40a9c2
  40a98b:	xor    ch,BYTE PTR [eax+0x14]
  40a98e:	jnp    0x40a92a
  40a990:	jl     0x40a91c
  40a992:	add    ebx,DWORD PTR [ebp+eax*4-0x58]
  40a996:	call   0x7b7d:0x7fcaa313
  40a99d:	in     al,0xe6
  40a99f:	pop    ebx
  40a9a0:	sbb    esi,edi
  40a9a2:	and    bl,BYTE PTR [ebx+0x63fbfb8e]
  40a9a8:	stos   BYTE PTR es:[edi],al
  40a9a9:	cwde   
  40a9aa:	sbb    eax,0xecbc9142
  40a9af:	adc    eax,0x470fc992
  40a9b4:	or     DWORD PTR [ecx-0x52],ebp
  40a9b7:	stc    
  40a9b8:	rol    esi,cl
  40a9ba:	sub    bh,BYTE PTR ds:0x97cb90bc
  40a9c0:	jp     0x40aa0a
  40a9c2:	pop    esp
  40a9c3:	retf   
  40a9c4:	dec    eax
  40a9c5:	fbld   TBYTE PTR [ebx+0x1d]
  40a9c8:	rcr    DWORD PTR [ecx+0x1103b1f],1
  40a9ce:	dec    ebx
  40a9cf:	xchg   DWORD PTR [ebp+0x5898b08e],ecx
  40a9d5:	(bad)  
  40a9d6:	rol    BYTE PTR [edx],1
  40a9d8:	inc    esp
  40a9d9:	sub    ebp,DWORD PTR ds:0xb7db3d12
  40a9df:	div    BYTE PTR [esp+edi*2+0x68]
  40a9e3:	xchg   esp,eax
  40a9e4:	mov    bl,BYTE PTR [ebp+ebp*4+0x2cab641]
  40a9eb:	push   esi
  40a9ec:	out    0x93,eax
  40a9ee:	and    DWORD PTR [ebx+0x3f4fcd21],esi
  40a9f4:	jp     0x40a992
  40a9f6:	loope  0x40aa4b
  40a9f8:	sub    al,0x13
  40a9fa:	idiv   DWORD PTR [ecx+ebx*1-0x5f81b430]
  40aa01:	repz inc BYTE PTR [esi+0x546950c9]
  40aa08:	loopne 0x40aa19
  40aa0a:	sbb    DWORD PTR [eax-0xb],eax
  40aa0d:	jnp    0x40aa6f
  40aa0f:	mov    cl,0x19
  40aa11:	jg     0x40a9b7
  40aa13:	sub    BYTE PTR [ebx-0x46],0xe9
  40aa17:	adc    BYTE PTR [edx+0x33],0x84
  40aa1b:	jp     0x40a9de
  40aa1d:	push   ecx
  40aa1e:	sahf   
  40aa1f:	(bad)  
  40aa20:	push   0xffffffe1
  40aa22:	(bad)  
  40aa23:	shl    BYTE PTR [ecx],cl
  40aa25:	sbb    ch,0x7d
  40aa28:	dec    edx
  40aa29:	repz retf 0x70aa
  40aa2d:	test   BYTE PTR [ecx-0x22],bh
  40aa30:	(bad)  
  40aa31:	lock mov dh,0x20
  40aa34:	mov    ah,0x10
  40aa36:	or     edx,eax
  40aa38:	sbb    eax,0x3ed144e9
  40aa3d:	sub    DWORD PTR [esi],edx
  40aa3f:	pop    es
  40aa40:	pop    ebp
  40aa41:	pop    ecx
  40aa43:	fadd   st,st(3)
  40aa45:	or     al,0x38
  40aa47:	cwde   
  40aa48:	xchg   ebp,eax
  40aa49:	dec    edi
  40aa4a:	or     DWORD PTR [edx-0x77],esi
  40aa4d:	add    eax,esi
  40aa4f:	aam    0x53
  40aa51:	add    edx,ecx
  40aa53:	ss ja  0x40a9f0
  40aa56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aa57:	test   eax,edx
  40aa59:	std    
  40aa5a:	sub    al,0x5
  40aa5c:	push   eax
  40aa5d:	mov    esi,0x1f5cee5a
  40aa62:	je     0x40aa9c
  40aa64:	imul   edx,esi,0x42
  40aa67:	(bad)  
  40aa68:	cs pop esi
  40aa6a:	xchg   DWORD PTR [ecx+eax*4-0x797d402f],esp
  40aa71:	stc    
  40aa72:	and    al,0x53
  40aa74:	not    BYTE PTR [ebx]
  40aa76:	fisttp QWORD PTR [edi]
  40aa78:	or     dl,BYTE PTR [eax-0x6f]
  40aa7b:	mov    ebp,0x3c3b0756
  40aa80:	or     bl,BYTE PTR [ecx+ecx*2]
  40aa83:	xchg   edi,eax
  40aa84:	(bad)  
  40aa85:	aas    
  40aa86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aa87:	int    0x22
  40aa89:	mov    ebp,0xaac4ceed
  40aa8e:	shr    BYTE PTR [esi+0x31],0xb5
  40aa92:	mov    ah,0x1f
  40aa94:	(bad)  
  40aa95:	push   cs
  40aa96:	or     DWORD PTR [ebx+0x37],esp
  40aa99:	jle    0x40aafa
  40aa9b:	scas   al,BYTE PTR es:[edi]
  40aa9c:	mov    ch,0x62
  40aa9e:	aam    0x3a
  40aaa0:	jne    0x40aa48
  40aaa2:	loopne 0x40aad8
  40aaa4:	mov    edx,0x57e59b27
  40aaa9:	(bad)  
  40aaaa:	loop   0x40aa97
  40aaac:	loop   0x40aabf
  40aaae:	fistp  QWORD PTR [edx+0x17]
  40aab1:	out    dx,eax
  40aab2:	scas   eax,DWORD PTR es:[edi]
  40aab3:	in     al,0xba
  40aab5:	imul   ecx,DWORD PTR [edi-0x699c09a9],0x64
  40aabc:	cld    
  40aabd:	jnp    0x40aafa
  40aabf:	mov    ch,0x68
  40aac1:	xor    esp,eax
  40aac3:	sub    eax,0x5f6fe2ae
  40aac8:	aam    0xf1
  40aaca:	rcr    DWORD PTR [ebx],0xb5
  40aacd:	(bad)  
  40aace:	jnp    0x40aae6
  40aad0:	leave  
  40aad1:	lock add al,0x2e
  40aad4:	jb     0x40ab01
  40aad6:	inc    ecx
  40aad7:	xor    al,0xa2
  40aad9:	ficomp DWORD PTR [ecx-0x376cd622]
  40aadf:	call   0x7c6ff3ed
  40aae4:	push   ecx
  40aae5:	popa   
  40aae6:	sbb    al,BYTE PTR [edi-0x65bed2c2]
  40aaec:	pop    edx
  40aaed:	xchg   edx,eax
  40aaee:	fxam   
  40aaf0:	cdq    
  40aaf1:	jmp    0x40aafc
  40aaf3:	lods   eax,DWORD PTR ds:[esi]
  40aaf4:	mov    bh,0x1
  40aaf6:	vxorpd xmm0,xmm0,xmm4
  40aafa:	aaa    
  40aafb:	sub    DWORD PTR [edx],ecx
  40aafd:	push   eax
  40aafe:	aas    
  40aaff:	es aaa 
  40ab01:	sub    esi,DWORD PTR [edx+ebx*1+0x4a8b7203]
  40ab08:	iret   
  40ab09:	ins    BYTE PTR es:[edi],dx
  40ab0a:	addr16 jge 0x40ab5e
  40ab0d:	push   ebx
  40ab0e:	push   edi
  40ab0f:	fadd   QWORD PTR [edx+0x6a]
  40ab12:	xchg   ecx,eax
  40ab13:	fcmovb st,st(6)
  40ab15:	pop    esi
  40ab16:	retf   
  40ab17:	jns    0x40aaf4
  40ab19:	jo     0x40ab59
  40ab1b:	stos   BYTE PTR es:[edi],al
  40ab1c:	mov    ds:0x9da51e23,eax
  40ab21:	adc    ch,al
  40ab23:	xor    BYTE PTR [edx+0x74],cl
  40ab26:	mov    ds,ecx
  40ab28:	pop    es
  40ab29:	xchg   ecx,eax
  40ab2a:	mov    esi,esi
  40ab2c:	pop    eax
  40ab2d:	cmp    eax,0xe37f4c07
  40ab32:	and    eax,0x1fe19420
  40ab37:	data16 mov ah,0xfa
  40ab3a:	add    esp,DWORD PTR [esi+0xa]
  40ab3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ab3e:	aaa    
  40ab3f:	inc    ebp
  40ab40:	jecxz  0x40ab26
  40ab42:	sbb    esi,DWORD PTR [eax-0x79e42c1]
  40ab48:	pop    ebx
  40ab49:	jne    0x40aaff
  40ab4b:	cmp    dl,BYTE PTR [esi]
  40ab4d:	add    al,al
  40ab4f:	fisubr WORD PTR [eax]
  40ab51:	test   BYTE PTR [ebx+0x4c5d2263],bh
  40ab57:	cmc    
  40ab58:	jno    0x40abc4
  40ab5a:	ins    DWORD PTR es:[edi],dx
  40ab5b:	fsub   DWORD PTR [ebx+0x11cf7ea0]
  40ab61:	int    0xf7
  40ab63:	fsub   st(3),st
  40ab65:	dec    eax
  40ab66:	stc    
  40ab67:	dec    eax
  40ab68:	xor    eax,0x19ca576d
  40ab6d:	gs loop 0x40abbc
  40ab70:	call   0x94b5:0x5dca4bf5
  40ab77:	(bad)  
  40ab78:	das    
  40ab79:	ja     0x40ab14
  40ab7b:	and    DWORD PTR [ebp-0x74866bb0],ebx
  40ab81:	push   eax
  40ab82:	out    0x12,al
  40ab84:	out    0x86,al
  40ab86:	call   0x6dfe2d03
  40ab8b:	mov    ebp,0x7eeaee19
  40ab90:	inc    ecx
  40ab91:	dec    ebp
  40ab92:	into   
  40ab93:	ss cmp edx,eax
  40ab96:	cmp    DWORD PTR [eax],ebx
  40ab98:	in     eax,0x75
  40ab9a:	fidiv  DWORD PTR [ecx+esi*1-0x26]
  40ab9e:	lods   al,BYTE PTR ds:[esi]
  40ab9f:	adc    DWORD PTR [edx-0x28],0xff6a0b45
  40aba6:	mov    ah,0x40
  40aba8:	sbb    al,0x1f
  40abaa:	push   0xd29e9d65
  40abaf:	and    ah,ch
  40abb1:	inc    edi
  40abb2:	fcomp  DWORD PTR [ebx-0x249bb4e3]
  40abb8:	push   0x9ce9b5fb
  40abbd:	cmc    
  40abbe:	imul   esp,ecx,0x125d4e01
  40abc4:	or     BYTE PTR [edx-0x53],0xf1
  40abc8:	jg     0x40ac1d
  40abca:	mov    edx,0xcdf1eccb
  40abcf:	or     ecx,DWORD PTR [edi]
  40abd1:	cdq    
  40abd2:	lock das 
  40abd4:	mov    cl,0xec
  40abd6:	std    
  40abd7:	pop    ds
  40abd8:	mov    WORD PTR ds:0x1fb9f72a,?
  40abde:	adc    BYTE PTR [esi+0x4f40dee2],bh
  40abe4:	into   
  40abe5:	jl     0x40aba0
  40abe7:	inc    edx
  40abe8:	fst    DWORD PTR [ebp+0x15ef8a7d]
  40abee:	mov    al,ds:0xe3ca7906
  40abf3:	pop    edi
  40abf4:	(bad)  
  40abf5:	call   0x9e7c8bb5
  40abfa:	mov    dl,0x59
  40abfc:	jo     0x40ac0a
  40abfe:	pop    esi
  40abff:	rol    DWORD PTR [edi+edx*4],1
  40ac02:	popa   
  40ac03:	stos   DWORD PTR es:[edi],eax
  40ac04:	pop    es
  40ac05:	test   DWORD PTR [edi],0x976a4736
  40ac0b:	xchg   edx,eax
  40ac0c:	into   
  40ac0d:	scas   al,BYTE PTR es:[edi]
  40ac0e:	jmp    0x626:0xa2518bd0
  40ac15:	inc    esp
  40ac16:	out    0x4b,eax
  40ac18:	fs fistp WORD PTR gs:[eax+ebx*4-0x668eee5d]
  40ac21:	pop    es
  40ac22:	or     al,ch
  40ac24:	mov    bh,dl
  40ac26:	xlat   BYTE PTR ds:[ebx]
  40ac27:	cmp    BYTE PTR [ecx+0x31],0x2e
  40ac2b:	bound  ebx,QWORD PTR [edx+0x1604c247]
  40ac31:	or     dh,cl
  40ac33:	and    al,ah
  40ac35:	sahf   
  40ac36:	jno    0x40ac77
  40ac38:	dec    edx
  40ac39:	stos   BYTE PTR es:[edi],al
  40ac3a:	cdq    
  40ac3b:	mov    al,ds:0x50a30e9b
  40ac40:	and    DWORD PTR [edi+0x21f36b3e],esi
  40ac46:	adc    ebp,DWORD PTR [edx-0x50065d5d]
  40ac4c:	cmp    ebp,DWORD PTR [ebp-0x7764664e]
  40ac52:	xchg   ah,dl
  40ac54:	enter  0x64c2,0x6f
  40ac58:	cvtpi2ps xmm5,QWORD PTR [edx]
  40ac5b:	mov    BYTE PTR [eax],al
  40ac5d:	loop   0x40aca1
  40ac5f:	into   
  40ac60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ac61:	call   0xde24:0xef0abc95
  40ac68:	into   
  40ac69:	jp     0x40ac7d
  40ac6b:	dec    edi
  40ac6c:	xchg   DWORD PTR [esp+ecx*2-0x4de90e94],ebx
  40ac73:	and    al,0xb8
  40ac75:	call   0x189c14f5
  40ac7a:	pop    es
  40ac7b:	sbb    bh,cl
  40ac7d:	pop    ss
  40ac7e:	pop    ss
  40ac7f:	xor    BYTE PTR [eax-0x48b66d93],bh
  40ac85:	adc    cl,dh
  40ac87:	cli    
  40ac88:	xchg   esp,eax
  40ac89:	ror    cl,0x96
  40ac8c:	push   edi
  40ac8d:	pop    es
  40ac8e:	mov    al,ds:0x533064b5
  40ac93:	loope  0x40ac9b
  40ac95:	inc    esp
  40ac96:	(bad)  
  40ac97:	inc    ecx
  40ac98:	xor    eax,0xdd2682f0
  40ac9d:	(bad)  
  40ac9e:	jo     0x40acf3
  40aca0:	jbe    0x40ac3f
  40aca2:	push   ebp
  40aca3:	push   esp
  40aca4:	int    0xa8
  40aca6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aca7:	lods   eax,DWORD PTR ds:[esi]
  40aca8:	xchg   esp,eax
  40aca9:	mov    eax,0xb4b18315
  40acae:	push   ss
  40acaf:	push   0x37
  40acb1:	(bad)  
  40acb2:	xor    eax,0xfa62b933
  40acb7:	jne    0x40aca3
  40acb9:	test   al,0xdc
  40acbb:	imul   edi,DWORD PTR [esi+0x256bf371],0x312e5bb7
  40acc5:	xchg   edi,eax
  40acc6:	shl    bh,1
  40acc8:	pop    ecx
  40acc9:	fiadd  WORD PTR [edx-0x41528246]
  40accf:	std    
  40acd0:	or     bl,BYTE PTR [ebx-0x3fcad8a9]
  40acd6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40acd7:	cmp    ecx,DWORD PTR [ebp+0x60005c7]
  40acdd:	in     eax,0x9c
  40acdf:	inc    edi
  40ace0:	cmp    DWORD PTR gs:[esi-0x79],ecx
  40ace4:	imul   eax,eax,0xcd11b9ed
  40acea:	inc    esi
  40aceb:	dec    ebx
  40acec:	jecxz  0x40ad5c
  40acee:	(bad)  
  40acef:	(bad)  
  40acf0:	mov    ch,0x36
  40acf2:	imul   edi,DWORD PTR [esi+0x58745004],0x84842015
  40acfc:	push   edi
  40acfd:	lods   eax,DWORD PTR ds:[esi]
  40acfe:	ins    DWORD PTR es:[edi],dx
  40acff:	inc    ebx
  40ad00:	push   ecx
  40ad01:	sbb    eax,0x6010e723
  40ad06:	xchg   esp,eax
  40ad07:	retf   0x3dd7
  40ad0a:	xchg   DWORD PTR [ebx-0x74],ebx
  40ad0d:	sub    DWORD PTR ds:0x4db76e4f,edx
  40ad13:	into   
  40ad14:	xor    al,0x35
  40ad16:	and    BYTE PTR [ebx-0x3ba46ba5],ch
  40ad1c:	xchg   ecx,eax
  40ad1d:	les    ebp,FWORD PTR [ebx+0x5e42ad85]
  40ad23:	call   0x6c41a9a4
  40ad28:	mov    bl,0xd4
  40ad2a:	and    BYTE PTR [eax],0xc2
  40ad2d:	cdq    
  40ad2e:	aam    0x78
  40ad30:	sbb    esp,DWORD PTR [ecx]
  40ad32:	add    ebx,DWORD PTR [ebx]
  40ad34:	(bad)  
  40ad35:	or     al,0xc2
  40ad37:	daa    
  40ad38:	jmp    0x8fd503dc
  40ad3d:	cmp    DWORD PTR gs:[esi+0x62],esp
  40ad41:	(bad)  
  40ad42:	dec    esp
  40ad43:	retf   0xf4cd
  40ad46:	xchg   esi,eax
  40ad47:	ds jge 0x40ad67
  40ad4a:	push   edi
  40ad4b:	fist   WORD PTR [eax+ebp*2]
  40ad4e:	sti    
  40ad4f:	clc    
  40ad50:	leave  
  40ad51:	popf   
  40ad52:	mov    DWORD PTR ds:[edi],eax
  40ad55:	sub    ebp,DWORD PTR [eax]
  40ad57:	dec    esi
  40ad58:	adc    al,BYTE PTR [eax+0x74]
  40ad5b:	and    DWORD PTR [ebx-0x4ecdc909],ecx
  40ad61:	push   esp
  40ad62:	fiadd  WORD PTR [ebx-0x7ae598f]
  40ad68:	into   
  40ad69:	dec    ebp
  40ad6a:	dec    esi
  40ad6b:	nop
  40ad6c:	fwait
  40ad6d:	push   esi
  40ad6e:	stos   BYTE PTR es:[edi],al
  40ad6f:	xor    DWORD PTR [ebx-0x599a87c5],ebx
  40ad75:	jne    0x40add2
  40ad77:	aaa    
  40ad78:	bound  esi,QWORD PTR [esi-0xafe2870]
  40ad7e:	dec    eax
  40ad7f:	pop    edi
  40ad80:	out    0x70,eax
  40ad82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ad83:	cmp    al,BYTE PTR [edx-0x759b019d]
  40ad89:	cld    
  40ad8a:	leave  
  40ad8b:	inc    eax
  40ad8c:	mov    BYTE PTR [esi+0x0],bh
  40ad8f:	xchg   esi,eax
  40ad90:	mov    edx,DWORD PTR [ecx+0x1d]
  40ad93:	jmp    0xcbe:0x138622ff
  40ad9a:	mov    ah,0xca
  40ad9c:	mov    DWORD PTR [esi],ecx
  40ad9e:	push   ss
  40ad9f:	repnz sub bh,BYTE PTR gs:[ebp+0x1d]
  40ada4:	jmp    0x8d6051ed
  40ada9:	sub    ch,BYTE PTR ds:0xeff33c08
  40adaf:	mov    eax,ds:0x8d5804b4
  40adb4:	(bad)  [ecx]
  40adb6:	mov    edx,0x162a0136
  40adbb:	lds    ebp,FWORD PTR [eax-0x6658a817]
  40adc1:	mov    ds,WORD PTR [ebp+0xe]
  40adc4:	sub    eax,0xffd6fd4b
  40adc9:	pushf  
  40adca:	les    edx,FWORD PTR [ebp-0x27fba479]
  40add0:	hlt    
  40add1:	in     al,dx
  40add2:	mov    bl,0xe3
  40add4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40add5:	lods   eax,DWORD PTR es:[esi]
  40add7:	in     al,dx
  40add8:	mov    ds:0x29005fb9,eax
  40addd:	scas   eax,DWORD PTR es:[edi]
  40adde:	test   BYTE PTR [ecx+0x35],ch
  40ade1:	mov    ch,0x97
  40ade3:	jmp    0x8f3e72d
  40ade8:	aad    0x5d
  40adea:	inc    BYTE PTR [esp+edx*1]
  40aded:	xchg   DWORD PTR [esi],ebx
  40adef:	retf   0xe8c6
  40adf2:	xor    eax,0xc776377b
  40adf7:	dec    ebp
  40adf8:	mul    DWORD PTR [eax]
  40adfa:	mov    cl,0xf1
  40adfc:	push   es
  40adfd:	add    eax,0x82547dd7
  40ae02:	and    cl,BYTE PTR [ebx+0x14]
  40ae05:	and    eax,DWORD PTR [ebx-0x50c3ec06]
  40ae0b:	(bad)  
  40ae0d:	repnz dec esp
  40ae0f:	and    al,0xf6
  40ae11:	nop
  40ae12:	sbb    eax,0x1739785d
  40ae17:	mov    ah,0xcc
  40ae19:	mov    dh,dl
  40ae1b:	or     eax,edi
  40ae1d:	sar    DWORD PTR [eax+0x53],1
  40ae20:	inc    BYTE PTR ds:0x9833e7fc
  40ae26:	repnz lea eax,[esi-0x41]
  40ae2a:	mov    eax,0x50a922c0
  40ae2f:	jmp    0x36f4:0x4c3b3191
  40ae36:	inc    ecx
  40ae37:	xchg   BYTE PTR [eax-0x5],dl
  40ae3a:	int3   
  40ae3b:	xor    esp,edx
  40ae3d:	jno    0x40aeb8
  40ae3f:	mov    DWORD PTR ds:0xa089970d,edx
  40ae45:	mov    bh,0xc8
  40ae47:	adc    BYTE PTR [esi-0x17c9b91],0xe4
  40ae4e:	adc    eax,0xe9da0b5f
  40ae53:	lock cmp eax,0x4653d9ad
  40ae59:	pop    edi
  40ae5a:	jecxz  0x40ae5e
  40ae5c:	mov    bh,0x76
  40ae5e:	sub    dl,ch
  40ae60:	retf   0x2932
  40ae63:	mov    al,0x10
  40ae65:	(bad)  
  40ae66:	outs   dx,BYTE PTR ds:[esi]
  40ae67:	(bad)  
  40ae68:	push   ebp
  40ae69:	fs mov edi,0x7e449828
  40ae6f:	imul   esi,DWORD PTR [esi+0x48],0xf
  40ae73:	push   ss
  40ae74:	int3   
  40ae75:	and    al,0xc2
  40ae77:	repz call 0x55aa:0xbfeb3a84
  40ae7f:	in     eax,dx
  40ae80:	(bad)  
  40ae81:	dec    ecx
  40ae82:	int3   
  40ae83:	fimul  DWORD PTR [eax-0x170e15a1]
  40ae89:	idiv   dl
  40ae8b:	cli    
  40ae8c:	inc    esi
  40ae8d:	shl    ecx,cl
  40ae8f:	jl     0x40ae57
  40ae91:	popf   
  40ae92:	test   eax,0xe450d05a
  40ae97:	js     0x40ae20
  40ae99:	adc    BYTE PTR [edi-0x20856d39],0xe5
  40aea0:	ja     0x40aeb5
  40aea2:	push   ebp
  40aea3:	mov    bh,0x5b
  40aea5:	inc    ecx
  40aea6:	icebp  
  40aea7:	xchg   BYTE PTR [ebx+0x53b0d8fa],bl
  40aead:	inc    ebp
  40aeae:	mov    gs,WORD PTR [eax-0x67]
  40aeb1:	pop    esi
  40aeb2:	mov    ah,0x10
  40aeb4:	(bad)
  40aeb7:	cdq    
  40aeb8:	int    0xcf
  40aeba:	mov    WORD PTR [eax-0x5e],gs
  40aebd:	xor    ecx,eax
  40aebf:	mov    eax,ds:0xca3e8572
  40aec4:	imul   ebx,DWORD PTR [ebp-0x62d0ffd7],0xc4e4291d
  40aece:	dec    ebx
  40aecf:	jmp    FWORD PTR [esi]
  40aed1:	ja     0x40ae93
  40aed3:	and    ah,BYTE PTR [esi+ebp*1]
  40aed6:	mov    ch,0x88
  40aed8:	fist   WORD PTR [edx]
  40aeda:	cld    
  40aedb:	mov    ecx,eax
  40aedd:	int3   
  40aede:	inc    esp
  40aedf:	pop    ds
  40aee0:	in     eax,dx
  40aee1:	cmc    
  40aee2:	push   es
  40aee3:	mov    ecx,0x9b2cb34
  40aee8:	test   BYTE PTR [eax+0x2d38a4d4],dh
  40aeee:	stos   BYTE PTR es:[edi],al
  40aeef:	mov    ?,WORD PTR [eax+0x16]
  40aef2:	into   
  40aef3:	cwde   
  40aef4:	mov    al,0xd6
  40aef6:	push   0x57feceec
  40aefb:	ins    BYTE PTR es:[edi],dx
  40aefc:	into   
  40aefd:	xchg   esi,eax
  40aefe:	test   al,dl
  40af00:	sahf   
  40af01:	jge    0x40aead
  40af03:	ja     0x40aefb
  40af05:	mov    ds:0x95b47efa,eax
  40af0a:	stos   DWORD PTR es:[edi],eax
  40af0b:	rol    BYTE PTR [esi-0x2a],cl
  40af0e:	push   ecx
  40af0f:	inc    edx
  40af10:	lea    edx,ds:0x7e815f6e
  40af16:	xchg   esp,eax
  40af17:	and    al,BYTE PTR [ecx-0xf]
  40af1a:	in     eax,dx
  40af1b:	fiadd  DWORD PTR [eax+0x4e]
  40af1e:	inc    ebx
  40af1f:	ins    BYTE PTR es:[edi],dx
  40af20:	mov    cl,0xe1
  40af22:	nop
  40af23:	and    eax,0x3ec902c0
  40af28:	xchg   DWORD PTR [edx+0x44],ebx
  40af2b:	inc    esi
  40af2c:	test   al,0x9e
  40af2e:	daa    
  40af2f:	adc    BYTE PTR [eax+0x0],bl
  40af32:	and    ch,BYTE PTR [ecx]
  40af34:	dec    ecx
  40af35:	nop
  40af36:	stos   DWORD PTR es:[edi],eax
  40af37:	sub    al,0x29
  40af39:	mov    esi,0x33c35682
  40af3e:	fldenv [eax-0x5]
  40af41:	mov    DWORD PTR [edx+0x1044ec7c],edi
  40af47:	aaa    
  40af48:	data16 icebp 
  40af4a:	(bad)  
  40af4b:	popf   
  40af4c:	pop    eax
  40af4d:	jle    0x40af4e
  40af4f:	and    BYTE PTR [esi+0x17],ch
  40af52:	repz mov al,0x29
  40af55:	push   eax
  40af56:	pop    edx
  40af57:	dec    ebp
  40af58:	es or  al,0x7f
  40af5b:	(bad)  
  40af5c:	retf   
  40af5d:	xchg   edx,eax
  40af5e:	adc    al,0x56
  40af60:	mov    es,WORD PTR [edi+0x3f]
  40af63:	mov    bl,bh
  40af65:	fcom   DWORD PTR [edi-0x4a8f418c]
  40af6b:	cmp    ch,al
  40af6d:	ret    0x229b
  40af70:	retf   
  40af71:	xor    ebp,DWORD PTR [ebx-0x2f]
  40af74:	mov    esp,0x531efb9b
  40af79:	fistp  DWORD PTR [edx+0x26]
  40af7c:	xchg   esi,eax
  40af7d:	test   BYTE PTR [edi-0x50],al
  40af80:	xchg   ebx,eax
  40af81:	aad    0x7
  40af83:	jecxz  0x40af71
  40af85:	lods   al,BYTE PTR ds:[esi]
  40af86:	lock outs dx,DWORD PTR ds:[esi]
  40af88:	aas    
  40af89:	fnstsw WORD PTR [ebx-0x59]
  40af8c:	jb     0x40b00b
  40af8e:	pop    esi
  40af8f:	repz jl 0x40af80
  40af92:	in     al,0x91
  40af94:	mul    DWORD PTR es:[ebx+0x1a]
  40af98:	cdq    
  40af99:	pop    es
  40af9a:	xor    dh,BYTE PTR [ecx+esi*8-0x2d]
  40af9e:	cli    
  40af9f:	mov    esp,DWORD PTR [ecx+0x5]
  40afa2:	retf   
  40afa3:	jae    0x40af33
  40afa5:	cdq    
  40afa6:	adc    BYTE PTR [ebp-0x78],bl
  40afa9:	xchg   ecx,eax
  40afaa:	or     BYTE PTR [eax],ch
  40afac:	jns    0x40b004
  40afae:	imul   ebp,DWORD PTR [esi],0xc
  40afb1:	jnp    0x40af92
  40afb3:	mov    bl,BYTE PTR [edi-0x49]
  40afb6:	and    dl,al
  40afb8:	cmp    ebx,DWORD PTR [edx]
  40afba:	add    BYTE PTR [ebx],bh
  40afbc:	dec    esp
  40afbd:	cwde   
  40afbe:	test   al,0xaa
  40afc0:	out    dx,eax
  40afc1:	adc    al,0x49
  40afc3:	xchg   esi,eax
  40afc4:	mov    dh,0xf9
  40afc6:	cmp    al,BYTE PTR [ecx]
  40afc8:	lods   eax,DWORD PTR ds:[esi]
  40afc9:	mov    cl,0xdf
  40afcb:	cmp    ah,BYTE PTR [edx+0x22]
  40afce:	fsubrp st(5),st
  40afd0:	adc    BYTE PTR [edi+esi*4],al
  40afd3:	ret    0x671f
  40afd6:	dec    eax
  40afd7:	dec    edx
  40afd8:	push   0x942e4cd1
  40afdd:	in     al,0xf5
  40afdf:	jno    0x40afe8
  40afe1:	mov    ah,0x1e
  40afe3:	pop    eax
  40afe4:	mov    bh,0xd5
  40afe6:	(bad)  
  40afe7:	sub    eax,0x94b3c558
  40afec:	test   al,0x54
  40afee:	xchg   ecx,eax
  40afef:	dec    esp
  40aff0:	js     0x40b061
  40aff2:	jle    0x40afbb
  40aff4:	popa   
  40aff5:	jecxz  0x40b049
  40aff7:	and    al,0x77
  40aff9:	inc    ebx
  40affa:	rcl    DWORD PTR ds:0xb8159e92,cl
  40b000:	cmp    BYTE PTR [edx],cl
  40b002:	xchg   esi,eax
  40b003:	ret    0xa45f
  40b006:	and    ecx,DWORD PTR [ecx]
  40b008:	xchg   bl,al
  40b00a:	push   ecx
  40b00b:	jmp    0x2a3f:0x812dab89
  40b012:	ins    BYTE PTR es:[edi],dx
  40b013:	sub    DWORD PTR [ebx],eax
  40b015:	loop   0x40afc9
  40b017:	xchg   BYTE PTR [bx+si+0x25],ch
  40b01b:	pop    ebp
  40b01c:	rol    ebx,1
  40b01e:	lahf   
  40b01f:	fsubr  QWORD PTR [ecx-0x4e9ce215]
  40b025:	add    BYTE PTR [esi+0x37096760],al
  40b02b:	test   eax,0x9fd7bd5f
  40b030:	sti    
  40b031:	test   al,0xdf
  40b033:	or     edx,edx
  40b035:	cmc    
  40b036:	push   ecx
  40b037:	test   eax,0xb5e9fe6
  40b03c:	popa   
  40b03d:	and    cl,cl
  40b03f:	sub    cl,dh
  40b041:	mov    esi,0x1457182c
  40b046:	stos   DWORD PTR es:[edi],eax
  40b047:	mov    BYTE PTR [esi],cl
  40b049:	mov    eax,0x6c69faeb
  40b04e:	inc    edx
  40b04f:	jnp    0x40b061
  40b051:	add    ebp,ebx
  40b053:	or     DWORD PTR [ebp-0x6be647ee],edx
  40b059:	fnstenv [ebp-0x1c]
  40b05c:	fiadd  WORD PTR [esp+ecx*8]
  40b05f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b060:	scas   eax,DWORD PTR es:[edi]
  40b061:	cmc    
  40b062:	push   edi
  40b063:	enter  0x2d80,0x93
  40b067:	sti    
  40b068:	add    al,0xfa
  40b06a:	ss call 0xf3cc:0x78aafe4e
  40b072:	daa    
  40b073:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b074:	pushf  
  40b075:	mov    dh,0x5a
  40b077:	int3   
  40b078:	cwde   
  40b079:	lods   al,BYTE PTR ds:[esi]
  40b07a:	dec    edi
  40b07b:	sub    al,0x19
  40b07d:	mov    DWORD PTR [edi],eax
  40b07f:	jp     0x40b0f7
  40b081:	mov    db7,eax
  40b084:	mov    eax,ds:0xd426fbbc
  40b089:	xchg   ebp,eax
  40b08a:	or     eax,0x46b5d416
  40b08f:	push   cs
  40b090:	xchg   edi,eax
  40b091:	ds pop es
  40b093:	mov    ds:0x23b98a19,eax
  40b098:	dec    ch
  40b09a:	loop   0x40b09b
  40b09c:	shl    DWORD PTR [esi+0x29],1
  40b09f:	mov    ebx,0x79a1f260
  40b0a4:	out    dx,eax
  40b0a5:	clc    
  40b0a6:	inc    edx
  40b0a7:	and    al,0x4d
  40b0a9:	xor    al,0x7d
  40b0ab:	pop    edi
  40b0ac:	pop    esp
  40b0ad:	inc    esp
  40b0ae:	jmp    0xb798:0x54e8ee77
  40b0b5:	mov    al,0x98
  40b0b7:	inc    esi
  40b0b8:	push   ebp
  40b0b9:	daa    
  40b0ba:	mov    ch,0xd5
  40b0bc:	cmp    cl,al
  40b0be:	mov    cs,WORD PTR [esi-0x47]
  40b0c1:	fcomp  DWORD PTR [ecx+0x1d986f03]
  40b0c7:	jo     0xeea28493
  40b0cd:	or     edi,0x790e3b49
  40b0d3:	out    0x7b,al
  40b0d5:	or     BYTE PTR [edx],0x20
  40b0d8:	inc    esp
  40b0d9:	imul   ecx,DWORD PTR ds:0xbac373e5,0xffffffa9
  40b0e0:	je     0x40b0f1
  40b0e2:	inc    ebx
  40b0e3:	out    0x38,eax
  40b0e5:	daa    
  40b0e6:	xor    eax,0xfa034392
  40b0eb:	adc    ebp,ebp
  40b0ed:	dec    ebp
  40b0ee:	stos   BYTE PTR es:[edi],al
  40b0ef:	lahf   
  40b0f0:	xchg   esi,eax
  40b0f1:	add    ecx,edi
  40b0f3:	dec    ebp
  40b0f4:	sub    BYTE PTR [edi+edi*4-0x73],al
  40b0f8:	test   eax,0xcd187cc9
  40b0fd:	mov    eax,0x9eee1c1f
  40b102:	xchg   edi,eax
  40b103:	shl    BYTE PTR es:[ebp-0x1df339d9],0x38
  40b10b:	cmp    eax,0x46501960
  40b110:	jne    0x40b0bc
  40b112:	dec    esi
  40b113:	add    BYTE PTR [ecx-0xb],dh
  40b116:	je     0x40b145
  40b118:	or     ebx,DWORD PTR [eax+0x76]
  40b11b:	adc    eax,0x1f41ac4
  40b120:	sub    ah,BYTE PTR [esi-0x13589799]
  40b126:	or     cl,dl
  40b128:	jno    0x40b0b8
  40b12a:	push   es
  40b12b:	mov    al,BYTE PTR [edi+0x37fbd2dd]
  40b131:	pop    edi
  40b132:	call   DWORD PTR fs:[edi-0x7e083195]
  40b139:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  40b13b:	inc    ebp
  40b13c:	mov    esi,0xc7bbe851
  40b141:	xchg   ah,ch
  40b143:	and    BYTE PTR [edx+eax*2+0x69],ch
  40b147:	scas   eax,DWORD PTR es:[edi]
  40b148:	loop   0x40b16d
  40b14a:	loope  0x40b197
  40b14c:	test   al,0xf1
  40b14e:	mov    ah,bl
  40b150:	retf   0x2f6f
  40b153:	dec    edi
  40b154:	aas    
  40b155:	jmp    0x4dd:0xfa457d12
  40b15c:	add    eax,DWORD PTR [ecx-0x47]
  40b15f:	ss out 0xc8,eax
  40b162:	fisubr DWORD PTR [ecx-0x80]
  40b165:	aaa    
  40b166:	(bad)  
  40b167:	jg     0x40b16d
  40b169:	inc    ebx
  40b16a:	into   
  40b16b:	mov    ds:0x81fe26d2,eax
  40b170:	jle    0x40b110
  40b172:	iret   
  40b173:	mov    bl,0x56
  40b175:	das    
  40b176:	lahf   
  40b177:	pusha  
  40b178:	mov    ebx,0x8d8c773a
  40b17d:	adc    eax,0xe87859fd
  40b182:	sti    
  40b183:	gs push 0x40484bd2
  40b189:	inc    edx
  40b18a:	xchg   ecx,eax
  40b18b:	xchg   edi,eax
  40b18c:	retf   0x3fdb
  40b18f:	xor    al,0xf
  40b191:	aas    
  40b192:	adc    eax,0x5e758e17
  40b197:	cs jnp 0x40b12b
  40b19a:	daa    
  40b19b:	cmp    edi,ecx
  40b19d:	mov    bh,0x4f
  40b19f:	xchg   ecx,eax
  40b1a0:	iret   
  40b1a1:	xor    al,0xcb
  40b1a3:	fsub   QWORD PTR [ebp+0x4d]
  40b1a6:	sub    BYTE PTR [ebx],dh
  40b1a8:	xlat   BYTE PTR ds:[ebx]
  40b1a9:	setne  BYTE PTR [edx]
  40b1ac:	neg    DWORD PTR [ecx+eax*4]
  40b1af:	add    DWORD PTR [ebp-0xd],0xdd95c8d4
  40b1b6:	fdivr  st,st(2)
  40b1b8:	dec    eax
  40b1b9:	or     al,0x3b
  40b1bb:	xor    ebx,DWORD PTR [esp+esi*8+0x472469b8]
  40b1c2:	retf   0xe2bc
  40b1c5:	push   cs
  40b1c6:	in     al,dx
  40b1c7:	adc    eax,0x9a443dc2
  40b1cc:	aas    
  40b1cd:	mov    esp,DWORD PTR [eax+0x76]
  40b1d0:	xchg   ebp,eax
  40b1d1:	in     eax,dx
  40b1d2:	inc    edx
  40b1d3:	lock cld 
  40b1d5:	adc    bh,ah
  40b1d7:	hlt    
  40b1d8:	push   ebx
  40b1d9:	xchg   esi,eax
  40b1da:	mov    ecx,0xa117255d
  40b1df:	std    
  40b1e0:	or     edx,eax
  40b1e2:	test   DWORD PTR [ebx],ebp
  40b1e4:	dec    ch
  40b1e6:	stos   BYTE PTR es:[edi],al
  40b1e7:	jge    0x40b1d6
  40b1e9:	nop
  40b1ea:	into   
  40b1eb:	pop    ebp
  40b1ec:	mov    bh,0xc2
  40b1ee:	fcomp  QWORD PTR [eax-0x45eabc79]
  40b1f4:	loopne 0x40b25e
  40b1f6:	jge    0x40b261
  40b1f8:	push   ebp
  40b1f9:	xchg   edi,eax
  40b1fa:	in     al,0xa
  40b1fc:	dec    esp
  40b1fd:	push   ds
  40b1fe:	and    eax,0xb18a7cf2
  40b203:	arpl   WORD PTR [esi],bx
  40b205:	mov    dh,0xff
  40b207:	jmp    0x40b210
  40b209:	jns    0x40b231
  40b20b:	fst    DWORD PTR [eax]
  40b20d:	jmp    0x40b22a
  40b20f:	adc    eax,0x540ce701
  40b214:	sub    eax,0xdcc359e6
  40b219:	xor    edi,0xffffffe5
  40b21c:	mov    WORD PTR [edi+0x9],cs
  40b21f:	loope  0x40b227
  40b221:	call   0x75a6:0x69825524
  40b228:	retf   
  40b229:	inc    edx
  40b22a:	(bad)  
  40b22b:	and    ecx,ebp
  40b22d:	popa   
  40b22e:	mov    dh,0x7b
  40b230:	add    ebx,DWORD PTR [esi]
  40b232:	(bad)  [ebx]
  40b234:	adc    DWORD PTR [ebp-0x5c8cf6c],ebx
  40b23a:	fwait
  40b23b:	pusha  
  40b23c:	adc    dl,BYTE PTR [eax]
  40b23e:	inc    eax
  40b23f:	ds ss xchg esi,eax
  40b242:	xchg   edx,eax
  40b243:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b244:	adc    al,0x1e
  40b246:	xchg   BYTE PTR [ebp+edx*8-0x74],ch
  40b24a:	rcl    dh,1
  40b24c:	pop    ebp
  40b24d:	push   ebx
  40b24e:	xchg   DWORD PTR [esi+0x5],eax
  40b251:	add    al,0xcc
  40b253:	cwde   
  40b254:	ins    DWORD PTR es:[edi],dx
  40b255:	sub    ecx,ebx
  40b257:	and    eax,0xa006306d
  40b25c:	ret    0x2551
  40b25f:	add    eax,0x7a5bd0ec
  40b264:	or     DWORD PTR [esi-0x4f],0x438dcdcf
  40b26b:	or     dh,BYTE PTR [edi-0x73d56535]
  40b271:	imul   edi,eax,0x4edc37f1
  40b277:	stos   DWORD PTR es:[edi],eax
  40b278:	mov    esi,0x7578f664
  40b27d:	dec    ebx
  40b27e:	not    dl
  40b280:	enter  0xc0b9,0x20
  40b284:	adc    DWORD PTR [eax-0x1b5b0418],0x70b36d49
  40b28e:	push   es
  40b28f:	push   cs
  40b290:	cdq    
  40b291:	jb     0x40b2c8
  40b293:	xor    al,0xbb
  40b295:	js     0x40b294
  40b297:	adc    al,0xfc
  40b299:	xor    ch,ah
  40b29b:	and    BYTE PTR ds:0xae5de02e,dh
  40b2a1:	and    edi,eax
  40b2a3:	sbb    al,0x9a
  40b2a5:	sub    BYTE PTR [ecx],bh
  40b2a7:	lea    edx,[eax-0x70]
  40b2aa:	xlat   BYTE PTR ds:[ebx]
  40b2ab:	stc    
  40b2ac:	push   edx
  40b2ad:	cwde   
  40b2ae:	sub    DWORD PTR [edi],ebp
  40b2b0:	lods   al,BYTE PTR ds:[esi]
  40b2b1:	pop    esp
  40b2b2:	jb     0x40b23c
  40b2b4:	and    edx,DWORD PTR [ebp-0x37]
  40b2b7:	mov    eax,0xee298709
  40b2bc:	mov    ecx,0x29268ed4
  40b2c1:	shl    eax,cl
  40b2c3:	gs jnp 0x40b32f
  40b2c6:	push   eax
  40b2c7:	mov    dl,0xc0
  40b2c9:	sbb    dh,BYTE PTR [eax+0x35293cde]
  40b2cf:	xchg   edi,eax
  40b2d0:	mov    edx,0xcb6a5186
  40b2d5:	lds    eax,FWORD PTR [eax-0x1b99f8c5]
  40b2db:	jp     0x40b29f
  40b2dd:	push   esp
  40b2de:	cmp    DWORD PTR [ebp-0x675a1f75],ebx
  40b2e4:	dec    esi
  40b2e5:	jns    0x40b35f
  40b2e7:	scas   eax,DWORD PTR es:[edi]
  40b2e8:	adc    BYTE PTR [ebp+eiz*8+0x41573353],dl
  40b2ef:	int3   
  40b2f0:	pop    edx
  40b2f1:	inc    ecx
  40b2f2:	xor    al,0x15
  40b2f4:	mov    es,WORD PTR [esp+esi*2]
  40b2f7:	shl    BYTE PTR [eax+0x361afd67],cl
  40b2fd:	shld   WORD PTR [ebx+0x376625b9],si,0x4d
  40b306:	pcmpgtb mm3,QWORD PTR [ecx-0x3324905f]
  40b30d:	fsubr  DWORD PTR [esi]
  40b30f:	xchg   ebx,eax
  40b310:	push   esi
  40b311:	dec    esp
  40b312:	test   DWORD PTR [edi],edx
  40b314:	idiv   BYTE PTR [eax+edi*2-0x51]
  40b318:	push   edx
  40b319:	(bad)  
  40b31a:	mov    DWORD PTR [edi-0x27574290],ebp
  40b320:	repz inc ebx
  40b322:	dec    ebp
  40b323:	shl    ch,1
  40b325:	and    al,0x53
  40b327:	jns    0x40b384
  40b329:	mov    ah,0xa1
  40b32b:	lock popa 
  40b32d:	add    BYTE PTR [ebp+ebx*2+0x6837ae82],cl
  40b334:	stc    
  40b335:	cs hlt 
  40b337:	mov    ecx,0xc49c51fa
  40b33c:	lea    esp,[esi-0x15255ffd]
  40b342:	fldenv [ebx]
  40b344:	sar    BYTE PTR [eax-0x6594d656],cl
  40b34a:	or     BYTE PTR [ebx],ah
  40b34c:	jl     0x40b377
  40b34e:	clc    
  40b34f:	fcmovu st,st(2)
  40b351:	(bad)  
  40b352:	into   
  40b353:	loope  0x40b3c6
  40b355:	inc    esp
  40b356:	or     al,0xf7
  40b358:	xchg   BYTE PTR [edi-0x6e],bh
  40b35b:	leave  
  40b35c:	adc    BYTE PTR es:[esi],dh
  40b35f:	mov    WORD PTR [eax-0x39],ss
  40b362:	(bad)  
  40b363:	in     eax,0xc8
  40b365:	mov    dh,0x15
  40b367:	sub    DWORD PTR [esi+0x58f09dc8],ebx
  40b36d:	repz mov edi,ecx
  40b370:	mov    eax,0xb47b51cc
  40b375:	ja     0x40b328
  40b377:	dec    ebp
  40b378:	mov    BYTE PTR [ebx],al
  40b37a:	pop    ds
  40b37b:	pop    ecx
  40b37c:	inc    ecx
  40b37d:	adc    dh,bh
  40b37f:	and    al,0x6
  40b381:	scas   al,BYTE PTR es:[edi]
  40b382:	out    dx,al
  40b383:	dec    eax
  40b384:	arpl   WORD PTR [edx-0x21],ax
  40b387:	not    BYTE PTR [edx+0x34]
  40b38a:	pop    ebp
  40b38b:	pop    ds
  40b38c:	(bad)  
  40b38e:	std    
  40b38f:	xor    BYTE PTR [edx+0x5],al
  40b392:	scas   al,BYTE PTR es:[edi]
  40b393:	std    
  40b394:	(bad)  [edx]
  40b396:	and    BYTE PTR [edi],0xd4
  40b399:	or     BYTE PTR [ebx-0x70],bh
  40b39c:	xchg   esp,eax
  40b39d:	pop    ecx
  40b39e:	outs   dx,DWORD PTR ds:[esi]
  40b39f:	jno    0x40b352
  40b3a1:	inc    edi
  40b3a2:	sbb    eax,0xadc8939c
  40b3a7:	call   0x9617:0xd666b91c
  40b3ae:	cs aas 
  40b3b0:	dec    ebp
  40b3b1:	ret    
  40b3b2:	loop   0x40b417
  40b3b4:	loope  0x40b339
  40b3b6:	pop    eax
  40b3b7:	retf   
  40b3b8:	stc    
  40b3b9:	pcmpeqw mm0,QWORD PTR [esi]
  40b3bc:	inc    esp
  40b3bd:	imul   DWORD PTR [esi]
  40b3bf:	xchg   edx,eax
  40b3c0:	xor    bh,bh
  40b3c2:	mov    cl,0xc0
  40b3c4:	adc    BYTE PTR [edx+ebp*2-0x15d834d9],al
  40b3cb:	icebp  
  40b3cc:	jns    0x40b401
  40b3ce:	bnd jl 0x40b351
  40b3d1:	sub    al,0xa1
  40b3d3:	repnz mov bh,0x21
  40b3d6:	les    esi,FWORD PTR [ecx+0x3b]
  40b3d9:	popa   
  40b3da:	lds    ecx,FWORD PTR [ecx+0x41]
  40b3dd:	and    DWORD PTR [esi],ebp
  40b3df:	xchg   edx,eax
  40b3e0:	push   eax
  40b3e1:	cdq    
  40b3e2:	loope  0x40b3ba
  40b3e4:	add    esp,DWORD PTR [edx+0x7]
  40b3e7:	jle    0x40b3c0
  40b3e9:	sbb    ebx,DWORD PTR [ecx-0x6a5dd7af]
  40b3ef:	in     eax,0x9b
  40b3f1:	scas   eax,DWORD PTR es:[edi]
  40b3f2:	jo     0x40b394
  40b3f4:	outs   dx,DWORD PTR ds:[esi]
  40b3f5:	(bad)  
  40b3f6:	xchg   ebx,eax
  40b3f7:	push   ss
  40b3f8:	ud1    edi,esi
  40b3fb:	xor    ebp,DWORD PTR [edi-0x75]
  40b3fe:	mov    edi,DWORD PTR [ebp-0x382cafba]
  40b404:	lahf   
  40b405:	inc    ebx
  40b406:	fisttp WORD PTR [edi+ecx*2+0x5]
  40b40a:	aam    0x2a
  40b40c:	pop    ecx
  40b40d:	xlat   BYTE PTR ds:[ebx]
  40b40e:	fimul  DWORD PTR [esi]
  40b410:	mov    al,0xf6
  40b412:	xor    DWORD PTR [eax],0x6f301ce8
  40b418:	lock and edx,DWORD PTR [edx+0xa]
  40b41c:	sub    ah,BYTE PTR [eax-0x3c]
  40b41f:	stc    
  40b420:	test   BYTE PTR [eax+0x37150287],0xc4
  40b427:	sbb    al,0x7d
  40b429:	outs   dx,BYTE PTR ds:[esi]
  40b42a:	cmp    ebp,ebx
  40b42c:	out    0x73,eax
  40b42e:	and    DWORD PTR fs:[edx+esi*2],esi
  40b432:	pop    esi
  40b433:	rcr    edx,cl
  40b435:	shl    BYTE PTR [eax-0x4918e17],0xd0
  40b43c:	jmp    0x356:0x23f8f9db
  40b443:	in     al,dx
  40b444:	cwde   
  40b445:	jb     0x40b3d4
  40b447:	pop    eax
  40b448:	jae    0x40b4bc
  40b44a:	pop    ss
  40b44b:	fdiv   QWORD PTR [ebp-0x33778937]
  40b451:	jl     0x40b4cf
  40b453:	inc    edx
  40b454:	js     0x40b48e
  40b456:	jbe    0x40b49b
  40b458:	imul   edx,DWORD PTR [eax],0x474bf616
  40b45e:	loop   0x40b43f
  40b460:	mov    BYTE PTR [esi],bl
  40b462:	rol    DWORD PTR [ebx-0x7d],1
  40b465:	test   BYTE PTR [ebx+0x5b],dh
  40b468:	outs   dx,BYTE PTR gs:[esi]
  40b46a:	dec    eax
  40b46b:	in     al,dx
  40b46c:	sbb    ecx,ebp
  40b46e:	loopne 0x40b4bb
  40b470:	mov    eax,DWORD PTR [eax+0x2bc00fce]
  40b476:	jno    0x40b3ff
  40b478:	je     0x40b491
  40b47a:	push   cs
  40b47b:	inc    eax
  40b47c:	into   
  40b47d:	dec    cx
  40b47f:	pop    esp
  40b480:	and    eax,0xddb3bb5f
  40b485:	add    eax,0xedd38353
  40b48a:	loopne 0x40b462
  40b48c:	fstp   QWORD PTR [ebp+eiz*4+0x656a59b8]
  40b493:	loopne 0x40b451
  40b495:	iret   
  40b496:	cmp    DWORD PTR [ebx+0x220152f9],0x4b
  40b49d:	lea    esi,[ebx-0x16]
  40b4a0:	(bad)  
  40b4a2:	jns    0x40b45c
  40b4a4:	and    bl,BYTE PTR [ecx-0x16]
  40b4a7:	mov    eax,0x40c400bb
  40b4ac:	jecxz  0x40b503
  40b4ae:	push   0xffffffbd
  40b4b0:	xor    al,0x88
  40b4b2:	pusha  
  40b4b3:	sub    BYTE PTR [edx-0x19],dh
  40b4b6:	outs   dx,BYTE PTR ds:[esi]
  40b4b7:	mov    bh,0x4d
  40b4b9:	xor    eax,0xbfb9f59a
  40b4be:	test   BYTE PTR gs:[edx-0x6d],al
  40b4c2:	pop    esi
  40b4c3:	xor    eax,0x833fad78
  40b4c8:	pop    edx
  40b4c9:	xor    eax,0x7a0645b4
  40b4ce:	mov    cl,0x28
  40b4d0:	(bad)  
  40b4d1:	arpl   WORD PTR [edx],bp
  40b4d3:	push   cs
  40b4d4:	sbb    dh,dh
  40b4d6:	test   eax,0x8bde6441
  40b4db:	mov    edi,0x7d27e136
  40b4e0:	add    eax,0x29de74c5
  40b4e5:	sub    eax,0x6d770c9
  40b4ea:	(bad)  
  40b4eb:	pop    eax
  40b4ec:	hlt    
  40b4ed:	dec    esi
  40b4ee:	es push ecx
  40b4f0:	mov    BYTE PTR [ebx-0x1b194128],bh
  40b4f6:	out    0xf7,al
  40b4f8:	stos   BYTE PTR es:[edi],al
  40b4f9:	push   0xffffffbf
  40b4fb:	jg     0x40b47e
  40b4fd:	mov    bl,0x5c
  40b4ff:	out    0x0,eax
  40b501:	xor    al,0x2c
  40b503:	out    0x1,al
  40b505:	scas   al,BYTE PTR es:[edi]
  40b506:	sub    BYTE PTR [edi+0x56b62b2],al
  40b50c:	mov    bl,0x27
  40b50e:	inc    ebp
  40b50f:	xor    ah,0xd4
  40b512:	dec    ebx
  40b513:	inc    ebp
  40b514:	mov    bl,0xf7
  40b516:	dec    ecx
  40b517:	cld    
  40b518:	(bad)  
  40b519:	es je  0x40b4c3
  40b51c:	dec    ebp
  40b51d:	xlat   BYTE PTR ds:[ebx]
  40b51e:	int    0x7a
  40b520:	push   eax
  40b521:	fwait
  40b522:	inc    esp
  40b523:	cmp    eax,0x9e8d4c29
  40b528:	add    edi,DWORD PTR [ecx-0x2e]
  40b52b:	mov    ?,WORD PTR cs:[ebx-0x10]
  40b52f:	sbb    DWORD PTR [esi+0x1d9e76cc],0xdb77552c
  40b539:	aas    
  40b53a:	fisub  DWORD PTR [ebx]
  40b53c:	pop    ebp
  40b53d:	mov    eax,0xc566e60d
  40b542:	out    0xef,eax
  40b544:	cmp    ah,cl
  40b546:	mov    al,ds:0xc5de6d25
  40b54b:	popf   
  40b54c:	dec    edi
  40b54d:	icebp  
  40b54e:	nop
  40b54f:	sahf   
  40b550:	inc    ecx
  40b551:	mov    eax,0xcb8bcd4f
  40b556:	xchg   esi,eax
  40b557:	daa    
  40b558:	ins    DWORD PTR es:[edi],dx
  40b559:	fidivr WORD PTR [ebx]
  40b55b:	out    0xef,eax
  40b55d:	adc    eax,0x2af9f190
  40b562:	sahf   
  40b563:	test   DWORD PTR [ebx-0x10],0x56415896
  40b56a:	xchg   ebx,eax
  40b56b:	sbb    DWORD PTR [ecx+0x2c],0xffffffb9
  40b56f:	mov    esp,0xecd0498b
  40b574:	mov    dl,dh
  40b576:	xchg   ecx,eax
  40b577:	gs dec ebx
  40b579:	test   eax,0x96cd036f
  40b57e:	std    
  40b57f:	jo     0x40b574
  40b581:	mov    bh,0xdd
  40b583:	sub    eax,0xec1439ae
  40b588:	dec    edx
  40b589:	lds    ecx,FWORD PTR ds:0xcecc3c4b
  40b58f:	cld    
  40b590:	sahf   
  40b591:	int3   
  40b592:	xchg   ebp,eax
  40b593:	jmp    0x44b1:0x5f41cddf
  40b59a:	pop    ebx
  40b59b:	mov    BYTE PTR [eax],bh
  40b59d:	pop    ebp
  40b59e:	fisub  WORD PTR gs:[edi]
  40b5a1:	stos   BYTE PTR es:[edi],al
  40b5a2:	pop    esi
  40b5a3:	push   ds
  40b5a4:	mov    ah,0x66
  40b5a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b5a7:	test   DWORD PTR [ebp-0x3223b2e4],ebp
  40b5ad:	pop    ecx
  40b5ae:	imul   DWORD PTR [ebp-0x10c41445]
  40b5b4:	add    DWORD PTR [esi-0x45],esi
  40b5b7:	jae    0x40b5bf
  40b5b9:	adc    eax,0x9aa20f52
  40b5be:	dec    edi
  40b5bf:	out    0xc4,eax
  40b5c1:	xchg   esi,eax
  40b5c2:	mov    BYTE PTR [ecx],cl
  40b5c4:	xchg   ebp,eax
  40b5c5:	imul   eax,DWORD PTR [esi+0x2f],0xc73efc6d
  40b5cc:	jb     0x40b582
  40b5ce:	lea    ebp,[eax+0x4d3af36f]
  40b5d4:	sbb    DWORD PTR [ebp+0x39ee6b27],esi
  40b5da:	hlt    
  40b5db:	inc    edx
  40b5dc:	mov    dl,BYTE PTR [ecx]
  40b5de:	ficomp DWORD PTR [ecx-0x2aaaaf04]
  40b5e4:	and    BYTE PTR [edx+0x14],ch
  40b5e7:	(bad)  [ebx]
  40b5e9:	fistp  QWORD PTR [ebx-0x7cd89759]
  40b5ef:	data16 (bad) 
  40b5f1:	repnz adc BYTE PTR [edi+esi*2+0x44502491],bh
  40b5f9:	cld    
  40b5fa:	jns    0x40b588
  40b5fc:	(bad)  
  40b5fd:	test   ebx,0x9d4359ae
  40b603:	xor    edi,DWORD PTR [eax-0x7b]
  40b606:	mov    ds:0xc0ec0063,eax
  40b60b:	in     al,0x80
  40b60d:	xchg   BYTE PTR [esi+0x7f32b8b7],ah
  40b613:	push   edi
  40b614:	jecxz  0x40b68f
  40b616:	pop    ss
  40b617:	inc    eax
  40b618:	xchg   DWORD PTR ds:0x89c1dcd8,edi
  40b61e:	ficom  DWORD PTR ss:[edx]
  40b621:	test   DWORD PTR [ecx],0xa36ca677
  40b627:	and    al,0xce
  40b629:	lahf   
  40b62a:	mov    cl,0xb8
  40b62c:	adc    ebx,DWORD PTR ds:0x7800f93
  40b632:	pop    ds
  40b633:	ss ja  0x40b64d
  40b636:	pop    ebx
  40b637:	jmp    0x2fe8:0x17c8b42a
  40b63e:	jmp    0xed9:0x7394bf3a
  40b645:	xor    esp,DWORD PTR [edx+0x5f]
  40b648:	add    al,0x2c
  40b64a:	sub    ch,BYTE PTR gs:[edx+eiz*1+0x4c022a14]
  40b652:	xor    ebx,DWORD PTR [edx]
  40b654:	mov    ebx,gs
  40b656:	or     edx,edi
  40b658:	push   0x70de6da0
  40b65d:	gs pusha 
  40b65f:	repz sbb BYTE PTR [edx+0x4239e330],ch
  40b666:	and    al,0x44
  40b668:	adc    esi,DWORD PTR [edi]
  40b66a:	call   0xd6c0:0xaea9a0cd
  40b671:	dec    eax
  40b672:	rcr    DWORD PTR [eax+0x2a],1
  40b675:	das    
  40b676:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b677:	ins    DWORD PTR es:[edi],dx
  40b678:	sbb    DWORD PTR [edi-0x6ccde129],ecx
  40b67e:	mov    cl,0x37
  40b680:	aaa    
  40b681:	xchg   DWORD PTR ss:0xa20d2b1f,edx
  40b688:	test   ebx,esi
  40b68a:	mov    BYTE PTR [edx-0x20],bh
  40b68d:	push   0x240ac014
  40b692:	jno    0x40b62e
  40b694:	fwait
  40b695:	xchg   BYTE PTR [edi+0xdd5ef75],al
  40b69b:	loope  0x40b64f
  40b69d:	xlat   BYTE PTR ds:[ebx]
  40b69e:	(bad)  
  40b69f:	stos   BYTE PTR es:[edi],al
  40b6a0:	(bad)  
  40b6a1:	aad    0xc2
  40b6a3:	xchg   BYTE PTR ds:0xc77d21a7,bh
  40b6a9:	in     eax,dx
  40b6aa:	sub    dh,dl
  40b6ac:	cmp    bl,BYTE PTR [ebx-0x1e]
  40b6af:	jns    0x40b6fe
  40b6b1:	in     eax,0xf4
  40b6b3:	test   BYTE PTR [edi+0x7dc0a136],dh
  40b6b9:	ins    DWORD PTR es:[edi],dx
  40b6ba:	pop    es
  40b6bb:	or     DWORD PTR [eax+esi*4-0x65d19999],edi
  40b6c2:	mov    ah,0x39
  40b6c4:	push   ebx
  40b6c5:	mov    ebx,0xe9aa90e7
  40b6ca:	jmp    0xffbf:0x6bd98617
  40b6d1:	push   ebx
  40b6d2:	xchg   ecx,eax
  40b6d3:	sar    BYTE PTR [ebp-0x70],cl
  40b6d6:	shl    BYTE PTR [ebx-0x60],0x5d
  40b6da:	mov    edx,0xbe8b9db9
  40b6df:	bound  ebp,QWORD PTR [eax]
  40b6e1:	cmp    ecx,edx
  40b6e3:	jmp    0x427d50ce
  40b6e8:	sub    DWORD PTR [ebp-0x2e5ba625],0xffffffd3
  40b6ef:	dec    eax
  40b6f0:	adc    ch,BYTE PTR [edx-0x25]
  40b6f3:	xchg   ebx,eax
  40b6f4:	pop    esp
  40b6f5:	in     eax,dx
  40b6f6:	popa   
  40b6f7:	in     eax,0xed
  40b6f9:	mov    es,WORD PTR [ebx+0x5c2388ef]
  40b6ff:	xchg   ecx,eax
  40b700:	jo     0x40b6c9
  40b702:	lock cmp eax,esp
  40b705:	cwde   
  40b706:	add    al,0xe5
  40b708:	ins    BYTE PTR es:[edi],dx
  40b709:	lea    edi,ds:0xacab26c0
  40b70f:	inc    esi
  40b710:	icebp  
  40b711:	shl    BYTE PTR ds:0x79a7aba5,cl
  40b717:	iret   
  40b718:	dec    edi
  40b719:	imul   ebx,DWORD PTR [eax+0x4d],0xfb401f3b
  40b720:	xchg   BYTE PTR [ebx+0x31],dl
  40b723:	xchg   ecx,eax
  40b724:	rcr    BYTE PTR [ebx],1
  40b726:	cmp    BYTE PTR [edi-0x7013ce1f],dl
  40b72c:	clc    
  40b72d:	pushf  
  40b72e:	cwde   
  40b72f:	add    eax,0xcf519312
  40b734:	fwait
  40b735:	lahf   
  40b736:	ss xchg esp,eax
  40b738:	cmp    DWORD PTR [esi-0xb46b975],edi
  40b73e:	push   esi
  40b73f:	lahf   
  40b740:	pusha  
  40b741:	enter  0x335e,0xdf
  40b745:	ror    esp,cl
  40b747:	(bad)  
  40b749:	(bad)
  40b74d:	iret   
  40b74e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b74f:	aaa    
  40b750:	pop    esp
  40b751:	arpl   sp,si
  40b753:	xor    eax,0x1593db6a
  40b758:	outs   dx,BYTE PTR ds:[esi]
  40b759:	xchg   edi,eax
  40b75a:	test   BYTE PTR [edx+eiz*1+0xbbef670],dl
  40b761:	jbe    0x40b702
  40b763:	mov    esp,0x4fa647e1
  40b768:	jmp    0x3d8a:0x2cd5f7ac
  40b76f:	mov    BYTE PTR [eax],al
  40b771:	rcl    BYTE PTR [edx+ebx*4-0x20445795],cl
  40b778:	jg     0x40b7ef
  40b77a:	mov    edx,0x1bc28536
  40b77f:	mov    ebp,0x259221b8
  40b784:	cdq    
  40b785:	add    DWORD PTR [edi+0x7a],ebp
  40b788:	(bad)  
  40b789:	sahf   
  40b78a:	and    eax,0xfe3c0877
  40b78f:	lods   eax,DWORD PTR ds:[esi]
  40b790:	ret    
  40b791:	and    eax,0xbdbb5cc7
  40b796:	cwde   
  40b797:	adc    DWORD PTR [eax],0xac215d7f
  40b79d:	shl    ebx,cl
  40b79f:	mov    ds:0x97ed58fc,eax
  40b7a4:	addr16 cmp al,0x81
  40b7a7:	jno    0x40b78e
  40b7a9:	adc    eax,0x9883f346
  40b7ae:	sub    eax,0xd75d5856
  40b7b3:	ret    
  40b7b4:	or     eax,DWORD PTR [esi+0x1a]
  40b7b7:	ins    DWORD PTR es:[edi],dx
  40b7b8:	gs int 0xed
  40b7bb:	xor    al,0xee
  40b7bd:	or     BYTE PTR [ebx+0x9],al
  40b7c0:	ret    0x96f8
  40b7c3:	pop    edi
  40b7c4:	gs dec edx
  40b7c6:	mov    edx,0x695e1d1
  40b7cb:	test   DWORD PTR [edx],edi
  40b7cd:	pop    esp
  40b7ce:	(bad)  
  40b7cf:	aad    0xc1
  40b7d1:	or     ah,0x12
  40b7d4:	cmc    
  40b7d5:	ja     0x40b75e
  40b7d7:	xor    DWORD PTR [esi+ecx*2+0x3e],edi
  40b7db:	jmp    0xbe55:0xff76f7c6
  40b7e2:	loopne 0x40b7b0
  40b7e4:	ficomp DWORD PTR [ecx+0x4f]
  40b7e7:	mov    dl,0xe6
  40b7e9:	or     edx,esi
  40b7eb:	add    bh,bl
  40b7ed:	inc    ebx
  40b7ee:	sub    BYTE PTR [ecx-0x45],cl
  40b7f1:	jle    0x40b78d
  40b7f3:	jmp    DWORD PTR [eax+ebp*4-0x2f]
  40b7f7:	loopne 0x40b77d
  40b7f9:	loop   0x40b7bc
  40b7fb:	out    dx,eax
  40b7fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b7fd:	jge    0x40b81c
  40b7ff:	lods   al,BYTE PTR ds:[esi]
  40b800:	out    dx,eax
  40b801:	sbb    eax,0x7e310e43
  40b806:	sar    DWORD PTR [esi+0x6d7661e2],0x4a
  40b80d:	(bad)  
  40b80e:	push   ss
  40b80f:	call   eax
  40b811:	pop    edx
  40b812:	pop    edi
  40b813:	adc    BYTE PTR [eax],cl
  40b815:	cmc    
  40b816:	gs mov ebx,0x23bf78f7
  40b81c:	pusha  
  40b81d:	pop    es
  40b81e:	mov    ebp,0x396a9735
  40b823:	adc    DWORD PTR [ecx],esi
  40b825:	push   0x23d9fb7b
  40b82a:	fwait
  40b82b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b82c:	cmp    eax,0xef79c002
  40b831:	xchg   edi,eax
  40b832:	pop    esp
  40b833:	cmp    al,0x42
  40b835:	mov    dl,0x33
  40b837:	fcom   QWORD PTR [edi]
  40b839:	pop    esi
  40b83a:	in     al,dx
  40b83b:	repz sub edi,DWORD PTR [edx+ebp*2-0x85ecd50]
  40b843:	sub    ebx,DWORD PTR [edx-0x2]
  40b846:	xchg   DWORD PTR [edi],edx
  40b848:	(bad)  
  40b849:	in     al,dx
  40b84a:	aam    0x9e
  40b84c:	inc    ebx
  40b84d:	or     eax,0x5f7b73a8
  40b852:	jle    0x40b883
  40b854:	mov    ecx,0x179eb655
  40b859:	nop
  40b85a:	cmovae edx,DWORD PTR [edi]
  40b85d:	retf   0x6082
  40b860:	mov    al,0x3d
  40b862:	add    al,0x41
  40b864:	into   
  40b865:	adc    edx,DWORD PTR [esi-0x28]
  40b868:	stos   DWORD PTR es:[edi],eax
  40b869:	pop    ecx
  40b86a:	jb     0x40b87b
  40b86c:	push   ds
  40b86d:	mov    ebp,0x3cffdae9
  40b872:	scas   al,BYTE PTR es:[edi]
  40b873:	pop    ds
  40b874:	(bad)  
  40b875:	stc    
  40b876:	xchg   esp,eax
  40b877:	sub    bh,BYTE PTR [edi-0x13]
  40b87a:	ror    DWORD PTR [ebp-0x73],1
  40b87d:	call   0xcca0:0xbdb2a26c
  40b884:	mov    ecx,0x8f6da55d
  40b889:	jo     0x40b8a3
  40b88b:	test   al,0xc3
  40b88d:	hlt    
  40b88e:	dec    esp
  40b88f:	hlt    
  40b890:	jnp    0x40b900
  40b892:	je     0x40b8c1
  40b894:	mov    eax,0xbda199da
  40b899:	pop    ds
  40b89a:	mov    eax,0x75f54c4e
  40b89f:	pop    esp
  40b8a0:	out    0x71,eax
  40b8a2:	dec    eax
  40b8a3:	fidivr WORD PTR [eax+0x26ed3d90]
  40b8a9:	or     BYTE PTR [edx-0x7d],cl
  40b8ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b8ad:	mov    edx,0xabbb6007
  40b8b2:	xlat   BYTE PTR ds:[ebx]
  40b8b3:	out    0x38,al
  40b8b5:	sbb    dh,BYTE PTR [edi+ebx*4]
  40b8b8:	call   0x3bad8ecb
  40b8bd:	cld    
  40b8be:	cmp    ebp,DWORD PTR [eax]
  40b8c0:	mov    eax,DWORD PTR ds:0x2f7cc1d8
  40b8c6:	adc    eax,0x9a8a41ab
  40b8cb:	cmp    eax,0x1f9a10b2
  40b8d0:	mov    ch,0xa2
  40b8d2:	in     eax,0xd8
  40b8d4:	push   0x1b
  40b8d6:	or     DWORD PTR [edx],edx
  40b8d8:	into   
  40b8d9:	call   0x658c:0x97cc736f
  40b8e0:	mov    edx,0xa7aa784e
  40b8e5:	out    0x2e,al
  40b8e7:	pop    es
  40b8e8:	push   cs
  40b8e9:	cmp    ecx,DWORD PTR [ecx+esi*2-0xd]
  40b8ed:	jmp    0x40b87a
  40b8ef:	mov    ecx,ebx
  40b8f1:	(bad)  [edx-0x10]
  40b8f4:	es jl  0x40b92d
  40b8f7:	and    cl,BYTE PTR [ebp-0x7e]
  40b8fa:	clc    
  40b8fb:	outs   dx,DWORD PTR ds:[esi]
  40b8fc:	std    
  40b8fd:	iret   
  40b8fe:	push   ebx
  40b8ff:	dec    esi
  40b900:	xor    DWORD PTR [edi+0x66],edx
  40b903:	bound  ebp,QWORD PTR ds:0x568148c2
  40b909:	sti    
  40b90a:	in     al,0x35
  40b90c:	jl     0x40b8b0
  40b90e:	add    eax,0xaf784cbe
  40b913:	stc    
  40b914:	in     al,dx
  40b915:	mov    ah,0x2a
  40b917:	clc    
  40b918:	cmp    ebp,DWORD PTR [ebx-0x28]
  40b91b:	mov    bl,0xdb
  40b91d:	push   ss
  40b91e:	mov    al,0xe7
  40b920:	or     eax,0xa1827496
  40b925:	and    BYTE PTR [ecx],0x48
  40b928:	mov    ebp,0xf1131f23
  40b92d:	fadd   QWORD PTR [edx+ebp*2-0x54]
  40b931:	lds    ebp,FWORD PTR [eax-0x2e9b3d9b]
  40b937:	stos   BYTE PTR es:[edi],al
  40b938:	in     eax,dx
  40b939:	fimul  DWORD PTR [edx+esi*2]
  40b93c:	mov    edi,0x228d0ea7
  40b941:	inc    eax
  40b942:	xchg   ebp,eax
  40b943:	ja     0x40b933
  40b945:	lock xchg edx,eax
  40b947:	jg     0x40b982
  40b949:	fisub  DWORD PTR [ebx]
  40b94b:	mul    DWORD PTR [edi]
  40b94d:	and    al,0xf2
  40b94f:	mov    ch,0xc8
  40b951:	mov    ebx,0xb8bd4736
  40b956:	mov    DWORD PTR [edx-0xe],esp
  40b959:	out    dx,al
  40b95a:	pusha  
  40b95b:	inc    esp
  40b95c:	add    eax,0xb37b5e59
  40b961:	sbb    edx,ebx
  40b963:	add    edi,edx
  40b965:	shl    BYTE PTR [esi+0x23bf9179],cl
  40b96b:	cmc    
  40b96c:	int    0x53
  40b96e:	xchg   edx,eax
  40b96f:	xchg   ebp,eax
  40b970:	mov    bl,0xa4
  40b972:	cmp    al,0xdd
  40b974:	push   es
  40b975:	sahf   
  40b976:	and    eax,0x9ce17eb4
  40b97b:	cdq    
  40b97c:	stos   BYTE PTR es:[edi],al
  40b97d:	retf   0xccfe
  40b980:	mov    esi,gs
  40b982:	icebp  
  40b983:	push   ss
  40b984:	or     al,0x87
  40b986:	ja     0x40b940
  40b988:	popf   
  40b989:	sbb    esi,ecx
  40b98b:	pop    DWORD PTR [edx+0x59bc56b5]
  40b991:	shl    DWORD PTR [esi-0x55e35bd9],cl
  40b997:	fsubr  QWORD PTR [ecx]
  40b999:	fxch   st(7)
  40b99b:	enter  0xbed0,0x6d
  40b99f:	mov    DWORD PTR [ebp-0x77],ebp
  40b9a2:	pop    edx
  40b9a3:	sbb    BYTE PTR [edx+0x79],dh
  40b9a6:	or     BYTE PTR [ecx+eax*8-0x4526fdfb],bh
  40b9ad:	pop    ebx
  40b9ae:	nop
  40b9af:	xor    BYTE PTR [edx+eax*2],ch
  40b9b2:	cli    
  40b9b3:	xchg   edx,eax
  40b9b4:	in     al,dx
  40b9b5:	sbb    DWORD PTR [ebx+0x5842583],esi
  40b9bb:	shl    BYTE PTR [ebp-0x668a2c6e],0xb7
  40b9c2:	push   edx
  40b9c3:	xchg   BYTE PTR [eax],cl
  40b9c5:	fdiv   DWORD PTR [ebx+0x360271ae]
  40b9cb:	(bad)  
  40b9cc:	fadd   QWORD PTR [esi+0x5ce4b460]
  40b9d2:	cmp    al,0xfb
  40b9d4:	in     eax,0xd0
  40b9d6:	xor    al,0x9a
  40b9d8:	popf   
  40b9d9:	out    0xc9,al
  40b9db:	mov    esp,0xc9dd503f
  40b9e0:	mov    esp,0xc3aa1d46
  40b9e5:	out    0x89,al
  40b9e7:	addr16 je 0x40b9e8
  40b9ea:	or     dl,ch
  40b9ec:	int    0xc0
  40b9ee:	xchg   esp,eax
  40b9ef:	inc    edx
  40b9f0:	test   al,0xb2
  40b9f2:	lea    ebx,[esi-0xae29db7]
  40b9f8:	test   al,0xd9
  40b9fa:	stos   BYTE PTR es:[edi],al
  40b9fb:	adc    BYTE PTR [edi+0x5],0xdf
  40b9ff:	outs   dx,BYTE PTR ds:[esi]
  40ba00:	into   
  40ba01:	loopne 0x40b9ac
  40ba03:	nop
  40ba04:	rcl    esp,1
  40ba06:	ja     0x40b9c7
  40ba08:	icebp  
  40ba09:	out    dx,eax
  40ba0a:	inc    ecx
  40ba0b:	dec    ebx
  40ba0c:	xor    eax,0x50095e29
  40ba11:	sub    ecx,esi
  40ba13:	push   ds
  40ba14:	sub    cl,ah
  40ba16:	adc    ebp,edi
  40ba18:	sbb    al,0x92
  40ba1a:	sub    esi,DWORD PTR [eax]
  40ba1c:	fstp   DWORD PTR [edx-0x7bb22b5a]
  40ba22:	sahf   
  40ba23:	mov    esi,0x617c62f1
  40ba28:	xlat   BYTE PTR ds:[ebx]
  40ba29:	adc    eax,0x37454a53
  40ba2e:	cwde   
  40ba2f:	aad    0x83
  40ba31:	jbe    0x40b9bf
  40ba33:	sub    BYTE PTR [eax-0x7feb86],bh
  40ba39:	fld    QWORD PTR [ecx+0x0]
  40ba3c:	push   0x7bf0cdb0
  40ba41:	adc    eax,0xb4315ae9
  40ba46:	scas   eax,DWORD PTR es:[edi]
  40ba47:	ret    
  40ba48:	add    cl,bh
  40ba4a:	mov    bh,0x23
  40ba4c:	(bad)
  40ba50:	call   0x6da5:0x4abdbd10
  40ba57:	not    DWORD PTR [ebx-0x428d2683]
  40ba5d:	(bad)  
  40ba5f:	aam    0x60
  40ba61:	inc    eax
  40ba62:	dec    esp
  40ba63:	dec    esp
  40ba64:	inc    DWORD PTR [esi]
  40ba66:	iret   
  40ba67:	out    0x68,eax
  40ba69:	xor    eax,0x96830521
  40ba6e:	sub    esi,DWORD PTR [edi+ebp*1]
  40ba71:	out    dx,al
  40ba72:	and    al,0x1f
  40ba74:	je     0x40bab4
  40ba76:	std    
  40ba77:	mov    ds:0x7b8be7b1,eax
  40ba7c:	addr16 call 0x7acc0d21
  40ba82:	cld    
  40ba83:	dec    edi
  40ba84:	mov    edi,0x24f1a476
  40ba89:	ds iret 
  40ba8b:	(bad)  
  40ba8c:	push   ss
  40ba8d:	dec    edx
  40ba8e:	gs add edx,0xa527bf33
  40ba95:	call   0xa80e:0xc75d4ce8
  40ba9c:	dec    ebp
  40ba9d:	pop    ebx
  40ba9e:	and    bl,BYTE PTR [ebx+edi*4-0x69]
  40baa2:	inc    ebx
  40baa3:	and    eax,DWORD PTR [eax]
  40baa5:	fsubr  QWORD PTR [edi+eax*1-0x23]
  40baa9:	jb     0x40ba64
  40baab:	popf   
  40baac:	fs cmp eax,0x4289c71a
  40bab2:	je     0x40ba8e
  40bab4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bab5:	gs jp  0x40ba3a
  40bab8:	scas   al,BYTE PTR es:[edi]
  40bab9:	fdiv   DWORD PTR [ebp-0x7d96cf78]
  40babf:	outs   dx,DWORD PTR ds:[esi]
  40bac0:	mov    edx,0xd4f634fe
  40bac5:	adc    bh,dl
  40bac7:	ret    
  40bac8:	mov    esi,es
  40baca:	pop    edi
  40bacb:	and    al,0x30
  40bacd:	jl     0x40bb41
  40bacf:	dec    BYTE PTR [ecx]
  40bad1:	pushw  es
  40bad3:	pop    edi
  40bad4:	cmp    al,cl
  40bad6:	cmp    dh,BYTE PTR [edi]
  40bad8:	ret    0x260a
  40badb:	repz mov dh,0x4c
  40bade:	dec    BYTE PTR [eax]
  40bae0:	add    al,0x9d
  40bae2:	or     eax,0xe1d94fa9
  40bae7:	jecxz  0x40ba71
  40bae9:	pop    esi
  40baea:	fist   DWORD PTR ds:[eax]
  40baed:	repnz (bad) 
  40baef:	repnz loope 0x40baf5
  40baf2:	xchg   esp,ebp
  40baf4:	gs sub dh,dl
  40baf7:	dec    esi
  40baf8:	mov    dh,0x28
  40bafa:	sub    ebp,DWORD PTR fs:[ebx]
  40bafd:	or     esp,edx
  40baff:	bound  edx,QWORD PTR ds:0x56d5b422
  40bb05:	sbb    dl,bl
  40bb07:	enter  0x5646,0xa0
  40bb0b:	test   eax,0xa5349e80
  40bb10:	inc    esp
  40bb11:	jge    0x40bb4e
  40bb13:	or     eax,0xd07ced81
  40bb18:	adc    edx,esi
  40bb1a:	popf   
  40bb1b:	adc    eax,0x51fc00dc
  40bb20:	call   0x9b5ec4da
  40bb25:	popf   
  40bb26:	int    0x93
  40bb28:	cmp    eax,0xcbe29537
  40bb2d:	push   esi
  40bb2e:	push   0x21
  40bb30:	push   ecx
  40bb31:	push   esp
  40bb32:	sbb    dl,BYTE PTR [ebp-0x3900e2f]
  40bb38:	std    
  40bb39:	sub    eax,0xf4661e8
  40bb3e:	fs cmp eax,0x4d2d310b
  40bb44:	popf   
  40bb45:	pop    ds
  40bb46:	ret    
  40bb47:	loopne 0x40bb72
  40bb49:	(bad)  
  40bb4a:	fld    st(4)
  40bb4c:	ins    BYTE PTR es:[edi],dx
  40bb4d:	inc    ebx
  40bb4e:	out    dx,al
  40bb4f:	inc    ebx
  40bb50:	ss mov bh,al
  40bb53:	iret   
  40bb54:	fld    DWORD PTR [ecx]
  40bb56:	cmp    ebx,DWORD PTR [esi+0x4e]
  40bb59:	into   
  40bb5a:	jmp    0xf093:0x847cfb76
  40bb61:	jae    0x40bb1e
  40bb63:	and    esp,ebp
  40bb65:	xor    BYTE PTR [ecx+edi*8],bh
  40bb68:	sub    esi,DWORD PTR [edx+0x2b]
  40bb6b:	dec    ebx
  40bb6c:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  40bb6e:	push   0x300f8217
  40bb73:	or     DWORD PTR [ebx],edi
  40bb75:	mov    eax,ds:0x8f1786b4
  40bb7a:	mov    edi,0xfa115dde
  40bb7f:	ret    0xe127
  40bb82:	sub    al,ah
  40bb84:	add    ch,BYTE PTR ds:0x5398a40e
  40bb8a:	jns    0x40bbaa
  40bb8c:	sub    eax,0xf22ac72
  40bb91:	dec    esi
  40bb92:	adc    DWORD PTR [edi-0x5154ccdd],0x29
  40bb99:	push   0x3f
  40bb9b:	mov    esp,0xfee9b722
  40bba0:	xchg   edx,eax
  40bba1:	mov    ch,0x8c
  40bba3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bba4:	out    0xb7,al
  40bba6:	push   ds
  40bba7:	xchg   edi,eax
  40bba8:	out    0x22,al
  40bbaa:	or     BYTE PTR [ebx+edx*2-0x74],ah
  40bbae:	(bad)  
  40bbaf:	sub    bl,BYTE PTR [esi+0x51]
  40bbb2:	add    ch,bh
  40bbb4:	xchg   esi,ebx
  40bbb6:	imul   edx,DWORD PTR ds:0xa6c1167f,0x24
  40bbbd:	mov    esp,0x62d5c252
  40bbc2:	dec    ebx
  40bbc3:	ret    0x798c
  40bbc6:	push   esi
  40bbc7:	das    
  40bbc8:	mov    ebp,gs
  40bbca:	inc    ebx
  40bbcb:	sbb    al,0x2b
  40bbcd:	mov    bl,ah
  40bbcf:	stos   DWORD PTR es:[edi],eax
  40bbd0:	call   0xd52e:0xdeb1aecf
  40bbd7:	fisttp DWORD PTR [esi+eiz*1]
  40bbda:	sbb    cl,dh
  40bbdc:	mov    WORD PTR [edx-0x2c],ds
  40bbdf:	stos   DWORD PTR es:[edi],eax
  40bbe0:	bound  eax,QWORD PTR [edx+ebp*1+0x37]
  40bbe4:	in     al,dx
  40bbe5:	cmp    DWORD PTR [edx-0x13be6fd6],ebp
  40bbeb:	xchg   ch,bl
  40bbed:	mov    esi,0xc84acf5f
  40bbf2:	add    eax,0x5c5efac9
  40bbf7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bbf8:	out    dx,al
  40bbf9:	ret    
  40bbfa:	inc    edx
  40bbfb:	mov    ebp,0xd7aad6f6
  40bc00:	ss jne 0x40bc73
  40bc03:	loop   0x40bbb2
  40bc05:	pushf  
  40bc06:	cmp    al,0x94
  40bc08:	dec    ebx
  40bc09:	jp     0x40bc21
  40bc0b:	je     0x40bc26
  40bc0d:	and    al,0x48
  40bc0f:	push   eax
  40bc10:	jl     0x40bc8b
  40bc12:	(bad)  
  40bc13:	cmc    
  40bc14:	test   eax,0x92964c70
  40bc19:	loopne 0x40bc08
  40bc1b:	in     al,0xe1
  40bc1d:	sbb    bh,bl
  40bc1f:	xchg   ecx,eax
  40bc20:	sahf   
  40bc21:	jnp    0x40bbd6
  40bc23:	es mov edi,0x91434a4
  40bc29:	inc    eax
  40bc2a:	leave  
  40bc2b:	mov    bh,0x31
  40bc2d:	mov    esp,0xd2999d
  40bc32:	fisub  WORD PTR [ebx+0x5f]
  40bc35:	fst    QWORD PTR [esi]
  40bc37:	push   eax
  40bc38:	test   ebp,0x5dd3d288
  40bc3e:	cmp    eax,0x9949c2f9
  40bc43:	pop    ds
  40bc44:	xchg   edi,eax
  40bc45:	and    eax,0xd5645ac4
  40bc4a:	cmp    dh,BYTE PTR [edi+0x59b18784]
  40bc50:	addr16 cwde 
  40bc52:	pop    ebp
  40bc53:	jle    0x40bbfb
  40bc55:	add    dl,BYTE PTR [edi+0x67129610]
  40bc5b:	pop    es
  40bc5c:	jecxz  0x40bc17
  40bc5e:	(bad)  
  40bc5f:	xor    al,0xba
  40bc61:	in     al,dx
  40bc62:	scas   al,BYTE PTR es:[edi]
  40bc63:	and    edi,ebx
  40bc65:	pop    ss
  40bc66:	out    0xad,eax
  40bc68:	rcl    DWORD PTR [ebx+0x79647f96],1
  40bc6e:	fs inc eax
  40bc70:	xor    DWORD PTR [ebx-0x4f],eax
  40bc73:	fidivr DWORD PTR [esi-0x1b]
  40bc76:	lock jne 0x40bca1
  40bc79:	aam    0xc1
  40bc7b:	(bad)  
  40bc7c:	nop
  40bc7d:	sub    BYTE PTR [eax],bh
  40bc7f:	and    eax,0x1c38fefa
  40bc84:	xor    al,0xf7
  40bc86:	loope  0x40bcfb
  40bc88:	adc    edi,esi
  40bc8a:	mov    BYTE PTR [ecx+0x4a],cl
  40bc8d:	test   DWORD PTR [esp+ebx*4],esp
  40bc90:	popf   
  40bc91:	bound  edi,QWORD PTR gs:[edi-0x1e]
  40bc95:	xchg   DWORD PTR [ebp-0x2b],edx
  40bc98:	pop    es
  40bc99:	retf   0xc965
  40bc9c:	jmp    0x9a45:0x6583e9b5
  40bca3:	xor    eax,0xa11b4f3c
  40bca8:	repnz fwait
  40bcaa:	adc    bh,BYTE PTR [ebx+0x420b04eb]
  40bcb0:	mov    eax,0xa83f9b81
  40bcb5:	pop    ss
  40bcb6:	mov    gs,ebp
  40bcb8:	repz mov eax,ds:0x56dfe1f0
  40bcbe:	sub    esp,DWORD PTR [edx+0x4005004]
  40bcc4:	xchg   edx,eax
  40bcc5:	scas   eax,DWORD PTR es:[edi]
  40bcc6:	(bad)  
  40bcc7:	enter  0x7bcf,0xab
  40bccb:	int3   
  40bccc:	mov    BYTE PTR [edx],dl
  40bcce:	int    0x26
  40bcd0:	in     eax,dx
  40bcd1:	test   ah,0x1f
  40bcd4:	addr16 loope 0x40bd4f
  40bcd7:	inc    ecx
  40bcd8:	sahf   
  40bcd9:	and    bh,BYTE PTR [ebx+edx*8+0x4f36951e]
  40bce0:	xchg   edx,eax
  40bce1:	test   BYTE PTR [edi],al
  40bce3:	mov    ch,0x5c
  40bce5:	xor    ch,cl
  40bce7:	sar    BYTE PTR [ecx],0x74
  40bcea:	inc    edx
  40bceb:	mov    esi,0xf5d2d1c7
  40bcf0:	add    al,0x51
  40bcf2:	push   ss
  40bcf3:	call   0x544f1143
  40bcf8:	inc    esi
  40bcf9:	mov    eax,ds:0xaeda60c3
  40bcfe:	ja     0x40bd20
  40bd00:	inc    esp
  40bd01:	imul   edx,DWORD PTR [ebx+0x27],0xf4c90ae1
  40bd08:	jmp    0xd46cbe4a
  40bd0d:	xor    BYTE PTR [edi-0x488ed154],ch
  40bd13:	mov    ch,0xb5
  40bd15:	xchg   edi,eax
  40bd16:	jnp    0x40bd26
  40bd18:	test   BYTE PTR [esi+ecx*2+0x75],bl
  40bd1c:	aaa    
  40bd1d:	dec    ebx
  40bd1e:	inc    DWORD PTR [ebx+ebx*4+0x74]
  40bd22:	in     al,dx
  40bd23:	dec    ecx
  40bd24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bd25:	pop    edx
  40bd26:	iret   
  40bd27:	lods   eax,DWORD PTR ds:[esi]
  40bd28:	adc    ch,bl
  40bd2a:	je     0x40bd7a
  40bd2c:	mov    ebp,0xf8de778
  40bd31:	mov    cl,BYTE PTR [edx+0x7b108abd]
  40bd37:	lea    ecx,es:[edi]
  40bd3a:	push   ss
  40bd3b:	xchg   BYTE PTR [eax-0x2c],cl
  40bd3e:	fild   DWORD PTR [edi-0xfd20692]
  40bd44:	pop    eax
  40bd46:	sti    
  40bd47:	push   es
  40bd48:	scas   al,BYTE PTR es:[edi]
  40bd49:	mov    cl,0xa5
  40bd4b:	ins    DWORD PTR es:[edi],dx
  40bd4c:	pop    ebx
  40bd4d:	add    ah,cl
  40bd4f:	push   cs
  40bd50:	cmp    al,0xf8
  40bd52:	and    BYTE PTR [ebx-0xe],al
  40bd55:	or     DWORD PTR [edx+eax*1+0x759e62eb],ebx
  40bd5c:	inc    esi
  40bd5d:	push   eax
  40bd5e:	mov    esp,0xee0307c3
  40bd63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bd64:	jbe    0x40bd44
  40bd66:	shr    DWORD PTR [esi+0x7],0xba
  40bd6a:	cmp    ebx,DWORD PTR [eax-0x1c]
  40bd6d:	dec    ebx
  40bd6e:	rcr    BYTE PTR [esi],1
  40bd70:	addr16 cmp cl,ah
  40bd73:	mov    ds:0xe404ce14,eax
  40bd78:	dec    ebx
  40bd79:	test   eax,0xffd37491
  40bd7e:	xor    DWORD PTR [edx],ebp
  40bd80:	outs   dx,BYTE PTR ds:[esi]
  40bd81:	aam    0x61
  40bd83:	cmp    esi,DWORD PTR [edx+0x76]
  40bd86:	inc    edx
  40bd87:	loope  0x40be08
  40bd89:	scas   al,BYTE PTR es:[edi]
  40bd8a:	jno    0x40be04
  40bd8c:	push   edi
  40bd8d:	mov    fs,esi
  40bd8f:	int    0xb9
  40bd91:	and    al,0x64
  40bd93:	add    al,0x7b
  40bd95:	jge    0x40bdb5
  40bd97:	stc    
  40bd98:	call   0x67a3025b
  40bd9d:	sub    dl,BYTE PTR [eax-0x19]
  40bda0:	xchg   edx,eax
  40bda1:	icebp  
  40bda2:	cmp    al,0x37
  40bda4:	adc    al,0xe7
  40bda6:	sub    edi,DWORD PTR [ebp+0x30671f1a]
  40bdac:	xchg   ebx,eax
  40bdad:	sbb    ah,bl
  40bdaf:	daa    
  40bdb0:	ror    dl,cl
  40bdb2:	stos   DWORD PTR es:[edi],eax
  40bdb3:	mov    esp,0x3308ad2
  40bdb8:	arpl   WORD PTR [ecx-0x3a],cx
  40bdbb:	stos   BYTE PTR es:[edi],al
  40bdbc:	aaa    
  40bdbd:	ret    
  40bdbe:	outs   dx,DWORD PTR ds:[esi]
  40bdbf:	sub    al,BYTE PTR [esi]
  40bdc1:	sub    al,0x49
  40bdc3:	test   BYTE PTR [ecx-0x4d],ah
  40bdc6:	lock int3 
  40bdc8:	sbb    eax,0x92503df7
  40bdcd:	sbb    eax,DWORD PTR [edx+0x33e23d28]
  40bdd3:	(bad)  
  40bdd5:	in     eax,0xe6
  40bdd7:	add    eax,0x294aa7cd
  40bddc:	(bad)  
  40bddd:	iret   
  40bdde:	int    0x58
  40bde0:	bound  esi,QWORD PTR [esi-0x71741c28]
  40bde6:	jbe    0x40be3c
  40bde8:	idiv   DWORD PTR [ebx+0x49c59aaf]
  40bdee:	stc    
  40bdef:	shl    dl,cl
  40bdf1:	xchg   esi,eax
  40bdf2:	mov    ch,0x42
  40bdf4:	pop    ebp
  40bdf5:	xor    BYTE PTR [edx-0xd],dh
  40bdf8:	push   0xb856ad5b
  40bdfd:	aad    0x39
  40bdff:	xchg   cx,ax
  40be01:	mov    al,ds:0x33f3977f
  40be06:	les    edi,FWORD PTR [esi-0x4f]
  40be09:	mov    esi,0x92b86de1
  40be0e:	lock or ch,BYTE PTR [edi-0x18]
  40be12:	mov    ds,WORD PTR [edx+0x994a689]
  40be18:	daa    
  40be19:	sbb    edx,DWORD PTR [edi+0x69f44bd4]
  40be1f:	cmp    al,BYTE PTR [esi]
  40be21:	mov    ch,BYTE PTR ss:[ecx+eax*8+0xf]
  40be26:	jae    0x40be7f
  40be28:	and    edx,edx
  40be2a:	mov    WORD PTR [edx+0x62],fs
  40be2d:	ret    
  40be2e:	adc    eax,esp
  40be30:	repnz lea ebp,[ecx]
  40be33:	mov    dl,0x4a
  40be35:	sahf   
  40be36:	stos   DWORD PTR es:[edi],eax
  40be37:	pusha  
  40be38:	imul   eax,ebp,0xcdb43c7a
  40be3e:	es push edi
  40be40:	mov    dl,0xf0
  40be42:	mov    eax,0x6d5bcef4
  40be47:	mov    ecx,0x3e770570
  40be4c:	mov    bh,0x79
  40be4e:	sbb    al,0x8c
  40be50:	int    0x3f
  40be52:	push   ss
  40be53:	popa   
  40be54:	xor    dh,dh
  40be56:	pop    ebp
  40be57:	and    al,BYTE PTR [ebx-0x52]
  40be5a:	cli    
  40be5b:	(bad)  
  40be5c:	fxch   st(4)
  40be5e:	and    eax,0x651219f7
  40be63:	sar    DWORD PTR [edi+0x481652b8],0x86
  40be6a:	mov    DWORD PTR [ecx-0x9],ebx
  40be6d:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be6f:	xchg   edi,eax
  40be70:	leave  
  40be71:	out    0x60,al
  40be73:	out    dx,al
  40be74:	clc    
  40be75:	nop
  40be76:	pop    edi
  40be77:	mul    DWORD PTR [esi-0x483e6299]
  40be7d:	pop    ss
  40be7e:	cmp    eax,0x2e3297da
  40be83:	cmp    BYTE PTR [ebx-0x50134120],ah
  40be89:	sbb    BYTE PTR [esi],ch
  40be8b:	pop    esi
  40be8c:	imul   ecx,esi,0xffffffdb
  40be8f:	mov    ecx,0x42cfc8e3
  40be94:	mov    eax,ds:0x36b78167
  40be99:	stc    
  40be9a:	pop    es
  40be9b:	sub    DWORD PTR [edi-0x39],esp
  40be9e:	push   esp
  40be9f:	xchg   esp,eax
  40bea0:	ds test al,0x34
  40bea3:	hlt    
  40bea4:	adc    edx,DWORD PTR [edx+ecx*8+0x63]
  40bea8:	icebp  
  40bea9:	adc    DWORD PTR [ebx],edx
  40beab:	jnp    0x40bec8
  40bead:	pop    edi
  40beae:	push   eax
  40beaf:	and    BYTE PTR [edx-0x45],al
  40beb2:	xchg   DWORD PTR [ebx-0x79aed1ec],edx
  40beb8:	sub    ebp,DWORD PTR [ecx]
  40beba:	or     BYTE PTR fs:[ebp+0x43],bh
  40bebe:	push   ss
  40bebf:	xor    dh,BYTE PTR [ebx]
  40bec1:	push   esp
  40bec2:	inc    ebp
  40bec3:	or     DWORD PTR [esi+ecx*4-0x34],esi
  40bec7:	sahf   
  40bec8:	fcom   DWORD PTR [edx+0x5d]
  40becb:	pop    esi
  40becc:	pop    eax
  40becd:	int    0x6b
  40becf:	pushf  
  40bed0:	sar    al,1
  40bed2:	or     esi,DWORD PTR [edi+0x4c]
  40bed5:	lods   eax,DWORD PTR ds:[esi]
  40bed6:	add    BYTE PTR [edi],dl
  40bed8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bed9:	and    eax,0x9d0cf44f
  40bede:	or     al,0x6b
  40bee0:	(bad)  
  40bee1:	fistp  DWORD PTR [ecx]
  40bee3:	test   ebx,edx
  40bee5:	jae    0x40bf56
  40bee7:	sub    BYTE PTR [esi],ch
  40bee9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40beea:	pop    ebx
  40beeb:	fmul   QWORD PTR [eax]
  40beed:	add    esp,DWORD PTR [edx+ebp*4]
  40bef0:	ss test al,0xec
  40bef3:	icebp  
  40bef4:	push   ecx
  40bef5:	jns    0x40bf3d
  40bef7:	(bad)  
  40bef8:	aaa    
  40bef9:	out    0xa3,eax
  40befb:	test   DWORD PTR [edx],edx
  40befd:	mov    esp,0xa26fcbd4
  40bf02:	jecxz  0x40bea8
  40bf04:	add    eax,0x7d9fc4eb
  40bf09:	aam    0x89
  40bf0b:	(bad)  
  40bf0c:	lods   al,BYTE PTR ds:[esi]
  40bf0d:	and    al,BYTE PTR ds:0x34fb276f
  40bf13:	ja     0x40bf55
  40bf15:	inc    esp
  40bf16:	inc    esi
  40bf17:	mov    cs,eax
  40bf19:	mov    bh,0xea
  40bf1b:	sub    ecx,DWORD PTR ds:0xa46150d4
  40bf21:	dec    edx
  40bf22:	scas   eax,DWORD PTR es:[edi]
  40bf23:	fidiv  WORD PTR [ecx+0x3a]
  40bf26:	(bad)  
  40bf27:	adc    esi,ecx
  40bf29:	or     DWORD PTR [edi-0x1311ad86],ebp
  40bf2f:	push   es
  40bf30:	test   al,cl
  40bf32:	(bad)  
  40bf34:	xchg   ebp,eax
  40bf35:	int3   
  40bf36:	test   DWORD PTR [esi-0x3574588f],edi
  40bf3c:	mov    esp,edi
  40bf3e:	mov    dh,0xc8
  40bf40:	push   ds
  40bf41:	lods   eax,DWORD PTR ds:[esi]
  40bf42:	mov    dh,BYTE PTR [eax-0x74]
  40bf45:	cld    
  40bf46:	pushf  
  40bf47:	and    ch,bh
  40bf49:	mov    ebp,0x7484134e
  40bf4e:	and    dh,BYTE PTR [esi]
  40bf50:	imul   edx,DWORD PTR [ecx+0x4e5b80b9],0xffffff84
  40bf57:	loope  0x40bf7f
  40bf59:	cmp    DWORD PTR [ecx+eiz*8-0x23],eax
  40bf5d:	outs   dx,BYTE PTR ds:[esi]
  40bf5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bf5f:	push   ds
  40bf60:	xor    eax,0x4f3150b8
  40bf65:	cmp    eax,0x6ac2e77
  40bf6a:	xor    esi,ebx
  40bf6c:	add    dl,ah
  40bf6e:	xchg   esp,eax
  40bf6f:	test   BYTE PTR [eax+0x58],bh
  40bf72:	out    dx,eax
  40bf73:	push   ecx
  40bf74:	add    BYTE PTR [esi],dl
  40bf76:	gs dec ebp
  40bf78:	mov    ds:0xd91cbfb4,eax
  40bf7d:	gs sahf 
  40bf7f:	mov    al,0x10
  40bf81:	ins    BYTE PTR es:[edi],dx
  40bf82:	inc    esi
  40bf83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bf84:	pop    ecx
  40bf85:	pop    ebp
  40bf86:	pusha  
  40bf87:	jmp    0x772ea331
  40bf8c:	jle    0x40bf8d
  40bf8e:	bound  eax,QWORD PTR [ebp+0x7c]
  40bf91:	mov    edx,0xe9c32593
  40bf96:	pop    ebx
  40bf97:	cmp    al,0x29
  40bf99:	xchg   esi,eax
  40bf9a:	mov    ds:0x53681aea,eax
  40bf9f:	sti    
  40bfa0:	stos   DWORD PTR es:[edi],eax
  40bfa1:	push   es
  40bfa2:	jmp    0x8531e7d0
  40bfa7:	mov    cl,0x84
  40bfa9:	push   edx
  40bfaa:	(bad)  [esi-0x2bd1e5bf]
  40bfb0:	stos   DWORD PTR es:[edi],eax
  40bfb1:	arpl   WORD PTR [ebx+0x7],sp
  40bfb4:	aaa    
  40bfb5:	mov    gs,ebx
  40bfb7:	out    dx,al
  40bfb8:	and    DWORD PTR [edi-0x1483daeb],edi
  40bfbe:	test   al,0xd2
  40bfc0:	pop    edi
  40bfc1:	in     al,0xe6
  40bfc3:	mov    al,ds:0x3253c008
  40bfc8:	call   0x7be6:0x201f06ae
  40bfcf:	adc    ecx,esi
  40bfd1:	dec    ebx
  40bfd2:	loope  0x40bfe7
  40bfd4:	sahf   
  40bfd5:	sbb    DWORD PTR [eax+esi*1+0x3591a4e2],ebx
  40bfdc:	or     eax,0x5ae9509d
  40bfe1:	iret   
  40bfe2:	xor    dh,BYTE PTR [ebp+esi*1-0x26c6437c]
  40bfe9:	les    ebx,FWORD PTR ds:0x9c1a0380
  40bfef:	popf   
  40bff0:	push   0xffffffc0
  40bff2:	and    eax,0xf0d361c6
  40bff7:	xchg   esp,eax
  40bff8:	mov    ecx,0xc2d118f9
  40bffd:	dec    ecx
  40bffe:	mov    DWORD PTR [esi],eax
  40c000:	das    
  40c001:	fisttp QWORD PTR [esi+0x38]
  40c004:	popf   
  40c005:	dec    ecx
  40c006:	push   0x1d031193
  40c00b:	fisubr DWORD PTR [esp+eiz*4]
  40c00e:	bound  edx,QWORD PTR [ecx+0x3d]
  40c011:	dec    esp
  40c012:	inc    edi
  40c013:	or     al,0xc6
  40c015:	inc    ebp
  40c016:	jmp    ecx
  40c018:	test   eax,0x337ec836
  40c01d:	mov    dh,0x40
  40c01f:	into   
  40c020:	mov    al,0x49
  40c022:	add    esi,DWORD PTR [edx+eiz*2]
  40c025:	add    DWORD PTR [edi],esp
  40c027:	push   edi
  40c028:	stos   BYTE PTR es:[edi],al
  40c029:	inc    DWORD PTR [edi]
  40c02b:	leave  
  40c02c:	xchg   ebp,eax
  40c02d:	not    DWORD PTR [edi-0x37]
  40c030:	adc    ah,BYTE PTR [edx+0x308588a5]
  40c036:	inc    esp
  40c037:	fld    QWORD PTR ds:0xcdf0c37a
  40c03d:	call   0x807b9016
  40c042:	and    eax,0xc0e7ffb6
  40c047:	and    al,0x2b
  40c049:	or     DWORD PTR [esi],0xdbded0fd
  40c04f:	out    dx,eax
  40c050:	pop    esi
  40c051:	mov    dl,0x61
  40c053:	cmc    
  40c054:	xchg   esi,eax
  40c055:	inc    ebp
  40c056:	add    eax,0xc6d712a6
  40c05b:	inc    edx
  40c05c:	mov    eax,0x782e4a51
  40c061:	ja     0x40c0b2
  40c063:	dec    eax
  40c064:	cmp    BYTE PTR [edi+0xc],cl
  40c067:	outs   dx,BYTE PTR gs:[esi]
  40c069:	mov    bh,0x88
  40c06b:	out    dx,eax
  40c06c:	or     cl,ch
  40c06e:	pop    esi
  40c06f:	jecxz  0x40c0dd
  40c071:	sbb    eax,0x5cd292ae
  40c076:	xor    dh,BYTE PTR [edi+0x6e]
  40c079:	(bad)  
  40c07a:	xlat   BYTE PTR ds:[ebx]
  40c07b:	or     esp,edx
  40c07d:	shr    BYTE PTR [ebp-0x30a9a1d8],cl
  40c083:	stos   DWORD PTR es:[edi],eax
  40c084:	int    0x7b
  40c086:	add    al,0xb5
  40c088:	mov    esp,0x90226f66
  40c08d:	and    dl,ah
  40c08f:	cmp    eax,0x616a41fa
  40c094:	inc    ebp
  40c095:	sub    eax,0xb1489c20
  40c09a:	in     eax,dx
  40c09b:	enter  0x275f,0xa4
  40c09f:	jg     0x40c02e
  40c0a1:	xor    dh,BYTE PTR [ecx]
  40c0a3:	rcr    BYTE PTR [eax+0x3be5bb42],0x52
  40c0aa:	xor    dl,BYTE PTR [edi+0x2eeb34bc]
  40c0b0:	fs (bad) 
  40c0b2:	cmp    DWORD PTR [edi],edi
  40c0b4:	mov    eax,ds:0x2cd6e3c5
  40c0b9:	test   eax,0xda221a67
  40c0be:	inc    edi
  40c0bf:	push   es
  40c0c0:	dec    esi
  40c0c1:	mul    ecx
  40c0c3:	imul   esi,DWORD PTR [edi],0x1a840261
  40c0c9:	add    eax,0xdef5ddcc
  40c0ce:	mov    BYTE PTR [ebx+0x5b],dl
  40c0d1:	lahf   
  40c0d2:	cli    
  40c0d3:	inc    esi
  40c0d4:	inc    esi
  40c0d5:	mov    bh,0xf9
  40c0d7:	pop    esp
  40c0d8:	les    esp,FWORD PTR [edi+0x79]
  40c0db:	push   ecx
  40c0dc:	in     eax,dx
  40c0dd:	mov    ds:0x4ee16f5,al
  40c0e2:	jg     0x40c0ba
  40c0e4:	xchg   BYTE PTR [eax-0x36356a4a],dl
  40c0ea:	bsf    edx,DWORD PTR [ecx]
  40c0ed:	adc    BYTE PTR [esi+0x41],0xe3
  40c0f1:	jo     0x40c10c
  40c0f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c0f4:	sahf   
  40c0f5:	jl     0x40c170
  40c0f7:	pop    eax
  40c0f8:	rcl    BYTE PTR [eax],cl
  40c0fa:	fmulp  st(1),st
  40c0fc:	mov    esi,DWORD PTR [ecx+0x2e5bbf6]
  40c102:	ds jl  0x40c0af
  40c105:	ds pop eax
  40c107:	jbe    0x40c09d
  40c109:	div    BYTE PTR [edx]
  40c10b:	pop    esi
  40c10c:	dec    ebp
  40c10d:	sbb    ch,dh
  40c10f:	sub    DWORD PTR [edx+0x66],ebx
  40c112:	inc    esp
  40c113:	into   
  40c114:	dec    ecx
  40c115:	test   al,0x78
  40c117:	pusha  
  40c118:	shl    DWORD PTR [eax-0x2c762b34],0x7a
  40c11f:	stc    
  40c120:	test   DWORD PTR [eax+0x43],edi
  40c123:	aas    
  40c124:	cdq    
  40c125:	popf   
  40c126:	div    DWORD PTR ds:0x46e4c888
  40c12c:	jmp    0x12985cb1
  40c131:	xor    ah,BYTE PTR [ebx+0x4b104cd5]
  40c137:	inc    esp
  40c138:	cmc    
  40c139:	outs   dx,DWORD PTR ds:[esi]
  40c13a:	in     eax,dx
  40c13b:	xor    DWORD PTR [esi],ecx
  40c13d:	inc    edi
  40c13e:	mov    eax,ds:0x784538d
  40c143:	pop    edi
  40c144:	mov    ah,0x9
  40c146:	ins    DWORD PTR es:[edi],dx
  40c147:	aas    
  40c148:	aad    0xaf
  40c14a:	(bad)  
  40c14b:	and    BYTE PTR [esi],bl
  40c14d:	iret   
  40c14e:	inc    edx
  40c14f:	ds cmc 
  40c151:	adc    eax,0x3880bbab
  40c156:	int3   
  40c157:	or     ah,bh
  40c159:	cmp    al,0x12
  40c15b:	adc    edi,esp
  40c15d:	inc    ecx
  40c15e:	xchg   edi,eax
  40c15f:	jl     0x40c138
  40c161:	psrlq  mm3,mm0
  40c164:	je     0x40c103
  40c166:	adc    cl,BYTE PTR [edi+0x4f]
  40c169:	sbb    eax,esi
  40c16b:	ins    DWORD PTR es:[edi],dx
  40c16c:	ds je  0x40c18e
  40c16f:	jno    0x40c1aa
  40c171:	xchg   edx,eax
  40c172:	aam    0x82
  40c174:	ret    0x2348
  40c177:	jo     0x40c1d1
  40c179:	rol    BYTE PTR [edx],1
  40c17b:	adc    al,0xe8
  40c17d:	mov    eax,ds:0x529d5310
  40c182:	in     eax,dx
  40c183:	mov    ds:0xaba9f1c5,eax
  40c188:	mov    ebp,0xa5339612
  40c18d:	mov    dl,0xe
  40c18f:	in     eax,dx
  40c190:	and    DWORD PTR [esi+0x2d],ecx
  40c193:	mov    ecx,0x10f2666b
  40c198:	fs mov ebp,0xab8064c9
  40c19e:	stc    
  40c19f:	xor    al,0x91
  40c1a1:	cmp    esp,DWORD PTR [ecx]
  40c1a3:	jne    0x40c1e9
  40c1a5:	sar    DWORD PTR [edx-0x3889badf],1
  40c1ab:	fdivr  DWORD PTR [ecx+0x4b]
  40c1ae:	dec    ebp
  40c1af:	cdq    
  40c1b0:	sbb    eax,0x3706ca3c
  40c1b5:	enter  0xe1dd,0xb
  40c1b9:	sub    eax,0xbf70c322
  40c1be:	pop    ecx
  40c1bf:	enter  0x2194,0x2f
  40c1c3:	iret   
  40c1c4:	sahf   
  40c1c5:	ins    DWORD PTR es:[edi],dx
  40c1c6:	jle    0x40c1d1
  40c1c8:	push   0x4023bb7
  40c1cd:	jecxz  0x40c175
  40c1cf:	inc    edx
  40c1d0:	adc    al,0xaa
  40c1d2:	repz fild DWORD PTR ds:[esp+ebx*4]
  40c1d7:	retf   0x9db4
  40c1da:	push   0x28
  40c1dc:	or     eax,0x8dcc32dc
  40c1e1:	mov    dh,BYTE PTR [esi+eax*8+0x7c]
  40c1e5:	pop    edx
  40c1e6:	dec    eax
  40c1e7:	cs icebp 
  40c1e9:	mov    bh,al
  40c1eb:	stos   DWORD PTR es:[edi],eax
  40c1ec:	mov    BYTE PTR [eax-0x4f],cl
  40c1ef:	pop    edx
  40c1f0:	inc    ebp
  40c1f1:	sbb    al,0x99
  40c1f3:	mov    bh,0x5d
  40c1f5:	mov    eax,0x20c4bb75
  40c1fa:	pop    es
  40c1fb:	mov    bl,0x7
  40c1fd:	jecxz  0x40c1cd
  40c1ff:	fisub  DWORD PTR [ecx]
  40c201:	cli    
  40c202:	sub    BYTE PTR [edx],ah
  40c204:	int    0x7c
  40c206:	jmp    0x40c227
  40c208:	lea    esp,[ecx-0x6e4c47cb]
  40c20e:	scas   eax,DWORD PTR es:[edi]
  40c20f:	mov    ds:0x798997a8,eax
  40c214:	push   ds
  40c215:	mov    al,0xb4
  40c217:	call   0xfd93:0x4d9955d3
  40c21e:	pop    eax
  40c21f:	sub    eax,0xcc6b8ff1
  40c224:	pop    ecx
  40c225:	lds    esp,FWORD PTR [eax]
  40c227:	sbb    BYTE PTR [edi+0x41],al
  40c22a:	out    0xe3,al
  40c22c:	daa    
  40c22d:	jg     0x40c1b0
  40c22f:	(bad)  
  40c230:	aad    0x53
  40c232:	mov    bh,0xe7
  40c234:	or     DWORD PTR [edx+0x1d],0xffffffed
  40c238:	daa    
  40c239:	loop   0x40c240
  40c23b:	leave  
  40c23c:	or     ebx,DWORD PTR [esp+esi*2]
  40c23f:	xchg   ebp,eax
  40c240:	into   
  40c241:	add    al,BYTE PTR [eax+0x35]
  40c244:	mov    fs,WORD PTR [edi]
  40c246:	ds popf 
  40c248:	cs inc esi
  40c24a:	xor    cl,dh
  40c24c:	sub    edi,ebx
  40c24e:	js     0x40c28f
  40c250:	jle    0x40c29c
  40c252:	retf   
  40c253:	stos   BYTE PTR es:[edi],al
  40c254:	adc    eax,DWORD PTR [esi+0x513b9a76]
  40c25a:	dec    esp
  40c25b:	popf   
  40c25c:	or     edx,DWORD PTR [edx+edi*8]
  40c25f:	mov    edx,0x2c920fb9
  40c264:	mov    ds:0x197e62b8,eax
  40c269:	mov    dh,ah
  40c26b:	mov    ch,0xa4
  40c26d:	nop
  40c26e:	mov    eax,ds:0x69f00e93
  40c273:	xor    eax,DWORD PTR [ecx]
  40c275:	in     eax,0xe3
  40c277:	inc    edi
  40c278:	fucomp st(5)
  40c27a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c27b:	inc    ecx
  40c27c:	div    al
  40c27e:	addr16 adc eax,0x7a2199c1
  40c284:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c285:	cmp    DWORD PTR [ecx],ecx
  40c287:	ret    0x41fb
  40c28a:	inc    ebp
  40c28b:	rol    DWORD PTR [esp+edx*8],cl
  40c28e:	push   0xfffffffa
  40c290:	fmul   QWORD PTR [ecx-0x2a]
  40c293:	pop    ss
  40c294:	bound  esi,QWORD PTR [ecx]
  40c296:	and    ebp,DWORD PTR [edi]
  40c298:	rcr    BYTE PTR [esi],1
  40c29a:	mov    ah,0xbc
  40c29c:	adc    eax,DWORD PTR [ebx]
  40c29e:	ret    0xd3e
  40c2a1:	sti    
  40c2a2:	test   DWORD PTR [ebx],0x200d000e
  40c2a8:	mov    esp,0x8d50146a
  40c2ad:	or     bl,al
  40c2af:	retf   0xebe6
  40c2b2:	push   eax
  40c2b3:	jnp    0x40c2a0
  40c2b5:	std    
  40c2b6:	sbb    BYTE PTR ds:0x19800be8,bl
  40c2bc:	adc    BYTE PTR [ebp+ebx*4-0x32fad73a],cl
  40c2c3:	sub    ebx,edx
  40c2c5:	arpl   sp,bx
  40c2c7:	pop    esi
  40c2c8:	push   edi
  40c2c9:	pop    edi
  40c2ca:	popf   
  40c2cb:	popf   
  40c2cc:	nop
  40c2cd:	mov    eax,0xbf1b2b60
  40c2d2:	ror    DWORD PTR [ebp+0x33d9247c],0x3a
  40c2d9:	sbb    DWORD PTR [ebx+eiz*1-0x5f],eax
  40c2dd:	or     eax,0xffffffd5
  40c2e0:	inc    edx
  40c2e1:	sahf   
  40c2e2:	pop    edi
  40c2e3:	(bad)  
  40c2e4:	out    0xf2,eax
  40c2e6:	xchg   ebx,eax
  40c2e7:	jb     0x40c344
  40c2e9:	js     0x40c331
  40c2eb:	dec    esi
  40c2ec:	shl    DWORD PTR [ecx+0xc],0x4
  40c2f0:	mov    ds:0xf275f43c,eax
  40c2f5:	and    ah,cl
  40c2f7:	call   0xd63a348c
  40c2fc:	sbb    al,0x67
  40c2fe:	push   cs
  40c2ff:	call   FWORD PTR ds:0xce5a29f4
  40c305:	clc    
  40c306:	mov    eax,0x5498ef2c
  40c30b:	mov    DWORD PTR [ebx+0x442f10cd],ebx
  40c311:	(bad)  
  40c312:	imul   edi,DWORD PTR [ebx+edx*8-0x1f],0xffffffc5
  40c317:	ins    BYTE PTR es:[edi],dx
  40c318:	stos   DWORD PTR es:[edi],eax
  40c319:	out    0x76,eax
  40c31b:	xchg   ebx,eax
  40c31c:	in     eax,dx
  40c31d:	mov    WORD PTR [eax-0x401df509],gs
  40c323:	xor    BYTE PTR [esi],bh
  40c325:	fcomp  DWORD PTR [edi]
  40c327:	mov    esi,0x50f90867
  40c32c:	pop    edi
  40c32d:	cdq    
  40c32e:	add    dl,BYTE PTR [ebp+0x14]
  40c331:	arpl   WORD PTR [edi+0x3d],bp
  40c334:	(bad)  
  40c336:	loopne 0x40c2ed
  40c338:	push   edx
  40c339:	test   ebp,eax
  40c33b:	lods   eax,DWORD PTR ds:[esi]
  40c33c:	(bad)  
  40c33d:	das    
  40c33e:	out    0x4d,eax
  40c340:	in     al,0x8d
  40c342:	cdq    
  40c343:	ret    
  40c344:	pop    ds
  40c345:	mov    dl,0x4a
  40c347:	push   cs
  40c348:	jae    0x40c35e
  40c34a:	(bad)  
  40c34b:	fst    DWORD PTR [ebp+0x65]
  40c34e:	call   0xe573:0x3b930654
  40c355:	add    al,0xc2
  40c357:	es cmp esi,ecx
  40c35a:	not    DWORD PTR [eax]
  40c35c:	cmp    eax,0x98fa184c
  40c361:	push   ds
  40c362:	fs xor eax,esp
  40c365:	lods   al,BYTE PTR ds:[esi]
  40c366:	div    BYTE PTR [edx+0x58]
  40c369:	pushf  
  40c36a:	mov    cs,WORD PTR [ecx+eax*8+0x2673f7b9]
  40c371:	jp     0x40c32e
  40c373:	adc    ebp,edi
  40c375:	inc    esi
  40c376:	jbe    0x40c33e
  40c378:	lds    eax,FWORD PTR [ebp+0x243e32cb]
  40c37e:	(bad)  
  40c37f:	(bad)  
  40c380:	daa    
  40c381:	(bad)  
  40c382:	push   edi
  40c383:	sti    
  40c384:	add    al,0x71
  40c386:	jl     0x40c38d
  40c388:	or     dl,BYTE PTR [esp+ecx*2+0x7ec36b6a]
  40c38f:	pop    ecx
  40c390:	imul   ebp,esi,0x65bcfd11
  40c396:	shl    ch,0x55
  40c399:	mov    BYTE PTR [esi-0x61],ch
  40c39c:	add    al,0xcc
  40c39e:	pop    esi
  40c39f:	mov    dx,0x7df0
  40c3a3:	std    
  40c3a4:	push   ss
  40c3a5:	cmp    bl,BYTE PTR [edx]
  40c3a7:	out    dx,al
  40c3a8:	jl     0x40c3c9
  40c3aa:	in     eax,0x24
  40c3ac:	sub    BYTE PTR [ecx-0x70],bl
  40c3af:	stos   DWORD PTR es:[edi],eax
  40c3b0:	jp     0x40c3d6
  40c3b2:	xchg   edx,eax
  40c3b3:	push   esi
  40c3b4:	pop    es
  40c3b5:	bound  eax,QWORD PTR [ebp-0x69afc7e]
  40c3bb:	mov    ds:0xed8b59c0,eax
  40c3c0:	mov    bl,BYTE PTR [edx+0x7708fe1f]
  40c3c6:	adc    esi,DWORD PTR [eax]
  40c3c8:	out    0x9d,eax
  40c3ca:	sar    DWORD PTR [ebx-0x54],0xf2
  40c3ce:	mov    ds:0x36f95a86,al
  40c3d3:	jbe    0x40c3be
  40c3d5:	outs   dx,DWORD PTR ds:[esi]
  40c3d6:	stc    
  40c3d7:	adc    eax,0xf8bea64e
  40c3dc:	mov    cl,0x2a
  40c3de:	jae    0x40c38c
  40c3e0:	sti    
  40c3e1:	or     dl,ah
  40c3e3:	cs mov cl,0xc6
  40c3e6:	call   0x911f:0x5a048fc1
  40c3ed:	out    0x80,al
  40c3ef:	out    dx,eax
  40c3f0:	or     edi,esi
  40c3f2:	out    0xb5,eax
  40c3f4:	test   eax,0xb133912b
  40c3f9:	sub    ch,BYTE PTR [ecx-0x115c59e3]
  40c3ff:	addr16 js 0x40c3bd
  40c402:	xlat   BYTE PTR ds:[ebx]
  40c403:	stos   DWORD PTR es:[edi],eax
  40c404:	fcomp  DWORD PTR [eax+edx*4]
  40c407:	rcr    DWORD PTR [ebx-0x70],1
  40c40a:	fwait
  40c40b:	dec    ebp
  40c40c:	outs   dx,BYTE PTR ds:[esi]
  40c40d:	sub    eax,0x242e93da
  40c412:	mov    dh,bh
  40c414:	imul   edi,DWORD PTR [edi-0x56],0xfa9fab99
  40c41b:	inc    ebp
  40c41c:	push   0x4993e92c
  40c421:	lds    edi,FWORD PTR [edx+eiz*2-0x22]
  40c425:	dec    esp
  40c426:	sahf   
  40c427:	xchg   esp,eax
  40c428:	mov    edx,0x118a600d
  40c42d:	stos   DWORD PTR es:[edi],eax
  40c42e:	std    
  40c42f:	cmp    BYTE PTR [esi-0x56f3cb6d],dh
  40c435:	mov    esi,0xa93d96ec
  40c43a:	dec    edi
  40c43b:	enter  0xad1d,0xf1
  40c43f:	mov    DWORD PTR [eax+eiz*1+0x172ceea8],ecx
  40c446:	call   DWORD PTR [ebx-0x649587b9]
  40c44c:	push   ebx
  40c44d:	add    al,0xa0
  40c44f:	jmp    0x79f87e25
  40c454:	shl    ecx,1
  40c456:	cmp    DWORD PTR [esi-0x3d],edx
  40c459:	sub    DWORD PTR [ebx+0x68cd76ae],eax
  40c45f:	imul   edi,DWORD PTR [ecx],0x70cc4d8d
  40c465:	push   eax
  40c466:	cmp    BYTE PTR [eax],bh
  40c468:	xchg   edx,eax
  40c469:	mov    dl,0x6f
  40c46b:	mov    bh,0x64
  40c46d:	jae    0x40c43a
  40c46f:	mov    eax,ds:0xb0943994
  40c474:	sbb    al,0xfe
  40c476:	xor    BYTE PTR [edi+0x18ac7cc8],dl
  40c47c:	cmp    al,0x28
  40c47e:	cwde   
  40c47f:	mov    edi,0x2321cf00
  40c484:	xchg   ebx,eax
  40c485:	adc    DWORD PTR [ecx-0x50],eax
  40c488:	test   BYTE PTR [esi],dl
  40c48a:	jb     0x40c4bd
  40c48c:	test   DWORD PTR [edi+0x6c],ebp
  40c48f:	xchg   ebp,eax
  40c490:	adc    DWORD PTR [esi+0x51ef28b6],esi
  40c496:	lds    esi,FWORD PTR [edx]
  40c498:	xor    DWORD PTR [eax-0x62],0xa81ada9d
  40c49f:	cmp    bh,BYTE PTR [eax-0x4853ed2e]
  40c4a5:	sbb    edi,ebx
  40c4a7:	inc    ecx
  40c4a8:	dec    ecx
  40c4a9:	pop    ds
  40c4aa:	cmp    ecx,DWORD PTR [edi]
  40c4ac:	xor    di,dx
  40c4af:	ins    BYTE PTR es:[edi],dx
  40c4b0:	ins    BYTE PTR es:[edi],dx
  40c4b1:	pop    ebx
  40c4b2:	mov    bh,0x3
  40c4b4:	cmc    
  40c4b5:	not    bl
  40c4b7:	push   ecx
  40c4b8:	jl     0x40c442
  40c4ba:	xchg   ebx,eax
  40c4bb:	mov    ch,0xf4
  40c4bd:	iret   
  40c4be:	(bad)  
  40c4c0:	fisubr DWORD PTR [eax-0x4e]
  40c4c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c4c4:	pop    edx
  40c4c5:	bound  ecx,QWORD PTR [esi+0x4b]
  40c4c8:	push   edi
  40c4c9:	ja     0x40c4b9
  40c4cb:	adc    edi,ebp
  40c4cd:	jmp    0x40c4ae
  40c4cf:	test   BYTE PTR [ecx+0x6f95ec54],cl
  40c4d5:	loopne 0x40c4ee
  40c4d7:	mov    ebx,0xfd87ff4
  40c4dc:	int3   
  40c4dd:	rol    DWORD PTR [edx+0x16],0x5a
  40c4e1:	sbb    eax,0xc2015065
  40c4e6:	daa    
  40c4e7:	push   ds
  40c4e8:	scas   eax,DWORD PTR es:[edi]
  40c4e9:	push   esp
  40c4ea:	push   ebp
  40c4eb:	cmp    al,0x6c
  40c4ed:	and    eax,0x5250bcd0
  40c4f2:	cmp    DWORD PTR [ecx+0x6d8756c8],edi
  40c4f8:	push   es
  40c4f9:	xchg   DWORD PTR [eax-0x1f],eax
  40c4fc:	(bad)  
  40c4fd:	jbe    0x40c521
  40c4ff:	dec    ebp
  40c500:	cwde   
  40c501:	mov    ch,0x12
  40c503:	ret    0xa1f8
  40c506:	fcomp  QWORD PTR [ebp+0x2e223aa8]
  40c50c:	pop    edx
  40c50d:	or     esp,DWORD PTR [edi-0x33ed1e8]
  40c513:	and    ch,bh
  40c515:	mov    WORD PTR [ebp-0x12],ss
  40c518:	(bad)  
  40c519:	mov    al,0x74
  40c51b:	push   esi
  40c51c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c51d:	inc    eax
  40c51e:	adc    cl,cl
  40c520:	mov    eax,0x6d7c06e2
  40c525:	lods   al,BYTE PTR ds:[esi]
  40c526:	sbb    dl,ch
  40c528:	sub    dh,cl
  40c52a:	sar    DWORD PTR [edi+0x3052b2f],0x69
  40c531:	xlat   BYTE PTR ds:[ebx]
  40c532:	scas   al,BYTE PTR es:[edi]
  40c533:	in     al,0xc8
  40c535:	aas    
  40c536:	test   BYTE PTR [ebx+esi*8-0x121580c9],cl
  40c53d:	sbb    edx,DWORD PTR [ecx+0x63]
  40c540:	push   esi
  40c541:	jmp    FWORD PTR [esi]
  40c543:	fstp   QWORD PTR [ecx]
  40c545:	xlat   BYTE PTR ds:[ebx]
  40c546:	retf   
  40c547:	sub    DWORD PTR [ebx+0x2c],esi
  40c54a:	pop    ds
  40c54b:	aas    
  40c54c:	cmp    BYTE PTR ds:0x5fd9d526,ah
  40c552:	sub    BYTE PTR [eax+0x77176ed2],dh
  40c558:	stos   BYTE PTR es:[edi],al
  40c559:	cmp    BYTE PTR [ecx-0x15],dl
  40c55c:	fiadd  DWORD PTR [edx+0x27]
  40c55f:	mov    ch,BYTE PTR [ebx+0x41a97072]
  40c565:	add    DWORD PTR [esi+0x3d933b88],esp
  40c56b:	ret    
  40c56c:	xor    DWORD PTR ds:0xe426b2af,esp
  40c572:	dec    ebp
  40c573:	popf   
  40c574:	test   BYTE PTR [edi+0x2f],0x5a
  40c578:	inc    ebx
  40c579:	push   es
  40c57a:	cmp    cl,al
  40c57c:	mov    ecx,0xe18ffd19
  40c581:	dec    ecx
  40c582:	out    dx,al
  40c583:	jmp    0x40c597
  40c585:	hlt    
  40c586:	push   es
  40c587:	pop    edx
  40c588:	pop    esi
  40c589:	fbld   TBYTE PTR [edi+edx*8-0x19cfd94]
  40c590:	mov    ecx,0x80b8105f
  40c595:	stos   BYTE PTR es:[edi],al
  40c596:	jge    0x40c52b
  40c598:	adc    eax,0xb6208514
  40c59d:	jns    0x40c572
  40c59f:	loope  0x40c56f
  40c5a1:	leave  
  40c5a2:	cmp    al,0xf4
  40c5a4:	popa   
  40c5a5:	sbb    eax,0x853cd4f7
  40c5aa:	jecxz  0x40c540
  40c5ac:	and    al,0xf7
  40c5ae:	jmp    0x1cfb9b6e
  40c5b3:	xchg   ecx,esp
  40c5b5:	sub    eax,0x9d31c70
  40c5ba:	xchg   ebp,eax
  40c5bb:	sbb    ch,dl
  40c5bd:	xchg   edx,eax
  40c5be:	add    ah,bl
  40c5c0:	cmc    
  40c5c1:	int3   
  40c5c2:	fidivr WORD PTR [eax+0x7896a89c]
  40c5c8:	sbb    ebp,DWORD PTR [ebp-0xb]
  40c5cb:	test   eax,0x6c4ee020
  40c5d0:	pop    es
  40c5d1:	std    
  40c5d2:	(bad)  
  40c5d3:	ror    DWORD PTR [eax+0x3e],0x38
  40c5d7:	enter  0xafaa,0xd
  40c5db:	dec    ecx
  40c5dc:	push   ds
  40c5dd:	mov    eax,0x7c65c955
  40c5e2:	test   DWORD PTR es:[edi+0x6d020f0d],eax
  40c5e9:	mov    eax,ds:0x3401f2d7
  40c5ee:	mov    bl,0x8a
  40c5f0:	push   DWORD PTR [edx-0x58]
  40c5f3:	jns    0x40c60a
  40c5f5:	sahf   
  40c5f6:	jl     0x40c5b8
  40c5f8:	fisttp DWORD PTR [edi-0x43]
  40c5fb:	push   esi
  40c5fc:	jo     0x40c5e7
  40c5fe:	sub    DWORD PTR [ebx],esi
  40c600:	fstp   DWORD PTR [ecx]
  40c602:	je     0x40c677
  40c604:	inc    esp
  40c605:	sahf   
  40c606:	adc    eax,edi
  40c608:	(bad)  
  40c609:	jno    0x40c610
  40c60b:	dec    edi
  40c60c:	and    bh,BYTE PTR [ecx+0x70669e33]
  40c612:	ret    0xc40c
  40c615:	push   ecx
  40c616:	in     al,0x70
  40c618:	dec    eax
  40c619:	adc    dl,BYTE PTR [edx+eax*4+0x68]
  40c61d:	xchg   edx,eax
  40c61e:	dec    esi
  40c61f:	jmp    0x1e3d1404
  40c624:	add    eax,0x9e2b6986
  40c629:	in     eax,0xfc
  40c62b:	and    al,0xf1
  40c62d:	jo     0x40c5b4
  40c62f:	push   0x7c
  40c631:	inc    ebp
  40c632:	cmp    al,0x5e
  40c634:	(bad)  
  40c635:	cmp    al,0x67
  40c637:	fwait
  40c638:	rcl    BYTE PTR [ecx+0x42],1
  40c63b:	xlat   BYTE PTR ds:[ebx]
  40c63c:	push   ss
  40c63d:	icebp  
  40c63e:	int    0x2f
  40c640:	add    bh,BYTE PTR [ecx+ebp*1+0x6d7d7c01]
  40c647:	(bad)  
  40c648:	clc    
  40c649:	and    ecx,DWORD PTR [ebx+0x11]
  40c64c:	pusha  
  40c64d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c64e:	inc    ebp
  40c64f:	sbb    ebx,DWORD PTR [ebx+0x7]
  40c652:	jmp    0x54c8e7a3
  40c657:	mov    ebp,0xeb95aabc
  40c65c:	cs sahf 
  40c65e:	retf   0x2c9
  40c661:	aas    
  40c662:	push   edi
  40c663:	stc    
  40c664:	or     al,0x36
  40c666:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c667:	sti    
  40c668:	(bad)  
  40c669:	mov    edi,0xcd285b22
  40c66e:	test   al,0x9f
  40c670:	(bad)  
  40c671:	hlt    
  40c672:	jbe    0x40c6be
  40c674:	fcomp  DWORD PTR [esi-0x65e5e5f7]
  40c67a:	mov    BYTE PTR [ecx-0x40],0x72
  40c67e:	add    DWORD PTR [edi+0x6279c2c6],eax
  40c684:	in     al,dx
  40c685:	and    dl,al
  40c687:	imul   edi,DWORD PTR [ebp+0x61831bdb],0x16bbe743
  40c691:	push   0x2c317035
  40c696:	out    0xe,al
  40c698:	test   al,0xc7
  40c69a:	xor    DWORD PTR [ecx],edi
  40c69c:	adc    dh,dl
  40c69e:	addr16 mov bl,bh
  40c6a1:	call   0xd91a95d6
  40c6a6:	add    DWORD PTR [ebx-0x5264ee0d],0xb827af1a
  40c6b0:	lock xor bh,ch
  40c6b3:	cmp    bh,BYTE PTR [ecx-0x1695bbc1]
  40c6b9:	jae    0x40c66c
  40c6bb:	(bad)  
  40c6bc:	jmp    FWORD PTR [eax]
  40c6be:	sub    ebp,edi
  40c6c0:	mov    eax,0xc0abd82d
  40c6c5:	xor    DWORD PTR [ebp+0x1a],esi
  40c6c8:	out    dx,al
  40c6c9:	push   ss
  40c6ca:	mov    edx,0xc084a817
  40c6cf:	int    0x86
  40c6d1:	mov    WORD PTR [edx+0x1a],?
  40c6d4:	push   cs
  40c6d5:	xchg   ebp,eax
  40c6d6:	or     DWORD PTR gs:[esi+0xca1ec3f],edx
  40c6dd:	mov    cl,0xee
  40c6df:	(bad)  
  40c6e1:	jle    0x40c710
  40c6e3:	mov    DWORD PTR [edi-0x7337ae2e],ecx
  40c6e9:	retf   0x5fc5
  40c6ec:	push   es
  40c6ed:	inc    esp
  40c6ee:	inc    edx
  40c6ef:	mov    esi,0x5900264c
  40c6f4:	jb     0x40c753
  40c6f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c6f7:	jge    0x40c6b7
  40c6f9:	sbb    al,0x33
  40c6fb:	inc    ecx
  40c6fc:	xor    ecx,edx
  40c6fe:	adc    DWORD PTR [edx+eiz*8-0x64914e04],esp
  40c705:	mov    dl,0xdd
  40c707:	push   ss
  40c708:	cwde   
  40c709:	inc    edi
  40c70a:	lods   eax,DWORD PTR ds:[esi]
  40c70b:	int3   
  40c70c:	dec    ebp
  40c70d:	adc    al,0xec
  40c70f:	repnz pop es
  40c711:	sbb    edi,DWORD PTR [eax]
  40c713:	sbb    BYTE PTR [edx+0x6e8f84ef],al
  40c719:	hlt    
  40c71a:	xor    al,bh
  40c71c:	xlat   BYTE PTR ds:[ebx]
  40c71d:	inc    edx
  40c71e:	cld    
  40c71f:	pop    esp
  40c720:	dec    eax
  40c721:	pop    ebp
  40c722:	add    eax,0x4eadbc26
  40c727:	mov    ah,0xd5
  40c729:	scas   eax,DWORD PTR es:[edi]
  40c72a:	mov    dl,0x48
  40c72c:	xchg   ebx,eax
  40c72d:	sub    ebp,DWORD PTR gs:[esi]
  40c730:	mov    ds:0x70030467,al
  40c735:	mov    al,BYTE PTR [edi+0x76]
  40c738:	mov    dl,0x88
  40c73a:	fwait
  40c73b:	adc    cl,BYTE PTR [ebx+0x1104a9d]
  40c741:	neg    BYTE PTR [edi+0x7a38a8f3]
  40c747:	sub    eax,0xe380c545
  40c74c:	xor    ecx,ebx
  40c74e:	pop    ds
  40c74f:	xor    BYTE PTR [ecx+0x175a4572],ch
  40c755:	fadd   DWORD PTR [ebx+0x354fde]
  40c75b:	retf   0xb022
  40c75e:	mov    ebp,0xf5a5f1b3
  40c763:	into   
  40c764:	pop    edx
  40c765:	push   0x7bdaee92
  40c76a:	dec    ah
  40c76c:	ins    BYTE PTR es:[edi],dx
  40c76d:	mov    ch,0x61
  40c76f:	push   esi
  40c770:	dec    eax
  40c771:	pop    esp
  40c772:	pop    edi
  40c773:	sub    eax,0xfb123d4c
  40c778:	fadd   st(1),st
  40c77a:	nop
  40c77b:	mov    ecx,0x14f0125e
  40c780:	or     eax,DWORD PTR [ecx+0x79514d5f]
  40c786:	(bad)  
  40c787:	hlt    
  40c788:	mov    edi,DWORD PTR [esp+ebx*1]
  40c78b:	and    eax,ebp
  40c78d:	mov    al,ds:0x7813e3ac
  40c792:	js     0x40c7f8
  40c794:	pavgb  mm5,QWORD PTR [ecx]
  40c797:	and    ah,BYTE PTR [edi+0x47c7481a]
  40c79d:	push   esp
  40c79e:	imul   eax,DWORD PTR [ebp-0x1199a118],0x162e1441
  40c7a8:	loope  0x40c767
  40c7aa:	loope  0x40c73b
  40c7ac:	icebp  
  40c7ad:	fwait
  40c7ae:	pop    ebx
  40c7af:	dec    ebp
  40c7b0:	jae    0x40c74d
  40c7b2:	fmulp  st(7),st
  40c7b4:	leave  
  40c7b5:	pop    esi
  40c7b6:	xor    BYTE PTR [ebx-0x12881584],0x9
  40c7bd:	cmp    al,BYTE PTR [ebp-0x7c765fb3]
  40c7c3:	das    
  40c7c4:	bound  edi,QWORD PTR [edi]
  40c7c6:	shl    DWORD PTR [edx+esi*8],1
  40c7c9:	enter  0x292b,0x44
  40c7cd:	adc    al,0x30
  40c7cf:	stc    
  40c7d0:	xor    eax,DWORD PTR [ebx+ecx*2-0xa]
  40c7d4:	mov    eax,ebp
  40c7d6:	addr16 and esi,ecx
  40c7d9:	sbb    al,0x0
  40c7db:	daa    
  40c7dc:	ins    BYTE PTR es:[edi],dx
  40c7dd:	add    BYTE PTR [edx-0x6c],0x45
  40c7e1:	push   ecx
  40c7e2:	and    ecx,DWORD PTR ds:0x8c31a670
  40c7e8:	cli    
  40c7e9:	stc    
  40c7ea:	adc    al,0xdc
  40c7ec:	xor    eax,0x52f1991d
  40c7f1:	int    0x65
  40c7f3:	jl     0x40c7f7
  40c7f5:	jbe    0x40c79e
  40c7f7:	mov    BYTE PTR [eax+0x45],cl
  40c7fa:	jno    0x40c78b
  40c7fc:	xchg   ebp,eax
  40c7fd:	inc    esi
  40c7fe:	ret    0x545d
  40c801:	ds cmp al,dh
  40c804:	outs   dx,DWORD PTR ds:[esi]
  40c805:	scas   eax,DWORD PTR es:[edi]
  40c806:	jmp    0x40c82b
  40c808:	mov    eax,0x5aad5400
  40c80d:	sbb    al,0xdb
  40c80f:	loopne 0x40c86a
  40c811:	or     ecx,DWORD PTR [ecx+0x6d54de5]
  40c817:	add    BYTE PTR [ebx],0xbc
  40c81a:	mov    ebp,0x7e90e0a9
  40c81f:	test   eax,0xfb3c0581
  40c824:	fcomp  DWORD PTR [esi+0x0]
  40c827:	add    al,0xac
  40c829:	pop    ebx
  40c82a:	jns    0x40c89c
  40c82c:	cmp    eax,0x16dc9f3e
  40c831:	shl    DWORD PTR [eax+0x36215423],1
  40c837:	inc    eax
  40c838:	and    eax,0xb4347021
  40c83d:	and    dh,BYTE PTR [esi]
  40c83f:	mov    ah,0x90
  40c841:	ja     0x40c8b6
  40c843:	dec    esp
  40c844:	mov    BYTE PTR [edi-0x312aaad4],bh
  40c84a:	js     0x40c7d3
  40c84c:	je     0x40c89a
  40c84e:	mov    ch,0x5a
  40c850:	vpackuswb ymm1,ymm4,YMMWORD PTR [edx-0x55]
  40c855:	adc    al,0x38
  40c857:	jns    0x40c868
  40c859:	mov    esp,0x2891a1d
  40c85e:	int    0xc3
  40c860:	xchg   eax,edi
  40c862:	fisttp QWORD PTR [eax+0xba1044]
  40c868:	cmp    BYTE PTR [esi+0x17],0xd8
  40c86c:	gs push si
  40c86f:	out    0x99,eax
  40c871:	or     DWORD PTR [edx],0x7c75c85
  40c877:	adc    al,0xce
  40c879:	jnp    0x40c8c7
  40c87b:	and    DWORD PTR [ebx],0x6a
  40c87e:	mov    edx,0x1396be9b
  40c883:	sbb    al,0x8d
  40c885:	rcr    DWORD PTR ds:0x1ecdfe80,cl
  40c88b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c88c:	mov    esp,DWORD PTR [esi]
  40c88e:	fmul   DWORD PTR [bx+di]
  40c891:	jmp    0x40c8c5
  40c893:	xchg   ebx,eax
  40c894:	dec    edi
  40c895:	shl    DWORD PTR [ebx],cl
  40c897:	das    
  40c898:	mov    edi,0x6108ecd8
  40c89d:	fcom   QWORD PTR [eax-0x6c]
  40c8a0:	jnp    0x40c86b
  40c8a2:	mov    bl,0x26
  40c8a4:	adc    dh,BYTE PTR cs:[eax]
  40c8a7:	mov    dh,0x11
  40c8a9:	ja     0x40c8ec
  40c8ab:	pop    ebx
  40c8ac:	jnp    0x40c90c
  40c8ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c8af:	jmp    0x40c8c6
  40c8b1:	mov    ebp,DWORD PTR [eax]
  40c8b3:	dec    esp
  40c8b4:	jg     0x40c865
  40c8b6:	pusha  
  40c8b7:	js     0x40c926
  40c8b9:	pop    ds
  40c8ba:	mov    bh,0x42
  40c8bc:	pusha  
  40c8bd:	loopne 0x40c905
  40c8bf:	ss xor eax,0xe9180677
  40c8c5:	lea    ebx,[ebp+0x346eee37]
  40c8cb:	(bad)  
  40c8cc:	enter  0x46b6,0x61
  40c8d0:	sbb    eax,0x4787474c
  40c8d5:	nop
  40c8d6:	icebp  
  40c8d7:	adc    al,0x10
  40c8d9:	popa   
  40c8da:	int3   
  40c8db:	dec    ebp
  40c8dc:	es sub eax,0x35b140eb
  40c8e2:	push   ss
  40c8e3:	pop    es
  40c8e4:	nop
  40c8e5:	add    eax,0x44112f62
  40c8ea:	cmp    ecx,DWORD PTR [edi]
  40c8ec:	xchg   ebp,eax
  40c8ed:	jge    0x40c8c8
  40c8ef:	rol    ah,1
  40c8f1:	mov    BYTE PTR [eax],0x6
  40c8f4:	leave  
  40c8f5:	inc    edi
  40c8f6:	cmp    al,0xcf
  40c8f8:	out    0xee,al
  40c8fa:	jl     0x40c93b
  40c8fc:	pusha  
  40c8fd:	cmp    BYTE PTR [ecx],dh
  40c8ff:	push   ebx
  40c900:	mov    cl,0xb5
  40c902:	enter  0xedcc,0x17
  40c906:	sbb    BYTE PTR [esi+0x5845f53c],bl
  40c90c:	div    DWORD PTR ds:0x620c73af
  40c912:	sbb    BYTE PTR [eax+edi*2+0x72d6f5c],bl
  40c919:	adc    dl,al
  40c91b:	js     0x40c983
  40c91d:	mov    ds:0x8f4807af,al
  40c922:	cld    
  40c923:	imul   eax,DWORD PTR ds:0xbc6d0a99,0xffffff90
  40c92a:	cmp    eax,0xaa230b3e
  40c92f:	mov    bl,0xf2
  40c931:	loope  0x40c8ce
  40c933:	repz inc edi
  40c935:	mov    esi,0xa3aba304
  40c93a:	push   eax
  40c93b:	or     DWORD PTR [esi+ebp*4+0x66cc0a9c],esi
  40c942:	dec    esi
  40c943:	in     al,0x36
  40c945:	(bad)  
  40c946:	shl    BYTE PTR [esi+0x72],1
  40c949:	in     eax,0xc3
  40c94b:	(bad)  
  40c94c:	cli    
  40c94d:	mov    eax,ds:0xaf69568f
  40c952:	mov    edi,0x80b612f1
  40c957:	repnz stc 
  40c959:	(bad)  
  40c95a:	in     al,dx
  40c95b:	loope  0x40c991
  40c95d:	js     0x40c8e6
  40c95f:	and    eax,DWORD PTR [edi+edx*1+0x3de1767b]
  40c966:	imul   esp,DWORD PTR [eax],0xffffffaf
  40c969:	pushf  
  40c96a:	xchg   ecx,eax
  40c96b:	pop    eax
  40c96c:	daa    
  40c96d:	sbb    ch,BYTE PTR [edx]
  40c96f:	or     cl,BYTE PTR [edx]
  40c971:	dec    edi
  40c972:	hlt    
  40c973:	push   cs
  40c974:	dec    edi
  40c975:	mov    edi,0x9b4591d6
  40c97a:	inc    esi
  40c97b:	retf   0x80cb
  40c97e:	dec    ecx
  40c97f:	std    
  40c980:	xor    ah,BYTE PTR [edi]
  40c982:	add    edx,esp
  40c984:	sub    BYTE PTR [eax],al
  40c986:	sbb    eax,0x4664c850
  40c98b:	sar    bh,cl
  40c98d:	sar    edi,cl
  40c98f:	pushf  
  40c990:	or     BYTE PTR [esi],ch
  40c992:	inc    edx
  40c993:	push   edi
  40c994:	sbb    eax,esi
  40c996:	pop    ss
  40c997:	inc    edi
  40c998:	test   BYTE PTR [eax],dl
  40c99a:	rcl    BYTE PTR [ecx],cl
  40c99c:	sti    
  40c99d:	mov    ebx,0xbddd0a06
  40c9a2:	add    ecx,DWORD PTR [edx-0x21defdef]
  40c9a8:	fcomp  DWORD PTR [ebp-0x69]
  40c9ab:	mov    ah,0x4d
  40c9ad:	stos   BYTE PTR es:[edi],al
  40c9ae:	cmovnp ecx,esi
  40c9b1:	pop    esp
  40c9b2:	lods   eax,DWORD PTR ds:[esi]
  40c9b3:	mov    ecx,0x67551ba8
  40c9b8:	das    
  40c9b9:	xor    cl,BYTE PTR [ecx+0x23]
  40c9bc:	outs   dx,DWORD PTR ds:[esi]
  40c9bd:	hlt    
  40c9be:	scas   al,BYTE PTR es:[edi]
  40c9bf:	bound  edi,QWORD PTR [ebp+0x2f]
  40c9c2:	and    al,0x6c
  40c9c4:	call   0x8c:0x6504bd26
  40c9cb:	dec    ebp
  40c9cc:	sbb    BYTE PTR [edx+0x78ba7b0c],ah
  40c9d2:	sub    ah,BYTE PTR [ebp+0x7e]
  40c9d5:	mov    eax,ds:0x56e81012
  40c9da:	mov    al,ds:0x53baa988
  40c9df:	and    BYTE PTR [eax-0x5971a29f],dh
  40c9e5:	fnsave [ebp+0x5a]
  40c9e8:	cmp    DWORD PTR [esp+esi*2-0x1a],0xe5dcf42a
  40c9f0:	mov    edx,0x59213aed
  40c9f5:	pop    ecx
  40c9f6:	mov    esp,ebx
  40c9f8:	leave  
  40c9f9:	repz cmc 
  40c9fb:	loopne 0x40ca53
  40c9fd:	sahf   
  40c9fe:	retf   0x2fc
  40ca01:	test   al,0x2a
  40ca03:	mov    bl,0x3f
  40ca05:	or     DWORD PTR [esi+0x34],esp
  40ca08:	mov    ds,WORD PTR [esi+0x6cf07f53]
  40ca0e:	push   edx
  40ca0f:	or     dh,BYTE PTR [esi]
  40ca11:	inc    esi
  40ca12:	jge    0x40ca46
  40ca14:	sub    BYTE PTR [ebx],bl
  40ca16:	dec    edx
  40ca17:	sbb    al,0x7b
  40ca19:	pusha  
  40ca1a:	aad    0xa7
  40ca1c:	push   ebp
  40ca1d:	hlt    
  40ca1e:	stos   BYTE PTR es:[edi],al
  40ca1f:	push   esp
  40ca20:	frstor [bp+di+0x1c64]
  40ca25:	repnz (bad) 
  40ca29:	sub    eax,DWORD PTR [esi-0x34ec4508]
  40ca2f:	pop    esi
  40ca30:	(bad)  
  40ca31:	shr    BYTE PTR [eax+edi*4],1
  40ca34:	fmul   st,st(5)
  40ca36:	mov    eax,0x2478ce2
  40ca3b:	pop    ebp
  40ca3c:	hlt    
  40ca3d:	es and eax,0x4171b856
  40ca43:	mov    ch,0x79
  40ca45:	popa   
  40ca46:	pusha  
  40ca47:	xchg   DWORD PTR [ebp-0x6a],esp
  40ca4a:	mov    ss,WORD PTR [ebx-0x50ee5d2]
  40ca50:	(bad)  
  40ca51:	retf   
  40ca52:	dec    eax
  40ca53:	dec    esi
  40ca54:	enter  0xe968,0x2e
  40ca58:	mov    ecx,0x3f790968
  40ca5d:	lock daa 
  40ca5f:	rol    edx,1
  40ca61:	fwait
  40ca62:	in     eax,0x9b
  40ca64:	add    dl,BYTE PTR [eax-0x3f0f2e70]
  40ca6a:	xchg   esi,eax
  40ca6b:	ins    BYTE PTR es:[edi],dx
  40ca6c:	jge    0x40ca69
  40ca6e:	test   BYTE PTR [ebx-0x13318ad0],dl
  40ca74:	cmp    esp,DWORD PTR [esi]
  40ca76:	mov    cl,0x36
  40ca78:	adc    eax,0x17e24c6
  40ca7d:	mov    dh,BYTE PTR [ebp-0x57]
  40ca80:	adc    BYTE PTR [ebx+0x644d8a36],0xc5
  40ca87:	mov    dh,0x7c
  40ca89:	popa   
  40ca8a:	jp     0x40cabf
  40ca8c:	shl    BYTE PTR [ebp-0x7d],1
  40ca8f:	push   ebx
  40ca90:	cwde   
  40ca91:	std    
  40ca92:	pop    ebp
  40ca93:	clc    
  40ca94:	cs xchg ch,dl
  40ca97:	out    dx,eax
  40ca98:	add    eax,0x8553c6e2
  40ca9d:	mov    eax,ds:0xe9ecfc42
  40caa2:	jo     0x40cab0
  40caa4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40caa5:	push   0x7e
  40caa7:	js     0x40ca7b
  40caa9:	(bad)  
  40caaa:	mov    ah,BYTE PTR [ebx-0x44]
  40caad:	fld    QWORD PTR [ecx]
  40caaf:	sbb    BYTE PTR [ebx+0x7d8bfc45],cl
  40cab5:	clc    
  40cab6:	add    edi,DWORD PTR [eax]
  40cab8:	mov    DWORD PTR [ebp-0x8],edi
  40cabb:	mov    eax,DWORD PTR [ebp+0xc]
  40cabe:	mov    edi,DWORD PTR [ebp+0xc]
  40cac1:	xor    edi,ecx
  40cac3:	xor    eax,ecx
  40cac5:	lea    eax,[eax+edi*1+0x64e5ba]
  40cacc:	mov    edi,DWORD PTR [ebp+0xc]
  40cacf:	xor    edi,ecx
  40cad1:	add    edi,edx
  40cad3:	imul   eax,edi
  40cad6:	mov    edi,DWORD PTR [ebp+0xc]
  40cad9:	xor    edi,ecx
  40cadb:	sub    edi,eax
  40cadd:	mov    eax,DWORD PTR [ebp-0x4]
  40cae0:	add    edi,edx
  40cae2:	cmp    DWORD PTR [eax],edi
  40cae4:	mov    eax,DWORD PTR [ebp-0x4]
  40cae7:	mov    edi,DWORD PTR [ebp+0x10]
  40caea:	jg     0x40cafd
  40caf0:	xor    edi,ecx
  40caf2:	mov    ebx,esi
  40caf4:	sub    ebx,edi
  40caf6:	add    DWORD PTR [eax],ebx
  40caf8:	jmp    0x40cb03
  40cafd:	xor    edi,ecx
  40caff:	add    edi,edx
  40cb01:	add    DWORD PTR [eax],edi
  40cb03:	mov    eax,DWORD PTR [ebp-0x8]
  40cb06:	mov    edi,DWORD PTR [ebp-0x10]
  40cb09:	mov    eax,DWORD PTR [eax]
  40cb0b:	xor    edi,ecx
  40cb0d:	add    edi,0x3272dc
  40cb13:	not    edi
  40cb15:	and    eax,edi
  40cb17:	movsx  di,BYTE PTR [eax+0x1]
  40cb1c:	mov    ebx,0x3b4c
  40cb21:	sub    di,bx
  40cb24:	mov    ebx,0x8a89
  40cb29:	xor    di,bx
  40cb2c:	mov    ebx,0x4f87
  40cb31:	cmp    di,bx
  40cb34:	jne    0x40cb5c
  40cb3a:	movsx  di,BYTE PTR [eax]
  40cb3e:	mov    ebx,0x3b4c
  40cb43:	sub    di,bx
  40cb46:	mov    ebx,0x8a89
  40cb4b:	xor    di,bx
  40cb4e:	mov    ebx,0x4f88
  40cb53:	cmp    di,bx
  40cb56:	je     0x40cb6c
  40cb5c:	mov    edi,DWORD PTR [ebp-0x10]
  40cb5f:	xor    edi,ecx
  40cb61:	mov    ebx,esi
  40cb63:	sub    ebx,edi
  40cb65:	add    eax,ebx
  40cb67:	jmp    0x40cb17
  40cb6c:	mov    esi,DWORD PTR [ebp-0x14]
  40cb6f:	mov    esi,DWORD PTR [esi]
  40cb71:	mov    edi,DWORD PTR [eax+0x3c]
  40cb74:	lea    esi,[edi+esi*8+0x78]
  40cb78:	mov    esi,DWORD PTR [esi+eax*1]
  40cb7b:	mov    DWORD PTR [ebp-0x8],esi
  40cb7e:	mov    esi,DWORD PTR [ebp+0x8]
  40cb81:	xor    esi,ecx
  40cb83:	add    esi,edx
  40cb85:	mov    DWORD PTR [ebp-0x14],esi
  40cb88:	mov    esi,DWORD PTR [ebp+0x8]
  40cb8b:	mov    edi,DWORD PTR [ebp-0x8]
  40cb8e:	xor    esi,ecx
  40cb90:	add    esi,edx
  40cb92:	pop    ebx
  40cb93:	cmp    edi,esi
  40cb95:	jne    0x40cbb3
  40cb9b:	mov    eax,DWORD PTR [ebp+0xc]
  40cb9e:	xor    eax,ecx
  40cba0:	mov    ecx,DWORD PTR [ebp-0x8]
  40cba3:	add    eax,edx
  40cba5:	imul   eax,ecx
  40cba8:	mov    DWORD PTR [ebp-0x8],eax
  40cbab:	push   DWORD PTR [ebp+0x18]
  40cbae:	jmp    0x40cc07
  40cbb3:	mov    ecx,DWORD PTR [ebp-0x8]
  40cbb6:	add    ecx,eax
  40cbb8:	mov    DWORD PTR [ebp-0x14],ecx
  40cbbb:	mov    ecx,DWORD PTR [ebp-0x14]
  40cbbe:	mov    ecx,DWORD PTR [ecx+0xc]
  40cbc1:	movsx  cx,BYTE PTR [ecx+eax*1]
  40cbc6:	mov    edx,0x3b4c
  40cbcb:	sub    cx,dx
  40cbce:	mov    edx,0x8a89
  40cbd3:	xor    cx,dx
  40cbd6:	mov    edx,0x4e76
  40cbdb:	cmp    cx,dx
  40cbde:	jne    0x40cbab
  40cbe4:	mov    ecx,DWORD PTR ds:0x42e435
  40cbea:	mov    ecx,DWORD PTR [ecx+0x198]
  40cbf0:	mov    DWORD PTR [ecx],eax
  40cbf2:	jmp    0x40cc18
  40cbf7:	mov    ecx,DWORD PTR [ebp+0x18]
  40cbfa:	cmp    ecx,0xf89c85b2
  40cc00:	jne    0x40cc18
  40cc06:	push   eax
  40cc07:	push   DWORD PTR [ebp+0x14]
  40cc0a:	push   DWORD PTR [ebp+0x10]
  40cc0d:	push   DWORD PTR [ebp+0xc]
  40cc10:	push   DWORD PTR [ebp+0x8]
  40cc13:	call   0x40a327
  40cc18:	pop    edi
  40cc19:	pop    esi
  40cc1a:	leave  
  40cc1b:	ret    0x14
  40cc1e:	push   ebp
  40cc1f:	mov    ebp,esp
  40cc21:	push   ecx
  40cc22:	push   ecx
  40cc23:	add    DWORD PTR ds:0x42b010,edx
  40cc29:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  40cc30:	sub    DWORD PTR ds:0x429024,0x76a8
  40cc3a:	mov    DWORD PTR [ebp-0x4],0xf89c85b2
  40cc41:	and    DWORD PTR ds:0x42b018,edi
  40cc47:	mov    eax,DWORD PTR [ebp-0x4]
  40cc4a:	adc    DWORD PTR ds:0x429018,edx
  40cc50:	push   esi
  40cc51:	and    DWORD PTR ds:0x42a000,0x0
  40cc5b:	jmp    0x40cc6d
  40cc60:	mov    esi,DWORD PTR ds:0x42a000
  40cc66:	inc    esi
  40cc67:	mov    DWORD PTR ds:0x42a000,esi
  40cc6d:	cmp    DWORD PTR ds:0x42a000,0x1a
  40cc74:	jae    0x40cc98
  40cc7a:	cmp    DWORD PTR ds:0x42a000,0x26
  40cc81:	jne    0x40cc8d
  40cc87:	call   DWORD PTR ds:0x42ed51
  40cc8d:	jmp    0x40cc60
  40cc92:	sub    edx,0x54cb
  40cc98:	mov    esi,DWORD PTR [ebp-0x8]
  40cc9b:	and    DWORD PTR ds:0x429018,0x0
  40cca5:	jmp    0x40ccb7
  40ccaa:	mov    ecx,DWORD PTR ds:0x429018
  40ccb0:	inc    ecx
  40ccb1:	mov    DWORD PTR ds:0x429018,ecx
  40ccb7:	cmp    DWORD PTR ds:0x429018,0x1e
  40ccbe:	jae    0x40ccf6
  40ccc4:	cmp    DWORD PTR ds:0x429018,0x8
  40cccb:	jne    0x40ccd7
  40ccd1:	call   DWORD PTR ds:0x42ed55
  40ccd7:	cmp    DWORD PTR ds:0x429018,0x7
  40ccde:	jne    0x40ccf1
  40cce4:	mov    ecx,DWORD PTR ds:0x429018
  40ccea:	inc    ecx
  40cceb:	mov    DWORD PTR ds:0x429018,ecx
  40ccf1:	jmp    0x40ccaa
  40ccf6:	mov    edx,0x7510896
  40ccfb:	mov    ecx,DWORD PTR ds:0x42d00c
  40cd01:	sub    DWORD PTR ds:0x42a004,ecx
  40cd07:	xor    eax,edx
  40cd09:	xor    esi,edx
  40cd0b:	mov    DWORD PTR ds:0x42b00c,0x13
  40cd15:	cmp    DWORD PTR ds:0x42b00c,0x0
  40cd1c:	je     0x40cd7c
  40cd22:	cmp    DWORD PTR ds:0x42b00c,0x2
  40cd29:	jne    0x40cd50
  40cd2f:	push   DWORD PTR [ebp-0x14]
  40cd32:	push   0x6af7
  40cd37:	push   0x42b010
  40cd3c:	push   0x84d2
  40cd41:	push   DWORD PTR [ebp-0x10]
  40cd44:	push   DWORD PTR [ebp-0x20]
  40cd47:	push   DWORD PTR [ebp-0x28]
  40cd4a:	call   DWORD PTR ds:0x42ed59
  40cd50:	cmp    DWORD PTR ds:0x42b00c,0x3
  40cd57:	jne    0x40cd6a
  40cd5d:	mov    ecx,DWORD PTR ds:0x42b00c
  40cd63:	dec    ecx
  40cd64:	mov    DWORD PTR ds:0x42b00c,ecx
  40cd6a:	mov    ecx,DWORD PTR ds:0x42b00c
  40cd70:	dec    ecx
  40cd71:	mov    DWORD PTR ds:0x42b00c,ecx
  40cd77:	jmp    0x40cd15
  40cd7c:	mov    ecx,0x3272dd
  40cd81:	add    esi,ecx
  40cd83:	add    eax,ecx
  40cd85:	imul   eax,esi
  40cd88:	mov    esi,DWORD PTR [ebp+0xc]
  40cd8b:	cmp    esi,eax
  40cd8d:	jne    0x40cda9
  40cd93:	mov    eax,DWORD PTR [ebp-0x4]
  40cd96:	mov    esi,DWORD PTR [ebp-0x8]
  40cd99:	xor    eax,edx
  40cd9b:	xor    esi,edx
  40cd9d:	add    eax,ecx
  40cd9f:	add    esi,ecx
  40cda1:	imul   eax,esi
  40cda4:	jmp    0x40f15e
  40cda9:	mov    eax,DWORD PTR [ebp+0xc]
  40cdac:	mov    eax,DWORD PTR [eax+0x78]
  40cdaf:	mov    DWORD PTR [ebp+0xc],eax
  40cdb2:	mov    eax,DWORD PTR [ebp-0x4]
  40cdb5:	mov    esi,DWORD PTR [ebp-0x8]
  40cdb8:	xor    eax,edx
  40cdba:	xor    esi,edx
  40cdbc:	add    eax,ecx
  40cdbe:	add    esi,ecx
  40cdc0:	imul   eax,esi
  40cdc3:	jmp    0x40f13d
  40cdc8:	push   esi
  40cdc9:	pop    ss
  40cdca:	rcl    DWORD PTR [ebx-0x6d],cl
  40cdcd:	fwait
  40cdce:	(bad)  
  40cdcf:	pop    ss
  40cdd0:	push   ds
  40cdd1:	outs   dx,BYTE PTR ds:[esi]
  40cdd2:	adc    DWORD PTR ds:0xfa653ff8,ebx
  40cdd8:	fldl2t 
  40cdda:	jp     0x40ce56
  40cddc:	sbb    DWORD PTR [edi+0x7a],ebx
  40cddf:	jp     0x40ce57
  40cde1:	xor    edi,DWORD PTR [edx]
  40cde3:	aam    0xe3
  40cde5:	push   esp
  40cde6:	arpl   WORD PTR [eax-0x11],cx
  40cde9:	xchg   edi,eax
  40cdea:	jno    0x40ce4d
  40cdec:	mov    ecx,0xd999c97b
  40cdf1:	push   es
  40cdf2:	imul   edi,DWORD PTR [esi+0xe163cea],0x59
  40cdf9:	inc    eax
  40cdfa:	fst    st(5)
  40cdfc:	in     eax,0x82
  40cdfe:	fsub   QWORD PTR [edi-0x1997510f]
  40ce04:	jle    0x40cdb0
  40ce06:	pop    eax
  40ce07:	jo     0x40ce7f
  40ce09:	ins    DWORD PTR es:[edi],dx
  40ce0a:	imul   esp,DWORD PTR [esi+ecx*8+0x1a6e954f],0x7fa478a5
  40ce15:	sahf   
  40ce16:	stc    
  40ce17:	out    dx,eax
  40ce18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ce19:	push   ebp
  40ce1a:	mov    ah,0x4c
  40ce1c:	mov    ds:0x8ac86cc1,eax
  40ce21:	mov    dl,0x59
  40ce23:	std    
  40ce24:	xor    al,0x79
  40ce26:	loopne 0x40ce6c
  40ce28:	test   eax,0x20e7be4b
  40ce2d:	retf   0xf42b
  40ce30:	cmp    esp,DWORD PTR [ecx+0x7737c1d]
  40ce36:	or     ebp,DWORD PTR [ecx]
  40ce38:	out    dx,al
  40ce39:	es in  eax,0xf8
  40ce3c:	jmp    0xc776:0xe03c14eb
  40ce43:	adc    DWORD PTR [esi-0x1a],eax
  40ce46:	push   cs
  40ce47:	aas    
  40ce48:	(bad)  
  40ce49:	xchg   esi,eax
  40ce4a:	add    BYTE PTR [ebp-0x3e8fd8b5],bl
  40ce50:	push   es
  40ce51:	in     al,0xc2
  40ce53:	push   es
  40ce54:	jae    0x40ce50
  40ce56:	xchg   BYTE PTR [ebx+0x2de40b4d],dl
  40ce5c:	sbb    al,BYTE PTR [esi-0x6400c873]
  40ce62:	cmp    al,0x33
  40ce64:	imul   BYTE PTR [eax+edi*4+0x58796739]
  40ce6b:	test   BYTE PTR [ebp+0x47],bh
  40ce6e:	(bad)  
  40ce6f:	int    0x8c
  40ce71:	es mov fs,esi
  40ce74:	xchg   edi,eax
  40ce75:	adc    DWORD PTR [eax],esi
  40ce77:	in     eax,dx
  40ce78:	adc    eax,0x3a4594b1
  40ce7d:	fdivr  DWORD PTR [ebp+0x6fd19826]
  40ce83:	ds mov esi,0x5a03ccdc
  40ce89:	cld    
  40ce8a:	ficomp WORD PTR [edi-0x74]
  40ce8d:	(bad)  
  40ce8e:	out    dx,eax
  40ce8f:	lds    ebp,FWORD PTR [edi]
  40ce91:	xor    eax,0xfc227c05
  40ce96:	mov    esi,0x9ae42924
  40ce9b:	mov    dh,dh
  40ce9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ce9e:	fs pop esp
  40cea0:	leave  
  40cea1:	sahf   
  40cea2:	rol    dh,cl
  40cea4:	xchg   ebp,eax
  40cea5:	call   0x43b3:0xbaa80f68
  40ceac:	out    dx,eax
  40cead:	std    
  40ceae:	jnp    0x40cf0a
  40ceb0:	iret   
  40ceb1:	call   0xb62:0x8fe038bf
  40ceb8:	mov    ebx,0x3f78201c
  40cebd:	cmp    DWORD PTR [esi],esp
  40cebf:	stos   DWORD PTR es:[edi],eax
  40cec0:	dec    esp
  40cec1:	adc    BYTE PTR [ebx],0x30
  40cec4:	mov    ds:0xae80278,al
  40cec9:	mov    ecx,DWORD PTR [ebx]
  40cecb:	mov    eax,0xf70b11e6
  40ced0:	mov    edi,DWORD PTR [ebp+0x68]
  40ced3:	icebp  
  40ced4:	jg     0x40cf2d
  40ced6:	jmp    0x40ceb6
  40ced8:	sbb    DWORD PTR [edi+0x6a],ecx
  40cedb:	popa   
  40cedc:	bound  ecx,QWORD PTR [esi-0x2b]
  40cedf:	mov    BYTE PTR [ebx],dh
  40cee1:	lds    ebx,FWORD PTR [ecx]
  40cee3:	fadd   QWORD PTR [edx]
  40cee5:	or     ebx,0x3a
  40cee8:	push   ds
  40cee9:	fsub   DWORD PTR [esi-0x70aa462d]
  40ceef:	xchg   ebp,eax
  40cef0:	out    0x5a,eax
  40cef2:	arpl   WORD PTR [ebx+0x8887bf3],bp
  40cef8:	adc    bh,BYTE PTR [edi+0x7624e9c6]
  40cefe:	add    al,0x5c
  40cf00:	repz out 0x58,eax
  40cf03:	push   ds
  40cf04:	xchg   DWORD PTR [edx*1-0x33fe5d82],edi
  40cf0b:	and    al,0x54
  40cf0d:	or     al,0x1d
  40cf0f:	pop    ss
  40cf10:	or     BYTE PTR [edx-0x71],ch
  40cf13:	mov    cl,0xe2
  40cf15:	scas   eax,DWORD PTR es:[edi]
  40cf16:	(bad)  
  40cf17:	hlt    
  40cf18:	(bad)  
  40cf19:	adc    dl,BYTE PTR [ecx+0x7b3bca81]
  40cf1f:	dec    edi
  40cf20:	sbb    eax,0x6f99d7d6
  40cf25:	fs int3 
  40cf27:	cmp    ecx,ecx
  40cf29:	rcr    ecx,1
  40cf2b:	in     al,0x59
  40cf2d:	int    0xf
  40cf2f:	call   0xbc1a8455
  40cf34:	sar    DWORD PTR [ebx-0x7a],0x6a
  40cf38:	ja     0x40cf37
  40cf3a:	mov    bl,0x92
  40cf3c:	jmp    0x40ced1
  40cf3e:	outs   dx,BYTE PTR ds:[esi]
  40cf3f:	push   ebx
  40cf40:	repz xor esi,DWORD PTR [ebp-0x3f2459e2]
  40cf47:	(bad)  
  40cf48:	repnz aad 0x63
  40cf4b:	test   cl,ah
  40cf4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cf4e:	loop   0x40cfc4
  40cf50:	cmp    BYTE PTR [edx+0x64],bl
  40cf53:	sbb    ebx,DWORD PTR [ebx]
  40cf55:	cmp    DWORD PTR [esi],eax
  40cf57:	pop    ecx
  40cf58:	jo     0x40cf8d
  40cf5a:	push   cs
  40cf5b:	pop    ds
  40cf5c:	mov    edx,DWORD PTR [ebx-0x4beae9ec]
  40cf62:	sti    
  40cf63:	jae    0x40cfd5
  40cf65:	scas   eax,DWORD PTR es:[edi]
  40cf66:	jo     0x40cfc2
  40cf68:	add    al,0x7c
  40cf6a:	fadd   DWORD PTR [ebp+0x9d13458]
  40cf70:	mov    esi,0x63febe7b
  40cf75:	fistp  QWORD PTR [edi]
  40cf77:	add    DWORD PTR [edx+ebx*1+0x2899d710],edx
  40cf7e:	(bad)  
  40cf7f:	sti    
  40cf80:	lea    edi,[eax+0x5da2ef95]
  40cf86:	mov    ds:0xff779be0,al
  40cf8b:	push   ebx
  40cf8c:	inc    esi
  40cf8d:	lods   al,BYTE PTR ds:[esi]
  40cf8e:	lods   eax,DWORD PTR ds:[esi]
  40cf8f:	adc    dl,BYTE PTR [ebx+eax*8-0x3fafb258]
  40cf96:	xor    eax,0x1ac05398
  40cf9b:	stos   DWORD PTR es:[edi],eax
  40cf9c:	mov    bh,0xe3
  40cf9e:	pop    esp
  40cf9f:	test   dl,ch
  40cfa1:	xor    DWORD PTR [edi+0x3b6b1fc9],eax
  40cfa7:	test   al,0x55
  40cfa9:	(bad)  
  40cfaa:	sar    BYTE PTR [ebx-0x791e6372],1
  40cfb0:	cmp    BYTE PTR [esi],0xcf
  40cfb3:	pop    ecx
  40cfb4:	sahf   
  40cfb5:	add    ch,BYTE PTR [edx+0x58]
  40cfb8:	mov    ebp,0xda18baec
  40cfbd:	mov    dl,0xd7
  40cfbf:	mov    edx,0xb5692b37
  40cfc4:	or     edx,DWORD PTR [esi+0x6f]
  40cfc7:	mov    eax,ds:0x7529550e
  40cfcc:	icebp  
  40cfcd:	jns    0x40cff9
  40cfcf:	add    eax,0x2a3fd90b
  40cfd4:	xor    DWORD PTR [ebp-0x6],ebx
  40cfd7:	xchg   ebx,eax
  40cfd8:	aam    0x90
  40cfda:	mov    esp,0xccaad5bf
  40cfdf:	cmp    BYTE PTR [edx-0x5398909a],bh
  40cfe5:	hlt    
  40cfe6:	xor    DWORD PTR ds:0x9b075f6c,0x688f1ebb
  40cff0:	(bad)  
  40cff1:	ja     0x40cf9c
  40cff3:	popf   
  40cff4:	daa    
  40cff5:	jl     0x40d028
  40cff7:	mov    ebp,0x610dad40
  40cffc:	mov    ebx,0xf3e7cef4
  40d001:	pop    es
  40d002:	loopne 0x40cf99
  40d004:	mov    fs,WORD PTR [eax]
  40d006:	daa    
  40d007:	adc    BYTE PTR [edi],dh
  40d009:	pop    edi
  40d00a:	and    eax,0xca1dfffa
  40d00f:	dec    ebx
  40d010:	or     eax,0x16b6c6ac
  40d015:	call   0x79c:0xca86f2d6
  40d01c:	imul   esp,DWORD PTR [ebx-0x637216ea],0x327fe14
  40d026:	pop    ds
  40d027:	push   es
  40d028:	(bad)  
  40d02a:	addr16 cmp eax,0xc2279a95
  40d030:	add    eax,0xc07b8f93
  40d035:	inc    ecx
  40d036:	loope  0x40cfee
  40d038:	fld    TBYTE PTR [edi]
  40d03a:	sbb    ebp,DWORD PTR ds:0x85d180a5
  40d040:	es scas eax,DWORD PTR es:[edi]
  40d042:	dec    eax
  40d043:	jmp    0x19ad:0x7fda711e
  40d04a:	ins    DWORD PTR es:[edi],dx
  40d04b:	dec    eax
  40d04c:	mov    bh,0x81
  40d04e:	inc    ebp
  40d04f:	mov    eax,DWORD PTR [ebx-0x6efc143e]
  40d055:	jmp    0x4198e79e
  40d05a:	sub    ch,BYTE PTR [ecx]
  40d05c:	push   es
  40d05d:	add    edx,DWORD PTR [edi+ebp*2+0x85a8b70]
  40d064:	sti    
  40d065:	pop    ds
  40d066:	mov    bh,0x69
  40d068:	ins    BYTE PTR es:[edi],dx
  40d069:	neg    DWORD PTR [esi]
  40d06b:	mov    ds:0xff12e596,al
  40d070:	sbb    edx,esi
  40d072:	addr16 aad 0xfb
  40d075:	inc    esi
  40d076:	(bad)  
  40d077:	xor    eax,0xfdfac0e9
  40d07c:	ins    DWORD PTR es:[edi],dx
  40d07d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d07e:	xor    ch,BYTE PTR [edx]
  40d080:	pop    ds
  40d081:	es test al,0x82
  40d084:	cmp    BYTE PTR [esi-0x4e],0x6f
  40d088:	aas    
  40d089:	fsubr  QWORD PTR [ebx+esi*1-0x7b7b4e0a]
  40d090:	aaa    
  40d091:	add    DWORD PTR [ebp-0x4],eax
  40d094:	bound  ecx,QWORD PTR [ecx+edi*8+0x6db88e49]
  40d09b:	xor    BYTE PTR [edi+0x4d],bl
  40d09e:	dec    esi
  40d09f:	into   
  40d0a0:	bound  edx,QWORD PTR [edx]
  40d0a2:	lds    edi,FWORD PTR ds:0x183819c6
  40d0a8:	int3   
  40d0a9:	push   ds
  40d0aa:	les    edx,FWORD PTR [edx+0x53abf3b7]
  40d0b0:	adc    al,0x4e
  40d0b2:	fidivr WORD PTR [esi+0x26]
  40d0b5:	loop   0x40d131
  40d0b7:	xchg   esp,eax
  40d0b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d0b9:	push   es
  40d0ba:	mov    al,0x8
  40d0bc:	push   0x6cb1b72d
  40d0c1:	xor    al,0xa
  40d0c3:	repnz or ebx,DWORD PTR [ebx+0x3c]
  40d0c7:	pop    ebx
  40d0c8:	push   ds
  40d0c9:	pop    ebx
  40d0ca:	add    BYTE PTR [ebp*2-0x3ebe4b7d],bl
  40d0d1:	mov    ecx,0x9161c4c1
  40d0d6:	mov    esi,0x57875fc1
  40d0db:	mov    ecx,DWORD PTR [ecx-0x19]
  40d0de:	loop   0x40d075
  40d0e0:	inc    ebx
  40d0e2:	push   ds
  40d0e3:	in     eax,0x84
  40d0e5:	mov    eax,ds:0x9d30334
  40d0ea:	jns    0x40d0b9
  40d0ec:	pop    ds
  40d0ed:	int3   
  40d0ee:	adc    edx,DWORD PTR [edi+0x2c61463d]
  40d0f4:	hlt    
  40d0f5:	mov    cl,0x42
  40d0f7:	rcl    DWORD PTR [eax+0x5aeaa236],cl
  40d0fd:	jmp    0x40d14f
  40d0ff:	imul   ebx,DWORD PTR [edi-0x3a],0x59
  40d103:	or     eax,0x52c8825a
  40d108:	das    
  40d109:	retf   0x632e
  40d10c:	mov    esp,0x730b0b5d
  40d111:	fisub  DWORD PTR [ecx]
  40d113:	sub    eax,0x98a677ab
  40d118:	pop    esi
  40d119:	leave  
  40d11a:	push   ebx
  40d11b:	lods   al,BYTE PTR ds:[esi]
  40d11c:	lock dec esi
  40d11e:	mov    ebx,0x60b6dc5d
  40d123:	cmp    DWORD PTR [ecx-0x17],ecx
  40d126:	and    bl,cl
  40d128:	retf   
  40d129:	bound  ebp,QWORD PTR [eax-0x27a5d905]
  40d12f:	mov    edx,0xffac80ff
  40d134:	imul   ebx,DWORD PTR [edx],0xcfa2e33a
  40d13a:	mov    eax,0x42a0be2c
  40d13f:	push   ss
  40d140:	jo     0x40d19f
  40d142:	cld    
  40d143:	iret   
  40d144:	ins    BYTE PTR es:[edi],dx
  40d145:	psubq  mm3,QWORD PTR [esi]
  40d148:	jle    0x40d0e0
  40d14a:	je     0x40d0ed
  40d14c:	dec    esi
  40d14d:	shl    BYTE PTR [ebp-0x44],0x10
  40d151:	mov    dl,0xd7
  40d153:	les    edi,FWORD PTR [ebx+0x21]
  40d156:	in     eax,0x6d
  40d158:	cdq    
  40d159:	shl    DWORD PTR [ecx],1
  40d15b:	push   0x20
  40d15d:	or     DWORD PTR [edx-0x14],edx
  40d160:	pop    edx
  40d161:	xchg   ecx,eax
  40d162:	ret    0x5509
  40d165:	popf   
  40d166:	fcomp  DWORD PTR [ebx]
  40d168:	inc    esi
  40d169:	out    dx,eax
  40d16a:	sub    al,0xb
  40d16c:	das    
  40d16d:	imul   edi,eax,0x30
  40d170:	mov    esi,0xcd1b0551
  40d175:	push   ss
  40d176:	jb     0x40d16d
  40d178:	adc    eax,0x31544808
  40d17d:	test   al,0xef
  40d17f:	add    BYTE PTR [ebp+ecx*2-0x73],ch
  40d183:	push   ss
  40d184:	sti    
  40d185:	aam    0x5e
  40d187:	das    
  40d188:	stos   BYTE PTR es:[edi],al
  40d189:	fsubr  DWORD PTR fs:[ebp+0x74]
  40d18d:	shr    BYTE PTR [edi],cl
  40d18f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d190:	(bad)  
  40d191:	xlat   BYTE PTR ds:[ebx]
  40d192:	mov    cl,0xd
  40d194:	dec    esp
  40d195:	int    0x10
  40d197:	cmp    eax,0xc52608f2
  40d19c:	lock fcom DWORD PTR [ecx+0x69]
  40d1a0:	pop    edi
  40d1a1:	fisttp DWORD PTR [edx+eax*4+0x1f]
  40d1a5:	(bad)  
  40d1a6:	xor    ecx,DWORD PTR [esp+esi*2]
  40d1a9:	sbb    ebx,DWORD PTR [esi-0x3a]
  40d1ac:	push   ecx
  40d1ad:	dec    ecx
  40d1ae:	into   
  40d1af:	push   0xffffff86
  40d1b1:	in     eax,dx
  40d1b2:	in     eax,0x8d
  40d1b4:	test   WORD PTR [eax],si
  40d1b7:	xchg   edi,eax
  40d1b8:	dec    edi
  40d1b9:	mov    eax,ds:0xfdcbbac4
  40d1be:	test   eax,0x79bfcd3
  40d1c3:	push   edi
  40d1c4:	push   ss
  40d1c5:	outs   dx,BYTE PTR ds:[esi]
  40d1c6:	cmp    DWORD PTR [edi],esi
  40d1c8:	adc    al,BYTE PTR [ebp-0x11]
  40d1cb:	adc    edx,0x42b4179f
  40d1d1:	out    dx,al
  40d1d2:	or     dh,BYTE PTR [edi+0x7e]
  40d1d5:	jbe    0x40d217
  40d1d7:	mov    eax,0x2c175f45
  40d1dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d1dd:	scas   eax,DWORD PTR es:[edi]
  40d1de:	int    0x48
  40d1e0:	pop    es
  40d1e1:	rcl    ebp,1
  40d1e3:	dec    edi
  40d1e4:	ins    BYTE PTR es:[edi],dx
  40d1e5:	stos   BYTE PTR es:[edi],al
  40d1e6:	inc    esi
  40d1e7:	and    esp,esp
  40d1e9:	sbb    eax,0xa4291585
  40d1ee:	sti    
  40d1ef:	cs mov ch,0x71
  40d1f2:	dec    esp
  40d1f3:	test   eax,0xf753e174
  40d1f8:	inc    ebx
  40d1f9:	sti    
  40d1fa:	mov    ecx,0xa46010e3
  40d1ff:	hlt    
  40d200:	idiv   DWORD PTR [esi+0x1b]
  40d203:	jns    0x40d21a
  40d205:	xor    dh,BYTE PTR [ecx+0xa]
  40d208:	add    dh,BYTE PTR [ebx]
  40d20a:	cmp    ecx,DWORD PTR [ecx]
  40d20c:	mov    esp,DWORD PTR [eax-0x5]
  40d20f:	and    al,BYTE PTR [ebx+ebx*4-0x6a]
  40d213:	jge    0x40d1e5
  40d215:	jecxz  0x40d19d
  40d217:	repz and dl,BYTE PTR [ecx+0x6716e511]
  40d21e:	int    0xb9
  40d220:	sbb    bl,al
  40d222:	xchg   ebx,eax
  40d223:	je     0x40d1d5
  40d225:	popa   
  40d226:	xor    BYTE PTR [eax-0x73],ch
  40d229:	sbb    ecx,ecx
  40d22b:	rol    DWORD PTR [edi+ecx*8],cl
  40d22e:	call   0x6530:0x2468be2f
  40d235:	push   esi
  40d236:	fnstcw WORD PTR [ebp+0x5dfd2a2f]
  40d23c:	dec    ebp
  40d23d:	inc    ecx
  40d23e:	adc    ah,BYTE PTR [edx-0x49323686]
  40d244:	stos   BYTE PTR es:[edi],al
  40d245:	lods   al,BYTE PTR ds:[esi]
  40d246:	mov    eax,0x3085e578
  40d24b:	lock arpl WORD PTR [edx-0xcb457f1],cx
  40d252:	fwait
  40d253:	adc    esi,ebx
  40d255:	mov    edi,0x3ccc9e2f
  40d25a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d25b:	in     eax,0x6b
  40d25d:	or     cl,BYTE PTR [eax-0x13]
  40d260:	pop    eax
  40d261:	and    edi,ebp
  40d263:	mov    edx,0x9c0cf278
  40d268:	repnz fst DWORD PTR [ecx-0x19c711a6]
  40d26f:	xor    dh,BYTE PTR [ebp-0x5c]
  40d272:	fistp  DWORD PTR [ebx-0x64a4d219]
  40d278:	test   al,0xd2
  40d27a:	sub    DWORD PTR [eax],ecx
  40d27c:	pop    edi
  40d27d:	cdq    
  40d27e:	inc    esp
  40d27f:	imul   esi,DWORD PTR [ecx],0x8
  40d282:	add    BYTE PTR [ebx+0x7b97aa1f],0x15
  40d289:	mov    cl,ah
  40d28b:	cmp    ah,BYTE PTR [esi]
  40d28d:	add    bl,BYTE PTR [edx]
  40d28f:	jl     0x40d2c2
  40d291:	cmp    ecx,DWORD PTR [ecx+0x60]
  40d294:	push   esi
  40d295:	and    DWORD PTR [esi+edx*1-0xe5e7a3e],esi
  40d29c:	jge    0x40d274
  40d29e:	dec    eax
  40d29f:	or     BYTE PTR [edx],bh
  40d2a1:	retf   
  40d2a2:	(bad)  
  40d2a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d2a5:	and    al,0x96
  40d2a7:	sete   bh
  40d2aa:	mov    eax,0x43d8e314
  40d2af:	jg     0x40d2ac
  40d2b1:	(bad)  
  40d2b2:	aad    0xe7
  40d2b4:	or     BYTE PTR ds:[ebp+0x5d],al
  40d2b8:	xchg   esi,eax
  40d2b9:	push   esp
  40d2ba:	shr    DWORD PTR [eax-0x1f],1
  40d2bd:	ss retf 
  40d2bf:	sahf   
  40d2c0:	addr16 pop esp
  40d2c2:	sar    DWORD PTR [ebx+0x1307762f],0x1
  40d2c9:	xchg   ebx,eax
  40d2ca:	aaa    
  40d2cb:	or     DWORD PTR [ebx+0x2ec10d01],esi
  40d2d1:	jo     0x40d2e3
  40d2d3:	or     ch,al
  40d2d5:	cmp    ah,BYTE PTR [ebx-0x44]
  40d2d8:	cli    
  40d2d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d2da:	xchg   esp,eax
  40d2db:	inc    esi
  40d2dc:	fidiv  WORD PTR [ebx]
  40d2de:	sbb    eax,0x9dccd7
  40d2e3:	lea    ebx,[edx+0x56292e99]
  40d2e9:	cmp    edi,ebx
  40d2eb:	outs   dx,DWORD PTR ds:[esi]
  40d2ec:	inc    ebx
  40d2ed:	pop    esp
  40d2ee:	loopne 0x40d290
  40d2f0:	loop   0x40d2f2
  40d2f2:	sub    esp,edi
  40d2f4:	repnz inc edx
  40d2f6:	in     eax,0x0
  40d2f8:	sar    ecx,1
  40d2fa:	push   ecx
  40d2fb:	out    0xbf,al
  40d2fd:	test   eax,0x5c0240ca
  40d302:	push   ecx
  40d303:	push   0x7e81455f
  40d308:	js     0x40d2b6
  40d30a:	je     0x40d319
  40d30c:	test   DWORD PTR [edx-0x49],0x6dbaf075
  40d313:	jae    0x40d307
  40d315:	test   DWORD PTR [eax],ecx
  40d317:	sub    DWORD PTR [edx-0xa],0xfdfa4ee2
  40d31e:	xor    edx,esp
  40d320:	ins    DWORD PTR es:[edi],dx
  40d321:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d322:	ja     0x40d2cb
  40d324:	xor    esp,DWORD PTR [ebp+0x56]
  40d327:	or     ah,ch
  40d329:	aad    0x1
  40d32b:	pusha  
  40d32c:	cli    
  40d32d:	xchg   ecx,eax
  40d32e:	mov    edi,0xe0973ba5
  40d333:	fmul   st,st(4)
  40d335:	cli    
  40d336:	inc    eax
  40d337:	pop    eax
  40d338:	mov    ebp,0x356f9d67
  40d33d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d33e:	xchg   ecx,eax
  40d33f:	mov    DWORD PTR [edi-0x53],ebx
  40d342:	addr16 iret 
  40d344:	adc    esi,DWORD PTR [ebp+0x6d]
  40d347:	xor    BYTE PTR [edi-0x69655fd8],0xd9
  40d34e:	fdivp  st(5),st
  40d350:	xor    al,0xe4
  40d352:	add    ebx,DWORD PTR [edx-0x8]
  40d355:	sahf   
  40d356:	cmp    DWORD PTR [ecx],ebp
  40d358:	callw  0x7eca
  40d35c:	jmp    FWORD PTR [ebp-0x54]
  40d35f:	and    eax,0x4f3e3033
  40d364:	pop    ds
  40d365:	daa    
  40d366:	jecxz  0x40d36b
  40d368:	sar    DWORD PTR [ecx-0x40c3d38d],1
  40d36e:	loopne 0x40d3c6
  40d370:	adc    edx,DWORD PTR [ebx+edi*4+0x2df31256]
  40d377:	enter  0x7fee,0xb1
  40d37b:	in     eax,0x4a
  40d37d:	mov    bh,0x67
  40d37f:	sub    DWORD PTR [edi-0x59bb08e3],ecx
  40d385:	adc    al,0x5c
  40d387:	add    eax,0x3b205403
  40d38c:	mov    esp,0x232f109c
  40d391:	sbb    eax,0x153209b
  40d396:	adc    edx,DWORD PTR [ecx]
  40d398:	rol    BYTE PTR [edi+0x1d],cl
  40d39b:	std    
  40d39c:	loope  0x40d348
  40d39e:	lds    ebx,FWORD PTR [ebp+0x75]
  40d3a1:	jb     0x40d3eb
  40d3a3:	lods   al,BYTE PTR ds:[esi]
  40d3a4:	add    al,0x8a
  40d3a6:	in     eax,0x8d
  40d3a8:	in     al,dx
  40d3a9:	pop    edx
  40d3aa:	cmp    ebx,DWORD PTR [esi+eax*4]
  40d3ad:	push   eax
  40d3ae:	fadd   st,st(6)
  40d3b0:	in     eax,0x46
  40d3b2:	push   0x7a87bc05
  40d3b7:	jmp    0x40d406
  40d3b9:	mov    edi,ds
  40d3bb:	ins    DWORD PTR es:[edi],dx
  40d3bc:	sub    ecx,DWORD PTR [edx+0x6]
  40d3bf:	jns    0x40d43a
  40d3c1:	inc    edx
  40d3c2:	repnz mov esi,ds
  40d3c5:	xchg   ecx,eax
  40d3c6:	mov    bl,0x43
  40d3c8:	cdq    
  40d3c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d3ca:	imul   esi,esi,0xb
  40d3cd:	in     eax,dx
  40d3ce:	stos   DWORD PTR es:[edi],eax
  40d3cf:	push   esi
  40d3d0:	test   eax,0xc6cb3521
  40d3d5:	add    eax,0x7306d099
  40d3da:	dec    ebp
  40d3db:	adc    al,0x1d
  40d3dd:	add    dl,ch
  40d3df:	xchg   esp,eax
  40d3e0:	pop    es
  40d3e1:	mov    dl,0xaf
  40d3e3:	pop    esi
  40d3e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d3e5:	retf   
  40d3e6:	mov    dl,0x31
  40d3e8:	(bad)  
  40d3e9:	lea    esi,[eax+0x12]
  40d3ec:	stos   BYTE PTR es:[edi],al
  40d3ed:	push   esp
  40d3ee:	xor    DWORD PTR [eax],0xffffffa9
  40d3f1:	ss cmp al,0xdc
  40d3f4:	int3   
  40d3f5:	adc    bh,BYTE PTR [edx]
  40d3f7:	jae    0x40d453
  40d3f9:	inc    ebx
  40d3fa:	rcl    DWORD PTR [ecx],0xb4
  40d3fd:	inc    ebp
  40d3fe:	push   ds
  40d3ff:	dec    edi
  40d400:	push   edx
  40d401:	jg     0x40d388
  40d403:	int    0x53
  40d405:	sbb    eax,0x7ac4c907
  40d40a:	daa    
  40d40b:	dec    edi
  40d40c:	push   0xffffffc7
  40d40e:	xchg   edi,eax
  40d40f:	in     eax,0x95
  40d411:	sbb    BYTE PTR [esi],dl
  40d413:	xchg   DWORD PTR [edx+0x44],esp
  40d416:	leave  
  40d417:	or     DWORD PTR [esi-0x18],ebp
  40d41a:	xchg   ebx,eax
  40d41b:	xlat   BYTE PTR ds:[ebx]
  40d41c:	div    dh
  40d41e:	or     DWORD PTR [eax+edi*1],0xffffff8a
  40d422:	imul   edi,DWORD PTR [ebx+0x7c51a941],0xffffffbd
  40d429:	inc    esi
  40d42a:	sub    al,0x94
  40d42c:	jge    0x40d3f0
  40d42e:	jl     0x40d489
  40d430:	cli    
  40d431:	loope  0x40d442
  40d433:	(bad)  
  40d434:	loop   0x40d4b1
  40d436:	mov    bh,0x2d
  40d438:	xor    BYTE PTR [ebx-0x7becaff5],ch
  40d43e:	add    al,0x21
  40d440:	inc    ecx
  40d441:	pop    DWORD PTR [esi+0x335295b6]
  40d447:	mov    esp,0x94e408f2
  40d44c:	push   ss
  40d44d:	xchg   BYTE PTR [ebp+0x32],al
  40d450:	data16 xor bh,dh
  40d453:	pusha  
  40d454:	test   al,0x76
  40d456:	addr16 xchg eax,ebx
  40d459:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d45a:	xchg   ebx,eax
  40d45b:	pop    edi
  40d45c:	test   eax,0x5058a58b
  40d461:	add    BYTE PTR [edi+eax*4-0x76faccc],0x14
  40d469:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d46a:	je     0x40d4e5
  40d46c:	xchg   ebx,eax
  40d46d:	cwde   
  40d46e:	not    DWORD PTR [ecx+0x1cd26020]
  40d474:	sub    al,0xf1
  40d476:	mov    dh,0x1f
  40d478:	xor    bh,BYTE PTR [ebp+0x175a495c]
  40d47e:	or     eax,ecx
  40d480:	test   DWORD PTR [esp+ebx*8-0x56],ebx
  40d484:	mov    DWORD PTR [edx],esp
  40d486:	(bad)
  40d48a:	fld    st(1)
  40d48c:	inc    ebp
  40d48d:	shr    DWORD PTR [edx-0x24],0x9d
  40d491:	inc    esp
  40d492:	xchg   esp,eax
  40d493:	cli    
  40d494:	out    0x30,eax
  40d496:	(bad)  
  40d497:	ds pushf 
  40d499:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d49a:	rol    DWORD PTR [edx-0xe89c1c8],0xcd
  40d4a1:	cmc    
  40d4a2:	adc    edi,DWORD PTR [ebp+0x70]
  40d4a5:	dec    eax
  40d4a6:	xchg   edx,eax
  40d4a7:	(bad)  
  40d4a8:	push   0xffffffc5
  40d4aa:	jg     0x40d4c8
  40d4ac:	push   ds
  40d4ad:	into   
  40d4ae:	fs mov bl,0x54
  40d4b1:	pop    ebx
  40d4b2:	pop    es
  40d4b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d4b4:	dec    esp
  40d4b5:	clc    
  40d4b6:	out    dx,al
  40d4b7:	push   ecx
  40d4b8:	(bad)  
  40d4b9:	pop    eax
  40d4ba:	test   DWORD PTR [esi],esp
  40d4bc:	and    BYTE PTR [edx+0x68],al
  40d4bf:	xchg   ebx,eax
  40d4c0:	pop    esp
  40d4c1:	mov    eax,0x998e0e56
  40d4c6:	and    DWORD PTR [edx+ebx*4+0x1f9881d1],ecx
  40d4cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d4ce:	push   ss
  40d4cf:	in     al,dx
  40d4d0:	pop    esp
  40d4d1:	xchg   edi,eax
  40d4d2:	loope  0x40d4ea
  40d4d4:	call   0xdf5967f8
  40d4d9:	out    dx,eax
  40d4da:	mov    ds,WORD PTR [eax+0x683fdfa6]
  40d4e0:	sbb    bh,BYTE PTR [edx+0x7613002b]
  40d4e6:	jnp    0x40d521
  40d4e8:	mov    WORD PTR [ecx-0x23c62bc],ss
  40d4ee:	cmp    DWORD PTR [esi+esi*8],0x5d6020fe
  40d4f5:	ret    
  40d4f6:	sbb    bl,BYTE PTR [esi-0x35833f6f]
  40d4fc:	sub    eax,ecx
  40d4fe:	adc    DWORD PTR [esi-0x7e2efdf7],ecx
  40d504:	int    0xe5
  40d506:	cdq    
  40d507:	aam    0xed
  40d509:	mov    bl,0x3a
  40d50b:	xor    al,0x20
  40d50d:	imul   esi,DWORD PTR [esi+0x7ca9e14c],0xffffffca
  40d514:	fst    st(3)
  40d516:	cmp    BYTE PTR [ecx+0x31],0xac
  40d51a:	mov    edi,es
  40d51c:	sbb    eax,ecx
  40d51e:	mov    esp,0x944381b7
  40d523:	push   es
  40d524:	inc    edi
  40d525:	xchg   ecx,eax
  40d526:	icebp  
  40d527:	stos   BYTE PTR es:[edi],al
  40d528:	jae    0x40d599
  40d52a:	cld    
  40d52b:	sub    BYTE PTR [edi+0x3066c144],ah
  40d531:	push   ds
  40d532:	repz test al,0x8a
  40d535:	lods   al,BYTE PTR ds:[esi]
  40d536:	lds    edx,FWORD PTR [ebx-0xe]
  40d539:	cmp    BYTE PTR [ecx+0x41],ch
  40d53c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d53d:	xchg   al,ch
  40d53f:	adc    ebx,DWORD PTR [ebx]
  40d541:	pop    edx
  40d542:	jge    0x40d55e
  40d544:	sub    BYTE PTR [ebx-0x3e86d77c],0x80
  40d54b:	sbb    eax,0xc7b82ba6
  40d550:	jecxz  0x40d556
  40d552:	out    dx,al
  40d553:	shr    DWORD PTR [ecx],0xc1
  40d556:	push   edx
  40d557:	(bad)  
  40d558:	mov    ss,WORD PTR [ecx+ebp*4]
  40d55b:	inc    esi
  40d55c:	xor    bh,BYTE PTR [ecx-0x4f]
  40d55f:	leave  
  40d560:	test   DWORD PTR [edx-0x160b8fe5],edi
  40d566:	dec    eax
  40d567:	jbe    0x40d4f6
  40d569:	fbstp  TBYTE PTR [ecx]
  40d56b:	aam    0x61
  40d56d:	push   eax
  40d56e:	xchg   bl,bl
  40d570:	or     al,BYTE PTR [esi-0x383c165]
  40d576:	lock ins DWORD PTR es:[edi],dx
  40d578:	mov    ecx,0xe23a7d2a
  40d57d:	inc    esi
  40d57e:	dec    eax
  40d57f:	nop
  40d580:	dec    edi
  40d581:	stos   DWORD PTR es:[edi],eax
  40d582:	or     dl,dh
  40d584:	mov    al,0xb7
  40d586:	push   0xeb0bfc28
  40d58b:	sahf   
  40d58c:	faddp  st(1),st
  40d58e:	stos   DWORD PTR es:[edi],eax
  40d58f:	aas    
  40d590:	stos   DWORD PTR es:[edi],eax
  40d591:	scas   al,BYTE PTR es:[edi]
  40d592:	icebp  
  40d593:	ins    DWORD PTR es:[edi],dx
  40d594:	jae    0x40d5a2
  40d596:	inc    edi
  40d597:	cmp    esi,DWORD PTR [edi+ebp*4-0x15]
  40d59b:	cmc    
  40d59c:	mov    edx,0xec53152
  40d5a1:	inc    edx
  40d5a2:	or     eax,0x4e9e5e4d
  40d5a7:	mov    dh,0xc4
  40d5a9:	inc    edi
  40d5aa:	out    dx,al
  40d5ab:	mov    ebp,DWORD PTR ds:0xbc113f01
  40d5b1:	test   ebp,edi
  40d5b3:	lods   al,BYTE PTR ds:[esi]
  40d5b4:	cli    
  40d5b5:	icebp  
  40d5b6:	pop    ss
  40d5b7:	pusha  
  40d5b8:	dec    BYTE PTR [esi-0x4f]
  40d5bb:	mov    eax,ds:0x94ecd0c5
  40d5c0:	xchg   edx,eax
  40d5c1:	xchg   edx,eax
  40d5c2:	out    dx,eax
  40d5c3:	outs   dx,DWORD PTR ds:[esi]
  40d5c4:	(bad)  
  40d5c5:	gs dec esp
  40d5c7:	mov    ecx,0xfbc2e5a4
  40d5cc:	hlt    
  40d5cd:	mov    edx,edx
  40d5cf:	cdq    
  40d5d0:	inc    esp
  40d5d2:	inc    edx
  40d5d3:	sbb    dh,BYTE PTR [edx+ecx*1+0x7f222e43]
  40d5da:	adc    eax,0x5c45a08d
  40d5df:	stc    
  40d5e0:	rep ins BYTE PTR es:[edi],dx
  40d5e2:	pop    ss
  40d5e3:	out    dx,eax
  40d5e4:	xor    edi,ebx
  40d5e6:	call   0xb5b46569
  40d5eb:	adc    edi,DWORD PTR [ebx]
  40d5ed:	ret    
  40d5ee:	rcl    DWORD PTR [edx],1
  40d5f0:	xchg   ecx,eax
  40d5f1:	adc    eax,0xea73a62f
  40d5f6:	inc    edx
  40d5f7:	das    
  40d5f8:	call   0x230f9a41
  40d5fd:	test   al,0xcb
  40d5ff:	push   es
  40d600:	loope  0x40d5fa
  40d602:	or     dl,ah
  40d604:	bound  edx,QWORD PTR [ebx+0x7a1cb490]
  40d60a:	xchg   DWORD PTR [edi-0x6b],ebp
  40d60d:	into   
  40d60e:	sub    edx,DWORD PTR [edx]
  40d610:	jns    0x40d5a0
  40d612:	ret    
  40d613:	call   0x4b8750c9
  40d618:	add    esi,DWORD PTR [ebx-0x6141eab8]
  40d61e:	sbb    ecx,DWORD PTR [edi]
  40d620:	lock mov bh,0xc8
  40d623:	or     BYTE PTR [edx-0xe],ch
  40d626:	jno    0x40d620
  40d628:	dec    edx
  40d629:	mov    ?,WORD PTR [ebp-0x215a2ec1]
  40d62f:	jne    0x40d69a
  40d631:	jg     0x40d614
  40d633:	ins    DWORD PTR es:[edi],dx
  40d634:	jp     0x40d69c
  40d636:	test   eax,0x559213f3
  40d63b:	pop    esi
  40d63c:	sub    edi,DWORD PTR [ecx+0x55]
  40d63f:	mov    bl,0x3a
  40d641:	jle    0x40d652
  40d643:	fild   WORD PTR [ecx-0x40]
  40d646:	dec    edi
  40d647:	ret    
  40d648:	xchg   ebp,eax
  40d649:	loope  0x40d64d
  40d64b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d64c:	xchg   ebp,eax
  40d64d:	aas    
  40d64e:	imul   ebp,DWORD PTR ds:0x9b8e54a1,0x7eab2528
  40d658:	add    al,0xb3
  40d65a:	push   edi
  40d65b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d65c:	inc    esp
  40d65d:	sbb    eax,0x3ae41872
  40d662:	in     eax,dx
  40d663:	adc    DWORD PTR [edx],edi
  40d665:	outs   dx,DWORD PTR ds:[esi]
  40d666:	and    eax,0xe1dff937
  40d66b:	push   edx
  40d66c:	and    edi,DWORD PTR [eax*1-0x4a7ac7cd]
  40d673:	ins    BYTE PTR es:[edi],dx
  40d674:	or     BYTE PTR [eax+ebx*4-0x2215e7af],dh
  40d67b:	inc    edi
  40d67c:	loopne 0x40d650
  40d67e:	sub    BYTE PTR ds:0xdc1e65ba,ch
  40d684:	ins    BYTE PTR es:[edi],dx
  40d685:	add    eax,ebx
  40d687:	pop    edx
  40d688:	shr    ebx,1
  40d68a:	lods   al,BYTE PTR ds:[esi]
  40d68b:	push   ss
  40d68c:	and    DWORD PTR [eax+0x272ce3c5],edx
  40d692:	repnz inc ecx
  40d694:	scas   al,BYTE PTR es:[edi]
  40d695:	add    DWORD PTR [eax-0xb],edi
  40d698:	fwait
  40d699:	mov    edx,0x85a37d93
  40d69e:	repz mov esi,0xcfee2e7c
  40d6a4:	es mov ecx,0x827539d8
  40d6aa:	pop    ss
  40d6ab:	call   0x5178e045
  40d6b0:	fist   WORD PTR [ebx+0x4c]
  40d6b3:	mov    edi,0x4d28f2d2
  40d6b8:	out    0x1d,eax
  40d6ba:	pop    es
  40d6bb:	aas    
  40d6bc:	shl    BYTE PTR [ebx+0x53],cl
  40d6bf:	jae    0x40d671
  40d6c1:	(bad)  
  40d6c2:	pop    ecx
  40d6c3:	mov    al,0x71
  40d6c5:	imul   esi,DWORD PTR [esi],0xf9fcc165
  40d6cb:	lods   al,BYTE PTR ds:[esi]
  40d6cc:	push   ss
  40d6cd:	push   ebx
  40d6ce:	push   eax
  40d6cf:	lahf   
  40d6d0:	bound  ebx,QWORD PTR [edx+ecx*8+0x7e]
  40d6d4:	retf   0x2f67
  40d6d7:	adc    cl,BYTE PTR ds:0x55dc1244
  40d6dd:	jns    0x40d73e
  40d6df:	mov    ecx,0x2822f43e
  40d6e4:	popf   
  40d6e5:	lds    eax,FWORD PTR [ebx-0x5a]
  40d6e8:	mov    dh,0xad
  40d6ea:	data16 ins BYTE PTR es:[edi],dx
  40d6ec:	repz mov ?,WORD PTR gs:[ecx+0x6b0b788d]
  40d6f4:	dec    eax
  40d6f5:	jae    0x40d74e
  40d6f7:	fbld   TBYTE PTR [esi+0x5d]
  40d6fa:	or     cl,0xae
  40d6fd:	mov    eax,ds:0x1f89d28c
  40d702:	retf   0xd540
  40d705:	xchg   esp,eax
  40d706:	cld    
  40d707:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d708:	jbe    0x40d774
  40d70a:	fidivr WORD PTR [edx+0xa2982d9]
  40d710:	sub    al,0xc1
  40d712:	out    0x73,al
  40d714:	adc    DWORD PTR [ebx+ecx*4-0x5e63b87e],esi
  40d71b:	and    DWORD PTR [ebp-0x32a60a1d],edx
  40d721:	shl    BYTE PTR [ebp-0x623ee135],0x8
  40d728:	jo     0x40d791
  40d72a:	xor    eax,0xd9536c95
  40d72f:	inc    esi
  40d730:	inc    ecx
  40d731:	dec    edx
  40d732:	shr    dh,0x98
  40d735:	leave  
  40d736:	gs push eax
  40d738:	test   al,0x42
  40d73a:	add    DWORD PTR [edi+eiz*1+0x14],ebp
  40d73e:	dec    ecx
  40d73f:	sbb    al,0x6d
  40d741:	and    BYTE PTR [esi+0x6ab75474],ah
  40d747:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d748:	cmp    ebx,DWORD PTR [eax-0x46]
  40d74b:	xor    DWORD PTR [ecx+0x5b412c7f],0x34
  40d752:	ds inc ebx
  40d754:	push   eax
  40d755:	jns    0x40d6f1
  40d757:	xor    DWORD PTR [ebx-0x18095759],eax
  40d75d:	jbe    0x40d6df
  40d75f:	dec    ebp
  40d760:	aaa    
  40d761:	and    bl,ch
  40d763:	js     0x40d714
  40d765:	sub    al,BYTE PTR [esi]
  40d767:	jmp    0x40d740
  40d769:	das    
  40d76a:	aam    0x1b
  40d76c:	inc    ebx
  40d76d:	(bad)  
  40d76e:	test   BYTE PTR [edx+ecx*4],0x7c
  40d772:	inc    esp
  40d773:	loopne 0x40d74f
  40d775:	or     dl,BYTE PTR [esi-0x52fe7658]
  40d77b:	mov    al,ds:0xb4a0f62f
  40d780:	sbb    DWORD PTR [eax+ecx*1],0x62
  40d784:	icebp  
  40d785:	stos   BYTE PTR es:[edi],al
  40d786:	imul   DWORD PTR [ecx+ecx*2+0x91fe166]
  40d78d:	jne    0x40d7d5
  40d78f:	mov    edx,0x8138d8bf
  40d794:	fidiv  WORD PTR cs:[ebx-0x271a6c5b]
  40d79b:	add    al,dh
  40d79d:	lock sub bh,dh
  40d7a0:	test   esi,ebp
  40d7a2:	popa   
  40d7a3:	push   0xea09e7c5
  40d7a8:	pop    edx
  40d7a9:	repnz sub BYTE PTR [ecx+0x61],0x7f
  40d7ae:	inc    esp
  40d7af:	xor    DWORD PTR [edi],esi
  40d7b1:	in     al,dx
  40d7b2:	aas    
  40d7b3:	or     dl,BYTE PTR [ebx]
  40d7b5:	push   edi
  40d7b6:	std    
  40d7b7:	mov    eax,ds:0x404756f5
  40d7bc:	rcl    BYTE PTR [eax+0x368c0ee4],cl
  40d7c2:	(bad)  
  40d7c3:	std    
  40d7c4:	xor    dl,al
  40d7c6:	aam    0xcf
  40d7c8:	sbb    dh,bh
  40d7ca:	ror    DWORD PTR [ebp+0x44cf1d2c],0xc8
  40d7d1:	outs   dx,BYTE PTR ds:[esi]
  40d7d2:	and    al,0x21
  40d7d4:	aam    0x68
  40d7d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d7d7:	xchg   esi,eax
  40d7d8:	mov    dh,0xe0
  40d7da:	or     cl,al
  40d7dc:	push   ecx
  40d7dd:	sbb    al,BYTE PTR [ebx-0x20fb5483]
  40d7e3:	fbstp  TBYTE PTR [eax-0x527ea188]
  40d7e9:	add    edx,esi
  40d7eb:	mov    cl,0xac
  40d7ed:	je     0x40d85c
  40d7ef:	das    
  40d7f0:	js     0x40d82c
  40d7f2:	dec    edi
  40d7f3:	stos   DWORD PTR es:[edi],eax
  40d7f4:	lods   eax,DWORD PTR ds:[esi]
  40d7f5:	sahf   
  40d7f6:	cmp    eax,0x964c11e8
  40d7fb:	jne    0x40d7bd
  40d7fd:	mov    ds:0x8993c42d,al
  40d802:	arpl   WORD PTR [ebx-0x7003207e],bp
  40d808:	pop    esi
  40d809:	clc    
  40d80a:	hlt    
  40d80b:	lahf   
  40d80c:	mov    esp,ss
  40d80e:	test   eax,0x216fdb52
  40d813:	ror    DWORD PTR [ebx],1
  40d815:	fwait
  40d816:	sbb    BYTE PTR [edi+0x37e68978],ah
  40d81c:	adc    al,0x7c
  40d81e:	sbb    al,0x41
  40d820:	xchg   edx,eax
  40d821:	ret    
  40d822:	jne    0x40d852
  40d824:	or     al,0x44
  40d826:	out    0x37,al
  40d828:	cmp    al,0x1c
  40d82a:	pop    ebp
  40d82b:	fstp   TBYTE PTR [edi-0x23d74a5a]
  40d831:	or     ah,BYTE PTR [ebp+0x12e86bf6]
  40d837:	pop    ds
  40d838:	aad    0x9f
  40d83a:	adc    BYTE PTR [eax],0xfb
  40d83d:	fnstcw WORD PTR ds:[edi]
  40d840:	scas   al,BYTE PTR es:[edi]
  40d841:	cmp    DWORD PTR [eax-0x130f9be0],0x39457444
  40d84b:	or     eax,0x539f48a5
  40d850:	push   ebx
  40d851:	aam    0xa1
  40d853:	fnsave [ebx+ebp*4]
  40d856:	repz dec edi
  40d858:	je     0x40d85f
  40d85a:	sar    BYTE PTR [edi],1
  40d85c:	aad    0x85
  40d85e:	ret    0x65bd
  40d861:	xchg   edx,eax
  40d862:	pop    es
  40d863:	adc    al,0x49
  40d865:	jge    0x40d875
  40d867:	mov    ah,BYTE PTR [ebx+0x37]
  40d86a:	fisttp WORD PTR [edx-0x7e]
  40d86d:	sub    ch,dl
  40d86f:	call   0x7f5be79c
  40d874:	lds    ebp,FWORD PTR [edi]
  40d876:	fisttp QWORD PTR [esi+0x49]
  40d879:	or     ah,0x7a
  40d87c:	loopne 0x40d8b4
  40d87e:	push   es
  40d87f:	mov    ecx,0xd26a037c
  40d884:	fs mov esi,0xfce8604
  40d88a:	add    eax,0xb879ab22
  40d88f:	iret   
  40d890:	loope  0x40d886
  40d892:	mov    eax,ds:0x9090d841
  40d897:	mov    edx,0xc10e6661
  40d89c:	add    eax,0x718b22d8
  40d8a1:	ficomp WORD PTR [edi-0x1dc4e918]
  40d8a7:	mov    cl,0xbe
  40d8a9:	pop    ss
  40d8aa:	push   ebp
  40d8ab:	xor    eax,0x524c6d30
  40d8b0:	push   edx
  40d8b1:	fisttp QWORD PTR [edx-0x16755216]
  40d8b7:	retf   0x1398
  40d8ba:	pop    ebp
  40d8bb:	in     eax,dx
  40d8bc:	mov    esi,0x41ae8f11
  40d8c1:	push   ss
  40d8c2:	xchg   esp,eax
  40d8c3:	cmp    DWORD PTR [ebx],edx
  40d8c5:	stc    
  40d8c6:	mov    ah,0xe9
  40d8c8:	inc    esi
  40d8c9:	cmp    DWORD PTR [edi],ecx
  40d8cb:	and    BYTE PTR [ebp-0x6d],0x17
  40d8cf:	test   BYTE PTR [esi+0x15adebb2],dh
  40d8d5:	aas    
  40d8d6:	mov    al,0x3d
  40d8d8:	(bad)  
  40d8d9:	push   ebx
  40d8da:	dec    edx
  40d8db:	mov    eax,ds:0x8b9460de
  40d8e0:	enter  0xc554,0x14
  40d8e4:	bound  edi,QWORD PTR [ecx+0x56857d48]
  40d8ea:	dec    ebx
  40d8eb:	(bad)  
  40d8ec:	xor    edi,DWORD PTR [eax+edx*2-0x6c]
  40d8f0:	aad    0xb7
  40d8f2:	js     0x40d96c
  40d8f4:	mov    ch,0xfa
  40d8f6:	test   al,0x95
  40d8f8:	fwait
  40d8f9:	iret   
  40d8fa:	cmp    DWORD PTR [ebx+0x39],esp
  40d8fd:	popa   
  40d8fe:	adc    al,0x6a
  40d900:	inc    ebp
  40d901:	and    dh,BYTE PTR [ecx]
  40d903:	dec    esp
  40d904:	push   0x1b17296
  40d909:	rcl    bl,1
  40d90b:	test   BYTE PTR [ebp-0x1ff3f0e],dl
  40d911:	pop    esi
  40d912:	cmc    
  40d913:	out    dx,eax
  40d914:	push   esp
  40d915:	outs   dx,DWORD PTR ds:[esi]
  40d916:	inc    eax
  40d917:	inc    esp
  40d918:	ja     0x40d8ea
  40d91a:	in     al,dx
  40d91b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d91c:	sub    eax,0x4d182dec
  40d921:	dec    ebp
  40d922:	fistp  QWORD PTR [edi]
  40d924:	in     al,dx
  40d925:	in     al,dx
  40d926:	fldcw  WORD PTR [edi+0x601a57be]
  40d92c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d92d:	pusha  
  40d92e:	jbe    0x40d95d
  40d930:	aam    0x1e
  40d932:	jmp    0x40d900
  40d934:	xchg   ecx,eax
  40d935:	jecxz  0x40d99a
  40d937:	xor    BYTE PTR [ebx+0x4d],ah
  40d93a:	jle    0x40d985
  40d93c:	gs push 0x24
  40d93f:	clc    
  40d940:	dec    ecx
  40d941:	mov    DWORD PTR [bx+di],esp
  40d944:	add    eax,0xa63afd86
  40d949:	addr16 mov al,ds:0xf0a4
  40d94d:	cmc    
  40d94e:	inc    ebx
  40d94f:	retf   
  40d950:	(bad)  
  40d951:	rol    dl,cl
  40d953:	and    dl,BYTE PTR ds:0x92d6f467
  40d959:	in     eax,dx
  40d95a:	mov    ebx,0x6fc6296a
  40d95f:	lfs    esi,FWORD PTR [edx-0x56]
  40d963:	test   DWORD PTR [ecx+eiz*8],edx
  40d966:	push   es
  40d967:	mov    edi,0x8fd3df8d
  40d96c:	xchg   edi,eax
  40d96d:	inc    ecx
  40d96e:	jb     0x40d9e9
  40d970:	jbe    0x40d9c4
  40d972:	jmp    0x2cad:0xcbb2f879
  40d979:	jae    0x40d921
  40d97b:	cmp    DWORD PTR [edi-0x7e],ecx
  40d97e:	jb     0x40d9b5
  40d980:	mov    cl,0x43
  40d982:	jmp    0x3678:0x7aac3019
  40d989:	push   ebx
  40d98a:	mov    cl,0x56
  40d98c:	mov    bl,bh
  40d98e:	jns    0x40d912
  40d990:	into   
  40d991:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d992:	xchg   ebp,eax
  40d993:	sub    BYTE PTR [ebp*1-0x20729745],bh
  40d99a:	cmp    BYTE PTR [ebp-0x16dd00e7],0xe5
  40d9a1:	ins    DWORD PTR es:[edi],dx
  40d9a2:	adc    BYTE PTR [ebp+0x35],0x3e
  40d9a6:	test   al,0x9c
  40d9a8:	adc    eax,0x80a2099e
  40d9ad:	out    dx,al
  40d9ae:	mov    fs,WORD PTR [edi-0x5a72d472]
  40d9b4:	repz cmp DWORD PTR [esi+0x1d],edi
  40d9b8:	sbb    eax,0xca8608f9
  40d9bd:	fsub   st(1),st
  40d9bf:	add    dh,bh
  40d9c1:	adc    esi,DWORD PTR [ebp+0x2b]
  40d9c4:	dec    esi
  40d9c5:	(bad)  
  40d9c6:	lahf   
  40d9c7:	cmp    ah,BYTE PTR [edx-0x4c19653a]
  40d9cd:	jp     0x40d9fe
  40d9cf:	push   edi
  40d9d0:	pop    es
  40d9d1:	adc    esp,DWORD PTR [eax-0x54]
  40d9d4:	lahf   
  40d9d5:	loop   0x40d9cb
  40d9d7:	mov    ebp,0xe35de484
  40d9dc:	mov    bh,0xbc
  40d9de:	xchg   edi,eax
  40d9df:	dec    ebp
  40d9e0:	jl     0x40d9a9
  40d9e2:	enter  0xda23,0x84
  40d9e6:	leave  
  40d9e7:	pop    eax
  40d9e8:	ins    DWORD PTR es:[edi],dx
  40d9e9:	or     ebp,DWORD PTR [ebx]
  40d9eb:	mov    ebp,0x7707b696
  40d9f0:	lods   eax,DWORD PTR ds:[esi]
  40d9f1:	les    edx,FWORD PTR [edi]
  40d9f3:	push   eax
  40d9f4:	leave  
  40d9f5:	mov    al,0x3c
  40d9f7:	push   esi
  40d9f8:	jae    0x40da73
  40d9fa:	repz mov ds,WORD PTR [ebp-0x4b2f68dd]
  40da01:	xchg   ebx,eax
  40da02:	cmp    DWORD PTR [esi],edx
  40da04:	leave  
  40da05:	jne    0x40d9b7
  40da07:	sbb    eax,0xbf72daa6
  40da0c:	xchg   esi,eax
  40da0d:	sbb    al,0x99
  40da0f:	test   al,0x52
  40da11:	fs push cs
  40da13:	or     eax,0x3e9cf02b
  40da18:	mov    BYTE PTR [edi+0x21],dh
  40da1b:	xchg   ecx,eax
  40da1c:	jo     0x40da80
  40da1e:	psrad  mm4,QWORD PTR [edi]
  40da21:	sti    
  40da22:	push   edi
  40da23:	jbe    0x40d9e2
  40da25:	dec    eax
  40da26:	push   es
  40da27:	jb     0x40da47
  40da29:	push   ebp
  40da2a:	mov    DWORD PTR [ebx+0x2b],esp
  40da2d:	aam    0xb8
  40da2f:	xor    DWORD PTR [ebx-0x61],0x39503911
  40da36:	jae    0x40da17
  40da38:	lods   al,BYTE PTR ds:[esi]
  40da39:	sub    edi,DWORD PTR [ecx+0x18]
  40da3c:	sbb    ch,BYTE PTR cs:[edi]
  40da3f:	aas    
  40da40:	ret    0xab7e
  40da43:	dec    esi
  40da44:	pop    edi
  40da45:	cs cmp ebx,edx
  40da48:	mov    ah,0xad
  40da4a:	call   0xd2ded0e6
  40da4f:	pop    ds
  40da50:	cmp    ecx,DWORD PTR [ebx+0x5e]
  40da53:	rcl    edx,0x62
  40da56:	sbb    DWORD PTR [edi+0x6ce4e8b3],ebx
  40da5c:	push   esp
  40da5d:	shr    BYTE PTR [esi-0x333f1b69],cl
  40da63:	jp     0x40da3f
  40da65:	mov    ebp,0x25f4c15a
  40da6a:	jb     0x40da32
  40da6c:	add    ecx,0xdec4cb2e
  40da72:	inc    edx
  40da73:	jne    0x40da2d
  40da75:	xor    dh,ch
  40da77:	jp     0x40daad
  40da79:	div    BYTE PTR [edi-0x393033c3]
  40da7f:	mov    ds:0x5f7219ef,eax
  40da84:	push   edx
  40da85:	data16 aad 0xb7
  40da88:	shl    ecx,0x6
  40da8b:	rcr    BYTE PTR [ecx],0x1d
  40da8e:	xchg   esp,eax
  40da8f:	xchg   ebp,eax
  40da90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40da91:	inc    esp
  40da92:	nop
  40da93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40da94:	xchg   BYTE PTR [edx],bh
  40da96:	push   0xdbb52941
  40da9b:	(bad)
  40daa0:	push   es
  40daa1:	ret    
  40daa2:	add    DWORD PTR [ebx],edx
  40daa4:	pop    eax
  40daa5:	repz jmp 0x13cf:0xbd2de3c1
  40daad:	mov    ebp,0x25cfeb38
  40dab2:	mov    esi,0x5888800c
  40dab7:	lds    ebx,FWORD PTR [ecx]
  40dab9:	shr    DWORD PTR [ecx+0x29],1
  40dabc:	rol    DWORD PTR [eax+0x26a5b34a],cl
  40dac2:	clc    
  40dac3:	in     al,0xc
  40dac5:	or     eax,DWORD PTR [ecx-0x129246dc]
  40dacb:	call   0x54f2:0x165d3b6
  40dad2:	jne    0x40da66
  40dad4:	xor    BYTE PTR [ebp+0x3a],bl
  40dad7:	xor    dl,ch
  40dad9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dada:	jg     0x40da6e
  40dadc:	cmp    al,0x89
  40dade:	mov    ds:0xe0a98d76,eax
  40dae3:	sub    ebp,DWORD PTR [ebx]
  40dae5:	sbb    dh,BYTE PTR [ebx]
  40dae7:	fsubr  QWORD PTR [ecx+0x56a61e9c]
  40daed:	daa    
  40daee:	and    BYTE PTR [edi+0x61],ah
  40daf1:	out    0x89,eax
  40daf3:	fld    QWORD PTR [esi]
  40daf5:	in     al,0x95
  40daf7:	in     al,0x56
  40daf9:	jmp    0x52a11aa9
  40dafe:	sub    DWORD PTR [edi-0x5e144222],0xffffffcf
  40db05:	cmp    esp,ecx
  40db07:	jns    0x40daf9
  40db09:	fisttp WORD PTR [ebp-0x60]
  40db0c:	fcomp  QWORD PTR [edi]
  40db0e:	mov    ds:0x8563457f,eax
  40db13:	add    dl,BYTE PTR [esi-0x7d]
  40db16:	out    dx,al
  40db17:	int    0x3
  40db19:	mov    esp,0x51903853
  40db1e:	repz addr16 popf 
  40db21:	stos   BYTE PTR es:[edi],al
  40db22:	inc    esi
  40db23:	das    
  40db24:	test   eax,0x623cab60
  40db29:	cli    
  40db2a:	in     eax,0x5b
  40db2c:	push   edx
  40db2d:	jns    0x40db66
  40db2f:	and    ch,BYTE PTR [edi+edx*1]
  40db32:	xchg   edx,eax
  40db33:	push   esi
  40db34:	loop   0x40dafb
  40db36:	sahf   
  40db37:	dec    ecx
  40db38:	pop    es
  40db39:	dec    BYTE PTR [eax-0x40]
  40db3c:	mov    ds,esp
  40db3e:	cmc    
  40db3f:	ss retf 
  40db41:	ret    0xa8ad
  40db44:	ret    
  40db45:	stos   DWORD PTR es:[edi],eax
  40db46:	or     ebx,DWORD PTR [eax+edi*8-0x53]
  40db4a:	pop    ebp
  40db4b:	outs   dx,DWORD PTR ds:[esi]
  40db4c:	cmp    ebx,esp
  40db4e:	and    al,0xed
  40db50:	ss and al,0x77
  40db53:	fbld   TBYTE PTR [esi+esi*8-0x5527753f]
  40db5a:	mov    eax,ds:0x1b1af4da
  40db5f:	dec    esp
  40db60:	sbb    ebx,edx
  40db62:	mov    dh,al
  40db64:	sub    BYTE PTR [edx+0x9],bh
  40db67:	retf   0x1679
  40db6a:	inc    esi
  40db6b:	test   eax,0xee05d45b
  40db70:	jbe    0x40dbd6
  40db72:	out    dx,al
  40db73:	popf   
  40db74:	mov    al,ds:0x48b7d33
  40db79:	mov    ds,WORD PTR [ebp+eiz*4+0x3c153e]
  40db80:	in     eax,0xb3
  40db82:	sub    ch,ah
  40db84:	out    0xf3,eax
  40db86:	add    al,0x60
  40db88:	push   cs
  40db89:	sub    DWORD PTR [ecx+0xa813242],edx
  40db8f:	adc    bh,BYTE PTR [ebx+0x7793c19e]
  40db95:	push   esi
  40db96:	mov    ecx,0xcb498661
  40db9b:	jns    0x40dbe6
  40db9d:	sti    
  40db9e:	pusha  
  40db9f:	push   edi
  40dba0:	dec    esi
  40dba1:	add    DWORD PTR [esi-0x2ea0b344],eax
  40dba7:	cwde   
  40dba8:	js     0x40dc29
  40dbaa:	outs   dx,BYTE PTR ds:[esi]
  40dbab:	jmp    0x40db4d
  40dbad:	retf   
  40dbae:	psubw  mm4,QWORD PTR [edi+0x71a0a77f]
  40dbb5:	es loope 0x40dbd6
  40dbb8:	cld    
  40dbb9:	arpl   WORD PTR [edx+0x6f],ax
  40dbbc:	jl     0x40db62
  40dbbe:	icebp  
  40dbbf:	mov    bh,BYTE PTR [edi-0x644e0bfb]
  40dbc5:	push   ecx
  40dbc6:	xor    ah,BYTE PTR ds:0x6cde539
  40dbcc:	hlt    
  40dbcd:	jbe    0x40dc41
  40dbcf:	icebp  
  40dbd0:	push   ebp
  40dbd1:	jl     0x40dbb6
  40dbd3:	leave  
  40dbd4:	sub    eax,0xe17a2895
  40dbd9:	ins    DWORD PTR es:[edi],dx
  40dbda:	popf   
  40dbdb:	mov    bh,0x89
  40dbdd:	pop    edi
  40dbde:	xchg   DWORD PTR [edx+eax*4-0x683e05c4],esi
  40dbe5:	call   0x281e:0xab908d99
  40dbec:	fiadd  WORD PTR [ebp+0x34a39b86]
  40dbf2:	cld    
  40dbf3:	addr16 out dx,eax
  40dbf5:	xchg   ebx,eax
  40dbf6:	xor    ebp,DWORD PTR [eax+0x662ae711]
  40dbfc:	inc    edi
  40dbfd:	mov    bh,0xac
  40dbff:	or     al,0x7a
  40dc01:	dec    ebx
  40dc02:	pop    ebx
  40dc03:	or     DWORD PTR [edi+0x1d],edi
  40dc06:	test   BYTE PTR [edx+0x7b],ch
  40dc09:	shl    DWORD PTR [ebx-0x5fec6313],1
  40dc0f:	mov    dl,0xad
  40dc12:	dec    esi
  40dc13:	jne    0x40dc2e
  40dc15:	dec    eax
  40dc16:	stc    
  40dc17:	clc    
  40dc18:	lods   al,BYTE PTR ds:[esi]
  40dc19:	aad    0xe9
  40dc1b:	int3   
  40dc1c:	sub    ah,BYTE PTR [esi+0x73]
  40dc1f:	ds push ss
  40dc21:	xor    cl,bh
  40dc23:	pop    ecx
  40dc24:	ja     0x40dc5e
  40dc26:	in     al,dx
  40dc27:	repz mov bl,0xd8
  40dc2a:	imul   eax,DWORD PTR [ecx+ecx*8],0x811552dc
  40dc31:	hlt    
  40dc32:	fistp  QWORD PTR [edi-0x5a]
  40dc35:	xchg   DWORD PTR [eax],ecx
  40dc37:	xchg   ebp,eax
  40dc38:	inc    ebp
  40dc39:	imul   ebx,ecx,0xffffff83
  40dc3c:	adc    DWORD PTR [eax],esi
  40dc3e:	das    
  40dc3f:	push   ss
  40dc40:	loopne 0x40dc87
  40dc42:	call   0x5d4b:0xc2d8e73d
  40dc49:	inc    ecx
  40dc4a:	lahf   
  40dc4b:	(bad)
  40dc4f:	test   eax,0x6c81a7d8
  40dc54:	pop    edi
  40dc55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dc56:	dec    esi
  40dc57:	(bad)  
  40dc58:	inc    edi
  40dc59:	jp     0x40dc5d
  40dc5b:	rcr    eax,0x9b
  40dc5e:	pop    eax
  40dc5f:	xchg   ebp,eax
  40dc60:	mov    DWORD PTR [ebx],eax
  40dc62:	loopne 0x40dc33
  40dc64:	scas   eax,DWORD PTR es:[edi]
  40dc65:	sbb    eax,0xbc83ccc5
  40dc6a:	sub    ebx,0xfffffff2
  40dc6d:	call   0x624a:0x34848513
  40dc74:	in     al,dx
  40dc75:	std    
  40dc76:	aad    0x9d
  40dc78:	(bad)  
  40dc79:	das    
  40dc7a:	idiv   BYTE PTR [esi-0x60ffd836]
  40dc80:	and    ch,BYTE PTR [esi-0x20]
  40dc83:	xchg   ebx,eax
  40dc84:	retf   
  40dc85:	xchg   edx,eax
  40dc86:	push   ebp
  40dc87:	dec    ebx
  40dc88:	add    DWORD PTR [eax-0x5765b097],0x59db620e
  40dc92:	sub    al,0x99
  40dc94:	shl    BYTE PTR [edx],1
  40dc96:	clc    
  40dc97:	ins    BYTE PTR es:[edi],dx
  40dc98:	sub    DWORD PTR [edi-0x7be72f62],0xae7b3576
  40dca2:	outs   dx,DWORD PTR ds:[esi]
  40dca3:	cmp    BYTE PTR [esi],bh
  40dca5:	sti    
  40dca6:	xlat   BYTE PTR ds:[ebx]
  40dca7:	sbb    BYTE PTR [edi+ecx*8-0x72],0x9f
  40dcac:	cmp    BYTE PTR [ecx],dh
  40dcae:	repnz cmp DWORD PTR [ecx-0x2a],ecx
  40dcb2:	pop    edx
  40dcb3:	xor    bh,BYTE PTR [ebx]
  40dcb5:	call   0x80853cd0
  40dcba:	push   esi
  40dcbb:	enter  0x3668,0x19
  40dcbf:	pop    ecx
  40dcc0:	inc    ecx
  40dcc1:	mov    BYTE PTR [ebp-0x24],dl
  40dcc4:	jbe    0x40dc4d
  40dcc6:	dec    ebp
  40dcc7:	inc    esp
  40dcc8:	dec    esp
  40dcc9:	mov    dh,0x2c
  40dccb:	push   ecx
  40dccc:	push   eax
  40dccd:	sbb    dl,0x17
  40dcd0:	rcr    dl,cl
  40dcd2:	and    al,al
  40dcd4:	rol    BYTE PTR [ebp+0x73],1
  40dcd7:	mov    cl,0x11
  40dcd9:	arpl   WORD PTR [ecx+0xa4ac652],si
  40dcdf:	lea    ebp,[edx-0x4ff8f52e]
  40dce5:	fmul   DWORD PTR [esi]
  40dce7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dce8:	(bad)  
  40dce9:	cli    
  40dcea:	jl     0x40dd0c
  40dcec:	setno  BYTE PTR [ebx]
  40dcef:	mov    ds:0xd44c36bd,eax
  40dcf4:	jb     0x40dd69
  40dcf6:	ret    
  40dcf7:	and    bh,bh
  40dcf9:	mov    ecx,0xb90414eb
  40dcfe:	aad    0x55
  40dd00:	repnz pop eax
  40dd02:	inc    eax
  40dd03:	int    0xf5
  40dd05:	ja     0x40dc8b
  40dd07:	rdtsc  
  40dd09:	jno    0x40dcb8
  40dd0b:	xchg   ebx,eax
  40dd0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dd0d:	add    al,0xed
  40dd0f:	and    DWORD PTR ds:0x17ed92dc,eax
  40dd15:	and    dh,BYTE PTR ds:0x565728cc
  40dd1b:	(bad)  
  40dd1c:	in     eax,0x17
  40dd1e:	add    ecx,DWORD PTR [edx+0x198446a8]
  40dd24:	sub    eax,0x325f3c60
  40dd29:	iret   
  40dd2a:	sub    al,0xa
  40dd2c:	or     DWORD PTR [ebp-0x556bd73d],esi
  40dd32:	adc    eax,0x72f79d2
  40dd37:	and    ebx,DWORD PTR [esp+edx*2-0x1e0dbf7b]
  40dd3e:	sti    
  40dd3f:	and    ah,dh
  40dd41:	push   edi
  40dd42:	int    0x54
  40dd44:	push   esi
  40dd45:	fnsave [ecx]
  40dd47:	jnp    0x40dd30
  40dd49:	stos   BYTE PTR es:[edi],al
  40dd4a:	rcr    DWORD PTR [ebx-0x11],1
  40dd4d:	mov    DWORD PTR [esi*1+0x6a9b3403],esp
  40dd54:	in     eax,0xbd
  40dd56:	call   0xfa8e8b3d
  40dd5b:	test   edx,edi
  40dd5d:	jecxz  0x40ddd4
  40dd5f:	ins    DWORD PTR es:[edi],dx
  40dd60:	mov    WORD PTR [edx],fs
  40dd62:	sub    al,0xe3
  40dd64:	(bad)  
  40dd65:	out    dx,eax
  40dd66:	xchg   edx,eax
  40dd67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dd68:	dec    edi
  40dd69:	dec    ebx
  40dd6a:	(bad)  
  40dd6c:	mov    bh,0xb9
  40dd6e:	cmc    
  40dd6f:	bound  eax,QWORD PTR [ebx+0x73069bfc]
  40dd75:	sar    BYTE PTR [eax-0x3c],cl
  40dd78:	inc    ebp
  40dd79:	push   ss
  40dd7a:	test   al,0xd3
  40dd7c:	jmp    0x6a612fa9
  40dd81:	push   ecx
  40dd82:	jmp    DWORD PTR [ecx+eiz*8+0x3214aa7b]
  40dd89:	dec    eax
  40dd8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dd8b:	leave  
  40dd8c:	retf   
  40dd8d:	shr    DWORD PTR [edx-0x52df5c7],0x6c
  40dd94:	gs mov ah,0x3a
  40dd97:	mov    cs,WORD PTR [edx-0x1d]
  40dd9a:	or     al,0x32
  40dd9c:	in     eax,dx
  40dd9d:	pop    esp
  40dd9e:	fcom   DWORD PTR ds:[esi]
  40dda1:	cld    
  40dda2:	cmp    BYTE PTR [esi-0x70],cl
  40dda5:	fwait
  40dda6:	xchg   edx,eax
  40dda7:	cmc    
  40dda8:	push   eax
  40dda9:	and    BYTE PTR [esi],cl
  40ddab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ddac:	test   DWORD PTR [esi],ebp
  40ddae:	sbb    al,0xa2
  40ddb0:	in     eax,dx
  40ddb1:	xor    ebp,ebx
  40ddb3:	xor    dh,cl
  40ddb5:	test   BYTE PTR [edi-0x3],bh
  40ddb8:	dec    ecx
  40ddb9:	imul   esi,DWORD PTR [ebx+0x596c7cc7],0x26
  40ddc0:	and    eax,0x603657ce
  40ddc5:	loop   0x40de01
  40ddc7:	jne    0x40de24
  40ddc9:	fwait
  40ddca:	bound  edx,QWORD PTR [edx+0x0]
  40ddcd:	aam    0x35
  40ddcf:	lds    ebx,FWORD PTR ds:0xf23158ca
  40ddd5:	imul   edi,DWORD PTR [bx+si+0xe48],0xffffffc3
  40dddb:	mov    ah,0x5b
  40dddd:	in     eax,dx
  40ddde:	inc    ebp
  40dddf:	in     al,0x51
  40dde1:	xchg   ebp,eax
  40dde2:	fnstcw WORD PTR [esi+0x52a99832]
  40dde8:	sbb    ebx,DWORD PTR [ebp+0x23]
  40ddeb:	das    
  40ddec:	adc    al,0xb
  40ddee:	das    
  40ddef:	dec    edi
  40ddf0:	inc    ebp
  40ddf1:	xchg   DWORD PTR [esi-0x76],edx
  40ddf4:	ret    0x9f4d
  40ddf7:	push   esp
  40ddf8:	fcomp  st(3)
  40ddfa:	popf   
  40ddfb:	pop    eax
  40ddfc:	push   ecx
  40ddfd:	push   esi
  40ddfe:	jo     0x40de24
  40de00:	icebp  
  40de01:	cmp    eax,0xc2136b3c
  40de06:	aaa    
  40de07:	das    
  40de08:	add    DWORD PTR [ecx],0x22
  40de0b:	outs   dx,DWORD PTR ds:[esi]
  40de0c:	stos   DWORD PTR es:[edi],eax
  40de0d:	retw   0x5808
  40de11:	pop    ax
  40de13:	pop    ecx
  40de14:	not    DWORD PTR [ebp-0x4176a06f]
  40de1a:	inc    edi
  40de1b:	aaa    
  40de1c:	dec    edx
  40de1d:	push   esp
  40de1e:	shr    BYTE PTR [edx-0x731e0791],0x5f
  40de25:	mov    ?,edi
  40de27:	and    al,0x62
  40de29:	into   
  40de2a:	mov    ch,0x38
  40de2c:	mov    DWORD PTR [eax-0x43],eax
  40de2f:	adc    ebp,0x62e4b1b6
  40de35:	outs   dx,DWORD PTR ds:[esi]
  40de36:	leave  
  40de37:	gs push edi
  40de39:	dec    eax
  40de3a:	dec    eax
  40de3b:	cmp    eax,0x9a7a68e9
  40de40:	mov    esi,0xe09557dc
  40de45:	push   edi
  40de46:	sbb    edx,DWORD PTR [edi-0x2b7e6489]
  40de4c:	add    eax,0x522b9b8a
  40de51:	imul   esp,ebx,0x298c07b8
  40de57:	jmp    0x40de1e
  40de59:	push   ebp
  40de5a:	imul   BYTE PTR [edi]
  40de5c:	xchg   ecx,eax
  40de5d:	mov    edx,0x474bb71c
  40de62:	xchg   edx,eax
  40de63:	popa   
  40de64:	xor    bl,BYTE PTR [esi+0x4e4d60db]
  40de6a:	push   esp
  40de6b:	add    eax,0xb00442da
  40de70:	push   ebx
  40de71:	jg     0x40de0d
  40de73:	loop   0x40decf
  40de75:	in     al,dx
  40de76:	xchg   ebx,eax
  40de77:	ffree  st(2)
  40de79:	pop    ebp
  40de7a:	out    0x33,al
  40de7c:	in     al,0xc8
  40de7e:	xchg   edi,eax
  40de7f:	or     dl,ch
  40de81:	and    cl,BYTE PTR [ebx]
  40de83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40de84:	push   eax
  40de85:	sbb    eax,DWORD PTR ds:0xe346aa6
  40de8b:	add    bl,BYTE PTR [edx-0x8]
  40de8e:	or     eax,0xfe77bda5
  40de93:	sbb    eax,0x404e033b
  40de98:	xchg   ebx,eax
  40de99:	(bad)  
  40de9a:	jo     0x40de26
  40de9c:	jnp    0x40de2c
  40de9e:	or     cl,BYTE PTR [ecx-0x59]
  40dea1:	push   ebp
  40dea2:	mov    ss,WORD PTR [edx-0x63]
  40dea5:	fdivr  QWORD PTR [ecx+0x768439a9]
  40deab:	mov    ecx,0x7b9e20fe
  40deb0:	sbb    ebp,DWORD PTR [esi+0x4e]
  40deb3:	sbb    dl,al
  40deb5:	sbb    edi,DWORD PTR [esi-0x7f]
  40deb8:	iret   
  40deb9:	sub    eax,0xd408250
  40debe:	inc    eax
  40debf:	clc    
  40dec0:	inc    edi
  40dec1:	jmp    0x49c06ad0
  40dec6:	adc    ch,BYTE PTR [ebx+0x7c]
  40dec9:	scas   al,BYTE PTR es:[edi]
  40deca:	test   DWORD PTR [ebp+0x7697e0c0],ecx
  40ded0:	and    esi,DWORD PTR [eax-0x7affb08b]
  40ded6:	shr    DWORD PTR [esi],1
  40ded8:	enter  0x56f6,0xa8
  40dedc:	or     eax,0xcf0e6eab
  40dee1:	push   edx
  40dee2:	dec    esi
  40dee3:	mov    WORD PTR [ebp+edx*4-0x2cd57386],gs
  40deea:	cmp    al,0x60
  40deec:	in     eax,dx
  40deed:	and    esi,0xb0e4127c
  40def3:	dec    eax
  40def4:	or     DWORD PTR [edx-0x61],esi
  40def7:	and    eax,0xee9dd56
  40defc:	adc    eax,DWORD PTR [eax+0x48]
  40deff:	lock inc ecx
  40df01:	call   0xf06f:0x5b5bd160
  40df08:	sbb    ebp,DWORD PTR [ecx+0x662a2172]
  40df0e:	jb     0x40df67
  40df10:	mov    al,cs:0xdf6546f4
  40df16:	ret    
  40df17:	dec    ebx
  40df18:	test   eax,0xb2fa7e1a
  40df1d:	mul    DWORD PTR [ebx+0xe]
  40df20:	clc    
  40df21:	inc    edx
  40df22:	(bad)  
  40df23:	in     eax,0x74
  40df25:	mov    cl,0x2b
  40df27:	pop    ebp
  40df28:	retf   0x9fd5
  40df2b:	stos   DWORD PTR es:[edi],eax
  40df2c:	out    0x3c,eax
  40df2e:	sbb    esp,DWORD PTR [ebx+0x5a9202f7]
  40df34:	mov    esi,0xe709c886
  40df39:	imul   ebp,DWORD PTR ds:0xe06a0dec,0xffffffba
  40df40:	sbb    eax,0x7ffc0131
  40df45:	sbb    DWORD PTR ds:[edi+0x1fdf2534],0x3e198cac
  40df50:	loopne 0x40df3c
  40df52:	and    eax,0x3c12ea89
  40df57:	ret    
  40df58:	not    DWORD PTR [ecx+0x7140f920]
  40df5e:	jb     0x40df9c
  40df60:	mov    eax,gs:0xb576940c
  40df66:	add    al,0xbc
  40df68:	nop
  40df69:	retf   0xb0eb
  40df6c:	jge    0x40df76
  40df6e:	shr    DWORD PTR [ecx-0x19ed5305],1
  40df74:	jmp    0x4ce:0x13ddc6a8
  40df7b:	(bad)  
  40df7c:	imul   esp,DWORD PTR [ebp+0x28],0xe134304d
  40df83:	aas    
  40df84:	out    dx,eax
  40df85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df86:	das    
  40df87:	icebp  
  40df88:	mov    eax,ds:0xfe33243a
  40df8d:	std    
  40df8e:	es jmp 0x40df3c
  40df91:	add    al,0x80
  40df93:	and    DWORD PTR [edi+0x61],0xa5539530
  40df9a:	add    al,0x42
  40df9c:	inc    ebx
  40df9d:	call   0x87fc44ca
  40dfa2:	push   edi
  40dfa3:	mov    eax,0x3065f027
  40dfa8:	jge    0x40df61
  40dfaa:	inc    ebp
  40dfab:	xchg   ebp,eax
  40dfac:	mov    bl,0x3
  40dfae:	or     ch,BYTE PTR [edx+0x7a3bb39c]
  40dfb4:	(bad)  
  40dfb5:	mov    dh,0xf8
  40dfb7:	loop   0x40dfd5
  40dfb9:	test   al,0xed
  40dfbb:	jmp    0x805eb945
  40dfc0:	je     0x40df43
  40dfc2:	mov    eax,ds:0x21562736
  40dfc7:	push   ecx
  40dfc8:	xchg   ebp,eax
  40dfc9:	inc    ecx
  40dfca:	ret    
  40dfcb:	mov    esi,0x98a8eaaf
  40dfd0:	lea    ebp,[ebp-0x4c9e2904]
  40dfd6:	(bad)  
  40dfd8:	and    al,0xd5
  40dfda:	mov    ebx,0x28118163
  40dfdf:	xchg   edx,eax
  40dfe0:	in     al,dx
  40dfe1:	imul   edx,DWORD PTR [eax+0x6157b29a],0xffffffce
  40dfe8:	jg     0x40e026
  40dfea:	push   ecx
  40dfeb:	mov    DWORD PTR [ebx+0x7db6f84a],eax
  40dff1:	test   DWORD PTR [edi-0x24],0x1ba2c749
  40dff8:	cwde   
  40dff9:	ins    DWORD PTR es:[edi],dx
  40dffa:	cld    
  40dffb:	mov    edx,0x276c4533
  40e000:	mov    ebp,0xdff6a128
  40e005:	ja     0x40e063
  40e007:	out    dx,eax
  40e008:	push   es
  40e009:	lds    eax,FWORD PTR [ecx+0x5e9f561c]
  40e00f:	stc    
  40e010:	stos   BYTE PTR es:[edi],al
  40e011:	fs icebp 
  40e013:	sbb    cl,BYTE PTR [edi-0x38650d9f]
  40e019:	sbb    eax,DWORD PTR [ebp+0x6e]
  40e01c:	mov    ebx,0xa8267bf6
  40e021:	das    
  40e022:	aam    0x7b
  40e024:	push   ecx
  40e025:	xchg   edi,eax
  40e026:	adc    eax,0x46d3b2f2
  40e02b:	inc    esp
  40e02c:	mov    esp,0x60e68ec
  40e031:	mov    edi,0xdee73024
  40e036:	ins    DWORD PTR es:[edi],dx
  40e037:	pop    esp
  40e038:	xchg   BYTE PTR [edx+0x6d],bh
  40e03b:	rcl    BYTE PTR [ebp+0x3c5ab8d1],1
  40e041:	pop    esi
  40e042:	adc    ch,0xcd
  40e045:	adc    eax,0x9eab0451
  40e04a:	sahf   
  40e04b:	leave  
  40e04c:	call   0x14be4578
  40e051:	popa   
  40e052:	in     al,dx
  40e053:	mov    WORD PTR [edx+0xb],?
  40e056:	push   ecx
  40e057:	test   BYTE PTR [ecx],ah
  40e059:	pop    ebp
  40e05a:	xchg   edi,eax
  40e05b:	mov    edx,0x356b9acd
  40e060:	xchg   ebx,eax
  40e061:	push   ebp
  40e062:	pop    ebp
  40e063:	or     al,0x13
  40e065:	adc    DWORD PTR [ebx],ebx
  40e067:	push   0x53e93ac0
  40e06c:	inc    ebp
  40e06d:	mov    ch,0x74
  40e06f:	pop    eax
  40e070:	mov    bl,BYTE PTR [esi+eax*2-0x44e5584]
  40e077:	(bad)  
  40e078:	xlat   BYTE PTR ds:[ebx]
  40e079:	clc    
  40e07a:	xchg   esi,eax
  40e07b:	dec    edx
  40e07c:	fsubr  DWORD PTR [edi]
  40e07e:	fisub  DWORD PTR ds:0x1a4a208c
  40e084:	mov    ah,0x95
  40e086:	push   ss
  40e087:	mov    edi,0xd10441dd
  40e08c:	data16 into 
  40e08e:	mov    al,0x80
  40e090:	ins    DWORD PTR es:[edi],dx
  40e091:	mov    DWORD PTR [ecx+0x2e4bde37],ebx
  40e097:	(bad)  
  40e098:	mov    ch,0x70
  40e09a:	cdq    
  40e09b:	lds    ebx,FWORD PTR [esi+0x15caaaef]
  40e0a1:	sub    bh,ch
  40e0a3:	jecxz  0x40e0e9
  40e0a5:	xor    bl,BYTE PTR [ebx-0x2e3b2450]
  40e0ab:	cmp    eax,DWORD PTR [edi]
  40e0ad:	xchg   BYTE PTR [eax+0x28],cl
  40e0b0:	clc    
  40e0b1:	xchg   ebx,eax
  40e0b2:	mov    cl,0x67
  40e0b4:	sti    
  40e0b5:	jge    0x40e116
  40e0b7:	xchg   edi,eax
  40e0b8:	fild   WORD PTR [edx+0x5b]
  40e0bb:	inc    esi
  40e0bc:	or     al,0x60
  40e0be:	push   esp
  40e0bf:	(bad)  
  40e0c0:	je     0x40e074
  40e0c2:	ins    BYTE PTR es:[edi],dx
  40e0c3:	out    0xa9,eax
  40e0c5:	pop    ds
  40e0c6:	loopne 0x40e07e
  40e0c8:	xor    BYTE PTR [ecx+0x49],ch
  40e0cb:	(bad)  
  40e0cc:	jmp    0x40e117
  40e0ce:	jp     0x40e06c
  40e0d0:	inc    eax
  40e0d1:	jo     0x40e0ac
  40e0d3:	push   ecx
  40e0d4:	add    DWORD PTR [ebp+0x79],0xffffffd0
  40e0d8:	mov    ss,WORD PTR [edi+0x66]
  40e0db:	adc    eax,0x358bf39d
  40e0e0:	in     eax,dx
  40e0e1:	or     ch,BYTE PTR [esi]
  40e0e3:	jmp    0x6b0:0x100cf7c3
  40e0ea:	dec    edx
  40e0eb:	ret    0x95a8
  40e0ee:	xor    DWORD PTR [ebx],esi
  40e0f0:	push   0xffffffef
  40e0f2:	out    0x7c,al
  40e0f4:	xchg   ecx,eax
  40e0f5:	pop    es
  40e0f6:	mov    ebx,DWORD PTR [edx*4-0x4133b08f]
  40e0fd:	xchg   edi,eax
  40e0fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e0ff:	inc    ebp
  40e100:	cmp    edx,esi
  40e102:	cwde   
  40e103:	out    0x2d,al
  40e105:	xlat   BYTE PTR ds:[ebx]
  40e106:	inc    ebp
  40e107:	fcom   QWORD PTR [eax-0x930299f]
  40e10d:	in     eax,0xb1
  40e10f:	test   cl,ah
  40e111:	dec    eax
  40e112:	push   es
  40e113:	call   0xbb56735d
  40e118:	push   edi
  40e119:	xor    ebx,DWORD PTR [eax-0xf]
  40e11c:	in     al,0x90
  40e11e:	pop    esp
  40e11f:	aad    0x24
  40e121:	mov    edx,0x46aead7a
  40e126:	and    edx,DWORD PTR [ebp-0x14]
  40e129:	mov    ch,0x6d
  40e12b:	xor    bl,BYTE PTR es:[ebx+0x268e4a74]
  40e132:	pop    es
  40e133:	imul   ebp,DWORD PTR [ecx-0x34],0x614f6a16
  40e13a:	and    cl,BYTE PTR [ecx-0x54]
  40e13d:	inc    edx
  40e13e:	mov    ecx,0xdf310106
  40e143:	mov    DWORD PTR [esi-0x51],ebx
  40e146:	add    eax,0x78c60ad9
  40e14b:	outs   dx,DWORD PTR ds:[esi]
  40e14c:	push   ebp
  40e14d:	dec    esi
  40e14e:	sub    ecx,edx
  40e150:	fwait
  40e151:	sbb    BYTE PTR [edx+0x5c460561],bh
  40e157:	push   cs
  40e158:	xor    BYTE PTR [edx-0x66708297],0x91
  40e15f:	mov    ebp,0xc39bf930
  40e164:	retf   
  40e165:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e166:	inc    ecx
  40e167:	jge    0x40e118
  40e169:	add    eax,0xec803c83
  40e16e:	mov    edi,DWORD PTR [esi+0x58c556da]
  40e174:	shl    DWORD PTR [edi-0x55db463d],1
  40e17a:	pop    ecx
  40e17b:	xor    DWORD PTR [ebp-0x1f],0x5db282db
  40e182:	gs push ecx
  40e184:	(bad)  
  40e186:	cli    
  40e187:	inc    ebp
  40e188:	inc    edx
  40e189:	sbb    DWORD PTR [esi+0x3b7436be],0x4a
  40e190:	mov    ch,0x8
  40e192:	stc    
  40e193:	iret   
  40e194:	pop    esi
  40e195:	out    dx,eax
  40e196:	es ja  0x40e180
  40e199:	arpl   WORD PTR [edi],bx
  40e19b:	in     eax,0xde
  40e19d:	packuswb mm7,mm4
  40e1a0:	sub    eax,0x768895e8
  40e1a5:	add    DWORD PTR [esp+esi*4-0x62371053],edx
  40e1ac:	mov    cl,0x28
  40e1ae:	mov    bl,al
  40e1b0:	pop    edx
  40e1b1:	addr16 pop ds
  40e1b3:	cmp    eax,0x95925f44
  40e1b8:	fs sub ecx,edi
  40e1bb:	cmp    ebx,eax
  40e1bd:	dec    ebp
  40e1be:	dec    esp
  40e1bf:	ins    BYTE PTR es:[edi],dx
  40e1c0:	lea    ebx,[ebx-0x48]
  40e1c3:	pop    ebp
  40e1c4:	xchg   al,ah
  40e1c6:	push   ss
  40e1c7:	and    al,0x2a
  40e1c9:	push   edi
  40e1ca:	cmp    eax,0x8a5d1758
  40e1cf:	jmp    0xff5d966a
  40e1d4:	popf   
  40e1d5:	xchg   esi,eax
  40e1d6:	sub    eax,DWORD PTR [eax+0x6b67c769]
  40e1dc:	(bad)
  40e1df:	mov    edi,0xb5f15730
  40e1e4:	and    BYTE PTR [ebx-0x6c68f374],ch
  40e1ea:	fwait
  40e1eb:	or     BYTE PTR [edi+0x67],ch
  40e1ee:	and    dh,bh
  40e1f0:	retf   0xf1e1
  40e1f3:	xlat   BYTE PTR ds:[ebx]
  40e1f4:	sub    eax,0x8a149b51
  40e1f9:	sbb    BYTE PTR [ebx],dl
  40e1fb:	mov    ebp,0x6af60095
  40e200:	jbe    0x40e277
  40e202:	ffreep st(0)
  40e204:	imul   edi,DWORD PTR [ebx-0x3a],0x60
  40e208:	mov    cl,0x1f
  40e20a:	push   edi
  40e20b:	shr    ebx,1
  40e20d:	jge    0x40e220
  40e20f:	push   esp
  40e210:	sub    ch,BYTE PTR [edi]
  40e212:	(bad)  
  40e213:	bound  esp,QWORD PTR [esi+esi*2-0x17]
  40e217:	test   BYTE PTR [edi-0x52a889e4],bh
  40e21d:	out    dx,eax
  40e21e:	sbb    al,0x45
  40e220:	outs   dx,BYTE PTR ds:[esi]
  40e221:	test   eax,0xbedf8964
  40e226:	inc    eax
  40e227:	test   dl,cl
  40e229:	mov    edx,?
  40e22b:	daa    
  40e22c:	xor    ebp,DWORD PTR [edi]
  40e22e:	cmp    edi,DWORD PTR [esi-0x16e325c2]
  40e234:	xor    BYTE PTR [esp+edi*4],dh
  40e237:	cmp    BYTE PTR [esi+0x2bb5bf61],dh
  40e23d:	jp     0x40e1cd
  40e23f:	enter  0x9a61,0x66
  40e243:	jbe    0x40e2c1
  40e245:	mov    bl,0x0
  40e247:	ja     0x40e239
  40e249:	push   eax
  40e24a:	(bad)  
  40e24b:	cmpxchg DWORD PTR [eax-0x711ad67a],ebp
  40e252:	mov    al,ds:0x5d0d9e00
  40e257:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e258:	rep lods eax,DWORD PTR fs:[esi]
  40e25b:	pop    ecx
  40e25c:	ret    
  40e25d:	fwait
  40e25e:	out    dx,al
  40e25f:	arpl   cx,dx
  40e261:	xchg   edx,eax
  40e262:	push   0xa0d97799
  40e267:	popf   
  40e268:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e269:	cdq    
  40e26a:	mov    edx,0x27fba433
  40e26f:	jecxz  0x40e299
  40e271:	ret    
  40e272:	lea    ecx,[eax-0x3e1697a1]
  40e278:	dec    edi
  40e279:	and    bl,BYTE PTR [edi]
  40e27b:	add    eax,0xaa1c7fbe
  40e280:	or     dh,ch
  40e282:	adc    eax,0x8959afe
  40e287:	xor    BYTE PTR [esi+0x4f],al
  40e28a:	push   edx
  40e28b:	dec    edx
  40e28c:	outs   dx,BYTE PTR ds:[esi]
  40e28d:	cwde   
  40e28e:	inc    ebx
  40e28f:	lods   eax,DWORD PTR ds:[esi]
  40e290:	mov    al,ds:0x38183dff
  40e295:	push   cx
  40e297:	aam    0xea
  40e299:	mov    al,ds:0xe8fc6712
  40e29e:	repz jmp 0x40e2fd
  40e2a1:	retf   0xcb70
  40e2a4:	or     DWORD PTR [ebp-0x47],esi
  40e2a7:	push   DWORD PTR [edi+0x2cdec111]
  40e2ad:	repz mov edx,0xf3f8da01
  40e2b3:	cmc    
  40e2b4:	add    edx,DWORD PTR ds:0x6b54f2d
  40e2ba:	dec    esp
  40e2bb:	in     eax,dx
  40e2bc:	xor    dh,bh
  40e2be:	pop    edi
  40e2bf:	jl     0x40e290
  40e2c1:	cmp    eax,0x551f385c
  40e2c6:	inc    edx
  40e2c7:	mov    ch,0xc1
  40e2c9:	nop
  40e2ca:	or     BYTE PTR [ecx+0x65],0x62
  40e2ce:	and    al,0x72
  40e2d0:	shl    DWORD PTR [edi],1
  40e2d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e2d3:	cmp    dh,cl
  40e2d5:	jg     0x40e28e
  40e2d7:	ins    DWORD PTR es:[edi],dx
  40e2d8:	sub    BYTE PTR [eax+0x4f64368e],bh
  40e2de:	dec    edi
  40e2df:	fmul   QWORD PTR [ecx+0x3cc1a6dd]
  40e2e5:	pop    edi
  40e2e6:	fadd   st(4),st
  40e2e8:	and    DWORD PTR [eax],edi
  40e2ea:	cmc    
  40e2eb:	sub    DWORD PTR ds:[ebx+0x62],ebx
  40e2ef:	lds    ebx,FWORD PTR [ebx+0x2c]
  40e2f2:	adc    al,0x6e
  40e2f4:	inc    ebx
  40e2f5:	xor    eax,ebp
  40e2f7:	dec    ebp
  40e2f8:	push   es
  40e2f9:	frstor fs:[esi+0x55f7ff66]
  40e300:	and    ebp,DWORD PTR [ebx-0x2b]
  40e303:	add    edi,edx
  40e305:	lea    edx,[ecx-0x48c79e28]
  40e30b:	xchg   ecx,esi
  40e30d:	je     0x40e2ab
  40e30f:	lea    edx,gs:[ebp-0x6d]
  40e313:	pop    ebp
  40e314:	xchg   ebx,eax
  40e315:	push   edi
  40e316:	pop    edi
  40e317:	pop    eax
  40e318:	enter  0xb0ae,0xae
  40e31c:	into   
  40e31d:	sbb    al,0x3b
  40e31f:	mov    al,ds:0x15dcaf98
  40e324:	rcl    DWORD PTR [ebx],0xb4
  40e327:	push   ebp
  40e328:	mov    ebp,0x81df1f02
  40e32d:	dec    esi
  40e32e:	fldpi  
  40e330:	push   edx
  40e331:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e332:	cmp    BYTE PTR [eax+0x213cd143],ah
  40e338:	lock outs dx,DWORD PTR ds:[esi]
  40e33a:	inc    ebp
  40e33b:	mov    ebp,0x17abe3bf
  40e340:	push   0x48
  40e342:	clc    
  40e343:	inc    ebx
  40e344:	and    bl,bh
  40e346:	push   eax
  40e347:	idiv   BYTE PTR [ebx-0x7c]
  40e34a:	inc    eax
  40e34b:	out    dx,al
  40e34c:	push   cs
  40e34d:	fstp   TBYTE PTR [edx]
  40e34f:	stc    
  40e350:	or     BYTE PTR [esi+0x17],dh
  40e353:	pusha  
  40e354:	ret    
  40e355:	sar    cl,0x33
  40e358:	out    0x8a,al
  40e35a:	push   esp
  40e35b:	push   cs
  40e35c:	bnd jne 0x40e2e9
  40e35f:	xchg   ebp,eax
  40e360:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e361:	push   esi
  40e363:	or     esi,ebx
  40e365:	call   0x8b6da77
  40e36a:	inc    esi
  40e36b:	ds mov al,0x13
  40e36e:	ror    al,0xe7
  40e371:	dec    ecx
  40e372:	cwde   
  40e373:	daa    
  40e374:	dec    edx
  40e375:	sub    cl,BYTE PTR ds:0x6be239e6
  40e37b:	imul   esi,DWORD PTR [eax+esi*2+0x7285c991],0x78879a7e
  40e386:	jb     0x40e353
  40e388:	xchg   BYTE PTR [ecx+0xf],bl
  40e38b:	test   al,0xe2
  40e38d:	mov    al,ds:0x3b940e3c
  40e392:	mov    edx,0x7fd3cdd5
  40e397:	sahf   
  40e398:	int    0x8f
  40e39a:	ror    BYTE PTR [edi+eiz*8+0x72],0x13
  40e39f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e3a0:	pop    es
  40e3a1:	fild   DWORD PTR [eax]
  40e3a3:	jl     0x40e411
  40e3a5:	lea    esi,[ebx-0x1]
  40e3a8:	jmp    0x7403:0x7e07cf4b
  40e3af:	mov    esi,0x1d893d90
  40e3b4:	and    al,0xf
  40e3b6:	add    eax,0xe8e6e537
  40e3bb:	pop    ecx
  40e3bc:	mov    esi,0x5356d7d
  40e3c1:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  40e3c3:	retf   
  40e3c4:	sbb    al,BYTE PTR [esp+edi*8+0x6e]
  40e3c8:	lock enter 0xc7a0,0xf4
  40e3cd:	mov    esi,0x6b31a192
  40e3d2:	cmp    bl,BYTE PTR ss:[eax]
  40e3d5:	add    al,0x42
  40e3d7:	adc    BYTE PTR [ebp-0x6b23225a],bl
  40e3dd:	or     edx,DWORD PTR [ebp+0xcc9f067]
  40e3e3:	add    ebx,ebp
  40e3e5:	je     0x40e36f
  40e3e7:	es mov edi,0xcf70e57f
  40e3ed:	loopne 0x40e408
  40e3ef:	dec    eax
  40e3f0:	or     al,0xb0
  40e3f2:	fdiv   st(2),st
  40e3f4:	push   cs
  40e3f5:	(bad)  
  40e3f6:	scas   al,BYTE PTR es:[edi]
  40e3f7:	es jne 0x40e45b
  40e3fa:	xchg   DWORD PTR [esi-0x4ea39460],esi
  40e400:	fistp  QWORD PTR [edi+0x63913ef9]
  40e406:	push   esp
  40e407:	jle    0x40e3ff
  40e409:	pusha  
  40e40a:	push   esp
  40e40b:	push   0x77
  40e40d:	cmc    
  40e40e:	(bad)  
  40e40f:	into   
  40e410:	or     dl,BYTE PTR [ebp+0x49736c90]
  40e416:	icebp  
  40e417:	adc    BYTE PTR [esi],ah
  40e419:	test   eax,0x723e58e4
  40e41e:	push   edi
  40e41f:	ret    
  40e420:	out    dx,eax
  40e421:	ds mov esi,0x34a99c36
  40e427:	dec    edi
  40e428:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e429:	(bad)  
  40e42a:	pop    ecx
  40e42b:	cmp    ebp,DWORD PTR [ebp-0x1cffca9a]
  40e431:	das    
  40e432:	adc    al,0x6e
  40e434:	mov    dl,0x24
  40e436:	xchg   DWORD PTR [eax],esp
  40e438:	sbb    edi,DWORD PTR ds:0x515fd22f
  40e43e:	js     0x40e43a
  40e440:	call   0x7bef:0x72929af0
  40e447:	mov    BYTE PTR [ebx-0x683082d6],bl
  40e44d:	push   esp
  40e44e:	out    dx,al
  40e44f:	pop    eax
  40e450:	scas   al,BYTE PTR es:[edi]
  40e451:	push   eax
  40e452:	fadd   st,st(1)
  40e454:	leave  
  40e455:	or     eax,0xf1cb4936
  40e45a:	jae    0x40e432
  40e45c:	ja     0x40e3e9
  40e45e:	sar    BYTE PTR [edi],0xb5
  40e461:	adc    ecx,esp
  40e463:	(bad)  
  40e464:	xor    BYTE PTR [ebx+0x68],ah
  40e467:	iret   
  40e468:	es scas eax,DWORD PTR es:[edi]
  40e46a:	mov    WORD PTR ds:0xd766b4e1,fs
  40e470:	dec    esi
  40e471:	bound  ebx,QWORD PTR [ebp-0x1631e955]
  40e477:	in     al,0xaa
  40e479:	pop    edi
  40e47a:	std    
  40e47b:	dec    edx
  40e47c:	ss out 0xc5,eax
  40e47f:	xor    ch,ch
  40e481:	cmp    ah,BYTE PTR [edx]
  40e483:	and    dh,BYTE PTR [ebx+ebx*4]
  40e486:	lahf   
  40e487:	inc    esi
  40e488:	and    DWORD PTR [edi-0x80],0x53
  40e48c:	pop    edx
  40e48d:	inc    ebp
  40e48e:	and    ah,BYTE PTR [ebp-0x95627cc]
  40e494:	popf   
  40e495:	and    ah,al
  40e497:	push   esp
  40e498:	dec    esp
  40e499:	loop   0x40e441
  40e49b:	test   al,0x87
  40e49d:	retf   
  40e49e:	push   esp
  40e49f:	dec    esi
  40e4a0:	rol    BYTE PTR [ebx+0x1dba1d91],1
  40e4a6:	mov    bl,0xea
  40e4a8:	push   edx
  40e4a9:	fs scas eax,DWORD PTR es:[edi]
  40e4ab:	sub    ebp,DWORD PTR [eax]
  40e4ad:	rcl    BYTE PTR [ecx],1
  40e4af:	(bad)  
  40e4b0:	and    esi,DWORD PTR ds:0x64fce824
  40e4b6:	cmp    al,0xb5
  40e4b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e4b9:	push   esp
  40e4ba:	jae    0x40e486
  40e4bc:	psadbw mm7,QWORD PTR [edx-0x72f086d8]
  40e4c3:	push   ebp
  40e4c4:	push   ebp
  40e4c5:	ja     0x40e46f
  40e4c7:	pop    edx
  40e4c8:	adc    BYTE PTR [ebx-0x238b8986],dl
  40e4ce:	lds    esp,FWORD PTR [eax+0x62]
  40e4d1:	jne    0x40e4fd
  40e4d3:	inc    ecx
  40e4d4:	jmp    0x40e52e
  40e4d6:	dec    ebp
  40e4d7:	adc    al,0x6d
  40e4d9:	sub    al,0xbd
  40e4db:	jmp    0xaf777fc8
  40e4e0:	push   0x2676a9fd
  40e4e5:	or     al,0xe3
  40e4e7:	aas    
  40e4e8:	cdq    
  40e4e9:	iret   
  40e4ea:	mov    edi,0xc36a2635
  40e4ef:	pop    ebp
  40e4f0:	aas    
  40e4f1:	sbb    al,0xe1
  40e4f3:	push   ss
  40e4f4:	mov    eax,DWORD PTR [esi+ecx*4]
  40e4f7:	cmp    cl,BYTE PTR [ecx]
  40e4f9:	sbb    bh,BYTE PTR [eax]
  40e4fb:	pushf  
  40e4fc:	pushf  
  40e4fd:	call   0xfe246bc
  40e502:	cmp    DWORD PTR [esi],ebx
  40e504:	int    0xaf
  40e506:	test   al,0x5f
  40e508:	and    eax,0x1e20a3db
  40e50d:	fst    st(2)
  40e510:	pop    es
  40e511:	jle    0x40e542
  40e513:	loop   0x40e561
  40e515:	imul   esp,DWORD PTR ds:0x8147b8a1,0x442bcdf8
  40e51f:	aaa    
  40e520:	xor    bl,BYTE PTR [eax+0x68036cd8]
  40e526:	scas   eax,DWORD PTR es:[edi]
  40e527:	and    al,0xf8
  40e529:	mov    bl,0x8f
  40e52b:	inc    edi
  40e52c:	sbb    cl,bl
  40e52e:	cmp    eax,0x9aff307
  40e533:	sbb    DWORD PTR [esi+0x4f],0xfffffff1
  40e537:	in     al,dx
  40e538:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e539:	push   edi
  40e53a:	loope  0x40e564
  40e53c:	inc    esi
  40e53d:	cs cs add dl,bl
  40e541:	outs   dx,BYTE PTR ds:[esi]
  40e542:	outs   dx,DWORD PTR ds:[esi]
  40e543:	lods   eax,DWORD PTR ds:[esi]
  40e544:	lea    edi,[edx]
  40e546:	dec    esi
  40e547:	and    eax,0xa3d8778d
  40e54c:	cli    
  40e54d:	xor    BYTE PTR [ecx-0x52a15c39],ch
  40e553:	xlat   BYTE PTR ds:[ebx]
  40e554:	pushf  
  40e555:	inc    ecx
  40e556:	jmp    0xcdb3:0x597dbf50
  40e55d:	and    eax,0xc79c07d
  40e562:	push   esi
  40e563:	push   ss
  40e564:	push   0x40d18db8
  40e569:	and    DWORD PTR [esi-0x3dcdef10],ebx
  40e56f:	adc    eax,0x8cc90ad2
  40e574:	aaa    
  40e575:	fldenv [ebx+esi*1-0x26]
  40e579:	sub    eax,0xe091d52
  40e57e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e57f:	daa    
  40e580:	fistp  DWORD PTR [esi-0x1c]
  40e584:	js     0x40e5c7
  40e586:	ins    DWORD PTR es:[edi],dx
  40e587:	das    
  40e588:	call   0x76ad:0x76e6190a
  40e58f:	jge    0x40e602
  40e591:	inc    esp
  40e592:	retf   0xb102
  40e595:	cli    
  40e596:	aam    0x59
  40e598:	pop    ds
  40e599:	adc    eax,0x4ec9636d
  40e59e:	mov    esi,0x70e06ddc
  40e5a3:	das    
  40e5a4:	xchg   BYTE PTR [edi],al
  40e5a6:	pop    ebp
  40e5a7:	jl     0x40e529
  40e5a9:	shl    BYTE PTR [edi+esi*4-0x7c],0x29
  40e5ae:	add    esi,DWORD PTR [esi-0x34]
  40e5b1:	adc    esp,esi
  40e5b3:	sbb    eax,0x860d5c01
  40e5b8:	add    BYTE PTR [edx],ch
  40e5ba:	push   ebp
  40e5bb:	and    ch,dh
  40e5bd:	and    eax,DWORD PTR [esi+0x7e136c11]
  40e5c3:	out    0xf6,al
  40e5c5:	dec    ebx
  40e5c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e5c7:	cdq    
  40e5c8:	xchg   ebx,eax
  40e5c9:	jns    0x40e565
  40e5cb:	inc    edi
  40e5cc:	push   edx
  40e5cd:	pusha  
  40e5ce:	stc    
  40e5cf:	lea    esp,[ebp+0x2b1e4e]
  40e5d5:	iret   
  40e5d6:	enter  0x2232,0x4d
  40e5da:	dec    DWORD PTR [esi-0x8]
  40e5dd:	pop    ebx
  40e5de:	cmc    
  40e5df:	jmp    0x7816:0xa23cb5f2
  40e5e6:	pop    ebx
  40e5e7:	add    DWORD PTR [eax],ecx
  40e5e9:	push   esp
  40e5ea:	xor    ebx,DWORD PTR [ecx]
  40e5ec:	mov    esi,0xb74061eb
  40e5f1:	aaa    
  40e5f2:	and    eax,0x47471ede
  40e5f7:	arpl   WORD PTR ds:0xb71a80da,sp
  40e5fd:	jno    0x40e62a
  40e5ff:	loope  0x40e5e0
  40e601:	jns    0x40e5e6
  40e603:	dec    ebp
  40e604:	or     eax,0xe12a096f
  40e609:	pop    edi
  40e60a:	pop    ecx
  40e60b:	dec    eax
  40e60c:	or     eax,DWORD PTR ds:0xc554181a
  40e612:	pop    edi
  40e613:	test   BYTE PTR ds:0x3392555d,cl
  40e619:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e61a:	pop    eax
  40e61b:	cmp    eax,0xeeea18be
  40e620:	dec    edi
  40e621:	pop    ebx
  40e622:	mov    eax,0xc977d190
  40e627:	in     al,dx
  40e628:	pop    ebp
  40e629:	ins    DWORD PTR es:[edi],dx
  40e62a:	jbe    0x40e5ce
  40e62c:	ret    0xf275
  40e62f:	inc    esp
  40e630:	ins    DWORD PTR es:[edi],dx
  40e631:	xchg   BYTE PTR [edx],ch
  40e633:	sub    al,0xc
  40e635:	dec    ebp
  40e636:	cwde   
  40e637:	aad    0x17
  40e639:	jne    0x40e67a
  40e63b:	dec    ebx
  40e63d:	sbb    esi,DWORD PTR [ecx+0x76]
  40e640:	sar    al,0x9b
  40e643:	cmp    DWORD PTR [edx+0x57],ebx
  40e646:	mov    eax,0x7c3bcab2
  40e64b:	dec    si
  40e64d:	ja     0x40e639
  40e64f:	mov    ah,0xb1
  40e651:	pop    ss
  40e652:	cdq    
  40e653:	sub    eax,0x52e365de
  40e658:	loop   0x40e5f1
  40e65a:	mov    ecx,DWORD PTR [ebx+0x1b]
  40e65d:	lea    ebx,ds:0xdd015eef
  40e663:	xchg   esi,eax
  40e664:	(bad)  
  40e665:	cld    
  40e666:	iret   
  40e667:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e668:	test   al,0x73
  40e66a:	mov    al,0x41
  40e66c:	push   ss
  40e66d:	fs test al,dl
  40e670:	rcl    BYTE PTR [esi-0x58c43300],1
  40e676:	loope  0x40e656
  40e678:	test   BYTE PTR [esi],bl
  40e67a:	cmp    dh,BYTE PTR [edx]
  40e67c:	jb     0x40e6bf
  40e67e:	mov    ah,0xd1
  40e680:	pop    eax
  40e681:	cmp    DWORD PTR [ebx],0xffffffa2
  40e684:	into   
  40e685:	sbb    al,0xb7
  40e687:	mov    ch,0x5
  40e689:	cmp    dh,BYTE PTR [edx-0x4e]
  40e68c:	lock sahf 
  40e68e:	cdq    
  40e68f:	fld    TBYTE PTR [eax-0x67]
  40e692:	add    bh,BYTE PTR [ebx]
  40e694:	and    dh,dl
  40e696:	mov    ds:0xae5db49a,al
  40e69b:	das    
  40e69c:	lock ror DWORD PTR [ecx-0x5234a834],1
  40e6a3:	and    ecx,0x65e09858
  40e6a9:	jnp    0x40e6c9
  40e6ab:	inc    ebp
  40e6ac:	adc    al,0xfc
  40e6ae:	jne    0x40e697
  40e6b0:	call   0xc83a:0x8f142b52
  40e6b7:	mov    cs,WORD PTR [esi]
  40e6b9:	jmp    0x6824:0x5bc20ee3
  40e6c0:	stos   DWORD PTR es:[edi],eax
  40e6c1:	sub    al,0x54
  40e6c3:	(bad)  
  40e6c4:	pop    ebp
  40e6c5:	(bad)  
  40e6c8:	imul   ebx,edx,0x6454aa14
  40e6ce:	mov    DWORD PTR [eax],ebp
  40e6d0:	and    DWORD PTR [ebx+0x3211c33d],esi
  40e6d6:	jno    0x40e6cc
  40e6d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e6d9:	les    edx,FWORD PTR [esi+0x5b]
  40e6dc:	repz pop ds
  40e6de:	out    dx,eax
  40e6df:	and    al,0x63
  40e6e1:	cmp    DWORD PTR [eax-0x61d7e908],esi
  40e6e7:	int    0xc
  40e6e9:	es dec ecx
  40e6eb:	pushf  
  40e6ec:	and    bl,BYTE PTR [ebx+eax*8-0x20c7c63b]
  40e6f3:	sub    ecx,ecx
  40e6f5:	mov    esp,0xf5490e52
  40e6fa:	in     eax,0x42
  40e6fc:	gs dec ebp
  40e6fe:	int    0xb0
  40e700:	xlat   BYTE PTR ds:[ebx]
  40e701:	icebp  
  40e702:	or     cl,BYTE PTR [eax]
  40e704:	outs   dx,DWORD PTR ds:[esi]
  40e705:	sbb    DWORD PTR [edx+0x71e3e91a],0x34
  40e70c:	iret   
  40e70d:	dec    edx
  40e70e:	popf   
  40e70f:	loop   0x40e757
  40e711:	jp     0x40e72f
  40e713:	sub    BYTE PTR [ebx-0x1b4fdd1a],cl
  40e719:	push   ecx
  40e71a:	adc    al,0x67
  40e71c:	imul   ebp,DWORD PTR [ecx],0x447705a
  40e722:	or     DWORD PTR [eax+0x6d],ecx
  40e725:	lods   eax,DWORD PTR ds:[esi]
  40e726:	call   0xb1c89385
  40e72b:	rcl    BYTE PTR [ebp-0x4e973069],0x6a
  40e732:	sub    eax,0x6fe0d842
  40e737:	mov    edi,0x6d4226e
  40e73c:	xor    eax,0x5176a7d
  40e741:	mov    WORD PTR [edx-0x13fb006e],fs
  40e747:	push   0xcd4f516c
  40e74c:	retf   
  40e74d:	add    DWORD PTR [edx],ecx
  40e74f:	loop   0x40e710
  40e751:	sbb    eax,0xed3f7a32
  40e756:	aaa    
  40e757:	imul   esi,DWORD PTR [ecx+0x75],0xffffffa7
  40e75b:	loope  0x40e6e5
  40e75d:	inc    al
  40e75f:	cmp    al,0x4d
  40e761:	xchg   BYTE PTR [esi+edx*1+0x7f],bh
  40e765:	popa   
  40e766:	dec    ebp
  40e767:	es push 0x40048996
  40e76d:	(bad)  
  40e76e:	popa   
  40e76f:	cmp    ebx,ebx
  40e771:	mov    ebx,0xd997a38a
  40e776:	inc    eax
  40e777:	xchg   ecx,eax
  40e778:	in     eax,0x60
  40e77a:	iret   
  40e77b:	es ja  0x40e736
  40e77e:	mov    ch,dh
  40e780:	test   al,0x4
  40e782:	stc    
  40e783:	fld    TBYTE PTR [ecx+0x646031b1]
  40e789:	cli    
  40e78a:	xchg   ebp,ebx
  40e78c:	imul   ebx,DWORD PTR [eax+0x49],0xf8682ef2
  40e793:	cmp    ecx,DWORD PTR [ecx]
  40e795:	fnstsw WORD PTR [edx-0x19]
  40e798:	aas    
  40e799:	je     0x40e731
  40e79b:	clc    
  40e79c:	mov    ebp,0x5d09ef0c
  40e7a1:	dec    ebp
  40e7a2:	scas   al,BYTE PTR es:[edi]
  40e7a3:	sti    
  40e7a4:	imul   ecx,DWORD PTR [esi+0x35ef101],0x6d
  40e7ab:	iret   
  40e7ac:	test   BYTE PTR [edi+0x51],0x14
  40e7b0:	jns    0x72926054
  40e7b6:	or     eax,0x7b3a289
  40e7bb:	hlt    
  40e7bc:	popa   
  40e7bd:	lods   al,BYTE PTR ds:[esi]
  40e7be:	xchg   ebp,eax
  40e7bf:	scas   eax,DWORD PTR es:[edi]
  40e7c0:	pop    ebx
  40e7c1:	jb     0x40e7da
  40e7c3:	das    
  40e7c4:	fnstenv [ecx]
  40e7c6:	sbb    eax,0xe663ddc4
  40e7cb:	out    0xef,eax
  40e7cd:	push   edx
  40e7ce:	jge    0x40e800
  40e7d0:	sbb    DWORD PTR [ecx+0x26096cde],edi
  40e7d6:	inc    ebp
  40e7d7:	inc    ebx
  40e7d8:	arpl   WORD PTR [eax],bx
  40e7da:	lahf   
  40e7db:	and    al,0xa3
  40e7dd:	xchg   DWORD PTR [esi],esp
  40e7df:	test   DWORD PTR [edi+0x79cf2f3c],ebx
  40e7e5:	pop    esi
  40e7e6:	shl    bl,1
  40e7e8:	pop    es
  40e7e9:	call   0xdf8b:0xabe34dc9
  40e7f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e7f1:	mov    dh,0xd6
  40e7f3:	mov    ds:0x9e1aad12,al
  40e7f8:	loop   0x40e7b6
  40e7fa:	(bad)  
  40e7fb:	xlat   BYTE PTR ds:[ebx]
  40e7fc:	xchg   esp,eax
  40e7fd:	push   ss
  40e7fe:	iret   
  40e7ff:	push   ss
  40e800:	mov    bl,0x49
  40e802:	mov    edx,0xc47f7f7c
  40e807:	dec    edi
  40e808:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e809:	adc    BYTE PTR [eax-0x55affe6b],bh
  40e80f:	dec    ebx
  40e810:	mov    bl,BYTE PTR cs:[ecx]
  40e813:	sbb    al,0x8b
  40e815:	inc    esi
  40e816:	mov    ah,0xbd
  40e818:	pusha  
  40e819:	gs popf 
  40e81b:	and    eax,0x1c2d5fd9
  40e820:	dec    esp
  40e821:	sbb    edx,DWORD PTR [eax]
  40e823:	les    esi,FWORD PTR [edi]
  40e825:	pop    ecx
  40e826:	cld    
  40e827:	xor    edi,edx
  40e829:	mov    edx,DWORD PTR [esi-0x4]
  40e82c:	fprem1 
  40e82e:	outs   dx,DWORD PTR ds:[esi]
  40e82f:	pop    ds
  40e830:	pop    edi
  40e831:	mov    esp,0x26f2d9ab
  40e836:	push   DWORD PTR [eax-0x6a1c0396]
  40e83c:	mov    cl,0x6
  40e83e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e83f:	xchg   ebx,eax
  40e840:	out    0xdc,al
  40e842:	fwait
  40e843:	push   cs
  40e844:	jmp    0xc6274bec
  40e849:	push   edx
  40e84a:	and    al,0x71
  40e84c:	jecxz  0x40e866
  40e84e:	sub    edi,eax
  40e850:	inc    ecx
  40e851:	ficom  DWORD PTR [eax-0x71]
  40e854:	cmp    BYTE PTR [edx-0x3b16fcde],0x2
  40e85b:	inc    ebx
  40e85c:	(bad)  
  40e85d:	js     0x40e8a3
  40e85f:	add    dl,BYTE PTR [eax+0x1107e017]
  40e865:	into   
  40e866:	ret    0x872b
  40e869:	sbb    al,0x33
  40e86b:	sbb    DWORD PTR [edx],edi
  40e86d:	mov    ds:0xda3787fa,al
  40e872:	test   BYTE PTR [esp+esi*2-0x6ad4a6f7],ch
  40e879:	ret    
  40e87a:	popa   
  40e87b:	jp     0x40e8e8
  40e87d:	xchg   ebp,eax
  40e87e:	add    eax,DWORD PTR [eax+0x1ee98783]
  40e884:	aaa    
  40e885:	je     0x40e86f
  40e887:	(bad)  
  40e889:	arpl   WORD PTR [esi-0x4a5175a2],si
  40e88f:	adc    eax,0x26b094df
  40e894:	cdq    
  40e895:	mov    eax,ds:0xdf575163
  40e89b:	inc    ecx
  40e89c:	idiv   dl
  40e89e:	or     DWORD PTR [ebp-0x78df72b0],0x53a627be
  40e8a8:	fld    QWORD PTR [ecx+0x2909288a]
  40e8ae:	nop
  40e8af:	dec    ecx
  40e8b0:	adc    eax,0xfa447b18
  40e8b5:	mov    edx,0xc3f061c2
  40e8ba:	ins    BYTE PTR es:[edi],dx
  40e8bb:	shl    DWORD PTR [edx],cl
  40e8bd:	bound  ecx,QWORD PTR [ecx]
  40e8bf:	and    al,0x2a
  40e8c1:	sbb    esp,ecx
  40e8c3:	test   BYTE PTR [edx],0xf7
  40e8c6:	dec    ecx
  40e8c7:	xchg   ebx,eax
  40e8c8:	pop    es
  40e8c9:	loopne 0x40e930
  40e8cb:	mov    bl,0xc7
  40e8cd:	into   
  40e8ce:	pop    edx
  40e8cf:	mov    ah,0xd8
  40e8d1:	or     al,0xf0
  40e8d3:	inc    DWORD PTR [edx-0x2d]
  40e8d6:	push   0x3bca4ce2
  40e8db:	in     al,0x62
  40e8dd:	push   ds
  40e8de:	bound  ecx,QWORD PTR [edi+eiz*2-0x8]
  40e8e2:	mov    esp,es
  40e8e4:	in     al,0x5e
  40e8e6:	out    0xbc,al
  40e8e8:	sbb    eax,0xe4f4f2f7
  40e8ed:	test   DWORD PTR [ebx],ecx
  40e8ef:	and    ah,BYTE PTR ds:0x4e361f34
  40e8f5:	sbb    eax,0x6a295163
  40e8fa:	repnz or eax,0xa4dd9c82
  40e900:	pop    ebx
  40e901:	aaa    
  40e902:	fiadd  WORD PTR [esi+0x39]
  40e905:	sbb    bh,BYTE PTR [esi-0x7c]
  40e908:	std    
  40e909:	pop    edi
  40e90a:	jnp    0x40e8f4
  40e90c:	inc    esi
  40e90d:	sbb    ebx,edx
  40e90f:	sbb    edi,DWORD PTR [edi+esi*1+0x30aeb1eb]
  40e916:	out    dx,al
  40e917:	lock icebp 
  40e919:	jmp    0xbed8:0x57f8e580
  40e920:	ins    DWORD PTR es:[edi],dx
  40e921:	stos   DWORD PTR es:[edi],eax
  40e922:	push   ss
  40e923:	imul   eax,esi,0x4
  40e926:	rcr    BYTE PTR [ebx+eax*1+0x2a680f1b],1
  40e92d:	jnp    0x47898f57
  40e933:	sbb    eax,0x24b0155e
  40e938:	jns    0x40e99f
  40e93a:	mov    esi,DWORD PTR [ebx-0x4]
  40e93d:	popa   
  40e93e:	jmp    FWORD PTR [ebx+edx*4]
  40e941:	push   es
  40e942:	(bad)  
  40e944:	ret    
  40e945:	add    al,0x6d
  40e947:	mov    al,0x53
  40e949:	jae    0x40e9be
  40e94b:	or     al,0x77
  40e94d:	das    
  40e94e:	shr    al,1
  40e950:	adc    ecx,DWORD PTR [ebp+0x61]
  40e953:	pop    esp
  40e954:	mov    ebx,DWORD PTR [ebx]
  40e956:	out    0xcf,eax
  40e958:	shl    dh,1
  40e95a:	dec    esi
  40e95b:	ins    DWORD PTR es:[edi],dx
  40e95c:	les    ax,DWORD PTR [bx+di-0x5c]
  40e961:	cmp    eax,0x19fe2523
  40e966:	les    esp,FWORD PTR [edi]
  40e968:	xor    BYTE PTR [edx-0x7a],dl
  40e96b:	cmp    edx,esp
  40e96d:	add    dl,BYTE PTR [ecx-0x7b7cd0e9]
  40e973:	retf   
  40e974:	dec    edx
  40e975:	mov    cl,0x7f
  40e977:	sub    bh,BYTE PTR [ebp+0x29]
  40e97a:	sahf   
  40e97b:	ins    DWORD PTR es:[edi],dx
  40e97c:	dec    ecx
  40e97d:	add    eax,0x3efd0450
  40e982:	test   ecx,0x6d340619
  40e988:	push   edx
  40e989:	div    edi
  40e98b:	pusha  
  40e98c:	and    esi,ebp
  40e98e:	xchg   ecx,eax
  40e98f:	lea    ebp,[ebx-0x4588721a]
  40e995:	ins    DWORD PTR es:[edi],dx
  40e996:	mov    BYTE PTR [ebx+0x76],dl
  40e999:	out    0x53,al
  40e99b:	in     eax,dx
  40e99c:	or     DWORD PTR [ebp+edi*8-0x5ea002cd],ebx
  40e9a3:	int3   
  40e9a4:	cmp    ebp,DWORD PTR [ebx]
  40e9a6:	(bad)  
  40e9a8:	jp     0x40e9b9
  40e9aa:	xor    eax,edi
  40e9ac:	xchg   ch,ch
  40e9ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e9af:	repz vpmaxub ymm2,ymm2,YMMWORD PTR [edi-0x44]
  40e9b5:	xchg   ecx,eax
  40e9b6:	push   ss
  40e9b7:	xor    edi,DWORD PTR [ebp-0xd]
  40e9ba:	inc    esp
  40e9bb:	cdq    
  40e9bc:	cld    
  40e9bd:	sub    eax,DWORD PTR [esi+0x7a76d27c]
  40e9c3:	stos   BYTE PTR es:[edi],al
  40e9c4:	addr16 xchg ebp,eax
  40e9c6:	mov    ds:0x6f08edb7,eax
  40e9cb:	dec    esi
  40e9cc:	loopne 0x40e9ae
  40e9ce:	mov    dl,0x10
  40e9d0:	mov    eax,?
  40e9d2:	lods   al,BYTE PTR ds:[esi]
  40e9d3:	dec    edx
  40e9d4:	cs addr16 ds cwd 
  40e9d9:	mov    ebx,0x287dd0fe
  40e9de:	mov    al,ds:0x5b70cb5
  40e9e3:	push   0x398ee013
  40e9e8:	and    edx,DWORD PTR [edi]
  40e9ea:	loopne 0x40e9bb
  40e9ec:	cmc    
  40e9ed:	retf   
  40e9ee:	test   BYTE PTR [esi-0xe393c25],al
  40e9f4:	sub    BYTE PTR [eax-0x64d3f0c0],0x95
  40e9fb:	mov    eax,0xe5dfcc04
  40ea00:	jmp    0x6cbd:0x2e12cf5c
  40ea07:	inc    eax
  40ea08:	push   ss
  40ea09:	leave  
  40ea0a:	test   eax,0xb6c771b8
  40ea0f:	shl    ch,0x2e
  40ea12:	enter  0xb7e0,0xc5
  40ea16:	and    al,0xbd
  40ea18:	mov    edx,0x7973fcd4
  40ea1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ea1e:	test   DWORD PTR [ecx-0x3e],0x34048565
  40ea25:	jne    0x40ea63
  40ea27:	arpl   WORD PTR [eax-0x1b1be1f5],bx
  40ea2d:	add    ch,bl
  40ea2f:	nop
  40ea30:	add    eax,0x66356167
  40ea35:	adc    eax,0x47c224b0
  40ea3a:	dec    esp
  40ea3b:	cmp    ch,BYTE PTR [ebx+0x7faa32eb]
  40ea41:	into   
  40ea42:	sbb    esp,DWORD PTR [esi-0x4dc0e97f]
  40ea48:	xchg   edi,eax
  40ea49:	mov    edi,0x66796e71
  40ea4e:	mov    ch,0xa7
  40ea50:	jo     0x40e9e8
  40ea52:	pop    ebx
  40ea53:	call   0x65be07d3
  40ea58:	inc    ebp
  40ea59:	popa   
  40ea5a:	call   0xb0f8:0x63b3e34e
  40ea61:	push   esp
  40ea62:	inc    esi
  40ea63:	mov    ecx,0xb6aac8a2
  40ea68:	pop    ecx
  40ea69:	test   DWORD PTR [edx],edi
  40ea6b:	jnp    0x40eaa5
  40ea6d:	rcr    dl,0x8
  40ea70:	mov    ?,WORD PTR ds:0xa8dcbf81
  40ea76:	cli    
  40ea77:	pop    ebx
  40ea78:	mov    eax,ds:0x40c2e7b
  40ea7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ea7e:	or     esp,DWORD PTR ds:0x7643cfa6
  40ea84:	cmp    DWORD PTR [edi],eax
  40ea86:	(bad)  
  40ea88:	ins    BYTE PTR es:[edi],dx
  40ea89:	ror    esi,cl
  40ea8b:	retf   
  40ea8c:	outs   dx,BYTE PTR ds:[esi]
  40ea8d:	inc    eax
  40ea8e:	ret    
  40ea8f:	jg     0x40ea9c
  40ea91:	scas   al,BYTE PTR es:[edi]
  40ea92:	push   es
  40ea93:	aaa    
  40ea94:	jno    0x40ea21
  40ea96:	(bad)
  40ea99:	dec    ebx
  40ea9a:	aam    0xda
  40ea9c:	mov    esp,0x96eaa85
  40eaa1:	mov    esi,0x28e732ea
  40eaa6:	sub    BYTE PTR [edx+0xb],ah
  40eaa9:	cmc    
  40eaaa:	bound  esi,QWORD PTR [eax+0x6c]
  40eaad:	mov    bh,0x3
  40eaaf:	sahf   
  40eab0:	cmp    esp,DWORD PTR [ecx+0x4d]
  40eab3:	mov    WORD PTR [ebx],ss
  40eab5:	add    DWORD PTR [ecx],edx
  40eab7:	out    dx,al
  40eab8:	ins    BYTE PTR es:[edi],dx
  40eab9:	pop    ecx
  40eaba:	fwait
  40eabb:	sub    cl,dl
  40eabd:	mov    dl,0x88
  40eabf:	aad    0x77
  40eac1:	mov    ds:0x969e645,al
  40eac6:	mov    WORD PTR [edi-0x6c],?
  40eac9:	push   ebp
  40eaca:	out    0xd4,al
  40eacc:	cli    
  40eacd:	or     cl,al
  40eacf:	fcom   DWORD PTR [edx]
  40ead1:	in     al,0xa6
  40ead3:	mov    ecx,0x431a008
  40ead8:	(bad)  
  40ead9:	daa    
  40eada:	outs   dx,DWORD PTR ds:[esi]
  40eadb:	in     eax,0x97
  40eadd:	add    DWORD PTR [ebx+0x23],ebx
  40eae0:	ins    DWORD PTR es:[edi],dx
  40eae1:	sbb    BYTE PTR [ebx-0x549ef539],cl
  40eae7:	mov    al,0xe5
  40eae9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eaea:	rcr    BYTE PTR ds:0xaf629e09,cl
  40eaf0:	xchg   edi,eax
  40eaf1:	fmul   QWORD PTR [ebp+0x46]
  40eaf4:	stc    
  40eaf5:	push   es
  40eaf6:	clc    
  40eaf7:	mov    ah,0x3b
  40eaf9:	cld    
  40eafa:	fwait
  40eafb:	cwde   
  40eafc:	(bad)  
  40eafd:	enter  0x4b08,0x6f
  40eb01:	ret    
  40eb02:	loope  0x40eaa1
  40eb04:	xor    DWORD PTR [eax],ebx
  40eb06:	mov    al,0x22
  40eb08:	sti    
  40eb09:	in     eax,dx
  40eb0a:	push   ebx
  40eb0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eb0c:	add    DWORD PTR [ecx-0xb],0xffffffc4
  40eb10:	mov    eax,ds:0x72766a94
  40eb15:	adc    cl,BYTE PTR [eax-0x44]
  40eb18:	das    
  40eb19:	clc    
  40eb1a:	mov    DWORD PTR [ebx],edi
  40eb1c:	cmp    ecx,edx
  40eb1e:	dec    edx
  40eb1f:	(bad)  
  40eb20:	psllw  mm7,QWORD PTR [eax-0x6c]
  40eb24:	aam    0x13
  40eb26:	pop    ebx
  40eb27:	sahf   
  40eb28:	add    al,BYTE PTR [ebp+0x49606185]
  40eb2e:	clc    
  40eb2f:	adc    DWORD PTR [esi-0x11ad6e3e],ecx
  40eb35:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  40eb37:	in     eax,0x5
  40eb39:	leave  
  40eb3a:	mov    al,0xf1
  40eb3c:	mov    ah,0x15
  40eb3e:	int    0xcd
  40eb40:	or     BYTE PTR [edx-0x7c],bh
  40eb43:	pop    eax
  40eb44:	sbb    cl,al
  40eb46:	outs   dx,BYTE PTR ds:[esi]
  40eb47:	push   edi
  40eb48:	mov    ah,0xa0
  40eb4a:	mov    ebp,edx
  40eb4c:	dec    ecx
  40eb4d:	repz add DWORD PTR [esi+0x2f194cb],0xd165ffed
  40eb58:	fxch   st(5)
  40eb5a:	test   eax,0xfec35bb7
  40eb5f:	inc    ebx
  40eb60:	jo     0x40eb06
  40eb62:	enter  0x1e18,0xb5
  40eb66:	mov    ds:0x6364e835,al
  40eb6b:	int    0x85
  40eb6d:	pop    esp
  40eb6e:	mov    dl,BYTE PTR [ebx+0x45]
  40eb71:	xchg   edx,eax
  40eb72:	or     BYTE PTR [ebp+0x7b],ch
  40eb75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eb76:	xchg   esi,eax
  40eb77:	or     ch,BYTE PTR [edx-0x369152a0]
  40eb7d:	(bad)  
  40eb7e:	jmp    0x40ebd0
  40eb80:	push   ds
  40eb81:	push   0xffffffd3
  40eb83:	mov    bh,0xb3
  40eb85:	arpl   WORD PTR [edi+edi*2-0x308fe4cd],bp
  40eb8c:	jbe    0x40ebb9
  40eb8e:	int    0xdd
  40eb90:	(bad)  
  40eb91:	shr    BYTE PTR [esi],cl
  40eb93:	aas    
  40eb94:	xlat   BYTE PTR ds:[ebx]
  40eb95:	mov    DWORD PTR [eax],eax
  40eb97:	xor    DWORD PTR [eax-0x64],esi
  40eb9a:	out    dx,al
  40eb9b:	test   BYTE PTR [ecx-0x5c],ch
  40eb9e:	test   cl,bh
  40eba0:	ffree  st(1)
  40eba2:	lds    edx,FWORD PTR ds:0x7508e3cc
  40eba8:	pop    edx
  40eba9:	ret    
  40ebaa:	cmp    ebp,ebx
  40ebac:	jno    0x40eb88
  40ebae:	fwait
  40ebaf:	cwde   
  40ebb0:	out    0xdf,eax
  40ebb2:	mov    eax,ds:0x221711dc
  40ebb7:	jbe    0x40ec13
  40ebb9:	add    edi,DWORD PTR [eax-0x394c4c5f]
  40ebbf:	aad    0x4e
  40ebc1:	ret    
  40ebc2:	or     eax,0x27433f8c
  40ebc7:	mov    edi,DWORD PTR [ecx]
  40ebc9:	mov    dl,0x3c
  40ebcb:	xchg   esp,ebp
  40ebcd:	je     0x40eb85
  40ebcf:	dec    ebx
  40ebd0:	mov    cl,BYTE PTR [ebx-0x13]
  40ebd3:	ret    0x3706
  40ebd6:	iret   
  40ebd7:	nop
  40ebd8:	cld    
  40ebd9:	jne    0x40ec5a
  40ebdb:	sbb    BYTE PTR [edi],ch
  40ebdd:	loope  0x40ec1d
  40ebdf:	sbb    ecx,DWORD PTR [ebx*1-0x54929f31]
  40ebe6:	dec    ecx
  40ebe7:	mov    esi,0xdf3053a9
  40ebec:	cli    
  40ebed:	pop    ebx
  40ebee:	push   edx
  40ebef:	pop    esi
  40ebf0:	cmp    BYTE PTR [ebp+0x107aa63e],bh
  40ebf6:	add    ah,BYTE PTR [edi+0x47]
  40ebf9:	clc    
  40ebfa:	jle    0x40eb9c
  40ebfc:	jmp    0x40ebb2
  40ebfe:	retf   0xa930
  40ec01:	and    al,0xa4
  40ec03:	xchg   DWORD PTR [ecx+ebp*1-0x2f],eax
  40ec07:	lahf   
  40ec08:	push   es
  40ec09:	nop
  40ec0a:	cmp    BYTE PTR [edx+0x61],cl
  40ec0d:	sbb    esi,edi
  40ec0f:	imul   DWORD PTR [edi]
  40ec11:	xchg   BYTE PTR [ecx-0x39],dl
  40ec14:	int3   
  40ec15:	inc    eax
  40ec16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ec17:	jnp    0x40ec85
  40ec19:	div    BYTE PTR [eax-0x30df5dbb]
  40ec1f:	jmp    0xec39:0x97735d4b
  40ec26:	imul   esi,ecx,0x61
  40ec29:	dec    esp
  40ec2a:	loopne 0x40ebe0
  40ec2c:	fwait
  40ec2d:	add    eax,0x4a0dd5e1
  40ec32:	cmp    cl,al
  40ec34:	iret   
  40ec35:	sub    BYTE PTR [ebp-0x3f],al
  40ec38:	jo     0x40eca9
  40ec3a:	pushf  
  40ec3b:	fsub   DWORD PTR [edi+0x65]
  40ec3e:	mov    eax,0x7ed2c92
  40ec43:	xchg   BYTE PTR [esi],dh
  40ec45:	ret    
  40ec46:	out    0x79,al
  40ec48:	and    al,0x68
  40ec4a:	addr16 pop esi
  40ec4c:	jne    0x40ebff
  40ec4e:	inc    esi
  40ec4f:	test   BYTE PTR [esi+0x5c],ah
  40ec52:	imul   eax,DWORD PTR [esi-0x9ec98a6],0x58
  40ec59:	pop    ebp
  40ec5a:	mov    ebp,0x5cb70120
  40ec5f:	rcl    bl,0x64
  40ec62:	inc    DWORD PTR [ebx+0x5a]
  40ec65:	push   esi
  40ec66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ec67:	mov    esp,0x7dcf2210
  40ec6c:	xchg   DWORD PTR [ecx],ebx
  40ec6e:	push   esi
  40ec6f:	jecxz  0x40ecd2
  40ec71:	test   BYTE PTR ds:[edi+0x171679e],0x55
  40ec79:	ins    BYTE PTR es:[edi],dx
  40ec7a:	mov    bl,0x1c
  40ec7c:	ds xor eax,esp
  40ec7f:	addr16 sub eax,0x85ecaebf
  40ec85:	shl    dl,0x7d
  40ec88:	test   al,0x4b
  40ec8a:	(bad)  
  40ec8b:	sti    
  40ec8c:	push   esp
  40ec8d:	mov    ebx,0x6dfc148c
  40ec92:	mov    fs,ebp
  40ec94:	xchg   esp,eax
  40ec95:	or     eax,0xc2589d6d
  40ec9a:	sub    BYTE PTR [edi],0x64
  40ec9d:	(bad)  
  40ec9f:	cmc    
  40eca0:	xor    al,0x8
  40eca2:	gs lock call 0x8bfe1bc3
  40eca9:	lahf   
  40ecaa:	iret   
  40ecab:	shr    BYTE PTR ds:0x4596fa92,1
  40ecb1:	jecxz  0x40eca6
  40ecb3:	bound  eax,QWORD PTR ds:0xf29fe914
  40ecb9:	lods   al,BYTE PTR ds:[esi]
  40ecba:	cmc    
  40ecbb:	mov    ds:0x927c9943,eax
  40ecc0:	lahf   
  40ecc1:	pop    ecx
  40ecc2:	pop    esp
  40ecc3:	pop    ebp
  40ecc4:	push   ecx
  40ecc5:	ins    BYTE PTR es:[edi],dx
  40ecc6:	loop   0x40ec9d
  40ecc8:	mov    ebx,0x9fa30043
  40eccd:	xchg   esp,eax
  40ecce:	pop    esp
  40eccf:	jo     0x40ecfa
  40ecd1:	jns    0x40ec82
  40ecd3:	repnz lahf 
  40ecd5:	inc    ebx
  40ecd6:	pop    es
  40ecd7:	mov    ds:0x91f370a1,eax
  40ecdc:	mov    ah,0xac
  40ecde:	jecxz  0x40ed2b
  40ece0:	pop    esi
  40ece1:	jne    0x40ed3f
  40ece3:	push   ss
  40ece4:	(bad)  
  40ece5:	cmc    
  40ece6:	rcr    DWORD PTR ds:0xf0b0bef2,0x1f
  40eced:	push   0xbcc7f944
  40ecf2:	(bad)  
  40ecf3:	and    DWORD PTR [esi-0xd4a5546],edx
  40ecf9:	mov    ebp,0x3281b43b
  40ecfe:	out    dx,al
  40ecff:	or     BYTE PTR [eax],bl
  40ed01:	loop   0x40ecbc
  40ed03:	push   edx
  40ed04:	retf   
  40ed05:	jle    0x40ed46
  40ed07:	mov    dh,0x61
  40ed09:	inc    edi
  40ed0a:	loope  0x40ecc1
  40ed0c:	mov    esi,0xa9b33ca4
  40ed11:	sub    ebp,DWORD PTR [edi-0x4374d513]
  40ed17:	or     eax,0x23055e8b
  40ed1c:	push   ds
  40ed1d:	or     dh,BYTE PTR [edx]
  40ed1f:	js     0x40ed60
  40ed21:	or     eax,0x7d4dd56d
  40ed26:	mov    al,ds:0xf87728c7
  40ed2b:	pusha  
  40ed2c:	or     eax,0xfff21820
  40ed31:	adc    al,0x7a
  40ed33:	sti    
  40ed34:	or     esi,edx
  40ed36:	jae    0x40ecf0
  40ed38:	inc    ebp
  40ed3a:	in     al,0x55
  40ed3c:	hlt    
  40ed3d:	dec    esi
  40ed3e:	leave  
  40ed3f:	mov    ds:0xef6e9bec,eax
  40ed44:	mov    ch,0xb0
  40ed46:	and    esi,DWORD PTR [ecx-0x3f05aeca]
  40ed4c:	fisubr WORD PTR [esp+ecx*2-0x4e]
  40ed50:	ret    
  40ed51:	and    al,0x2a
  40ed53:	mov    ch,0xa6
  40ed55:	sbb    bh,BYTE PTR [esi+0x511aea98]
  40ed5b:	out    0xb4,al
  40ed5d:	push   ds
  40ed5e:	sub    eax,0xf208009b
  40ed63:	fsub   DWORD PTR [eax+0x39]
  40ed66:	dec    esp
  40ed67:	mov    sp,0x62cb
  40ed6b:	in     eax,dx
  40ed6c:	dec    edx
  40ed6d:	inc    ebx
  40ed6e:	rcl    BYTE PTR [edx+edx*2-0x38],1
  40ed72:	jp     0x40ed60
  40ed74:	in     eax,0x22
  40ed76:	xchg   DWORD PTR [ecx+0x7624cc42],edi
  40ed7c:	or     eax,edi
  40ed7e:	pop    ecx
  40ed7f:	test   al,0x2a
  40ed81:	sub    DWORD PTR [ecx+0x17],ebx
  40ed84:	inc    ebp
  40ed85:	aas    
  40ed86:	mov    dl,BYTE PTR ds:[edx-0x2c]
  40ed8a:	fs je  0x40edac
  40ed8d:	imul   esi,DWORD PTR [ebx],0xe68e47d7
  40ed93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ed94:	dec    esi
  40ed95:	out    dx,al
  40ed96:	outs   dx,DWORD PTR ds:[esi]
  40ed97:	mov    dh,0x20
  40ed99:	mov    ebx,0xc21c89c
  40ed9e:	xchg   edi,eax
  40ed9f:	es dec eax
  40eda1:	push   ebp
  40eda2:	xchg   esp,eax
  40eda3:	imul   DWORD PTR ds:0xed354d61
  40eda9:	dec    ecx
  40edaa:	mov    dh,0xed
  40edac:	jmp    0x40ee1e
  40edae:	je     0x40edea
  40edb0:	sub    BYTE PTR [edi-0x55],ch
  40edb3:	inc    ebp
  40edb4:	pop    ss
  40edb5:	cli    
  40edb6:	and    BYTE PTR [ebx+0x2efbff6f],ch
  40edbc:	mov    eax,ds:0x1feb4524
  40edc1:	and    cl,cl
  40edc3:	dec    eax
  40edc5:	in     eax,dx
  40edc6:	mov    ecx,0x5cbdda3c
  40edcb:	jb     0x40edb9
  40edcd:	fs cdq 
  40edcf:	shl    DWORD PTR [edi+0x3ce20938],0x7e
  40edd6:	shl    DWORD PTR [esi+0x28],cl
  40edd9:	push   esi
  40edda:	scas   al,BYTE PTR es:[edi]
  40eddb:	jns    0x40edc1
  40eddd:	mov    ebx,0x54a26dc9
  40ede2:	loope  0x40ed64
  40ede4:	mov    dh,BYTE PTR ds:0x1e8532dc
  40edea:	xchg   esi,eax
  40edeb:	mov    esp,0x81339cc7
  40edf0:	push   esp
  40edf1:	adc    BYTE PTR [edi+ebp*1-0x3f51bb75],bl
  40edf8:	pop    ebx
  40edf9:	sub    eax,0x39b74399
  40edfe:	jp     0x40ee34
  40ee00:	repnz (bad) 
  40ee02:	sub    al,0x22
  40ee04:	dec    esp
  40ee05:	icebp  
  40ee06:	inc    eax
  40ee07:	out    dx,eax
  40ee08:	add    al,0x24
  40ee0a:	cmp    eax,0x966fb1f3
  40ee0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ee10:	sbb    BYTE PTR [ebx],0x6d
  40ee13:	dec    esp
  40ee14:	xchg   edx,eax
  40ee15:	push   edi
  40ee16:	repnz vmovapd YMMWORD PTR [eax+0x27],ymm0
  40ee1c:	xor    DWORD PTR [edx+0x30d3cd47],ebp
  40ee22:	pop    ss
  40ee23:	and    esp,ebp
  40ee25:	sbb    al,0x5
  40ee27:	mov    ah,0xc3
  40ee29:	xchg   edi,eax
  40ee2a:	push   ecx
  40ee2b:	and    eax,0xfaa497ef
  40ee30:	xchg   ebx,eax
  40ee31:	add    esi,DWORD PTR [edi]
  40ee33:	test   DWORD PTR ds:0xd22f4cfa,ebp
  40ee39:	or     DWORD PTR [esi-0x36],esp
  40ee3c:	call   0x5d55:0xfdb8cd98
  40ee43:	bound  esi,QWORD PTR [ecx]
  40ee45:	push   edi
  40ee46:	xlat   BYTE PTR ds:[ebx]
  40ee47:	out    dx,al
  40ee48:	or     ebx,DWORD PTR [edx+0x31e9b120]
  40ee4e:	jg     0x40ee74
  40ee50:	dec    edx
  40ee51:	pop    ss
  40ee52:	stc    
  40ee53:	test   DWORD PTR [ebx+0x4741f473],edx
  40ee59:	xor    DWORD PTR [ebp-0x2b],esp
  40ee5c:	jae    0x40ee73
  40ee5e:	mov    ds:0x9692632b,eax
  40ee63:	(bad)  
  40ee64:	leave  
  40ee65:	sti    
  40ee66:	fidivr DWORD PTR [esi]
  40ee68:	fisttp QWORD PTR [esi]
  40ee6a:	adc    DWORD PTR [edx-0x25],ebp
  40ee6d:	cdq    
  40ee6e:	loopne 0x40eebc
  40ee70:	mov    ecx,0x15ae894b
  40ee75:	xor    al,BYTE PTR [esi-0x5c]
  40ee78:	or     esp,DWORD PTR [ecx-0x543aa69c]
  40ee7e:	cmp    eax,0xb5134678
  40ee83:	jp     0x40eee8
  40ee85:	xchg   esi,eax
  40ee86:	dec    ecx
  40ee87:	hlt    
  40ee88:	mov    ecx,0x5c46b4fe
  40ee8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ee8e:	test   eax,0x69d5bc3f
  40ee93:	xor    ebp,DWORD PTR [ebp+0x6]
  40ee96:	sub    eax,0x9810e7ed
  40ee9b:	leave  
  40ee9c:	daa    
  40ee9d:	aad    0xaa
  40ee9f:	in     eax,dx
  40eea0:	push   esp
  40eea1:	ins    DWORD PTR es:[edi],dx
  40eea2:	shl    BYTE PTR [ebp+0x3891d558],1
  40eea8:	xor    ah,cl
  40eeaa:	jmp    0x40ee80
  40eeac:	xchg   ecx,eax
  40eead:	sbb    edx,DWORD PTR [eax]
  40eeaf:	retf   0x2487
  40eeb2:	retf   0xc3b1
  40eeb5:	and    bh,BYTE PTR [ebx-0x14]
  40eeb8:	neg    eax
  40eeba:	cmp    al,0xec
  40eebc:	mov    dh,0x50
  40eebe:	jae    0x40ee8d
  40eec0:	shl    DWORD PTR [edi+0x20],0xf2
  40eec4:	xor    eax,0xef33cc9d
  40eec9:	jmp    0x7e54ac7f
  40eece:	les    edx,FWORD PTR [ebx-0x78902df9]
  40eed4:	sub    DWORD PTR [ecx+eiz*4-0x80],edx
  40eed8:	cdq    
  40eed9:	sti    
  40eeda:	adc    dl,BYTE PTR [edi+0x4f]
  40eedd:	idiv   BYTE PTR fs:[edx-0x3872d7f9]
  40eee4:	test   al,0x4f
  40eee6:	inc    ebx
  40eee7:	mov    dl,0x8e
  40eee9:	test   DWORD PTR [ebp-0x79],ebp
  40eeec:	imul   edi,DWORD PTR [edi-0x5b],0x9602dad2
  40eef3:	aad    0xba
  40eef5:	out    dx,al
  40eef6:	dec    esi
  40eef7:	cmp    ebx,DWORD PTR [ebx+0x4cd36520]
  40eefd:	pop    eax
  40eefe:	mov    fs,WORD PTR [ecx+0x33]
  40ef01:	xor    ecx,DWORD PTR [ebx+0x6463abdf]
  40ef07:	sbb    ah,ah
  40ef09:	rcl    DWORD PTR [edi+0x1e],0xd0
  40ef0d:	je     0x40ef35
  40ef0f:	aas    
  40ef10:	and    DWORD PTR [ebx+0x5b],ecx
  40ef13:	in     eax,dx
  40ef14:	pop    ebp
  40ef15:	pop    ds
  40ef16:	leave  
  40ef17:	in     al,0x9e
  40ef19:	in     eax,dx
  40ef1a:	sub    ecx,DWORD PTR [ecx]
  40ef1c:	mov    dl,0x53
  40ef1e:	or     al,0xd4
  40ef20:	(bad)  
  40ef21:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ef23:	test   ebx,0xe6b3fdc4
  40ef29:	sahf   
  40ef2a:	scas   al,BYTE PTR es:[edi]
  40ef2b:	popa   
  40ef2c:	pop    esi
  40ef2d:	jp     0x40eebf
  40ef2f:	imul   edx,DWORD PTR [edi-0x5a],0x7a8d03df
  40ef36:	pop    edx
  40ef37:	jne    0x40eed9
  40ef39:	push   edi
  40ef3a:	ficom  DWORD PTR [eax]
  40ef3c:	fldcw  WORD PTR [eax-0x6a801540]
  40ef42:	pop    edi
  40ef43:	ret    
  40ef44:	loope  0x40ef0c
  40ef46:	xchg   BYTE PTR [ebx+ebp*2],ah
  40ef49:	jmp    0x7280:0x7f59d1eb
  40ef50:	(bad)  
  40ef51:	aad    0x71
  40ef53:	jge    0x40ef13
  40ef55:	(bad)  
  40ef56:	adc    eax,0x919a8373
  40ef5b:	(bad)  
  40ef5d:	in     al,dx
  40ef5e:	inc    esp
  40ef5f:	addr16 inc ebx
  40ef61:	inc    di
  40ef63:	ror    DWORD PTR [esi+edx*8+0x6c],0xb7
  40ef68:	icebp  
  40ef69:	push   eax
  40ef6a:	shl    edi,0xe
  40ef6d:	stos   DWORD PTR es:[edi],eax
  40ef6e:	jg     0x40ef2c
  40ef70:	jnp    0x40efc3
  40ef72:	and    al,0x27
  40ef74:	cs and ecx,eax
  40ef77:	jnp    0x7f9bd845
  40ef7d:	retf   0x3e28
  40ef80:	cli    
  40ef81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ef82:	xchg   edi,eax
  40ef83:	push   ds
  40ef84:	ja     0x40effd
  40ef86:	rol    BYTE PTR [eax+eax*2-0x7a],cl
  40ef8a:	mov    ebp,0xc473fc84
  40ef8f:	rcr    DWORD PTR [ebx+0x28c8b45e],cl
  40ef95:	fadd   DWORD PTR [esi]
  40ef97:	and    DWORD PTR [ebx],edi
  40ef99:	sbb    DWORD PTR [ecx-0x7a],0xffffffa6
  40ef9d:	xchg   edx,eax
  40ef9e:	adc    DWORD PTR cs:[ebp-0x7b],eax
  40efa2:	pslld  mm2,mm6
  40efa5:	addr16 pop ecx
  40efa7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40efa8:	shl    DWORD PTR ds:0x85894941,0x67
  40efaf:	nop
  40efb0:	add    al,0xaa
  40efb2:	jl     0x40ef8c
  40efb4:	into   
  40efb5:	iret   
  40efb6:	xchg   ebp,eax
  40efb7:	pop    ss
  40efb8:	call   0xe874:0x32f75a6c
  40efbf:	mov    dl,0x15
  40efc1:	push   cs
  40efc2:	int    0x80
  40efc4:	xchg   ecx,eax
  40efc5:	xchg   edx,eax
  40efc6:	mov    esp,0x40152e8b
  40efcb:	mov    esi,0x372b9f1e
  40efd0:	add    esi,esp
  40efd2:	popf   
  40efd3:	mov    esp,0x869f4cb8
  40efd8:	lods   eax,DWORD PTR ds:[esi]
  40efd9:	dec    DWORD PTR [edx+eiz*1+0x248f22bd]
  40efe0:	xchg   ebp,eax
  40efe1:	jmp    0x89d:0x4fa92a8c
  40efe8:	adc    eax,0xf19df686
  40efed:	fwait
  40efee:	pop    eax
  40efef:	dec    esp
  40eff0:	pop    es
  40eff1:	push   cs
  40eff2:	pop    edi
  40eff3:	idiv   BYTE PTR [ebx-0x14]
  40eff6:	jo     0x40f023
  40eff8:	inc    ebp
  40eff9:	fist   DWORD PTR [esi+0x3b174a87]
  40efff:	sub    al,0x4b
  40f001:	and    BYTE PTR [esi],dl
  40f003:	sbb    eax,0x1852b8cc
  40f008:	fwait
  40f009:	(bad)  
  40f00a:	mov    al,ds:0x1ae544cd
  40f00f:	cdq    
  40f010:	les    ecx,FWORD PTR gs:[ebx+0x18f7496d]
  40f017:	xor    BYTE PTR [ebp-0x7443f3a9],dl
  40f01d:	outs   dx,DWORD PTR ds:[esi]
  40f01e:	mov    dl,0x86
  40f020:	push   edi
  40f021:	adc    DWORD PTR [ecx+0x7a],0x3f104e59
  40f028:	mov    esi,fs
  40f02a:	cmp    al,0x96
  40f02c:	ins    DWORD PTR es:[edi],dx
  40f02d:	push   ss
  40f02e:	jbe    0x40f02b
  40f030:	jno    0x40f05e
  40f032:	loope  0x40f04d
  40f034:	inc    ebp
  40f035:	shr    DWORD PTR es:[ecx-0xf],cl
  40f039:	jae    0x40eff9
  40f03b:	push   edi
  40f03c:	imul   ecx,ecx,0x2255942e
  40f042:	stos   DWORD PTR es:[edi],eax
  40f043:	and    BYTE PTR [eax],ch
  40f045:	or     BYTE PTR [ecx+0x7e],0x52
  40f049:	ja     0x40f08f
  40f04b:	adc    dl,BYTE PTR [edx-0x60b08f05]
  40f051:	jno    0x40f024
  40f053:	mov    eax,0x300705c5
  40f058:	xchg   ebx,eax
  40f059:	mov    ds:0xae268c7,al
  40f05e:	(bad)  
  40f05f:	fsubr  st(2),st
  40f061:	out    0x53,eax
  40f063:	bound  esp,QWORD PTR [esi]
  40f065:	mov    edx,0xc0fd39f8
  40f06a:	ins    BYTE PTR es:[edi],dx
  40f06b:	je     0x40f070
  40f06d:	xchg   BYTE PTR gs:[ebp+0xf],cl
  40f071:	mov    WORD PTR [eax-0x3d],?
  40f074:	outs   dx,DWORD PTR ds:[esi]
  40f075:	xor    BYTE PTR [ebx-0x4d84846a],bh
  40f07b:	adc    ebx,DWORD PTR ds:0x362e3be5
  40f081:	cmp    al,0x3b
  40f083:	adc    DWORD PTR gs:[edx+esi*8],eax
  40f087:	jno    0x40f0f0
  40f089:	mov    bh,0x19
  40f08b:	nop
  40f08c:	xlat   BYTE PTR ds:[ebx]
  40f08d:	inc    ebp
  40f08e:	xor    dh,dh
  40f090:	jns    0x40f026
  40f092:	xchg   esp,eax
  40f093:	xor    eax,DWORD PTR [ebp+esi*8-0x6]
  40f097:	cmp    al,0xe7
  40f099:	cdq    
  40f09a:	(bad)  
  40f09b:	and    BYTE PTR [eax+0x43],bl
  40f09e:	cdq    
  40f09f:	pushf  
  40f0a0:	ficom  WORD PTR [esp+eiz*4+0x15]
  40f0a4:	sub    esi,DWORD PTR [ebx]
  40f0a6:	dec    esp
  40f0a7:	adc    bh,BYTE PTR [esp+ebp*4]
  40f0aa:	(bad)  
  40f0ab:	loope  0x40f08b
  40f0ad:	sub    BYTE PTR [edx+0x2b082217],cl
  40f0b3:	sbb    BYTE PTR [ebx-0x43c416ef],0x46
  40f0ba:	jmp    0xde997701
  40f0bf:	test   al,0x57
  40f0c1:	out    dx,eax
  40f0c2:	(bad)  
  40f0c3:	jo     0x40f093
  40f0c5:	xor    bh,BYTE PTR [ecx+0x102511a9]
  40f0cb:	popf   
  40f0cc:	mov    ds:0xd3bef0e0,eax
  40f0d1:	jns    0x40f0bf
  40f0d3:	or     cl,BYTE PTR [ebx-0x38ccfd9e]
  40f0d9:	std    
  40f0da:	cmp    ecx,DWORD PTR [edx*4+0x578c58d]
  40f0e1:	push   cs
  40f0e2:	imul   ecx,DWORD PTR [esi+ecx*4-0x2b],0xcedec6a6
  40f0ea:	cmp    BYTE PTR [edx+edx*1-0x14],0xdb
  40f0ef:	bound  edx,QWORD PTR [edx+0x69]
  40f0f2:	retf   
  40f0f3:	jne    0x40f124
  40f0f5:	fwait
  40f0f6:	loope  0x40f081
  40f0f8:	mov    ds:0x6979f529,al
  40f0fd:	ds std 
  40f0ff:	cmp    DWORD PTR [esi-0x66],ebx
  40f102:	stos   DWORD PTR es:[edi],eax
  40f103:	enter  0xc5f3,0x9
  40f107:	and    eax,0xe05e2636
  40f10c:	cdq    
  40f10d:	retf   
  40f10e:	pop    eax
  40f10f:	iret   
  40f110:	mov    ds:0xa5f2745b,eax
  40f115:	test   DWORD PTR [ebx+eax*4-0x23604271],esp
  40f11c:	inc    esi
  40f11d:	push   ss
  40f11e:	jl     0x40f0b7
  40f120:	push   esp
  40f121:	adc    BYTE PTR [edx-0x51],bh
  40f124:	sahf   
  40f125:	sbb    DWORD PTR [edx],esp
  40f127:	cs aas 
  40f129:	pop    ds
  40f12a:	push   esi
  40f12b:	inc    esi
  40f12c:	dec    edi
  40f12d:	loope  0x40f18e
  40f12f:	and    eax,0x96023087
  40f134:	sahf   
  40f135:	jecxz  0x40f148
  40f137:	mov    ebp,0xafcbe83d
  40f13c:	add    cl,BYTE PTR [ebx-0xfc4f38b]
  40f142:	mov    eax,DWORD PTR [ebp-0x4]
  40f145:	je     0x40cd96
  40f14b:	xor    eax,edx
  40f14d:	add    eax,ecx
  40f14f:	mov    ecx,DWORD PTR [ebp+0xc]
  40f152:	imul   eax,ecx
  40f155:	add    eax,DWORD PTR [ebp+0x8]
  40f158:	mov    DWORD PTR [ebp+0xc],eax
  40f15b:	mov    eax,DWORD PTR [ebp+0xc]
  40f15e:	pop    esi
  40f15f:	leave  
  40f160:	ret    0x8
  40f163:	push   ebp
  40f164:	mov    ebp,esp
  40f166:	push   ecx
  40f167:	or     eax,0x63ef
  40f16c:	mov    DWORD PTR [ebp-0x4],0xf89c85b1
  40f173:	adc    DWORD PTR ds:0x429004,0x1463
  40f17d:	mov    eax,DWORD PTR [ebp-0x4]
  40f180:	mov    edx,DWORD PTR [ebp+0x10]
  40f183:	mov    ecx,DWORD PTR ds:0x42b010
  40f189:	add    DWORD PTR ds:0x42a000,ecx
  40f18f:	mov    ecx,0x7510896
  40f194:	neg    DWORD PTR ds:0x42b010
  40f19a:	xor    eax,ecx
  40f19c:	add    eax,0x3272dd
  40f1a1:	and    DWORD PTR ds:0x429010,0xb4c
  40f1ab:	mov    DWORD PTR [edx],eax
  40f1ad:	and    DWORD PTR ds:0x42c01c,0x0
  40f1b7:	jmp    0x40f1c9
  40f1bc:	mov    edx,DWORD PTR ds:0x42c01c
  40f1c2:	inc    edx
  40f1c3:	mov    DWORD PTR ds:0x42c01c,edx
  40f1c9:	cmp    DWORD PTR ds:0x42c01c,0x1b
  40f1d0:	jae    0x40f1f8
  40f1d6:	cmp    DWORD PTR ds:0x42c01c,0x28
  40f1dd:	jne    0x40f1f3
  40f1e3:	push   0x22f2
  40f1e8:	push   0x42e134
  40f1ed:	call   DWORD PTR ds:0x42ed5d
  40f1f3:	jmp    0x40f1bc
  40f1f8:	mov    eax,DWORD PTR [ebp+0xc]
  40f1fb:	or     DWORD PTR ds:0x42a004,ecx
  40f201:	xor    eax,ecx
  40f203:	push   esi
  40f204:	mov    esi,DWORD PTR [ebp+0x10]
  40f207:	mov    edx,0x3272dd
  40f20c:	add    eax,edx
  40f20e:	mov    DWORD PTR [esi+0x4],eax
  40f211:	mov    eax,DWORD PTR [ebp+0x14]
  40f214:	mov    esi,DWORD PTR [ebp+0x10]
  40f217:	mov    DWORD PTR [esi+0x8],eax
  40f21a:	mov    eax,DWORD PTR [ebp+0x18]
  40f21d:	mov    esi,DWORD PTR [ebp+0x10]
  40f220:	mov    DWORD PTR [esi+0xc],eax
  40f223:	mov    eax,DWORD PTR [ebp+0x1c]
  40f226:	mov    esi,DWORD PTR [ebp+0x10]
  40f229:	mov    DWORD PTR [esi+0x10],eax
  40f22c:	mov    eax,DWORD PTR [ebp+0x8]
  40f22f:	xor    eax,ecx
  40f231:	add    eax,edx
  40f233:	pop    esi
  40f234:	leave  
  40f235:	ret    0x18
  40f238:	push   ebp
  40f239:	mov    ebp,esp
  40f23b:	sub    esp,0xa4
  40f241:	adc    eax,0x77b8
  40f246:	mov    ecx,DWORD PTR [ebp+0x8]
  40f249:	adc    DWORD PTR ds:0x429000,edi
  40f24f:	mov    eax,0x8a89
  40f254:	adc    DWORD PTR ds:0x42900c,0x429028
  40f25e:	xor    ax,WORD PTR [ecx+0x20]
  40f262:	mov    ecx,DWORD PTR ds:0x429028
  40f268:	and    DWORD PTR ds:0x42b00c,ecx
  40f26e:	mov    ecx,0x3b4c
  40f273:	dec    DWORD PTR ds:0x42d014
  40f279:	add    ax,cx
  40f27c:	movzx  eax,ax
  40f27f:	add    ecx,0x1468
  40f285:	mov    DWORD PTR [ebp-0x18],eax
  40f288:	mov    BYTE PTR [ebp-0x1],0x7d
  40f28c:	mov    ecx,DWORD PTR ds:0x412000
  40f292:	mov    ecx,DWORD PTR [ecx]
  40f294:	adc    DWORD PTR ds:0x42d01c,ecx
  40f29a:	lea    eax,[ebp-0x1]
  40f29d:	sub    DWORD PTR ds:0x42c014,0xae5
  40f2a7:	mov    DWORD PTR [ebp-0x10],eax
  40f2aa:	mov    al,BYTE PTR [ebp-0x1]
  40f2ad:	inc    ecx
  40f2ae:	mov    ecx,DWORD PTR [ebp-0x10]
  40f2b1:	xor    al,0x71
  40f2b3:	adc    DWORD PTR ds:0x42b018,0x264
  40f2bd:	sub    al,0xb
  40f2bf:	adc    DWORD PTR ds:0x429014,0x5cc7
  40f2c9:	mov    BYTE PTR [ecx],al
  40f2cb:	mov    DWORD PTR ds:0x42b004,0x11
  40f2d5:	cmp    DWORD PTR ds:0x42b004,0x0
  40f2dc:	je     0x40f31e
  40f2e2:	cmp    DWORD PTR ds:0x42b004,0x1d
  40f2e9:	jne    0x40f304
  40f2ef:	push   0x42e000
  40f2f4:	push   DWORD PTR [ebp-0x18]
  40f2f7:	push   0x0
  40f2f9:	push   0x4fbc
  40f2fe:	call   DWORD PTR ds:0x42ed61
  40f304:	mov    eax,ds:0x42b004
  40f309:	dec    eax
  40f30a:	mov    ds:0x42b004,eax
  40f30f:	jmp    0x40f2d5
  40f314:	sbb    DWORD PTR ds:0x42d010,0x7483
  40f31e:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  40f325:	push   ebx
  40f326:	mov    DWORD PTR [ebp-0x8],0xf89c85b2
  40f32d:	mov    ecx,DWORD PTR [ebp-0x14]
  40f330:	push   esi
  40f331:	and    DWORD PTR ds:0x42a01c,0x0
  40f33b:	jmp    0x40f34d
  40f340:	mov    esi,DWORD PTR ds:0x42a01c
  40f346:	inc    esi
  40f347:	mov    DWORD PTR ds:0x42a01c,esi
  40f34d:	cmp    DWORD PTR ds:0x42a01c,0x1f
  40f354:	jae    0x40f3f6
  40f35a:	cmp    DWORD PTR ds:0x42a01c,0x21
  40f361:	jne    0x40f377
  40f367:	push   0x42c010
  40f36c:	push   0x562e
  40f371:	call   DWORD PTR ds:0x42ed65
  40f377:	jmp    0x40f340
  40f37c:	and    DWORD PTR ds:0x42d01c,0x0
  40f386:	xor    eax,eax
  40f388:	or     eax,DWORD PTR ds:0x42d01c
  40f38e:	inc    eax
  40f38f:	mov    ds:0x42d01c,eax
  40f394:	cmp    DWORD PTR ds:0x42d01c,0xb
  40f39b:	jne    0x40f3c1
  40f3a1:	push   DWORD PTR [ebp-0x24]
  40f3a4:	push   0x42a010
  40f3a9:	push   0x78c6
  40f3ae:	push   0x42e134
  40f3b3:	push   DWORD PTR [ebp-0x1c]
  40f3b6:	push   0x1e85
  40f3bb:	call   DWORD PTR ds:0x42ed6d
  40f3c1:	cmp    DWORD PTR ds:0x42d01c,0xa
  40f3c8:	jne    0x40f3d9
  40f3ce:	mov    eax,ds:0x42d01c
  40f3d3:	inc    eax
  40f3d4:	mov    ds:0x42d01c,eax
  40f3d9:	cmp    DWORD PTR ds:0x42d01c,0x18
  40f3e0:	jb     0x40f386
  40f3e6:	xor    eax,eax
  40f3e8:	xor    eax,DWORD PTR ds:0x411ff4
  40f3ee:	mov    eax,DWORD PTR [eax]
  40f3f0:	or     DWORD PTR ds:0x42b018,eax
  40f3f6:	mov    eax,0x7510896
  40f3fb:	sbb    DWORD PTR ds:0x42a01c,edx
  40f401:	xor    ecx,eax
  40f403:	or     esi,DWORD PTR ds:0x42a008
  40f409:	mov    esi,0x3272dd
  40f40e:	push   edi
  40f40f:	add    ecx,esi
  40f411:	jmp    0x40f435
  40f416:	mov    DWORD PTR ds:0x42a01c,0x2feb
  40f420:	mov    dl,BYTE PTR [ebp-0x1]
  40f423:	mov    BYTE PTR [ebp+ecx*1-0xa4],dl
  40f42a:	mov    DWORD PTR ds:0x42b01c,0x5ed5
  40f434:	inc    ecx
  40f435:	cmp    ecx,0x40
  40f438:	jb     0x40f416
  40f43e:	mov    DWORD PTR ds:0x429018,0x19
  40f448:	cmp    DWORD PTR ds:0x429018,0x0
  40f44f:	je     0x40f47c
  40f455:	cmp    DWORD PTR ds:0x429018,0x1d
  40f45c:	jne    0x40f468
  40f462:	call   DWORD PTR ds:0x42ed71
  40f468:	mov    edx,DWORD PTR ds:0x429018
  40f46e:	dec    edx
  40f46f:	mov    DWORD PTR ds:0x429018,edx
  40f475:	jmp    0x40f448
  40f47a:	not    edx
  40f47c:	mov    edx,DWORD PTR [ebp-0x14]
  40f47f:	sub    DWORD PTR ds:0x42c00c,0x42b014
  40f489:	xor    edx,eax
  40f48b:	adc    DWORD PTR ds:0x429024,0x42a018
  40f495:	add    edx,esi
  40f497:	mov    DWORD PTR ds:0x42b014,0x72c9
  40f4a1:	jmp    0x40f5bb
  40f4a6:	dec    DWORD PTR ds:0x429014
  40f4ac:	mov    edi,DWORD PTR [ebp+0x8]
  40f4af:	adc    ecx,DWORD PTR ds:0x42a018
  40f4b5:	mov    ecx,0x8a89
  40f4ba:	xor    cx,WORD PTR [edi+edx*4+0x2]
  40f4bf:	and    DWORD PTR ds:0x429008,0x0
  40f4c9:	jmp    0x40f4dd
  40f4ce:	xor    edi,edi
  40f4d0:	xor    edi,DWORD PTR ds:0x429008
  40f4d6:	inc    edi
  40f4d7:	mov    DWORD PTR ds:0x429008,edi
  40f4dd:	cmp    DWORD PTR ds:0x429008,0x10
  40f4e4:	jae    0x40f511
  40f4ea:	cmp    DWORD PTR ds:0x429008,0x19
  40f4f1:	jne    0x40f502
  40f4f7:	push   0x429018
  40f4fc:	call   DWORD PTR ds:0x42ed75
  40f502:	jmp    0x40f4ce
  40f507:	adc    DWORD PTR ds:0x42a010,0x20e4
  40f511:	mov    edi,0x3b4c
  40f516:	sub    DWORD PTR ds:0x42a014,0x7a80
  40f520:	add    cx,di
  40f523:	movzx  ecx,cx
  40f526:	neg    DWORD PTR ds:0x42b000
  40f52c:	mov    DWORD PTR [ebp-0x10],ecx
  40f52f:	and    DWORD PTR ds:0x42a000,0x0
  40f539:	jmp    0x40f54b
  40f53e:	mov    ecx,DWORD PTR ds:0x42a000
  40f544:	inc    ecx
  40f545:	mov    DWORD PTR ds:0x42a000,ecx
  40f54b:	cmp    DWORD PTR ds:0x42a000,0x1f
  40f552:	jae    0x40f57e
  40f558:	cmp    DWORD PTR ds:0x42a000,0x26
  40f55f:	jne    0x40f573
  40f565:	push   0x3463
  40f56a:	push   DWORD PTR [ebp-0x1c]
  40f56d:	call   DWORD PTR ds:0x42ed35
  40f573:	jmp    0x40f53e
  40f578:	or     ecx,0x6b07
  40f57e:	mov    ecx,DWORD PTR [ebp+0x8]
  40f581:	movzx  ecx,WORD PTR [ecx+edx*4]
  40f585:	mov    DWORD PTR ds:0x42a010,0x2266
  40f58f:	xor    ecx,0x8a89
  40f595:	add    ecx,edi
  40f597:	mov    DWORD PTR ds:0x42b018,0x196a
  40f5a1:	mov    edi,DWORD PTR [ebp-0x10]
  40f5a4:	mov    DWORD PTR ds:0x42a018,0x15ce
  40f5ae:	mov    BYTE PTR [ebp+edi*1-0xa4],cl
  40f5b5:	mov    ecx,0x651b
  40f5ba:	inc    edx
  40f5bb:	mov    ecx,DWORD PTR [ebp-0x18]
  40f5be:	mov    DWORD PTR ds:0x429020,0x7b55
  40f5c8:	cmp    edx,ecx
  40f5ca:	jne    0x40f4a6
  40f5d0:	mov    ecx,DWORD PTR [ebp-0x14]
  40f5d3:	mov    edx,DWORD PTR [ebp+0x10]
  40f5d6:	adc    DWORD PTR ds:0x429008,0x429014
  40f5e0:	xor    ecx,eax
  40f5e2:	mov    DWORD PTR ds:0x429028,0x35c1
  40f5ec:	add    ecx,esi
  40f5ee:	sub    DWORD PTR ds:0x429024,0xd80
  40f5f8:	mov    DWORD PTR [edx],ecx
  40f5fa:	add    ecx,0x553e
  40f600:	mov    ecx,DWORD PTR [ebp-0x14]
  40f603:	add    DWORD PTR ds:0x42901c,0xd2d
  40f60d:	xor    ecx,eax
  40f60f:	add    ecx,esi
  40f611:	mov    DWORD PTR ds:0x42d008,0x74bc
  40f61b:	mov    DWORD PTR [ebp-0x20],ecx
  40f61e:	mov    DWORD PTR ds:0x42a004,edi
  40f624:	mov    DWORD PTR [ebp+0x8],0xf89c85b5
  40f62b:	mov    DWORD PTR ds:0x429018,0x1d37
  40f635:	mov    DWORD PTR [ebp-0xc],0xf89c85a5
  40f63c:	mov    DWORD PTR ds:0x42901c,0x14b9
  40f646:	mov    DWORD PTR [ebp-0x1c],0xf89c95b5
  40f64d:	mov    DWORD PTR ds:0x42c000,edx
  40f653:	mov    ecx,DWORD PTR [ebp-0xc]
  40f656:	mov    DWORD PTR ds:0x42a018,0x1347
  40f660:	mov    DWORD PTR [ebp+0x8],ecx
  40f663:	mov    DWORD PTR ds:0x429014,0x4ea
  40f66d:	jmp    0x40f78d
  40f672:	sbb    DWORD PTR ds:0x42a018,0x42c008
  40f67c:	mov    ecx,DWORD PTR [ebp+0x8]
  40f67f:	and    edx,DWORD PTR ds:0x42c00c
  40f685:	mov    edx,DWORD PTR [ebp-0x8]
  40f688:	xor    DWORD PTR ds:0x42a008,0x42a018
  40f692:	xor    ecx,eax
  40f694:	xor    edx,eax
  40f696:	sub    ecx,edx
  40f698:	sub    edx,0x6561
  40f69e:	sub    ecx,esi
  40f6a0:	xor    ecx,eax
  40f6a2:	mov    DWORD PTR [ebp+0x8],ecx
  40f6a5:	mov    ecx,DWORD PTR [ebp+0x8]
  40f6a8:	mov    edx,DWORD PTR [ebp-0x64]
  40f6ab:	sub    DWORD PTR ds:0x42901c,0x6b48
  40f6b5:	lea    ecx,[edx+ecx*1+0x5708f2]
  40f6bc:	movzx  edx,WORD PTR ds:0x42900c
  40f6c3:	adc    DWORD PTR ds:0x42c00c,edx
  40f6c9:	mov    DWORD PTR [ebp-0x64],ecx
  40f6cc:	sbb    DWORD PTR ds:0x42a018,0x1891
  40f6d6:	mov    ecx,DWORD PTR [ebp+0x8]
  40f6d9:	dec    edx
  40f6da:	mov    edx,DWORD PTR [ebp-0x60]
  40f6dd:	lea    ecx,[edx+ecx*1+0x5708f2]
  40f6e4:	mov    DWORD PTR [ebp-0x60],ecx
  40f6e7:	sbb    DWORD PTR ds:0x42900c,0x79ab
  40f6f1:	mov    ecx,DWORD PTR [ebp+0x8]
  40f6f4:	add    DWORD PTR ds:0x42a01c,edi
  40f6fa:	mov    edx,DWORD PTR [ebp-0x5c]
  40f6fd:	lea    ecx,[edx+ecx*1+0x5708f3]
  40f704:	mov    DWORD PTR [ebp-0x5c],ecx
  40f707:	inc    DWORD PTR ds:0x429004
  40f70d:	mov    ecx,DWORD PTR [ebp+0x8]
  40f710:	sbb    DWORD PTR ds:0x42d018,edx
  40f716:	mov    edx,DWORD PTR [ebp-0x58]
  40f719:	and    DWORD PTR ds:0x42c008,0x42b004
  40f723:	lea    ecx,[edx+ecx*1+0x5708f0]
  40f72a:	dec    edx
  40f72b:	mov    DWORD PTR [ebp-0x58],ecx
  40f72e:	movzx  ecx,WORD PTR ds:0x429000
  40f735:	adc    DWORD PTR ds:0x42c008,ecx
  40f73b:	mov    ecx,DWORD PTR [ebp+0x8]
  40f73e:	mov    edx,DWORD PTR [ebp-0x54]
  40f741:	add    DWORD PTR ds:0x42d004,0x42a014
  40f74b:	lea    ecx,[edx+ecx*1+0x5708f1]
  40f752:	mov    DWORD PTR [ebp-0x54],ecx
  40f755:	xor    DWORD PTR ds:0x42d01c,0x80b
  40f75f:	mov    ecx,DWORD PTR [ebp+0x8]
  40f762:	and    DWORD PTR ds:0x42d008,0x7467
  40f76c:	mov    edx,DWORD PTR [ebp-0x50]
  40f76f:	or     DWORD PTR ds:0x42c004,0x42a000
  40f779:	lea    ecx,[edx+ecx*1+0x5708fe]
  40f780:	add    DWORD PTR ds:0x42c010,0x5221
  40f78a:	mov    DWORD PTR [ebp-0x50],ecx
  40f78d:	or     ecx,DWORD PTR ds:0x429028
  40f793:	mov    ecx,DWORD PTR [ebp+0x8]
  40f796:	xor    ecx,eax
  40f798:	add    ecx,esi
  40f79a:	mov    DWORD PTR ds:0x42c004,0x633d
  40f7a4:	jne    0x40f672
  40f7aa:	jmp    0x411e4d
  40f7af:	neg    DWORD PTR ds:0x42901c
  40f7b5:	mov    ecx,DWORD PTR [ebp-0x1c]
  40f7b8:	mov    edx,DWORD PTR [ebp-0x8]
  40f7bb:	sub    DWORD PTR ds:0x429008,0x429014
  40f7c5:	xor    ecx,eax
  40f7c7:	xor    edx,eax
  40f7c9:	sbb    DWORD PTR ds:0x42c018,0x25ac
  40f7d3:	sub    ecx,edx
  40f7d5:	or     DWORD PTR ds:0x42d000,0x429014
  40f7df:	sub    ecx,esi
  40f7e1:	xor    ecx,eax
  40f7e3:	mov    DWORD PTR ds:0x42b018,0x1de
  40f7ed:	mov    DWORD PTR [ebp-0x1c],ecx
  40f7f0:	mov    DWORD PTR ds:0x42c000,0x7d6a
  40f7fa:	mov    ecx,DWORD PTR [ebp-0xc]
  40f7fd:	mov    DWORD PTR ds:0x429028,0x9e0
  40f807:	mov    DWORD PTR [ebp+0x8],ecx
  40f80a:	jmp    0x40f91d
  40f80f:	mov    ecx,DWORD PTR [ebp+0x8]
  40f812:	mov    edx,DWORD PTR [ebp-0x8]
  40f815:	xor    ecx,eax
  40f817:	adc    DWORD PTR ds:0x42c008,ecx
  40f81d:	xor    edx,eax
  40f81f:	xor    DWORD PTR ds:0x42900c,0x3273
  40f829:	sub    ecx,edx
  40f82b:	sub    ecx,esi
  40f82d:	or     edi,edi
  40f82f:	xor    ecx,eax
  40f831:	mov    DWORD PTR [ebp+0x8],ecx
  40f834:	and    DWORD PTR ds:0x429020,0x0
  40f83e:	jmp    0x40f850
  40f843:	mov    edi,DWORD PTR ds:0x429020
  40f849:	inc    edi
  40f84a:	mov    DWORD PTR ds:0x429020,edi
  40f850:	cmp    DWORD PTR ds:0x429020,0x1b
  40f857:	jae    0x40f8a8
  40f85d:	cmp    DWORD PTR ds:0x429020,0x6
  40f864:	jne    0x40f87f
  40f86a:	push   0x6ce2
  40f86f:	push   0x42d018
  40f874:	push   0x18a6
  40f879:	call   DWORD PTR ds:0x42ed39
  40f87f:	cmp    DWORD PTR ds:0x429020,0x5
  40f886:	jne    0x40f899
  40f88c:	mov    edi,DWORD PTR ds:0x429020
  40f892:	inc    edi
  40f893:	mov    DWORD PTR ds:0x429020,edi
  40f899:	jmp    0x40f843
  40f89e:	and    DWORD PTR ds:0x42b004,0x42b01c
  40f8a8:	mov    ecx,DWORD PTR [ebp+0x8]
  40f8ab:	mov    edx,DWORD PTR [ebp+0x8]
  40f8ae:	and    DWORD PTR ds:0x42d010,0x0
  40f8b8:	mov    edi,DWORD PTR ds:0x42d010
  40f8be:	inc    edi
  40f8bf:	mov    DWORD PTR ds:0x42d010,edi
  40f8c5:	cmp    DWORD PTR ds:0x42d010,0x5
  40f8cc:	jne    0x40f8e2
  40f8d2:	push   0x42e11d
  40f8d7:	push   0x42e110
  40f8dc:	call   DWORD PTR ds:0x42ed3d
  40f8e2:	cmp    DWORD PTR ds:0x42d010,0x4
  40f8e9:	jne    0x40f8fc
  40f8ef:	mov    edi,DWORD PTR ds:0x42d010
  40f8f5:	inc    edi
  40f8f6:	mov    DWORD PTR ds:0x42d010,edi
  40f8fc:	cmp    DWORD PTR ds:0x42d010,0x15
  40f903:	jb     0x40f8b8
  40f909:	imul   edx,edx,0x5708f2
  40f90f:	xor    ecx,eax
  40f911:	add    ecx,esi
  40f913:	lea    ecx,[ebp+ecx*4-0x64]
  40f917:	mov    edi,DWORD PTR [ecx]
  40f919:	add    edx,edi
  40f91b:	mov    DWORD PTR [ecx],edx
  40f91d:	mov    ecx,DWORD PTR [ebp+0x8]
  40f920:	xor    ecx,eax
  40f922:	add    ecx,esi
  40f924:	jne    0x40f80f
  40f92a:	mov    ecx,DWORD PTR [ebp-0x20]
  40f92d:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  40f934:	mov    dl,BYTE PTR [ebp-0x1]
  40f937:	cmp    cl,dl
  40f939:	je     0x411dae
  40f93f:	mov    ecx,DWORD PTR [ebp-0x20]
  40f942:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  40f949:	mov    edx,DWORD PTR [ebp+0xc]
  40f94c:	cmp    cl,BYTE PTR [edx]
  40f94e:	jne    0x411e5f
  40f954:	mov    ecx,DWORD PTR [ebp-0x14]
  40f957:	mov    edx,DWORD PTR [ebp+0xc]
  40f95a:	movsx  edx,BYTE PTR [edx]
  40f95d:	xor    ecx,eax
  40f95f:	add    ecx,esi
  40f961:	cmp    edx,ecx
  40f963:	mov    ecx,DWORD PTR [ebp-0xc]
  40f966:	mov    DWORD PTR [ebp+0x8],ecx
  40f969:	mov    ecx,DWORD PTR [ebp+0x8]
  40f96c:	je     0x411ed9
  40f972:	jmp    0x40f9a7
  40f977:	mov    ecx,DWORD PTR [ebp+0x8]
  40f97a:	mov    edx,DWORD PTR [ebp-0x8]
  40f97d:	xor    ecx,eax
  40f97f:	xor    edx,eax
  40f981:	sub    ecx,edx
  40f983:	sub    ecx,esi
  40f985:	xor    ecx,eax
  40f987:	mov    DWORD PTR [ebp+0x8],ecx
  40f98a:	mov    ecx,DWORD PTR [ebp+0x8]
  40f98d:	mov    edx,DWORD PTR [ebp+0x8]
  40f990:	xor    ecx,eax
  40f992:	imul   edx,edx,0x5708f2
  40f998:	add    ecx,esi
  40f99a:	lea    ecx,[ebp+ecx*4-0x64]
  40f99e:	mov    edi,DWORD PTR [ecx]
  40f9a0:	add    edx,edi
  40f9a2:	mov    DWORD PTR [ecx],edx
  40f9a4:	mov    ecx,DWORD PTR [ebp+0x8]
  40f9a7:	xor    ecx,eax
  40f9a9:	add    ecx,esi
  40f9ab:	jne    0x40f977
  40f9b1:	mov    ecx,DWORD PTR [ebp-0x14]
  40f9b4:	mov    edx,DWORD PTR [ebp+0x8]
  40f9b7:	xor    ecx,eax
  40f9b9:	xor    edx,eax
  40f9bb:	add    ecx,esi
  40f9bd:	add    edx,esi
  40f9bf:	cmp    ecx,edx
  40f9c1:	jae    0x411df3
  40f9c7:	lea    edx,[ecx-0x3272dd]
  40f9cd:	mov    DWORD PTR [ebp-0x18],edx
  40f9d0:	mov    edi,DWORD PTR [ebp-0x18]
  40f9d3:	mov    DWORD PTR [ebp-0x24],0x705fd0f
  40f9da:	lea    edx,[ebp-0x24]
  40f9dd:	mov    DWORD PTR [ebp-0x10],edx
  40f9e0:	mov    edx,DWORD PTR [ebp-0x10]
  40f9e3:	add    DWORD PTR [edx],0x705fa0f
  40f9e9:	mov    ebx,DWORD PTR [ebp-0x10]
  40f9ec:	xor    edi,eax
  40f9ee:	add    edi,DWORD PTR [ebx]
  40f9f0:	lea    edx,[ebp+ecx*4-0x64]
  40f9f4:	mov    ebx,DWORD PTR [edx]
  40f9f6:	xor    edi,ebx
  40f9f8:	mov    DWORD PTR [edx],edi
  40f9fa:	mov    edx,DWORD PTR [ebp+0x8]
  40f9fd:	xor    edx,eax
  40f9ff:	inc    ecx
  40fa00:	inc    DWORD PTR [ebp-0x18]
  40fa03:	add    edx,esi
  40fa05:	jmp    0x411da1
  40fa0a:	fstp   DWORD PTR [ebx]
  40fa0c:	sti    
  40fa0d:	sar    DWORD PTR [ebx-0x4f],1
  40fa10:	jnp    0x40fa2d
  40fa12:	inc    esi
  40fa13:	xchg   ebx,eax
  40fa14:	or     ch,BYTE PTR [eax]
  40fa16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fa17:	bound  esp,QWORD PTR [esi+0x7aca74da]
  40fa1d:	jp     0x40fa1a
  40fa1f:	pop    edi
  40fa20:	jp     0x40fa9c
  40fa22:	adc    eax,0x23347884
  40fa27:	push   edi
  40fa28:	jbe    0x40fa67
  40fa2a:	int3   
  40fa2b:	fcmovbe st,st(7)
  40fa2d:	jae    0x40f9ce
  40fa2f:	aad    0xc9
  40fa31:	push   ds
  40fa32:	stos   BYTE PTR es:[edi],al
  40fa33:	mov    eax,ds:0xf4fef24e
  40fa38:	mov    ah,0x65
  40fa3a:	mov    ch,0x6f
  40fa3c:	and    eax,0xce63449a
  40fa41:	push   ss
  40fa42:	inc    eax
  40fa43:	push   cs
  40fa44:	mov    bh,0x71
  40fa46:	repnz iret 
  40fa48:	je     0x40fa0b
  40fa4a:	neg    DWORD PTR [edx-0x2c]
  40fa4d:	xlat   BYTE PTR ds:[ebx]
  40fa4e:	sbb    al,0x84
  40fa50:	mov    esp,0x70a15b8a
  40fa55:	pop    edx
  40fa56:	scas   al,BYTE PTR es:[edi]
  40fa57:	lock fdiv QWORD PTR [ebp-0x110023c7]
  40fa5e:	or     DWORD PTR [ebx+0x5187edf0],0x20
  40fa65:	inc    ebp
  40fa66:	imul   edi,DWORD PTR [edx+0x2a],0xffffffd7
  40fa6a:	push   0x8548c534
  40fa6f:	fcom   DWORD PTR [eax-0x11]
  40fa72:	aaa    
  40fa73:	mov    BYTE PTR [ecx+0x4109fed2],cl
  40fa79:	push   cs
  40fa7a:	cmp    BYTE PTR [ecx+0x35],cl
  40fa7d:	test   BYTE PTR [ebp-0x2c3a796d],bh
  40fa83:	ins    BYTE PTR es:[edi],dx
  40fa84:	int    0xc1
  40fa86:	outs   dx,DWORD PTR ds:[esi]
  40fa87:	cs jae 0x40fa54
  40fa8a:	div    BYTE PTR [ebp-0x1f]
  40fa8d:	repnz push ds
  40fa8f:	arpl   WORD PTR [ecx],bp
  40fa91:	retf   0xf00a
  40fa94:	nop
  40fa95:	fcmovnb st,st(7)
  40fa97:	ds daa 
  40fa99:	ret    0x4e61
  40fa9c:	ja     0x40fa36
  40fa9e:	div    BYTE PTR [ecx+0x4c]
  40faa1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40faa2:	xor    BYTE PTR [eax],0x88
  40faa5:	aas    
  40faa6:	cs push cs
  40faa8:	xor    DWORD PTR [edi],esi
  40faaa:	pop    edx
  40faab:	mov    ecx,0x85ab635b
  40fab0:	mov    dl,0xad
  40fab2:	sbb    ebp,edi
  40fab4:	push   ss
  40fab5:	dec    ebp
  40fab6:	fistp  DWORD PTR [edx+0x62]
  40fab9:	aam    0xea
  40fabb:	push   0xefab9ebe
  40fac0:	scas   al,BYTE PTR es:[edi]
  40fac1:	daa    
  40fac2:	inc    esi
  40fac3:	adc    BYTE PTR [esp+ebp*4+0x35],bh
  40fac7:	add    ah,ah
  40fac9:	adc    dl,BYTE PTR [eax+0x19]
  40facc:	aam    0x15
  40face:	cmp    ecx,DWORD PTR [eax-0x4387cb0f]
  40fad4:	nop
  40fad5:	or     ebp,eax
  40fad7:	scas   eax,DWORD PTR es:[edi]
  40fad8:	push   ebx
  40fad9:	sub    al,0x3e
  40fadb:	mov    esp,0xfb89f9d8
  40fae0:	and    BYTE PTR [esi+0x7b],al
  40fae3:	dec    edi
  40fae4:	cmc    
  40fae5:	outs   dx,DWORD PTR ds:[esi]
  40fae6:	dec    ebp
  40fae7:	imul   ebp,DWORD PTR [eax+eax*2-0x20],0xf
  40faec:	or     ebx,DWORD PTR [edx+0x13]
  40faef:	jo     0x40fac3
  40faf1:	iret   
  40faf2:	push   0x65
  40faf4:	call   0x1255:0x9979a12f
  40fafb:	dec    eax
  40fafc:	inc    edx
  40fafd:	ss (bad) 
  40faff:	xor    esp,DWORD PTR ds:0xd06085fd
  40fb05:	cmp    bh,0x25
  40fb08:	mov    cs,edi
  40fb0a:	add    DWORD PTR [ecx],edx
  40fb0c:	jne    0x40fa93
  40fb0e:	lea    esi,[edi]
  40fb10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fb11:	pusha  
  40fb12:	imul   edi,DWORD PTR [ecx+0x41],0x5a0b741d
  40fb19:	dec    edi
  40fb1a:	aaa    
  40fb1b:	push   ds
  40fb1c:	addr16 in eax,0xd
  40fb1f:	jmp    0xc0c1d12f
  40fb24:	(bad)  
  40fb25:	dec    edi
  40fb26:	cmp    ecx,DWORD PTR [esp+ecx*2+0x5e]
  40fb2a:	or     BYTE PTR [ebx+0xcd77b83],0xc
  40fb31:	push   ecx
  40fb32:	popf   
  40fb33:	ret    0xa46
  40fb36:	fs mov eax,0x21230681
  40fb3c:	xchg   esp,eax
  40fb3d:	ja     0x40fae4
  40fb3f:	addr16 jle 0x40fae8
  40fb42:	adc    DWORD PTR [edi+ecx*4-0x7de30f0e],0x6313de10
  40fb4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fb4e:	data16 mov ah,0xf4
  40fb51:	and    BYTE PTR [ebx-0x5c],ah
  40fb54:	mov    eax,ds:0xd9a0e2a
  40fb59:	adc    DWORD PTR ds:0x3f4634df,edx
  40fb5f:	and    DWORD PTR [ecx+0x70],ecx
  40fb62:	sbb    al,0x7a
  40fb64:	lea    ebx,[ecx-0x6ed18d82]
  40fb6a:	scas   al,BYTE PTR es:[edi]
  40fb6b:	mov    bh,0x73
  40fb6d:	clc    
  40fb6e:	push   es
  40fb6f:	mov    al,0x6d
  40fb71:	adc    ch,ch
  40fb73:	addr16 or al,0x61
  40fb76:	out    dx,eax
  40fb77:	lods   al,BYTE PTR fs:[esi]
  40fb79:	add    eax,0x7338b527
  40fb7e:	add    DWORD PTR [ecx],ebp
  40fb80:	adc    al,BYTE PTR [esi+edi*1]
  40fb83:	xchg   esi,eax
  40fb84:	fcmovu st,st(3)
  40fb86:	stos   BYTE PTR es:[edi],al
  40fb87:	sbb    al,0xa4
  40fb89:	jge    0x40fb8b
  40fb8b:	in     al,0xd6
  40fb8d:	jae    0x40fb34
  40fb8f:	sar    ecx,cl
  40fb91:	mov    eax,0x2f45d9a2
  40fb96:	sub    DWORD PTR [ebx+0x5f],esi
  40fb99:	(bad)  
  40fb9b:	retf   0x6d69
  40fb9e:	ret    0xa6b7
  40fba1:	nop
  40fba2:	push   ss
  40fba3:	mov    ebp,0xc6d1fd29
  40fba8:	ficom  WORD PTR [ebx+ebx*1]
  40fbab:	cmp    ch,BYTE PTR [eax-0x47]
  40fbae:	pop    edx
  40fbaf:	rcr    BYTE PTR [eax+0x2c],0x1a
  40fbb3:	mov    bh,0x53
  40fbb5:	sbb    al,0x70
  40fbb7:	dec    esi
  40fbb8:	stc    
  40fbb9:	icebp  
  40fbba:	ficom  DWORD PTR [esi+edi*2]
  40fbbd:	push   0x5e
  40fbbf:	ins    BYTE PTR es:[edi],dx
  40fbc0:	into   
  40fbc1:	nop
  40fbc2:	xor    bh,BYTE PTR [eax+0x34]
  40fbc5:	fistp  DWORD PTR [edi]
  40fbc7:	rol    edi,cl
  40fbc9:	out    dx,al
  40fbca:	femms  
  40fbcc:	fs pop esp
  40fbce:	sub    edi,esp
  40fbd0:	mov    edi,0x4ca0ca28
  40fbd5:	bound  ebp,QWORD PTR [esi-0x3f]
  40fbd8:	xchg   ebp,eax
  40fbd9:	add    al,0x9c
  40fbdb:	cdq    
  40fbdc:	out    0xf4,al
  40fbde:	into   
  40fbdf:	inc    edx
  40fbe0:	mov    dl,0xe6
  40fbe2:	mov    eax,0xb661ea38
  40fbe7:	ds imul edx,edi,0xf94857f6
  40fbee:	aaa    
  40fbef:	jbe    0x40fc19
  40fbf1:	add    BYTE PTR [ebx],dl
  40fbf3:	sub    DWORD PTR [ecx],ebp
  40fbf5:	shr    BYTE PTR [ebp+0x2e76c938],cl
  40fbfb:	inc    ecx
  40fbfc:	or     eax,0x553836fe
  40fc01:	(bad)  
  40fc02:	xlat   BYTE PTR ds:[ebx]
  40fc03:	dec    edi
  40fc04:	in     eax,dx
  40fc05:	adc    DWORD PTR ds:0x770c6696,0xffffffb0
  40fc0c:	xor    al,0x93
  40fc0e:	push   ecx
  40fc0f:	xchg   ebp,eax
  40fc10:	clc    
  40fc11:	retf   0x2e10
  40fc14:	sar    BYTE PTR [edx-0x70],cl
  40fc17:	in     al,dx
  40fc18:	push   ecx
  40fc19:	fs in  eax,0x52
  40fc1c:	loopne 0x40fbd2
  40fc1e:	lods   eax,DWORD PTR ds:[esi]
  40fc1f:	je     0x40fbe8
  40fc21:	ins    BYTE PTR es:[edi],dx
  40fc22:	and    al,0xc8
  40fc24:	dec    esp
  40fc25:	lods   eax,DWORD PTR ds:[esi]
  40fc26:	push   0x48d0134f
  40fc2b:	les    edi,FWORD PTR [ecx+0x29]
  40fc2e:	inc    ebp
  40fc2f:	cmp    ah,bl
  40fc31:	loope  0x40fc34
  40fc33:	jmp    0xbe65a748
  40fc38:	rcl    BYTE PTR [ecx+0x64],1
  40fc3b:	dec    esp
  40fc3c:	(bad)  
  40fc3d:	ins    DWORD PTR es:[edi],dx
  40fc3e:	aas    
  40fc3f:	inc    ebp
  40fc40:	aaa    
  40fc41:	pop    ecx
  40fc42:	enter  0x85ce,0xa7
  40fc46:	mov    al,BYTE PTR [ecx+eax*2-0x45]
  40fc4a:	cs jne 0x40fc44
  40fc4d:	inc    ecx
  40fc4e:	lock jmp 0xeaf6:0x493d6ba5
  40fc56:	xchg   DWORD PTR [ebx-0x3cf4b00e],ecx
  40fc5c:	push   ecx
  40fc5d:	test   ah,ah
  40fc5f:	(bad)  [edx-0x12]
  40fc62:	pushf  
  40fc63:	outs   dx,BYTE PTR ds:[esi]
  40fc64:	mov    al,ds:0xcfbba5ac
  40fc69:	or     DWORD PTR [eax+esi*4+0x3c],0x4d
  40fc6e:	popf   
  40fc6f:	pop    edx
  40fc70:	or     eax,0x6ca966e9
  40fc75:	in     al,0xb9
  40fc77:	xchg   ecx,eax
  40fc78:	and    ebx,DWORD PTR [edi]
  40fc7a:	inc    edi
  40fc7b:	pop    ebp
  40fc7c:	pop    eax
  40fc7d:	push   edx
  40fc7e:	test   DWORD PTR [esi+0x50],esi
  40fc81:	dec    edx
  40fc82:	test   eax,0xe94961fd
  40fc87:	jle    0x40fc33
  40fc89:	out    dx,al
  40fc8a:	dec    ebx
  40fc8b:	in     al,dx
  40fc8c:	jmp    0x40fccc
  40fc8e:	or     ch,dh
  40fc90:	cmp    eax,0x118e268b
  40fc95:	jbe    0x40fc73
  40fc97:	mov    ah,0xde
  40fc99:	jl     0x40fceb
  40fc9b:	cmp    eax,0x6ab7ffd9
  40fca0:	jbe    0x40fcdd
  40fca2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fca3:	inc    ebp
  40fca4:	ja     0x40fd11
  40fca6:	loope  0x40fd02
  40fca8:	les    esi,FWORD PTR [ebx]
  40fcaa:	jmp    0x4c17:0xbb75a0ef
  40fcb1:	fdivp  st(4),st
  40fcb3:	sbb    esp,esp
  40fcb5:	xlat   BYTE PTR ds:[ebx]
  40fcb6:	cmc    
  40fcb7:	and    bl,ah
  40fcb9:	js     0x40fc89
  40fcbb:	mov    al,0x9a
  40fcbd:	je     0x40fcf8
  40fcbf:	data16 div BYTE PTR [ebx-0x61649b7d]
  40fcc6:	jmp    0xd78ec2c6
  40fccb:	fcomp  QWORD PTR [ebx-0x172fb11f]
  40fcd1:	popa   
  40fcd2:	cmp    eax,0x6977b075
  40fcd7:	add    al,0x67
  40fcd9:	paddb  mm5,QWORD PTR [eax+ecx*1+0x722464bb]
  40fce1:	and    eax,0xce7ddc2b
  40fce6:	xchg   ebp,eax
  40fce7:	sar    BYTE PTR [esi-0x5d],0xa4
  40fceb:	(bad)  
  40fcec:	jns    0x40fcaa
  40fcee:	stos   BYTE PTR es:[edi],al
  40fcef:	ffreep st(3)
  40fcf1:	enter  0x5dac,0x30
  40fcf5:	mov    esi,0x6e563702
  40fcfa:	inc    edi
  40fcfb:	push   0x25528d4a
  40fd00:	cmp    ah,dh
  40fd02:	jmp    0x40fd1c
  40fd04:	push   edi
  40fd05:	cwde   
  40fd06:	pop    esi
  40fd07:	cld    
  40fd08:	mov    cl,0xd4
  40fd0a:	mov    WORD PTR [edx+0x53a2bb1c],gs
  40fd10:	and    DWORD PTR [edx],ebx
  40fd12:	and    al,0xa8
  40fd14:	adc    eax,0xb8024fa9
  40fd19:	push   esp
  40fd1a:	call   0x90d97055
  40fd1f:	dec    esi
  40fd20:	mov    BYTE PTR [esp+eax*8+0x623d6311],al
  40fd27:	test   al,0xeb
  40fd29:	inc    ecx
  40fd2a:	jae    0x40fccf
  40fd2c:	mov    ebp,0x3cf291ad
  40fd31:	scas   al,BYTE PTR es:[edi]
  40fd32:	push   esi
  40fd33:	mov    es,WORD PTR [esi+0x52]
  40fd36:	xor    esi,ebp
  40fd38:	mov    cl,0xa3
  40fd3a:	cld    
  40fd3b:	xor    eax,0xb3273c42
  40fd40:	pop    ebx
  40fd41:	push   ebx
  40fd42:	xor    BYTE PTR [edx+0x10],bl
  40fd45:	cmp    esi,DWORD PTR [ecx-0x3a]
  40fd48:	dec    ecx
  40fd49:	popf   
  40fd4a:	jp     0x40fdbf
  40fd4c:	js     0x40fd84
  40fd4e:	mov    ecx,DWORD PTR [esi]
  40fd50:	lods   al,BYTE PTR ds:[esi]
  40fd51:	adc    BYTE PTR [ebx-0x6c],bl
  40fd54:	mov    bh,bl
  40fd56:	stos   DWORD PTR es:[edi],eax
  40fd57:	inc    edi
  40fd58:	out    0x50,eax
  40fd5a:	jb     0x40fdac
  40fd5c:	jnp    0x40fd93
  40fd5e:	popf   
  40fd5f:	rol    BYTE PTR [ecx-0x54],cl
  40fd62:	add    DWORD PTR [ebx],edx
  40fd64:	call   0x83d9:0x254666b0
  40fd6b:	das    
  40fd6c:	in     eax,dx
  40fd6d:	dec    esp
  40fd6e:	aam    0x1d
  40fd70:	hlt    
  40fd71:	dec    ecx
  40fd72:	pop    ebp
  40fd73:	and    eax,0x312373ed
  40fd78:	cmp    BYTE PTR [ecx],0x22
  40fd7b:	or     al,0xb
  40fd7d:	lock inc edx
  40fd7f:	rcl    BYTE PTR [ebx-0x4eee86d5],1
  40fd85:	push   edx
  40fd86:	push   0x3c292a9c
  40fd8b:	out    dx,al
  40fd8c:	stos   DWORD PTR es:[edi],eax
  40fd8d:	inc    ecx
  40fd8e:	and    al,0x5c
  40fd90:	pop    es
  40fd91:	out    dx,al
  40fd92:	cwde   
  40fd93:	out    dx,eax
  40fd94:	dec    ebx
  40fd95:	pusha  
  40fd96:	xor    al,0x16
  40fd98:	push   ds
  40fd99:	(bad)  
  40fd9a:	mov    ebp,0xecf2f1d5
  40fd9f:	imul   edi,DWORD PTR [edx],0x1b
  40fda2:	jbe    0x40fd30
  40fda4:	rol    edx,cl
  40fda6:	in     al,dx
  40fda7:	hlt    
  40fda8:	retf   
  40fda9:	adc    esi,ebx
  40fdab:	scas   eax,DWORD PTR es:[edi]
  40fdac:	mov    edi,0x8aea9b4b
  40fdb1:	mov    ebp,0xd946f626
  40fdb6:	adc    ebx,0xfab5776a
  40fdbc:	mov    ah,0xa3
  40fdbe:	jno    0x40fdfa
  40fdc0:	or     dh,dh
  40fdc2:	xchg   esi,eax
  40fdc3:	je     0x40fe29
  40fdc5:	or     al,0x28
  40fdc7:	push   ecx
  40fdc8:	adc    dh,BYTE PTR [ebx-0x581074d1]
  40fdce:	add    bh,BYTE PTR [ebx-0x452ae428]
  40fdd4:	xor    al,0xd1
  40fdd6:	mov    esp,0xa43cdcc6
  40fddb:	or     BYTE PTR [edi-0x3e],0xdd
  40fddf:	dec    eax
  40fde0:	enter  0x7701,0x4f
  40fde4:	fdiv   DWORD PTR [ecx]
  40fde6:	fcmove st,st(3)
  40fde8:	sub    BYTE PTR ds:0x3598009d,bh
  40fdee:	adc    BYTE PTR [eax+0x24],0x11
  40fdf2:	xor    DWORD PTR [ecx-0xc],0xb1671541
  40fdf9:	and    DWORD PTR [eax-0x250c6f44],eax
  40fdff:	xor    DWORD PTR [ebx+0x74],0xaa11b588
  40fe06:	sar    BYTE PTR [edx],1
  40fe08:	rol    DWORD PTR [eax],0x64
  40fe0b:	pop    ds
  40fe0c:	test   BYTE PTR [esi+0x62583be7],dh
  40fe12:	xchg   si,ax
  40fe14:	dec    edx
  40fe15:	mov    edi,0xc2bff1aa
  40fe1a:	mov    es,WORD PTR [ecx+ebp*4]
  40fe1d:	inc    eax
  40fe1e:	xchg   ebp,eax
  40fe1f:	xchg   ebp,edi
  40fe21:	dec    esp
  40fe22:	fild   QWORD PTR [edi]
  40fe24:	mov    ebx,0x3eadfb72
  40fe29:	cmp    dl,BYTE PTR [ecx+0x6a]
  40fe2c:	cdq    
  40fe2d:	data16 mov ah,0xd7
  40fe30:	mov    cl,0xb9
  40fe32:	and    eax,DWORD PTR [esi]
  40fe34:	clc    
  40fe35:	int3   
  40fe36:	adc    eax,0xcdf319e3
  40fe3b:	dec    edi
  40fe3c:	jmp    0x40fdee
  40fe3e:	push   edx
  40fe3f:	dec    ebp
  40fe40:	aam    0x15
  40fe42:	out    0x85,al
  40fe44:	adc    al,0x56
  40fe46:	mov    esi,0xf86264f
  40fe4b:	mov    dh,0x72
  40fe4d:	enter  0xe20b,0xa
  40fe51:	jg     0x40fe9e
  40fe53:	sbb    DWORD PTR [esi+0x5c],edx
  40fe56:	mov    ecx,DWORD PTR [edi-0x1c9bb664]
  40fe5c:	cmp    BYTE PTR [esi+edi*8-0x5f],dl
  40fe60:	into   
  40fe61:	cmp    BYTE PTR [ebx+0x61d26b48],0xc1
  40fe68:	mov    bh,0x16
  40fe6a:	pop    ss
  40fe6b:	sbb    bl,BYTE PTR [edx+0x3bf7fdb9]
  40fe71:	push   ebp
  40fe72:	popa   
  40fe73:	cmp    DWORD PTR [esi+0x553bb422],esi
  40fe79:	mov    eax,DWORD PTR [eax+0x43]
  40fe7c:	(bad)  
  40fe7d:	data16 out dx,al
  40fe7f:	int    0xa7
  40fe81:	or     eax,0x671abede
  40fe86:	(bad)  [ebx-0x1029aa7f]
  40fe8c:	outs   dx,DWORD PTR ds:[esi]
  40fe8d:	inc    esi
  40fe8e:	mov    ah,0xb1
  40fe90:	jp     0x40fefe
  40fe92:	in     eax,0xc6
  40fe94:	mov    ebx,0x2443a774
  40fe99:	in     eax,dx
  40fe9a:	or     eax,0xf8bb9d40
  40fe9f:	jb     0x40fe65
  40fea1:	sbb    al,0x43
  40fea3:	cdq    
  40fea4:	pop    es
  40fea5:	pop    edx
  40fea6:	jp     0x40fecf
  40fea8:	cmp    BYTE PTR ds:[eax+0x5d761032],ch
  40feaf:	xchg   edx,eax
  40feb0:	sahf   
  40feb1:	out    0x4a,eax
  40feb3:	in     al,0x37
  40feb5:	(bad)  
  40feb6:	(bad)  
  40feb7:	stc    
  40feb8:	ror    BYTE PTR [ecx+0x7267019e],0x69
  40febf:	cmp    DWORD PTR [ebp-0x61],0x5c
  40fec3:	jecxz  0x40fe59
  40fec5:	aad    0xa2
  40fec7:	ret    0x29d2
  40feca:	inc    eax
  40fecb:	iret   
  40fecc:	sub    DWORD PTR [ebx-0x5],edi
  40fecf:	icebp  
  40fed0:	dec    ecx
  40fed1:	xor    al,0x11
  40fed3:	scas   al,BYTE PTR es:[edi]
  40fed4:	jae    0x40fea7
  40fed6:	jle    0x40fed6
  40fed8:	or     BYTE PTR [edx-0x7994af52],al
  40fede:	push   ecx
  40fedf:	jle    0x40ff38
  40fee1:	ins    BYTE PTR es:[edi],dx
  40fee2:	popa   
  40fee3:	sbb    BYTE PTR [ecx-0x18],dh
  40fee6:	push   esi
  40fee7:	mov    edi,0xaccc4158
  40feec:	sbb    cl,ch
  40feee:	sti    
  40feef:	xchg   BYTE PTR [edx-0x936bdf4],dl
  40fef5:	out    dx,eax
  40fef6:	sub    al,0xf0
  40fef8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fef9:	es mov esp,0x3da5a6be
  40feff:	sbb    al,BYTE PTR [edi]
  40ff01:	xor    edi,edx
  40ff03:	imul   ecx,DWORD PTR [esp+esi*4],0x5a52dca5
  40ff0a:	and    ecx,0x52cde16f
  40ff10:	in     al,dx
  40ff11:	or     dl,BYTE PTR [edi+0x48]
  40ff14:	add    al,0x44
  40ff16:	jno    0x40ff48
  40ff18:	jno    0x40fecc
  40ff1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ff1b:	stos   BYTE PTR es:[edi],al
  40ff1c:	mov    ah,0x71
  40ff1e:	and    DWORD PTR ds:0x68b6911c,edx
  40ff24:	movnti DWORD PTR [esi],ebp
  40ff27:	dec    ecx
  40ff28:	lods   eax,DWORD PTR ds:[esi]
  40ff29:	pop    es
  40ff2a:	out    0xc,al
  40ff2c:	popf   
  40ff2d:	adc    eax,0x9465029
  40ff32:	(bad)  
  40ff33:	fimul  WORD PTR [ebx]
  40ff35:	mov    ch,0xf9
  40ff37:	lea    ecx,[ebx-0x3f]
  40ff3a:	in     eax,dx
  40ff3b:	mov    bh,0x71
  40ff3d:	or     BYTE PTR [edx],bl
  40ff3f:	(bad)  
  40ff40:	repz dec ebp
  40ff42:	xor    al,0xf4
  40ff44:	mov    ?,WORD PTR [ebx-0x26]
  40ff47:	test   BYTE PTR [eax+0x1327d9ad],al
  40ff4d:	mov    ch,0x4c
  40ff4f:	scas   eax,DWORD PTR es:[edi]
  40ff50:	arpl   WORD PTR [ebx+ebx*2],ax
  40ff53:	nop
  40ff54:	retf   
  40ff55:	shr    BYTE PTR [esi+ebx*2-0x5e],cl
  40ff59:	push   edx
  40ff5a:	cmp    DWORD PTR [esi+0x76],eax
  40ff5d:	enter  0xc8a6,0xa0
  40ff61:	mov    ebx,0xd8c04724
  40ff66:	sub    al,BYTE PTR [ecx]
  40ff68:	and    edx,DWORD PTR [ecx+0x2fdb28f4]
  40ff6e:	xor    dh,BYTE PTR [esp+edx*2]
  40ff71:	stos   BYTE PTR es:[edi],al
  40ff72:	jg     0x40ffe5
  40ff74:	jae    0x40ff60
  40ff76:	in     al,dx
  40ff77:	les    edx,FWORD PTR [esi-0x54]
  40ff7a:	outs   dx,DWORD PTR ds:[esi]
  40ff7b:	push   esi
  40ff7c:	cwde   
  40ff7d:	mov    al,0x54
  40ff7f:	mov    BYTE PTR [esi],bl
  40ff81:	enter  0x4927,0x8d
  40ff85:	into   
  40ff86:	call   0xe08299c3
  40ff8b:	sbb    BYTE PTR [ebp-0x16],al
  40ff8e:	dec    edi
  40ff8f:	push   esp
  40ff90:	fcmovb st,st(0)
  40ff92:	loope  0x40ffa7
  40ff94:	jmp    0xb300d346
  40ff99:	ss (bad) 
  40ff9b:	sbb    eax,0x2ddff0c6
  40ffa0:	pushf  
  40ffa1:	or     bh,BYTE PTR [ebx+0x61]
  40ffa4:	mov    dh,BYTE PTR [esi+0x3e91ccda]
  40ffaa:	mov    bh,0xcf
  40ffac:	push   esp
  40ffad:	jnp    0x40ffd0
  40ffaf:	xchg   edi,eax
  40ffb0:	hlt    
  40ffb1:	and    BYTE PTR [edx-0x29da4b96],dl
  40ffb7:	lock in eax,dx
  40ffb9:	retf   0xef7d
  40ffbc:	call   0x8f0b:0x820079a4
  40ffc3:	lea    ebx,[edi+0xf]
  40ffc6:	mov    ebx,0xc9086bbb
  40ffcb:	inc    edx
  40ffcc:	jno    0x410046
  40ffce:	hlt    
  40ffcf:	ret    
  40ffd0:	ins    DWORD PTR es:[edi],dx
  40ffd1:	lea    esi,[esi-0x2ce0e49e]
  40ffd7:	es inc eax
  40ffd9:	push   ecx
  40ffda:	jecxz  0x40ffca
  40ffdc:	pop    edi
  40ffdd:	xor    cl,cl
  40ffdf:	cmp    dl,BYTE PTR [ebx-0x6f4f692d]
  40ffe5:	test   DWORD PTR [ecx],eax
  40ffe7:	or     dh,ch
  40ffe9:	loope  0x410036
  40ffeb:	pop    ebp
  40ffec:	aam    0x1f
  40ffee:	mov    al,0xec
  40fff0:	dec    ecx
  40fff1:	sahf   
  40fff2:	mov    eax,ds:0x72613e97
  40fff7:	hlt    
  40fff8:	push   ebx
  40fff9:	cli    
  40fffa:	adc    BYTE PTR [edi],ch
  40fffc:	pusha  
  40fffd:	fild   QWORD PTR [edi]
  40ffff:	sub    eax,0x3345c722
  410004:	cmp    eax,0x5aa2a6cb
  410009:	jmp    0x995b:0xef775981
  410010:	dec    eax
  410011:	and    ch,dh
  410013:	scas   al,BYTE PTR es:[edi]
  410014:	retf   
  410015:	dec    ecx
  410016:	pop    edi
  410017:	(bad)  
  410018:	in     al,0x46
  41001a:	out    0x8a,al
  41001c:	mov    al,0x78
  41001e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41001f:	adc    al,0x11
  410021:	hlt    
  410022:	adc    BYTE PTR [ecx-0x223d7080],dl
  410028:	pop    ds
  410029:	hlt    
  41002a:	jae    0x40fffa
  41002c:	je     0x410080
  41002e:	pop    DWORD PTR [eax+0x19d73fad]
  410034:	push   ds
  410035:	jle    0x410048
  410037:	mov    al,0xcf
  410039:	or     ebx,DWORD PTR [esi+eiz*1-0x3e]
  41003d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41003e:	mov    dh,0x8e
  410040:	mov    ds,ecx
  410042:	frstor [esp+esi*1-0x58]
  410046:	ja     0x41007c
  410048:	rcr    BYTE PTR [edx+0x7cf3b192],0x4a
  41004f:	mov    cl,0x49
  410051:	ret    
  410052:	xchg   esp,eax
  410053:	lock fstp QWORD PTR [edx+0x7a01b851]
  41005a:	pop    ebx
  41005b:	dec    ecx
  41005c:	les    ebp,FWORD PTR ds:0xcccf74cd
  410062:	add    DWORD PTR ds:0xf323a838,eax
  410068:	jmp    0x41008a
  41006a:	xchg   BYTE PTR [eax+ecx*1+0x7],ah
  41006e:	add    BYTE PTR [esi-0x5],bl
  410071:	dec    ecx
  410072:	jne    0x410084
  410074:	jmp    0xee81:0x91d1a6cb
  41007b:	pop    eax
  41007c:	retf   0x5914
  41007f:	inc    edi
  410080:	out    dx,eax
  410081:	or     BYTE PTR [edi],ah
  410083:	lods   al,BYTE PTR ds:[esi]
  410084:	jno    0x4100a9
  410086:	mov    ecx,0x6cb769a
  41008b:	test   BYTE PTR [edi+0x2f5efcba],ah
  410091:	push   0xffffffec
  410093:	dec    DWORD PTR [ecx+0x394d2450]
  410099:	jno    0x41010e
  41009b:	rcl    bl,cl
  41009d:	push   esi
  41009e:	jmp    0x410069
  4100a0:	fs inc ecx
  4100a2:	les    esi,FWORD PTR [eax]
  4100a4:	outs   dx,DWORD PTR ds:[esi]
  4100a5:	rcr    DWORD PTR [ecx+ebx*8-0x5],1
  4100a9:	jg     0x410102
  4100ab:	iret   
  4100ac:	pop    edx
  4100ad:	in     al,0x5c
  4100af:	mov    DWORD PTR [ebp+ecx*4+0x2bed1076],esi
  4100b6:	aaa    
  4100b7:	dec    edi
  4100b8:	add    al,BYTE PTR [ebp+0x63]
  4100bb:	mov    edx,0x7203853e
  4100c0:	and    BYTE PTR [ebx+ebx*4+0x25],bl
  4100c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4100c5:	mov    edi,0x868acc41
  4100ca:	stos   DWORD PTR es:[edi],eax
  4100cb:	ins    DWORD PTR es:[edi],dx
  4100cc:	sbb    eax,0xc3a9da28
  4100d1:	(bad)  
  4100d2:	retf   0x2df4
  4100d5:	mov    ebx,0x4050933b
  4100da:	jne    0x41005d
  4100dc:	(bad)
  4100df:	shl    DWORD PTR [ebx+ecx*1-0x6],cl
  4100e3:	and    DWORD PTR [esi-0x7d],ebp
  4100e6:	aas    
  4100e7:	ret    0x2e75
  4100ea:	mov    ch,BYTE PTR [ebx]
  4100ec:	out    dx,eax
  4100ed:	test   al,0xac
  4100ef:	xchg   esi,eax
  4100f0:	sub    al,0xe7
  4100f2:	cdq    
  4100f3:	and    cl,BYTE PTR [ebp-0x10]
  4100f6:	jle    0x4100fa
  4100f8:	mov    al,ds:0x2d661279
  4100fd:	mov    edi,0x444d0f0d
  410102:	arpl   WORD PTR [ebx],cx
  410104:	inc    edx
  410105:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410106:	jnp    0x41011e
  410108:	push   0x17
  41010a:	xchg   ebx,eax
  41010b:	call   0x3f58:0xc1b7bea9
  410112:	jne    0x4100bc
  410114:	sbb    bl,BYTE PTR [ecx+ebx*8-0x1f]
  410118:	stos   BYTE PTR es:[edi],al
  410119:	sti    
  41011a:	pop    ds
  41011b:	scas   al,BYTE PTR es:[edi]
  41011c:	js     0x41012a
  41011e:	lods   al,BYTE PTR ds:[esi]
  41011f:	sbb    ah,BYTE PTR [edi-0x32]
  410122:	pop    es
  410123:	jp     0x410129
  410125:	nop
  410126:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410127:	loope  0x410162
  410129:	cdq    
  41012a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41012b:	arpl   di,bx
  41012d:	mov    ah,BYTE PTR ds:0x7cc8a735
  410133:	xchg   ebp,eax
  410134:	out    dx,al
  410135:	xor    BYTE PTR [ebx-0x41],0xd4
  410139:	shr    ebp,0x21
  41013c:	push   esp
  41013d:	cld    
  41013e:	cmc    
  41013f:	test   DWORD PTR [ebx+0x33],edi
  410142:	or     edi,eax
  410144:	dec    edx
  410145:	imul   ecx,DWORD PTR es:[ecx],0x67629534
  41014c:	fisttp QWORD PTR [esp+esi*4+0x1f78efe9]
  410153:	mov    esi,0x314f1e20
  410158:	or     eax,0x1e0d13d9
  41015d:	out    0x70,eax
  41015f:	in     eax,dx
  410160:	fucomp st(2)
  410162:	repnz push es
  410164:	sub    ebp,esp
  410166:	jmp    0x41014d
  410168:	std    
  410169:	pushf  
  41016a:	rol    BYTE PTR [ebx],cl
  41016c:	scas   al,BYTE PTR es:[edi]
  41016d:	fisttp WORD PTR [esi+0x6ac7a490]
  410173:	aam    0x4f
  410175:	clc    
  410176:	(bad)
  41017a:	cmc    
  41017b:	add    BYTE PTR [ebx+ecx*1],0xc0
  41017f:	push   ss
  410180:	je     0x41010b
  410182:	sub    al,BYTE PTR [edx]
  410184:	inc    esi
  410185:	sub    al,0x60
  410187:	mov    esp,edx
  410189:	sbb    ch,BYTE PTR [ebp-0x13]
  41018c:	dec    edi
  41018d:	xchg   edx,eax
  41018e:	sbb    bh,dl
  410190:	mov    DWORD PTR [edi+0x4],0xa12a033c
  410197:	into   
  410198:	pop    esi
  410199:	cdq    
  41019a:	push   ss
  41019b:	jo     0x41019a
  41019d:	in     eax,0x9f
  41019f:	ror    DWORD PTR [edi-0x44a2b502],1
  4101a5:	or     esi,DWORD PTR [eax]
  4101a7:	outs   dx,DWORD PTR ds:[esi]
  4101a8:	push   ds
  4101a9:	(bad)  
  4101aa:	mov    bl,0xc3
  4101ac:	add    al,0x43
  4101ae:	inc    esi
  4101af:	mov    cl,0x47
  4101b1:	jp     0x4101d2
  4101b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4101b4:	mov    WORD PTR [ebp+0x2a4b51a4],gs
  4101ba:	and    BYTE PTR [esi+ebx*2+0x6e],dl
  4101be:	shr    BYTE PTR [ebp-0x1982db58],1
  4101c4:	inc    edi
  4101c5:	inc    esp
  4101c6:	inc    edx
  4101c7:	push   ds
  4101c8:	dec    eax
  4101c9:	xchg   edi,eax
  4101ca:	daa    
  4101cb:	and    al,0x65
  4101cd:	jge    0x4101d3
  4101cf:	xchg   esi,ecx
  4101d1:	sbb    eax,0x3f2e8208
  4101d6:	scas   eax,DWORD PTR es:[edi]
  4101d7:	in     al,dx
  4101d8:	xor    eax,0x5026c364
  4101dd:	repz dec ecx
  4101df:	ja     0x410225
  4101e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4101e2:	test   eax,0x83eb342f
  4101e7:	pop    ds
  4101e8:	push   ebp
  4101e9:	rcr    dl,1
  4101eb:	sbb    DWORD PTR [edx],ecx
  4101ed:	and    bl,bh
  4101ef:	loop   0x410209
  4101f1:	push   ebx
  4101f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4101f3:	dec    ebp
  4101f4:	rcl    DWORD PTR [ebx+0x2acd1bb8],cl
  4101fa:	mov    ds:0xaf8a1810,eax
  4101ff:	and    bl,BYTE PTR ds:0x1e72cdd8
  410205:	je     0x4101d1
  410207:	cmp    eax,0x11e1e665
  41020c:	hlt    
  41020d:	inc    eax
  41020e:	call   0xe945c6ee
  410213:	aad    0xb7
  410215:	mov    edi,0x818aa515
  41021a:	dec    ecx
  41021b:	inc    esp
  41021c:	cmp    eax,0xc4176eae
  410221:	dec    ebp
  410222:	stc    
  410223:	add    esi,esp
  410225:	mov    esi,0x78af384b
  41022a:	call   0xfc629b40
  41022f:	fiadd  WORD PTR [ecx-0x130d38be]
  410235:	test   DWORD PTR [eax-0x1a],esp
  410238:	push   cs
  410239:	mov    ecx,0xd542fabc
  41023e:	mov    eax,ds:0xb6865902
  410243:	in     al,0x3f
  410245:	add    al,0xcf
  410247:	outs   dx,DWORD PTR ds:[esi]
  410248:	add    edi,0xffffffa8
  41024b:	push   eax
  41024c:	cld    
  41024d:	loopne 0x410287
  41024f:	pushf  
  410250:	mov    dh,0x6
  410252:	outs   dx,DWORD PTR ds:[esi]
  410253:	into   
  410254:	sbb    ch,al
  410256:	sbb    DWORD PTR [esi+0x43a62979],esp
  41025c:	int3   
  41025d:	pusha  
  41025e:	(bad)  
  41025f:	popf   
  410260:	ss nop
  410262:	ret    0xbe4f
  410265:	or     bl,BYTE PTR [edx-0x1b]
  410268:	(bad)
  41026c:	pop    eax
  41026d:	outs   dx,BYTE PTR ds:[esi]
  41026e:	test   eax,0x1b72c700
  410273:	pushf  
  410274:	cwde   
  410275:	xchg   DWORD PTR [eax],esp
  410277:	xchg   esi,eax
  410278:	mov    ah,0x53
  41027a:	repnz fmul st(1),st
  41027d:	pop    ebp
  41027e:	loopne 0x410289
  410280:	mov    ecx,0xcb7ea020
  410285:	iret   
  410286:	into   
  410287:	scas   al,BYTE PTR es:[edi]
  410288:	xchg   edx,eax
  410289:	add    esi,DWORD PTR [ebp-0x17]
  41028c:	sti    
  41028d:	or     esi,DWORD PTR [edi+0x22e7a3e1]
  410293:	xlat   BYTE PTR ds:[ebx]
  410294:	out    0xf2,al
  410296:	sti    
  410297:	add    eax,0x9a481a9
  41029c:	sbb    edx,DWORD PTR [eax-0x7d]
  41029f:	add    ebx,DWORD PTR [esi+0xe]
  4102a2:	hlt    
  4102a3:	or     al,0xe0
  4102a5:	push   ds
  4102a6:	and    ecx,DWORD PTR [ecx]
  4102a8:	pop    esp
  4102a9:	xchg   edi,eax
  4102aa:	xchg   esp,eax
  4102ab:	leave  
  4102ac:	hlt    
  4102ad:	ret    0x1dab
  4102b0:	test   al,0x25
  4102b2:	xchg   DWORD PTR [edx-0x2b],edi
  4102b5:	mov    dh,0x67
  4102b7:	ret    0xe440
  4102ba:	stc    
  4102bb:	push   ebx
  4102bc:	ficom  WORD PTR [edi+ebx*4-0x69]
  4102c0:	inc    ebx
  4102c1:	mov    esp,0xc8216864
  4102c6:	not    BYTE PTR [ebx+edx*2]
  4102c9:	ss test al,0x6f
  4102cc:	jmp    0x4ce2:0x23c29d70
  4102d3:	shl    DWORD PTR [ebx+ebp*1-0x71],1
  4102d7:	adc    edi,0xc44c10b
  4102dd:	pop    es
  4102de:	sbb    esi,DWORD PTR [ebx]
  4102e0:	pop    ds
  4102e1:	or     DWORD PTR [ebx],ecx
  4102e3:	aam    0xe3
  4102e5:	push   es
  4102e6:	inc    edx
  4102e7:	mov    ds:0x6bca051f,eax
  4102ec:	sar    BYTE PTR [esp+eiz*8+0x26c68f8f],cl
  4102f3:	leave  
  4102f4:	std    
  4102f5:	int    0x2c
  4102f7:	out    0x61,al
  4102f9:	imul   esp,eax,0xffffffea
  4102fc:	stc    
  4102fd:	popf   
  4102fe:	or     DWORD PTR ds:0xe8d853ad,ecx
  410304:	xchg   edx,eax
  410305:	leave  
  410306:	mov    ah,0xb2
  410308:	dec    edi
  410309:	adc    eax,esi
  41030b:	mov    BYTE PTR [edx+0x6aa4f162],dh
  410311:	ja     0x4102ca
  410313:	ror    bl,cl
  410315:	jle    0x410307
  410317:	push   eax
  410318:	lds    esi,FWORD PTR [edx+0x520691ae]
  41031e:	cmp    cl,BYTE PTR [ecx+0x1b]
  410321:	inc    esi
  410322:	mov    DWORD PTR [ebp-0x35418ac3],ebp
  410328:	add    cl,BYTE PTR [edx+0x3d]
  41032b:	xchg   esp,eax
  41032c:	adc    bh,al
  41032e:	pusha  
  41032f:	mov    eax,ds:0x7cf3b37d
  410334:	sub    ecx,DWORD PTR gs:[edx]
  410337:	enter  0xe960,0xb9
  41033b:	push   cs
  41033c:	mov    ebx,0xc943e835
  410341:	dec    eax
  410342:	inc    edi
  410343:	mov    bl,0xa5
  410345:	cmp    ecx,DWORD PTR [ecx+0x42]
  410348:	sbb    bh,bl
  41034a:	hlt    
  41034b:	(bad)  
  41034c:	jnp    0x410333
  41034e:	and    BYTE PTR [edx],dh
  410350:	js     0x4102f2
  410352:	sbb    ecx,DWORD PTR [edx-0x4f]
  410355:	rol    DWORD PTR [edi+0x5d1349ba],cl
  41035b:	dec    ebp
  41035c:	icebp  
  41035d:	sbb    DWORD PTR [ebx-0xb],0x6f
  410361:	int3   
  410362:	jg     0x41038a
  410364:	push   es
  410365:	call   0x99326d4c
  41036a:	mov    bl,0xc8
  41036c:	nop
  41036d:	dec    edx
  41036e:	inc    ebp
  41036f:	out    0x59,al
  410371:	push   ebx
  410372:	aam    0x7b
  410374:	jl     0x4103f0
  410376:	push   edi
  410377:	cs popa 
  410379:	inc    ebp
  41037a:	not    edi
  41037c:	pop    ecx
  41037d:	dec    edi
  41037e:	mov    esi,0xb55f76d8
  410383:	inc    esi
  410384:	bound  edx,QWORD PTR [ecx]
  410386:	jg     0x41035e
  410388:	into   
  410389:	mov    eax,ds:0x76762339
  41038e:	fsub   st(7),st
  410390:	test   BYTE PTR [ecx-0x10],0x3f
  410394:	jmp    DWORD PTR [edx-0x25f07c7e]
  41039a:	mov    al,0x9f
  41039c:	push   0xcc12f23e
  4103a1:	add    eax,0x27847578
  4103a6:	fdiv   st,st(6)
  4103a8:	pop    esp
  4103a9:	jmp    0x4103bf
  4103ab:	rcr    DWORD PTR [edi+0x11],1
  4103ae:	repnz out dx,al
  4103b0:	setbe  BYTE PTR [ecx-0x5]
  4103b4:	(bad)  
  4103b5:	loope  0x41037a
  4103b7:	arpl   WORD PTR [esi-0x2f09dd7f],ax
  4103bd:	and    al,BYTE PTR [edi-0x11]
  4103c0:	aas    
  4103c1:	pop    ebx
  4103c2:	fwait
  4103c3:	jo     0x410363
  4103c5:	mov    ds:0x88a73ce2,eax
  4103ca:	jne    0x41044b
  4103cc:	mov    ecx,0x6ee6d2db
  4103d1:	icebp  
  4103d2:	mov    BYTE PTR ds:0x6bccd4ed,dl
  4103d8:	dec    ebp
  4103d9:	sbb    eax,DWORD PTR [eax+0x2d3ddc89]
  4103df:	fldcw  WORD PTR [edi]
  4103e1:	xor    DWORD PTR [ebx+esi*2],edi
  4103e4:	mov    eax,0x6924b837
  4103e9:	adc    ebx,DWORD PTR [ecx+0x1e85e2a7]
  4103ef:	or     BYTE PTR ds:0xdee2293e,al
  4103f5:	enter  0xbeb3,0x52
  4103f9:	xor    DWORD PTR [ebp-0x70],esp
  4103fc:	data16 mov dl,BYTE PTR [ebx]
  4103ff:	int3   
  410400:	push   ecx
  410401:	mov    ss,WORD PTR es:[ecx+0x6c]
  410405:	cmp    cl,bl
  410407:	outs   dx,DWORD PTR ds:[esi]
  410408:	push   edi
  410409:	cmp    al,0x32
  41040b:	push   0x68
  41040d:	(bad)  
  41040e:	xor    ebp,DWORD PTR ds:[esi-0x24]
  410412:	pop    esp
  410413:	popa   
  410414:	fcom   DWORD PTR [ecx]
  410416:	stos   DWORD PTR es:[edi],eax
  410417:	and    BYTE PTR [ebp-0x5f0f8294],dh
  41041d:	daa    
  41041e:	adc    bl,0x9c
  410421:	ins    DWORD PTR es:[edi],dx
  410422:	out    0xf8,eax
  410424:	jnp    0x4103c8
  410426:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410427:	das    
  410428:	frstor [ebp-0x3b25b7e1]
  41042e:	(bad)  
  41042f:	mov    al,ds:0x4b42b844
  410434:	or     ecx,DWORD PTR [ebp+0x47]
  410437:	mov    eax,0xf8eaa51a
  41043c:	int3   
  41043d:	aam    0xe7
  41043f:	daa    
  410440:	ret    0xeeee
  410443:	fsub   DWORD PTR [eax+0x73e56eab]
  410449:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41044a:	mov    ds:0xd8c170e4,al
  41044f:	cwde   
  410450:	sti    
  410451:	or     eax,0xdf3a0e1a
  410456:	mov    ebp,0x988eed8c
  41045b:	jmp    0x4c10a7a1
  410460:	out    0x74,eax
  410462:	(bad)  
  410463:	fcmovb st,st(5)
  410465:	sub    eax,0x49059792
  41046a:	stos   DWORD PTR es:[edi],eax
  41046b:	call   0xb6c5:0x5257cdc0
  410472:	(bad)  
  410473:	gs inc eax
  410475:	inc    esp
  410476:	imul   esp,DWORD PTR [edx+eiz*2],0xe41f24fb
  41047d:	mov    bh,0x2a
  41047f:	and    BYTE PTR [ecx],bl
  410481:	add    DWORD PTR [edx-0x26390ed0],ebp
  410487:	mov    ebp,0x90a5372
  41048c:	dec    edi
  41048d:	push   esi
  41048e:	cdq    
  41048f:	inc    ebx
  410490:	mov    dl,0x61
  410492:	jo     0x41043f
  410494:	pushf  
  410495:	shr    BYTE PTR [edx+0x337e1567],0x88
  41049c:	mov    ds:0x1645e7da,eax
  4104a1:	loope  0x4104de
  4104a3:	inc    edx
  4104a4:	daa    
  4104a5:	ja     0x41049c
  4104a7:	add    eax,0xb3ff9469
  4104ac:	xor    eax,0x9b26fcc7
  4104b1:	or     al,0x41
  4104b3:	sar    BYTE PTR [edx],0xd5
  4104b6:	cmp    eax,DWORD PTR [ebx]
  4104b8:	je     0x4104f4
  4104ba:	jl     0x410475
  4104bc:	mov    ah,0xe
  4104be:	stos   BYTE PTR es:[edi],al
  4104bf:	cmp    eax,DWORD PTR [edi+0x1656ef07]
  4104c5:	ins    BYTE PTR es:[edi],dx
  4104c6:	add    edx,DWORD PTR [esi-0x6d8f0136]
  4104cc:	mov    ds:0x2faf65fe,eax
  4104d1:	scas   eax,DWORD PTR es:[edi]
  4104d2:	call   0x28af:0x88692708
  4104d9:	cmp    edi,DWORD PTR [ecx-0x4ea2b236]
  4104df:	lock xchg DWORD PTR [esi+0x45],ecx
  4104e3:	sahf   
  4104e4:	or     eax,0xec06d221
  4104e9:	jle    0x41050b
  4104eb:	dec    ebp
  4104ec:	neg    BYTE PTR [edi-0xb]
  4104ef:	nop
  4104f0:	imul   esp,DWORD PTR [esi+0x363cc180],0xa8a8ab19
  4104fa:	dec    ebp
  4104fb:	or     BYTE PTR [esi+0x112264f],bl
  410501:	(bad)  
  410502:	jg     0x4104a4
  410504:	rcr    BYTE PTR [esi+ebx*8-0x42],1
  410508:	daa    
  410509:	popf   
  41050a:	push   eax
  41050b:	push   ecx
  41050c:	push   esi
  41050d:	push   ecx
  41050e:	jg     0x410537
  410510:	inc    ebp
  410511:	jnp    0x410552
  410513:	das    
  410514:	pop    esp
  410515:	and    BYTE PTR [ecx],dh
  410517:	mov    eax,DWORD PTR [eax]
  410519:	test   al,0x5b
  41051b:	cs xchg edi,eax
  41051d:	pop    ecx
  41051e:	jae    0x41058e
  410520:	int    0x26
  410522:	inc    edx
  410523:	fdiv   DWORD PTR [ebp+eax*1+0x40]
  410527:	push   es
  410528:	sub    BYTE PTR [ebp+0x2],dl
  41052b:	push   ss
  41052c:	fldlg2 
  41052e:	inc    esi
  41052f:	or     eax,0x7abbfbb2
  410534:	ss call 0x3c26fa5f
  41053a:	sti    
  41053b:	push   ebp
  41053c:	mov    BYTE PTR [bp+0x29],ch
  410540:	adc    BYTE PTR [ecx+0x1d01c382],bl
  410546:	pop    ebp
  410547:	pop    es
  410548:	push   ecx
  410549:	js     0x410500
  41054b:	retf   
  41054c:	mov    ds:0x7d358fdd,al
  410551:	mov    edi,0xdc7ba9b8
  410556:	sti    
  410557:	jp     0x410536
  410559:	aaa    
  41055a:	aam    0xc6
  41055c:	add    BYTE PTR [ebp+0x66],dl
  41055f:	and    al,0xf6
  410561:	dec    BYTE PTR [ebp-0x4f874e1c]
  410567:	xor    ecx,esi
  410569:	adc    edx,edi
  41056b:	call   0x3b934a65
  410570:	mov    eax,ds:0x86cac8fa
  410575:	push   esp
  410576:	mov    dl,0xcf
  410578:	adc    eax,0x1143b228
  41057d:	ins    BYTE PTR es:[edi],dx
  41057e:	inc    ebp
  41057f:	ret    
  410580:	adc    BYTE PTR [ecx-0x6f],ch
  410583:	and    ah,dl
  410585:	xor    eax,0x7df538d4
  41058a:	ffreep st(2)
  41058c:	jbe    0x410582
  41058e:	jbe    0x4105a5
  410590:	sahf   
  410591:	sbb    ch,BYTE PTR [ecx]
  410593:	add    BYTE PTR [eax+0x324135b0],al
  410599:	dec    edx
  41059a:	ret    0xb7f1
  41059d:	mov    dl,0xfc
  41059f:	icebp  
  4105a0:	dec    esi
  4105a1:	inc    esi
  4105a2:	or     DWORD PTR [eax-0x162af8fd],ebx
  4105a8:	dec    edi
  4105a9:	pop    ecx
  4105aa:	cmp    al,0xe6
  4105ac:	sbb    ebp,DWORD PTR [ebp-0x52]
  4105af:	mov    cl,BYTE PTR [esi-0x30]
  4105b2:	retf   
  4105b3:	xor    cl,cl
  4105b5:	scas   eax,DWORD PTR es:[edi]
  4105b6:	pop    ds
  4105b7:	jmp    0x1122:0xf4874b48
  4105be:	jmp    0x8530:0x9ec2b98b
  4105c5:	inc    ecx
  4105c6:	sub    eax,DWORD PTR [edx-0x7b88d392]
  4105cc:	dec    esp
  4105cd:	mov    al,ds:0x2d3e5b8d
  4105d2:	add    eax,0xab8c4985
  4105d7:	jg     0x41060a
  4105d9:	xchg   BYTE PTR [edi+0x67e808d0],ah
  4105df:	jno    0x41063a
  4105e1:	and    eax,0xe57e9644
  4105e7:	dec    esi
  4105e8:	inc    esi
  4105e9:	retf   
  4105ea:	inc    ecx
  4105eb:	xor    ebx,ecx
  4105ed:	sub    DWORD PTR [ebp-0xc9f5ad0],0xaa179807
  4105f7:	neg    BYTE PTR [edi]
  4105f9:	pop    es
  4105fa:	in     al,dx
  4105fb:	es pop ds
  4105fd:	sbb    eax,ecx
  4105ff:	in     eax,dx
  410600:	cmp    edi,DWORD PTR [ebp-0x4d59ff4]
  410606:	loope  0x410606
  410608:	(bad)  
  41060a:	inc    ebx
  41060b:	mov    dl,0xe1
  41060d:	xor    edx,esp
  41060f:	call   0xc0f53c14
  410614:	and    eax,esp
  410616:	xchg   esi,eax
  410617:	scas   al,BYTE PTR es:[edi]
  410618:	push   0xffffff8f
  41061a:	mov    edi,0x8bbe2535
  41061f:	jo     0x4105d5
  410621:	inc    ebx
  410622:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410623:	(bad)  [ebx-0x3247bae4]
  410629:	pop    ebx
  41062a:	xchg   DWORD PTR [eax+0x42fa712a],eax
  410630:	mov    esp,0xee20c788
  410635:	rcr    BYTE PTR [ecx-0x26],1
  410638:	inc    ebx
  410639:	daa    
  41063a:	pusha  
  41063b:	data16 icebp 
  41063d:	cmp    ebx,eax
  41063f:	scas   eax,DWORD PTR es:[edi]
  410640:	int3   
  410641:	pop    es
  410642:	into   
  410643:	out    0xdf,eax
  410645:	or     DWORD PTR [ecx-0x5d27817c],edx
  41064b:	push   edx
  41064c:	leave  
  41064d:	xor    al,0x6
  41064f:	out    0x93,al
  410651:	imul   ebp,DWORD PTR [eax],0x8594c558
  410657:	shl    DWORD PTR [edx+0xbec0f45],0x1
  41065e:	out    0x81,ax
  410661:	adc    al,0x71
  410663:	loop   0x4105f9
  410665:	sbb    DWORD PTR [eax-0x3f518a9c],0x6650029b
  41066f:	call   0xbf94:0x6cd3c689
  410676:	cwde   
  410677:	adc    BYTE PTR [edx+edx*8],bl
  41067a:	or     ebx,DWORD PTR [ebx-0x5847ff26]
  410680:	xlat   BYTE PTR ds:[ebx]
  410681:	bswap  ebp
  410683:	adc    eax,0x7166786b
  410688:	repnz ss xchg ecx,eax
  41068b:	mov    dh,0xe9
  41068d:	dec    esi
  41068e:	rol    BYTE PTR [ebp+eax*8-0x4c],1
  410692:	and    BYTE PTR [ebp-0x2a],bh
  410695:	fs mov edi,0xca4c91a9
  41069b:	dec    eax
  41069c:	inc    ebp
  41069d:	pop    ebx
  41069e:	push   cs
  41069f:	mov    esi,0x97b8ab57
  4106a4:	call   0xab78:0x4bd3deb6
  4106ab:	xchg   esi,eax
  4106ac:	pop    esp
  4106ad:	aas    
  4106ae:	sub    eax,0x22bd850e
  4106b3:	or     dh,al
  4106b5:	ror    al,cl
  4106b7:	mov    eax,DWORD PTR [ecx-0x23]
  4106ba:	leave  
  4106bb:	xchg   DWORD PTR [esi-0xd],ecx
  4106be:	xor    ah,0x26
  4106c1:	(bad)  
  4106c2:	push   ebp
  4106c3:	ds pop esi
  4106c5:	int    0x38
  4106c7:	shl    DWORD PTR [edi],1
  4106c9:	dec    DWORD PTR [eax+0x7a]
  4106cc:	xor    BYTE PTR [esi+0x1a3460dc],dh
  4106d2:	xor    ecx,DWORD PTR [ebp-0x1d19e435]
  4106d8:	fld    DWORD PTR [esi+0x612faf78]
  4106de:	into   
  4106df:	aas    
  4106e0:	aad    0x8d
  4106e2:	rcr    dh,cl
  4106e4:	xor    eax,DWORD PTR [edi+eiz*2+0x6fbd547a]
  4106eb:	add    BYTE PTR [edi],ah
  4106ed:	push   ds
  4106ee:	cs mov al,0x66
  4106f1:	push   eax
  4106f2:	jp     0x4106bd
  4106f4:	xor    eax,0x6b9a6936
  4106f9:	push   ebp
  4106fa:	(bad)  
  4106fc:	cld    
  4106fd:	dec    ebx
  4106fe:	cmp    ecx,eax
  410700:	sub    bh,cl
  410702:	pop    eax
  410703:	dec    ebx
  410704:	lahf   
  410705:	and    al,0x98
  410707:	test   DWORD PTR [ebx-0x3818329b],esp
  41070d:	mov    dl,0xac
  41070f:	test   al,0x6b
  410711:	pop    ebp
  410712:	mov    eax,ds:0x58cd110b
  410717:	push   edi
  410718:	data16 das 
  41071a:	xor    eax,0x4cbfe1c8
  41071f:	ror    DWORD PTR [ebx],1
  410721:	jp     0x4106d7
  410723:	lock out dx,eax
  410725:	mov    esp,0xa2914108
  41072a:	and    BYTE PTR [edi-0x1],0xb6
  41072e:	jne    0x4106ff
  410730:	inc    ebp
  410731:	dec    edi
  410732:	push   edx
  410733:	lock les eax,FWORD PTR [edx-0x25]
  410737:	daa    
  410738:	mov    ds:0x1b9b6b77,al
  41073d:	or     ah,ch
  41073f:	jns    0x410787
  410741:	push   esi
  410742:	das    
  410743:	scas   al,BYTE PTR es:[edi]
  410744:	(bad)  
  410745:	dec    ecx
  410746:	pushf  
  410747:	cmp    eax,0xa82d2cf4
  41074c:	inc    edx
  41074d:	(bad)
  410751:	icebp  
  410752:	mov    DWORD PTR [ecx],edi
  410754:	pop    es
  410755:	rol    esi,1
  410757:	(bad)  
  410758:	xchg   esi,eax
  410759:	stc    
  41075a:	es ins BYTE PTR es:[edi],dx
  41075c:	lds    edi,FWORD PTR [ecx-0x5fab88cf]
  410762:	mov    dl,0xe3
  410764:	xchg   ebx,eax
  410765:	jo     0x41070f
  410767:	int    0x6e
  410769:	lahf   
  41076a:	mov    DWORD PTR [esi-0x43],ecx
  41076d:	(bad)  
  41076e:	repz or al,0x7a
  410771:	in     eax,dx
  410772:	mov    dl,0xc7
  410774:	inc    esi
  410775:	bound  esp,QWORD PTR [eax+0x1f]
  410778:	or     eax,0xe1f5a9c2
  41077d:	jg     0x4107af
  41077f:	inc    ecx
  410780:	mov    al,0xd5
  410782:	int    0x42
  410784:	pop    edi
  410785:	lahf   
  410786:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410787:	or     DWORD PTR ss:[edx+0x58e77e4a],eax
  41078e:	retf   0xb0f6
  410791:	jle    0x4107ad
  410793:	getsec 
  410795:	inc    esp
  410796:	cmp    al,0xa3
  410798:	jmp    0x2dce:0xfbdcf63b
  41079f:	(bad)  
  4107a0:	push   esi
  4107a1:	repnz mov cs,WORD PTR [ecx+0x390247b8]
  4107a8:	popa   
  4107a9:	xchg   ecx,eax
  4107aa:	xlat   BYTE PTR ds:[ebx]
  4107ab:	rcr    DWORD PTR [edx],0x66
  4107ae:	jbe    0x410734
  4107b0:	pop    ds
  4107b1:	jmp    0x41080b
  4107b3:	fbld   TBYTE PTR es:[esi+0x6f]
  4107b7:	shl    BYTE PTR ds:0x40f9e7c3,1
  4107bd:	pop    ss
  4107be:	outs   dx,DWORD PTR ds:[esi]
  4107bf:	push   ds
  4107c0:	mov    cl,bl
  4107c2:	jno    0x410789
  4107c4:	rol    DWORD PTR [ecx],0x6b
  4107c7:	mov    eax,0xced9c0a3
  4107cc:	mov    ds:0x1a7d55c6,eax
  4107d1:	push   cs
  4107d2:	outs   dx,DWORD PTR ds:[esi]
  4107d3:	xchg   edi,eax
  4107d4:	cmp    ecx,DWORD PTR [ebp-0x6747f9ee]
  4107da:	push   ds
  4107db:	ins    DWORD PTR es:[edi],dx
  4107dc:	dec    ebx
  4107dd:	cmp    DWORD PTR [eax],ecx
  4107df:	push   ebx
  4107e0:	cmp    bl,bl
  4107e2:	sti    
  4107e3:	lea    ecx,[eax-0x50750296]
  4107e9:	and    BYTE PTR [edx],cl
  4107eb:	jp     0x4107d7
  4107ed:	adc    ecx,DWORD PTR [ecx-0x216a8280]
  4107f3:	dec    esp
  4107f4:	ja     0x410785
  4107f6:	jns    0x410872
  4107f8:	dec    edx
  4107f9:	daa    
  4107fa:	lahf   
  4107fb:	(bad)  
  4107fd:	dec    edx
  4107fe:	push   ecx
  4107ff:	sub    ecx,DWORD PTR gs:[ebp-0x5fab977c]
  410806:	ret    0x840a
  410809:	inc    eax
  41080a:	test   eax,0x50ac6ef1
  41080f:	cmp    bh,ah
  410811:	inc    ebp
  410812:	xor    DWORD PTR [esi-0x1d],0x7e
  410816:	cld    
  410817:	inc    ebp
  410818:	bound  ebx,QWORD PTR [edx]
  41081a:	xchg   ebp,eax
  41081b:	jne    0x4107f4
  41081d:	dec    esi
  41081e:	adc    dh,al
  410820:	scas   al,BYTE PTR es:[edi]
  410821:	adc    esi,esi
  410823:	jnp    0x4107ca
  410825:	push   0xe5de4a8b
  41082a:	and    eax,0x815f108d
  41082f:	repnz or dh,BYTE PTR [edi+ecx*2]
  410833:	jmp    0x410876
  410835:	bound  ebp,QWORD PTR [ecx+0x72e0c1df]
  41083b:	cld    
  41083c:	lods   eax,DWORD PTR ds:[esi]
  41083d:	dec    esp
  41083e:	sbb    DWORD PTR [esi],ebp
  410840:	push   ecx
  410841:	or     bl,BYTE PTR [ebp+0xba6008c]
  410847:	xchg   ebp,eax
  410848:	outs   dx,DWORD PTR ds:[esi]
  410849:	outs   dx,BYTE PTR ds:[esi]
  41084a:	addr16 es adc dl,dh
  41084e:	push   ecx
  41084f:	jns    0x410858
  410851:	dec    edi
  410852:	mov    dh,BYTE PTR [eax]
  410854:	loop   0x41089f
  410856:	test   BYTE PTR [ebx+0x1c],0xb4
  41085a:	cld    
  41085b:	enter  0xd572,0x32
  41085f:	cwde   
  410860:	sub    DWORD PTR [esi],ecx
  410862:	(bad)  
  410863:	xchg   esp,eax
  410864:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410865:	dec    esi
  410866:	fisttp WORD PTR [ebx]
  410868:	and    al,0x6c
  41086a:	int    0xe4
  41086c:	ins    BYTE PTR es:[edi],dx
  41086d:	sbb    eax,0xc67fd370
  410872:	pop    esi
  410873:	lea    edi,[ebx+0x67ea1b65]
  410879:	mov    ecx,DWORD PTR [esi+0x26187052]
  41087f:	(bad)  
  410880:	test   eax,0x71c19a0e
  410885:	inc    ecx
  410886:	ins    DWORD PTR es:[edi],dx
  410887:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410888:	jb     0x410830
  41088a:	mov    al,ds:0xcb046db4
  41088f:	call   0xc1d91c7c
  410894:	pop    eax
  410895:	mov    ds:0xdd3b102b,eax
  41089a:	inc    ebp
  41089b:	sub    eax,0xd3fe1c2b
  4108a0:	ret    0xf26
  4108a3:	cmp    al,0x71
  4108a5:	cmp    eax,edx
  4108a7:	cs pushf 
  4108a9:	or     BYTE PTR [ebp+0x3f],ah
  4108ac:	stos   DWORD PTR es:[edi],eax
  4108ad:	imul   ebp,DWORD PTR [eax],0x36
  4108b0:	mov    bh,0x8e
  4108b2:	(bad)  
  4108b3:	retf   
  4108b4:	sti    
  4108b5:	xor    eax,0xeed23dc1
  4108ba:	jns    0x41089e
  4108bc:	loop   0x410904
  4108be:	push   ebp
  4108bf:	jl     0x4108f3
  4108c1:	sahf   
  4108c2:	enter  0xcf40,0x82
  4108c6:	clc    
  4108c7:	cs iret 
  4108c9:	add    edx,DWORD PTR [ecx+0x116f8a9f]
  4108cf:	jo     0x4108fd
  4108d1:	pushf  
  4108d2:	sar    BYTE PTR ds:0xc072d5aa,0xb5
  4108d9:	test   BYTE PTR [edx-0x43c6f36f],dh
  4108df:	and    esi,DWORD PTR ds:0x413e20ea
  4108e5:	aad    0x67
  4108e7:	pop    es
  4108e8:	outs   dx,DWORD PTR ds:[esi]
  4108e9:	addr16 test al,0xa3
  4108ec:	xchg   esi,eax
  4108ed:	sub    DWORD PTR [esp+edi*4],esp
  4108f0:	jmp    0xf9de:0x43a9a6a8
  4108f7:	int3   
  4108f8:	pop    es
  4108f9:	inc    ebx
  4108fa:	mov    eax,0x9c9b0857
  4108ff:	xor    esi,DWORD PTR [ecx+0x43]
  410902:	pop    eax
  410903:	out    dx,al
  410904:	pop    ebx
  410905:	xor    bl,BYTE PTR [eax*8-0x70ea8863]
  41090c:	jg     0x4108c7
  41090e:	bound  ebp,QWORD PTR [edx+0x2e]
  410911:	out    0x17,al
  410913:	jns    0x41097d
  410915:	pop    esi
  410916:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410917:	or     cl,BYTE PTR [ebx-0xa9f7b87]
  41091d:	in     eax,dx
  41091e:	popa   
  41091f:	(bad)  
  410920:	test   DWORD PTR [eax+0x31034305],0xa412f6ac
  41092a:	stc    
  41092b:	jb     0x410915
  41092d:	ja     0x4108fa
  41092f:	std    
  410930:	jge    0x4108d4
  410932:	call   0x229e3bde
  410937:	cmp    bl,dl
  410939:	add    dl,bh
  41093b:	add    DWORD PTR [ebx],0xffffff90
  41093e:	and    esp,ebx
  410940:	or     eax,0x1748ad0b
  410945:	xchg   BYTE PTR ds:0x45b37bc9,ch
  41094b:	sub    al,0x7a
  41094d:	(bad)  
  41094e:	sbb    al,BYTE PTR [ebx+0x30ddce7c]
  410954:	push   0x67485d34
  410959:	neg    DWORD PTR [edx-0x50]
  41095c:	clc    
  41095d:	fst    DWORD PTR [ebp-0x41]
  410960:	add    BYTE PTR [ebx],0xc0
  410963:	xor    eax,0x7cfd3c40
  410968:	adc    al,0xaf
  41096a:	sbb    eax,0x9f279ad0
  41096f:	and    BYTE PTR [edi],bl
  410971:	and    eax,0xab6c1dee
  410976:	pop    edx
  410977:	cmp    al,0xf4
  410979:	in     eax,dx
  41097a:	pop    edx
  41097b:	js     0x4109fa
  41097d:	mov    al,ds:0x9eb021ce
  410982:	mov    edi,0xed7e5e39
  410987:	and    BYTE PTR [edx*1-0xfbbf1a],dh
  41098e:	mov    edx,DWORD PTR [edi-0x58e8af45]
  410994:	sbb    eax,ecx
  410996:	bnd jg 0x4109f7
  410999:	les    ecx,FWORD PTR [si]
  41099c:	jmp    0x410951
  41099e:	mov    eax,0x671ed46c
  4109a3:	xchg   edx,eax
  4109a4:	cmp    ch,BYTE PTR [edi+0x71c12c94]
  4109aa:	sbb    al,0xf5
  4109ac:	shr    esi,1
  4109ae:	inc    ebx
  4109af:	daa    
  4109b0:	imul   ebx,ebx,0xffffffff
  4109b3:	(bad)  
  4109b4:	clc    
  4109b5:	hlt    
  4109b6:	aas    
  4109b7:	fcom   QWORD PTR [edi]
  4109b9:	push   esi
  4109ba:	pop    esi
  4109bb:	cli    
  4109bc:	or     BYTE PTR [esi],0x44
  4109bf:	sub    bh,cl
  4109c1:	mov    ah,0xd8
  4109c3:	add    ecx,DWORD PTR [esp+ebx*1]
  4109c6:	les    ebx,FWORD PTR [edx-0x1a]
  4109c9:	popa   
  4109ca:	dec    eax
  4109cb:	(bad)  
  4109cc:	push   ss
  4109cd:	in     eax,0x47
  4109cf:	inc    ecx
  4109d0:	aas    
  4109d1:	scas   eax,DWORD PTR es:[edi]
  4109d2:	push   ds
  4109d3:	pop    esi
  4109d4:	ds ins BYTE PTR es:[edi],dx
  4109d6:	inc    edx
  4109d7:	test   eax,0x30ed80b1
  4109dc:	retf   0x2ef1
  4109df:	pop    ebx
  4109e0:	xchg   esi,eax
  4109e1:	mov    cl,0xc2
  4109e3:	add    al,0x84
  4109e5:	pop    si
  4109e7:	add    BYTE PTR [ecx-0x37945bdd],bl
  4109ed:	daa    
  4109ee:	je     0x410996
  4109f0:	or     edi,DWORD PTR [ebp-0x3ab968c4]
  4109f6:	and    DWORD PTR [edi-0x4f0fcb85],0xffffff83
  4109fd:	mov    edx,0x4607b7c3
  410a02:	lea    esi,[ebx-0x50]
  410a05:	les    ebp,FWORD PTR [esp+edi*4]
  410a08:	popa   
  410a09:	ss (bad) 
  410a0b:	in     eax,0x17
  410a0d:	and    DWORD PTR [ecx+0x4bf2682f],ebp
  410a13:	mov    BYTE PTR [ecx-0xcd36c42],bh
  410a19:	mov    WORD PTR [edx],?
  410a1b:	cwde   
  410a1c:	addr16 push eax
  410a1e:	add    al,0x20
  410a20:	and    eax,edx
  410a22:	mov    edx,0xc0b74801
  410a27:	inc    ebx
  410a28:	mov    ecx,0xa980c515
  410a2d:	cs je  0x410a08
  410a30:	mov    esp,edi
  410a32:	xchg   DWORD PTR [ecx+0x7fc513c8],ecx
  410a38:	push   es
  410a39:	xchg   esi,eax
  410a3a:	jnp    0x410a32
  410a3c:	or     BYTE PTR [edi+ebx*1+0x4f],bh
  410a40:	sar    DWORD PTR [edx+edi*4-0x47669ac],cl
  410a47:	push   esp
  410a48:	xor    BYTE PTR [edx+eiz*2+0xe0192d0],ah
  410a4f:	ja     0x4109da
  410a51:	fldcw  WORD PTR [esi-0x72]
  410a54:	inc    ebx
  410a55:	push   edi
  410a56:	popf   
  410a57:	(bad)  
  410a59:	leave  
  410a5a:	test   eax,0xe427d8ad
  410a5f:	out    0xcf,al
  410a61:	(bad)  
  410a62:	mov    ds:0x5e00a8c4,eax
  410a67:	outs   dx,DWORD PTR ds:[esi]
  410a68:	xchg   ecx,eax
  410a69:	inc    ebp
  410a6a:	sub    DWORD PTR [ebx+0x42f1b644],esi
  410a70:	pop    es
  410a71:	add    BYTE PTR [ecx+eiz*2+0x64],dl
  410a75:	dec    ecx
  410a76:	mov    cl,BYTE PTR [ebx]
  410a78:	mov    ds:0xc6d56a2e,al
  410a7d:	mov    ?,WORD PTR ds:0xf07a3e8a
  410a83:	cmp    ecx,DWORD PTR [ebx+0x181075ba]
  410a89:	rcr    esi,1
  410a8b:	mov    BYTE PTR [edi+eiz*2],bh
  410a8e:	pusha  
  410a8f:	xor    ah,dl
  410a91:	xchg   ebp,eax
  410a92:	jmp    0x410ac0
  410a94:	dec    esp
  410a95:	out    0x36,eax
  410a97:	aam    0x7f
  410a99:	adc    DWORD PTR [eax+ebp*2+0x73],edi
  410a9d:	dec    esi
  410a9e:	adc    DWORD PTR [eax-0x33721805],edi
  410aa4:	xor    ah,bh
  410aa6:	add    eax,0x32362ef7
  410aab:	ret    
  410aac:	test   edi,ecx
  410aae:	stos   DWORD PTR es:[edi],eax
  410aaf:	push   edi
  410ab0:	outs   dx,DWORD PTR ds:[esi]
  410ab1:	test   BYTE PTR [ebx],ch
  410ab3:	mov    edx,0x9354261
  410ab8:	adc    BYTE PTR [ebx+0x32],al
  410abb:	sub    al,0x88
  410abd:	push   ss
  410abe:	ss ret 
  410ac0:	hlt    
  410ac1:	xchg   esi,eax
  410ac2:	rol    DWORD PTR [edx-0x7],0xaf
  410ac6:	imul   ecx,DWORD PTR [edx+0x5a312d79],0xffffffcc
  410acd:	inc    ebx
  410ace:	ror    BYTE PTR [edi],0x96
  410ad1:	lods   eax,DWORD PTR ds:[esi]
  410ad2:	mov    eax,0xdfedf76c
  410ad7:	mov    al,ds:0x7c5ca20e
  410adc:	scas   eax,DWORD PTR es:[edi]
  410add:	push   ebx
  410ade:	sub    al,bl
  410ae0:	leave  
  410ae1:	test   al,0xbf
  410ae3:	pusha  
  410ae4:	dec    esp
  410ae5:	jmp    0xafe3:0xa14e4f5b
  410aec:	test   BYTE PTR [eax-0x18919956],ch
  410af2:	push   ebp
  410af3:	add    al,0x79
  410af5:	push   eax
  410af6:	dec    ecx
  410af7:	fisubr WORD PTR [esi+0x368251f3]
  410afd:	mov    ebp,0x668036c2
  410b02:	(bad)  
  410b03:	cwde   
  410b04:	popf   
  410b05:	(bad)  
  410b06:	iret   
  410b07:	mov    ds:0x67b0537f,eax
  410b0c:	mov    ds:0xdce19dcd,al
  410b11:	xchg   esi,eax
  410b12:	jle    0x410a9f
  410b14:	push   ebx
  410b15:	ins    BYTE PTR es:[edi],dx
  410b16:	jnp    0x410ad8
  410b18:	cmp    esp,edi
  410b1a:	(bad)  
  410b1c:	iret   
  410b1d:	lea    ebp,[esi]
  410b1f:	mov    BYTE PTR [ebx],ah
  410b21:	mov    edx,0x45566972
  410b26:	cmp    al,0x66
  410b28:	ja     0x410ab5
  410b2a:	inc    edx
  410b2b:	mov    dh,0x1a
  410b2d:	addr16 repz mov ds:0x4d5d,al
  410b32:	pop    esp
  410b33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410b34:	jae    0x410af0
  410b36:	pop    ds
  410b37:	or     edx,esi
  410b39:	sub    DWORD PTR [eax],ecx
  410b3b:	inc    DWORD PTR ds:0xa63bfb28
  410b41:	push   edx
  410b42:	jae    0x410b41
  410b44:	mov    edx,0x93567987
  410b49:	inc    ecx
  410b4a:	push   0xe124644d
  410b4f:	rcl    BYTE PTR [ebx-0x73eaf0cd],0xa3
  410b56:	xchg   ecx,edi
  410b58:	dec    ebx
  410b59:	push   es
  410b5a:	cwde   
  410b5b:	mov    esp,DWORD PTR [ebx]
  410b5d:	jecxz  0x410b4c
  410b5f:	mov    dl,0x8d
  410b61:	inc    DWORD PTR [ebp+0x51521e1]
  410b67:	(bad)  
  410b69:	xor    al,0x51
  410b6b:	(bad)
  410b6f:	clc    
  410b70:	(bad)  
  410b72:	jae    0x410afa
  410b74:	fwait
  410b75:	(bad)  
  410b76:	and    BYTE PTR [eax+0x57515047],ah
  410b7c:	mov    bl,0x35
  410b7e:	and    eax,0xa2e8c397
  410b83:	push   edx
  410b84:	or     bl,al
  410b86:	mov    ebx,0xbdfa867b
  410b8b:	out    0x85,al
  410b8d:	lods   eax,DWORD PTR ds:[esi]
  410b8e:	sbb    eax,0x2c175330
  410b93:	mov    dh,0x5a
  410b95:	daa    
  410b96:	and    eax,0x9221eb7d
  410b9b:	and    al,0x7b
  410b9d:	popa   
  410b9e:	es xor eax,0x4a895ccb
  410ba4:	push   eax
  410ba5:	or     eax,0xc057027d
  410baa:	dec    BYTE PTR [ecx-0x36]
  410bad:	xchg   edi,eax
  410bae:	test   BYTE PTR [ebp-0x4d3b9d3e],0xe5
  410bb5:	dec    esi
  410bb6:	aas    
  410bb7:	fstp   TBYTE PTR [eax]
  410bb9:	into   
  410bba:	xor    DWORD PTR [eax+0x11],esi
  410bbd:	fsubr  DWORD PTR [ecx]
  410bbf:	xor    esp,DWORD PTR [eax]
  410bc1:	dec    edi
  410bc2:	fs (bad) 
  410bc4:	rol    edi,cl
  410bc6:	adc    cl,dh
  410bc8:	(bad)  
  410bc9:	mov    esi,0x474e5830
  410bce:	daa    
  410bcf:	rcr    BYTE PTR [esi],cl
  410bd1:	cwde   
  410bd2:	(bad)  
  410bd3:	xor    esi,DWORD PTR [ebp+0x50]
  410bd6:	ffreep st(3)
  410bd8:	std    
  410bd9:	fsubr  st(2),st
  410bdb:	stos   DWORD PTR es:[edi],eax
  410bdc:	push   eax
  410bdd:	imul   ebp,DWORD PTR [edi],0xfb92feb9
  410be3:	fidivr DWORD PTR [eax-0x67]
  410be6:	in     eax,0xaf
  410be8:	mov    ds:0x38f19da,al
  410bed:	pop    eax
  410bee:	cld    
  410bef:	repz idiv DWORD PTR [edi+edx*8]
  410bf3:	stos   DWORD PTR es:[edi],eax
  410bf4:	jno    0x410bc5
  410bf6:	pop    eax
  410bf7:	stc    
  410bf8:	dec    esp
  410bf9:	jp     0x410c4f
  410bfb:	inc    ecx
  410bfc:	add    bh,bl
  410bfe:	pop    es
  410bff:	repz push ebp
  410c01:	mov    esi,ebx
  410c03:	rol    BYTE PTR [esi+0x1b],cl
  410c06:	pusha  
  410c07:	mov    edi,0x47f0bd2
  410c0c:	jmp    0xdc38d94b
  410c11:	sbb    BYTE PTR [esi],0x98
  410c14:	std    
  410c15:	pop    esi
  410c16:	sub    cl,al
  410c18:	inc    edx
  410c19:	repnz mov cl,BYTE PTR [esi-0x18]
  410c1d:	out    0x90,al
  410c1f:	div    BYTE PTR [ebx+0x5d]
  410c22:	into   
  410c23:	ja     0x410c1c
  410c25:	adc    eax,0x85d9412b
  410c2a:	cmp    DWORD PTR [ebx-0x58],edx
  410c2d:	cmp    esp,DWORD PTR [eax+0xe69eb03]
  410c33:	mov    dl,0x1
  410c35:	out    0x3,eax
  410c37:	dec    ebx
  410c38:	or     al,0xc7
  410c3a:	pop    eax
  410c3b:	rol    BYTE PTR ds:0x28e565b4,1
  410c41:	sbb    BYTE PTR [esi-0x7f],bh
  410c44:	popa   
  410c45:	pop    ecx
  410c46:	fldenv [eax+edx*1-0x2f]
  410c4a:	fsub   st(3),st
  410c4c:	mov    bl,BYTE PTR [edx-0x5e0ab80f]
  410c52:	shl    BYTE PTR ds:0x46de0c0d,1
  410c58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410c59:	jbe    0x410c85
  410c5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410c5c:	push   esi
  410c5d:	ss push ebp
  410c5f:	fidiv  DWORD PTR [edx-0x6d]
  410c62:	pop    ds
  410c63:	jbe    0x410cc3
  410c65:	mov    BYTE PTR [esi+0x9],ch
  410c68:	ds xchg ebp,eax
  410c6a:	imul   esi,eax,0x9c40e60c
  410c70:	push   esp
  410c71:	mov    eax,ds:0x467e3f73
  410c76:	retf   0x8038
  410c79:	mov    cs,esi
  410c7b:	jne    0x410cc5
  410c7d:	pop    ebx
  410c7e:	cdq    
  410c7f:	push   fs
  410c81:	out    dx,eax
  410c82:	dec    esp
  410c83:	int3   
  410c84:	push   ds
  410c85:	dec    esp
  410c86:	jae    0x410c09
  410c88:	mov    ebp,0xcf0b672d
  410c8d:	(bad)
  410c90:	dec    edi
  410c91:	in     eax,dx
  410c92:	jo     0x410d0a
  410c94:	mov    bl,0xa4
  410c96:	rol    ebp,cl
  410c98:	fcomp  DWORD PTR [ecx+ecx*8-0x3]
  410c9c:	xor    al,dh
  410c9e:	sub    BYTE PTR [esp+ebx*1+0x38],bl
  410ca2:	popf   
  410ca3:	or     DWORD PTR [ebx],0xffffff81
  410ca6:	sbb    DWORD PTR [eax],0x7fb976e5
  410cac:	outs   dx,DWORD PTR ds:[esi]
  410cad:	scas   eax,DWORD PTR es:[edi]
  410cae:	or     cl,BYTE PTR [ecx-0x21f44b87]
  410cb4:	add    edi,esp
  410cb6:	fst    DWORD PTR ds:0x37900d6c
  410cbc:	scas   al,BYTE PTR es:[edi]
  410cbd:	dec    ebx
  410cbe:	xor    edx,esp
  410cc0:	test   al,0xf3
  410cc2:	repz dec ecx
  410cc4:	not    DWORD PTR [eax]
  410cc6:	sub    eax,0xe0c287d8
  410ccb:	mov    ah,0xc3
  410ccd:	pop    esi
  410cce:	sbb    BYTE PTR [esi-0x3b2480dd],0xdd
  410cd5:	(bad)  
  410cd6:	xchg   edi,eax
  410cd7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410cd8:	push   cs
  410cd9:	ret    
  410cda:	push   edi
  410cdb:	(bad)  
  410cdc:	fs pop ds
  410cde:	hlt    
  410cdf:	aam    0x9f
  410ce1:	xor    eax,0x9e22675d
  410ce6:	ror    BYTE PTR [ebx],1
  410ce8:	leave  
  410ce9:	stc    
  410cea:	xor    edi,DWORD PTR [edx-0x6e]
  410ced:	fld    DWORD PTR [esi+0x2f7ed224]
  410cf3:	into   
  410cf4:	xchg   ecx,eax
  410cf5:	or     al,0x6d
  410cf7:	addr16 nop
  410cf9:	mov    edx,0x3d812856
  410cfe:	lea    eax,[edi+0x5dd134be]
  410d04:	stc    
  410d05:	call   0x838ad22a
  410d0a:	(bad)  [eax-0x734e5dce]
  410d10:	lods   eax,DWORD PTR ds:[esi]
  410d11:	pop    ebp
  410d12:	mov    edi,0x6af009f1
  410d17:	retf   0x637e
  410d1a:	icebp  
  410d1b:	jle    0x410d5f
  410d1d:	sar    DWORD PTR [ecx+eiz*1+0x3bac7a2c],1
  410d24:	xor    BYTE PTR [eax-0x18],dl
  410d27:	cmp    BYTE PTR ds:0x6cfba6a7,0x17
  410d2e:	in     eax,0x91
  410d30:	aaa    
  410d31:	lock xor DWORD PTR [ecx+0x7bfb842c],edi
  410d38:	adc    eax,0xe9d813ee
  410d3d:	jg     0x410d42
  410d3f:	sti    
  410d40:	lods   eax,DWORD PTR ds:[si]
  410d42:	and    eax,edi
  410d44:	sbb    ah,al
  410d46:	cmp    eax,0x158e06d1
  410d4b:	adc    al,0xbc
  410d4d:	jp     0x410dad
  410d4f:	pop    ecx
  410d50:	adc    ecx,esi
  410d52:	mov    ah,0xbc
  410d54:	mov    esp,DWORD PTR [esi]
  410d56:	jne    0x410d54
  410d58:	inc    ebx
  410d59:	shl    DWORD PTR [ecx-0xb],0x6a
  410d5d:	push   esi
  410d5e:	push   ecx
  410d5f:	mov    BYTE PTR [ebx+ebx*1+0x5a],bh
  410d63:	mov    gs,WORD PTR [eax+0x10006840]
  410d69:	adc    BYTE PTR [edi-0x41],al
  410d6c:	mov    esp,0x10f488f8
  410d71:	inc    ebp
  410d72:	retf   0xe8d7
  410d75:	pop    ebx
  410d76:	inc    edx
  410d77:	push   0xeb66d8e4
  410d7c:	sbb    esp,0x6d40f6e5
  410d82:	shr    DWORD PTR [edx+0x654b1f95],cl
  410d88:	push   esi
  410d89:	inc    ebx
  410d8a:	outs   dx,BYTE PTR ds:[esi]
  410d8b:	jge    0x410d86
  410d8d:	pop    ds
  410d8e:	and    BYTE PTR [ecx],dl
  410d90:	or     BYTE PTR [ecx+esi*2-0x1b618a92],ah
  410d97:	push   eax
  410d98:	sub    DWORD PTR [ecx-0x4a4de8b8],ebp
  410d9e:	xlat   BYTE PTR ds:[ebx]
  410d9f:	mov    edx,0x900bfe07
  410da4:	mov    al,0x9f
  410da6:	push   edi
  410da7:	sub    BYTE PTR [edx-0x31],dh
  410daa:	mov    eax,ds:0x7ce8d2ed
  410daf:	imul   ecx,DWORD PTR ds:0xf49ed9c2,0xda1807b5
  410db9:	add    DWORD PTR [ebx],ebx
  410dbb:	std    
  410dbc:	mov    BYTE PTR [ebx],cl
  410dbe:	jno    0x410d71
  410dc0:	adc    eax,0x53b4d1aa
  410dc5:	sbb    DWORD PTR [ebx],ebx
  410dc7:	lock sbb edx,DWORD PTR [edx-0x759c9364]
  410dce:	sbb    edi,DWORD PTR [esi-0x6a2d9e0]
  410dd4:	fxch   st(0)
  410dd6:	addr16 sub al,0x45
  410dd9:	inc    edi
  410dda:	sub    dl,bl
  410ddc:	pop    edi
  410ddd:	inc    ecx
  410dde:	sbb    ch,cl
  410de0:	bound  ecx,QWORD PTR [edx-0x43aadf3d]
  410de6:	repnz arpl WORD PTR ds:0x33c8d5b5,ax
  410ded:	jecxz  0x410ded
  410def:	jg     0x410e10
  410df1:	push   edx
  410df2:	or     DWORD PTR [eax+0x49a80033],esi
  410df8:	cmp    ch,dh
  410dfa:	ds in  eax,dx
  410dfc:	jg     0x410d98
  410dfe:	push   ecx
  410dff:	jge    0x410e5a
  410e01:	adc    ebp,edx
  410e03:	push   0x7e
  410e05:	jg     0x410d93
  410e07:	retf   
  410e08:	mov    ah,0x9
  410e0a:	into   
  410e0b:	cmp    BYTE PTR [ecx+eax*8+0x1f],bh
  410e0f:	mul    bh
  410e11:	test   eax,0xde3efd91
  410e16:	sub    al,0x86
  410e18:	ins    DWORD PTR es:[edi],dx
  410e19:	lock fcomp DWORD PTR [ebx]
  410e1c:	in     al,dx
  410e1d:	sub    ch,BYTE PTR [edx+0x40dd780f]
  410e23:	push   ecx
  410e24:	push   ebx
  410e25:	adc    BYTE PTR [eax],ch
  410e27:	neg    BYTE PTR [edx-0x1b1b7292]
  410e2d:	stos   BYTE PTR es:[edi],al
  410e2e:	test   DWORD PTR [eax],0x70e1b35b
  410e34:	aad    0x4e
  410e36:	mov    DWORD PTR [esi+0x7d03d651],ebp
  410e3c:	in     al,dx
  410e3d:	ret    0xb77b
  410e40:	and    al,0x9b
  410e42:	push   es
  410e43:	cwde   
  410e44:	lds    ecx,FWORD PTR ds:0xed093635
  410e4a:	xchg   ecx,eax
  410e4b:	fdivr  st,st(0)
  410e4d:	leave  
  410e4e:	pushf  
  410e4f:	ret    0xca0f
  410e52:	push   eax
  410e53:	jae    0x410ea6
  410e55:	pop    ds
  410e56:	cs (bad) 
  410e58:	fcomp  DWORD PTR [ebx+ebx*2+0x0]
  410e5c:	pusha  
  410e5d:	sahf   
  410e5e:	fimul  DWORD PTR [edx+0x5]
  410e61:	cli    
  410e62:	rcr    DWORD PTR [esi-0x7ddd2f3e],1
  410e68:	adc    eax,0x57767fed
  410e6d:	jnp    0x410e59
  410e6f:	inc    edx
  410e70:	stos   BYTE PTR es:[edi],al
  410e71:	sar    BYTE PTR gs:[ebp-0x4e45b3c6],0x21
  410e79:	jb     0x410e72
  410e7b:	(bad)  
  410e7c:	retf   
  410e7d:	add    eax,0x7b099a3c
  410e82:	sub    BYTE PTR [edi-0x4f],dl
  410e85:	push   edx
  410e86:	(bad)  
  410e88:	aas    
  410e89:	mov    eax,0x4ebd1518
  410e8e:	inc    eax
  410e8f:	shr    BYTE PTR [esi+edx*8+0x7a094369],cl
  410e96:	add    dl,ch
  410e98:	cmp    al,0x72
  410e9a:	rcr    DWORD PTR [eax-0x5d6319c9],0x18
  410ea1:	adc    BYTE PTR [ecx+0x4743ec4b],ah
  410ea7:	fiadd  WORD PTR [esi+0x75922c45]
  410ead:	cs jae 0x410e43
  410eb0:	loope  0x410f31
  410eb2:	mov    ds:0x66e4cc1d,eax
  410eb7:	push   0x40
  410eb9:	xor    eax,0x76
  410ebc:	and    dh,bl
  410ebe:	sbb    DWORD PTR [edi-0x29],eax
  410ec1:	add    DWORD PTR [edx-0x1995a506],esp
  410ec7:	or     DWORD PTR ds:0x6b62e33a,eax
  410ecd:	cdq    
  410ece:	sub    eax,0x80f36d49
  410ed3:	sbb    esi,DWORD PTR [edi]
  410ed5:	and    ch,al
  410ed7:	push   ss
  410ed8:	(bad)  
  410ed9:	mov    bl,bh
  410edb:	sahf   
  410edc:	nop
  410edd:	jnp    0x410ee7
  410edf:	mov    edi,0x91c7ceeb
  410ee4:	sbb    BYTE PTR [ebx-0x71],ah
  410ee7:	xchg   ebp,eax
  410ee8:	gs stos BYTE PTR es:[edi],al
  410eea:	xchg   eax,eax
  410eec:	ins    DWORD PTR es:[edi],dx
  410eed:	push   es
  410eee:	mov    al,ds:0x35bbee9e
  410ef3:	inc    ecx
  410ef4:	loop   0x410f10
  410ef6:	push   esi
  410ef7:	mov    ds:0x3c562685,eax
  410efc:	add    al,0xaa
  410efe:	inc    esi
  410eff:	ret    0x264d
  410f02:	shl    DWORD PTR [ebp+0xd54093a],cl
  410f08:	enter  0x3d15,0xb3
  410f0c:	jl     0x410f2f
  410f0e:	jmp    0x410f66
  410f10:	cmp    BYTE PTR [edi],0x3f
  410f13:	clc    
  410f14:	jmp    0x66c2:0x44111928
  410f1b:	and    al,0x68
  410f1d:	arpl   dx,si
  410f1f:	rcl    DWORD PTR ds:0x7e84c942,cl
  410f25:	adc    BYTE PTR [eax],ch
  410f27:	(bad)  
  410f28:	(bad)  
  410f2a:	test   al,0xf
  410f2c:	dec    esp
  410f2d:	mov    dh,0x33
  410f2f:	outs   dx,DWORD PTR ds:[esi]
  410f30:	mov    ds:0x4ac14ab4,eax
  410f35:	mov    ds:0x9dab96de,eax
  410f3a:	in     eax,dx
  410f3b:	nop
  410f3c:	adc    al,0x45
  410f3e:	loop   0x410ede
  410f40:	out    0xae,eax
  410f42:	add    BYTE PTR [ebp+0xa],dh
  410f45:	das    
  410f46:	stos   DWORD PTR es:[edi],eax
  410f47:	lods   eax,DWORD PTR ds:[esi]
  410f48:	inc    edx
  410f49:	mov    ch,BYTE PTR ss:[eax+ecx*4+0x34]
  410f4e:	out    0xc8,eax
  410f50:	and    bl,BYTE PTR [ecx]
  410f52:	mov    WORD PTR [edi-0x28d06a45],cs
  410f58:	aas    
  410f59:	mov    edx,0x51c9beb3
  410f5e:	or     BYTE PTR [edi-0x410ea68d],bh
  410f64:	xor    edx,DWORD PTR [esi-0x57]
  410f67:	loopne 0x410f3d
  410f69:	inc    edx
  410f6a:	dec    esi
  410f6b:	sti    
  410f6c:	aas    
  410f6d:	inc    eax
  410f6e:	or     DWORD PTR [edx-0x3c],0x3a5ee91f
  410f75:	scas   eax,DWORD PTR es:[edi]
  410f76:	retf   
  410f77:	adc    eax,0xa679969a
  410f7c:	das    
  410f7d:	mov    al,ds:0x2ce73a28
  410f82:	ror    BYTE PTR [ecx],0xcf
  410f85:	clc    
  410f86:	add    ch,dh
  410f88:	sbb    al,0x1c
  410f8a:	jae    0x410f46
  410f8c:	mov    eax,ds:0x24aa9fdc
  410f91:	or     ebx,DWORD PTR [esi]
  410f93:	adc    ebx,DWORD PTR [eax+0x60]
  410f96:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  410f98:	sbb    ebx,ebp
  410f9a:	jmp    0xc09:0x86195ca9
  410fa1:	mov    cl,0x82
  410fa3:	in     ax,dx
  410fa5:	mov    esi,0xf137e46f
  410faa:	cmp    esi,edx
  410fac:	neg    DWORD PTR [ebx]
  410fae:	jmp    0x410f77
  410fb0:	sbb    ecx,0xcaf832c
  410fb6:	jmp    0x5683:0x9f3a9832
  410fbd:	fistp  WORD PTR ds:0xbca5
  410fc2:	icebp  
  410fc3:	aas    
  410fc4:	xor    eax,0xe1098e2
  410fc9:	outs   dx,DWORD PTR ds:[esi]
  410fca:	fmul   DWORD PTR [edi+esi*8+0x270c43f3]
  410fd1:	dec    esi
  410fd2:	not    edi
  410fd4:	int3   
  410fd5:	aas    
  410fd6:	lods   al,BYTE PTR ds:[esi]
  410fd7:	ja     0x410f5c
  410fd9:	js     0x410ff4
  410fdb:	fisttp WORD PTR [eax+0x71b149f0]
  410fe1:	(bad)  
  410fe3:	je     0x410f98
  410fe5:	adc    DWORD PTR [edi],esi
  410fe7:	shl    BYTE PTR [eax+0x5d30df9e],cl
  410fed:	(bad)  
  410fee:	repz cmp ebx,ecx
  410ff1:	imul   eax,DWORD PTR [esi],0x46
  410ff4:	(bad)
  410ff8:	ret    0x5069
  410ffb:	call   FWORD PTR [edx]
  410ffd:	cmc    
  410ffe:	fsub   DWORD PTR [edi+0x52e67611]
  411004:	xor    eax,0x8e26827
  411009:	pusha  
  41100a:	loopne 0x411084
  41100c:	mov    al,0xda
  41100e:	dec    ebp
  41100f:	mov    WORD PTR [ecx],?
  411011:	mov    eax,ds:0x5c3f1c79
  411016:	inc    esi
  411017:	aas    
  411018:	mov    al,ds:0xa269466c
  41101d:	lods   eax,DWORD PTR ds:[esi]
  41101e:	(bad)
  411021:	and    BYTE PTR [ebx-0x513688f3],dl
  411027:	cwde   
  411028:	or     al,BYTE PTR [ebx+0xa]
  41102b:	(bad)  
  41102c:	in     al,0xef
  41102e:	cmp    DWORD PTR [edx],ebx
  411030:	add    eax,0xc72b029c
  411035:	or     ebp,DWORD PTR [edx+0x2fd1ab0b]
  41103b:	cmp    ah,BYTE PTR [edx]
  41103d:	cmp    eax,ecx
  41103f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411040:	hlt    
  411041:	stos   DWORD PTR es:[edi],eax
  411042:	add    BYTE PTR [eax+ebx*1+0x39b56ba3],dl
  411049:	lahf   
  41104a:	iret   
  41104b:	xor    bl,BYTE PTR [ecx+0x61a4d0ca]
  411051:	adc    eax,0x8c058c96
  411056:	dec    ebx
  411057:	xor    DWORD PTR [esi+ebx*1+0x6e],0x6e
  41105c:	adc    al,0x2e
  41105e:	mov    ebx,0x9da3de14
  411063:	es pop ebx
  411065:	mov    eax,ds:0x13bf4f4
  41106a:	mov    esi,0x1cf35fff
  41106f:	add    BYTE PTR [edi-0x4e],ch
  411072:	leave  
  411073:	int3   
  411074:	fimul  WORD PTR [esi]
  411076:	push   esi
  411077:	arpl   cx,bp
  411079:	(bad)  
  41107a:	shl    DWORD PTR [ecx+eax*8+0x41],1
  41107e:	mov    ecx,0x9c9bf01b
  411083:	push   0x4896a76e
  411088:	mov    edi,0x7d943da4
  41108d:	sti    
  41108e:	leave  
  41108f:	mov    ss,WORD PTR [esi+0x4f38db81]
  411095:	test   eax,0x940ab8c8
  41109a:	xchg   esi,eax
  41109b:	pop    es
  41109c:	or     esi,DWORD PTR [edi]
  41109e:	gs mov edx,0xd4550ff
  4110a4:	adc    al,0x8f
  4110a6:	sub    DWORD PTR [edx*8-0x80518a1],ecx
  4110ad:	cli    
  4110ae:	je     0x41112f
  4110b0:	sti    
  4110b1:	jo     0x4110e7
  4110b3:	dec    ecx
  4110b4:	xchg   esp,eax
  4110b5:	(bad)  
  4110b9:	push   esp
  4110ba:	xor    al,BYTE PTR [edx+0x63363837]
  4110c0:	push   0x45
  4110c2:	out    dx,eax
  4110c3:	push   esp
  4110c4:	pop    es
  4110c5:	jge    0x41104d
  4110c7:	sub    bh,BYTE PTR [esp+edx*2+0x3e]
  4110cb:	xchg   BYTE PTR [eax+edi*4-0x72b55d6f],al
  4110d2:	cwde   
  4110d3:	inc    esp
  4110d4:	ja     0x41108e
  4110d6:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  4110d8:	or     BYTE PTR [ebp+0x7d],bl
  4110db:	sbb    al,0x68
  4110dd:	sbb    DWORD PTR [ecx+esi*2+0x617128e7],edi
  4110e4:	stos   BYTE PTR es:[edi],al
  4110e5:	cmc    
  4110e6:	out    0xfa,al
  4110e8:	sbb    eax,ecx
  4110ea:	push   0x373a16e
  4110ef:	mov    ecx,0x2bcdce06
  4110f4:	xor    eax,0x651a747c
  4110f9:	outs   dx,BYTE PTR ds:[esi]
  4110fa:	(bad)  [ebx+0x47137c45]
  411100:	cs add cl,bh
  411103:	and    eax,0x9e4e309a
  411108:	sub    bl,BYTE PTR ds:0x887208ce
  41110e:	mov    al,ds:0x8b12e7a7
  411113:	xor    al,0x27
  411115:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411116:	arpl   WORD PTR [esi],dx
  411118:	inc    edx
  411119:	mov    ah,0x71
  41111b:	adc    al,0x0
  41111d:	shr    DWORD PTR [edx+0x44],0x3f
  411121:	mov    bl,0x36
  411123:	xchg   edi,eax
  411124:	call   0x59aa46f2
  411129:	jg     0x4110e3
  41112b:	cmp    eax,0x5d4bfd3b
  411130:	popa   
  411131:	jo     0x4110db
  411133:	je     0x4110cc
  411135:	nop
  411136:	ins    DWORD PTR es:[edi],dx
  411137:	sar    dh,0x92
  41113a:	(bad)  
  41113b:	stc    
  41113c:	dec    ebx
  41113d:	xchg   esi,eax
  41113e:	pop    eax
  41113f:	mov    bl,ch
  411141:	in     eax,dx
  411142:	pop    ebp
  411143:	popa   
  411144:	xchg   esp,eax
  411145:	popf   
  411146:	and    edi,DWORD PTR [esi]
  411148:	xor    al,0x68
  41114a:	cmc    
  41114b:	mov    WORD PTR [edx+ebx*8+0x7f],ds
  41114f:	push   ss
  411150:	sti    
  411151:	dec    ebx
  411152:	adc    BYTE PTR [esi-0x34ca8762],0x39
  411159:	dec    eax
  41115a:	pop    esi
  41115b:	jp     0x41113a
  41115d:	loop   0x411185
  41115f:	in     al,0x55
  411161:	xchg   esi,eax
  411162:	inc    esi
  411163:	es cli 
  411165:	retf   
  411166:	push   0x91d5ca4b
  41116b:	sahf   
  41116c:	push   cs
  41116d:	cmp    ecx,DWORD PTR [ecx+0x4]
  411170:	and    cl,BYTE PTR [esi+edi*4-0x1e]
  411174:	test   al,0x25
  411176:	ret    
  411177:	xor    DWORD PTR [ebp-0x21],edi
  41117a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41117b:	mov    ah,0x61
  41117d:	cld    
  41117e:	xor    DWORD PTR [eax-0x4da076d6],eax
  411184:	sub    BYTE PTR [ebp-0x7a],0x58
  411188:	adc    DWORD PTR [edi-0x41],ecx
  41118b:	retf   0x60c2
  41118e:	ret    
  41118f:	mov    ebx,0xbb5aa9ca
  411194:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411195:	test   al,0xb0
  411197:	ja     0x411150
  411199:	pop    edi
  41119a:	cwde   
  41119b:	mov    edx,0x3ecf38e7
  4111a0:	fnsave [eax-0x68]
  4111a3:	sub    BYTE PTR [eax],cl
  4111a5:	add    ah,BYTE PTR [ecx]
  4111a7:	out    0x59,eax
  4111a9:	fstp   QWORD PTR [edi]
  4111ab:	xchg   bl,bh
  4111ad:	add    dh,BYTE PTR [edi-0x4a]
  4111b0:	pop    esp
  4111b1:	cmp    ebx,0xffffff99
  4111b4:	xor    eax,0x9b9e9eaf
  4111ba:	mov    al,0x46
  4111bc:	inc    ebp
  4111bd:	mov    DWORD PTR [ecx+0xf],esi
  4111c0:	xor    esp,DWORD PTR [eax-0x3f21dcb3]
  4111c6:	xor    eax,DWORD PTR [ecx-0x8]
  4111c9:	cwde   
  4111ca:	push   eax
  4111cb:	mov    ds:0xb7903293,al
  4111d0:	push   0xffffff96
  4111d2:	or     BYTE PTR [ebx],bh
  4111d4:	jp     0x411208
  4111d6:	and    DWORD PTR [edx-0x2a],ebx
  4111d9:	(bad)  
  4111db:	(bad)  
  4111dc:	pop    esp
  4111dd:	daa    
  4111de:	pop    ss
  4111df:	fnstenv [eax+0x6c]
  4111e2:	mov    ds:0x1a2525eb,eax
  4111e7:	or     al,0xfb
  4111e9:	cld    
  4111ea:	scas   eax,DWORD PTR es:[edi]
  4111eb:	ret    
  4111ec:	data16 (bad) 
  4111ee:	test   al,0x38
  4111f0:	(bad)  
  4111f1:	call   FWORD PTR [eax+0x481fe614]
  4111f7:	or     eax,0x48f08ca4
  4111fc:	sbb    esi,esp
  4111fe:	fcom   QWORD PTR [esi]
  411200:	fcomp  DWORD PTR [esi-0x2d]
  411203:	out    dx,eax
  411204:	outs   dx,BYTE PTR ds:[esi]
  411205:	sbb    dl,dh
  411207:	std    
  411208:	pop    ebx
  411209:	jno    0x41126c
  41120b:	pusha  
  41120c:	sub    BYTE PTR [eax],ch
  41120e:	fbld   TBYTE PTR [ebx+0x1d70acda]
  411214:	aam    0x7e
  411216:	jecxz  0x41128e
  411218:	pop    edx
  411219:	ds and bh,cl
  41121c:	(bad)  
  41121d:	inc    ebx
  41121e:	outs   dx,DWORD PTR ds:[esi]
  41121f:	xor    edi,DWORD PTR [ebp+0x27]
  411222:	dec    ecx
  411223:	sbb    ecx,DWORD PTR [esi]
  411225:	int3   
  411226:	mov    eax,eax
  411228:	test   eax,0x61f1e5ec
  41122d:	in     al,0xb3
  41122f:	mov    dl,0xc5
  411231:	mov    ebp,0x9a31d47
  411236:	pop    ebx
  411237:	jmp    0xf79f:0x17d75899
  41123e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41123f:	jbe    0x41125b
  411241:	or     DWORD PTR [edx+0x69],esp
  411244:	loope  0x4111fd
  411246:	sti    
  411247:	sub    ah,dh
  411249:	test   al,0xe7
  41124b:	popa   
  41124c:	push   edi
  41124d:	jecxz  0x41125a
  41124f:	cld    
  411250:	sbb    ecx,DWORD PTR [esi-0x55ccdf3b]
  411256:	rcr    BYTE PTR [ebx+0x584fdbfb],1
  41125c:	bound  esi,QWORD PTR [esi+ebx*8]
  41125f:	or     eax,0x78ac2029
  411264:	leave  
  411265:	sti    
  411266:	fdivr  QWORD PTR ds:0x63886e10
  41126c:	push   es
  41126d:	int    0x6b
  41126f:	hlt    
  411270:	xchg   edx,eax
  411271:	dec    edx
  411272:	jecxz  0x411244
  411274:	in     al,dx
  411275:	aam    0xd1
  411277:	push   ebx
  411278:	stos   BYTE PTR es:[edi],al
  411279:	mov    ds:0x3cca9c32,al
  41127e:	fcmovu st,st(1)
  411280:	pop    di
  411282:	imul   al
  411284:	out    dx,eax
  411285:	pop    es
  411286:	das    
  411287:	daa    
  411288:	adc    al,0xbc
  41128a:	retf   0x2ce1
  41128d:	dec    esp
  41128e:	ret    0x48ba
  411291:	sar    DWORD PTR [ebx],1
  411293:	bound  ebp,QWORD PTR [ebx-0x41]
  411296:	stc    
  411297:	sahf   
  411298:	fbld   TBYTE PTR [eax+0x35e89e8e]
  41129e:	push   esi
  41129f:	call   0x4402:0x1e7d6afd
  4112a6:	inc    ebx
  4112a7:	push   ebx
  4112a8:	pop    esi
  4112a9:	jmp    0xae94a20c
  4112ae:	imul   edi,DWORD PTR [ebx+eax*8+0x24add3af],0x691d9c28
  4112b9:	xchg   cx,ax
  4112bb:	icebp  
  4112bc:	mov    esi,0x40b29ac7
  4112c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4112c2:	lds    esi,FWORD PTR [eax+0x2e89842d]
  4112c8:	ins    BYTE PTR es:[edi],dx
  4112c9:	mov    dl,0xda
  4112cb:	in     al,0x83
  4112cd:	mov    esi,0x5cb3bb60
  4112d2:	outs   dx,BYTE PTR ds:[esi]
  4112d3:	out    dx,eax
  4112d4:	lock mov WORD PTR ds:0xd2f59947,ds
  4112db:	mov    eax,0x828bca9e
  4112e0:	pop    eax
  4112e1:	and    esp,DWORD PTR [ecx+0x30]
  4112e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4112e5:	ins    DWORD PTR es:[edi],dx
  4112e6:	add    DWORD PTR [edi+ecx*4],ebx
  4112e9:	fnsave [ebx+0x42]
  4112ec:	sbb    eax,0x5e7534a4
  4112f1:	push   ebp
  4112f2:	je     0x411371
  4112f4:	jb     0x4112b5
  4112f6:	lods   al,BYTE PTR ds:[esi]
  4112f7:	sbb    DWORD PTR [edx],ebp
  4112f9:	cdq    
  4112fa:	push   edx
  4112fb:	cmp    BYTE PTR [edi-0x3e],0x47
  4112ff:	jno    0x4112ea
  411301:	es shr ecx,0xd5
  411305:	jp     0x4112a9
  411307:	push   esi
  411308:	fnstenv [esi]
  41130a:	loop   0x41137c
  41130c:	jecxz  0x411339
  41130e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41130f:	push   0x144f05
  411314:	xchg   DWORD PTR [ebx-0x30bebdc5],edi
  41131a:	ds pop ebp
  41131c:	adc    al,0x9
  41131e:	rcl    DWORD PTR [ebx],cl
  411320:	imul   eax,DWORD PTR [ebx-0x5e4014fb],0x36
  411327:	cmp    dl,BYTE PTR [ecx+0x18ec172c]
  41132d:	xor    al,0xcf
  41132f:	retf   
  411330:	xchg   esp,eax
  411331:	push   edx
  411332:	hlt    
  411333:	outs   dx,BYTE PTR ds:[esi]
  411334:	cmp    al,0xc8
  411336:	inc    esi
  411337:	add    esi,DWORD PTR [edi]
  411339:	pusha  
  41133a:	repnz inc edx
  41133c:	pop    es
  41133d:	ins    BYTE PTR es:[edi],dx
  41133e:	sar    DWORD PTR [ecx+0x59],cl
  411341:	mov    ch,0xf5
  411343:	(bad)  
  411344:	rcl    DWORD PTR [edi-0x8],1
  411347:	(bad)  
  411348:	(bad)  
  411349:	loopne 0x4113a6
  41134b:	imul   ebx,DWORD PTR [edx+0x7fb0383],0x0
  411352:	mov    eax,0x26ff4366
  411357:	cmp    eax,0x293dde07
  41135c:	mov    al,ds:0xe00cef63
  411361:	les    esi,FWORD PTR [ebp-0x1bb9f3be]
  411367:	lea    ecx,[ecx+0x3a]
  41136a:	shl    BYTE PTR [esi+0x26a10517],1
  411370:	jmp    0x4113a2
  411372:	ss xchg ecx,eax
  411374:	shl    ebx,1
  411376:	lods   eax,DWORD PTR ds:[esi]
  411377:	mov    al,ds:0x571e17cc
  41137c:	jo     0x4113fc
  41137e:	fcom   QWORD PTR [edx-0x3d]
  411381:	(bad)  
  411382:	inc    BYTE PTR [edx-0x81b6d1d]
  411388:	adc    cl,BYTE PTR [eax-0x2a]
  41138b:	push   ds
  41138c:	cwde   
  41138d:	(bad)  
  41138e:	dec    ecx
  41138f:	fwait
  411390:	or     al,0x92
  411392:	mov    ebp,?
  411394:	inc    eax
  411395:	xchg   bl,dl
  411397:	and    al,0x2
  411399:	data16 aaa 
  41139b:	pop    esp
  41139c:	pop    es
  41139d:	sbb    esp,DWORD PTR [ecx+ebp*8-0x18]
  4113a1:	retf   
  4113a2:	mov    al,ds:0x3cfc7e71
  4113a7:	pop    ss
  4113a8:	ret    0x27b4
  4113ab:	(bad)  
  4113ad:	imul   edi,DWORD PTR [esp+ecx*8],0x24
  4113b1:	fwait
  4113b2:	xor    esp,DWORD PTR [ebp-0x67]
  4113b5:	or     al,0x16
  4113b7:	stos   DWORD PTR es:[edi],eax
  4113b8:	popa   
  4113b9:	retf   0x4573
  4113bc:	iret   
  4113bd:	rol    dh,1
  4113bf:	xchg   esp,eax
  4113c0:	fmul   DWORD PTR [edx+0x25]
  4113c3:	mov    ecx,0xa555f39c
  4113c8:	rcl    ecx,1
  4113ca:	adc    eax,0x7c846160
  4113cf:	inc    eax
  4113d0:	mov    esp,0x5c888dd8
  4113d5:	or     eax,0x3ffd9489
  4113da:	daa    
  4113db:	sub    BYTE PTR [esi-0x4a0e3fc6],bl
  4113e1:	push   esp
  4113e2:	dec    ecx
  4113e3:	mov    ah,0x1d
  4113e5:	imul   ebx,DWORD PTR cs:[ebx+0x51],0x4d84026c
  4113ed:	out    0x4e,eax
  4113ef:	sbb    edi,DWORD PTR [edi+0x4e]
  4113f2:	hlt    
  4113f3:	cmp    BYTE PTR [edi+0x43],dl
  4113f6:	mov    ds:0x10fa17a,al
  4113fb:	xor    al,0x0
  4113fd:	mov    dh,0xf5
  4113ff:	mov    al,ds:0xae3bb55
  411404:	inc    eax
  411405:	pusha  
  411406:	xor    DWORD PTR [ebx],eax
  411408:	add    ah,BYTE PTR [esi-0xa]
  41140b:	sub    DWORD PTR [eax+0x5a],esp
  41140e:	pushf  
  41140f:	mov    edi,0xf9f3532a
  411414:	in     al,0x7e
  411416:	xor    al,0xcb
  411418:	lock retf 
  41141a:	aam    0x19
  41141c:	or     eax,0x5067faa3
  411421:	(bad)  
  411423:	mov    ecx,0xe47e45b6
  411428:	cmp    DWORD PTR [edx],esi
  41142a:	mov    ecx,0xf94fd184
  41142f:	int    0x96
  411431:	jmp    0xfa7e:0x4daa70a
  411438:	sub    ch,cl
  41143a:	cmp    esp,ebx
  41143c:	lods   eax,DWORD PTR ds:[esi]
  41143d:	mov    eax,0x4b61c748
  411442:	push   0x36ac0d95
  411447:	mov    ecx,0x33412a34
  41144c:	pop    ebp
  41144d:	add    eax,ebp
  41144f:	xor    al,0x4a
  411451:	mov    bl,0x98
  411453:	loopne 0x41144a
  411455:	ret    
  411456:	jno    0x4114a7
  411458:	add    eax,esi
  41145a:	mov    WORD PTR [edi-0x311e04ed],ds
  411460:	sbb    edi,0x35
  411463:	xor    eax,0xf5f14c56
  411468:	xchg   edi,eax
  411469:	mov    es,WORD PTR [edi+ebx*1]
  41146c:	in     eax,0xa1
  41146e:	add    BYTE PTR [esi+ebp*2],bh
  411471:	mov    eax,0x31b1390b
  411476:	adc    al,0x96
  411478:	pushf  
  411479:	pop    esi
  41147a:	and    edx,DWORD PTR [ecx+0x72c33f8d]
  411480:	mov    WORD PTR [ebx],ss
  411482:	push   0xffffffce
  411484:	int    0x58
  411486:	xor    DWORD PTR ds:0xc9e21045,esp
  41148c:	pop    ebp
  41148d:	jl     0x411439
  41148f:	push   ss
  411490:	adc    al,0xe
  411492:	js     0x4114ae
  411494:	and    DWORD PTR [ebx],ebp
  411496:	shl    bh,1
  411498:	(bad)  
  411499:	std    
  41149a:	cmp    eax,0xcc161ac0
  41149f:	outs   dx,DWORD PTR ds:[esi]
  4114a0:	mov    esi,0xb8e8e3e8
  4114a5:	stc    
  4114a6:	xchg   ebp,eax
  4114a7:	jns    0x411488
  4114a9:	adc    DWORD PTR [ecx-0x3c],ecx
  4114ac:	cmp    DWORD PTR [ecx+eiz*8+0x35fd834f],esp
  4114b3:	mov    edx,0xd9258a09
  4114b8:	inc    edi
  4114b9:	stos   BYTE PTR es:[edi],al
  4114ba:	bound  edi,QWORD PTR [edi-0x5]
  4114bd:	push   ss
  4114be:	sub    BYTE PTR [ebx+0x3195cf32],0x83
  4114c5:	xor    eax,DWORD PTR [eax+0x3e]
  4114c8:	jmp    0xe07c2a34
  4114cd:	add    eax,0xa24e3852
  4114d2:	cmp    bl,bh
  4114d4:	iret   
  4114d5:	(bad)  
  4114d6:	sbb    DWORD PTR [ecx+0x1e55cd8a],eax
  4114dc:	ds (bad) 
  4114de:	rcl    BYTE PTR [eax],1
  4114e0:	fidivr WORD PTR [ecx+0x20]
  4114e3:	jno    0x4114ed
  4114e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4114e6:	es xchg esi,eax
  4114e8:	sub    DWORD PTR [ebx],0x10c130f0
  4114ee:	fbstp  TBYTE PTR [ebx]
  4114f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4114f1:	std    
  4114f2:	and    DWORD PTR [ebx],0x27e84bb0
  4114f8:	outs   dx,BYTE PTR ds:[esi]
  4114f9:	fstp   DWORD PTR [ecx+0x3b755873]
  4114ff:	in     al,0x81
  411501:	sbb    ah,ah
  411503:	mov    ds:0x51152733,eax
  411508:	pop    edi
  411509:	cdq    
  41150a:	and    eax,0xb9fe7096
  41150f:	call   0x5083:0x83c65200
  411516:	sub    ebp,esi
  411518:	or     al,0x32
  41151a:	cs sub edi,edi
  41151d:	icebp  
  41151e:	cmp    BYTE PTR [edi-0x51],ah
  411521:	pop    ebp
  411522:	mov    ecx,0x601d1b18
  411527:	jl     0x41156a
  411529:	fist   WORD PTR [edx]
  41152b:	js     0x411590
  41152d:	xor    bh,ah
  41152f:	xchg   esi,eax
  411530:	xlat   BYTE PTR ds:[ebx]
  411531:	retf   
  411532:	push   0xffffffe7
  411534:	in     eax,dx
  411535:	retf   0xef64
  411538:	ret    
  411539:	aam    0xf4
  41153b:	xchg   edi,eax
  41153c:	rol    BYTE PTR [esi],0x4b
  41153f:	cmp    eax,0xc4e1ea5e
  411544:	cmc    
  411545:	outs   dx,DWORD PTR ds:[esi]
  411546:	or     BYTE PTR [edx+0x13],bl
  411549:	repz retf 0xe077
  41154d:	ret    0xfce4
  411550:	mov    ds:0x610b6783,al
  411555:	les    edx,FWORD PTR [esi-0x48dd30cc]
  41155b:	pop    ss
  41155c:	imul   ecx,esp,0xffffffa2
  41155f:	popf   
  411560:	popf   
  411561:	mov    esp,0x23e7a1d4
  411566:	mov    eax,0x1cf57206
  41156b:	push   0x816dcb35
  411570:	mov    esp,0x6394f52a
  411575:	push   edx
  411576:	jo     0x4115bb
  411578:	inc    edx
  411579:	pop    edi
  41157a:	in     eax,0xcc
  41157c:	xchg   esp,eax
  41157d:	add    esi,ecx
  41157f:	inc    esi
  411580:	or     DWORD PTR ds:[ebx+0x49],ebp
  411584:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411585:	aam    0x2e
  411587:	mov    BYTE PTR [ebp-0x36],ah
  41158a:	into   
  41158b:	inc    edi
  41158c:	out    0xd1,al
  41158e:	add    cl,BYTE PTR [edx]
  411590:	into   
  411591:	adc    BYTE PTR [edx+eax*1+0x15d6d24a],ch
  411598:	mov    eax,ds:0x126bb563
  41159d:	dec    ecx
  41159e:	jecxz  0x4115ce
  4115a0:	and    BYTE PTR [edi-0x61acae85],cl
  4115a6:	rol    BYTE PTR [edx+ebp*2-0x2c],0xd2
  4115ab:	mov    al,ds:0x19b77e43
  4115b0:	(bad)  
  4115b1:	cmp    BYTE PTR [eax-0x1aeddf44],bl
  4115b7:	mul    ecx
  4115b9:	sub    DWORD PTR [edx-0x85ceed3],ebp
  4115bf:	pop    ebp
  4115c0:	in     al,0xcd
  4115c2:	or     ebp,DWORD PTR [eax]
  4115c4:	push   ebx
  4115c5:	in     al,dx
  4115c6:	push   edx
  4115c7:	sbb    ebx,ebp
  4115c9:	xor    eax,0x1aea726d
  4115ce:	mov    BYTE PTR [edx+0x59],dl
  4115d1:	sub    edx,DWORD PTR ds:0xb5e66512
  4115d7:	sahf   
  4115d8:	inc    edx
  4115d9:	rcl    ebp,1
  4115db:	push   cs
  4115dc:	fcom   DWORD PTR [ebx+0x20]
  4115df:	and    eax,0x4a85ce5b
  4115e4:	test   DWORD PTR [edi+0x43],eax
  4115e7:	ror    ebp,1
  4115e9:	lock sub eax,0x2b9f0fe6
  4115ef:	loopne 0x41165f
  4115f1:	les    ecx,FWORD PTR [edi+0x6a]
  4115f4:	and    eax,edx
  4115f6:	dec    edx
  4115f7:	ja     0x411652
  4115f9:	js     0x411640
  4115fb:	loopne 0x4115f1
  4115fd:	je     0x411659
  4115ff:	loopne 0x411671
  411601:	cli    
  411602:	push   eax
  411603:	(bad)  
  411604:	in     eax,0xa8
  411606:	int    0x4b
  411608:	or     DWORD PTR [edx-0xd],ebp
  41160b:	ret    0xba1b
  41160e:	in     eax,0xf5
  411610:	cs inc edi
  411612:	add    al,0x7c
  411614:	or     eax,0x2dad6b26
  411619:	mov    cl,0x4
  41161b:	push   es
  41161c:	xchg   ebp,eax
  41161d:	add    eax,0x8693016c
  411622:	pop    ebx
  411623:	xchg   esp,eax
  411624:	jmp    0xeeb3:0x5994fbfb
  41162b:	bswap  ecx
  41162d:	addr16 fwait
  41162f:	jmp    0x5b1c053c
  411634:	pop    edi
  411635:	loope  0x411624
  411637:	mov    BYTE PTR [ebp+0x3023de18],cl
  41163d:	mov    esp,0x1e717b71
  411642:	pop    esp
  411643:	cdq    
  411644:	enter  0xef2b,0xfd
  411648:	pop    ds
  411649:	xchg   edx,eax
  41164a:	sub    BYTE PTR [esi+0x55],al
  41164d:	out    0x33,al
  41164f:	(bad)  
  411651:	cmp    eax,0xd19704af
  411656:	aad    0x10
  411658:	jmp    0xa34a:0x90d00faa
  41165f:	xchg   ebx,eax
  411660:	enter  0x2cea,0x75
  411664:	ins    BYTE PTR es:[edi],dx
  411665:	mov    eax,0xe1ba1841
  41166a:	inc    eax
  41166b:	adc    BYTE PTR [edi-0x42061ad9],0xd4
  411672:	in     eax,0xd9
  411674:	jg     0x41169f
  411676:	cmp    edx,DWORD PTR [eax-0xd]
  411679:	adc    ebx,DWORD PTR [esi+0x12]
  41167c:	mov    al,ds:0x861fecd8
  411681:	push   esp
  411682:	stos   DWORD PTR es:[edi],eax
  411683:	jne    0x4116ed
  411685:	and    ebp,eax
  411687:	xor    BYTE PTR [edx],0x45
  41168a:	pop    ebp
  41168b:	sti    
  41168c:	push   esp
  41168d:	fwait
  41168e:	sbb    DWORD PTR [eax-0x3fa856f9],ebx
  411694:	xchg   esp,eax
  411695:	adc    bl,0x5c
  411698:	pop    edi
  411699:	in     al,0xb1
  41169b:	mov    cl,0xb
  41169d:	lods   eax,DWORD PTR ds:[esi]
  41169e:	xlat   BYTE PTR ds:[ebx]
  41169f:	pushf  
  4116a0:	lsl    esp,WORD PTR [ecx+0x4]
  4116a4:	enter  0x110e,0x1
  4116a8:	leave  
  4116a9:	sbb    al,0xd8
  4116ab:	xor    al,0x1f
  4116ad:	adc    al,0xfd
  4116af:	rcr    ah,cl
  4116b1:	jns    0x4116b4
  4116b3:	xchg   ecx,eax
  4116b4:	dec    esp
  4116b5:	repnz or al,0x83
  4116b8:	xchg   edx,eax
  4116b9:	and    dl,BYTE PTR [edi-0x76dba4d3]
  4116bf:	push   ebp
  4116c0:	sub    dh,BYTE PTR [edx+0xca3680a]
  4116c6:	out    0x2b,al
  4116c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4116c9:	adc    eax,0xdefac528
  4116ce:	mov    bl,0x7
  4116d0:	add    ecx,edi
  4116d2:	xor    eax,0xb56ddcc
  4116d7:	mov    bl,0x1f
  4116d9:	(bad)  
  4116da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4116db:	in     al,0x24
  4116dd:	ins    BYTE PTR es:[edi],dx
  4116de:	cli    
  4116df:	and    DWORD PTR [eax-0x7a],0xe7d701c3
  4116e6:	mov    al,0xc4
  4116e8:	jbe    0x4116d6
  4116ea:	fisubr DWORD PTR [ebp-0x7c]
  4116ed:	ficomp WORD PTR [esi]
  4116ef:	cmp    al,0xab
  4116f1:	and    eax,0xf51d1ded
  4116f7:	jne    0x411770
  4116f9:	lea    ecx,[edx+esi*4+0x66]
  4116fd:	and    al,0x42
  4116ff:	call   0x4ad4ef79
  411704:	out    0xfa,al
  411706:	and    al,0x6d
  411708:	test   eax,0xbc3f54a5
  41170d:	addr16 dec eax
  41170f:	idiv   BYTE PTR [ecx]
  411711:	jnp    0x4116b2
  411713:	or     al,0x4e
  411715:	mov    al,ds:0x973ac059
  41171a:	mov    eax,ds:0xad2bd14a
  41171f:	int3   
  411720:	pop    edi
  411721:	xor    al,0x8d
  411723:	popa   
  411724:	dec    esp
  411725:	lock pop edi
  411727:	dec    esi
  411728:	data16 jle 0x41179a
  41172b:	or     eax,0x8bc3336
  411730:	std    
  411731:	xchg   edx,eax
  411732:	jns    0x411759
  411734:	loop   0x4116eb
  411736:	mov    esp,0xfbac729
  41173b:	adc    ch,BYTE PTR [ebx]
  41173d:	mov    ebx,0xfc7e18d5
  411742:	lds    eax,FWORD PTR [esi+0x2d]
  411745:	shr    ah,1
  411747:	test   DWORD PTR es:[edi],0x54e2362c
  41174e:	call   0xd3fc:0xea0063f9
  411755:	jae    0x4117c8
  411757:	or     eax,0x6d246506
  41175c:	pop    edi
  41175d:	mov    fs,ecx
  41175f:	push   edi
  411760:	js     0x41179d
  411762:	dec    edx
  411763:	xchg   ecx,eax
  411764:	or     eax,0x16aae712
  411769:	out    dx,eax
  41176a:	test   al,0x1d
  41176c:	add    eax,ebx
  41176e:	and    eax,0x897a2bb0
  411773:	mov    ah,0x7a
  411775:	sbb    ebp,DWORD PTR [edx]
  411777:	sub    ch,BYTE PTR [edx+eiz*1-0x22]
  41177b:	fadd   QWORD PTR [esi]
  41177d:	ret    
  41177e:	(bad)  
  41177f:	mov    esp,0x45d3cbc3
  411784:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411785:	imul   edi,DWORD PTR [bp+si],0xffffff9b
  411789:	repnz mov cl,al
  41178c:	lea    edi,[edi+0x61]
  41178f:	xlat   BYTE PTR ds:[ebx]
  411790:	lock outs dx,DWORD PTR ds:[esi]
  411792:	outs   dx,BYTE PTR ds:[esi]
  411793:	fldenv [ecx]
  411795:	lods   eax,DWORD PTR ds:[esi]
  411796:	xchg   si,ax
  411798:	or     BYTE PTR [eax-0x72],0x95
  41179c:	cmp    dl,BYTE PTR [edi]
  41179e:	leave  
  41179f:	stos   DWORD PTR es:[edi],eax
  4117a0:	sub    eax,DWORD PTR [esi]
  4117a2:	outs   dx,BYTE PTR ds:[esi]
  4117a3:	pop    eax
  4117a4:	inc    ebx
  4117a5:	sbb    eax,0x1d9747f0
  4117aa:	cmp    cl,BYTE PTR [ebx-0x7a]
  4117ad:	xor    bh,dh
  4117af:	mov    ds:0xdfad4128,al
  4117b4:	add    al,BYTE PTR [edi-0x7682d668]
  4117ba:	in     eax,0xa0
  4117bc:	cli    
  4117bd:	bound  ebp,QWORD PTR [eax]
  4117bf:	mov    ah,ah
  4117c1:	dec    edi
  4117c2:	pop    esi
  4117c3:	mov    bh,0x29
  4117c5:	dec    edx
  4117c6:	mov    ebp,0x74ac1087
  4117cb:	mov    bh,BYTE PTR [ebp+0x3070718d]
  4117d1:	cmp    al,0xa
  4117d3:	or     eax,0x7c2827ac
  4117d8:	pop    ss
  4117d9:	push   eax
  4117da:	or     DWORD PTR [edx-0x32c5bf7b],eax
  4117e0:	ds dec edi
  4117e2:	in     eax,dx
  4117e3:	mov    al,ds:0xae426264
  4117e8:	pop    ebx
  4117e9:	jp     0x4117f2
  4117eb:	stos   DWORD PTR es:[edi],eax
  4117ec:	inc    ebp
  4117ed:	mov    ebp,0xa22756a3
  4117f2:	mov    ebx,0x995bf975
  4117f7:	mov    eax,fs:0xa99594db
  4117fd:	mov    BYTE PTR [ebp+0x6ed29589],ah
  411803:	fmul   DWORD PTR [ebp+0x1d]
  411806:	rcr    DWORD PTR [edi],1
  411808:	lock mov ds:0x2d94ad63,al
  41180e:	mov    ebx,0x5c2668f4
  411813:	cmp    BYTE PTR [esp+ebx*2-0x54],cl
  411817:	ret    
  411818:	lea    edi,[ebp+0x5b2bcfe]
  41181e:	add    DWORD PTR [edx+0x4b],esi
  411821:	dec    ecx
  411822:	gs aam 0x5e
  411825:	push   esi
  411826:	outs   dx,DWORD PTR ds:[esi]
  411827:	or     al,0x1f
  411829:	adc    edx,0xffffffd2
  41182c:	enter  0xb5c1,0x23
  411830:	div    DWORD PTR [ebx+edx*1]
  411833:	repz adc DWORD PTR [ecx+edx*2-0x57],0xe0a33741
  41183c:	mov    edi,0xec7b5151
  411841:	jl     0x411819
  411843:	(bad)  
  411844:	xor    al,0x5e
  411846:	or     eax,0xf9f1fa8f
  41184b:	dec    edi
  41184c:	inc    ecx
  41184d:	stos   DWORD PTR es:[edi],eax
  41184e:	ror    BYTE PTR [eax-0x2b5bfd10],0x2c
  411855:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411856:	xchg   ebp,eax
  411857:	stc    
  411858:	jo     0x411820
  41185a:	(bad)  
  41185b:	cmp    eax,0x4bc10360
  411860:	adc    eax,0xa1cd3b9b
  411865:	test   DWORD PTR [ebx-0x28],edi
  411868:	mov    al,0xda
  41186a:	cmp    dl,ch
  41186c:	pop    esp
  41186d:	add    DWORD PTR ss:[esp+eiz*8-0x42062fa2],ebp
  411875:	inc    edx
  411876:	dec    edi
  411877:	inc    ebx
  411878:	xchg   esp,eax
  411879:	loope  0x411866
  41187b:	adc    DWORD PTR [ebx+0x28836c4a],edi
  411881:	stc    
  411882:	les    esp,FWORD PTR [esi]
  411884:	aad    0x50
  411886:	sbb    BYTE PTR gs:[edx],0x7b
  41188a:	pop    ss
  41188b:	or     al,0xfc
  41188d:	fld    QWORD PTR [edx+ebp*1+0x43]
  411891:	inc    ebx
  411892:	cmp    al,0xef
  411894:	test   DWORD PTR [esi-0x61],edi
  411897:	sub    bh,BYTE PTR [eax]
  411899:	sub    BYTE PTR [ebx+0x37],cl
  41189c:	mov    ebp,ss
  41189e:	bound  edx,QWORD PTR [esi-0x11]
  4118a1:	jns    0x4118aa
  4118a3:	xor    eax,0xc6e4c0c6
  4118a8:	pop    ecx
  4118a9:	mov    ds:0xbe31f77f,al
  4118ae:	sub    DWORD PTR [edx+0x4eb370f4],ebp
  4118b4:	push   cs
  4118b5:	sar    BYTE PTR [eax],0x1
  4118b8:	sbb    esi,DWORD PTR [ecx-0x75]
  4118bb:	call   0xdb8d:0xcde3fec3
  4118c2:	jbe    0x4118ca
  4118c4:	(bad)  
  4118c6:	mov    ecx,0x6fb986ff
  4118cb:	pop    ds
  4118cc:	dec    esi
  4118cd:	push   ebx
  4118ce:	adc    esi,DWORD PTR [esi]
  4118d0:	je     0x4118a4
  4118d2:	das    
  4118d3:	mov    ds:0xf8a1e93,al
  4118d8:	xor    DWORD PTR [edx],eax
  4118da:	out    dx,al
  4118db:	adc    dh,cl
  4118dd:	xor    BYTE PTR [ecx-0x22b1d512],bl
  4118e3:	loope  0x411914
  4118e5:	mov    BYTE PTR [ebx],bh
  4118e7:	xor    eax,0x8c6d94c4
  4118ec:	sbb    eax,0x99453bbb
  4118f1:	ins    DWORD PTR es:[edi],dx
  4118f2:	sub    BYTE PTR [eax+0x43d89be1],ah
  4118f8:	mov    al,ds:0xcfbdbb3a
  4118fd:	mov    ds:0x1dac7ad5,eax
  411902:	sub    ch,BYTE PTR [esi]
  411904:	cmc    
  411905:	xor    BYTE PTR [ebp-0xa],al
  411908:	(bad)  
  411909:	(bad)  
  41190a:	ja     0x41194d
  41190c:	mov    DWORD PTR ds:[edx+0x58],edx
  411910:	mov    eax,ds:0xcc9a84f4
  411915:	mov    esi,0x3e793023
  41191a:	and    ecx,DWORD PTR [ecx-0x3f5f85ed]
  411920:	loop   0x41196f
  411922:	mov    edi,0xbaec2b27
  411927:	add    DWORD PTR [edx],edx
  411929:	jae    0x411943
  41192b:	dec    edi
  41192c:	arpl   WORD PTR [eax-0x15],ax
  41192f:	dec    edx
  411930:	add    esp,DWORD PTR [eax+edx*2+0x26f49681]
  411937:	je     0x411938
  411939:	jmp    0x41192b
  41193b:	dec    eax
  41193c:	pop    ecx
  41193d:	je     0x411910
  41193f:	aas    
  411940:	jae    0x4118fb
  411942:	fs aas 
  411944:	add    ebp,ebp
  411946:	xchg   esp,eax
  411947:	lahf   
  411948:	and    DWORD PTR [ecx-0x4],edx
  41194b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41194c:	in     eax,dx
  41194d:	cdq    
  41194e:	dec    ecx
  41194f:	adc    al,0xfb
  411951:	imul   esp,DWORD PTR [ecx],0xc4a4b1bd
  411957:	ret    
  411958:	clc    
  411959:	mov    al,ds:0x19883500
  41195e:	sub    eax,0x2f81d8e
  411963:	fnstcw WORD PTR [esi-0x1df63e10]
  411969:	repnz and al,BYTE PTR [ebp+edi*1+0x3b9774]
  411971:	sbb    DWORD PTR ds:0x380e70cb,esi
  411977:	sub    bh,BYTE PTR [ecx]
  411979:	jmp    0x2bca7b7f
  41197e:	xchg   esi,eax
  41197f:	pop    edx
  411980:	fadd   st(6),st
  411982:	neg    DWORD PTR [edx]
  411984:	inc    esp
  411985:	shl    DWORD PTR [ecx+esi*8],1
  411988:	cwde   
  411989:	xor    DWORD PTR [ebx+0x55],edi
  41198c:	pop    ebx
  41198d:	inc    edi
  41198e:	lahf   
  41198f:	bnd ret 
  411991:	xchg   esp,eax
  411992:	add    eax,0xaa7427cf
  411997:	rcl    DWORD PTR [edi-0x56aaed43],0x71
  41199e:	pop    ebx
  41199f:	or     esi,edx
  4119a1:	cmp    esi,edi
  4119a3:	mov    ?,WORD PTR [edx]
  4119a5:	(bad)  
  4119a6:	add    DWORD PTR [edi+0x5],edx
  4119a9:	or     BYTE PTR [ebp-0x79],al
  4119ac:	aad    0x1
  4119ae:	jne    0x411994
  4119b0:	mov    ebx,0x9e47f66f
  4119b5:	add    eax,0x12e62bb5
  4119ba:	bound  esp,QWORD PTR gs:[ebx-0x1]
  4119be:	sbb    ebp,eax
  4119c0:	lea    ebp,[ecx+0x5ea2042b]
  4119c6:	ins    BYTE PTR es:[edi],dx
  4119c7:	in     al,0x6f
  4119c9:	pop    ds
  4119ca:	jo     0x411a21
  4119cc:	mov    ebx,es
  4119ce:	mov    WORD PTR [ecx+0x31c51cc9],?
  4119d4:	in     al,dx
  4119d5:	xchg   ecx,eax
  4119d6:	retf   
  4119d7:	and    BYTE PTR [ebp+0x32d1a3ec],ah
  4119dd:	sbb    ebp,DWORD PTR [ecx+0x6a405ba9]
  4119e3:	es aaa 
  4119e5:	inc    esi
  4119e6:	fnstsw WORD PTR [esi]
  4119e8:	push   edi
  4119e9:	pop    esi
  4119ea:	xor    al,0xc
  4119ec:	out    dx,al
  4119ed:	xchg   esi,eax
  4119ee:	mov    ebp,0x9564c975
  4119f3:	sub    BYTE PTR [bx-0x3377],bh
  4119f8:	aaa    
  4119f9:	fdivp  st(3),st
  4119fb:	mov    ch,0xfd
  4119fd:	jmp    0x85a6:0x53a54b94
  411a04:	cmp    al,0x40
  411a06:	aas    
  411a07:	fcmovnbe st,st(1)
  411a09:	mov    ds:0x5614f15f,eax
  411a0e:	xor    ah,bl
  411a10:	inc    ebp
  411a11:	sbb    BYTE PTR [eax],dl
  411a13:	jnp    0x6b899b8
  411a19:	push   ds
  411a1a:	xchg   esp,eax
  411a1b:	js     0x411a78
  411a1d:	in     al,dx
  411a1e:	sbb    al,0x4d
  411a20:	retf   
  411a21:	dec    edi
  411a22:	mov    ecx,cs
  411a24:	std    
  411a25:	inc    edx
  411a26:	retf   0xeac4
  411a29:	xor    BYTE PTR [ebx+0x43],dl
  411a2c:	mov    cl,0x23
  411a2e:	mov    eax,ds:0x7ee7a1d6
  411a33:	out    dx,eax
  411a34:	cmp    dl,BYTE PTR [edi]
  411a36:	ret    0x5c60
  411a39:	mov    gs,edx
  411a3b:	stc    
  411a3c:	add    BYTE PTR [esi-0x3c],bh
  411a3f:	jl     0x4119dd
  411a41:	push   0x80fbf9da
  411a46:	sbb    ebx,DWORD PTR [esi]
  411a48:	stos   BYTE PTR es:[edi],al
  411a49:	xchg   BYTE PTR [edx-0x1dbbfd5a],ah
  411a4f:	sub    eax,edi
  411a51:	mov    ecx,DWORD PTR [edi+0x4b]
  411a54:	mov    bh,0x40
  411a56:	jnp    0x411a7e
  411a58:	ja     0x4119e6
  411a5a:	sub    bh,ah
  411a5c:	push   edx
  411a5d:	scas   al,BYTE PTR es:[edi]
  411a5e:	jecxz  0x411a80
  411a60:	mov    al,ds:0x3262e88
  411a65:	mov    WORD PTR [esi-0x1c990106],ds
  411a6b:	xchg   edi,eax
  411a6c:	aam    0x84
  411a6e:	sbb    edi,edi
  411a70:	fstp   TBYTE PTR [ecx+eax*4]
  411a73:	inc    ecx
  411a74:	ds jle 0x411a1a
  411a77:	cwde   
  411a78:	arpl   WORD PTR [eax],cx
  411a7a:	adc    eax,0xb15d0ffc
  411a7f:	stc    
  411a80:	sbb    al,0xb3
  411a82:	jl     0x411a37
  411a84:	out    dx,eax
  411a85:	cdq    
  411a86:	xor    eax,0x12cb28e9
  411a8b:	or     eax,0x9926450a
  411a90:	push   es
  411a91:	sbb    esp,DWORD PTR [edx]
  411a93:	aad    0x15
  411a95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a96:	sub    ah,cl
  411a98:	pop    edi
  411a99:	jns    0x411ae2
  411a9b:	cdq    
  411a9c:	(bad)  
  411a9e:	and    eax,DWORD PTR [ecx+0x7d]
  411aa1:	(bad)  
  411aa2:	push   edx
  411aa3:	cld    
  411aa4:	cdq    
  411aa5:	sbb    eax,0xe556a89a
  411aaa:	cmp    eax,0xc2351b14
  411aaf:	sub    BYTE PTR [edx],cl
  411ab1:	pop    ecx
  411ab2:	mov    bh,0x73
  411ab4:	test   BYTE PTR [ecx+0x41],bh
  411ab7:	dec    ebp
  411ab8:	outs   dx,BYTE PTR ds:[esi]
  411ab9:	jae    0x411aee
  411abb:	rep lods eax,DWORD PTR ds:[esi]
  411abd:	cdq    
  411abe:	addr16 imul edi,edx,0xb7053437
  411ac5:	xchg   DWORD PTR [edx+eax*2+0x44a9f48c],edi
  411acc:	pop    ebx
  411acd:	outs   dx,BYTE PTR ds:[esi]
  411ace:	mov    ch,0x75
  411ad0:	fdecstp 
  411ad2:	adc    al,0xfd
  411ad4:	sub    al,cl
  411ad6:	jp     0x411a95
  411ad8:	dec    eax
  411ad9:	cli    
  411ada:	scas   eax,DWORD PTR es:[edi]
  411adb:	sbb    BYTE PTR [eax+edi*4],al
  411ade:	inc    eax
  411adf:	f2xm1  
  411ae1:	push   es
  411ae2:	ja     0x411ac7
  411ae4:	mov    ebp,0x5f1dca19
  411ae9:	fisubr DWORD PTR [edx+0x5428cb0a]
  411aef:	inc    esp
  411af0:	cwde   
  411af1:	sub    bl,dl
  411af3:	adc    ebp,DWORD PTR [ebp-0x6232755b]
  411af9:	mov    WORD PTR [ebp+0x3666ab8c],ds
  411aff:	stos   DWORD PTR es:[edi],eax
  411b00:	cld    
  411b01:	aas    
  411b02:	(bad)
  411b05:	xchg   ecx,eax
  411b07:	cmp    ah,BYTE PTR [ecx-0x63]
  411b0a:	scas   eax,DWORD PTR es:[edi]
  411b0b:	xchg   esi,eax
  411b0c:	jbe    0x411aad
  411b0e:	das    
  411b0f:	cli    
  411b10:	inc    edi
  411b11:	cmp    DWORD PTR [edx],edx
  411b13:	in     eax,dx
  411b14:	fucomi st,st(4)
  411b16:	xchg   ebx,eax
  411b17:	mov    ch,0x10
  411b19:	inc    edx
  411b1a:	outs   dx,DWORD PTR ds:[esi]
  411b1b:	mov    DWORD PTR [ebp+0x6e],ebx
  411b1e:	gs popf 
  411b20:	jb     0x411b88
  411b22:	clc    
  411b23:	mov    BYTE PTR [edx-0x3c],ch
  411b26:	jae    0x411aed
  411b28:	mov    WORD PTR [esi-0x3d],cs
  411b2b:	fcmovbe st,st(7)
  411b2d:	or     dh,dh
  411b2f:	pop    ecx
  411b30:	call   0x2174:0xa609b553
  411b37:	ins    DWORD PTR es:[edi],dx
  411b38:	sbb    dl,BYTE PTR [edx+0x46]
  411b3b:	frstor [esi-0x99b8856]
  411b41:	push   0x170e574c
  411b46:	sbb    edx,DWORD PTR [edi-0x4f07ec6e]
  411b4c:	pop    ss
  411b4d:	push   esi
  411b4e:	push   cs
  411b4f:	aad    0xd7
  411b51:	dec    ebx
  411b52:	sbb    BYTE PTR [edx-0x1b254377],bh
  411b58:	push   ebx
  411b59:	in     eax,0x53
  411b5b:	into   
  411b5c:	std    
  411b5d:	test   DWORD PTR [esi+ecx*2-0x5f],edx
  411b61:	add    DWORD PTR [ecx-0x11],esp
  411b64:	fwait
  411b65:	icebp  
  411b66:	push   ebx
  411b67:	out    dx,al
  411b68:	aaa    
  411b69:	iret   
  411b6a:	add    esi,esp
  411b6c:	sub    DWORD PTR [si-0x65],esi
  411b70:	call   0x5fa6:0x83216627
  411b77:	inc    ebx
  411b78:	out    0xd4,eax
  411b7a:	push   0x3
  411b7c:	stos   DWORD PTR es:[edi],eax
  411b7d:	inc    esi
  411b7e:	mov    ebx,0x679f0720
  411b83:	mov    edi,0x820bafbf
  411b88:	and    DWORD PTR [edi+0x31e41c2d],ebp
  411b8e:	xor    dh,bl
  411b90:	rol    DWORD PTR [ebx],1
  411b92:	sub    BYTE PTR [ebx-0x29],al
  411b95:	and    eax,DWORD PTR [ebp+0x14]
  411b98:	es xchg ebp,eax
  411b9a:	lock sub BYTE PTR fs:[ebx-0x7b],cl
  411b9f:	stos   BYTE PTR es:[edi],al
  411ba0:	pop    esp
  411ba1:	das    
  411ba2:	lods   eax,DWORD PTR ds:[esi]
  411ba3:	jecxz  0x411b41
  411ba5:	(bad)  
  411ba6:	sbb    eax,0x29791e13
  411bab:	in     eax,dx
  411bac:	loopne 0x411b7b
  411bae:	lea    ebp,[esi+0x709b896a]
  411bb4:	les    eax,FWORD PTR [esi]
  411bb6:	fs in  al,0xed
  411bb9:	fst    DWORD PTR ds:0xbac6713b
  411bbf:	mov    dl,0xb9
  411bc1:	les    edx,FWORD PTR [edx-0x32]
  411bc4:	mov    dh,0x4
  411bc6:	add    bh,BYTE PTR [edx-0x18bb223d]
  411bcc:	add    al,0x9d
  411bce:	jae    0x411c1a
  411bd0:	pop    edi
  411bd1:	nop
  411bd2:	ss ja  0x411bd9
  411bd5:	mov    eax,0x292ee138
  411bda:	cs and eax,0xa871f699
  411be0:	lock loop 0x411b9c
  411be3:	lea    edi,[ecx+0x40b069f5]
  411be9:	sub    al,0x83
  411beb:	cmp    edx,DWORD PTR [eax+ebx*4]
  411bee:	loopne 0x411c14
  411bf0:	or     al,0x49
  411bf2:	dec    ebp
  411bf3:	out    0xec,eax
  411bf5:	call   0x1356:0x2d4e30a7
  411bfc:	inc    ecx
  411bfd:	adc    dl,cl
  411bff:	jns    0x411bcc
  411c01:	mov    esp,0xd8fa221e
  411c06:	jmp    0x950:0x5f2a267b
  411c0d:	(bad)  
  411c0e:	stc    
  411c0f:	push   0xd52e5c44
  411c14:	into   
  411c15:	test   BYTE PTR [ebx+edx*2-0x5ab71adf],al
  411c1c:	fucom  st(7)
  411c1e:	push   ebx
  411c1f:	push   esi
  411c20:	into   
  411c21:	lea    ecx,[ebx]
  411c23:	cmp    cl,ch
  411c25:	mov    BYTE PTR [esi],bh
  411c27:	push   ecx
  411c28:	xor    eax,0x3f81cad4
  411c2d:	(bad)  
  411c2e:	dec    esp
  411c2f:	fldenv [eax-0x475421b7]
  411c35:	inc    esp
  411c36:	xor    eax,0xf7b8acb
  411c3b:	jno    0x411c3a
  411c3d:	jmp    0x4a6:0xe6fb419e
  411c44:	xchg   ebx,eax
  411c45:	cmp    DWORD PTR [edi+0x279096e],edi
  411c4b:	xchg   edi,eax
  411c4c:	mov    cl,0x2b
  411c4e:	ins    DWORD PTR es:[edi],dx
  411c4f:	mov    cl,0xb3
  411c51:	push   0x3e
  411c53:	xchg   DWORD PTR [esi],edi
  411c55:	in     eax,0xf5
  411c57:	mov    bh,0xdc
  411c59:	and    DWORD PTR [ecx+0x52],edx
  411c5c:	js     0x411c48
  411c5e:	sbb    DWORD PTR [ecx],edi
  411c60:	xchg   ebx,eax
  411c61:	mov    cl,0xf9
  411c63:	imul   edx,DWORD PTR [edi+eiz*1-0x7],0x92d16e0
  411c6b:	jbe    0x411ca1
  411c6d:	jmp    0x411cb6
  411c6f:	lock push es
  411c71:	mov    ebp,0xab2a6cb6
  411c76:	or     ecx,DWORD PTR [ebp-0x17]
  411c79:	xor    DWORD PTR [edi-0x50],esp
  411c7c:	shr    edi,1
  411c7e:	cmp    al,0x8b
  411c80:	adc    ecx,edi
  411c82:	dec    ecx
  411c83:	adc    al,0x86
  411c85:	push   edx
  411c86:	clc    
  411c87:	dec    ebp
  411c88:	int    0x61
  411c8a:	cmp    BYTE PTR [edi-0x1d18f662],dh
  411c90:	into   
  411c91:	stos   BYTE PTR es:[edi],al
  411c92:	mov    edi,0x3ee03f80
  411c97:	or     esp,edi
  411c99:	pop    esp
  411c9a:	out    dx,al
  411c9b:	in     al,dx
  411c9c:	jl     0x411cfc
  411c9e:	jmp    0x1102:0x9ec30d46
  411ca5:	jp     0x411c72
  411ca7:	mov    esi,0x6b412d6
  411cac:	je     0x411c56
  411cae:	and    ebp,DWORD PTR [ebx-0x44853ebb]
  411cb4:	xchg   DWORD PTR [eax],ecx
  411cb6:	jmp    0xcd62e4dc
  411cbb:	cli    
  411cbc:	sbb    dh,BYTE PTR [ecx+0x60bd82e6]
  411cc2:	fsub   DWORD PTR ds:0xaa24b927
  411cc8:	in     eax,0xf8
  411cca:	jno    0x411cd2
  411ccc:	mov    eax,0xe5a64e0e
  411cd1:	adc    al,BYTE PTR [ebp+ebp*8+0x2f]
  411cd5:	shr    BYTE PTR [ecx],1
  411cd7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411cd8:	mov    ebp,0xa3769380
  411cdd:	imul   esp,DWORD PTR [eax+0x6cdb930a],0x327d574b
  411ce7:	lahf   
  411ce8:	pop    edx
  411ce9:	jb     0x411c93
  411ceb:	pushf  
  411cec:	icebp  
  411ced:	xlat   BYTE PTR ds:[ebx]
  411cee:	retf   
  411cef:	inc    ebx
  411cf0:	es push eax
  411cf2:	xchg   esp,eax
  411cf3:	imul   ebp,DWORD PTR [edx],0x9f2d6ef0
  411cf9:	push   esp
  411cfa:	jmp    0x5b29:0x61fe49af
  411d01:	or     al,0xe9
  411d03:	mov    ebx,0x4e577dcb
  411d08:	mov    eax,0x481554cf
  411d0d:	cmp    eax,0x326c7483
  411d12:	xlat   BYTE PTR ds:[ebx]
  411d13:	sahf   
  411d14:	pushf  
  411d15:	dec    edi
  411d16:	pop    edx
  411d17:	mov    bh,0x8d
  411d19:	arpl   WORD PTR [ebp+0x5bd0d72e],di
  411d1f:	cmp    DWORD PTR [ecx+0x8],eax
  411d22:	cmp    ebp,ecx
  411d24:	inc    ebp
  411d25:	jbe    0x411da0
  411d27:	sub    eax,DWORD PTR [edx+0x5a]
  411d2a:	mov    esi,0x832682ff
  411d2f:	dec    edx
  411d30:	xor    ebp,eax
  411d32:	in     eax,0xd7
  411d34:	jne    0x411d0b
  411d36:	pop    ecx
  411d37:	mov    WORD PTR [ebp-0x75],?
  411d3a:	mov    dl,0x6b
  411d3c:	jmp    0x13149262
  411d41:	mov    edi,0x1658f02a
  411d46:	aam    0x15
  411d48:	repz inc esi
  411d4a:	out    0x45,eax
  411d4c:	js     0x411ce5
  411d4e:	(bad)  
  411d4f:	xor    BYTE PTR [eax-0xd025a93],dh
  411d55:	popf   
  411d56:	fs pusha 
  411d58:	lds    esi,FWORD PTR [esi-0x5e]
  411d5b:	in     al,dx
  411d5c:	adc    DWORD PTR [ebx-0x1b],0xffffffe2
  411d60:	dec    ebp
  411d61:	sub    al,0xc9
  411d63:	aaa    
  411d64:	dec    ebp
  411d65:	jo     0x411dc6
  411d67:	xchg   esp,eax
  411d68:	stos   DWORD PTR es:[edi],eax
  411d69:	je     0x411d11
  411d6b:	pop    esi
  411d6c:	adc    eax,0x6d99671b
  411d71:	out    dx,eax
  411d72:	dec    esi
  411d73:	imul   eax,DWORD PTR [ebp-0x6e],0x42
  411d77:	shr    BYTE PTR [ebp+edi*1+0x7134cdaa],cl
  411d7e:	dec    ebp
  411d7f:	jmp    0xedf79e47
  411d84:	and    DWORD PTR [ecx-0x6d],0xa72b7bd
  411d8b:	xchg   edi,eax
  411d8c:	mul    ah
  411d8e:	jo     0x411e01
  411d90:	adc    bh,BYTE PTR [esi+0x4a]
  411d93:	mov    dh,0xf8
  411d95:	jne    0x411d53
  411d97:	sahf   
  411d98:	or     edx,DWORD PTR [eax+ecx*1+0x6730612b]
  411d9f:	or     esp,esp
  411da1:	cmp    ecx,edx
  411da3:	jb     0x40f9d0
  411da9:	jmp    0x411df3
  411dae:	mov    ecx,DWORD PTR [ebp-0xc]
  411db1:	mov    DWORD PTR [ebp+0x8],ecx
  411db4:	jmp    0x411de6
  411db9:	mov    ecx,DWORD PTR [ebp+0x8]
  411dbc:	mov    edx,DWORD PTR [ebp-0x8]
  411dbf:	xor    ecx,eax
  411dc1:	xor    edx,eax
  411dc3:	sub    ecx,edx
  411dc5:	sub    ecx,esi
  411dc7:	xor    ecx,eax
  411dc9:	mov    DWORD PTR [ebp+0x8],ecx
  411dcc:	mov    ecx,DWORD PTR [ebp+0x8]
  411dcf:	mov    edx,DWORD PTR [ebp+0x8]
  411dd2:	imul   edx,edx,0x5708f2
  411dd8:	xor    ecx,eax
  411dda:	add    ecx,esi
  411ddc:	lea    ecx,[ebp+ecx*4-0x64]
  411de0:	mov    edi,DWORD PTR [ecx]
  411de2:	add    edx,edi
  411de4:	mov    DWORD PTR [ecx],edx
  411de6:	mov    ecx,DWORD PTR [ebp+0x8]
  411de9:	xor    ecx,eax
  411deb:	add    ecx,esi
  411ded:	jne    0x411db9
  411df3:	mov    ecx,DWORD PTR [ebp-0xc]
  411df6:	mov    DWORD PTR [ebp+0x8],ecx
  411df9:	jmp    0x411e2b
  411dfe:	mov    ecx,DWORD PTR [ebp+0x8]
  411e01:	mov    edx,DWORD PTR [ebp-0x8]
  411e04:	xor    ecx,eax
  411e06:	xor    edx,eax
  411e08:	sub    ecx,edx
  411e0a:	sub    ecx,esi
  411e0c:	xor    ecx,eax
  411e0e:	mov    DWORD PTR [ebp+0x8],ecx
  411e11:	mov    ecx,DWORD PTR [ebp+0x8]
  411e14:	mov    edx,DWORD PTR [ebp+0x8]
  411e17:	imul   edx,edx,0x5708f2
  411e1d:	xor    ecx,eax
  411e1f:	add    ecx,esi
  411e21:	lea    ecx,[ebp+ecx*4-0x64]
  411e25:	mov    edi,DWORD PTR [ecx]
  411e27:	add    edx,edi
  411e29:	mov    DWORD PTR [ecx],edx
  411e2b:	mov    ecx,DWORD PTR [ebp+0x8]
  411e2e:	xor    ecx,eax
  411e30:	add    ecx,esi
  411e32:	jne    0x411dfe
  411e38:	mov    ecx,DWORD PTR [ebp-0x8]
  411e3b:	mov    edx,DWORD PTR [ebp-0x20]
  411e3e:	xor    ecx,eax
  411e40:	lea    ecx,[ecx+edx*1+0x3272dd]
  411e47:	mov    DWORD PTR [ebp-0x20],ecx
  411e4a:	inc    DWORD PTR [ebp+0xc]
  411e4d:	mov    ecx,DWORD PTR [ebp-0x1c]
  411e50:	xor    ecx,eax
  411e52:	add    ecx,esi
  411e54:	jne    0x40f7af
  411e5a:	jmp    0x411ee3
  411e5f:	mov    ecx,DWORD PTR [ebp-0xc]
  411e62:	mov    DWORD PTR [ebp+0x8],ecx
  411e65:	jmp    0x411e97
  411e6a:	mov    ecx,DWORD PTR [ebp+0x8]
  411e6d:	mov    edx,DWORD PTR [ebp-0x8]
  411e70:	xor    ecx,eax
  411e72:	xor    edx,eax
  411e74:	sub    ecx,edx
  411e76:	sub    ecx,esi
  411e78:	xor    ecx,eax
  411e7a:	mov    DWORD PTR [ebp+0x8],ecx
  411e7d:	mov    ecx,DWORD PTR [ebp+0x8]
  411e80:	mov    edx,DWORD PTR [ebp+0x8]
  411e83:	imul   edx,edx,0x5708f2
  411e89:	xor    ecx,eax
  411e8b:	add    ecx,esi
  411e8d:	lea    ecx,[ebp+ecx*4-0x64]
  411e91:	mov    edi,DWORD PTR [ecx]
  411e93:	add    edx,edi
  411e95:	mov    DWORD PTR [ecx],edx
  411e97:	mov    ecx,DWORD PTR [ebp+0x8]
  411e9a:	xor    ecx,eax
  411e9c:	add    ecx,esi
  411e9e:	jne    0x411e6a
  411ea4:	jmp    0x411eef
  411ea9:	mov    ecx,DWORD PTR [ebp+0x8]
  411eac:	mov    edx,DWORD PTR [ebp-0x8]
  411eaf:	xor    ecx,eax
  411eb1:	xor    edx,eax
  411eb3:	sub    ecx,edx
  411eb5:	sub    ecx,esi
  411eb7:	xor    ecx,eax
  411eb9:	mov    DWORD PTR [ebp+0x8],ecx
  411ebc:	mov    ecx,DWORD PTR [ebp+0x8]
  411ebf:	mov    edx,DWORD PTR [ebp+0x8]
  411ec2:	xor    ecx,eax
  411ec4:	imul   edx,edx,0x5708f2
  411eca:	add    ecx,esi
  411ecc:	lea    ecx,[ebp+ecx*4-0x64]
  411ed0:	mov    edi,DWORD PTR [ecx]
  411ed2:	add    edx,edi
  411ed4:	mov    DWORD PTR [ecx],edx
  411ed6:	mov    ecx,DWORD PTR [ebp+0x8]
  411ed9:	xor    ecx,eax
  411edb:	add    ecx,esi
  411edd:	jne    0x411ea9
  411ee3:	mov    ecx,DWORD PTR [ebp-0x8]
  411ee6:	xor    ecx,eax
  411ee8:	mov    eax,DWORD PTR [ebp+0x10]
  411eeb:	add    ecx,esi
  411eed:	mov    DWORD PTR [eax],ecx
  411eef:	pop    edi
  411ef0:	pop    esi
  411ef1:	pop    ebx
  411ef2:	leave  
  411ef3:	ret    0xc
	...
  411f02:	add    BYTE PTR [eax],al
  411f04:	pop    esi
  411f05:	mov    eax,0x4dd0
  411f0a:	add    BYTE PTR [eax],al
  411f0c:	xor    bl,BYTE PTR [edi]
  411f0e:	add    DWORD PTR [eax],eax
  411f10:	add    DWORD PTR [eax],eax
  411f12:	add    BYTE PTR [eax],al
  411f14:	add    DWORD PTR [eax],eax
  411f16:	add    BYTE PTR [eax],al
  411f18:	add    DWORD PTR [eax],eax
  411f1a:	add    BYTE PTR [eax],al
  411f1c:	sub    BYTE PTR [edi],bl
  411f1e:	add    DWORD PTR [eax],eax
  411f20:	sub    al,0x1f
  411f22:	add    DWORD PTR [eax],eax
  411f24:	xor    BYTE PTR [edi],bl
  411f26:	add    DWORD PTR [eax],eax
  411f28:	test   eax,0x3e000029
  411f2d:	pop    ds
  411f2e:	add    DWORD PTR [eax],eax
  411f30:	add    BYTE PTR [eax],al
  411f32:	push   ebx
  411f33:	jns    0x411fa2
  411f35:	bound  ebp,QWORD PTR [edi+0x6c]
  411f38:	imul   esp,DWORD PTR [ebx+0x45],0x3f006578
  411f3f:	inc    ebx
  411f40:	ins    BYTE PTR es:[edi],dx
  411f41:	outs   dx,DWORD PTR ds:[esi]
  411f42:	jae    0x411fa9
  411f44:	push   edi
  411f45:	imul   ebp,DWORD PTR [esi+0x64],0x7453776f
  411f4c:	popa   
  411f4d:	je     0x411fb8
  411f4f:	outs   dx,DWORD PTR ds:[esi]
  411f50:	outs   dx,BYTE PTR ds:[esi]
  411f51:	inc    ebx
  411f52:	ins    BYTE PTR es:[edi],dx
  411f53:	outs   dx,DWORD PTR ds:[esi]
  411f54:	jae    0x411fbb
  411f56:	push   edi
  411f57:	imul   eax,DWORD PTR [eax],0x40042a0
  411f5d:	mov    al,ds:0xa0080042
  411f62:	inc    edx
  411f63:	add    BYTE PTR [eax+eiz*4],cl
  411f66:	inc    edx
  411f67:	add    BYTE PTR [eax],dl
  411f69:	mov    al,ds:0xa0140042
  411f6e:	inc    edx
  411f6f:	add    BYTE PTR [eax],bl
  411f71:	mov    al,ds:0xa01c0042
  411f76:	inc    edx
  411f77:	add    BYTE PTR [eax],al
  411f79:	rol    BYTE PTR [edx+0x0],1
  411f7c:	add    al,0xd0
  411f7e:	inc    edx
  411f7f:	add    BYTE PTR [eax],cl
  411f81:	rol    BYTE PTR [edx+0x0],1
  411f84:	or     al,0xd0
  411f86:	inc    edx
  411f87:	add    BYTE PTR [eax],dl
  411f89:	rol    BYTE PTR [edx+0x0],1
  411f8c:	adc    al,0xd0
  411f8e:	inc    edx
  411f8f:	add    BYTE PTR [eax],bl
  411f91:	rol    BYTE PTR [edx+0x0],1
  411f94:	sbb    al,0xd0
  411f96:	inc    edx
	...
  411fa3:	add    BYTE PTR [esi-0x48],bl
  411fa6:	ror    BYTE PTR [ebp+0x0],1
  411fa9:	add    BYTE PTR [eax],al
  411fab:	add    BYTE PTR [edx],al
  411fad:	add    BYTE PTR [eax],al
  411faf:	add    BYTE PTR ds:0x30000000,bh
  411fb5:	and    BYTE PTR [ecx],al
  411fb7:	add    BYTE PTR [eax],dh
  411fb9:	adc    al,0x1
  411fbb:	add    BYTE PTR [eax],al
  411fbd:	nop
  411fbe:	inc    edx
  411fbf:	add    BYTE PTR [eax+edx*4],al
  411fc2:	inc    edx
  411fc3:	add    BYTE PTR [eax],cl
  411fc5:	nop
  411fc6:	inc    edx
  411fc7:	add    BYTE PTR [eax+edx*4],cl
  411fca:	inc    edx
  411fcb:	add    BYTE PTR [eax],dl
  411fcd:	nop
  411fce:	inc    edx
  411fcf:	add    BYTE PTR [eax+edx*4],dl
  411fd2:	inc    edx
  411fd3:	add    BYTE PTR [eax],bl
  411fd5:	nop
  411fd6:	inc    edx
  411fd7:	add    BYTE PTR [eax+edx*4],bl
  411fda:	inc    edx
  411fdb:	add    BYTE PTR [eax],ah
  411fdd:	nop
  411fde:	inc    edx
  411fdf:	add    BYTE PTR [eax+edx*4],ah
  411fe2:	inc    edx
  411fe3:	add    BYTE PTR [eax],ch
  411fe5:	nop
  411fe6:	inc    edx
  411fe7:	add    BYTE PTR [eax],al
  411fe9:	mov    al,0x42
  411feb:	add    BYTE PTR [eax+esi*4],al
  411fee:	inc    edx
  411fef:	add    BYTE PTR [eax],cl
  411ff1:	mov    al,0x42
  411ff3:	add    BYTE PTR [eax+esi*4],cl
  411ff6:	inc    edx
  411ff7:	add    BYTE PTR [eax],dl
  411ff9:	mov    al,0x42
  411ffb:	add    BYTE PTR [eax+esi*4],dl
  411ffe:	inc    edx
  411fff:	add    BYTE PTR [eax],bl
  412001:	mov    al,0x42
  412003:	add    BYTE PTR [eax+esi*4],bl
  412006:	inc    edx
  412007:	add    BYTE PTR [eax],al
  412009:	rol    BYTE PTR [edx+0x0],0x4
  41200d:	rol    BYTE PTR [edx+0x0],0x8
  412011:	rol    BYTE PTR [edx+0x0],0xc
  412015:	rol    BYTE PTR [edx+0x0],0x10
  412019:	rol    BYTE PTR [edx+0x0],0x14
  41201d:	rol    BYTE PTR [edx+0x0],0x18
  412021:	rol    BYTE PTR [edx+0x0],0x1c
  412025:	rol    BYTE PTR [edx+0x0],0x0
  412029:	add    BYTE PTR [eax],al
  41202b:	add    BYTE PTR [eax],al
  41202d:	add    BYTE PTR [eax],al
  41202f:	add    BYTE PTR [edx+0x53],dl
  412032:	inc    esp
  412033:	push   ebx
  412034:	mov    ah,BYTE PTR ds:0xcb178307
  41203a:	mov    ah,0x44
  41203c:	mov    eax,edx
  41203e:	xor    eax,0x655239e9
  412043:	jns    0x412046
  412045:	add    BYTE PTR [eax],al
  412047:	add    BYTE PTR [ebx+0x3a],al
  41204a:	pop    esp
  41204b:	inc    ebx
  41204c:	jne    0x4120c0
  41204e:	jb     0x4120b5
  412050:	outs   dx,BYTE PTR ds:[esi]
  412051:	je     0x412097
  412053:	popa   
  412054:	je     0x4120b7
  412056:	pop    esp
  412057:	dec    ebp
  412058:	outs   dx,DWORD PTR ds:[esi]
  412059:	imul   esp,DWORD PTR fs:[esi+0x79],0x7070415c
  412061:	ins    BYTE PTR es:[edi],dx
  412062:	imul   esp,DWORD PTR [ebx+0x61],0x6e6f6974
  412069:	dec    esi
  41206a:	gs ja  0x41206d
  41206d:	mov    edx,DWORD PTR [ebp-0x14]
  412070:	sub    esp,0xe4
  412076:	push   ebx
  412077:	mov    eax,ebx
  412079:	xchg   ecx,eax
  41207a:	mov    eax,DWORD PTR [ebp+0x8]
  41207d:	cmp    eax,0xf89c85b5
  412082:	jne    0x412416
  412088:	mov    eax,DWORD PTR [ebp+0xc]
  41208b:	cmp    eax,0xf89c85b2
  412090:	jne    0x412416
  412096:	mov    eax,DWORD PTR [ebp+0x24]
  412099:	mov    DWORD PTR [ebp-0x4],eax
  41209c:	mov    BYTE PTR [ebp-0x18],0x3
  4120a0:	mov    BYTE PTR [ebp-0x17],0x1e
  4120a4:	mov    BYTE PTR [ebp-0x16],0x5
  4120a8:	mov    BYTE PTR [ebp-0x15],0x4f
  4120ac:	mov    BYTE PTR [ebp-0x14],0x4c
  4120b0:	mov    BYTE PTR [ebp-0x13],0x7a
  4120b4:	mov    BYTE PTR [ebp-0x20],0xf1
  4120b8:	mov    BYTE PTR [ebp-0x1f],0xf
  4120bc:	mov    BYTE PTR [ebp-0x1e],0x1
  4120c0:	mov    BYTE PTR [ebp-0x1d],0xc
  4120c4:	mov    BYTE PTR [ebp-0x1c],0x4f
  4120c8:	mov    BYTE PTR [ebp-0x1b],0x4c
  4120cc:	mov    BYTE PTR [ebp-0x1a],0x7a
  4120d0:	mov    BYTE PTR [ebp-0x28],0xf
  4120d4:	mov    BYTE PTR [ebp-0x27],0x2
  4120d8:	push   esi
  4120d9:	mov    BYTE PTR [ebp-0x26],0x6
  4120dd:	mov    BYTE PTR [ebp-0x25],0xf3
  4120e1:	push   edi
  4120e2:	mov    BYTE PTR [ebp-0x24],0x1d
  4120e6:	mov    BYTE PTR [ebp-0x23],0xa
  4120ea:	push   0x71
  4120ec:	mov    BYTE PTR [ebp-0x22],0x5
  4120f0:	xor    edi,edi
  4120f2:	mov    BYTE PTR [ebp-0x21],0x7a
  4120f6:	xor    esi,esi
  4120f8:	pop    edx
  4120f9:	mov    eax,0xf5
  4120fe:	lea    ecx,[ebp+esi*1-0x18]
  412102:	movzx  ebx,BYTE PTR [ecx]
  412105:	xor    ebx,edx
  412107:	add    ebx,eax
  412109:	inc    esi
  41210a:	mov    BYTE PTR [ecx],bl
  41210c:	cmp    esi,0x6
  41210f:	jb     0x4120fe
  412111:	xor    esi,esi
  412113:	lea    ecx,[ebp+esi*1-0x20]
  412117:	movzx  ebx,BYTE PTR [ecx]
  41211a:	xor    ebx,edx
  41211c:	add    ebx,eax
  41211e:	inc    esi
  41211f:	mov    BYTE PTR [ecx],bl
  412121:	cmp    esi,0x7
  412124:	jb     0x412113
  412126:	xor    esi,esi
  412128:	lea    ecx,[ebp+esi*1-0x28]
  41212c:	movzx  ebx,BYTE PTR [ecx]
  41212f:	xor    ebx,edx
  412131:	add    ebx,eax
  412133:	push   0x8
  412135:	mov    BYTE PTR [ecx],bl
  412137:	inc    esi
  412138:	pop    ecx
  412139:	cmp    esi,ecx
  41213b:	jb     0x412128
  41213d:	lea    eax,[ebp-0x2c]
  412140:	mov    DWORD PTR [ebp-0x8],eax
  412143:	mov    esi,DWORD PTR [ebp-0x8]
  412146:	mov    eax,0x7113fcef
  41214b:	mov    DWORD PTR [esi],eax
  41214d:	mov    esi,DWORD PTR [ebp-0x2c]
  412150:	cmp    esi,eax
  412152:	jne    0x412162
  412154:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  41215b:	mov    DWORD PTR [ebp-0x8],0xf89c85e0
  412162:	mov    eax,DWORD PTR [ebp-0x4]
  412165:	mov    eax,DWORD PTR [eax+0x18c]
  41216b:	cmp    DWORD PTR [eax],edi
  41216d:	jne    0x4123bf
  412173:	mov    eax,DWORD PTR [ebp-0x4]
  412176:	mov    eax,DWORD PTR [eax+0x17c]
  41217c:	mov    DWORD PTR [eax],edi
  41217e:	mov    eax,DWORD PTR [ebp-0x4]
  412181:	mov    eax,DWORD PTR [eax+0x180]
  412187:	mov    DWORD PTR [eax],edi
  412189:	mov    edi,0x4e3d
  41218e:	mov    eax,0x4f8e
  412193:	mov    WORD PTR [ebp-0x78],ax
  412197:	mov    eax,edi
  412199:	mov    WORD PTR [ebp-0x76],ax
  41219d:	add    eax,0x41
  4121a0:	mov    WORD PTR [ebp-0x74],ax
  4121a4:	lea    eax,[edi+0x1]
  4121a7:	mov    WORD PTR [ebp-0x72],ax
  4121ab:	mov    eax,0x4fad
  4121b0:	mov    WORD PTR [ebp-0x70],ax
  4121b4:	lea    eax,[edi-0xc]
  4121b7:	mov    WORD PTR [ebp-0x6e],ax
  4121bb:	add    eax,0x4b
  4121be:	mov    WORD PTR [ebp-0x6c],ax
  4121c2:	lea    eax,[edi-0xa]
  4121c5:	mov    WORD PTR [ebp-0x6a],ax
  4121c9:	mov    eax,edi
  4121cb:	mov    WORD PTR [ebp-0x68],ax
  4121cf:	add    eax,0xfffffff5
  4121d2:	mov    WORD PTR [ebp-0x66],ax
  4121d6:	mov    eax,0x99fe
  4121db:	mov    WORD PTR [ebp-0x64],ax
  4121df:	mov    eax,0x8281
  4121e4:	mov    WORD PTR [ebp-0x62],ax
  4121e8:	mov    eax,0xd78c
  4121ed:	mov    WORD PTR [ebp-0x60],ax
  4121f1:	add    eax,0x14
  4121f4:	mov    WORD PTR [ebp-0x5e],ax
  4121f8:	mov    eax,0x27a3
  4121fd:	mov    WORD PTR [ebp-0x5c],ax
  412201:	mov    eax,0x47a3
  412206:	mov    WORD PTR [ebp-0x5a],ax
  41220a:	lea    eax,[edi-0xd]
  41220d:	mov    WORD PTR [ebp-0x58],ax
  412211:	mov    DWORD PTR [ebp-0x10],0xf306020f
  412218:	mov    DWORD PTR [ebp-0xc],0x7a050a1d
  41221f:	lea    eax,[ebp-0x10]
  412222:	mov    bl,BYTE PTR [eax]
  412224:	xor    bl,dl
  412226:	sub    bl,0xb
  412229:	mov    BYTE PTR [eax],bl
  41222b:	inc    eax
  41222c:	dec    ecx
  41222d:	jne    0x412222
  41222f:	lea    eax,[ebp-0x10]
  412232:	mov    DWORD PTR [ebp-0xb8],eax
  412238:	lea    eax,[ebp-0xbc]
  41223e:	push   eax
  41223f:	mov    eax,DWORD PTR [ebp+0xc]
  412242:	mov    ebx,0x7510896
  412247:	xor    eax,ebx
  412249:	mov    esi,0x3272dd
  41224e:	add    eax,esi
  412250:	push   eax
  412251:	mov    eax,DWORD PTR [ebp-0x4]
  412254:	add    eax,0x66
  412257:	push   eax
  412258:	mov    eax,DWORD PTR [ebp-0x4]
  41225b:	mov    eax,DWORD PTR [eax+0x198]
  412261:	mov    DWORD PTR [ebp-0xbc],0x1
  41226b:	push   DWORD PTR [eax]
  41226d:	mov    eax,DWORD PTR [ebp+0x10]
  412270:	call   eax
  412272:	mov    ecx,DWORD PTR [ebp+0x8]
  412275:	xor    ecx,ebx
  412277:	add    ecx,esi
  412279:	mov    DWORD PTR [ebp-0x8],eax
  41227c:	cmp    eax,ecx
  41227e:	jne    0x412299
  412280:	mov    eax,ds:0x33730bec
  412285:	or     eax,0x22150bef
  41228a:	mov    ds:0x33730bec,eax
  41228f:	add    eax,0x3372e90f
  412294:	mov    ds:0x33730bec,eax
  412299:	mov    ecx,0x4f85
  41229e:	mov    eax,ecx
  4122a0:	mov    WORD PTR [ebp-0x40],ax
  4122a4:	add    eax,0x3
  4122a7:	mov    edx,eax
  4122a9:	mov    WORD PTR [ebp-0x3e],dx
  4122ad:	lea    edx,[ecx+0xb]
  4122b0:	mov    WORD PTR [ebp-0x3c],dx
  4122b4:	add    edx,0x18
  4122b7:	mov    WORD PTR [ebp-0x3a],dx
  4122bb:	lea    edx,[ecx+0x25]
  4122be:	mov    WORD PTR [ebp-0x38],dx
  4122c2:	add    edx,0x5
  4122c5:	mov    WORD PTR [ebp-0x36],dx
  4122c9:	lea    edx,[ecx+0x1f]
  4122cc:	mov    WORD PTR [ebp-0x34],dx
  4122d0:	mov    WORD PTR [ebp-0x32],cx
  4122d4:	mov    ecx,edi
  4122d6:	mov    WORD PTR [ebp-0x30],cx
  4122da:	lea    ecx,[edx+0x1]
  4122dd:	mov    edx,ecx
  4122df:	mov    WORD PTR [ebp-0x54],dx
  4122e3:	mov    edx,eax
  4122e5:	mov    WORD PTR [ebp-0x52],dx
  4122e9:	mov    edx,0x4e70
  4122ee:	mov    WORD PTR [ebp-0x50],dx
  4122f2:	mov    WORD PTR [ebp-0x4e],ax
  4122f6:	lea    eax,[ecx-0x1b]
  4122f9:	mov    WORD PTR [ebp-0x4c],ax
  4122fd:	add    eax,0x5
  412300:	mov    WORD PTR [ebp-0x4a],ax
  412304:	lea    eax,[ecx-0x21]
  412307:	mov    WORD PTR [ebp-0x48],ax
  41230b:	mov    WORD PTR [ebp-0x46],cx
  41230f:	mov    WORD PTR [ebp-0x44],di
  412313:	mov    eax,DWORD PTR [ebp+0x8]
  412316:	movzx  ecx,WORD PTR [ebp-0x54]
  41231a:	xor    eax,ebx
  41231c:	add    eax,esi
  41231e:	xor    eax,ecx
  412320:	mov    WORD PTR [ebp-0x54],ax
  412324:	mov    eax,DWORD PTR [ebp+0x8]
  412327:	movzx  ecx,WORD PTR [ebp-0x40]
  41232b:	xor    eax,ebx
  41232d:	add    eax,esi
  41232f:	xor    eax,ecx
  412331:	mov    WORD PTR [ebp-0x40],ax
  412335:	xor    eax,eax
  412337:	mov    WORD PTR [ebp-0xd0],ax
  41233e:	mov    WORD PTR [ebp-0xe4],ax
  412345:	mov    edi,DWORD PTR [ebp+0x24]
  412348:	lea    eax,[ebp-0xd0]
  41234e:	lea    edx,[ebp-0x54]
  412351:	mov    DWORD PTR [ebp-0xbc],0x2
  41235b:	mov    DWORD PTR [ebp-0xb8],eax
  412361:	call   0x414b33
  412366:	mov    DWORD PTR [ebp-0xb4],eax
  41236c:	lea    eax,[ebp-0xbc]
  412372:	push   eax
  412373:	mov    eax,DWORD PTR [ebp+0xc]
  412376:	xor    eax,ebx
  412378:	add    eax,esi
  41237a:	push   eax
  41237b:	lea    eax,[ebp-0x78]
  41237e:	push   eax
  41237f:	push   DWORD PTR [ebp-0x8]
  412382:	mov    eax,DWORD PTR [ebp+0x10]
  412385:	call   eax
  412387:	mov    edi,DWORD PTR [ebp+0x24]
  41238a:	lea    eax,[ebp-0xe4]
  412390:	lea    edx,[ebp-0x40]
  412393:	mov    DWORD PTR [ebp-0xb8],eax
  412399:	call   0x414b33
  41239e:	mov    DWORD PTR [ebp-0xb4],eax
  4123a4:	lea    eax,[ebp-0xbc]
  4123aa:	push   eax
  4123ab:	mov    eax,DWORD PTR [ebp+0xc]
  4123ae:	xor    eax,ebx
  4123b0:	add    eax,esi
  4123b2:	push   eax
  4123b3:	lea    eax,[ebp-0x78]
  4123b6:	push   eax
  4123b7:	push   DWORD PTR [ebp-0x8]
  4123ba:	mov    eax,DWORD PTR [ebp+0x10]
  4123bd:	call   eax
  4123bf:	mov    eax,DWORD PTR [ebp+0x14]
  4123c2:	push   DWORD PTR [ebp-0x4]
  4123c5:	push   DWORD PTR [ebp+0x20]
  4123c8:	push   DWORD PTR [ebp+0x1c]
  4123cb:	push   DWORD PTR [ebp+0x18]
  4123ce:	push   DWORD PTR [ebp+0x10]
  4123d1:	push   DWORD PTR [ebp+0x8]
  4123d4:	push   DWORD PTR [ebp+0xc]
  4123d7:	call   0x4133d7
  4123dc:	add    DWORD PTR [ebp-0x4],eax
  4123df:	mov    eax,DWORD PTR [ebp-0x4]
  4123e2:	mov    eax,DWORD PTR [ebp-0x4]
  4123e5:	mov    edi,DWORD PTR [eax+0x190]
  4123eb:	mov    eax,DWORD PTR [ebp-0x4]
  4123ee:	mov    eax,DWORD PTR [eax+0x18c]
  4123f4:	mov    esi,DWORD PTR [eax]
  4123f6:	lea    ecx,[ebp+0x4]
  4123f9:	mov    edx,DWORD PTR [ecx]
  4123fb:	cmp    edx,esi
  4123fd:	jb     0x412414
  4123ff:	mov    eax,DWORD PTR [edi]
  412401:	mov    edi,DWORD PTR [eax+0x3c]
  412404:	mov    edi,DWORD PTR [edi+eax*1+0x50]
  412408:	add    edi,esi
  41240a:	cmp    edx,edi
  41240c:	jae    0x412414
  41240e:	sub    eax,esi
  412410:	add    eax,edx
  412412:	mov    DWORD PTR [ecx],eax
  412414:	pop    edi
  412415:	pop    esi
  412416:	pop    ebx
  412417:	leave  
  412418:	ret    0x20
  41241b:	push   edi
  41241c:	push   esi
  41241d:	push   ebx
  41241e:	push   ebp
  41241f:	mov    ebp,esp
  412421:	mov    eax,DWORD PTR [ebp+0x24]
  412424:	add    DWORD PTR [ebp+0x28],eax
  412427:	push   eax
  412428:	cld    
  412429:	mov    esi,DWORD PTR [ebp+0x18]
  41242c:	add    DWORD PTR [ebp+0x1c],esi
  41242f:	push   esi
  412430:	mov    esi,DWORD PTR [ebp+0x14]
  412433:	lods   eax,DWORD PTR ds:[esi]
  412434:	xchg   edx,eax
  412435:	push   edx
  412436:	mov    cl,BYTE PTR [esi-0x2]
  412439:	or     eax,0xffffffff
  41243c:	shl    eax,cl
  41243e:	not    eax
  412440:	push   eax
  412441:	mov    cl,dh
  412443:	or     eax,0xffffffff
  412446:	shl    eax,cl
  412448:	not    eax
  41244a:	push   eax
  41244b:	add    cl,dl
  41244d:	mov    edi,esi
  41244f:	sub    esp,0xc
  412452:	sub    eax,eax
  412454:	inc    eax
  412455:	push   eax
  412456:	push   eax
  412457:	push   eax
  412458:	push   eax
  412459:	push   eax
  41245a:	push   edi
  41245b:	sub    esi,esi
  41245d:	push   esi
  41245e:	or     ebx,0xffffffff
  412461:	mov    eax,0x300
  412466:	shl    eax,cl
  412468:	lea    ecx,[eax+0x736]
  41246e:	mov    eax,0x4000400
  412473:	shr    ecx,1
  412475:	rep stos DWORD PTR es:[edi],eax
  412477:	push   0x5
  412479:	pop    ecx
  41247a:	call   0x412765
  41247f:	loop   0x41247a
  412481:	lea    esi,[esi]
  412483:	lea    edi,[edi]
  412485:	mov    edi,DWORD PTR [ebp-0x4]
  412488:	mov    eax,DWORD PTR [ebp-0x10]
  41248b:	sub    edi,DWORD PTR [ebp+0x24]
  41248e:	and    eax,edi
  412490:	mov    DWORD PTR [ebp-0x18],eax
  412493:	mov    al,0x0
  412495:	call   0x41277d
  41249a:	jne    0x412535
  4124a0:	mov    cl,BYTE PTR [ebp-0xc]
  4124a3:	and    edi,DWORD PTR [ebp-0x14]
  4124a6:	shl    edi,cl
  4124a8:	sub    cl,0x8
  4124ab:	neg    cl
  4124ad:	shr    esi,cl
  4124af:	pop    eax
  4124b0:	add    edi,esi
  4124b2:	pop    esi
  4124b3:	lea    edi,[edi+edi*2]
  4124b6:	shl    edi,0x8
  4124b9:	cmp    al,0x7
  4124bb:	pop    edx
  4124bc:	lea    ecx,[esi+edi*2+0xe6c]
  4124c3:	push   ecx
  4124c4:	push   esi
  4124c5:	mov    esi,0x100
  4124ca:	push   eax
  4124cb:	mov    al,0x1
  4124cd:	jb     0x412503
  4124cf:	mov    edi,DWORD PTR [ebp-0x4]
  4124d2:	sub    edi,DWORD PTR [ebp-0x24]
  4124d5:	movzx  edi,BYTE PTR [edi]
  4124d8:	mov    ebp,DWORD PTR [ebp-0x34]
  4124db:	shl    edi,1
  4124dd:	mov    ecx,esi
  4124df:	and    esi,edi
  4124e1:	add    ecx,esi
  4124e3:	lea    ebp,[ebp+ecx*2+0x0]
  4124e7:	call   0x41279c
  4124ec:	mov    ecx,eax
  4124ee:	shr    esi,0x8
  4124f1:	and    ecx,0x1
  4124f4:	cmp    esi,ecx
  4124f6:	mov    esi,0x100
  4124fb:	jne    0x41250b
  4124fd:	cmp    eax,esi
  4124ff:	jb     0x4124d8
  412501:	jmp    0x412517
  412503:	mov    ebp,DWORD PTR [ebp-0x34]
  412506:	call   0x41279c
  41250b:	inc    eax
  41250c:	inc    esi
  41250d:	sub    eax,0x1
  412510:	sub    esi,0x1
  412513:	cmp    eax,esi
  412515:	jb     0x412503
  412517:	pop    edx
  412518:	inc    edx
  412519:	cmp    edx,0x5
  41251c:	dec    edx
  41251d:	mov    ecx,edx
  41251f:	jb     0x412530
  412521:	inc    edx
  412522:	cmp    edx,0xb
  412525:	dec    edx
  412526:	mov    cl,0x4
  412528:	dec    cl
  41252a:	jb     0x412530
  41252c:	mov    cl,0x7
  41252e:	dec    cl
  412530:	sub    edx,ecx
  412532:	push   edx
  412533:	jmp    0x412584
  412535:	mov    al,0xc1
  412537:	dec    al
  412539:	call   0x41278d
  41253e:	jne    0x412554
  412540:	pop    eax
  412541:	pop    edi
  412542:	pop    edx
  412543:	pop    ecx
  412544:	pop    edx
  412545:	pop    ecx
  412546:	push   DWORD PTR [esp]
  412549:	push   ecx
  41254a:	push   edx
  41254b:	mov    edx,0x664
  412550:	mov    cl,0x0
  412552:	jmp    0x4125c7
  412554:	mov    al,0xcd
  412556:	dec    al
  412558:	call   0x41278d
  41255d:	jne    0x41258d
  41255f:	mov    al,0xf1
  412561:	dec    al
  412563:	call   0x41277d
  412568:	jne    0x4125bd
  41256a:	pop    eax
  41256b:	cmp    al,0x7
  41256d:	mov    al,0x9
  41256f:	jb     0x412573
  412571:	mov    al,0xb
  412573:	push   eax
  412574:	mov    esi,DWORD PTR [ebp-0x4]
  412577:	sub    esi,DWORD PTR [ebp-0x24]
  41257a:	cmp    esi,DWORD PTR [ebp+0x24]
  41257d:	jb     0x412754
  412583:	lods   al,BYTE PTR ds:[esi]
  412584:	mov    edi,DWORD PTR [ebp-0x4]
  412587:	stos   BYTE PTR es:[edi],al
  412588:	jmp    0x41271b
  41258d:	mov    al,0xd8
  41258f:	call   0x41278d
  412594:	mov    esi,DWORD PTR [ebp-0x28]
  412597:	je     0x4125b4
  412599:	mov    al,0xe4
  41259b:	call   0x41278d
  4125a0:	mov    esi,DWORD PTR [ebp-0x2c]
  4125a3:	je     0x4125ae
  4125a5:	mov    esi,DWORD PTR [ebp-0x30]
  4125a8:	mov    ecx,DWORD PTR [ebp-0x2c]
  4125ab:	mov    DWORD PTR [ebp-0x30],ecx
  4125ae:	mov    ecx,DWORD PTR [ebp-0x28]
  4125b1:	mov    DWORD PTR [ebp-0x2c],ecx
  4125b4:	mov    ecx,DWORD PTR [ebp-0x24]
  4125b7:	mov    DWORD PTR [ebp-0x28],ecx
  4125ba:	mov    DWORD PTR [ebp-0x24],esi
  4125bd:	pop    eax
  4125be:	pop    edi
  4125bf:	pop    ecx
  4125c0:	mov    edx,0xa68
  4125c5:	mov    cl,0x8
  4125c7:	add    edx,edi
  4125c9:	push   edx
  4125ca:	push   edi
  4125cb:	cmp    al,0x7
  4125cd:	mov    al,cl
  4125cf:	jb     0x4125d3
  4125d1:	add    al,0x3
  4125d3:	push   eax
  4125d4:	mov    ebp,DWORD PTR [ebp-0x34]
  4125d7:	call   0x41279a
  4125dc:	jne    0x4125f2
  4125de:	mov    eax,DWORD PTR [ebp-0x18]
  4125e1:	mov    edi,DWORD PTR [ebp-0x34]
  4125e4:	shl    eax,0x3
  4125e7:	sub    ecx,ecx
  4125e9:	push   0x8
  4125eb:	pop    esi
  4125ec:	lea    edi,[edi+eax*2+0x4]
  4125f0:	jmp    0x412627
  4125f2:	mov    ebp,DWORD PTR [ebp-0x34]
  4125f5:	add    ebp,0x2
  4125f8:	call   0x41279a
  4125fd:	jne    0x412617
  4125ff:	mov    eax,DWORD PTR [ebp-0x18]
  412602:	mov    edi,DWORD PTR [ebp-0x34]
  412605:	shl    eax,0x3
  412608:	push   0x8
  41260a:	pop    ecx
  41260b:	push   0x8
  41260d:	pop    esi
  41260e:	lea    edi,[edi+eax*2+0x104]
  412615:	jmp    0x412627
  412617:	mov    edi,0x204
  41261c:	add    edi,DWORD PTR [ebp-0x34]
  41261f:	push   0x10
  412621:	pop    ecx
  412622:	mov    esi,0x100
  412627:	mov    DWORD PTR [ebp-0x1c],ecx
  41262a:	sub    eax,eax
  41262c:	inc    eax
  41262d:	mov    ebp,edi
  41262f:	call   0x41279c
  412634:	mov    ecx,eax
  412636:	sub    ecx,esi
  412638:	jb     0x41262d
  41263a:	add    DWORD PTR [ebp-0x1c],ecx
  41263d:	cmp    DWORD PTR [ebp-0x3c],0x4
  412641:	jae    0x4126f7
  412647:	add    DWORD PTR [ebp-0x3c],0x7
  41264b:	mov    ecx,DWORD PTR [ebp-0x1c]
  41264e:	cmp    ecx,0x4
  412651:	jb     0x412656
  412653:	push   0x3
  412655:	pop    ecx
  412656:	mov    edi,DWORD PTR [ebp-0x38]
  412659:	shl    ecx,0x6
  41265c:	sub    eax,eax
  41265e:	inc    eax
  41265f:	push   0x40
  412661:	pop    esi
  412662:	lea    edi,[edi+ecx*2+0x360]
  412669:	mov    ebp,edi
  41266b:	call   0x41279c
  412670:	mov    ecx,eax
  412672:	sub    ecx,esi
  412674:	jb     0x412669
  412676:	mov    DWORD PTR [ebp-0x18],ecx
  412679:	mov    DWORD PTR [ebp-0x24],ecx
  41267c:	cmp    ecx,0x4
  41267f:	jb     0x4126f4
  412681:	mov    esi,ecx
  412683:	and    DWORD PTR [ebp-0x24],0x1
  412687:	shr    esi,1
  412689:	or     DWORD PTR [ebp-0x24],0x2
  41268d:	dec    esi
  41268e:	cmp    ecx,0xe
  412691:	jae    0x4126ac
  412693:	mov    eax,0x2af
  412698:	sub    eax,ecx
  41269a:	mov    ecx,esi
  41269c:	shl    BYTE PTR [ebp-0x24],cl
  41269f:	add    eax,DWORD PTR [ebp-0x24]
  4126a2:	shl    eax,1
  4126a4:	add    eax,DWORD PTR [ebp-0x38]
  4126a7:	mov    DWORD PTR [ebp-0x34],eax
  4126aa:	jmp    0x4126d9
  4126ac:	sub    esi,0x4
  4126af:	call   0x412759
  4126b4:	shr    ebx,1
  4126b6:	shl    DWORD PTR [ebp-0x24],1
  4126b9:	cmp    DWORD PTR [ebp-0x20],ebx
  4126bc:	jb     0x4126c4
  4126be:	inc    DWORD PTR [ebp-0x24]
  4126c1:	sub    DWORD PTR [ebp-0x20],ebx
  4126c4:	dec    esi
  4126c5:	jne    0x4126af
  4126c7:	mov    eax,0x644
  4126cc:	add    eax,DWORD PTR [ebp-0x38]
  4126cf:	mov    DWORD PTR [ebp-0x34],eax
  4126d2:	shl    DWORD PTR [ebp-0x24],0x4
  4126d6:	push   0x4
  4126d8:	pop    esi
  4126d9:	sub    edi,edi
  4126db:	inc    edi
  4126dc:	mov    eax,edi
  4126de:	mov    ebp,DWORD PTR [ebp-0x34]
  4126e1:	call   0x41279c
  4126e6:	test   al,0x1
  4126e8:	je     0x4126ed
  4126ea:	or     DWORD PTR [ebp-0x24],edi
  4126ed:	shl    edi,1
  4126ef:	dec    esi
  4126f0:	jne    0x4126de
  4126f2:	jmp    0x4126f4
  4126f4:	inc    DWORD PTR [ebp-0x24]
  4126f7:	mov    ecx,DWORD PTR [ebp-0x1c]
  4126fa:	add    ecx,0x2
  4126fd:	mov    edi,DWORD PTR [ebp-0x4]
  412700:	mov    eax,edi
  412702:	sub    eax,DWORD PTR [ebp+0x24]
  412705:	cmp    DWORD PTR [ebp-0x24],eax
  412708:	ja     0x412754
  41270a:	mov    esi,edi
  41270c:	sub    esi,DWORD PTR [ebp-0x24]
  41270f:	mov    edx,DWORD PTR [ebp+0x28]
  412712:	lods   al,BYTE PTR ds:[esi]
  412713:	stos   BYTE PTR es:[edi],al
  412714:	cmp    edi,edx
  412716:	jae    0x41271b
  412718:	dec    ecx
  412719:	jne    0x412712
  41271b:	mov    DWORD PTR [ebp-0x4],edi
  41271e:	movzx  esi,al
  412721:	cmp    edi,DWORD PTR [ebp+0x28]
  412724:	jb     0x412485
  41272a:	call   0x412759
  41272f:	sub    eax,eax
  412731:	lea    ebp,[esp+0x3c]
  412735:	mov    edx,DWORD PTR [ebp+0x20]
  412738:	mov    esi,DWORD PTR [ebp-0x8]
  41273b:	sub    esi,DWORD PTR [ebp+0x18]
  41273e:	mov    DWORD PTR [edx],esi
  412740:	mov    edx,DWORD PTR [ebp+0x2c]
  412743:	mov    edi,DWORD PTR [ebp-0x4]
  412746:	sub    edi,DWORD PTR [ebp+0x24]
  412749:	mov    DWORD PTR [edx],edi
  41274b:	leave  
  41274c:	pop    ebx
  41274d:	pop    esi
  41274e:	pop    edi
  41274f:	ret    0x1c
  412752:	pop    esi
  412753:	pop    eax
  412754:	sub    eax,eax
  412756:	inc    eax
  412757:	jmp    0x412731
  412759:	cmp    ebx,0x1000000
  41275f:	jb     0x412762
  412761:	ret    
  412762:	shl    ebx,0x8
  412765:	push   esi
  412766:	mov    esi,DWORD PTR [ebp-0x8]
  412769:	cmp    esi,DWORD PTR [ebp+0x1c]
  41276c:	jae    0x412752
  41276e:	mov    eax,DWORD PTR [ebp-0x20]
  412771:	shl    eax,0x8
  412774:	lods   al,BYTE PTR ds:[esi]
  412775:	mov    DWORD PTR [ebp-0x20],eax
  412778:	mov    DWORD PTR [ebp-0x8],esi
  41277b:	pop    esi
  41277c:	ret    
  41277d:	mov    ecx,DWORD PTR [ebp-0x3c]
  412780:	movzx  eax,al
  412783:	shl    ecx,0x4
  412786:	add    eax,DWORD PTR [ebp-0x18]
  412789:	add    eax,ecx
  41278b:	jmp    0x412793
  41278d:	movzx  eax,al
  412790:	add    eax,DWORD PTR [ebp-0x3c]
  412793:	mov    ebp,DWORD PTR [ebp-0x38]
  412796:	lea    ebp,[ebp+eax*2+0x0]
  41279a:	sub    eax,eax
  41279c:	lea    ebp,[ebp+eax*2+0x0]
  4127a0:	cmp    ebx,0x1000000
  4127a6:	jae    0x4127c4
  4127a8:	mov    ecx,DWORD PTR [esp+0x38]
  4127ac:	shl    DWORD PTR [esp+0x20],0x8
  4127b1:	cmp    ecx,DWORD PTR [esp+0x5c]
  4127b5:	jae    0x412753
  4127b7:	mov    dl,BYTE PTR [ecx]
  4127b9:	inc    DWORD PTR [esp+0x38]
  4127bd:	shl    ebx,0x8
  4127c0:	mov    BYTE PTR [esp+0x20],dl
  4127c4:	mov    ecx,ebx
  4127c6:	movzx  edx,WORD PTR [ebp+0x0]
  4127ca:	shr    ecx,0xb
  4127cd:	imul   ecx,edx
  4127d0:	cmp    DWORD PTR [esp+0x20],ecx
  4127d4:	jae    0x4127ed
  4127d6:	mov    ebx,ecx
  4127d8:	mov    ecx,0x800
  4127dd:	sub    ecx,edx
  4127df:	shr    ecx,0x5
  4127e2:	add    WORD PTR [ebp+0x0],cx
  4127e6:	add    eax,eax
  4127e8:	lea    ebp,[esp+0x40]
  4127ec:	ret    
  4127ed:	shr    edx,0x5
  4127f0:	sub    DWORD PTR [esp+0x20],ecx
  4127f4:	sub    ebx,ecx
  4127f6:	sub    WORD PTR [ebp+0x0],dx
  4127fa:	add    eax,eax
  4127fc:	add    eax,0x1
  4127ff:	lea    ebp,[esp+0x40]
  412803:	ret    
  412804:	push   ebp
  412805:	mov    ebp,esp
  412807:	sub    esp,0xec
  41280d:	push   ebx
  41280e:	push   esi
  41280f:	push   edi
  412810:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  412817:	mov    DWORD PTR [ebp-0x34],0xf89c85b2
  41281e:	mov    eax,DWORD PTR [ebp+0x8]
  412821:	mov    DWORD PTR [ebp+0x8],eax
  412824:	mov    ecx,DWORD PTR [ebp-0x8]
  412827:	mov    ebx,0x7510896
  41282c:	xor    ecx,ebx
  41282e:	mov    eax,0x3272dd
  412833:	add    ecx,eax
  412835:	mov    DWORD PTR [ebp-0x20],ecx
  412838:	mov    ecx,DWORD PTR [ebp-0x8]
  41283b:	xor    ecx,ebx
  41283d:	add    ecx,eax
  41283f:	mov    DWORD PTR [ebp-0x30],ecx
  412842:	mov    ecx,DWORD PTR [ebp-0x8]
  412845:	xor    ecx,ebx
  412847:	add    ecx,eax
  412849:	mov    DWORD PTR [ebp-0x2c],ecx
  41284c:	mov    ecx,DWORD PTR [ebp-0x8]
  41284f:	xor    ecx,ebx
  412851:	add    ecx,eax
  412853:	mov    DWORD PTR [ebp-0xa0],ecx
  412859:	mov    DWORD PTR [ebp-0x48],0xf89f05b5
  412860:	mov    DWORD PTR [ebp-0x2c],0xf89cb5b5
  412867:	mov    DWORD PTR [ebp-0x3c],0xf89c85b1
  41286e:	push   0x24
  412870:	pop    ecx
  412871:	mov    DWORD PTR [ebp-0x28],ecx
  412874:	mov    DWORD PTR [ebp-0x28],ecx
  412877:	push   0x64
  412879:	pop    ecx
  41287a:	mov    DWORD PTR [ebp-0x28],ecx
  41287d:	mov    DWORD PTR [ebp-0x28],ecx
  412880:	mov    DWORD PTR [ebp-0x28],0x4c
  412887:	mov    DWORD PTR [ebp-0x28],0x42
  41288e:	mov    ecx,DWORD PTR [ebp-0x8]
  412891:	xor    ecx,ebx
  412893:	add    ecx,eax
  412895:	mov    DWORD PTR [ebp-0x28],ecx
  412898:	mov    ecx,DWORD PTR [ebp-0x8]
  41289b:	xor    ecx,ebx
  41289d:	add    ecx,eax
  41289f:	mov    DWORD PTR [ebp-0x28],ecx
  4128a2:	mov    DWORD PTR [ebp-0x24],0x256
  4128a9:	mov    DWORD PTR [ebp-0x1c],0x34
  4128b0:	mov    DWORD PTR [ebp-0xc],0x78
  4128b7:	lea    edi,[ebp-0xcc]
  4128bd:	lea    esi,[ebp-0xec]
  4128c3:	call   0x413346
  4128c8:	dec    DWORD PTR [ebp-0xc]
  4128cb:	jne    0x4128b7
  4128cd:	dec    DWORD PTR [ebp-0x1c]
  4128d0:	jne    0x4128b0
  4128d2:	dec    DWORD PTR [ebp-0x24]
  4128d5:	jne    0x4128a9
  4128d7:	mov    DWORD PTR [ebp-0x1c],0x400c
  4128de:	mov    eax,DWORD PTR [ebp-0x8]
  4128e1:	xor    eax,ebx
  4128e3:	mov    esi,0x3272dd
  4128e8:	add    eax,esi
  4128ea:	mov    DWORD PTR [ebp-0x14],eax
  4128ed:	mov    eax,DWORD PTR [ebp-0x8]
  4128f0:	and    DWORD PTR [ebp-0x8c],0x0
  4128f7:	xor    eax,ebx
  4128f9:	add    eax,esi
  4128fb:	mov    DWORD PTR [ebp-0x24],eax
  4128fe:	mov    eax,fs:0x18
  412904:	mov    DWORD PTR [ebp-0x8c],eax
  41290a:	mov    eax,DWORD PTR [eax+0x30]
  41290d:	mov    DWORD PTR [ebp-0x90],eax
  412913:	mov    eax,DWORD PTR [eax+0xc]
  412916:	mov    DWORD PTR [ebp-0x9c],eax
  41291c:	mov    eax,DWORD PTR [ebp+0x8]
  41291f:	lea    ecx,[ebp-0x8c]
  412925:	mov    DWORD PTR [eax+0x1a0],ecx
  41292b:	mov    eax,DWORD PTR [ebp+0x8]
  41292e:	lea    ecx,[ebp-0x90]
  412934:	mov    DWORD PTR [eax+0x1a4],ecx
  41293a:	mov    eax,DWORD PTR [ebp+0x8]
  41293d:	push   DWORD PTR [ebp+0x8]
  412940:	lea    ecx,[ebp-0x9c]
  412946:	mov    DWORD PTR [eax+0x1a8],ecx
  41294c:	call   0x414b04
  412951:	mov    ecx,DWORD PTR [ebp-0x8]
  412954:	xor    ecx,ebx
  412956:	add    ecx,esi
  412958:	cmp    ecx,eax
  41295a:	je     0x412c2e
  412960:	mov    eax,DWORD PTR [ebp+0x8]
  412963:	mov    eax,DWORD PTR [eax+0x194]
  412969:	mov    ecx,DWORD PTR [eax]
  41296b:	mov    eax,DWORD PTR [ebp+0x8]
  41296e:	mov    eax,DWORD PTR [eax+0x194]
  412974:	mov    eax,DWORD PTR [eax]
  412976:	add    eax,DWORD PTR [ecx+0x3c]
  412979:	mov    ecx,DWORD PTR [ebp+0x8]
  41297c:	mov    ecx,DWORD PTR [ecx+0x1d8]
  412982:	lea    edx,[ebp-0xac]
  412988:	push   edx
  412989:	mov    edx,DWORD PTR [ebp+0x8]
  41298c:	mov    edx,DWORD PTR [edx+0x18c]
  412992:	mov    edx,DWORD PTR [edx]
  412994:	add    edx,DWORD PTR [eax+0x88]
  41299a:	push   0x4
  41299c:	push   DWORD PTR [eax+0x8c]
  4129a2:	push   edx
  4129a3:	call   DWORD PTR [ecx+0x1c]
  4129a6:	push   DWORD PTR [ebp+0x8]
  4129a9:	mov    edi,DWORD PTR [ebp+0x8]
  4129ac:	mov    eax,DWORD PTR [ebp+0x8]
  4129af:	mov    edx,DWORD PTR [eax+0x1b8]
  4129b5:	mov    DWORD PTR [ebp-0x5c],0xc0e0f06
  4129bc:	mov    DWORD PTR [ebp-0x58],0x50a091f
  4129c3:	mov    WORD PTR [ebp-0x54],0x7a3d
  4129c9:	mov    DWORD PTR [ebp-0x70],0x23f0f25
  4129d0:	mov    DWORD PTR [ebp-0x6c],0x63d0c1d
  4129d7:	mov    DWORD PTR [ebp-0x68],0x281d020a
  4129de:	mov    DWORD PTR [ebp-0x64],0xc0109f1
  4129e5:	mov    DWORD PTR [ebp-0x60],0x7a3d1f05
  4129ec:	mov    DWORD PTR [ebp-0x84],0x23f0f25
  4129f6:	mov    DWORD PTR [ebp-0x80],0x63d0c1d
  4129fd:	mov    DWORD PTR [ebp-0x7c],0x281d020a
  412a04:	mov    DWORD PTR [ebp-0x78],0xc0109f1
  412a0b:	mov    DWORD PTR [ebp-0x74],0x7a131f05
  412a12:	call   0x414b33
  412a17:	push   eax
  412a18:	mov    eax,DWORD PTR [ebp+0x8]
  412a1b:	mov    eax,DWORD PTR [eax+0x1a8]
  412a21:	push   DWORD PTR [eax]
  412a23:	call   0x4147d5
  412a28:	test   eax,eax
  412a2a:	jne    0x412a7c
  412a2c:	mov    eax,DWORD PTR [ebp+0x8]
  412a2f:	mov    eax,DWORD PTR [eax+0x1d8]
  412a35:	mov    edi,DWORD PTR [ebp+0x8]
  412a38:	add    eax,0x4
  412a3b:	mov    DWORD PTR [ebp-0x18],eax
  412a3e:	mov    eax,DWORD PTR [ebp+0x8]
  412a41:	mov    edx,DWORD PTR [eax+0x1b8]
  412a47:	call   0x414b33
  412a4c:	push   eax
  412a4d:	mov    eax,DWORD PTR [ebp-0x18]
  412a50:	call   DWORD PTR [eax]
  412a52:	test   eax,eax
  412a54:	jne    0x412a7c
  412a56:	mov    eax,DWORD PTR [ebp+0x8]
  412a59:	mov    eax,DWORD PTR [eax+0x1d8]
  412a5f:	mov    edi,DWORD PTR [ebp+0x8]
  412a62:	add    eax,0x10
  412a65:	mov    DWORD PTR [ebp-0x18],eax
  412a68:	mov    eax,DWORD PTR [ebp+0x8]
  412a6b:	mov    edx,DWORD PTR [eax+0x1b8]
  412a71:	call   0x414b33
  412a76:	push   eax
  412a77:	mov    eax,DWORD PTR [ebp-0x18]
  412a7a:	call   DWORD PTR [eax]
  412a7c:	mov    eax,DWORD PTR [ebp-0x8]
  412a7f:	mov    ecx,DWORD PTR [ebp-0x1c]
  412a82:	xor    eax,ebx
  412a84:	add    eax,esi
  412a86:	cmp    eax,ecx
  412a88:	je     0x412c07
  412a8e:	mov    eax,DWORD PTR [ebp-0x34]
  412a91:	xor    eax,ebx
  412a93:	mov    ecx,0xffcd8d23
  412a98:	sub    ecx,eax
  412a9a:	add    ecx,DWORD PTR [ebp-0x1c]
  412a9d:	mov    eax,DWORD PTR [ebp-0x14]
  412aa0:	cmp    eax,ecx
  412aa2:	ja     0x412c07
  412aa8:	mov    DWORD PTR [ebp-0x4],0x0
  412aaf:	push   DWORD PTR [ebp+0x8]
  412ab2:	mov    edi,DWORD PTR [ebp+0x8]
  412ab5:	mov    eax,DWORD PTR [ebp+0x8]
  412ab8:	mov    edx,DWORD PTR [eax+0x1b4]
  412abe:	call   0x414b33
  412ac3:	push   eax
  412ac4:	mov    eax,DWORD PTR [ebp+0x8]
  412ac7:	mov    eax,DWORD PTR [eax+0x1a8]
  412acd:	push   DWORD PTR [eax]
  412acf:	call   0x4147d5
  412ad4:	mov    ecx,DWORD PTR [ebp+0x8]
  412ad7:	mov    ecx,DWORD PTR [ecx+0x19c]
  412add:	mov    DWORD PTR [ecx],eax
  412adf:	mov    eax,DWORD PTR [ebp+0x8]
  412ae2:	mov    edi,DWORD PTR [eax+0x1d8]
  412ae8:	mov    esi,DWORD PTR [ebp+0x8]
  412aeb:	xor    eax,eax
  412aed:	lea    edx,[ebp-0x84]
  412af3:	call   0x414b69
  412af8:	push   eax
  412af9:	mov    eax,DWORD PTR [ebp+0x8]
  412afc:	mov    eax,DWORD PTR [eax+0x19c]
  412b02:	push   DWORD PTR [eax]
  412b04:	call   DWORD PTR [edi+0x8]
  412b07:	mov    DWORD PTR [ebp-0x18],eax
  412b0a:	mov    eax,DWORD PTR [ebp+0x8]
  412b0d:	mov    edi,DWORD PTR [eax+0x1d8]
  412b13:	mov    esi,DWORD PTR [ebp+0x8]
  412b16:	xor    eax,eax
  412b18:	lea    edx,[ebp-0x70]
  412b1b:	call   0x414b69
  412b20:	push   eax
  412b21:	mov    eax,DWORD PTR [ebp+0x8]
  412b24:	mov    eax,DWORD PTR [eax+0x19c]
  412b2a:	push   DWORD PTR [eax]
  412b2c:	call   DWORD PTR [edi+0x8]
  412b2f:	and    DWORD PTR [ebp-0x10],0x0
  412b33:	mov    eax,DWORD PTR [ebp-0x10]
  412b36:	and    eax,0x7
  412b39:	add    eax,0x31
  412b3c:	push   eax
  412b3d:	call   DWORD PTR [ebp-0x18]
  412b40:	test   eax,eax
  412b42:	jne    0x412b49
  412b44:	and    DWORD PTR [ebp-0xc],eax
  412b47:	jmp    0x412b71
  412b49:	mov    eax,DWORD PTR [ebp+0x8]
  412b4c:	mov    edi,DWORD PTR [eax+0x1d8]
  412b52:	mov    esi,DWORD PTR [ebp+0x8]
  412b55:	xor    eax,eax
  412b57:	lea    edx,[ebp-0x5c]
  412b5a:	call   0x414b69
  412b5f:	push   eax
  412b60:	mov    eax,DWORD PTR [ebp+0x8]
  412b63:	mov    eax,DWORD PTR [eax+0x198]
  412b69:	push   DWORD PTR [eax]
  412b6b:	call   DWORD PTR [edi+0x8]
  412b6e:	mov    DWORD PTR [ebp-0xc],eax
  412b71:	inc    DWORD PTR [ebp-0x10]
  412b74:	cmp    DWORD PTR [ebp-0x10],0x10
  412b78:	jb     0x412b33
  412b7a:	mov    eax,DWORD PTR [ebp-0x34]
  412b7d:	mov    esi,DWORD PTR [ebp+0x8]
  412b80:	xor    eax,ebx
  412b82:	mov    edi,0x3272dd
  412b87:	add    eax,edi
  412b89:	lea    edx,[ebp-0xcc]
  412b8f:	call   0x414b69
  412b94:	push   eax
  412b95:	mov    eax,DWORD PTR [ebp-0x8]
  412b98:	mov    esi,DWORD PTR [ebp+0x8]
  412b9b:	xor    eax,ebx
  412b9d:	add    eax,edi
  412b9f:	lea    edx,[ebp-0xec]
  412ba5:	call   0x414b69
  412baa:	push   eax
  412bab:	call   DWORD PTR [ebp-0xc]
  412bae:	mov    ecx,DWORD PTR [ebp-0x8]
  412bb1:	xor    ecx,ebx
  412bb3:	add    ecx,edi
  412bb5:	cmp    ecx,eax
  412bb7:	jne    0x412bc0
  412bb9:	mov    DWORD PTR [ebp-0x4],0x1
  412bc0:	mov    eax,DWORD PTR [ebp-0x34]
  412bc3:	mov    ecx,DWORD PTR [ebp-0x14]
  412bc6:	xor    eax,ebx
  412bc8:	lea    eax,[eax+ecx*1+0x3272dd]
  412bcf:	mov    DWORD PTR [ebp-0x14],eax
  412bd2:	mov    eax,DWORD PTR [ebp-0x4]
  412bd5:	test   eax,eax
  412bd7:	je     0x412beb
  412bd9:	mov    eax,DWORD PTR [ebp-0x34]
  412bdc:	mov    ecx,DWORD PTR [ebp-0x24]
  412bdf:	xor    eax,ebx
  412be1:	lea    eax,[eax+ecx*1+0x3272dd]
  412be8:	mov    DWORD PTR [ebp-0x24],eax
  412beb:	mov    eax,DWORD PTR [ebp-0x34]
  412bee:	xor    eax,ebx
  412bf0:	mov    ecx,0xffcd8d23
  412bf5:	sub    ecx,eax
  412bf7:	add    ecx,DWORD PTR [ebp-0x1c]
  412bfa:	mov    eax,DWORD PTR [ebp-0x14]
  412bfd:	cmp    eax,ecx
  412bff:	jbe    0x412aa8
  412c05:	mov    esi,edi
  412c07:	mov    eax,DWORD PTR [ebp-0x24]
  412c0a:	mov    ecx,DWORD PTR [ebp-0x14]
  412c0d:	cmp    ecx,eax
  412c0f:	jne    0x412c22
  412c11:	push   DWORD PTR [ebp+0x8]
  412c14:	lea    eax,[ebp-0x30]
  412c17:	push   eax
  412c18:	call   0x4155e2
  412c1d:	mov    DWORD PTR [ebp-0x20],eax
  412c20:	jmp    0x412c2e
  412c22:	mov    eax,DWORD PTR [ebp-0x20]
  412c25:	mov    ecx,DWORD PTR [ebp-0x34]
  412c28:	xor    ecx,ebx
  412c2a:	add    ecx,esi
  412c2c:	xor    DWORD PTR [eax],ecx
  412c2e:	mov    eax,DWORD PTR [ebp-0x8]
  412c31:	mov    ecx,DWORD PTR [ebp-0x20]
  412c34:	xor    eax,ebx
  412c36:	add    eax,esi
  412c38:	cmp    eax,ecx
  412c3a:	je     0x413224
  412c40:	mov    eax,DWORD PTR [ebp-0x8]
  412c43:	mov    ecx,DWORD PTR [ebp-0x30]
  412c46:	xor    eax,ebx
  412c48:	add    eax,esi
  412c4a:	cmp    eax,ecx
  412c4c:	je     0x413224
  412c52:	mov    eax,DWORD PTR [ebp-0x8]
  412c55:	xor    eax,ebx
  412c57:	add    eax,esi
  412c59:	jmp    0x412c77
  412c5b:	mov    edi,DWORD PTR [ebp-0x20]
  412c5e:	mov    cl,al
  412c60:	and    cl,0x1f
  412c63:	or     dl,0xff
  412c66:	sub    dl,cl
  412c68:	add    BYTE PTR [edi+eax*1],dl
  412c6b:	mov    ecx,DWORD PTR [ebp-0x34]
  412c6e:	xor    ecx,ebx
  412c70:	lea    eax,[eax+ecx*1+0x3272dd]
  412c77:	mov    ecx,DWORD PTR [ebp-0x30]
  412c7a:	cmp    eax,ecx
  412c7c:	jb     0x412c5b
  412c7e:	mov    eax,DWORD PTR [ebp-0x30]
  412c81:	mov    DWORD PTR [ebp-0x1c],eax
  412c84:	mov    eax,DWORD PTR [ebp-0x20]
  412c87:	mov    DWORD PTR [ebp-0x24],0xf89c85b5
  412c8e:	mov    DWORD PTR [ebp-0xa8],eax
  412c94:	mov    ecx,0xf89c85b2
  412c99:	mov    DWORD PTR [ebp-0x14],ecx
  412c9c:	mov    eax,DWORD PTR [ebp-0x24]
  412c9f:	xor    eax,ebx
  412ca1:	add    eax,esi
  412ca3:	mov    DWORD PTR [ebp-0x4],eax
  412ca6:	mov    eax,DWORD PTR [ebp-0x24]
  412ca9:	xor    eax,ebx
  412cab:	add    eax,esi
  412cad:	mov    DWORD PTR [ebp-0x10],eax
  412cb0:	mov    DWORD PTR [ebp-0x40],0xf89c85d5
  412cb7:	mov    DWORD PTR [ebp-0x44],0xf89c85bc
  412cbe:	mov    eax,DWORD PTR [ebp-0x24]
  412cc1:	mov    edx,DWORD PTR [ebp-0x1c]
  412cc4:	xor    eax,ebx
  412cc6:	add    eax,esi
  412cc8:	cmp    edx,eax
  412cca:	je     0x412e02
  412cd0:	jmp    0x412dde
  412cd5:	mov    edx,DWORD PTR [ebp-0x4]
  412cd8:	mov    eax,DWORD PTR [ebp-0x1c]
  412cdb:	mov    edi,DWORD PTR [ebp-0x40]
  412cde:	sub    eax,edx
  412ce0:	xor    edi,ebx
  412ce2:	xor    edx,edx
  412ce4:	add    edi,esi
  412ce6:	div    edi
  412ce8:	mov    DWORD PTR [ebp-0x10],eax
  412ceb:	mov    eax,DWORD PTR [ebp-0x44]
  412cee:	mov    edx,DWORD PTR [ebp-0x10]
  412cf1:	xor    eax,ebx
  412cf3:	add    eax,esi
  412cf5:	cmp    edx,eax
  412cf7:	jbe    0x412d03
  412cf9:	mov    eax,DWORD PTR [ebp-0x44]
  412cfc:	xor    eax,ebx
  412cfe:	add    eax,esi
  412d00:	mov    DWORD PTR [ebp-0x10],eax
  412d03:	mov    eax,DWORD PTR [ebp-0x40]
  412d06:	mov    edx,DWORD PTR [ebp-0x10]
  412d09:	xor    eax,ebx
  412d0b:	add    eax,esi
  412d0d:	imul   eax,edx
  412d10:	mov    DWORD PTR [ebp-0x10],eax
  412d13:	mov    eax,DWORD PTR [ebp-0x24]
  412d16:	mov    edx,DWORD PTR [ebp-0x10]
  412d19:	xor    eax,ebx
  412d1b:	add    eax,esi
  412d1d:	cmp    edx,eax
  412d1f:	je     0x412dcc
  412d25:	mov    eax,DWORD PTR [ebp-0x10]
  412d28:	mov    DWORD PTR [ebp-0xc],eax
  412d2b:	mov    eax,DWORD PTR [ebp-0x4]
  412d2e:	add    eax,DWORD PTR [ebp-0xa8]
  412d34:	mov    DWORD PTR [ebp-0x18],0xf89c85b5
  412d3b:	mov    DWORD PTR [ebp-0x38],ecx
  412d3e:	mov    DWORD PTR [ebp-0x28],0xf89c85b3
  412d45:	mov    DWORD PTR [ebp-0x88],eax
  412d4b:	mov    DWORD PTR [ebp-0x28],0xf89c85b0
  412d52:	mov    DWORD PTR [ebp-0x94],ecx
  412d58:	mov    eax,DWORD PTR [ebp-0x18]
  412d5b:	xor    eax,ebx
  412d5d:	add    eax,esi
  412d5f:	jmp    0x412d8f
  412d61:	mov    eax,DWORD PTR [ebp-0x94]
  412d67:	mov    edx,DWORD PTR [ebp-0x10]
  412d6a:	xor    eax,ebx
  412d6c:	add    eax,esi
  412d6e:	imul   eax,edx
  412d71:	mov    edx,DWORD PTR [ebp-0x88]
  412d77:	mov    BYTE PTR [eax+edx*1],0x0
  412d7b:	mov    eax,DWORD PTR [ebp-0x28]
  412d7e:	mov    edx,DWORD PTR [ebp-0x38]
  412d81:	xor    eax,ebx
  412d83:	xor    edx,ebx
  412d85:	add    eax,esi
  412d87:	add    edx,esi
  412d89:	imul   eax,edx
  412d8c:	add    eax,DWORD PTR [ebp-0x10]
  412d8f:	mov    DWORD PTR [ebp-0x10],eax
  412d92:	mov    eax,DWORD PTR [ebp-0x10]
  412d95:	mov    edx,DWORD PTR [ebp-0xc]
  412d98:	cmp    edx,eax
  412d9a:	jb     0x412d61
  412d9c:	mov    eax,DWORD PTR [ebp-0x38]
  412d9f:	mov    edx,DWORD PTR [ebp-0xc]
  412da2:	xor    eax,ebx
  412da4:	add    eax,esi
  412da6:	imul   eax,edx
  412da9:	mov    edx,DWORD PTR [ebp-0x18]
  412dac:	xor    edx,ebx
  412dae:	add    edx,esi
  412db0:	or     eax,edx
  412db2:	mov    edx,DWORD PTR [ebp-0x14]
  412db5:	xor    edx,ebx
  412db7:	add    eax,edx
  412db9:	mov    edx,DWORD PTR [ebp-0x14]
  412dbc:	xor    edx,ebx
  412dbe:	add    eax,edx
  412dc0:	mov    edx,DWORD PTR [ebp-0x4]
  412dc3:	lea    eax,[eax+edx*1+0x64e5ba]
  412dca:	jmp    0x412ddb
  412dcc:	mov    eax,DWORD PTR [ebp-0x14]
  412dcf:	mov    edx,DWORD PTR [ebp-0x4]
  412dd2:	xor    eax,ebx
  412dd4:	lea    eax,[eax+edx*1+0x3272dd]
  412ddb:	mov    DWORD PTR [ebp-0x4],eax
  412dde:	mov    eax,DWORD PTR [ebp-0x14]
  412de1:	xor    eax,ebx
  412de3:	mov    edx,0xffcd8d23
  412de8:	sub    edx,eax
  412dea:	add    edx,DWORD PTR [ebp-0x1c]
  412ded:	mov    eax,DWORD PTR [ebp-0x14]
  412df0:	mov    edi,DWORD PTR [ebp-0x4]
  412df3:	xor    eax,ebx
  412df5:	add    eax,esi
  412df7:	imul   eax,edi
  412dfa:	cmp    eax,edx
  412dfc:	jbe    0x412cd5
  412e02:	mov    eax,DWORD PTR [ebp-0x8]
  412e05:	mov    ecx,DWORD PTR [ebp-0x30]
  412e08:	mov    eax,DWORD PTR [ebp+0x8]
  412e0b:	mov    edx,DWORD PTR [ebp-0x3c]
  412e0e:	mov    eax,DWORD PTR [eax+0x1d8]
  412e14:	xor    edx,ebx
  412e16:	add    edx,esi
  412e18:	push   edx
  412e19:	mov    edx,DWORD PTR [ebp-0x2c]
  412e1c:	xor    edx,ebx
  412e1e:	add    edx,esi
  412e20:	push   edx
  412e21:	push   ecx
  412e22:	mov    DWORD PTR [ebp-0x28],ecx
  412e25:	mov    ecx,DWORD PTR [ebp-0x8]
  412e28:	xor    ecx,ebx
  412e2a:	add    ecx,esi
  412e2c:	push   ecx
  412e2d:	call   DWORD PTR [eax+0x14]
  412e30:	mov    edi,eax
  412e32:	mov    eax,DWORD PTR [ebp-0x8]
  412e35:	xor    eax,ebx
  412e37:	add    eax,esi
  412e39:	cmp    eax,edi
  412e3b:	je     0x412e96
  412e3d:	mov    eax,DWORD PTR [ebp-0x8]
  412e40:	jmp    0x412e63
  412e42:	mov    ecx,DWORD PTR [ebp-0x20]
  412e45:	xor    eax,ebx
  412e47:	mov    cl,BYTE PTR [ecx+eax*1+0x3272dd]
  412e4e:	mov    BYTE PTR [eax+edi*1+0x3272dd],cl
  412e55:	mov    ecx,DWORD PTR [ebp-0x34]
  412e58:	xor    ecx,ebx
  412e5a:	lea    eax,[ecx+eax*1+0x3272dd]
  412e61:	xor    eax,ebx
  412e63:	mov    ecx,DWORD PTR [ebp-0x30]
  412e66:	sub    ecx,esi
  412e68:	xor    ecx,ebx
  412e6a:	cmp    eax,ecx
  412e6c:	jne    0x412e42
  412e6e:	mov    eax,DWORD PTR [ebp+0x8]
  412e71:	mov    ecx,DWORD PTR [ebp-0x48]
  412e74:	mov    eax,DWORD PTR [eax+0x1d8]
  412e7a:	xor    ecx,ebx
  412e7c:	add    ecx,esi
  412e7e:	push   ecx
  412e7f:	mov    ecx,DWORD PTR [ebp-0x8]
  412e82:	xor    ecx,ebx
  412e84:	add    ecx,esi
  412e86:	push   ecx
  412e87:	push   DWORD PTR [ebp-0x20]
  412e8a:	call   DWORD PTR [eax+0x18]
  412e8d:	mov    eax,DWORD PTR [ebp-0x28]
  412e90:	mov    DWORD PTR [ebp-0x20],edi
  412e93:	mov    DWORD PTR [ebp-0x30],eax
  412e96:	mov    edi,DWORD PTR [ebp-0x20]
  412e99:	mov    eax,DWORD PTR [ebp-0x34]
  412e9c:	mov    ecx,DWORD PTR [ebp-0x8]
  412e9f:	xor    eax,ebx
  412ea1:	mov    DWORD PTR [ebp-0x28],edi
  412ea4:	add    eax,esi
  412ea6:	mov    DWORD PTR [ebp-0x50],0x3d122a12
  412ead:	mov    DWORD PTR [ebp-0x4c],0x27123f12
  412eb4:	jmp    0x412ee8
  412eb6:	xor    ecx,ebx
  412eb8:	mov    dl,BYTE PTR [ebp+ecx*1+0x32728d]
  412ebf:	xor    dl,0x71
  412ec2:	sub    dl,0xb
  412ec5:	mov    DWORD PTR [ebp-0x2c],ecx
  412ec8:	movsx  ecx,BYTE PTR [ecx+edi*1+0x3272dd]
  412ed0:	movzx  edx,dl
  412ed3:	cmp    ecx,edx
  412ed5:	jne    0x412ef2
  412ed7:	mov    ecx,DWORD PTR [ebp-0x34]
  412eda:	mov    edx,DWORD PTR [ebp-0x2c]
  412edd:	xor    ecx,ebx
  412edf:	lea    ecx,[ecx+edx*1+0x3272dd]
  412ee6:	xor    ecx,ebx
  412ee8:	cmp    ecx,0xf89c85bd
  412eee:	jne    0x412eb6
  412ef0:	jmp    0x412ef9
  412ef2:	mov    eax,DWORD PTR [ebp-0x8]
  412ef5:	xor    eax,ebx
  412ef7:	add    eax,esi
  412ef9:	mov    ecx,DWORD PTR [ebp-0x8]
  412efc:	xor    ecx,ebx
  412efe:	add    ecx,esi
  412f00:	cmp    ecx,eax
  412f02:	je     0x413075
  412f08:	mov    eax,DWORD PTR [edi+0x8]
  412f0b:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  412f12:	mov    DWORD PTR [ebp-0x2c],0xf89cc304
  412f19:	mov    DWORD PTR [ebp-0x38],0xf89cb5b5
  412f20:	mov    DWORD PTR [ebp-0x18],0xf89c85b1
  412f27:	mov    DWORD PTR [ebp-0xc],eax
  412f2a:	mov    eax,DWORD PTR [ebp+0x8]
  412f2d:	mov    ecx,DWORD PTR [ebp-0x18]
  412f30:	xor    ecx,ebx
  412f32:	add    ecx,esi
  412f34:	push   ecx
  412f35:	mov    ecx,DWORD PTR [ebp-0x38]
  412f38:	mov    eax,DWORD PTR [eax+0x1d8]
  412f3e:	xor    ecx,ebx
  412f40:	add    ecx,esi
  412f42:	push   ecx
  412f43:	mov    ecx,DWORD PTR [ebp-0x2c]
  412f46:	xor    ecx,ebx
  412f48:	add    ecx,esi
  412f4a:	push   ecx
  412f4b:	mov    ecx,DWORD PTR [ebp-0x4]
  412f4e:	xor    ecx,ebx
  412f50:	add    ecx,esi
  412f52:	push   ecx
  412f53:	call   DWORD PTR [eax+0x14]
  412f56:	mov    edi,eax
  412f58:	mov    eax,DWORD PTR [ebp+0x8]
  412f5b:	mov    ecx,DWORD PTR [ebp-0x18]
  412f5e:	mov    eax,DWORD PTR [eax+0x1d8]
  412f64:	xor    ecx,ebx
  412f66:	add    ecx,esi
  412f68:	push   ecx
  412f69:	mov    ecx,DWORD PTR [ebp-0x38]
  412f6c:	xor    ecx,ebx
  412f6e:	add    ecx,esi
  412f70:	push   ecx
  412f71:	mov    ecx,DWORD PTR [ebp-0x4]
  412f74:	push   DWORD PTR [ebp-0xc]
  412f77:	xor    ecx,ebx
  412f79:	add    ecx,esi
  412f7b:	push   ecx
  412f7c:	call   DWORD PTR [eax+0x14]
  412f7f:	mov    ecx,DWORD PTR [ebp-0x4]
  412f82:	xor    ecx,ebx
  412f84:	add    ecx,esi
  412f86:	mov    DWORD PTR [ebp-0x18],eax
  412f89:	cmp    ecx,edi
  412f8b:	je     0x413251
  412f91:	mov    ecx,DWORD PTR [ebp-0x4]
  412f94:	xor    ecx,ebx
  412f96:	add    ecx,esi
  412f98:	cmp    ecx,eax
  412f9a:	je     0x413251
  412fa0:	mov    DWORD PTR [ebp-0x2c],0xf89c85b0
  412fa7:	mov    DWORD PTR [ebp-0x3c],0xf89c85b3
  412fae:	mov    ecx,DWORD PTR [ebp-0x2c]
  412fb1:	xor    cl,0x96
  412fb4:	sub    cl,0x23
  412fb7:	mov    BYTE PTR [edi],cl
  412fb9:	mov    ecx,DWORD PTR [ebp-0x4]
  412fbc:	xor    cl,0x96
  412fbf:	sub    cl,0x23
  412fc2:	mov    BYTE PTR [edi+0x1],cl
  412fc5:	mov    ecx,DWORD PTR [ebp-0x3c]
  412fc8:	xor    cl,0x96
  412fcb:	sub    cl,0x23
  412fce:	mov    BYTE PTR [edi+0x2],cl
  412fd1:	and    DWORD PTR [ebp-0x98],0x0
  412fd8:	and    DWORD PTR [ebp-0xa4],0x0
  412fdf:	lea    ecx,[ebp-0xa4]
  412fe5:	push   ecx
  412fe6:	push   DWORD PTR [ebp-0xc]
  412fe9:	push   eax
  412fea:	lea    eax,[ebp-0x98]
  412ff0:	push   eax
  412ff1:	mov    eax,DWORD PTR [ebp-0x28]
  412ff4:	push   DWORD PTR [eax+0xc]
  412ff7:	mov    eax,DWORD PTR [ebp-0x20]
  412ffa:	add    eax,0x10
  412ffd:	push   eax
  412ffe:	push   edi
  412fff:	call   0x41241b
  413004:	mov    DWORD PTR [ebp-0x2c],eax
  413007:	mov    eax,DWORD PTR [ebp+0x8]
  41300a:	mov    ecx,DWORD PTR [ebp-0x48]
  41300d:	mov    eax,DWORD PTR [eax+0x1d8]
  413013:	xor    ecx,ebx
  413015:	add    ecx,esi
  413017:	push   ecx
  413018:	mov    ecx,DWORD PTR [ebp-0x4]
  41301b:	xor    ecx,ebx
  41301d:	add    ecx,esi
  41301f:	push   ecx
  413020:	push   edi
  413021:	call   DWORD PTR [eax+0x18]
  413024:	mov    eax,DWORD PTR [ebp-0x2c]
  413027:	add    eax,0xffcd8d23
  41302c:	xor    eax,ebx
  41302e:	cmp    eax,0xf89c85b5
  413033:	mov    eax,DWORD PTR [ebp+0x8]
  413036:	mov    eax,DWORD PTR [eax+0x1d8]
  41303c:	mov    ecx,DWORD PTR [ebp-0x48]
  41303f:	jne    0x413062
  413041:	xor    ecx,ebx
  413043:	add    ecx,esi
  413045:	push   ecx
  413046:	mov    ecx,DWORD PTR [ebp-0x4]
  413049:	xor    ecx,ebx
  41304b:	add    ecx,esi
  41304d:	push   ecx
  41304e:	push   DWORD PTR [ebp-0x20]
  413051:	call   DWORD PTR [eax+0x18]
  413054:	mov    eax,DWORD PTR [ebp-0x18]
  413057:	mov    DWORD PTR [ebp-0x20],eax
  41305a:	mov    eax,DWORD PTR [ebp-0xc]
  41305d:	mov    DWORD PTR [ebp-0x30],eax
  413060:	jmp    0x413075
  413062:	xor    ecx,ebx
  413064:	add    ecx,esi
  413066:	push   ecx
  413067:	mov    ecx,DWORD PTR [ebp-0x4]
  41306a:	xor    ecx,ebx
  41306c:	add    ecx,esi
  41306e:	push   ecx
  41306f:	push   DWORD PTR [ebp-0x18]
  413072:	call   DWORD PTR [eax+0x18]
  413075:	mov    eax,DWORD PTR [ebp-0x30]
  413078:	mov    DWORD PTR [ebp-0x24],eax
  41307b:	mov    eax,DWORD PTR [ebp-0x20]
  41307e:	mov    DWORD PTR [ebp-0x1c],0xf89c85b5
  413085:	mov    DWORD PTR [ebp-0x2c],eax
  413088:	mov    ecx,0xf89c85b2
  41308d:	mov    DWORD PTR [ebp-0x14],ecx
  413090:	mov    eax,DWORD PTR [ebp-0x1c]
  413093:	xor    eax,ebx
  413095:	add    eax,esi
  413097:	mov    DWORD PTR [ebp-0x4],eax
  41309a:	mov    eax,DWORD PTR [ebp-0x1c]
  41309d:	xor    eax,ebx
  41309f:	add    eax,esi
  4130a1:	mov    DWORD PTR [ebp-0xc],eax
  4130a4:	mov    DWORD PTR [ebp-0x38],0xf89c85d5
  4130ab:	mov    DWORD PTR [ebp-0x18],0xf89c85bc
  4130b2:	mov    eax,DWORD PTR [ebp-0x1c]
  4130b5:	mov    edx,DWORD PTR [ebp-0x24]
  4130b8:	xor    eax,ebx
  4130ba:	add    eax,esi
  4130bc:	cmp    edx,eax
  4130be:	je     0x4131ed
  4130c4:	jmp    0x4131c9
  4130c9:	mov    edx,DWORD PTR [ebp-0x4]
  4130cc:	mov    eax,DWORD PTR [ebp-0x24]
  4130cf:	mov    edi,DWORD PTR [ebp-0x38]
  4130d2:	sub    eax,edx
  4130d4:	xor    edi,ebx
  4130d6:	xor    edx,edx
  4130d8:	add    edi,esi
  4130da:	div    edi
  4130dc:	mov    DWORD PTR [ebp-0xc],eax
  4130df:	mov    eax,DWORD PTR [ebp-0x18]
  4130e2:	mov    edx,DWORD PTR [ebp-0xc]
  4130e5:	xor    eax,ebx
  4130e7:	add    eax,esi
  4130e9:	cmp    edx,eax
  4130eb:	jbe    0x4130f7
  4130ed:	mov    eax,DWORD PTR [ebp-0x18]
  4130f0:	xor    eax,ebx
  4130f2:	add    eax,esi
  4130f4:	mov    DWORD PTR [ebp-0xc],eax
  4130f7:	mov    eax,DWORD PTR [ebp-0x38]
  4130fa:	mov    edx,DWORD PTR [ebp-0xc]
  4130fd:	xor    eax,ebx
  4130ff:	add    eax,esi
  413101:	imul   eax,edx
  413104:	mov    DWORD PTR [ebp-0xc],eax
  413107:	mov    eax,DWORD PTR [ebp-0x1c]
  41310a:	mov    edx,DWORD PTR [ebp-0xc]
  41310d:	xor    eax,ebx
  41310f:	add    eax,esi
  413111:	cmp    edx,eax
  413113:	je     0x4131b7
  413119:	mov    eax,DWORD PTR [ebp-0xc]
  41311c:	mov    DWORD PTR [ebp-0xc],eax
  41311f:	mov    eax,DWORD PTR [ebp-0x4]
  413122:	add    eax,DWORD PTR [ebp-0x2c]
  413125:	mov    DWORD PTR [ebp-0x44],0xf89c85b5
  41312c:	mov    DWORD PTR [ebp-0x40],ecx
  41312f:	mov    DWORD PTR [ebp-0x3c],0xf89c85b3
  413136:	mov    DWORD PTR [ebp-0x28],eax
  413139:	mov    DWORD PTR [ebp-0x88],0xf89c85b0
  413143:	mov    DWORD PTR [ebp-0x3c],ecx
  413146:	mov    eax,DWORD PTR [ebp-0x44]
  413149:	xor    eax,ebx
  41314b:	add    eax,esi
  41314d:	jmp    0x41317a
  41314f:	mov    eax,DWORD PTR [ebp-0x3c]
  413152:	mov    edx,DWORD PTR [ebp-0x10]
  413155:	xor    eax,ebx
  413157:	add    eax,esi
  413159:	imul   eax,edx
  41315c:	mov    edx,DWORD PTR [ebp-0x28]
  41315f:	mov    BYTE PTR [eax+edx*1],0x0
  413163:	mov    eax,DWORD PTR [ebp-0x88]
  413169:	mov    edx,DWORD PTR [ebp-0x40]
  41316c:	xor    eax,ebx
  41316e:	xor    edx,ebx
  413170:	add    eax,esi
  413172:	add    edx,esi
  413174:	imul   eax,edx
  413177:	add    eax,DWORD PTR [ebp-0x10]
  41317a:	mov    DWORD PTR [ebp-0x10],eax
  41317d:	mov    eax,DWORD PTR [ebp-0x10]
  413180:	mov    edx,DWORD PTR [ebp-0xc]
  413183:	cmp    edx,eax
  413185:	jb     0x41314f
  413187:	mov    eax,DWORD PTR [ebp-0x40]
  41318a:	mov    edx,DWORD PTR [ebp-0xc]
  41318d:	xor    eax,ebx
  41318f:	add    eax,esi
  413191:	imul   eax,edx
  413194:	mov    edx,DWORD PTR [ebp-0x44]
  413197:	xor    edx,ebx
  413199:	add    edx,esi
  41319b:	or     eax,edx
  41319d:	mov    edx,DWORD PTR [ebp-0x14]
  4131a0:	xor    edx,ebx
  4131a2:	add    eax,edx
  4131a4:	mov    edx,DWORD PTR [ebp-0x14]
  4131a7:	xor    edx,ebx
  4131a9:	add    eax,edx
  4131ab:	mov    edx,DWORD PTR [ebp-0x4]
  4131ae:	lea    eax,[eax+edx*1+0x64e5ba]
  4131b5:	jmp    0x4131c6
  4131b7:	mov    eax,DWORD PTR [ebp-0x14]
  4131ba:	mov    edx,DWORD PTR [ebp-0x4]
  4131bd:	xor    eax,ebx
  4131bf:	lea    eax,[eax+edx*1+0x3272dd]
  4131c6:	mov    DWORD PTR [ebp-0x4],eax
  4131c9:	mov    eax,DWORD PTR [ebp-0x14]
  4131cc:	xor    eax,ebx
  4131ce:	mov    edx,0xffcd8d23
  4131d3:	sub    edx,eax
  4131d5:	add    edx,DWORD PTR [ebp-0x24]
  4131d8:	mov    eax,DWORD PTR [ebp-0x14]
  4131db:	mov    edi,DWORD PTR [ebp-0x4]
  4131de:	xor    eax,ebx
  4131e0:	add    eax,esi
  4131e2:	imul   eax,edi
  4131e5:	cmp    eax,edx
  4131e7:	jbe    0x4130c9
  4131ed:	push   DWORD PTR [ebp+0x8]
  4131f0:	mov    eax,DWORD PTR [ebp+0x8]
  4131f3:	push   DWORD PTR [eax+0x1cc]
  4131f9:	lea    eax,[ebp-0xa0]
  4131ff:	push   eax
  413200:	mov    eax,DWORD PTR [ebp+0x8]
  413203:	mov    eax,DWORD PTR [eax+0x1c4]
  413209:	push   DWORD PTR [eax]
  41320b:	mov    eax,DWORD PTR [ebp+0x8]
  41320e:	mov    eax,DWORD PTR [eax+0x1c0]
  413214:	push   DWORD PTR [eax]
  413216:	push   DWORD PTR [ebp-0x30]
  413219:	push   DWORD PTR [ebp-0x20]
  41321c:	call   0x413cf2
  413221:	mov    DWORD PTR [ebp-0x2c],eax
  413224:	mov    eax,DWORD PTR [ebp-0x8]
  413227:	mov    ecx,DWORD PTR [ebp-0x20]
  41322a:	xor    eax,ebx
  41322c:	add    eax,esi
  41322e:	cmp    eax,ecx
  413230:	je     0x413251
  413232:	mov    eax,DWORD PTR [ebp+0x8]
  413235:	mov    ecx,DWORD PTR [ebp-0x48]
  413238:	mov    eax,DWORD PTR [eax+0x1d8]
  41323e:	xor    ecx,ebx
  413240:	add    ecx,esi
  413242:	push   ecx
  413243:	mov    ecx,DWORD PTR [ebp-0x8]
  413246:	xor    ecx,ebx
  413248:	add    ecx,esi
  41324a:	push   ecx
  41324b:	push   DWORD PTR [ebp-0x20]
  41324e:	call   DWORD PTR [eax+0x18]
  413251:	pop    edi
  413252:	pop    esi
  413253:	pop    ebx
  413254:	leave  
  413255:	ret    0x4
  413258:	push   ebp
  413259:	mov    ebp,esp
  41325b:	push   ecx
  41325c:	push   ecx
  41325d:	lea    eax,[ebp-0x8]
  413260:	mov    DWORD PTR [ebp-0x4],eax
  413263:	push   esi
  413264:	mov    esi,DWORD PTR [ebp-0x4]
  413267:	mov    eax,0xf881ba0f
  41326c:	mov    DWORD PTR [esi],eax
  41326e:	mov    esi,DWORD PTR [ebp-0x8]
  413271:	cmp    esi,eax
  413273:	pop    esi
  413274:	jne    0x41327e
  413276:	mov    BYTE PTR [ecx+0xa],0x7a
  41327a:	mov    BYTE PTR [edx+0x8],0x2f
  41327e:	mov    BYTE PTR [edx+0xa],0x7a
  413282:	mov    BYTE PTR [ecx+0x2],0x8
  413286:	leave  
  413287:	ret    
  413288:	push   ebp
  413289:	mov    ebp,esp
  41328b:	push   ecx
  41328c:	push   ecx
  41328d:	lea    eax,[ebp-0x8]
  413290:	mov    DWORD PTR [ebp-0x4],eax
  413293:	mov    edx,DWORD PTR [ebp-0x4]
  413296:	mov    eax,0xf88b0beb
  41329b:	mov    DWORD PTR [edx],eax
  41329d:	mov    edx,DWORD PTR [ebp-0x8]
  4132a0:	cmp    edx,eax
  4132a2:	jne    0x4132b3
  4132a4:	mov    eax,DWORD PTR [ebp+0x8]
  4132a7:	mov    BYTE PTR [ecx+0x9],0xe
  4132ab:	mov    BYTE PTR [eax+0x7],0x47
  4132af:	mov    BYTE PTR [ecx+0x6],0xf
  4132b3:	mov    BYTE PTR [ecx+0x3],0x1e
  4132b7:	leave  
  4132b8:	ret    0x4
  4132bb:	push   ebp
  4132bc:	mov    ebp,esp
  4132be:	push   ecx
  4132bf:	push   ecx
  4132c0:	lea    eax,[ebp-0x8]
  4132c3:	mov    DWORD PTR [ebp-0x4],eax
  4132c6:	mov    edx,DWORD PTR [ebp-0x4]
  4132c9:	mov    eax,0x7e0da0f
  4132ce:	mov    DWORD PTR [edx],eax
  4132d0:	mov    edx,DWORD PTR [ebp-0x8]
  4132d3:	cmp    edx,eax
  4132d5:	jne    0x4132db
  4132d7:	mov    BYTE PTR [ecx+0x7],0x47
  4132db:	mov    eax,DWORD PTR [ebp+0x8]
  4132de:	mov    BYTE PTR [ecx+0x1],0x5
  4132e2:	mov    BYTE PTR [eax+0x9],0x2e
  4132e6:	leave  
  4132e7:	ret    0x4
  4132ea:	push   ebp
  4132eb:	mov    ebp,esp
  4132ed:	push   ecx
  4132ee:	push   ecx
  4132ef:	lea    eax,[ebp-0x8]
  4132f2:	mov    DWORD PTR [ebp-0x4],eax
  4132f5:	push   esi
  4132f6:	mov    esi,DWORD PTR [ebp-0x4]
  4132f9:	mov    eax,0x7060e3c
  4132fe:	mov    DWORD PTR [esi],eax
  413300:	mov    esi,DWORD PTR [ebp-0x8]
  413303:	cmp    esi,eax
  413305:	pop    esi
  413306:	jne    0x413312
  413308:	mov    BYTE PTR [edx+0x4],0xb
  41330c:	mov    WORD PTR [ecx+0x3],0xb1e
  413312:	mov    BYTE PTR [edx],0x3f
  413315:	leave  
  413316:	ret    
  413317:	push   ebp
  413318:	mov    ebp,esp
  41331a:	push   ecx
  41331b:	push   ecx
  41331c:	lea    eax,[ebp-0x8]
  41331f:	mov    DWORD PTR [ebp-0x4],eax
  413322:	mov    edx,DWORD PTR [ebp-0x4]
  413325:	mov    eax,0xf8870b3f
  41332a:	mov    DWORD PTR [edx],eax
  41332c:	mov    edx,DWORD PTR [ebp-0x8]
  41332f:	cmp    edx,eax
  413331:	jne    0x41333e
  413333:	mov    eax,DWORD PTR [ebp+0x8]
  413336:	mov    BYTE PTR [ecx+0x8],0xf
  41333a:	mov    BYTE PTR [eax+0x1],0x5
  41333e:	mov    BYTE PTR [ecx+0x5],0xf3
  413342:	leave  
  413343:	ret    0x4
  413346:	push   esi
  413347:	mov    ecx,edi
  413349:	call   0x413317
  41334e:	mov    edx,edi
  413350:	mov    ecx,esi
  413352:	mov    BYTE PTR [esi],0x1f
  413355:	call   0x4132ea
  41335a:	push   esi
  41335b:	mov    ecx,edi
  41335d:	mov    BYTE PTR [esi+0x5],0xf3
  413361:	call   0x4132bb
  413366:	push   esi
  413367:	mov    BYTE PTR [esi+0x6],0xf
  41336b:	call   0x413288
  413370:	mov    BYTE PTR [esi+0x2],0x8
  413374:	mov    edx,esi
  413376:	jmp    0x413258
  41337b:	push   ebp
  41337c:	mov    ebp,esp
  41337e:	push   ecx
  41337f:	mov    ecx,DWORD PTR [edx+0x194]
  413385:	push   esi
  413386:	mov    esi,DWORD PTR [ebp+0x8]
  413389:	mov    esi,DWORD PTR [esi]
  41338b:	mov    DWORD PTR [ecx],esi
  41338d:	mov    ecx,DWORD PTR [edx+0x194]
  413393:	mov    ecx,DWORD PTR [ecx]
  413395:	mov    esi,DWORD PTR [edx+0x190]
  41339b:	mov    DWORD PTR [esi],ecx
  41339d:	mov    eax,DWORD PTR [edx+0x194]
  4133a3:	mov    ecx,DWORD PTR [eax]
  4133a5:	mov    ecx,DWORD PTR [ecx+0x3c]
  4133a8:	add    ecx,DWORD PTR [eax]
  4133aa:	mov    DWORD PTR [ebp-0x4],0xf89ca5b5
  4133b1:	mov    eax,DWORD PTR [ebp-0x4]
  4133b4:	movzx  ecx,WORD PTR [ecx+0x16]
  4133b8:	xor    eax,0x7510896
  4133bd:	add    eax,0x3272dd
  4133c2:	pop    esi
  4133c3:	test   ecx,eax
  4133c5:	je     0x4133d3
  4133c7:	mov    eax,DWORD PTR [edx+0x1c8]
  4133cd:	mov    DWORD PTR [eax],0xf89c85b2
  4133d3:	leave  
  4133d4:	ret    0x4
  4133d7:	push   ebp
  4133d8:	mov    ebp,esp
  4133da:	sub    esp,0x70
  4133dd:	and    DWORD PTR [ebp-0x20],0x0
  4133e1:	mov    DWORD PTR [ebp-0x18],0xf89cb5b5
  4133e8:	mov    DWORD PTR [ebp-0x1c],0xf89c85f5
  4133ef:	mov    DWORD PTR [ebp-0x2c],0xf89c85b1
  4133f6:	mov    DWORD PTR [ebp-0x14],0xf89c85b3
  4133fd:	mov    DWORD PTR [ebp-0x2c],0xf89f05b5
  413404:	mov    eax,DWORD PTR [ebp+0x20]
  413407:	mov    eax,DWORD PTR [eax+0x194]
  41340d:	mov    DWORD PTR [ebp-0xc],eax
  413410:	mov    eax,DWORD PTR [ebp+0x20]
  413413:	push   ebx
  413414:	push   esi
  413415:	mov    esi,DWORD PTR [eax+0x190]
  41341b:	mov    eax,DWORD PTR [ebp+0x20]
  41341e:	mov    eax,DWORD PTR [eax+0x18c]
  413424:	mov    DWORD PTR [ebp-0x8],eax
  413427:	mov    eax,DWORD PTR [eax]
  413429:	push   edi
  41342a:	mov    DWORD PTR [ebp-0x4],esi
  41342d:	test   eax,eax
  41342f:	jne    0x41343c
  413431:	push   DWORD PTR [ebp+0x1c]
  413434:	mov    edx,DWORD PTR [ebp+0x20]
  413437:	call   0x41337b
  41343c:	mov    eax,DWORD PTR [esi]
  41343e:	mov    ebx,DWORD PTR [esi]
  413440:	add    ebx,DWORD PTR [eax+0x3c]
  413443:	mov    eax,DWORD PTR [ebp+0xc]
  413446:	mov    ecx,DWORD PTR [ebp-0x8]
  413449:	mov    ecx,DWORD PTR [ecx]
  41344b:	mov    esi,0x7510896
  413450:	xor    eax,esi
  413452:	mov    edi,0x3272dd
  413457:	add    eax,edi
  413459:	cmp    eax,ecx
  41345b:	jne    0x413693
  413461:	mov    eax,DWORD PTR [ebp-0xc]
  413464:	mov    eax,DWORD PTR [eax]
  413466:	mov    DWORD PTR [ebp-0x10],eax
  413469:	mov    eax,DWORD PTR [ebx+0x50]
  41346c:	mov    DWORD PTR [ebp-0x68],eax
  41346f:	mov    eax,DWORD PTR [ebp-0x18]
  413472:	xor    eax,esi
  413474:	add    eax,edi
  413476:	mov    DWORD PTR [ebp-0x64],eax
  413479:	mov    eax,DWORD PTR [ebp-0x14]
  41347c:	and    DWORD PTR [ebp-0x6c],0x0
  413480:	xor    eax,esi
  413482:	add    eax,edi
  413484:	mov    DWORD PTR [ebp-0x60],eax
  413487:	lea    eax,[ebp-0x70]
  41348a:	push   eax
  41348b:	mov    eax,DWORD PTR [ebp+0x8]
  41348e:	xor    eax,esi
  413490:	add    eax,edi
  413492:	push   eax
  413493:	mov    eax,DWORD PTR [ebp+0x20]
  413496:	add    eax,0xaa
  41349b:	push   eax
  41349c:	mov    eax,DWORD PTR [ebp+0x20]
  41349f:	mov    eax,DWORD PTR [eax+0x198]
  4134a5:	mov    DWORD PTR [ebp-0x70],0x4
  4134ac:	push   DWORD PTR [eax]
  4134ae:	mov    eax,DWORD PTR [ebp+0x10]
  4134b1:	call   eax
  4134b3:	mov    ecx,DWORD PTR [ebp-0xc]
  4134b6:	mov    ecx,DWORD PTR [ecx]
  4134b8:	mov    edx,DWORD PTR [ebp-0x8]
  4134bb:	mov    DWORD PTR [ebp-0x6c],eax
  4134be:	mov    DWORD PTR [ebp+0x1c],eax
  4134c1:	mov    DWORD PTR [edx],ecx
  4134c3:	mov    ecx,DWORD PTR [ebp-0x4]
  4134c6:	mov    DWORD PTR [ecx],eax
  4134c8:	mov    eax,DWORD PTR [ebx+0x50]
  4134cb:	mov    DWORD PTR [ebp-0x68],eax
  4134ce:	mov    eax,DWORD PTR [ebp-0x1c]
  4134d1:	xor    eax,esi
  4134d3:	add    eax,edi
  4134d5:	mov    DWORD PTR [ebp-0x64],eax
  4134d8:	lea    eax,[ebp-0x20]
  4134db:	mov    DWORD PTR [ebp-0x60],eax
  4134de:	lea    eax,[ebp-0x70]
  4134e1:	push   eax
  4134e2:	mov    eax,DWORD PTR [ebp+0x8]
  4134e5:	xor    eax,esi
  4134e7:	add    eax,edi
  4134e9:	push   eax
  4134ea:	mov    eax,DWORD PTR [ebp+0x20]
  4134ed:	add    eax,0xee
  4134f2:	push   eax
  4134f3:	mov    eax,DWORD PTR [ebp+0x20]
  4134f6:	mov    eax,DWORD PTR [eax+0x198]
  4134fc:	mov    DWORD PTR [ebp-0x70],0x4
  413503:	push   DWORD PTR [eax]
  413505:	mov    eax,DWORD PTR [ebp+0x10]
  413508:	call   eax
  41350a:	test   eax,eax
  41350c:	je     0x413531
  41350e:	and    DWORD PTR [ebp+0xc],0x0
  413512:	cmp    DWORD PTR [ebx+0x50],0x0
  413516:	jbe    0x413531
  413518:	mov    eax,DWORD PTR [ebp+0x1c]
  41351b:	mov    ecx,DWORD PTR [ebp-0x10]
  41351e:	sub    ecx,eax
  413520:	mov    dl,BYTE PTR [ecx+eax*1]
  413523:	inc    DWORD PTR [ebp+0xc]
  413526:	mov    BYTE PTR [eax],dl
  413528:	mov    edx,DWORD PTR [ebp+0xc]
  41352b:	inc    eax
  41352c:	cmp    edx,DWORD PTR [ebx+0x50]
  41352f:	jb     0x413520
  413531:	mov    edx,DWORD PTR [ebp+0x1c]
  413534:	mov    ecx,DWORD PTR [edx+0x3c]
  413537:	add    ecx,edx
  413539:	mov    eax,DWORD PTR [ecx+0xa0]
  41353f:	mov    ebx,DWORD PTR [ecx+0x28]
  413542:	add    eax,edx
  413544:	sub    edx,DWORD PTR [ebp-0x10]
  413547:	add    ebx,DWORD PTR [ebp+0x1c]
  41354a:	mov    DWORD PTR [ebp+0xc],edx
  41354d:	mov    DWORD PTR [ebp-0x2c],ecx
  413550:	mov    DWORD PTR [ebp-0x14],ebx
  413553:	mov    DWORD PTR [ebp-0x8],0x0
  41355a:	jmp    0x4135d6
  41355c:	add    edx,0xfffffff8
  41355f:	shr    edx,1
  413561:	mov    DWORD PTR [ebp-0x18],edx
  413564:	je     0x4135c2
  413566:	lea    edx,[eax+0x8]
  413569:	mov    DWORD PTR [ebp-0x4],edx
  41356c:	mov    edx,DWORD PTR [ebp-0x18]
  41356f:	mov    DWORD PTR [ebp-0x18],edx
  413572:	mov    edx,DWORD PTR [ebp-0x4]
  413575:	movzx  edx,WORD PTR [edx]
  413578:	mov    DWORD PTR [ebp-0x24],edx
  41357b:	and    edx,0xfff
  413581:	mov    DWORD PTR [ebp-0x28],edx
  413584:	mov    edx,DWORD PTR [ebp-0x24]
  413587:	shr    edx,0xc
  41358a:	add    edx,0xffcd8d23
  413590:	xor    edx,esi
  413592:	cmp    edx,0xf89c85b0
  413598:	jne    0x4135b9
  41359a:	mov    edx,DWORD PTR [ebp-0x28]
  41359d:	add    edx,DWORD PTR [ebp+0x1c]
  4135a0:	mov    ebx,DWORD PTR [eax]
  4135a2:	cmp    DWORD PTR [ebx+edx*1],0x0
  4135a6:	je     0x4135b6
  4135a8:	mov    ecx,DWORD PTR [ebp+0xc]
  4135ab:	add    ecx,DWORD PTR [ebx+edx*1]
  4135ae:	mov    ebx,DWORD PTR [eax]
  4135b0:	mov    DWORD PTR [edx+ebx*1],ecx
  4135b3:	mov    ecx,DWORD PTR [ebp-0x2c]
  4135b6:	mov    ebx,DWORD PTR [ebp-0x14]
  4135b9:	add    DWORD PTR [ebp-0x4],0x2
  4135bd:	dec    DWORD PTR [ebp-0x18]
  4135c0:	jne    0x413572
  4135c2:	mov    edx,DWORD PTR [ebp-0xc]
  4135c5:	add    DWORD PTR [ebp-0x8],edx
  4135c8:	mov    edx,DWORD PTR [ebp-0x8]
  4135cb:	cmp    edx,DWORD PTR [ecx+0xa4]
  4135d1:	jae    0x4135e4
  4135d3:	add    eax,DWORD PTR [ebp-0xc]
  4135d6:	mov    edx,DWORD PTR [eax+0x4]
  4135d9:	mov    DWORD PTR [ebp-0xc],edx
  4135dc:	test   edx,edx
  4135de:	jne    0x41355c
  4135e4:	mov    eax,DWORD PTR [ebp-0x10]
  4135e7:	mov    DWORD PTR [ebp-0x6c],eax
  4135ea:	mov    DWORD PTR [ebp-0x70],0x4
  4135f1:	mov    eax,DWORD PTR [ecx+0x50]
  4135f4:	mov    DWORD PTR [ebp-0x68],eax
  4135f7:	mov    eax,DWORD PTR [ebp-0x1c]
  4135fa:	xor    eax,esi
  4135fc:	add    eax,edi
  4135fe:	mov    DWORD PTR [ebp-0x64],eax
  413601:	lea    eax,[ebp-0x20]
  413604:	mov    DWORD PTR [ebp-0x60],eax
  413607:	lea    eax,[ebp-0x70]
  41360a:	push   eax
  41360b:	mov    eax,DWORD PTR [ebp+0x8]
  41360e:	xor    eax,esi
  413610:	add    eax,edi
  413612:	push   eax
  413613:	mov    eax,DWORD PTR [ebp+0x20]
  413616:	add    eax,0xee
  41361b:	push   eax
  41361c:	mov    eax,DWORD PTR [ebp+0x20]
  41361f:	mov    eax,DWORD PTR [eax+0x198]
  413625:	push   DWORD PTR [eax]
  413627:	mov    eax,DWORD PTR [ebp+0x10]
  41362a:	call   eax
  41362c:	mov    eax,DWORD PTR [ebp+0x20]
  41362f:	mov    eax,DWORD PTR [eax+0x180]
  413635:	add    eax,DWORD PTR [ebp+0xc]
  413638:	mov    ecx,DWORD PTR [ebp+0xc]
  41363b:	push   DWORD PTR [ebp+0x18]
  41363e:	mov    DWORD PTR [eax],ecx
  413640:	push   DWORD PTR [ebp+0x14]
  413643:	push   DWORD PTR [ebp+0x1c]
  413646:	call   ebx
  413648:	mov    eax,DWORD PTR [ebp+0xc]
  41364b:	add    eax,DWORD PTR [ebp+0x20]
  41364e:	lea    ecx,[ebp+0x4]
  413651:	mov    DWORD PTR [ebp+0x20],eax
  413654:	mov    eax,DWORD PTR [ebp+0x20]
  413657:	mov    eax,DWORD PTR [ebp+0x20]
  41365a:	mov    edx,DWORD PTR [eax+0x190]
  413660:	mov    eax,DWORD PTR [ebp+0x20]
  413663:	mov    eax,DWORD PTR [eax+0x18c]
  413669:	mov    esi,DWORD PTR [eax]
  41366b:	cmp    DWORD PTR [ecx],esi
  41366d:	jb     0x41368e
  41366f:	mov    esi,DWORD PTR [edx]
  413671:	mov    edi,DWORD PTR [edx]
  413673:	mov    esi,DWORD PTR [esi+0x3c]
  413676:	lea    esi,[edi+esi*1+0x50]
  41367a:	mov    edi,DWORD PTR [eax]
  41367c:	add    edi,DWORD PTR [esi]
  41367e:	cmp    DWORD PTR [ecx],edi
  413680:	jae    0x41368e
  413682:	mov    esi,DWORD PTR [eax]
  413684:	mov    eax,DWORD PTR [ecx]
  413686:	mov    edx,DWORD PTR [edx]
  413688:	sub    eax,esi
  41368a:	add    edx,eax
  41368c:	mov    DWORD PTR [ecx],edx
  41368e:	mov    eax,DWORD PTR [ebp+0xc]
  413691:	jmp    0x4136d4
  413693:	push   DWORD PTR [ebp+0x20]
  413696:	call   0x412804
  41369b:	mov    eax,DWORD PTR [ebp+0x20]
  41369e:	mov    eax,DWORD PTR [eax+0x1c8]
  4136a4:	mov    eax,DWORD PTR [eax]
  4136a6:	xor    eax,esi
  4136a8:	add    eax,edi
  4136aa:	mov    eax,DWORD PTR [ebp+0x20]
  4136ad:	jne    0x4136c5
  4136af:	mov    ecx,DWORD PTR [ebp+0x20]
  4136b2:	mov    ecx,DWORD PTR [ecx+0x1cc]
  4136b8:	push   DWORD PTR [ecx]
  4136ba:	mov    eax,DWORD PTR [eax+0x1d8]
  4136c0:	call   DWORD PTR [eax+0x28]
  4136c3:	jmp    0x4136d2
  4136c5:	mov    eax,DWORD PTR [eax+0x17c]
  4136cb:	mov    ecx,DWORD PTR [eax]
  4136cd:	lea    eax,[ebp+0x4]
  4136d0:	add    DWORD PTR [eax],ecx
  4136d2:	xor    eax,eax
  4136d4:	pop    edi
  4136d5:	pop    esi
  4136d6:	pop    ebx
  4136d7:	leave  
  4136d8:	ret    0x1c
  4136db:	push   ebp
  4136dc:	mov    ebp,esp
  4136de:	sub    esp,0x1c
  4136e1:	push   esi
  4136e2:	mov    esi,eax
  4136e4:	mov    eax,DWORD PTR [ecx+0x190]
  4136ea:	cmp    DWORD PTR [eax],0x0
  4136ed:	je     0x4137fd
  4136f3:	test   edx,edx
  4136f5:	je     0x4137fd
  4136fb:	test   esi,esi
  4136fd:	je     0x4137fd
  413703:	mov    eax,DWORD PTR [esi+0x88]
  413709:	test   eax,eax
  41370b:	je     0x4137f8
  413711:	cmp    DWORD PTR [esi+0x8c],0x10
  413718:	je     0x4137f8
  41371e:	cmp    DWORD PTR [esi+0x34],edx
  413721:	je     0x4137f8
  413727:	mov    esi,DWORD PTR [ecx+0x18c]
  41372d:	and    DWORD PTR [ebp-0x10],0x0
  413731:	mov    ecx,edx
  413733:	sub    ecx,DWORD PTR [esi]
  413735:	add    eax,edx
  413737:	movzx  edx,WORD PTR [eax+0xc]
  41373b:	mov    DWORD PTR [ebp-0x1c],ecx
  41373e:	movzx  ecx,WORD PTR [eax+0xe]
  413742:	add    ecx,edx
  413744:	je     0x4137f8
  41374a:	lea    ecx,[eax+0x14]
  41374d:	push   ebx
  41374e:	mov    DWORD PTR [ebp-0x18],ecx
  413751:	mov    esi,0x7fffffff
  413756:	push   edi
  413757:	test   DWORD PTR [ecx],esi
  413759:	je     0x4137da
  41375b:	mov    edx,DWORD PTR [ecx]
  41375d:	and    DWORD PTR [ebp-0xc],0x0
  413761:	and    edx,esi
  413763:	add    edx,eax
  413765:	movzx  edi,WORD PTR [edx+0xe]
  413769:	movzx  ebx,WORD PTR [edx+0xc]
  41376d:	add    edi,ebx
  41376f:	je     0x4137da
  413771:	lea    ecx,[edx+0x14]
  413774:	mov    DWORD PTR [ebp-0x14],ecx
  413777:	test   DWORD PTR [ecx],esi
  413779:	je     0x4137bc
  41377b:	mov    ecx,DWORD PTR [ecx]
  41377d:	and    DWORD PTR [ebp-0x8],0x0
  413781:	and    ecx,esi
  413783:	add    ecx,eax
  413785:	movzx  edi,WORD PTR [ecx+0xe]
  413789:	movzx  ebx,WORD PTR [ecx+0xc]
  41378d:	add    edi,ebx
  41378f:	je     0x4137bc
  413791:	lea    edi,[ecx+0x14]
  413794:	mov    DWORD PTR [ebp-0x4],edi
  413797:	mov    edi,DWORD PTR [ebp-0x4]
  41379a:	mov    edi,DWORD PTR [edi]
  41379c:	test   edi,edi
  41379e:	je     0x4137a6
  4137a0:	mov    ebx,DWORD PTR [ebp-0x1c]
  4137a3:	add    DWORD PTR [edi+eax*1],ebx
  4137a6:	movzx  edi,WORD PTR [ecx+0xe]
  4137aa:	movzx  ebx,WORD PTR [ecx+0xc]
  4137ae:	inc    DWORD PTR [ebp-0x8]
  4137b1:	add    DWORD PTR [ebp-0x4],0x8
  4137b5:	add    edi,ebx
  4137b7:	cmp    DWORD PTR [ebp-0x8],edi
  4137ba:	jb     0x413797
  4137bc:	movzx  edi,WORD PTR [edx+0xe]
  4137c0:	movzx  ebx,WORD PTR [edx+0xc]
  4137c4:	mov    ecx,DWORD PTR [ebp-0x14]
  4137c7:	inc    DWORD PTR [ebp-0xc]
  4137ca:	add    ecx,0x8
  4137cd:	add    edi,ebx
  4137cf:	mov    DWORD PTR [ebp-0x14],ecx
  4137d2:	cmp    DWORD PTR [ebp-0xc],edi
  4137d5:	jb     0x413777
  4137d7:	mov    ecx,DWORD PTR [ebp-0x18]
  4137da:	movzx  edx,WORD PTR [eax+0xe]
  4137de:	movzx  edi,WORD PTR [eax+0xc]
  4137e2:	inc    DWORD PTR [ebp-0x10]
  4137e5:	add    ecx,0x8
  4137e8:	add    edx,edi
  4137ea:	mov    DWORD PTR [ebp-0x18],ecx
  4137ed:	cmp    DWORD PTR [ebp-0x10],edx
  4137f0:	jb     0x413757
  4137f6:	pop    edi
  4137f7:	pop    ebx
  4137f8:	xor    eax,eax
  4137fa:	inc    eax
  4137fb:	jmp    0x4137ff
  4137fd:	xor    eax,eax
  4137ff:	pop    esi
  413800:	leave  
  413801:	ret    
  413802:	push   ebp
  413803:	mov    ebp,esp
  413805:	mov    ecx,DWORD PTR [ecx+0x190]
  41380b:	mov    eax,DWORD PTR [ebp+0xc]
  41380e:	sub    esp,0x10
  413811:	push   ebx
  413812:	xor    ebx,ebx
  413814:	push   esi
  413815:	push   edi
  413816:	cmp    DWORD PTR [ecx],ebx
  413818:	je     0x4138a0
  41381e:	cmp    eax,ebx
  413820:	je     0x4138a0
  413822:	cmp    DWORD PTR [eax+0x78],ebx
  413825:	jne    0x41382c
  413827:	xor    eax,eax
  413829:	inc    eax
  41382a:	jmp    0x4138a2
  41382c:	mov    eax,DWORD PTR [eax+0x78]
  41382f:	add    eax,DWORD PTR [ebp+0x8]
  413832:	mov    ecx,DWORD PTR [eax+0x1c]
  413835:	mov    edx,DWORD PTR [eax+0x24]
  413838:	mov    esi,DWORD PTR [eax+0x14]
  41383b:	mov    edi,DWORD PTR [eax+0x18]
  41383e:	add    ecx,DWORD PTR [ebp+0x8]
  413841:	add    edx,DWORD PTR [ebp+0x8]
  413844:	mov    DWORD PTR [ebp-0x4],esi
  413847:	cmp    esi,edi
  413849:	ja     0x41384e
  41384b:	mov    DWORD PTR [ebp-0x4],edi
  41384e:	mov    DWORD PTR [ebp-0x8],ebx
  413851:	cmp    DWORD PTR [ebp-0x4],ebx
  413854:	jbe    0x413827
  413856:	cmp    ebx,DWORD PTR [eax+0x14]
  413859:	jae    0x413861
  41385b:	movzx  esi,WORD PTR [edx+ebx*2]
  41385f:	jmp    0x413863
  413861:	mov    esi,ebx
  413863:	lea    esi,[ecx+esi*4]
  413866:	mov    edi,DWORD PTR [esi]
  413868:	test   edi,edi
  41386a:	je     0x413895
  41386c:	add    edi,DWORD PTR [ebp+0x8]
  41386f:	mov    DWORD PTR [ebp-0x10],edi
  413872:	cmp    edi,eax
  413874:	jbe    0x413886
  413876:	mov    ebx,DWORD PTR [ebp+0xc]
  413879:	mov    ebx,DWORD PTR [ebx+0x7c]
  41387c:	add    ebx,eax
  41387e:	cmp    edi,ebx
  413880:	jae    0x413886
  413882:	mov    esi,DWORD PTR [esi]
  413884:	jmp    0x41388e
  413886:	sub    edi,DWORD PTR [ebp+0x8]
  413889:	mov    DWORD PTR [esi],edi
  41388b:	mov    esi,DWORD PTR [ebp-0x10]
  41388e:	test   esi,esi
  413890:	je     0x4138a0
  413892:	mov    ebx,DWORD PTR [ebp-0x8]
  413895:	inc    ebx
  413896:	mov    DWORD PTR [ebp-0x8],ebx
  413899:	cmp    ebx,DWORD PTR [ebp-0x4]
  41389c:	jb     0x413856
  41389e:	jmp    0x413827
  4138a0:	xor    eax,eax
  4138a2:	pop    edi
  4138a3:	pop    esi
  4138a4:	pop    ebx
  4138a5:	leave  
  4138a6:	ret    0x8
  4138a9:	push   ebp
  4138aa:	mov    ebp,esp
  4138ac:	sub    esp,0x2c
  4138af:	mov    edx,0xf89c85b5
  4138b4:	mov    DWORD PTR [ebp-0x4],edx
  4138b7:	mov    DWORD PTR [ebp-0x8],0xf89c85b2
  4138be:	mov    eax,DWORD PTR [ebp-0x4]
  4138c1:	mov    ecx,DWORD PTR [ebp-0x4]
  4138c4:	mov    ecx,DWORD PTR [ebp-0x4]
  4138c7:	mov    ecx,DWORD PTR [ebp-0x4]
  4138ca:	mov    ecx,DWORD PTR [ebp-0x4]
  4138cd:	mov    ecx,DWORD PTR [ebp-0x4]
  4138d0:	push   ebx
  4138d1:	mov    ebx,DWORD PTR [ebp+0x10]
  4138d4:	push   esi
  4138d5:	mov    esi,0x7510896
  4138da:	mov    DWORD PTR [ebp-0x10],0x352eb0f
  4138e1:	mov    ecx,DWORD PTR [ebp-0x4]
  4138e4:	mov    ebx,DWORD PTR [ebx+0x190]
  4138ea:	push   edi
  4138eb:	mov    edi,0x3272dd
  4138f0:	xor    ecx,esi
  4138f2:	xor    eax,esi
  4138f4:	add    eax,edi
  4138f6:	add    ecx,edi
  4138f8:	mov    DWORD PTR [ebp-0x18],eax
  4138fb:	cmp    ecx,DWORD PTR [ebx]
  4138fd:	je     0x413b7e
  413903:	mov    ebx,DWORD PTR [ebp-0x4]
  413906:	mov    ecx,DWORD PTR [ebp+0xc]
  413909:	xor    ebx,esi
  41390b:	add    ebx,edi
  41390d:	cmp    ebx,ecx
  41390f:	je     0x413b7e
  413915:	mov    ebx,DWORD PTR [ebp-0x4]
  413918:	mov    ecx,DWORD PTR [ecx+0x80]
  41391e:	xor    ebx,esi
  413920:	add    ebx,edi
  413922:	cmp    ecx,ebx
  413924:	je     0x413b79
  41392a:	add    ecx,DWORD PTR [ebp+0x8]
  41392d:	mov    DWORD PTR [ebp-0x2c],ecx
  413930:	mov    ebx,edx
  413932:	xor    ebx,esi
  413934:	add    ebx,edi
  413936:	mov    DWORD PTR [ebp-0x10],ebx
  413939:	mov    ebx,DWORD PTR [ebp-0x10]
  41393c:	cmp    ebx,edx
  41393e:	je     0x413952
  413940:	mov    edx,DWORD PTR [ebp-0x10]
  413943:	mov    ebx,DWORD PTR [ebp-0x4]
  413946:	imul   edx,edx,0x14
  413949:	xor    ebx,esi
  41394b:	add    ebx,edi
  41394d:	cmp    DWORD PTR [edx+ecx*1],ebx
  413950:	jne    0x413969
  413952:	mov    edx,DWORD PTR [ebp-0x10]
  413955:	mov    ebx,DWORD PTR [ebp-0x4]
  413958:	imul   edx,edx,0x14
  41395b:	xor    ebx,esi
  41395d:	add    ebx,edi
  41395f:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  413963:	je     0x413b6b
  413969:	mov    eax,DWORD PTR [ebp-0x4]
  41396c:	mov    ebx,DWORD PTR [ebp-0x4]
  41396f:	mov    eax,DWORD PTR [ebp-0x10]
  413972:	imul   eax,eax,0x14
  413975:	add    eax,ecx
  413977:	mov    ecx,DWORD PTR [eax+0x10]
  41397a:	add    ecx,DWORD PTR [ebp+0x8]
  41397d:	xor    ebx,esi
  41397f:	mov    DWORD PTR [ebp-0x1c],ecx
  413982:	mov    ecx,DWORD PTR [ebp-0x4]
  413985:	mov    edx,DWORD PTR [ebp-0x4]
  413988:	xor    ecx,esi
  41398a:	add    ecx,edi
  41398c:	xor    edx,esi
  41398e:	mov    DWORD PTR [ebp-0x24],ecx
  413991:	mov    ecx,DWORD PTR [eax]
  413993:	add    edx,edi
  413995:	add    ebx,edi
  413997:	cmp    ecx,edx
  413999:	je     0x4139a1
  41399b:	add    ecx,DWORD PTR [ebp+0x8]
  41399e:	mov    DWORD PTR [ebp-0x24],ecx
  4139a1:	mov    ecx,DWORD PTR [ebp-0x4]
  4139a4:	xor    ecx,esi
  4139a6:	add    ecx,DWORD PTR [eax+0xc]
  4139a9:	mov    eax,DWORD PTR [ebp+0x8]
  4139ac:	lea    eax,[ecx+eax*1+0x3272dd]
  4139b3:	mov    DWORD PTR [ebp+0xc],eax
  4139b6:	mov    DWORD PTR [ebp-0x28],0xf89c85be
  4139bd:	mov    eax,DWORD PTR [ebp+0x10]
  4139c0:	push   DWORD PTR [ebp+0xc]
  4139c3:	mov    eax,DWORD PTR [eax+0x1d8]
  4139c9:	call   DWORD PTR [eax]
  4139cb:	mov    ecx,DWORD PTR [ebp-0x4]
  4139ce:	xor    ecx,esi
  4139d0:	add    ecx,edi
  4139d2:	mov    DWORD PTR [ebp-0xc],eax
  4139d5:	cmp    ecx,eax
  4139d7:	jne    0x4139eb
  4139d9:	mov    eax,DWORD PTR [ebp+0x10]
  4139dc:	push   DWORD PTR [ebp+0xc]
  4139df:	mov    eax,DWORD PTR [eax+0x1d8]
  4139e5:	call   DWORD PTR [eax+0xc]
  4139e8:	mov    DWORD PTR [ebp-0xc],eax
  4139eb:	mov    DWORD PTR [ebp-0x20],0x7f661b0a
  4139f2:	mov    DWORD PTR [ebp-0x20],0xf89c999a
  4139f9:	mov    eax,DWORD PTR [ebp-0x4]
  4139fc:	xor    eax,esi
  4139fe:	add    eax,edi
  413a00:	cmp    eax,DWORD PTR [ebp-0xc]
  413a03:	jne    0x413a28
  413a05:	mov    eax,DWORD PTR [ebp-0x8]
  413a08:	mov    ecx,DWORD PTR [ebp-0x20]
  413a0b:	xor    eax,esi
  413a0d:	xor    ecx,esi
  413a0f:	lea    ebx,[ebx+eax*1+0x3272dd]
  413a16:	mov    eax,DWORD PTR [ebp+0x10]
  413a19:	mov    eax,DWORD PTR [eax+0x1d8]
  413a1f:	add    ecx,edi
  413a21:	imul   ecx,ebx
  413a24:	push   ecx
  413a25:	call   DWORD PTR [eax+0x24]
  413a28:	mov    eax,DWORD PTR [ebp-0x4]
  413a2b:	xor    eax,esi
  413a2d:	add    eax,edi
  413a2f:	cmp    eax,DWORD PTR [ebp-0xc]
  413a32:	jne    0x413a43
  413a34:	mov    eax,DWORD PTR [ebp-0x28]
  413a37:	xor    eax,esi
  413a39:	add    eax,edi
  413a3b:	cmp    ebx,eax
  413a3d:	jbe    0x4139bd
  413a43:	mov    eax,DWORD PTR [ebp-0x4]
  413a46:	xor    eax,esi
  413a48:	add    eax,edi
  413a4a:	cmp    eax,DWORD PTR [ebp-0xc]
  413a4d:	jne    0x413a66
  413a4f:	mov    eax,DWORD PTR [ebp-0x8]
  413a52:	mov    ecx,DWORD PTR [ebp-0x18]
  413a55:	xor    eax,esi
  413a57:	lea    eax,[ecx+eax*1+0x3272dd]
  413a5e:	mov    DWORD PTR [ebp-0x18],eax
  413a61:	jmp    0x413b55
  413a66:	mov    DWORD PTR [ebp-0x14],0x1121b0d
  413a6d:	mov    DWORD PTR [ebp+0xc],0xe042d0f
  413a74:	mov    ebx,DWORD PTR [ebp-0x4]
  413a77:	xor    ebx,esi
  413a79:	add    ebx,edi
  413a7b:	jmp    0x413b42
  413a80:	mov    eax,DWORD PTR [ebp-0x4]
  413a83:	xor    eax,esi
  413a85:	add    eax,edi
  413a87:	mov    DWORD PTR [ebp-0x14],eax
  413a8a:	mov    eax,DWORD PTR [ebp-0x4]
  413a8d:	xor    eax,esi
  413a8f:	add    eax,edi
  413a91:	mov    DWORD PTR [ebp+0xc],eax
  413a94:	mov    ecx,DWORD PTR [ebp-0x4]
  413a97:	mov    eax,DWORD PTR [ebp-0x24]
  413a9a:	xor    ecx,esi
  413a9c:	add    ecx,edi
  413a9e:	cmp    ecx,eax
  413aa0:	je     0x413aa8
  413aa2:	mov    eax,DWORD PTR [eax+ebx*4]
  413aa5:	mov    DWORD PTR [ebp-0x14],eax
  413aa8:	mov    eax,DWORD PTR [ebp-0x1c]
  413aab:	mov    eax,DWORD PTR [eax+ebx*4]
  413aae:	mov    DWORD PTR [ebp+0xc],eax
  413ab1:	mov    eax,DWORD PTR [ebp-0x4]
  413ab4:	mov    ecx,DWORD PTR [ebp-0x14]
  413ab7:	xor    eax,esi
  413ab9:	add    eax,edi
  413abb:	cmp    eax,ecx
  413abd:	je     0x413ae8
  413abf:	mov    eax,DWORD PTR [ebp-0x4]
  413ac2:	mov    ecx,DWORD PTR [ebp-0x14]
  413ac5:	xor    eax,esi
  413ac7:	add    eax,edi
  413ac9:	shr    ecx,0x1f
  413acc:	cmp    eax,ecx
  413ace:	je     0x413ae8
  413ad0:	mov    ecx,DWORD PTR [ebp-0x14]
  413ad3:	mov    eax,DWORD PTR [ebp+0x10]
  413ad6:	mov    eax,DWORD PTR [eax+0x1d8]
  413adc:	movzx  ecx,cx
  413adf:	push   ecx
  413ae0:	push   DWORD PTR [ebp-0xc]
  413ae3:	call   DWORD PTR [eax+0x8]
  413ae6:	jmp    0x413b01
  413ae8:	mov    eax,DWORD PTR [ebp+0xc]
  413aeb:	add    eax,DWORD PTR [ebp+0x8]
  413aee:	mov    ecx,DWORD PTR [ebp+0x10]
  413af1:	mov    ecx,DWORD PTR [ecx+0x1d8]
  413af7:	add    eax,0x2
  413afa:	push   eax
  413afb:	push   DWORD PTR [ebp-0xc]
  413afe:	call   DWORD PTR [ecx+0x8]
  413b01:	mov    DWORD PTR [ebp+0xc],eax
  413b04:	mov    eax,DWORD PTR [ebp-0x4]
  413b07:	mov    ecx,DWORD PTR [ebp+0xc]
  413b0a:	xor    eax,esi
  413b0c:	add    eax,edi
  413b0e:	cmp    eax,ecx
  413b10:	mov    eax,DWORD PTR [ebp-0x8]
  413b13:	jne    0x413b26
  413b15:	mov    ecx,DWORD PTR [ebp-0x18]
  413b18:	xor    eax,esi
  413b1a:	lea    eax,[ecx+eax*1+0x3272dd]
  413b21:	mov    DWORD PTR [ebp-0x18],eax
  413b24:	jmp    0x413b36
  413b26:	mov    ecx,DWORD PTR [ebp+0xc]
  413b29:	xor    eax,esi
  413b2b:	add    eax,edi
  413b2d:	imul   eax,ecx
  413b30:	mov    ecx,DWORD PTR [ebp-0x1c]
  413b33:	mov    DWORD PTR [ecx+ebx*4],eax
  413b36:	mov    eax,DWORD PTR [ebp-0x8]
  413b39:	xor    eax,esi
  413b3b:	lea    ebx,[ebx+eax*1+0x3272dd]
  413b42:	mov    eax,DWORD PTR [ebp-0x4]
  413b45:	mov    ecx,DWORD PTR [ebp-0x1c]
  413b48:	xor    eax,esi
  413b4a:	add    eax,edi
  413b4c:	cmp    DWORD PTR [ecx+ebx*4],eax
  413b4f:	jne    0x413a80
  413b55:	mov    edx,DWORD PTR [ebp-0x10]
  413b58:	mov    eax,DWORD PTR [ebp-0x18]
  413b5b:	mov    ecx,DWORD PTR [ebp-0x2c]
  413b5e:	sub    edx,0x3272dc
  413b64:	xor    edx,esi
  413b66:	jmp    0x413930
  413b6b:	mov    ecx,DWORD PTR [ebp-0x4]
  413b6e:	xor    ecx,esi
  413b70:	add    ecx,edi
  413b72:	cmp    eax,ecx
  413b74:	mov    eax,DWORD PTR [ebp-0x4]
  413b77:	jne    0x413b81
  413b79:	mov    eax,DWORD PTR [ebp-0x8]
  413b7c:	jmp    0x413b81
  413b7e:	mov    eax,DWORD PTR [ebp-0x4]
  413b81:	xor    eax,esi
  413b83:	add    eax,edi
  413b85:	pop    edi
  413b86:	pop    esi
  413b87:	pop    ebx
  413b88:	leave  
  413b89:	ret    0xc
  413b8c:	push   ebp
  413b8d:	mov    ebp,esp
  413b8f:	sub    esp,0x28
  413b92:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  413b99:	mov    DWORD PTR [ebp-0x28],0xf89c85b2
  413ba0:	mov    eax,DWORD PTR [ebp+0xc]
  413ba3:	mov    DWORD PTR [ebp+0xc],eax
  413ba6:	push   esi
  413ba7:	mov    eax,eax
  413ba9:	mov    eax,DWORD PTR [ebp-0x4]
  413bac:	mov    esi,DWORD PTR [ebp+0x8]
  413baf:	mov    ecx,0x7510896
  413bb4:	xor    eax,ecx
  413bb6:	mov    edx,0x3272dd
  413bbb:	add    eax,edx
  413bbd:	cmp    esi,eax
  413bbf:	je     0x413ce6
  413bc5:	mov    eax,DWORD PTR [ebp+0x8]
  413bc8:	mov    esi,DWORD PTR [ebp+0x8]
  413bcb:	add    esi,DWORD PTR [eax+0x3c]
  413bce:	push   edi
  413bcf:	mov    DWORD PTR [ebp+0xc],esi
  413bd2:	mov    DWORD PTR [ebp-0x1c],0xf89c85be
  413bd9:	mov    eax,DWORD PTR [ebp-0x1c]
  413bdc:	mov    esi,DWORD PTR [ebp-0x4]
  413bdf:	mov    edi,DWORD PTR [ebp+0xc]
  413be2:	xor    esi,ecx
  413be4:	xor    eax,ecx
  413be6:	add    esi,edx
  413be8:	cmp    DWORD PTR [edi+eax*8+0x1939760],esi
  413bef:	je     0x413ce0
  413bf5:	mov    esi,DWORD PTR [ebp+0xc]
  413bf8:	mov    eax,DWORD PTR [ebp+0x8]
  413bfb:	add    eax,DWORD PTR [esi+0xa0]
  413c01:	mov    esi,DWORD PTR [ebp+0x8]
  413c04:	mov    edi,DWORD PTR [ebp+0xc]
  413c07:	sub    esi,DWORD PTR [edi+0x34]
  413c0a:	mov    edi,DWORD PTR [ebp-0x4]
  413c0d:	xor    edi,ecx
  413c0f:	add    edi,edx
  413c11:	mov    DWORD PTR [ebp-0x24],esi
  413c14:	cmp    esi,edi
  413c16:	je     0x413ce0
  413c1c:	mov    esi,DWORD PTR [ebp-0x4]
  413c1f:	xor    esi,ecx
  413c21:	add    esi,edx
  413c23:	mov    DWORD PTR [ebp-0x8],esi
  413c26:	push   ebx
  413c27:	mov    DWORD PTR [ebp-0x10],0xf89c85b0
  413c2e:	jmp    0x413cca
  413c33:	mov    esi,DWORD PTR [ebp-0x4]
  413c36:	xor    esi,ecx
  413c38:	lea    edi,[ebx-0x8]
  413c3b:	add    esi,edx
  413c3d:	shr    edi,1
  413c3f:	cmp    esi,edi
  413c41:	jae    0x413cb0
  413c43:	sub    edi,esi
  413c45:	lea    ebx,[eax+esi*2+0x8]
  413c49:	mov    DWORD PTR [ebp-0x18],edi
  413c4c:	movzx  esi,WORD PTR [ebx]
  413c4f:	and    esi,0xfff
  413c55:	mov    DWORD PTR [ebp-0x14],esi
  413c58:	mov    edi,DWORD PTR [ebp-0x14]
  413c5b:	mov    esi,DWORD PTR [eax]
  413c5d:	sub    esi,edx
  413c5f:	add    edi,esi
  413c61:	movzx  esi,WORD PTR [ebx]
  413c64:	shr    esi,0xc
  413c67:	xor    edi,ecx
  413c69:	mov    DWORD PTR [ebp-0x20],edi
  413c6c:	mov    DWORD PTR [ebp-0x14],esi
  413c6f:	mov    esi,DWORD PTR [ebp-0x20]
  413c72:	mov    edi,DWORD PTR [ebp+0x8]
  413c75:	xor    esi,ecx
  413c77:	lea    esi,[esi+edi*1+0x3272dd]
  413c7e:	mov    DWORD PTR [ebp-0x20],esi
  413c81:	mov    esi,DWORD PTR [ebp-0x10]
  413c84:	mov    edi,DWORD PTR [ebp-0x14]
  413c87:	xor    esi,ecx
  413c89:	add    esi,edx
  413c8b:	cmp    edi,esi
  413c8d:	jne    0x413ca5
  413c8f:	mov    esi,DWORD PTR [ebp-0x10]
  413c92:	mov    edi,DWORD PTR [ebp-0x14]
  413c95:	xor    esi,ecx
  413c97:	add    esi,edx
  413c99:	cmp    edi,esi
  413c9b:	jne    0x413ca5
  413c9d:	mov    esi,DWORD PTR [ebp-0x20]
  413ca0:	mov    edi,DWORD PTR [ebp-0x24]
  413ca3:	add    DWORD PTR [esi],edi
  413ca5:	add    ebx,0x2
  413ca8:	dec    DWORD PTR [ebp-0x18]
  413cab:	jne    0x413c4c
  413cad:	mov    ebx,DWORD PTR [ebp-0xc]
  413cb0:	add    DWORD PTR [ebp-0x8],ebx
  413cb3:	mov    esi,DWORD PTR [ebp-0x1c]
  413cb6:	mov    edi,DWORD PTR [ebp-0x8]
  413cb9:	mov    ebx,DWORD PTR [ebp+0xc]
  413cbc:	xor    esi,ecx
  413cbe:	cmp    edi,DWORD PTR [ebx+esi*8+0x1939764]
  413cc5:	jae    0x413cdf
  413cc7:	add    eax,DWORD PTR [ebp-0xc]
  413cca:	mov    esi,DWORD PTR [ebp-0x4]
  413ccd:	mov    ebx,DWORD PTR [eax+0x4]
  413cd0:	xor    esi,ecx
  413cd2:	add    esi,edx
  413cd4:	mov    DWORD PTR [ebp-0xc],ebx
  413cd7:	cmp    ebx,esi
  413cd9:	jne    0x413c33
  413cdf:	pop    ebx
  413ce0:	mov    eax,DWORD PTR [ebp-0x28]
  413ce3:	pop    edi
  413ce4:	jmp    0x413ce9
  413ce6:	mov    eax,DWORD PTR [ebp-0x4]
  413ce9:	xor    eax,ecx
  413ceb:	add    eax,edx
  413ced:	pop    esi
  413cee:	leave  
  413cef:	ret    0x8
  413cf2:	push   ebp
  413cf3:	mov    ebp,esp
  413cf5:	sub    esp,0x54
  413cf8:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  413cff:	mov    DWORD PTR [ebp-0x24],0xf89c85b2
  413d06:	mov    eax,DWORD PTR [ebp-0x4]
  413d09:	push   ebx
  413d0a:	push   esi
  413d0b:	mov    esi,0x7510896
  413d10:	xor    eax,esi
  413d12:	mov    ebx,0x3272dd
  413d17:	add    eax,ebx
  413d19:	mov    DWORD PTR [ebp-0x18],eax
  413d1c:	mov    eax,DWORD PTR [ebp-0x4]
  413d1f:	xor    eax,esi
  413d21:	add    eax,ebx
  413d23:	mov    DWORD PTR [ebp-0x20],eax
  413d26:	push   edi
  413d27:	mov    edi,DWORD PTR [ebp+0x20]
  413d2a:	mov    eax,DWORD PTR [ebp-0x10]
  413d2d:	mov    ecx,DWORD PTR [ebp-0x10]
  413d30:	xor    eax,ecx
  413d32:	mov    DWORD PTR [ebp-0x10],eax
  413d35:	add    DWORD PTR [ebp-0x10],0xf89cb5b5
  413d3c:	mov    eax,DWORD PTR [ebp-0x8]
  413d3f:	mov    ecx,DWORD PTR [ebp-0x8]
  413d42:	xor    eax,ecx
  413d44:	mov    DWORD PTR [ebp-0x8],eax
  413d47:	add    DWORD PTR [ebp-0x8],0xf89c85f5
  413d4e:	mov    eax,DWORD PTR [ebp-0xc]
  413d51:	mov    ecx,DWORD PTR [ebp-0xc]
  413d54:	xor    eax,ecx
  413d56:	mov    DWORD PTR [ebp-0xc],eax
  413d59:	add    DWORD PTR [ebp-0xc],0xf89c85b1
  413d60:	mov    eax,DWORD PTR [ebp-0x14]
  413d63:	mov    ecx,DWORD PTR [ebp-0x14]
  413d66:	xor    eax,ecx
  413d68:	mov    DWORD PTR [ebp-0x14],eax
  413d6b:	add    DWORD PTR [ebp-0x14],0xf89f05b5
  413d72:	mov    eax,0x9588
  413d77:	mov    WORD PTR [ebp+0x20],ax
  413d7b:	mov    eax,DWORD PTR [ebp+0x8]
  413d7e:	test   eax,eax
  413d80:	je     0x414165
  413d86:	mov    eax,DWORD PTR [ebp+0xc]
  413d89:	test   eax,eax
  413d8b:	je     0x414165
  413d91:	mov    eax,DWORD PTR [ebp+0x18]
  413d94:	test   eax,eax
  413d96:	je     0x414165
  413d9c:	mov    ax,WORD PTR [ebp+0x20]
  413da0:	mov    ecx,0x8a89
  413da5:	xor    ax,cx
  413da8:	mov    ecx,0x3b4c
  413dad:	add    ax,cx
  413db0:	mov    ecx,DWORD PTR [ebp+0x8]
  413db3:	cmp    WORD PTR [ecx],ax
  413db6:	jne    0x414165
  413dbc:	mov    eax,DWORD PTR [ebp-0x4]
  413dbf:	mov    ecx,DWORD PTR [ebp+0x8]
  413dc2:	mov    eax,DWORD PTR [ebp+0x8]
  413dc5:	add    eax,DWORD PTR [ecx+0x3c]
  413dc8:	mov    DWORD PTR [ebp+0xc],eax
  413dcb:	mov    eax,DWORD PTR [eax+0x50]
  413dce:	test   eax,eax
  413dd0:	je     0x414165
  413dd6:	mov    DWORD PTR [ebp-0x2c],0xf88c85b5
  413ddd:	mov    eax,DWORD PTR [ebp-0x2c]
  413de0:	xor    eax,esi
  413de2:	add    eax,ebx
  413de4:	mov    DWORD PTR [ebp-0x2c],eax
  413de7:	mov    eax,DWORD PTR [ebp-0x4]
  413dea:	mov    eax,DWORD PTR [edi+0x190]
  413df0:	mov    ecx,DWORD PTR [eax]
  413df2:	mov    ecx,DWORD PTR [ecx+0x3c]
  413df5:	add    ecx,DWORD PTR [eax]
  413df7:	mov    eax,DWORD PTR [ebp-0x4]
  413dfa:	mov    eax,DWORD PTR [edi+0x18c]
  413e00:	mov    edx,DWORD PTR [eax]
  413e02:	mov    DWORD PTR [ebp-0x1c],ecx
  413e05:	mov    DWORD PTR [ebp+0x20],edx
  413e08:	cmp    edx,edx
  413e0a:	jne    0x413e3f
  413e0c:	mov    eax,DWORD PTR [edi+0x1d8]
  413e12:	lea    edx,[ebp-0x18]
  413e15:	push   edx
  413e16:	mov    edx,DWORD PTR [ebp-0x8]
  413e19:	xor    edx,esi
  413e1b:	add    edx,ebx
  413e1d:	push   edx
  413e1e:	push   DWORD PTR [ecx+0x50]
  413e21:	push   DWORD PTR [ebp+0x20]
  413e24:	call   DWORD PTR [eax+0x1c]
  413e27:	mov    ecx,DWORD PTR [ebp-0x1c]
  413e2a:	mov    eax,DWORD PTR [ecx+0x54]
  413e2d:	mov    ecx,DWORD PTR [ecx+0x50]
  413e30:	sub    ecx,eax
  413e32:	add    eax,DWORD PTR [ebp+0x20]
  413e35:	push   ecx
  413e36:	push   eax
  413e37:	call   0x414779
  413e3c:	mov    edx,DWORD PTR [ebp+0x20]
  413e3f:	mov    eax,DWORD PTR [edi+0x194]
  413e45:	mov    DWORD PTR [eax],edx
  413e47:	mov    eax,DWORD PTR [ebp+0xc]
  413e4a:	push   DWORD PTR [eax+0x54]
  413e4d:	push   DWORD PTR [ebp+0x8]
  413e50:	push   edx
  413e51:	call   0x414620
  413e56:	mov    ecx,DWORD PTR [ebp+0x20]
  413e59:	mov    eax,DWORD PTR [ecx+0x3c]
  413e5c:	add    eax,ecx
  413e5e:	movzx  ecx,WORD PTR [eax+0x14]
  413e62:	lea    ecx,[ecx+eax*1+0x18]
  413e66:	mov    DWORD PTR [ebp+0x18],ecx
  413e69:	mov    ecx,DWORD PTR [ebp-0x4]
  413e6c:	movzx  edx,WORD PTR [eax+0x6]
  413e70:	xor    ecx,esi
  413e72:	add    ecx,ebx
  413e74:	mov    DWORD PTR [ebp+0xc],eax
  413e77:	cmp    edx,ecx
  413e79:	je     0x413f27
  413e7f:	mov    ecx,DWORD PTR [ebp-0x4]
  413e82:	xor    ecx,esi
  413e84:	add    ecx,ebx
  413e86:	mov    DWORD PTR [ebp-0x20],ecx
  413e89:	mov    ecx,DWORD PTR [ebp-0x24]
  413e8c:	movzx  edx,WORD PTR [eax+0x6]
  413e90:	xor    ecx,esi
  413e92:	sub    edx,ecx
  413e94:	sub    edx,ebx
  413e96:	cmp    DWORD PTR [ebp-0x20],edx
  413e99:	ja     0x413f27
  413e9f:	mov    edx,DWORD PTR [ebp+0x18]
  413ea2:	add    edx,0x8
  413ea5:	mov    DWORD PTR [ebp+0x18],edx
  413ea8:	jmp    0x413ead
  413eaa:	mov    edx,DWORD PTR [ebp+0x18]
  413ead:	mov    eax,DWORD PTR [eax+0x38]
  413eb0:	lea    ecx,[eax-0x1]
  413eb3:	mov    DWORD PTR [ebp-0x30],eax
  413eb6:	mov    eax,DWORD PTR [edx]
  413eb8:	test   ecx,eax
  413eba:	je     0x413ec3
  413ebc:	not    ecx
  413ebe:	and    eax,ecx
  413ec0:	add    eax,DWORD PTR [ebp-0x30]
  413ec3:	push   eax
  413ec4:	mov    eax,DWORD PTR [edx+0x4]
  413ec7:	add    eax,DWORD PTR [ebp+0x20]
  413eca:	push   eax
  413ecb:	call   0x414779
  413ed0:	mov    edx,DWORD PTR [ebp-0x4]
  413ed3:	mov    eax,DWORD PTR [ebp+0x18]
  413ed6:	mov    ecx,DWORD PTR [eax+0x8]
  413ed9:	xor    edx,esi
  413edb:	add    edx,ebx
  413edd:	cmp    ecx,edx
  413edf:	je     0x413ef8
  413ee1:	push   ecx
  413ee2:	mov    ecx,DWORD PTR [ebp+0x8]
  413ee5:	add    ecx,DWORD PTR [eax+0xc]
  413ee8:	mov    eax,DWORD PTR [eax+0x4]
  413eeb:	add    eax,DWORD PTR [ebp+0x20]
  413eee:	push   ecx
  413eef:	push   eax
  413ef0:	call   0x414620
  413ef5:	mov    eax,DWORD PTR [ebp+0x18]
  413ef8:	mov    ecx,DWORD PTR [ebp-0x24]
  413efb:	mov    edx,DWORD PTR [ebp-0x20]
  413efe:	add    eax,0x28
  413f01:	xor    ecx,esi
  413f03:	lea    ecx,[edx+ecx*1+0x3272dd]
  413f0a:	mov    edx,DWORD PTR [ebp+0xc]
  413f0d:	mov    DWORD PTR [ebp+0x18],eax
  413f10:	mov    eax,DWORD PTR [ebp-0x24]
  413f13:	movzx  edx,WORD PTR [edx+0x6]
  413f17:	xor    eax,esi
  413f19:	sub    edx,eax
  413f1b:	mov    eax,DWORD PTR [ebp+0xc]
  413f1e:	sub    edx,ebx
  413f20:	mov    DWORD PTR [ebp-0x20],ecx
  413f23:	cmp    ecx,edx
  413f25:	jbe    0x413eaa
  413f27:	mov    ecx,DWORD PTR [ebp-0x4]
  413f2a:	mov    edx,DWORD PTR [edi+0x18c]
  413f30:	xor    ecx,esi
  413f32:	add    ecx,ebx
  413f34:	mov    DWORD PTR [ebp+0x18],ecx
  413f37:	mov    ecx,DWORD PTR [ebp+0x20]
  413f3a:	cmp    ecx,DWORD PTR [edx]
  413f3c:	jne    0x413f65
  413f3e:	mov    eax,DWORD PTR [edi+0x1d8]
  413f44:	lea    edx,[ebp-0x18]
  413f47:	push   edx
  413f48:	mov    edx,DWORD PTR [ebp-0xc]
  413f4b:	xor    edx,esi
  413f4d:	add    edx,ebx
  413f4f:	push   edx
  413f50:	mov    edx,DWORD PTR [ebp-0x1c]
  413f53:	push   DWORD PTR [edx+0x54]
  413f56:	push   ecx
  413f57:	call   DWORD PTR [eax+0x1c]
  413f5a:	test   eax,eax
  413f5c:	je     0x414156
  413f62:	mov    eax,DWORD PTR [ebp+0xc]
  413f65:	mov    ecx,DWORD PTR [edi+0x1c8]
  413f6b:	mov    ecx,DWORD PTR [ecx]
  413f6d:	xor    ecx,esi
  413f6f:	add    ecx,ebx
  413f71:	je     0x414081
  413f77:	and    DWORD PTR [ebp-0x28],0x0
  413f7b:	mov    eax,0x4fab
  413f80:	mov    WORD PTR [ebp-0x3c],ax
  413f84:	add    eax,0xfffffff6
  413f87:	mov    WORD PTR [ebp-0x3a],ax
  413f8b:	mov    eax,0x4f91
  413f90:	mov    WORD PTR [ebp-0x38],ax
  413f94:	add    eax,0x18
  413f97:	and    DWORD PTR [ebp+0x8],0x0
  413f9b:	mov    ecx,eax
  413f9d:	mov    WORD PTR [ebp-0x34],ax
  413fa1:	mov    eax,0x4e3d
  413fa6:	mov    WORD PTR [ebp-0x36],cx
  413faa:	mov    WORD PTR [ebp-0x32],ax
  413fae:	mov    eax,DWORD PTR [ebp+0x8]
  413fb1:	lea    eax,[ebp+eax*2-0x3c]
  413fb5:	mov    ecx,0x8a89
  413fba:	xor    cx,WORD PTR [eax]
  413fbd:	mov    edx,0x3b4c
  413fc2:	add    cx,dx
  413fc5:	inc    DWORD PTR [ebp+0x8]
  413fc8:	cmp    DWORD PTR [ebp+0x8],0x6
  413fcc:	mov    WORD PTR [eax],cx
  413fcf:	jb     0x413fae
  413fd1:	mov    DWORD PTR [ebp-0x54],0x200c1e26
  413fd8:	mov    DWORD PTR [ebp-0x50],0x211e0805
  413fdf:	mov    DWORD PTR [ebp-0x4c],0xf50c0e08
  413fe6:	mov    DWORD PTR [ebp-0x48],0x3d0c0b20
  413fed:	mov    DWORD PTR [ebp-0x44],0x10c1e1e
  413ff4:	mov    WORD PTR [ebp-0x40],0xf0f
  413ffa:	mov    BYTE PTR [ebp-0x3e],0x7a
  413ffe:	xor    ecx,ecx
  414000:	lea    eax,[ebp+ecx*1-0x54]
  414004:	mov    dl,BYTE PTR [eax]
  414006:	xor    dl,0x71
  414009:	sub    dl,0xb
  41400c:	inc    ecx
  41400d:	mov    BYTE PTR [eax],dl
  41400f:	cmp    ecx,0x17
  414012:	jb     0x414000
  414014:	mov    eax,DWORD PTR [edi+0x1d8]
  41401a:	lea    ecx,[ebp-0x3c]
  41401d:	push   ecx
  41401e:	call   DWORD PTR [eax+0x4]
  414021:	mov    ecx,DWORD PTR [edi+0x1d8]
  414027:	lea    edx,[ebp-0x54]
  41402a:	push   edx
  41402b:	push   eax
  41402c:	call   DWORD PTR [ecx+0x8]
  41402f:	lea    ecx,[ebp-0x28]
  414032:	push   ecx
  414033:	mov    ecx,DWORD PTR [edi+0x18c]
  414039:	push   DWORD PTR [ecx]
  41403b:	call   eax
  41403d:	mov    eax,DWORD PTR [ebp-0x28]
  414040:	test   eax,eax
  414042:	je     0x41407e
  414044:	mov    DWORD PTR [ebp+0x8],eax
  414047:	jmp    0x414053
  414049:	mov    eax,DWORD PTR [eax]
  41404b:	mov    DWORD PTR [ebp-0x28],eax
  41404e:	cmp    eax,DWORD PTR [ebp+0x8]
  414051:	je     0x414060
  414053:	mov    edx,DWORD PTR [eax+0x18]
  414056:	mov    ecx,DWORD PTR [edi+0x18c]
  41405c:	cmp    edx,DWORD PTR [ecx]
  41405e:	jne    0x414049
  414060:	mov    edx,DWORD PTR [eax+0x18]
  414063:	mov    ecx,DWORD PTR [edi+0x18c]
  414069:	cmp    edx,DWORD PTR [ecx]
  41406b:	jne    0x41407e
  41406d:	mov    edx,DWORD PTR [ebp-0x1c]
  414070:	mov    ecx,DWORD PTR [edi+0x190]
  414076:	mov    edx,DWORD PTR [edx+0x28]
  414079:	add    edx,DWORD PTR [ecx]
  41407b:	mov    DWORD PTR [eax+0x1c],edx
  41407e:	mov    eax,DWORD PTR [ebp+0xc]
  414081:	push   edi
  414082:	push   eax
  414083:	push   DWORD PTR [ebp+0x20]
  414086:	call   0x4138a9
  41408b:	test   eax,eax
  41408d:	je     0x414156
  414093:	push   DWORD PTR [ebp+0xc]
  414096:	mov    ecx,edi
  414098:	push   DWORD PTR [ebp+0x20]
  41409b:	call   0x413802
  4140a0:	test   eax,eax
  4140a2:	je     0x414156
  4140a8:	mov    eax,DWORD PTR [ebp+0xc]
  4140ab:	mov    edx,DWORD PTR [ebp+0x20]
  4140ae:	mov    ecx,edi
  4140b0:	call   0x4136db
  4140b5:	test   eax,eax
  4140b7:	je     0x414156
  4140bd:	push   edi
  4140be:	push   DWORD PTR [ebp+0x20]
  4140c1:	call   0x413b8c
  4140c6:	test   eax,eax
  4140c8:	je     0x414156
  4140ce:	mov    eax,DWORD PTR [edi+0x18c]
  4140d4:	mov    edx,DWORD PTR [ebp+0x20]
  4140d7:	cmp    edx,DWORD PTR [eax]
  4140d9:	jne    0x4140f5
  4140db:	mov    eax,DWORD PTR [edi+0x1d8]
  4140e1:	lea    ecx,[ebp-0x18]
  4140e4:	push   ecx
  4140e5:	push   DWORD PTR [ebp-0x18]
  4140e8:	mov    ecx,DWORD PTR [ebp-0x1c]
  4140eb:	push   DWORD PTR [ecx+0x54]
  4140ee:	push   edx
  4140ef:	call   DWORD PTR [eax+0x1c]
  4140f2:	mov    edx,DWORD PTR [ebp+0x20]
  4140f5:	mov    eax,DWORD PTR [edi+0x1c8]
  4140fb:	mov    eax,DWORD PTR [eax]
  4140fd:	xor    eax,esi
  4140ff:	add    eax,ebx
  414101:	je     0x41413a
  414103:	mov    ecx,DWORD PTR [ebp+0xc]
  414106:	mov    eax,DWORD PTR [ecx+0x28]
  414109:	mov    DWORD PTR [ebp+0x8],0xf89ca5b5
  414110:	mov    esi,DWORD PTR [ebp+0x8]
  414113:	push   DWORD PTR [ebp+0x14]
  414116:	xor    esi,0x896
  41411c:	push   DWORD PTR [ebp+0x10]
  41411f:	add    esi,0x72dd
  414125:	or     WORD PTR [ecx+0x16],si
  414129:	add    eax,edx
  41412b:	push   edx
  41412c:	call   eax
  41412e:	mov    DWORD PTR [edi+0x1d0],0xf89c85b2
  414138:	jmp    0x414144
  41413a:	mov    eax,DWORD PTR [ebp+0xc]
  41413d:	mov    eax,DWORD PTR [eax+0x28]
  414140:	add    eax,edx
  414142:	call   eax
  414144:	mov    DWORD PTR [ebp-0x20],eax
  414147:	mov    eax,DWORD PTR [ebp-0x20]
  41414a:	mov    ecx,DWORD PTR [ebp+0x1c]
  41414d:	mov    DWORD PTR [ecx],eax
  41414f:	mov    DWORD PTR [ebp+0x18],0x1
  414156:	cmp    DWORD PTR [ebp+0x18],0x0
  41415a:	jne    0x414160
  41415c:	and    DWORD PTR [ebp+0x20],0x0
  414160:	mov    eax,DWORD PTR [ebp+0x20]
  414163:	jmp    0x414167
  414165:	xor    eax,eax
  414167:	pop    edi
  414168:	pop    esi
  414169:	pop    ebx
  41416a:	leave  
  41416b:	ret    0x1c
  41416e:	push   ebp
  41416f:	mov    ebp,esp
  414171:	movzx  edx,WORD PTR [ecx+0x6]
  414175:	movzx  eax,WORD PTR [ecx+0x14]
  414179:	push   ebx
  41417a:	push   edi
  41417b:	xor    edi,edi
  41417d:	lea    eax,[eax+ecx*1+0x18]
  414181:	test   edx,edx
  414183:	je     0x4141a4
  414185:	mov    ecx,DWORD PTR [eax+0xc]
  414188:	lea    ebx,[ecx+esi*1]
  41418b:	cmp    DWORD PTR [ebp+0x8],ebx
  41418e:	jb     0x41419c
  414190:	mov    ebx,DWORD PTR [eax+0x8]
  414193:	add    ebx,ecx
  414195:	add    ebx,esi
  414197:	cmp    DWORD PTR [ebp+0x8],ebx
  41419a:	jb     0x4141a6
  41419c:	add    eax,0x28
  41419f:	inc    edi
  4141a0:	cmp    edi,edx
  4141a2:	jb     0x414185
  4141a4:	xor    eax,eax
  4141a6:	pop    edi
  4141a7:	pop    ebx
  4141a8:	pop    ebp
  4141a9:	ret    0x4
  4141ac:	push   ebp
  4141ad:	mov    ebp,esp
  4141af:	sub    esp,0x28
  4141b2:	mov    DWORD PTR [ebp-0x10],0xf89c85b5
  4141b9:	mov    DWORD PTR [ebp-0x1c],0xf89c85b2
  4141c0:	mov    DWORD PTR [ebp-0x28],0xf89c85b3
  4141c7:	mov    eax,0x4f9c
  4141cc:	mov    WORD PTR [ebp-0xc],ax
  4141d0:	mov    eax,0x4e7c
  4141d5:	mov    WORD PTR [ebp-0x4],ax
  4141d9:	mov    eax,0x4fa7
  4141de:	mov    WORD PTR [ebp-0x8],ax
  4141e2:	add    eax,0xffffffe0
  4141e5:	mov    WORD PTR [ebp-0x8],ax
  4141e9:	mov    eax,DWORD PTR [ebp+0x8]
  4141ec:	mov    DWORD PTR [ebp-0x14],eax
  4141ef:	mov    eax,DWORD PTR [ebp+0xc]
  4141f2:	mov    DWORD PTR [ebp-0x18],eax
  4141f5:	mov    eax,DWORD PTR [ebp-0x10]
  4141f8:	push   ebx
  4141f9:	mov    ecx,0x7510896
  4141fe:	xor    eax,ecx
  414200:	push   esi
  414201:	mov    esi,DWORD PTR [ebp-0x14]
  414204:	mov    edx,0x3272dd
  414209:	add    eax,edx
  41420b:	push   edi
  41420c:	cmp    esi,eax
  41420e:	je     0x41440c
  414214:	mov    eax,DWORD PTR [ebp-0x10]
  414217:	mov    esi,DWORD PTR [ebp-0x18]
  41421a:	xor    eax,ecx
  41421c:	add    eax,edx
  41421e:	cmp    esi,eax
  414220:	je     0x41440c
  414226:	mov    eax,DWORD PTR [ebp-0x10]
  414229:	xor    eax,ecx
  41422b:	add    eax,edx
  41422d:	mov    DWORD PTR [ebp-0x20],eax
  414230:	mov    eax,DWORD PTR [ebp-0x10]
  414233:	xor    eax,ecx
  414235:	add    eax,edx
  414237:	mov    DWORD PTR [ebp-0x24],eax
  41423a:	movzx  esi,WORD PTR [ebp-0x4]
  41423e:	movzx  edi,WORD PTR [ebp-0xc]
  414242:	mov    eax,0x8a89
  414247:	xor    si,ax
  41424a:	mov    ebx,0x8a89
  41424f:	xor    di,bx
  414252:	mov    eax,0x3b4c
  414257:	add    si,ax
  41425a:	add    di,ax
  41425d:	sub    edi,esi
  41425f:	mov    WORD PTR [ebp-0xc],di
  414263:	mov    esi,DWORD PTR [ebp-0x20]
  414266:	mov    edi,DWORD PTR [ebp-0x14]
  414269:	mov    si,WORD PTR [edi+esi*2]
  41426d:	mov    WORD PTR [ebp+0x8],si
  414271:	mov    esi,DWORD PTR [ebp-0x24]
  414274:	mov    edi,DWORD PTR [ebp-0x18]
  414277:	mov    si,WORD PTR [edi+esi*2]
  41427b:	mov    WORD PTR [ebp+0xc],si
  41427f:	mov    esi,0x72dd
  414284:	jmp    0x414391
  414289:	mov    edi,DWORD PTR [ebp-0x10]
  41428c:	mov    bx,WORD PTR [ebp+0xc]
  414290:	xor    edi,0x896
  414296:	add    edi,esi
  414298:	cmp    bx,di
  41429b:	je     0x4143bb
  4142a1:	mov    edi,DWORD PTR [ebp-0x10]
  4142a4:	mov    ebx,DWORD PTR [ebp+0x10]
  4142a7:	xor    edi,ecx
  4142a9:	add    edi,edx
  4142ab:	cmp    ebx,edi
  4142ad:	mov    di,WORD PTR [ebp+0xc]
  4142b1:	mov    bx,WORD PTR [ebp+0x8]
  4142b5:	je     0x414348
  4142bb:	cmp    bx,di
  4142be:	je     0x414351
  4142c4:	mov    di,WORD PTR [ebp-0x4]
  4142c8:	mov    ebx,0x8a89
  4142cd:	xor    di,bx
  4142d0:	mov    bx,WORD PTR [ebp+0x8]
  4142d4:	add    di,ax
  4142d7:	cmp    bx,di
  4142da:	jb     0x414302
  4142dc:	mov    di,WORD PTR [ebp-0x8]
  4142e0:	mov    ebx,0x8a89
  4142e5:	xor    di,bx
  4142e8:	mov    bx,WORD PTR [ebp+0x8]
  4142ec:	add    di,ax
  4142ef:	cmp    bx,di
  4142f2:	ja     0x414302
  4142f4:	movzx  edi,WORD PTR [ebp+0x8]
  4142f8:	movzx  ebx,WORD PTR [ebp-0xc]
  4142fc:	add    edi,ebx
  4142fe:	mov    WORD PTR [ebp+0x8],di
  414302:	mov    di,WORD PTR [ebp-0x4]
  414306:	mov    ebx,0x8a89
  41430b:	xor    di,bx
  41430e:	mov    bx,WORD PTR [ebp+0xc]
  414312:	add    di,ax
  414315:	cmp    bx,di
  414318:	jb     0x414340
  41431a:	mov    di,WORD PTR [ebp-0x8]
  41431e:	mov    ebx,0x8a89
  414323:	xor    di,bx
  414326:	mov    bx,WORD PTR [ebp+0xc]
  41432a:	add    di,ax
  41432d:	cmp    bx,di
  414330:	ja     0x414340
  414332:	movzx  edi,WORD PTR [ebp+0xc]
  414336:	movzx  ebx,WORD PTR [ebp-0xc]
  41433a:	add    edi,ebx
  41433c:	mov    WORD PTR [ebp+0xc],di
  414340:	mov    di,WORD PTR [ebp+0xc]
  414344:	mov    bx,WORD PTR [ebp+0x8]
  414348:	cmp    bx,di
  41434b:	jne    0x41440c
  414351:	mov    edi,DWORD PTR [ebp-0x28]
  414354:	mov    ebx,DWORD PTR [ebp-0x14]
  414357:	xor    edi,ecx
  414359:	lea    edi,[edi+ebx*1+0x3272dd]
  414360:	mov    DWORD PTR [ebp-0x14],edi
  414363:	mov    edi,DWORD PTR [ebp-0x28]
  414366:	mov    ebx,DWORD PTR [ebp-0x18]
  414369:	xor    edi,ecx
  41436b:	lea    edi,[edi+ebx*1+0x3272dd]
  414372:	mov    DWORD PTR [ebp-0x18],edi
  414375:	mov    edi,DWORD PTR [ebp-0x20]
  414378:	mov    ebx,DWORD PTR [ebp-0x14]
  41437b:	mov    di,WORD PTR [ebx+edi*2]
  41437f:	mov    WORD PTR [ebp+0x8],di
  414383:	mov    edi,DWORD PTR [ebp-0x24]
  414386:	mov    ebx,DWORD PTR [ebp-0x18]
  414389:	mov    di,WORD PTR [ebx+edi*2]
  41438d:	mov    WORD PTR [ebp+0xc],di
  414391:	mov    edi,DWORD PTR [ebp-0x10]
  414394:	mov    bx,WORD PTR [ebp+0x8]
  414398:	xor    edi,0x896
  41439e:	add    edi,esi
  4143a0:	cmp    bx,di
  4143a3:	jne    0x414289
  4143a9:	mov    esi,DWORD PTR [ebp-0x1c]
  4143ac:	xor    esi,ecx
  4143ae:	mov    ecx,DWORD PTR [ebp-0x10]
  4143b1:	add    esi,edx
  4143b3:	imul   esi,ecx
  4143b6:	mov    DWORD PTR [ebp-0x10],esi
  4143b9:	jmp    0x4143cd
  4143bb:	mov    edx,DWORD PTR [ebp-0x10]
  4143be:	xor    edx,ecx
  4143c0:	mov    ecx,DWORD PTR [ebp-0x1c]
  4143c3:	lea    ecx,[edx+ecx*1+0x3272dd]
  4143ca:	mov    DWORD PTR [ebp-0x1c],ecx
  4143cd:	mov    edx,DWORD PTR [ebp-0x20]
  4143d0:	mov    esi,DWORD PTR [ebp-0x14]
  4143d3:	mov    si,WORD PTR [esi+edx*2]
  4143d7:	mov    ecx,eax
  4143d9:	sub    si,cx
  4143dc:	mov    edx,0x8a89
  4143e1:	xor    si,dx
  4143e4:	mov    ecx,0x4e3d
  4143e9:	cmp    si,cx
  4143ec:	jne    0x414407
  4143ee:	mov    esi,DWORD PTR [ebp-0x24]
  4143f1:	mov    edi,DWORD PTR [ebp-0x18]
  4143f4:	mov    si,WORD PTR [edi+esi*2]
  4143f8:	sub    si,ax
  4143fb:	xor    si,dx
  4143fe:	cmp    si,cx
  414401:	jne    0x414407
  414403:	xor    eax,eax
  414405:	jmp    0x414413
  414407:	xor    eax,eax
  414409:	inc    eax
  41440a:	jmp    0x414413
  41440c:	mov    eax,DWORD PTR [ebp-0x1c]
  41440f:	xor    eax,ecx
  414411:	add    eax,edx
  414413:	pop    edi
  414414:	pop    esi
  414415:	pop    ebx
  414416:	leave  
  414417:	ret    0xc
  41441a:	push   ebp
  41441b:	mov    ebp,esp
  41441d:	push   ecx
  41441e:	mov    cx,WORD PTR [eax]
  414421:	push   esi
  414422:	mov    esi,0x3b4c
  414427:	sub    cx,si
  41442a:	mov    esi,0x8a89
  41442f:	xor    cx,si
  414432:	mov    esi,0x4e3d
  414437:	mov    DWORD PTR [ebp-0x4],0xf89c85b4
  41443e:	mov    edx,0xf89c85b5
  414443:	cmp    cx,si
  414446:	je     0x4144a5
  414448:	push   ebx
  414449:	push   edi
  41444a:	movzx  ecx,cx
  41444d:	mov    edi,0xffcd8d23
  414452:	mov    esi,0x7510896
  414457:	mov    ebx,0x4f99
  41445c:	cmp    cx,bx
  41445f:	jne    0x414464
  414461:	mov    DWORD PTR [ebp-0x4],edx
  414464:	lea    edx,[edi+0x1]
  414467:	xor    edx,esi
  414469:	mov    edi,edx
  41446b:	xor    edi,esi
  41446d:	mov    cx,WORD PTR [eax+edi*2+0x64e5ba]
  414475:	mov    ebx,0x3b4c
  41447a:	sub    cx,bx
  41447d:	mov    ebx,0x8a89
  414482:	xor    cx,bx
  414485:	mov    ebx,0x4e3d
  41448a:	cmp    cx,bx
  41448d:	jne    0x414457
  41448f:	mov    ecx,DWORD PTR [ebp-0x4]
  414492:	pop    edi
  414493:	pop    ebx
  414494:	cmp    ecx,0xf89c85b4
  41449a:	je     0x4144a5
  41449c:	xor    ecx,esi
  41449e:	lea    eax,[eax+ecx*2+0x64e5bc]
  4144a5:	pop    esi
  4144a6:	leave  
  4144a7:	ret    
  4144a8:	push   ebp
  4144a9:	mov    ebp,esp
  4144ab:	push   ecx
  4144ac:	push   esi
  4144ad:	push   edi
  4144ae:	mov    DWORD PTR [ebp-0x4],0xf89c85b4
  4144b5:	mov    esi,0xf89c85b5
  4144ba:	call   0x41441a
  4144bf:	mov    edi,eax
  4144c1:	mov    al,BYTE PTR [edi]
  4144c3:	add    al,0xb
  4144c5:	xor    al,0x71
  4144c7:	cmp    al,0x7a
  4144c9:	je     0x41452c
  4144cb:	mov    eax,edi
  4144cd:	mov    edx,0xffcd8d23
  4144d2:	mov    ecx,0x7510896
  4144d7:	push   ebx
  4144d8:	mov    ax,WORD PTR [eax]
  4144db:	mov    ebx,0x3b4c
  4144e0:	sub    ax,bx
  4144e3:	mov    ebx,0x8a89
  4144e8:	xor    ax,bx
  4144eb:	mov    ebx,0x4e6b
  4144f0:	cmp    ax,bx
  4144f3:	jne    0x4144f8
  4144f5:	mov    DWORD PTR [ebp-0x4],esi
  4144f8:	lea    esi,[edx+0x1]
  4144fb:	xor    esi,ecx
  4144fd:	mov    edx,esi
  4144ff:	xor    edx,ecx
  414501:	lea    eax,[edi+edx*2+0x64e5ba]
  414508:	mov    bl,BYTE PTR [eax]
  41450a:	add    bl,0xb
  41450d:	xor    bl,0x71
  414510:	cmp    bl,0x7a
  414513:	jne    0x4144d8
  414515:	mov    eax,DWORD PTR [ebp-0x4]
  414518:	pop    ebx
  414519:	cmp    eax,0xf89c85b4
  41451e:	je     0x41452c
  414520:	xor    eax,ecx
  414522:	xor    ecx,ecx
  414524:	mov    WORD PTR [edi+eax*2+0x64e5ba],cx
  41452c:	mov    eax,edi
  41452e:	pop    edi
  41452f:	pop    esi
  414530:	leave  
  414531:	ret    
  414532:	push   ebp
  414533:	mov    ebp,esp
  414535:	push   ecx
  414536:	push   esi
  414537:	mov    DWORD PTR [ebp-0x4],0xf89c85b4
  41453e:	mov    esi,0xf89c85b5
  414543:	call   0x41441a
  414548:	mov    cx,WORD PTR [eax]
  41454b:	mov    edx,0x3b4c
  414550:	sub    cx,dx
  414553:	mov    edx,0x8a89
  414558:	xor    cx,dx
  41455b:	mov    edx,0x4e3d
  414560:	cmp    cx,dx
  414563:	je     0x4145bc
  414565:	push   ebx
  414566:	push   edi
  414567:	movzx  ecx,cx
  41456a:	mov    edx,0xffcd8d23
  41456f:	mov    edi,0x7510896
  414574:	mov    ebx,0x4e6b
  414579:	cmp    cx,bx
  41457c:	jne    0x414581
  41457e:	mov    DWORD PTR [ebp-0x4],esi
  414581:	lea    esi,[edx+0x1]
  414584:	xor    esi,edi
  414586:	mov    edx,esi
  414588:	xor    edx,edi
  41458a:	mov    cx,WORD PTR [eax+edx*2+0x64e5ba]
  414592:	mov    ebx,0x3b4c
  414597:	sub    cx,bx
  41459a:	mov    ebx,0x8a89
  41459f:	xor    cx,bx
  4145a2:	mov    ebx,0x4e3d
  4145a7:	cmp    cx,bx
  4145aa:	jne    0x414574
  4145ac:	cmp    DWORD PTR [ebp-0x4],0xf89c85b4
  4145b3:	pop    edi
  4145b4:	pop    ebx
  4145b5:	je     0x4145bc
  4145b7:	xor    eax,eax
  4145b9:	inc    eax
  4145ba:	jmp    0x4145be
  4145bc:	xor    eax,eax
  4145be:	pop    esi
  4145bf:	leave  
  4145c0:	ret    
  4145c1:	push   ebp
  4145c2:	mov    ebp,esp
  4145c4:	push   ecx
  4145c5:	mov    eax,DWORD PTR [ebp+0x8]
  4145c8:	movzx  ecx,WORD PTR [eax]
  4145cb:	push   esi
  4145cc:	lea    eax,[ecx-0x3b4c]
  4145d2:	mov    esi,0x8a89
  4145d7:	push   edi
  4145d8:	xor    eax,esi
  4145da:	mov    edi,0x4e3d
  4145df:	mov    DWORD PTR [ebp-0x4],edx
  4145e2:	cmp    ax,di
  4145e5:	je     0x414612
  4145e7:	mov    eax,DWORD PTR [ebp+0x8]
  4145ea:	sub    eax,edx
  4145ec:	mov    DWORD PTR [ebp+0x8],eax
  4145ef:	jmp    0x4145f4
  4145f1:	mov    eax,DWORD PTR [ebp+0x8]
  4145f4:	mov    WORD PTR [edx],cx
  4145f7:	add    edx,0x2
  4145fa:	movzx  edi,WORD PTR [eax+edx*1]
  4145fe:	mov    ecx,edi
  414600:	add    edi,0xffffc4b4
  414606:	xor    edi,esi
  414608:	mov    eax,0x4e3d
  41460d:	cmp    di,ax
  414610:	jne    0x4145f1
  414612:	xor    eax,eax
  414614:	pop    edi
  414615:	mov    WORD PTR [edx],ax
  414618:	mov    eax,DWORD PTR [ebp-0x4]
  41461b:	pop    esi
  41461c:	leave  
  41461d:	ret    0x4
  414620:	push   ebp
  414621:	mov    ebp,esp
  414623:	sub    esp,0x18
  414626:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  41462d:	mov    DWORD PTR [ebp-0x18],0xf89c85b2
  414634:	mov    eax,DWORD PTR [ebp-0x14]
  414637:	xor    eax,0x7510896
  41463c:	add    eax,0x3272dd
  414641:	mov    DWORD PTR [ebp-0x8],eax
  414644:	mov    DWORD PTR [ebp-0x10],0xf89c85bd
  41464b:	mov    DWORD PTR [ebp-0xc],0xf89c85b1
  414652:	mov    DWORD PTR [ebp-0x4],0xf89c85b3
  414659:	mov    eax,DWORD PTR [ebp-0x14]
  41465c:	xor    eax,0x7510896
  414661:	mov    ecx,DWORD PTR [ebp-0x8]
  414664:	lea    eax,[ecx+eax*1+0x3272dd]
  41466b:	mov    ecx,DWORD PTR [ebp-0x18]
  41466e:	xor    ecx,0x7510896
  414674:	add    ecx,0x3272dd
  41467a:	mov    edx,DWORD PTR [ebp+0x10]
  41467d:	imul   edx,ecx
  414680:	cmp    eax,edx
  414682:	jae    0x414775
  414688:	mov    eax,DWORD PTR [ebp+0x10]
  41468b:	mov    ecx,DWORD PTR [ebp-0x8]
  41468e:	sub    eax,ecx
  414690:	mov    ecx,DWORD PTR [ebp-0x10]
  414693:	xor    ecx,0x7510896
  414699:	add    ecx,0x3272dd
  41469f:	cmp    eax,ecx
  4146a1:	jbe    0x4146d3
  4146a3:	mov    eax,DWORD PTR [ebp+0x8]
  4146a6:	add    eax,DWORD PTR [ebp-0x8]
  4146a9:	mov    ecx,DWORD PTR [ebp+0xc]
  4146ac:	add    ecx,DWORD PTR [ebp-0x8]
  4146af:	mov    edx,DWORD PTR [ecx]
  4146b1:	mov    DWORD PTR [eax],edx
  4146b3:	mov    ecx,DWORD PTR [ecx+0x4]
  4146b6:	mov    DWORD PTR [eax+0x4],ecx
  4146b9:	mov    eax,DWORD PTR [ebp-0x10]
  4146bc:	xor    eax,0x7510896
  4146c1:	mov    ecx,DWORD PTR [ebp-0x8]
  4146c4:	lea    eax,[ecx+eax*1+0x3272dd]
  4146cb:	mov    DWORD PTR [ebp-0x8],eax
  4146ce:	jmp    0x414770
  4146d3:	mov    eax,DWORD PTR [ebp+0x10]
  4146d6:	mov    ecx,DWORD PTR [ebp-0x8]
  4146d9:	sub    eax,ecx
  4146db:	mov    ecx,DWORD PTR [ebp-0xc]
  4146de:	xor    ecx,0x7510896
  4146e4:	add    ecx,0x3272dd
  4146ea:	cmp    eax,ecx
  4146ec:	jbe    0x414715
  4146ee:	mov    eax,DWORD PTR [ebp+0x8]
  4146f1:	add    eax,DWORD PTR [ebp-0x8]
  4146f4:	mov    ecx,DWORD PTR [ebp+0xc]
  4146f7:	add    ecx,DWORD PTR [ebp-0x8]
  4146fa:	mov    ecx,DWORD PTR [ecx]
  4146fc:	mov    DWORD PTR [eax],ecx
  4146fe:	mov    eax,DWORD PTR [ebp-0xc]
  414701:	xor    eax,0x7510896
  414706:	mov    ecx,DWORD PTR [ebp-0x8]
  414709:	lea    eax,[ecx+eax*1+0x3272dd]
  414710:	mov    DWORD PTR [ebp-0x8],eax
  414713:	jmp    0x414770
  414715:	mov    eax,DWORD PTR [ebp+0x10]
  414718:	mov    ecx,DWORD PTR [ebp-0x8]
  41471b:	sub    eax,ecx
  41471d:	mov    ecx,DWORD PTR [ebp-0x4]
  414720:	xor    ecx,0x7510896
  414726:	add    ecx,0x3272dd
  41472c:	cmp    eax,ecx
  41472e:	jbe    0x414759
  414730:	mov    eax,DWORD PTR [ebp+0x8]
  414733:	add    eax,DWORD PTR [ebp-0x8]
  414736:	mov    ecx,DWORD PTR [ebp+0xc]
  414739:	add    ecx,DWORD PTR [ebp-0x8]
  41473c:	mov    cx,WORD PTR [ecx]
  41473f:	mov    WORD PTR [eax],cx
  414742:	mov    eax,DWORD PTR [ebp-0x4]
  414745:	xor    eax,0x7510896
  41474a:	mov    ecx,DWORD PTR [ebp-0x8]
  41474d:	lea    eax,[ecx+eax*1+0x3272dd]
  414754:	mov    DWORD PTR [ebp-0x8],eax
  414757:	jmp    0x414770
  414759:	mov    eax,DWORD PTR [ebp+0x8]
  41475c:	add    eax,DWORD PTR [ebp-0x8]
  41475f:	mov    ecx,DWORD PTR [ebp+0xc]
  414762:	add    ecx,DWORD PTR [ebp-0x8]
  414765:	mov    cl,BYTE PTR [ecx]
  414767:	mov    BYTE PTR [eax],cl
  414769:	mov    eax,DWORD PTR [ebp-0x8]
  41476c:	inc    eax
  41476d:	mov    DWORD PTR [ebp-0x8],eax
  414770:	jmp    0x414659
  414775:	leave  
  414776:	ret    0xc
  414779:	push   ebp
  41477a:	mov    ebp,esp
  41477c:	push   ecx
  41477d:	push   ecx
  41477e:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  414785:	mov    DWORD PTR [ebp-0x8],0xf89c85b2
  41478c:	xor    eax,eax
  41478e:	inc    eax
  41478f:	je     0x4147d1
  414791:	mov    eax,DWORD PTR [ebp-0x4]
  414794:	xor    eax,0x7510896
  414799:	add    eax,0x3272dd
  41479e:	cmp    DWORD PTR [ebp+0xc],eax
  4147a1:	jne    0x4147a5
  4147a3:	jmp    0x4147d1
  4147a5:	mov    eax,DWORD PTR [ebp-0x8]
  4147a8:	xor    eax,0x7510896
  4147ad:	add    eax,0x3272dd
  4147b2:	mov    ecx,DWORD PTR [ebp+0xc]
  4147b5:	sub    ecx,eax
  4147b7:	mov    DWORD PTR [ebp+0xc],ecx
  4147ba:	mov    eax,DWORD PTR [ebp-0x4]
  4147bd:	xor    eax,0x7510896
  4147c2:	add    eax,0x3272dd
  4147c7:	mov    ecx,DWORD PTR [ebp+0x8]
  4147ca:	add    ecx,DWORD PTR [ebp+0xc]
  4147cd:	mov    BYTE PTR [ecx],al
  4147cf:	jmp    0x41478c
  4147d1:	leave  
  4147d2:	ret    0x8
  4147d5:	push   ebp
  4147d6:	mov    ebp,esp
  4147d8:	sub    esp,0x21c
  4147de:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  4147e5:	mov    DWORD PTR [ebp-0x14],0xf89c85b2
  4147ec:	mov    eax,DWORD PTR [ebp+0x10]
  4147ef:	mov    eax,DWORD PTR [ebp-0x4]
  4147f2:	mov    ecx,DWORD PTR [ebp+0x8]
  4147f5:	push   esi
  4147f6:	push   edi
  4147f7:	mov    edi,0x7510896
  4147fc:	xor    eax,edi
  4147fe:	mov    esi,0x3272dd
  414803:	add    eax,esi
  414805:	cmp    eax,ecx
  414807:	mov    eax,DWORD PTR [ebp-0x4]
  41480a:	jne    0x414815
  41480c:	xor    eax,edi
  41480e:	add    eax,esi
  414810:	jmp    0x4148c1
  414815:	mov    ecx,DWORD PTR [ebp+0xc]
  414818:	xor    eax,edi
  41481a:	add    eax,esi
  41481c:	cmp    eax,ecx
  41481e:	jne    0x414825
  414820:	mov    eax,DWORD PTR [ebp-0x4]
  414823:	jmp    0x41480c
  414825:	lea    eax,[ebp-0x21c]
  41482b:	mov    DWORD PTR [ebp-0x8],eax
  41482e:	mov    eax,DWORD PTR [ebp+0xc]
  414831:	mov    DWORD PTR [ebp-0x10],eax
  414834:	mov    eax,DWORD PTR [ebp-0x4]
  414837:	xor    eax,edi
  414839:	add    eax,esi
  41483b:	mov    DWORD PTR [ebp+0x10],eax
  41483e:	mov    eax,DWORD PTR [ebp+0xc]
  414841:	push   ebx
  414842:	call   0x414532
  414847:	mov    ebx,eax
  414849:	mov    eax,DWORD PTR [ebp+0x8]
  41484c:	mov    eax,DWORD PTR [eax+0x14]
  41484f:	jmp    0x4148a9
  414851:	mov    eax,DWORD PTR [ebp+0xc]
  414854:	sub    eax,0x8
  414857:	mov    DWORD PTR [ebp-0xc],eax
  41485a:	mov    eax,DWORD PTR [ebp-0xc]
  41485d:	mov    eax,DWORD PTR [eax+0x28]
  414860:	call   0x41441a
  414865:	mov    DWORD PTR [ebp+0x10],eax
  414868:	push   DWORD PTR [ebp+0x10]
  41486b:	mov    edx,DWORD PTR [ebp-0x8]
  41486e:	call   0x4145c1
  414873:	mov    eax,DWORD PTR [ebp-0x4]
  414876:	xor    eax,edi
  414878:	add    eax,esi
  41487a:	cmp    eax,ebx
  41487c:	jne    0x414886
  41487e:	mov    eax,DWORD PTR [ebp-0x8]
  414881:	call   0x4144a8
  414886:	mov    eax,DWORD PTR [ebp-0x14]
  414889:	xor    eax,edi
  41488b:	add    eax,esi
  41488d:	push   eax
  41488e:	push   DWORD PTR [ebp-0x10]
  414891:	push   DWORD PTR [ebp-0x8]
  414894:	call   0x4141ac
  414899:	mov    ecx,DWORD PTR [ebp-0x4]
  41489c:	xor    ecx,edi
  41489e:	add    ecx,esi
  4148a0:	cmp    eax,ecx
  4148a2:	je     0x4148c7
  4148a4:	mov    eax,DWORD PTR [ebp+0xc]
  4148a7:	mov    eax,DWORD PTR [eax]
  4148a9:	mov    DWORD PTR [ebp+0xc],eax
  4148ac:	mov    eax,DWORD PTR [ebp+0x8]
  4148af:	mov    ecx,DWORD PTR [ebp+0xc]
  4148b2:	add    eax,0x14
  4148b5:	cmp    ecx,eax
  4148b7:	jne    0x414851
  4148b9:	mov    eax,DWORD PTR [ebp-0x4]
  4148bc:	xor    eax,edi
  4148be:	add    eax,esi
  4148c0:	pop    ebx
  4148c1:	pop    edi
  4148c2:	pop    esi
  4148c3:	leave  
  4148c4:	ret    0xc
  4148c7:	mov    eax,DWORD PTR [ebp-0xc]
  4148ca:	mov    eax,DWORD PTR [eax+0x18]
  4148cd:	jmp    0x4148c0
  4148cf:	push   ebp
  4148d0:	mov    ebp,esp
  4148d2:	mov    eax,DWORD PTR [ebp+0xc]
  4148d5:	sub    esp,0x10
  4148d8:	cmp    DWORD PTR [ebp+0x8],0x0
  4148dc:	push   ebx
  4148dd:	push   esi
  4148de:	push   edi
  4148df:	je     0x414994
  4148e5:	test   eax,eax
  4148e7:	je     0x414994
  4148ed:	movzx  eax,WORD PTR [eax+0x20]
  4148f1:	mov    ecx,eax
  4148f3:	mov    DWORD PTR [ebp-0x10],eax
  4148f6:	xor    edx,edx
  4148f8:	and    DWORD PTR [ebp-0x8],edx
  4148fb:	mov    eax,0x8a89
  414900:	xor    ecx,eax
  414902:	add    ecx,0x3b4c
  414908:	mov    DWORD PTR [ebp-0xc],ecx
  41490b:	and    DWORD PTR [ebp-0x4],0x0
  41490f:	xor    ecx,ecx
  414911:	push   0x7c
  414913:	pop    edi
  414914:	cmp    cx,WORD PTR [ebp-0xc]
  414918:	jae    0x41497e
  41491a:	lea    esi,[edx-0x3b4c]
  414920:	xor    esi,eax
  414922:	movzx  ecx,WORD PTR [ebp-0x4]
  414926:	mov    ebx,DWORD PTR [ebp+0xc]
  414929:	lea    ecx,[ebx+ecx*4]
  41492c:	cmp    WORD PTR [ecx+0x2],si
  414930:	jne    0x414969
  414932:	movzx  ecx,WORD PTR [ecx]
  414935:	mov    edi,0x4e3d
  41493a:	cmp    cx,di
  41493d:	jne    0x41494b
  41493f:	mov    ebx,DWORD PTR [ebp+0x8]
  414942:	movzx  edi,dx
  414945:	cmp    BYTE PTR [edi+ebx*1],0x0
  414949:	je     0x414978
  41494b:	mov    ebx,DWORD PTR [ebp+0x8]
  41494e:	movzx  edi,dx
  414951:	movsx  di,BYTE PTR [edi+ebx*1]
  414956:	mov    ebx,0x3b4c
  41495b:	sub    di,bx
  41495e:	xor    di,ax
  414961:	cmp    cx,di
  414964:	je     0x414978
  414966:	push   0x7a
  414968:	pop    edi
  414969:	inc    DWORD PTR [ebp-0x4]
  41496c:	mov    cx,WORD PTR [ebp-0xc]
  414970:	cmp    WORD PTR [ebp-0x4],cx
  414974:	jb     0x414922
  414976:	jmp    0x41497e
  414978:	inc    DWORD PTR [ebp-0x8]
  41497b:	push   0x7d
  41497d:	pop    edi
  41497e:	mov    esi,DWORD PTR [ebp+0x8]
  414981:	movzx  ecx,dx
  414984:	cmp    BYTE PTR [ecx+esi*1],0x0
  414988:	je     0x41499d
  41498a:	inc    edx
  41498b:	cmp    edi,0x7a
  41498e:	jne    0x41490b
  414994:	xor    eax,eax
  414996:	pop    edi
  414997:	pop    esi
  414998:	pop    ebx
  414999:	leave  
  41499a:	ret    0x8
  41499d:	mov    ecx,DWORD PTR [ebp-0x8]
  4149a0:	add    ecx,0xffffc4b4
  4149a6:	xor    cx,ax
  4149a9:	xor    eax,eax
  4149ab:	cmp    cx,WORD PTR [ebp-0x10]
  4149af:	sete   al
  4149b2:	jmp    0x414996
  4149b4:	push   ebp
  4149b5:	mov    ebp,esp
  4149b7:	sub    esp,0x50
  4149ba:	push   edi
  4149bb:	mov    edi,eax
  4149bd:	mov    eax,DWORD PTR [edi+0x1a8]
  4149c3:	cmp    DWORD PTR [eax],0x0
  4149c6:	jne    0x4149cf
  4149c8:	xor    eax,eax
  4149ca:	jmp    0x414aff
  4149cf:	push   0x2c
  4149d1:	push   DWORD PTR [ebp+0x8]
  4149d4:	call   0x414779
  4149d9:	mov    edx,DWORD PTR [edi+0x1ac]
  4149df:	lea    eax,[edi+0x22]
  4149e2:	mov    DWORD PTR [ebp-0x4c],eax
  4149e5:	lea    eax,[edi+0x44]
  4149e8:	mov    DWORD PTR [ebp-0x48],eax
  4149eb:	lea    eax,[edi+0x66]
  4149ee:	mov    DWORD PTR [ebp-0x44],eax
  4149f1:	lea    eax,[edi+0x88]
  4149f7:	mov    DWORD PTR [ebp-0x40],eax
  4149fa:	lea    eax,[edi+0xaa]
  414a00:	mov    DWORD PTR [ebp-0x3c],eax
  414a03:	lea    eax,[edi+0xcc]
  414a09:	mov    DWORD PTR [ebp-0x38],eax
  414a0c:	lea    eax,[edi+0xee]
  414a12:	mov    DWORD PTR [ebp-0x34],eax
  414a15:	lea    eax,[edi+0x110]
  414a1b:	mov    DWORD PTR [ebp-0x30],eax
  414a1e:	lea    eax,[edi+0x132]
  414a24:	mov    DWORD PTR [ebp-0x2c],eax
  414a27:	lea    eax,[edi+0x154]
  414a2d:	push   edi
  414a2e:	mov    DWORD PTR [ebp-0x50],edi
  414a31:	mov    DWORD PTR [ebp-0x28],eax
  414a34:	call   0x414b33
  414a39:	push   eax
  414a3a:	mov    eax,DWORD PTR [edi+0x1a8]
  414a40:	push   DWORD PTR [eax]
  414a42:	call   0x4147d5
  414a47:	mov    DWORD PTR [ebp-0x10],eax
  414a4a:	test   eax,eax
  414a4c:	je     0x414aff
  414a52:	mov    ecx,DWORD PTR [eax+0x3c]
  414a55:	push   ebx
  414a56:	push   esi
  414a57:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  414a5b:	add    esi,eax
  414a5d:	mov    edi,DWORD PTR [esi+0x24]
  414a60:	mov    ecx,DWORD PTR [esi+0x1c]
  414a63:	mov    edx,DWORD PTR [esi+0x20]
  414a66:	mov    ebx,DWORD PTR [esi+0x18]
  414a69:	add    edi,eax
  414a6b:	mov    DWORD PTR [ebp-0x20],edi
  414a6e:	mov    edi,DWORD PTR [esi+0x14]
  414a71:	add    ecx,eax
  414a73:	add    edx,eax
  414a75:	mov    DWORD PTR [ebp-0xc],ecx
  414a78:	mov    DWORD PTR [ebp-0x1c],edx
  414a7b:	mov    DWORD PTR [ebp-0x8],edi
  414a7e:	cmp    edi,ebx
  414a80:	ja     0x414a85
  414a82:	mov    DWORD PTR [ebp-0x8],ebx
  414a85:	xor    ebx,ebx
  414a87:	mov    DWORD PTR [ebp-0x18],ebx
  414a8a:	cmp    DWORD PTR [ebp-0x8],ebx
  414a8d:	jbe    0x414afd
  414a8f:	jmp    0x414a94
  414a91:	mov    edx,DWORD PTR [ebp-0x1c]
  414a94:	mov    edi,DWORD PTR [ebp-0x20]
  414a97:	movzx  edi,WORD PTR [edi+ebx*2]
  414a9b:	cmp    ebx,DWORD PTR [esi+0x18]
  414a9e:	jae    0x414afd
  414aa0:	cmp    edi,DWORD PTR [esi+0x14]
  414aa3:	jae    0x414afd
  414aa5:	mov    ebx,DWORD PTR [edx+ebx*4]
  414aa8:	mov    edx,DWORD PTR [ebp+0x8]
  414aab:	mov    edi,DWORD PTR [ecx+edi*4]
  414aae:	mov    DWORD PTR [ebp-0x4],edx
  414ab1:	lea    edx,[ebp-0x50]
  414ab4:	add    ebx,eax
  414ab6:	add    edi,eax
  414ab8:	sub    edx,DWORD PTR [ebp+0x8]
  414abb:	mov    DWORD PTR [ebp-0x14],0xb
  414ac2:	mov    DWORD PTR [ebp-0x24],edx
  414ac5:	mov    edx,DWORD PTR [ebp-0x4]
  414ac8:	cmp    DWORD PTR [edx],0x0
  414acb:	jne    0x414ae8
  414acd:	mov    eax,DWORD PTR [ebp-0x24]
  414ad0:	push   DWORD PTR [eax+edx*1]
  414ad3:	push   ebx
  414ad4:	call   0x4148cf
  414ad9:	mov    ecx,DWORD PTR [ebp-0xc]
  414adc:	test   eax,eax
  414ade:	je     0x414ae5
  414ae0:	mov    eax,DWORD PTR [ebp-0x4]
  414ae3:	mov    DWORD PTR [eax],edi
  414ae5:	mov    eax,DWORD PTR [ebp-0x10]
  414ae8:	add    DWORD PTR [ebp-0x4],0x4
  414aec:	dec    DWORD PTR [ebp-0x14]
  414aef:	jne    0x414ac5
  414af1:	mov    ebx,DWORD PTR [ebp-0x18]
  414af4:	inc    ebx
  414af5:	mov    DWORD PTR [ebp-0x18],ebx
  414af8:	cmp    ebx,DWORD PTR [ebp-0x8]
  414afb:	jb     0x414a91
  414afd:	pop    esi
  414afe:	pop    ebx
  414aff:	pop    edi
  414b00:	leave  
  414b01:	ret    0x4
  414b04:	push   ebp
  414b05:	mov    ebp,esp
  414b07:	mov    eax,DWORD PTR [ebp+0x8]
  414b0a:	push   esi
  414b0b:	push   DWORD PTR [eax+0x1d8]
  414b11:	lea    esi,[eax+0x198]
  414b17:	mov    eax,DWORD PTR [ebp+0x8]
  414b1a:	call   0x4149b4
  414b1f:	mov    ecx,DWORD PTR [esi]
  414b21:	mov    DWORD PTR [ecx],eax
  414b23:	mov    eax,DWORD PTR [esi]
  414b25:	xor    ecx,ecx
  414b27:	cmp    DWORD PTR [eax],ecx
  414b29:	pop    esi
  414b2a:	setne  cl
  414b2d:	mov    eax,ecx
  414b2f:	pop    ebp
  414b30:	ret    0x4
  414b33:	mov    ecx,DWORD PTR [edi+0x188]
  414b39:	push   ebx
  414b3a:	jmp    0x414b4f
  414b3c:	xor    eax,0x8a89
  414b41:	add    eax,0x3b4c
  414b46:	mov    WORD PTR [ecx],ax
  414b49:	add    ecx,0x2
  414b4c:	add    edx,0x2
  414b4f:	movzx  eax,WORD PTR [edx]
  414b52:	mov    ebx,0x4e3d
  414b57:	cmp    ax,bx
  414b5a:	jne    0x414b3c
  414b5c:	xor    eax,eax
  414b5e:	mov    WORD PTR [ecx],ax
  414b61:	mov    eax,DWORD PTR [edi+0x188]
  414b67:	pop    ebx
  414b68:	ret    
  414b69:	push   edi
  414b6a:	mov    edi,eax
  414b6c:	mov    eax,DWORD PTR [esi+0x188]
  414b72:	shl    edi,0x6
  414b75:	add    eax,edi
  414b77:	jmp    0x414b83
  414b79:	xor    cl,0x71
  414b7c:	sub    cl,0xb
  414b7f:	mov    BYTE PTR [eax],cl
  414b81:	inc    eax
  414b82:	inc    edx
  414b83:	mov    cl,BYTE PTR [edx]
  414b85:	cmp    cl,0x7a
  414b88:	jne    0x414b79
  414b8a:	mov    BYTE PTR [eax],0x0
  414b8d:	mov    eax,DWORD PTR [esi+0x188]
  414b93:	add    eax,edi
  414b95:	pop    edi
  414b96:	ret    
  414b97:	push   ebp
  414b98:	mov    ebp,esp
  414b9a:	sub    esp,0x38
  414b9d:	push   ebx
  414b9e:	mov    ebx,0xf89c85b5
  414ba3:	mov    DWORD PTR [ebp-0x4],ebx
  414ba6:	lea    eax,[ebx-0x3]
  414ba9:	push   esi
  414baa:	mov    DWORD PTR [ebp-0x24],eax
  414bad:	mov    ecx,DWORD PTR [ebp-0x4]
  414bb0:	mov    edx,DWORD PTR [ebp+0x8]
  414bb3:	mov    esi,0x7510896
  414bb8:	push   edi
  414bb9:	xor    ecx,esi
  414bbb:	mov    edi,0x3272dd
  414bc0:	add    ecx,edi
  414bc2:	cmp    edx,ecx
  414bc4:	je     0x414d32
  414bca:	mov    ecx,DWORD PTR [ebp-0x4]
  414bcd:	mov    edx,DWORD PTR [ebp+0xc]
  414bd0:	xor    ecx,esi
  414bd2:	add    ecx,edi
  414bd4:	cmp    edx,ecx
  414bd6:	je     0x414d32
  414bdc:	mov    ecx,DWORD PTR [ebp+0x10]
  414bdf:	mov    DWORD PTR [ebp-0x18],ecx
  414be2:	mov    ecx,DWORD PTR [ebp+0xc]
  414be5:	mov    DWORD PTR [ebp-0x14],ecx
  414be8:	mov    ecx,DWORD PTR [ebp+0x8]
  414beb:	mov    DWORD PTR [ebp-0x1c],0xf89c8508
  414bf2:	mov    DWORD PTR [ebp-0x20],eax
  414bf5:	mov    DWORD PTR [ebp-0x10],ebx
  414bf8:	mov    DWORD PTR [ebp+0xc],eax
  414bfb:	mov    DWORD PTR [ebp+0x10],0xf89c85b3
  414c02:	mov    eax,DWORD PTR [ebp+0xc]
  414c05:	mov    DWORD PTR [ebp-0xc],ecx
  414c08:	xor    eax,esi
  414c0a:	mov    ecx,0xffcd8d23
  414c0f:	sub    ecx,eax
  414c11:	add    ecx,DWORD PTR [ebp-0x14]
  414c14:	mov    DWORD PTR [ebp+0x8],ecx
  414c17:	mov    DWORD PTR [ebp-0x8],0xf89c85be
  414c1e:	jmp    0x414d22
  414c23:	mov    eax,DWORD PTR [ebp+0xc]
  414c26:	mov    ecx,DWORD PTR [ebp+0xc]
  414c29:	xor    eax,esi
  414c2b:	xor    ecx,esi
  414c2d:	lea    ecx,[eax+ecx*1+0x64e5ba]
  414c34:	mov    eax,DWORD PTR [ebp+0x8]
  414c37:	xor    edx,edx
  414c39:	div    ecx
  414c3b:	mov    eax,DWORD PTR [ebp+0x10]
  414c3e:	mov    ecx,DWORD PTR [ebp+0xc]
  414c41:	xor    eax,esi
  414c43:	xor    ecx,esi
  414c45:	sub    eax,ecx
  414c47:	cmp    edx,eax
  414c49:	jne    0x414cde
  414c4f:	mov    eax,DWORD PTR [ebp+0x8]
  414c52:	add    eax,DWORD PTR [ebp-0xc]
  414c55:	mov    dl,BYTE PTR [eax]
  414c57:	mov    eax,DWORD PTR [ebp-0x10]
  414c5a:	mov    ecx,DWORD PTR [ebp-0x8]
  414c5d:	xor    eax,esi
  414c5f:	xor    ecx,esi
  414c61:	add    eax,edi
  414c63:	add    ecx,edi
  414c65:	cmp    eax,ecx
  414c67:	jae    0x414caf
  414c69:	lea    ecx,[eax-0x3272dd]
  414c6f:	mov    DWORD PTR [ebp-0x4],ecx
  414c72:	mov    ebx,DWORD PTR [ebp-0x4]
  414c75:	xor    ebx,esi
  414c77:	add    ebx,0x7f55d8f3
  414c7d:	lea    ecx,[ebp+eax*4-0x38]
  414c81:	mov    DWORD PTR [ecx],ebx
  414c83:	mov    ebx,DWORD PTR [ecx]
  414c85:	cmp    ebx,0x244ecbd0
  414c8b:	jbe    0x414c95
  414c8d:	add    DWORD PTR [ecx],0x405fc11
  414c93:	jmp    0x414c9b
  414c95:	add    DWORD PTR [ecx],0xfdaf43ef
  414c9b:	mov    ecx,DWORD PTR [ebp-0x8]
  414c9e:	xor    ecx,esi
  414ca0:	inc    eax
  414ca1:	inc    DWORD PTR [ebp-0x4]
  414ca4:	add    ecx,edi
  414ca6:	cmp    eax,ecx
  414ca8:	jb     0x414c72
  414caa:	mov    ebx,0xf89c85b5
  414caf:	mov    eax,DWORD PTR [ebp-0x18]
  414cb2:	test   eax,eax
  414cb4:	jne    0x414cbe
  414cb6:	xor    dl,0x71
  414cb9:	sub    dl,0xb
  414cbc:	jmp    0x414cd4
  414cbe:	mov    eax,DWORD PTR [ebp-0x1c]
  414cc1:	xor    al,0x96
  414cc3:	mov    cl,0x23
  414cc5:	sub    cl,al
  414cc7:	add    dl,cl
  414cc9:	mov    ecx,DWORD PTR [ebp-0x20]
  414ccc:	xor    cl,0x96
  414ccf:	sub    cl,0x23
  414cd2:	ror    dl,cl
  414cd4:	xor    eax,eax
  414cd6:	mov    eax,DWORD PTR [ebp+0x8]
  414cd9:	add    eax,DWORD PTR [ebp-0xc]
  414cdc:	mov    BYTE PTR [eax],dl
  414cde:	mov    eax,DWORD PTR [ebp+0x8]
  414ce1:	mov    ecx,DWORD PTR [ebp-0x10]
  414ce4:	sub    eax,edi
  414ce6:	xor    eax,esi
  414ce8:	cmp    eax,ecx
  414cea:	jne    0x414d10
  414cec:	mov    eax,DWORD PTR [ebp+0x10]
  414cef:	mov    ecx,DWORD PTR [ebp+0xc]
  414cf2:	xor    eax,esi
  414cf4:	xor    ecx,esi
  414cf6:	sub    eax,ecx
  414cf8:	sub    eax,edi
  414cfa:	xor    eax,esi
  414cfc:	mov    DWORD PTR [ebp+0x10],eax
  414cff:	mov    eax,DWORD PTR [ebp+0xc]
  414d02:	xor    eax,esi
  414d04:	mov    ecx,0xffcd8d23
  414d09:	sub    ecx,eax
  414d0b:	add    ecx,DWORD PTR [ebp-0x14]
  414d0e:	jmp    0x414d1f
  414d10:	mov    eax,DWORD PTR [ebp+0xc]
  414d13:	xor    eax,esi
  414d15:	mov    ecx,0xffcd8d23
  414d1a:	sub    ecx,eax
  414d1c:	add    ecx,DWORD PTR [ebp+0x8]
  414d1f:	mov    DWORD PTR [ebp+0x8],ecx
  414d22:	mov    eax,DWORD PTR [ebp+0x10]
  414d25:	cmp    eax,ebx
  414d27:	jne    0x414c23
  414d2d:	mov    eax,DWORD PTR [ebp-0x24]
  414d30:	jmp    0x414d35
  414d32:	mov    eax,DWORD PTR [ebp-0x4]
  414d35:	xor    eax,esi
  414d37:	add    eax,edi
  414d39:	pop    edi
  414d3a:	pop    esi
  414d3b:	pop    ebx
  414d3c:	leave  
  414d3d:	ret    0xc
  414d40:	push   ebp
  414d41:	mov    ebp,esp
  414d43:	sub    esp,0x14
  414d46:	mov    DWORD PTR [ebp-0x10],0xf89c85b5
  414d4d:	mov    DWORD PTR [ebp-0x4],0xf89c85b2
  414d54:	mov    eax,DWORD PTR [ebx]
  414d56:	mov    DWORD PTR [ebp-0x8],eax
  414d59:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  414d60:	push   esi
  414d61:	push   edi
  414d62:	mov    DWORD PTR [ebp-0x14],0xead718d5
  414d69:	mov    edi,DWORD PTR [ebp-0x4]
  414d6c:	mov    ecx,DWORD PTR [ebp-0x10]
  414d6f:	mov    eax,0x7510896
  414d74:	xor    edi,eax
  414d76:	mov    edx,0x3272dd
  414d7b:	xor    ecx,eax
  414d7d:	add    edi,edx
  414d7f:	add    ecx,edx
  414d81:	imul   edi,ecx
  414d84:	jmp    0x414dcc
  414d86:	mov    ecx,DWORD PTR [ebp-0x8]
  414d89:	mov    esi,DWORD PTR [ebp-0x4]
  414d8c:	xor    ecx,eax
  414d8e:	xor    esi,eax
  414d90:	add    ecx,edx
  414d92:	add    esi,edx
  414d94:	test   esi,ecx
  414d96:	mov    esi,DWORD PTR [ebp-0x8]
  414d99:	mov    ecx,DWORD PTR [ebp-0x4]
  414d9c:	je     0x414db3
  414d9e:	xor    ecx,eax
  414da0:	xor    esi,eax
  414da2:	add    ecx,edx
  414da4:	add    esi,edx
  414da6:	shr    esi,cl
  414da8:	mov    ecx,DWORD PTR [ebp-0x14]
  414dab:	xor    ecx,eax
  414dad:	add    ecx,edx
  414daf:	xor    esi,ecx
  414db1:	jmp    0x414dbd
  414db3:	xor    esi,eax
  414db5:	xor    ecx,eax
  414db7:	add    esi,edx
  414db9:	add    ecx,edx
  414dbb:	shr    esi,cl
  414dbd:	mov    DWORD PTR [ebp-0x8],esi
  414dc0:	mov    ecx,DWORD PTR [ebp-0x4]
  414dc3:	xor    ecx,eax
  414dc5:	lea    edi,[edi+ecx*1+0x3272dd]
  414dcc:	mov    ecx,DWORD PTR [ebp-0xc]
  414dcf:	mov    esi,DWORD PTR [ebp-0x4]
  414dd2:	xor    esi,eax
  414dd4:	xor    ecx,eax
  414dd6:	sub    ecx,esi
  414dd8:	cmp    edi,ecx
  414dda:	jbe    0x414d86
  414ddc:	mov    eax,DWORD PTR [ebp-0x8]
  414ddf:	pop    edi
  414de0:	mov    DWORD PTR [ebx],eax
  414de2:	mov    eax,DWORD PTR [ebp-0x8]
  414de5:	pop    esi
  414de6:	leave  
  414de7:	ret    
  414de8:	push   ebp
  414de9:	mov    ebp,esp
  414deb:	sub    esp,0x420
  414df1:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  414df8:	mov    DWORD PTR [ebp-0xc],0xf89c85b2
  414dff:	mov    DWORD PTR [ebp-0x18],0xf89c86b5
  414e06:	push   ebx
  414e07:	mov    DWORD PTR [ebp-0x1c],0xf89c85b4
  414e0e:	mov    eax,DWORD PTR [ebp-0x14]
  414e11:	push   esi
  414e12:	mov    esi,0x7510896
  414e17:	push   edi
  414e18:	xor    eax,esi
  414e1a:	mov    edi,0x3272dd
  414e1f:	add    eax,edi
  414e21:	mov    DWORD PTR [ebp-0x8],eax
  414e24:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  414e2b:	mov    DWORD PTR [ebp-0x4],0xead718d5
  414e32:	mov    DWORD PTR [ebp-0x10],0x8
  414e39:	mov    ecx,ecx
  414e3b:	mov    eax,DWORD PTR [ebp-0xc]
  414e3e:	mov    ecx,DWORD PTR [ebp-0x14]
  414e41:	xor    eax,esi
  414e43:	xor    ecx,esi
  414e45:	add    eax,edi
  414e47:	add    ecx,edi
  414e49:	imul   eax,ecx
  414e4c:	jmp    0x414e7f
  414e4e:	mov    eax,DWORD PTR [ebp-0x4]
  414e51:	sub    eax,edi
  414e53:	xor    eax,esi
  414e55:	mov    DWORD PTR [ebp-0x8],eax
  414e58:	lea    ebx,[ebp-0x8]
  414e5b:	call   0x414d40
  414e60:	mov    DWORD PTR [ebp-0x8],eax
  414e63:	mov    eax,DWORD PTR [ebp-0x8]
  414e66:	mov    ecx,DWORD PTR [ebp-0x4]
  414e69:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  414e70:	mov    eax,DWORD PTR [ebp-0xc]
  414e73:	mov    ecx,DWORD PTR [ebp-0x4]
  414e76:	xor    eax,esi
  414e78:	lea    eax,[eax+ecx*1+0x3272dd]
  414e7f:	mov    DWORD PTR [ebp-0x4],eax
  414e82:	mov    eax,DWORD PTR [ebp-0x18]
  414e85:	mov    ecx,DWORD PTR [ebp-0xc]
  414e88:	xor    ecx,esi
  414e8a:	xor    eax,esi
  414e8c:	sub    eax,ecx
  414e8e:	mov    ecx,DWORD PTR [ebp-0x4]
  414e91:	cmp    ecx,eax
  414e93:	jbe    0x414e4e
  414e95:	mov    eax,DWORD PTR [ebp-0x1c]
  414e98:	xor    eax,esi
  414e9a:	add    eax,edi
  414e9c:	mov    DWORD PTR [ebp-0x8],eax
  414e9f:	mov    DWORD PTR [ebp-0x18],0xf89c86b4
  414ea6:	mov    ebx,ebx
  414ea8:	jmp    0x414f0b
  414eaa:	mov    ecx,DWORD PTR [ebp-0x20]
  414ead:	mov    eax,DWORD PTR [ebp-0x8]
  414eb0:	xor    ecx,esi
  414eb2:	add    ecx,edi
  414eb4:	shr    eax,cl
  414eb6:	mov    DWORD PTR [ebp-0x4],eax
  414eb9:	mov    eax,DWORD PTR [ebp+0x8]
  414ebc:	mov    cl,BYTE PTR [eax]
  414ebe:	mov    BYTE PTR [ebp+0xb],cl
  414ec1:	mov    cl,BYTE PTR [ebp+0xb]
  414ec4:	mov    edx,DWORD PTR [ebp-0x8]
  414ec7:	movzx  ecx,cl
  414eca:	xor    ecx,edx
  414ecc:	mov    DWORD PTR [ebp+0x8],ecx
  414ecf:	mov    ecx,DWORD PTR [ebp-0x18]
  414ed2:	mov    edx,DWORD PTR [ebp+0x8]
  414ed5:	xor    ecx,esi
  414ed7:	add    ecx,edi
  414ed9:	and    ecx,edx
  414edb:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  414ee2:	mov    edx,DWORD PTR [ebp-0x4]
  414ee5:	xor    ecx,edx
  414ee7:	mov    DWORD PTR [ebp-0x8],ecx
  414eea:	mov    ecx,DWORD PTR [ebp-0xc]
  414eed:	xor    ecx,esi
  414eef:	lea    eax,[eax+ecx*1+0x3272dd]
  414ef6:	mov    DWORD PTR [ebp+0x8],eax
  414ef9:	mov    eax,DWORD PTR [ebp-0xc]
  414efc:	xor    eax,esi
  414efe:	mov    ecx,0xffcd8d23
  414f03:	sub    ecx,eax
  414f05:	add    ecx,DWORD PTR [ebp-0x10]
  414f08:	mov    DWORD PTR [ebp-0x10],ecx
  414f0b:	mov    eax,DWORD PTR [ebp-0x14]
  414f0e:	mov    ecx,DWORD PTR [ebp-0x10]
  414f11:	xor    eax,esi
  414f13:	add    eax,edi
  414f15:	cmp    ecx,eax
  414f17:	jne    0x414eaa
  414f19:	mov    eax,DWORD PTR [ebp-0x1c]
  414f1c:	mov    ecx,DWORD PTR [ebp-0x8]
  414f1f:	xor    eax,esi
  414f21:	add    eax,edi
  414f23:	pop    edi
  414f24:	pop    esi
  414f25:	xor    eax,ecx
  414f27:	pop    ebx
  414f28:	leave  
  414f29:	ret    0x4
  414f2c:	push   ebp
  414f2d:	mov    ebp,esp
  414f2f:	mov    eax,DWORD PTR [ebp+0x1c]
  414f32:	mov    ecx,DWORD PTR [ebp+0x8]
  414f35:	mov    edx,DWORD PTR [ebp+0x10]
  414f38:	mov    eax,DWORD PTR [eax+0x190]
  414f3e:	mov    eax,DWORD PTR [eax]
  414f40:	sub    esp,0x64
  414f43:	push   ebx
  414f44:	push   esi
  414f45:	push   edi
  414f46:	mov    edi,0x7510896
  414f4b:	xor    ecx,edi
  414f4d:	mov    ebx,0x3272dd
  414f52:	add    ecx,ebx
  414f54:	cmp    ecx,edx
  414f56:	jne    0x414f67
  414f58:	or     DWORD PTR ds:0x3750c3f,0x4263eb0c
  414f62:	jmp    0x415464
  414f67:	mov    ecx,DWORD PTR [ebp+0x8]
  414f6a:	mov    esi,DWORD PTR [ebp+0x14]
  414f6d:	mov    edx,DWORD PTR [esi]
  414f6f:	xor    ecx,edi
  414f71:	add    ecx,ebx
  414f73:	cmp    edx,ecx
  414f75:	je     0x41541f
  414f7b:	mov    ecx,DWORD PTR [ebp+0x1c]
  414f7e:	mov    DWORD PTR [ebp-0x1c],eax
  414f81:	mov    DWORD PTR [ebp+0x1c],ecx
  414f84:	mov    ecx,DWORD PTR [ebp+0x18]
  414f87:	mov    eax,DWORD PTR [esi]
  414f89:	mov    DWORD PTR [ebp-0x20],eax
  414f8c:	mov    DWORD PTR [ebp+0x8],0xf89c85b5
  414f93:	mov    edx,0xf89c85b2
  414f98:	mov    DWORD PTR [ebp-0x8],edx
  414f9b:	mov    eax,DWORD PTR [ebp+0x1c]
  414f9e:	mov    DWORD PTR [ebp+0x1c],eax
  414fa1:	mov    eax,DWORD PTR [ebp+0x1c]
  414fa4:	mov    eax,DWORD PTR [eax+0x190]
  414faa:	mov    eax,DWORD PTR [eax]
  414fac:	mov    DWORD PTR [ebp-0x24],ecx
  414faf:	mov    ecx,DWORD PTR [ebp+0x1c]
  414fb2:	mov    ecx,DWORD PTR [ecx+0x190]
  414fb8:	mov    ecx,DWORD PTR [ecx]
  414fba:	add    ecx,DWORD PTR [eax+0x3c]
  414fbd:	mov    DWORD PTR [ebp+0x10],ecx
  414fc0:	mov    eax,DWORD PTR [ebp+0x8]
  414fc3:	xor    eax,edi
  414fc5:	add    eax,ebx
  414fc7:	mov    DWORD PTR [ebp-0x4],eax
  414fca:	mov    eax,DWORD PTR [ebp+0x8]
  414fcd:	xor    eax,edi
  414fcf:	add    eax,ebx
  414fd1:	mov    DWORD PTR [ebp+0x18],eax
  414fd4:	mov    eax,DWORD PTR [ebp+0x10]
  414fd7:	mov    eax,DWORD PTR [eax+0x50]
  414fda:	sub    eax,0xc
  414fdd:	mov    DWORD PTR [ebp-0x28],eax
  414fe0:	mov    eax,DWORD PTR [ebp+0x10]
  414fe3:	mov    eax,DWORD PTR [eax+0x38]
  414fe6:	mov    ecx,DWORD PTR [ebp+0x10]
  414fe9:	dec    eax
  414fea:	test   DWORD PTR [ecx+0x54],eax
  414fed:	mov    eax,DWORD PTR [ebp+0x10]
  414ff0:	je     0x41500a
  414ff2:	mov    eax,DWORD PTR [eax+0x38]
  414ff5:	mov    ecx,DWORD PTR [ebp+0x10]
  414ff8:	mov    ecx,DWORD PTR [ecx+0x54]
  414ffb:	dec    eax
  414ffc:	not    eax
  414ffe:	and    ecx,eax
  415000:	mov    eax,DWORD PTR [ebp+0x10]
  415003:	mov    eax,DWORD PTR [eax+0x38]
  415006:	add    eax,ecx
  415008:	jmp    0x41500d
  41500a:	mov    eax,DWORD PTR [eax+0x54]
  41500d:	mov    DWORD PTR [ebp+0x1c],eax
  415010:	mov    eax,DWORD PTR [ebp+0x8]
  415013:	xor    eax,edi
  415015:	add    eax,ebx
  415017:	mov    DWORD PTR [ebp+0x18],eax
  41501a:	mov    eax,DWORD PTR [ebp+0x8]
  41501d:	xor    eax,edi
  41501f:	add    eax,ebx
  415021:	mov    DWORD PTR [ebp+0x18],eax
  415024:	mov    eax,DWORD PTR [ebp+0x8]
  415027:	mov    ecx,DWORD PTR [ebp-0x24]
  41502a:	xor    eax,edi
  41502c:	add    eax,ebx
  41502e:	mov    DWORD PTR [ecx],eax
  415030:	mov    DWORD PTR [ebp+0x18],edx
  415033:	mov    DWORD PTR [ebp+0x18],0xf89c85b3
  41503a:	mov    DWORD PTR [ebp+0x18],0xf89c85b0
  415041:	mov    DWORD PTR [ebp+0x18],0xf89c85b1
  415048:	mov    eax,DWORD PTR [ebp-0x8]
  41504b:	mov    ecx,DWORD PTR [ebp+0x1c]
  41504e:	xor    eax,edi
  415050:	add    eax,ebx
  415052:	imul   eax,ecx
  415055:	mov    ecx,DWORD PTR [ebp+0x8]
  415058:	mov    edx,DWORD PTR [ebp-0x28]
  41505b:	xor    ecx,edi
  41505d:	lea    ecx,[ecx+edx*1+0x3272dd]
  415064:	cmp    eax,ecx
  415066:	jae    0x415418
  41506c:	mov    eax,DWORD PTR [ebp+0x8]
  41506f:	xor    eax,edi
  415071:	add    eax,ebx
  415073:	mov    DWORD PTR [ebp+0x18],eax
  415076:	mov    eax,DWORD PTR [ebp+0x1c]
  415079:	add    eax,DWORD PTR [ebp-0x1c]
  41507c:	mov    DWORD PTR [ebp-0x4],eax
  41507f:	push   DWORD PTR [ebp-0x4]
  415082:	mov    esi,DWORD PTR [ebp-0x1c]
  415085:	mov    ecx,DWORD PTR [ebp+0x10]
  415088:	call   0x41416e
  41508d:	mov    DWORD PTR [ebp+0xc],eax
  415090:	mov    DWORD PTR [ebp-0x18],0xf89c85bd
  415097:	mov    eax,DWORD PTR [ebp-0x18]
  41509a:	xor    eax,edi
  41509c:	add    eax,ebx
  41509e:	push   eax
  41509f:	lea    eax,[ebp-0x40]
  4150a2:	push   eax
  4150a3:	call   0x414779
  4150a8:	mov    eax,DWORD PTR [ebp+0xc]
  4150ab:	test   eax,eax
  4150ad:	je     0x4150fd
  4150af:	mov    eax,DWORD PTR [ebp-0x18]
  4150b2:	xor    eax,edi
  4150b4:	add    eax,ebx
  4150b6:	push   eax
  4150b7:	push   DWORD PTR [ebp+0xc]
  4150ba:	lea    eax,[ebp-0x40]
  4150bd:	push   eax
  4150be:	call   0x414620
  4150c3:	mov    eax,DWORD PTR [ebp-0x4]
  4150c6:	mov    DWORD PTR [ebp-0x18],eax
  4150c9:	mov    eax,DWORD PTR [ebp-0x18]
  4150cc:	mov    ecx,DWORD PTR [ebp-0x1c]
  4150cf:	sub    eax,ecx
  4150d1:	mov    DWORD PTR [ebp-0x18],eax
  4150d4:	mov    eax,DWORD PTR [ebp+0xc]
  4150d7:	mov    ecx,DWORD PTR [ebp+0xc]
  4150da:	mov    eax,DWORD PTR [eax+0x10]
  4150dd:	add    eax,DWORD PTR [ecx+0xc]
  4150e0:	mov    ecx,DWORD PTR [ebp-0x18]
  4150e3:	cmp    ecx,eax
  4150e5:	jb     0x4150fd
  4150e7:	mov    eax,DWORD PTR [ebp+0xc]
  4150ea:	mov    eax,DWORD PTR [eax+0xc]
  4150ed:	mov    ecx,DWORD PTR [ebp+0xc]
  4150f0:	add    eax,DWORD PTR [ecx+0x8]
  4150f3:	mov    ecx,DWORD PTR [ebp-0x18]
  4150f6:	sub    eax,ecx
  4150f8:	jmp    0x4153eb
  4150fd:	push   0xc
  4150ff:	push   DWORD PTR [ebp-0x4]
  415102:	lea    eax,[ebp-0x4c]
  415105:	push   eax
  415106:	call   0x414620
  41510b:	mov    eax,0xf89c85b5
  415110:	mov    DWORD PTR [ebp-0x2c],eax
  415113:	mov    DWORD PTR [ebp-0x30],0xf89c85b2
  41511a:	mov    DWORD PTR [ebp-0x34],0xf89c85b3
  415121:	mov    DWORD PTR [ebp-0x38],0xf89c85b0
  415128:	lea    ecx,[ebp-0x2c]
  41512b:	mov    DWORD PTR [ebp-0xc],ecx
  41512e:	lea    ecx,[ebp-0x30]
  415131:	mov    DWORD PTR [ebp-0x10],ecx
  415134:	lea    ecx,[ebp-0x34]
  415137:	mov    DWORD PTR [ebp+0xc],ecx
  41513a:	lea    ecx,[ebp-0x38]
  41513d:	mov    DWORD PTR [ebp-0x14],ecx
  415140:	mov    ecx,DWORD PTR [ebp+0x8]
  415143:	xor    ecx,edi
  415145:	add    ecx,ebx
  415147:	mov    DWORD PTR [ebp-0x18],ecx
  41514a:	jmp    0x415346
  41514f:	cmp    eax,0xf89c85b3
  415154:	je     0x415358
  41515a:	mov    ecx,DWORD PTR [ebp-0x8]
  41515d:	xor    ecx,edi
  41515f:	mov    esi,eax
  415161:	add    ecx,ebx
  415163:	mov    DWORD PTR [ebp+0x18],ecx
  415166:	mov    eax,DWORD PTR [ebp-0x18]
  415169:	xor    esi,edi
  41516b:	lea    eax,[eax+esi*1+0x3272dd]
  415172:	mov    DWORD PTR [ebp-0x18],eax
  415175:	mov    eax,DWORD PTR [ebp-0x8]
  415178:	mov    ecx,DWORD PTR [ebp-0x18]
  41517b:	xor    eax,edi
  41517d:	add    eax,ebx
  41517f:	cmp    ecx,eax
  415181:	jne    0x415196
  415183:	mov    eax,DWORD PTR [ebp+0x8]
  415186:	xor    eax,edi
  415188:	add    eax,ebx
  41518a:	push   eax
  41518b:	push   0xc
  41518d:	lea    eax,[ebp-0x4c]
  415190:	push   eax
  415191:	call   0x414b97
  415196:	mov    eax,DWORD PTR [ebp-0xc]
  415199:	mov    eax,DWORD PTR [eax]
  41519b:	xor    eax,edi
  41519d:	mov    al,BYTE PTR [ebp+eax*1+0x327291]
  4151a4:	mov    ecx,DWORD PTR [ebp+0x8]
  4151a7:	xor    ecx,edi
  4151a9:	movzx  eax,al
  4151ac:	add    ecx,ebx
  4151ae:	cmp    eax,ecx
  4151b0:	je     0x41532e
  4151b6:	mov    eax,DWORD PTR [ebp-0x10]
  4151b9:	mov    eax,DWORD PTR [eax]
  4151bb:	xor    eax,edi
  4151bd:	mov    al,BYTE PTR [ebp+eax*1+0x327291]
  4151c4:	mov    ecx,DWORD PTR [ebp+0x8]
  4151c7:	xor    ecx,edi
  4151c9:	movzx  eax,al
  4151cc:	add    ecx,ebx
  4151ce:	cmp    eax,ecx
  4151d0:	je     0x41532e
  4151d6:	mov    eax,DWORD PTR [ebp+0xc]
  4151d9:	mov    eax,DWORD PTR [eax]
  4151db:	xor    eax,edi
  4151dd:	mov    al,BYTE PTR [ebp+eax*1+0x327291]
  4151e4:	mov    ecx,DWORD PTR [ebp+0x8]
  4151e7:	xor    ecx,edi
  4151e9:	movzx  eax,al
  4151ec:	add    ecx,ebx
  4151ee:	cmp    eax,ecx
  4151f0:	je     0x41532e
  4151f6:	mov    eax,DWORD PTR [ebp-0x14]
  4151f9:	mov    eax,DWORD PTR [eax]
  4151fb:	xor    eax,edi
  4151fd:	mov    al,BYTE PTR [ebp+eax*1+0x327291]
  415204:	mov    ecx,DWORD PTR [ebp+0x8]
  415207:	xor    ecx,edi
  415209:	movzx  eax,al
  41520c:	add    ecx,ebx
  41520e:	cmp    eax,ecx
  415210:	je     0x41532e
  415216:	mov    eax,DWORD PTR [ebp-0x10]
  415219:	mov    eax,DWORD PTR [eax]
  41521b:	xor    eax,edi
  41521d:	mov    al,BYTE PTR [ebp+eax*1+0x327291]
  415224:	mov    ecx,DWORD PTR [ebp-0xc]
  415227:	mov    ecx,DWORD PTR [ecx]
  415229:	xor    ecx,edi
  41522b:	mov    cl,BYTE PTR [ebp+ecx*1+0x327291]
  415232:	xor    al,cl
  415234:	mov    ecx,DWORD PTR [ebp+0xc]
  415237:	mov    ecx,DWORD PTR [ecx]
  415239:	xor    ecx,edi
  41523b:	mov    cl,BYTE PTR [ebp+ecx*1+0x327291]
  415242:	or     al,cl
  415244:	mov    ecx,DWORD PTR [ebp-0xc]
  415247:	mov    ecx,DWORD PTR [ecx]
  415249:	xor    ecx,edi
  41524b:	mov    cl,BYTE PTR [ebp+ecx*1+0x327295]
  415252:	cmp    cl,al
  415254:	jne    0x41532e
  41525a:	mov    eax,DWORD PTR [ebp+0xc]
  41525d:	mov    eax,DWORD PTR [eax]
  41525f:	xor    eax,edi
  415261:	mov    al,BYTE PTR [ebp+eax*1+0x327291]
  415268:	mov    ecx,DWORD PTR [ebp-0x10]
  41526b:	mov    ecx,DWORD PTR [ecx]
  41526d:	xor    ecx,edi
  41526f:	mov    cl,BYTE PTR [ebp+ecx*1+0x327291]
  415276:	xor    al,cl
  415278:	mov    ecx,DWORD PTR [ebp-0x14]
  41527b:	mov    ecx,DWORD PTR [ecx]
  41527d:	xor    ecx,edi
  41527f:	mov    cl,BYTE PTR [ebp+ecx*1+0x327291]
  415286:	or     al,cl
  415288:	mov    ecx,DWORD PTR [ebp-0x10]
  41528b:	mov    ecx,DWORD PTR [ecx]
  41528d:	xor    ecx,edi
  41528f:	mov    cl,BYTE PTR [ebp+ecx*1+0x327295]
  415296:	cmp    cl,al
  415298:	jne    0x41532e
  41529e:	mov    eax,DWORD PTR [ebp-0x14]
  4152a1:	mov    eax,DWORD PTR [eax]
  4152a3:	xor    eax,edi
  4152a5:	mov    al,BYTE PTR [ebp+eax*1+0x327291]
  4152ac:	mov    ecx,DWORD PTR [ebp+0xc]
  4152af:	mov    ecx,DWORD PTR [ecx]
  4152b1:	xor    ecx,edi
  4152b3:	mov    cl,BYTE PTR [ebp+ecx*1+0x327291]
  4152ba:	xor    al,cl
  4152bc:	mov    ecx,DWORD PTR [ebp-0xc]
  4152bf:	mov    ecx,DWORD PTR [ecx]
  4152c1:	xor    ecx,edi
  4152c3:	mov    cl,BYTE PTR [ebp+ecx*1+0x327291]
  4152ca:	or     al,cl
  4152cc:	mov    ecx,DWORD PTR [ebp+0xc]
  4152cf:	mov    ecx,DWORD PTR [ecx]
  4152d1:	xor    ecx,edi
  4152d3:	mov    cl,BYTE PTR [ebp+ecx*1+0x327295]
  4152da:	cmp    cl,al
  4152dc:	jne    0x41532e
  4152de:	mov    eax,DWORD PTR [ebp-0x14]
  4152e1:	mov    eax,DWORD PTR [eax]
  4152e3:	xor    eax,edi
  4152e5:	mov    al,BYTE PTR [ebp+eax*1+0x327291]
  4152ec:	mov    ecx,DWORD PTR [ebp-0xc]
  4152ef:	mov    ecx,DWORD PTR [ecx]
  4152f1:	xor    ecx,edi
  4152f3:	mov    cl,BYTE PTR [ebp+ecx*1+0x327291]
  4152fa:	xor    al,cl
  4152fc:	mov    ecx,DWORD PTR [ebp-0x10]
  4152ff:	mov    ecx,DWORD PTR [ecx]
  415301:	xor    ecx,edi
  415303:	mov    cl,BYTE PTR [ebp+ecx*1+0x327291]
  41530a:	or     al,cl
  41530c:	mov    ecx,DWORD PTR [ebp-0x14]
  41530f:	mov    ecx,DWORD PTR [ecx]
  415311:	xor    ecx,edi
  415313:	mov    cl,BYTE PTR [ebp+ecx*1+0x327295]
  41531a:	cmp    cl,al
  41531c:	jne    0x41532e
  41531e:	lea    eax,[ebp-0x4c]
  415321:	push   eax
  415322:	call   0x414de8
  415327:	mov    ecx,DWORD PTR [ebp-0x44]
  41532a:	cmp    eax,ecx
  41532c:	je     0x415338
  41532e:	mov    eax,DWORD PTR [ebp+0x8]
  415331:	xor    eax,edi
  415333:	add    eax,ebx
  415335:	mov    DWORD PTR [ebp+0x18],eax
  415338:	mov    eax,DWORD PTR [ebp-0x8]
  41533b:	xor    eax,edi
  41533d:	lea    eax,[eax+esi*1+0x3272dd]
  415344:	xor    eax,edi
  415346:	mov    ecx,DWORD PTR [ebp+0x8]
  415349:	mov    edx,DWORD PTR [ebp+0x18]
  41534c:	xor    ecx,edi
  41534e:	add    ecx,ebx
  415350:	cmp    edx,ecx
  415352:	je     0x41514f
  415358:	mov    eax,DWORD PTR [ebp+0x8]
  41535b:	mov    ecx,DWORD PTR [ebp+0x18]
  41535e:	xor    eax,edi
  415360:	add    eax,ebx
  415362:	cmp    ecx,eax
  415364:	jne    0x415377
  415366:	mov    eax,DWORD PTR [ebp-0x8]
  415369:	mov    ecx,DWORD PTR [ebp+0x1c]
  41536c:	xor    eax,edi
  41536e:	lea    eax,[eax+ecx*1+0x3272dd]
  415375:	jmp    0x4153ee
  415377:	push   0x18
  415379:	push   DWORD PTR [ebp-0x4]
  41537c:	lea    eax,[ebp-0x64]
  41537f:	push   eax
  415380:	call   0x414620
  415385:	mov    eax,DWORD PTR [ebp+0x8]
  415388:	mov    ecx,DWORD PTR [ebp-0x18]
  41538b:	xor    eax,edi
  41538d:	add    eax,ebx
  41538f:	cmp    eax,ecx
  415391:	je     0x4153a6
  415393:	mov    eax,DWORD PTR [ebp+0x8]
  415396:	xor    eax,edi
  415398:	add    eax,ebx
  41539a:	push   eax
  41539b:	push   0x18
  41539d:	lea    eax,[ebp-0x64]
  4153a0:	push   eax
  4153a1:	call   0x414b97
  4153a6:	mov    eax,DWORD PTR [ebp-0x4]
  4153a9:	add    eax,0x18
  4153ac:	mov    DWORD PTR [ebp+0x18],eax
  4153af:	push   DWORD PTR [ebp-0x50]
  4153b2:	push   DWORD PTR [ebp+0x18]
  4153b5:	mov    eax,DWORD PTR [ebp-0x54]
  4153b8:	add    eax,DWORD PTR [ebp-0x20]
  4153bb:	push   eax
  4153bc:	call   0x414620
  4153c1:	mov    eax,DWORD PTR [ebp+0x8]
  4153c4:	mov    ecx,DWORD PTR [ebp-0x18]
  4153c7:	xor    eax,edi
  4153c9:	add    eax,ebx
  4153cb:	cmp    eax,ecx
  4153cd:	je     0x4153e0
  4153cf:	push   0x0
  4153d1:	push   DWORD PTR [ebp-0x50]
  4153d4:	mov    eax,DWORD PTR [ebp-0x54]
  4153d7:	add    eax,DWORD PTR [ebp-0x20]
  4153da:	push   eax
  4153db:	call   0x414b97
  4153e0:	mov    eax,DWORD PTR [ebp-0x24]
  4153e3:	mov    ecx,DWORD PTR [ebp-0x50]
  4153e6:	add    DWORD PTR [eax],ecx
  4153e8:	mov    eax,DWORD PTR [ebp-0x50]
  4153eb:	add    eax,DWORD PTR [ebp+0x1c]
  4153ee:	mov    DWORD PTR [ebp+0x1c],eax
  4153f1:	mov    eax,DWORD PTR [ebp-0x8]
  4153f4:	mov    ecx,DWORD PTR [ebp+0x1c]
  4153f7:	xor    eax,edi
  4153f9:	add    eax,ebx
  4153fb:	imul   eax,ecx
  4153fe:	mov    ecx,DWORD PTR [ebp+0x8]
  415401:	mov    edx,DWORD PTR [ebp-0x28]
  415404:	xor    ecx,edi
  415406:	lea    ecx,[ecx+edx*1+0x3272dd]
  41540d:	cmp    eax,ecx
  41540f:	jb     0x41506c
  415415:	mov    esi,DWORD PTR [ebp+0x14]
  415418:	mov    eax,DWORD PTR [ebp-0x20]
  41541b:	mov    DWORD PTR [esi],eax
  41541d:	jmp    0x415464
  41541f:	mov    ecx,DWORD PTR [ebp+0x8]
  415422:	mov    edx,DWORD PTR [ebp+0xc]
  415425:	xor    ecx,edi
  415427:	xor    edx,edi
  415429:	add    ecx,ebx
  41542b:	add    edx,ebx
  41542d:	cmp    ecx,edx
  41542f:	jne    0x415443
  415431:	mov    eax,ds:0x7f642d1c
  415436:	imul   eax,eax,0x9f15fcef
  41543c:	mov    ds:0x7f642d1c,eax
  415441:	jmp    0x415464
  415443:	mov    ecx,DWORD PTR [ebp+0x8]
  415446:	xor    ecx,edi
  415448:	add    ecx,ebx
  41544a:	cmp    eax,ecx
  41544c:	je     0x41545a
  41544e:	sub    DWORD PTR ds:0xf861e3c,0x709beac4
  415458:	jmp    0x415464
  41545a:	and    DWORD PTR ds:0x3343fa1c,0x5265ec3f
  415464:	pop    edi
  415465:	pop    esi
  415466:	pop    ebx
  415467:	leave  
  415468:	ret    0x18
  41546b:	push   ebp
  41546c:	mov    ebp,esp
  41546e:	and    esp,0xfffffff8
  415471:	mov    eax,DWORD PTR [ebp+0x20]
  415474:	sub    esp,0x14
  415477:	push   ebx
  415478:	mov    ebx,DWORD PTR [ebp+0x14]
  41547b:	push   esi
  41547c:	push   edi
  41547d:	cmp    eax,0xf89c85b5
  415482:	jne    0x41548e
  415484:	push   0xf89c85b2
  415489:	jmp    0x4155c0
  41548e:	mov    eax,DWORD PTR [ebp+0x20]
  415491:	cmp    eax,0xf89c85b2
  415496:	jne    0x4154a2
  415498:	push   0xf89c85b3
  41549d:	jmp    0x4155c0
  4154a2:	mov    eax,DWORD PTR [ebp+0x20]
  4154a5:	cmp    eax,0xf89c85b3
  4154aa:	jne    0x4154b6
  4154ac:	push   0xf89c85b0
  4154b1:	jmp    0x4155c0
  4154b6:	mov    eax,DWORD PTR [ebp+0x20]
  4154b9:	cmp    eax,0xf89c85b0
  4154be:	jne    0x4154ca
  4154c0:	push   0xf89c85b1
  4154c5:	jmp    0x4155c0
  4154ca:	mov    ecx,DWORD PTR [ebp+0x20]
  4154cd:	mov    eax,0xf89c85bc
  4154d2:	cmp    ecx,eax
  4154d4:	jne    0x415590
  4154da:	mov    eax,DWORD PTR [ebp+0x10]
  4154dd:	mov    DWORD PTR [esp+0xc],eax
  4154e1:	mov    eax,DWORD PTR [ebp+0x18]
  4154e4:	mov    DWORD PTR [esp+0x14],eax
  4154e8:	mov    eax,DWORD PTR [ebp+0xc]
  4154eb:	mov    DWORD PTR [esp+0x18],eax
  4154ef:	mov    eax,DWORD PTR [ebp+0x8]
  4154f2:	mov    DWORD PTR [esp+0x10],eax
  4154f6:	mov    eax,DWORD PTR [esp+0x10]
  4154fa:	mov    ecx,DWORD PTR [esp+0x14]
  4154fe:	mov    edi,0x7510896
  415503:	xor    eax,edi
  415505:	mov    esi,0x3272dd
  41550a:	add    eax,esi
  41550c:	mov    DWORD PTR [ecx],eax
  41550e:	mov    eax,DWORD PTR [esp+0xc]
  415512:	mov    eax,DWORD PTR [eax+0x194]
  415518:	mov    ecx,DWORD PTR [eax]
  41551a:	mov    eax,DWORD PTR [esp+0xc]
  41551e:	mov    eax,DWORD PTR [eax+0x194]
  415524:	mov    eax,DWORD PTR [eax]
  415526:	add    eax,DWORD PTR [ecx+0x3c]
  415529:	mov    ecx,DWORD PTR [esp+0xc]
  41552d:	mov    ecx,DWORD PTR [ecx+0x1d8]
  415533:	mov    ecx,DWORD PTR [ecx+0x14]
  415536:	push   0x4
  415538:	push   0x3000
  41553d:	push   DWORD PTR [eax+0x50]
  415540:	push   0x0
  415542:	call   ecx
  415544:	mov    DWORD PTR [ebx],eax
  415546:	mov    eax,DWORD PTR [esp+0x10]
  41554a:	push   DWORD PTR [esp+0xc]
  41554e:	xor    eax,edi
  415550:	add    eax,esi
  415552:	mov    DWORD PTR [esp+0x20],eax
  415556:	lea    eax,[esp+0x20]
  41555a:	push   eax
  41555b:	push   ebx
  41555c:	push   DWORD PTR [esp+0x20]
  415560:	push   DWORD PTR [esp+0x28]
  415564:	push   DWORD PTR [esp+0x24]
  415568:	call   0x414f2c
  41556d:	mov    eax,DWORD PTR [esp+0x10]
  415571:	mov    ecx,DWORD PTR [ebx]
  415573:	xor    eax,edi
  415575:	add    eax,esi
  415577:	cmp    ecx,eax
  415579:	je     0x4155d7
  41557b:	mov    eax,DWORD PTR [esp+0x18]
  41557f:	mov    ecx,DWORD PTR [esp+0x14]
  415583:	xor    eax,edi
  415585:	add    eax,esi
  415587:	imul   eax,DWORD PTR [esp+0x1c]
  41558c:	mov    DWORD PTR [ecx],eax
  41558e:	jmp    0x4155d7
  415590:	mov    ecx,DWORD PTR [ebp+0x20]
  415593:	cmp    ecx,0xf89c85b1
  415599:	jne    0x4155a2
  41559b:	push   0xf89c85be
  4155a0:	jmp    0x4155c0
  4155a2:	mov    ecx,DWORD PTR [ebp+0x20]
  4155a5:	cmp    ecx,0xf89c85be
  4155ab:	jne    0x4155b4
  4155ad:	push   0xf89c85bf
  4155b2:	jmp    0x4155c0
  4155b4:	mov    ecx,DWORD PTR [ebp+0x20]
  4155b7:	cmp    ecx,0xf89c85bf
  4155bd:	jne    0x4155d7
  4155bf:	push   eax
  4155c0:	push   DWORD PTR [ebp+0x1c]
  4155c3:	push   DWORD PTR [ebp+0x18]
  4155c6:	push   ebx
  4155c7:	push   DWORD PTR [ebp+0x10]
  4155ca:	push   DWORD PTR [ebp+0xc]
  4155cd:	push   DWORD PTR [ebp+0x8]
  4155d0:	call   0x41546b
  4155d5:	mov    DWORD PTR [ebx],eax
  4155d7:	mov    eax,DWORD PTR [ebx]
  4155d9:	pop    edi
  4155da:	pop    esi
  4155db:	pop    ebx
  4155dc:	mov    esp,ebp
  4155de:	pop    ebp
  4155df:	ret    0x1c
  4155e2:	push   ebp
  4155e3:	mov    ebp,esp
  4155e5:	sub    esp,0xc
  4155e8:	mov    eax,0xf89c85b5
  4155ed:	mov    DWORD PTR [ebp-0x8],eax
  4155f0:	mov    DWORD PTR [ebp-0xc],0xf89c85b2
  4155f7:	mov    ecx,DWORD PTR [ebp-0x8]
  4155fa:	xor    ecx,0x7510896
  415600:	add    ecx,0x3272dd
  415606:	mov    DWORD PTR [ebp-0x4],ecx
  415609:	mov    ecx,DWORD PTR [ebp+0xc]
  41560c:	push   eax
  41560d:	mov    DWORD PTR [ebp+0xc],ecx
  415610:	push   DWORD PTR [ebp+0xc]
  415613:	lea    eax,[ebp-0x4]
  415616:	push   DWORD PTR [ebp+0x8]
  415619:	push   eax
  41561a:	push   DWORD PTR [ebp+0xc]
  41561d:	push   DWORD PTR [ebp-0xc]
  415620:	push   DWORD PTR [ebp-0x8]
  415623:	call   0x41546b
  415628:	mov    DWORD PTR [ebp-0x4],eax
  41562b:	mov    eax,DWORD PTR [ebp-0x4]
  41562e:	leave  
  41562f:	ret    0x8
  415632:	mov    cl,0x27
  415634:	popa   
  415635:	test   bh,dh
  415637:	(bad)  
  415638:	cmc    
  415639:	aaa    
  41563a:	push   ss
  41563b:	shr    BYTE PTR [edi],0x1f
  41563e:	add    eax,0x798eff67
  415643:	aam    0x0
  415645:	add    dl,dh
  415647:	add    al,0x0
  415649:	add    al,ah
  41564b:	in     al,dx
  41564c:	adc    ax,0xc9e
  415650:	mov    bh,0x94
  415652:	lods   eax,DWORD PTR ds:[esi]
  415653:	xor    ch,BYTE PTR [edx]
  415655:	xor    ebx,DWORD PTR [esi]
  415657:	daa    
  415658:	idiv   DWORD PTR [ecx+0x1d37fe4b]
  41565e:	sbb    ebp,edx
  415660:	rcr    ebx,1
  415662:	ror    BYTE PTR [edi-0x44],cl
  415665:	popa   
  415666:	mov    eax,ds:0xc53fc53f
  41566b:	jg     0x4155fd
  41566d:	loope  0x415694
  41566f:	cmp    al,0x6f
  415671:	push   es
  415672:	bound  edi,QWORD PTR [edx+0x21]
  415675:	fwait
  415676:	mov    ah,0x43
  415678:	add    DWORD PTR [ecx+0x6b7ad7eb],0xffffff97
  41567f:	cmp    DWORD PTR [edi],esp
  415681:	push   edi
  415682:	addr16 pop es
  415684:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415685:	mov    ecx,0xe581897d
  41568a:	jns    0x4156df
  41568c:	and    al,BYTE PTR [esi]
  41568e:	mov    ah,0x74
  415690:	dec    esi
  415691:	ffreep st(1)
  415693:	clc    
  415694:	mov    al,ds:0x2f0df0f9
  415699:	pop    esp
  41569a:	jno    0x415622
  41569c:	fisttp WORD PTR [ebx+eax*8]
  41569f:	popf   
  4156a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4156a1:	gs push 0xffffff82
  4156a4:	or     al,0xf7
  4156a6:	dec    esp
  4156a7:	push   ss
  4156a8:	push   ecx
  4156a9:	add    edi,edi
  4156ab:	jecxz  0x41571e
  4156ad:	pop    DWORD PTR [edx]
  4156af:	sub    ebp,ecx
  4156b1:	inc    eax
  4156b2:	and    DWORD PTR [eax],esp
  4156b4:	push   cs
  4156b5:	xlat   BYTE PTR ds:[ebx]
  4156b6:	adc    al,0xee
  4156b8:	(bad)  
  4156ba:	outs   dx,DWORD PTR ds:[esi]
  4156bb:	and    ah,bl
  4156bd:	or     BYTE PTR [ebx+0x12],ch
  4156c0:	into   
  4156c1:	int3   
  4156c2:	or     BYTE PTR [edx],bh
  4156c4:	mov    edi,DWORD PTR [eax-0x27]
  4156c7:	int    0xa9
  4156c9:	xor    al,0xbb
  4156cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4156cc:	hlt    
  4156cd:	xchg   ebp,eax
  4156ce:	das    
  4156cf:	(bad)  
  4156d0:	fldenv ds:0xfeb53cc0
  4156d6:	dec    edx
  4156d7:	mov    edx,0xe455ba98
  4156dc:	xchg   esp,eax
  4156dd:	cmc    
  4156de:	loope  0x41568c
  4156e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4156e1:	rcr    DWORD PTR [eax],cl
  4156e3:	pop    esp
  4156e4:	xlat   BYTE PTR ds:[ebx]
  4156e5:	shl    DWORD PTR [ebx+0x3],1
  4156e8:	pop    es
  4156e9:	dec    ebx
  4156ea:	repz out 0xcf,al
  4156ed:	retf   0xfec6
  4156f0:	pushf  
  4156f1:	fcompp 
  4156f3:	lock xchg al,bh
  4156f6:	and    bl,BYTE PTR ds:0x42d1e916
  4156fc:	mov    eax,0x20140f1a
  415701:	(bad)
  415704:	leave  
  415705:	test   al,al
  415707:	imul   ecx,DWORD PTR [edx],0xffffff8c
  41570a:	into   
  41570b:	in     eax,0x1e
  41570d:	lods   al,BYTE PTR ds:[esi]
  41570e:	ret    
  41570f:	jns    0x4156cf
  415711:	jge    0x4156be
  415713:	sbb    al,0xfe
  415715:	mov    esi,0x6a21f9e3
  41571a:	movq   mm1,QWORD PTR [eax+0x23]
  41571e:	(bad)  [ebp+0x27]
  415721:	dec    ebp
  415722:	loope  0x415782
  415724:	xor    DWORD PTR [edx+eiz*8+0x27f186a3],esi
  41572b:	pop    edi
  41572c:	adc    DWORD PTR [edi-0x46],ebp
  41572f:	outs   dx,BYTE PTR ds:[esi]
  415730:	jo     0x41578d
  415732:	jp     0x41574e
  415734:	or     al,0x96
  415736:	xchg   ebp,eax
  415737:	(bad)  
  415738:	push   ebx
  415739:	fdivp  st(6),st
  41573b:	das    
  41573c:	inc    ebp
  41573d:	mov    cl,0x82
  41573f:	xor    ebx,ebx
  415741:	retw   0x26a2
  415745:	and    BYTE PTR [ebx+edx*1+0x4f],cl
  415749:	inc    edx
  41574a:	or     dh,0xb3
  41574d:	lock xchg esp,eax
  41574f:	and    al,0xde
  415751:	repnz icebp 
  415753:	test   DWORD PTR [edi+0x61],esp
  415756:	push   edi
  415757:	fs xchg ecx,eax
  415759:	fdiv   QWORD PTR [eax+edi*8+0x2a]
  41575d:	loop   0x4157dd
  41575f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415760:	aas    
  415761:	mov    esi,0x64049d9c
  415766:	inc    edx
  415767:	pop    edi
  415768:	mov    edx,0x3fe045bc
  41576d:	aaa    
  41576e:	jg     0x41575d
  415770:	dec    ebp
  415771:	mov    ch,0x63
  415773:	inc    ebp
  415774:	jne    0x4157e8
  415776:	popa   
  415777:	jmp    0x6360db98
  41577c:	fstp   st(4)
  41577e:	ss xchg ebx,eax
  415780:	out    dx,eax
  415781:	and    DWORD PTR [ebp+0x5b],0x43968764
  415788:	fcom   st(3)
  41578a:	hlt    
  41578b:	clc    
  41578c:	pop    esp
  41578d:	in     al,0x8c
  41578f:	(bad)  
  415790:	repz pop ecx
  415792:	pop    ebx
  415793:	inc    esp
  415794:	inc    ebx
  415795:	mov    cl,0xfd
  415797:	jg     0x415727
  415799:	ss popf 
  41579b:	lods   eax,DWORD PTR ds:[esi]
  41579c:	cmp    al,BYTE PTR [esi+0x3f2f39b1]
  4157a2:	push   edi
  4157a3:	cld    
  4157a4:	ins    BYTE PTR es:[edi],dx
  4157a5:	fwait
  4157a6:	in     eax,dx
  4157a7:	lea    ecx,[eax-0x2be1a463]
  4157ad:	sbb    eax,0x9f89a5c
  4157b2:	pop    edx
  4157b3:	ficom  DWORD PTR [ecx+0x3a9ea0b5]
  4157b9:	mov    esi,0x68fbda56
  4157be:	pop    ds
  4157bf:	sti    
  4157c0:	popf   
  4157c1:	pop    edi
  4157c2:	bnd jl 0x41582c
  4157c5:	adc    BYTE PTR [eax+0x61],0xef
  4157c9:	mov    al,ds:0x7aa727f8
  4157ce:	call   0x3b3d:0x3a9ce998
  4157d5:	imul   ebp,DWORD PTR [edx],0x8e9a4f5c
  4157db:	inc    edx
  4157dc:	fnsave [ebx-0x71]
  4157df:	rcl    DWORD PTR [ebx],cl
  4157e1:	adc    ax,0xa01d
  4157e5:	or     al,0x7a
  4157e7:	jno    0x415784
  4157e9:	xor    al,0xc0
  4157eb:	sub    edx,DWORD PTR [edi]
  4157ed:	adc    eax,0x6c2cdd4c
  4157f2:	sbb    eax,0xae3ec0be
  4157f7:	fnsave [eax-0x77c7f537]
  4157fd:	scas   al,BYTE PTR es:[edi]
  4157fe:	mov    eax,ds:0xb9f5f9dc
  415803:	mov    ah,dl
  415805:	or     DWORD PTR [ebp-0x72],esi
  415808:	inc    ebx
  415809:	(bad)  
  41580b:	cmp    eax,0x748b76eb
  415810:	cmp    BYTE PTR [ecx+0x41],dh
  415813:	dec    esi
  415814:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415815:	arpl   WORD PTR [edx],cx
  415817:	xchg   edx,eax
  415818:	adc    edx,edx
  41581a:	add    BYTE PTR [edi+0x3818f119],ch
  415820:	ds pop ecx
  415822:	jbe    0x41582f
  415824:	push   esi
  415825:	test   DWORD PTR [esi+0x4cf67b42],esp
  41582b:	sbb    al,0xee
  41582d:	das    
  41582e:	shr    esp,0x70
  415831:	loop   0x41584e
  415833:	inc    ecx
  415834:	add    dh,dl
  415836:	cvtpi2ps xmm2,QWORD PTR [edx]
  415839:	gs inc ebx
  41583b:	jb     0x415838
  41583d:	mov    edx,0x203612c5
  415842:	(bad)  
  415843:	adc    ebp,ecx
  415845:	ret    
  415846:	xchg   ecx,eax
  415847:	mov    eax,0x1143e385
  41584c:	mov    eax,ds:0x36dbcc34
  415851:	add    BYTE PTR [ebx],ch
  415853:	fdiv   DWORD PTR [edx-0x2f]
  415856:	lods   eax,DWORD PTR ds:[esi]
  415857:	push   DWORD PTR [edx]
  415859:	mov    eax,ds:0xcccd6d11
  41585e:	xchg   BYTE PTR [eax+0x7973c654],cl
  415864:	div    esp
  415866:	sbb    esi,DWORD PTR [ebx-0x1e462c5c]
  41586c:	(bad)  
  41586e:	sub    DWORD PTR [ebx-0x77],0x3ab491d0
  415875:	inc    eax
  415876:	dec    esp
  415877:	ret    
  415878:	loop   0x415866
  41587a:	mov    eax,0x7bebc4d4
  41587f:	add    al,0xfb
  415881:	inc    ebp
  415882:	mov    al,ds:0xe4805087
  415887:	jo     0x4158cf
  415889:	xor    BYTE PTR [edi],ch
  41588b:	push   edx
  41588c:	icebp  
  41588d:	daa    
  41588e:	mov    edx,0xe5111eea
  415893:	xor    esp,edi
  415895:	adc    DWORD PTR [eax+0x7c],ecx
  415898:	inc    ebp
  415899:	imul   esi,ebp,0xffffffe2
  41589c:	add    esp,DWORD PTR [ebx+ebx*4-0x6f]
  4158a0:	call   FWORD PTR [edi]
  4158a2:	je     0x415916
  4158a4:	mov    al,ds:0x11462002
  4158a9:	pop    ecx
  4158aa:	xchg   edi,eax
  4158ab:	sti    
  4158ac:	(bad)
  4158b1:	mov    DWORD PTR [eax+0x7a],edi
  4158b4:	ror    BYTE PTR [ebx],1
  4158b6:	dec    esp
  4158b7:	sti    
  4158b8:	js     0x4158a9
  4158ba:	cmp    BYTE PTR [ecx+0x5e],dh
  4158bd:	pop    ebp
  4158be:	or     eax,0xe737bcd2
  4158c3:	neg    BYTE PTR [edi+eiz*1]
  4158c6:	sar    BYTE PTR [ebp-0x15ea90c8],0x26
  4158cd:	sbb    BYTE PTR [edi+0x74],ah
  4158d0:	mov    edx,0x5a397dc8
  4158d5:	adc    DWORD PTR [ebp+0x7d],ebp
  4158d8:	clc    
  4158d9:	xchg   esp,eax
  4158da:	es push edi
  4158dc:	adc    al,0xbc
  4158de:	arpl   WORD PTR [ebp-0x6a1b23e2],ax
  4158e4:	ror    DWORD PTR [ebp+0x3f],1
  4158e7:	jae    0x415925
  4158e9:	call   0xadca:0x9196620
  4158f0:	pop    ss
  4158f1:	xor    eax,ecx
  4158f3:	imul   edi,DWORD PTR [ebp-0xcf31a6b],0x784c0ebb
  4158fd:	(bad)  
  4158fe:	mov    eax,0xe22c4f2f
  415903:	leave  
  415904:	pop    esp
  415906:	ret    0xa06
  415909:	imul   esp,DWORD PTR [esi-0xa335b36],0x44e5daf1
  415913:	shl    DWORD PTR [eax+0x42],cl
  415916:	outs   dx,DWORD PTR ds:[esi]
  415917:	fwait
  415918:	sub    edx,ebp
  41591a:	adc    BYTE PTR [edx-0x31820669],dl
  415920:	adc    BYTE PTR [edx+ebx*8],bl
  415923:	xchg   ebp,eax
  415924:	addr16 cs test eax,0xf2078cc4
  41592b:	mov    ds:0x2bf5eac0,eax
  415930:	sar    ecx,cl
  415932:	pushf  
  415933:	cdq    
  415934:	or     ebp,DWORD PTR [esi]
  415936:	arpl   ax,ax
  415938:	and    ebp,edx
  41593a:	push   esp
  41593b:	mov    BYTE PTR [esi+esi*1],ch
  41593e:	and    eax,0x358d9ebf
  415943:	fs int 0xc
  415946:	add    ebp,esp
  415948:	xchg   DWORD PTR [edx+edx*1+0x19eb8e9a],edx
  41594f:	mov    ds:0xac36807e,al
  415954:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415955:	xor    DWORD PTR ds:0x1476ea15,ebx
  41595b:	js     0x415934
  41595d:	lods   eax,DWORD PTR ds:[esi]
  41595e:	cmp    eax,0x2c4fb3de
  415963:	out    dx,al
  415964:	dec    edx
  415965:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415966:	mov    ebp,ebx
  415968:	test   eax,0xcd72fd
  41596d:	mov    BYTE PTR [ecx],bh
  41596f:	mov    cl,0x7b
  415971:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415972:	push   esp
  415973:	ss rol al,1
  415976:	mov    ebx,0xbad41fcd
  41597b:	inc    ebp
  41597c:	pop    ss
  41597d:	pop    ecx
  41597e:	cmp    eax,0x2e6e49
  415983:	(bad)  
  415984:	es mov ebp,0xcae14807
  41598a:	(bad)  
  41598b:	dec    ecx
  41598c:	test   al,0xb9
  41598e:	jae    0x41594e
  415990:	and    BYTE PTR [ebx+0x68],0x69
  415994:	inc    esp
  415995:	inc    esp
  415996:	mov    BYTE PTR [ecx+0x47],0x6b
  41599a:	adc    ch,BYTE PTR es:[ecx-0x7811655a]
  4159a1:	mov    edi,0x5933d592
  4159a6:	mov    al,0x73
  4159a8:	iret   
  4159a9:	fstp   TBYTE PTR [edx-0x3f388c09]
  4159af:	(bad)  
  4159b1:	mov    esi,0x7138e1a3
  4159b6:	add    esi,DWORD PTR [ecx-0x6a]
  4159b9:	mov    fs:0xb26a0488,al
  4159bf:	push   esp
  4159c0:	mov    edi,0xefcc171f
  4159c5:	xchg   edx,eax
  4159c6:	retf   0x47b4
  4159c9:	daa    
  4159ca:	jl     0x41597d
  4159cc:	add    al,0x7d
  4159ce:	pop    edi
  4159cf:	mov    edi,0x1d6f36fb
  4159d4:	jns    0x4159e0
  4159d6:	push   ebx
  4159d7:	mov    cl,dl
  4159d9:	(bad)  
  4159da:	mov    ah,0x19
  4159dc:	addr16 jb 0x4159ae
  4159df:	xor    al,0xc3
  4159e1:	inc    ebx
  4159e2:	pop    esp
  4159e3:	call   0x5671:0xf13040df
  4159ea:	ins    DWORD PTR es:[edi],dx
  4159eb:	ret    
  4159ec:	jne    0x41596f
  4159ee:	loop   0x415a66
  4159f0:	imul   edi,DWORD PTR [ebx-0x57],0x95a56303
  4159f7:	fiadd  DWORD PTR [ecx+0x328b497e]
  4159fd:	adc    esi,ecx
  4159ff:	sbb    eax,0x3260659a
  415a04:	pop    esp
  415a05:	dec    edx
  415a06:	cld    
  415a07:	sbb    eax,0xbd2bb956
  415a0c:	leave  
  415a0d:	out    dx,eax
  415a0e:	xor    edi,DWORD PTR [ebx-0x14]
  415a11:	ret    0x3dfd
  415a14:	retf   0x921c
  415a17:	mov    al,0x6f
  415a19:	xchg   esp,eax
  415a1a:	les    esp,FWORD PTR [ebp+0x2830f1b8]
  415a20:	dec    ebx
  415a21:	dec    ebp
  415a22:	jns    0x415a24
  415a24:	pop    esp
  415a25:	dec    ebx
  415a26:	push   ebx
  415a27:	push   ecx
  415a28:	cpuid  
  415a2a:	mov    ah,0xf7
  415a2c:	ins    BYTE PTR es:[edi],dx
  415a2d:	pusha  
  415a2e:	js     0x415aae
  415a30:	outs   dx,BYTE PTR ds:[esi]
  415a31:	(bad)  
  415a33:	sbb    al,0xc1
  415a35:	call   0xe6e1:0x10bfc905
  415a3c:	add    BYTE PTR [ecx-0x4954b46b],bh
  415a42:	dec    DWORD PTR [esi]
  415a44:	xchg   ecx,eax
  415a45:	cmp    cl,BYTE PTR [ecx-0x79]
  415a48:	fld    QWORD PTR [ebp+0x5bae00a]
  415a4e:	jbe    0x415a1f
  415a50:	xor    eax,0x67ec42a4
  415a55:	adc    al,0xf6
  415a57:	cmp    ecx,DWORD PTR [eax]
  415a59:	(bad)  
  415a5a:	imul   edi,DWORD PTR [ebp+0x68],0x4d
  415a5e:	push   0xffffff81
  415a60:	mov    al,ds:0xa030e80b
  415a65:	(bad)  ds:0x26496b40
  415a6b:	out    dx,al
  415a6c:	xchg   DWORD PTR [eax],ecx
  415a6e:	lds    ebx,FWORD PTR [esp+ecx*4]
  415a71:	xor    eax,0xa85c3306
  415a76:	sub    eax,0x52926683
  415a7b:	outs   dx,BYTE PTR ds:[esi]
  415a7c:	xor    al,BYTE PTR [edx]
  415a7e:	call   0x6c01bafd
  415a83:	int3   
  415a84:	dec    esi
  415a85:	add    ah,BYTE PTR [edi+ebx*8+0x5acf9d4b]
  415a8c:	lock add esi,DWORD PTR [ebx+ecx*2]
  415a90:	mov    esp,ss
  415a92:	and    dl,BYTE PTR [edx+esi*8]
  415a95:	ss je  0x415a2b
  415a98:	ror    DWORD PTR [edx+0x64],cl
  415a9b:	xchg   edi,eax
  415a9c:	outs   dx,BYTE PTR ds:[esi]
  415a9d:	jl     0x415a33
  415a9f:	loop   0x415af9
  415aa1:	imul   eax,DWORD PTR [esi-0x33],0x3ffe42c9
  415aa8:	dec    ebp
  415aa9:	lods   eax,DWORD PTR ds:[esi]
  415aaa:	jae    0x415b0b
  415aac:	ret    0x7561
  415aaf:	out    0xc9,eax
  415ab1:	sbb    esp,DWORD PTR [ebp-0x5bb34d5f]
  415ab7:	push   es
  415ab8:	push   0xeee03aa
  415abd:	mov    ebp,0xc9c4d048
  415ac2:	stos   BYTE PTR es:[edi],al
  415ac3:	int    0x64
  415ac5:	mov    edi,0x7e138624
  415aca:	mov    cl,0x87
  415acc:	pop    esp
  415acd:	sbb    al,0x3f
  415acf:	push   ss
  415ad0:	adc    dl,BYTE PTR [edi]
  415ad2:	and    al,0xa5
  415ad4:	push   ebx
  415ad5:	sub    eax,0x903ab690
  415ada:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415adb:	xor    ebp,0x35
  415ade:	pop    ebp
  415adf:	rcl    BYTE PTR [ecx],0x3c
  415ae2:	scas   al,BYTE PTR es:[edi]
  415ae3:	imul   DWORD PTR [esi+0x64]
  415ae6:	leave  
  415ae7:	inc    edx
  415ae8:	inc    edx
  415ae9:	(bad)  
  415aea:	jecxz  0x415b34
  415aec:	inc    ecx
  415aed:	pop    edx
  415aee:	sub    BYTE PTR ds:0x718b06f8,0x90
  415af5:	cmp    cl,BYTE PTR [ebp+0x1bf27b08]
  415afb:	inc    ebp
  415afc:	test   eax,0xd27d228f
  415b01:	cmp    esi,esp
  415b03:	out    dx,al
  415b04:	cmp    ebp,DWORD PTR [esi]
  415b06:	add    al,0xde
  415b08:	add    eax,0xd6eedaab
  415b0d:	test   DWORD PTR [edi],ecx
  415b0f:	pushf  
  415b10:	adc    al,0x93
  415b12:	sahf   
  415b13:	shl    BYTE PTR [esp+ebp*1-0x48b6691c],0x97
  415b1b:	mov    dl,0x13
  415b1d:	pop    esi
  415b1e:	jge    0x415b61
  415b20:	add    bh,BYTE PTR [ebx+0x5d]
  415b23:	es sub dl,ah
  415b26:	rcr    DWORD PTR [ebx-0x69490c45],cl
  415b2c:	(bad)  
  415b2e:	shl    DWORD PTR [edx-0x47d41d93],cl
  415b34:	(bad)  
  415b35:	out    dx,eax
  415b36:	sbb    DWORD PTR [edx-0x1dd550a],eax
  415b3c:	add    BYTE PTR [eax],al
  415b3e:	add    BYTE PTR [eax],al
  415b40:	add    BYTE PTR [eax],al
  415b42:	rcl    BYTE PTR [esi],0x80
  415b45:	pop    ebx
  415b46:	(bad)  
  415b47:	(bad)  
  415b49:	lahf   
  415b4a:	jg     0x415ae1
  415b4c:	fadd   QWORD PTR gs:[eax+0x7]
  415b50:	push   esp
  415b51:	call   0x4234c1
  415b56:	repnz add al,0x0
  415b59:	add    BYTE PTR [ebp+eiz*8+0x1ec7d197],dl
  415b60:	dec    esi
  415b61:	or     ecx,edi
  415b63:	add    ebp,DWORD PTR [edi+esi*4-0x27]
  415b67:	xor    dl,ch
  415b69:	mov    edx,0x393d16c6
  415b6e:	mov    al,0x51
  415b70:	ror    BYTE PTR [ebx-0x79],1
  415b73:	jne    0x415b36
  415b75:	pushf  
  415b76:	sbb    DWORD PTR [eax+0x37ca594c],ebp
  415b7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415b7d:	inc    edi
  415b7e:	jno    0x415b9f
  415b80:	and    eax,0x78f96a1c
  415b85:	retf   0x3de
  415b88:	push   ebx
  415b89:	xlat   BYTE PTR ds:[ebx]
  415b8a:	cmc    
  415b8b:	cdq    
  415b8c:	pushf  
  415b8d:	jge    0x415b47
  415b8f:	inc    ebx
  415b90:	ror    BYTE PTR [bx-0x80],cl
  415b94:	fldz   
  415b96:	ins    BYTE PTR es:[edi],dx
  415b97:	mov    esi,0xd35f7643
  415b9c:	jmp    0x8ecc30a3
  415ba1:	inc    edi
  415ba2:	fdivr  st(2),st
  415ba4:	cmovge ebp,DWORD PTR [ecx-0x47]
  415ba8:	test   al,0xa9
  415baa:	aas    
  415bab:	xor    BYTE PTR es:[esi],al
  415bae:	icebp  
  415baf:	scas   al,BYTE PTR es:[edi]
  415bb0:	scas   eax,DWORD PTR es:[edi]
  415bb1:	fstp   QWORD PTR [ebx]
  415bb3:	imul   esp,DWORD PTR [ebx+0x49],0x924a4609
  415bba:	dec    ebx
  415bbb:	shl    DWORD PTR [edi-0x4f],cl
  415bbe:	aam    0xe4
  415bc0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415bc1:	loope  0x415bea
  415bc3:	xor    bh,BYTE PTR [ebx]
  415bc5:	arpl   WORD PTR [ecx],bx
  415bc7:	outs   dx,DWORD PTR ds:[esi]
  415bc8:	repz adc bl,bl
  415bcb:	js     0x415bb1
  415bcd:	data16 or bl,al
  415bd0:	fs xchg ebp,eax
  415bd2:	cwde   
  415bd3:	mov    ds:0xa10632a4,al
  415bd8:	cdq    
  415bd9:	jmp    0xc046150c
  415bde:	imul   ebx,DWORD PTR [eax-0x61],0xffffff98
  415be2:	dec    ebp
  415be3:	or     DWORD PTR [ecx-0x73],0xffffffc5
  415be7:	pop    ss
  415be8:	dec    edi
  415be9:	loope  0x415be7
  415beb:	xchg   bh,ch
  415bed:	sti    
  415bee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415bef:	cmp    BYTE PTR [edx+0x46],0x6b
  415bf3:	jecxz  0x415b9b
  415bf5:	dec    eax
  415bf6:	xchg   DWORD PTR [eax+0x23],edx
  415bf9:	xor    dh,BYTE PTR [ebx]
  415bfb:	fstp   QWORD PTR [ecx]
  415bfd:	xor    al,0xfc
  415bff:	mov    ch,0xc6
  415c01:	mov    ebp,0x95026ba8
  415c06:	sub    eax,0x50832c0f
  415c0b:	(bad)  
  415c0c:	aad    0xf9
  415c0e:	mov    dl,0x1d
  415c10:	cld    
  415c11:	adc    al,BYTE PTR [edx]
  415c13:	mov    bl,0x0
  415c15:	jns    0x415bf6
  415c17:	xor    ebx,DWORD PTR [ecx]
  415c19:	sahf   
  415c1a:	ret    
  415c1b:	data16 aad 0x7b
  415c1e:	push   edx
  415c1f:	pop    ecx
  415c20:	imul   ebp,DWORD PTR [eax+eiz*1-0x6123e2fd],0x3becece9
  415c2b:	push   ebp
  415c2c:	fadd   st(0),st
  415c2e:	mov    al,0xae
  415c30:	mov    bh,0x9e
  415c32:	xor    edi,DWORD PTR [eax-0x4945f49c]
  415c38:	jmp    0xb897:0x47c38054
  415c3f:	cmp    edi,0xffffffab
  415c42:	out    0x64,al
  415c44:	(bad)
  415c47:	jge    0x415cc7
  415c49:	rol    BYTE PTR [edx-0x11],0x5
  415c4d:	or     eax,0x2ec91abd
  415c52:	jno    0x415c6f
  415c54:	sar    BYTE PTR [ecx],0x9
  415c57:	call   0x67c21b87
  415c5c:	cmp    eax,0x5e930c76
  415c61:	push   edx
  415c62:	sbb    eax,0x9334b8bd
  415c67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c68:	jge    0x415cc4
  415c6a:	inc    edi
  415c6b:	ret    0x5e01
  415c6e:	jno    0x415c85
  415c70:	pusha  
  415c71:	xchg   ebx,eax
  415c72:	call   0xf4ed4c01
  415c77:	sbb    al,0x5f
  415c79:	pop    ds
  415c7a:	mov    bh,0x8b
  415c7c:	xchg   ebp,eax
  415c7d:	call   0x101d:0x4c3b45a8
  415c84:	sbb    eax,0xfcb1a7df
  415c89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c8a:	ficom  DWORD PTR [ebx]
  415c8c:	fwait
  415c8d:	adc    ch,bh
  415c8f:	cld    
  415c90:	cmp    al,0x6c
  415c92:	sbb    ebp,DWORD PTR [eax+0x58dfdea2]
  415c98:	es mov al,0x93
  415c9b:	xor    bl,BYTE PTR [edx-0x539d0252]
  415ca1:	and    al,0x38
  415ca3:	mov    edx,0xc668a13a
  415ca8:	stos   DWORD PTR es:[edi],eax
  415ca9:	fistp  QWORD PTR ds:0x434662bc
  415caf:	aaa    
  415cb0:	adc    DWORD PTR [esp+ecx*4],ebp
  415cb3:	mov    ebx,0x47c49949
  415cb8:	fdiv   DWORD PTR ds:0xf9329611
  415cbe:	push   ss
  415cbf:	inc    eax
  415cc0:	cs jne 0x415d10
  415cc3:	cmp    esp,DWORD PTR [edx-0x23034b3b]
  415cc9:	ret    
  415cca:	in     al,dx
  415ccb:	push   eax
  415ccc:	sar    BYTE PTR [edi-0x5e],0x6
  415cd0:	scas   eax,DWORD PTR es:[edi]
  415cd1:	aam    0xf0
  415cd3:	shld   DWORD PTR [edi],esp,cl
  415cd6:	(bad)
  415cd9:	adc    eax,0x86f440df
  415cde:	mov    edx,0x91272c34
  415ce3:	test   al,0xff
  415ce5:	and    BYTE PTR [ebx-0x67],bh
  415ce8:	inc    esi
  415ce9:	fisttp DWORD PTR [ecx]
  415ceb:	(bad)
  415cee:	sbb    ebp,DWORD PTR [esi-0x62]
  415cf1:	adc    DWORD PTR [edx-0x1e7281e0],edi
  415cf7:	in     eax,dx
  415cf8:	sub    edi,DWORD PTR [eax+0x12c15676]
  415cfe:	in     al,dx
  415cff:	ins    BYTE PTR es:[edi],dx
  415d00:	push   ebp
  415d01:	push   ds
  415d02:	xor    bh,dh
  415d04:	lock es retf 0xf25a
  415d09:	cmp    ecx,DWORD PTR [ecx]
  415d0b:	div    BYTE PTR [ebp-0x26]
  415d0e:	mov    cl,0x34
  415d10:	out    dx,eax
  415d11:	mov    ebx,0xf0c3d472
  415d16:	test   eax,0x270e461a
  415d1b:	cwde   
  415d1c:	mov    ebx,0x573c516b
  415d21:	repz call 0xb0cb:0xe4e7aecf
  415d29:	fwait
  415d2a:	call   0xece1:0x553edff7
  415d31:	in     eax,0x82
  415d33:	fsub   QWORD PTR [edx]
  415d35:	pop    ecx
  415d36:	xchg   edx,eax
  415d37:	pop    es
  415d38:	pop    edx
  415d39:	test   eax,0xebc4c4a0
  415d3f:	xchg   ecx,eax
  415d40:	mov    dh,0xc8
  415d42:	push   edx
  415d43:	shl    BYTE PTR [ebx+edi*2+0x74],cl
  415d47:	xchg   esp,eax
  415d48:	inc    ebp
  415d49:	and    eax,0x55fa08fd
  415d4e:	xor    ebx,esi
  415d50:	sub    cl,BYTE PTR [esi-0x1a]
  415d53:	(bad)  [esi]
  415d55:	mov    cl,0x81
  415d57:	outs   dx,DWORD PTR ds:[esi]
  415d58:	adc    al,bl
  415d5a:	sub    edi,DWORD PTR [edx-0x308d574e]
  415d60:	pop    esi
  415d61:	add    eax,0xaa8bddf0
  415d66:	loope  0x415dbb
  415d68:	push   edx
  415d69:	mov    ecx,0x9c9277c1
  415d6e:	rcr    eax,0x13
  415d71:	dec    ebx
  415d72:	stos   DWORD PTR es:[edi],eax
  415d73:	and    edi,eax
  415d75:	jnp    0x415df5
  415d77:	jo     0x415dc2
  415d79:	aaa    
  415d7a:	sub    al,0x4f
  415d7c:	rcr    BYTE PTR [edx+0x62],0x3
  415d80:	pop    ebp
  415d81:	ja     0x415d4b
  415d83:	mov    dl,0xad
  415d85:	cmp    ecx,DWORD PTR [edx]
  415d87:	repz std 
  415d89:	sbb    bl,BYTE PTR [edx+0x63]
  415d8c:	push   ss
  415d8d:	xchg   esp,eax
  415d8e:	push   0xb9ab0a2d
  415d93:	inc    edx
  415d94:	cs test eax,0x6282f237
  415d9a:	call   0xfb61:0x1e080796
  415da1:	add    eax,0xc2ede462
  415da6:	repz ss sbb al,0xd6
  415daa:	icebp  
  415dab:	sbb    DWORD PTR [eax+0x3],0xa4f3da49
  415db2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415db3:	xor    al,0x31
  415db5:	jns    0x415d52
  415db7:	xor    esp,DWORD PTR [ecx+0x2758edb5]
  415dbd:	fsubr  DWORD PTR [eax-0x31]
  415dc0:	adc    al,0x8f
  415dc2:	jae    0x415dd6
  415dc4:	aam    0x80
  415dc6:	dec    esp
  415dc7:	fsubr  DWORD PTR [edx+0xca417ed]
  415dcd:	in     al,dx
  415dce:	mov    ah,0xf1
  415dd0:	fucomi st,st(5)
  415dd2:	clc    
  415dd3:	js     0x415d79
  415dd5:	sub    ebx,esp
  415dd7:	sbb    BYTE PTR [ebp+0x5d],cl
  415dda:	sbb    eax,eax
  415ddc:	(bad)  
  415ddd:	xchg   ecx,eax
  415dde:	fs push esp
  415de0:	push   es
  415de1:	and    eax,DWORD PTR [esp+eax*4+0x15d58c59]
  415de8:	xchg   ecx,eax
  415de9:	lods   al,BYTE PTR ds:[esi]
  415dea:	nop
  415deb:	sbb    al,0xeb
  415ded:	into   
  415dee:	dec    edi
  415def:	xor    eax,0xa8aeb57
  415df4:	popa   
  415df5:	sub    BYTE PTR [ecx-0x6e8cd03],ch
  415dfb:	call   0x36bb:0x710740ec
  415e02:	ror    DWORD PTR [ebp+0xa82ae96],1
  415e08:	push   es
  415e09:	mov    ch,0x99
  415e0b:	xor    BYTE PTR [esi-0xd7f677e],dh
  415e11:	xor    eax,0xd433a96e
  415e16:	xchg   edx,eax
  415e17:	aas    
  415e18:	pop    es
  415e19:	mov    edi,0xe33947b2
  415e1e:	mov    eax,0x75f34536
  415e23:	mov    eax,0xccd0530e
  415e28:	imul   ebp,DWORD PTR [edi+0xa],0x2d3b1cc3
  415e2f:	jle    0x415e9e
  415e31:	(bad)  
  415e32:	dec    esi
  415e33:	jno    0x415e71
  415e35:	dec    ecx
  415e36:	jne    0x415e26
  415e38:	jge    0x415de9
  415e3a:	retf   0x6bb7
  415e3d:	rcr    BYTE PTR [ebx+0x18],0x4d
  415e41:	jno    0x415ea0
  415e43:	mov    esp,ebp
  415e45:	mov    ebx,0x786c9171
  415e4a:	arpl   WORD PTR [ebx+0x565e0305],si
  415e50:	push   ds
  415e51:	and    DWORD PTR [eax+0x3ef573d7],ebp
  415e57:	xor    ah,BYTE PTR [esi]
  415e59:	sub    eax,0x1f666e9f
  415e5e:	icebp  
  415e5f:	sahf   
  415e60:	aam    0x5e
  415e62:	das    
  415e63:	(bad)  
  415e64:	aas    
  415e65:	test   esi,ecx
  415e67:	sub    dh,ah
  415e69:	das    
  415e6a:	int3   
  415e6b:	pminsw mm4,QWORD PTR [esi+edi*1+0x61]
  415e70:	xor    eax,0x47d851f3
  415e75:	dec    esp
  415e76:	jbe    0x415eb4
  415e78:	mov    al,0x88
  415e7a:	shl    dl,0x80
  415e7d:	jne    0x415e50
  415e7f:	nop
  415e80:	mov    bh,0xc
  415e82:	jns    0x415eab
  415e84:	mov    bl,0xca
  415e86:	jno    0x415ede
  415e88:	mov    dl,0x3d
  415e8a:	xchg   ecx,eax
  415e8b:	mov    ds:0xcc70012c,eax
  415e90:	daa    
  415e91:	mov    ds:0xfc9b31e5,eax
  415e96:	popf   
  415e97:	cmp    BYTE PTR [edx-0x5a],bl
  415e9a:	mov    ebp,0xebeff0f5
  415e9f:	or     DWORD PTR ds:0xa6427262,ebp
  415ea5:	enter  0xb8cc,0x3b
  415ea9:	mov    WORD PTR [ebx-0x3958297a],es
  415eaf:	cld    
  415eb0:	mov    eax,0x76dcbde5
  415eb5:	xchg   ebp,eax
  415eb6:	aas    
  415eb7:	lahf   
  415eb8:	imul   esi,DWORD PTR [ebp+eax*8-0x72],0xc5431237
  415ec0:	imul   eax,DWORD PTR [edi+0x61e04235],0xb
  415ec7:	mov    dh,0x11
  415ec9:	mov    edx,0x4b24f7f6
  415ece:	or     al,BYTE PTR ds:0xb65d3023
  415ed4:	ss add al,0xb0
  415ed7:	xchg   ebp,eax
  415ed8:	mov    cl,BYTE PTR [esi]
  415eda:	loope  0x415e8b
  415edc:	arpl   WORD PTR [ebx+0x4c42ffce],dx
  415ee2:	fimul  DWORD PTR [esi]
  415ee4:	jne    0x415e87
  415ee6:	es xchg ebp,eax
  415ee8:	and    DWORD PTR [edi-0x2b],ebx
  415eeb:	mov    eax,0x95121da5
  415ef0:	test   eax,0x426bcfc6
  415ef5:	cdq    
  415ef6:	hlt    
  415ef7:	js     0x415ec3
  415ef9:	push   ebx
  415efa:	adc    bl,BYTE PTR es:[ebx-0x416fb98d]
  415f01:	hlt    
  415f02:	push   esi
  415f03:	jae    0x415f3e
  415f05:	int3   
  415f06:	in     eax,dx
  415f07:	xlat   BYTE PTR ds:[ebx]
  415f08:	xchg   DWORD PTR [ebp+0x5fb688b9],edi
  415f0e:	mov    bh,0xee
  415f10:	popf   
  415f11:	inc    eax
  415f12:	mov    ah,0x36
  415f14:	or     ebp,edx
  415f16:	test   DWORD PTR [esp+eax*2+0x620285f5],0xb616092f
  415f21:	or     bl,BYTE PTR [esi-0x69]
  415f24:	mov    ah,0x6e
  415f26:	dec    esi
  415f27:	out    0x6c,al
  415f29:	mov    ds:0xc7dfcc0e,eax
  415f2e:	pop    edx
  415f2f:	bound  ebp,QWORD PTR [ebx+0x7e0009c5]
  415f35:	sar    al,cl
  415f37:	push   eax
  415f38:	dec    edi
  415f39:	xchg   edx,eax
  415f3a:	inc    edx
  415f3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f3c:	sar    BYTE PTR [esi],0x93
  415f3f:	jnp    0x415f2b
  415f41:	jecxz  0x415f4d
  415f43:	data16 sti 
  415f45:	mov    eax,0x2abbc19
  415f4a:	sub    ch,BYTE PTR [eax-0x52]
  415f4d:	push   esp
  415f4e:	and    BYTE PTR [ebp+0x5e],dh
  415f51:	pop    esi
  415f52:	add    BYTE PTR [ebp+0x3f78d802],bh
  415f58:	loope  0x415eff
  415f5a:	jle    0x415ee0
  415f5c:	or     eax,0x494aedca
  415f61:	gs jmp 0x415eee
  415f64:	mov    eax,0x1c1d62f7
  415f69:	in     eax,dx
  415f6a:	cmp    eax,0xed49dfe1
  415f6f:	mov    BYTE PTR [edx+0x10],bh
  415f72:	imul   esi,DWORD PTR [esp+ecx*4],0xffffff8e
  415f76:	inc    ax
  415f78:	mov    ds:0xf07f91ab,al
  415f7d:	sub    edi,DWORD PTR [ecx+0x544e7dde]
  415f83:	stos   BYTE PTR es:[edi],al
  415f84:	push   cs
  415f85:	int    0x1d
  415f87:	or     ecx,edx
  415f89:	adc    dh,dl
  415f8b:	or     al,0xf8
  415f8d:	push   ebx
  415f8e:	clc    
  415f8f:	aam    0xa5
  415f91:	push   ds
  415f92:	and    BYTE PTR [esi],cl
  415f94:	mov    ds:0xd98fce6b,ax
  415f9a:	(bad)  
  415f9b:	icebp  
  415f9c:	fs mov ebx,0xb01bf9e
  415fa2:	mov    ebp,0xc87ac23d
  415fa7:	add    ecx,DWORD PTR [edx+0x11]
  415faa:	add    al,0x66
  415fac:	or     BYTE PTR [edx*8-0x38521f28],al
  415fb3:	mov    dh,0x6d
  415fb5:	fsubr  DWORD PTR [esi]
  415fb7:	mov    ah,0x3d
  415fb9:	pusha  
  415fba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415fbb:	pushf  
  415fbc:	ins    DWORD PTR es:[edi],dx
  415fbd:	test   al,0xdb
  415fbf:	sub    BYTE PTR [eax+0x77],bl
  415fc2:	mov    bl,0x13
  415fc4:	jbe    0x415f56
  415fc6:	daa    
  415fc7:	adc    dh,BYTE PTR [edx-0x26]
  415fca:	out    0x94,eax
  415fcc:	loope  0x41600e
  415fce:	retf   
  415fcf:	test   DWORD PTR [edx+0x79],ebp
  415fd2:	cmp    al,0x69
  415fd4:	sahf   
  415fd5:	hlt    
  415fd6:	retf   0x5059
  415fd9:	pop    ebx
  415fda:	adc    eax,0x52dc8d83
  415fdf:	shl    DWORD PTR [esi+0xea0f25a],1
  415fe5:	aas    
  415fe6:	push   esp
  415fe7:	or     esp,DWORD PTR [ecx+0x2fb814a6]
  415fed:	retf   
  415fee:	retf   
  415fef:	and    BYTE PTR [ecx-0xbd7eee],dh
  415ff5:	leave  
  415ff6:	outs   dx,DWORD PTR ds:[esi]
  415ff7:	push   esp
  415ff8:	adc    ebx,0x22
  415ffb:	jno    0x41605e
  415ffd:	loop   0x416071
  415fff:	xchg   esp,eax
  416000:	(bad)  
  416001:	pusha  
  416002:	popf   
  416003:	ret    
  416004:	aas    
  416005:	fcomp  st(3)
  416007:	or     al,0xa6
  416009:	rcl    BYTE PTR [esi-0x6f],1
  41600c:	sbb    eax,0xdb070fd7
  416011:	stos   DWORD PTR es:[edi],eax
  416012:	mov    ch,0x78
  416014:	in     al,dx
  416015:	adc    BYTE PTR [ebx],bl
  416017:	lods   al,BYTE PTR ds:[esi]
  416018:	in     al,0x16
  41601a:	retf   
  41601b:	push   cs
  41601c:	xor    DWORD PTR [edi+ebp*1+0x6b],ebp
  416020:	icebp  
  416021:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416022:	sub    al,0xd6
  416024:	xchg   esi,ebp
  416026:	js     0x416087
  416028:	cmp    al,0x8d
  41602a:	(bad)  
  41602b:	loope  0x415feb
  41602d:	sub    DWORD PTR [edi+edx*4],eax
  416030:	sbb    DWORD PTR [eax+eax*8],ebx
  416033:	sbb    DWORD PTR [ecx],ecx
  416035:	lea    ebp,cs:[ebx+0x7]
  416039:	xor    eax,0x53f7cbf5
  41603e:	out    dx,eax
  41603f:	les    ebx,FWORD PTR [ebx]
  416041:	dec    edx
  416042:	pop    esi
  416043:	stos   BYTE PTR es:[edi],al
  416044:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416045:	ret    0xf084
  416048:	popa   
  416049:	xor    eax,0xd8ae
  41604e:	add    BYTE PTR [eax],al
  416050:	add    BYTE PTR [eax],al
  416052:	cmp    dh,BYTE PTR [ebp+0x3c]
  416055:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416056:	jg     0x416047
  416058:	mov    edx,0xd72f5cfd
  41605d:	jae    0x41603a
  41605f:	out    dx,eax
  416060:	(bad)  
  416061:	and    BYTE PTR [ebp-0x22],bl
  416064:	add    BYTE PTR [eax],al
  416066:	repnz add al,0x0
  416069:	add    dh,ch
  41606b:	arpl   si,si
  41606d:	or     eax,0xfd964f5b
  416072:	xor    al,0x2
  416074:	xchg   esi,eax
  416075:	jb     0x415ffd
  416077:	mov    ch,0x60
  416079:	or     edi,DWORD PTR [esi]
  41607b:	pop    ecx
  41607c:	or     al,0x88
  41607e:	loopne 0x416099
  416080:	mov    dl,0x89
  416082:	in     al,dx
  416083:	out    0x96,eax
  416085:	jo     0x47b3e31c
  41608b:	mov    cl,0xa9
  41608d:	mov    ds:0xa210e0af,eax
  416092:	test   esp,esi
  416094:	push   edi
  416095:	int3   
  416096:	stc    
  416097:	pop    ebx
  416098:	push   ecx
  416099:	cli    
  41609a:	sti    
  41609b:	push   edx
  41609c:	icebp  
  41609d:	test   eax,0x3503109e
  4160a2:	jp     0x416091
  4160a4:	inc    ecx
  4160a5:	mov    al,BYTE PTR [esi]
  4160a7:	sub    eax,esi
  4160a9:	mov    cl,0xd5
  4160ab:	dec    edi
  4160ac:	push   ss
  4160ad:	(bad)  ds:0x947b1e6b
  4160b3:	gs jmp 0xd57aab07
  4160b9:	pusha  
  4160ba:	jg     0x4160d6
  4160bc:	aam    0xf7
  4160be:	cmc    
  4160bf:	outs   dx,DWORD PTR ds:[esi]
  4160c0:	mov    ebx,0x43830e4c
  4160c5:	and    dl,BYTE PTR [edi+eiz*4]
  4160c8:	aad    0xf
  4160ca:	lock push esi
  4160cc:	js     0x416135
  4160ce:	mov    WORD PTR [edx-0x2a6dc5fa],ds
  4160d4:	adc    DWORD PTR [eax],0x390fa5a0
  4160da:	aas    
  4160db:	int3   
  4160dc:	sti    
  4160dd:	and    eax,0x52e92125
  4160e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4160e3:	sub    ebx,eax
  4160e5:	in     eax,dx
  4160e6:	mov    bh,0x1
  4160e8:	jne    0x416101
  4160ea:	leave  
  4160eb:	jmp    0x11f6:0x286fe29
  4160f2:	mov    bh,0xa5
  4160f4:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4160f6:	inc    eax
  4160f7:	add    eax,0x92cd8558
  4160fc:	test   al,0x45
  4160fe:	inc    edx
  4160ff:	ins    DWORD PTR es:[edi],dx
  416100:	inc    ecx
  416101:	mov    DWORD PTR [edx-0x41e712d9],esi
  416107:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416108:	pop    eax
  416109:	cmp    edi,DWORD PTR [edx+0x1aba9228]
  41610f:	shl    DWORD PTR [edx-0x4c],1
  416112:	(bad)  
  416113:	jmp    0x416183
  416115:	retf   0x33af
  416118:	add    BYTE PTR [esp+ebp*8+0xe],ch
  41611c:	pop    ecx
  41611d:	mov    DWORD PTR [ebp-0x1b358151],ecx
  416123:	lahf   
  416124:	dec    ecx
  416125:	test   al,0xae
  416127:	in     al,0xdd
  416129:	into   
  41612a:	sbb    eax,0x53ef6b20
  41612f:	in     al,0xb8
  416131:	pop    ebp
  416132:	push   ds
  416133:	push   ebx
  416134:	call   0x2c8a:0x6ec19fd7
  41613b:	inc    ecx
  41613c:	out    dx,al
  41613d:	push   es
  41613e:	xchg   esi,eax
  41613f:	jmp    0x6c3f9a89
  416144:	mov    edi,0xa56e9032
  416149:	lods   eax,DWORD PTR ds:[esi]
  41614a:	ja     0x416166
  41614c:	jg     0x41613c
  41614e:	jo     0x41613c
  416150:	aad    0xdb
  416152:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416153:	xchg   esi,eax
  416154:	push   edi
  416155:	ret    0xdd53
  416158:	inc    ebx
  416159:	adc    eax,0x54b90c42
  41615e:	iret   
  41615f:	pop    es
  416160:	mov    cl,0x50
  416162:	in     eax,0xf6
  416164:	mov    ch,0x62
  416166:	je     0x41613c
  416168:	pop    eax
  416169:	pop    edi
  41616a:	les    ecx,FWORD PTR [ecx-0x63]
  41616d:	inc    eax
  41616e:	dec    ebx
  41616f:	sti    
  416170:	aaa    
  416171:	cmp    edi,DWORD PTR [ebx-0x53]
  416174:	scas   eax,DWORD PTR es:[edi]
  416175:	pop    edi
  416176:	fst    DWORD PTR [ecx]
  416178:	xchg   BYTE PTR [edi+0xbaa1bfc],dl
  41617e:	sub    DWORD PTR [eax+edi*2-0x1c],ecx
  416182:	stc    
  416183:	cli    
  416184:	push   cs
  416185:	call   0x3ac9:0x9a96d2cc
  41618c:	shl    DWORD PTR [ecx-0x37],1
  41618f:	stc    
  416190:	rol    esp,0x1f
  416193:	xor    ch,al
  416195:	pop    edi
  416196:	outs   dx,BYTE PTR ds:[esi]
  416197:	call   0x469fecc
  41619c:	ins    DWORD PTR es:[edi],dx
  41619d:	and    al,0xb0
  41619f:	mov    al,ds:0x8cd0ba8b
  4161a4:	shl    DWORD PTR [ebx+0x7b8385b1],cl
  4161aa:	add    BYTE PTR [edi+ecx*1],al
  4161ad:	loop   0x41617a
  4161af:	push   ds
  4161b0:	icebp  
  4161b1:	test   BYTE PTR [ebx-0x4ccae26f],cl
  4161b7:	or     al,0x30
  4161b9:	dec    edi
  4161ba:	rcr    BYTE PTR [ebp-0x27559734],1
  4161c0:	sub    BYTE PTR [esi],cl
  4161c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4161c3:	mov    eax,0x75a8e5cb
  4161c8:	js     0x416237
  4161ca:	and    bh,dl
  4161cc:	repnz pushf 
  4161ce:	js     0x4161ce
  4161d0:	mov    bh,bh
  4161d2:	and    ebp,DWORD PTR [esi*1+0x31c55408]
  4161d9:	jmp    DWORD PTR [eax]
  4161db:	push   esi
  4161dc:	xchg   ebx,eax
  4161dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4161de:	out    0x87,eax
  4161e0:	(bad)  
  4161e1:	sub    ebx,DWORD PTR [edx+0x46b2a45a]
  4161e7:	addr16 (bad) 
  4161e9:	ficomp WORD PTR [edx-0x4b]
  4161ec:	enter  0x90d2,0x3c
  4161f0:	retf   0x3f2b
  4161f3:	and    DWORD PTR [eax],ebp
  4161f5:	cs popa 
  4161f7:	inc    edx
  4161f8:	mov    dl,0x51
  4161fa:	aas    
  4161fb:	or     eax,0x62e433b6
  416200:	mov    bl,0x28
  416202:	popf   
  416203:	dec    esi
  416204:	int3   
  416205:	pop    ecx
  416206:	dec    ebp
  416207:	cdq    
  416208:	mov    al,0xbf
  41620a:	mov    ecx,0xa2fb1571
  41620f:	fbld   TBYTE PTR [ecx-0x50cb736d]
  416215:	lock mov WORD PTR [edx+0x25de4a6d],?
  41621c:	push   0x32
  41621e:	jmp    0x1c29b42b
  416223:	add    BYTE PTR [edx-0x6f],cl
  416226:	fnsave [ebp+0x7d28c8cd]
  41622c:	mov    edi,0x432e3506
  416231:	loope  0x4161ed
  416233:	xor    edx,DWORD PTR [edi+0x17]
  416236:	stos   BYTE PTR es:[edi],al
  416237:	iret   
  416238:	call   0xbf053d00
  41623d:	mov    ds:0x123d0c6a,eax
  416242:	lock std 
  416244:	jae    0x416292
  416246:	adc    al,0x8c
  416248:	pop    edi
  416249:	mov    cl,ch
  41624b:	inc    ecx
  41624c:	cmp    BYTE PTR [ebp-0x4e],0x79
  416250:	aas    
  416251:	int    0x7f
  416253:	adc    dh,BYTE PTR ds:0xd80dc243
  416259:	cmp    dl,dl
  41625b:	inc    esp
  41625c:	sbb    BYTE PTR [ebx],dh
  41625e:	and    cl,BYTE PTR [ebx+0x3ef55a5]
  416264:	je     0x4161f5
  416266:	daa    
  416267:	out    0x9f,eax
  416269:	cld    
  41626a:	sahf   
  41626b:	jnp    0x4162dc
  41626d:	rcr    bh,cl
  41626f:	(bad)  
  416270:	jecxz  0x41624c
  416272:	iret   
  416273:	pop    DWORD PTR [ecx]
  416275:	pop    edx
  416276:	in     eax,0xa5
  416278:	lods   al,BYTE PTR ds:[esi]
  416279:	in     al,0xbd
  41627b:	cmp    edi,DWORD PTR [edi+0x7f]
  41627e:	xor    BYTE PTR [ecx*4-0x1a586bc4],cl
  416285:	popf   
  416286:	test   BYTE PTR es:[esi-0x4659919],al
  41628d:	push   ss
  41628e:	fild   QWORD PTR [ebp+edi*2-0x106ef03d]
  416295:	push   ss
  416296:	push   esp
  416297:	xor    eax,0xdd7834df
  41629c:	add    BYTE PTR [edx+0x15],cl
  41629f:	ficomp WORD PTR [edx+eax*1]
  4162a2:	push   ebx
  4162a3:	loopne 0x416260
  4162a5:	lahf   
  4162a6:	fsub   DWORD PTR [edx-0x7e19d4e8]
  4162ac:	mov    ds:0x26470aac,al
  4162b1:	adc    al,0x8c
  4162b3:	inc    eax
  4162b4:	stos   DWORD PTR es:[edi],eax
  4162b5:	ins    DWORD PTR es:[edi],dx
  4162b6:	xor    al,0xa0
  4162b8:	aaa    
  4162b9:	push   esp
  4162ba:	rol    BYTE PTR [edx],cl
  4162bc:	pop    eax
  4162bd:	imul   esi,DWORD PTR [eax],0xed08b70c
  4162c3:	psubsw mm6,QWORD PTR [eax]
  4162c6:	push   ebp
  4162c7:	shl    ch,1
  4162c9:	cld    
  4162ca:	pop    ds
  4162cb:	mov    eax,ds:0x134ebb69
  4162d0:	sub    DWORD PTR [ebx],ebx
  4162d2:	imul   ecx,esi,0xa5790150
  4162d8:	das    
  4162d9:	pop    ebx
  4162da:	pushf  
  4162db:	cli    
  4162dc:	es pop ecx
  4162de:	sbb    DWORD PTR [ebp+0x1873e0aa],eax
  4162e4:	sbb    BYTE PTR [ebx],dh
  4162e6:	mov    al,ds:0x9d1c9c28
  4162eb:	dec    esi
  4162ec:	or     edi,ecx
  4162ee:	ret    
  4162ef:	adc    eax,0x32c690e5
  4162f4:	inc    ebp
  4162f5:	pusha  
  4162f6:	pop    edx
  4162f7:	and    esi,esp
  4162f9:	rcr    DWORD PTR [ecx],0xd7
  4162fc:	sti    
  4162fd:	pop    es
  4162fe:	out    dx,al
  4162ff:	(bad)  
  416301:	cs out 0xd,al
  416304:	pushf  
  416305:	ja     0x4162a1
  416307:	push   cs
  416308:	jp     0x416339
  41630a:	xchg   esi,eax
  41630b:	mov    eax,0x4bdf45a1
  416310:	(bad)  [ecx+edi*4-0x140ecfaf]
  416317:	push   ds
  416318:	adc    DWORD PTR [esi],ebx
  41631a:	sahf   
  41631b:	stc    
  41631c:	sub    cl,0x9a
  41631f:	jnp    0x4162cb
  416321:	mov    DWORD PTR [edi-0x1],esp
  416324:	mov    eax,ds:0xf52310bb
  416329:	imul   ebp,eax,0x3c455c7a
  41632f:	cld    
  416330:	in     eax,0x7d
  416332:	push   ebx
  416333:	shr    ebx,cl
  416335:	fsub   DWORD PTR [ebp+0x316d7210]
  41633b:	neg    BYTE PTR [edx]
  41633d:	pusha  
  41633e:	adc    bh,bl
  416340:	push   ds
  416341:	mov    ebp,0xc1533fba
  416346:	int3   
  416347:	and    BYTE PTR [esp+ecx*2],al
  41634a:	mov    cs,WORD PTR [edx]
  41634c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41634d:	jmp    0xbde559b1
  416352:	push   es
  416353:	fwait
  416354:	sti    
  416355:	sub    DWORD PTR [eax+0x1256187c],ebp
  41635b:	popa   
  41635c:	pop    ecx
  41635d:	dec    ecx
  41635e:	cld    
  41635f:	pop    edx
  416360:	inc    ebx
  416361:	xchg   esp,eax
  416362:	and    BYTE PTR [edx-0x3bc110ea],dh
  416368:	mov    WORD PTR [edi-0x5b6a7b4f],gs
  41636e:	jne    0x41639e
  416370:	pop    edx
  416371:	out    dx,eax
  416372:	lds    esi,FWORD PTR [eax+0x3a7810e7]
  416378:	add    bl,BYTE PTR [eiz*8-0x24c1f0fb]
  41637f:	or     eax,DWORD PTR [eax+0x53]
  416382:	dec    esi
  416383:	imul   esp,DWORD PTR [ecx+ebx*2-0x773a633d],0x75
  41638b:	mov    eax,ds:0xe7b256a7
  416390:	arpl   cx,dx
  416392:	mov    ch,0xc1
  416394:	out    dx,al
  416395:	jns    0x4163ef
  416397:	scas   eax,DWORD PTR es:[edi]
  416398:	imul   ebp,DWORD PTR [edi+0x34],0x30e89b85
  41639f:	cli    
  4163a0:	adc    al,0xd9
  4163a2:	xchg   esi,eax
  4163a3:	mov    esi,DWORD PTR [ebx+0x1218e7a6]
  4163a9:	jl     0x416403
  4163ab:	test   al,0x1a
  4163ad:	hlt    
  4163ae:	(bad)  
  4163af:	fwait
  4163b0:	test   al,0x3a
  4163b2:	cdq    
  4163b3:	xor    al,0x99
  4163b5:	dec    esp
  4163b6:	push   eax
  4163b7:	cmp    BYTE PTR [ecx+0x613d517f],bh
  4163bd:	jmp    DWORD PTR [esp+eiz*2]
  4163c0:	rcl    esp,0x4c
  4163c3:	cmp    DWORD PTR [eax+0xe],0x52
  4163c7:	adc    DWORD PTR [eax-0x27e6707f],esi
  4163cd:	mov    dh,0x38
  4163cf:	jge    0x416435
  4163d1:	lods   al,BYTE PTR ds:[esi]
  4163d2:	pop    edi
  4163d3:	inc    eax
  4163d4:	lods   al,BYTE PTR ds:[esi]
  4163d5:	mov    edx,DWORD PTR ds:0xb190c4d2
  4163db:	xchg   esp,eax
  4163dc:	cmp    al,BYTE PTR [edi+0x67]
  4163df:	xor    bh,BYTE PTR [edi-0x5e]
  4163e2:	fwait
  4163e3:	int3   
  4163e4:	sbb    eax,0xdac86fb7
  4163e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4163ea:	gs icebp 
  4163ec:	sbb    al,0xf4
  4163ee:	cwde   
  4163ef:	rcr    dh,1
  4163f1:	test   eax,0xe1e853d
  4163f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4163f7:	test   eax,0x56f107b5
  4163fc:	sbb    BYTE PTR [ebx+0x3a0e164],cl
  416402:	or     eax,0x5a0acd4
  416407:	fnstenv [ecx+0xd]
  41640a:	and    BYTE PTR [edi],bh
  41640c:	cli    
  41640d:	xor    ecx,edi
  41640f:	scas   eax,DWORD PTR es:[edi]
  416410:	cdq    
  416411:	inc    edi
  416412:	not    eax
  416414:	lea    esp,[ecx-0x65]
  416417:	mov    edx,0x7cd9e57
  41641c:	mov    bl,BYTE PTR [esi+0x6219a0bc]
  416422:	js     0x4163d7
  416424:	(bad)  
  416426:	out    0xd2,eax
  416428:	jne    0x416423
  41642a:	mov    DWORD PTR [ebp-0x1d],0x58bea402
  416431:	pop    esp
  416432:	loope  0x416432
  416434:	adc    esp,DWORD PTR [ebx]
  416436:	cmp    eax,0xe0cb1f40
  41643b:	mov    bl,0x10
  41643d:	outs   dx,DWORD PTR ds:[esi]
  41643e:	mov    eax,0xe6963e0d
  416443:	aam    0x75
  416445:	mov    dh,0xe5
  416447:	aam    0x27
  416449:	cmp    al,0xf0
  41644b:	or     al,0xd4
  41644d:	popa   
  41644e:	nop
  41644f:	jmp    0x41647a
  416451:	call   0xaa70:0x5cee554d
  416458:	fild   WORD PTR [esi+eax*2-0x75cda347]
  41645f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416460:	(bad)  
  416461:	frstor [ebx+ebx*4-0x65508de6]
  416468:	aas    
  416469:	imul   BYTE PTR [edi+eiz*8]
  41646c:	in     al,0x3a
  41646e:	mov    edx,0x8c7a7876
  416473:	in     al,dx
  416474:	xor    esi,DWORD PTR [ebx+edi*1+0x22]
  416478:	mul    BYTE PTR [edx+0x7a]
  41647b:	mov    al,0x39
  41647d:	cmp    ecx,DWORD PTR [ebx]
  41647f:	and    dh,dh
  416481:	pop    ds
  416482:	add    ah,BYTE PTR [edx+ecx*8+0x5a4c168e]
  416489:	add    al,0x50
  41648b:	mov    ah,0xce
  41648d:	lea    ebx,cs:[ebx]
  416490:	ret    0x3c58
  416493:	lahf   
  416494:	xor    al,BYTE PTR [ecx+ebp*8-0x25]
  416498:	lds    eax,FWORD PTR [ebx]
  41649a:	adc    al,0xf5
  41649c:	test   DWORD PTR [ecx-0x53df4da5],ebp
  4164a2:	mov    ah,BYTE PTR [ebx+esi*4-0x3b]
  4164a6:	(bad)  
  4164a7:	sub    al,0x20
  4164a9:	jmp    0x416469
  4164ab:	lods   al,BYTE PTR ds:[esi]
  4164ac:	mov    BYTE PTR [ecx+edx*8-0x4a],cl
  4164b0:	sub    ah,BYTE PTR [ebx]
  4164b2:	ja     0x4164eb
  4164b4:	stos   BYTE PTR es:[edi],al
  4164b5:	jle    0x41643a
  4164b7:	push   eax
  4164b8:	cmp    DWORD PTR [edi-0x5d4dd9eb],ebp
  4164be:	xchg   edx,eax
  4164bf:	imul   eax,DWORD PTR [edx+0x66a07f50],0xb565180c
  4164c9:	punpckhwd mm3,mm2
  4164cc:	jb     0x416528
  4164ce:	icebp  
  4164cf:	(bad)  
  4164d0:	(bad)  
  4164d1:	mov    bl,0x84
  4164d3:	popa   
  4164d4:	jno    0x416505
  4164d6:	pop    ds
  4164d7:	push   ebp
  4164d8:	out    0xb6,eax
  4164da:	clc    
  4164db:	fwait
  4164dc:	push   ebp
  4164dd:	js     0x416476
  4164df:	in     al,dx
  4164e0:	pop    ds
  4164e1:	popf   
  4164e2:	mov    edx,0x84c6119f
  4164e7:	adc    ah,BYTE PTR [edi-0x3e4c5294]
  4164ed:	mov    al,0xd4
  4164ef:	mov    al,fs:0x3a75678b
  4164f5:	enter  0xe940,0x80
  4164f9:	fmulp  st(2),st
  4164fb:	or     DWORD PTR [eax-0x1f],esi
  4164fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4164ff:	pushf  
  416500:	cs mov cs,ebx
  416503:	jno    0x416584
  416505:	push   esp
  416506:	in     al,0xac
  416508:	(bad)  
  416509:	mov    ch,0x77
  41650b:	mov    ebp,0x5c0223fb
  416510:	sbb    bl,BYTE PTR [edx-0x53]
  416513:	inc    esp
  416514:	xor    BYTE PTR [ecx+0x3040cdd8],dl
  41651a:	(bad)  
  41651b:	cs daa 
  41651d:	push   ebx
  41651e:	rol    DWORD PTR [ebx],cl
  416520:	mov    edi,0x8aa14fe4
  416525:	pop    edi
  416526:	popf   
  416527:	mov    al,ds:0xee30c027
  41652c:	scas   al,BYTE PTR es:[edi]
  41652d:	lods   al,BYTE PTR ds:[esi]
  41652e:	mov    ds:0x2ed8d4b0,al
  416533:	jns    0x41651f
  416535:	aas    
  416536:	and    al,0xdd
  416538:	loope  0x4165a6
  41653a:	data16 into 
  41653c:	xchg   esp,eax
  41653d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41653e:	dec    ebx
  41653f:	add    BYTE PTR [ebx+0x7a],dh
  416542:	mov    edi,0x201aced9
  416547:	sub    dh,bl
  416549:	bound  ebx,QWORD PTR [ecx+ecx*2]
  41654c:	pusha  
  41654d:	cmp    eax,0xdaca3fec
  416552:	mov    DWORD PTR [edi-0x80],0x41b095c3
  416559:	add    esp,esp
  41655b:	dec    ebx
  41655c:	add    BYTE PTR [eax],al
  41655e:	add    BYTE PTR [eax],al
  416560:	add    BYTE PTR [eax],al
  416562:	clc    
  416563:	pminsw mm6,QWORD PTR [edi-0x1]
  416567:	idiv   ebp
  416569:	(bad)  
  41656a:	repz push esi
  41656c:	retf   0x9ff1
  41656f:	add    bl,ah
  416571:	sbb    al,0x4f
  416573:	jecxz  0x416575
  416575:	add    dl,dh
  416577:	add    al,0x0
  416579:	add    BYTE PTR [edi-0x7a],bh
  41657c:	psubsb mm0,QWORD PTR [ebx]
  41657f:	imul   al
  416581:	mov    DWORD PTR [edx-0x32269dd0],eax
  416587:	call   0xd699:0x3c44db71
  41658e:	cmp    DWORD PTR [edx-0x30],edi
  416591:	call   0xf30:0x6ce13c0a
  416598:	fld    DWORD PTR [ebp+0x4f492a61]
  41659e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41659f:	push   ecx
  4165a0:	outs   dx,BYTE PTR ds:[esi]
  4165a1:	or     eax,DWORD PTR [edi+0x5e]
  4165a4:	sub    esi,DWORD PTR [ecx-0x440c5ef]
  4165aa:	ret    0xedc5
  4165ad:	stos   DWORD PTR es:[edi],eax
  4165ae:	or     BYTE PTR [ecx],0xd6
  4165b1:	aaa    
  4165b2:	int    0x5b
  4165b4:	inc    eax
  4165b5:	not    DWORD PTR [eax-0x59cdbdad]
  4165bb:	pop    esi
  4165bc:	mov    eax,ds:0xb3d6507c
  4165c1:	xchg   ebx,eax
  4165c2:	mov    esp,0x64183bb7
  4165c7:	lds    eax,FWORD PTR fs:[edi]
  4165ca:	mov    eax,ds:0x68002cc5
  4165cf:	cmc    
  4165d0:	push   cs
  4165d1:	pop    ss
  4165d2:	int    0xb6
  4165d4:	fdiv   QWORD PTR ds:0x414cc983
  4165da:	je     0x416590
  4165dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4165dd:	pop    ecx
  4165de:	cwde   
  4165df:	xor    al,0x42
  4165e1:	dec    ebp
  4165e2:	aas    
  4165e3:	sub    al,0x73
  4165e5:	sbb    ah,dh
  4165e7:	mov    al,ds:0x2e053aca
  4165ec:	fdivr  QWORD PTR [edx-0x9186823]
  4165f2:	stc    
  4165f3:	ficom  WORD PTR [ebx+0x40]
  4165f6:	push   ebx
  4165f7:	or     al,0x7a
  4165f9:	(bad)
  4165fd:	inc    ecx
  4165fe:	ret    
  4165ff:	or     BYTE PTR [esi],ah
  416601:	test   edi,edi
  416603:	mov    BYTE PTR [edx+ecx*1-0x7f],bl
  416607:	push   ecx
  416608:	cmp    BYTE PTR [eax+0x4df37569],dl
  41660e:	sub    al,BYTE PTR [ebx+0x2]
  416611:	inc    esi
  416612:	adc    al,0xf4
  416614:	sub    eax,0x3ac13406
  416619:	mov    esp,0x252eae78
  41661e:	jp     0x4165c4
  416620:	mov    BYTE PTR [ebx],bh
  416622:	sbb    bl,bh
  416624:	scas   al,BYTE PTR es:[edi]
  416625:	pop    ds
  416626:	data16 xchg BYTE PTR [ecx],ah
  416629:	dec    esi
  41662a:	mov    dh,0x0
  41662c:	in     al,0xfb
  41662e:	mov    bl,dl
  416630:	xchg   esi,eax
  416631:	call   0x2011:0x811c0305
  416638:	inc    ebx
  416639:	dec    DWORD PTR [ebx]
  41663b:	inc    edi
  41663c:	push   ebp
  41663d:	pop    edi
  41663e:	in     eax,0xfe
  416640:	imul   ecx,DWORD PTR [eax+0x9],0xffffffd8
  416644:	sar    bl,cl
  416646:	frstor [edi-0x6b4f8cb]
  41664c:	pop    ss
  41664d:	inc    esp
  41664e:	or     al,0xd5
  416650:	test   eax,0xabe0443b
  416655:	pop    edx
  416656:	sar    ecx,0x7d
  416659:	aad    0xf0
  41665b:	xlat   BYTE PTR ds:[ebx]
  41665c:	add    BYTE PTR [eax],cl
  41665e:	stos   DWORD PTR es:[edi],eax
  41665f:	jne    0x41667e
  416661:	call   FWORD PTR [esi]
  416663:	bound  ebx,QWORD PTR [eax-0x57db93a4]
  416669:	xor    eax,0xa4a7b4a9
  41666e:	pop    ebp
  41666f:	loop   0x416611
  416671:	inc    esp
  416672:	clc    
  416673:	ss das 
  416675:	bound  ebp,QWORD PTR [edi-0x3]
  416678:	jnp    0x41669c
  41667a:	mov    ch,0x44
  41667c:	lahf   
  41667d:	add    esi,ebx
  41667f:	mov    ecx,0xebc66736
  416684:	mov    ah,0x46
  416686:	fcomp  QWORD PTR [edx+0x63]
  416689:	jp     0x416688
  41668b:	das    
  41668c:	xchg   DWORD PTR [ecx+0x6a],ecx
  41668f:	dec    edi
  416690:	das    
  416691:	stc    
  416692:	push   0x6
  416694:	add    al,0xce
  416696:	push   ebx
  416697:	push   0x8e3c4bcf
  41669c:	add    ebx,0xffffffcf
  41669f:	lock inc esp
  4166a1:	and    esi,DWORD PTR [ecx]
  4166a3:	mov    ah,0x5e
  4166a5:	das    
  4166a6:	inc    esi
  4166a7:	fadd   QWORD PTR [esi]
  4166a9:	ins    DWORD PTR es:[edi],dx
  4166aa:	ret    
  4166ab:	mov    esp,0xe6dfe4f9
  4166b0:	adc    DWORD PTR [eax-0x41],0x67
  4166b4:	mov    cl,0xe7
  4166b6:	push   0x73
  4166b8:	jl     0x4166fc
  4166ba:	lods   al,BYTE PTR ds:[esi]
  4166bb:	repz push esi
  4166bd:	ror    BYTE PTR [edx-0x6f],cl
  4166c0:	loope  0x41670e
  4166c2:	sbb    esi,DWORD PTR [edx-0x208fe4e3]
  4166c8:	retf   
  4166c9:	leave  
  4166ca:	cmp    BYTE PTR [edx-0x24],dh
  4166cd:	pop    ebx
  4166ce:	jl     0x41666a
  4166d0:	fstp   DWORD PTR [ebp-0x699d33e6]
  4166d6:	mov    dh,0xc8
  4166d8:	shl    DWORD PTR [edx+eax*2],cl
  4166db:	add    al,0xa2
  4166dd:	pop    eax
  4166de:	or     eax,0x3040da9a
  4166e3:	cs push ebx
  4166e5:	jns    0x4166d9
  4166e7:	push   0xffffffd1
  4166e9:	mov    bh,0xcb
  4166eb:	push   esi
  4166ec:	mov    eax,ds:0x2e5f22e7
  4166f1:	dec    BYTE PTR [ebp+0x5b]
  4166f4:	aad    0xc
  4166f6:	loope  0x416678
  4166f8:	in     eax,0xa5
  4166fa:	aaa    
  4166fb:	add    DWORD PTR [esi+eax*2],edi
  4166fe:	mov    edx,0xa9705c22
  416703:	mov    gs,WORD PTR [esp+eax*8-0x394aabba]
  41670a:	(bad)  
  41670b:	xchg   esi,eax
  41670c:	jae    0x4166f3
  41670e:	mov    dl,0xb5
  416710:	out    0x21,al
  416712:	mov    ds:0xd4d81bf1,eax
  416717:	loop   0x4166ad
  416719:	stc    
  41671a:	inc    esi
  41671b:	and    dl,BYTE PTR [ecx+0x2e]
  41671e:	push   0x27e2b27b
  416723:	pop    ecx
  416724:	cli    
  416725:	loopne 0x416750
  416727:	es xchg ebp,eax
  416729:	or     eax,0xc8b1afea
  41672e:	mov    eax,ds:0xcc7cdcbe
  416733:	test   eax,0x6ca362ee
  416738:	test   DWORD PTR [ebx-0x22],edx
  41673b:	cld    
  41673c:	hlt    
  41673d:	pusha  
  41673e:	inc    ebx
  41673f:	mov    esp,0xff678a99
  416744:	push   0x7c
  416746:	sbb    eax,0x40a77071
  41674b:	arpl   WORD PTR [esi],cx
  41674d:	xchg   BYTE PTR ds:0x66b2c850,ch
  416753:	cmp    BYTE PTR [ebp-0x64216bfd],al
  416759:	pop    es
  41675a:	(bad)  
  41675b:	test   BYTE PTR [ebx],dh
  41675d:	xor    al,BYTE PTR [esi+0x2eb1f6ca]
  416763:	(bad)  
  416764:	ja     0x416787
  416766:	xor    eax,0xb31f4063
  41676b:	lods   eax,DWORD PTR es:[esi]
  41676d:	fld    DWORD PTR [ebp+0x6dfea5f1]
  416773:	pop    esi
  416774:	inc    edi
  416775:	fldcw  WORD PTR [esi]
  416777:	loopne 0x416790
  416779:	adc    esi,DWORD PTR [ebp+0xb]
  41677c:	and    BYTE PTR [ebx],al
  41677e:	in     al,0xa1
  416780:	adc    BYTE PTR [esp+edi*4],dl
  416783:	mov    edx,0x76b03fee
  416788:	inc    edx
  416789:	imul   ecx,DWORD PTR ds:0x88302582,0xb843b32c
  416793:	lds    ebx,FWORD PTR [eax]
  416795:	out    dx,eax
  416796:	pop    ebx
  416797:	or     al,BYTE PTR [edi+0x4457119c]
  41679d:	stos   DWORD PTR es:[edi],eax
  41679e:	jne    0x41673c
  4167a0:	fsub   DWORD PTR [ebx]
  4167a2:	dec    ebp
  4167a3:	int    0x26
  4167a5:	sub    eax,0x9713ee4a
  4167aa:	mov    bh,BYTE PTR [esi+0x7c]
  4167ad:	add    BYTE PTR [edx+0x77],al
  4167b0:	sbb    al,0x95
  4167b2:	jns    0x41679d
  4167b4:	jp     0x4167e0
  4167b6:	sbb    DWORD PTR [esi+0x6],ebx
  4167b9:	cmp    ch,ah
  4167bb:	mov    edx,0x458e33bf
  4167c0:	out    0xe2,al
  4167c2:	adc    BYTE PTR [ecx],bl
  4167c4:	jp     0x416747
  4167c6:	cli    
  4167c7:	in     al,0xb
  4167c9:	adc    al,0x2b
  4167cb:	in     eax,dx
  4167cc:	push   ebp
  4167cd:	dec    esi
  4167ce:	xor    DWORD PTR [ebx+0x68],esi
  4167d1:	push   ebp
  4167d2:	cmp    eax,0x847e688
  4167d7:	push   ds
  4167d8:	popa   
  4167d9:	mov    edx,0x4793e3ea
  4167de:	ja     0x4167cd
  4167e0:	xor    eax,0x512cae02
  4167e5:	fst    QWORD PTR [edx+0x55f656e8]
  4167eb:	adc    bh,BYTE PTR [ebp-0x56ca01c3]
  4167f1:	jmp    0x41677a
  4167f3:	sub    dh,dl
  4167f5:	mov    edi,0xfa8124c8
  4167fa:	addr16 loope 0x4167c5
  4167fd:	or     BYTE PTR [eax+0x20],bl
  416800:	xor    BYTE PTR [eax],ch
  416802:	and    edi,DWORD PTR [ebx+0x48]
  416805:	xlat   BYTE PTR ds:[ebx]
  416806:	and    al,BYTE PTR ds:0xdb58b04b
  41680c:	rol    BYTE PTR [edx-0x6f],1
  41680f:	pop    edx
  416810:	jge    0x4167ea
  416812:	pop    edi
  416813:	hlt    
  416814:	and    DWORD PTR [ebx-0x24ebb125],esi
  41681a:	pop    edi
  41681b:	call   0x9aad:0x6b4561f3
  416822:	xor    DWORD PTR [edi-0x6c],esi
  416825:	jb     0x416817
  416827:	repnz rcl BYTE PTR [esi-0x75cb58ac],1
  41682e:	jo     0x4168ac
  416830:	dec    eax
  416831:	rcl    DWORD PTR [edx+0x4e],1
  416834:	add    BYTE PTR [ecx-0x35],ch
  416837:	sbb    DWORD PTR [edi],0x9daf29d8
  41683d:	mov    cl,0x96
  41683f:	add    DWORD PTR [esi+0x1a],esi
  416842:	jecxz  0x416869
  416844:	fwait
  416845:	and    ch,BYTE PTR [ecx+edx*4+0x39]
  416849:	shl    BYTE PTR [esi+0x698022de],1
  41684f:	jge    0x41685a
  416851:	ds mov ah,0x8d
  416854:	inc    esp
  416855:	mov    ah,0x31
  416857:	sbb    ebx,DWORD PTR [ecx+0x58]
  41685a:	sub    bl,BYTE PTR [edi+0x490283e3]
  416860:	les    esp,FWORD PTR [eax-0x3e]
  416863:	aam    0x16
  416865:	lahf   
  416866:	fdiv   DWORD PTR [edx]
  416868:	outs   dx,BYTE PTR ds:[esi]
  416869:	(bad)  ds:0x4c1091ec
  41686f:	stc    
  416870:	int3   
  416871:	jne    0x41688d
  416873:	inc    esp
  416874:	jl     0x416852
  416876:	dec    ebx
  416877:	and    bh,BYTE PTR [ebx+0xf]
  41687a:	jmp    0xc744:0xc76a08a3
  416881:	add    esp,ecx
  416883:	jp     0x41688e
  416885:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416886:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416887:	mov    BYTE PTR [ebp-0x6c],ah
  41688a:	inc    ebp
  41688b:	and    esp,DWORD PTR [esi-0x7eec01fb]
  416891:	sub    ah,BYTE PTR [ecx]
  416893:	mov    ds:0x43b3c34,eax
  416898:	xchg   esi,eax
  416899:	mov    WORD PTR [eax+esi*4+0x55],fs
  41689d:	shr    BYTE PTR [ecx-0x42],cl
  4168a0:	inc    edx
  4168a1:	ja     0x4168fa
  4168a3:	imul   esp,esp,0x62
  4168a6:	xor    BYTE PTR [edi+0x2f],al
  4168a9:	call   0xbfdb:0xc5710399
  4168b0:	fistp  DWORD PTR [edx]
  4168b2:	stc    
  4168b3:	outs   dx,DWORD PTR ds:[esi]
  4168b4:	push   ebx
  4168b5:	push   0xa3fb5c77
  4168ba:	inc    ebx
  4168bb:	(bad)  
  4168bc:	and    eax,ecx
  4168be:	mov    ah,cl
  4168c0:	inc    ebp
  4168c1:	call   0x196c:0x98df529d
  4168c8:	rol    al,cl
  4168ca:	ss lock clc 
  4168cd:	sub    al,0xb3
  4168cf:	cli    
  4168d0:	and    DWORD PTR [eax-0x77],0xc28fdfe8
  4168d7:	lea    eax,[ecx-0x7d]
  4168da:	test   bl,0x22
  4168dd:	mov    ah,0x20
  4168df:	call   DWORD PTR [ebx-0x73]
  4168e2:	clc    
  4168e3:	int    0xf
  4168e5:	(bad)  
  4168e6:	fwait
  4168e7:	xor    al,0xc2
  4168e9:	pop    esi
  4168ea:	push   0x43b865f1
  4168ef:	fs fwait
  4168f1:	jmp    0x416968
  4168f3:	int    0xe4
  4168f5:	lds    esp,FWORD PTR [edi-0x7b9b1a07]
  4168fb:	adc    al,0x32
  4168fd:	fs cs dec ebp
  416900:	push   es
  416901:	stos   DWORD PTR es:[edi],eax
  416902:	clc    
  416903:	bound  esi,QWORD PTR [esp+ecx*8+0x2c]
  416907:	ss sti 
  416909:	pusha  
  41690a:	inc    esi
  41690b:	adc    eax,0x28f4b226
  416910:	adc    edx,eax
  416912:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416913:	xchg   ebp,eax
  416914:	pop    es
  416915:	test   cl,ah
  416917:	out    0x8a,al
  416919:	cmp    al,0x3a
  41691b:	lods   al,BYTE PTR ds:[esi]
  41691c:	mov    dl,0x75
  41691e:	inc    ebx
  41691f:	ret    
  416920:	xor    al,0x43
  416922:	xchg   BYTE PTR [edx+0x5e],bh
  416925:	mov    cs,WORD PTR [ebx+edi*2-0x56]
  416929:	dec    esp
  41692a:	mov    al,0xec
  41692c:	add    ch,dh
  41692e:	xchg   bl,dh
  416930:	mov    al,0x6d
  416932:	inc    ecx
  416933:	push   ebp
  416934:	sbb    eax,0x501bd74d
  416939:	ins    BYTE PTR es:[edi],dx
  41693a:	fnsave [ebx-0x650d4ac2]
  416940:	pop    ss
  416941:	std    
  416942:	(bad)  
  416943:	fidivr WORD PTR [esi]
  416945:	cdq    
  416946:	in     al,0x27
  416948:	pop    edi
  416949:	mov    ds,edi
  41694b:	popf   
  41694c:	inc    ebp
  41694d:	mov    ds:0x9f75cbef,eax
  416952:	push   edx
  416953:	pop    es
  416954:	xor    eax,DWORD PTR [ecx-0x5fc9faaa]
  41695a:	pop    esi
  41695b:	scas   al,BYTE PTR es:[edi]
  41695c:	lahf   
  41695d:	fadd   DWORD PTR [eax-0x23]
  416960:	pop    eax
  416961:	push   ds
  416962:	or     bh,cl
  416964:	shl    DWORD PTR [ebx-0x7d],cl
  416967:	and    eax,edi
  416969:	fs push edx
  41696b:	xchg   ebx,eax
  41696c:	(bad)  
  41696d:	pop    edx
  41696e:	jle    0x4169ab
  416970:	jns    0x416939
  416972:	xor    BYTE PTR [ecx-0x1d352eec],cl
  416978:	xor    DWORD PTR [ebp-0x6c],eax
  41697b:	push   ebp
  41697c:	int3   
  41697d:	loop   0x41692d
  41697f:	mov    ebp,0x2bf759db
  416984:	xchg   ebx,eax
  416985:	sbb    al,0xe3
  416987:	dec    eax
  416988:	test   BYTE PTR [ebx+eiz*1],bl
  41698b:	sahf   
  41698c:	ret    0x4e44
  41698f:	jbe    0x416969
  416991:	std    
  416992:	cli    
  416993:	push   ss
  416994:	(bad)  
  416996:	mov    edx,0x70a3920
  41699b:	scas   al,BYTE PTR es:[edi]
  41699c:	(bad)  
  41699d:	(bad)  
  41699e:	fimul  WORD PTR ds:0xb5041048
  4169a4:	repz retf 
  4169a6:	or     bl,BYTE PTR [ebx+0x69]
  4169a9:	stc    
  4169aa:	(bad)  
  4169ab:	adc    dl,BYTE PTR [edx]
  4169ad:	cmp    BYTE PTR [ebx+0x784e6346],bh
  4169b3:	cld    
  4169b4:	xchg   BYTE PTR [ebp+0x3cb0a68b],cl
  4169ba:	sbb    al,0xc3
  4169bc:	push   esi
  4169bd:	mov    esp,0x301d6f02
  4169c2:	adc    DWORD PTR [eax+esi*1+0x17],ebp
  4169c6:	adc    BYTE PTR [ebp-0x49],ah
  4169c9:	pop    edx
  4169ca:	lock call 0x84b3e367
  4169d0:	mov    ebp,0xd8da243b
  4169d5:	push   ds
  4169d6:	bt     DWORD PTR [edi+0x3a],ecx
  4169da:	add    eax,0x99009ade
  4169df:	or     BYTE PTR [edx+0xabd6825],bl
  4169e5:	clc    
  4169e6:	cmp    eax,0xc4f722d3
  4169eb:	mov    BYTE PTR [edi],dl
  4169ed:	mov    ebp,0x69ea20a9
  4169f2:	and    dh,al
  4169f4:	ins    BYTE PTR es:[edi],dx
  4169f5:	mov    cl,0x87
  4169f7:	inc    ecx
  4169f8:	sbb    BYTE PTR [ecx+0x660a6701],0xca
  4169ff:	repz addr16 jnp 0x4169ce
  416a03:	push   eax
  416a04:	jo     0x416a17
  416a06:	imul   ebp,DWORD PTR [esi-0x70],0x2a
  416a0a:	mov    ah,0x6c
  416a0c:	fadd   QWORD PTR [edi-0x7a222b8f]
  416a12:	adc    cl,ah
  416a14:	and    eax,0xd1dcd5bf
  416a19:	shl    DWORD PTR [ebx+0x7d653472],cl
  416a1f:	aam    0xc0
  416a21:	dec    ecx
  416a22:	dec    ebx
  416a23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a24:	bound  ebp,QWORD PTR [esi]
  416a26:	int3   
  416a27:	aas    
  416a28:	fnsave [edx+esi*4+0x4a]
  416a2c:	add    BYTE PTR [esp+edi*2],0x8c
  416a30:	shr    BYTE PTR [edi+0x3],0x2c
  416a34:	scas   eax,DWORD PTR es:[edi]
  416a35:	(bad)  
  416a36:	pop    esi
  416a37:	add    al,0xf6
  416a39:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  416a3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a3c:	hlt    
  416a3d:	xor    al,BYTE PTR [edx+0x58]
  416a40:	in     al,dx
  416a41:	xchg   edi,eax
  416a42:	push   eax
  416a43:	push   esp
  416a44:	ficomp WORD PTR [edx-0x65fd5aef]
  416a4a:	sahf   
  416a4b:	sub    al,0x61
  416a4d:	add    BYTE PTR [ecx],ch
  416a4f:	jmp    0xbe4a:0xea0293bb
  416a56:	mov    esi,0xb24857b4
  416a5c:	push   ebp
  416a5d:	xor    cl,BYTE PTR [ebp+0x1b]
  416a60:	idiv   DWORD PTR [edi]
  416a62:	push   edi
  416a63:	cmp    esp,edi
  416a65:	pop    ds
  416a66:	cmp    DWORD PTR ds:0x5b5b7f79,ebx
  416a6c:	add    BYTE PTR [eax],al
  416a6e:	add    BYTE PTR [eax],al
  416a70:	add    BYTE PTR [eax],al
  416a72:	call   0xfb7c3508
  416a77:	jnp    0x416a71
  416a79:	sar    DWORD PTR [edx+0xff3b875],cl
  416a7f:	cdq    
  416a80:	test   esp,edi
  416a82:	inc    ecx
  416a83:	call   0x5336a88
  416a88:	add    BYTE PTR [eax],al
  416a8a:	jb     0x416a58
  416a8c:	das    
  416a8d:	jmp    0x416a93
  416a8f:	lahf   
  416a90:	cmp    edx,0x7a130f65
  416a96:	fsub   QWORD PTR [esi]
  416a98:	push   0xc9c2be81
  416a9d:	dec    ecx
  416a9e:	push   es
  416a9f:	or     BYTE PTR [eax],0xcc
  416aa2:	js     0x416a9a
  416aa4:	jle    0x416ab4
  416aa6:	fisub  WORD PTR [ebx+0x2b2f16bb]
  416aac:	adc    bl,BYTE PTR [edi]
  416aae:	push   ecx
  416aaf:	mov    al,ds:0x9cbcffd5
  416ab4:	and    edx,esi
  416ab6:	les    esi,FWORD PTR [eax-0x3bda7efd]
  416abc:	push   cs
  416abd:	xchg   esi,eax
  416abe:	adc    al,0x80
  416ac0:	dec    ebx
  416ac1:	hlt    
  416ac2:	xchg   esi,edi
  416ac4:	cli    
  416ac5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416ac6:	popf   
  416ac7:	dec    ebp
  416ac8:	pusha  
  416ac9:	xchg   DWORD PTR [eax+0x25],ebx
  416acc:	pop    ecx
  416acd:	cmc    
  416ace:	hlt    
  416acf:	push   eax
  416ad0:	or     esi,edi
  416ad2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416ad3:	in     eax,0xa2
  416ad5:	push   cs
  416ad6:	cmp    dl,BYTE PTR [ebx]
  416ad8:	fnsave [eax]
  416ada:	loopne 0x416b29
  416adc:	mov    al,ds:0x69ece2db
  416ae1:	and    BYTE PTR [ebp+0x37],ch
  416ae4:	adc    eax,0xc5255cab
  416ae9:	push   edi
  416aea:	div    DWORD PTR [edi-0x45]
  416aed:	test   BYTE PTR [eax],dl
  416aef:	pusha  
  416af0:	dec    eax
  416af1:	sahf   
  416af2:	pop    es
  416af3:	and    DWORD PTR [ebx+0xfbb738a],edx
  416af9:	xchg   BYTE PTR [eax+eax*1],bh
  416afc:	into   
  416afd:	pop    esp
  416aff:	push   ebp
  416b00:	es push esp
  416b02:	push   ebp
  416b03:	pop    es
  416b04:	jae    0x416a96
  416b06:	dec    eax
  416b07:	sbb    al,0xc7
  416b09:	inc    bh
  416b0b:	dec    ebx
  416b0c:	dec    BYTE PTR [ebp+0x69]
  416b0f:	out    dx,eax
  416b10:	call   FWORD PTR [esi-0x3a]
  416b13:	gs or  al,0x88
  416b16:	loope  0x416b0a
  416b18:	or     DWORD PTR [eax-0x62],ebp
  416b1b:	xor    BYTE PTR ds:0x9655cb55,0x1
  416b22:	jo     0x416ae2
  416b24:	dec    edi
  416b25:	xchg   esi,eax
  416b26:	fimul  DWORD PTR [esi]
  416b28:	cmc    
  416b29:	fwait
  416b2a:	push   eax
  416b2b:	pop    es
  416b2c:	js     0x416abf
  416b2e:	push   ss
  416b2f:	dec    eax
  416b30:	sbb    DWORD PTR [edx],ebp
  416b32:	nop
  416b33:	lock ss push ebx
  416b36:	or     al,0xe0
  416b38:	sbb    DWORD PTR [ecx-0x45],esp
  416b3b:	aad    0xb2
  416b3d:	or     DWORD PTR [eax],ebp
  416b3f:	cdq    
  416b40:	dec    ecx
  416b41:	xor    esp,DWORD PTR [esi+0x66]
  416b44:	popf   
  416b45:	push   esp
  416b46:	lods   al,BYTE PTR ds:[esi]
  416b47:	mov    eax,ds:0xb31fa424
  416b4c:	lock in eax,dx
  416b4e:	repnz int3 
  416b50:	jne    0x416b48
  416b52:	and    ebp,esp
  416b54:	and    al,0xdb
  416b56:	xor    ebp,DWORD PTR [esp+edx*4-0x5f]
  416b5a:	sub    ecx,esi
  416b5c:	mov    esp,DWORD PTR [esi+0x2dafbfc5]
  416b62:	cmp    ebp,DWORD PTR [ebp-0x790da703]
  416b68:	adc    DWORD PTR [ecx+edx*1],0x55
  416b6c:	jns    0x416b3f
  416b6e:	inc    ebp
  416b6f:	in     eax,0x62
  416b71:	xchg   esi,eax
  416b72:	and    BYTE PTR [edi],al
  416b74:	sbb    DWORD PTR [ebx+0x4e6948cd],edi
  416b7a:	outs   dx,DWORD PTR ds:[esi]
  416b7b:	imul   esi,esp,0x48
  416b7e:	dec    eax
  416b7f:	mov    ah,BYTE PTR [edi-0x64b964d9]
  416b85:	fwait
  416b86:	rol    DWORD PTR [ebx-0x29],0x81
  416b8a:	ss icebp 
  416b8c:	pop    ecx
  416b8d:	push   cs
  416b8e:	arpl   dx,sp
  416b90:	push   0x52
  416b92:	nop
  416b93:	in     al,0x66
  416b95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b96:	or     eax,0xf270b3ba
  416b9b:	xor    al,0x67
  416b9d:	sub    al,0x5
  416b9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416ba0:	loop   0x416c1c
  416ba2:	cmc    
  416ba3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416ba4:	neg    DWORD PTR [ecx-0x78]
  416ba7:	fucomip st,st(2)
  416ba9:	mov    WORD PTR [edi+0x19],fs
  416bac:	mov    ch,0x91
  416bae:	fwait
  416baf:	or     ebx,ebx
  416bb1:	jmp    ebx
  416bb3:	in     al,0x95
  416bb5:	push   edx
  416bb6:	repnz or dl,BYTE PTR [eax+esi*8-0x3780690d]
  416bbe:	adc    DWORD PTR [ebx-0x6434cdc7],esp
  416bc4:	fs dec esi
  416bc6:	xchg   ecx,eax
  416bc7:	jmp    0x46acb931
  416bcc:	mov    bh,0x95
  416bce:	xor    ah,al
  416bd0:	js     0x416b9f
  416bd2:	test   eax,0x2632cbce
  416bd7:	pop    ebx
  416bd8:	mov    ecx,0x635c8dc0
  416bdd:	and    DWORD PTR [ebx-0x8],0xe0056b71
  416be4:	pop    ebx
  416be5:	xor    DWORD PTR [eax-0x73629f2a],ebp
  416beb:	mov    edi,DWORD PTR [eax]
  416bed:	fdiv   QWORD PTR [esi]
  416bef:	xor    BYTE PTR [eax+0x77],dh
  416bf2:	mov    al,0x3
  416bf4:	adc    DWORD PTR [ecx+0x21],edi
  416bf7:	mov    esp,DWORD PTR [ecx+0x48]
  416bfa:	repz xor DWORD PTR [eax-0x64fb32a1],esi
  416c01:	dec    edx
  416c02:	dec    edi
  416c03:	add    ah,BYTE PTR [ebp+eax*8-0x39]
  416c07:	xchg   edx,eax
  416c08:	shr    DWORD PTR [ebp+0x30ba034d],0x1e
  416c0f:	push   0x1c
  416c11:	stc    
  416c12:	pop    ss
  416c13:	sbb    BYTE PTR ds:[esi],bl
  416c16:	(bad)  
  416c17:	lds    eax,FWORD PTR [edi-0x1f9cd614]
  416c1d:	mov    eax,0x766f8b4d
  416c22:	call   0x906:0xd4e963ec
  416c29:	mov    edi,0xeff78365
  416c2e:	inc    ebp
  416c2f:	imul   DWORD PTR [edi]
  416c31:	fs dec ebp
  416c33:	inc    ebx
  416c34:	and    edx,eax
  416c36:	mov    BYTE PTR [eax-0x51],ch
  416c39:	jo     0x416cb8
  416c3b:	cmp    ecx,DWORD PTR gs:[esi]
  416c3e:	sahf   
  416c3f:	es stos BYTE PTR es:[edi],al
  416c41:	push   DWORD PTR [eax-0xb]
  416c44:	xlat   BYTE PTR ds:[ebx]
  416c45:	fldenv [edi+0x15]
  416c48:	dec    esp
  416c49:	cmc    
  416c4a:	dec    edx
  416c4b:	and    al,0x78
  416c4d:	icebp  
  416c4e:	sahf   
  416c4f:	out    0x60,eax
  416c51:	clc    
  416c52:	lahf   
  416c53:	push   edx
  416c54:	xrelease xchg BYTE PTR [ebx+0x56],bh
  416c58:	xor    ch,cl
  416c5a:	push   ecx
  416c5b:	sbb    eax,DWORD PTR [ebx]
  416c5d:	sbb    ecx,DWORD PTR ds:0x21db7506
  416c63:	js     0x416c1f
  416c65:	mov    ds:0x72ef71c1,al
  416c6a:	and    esi,DWORD PTR [ebx+0x55]
  416c6d:	fcom   DWORD PTR [eax-0x55]
  416c70:	ss loop 0x416c9e
  416c73:	mov    bh,0xa7
  416c75:	inc    edi
  416c76:	in     eax,dx
  416c77:	out    dx,eax
  416c78:	push   eax
  416c79:	push   ebp
  416c7a:	inc    esp
  416c7b:	sbb    BYTE PTR [esi-0x40],dl
  416c7e:	dec    eax
  416c7f:	daa    
  416c80:	jle    0x416c30
  416c82:	xor    edx,esp
  416c84:	sti    
  416c85:	adc    DWORD PTR [ebx-0x29767622],esi
  416c8b:	jg     0x416c8d
  416c8d:	jns    0x416ce8
  416c8f:	pop    ebx
  416c90:	mov    dh,BYTE PTR [eax]
  416c92:	mov    ds:0x681645d0,eax
  416c97:	fidivr DWORD PTR [eax]
  416c99:	sub    BYTE PTR [ebx-0x42cb5883],bh
  416c9f:	pop    eax
  416ca0:	dec    esi
  416ca1:	jbe    0x416cf0
  416ca3:	push   cs
  416ca4:	sbb    ecx,DWORD PTR [esi+0x77715203]
  416caa:	in     al,0x37
  416cac:	mov    ebp,0xb61b0316
  416cb1:	push   0x4750e587
  416cb6:	pop    esp
  416cb7:	and    cl,al
  416cb9:	pop    ebp
  416cba:	jle    0x416c6c
  416cbc:	or     DWORD PTR [ebx-0x16f6287f],ebx
  416cc2:	mov    ebp,0xee2a2211
  416cc7:	jne    0x416d38
  416cc9:	push   0x4d
  416ccb:	or     eax,0x89d1baf2
  416cd0:	cmc    
  416cd1:	dec    edx
  416cd2:	fwait
  416cd3:	or     eax,0x285e46ef
  416cd8:	pop    eax
  416cd9:	mov    DWORD PTR [ecx],ecx
  416cdb:	push   ds
  416cdc:	fisub  WORD PTR [ebx]
  416cde:	cmc    
  416cdf:	xchg   ebx,eax
  416ce0:	xor    al,0x25
  416ce2:	lods   al,BYTE PTR ds:[esi]
  416ce3:	adc    al,0x40
  416ce5:	xor    DWORD PTR [edi-0x1f9deba9],edi
  416ceb:	xor    eax,0xb5a8d5f0
  416cf0:	je     0x416cc1
  416cf2:	stos   DWORD PTR es:[edi],eax
  416cf3:	cmc    
  416cf4:	ja     0x416cd5
  416cf6:	(bad)  
  416cf7:	leave  
  416cf8:	mov    eax,edx
  416cfa:	mov    DWORD PTR [ebx],eax
  416cfc:	jp     0x416cfe
  416cfe:	fistp  WORD PTR [esp+ecx*8+0x65f46ab9]
  416d05:	outs   dx,DWORD PTR ds:[esi]
  416d06:	pop    esi
  416d07:	test   DWORD PTR [edi-0x40],eax
  416d0a:	lahf   
  416d0b:	leave  
  416d0c:	in     al,0x9
  416d0e:	iret   
  416d0f:	or     esi,DWORD PTR [ecx-0x27962736]
  416d15:	and    eax,0x77cc5c80
  416d1a:	mov    esi,0xd9fb9be7
  416d1f:	addr16 pop esp
  416d21:	pop    ebp
  416d22:	out    dx,eax
  416d23:	cld    
  416d24:	or     BYTE PTR [ebp+0x353d5bc1],ah
  416d2a:	xor    dl,BYTE PTR ds:0xc161140f
  416d30:	xabort 0xd
  416d33:	mov    al,0x5a
  416d35:	and    DWORD PTR [ebx],ecx
  416d37:	add    ebx,edi
  416d39:	fld    DWORD PTR [ebx]
  416d3b:	cwde   
  416d3c:	into   
  416d3d:	lds    edi,FWORD PTR [edx+0x41]
  416d40:	xchg   esp,eax
  416d41:	push   esi
  416d42:	aam    0x7a
  416d44:	add    al,0x2e
  416d46:	mov    ds:0xd54874a3,eax
  416d4b:	mov    eax,ds:0xe5a4cfb0
  416d50:	and    DWORD PTR [eax+0x2],edx
  416d53:	loopne 0x416dab
  416d55:	in     eax,0xd1
  416d57:	int3   
  416d58:	mov    al,0xa9
  416d5a:	jle    0x416d09
  416d5c:	imul   esi,DWORD PTR [eax+0x7cb9cb28],0xffffffed
  416d63:	pop    ecx
  416d64:	jae    0x416dc3
  416d66:	adc    al,0x71
  416d68:	push   esi
  416d69:	push   0x50
  416d6b:	mov    ebx,0xdc266c42
  416d70:	in     al,dx
  416d71:	in     al,dx
  416d72:	pop    esp
  416d73:	mov    edi,DWORD PTR [eax]
  416d75:	xchg   edi,eax
  416d76:	call   0x5222:0x14bb46dd
  416d7d:	sub    esp,DWORD PTR ds:[esi+0x2]
  416d81:	mov    ds:0x8231c876,al
  416d86:	dec    ecx
  416d87:	nop
  416d88:	les    ebp,FWORD PTR [ebp+0x1924ffd3]
  416d8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416d8f:	and    bh,cl
  416d91:	cwde   
  416d92:	push   ecx
  416d93:	and    al,0x23
  416d95:	dec    ebx
  416d96:	inc    eax
  416d97:	push   ds
  416d98:	test   al,0xfb
  416d9b:	cmp    DWORD PTR [edx+0x68],ecx
  416d9e:	jecxz  0x416d85
  416da0:	shr    DWORD PTR [eax],cl
  416da2:	mov    cl,0x98
  416da4:	and    edi,edx
  416da6:	dec    edx
  416da7:	call   0x58936c9b
  416dac:	xor    bl,BYTE PTR [edx]
  416dae:	inc    ecx
  416daf:	arpl   dx,bp
  416db1:	hlt    
  416db2:	bound  ebp,QWORD PTR [ebx+0x37]
  416db5:	pop    ecx
  416db6:	mov    ecx,DWORD PTR [edx]
  416db8:	adc    eax,0xc8822a31
  416dbd:	dec    ecx
  416dbe:	aam    0xf9
  416dc0:	cmp    DWORD PTR [ebx-0x30f337f8],eax
  416dc6:	xchg   ebx,eax
  416dc7:	mov    esi,0x86f31733
  416dcc:	mov    ecx,0x64992b23
  416dd1:	push   ss
  416dd2:	(bad)  {k5}{z}
  416dd7:	jmp    0x4f5f19fe
  416ddc:	sbb    DWORD PTR [ebx-0x43],0x7c
  416de0:	fwait
  416de1:	test   eax,0x7e0175d6
  416de6:	cmp    dl,BYTE PTR [ecx-0xe]
  416de9:	push   es
  416dea:	push   edx
  416deb:	mov    edi,0x2082b629
  416df0:	ja     0x416e3f
  416df2:	out    dx,eax
  416df3:	dec    edi
  416df4:	in     eax,0x90
  416df6:	stos   BYTE PTR es:[edi],al
  416df7:	jb     0x416e04
  416df9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416dfa:	idiv   BYTE PTR [esi]
  416dfc:	xor    eax,DWORD PTR [ecx+eax*1+0x20]
  416e00:	fcomp  DWORD PTR [ebx-0x20825b13]
  416e06:	jb     0x416e30
  416e08:	retf   
  416e09:	ds push esp
  416e0b:	jb     0xb5b31c45
  416e11:	mov    ebx,0xd19cc4f2
  416e16:	xchg   ecx,eax
  416e17:	sti    
  416e18:	mov    bh,0x60
  416e1a:	sbb    DWORD PTR [edi],ecx
  416e1c:	or     dl,BYTE PTR [ebx-0x2fe0518f]
  416e22:	out    0x17,eax
  416e24:	dec    edx
  416e25:	ins    BYTE PTR es:[edi],dx
  416e26:	retf   0x2f07
  416e29:	mov    dh,0xad
  416e2b:	les    edx,FWORD PTR [esi+ebp*2-0x48]
  416e2f:	sub    BYTE PTR [ecx-0x37241d3c],cl
  416e35:	test   al,0x2c
  416e37:	fld    TBYTE PTR [esi-0x32125f5e]
  416e3d:	ins    BYTE PTR es:[edi],dx
  416e3e:	fstp   QWORD PTR [ecx]
  416e40:	je     0x416dcd
  416e42:	fidivr DWORD PTR [ebx-0x45]
  416e45:	push   DWORD PTR [eax+eiz*2+0x24]
  416e49:	rcr    DWORD PTR [ebp+eax*2+0x22],0x26
  416e4e:	pushaw 
  416e50:	popf   
  416e51:	not    DWORD PTR [ecx-0x23]
  416e54:	pop    eax
  416e55:	sbb    edx,DWORD PTR [edx]
  416e57:	push   eax
  416e58:	sbb    esp,DWORD PTR [ebx+0x4a077ab4]
  416e5e:	in     eax,dx
  416e5f:	(bad)  [ecx-0x3d]
  416e62:	sub    eax,0x18b78d43
  416e67:	js     0x416ea8
  416e69:	rol    DWORD PTR [edi-0x49],0x3e
  416e6d:	iret   
  416e6e:	sbb    DWORD PTR fs:[ecx-0x79],ebx
  416e72:	ins    DWORD PTR es:[edi],dx
  416e73:	xchg   ebx,eax
  416e74:	scas   al,BYTE PTR es:[edi]
  416e75:	loop   0x416e76
  416e77:	gs out dx,eax
  416e79:	stc    
  416e7a:	mov    ds:0xcfb77409,eax
  416e7f:	dec    DWORD PTR [edi]
  416e81:	ret    
  416e82:	sub    edi,edx
  416e84:	out    dx,eax
  416e85:	das    
  416e86:	outs   dx,BYTE PTR ds:[esi]
  416e87:	out    0x3f,eax
  416e89:	(bad)
  416e8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416e8d:	daa    
  416e8e:	or     BYTE PTR [edx+0x2aa4b464],0x54
  416e95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416e96:	retf   
  416e97:	je     0x416e4b
  416e99:	xchg   esp,eax
  416e9a:	mov    dh,0x1e
  416e9c:	stc    
  416e9d:	dec    ebp
  416e9e:	sub    edi,ebp
  416ea0:	mov    bh,0x7f
  416ea2:	cwde   
  416ea3:	scas   al,BYTE PTR es:[edi]
  416ea4:	sbb    BYTE PTR [edx+0x1f04536f],al
  416eaa:	(bad)  
  416eab:	sub    esp,DWORD PTR [edx+0x779174ab]
  416eb1:	mov    edi,0xbc334c23
  416eb6:	sub    edi,ebp
  416eb8:	mov    edi,0x80cd5324
  416ebd:	adc    ebx,0xffffffa6
  416ec0:	inc    ecx
  416ec1:	mov    BYTE PTR [ecx+ecx*1],bh
  416ec4:	icebp  
  416ec5:	cs in  al,dx
  416ec7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416ec8:	pop    edx
  416ec9:	das    
  416eca:	add    BYTE PTR [edx+0x38],bl
  416ecd:	js     0x416e9e
  416ecf:	out    dx,al
  416ed0:	bound  edi,QWORD PTR [ebx-0xd]
  416ed3:	rcr    BYTE PTR [ebx+0x31e239d0],0x4c
  416eda:	dec    ebp
  416edb:	push   cs
  416edc:	cld    
  416edd:	push   ebp
  416ede:	outs   dx,BYTE PTR ds:[esi]
  416edf:	mov    ds:0x94c52fbd,eax
  416ee4:	jne    0x416e98
  416ee6:	mov    bh,0x5
  416ee8:	mul    DWORD PTR [ecx-0x6b6f0df1]
  416eee:	mov    ch,0x12
  416ef0:	xor    BYTE PTR [edx+eiz*4],dl
  416ef3:	je     0x416f35
  416ef5:	push   ecx
  416ef6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416ef7:	imul   eax,DWORD PTR ds:0xfdc115aa,0xd
  416efe:	sbb    bl,bh
  416f00:	pop    esi
  416f01:	add    ebp,DWORD PTR [edi+0x77ef5b8b]
  416f07:	sub    bl,cl
  416f09:	(bad)  
  416f0b:	in     al,dx
  416f0c:	imul   edi,edi,0xc41d9962
  416f12:	aam    0x36
  416f14:	test   ch,dh
  416f16:	add    ebx,0xffffffbb
  416f19:	scas   al,BYTE PTR es:[edi]
  416f1a:	ret    
  416f1b:	pop    edx
  416f1c:	cmp    ecx,DWORD PTR [eax-0x76]
  416f1f:	mov    ebx,0xc7b9f005
  416f24:	push   es
  416f25:	or     DWORD PTR [ebx+0x1298a559],ebx
  416f2b:	xor    bh,BYTE PTR [ecx+0x53d611e6]
  416f31:	dec    esp
  416f32:	das    
  416f33:	add    al,0x33
  416f35:	sbb    al,0x60
  416f37:	addr16 out dx,eax
  416f39:	and    edi,DWORD PTR [esi]
  416f3b:	stc    
  416f3c:	(bad)  
  416f3d:	cmp    DWORD PTR [edx+eiz*1+0x17],esp
  416f41:	bound  edi,QWORD PTR [edx-0x49]
  416f44:	or     eax,0xccd1a345
  416f49:	adc    ebx,DWORD PTR [ecx-0x5b]
  416f4c:	pop    ss
  416f4d:	sbb    al,0x61
  416f4f:	loope  0x416f8f
  416f51:	neg    BYTE PTR [ebx+0x2e]
  416f54:	mov    ecx,DWORD PTR [edi]
  416f56:	mul    esp
  416f58:	stos   DWORD PTR es:[edi],eax
  416f59:	fcos   
  416f5b:	fcom   DWORD PTR [edx+0x6ebc50ca]
  416f61:	sub    al,0xd0
  416f63:	mov    WORD PTR ds:0x467b25a3,ss
  416f69:	mov    al,ds:0x67a07e10
  416f6e:	pop    ebp
  416f6f:	or     BYTE PTR [edi-0x4b],0xef
  416f73:	retf   0x7ae6
  416f76:	sub    DWORD PTR [ecx],eax
  416f78:	jnp    0x416f66
  416f7a:	mov    ds:0xf4,eax
  416f7f:	add    BYTE PTR [eax],al
  416f81:	add    BYTE PTR [ebp+0x2c],dl
  416f84:	pop    edi
  416f85:	test   DWORD PTR [edi-0x9],edi
  416f88:	(bad)  
  416f8a:	adc    dh,BYTE PTR [ecx+0x2487f626]
  416f90:	sub    al,0x41
  416f92:	xor    ebp,ebp
  416f94:	add    BYTE PTR [eax],al
  416f96:	repnz add al,0x0
  416f99:	add    BYTE PTR [esi],bh
  416f9b:	mov    ds:0x952faa79,al
  416fa0:	fldcw  WORD PTR [ecx-0x2d]
  416fa3:	rcl    BYTE PTR [ecx+esi*8],cl
  416fa6:	sbb    ebp,DWORD PTR [edi]
  416fa8:	ror    edx,0xb2
  416fab:	jo     0x416fe8
  416fad:	or     DWORD PTR [edx+0x32],esp
  416fb0:	and    DWORD PTR [ecx],edx
  416fb2:	loopne 0x417022
  416fb4:	ins    BYTE PTR es:[edi],dx
  416fb5:	cmc    
  416fb6:	outs   dx,BYTE PTR ds:[esi]
  416fb7:	jnp    0x416f75
  416fb9:	pslld  mm4,QWORD PTR ss:0xc7eb2ed9
  416fc1:	in     eax,0x2b
  416fc3:	mov    cl,0x55
  416fc5:	ret    
  416fc6:	scas   al,BYTE PTR es:[edi]
  416fc7:	aaa    
  416fc8:	in     eax,dx
  416fc9:	stc    
  416fca:	test   eax,0x103bb07f
  416fcf:	jge    0x39dec7b5
  416fd5:	push   cs
  416fd6:	dec    ebx
  416fd7:	ja     0x417045
  416fd9:	retf   
  416fda:	test   eax,0x1c578430
  416fdf:	inc    ebx
  416fe0:	dec    edx
  416fe1:	aam    0xa1
  416fe3:	std    
  416fe4:	in     eax,0xef
  416fe6:	jb     0x416fc8
  416fe8:	pop    es
  416fe9:	arpl   di,bx
  416feb:	push   ss
  416fec:	sbb    DWORD PTR [ebp-0x66],0x509a4443
  416ff3:	test   eax,0xa6f395c5
  416ff8:	or     eax,DWORD PTR [edi]
  416ffa:	and    BYTE PTR [eax],ch
  416ffc:	push   ds
  416ffd:	adc    BYTE PTR [ebx+ebp*1],dl
  417000:	sub    al,0x68
  417002:	inc    edi
  417003:	mov    bh,0x8c
  417005:	ficom  DWORD PTR [ebx-0x36f0704f]
  41700b:	retf   0xddf
  41700e:	retf   
  41700f:	cdq    
  417010:	sub    BYTE PTR [edi+0x228585be],al
  417016:	push   0xf8fbc184
  41701b:	(bad)  [ebp-0x12]
  41701e:	test   eax,0x977952b1
  417023:	sti    
  417024:	or     al,0xdf
  417026:	sbb    cl,bl
  417028:	cmp    eax,0x68401a58
  41702d:	push   0xc2420f8e
  417032:	not    dh
  417034:	rol    BYTE PTR [eax+0x4b4f3ac6],cl
  41703a:	dec    eax
  41703b:	jb     0x416fd9
  41703d:	fcomp  QWORD PTR [esp+edx*2-0x68]
  417041:	inc    edi
  417042:	push   esi
  417043:	xor    DWORD PTR [edi+0x42],edi
  417046:	mov    ds:0xa3e642a5,eax
  41704b:	and    DWORD PTR fs:[esi+0x353a77be],edx
  417052:	inc    edi
  417053:	aad    0x19
  417055:	outs   dx,BYTE PTR ds:[esi]
  417056:	cmp    BYTE PTR [edx],0x11
  417059:	or     ah,BYTE PTR [edi+0x2e]
  41705c:	fcomp  QWORD PTR [eax]
  41705e:	neg    DWORD PTR [ebp+0x1abb264e]
  417064:	out    0x72,al
  417066:	imul   edx,DWORD PTR [eax+0x16],0x82c5ee4c
  41706d:	cwde   
  41706e:	in     eax,dx
  41706f:	and    bh,ch
  417071:	sub    eax,DWORD PTR [ebp+0x33]
  417074:	repnz sar DWORD PTR [ebx+0x16],1
  417078:	mov    dh,0xca
  41707a:	or     ebx,0xffffffe5
  41707d:	cmc    
  41707e:	faddp  st(1),st
  417080:	das    
  417081:	mov    ebp,0x12ca8c4d
  417086:	cwde   
  417087:	aad    0x2b
  417089:	cmp    al,0xf0
  41708b:	pop    eax
  41708c:	aas    
  41708d:	pop    ds
  41708e:	and    al,0x86
  417090:	test   BYTE PTR [ebx+0x12],al
  417093:	(bad)  
  417094:	imul   esi,DWORD PTR [eax+ebp*8+0x6c],0xffffff97
  417099:	xchg   esi,eax
  41709a:	and    al,0x4c
  41709c:	mov    ebp,0x9f1722a3
  4170a1:	sub    ch,BYTE PTR [eax+0x7d]
  4170a4:	xor    DWORD PTR [eax-0x3380d1de],eax
  4170aa:	fimul  DWORD PTR [edx+ebx*8-0x12]
  4170ae:	mov    ecx,0xc963a12c
  4170b3:	(bad)  
  4170b4:	adc    eax,0xcac6d2a1
  4170b9:	push   eax
  4170ba:	mov    ebx,0x6eaaa81f
  4170bf:	and    esp,0x71e492b5
  4170c5:	fwait
  4170c6:	je     0x41708a
  4170c8:	mov    bh,0xad
  4170ca:	aaa    
  4170cb:	xchg   BYTE PTR [eax+0x2769069f],ah
  4170d1:	xchg   esi,eax
  4170d2:	nop
  4170d3:	rcr    esp,1
  4170d5:	call   0x3e3b:0x4a60eea7
  4170dc:	dec    eax
  4170dd:	dec    ecx
  4170de:	sbb    ah,BYTE PTR [ebp+0x40]
  4170e1:	pop    ds
  4170e2:	adc    ebx,DWORD PTR [eax+0x1]
  4170e5:	push   edx
  4170e6:	les    ebx,FWORD PTR [eax+0x53]
  4170e9:	popa   
  4170ea:	sbb    DWORD PTR [ebx],esp
  4170ec:	mov    edx,0x47ab7eb7
  4170f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4170f2:	mov    ?,edi
  4170f4:	pusha  
  4170f5:	std    
  4170f6:	ja     0x4170dc
  4170f8:	(bad)  
  4170f9:	fstp   DWORD PTR [edi+0x66de521c]
  4170ff:	or     dh,ah
  417101:	mov    al,0x6e
  417103:	sub    eax,DWORD PTR [ebp+0x28cd271b]
  417109:	push   es
  41710a:	sub    ebp,DWORD PTR [ecx-0x38836b17]
  417110:	data16 cmps BYTE PTR ss:[esi],BYTE PTR es:[edi]
  417113:	xor    cl,BYTE PTR [edi-0x78692201]
  417119:	mov    bh,0xd
  41711b:	xchg   ebx,eax
  41711c:	and    al,dl
  41711e:	add    ebp,esp
  417120:	aad    0x1b
  417122:	sub    BYTE PTR [edi-0x79],bh
  417125:	pusha  
  417126:	icebp  
  417127:	(bad)  
  417128:	mov    edi,0xed9fe5c8
  41712d:	mov    al,0x62
  41712f:	sbb    DWORD PTR es:[eax+edi*2],edx
  417133:	repnz and DWORD PTR [eax+0x2],0x73880ce9
  41713b:	lock pop edi
  41713d:	(bad)  
  41713e:	jmp    0x417106
  417140:	jns    0x417127
  417142:	dec    edx
  417143:	ja     0x417128
  417145:	je     0x417138
  417147:	inc    edx
  417148:	shr    DWORD PTR [ecx+0x18],1
  41714b:	xchg   ebx,eax
  41714c:	outs   dx,BYTE PTR ds:[esi]
  41714d:	fstp   QWORD PTR [edx]
  41714f:	fwait
  417150:	and    eax,0xa955027
  417155:	sbb    eax,0x44abf6bd
  41715a:	enter  0x8c44,0x56
  41715e:	test   eax,0x18ec5568
  417163:	ds dec ecx
  417165:	jle    0x4170fe
  417167:	pop    esi
  417168:	adc    al,0x88
  41716a:	icebp  
  41716b:	rol    ebp,1
  41716d:	push   0x75
  41716f:	stos   DWORD PTR es:[edi],eax
  417170:	dec    edx
  417171:	mov    eax,ds
  417173:	shl    BYTE PTR [ebp+0xcecf78e],1
  417179:	xchg   ecx,eax
  41717a:	mov    BYTE PTR ds:0x6351cc95,dh
  417180:	mov    cl,BYTE PTR [ecx]
  417182:	dec    edx
  417183:	repz mov dl,BYTE PTR [esi+0x183b22fd]
  41718a:	repnz cld 
  41718c:	je     0x4171de
  41718e:	daa    
  41718f:	xor    bl,BYTE PTR [ecx-0x17]
  417192:	mov    ebx,0xe937d88c
  417197:	dec    edx
  417198:	push   ebp
  417199:	xchg   dh,cl
  41719b:	pop    ds
  41719c:	dec    ebx
  41719d:	sub    al,0x93
  41719f:	(bad)  
  4171a0:	lods   al,BYTE PTR ds:[esi]
  4171a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4171a2:	aad    0x4f
  4171a4:	sub    edi,DWORD PTR [ebx]
  4171a6:	xor    BYTE PTR [eax-0xc15c56a],bl
  4171ac:	sbb    dh,dh
  4171ae:	jbe    0x4171e4
  4171b0:	push   es
  4171b1:	xor    bh,al
  4171b3:	out    0x76,al
  4171b5:	shl    BYTE PTR [eax+ebp*2+0x1d],0x27
  4171ba:	sub    BYTE PTR [ecx+0x53],dl
  4171bd:	inc    ecx
  4171be:	xchg   ecx,eax
  4171c0:	push   eax
  4171c1:	ins    DWORD PTR es:[edi],dx
  4171c2:	jno    0x417149
  4171c4:	push   ecx
  4171c5:	pop    ss
  4171c6:	fiadd  WORD PTR [ecx]
  4171c8:	out    dx,al
  4171c9:	fs ds js 0x417242
  4171cd:	neg    dh
  4171cf:	sub    esp,DWORD PTR [edx+0x289df9f3]
  4171d5:	pop    es
  4171d6:	in     al,0x22
  4171d8:	in     eax,dx
  4171d9:	(bad)  
  4171da:	into   
  4171db:	mov    bl,bl
  4171dd:	add    eax,0xff534114
  4171e2:	(bad)  
  4171e4:	xor    ah,BYTE PTR [edx]
  4171e6:	retf   0xc2e2
  4171e9:	sbb    al,0xba
  4171eb:	inc    esi
  4171ec:	retf   0x6dc
  4171ef:	adc    BYTE PTR [edx],ah
  4171f1:	imul   edi,ebx,0x73a8f2d6
  4171f7:	jno    0x417228
  4171f9:	mov    ?,WORD PTR [edi]
  4171fb:	cmc    
  4171fc:	lods   eax,DWORD PTR ds:[esi]
  4171fd:	and    cl,BYTE PTR [ebx+0x4a9c3bf8]
  417203:	out    0xa7,eax
  417205:	mov    ebp,esi
  417207:	js     0x4171b3
  417209:	das    
  41720a:	dec    esp
  41720b:	jbe    0x41723c
  41720d:	iret   
  41720e:	adc    DWORD PTR [esp+ebx*8-0x14570927],esp
  417215:	cs into 
  417217:	and    ecx,DWORD PTR [ebx]
  417219:	cmp    al,0xa4
  41721b:	inc    ebp
  41721c:	clc    
  41721d:	iret   
  41721e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41721f:	xchg   edi,eax
  417220:	dec    ebx
  417221:	jge    0x4171e3
  417223:	pusha  
  417224:	sbb    ah,BYTE PTR [eax]
  417226:	fdivr  st(7),st
  417228:	add    BYTE PTR [esi+0x2d979296],ah
  41722e:	inc    esi
  41722f:	pop    ecx
  417230:	fistp  QWORD PTR [ebx]
  417232:	pushf  
  417233:	inc    esp
  417234:	clc    
  417235:	fwait
  417236:	mov    ebp,0x20df4043
  41723b:	arpl   bp,si
  41723d:	mov    ds:0xc052e09c,eax
  417242:	mov    cl,0x45
  417244:	mov    eax,ds:0x31ac2754
  417249:	adc    ah,al
  41724b:	add    ah,ah
  41724d:	mov    ds:0x3b501f6f,eax
  417252:	in     eax,0xa3
  417254:	imul   esi,eax,0xdb89c30a
  41725a:	(bad)  
  41725b:	cmp    eax,0x47dd9f0e
  417260:	jb     0x4db999c1
  417266:	or     BYTE PTR [eax+0x7eac7af6],dl
  41726c:	push   es
  41726d:	sub    ch,BYTE PTR ds:0xc9950bda
  417273:	add    cl,bl
  417275:	lods   al,BYTE PTR ds:[esi]
  417276:	neg    DWORD PTR [edx]
  417278:	enter  0x5de7,0xf7
  41727c:	jp     0x417294
  41727e:	add    al,0x60
  417280:	(bad)  
  417281:	and    dl,BYTE PTR [edi*4-0x7ba53f94]
  417288:	shl    DWORD PTR [ebx-0x23],1
  41728b:	pop    edx
  41728c:	mov    DWORD PTR [edi+0x2d707ee],ebx
  417292:	mov    bl,0xbb
  417294:	test   BYTE PTR [ebx+esi*2+0x1abcd0b0],ch
  41729b:	into   
  41729c:	fs jno 0x41722d
  41729f:	sbb    ebx,ebx
  4172a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4172a2:	shr    BYTE PTR [eax],1
  4172a4:	mov    esi,0x19f10e02
  4172a9:	push   ds
  4172aa:	jo     0x417266
  4172ac:	dec    esp
  4172ad:	sbb    cl,BYTE PTR [eax-0x3e1fdf6d]
  4172b3:	enter  0xc126,0x13
  4172b7:	call   0x1ebd07f2
  4172bc:	loope  0x41729d
  4172be:	jo     0x417293
  4172c0:	xor    edi,edx
  4172c2:	ds pop ds
  4172c4:	ret    0x162a
  4172c7:	ja     0x417339
  4172c9:	dec    esi
  4172ca:	(bad)
  4172cd:	in     al,0x7a
  4172cf:	js     0x4172f1
  4172d1:	icebp  
  4172d2:	add    al,0xeb
  4172d4:	sar    eax,cl
  4172d6:	es mov ah,0xee
  4172d9:	sub    eax,0xc1811f0e
  4172de:	ss scas al,BYTE PTR es:[edi]
  4172e0:	pop    eax
  4172e1:	pop    esp
  4172e2:	and    ebp,edi
  4172e4:	ja     0x4172b9
  4172e6:	pop    ebp
  4172e7:	test   BYTE PTR [edx],bh
  4172e9:	(bad)  
  4172ea:	dec    ecx
  4172eb:	(bad)  
  4172ec:	sub    ah,BYTE PTR [ebx-0x28415b12]
  4172f2:	or     DWORD PTR [edi+0x449a6493],eax
  4172f8:	jmp    0xa86a:0x51f72173
  4172ff:	sti    
  417300:	mov    ds:0x5682f7a,al
  417305:	aaa    
  417306:	fisubr WORD PTR [ebx]
  417308:	mov    dl,0xb4
  41730a:	mov    eax,0x24c7eed
  41730f:	js     0x417382
  417311:	jmp    0x4382:0x28399f7f
  417318:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  41731a:	xchg   ecx,eax
  41731b:	dec    esi
  41731c:	call   0x906a:0x579bf920
  417323:	mov    edx,DWORD PTR [ebp-0x58f62ba0]
  417329:	sub    eax,0x921cc015
  41732e:	or     BYTE PTR [edx-0x272dca66],ah
  417334:	mov    cl,0xec
  417336:	idiv   BYTE PTR [esi-0x58141672]
  41733c:	cmp    al,BYTE PTR [eax+0x4a]
  41733f:	pop    ebp
  417340:	cwde   
  417341:	push   ecx
  417342:	jle    0x4173a2
  417344:	xor    al,0x74
  417346:	cdq    
  417347:	push   eax
  417348:	sbb    DWORD PTR [ecx],ecx
  41734a:	pop    ebx
  41734b:	inc    ecx
  41734c:	imul   esi,edx,0x6ecfca50
  417352:	outs   dx,DWORD PTR ds:[esi]
  417353:	sar    DWORD PTR ds:0x5f88a566,cl
  417359:	xchg   esi,eax
  41735a:	hlt    
  41735b:	pop    esp
  41735c:	outs   dx,BYTE PTR ds:[esi]
  41735d:	arpl   WORD PTR [eax+ebp*1],bp
  417360:	daa    
  417361:	fimul  DWORD PTR [ecx+0x71]
  417364:	inc    edx
  417365:	push   ds
  417366:	in     al,0x88
  417368:	retf   
  417369:	push   edi
  41736a:	sub    edi,DWORD PTR [edx-0x1118216c]
  417370:	fnop   
  417372:	data16 cli 
  417374:	nop
  417375:	daa    
  417376:	add    al,0x27
  417378:	jmp    0x4173b9
  41737a:	ret    
  41737b:	imul   ecx,DWORD PTR [edi],0xfffffffb
  41737e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41737f:	mov    edx,0x4456ca4
  417384:	sub    BYTE PTR [esi-0x7f],ah
  417387:	dec    edx
  417388:	sbb    eax,0xab3e2ed7
  41738d:	or     ch,ah
  41738f:	xchg   BYTE PTR ds:0x1b92699b,dl
  417395:	cmp    BYTE PTR [ebx+eiz*2+0x53],al
  417399:	push   eax
  41739a:	xchg   edx,eax
  41739b:	and    bh,BYTE PTR [ecx-0x59]
  41739e:	cmp    WORD PTR [edx-0x28],sp
  4173a2:	je     0x4173e9
  4173a4:	fstp   TBYTE PTR [edx+eiz*4-0x34c6f14e]
  4173ab:	fsubr  DWORD PTR [ecx+0x7a]
  4173ae:	pushw  ss
  4173b0:	dec    ecx
  4173b1:	dec    ebx
  4173b2:	ja     0x417412
  4173b4:	(bad)  
  4173b6:	out    0xd,al
  4173b8:	mov    edi,0x4f45616f
  4173bd:	sahf   
  4173be:	pop    ebx
  4173bf:	test   BYTE PTR [eax-0x555b863],bh
  4173c5:	ficom  WORD PTR [eax]
  4173c7:	in     al,0xe6
  4173c9:	aaa    
  4173ca:	or     esp,eax
  4173cc:	cmp    dl,dl
  4173ce:	sbb    dh,BYTE PTR [edx-0x614badb9]
  4173d4:	sub    DWORD PTR [ecx],ebx
  4173d6:	loopne 0x4173b7
  4173d8:	xor    BYTE PTR [ebp+0x54],0x7d
  4173dc:	shl    BYTE PTR [esp+edx*8+0x491ca104],0x2e
  4173e4:	sub    BYTE PTR [edi+edx*8+0xb6bea9b],0xb7
  4173ec:	ret    0x26a6
  4173ef:	ss cld 
  4173f1:	enter  0x9447,0x50
  4173f5:	loope  0x4173e7
  4173f7:	mov    eax,0x563adcc0
  4173fc:	stos   DWORD PTR es:[edi],eax
  4173fd:	fbstp  TBYTE PTR [eax+0x59]
  417400:	jmp    0x7c9d:0xf7672fd8
  417407:	and    eax,0xfff1094e
  41740c:	inc    edi
  41740d:	xchg   ecx,eax
  41740e:	and    eax,0xeaedb472
  417413:	repz mov eax,ds:0x115e2e5c
  417419:	out    0xcf,al
  41741b:	mov    WORD PTR [ecx],ds
  41741d:	and    BYTE PTR [esi-0x7c15f83],ah
  417423:	jl     0x417422
  417425:	lods   eax,DWORD PTR ds:[esi]
  417426:	enter  0xafd2,0x86
  41742a:	lahf   
  41742b:	or     edi,DWORD PTR [edx]
  41742d:	into   
  41742e:	sub    al,0xc7
  417430:	int    0xc8
  417432:	cdq    
  417433:	pop    edx
  417434:	(bad)
  417438:	scas   al,BYTE PTR es:[edi]
  417439:	mov    dl,0x96
  41743b:	pop    es
  41743c:	aam    0x5a
  41743e:	xor    edx,esi
  417440:	jb     0x4173ce
  417442:	gs (bad) 
  417444:	stos   DWORD PTR es:[edi],eax
  417445:	out    dx,al
  417446:	imul   eax,esi,0xab6db009
  41744c:	arpl   WORD PTR [ecx+0x7b],di
  41744f:	pop    ss
  417450:	div    BYTE PTR [edi]
  417452:	fld    DWORD PTR [ebx-0x2]
  417455:	jg     0x417435
  417457:	jmp    0x307a:0xa01f7bbc
  41745e:	(bad)  
  41745f:	(bad)  
  417460:	aas    
  417461:	push   ss
  417462:	test   eax,0xbe7b3ba9
  417467:	xor    dl,BYTE PTR [edi+0x17]
  41746a:	mov    ch,0xf6
  41746c:	xchg   ebp,eax
  41746d:	xor    al,0xb7
  41746f:	push   edi
  417470:	in     al,0x4
  417472:	mov    dh,0xa7
  417474:	push   ss
  417475:	inc    ebp
  417476:	pop    ebp
  417477:	mov    dl,0xe5
  417479:	repnz sub al,0xce
  41747c:	repnz outs dx,BYTE PTR ds:[esi]
  41747e:	stos   DWORD PTR es:[edi],eax
  41747f:	push   ebx
  417480:	lods   al,BYTE PTR ds:[esi]
  417481:	stos   DWORD PTR es:[edi],eax
  417482:	dec    eax
  417483:	popa   
  417484:	(bad)  ss:[edx]
  417487:	fdiv   DWORD PTR [edx+0x3c]
  41748a:	push   es
  41748b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41748c:	add    BYTE PTR [eax],al
  41748e:	add    BYTE PTR [eax],al
  417490:	add    BYTE PTR [eax],al
  417492:	fisttp WORD PTR [ebp-0x66]
  417495:	mov    DWORD PTR [edx+0x305fdfdf],ebx
  41749b:	adc    al,0x61
  41749d:	retf   0x3eb8
  4174a0:	add    BYTE PTR [ebx],ch
  4174a2:	and    eax,0xf20000f2
  4174a7:	add    al,0x0
  4174a9:	add    BYTE PTR [edi+0x336639e7],dl
  4174af:	pushf  
  4174b0:	mov    al,0x31
  4174b2:	add    ch,BYTE PTR [edx+edx*2-0x1430954b]
  4174b9:	jecxz  0x41747f
  4174bb:	int3   
  4174bc:	pop    ss
  4174bd:	leave  
  4174be:	data16 je 0x417498
  4174c1:	add    eax,edi
  4174c3:	fcmovu st,st(4)
  4174c5:	fld    TBYTE PTR [ebx+0x2cd875f]
  4174cb:	outs   dx,DWORD PTR ds:[esi]
  4174cc:	icebp  
  4174cd:	xchg   BYTE PTR [ecx],bl
  4174cf:	xchg   edx,eax
  4174d0:	fisubr DWORD PTR [esi-0x7f238e88]
  4174d6:	ins    BYTE PTR es:[edi],dx
  4174d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4174d8:	pop    esi
  4174d9:	fs cmp al,0xce
  4174dc:	imul   eax,DWORD PTR [ecx],0xffffff98
  4174df:	mov    al,al
  4174e1:	and    DWORD PTR [ecx-0xa76ce97],esp
  4174e7:	popf   
  4174e8:	retf   0x6ac7
  4174eb:	mov    edi,ds
  4174ed:	xor    eax,0x777090bc
  4174f2:	fdivr  QWORD PTR [ecx+eiz*4]
  4174f5:	repnz sub ebx,esi
  4174f8:	or     DWORD PTR [ecx],ebp
  4174fa:	xor    DWORD PTR [edi],esp
  4174fc:	in     eax,0x18
  4174fe:	or     BYTE PTR [ebx-0xa76d3e9],bh
  417504:	(bad)  
  417505:	daa    
  417506:	mov    al,0xd6
  417508:	mov    eax,0xdbaa78bb
  41750d:	sub    edx,DWORD PTR [esi+0x3c]
  417510:	add    eax,DWORD PTR [edi-0x76ee0116]
  417516:	or     eax,0x13262538
  41751b:	jns    0x4174c7
  41751d:	sbb    DWORD PTR [ebx+0x59af34b5],eax
  417523:	adc    BYTE PTR [edx-0x31],dl
  417526:	out    dx,eax
  417527:	cli    
  417528:	fst    DWORD PTR [esp+edx*1+0x24]
  41752c:	scas   al,BYTE PTR es:[edi]
  41752d:	adc    DWORD PTR [esi+eiz*2-0x19ab60fc],ecx
  417534:	sub    DWORD PTR gs:[ecx],edi
  417537:	mov    esi,0xbc9a842e
  41753c:	or     ecx,DWORD PTR [edx+0x25]
  41753f:	and    BYTE PTR [edx-0x2c],ch
  417542:	jae    0x417507
  417544:	adc    DWORD PTR [eax+0x7a],esi
  417547:	cmp    DWORD PTR fs:0x8e6a43d0,ecx
  41754e:	mov    DWORD PTR [edi+0x29dc8340],eax
  417554:	cmp    eax,0xe68cc048
  417559:	adc    ah,BYTE PTR [ecx+ecx*2+0x4d]
  41755d:	ins    DWORD PTR es:[edi],dx
  41755e:	imul   eax,DWORD PTR [edi+eiz*4+0x648f129e],0xabf26048
  417569:	loopne 0x41759f
  41756b:	ret    0x90cb
  41756e:	lds    ebp,FWORD PTR [ecx-0x56]
  417571:	mov    eax,ds:0xbcd263c
  417576:	in     eax,dx
  417577:	stos   DWORD PTR es:[edi],eax
  417578:	mov    BYTE PTR ds:0x92b6228d,ch
  41757e:	xchg   ebx,eax
  41757f:	jge    0x417502
  417581:	sbb    al,0xa
  417583:	jmp    0x417595
  417585:	ins    BYTE PTR es:[edi],dx
  417586:	pop    edi
  417587:	pop    ebp
  417588:	xlat   BYTE PTR ds:[ebx]
  417589:	ret    
  41758a:	add    al,0x1e
  41758c:	stc    
  41758d:	add    eax,0x91068278
  417592:	loopne 0x4175e7
  417594:	(bad)  
  417595:	fstp   QWORD PTR [eax+0x28]
  417598:	cmp    dl,BYTE PTR [ecx-0x4]
  41759b:	mov    bl,0xf
  41759d:	mov    ecx,eax
  41759f:	outs   dx,BYTE PTR ds:[esi]
  4175a0:	dec    BYTE PTR [edi-0x2b]
  4175a3:	mov    esi,0x8a3996d4
  4175a8:	cli    
  4175a9:	popf   
  4175aa:	cmp    eax,0xb617948e
  4175af:	mov    ecx,0xb8b0476d
  4175b4:	xchg   ebx,eax
  4175b5:	lahf   
  4175b6:	fimul  WORD PTR [esp+ecx*4]
  4175b9:	push   es
  4175ba:	and    eax,0x1c2e3a57
  4175bf:	das    
  4175c0:	dec    edi
  4175c1:	cmp    al,0xc4
  4175c3:	dec    ecx
  4175c4:	pop    esp
  4175c5:	mov    al,0x3
  4175c7:	xchg   esi,eax
  4175c8:	pop    ss
  4175c9:	and    DWORD PTR [edi-0x1a557832],ebp
  4175cf:	cmp    al,0x7c
  4175d1:	fsubr  DWORD PTR [edi+0x44]
  4175d4:	pop    edi
  4175d5:	nop
  4175d6:	adc    ch,ah
  4175d8:	mov    esp,0x15dcc1f6
  4175dd:	fdivr  DWORD PTR [ecx-0x7c5fb74c]
  4175e3:	xor    dh,BYTE PTR [ebx]
  4175e5:	mov    eax,0xa5dd848e
  4175ea:	push   edi
  4175eb:	ins    BYTE PTR es:[edi],dx
  4175ec:	or     al,0x87
  4175ee:	or     al,0x58
  4175f0:	or     ah,cl
  4175f2:	mov    eax,ds:0xae5626b8
  4175f7:	and    DWORD PTR [edx+0x296589d6],esp
  4175fd:	retf   
  4175fe:	pop    es
  4175ff:	sti    
  417600:	ja     0x4175ec
  417602:	sbb    dh,BYTE PTR [eax]
  417604:	repnz loope 0x417635
  417607:	leave  
  417608:	outs   dx,BYTE PTR ds:[esi]
  417609:	mov    ecx,DWORD PTR [edi-0x48454b70]
  41760f:	cmp    al,0x29
  417612:	adc    ecx,DWORD PTR [ebp-0x4d]
  417615:	mov    ds:0xc2ff4cc9,eax
  41761a:	in     al,0x19
  41761c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41761d:	mov    dl,0x63
  41761f:	call   DWORD PTR [esi-0x5e0d4e87]
  417625:	jo     0x41767f
  417627:	imul   ebp,DWORD PTR [esi],0xb78d435a
  41762d:	sub    BYTE PTR [ebp-0x1f676348],dh
  417633:	aaa    
  417634:	mov    ds:0x9e859a73,eax
  417639:	popa   
  41763a:	adc    eax,0xd700cc42
  41763f:	cwde   
  417640:	into   
  417641:	push   eax
  417642:	add    al,0xdf
  417644:	pslld  mm3,QWORD PTR [ecx]
  417647:	loope  0x4175e6
  417649:	pop    ebp
  41764a:	(bad)  
  41764b:	in     al,dx
  41764c:	test   DWORD PTR [edi-0x15],eax
  41764f:	and    ch,ah
  417651:	test   BYTE PTR [eax-0x77be403f],bh
  417657:	pop    ecx
  417658:	push   ss
  417659:	adc    DWORD PTR [ebx],0xbc4e39b9
  41765f:	stos   BYTE PTR es:[edi],al
  417660:	dec    ebp
  417661:	lods   al,BYTE PTR ds:[esi]
  417662:	or     DWORD PTR ds:0xc67a2435,0xffffffb1
  417669:	pop    edx
  41766a:	cdq    
  41766b:	aaa    
  41766c:	in     eax,0xbe
  41766e:	xchg   ebp,eax
  41766f:	mov    bl,0x3
  417671:	push   edx
  417672:	or     eax,0xfd26942e
  417677:	cmp    eax,0xe63d052b
  41767c:	dec    esp
  41767d:	xor    ebx,DWORD PTR [ecx+0x419a51b0]
  417683:	outs   dx,BYTE PTR ds:[esi]
  417684:	push   ebp
  417685:	cmp    al,cl
  417687:	iret   
  417688:	push   eax
  417689:	cmp    eax,0x8b61c2c6
  41768e:	mov    ds:0x458d6638,eax
  417693:	jge    0x417652
  417695:	xor    ebp,DWORD PTR [edi-0x10dff0ed]
  41769b:	(bad)  
  41769c:	jmp    0xc9abe722
  4176a1:	sub    ebx,DWORD PTR [esi+0x69]
  4176a4:	jecxz  0x4176d6
  4176a6:	add    eax,0x7ece5e29
  4176ab:	or     eax,0x952f5259
  4176b0:	mov    DWORD PTR [eax+0x1a026905],ecx
  4176b6:	test   DWORD PTR [ebx],0xa94b5ee1
  4176bc:	mov    ds:0xda5e9519,al
  4176c1:	call   0xa95b:0x8bb39be9
  4176c8:	cmp    ch,ah
  4176ca:	imul   edx,esi,0x2c
  4176cd:	sbb    al,0x33
  4176cf:	add    al,0x6b
  4176d1:	xor    bl,BYTE PTR [eax+edx*8-0x17]
  4176d5:	test   eax,0xccd182db
  4176da:	jo     0x417756
  4176dc:	bound  edi,QWORD PTR [di]
  4176df:	stos   BYTE PTR es:[edi],al
  4176e0:	jnp    0x41774c
  4176e2:	repnz xlat BYTE PTR ds:[ebx]
  4176e4:	pop    es
  4176e5:	call   0xdc3737c9
  4176ea:	mov    dh,0xa4
  4176ec:	in     eax,dx
  4176ed:	(bad)  [edx+0x39]
  4176f0:	pusha  
  4176f1:	mov    edx,0x1cfb21bc
  4176f6:	dec    ebx
  4176f7:	sub    ch,bl
  4176f9:	retf   0x5a1a
  4176fc:	xchg   edx,eax
  4176fd:	adc    eax,0x8e85c36d
  417702:	clc    
  417703:	cld    
  417704:	lock mov edx,0xde8f0dd
  41770a:	mov    ebp,0xf7b662b9
  41770f:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  417711:	xchg   ecx,eax
  417712:	shr    BYTE PTR [ebx+0x68],1
  417715:	dec    ecx
  417716:	gs mov dl,0xa6
  417719:	jno    0x417706
  41771b:	push   ds
  41771c:	mov    ebx,0x9ca2aea7
  417721:	pop    ebp
  417722:	adc    BYTE PTR [edi+ebp*1-0x2ad616cc],0xa4
  41772a:	mul    DWORD PTR [esi]
  41772c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41772d:	dec    edx
  41772e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41772f:	lahf   
  417730:	fisttp QWORD PTR [eax+0x421230bd]
  417736:	lea    esi,[ebx]
  417738:	sub    esi,DWORD PTR [ebp-0xe]
  41773b:	arpl   WORD PTR ss:[eax-0x5524b48a],dx
  417742:	xchg   edi,eax
  417743:	dec    ecx
  417744:	xor    eax,0x53983d3c
  417749:	sti    
  41774a:	push   ebx
  41774b:	pop    es
  41774c:	fidiv  WORD PTR [esi-0x74b7a91b]
  417752:	and    dh,ch
  417754:	sbb    ebp,eax
  417756:	les    ebp,FWORD PTR [edx-0x148364c0]
  41775c:	jnp    0x417779
  41775e:	sbb    al,0x64
  417760:	dec    edx
  417761:	xor    DWORD PTR [edi-0x627756e],esi
  417767:	call   0xb4fb:0xf1e5e5ab
  41776e:	popf   
  41776f:	enter  0xeb70,0x81
  417773:	xor    BYTE PTR ss:[esi+0x4f],0x8c
  417778:	stc    
  417779:	ins    DWORD PTR es:[edi],dx
  41777a:	aaa    
  41777b:	xchg   esp,eax
  41777c:	mov    ds:0x543a7c53,eax
  417781:	js     0x4177c4
  417783:	mov    eax,0x2042c818
  417788:	pop    DWORD PTR [edx+0x2533e3c3]
  41778e:	in     eax,0x7
  417790:	mov    eax,0x3abba545
  417795:	mov    bl,0x13
  417797:	add    dh,ch
  417799:	add    al,0xb
  41779b:	sub    bl,BYTE PTR [esi-0x264f5487]
  4177a1:	pop    ebx
  4177a2:	xchg   esp,eax
  4177a3:	xchg   esi,eax
  4177a4:	xor    eax,0x21540912
  4177a9:	das    
  4177aa:	mov    WORD PTR [ebx-0x33],?
  4177ad:	mov    al,0x75
  4177af:	(bad)  
  4177b0:	in     al,dx
  4177b1:	add    BYTE PTR [ebp-0x16c53da7],dh
  4177b7:	xor    eax,0x1aa079ea
  4177bc:	pop    es
  4177bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4177be:	cld    
  4177bf:	aaa    
  4177c0:	sub    al,0x5a
  4177c2:	mov    ebp,0xeade1e68
  4177c7:	fmul   st(5),st
  4177c9:	xchg   ecx,eax
  4177ca:	or     al,0x65
  4177cc:	data16 ror cl,1
  4177cf:	xchg   esp,eax
  4177d0:	mov    ebp,0x91fca8be
  4177d5:	loop   0x4177d2
  4177d7:	jne    0x4177db
  4177d9:	cli    
  4177da:	lods   eax,DWORD PTR ds:[esi]
  4177db:	imul   esp,DWORD PTR [edx],0x1f9dda5f
  4177e1:	sbb    BYTE PTR [edx],al
  4177e3:	mov    al,ds:0xe862e898
  4177e8:	sub    ebx,DWORD PTR [esp-0x2f50dd4c]
  4177ef:	jmp    0x9738ac3f
  4177f4:	xor    DWORD PTR [ebp+0x53],edx
  4177f7:	cmp    BYTE PTR [ebx-0x7a21de0f],bh
  4177fd:	or     al,bl
  4177ff:	mov    es,WORD PTR [esi-0x44]
  417802:	sub    ebp,DWORD PTR [edi+0x4d]
  417805:	retf   0xcd1a
  417808:	mov    bl,ch
  41780a:	loopne 0x41783f
  41780c:	sub    al,0xbb
  41780e:	sbb    ecx,esp
  417810:	mov    eax,0xc672fe3
  417815:	mov    edx,ebx
  417817:	and    bh,BYTE PTR [edi+ecx*1+0x3e]
  41781b:	push   es
  41781c:	sbb    BYTE PTR ds:0x2f072faa,al
  417822:	int    0xd9
  417824:	jmp    0x417838
  417826:	mov    esi,0x64dd5bf5
  41782b:	js     0x41788f
  41782d:	pop    eax
  41782e:	rep ins BYTE PTR es:[edi],dx
  417830:	cmp    BYTE PTR [eax+0x685d2286],dl
  417836:	jnp    0x4178aa
  417838:	mov    BYTE PTR [edx-0x35],bh
  41783b:	xchg   BYTE PTR [ebx-0x27],dl
  41783e:	adc    DWORD PTR [ecx+eax*1-0x8],0x3737bed1
  417846:	or     al,0x87
  417848:	fisttp WORD PTR [ebx]
  41784a:	fs retf 
  41784c:	test   DWORD PTR [ebp+0x32],ecx
  41784f:	fld    DWORD PTR [eax]
  417851:	jecxz  0x41781f
  417853:	hlt    
  417854:	fsub   QWORD PTR [eax+0x34]
  417857:	call   0x169:0x903b8a48
  41785e:	ja     0x417815
  417860:	dec    edx
  417861:	and    DWORD PTR [ebp+0x3a],edi
  417864:	jno    0x41781d
  417866:	mov    dh,0x9b
  417868:	shr    cl,0x7f
  41786b:	xchg   esi,eax
  41786c:	stos   DWORD PTR es:[edi],eax
  41786d:	aaa    
  41786e:	jge    0x41786e
  417870:	pop    ebp
  417871:	mov    eax,esp
  417873:	dec    ebp
  417874:	out    0xfe,eax
  417876:	push   esp
  417877:	sbb    dh,ah
  417879:	jmp    0x41781a
  41787b:	sti    
  41787c:	xchg   ebx,eax
  41787d:	iret   
  41787e:	sub    DWORD PTR [eax-0x25247b19],esp
  417884:	cli    
  417885:	dec    esi
  417886:	jb     0x4178b6
  417888:	sar    BYTE PTR [edi-0x45],0x50
  41788c:	and    BYTE PTR ds:0xfbfe66dd,dh
  417892:	cld    
  417893:	test   ecx,edx
  417895:	mov    ebp,0x477e400c
  41789a:	jbe    0x417834
  41789c:	aam    0xa5
  41789e:	mov    edx,0x7e438864
  4178a3:	sub    DWORD PTR [edi-0x40e4de3e],esi
  4178a9:	sar    DWORD PTR [esi+0x57],0x6e
  4178ad:	adc    eax,0xdaf18357
  4178b2:	add    bl,BYTE PTR [esi-0x6a]
  4178b5:	mov    bh,0xdd
  4178b7:	aam    0xc8
  4178b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4178ba:	inc    esp
  4178bb:	(bad)  
  4178bc:	mov    ecx,DWORD PTR [edx]
  4178be:	cmp    DWORD PTR [eax+0xb],esp
  4178c1:	add    BYTE PTR [eax],bl
  4178c3:	imul   edi,DWORD PTR [ecx],0x9689395e
  4178c9:	xor    esi,ebp
  4178cb:	sub    al,0x8e
  4178cd:	ja     0x4178c8
  4178cf:	pop    ss
  4178d0:	jecxz  0x417911
  4178d2:	xchg   BYTE PTR [esi-0x9],al
  4178d5:	sub    ah,BYTE PTR [ecx]
  4178d7:	mov    esi,0xf217160a
  4178dc:	fmul   DWORD PTR [edi-0x2ccb383d]
  4178e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4178e3:	(bad)  
  4178e4:	sbb    al,0x37
  4178e6:	icebp  
  4178e7:	ds in  al,0x38
  4178ea:	mov    esp,0x3002b495
  4178ef:	sub    ecx,DWORD PTR [edi+0x1a]
  4178f2:	(bad)  
  4178f3:	outs   dx,DWORD PTR ds:[esi]
  4178f4:	mov    cl,0xf
  4178f6:	adc    eax,0x19dfeba
  4178fb:	in     eax,dx
  4178fc:	mov    dl,0x14
  4178fe:	aam    0x33
  417900:	sbb    edi,ebp
  417902:	push   ss
  417903:	pop    ebx
  417904:	in     al,0x9c
  417906:	lahf   
  417907:	or     ecx,edi
  417909:	mov    ah,0x8b
  41790b:	push   ebx
  41790c:	push   ebx
  41790d:	gs jecxz 0x417958
  417910:	xor    dl,BYTE PTR [esi]
  417912:	xchg   esp,eax
  417913:	js     0x4178ec
  417915:	inc    edi
  417916:	sbb    DWORD PTR [edi+0x5e9732ef],edi
  41791c:	cmp    DWORD PTR [ecx+0x77],ebp
  41791f:	pop    eax
  417920:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417921:	jmp    0xdde:0x14ae75e3
  417928:	repz addr16 mov bh,0x39
  41792c:	test   DWORD PTR [eax-0x66ede451],esi
  417932:	or     eax,0x27e73e8d
  417937:	sbb    ch,BYTE PTR [ebp-0x66]
  41793a:	loope  0x417975
  41793c:	js     0x417933
  41793e:	inc    esi
  41793f:	rol    BYTE PTR [eax],cl
  417941:	mov    WORD PTR [eax-0x6f896746],cs
  417947:	mov    dl,0x6b
  417949:	or     BYTE PTR [esi],bh
  41794b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41794c:	push   ss
  41794d:	add    BYTE PTR [edx],dh
  41794f:	stos   BYTE PTR es:[edi],al
  417950:	mov    ebp,0x47e124a2
  417955:	and    al,0x9f
  417957:	jmp    0x54da:0x7d420cb3
  41795e:	sbb    BYTE PTR [esi+0x49ca2943],0x4a
  417965:	xlat   BYTE PTR ds:[ebx]
  417966:	das    
  417967:	or     ebx,ecx
  417969:	xchg   edi,eax
  41796a:	loope  0x417925
  41796c:	mov    al,BYTE PTR [eax]
  41796e:	je     0x417995
  417970:	xchg   DWORD PTR [edi-0x70b33f4b],ecx
  417976:	cmc    
  417977:	dec    ecx
  417978:	(bad)  
  417979:	dec    eax
  41797a:	imul   ecx,eax,0xffffffb3
  41797d:	sub    BYTE PTR [esi],bl
  41797f:	pop    ss
  417980:	pop    ebx
  417981:	sbb    eax,DWORD PTR [edi+0x32b7d3cd]
  417987:	push   0xffffffcb
  417989:	bound  ebp,QWORD PTR [edx-0x3482d66]
  41798f:	mov    dl,0xa9
  417991:	(bad)  
  417992:	shl    DWORD PTR [ebp+0x13],1
  417995:	mov    ds:0x206ee4d0,eax
  41799a:	xchg   esi,eax
  41799b:	int    0x0
  41799d:	add    BYTE PTR [eax],al
  41799f:	add    BYTE PTR [eax],al
  4179a1:	add    BYTE PTR [esi],ah
  4179a3:	mov    ah,0x71
  4179a5:	jno    0x41799a
  4179a7:	cmc    
  4179a8:	div    DWORD PTR es:[edx+0x8]
  4179ac:	mov    eax,ds:0x6dc2ac75
  4179b1:	stc    
  4179b2:	pop    ss
  4179b3:	test   DWORD PTR [eax],0x4f200
  4179b9:	add    BYTE PTR [edi+edx*1-0x75237e42],dh
  4179c0:	pop    ebp
  4179c1:	inc    ecx
  4179c2:	mov    edx,0xb0aa85b5
  4179c7:	or     ch,BYTE PTR [edi]
  4179c9:	std    
  4179ca:	xor    DWORD PTR [ecx-0x1d632c6f],eax
  4179d0:	inc    ebx
  4179d1:	adc    bl,bl
  4179d3:	dec    ebx
  4179d4:	cdq    
  4179d5:	xor    eax,0x3bb21c2f
  4179da:	imul   edx,DWORD PTR [edi+0x1dbb330],0x18
  4179e1:	(bad)  
  4179e2:	push   eax
  4179e3:	pop    esi
  4179e4:	mov    esp,es
  4179e6:	imul   esi,DWORD PTR [eax+edi*2+0x5a],0xd6419ccb
  4179ee:	popa   
  4179ef:	mov    BYTE PTR [eax],dh
  4179f1:	stos   DWORD PTR es:[edi],eax
  4179f2:	sbb    ebp,DWORD PTR [edx+0x19]
  4179f5:	test   eax,eax
  4179f7:	rcr    BYTE PTR [ecx-0x2b],cl
  4179fa:	test   DWORD PTR [edx+ebp*8-0x56],ebx
  4179fe:	outs   dx,BYTE PTR ds:[esi]
  4179ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417a00:	mov    WORD PTR [ebx-0x5e],gs
  417a03:	jbe    0x4179ee
  417a05:	lods   al,BYTE PTR ds:[esi]
  417a06:	and    cl,BYTE PTR [ebx+0x18b47104]
  417a0c:	lds    ebp,FWORD PTR ss:[ebx+0xbb0bd86]
  417a13:	xchg   ebx,eax
  417a14:	dec    ecx
  417a15:	inc    edx
  417a16:	popa   
  417a17:	ja     0x417a8e
  417a19:	jns    0x417a03
  417a1b:	arpl   si,bp
  417a1d:	push   0xda43cca3
  417a22:	aam    0xe3
  417a24:	out    dx,eax
  417a25:	repz fsubr DWORD PTR [ebp+edx*1-0x2bb6b86a]
  417a2d:	out    dx,eax
  417a2e:	fwait
  417a2f:	push   ecx
  417a30:	adc    eax,0x2201c45c
  417a35:	(bad)  
  417a36:	xchg   ecx,eax
  417a37:	pop    ds
  417a38:	mov    ecx,0x320b51fa
  417a3d:	xchg   DWORD PTR [ebx-0x60],eax
  417a40:	dec    edx
  417a41:	sti    
  417a42:	jns    0x4179d0
  417a44:	lods   eax,DWORD PTR ds:[esi]
  417a45:	inc    ebp
  417a46:	inc    esi
  417a47:	(bad)  
  417a48:	sbb    DWORD PTR [ebx+eiz*8+0x16],ebx
  417a4c:	lock push cs
  417a4e:	push   ebx
  417a4f:	stos   BYTE PTR es:[edi],al
  417a50:	iret   
  417a51:	mov    esi,DWORD PTR [edi+0x79b6d1b9]
  417a57:	push   cs
  417a58:	mov    edi,0x828072cd
  417a5d:	xchg   ecx,eax
  417a5e:	aaa    
  417a5f:	(bad)  [ecx]
  417a61:	push   0x2e5c4bc9
  417a66:	int    0x22
  417a68:	jo     0x417a8a
  417a6a:	(bad)  
  417a6b:	fs sub al,0x9e
  417a6e:	jp     0x417ad5
  417a70:	jg     0x417a91
  417a72:	or     al,0x11
  417a74:	mov    ch,0xbc
  417a76:	pop    esp
  417a77:	jns    0x417ae3
  417a79:	inc    ebx
  417a7a:	mov    eax,0xe9405c2e
  417a7f:	inc    ecx
  417a80:	mov    al,BYTE PTR [edx]
  417a82:	test   al,0x16
  417a84:	or     dl,ch
  417a86:	aad    0xd1
  417a88:	mov    al,ds:0xb5588fb3
  417a8d:	ds push ebp
  417a8f:	(bad)  
  417a91:	test   BYTE PTR [edi],0x53
  417a94:	push   eax
  417a95:	mov    cl,dh
  417a97:	call   0xd0a1a680
  417a9c:	push   ebx
  417a9d:	imul   edi,DWORD PTR [edi],0x356fd6b1
  417aa3:	mov    DWORD PTR [esi+edx*4-0x4aee5190],edi
  417aaa:	pop    esi
  417aab:	rcl    DWORD PTR [edi+esi*1+0x5c692d87],1
  417ab2:	dec    esp
  417ab3:	retf   
  417ab4:	stos   DWORD PTR es:[edi],eax
  417ab5:	out    dx,al
  417ab6:	aaa    
  417ab7:	cwde   
  417ab8:	lea    esi,[esi+esi*2+0x3f]
  417abc:	sbb    DWORD PTR gs:[ebp+0x21],ecx
  417ac0:	stos   BYTE PTR es:[edi],al
  417ac1:	lock js 0x417ad1
  417ac4:	cmp    edi,eax
  417ac6:	add    BYTE PTR [edi+0x1460bcda],dh
  417acc:	cmp    al,0x96
  417ace:	ins    BYTE PTR es:[edi],dx
  417acf:	mov    ds:0xd979fa94,eax
  417ad4:	xchg   edx,eax
  417ad5:	das    
  417ad6:	push   edi
  417ad7:	addr16 adc dl,dh
  417ada:	aam    0xfa
  417adc:	in     eax,dx
  417add:	loopne 0x417a7a
  417adf:	dec    esp
  417ae0:	js     0x417b0e
  417ae2:	(bad)  
  417ae3:	(bad)  
  417ae4:	lahf   
  417ae5:	hlt    
  417ae6:	sti    
  417ae7:	sbb    bl,BYTE PTR [ecx-0x182f967]
  417aed:	add    BYTE PTR [ecx-0x3b],bl
  417af0:	add    al,0xbe
  417af2:	adc    ebx,DWORD PTR [ebx+eiz*2+0x43]
  417af6:	push   ds
  417af7:	into   
  417af8:	std    
  417af9:	push   ecx
  417afa:	jnp    0x417b4b
  417afc:	je     0x417b47
  417afe:	cli    
  417aff:	mov    al,ds:0x75ca6c77
  417b04:	stos   DWORD PTR es:[edi],eax
  417b05:	stos   BYTE PTR es:[edi],al
  417b06:	cli    
  417b07:	and    BYTE PTR [ecx+esi*1-0x41],dh
  417b0b:	enter  0x26c9,0x84
  417b0f:	pop    ds
  417b10:	mov    bh,0xd4
  417b12:	dec    esi
  417b13:	jg     0x417b67
  417b15:	ret    
  417b16:	test   DWORD PTR [ecx],edi
  417b18:	inc    ebp
  417b19:	push   esp
  417b1a:	(bad)  
  417b1b:	loope  0x417b01
  417b1d:	xchg   edx,eax
  417b1e:	mov    al,0x63
  417b20:	es adc esi,edi
  417b23:	js     0x417b0f
  417b25:	jnp    0x417b44
  417b27:	and    al,al
  417b29:	mov    ds:0xf3daf812,eax
  417b2e:	das    
  417b2f:	or     DWORD PTR ds:0xd524cdf8,0x7c
  417b36:	mov    ch,0x21
  417b38:	push   0x8
  417b3a:	das    
  417b3b:	sub    eax,0x2c1f874
  417b40:	adc    ah,BYTE PTR [esi]
  417b42:	mov    ecx,0xee98543
  417b47:	sti    
  417b48:	cwd    
  417b4a:	add    al,0x5d
  417b4c:	pop    ds
  417b4d:	or     bh,ah
  417b4f:	test   eax,0x869caad4
  417b54:	cwde   
  417b55:	pop    ebp
  417b56:	lods   al,BYTE PTR ds:[esi]
  417b57:	mov    DWORD PTR [ecx+0x2f],ecx
  417b5a:	fs xor al,0x4f
  417b5d:	test   ecx,esi
  417b5f:	or     al,0x58
  417b61:	jp     0x417b04
  417b63:	and    al,0x33
  417b65:	push   ecx
  417b66:	xor    BYTE PTR [esi-0x19b3daf2],bh
  417b6c:	sbb    eax,0x6c
  417b6f:	stc    
  417b70:	pop    ds
  417b71:	bound  edx,QWORD PTR [ebx-0x77ceda6e]
  417b77:	adc    eax,0x87260f5d
  417b7c:	aas    
  417b7d:	pushf  
  417b7e:	and    dh,BYTE PTR [edi+eax*4]
  417b81:	les    edi,FWORD PTR [esi+0x3e1bf437]
  417b87:	shl    dl,1
  417b89:	nop    DWORD PTR [edi-0x6a]
  417b8d:	pop    esi
  417b8e:	inc    eax
  417b8f:	push   edx
  417b90:	inc    eax
  417b91:	inc    esp
  417b92:	scas   al,BYTE PTR es:[edi]
  417b93:	push   edi
  417b94:	mov    esi,0xb3292212
  417b99:	fstp   DWORD PTR [eax]
  417b9b:	cli    
  417b9c:	cdq    
  417b9d:	jg     0x417bb1
  417b9f:	mov    esi,0x73bd76be
  417ba4:	dec    esi
  417ba5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417ba6:	sub    cl,BYTE PTR [eax-0x10750f03]
  417bac:	add    DWORD PTR [ecx-0x5c],esp
  417baf:	and    BYTE PTR [ecx],al
  417bb1:	adc    al,0x30
  417bb3:	push   ecx
  417bb4:	arpl   WORD PTR [ebx-0x79],si
  417bb7:	stos   DWORD PTR es:[edi],eax
  417bb8:	iret   
  417bb9:	js     0x417bc5
  417bbb:	mov    eax,0xf55557ae
  417bc0:	int    0xf8
  417bc2:	mov    ebx,0xf973d4e5
  417bc7:	mov    ebx,0x436176a3
  417bcc:	jmp    0x417b5f
  417bce:	xchg   edx,eax
  417bcf:	mul    dh
  417bd1:	or     DWORD PTR [esi+0x2ae3a9c7],edi
  417bd7:	lds    esi,FWORD PTR [ebx+esi*4+0x720b155c]
  417bde:	int    0xd3
  417be0:	sbb    ebp,DWORD PTR [eax-0x40ac5893]
  417be6:	int    0x20
  417be8:	mov    bl,0x50
  417bea:	dec    eax
  417beb:	cmp    DWORD PTR [edi+ecx*2-0x44],edi
  417bef:	sub    cl,cl
  417bf1:	das    
  417bf2:	push   esi
  417bf3:	and    DWORD PTR [eax],0xffffffa4
  417bf6:	jl     0x417b9f
  417bf8:	xor    ebx,esp
  417bfa:	out    0x59,al
  417bfc:	stc    
  417bfd:	and    bh,BYTE PTR [ecx+eiz*8-0x1a1a264a]
  417c04:	sub    cl,BYTE PTR [eax]
  417c06:	fstp   TBYTE PTR [edx-0x68]
  417c09:	add    eax,0xb0bb50cc
  417c0e:	dec    ebp
  417c0f:	test   DWORD PTR [ecx+edi*8+0x321b7c42],esi
  417c16:	pop    esi
  417c17:	popf   
  417c18:	mov    bl,0xab
  417c1a:	inc    ebp
  417c1b:	call   0x5925:0x51e7cd32
  417c22:	cmp    edx,DWORD PTR [edx+eiz*2-0x318b2eca]
  417c29:	jnp    0x417c4d
  417c2b:	sar    DWORD PTR [ecx],0xc4
  417c2e:	addr16 dec esp
  417c30:	dec    ebp
  417c31:	sbb    eax,0x2b9a41b5
  417c36:	inc    edx
  417c37:	and    bl,BYTE PTR [esi+0x7d]
  417c3a:	cmp    DWORD PTR [ecx+0x4fde4a3d],esi
  417c40:	clc    
  417c41:	sahf   
  417c42:	push   ebp
  417c43:	arpl   WORD PTR [edi+0x42],dx
  417c46:	fmul   QWORD PTR [esi+0x20b2558d]
  417c4c:	push   edx
  417c4d:	in     eax,0x2f
  417c4f:	dec    ebx
  417c50:	addr16 inc ecx
  417c52:	hlt    
  417c53:	scas   al,BYTE PTR es:[edi]
  417c54:	xor    BYTE PTR ds:0x8811a492,dl
  417c5a:	xchg   esi,eax
  417c5b:	push   ebp
  417c5c:	jnp    0x417c33
  417c5e:	outs   dx,BYTE PTR ds:[esi]
  417c5f:	and    al,0x11
  417c61:	cmp    al,0x6c
  417c63:	pop    es
  417c64:	mov    edi,DWORD PTR [ecx+0x67]
  417c67:	ror    BYTE PTR [ebx+ebp*1-0x78551319],1
  417c6e:	fnstsw WORD PTR [edi-0x7e33db96]
  417c74:	pop    ebx
  417c75:	test   eax,0xa95bc184
  417c7a:	out    0xa9,eax
  417c7c:	arpl   bp,bp
  417c7e:	cmc    
  417c7f:	fsub   QWORD PTR [ebx+0x65]
  417c82:	jecxz  0x417c8e
  417c84:	push   esp
  417c85:	rcl    BYTE PTR [ebp-0x6e],cl
  417c88:	shr    DWORD PTR [ecx-0x7],0xa2
  417c8c:	dec    edx
  417c8d:	stos   BYTE PTR es:[edi],al
  417c8e:	sbb    BYTE PTR [edi],al
  417c90:	pop    es
  417c91:	push   cs
  417c92:	cmp    bl,0x83
  417c95:	popa   
  417c96:	test   eax,0x2632e896
  417c9b:	sbb    eax,0xce5add98
  417ca0:	and    DWORD PTR [edx-0x69],0x2b5e683c
  417ca7:	or     BYTE PTR [esi],dl
  417ca9:	sub    DWORD PTR [edi+0x65aba5b5],edi
  417caf:	loop   0x417ca5
  417cb1:	xor    esi,DWORD PTR [ebp*1+0x48ff666a]
  417cb8:	push   0x24
  417cba:	xchg   DWORD PTR [eax+eax*8-0x7c4e9d83],ebx
  417cc1:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417cc3:	pop    ss
  417cc4:	stc    
  417cc5:	rcl    esi,0x11
  417cc8:	popf   
  417cc9:	mov    cl,0xd1
  417ccb:	jp     0x417d1a
  417ccd:	jnp    0x417c8d
  417ccf:	or     DWORD PTR [edx],esi
  417cd1:	sti    
  417cd2:	outs   dx,DWORD PTR ds:[esi]
  417cd3:	xchg   edi,eax
  417cd4:	add    ecx,esi
  417cd6:	push   edi
  417cd7:	dec    ecx
  417cd8:	aad    0x52
  417cda:	jmp    0x417d34
  417cdc:	fadd   QWORD PTR [edx]
  417cde:	fstp   DWORD PTR [eax-0x1abce665]
  417ce4:	sti    
  417ce5:	jmp    0x417d21
  417ce7:	sbb    DWORD PTR [ebp+0x4347b0dc],0x4a2eb50c
  417cf1:	js     0x417cfd
  417cf3:	xchg   ebp,eax
  417cf4:	pop    ecx
  417cf5:	rol    DWORD PTR [eax+ebp*4+0x21],0x45
  417cfa:	mov    bl,0x60
  417cfc:	add    eax,0x9e62842d
  417d01:	(bad)  [edi+0x1f6f03f5]
  417d07:	and    ah,dh
  417d09:	push   cs
  417d0a:	stos   BYTE PTR es:[edi],al
  417d0b:	jle    0x417d25
  417d0d:	inc    ebx
  417d0e:	add    eax,0x14923ea
  417d13:	sub    DWORD PTR [ebx+ecx*8-0x3f],ebp
  417d17:	into   
  417d18:	das    
  417d19:	test   eax,0xd2fb7870
  417d1e:	xchg   esi,eax
  417d1f:	xor    BYTE PTR [ebp+0x6],ah
  417d22:	pop    edi
  417d23:	mov    ecx,ecx
  417d25:	pop    ss
  417d26:	mov    edx,DWORD PTR [ebp+0x40]
  417d29:	cld    
  417d2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417d2b:	pop    ebx
  417d2c:	gs mov ebx,0x1a4ec226
  417d33:	add    DWORD PTR [ebx+edx*1+0x51],0x328089de
  417d3b:	or     ah,bh
  417d3d:	hlt    
  417d3e:	in     eax,dx
  417d3f:	(bad)  
  417d40:	aaa    
  417d41:	sub    ebx,ebp
  417d43:	pusha  
  417d44:	xor    BYTE PTR [edx],bl
  417d46:	ins    DWORD PTR es:[edi],dx
  417d47:	add    bh,BYTE PTR [ebx]
  417d49:	scas   eax,DWORD PTR es:[edi]
  417d4a:	(bad)  
  417d4b:	cdq    
  417d4c:	mov    ebx,0xe882bac5
  417d51:	rol    DWORD PTR [edx+ebx*4],0xbb
  417d55:	lds    esp,FWORD PTR [ebp-0x39]
  417d58:	pop    ebp
  417d59:	jg     0x417cf6
  417d5b:	sub    dh,bl
  417d5d:	jo     0x417d8f
  417d5f:	adc    eax,0xef84456b
  417d64:	loop   0x417d49
  417d66:	push   0x4c60702f
  417d6b:	push   ds
  417d6c:	bound  esp,QWORD PTR [edi+0x54]
  417d6f:	mov    edx,esi
  417d71:	in     eax,0xb7
  417d73:	std    
  417d74:	sbb    dh,al
  417d76:	jle    0x417daa
  417d78:	push   ds
  417d79:	jl     0x417d0c
  417d7b:	pop    esp
  417d7c:	jle    0x417de6
  417d7e:	and    BYTE PTR [eax],al
  417d80:	xchg   ecx,eax
  417d81:	push   0x32
  417d83:	ret    0xb206
  417d86:	add    dh,bl
  417d88:	mov    eax,0xd9e509dc
  417d8d:	push   eax
  417d8e:	sar    cl,cl
  417d90:	mov    eax,0x19fe0dc4
  417d95:	into   
  417d96:	ins    DWORD PTR es:[edi],dx
  417d97:	adc    al,bh
  417d99:	xchg   esp,eax
  417d9a:	push   eax
  417d9b:	cmp    BYTE PTR [edi*2+0x7fa2f219],cl
  417da2:	or     edi,DWORD PTR [esi]
  417da4:	int    0xfe
  417da6:	and    BYTE PTR [edi-0x2e61e603],dh
  417dac:	push   es
  417dad:	mov    bh,BYTE PTR ds:0xd21ba6a4
  417db3:	adc    BYTE PTR [esi+0x75],al
  417db6:	sahf   
  417db7:	(bad)  
  417db8:	dec    esi
  417db9:	not    DWORD PTR [ecx+eax*8]
  417dbc:	out    dx,al
  417dbd:	(bad)  
  417dbe:	es mov bl,0xec
  417dc1:	test   al,0x51
  417dc3:	mov    ds:0xa9cf720e,al
  417dc8:	repz jg 0x417e12
  417dcb:	stos   BYTE PTR es:[edi],al
  417dcc:	or     eax,0xbbce7fb0
  417dd1:	out    0x40,eax
  417dd3:	iret   
  417dd4:	lahf   
  417dd5:	call   0xd8a5:0xcb333f06
  417ddc:	imul   edi,DWORD PTR [ebx+0x404e4f98],0x42
  417de3:	push   edx
  417de4:	stos   DWORD PTR es:[edi],eax
  417de5:	sbb    al,BYTE PTR [edi-0x1d]
  417de8:	jno    0x417e09
  417dea:	fs dec ebp
  417dec:	inc    ebp
  417ded:	inc    edi
  417dee:	sub    ebp,eax
  417df0:	les    eax,FWORD PTR [esi]
  417df2:	imul   edx,DWORD PTR [ebp+0x50],0xfffffffe
  417df6:	(bad)  
  417df7:	lea    ebp,[ebx]
  417df9:	test   al,dl
  417dfb:	dec    esp
  417dfc:	stc    
  417dfd:	push   esp
  417dfe:	pop    ecx
  417dff:	xchg   ebx,eax
  417e00:	and    DWORD PTR [esi-0x10],ebx
  417e03:	cmp    esi,edi
  417e05:	xchg   edi,eax
  417e06:	and    ebx,DWORD PTR [ebx-0x7d454849]
  417e0c:	cmp    edi,eax
  417e0e:	xchg   ecx,eax
  417e0f:	mov    edx,edi
  417e11:	(bad)  
  417e12:	xchg   esp,eax
  417e13:	std    
  417e14:	lods   eax,DWORD PTR ds:[esi]
  417e15:	mov    ebx,0x78a13055
  417e1a:	pop    es
  417e1b:	rcr    BYTE PTR [edx-0x2e9f56b8],cl
  417e21:	dec    ebp
  417e22:	mov    al,0x85
  417e24:	lods   eax,DWORD PTR ds:[esi]
  417e25:	cld    
  417e26:	and    eax,0xe614e7df
  417e2c:	iret   
  417e2d:	mov    al,0x7b
  417e2f:	push   edx
  417e30:	jb     0x417dd6
  417e32:	test   BYTE PTR [eax],ah
  417e34:	lods   al,BYTE PTR ds:[esi]
  417e35:	pop    esi
  417e36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417e37:	out    dx,al
  417e38:	inc    esi
  417e39:	mov    edx,DWORD PTR [eax+0x5dfe1bbb]
  417e3f:	jecxz  0x417df9
  417e41:	outs   dx,BYTE PTR ds:[esi]
  417e42:	xchg   bh,cl
  417e44:	add    eax,0xc3b30c43
  417e49:	out    0xfb,eax
  417e4b:	jle    0x417e51
  417e4d:	dec    ecx
  417e4e:	ins    BYTE PTR es:[edi],dx
  417e4f:	dec    eax
  417e50:	xchg   esi,esp
  417e52:	push   ebp
  417e53:	repnz mov eax,0x63c0fdc6
  417e59:	inc    ecx
  417e5a:	(bad)  
  417e5b:	in     eax,dx
  417e5c:	xchg   ebp,eax
  417e5d:	lahf   
  417e5e:	popf   
  417e5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417e60:	push   ss
  417e61:	xchg   esi,eax
  417e62:	mov    eax,ds:0x4c14b93d
  417e67:	fiadd  DWORD PTR [ecx+0x2dd1c619]
  417e6d:	push   es
  417e6e:	sbb    al,0x6e
  417e70:	test   ecx,esp
  417e72:	mov    eax,0x1709dadc
  417e77:	pop    edx
  417e78:	sub    BYTE PTR [esi],ah
  417e7a:	mov    gs,WORD PTR [edx+eiz*2]
  417e7d:	mov    ecx,0x263b8f7e
  417e82:	loope  0x417e75
  417e84:	ror    edx,0x81
  417e87:	mov    fs:0x2c15027c,eax
  417e8d:	lock loope 0x417ef6
  417e90:	mov    ecx,0x11456b0c
  417e95:	mov    esp,0x8036c3d8
  417e9a:	add    al,0x2a
  417e9c:	call   0xf6e6:0x14b105b
  417ea3:	pushf  
  417ea4:	inc    ebp
  417ea5:	fwait
  417ea6:	in     al,0xce
  417ea8:	fmul   DWORD PTR [eax+0x7400]
  417eae:	add    BYTE PTR [eax],al
  417eb0:	add    BYTE PTR [eax],al
  417eb2:	ret    0x939e
  417eb5:	inc    edi
  417eb6:	fisttp WORD PTR [edi-0x2a]
  417eb9:	lahf   
  417eba:	int    0x45
  417ebc:	push   eax
  417ebd:	psllw  mm6,0x76
  417ec1:	mov    bh,0x9
  417ec3:	cld    
  417ec4:	add    BYTE PTR [eax],al
  417ec6:	repnz add al,0x0
  417ec9:	add    BYTE PTR [ebx-0x3c],cl
  417ecc:	aam    0x86
  417ece:	or     ebx,DWORD PTR [eax]
  417ed0:	mov    ds:0x4c474dbc,al
  417ed5:	ret    
  417ed6:	fidivr WORD PTR [edx-0x760fbebd]
  417edc:	mov    cl,0x17
  417ede:	ret    
  417edf:	rcl    DWORD PTR [esi+0x31e5cf37],cl
  417ee5:	not    DWORD PTR [edx+0x108657fc]
  417eeb:	mov    ds:0x40c0aa97,al
  417ef0:	gs repnz cmp eax,0x83ff8d00
  417ef7:	test   eax,0xdac04975
  417efc:	inc    esi
  417efd:	lods   eax,DWORD PTR ds:[esi]
  417efe:	sbb    eax,DWORD PTR [ecx]
  417f00:	js     0x417f70
  417f02:	xlat   BYTE PTR ds:[ebx]
  417f03:	jb     0xc2303d0c
  417f09:	xor    bh,BYTE PTR [ebp-0x420f0438]
  417f0f:	ret    
  417f10:	aam    0x4b
  417f12:	xchg   edi,eax
  417f13:	popa   
  417f14:	mov    ah,0x83
  417f16:	mov    bl,0x54
  417f18:	fwait
  417f19:	mov    bl,0x90
  417f1b:	(bad)  
  417f1c:	(bad)  
  417f1e:	xor    edx,DWORD PTR [esi+0x1f73ee2d]
  417f24:	push   ss
  417f25:	and    BYTE PTR [esi-0x3a],bh
  417f28:	xchg   esi,eax
  417f29:	push   ebp
  417f2a:	and    al,0xff
  417f2c:	pop    eax
  417f2d:	nop
  417f2e:	sub    ebp,DWORD PTR [ecx+eiz*8-0x18]
  417f32:	push   ebp
  417f33:	arpl   WORD PTR [eax],di
  417f35:	gs jbe 0x417f80
  417f38:	jecxz  0x417f5a
  417f3a:	adc    edi,DWORD PTR [eax]
  417f3c:	and    eax,0x21b64802
  417f41:	fmulp  st(3),st
  417f43:	jle    0x417f68
  417f45:	dec    edi
  417f46:	add    eax,0xf512ea36
  417f4b:	imul   eax,edi,0xffffffce
  417f4e:	adc    edi,DWORD PTR [esi+0x2ce26132]
  417f54:	call   0xa7f8:0x98aaafe8
  417f5b:	scas   al,BYTE PTR es:[edi]
  417f5c:	add    DWORD PTR [edx-0x4a],0x66
  417f60:	fidivr DWORD PTR [ebx-0x26]
  417f63:	push   0xc92a2b76
  417f68:	cs push ecx
  417f6a:	test   DWORD PTR [edi+edi*8],ebp
  417f6d:	out    0x72,eax
  417f6f:	or     al,BYTE PTR [esi-0x44]
  417f72:	pop    ebx
  417f73:	xor    bl,BYTE PTR [ebx+0x7b]
  417f76:	push   eax
  417f77:	shl    dl,cl
  417f79:	or     eax,0x2b89926f
  417f7e:	lahf   
  417f7f:	xor    ebx,DWORD PTR ds:0xe20962dd
  417f85:	xchg   ecx,eax
  417f86:	inc    edx
  417f87:	aaa    
  417f88:	aad    0x90
  417f8a:	jae    0x417ffc
  417f8c:	sub    BYTE PTR [edx+esi*8],al
  417f8f:	mov    bh,BYTE PTR [edx+0x14]
  417f92:	sub    ebx,DWORD PTR [eax]
  417f94:	add    eax,esp
  417f96:	lods   al,BYTE PTR ds:[esi]
  417f97:	sbb    bh,BYTE PTR ds:0xff725f1f
  417f9d:	jmp    0x5e38e836
  417fa2:	outs   dx,BYTE PTR ds:[esi]
  417fa3:	push   esp
  417fa4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417fa5:	mov    ds:0x3182a94d,eax
  417faa:	out    dx,al
  417fab:	or     dl,dl
  417fad:	jp     0x41800b
  417faf:	ins    DWORD PTR es:[edi],dx
  417fb0:	out    dx,al
  417fb1:	faddp  st(1),st
  417fb3:	ins    DWORD PTR es:[edi],dx
  417fb4:	shl    BYTE PTR [ebp+0x41669612],1
  417fba:	jmp    0x418021
  417fbc:	add    eax,0x3ce2a985
  417fc1:	sub    BYTE PTR [eax],dl
  417fc3:	test   BYTE PTR [ebx-0x1115d1d0],ah
  417fc9:	leave  
  417fca:	call   0xb9fabaa7
  417fcf:	loope  0x418001
  417fd1:	jmp    0x1c2eda7
  417fd6:	add    BYTE PTR [edi+0x1d],bl
  417fd9:	mov    bh,0xd5
  417fdb:	and    al,0x21
  417fdd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417fde:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417fdf:	xor    eax,0xfcb2dad4
  417fe4:	or     ebx,DWORD PTR [ecx-0xf]
  417fe7:	lods   al,BYTE PTR ds:[esi]
  417fe8:	pop    edi
  417fe9:	in     eax,0x6b
  417feb:	cmp    cl,BYTE PTR [ecx]
  417fed:	jmp    0x9264:0x2ad89868
  417ff4:	sbb    al,0x68
  417ff6:	dec    eax
  417ff7:	es scas al,BYTE PTR es:[edi]
  417ff9:	jo     0x417ffe
  417ffb:	das    
  417ffc:	sbb    eax,0x136ebf63
  418001:	jecxz  0x418037
  418003:	retfw  0x24f3
  418007:	stos   BYTE PTR es:[edi],al
  418008:	cld    
  418009:	test   al,0x5b
  41800b:	test   eax,0x3534e840
  418010:	inc    edi
  418011:	xchg   ebx,eax
  418012:	into   
  418013:	mov    al,0x1d
  418015:	mov    ch,0x8c
  418017:	int    0x20
  418019:	loop   0x418094
  41801b:	test   BYTE PTR [ebx-0x1b],dh
  41801e:	mov    edi,0x390eb566
  418023:	pop    ds
  418024:	ss xor al,0xed
  418027:	stc    
  418028:	jge    0x417fea
  41802a:	addr16 cdq 
  41802c:	call   0x78fe:0x5eb22a93
  418033:	test   DWORD PTR [ebx],ecx
  418035:	xchg   ebp,eax
  418036:	mov    esi,0xed4da1a1
  41803b:	aam    0x36
  41803d:	loope  0x417ffa
  41803f:	sbb    ecx,esi
  418041:	and    DWORD PTR [eax+0x48849386],ebp
  418047:	das    
  418048:	or     al,0xcc
  41804a:	shr    eax,1
  41804c:	mov    dh,0x43
  41804e:	dec    ecx
  41804f:	cdq    
  418050:	sbb    dl,BYTE PTR [eax+0x63d33fc3]
  418056:	xchg   DWORD PTR [ecx-0x2c93ff50],esp
  41805c:	mov    BYTE PTR [esi],ch
  41805e:	push   0x2b
  418060:	push   cs
  418061:	dec    esi
  418062:	push   0xffffffbe
  418064:	push   esp
  418065:	mov    eax,ds:0x7ad754c7
  41806a:	dec    edi
  41806b:	cmp    eax,0xffaa12cf
  418070:	call   0x1c08771c
  418075:	jmp    0x4c771b09
  41807a:	sub    al,0x52
  41807c:	scas   eax,DWORD PTR es:[edi]
  41807d:	push   edi
  41807e:	adc    al,0x1
  418080:	scas   eax,DWORD PTR es:[edi]
  418081:	(bad)  
  418082:	int3   
  418083:	mov    ebx,0xfd25b81d
  418088:	nop
  418089:	or     al,0x80
  41808b:	inc    edi
  41808c:	add    DWORD PTR ds:0x2b9a3196,edi
  418092:	push   esp
  418093:	mov    esi,0x2fcaf801
  418098:	int3   
  418099:	cwde   
  41809a:	push   ds
  41809b:	jb     0x41805d
  41809d:	jl     0x4180fc
  41809f:	sub    BYTE PTR [edx-0x49],al
  4180a2:	pop    es
  4180a3:	jp     0x4180cd
  4180a5:	int3   
  4180a6:	pop    edx
  4180a7:	pop    esp
  4180a8:	mov    cl,0x3c
  4180aa:	(bad)  
  4180ab:	mov    ah,0x79
  4180ad:	inc    edi
  4180ae:	leave  
  4180af:	fwait
  4180b0:	repnz cmp ebp,DWORD PTR [ecx+ebp*8+0x5a]
  4180b5:	je     0x41805b
  4180b7:	xchg   ecx,eax
  4180b8:	js     0x4180e3
  4180ba:	lods   eax,DWORD PTR ds:[esi]
  4180bb:	xchg   edi,eax
  4180bc:	mov    ds:0xf1932bd8,al
  4180c1:	and    al,0x45
  4180c3:	add    bl,BYTE PTR [edi]
  4180c5:	xchg   ebx,eax
  4180c6:	pop    ecx
  4180c7:	mov    bl,0xa
  4180c9:	mov    ch,0xf8
  4180cb:	pop    edx
  4180cc:	mov    ebx,0xfaee8c40
  4180d1:	add    dh,BYTE PTR [esi]
  4180d3:	rol    BYTE PTR [esi],1
  4180d5:	iret   
  4180d6:	test   BYTE PTR [edx],dh
  4180d8:	into   
  4180d9:	mov    cl,0xfe
  4180db:	or     dl,bh
  4180dd:	in     eax,dx
  4180de:	jmp    0xd030b4a0
  4180e3:	xchg   esp,eax
  4180e4:	in     eax,0x1e
  4180e6:	pop    esp
  4180e7:	inc    esi
  4180e8:	lock jo 0x4180fd
  4180eb:	and    edi,edi
  4180ed:	xor    ebx,DWORD PTR [ecx]
  4180ef:	inc    eax
  4180f0:	pushf  
  4180f1:	jge    0x418168
  4180f3:	mov    esp,0xa0488dd
  4180f8:	loope  0x418159
  4180fa:	adc    ebp,DWORD PTR [edi]
  4180fc:	pop    edi
  4180fd:	push   cs
  4180fe:	out    0x54,al
  418100:	adc    WORD PTR [ecx+0x6c],si
  418104:	push   ds
  418105:	scas   eax,DWORD PTR es:[edi]
  418106:	dec    eax
  418107:	mov    ebp,0x7fc5181b
  41810c:	enter  0x1b86,0xc3
  418110:	adc    ah,bl
  418112:	or     esp,0x5ba6d7a1
  418118:	js     0x418132
  41811a:	call   0x4607897
  41811f:	je     0x41812b
  418121:	or     esp,ecx
  418123:	ss ret 
  418125:	inc    esp
  418126:	hlt    
  418127:	(bad)  
  418128:	pop    esp
  418129:	push   edi
  41812a:	add    al,0x37
  41812c:	sbb    BYTE PTR [esi-0x4eb3feb0],ah
  418132:	dec    esi
  418133:	adc    al,0x2e
  418135:	xchg   esp,eax
  418136:	in     al,dx
  418137:	push   cs
  418138:	aas    
  418139:	jb     0x4180da
  41813b:	fisttp QWORD PTR [ebp-0x10]
  41813e:	or     al,0x62
  418140:	aas    
  418141:	xor    ecx,DWORD PTR [eax]
  418143:	je     0x418171
  418145:	push   es
  418146:	gs mov edx,0xbc5fff6b
  41814c:	in     al,dx
  41814d:	lods   eax,DWORD PTR ds:[esi]
  41814e:	pop    edx
  41814f:	in     eax,0x88
  418151:	jae    0x4181b4
  418153:	in     eax,0x3c
  418155:	aad    0x12
  418157:	icebp  
  418158:	in     al,0x9c
  41815a:	cmc    
  41815b:	rcl    BYTE PTR [edi-0x6c],cl
  41815e:	inc    ebx
  41815f:	xchg   ebp,eax
  418160:	js     0x4181d1
  418162:	xchg   esp,eax
  418163:	dec    esi
  418164:	and    al,0xbe
  418166:	loop   0x41818a
  418168:	push   edx
  418169:	sbb    esi,edi
  41816b:	je     0x418143
  41816d:	stc    
  41816e:	sbb    BYTE PTR [edx],dl
  418170:	test   DWORD PTR [esi-0x24e2cc4e],ebx
  418176:	int    0x35
  418178:	aaa    
  418179:	xor    BYTE PTR [esi+0x5ca14463],al
  41817f:	and    eax,0x2f5949a6
  418184:	fdiv   st,st(2)
  418186:	sub    ah,bl
  418188:	mov    ebx,0x7edd3073
  41818d:	outs   dx,DWORD PTR ds:[esi]
  41818e:	fucomp st(7)
  418190:	dec    eax
  418191:	fnsave [eax+0x73740248]
  418197:	inc    edi
  418198:	ficom  DWORD PTR [ecx+0xf]
  41819b:	mov    ah,0xf6
  41819d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41819e:	push   ss
  41819f:	xchg   ch,bh
  4181a1:	push   cs
  4181a2:	fdiv   DWORD PTR [ecx+0x415bd6ca]
  4181a8:	gs not esi
  4181ab:	push   0xffffffa1
  4181ad:	(bad)  
  4181ae:	not    BYTE PTR [esi]
  4181b0:	dec    DWORD PTR [ebx-0x5b8575ff]
  4181b6:	hlt    
  4181b7:	or     bl,BYTE PTR [ebp-0x1ced60c4]
  4181bd:	xlat   BYTE PTR ds:[ebx]
  4181be:	sub    dh,cl
  4181c0:	loope  0x4181a8
  4181c2:	jle    0x4181f8
  4181c4:	or     dh,BYTE PTR [eax]
  4181c6:	frstor [esi+0x2d430680]
  4181cc:	cmp    dh,BYTE PTR [ebx-0x17]
  4181cf:	test   DWORD PTR [edx],esi
  4181d1:	int    0x54
  4181d3:	lods   al,BYTE PTR ds:[esi]
  4181d4:	mov    eax,ds:0x253aa2ca
  4181d9:	rol    al,cl
  4181db:	es (bad) 
  4181dd:	iret   
  4181de:	mov    DWORD PTR [eax+0x68],edx
  4181e1:	mov    bh,bl
  4181e3:	cdq    
  4181e4:	pushf  
  4181e5:	jge    0x41819d
  4181e7:	push   edi
  4181e8:	push   ds
  4181e9:	mov    ebx,0x453e94b7
  4181ee:	pusha  
  4181ef:	xor    al,0xc7
  4181f1:	or     dh,BYTE PTR [eax+0x9516960]
  4181f7:	dec    eax
  4181f8:	sbb    eax,0xcb352a34
  4181fd:	imul   esp,DWORD PTR [eax+0xa9d72e8],0xe482e22a
  418207:	inc    edx
  418208:	gs aas 
  41820a:	mov    bl,0xb6
  41820c:	(bad)  
  41820e:	in     al,dx
  41820f:	cmp    bl,dl
  418211:	fmul   DWORD PTR [ecx+0x38]
  418214:	clc    
  418215:	inc    esp
  418216:	mov    esp,0x1cce2cb7
  41821b:	jmp    0xfdc9dc84
  418220:	out    0x18,eax
  418222:	scas   eax,DWORD PTR es:[edi]
  418223:	test   al,0x49
  418225:	inc    esp
  418226:	xchg   DWORD PTR ds:[edi+0x1ee41b89],ecx
  41822d:	into   
  41822e:	inc    ecx
  41822f:	int    0x5b
  418231:	sar    DWORD PTR [eax+0x2c],0x1f
  418235:	dec    esp
  418236:	xor    DWORD PTR [esi],eax
  418238:	sar    BYTE PTR [edx+0x2c6d8d19],1
  41823e:	out    dx,al
  41823f:	aaa    
  418240:	(bad)  
  418241:	aam    0x2
  418243:	xchg   edi,eax
  418244:	mov    ch,0xb4
  418246:	and    eax,0x2fcb5c46
  41824b:	sbb    BYTE PTR [ecx+0x26f79347],0xef
  418252:	ror    BYTE PTR [eax-0x533b2be9],cl
  418258:	cmp    al,0xd7
  41825a:	xor    eax,0x18bd2b00
  41825f:	mov    dh,al
  418261:	jl     0x4182b8
  418263:	inc    esp
  418264:	mov    edi,0xf18a471b
  418269:	pop    edi
  41826a:	dec    esi
  41826b:	push   edi
  41826c:	cwde   
  41826d:	xor    dh,BYTE PTR [eax]
  41826f:	push   edi
  418270:	xchg   ebp,eax
  418271:	add    eax,0x83b1ebec
  418276:	sbb    DWORD PTR [esi],edi
  418278:	outs   dx,BYTE PTR ds:[esi]
  418279:	add    ah,BYTE PTR [ebp+0x5dc590eb]
  41827f:	or     DWORD PTR [edx-0x30efa48b],ecx
  418285:	pop    esi
  418286:	ret    0x92b0
  418289:	test   eax,0x18f15aaa
  41828e:	pushf  
  41828f:	or     DWORD PTR [ecx-0x1e],0x122bda82
  418296:	(bad)  
  418297:	sub    eax,0x44f0e3fc
  41829c:	adc    dl,BYTE PTR [edx]
  41829e:	pop    ebp
  41829f:	sbb    ah,dl
  4182a1:	in     eax,dx
  4182a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4182a3:	adc    DWORD PTR [esi+0xf],ebp
  4182a6:	xor    ah,BYTE PTR [esp+ecx*8+0x7c21f3b]
  4182ad:	xor    ebx,DWORD PTR [esi+0x73]
  4182b0:	mov    bl,dl
  4182b2:	mov    DWORD PTR [ebp+0x3c432013],ecx
  4182b8:	push   ebp
  4182b9:	addr16 mov eax,ds:0xd1bb
  4182bd:	mov    ebp,0xa32c20d4
  4182c2:	call   0x3218:0x3cdf0d79
  4182c9:	jno    0x418347
  4182cb:	jns    0x418346
  4182cd:	(bad)  
  4182ce:	sahf   
  4182cf:	jbe    0x4182df
  4182d1:	ins    DWORD PTR es:[edi],dx
  4182d2:	cmc    
  4182d3:	and    BYTE PTR [edx],ch
  4182d5:	in     eax,0x74
  4182d7:	push   esi
  4182d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4182d9:	push   eax
  4182da:	pop    ss
  4182db:	bound  edx,QWORD PTR [esi+0xa]
  4182de:	mov    edx,0xade24a2f
  4182e3:	mov    WORD PTR [edx],es
  4182e5:	cmc    
  4182e6:	sbb    ebx,DWORD PTR [ebp-0x7ae7fe95]
  4182ec:	cmp    bh,BYTE PTR [edi+ebp*8-0xa]
  4182f0:	out    0xec,eax
  4182f2:	out    dx,al
  4182f3:	sahf   
  4182f4:	jb     0x4182bc
  4182f6:	sbb    al,0x46
  4182f8:	cmp    BYTE PTR ds:0x5a390c9,0x18
  4182ff:	cld    
  418300:	pop    edi
  418301:	pop    esp
  418302:	sub    BYTE PTR [ecx-0xdf6fa21],cl
  418308:	pop    edx
  418309:	dec    edx
  41830a:	push   ecx
  41830b:	add    ch,cl
  41830d:	dec    edi
  41830e:	out    0x48,al
  418310:	jns    0x41832b
  418312:	mov    al,ds:0x57332c61
  418317:	mov    ds:0x965e55c9,al
  41831c:	test   edx,edx
  41831e:	in     al,dx
  41831f:	fidiv  DWORD PTR [eax]
  418321:	hlt    
  418322:	xchg   ebp,eax
  418323:	cmp    bl,dl
  418325:	out    0x86,al
  418327:	mov    edi,0x352e99
  41832c:	add    BYTE PTR [eax+0x5ad3c3fe],ah
  418332:	das    
  418333:	cmp    DWORD PTR [ebx+0x13],esp
  418336:	stc    
  418337:	xor    BYTE PTR [esi],bl
  418339:	(bad)  
  41833a:	popf   
  41833b:	sub    eax,0xc61cc40
  418340:	or     DWORD PTR [edi-0x67],ecx
  418343:	aam    0xc1
  418345:	pop    es
  418346:	mov    cl,0x16
  418348:	stc    
  418349:	fld    TBYTE PTR [ecx+ebx*8]
  41834c:	push   es
  41834d:	xchg   edx,eax
  41834e:	cmp    al,0xa3
  418350:	test   eax,0xd862e5e4
  418355:	xor    al,0xd7
  418357:	leave  
  418358:	popf   
  418359:	repnz retf 
  41835b:	cdq    
  41835c:	and    eax,0x5d6ce555
  418361:	push   edx
  418362:	cs dec esi
  418364:	mov    ds:0xb7b28d71,eax
  418369:	add    DWORD PTR [edx],0x758c7283
  41836f:	imul   ebx,DWORD PTR [eax+0x5],0xffffffe2
  418373:	jle    0x418337
  418375:	outs   dx,BYTE PTR ds:[esi]
  418376:	mov    ds:0xdd0c2625,al
  41837b:	adc    al,bh
  41837d:	sahf   
  41837e:	std    
  41837f:	rol    DWORD PTR [ebx+ecx*4],cl
  418382:	fistp  QWORD PTR [ebp-0x44]
  418385:	imul   eax,eax,0xffffff9e
  418388:	push   esi
  418389:	shl    al,0xb
  41838c:	repz adc ecx,ecx
  41838f:	jb     0x418403
  418391:	or     cl,BYTE PTR [ecx+0x2ea72c98]
  418397:	ficom  WORD PTR [ebp+0x70]
  41839a:	and    ch,dl
  41839c:	dec    edi
  41839d:	imul   ebp,DWORD PTR [ebx-0x54712e4b],0xffffffd4
  4183a4:	daa    
  4183a5:	and    BYTE PTR [ebp-0x66],bh
  4183a8:	rcl    BYTE PTR [edx+0x2995f901],0xef
  4183af:	out    dx,eax
  4183b0:	xchg   edx,eax
  4183b1:	jl     0x4183cc
  4183b3:	dec    ecx
  4183b4:	add    DWORD PTR [ebx-0x4ec7707],ebx
  4183ba:	inc    ebp
  4183bb:	add    DWORD PTR [eax],0x0
  4183c1:	add    BYTE PTR [esi-0x144a9dc3],dl
  4183c7:	call   edi
  4183c9:	aas    
  4183ca:	popa   
  4183cb:	adc    ch,cl
  4183cd:	and    DWORD PTR [eax+0x38],0xffffffb1
  4183d1:	add    eax,0x100fb
  4183d6:	repnz add al,0x0
  4183d9:	add    BYTE PTR [edi],dl
  4183db:	ins    DWORD PTR es:[edi],dx
  4183dc:	cli    
  4183dd:	mov    dh,0xb4
  4183df:	xchg   esi,eax
  4183e0:	pusha  
  4183e1:	mov    al,ds:0xa38a8738
  4183e6:	aam    0x10
  4183e8:	(bad)  
  4183e9:	sahf   
  4183ea:	mov    ch,0xf0
  4183ec:	xchg   ebx,eax
  4183ed:	mov    ecx,0xdcff26fb
  4183f2:	push   esi
  4183f3:	aaa    
  4183f4:	imul   esi,DWORD PTR [esi+ebp*4],0x73
  4183f8:	loopne 0x41839e
  4183fa:	push   eax
  4183fb:	test   DWORD PTR [ecx],ebp
  4183fd:	(bad)
  418400:	mov    cl,0x7e
  418402:	sub    DWORD PTR [esi],ecx
  418404:	inc    esi
  418405:	rol    DWORD PTR [edx*1+0x4aa8500d],cl
  41840c:	std    
  41840d:	clc    
  41840e:	mov    dl,0x15
  418410:	stos   DWORD PTR es:[edi],eax
  418411:	(bad)  
  418412:	scas   eax,DWORD PTR es:[edi]
  418413:	and    DWORD PTR [ebp+edi*2-0x32],esi
  418417:	dec    ebx
  418418:	pop    edi
  418419:	dec    edi
  41841a:	jne    0x41844f
  41841c:	cmc    
  41841d:	push   esp
  41841e:	cmc    
  41841f:	sub    DWORD PTR ds:0x1c0bb3e2,ecx
  418425:	rcr    BYTE PTR [ebp-0x61],1
  418428:	cli    
  418429:	xchg   BYTE PTR ds:0x5a29829e,dh
  41842f:	sbb    dl,BYTE PTR [ebp+0x1e5d1c43]
  418435:	dec    edi
  418436:	fnsave [ebx+0x5a63e6a2]
  41843c:	fiadd  DWORD PTR [edx+0x3]
  41843f:	cwde   
  418440:	and    eax,0x9a6012f1
  418445:	fs sub al,0xde
  418448:	pop    esp
  418449:	jg     0x4183d0
  41844b:	jns    0x41845d
  41844d:	inc    eax
  41844e:	xchg   edx,eax
  41844f:	push   ds
  418450:	test   eax,0xa0c5b250
  418455:	fisttp WORD PTR [eax-0x4c]
  418458:	and    ch,BYTE PTR [ebp+0x36]
  41845b:	aaa    
  41845c:	in     eax,0x85
  41845e:	cld    
  41845f:	fidivr WORD PTR [edx+eiz*2]
  418462:	mov    ds:0x966b243d,al
  418467:	inc    ebp
  418468:	mov    ecx,0x9ba222e1
  41846d:	imul   edi,DWORD PTR [esp+ecx*8-0x4b],0x29
  418472:	mov    esi,0x95211a60
  418477:	xor    al,0xe6
  418479:	sbb    edx,DWORD PTR [edi+0x247af692]
  41847f:	hlt    
  418480:	pop    ecx
  418481:	push   edx
  418482:	sti    
  418483:	push   esp
  418484:	xor    DWORD PTR [edx],0xffffffcb
  418487:	fisttp DWORD PTR [ecx]
  418489:	xchg   esp,eax
  41848a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41848b:	(bad)  
  41848c:	and    BYTE PTR [ebp-0x2084ff61],cl
  418492:	jl     0x418418
  418494:	pop    edi
  418495:	jnp    0x418429
  418497:	enter  0x16ab,0xf4
  41849b:	bound  edx,QWORD PTR [eax-0x38a60a3d]
  4184a1:	cli    
  4184a2:	push   edi
  4184a3:	inc    edi
  4184a4:	inc    edx
  4184a5:	call   0x4961:0x5814c43c
  4184ac:	sbb    BYTE PTR [ebx-0x1efdb292],0x1f
  4184b3:	push   eax
  4184b4:	and    DWORD PTR [ecx],0x7f1d55ea
  4184ba:	sub    ebp,ebx
  4184bc:	or     DWORD PTR [ecx],esp
  4184be:	pop    eax
  4184bf:	jb     0x418497
  4184c1:	scas   eax,DWORD PTR es:[edi]
  4184c2:	cwde   
  4184c3:	iret   
  4184c4:	cmp    eax,0xf620e57b
  4184c9:	pop    esp
  4184ca:	mov    edx,0x26b37670
  4184cf:	and    bh,cl
  4184d1:	pop    edi
  4184d2:	cdq    
  4184d3:	out    0xee,eax
  4184d5:	pop    esi
  4184d6:	xchg   esi,eax
  4184d7:	jmp    0xe01accd5
  4184dc:	cwde   
  4184dd:	mov    BYTE PTR [edi+0x57601142],cl
  4184e3:	jo     0x4184a3
  4184e5:	clc    
  4184e6:	lds    esp,FWORD PTR [ebp+ecx*8+0x54]
  4184ea:	xchg   ebx,eax
  4184eb:	dec    ecx
  4184ec:	cmp    dl,BYTE PTR [edi+0x7ecef02]
  4184f2:	jno    0x4184a5
  4184f4:	inc    eax
  4184f5:	jge    0x4184e2
  4184f7:	sbb    BYTE PTR [eax-0x59],ch
  4184fa:	cmp    DWORD PTR [edx+0x2],edi
  4184fd:	sub    BYTE PTR [ebx+0x593577c0],bl
  418503:	push   0x50
  418505:	cmp    ah,BYTE PTR [edi+0x46]
  418508:	stc    
  418509:	mov    WORD PTR [eax-0x31594ef6],ds
  41850f:	jbe    0x4184bd
  418511:	jnp    0x41851f
  418513:	jbe    0x418561
  418515:	icebp  
  418516:	pushf  
  418517:	sbb    DWORD PTR [edx+0x1],edx
  41851a:	cmp    ah,BYTE PTR [esi+0x11]
  41851d:	mov    BYTE PTR [edx-0x34fb9063],al
  418523:	push   0xffffffd9
  418525:	cmp    DWORD PTR [esi-0x6f37217d],edx
  41852b:	cdq    
  41852c:	jbe    0x4185ab
  41852e:	das    
  41852f:	mov    ss,WORD PTR [ebx-0x17]
  418532:	sahf   
  418533:	outs   dx,DWORD PTR ds:[esi]
  418534:	pop    esi
  418535:	ds leave 
  418537:	sub    DWORD PTR [esi],0x33
  41853a:	add    dl,BYTE PTR [edx-0x4d]
  41853d:	add    BYTE PTR [ebp-0x6d],cl
  418540:	jns    0x418588
  418542:	pop    ebx
  418543:	lods   eax,DWORD PTR ds:[esi]
  418544:	sahf   
  418545:	and    edi,eax
  418547:	xchg   edx,eax
  418548:	mov    dh,0xd1
  41854a:	jge    0x418561
  41854c:	cmp    bl,BYTE PTR [edx-0x2f]
  41854f:	or     BYTE PTR [esi+0x71],al
  418552:	adc    ch,BYTE PTR [esi-0xf]
  418555:	or     DWORD PTR [edi+0x280e8ce1],ecx
  41855b:	jmp    0x4184e4
  41855d:	xlat   BYTE PTR ds:[ebx]
  41855e:	ins    BYTE PTR es:[edi],dx
  41855f:	or     ebx,DWORD PTR [ecx-0x7a]
  418562:	daa    
  418563:	pop    ebx
  418564:	aad    0x28
  418566:	push   esi
  418567:	retf   
  418568:	ins    BYTE PTR es:[edi],dx
  418569:	sub    DWORD PTR [edx],ebp
  41856b:	ds adc esp,0x6bd05218
  418572:	inc    edx
  418573:	test   BYTE PTR [ebp-0x3d],al
  418576:	xor    BYTE PTR gs:[edi-0x68],ch
  41857a:	into   
  41857b:	xchg   ebx,eax
  41857c:	xchg   DWORD PTR [ecx+eiz*2+0x63],esi
  418580:	add    ecx,DWORD PTR [eax+0x298d75c3]
  418586:	and    eax,0x744a4f6e
  41858b:	je     0x41858a
  41858d:	xchg   ebp,eax
  41858e:	mov    eax,ds:0xd3ad8651
  418593:	icebp  
  418594:	inc    ebp
  418595:	ins    DWORD PTR es:[edi],dx
  418596:	icebp  
  418597:	jg     0x4185c5
  418599:	in     eax,0x6
  41859b:	add    eax,0x8abc73d9
  4185a0:	and    bl,cl
  4185a2:	fidivr DWORD PTR [edi]
  4185a4:	jae    0x41852b
  4185a6:	mov    cl,0xf6
  4185a8:	adc    al,0xfb
  4185aa:	adc    DWORD PTR [ebp+eax*1+0x429fc21e],esp
  4185b1:	adc    bl,bl
  4185b3:	das    
  4185b4:	pop    ds
  4185b5:	jmp    0x418603
  4185b7:	inc    ebp
  4185b8:	bound  edi,QWORD PTR [edi-0x4372eaa1]
  4185be:	fimul  WORD PTR [edx]
  4185c0:	fnsave [edx]
  4185c2:	jno    0x4185ae
  4185c4:	pop    ecx
  4185c5:	pop    ebx
  4185c6:	stc    
  4185c7:	mov    ds:0x1305a373,al
  4185cc:	fwait
  4185cd:	outs   dx,DWORD PTR ds:[esi]
  4185ce:	xchg   DWORD PTR [ecx+0x2cf87794],edx
  4185d4:	mov    ch,0x22
  4185d6:	push   esi
  4185d7:	jecxz  0x418611
  4185d9:	jo     0x418588
  4185db:	ficomp DWORD PTR [esi-0x6eab13b0]
  4185e1:	mov    al,ds:0xed2f398f
  4185e6:	imul   edx,DWORD PTR [edi-0x7c77bbbf],0xffffffc3
  4185ed:	sbb    eax,0x6787c965
  4185f2:	fstp   TBYTE PTR [ecx]
  4185f4:	inc    edi
  4185f5:	in     eax,0x19
  4185f7:	neg    ebp
  4185f9:	imul   edi,DWORD PTR [ebp+0x56],0x8b280d74
  418600:	loopne 0x4185ec
  418602:	std    
  418603:	push   ds
  418604:	ror    DWORD PTR [ecx],cl
  418606:	in     al,0x3a
  418608:	xlat   BYTE PTR ds:[ebx]
  418609:	adc    eax,0x789aaa6b
  41860e:	fs aas 
  418610:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418611:	cdq    
  418612:	mov    dh,0xaa
  418614:	jge    0x418633
  418616:	dec    ebp
  418617:	sbb    DWORD PTR cs:[edx],ebp
  41861a:	cs call 0x1b189d66
  418620:	mov    ch,0x9c
  418622:	ret    
  418623:	sti    
  418624:	aam    0x26
  418626:	std    
  418627:	mov    ds:0x925f84ac,al
  41862c:	int3   
  41862d:	jno    0x418695
  41862f:	aaa    
  418630:	inc    esi
  418631:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418632:	(bad)  
  418633:	adc    al,0xe3
  418635:	imul   ecx,DWORD PTR [edi-0x54f4bb78],0x775bf872
  41863f:	mov    BYTE PTR [edx-0x450cc9c3],dl
  418645:	dec    esp
  418646:	in     eax,dx
  418647:	cmp    DWORD PTR [ecx+0x52],ebx
  41864a:	fnsave [eax+0x1d53bbac]
  418650:	dec    ebx
  418651:	popf   
  418652:	in     eax,dx
  418653:	mov    eax,ds:0xd0c1f040
  418658:	xchg   edi,eax
  418659:	fistp  DWORD PTR [ecx]
  41865b:	ror    edx,cl
  41865d:	call   0x138d:0x1d8bab18
  418664:	push   DWORD PTR [esi-0x36]
  418667:	cmp    ebx,0x69ebf1b7
  41866d:	and    al,0x8c
  41866f:	mov    esi,DWORD PTR [ebx+0xa]
  418672:	push   esp
  418673:	push   edx
  418674:	sub    eax,0x8adb6b5b
  418679:	aaa    
  41867a:	lods   al,BYTE PTR ds:[esi]
  41867b:	cli    
  41867c:	and    eax,DWORD PTR [edx+0x1d]
  41867f:	lea    esp,[ebp+0x49eb3488]
  418685:	pop    esp
  418686:	aaa    
  418687:	out    dx,eax
  418688:	js     0x41865d
  41868a:	ret    
  41868b:	inc    edx
  41868c:	and    al,0x98
  41868e:	ja     0x4186de
  418690:	test   al,0x92
  418692:	lea    esp,[edx]
  418694:	imul   BYTE PTR [edx]
  418696:	aaa    
  418697:	inc    ecx
  418698:	push   0x52
  41869a:	jl     0x418620
  41869c:	and    BYTE PTR [ecx-0x52],cl
  41869f:	(bad)  [esi+ebx*2-0x4]
  4186a3:	lahf   
  4186a4:	leave  
  4186a5:	jecxz  0x41862f
  4186a7:	rol    DWORD PTR ds:0x891d5081,1
  4186ad:	push   0x53
  4186af:	adc    BYTE PTR [esi-0x80],dh
  4186b2:	nop
  4186b3:	xchg   edx,eax
  4186b4:	(bad)  
  4186b5:	push   esp
  4186b6:	daa    
  4186b7:	dec    ecx
  4186b8:	pop    es
  4186b9:	dec    edx
  4186ba:	rol    BYTE PTR [edi],1
  4186bc:	and    DWORD PTR ds:0x477c7a81,ebx
  4186c2:	repz mov edi,0x5a5720ba
  4186c8:	(bad)  
  4186c9:	fxch   st(4)
  4186cb:	stc    
  4186cc:	inc    ebx
  4186cd:	or     al,0xa4
  4186cf:	add    al,al
  4186d1:	outs   dx,DWORD PTR ds:[esi]
  4186d2:	pop    ecx
  4186d3:	inc    esi
  4186d4:	retf   
  4186d5:	inc    eax
  4186d6:	mov    eax,ebp
  4186d8:	jle    0x418691
  4186da:	mov    eax,ds:0x61e9b0d7
  4186df:	or     al,BYTE PTR [eax+edx*8]
  4186e2:	sub    esi,DWORD PTR [ecx]
  4186e4:	icebp  
  4186e5:	add    BYTE PTR [eax-0x4f695d7],dh
  4186eb:	mov    al,ds:0x2c19b83b
  4186f0:	adc    al,0xee
  4186f2:	scas   al,BYTE PTR es:[edi]
  4186f3:	shl    al,1
  4186f5:	mov    ecx,eax
  4186f7:	push   esi
  4186f8:	cmp    al,0xdf
  4186fa:	mov    ecx,0x7e41b7f2
  4186ff:	(bad)  
  418700:	push   esp
  418701:	(bad)  
  418703:	lea    esi,[ebp+0x283e75bd]
  418709:	inc    ebp
  41870a:	cmp    BYTE PTR [ebx+esi*8-0x6b],bh
  41870e:	add    esi,edx
  418710:	les    esp,FWORD PTR [esi-0x468c36cb]
  418716:	xor    eax,esi
  418718:	jo     0x418745
  41871a:	fsubr  DWORD PTR [eax]
  41871c:	imul   BYTE PTR [ebx+0x725bd53c]
  418722:	push   esi
  418723:	mov    DWORD PTR [ebx-0x4],edi
  418726:	pop    edx
  418727:	jge    0x418702
  418729:	ins    BYTE PTR es:[edi],dx
  41872a:	imul   edx,esp,0x7d
  41872d:	xor    eax,0x5c936e1d
  418732:	sbb    DWORD PTR ss:[edx-0x2ecbf1c8],edi
  418739:	not    dl
  41873b:	ins    DWORD PTR es:[edi],dx
  41873c:	mov    DWORD PTR [esi],esi
  41873e:	sbb    dh,al
  418740:	push   ebp
  418741:	dec    edx
  418742:	retf   
  418743:	pop    es
  418744:	aas    
  418745:	fwait
  418746:	mov    esp,0x4e0aa45
  41874b:	out    dx,al
  41874c:	mov    dh,0x6e
  41874e:	shl    DWORD PTR [ebx+0x7a],cl
  418751:	xlat   BYTE PTR ds:[ebx]
  418752:	loopne 0x418734
  418754:	jg     0x4187c9
  418756:	and    dl,BYTE PTR [esi-0x4cf0542]
  41875c:	shl    DWORD PTR ds:0x2e3c8f58,1
  418762:	dec    DWORD PTR [edx]
  418764:	jns    0x4187de
  418766:	call   0x4b50:0xee3fadc9
  41876d:	div    BYTE PTR [edi+esi*1]
  418770:	or     ecx,DWORD PTR ss:[eax+0x41]
  418774:	stos   DWORD PTR es:[edi],eax
  418775:	mov    dl,BYTE PTR [edi+0x20]
  418778:	scas   eax,DWORD PTR es:[edi]
  418779:	add    al,0xd6
  41877b:	stos   DWORD PTR es:[edi],eax
  41877c:	adc    ebp,esp
  41877e:	enter  0xda9c,0x3e
  418782:	push   eax
  418783:	pop    edx
  418784:	xchg   ebx,eax
  418785:	enter  0xb152,0xb6
  418789:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  41878b:	clc    
  41878c:	jo     0x41874c
  41878e:	sbb    BYTE PTR [esi],ah
  418790:	xor    BYTE PTR [ebx+0x27a6a1fb],cl
  418796:	push   cs
  418797:	jne    0x4187e3
  418799:	or     al,0x5e
  41879b:	lds    esi,FWORD PTR [ecx]
  41879d:	cmp    al,0x9a
  41879f:	lahf   
  4187a0:	rol    DWORD PTR [edx-0x5f],cl
  4187a3:	hlt    
  4187a4:	jne    0x418808
  4187a6:	sbb    BYTE PTR [eax],bh
  4187a8:	and    eax,0x4cb74b02
  4187ad:	sub    DWORD PTR [esp+ebx*4-0x46],esp
  4187b1:	or     DWORD PTR [ebx+0x3c2f18c9],eax
  4187b7:	push   ecx
  4187b8:	pop    ss
  4187b9:	nop
  4187ba:	jp     0x418811
  4187bc:	daa    
  4187bd:	leave  
  4187be:	es jge 0x4187c8
  4187c1:	mov    eax,0xe2008793
  4187c6:	cmp    dh,BYTE PTR [edx+0x693611f1]
  4187cc:	mov    ds:0x62a4e0e1,al
  4187d1:	jne    0x4187c3
  4187d3:	loope  0x418831
  4187d5:	push   cs
  4187d6:	gs stc 
  4187d8:	xchg   esp,eax
  4187d9:	out    0x96,al
  4187db:	push   ds
  4187dc:	push   ecx
  4187dd:	pop    eax
  4187de:	pusha  
  4187df:	ds retf 
  4187e1:	sbb    DWORD PTR [ebx],ecx
  4187e3:	and    ecx,ebp
  4187e5:	cmp    eax,0x7a9cdaa6
  4187ea:	mov    ebx,0xcb17fa62
  4187ef:	mov    DWORD PTR [eax],ebp
  4187f1:	(bad)  
  4187f2:	scas   eax,DWORD PTR es:[edi]
  4187f3:	sub    eax,DWORD PTR [edi+0x9]
  4187f6:	jne    0x4187d5
  4187f8:	arpl   cx,bp
  4187fa:	imul   ebp,DWORD PTR [esi],0xdc66fd81
  418800:	das    
  418801:	jl     0x4187a3
  418803:	inc    eax
  418804:	loope  0x418810
  418806:	clc    
  418807:	das    
  418808:	cs (bad) 
  41880a:	jp     0x41878c
  41880c:	rol    dl,0xee
  41880f:	add    DWORD PTR [ebp+0xf2515d],ebp
  418815:	cmp    esi,edx
  418817:	dec    edi
  418818:	call   0xf6b1972f
  41881d:	popa   
  41881e:	out    0xae,eax
  418820:	sbb    BYTE PTR [ebx+0x7cc133d5],ch
  418826:	mov    esp,0x47cd6583
  41882b:	sahf   
  41882c:	bound  edi,QWORD PTR [ecx+0x12]
  41882f:	dec    edx
  418830:	and    eax,DWORD PTR [ebx+0x79cd9a9]
  418836:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418837:	push   edx
  418838:	jmp    0xa5d0e298
  41883d:	xchg   ebp,eax
  41883e:	je     0x4187d3
  418840:	xchg   ebx,eax
  418841:	and    al,0x7e
  418843:	mov    ch,0x5b
  418845:	jnp    0x4188c4
  418847:	xchg   ecx,eax
  418848:	mov    WORD PTR [esp+eiz*8],fs
  41884b:	hlt    
  41884c:	fadd   DWORD PTR [ebx]
  41884e:	in     al,dx
  41884f:	ror    BYTE PTR [eax-0x24],0x64
  418853:	sub    BYTE PTR [eax],al
  418855:	dec    edi
  418856:	jmp    0x41881c
  418858:	shl    BYTE PTR [edi+ecx*4],0xbb
  41885c:	inc    edi
  41885d:	(bad)  
  41885e:	ror    BYTE PTR [edi+0x2e9c39b5],cl
  418864:	xchg   dh,ch
  418866:	fidiv  DWORD PTR [edi+0x6adc10cd]
  41886c:	xchg   ebp,eax
  41886d:	cmp    edi,esp
  41886f:	das    
  418870:	sub    al,BYTE PTR [ebp+0xe6d5942]
  418876:	xchg   esi,eax
  418877:	repnz mov cl,0xe5
  41887a:	mov    dl,al
  41887c:	test   eax,0x29b94b4c
  418881:	shr    BYTE PTR [edx+0x3d5e13aa],1
  418887:	aaa    
  418888:	dec    edx
  418889:	and    eax,0x8de09752
  41888e:	xor    eax,0xdb3e5e12
  418893:	stos   DWORD PTR es:[edi],eax
  418894:	or     ebp,esp
  418896:	inc    edi
  418897:	add    eax,0x7e34937b
  41889c:	push   es
  41889d:	cwde   
  41889e:	push   ds
  41889f:	add    al,0x2a
  4188a1:	and    al,0xb1
  4188a3:	pop    esp
  4188a4:	push   ebp
  4188a5:	pop    esi
  4188a6:	aam    0x7b
  4188a8:	mov    WORD PTR [edx],cs
  4188aa:	add    bh,bh
  4188ac:	int    0x4c
  4188ae:	inc    edi
  4188af:	push   esi
  4188b0:	sub    al,0x45
  4188b2:	mov    ah,0xb2
  4188b4:	es pop ss
  4188b6:	imul   ebx,DWORD PTR [eax+ebx*8-0x198390a7],0xffffffe8
  4188be:	sbb    DWORD PTR [edx-0x5],eax
  4188c1:	push   esi
  4188c2:	pop    edi
  4188c3:	mov    esi,ecx
  4188c5:	adc    ebx,ecx
  4188c7:	not    BYTE PTR [edi]
  4188c9:	xor    ecx,DWORD PTR [eax+0xa9]
  4188cf:	add    BYTE PTR [eax],al
  4188d1:	add    BYTE PTR [esi-0x8290893],bl
  4188d7:	fidivr WORD PTR [edi-0x61f42993]
  4188dd:	int    0x5e
  4188df:	inc    edi
  4188e0:	xchg   DWORD PTR [edx],ecx
  4188e2:	in     eax,dx
  4188e3:	add    eax,0x4f20001
  4188e8:	add    BYTE PTR [eax],al
  4188ea:	fwait
  4188eb:	popa   
  4188ec:	dec    esi
  4188ed:	lods   eax,DWORD PTR ds:[esi]
  4188ee:	iret   
  4188ef:	and    ah,cl
  4188f1:	cwde   
  4188f2:	or     al,0x12
  4188f4:	pop    edx
  4188f5:	add    eax,0x6251846a
  4188fa:	out    0x83,eax
  4188fc:	pop    esi
  4188fd:	sar    eax,0xfc
  418900:	aaa    
  418901:	cmp    al,0xe7
  418903:	loope  0x4188fc
  418905:	push   edx
  418906:	sub    al,0xdd
  418908:	add    eax,0xf57d27d3
  41890d:	inc    esi
  41890e:	adc    BYTE PTR [ecx+0x38],ah
  418911:	daa    
  418912:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418913:	pop    esi
  418914:	clc    
  418915:	stos   BYTE PTR es:[edi],al
  418916:	mov    WORD PTR [esi],cs
  418918:	paddq  mm0,QWORD PTR [edx+0x9bfdee2]
  41891f:	es inc edi
  418921:	clc    
  418922:	mov    ah,0x5a
  418924:	jmp    0x418915
  418926:	test   eax,0xa3fef096
  41892b:	in     al,0x36
  41892d:	iret   
  41892e:	cmp    esi,DWORD PTR [edi+0x3152d870]
  418934:	or     al,0xc5
  418936:	pop    edx
  418937:	das    
  418938:	test   ebx,0x4facfb49
  41893e:	cmp    BYTE PTR [edx+0x6],ah
  418941:	(bad)  
  418942:	pop    edx
  418943:	add    cl,BYTE PTR [edi+0x66]
  418946:	lea    esp,[ebx+ecx*8]
  418949:	pushf  
  41894a:	outs   dx,BYTE PTR ds:[esi]
  41894b:	sbb    esi,DWORD PTR [edi+0x25deb71d]
  418951:	das    
  418952:	(bad)  
  418953:	adc    eax,0xbacc718
  418958:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418959:	call   0xc11c:0xddc7b52e
  418960:	imul   DWORD PTR [ebx]
  418962:	mov    ebx,0x558b692b
  418967:	fidivr WORD PTR [edx-0x7c]
  41896a:	xor    eax,0x785f60a4
  41896f:	or     eax,0x82d86e21
  418974:	pop    ebx
  418975:	test   DWORD PTR [esi],eax
  418977:	(bad)
  41897b:	push   esi
  41897c:	sti    
  41897d:	dec    eax
  41897e:	pop    edx
  41897f:	mov    edx,0x6305f2a7
  418984:	hlt    
  418985:	ret    0x94dc
  418988:	call   0xbbfa:0xff6b867d
  41898f:	in     eax,dx
  418990:	mov    al,ds:0x5c776e0d
  418995:	cwde   
  418996:	ud0    ebp,DWORD PTR [esi+0x4a474f10]
  41899d:	js     0x4189b7
  41899f:	sub    esi,DWORD PTR [esi-0x3c50421d]
  4189a5:	loope  0x4189f9
  4189a7:	in     al,dx
  4189a8:	out    dx,al
  4189a9:	(bad)  
  4189aa:	lods   eax,DWORD PTR ds:[esi]
  4189ab:	mov    edx,DWORD PTR ds:0xe655dc55
  4189b1:	pop    edi
  4189b2:	popa   
  4189b3:	xor    eax,0x61868bb8
  4189b8:	retf   
  4189b9:	call   0x4aa0:0xd9baae97
  4189c0:	inc    esp
  4189c1:	pop    ebp
  4189c2:	add    eax,0x1737ef3d
  4189c7:	sar    BYTE PTR [ebp-0x1a714fb2],cl
  4189cd:	inc    ebx
  4189ce:	lea    edi,[ecx]
  4189d0:	rol    DWORD PTR [edx+0x1a],1
  4189d3:	push   ds
  4189d4:	in     eax,dx
  4189d5:	cmp    esi,edx
  4189d7:	icebp  
  4189d8:	mov    ds:0x3deed90c,eax
  4189dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4189de:	lods   eax,DWORD PTR ds:[esi]
  4189df:	sbb    esi,edx
  4189e1:	invd   
  4189e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4189e4:	in     al,dx
  4189e5:	dec    edx
  4189e6:	cmp    al,0x56
  4189e8:	push   edx
  4189e9:	cmp    al,0x17
  4189eb:	out    dx,eax
  4189ec:	adc    al,0x11
  4189ee:	int3   
  4189ef:	hlt    
  4189f0:	mov    ecx,0x13b6c9ff
  4189f5:	or     bh,BYTE PTR [ecx]
  4189f7:	cmp    edi,DWORD PTR es:[edx-0x64acd8a7]
  4189fe:	jg     0x418991
  418a00:	mov    ecx,0x300a834b
  418a05:	bound  eax,QWORD PTR [edi+ebp*4-0x218009a7]
  418a0c:	mov    bl,0x2
  418a0e:	aam    0x91
  418a10:	std    
  418a11:	gs pusha 
  418a13:	mov    edx,0xaa61d429
  418a18:	xchg   ecx,eax
  418a19:	inc    ecx
  418a1a:	mov    esp,0xf0ecd8cd
  418a1f:	cdq    
  418a20:	mov    ds:0x3ce52faf,eax
  418a25:	jecxz  0x418a8d
  418a27:	mov    dh,0xe9
  418a29:	mov    bl,0x4a
  418a2b:	mov    ecx,0x45b40d23
  418a30:	push   ebp
  418a31:	je     0x418aa2
  418a33:	aad    0x5b
  418a35:	out    dx,al
  418a36:	call   0x9c4a:0xadedf84
  418a3d:	rol    DWORD PTR [edx-0x463b81dc],0x8d
  418a44:	push   ebx
  418a45:	cli    
  418a46:	pop    ebp
  418a47:	clc    
  418a48:	add    al,0x5d
  418a4a:	or     ecx,ebx
  418a4c:	inc    esi
  418a4d:	retf   0xa987
  418a50:	jmp    esi
  418a52:	xor    edx,DWORD PTR [ebp-0x66]
  418a55:	mov    bl,0xaf
  418a57:	xchg   esp,eax
  418a58:	cli    
  418a59:	mov    dh,BYTE PTR [eax]
  418a5b:	pop    ss
  418a5c:	inc    edi
  418a5d:	outs   dx,DWORD PTR ds:[esi]
  418a5e:	xchg   ebp,eax
  418a5f:	popa   
  418a60:	loope  0x418abb
  418a62:	gs hlt 
  418a64:	cmp    BYTE PTR ds:0x5350dc75,cl
  418a6a:	in     eax,0x19
  418a6c:	(bad)  
  418a6d:	rol    DWORD PTR [esi],0xc4
  418a70:	mov    bl,0xea
  418a72:	or     DWORD PTR [eax+0x48a14c9f],edx
  418a78:	adc    eax,0x4f5dbbfe
  418a7d:	sub    al,0x72
  418a7f:	(bad)  
  418a80:	test   al,0xc4
  418a82:	inc    edx
  418a83:	jns    0x418a20
  418a85:	and    eax,0x25459cbc
  418a8a:	dec    esp
  418a8b:	in     al,0x26
  418a8d:	add    BYTE PTR [edi-0xc],dl
  418a90:	jmp    FWORD PTR [edi]
  418a92:	or     BYTE PTR [eax+0x7fa42b84],dl
  418a98:	dec    ebp
  418a99:	cmp    ebx,DWORD PTR [edx+0x40c1a156]
  418a9f:	lods   eax,DWORD PTR ds:[esi]
  418aa0:	lahf   
  418aa1:	dec    esi
  418aa2:	xor    BYTE PTR [ecx-0x618bc3db],bl
  418aa8:	add    DWORD PTR [esi-0x58ce373d],eax
  418aae:	jbe    0x418a3c
  418ab0:	sub    BYTE PTR [esi],bh
  418ab2:	jl     0x418a4b
  418ab4:	mov    al,ds:0x2c28c8db
  418ab9:	(bad)  
  418aba:	inc    edi
  418abb:	mov    ds:0x4d552a43,al
  418ac0:	cmp    al,0x99
  418ac2:	dec    esp
  418ac3:	pop    es
  418ac4:	fld    QWORD PTR [esi+0x65]
  418ac7:	inc    ecx
  418ac8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418ac9:	jp     0x418b1b
  418acb:	xor    DWORD PTR gs:[edi],0x8ca786f0
  418ad2:	mov    esp,0xf73a4580
  418ad7:	gs imul ebx,ebp,0x32
  418adb:	mov    esp,0x4a39e871
  418ae0:	pop    eax
  418ae1:	aaa    
  418ae2:	add    BYTE PTR [eax-0x4],dl
  418ae5:	mov    bh,0xd2
  418ae7:	sub    dl,BYTE PTR [edi]
  418ae9:	sub    DWORD PTR [ecx],eax
  418aeb:	mov    edi,0xcea33ec5
  418af0:	test   al,0xe8
  418af2:	push   cs
  418af3:	jae    0x418ae2
  418af5:	add    eax,0x655a8c1a
  418afa:	dec    eax
  418afb:	dec    ecx
  418afc:	mov    al,ds:0x1670cd7c
  418b01:	lods   al,BYTE PTR ds:[esi]
  418b02:	(bad)  
  418b03:	lock ins DWORD PTR es:[edi],dx
  418b05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b06:	mov    bl,0xbb
  418b08:	ror    DWORD PTR [ebx+0x2c],cl
  418b0b:	lods   eax,DWORD PTR ds:[esi]
  418b0c:	mov    bh,0x89
  418b0e:	and    BYTE PTR [ebx-0x4e31d48b],cl
  418b14:	sahf   
  418b15:	and    BYTE PTR [edx+0x59],dh
  418b18:	adc    BYTE PTR [edx-0x7b],0x5a
  418b1c:	stos   DWORD PTR es:[edi],eax
  418b1d:	or     BYTE PTR ds:0xf9580234,0x85
  418b24:	cmp    eax,0x36c0833d
  418b29:	or     al,0x50
  418b2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418b2c:	push   es
  418b2d:	clc    
  418b2e:	and    cl,BYTE PTR [bp+di+0x71]
  418b32:	into   
  418b33:	fisttp QWORD PTR [ebp+0x4b]
  418b36:	and    al,0x98
  418b38:	mov    edx,DWORD PTR [edx]
  418b3a:	inc    edi
  418b3b:	dec    ecx
  418b3c:	nop
  418b3d:	mov    edx,DWORD PTR [eax+0x5a]
  418b40:	jbe    0x418aff
  418b42:	test   DWORD PTR [edi+0x124099f4],esi
  418b48:	test   BYTE PTR [edx+0x3f],ah
  418b4b:	mov    DWORD PTR [edx-0x670bb815],ebp
  418b51:	fiadd  WORD PTR [edx]
  418b53:	aas    
  418b54:	xchg   ebx,eax
  418b55:	stos   DWORD PTR es:[edi],eax
  418b56:	push   ds
  418b57:	cmp    dh,BYTE PTR [ebx-0x49c6fef0]
  418b5d:	jo     0x418bcb
  418b5f:	mov    al,0x7
  418b61:	jg     0x418b71
  418b63:	pop    esi
  418b64:	popa   
  418b65:	push   es
  418b66:	xlat   BYTE PTR ds:[ebx]
  418b67:	add    BYTE PTR [edi-0x25],ch
  418b6a:	jle    0x418b5b
  418b6c:	inc    eax
  418b6d:	les    ecx,FWORD PTR [edx+esi*1-0x51]
  418b71:	jae    0x418b93
  418b73:	sub    BYTE PTR [esi+0x49],bh
  418b76:	cmp    DWORD PTR [eax+0x1f],0x8d23759f
  418b7d:	xor    ecx,ecx
  418b7f:	pop    esp
  418b80:	cli    
  418b81:	and    bl,bl
  418b83:	mov    dh,bl
  418b85:	xor    eax,0x4bb2bd3b
  418b8a:	pushf  
  418b8b:	xor    esp,edx
  418b8d:	into   
  418b8e:	imul   esi,DWORD PTR [ebp+0x10],0xa5382356
  418b95:	add    al,0xd5
  418b97:	repz cs jnp 0x418bb1
  418b9b:	test   DWORD PTR [edx-0x68],ecx
  418b9e:	sub    esp,DWORD PTR [edx]
  418ba0:	sub    DWORD PTR [edx+0x75c0245a],esi
  418ba6:	les    ebx,FWORD PTR [ebx+0x41]
  418ba9:	ins    DWORD PTR es:[edi],dx
  418baa:	mov    ebx,0x90ef3185
  418baf:	stc    
  418bb0:	inc    ebp
  418bb1:	sub    al,0x30
  418bb3:	test   eax,0x6296aff1
  418bb8:	ins    BYTE PTR es:[edi],dx
  418bb9:	sbb    BYTE PTR [esi],dl
  418bbb:	mov    dh,0x2a
  418bbd:	not    BYTE PTR ds:0xdc9ff672
  418bc3:	pop    esp
  418bc4:	push   ss
  418bc5:	push   ss
  418bc6:	inc    ebx
  418bc7:	loop   0x418c28
  418bc9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418bca:	int3   
  418bcb:	cli    
  418bcc:	push   ebp
  418bcd:	retf   0xc930
  418bd0:	xor    eax,0xb710d40b
  418bd5:	xchg   esi,eax
  418bd6:	or     esi,DWORD PTR [eax-0x7ebdea2e]
  418bdc:	dec    ecx
  418bdd:	jns    0x418c3b
  418bdf:	mov    ah,0x83
  418be1:	pop    ss
  418be2:	add    BYTE PTR [edx+0x1415234c],ah
  418be8:	jecxz  0x418c45
  418bea:	fwait
  418beb:	sti    
  418bec:	xchg   ebp,eax
  418bed:	push   esp
  418bee:	dec    edi
  418bef:	stos   DWORD PTR es:[edi],eax
  418bf0:	addr16 hlt 
  418bf2:	mov    dh,BYTE PTR [eax+edx*4]
  418bf5:	xor    BYTE PTR [edx-0x6ae02545],0xee
  418bfc:	loope  0x418b88
  418bfe:	mov    dh,0x58
  418c00:	nop
  418c01:	xchg   edi,eax
  418c02:	test   edx,esp
  418c04:	or     eax,0xbf258ac9
  418c09:	bound  edi,QWORD PTR [ebp+0x646cbf1a]
  418c0f:	push   eax
  418c10:	fisttp WORD PTR [edi+0x37bf8d09]
  418c16:	pop    ss
  418c17:	or     al,0x68
  418c19:	pop    ebp
  418c1a:	test   al,0x53
  418c1c:	cld    
  418c1d:	inc    edx
  418c1e:	lahf   
  418c1f:	cs inc edi
  418c21:	sbb    DWORD PTR [ebp+0x2982d8ca],0x76
  418c28:	jnp    0x418c22
  418c2a:	mov    edx,0x65596067
  418c2f:	xor    al,0x9b
  418c31:	cdq    
  418c32:	cmp    DWORD PTR [eax+0x23],eax
  418c35:	pop    ecx
  418c36:	inc    edi
  418c37:	daa    
  418c38:	or     DWORD PTR [ebp+0x36],esi
  418c3b:	(bad)  
  418c3c:	xchg   ebp,eax
  418c3d:	pop    eax
  418c3e:	sbb    ebx,DWORD PTR gs:[eax]
  418c41:	fimul  WORD PTR [edi+0x29]
  418c44:	cmp    al,0x1d
  418c46:	hlt    
  418c47:	nop
  418c48:	(bad)  
  418c49:	cmp    eax,0xa356dbed
  418c4e:	in     eax,dx
  418c4f:	add    cl,BYTE PTR [esi]
  418c51:	push   cs
  418c52:	xor    BYTE PTR [eax-0x5114bf2b],dh
  418c58:	mov    esp,0x89471648
  418c5d:	(bad)  
  418c5f:	iret   
  418c60:	xchg   DWORD PTR [ebp*8+0x780bae81],ecx
  418c67:	mov    al,0xb9
  418c69:	sbb    eax,0x30229262
  418c6e:	cli    
  418c6f:	lahf   
  418c70:	test   al,0x6a
  418c72:	mov    ecx,0x6cbbf085
  418c77:	bound  ecx,QWORD PTR [edi-0x66641c2]
  418c7d:	sub    eax,0x51c62888
  418c82:	push   ss
  418c83:	add    al,0x32
  418c85:	xor    BYTE PTR [edi+ecx*1+0x92b9a8c],bh
  418c8c:	xor    BYTE PTR [ecx],bh
  418c8e:	add    ebp,ebp
  418c90:	lock sahf 
  418c92:	xchg   edx,eax
  418c93:	xor    al,0xb2
  418c95:	(bad)  
  418c97:	pop    ds
  418c98:	push   ds
  418c99:	lds    ebx,FWORD PTR [esi]
  418c9b:	imul   esp,DWORD PTR [ebx-0x8be942c],0xde27460c
  418ca5:	jno    0x418c58
  418ca7:	leave  
  418ca8:	hlt    
  418ca9:	(bad)  
  418caa:	xlat   BYTE PTR ds:[ebx]
  418cab:	xchg   edx,eax
  418cac:	das    
  418cad:	jmp    0x672dc90d
  418cb2:	je     0x418c9a
  418cb4:	xchg   ecx,eax
  418cb5:	inc    ebp
  418cb6:	out    0x86,eax
  418cb8:	add    DWORD PTR [esi+0x68fb23eb],0xdb7ebbff
  418cc2:	xlat   BYTE PTR ds:[ebx]
  418cc3:	fwait
  418cc4:	sti    
  418cc5:	push   fs
  418cc7:	(bad)  
  418cc8:	repnz inc esp
  418cca:	pop    esi
  418ccb:	jbe    0x418cb6
  418ccd:	dec    ebx
  418cce:	push   edi
  418ccf:	cwde   
  418cd0:	std    
  418cd1:	xlat   BYTE PTR ds:[ebx]
  418cd2:	daa    
  418cd3:	cld    
  418cd4:	adc    ebx,DWORD PTR [ebx-0x589441ec]
  418cda:	and    ebx,DWORD PTR [ecx]
  418cdc:	sub    bl,BYTE PTR [ebx+ebp*8]
  418cdf:	jle    0x418cf7
  418ce1:	pop    eax
  418ce2:	adc    bh,BYTE PTR [ecx-0x6f]
  418ce5:	pop    esp
  418ce6:	or     dh,BYTE PTR [ebx]
  418ce8:	jecxz  0x418d3b
  418cea:	xchg   BYTE PTR [ebp+0x729fa5bc],dh
  418cf0:	(bad)  
  418cf1:	(bad)  
  418cf2:	aas    
  418cf3:	repz adc dh,BYTE PTR [edi+ecx*4+0x433ce740]
  418cfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418cfc:	push   ss
  418cfd:	loopne 0x418c9f
  418cff:	pop    edx
  418d00:	ja     0x418c98
  418d02:	push   eax
  418d03:	arpl   WORD PTR [eax-0x3d],bx
  418d06:	inc    ebx
  418d07:	das    
  418d08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418d09:	jle    0x418d56
  418d0b:	sbb    DWORD PTR [edx],0xffffffc0
  418d0e:	sbb    ebx,DWORD PTR [ebp+0xe7c5c6f]
  418d14:	xchg   esi,eax
  418d15:	mov    eax,0xccdc07f8
  418d1a:	fdiv   QWORD PTR [ecx-0x1c56664]
  418d20:	idiv   dh
  418d22:	imul   eax,DWORD PTR fs:[edx+0x1ac56f91],0x322998fe
  418d2d:	mov    esp,0x61e3d0d8
  418d32:	das    
  418d33:	sti    
  418d34:	aad    0xf6
  418d36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418d37:	adc    DWORD PTR [ebx+ecx*1],ebx
  418d3a:	cdq    
  418d3b:	retf   
  418d3c:	retf   0x795c
  418d3f:	clc    
  418d40:	leave  
  418d41:	push   eax
  418d42:	sub    eax,0xb2b6614e
  418d47:	inc    edx
  418d48:	xor    al,0x16
  418d4a:	(bad)  
  418d4b:	push   ss
  418d4c:	cmp    BYTE PTR [edx+0xb],bh
  418d4f:	in     al,dx
  418d50:	ret    0xb911
  418d53:	push   ss
  418d54:	lock leave 
  418d56:	fs nop
  418d58:	sar    DWORD PTR [eax+ecx*4],1
  418d5b:	add    bh,BYTE PTR [edi+0x146be85c]
  418d61:	aad    0x81
  418d63:	arpl   WORD PTR [ebp+0x5dedd94b],si
  418d69:	retf   
  418d6a:	(bad)  
  418d6b:	int    0x9c
  418d6d:	or     ebx,DWORD PTR [ebp+0x4f971341]
  418d73:	out    0xcc,eax
  418d75:	ins    BYTE PTR es:[edi],dx
  418d76:	cld    
  418d77:	mov    cs,WORD PTR [ecx]
  418d79:	pop    ebx
  418d7a:	in     al,dx
  418d7b:	add    ebp,esp
  418d7d:	test   eax,0xbce9c124
  418d82:	xchg   DWORD PTR [ecx+0x16],esi
  418d85:	sbb    esp,ecx
  418d87:	fldln2 
  418d89:	or     DWORD PTR [ebp-0x1ef0f008],esp
  418d8f:	push   ecx
  418d90:	or     ah,BYTE PTR [edi-0x73]
  418d93:	mov    ebx,0xa1768dd
  418d98:	xchg   ecx,eax
  418d99:	sbb    ch,BYTE PTR [esi]
  418d9b:	sub    eax,0xdbdcd29
  418da0:	fisubr WORD PTR [ecx]
  418da2:	sbb    al,0x46
  418da4:	push   eax
  418da5:	xor    DWORD PTR [esi+eiz*4-0x602b09c2],0x23e20d4a
  418db0:	mul    edx
  418db2:	idiv   DWORD PTR [ebx]
  418db4:	mov    bl,dh
  418db6:	dec    ecx
  418db7:	cli    
  418db8:	cmp    DWORD PTR [esi+0x3c],ebx
  418dbb:	daa    
  418dbc:	jbe    0x418e09
  418dbe:	(bad)  
  418dbf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418dc0:	cmp    eax,0xc367f676
  418dc5:	mov    ah,0x12
  418dc7:	jmp    0xf20a6074
  418dcc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418dcd:	mov    BYTE PTR [esi-0xfc4d09a],bl
  418dd3:	ins    BYTE PTR es:[edi],dx
  418dd4:	jmp    FWORD PTR [ebx]
  418dd6:	push   edi
  418dd7:	fldcw  WORD PTR [ebx+0x2e]
  418dda:	cdq    
  418ddb:	sbb    DWORD PTR [eax],eax
  418ddd:	add    BYTE PTR [eax],al
  418ddf:	add    BYTE PTR [eax],al
  418de1:	add    BYTE PTR [edx-0x103695a9],dh
  418de7:	std    
  418de8:	mov    bl,0x7f
  418dea:	push   ebx
  418deb:	jg     0x418e10
  418ded:	mov    ecx,0x5bcc0c79
  418df2:	fisttp WORD PTR [edx]
  418df4:	add    DWORD PTR [eax],eax
  418df6:	repnz add al,0x0
  418df9:	add    BYTE PTR [esi],al
  418dfb:	push   eax
  418dfc:	sbb    eax,0xf2aec7c2
  418e01:	mov    ecx,0x660af721
  418e06:	enter  0xd9df,0xc1
  418e0a:	jl     0x418e62
  418e0c:	mov    DWORD PTR [edi+0x5543f298],0xd303231b
  418e16:	sub    edx,DWORD PTR [edi-0x28c429c2]
  418e1c:	repz test bl,bl
  418e1f:	sub    dl,BYTE PTR [edx+0x788d1c8c]
  418e25:	mov    eax,0x2342b6fb
  418e2a:	fsub   DWORD PTR [esi+0x7a]
  418e2d:	xchg   ebp,eax
  418e2e:	dec    ebx
  418e2f:	xchg   DWORD PTR ds:0x9f928316,edx
  418e35:	retf   0xc259
  418e38:	mov    ebx,0x5bb6ed0c
  418e3d:	xor    eax,0x82c6a17c
  418e42:	outs   dx,BYTE PTR ds:[esi]
  418e43:	mov    al,ds:0x7d213530
  418e48:	inc    edx
  418e49:	cld    
  418e4a:	ins    DWORD PTR es:[edi],dx
  418e4b:	xor    ecx,DWORD PTR [esi]
  418e4d:	sbb    eax,0x6bc0039d
  418e52:	test   BYTE PTR [eax-0x45],0x2
  418e56:	mov    ch,0x46
  418e58:	push   esi
  418e59:	js     0x418ecf
  418e5b:	pop    esi
  418e5c:	push   0xffffffd3
  418e5e:	mov    eax,0xef199aac
  418e63:	sbb    al,0x2e
  418e65:	xor    BYTE PTR [esi+edi*1+0x4b],0x87
  418e6a:	rol    DWORD PTR [eax-0x1],cl
  418e6d:	xor    eax,0x4c5e7aa6
  418e72:	mov    DWORD PTR [edx+0x6451b89b],ecx
  418e78:	(bad)  
  418e7a:	jg     0x418ee2
  418e7c:	jle    0x418e1f
  418e7e:	mov    bl,0xff
  418e80:	push   es
  418e81:	retf   0xbfd4
  418e84:	mov    cl,0xf4
  418e86:	xchg   ebx,eax
  418e87:	or     ch,BYTE PTR [edx+0x284b7f3]
  418e8d:	jmp    DWORD PTR [edx-0x66]
  418e90:	fist   WORD PTR [ecx-0x497ec674]
  418e96:	mov    bl,0x31
  418e98:	fst    st(7)
  418e9a:	(bad)  
  418e9b:	retf   0x5e0f
  418e9e:	add    BYTE PTR [ebx+esi*1],0x61
  418ea2:	inc    ecx
  418ea3:	sbb    eax,0xd90f026a
  418ea8:	xor    DWORD PTR [ecx],ecx
  418eaa:	dec    edx
  418eab:	popa   
  418eac:	mov    ebx,ebx
  418eae:	rol    BYTE PTR [ebp+0x24],1
  418eb1:	mov    bh,0x9a
  418eb3:	loop   0x418ecc
  418eb5:	jmp    0x9a0e:0x1b1b3fe7
  418ebc:	jae    0x418f2a
  418ebe:	jae    0x418eea
  418ec0:	ret    
  418ec1:	dec    ebx
  418ec2:	inc    esi
  418ec3:	mov    ecx,0xdda7fde8
  418ec8:	enter  0xa8d7,0x39
  418ecc:	xor    ebp,DWORD PTR [edx+0x7a]
  418ecf:	cmp    BYTE PTR [ebx+0x7145b8c5],cl
  418ed5:	shl    BYTE PTR [edi+0xc],1
  418ed8:	xchg   edx,eax
  418ed9:	call   DWORD PTR [esi]
  418edb:	xor    DWORD PTR [edi+ebp*8+0x26],ecx
  418edf:	dec    ecx
  418ee0:	and    ebx,DWORD PTR [ebp+0x14]
  418ee3:	mov    dl,0x84
  418ee5:	fistp  DWORD PTR ds:0xbc47dbe9
  418eeb:	lock sub eax,0xb6d1973d
  418ef1:	sbb    DWORD PTR ds:0xc01f908,ecx
  418ef7:	ror    DWORD PTR [edx+0x1c93db9c],0x24
  418efe:	dec    ebx
  418eff:	xor    ch,BYTE PTR [eax+0x76811c57]
  418f05:	push   eax
  418f06:	and    ebp,DWORD PTR [eax+0x3fd16463]
  418f0c:	scas   al,BYTE PTR es:[edi]
  418f0d:	inc    edi
  418f0e:	sub    DWORD PTR [ebp-0x3841c2ee],eax
  418f14:	andps  xmm1,XMMWORD PTR [ebx-0x4b6f2cac]
  418f1b:	imul   eax,DWORD PTR [esi+eiz*2],0x15
  418f1f:	cmp    eax,0xcd4314f7
  418f24:	mov    eax,ds:0x9d733c2
  418f29:	imul   edi,ebp,0x83bdcf1a
  418f2f:	or     dh,BYTE PTR [edi+0x4c]
  418f32:	bound  eax,QWORD PTR [ebx+0x48b0943a]
  418f38:	out    dx,al
  418f39:	jmp    0xb183:0xaa7f14cf
  418f40:	dec    ebx
  418f41:	pusha  
  418f42:	xchg   ebx,eax
  418f43:	les    ecx,FWORD PTR [ecx+ebx*4]
  418f46:	pop    edi
  418f47:	add    DWORD PTR [edi-0x3b],0xfdd3c9cb
  418f4e:	(bad)  
  418f50:	jne    0x418ed2
  418f52:	mov    BYTE PTR [eax+0x28],bl
  418f55:	loopne 0x418f1b
  418f57:	jo     0x418ef6
  418f59:	repnz aad 0x7d
  418f5c:	jbe    0x418f1a
  418f5e:	aaa    
  418f5f:	cmp    DWORD PTR [ecx-0x1f],ebp
  418f62:	lock (bad) 
  418f64:	repz cmp bh,BYTE PTR [esp+edi*2-0x59dc22b3]
  418f6c:	or     al,0x32
  418f6e:	add    ebx,DWORD PTR [esi-0x73]
  418f71:	pop    DWORD PTR [esi]
  418f73:	call   FWORD PTR [ebx+ebp*1+0x3]
  418f77:	dec    ecx
  418f78:	dec    edx
  418f79:	outs   dx,BYTE PTR ds:[esi]
  418f7a:	pop    es
  418f7b:	dec    esi
  418f7c:	adc    eax,0x7c1ffce0
  418f81:	mov    esi,0xfc0ed026
  418f86:	and    eax,0xae2369f5
  418f8b:	int3   
  418f8c:	ins    BYTE PTR es:[edi],dx
  418f8d:	sub    DWORD PTR [eax],0x43
  418f90:	xor    bh,BYTE PTR [ebp+eiz*2-0x4bba8b57]
  418f97:	scas   al,BYTE PTR es:[edi]
  418f98:	ja     0x418fb3
  418f9a:	loop   0x418fed
  418f9c:	push   0xffffff8e
  418f9e:	(bad)  
  418f9f:	fwait
  418fa0:	aad    0x48
  418fa2:	pop    eax
  418fa3:	xchg   edi,eax
  418fa4:	cld    
  418fa5:	push   0x2ca88a01
  418faa:	dec    ebx
  418fab:	sub    dl,0x91
  418fae:	sbb    al,0x64
  418fb0:	idiv   edi
  418fb2:	xchg   esi,eax
  418fb3:	mov    bl,0x26
  418fb5:	sub    al,0xf0
  418fb7:	inc    BYTE PTR [ebx-0x559981fe]
  418fbd:	jmp    0xa3e258f8
  418fc2:	iret   
  418fc3:	xchg   edi,eax
  418fc4:	jo     0x418fb9
  418fc6:	jmp    0x418fe4
  418fc8:	pop    esi
  418fc9:	mov    edi,0x6275c679
  418fce:	outs   dx,DWORD PTR ds:[esi]
  418fcf:	xchg   edi,eax
  418fd0:	jp     0x418f99
  418fd2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418fd3:	bound  eax,QWORD PTR [edi+0x67]
  418fd6:	cmp    ebp,esi
  418fd8:	mov    eax,0xea89f5cb
  418fdd:	icebp  
  418fde:	hlt    
  418fdf:	in     eax,0x80
  418fe1:	(bad)
  418fe4:	int    0xb0
  418fe6:	out    0x23,al
  418fe8:	pusha  
  418fe9:	push   ebp
  418fea:	pop    esi
  418feb:	daa    
  418fec:	fadd   DWORD PTR [esp+edx*4-0x7f]
  418ff0:	mov    ds:0xa55486f3,eax
  418ff5:	push   eax
  418ff6:	sbb    eax,edx
  418ff8:	(bad)  
  418ff9:	rcl    DWORD PTR [eax+0x47bae726],cl
  418fff:	or     ah,dh
  419001:	mov    ds:0xa6fcd1a8,al
  419006:	push   eax
  419007:	dec    eax
  419008:	mov    al,0xd0
  41900a:	jl     0x418f9b
  41900c:	mov    edi,0x6166a6a2
  419011:	xor    DWORD PTR [ebx-0x148c2a3b],ebx
  419017:	xlat   BYTE PTR ds:[ebx]
  419018:	stos   DWORD PTR es:[edi],eax
  419019:	icebp  
  41901a:	adc    ecx,DWORD PTR [ecx+ebx*1+0x37]
  41901e:	mov    ebx,0xc6ffa0f4
  419023:	xor    eax,0x7f4560fb
  419028:	xor    edx,DWORD PTR [edi-0x15]
  41902b:	int3   
  41902c:	sub    edx,esi
  41902e:	and    edx,DWORD PTR [eax]
  419030:	je     0x41904a
  419032:	xchg   ecx,eax
  419033:	jp     0x419025
  419035:	dec    ebx
  419036:	mov    ds:0xd3eb1f9d,eax
  41903b:	(bad)  [eax]
  41903d:	and    bl,BYTE PTR [eax]
  41903f:	or     ah,BYTE PTR [esi+edx*8]
  419042:	xchg   edx,eax
  419043:	loope  0x4190a2
  419045:	xchg   ebx,eax
  419046:	aad    0x43
  419048:	(bad)  
  419049:	mov    esi,0x9779601b
  41904e:	cmp    ebp,DWORD PTR ds:0x3b8168af
  419054:	dec    ebp
  419055:	ins    DWORD PTR es:[edi],dx
  419056:	fwait
  419057:	call   0x58b05863
  41905c:	pop    edi
  41905d:	fcomp  QWORD PTR [ebx+0x28]
  419060:	or     dh,cl
  419062:	adc    al,0x6d
  419064:	stos   DWORD PTR es:[edi],eax
  419065:	aas    
  419066:	(bad)  [edi-0x600a9460]
  41906c:	ds (bad) 
  41906e:	outs   dx,DWORD PTR ds:[esi]
  41906f:	cmp    eax,0x4bea4e84
  419074:	xor    DWORD PTR [ecx+0x34],0x22898d74
  41907b:	pop    ebp
  41907c:	mov    ?,ebp
  41907e:	stc    
  41907f:	sbb    ch,BYTE PTR [edx+ebp*1+0x31]
  419083:	retf   0xf9b3
  419086:	or     eax,0xbff8884
  41908b:	push   0xffffffc2
  41908d:	imul   edi,DWORD PTR [edi],0xffffffc9
  419090:	add    BYTE PTR [ecx+0x11],0xd2
  419094:	mov    ds:0xf0837d15,al
  419099:	mov    bl,0xa8
  41909b:	or     ebx,DWORD PTR ds:0xecbda296
  4190a1:	stos   BYTE PTR es:[edi],al
  4190a2:	stc    
  4190a3:	je     0x41903b
  4190a5:	stc    
  4190a6:	and    DWORD PTR [eax+eax*1-0x599966c4],ebp
  4190ad:	cmp    eax,0x560db235
  4190b2:	jno    0x419129
  4190b4:	mov    ecx,0xd0bd443
  4190b9:	stc    
  4190ba:	sub    DWORD PTR [ebx],0x6a
  4190bd:	add    al,0x5d
  4190bf:	and    bh,BYTE PTR [ecx-0x29]
  4190c2:	psubd  mm6,QWORD PTR [edi+0x73]
  4190c6:	dec    edi
  4190c7:	mov    edx,0x65ec55db
  4190cc:	pop    ss
  4190cd:	dec    ebx
  4190ce:	pop    esp
  4190cf:	not    DWORD PTR [ecx]
  4190d1:	xchg   esi,eax
  4190d2:	sub    al,0xeb
  4190d4:	out    0xc9,eax
  4190d6:	outs   dx,BYTE PTR ds:[esi]
  4190d7:	jle    0x419064
  4190d9:	xchg   ebx,eax
  4190da:	jmp    0xf6f0:0x8f0b2026
  4190e1:	or     eax,0x91a08de0
  4190e6:	adc    eax,0xcf5b4684
  4190eb:	mov    esi,ebp
  4190ed:	test   eax,0x474bfdd
  4190f2:	jecxz  0x419112
  4190f4:	mov    ebp,0xf9169a9b
  4190f9:	fild   QWORD PTR [eax+0x8a68c1e]
  4190ff:	(bad)  
  419101:	mov    esp,0xff8f7b9d
  419106:	xor    eax,0xa2a37ba6
  41910b:	jns    0x41917c
  41910d:	enter  0xeada,0x5
  419111:	jne    0x419137
  419113:	ficom  DWORD PTR [eax+0x0]
  419116:	inc    ecx
  419117:	fwait
  419118:	sbb    esp,DWORD PTR [ebx-0x33c8d0df]
  41911e:	cmp    BYTE PTR ds:[esi],0xf1
  419122:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419123:	fcmovnu st,st(6)
  419125:	dec    ebx
  419126:	push   esp
  419127:	mov    bl,0xa
  419129:	or     BYTE PTR [esi],ah
  41912b:	xchg   edi,eax
  41912d:	lahf   
  41912e:	inc    ebp
  41912f:	jbe    0x4191ad
  419131:	mov    fs,WORD PTR [ecx-0x51]
  419134:	mov    dl,0x4b
  419136:	mov    ebx,0xc67ff00d
  41913b:	ficom  DWORD PTR [edx-0x4f9604b2]
  419141:	outs   dx,BYTE PTR ds:[esi]
  419142:	push   eax
  419143:	and    eax,0xb536e80a
  419148:	sub    al,0x5d
  41914a:	xchg   ebp,eax
  41914b:	add    al,0xd6
  41914d:	mov    esp,0x60d113e6
  419152:	pop    ecx
  419153:	clc    
  419154:	mov    al,ds:0x5eec378d
  419159:	fcom   DWORD PTR ds:0xb1aa71a8
  41915f:	imul   ebp,DWORD PTR [edx+0x57],0x6f
  419163:	sbb    DWORD PTR [ecx-0x5b],ecx
  419166:	xchg   DWORD PTR [ebx+0x21],esp
  419169:	and    DWORD PTR [edi],esi
  41916b:	retf   0xeaea
  41916e:	inc    ebx
  41916f:	jbe    0x4191a7
  419171:	icebp  
  419172:	ins    DWORD PTR es:[edi],dx
  419173:	sub    al,0x73
  419175:	ja     0x419184
  419177:	test   DWORD PTR [ebx+0x6],esi
  41917a:	adc    BYTE PTR [ecx+0x27],ah
  41917d:	xchg   edi,eax
  41917e:	adc    al,0x36
  419180:	fcomp  st(3)
  419182:	push   ss
  419183:	xchg   ebp,eax
  419184:	jno    0x419205
  419186:	loope  0x419202
  419188:	cwde   
  419189:	pop    ebx
  41918a:	jge    0x4191cf
  41918c:	pop    ebp
  41918d:	jmp    0x41912c
  41918f:	or     bh,dh
  419191:	shl    BYTE PTR [eax],cl
  419193:	sar    bl,1
  419195:	adc    DWORD PTR [ecx],0x7b537812
  41919b:	in     al,0xf9
  41919d:	push   ds
  41919e:	stos   DWORD PTR es:[edi],eax
  41919f:	mov    ds:0xd4709131,eax
  4191a4:	outs   dx,BYTE PTR ds:[esi]
  4191a5:	(bad)  
  4191a6:	mov    ebp,0xd6969d0e
  4191ab:	jbe    0x41918c
  4191ad:	xchg   DWORD PTR [esi+esi*1],edi
  4191b0:	fs jne 0x419142
  4191b3:	cwde   
  4191b4:	in     al,0xd1
  4191b6:	cmp    cl,BYTE PTR [ebx]
  4191b8:	and    ebp,eax
  4191ba:	shl    DWORD PTR [edi+0x4f7e41ec],1
  4191c0:	xchg   ebp,eax
  4191c1:	pop    ebx
  4191c2:	loop   0x419220
  4191c4:	fstp   DWORD PTR [edx-0x2baa8101]
  4191ca:	outs   dx,BYTE PTR ds:[esi]
  4191cb:	sub    ah,BYTE PTR [ebp-0x2b10f6f3]
  4191d1:	add    eax,0x20397608
  4191d6:	daa    
  4191d7:	adc    bl,BYTE PTR [ecx+edx*4-0xabbc36e]
  4191de:	daa    
  4191df:	jecxz  0x419257
  4191e1:	rcr    DWORD PTR [eax-0x795db326],0xd5
  4191e8:	mov    bh,0x4c
  4191ea:	adc    esp,DWORD PTR [edx+0x24]
  4191ed:	mov    eax,DWORD PTR [edx-0x7a767ed2]
  4191f3:	mov    eax,ds:0x3f8c199a
  4191f8:	sub    ecx,edi
  4191fa:	(bad)  
  4191fb:	sar    BYTE PTR [esi-0x35],1
  4191fe:	shl    DWORD PTR [esi],cl
  419200:	dec    edi
  419201:	cmp    edi,edi
  419203:	pop    ecx
  419204:	popa   
  419205:	and    ebx,eax
  419207:	dec    ebx
  419208:	mov    esp,0x82dee25b
  41920d:	push   ecx
  41920e:	mov    bl,0x2d
  419210:	and    BYTE PTR [edi-0x3f11f8e3],al
  419216:	and    esp,DWORD PTR [esi+eax*8]
  419219:	fldenv [ebx]
  41921b:	jns    0x41928c
  41921d:	push   es
  41921e:	and    eax,0x3c60ca44
  419223:	or     ah,ah
  419225:	ret    0xb9c4
  419228:	ins    DWORD PTR es:[edi],dx
  419229:	nop
  41922a:	mov    ?,WORD PTR [ecx-0x1]
  41922d:	cs jl  0x419200
  419230:	or     BYTE PTR [edi],dl
  419232:	pop    ebx
  419233:	test   eax,0x8d43b0e1
  419238:	or     eax,0x2a695081
  41923d:	das    
  41923e:	sub    al,0xe0
  419240:	xor    cl,BYTE PTR [ecx]
  419242:	in     al,0xec
  419244:	mov    dh,0xfc
  419246:	in     eax,dx
  419247:	and    ah,BYTE PTR [esi+ebx*2-0x1d]
  41924b:	popa   
  41924c:	arpl   WORD PTR ds:0xf8203c3d,si
  419252:	jmp    0xf240:0x79801310
  419259:	inc    ecx
  41925a:	nop
  41925b:	mov    bh,0x65
  41925d:	test   DWORD PTR [eax+0x2da86cde],esi
  419263:	fs push edi
  419265:	mov    dl,0x5e
  419267:	rcl    DWORD PTR [ebp+0x5f43612b],0x6e
  41926e:	cld    
  41926f:	(bad)  
  419270:	xor    edx,DWORD PTR [eax-0x33]
  419273:	outs   dx,BYTE PTR ds:[esi]
  419274:	inc    edx
  419275:	mov    al,0x51
  419277:	icebp  
  419278:	daa    
  419279:	pop    ecx
  41927a:	jg     0x41923b
  41927c:	(bad)  
  41927d:	adc    al,0x96
  41927f:	sub    cl,BYTE PTR [esp+eax*1]
  419282:	gs jp  0x4192a4
  419285:	hlt    
  419286:	inc    esi
  419287:	aaa    
  419288:	xchg   esi,eax
  419289:	leave  
  41928a:	call   0x8679:0x97574f44
  419291:	sti    
  419292:	scas   eax,DWORD PTR es:[edi]
  419293:	push   0xffffffb0
  419295:	nop
  419296:	outs   dx,DWORD PTR ds:[esi]
  419297:	mov    dh,0x4
  419299:	dec    esp
  41929a:	xchg   ecx,eax
  41929b:	das    
  41929c:	push   cs
  41929d:	cld    
  41929e:	lds    ebp,FWORD PTR [edi-0x5f8288fa]
  4192a4:	gs (bad) 
  4192a6:	dec    edi
  4192a7:	sub    dl,BYTE PTR [ecx]
  4192a9:	add    ebx,DWORD PTR [ebx+0x5b]
  4192ac:	rcr    DWORD PTR [eax+eiz*1+0x7f29890c],cl
  4192b3:	mov    DWORD PTR [ebp-0x65],esp
  4192b6:	ror    DWORD PTR [ebp+0x306137a0],0xf3
  4192bd:	test   eax,0x55a98908
  4192c2:	mov    ch,0xc2
  4192c4:	mov    ebx,cs
  4192c6:	mov    ch,dl
  4192c8:	adc    ecx,DWORD PTR [esp+edi*8+0x54d50744]
  4192cf:	(bad)  
  4192d0:	cs popa 
  4192d2:	inc    esp
  4192d3:	dec    edx
  4192d4:	in     al,dx
  4192d5:	repnz sbb eax,0x1f40c6c1
  4192db:	out    dx,eax
  4192dc:	cmp    DWORD PTR [edi+eax*4],esi
  4192df:	dec    eax
  4192e0:	sub    ebp,ebx
  4192e2:	push   edi
  4192e3:	mov    ds:0x92ab0bef,eax
  4192e8:	ja     0x41931d
  4192ea:	fisubr DWORD PTR [eax+eax*1]
  4192ed:	add    BYTE PTR [eax],al
  4192ef:	add    BYTE PTR [eax],al
  4192f1:	add    BYTE PTR [ebp+0xe],al
  4192f4:	retf   0xcb6c
  4192f7:	in     al,dx
  4192f8:	out    0x2f,eax
  4192fa:	dec    ecx
  4192fb:	add    eax,0x4995d81
  419300:	(bad)  [edx-0x2f]
  419303:	sgdtd  [eax]
  419306:	repnz add al,0x0
  419309:	add    BYTE PTR [ebx+0x42],ah
  41930c:	cmp    eax,0xc91365f0
  419311:	jle    0x41931b
  419313:	or     BYTE PTR [ebp+0x2a],dh
  419316:	pop    edi
  419317:	std    
  419318:	pusha  
  419319:	mov    edi,DWORD PTR [esi-0x62]
  41931c:	push   edx
  41931d:	retf   0x8ebe
  419320:	push   esi
  419321:	push   0xc0eede4f
  419326:	xlat   BYTE PTR ds:[ebx]
  419327:	pop    eax
  419328:	cmp    al,0xbf
  41932a:	mov    ss,esp
  41932c:	adc    edx,DWORD PTR [ecx-0x6b]
  41932f:	fdiv   QWORD PTR [edi]
  419331:	jmp    0x419309
  419333:	adc    edi,eax
  419335:	add    cl,BYTE PTR [esi]
  419337:	into   
  419338:	fdiv   QWORD PTR [ebp-0x157ccc40]
  41933e:	adc    BYTE PTR [esi-0x39],ah
  419341:	popf   
  419342:	in     eax,dx
  419343:	sbb    eax,0x9ad42c38
  419348:	loope  0x4192f3
  41934a:	outs   dx,DWORD PTR ds:[esi]
  41934b:	js     0x41936a
  41934d:	cmc    
  41934e:	push   cs
  41934f:	push   ebx
  419350:	mov    ds:0x8d34d23f,eax
  419355:	dec    esi
  419356:	xchg   ebp,eax
  419357:	sub    al,0x8c
  419359:	jnp    0x4192e8
  41935b:	out    0x9c,al
  41935d:	cmp    edx,DWORD PTR [edx-0x1dc2de06]
  419363:	xchg   edx,eax
  419364:	pop    ss
  419365:	cli    
  419366:	or     esp,DWORD PTR [eax-0x924b3d3]
  41936c:	pop    eax
  41936d:	shl    DWORD PTR [edi],0xed
  419370:	hlt    
  419371:	out    0x71,eax
  419373:	pop    eax
  419374:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419375:	std    
  419376:	xor    DWORD PTR [ebp+0x3c3dee2e],0xf23b9f49
  419380:	mov    ds:0xc4710b47,eax
  419385:	cmp    dl,BYTE PTR [esi-0x58eab6c6]
  41938b:	pop    ds
  41938c:	inc    edx
  41938d:	fild   DWORD PTR [edx+0x4d]
  419390:	mov    BYTE PTR [ebx-0x15],0xc7
  419394:	nop
  419395:	leave  
  419396:	push   ss
  419397:	lods   eax,DWORD PTR ds:[esi]
  419398:	rcl    ebx,1
  41939a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41939b:	cld    
  41939c:	mov    BYTE PTR [ebx+0x46229906],dh
  4193a2:	pushf  
  4193a3:	inc    ecx
  4193a4:	jp     0x419404
  4193a6:	call   0x298d:0xf1913e33
  4193ad:	sbb    eax,0xc917ee4
  4193b2:	or     ecx,DWORD PTR ds:0x1fd67235
  4193b8:	jnp    0x419439
  4193ba:	je     0x419417
  4193bc:	jnp    0x4193d4
  4193be:	mov    al,0x97
  4193c0:	jp     0x4193cc
  4193c2:	jmp    0x419371
  4193c4:	imul   BYTE PTR [eax-0x53]
  4193c7:	arpl   cx,ax
  4193c9:	xor    ebp,DWORD PTR [ecx-0x7776f65]
  4193cf:	xor    al,0x80
  4193d1:	popf   
  4193d2:	push   ebx
  4193d3:	dec    ecx
  4193d4:	dec    ecx
  4193d5:	cmp    eax,0xf9d59d1e
  4193da:	stos   BYTE PTR es:[edi],al
  4193db:	mov    ebx,0x11fe3f32
  4193e0:	rcr    bl,0x56
  4193e3:	xor    eax,0xa82953d7
  4193e8:	push   es
  4193e9:	icebp  
  4193ea:	add    dh,ch
  4193ec:	pop    esp
  4193ed:	sub    esi,DWORD PTR [edi-0x477cef03]
  4193f3:	fist   WORD PTR [esi]
  4193f5:	mov    edi,0x5cd6d5a0
  4193fa:	(bad)  
  4193fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4193fc:	pop    eax
  4193fd:	xor    BYTE PTR [edi-0x72],bh
  419400:	mov    ecx,0xe60ad3a9
  419405:	icebp  
  419406:	shr    eax,cl
  419408:	dec    edx
  419409:	sub    edi,DWORD PTR ds:0x6bf61e90
  41940f:	xor    DWORD PTR [ebx],eax
  419411:	shl    BYTE PTR [edx],cl
  419413:	fwait
  419414:	std    
  419415:	mov    esp,0x882ad49c
  41941a:	in     eax,0xee
  41941c:	adc    eax,DWORD PTR [ebp+0x2]
  41941f:	jae    0x4193d3
  419421:	mov    ecx,0x3fd4fe06
  419426:	jl     0x41945d
  419428:	outs   dx,DWORD PTR ds:[esi]
  419429:	jbe    0x419499
  41942b:	neg    BYTE PTR [edi]
  41942d:	ja     0x41949b
  41942f:	scas   eax,DWORD PTR es:[edi]
  419430:	xor    BYTE PTR [eax],ah
  419432:	in     al,dx
  419433:	aaa    
  419434:	mov    edi,DWORD PTR [ebx]
  419436:	rcl    BYTE PTR ds:0xa3d9bf1d,1
  41943c:	or     DWORD PTR [edx],esp
  41943e:	or     ch,BYTE PTR [edx+0x2a]
  419441:	sub    eax,0x62dca05
  419446:	xor    dh,BYTE PTR [esi-0x72]
  419449:	test   al,0xb4
  41944b:	mov    ds:0xdd2defd,al
  419450:	aas    
  419451:	ficomp DWORD PTR [esi+0xf]
  419454:	mov    ah,0xdf
  419456:	jb     0x41948a
  419458:	and    ah,BYTE PTR [ecx-0x2c]
  41945b:	into   
  41945c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41945d:	loope  0x41942a
  41945f:	sub    edi,esp
  419461:	xor    DWORD PTR [edi],edx
  419463:	fs dec ebp
  419465:	lahf   
  419466:	jp     0x4194a1
  419468:	out    0x67,eax
  41946a:	imul   edx,edx,0x888835e2
  419470:	or     eax,0x7bd4417b
  419475:	pop    esi
  419476:	cmp    BYTE PTR [ebx-0x21db958f],0x44
  41947d:	lock shl BYTE PTR [edi],cl
  419480:	(bad)  
  419481:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419483:	xchg   DWORD PTR [ebx],edx
  419485:	add    eax,0x6f2ebf13
  41948a:	xlat   BYTE PTR ds:[ebx]
  41948b:	push   edx
  41948c:	push   cs
  41948d:	mov    cl,0xf3
  41948f:	push   eax
  419490:	fs pop edi
  419492:	leave  
  419493:	call   0xed42:0x26dd4f66
  41949a:	jmp    0x419464
  41949c:	je     0x419445
  41949e:	int    0xa
  4194a0:	mov    edx,0x8404d82a
  4194a5:	push   edx
  4194a6:	imul   ebp,DWORD PTR [edi],0x7907bedb
  4194ac:	xchg   BYTE PTR [edx],cl
  4194ae:	mov    DWORD PTR [edx+0x2c],edi
  4194b1:	sub    BYTE PTR [esi-0x38],ah
  4194b4:	sbb    edi,DWORD PTR [edx+edx*8+0x30]
  4194b8:	cmp    cl,bl
  4194ba:	and    al,0xa6
  4194bc:	xor    ebx,esp
  4194be:	out    dx,al
  4194bf:	add    esp,DWORD PTR ds:0x1ced3fde
  4194c5:	sub    eax,0xd4832267
  4194ca:	push   edx
  4194cb:	inc    ecx
  4194cc:	xchg   edx,eax
  4194cd:	das    
  4194ce:	cs jno 0x4194b8
  4194d1:	leave  
  4194d2:	icebp  
  4194d3:	pop    esi
  4194d4:	xor    DWORD PTR [eax+0x3],esi
  4194d7:	or     al,BYTE PTR [ebp-0x389fc264]
  4194dd:	push   es
  4194de:	mov    eax,ds:0x77bb944a
  4194e3:	aaa    
  4194e4:	sub    al,BYTE PTR [ebp+0x46539a19]
  4194ea:	fs jle 0x419510
  4194ed:	sbb    eax,esi
  4194ef:	cld    
  4194f0:	dec    edx
  4194f1:	cli    
  4194f2:	mov    al,ds:0x2e11e336
  4194f7:	pop    ecx
  4194f8:	adc    al,0x88
  4194fa:	pop    ecx
  4194fb:	int3   
  4194fc:	mov    ecx,0xdbcafa79
  419501:	les    esi,FWORD PTR [ecx]
  419503:	les    ebx,FWORD PTR [edx-0x3b]
  419506:	lahf   
  419507:	mov    WORD PTR [eax+0x3f],?
  41950a:	cmp    BYTE PTR [ebp+0x6d330716],dh
  419510:	jmp    0xcb8442eb
  419515:	dec    ecx
  419516:	paddq  mm2,mm1
  419519:	ja     0x4194b8
  41951b:	outs   dx,BYTE PTR ds:[esi]
  41951c:	or     eax,0xc4b18904
  419521:	jns    0x41954c
  419523:	and    eax,DWORD PTR [edi]
  419525:	dec    BYTE PTR ds:0xc0ab155a
  41952b:	sbb    DWORD PTR [ecx-0x76],edx
  41952e:	push   ebx
  41952f:	add    BYTE PTR [edi],bh
  419531:	mov    dh,0x29
  419533:	adc    ch,0x2e
  419536:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419537:	out    dx,eax
  419538:	pop    ebp
  419539:	dec    ebp
  41953a:	js     0x419567
  41953c:	sub    DWORD PTR [esi-0x783d0914],0x546bdb6c
  419546:	dec    esp
  419547:	mov    ah,BYTE PTR [ecx-0xca1143a]
  41954d:	addr16 inc ebp
  41954f:	or     BYTE PTR [ebx],0x80
  419552:	(bad)  
  419553:	in     eax,dx
  419554:	(bad)  
  419555:	repz je 0x419513
  419558:	mov    cl,0x87
  41955a:	push   ebp
  41955b:	add    ebp,ebp
  41955d:	or     DWORD PTR [ebx-0x5be7886f],0x7b
  419564:	iret   
  419565:	mov    ebx,0xa3f411e
  41956a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41956b:	push   es
  41956c:	in     al,0x4c
  41956e:	shl    BYTE PTR [ebp-0x68],cl
  419571:	push   edx
  419572:	lahf   
  419573:	jmp    0x46f0:0x8d6a195d
  41957a:	nop
  41957b:	mov    BYTE PTR [edi+0x5f],bh
  41957e:	jo     0x41955a
  419580:	into   
  419581:	dec    edi
  419582:	fs mov edx,0x610a84cc
  419588:	add    al,0xb7
  41958a:	cmc    
  41958b:	sbb    eax,0xf3a18f77
  419590:	add    ebp,esp
  419592:	sbb    ah,bl
  419594:	and    al,BYTE PTR [esi+0x4676d162]
  41959a:	cli    
  41959b:	lock out 0xe3,al
  41959e:	ds pop edi
  4195a0:	scas   eax,DWORD PTR es:[edi]
  4195a1:	js     0x419579
  4195a3:	or     eax,0xe12c3c8e
  4195a8:	xchg   ecx,eax
  4195a9:	xor    eax,0x14844885
  4195ae:	cmp    BYTE PTR [edi],al
  4195b0:	mov    ds:0x5abf8c3b,eax
  4195b5:	adc    eax,0x8691238b
  4195ba:	push   eax
  4195bb:	in     al,0xd4
  4195bd:	loope  0x4195e7
  4195bf:	gs mov dl,0xb2
  4195c2:	mov    al,ds:0x33c9489b
  4195c7:	imul   esp,DWORD PTR [edx],0xffffffa7
  4195ca:	imul   esi,DWORD PTR [ebx],0x361e6483
  4195d0:	mov    dh,0x24
  4195d2:	sbb    al,0xaa
  4195d4:	in     eax,dx
  4195d5:	ret    0xfda0
  4195d8:	add    edx,DWORD PTR [ebx]
  4195da:	mov    dh,0x15
  4195dc:	pop    ds
  4195dd:	popa   
  4195de:	mov    edi,0x21c2d242
  4195e3:	mov    cl,0xa
  4195e5:	push   edx
  4195e6:	sbb    BYTE PTR [edi],0xe7
  4195e9:	loopne 0x419641
  4195eb:	imul   esi,DWORD PTR [ebx],0xffffffb3
  4195ee:	cdq    
  4195ef:	jae    0x419576
  4195f1:	cld    
  4195f2:	inc    esp
  4195f3:	fimul  WORD PTR ds:[edi]
  4195f6:	and    ebp,DWORD PTR [ebx]
  4195f8:	push   esp
  4195f9:	ins    DWORD PTR es:[edi],dx
  4195fa:	shl    DWORD PTR [edi-0x39],0xae
  4195fe:	sbb    DWORD PTR [edx+eax*4],0xffffffb4
  419602:	jne    0x41960c
  419604:	shr    DWORD PTR [edi+0x15f7adea],1
  41960a:	sub    eax,0x61d2293c
  41960f:	ja     0x419640
  419611:	mov    ebx,0x8418b083
  419616:	lods   eax,DWORD PTR ds:[esi]
  419617:	mov    cl,0x3a
  419619:	sub    eax,DWORD PTR [ebx]
  41961b:	adc    DWORD PTR [edx],esp
  41961d:	(bad)  
  41961e:	aad    0x1
  419620:	sub    eax,0x7ad8569e
  419625:	jecxz  0x41962f
  419627:	neg    DWORD PTR [eax]
  419629:	int3   
  41962a:	inc    edi
  41962b:	pop    ecx
  41962c:	test   BYTE PTR [esi-0x6436dd81],0xfa
  419633:	mov    ch,0x4f
  419635:	mov    al,ds:0xe977753a
  41963a:	fidivr WORD PTR [edi-0x52843f54]
  419640:	sub    DWORD PTR [eax-0x47ca4537],ecx
  419646:	jmp    0x419673
  419648:	xchg   BYTE PTR [eax+edi*4-0x43],bh
  41964c:	inc    edi
  41964d:	jge    0x419619
  41964f:	jge    0x4195ec
  419651:	sbb    al,0xf1
  419653:	jb     0x4196c3
  419655:	cmp    esi,DWORD PTR [eax+edi*2-0x22e72c7]
  41965c:	in     al,dx
  41965d:	push   cs
  41965e:	rcr    BYTE PTR [ecx-0x44],0xe5
  419662:	iret   
  419663:	enter  0xc12c,0x13
  419667:	sub    al,0x53
  419669:	rcl    BYTE PTR [edx-0xb],0x20
  41966d:	popa   
  41966e:	adc    ch,BYTE PTR [edi-0x3b8983b]
  419674:	shl    BYTE PTR [edi-0x4cd7c9a5],0x5a
  41967b:	sahf   
  41967c:	cmp    al,BYTE PTR ds:0x9519c2ea
  419682:	neg    BYTE PTR [ebp-0x36]
  419685:	aas    
  419686:	int    0xb
  419688:	jo     0x4196bf
  41968a:	cmp    eax,0xffec7c1c
  41968f:	fdiv   QWORD PTR [edx+edx*1-0x4b]
  419693:	pop    ecx
  419694:	pop    ebx
  419695:	inc    esp
  419696:	jecxz  0x4196e4
  419698:	repz dec esi
  41969a:	out    dx,al
  41969b:	mov    dh,bl
  41969d:	int3   
  41969e:	xlat   BYTE PTR ds:[ebx]
  41969f:	cmc    
  4196a0:	jno    0x419624
  4196a2:	shl    ah,1
  4196a4:	mov    ds:0x87c80375,eax
  4196a9:	and    al,0x6e
  4196ab:	aaa    
  4196ac:	ss jae 0x4196c5
  4196af:	ins    DWORD PTR es:[edi],dx
  4196b0:	cmp    eax,0xe9953911
  4196b5:	jbe    0x419658
  4196b7:	pop    ds
  4196b8:	outs   dx,BYTE PTR ds:[esi]
  4196b9:	cmp    ecx,ebx
  4196bb:	ins    BYTE PTR es:[edi],dx
  4196bc:	out    dx,eax
  4196bd:	or     al,0x39
  4196bf:	push   edi
  4196c0:	add    ebx,ebp
  4196c2:	jno    0x419654
  4196c4:	fimul  WORD PTR fs:[ebx-0x65]
  4196c8:	adc    DWORD PTR [esi-0x2bddc14a],esi
  4196ce:	test   eax,0x944e0a73
  4196d3:	(bad)  
  4196d4:	stc    
  4196d5:	mov    al,0x33
  4196d7:	fild   DWORD PTR [ecx-0x5ad3da2f]
  4196dd:	(bad)  
  4196de:	mov    ecx,0x6653c218
  4196e3:	test   BYTE PTR [ecx+0x53687e3d],0xe8
  4196ea:	sbb    DWORD PTR [ebx+0x1e],ecx
  4196ed:	dec    ecx
  4196ee:	pop    DWORD PTR [edx]
  4196f0:	lods   al,BYTE PTR ds:[esi]
  4196f1:	lock and DWORD PTR ds:0x8de930f3,esi
  4196f8:	aad    0x3a
  4196fa:	push   esi
  4196fb:	(bad)  
  4196fc:	lahf   
  4196fd:	popf   
  4196fe:	jecxz  0x41968d
  419700:	mov    bh,0xbb
  419702:	xlat   BYTE PTR ds:[ebx]
  419703:	mov    edi,DWORD PTR [ecx-0x4e61511]
  419709:	in     al,dx
  41970a:	mov    eax,ds:0x6a82fb73
  41970f:	adc    esp,0x33
  419712:	test   al,0xe7
  419714:	pop    ebp
  419715:	rcl    DWORD PTR [ecx+0x4c],cl
  419718:	xor    esp,DWORD PTR [esi+0x63541e02]
  41971e:	mov    edx,0xce136fce
  419723:	ret    
  419724:	sbb    DWORD PTR [edx-0x34],esi
  419727:	rcr    BYTE PTR [esi-0x541fec3],cl
  41972d:	jmp    0xb011ecbb
  419732:	loopne 0x4196b9
  419734:	in     al,0x74
  419736:	push   es
  419737:	and    esp,DWORD PTR [ebp-0x6d]
  41973a:	push   edi
  41973b:	cmc    
  41973c:	jo     0x41975d
  41973e:	or     BYTE PTR [ebx-0x6ca9a479],dh
  419744:	jnp    0x41974b
  419746:	div    BYTE PTR [edx+0x3c]
  419749:	and    al,0xf1
  41974b:	add    BYTE PTR [eax-0x36b627e9],al
  419751:	push   esi
  419752:	bound  esi,QWORD PTR [edi+0x3f2ea6bc]
  419758:	mov    bl,0x9a
  41975a:	aas    
  41975b:	(bad)  
  41975c:	jp     0x419742
  41975e:	pop    ebx
  41975f:	sbb    eax,0xebcb25d8
  419764:	mov    WORD PTR [ebx],fs
  419766:	std    
  419767:	hlt    
  419768:	mov    WORD PTR [ebp-0x5b8f78d4],ds
  41976e:	jl     0x4196f5
  419770:	fisttp WORD PTR [esi+0x7b04610e]
  419776:	test   ch,bl
  419778:	(bad)  
  419779:	and    edx,edx
  41977b:	mov    DWORD PTR [edi+ebx*4-0x6efc5207],esi
  419782:	xor    eax,0x93e1c6f5
  419787:	nop
  419788:	stc    
  419789:	xor    BYTE PTR [edx+0xc5767e8],0xef
  419790:	inc    esi
  419791:	loopne 0x41979f
  419793:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419794:	and    eax,0x2681b2af
  419799:	xchg   edx,eax
  41979a:	ja     0x41977e
  41979c:	popf   
  41979d:	(bad)  
  41979e:	fmul   st(0),st
  4197a0:	and    al,0x0
  4197a2:	mov    ds:0x986f40fb,al
  4197a7:	jns    0x4197e0
  4197a9:	inc    esi
  4197aa:	xchg   edx,eax
  4197ab:	or     DWORD PTR [edx],eax
  4197ad:	and    al,0x78
  4197af:	sub    ch,BYTE PTR ds:0xa2a405ad
  4197b5:	fstp   QWORD PTR [ebx-0x34]
  4197b8:	jns    0x4197a4
  4197ba:	mov    ds:0x6f542503,eax
  4197bf:	add    ah,bl
  4197c1:	ja     0x41977e
  4197c3:	rcl    DWORD PTR [edx-0x61],1
  4197c6:	jl     0x4197ff
  4197c8:	inc    ebp
  4197c9:	add    eax,0x26c87ad1
  4197ce:	xor    esi,DWORD PTR [eiz*1+0x47708bbb]
  4197d5:	fwait
  4197d6:	adc    ah,dh
  4197d8:	stos   BYTE PTR es:[edi],al
  4197d9:	xchg   esi,eax
  4197da:	dec    eax
  4197db:	popa   
  4197dc:	xchg   ecx,eax
  4197dd:	jns    0x4197f7
  4197df:	dec    esp
  4197e0:	mov    ebp,0xa08700a4
  4197e5:	ds dec edi
  4197e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4197e8:	jb     0x4197f8
  4197ea:	push   ss
  4197eb:	adc    ebp,ebp
  4197ed:	int    0x3d
  4197ef:	sub    BYTE PTR [ebp+0x16],al
  4197f2:	mov    ah,0x19
  4197f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4197f5:	lahf   
  4197f6:	lock js 0x41981f
  4197f9:	loope  0x419842
  4197fb:	add    eax,0x0
  419800:	add    BYTE PTR [eax],al
  419802:	adc    al,0xe9
  419804:	je     0x41982a
  419806:	std    
  419807:	mov    ebp,0x2ac7f954
  41980c:	(bad)  
  41980d:	rcl    BYTE PTR [edx-0x3cad5bcb],1
  419813:	adc    al,0x1
  419815:	add    dl,dh
  419817:	add    al,0x0
  419819:	add    ch,cl
  41981b:	jmp    ebp
  41981d:	xchg   ebp,eax
  41981e:	outs   dx,DWORD PTR ds:[esi]
  41981f:	dec    ebx
  419820:	fcmovb st,st(3)
  419822:	push   ss
  419823:	stc    
  419824:	call   0xc845:0x41088909
  41982b:	pop    ebp
  41982c:	test   DWORD PTR [eax],eax
  41982e:	push   ebp
  41982f:	mov    esp,0xe026e6aa
  419834:	push   ebx
  419835:	xchg   ebp,eax
  419836:	push   ecx
  419837:	pop    edx
  419838:	sbb    DWORD PTR [edi],0xffffffe0
  41983b:	pusha  
  41983c:	pop    ss
  41983d:	pop    es
  41983e:	inc    esp
  41983f:	and    eax,0x28e36095
  419844:	mov    ebp,0xf2ceee2d
  419849:	lds    esp,FWORD PTR [eax-0x7d]
  41984c:	inc    esp
  41984d:	pop    ds
  41984e:	cmc    
  41984f:	pop    es
  419850:	pop    edx
  419851:	push   ebx
  419852:	daa    
  419853:	xor    DWORD PTR [edi],esi
  419855:	xlat   BYTE PTR ds:[ebx]
  419856:	mov    al,0xe4
  419858:	add    BYTE PTR [ebx-0x6f],al
  41985b:	and    edi,eax
  41985d:	dec    ebx
  41985e:	xchg   edx,eax
  41985f:	adc    al,BYTE PTR [ebp+0x7c]
  419862:	mov    edi,0x31f6cbaf
  419867:	ja     0x41985d
  419869:	push   0x38d7c6c7
  41986e:	fsubr  DWORD PTR es:[ecx]
  419871:	add    eax,0xd8129391
  419876:	cmp    edx,DWORD PTR [eax]
  419878:	pop    es
  419879:	call   0x71556ea2
  41987e:	lods   eax,DWORD PTR ds:[esi]
  41987f:	and    al,0xb6
  419881:	mov    ah,dl
  419883:	call   0xf4c3b14b
  419888:	xchg   DWORD PTR [eax],ebp
  41988a:	sbb    eax,0xa2ba43b9
  41988f:	add    BYTE PTR [esp+eiz*2],bl
  419892:	call   0xa43c:0xfb88fa2b
  419899:	xchg   DWORD PTR [edi],edx
  41989b:	xor    eax,esp
  41989d:	mov    esp,edi
  41989f:	xor    esi,edx
  4198a1:	jmp    DWORD PTR [edi+0xd70aac]
  4198a7:	and    BYTE PTR [edi-0x4dbedcc],0xdb
  4198ae:	iret   
  4198af:	sub    DWORD PTR [ebx],esi
  4198b1:	arpl   WORD PTR [edi-0xe],sp
  4198b4:	leave  
  4198b5:	jmp    0x888bb3cb
  4198ba:	sbb    ah,BYTE PTR [esi+0x40]
  4198bd:	iret   
  4198be:	aad    0x62
  4198c0:	call   0x8dfd:0x1b87292b
  4198c7:	lahf   
  4198c8:	sbb    BYTE PTR [edx+0x4f3821e6],0x2f
  4198cf:	push   edx
  4198d0:	xor    dh,bh
  4198d2:	mov    ds:0x5d8a4f13,eax
  4198d7:	xchg   esi,eax
  4198d8:	push   ss
  4198d9:	std    
  4198da:	das    
  4198db:	ffree  st(7)
  4198dd:	mov    ds:0x10f9add1,al
  4198e2:	iret   
  4198e3:	in     eax,0x32
  4198e5:	jmp    0x5ee4:0xd5aa0174
  4198ec:	repnz (bad) 
  4198ee:	scas   al,BYTE PTR es:[edi]
  4198ef:	inc    esi
  4198f0:	ins    DWORD PTR es:[edi],dx
  4198f1:	(bad)  
  4198f2:	fdivr  DWORD PTR [edx]
  4198f4:	sbb    edi,DWORD PTR [esi+ebp*2+0x67]
  4198f8:	lods   eax,DWORD PTR ds:[esi]
  4198f9:	lods   eax,DWORD PTR ds:[esi]
  4198fa:	test   dl,bh
  4198fc:	ret    
  4198fd:	inc    edx
  4198fe:	inc    esi
  4198ff:	fdiv   st(6),st
  419901:	mov    ds:0x869d2ad1,al
  419906:	pusha  
  419907:	sub    bl,ah
  419909:	pop    ecx
  41990a:	das    
  41990b:	int3   
  41990c:	dec    eax
  41990d:	fisub  WORD PTR [edx+0x586b0db0]
  419913:	bound  edi,QWORD PTR [ecx+edx*1-0x34]
  419917:	sbb    BYTE PTR [esi-0x7cd35ddf],bl
  41991d:	sub    eax,0x961f2197
  419922:	and    al,0x38
  419924:	in     eax,dx
  419925:	mov    bh,0x29
  419927:	fisttp DWORD PTR [ebx]
  419929:	add    DWORD PTR [edx+0x65],0x3d82381c
  419930:	mov    al,0x2
  419932:	mov    ds,WORD PTR [ecx]
  419934:	adc    ebx,edx
  419936:	inc    edx
  419937:	inc    esp
  419938:	mov    dh,0x7c
  41993a:	arpl   WORD PTR [ebp-0x6c],bx
  41993d:	push   edi
  41993e:	mov    ecx,0x6bd81cb6
  419943:	(bad)  
  419944:	cmp    edi,DWORD PTR [edx+0x47]
  419947:	cmp    al,0xc
  419949:	stos   BYTE PTR es:[edi],al
  41994a:	mov    bl,0x38
  41994c:	icebp  
  41994d:	into   
  41994e:	ficomp DWORD PTR [eax-0x5c4cc3fa]
  419954:	loope  0x4198df
  419956:	ror    DWORD PTR [ebp+0x3c],0x78
  41995a:	bound  esi,QWORD PTR [ecx+0x58f6b0a]
  419960:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419961:	sti    
  419962:	je     0x419974
  419964:	sbb    DWORD PTR [eax+0x2f5ab4ae],esp
  41996a:	(bad)  
  41996b:	jne    0x41997e
  41996d:	pop    esi
  41996e:	fld    QWORD PTR [edx-0x7bd84a2d]
  419974:	lds    ebp,FWORD PTR [esp+ecx*4+0xd]
  419978:	das    
  419979:	sub    eax,0xb6e665de
  41997e:	test   al,0xee
  419980:	sbb    al,0x30
  419982:	or     al,0x86
  419984:	dec    esp
  419985:	aas    
  419986:	test   al,0xda
  419988:	mov    dl,0x40
  41998a:	mov    esi,0x13a6cc3c
  41998f:	jae    0x419979
  419991:	add    edx,ebx
  419993:	ret    
  419994:	scas   al,BYTE PTR es:[edi]
  419995:	outs   dx,DWORD PTR ds:[esi]
  419996:	sub    ebx,DWORD PTR [edx]
  419998:	jo     0x41998f
  41999a:	mov    ecx,0x2bbbe31a
  41999f:	sub    BYTE PTR [eax+0x518490b0],bh
  4199a5:	cmp    BYTE PTR [eax],dl
  4199a7:	cli    
  4199a8:	retf   
  4199a9:	rcl    esp,0x52
  4199ac:	add    BYTE PTR [ebx+0x7d8750b],al
  4199b2:	mov    ch,0xad
  4199b4:	push   eax
  4199b5:	mov    cl,BYTE PTR [edi+0x5d]
  4199b8:	(bad)  
  4199b9:	adc    DWORD PTR [esp+ecx*8+0x52],0x5f
  4199be:	xchg   ecx,eax
  4199bf:	out    0x9e,ax
  4199c2:	daa    
  4199c3:	mov    dl,0x58
  4199c5:	xchg   edi,eax
  4199c6:	cdq    
  4199c7:	dec    eax
  4199c8:	sub    al,0x8a
  4199ca:	daa    
  4199cb:	jo     0x419971
  4199cd:	jne    0x4199ac
  4199cf:	push   0x87622cc7
  4199d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4199d5:	push   0x1555c67
  4199da:	int    0xc0
  4199dc:	xor    BYTE PTR es:[ebx],ah
  4199df:	or     al,0x1e
  4199e1:	leave  
  4199e2:	sbb    cl,BYTE PTR [ebp-0x61]
  4199e5:	(bad)  
  4199e6:	stos   DWORD PTR es:[edi],eax
  4199e7:	nop
  4199e8:	int3   
  4199e9:	xchg   BYTE PTR [edx],bh
  4199eb:	addr16 mov ebx,0x6b44401f
  4199f1:	and    eax,0xf6f85a2
  4199f6:	data16 jmp 0x4199d0
  4199f9:	mov    ?,WORD PTR [eax]
  4199fb:	mov    esp,0xee43d049
  419a00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419a01:	dec    ebx
  419a02:	je     0x419a52
  419a04:	call   0x721407b6
  419a09:	inc    ebp
  419a0a:	xor    al,0xb3
  419a0c:	and    BYTE PTR [edi-0x12],ah
  419a0f:	mov    WORD PTR [edx+edi*2-0x67],?
  419a13:	lock sbb al,bl
  419a16:	xchg   edx,eax
  419a17:	bound  esi,QWORD PTR [esi+ecx*8]
  419a1a:	xor    BYTE PTR [edx+0x73],ah
  419a1d:	mov    dl,0x56
  419a1f:	and    BYTE PTR [edx+0x4d27578c],dl
  419a25:	outs   dx,DWORD PTR ds:[esi]
  419a26:	mov    cl,0xf5
  419a28:	dec    edi
  419a29:	mov    al,ds:0x9836cf75
  419a2e:	gs stos BYTE PTR es:[edi],al
  419a30:	jle    0x4199e7
  419a32:	inc    ecx
  419a33:	inc    edi
  419a34:	call   0x4ee800d9
  419a39:	xchg   ecx,eax
  419a3a:	test   DWORD PTR [eax+0x72f5a50d],0x2317478e
  419a44:	in     eax,dx
  419a45:	sbb    al,0x36
  419a47:	add    al,BYTE PTR [edi+0x2ee070ea]
  419a4d:	fisttp DWORD PTR [ecx+0x540ae057]
  419a53:	popf   
  419a54:	movsx  ebp,BYTE PTR [edx+0x384a1b94]
  419a5b:	pushf  
  419a5c:	sti    
  419a5d:	pop    esp
  419a5e:	mov    eax,ds:0xacbcd1cc
  419a63:	xchg   esi,eax
  419a64:	mov    ch,0xf2
  419a66:	and    cl,bl
  419a68:	(bad)  
  419a69:	xor    esp,ebx
  419a6b:	(bad)  
  419a6c:	jl     0x419a27
  419a6e:	nop
  419a6f:	cmp    al,0x3d
  419a71:	cmp    DWORD PTR [edx],edi
  419a73:	push   esp
  419a74:	adc    al,cl
  419a76:	sahf   
  419a77:	mov    dl,0xed
  419a79:	fiadd  WORD PTR [ebp-0x22]
  419a7c:	scas   eax,DWORD PTR es:[edi]
  419a7d:	pop    eax
  419a7e:	imul   edi,DWORD PTR [edx],0xffffffb9
  419a81:	sahf   
  419a82:	mov    esp,0x5e43d2f2
  419a87:	mov    bl,0x4b
  419a89:	push   0xe43f2ed6
  419a8e:	xchg   edi,eax
  419a8f:	out    dx,eax
  419a90:	jno    0x419acd
  419a92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419a93:	sbb    BYTE PTR [edx-0x77d4c5a4],al
  419a99:	push   edi
  419a9a:	pop    ebx
  419a9b:	jmp    0x419a2d
  419a9d:	les    ebp,FWORD PTR [ebx]
  419a9f:	cli    
  419aa0:	pusha  
  419aa1:	jbe    0x419a95
  419aa3:	stc    
  419aa4:	sub    ebp,DWORD PTR [edi+eax*2+0x10452ac1]
  419aab:	or     eax,0x3ca58e1d
  419ab0:	cmp    bl,bl
  419ab2:	and    ebp,esp
  419ab4:	cmp    al,0x59
  419ab6:	fcmovb st,st(0)
  419ab8:	pop    es
  419ab9:	sar    BYTE PTR [ebp+0x6d],1
  419abc:	pop    edi
  419abd:	jg     0x419af4
  419abf:	dec    esp
  419ac0:	jl     0x419aae
  419ac2:	dec    al
  419ac4:	mov    bl,0xc4
  419ac6:	and    al,0x6e
  419ac8:	push   cs
  419ac9:	cmp    eax,0x8c376681
  419ace:	jge    0x419af3
  419ad0:	(bad)
  419ad3:	daa    
  419ad4:	cdq    
  419ad5:	mov    ds:0x6f596246,al
  419ada:	pop    ss
  419adb:	jb     0x419b22
  419add:	in     al,dx
  419ade:	jmp    0xb42b6365
  419ae3:	mov    DWORD PTR [edx-0x49],edx
  419ae6:	mov    edx,0x8fb73583
  419aeb:	xor    eax,0xb69a89b8
  419af0:	inc    eax
  419af1:	(bad)  
  419af2:	jmp    0xd03648ae
  419af7:	test   BYTE PTR [ebp-0x4cb629c8],bh
  419afd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419afe:	fucomip st,st(6)
  419b00:	and    BYTE PTR [ecx+0x42],bh
  419b03:	adc    al,0xd0
  419b05:	(bad)  
  419b06:	loop   0x419b3c
  419b08:	xlat   BYTE PTR ds:[ebx]
  419b09:	jns    0x419a8e
  419b0b:	push   eax
  419b0c:	mov    ebx,0xe0ea64a7
  419b11:	xchg   edx,eax
  419b12:	je     0x419af1
  419b14:	pop    ss
  419b15:	xchg   ebx,eax
  419b16:	adc    esp,ebx
  419b18:	aam    0x43
  419b1a:	or     DWORD PTR [esi-0x5fd73837],ecx
  419b20:	shl    DWORD PTR [ebx+0x30],cl
  419b23:	sbb    cl,dl
  419b25:	sub    al,0x9d
  419b27:	sahf   
  419b28:	push   cs
  419b29:	and    al,BYTE PTR ds:0x6a53675
  419b2f:	cli    
  419b30:	push   eax
  419b31:	enter  0x6b6c,0x17
  419b35:	aaa    
  419b36:	pop    ss
  419b37:	or     esi,DWORD PTR [ebp-0x370ffa79]
  419b3d:	ja     0x419b4f
  419b3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419b40:	jne    0x419b15
  419b42:	jb     0x419b81
  419b44:	mov    ecx,0xf4641f5d
  419b49:	dec    eax
  419b4a:	das    
  419b4b:	mov    ch,0x5c
  419b4d:	jo     0x419af6
  419b4f:	jmp    0xc8bc3026
  419b54:	loopne 0x419b89
  419b56:	push   es
  419b57:	inc    edi
  419b58:	inc    edi
  419b59:	cmp    ebx,DWORD PTR [ebx-0x18]
  419b5c:	test   DWORD PTR [eax-0x6b8c8952],ecx
  419b62:	repnz std 
  419b64:	mov    dl,0xe5
  419b66:	jl     0x419b20
  419b68:	iret   
  419b69:	xchg   ebp,eax
  419b6a:	ss loop 0x419bd8
  419b6d:	mov    esi,DWORD PTR [eax+0x53]
  419b70:	sbb    al,0x3d
  419b72:	pop    es
  419b73:	shr    DWORD PTR [esi+0xb],cl
  419b76:	mov    ch,0xcd
  419b78:	xchg   BYTE PTR [ebp+0x4f],cl
  419b7b:	(bad)  
  419b7c:	xor    DWORD PTR [ebp+edi*2+0x59],0xffffffcb
  419b81:	aaa    
  419b82:	add    DWORD PTR [ebx],0xc6ab59ba
  419b88:	xchg   edx,eax
  419b89:	and    al,0x3
  419b8b:	loopne 0x419be1
  419b8d:	or     DWORD PTR [ebx+0x34],edi
  419b90:	shl    ebp,cl
  419b92:	push   ebx
  419b93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419b94:	adc    al,0x64
  419b96:	fidiv  DWORD PTR [edi]
  419b98:	inc    eax
  419b99:	sub    cl,cl
  419b9b:	push   ebp
  419b9c:	pusha  
  419b9d:	sbb    eax,0x7de4bcc4
  419ba2:	hlt    
  419ba3:	mov    esi,0x7d161b19
  419ba8:	adc    al,0x4d
  419baa:	loop   0x419bed
  419bac:	fstp   TBYTE PTR [ecx]
  419bae:	mov    ch,0xcf
  419bb0:	dec    ecx
  419bb1:	repnz mov edi,0x75eb9859
  419bb7:	cmp    bl,BYTE PTR [edi+edi*2+0x26adce15]
  419bbe:	rol    DWORD PTR [ebp-0x22],cl
  419bc1:	mov    bl,0x2b
  419bc3:	add    esp,DWORD PTR [edi-0x38]
  419bc6:	into   
  419bc7:	popa   
  419bc8:	inc    esi
  419bc9:	test   eax,0x48649225
  419bce:	push   ecx
  419bcf:	jae    0x419b76
  419bd1:	or     eax,0xa8cc1e51
  419bd6:	mov    ch,0x5
  419bd8:	call   0x91841abf
  419bdd:	in     al,dx
  419bde:	out    0xf0,al
  419be0:	retf   
  419be1:	jb     0x419c4b
  419be3:	push   0x467cb5cf
  419be8:	mov    ds:0x174f7cc9,al
  419bed:	out    dx,al
  419bee:	into   
  419bef:	stos   DWORD PTR es:[edi],eax
  419bf0:	adc    cl,BYTE PTR ds:0x3d478f7e
  419bf6:	jbe    0x419c3a
  419bf8:	adc    BYTE PTR [ebx+eiz*1+0x76849804],bl
  419bff:	mov    ds:0x6e8c6ac6,al
  419c04:	hlt    
  419c05:	repnz mov edx,0xedf6d05e
  419c0b:	sbb    al,0x26
  419c0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419c0e:	pop    es
  419c0f:	inc    ecx
  419c10:	xchg   ecx,eax
  419c11:	fist   WORD PTR [esi+0x25]
  419c14:	test   DWORD PTR [edx],ecx
  419c16:	and    BYTE PTR [eax+0x63],dh
  419c19:	pop    ds
  419c1a:	ret    
  419c1b:	inc    esi
  419c1c:	and    bh,BYTE PTR [ebp-0x6024bd40]
  419c22:	pop    es
  419c23:	push   ebp
  419c24:	inc    ebx
  419c25:	shr    BYTE PTR [esi],0x9c
  419c28:	pop    ds
  419c29:	shl    BYTE PTR [ebp+eax*4-0x72b68bce],0x3
  419c31:	sbb    eax,0xb84d21f8
  419c36:	cli    
  419c37:	or     al,0xb4
  419c39:	pop    esi
  419c3a:	xor    DWORD PTR [eax-0x2c3db993],esi
  419c40:	push   ecx
  419c41:	sbb    eax,0xa1ba2128
  419c46:	movzx  ecx,WORD PTR [edi+0xa6cd09b]
  419c4d:	add    dh,BYTE PTR [ebx-0x46]
  419c50:	jb     0x419c5e
  419c52:	mov    esp,0x1093f8d1
  419c57:	adc    ebp,DWORD PTR [esi]
  419c59:	mov    ds:0x5e764878,eax
  419c5e:	outs   dx,BYTE PTR ds:[esi]
  419c5f:	xor    BYTE PTR [ebp+eax*4+0x34],0x3d
  419c64:	mov    es,WORD PTR [ebx+0x3b]
  419c67:	and    ebx,ebp
  419c69:	cmc    
  419c6a:	scas   eax,DWORD PTR es:[edi]
  419c6b:	stos   BYTE PTR es:[edi],al
  419c6c:	xlat   BYTE PTR ds:[ebx]
  419c6d:	mov    ds:0xb9e5d149,al
  419c72:	mov    edx,0xec8dee26
  419c77:	xchg   esp,eax
  419c78:	ficom  WORD PTR [ebp+0x5c]
  419c7b:	sub    ebx,DWORD PTR [ecx+eax*4+0x47]
  419c7f:	ror    BYTE PTR [ebx],1
  419c81:	mov    bh,0x1b
  419c84:	ja     0x419cba
  419c86:	popa   
  419c87:	mov    eax,0xb5ac5694
  419c8c:	jae    0x419cba
  419c8e:	fwait
  419c8f:	(bad)  
  419c90:	adc    dh,ah
  419c92:	fisttp DWORD PTR [ecx-0x2]
  419c95:	call   0xb852:0x8e9b7ad1
  419c9c:	sbb    al,BYTE PTR [edx+esi*8-0x72eb7485]
  419ca3:	mov    esi,0xfac51a6a
  419ca8:	cwde   
  419ca9:	jae    0x419c9d
  419cab:	nop
  419cac:	dec    esp
  419cad:	test   esp,0x959a75bb
  419cb3:	in     al,dx
  419cb4:	ret    
  419cb5:	push   esi
  419cb6:	std    
  419cb7:	adc    eax,0x562e4f1a
  419cbc:	xchg   ebp,eax
  419cbd:	inc    esi
  419cbe:	jne    0x419d13
  419cc0:	xor    al,0x17
  419cc2:	lods   al,BYTE PTR ds:[esi]
  419cc3:	adc    al,0xca
  419cc5:	enter  0xfaf8,0xbc
  419cc9:	je     0x419c6a
  419ccb:	adc    eax,0x2081a9fd
  419cd0:	fwait
  419cd1:	jne    0x419ca3
  419cd3:	pop    eax
  419cd4:	std    
  419cd5:	cmc    
  419cd6:	pusha  
  419cd7:	sub    eax,0x9d803758
  419cdc:	sar    DWORD PTR [ebx+ebx*1+0x3643558d],cl
  419ce3:	pop    ebx
  419ce4:	and    ebp,DWORD PTR [edx+0x35]
  419ce7:	xor    ah,0x1d
  419cea:	outs   dx,DWORD PTR ds:[esi]
  419ceb:	mov    edx,0xb14a5b97
  419cf0:	neg    DWORD PTR [ebp+0x6b]
  419cf3:	loope  0x419cfa
  419cf5:	mov    ch,BYTE PTR [esi*8-0x1dfbab76]
  419cfc:	mov    esp,0x43f0760f
  419d01:	add    eax,0x14ecd5c7
  419d06:	int3   
  419d07:	dec    esi
  419d08:	pop    ds
  419d09:	inc    edi
  419d0a:	(bad)  
  419d0b:	jo     0x419d0d
  419d0d:	add    BYTE PTR [eax],al
  419d0f:	add    BYTE PTR [eax],al
  419d11:	add    BYTE PTR [eax-0x329b3fbb],cl
  419d17:	in     eax,0xac
  419d19:	in     eax,dx
  419d1a:	or     dh,BYTE PTR [ebp+0x7bb077c]
  419d20:	and    edx,0x119b5
  419d26:	repnz add al,0x0
  419d29:	add    BYTE PTR [edi-0x3aa941e1],bl
  419d2f:	or     al,0xb7
  419d31:	lods   al,BYTE PTR ds:[esi]
  419d32:	inc    ecx
  419d33:	mov    ebp,0x989354d5
  419d38:	idiv   DWORD PTR ds:0xbe6f7531
  419d3e:	jmp    0x721b:0x2b1635cb
  419d45:	cmp    edi,DWORD PTR [edi-0xf]
  419d48:	mov    ds:0x39bdcab3,al
  419d4d:	rcl    BYTE PTR [esi+eiz*4-0x4c261dc3],0x27
  419d55:	mov    es,ecx
  419d57:	and    DWORD PTR [edx-0x6b],esp
  419d5a:	jle    0x419d0d
  419d5c:	imul   ebp,esp,0x48
  419d5f:	sub    ebx,DWORD PTR [edi-0x344db4f7]
  419d65:	ror    DWORD PTR [ecx-0x5f],cl
  419d68:	std    
  419d69:	inc    ebp
  419d6a:	(bad)  
  419d6b:	(bad)  [eax]
  419d6d:	mov    ds:0xf9f89e4f,al
  419d72:	int3   
  419d73:	or     esp,DWORD PTR [edx+0x79]
  419d76:	and    ch,BYTE PTR [edi-0x40]
  419d79:	ins    DWORD PTR es:[edi],dx
  419d7a:	stos   BYTE PTR es:[edi],al
  419d7b:	xor    al,0xd2
  419d7d:	mov    esi,0x9d8c7713
  419d82:	mov    eax,0xd46ef444
  419d87:	add    al,0x3c
  419d89:	sbb    ebx,DWORD PTR [ecx+0x64]
  419d8c:	imul   ebx,eax,0xffffffe1
  419d8f:	(bad)  
  419d90:	je     0x419dac
  419d92:	xor    esi,DWORD PTR [ebp+0x278d0970]
  419d98:	aaa    
  419d99:	icebp  
  419d9a:	je     0x419d86
  419d9c:	jne    0x419d90
  419d9e:	div    BYTE PTR [esi-0x6d647bc2]
  419da4:	shr    DWORD PTR [ecx+ecx*2+0x57],1
  419da8:	jl     0x419e25
  419daa:	out    dx,eax
  419dab:	xlat   BYTE PTR ds:[ebx]
  419dac:	xchg   DWORD PTR [edx+0x3],edi
  419daf:	push   es
  419db0:	cld    
  419db1:	popf   
  419db2:	lods   eax,DWORD PTR ds:[esi]
  419db3:	cmp    ecx,edi
  419db5:	dec    ebx
  419db6:	test   BYTE PTR [edi],ah
  419db8:	add    DWORD PTR [ecx-0x4cdd3cf4],esp
  419dbe:	and    al,0x4a
  419dc0:	scas   eax,DWORD PTR es:[edi]
  419dc1:	push   ecx
  419dc2:	(bad)  
  419dc4:	pop    ds
  419dc5:	sub    al,0x7e
  419dc7:	push   es
  419dc8:	jb     0x419e3d
  419dca:	xor    BYTE PTR [ebp-0x6e],bl
  419dcd:	sbb    ah,BYTE PTR [ecx]
  419dcf:	cs sbb ah,ah
  419dd2:	xchg   DWORD PTR [ecx+0x16],ecx
  419dd5:	rep ins DWORD PTR es:[edi],dx
  419dd7:	jle    0x419dcb
  419dd9:	rcr    BYTE PTR [esi+0x2c3c487e],0xb2
  419de0:	fs clc 
  419de2:	jp     0x419e03
  419de4:	jecxz  0x419d9e
  419de6:	js     0x419e31
  419de8:	test   DWORD PTR [edx-0x61e025e2],edx
  419dee:	lods   al,BYTE PTR ds:[esi]
  419def:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419df0:	data16 mov WORD PTR [ecx],cs
  419df3:	sbb    al,dl
  419df5:	or     DWORD PTR [esi+0x6d],esp
  419df8:	je     0x419dae
  419dfa:	push   esp
  419dfb:	jbe    0x419e40
  419dfd:	pop    ecx
  419dfe:	adc    BYTE PTR [edi+0x4d],ch
  419e01:	loopne 0x419de0
  419e03:	push   0x4246ee28
  419e08:	and    ecx,ebp
  419e0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419e0b:	dec    edx
  419e0c:	dec    edx
  419e0d:	mov    al,0x72
  419e0f:	push   ss
  419e10:	push   ebx
  419e11:	lea    ebx,[edi]
  419e13:	push   ss
  419e14:	jb     0x419e5e
  419e16:	mov    WORD PTR [esi-0x25348063],fs
  419e1c:	jmp    0x419e75
  419e1e:	inc    ebx
  419e1f:	inc    edx
  419e20:	lahf   
  419e21:	repz ds idiv ax
  419e26:	inc    esp
  419e27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419e28:	or     dh,BYTE PTR [ebp-0xf]
  419e2b:	pop    ss
  419e2c:	xchg   ebx,eax
  419e2d:	outs   dx,DWORD PTR ds:[esi]
  419e2e:	inc    edx
  419e2f:	xchg   esi,eax
  419e30:	push   0x96a0b145
  419e35:	add    DWORD PTR [esi+0x72],edx
  419e38:	mov    WORD PTR ds:[eax-0x5cd2109e],?
  419e3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419e40:	dec    esp
  419e41:	push   ebp
  419e42:	sub    DWORD PTR [esi-0xe46c970],eax
  419e48:	sahf   
  419e49:	das    
  419e4a:	inc    edi
  419e4b:	test   BYTE PTR [eax+eiz*8+0x42d088c3],bh
  419e52:	and    edi,ecx
  419e54:	bound  edx,QWORD PTR [ebx-0x7d]
  419e57:	adc    DWORD PTR [esi+0x62],ebp
  419e5a:	push   ds
  419e5b:	fsub   QWORD PTR [ebx-0x36]
  419e5e:	ss mov al,0x46
  419e61:	jo     0x419e8d
  419e63:	outs   dx,BYTE PTR ds:[esi]
  419e64:	ror    edi,0xaf
  419e67:	aam    0x4
  419e69:	push   ss
  419e6a:	xor    eax,0xd17a9a7c
  419e6f:	arpl   WORD PTR [edi+0x59984978],bp
  419e75:	in     al,0x3d
  419e77:	mov    bl,0xb
  419e79:	push   esi
  419e7a:	pop    esp
  419e7b:	inc    esp
  419e7c:	iret   
  419e7d:	mov    bl,0x4b
  419e7f:	(bad)  
  419e81:	test   eax,0xe4335f4e
  419e86:	and    edi,DWORD PTR [ecx+0x3]
  419e89:	int    0x55
  419e8b:	sbb    bl,BYTE PTR [edx]
  419e8d:	leave  
  419e8e:	les    ebx,FWORD PTR [ebx+0x3a]
  419e91:	push   edx
  419e92:	in     al,0xd2
  419e94:	enter  0xe944,0x1a
  419e98:	lea    esp,[edi+0x67099166]
  419e9e:	mov    esp,0xd035c527
  419ea3:	lahf   
  419ea4:	ror    DWORD PTR [edx-0x59d2b670],0xa
  419eab:	ret    
  419eac:	add    al,0x3e
  419eae:	out    0xa1,eax
  419eb0:	xchg   edi,eax
  419eb1:	dec    ebp
  419eb2:	lods   al,BYTE PTR ds:[esi]
  419eb3:	mov    bh,0x78
  419eb5:	xchg   ebx,eax
  419eb6:	jnp    0x419ed8
  419eb8:	add    DWORD PTR [esi+0x6],edx
  419ebb:	jecxz  0x419f37
  419ebd:	adc    eax,0xf5e69c83
  419ec2:	and    al,dl
  419ec4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419ec5:	ss push eax
  419ec7:	sbb    DWORD PTR [eax],edi
  419ec9:	push   ecx
  419eca:	(bad)  [esi+eiz*8+0x1c]
  419ece:	popa   
  419ecf:	and    BYTE PTR [ecx-0x5c],dh
  419ed2:	dec    ecx
  419ed3:	mov    edx,0x8c151eb
  419ed8:	fldln2 
  419eda:	push   ebp
  419edb:	pop    edx
  419edc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419edd:	sub    ah,BYTE PTR [edi]
  419edf:	cmp    DWORD PTR [esi+0x52],0x2d168366
  419ee6:	xchg   ebx,eax
  419ee7:	(bad)  
  419ee8:	int    0x63
  419eea:	dec    ebp
  419eeb:	push   ds
  419eec:	lds    ecx,FWORD PTR [edx]
  419eee:	dec    DWORD PTR [eax]
  419ef0:	repnz retf 0xb60b
  419ef4:	into   
  419ef5:	jbe    0x419eb4
  419ef7:	out    dx,al
  419ef8:	stc    
  419ef9:	out    dx,eax
  419efa:	(bad)  
  419efb:	das    
  419efc:	std    
  419efd:	pop    ebp
  419efe:	out    dx,al
  419eff:	call   0xc297:0x2e40286f
  419f06:	inc    edi
  419f07:	out    dx,eax
  419f08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f09:	mov    ds:0xbb9a2529,eax
  419f0e:	add    DWORD PTR [ebp-0x1cc59e6e],edx
  419f14:	pop    edx
  419f15:	inc    esi
  419f16:	add    al,0x88
  419f18:	(bad)  
  419f19:	imul   ecx,ecx,0x76
  419f1c:	sub    DWORD PTR [esi+0x3a0fc25e],ecx
  419f22:	xchg   ebp,eax
  419f23:	mov    ds:0x4c9399ea,eax
  419f28:	cdq    
  419f29:	inc    ebx
  419f2a:	popf   
  419f2b:	iret   
  419f2c:	in     al,dx
  419f2d:	adc    eax,0x2a62f26e
  419f32:	sub    bh,BYTE PTR [ecx+ebp*1-0x72]
  419f36:	daa    
  419f37:	jns    0x419ecf
  419f39:	dec    eax
  419f3a:	into   
  419f3b:	(bad)  
  419f3c:	ret    
  419f3d:	ja     0x419f84
  419f3f:	stos   DWORD PTR es:[edi],eax
  419f40:	dec    ebx
  419f41:	std    
  419f42:	sub    ah,0x86
  419f45:	xchg   DWORD PTR [esi],eax
  419f47:	dec    edi
  419f48:	(bad)  
  419f49:	sti    
  419f4a:	push   0xffffff99
  419f4c:	out    0xab,eax
  419f4e:	cmp    eax,0xbedc4871
  419f53:	test   eax,0xcf267d3
  419f58:	or     bl,bl
  419f5a:	pop    esi
  419f5b:	add    DWORD PTR [ebx+eiz*1],0x66842e97
  419f62:	ins    BYTE PTR es:[edi],dx
  419f63:	pop    es
  419f64:	and    DWORD PTR [ecx+0x65],esp
  419f67:	pop    ebp
  419f68:	pop    ebx
  419f69:	(bad)  
  419f6a:	pop    esp
  419f6b:	(bad)
  419f70:	jl     0x419fc8
  419f72:	fsub   QWORD PTR [edx]
  419f74:	bound  ebx,QWORD PTR [ebx]
  419f76:	jmp    0x419fe9
  419f78:	daa    
  419f79:	and    esi,edi
  419f7b:	dec    edx
  419f7c:	add    DWORD PTR [eax+0x4e],ebp
  419f7f:	jnp    0x419f98
  419f81:	and    ch,cl
  419f83:	push   edx
  419f84:	and    cl,bh
  419f86:	cli    
  419f87:	xor    eax,0x4a8164d2
  419f8c:	dec    edx
  419f8d:	dec    esp
  419f8e:	mov    edi,0x9d4cad3a
  419f93:	loopne 0x419f5b
  419f95:	mov    edx,0xb5fd05b2
  419f9a:	jno    0x419f9b
  419f9c:	shl    BYTE PTR [ebx-0x7f1f5474],1
  419fa2:	addr16 pop esp
  419fa4:	loope  0x419f35
  419fa6:	jle    0x419f8a
  419fa8:	push   eax
  419fa9:	(bad)  
  419faa:	xor    ecx,DWORD PTR [ecx-0x28]
  419fad:	push   ebp
  419fae:	test   DWORD PTR [edx-0x8c631a4],eax
  419fb4:	and    esp,DWORD PTR [ebp+0x34]
  419fb7:	jmp    0x419fb1
  419fb9:	dec    esi
  419fba:	pop    edi
  419fbb:	sbb    al,0xc5
  419fbd:	(bad)  
  419fbe:	xlat   BYTE PTR ds:[ebx]
  419fbf:	ja     0x419f4f
  419fc1:	or     eax,0x775a0032
  419fc6:	scas   eax,DWORD PTR es:[edi]
  419fc7:	aaa    
  419fc8:	xor    eax,0x37260b52
  419fcd:	jmp    0x25e53f11
  419fd2:	ss add eax,0x71a0055d
  419fd8:	mov    edx,0xe93f28d9
  419fdd:	pusha  
  419fde:	push   ss
  419fdf:	push   esi
  419fe0:	fs out dx,al
  419fe2:	imul   esp,DWORD PTR [ebx-0x3ac2036],0xeadd2840
  419fec:	scas   ax,WORD PTR es:[edi]
  419fee:	pusha  
  419fef:	mov    esi,0x27a3137c
  419ff4:	dec    ebp
  419ff5:	sbb    DWORD PTR [edx+0x2e],ecx
  419ff8:	and    eax,0x11b11fc2
  419ffd:	mov    edi,?
  419fff:	jmp    0x419f9e
  41a001:	inc    eax
  41a002:	fcmovb st,st(0)
  41a004:	mov    ah,0xeb
  41a006:	mov    bl,0xf7
  41a008:	mov    dh,0x74
  41a00a:	push   ss
  41a00b:	js     0x41a05e
  41a00d:	test   BYTE PTR [ebx-0x9],ah
  41a010:	pop    ecx
  41a011:	les    ebp,FWORD PTR [ecx+0x17873b9e]
  41a017:	dec    edi
  41a018:	dec    ebx
  41a019:	hlt    
  41a01a:	nop
  41a01b:	out    dx,eax
  41a01c:	add    DWORD PTR [ebx],ebx
  41a01e:	out    dx,al
  41a01f:	sbb    eax,0x1881d3a1
  41a024:	les    ebp,FWORD PTR [edi+edi*1-0xc]
  41a028:	pop    esp
  41a029:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a02a:	pop    ebx
  41a02b:	mov    esi,0x315d51a5
  41a030:	stos   BYTE PTR es:[edi],al
  41a031:	pusha  
  41a032:	inc    eax
  41a033:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a034:	and    edi,edi
  41a036:	repnz (bad) 
  41a039:	loopne 0x419fed
  41a03b:	rcl    edi,cl
  41a03d:	mov    ecx,esi
  41a03f:	and    ebp,DWORD PTR [edx-0x3f]
  41a042:	dec    ebp
  41a043:	jne    0x41a05b
  41a045:	sub    DWORD PTR [ecx],ebx
  41a047:	and    BYTE PTR [ebx+ecx*8],ah
  41a04a:	jae    0x41a086
  41a04c:	(bad)  
  41a04e:	sti    
  41a04f:	jle    0x419fea
  41a051:	pushf  
  41a052:	jno    0x41a0a3
  41a054:	out    dx,al
  41a055:	cvttps2pi mm4,QWORD PTR [esi-0x38]
  41a059:	mov    cl,0xa8
  41a05b:	jo     0x41a011
  41a05d:	inc    edx
  41a05e:	jg     0x41a0cc
  41a060:	daa    
  41a061:	jns    0x41a0d5
  41a063:	sbb    ebp,edx
  41a065:	dec    eax
  41a066:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a067:	push   ebx
  41a068:	out    dx,eax
  41a069:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a06a:	pop    eax
  41a06b:	mov    bl,0x9
  41a06d:	cmp    al,0x83
  41a06f:	xchg   esp,eax
  41a070:	ins    DWORD PTR es:[edi],dx
  41a071:	daa    
  41a072:	fiadd  DWORD PTR [esi]
  41a074:	imul   ecx,ecx,0xffffffec
  41a077:	in     al,dx
  41a078:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a079:	shl    DWORD PTR [esi],1
  41a07b:	out    0x87,al
  41a07d:	sub    esp,DWORD PTR [edi+0x71c7e7b]
  41a083:	pop    ss
  41a084:	iret   
  41a085:	outs   dx,DWORD PTR ds:[esi]
  41a086:	sbb    eax,0x270050c6
  41a08b:	jecxz  0x41a016
  41a08d:	shl    BYTE PTR [ebp-0x4f],1
  41a090:	into   
  41a091:	mov    ebp,0xc74bc5a3
  41a096:	sbb    al,0xd4
  41a098:	add    DWORD PTR [ebx+esi*8+0x5],ecx
  41a09c:	xor    ebx,edx
  41a09e:	test   edi,0x2217e869
  41a0a4:	lea    edx,[esi-0x14]
  41a0a7:	lahf   
  41a0a8:	hlt    
  41a0a9:	je     0x41a084
  41a0ab:	out    0x5f,eax
  41a0ad:	inc    esp
  41a0ae:	lahf   
  41a0af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a0b0:	test   DWORD PTR [ebx],edi
  41a0b2:	in     eax,dx
  41a0b3:	addr16 loope 0x41a04d
  41a0b6:	add    al,cl
  41a0b8:	cli    
  41a0b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a0ba:	lock repnz cmp BYTE PTR [ecx+0xeca0990],al
  41a0c2:	xchg   BYTE PTR [edx-0x2c],dl
  41a0c5:	dec    ebp
  41a0c6:	fcom   DWORD PTR [edi+esi*8-0x2f7152]
  41a0cd:	rep lods eax,DWORD PTR ds:[esi]
  41a0cf:	test   BYTE PTR [ebx],bl
  41a0d1:	inc    ebp
  41a0d2:	jmp    0x803b:0x32fc72c9
  41a0d9:	fwait
  41a0da:	test   al,0xe9
  41a0dc:	mov    edx,0x1fbc000a
  41a0e1:	lock xchg edi,eax
  41a0e3:	addr16 mov ds:0x9ee0,al
  41a0e7:	jae    0x41a0ca
  41a0e9:	mov    BYTE PTR [eax],ch
  41a0eb:	xchg   edi,eax
  41a0ec:	push   ebx
  41a0ed:	int    0x13
  41a0ef:	xchg   ecx,eax
  41a0f0:	inc    ebx
  41a0f1:	leave  
  41a0f2:	leave  
  41a0f3:	xchg   esi,eax
  41a0f4:	add    bh,ch
  41a0f6:	retf   
  41a0f7:	adc    bh,dh
  41a0f9:	in     al,dx
  41a0fa:	sbb    cl,BYTE PTR [edx]
  41a0fc:	ss and al,0x63
  41a0ff:	shl    DWORD PTR [edi-0x72c75536],0xdc
  41a106:	ret    0x3fe6
  41a109:	and    BYTE PTR [edi+0x3393ed17],al
  41a10f:	jmp    0x3744:0x94f4411
  41a116:	retf   
  41a117:	lds    ebp,FWORD PTR ds:0xbea787ab
  41a11d:	mov    eax,ds:0xac444154
  41a122:	jle    0x41a0c8
  41a124:	add    cl,BYTE PTR [ecx]
  41a126:	sahf   
  41a127:	add    eax,0x1fb88bd2
  41a12c:	out    dx,eax
  41a12d:	(bad)  
  41a12e:	rol    ch,cl
  41a130:	cmp    ebx,DWORD PTR [esi-0x56]
  41a133:	xchg   esi,eax
  41a134:	iret   
  41a135:	je     0x41a0e0
  41a137:	pop    ecx
  41a138:	cmp    ecx,DWORD PTR [ebp-0xd8ea8ed]
  41a13e:	pop    esp
  41a13f:	or     eax,0xbf28ba4d
  41a144:	xchg   edi,eax
  41a145:	push   eax
  41a146:	mov    al,0xa3
  41a148:	(bad)  
  41a149:	sti    
  41a14a:	mov    edi,0xce78af82
  41a14f:	xor    ebx,DWORD PTR [eax-0x25]
  41a152:	int3   
  41a153:	(bad)  
  41a154:	xor    eax,DWORD PTR [ebx+ebp*1-0x43094b34]
  41a15b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a15c:	xor    DWORD PTR [ecx+edi*2+0x81dddd0],ecx
  41a163:	mov    ch,0x43
  41a165:	dec    esi
  41a166:	add    BYTE PTR [esi],cl
  41a168:	sub    BYTE PTR [eax+eiz*4-0x15],al
  41a16c:	xchg   ebx,eax
  41a16d:	mov    eax,0xc6c5ac18
  41a172:	xor    edi,DWORD PTR [ebx+ebx*4+0x6ced3a3d]
  41a179:	xor    dl,BYTE PTR [ebp-0x23ecf1cc]
  41a17f:	inc    ecx
  41a180:	sub    eax,0x7df15858
  41a185:	pop    ebp
  41a186:	ins    BYTE PTR es:[edi],dx
  41a187:	stos   BYTE PTR es:[edi],al
  41a188:	mov    ds:0xf8b5deab,al
  41a18d:	push   ds
  41a18e:	jmp    0x41a1be
  41a190:	or     dl,bl
  41a192:	push   0xd82b4854
  41a197:	fldenv [ebp-0x6d]
  41a19a:	rcr    BYTE PTR [eax],0x81
  41a19d:	pop    ebp
  41a19e:	ja     0x41a1c2
  41a1a0:	pop    esp
  41a1a1:	jp     0x41a13a
  41a1a3:	dec    ebp
  41a1a4:	in     al,dx
  41a1a5:	int    0x84
  41a1a7:	popf   
  41a1a8:	mov    DWORD PTR [edi],0xf5050c81
  41a1ae:	mov    ecx,0x1b3bc07e
  41a1b3:	mov    esp,0x72a1508
  41a1b8:	(bad)  
  41a1b9:	cmp    al,0x44
  41a1bb:	dec    ebx
  41a1bc:	int3   
  41a1bd:	sahf   
  41a1be:	retf   
  41a1bf:	fimul  WORD PTR [ebx-0x6]
  41a1c2:	jno    0x41a1b5
  41a1c4:	adc    cl,0xdb
  41a1c7:	popf   
  41a1c8:	(bad)  [ebp-0x35ee483c]
  41a1ce:	sub    ebx,DWORD PTR [edi-0x615cea3e]
  41a1d4:	lahf   
  41a1d5:	lods   eax,DWORD PTR ds:[esi]
  41a1d6:	jp     0x41a225
  41a1d8:	fidivr DWORD PTR [edi+0x6b]
  41a1db:	sahf   
  41a1dc:	(bad)  
  41a1de:	xor    eax,0xa4ba2472
  41a1e3:	pop    esp
  41a1e4:	ins    DWORD PTR es:[edi],dx
  41a1e5:	arpl   WORD PTR [edi+0x55],bx
  41a1e8:	imul   edi,DWORD PTR [esi+0x5b],0x4d
  41a1ec:	mov    eax,edi
  41a1ee:	mov    esp,0x218df7d8
  41a1f3:	out    dx,al
  41a1f4:	outs   dx,DWORD PTR ds:[esi]
  41a1f5:	jno    0x41a1d9
  41a1f7:	mov    edx,0xfefcfa30
  41a1fd:	stos   BYTE PTR es:[edi],al
  41a1fe:	loope  0x41a24d
  41a200:	les    ecx,FWORD PTR [ebx+0xd68c71a]
  41a206:	cs jg  0x41a27b
  41a209:	add    eax,DWORD PTR [ebp+0x5afcbf7e]
  41a20f:	mov    eax,ds:0xed80aaa6
  41a214:	(bad)  
  41a215:	xchg   esi,eax
  41a216:	push   edi
  41a217:	dec    edx
  41a218:	jmp    DWORD PTR [ecx+0xc112]
  41a21e:	add    BYTE PTR [eax],al
  41a220:	add    BYTE PTR [eax],al
  41a222:	sbb    BYTE PTR [ebp+0xe],dl
  41a225:	add    eax,0x5d1b5f4f
  41a22a:	lods   eax,DWORD PTR ds:[esi]
  41a22b:	test   al,0x5b
  41a22d:	shl    DWORD PTR gs:[edi+edi*4],1
  41a231:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  41a233:	push   ds
  41a234:	add    DWORD PTR [eax],eax
  41a236:	repnz add al,0x0
  41a239:	add    BYTE PTR [edx],dh
  41a23b:	jmp    DWORD PTR [edi-0x32]
  41a23e:	mov    al,0xbb
  41a240:	mov    esi,0xc5e3d55e
  41a245:	add    eax,0x65077985
  41a24a:	dec    ebx
  41a24b:	cmp    eax,0xdf1cc05f
  41a250:	cmp    ebp,DWORD PTR [edi+ebp*4+0x27]
  41a254:	ins    BYTE PTR es:[edi],dx
  41a255:	inc    esp
  41a256:	cmp    eax,DWORD PTR [esi-0x4bebbf1d]
  41a25c:	retf   0xe34b
  41a25f:	retf   
  41a260:	inc    esp
  41a261:	dec    edi
  41a262:	pop    ebp
  41a263:	daa    
  41a264:	xchg   BYTE PTR [edx+0x42],dh
  41a267:	push   ebp
  41a268:	mov    ds:0x8dab63fd,eax
  41a26d:	mov    DWORD PTR [eax+esi*4],ecx
  41a270:	mov    dh,0xb8
  41a272:	sub    dl,ah
  41a274:	pop    ds
  41a275:	and    eax,0xc1668ec7
  41a27a:	xchg   ebx,eax
  41a27b:	mov    dh,0xa8
  41a27d:	xchg   al,dh
  41a27f:	mov    bl,0xa6
  41a281:	and    eax,0xcdeb8d96
  41a286:	stos   DWORD PTR es:[edi],eax
  41a287:	(bad)
  41a28a:	or     eax,0xfa3cf7a1
  41a28f:	mov    eax,ds:0x6d7288ac
  41a294:	fld    DWORD PTR [ebp+edi*8-0x3f]
  41a298:	push   0xffffff8f
  41a29a:	add    bh,al
  41a29c:	cmp    DWORD PTR [edi],ebp
  41a29e:	xor    DWORD PTR [ecx-0x1c5c5d1e],0x3e
  41a2a5:	enter  0xb07c,0x22
  41a2a9:	repz mov al,ds:0xf6ab36d9
  41a2af:	adc    eax,0x696a6302
  41a2b4:	mov    ds:0x8a4311a1,eax
  41a2b9:	call   0x781:0x3e210b81
  41a2c0:	xchg   edi,esi
  41a2c2:	cmp    DWORD PTR [edi],esp
  41a2c4:	or     edi,DWORD PTR [esi-0x1e]
  41a2c7:	pop    ecx
  41a2c8:	xchg   ebp,eax
  41a2c9:	inc    ebp
  41a2ca:	fisubr WORD PTR [ecx+0x331b9d5]
  41a2d0:	mov    esi,0x624370a7
  41a2d5:	xchg   ecx,ecx
  41a2d7:	pop    es
  41a2d8:	ja     0x41a350
  41a2da:	mov    WORD PTR [edx+0x91112e3],cs
  41a2e0:	mov    esi,0x6e88f944
  41a2e5:	jge    0x41a337
  41a2e7:	ss pop eax
  41a2e9:	shl    DWORD PTR [edi+0x242edfdd],1
  41a2ef:	lods   eax,DWORD PTR ds:[esi]
  41a2f0:	sbb    al,0xcf
  41a2f2:	sbb    BYTE PTR [edx-0x25c42cab],ch
  41a2f8:	ins    DWORD PTR es:[edi],dx
  41a2f9:	fcmovbe st,st(0)
  41a2fb:	xchg   esi,eax
  41a2fc:	jns    0x41a2e1
  41a2fe:	fist   WORD PTR [edi]
  41a300:	mov    cl,0xf7
  41a302:	fdiv   QWORD PTR [ebp+0x1a]
  41a305:	pop    ebx
  41a306:	mov    eax,ds:0xadc66cbf
  41a30c:	xlat   BYTE PTR ds:[ebx]
  41a30d:	sub    BYTE PTR [edi],al
  41a30f:	cmp    ah,dh
  41a311:	(bad)  
  41a312:	pop    esi
  41a313:	pop    esi
  41a314:	mov    edi,0x4300660a
  41a319:	cmp    al,0xf7
  41a31b:	(bad)  
  41a31c:	pop    ss
  41a31d:	mov    bl,0xb
  41a31f:	bound  esi,QWORD PTR [edx]
  41a321:	cwde   
  41a322:	xchg   edx,eax
  41a323:	cli    
  41a324:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a325:	es stc 
  41a327:	mov    BYTE PTR [esi-0x6],bl
  41a32a:	sbb    BYTE PTR [edx-0x57],bh
  41a32d:	fsub   QWORD PTR [edx+0x3a861da7]
  41a333:	retf   0x3bb0
  41a336:	xchg   BYTE PTR [esi-0x41],cl
  41a339:	fst    QWORD PTR [ebx+0x32a6b04e]
  41a33f:	or     eax,0xbfedf1ae
  41a344:	cmp    bl,BYTE PTR [ebx+ecx*2-0x29]
  41a348:	adc    al,0xd1
  41a34a:	adc    BYTE PTR [edi-0x1744f39a],dh
  41a350:	xabort 0xc0
  41a353:	clc    
  41a354:	adc    eax,0xb96b6678
  41a359:	push   edi
  41a35a:	data16 sbb BYTE PTR [edx+0x4],al
  41a35e:	imul   ecx,DWORD PTR [eax+ebx*4],0xffffff8b
  41a362:	inc    esp
  41a363:	push   cs
  41a364:	sbb    edi,DWORD PTR [ebx+0x15]
  41a367:	xor    al,0xd6
  41a369:	in     al,dx
  41a36a:	mov    eax,0xbe07e61d
  41a36f:	jno    0x41a366
  41a371:	mov    ebp,0x68b09485
  41a376:	rcl    DWORD PTR [ebx-0xb9e030a],1
  41a37c:	mov    ecx,0xf4efcfe
  41a381:	cmp    DWORD PTR ds:0x500fa3cb,edx
  41a387:	xchg   esp,eax
  41a388:	(bad)  
  41a389:	rcr    DWORD PTR [ebx],1
  41a38b:	mov    fs,WORD PTR [esp+esi*8-0x56]
  41a38f:	ror    BYTE PTR [ebx+edx*8+0x2d],0x4b
  41a394:	std    
  41a395:	dec    eax
  41a396:	sub    dl,BYTE PTR [edx+0xe]
  41a399:	adc    ecx,DWORD PTR [edx+0x2fd25bc]
  41a39f:	fs enter 0x976a,0xa0
  41a3a4:	pop    eax
  41a3a5:	into   
  41a3a6:	cmp    dh,dh
  41a3a8:	or     ebp,DWORD PTR [ebx-0x5f808524]
  41a3ae:	dec    ecx
  41a3af:	push   cs
  41a3b0:	movups XMMWORD PTR [esi-0x194bcac0],xmm7
  41a3b7:	pop    eax
  41a3b8:	lods   eax,DWORD PTR ds:[esi]
  41a3b9:	xchg   edi,eax
  41a3ba:	adc    ecx,ebx
  41a3bc:	and    bl,BYTE PTR [eiz*2+0x290709a9]
  41a3c3:	cmp    esp,DWORD PTR [esp+eax*2-0x54]
  41a3c7:	jb     0x41a353
  41a3c9:	mov    al,ds:0x6257617
  41a3ce:	test   DWORD PTR [ebp+0x7b86f783],0x6086eaf
  41a3d8:	cmp    al,0xe5
  41a3db:	add    dl,BYTE PTR [edi]
  41a3dd:	les    esp,FWORD PTR [ebp+0x7]
  41a3e0:	jg     0x41a440
  41a3e2:	fisttp WORD PTR [ebx*2-0x1ade1f37]
  41a3e9:	out    0xa2,al
  41a3eb:	(bad)  
  41a3ec:	sbb    eax,0xa8c76fcc
  41a3f1:	pop    es
  41a3f2:	ds jmp 0x41a44b
  41a3f5:	inc    esp
  41a3f6:	pop    ecx
  41a3f7:	jo     0x41a46e
  41a3f9:	test   edi,0x7ba9a809
  41a3ff:	iret   
  41a400:	add    esi,DWORD PTR [edx+0x3c]
  41a403:	mov    edi,0x7c70ecf1
  41a408:	and    eax,0x53054766
  41a40d:	pop    ds
  41a40e:	sub    BYTE PTR [ebp+0x66],bl
  41a411:	sbb    DWORD PTR [ecx+0x55],edx
  41a414:	ins    DWORD PTR es:[edi],dx
  41a415:	dec    esp
  41a416:	sub    DWORD PTR [ecx+0x6fc2b981],esp
  41a41c:	sub    BYTE PTR [esi],0xca
  41a41f:	and    DWORD PTR [edx-0x696ac0a9],esi
  41a425:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a426:	cmp    edx,DWORD PTR [edi-0x67]
  41a429:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a42a:	test   DWORD PTR [ebp+0x23],0xab32d672
  41a431:	fidiv  DWORD PTR [esi+0x5d]
  41a434:	mov    ecx,0xe5d5541c
  41a439:	loope  0x41a3dc
  41a43b:	jle    0x41a46b
  41a43d:	cmp    dh,dl
  41a43f:	icebp  
  41a440:	jmp    DWORD PTR [edi+esi*1+0x16]
  41a444:	xchg   DWORD PTR [eax+0x2e],edx
  41a447:	ins    DWORD PTR es:[edi],dx
  41a448:	add    al,0x25
  41a44a:	pusha  
  41a44b:	das    
  41a44c:	loope  0x41a483
  41a44e:	add    eax,0x7feb5a01
  41a453:	iret   
  41a454:	sti    
  41a455:	aam    0xcd
  41a457:	out    0x6e,al
  41a459:	scas   al,BYTE PTR es:[edi]
  41a45a:	pusha  
  41a45b:	mov    WORD PTR [eax+0x6a8b6282],gs
  41a461:	push   esp
  41a462:	mov    dh,0x7c
  41a464:	xchg   esp,eax
  41a465:	sbb    al,0x6b
  41a467:	mov    dl,0xdd
  41a469:	mov    al,ds:0x171c09ad
  41a46e:	pop    edi
  41a46f:	and    DWORD PTR ss:[edx+0x414ac5f],eax
  41a476:	sahf   
  41a477:	add    al,0x3d
  41a479:	xchg   ebx,eax
  41a47a:	hlt    
  41a47b:	jp     0x41a4f9
  41a47d:	aad    0xd1
  41a47f:	jmp    0x41a493
  41a481:	imul   dh
  41a483:	mov    bh,ah
  41a485:	addr16 loop 0x41a4af
  41a488:	(bad)  
  41a48a:	xlat   BYTE PTR ds:[ebx]
  41a48b:	pop    edi
  41a48c:	cmp    al,0x22
  41a48e:	mov    eax,0xb3dc393f
  41a493:	dec    BYTE PTR [ebx-0x804f1b2]
  41a499:	lahf   
  41a49a:	push   eax
  41a49b:	adc    DWORD PTR [esi+0x65],ebp
  41a49e:	inc    esp
  41a49f:	mov    ds:0xf8b0986,al
  41a4a4:	adc    dh,BYTE PTR [esi+0x26]
  41a4a7:	adc    DWORD PTR [edi+0x1],0xbdb80f84
  41a4ae:	(bad)  
  41a4af:	loopne 0x41a488
  41a4b1:	mov    bl,0x51
  41a4b3:	sub    DWORD PTR [ebx+edx*1],edi
  41a4b6:	repnz lahf 
  41a4b8:	and    DWORD PTR [ecx+0x5d],ebp
  41a4bb:	xchg   BYTE PTR [edx],al
  41a4bd:	jp     0x41a46a
  41a4bf:	cmp    ebp,DWORD PTR [ebp+0x60]
  41a4c2:	or     eax,0x5a876d23
  41a4c7:	and    eax,DWORD PTR [ecx-0x563864e1]
  41a4cd:	dec    edx
  41a4ce:	fndisi(8087 only) 
  41a4d0:	push   0x38
  41a4d2:	pop    eax
  41a4d3:	ja     0x41a51f
  41a4d5:	and    DWORD PTR [ecx-0x16],eax
  41a4d8:	sbb    bl,cl
  41a4da:	icebp  
  41a4db:	jbe    0x41a4d6
  41a4dd:	fcomp  QWORD PTR [edx+ebp*8-0x2e241299]
  41a4e4:	(bad)  
  41a4e5:	and    BYTE PTR [esi],al
  41a4e7:	xchg   ebp,eax
  41a4e8:	out    dx,eax
  41a4e9:	bound  esi,QWORD PTR [eax-0x733fcac5]
  41a4ef:	mov    eax,ds:0x51ccfc1b
  41a4f4:	xor    al,0x8
  41a4f6:	sub    ah,BYTE PTR [bp-0x3844]
  41a4fb:	fild   DWORD PTR [ebx-0x15214f32]
  41a501:	nop
  41a502:	jge    0x41a580
  41a504:	mov    bh,0x5a
  41a506:	and    DWORD PTR [esp+ecx*1],eax
  41a509:	adc    edi,DWORD PTR [edx+ebx*4]
  41a50c:	aam    0x12
  41a50e:	mov    ebp,DWORD PTR [ebx+0x786305e8]
  41a514:	jmp    0xadf5c555
  41a519:	xchg   edx,eax
  41a51a:	popa   
  41a51b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a51c:	xchg   ecx,eax
  41a51d:	into   
  41a51e:	and    ch,ah
  41a520:	lea    esi,[ebx+0x40610f]
  41a526:	enter  0x5782,0x6d
  41a52a:	popf   
  41a52b:	push   ebp
  41a52c:	fwait
  41a52d:	stc    
  41a52e:	inc    edi
  41a52f:	or     bl,ah
  41a531:	aad    0x3
  41a533:	int    0x14
  41a535:	out    0x75,al
  41a537:	jp     0x41a50f
  41a539:	ds icebp 
  41a53b:	fucomip st,st(2)
  41a53d:	xor    esp,edx
  41a53f:	xchg   edx,eax
  41a540:	pop    ebp
  41a541:	cmc    
  41a542:	add    ch,ch
  41a544:	jmp    0x41a4f3
  41a546:	sar    BYTE PTR [ebp+0x7f691f3f],1
  41a54c:	loopne 0x41a5be
  41a54e:	and    cl,dh
  41a550:	xchg   esp,eax
  41a551:	sbb    eax,0x4d6c4274
  41a556:	bound  edi,QWORD PTR [ebx+0x517c308d]
  41a55c:	loope  0x41a532
  41a55e:	shl    BYTE PTR ss:[esi+0x25],cl
  41a562:	add    eax,0x9c798206
  41a567:	mov    ds,WORD PTR [esi-0x15c835dd]
  41a56d:	pushf  
  41a56e:	cli    
  41a56f:	or     BYTE PTR [ebp+0x69],0x16
  41a573:	xor    edi,DWORD PTR [ebx-0x2c5e6d8a]
  41a579:	sub    dh,dl
  41a57b:	dec    eax
  41a57c:	div    BYTE PTR ds:0x8f684ff6
  41a582:	sbb    esp,DWORD PTR [ebx-0x53ca2948]
  41a588:	sahf   
  41a589:	sub    al,BYTE PTR fs:[ecx-0x21338898]
  41a590:	ins    BYTE PTR es:[edi],dx
  41a591:	(bad)  
  41a592:	and    cl,BYTE PTR [eax]
  41a594:	retf   0xb2a
  41a597:	mov    edi,0xe7cb7bb5
  41a59c:	aad    0x4d
  41a59e:	sub    esp,DWORD PTR [ecx+ebp*8]
  41a5a1:	aad    0x5b
  41a5a3:	cmp    eax,0xdb970838
  41a5a8:	out    0x81,eax
  41a5aa:	test   DWORD PTR [edi+0x20b3e269],0x3262b760
  41a5b4:	push   edx
  41a5b5:	inc    ebp
  41a5b6:	inc    eax
  41a5b7:	mov    al,ds:0x8ea91278
  41a5bc:	js     0x41a63d
  41a5be:	gs cdq 
  41a5c0:	mov    al,ds:0x2d205985
  41a5c5:	test   al,0x40
  41a5c7:	mov    BYTE PTR [ecx-0x48],al
  41a5ca:	sbb    eax,0xaa68a7ef
  41a5cf:	jae    0x41a638
  41a5d1:	inc    esp
  41a5d2:	push   0xffffffe0
  41a5d4:	inc    edx
  41a5d5:	fld    DWORD PTR [ebx]
  41a5d7:	mov    esp,0x1b8cca9a
  41a5dc:	pop    edx
  41a5dd:	sub    al,0x98
  41a5df:	xor    edi,edx
  41a5e1:	ja     0x41a63a
  41a5e3:	test   BYTE PTR [eax+eiz*4-0x19b24f2b],cl
  41a5ea:	sub    al,0x85
  41a5ec:	and    bh,BYTE PTR [ebx]
  41a5ee:	mov    esp,0x3d6c1b97
  41a5f3:	into   
  41a5f4:	sub    BYTE PTR [ebp-0x36],cl
  41a5f7:	or     ah,bh
  41a5f9:	fnstsw WORD PTR [ecx-0x67]
  41a5fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a5fd:	push   es
  41a5fe:	jg     0x41a58c
  41a600:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a601:	lods   eax,DWORD PTR ds:[esi]
  41a602:	sahf   
  41a603:	jg     0x41a670
  41a605:	pop    eax
  41a606:	xor    BYTE PTR [ecx],bl
  41a608:	fs mov bl,0xf7
  41a60b:	ins    DWORD PTR es:[edi],dx
  41a60c:	clc    
  41a60d:	xchg   ebp,eax
  41a60e:	nop
  41a60f:	sub    ch,dl
  41a611:	sbb    BYTE PTR [ecx+edi*2+0x2],ch
  41a615:	ret    
  41a616:	pop    ecx
  41a617:	jmp    0x41a66a
  41a619:	jmp    0xc501:0x72de81fc
  41a620:	add    ah,BYTE PTR [ebp+0x1f]
  41a623:	pusha  
  41a624:	cli    
  41a625:	dec    eax
  41a626:	adc    BYTE PTR [edx+0x73],bh
  41a629:	mov    BYTE PTR [ebp-0x35],cl
  41a62c:	pop    ecx
  41a62d:	inc    esp
  41a62e:	(bad)  
  41a62f:	mov    ecx,0x98bc36af
  41a634:	dec    ebx
  41a635:	shl    BYTE PTR [ebx+ebx*2-0x2f40d4c6],1
  41a63c:	(bad)  
  41a63d:	call   0x7450:0xefd6435f
  41a644:	jnp    0x41a61d
  41a646:	int3   
  41a647:	mov    ebp,0xf45709fa
  41a64c:	ja     0x41a690
  41a64e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a64f:	loope  0x41a694
  41a651:	push   eax
  41a652:	pop    ecx
  41a653:	hlt    
  41a654:	push   es
  41a655:	imul   ebp,DWORD PTR [eax-0x67],0x6f
  41a659:	push   esp
  41a65a:	and    eax,0x9e77b1f9
  41a65f:	int    0x6d
  41a661:	cmp    BYTE PTR [ebp+0x2961e6db],bl
  41a667:	call   0x7c50da31
  41a66c:	inc    esp
  41a66d:	lock rcl cl,1
  41a670:	or     eax,0xdb7f8d50
  41a675:	fs mov edx,0xc791aa7e
  41a67b:	fwait
  41a67c:	xchg   esp,eax
  41a67d:	call   0x2bc2b49e
  41a682:	jo     0x41a6c7
  41a684:	mov    WORD PTR [esi+0xd74cbac],ds
  41a68a:	nop
  41a68b:	(bad)  
  41a68c:	cmp    BYTE PTR [ebp*8+0x58570945],dl
  41a693:	fild   WORD PTR ds:0xd41091dc
  41a699:	shl    DWORD PTR [esi-0x16459cb5],0x92
  41a6a0:	push   esi
  41a6a1:	mov    esp,0xe8855af0
  41a6a6:	and    DWORD PTR [esi],ebx
  41a6a8:	mov    dl,0x90
  41a6aa:	test   al,0x9
  41a6ac:	dec    esi
  41a6ad:	jo     0x41a6b7
  41a6af:	ret    
  41a6b0:	mov    fs,WORD PTR [esi-0x7a0ffc81]
  41a6b6:	jp     0x41a6af
  41a6b8:	(bad)  
  41a6b9:	jnp    0x41a702
  41a6bb:	pop    ss
  41a6bc:	pop    ebp
  41a6bd:	pop    edi
  41a6be:	cs in  eax,dx
  41a6c0:	(bad)  
  41a6c1:	cmp    BYTE PTR [eax],dh
  41a6c3:	adc    edi,DWORD PTR [bp-0x65]
  41a6c7:	jns    0x41a713
  41a6c9:	add    ebx,ebx
  41a6cb:	imul   edi,DWORD PTR [ebx],0xfffffffe
  41a6ce:	retf   0xbd8c
  41a6d1:	shl    DWORD PTR [ebx],cl
  41a6d3:	leave  
  41a6d4:	sbb    esi,ecx
  41a6d6:	jno    0x41a748
  41a6d8:	jnp    0x41a68b
  41a6da:	jmp    0x41a737
  41a6dc:	and    ah,al
  41a6de:	adc    DWORD PTR [edi],edx
  41a6e0:	shr    BYTE PTR [ebp+0x58316f82],0x5a
  41a6e7:	(bad)  
  41a6e8:	(bad)  
  41a6e9:	jle    0x41a693
  41a6eb:	out    dx,al
  41a6ec:	pop    esi
  41a6ed:	(bad)  
  41a6ee:	fiadd  WORD PTR [esi]
  41a6f0:	outs   dx,DWORD PTR ds:[esi]
  41a6f1:	ror    eax,0x2e
  41a6f4:	dec    eax
  41a6f5:	adc    eax,0x5a38e89a
  41a6fa:	jg     0x41a74a
  41a6fc:	jne    0x41a749
  41a6fe:	xchg   esp,eax
  41a6ff:	data16 and BYTE PTR [edi+0x37],ah
  41a703:	inc    edi
  41a704:	xchg   esp,eax
  41a705:	sbb    al,ah
  41a707:	push   ds
  41a708:	cmp    bh,BYTE PTR [eax]
  41a70a:	call   0xa05e:0x4ed60c6
  41a711:	jmp    0x8b33:0xa3aed3b0
  41a718:	push   cs
  41a719:	mov    ah,0xca
  41a71b:	sar    DWORD PTR [ebx-0x61847395],0xf3
  41a722:	shl    BYTE PTR [edi-0x3ab17c06],1
  41a728:	jmp    0x41a77f
  41a72a:	mov    edi,0x27
  41a72f:	add    BYTE PTR [eax],al
  41a731:	add    BYTE PTR [esi+0x6f],cl
  41a734:	je     0x41a75e
  41a736:	jne    0x41a773
  41a738:	pop    esi
  41a739:	outs   dx,DWORD PTR ds:[esi]
  41a73a:	out    dx,eax
  41a73b:	aaa    
  41a73c:	jae    0x41a716
  41a73e:	mov    al,ds:0x99971308
  41a743:	and    eax,DWORD PTR [ecx]
  41a745:	add    dl,dh
  41a747:	add    al,0x0
  41a749:	add    BYTE PTR [ecx-0x3d897c07],bh
  41a74f:	add    dh,BYTE PTR [ebx-0x4db9c664]
  41a755:	push   0x41d0f83
  41a75a:	dec    eax
  41a75b:	sub    BYTE PTR [edx-0xcac5835],bh
  41a761:	mov    esp,es
  41a763:	jmp    0x1426bb69
  41a768:	cmp    DWORD PTR [eax+0x2f],ecx
  41a76b:	imul   ebx,DWORD PTR [edi],0xb9ff7a96
  41a771:	cmp    ch,BYTE PTR [ecx]
  41a773:	xor    bl,BYTE PTR [ebx+0x6093f5f9]
  41a779:	or     al,0x4d
  41a77b:	mov    ch,0x40
  41a77d:	pop    ebx
  41a77e:	les    ebx,FWORD PTR [edi+ecx*1+0x6d]
  41a782:	outs   dx,BYTE PTR ds:[esi]
  41a783:	push   0xffffffeb
  41a785:	push   ss
  41a786:	add    eax,0xf42bc6ef
  41a78b:	aad    0xcf
  41a78d:	(bad)  
  41a78e:	out    0xc3,eax
  41a790:	ja     0x41a714
  41a792:	sbb    BYTE PTR ds:0x340ac50c,al
  41a798:	inc    esp
  41a799:	in     eax,0x70
  41a79b:	test   al,0xdc
  41a79d:	(bad)  
  41a79e:	cli    
  41a79f:	test   al,0xe8
  41a7a1:	into   
  41a7a2:	mov    cl,ch
  41a7a4:	cld    
  41a7a5:	mov    ebx,edi
  41a7a7:	and    al,0xc0
  41a7a9:	xchg   BYTE PTR [edi+0x17],bl
  41a7ac:	and    eax,0xe41a4e8b
  41a7b1:	push   edx
  41a7b2:	xor    ebx,ecx
  41a7b4:	pop    ss
  41a7b5:	(bad)  
  41a7b6:	mov    al,ds:0x3b7c12f5
  41a7bb:	aam    0xa9
  41a7bd:	xchg   ebp,eax
  41a7be:	sbb    BYTE PTR [ebx+0x4b],dl
  41a7c1:	inc    ecx
  41a7c2:	ins    BYTE PTR es:[edi],dx
  41a7c3:	xchg   ebx,eax
  41a7c4:	mov    cl,BYTE PTR [esi]
  41a7c6:	or     bh,ah
  41a7c8:	test   eax,0xede3ad57
  41a7cd:	adc    BYTE PTR [ecx-0x7e6f63b4],dh
  41a7d3:	xchg   ecx,eax
  41a7d4:	int    0xc3
  41a7d6:	lds    edi,FWORD PTR [ebp+eax*8+0x7b8178c]
  41a7dd:	std    
  41a7de:	(bad)  
  41a7df:	js     0x41a77e
  41a7e1:	xchg   edi,eax
  41a7e2:	das    
  41a7e3:	cli    
  41a7e4:	gs aam 0xc1
  41a7e7:	cmp    dl,cl
  41a7e9:	sub    BYTE PTR [edi],0xbe
  41a7ec:	xchg   ebp,eax
  41a7ed:	adc    ebx,DWORD PTR ds:0xccc52a9
  41a7f3:	inc    esp
  41a7f4:	(bad)  
  41a7f5:	ins    BYTE PTR es:[edi],dx
  41a7f6:	mov    ebp,0x137fd4d0
  41a7fb:	shl    BYTE PTR [eax+0x67],1
  41a7fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a7ff:	retf   
  41a800:	xor    bl,BYTE PTR [ecx-0x1f]
  41a803:	and    al,0x87
  41a805:	scas   al,BYTE PTR es:[edi]
  41a806:	mov    cl,bh
  41a808:	push   0x38
  41a80a:	pop    es
  41a80b:	add    edi,ecx
  41a80d:	test   al,0x8d
  41a80f:	in     al,0xb8
  41a811:	sub    al,0x8f
  41a813:	cs mov edi,0xcf7bf976
  41a819:	push   0xffffffb9
  41a81b:	mov    dl,0x44
  41a81d:	js     0x41a857
  41a81f:	inc    esi
  41a820:	mov    ebx,0x491dbfac
  41a825:	pop    edi
  41a826:	inc    ebx
  41a827:	mov    eax,ds:0x92c99c7
  41a82c:	jo     0x41a805
  41a82e:	sti    
  41a82f:	clc    
  41a830:	mov    ebx,0x55d4bd23
  41a835:	dec    edx
  41a836:	stc    
  41a837:	gs cmp al,0x8a
  41a83a:	xchg   ebx,eax
  41a83b:	mov    ds:0xe1d3577b,al
  41a840:	push   edi
  41a841:	pop    ebx
  41a842:	loop   0x41a85e
  41a844:	ins    DWORD PTR es:[edi],dx
  41a845:	test   DWORD PTR [ecx],eax
  41a847:	sub    al,0x54
  41a849:	aam    0xd0
  41a84b:	rcl    DWORD PTR [edx],0x22
  41a84e:	loope  0x41a7f2
  41a850:	adc    BYTE PTR [edx],0x7a
  41a853:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a854:	dec    ch
  41a856:	loope  0x41a865
  41a858:	cli    
  41a859:	adc    DWORD PTR [edx+edi*1],esp
  41a85c:	andps  xmm3,XMMWORD PTR [ebx+0xe]
  41a860:	inc    ebx
  41a861:	addr16 xchg edx,eax
  41a863:	fistp  DWORD PTR [edi]
  41a865:	mov    dh,0xcd
  41a867:	cs dec eax
  41a869:	nop
  41a86a:	sub    eax,0xb632aca1
  41a86f:	mov    bl,0xd6
  41a871:	mov    ebx,0x3baa0c
  41a876:	enter  0x148a,0xcc
  41a87a:	jne    0x41a8d8
  41a87c:	rol    BYTE PTR [edx],cl
  41a87e:	mov    al,0x76
  41a880:	jg     0x41a8eb
  41a882:	xor    esp,DWORD PTR [ecx-0x60]
  41a885:	shr    DWORD PTR [ecx],1
  41a887:	mov    esp,0x461136aa
  41a88c:	aam    0xec
  41a88e:	out    0x46,eax
  41a890:	outs   dx,DWORD PTR ds:[esi]
  41a891:	repz inc eax
  41a893:	dec    ebx
  41a894:	and    ah,dh
  41a896:	test   BYTE PTR [ebx+edx*2-0x48b943ba],bl
  41a89d:	or     BYTE PTR [esi+0x31],ch
  41a8a0:	push   0xe529987f
  41a8a5:	jbe    0x41a875
  41a8a7:	mov    fs,WORD PTR [eax+ebx*2+0x53]
  41a8ab:	xchg   ebp,eax
  41a8ac:	mov    bh,0x16
  41a8ae:	pushf  
  41a8af:	fisubr WORD PTR [edi]
  41a8b1:	jb     0x41a92f
  41a8b3:	pop    eax
  41a8b4:	repnz ds cmp al,0x4d
  41a8b8:	lock fcmovnb st,st(2)
  41a8bb:	pop    edi
  41a8bc:	pop    edx
  41a8bd:	lds    edi,FWORD PTR [ebx+0x2ed75980]
  41a8c3:	adc    al,BYTE PTR [edi]
  41a8c5:	cmp    eax,0xa4cc227a
  41a8ca:	or     bl,BYTE PTR [ebx]
  41a8cc:	or     al,al
  41a8ce:	lahf   
  41a8cf:	pop    edi
  41a8d0:	fstp   DWORD PTR [ecx]
  41a8d2:	in     al,0xb7
  41a8d4:	and    bl,BYTE PTR [ebx+ecx*2+0x4bcc5223]
  41a8db:	lock (bad) 
  41a8dd:	adc    cl,BYTE PTR [ebx+0x57]
  41a8e0:	stos   BYTE PTR es:[edi],al
  41a8e1:	mov    WORD PTR [esi+0xd95c794],ds
  41a8e7:	xor    al,0x69
  41a8e9:	mov    bl,0x67
  41a8eb:	pop    esp
  41a8ec:	hlt    
  41a8ed:	xchg   ecx,eax
  41a8ee:	lea    eax,[ebx+0x17]
  41a8f1:	pop    edx
  41a8f2:	mov    ch,BYTE PTR [ecx+0x6719b5d0]
  41a8f8:	mov    esp,0xfb8a953a
  41a8fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a8fe:	add    bh,BYTE PTR [eax-0x6de350c2]
  41a904:	ret    
  41a905:	sub    esp,ebx
  41a907:	ins    BYTE PTR es:[edi],dx
  41a908:	fdivr  QWORD PTR [eax+0x23e17e94]
  41a90e:	retf   
  41a90f:	and    eax,0x33e286ec
  41a914:	iret   
  41a915:	(bad)  
  41a916:	fst    QWORD PTR [eax]
  41a918:	nop
  41a919:	add    al,0xa
  41a91b:	push   0x292a14b9
  41a920:	push   ss
  41a921:	jge    0x41a939
  41a923:	daa    
  41a924:	je     0x41a8f7
  41a926:	jnp    0x41a921
  41a928:	add    BYTE PTR [edx+ecx*8-0x67db3281],0x22
  41a930:	std    
  41a931:	push   edi
  41a932:	dec    esi
  41a933:	fwait
  41a934:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a935:	and    eax,DWORD PTR [eax]
  41a937:	(bad)  
  41a938:	xchg   DWORD PTR [esi+0x503fbaca],ebp
  41a93e:	mov    ds:0xd0109a61,eax
  41a943:	retf   
  41a944:	in     eax,dx
  41a945:	inc    esi
  41a946:	dec    esp
  41a947:	xor    esp,DWORD PTR [edi+0x7]
  41a94a:	in     eax,dx
  41a94b:	iret   
  41a94c:	xchg   edi,eax
  41a94d:	ror    BYTE PTR [edx+0x4b],cl
  41a950:	and    BYTE PTR [ebp-0x1e],dh
  41a953:	add    eax,0x61c1732
  41a958:	inc    ecx
  41a959:	scas   al,BYTE PTR es:[edi]
  41a95a:	add    dl,BYTE PTR [ebx+0x6c72ee59]
  41a960:	(bad)  [ecx+0x3b]
  41a963:	pop    ebp
  41a964:	daa    
  41a965:	adc    DWORD PTR [edi],edx
  41a967:	mov    BYTE PTR [ecx+0x63f6dbe1],bl
  41a96d:	add    DWORD PTR [eax-0xffef805],eax
  41a973:	in     eax,dx
  41a974:	xor    BYTE PTR [edx-0x50],ah
  41a977:	test   BYTE PTR ds:0x96d5432a,bl
  41a97d:	xchg   DWORD PTR [ebx-0x65238b7],esp
  41a983:	leave  
  41a984:	mov    bl,0x4f
  41a986:	data16 std 
  41a988:	pop    ds
  41a989:	or     al,0xa8
  41a98b:	mov    al,0xc4
  41a98d:	repnz inc ebx
  41a98f:	add    eax,0x94dfcd47
  41a994:	dec    edi
  41a995:	sub    al,0x80
  41a997:	xor    al,0xbe
  41a999:	sub    al,0xeb
  41a99b:	std    
  41a99c:	ins    BYTE PTR es:[edi],dx
  41a99d:	ficom  WORD PTR [esi]
  41a99f:	test   eax,0xe7e509df
  41a9a4:	xor    al,0x82
  41a9a6:	rol    BYTE PTR [ebx+0x7e],cl
  41a9a9:	imul   esp,esp,0xffffffff
  41a9ac:	test   DWORD PTR [esi+0x4ee50e2d],esp
  41a9b2:	rol    DWORD PTR [eax-0x13],cl
  41a9b5:	cmp    DWORD PTR [eax],esp
  41a9b7:	in     eax,0xc8
  41a9b9:	test   eax,0xcd7ba5c1
  41a9be:	adc    eax,0x28884ef8
  41a9c3:	bound  ecx,QWORD PTR [esi-0x8f51ef3]
  41a9c9:	ins    BYTE PTR es:[edi],dx
  41a9ca:	test   ecx,esi
  41a9cc:	mov    eax,0xa72b04f3
  41a9d1:	jmp    0x6fb4:0xf3210036
  41a9d8:	sar    BYTE PTR [ebx-0x2492609b],0xe4
  41a9df:	fisub  DWORD PTR [ebx]
  41a9e1:	push   ds
  41a9e2:	pop    es
  41a9e3:	daa    
  41a9e4:	sub    eax,0xfa0f13d
  41a9e9:	test   eax,0x5d3b5c2a
  41a9ee:	mov    ebx,0x5651f276
  41a9f3:	fwait
  41a9f4:	int3   
  41a9f5:	sbb    ax,0x9198
  41a9f9:	push   cs
  41a9fa:	push   ss
  41a9fb:	push   cs
  41a9fc:	inc    ebx
  41a9fd:	ss pushf 
  41a9ff:	jg     0x41aa53
  41aa01:	mov    ah,0x81
  41aa03:	xor    ebx,DWORD PTR [eax]
  41aa05:	xchg   edx,eax
  41aa06:	mov    esp,0xa48e7ac3
  41aa0b:	fwait
  41aa0c:	enter  0x8be7,0xd5
  41aa10:	stos   DWORD PTR es:[edi],eax
  41aa11:	cmp    DWORD PTR [ecx+0x3b],edx
  41aa14:	ds push 0x64247847
  41aa1a:	jmp    0xa5e2af05
  41aa1f:	test   BYTE PTR [ecx+ebx*4-0x711a3c67],dh
  41aa26:	fcomp  QWORD PTR [edi]
  41aa28:	mov    al,ds:0xb2087460
  41aa2d:	stc    
  41aa2e:	xchg   ebp,eax
  41aa2f:	loopne 0x41aa55
  41aa31:	xor    esp,DWORD PTR [ebx+ecx*1+0x691b5c5d]
  41aa38:	(bad)  
  41aa39:	mov    dh,0x8c
  41aa3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aa3c:	fsub   st(2),st
  41aa3e:	xchg   BYTE PTR ss:[ecx],bh
  41aa41:	popf   
  41aa42:	loop   0x41a9db
  41aa44:	lods   eax,DWORD PTR ds:[esi]
  41aa45:	popa   
  41aa46:	dec    ebp
  41aa47:	push   ebx
  41aa48:	mov    ebx,0xab1e0115
  41aa4d:	fimul  WORD PTR [esi]
  41aa4f:	add    DWORD PTR [esi-0x4d],ebp
  41aa52:	stos   BYTE PTR es:[edi],al
  41aa53:	sub    BYTE PTR [eax+0x52f182a0],al
  41aa59:	out    0xee,eax
  41aa5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aa5c:	inc    esp
  41aa5d:	dec    ebx
  41aa5e:	icebp  
  41aa5f:	std    
  41aa60:	pushf  
  41aa61:	cld    
  41aa62:	mov    DWORD PTR [edx],edx
  41aa64:	push   0x695394ed
  41aa69:	cmp    DWORD PTR [ebp-0x6208e770],ebp
  41aa6f:	jnp    0x41aaab
  41aa71:	jno    0x41aa32
  41aa73:	leave  
  41aa74:	or     cl,dl
  41aa76:	mov    ecx,0xed4c6dd5
  41aa7b:	pop    ss
  41aa7c:	nop
  41aa7d:	jmp    0xf83c32
  41aa82:	dec    ebp
  41aa83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aa84:	int3   
  41aa85:	dec    ecx
  41aa86:	push   DWORD PTR [ebx]
  41aa88:	sub    al,0xd2
  41aa8a:	sar    edi,0x9d
  41aa8d:	dec    edi
  41aa8e:	or     ebx,DWORD PTR [esi+0x499e6048]
  41aa94:	pusha  
  41aa95:	mov    ds:0xcfdb4eb,al
  41aa9a:	pop    ss
  41aa9b:	xchg   edx,eax
  41aa9c:	(bad)  
  41aa9d:	imul   eax,eax,0x7b
  41aaa0:	lods   eax,DWORD PTR fs:[esi]
  41aaa2:	stos   BYTE PTR es:[edi],al
  41aaa3:	push   ds
  41aaa4:	mov    ds:0x3ffec699,eax
  41aaa9:	js     0x41aa3d
  41aaab:	(bad)
  41aaae:	add    al,0xbd
  41aab0:	clc    
  41aab1:	dec    esi
  41aab2:	in     al,dx
  41aab3:	cwde   
  41aab4:	push   ds
  41aab5:	repz int 0xc8
  41aab8:	jg     0x41aa78
  41aaba:	add    BYTE PTR [edx],0x9
  41aabd:	xchg   edx,eax
  41aabe:	retf   0xaaf4
  41aac1:	fistp  WORD PTR [ebx-0x5d]
  41aac4:	xchg   ecx,eax
  41aac5:	sub    dl,BYTE PTR [ebx]
  41aac7:	jo     0x41ab1e
  41aac9:	ret    
  41aaca:	inc    ebx
  41aacb:	push   0x34
  41aacd:	jp     0x41aa79
  41aacf:	es pop ss
  41aad1:	inc    eax
  41aad2:	adc    edx,edi
  41aad4:	into   
  41aad5:	xchg   ebp,eax
  41aad6:	and    ebp,DWORD PTR [ecx+0x41]
  41aad9:	cs stos BYTE PTR es:[edi],al
  41aadb:	jg     0x41aabf
  41aadd:	out    dx,eax
  41aade:	imul   esp,DWORD PTR [ebx-0xf],0x16589591
  41aae5:	xchg   edi,eax
  41aae6:	pop    es
  41aae7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aae8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aae9:	repnz inc esp
  41aaeb:	xadd   ebx,eax
  41aaee:	sbb    al,0x89
  41aaf0:	lods   al,BYTE PTR ds:[esi]
  41aaf1:	aam    0x4b
  41aaf3:	pusha  
  41aaf4:	icebp  
  41aaf5:	call   0xad8d4c3f
  41aafa:	jno    0x41ab12
  41aafc:	dec    eax
  41aafe:	push   edi
  41aaff:	stos   DWORD PTR es:[edi],eax
  41ab00:	arpl   ax,di
  41ab02:	dec    edi
  41ab03:	retf   0xbd52
  41ab06:	(bad)  
  41ab08:	mov    ds:0x5ea52884,al
  41ab0d:	in     al,dx
  41ab0e:	unpckhps xmm6,XMMWORD PTR [eax]
  41ab11:	mov    ch,0xe6
  41ab13:	es in  al,dx
  41ab15:	pop    ecx
  41ab16:	js     0x41ab00
  41ab18:	pop    eax
  41ab19:	test   eax,0x448ba5e4
  41ab1e:	sbb    BYTE PTR [eax-0x53],dh
  41ab21:	dec    ebx
  41ab22:	in     al,dx
  41ab23:	add    ecx,DWORD PTR [ecx+0x24481e3c]
  41ab29:	add    BYTE PTR [ebx-0x4eaaa4d9],0x90
  41ab30:	daa    
  41ab31:	inc    edx
  41ab32:	mov    ds:0x1aa7fe3e,al
  41ab37:	mov    ebp,0x41830437
  41ab3c:	daa    
  41ab3d:	adc    esi,ecx
  41ab3f:	sbb    eax,0x8d918c21
  41ab44:	fdivr  DWORD PTR [edx-0x60]
  41ab47:	mov    ah,0x10
  41ab49:	xor    al,0xe0
  41ab4b:	les    edx,FWORD PTR [esp+ecx*8-0x135b354e]
  41ab52:	and    esi,DWORD PTR [edi+0x41]
  41ab55:	outs   dx,DWORD PTR ds:[esi]
  41ab56:	jmp    0x41abc6
  41ab58:	dec    eax
  41ab59:	or     eax,0x9494c09e
  41ab5e:	add    BYTE PTR [eax],ch
  41ab60:	xor    ch,BYTE PTR [esi]
  41ab62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ab63:	je     0x41ab1f
  41ab65:	ins    DWORD PTR es:[edi],dx
  41ab66:	loopne 0x41ab19
  41ab68:	in     al,0x70
  41ab6a:	mov    ebp,0x7e5648ea
  41ab6f:	call   0xd4689653
  41ab74:	adc    DWORD PTR [esi],0xffffffdf
  41ab77:	icebp  
  41ab78:	jnp    0x41ab26
  41ab7a:	sbb    eax,0x47b5cf36
  41ab7f:	(bad)  
  41ab80:	xchg   edx,eax
  41ab81:	out    0xac,al
  41ab83:	cmp    dl,0x9c
  41ab86:	test   DWORD PTR [esi],ebp
  41ab88:	xchg   esi,eax
  41ab89:	mov    bl,0x25
  41ab8b:	push   cs
  41ab8c:	push   esi
  41ab8d:	stos   BYTE PTR es:[edi],al
  41ab8e:	repnz shl dh,cl
  41ab91:	pop    ecx
  41ab92:	lods   al,BYTE PTR ds:[esi]
  41ab93:	shl    ah,cl
  41ab95:	xor    al,0x13
  41ab97:	sub    cl,dl
  41ab99:	icebp  
  41ab9a:	int    0x9a
  41ab9c:	mov    esi,0x6f44f133
  41aba1:	and    bh,BYTE PTR [ebp-0x5cd7e82e]
  41aba7:	dec    eax
  41aba8:	pop    ds
  41aba9:	inc    esi
  41abaa:	popf   
  41abab:	mov    ebp,DWORD PTR [esi-0x395e9e22]
  41abb1:	(bad)  
  41abb2:	bndldx bnd1,[ebx]
  41abb5:	inc    ebp
  41abb6:	pop    es
  41abb7:	mov    edx,0x68fd9309
  41abbc:	sub    eax,0xd70eb3a0
  41abc1:	xor    esp,edx
  41abc3:	dec    ebp
  41abc4:	lahf   
  41abc5:	jp     0x41ac20
  41abc7:	mov    eax,0xa51a6cd0
  41abcc:	xchg   ebp,eax
  41abcd:	sbb    dl,BYTE PTR [edi+0x3c]
  41abd0:	fdivr  st(0),st
  41abd2:	and    BYTE PTR [edx-0x2e],dh
  41abd5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41abd6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41abd7:	je     0x41ac12
  41abd9:	pop    es
  41abda:	xlat   BYTE PTR ds:[ebx]
  41abdb:	ds pushf 
  41abdd:	cs jl  0x41ac3a
  41abe0:	aaa    
  41abe1:	divps  xmm3,XMMWORD PTR [edi-0x7d]
  41abe5:	test   DWORD PTR [esi],esp
  41abe7:	enter  0x2b61,0xbd
  41abeb:	jne    0x41aba4
  41abed:	lahf   
  41abee:	lahf   
  41abef:	add    eax,0xbca49b7a
  41abf4:	repz mov eax,0x16953ead
  41abfa:	in     eax,0x86
  41abfc:	fimul  WORD PTR [esi+ecx*2-0x6d]
  41ac00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ac01:	inc    ebx
  41ac02:	int3   
  41ac03:	cmp    ecx,eax
  41ac05:	cmp    al,0xb8
  41ac07:	push   esi
  41ac08:	mov    ah,0x72
  41ac0a:	mov    dl,bl
  41ac0c:	push   eax
  41ac0d:	subps  xmm1,XMMWORD PTR [edi+edi*1+0x570bcbe9]
  41ac15:	mov    ss,WORD PTR [esp+edx*2]
  41ac18:	xor    eax,DWORD PTR [esi]
  41ac1a:	push   ds
  41ac1b:	cmp    eax,0xecdbb274
  41ac20:	jno    0x41aba6
  41ac22:	shl    DWORD PTR [esi+edx*8],cl
  41ac25:	icebp  
  41ac26:	xchg   edi,eax
  41ac27:	cmp    eax,0xaa3f9ea1
  41ac2c:	outs   dx,BYTE PTR ds:[esi]
  41ac2d:	sub    BYTE PTR [edi-0x9a7e1f9],0x22
  41ac34:	gs and eax,0xc08efdbe
  41ac3a:	ja     0x41abe3
  41ac3c:	add    BYTE PTR [eax],al
  41ac3e:	add    BYTE PTR [eax],al
  41ac40:	add    BYTE PTR [eax],al
  41ac42:	dec    ebp
  41ac43:	dec    ebp
  41ac44:	ss retf 0xfb36
  41ac48:	std    
  41ac49:	iret   
  41ac4a:	cmp    esp,DWORD PTR [edx]
  41ac4c:	(bad)  
  41ac4d:	cld    
  41ac4e:	call   0x128:0x8b8bde52
  41ac55:	add    dl,dh
  41ac57:	add    al,0x0
  41ac59:	add    BYTE PTR [ebp+0x16],al
  41ac5c:	retf   0x8306
  41ac5f:	inc    edx
  41ac60:	sbb    BYTE PTR [edi+esi*2+0x7a11e070],al
  41ac67:	pop    ebx
  41ac68:	cmc    
  41ac69:	ret    
  41ac6a:	mov    bh,0xf4
  41ac6c:	adc    BYTE PTR [eax+0x1aab7d37],bl
  41ac72:	cmp    DWORD PTR [ecx-0x2d],ebp
  41ac75:	imul   esi,DWORD PTR [edi],0xffffffd7
  41ac78:	inc    ecx
  41ac79:	stos   BYTE PTR es:[edi],al
  41ac7a:	dec    esp
  41ac7b:	out    dx,eax
  41ac7c:	cmp    DWORD PTR [edi],ebp
  41ac7e:	mov    dh,0x4b
  41ac80:	rcl    BYTE PTR [edx+0xf964b58],cl
  41ac86:	xor    eax,0x452d4bab
  41ac8b:	xor    bh,BYTE PTR [ecx+0x3f]
  41ac8e:	ss addr16 jae 0x41ac5c
  41ac92:	retf   
  41ac93:	dec    edx
  41ac94:	call   0xc99cfb2a
  41ac99:	or     eax,0x263a6f85
  41ac9e:	jp     0x41acdf
  41aca0:	scas   eax,DWORD PTR es:[edi]
  41aca1:	xor    BYTE PTR [esi+0x332de5e4],ch
  41aca7:	lock cmp BYTE PTR [esi-0x42],ah
  41acab:	popa   
  41acac:	jmp    0xa679:0x3f46f736
  41acb3:	xchg   ecx,eax
  41acb4:	imul   ebx,DWORD PTR [edi],0x79193243
  41acba:	cmp    edi,DWORD PTR [ecx+0x50]
  41acbd:	mov    edi,DWORD PTR cs:[eax]
  41acc0:	int    0x85
  41acc2:	sahf   
  41acc3:	adc    DWORD PTR [eax-0x6592369c],0xe20e6658
  41accd:	dec    ecx
  41acce:	mov    bh,0x37
  41acd0:	inc    ebp
  41acd1:	or     DWORD PTR [edx-0x3996ab49],ebp
  41acd7:	mov    DWORD PTR [ebx+ebx*2],ecx
  41acda:	gs dec eax
  41acdc:	lea    eax,[ecx-0x5b]
  41acdf:	xchg   edi,eax
  41ace0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ace1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ace2:	imul   ecx,DWORD PTR [eax+0x23],0x5d
  41ace6:	popa   
  41ace7:	push   esp
  41ace8:	cmp    eax,0x76697a2e
  41aced:	mov    esi,0xd3c23951
  41acf2:	mov    edi,0x5129379c
  41acf7:	lods   eax,DWORD PTR ds:[esi]
  41acf8:	mov    al,ds:0xffb33d89
  41acfd:	mov    ax,0x32d6
  41ad01:	sub    dh,BYTE PTR [esi-0x4d]
  41ad04:	aad    0x60
  41ad06:	int3   
  41ad07:	cs in  al,dx
  41ad09:	dec    ebx
  41ad0a:	pop    ecx
  41ad0b:	inc    esi
  41ad0c:	iret   
  41ad0d:	lods   eax,DWORD PTR ds:[esi]
  41ad0e:	dec    edi
  41ad0f:	mov    al,ds:0xd0f3cbe6
  41ad14:	retf   
  41ad15:	xchg   ebp,eax
  41ad16:	cli    
  41ad17:	fadd   DWORD PTR [ecx-0x68]
  41ad1a:	and    edx,ebx
  41ad1c:	mov    esi,gs
  41ad1e:	adc    BYTE PTR [esi-0x51],0x29
  41ad22:	mov    ecx,0x42a76200
  41ad27:	sbb    bh,ah
  41ad29:	in     al,0x69
  41ad2b:	mov    bl,0x9b
  41ad2d:	dec    edx
  41ad2e:	pop    es
  41ad2f:	call   0x3a1d:0x7bf0aecd
  41ad36:	adc    eax,esp
  41ad38:	or     esi,ecx
  41ad3a:	out    dx,eax
  41ad3b:	loopne 0x41ad5b
  41ad3d:	pusha  
  41ad3e:	mov    ebx,0xaeb67ceb
  41ad43:	push   ss
  41ad44:	es scas eax,DWORD PTR es:[edi]
  41ad46:	or     al,0x59
  41ad48:	jae    0x41ad23
  41ad4a:	or     BYTE PTR [ecx-0x63d14dce],al
  41ad50:	aad    0x7f
  41ad52:	sahf   
  41ad53:	not    al
  41ad55:	ret    
  41ad56:	gs add dl,cl
  41ad59:	lock mov esi,0x61a96352
  41ad5f:	lds    eax,FWORD PTR [eax-0x5a]
  41ad62:	inc    BYTE PTR [edx]
  41ad64:	adc    DWORD PTR [eax],ecx
  41ad66:	popf   
  41ad67:	xchg   BYTE PTR ds:0x260b279b,bh
  41ad6d:	pop    ds
  41ad6e:	mov    dl,dl
  41ad70:	sbb    eax,esp
  41ad72:	push   es
  41ad73:	mov    ch,0x94
  41ad75:	add    esi,DWORD PTR [esi-0x48]
  41ad78:	(bad)  [ebp+0xb323bb3]
  41ad7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ad7f:	cwde   
  41ad80:	sub    ecx,DWORD PTR [eax+edx*1+0x23a456b5]
  41ad87:	sbb    DWORD PTR [eax],ebx
  41ad89:	pop    DWORD PTR [ebp-0x3c]
  41ad8c:	bound  eax,QWORD PTR [ebp-0x99a4df0]
  41ad92:	sub    eax,0x1b0c8750
  41ad97:	pop    ebp
  41ad98:	shr    edi,cl
  41ad9a:	gs mov edx,0x1a0b14c4
  41ada0:	outs   dx,BYTE PTR ds:[esi]
  41ada1:	jo     0x41adb6
  41ada3:	scas   al,BYTE PTR es:[edi]
  41ada4:	xchg   BYTE PTR [edx-0x688ca1b6],cl
  41adaa:	cdq    
  41adab:	or     DWORD PTR [esp+edx*2+0x10786389],0x63
  41adb3:	xchg   esi,eax
  41adb4:	pop    esp
  41adb5:	ins    DWORD PTR es:[edi],dx
  41adb6:	fild   DWORD PTR ds:0x57d033cc
  41adbc:	xor    eax,0xfaa176cf
  41adc1:	fiadd  DWORD PTR [bx+si+0x133]
  41adc6:	xlat   BYTE PTR ds:[ebx]
  41adc7:	xchg   esi,eax
  41adc8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41adc9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41adca:	cmp    DWORD PTR [ebx],ecx
  41adcc:	and    DWORD PTR [ecx+0x3],ebx
  41adcf:	mov    esi,0xc123bac1
  41add4:	push   es
  41add5:	jb     0x41ae42
  41add7:	retf   0xc97d
  41adda:	cmp    DWORD PTR [ecx],ebx
  41addc:	pop    eax
  41addd:	jge    0x41ae35
  41addf:	jns    0x41adcf
  41ade1:	mov    ch,0x8e
  41ade3:	xchg   ecx,eax
  41ade4:	cmp    ebp,esp
  41ade6:	(bad)  
  41ade7:	jo     0x41ad95
  41ade9:	stos   BYTE PTR es:[edi],al
  41adea:	mov    esi,ebp
  41adec:	out    0x7,eax
  41adee:	push   es
  41adef:	mov    eax,ds:0x50ca9135
  41adf4:	pop    ebx
  41adf5:	mov    ebp,0x9d4e84d4
  41adfa:	loopne 0x41ae4a
  41adfc:	aaa    
  41adfd:	push   esi
  41adfe:	hlt    
  41adff:	push   esp
  41ae00:	jnp    0x41ada2
  41ae02:	repz fidivr DWORD PTR [edi+0x59ec66af]
  41ae09:	in     al,0x8c
  41ae0b:	pop    ebx
  41ae0c:	sub    esp,ebx
  41ae0e:	or     eax,0xcaa92b96
  41ae13:	sbb    al,0x5b
  41ae15:	ins    BYTE PTR es:[edi],dx
  41ae16:	xchg   esi,eax
  41ae17:	test   DWORD PTR [ebx+0x16e25da2],esp
  41ae1d:	mov    ss,edx
  41ae1f:	cmp    DWORD PTR [ebp+0x1f742901],esi
  41ae25:	xor    bl,dh
  41ae27:	leave  
  41ae28:	data16 (bad) 
  41ae2a:	jmp    0x41ae28
  41ae2c:	xor    esp,DWORD PTR [eax-0x69]
  41ae2f:	xchg   edx,eax
  41ae30:	push   edi
  41ae31:	data16 jle 0x41aea7
  41ae34:	dec    esp
  41ae35:	push   edi
  41ae36:	and    al,0x32
  41ae38:	rol    BYTE PTR [edi-0x327990c9],0x8b
  41ae3f:	pop    esi
  41ae40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ae41:	pushf  
  41ae42:	imul   ebx,esi,0xb7c28491
  41ae48:	stos   DWORD PTR es:[edi],eax
  41ae49:	xchg   BYTE PTR [eax+0x6d],ch
  41ae4c:	test   BYTE PTR [esp+eiz*8+0x2e],dl
  41ae50:	aas    
  41ae51:	xchg   esi,eax
  41ae52:	jb     0x41ae69
  41ae54:	out    dx,eax
  41ae55:	scas   eax,DWORD PTR es:[edi]
  41ae56:	cli    
  41ae57:	out    0xda,eax
  41ae59:	aad    0x62
  41ae5b:	or     eax,0xd4f5bae7
  41ae60:	in     eax,dx
  41ae61:	out    dx,eax
  41ae62:	inc    eax
  41ae63:	sahf   
  41ae64:	shl    BYTE PTR [bx+si],0x1a
  41ae68:	sub    dl,BYTE PTR [ebx+0x66]
  41ae6b:	sbb    ecx,DWORD PTR [ecx-0x49]
  41ae6e:	sub    eax,DWORD PTR [ecx]
  41ae70:	jne    0x41aed5
  41ae72:	jle    0x41ae51
  41ae74:	push   ebx
  41ae75:	out    0x27,al
  41ae77:	nop
  41ae78:	cmp    ch,BYTE PTR [esi-0x69]
  41ae7b:	shr    DWORD PTR [eax],cl
  41ae7d:	push   0x49
  41ae7f:	push   ecx
  41ae80:	cs scas eax,DWORD PTR es:[edi]
  41ae82:	cmp    BYTE PTR [ebp+0x375b727d],dl
  41ae88:	je     0x41aeb0
  41ae8a:	jg     0x41ae41
  41ae8c:	shl    BYTE PTR [edi],cl
  41ae8e:	test   DWORD PTR [edi],ecx
  41ae90:	jo     0x41ae8b
  41ae92:	inc    DWORD PTR [esi-0x2b01bff3]
  41ae98:	mov    WORD PTR [ecx-0x374ab662],?
  41ae9e:	pop    esp
  41ae9f:	jle    0x41ae49
  41aea1:	sub    cl,BYTE PTR [eax]
  41aea3:	push   edi
  41aea4:	mov    dh,BYTE PTR [ebx+0x79f06ce9]
  41aeaa:	pop    ebx
  41aeab:	xchg   al,cl
  41aead:	jecxz  0x41ae82
  41aeaf:	ror    edx,0x4b
  41aeb2:	div    DWORD PTR [edx+ecx*8+0x5bb3302a]
  41aeb9:	fnstcw WORD PTR [ebx]
  41aebb:	jae    0x41aef1
  41aebd:	mov    edi,0x4cef94c
  41aec2:	or     BYTE PTR [ebp+0x13],0x71
  41aec6:	sti    
  41aec7:	rcl    BYTE PTR [esi],cl
  41aec9:	mov    al,0xa2
  41aecb:	out    0x7b,al
  41aecd:	in     eax,dx
  41aece:	xor    al,0x49
  41aed0:	std    
  41aed1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aed2:	imul   edx,DWORD PTR [ebp+0xaffe89f],0x54daf75f
  41aedc:	jg     0x41aed7
  41aede:	dec    edx
  41aedf:	or     DWORD PTR [esp+esi*4],0x15
  41aee3:	ret    
  41aee4:	push   ebp
  41aee5:	push   ecx
  41aee6:	push   0x60521248
  41aeeb:	add    BYTE PTR [eax+0x7],ch
  41aeee:	sub    ecx,ecx
  41aef0:	xor    al,BYTE PTR [eax-0x598b5dc1]
  41aef6:	in     al,dx
  41aef7:	rcr    BYTE PTR [edi],cl
  41aef9:	push   ebx
  41aefa:	push   cs
  41aefb:	pop    edx
  41aefc:	jg     0x41aec7
  41aefe:	inc    ebp
  41aeff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41af00:	gs mov edx,0x5e0a8a7
  41af06:	inc    ebp
  41af07:	mov    ah,0xae
  41af09:	pop    ds
  41af0a:	shr    BYTE PTR [ebx],cl
  41af0c:	xchg   esp,eax
  41af0d:	inc    ebx
  41af0e:	ins    BYTE PTR es:[edi],dx
  41af0f:	mov    edi,fs
  41af11:	mov    eax,0x995d9b96
  41af16:	adc    BYTE PTR ds:0xe6f45c1d,0xc3
  41af1d:	add    ah,ch
  41af1f:	push   edi
  41af20:	push   ss
  41af21:	xlat   BYTE PTR ds:[ebx]
  41af22:	xlat   BYTE PTR ds:[ebx]
  41af23:	dec    edx
  41af24:	xchg   edi,eax
  41af25:	inc    esi
  41af26:	mov    eax,ds:0x31431bec
  41af2b:	fnstsw WORD PTR [ecx]
  41af2d:	push   ebp
  41af2e:	lods   al,BYTE PTR ds:[esi]
  41af2f:	cmp    DWORD PTR [ebx+0x73],ebp
  41af32:	xor    eax,DWORD PTR [esi-0x52be2535]
  41af38:	jle    0x41af07
  41af3a:	and    eax,0x21231dc4
  41af3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41af40:	fwait
  41af41:	sbb    ecx,ecx
  41af43:	cs pusha 
  41af45:	in     al,0xa6
  41af47:	adc    ecx,eax
  41af49:	mov    bh,0x79
  41af4b:	xchg   eax,ecx
  41af4d:	out    0x16,eax
  41af4f:	mov    bh,0x2b
  41af51:	push   es
  41af52:	cmp    BYTE PTR [edi],0xf8
  41af55:	mov    eax,0x2217dd0e
  41af5a:	dec    esi
  41af5b:	stos   DWORD PTR es:[edi],eax
  41af5c:	out    dx,al
  41af5d:	clc    
  41af5e:	sub    eax,0xe7988171
  41af63:	enter  0x2a2e,0x97
  41af67:	(bad)  
  41af68:	hlt    
  41af69:	je     0x41afde
  41af6b:	pop    eax
  41af6c:	xchg   esi,eax
  41af6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41af6e:	fnstcw WORD PTR [ecx]
  41af70:	dec    edi
  41af71:	cmp    dh,BYTE PTR [ebx+ebp*4+0x5c15fa6f]
  41af78:	sbb    al,0xd4
  41af7a:	adc    BYTE PTR ds:0xcda7ee18,dh
  41af80:	jmp    0x41af08
  41af82:	inc    edx
  41af83:	or     cl,dl
  41af85:	das    
  41af86:	mov    esi,0x7ee915b3
  41af8b:	cmp    al,0x3b
  41af8d:	gs add eax,ebx
  41af90:	mov    edx,0x2091faed
  41af95:	ror    DWORD PTR [esi],0x9f
  41af98:	pop    ss
  41af99:	dec    ecx
  41af9a:	xchg   edx,eax
  41af9b:	xor    ebp,edi
  41af9d:	out    dx,eax
  41af9e:	jg     0x41affc
  41afa0:	sub    DWORD PTR [eax-0x72c8b4d5],ebx
  41afa6:	nop
  41afa7:	cwde   
  41afa8:	xchg   ecx,eax
  41afa9:	mov    ds:0xcf4ecca7,al
  41afae:	sbb    eax,0xe1c5c849
  41afb3:	xchg   esi,eax
  41afb4:	cli    
  41afb5:	mov    edx,0x7b2d97fd
  41afba:	rcr    bl,0x37
  41afbd:	rol    BYTE PTR [edx+0x7e6463c5],1
  41afc3:	stos   BYTE PTR es:[edi],al
  41afc4:	jl     0x41afaf
  41afc6:	imul   edi,DWORD PTR [ecx+0x4328c5f9],0xffffffd8
  41afcd:	ins    DWORD PTR es:[edi],dx
  41afce:	push   esp
  41afcf:	or     edi,eax
  41afd1:	aam    0x49
  41afd3:	aaa    
  41afd4:	mov    al,0xf0
  41afd6:	into   
  41afd7:	in     al,dx
  41afd8:	mov    edi,0x91b72f75
  41afdd:	mov    esp,0x4c854073
  41afe2:	leave  
  41afe3:	push   es
  41afe4:	scas   eax,DWORD PTR es:[edi]
  41afe5:	sbb    BYTE PTR [eax],0x43
  41afe8:	cwde   
  41afe9:	imul   edx,DWORD PTR [esi+0x3218400d],0x6d275f4b
  41aff3:	pop    ss
  41aff4:	test   eax,0x519b183a
  41aff9:	dec    ecx
  41affa:	mov    al,ds:0xdb621ac2
  41afff:	inc    edx
  41b000:	adc    al,0x6e
  41b002:	pop    ebp
  41b003:	mov    BYTE PTR [edi+0x1a5cd4b],al
  41b009:	idiv   ah
  41b00b:	stos   BYTE PTR es:[edi],al
  41b00c:	mov    esp,ebx
  41b00e:	mov    ch,0x36
  41b010:	dec    ecx
  41b011:	jnp    0x41affb
  41b013:	or     al,BYTE PTR [edx+0x63]
  41b016:	mov    cl,0x56
  41b018:	ss dec eax
  41b01a:	push   esp
  41b01b:	fiadd  WORD PTR [eax-0x2c808c24]
  41b021:	mov    ebp,0xb820c5cc
  41b026:	or     dl,BYTE PTR ds:0xf32af07d
  41b02c:	push   ecx
  41b02d:	out    dx,al
  41b02e:	stos   DWORD PTR es:[edi],eax
  41b02f:	fcmovb st,st(0)
  41b031:	or     al,0x32
  41b033:	pop    ds
  41b034:	pop    eax
  41b035:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b036:	retf   
  41b037:	gs ins DWORD PTR es:[edi],dx
  41b039:	aas    
  41b03a:	cmp    DWORD PTR [eax*1+0x2407be0e],edx
  41b041:	fcomp  DWORD PTR [ebp-0x787f319e]
  41b047:	add    al,0xc
  41b049:	pop    eax
  41b04a:	sub    DWORD PTR [edx],eax
  41b04c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b04d:	sub    esi,DWORD PTR [ebp+0x570931a3]
  41b053:	add    bl,bl
  41b055:	retf   0xf67a
  41b058:	xchg   ebp,eax
  41b059:	and    eax,ecx
  41b05b:	and    al,0x81
  41b05d:	push   ecx
  41b05e:	imul   edx,DWORD PTR es:[ebx+esi*1],0x24dbfd7d
  41b066:	and    dh,bl
  41b068:	pop    esi
  41b069:	into   
  41b06a:	cli    
  41b06b:	mov    dl,0x15
  41b06d:	enter  0x55b,0x32
  41b071:	sbb    bh,BYTE PTR [edx-0x72e05857]
  41b077:	mov    dl,0x22
  41b079:	sub    DWORD PTR [ebx-0x754ca877],ebx
  41b07f:	cmp    eax,0x41b2ccf3
  41b084:	loope  0x41b02c
  41b086:	scas   eax,DWORD PTR es:[edi]
  41b087:	inc    ecx
  41b088:	test   DWORD PTR [esi+0x3e],ecx
  41b08b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b08c:	sub    al,ah
  41b08e:	or     dl,BYTE PTR [ecx+0x27]
  41b091:	fmul   st,st(2)
  41b093:	mov    DWORD PTR [eax-0x362b9b80],esi
  41b099:	cmp    bl,BYTE PTR [ebx]
  41b09b:	sub    eax,DWORD PTR [ebp-0x63]
  41b09e:	push   ds
  41b09f:	fdiv   DWORD PTR [ebx-0x3]
  41b0a2:	cwde   
  41b0a3:	aas    
  41b0a4:	sbb    ah,BYTE PTR [eax+esi*2]
  41b0a7:	push   esi
  41b0a8:	push   ebp
  41b0a9:	xor    BYTE PTR [edi-0xe],bh
  41b0ac:	sbb    eax,0xd3f1c81a
  41b0b1:	dec    eax
  41b0b2:	xchg   edi,eax
  41b0b3:	mov    bh,0x14
  41b0b5:	out    0x73,al
  41b0b7:	mov    DWORD PTR [ebx-0x10b3407c],ebx
  41b0bd:	arpl   bx,bp
  41b0bf:	mov    dl,0x58
  41b0c1:	pop    esi
  41b0c2:	inc    eax
  41b0c3:	sub    ecx,edi
  41b0c5:	setp   BYTE PTR [ecx-0x1e]
  41b0c9:	sbb    eax,0x7958884
  41b0ce:	push   0x22ca534
  41b0d3:	add    BYTE PTR [ebx+0x2a],al
  41b0d6:	or     ecx,DWORD PTR [ebx]
  41b0d8:	dec    esp
  41b0d9:	enter  0xcc25,0x19
  41b0dd:	repz sub BYTE PTR [edx+ecx*8+0x7df82901],dl
  41b0e5:	repz loope 0x41b161
  41b0e8:	push   esp
  41b0e9:	push   esi
  41b0ea:	sub    ebx,DWORD PTR [ebx+esi*2-0x8]
  41b0ee:	leave  
  41b0ef:	lods   eax,DWORD PTR ds:[esi]
  41b0f0:	and    al,0xad
  41b0f2:	mov    esp,0x6d916e9
  41b0f7:	sbb    cl,0x91
  41b0fa:	(bad)  
  41b0fb:	lahf   
  41b0fc:	or     al,0x29
  41b0fe:	jns    0x41b12f
  41b100:	push   ds
  41b101:	mov    edi,ebp
  41b103:	lds    esi,FWORD PTR [edx+0x56]
  41b106:	ins    BYTE PTR es:[edi],dx
  41b107:	push   ss
  41b108:	xchg   BYTE PTR [edi-0x2c05103b],bh
  41b10e:	iret   
  41b10f:	mov    eax,DWORD PTR [esi-0x7e15aae8]
  41b115:	mov    bh,0x5b
  41b117:	mov    ah,0xcd
  41b119:	test   BYTE PTR [edx-0x22],bl
  41b11c:	pop    esi
  41b11d:	dec    ecx
  41b11e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b11f:	jnp    0x41b11b
  41b121:	ret    
  41b122:	push   0xffffffa6
  41b124:	ins    DWORD PTR es:[edi],dx
  41b125:	adc    DWORD PTR [edi+eax*8],ebx
  41b128:	in     al,0x7d
  41b12a:	xchg   DWORD PTR [edx+eax*8],esi
  41b12d:	(bad)  
  41b12f:	loopne 0x41b102
  41b131:	(bad)  
  41b132:	out    0x5a,al
  41b134:	push   ds
  41b135:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b136:	mov    cl,0x56
  41b138:	mov    WORD PTR cs:[eax],?
  41b13b:	adc    eax,0x8f2854e7
  41b140:	mov    ds:0x3d73db7b,al
  41b145:	outs   dx,DWORD PTR ds:[esi]
  41b146:	and    BYTE PTR [ebx],dh
  41b148:	enter  0x62a2,0x89
  41b14c:	add    BYTE PTR [eax],al
  41b14e:	add    BYTE PTR [eax],al
  41b150:	add    BYTE PTR [eax],al
  41b152:	cld    
  41b153:	es out dx,eax
  41b155:	mov    eax,ds:0x7ffee9ff
  41b15a:	jmp    edx
  41b15c:	fdivp  st(6),st
  41b15e:	push   ds
  41b15f:	fild   QWORD PTR [ecx+eiz*2+0x12d7d]
  41b166:	repnz add al,0x0
  41b169:	add    BYTE PTR [esp+edx*4+0x2a],bh
  41b16d:	xchg   ebx,eax
  41b16e:	sbb    al,0x13
  41b170:	jne    0x41b18b
  41b172:	test   DWORD PTR ds:0x3744d7ea,0x2166c3df
  41b17c:	retf   0xf9b3
  41b17f:	jnp    0x41b128
  41b181:	sar    DWORD PTR [ecx],cl
  41b183:	test   eax,0x4a4ef42b
  41b188:	out    dx,al
  41b189:	dec    ebp
  41b18a:	outs   dx,DWORD PTR ds:[esi]
  41b18b:	mov    ch,BYTE PTR [ebx+0x26]
  41b18e:	lock mov bh,0xd3
  41b191:	stc    
  41b192:	ss inc edx
  41b194:	sub    al,0xc9
  41b196:	test   eax,0x8287c392
  41b19b:	dec    edx
  41b19c:	hlt    
  41b19d:	cld    
  41b19e:	sbb    BYTE PTR [esi-0x696829e3],cl
  41b1a4:	pop    es
  41b1a5:	xor    al,BYTE PTR [ebx+0x3a]
  41b1a8:	ret    0xa833
  41b1ab:	repnz arpl WORD PTR [ebx+0x4d10d5f3],si
  41b1b2:	mov    ds:0x3ec29d4f,eax
  41b1b7:	sbb    al,0x4a
  41b1b9:	call   0xda:0x73117fc8
  41b1c0:	les    esp,FWORD PTR ss:[ebp-0x5fb6b8ee]
  41b1c7:	pushf  
  41b1c8:	push   esi
  41b1c9:	scas   eax,DWORD PTR es:[edi]
  41b1ca:	cmp    ebx,ecx
  41b1cc:	xchg   edx,eax
  41b1cd:	es ds jbe 0x41b1a4
  41b1d1:	xor    BYTE PTR [ecx+0xe],0x6a
  41b1d5:	sbb    BYTE PTR [ebp-0x68527118],0xa2
  41b1dc:	xchg   esi,eax
  41b1dd:	(bad)  
  41b1de:	gs arpl bp,bp
  41b1e1:	xchg   DWORD PTR [eax],ebp
  41b1e3:	(bad)  [ebp+0x56]
  41b1e6:	scas   eax,DWORD PTR es:[edi]
  41b1e7:	fidiv  WORD PTR ds:0x4df7e9de
  41b1ed:	daa    
  41b1ee:	vmread DWORD PTR [ecx-0x4d],esp
  41b1f2:	dec    edx
  41b1f3:	jb     0x41b1c5
  41b1f5:	push   esp
  41b1f6:	les    ebp,FWORD PTR [edi]
  41b1f8:	fcom   QWORD PTR [ebx]
  41b1fa:	or     al,BYTE PTR cs:[esi+ebx*8]
  41b1fe:	scas   al,BYTE PTR es:[edi]
  41b1ff:	fcomip st,st(3)
  41b201:	mov    ah,0xc4
  41b203:	lahf   
  41b204:	pop    ds
  41b205:	jb     0x41b1c8
  41b207:	inc    edx
  41b208:	fsub   QWORD PTR [ebx-0x28]
  41b20b:	jp     0x41b1bf
  41b20d:	idiv   BYTE PTR [esi+0x22e50894]
  41b213:	pusha  
  41b214:	cmp    BYTE PTR ds:0x702b93ff,ch
  41b21a:	mov    ds:0x3a5ab2cd,al
  41b21f:	ds xchg esp,esp
  41b222:	aad    0x71
  41b224:	adc    al,BYTE PTR [ebp+0x72]
  41b227:	cmp    BYTE PTR [ebp+0x7b],bh
  41b22a:	add    dh,dh
  41b22c:	jnp    0x41b1e7
  41b22e:	pop    ds
  41b22f:	xchg   esp,eax
  41b230:	mov    edx,0xee1e8289
  41b235:	fsub   DWORD PTR [ebx+0x38]
  41b238:	ds dec edi
  41b23a:	daa    
  41b23b:	shl    DWORD PTR [edi+0x2f],cl
  41b23e:	xchg   ebx,eax
  41b23f:	sbb    esi,DWORD PTR [edi]
  41b241:	inc    ebx
  41b242:	pop    ds
  41b243:	in     al,0x6d
  41b245:	loopne 0x41b23e
  41b247:	dec    ebp
  41b248:	jmp    0x41b2a9
  41b24a:	shr    DWORD PTR [esi],cl
  41b24c:	inc    edx
  41b24d:	dec    edi
  41b24e:	or     al,0x8a
  41b250:	(bad)  
  41b251:	lea    eax,[esi]
  41b253:	and    cl,BYTE PTR [eax]
  41b255:	dec    ecx
  41b256:	jbe    0x41b20a
  41b258:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b259:	icebp  
  41b25a:	xchg   esp,eax
  41b25b:	mov    edi,DWORD PTR [esi+0x598c658d]
  41b261:	std    
  41b262:	add    DWORD PTR [eax+0x456c19c1],esi
  41b268:	mov    bh,0xdf
  41b26a:	scas   al,BYTE PTR es:[edi]
  41b26b:	add    al,0x87
  41b26d:	mov    dh,0x9
  41b26f:	je     0x41b1f8
  41b271:	dec    ebx
  41b272:	mov    dl,0x83
  41b274:	cs into 
  41b276:	sti    
  41b277:	mov    WORD PTR [edx-0x1a68e2db],?
  41b27d:	stos   DWORD PTR es:[edi],eax
  41b27e:	adc    al,0x3d
  41b280:	or     DWORD PTR [eax+0x76],0xffffffd0
  41b284:	lea    esi,[ebp-0x7a]
  41b287:	retf   
  41b288:	push   esi
  41b289:	push   es
  41b28a:	xor    ebp,DWORD PTR [edx+0x3c59c1e2]
  41b290:	loope  0x41b244
  41b292:	loop   0x41b27a
  41b294:	xchg   ebp,eax
  41b295:	push   esi
  41b296:	push   0x33
  41b298:	(bad)  
  41b299:	fistp  WORD PTR [eax-0x7816b721]
  41b29f:	sub    eax,0x2f6a8880
  41b2a4:	dec    ecx
  41b2a5:	pop    eax
  41b2a6:	rcr    esp,0xf6
  41b2a9:	repnz mov ecx,0x4c5abdd1
  41b2af:	fsubr  QWORD PTR [edi]
  41b2b1:	and    eax,0x55388b63
  41b2b6:	(bad)  
  41b2b7:	cli    
  41b2b8:	lods   eax,DWORD PTR ds:[esi]
  41b2b9:	sahf   
  41b2ba:	pop    edi
  41b2bb:	add    bh,BYTE PTR [edx+0x11]
  41b2be:	jmp    0xf573:0xbd107ded
  41b2c5:	xchg   ebp,eax
  41b2c6:	adc    BYTE PTR [ebx*4-0x1e64cf8f],0x6c
  41b2ce:	or     ch,BYTE PTR [ebx]
  41b2d0:	inc    ecx
  41b2d1:	mov    edx,edi
  41b2d3:	push   ebx
  41b2d4:	push   cs
  41b2d5:	sbb    dl,BYTE PTR [edi-0x3c]
  41b2d8:	push   eax
  41b2d9:	jo     0x41b340
  41b2db:	leave  
  41b2dc:	outs   dx,DWORD PTR ds:[esi]
  41b2dd:	sub    esp,DWORD PTR [ecx-0x67234e5d]
  41b2e3:	imul   ecx,edx,0xffffffe8
  41b2e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b2e7:	or     DWORD PTR [ecx+ebx*1],0x9
  41b2eb:	xchg   ecx,eax
  41b2ec:	stos   BYTE PTR es:[edi],al
  41b2ed:	ss pushf 
  41b2ef:	mov    ah,0x5
  41b2f1:	stos   BYTE PTR es:[edi],al
  41b2f2:	cmp    dh,bl
  41b2f4:	maskmovq mm1,mm1
  41b2f7:	ins    BYTE PTR es:[edi],dx
  41b2f8:	ret    0x6800
  41b2fb:	jmp    0xa871:0xa1e99427
  41b302:	mov    edx,0xe80a4329
  41b307:	jl     0x41b304
  41b309:	jmp    0x137f:0x716ef13a
  41b310:	clc    
  41b311:	cwde   
  41b312:	sbb    BYTE PTR [edi],cl
  41b314:	int3   
  41b315:	inc    edi
  41b316:	xchg   edx,eax
  41b317:	cdq    
  41b318:	push   cs
  41b319:	stc    
  41b31a:	cdq    
  41b31b:	mov    ds:0x353ca22e,al
  41b320:	push   cs
  41b321:	pop    ecx
  41b322:	push   0xc491fe13
  41b327:	mov    ebp,0x417f9203
  41b32c:	xor    BYTE PTR [eax+0x2734540c],dh
  41b332:	xchg   esp,eax
  41b333:	adc    eax,0x5050eeef
  41b338:	cmc    
  41b339:	and    DWORD PTR [ebx+0x69],0xffdc4a1
  41b340:	ins    DWORD PTR es:[edi],dx
  41b341:	mov    edi,0x78302b1b
  41b346:	push   esp
  41b347:	sub    edi,eax
  41b349:	lods   al,BYTE PTR ds:[esi]
  41b34a:	dec    esp
  41b34b:	push   ebp
  41b34c:	aam    0xc9
  41b34e:	fbld   TBYTE PTR [esi-0x73]
  41b351:	popf   
  41b352:	fwait
  41b353:	stos   BYTE PTR es:[edi],al
  41b354:	sahf   
  41b355:	add    BYTE PTR [edx-0x3a615a24],0x79
  41b35c:	push   esi
  41b35d:	cmp    al,0xb6
  41b35f:	sbb    BYTE PTR [edi-0x568b4d4b],0x23
  41b366:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b367:	xchg   DWORD PTR [edx-0x53b318dd],edi
  41b36d:	into   
  41b36e:	ja     0x41b39b
  41b370:	fwait
  41b371:	cs cli 
  41b373:	mov    dl,0x7e
  41b375:	sub    BYTE PTR [ebp+0x3f],dh
  41b378:	cmp    bh,BYTE PTR [edi-0x5b]
  41b37b:	sub    BYTE PTR [edx],0x83
  41b37e:	sar    DWORD PTR [eax+0x25a96956],cl
  41b384:	(bad)
  41b389:	xchg   esp,eax
  41b38a:	cdq    
  41b38b:	xchg   esp,eax
  41b38c:	dec    esi
  41b38d:	jmp    0x41b323
  41b38f:	rcr    DWORD PTR [ebx-0x66c13294],0x23
  41b396:	outs   dx,DWORD PTR ds:[esi]
  41b397:	imul   edi,DWORD PTR [edi+0x35],0x80b5d968
  41b39e:	aaa    
  41b39f:	fwait
  41b3a0:	pushf  
  41b3a1:	loop   0x41b3fd
  41b3a3:	lods   al,BYTE PTR ds:[esi]
  41b3a4:	xor    eax,0x92b29934
  41b3a9:	aaa    
  41b3aa:	and    eax,DWORD PTR [eax-0x34]
  41b3ad:	xor    BYTE PTR [ecx+ebp*1+0x557419a5],bl
  41b3b4:	repnz push ss
  41b3b6:	dec    edi
  41b3b7:	(bad)  
  41b3b8:	sbb    BYTE PTR [edx],al
  41b3ba:	fidiv  WORD PTR [esi]
  41b3bc:	xchg   ebx,eax
  41b3bd:	scas   eax,DWORD PTR es:[edi]
  41b3be:	push   ebp
  41b3bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b3c0:	jb     0x41b375
  41b3c2:	sbb    al,0x16
  41b3c4:	inc    ecx
  41b3c5:	lock pushf 
  41b3c7:	dec    ebx
  41b3c8:	(bad)  
  41b3c9:	mov    edi,0x5d652003
  41b3ce:	add    al,0x14
  41b3d0:	mov    esi,0x2fddabc
  41b3d5:	jne    0x41b3f8
  41b3d7:	pop    esp
  41b3d8:	sub    bl,BYTE PTR [edx]
  41b3da:	retf   0xde2b
  41b3dd:	jmp    0x94e92e9d
  41b3e2:	push   0xfffffff1
  41b3e4:	jno    0x41b37a
  41b3e6:	or     bh,bl
  41b3e8:	fstp   TBYTE PTR [eax-0x49]
  41b3eb:	dec    esp
  41b3ec:	out    dx,al
  41b3ed:	push   esp
  41b3ee:	fistp  DWORD PTR [ebp+0x1b]
  41b3f1:	xor    eax,0xbe0dc501
  41b3f6:	into   
  41b3f7:	pushf  
  41b3f8:	push   esp
  41b3f9:	lock sub bl,BYTE PTR ds:0x3ad5b0a3
  41b400:	dec    esp
  41b401:	sbb    eax,0x1af9215
  41b406:	pop    ds
  41b407:	dec    esi
  41b408:	jo     0x41b475
  41b40a:	int    0x84
  41b40c:	xchg   esp,eax
  41b40d:	inc    esi
  41b40e:	mov    edx,0x8e650112
  41b413:	out    dx,al
  41b414:	pop    esi
  41b415:	outs   dx,BYTE PTR ds:[esi]
  41b416:	pop    eax
  41b417:	push   esp
  41b418:	xor    eax,DWORD PTR [edi-0x3ff8ffce]
  41b41e:	sti    
  41b41f:	addr16 (bad) 
  41b421:	jnp    0x41b3aa
  41b423:	cmp    BYTE PTR [esi-0x50],0x5e
  41b427:	sub    DWORD PTR [edi-0x122185cb],edi
  41b42d:	dec    esi
  41b42e:	cmc    
  41b42f:	xchg   edi,eax
  41b430:	jo     0x41b3c2
  41b432:	cdq    
  41b433:	jae    0x41b406
  41b435:	gs mov ecx,0x94240637
  41b43b:	leave  
  41b43c:	mov    ebp,0x33959fe8
  41b441:	mov    DWORD PTR [edi+0x3a3c8110],eax
  41b447:	test   DWORD PTR ds:[ebx+eax*2+0xa6fdd5d],esi
  41b44f:	jne    0x41b495
  41b451:	sbb    al,0x50
  41b453:	lods   eax,DWORD PTR ds:[esi]
  41b454:	imul   edx,DWORD PTR [ebx+edx*8+0x27],0x4f
  41b459:	jmp    0x5bc2:0x29aecf29
  41b460:	jg     0x41b488
  41b462:	sbb    dl,BYTE PTR ds:0xa891a7a4
  41b468:	pop    ebx
  41b469:	ror    dh,cl
  41b46b:	call   0xf523:0x608163bc
  41b472:	push   es
  41b473:	push   eax
  41b474:	outs   dx,DWORD PTR ds:[esi]
  41b475:	cdq    
  41b476:	push   ecx
  41b477:	pusha  
  41b478:	pop    ecx
  41b479:	mov    edx,0x2fa00bc5
  41b47e:	mov    eax,ds:0x318b9199
  41b483:	pop    edi
  41b484:	cmp    eax,0x9b801554
  41b489:	sbb    ebx,ebp
  41b48b:	push   ebp
  41b48c:	sbb    dh,BYTE PTR [ebx]
  41b48e:	dec    eax
  41b48f:	or     BYTE PTR ds:0x21ba521f,dh
  41b495:	pop    es
  41b496:	jno    0x41b514
  41b498:	jbe    0x41b44b
  41b49a:	int3   
  41b49b:	cmp    al,0x60
  41b49d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b49e:	xchg   ebx,eax
  41b49f:	lods   eax,DWORD PTR ds:[esi]
  41b4a0:	fst    QWORD PTR [edx-0x73]
  41b4a3:	mov    edi,0x5d1bf7e8
  41b4a8:	jg     0x41b495
  41b4aa:	pop    es
  41b4ab:	dec    edx
  41b4ac:	jnp    0x41b50e
  41b4ae:	js     0x41b4e4
  41b4b0:	dec    edx
  41b4b1:	jno    0x41b522
  41b4b3:	aad    0x14
  41b4b5:	xor    DWORD PTR [eax+0x644c1cae],ebp
  41b4bb:	jb     0x41b50b
  41b4bd:	add    ecx,DWORD PTR [eax-0x2a0b3d05]
  41b4c3:	cld    
  41b4c4:	lahf   
  41b4c5:	lds    eax,FWORD PTR [esi-0x1c082cf3]
  41b4cb:	jecxz  0x41b45a
  41b4cd:	pop    ebx
  41b4ce:	dec    eax
  41b4cf:	(bad)  
  41b4d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b4d1:	gs enter 0xfa60,0x35
  41b4d6:	jp     0x41b475
  41b4d8:	jbe    0x41b47c
  41b4da:	sar    BYTE PTR ds:0xd5c7c8f,0xe4
  41b4e1:	cmp    DWORD PTR [eax-0x65],ebp
  41b4e4:	cli    
  41b4e5:	bound  edi,QWORD PTR [esi+0x46]
  41b4e8:	fldenv [ecx-0x7b53dae0]
  41b4ee:	mov    edx,0x60d62966
  41b4f3:	push   edx
  41b4f4:	stos   BYTE PTR es:[edi],al
  41b4f5:	jmp    0x41b4a9
  41b4f7:	add    ah,BYTE PTR [edi]
  41b4f9:	shl    bh,0x64
  41b4fc:	daa    
  41b4fd:	sub    BYTE PTR [edi+0x43293d25],bh
  41b503:	or     al,0xd
  41b505:	jle    0x41b505
  41b507:	adc    DWORD PTR [edi+0x44b57e77],esp
  41b50d:	sbb    al,0xe8
  41b50f:	pop    ebp
  41b510:	mov    bh,0x70
  41b512:	adc    dl,dh
  41b514:	push   esp
  41b515:	adc    dl,al
  41b517:	dec    edx
  41b518:	adc    dh,BYTE PTR [esi+0x6d]
  41b51b:	add    eax,0x4600d1db
  41b520:	scas   eax,DWORD PTR es:[edi]
  41b521:	(bad)
  41b525:	cwde   
  41b526:	in     al,dx
  41b527:	scas   al,BYTE PTR es:[edi]
  41b528:	xchg   edx,eax
  41b529:	(bad)  
  41b52a:	repnz out dx,al
  41b52c:	inc    esp
  41b52d:	sub    bl,BYTE PTR [ebp+eiz*4-0x20069bae]
  41b534:	mov    edi,0x6e7aa4ed
  41b539:	push   ecx
  41b53a:	leave  
  41b53b:	and    ecx,0xe171efcc
  41b541:	push   es
  41b542:	push   ss
  41b543:	mov    ebp,gs
  41b545:	dec    esp
  41b546:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b547:	arpl   WORD PTR [ecx+ebp*8],si
  41b54a:	push   ebp
  41b54b:	cwde   
  41b54c:	add    dh,BYTE PTR [edi-0x1d34a8ee]
  41b552:	jae    0x41b526
  41b554:	imul   ebx,DWORD PTR [edi+edx*8+0x7c],0xbad34816
  41b55c:	adc    esp,ecx
  41b55e:	adc    DWORD PTR [eax],eax
  41b560:	push   ecx
  41b561:	cmp    cl,dl
  41b563:	imul   ecx
  41b565:	xor    al,0x84
  41b567:	dec    eax
  41b568:	(bad)  
  41b569:	xchg   esp,eax
  41b56a:	aas    
  41b56b:	pushf  
  41b56c:	and    eax,0xe24fb5d4
  41b571:	push   ebx
  41b572:	sub    eax,0xaf5df78c
  41b577:	push   es
  41b578:	out    0xc5,al
  41b57a:	xlat   BYTE PTR ds:[bx]
  41b57c:	in     eax,dx
  41b57d:	fwait
  41b57e:	imul   ebp,ecx,0xfffffff0
  41b581:	inc    ebx
  41b582:	mov    al,ds:0x65951ba6
  41b587:	adc    edi,edi
  41b589:	enter  0xc412,0x94
  41b58d:	adc    eax,0x9d93a04e
  41b592:	test   DWORD PTR [edi],esp
  41b594:	not    DWORD PTR [ebp+0x1a]
  41b597:	cmp    esp,esp
  41b599:	push   edi
  41b59a:	popf   
  41b59b:	aam    0xe6
  41b59d:	adc    DWORD PTR [ecx+0x6fbb2d06],edx
  41b5a3:	test   BYTE PTR [esi+0x9],0xe6
  41b5a7:	packuswb mm5,QWORD PTR [edi]
  41b5aa:	dec    eax
  41b5ab:	jmp    0x69489e13
  41b5b0:	adc    BYTE PTR [ebp+0x47ff36d6],bh
  41b5b6:	xchg   ebx,eax
  41b5b7:	mov    al,0x67
  41b5b9:	dec    ebp
  41b5ba:	jle    0x41b5d2
  41b5bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b5bd:	dec    ecx
  41b5be:	mov    ds:0x91cb8233,al
  41b5c3:	ror    DWORD PTR [edx-0x588fd2b1],1
  41b5c9:	ja     0x41b624
  41b5cb:	repz sbb al,0xf8
  41b5ce:	cs dec edi
  41b5d0:	mov    ebx,0x7223de3e
  41b5d5:	and    DWORD PTR [ecx+0x91e656e],edi
  41b5db:	and    BYTE PTR [eax+0x2aec7fc4],ch
  41b5e1:	mov    edx,0xabe0771
  41b5e6:	adc    BYTE PTR [ebp-0x10],bh
  41b5e9:	inc    ebp
  41b5ea:	and    BYTE PTR [ecx+0x163df764],0x69
  41b5f1:	inc    esi
  41b5f2:	push   ss
  41b5f3:	xor    eax,0x62726cb6
  41b5f8:	(bad)
  41b5fb:	add    DWORD PTR [ebp-0x12],ecx
  41b5fe:	clc    
  41b5ff:	jmp    0xda92f8fe
  41b604:	dec    eax
  41b605:	pusha  
  41b606:	dec    ebx
  41b607:	push   ss
  41b608:	fst    QWORD PTR [ebp+ecx*8-0x7690335f]
  41b60f:	(bad)  
  41b610:	mov    eax,eax
  41b612:	dec    eax
  41b614:	add    eax,0x4e8d5c6b
  41b619:	dec    edx
  41b61a:	pop    ds
  41b61b:	mov    edx,0x7e40985e
  41b620:	jne    0x41b657
  41b622:	jne    0x41b5b3
  41b624:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b625:	push   ebp
  41b626:	inc    eax
  41b627:	push   esp
  41b628:	jae    0x41b5e7
  41b62a:	loopne 0x41b5ba
  41b62c:	mov    esp,0xb29ea0cb
  41b631:	add    eax,0xd153bc49
  41b636:	aad    0xbd
  41b638:	test   al,0x73
  41b63a:	jecxz  0x41b6a2
  41b63c:	out    dx,al
  41b63d:	push   ds
  41b63e:	dec    eax
  41b63f:	xor    DWORD PTR [esp+esi*2],ecx
  41b642:	adc    al,0x30
  41b644:	fcmovb st,st(7)
  41b646:	inc    bl
  41b648:	sbb    DWORD PTR [ebx-0x27],edx
  41b64b:	popf   
  41b64c:	addr16 (bad) 
  41b64e:	xor    edx,eax
  41b650:	imul   ebx,DWORD PTR [eax+0x4f98f664],0x6c05efb2
  41b65a:	cmp    DWORD PTR [ecx+0x0],esp
  41b660:	add    BYTE PTR [eax],al
  41b662:	(bad)  
  41b663:	aaa    
  41b664:	sti    
  41b665:	addr16 sti 
  41b667:	out    dx,eax
  41b668:	fidiv  WORD PTR [edi-0x5c01975c]
  41b66e:	jno    0x41b6b1
  41b670:	xchg   dl,cl
  41b672:	outs   dx,DWORD PTR ds:[esi]
  41b673:	xor    al,BYTE PTR [ecx]
  41b675:	add    dl,dh
  41b677:	add    al,0x0
  41b679:	add    dh,bh
  41b67b:	out    0xaa,ax
  41b67e:	imul   esi,DWORD PTR [edi+0xdbf0858],0x8933fd12
  41b688:	shl    BYTE PTR [esi-0x6f003aca],0xda
  41b68f:	(bad)  
  41b690:	jecxz  0x41b671
  41b692:	lods   al,BYTE PTR ds:[esi]
  41b693:	pop    edx
  41b694:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b695:	and    eax,ebx
  41b697:	mov    ebp,0x902a2cb
  41b69c:	sub    bl,dh
  41b69e:	fwait
  41b69f:	dec    ebp
  41b6a0:	or     ebp,DWORD PTR [edx+ebp*8+0x51]
  41b6a4:	dec    esp
  41b6a5:	lahf   
  41b6a6:	mov    cl,0x3f
  41b6a8:	mov    bl,0x18
  41b6aa:	cmp    edi,DWORD PTR [ebp+0x24a8df7c]
  41b6b0:	loopne 0x41b699
  41b6b2:	push   ss
  41b6b3:	cwde   
  41b6b4:	sahf   
  41b6b5:	mov    eax,0xc7eaf74b
  41b6ba:	mov    bh,al
  41b6bc:	adc    al,0x90
  41b6be:	ret    0xa308
  41b6c1:	call   0xec12:0xe63b3d71
  41b6c8:	imul   ecx,edx,0x3c
  41b6cb:	rol    BYTE PTR [edx-0x2],cl
  41b6ce:	ror    BYTE PTR [edi+ecx*8],cl
  41b6d1:	fdivp  st(5),st
  41b6d3:	jno    0x41b656
  41b6d5:	xor    al,0x44
  41b6d7:	sub    eax,DWORD PTR [edx-0x384c96ee]
  41b6dd:	test   DWORD PTR [esi],0xc09c2b57
  41b6e3:	cwde   
  41b6e4:	push   edx
  41b6e5:	ss loopne 0x41b678
  41b6e8:	or     eax,0xd9662488
  41b6ed:	sub    edx,DWORD PTR [eax+0x64]
  41b6f0:	iret   
  41b6f1:	push   ds
  41b6f2:	fwait
  41b6f3:	sbb    BYTE PTR [ecx+0xdc6b586],bl
  41b6f9:	fadd   QWORD PTR [ebx]
  41b6fb:	in     eax,dx
  41b6fc:	mov    WORD PTR [edi+0x38],cs
  41b6ff:	and    DWORD PTR [ebx-0x5da4ee2e],edx
  41b705:	add    DWORD PTR [edi-0x46e59aac],edx
  41b70b:	sahf   
  41b70c:	sbb    DWORD PTR [edx-0x65d435d6],ebx
  41b712:	push   ss
  41b713:	xor    ah,cl
  41b715:	inc    eax
  41b716:	jne    0x41b737
  41b718:	stos   DWORD PTR es:[edi],eax
  41b719:	bound  edx,QWORD PTR [edx+0x9362e60]
  41b71f:	pop    ebx
  41b720:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b721:	push   ebx
  41b722:	mov    fs,WORD PTR [eax]
  41b724:	add    eax,0x4c32a150
  41b729:	cmc    
  41b72a:	jne    0x41b793
  41b72c:	sbb    DWORD PTR [esi-0x3a220016],edx
  41b732:	xchg   DWORD PTR [edi+0x1d078868],ebp
  41b738:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b739:	mov    bh,0x89
  41b73b:	pop    ecx
  41b73c:	jns    0x41b6e1
  41b73e:	inc    esp
  41b73f:	add    bl,ch
  41b741:	jne    0x41b74e
  41b743:	xor    edx,DWORD PTR [ebx-0x7b]
  41b746:	fs aas 
  41b748:	fnsetpm(287 only) 
  41b74a:	add    al,0x87
  41b74c:	sar    BYTE PTR [eax-0x32a7910e],1
  41b752:	or     al,dh
  41b754:	std    
  41b755:	add    cl,dh
  41b757:	loopne 0x41b790
  41b759:	xor    BYTE PTR [ebx-0x265681f1],ah
  41b75f:	leave  
  41b760:	inc    ecx
  41b761:	mov    ds:0xa7758bc0,al
  41b766:	cmp    edx,DWORD PTR [edi+0x1deeb0f7]
  41b76c:	mov    DWORD PTR ds:0x44888aea,edi
  41b772:	inc    esp
  41b773:	cmp    eax,0x7d93f847
  41b778:	jge    0x41b751
  41b77a:	ret    
  41b77b:	mov    cl,0x52
  41b77d:	je     0x41b767
  41b77f:	es (bad) 
  41b781:	mov    edx,0x3e8587c6
  41b786:	xlat   BYTE PTR ds:[ebx]
  41b787:	lods   al,BYTE PTR ds:[esi]
  41b788:	dec    ebp
  41b789:	loop   0x41b7eb
  41b78b:	dec    esp
  41b78c:	cld    
  41b78d:	sar    dh,0x85
  41b790:	(bad)  
  41b791:	stos   BYTE PTR es:[edi],al
  41b792:	pop    edi
  41b793:	sub    DWORD PTR [esi+0x12105459],edx
  41b799:	or     cl,BYTE PTR [ebx+0x1f4828a8]
  41b79f:	ins    DWORD PTR es:[edi],dx
  41b7a0:	ins    DWORD PTR es:[edi],dx
  41b7a1:	pop    ds
  41b7a2:	leave  
  41b7a3:	cmp    BYTE PTR [edi-0x6e2d3baa],ch
  41b7a9:	cs shr edx,0xbb
  41b7ad:	adc    BYTE PTR [ebx],al
  41b7af:	xchg   ecx,eax
  41b7b0:	push   cs
  41b7b1:	popa   
  41b7b2:	sub    DWORD PTR [edx-0x22],ebx
  41b7b5:	sub    cl,BYTE PTR [ecx-0x41]
  41b7b8:	and    ebp,DWORD PTR [esi-0xf]
  41b7bb:	or     al,0x2e
  41b7bd:	popa   
  41b7be:	jne    0x41b77b
  41b7c0:	retf   
  41b7c1:	dec    edi
  41b7c2:	and    bl,ch
  41b7c4:	pop    ebx
  41b7c5:	mov    bl,0x36
  41b7c7:	div    ecx
  41b7c9:	mov    WORD PTR [edx],gs
  41b7cb:	adc    dh,ch
  41b7cd:	(bad)  
  41b7ce:	jno    0x41b828
  41b7d0:	(bad)  
  41b7d1:	push   ebx
  41b7d2:	(bad)  
  41b7d3:	jmp    0x41b786
  41b7d5:	cmp    ebx,esi
  41b7d7:	mov    edi,0x54de67d3
  41b7dc:	call   0x9e71ceb1
  41b7e1:	(bad)  
  41b7e2:	xor    DWORD PTR [edi],edi
  41b7e4:	int    0xbc
  41b7e6:	lock int3 
  41b7e8:	in     al,dx
  41b7e9:	pop    edx
  41b7ea:	pusha  
  41b7eb:	mov    dl,0xb3
  41b7ed:	pop    es
  41b7ee:	or     esi,DWORD PTR [ecx]
  41b7f0:	ret    0x7d13
  41b7f3:	test   al,0x81
  41b7f5:	cmp    al,0x66
  41b7f7:	xor    dl,bh
  41b7f9:	xchg   esi,eax
  41b7fa:	sub    BYTE PTR [ebx+edx*4],bh
  41b7fd:	add    eax,0xc73261f4
  41b802:	repnz pushf 
  41b804:	xchg   dl,dl
  41b806:	add    DWORD PTR [esi],0x3d
  41b809:	mov    esp,0xd4e1e438
  41b80e:	adc    DWORD PTR [ecx+0x43518068],edx
  41b814:	xor    DWORD PTR [edi-0x27],ebx
  41b817:	mov    edi,0x1e143bbc
  41b81c:	test   BYTE PTR [ebp+0x2d7b1bfd],ah
  41b822:	je     0x41b892
  41b824:	mov    edi,0x33447cfa
  41b829:	test   al,0xfd
  41b82b:	aaa    
  41b82c:	ss mov ch,0x91
  41b82f:	mov    dl,0x6a
  41b831:	mov    ah,0x31
  41b833:	push   ecx
  41b834:	push   cs
  41b835:	fst    DWORD PTR [ebx+eax*8+0x68ee8c9]
  41b83c:	inc    ebx
  41b83d:	fidivr DWORD PTR [eax+0x4d]
  41b840:	xor    dl,BYTE PTR [esi+0x4cee195]
  41b846:	loop   0x41b7fa
  41b848:	push   cs
  41b849:	retf   0x2dd1
  41b84c:	jno    0x41b816
  41b84e:	div    BYTE PTR [eax+0x67]
  41b851:	mov    al,0x21
  41b853:	push   ebp
  41b854:	push   ebp
  41b855:	cmp    DWORD PTR [eax],ebx
  41b857:	cwde   
  41b858:	test   esi,esi
  41b85a:	mov    ?,edx
  41b85c:	jle    0x41b7ff
  41b85e:	cmp    al,0xc8
  41b860:	test   eax,0x57b3c76c
  41b865:	ret    
  41b866:	into   
  41b867:	and    eax,0x4a1e8a3
  41b86c:	jge    0x41b7ee
  41b86e:	rol    dl,1
  41b870:	xchg   edx,eax
  41b871:	or     edx,edi
  41b873:	adc    ecx,eax
  41b875:	mov    BYTE PTR [ebp-0x6d],dh
  41b878:	xchg   ebx,eax
  41b879:	gs clc 
  41b87b:	and    al,0xdc
  41b87d:	jg     0x41b8e8
  41b87f:	aam    0x2a
  41b881:	inc    edx
  41b882:	mov    dh,cl
  41b884:	and    al,0xa9
  41b886:	cmp    BYTE PTR [eax],dh
  41b888:	ret    
  41b889:	cdq    
  41b88a:	jo     0x41b8b8
  41b88c:	jmp    0x964f:0x1805ee0a
  41b893:	xor    BYTE PTR [ecx-0x28],dl
  41b896:	test   al,0xaf
  41b898:	mov    eax,DWORD PTR [eax+eiz*8-0x52]
  41b89c:	jecxz  0x41b917
  41b89e:	push   ss
  41b89f:	loop   0x41b8d1
  41b8a1:	adc    BYTE PTR [ecx-0x368cef65],ah
  41b8a7:	clc    
  41b8a8:	mov    ebp,?
  41b8aa:	ret    0xb516
  41b8ad:	test   BYTE PTR [edx+0x2affbcf4],dl
  41b8b3:	mov    ah,0xcc
  41b8b5:	sub    al,0x41
  41b8b7:	push   edx
  41b8b8:	cs jmp 0x6e71:0x252b08f1
  41b8c0:	mov    eax,0x56081aff
  41b8c5:	(bad)  
  41b8c6:	and    esi,DWORD PTR [ebx-0x36]
  41b8c9:	mov    ah,0xb4
  41b8cb:	out    dx,eax
  41b8cc:	rcl    dl,0xd7
  41b8cf:	xchg   ecx,eax
  41b8d0:	pop    ds
  41b8d1:	dec    esi
  41b8d2:	and    al,0x13
  41b8d4:	and    esi,DWORD PTR ds:0xa0ddaa36
  41b8da:	scas   eax,DWORD PTR es:[edi]
  41b8db:	pop    esp
  41b8dc:	mov    ds:0xd4bd68ab,eax
  41b8e1:	mov    edi,0x478e83d1
  41b8e6:	dec    edi
  41b8e7:	mov    esp,DWORD PTR [esp+eiz*8+0x5f]
  41b8eb:	fisttp WORD PTR [esi+0x66]
  41b8ee:	aad    0x51
  41b8f0:	jbe    0x41b90b
  41b8f2:	cmc    
  41b8f3:	cs cld 
  41b8f5:	add    DWORD PTR [eax],edi
  41b8f7:	jns    0x41b8b4
  41b8f9:	cmp    DWORD PTR [edi],0x9711d384
  41b8ff:	jno    0x41b8aa
  41b901:	scas   al,BYTE PTR es:[edi]
  41b902:	mov    ah,0x67
  41b904:	xchg   edx,eax
  41b905:	test   BYTE PTR [edi],bl
  41b907:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b908:	sti    
  41b909:	xchg   esp,eax
  41b90a:	jnp    0x1f7bec54
  41b910:	rol    DWORD PTR ds:0x3b7729ec,cl
  41b916:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b917:	cmp    eax,0xeff9294c
  41b91c:	xlat   BYTE PTR ds:[ebx]
  41b91d:	mov    ebp,0x65eec341
  41b922:	sub    al,0x1e
  41b924:	(bad)  
  41b925:	hlt    
  41b926:	jecxz  0x41b9a2
  41b928:	dec    ebp
  41b929:	mov    bl,0xd9
  41b92b:	ja     0x41b928
  41b92d:	and    BYTE PTR [ecx+0x79],0x70
  41b931:	and    esi,ecx
  41b933:	pop    edi
  41b934:	(bad)  
  41b935:	pop    ss
  41b936:	lods   al,BYTE PTR ds:[esi]
  41b937:	jnp    0x41b9b3
  41b939:	inc    ebp
  41b93a:	fsub   DWORD PTR [eax+0xf]
  41b93d:	mov    edx,0x400eed0b
  41b942:	cmp    eax,0x5276fe26
  41b947:	js     0x41b934
  41b949:	dec    edi
  41b94a:	xchg   BYTE PTR [esi+0x60bcc0b6],ah
  41b950:	xor    WORD PTR [edi+0xb],0x41
  41b955:	dec    esp
  41b956:	mov    ss,WORD PTR [esi]
  41b958:	and    bl,ch
  41b95a:	shr    ch,0x3d
  41b95d:	cli    
  41b95e:	add    edi,DWORD PTR [eax+ebp*1+0x255620e]
  41b965:	push   ds
  41b966:	loop   0x41b9a9
  41b968:	das    
  41b969:	into   
  41b96a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b96b:	dec    ecx
  41b96c:	outs   dx,DWORD PTR ds:[esi]
  41b96d:	jo     0x41b938
  41b96f:	arpl   WORD PTR [ebp+0x29],dx
  41b972:	or     bl,BYTE PTR [esi-0x5c567b67]
  41b978:	dec    edi
  41b979:	sti    
  41b97a:	dec    eax
  41b97b:	cmp    ah,dl
  41b97d:	xchg   edi,ecx
  41b97f:	or     cl,BYTE PTR [ecx+0x6235be1d]
  41b985:	push   DWORD PTR [ecx]
  41b987:	stos   DWORD PTR es:[edi],eax
  41b988:	adc    eax,0xe96f2ae3
  41b98d:	adc    ecx,DWORD PTR [eax-0x8]
  41b990:	nop
  41b991:	pop    es
  41b992:	fucomi st,st(4)
  41b994:	sti    
  41b995:	outs   dx,BYTE PTR ds:[esi]
  41b996:	repnz and edx,DWORD PTR [eax+0x6baeb8c8]
  41b99d:	pushf  
  41b99e:	adc    cl,dh
  41b9a0:	loop   0x41b944
  41b9a2:	jno    0x41b9e2
  41b9a4:	fdivr  DWORD PTR [ebx+ecx*8]
  41b9a7:	ins    BYTE PTR es:[edi],dx
  41b9a8:	dec    edx
  41b9a9:	call   0x4af1:0xa69bfbc6
  41b9b0:	pushf  
  41b9b1:	in     al,0xa9
  41b9b3:	cli    
  41b9b4:	retf   0x8d3e
  41b9b7:	mov    ds:0x82bc7cbc,al
  41b9bc:	fild   WORD PTR [esi-0x44]
  41b9bf:	ins    BYTE PTR es:[edi],dx
  41b9c0:	mov    bl,0x9f
  41b9c2:	retf   0xf5a7
  41b9c5:	adc    al,0x14
  41b9c7:	inc    ecx
  41b9c8:	xorps  xmm3,XMMWORD PTR [edx-0x71]
  41b9cc:	adc    eax,0x7b9e9b72
  41b9d1:	leave  
  41b9d2:	pop    eax
  41b9d3:	xor    DWORD PTR [ebp-0x7444b94c],eax
  41b9d9:	mov    edx,0x3ac6ce52
  41b9de:	ins    BYTE PTR es:[edi],dx
  41b9df:	test   eax,0xeeb1e099
  41b9e4:	test   BYTE PTR [eax+0x3746cf59],bh
  41b9ea:	xchg   ebp,eax
  41b9eb:	adc    cl,dl
  41b9ed:	in     al,0xb5
  41b9ef:	sub    dh,dh
  41b9f1:	add    ebp,edx
  41b9f3:	pop    es
  41b9f4:	xchg   esi,eax
  41b9f5:	dec    edx
  41b9f6:	rol    DWORD PTR [ecx],0xc9
  41b9f9:	js     0x41b99b
  41b9fb:	sbb    BYTE PTR [eax+ebx*2],bh
  41b9fe:	pop    edi
  41b9ff:	(bad)  
  41ba00:	jno    0x41ba68
  41ba02:	cmp    ch,BYTE PTR [ecx+0x1d78b20c]
  41ba08:	xchg   edi,eax
  41ba09:	xor    bh,ch
  41ba0b:	sbb    eax,0x1522e90b
  41ba10:	es test ebx,ebx
  41ba13:	cwde   
  41ba14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ba15:	cmp    al,0x11
  41ba17:	in     eax,0xfd
  41ba19:	ins    DWORD PTR es:[edi],dx
  41ba1a:	jp     0x41ba5a
  41ba1c:	and    DWORD PTR [ebp+0x70],edx
  41ba1f:	das    
  41ba20:	ret    
  41ba21:	mov    eax,DWORD PTR [ebx+edx*4+0x71a822c2]
  41ba28:	pushf  
  41ba29:	adc    al,0x3f
  41ba2b:	in     al,dx
  41ba2c:	jbe    0x41ba8b
  41ba2e:	adc    esi,eax
  41ba30:	call   0x8f2a:0x207240e8
  41ba37:	or     BYTE PTR [ebx+0x65],ah
  41ba3a:	iret   
  41ba3b:	je     0x41b9e9
  41ba3d:	fldcw  WORD PTR [esi+ebx*4]
  41ba40:	lods   al,BYTE PTR ds:[esi]
  41ba41:	cmp    BYTE PTR [esp+ebp*4+0x1],bl
  41ba45:	adc    esi,DWORD PTR [eax+0x3afb5418]
  41ba4b:	push   edx
  41ba4c:	mov    eax,ds:0x5b34faed
  41ba51:	fisttp QWORD PTR [ebx+edi*1+0x37]
  41ba55:	jmp    0x41b9ee
  41ba57:	sar    BYTE PTR [ebp+eiz*4+0x7b790800],1
  41ba5e:	dec    esi
  41ba5f:	jne    0x41ba91
  41ba61:	push   cs
  41ba62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ba63:	rcr    DWORD PTR [eax+0x2f],1
  41ba66:	fwait
  41ba67:	mul    DWORD PTR [esi+0x429435ab]
  41ba6d:	ins    DWORD PTR es:[edi],dx
  41ba6e:	daa    
  41ba6f:	xchg   al,ah
  41ba71:	nop
  41ba72:	mov    ebx,DWORD PTR [ebp-0x74f84b43]
  41ba78:	leave  
  41ba79:	xor    al,0xe
  41ba7b:	and    edx,esi
  41ba7d:	push   ss
  41ba7e:	cmp    BYTE PTR [esi+0x26],ah
  41ba81:	mov    eax,ds:0xadd7ce64
  41ba86:	aas    
  41ba87:	jl     0x41ba71
  41ba89:	mov    cl,0xfa
  41ba8b:	inc    edi
  41ba8c:	push   ss
  41ba8d:	inc    eax
  41ba8e:	nop
  41ba8f:	jne    0x41bac6
  41ba91:	out    dx,al
  41ba92:	dec    ebp
  41ba93:	and    DWORD PTR [ebp+0x6954eb88],ebx
  41ba99:	jb     0x41bad1
  41ba9b:	fnstcw WORD PTR [ecx]
  41ba9d:	scas   eax,DWORD PTR es:[edi]
  41ba9e:	stos   DWORD PTR es:[edi],eax
  41ba9f:	or     ebx,DWORD PTR [ebp+0x27fd0b88]
  41baa5:	xchg   cl,bl
  41baa7:	sub    dh,bl
  41baa9:	push   eax
  41baaa:	ja     0x41bb0e
  41baac:	into   
  41baad:	aaa    
  41baae:	and    eax,DWORD PTR [ebx+0x54]
  41bab1:	notrack call DWORD PTR [ecx+ecx*8+0x59b31dd1]
  41bab9:	hlt    
  41baba:	outs   dx,DWORD PTR ds:[esi]
  41babb:	jge    0x41bb20
  41babd:	test   DWORD PTR [eax+0x32],edi
  41bac0:	pop    ss
  41bac1:	dec    ecx
  41bac2:	and    eax,0x63a3d1de
  41bac7:	mov    cs,WORD PTR [ecx]
  41bac9:	bound  edx,QWORD PTR [ebx]
  41bacb:	jo     0x41baf7
  41bacd:	sbb    ecx,DWORD PTR [esi]
  41bacf:	test   ah,ch
  41bad1:	sbb    DWORD PTR [edx-0x5b3c83e1],eax
  41bad7:	and    eax,0x37b2f58c
  41badc:	inc    ecx
  41badd:	add    al,0x28
  41badf:	xchg   edx,eax
  41bae0:	mov    dh,0x2d
  41bae2:	iret   
  41bae3:	xchg   ecx,eax
  41bae4:	inc    eax
  41bae5:	push   ebp
  41bae6:	loop   0x41ba9e
  41bae8:	pop    esi
  41bae9:	js     0x41bb0f
  41baeb:	add    BYTE PTR [eax-0x61],dh
  41baee:	jnp    0x41bad9
  41baf0:	nop
  41baf1:	mov    ds:0x837b2446,eax
  41baf6:	mov    eax,ds:0x670b97e6
  41bafb:	jg     0x41bb33
  41bafd:	inc    edi
  41bafe:	mov    DWORD PTR [eax-0x6c],ebp
  41bb01:	push   eax
  41bb02:	out    0x55,eax
  41bb04:	inc    eax
  41bb05:	ret    
  41bb06:	imul   edx,DWORD PTR [edi],0xffffffbc
  41bb09:	je     0x41bb4f
  41bb0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bb0c:	adc    eax,0x991826e9
  41bb11:	int3   
  41bb12:	cmc    
  41bb13:	aaa    
  41bb14:	fwait
  41bb15:	mov    esi,0xfcc1c041
  41bb1a:	out    dx,al
  41bb1b:	sahf   
  41bb1c:	or     ecx,esp
  41bb1e:	adc    al,0xc9
  41bb20:	out    0x9b,al
  41bb22:	add    DWORD PTR [edi-0x61],ecx
  41bb25:	mov    ebx,0x4feeefbc
  41bb2a:	cwde   
  41bb2b:	mov    fs,esi
  41bb2d:	out    dx,al
  41bb2e:	in     al,dx
  41bb2f:	sub    DWORD PTR [ecx+0x2a],ebp
  41bb32:	inc    ecx
  41bb33:	mov    esp,0x15e78abc
  41bb38:	xor    eax,0x4a8b5434
  41bb3d:	adc    eax,0xaa5aeb08
  41bb42:	jo     0x41bb20
  41bb44:	hlt    
  41bb45:	arpl   WORD PTR [esi],cx
  41bb47:	xor    DWORD PTR [ebx+ecx*4+0x6d9f2a94],ebx
  41bb4e:	fistp  WORD PTR [edx-0x7b7813ce]
  41bb54:	jnp    0x41bba1
  41bb56:	dec    ebx
  41bb57:	popf   
  41bb58:	add    eax,0x5dc6befb
  41bb5d:	scas   eax,DWORD PTR es:[edi]
  41bb5e:	and    esi,ecx
  41bb60:	shl    DWORD PTR [ebx+0x63],0x9c
  41bb64:	stos   BYTE PTR es:[edi],al
  41bb65:	sub    BYTE PTR [ebp-0x45354a29],0x78
  41bb6c:	add    BYTE PTR [eax],al
  41bb6e:	add    BYTE PTR [eax],al
  41bb70:	add    BYTE PTR [eax],al
  41bb72:	out    0x40,al
  41bb74:	sbb    eax,0xee5dbf15
  41bb79:	repz adc eax,0xb9442583
  41bb7f:	mov    cl,0x3e
  41bb81:	jno    0x41bbe4
  41bb83:	aaa    
  41bb84:	add    DWORD PTR [eax],eax
  41bb86:	repnz add al,0x0
  41bb89:	add    BYTE PTR [ecx],bh
  41bb8b:	mov    bl,ch
  41bb8d:	sub    eax,eax
  41bb8f:	out    dx,al
  41bb90:	fimul  DWORD PTR [ebx-0x361ad5cd]
  41bb96:	cmp    eax,0x314bd381
  41bb9b:	sub    eax,0xa186d31c
  41bba0:	stos   BYTE PTR es:[edi],al
  41bba1:	dec    ebx
  41bba2:	leave  
  41bba3:	push   esp
  41bba4:	xor    edx,DWORD PTR [edi]
  41bba6:	inc    ecx
  41bba7:	fwait
  41bba8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bba9:	scas   eax,DWORD PTR es:[edi]
  41bbaa:	clc    
  41bbab:	push   edi
  41bbac:	aad    0xaa
  41bbae:	popf   
  41bbaf:	add    BYTE PTR [ebx-0x18],ah
  41bbb2:	pop    ecx
  41bbb3:	int3   
  41bbb4:	pushf  
  41bbb5:	(bad)  
  41bbb6:	lds    edx,FWORD PTR [esi]
  41bbb8:	jle    0x41bba5
  41bbba:	push   esi
  41bbbb:	popa   
  41bbbc:	cmp    BYTE PTR ds:0x5ad7f1ea,ch
  41bbc2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bbc3:	js     0x41bbdf
  41bbc5:	enter  0x85de,0xac
  41bbc9:	iret   
  41bbca:	rcr    DWORD PTR [ebx-0x776db67e],cl
  41bbd0:	mov    esi,0xb7b4a63f
  41bbd5:	sbb    al,0xae
  41bbd7:	adc    BYTE PTR [esi-0x7b],ch
  41bbda:	or     eax,0xee0aa9e8
  41bbdf:	or     eax,DWORD PTR [ebp+edi*2-0x16b1cc10]
  41bbe6:	or     al,0x19
  41bbe8:	mov    esp,ss
  41bbea:	retf   0xa95d
  41bbed:	xchg   esp,eax
  41bbee:	stos   BYTE PTR es:[edi],al
  41bbef:	mov    fs,WORD PTR [edi-0x2df56424]
  41bbf5:	lea    edx,[eax-0x19]
  41bbf8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bbf9:	sar    BYTE PTR [ebx-0x59f92b61],1
  41bbff:	jb     0x41bc1b
  41bc01:	sub    ch,BYTE PTR [eax+0x26782ce7]
  41bc07:	sub    al,0x2c
  41bc09:	lahf   
  41bc0a:	test   DWORD PTR [eax],edi
  41bc0c:	adc    al,0xcf
  41bc0e:	retf   
  41bc0f:	sbb    eax,0xa1820f5c
  41bc14:	mov    ds:0xc87d8432,al
  41bc19:	es pop esp
  41bc1b:	mov    ebx,0x64d05b3e
  41bc20:	in     eax,dx
  41bc21:	in     eax,dx
  41bc22:	add    esp,eax
  41bc24:	rcl    BYTE PTR [ebp+esi*8+0x42],0xca
  41bc29:	sbb    ebx,DWORD PTR [ebx-0x2]
  41bc2c:	fnstsw WORD PTR [esp+ebx*1+0x5993b374]
  41bc33:	xchg   BYTE PTR [ecx-0x7],ch
  41bc36:	fadd   st(7),st
  41bc38:	ja     0x41bca0
  41bc3a:	arpl   dx,cx
  41bc3c:	xchg   esi,eax
  41bc3d:	and    DWORD PTR [eax-0x1b],edi
  41bc40:	sbb    BYTE PTR [edx+0xe],al
  41bc43:	xlat   BYTE PTR ds:[ebx]
  41bc44:	das    
  41bc45:	dec    esi
  41bc46:	in     eax,0xd8
  41bc48:	aad    0xed
  41bc4a:	jmp    0xc0f0eeb8
  41bc4f:	xlat   BYTE PTR ds:[ebx]
  41bc50:	aaa    
  41bc51:	fiadd  DWORD PTR [ebx+ebp*2-0x3b383b90]
  41bc58:	mov    ebp,0xf58b2f98
  41bc5d:	sub    al,0x4
  41bc5f:	(bad)  
  41bc60:	inc    eax
  41bc61:	adc    eax,DWORD PTR [ebx-0x2d]
  41bc64:	sub    al,0x5e
  41bc66:	jb     0x41bc53
  41bc68:	sbb    bl,BYTE PTR gs:[ebp-0x1a]
  41bc6c:	test   al,0xdf
  41bc6e:	mov    bh,0x89
  41bc70:	pop    es
  41bc71:	pop    ds
  41bc72:	popa   
  41bc73:	sbb    DWORD PTR [ecx],ecx
  41bc75:	in     al,0x7
  41bc77:	and    ebp,ebx
  41bc79:	fs jle 0x41bc91
  41bc7c:	pusha  
  41bc7d:	jb     0x41bc6f
  41bc7f:	push   ebx
  41bc80:	mov    esi,0x480a138a
  41bc85:	jg     0x41bcd0
  41bc87:	pop    es
  41bc88:	pushf  
  41bc89:	xor    ebx,esi
  41bc8b:	dec    ecx
  41bc8c:	aas    
  41bc8d:	jge    0x41bcfd
  41bc8f:	push   ebp
  41bc90:	adc    al,cl
  41bc92:	sti    
  41bc93:	jecxz  0x41bcae
  41bc95:	adc    DWORD PTR [ebx-0x1fa2931d],edi
  41bc9b:	fbld   TBYTE PTR [ebx+0x7920b236]
  41bca1:	xchg   edi,eax
  41bca2:	jecxz  0x41bd19
  41bca4:	dec    esp
  41bca5:	cmp    DWORD PTR ds:0x42094bf8,ebx
  41bcab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bcac:	aad    0x4f
  41bcae:	daa    
  41bcaf:	(bad)  
  41bcb0:	(bad)  
  41bcb1:	mov    esi,0x2949f538
  41bcb6:	ins    DWORD PTR es:[edi],dx
  41bcb7:	push   cs
  41bcb8:	neg    BYTE PTR [eax]
  41bcba:	sub    esp,DWORD PTR [ebp+0x74df8a2b]
  41bcc0:	inc    edx
  41bcc1:	cwde   
  41bcc2:	jb     0x41bd1e
  41bcc4:	mov    ebp,0x607134cb
  41bcc9:	loopne 0x41bcf8
  41bccb:	dec    esp
  41bccc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bccd:	jbe    0x41bd20
  41bccf:	mov    ecx,0xd8983308
  41bcd4:	ret    
  41bcd5:	cmp    esp,0x14
  41bcd8:	daa    
  41bcd9:	sbb    DWORD PTR ds:0xdad550f7,edi
  41bcdf:	dec    ebx
  41bce0:	(bad)  
  41bce2:	push   ecx
  41bce3:	mov    edi,0x1508b7ff
  41bce8:	(bad)  
  41bce9:	xor    edx,DWORD PTR [esi-0x5b377a59]
  41bcef:	out    0x1,al
  41bcf1:	rol    BYTE PTR [ebp+ebx*4-0x5b8e2a6c],cl
  41bcf8:	adc    ecx,ecx
  41bcfa:	popa   
  41bcfb:	int    0x63
  41bcfd:	sar    DWORD PTR [esi+eiz*1+0xff88e10],cl
  41bd04:	shl    DWORD PTR [ebx+0x2a],cl
  41bd07:	bound  edx,QWORD PTR [ecx]
  41bd09:	stos   DWORD PTR es:[edi],eax
  41bd0a:	lahf   
  41bd0b:	imul   ecx,DWORD PTR [eax],0x73
  41bd0e:	cmp    DWORD PTR [ecx-0x76],ebp
  41bd11:	sub    esi,DWORD PTR [edx-0x30]
  41bd14:	rcr    DWORD PTR [esi-0x2b],1
  41bd17:	mov    ebp,0x33f6cf74
  41bd1c:	fsub   st,st(7)
  41bd1e:	nop
  41bd1f:	add    DWORD PTR [edi+0x770a117b],edi
  41bd25:	shr    BYTE PTR [ecx],0x65
  41bd28:	(bad)
  41bd2b:	mov    ebp,0xae721edb
  41bd30:	imul   edx,DWORD PTR [ebx+0x76],0xffffffea
  41bd34:	sub    edx,edx
  41bd36:	xor    bl,BYTE PTR [esp+ecx*8-0x6a]
  41bd3a:	or     BYTE PTR [ebp+0x37],ch
  41bd3d:	pusha  
  41bd3e:	dec    esi
  41bd3f:	fcmove st,st(3)
  41bd41:	pop    edi
  41bd42:	sbb    eax,0xc3e059ac
  41bd47:	std    
  41bd48:	ror    BYTE PTR [edi+0x7e],0x56
  41bd4c:	mov    DWORD PTR [edx],esi
  41bd4e:	push   ecx
  41bd4f:	dec    ecx
  41bd50:	jae    0x41bd18
  41bd52:	sahf   
  41bd53:	and    eax,0x3049312
  41bd58:	idiv   DWORD PTR [edx-0x35]
  41bd5b:	adc    eax,0x74380872
  41bd60:	xchg   DWORD PTR [eax-0x4e],edx
  41bd63:	(bad)  
  41bd64:	int    0x49
  41bd66:	mov    ebx,0x299f706c
  41bd6b:	dec    eax
  41bd6c:	sar    BYTE PTR [ebx-0x30],0xb5
  41bd70:	nop
  41bd71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bd72:	scas   eax,DWORD PTR es:[edi]
  41bd73:	fwait
  41bd74:	idiv   esp
  41bd76:	pusha  
  41bd77:	sbb    edx,esi
  41bd79:	loopne 0x41bcfe
  41bd7b:	mov    al,0xdc
  41bd7d:	mul    cl
  41bd7f:	(bad)  
  41bd81:	hlt    
  41bd82:	cmp    BYTE PTR [ecx+0x2d03a847],dh
  41bd88:	push   es
  41bd89:	sar    DWORD PTR [esi+0x42],cl
  41bd8c:	int3   
  41bd8d:	test   ecx,esi
  41bd8f:	dec    esi
  41bd90:	mov    al,0x12
  41bd92:	(bad)  
  41bd93:	or     al,0x72
  41bd95:	fmul   st,st(5)
  41bd97:	mov    fs,WORD PTR [ecx]
  41bd99:	push   ss
  41bd9a:	dec    esi
  41bd9b:	and    ch,BYTE PTR [edx-0x11d2e22b]
  41bda1:	sbb    ebx,DWORD PTR [esi]
  41bda3:	jno    0x41bd2f
  41bda5:	mov    edx,0x608a7fb6
  41bdaa:	addr16 dec edi
  41bdac:	lock or edi,edx
  41bdaf:	xchg   esp,eax
  41bdb0:	and    cl,BYTE PTR [esi]
  41bdb2:	adc    ah,BYTE PTR [edi]
  41bdb4:	cmc    
  41bdb5:	pop    eax
  41bdb6:	xchg   ecx,eax
  41bdb7:	rcl    DWORD PTR [edx],1
  41bdb9:	or     al,0x38
  41bdbb:	rol    esi,cl
  41bdbd:	xchg   ebx,eax
  41bdbe:	ds in  eax,dx
  41bdc0:	and    al,0x2f
  41bdc2:	inc    edi
  41bdc3:	sbb    bh,BYTE PTR [ebx]
  41bdc5:	adc    esi,0x9b231a00
  41bdcb:	outs   dx,BYTE PTR ds:[esi]
  41bdcc:	push   esi
  41bdcd:	and    BYTE PTR [edx+ebp*2+0x15],0x70
  41bdd2:	jmp    DWORD PTR [ecx-0x5f]
  41bdd5:	sbb    edx,DWORD PTR ds:0xd10edfcb
  41bddb:	push   es
  41bddc:	adc    BYTE PTR [esp+ecx*2],dl
  41bddf:	(bad)
  41bde2:	jo     0x41be5e
  41bde4:	sub    DWORD PTR [edi],ecx
  41bde6:	mov    edi,DWORD PTR [edi-0x62e29d3a]
  41bdec:	aad    0xbd
  41bdee:	js     0x41be3d
  41bdf0:	cmp    al,0x9c
  41bdf2:	mov    ?,WORD PTR ds:0x5e397709
  41bdf8:	fidivr DWORD PTR [ecx]
  41bdfa:	inc    eax
  41bdfb:	xchg   ecx,eax
  41bdfc:	push   edx
  41bdfd:	fwait
  41bdfe:	bound  esp,QWORD PTR [edx-0x10d74e71]
  41be04:	jmp    0x2e09:0xe20f6f6c
  41be0b:	int    0x35
  41be0d:	mov    cl,0xc5
  41be0f:	xor    DWORD PTR [eax+0x6d],0xe
  41be13:	adc    ecx,DWORD PTR ds:0xb04e1d0
  41be19:	loopne 0x41be11
  41be1b:	scas   eax,DWORD PTR es:[edi]
  41be1c:	xchg   BYTE PTR [esp+edi*4+0x1],al
  41be20:	es stos BYTE PTR es:[edi],al
  41be22:	out    dx,al
  41be23:	inc    ebx
  41be24:	aam    0xa6
  41be26:	mul    BYTE PTR [eax]
  41be28:	xchg   edi,eax
  41be29:	pop    edi
  41be2a:	mov    al,0x59
  41be2c:	popf   
  41be2d:	xchg   ebp,eax
  41be2e:	jmp    0x41be88
  41be30:	mov    al,bl
  41be32:	push   ss
  41be33:	push   edx
  41be34:	enter  0xc896,0xd3
  41be38:	mov    bl,0x41
  41be3a:	stc    
  41be3b:	ins    BYTE PTR es:[edi],dx
  41be3c:	fild   DWORD PTR ds:0xd88945d0
  41be42:	fwait
  41be43:	js     0x41be8d
  41be45:	sub    dl,BYTE PTR ds:0x1bf3e104
  41be4b:	add    bh,dh
  41be4d:	adc    eax,0x3c8e3e28
  41be52:	cmp    dl,bl
  41be54:	jmp    0xf680:0x1717729
  41be5b:	sbb    eax,0x3578a6ba
  41be60:	push   edi
  41be61:	jg     0x41be49
  41be63:	push   edx
  41be64:	xor    eax,0xf8c2427d
  41be69:	lods   eax,DWORD PTR ds:[esi]
  41be6a:	loopne 0x41beca
  41be6c:	lock js 0x41bec8
  41be6f:	jno    0x41be21
  41be71:	outs   dx,DWORD PTR ds:[esi]
  41be72:	adc    dh,dl
  41be74:	cmp    esi,edx
  41be76:	inc    ebx
  41be77:	pop    edi
  41be78:	sub    eax,0xdf3647f2
  41be7d:	dec    esi
  41be7e:	xchg   ebx,eax
  41be7f:	jp     0x41beea
  41be81:	add    edx,ecx
  41be83:	ret    0xb3f7
  41be86:	mov    ebx,0xaa7fe06d
  41be8b:	xchg   ebx,eax
  41be8c:	pop    edi
  41be8d:	inc    ebx
  41be8e:	jl     0x41be98
  41be90:	jecxz  0x41bee8
  41be92:	stos   BYTE PTR es:[edi],al
  41be93:	mov    ds:0x80da586a,eax
  41be98:	or     edx,DWORD PTR [eax+ecx*4-0xe]
  41be9c:	adc    al,0x1b
  41be9e:	cmp    DWORD PTR [ecx],eax
  41bea0:	xor    ecx,DWORD PTR [eax*4+0x705bd1d]
  41bea7:	push   cs
  41bea8:	rcl    BYTE PTR [edx],cl
  41beaa:	inc    eax
  41beab:	push   ss
  41beac:	sbb    cl,BYTE PTR es:[eax]
  41beaf:	jmp    0x41bf08
  41beb1:	jmp    0x41be78
  41beb3:	lahf   
  41beb4:	xchg   ebx,eax
  41beb5:	call   0x72c5d9b7
  41beba:	in     eax,dx
  41bebb:	mov    bh,BYTE PTR [ebp-0x331675a8]
  41bec1:	mov    bh,0xa9
  41bec3:	sbb    eax,0x517d03f9
  41bec8:	adc    al,BYTE PTR [ebx]
  41beca:	mov    ds:0x468f0de,al
  41becf:	in     eax,dx
  41bed0:	in     eax,0x71
  41bed2:	inc    esi
  41bed3:	cmp    al,0x3
  41bed5:	and    al,0x8d
  41bed7:	mov    al,0x9e
  41bed9:	mov    ds:0x6e4dffb7,eax
  41bede:	test   edi,0x1e39879f
  41bee4:	fstp   st(1)
  41bee6:	arpl   WORD PTR [ebp+0x2f6b375e],sp
  41beec:	retf   
  41beed:	jg     0x41bf50
  41beef:	inc    esi
  41bef0:	mov    bl,0xac
  41bef2:	xchg   DWORD PTR [ebx],ecx
  41bef4:	fld    TBYTE PTR [ebp-0x497a0d82]
  41befa:	jmp    0x41bed5
  41befc:	and    DWORD PTR [ecx],ecx
  41befe:	arpl   ax,bx
  41bf00:	aaa    
  41bf01:	repz jmp 0xe3fd:0x4ecd8911
  41bf09:	(bad)  
  41bf0a:	lock lahf 
  41bf0c:	in     eax,dx
  41bf0d:	outs   dx,BYTE PTR ds:[esi]
  41bf0e:	pop    ebp
  41bf0f:	cmc    
  41bf10:	adc    BYTE PTR [ebx],ah
  41bf12:	pusha  
  41bf13:	(bad)  
  41bf14:	pop    ds
  41bf15:	and    esp,DWORD PTR [ebp-0x54329244]
  41bf1b:	out    0x5c,eax
  41bf1d:	sbb    ch,bh
  41bf1f:	int    0x9a
  41bf21:	xchg   ebx,eax
  41bf22:	dec    ebx
  41bf23:	cli    
  41bf24:	dec    edi
  41bf25:	hlt    
  41bf26:	mov    al,0x34
  41bf28:	sub    ah,dh
  41bf2a:	inc    ebp
  41bf2b:	das    
  41bf2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bf2d:	std    
  41bf2e:	mov    ds:0x21179278,eax
  41bf33:	or     BYTE PTR [eax-0x11],bh
  41bf36:	sbb    BYTE PTR [esi+edi*1],dl
  41bf39:	out    0x48,eax
  41bf3b:	jle    0x41bfb9
  41bf3d:	and    eax,0x6d35247f
  41bf42:	ja     0x41bf91
  41bf44:	mov    ds:0xbf83e7bb,eax
  41bf49:	push   ebp
  41bf4a:	add    al,0x46
  41bf4c:	cmp    edx,eax
  41bf4e:	cwde   
  41bf4f:	mov    DWORD PTR ds:0x2b44d546,ebp
  41bf55:	das    
  41bf56:	inc    esi
  41bf57:	and    DWORD PTR [eax-0x6f],edi
  41bf5a:	sub    ecx,DWORD PTR ds:0x968e75cb
  41bf60:	and    DWORD PTR [edx-0xdf629c7],esi
  41bf66:	xchg   ebp,eax
  41bf67:	out    0xaa,eax
  41bf69:	in     al,0xcf
  41bf6b:	jne    0x41bf31
  41bf6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bf6e:	sti    
  41bf6f:	imul   ebp,DWORD PTR [ecx+0x45d6347e],0x1396d60d
  41bf79:	fidiv  WORD PTR [ebp+0x23]
  41bf7c:	into   
  41bf7d:	cdq    
  41bf7e:	pusha  
  41bf7f:	xlat   BYTE PTR ds:[ebx]
  41bf80:	mov    ch,0x9f
  41bf82:	daa    
  41bf83:	loop   0x41bf6d
  41bf85:	sbb    DWORD PTR [ecx-0x66],eax
  41bf88:	int    0x10
  41bf8a:	sbb    BYTE PTR [edx],cl
  41bf8c:	outs   dx,BYTE PTR gs:[esi]
  41bf8e:	sub    bl,dl
  41bf90:	sub    dh,bl
  41bf92:	aas    
  41bf93:	inc    esp
  41bf94:	sub    DWORD PTR [edx-0x5aefb58b],edi
  41bf9a:	mov    dl,0x96
  41bf9c:	pop    ebp
  41bf9d:	(bad)
  41bfa1:	ins    DWORD PTR es:[edi],dx
  41bfa2:	iret   
  41bfa3:	jg     0x41bf3b
  41bfa5:	test   DWORD PTR [edi+0x31],esp
  41bfa8:	stos   DWORD PTR es:[edi],eax
  41bfa9:	pop    esi
  41bfaa:	inc    edi
  41bfab:	xor    ecx,ebx
  41bfad:	push   eax
  41bfae:	stos   DWORD PTR es:[edi],eax
  41bfaf:	jns    0x41c001
  41bfb1:	shl    DWORD PTR [eax+0x68],cl
  41bfb4:	cli    
  41bfb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bfb6:	mov    ebx,0x50ce3337
  41bfbb:	les    ebp,FWORD PTR [eax+edx*8]
  41bfbe:	scas   al,BYTE PTR es:[edi]
  41bfbf:	addr16 jb 0x41bf58
  41bfc2:	aas    
  41bfc3:	mov    ds:0xb98d8625,al
  41bfc8:	push   ds
  41bfc9:	sbb    edi,DWORD PTR [edi]
  41bfcb:	rcl    BYTE PTR [edx+0x29],0x20
  41bfcf:	aas    
  41bfd0:	mov    ds:0xa05060c,eax
  41bfd5:	push   esi
  41bfd6:	and    bh,BYTE PTR [esi+0x482f17a4]
  41bfdc:	dec    ebp
  41bfde:	aaa    
  41bfdf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bfe0:	cs jecxz 0x41bfc7
  41bfe3:	xor    al,0xd4
  41bfe5:	cmp    esp,edi
  41bfe7:	inc    edx
  41bfe8:	push   0x7eea56ed
  41bfed:	cs sbb eax,0x26aa4fd4
  41bff3:	ds pop edx
  41bff5:	ror    DWORD PTR [ebx],cl
  41bff7:	push   ebx
  41bff8:	inc    esp
  41bff9:	add    edi,DWORD PTR [esi+0x492977e4]
  41bfff:	nop
  41c000:	push   eax
  41c001:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c002:	aaa    
  41c003:	cwde   
  41c004:	mov    ebx,0xfa282293
  41c009:	repnz sbb DWORD PTR [ecx-0x22],eax
  41c00d:	mov    edx,0x757f4387
  41c012:	dec    ax
  41c014:	xchg   esi,eax
  41c015:	arpl   WORD PTR [edx-0x59fe89b8],di
  41c01b:	loopne 0x41c041
  41c01d:	leave  
  41c01e:	(bad)  
  41c020:	pop    ecx
  41c021:	or     DWORD PTR [edi+0xc081cd9],ebx
  41c027:	mov    DWORD PTR [eax+0x2b],ebp
  41c02a:	xlat   BYTE PTR ds:[ebx]
  41c02b:	jmp    0xd613:0xcf011fe9
  41c032:	gs ins DWORD PTR es:[edi],dx
  41c034:	int    0x45
  41c036:	inc    esp
  41c037:	inc    esi
  41c038:	xchg   ebp,eax
  41c039:	fiadd  WORD PTR [edx]
  41c03b:	test   DWORD PTR [edx],ebx
  41c03d:	push   edx
  41c03e:	inc    ebx
  41c03f:	jl     0x41bff1
  41c041:	fnstsw WORD PTR [edx-0x751b470a]
  41c047:	mov    esi,0x108e8052
  41c04c:	xor    DWORD PTR [ebx-0x43],esi
  41c04f:	pop    eax
  41c050:	xor    al,0xb9
  41c052:	test   eax,0x224b6096
  41c057:	adc    dh,BYTE PTR [eax+0x7e42b7a1]
  41c05d:	sbb    esp,DWORD PTR [edx-0x263e51e4]
  41c063:	cmp    edi,esi
  41c065:	fadd   DWORD PTR [edx]
  41c067:	into   
  41c068:	or     edi,DWORD PTR [ecx+0x11]
  41c06b:	ss adc eax,0xc8521172
  41c071:	sbb    al,0x49
  41c073:	fwait
  41c074:	jae    0x41c098
  41c076:	mov    al,ds:0x3a9048fe
  41c07b:	cdq    
  41c07c:	add    BYTE PTR [eax],al
  41c07e:	add    BYTE PTR [eax],al
  41c080:	add    BYTE PTR [eax],al
  41c082:	mov    dh,0x3a
  41c084:	out    0x1,eax
  41c086:	out    dx,eax
  41c087:	(bad)  
  41c089:	mov    edi,0xdf2dff43
  41c08e:	sbb    eax,0x5383113f
  41c093:	cmp    al,0x1
  41c095:	add    dl,dh
  41c097:	add    al,0x0
  41c099:	add    BYTE PTR [edx],bh
  41c09b:	clc    
  41c09c:	and    al,0x3e
  41c09e:	xor    DWORD PTR [edx],eax
  41c0a0:	test   edi,ebp
  41c0a2:	inc    ebp
  41c0a3:	hlt    
  41c0a4:	push   es
  41c0a5:	dec    ecx
  41c0a6:	cmp    ch,bl
  41c0a8:	xchg   ebp,eax
  41c0a9:	sahf   
  41c0aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c0ab:	dec    esp
  41c0ac:	inc    ecx
  41c0ad:	cld    
  41c0ae:	mov    esi,0x32568f49
  41c0b3:	sahf   
  41c0b4:	dec    ecx
  41c0b5:	test   al,0x50
  41c0b7:	mov    eax,0xfc2fdc6c
  41c0bc:	adc    DWORD PTR [edx+0x6ca5bf22],eax
  41c0c2:	(bad)  
  41c0c3:	stc    
  41c0c4:	xchg   edi,eax
  41c0c5:	in     eax,0xec
  41c0c7:	add    eax,0x537998a5
  41c0cc:	inc    esp
  41c0cd:	stos   BYTE PTR es:[edi],al
  41c0ce:	jmp    0x3cf0:0xead87f66
  41c0d5:	pop    ds
  41c0d6:	sbb    ch,BYTE PTR [eax]
  41c0d8:	pop    edx
  41c0d9:	cwde   
  41c0da:	jp     0x41c0aa
  41c0dc:	sub    BYTE PTR [esi],ah
  41c0de:	out    0x7a,eax
  41c0e0:	ins    DWORD PTR es:[edi],dx
  41c0e1:	ds out 0x3e,eax
  41c0e4:	dec    edi
  41c0e5:	jbe    0x41c0ee
  41c0e7:	pop    DWORD PTR [ebx+0x4b]
  41c0ea:	nop
  41c0eb:	call   0x7e78e786
  41c0f0:	mov    ebx,0xe24194d7
  41c0f5:	ret    
  41c0f6:	mov    bh,BYTE PTR [edi-0x45]
  41c0f9:	into   
  41c0fa:	pop    ds
  41c0fb:	addr16 jmp 0x49a9:0x46a59fc1
  41c103:	jge    0x41c110
  41c105:	loop   0x41c146
  41c107:	push   ebx
  41c108:	nop
  41c109:	xlat   BYTE PTR ds:[ebx]
  41c10a:	fbstp  TBYTE PTR [ebx+0x5c]
  41c10d:	test   al,0x16
  41c110:	out    0xd5,eax
  41c112:	dec    esi
  41c113:	cmp    eax,0xae085121
  41c118:	jp     0x41c0c5
  41c11a:	mov    dl,0x62
  41c11c:	cmc    
  41c11d:	add    cl,cl
  41c11f:	sub    al,BYTE PTR [ecx]
  41c121:	(bad)  
  41c122:	jp     0x41c196
  41c124:	js     0x41c0c3
  41c126:	xor    al,0x23
  41c128:	rcl    DWORD PTR [edi-0x54],0x50
  41c12c:	repz popf 
  41c12e:	push   ecx
  41c12f:	outs   dx,DWORD PTR ds:[esi]
  41c130:	adc    edi,DWORD PTR [esi-0x41]
  41c133:	jmp    0x41c1b3
  41c135:	jg     0x41c182
  41c137:	or     dl,ch
  41c139:	pushf  
  41c13a:	sub    bh,dh
  41c13c:	xor    al,0xd
  41c13e:	jae    0x41c10c
  41c140:	sbb    edx,esp
  41c142:	hlt    
  41c143:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c144:	ins    BYTE PTR es:[edi],dx
  41c145:	push   esi
  41c146:	push   edi
  41c147:	or     al,0x46
  41c149:	adc    esp,edx
  41c14b:	aas    
  41c14c:	cmp    eax,DWORD PTR [edx-0x2]
  41c14f:	ret    0xb2d6
  41c152:	xchg   DWORD PTR [ebx+esi*2+0x626c0f7c],edi
  41c159:	mov    ds:0xadfef9e1,al
  41c15e:	dec    eax
  41c15f:	mov    WORD PTR [esi+ebx*2+0x6beb5b8d],?
  41c166:	ins    BYTE PTR es:[edi],dx
  41c167:	scas   eax,DWORD PTR es:[edi]
  41c168:	jno    0x41c0f3
  41c16a:	out    0xcb,eax
  41c16c:	call   0x4b35:0x77564659
  41c173:	cmc    
  41c174:	jle    0x41c1cf
  41c176:	mov    dh,BYTE PTR [esp+edx*2+0xf7fb4bc]
  41c17d:	pushf  
  41c17e:	xor    DWORD PTR [edi],ebp
  41c180:	fst    DWORD PTR ds:0x4e0ca9ee
  41c186:	fistp  DWORD PTR [edx-0x8]
  41c189:	adc    al,0x56
  41c18b:	mov    ebx,0x57bb0a14
  41c190:	(bad)  
  41c191:	les    ecx,FWORD PTR ds:0x9ce3803
  41c197:	push   esi
  41c198:	fnsave [eax]
  41c19a:	dec    eax
  41c19b:	inc    edx
  41c19c:	stos   BYTE PTR es:[edi],al
  41c19d:	lahf   
  41c19e:	dec    esi
  41c19f:	in     al,dx
  41c1a0:	pop    edx
  41c1a1:	mov    WORD PTR [edx],?
  41c1a3:	sbb    eax,0xe4cdf002
  41c1a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c1a9:	sub    BYTE PTR [eax-0x5facb908],cl
  41c1af:	loop   0x41c174
  41c1b1:	imul   esp,ebx,0xffffffcf
  41c1b4:	add    ecx,edi
  41c1b6:	fcmove st,st(1)
  41c1b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c1b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c1ba:	push   ebp
  41c1bb:	pop    esp
  41c1bc:	out    dx,eax
  41c1bd:	fsubrp st(7),st
  41c1bf:	sub    DWORD PTR [edx+0x5fb1c100],eax
  41c1c5:	xchg   ebp,eax
  41c1c6:	popf   
  41c1c7:	repnz push es
  41c1c9:	enter  0xc692,0xfb
  41c1cd:	adc    BYTE PTR ds:0x88978f46,bl
  41c1d3:	inc    edx
  41c1d4:	mov    WORD PTR [ebx-0x52],cs
  41c1d7:	fs xchg esp,eax
  41c1d9:	jnp    0x41c1b4
  41c1db:	and    BYTE PTR [edx-0x63],bl
  41c1de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c1df:	ret    
  41c1e0:	inc    edi
  41c1e1:	fst    DWORD PTR [ebp-0x6dbfb659]
  41c1e7:	xlat   BYTE PTR ds:[ebx]
  41c1e8:	jne    0x41c203
  41c1ea:	mov    ecx,0xa529654e
  41c1ef:	ret    
  41c1f0:	sbb    ch,bl
  41c1f2:	(bad)  
  41c1f3:	call   0xf7ee3f90
  41c1f8:	lahf   
  41c1f9:	out    0xc9,eax
  41c1fb:	in     eax,dx
  41c1fc:	dec    edi
  41c1fd:	cdq    
  41c1fe:	outs   dx,DWORD PTR ds:[esi]
  41c1ff:	nop
  41c200:	aam    0x40
  41c202:	sbb    al,0xf2
  41c204:	push   ss
  41c205:	outs   dx,DWORD PTR ds:[esi]
  41c206:	test   al,0x39
  41c208:	dec    esi
  41c209:	xchg   esi,eax
  41c20a:	add    edi,esi
  41c20c:	(bad)
  41c210:	ja     0x41c1e6
  41c212:	(bad)  
  41c214:	hlt    
  41c215:	leave  
  41c216:	sti    
  41c217:	sub    ah,cl
  41c219:	int3   
  41c21a:	dec    esp
  41c21b:	pop    ecx
  41c21c:	arpl   WORD PTR [ecx+0x79],dx
  41c21f:	mov    ebp,0x96979392
  41c224:	dec    edi
  41c225:	sub    bh,BYTE PTR [edx-0x1b31ccee]
  41c22b:	repz sbb ecx,DWORD PTR [ebx+0x0]
  41c22f:	enter  0x2e4d,0xd9
  41c233:	rcl    bh,1
  41c235:	loopne 0x41c226
  41c237:	or     eax,0x703cf9d0
  41c23c:	jb     0x41c23e
  41c23e:	out    0x33,eax
  41c240:	jbe    0x41c29e
  41c242:	xchg   esi,eax
  41c243:	cli    
  41c244:	xor    dh,bl
  41c246:	push   eax
  41c247:	mov    ch,0x8c
  41c249:	das    
  41c24a:	ss inc ecx
  41c24c:	jmp    0x392f195c
  41c251:	fdivr  DWORD PTR [edx-0x61603877]
  41c257:	out    0x58,al
  41c259:	imul   ecx,DWORD PTR [ecx-0x49d7eeb4],0x25
  41c260:	cli    
  41c261:	push   0x503f68b1
  41c266:	dec    edx
  41c267:	mov    eax,0x29550b6e
  41c26c:	cmp    BYTE PTR [ebx+0x712a0151],ch
  41c272:	sbb    BYTE PTR [edi-0x53],ah
  41c275:	sbb    eax,0xeca43927
  41c27a:	cdq    
  41c27b:	packsswb mm6,QWORD PTR [edi-0x62]
  41c27f:	fwait
  41c280:	mov    WORD PTR ds:0xea667b91,?
  41c286:	push   ds
  41c287:	int3   
  41c288:	and    esi,eax
  41c28a:	push   ecx
  41c28b:	xchg   esp,eax
  41c28c:	mov    ds:0x71eda4a8,eax
  41c291:	pusha  
  41c292:	inc    eax
  41c293:	test   al,0x91
  41c295:	inc    ecx
  41c296:	repz popa 
  41c298:	shl    BYTE PTR [ebx],cl
  41c29a:	mov    ebp,0x9fcc958c
  41c29f:	stc    
  41c2a0:	fimul  WORD PTR [esp+edx*8-0x301ae7cb]
  41c2a7:	pop    ss
  41c2a8:	jbe    0x41c2a2
  41c2aa:	shl    BYTE PTR [edi],1
  41c2ac:	cli    
  41c2ad:	or     DWORD PTR [ebp+0x26],eax
  41c2b0:	pop    ebp
  41c2b1:	xchg   ebp,eax
  41c2b2:	sbb    al,0x39
  41c2b4:	ss (bad) 
  41c2b6:	cld    
  41c2b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c2b8:	mov    esp,0x2801e55d
  41c2bd:	add    bl,0x46
  41c2c0:	jge    0x41c2b2
  41c2c2:	push   ss
  41c2c3:	prefetcht2 BYTE PTR [ecx+edx*2-0x55e61159]
  41c2cb:	inc    edi
  41c2cc:	dec    edi
  41c2cd:	or     DWORD PTR [edx],0xffffff9f
  41c2d0:	jb     0x41c2de
  41c2d2:	sbb    al,0xd5
  41c2d4:	pusha  
  41c2d5:	xchg   edi,eax
  41c2d6:	fisttp QWORD PTR [edx-0x46]
  41c2d9:	pop    eax
  41c2da:	ds inc esi
  41c2dc:	adc    ebp,DWORD PTR [edi-0x54]
  41c2df:	fldcw  WORD PTR [edi+0x71342956]
  41c2e5:	(bad)  
  41c2e6:	mov    ebx,0xb1743321
  41c2eb:	inc    esi
  41c2ec:	ins    BYTE PTR es:[edi],dx
  41c2ed:	imul   ecx,DWORD PTR [ecx],0x73
  41c2f0:	fld    st(0)
  41c2f2:	rol    bh,1
  41c2f4:	int    0xf2
  41c2f6:	iret   
  41c2f7:	fcomp  QWORD PTR [edi]
  41c2f9:	(bad)  
  41c2fc:	repnz sbb al,0xfe
  41c2ff:	adc    esp,ebx
  41c301:	sub    dh,dh
  41c303:	or     eax,0x50ea9d21
  41c308:	(bad)  
  41c309:	aad    0xe5
  41c30b:	sti    
  41c30c:	(bad)  
  41c30d:	mov    dl,0xf0
  41c30f:	add    BYTE PTR [eax+ecx*1+0x23b786ea],al
  41c316:	sbb    al,0xb9
  41c318:	jnp    0x41c2e2
  41c31a:	and    eax,0x59e2f313
  41c31f:	dec    esp
  41c320:	cs ret 
  41c322:	repnz mov al,0xc1
  41c325:	mov    ebp,0x2a17c4e2
  41c32a:	repnz test BYTE PTR [ebp-0x40],0x8e
  41c32f:	or     BYTE PTR [ecx-0x40],bl
  41c332:	dec    ecx
  41c333:	cmp    al,0xde
  41c335:	inc    ecx
  41c336:	lahf   
  41c337:	std    
  41c338:	(bad)  
  41c339:	mov    ecx,0xc90d3daf
  41c33e:	popa   
  41c33f:	inc    edi
  41c340:	test   al,0xbc
  41c342:	jae    0x41c315
  41c344:	jmp    0x30a4ccf1
  41c349:	fstp   TBYTE PTR es:[ecx+0x505a10a]
  41c350:	push   es
  41c351:	fs pop ss
  41c353:	sti    
  41c354:	xchg   esp,eax
  41c355:	and    BYTE PTR [edx-0x5a2d3e44],ch
  41c35b:	xor    eax,0x6e0bb4c0
  41c360:	mov    WORD PTR [eax+edx*8+0x7d],?
  41c364:	stos   BYTE PTR es:[edi],al
  41c365:	cmc    
  41c366:	add    esi,edi
  41c368:	dec    ebx
  41c369:	loopne 0x41c311
  41c36b:	(bad)  
  41c36c:	shr    BYTE PTR [ebx+0x3a],1
  41c36f:	and    eax,0x1d06c0bf
  41c374:	rcl    DWORD PTR [edi-0x6c3ca45f],0xe
  41c37b:	jno    0x41c35f
  41c37d:	retf   0xf0d7
  41c380:	push   esi
  41c381:	dec    ecx
  41c382:	sbb    DWORD PTR [ebx],0xbe04704f
  41c388:	std    
  41c389:	leave  
  41c38a:	push   es
  41c38b:	in     eax,dx
  41c38c:	jmp    0x41c35c
  41c38e:	mov    esi,0x7ac52eb5
  41c393:	jb     0x41c36e
  41c395:	or     esi,DWORD PTR [ebp+0x1346f31d]
  41c39b:	sub    eax,0xc265a9ef
  41c3a0:	sbb    eax,0x73c40616
  41c3a5:	aad    0xe1
  41c3a7:	mov    cl,0x45
  41c3a9:	ja     0x41c408
  41c3ab:	mov    WORD PTR [eax],es
  41c3ad:	test   DWORD PTR [ebx+0x1f],esi
  41c3b0:	jo     0x41c374
  41c3b2:	add    al,0x1e
  41c3b4:	clc    
  41c3b5:	or     DWORD PTR [ecx+edx*4-0xa],eax
  41c3b9:	mov    al,0x55
  41c3bb:	aaa    
  41c3bc:	lahf   
  41c3bd:	int3   
  41c3be:	cmp    bh,BYTE PTR [ebx-0x7ef4359]
  41c3c4:	and    al,0xa0
  41c3c6:	sbb    DWORD PTR [edi-0x1],edx
  41c3c9:	int    0x2
  41c3cb:	sbb    bl,al
  41c3cd:	jns    0x41c41e
  41c3cf:	es mov esi,0x742083bc
  41c3d5:	or     al,0x63
  41c3d7:	out    dx,eax
  41c3d8:	repz dec ebx
  41c3da:	push   edi
  41c3db:	stos   BYTE PTR es:[edi],al
  41c3dc:	imul   ebx,DWORD PTR [esi+ebp*8],0x1d058af4
  41c3e3:	sbb    ch,ah
  41c3e5:	add    eax,0x4ffbbf5b
  41c3ea:	jg     0x41c41f
  41c3ec:	int    0x27
  41c3ee:	fldcw  WORD PTR [ebx+ebx*8-0x6066ba1b]
  41c3f5:	arpl   si,si
  41c3f7:	xchg   ebx,eax
  41c3f8:	push   ss
  41c3f9:	pop    ds
  41c3fa:	pop    esp
  41c3fb:	inc    ebx
  41c3fc:	iret   
  41c3fd:	xor    ebp,DWORD PTR [ebx+0x5c810629]
  41c403:	dec    edi
  41c404:	xor    al,0x31
  41c406:	sub    ah,ch
  41c408:	adc    ebp,DWORD PTR [ebx+edi*1+0x172cce9a]
  41c40f:	xor    DWORD PTR [ebp-0xc8597d7],esp
  41c415:	dec    edx
  41c416:	mov    ds:0xa64150fc,al
  41c41b:	dec    ebx
  41c41c:	push   ss
  41c41d:	cmp    DWORD PTR cs:0xaaab07f8,0x47
  41c425:	pop    ebx
  41c426:	add    al,0x78
  41c428:	pushf  
  41c429:	rol    DWORD PTR [esi],cl
  41c42b:	gs ss dec edi
  41c42e:	xchg   ebp,eax
  41c42f:	xchg   BYTE PTR [eax-0x80],dh
  41c432:	fstp   TBYTE PTR [esi]
  41c434:	mov    BYTE PTR [edi+ecx*4],dl
  41c437:	xor    BYTE PTR [ecx-0x756c6390],ah
  41c43d:	jbe    0x41c485
  41c43f:	pop    edx
  41c440:	(bad)  
  41c441:	jle    0x41c465
  41c443:	sbb    DWORD PTR [edi-0x25],edx
  41c446:	ins    DWORD PTR es:[edi],dx
  41c447:	cmovnp ebp,DWORD PTR [ebx+edi*8]
  41c44b:	inc    ecx
  41c44c:	jp     0x41c4c0
  41c44e:	jp     0x41c3eb
  41c450:	test   BYTE PTR [esi+eax*4+0x35843a66],cl
  41c457:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c458:	jo     0x41c4b0
  41c45a:	inc    esp
  41c45b:	push   ss
  41c45c:	aaa    
  41c45d:	push   edi
  41c45e:	and    dl,BYTE PTR [ebp+0x39aed79d]
  41c464:	test   eax,0x969966f
  41c469:	mov    eax,0xa8177512
  41c46e:	sbb    dh,BYTE PTR [edx]
  41c470:	mov    eax,DWORD PTR [edi+esi*8-0x1761a05c]
  41c477:	ja     0x41c489
  41c479:	xchg   DWORD PTR [ebx-0x490ab413],eax
  41c47f:	je     0x41c49e
  41c481:	stos   BYTE PTR es:[edi],al
  41c482:	inc    esp
  41c483:	mov    ebp,0x571f9063
  41c488:	inc    edx
  41c489:	hlt    
  41c48a:	aad    0xec
  41c48c:	gs inc eax
  41c48e:	sub    eax,DWORD PTR ds:0xc100f4f9
  41c494:	stos   BYTE PTR es:[edi],al
  41c495:	imul   esp,DWORD PTR [ebx+0x51],0xe1526f50
  41c49c:	stos   BYTE PTR es:[edi],al
  41c49d:	pusha  
  41c49e:	or     al,0x34
  41c4a0:	push   edx
  41c4a1:	aaa    
  41c4a2:	xor    DWORD PTR ds:0x94472dde,edx
  41c4a8:	jg     0x41c4e6
  41c4aa:	loopne 0x41c430
  41c4ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c4ad:	jno    0x41c47c
  41c4af:	out    0xc6,eax
  41c4b1:	data16 jnp 0x41c507
  41c4b4:	icebp  
  41c4b5:	and    al,0xd3
  41c4b7:	inc    esi
  41c4b8:	ja     0x41c43a
  41c4ba:	xchg   esi,eax
  41c4bb:	stc    
  41c4bc:	gs xchg esp,eax
  41c4be:	imul   ecx,DWORD PTR [ebx],0xcb4399d0
  41c4c4:	pop    edx
  41c4c5:	push   edx
  41c4c6:	fbstp  TBYTE PTR [ebx+0x12380121]
  41c4cc:	xor    ebp,edi
  41c4ce:	imul   DWORD PTR [eax+0xd9fbb26]
  41c4d4:	arpl   WORD PTR ds:[edx+0x7b3cb34b],bp
  41c4db:	imul   BYTE PTR ds:0x60b8597
  41c4e1:	or     BYTE PTR [esi+0x54e41f2a],al
  41c4e7:	scas   al,BYTE PTR es:[edi]
  41c4e8:	and    BYTE PTR [edi+edi*4],ch
  41c4eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c4ec:	dec    esi
  41c4ed:	jp     0x41c519
  41c4ef:	repnz and esi,DWORD PTR [esi]
  41c4f2:	pop    eax
  41c4f3:	dec    edx
  41c4f4:	in     al,dx
  41c4f5:	mov    esi,0x5f8a7aec
  41c4fa:	dec    eax
  41c4fb:	nop
  41c4fc:	call   0x2808:0x5c38b2da
  41c503:	(bad)  
  41c504:	cmp    edx,DWORD PTR es:[ebp-0x554e2a2d]
  41c50b:	push   ecx
  41c50c:	js     0x41c4bf
  41c50e:	es shl edx,cl
  41c511:	popf   
  41c512:	outs   dx,DWORD PTR ds:[esi]
  41c513:	dec    edx
  41c514:	outs   dx,DWORD PTR ds:[esi]
  41c515:	mov    WORD PTR [ebx+0x2e],cs
  41c518:	jae    0x41c54f
  41c51a:	(bad)  
  41c51c:	xor    al,0x2a
  41c51e:	dec    edx
  41c51f:	stos   DWORD PTR es:[edi],eax
  41c520:	mov    dh,0x5e
  41c522:	mov    eax,ds:0x85c2ab70
  41c527:	push   esp
  41c528:	lds    edx,FWORD PTR [ebp+0x75]
  41c52b:	sub    al,0x34
  41c52d:	(bad)  
  41c52e:	jmp    0xf44d:0x17429206
  41c535:	pop    esi
  41c536:	xchg   ebp,esi
  41c538:	xchg   ebp,eax
  41c539:	pop    ecx
  41c53a:	fdiv   DWORD PTR [ecx]
  41c53c:	pop    ebx
  41c53d:	xlat   BYTE PTR ds:[ebx]
  41c53e:	sub    al,0x9d
  41c540:	jns    0x41c5a1
  41c542:	int    0xcb
  41c544:	cmp    BYTE PTR [edi+edi*1-0x24],dh
  41c548:	(bad)  
  41c54a:	mov    dl,BYTE PTR [edi]
  41c54c:	inc    eax
  41c54d:	cmp    DWORD PTR [edx-0x70],esi
  41c550:	sar    ch,0x6d
  41c553:	push   es
  41c554:	mov    ss,WORD PTR [ecx-0x1f9d898a]
  41c55a:	std    
  41c55b:	sub    ah,dh
  41c55d:	repz ds xchg esi,eax
  41c560:	and    ebp,DWORD PTR [ebx+0x64]
  41c563:	push   ebp
  41c564:	faddp  st(6),st
  41c566:	icebp  
  41c567:	sub    edx,0xf6fa08eb
  41c56d:	out    dx,al
  41c56e:	dec    esp
  41c570:	in     al,dx
  41c571:	loop   0x41c599
  41c573:	pusha  
  41c574:	jg     0x41c59b
  41c576:	pop    esp
  41c577:	fisub  WORD PTR [ebp+0x2c]
  41c57a:	jmp    0x5217:0x9b5689ed
  41c581:	jl     0x41c50c
  41c583:	mov    ebp,0xb751d18e
  41c588:	fsin   
  41c58a:	push   ds
  41c58b:	mov    ah,0x0
  41c58d:	add    BYTE PTR [eax],al
  41c58f:	add    BYTE PTR [eax],al
  41c591:	add    ch,ah
  41c593:	adc    al,BYTE PTR [edi]
  41c595:	dec    ebx
  41c596:	neg    DWORD PTR [edi-0x13]
  41c599:	mov    esi,0xd2d3b943
  41c59e:	jb     0x41c5ff
  41c5a0:	jp     0x41c581
  41c5a2:	inc    ebp
  41c5a3:	inc    ecx
  41c5a4:	add    DWORD PTR [eax],eax
  41c5a6:	repnz add al,0x0
  41c5a9:	add    bh,ch
  41c5ab:	cmp    BYTE PTR [ebx-0x3d],dh
  41c5ae:	cli    
  41c5af:	and    bh,BYTE PTR [eax+0x26d3473d]
  41c5b5:	scas   al,BYTE PTR es:[edi]
  41c5b6:	hlt    
  41c5b7:	add    bl,cl
  41c5b9:	jge    0x41c5fa
  41c5bb:	push   es
  41c5bc:	adc    ecx,DWORD PTR [ebp+esi*2-0x1706e240]
  41c5c3:	mov    ch,0x82
  41c5c5:	mov    ah,0x2d
  41c5c7:	int3   
  41c5c8:	inc    esi
  41c5c9:	mov    ds:0x539ec6d0,al
  41c5ce:	mov    ecx,0x3c35bf96
  41c5d3:	mov    al,0x52
  41c5d5:	add    bl,BYTE PTR [esi+0x4b]
  41c5d8:	push   ds
  41c5d9:	push   es
  41c5da:	or     al,0x2e
  41c5dc:	sti    
  41c5dd:	add    BYTE PTR ds:0xe2b2ab76,cl
  41c5e3:	into   
  41c5e4:	push   0x4a
  41c5e6:	pop    ss
  41c5e7:	out    dx,eax
  41c5e8:	icebp  
  41c5e9:	in     eax,dx
  41c5ea:	lea    edx,[edx+0x1a]
  41c5ed:	imul   ebx,DWORD PTR [ecx-0x27a7bb28],0x8fc01328
  41c5f7:	and    esi,DWORD PTR [ebx+ebx*4-0x2d93939d]
  41c5fe:	sbb    eax,0xfaa3c94f
  41c603:	push   ecx
  41c604:	push   0xffffffbd
  41c606:	mov    ebp,0xf996e766
  41c60b:	aas    
  41c60c:	mov    ebx,0xabf3f644
  41c611:	leave  
  41c612:	and    BYTE PTR [ebp-0x6a],0x17
  41c616:	out    dx,eax
  41c617:	daa    
  41c618:	fwait
  41c619:	les    ecx,FWORD PTR [edx-0x69]
  41c61c:	push   ebp
  41c61d:	test   BYTE PTR [esi],dh
  41c61f:	in     al,dx
  41c620:	dec    eax
  41c621:	xchg   edx,eax
  41c622:	test   al,0xc7
  41c624:	sub    esp,DWORD PTR [esi+edi*2+0x3d]
  41c628:	sti    
  41c629:	in     eax,0xd0
  41c62b:	mov    ch,dl
  41c62d:	gs icebp 
  41c62f:	mov    DWORD PTR [ebp-0x6a],eax
  41c632:	lds    esp,FWORD PTR [ecx+0x61]
  41c635:	or     al,0xe8
  41c637:	mov    ecx,0x353774a0
  41c63c:	xchg   esi,eax
  41c63d:	sub    DWORD PTR [ebp+0x5e607d0e],ecx
  41c643:	arpl   sp,di
  41c645:	cdq    
  41c646:	dec    ebp
  41c647:	arpl   WORD PTR [ecx-0x6dfb6c9a],di
  41c64d:	push   es
  41c64e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c64f:	test   al,0x23
  41c651:	jle    0x41c672
  41c653:	mov    eax,0x36c4e967
  41c658:	push   0xffffffe2
  41c65a:	sbb    al,0xad
  41c65c:	(bad)  
  41c65d:	sbb    dh,BYTE PTR [esi+0x59]
  41c660:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c661:	add    BYTE PTR [bx+0x1d61],bl
  41c666:	leave  
  41c667:	push   ds
  41c668:	pop    ds
  41c669:	test   DWORD PTR [ebx-0x3047770a],eax
  41c66f:	dec    edi
  41c670:	mov    edx,0x3db9bc2d
  41c675:	or     BYTE PTR [ebp-0xfaacdb7],cl
  41c67b:	and    al,0x8d
  41c67d:	adc    BYTE PTR [ecx],0x16
  41c680:	jmp    0x3c1baec9
  41c685:	outs   dx,BYTE PTR ds:[esi]
  41c686:	add    edi,DWORD PTR ds:0x5696f358
  41c68c:	or     eax,ebx
  41c68e:	sub    eax,0x5545564d
  41c693:	sub    BYTE PTR [ecx+0x3a],bh
  41c696:	jb     0x41c6dc
  41c698:	(bad)  
  41c699:	xchg   esp,eax
  41c69a:	sbb    bh,bh
  41c69c:	sub    ebx,DWORD PTR [ebp-0x32]
  41c69f:	mov    ecx,0x6566b03d
  41c6a4:	mov    DWORD PTR [ebp+edi*2+0x50347e04],edi
  41c6ab:	sbb    bl,dl
  41c6ad:	inc    ecx
  41c6ae:	dec    esi
  41c6af:	mov    ebx,0x5affbf4f
  41c6b4:	adc    eax,0x1a78c73d
  41c6b9:	mov    ecx,ecx
  41c6bb:	lahf   
  41c6bc:	popf   
  41c6bd:	jno    0x41c69b
  41c6bf:	mov    esi,0x18b896a0
  41c6c4:	sub    al,0x7d
  41c6c6:	fidivr DWORD PTR ds:0x663589f0
  41c6cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c6ce:	imul   edi,DWORD PTR [edi+0x28],0x8b300dbd
  41c6d5:	ss pop ebx
  41c6d7:	int    0xa4
  41c6d9:	pusha  
  41c6da:	inc    edi
  41c6db:	jl     0x41c6cb
  41c6dd:	aam    0xa2
  41c6df:	test   DWORD PTR [ebx+0x75],edi
  41c6e2:	dec    edi
  41c6e3:	ins    DWORD PTR es:[edi],dx
  41c6e4:	jp     0x41c6d7
  41c6e6:	jecxz  0x41c72c
  41c6e8:	ins    BYTE PTR es:[edi],dx
  41c6e9:	js     0x41c6f9
  41c6eb:	retf   
  41c6ec:	mov    WORD PTR ds:0x7c54d964,?
  41c6f2:	cmp    DWORD PTR [edx],esi
  41c6f4:	(bad)  
  41c6f5:	(bad)  
  41c6f6:	(bad)  
  41c6f7:	xor    eax,0xda9cab22
  41c6fc:	ret    
  41c6fd:	int    0xe8
  41c6ff:	and    dh,0x1e
  41c702:	mov    ds:0x98842bc0,eax
  41c707:	xchg   DWORD PTR [edi],esp
  41c709:	rcl    DWORD PTR [ebx-0x71],1
  41c70c:	addr16 out dx,al
  41c70e:	dec    edi
  41c70f:	mov    edi,0x9d9ad768
  41c714:	jg     0x41c78f
  41c716:	dec    eax
  41c717:	mov    dl,0x95
  41c719:	jecxz  0x41c6d3
  41c71b:	int    0xae
  41c71d:	dec    ebp
  41c71e:	add    eax,0x976780f9
  41c723:	fwait
  41c724:	imul   BYTE PTR [edi+esi*2+0x36897c0b]
  41c72b:	inc    ebx
  41c72c:	fldcw  WORD PTR [esi+eax*4-0x3b]
  41c730:	xor    DWORD PTR [ecx+0xe9c77e2],ebp
  41c736:	aaa    
  41c737:	(bad)  [esp+ebp*1+0x62]
  41c73b:	ret    
  41c73c:	add    DWORD PTR [ecx-0x14bb5bb],ebx
  41c742:	jae    0x41c793
  41c744:	stc    
  41c745:	outs   dx,BYTE PTR ds:[esi]
  41c746:	dec    eax
  41c747:	sub    DWORD PTR [ebx+0x7],ecx
  41c74a:	add    al,0x8e
  41c74c:	inc    esp
  41c74d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c74e:	retf   0xe5b2
  41c751:	mov    edx,0x59f1027e
  41c756:	push   cs
  41c757:	gs fidiv DWORD PTR ds:[ebp+0x5f]
  41c75c:	lods   al,BYTE PTR ds:[esi]
  41c75d:	push   ds
  41c75e:	(bad)  [ecx]
  41c760:	stc    
  41c761:	sub    al,0xea
  41c763:	inc    ecx
  41c764:	sbb    BYTE PTR [edi-0x2f],bl
  41c767:	push   esp
  41c768:	stos   BYTE PTR es:[edi],al
  41c769:	aaa    
  41c76a:	mov    al,ds:0xef0c1dff
  41c76f:	adc    dl,BYTE PTR [ebx+0x66d927df]
  41c775:	(bad)  
  41c776:	jmp    0xa76c7eb2
  41c77b:	xchg   edi,eax
  41c77c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c77d:	ins    BYTE PTR es:[edi],dx
  41c77e:	addr16 xchg esp,eax
  41c780:	not    BYTE PTR [ebp+0x1bcbf0a6]
  41c786:	mov    dl,0xdf
  41c788:	push   ecx
  41c789:	cs cmp eax,0xcc120cd1
  41c78f:	push   0xdb33de0b
  41c794:	xor    al,bl
  41c796:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c797:	sar    DWORD PTR [ebx],cl
  41c799:	lahf   
  41c79a:	mov    ds:0x1112c061,al
  41c79f:	lahf   
  41c7a0:	and    eax,DWORD PTR [edx+0x6f]
  41c7a3:	scas   eax,DWORD PTR es:[edi]
  41c7a4:	mov    bl,0xcf
  41c7a6:	imul   esp,DWORD PTR [ecx],0xaeb42080
  41c7ac:	ss in  al,dx
  41c7ae:	enter  0xfcf5,0x36
  41c7b2:	and    al,0x3b
  41c7b4:	cmc    
  41c7b5:	into   
  41c7b6:	push   edi
  41c7b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c7b8:	push   es
  41c7b9:	xchg   edi,eax
  41c7ba:	test   al,0xbc
  41c7bc:	mov    ah,0x29
  41c7be:	mov    ecx,0xe479b058
  41c7c3:	sub    ebx,ebx
  41c7c5:	scas   eax,DWORD PTR es:[edi]
  41c7c6:	loop   0x41c7b5
  41c7c8:	sbb    eax,0xed5f93be
  41c7cd:	jbe    0x41c768
  41c7cf:	imul   esi,DWORD PTR [edi],0x15d27548
  41c7d5:	adc    BYTE PTR [ebx],ah
  41c7d7:	inc    ebp
  41c7d8:	push   ecx
  41c7d9:	pop    edi
  41c7da:	repnz test eax,0x49c3a498
  41c7e0:	mov    ah,0xcd
  41c7e2:	(bad)  
  41c7e3:	mov    al,0xd3
  41c7e5:	or     edx,DWORD PTR [ecx+edx*8]
  41c7e8:	div    BYTE PTR [ebx+0x42]
  41c7eb:	je     0x41c80a
  41c7ed:	shl    edi,cl
  41c7ef:	jb     0x41c82a
  41c7f1:	outs   dx,DWORD PTR ds:[esi]
  41c7f2:	fstp   QWORD PTR [ebx-0xc88a54b]
  41c7f8:	out    0xad,eax
  41c7fa:	es enter 0x68c2,0x91
  41c7ff:	es mov esi,0x51392036
  41c805:	sti    
  41c806:	mov    al,ds:0xc96a204e
  41c80b:	pop    ebx
  41c80c:	xor    bh,BYTE PTR [edx-0x2e]
  41c80f:	add    esp,DWORD PTR [ebx+0x50780637]
  41c815:	xchg   ecx,eax
  41c816:	jmp    0x41c87e
  41c818:	mov    bl,0xc4
  41c81a:	mov    eax,0xb18c098
  41c81f:	stos   BYTE PTR es:[edi],al
  41c820:	sbb    eax,0x8ef4f14
  41c825:	or     eax,0x21ba4347
  41c82a:	test   ebp,ebx
  41c82c:	mov    esi,0x7428b6a8
  41c831:	out    dx,eax
  41c832:	sub    eax,0xdd391eaa
  41c837:	mov    esp,0xbb88b19a
  41c83c:	cmp    DWORD PTR [esi],edx
  41c83e:	jnp    0x41c7e6
  41c840:	test   eax,0xbc111429
  41c845:	cdq    
  41c846:	addr16 leave 
  41c848:	arpl   dx,ax
  41c84a:	pop    eax
  41c84b:	jecxz  0x41c833
  41c84d:	js     0x41c7d9
  41c84f:	ror    BYTE PTR [di-0x6911],0x5a
  41c855:	fnsave [edi+ecx*4-0x56be033f]
  41c85c:	adc    BYTE PTR [ecx],ah
  41c85e:	outs   dx,DWORD PTR ds:[esi]
  41c85f:	sub    eax,0xadd57128
  41c864:	inc    ecx
  41c865:	dec    ebx
  41c866:	fdivrp st(5),st
  41c868:	ja     0x41c87c
  41c86a:	sar    BYTE PTR ds:0x4c487a8b,1
  41c870:	dec    ebx
  41c871:	mov    eax,ds:0x5e3a4760
  41c876:	enter  0x38bd,0xdf
  41c87a:	sbb    BYTE PTR [ebx-0x16],dl
  41c87d:	xor    ah,BYTE PTR [eax-0x5d]
  41c880:	pop    ecx
  41c881:	adc    al,0x86
  41c883:	daa    
  41c884:	fbld   TBYTE PTR [esp]
  41c887:	icebp  
  41c888:	nop
  41c889:	(bad)  
  41c88a:	test   eax,0x52015e4d
  41c88f:	call   0x561a:0x30ca12b9
  41c896:	jmp    0x7dd8:0xe1ea3ead
  41c89d:	mov    edi,0x84251502
  41c8a2:	fwait
  41c8a3:	sub    al,0xb6
  41c8a5:	pop    ebx
  41c8a6:	jno    0x41c8e6
  41c8a8:	sub    ch,BYTE PTR [esi+0x2404533e]
  41c8ae:	xchg   esp,eax
  41c8af:	les    edx,FWORD PTR [ebx+0x6f744950]
  41c8b5:	dec    edi
  41c8b6:	mov    BYTE PTR [ecx],bh
  41c8b8:	xlat   BYTE PTR ds:[ebx]
  41c8b9:	and    DWORD PTR ds:0xcc79f704,0x9ff2f3f7
  41c8c3:	aaa    
  41c8c4:	push   0x76
  41c8c6:	rcl    DWORD PTR [ebp-0x42],cl
  41c8c9:	test   eax,0x7dde85
  41c8ce:	and    DWORD PTR [ebx+0x11],edx
  41c8d1:	ret    
  41c8d2:	(bad)  
  41c8d3:	retf   
  41c8d4:	repz jb 0x41c930
  41c8d7:	pop    ds
  41c8d8:	adc    esi,DWORD PTR [esi+eiz*8+0x8]
  41c8dc:	add    BYTE PTR [ebp-0x53],bh
  41c8df:	cmp    eax,0x4ef4d12c
  41c8e4:	test   DWORD PTR [esi+0x56],edx
  41c8e7:	pop    es
  41c8e8:	mov    edi,0xc3da2a2b
  41c8ed:	or     eax,DWORD PTR [esi+eax*1-0x6a]
  41c8f1:	cld    
  41c8f2:	jbe    0x41c8b5
  41c8f4:	pop    es
  41c8f5:	(bad)  
  41c8f7:	outs   dx,DWORD PTR ds:[esi]
  41c8f8:	or     bl,BYTE PTR [ebx+0x6b]
  41c8fb:	inc    ebx
  41c8fc:	lahf   
  41c8fd:	add    al,0xe5
  41c8ff:	icebp  
  41c900:	cmc    
  41c901:	loopne 0x41c957
  41c903:	test   BYTE PTR [edi-0x6a10d3b3],dl
  41c909:	stos   BYTE PTR es:[edi],al
  41c90a:	inc    esi
  41c90b:	mov    ds:0xc3188a9e,al
  41c910:	dec    eax
  41c911:	mov    dl,0xc1
  41c913:	loopne 0x41c93f
  41c915:	and    DWORD PTR [eax+ecx*4+0x1850d6eb],ecx
  41c91c:	stos   BYTE PTR es:[edi],al
  41c91d:	pusha  
  41c91e:	iret   
  41c91f:	sbb    BYTE PTR [ebx+0x131ffff9],ch
  41c925:	push   esi
  41c926:	xchg   DWORD PTR [esi+0x442a3a93],ecx
  41c92c:	loope  0x41c974
  41c92e:	push   edi
  41c92f:	es retf 0xfd7c
  41c933:	mov    edi,DWORD PTR [esi-0x33e7c8d6]
  41c939:	cmp    edx,DWORD PTR ds:0xeaa88910
  41c93f:	dec    ebx
  41c940:	test   eax,0xb8ae2e13
  41c945:	xor    DWORD PTR [esi+0x5d],esp
  41c948:	sbb    ch,dh
  41c94a:	je     0x41c901
  41c94c:	xchg   esp,eax
  41c94d:	(bad)  
  41c94e:	pop    ebp
  41c94f:	lds    ebp,FWORD PTR [ecx-0x30]
  41c952:	or     BYTE PTR [edx-0x63],bh
  41c955:	or     bl,BYTE PTR [ecx+edi*1+0x39]
  41c959:	leave  
  41c95a:	pop    eax
  41c95b:	cmp    bh,BYTE PTR [ebp+0x45]
  41c95e:	sub    eax,ebp
  41c960:	or     bl,dl
  41c962:	jne    0x41c8e5
  41c964:	mov    bh,0x9e
  41c966:	or     al,0xcb
  41c968:	and    edi,DWORD PTR [eax+0x72]
  41c96b:	fimul  WORD PTR [eax+0x21]
  41c96e:	in     eax,0xee
  41c970:	sub    eax,ebp
  41c972:	mov    ecx,0x9dfc9371
  41c977:	scas   al,BYTE PTR es:[edi]
  41c978:	push   edx
  41c979:	ror    dl,cl
  41c97b:	fcmove st,st(7)
  41c97d:	retf   
  41c97e:	push   eax
  41c97f:	xchg   esp,eax
  41c980:	neg    BYTE PTR [ebp+0x17726cf7]
  41c986:	push   esi
  41c987:	mov    eax,0xdeaac5a4
  41c98c:	jae    0x41c9c5
  41c98e:	imul   ebp,esi,0xd5eb01d2
  41c994:	sub    eax,0xd24b8efb
  41c999:	cmp    ecx,ecx
  41c99b:	sbb    DWORD PTR [ebx+0x64],edx
  41c99e:	(bad)  
  41c99f:	cld    
  41c9a0:	imul   edx
  41c9a2:	or     eax,0xc3123bef
  41c9a7:	cli    
  41c9a8:	scas   al,BYTE PTR es:[edi]
  41c9a9:	mov    WORD PTR [ebx+eax*8-0x3f],?
  41c9ad:	cmp    eax,0xbc124c4f
  41c9b2:	pusha  
  41c9b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c9b4:	dec    eax
  41c9b5:	icebp  
  41c9b6:	add    al,0x6d
  41c9b8:	cmc    
  41c9b9:	cmp    BYTE PTR [ecx-0x4a74e566],ah
  41c9bf:	out    0x6e,al
  41c9c1:	xchg   esp,eax
  41c9c2:	iret   
  41c9c3:	sub    ebx,ebp
  41c9c5:	cmp    al,0x89
  41c9c7:	or     eax,0xb9cea93c
  41c9cc:	add    BYTE PTR [esi+edi*2+0x5d],bl
  41c9d0:	aaa    
  41c9d1:	repz and al,0x13
  41c9d4:	not    esi
  41c9d6:	(bad)  
  41c9d7:	sti    
  41c9d8:	daa    
  41c9d9:	mov    esi,eax
  41c9db:	pop    ebp
  41c9dc:	and    al,BYTE PTR [ebp-0x5af8074e]
  41c9e2:	xlat   BYTE PTR ds:[ebx]
  41c9e3:	sahf   
  41c9e4:	and    DWORD PTR [edi-0x43],esi
  41c9e7:	clc    
  41c9e8:	cli    
  41c9e9:	xchg   esi,eax
  41c9ea:	add    BYTE PTR [eax+0x7e],bh
  41c9ed:	inc    BYTE PTR [eax]
  41c9ef:	dec    esi
  41c9f0:	stos   WORD PTR es:[edi],ax
  41c9f2:	enter  0x719c,0x52
  41c9f6:	(bad)  
  41c9f8:	jae    0x41c9ea
  41c9fa:	pop    ss
  41c9fb:	nop
  41c9fc:	inc    esi
  41c9fd:	jae    0x41c9fd
  41c9ff:	ret    
  41ca00:	xchg   DWORD PTR [ebx],ecx
  41ca02:	sub    BYTE PTR [ebx+0x2e],bh
  41ca05:	ins    DWORD PTR es:[edi],dx
  41ca06:	xchg   esi,eax
  41ca07:	xchg   edx,eax
  41ca08:	add    ecx,edx
  41ca0a:	mov    edi,0x3774fe08
  41ca0f:	(bad)  
  41ca10:	loopne 0x41ca52
  41ca12:	cdq    
  41ca13:	(bad)  
  41ca14:	jnp    0x41c9d8
  41ca16:	push   ss
  41ca17:	lea    esi,[esi+0x32]
  41ca1a:	mov    DWORD PTR [edi-0x4693123],ebp
  41ca20:	mov    dh,0x71
  41ca22:	movzx  ecx,WORD PTR [edx+0x51fac6a3]
  41ca29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ca2a:	pop    ss
  41ca2b:	cmp    esp,DWORD PTR ds:0xb809c0bc
  41ca31:	fwait
  41ca32:	inc    esi
  41ca33:	scas   al,BYTE PTR es:[edi]
  41ca34:	push   0xa300f5a6
  41ca39:	add    BYTE PTR [ebx-0x28367fc8],dh
  41ca3f:	sbb    eax,ebx
  41ca41:	rol    DWORD PTR [esi],0xf4
  41ca44:	mov    eax,0xd63cf75c
  41ca49:	mov    ebx,0x3d9d1d0
  41ca4e:	sub    eax,DWORD PTR [esi-0x35b3b1d1]
  41ca54:	add    bh,BYTE PTR [ebp-0xbee22d2]
  41ca5a:	mov    esi,0x6fac6db1
  41ca5f:	and    bh,dl
  41ca61:	push   ecx
  41ca62:	jge    0x41ca1c
  41ca64:	jle    0x41ca8c
  41ca66:	stos   DWORD PTR es:[edi],eax
  41ca67:	pop    edx
  41ca68:	mov    ch,0x5d
  41ca6a:	xchg   ebx,eax
  41ca6b:	das    
  41ca6c:	(bad)  
  41ca6d:	jne    0x41ca32
  41ca6f:	gs bswap bp
  41ca73:	out    dx,eax
  41ca74:	add    ecx,DWORD PTR [eax]
  41ca76:	add    edi,DWORD PTR [ecx]
  41ca78:	sbb    DWORD PTR [ebp+0x12a32df5],0xffffffaf
  41ca7f:	nop
  41ca80:	and    edi,DWORD PTR [edi+ebx*2]
  41ca83:	pop    es
  41ca84:	add    ebp,DWORD PTR [esi+ebp*4-0x63596e7]
  41ca8b:	popf   
  41ca8c:	or     dh,0x6a
  41ca8f:	sub    bh,BYTE PTR [ebx+eax*2+0x59c757c0]
  41ca96:	fisttp WORD PTR [ebx]
  41ca98:	jp     0x41ca59
  41ca9a:	fld    TBYTE PTR ds:0x0
  41caa0:	add    BYTE PTR [eax],al
  41caa2:	in     al,0x3e
  41caa4:	mov    esp,ss
  41caa6:	fdivrp st(6),st
  41caa8:	cld    
  41caa9:	ds push esp
  41caab:	daa    
  41caac:	cmp    esi,DWORD PTR [edx+0x14]
  41caaf:	loop   0x41cab6
  41cab1:	arpl   WORD PTR [edi],si
  41cab3:	inc    esi
  41cab4:	add    DWORD PTR [eax],eax
  41cab6:	repnz add al,0x0
  41cab9:	add    BYTE PTR [eax+ecx*2+0x7dc4d2e8],bh
  41cac0:	push   ds
  41cac1:	call   0x38aa:0x9e29711b
  41cac8:	xchg   esp,eax
  41cac9:	xchg   edx,eax
  41caca:	add    edx,DWORD PTR [eax]
  41cacc:	int    0xc1
  41cace:	pop    ds
  41cacf:	inc    ebp
  41cad0:	int    0x15
  41cad2:	cmp    al,0x96
  41cad4:	add    dl,BYTE PTR [ebp-0x3a]
  41cad7:	icebp  
  41cad8:	mov    esp,cs
  41cada:	lods   eax,DWORD PTR ds:[esi]
  41cadb:	push   edi
  41cadc:	mov    eax,0x3632b910
  41cae1:	into   
  41cae2:	and    DWORD PTR [edx-0x714db212],0xffffffb7
  41cae9:	sahf   
  41caea:	push   ds
  41caeb:	add    ecx,DWORD PTR [esi-0xc89d954]
  41caf1:	int    0x68
  41caf3:	leave  
  41caf4:	ds test eax,0xa2e7e747
  41cafa:	pushf  
  41cafb:	jno    0x41ca95
  41cafd:	mov    cs,esi
  41caff:	add    eax,0x204ed243
  41cb04:	jp     0x41cb3e
  41cb06:	cmp    BYTE PTR [edx],bl
  41cb08:	adc    DWORD PTR [eax+0x3d8b154b],ebx
  41cb0e:	xchg   esp,eax
  41cb0f:	test   eax,0x12a3d27a
  41cb14:	jge    0x41cb81
  41cb16:	pop    eax
  41cb17:	call   0xa47a:0xdaa612bc
  41cb1e:	xor    bh,BYTE PTR [eax+0x51ecfd7c]
  41cb24:	jle    0x41cb33
  41cb26:	ja     0x41cb18
  41cb28:	imul   ebx,DWORD PTR [edi+0x7d9fabaa],0x38
  41cb2f:	xchg   BYTE PTR [esi+eiz*8-0xa496e73],ch
  41cb36:	in     eax,dx
  41cb37:	fistp  DWORD PTR [edi+0x2d]
  41cb3a:	ds popfw 
  41cb3d:	jno    0x41cb52
  41cb3f:	and    BYTE PTR [eax-0x5],ah
  41cb42:	aaa    
  41cb43:	jae    0x41cb21
  41cb45:	cmp    bl,BYTE PTR [ebp+0x20]
  41cb48:	cmp    ebx,ecx
  41cb4a:	pop    esi
  41cb4b:	out    0x2d,al
  41cb4d:	mov    cs,WORD PTR [eax-0x70698c91]
  41cb53:	adc    ah,BYTE PTR [ebx+0x74160db1]
  41cb59:	mov    DWORD PTR [ecx-0x23],esi
  41cb5c:	int    0x8
  41cb5e:	stc    
  41cb5f:	test   eax,0x9977b34e
  41cb64:	loopne 0x41cb1b
  41cb66:	pop    eax
  41cb67:	call   0xf6fc9245
  41cb6c:	mov    ecx,0xda16ccf3
  41cb71:	mov    ecx,0xd5c89a85
  41cb76:	ret    
  41cb77:	mov    al,ds:0x15dd9fbe
  41cb7c:	jp     0x41cbbb
  41cb7e:	neg    DWORD PTR [ebx-0x4]
  41cb81:	test   DWORD PTR [eax],ebx
  41cb83:	jg     0x41cb20
  41cb85:	fldcw  WORD PTR [eax]
  41cb87:	out    0xa4,eax
  41cb89:	cmp    esp,esp
  41cb8b:	mov    BYTE PTR [eax],bh
  41cb8d:	xor    bh,ah
  41cb8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cb90:	ss data16 jp 0x41cb9e
  41cb94:	jne    0x41cbb3
  41cb96:	xchg   edi,eax
  41cb97:	cdq    
  41cb98:	push   esp
  41cb99:	into   
  41cb9a:	scas   eax,DWORD PTR es:[edi]
  41cb9b:	sub    edx,DWORD PTR [esi-0xdb0c98a]
  41cba1:	jp     0x41cbf9
  41cba3:	in     al,0x43
  41cba5:	iret   
  41cba6:	sahf   
  41cba7:	add    ebp,eax
  41cba9:	mul    dl
  41cbab:	push   ebx
  41cbac:	jns    0x41cbd5
  41cbae:	clc    
  41cbaf:	sub    eax,0xedbd9039
  41cbb4:	ror    DWORD PTR [ebx+0x49c91217],1
  41cbba:	pushf  
  41cbbb:	test   DWORD PTR [eax+0x1d],0xc17f5fa9
  41cbc2:	sbb    DWORD PTR [edi-0xf],ebp
  41cbc5:	lods   al,BYTE PTR ds:[esi]
  41cbc6:	daa    
  41cbc7:	leave  
  41cbc8:	mov    bl,0x34
  41cbca:	es push ds
  41cbcc:	cdq    
  41cbcd:	sbb    al,0x30
  41cbcf:	jmp    0x68cc:0x9b8f4dc9
  41cbd6:	out    dx,eax
  41cbd7:	test   al,ah
  41cbd9:	push   edx
  41cbda:	clc    
  41cbdb:	pop    ebx
  41cbdc:	mov    edx,0xd08a335c
  41cbe1:	jne    0x41cc49
  41cbe3:	jmp    0x41cb89
  41cbe5:	in     al,dx
  41cbe6:	push   ecx
  41cbe7:	int3   
  41cbe8:	inc    eax
  41cbe9:	ror    DWORD PTR [edi],1
  41cbeb:	int3   
  41cbec:	leave  
  41cbed:	and    cl,BYTE PTR [ebp+eiz*2-0x7]
  41cbf1:	adc    al,0x9f
  41cbf3:	outs   dx,BYTE PTR ds:[esi]
  41cbf4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cbf5:	dec    esp
  41cbf6:	pop    edx
  41cbf7:	fidivr DWORD PTR [eax+ecx*4-0x1d]
  41cbfb:	sub    al,0x10
  41cbfd:	fcmove st,st(7)
  41cbff:	(bad)  
  41cc00:	push   ebx
  41cc02:	mov    es,WORD PTR [edi-0xd]
  41cc05:	cmp    bl,bl
  41cc07:	mov    ds:0x6798bf,al
  41cc0c:	add    BYTE PTR [eax+0x2a7dc366],dh
  41cc12:	jb     0x41cc5b
  41cc14:	fimul  DWORD PTR ds:0xcecb2b0c
  41cc1a:	xchg   ebx,eax
  41cc1b:	loop   0x41cb9d
  41cc1d:	outs   dx,DWORD PTR ds:[esi]
  41cc1e:	outs   dx,BYTE PTR ds:[esi]
  41cc1f:	dec    eax
  41cc20:	xlat   BYTE PTR ds:[ebx]
  41cc21:	leave  
  41cc22:	mov    ch,0x9a
  41cc24:	push   cs
  41cc25:	ss into 
  41cc27:	jge    0x41cbff
  41cc29:	rcr    ecx,1
  41cc2b:	iret   
  41cc2c:	fnstenv [eax+0x2ad6c99]
  41cc32:	jmp    0xf5d7:0xbfb700ca
  41cc39:	mov    ds:0x6079aa6b,al
  41cc3e:	int    0x42
  41cc40:	sub    esp,DWORD PTR [esi]
  41cc42:	or     eax,0x1b9a0619
  41cc47:	scas   al,BYTE PTR es:[edi]
  41cc48:	sti    
  41cc49:	adc    BYTE PTR [eax],0x3
  41cc4c:	ds inc edx
  41cc4e:	and    al,0x70
  41cc50:	xchg   esi,eax
  41cc51:	add    edx,DWORD PTR [ebx+0x47ae21d]
  41cc57:	cwde   
  41cc58:	enter  0xa5d3,0x21
  41cc5c:	repz bound ebp,QWORD PTR [ebx+0x26c291b2]
  41cc63:	xor    eax,0xb162a3c3
  41cc68:	test   eax,0x71afeb79
  41cc6d:	cdq    
  41cc6e:	adc    DWORD PTR [ebx+0x24],ebp
  41cc71:	mul    ah
  41cc73:	mov    BYTE PTR [edi],cl
  41cc75:	mov    ebp,0x2db1b64a
  41cc7a:	imul   eax
  41cc7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cc7d:	or     ch,BYTE PTR [eax-0xaa62ba0]
  41cc83:	arpl   WORD PTR ds:0xfc12074d,bx
  41cc89:	repnz mov ds:0x9d4ff7a7,eax
  41cc8f:	jge    0x41cce1
  41cc91:	xchg   esi,eax
  41cc92:	mov    bh,0x9
  41cc94:	mov    ?,ecx
  41cc96:	loopne 0x41cce4
  41cc98:	xor    al,0xaa
  41cc9a:	xor    eax,0xe474c446
  41cc9f:	cmp    esp,DWORD PTR [edi+0x30]
  41cca2:	cmp    al,0x46
  41cca4:	mov    ah,0x42
  41cca6:	cmp    eax,0xa4f0690e
  41ccab:	cs in  eax,0xe
  41ccae:	fs pushf 
  41ccb0:	outs   dx,DWORD PTR gs:[esi]
  41ccb2:	ja     0x41ccdf
  41ccb4:	std    
  41ccb5:	lods   eax,DWORD PTR ds:[esi]
  41ccb6:	pop    ds
  41ccb7:	ins    BYTE PTR es:[edi],dx
  41ccb8:	jmp    0xe296:0x7b41
  41ccbe:	pop    esp
  41ccbf:	cs pusha 
  41ccc1:	and    dl,BYTE PTR [ecx+edi*4+0x6eda7919]
  41ccc8:	sub    dh,cl
  41ccca:	sbb    ebp,DWORD PTR [ebx*8+0x121a7b0e]
  41ccd1:	lock jae 0x41cc63
  41ccd4:	mov    ecx,0x3da43ff9
  41ccd9:	mov    al,0x3e
  41ccdb:	mov    cl,0x57
  41ccdd:	xlat   BYTE PTR ds:[ebx]
  41ccde:	ret    
  41ccdf:	leave  
  41cce0:	(bad)  
  41cce1:	adc    DWORD PTR [esi-0xcf7fd85],edi
  41cce7:	jnp    0x41cd4e
  41cce9:	(bad)  
  41ccea:	(bad)
  41ccee:	sub    al,0xef
  41ccf0:	xor    eax,0xbc9b2921
  41ccf5:	shl    DWORD PTR [esi+0x9539b52],0xd7
  41ccfc:	jno    0x41cd56
  41ccfe:	add    eax,0xa39bb064
  41cd03:	loope  0x41ccb4
  41cd05:	pop    ecx
  41cd06:	fidivr WORD PTR [ebp+0x3e3ddd92]
  41cd0d:	aas    
  41cd0e:	mov    ah,0x1f
  41cd10:	dec    ebp
  41cd11:	jnp    0x41ccef
  41cd13:	in     eax,dx
  41cd14:	push   0xffffffa6
  41cd16:	sbb    DWORD PTR [esi],ebx
  41cd18:	cmp    al,0x84
  41cd1a:	jns    0x41cd15
  41cd1c:	push   ss
  41cd1d:	jmp    0x41ccf0
  41cd1f:	ror    BYTE PTR [eax+0x38484c1e],cl
  41cd25:	mov    eax,ebx
  41cd27:	mov    ds:0x64c92b0f,al
  41cd2c:	fld    DWORD PTR [ecx]
  41cd2e:	ss jno 0x41ccd1
  41cd31:	aaa    
  41cd32:	aam    0xe0
  41cd34:	std    
  41cd35:	cli    
  41cd36:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cd37:	inc    edx
  41cd38:	shl    BYTE PTR [eax+esi*8-0x6e],0x75
  41cd3d:	hlt    
  41cd3e:	mov    ecx,0x87c92c9a
  41cd43:	arpl   WORD PTR [ebx],di
  41cd45:	icebp  
  41cd46:	lock xchg edi,eax
  41cd48:	fcmovbe st,st(5)
  41cd4a:	inc    ebp
  41cd4b:	push   ss
  41cd4c:	mov    al,ds:0xb2d2f30
  41cd51:	add    eax,0xce8be279
  41cd56:	pop    ecx
  41cd57:	xchg   esi,eax
  41cd58:	dec    ebp
  41cd59:	ins    BYTE PTR es:[edi],dx
  41cd5a:	cmp    al,0xb0
  41cd5c:	cdq    
  41cd5d:	mov    BYTE PTR [esi+0x4c],dh
  41cd60:	gs sub cl,ah
  41cd63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cd64:	repnz outs dx,BYTE PTR ds:[esi]
  41cd66:	rcr    bh,cl
  41cd68:	xor    al,0x55
  41cd6a:	mov    al,ds:0x9be10a36
  41cd6f:	sti    
  41cd70:	stos   BYTE PTR es:[edi],al
  41cd71:	clc    
  41cd72:	pop    edi
  41cd73:	jae    0x41cdc5
  41cd75:	aam    0xc9
  41cd77:	xor    eax,0x12850099
  41cd7c:	arpl   dx,bx
  41cd7e:	es inc ecx
  41cd80:	stos   DWORD PTR es:[edi],eax
  41cd81:	jg     0x41cd3a
  41cd83:	scas   al,BYTE PTR es:[edi]
  41cd84:	inc    ebp
  41cd85:	test   BYTE PTR [edi-0x4d],dl
  41cd88:	mov    DWORD PTR [eax-0x48ceecc9],edi
  41cd8e:	idiv   BYTE PTR [ebp-0x6]
  41cd91:	xor    eax,0xdd76d3f4
  41cd96:	mov    cl,0xdb
  41cd98:	call   0x87bd:0xbae647fe
  41cd9f:	hlt    
  41cda0:	test   BYTE PTR [esi],dh
  41cda2:	xor    ecx,DWORD PTR [ebx]
  41cda4:	mov    cl,0x8e
  41cda6:	mov    ds:0x380ffb3d,eax
  41cdab:	mov    DWORD PTR [ecx+0x52bf2393],ecx
  41cdb1:	loope  0x41cd91
  41cdb3:	xchg   ebx,eax
  41cdb4:	jp     0x41cd7b
  41cdb6:	inc    ebp
  41cdb7:	fnsetpm(287 only) 
  41cdb9:	ins    DWORD PTR es:[edi],dx
  41cdba:	cld    
  41cdbb:	lods   eax,DWORD PTR ds:[esi]
  41cdbc:	fdiv   DWORD PTR [eax+ebp*2-0x6c3f2080]
  41cdc3:	call   0xe7e4:0xd27e9216
  41cdca:	loopne 0x41cde1
  41cdcc:	pop    edx
  41cdcd:	mov    cs,WORD PTR [edx+ebx*2+0x75]
  41cdd1:	and    dl,BYTE PTR [esi+0x3e2c9b84]
  41cdd7:	mov    ah,0x4e
  41cdd9:	add    al,0xac
  41cddb:	call   0x232a:0x3334c7a9
  41cde2:	mov    dh,0xfb
  41cde4:	dec    edx
  41cde5:	inc    ebx
  41cde6:	cmc    
  41cde7:	xor    edx,esi
  41cde9:	sbb    eax,0x9b437499
  41cdee:	addr16 jge 0x41cdda
  41cdf1:	call   0x836b:0x5fdc46b2
  41cdf8:	in     al,0xe4
  41cdfa:	mov    edi,0x866da7c7
  41cdff:	add    DWORD PTR [edx],esp
  41ce01:	sbb    BYTE PTR [esi-0x2627dda5],ch
  41ce07:	xor    DWORD PTR [eax],edi
  41ce09:	mov    ds:0x98fddaa6,eax
  41ce0e:	mov    WORD PTR [ebp-0x74],es
  41ce11:	mov    bl,BYTE PTR [ebp+0x8ad9684]
  41ce17:	sub    DWORD PTR [esi+0x4e660a3d],edi
  41ce1d:	mov    ecx,0xaddb8847
  41ce22:	aaa    
  41ce23:	jns    0x41cdb7
  41ce25:	(bad)  
  41ce26:	lock (bad) 
  41ce28:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ce2a:	addr16 and al,0x68
  41ce2d:	inc    eax
  41ce2e:	mov    WORD PTR [eax+0x63],ds
  41ce31:	mov    ah,0x2c
  41ce33:	xor    bh,BYTE PTR [si]
  41ce36:	xor    dl,BYTE PTR [edx+0x2e4d0eab]
  41ce3c:	fidivr WORD PTR [ecx+0x53bf9982]
  41ce42:	(bad)  
  41ce43:	ror    bh,cl
  41ce45:	jmp    0x41ce3b
  41ce47:	ss inc ecx
  41ce49:	ds push ebp
  41ce4b:	adc    dh,dh
  41ce4d:	dec    esp
  41ce4e:	ins    DWORD PTR es:[edi],dx
  41ce4f:	jg     0x41ce0f
  41ce51:	add    dl,bh
  41ce53:	inc    esp
  41ce54:	xchg   ecx,eax
  41ce55:	xchg   ebp,eax
  41ce56:	jmp    0x91fd09c2
  41ce5b:	push   cs
  41ce5c:	jge    0x41ce48
  41ce5e:	push   edi
  41ce5f:	clc    
  41ce60:	xor    al,0x1d
  41ce62:	inc    esp
  41ce63:	dec    edi
  41ce64:	gs xor eax,0xc1866268
  41ce6a:	mov    edi,0x2e313391
  41ce6f:	mov    al,0xc
  41ce71:	xor    ch,cl
  41ce73:	push   esi
  41ce74:	mov    ds:0xc91a5eb4,eax
  41ce79:	in     eax,dx
  41ce7a:	(bad)  
  41ce7b:	stos   DWORD PTR es:[edi],eax
  41ce7c:	stc    
  41ce7d:	mov    bl,0x26
  41ce7f:	pop    edx
  41ce80:	inc    ecx
  41ce81:	pop    esp
  41ce82:	jb     0x41ce76
  41ce84:	push   edx
  41ce85:	rol    BYTE PTR [ebx+0x41],cl
  41ce88:	in     al,0x31
  41ce8a:	xchg   ebx,eax
  41ce8b:	addr16 jmp 0xcbc1ec3f
  41ce91:	pop    esp
  41ce92:	bnd js 0x41ce1f
  41ce95:	jmp    0x228b:0x8c555073
  41ce9c:	jno    0x41ce9e
  41ce9e:	or     BYTE PTR [esi-0x18],ch
  41cea1:	mov    ch,0x9c
  41cea3:	and    DWORD PTR [eax-0x70c6ece4],edi
  41cea9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ceaa:	mov    cl,0xdd
  41ceac:	inc    esp
  41cead:	pop    ecx
  41ceae:	retf   
  41ceaf:	dec    esi
  41ceb0:	fucomip st,st(0)
  41ceb2:	outs   dx,BYTE PTR ds:[esi]
  41ceb3:	in     eax,0xf2
  41ceb5:	cmp    esp,DWORD PTR [edi+0x19]
  41ceb8:	test   BYTE PTR [esi],dl
  41ceba:	sub    al,0x75
  41cebc:	adc    eax,0xa283a38e
  41cec1:	shl    DWORD PTR [eax-0x2c02104b],cl
  41cec7:	ja     0x41cef8
  41cec9:	sub    al,0xb2
  41cecb:	test   eax,0xba62133f
  41ced0:	xchg   edi,eax
  41ced1:	mov    eax,ds:0xf8fe4e98
  41ced6:	ret    0x3f9b
  41ced9:	aad    0x4c
  41cedb:	pop    edi
  41cedc:	ret    0xfd8d
  41cedf:	jnp    0x41cefc
  41cee1:	retf   0xd025
  41cee4:	out    0x85,al
  41cee6:	or     eax,0x2a9ed30
  41ceeb:	push   ds
  41ceec:	into   
  41ceed:	pop    esi
  41ceee:	dec    eax
  41ceef:	xchg   ebp,eax
  41cef0:	popa   
  41cef1:	cmp    al,cl
  41cef3:	shl    esi,1
  41cef5:	frstor [edi]
  41cef7:	cs popa 
  41cef9:	push   ss
  41cefa:	xor    BYTE PTR [edx+0x1a8a6b66],bl
  41cf00:	mov    BYTE PTR [eax],dh
  41cf02:	xchg   ebp,eax
  41cf03:	push   ss
  41cf04:	pop    esi
  41cf05:	mov    esi,0xdee3d3cc
  41cf0a:	div    BYTE PTR [eax]
  41cf0c:	int    0xd4
  41cf0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cf0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cf10:	and    DWORD PTR [esi+0x5efe344],0x6d
  41cf17:	stc    
  41cf18:	fsubr  DWORD PTR [ebp-0x508ff992]
  41cf1e:	mov    ebp,?
  41cf20:	repnz inc edx
  41cf22:	dec    esp
  41cf23:	xor    DWORD PTR [ebp+0x2d64927],edx
  41cf29:	and    eax,0xdb6099d3
  41cf2e:	daa    
  41cf2f:	test   DWORD PTR [edi],esp
  41cf31:	pop    ss
  41cf32:	xor    eax,DWORD PTR [eax+0x3daa44b5]
  41cf38:	lock and DWORD PTR [esi+0x52],ebx
  41cf3c:	xor    eax,0x7097aceb
  41cf41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cf42:	lahf   
  41cf43:	sbb    ch,ch
  41cf45:	xchg   ebx,eax
  41cf46:	adc    ch,bh
  41cf48:	dec    edx
  41cf49:	(bad)  
  41cf4a:	rcl    BYTE PTR [esp+esi*4],cl
  41cf4d:	mov    esi,0xb799f3c1
  41cf52:	fs mov al,0xa8
  41cf55:	(bad)  
  41cf57:	inc    ebx
  41cf58:	rol    eax,1
  41cf5a:	sbb    eax,0x2629bfc6
  41cf5f:	jnp    0x41cf4f
  41cf61:	mov    ah,0x79
  41cf63:	dec    ecx
  41cf64:	daa    
  41cf65:	test   al,0xe5
  41cf67:	dec    edx
  41cf68:	fs mov ebx,0x29b95b12
  41cf6e:	xchg   ebx,eax
  41cf6f:	mov    ebx,0x3fa121ec
  41cf74:	mov    ?,WORD PTR [edi+0x13635a8d]
  41cf7a:	mov    dl,0x40
  41cf7c:	or     eax,0xea6c4ff0
  41cf81:	mov    eax,ds:0x848893b6
  41cf86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cf87:	xor    DWORD PTR [edx+0x2b],esp
  41cf8a:	pminsw mm2,mm2
  41cf8d:	push   ebx
  41cf8e:	ret    0xed47
  41cf91:	loope  0x41d008
  41cf93:	lds    ebp,FWORD PTR [edx]
  41cf95:	mov    al,ds:0x87e3b902
  41cf9a:	lods   al,BYTE PTR ds:[esi]
  41cf9b:	inc    eax
  41cf9c:	mov    cl,0x2a
  41cf9e:	clc    
  41cf9f:	jl     0x41cfd5
  41cfa1:	retf   0x3e1f
  41cfa4:	dec    ecx
  41cfa5:	fst    QWORD PTR [edi+edx*1]
  41cfa8:	mov    dl,0x72
  41cfaa:	sub    dh,ah
  41cfac:	add    BYTE PTR [eax],al
  41cfae:	add    BYTE PTR [eax],al
  41cfb0:	add    BYTE PTR [eax],al
  41cfb2:	jnp    0x41cf7d
  41cfb4:	xor    bh,0xb2
  41cfb7:	(bad)  
  41cfb8:	jg     0x41cf87
  41cfba:	sbb    DWORD PTR [esp+esi*1-0x5b],0xa422d607
  41cfc2:	sub    DWORD PTR [ebx+0x1],ecx
  41cfc5:	add    dl,dh
  41cfc7:	add    al,0x0
  41cfc9:	add    BYTE PTR [ecx+0x3d7714ee],al
  41cfcf:	push   edx
  41cfd0:	stc    
  41cfd1:	out    dx,al
  41cfd2:	popa   
  41cfd3:	adc    al,bh
  41cfd5:	mov    al,0xfc
  41cfd7:	shr    edi,0x6e
  41cfda:	std    
  41cfdb:	mov    WORD PTR [edx-0x26b59bce],?
  41cfe1:	call   0x5ce15d7a
  41cfe6:	mov    esp,0xf031ba6b
  41cfeb:	dec    edx
  41cfec:	dec    ebp
  41cfed:	(bad)  
  41cfee:	push   esi
  41cfef:	mov    ah,0x97
  41cff1:	adc    ah,dh
  41cff3:	mov    ecx,0x94ee3831
  41cff8:	not    DWORD PTR [esi-0x4b6bef56]
  41cffe:	xor    al,0x4f
  41d000:	xchg   edi,eax
  41d001:	push   es
  41d002:	push   es
  41d003:	popa   
  41d004:	popa   
  41d005:	sub    DWORD PTR [esp+eax*2],ebx
  41d008:	js     0x41cfa3
  41d00a:	mov    BYTE PTR [esi],dh
  41d00c:	sbb    BYTE PTR [eax],cl
  41d00e:	cld    
  41d00f:	push   0x1f
  41d011:	and    ebx,0xe9f6d5f0
  41d017:	fcomp  DWORD PTR [ebx]
  41d019:	push   0x57
  41d01b:	sub    dh,bl
  41d01d:	lods   eax,DWORD PTR ds:[esi]
  41d01e:	in     al,0x97
  41d020:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d021:	loopne 0x41cff0
  41d023:	sbb    al,0x5
  41d025:	cmp    ch,BYTE PTR [ebx-0x11]
  41d028:	imul   dh
  41d02a:	push   ss
  41d02b:	std    
  41d02c:	mov    edi,0x3830ead6
  41d031:	lea    edx,[ebx+0x3a]
  41d034:	int    0xfe
  41d036:	push   0xbb6ef9d2
  41d03b:	mov    ebp,0x501b4a20
  41d040:	push   cs
  41d041:	and    bh,BYTE PTR [ebx+ebx*8+0x5b]
  41d045:	pop    eax
  41d046:	aam    0xbc
  41d048:	pop    edi
  41d049:	sbb    edi,DWORD PTR [esi]
  41d04b:	dec    ecx
  41d04c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d04d:	dec    ebp
  41d04e:	out    0x83,al
  41d050:	imul   eax,DWORD PTR [ebp+0x27],0xfffffff1
  41d054:	and    esi,DWORD PTR ds:0x78463d61
  41d05a:	fs push esi
  41d05c:	inc    esp
  41d05d:	mov    esp,cs
  41d05f:	les    esi,FWORD PTR [ecx]
  41d061:	ja     0x41d0ba
  41d063:	ficomp WORD PTR [edx+0x60764ebe]
  41d069:	mul    BYTE PTR [esi-0x825a360]
  41d06f:	cmp    edx,DWORD PTR [ebx+ebx*8+0x2c]
  41d073:	add    DWORD PTR [edx],0x77412249
  41d079:	mov    al,ds:0xd58047a4
  41d07e:	mov    ecx,0xf5b951d9
  41d083:	jmp    0xc206:0x8796959e
  41d08a:	imul   esi,DWORD PTR [esi+edx*1],0xcfff9fb4
  41d091:	dec    ecx
  41d092:	mov    DWORD PTR [ecx+0x6a],edx
  41d095:	ins    DWORD PTR es:[edi],dx
  41d096:	cmc    
  41d097:	pop    eax
  41d098:	xor    DWORD PTR [eax-0x3f],ebx
  41d09b:	aaa    
  41d09c:	(bad)  
  41d09e:	(bad)  
  41d09f:	xlat   BYTE PTR ds:[ebx]
  41d0a1:	rcl    bl,0xe2
  41d0a4:	fwait
  41d0a5:	sbb    eax,0x45591a7a
  41d0aa:	out    dx,eax
  41d0ab:	mov    ebp,0x3fd93ada
  41d0b0:	sbb    ch,0xbb
  41d0b3:	xchg   edx,eax
  41d0b4:	inc    edi
  41d0b5:	lahf   
  41d0b6:	or     al,0x70
  41d0b8:	xchg   ebx,eax
  41d0b9:	stos   BYTE PTR es:[edi],al
  41d0ba:	nop
  41d0bb:	mov    ecx,0x499120ce
  41d0c0:	pop    es
  41d0c1:	call   0xcae:0x6e72c5df
  41d0c8:	mov    esp,0x5156b8f1
  41d0cd:	mov    al,0x5a
  41d0cf:	push   esi
  41d0d0:	jmp    0x4eb7e52b
  41d0d5:	cdq    
  41d0d6:	add    esp,edx
  41d0d8:	lds    ebp,FWORD PTR [ebx-0x6cedd3ab]
  41d0de:	mov    al,ds:0xb145278b
  41d0e3:	in     eax,0x8e
  41d0e5:	cwde   
  41d0e6:	adc    al,0xa3
  41d0e8:	(bad)  
  41d0e9:	sub    BYTE PTR [ebp-0x2468bf3c],bl
  41d0ef:	(bad)  
  41d0f0:	adc    al,0x9c
  41d0f2:	push   ss
  41d0f3:	jae    0x41d150
  41d0f5:	outs   dx,DWORD PTR ds:[esi]
  41d0f6:	int3   
  41d0f7:	cli    
  41d0f8:	or     esp,DWORD PTR [ebp-0x169ca8d1]
  41d0fe:	xchg   ebp,eax
  41d0ff:	xchg   ebx,eax
  41d100:	arpl   di,dx
  41d102:	aam    0x4
  41d104:	hlt    
  41d105:	jnp    0x41d116
  41d107:	ret    0x3695
  41d10a:	xchg   ebx,eax
  41d10b:	xchg   ecx,eax
  41d10c:	inc    edi
  41d10d:	fsub   st(3),st
  41d10f:	pop    ss
  41d110:	dec    edi
  41d111:	ret    0xee85
  41d114:	xor    ah,0x4a
  41d117:	dec    eax
  41d118:	mov    bh,0xe7
  41d11a:	push   es
  41d11b:	and    al,0x91
  41d11d:	pushf  
  41d11e:	stc    
  41d11f:	cld    
  41d120:	loop   0x41d0be
  41d122:	(bad)  
  41d123:	xchg   edi,eax
  41d124:	xchg   esi,eax
  41d125:	mov    WORD PTR [ebx+esi*2],?
  41d128:	out    dx,eax
  41d129:	in     eax,dx
  41d12a:	push   eax
  41d12b:	jo     0x41d103
  41d12d:	mov    edi,DWORD PTR [ebp+0x2f]
  41d130:	inc    edi
  41d131:	dec    eax
  41d132:	xchg   edx,eax
  41d133:	xchg   ebp,eax
  41d134:	mov    ah,0x35
  41d136:	pusha  
  41d137:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d138:	mov    ebx,DWORD PTR [edi+0x582cf4f9]
  41d13e:	xchg   edx,eax
  41d13f:	pop    ebx
  41d140:	jno    0x41d0d4
  41d142:	popf   
  41d143:	pop    eax
  41d144:	or     BYTE PTR [edi-0x5c],dh
  41d147:	xor    ebp,DWORD PTR [ebx-0x4a]
  41d14a:	retf   0xec5
  41d14d:	jle    0x41d1c1
  41d14f:	popf   
  41d150:	and    DWORD PTR [edx+0x73],eax
  41d153:	and    al,BYTE PTR fs:[ebx]
  41d156:	xor    edx,0xa6ff0e40
  41d15c:	(bad)  
  41d15d:	out    dx,eax
  41d15e:	and    BYTE PTR [edx],dh
  41d160:	fisttp WORD PTR [ebx-0x3]
  41d163:	xchg   ecx,eax
  41d164:	push   esp
  41d165:	jbe    0x41d17d
  41d167:	xor    bl,BYTE PTR [edx-0x158bea9e]
  41d16d:	jle    0x41d132
  41d16f:	call   0xcd536960
  41d174:	or     eax,0xe588f359
  41d179:	mov    cl,0x4f
  41d17b:	int    0xc5
  41d17d:	or     al,0x38
  41d17f:	mov    ah,0x2b
  41d181:	mov    WORD PTR [edx+ebp*4-0x3e846482],ds
  41d188:	lods   al,BYTE PTR ds:[esi]
  41d189:	mov    ds:0x2260fd76,al
  41d18e:	jno    0x41d1e9
  41d190:	pop    ebx
  41d191:	or     edi,ecx
  41d193:	push   0x4be283d9
  41d198:	jl     0x41d148
  41d19a:	fmul   DWORD PTR [edx]
  41d19c:	or     DWORD PTR [ecx+eax*8+0x66d046f2],ebx
  41d1a3:	dec    ebp
  41d1a4:	mov    DWORD PTR [edi+0x3d2ea6a3],ecx
  41d1aa:	adc    al,0xd6
  41d1ac:	out    0x60,al
  41d1ae:	mov    esi,0x6ede99be
  41d1b3:	xchg   esp,eax
  41d1b4:	leave  
  41d1b5:	push   esp
  41d1b6:	xchg   edi,eax
  41d1b7:	jp     0x41d228
  41d1b9:	push   esp
  41d1ba:	popf   
  41d1bb:	std    
  41d1bc:	dec    DWORD PTR [ecx]
  41d1be:	adc    al,0xe4
  41d1c0:	xchg   esi,eax
  41d1c1:	jno    0x41d180
  41d1c3:	rcl    DWORD PTR [eax],1
  41d1c5:	xor    BYTE PTR [esi+eiz*2-0x1a],0x97
  41d1ca:	or     al,0xd5
  41d1cc:	and    esp,DWORD PTR [ebx]
  41d1ce:	fs imul esi,DWORD PTR fs:[ebp+0x57094347],0xffffff8c
  41d1d7:	fidivr DWORD PTR [ecx-0x2593472b]
  41d1dd:	sub    edi,DWORD PTR [eax-0x3f]
  41d1e0:	ror    bl,1
  41d1e2:	popf   
  41d1e3:	in     eax,dx
  41d1e4:	cld    
  41d1e5:	mov    dh,0xc0
  41d1e7:	xchg   esi,eax
  41d1e8:	ficomp WORD PTR [ebx+0x3c1b413]
  41d1ee:	ds dec esi
  41d1f0:	xchg   esp,eax
  41d1f1:	ins    DWORD PTR es:[edi],dx
  41d1f2:	aam    0x64
  41d1f4:	adc    ch,cl
  41d1f6:	rol    BYTE PTR [ebp-0x5a],cl
  41d1f9:	dec    eax
  41d1fa:	xor    edx,DWORD PTR [edi+0x14137463]
  41d200:	cmp    BYTE PTR [eax],bl
  41d202:	out    dx,eax
  41d203:	jns    0x41d1c9
  41d205:	bound  edi,QWORD PTR [edx]
  41d207:	or     dl,BYTE PTR [edi]
  41d209:	pop    ebx
  41d20a:	adc    al,0x53
  41d20c:	arpl   WORD PTR fs:[esi+0x74],bx
  41d210:	jle    0x41d1f8
  41d212:	push   edi
  41d213:	mov    al,ds:0xb3f07adb
  41d218:	retf   
  41d219:	daa    
  41d21a:	mov    eax,ds:0x48508568
  41d21f:	repnz add al,0xe5
  41d222:	mov    WORD PTR ds:0xdab522d,fs
  41d228:	fwait
  41d229:	jmp    0xf6c587c6
  41d22e:	push   edx
  41d22f:	std    
  41d230:	push   ebx
  41d231:	or     bh,BYTE PTR [esi+ebx*4+0x4d]
  41d235:	call   0xed7c08f7
  41d23a:	adc    eax,0x78777e8f
  41d23f:	mov    dl,0xe5
  41d241:	(bad)  
  41d242:	imul   ecx,DWORD PTR [ebx],0xffffff92
  41d245:	mov    fs,WORD PTR [ecx]
  41d247:	leave  
  41d248:	add    BYTE PTR [esi+0x4a],cl
  41d24b:	ror    BYTE PTR [edi],0x3b
  41d24e:	xlat   BYTE PTR ds:[ebx]
  41d24f:	ret    0x63c9
  41d252:	mov    ah,0xf7
  41d254:	test   BYTE PTR [esi+0x51],dh
  41d257:	add    eax,0x10ada285
  41d25c:	push   edx
  41d25d:	and    al,0x7a
  41d25f:	pop    ss
  41d260:	dec    eax
  41d261:	test   eax,0xfd8e78f5
  41d266:	(bad)  
  41d267:	adc    dh,BYTE PTR [edi]
  41d269:	lahf   
  41d26a:	das    
  41d26b:	push   es
  41d26c:	test   BYTE PTR [eax],bl
  41d26e:	mov    fs,WORD PTR [ebp-0x4a]
  41d271:	mov    ch,0x7f
  41d273:	test   eax,0x8e8b49e8
  41d278:	fild   QWORD PTR [ebx]
  41d27a:	das    
  41d27b:	(bad)  
  41d27d:	jae    0x41d248
  41d27f:	leave  
  41d280:	inc    eax
  41d281:	adc    DWORD PTR [ebp+0x7c],edx
  41d284:	in     eax,0x36
  41d286:	mov    eax,0x2ff177bc
  41d28b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d28c:	out    dx,al
  41d28d:	out    0x21,eax
  41d28f:	jl     0x41d2b8
  41d291:	rcl    ebp,1
  41d293:	div    esp
  41d295:	cwde   
  41d296:	je     0x41d317
  41d298:	(bad)  
  41d299:	sub    DWORD PTR [esi],esi
  41d29b:	xchg   edi,eax
  41d29c:	fwait
  41d29d:	test   DWORD PTR [edx-0x44],ecx
  41d2a0:	in     eax,dx
  41d2a1:	xchg   edx,eax
  41d2a2:	inc    edi
  41d2a3:	jg     0x41d276
  41d2a5:	rcl    BYTE PTR [esp+esi*1+0x568e23d8],1
  41d2ac:	dec    ebp
  41d2ad:	push   edx
  41d2ae:	outs   dx,DWORD PTR ds:[esi]
  41d2af:	arpl   dx,si
  41d2b1:	fbld   TBYTE PTR [edi]
  41d2b3:	dec    BYTE PTR [edx]
  41d2b5:	rcl    DWORD PTR [edx-0x2cec6b6e],cl
  41d2bb:	xor    eax,0x2034dd
  41d2c0:	pushf  
  41d2c1:	push   0x20584d7
  41d2c6:	imul   edx,DWORD PTR [ecx],0x66
  41d2c9:	int    0x95
  41d2cb:	jge    0x41d274
  41d2cd:	fidivr DWORD PTR [edi-0x5]
  41d2d0:	adc    BYTE PTR ds:0x2aa2e53d,al
  41d2d6:	jmp    0x4b4594db
  41d2db:	leave  
  41d2dc:	pop    ds
  41d2dd:	sbb    ch,bl
  41d2df:	dec    ebp
  41d2e0:	xchg   ebp,eax
  41d2e1:	fcomp  DWORD PTR [eax+esi*2-0x3]
  41d2e5:	or     BYTE PTR [ebx+0x2f],ah
  41d2e8:	sbb    eax,0x3072d9d0
  41d2ed:	and    cl,BYTE PTR [ebp-0x80]
  41d2f0:	loop   0x41d2fa
  41d2f2:	push   0xf91e2fe
  41d2f7:	iret   
  41d2f8:	jbe    0x41d30b
  41d2fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d2fb:	pushf  
  41d2fc:	jl     0x41d350
  41d2fe:	mov    al,ds:0xa1ca81b3
  41d303:	into   
  41d304:	lea    esp,[ebx-0x315779ce]
  41d30a:	outs   dx,DWORD PTR ds:[esi]
  41d30b:	mov    bh,0x96
  41d30d:	adc    bl,BYTE PTR es:[ebx-0x69a2883]
  41d314:	add    esi,DWORD PTR [edi+0x69]
  41d317:	pop    eax
  41d318:	mov    esp,0x673dc883
  41d31d:	jmp    0x41d303
  41d31f:	je     0x41d31a
  41d321:	ficom  WORD PTR [ebp+eax*4-0x2e1228e0]
  41d328:	and    ah,al
  41d32a:	and    al,0x14
  41d32c:	pop    esi
  41d32d:	call   0xf265:0x67cfa773
  41d334:	lods   eax,DWORD PTR ds:[esi]
  41d335:	addr16 fwait
  41d337:	out    0xd5,eax
  41d339:	stos   BYTE PTR es:[edi],al
  41d33a:	mov    esi,0xe2db1602
  41d33f:	cli    
  41d340:	add    esp,DWORD PTR [eax]
  41d342:	sub    DWORD PTR [ebp-0x74],esp
  41d345:	fidivr DWORD PTR [esi+0x58]
  41d348:	test   al,0x76
  41d34a:	pop    esi
  41d34b:	add    esi,edi
  41d34d:	push   edx
  41d34e:	(bad)  
  41d34f:	dec    esp
  41d350:	data16 jne 0x41d2ed
  41d353:	or     eax,0x771ed983
  41d358:	sub    ebp,DWORD PTR [ebx-0x2e2d71a8]
  41d35e:	arpl   WORD PTR [ebx+0x69],si
  41d361:	add    ecx,esi
  41d363:	mov    edi,0x343ce3a2
  41d368:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d369:	sub    BYTE PTR [edi+eax*4],dh
  41d36c:	add    DWORD PTR [edx-0x146c8ae7],ebx
  41d372:	cmp    ah,bh
  41d374:	out    0x7c,al
  41d376:	sahf   
  41d377:	sbb    BYTE PTR [ebx],0xa3
  41d37a:	repnz es xchg ebp,eax
  41d37d:	jecxz  0x41d363
  41d37f:	fwait
  41d380:	push   ebx
  41d381:	(bad)  
  41d382:	out    dx,al
  41d383:	mov    DWORD PTR [edx],0x34b167ab
  41d389:	pop    ds
  41d38a:	dec    edx
  41d38b:	imul   ecx,DWORD PTR [ecx-0x2a],0xd049ce7a
  41d392:	push   ebp
  41d393:	loope  0x41d3d0
  41d395:	popf   
  41d396:	cli    
  41d397:	and    BYTE PTR [ebx],dl
  41d399:	nop
  41d39a:	hlt    
  41d39b:	add    dl,ch
  41d39d:	pop    edi
  41d39e:	enter  0xfca3,0xa4
  41d3a2:	jnp    0x41d348
  41d3a4:	iret   
  41d3a5:	mov    ds:0x8a808b21,eax
  41d3aa:	dec    esp
  41d3ab:	fdiv   QWORD PTR ds:0x33080d99
  41d3b1:	bound  edi,QWORD PTR [ebx]
  41d3b3:	enter  0xdc5d,0x9d
  41d3b7:	xor    bh,BYTE PTR [ecx]
  41d3b9:	push   esp
  41d3ba:	mov    ah,0x73
  41d3bc:	cmp    BYTE PTR [ebx],dh
  41d3be:	lods   eax,DWORD PTR ds:[esi]
  41d3bf:	sti    
  41d3c0:	call   DWORD PTR [ebx-0x6b]
  41d3c3:	shr    BYTE PTR [eax],cl
  41d3c5:	fnstsw WORD PTR [edi-0x4a75e92d]
  41d3cb:	sub    eax,0xae3060f5
  41d3d0:	push   cs
  41d3d1:	jno    0x41d357
  41d3d3:	mov    edx,0x4df80362
  41d3d8:	cmp    al,0xb1
  41d3da:	hlt    
  41d3db:	loop   0x41d449
  41d3dd:	or     DWORD PTR [ebx+0x64],edx
  41d3e0:	rol    edx,cl
  41d3e2:	pop    ds
  41d3e3:	out    dx,eax
  41d3e4:	jae    0x41d3e5
  41d3e6:	adc    DWORD PTR [edx+0x35ebcbc2],ebx
  41d3ec:	in     eax,dx
  41d3ed:	xor    eax,0xe2991ec1
  41d3f2:	call   0x49ca:0xd1d0f49c
  41d3f9:	fs cmp bl,ah
  41d3fc:	in     al,dx
  41d3fd:	push   ebx
  41d3fe:	aaa    
  41d3ff:	sbb    dh,ah
  41d401:	mov    bl,0xad
  41d403:	outs   dx,DWORD PTR ds:[esi]
  41d404:	xchg   esp,eax
  41d405:	cmp    al,0x36
  41d407:	outs   dx,DWORD PTR ds:[esi]
  41d408:	dec    ebp
  41d409:	and    dl,al
  41d40b:	adc    al,dl
  41d40d:	ror    BYTE PTR [ebx+0x35],1
  41d410:	xor    esi,DWORD PTR [ebx-0x58035e43]
  41d416:	fistp  WORD PTR [eax+0x7ec128f1]
  41d41c:	lods   al,BYTE PTR ds:[esi]
  41d41d:	mov    esp,DWORD PTR [ebp-0x34]
  41d420:	mov    dl,0xbb
  41d422:	(bad)  
  41d423:	div    BYTE PTR [ecx+0x7292345e]
  41d429:	lahf   
  41d42a:	sub    ah,ah
  41d42c:	clc    
  41d42d:	leave  
  41d42e:	icebp  
  41d42f:	in     al,0x60
  41d431:	test   al,0x8d
  41d433:	xor    eax,0x1a909d20
  41d438:	in     eax,dx
  41d439:	pop    ecx
  41d43a:	mov    bl,0x12
  41d43c:	jbe    0x41d432
  41d43e:	lods   al,BYTE PTR ds:[esi]
  41d43f:	rcr    DWORD PTR [ebx+0x7c476050],0x27
  41d446:	or     eax,ecx
  41d448:	aaa    
  41d449:	push   edx
  41d44a:	scas   eax,DWORD PTR es:[edi]
  41d44b:	cli    
  41d44c:	cdq    
  41d44d:	push   ds
  41d44e:	pop    edx
  41d44f:	jo     0x41d466
  41d451:	lods   al,BYTE PTR ds:[esi]
  41d452:	test   al,0x48
  41d454:	fisub  WORD PTR [edi-0x11c624cd]
  41d45a:	sbb    ebp,DWORD PTR [edi]
  41d45c:	fsubrp st(4),st
  41d45e:	xchg   ebx,eax
  41d45f:	fndisi(8087 only) 
  41d461:	cli    
  41d462:	shl    DWORD PTR [ecx+0x45],cl
  41d465:	repnz sub DWORD PTR ds:0xdbd4069d,edx
  41d46c:	cld    
  41d46d:	jge    0x41d447
  41d46f:	imul   DWORD PTR [ebx]
  41d471:	pop    ecx
  41d472:	(bad)  
  41d473:	shl    bh,cl
  41d475:	cmp    al,0xd5
  41d477:	add    ecx,DWORD PTR [edi+0x66c59f9f]
  41d47d:	fmul   QWORD PTR es:[edi+ebp*2-0x40]
  41d482:	pop    ebx
  41d483:	jecxz  0x41d44f
  41d485:	sbb    ebp,DWORD PTR [eax+0x6df1858f]
  41d48b:	xor    esi,edi
  41d48d:	into   
  41d48e:	adc    dh,0xce
  41d491:	pop    ecx
  41d492:	or     ecx,DWORD PTR [edx]
  41d494:	push   edi
  41d495:	xor    al,0x6a
  41d497:	int3   
  41d498:	out    0x51,al
  41d49a:	shr    DWORD PTR [edi],0xb8
  41d49d:	inc    ebx
  41d49e:	add    bh,BYTE PTR [ecx-0x1e]
  41d4a1:	jle    0x41d45b
  41d4a3:	mov    edx,0x27bbce60
  41d4a8:	mov    edx,0xf7a7e54e
  41d4ad:	out    0x4e,al
  41d4af:	and    DWORD PTR [edi],edx
  41d4b1:	mov    ah,0x9b
  41d4b3:	and    BYTE PTR [eax-0x74],ah
  41d4b6:	pop    edx
  41d4b7:	sub    DWORD PTR [edx+0x52],eax
  41d4ba:	push   ebx
  41d4bb:	aaa    
  41d4bc:	add    BYTE PTR [eax],al
  41d4be:	add    BYTE PTR [eax],al
  41d4c0:	add    BYTE PTR [eax],al
  41d4c2:	loop   0x41d4ce
  41d4c4:	add    DWORD PTR [ecx+0x7bf29be9],edx
  41d4ca:	mov    ebp,0xec5ff411
  41d4cf:	(bad)  
  41d4d0:	out    dx,al
  41d4d1:	in     eax,dx
  41d4d2:	sbb    edx,DWORD PTR [eax+0x1]
  41d4d5:	add    dl,dh
  41d4d7:	add    al,0x0
  41d4d9:	add    BYTE PTR [ebx+eiz*2],ch
  41d4dc:	mov    eax,ds:0x27f565b1
  41d4e1:	retf   
  41d4e2:	push   ecx
  41d4e3:	dec    ecx
  41d4e4:	mov    cl,0x5e
  41d4e6:	mov    ebx,0x65d0ffbf
  41d4eb:	and    al,0x47
  41d4ed:	inc    edx
  41d4ee:	mov    ecx,0xa65fd657
  41d4f3:	aam    0xe4
  41d4f5:	xchg   edi,eax
  41d4f6:	dec    edx
  41d4f7:	inc    ebp
  41d4f8:	push   esi
  41d4f9:	xchg   DWORD PTR ds:0x306be8b,esp
  41d4ff:	and    eax,0x295b7a9f
  41d504:	fdiv   DWORD PTR [bx+si]
  41d507:	pop    ecx
  41d508:	push   ebx
  41d509:	inc    esi
  41d50a:	out    dx,al
  41d50b:	push   esi
  41d50c:	test   eax,0xc4a84183
  41d511:	lds    edx,FWORD PTR [edi+ebx*8]
  41d514:	jo     0x41d594
  41d516:	clc    
  41d517:	cli    
  41d518:	out    0xf2,al
  41d51a:	shr    BYTE PTR [ebx],0xce
  41d51d:	je     0x41d523
  41d51f:	fwait
  41d520:	jne    0x41d502
  41d522:	push   eax
  41d523:	mov    cl,0x97
  41d525:	in     al,dx
  41d526:	fidivr WORD PTR [esi+0x3649d7ed]
  41d52c:	jbe    0x41d52b
  41d52e:	mov    ch,0xcd
  41d530:	inc    eax
  41d531:	xchg   ecx,eax
  41d532:	fild   QWORD PTR [edx+0x50ec23d7]
  41d538:	pop    bx
  41d53a:	mov    eax,0x6fb2fca
  41d53f:	int    0xef
  41d541:	push   edx
  41d542:	in     al,dx
  41d543:	cld    
  41d544:	in     al,0x53
  41d546:	mov    ch,0xc3
  41d548:	in     eax,dx
  41d549:	in     eax,0xbb
  41d54b:	push   ss
  41d54c:	xchg   BYTE PTR es:[ebx],al
  41d54f:	mov    BYTE PTR [eax+0x56],ch
  41d552:	add    eax,0xc95cf5bd
  41d557:	sbb    BYTE PTR ds:0x71183e96,dl
  41d55d:	retf   0x1973
  41d560:	sbb    ah,dl
  41d562:	mov    DWORD PTR [esi-0x79f99768],ebp
  41d568:	cmp    eax,DWORD PTR [eax+0x7b]
  41d56b:	xchg   edi,eax
  41d56c:	stos   BYTE PTR es:[edi],al
  41d56d:	pop    edi
  41d56e:	xor    al,0xb9
  41d570:	sbb    DWORD PTR [ebx+0x16],0x34
  41d574:	in     eax,0x68
  41d576:	out    dx,al
  41d577:	ins    BYTE PTR es:[edi],dx
  41d578:	xchg   ecx,eax
  41d579:	xor    al,0xce
  41d57b:	xchg   ecx,eax
  41d57c:	and    al,0x17
  41d57e:	jae    0x41d5d5
  41d580:	jge    0x41d58e
  41d582:	mov    cs,WORD PTR [ecx+eiz*2]
  41d585:	and    cl,BYTE PTR [esi-0xe]
  41d588:	add    ch,al
  41d58a:	jno    0x41d5b8
  41d58c:	mov    al,0x1a
  41d58e:	jmp    0x41d57b
  41d590:	pop    eax
  41d591:	sub    BYTE PTR [edx-0x43],0x36
  41d595:	sub    al,0xa5
  41d597:	inc    ebx
  41d598:	xlat   BYTE PTR ds:[ebx]
  41d599:	inc    eax
  41d59a:	inc    eax
  41d59b:	jne    0x41d60b
  41d59d:	jmp    0xf9f1:0xb006f6da
  41d5a4:	retf   0x40af
  41d5a7:	into   
  41d5a8:	in     eax,dx
  41d5a9:	les    eax,FWORD PTR [ecx]
  41d5ab:	shr    BYTE PTR [edi+ecx*8],0x68
  41d5af:	jl     0x41d583
  41d5b1:	jp     0x41d619
  41d5b3:	and    BYTE PTR [ecx-0x3a10da90],bh
  41d5b9:	outs   dx,BYTE PTR ds:[esi]
  41d5ba:	inc    edi
  41d5bb:	call   0x20ae:0x11766551
  41d5c2:	pop    ds
  41d5c3:	je     0x41d621
  41d5c5:	or     eax,0xfdb7776
  41d5ca:	mov    ds:0x411e9e23,al
  41d5cf:	add    DWORD PTR [esi+edi*1],ebp
  41d5d2:	data16 mov ch,0x26
  41d5d5:	inc    eax
  41d5d6:	pop    es
  41d5d7:	faddp  st(6),st
  41d5d9:	sub    esp,0x79
  41d5dc:	xlat   BYTE PTR ds:[ebx]
  41d5dd:	jmp    0x41d568
  41d5df:	inc    ebp
  41d5e0:	in     al,0xb7
  41d5e2:	das    
  41d5e3:	and    dl,al
  41d5e5:	jno    0x41d649
  41d5e7:	js     0x41d65c
  41d5e9:	gs mov edx,0x493e6657
  41d5ef:	or     al,0xe5
  41d5f1:	out    dx,al
  41d5f2:	sub    al,0xf1
  41d5f4:	mov    ebp,0xbee3e5fc
  41d5f9:	mov    ds:0x68de8258,al
  41d5fe:	loop   0x41d5d8
  41d600:	lods   al,BYTE PTR ds:[esi]
  41d601:	cwde   
  41d602:	call   DWORD PTR [eax-0x44e686c3]
  41d608:	mov    ch,0xa2
  41d60a:	adc    DWORD PTR [edx],ebx
  41d60c:	mov    eax,ds:0x37d77b04
  41d611:	shr    BYTE PTR [edi+0x79],1
  41d614:	jmp    0x1fe0:0xa9d0e43b
  41d61b:	stos   BYTE PTR es:[edi],al
  41d61c:	cmp    al,0x41
  41d61e:	cmp    BYTE PTR [ecx-0x76],dh
  41d621:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d622:	and    BYTE PTR [eax+0x5a],0xc8
  41d626:	nop
  41d627:	add    eax,0xd4b6830a
  41d62c:	mov    dl,0x39
  41d62e:	into   
  41d62f:	pop    esi
  41d630:	mov    ebx,fs
  41d632:	push   ss
  41d633:	cld    
  41d634:	xchg   edx,eax
  41d635:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d636:	inc    esi
  41d637:	push   edi
  41d638:	or     bl,BYTE PTR [ecx]
  41d63a:	lods   eax,DWORD PTR ds:[esi]
  41d63b:	jmp    0x41d689
  41d63d:	jne    0x41d621
  41d63f:	jne    0x41d5f6
  41d641:	lea    edx,[ecx-0x1aea4c06]
  41d647:	sub    BYTE PTR [ecx],0xad
  41d64a:	cmp    edi,DWORD PTR [ecx+0x2f]
  41d64d:	pop    es
  41d64e:	fwait
  41d64f:	ins    DWORD PTR es:[edi],dx
  41d650:	sub    BYTE PTR ds:0x79ee13bf,bl
  41d656:	mov    ss,WORD PTR ss:[eax+ecx*2+0x662f2f38]
  41d65e:	mov    al,ds:0x77ef3638
  41d663:	mov    edx,edx
  41d665:	scas   eax,DWORD PTR es:[edi]
  41d666:	sub    ebp,DWORD PTR [ecx+0x6a]
  41d669:	inc    ebp
  41d66a:	push   ebp
  41d66b:	jge    0x41d66b
  41d66d:	pop    edx
  41d66e:	ins    DWORD PTR es:[edi],dx
  41d66f:	ss setle BYTE PTR cs:[edi-0x26]
  41d675:	aad    0xf8
  41d677:	and    eax,0x3e250fb
  41d67c:	cmp    eax,0xb762cb5a
  41d681:	jg     0x41d6f0
  41d683:	je     0x41d61e
  41d685:	lock cmp ecx,DWORD PTR [edx+0x5f]
  41d689:	jmp    FWORD PTR [esp+eax*2-0x38]
  41d68d:	xchg   edi,eax
  41d68e:	or     ch,BYTE PTR [ebp+0x7a]
  41d691:	rcr    DWORD PTR [eax],0xe1
  41d694:	fimul  DWORD PTR [ecx]
  41d696:	lea    edx,[ebp-0x2a]
  41d699:	jae    0x41d677
  41d69b:	je     0x41d635
  41d69d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d69e:	or     BYTE PTR [eax],bl
  41d6a0:	or     DWORD PTR [edi],edx
  41d6a2:	mov    esp,0x18e981e9
  41d6a7:	ja     0x41d666
  41d6a9:	dec    ebp
  41d6aa:	add    al,0x14
  41d6ac:	mov    BYTE PTR [eax+0x5e7c87f4],cl
  41d6b2:	retf   
  41d6b3:	jnp    0x41d650
  41d6b5:	xor    ecx,esi
  41d6b7:	pop    esp
  41d6b8:	sbb    al,0x0
  41d6ba:	(bad)  
  41d6bb:	int    0xaf
  41d6bd:	mov    eax,0x6947abf3
  41d6c2:	push   esp
  41d6c3:	test   eax,0x6d503b9c
  41d6c8:	add    DWORD PTR [esi-0x7250893b],edi
  41d6ce:	je     0x41d69e
  41d6d0:	es push cs
  41d6d2:	ret    0x8b78
  41d6d5:	push   ss
  41d6d6:	sub    eax,0xec7be13e
  41d6db:	into   
  41d6dc:	fdivr  st(5),st
  41d6de:	cdq    
  41d6df:	push   esp
  41d6e0:	cli    
  41d6e1:	ja     0x41d70b
  41d6e3:	aam    0x28
  41d6e5:	sbb    cl,cl
  41d6e7:	or     al,0x61
  41d6e9:	xchg   ebp,eax
  41d6ea:	rcl    ch,0x97
  41d6ed:	xchg   ecx,eax
  41d6ee:	jbe    0x41d692
  41d6f0:	mov    dl,0xe
  41d6f2:	and    ecx,0x23
  41d6f5:	jnp    0x41d6a0
  41d6f7:	cwde   
  41d6f8:	nop    DWORD PTR [esi]
  41d6fb:	out    0xf9,eax
  41d6fd:	int3   
  41d6fe:	xlat   BYTE PTR ds:[ebx]
  41d6ff:	repz fwait
  41d701:	rcl    eax,0x7f
  41d704:	xchg   ecx,eax
  41d705:	push   0x62
  41d707:	mov    edi,0x60b291eb
  41d70c:	js     0x41d68e
  41d70e:	push   esp
  41d70f:	ins    DWORD PTR es:[edi],dx
  41d710:	jle    0x41d744
  41d712:	adc    dl,BYTE PTR [edi+edx*4]
  41d715:	retf   
  41d716:	(bad)  
  41d717:	xlat   BYTE PTR ds:[ebx]
  41d718:	jne    0x41d6f9
  41d71a:	ror    BYTE PTR [ebx],0xb1
  41d71d:	test   DWORD PTR [ecx+0x4f469632],esi
  41d723:	es je  0x41d728
  41d726:	aad    0xa6
  41d728:	add    bl,0x22
  41d72b:	fisubr WORD PTR [ebx]
  41d72d:	in     al,dx
  41d72e:	sti    
  41d72f:	mov    ebp,0xa9f95b5
  41d734:	cli    
  41d735:	mul    BYTE PTR [ecx+ebx*1-0x1296e4b4]
  41d73c:	ss pop esi
  41d73e:	idiv   DWORD PTR [eax-0x36]
  41d741:	ja     0x41d780
  41d743:	ins    BYTE PTR es:[edi],dx
  41d744:	or     esp,DWORD PTR [edx-0x55]
  41d747:	lea    eax,[edi-0xc4d2ce1]
  41d74d:	pop    edx
  41d74e:	and    eax,0x710afdb1
  41d753:	push   ecx
  41d754:	scas   al,BYTE PTR es:[edi]
  41d755:	sub    esi,DWORD PTR [ebp+0x1c]
  41d758:	fiadd  DWORD PTR [ecx]
  41d75a:	test   DWORD PTR [ecx+0x34f57a07],0xbb0d91c6
  41d764:	std    
  41d765:	push   ds
  41d766:	inc    edx
  41d767:	aaa    
  41d768:	mov    esi,ebp
  41d76a:	mov    cl,0x2c
  41d76c:	sbb    eax,0x62b39817
  41d771:	sub    esi,DWORD PTR [ebp-0x2c]
  41d774:	pushf  
  41d775:	sbb    BYTE PTR [edi+eiz*4-0x56bd5f29],0xf2
  41d77d:	mov    ?,eax
  41d77f:	outs   dx,BYTE PTR ds:[esi]
  41d780:	hlt    
  41d781:	int3   
  41d782:	adc    al,0x7a
  41d784:	and    DWORD PTR [ebx-0x4142cfe1],ebp
  41d78a:	push   ebx
  41d78b:	jge    0x41d729
  41d78d:	test   BYTE PTR [eax],0xe2
  41d790:	cmp    DWORD PTR [ecx-0x44],ebp
  41d793:	sbb    dh,BYTE PTR [edi]
  41d795:	or     al,BYTE PTR [ebx-0x1d]
  41d798:	clc    
  41d799:	stc    
  41d79a:	sahf   
  41d79b:	fistp  WORD PTR [edx]
  41d79d:	adc    BYTE PTR [ebx+0x64b98bc3],ch
  41d7a3:	mov    BYTE PTR [eax+eiz*1+0x1270a1d1],0x43
  41d7ab:	add    al,0x87
  41d7ad:	pop    ds
  41d7ae:	(bad)  
  41d7af:	sbb    DWORD PTR ds:0x144a1fb2,ebp
  41d7b5:	mov    al,0x92
  41d7b7:	jle    0x41d7e0
  41d7b9:	ror    DWORD PTR [ecx+0x3a],cl
  41d7bc:	dec    eax
  41d7bd:	jbe    0x41d80f
  41d7bf:	or     dl,BYTE PTR [ebx+0x42]
  41d7c2:	retf   0x188a
  41d7c5:	jl     0x41d7bb
  41d7c7:	aaa    
  41d7c8:	bound  edx,QWORD PTR [eax-0x1d63095b]
  41d7ce:	(bad)  
  41d7cf:	mov    dh,0x4e
  41d7d1:	(bad)  
  41d7d2:	ins    DWORD PTR es:[edi],dx
  41d7d3:	std    
  41d7d4:	sbb    DWORD PTR ds:0x7c1a1860,esi
  41d7da:	lods   al,BYTE PTR ds:[esi]
  41d7db:	mov    BYTE PTR [esi],dl
  41d7dd:	adc    ebp,DWORD PTR [ecx+eax*2+0x567d4b69]
  41d7e4:	stc    
  41d7e5:	push   edi
  41d7e6:	cdq    
  41d7e7:	fbld   TBYTE PTR [eax]
  41d7e9:	mov    ecx,0xf75e0c52
  41d7ee:	in     eax,dx
  41d7ef:	jmp    0x41d7f4
  41d7f1:	in     al,0x3
  41d7f3:	xor    BYTE PTR [ebx],0xf5
  41d7f6:	sbb    al,0x4e
  41d7f8:	jno    0x41d7db
  41d7fa:	sub    eax,0xda99f623
  41d7ff:	mov    edi,ebp
  41d801:	fdivp  st(6),st
  41d803:	shl    dl,0x20
  41d806:	inc    ecx
  41d807:	popa   
  41d808:	ins    DWORD PTR es:[edi],dx
  41d809:	xor    BYTE PTR [esi+eiz*1-0x67ed17d9],ah
  41d810:	dec    esp
  41d811:	aad    0x33
  41d813:	push   esi
  41d814:	jle    0x41d826
  41d816:	nop
  41d817:	sbb    al,0x6e
  41d819:	inc    esp
  41d81a:	loop   0x41d80f
  41d81c:	out    dx,al
  41d81d:	adc    edi,DWORD PTR [esi-0x622f7d36]
  41d823:	inc    eax
  41d824:	mov    ebx,0xd68b69ad
  41d829:	sbb    esp,edi
  41d82b:	push   0x81e63d6a
  41d830:	jle    0x41d7b9
  41d832:	adc    DWORD PTR [ebx-0x46bb543c],ebx
  41d838:	mov    esp,0x677077a0
  41d83d:	xor    al,0x77
  41d83f:	fcmovb st,st(7)
  41d841:	xchg   esp,eax
  41d842:	shl    BYTE PTR [edi],0x4f
  41d845:	jbe    0x41d814
  41d847:	add    al,0xa2
  41d849:	mov    bl,0x4e
  41d84b:	mov    al,0xcb
  41d84d:	aam    0x85
  41d84f:	inc    esp
  41d850:	lock jae 0x41d7fa
  41d853:	outs   dx,BYTE PTR ds:[esi]
  41d854:	push   edx
  41d855:	push   edi
  41d856:	ret    
  41d857:	inc    esp
  41d858:	push   esp
  41d859:	and    BYTE PTR [esi+0x39],ah
  41d85c:	adc    DWORD PTR [esi+eiz*1],ecx
  41d85f:	pop    ds
  41d860:	out    0xff,al
  41d862:	xchg   ecx,eax
  41d863:	cmp    al,0x63
  41d865:	mov    ds:0xc303f84e,eax
  41d86a:	mov    ss,WORD PTR [ebx-0x15068086]
  41d870:	into   
  41d871:	sbb    al,0xfe
  41d873:	ds jnp 0x41d8f0
  41d876:	retf   
  41d877:	or     bl,BYTE PTR [edi+0x36]
  41d87a:	inc    ebx
  41d87b:	sub    al,dl
  41d87d:	jmp    0xdad6ebd9
  41d882:	xchg   BYTE PTR [esi],dl
  41d884:	push   ebx
  41d885:	loopne 0x41d83d
  41d887:	in     al,dx
  41d888:	fs sti 
  41d88a:	xor    eax,DWORD PTR [ebp-0x2ed757c1]
  41d890:	enter  0xfc63,0x4f
  41d894:	js     0x41d8e4
  41d896:	push   ebx
  41d897:	jmp    0x233a:0x61feef96
  41d89e:	hlt    
  41d89f:	xchg   ecx,eax
  41d8a0:	imul   edi,DWORD PTR [ebp+0xe],0xd723b325
  41d8a7:	mov    esi,0xadcf99c4
  41d8ac:	mov    eax,ds:0xb12cb594
  41d8b1:	mov    DWORD PTR [ecx-0x4a],ebp
  41d8b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d8b5:	xor    ah,bl
  41d8b7:	retf   0x78aa
  41d8ba:	pop    ebx
  41d8bb:	test   BYTE PTR [ebx+ebp*8+0xdeb4655],0x45
  41d8c3:	ror    cl,0xbe
  41d8c6:	ficomp DWORD PTR [ecx]
  41d8c8:	test   DWORD PTR [eax],ebx
  41d8ca:	push   cs
  41d8cb:	test   DWORD PTR [ebp-0x6cef4b6f],0xeff8f799
  41d8d5:	pop    esp
  41d8d6:	push   edx
  41d8d7:	sbb    BYTE PTR [ecx+0x9a5f3cc],bh
  41d8dd:	adc    ch,BYTE PTR [ecx-0x56]
  41d8e0:	js     0x41d8a3
  41d8e2:	jbe    0x41d870
  41d8e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d8e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d8e6:	sub    al,0x59
  41d8e8:	scas   eax,DWORD PTR es:[edi]
  41d8e9:	sbb    DWORD PTR [eax+0x6f],edx
  41d8ec:	cmp    BYTE PTR [edx+0x3d],bh
  41d8ef:	pop    ecx
  41d8f0:	scas   al,BYTE PTR es:[edi]
  41d8f1:	outs   dx,BYTE PTR ds:[esi]
  41d8f2:	ins    DWORD PTR es:[edi],dx
  41d8f3:	xchg   ebx,eax
  41d8f4:	add    DWORD PTR [edx+ebp*8-0x51],esp
  41d8f8:	pop    ecx
  41d8f9:	shl    DWORD PTR [eax+ebx*1-0x61],0xb4
  41d8fe:	or     bl,BYTE PTR [esp+esi*1-0x80]
  41d902:	pop    es
  41d903:	xchg   ebp,eax
  41d904:	iret   
  41d905:	push   0x2fd8bf46
  41d90a:	push   ebx
  41d90b:	dec    esp
  41d90c:	push   ebx
  41d90d:	mov    al,bh
  41d90f:	test   eax,0xa5eb2fce
  41d914:	pop    ss
  41d915:	inc    esi
  41d916:	call   0x43058577
  41d91b:	(bad)  [ebp-0x33]
  41d91e:	mov    esp,0x2b4dd994
  41d923:	clc    
  41d924:	in     al,dx
  41d925:	es jne 0x41d8ad
  41d928:	pusha  
  41d929:	jl     0x41d993
  41d92b:	mov    eax,ds:0xdfad802c
  41d930:	in     al,dx
  41d931:	fild   WORD PTR [esi-0x26ed4e1c]
  41d937:	popf   
  41d938:	jae    0x1e3c5e46
  41d93e:	mov    al,ds:0x9b729152
  41d943:	lea    edi,[esi]
  41d945:	pop    eax
  41d946:	adc    DWORD PTR [edx+0x719583cd],ebp
  41d94c:	mov    ebp,DWORD PTR [esi+edi*1+0x45]
  41d950:	in     eax,dx
  41d951:	jno    0x41d93b
  41d953:	mov    WORD PTR [esi],?
  41d955:	arpl   sp,bx
  41d957:	mov    esp,0x66bbe20f
  41d95c:	int    0x9f
  41d95e:	sbb    ah,0xa8
  41d961:	mov    edi,0xcbdcf400
  41d966:	mov    edx,0xf28c7cfb
  41d96b:	(bad)  
  41d96c:	jo     0x41d903
  41d96e:	test   eax,0xf32f8a44
  41d973:	nop
  41d974:	and    al,0xa9
  41d976:	add    al,0x89
  41d978:	loop   0x41d9ea
  41d97a:	daa    
  41d97b:	mov    al,ds:0xd8b98905
  41d980:	arpl   WORD PTR [ecx-0x20ad71e6],si
  41d986:	jbe    0x41d9d2
  41d988:	sub    al,0x16
  41d98a:	pop    es
  41d98b:	and    al,0x4e
  41d98d:	je     0x41d927
  41d98f:	or     ch,ch
  41d991:	(bad)  
  41d992:	fidivr WORD PTR [ebx]
  41d994:	xor    ebx,DWORD PTR [edx+0x27]
  41d997:	fcom   DWORD PTR [edi]
  41d999:	inc    ebp
  41d99a:	retf   0xe922
  41d99d:	and    eax,0xbc64a966
  41d9a2:	rol    DWORD PTR [ebp+0x5f],0x8c
  41d9a6:	cmp    bl,ch
  41d9a8:	and    al,0x4a
  41d9aa:	or     eax,0x227fd01b
  41d9af:	fs aam 0x6d
  41d9b2:	popf   
  41d9b3:	cld    
  41d9b4:	sahf   
  41d9b5:	sub    bh,BYTE PTR [ebx+0x36ef4897]
  41d9bb:	cmp    eax,0x7d221db5
  41d9c0:	cld    
  41d9c1:	adc    eax,0xa8746b75
  41d9c6:	(bad)  
  41d9c7:	jmp    0x7f5db686
  41d9cc:	add    BYTE PTR [eax],al
  41d9ce:	add    BYTE PTR [eax],al
  41d9d0:	add    BYTE PTR [eax],al
  41d9d2:	pop    esi
  41d9d3:	pop    esi
  41d9d4:	loope  0x41da44
  41d9d6:	loope  0x41d9d7
  41d9d8:	fistp  QWORD PTR [esi-0x6e]
  41d9db:	adc    DWORD PTR [esi],0xa
  41d9de:	fwait
  41d9df:	dec    ecx
  41d9e0:	pop    ebp
  41d9e1:	cld    
  41d9e2:	or     eax,0xf2000155
  41d9e7:	add    al,0x0
  41d9e9:	add    cl,cl
  41d9eb:	sub    esi,DWORD PTR [eax+0x7239ab4a]
  41d9f1:	fs pop eax
  41d9f3:	adc    edx,ebx
  41d9f5:	outs   dx,BYTE PTR ds:[esi]
  41d9f6:	sub    eax,0x2d0e9325
  41d9fb:	xor    ah,BYTE PTR cs:[eax]
  41d9fe:	mov    al,ds:0xfc854b2f
  41da03:	dec    ecx
  41da04:	test   edx,edx
  41da06:	test   BYTE PTR ds:0x9dd58a6d,dl
  41da0c:	mov    ch,0x1c
  41da0e:	fdiv   DWORD PTR ds:0xce265c38
  41da14:	imul   ecx,DWORD PTR [edx],0x500d9fcb
  41da1a:	(bad)  
  41da1b:	int    0x52
  41da1d:	jge    0x41da02
  41da1f:	call   0x60b2:0x9cb80a3d
  41da26:	xchg   esi,eax
  41da27:	in     al,0x3f
  41da29:	xor    al,0x23
  41da2b:	or     BYTE PTR [esi-0x48b0102d],0x3e
  41da32:	and    BYTE PTR [esi-0xd],cl
  41da35:	add    eax,0xc6fa82a8
  41da3a:	cmc    
  41da3b:	cmp    al,0x27
  41da3d:	xchg   esi,eax
  41da3e:	jecxz  0x41da17
  41da40:	xchg   edx,eax
  41da41:	xchg   ebp,eax
  41da42:	jne    0x41dab5
  41da44:	jb     0x41da0a
  41da46:	xor    DWORD PTR [ecx+0x57a02f0f],ebp
  41da4c:	daa    
  41da4d:	mov    ch,0x41
  41da4f:	out    0x8,al
  41da51:	ss cld 
  41da53:	call   0x6a10:0x7c5ba3fa
  41da5a:	ficomp DWORD PTR [edi]
  41da5c:	pop    ebp
  41da5d:	push   esi
  41da5e:	mov    ah,BYTE PTR [ecx]
  41da60:	sbb    al,0x40
  41da62:	or     eax,ebx
  41da64:	cmp    al,0x53
  41da66:	scas   eax,DWORD PTR es:[edi]
  41da67:	loope  0x41dacf
  41da69:	cmp    eax,0xe97a16e0
  41da6e:	or     BYTE PTR [edx+eax*4-0x67],dh
  41da72:	fld    TBYTE PTR [ecx]
  41da74:	sahf   
  41da75:	lods   al,BYTE PTR ds:[esi]
  41da76:	rdtsc  
  41da78:	sub    eax,0x92b11d4e
  41da7d:	xor    bl,BYTE PTR [esi-0x72801a7f]
  41da83:	jmp    0x5966621c
  41da88:	mov    ds:0x3940cb4b,al
  41da8d:	clc    
  41da8e:	js     0x41dacd
  41da90:	jne    0x41da37
  41da92:	cmp    ebx,DWORD PTR [ecx+0x3b1493d3]
  41da98:	mov    ch,0x50
  41da9a:	or     edx,eax
  41da9c:	lock cmp esi,ebx
  41da9f:	dec    esp
  41daa0:	nop
  41daa1:	shl    DWORD PTR ds:0x65aba668,1
  41daa7:	mov    al,ds:0x10827d64
  41daac:	(bad)  
  41daad:	js     0x41db03
  41daaf:	(bad)  [esi+0x1ed0df01]
  41dab5:	in     eax,0xd4
  41dab7:	cli    
  41dab8:	push   ebp
  41dab9:	das    
  41daba:	imul   ebp,edx,0xffffffa3
  41dabd:	cs mov dh,0xaf
  41dac0:	inc    eax
  41dac1:	outs   dx,BYTE PTR ds:[esi]
  41dac2:	test   eax,0xdd5bdbeb
  41dac7:	je     0x41db28
  41dac9:	push   es
  41daca:	in     eax,dx
  41dacb:	test   DWORD PTR [esi+edi*8],ecx
  41dace:	jmp    FWORD PTR [ebx-0xe]
  41dad1:	mov    ds:0x1842bc4b,eax
  41dad6:	pusha  
  41dad7:	xchg   esp,eax
  41dad8:	pop    es
  41dad9:	pop    eax
  41dada:	dec    ecx
  41dadb:	outs   dx,BYTE PTR ds:[esi]
  41dadc:	mov    DWORD PTR [eax],esp
  41dade:	or     al,0xe7
  41dae0:	jmp    0x8c2e:0x38279cde
  41dae7:	mov    al,ds:0x58cf864b
  41daec:	leave  
  41daed:	pop    eax
  41daee:	aas    
  41daef:	sbb    bh,BYTE PTR [edi+0x6c474bf5]
  41daf5:	sbb    esi,DWORD PTR [ebp-0x4c8196a6]
  41dafb:	rcl    ch,0xc6
  41dafe:	add    BYTE PTR [ecx],ah
  41db00:	or     al,0x6f
  41db02:	rcl    BYTE PTR [esi],1
  41db04:	push   ecx
  41db05:	or     al,BYTE PTR [edi-0x7c]
  41db08:	stos   DWORD PTR es:[edi],eax
  41db09:	call   0xbd1cd20
  41db0e:	nop
  41db0f:	dec    ebx
  41db10:	xchg   ebx,eax
  41db11:	push   ds
  41db12:	sbb    edx,edx
  41db14:	inc    esi
  41db15:	add    DWORD PTR [edi+0x531b4515],esp
  41db1b:	and    dh,BYTE PTR [ebx+0xd]
  41db1e:	arpl   bx,cx
  41db20:	(bad)  
  41db21:	in     eax,0x31
  41db23:	scas   al,BYTE PTR es:[edi]
  41db24:	imul   esi,DWORD PTR [edx+eax*2-0x1e],0x3aef736c
  41db2c:	mov    DWORD PTR [ebx-0x210f3170],ebx
  41db32:	call   0x872f:0xb83a007
  41db39:	mov    dh,0x30
  41db3b:	pop    ebx
  41db3c:	push   ebp
  41db3d:	add    DWORD PTR [edi+0x55],ebp
  41db40:	dec    ecx
  41db41:	iret   
  41db42:	int    0x3e
  41db44:	call   0x21c0:0x5d12b000
  41db4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41db4c:	or     BYTE PTR [edx-0x364958ce],0xff
  41db53:	into   
  41db54:	scas   al,BYTE PTR es:[edi]
  41db55:	pop    esi
  41db56:	cmp    eax,0x79a7689b
  41db5b:	xchg   ecx,eax
  41db5c:	cwde   
  41db5d:	mov    bh,0x4d
  41db5f:	mov    eax,ds:0x791f7644
  41db64:	xchg   edi,eax
  41db65:	fmul   DWORD PTR [ebx+esi*1]
  41db68:	sub    esi,DWORD PTR [esp+eiz*2]
  41db6b:	push   eax
  41db6c:	xor    BYTE PTR [ecx+eax*1+0x78],dl
  41db70:	fwait
  41db71:	cmp    bh,BYTE PTR [edx-0x76bc774]
  41db77:	mov    BYTE PTR [edi],ch
  41db79:	sub    al,0xd
  41db7b:	pop    ebx
  41db7c:	xor    al,0xaa
  41db7e:	fdiv   QWORD PTR [eax+0x6017f3a5]
  41db84:	lock inc ebp
  41db86:	pop    ds
  41db87:	jne    0x41dbfe
  41db89:	add    esi,DWORD PTR [esi]
  41db8b:	jmp    0xf4ab78eb
  41db90:	inc    esp
  41db91:	adc    eax,0xdb70e10
  41db96:	xchg   BYTE PTR [ebp+0x76],ah
  41db99:	test   al,0x76
  41db9b:	push   esp
  41db9c:	jb     0x41db8a
  41db9e:	in     al,0xe3
  41dba0:	mov    dl,0x1
  41dba2:	test   ecx,0xaea79591
  41dba8:	pop    esp
  41dba9:	add    ah,dh
  41dbab:	push   0xffffffb4
  41dbad:	push   ebx
  41dbae:	das    
  41dbaf:	sub    eax,0x87399e03
  41dbb4:	dec    edx
  41dbb5:	int    0xfe
  41dbb7:	cwde   
  41dbb8:	call   0xa9fbb1f5
  41dbbd:	les    edi,FWORD PTR ds:0x726459e1
  41dbc3:	fnsave ds:0x726b3022
  41dbc9:	loopne 0x41dc1c
  41dbcb:	cmp    ecx,DWORD PTR [ebp+0x35]
  41dbce:	lds    esp,FWORD PTR [edi+eax*8]
  41dbd1:	cld    
  41dbd2:	xor    cl,dl
  41dbd4:	mov    ah,0x7e
  41dbd6:	mov    ecx,0xc2aab12a
  41dbdb:	pop    ss
  41dbdc:	sub    dl,BYTE PTR [esi+esi*1-0x57474355]
  41dbe3:	arpl   dx,cx
  41dbe5:	add    esp,DWORD PTR [esi-0x2a03ae36]
  41dbeb:	or     BYTE PTR [edi],dh
  41dbed:	(bad)  
  41dbee:	test   al,0x42
  41dbf0:	shl    ebp,1
  41dbf2:	push   ds
  41dbf3:	dec    ebx
  41dbf4:	pop    ecx
  41dbf5:	cmp    ah,BYTE PTR [esi+0x4]
  41dbf8:	out    0xaa,eax
  41dbfa:	xchg   ebp,eax
  41dbfb:	ficomp WORD PTR [ebp+ecx*8-0x68d15746]
  41dc02:	add    DWORD PTR [ecx-0x3],edx
  41dc05:	add    al,0xf3
  41dc07:	mov    ebx,0x254b9d6a
  41dc0c:	div    edi
  41dc0e:	push   ebx
  41dc0f:	js     0x41dc29
  41dc11:	sub    BYTE PTR [esi-0x5cd155d4],ah
  41dc17:	aad    0x1a
  41dc19:	lahf   
  41dc1a:	jmp    0x41dc39
  41dc1c:	fs jne 0x41dc94
  41dc1f:	push   ds
  41dc20:	and    ebp,edx
  41dc22:	inc    ebx
  41dc23:	(bad)  
  41dc24:	xchg   WORD PTR [esi+eax*8-0x51],cx
  41dc29:	jnp    0x41dc42
  41dc2b:	and    al,0xe7
  41dc2d:	retf   0x7795
  41dc30:	push   edi
  41dc31:	popa   
  41dc32:	cmp    ebx,eax
  41dc34:	pop    ds
  41dc35:	iret   
  41dc36:	or     ecx,DWORD PTR [edi]
  41dc38:	pop    edx
  41dc39:	xchg   esi,eax
  41dc3a:	rcl    DWORD PTR [edx+0x27],cl
  41dc3d:	push   ebp
  41dc3e:	xor    eax,0xa73b7549
  41dc43:	adc    esp,DWORD PTR [edx-0x6a732fe1]
  41dc49:	addr16 xchg esi,eax
  41dc4b:	aam    0xaa
  41dc4d:	dec    esi
  41dc4e:	sar    BYTE PTR [eax+0x71],1
  41dc51:	test   al,0xb8
  41dc53:	jno    0x41dc92
  41dc55:	test   ecx,ecx
  41dc57:	std    
  41dc58:	mov    esp,0xbe140019
  41dc5d:	lods   al,BYTE PTR ds:[esi]
  41dc5e:	pusha  
  41dc5f:	add    BYTE PTR [eax],dl
  41dc61:	fidivr WORD PTR [edx+0x7bc30359]
  41dc67:	pop    edx
  41dc68:	fsubr  QWORD PTR [esp+ecx*8]
  41dc6b:	mov    dh,0xd3
  41dc6d:	outs   dx,DWORD PTR ds:[esi]
  41dc6e:	repnz dec esi
  41dc70:	add    cl,BYTE PTR ds:0x830acd77
  41dc76:	arpl   si,sp
  41dc78:	fdiv   st(1),st
  41dc7a:	jmp    edi
  41dc7c:	dec    ebp
  41dc7d:	pop    ecx
  41dc7e:	jno    0x41dcfd
  41dc80:	xchg   ebx,eax
  41dc81:	push   es
  41dc82:	inc    eax
  41dc83:	inc    ecx
  41dc84:	call   0x18d3:0xaf2ed6e3
  41dc8b:	sub    al,0xca
  41dc8d:	cs or  al,0x6e
  41dc90:	cld    
  41dc91:	mov    cl,BYTE PTR [edi]
  41dc93:	sbb    eax,0x9ffc9eae
  41dc98:	lods   eax,DWORD PTR ds:[si]
  41dc9a:	jbe    0x41dc7b
  41dc9c:	pop    esi
  41dc9d:	dec    ebx
  41dc9e:	pop    esi
  41dc9f:	aam    0x9c
  41dca1:	sbb    dl,BYTE PTR [ecx+0x5b]
  41dca4:	add    eax,DWORD PTR ds:0xdba64ca8
  41dcaa:	ret    0x500a
  41dcad:	mov    al,0x29
  41dcaf:	cdq    
  41dcb0:	les    esi,FWORD PTR [eax]
  41dcb2:	(bad)  
  41dcb3:	shl    DWORD PTR [edi+0x1183d936],cl
  41dcb9:	xlat   BYTE PTR ds:[ebx]
  41dcba:	mov    ds:0x15face69,al
  41dcbf:	scas   eax,DWORD PTR es:[edi]
  41dcc0:	push   ebx
  41dcc1:	mov    ah,0x6c
  41dcc3:	ret    0x4c97
  41dcc6:	out    dx,eax
  41dcc7:	(bad)  
  41dcc8:	xchg   ecx,eax
  41dcc9:	push   0xffffff95
  41dccb:	loop   0x41dca8
  41dccd:	lods   eax,DWORD PTR ds:[esi]
  41dcce:	pop    ebx
  41dccf:	nop
  41dcd0:	or     eax,DWORD PTR [esp+ebp*2+0x3c3af1d3]
  41dcd7:	mov    ebx,0xea1cb6e5
  41dcdc:	mov    eax,0x73a31996
  41dce1:	into   
  41dce2:	xlat   BYTE PTR ds:[ebx]
  41dce3:	mov    cl,0x53
  41dce5:	clc    
  41dce6:	int    0xb1
  41dce8:	pusha  
  41dce9:	or     ecx,DWORD PTR [esi+0x6ba39018]
  41dcef:	(bad)  
  41dcf0:	xor    ebx,ebx
  41dcf2:	sub    eax,0x6d8d6fae
  41dcf7:	retf   
  41dcf8:	or     dl,BYTE PTR [esi]
  41dcfa:	or     DWORD PTR ds:0xcd3f3de7,ebx
  41dd00:	mov    dl,0xfc
  41dd02:	push   ds
  41dd03:	and    BYTE PTR [ecx+0x118ac985],dh
  41dd09:	sbb    eax,0x8fdc37b4
  41dd0e:	jno    0x41dcf7
  41dd10:	xlat   BYTE PTR ds:[ebx]
  41dd11:	jp     0x41dcf9
  41dd13:	pop    edi
  41dd14:	mov    cl,0xde
  41dd16:	dec    esp
  41dd17:	ins    BYTE PTR es:[edi],dx
  41dd18:	js     0x41dd2e
  41dd1a:	add    ebp,ebp
  41dd1c:	or     eax,DWORD PTR [esi-0x34]
  41dd1f:	shr    DWORD PTR [ecx+edi*1+0x4a],cl
  41dd23:	fnstsw WORD PTR [eax-0x5b]
  41dd26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dd27:	pop    ebp
  41dd28:	or     dl,ah
  41dd2a:	loopne 0x41dd44
  41dd2c:	lods   eax,DWORD PTR ds:[esi]
  41dd2d:	sub    DWORD PTR [esi-0x32],esp
  41dd30:	mov    eax,0x989c8256
  41dd35:	mov    esp,0x29f5b7b5
  41dd3a:	rcl    DWORD PTR [ecx+eax*8+0x19],0xcc
  41dd3f:	jne    0x41dd19
  41dd41:	xor    eax,0x5af39ad7
  41dd46:	loopne 0x41dcfe
  41dd48:	popf   
  41dd49:	pushf  
  41dd4a:	repnz cmp eax,0xacd484e6
  41dd50:	int    0xca
  41dd52:	adc    eax,0xf8555256
  41dd57:	leave  
  41dd58:	add    bh,dh
  41dd5a:	out    dx,al
  41dd5b:	push   ebx
  41dd5c:	daa    
  41dd5d:	xor    BYTE PTR [ebx-0x5],0xe7
  41dd61:	in     eax,0x1d
  41dd63:	inc    eax
  41dd64:	rol    DWORD PTR [eax+esi*2],1
  41dd67:	pushf  
  41dd68:	les    ebx,FWORD PTR [ecx-0x78]
  41dd6b:	adc    BYTE PTR [edx],dh
  41dd6d:	adc    eax,DWORD PTR [eax+0x64b34d89]
  41dd73:	add    BYTE PTR [edx],bl
  41dd75:	mov    esi,0x87d651b7
  41dd7a:	xor    al,0xea
  41dd7c:	adc    BYTE PTR [edi],cl
  41dd7e:	xchg   esp,eax
  41dd7f:	add    ebp,esp
  41dd81:	rcr    DWORD PTR [ecx+edx*8-0x75],0x3
  41dd86:	mov    bh,0x99
  41dd88:	xchg   esi,eax
  41dd89:	pop    eax
  41dd8a:	add    esi,eax
  41dd8c:	les    esi,FWORD PTR [edi+0x2cd4ea3e]
  41dd92:	or     ah,BYTE PTR [edi]
  41dd94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dd95:	mov    ch,0x28
  41dd97:	pop    edi
  41dd98:	push   edi
  41dd99:	ds hlt 
  41dd9b:	dec    esp
  41dd9c:	aam    0xfe
  41dd9e:	mov    eax,ds:0x37dd1b1c
  41dda3:	xchg   ebx,eax
  41dda4:	sbb    edi,DWORD PTR [eax-0x26]
  41dda7:	mov    ebp,edx
  41dda9:	inc    edi
  41ddaa:	mov    ch,0x6
  41ddac:	imul   ecx,edx,0xffffffac
  41ddaf:	ins    BYTE PTR es:[edi],dx
  41ddb0:	pop    edi
  41ddb1:	popf   
  41ddb2:	xor    eax,0xbeea25ae
  41ddb8:	jp     0x907fe656
  41ddbe:	cld    
  41ddbf:	scas   al,BYTE PTR es:[edi]
  41ddc0:	inc    ebx
  41ddc1:	xchg   esi,eax
  41ddc2:	xchg   esi,eax
  41ddc3:	xchg   esi,eax
  41ddc4:	push   ebp
  41ddc5:	push   ecx
  41ddc6:	in     al,dx
  41ddc7:	xchg   edx,eax
  41ddc8:	dec    esp
  41ddc9:	mov    eax,0x1bc307f5
  41ddce:	cmp    bh,BYTE PTR [ecx+edi*4+0x7f6efa53]
  41ddd5:	dec    esi
  41ddd6:	push   es
  41ddd7:	mov    esp,0xc3905002
  41dddc:	frstor [ebp-0xd]
  41dddf:	div    BYTE PTR [esi]
  41dde1:	mov    ebp,ecx
  41dde3:	int3   
  41dde4:	sub    cl,BYTE PTR [edi]
  41dde6:	jb     0x41de66
  41dde8:	setns  BYTE PTR [ecx+0x6e4e6df5]
  41ddef:	cs std 
  41ddf1:	aaa    
  41ddf2:	scas   eax,DWORD PTR es:[edi]
  41ddf3:	test   BYTE PTR [ecx],0xd6
  41ddf6:	and    eax,0xaede1b86
  41ddfb:	(bad)  
  41ddfc:	mov    dh,0x16
  41ddfe:	ret    
  41ddff:	and    ecx,edi
  41de01:	enter  0xc71e,0x73
  41de05:	mov    eax,ds:0x3ab19d61
  41de0a:	xlat   BYTE PTR ds:[ebx]
  41de0b:	jg     0x41dda2
  41de0d:	sbb    al,0xfe
  41de0f:	in     al,0xb2
  41de11:	stc    
  41de12:	(bad)  
  41de13:	pop    ss
  41de14:	(bad)  
  41de15:	dec    ebp
  41de16:	mov    eax,0x8cfcc1a4
  41de1b:	or     BYTE PTR [ecx-0x27],bh
  41de1e:	pop    esi
  41de1f:	shr    DWORD PTR [eax+eax*4-0x4999f890],1
  41de26:	lock and al,0xbe
  41de29:	jle    0x41de33
  41de2b:	jp     0x41ddf0
  41de2d:	test   BYTE PTR [eax-0x18],bh
  41de30:	jno    0x41de47
  41de32:	mov    eax,0xf216025e
  41de37:	add    BYTE PTR [ecx+0x6415a016],ah
  41de3d:	ins    BYTE PTR es:[edi],dx
  41de3e:	mov    edi,0xcc7eb1ab
  41de43:	mov    al,ds:0x1fb024d6
  41de48:	rcl    BYTE PTR [esi-0x4c06efe4],1
  41de4e:	and    esi,DWORD PTR [esi+0x4578780]
  41de54:	jne    0x41de0a
  41de56:	push   eax
  41de57:	push   edi
  41de58:	adc    esp,ebx
  41de5a:	sbb    al,0xe7
  41de5c:	inc    ebx
  41de5d:	les    ebx,FWORD PTR [ecx-0x69fc7c1e]
  41de63:	adc    BYTE PTR [ebx+edx*8],0x5d
  41de67:	hlt    
  41de68:	sbb    BYTE PTR [eax+0xf],al
  41de6b:	inc    esp
  41de6c:	mul    DWORD PTR [edx]
  41de6e:	mov    ch,0xac
  41de70:	inc    edi
  41de71:	test   BYTE PTR [eax-0x6293d4eb],bh
  41de77:	jmp    0xa8df:0x92ddc670
  41de7e:	into   
  41de7f:	adc    eax,0x734f7740
  41de84:	cmc    
  41de85:	sahf   
  41de86:	inc    edi
  41de87:	aad    0xdf
  41de89:	lods   al,BYTE PTR ds:[esi]
  41de8a:	pop    esp
  41de8b:	jns    0x41deaf
  41de8d:	paddb  mm5,QWORD PTR [ecx]
  41de90:	jbe    0x41de1f
  41de92:	shl    DWORD PTR [edx-0x5109c5a0],0x5d
  41de99:	scas   eax,DWORD PTR es:[edi]
  41de9a:	or     esi,DWORD PTR [edi]
  41de9c:	pop    eax
  41de9d:	test   BYTE PTR [edi],ah
  41de9f:	add    BYTE PTR [eax+0x3c],dh
  41dea2:	test   DWORD PTR [ecx+ebp*4-0x13],0x6b6f7892
  41deaa:	push   esi
  41deab:	add    eax,0x9cb6e2c6
  41deb0:	add    esp,DWORD PTR [eax+edx*8+0x34]
  41deb4:	js     0x41ded8
  41deb6:	mov    esi,DWORD PTR [edx+0x36]
  41deb9:	xchg   esp,eax
  41deba:	je     0x41de5a
  41debc:	stos   BYTE PTR es:[edi],al
  41debd:	sbb    bl,BYTE PTR [edx]
  41debf:	dec    ecx
  41dec0:	(bad)  
  41dec1:	jmp    0xfddd3e52
  41dec6:	and    ecx,edi
  41dec8:	inc    esi
  41dec9:	push   edi
  41deca:	(bad)  
  41decc:	repz add DWORD PTR [ebx+0x5b85f7c2],esi
  41ded3:	sub    BYTE PTR [edi],bh
  41ded5:	push   eax
  41ded6:	ins    BYTE PTR es:[edi],dx
  41ded7:	ss shr bh,1
  41deda:	pop    ds
  41dedb:	jmp    0x41dedd
  41dedd:	add    BYTE PTR [eax],al
  41dedf:	add    BYTE PTR [eax],al
  41dee1:	add    cl,ah
  41dee3:	test   BYTE PTR [esi-0x80d1810],al
  41dee9:	xchg   ebp,eax
  41deea:	and    DWORD PTR [eax],eax
  41deec:	cmp    ebx,edx
  41deee:	dec    ebp
  41deef:	sti    
  41def0:	push   esi
  41def1:	or     bh,bh
  41def3:	pop    ecx
  41def4:	add    DWORD PTR [eax],eax
  41def6:	repnz add al,0x0
  41def9:	add    BYTE PTR [ebx],bh
  41defb:	xlat   BYTE PTR ds:[ebx]
  41defc:	ret    
  41defd:	sub    esi,DWORD PTR [edx+0x4c65477b]
  41df03:	add    edx,eax
  41df05:	add    ebx,edi
  41df07:	cdq    
  41df08:	test   dl,cl
  41df0a:	sub    DWORD PTR [edi-0x29],edi
  41df0d:	adc    eax,0xfedf8b2b
  41df12:	leave  
  41df13:	mov    esp,0xc1863add
  41df18:	xlat   BYTE PTR ds:[ebx]
  41df19:	sbb    ebp,ebp
  41df1b:	pop    esi
  41df1c:	clc    
  41df1d:	lock cmc 
  41df1f:	or     ebp,edi
  41df21:	pusha  
  41df22:	mov    BYTE PTR [esi+0x6357faa8],bh
  41df28:	mov    dl,0xb7
  41df2a:	xchg   esi,eax
  41df2b:	sub    al,0x29
  41df2d:	or     BYTE PTR [esi],cl
  41df2f:	aad    0x40
  41df31:	stos   DWORD PTR es:[edi],eax
  41df32:	inc    ebx
  41df33:	dec    eax
  41df34:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  41df36:	inc    ebp
  41df37:	outs   dx,BYTE PTR ds:[esi]
  41df38:	mov    ecx,DWORD PTR [ecx+0x3c51b5a9]
  41df3e:	lods   al,BYTE PTR ds:[esi]
  41df3f:	int3   
  41df40:	lds    edi,FWORD PTR [eax-0x79]
  41df43:	jecxz  0x41df76
  41df45:	and    esi,DWORD PTR [ebp+0x18]
  41df48:	ror    DWORD PTR [esi+0x5],0x71
  41df4c:	add    eax,0xfddf4f13
  41df51:	pop    es
  41df52:	sahf   
  41df53:	jb     0x41defd
  41df55:	xor    ebp,DWORD PTR [esp+eax*8]
  41df58:	push   ebp
  41df59:	repz or ch,BYTE PTR [esi-0x41480898]
  41df60:	push   edi
  41df61:	inc    esi
  41df62:	push   edi
  41df63:	jecxz  0x41dfda
  41df65:	adc    esp,DWORD PTR [esi+0x6f705b34]
  41df6b:	push   edi
  41df6c:	outs   dx,DWORD PTR ds:[esi]
  41df6d:	mov    dl,al
  41df6f:	push   0x68e74cb4
  41df74:	sbb    ch,dh
  41df76:	das    
  41df77:	rcr    DWORD PTR [eax-0x1],1
  41df7a:	lea    ecx,[ebx-0x40]
  41df7d:	les    ebp,FWORD PTR [edx]
  41df7f:	shl    BYTE PTR [esi-0x62708479],1
  41df85:	cmp    BYTE PTR [esi],dl
  41df87:	loop   0x41dfab
  41df89:	cmp    BYTE PTR [esi-0x2c214a58],cl
  41df8f:	pop    edi
  41df90:	out    dx,al
  41df91:	(bad)  
  41df92:	pop    esi
  41df93:	int    0x1e
  41df95:	ja     0x41df70
  41df97:	fldcw  WORD PTR [eax+0x33]
  41df9a:	aas    
  41df9b:	inc    esp
  41df9c:	rcr    DWORD PTR [esi-0x6b],0xce
  41dfa0:	mov    ebx,0x4efb6550
  41dfa5:	mov    dh,0x35
  41dfa7:	rcl    DWORD PTR [ebx-0x4b],0x99
  41dfab:	jne    0x41dffd
  41dfad:	jle    0x41df78
  41dfaf:	add    BYTE PTR [ebx+0x4f],0xaa
  41dfb3:	dec    edi
  41dfb4:	retf   
  41dfb5:	sub    al,0xe9
  41dfb7:	xchg   BYTE PTR [eax+0x1dd57d30],dh
  41dfbd:	stc    
  41dfbe:	nop
  41dfbf:	push   esi
  41dfc0:	mov    ds:0xd604ad2,eax
  41dfc5:	dec    DWORD PTR [ecx+0x6b22e1e2]
  41dfcb:	popa   
  41dfcc:	shl    DWORD PTR [edx+ecx*8],1
  41dfcf:	mov    cl,0xa
  41dfd1:	cwde   
  41dfd2:	out    0x35,eax
  41dfd4:	dec    eax
  41dfd5:	mov    ch,0xa0
  41dfd7:	push   eax
  41dfd8:	adc    BYTE PTR [eax-0x65],dl
  41dfdb:	xchg   ebx,eax
  41dfdc:	xchg   DWORD PTR [ebx-0x593f324f],esi
  41dfe2:	add    BYTE PTR [eax+0x1b],al
  41dfe5:	sub    eax,DWORD PTR [esi]
  41dfe7:	xor    eax,0x23d10aa5
  41dfec:	(bad)  
  41dfed:	std    
  41dfee:	test   BYTE PTR [edx],ch
  41dff0:	nop
  41dff1:	(bad)  
  41dff2:	xor    bh,BYTE PTR [edi-0x79e0a41c]
  41dff8:	out    dx,eax
  41dff9:	(bad)  
  41dffa:	mov    cl,0x31
  41dffc:	add    eax,0x568fc4d9
  41e001:	loop   0x41df8d
  41e003:	hlt    
  41e004:	mov    edx,0xf77b7a6a
  41e009:	push   eax
  41e00a:	scas   eax,DWORD PTR es:[edi]
  41e00b:	pushf  
  41e00c:	loop   0x41e059
  41e00e:	scas   eax,DWORD PTR es:[edi]
  41e00f:	jle    0x41e03b
  41e011:	fbld   TBYTE PTR [eax-0x44]
  41e014:	mov    ebp,0xa70ec1fa
  41e019:	data16 jle 0x41e008
  41e01c:	jb     0x41e08a
  41e01e:	mov    edx,0xec262b6c
  41e023:	mov    BYTE PTR [esi+ebp*4],0x45
  41e027:	(bad)  
  41e028:	icebp  
  41e029:	(bad)  
  41e02a:	push   edi
  41e02b:	hlt    
  41e02c:	jnp    0x41e0a5
  41e02e:	outs   dx,DWORD PTR ds:[esi]
  41e02f:	mov    bl,0x31
  41e031:	sub    ecx,0x21
  41e034:	cmp    eax,0x51d2dbf4
  41e039:	xor    al,0x72
  41e03b:	icebp  
  41e03c:	jne    0x41e051
  41e03e:	sub    esp,edx
  41e040:	(bad)  
  41e041:	or     ebx,edx
  41e043:	adc    BYTE PTR [ecx+ecx*4-0x704b1e12],bh
  41e04a:	mov    edx,DWORD PTR [eax+0x4]
  41e04d:	sbb    bh,BYTE PTR [ebp-0x3fbe13b]
  41e053:	lds    ebp,FWORD PTR [esi]
  41e055:	cdq    
  41e056:	and    edi,DWORD PTR [esi+ecx*2]
  41e059:	shr    DWORD PTR [esi-0x1c115707],1
  41e05f:	imul   ebp,DWORD PTR [esi+eiz*2-0x3de85684],0x6e
  41e067:	aam    0xc9
  41e069:	scas   eax,DWORD PTR es:[edi]
  41e06a:	pop    esi
  41e06b:	cs (bad) 
  41e06d:	adc    eax,0x2ea18ae
  41e072:	mov    esi,0x210cae3f
  41e077:	add    eax,0xe2a48477
  41e07c:	lock pushf 
  41e07e:	dec    esi
  41e07f:	jnp    0x41e080
  41e081:	push   edx
  41e082:	push   ds
  41e083:	pusha  
  41e084:	pop    edx
  41e085:	jnp    0x41e08b
  41e087:	repnz loop 0x41e0a5
  41e08a:	retf   0xb0ef
  41e08d:	scas   eax,DWORD PTR es:[edi]
  41e08e:	mov    edi,0x439beff9
  41e093:	(bad)  
  41e095:	ret    0xb9ec
  41e098:	jns    0x41e108
  41e09a:	sahf   
  41e09b:	mov    esp,0x6ea4372d
  41e0a0:	dec    ecx
  41e0a1:	and    BYTE PTR [edx],ah
  41e0a3:	jg     0x41e07b
  41e0a5:	or     cl,dl
  41e0a7:	adc    ah,BYTE PTR [eax+edi*2+0x71]
  41e0ab:	ins    DWORD PTR es:[edi],dx
  41e0ac:	repz addr16 in eax,0xe7
  41e0b0:	stos   DWORD PTR es:[edi],eax
  41e0b1:	mov    eax,0xa4cf6243
  41e0b6:	mov    eax,0xbb59f829
  41e0bb:	push   0xe155c4c9
  41e0c0:	ins    BYTE PTR es:[edi],dx
  41e0c1:	pop    eax
  41e0c2:	or     al,0x44
  41e0c4:	mov    esi,0xdf693482
  41e0c9:	popf   
  41e0ca:	push   ds
  41e0cb:	(bad)  
  41e0cc:	loopne 0x41e0d8
  41e0ce:	adc    al,0xa1
  41e0d0:	minps  xmm1,XMMWORD PTR [eax]
  41e0d3:	addr16 pusha 
  41e0d5:	out    dx,eax
  41e0d6:	je     0x41e05a
  41e0d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e0d9:	clc    
  41e0da:	dec    esp
  41e0db:	adc    eax,0x240f02ff
  41e0e0:	and    al,0xc1
  41e0e2:	imul   eax,eax,0x7c
  41e0e5:	cmc    
  41e0e6:	mov    DWORD PTR [edx-0x45711584],ebx
  41e0ec:	mov    WORD PTR [esi],ds
  41e0ee:	lock and ebp,DWORD PTR [ecx]
  41e0f1:	mov    BYTE PTR [eax+0x5f],cl
  41e0f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e0f5:	mov    ecx,0x6cda43ef
  41e0fa:	sti    
  41e0fb:	sub    DWORD PTR [ebx-0x59a1d133],ecx
  41e101:	mov    ds,WORD PTR [ebp-0x2888e33c]
  41e107:	and    al,0x8e
  41e109:	add    al,bl
  41e10b:	ins    DWORD PTR es:[edi],dx
  41e10c:	in     eax,dx
  41e10d:	jne    0x41e10a
  41e10f:	ss dec ebx
  41e111:	xchg   esp,eax
  41e112:	pop    edi
  41e113:	cld    
  41e114:	fiadd  DWORD PTR [edx-0x509d7f1c]
  41e11a:	mov    DWORD PTR [ebp-0x43a61bfe],0xa0e95566
  41e124:	cmp    eax,DWORD PTR [eax]
  41e126:	sub    al,0xde
  41e128:	loope  0x41e14d
  41e12a:	mov    BYTE PTR [edi],bh
  41e12c:	imul   ecx,DWORD PTR [edi+edx*4],0xa97fbe6b
  41e133:	push   esi
  41e134:	jo     0x41e1a3
  41e136:	rol    BYTE PTR [ecx],0x0
  41e139:	rcr    BYTE PTR [eax+0x4b4a983d],0x76
  41e140:	inc    edi
  41e141:	jl     0x41e0ec
  41e143:	loope  0x41e11d
  41e145:	daa    
  41e146:	xlat   BYTE PTR ds:[ebx]
  41e147:	xchg   esp,eax
  41e148:	xchg   esi,ebp
  41e14a:	inc    esp
  41e14b:	cmp    al,0xdc
  41e14d:	mov    ecx,0xcd6e364d
  41e152:	(bad)  
  41e153:	mov    esi,0x835a75b8
  41e158:	lock js 0x41e13f
  41e15b:	push   edx
  41e15c:	and    edi,edx
  41e15e:	and    DWORD PTR [esi-0x11194ce2],esi
  41e164:	push   esi
  41e165:	mov    al,BYTE PTR [eax+0x75]
  41e168:	or     edi,ebx
  41e16a:	sub    ah,BYTE PTR [edx+ecx*1-0x23]
  41e16e:	pop    ds
  41e16f:	sub    al,0x22
  41e171:	jnp    0x41e1f2
  41e173:	bound  eax,QWORD PTR [eax-0x8]
  41e176:	outs   dx,DWORD PTR ds:[esi]
  41e177:	das    
  41e178:	inc    esi
  41e179:	add    eax,0x7dad4f40
  41e17e:	inc    edi
  41e17f:	ret    
  41e180:	ret    0x81b2
  41e183:	cs scas eax,DWORD PTR es:[edi]
  41e185:	pop    edx
  41e186:	stos   DWORD PTR es:[edi],eax
  41e187:	enter  0x31c0,0x36
  41e18b:	push   ds
  41e18c:	cwde   
  41e18d:	and    eax,0xb743bd88
  41e192:	pusha  
  41e193:	dec    edx
  41e194:	lds    esp,FWORD PTR [edi+0xc]
  41e197:	ss hlt 
  41e199:	aam    0x25
  41e19b:	jl     0x41e18f
  41e19d:	repz js 0x41e13b
  41e1a0:	push   edx
  41e1a1:	out    0xfe,al
  41e1a3:	sar    BYTE PTR [eax],cl
  41e1a5:	adc    eax,0x2fc3af5c
  41e1aa:	(bad)  
  41e1ac:	ror    DWORD PTR [esi-0xa],1
  41e1af:	neg    DWORD PTR [ecx+0x0]
  41e1b2:	test   eax,0x4fa2ee1f
  41e1b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e1b8:	lds    ebp,FWORD PTR [eax+0x795d8be0]
  41e1be:	and    eax,0x1d7907e
  41e1c3:	push   ebx
  41e1c4:	or     bh,BYTE PTR [ecx+ecx*8]
  41e1c7:	cwde   
  41e1c8:	rcl    BYTE PTR [ebx-0x2d],0x8f
  41e1cc:	and    eax,0x8f82ce67
  41e1d1:	or     al,0xac
  41e1d3:	sbb    BYTE PTR [esi-0x14],ch
  41e1d6:	ficomp WORD PTR [ecx+0xbb4ac1f]
  41e1dc:	ja     0x41e16a
  41e1de:	ss add al,0x4c
  41e1e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e1e2:	mov    bh,0x3d
  41e1e4:	loop   0x41e218
  41e1e6:	das    
  41e1e7:	loop   0x41e265
  41e1e9:	fnstsw WORD PTR ds:0x16ed4f71
  41e1ef:	(bad)  
  41e1f0:	leave  
  41e1f1:	hlt    
  41e1f2:	stos   BYTE PTR es:[edi],al
  41e1f3:	shl    ecx,0x4a
  41e1f6:	cli    
  41e1f7:	add    al,cl
  41e1f9:	sbb    BYTE PTR gs:[esi],0xbc
  41e1fd:	icebp  
  41e1fe:	cmp    al,0x1c
  41e200:	loopne 0x41e1df
  41e202:	fiadd  DWORD PTR [eax-0x35a14da3]
  41e208:	leave  
  41e209:	or     al,0xa0
  41e20b:	sbb    eax,0x15882e56
  41e210:	mov    esp,0x47b7347a
  41e215:	aas    
  41e216:	push   edx
  41e217:	ins    DWORD PTR es:[edi],dx
  41e218:	pop    edi
  41e219:	mov    WORD PTR [ecx-0x5401778],?
  41e21f:	xor    al,0x4
  41e221:	pop    ebx
  41e222:	test   eax,0xb43f8226
  41e227:	imul   eax,ecx,0x2b
  41e22a:	outs   dx,DWORD PTR ds:[esi]
  41e22b:	sub    BYTE PTR [eax-0x26],dh
  41e22e:	or     ebx,DWORD PTR [edx+ebx*4+0x19fe567b]
  41e235:	jp     0x41e23b
  41e237:	jne    0x41e25f
  41e239:	pushf  
  41e23a:	cmc    
  41e23b:	jb     0x41e20f
  41e23d:	sub    eax,0x188b4f35
  41e242:	jle    0x41e210
  41e244:	push   ecx
  41e245:	repz xor BYTE PTR [ebp+0x548153e8],dh
  41e24c:	out    0xc,eax
  41e24e:	xor    edx,eax
  41e250:	xor    eax,0x7cc4f8d5
  41e255:	xor    esi,esp
  41e257:	dec    eax
  41e258:	mov    bl,0x81
  41e25a:	push   cs
  41e25b:	push   esp
  41e25c:	aas    
  41e25d:	xchg   ecx,eax
  41e25e:	enter  0x5674,0xd1
  41e262:	and    edx,ecx
  41e264:	xchg   edi,eax
  41e265:	mov    edi,0xbf1c17b1
  41e26a:	popf   
  41e26b:	mov    edi,0xcf2da63b
  41e270:	lods   al,BYTE PTR ds:[esi]
  41e271:	fadd   DWORD PTR [ebx+0x13]
  41e274:	into   
  41e275:	ins    BYTE PTR es:[edi],dx
  41e276:	je     0x41e2ed
  41e278:	fnsave [ecx-0x6e26e483]
  41e27e:	xor    eax,0xe49e8568
  41e283:	int    0xd4
  41e285:	pop    ebx
  41e286:	mov    al,0x3d
  41e288:	imul   esp,DWORD PTR [esi+0x41],0xd
  41e28c:	or     al,BYTE PTR [edi+0x59440df8]
  41e292:	add    BYTE PTR [ebx-0x79],bl
  41e295:	pop    esi
  41e296:	pop    edi
  41e297:	ret    0x1ffc
  41e29a:	mov    eax,0x2e177805
  41e29f:	mov    ah,cl
  41e2a1:	imul   esp,DWORD PTR [eax+0x43be89bd],0xbd4f560d
  41e2ab:	push   ebx
  41e2ac:	ins    DWORD PTR es:[edi],dx
  41e2ad:	sbb    ch,BYTE PTR [edi+eiz*1-0x509f03bd]
  41e2b4:	mov    al,ds:0xfc46c8a4
  41e2b9:	out    0xf2,al
  41e2bb:	mov    ch,0x29
  41e2bd:	sahf   
  41e2be:	xchg   esi,eax
  41e2bf:	or     cl,BYTE PTR [edx]
  41e2c1:	or     eax,0xfd260fa4
  41e2c6:	inc    esp
  41e2c7:	clc    
  41e2c8:	fsub   st,st(1)
  41e2ca:	cli    
  41e2cb:	and    dh,BYTE PTR [esi]
  41e2cd:	fwait
  41e2ce:	in     eax,dx
  41e2cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e2d0:	popa   
  41e2d1:	fbld   TBYTE PTR [ebp-0x6b7046fe]
  41e2d7:	sub    BYTE PTR [esi+0x5e],0x87
  41e2db:	or     dh,BYTE PTR [ebx]
  41e2dd:	jge    0x41e28b
  41e2df:	add    bh,dh
  41e2e1:	cmp    ebp,DWORD PTR [ebx-0x559301e9]
  41e2e7:	inc    ebp
  41e2e8:	out    0x9e,eax
  41e2ea:	sti    
  41e2eb:	jg     0x41e33e
  41e2ed:	adc    al,0x72
  41e2ef:	pushf  
  41e2f0:	mov    ecx,0xab94160b
  41e2f5:	(bad)  
  41e2f6:	jge    0x41e2d1
  41e2f8:	pusha  
  41e2f9:	mov    eax,0x37f7cb18
  41e2fe:	shl    BYTE PTR [ecx-0x2891cab1],0x2d
  41e305:	adc    al,0xd0
  41e307:	and    al,0x6e
  41e309:	jb     0x41e36f
  41e30b:	and    al,0x79
  41e30d:	sbb    al,0x3
  41e30f:	jecxz  0x41e347
  41e311:	mov    ds:0xe3ce6ae3,al
  41e316:	pop    eax
  41e317:	out    0xde,eax
  41e319:	cmp    al,0x2a
  41e31b:	iret   
  41e31c:	cli    
  41e31d:	scas   eax,DWORD PTR es:[edi]
  41e31e:	aas    
  41e31f:	or     al,0xbd
  41e321:	add    eax,0x4c5f063f
  41e326:	pop    eax
  41e327:	pop    esi
  41e328:	or     ah,cl
  41e32a:	jg     0x41e34e
  41e32c:	cmp    eax,0x15f4becb
  41e331:	mov    esp,0xc2f533a2
  41e336:	mov    eax,0x93a44c49
  41e33b:	cs xchg ebx,eax
  41e33d:	cmp    ah,dl
  41e33f:	mov    ebx,0xba6d3c41
  41e344:	inc    ebp
  41e345:	adc    al,bh
  41e347:	xor    eax,0xa497b847
  41e34c:	mov    ebx,0x79b395dd
  41e351:	mov    ecx,0x6cef38fc
  41e356:	xor    DWORD PTR [eax+ebx*1],ecx
  41e359:	push   ss
  41e35a:	xchg   esp,eax
  41e35b:	add    ecx,DWORD PTR [ecx+0x34]
  41e35e:	das    
  41e35f:	call   0x40e8:0xaaf37879
  41e366:	push   edx
  41e367:	ss (bad) 
  41e369:	popa   
  41e36a:	push   eax
  41e36b:	loop   0x41e37b
  41e36d:	jno    0x41e338
  41e36f:	xor    ebp,ebx
  41e371:	and    ebp,edi
  41e373:	scas   eax,DWORD PTR es:[edi]
  41e374:	xchg   ebx,eax
  41e375:	out    dx,eax
  41e376:	loop   0x41e3e1
  41e378:	mov    gs,ebx
  41e37a:	mov    ch,0x5a
  41e37c:	pop    edi
  41e37d:	daa    
  41e37e:	mov    eax,0xb66ddb09
  41e383:	sub    al,0xc7
  41e385:	dec    ebx
  41e386:	push   esp
  41e387:	or     DWORD PTR [esi+0x28cbda97],esi
  41e38d:	sub    BYTE PTR [ecx+0x7e],ch
  41e390:	dec    ebp
  41e391:	or     ch,ch
  41e393:	cs call 0x1263:0xfbb3e410
  41e39b:	(bad)  
  41e39c:	mov    ds:0xd4b8755a,eax
  41e3a1:	iret   
  41e3a2:	mov    eax,0xd49c03b3
  41e3a7:	push   ebx
  41e3a8:	call   0xdb461a
  41e3ad:	pop    ebx
  41e3ae:	pop    edi
  41e3af:	ja     0x41e3d2
  41e3b1:	add    DWORD PTR [ecx],edx
  41e3b3:	inc    edx
  41e3b4:	loope  0x41e3d5
  41e3b6:	mov    esp,0xad5ba62f
  41e3bb:	scas   eax,DWORD PTR es:[edi]
  41e3bc:	shl    DWORD PTR [esi],cl
  41e3be:	jle    0x99b935af
  41e3c4:	(bad)
  41e3c7:	add    ah,dh
  41e3c9:	sbb    edx,DWORD PTR [edx-0x5586bad6]
  41e3cf:	pop    edi
  41e3d0:	xchg   esp,eax
  41e3d1:	xchg   DWORD PTR [edi-0x48],ecx
  41e3d4:	push   ebp
  41e3d5:	adc    eax,0xfa9e452e
  41e3da:	fisub  WORD PTR [ecx+0x6b]
  41e3dd:	cwde   
  41e3de:	dec    esp
  41e3df:	mov    ebp,0xa8b97211
  41e3e4:	cwde   
  41e3e5:	mov    esp,0x8c00bb85
  41e3ea:	cmp    BYTE PTR [ebx+0x0],dh
  41e3ed:	add    BYTE PTR [eax],al
  41e3ef:	add    BYTE PTR [eax],al
  41e3f1:	add    BYTE PTR [eax-0x7de0740],al
  41e3f7:	cmp    ecx,ebx
  41e3f9:	loope  0x41e3df
  41e3fb:	mov    esi,0x4a0cfc94
  41e400:	test   BYTE PTR [ecx+esi*8-0xdfffea2],ah
  41e407:	add    al,0x0
  41e409:	add    cl,ah
  41e40b:	out    dx,eax
  41e40c:	add    edi,edx
  41e40e:	mov    BYTE PTR [ecx-0x34],cl
  41e411:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e412:	stc    
  41e413:	rcl    BYTE PTR [ecx+0x1befdb3b],1
  41e419:	fidivr WORD PTR [ebx+0x11691360]
  41e41f:	adc    BYTE PTR [ebp+0x2],ch
  41e422:	push   edx
  41e423:	sub    al,0xc2
  41e425:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e426:	cmp    ebx,ecx
  41e428:	jl     0x41e3e2
  41e42a:	jle    0x41e45b
  41e42c:	js     0x41e3cb
  41e42e:	adc    DWORD PTR [eax],esp
  41e430:	push   ss
  41e431:	jge    0x41e3f9
  41e433:	dec    ecx
  41e434:	retf   
  41e435:	add    al,0xa7
  41e437:	int3   
  41e438:	mov    ds:0x787a89b6,eax
  41e43d:	cmp    DWORD PTR [edi-0xc8d04ab],edi
  41e443:	push   ebx
  41e444:	in     al,dx
  41e445:	xor    eax,0x54c74b6a
  41e44a:	adc    cl,ch
  41e44c:	cmp    BYTE PTR [eax+0x6adda379],cl
  41e452:	sbb    bl,BYTE PTR [eax-0x1af4a007]
  41e458:	jl     0x41e436
  41e45a:	mov    ds:0x33612244,al
  41e45f:	jo     0x41e4b4
  41e461:	cmp    eax,0xfc23f770
  41e466:	cmc    
  41e467:	mov    esp,0xb677b062
  41e46c:	(bad)  
  41e46d:	ds ins BYTE PTR es:[edi],dx
  41e46f:	sbb    ch,BYTE PTR [ebp-0x7e]
  41e472:	inc    ecx
  41e473:	sbb    eax,DWORD PTR [edi]
  41e475:	add    esp,DWORD PTR [edi+ecx*8+0x591efacf]
  41e47c:	aas    
  41e47d:	ret    
  41e47e:	xor    al,0x1a
  41e480:	or     dl,BYTE PTR [ebx]
  41e482:	adc    al,BYTE PTR [edx]
  41e484:	dec    ecx
  41e485:	cld    
  41e486:	jae    0x41e4b5
  41e488:	inc    ebp
  41e489:	cdq    
  41e48a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e48b:	retf   
  41e48c:	popf   
  41e48d:	push   ss
  41e48e:	addr16 (bad) 
  41e491:	push   ecx
  41e492:	sub    DWORD PTR [edx+0x70],ecx
  41e495:	jb     0x41e440
  41e497:	mov    ch,0x50
  41e499:	mov    dh,0x30
  41e49b:	dec    eax
  41e49c:	or     edi,DWORD PTR [ebp-0x46]
  41e49f:	loop   0x41e4ad
  41e4a1:	loop   0x41e431
  41e4a3:	pop    ss
  41e4a4:	dec    edx
  41e4a5:	xor    bh,BYTE PTR [esi+ebp*2+0x29]
  41e4a9:	cmc    
  41e4aa:	pop    ds
  41e4ab:	outs   dx,BYTE PTR ds:[esi]
  41e4ac:	call   0x4c20b811
  41e4b1:	push   ss
  41e4b2:	push   ecx
  41e4b3:	dec    edx
  41e4b4:	sub    DWORD PTR [ebx+0x304f3581],eax
  41e4ba:	dec    eax
  41e4bb:	aad    0xea
  41e4bd:	bnd ret 0xcacf
  41e4c1:	sub    BYTE PTR [ebx],ch
  41e4c3:	std    
  41e4c4:	js     0x41e476
  41e4c6:	ret    
  41e4c7:	cmp    BYTE PTR [ecx+0x6ede544b],bh
  41e4cd:	cld    
  41e4ce:	pop    ss
  41e4cf:	add    al,0x43
  41e4d1:	mov    dl,0xb8
  41e4d3:	je     0x41e537
  41e4d5:	cs push ebp
  41e4d7:	mov    DWORD PTR [edi-0x3e],ecx
  41e4da:	xor    DWORD PTR [ebp+0x57601bcc],0x8
  41e4e1:	stos   DWORD PTR es:[edi],eax
  41e4e2:	mov    ds:0x551b455,al
  41e4e7:	lods   al,BYTE PTR ds:[esi]
  41e4e8:	jp     0x41e52c
  41e4ea:	sub    DWORD PTR [eax],ebp
  41e4ec:	adc    dl,BYTE PTR [ecx]
  41e4ee:	adc    eax,DWORD PTR [edi+0x72ed68b8]
  41e4f4:	sar    DWORD PTR [eax-0xa106cd4],0xb0
  41e4fb:	or     DWORD PTR [edx],esi
  41e4fd:	(bad)  
  41e4fe:	sub    WORD PTR [eax],cx
  41e501:	js     0x41e579
  41e503:	ins    DWORD PTR es:[edi],dx
  41e504:	mov    ah,0xcb
  41e506:	cmp    BYTE PTR [edi],0x5f
  41e509:	ja     0x41e534
  41e50b:	xlat   BYTE PTR ds:[ebx]
  41e50c:	lods   al,BYTE PTR ds:[esi]
  41e50d:	add    ecx,esp
  41e50f:	icebp  
  41e510:	ret    0x3bca
  41e513:	lock cmp DWORD PTR [ebx+edi*8-0x45],esi
  41e518:	xchg   si,ax
  41e51a:	sbb    BYTE PTR [ebp-0x56],0x28
  41e51e:	shl    ah,cl
  41e520:	(bad)  
  41e521:	outs   dx,DWORD PTR ds:[esi]
  41e522:	dec    ebx
  41e523:	or     bl,cl
  41e525:	pusha  
  41e526:	xlat   BYTE PTR ds:[ebx]
  41e527:	jno    0x41e556
  41e529:	push   esi
  41e52a:	push   esp
  41e52b:	jg     0x41e4c4
  41e52d:	pop    edi
  41e52e:	dec    ecx
  41e52f:	call   DWORD PTR ds:0x2cd8182f
  41e535:	xlat   BYTE PTR ds:[ebx]
  41e536:	lods   eax,DWORD PTR ds:[esi]
  41e537:	pop    ebx
  41e538:	cmp    al,0xb1
  41e53a:	and    eax,0xeb25b7a2
  41e53f:	leave  
  41e540:	xchg   DWORD PTR [eax-0x44],ebp
  41e543:	test   DWORD PTR [ecx-0x316af93f],edx
  41e549:	retf   0x3d13
  41e54c:	mov    ebx,0x129cf28b
  41e551:	mov    esi,0x2a4dbfe7
  41e556:	inc    esi
  41e557:	xchg   BYTE PTR ss:[ecx-0x15576ceb],ah
  41e55e:	loopne 0x41e5af
  41e560:	mov    WORD PTR [ecx-0x21],es
  41e563:	jle    0x41e5e2
  41e565:	fsubr  st,st(3)
  41e567:	push   ebp
  41e568:	dec    edx
  41e569:	add    eax,0x493784fb
  41e56e:	jg     0x41e57f
  41e570:	xchg   DWORD PTR [edi+0x588b85c4],edi
  41e576:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e577:	addr16 out 0x6,al
  41e57a:	or     cl,bh
  41e57c:	jno    0x41e5a5
  41e57e:	jne    0x41e54e
  41e580:	jmp    0xd1f1c0ec
  41e585:	cmp    eax,0xc8fe2200
  41e58a:	gs jp  0x41e590
  41e58d:	mov    bl,0x11
  41e58f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e590:	pop    ds
  41e591:	dec    ecx
  41e592:	sahf   
  41e593:	les    esp,FWORD PTR ds:0x63325c63
  41e599:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e59a:	xor    eax,0x7a0a309a
  41e59f:	pusha  
  41e5a0:	pop    eax
  41e5a1:	in     eax,dx
  41e5a2:	shr    BYTE PTR [ecx+0xa55c06],1
  41e5a8:	pop    ds
  41e5a9:	pop    ebx
  41e5aa:	inc    eax
  41e5ab:	sbb    eax,0x5d3d040c
  41e5b0:	imul   esp,DWORD PTR [ebp+0x49],0xffffff8c
  41e5b4:	inc    ebx
  41e5b5:	adc    bl,bl
  41e5b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e5b8:	xor    esp,DWORD PTR [edx+0x3d]
  41e5bb:	int    0xa6
  41e5bd:	rcr    esp,0x5e
  41e5c0:	fwait
  41e5c1:	js     0x41e54a
  41e5c3:	pop    ds
  41e5c4:	call   0xbe2:0xa45b474e
  41e5cb:	push   es
  41e5cc:	fbstp  TBYTE PTR [eax-0x5b653670]
  41e5d3:	test   BYTE PTR [edi+0x16],dh
  41e5d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e5d7:	mov    edi,0xec7312a9
  41e5dc:	dec    edi
  41e5dd:	cmp    eax,0xa71d28cc
  41e5e2:	(bad)  
  41e5e4:	cmp    bh,BYTE PTR [ebp+0x1e0ab440]
  41e5ea:	out    0xd1,eax
  41e5ec:	or     bh,BYTE PTR [ebp+0x5c2abaa]
  41e5f2:	rol    edx,1
  41e5f4:	mov    es,WORD PTR [edx]
  41e5f6:	jnp    0x41e596
  41e5f8:	fs retf 0x4c43
  41e5fc:	out    0x7,al
  41e5fe:	push   edi
  41e600:	inc    ecx
  41e601:	test   BYTE PTR [ebx],bl
  41e603:	out    dx,al
  41e604:	aaa    
  41e605:	jo     0x41e616
  41e607:	cmp    al,0xa3
  41e609:	sub    ebp,DWORD PTR [bp+si-0x1a]
  41e60d:	mov    BYTE PTR [eax-0x62],0x77
  41e611:	fisubr DWORD PTR ds:[esi-0x251a8552]
  41e618:	jle    0x41e607
  41e61a:	xchg   esi,eax
  41e61b:	cmp    esp,DWORD PTR [eax+0x69]
  41e61e:	xlat   BYTE PTR ds:[ebx]
  41e61f:	outs   dx,DWORD PTR ds:[esi]
  41e620:	stos   BYTE PTR es:[edi],al
  41e621:	ja     0x41e5c6
  41e623:	add    DWORD PTR [edi-0x3cb8c358],ecx
  41e629:	mov    BYTE PTR [ebx+ecx*8-0x2e],al
  41e62d:	aam    0xb
  41e62f:	repnz cmp esi,DWORD PTR [eax-0x4e]
  41e633:	psrld  mm7,QWORD PTR [eax+ecx*2-0x69fc8ef7]
  41e63b:	clc    
  41e63c:	aad    0x7b
  41e63e:	jmp    0xd14992bf
  41e643:	ror    edi,cl
  41e645:	adc    ebp,DWORD PTR [eax-0x55e36ea7]
  41e64b:	gs ins DWORD PTR es:[edi],dx
  41e64d:	push   edi
  41e64e:	and    eax,0x5a398bbd
  41e653:	or     eax,0x781a0c3d
  41e658:	popf   
  41e659:	stos   DWORD PTR es:[di],eax
  41e65b:	mov    dh,BYTE PTR [esi+0x11]
  41e65e:	outs   dx,DWORD PTR ds:[esi]
  41e65f:	test   DWORD PTR [esi+ebx*8+0x58],ebp
  41e663:	and    ah,ah
  41e665:	test   ch,bh
  41e667:	xchg   esi,eax
  41e668:	in     al,0xec
  41e66a:	add    BYTE PTR [ebx+eax*2-0xd],0x46
  41e66f:	xlat   BYTE PTR ds:[ebx]
  41e670:	xchg   esi,eax
  41e671:	inc    esp
  41e672:	push   ds
  41e673:	sbb    DWORD PTR [ebp+edi*1+0x2fa5715],edx
  41e67a:	int    0xe7
  41e67c:	inc    edi
  41e67d:	xor    al,0x83
  41e67f:	or     edi,DWORD PTR [edx-0x5a8c5a59]
  41e685:	shl    DWORD PTR [edx],0xf3
  41e688:	xor    bl,al
  41e68a:	fbstp  TBYTE PTR [edi]
  41e68c:	imul   ebp,esi,0xe8732c60
  41e692:	pop    ebp
  41e693:	pusha  
  41e694:	(bad)  
  41e695:	xchg   esp,eax
  41e696:	pop    ss
  41e697:	loopne 0x41e648
  41e699:	push   cs
  41e69a:	and    BYTE PTR [edx-0x77b79197],ch
  41e6a0:	pop    edi
  41e6a1:	add    eax,DWORD PTR ss:[eax]
  41e6a4:	pushf  
  41e6a5:	adc    eax,0xe2aa22c9
  41e6aa:	aam    0x9f
  41e6ac:	and    al,0x68
  41e6ae:	aad    0x70
  41e6b0:	sti    
  41e6b1:	jg     0x41e71b
  41e6b3:	fidiv  DWORD PTR [esi+edi*2+0x7fccf09b]
  41e6ba:	int3   
  41e6bb:	pop    esi
  41e6bc:	lods   al,BYTE PTR ds:[esi]
  41e6bd:	add    al,BYTE PTR [eax-0x398f0751]
  41e6c3:	and    ah,BYTE PTR [ecx]
  41e6c5:	cdq    
  41e6c6:	outs   dx,DWORD PTR ds:[esi]
  41e6c7:	iret   
  41e6c8:	arpl   sp,si
  41e6ca:	sub    al,0x15
  41e6cc:	fbstp  TBYTE PTR [edi]
  41e6ce:	call   0x54c3d3f8
  41e6d3:	icebp  
  41e6d4:	test   al,0x27
  41e6d6:	ins    DWORD PTR es:[edi],dx
  41e6d7:	jnp    0x41e694
  41e6d9:	mov    ah,0x4e
  41e6db:	aam    0xe1
  41e6dd:	arpl   WORD PTR [edi],ax
  41e6df:	mov    ah,0x6d
  41e6e1:	adc    al,0x7a
  41e6e3:	rcl    ecx,cl
  41e6e5:	xor    esp,DWORD PTR [eax+ebp*1]
  41e6e8:	mov    WORD PTR [eax],?
  41e6ea:	adc    ecx,DWORD PTR [ebx+0x7b909f6]
  41e6f0:	out    dx,eax
  41e6f1:	ds (bad) 
  41e6f3:	stc    
  41e6f4:	out    dx,eax
  41e6f5:	lods   al,BYTE PTR ds:[esi]
  41e6f6:	out    dx,eax
  41e6f7:	ins    DWORD PTR es:[edi],dx
  41e6f8:	xor    DWORD PTR [ecx+0x79],ebx
  41e6fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e6fc:	and    ebp,DWORD PTR [ebx+0x1582bb23]
  41e702:	sub    al,BYTE PTR [edi-0x411a3183]
  41e708:	addr16 pop edi
  41e70a:	adc    DWORD PTR [edi-0x77],esi
  41e70d:	mov    esi,0xc3948dbc
  41e712:	mov    esp,0x39bd8141
  41e717:	fs call 0x8cbb:0xa51799b4
  41e71f:	dec    esp
  41e720:	cli    
  41e721:	loopne 0x41e6cb
  41e723:	clc    
  41e724:	mov    WORD PTR ds:0xb643509b,?
  41e72a:	or     DWORD PTR [edi],esp
  41e72c:	dec    esi
  41e72d:	fsubp  st(6),st
  41e72f:	adc    DWORD PTR [edx-0x2181fc8f],ecx
  41e735:	(bad)  
  41e736:	(bad)  
  41e737:	shl    DWORD PTR [esi+eiz*4-0x607e6877],cl
  41e73e:	jg     0x41e722
  41e740:	sub    bh,BYTE PTR [edi+0x6c2f6ebd]
  41e746:	scas   al,BYTE PTR es:[edi]
  41e747:	bound  edx,QWORD PTR [esi-0x69]
  41e74a:	fiadd  DWORD PTR [ebp-0x5cd340c1]
  41e750:	mov    bh,0xb2
  41e752:	lahf   
  41e753:	lods   eax,DWORD PTR ds:[esi]
  41e754:	cdq    
  41e755:	in     al,0x66
  41e757:	js     0x41e75d
  41e759:	rdtsc  
  41e75b:	or     ebx,ebx
  41e75d:	aam    0x2e
  41e75f:	je     0x41e776
  41e761:	imul   esp,DWORD PTR [ecx+0x8c1fec5],0xe80714e8
  41e76b:	and    esi,ebp
  41e76d:	or     BYTE PTR [eax],dh
  41e76f:	pop    ebx
  41e770:	ffree  st(0)
  41e772:	add    al,0x48
  41e774:	je     0x41e735
  41e776:	lds    ebp,FWORD PTR [ebp+0x6e]
  41e779:	pop    ds
  41e77a:	imul   ecx,DWORD PTR [eax],0x73
  41e77d:	mov    ecx,0xd0d46562
  41e782:	add    eax,DWORD PTR [ecx-0x795385c7]
  41e788:	adc    al,0x3c
  41e78a:	ret    
  41e78b:	mov    al,ds:0xafff3b24
  41e790:	mov    ah,0x94
  41e792:	dec    ecx
  41e793:	add    bl,BYTE PTR ds:0x53751af6
  41e799:	cs mov bh,0x84
  41e79c:	add    BYTE PTR [edx],cl
  41e79e:	test   al,0xf
  41e7a0:	call   0x1a26839d
  41e7a5:	fwait
  41e7a6:	jo     0x41e7fe
  41e7a8:	and    BYTE PTR [ecx+ebp*1-0x68],bh
  41e7ac:	int    0x2e
  41e7ae:	aaa    
  41e7af:	cmp    BYTE PTR [edi-0x5],ch
  41e7b2:	mov    esp,0x67b4db45
  41e7b7:	shr    BYTE PTR [esi],cl
  41e7b9:	gs js  0x41e74c
  41e7bc:	into   
  41e7bd:	adc    dh,cl
  41e7bf:	sub    eax,0x1ba47d7a
  41e7c4:	daa    
  41e7c5:	bound  ecx,QWORD PTR [esp+esi*2+0x5c67a14]
  41e7cc:	mov    eax,ds:0x5d492533
  41e7d1:	cmc    
  41e7d2:	mov    dl,0xa5
  41e7d4:	pop    ecx
  41e7d5:	push   0x155b22e8
  41e7da:	nop
  41e7db:	ins    BYTE PTR es:[edi],dx
  41e7dc:	inc    edx
  41e7dd:	xlat   BYTE PTR ds:[ebx]
  41e7de:	jne    0x41e816
  41e7e0:	mov    al,ds:0x274d3e1e
  41e7e5:	test   BYTE PTR [edx-0x5ea07161],ch
  41e7eb:	add    bl,ah
  41e7ed:	xchg   esi,eax
  41e7ee:	je     0x41e852
  41e7f0:	xor    dl,BYTE PTR [edi]
  41e7f2:	and    edi,esi
  41e7f4:	rcr    ebx,0x17
  41e7f7:	or     al,0xb6
  41e7f9:	xlat   BYTE PTR ds:[ebx]
  41e7fa:	iret   
  41e7fb:	mov    ch,0x9c
  41e7fd:	sub    ebp,DWORD PTR [ebp+0x1fd23aed]
  41e803:	sub    ah,cl
  41e805:	adc    eax,0xf9da125a
  41e80a:	retf   0x7ce7
  41e80d:	(bad)  
  41e80e:	and    BYTE PTR [ebx+0x3c],bl
  41e811:	adc    cl,BYTE PTR [ecx]
  41e813:	mov    ss,WORD PTR ds:[esi-0x162c3cce]
  41e81a:	into   
  41e81b:	mov    ch,0x1
  41e81d:	push   ebp
  41e81e:	lods   al,BYTE PTR ds:[esi]
  41e81f:	cmp    bl,dh
  41e821:	push   es
  41e822:	push   esp
  41e823:	mul    DWORD PTR [ebx]
  41e825:	(bad)  
  41e826:	imul   ebp,DWORD PTR [ebp+0x14],0x31
  41e82a:	inc    ebx
  41e82b:	(bad)  
  41e82c:	sti    
  41e82d:	out    0x3a,al
  41e82f:	push   edx
  41e830:	imul   edi,DWORD PTR [edx+0x34],0xffffffca
  41e834:	jb     0x41e7ea
  41e836:	leave  
  41e837:	inc    eax
  41e838:	mov    es,WORD PTR [esi+0x15]
  41e83b:	icebp  
  41e83c:	sub    edi,esp
  41e83e:	add    BYTE PTR [ebx+0x73],cl
  41e841:	xchg   DWORD PTR [ebx+0x16],esi
  41e844:	fwait
  41e845:	ds leave 
  41e847:	push   cs
  41e848:	inc    edi
  41e849:	inc    esp
  41e84a:	xor    BYTE PTR [edi+0x5a56c3fb],dl
  41e850:	cmp    bh,dh
  41e852:	test   BYTE PTR [ebp-0x11],0xbb
  41e856:	pusha  
  41e857:	hlt    
  41e858:	add    eax,0xc77d79d0
  41e85d:	data16 loope 0x41e815
  41e860:	sbb    esi,esp
  41e862:	mov    cl,0xf1
  41e864:	cmp    DWORD PTR [esi-0x26e27183],ebx
  41e86a:	mov    WORD PTR [ecx-0x794e4e52],es
  41e870:	jnp    0x41e828
  41e872:	adc    DWORD PTR [ebp+0x14ffb522],ebx
  41e878:	sub    bl,BYTE PTR [ecx+0x35eca5b]
  41e87e:	jno    0x41e875
  41e880:	cdq    
  41e881:	int3   
  41e882:	pop    eax
  41e883:	mov    cl,0x64
  41e885:	out    dx,al
  41e886:	add    al,bl
  41e888:	inc    ebp
  41e889:	jle    0x41e8d5
  41e88b:	xor    bl,BYTE PTR [edx+0x66]
  41e88e:	adc    BYTE PTR [edx+eiz*2],dl
  41e891:	and    DWORD PTR [eax+0x3],edx
  41e894:	xchg   esp,edx
  41e896:	add    BYTE PTR [ebx-0x7a0aaa1f],dh
  41e89c:	aad    0x2a
  41e89e:	xchg   ecx,eax
  41e89f:	mov    DWORD PTR ds:0x9af35e3d,eax
  41e8a5:	clc    
  41e8a6:	aad    0x64
  41e8a8:	adc    ch,BYTE PTR ds:0x457d6491
  41e8ae:	mov    esi,0xc34a705b
  41e8b3:	loopne 0x41e8e5
  41e8b5:	arpl   WORD PTR [eax+0x57434ef4],ax
  41e8bb:	in     eax,dx
  41e8bc:	fwait
  41e8bd:	add    al,0x68
  41e8bf:	rol    bl,cl
  41e8c1:	dec    esp
  41e8c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e8c3:	repz and bh,BYTE PTR [esi-0x12d2f340]
  41e8ca:	or     ebp,ebx
  41e8cc:	adc    edx,DWORD PTR [edx]
  41e8ce:	into   
  41e8cf:	in     eax,dx
  41e8d0:	ret    
  41e8d1:	lock (bad) 
  41e8d3:	loopne 0x41e940
  41e8d5:	inc    ecx
  41e8d6:	dec    eax
  41e8d7:	es adc al,0x19
  41e8da:	dec    esp
  41e8db:	mov    ecx,0x37988652
  41e8e0:	push   0x5f48a891
  41e8e5:	adc    eax,0x61652b41
  41e8ea:	retf   
  41e8eb:	jmp    0x59f0b0e3
  41e8f0:	aas    
  41e8f1:	in     al,0x2f
  41e8f3:	leave  
  41e8f4:	outs   dx,DWORD PTR ds:[esi]
  41e8f5:	sti    
  41e8f6:	mov    al,ss:0x96940f63
  41e8fc:	add    BYTE PTR [eax],al
  41e8fe:	add    BYTE PTR [eax],al
  41e900:	add    BYTE PTR [eax],al
  41e902:	jg     0x41e97c
  41e904:	mov    ecx,0xffd5bf55
  41e909:	jp     0x41e931
  41e90b:	ret    0x676d
  41e90e:	mov    esi,0xe3d4ed63
  41e913:	arpl   WORD PTR [ecx],ax
  41e915:	add    dl,dh
  41e917:	add    al,0x0
  41e919:	add    BYTE PTR [ebx+0x1edcc42b],ch
  41e91f:	cmc    
  41e920:	push   es
  41e921:	or     dl,cl
  41e923:	push   0xffffff90
  41e925:	mov    ebp,0x8a1b438c
  41e92a:	leave  
  41e92b:	je     0x41e910
  41e92d:	push   ebp
  41e92e:	pop    ss
  41e92f:	pusha  
  41e930:	sub    BYTE PTR [esi],ch
  41e932:	retf   0x2025
  41e935:	aam    0x1a
  41e937:	(bad)  
  41e938:	mov    ebp,es
  41e93a:	or     eax,0x5309851
  41e93f:	pop    ebx
  41e940:	jle    0x41e8e4
  41e942:	sub    dl,dh
  41e944:	inc    esi
  41e945:	xor    BYTE PTR [ebx],ah
  41e947:	sbb    DWORD PTR [eax-0x5c355392],ecx
  41e94d:	and    cl,cl
  41e94f:	sbb    dh,BYTE PTR [ebp+0x39749629]
  41e955:	mov    dl,dl
  41e957:	es (bad) 
  41e959:	push   ebp
  41e95a:	mov    ebx,0x24569547
  41e95f:	jle    0x41e94a
  41e961:	jno    0x41e8e8
  41e963:	adc    edx,edx
  41e965:	retf   0x7ed6
  41e968:	cmp    DWORD PTR [ebp-0x6a91c1e7],ebp
  41e96e:	ret    0xb6c5
  41e971:	pop    DWORD PTR ds:0x9b20ac6f
  41e977:	mov    edx,0xe3058aca
  41e97c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e97d:	add    eax,0xfc467ccd
  41e982:	hlt    
  41e983:	jbe    0x41e9e1
  41e985:	add    al,0x64
  41e987:	imul   esp,DWORD PTR [ebx+0x2c],0x31
  41e98b:	cli    
  41e98c:	stos   DWORD PTR es:[edi],eax
  41e98d:	mov    edi,0xec3a1b36
  41e992:	adc    DWORD PTR es:[esi+0x40],ecx
  41e996:	es xchg ebp,eax
  41e998:	cmp    edi,DWORD PTR [ebx+0x64]
  41e99b:	dec    esp
  41e99c:	loope  0x41e9cd
  41e99e:	push   0xfffffff6
  41e9a0:	aad    0x5f
  41e9a2:	and    DWORD PTR [edx],edi
  41e9a4:	mov    al,0xdb
  41e9a6:	or     BYTE PTR [esi+0x0],al
  41e9a9:	std    
  41e9aa:	out    dx,eax
  41e9ab:	and    ebp,DWORD PTR [eax-0x37f8c6ea]
  41e9b1:	and    eax,0x48db11b4
  41e9b6:	cwde   
  41e9b7:	sar    DWORD PTR [ebx],cl
  41e9b9:	xchg   edx,eax
  41e9ba:	les    ebx,FWORD PTR [esi-0x245e7d55]
  41e9c0:	int3   
  41e9c1:	jae    0x41ea3f
  41e9c3:	push   edi
  41e9c4:	in     al,dx
  41e9c5:	inc    cx
  41e9c7:	mov    ah,0x1b
  41e9c9:	in     al,dx
  41e9ca:	lahf   
  41e9cb:	test   DWORD PTR [edi+0x35dcd47b],0x812f1b6c
  41e9d5:	repz fidivr DWORD PTR [edx+edx*8-0x3b0dbaa1]
  41e9dd:	add    dl,ch
  41e9df:	push   edx
  41e9e0:	hlt    
  41e9e1:	sbb    eax,0xcb648118
  41e9e6:	mov    esi,0xcb50956b
  41e9eb:	add    DWORD PTR [eax],ebp
  41e9ed:	in     eax,dx
  41e9ee:	push   edx
  41e9ef:	aas    
  41e9f0:	call   0xcd5a422
  41e9f5:	in     eax,0x9f
  41e9f7:	icebp  
  41e9f8:	inc    ebx
  41e9f9:	push   ebp
  41e9fa:	mov    cl,0x76
  41e9fc:	mov    esp,0x64585ec8
  41ea01:	inc    ebp
  41ea02:	test   BYTE PTR [edi+0x707b1d67],dh
  41ea08:	xor    DWORD PTR [eax+0x55],esp
  41ea0b:	jl     0x41ea4b
  41ea0d:	add    bx,dx
  41ea10:	push   ss
  41ea11:	pusha  
  41ea12:	das    
  41ea13:	int3   
  41ea14:	push   es
  41ea15:	dec    ebp
  41ea16:	xchg   esp,eax
  41ea17:	rdtsc  
  41ea19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ea1a:	iret   
  41ea1b:	adc    bh,BYTE PTR [edi+ebp*4-0x119c4d18]
  41ea22:	push   ebp
  41ea23:	cmp    eax,0xe1ad96e5
  41ea28:	sbb    DWORD PTR [eax+edi*4],ebx
  41ea2b:	sub    al,0xe5
  41ea2d:	aad    0x8e
  41ea2f:	les    edi,FWORD PTR [esi-0x3b]
  41ea32:	mov    WORD PTR [edi],ds
  41ea34:	mov    dl,bh
  41ea36:	mov    edi,0x1016f9df
  41ea3b:	lock retf 0xae68
  41ea3f:	(bad)  
  41ea40:	es pop es
  41ea42:	mov    al,0xa4
  41ea44:	pop    edx
  41ea45:	repnz sub eax,0xa0eb962c
  41ea4b:	sbb    DWORD PTR [esi+0x6bec0c12],0x83d48b4
  41ea55:	imul   ebp,DWORD PTR [ebp-0x3b],0xea46070b
  41ea5c:	gs push ebp
  41ea5e:	jecxz  0x41ea8f
  41ea60:	and    al,0xbd
  41ea62:	sbb    esp,DWORD PTR [edi-0x7e]
  41ea65:	sahf   
  41ea66:	sbb    DWORD PTR [ecx],eax
  41ea68:	adc    ebp,esi
  41ea6a:	push   ss
  41ea6b:	and    ecx,ebx
  41ea6d:	imul   ebx,DWORD PTR [ebp-0x51],0xffffffa1
  41ea71:	test   eax,0x330fc850
  41ea76:	stc    
  41ea77:	sti    
  41ea78:	pop    esp
  41ea79:	adc    bl,BYTE PTR [ebp+0x13]
  41ea7c:	ja     0x41ea31
  41ea7e:	jb     0x41ead2
  41ea80:	call   FWORD PTR [edi+0x6d]
  41ea83:	and    edi,edi
  41ea85:	ss mov bh,0x46
  41ea88:	jl     0x41ea63
  41ea8a:	ret    
  41ea8b:	xchg   edi,eax
  41ea8c:	xor    eax,0x3ae19c69
  41ea91:	add    DWORD PTR [esi-0x5af1fc77],ebp
  41ea97:	push   ds
  41ea98:	push   esp
  41ea99:	psubsw mm5,QWORD PTR [edx-0x9]
  41ea9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ea9e:	int    0xaa
  41eaa0:	xchg   sp,ax
  41eaa2:	xor    eax,0x942758a7
  41eaa7:	leave  
  41eaa8:	shr    eax,1
  41eaaa:	adc    edi,ecx
  41eaac:	pop    edi
  41eaad:	jecxz  0x41ea68
  41eaaf:	jae    0x41ea42
  41eab1:	jne    0x41ea4a
  41eab3:	cmp    ebx,ebp
  41eab5:	xchg   esp,eax
  41eab6:	jnp    0x41ea38
  41eab8:	cmp    cl,BYTE PTR [ecx]
  41eaba:	xor    DWORD PTR [edx+ebp*2+0xff7734f],ecx
  41eac1:	dec    esp
  41eac2:	(bad)  
  41eac3:	ins    BYTE PTR es:[edi],dx
  41eac4:	xchg   esi,eax
  41eac5:	xchg   BYTE PTR [edx],ah
  41eac7:	in     al,0x7d
  41eac9:	dec    edx
  41eaca:	xor    BYTE PTR [edi],ah
  41eacc:	and    BYTE PTR [esi+0x4a259747],al
  41ead2:	pushf  
  41ead3:	cmc    
  41ead4:	je     0x41eb1c
  41ead6:	iret   
  41ead7:	dec    ebp
  41ead8:	push   esi
  41ead9:	jmp    0xc0b40cae
  41eade:	mov    eax,ds:0xc8dfca7a
  41eae3:	jmp    0x72867d6a
  41eae8:	cld    
  41eae9:	stc    
  41eaea:	fnstcw WORD PTR [edi+0xc0c25fa]
  41eaf0:	ja     0x41ea81
  41eaf2:	pop    ecx
  41eaf3:	pop    ss
  41eaf4:	sub    al,0x4a
  41eaf6:	lds    ecx,FWORD PTR [edx+0x1ab3286e]
  41eafc:	in     eax,dx
  41eafd:	call   DWORD PTR [esi-0x40]
  41eb00:	sub    DWORD PTR [ecx+edi*1],edx
  41eb03:	adc    eax,0xe7b300f9
  41eb08:	pop    edx
  41eb09:	(bad)  
  41eb0a:	inc    eax
  41eb0b:	mov    dh,BYTE PTR [ebx+ecx*8+0x42]
  41eb0f:	add    BYTE PTR [ecx-0x62],0x50
  41eb13:	(bad)  
  41eb14:	fadd   DWORD PTR [esi-0x2f]
  41eb17:	mov    esi,0xa661fff7
  41eb1c:	xor    DWORD PTR [edi-0x5babc5d1],ebx
  41eb22:	and    BYTE PTR [ecx+0x12d9a489],bl
  41eb28:	das    
  41eb29:	shl    BYTE PTR [edx],0xfc
  41eb2c:	repz or dh,bl
  41eb2f:	out    0x54,al
  41eb31:	fistp  WORD PTR [esi-0x6a]
  41eb34:	clc    
  41eb35:	mov    eax,0x70ced43b
  41eb3a:	(bad)  
  41eb3b:	and    esp,DWORD PTR [edx+0x3e]
  41eb3e:	cmp    bl,BYTE PTR [ebp+0x28]
  41eb41:	cli    
  41eb42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eb43:	mov    ch,BYTE PTR [esi+0x5f]
  41eb46:	gs (bad) 
  41eb49:	pop    esp
  41eb4a:	push   es
  41eb4b:	ins    BYTE PTR es:[edi],dx
  41eb4c:	out    0xf8,eax
  41eb4e:	inc    ebp
  41eb4f:	sbb    al,0xaa
  41eb51:	mov    ds:0x3498cea2,eax
  41eb56:	push   ebp
  41eb57:	or     al,0xe7
  41eb59:	clc    
  41eb5a:	stos   BYTE PTR es:[edi],al
  41eb5b:	pushf  
  41eb5c:	jnp    0x41eb4e
  41eb5e:	fidivr DWORD PTR [edi+0x6b270cbf]
  41eb64:	sub    eax,0x4506a447
  41eb69:	pop    ebx
  41eb6a:	dec    eax
  41eb6b:	xchg   edi,eax
  41eb6c:	pop    edi
  41eb6d:	dec    edx
  41eb6e:	bound  eax,QWORD PTR [eax-0x7cc459f7]
  41eb74:	(bad)  
  41eb75:	call   0x9f1e:0x423853a
  41eb7c:	rol    BYTE PTR [edx+0x66],0x66
  41eb80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eb81:	loopne 0x41ebbf
  41eb83:	enter  0x799d,0xd9
  41eb87:	xor    edx,edx
  41eb89:	adc    BYTE PTR [ebx+eiz*1-0x28],ch
  41eb8d:	retf   0xd66b
  41eb90:	adc    al,0x86
  41eb92:	scas   al,BYTE PTR es:[edi]
  41eb93:	daa    
  41eb94:	add    BYTE PTR [ecx+0x5],0x84
  41eb98:	mov    eax,0xbb1c1a21
  41eb9d:	fidivr WORD PTR [edi-0x39190dee]
  41eba3:	mov    ecx,0xde0a7eac
  41eba8:	xor    eax,0xd8de5cd4
  41ebad:	imul   edx,edx,0x38a2e174
  41ebb3:	adc    ebp,DWORD PTR [eax]
  41ebb5:	inc    eax
  41ebb6:	aas    
  41ebb7:	mov    ecx,0x5b11e195
  41ebbc:	sbb    al,0x7a
  41ebbe:	xchg   DWORD PTR [esp+ecx*4+0xa2af024],ebp
  41ebc5:	shl    DWORD PTR [edx-0x75],cl
  41ebc8:	shl    BYTE PTR [eax],1
  41ebca:	test   al,0xb9
  41ebcc:	xchg   edx,eax
  41ebcd:	dec    ebp
  41ebce:	xchg   esp,eax
  41ebcf:	cmp    BYTE PTR [ecx],ch
  41ebd1:	ret    0x734e
  41ebd4:	xor    ch,BYTE PTR [ecx-0x22]
  41ebd7:	and    ah,BYTE PTR [ecx+ebp*4+0x52]
  41ebdb:	repnz sub cl,BYTE PTR [ebp+0x1c]
  41ebdf:	imul   esp,DWORD PTR [eax-0xe],0xffffffc0
  41ebe3:	add    DWORD PTR [ebx],0xffffff81
  41ebe6:	dec    ebx
  41ebe7:	mov    WORD PTR [ebp-0x11],ss
  41ebea:	jp     0x41eb92
  41ebec:	nop
  41ebed:	fisub  WORD PTR [ecx+eax*4-0x6ef54228]
  41ebf4:	fnstenv [edi-0x1a]
  41ebf7:	mov    bl,0x4e
  41ebf9:	adc    DWORD PTR [eax+0x683b82ce],esi
  41ebff:	jmp    0xa5f:0xb4133ee6
  41ec06:	cli    
  41ec07:	mov    al,ds:0xdf4c4e8c
  41ec0c:	js     0x41eba0
  41ec0e:	push   esp
  41ec0f:	(bad)  
  41ec12:	in     eax,0xe5
  41ec14:	fwait
  41ec15:	jecxz  0x41ebfa
  41ec17:	xchg   esi,eax
  41ec18:	sbb    BYTE PTR [esi+0x147807c4],bh
  41ec1e:	mov    dl,0xd1
  41ec20:	xor    ch,BYTE PTR [eax-0x37d424bc]
  41ec26:	stc    
  41ec27:	inc    esp
  41ec28:	cmp    ah,BYTE PTR [ebx-0x1]
  41ec2b:	pop    esp
  41ec2c:	fdivr  st(4),st
  41ec2e:	popa   
  41ec2f:	sbb    DWORD PTR [ecx+0x49],esi
  41ec32:	repz xor ecx,DWORD PTR [esi-0x7ffe95be]
  41ec39:	mov    fs,ebx
  41ec3b:	mov    ebx,0x798ad8ca
  41ec40:	and    eax,0x92dbbdf0
  41ec45:	cmp    ah,0x7
  41ec48:	imul   eax,ebp,0xffffffa3
  41ec4b:	imul   esp,DWORD PTR [ebp-0x42],0x47
  41ec4f:	mov    dh,0xae
  41ec51:	outs   dx,BYTE PTR ds:[esi]
  41ec52:	pop    esp
  41ec53:	inc    ecx
  41ec54:	outs   dx,BYTE PTR ds:[esi]
  41ec55:	push   ebp
  41ec56:	adc    cl,ch
  41ec58:	inc    eax
  41ec59:	fist   DWORD PTR [ebp+0x463313c0]
  41ec5f:	xor    ch,dl
  41ec61:	jb     0x41ece0
  41ec63:	(bad)  
  41ec64:	mov    ch,0xfb
  41ec66:	mov    WORD PTR [edx+esi*1-0x7a],ds
  41ec6a:	leave  
  41ec6b:	ja     0x41ec2a
  41ec6d:	nop
  41ec6e:	lods   eax,DWORD PTR ds:[esi]
  41ec6f:	inc    edi
  41ec70:	cld    
  41ec71:	(bad)  [ecx-0x3]
  41ec74:	loopne 0x41ebfa
  41ec76:	clc    
  41ec77:	jge    0x41ec29
  41ec79:	imul   edi,DWORD PTR [ebp+0x25],0xffffffcf
  41ec7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ec7e:	fidivr DWORD PTR [ebp+0x47]
  41ec81:	les    edx,FWORD PTR [edi+ebx*4-0x3e0d7722]
  41ec88:	arpl   WORD PTR [edx+edi*2],ax
  41ec8b:	lods   eax,DWORD PTR es:[esi]
  41ec8d:	lock std 
  41ec8f:	inc    ebx
  41ec90:	out    0xc8,al
  41ec92:	pop    ss
  41ec93:	mov    WORD PTR [edi+0x7c1b15a],?
  41ec99:	into   
  41ec9a:	in     al,0x38
  41ec9c:	xor    BYTE PTR [edx],ch
  41ec9e:	cld    
  41ec9f:	adc    eax,edx
  41eca1:	pop    ds
  41eca2:	mov    ebx,0xd8965fff
  41eca7:	inc    esp
  41eca8:	jl     0x41eccc
  41ecaa:	or     ecx,DWORD PTR [eax-0x61e89893]
  41ecb0:	mov    sp,0xc6c
  41ecb4:	push   edi
  41ecb5:	xchg   ecx,eax
  41ecb6:	shl    BYTE PTR [ebp-0x50d125df],1
  41ecbc:	adc    DWORD PTR ds:0x674ecf03,edi
  41ecc2:	add    al,dl
  41ecc4:	mov    cs,edx
  41ecc6:	add    al,0x25
  41ecc8:	mov    ch,0x8a
  41ecca:	dec    esp
  41eccb:	sub    edx,DWORD PTR [esi-0x427a48a0]
  41ecd1:	adc    DWORD PTR [ecx-0x5d0c02c0],0xaa57fdf9
  41ecdb:	jmp    0x3e16173c
  41ece0:	xor    al,0xf9
  41ece2:	adc    DWORD PTR [edx-0x1671928],edx
  41ece8:	ror    BYTE PTR [ecx-0x12],0x9c
  41ecec:	scas   al,BYTE PTR es:[edi]
  41eced:	dec    edx
  41ecee:	test   DWORD PTR [edi],esi
  41ecf0:	cs add eax,0x5f25fd66
  41ecf6:	cli    
  41ecf7:	push   edx
  41ecf8:	(bad)  
  41ecf9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ecfa:	mov    dh,0xb1
  41ecfc:	xlat   BYTE PTR ds:[ebx]
  41ecfd:	cdq    
  41ecfe:	or     eax,0x8e1dbb05
  41ed03:	add    ch,BYTE PTR [eax-0x2321590c]
  41ed09:	xchg   esp,eax
  41ed0a:	jae    0x41ed27
  41ed0c:	jg     0x41ed6c
  41ed0e:	mov    dh,0x29
  41ed10:	inc    edi
  41ed11:	into   
  41ed12:	jnp    0x41ecae
  41ed14:	dec    edi
  41ed15:	das    
  41ed16:	mov    dl,0xa3
  41ed18:	lods   al,BYTE PTR ds:[esi]
  41ed19:	out    0x14,al
  41ed1b:	das    
  41ed1c:	stos   BYTE PTR es:[edi],al
  41ed1d:	fst    QWORD PTR [edi]
  41ed1f:	stc    
  41ed20:	push   edi
  41ed21:	dec    esp
  41ed22:	mov    edi,0x2d00e50e
  41ed27:	inc    esi
  41ed28:	push   ecx
  41ed29:	mov    ds:0x7baacfe1,eax
  41ed2e:	cdq    
  41ed2f:	ror    BYTE PTR [ecx],cl
  41ed31:	push   edx
  41ed32:	dec    eax
  41ed33:	fidiv  DWORD PTR [esi]
  41ed35:	add    BYTE PTR [eax+0x33],cl
  41ed38:	(bad)  
  41ed39:	and    ah,BYTE PTR [ebp-0x10]
  41ed3c:	ins    BYTE PTR es:[edi],dx
  41ed3d:	out    dx,eax
  41ed3e:	mov    esp,0x27b2778c
  41ed43:	ja     0x41ed5c
  41ed45:	add    al,0xd9
  41ed47:	fwait
  41ed48:	push   ds
  41ed49:	jmp    0x41ed1d
  41ed4b:	shl    DWORD PTR [edx-0x2b],1
  41ed4e:	push   0x27
  41ed50:	pop    edi
  41ed51:	stc    
  41ed52:	push   ds
  41ed53:	js     0x41ed51
  41ed55:	push   ecx
  41ed56:	add    eax,0xefabb13c
  41ed5b:	ja     0x41ecf3
  41ed5d:	mov    bh,0x9
  41ed5f:	test   DWORD PTR [ecx],0xfc2fcbe7
  41ed65:	fcmovb st,st(4)
  41ed67:	jle    0x41ed88
  41ed69:	jne    0x41ed42
  41ed6b:	and    ebp,DWORD PTR [edx+0x5a]
  41ed6e:	mov    eax,0x1dd8a36b
  41ed73:	sbb    BYTE PTR [esi+0x20],ah
  41ed76:	out    0x33,eax
  41ed78:	sub    edi,DWORD PTR [ebx]
  41ed7a:	pushf  
  41ed7b:	fldcw  WORD PTR [ebx+edx*4+0x75a8a4af]
  41ed82:	sub    al,0xab
  41ed84:	and    DWORD PTR [edx+0x73],esp
  41ed87:	fldenv [edi-0x6b67bb62]
  41ed8d:	sbb    DWORD PTR [ebx],ebx
  41ed8f:	sar    BYTE PTR [ecx-0x7d],cl
  41ed92:	xchg   esi,eax
  41ed93:	xchg   edx,eax
  41ed94:	nop
  41ed95:	and    eax,esi
  41ed97:	or     BYTE PTR [ecx+ebp*1-0x3e],al
  41ed9b:	mov    dh,0xf8
  41ed9d:	les    esp,FWORD PTR [esi+0x34]
  41eda0:	cmp    BYTE PTR [edx+0x3a],cl
  41eda3:	fnstsw WORD PTR [edi-0x3f7471ae]
  41eda9:	adc    DWORD PTR [ecx],eax
  41edab:	pop    eax
  41edac:	ret    
  41edad:	pusha  
  41edae:	pop    ss
  41edaf:	es (bad) 
  41edb1:	aas    
  41edb2:	(bad)  
  41edb3:	and    DWORD PTR [esi+0xbc41314],ebp
  41edb9:	mov    al,0x33
  41edbb:	sti    
  41edbc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41edbd:	shr    BYTE PTR [ebx+0x37ffaa8b],1
  41edc3:	and    al,0x6
  41edc5:	nop
  41edc6:	or     BYTE PTR [ebp-0x13],bh
  41edc9:	and    BYTE PTR [eax+0x1a],dh
  41edcc:	sub    eax,0xe09ae69d
  41edd1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41edd2:	fldcw  WORD PTR [edx+0x108f9627]
  41edd8:	ret    
  41edd9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41edda:	imul   ebx,DWORD PTR [ebx+ebp*4-0x42b2907d],0xffffff85
  41ede2:	daa    
  41ede3:	shr    DWORD PTR [ecx],0x7e
  41ede6:	jg     0x41edba
  41ede8:	les    ebp,FWORD PTR [eax+eiz*8-0x31]
  41edec:	mov    esp,0xf37ab6f2
  41edf1:	mov    eax,ds:0x69b11cb6
  41edf6:	int3   
  41edf7:	mov    edx,0x3051cc46
  41edfc:	push   eax
  41edfd:	ss sbb edx,ecx
  41ee00:	adc    eax,0xbe4de138
  41ee05:	sub    eax,0xf6784712
  41ee0a:	mov    al,0xdc
  41ee0c:	add    BYTE PTR [eax],al
  41ee0e:	add    BYTE PTR [eax],al
  41ee10:	add    BYTE PTR [eax],al
  41ee12:	push   edx
  41ee13:	push   ecx
  41ee14:	cmp    BYTE PTR [ebx],al
  41ee16:	cmp    ebp,DWORD PTR [ebx+0x7b]
  41ee19:	push   ecx
  41ee1a:	pop    edx
  41ee1b:	mov    ch,0xf5
  41ee1d:	lahf   
  41ee1e:	xor    DWORD PTR [edi+0x68d5f9a3],esp
  41ee24:	add    DWORD PTR [eax],eax
  41ee26:	repnz add al,0x0
  41ee29:	add    BYTE PTR [edi],bl
  41ee2b:	call   0x129da3bf
  41ee30:	mov    al,0xd2
  41ee32:	pop    ss
  41ee33:	jp     0x41ede6
  41ee35:	push   ecx
  41ee36:	jp     0x41edfe
  41ee38:	push   cs
  41ee39:	mov    eax,ds:0x8e465d13
  41ee3e:	mov    dl,0x1a
  41ee40:	fnstenv [esi]
  41ee42:	pop    edi
  41ee43:	inc    ecx
  41ee44:	and    al,0xf
  41ee46:	jnp    0x41edd3
  41ee48:	in     eax,dx
  41ee49:	jg     0x41eeb7
  41ee4b:	cdq    
  41ee4c:	test   edx,esi
  41ee4e:	lods   al,BYTE PTR ds:[esi]
  41ee4f:	or     DWORD PTR [ecx+0x2116530f],esi
  41ee55:	mov    dh,BYTE PTR [esi-0x5b302467]
  41ee5b:	push   eax
  41ee5c:	retf   0x2149
  41ee5f:	add    esp,DWORD PTR [eax+0x6f]
  41ee62:	mov    edi,0x844820ca
  41ee67:	mov    eax,ds:0xfcfc43e0
  41ee6c:	adc    al,0xe
  41ee6e:	cdq    
  41ee6f:	pushf  
  41ee70:	pop    edi
  41ee71:	mov    ch,0x2c
  41ee73:	sub    eax,0xf351962e
  41ee78:	mov    al,ds:0xe6627f0d
  41ee7d:	jo     0x41ee49
  41ee7f:	push   ds
  41ee80:	lds    eax,FWORD PTR [ecx-0x2a]
  41ee83:	sbb    eax,0xfafb2fe2
  41ee88:	and    esi,ebx
  41ee8a:	xchg   ecx,eax
  41ee8b:	cmc    
  41ee8c:	mov    ebp,0xd8398b6b
  41ee91:	ins    DWORD PTR es:[edi],dx
  41ee92:	pop    edi
  41ee93:	mov    ebp,0x7c0a1229
  41ee98:	sub    BYTE PTR [esi+0x7e0e5ef6],ch
  41ee9e:	test   al,0x8b
  41eea0:	js     0x41eea3
  41eea2:	clc    
  41eea3:	push   esp
  41eea4:	lock pop esi
  41eea6:	mov    ds:0x493760aa,al
  41eeab:	or     ebp,ebx
  41eead:	and    al,dl
  41eeaf:	push   ds
  41eeb0:	mov    ds:0x4f7d6786,al
  41eeb5:	xor    eax,DWORD PTR [edx-0x44bd7ebc]
  41eebb:	lahf   
  41eebc:	adc    BYTE PTR [edi+0x2c386dfc],0x30
  41eec3:	mov    DWORD PTR ds:0x4916ac03,eax
  41eec9:	pushf  
  41eeca:	xchg   edx,eax
  41eecb:	mov    eax,0x8425b255
  41eed0:	mov    dh,0xd8
  41eed2:	ror    BYTE PTR [esi-0x5a],0x5e
  41eed6:	stc    
  41eed7:	sub    DWORD PTR [esp+ecx*8+0x625fb947],ebx
  41eede:	test   al,0x54
  41eee0:	sub    BYTE PTR [edi-0x1e79e26a],dh
  41eee6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eee7:	das    
  41eee8:	test   DWORD PTR [eax+0x4788b507],esp
  41eeee:	test   al,0x41
  41eef0:	pop    es
  41eef1:	mov    bl,0x7b
  41eef3:	pcmpgtd mm3,QWORD PTR [ebx]
  41eef6:	test   DWORD PTR [eax+eiz*8-0x32],0x29d54460
  41eefe:	dec    ecx
  41eeff:	xor    BYTE PTR [ebx+0x1379ef2e],ah
  41ef05:	mov    WORD PTR [edx+0x6d86af7a],ds
  41ef0b:	bound  edi,QWORD PTR [eax+0x4a]
  41ef0e:	shl    BYTE PTR [ebp-0x5c],0x61
  41ef12:	or     esp,edx
  41ef14:	mov    dl,al
  41ef16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ef17:	sub    eax,0x4cb70376
  41ef1c:	push   es
  41ef1d:	inc    ebp
  41ef1e:	pop    es
  41ef1f:	fist   DWORD PTR [edi]
  41ef21:	in     al,0x33
  41ef23:	push   es
  41ef24:	mov    cl,0xa8
  41ef26:	xchg   edi,eax
  41ef27:	sub    ebp,DWORD PTR [edx-0x23111dd2]
  41ef2d:	je     0x41ef7c
  41ef2f:	push   ebx
  41ef30:	mov    ebx,0xae3e0d63
  41ef35:	sub    eax,0x32cc267
  41ef3a:	hlt    
  41ef3b:	add    cl,BYTE PTR [ebp+0x5e]
  41ef3e:	push   ecx
  41ef3f:	and    bh,bh
  41ef41:	push   ecx
  41ef42:	dec    ebx
  41ef43:	call   0xdc00:0x83c1bc4b
  41ef4a:	int3   
  41ef4b:	test   al,0x2a
  41ef4d:	sbb    BYTE PTR [ebx-0x310ebcbf],0xb9
  41ef54:	sbb    DWORD PTR gs:[edx],eax
  41ef57:	sub    bl,BYTE PTR [esi]
  41ef59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ef5a:	sbb    ebp,DWORD PTR [edx+ebp*1]
  41ef5d:	mov    dl,0x69
  41ef5f:	hlt    
  41ef60:	ins    BYTE PTR es:[edi],dx
  41ef61:	lock loopne 0x41ef62
  41ef64:	in     eax,dx
  41ef65:	add    dl,al
  41ef67:	jecxz  0x41efbc
  41ef69:	add    ebp,eax
  41ef6b:	in     eax,0x2c
  41ef6d:	mov    eax,ds:0xaf135968
  41ef72:	out    0x36,eax
  41ef74:	sub    BYTE PTR [edx+0x43],0x5c
  41ef78:	sbb    esp,edx
  41ef7a:	sub    DWORD PTR [esi-0x20bc2766],ebp
  41ef80:	push   es
  41ef81:	rcl    DWORD PTR [ebx-0xb],cl
  41ef84:	iret   
  41ef85:	jo     0x41ef62
  41ef87:	mov    ecx,0x75d2506f
  41ef8c:	jb     0x41efe8
  41ef8e:	mov    ds:0xfb6a13a4,eax
  41ef93:	sbb    bl,BYTE PTR [edi]
  41ef95:	mov    ds:0xb3784bf1,al
  41ef9a:	je     0x41efa0
  41ef9c:	push   eax
  41ef9d:	inc    edx
  41ef9e:	sbb    eax,0x28973ab7
  41efa3:	sbb    eax,0x4f896fd9
  41efa8:	stos   DWORD PTR es:[edi],eax
  41efa9:	test   BYTE PTR [eax-0x64],ah
  41efac:	push   0x9cc57ddf
  41efb1:	jmp    0x9cce4448
  41efb6:	(bad)  
  41efb7:	sub    edx,DWORD PTR [edi+ebp*1]
  41efba:	bound  esp,QWORD PTR [eax+0x6b6d652e]
  41efc0:	call   0xb422ccb8
  41efc5:	sbb    ecx,0x2edc2d59
  41efcb:	test   DWORD PTR [ecx+0x2e13098f],0x2c770a28
  41efd5:	sbb    BYTE PTR [ecx+0x7],0x9e
  41efd9:	addr16 xor edi,eax
  41efdc:	mov    ebp,0x38fdaf68
  41efe1:	into   
  41efe2:	add    al,0xdc
  41efe4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41efe5:	out    0xfd,al
  41efe7:	mov    ebp,0xebc41aab
  41efec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41efed:	inc    edx
  41efee:	adc    ebx,DWORD PTR ss:[esi+eax*1+0x32]
  41eff3:	push   esi
  41eff4:	pop    ss
  41eff5:	add    bh,ch
  41eff7:	pop    ebx
  41eff8:	push   ecx
  41eff9:	retf   
  41effa:	mov    edx,0xa396e7cb
  41efff:	gs into 
  41f001:	and    al,0x92
  41f003:	iret   
  41f004:	daa    
  41f005:	aam    0x5d
  41f007:	loop   0x41f01e
  41f009:	cmp    eax,0x8a06184f
  41f00e:	mov    ebp,0xf8e58e2d
  41f013:	inc    edi
  41f014:	pop    edi
  41f015:	jo     0x41f00d
  41f017:	test   DWORD PTR [eax],ecx
  41f019:	jmp    0x8f0:0x528353ac
  41f020:	fs iret 
  41f022:	pop    ebp
  41f023:	mov    ss,edi
  41f025:	mov    esi,0x94d3007
  41f02a:	cmp    dh,BYTE PTR [ebx+0x21]
  41f02d:	dec    eax
  41f02e:	fcomp  st(5)
  41f030:	out    dx,al
  41f031:	pushw  cs
  41f033:	mov    al,0xf5
  41f035:	cwde   
  41f036:	jbe    0x41f065
  41f038:	sahf   
  41f039:	add    DWORD PTR [edx+0x39],edx
  41f03c:	push   ebp
  41f03d:	inc    eax
  41f03e:	push   0x96efbb63
  41f043:	inc    edx
  41f044:	inc    ebx
  41f045:	push   edx
  41f046:	or     DWORD PTR [edi],ecx
  41f048:	xchg   BYTE PTR [edi],bh
  41f04a:	mov    cs,WORD PTR [ecx]
  41f04c:	retf   0x2b62
  41f04f:	stos   DWORD PTR es:[edi],eax
  41f050:	mov    al,ds:0x8c2e11d9
  41f055:	mov    ah,ch
  41f057:	popf   
  41f058:	retf   0xb2bc
  41f05b:	out    dx,eax
  41f05c:	stos   BYTE PTR es:[edi],al
  41f05d:	dec    edi
  41f05e:	pop    edx
  41f05f:	dec    esp
  41f060:	aaa    
  41f061:	inc    eax
  41f062:	idiv   DWORD PTR [ebx-0xa5cd05f]
  41f068:	xchg   esp,eax
  41f069:	test   BYTE PTR [eax],ah
  41f06b:	jmp    0x41f031
  41f06d:	push   0x9c8edf96
  41f072:	xchg   ebp,eax
  41f073:	in     eax,dx
  41f074:	test   eax,0x5ed137e9
  41f079:	cdq    
  41f07a:	ins    DWORD PTR es:[edi],dx
  41f07b:	data16 jecxz 0x41f026
  41f07e:	pop    ecx
  41f07f:	cmp    eax,0xf56953bd
  41f084:	test   dl,bl
  41f086:	fisubr WORD PTR [esi]
  41f088:	mov    es,WORD PTR ds:0xc31ae93d
  41f08e:	or     edx,ebx
  41f090:	ja     0x41f022
  41f092:	mov    bl,0xb5
  41f094:	rcr    DWORD PTR [eax+eax*8],cl
  41f097:	fimul  WORD PTR [ecx-0x4d]
  41f09a:	(bad)  
  41f09b:	call   0xdc8503d8
  41f0a0:	jecxz  0x41f0df
  41f0a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f0a3:	fs xor al,0x6c
  41f0a6:	or     DWORD PTR [ebx+0x21],ecx
  41f0a9:	mov    edx,0xb135ea07
  41f0ae:	ds sbb esp,0x6b7aada6
  41f0b5:	scas   al,BYTE PTR es:[edi]
  41f0b6:	cmp    BYTE PTR [edx-0x1b],ah
  41f0b9:	dec    esp
  41f0ba:	xlat   BYTE PTR ds:[ebx]
  41f0bb:	gs mov ecx,0xa3cbb140
  41f0c1:	and    eax,0x2fb1aef9
  41f0c6:	mov    bl,0xa
  41f0c8:	jecxz  0x41f05e
  41f0ca:	or     al,0xde
  41f0cc:	out    0x6,eax
  41f0ce:	mov    dl,0xd8
  41f0d0:	out    0x22,al
  41f0d2:	push   ds
  41f0d3:	fdivr  st(2),st
  41f0d5:	aaa    
  41f0d6:	mov    edi,0x870485d2
  41f0db:	scas   al,BYTE PTR es:[edi]
  41f0dc:	mov    esp,0xac23ca0f
  41f0e1:	jae    0x41f0b4
  41f0e3:	(bad)  
  41f0e4:	out    dx,eax
  41f0e5:	add    DWORD PTR [ecx-0x1412f934],ebp
  41f0eb:	or     edx,DWORD PTR [ecx]
  41f0ed:	xchg   edi,eax
  41f0ee:	sahf   
  41f0ef:	inc    edx
  41f0f0:	stos   DWORD PTR es:[edi],eax
  41f0f1:	fisub  WORD PTR [esi]
  41f0f3:	(bad)  
  41f0f4:	sub    eax,0x22aab7c1
  41f0f9:	jmp    0x2558ca3b
  41f0fe:	fild   QWORD PTR [eax-0x35]
  41f101:	pop    es
  41f102:	inc    esi
  41f103:	push   ds
  41f104:	jle    0x41f154
  41f106:	shr    BYTE PTR [ebx+eax*4-0x1121bc9],cl
  41f10d:	mov    al,0xec
  41f10f:	pop    es
  41f110:	inc    esi
  41f111:	outs   dx,BYTE PTR ds:[esi]
  41f112:	jmp    0x7d26:0x15a828fc
  41f119:	stc    
  41f11a:	adc    al,ch
  41f11c:	sub    dl,cl
  41f11e:	mov    dl,0x94
  41f120:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f121:	pop    es
  41f122:	or     al,0x16
  41f124:	fs xchg esi,eax
  41f126:	in     al,0xc8
  41f128:	fwait
  41f129:	aaa    
  41f12a:	repnz sub dl,BYTE PTR [eax+0x66fe013d]
  41f131:	iret   
  41f132:	push   eax
  41f133:	aam    0x75
  41f135:	mov    bh,0x46
  41f137:	mov    eax,0x2f607a65
  41f13c:	fsubr  QWORD PTR [eax]
  41f13e:	test   DWORD PTR [ebp-0x692bcc60],edi
  41f144:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f145:	pop    ds
  41f146:	sbb    al,0x68
  41f148:	and    ah,BYTE PTR [esi+0x72]
  41f14b:	push   es
  41f14c:	or     ch,BYTE PTR [ecx+0x68]
  41f14f:	mov    ch,BYTE PTR [ecx]
  41f151:	out    dx,al
  41f152:	jmp    0xdf86:0xd29a274
  41f159:	push   ss
  41f15a:	mov    al,ds:0xbd76797f
  41f15f:	outs   dx,BYTE PTR ds:[esi]
  41f160:	aad    0xdd
  41f162:	mov    esi,esp
  41f164:	sbb    eax,0xc5be4c01
  41f169:	inc    ebp
  41f16a:	mov    bh,0x9e
  41f16c:	and    bh,ch
  41f16e:	dec    ebx
  41f16f:	cwde   
  41f170:	inc    eax
  41f171:	sbb    BYTE PTR [edx],0xa4
  41f174:	dec    esi
  41f175:	sbb    BYTE PTR [eax+0x1ebdd9d],al
  41f17b:	sub    al,0x95
  41f17d:	std    
  41f17e:	fwait
  41f17f:	out    0xc7,eax
  41f181:	(bad)  
  41f183:	and    edx,DWORD PTR [ebp-0xb]
  41f186:	fnstenv [ecx-0x2fd0a5df]
  41f18c:	daa    
  41f18d:	nop
  41f18e:	out    dx,al
  41f18f:	aas    
  41f190:	and    DWORD PTR [ecx+0xadd1637],ebp
  41f196:	sbb    al,0xb5
  41f198:	adc    ah,BYTE PTR [ebx]
  41f19a:	imul   edi,DWORD PTR [edi+edx*2+0x3b],0xa506f0a4
  41f1a2:	sub    ebx,DWORD PTR [edi]
  41f1a4:	xchg   ebp,eax
  41f1a5:	ret    0x770d
  41f1a8:	inc    ebx
  41f1a9:	mov    al,ds:0x501ce9d3
  41f1ae:	xor    eax,0xbe5d0991
  41f1b3:	mov    bh,0x29
  41f1b5:	je     0x41f194
  41f1b7:	or     DWORD PTR [eax-0x6fc416a4],ebp
  41f1bd:	mov    ds:0x2518431a,al
  41f1c2:	pop    esi
  41f1c3:	pop    ds
  41f1c4:	push   0xffffffd3
  41f1c6:	jbe    0x41f186
  41f1c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f1c9:	shl    BYTE PTR [esi+0x6ef76fa0],0x57
  41f1d0:	clc    
  41f1d1:	xor    al,0x42
  41f1d3:	pop    eax
  41f1d4:	or     eax,0xda3b4fb
  41f1d9:	and    BYTE PTR [eax-0x7962448d],cl
  41f1df:	xor    eax,0x95b1d233
  41f1e4:	mov    bh,0x1d
  41f1e6:	repnz mov ch,0x5d
  41f1e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f1ea:	adc    DWORD PTR [edi],ecx
  41f1ec:	fild   QWORD PTR [ebp+esi*1-0x6b207269]
  41f1f3:	aad    0xda
  41f1f5:	int3   
  41f1f6:	outs   dx,BYTE PTR ds:[esi]
  41f1f7:	jle    0x41f18a
  41f1f9:	pop    ds
  41f1fa:	mov    DWORD PTR [ecx+0x784aacf],edx
  41f200:	xchg   edx,eax
  41f201:	mov    dh,0x53
  41f203:	mov    ah,0xb0
  41f205:	push   edx
  41f206:	jae    0x41f1cb
  41f208:	in     eax,0x80
  41f20a:	pop    edi
  41f20b:	mov    eax,0x16a58353
  41f210:	mov    bh,0x6b
  41f212:	out    0xf4,eax
  41f214:	pop    ds
  41f215:	repnz outs dx,DWORD PTR ds:[esi]
  41f217:	mov    eax,ds:0xbdb186dc
  41f21c:	(bad)  
  41f21d:	xchg   BYTE PTR ss:[ecx],al
  41f220:	mov    esp,0x6df9d555
  41f225:	in     al,dx
  41f226:	call   0xfd6d:0xa6ac49b1
  41f22d:	sbb    eax,0x2a08ee64
  41f232:	mov    eax,DWORD PTR [ebx+esi*4]
  41f235:	jmp    0xb748c6ee
  41f23a:	loop   0x41f228
  41f23c:	mov    bh,0xd3
  41f23e:	nop
  41f23f:	retf   0xae8d
  41f242:	and    ebx,DWORD PTR [edx-0x34f312d2]
  41f248:	mov    al,ds:0x239dde2e
  41f24d:	outs   dx,BYTE PTR ds:[esi]
  41f24e:	in     eax,0xff
  41f250:	cwde   
  41f251:	aam    0x9d
  41f253:	pop    es
  41f254:	scas   al,BYTE PTR es:[edi]
  41f255:	jp     0x41f1f5
  41f257:	add    esi,esp
  41f259:	mov    esi,0x90edc9ef
  41f25e:	adc    al,0x67
  41f260:	js     0x41f2bd
  41f262:	dec    ebp
  41f263:	push   ebp
  41f264:	enter  0x8121,0xa6
  41f268:	idiv   DWORD PTR [eax-0x8]
  41f26b:	sub    bl,BYTE PTR [eax+0xf24037e]
  41f271:	lds    eax,FWORD PTR [ecx-0x32]
  41f274:	fistp  WORD PTR [ebx+0xd]
  41f278:	push   edi
  41f279:	shl    BYTE PTR [edx-0x5ed17a96],cl
  41f27f:	or     ecx,DWORD PTR [esi]
  41f281:	mov    ch,0xb8
  41f283:	xor    ebp,edx
  41f285:	inc    eax
  41f286:	les    ecx,FWORD PTR [edi-0xa]
  41f289:	and    eax,0x7470d178
  41f28e:	test   al,0x90
  41f290:	cmp    BYTE PTR [eax],ah
  41f292:	enter  0x5018,0xad
  41f296:	retf   
  41f297:	sar    BYTE PTR [eax+eax*2],0xd
  41f29b:	dec    edi
  41f29c:	in     al,0x1
  41f29e:	(bad)
  41f2a1:	fs add eax,0x42dc4af4
  41f2a7:	inc    ebp
  41f2a8:	sbb    DWORD PTR [ecx-0x40],ebp
  41f2ab:	les    edi,FWORD PTR [esi+0x3cc0e510]
  41f2b1:	fucom  st(5)
  41f2b3:	and    BYTE PTR [ecx-0x7a],cl
  41f2b6:	inc    ebp
  41f2b7:	jo     0x41f303
  41f2b9:	add    al,0x43
  41f2bb:	cmp    esi,DWORD PTR [ecx]
  41f2bd:	into   
  41f2be:	aas    
  41f2bf:	pop    ds
  41f2c0:	jns    0x41f2c8
  41f2c2:	bound  ecx,QWORD PTR [eax+eax*4]
  41f2c5:	mul    BYTE PTR [ebx-0xc2d560e]
  41f2cb:	dec    ebp
  41f2cc:	(bad)  
  41f2cd:	(bad)  
  41f2cf:	(bad)  
  41f2d0:	pusha  
  41f2d1:	fcomp  DWORD PTR [esi-0x5ded4ce2]
  41f2d7:	xchg   ebp,eax
  41f2d8:	repz ror BYTE PTR [ebp+0x1d0b9022],cl
  41f2df:	in     al,0x4
  41f2e1:	add    ebx,DWORD PTR [esi-0x61cdef33]
  41f2e7:	add    al,0x20
  41f2e9:	(bad)  
  41f2ea:	retf   0xed76
  41f2ed:	jnp    0x41f32f
  41f2ef:	mov    esi,0xa2a47ecf
  41f2f4:	ins    BYTE PTR es:[edi],dx
  41f2f5:	test   eax,0xeb6607db
  41f2fa:	sbb    esp,eax
  41f2fc:	cmp    BYTE PTR ds:0xd9eca4ca,ch
  41f302:	rcr    ecx,0xbb
  41f305:	mov    ebp,0x51b75cb2
  41f30a:	inc    ebp
  41f30b:	retf   
  41f30c:	cwde   
  41f30d:	mov    ah,0x5b
  41f30f:	xchg   ecx,eax
  41f310:	sub    ecx,DWORD PTR [ebp-0x26]
  41f313:	ds cmc 
  41f315:	repnz or BYTE PTR ds:[edi],ah
  41f319:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f31a:	jnp    0x41f308
  41f31c:	add    BYTE PTR [eax],al
  41f31e:	add    BYTE PTR [eax],al
  41f320:	add    BYTE PTR [eax],al
  41f322:	sub    esp,DWORD PTR [ecx-0x934ebbd]
  41f328:	jg     0x41f2e9
  41f32a:	test   ch,ch
  41f32c:	out    dx,al
  41f32d:	cmp    BYTE PTR [edi+0x53],0x76
  41f331:	add    eax,edi
  41f333:	ins    DWORD PTR es:[edi],dx
  41f334:	add    DWORD PTR [eax],eax
  41f336:	repnz add al,0x0
  41f339:	add    bl,ch
  41f33b:	inc    ecx
  41f33c:	dec    esi
  41f33d:	cmp    al,0xfe
  41f33f:	test   ch,0x67
  41f342:	ror    DWORD PTR [esp+edi*8-0x34bde650],cl
  41f349:	or     DWORD PTR [edi+eiz*2-0x54],ebx
  41f34d:	jmp    DWORD PTR ds:0xaa42de3f
  41f353:	lds    ebx,FWORD PTR [ebp+0x39efc7bf]
  41f359:	fist   WORD PTR [di+0x7cdf]
  41f35e:	loope  0x41f379
  41f360:	lock shl DWORD PTR es:[bp-0x3a],cl
  41f366:	cmp    al,0xf9
  41f368:	xor    BYTE PTR [ebx],ch
  41f36a:	vmread ebp,ebp
  41f36d:	pushf  
  41f36e:	cdq    
  41f36f:	(bad)  
  41f370:	shl    ebx,cl
  41f372:	outs   dx,BYTE PTR ds:[esi]
  41f373:	sbb    eax,0x8ccb0222
  41f378:	add    ecx,edi
  41f37a:	push   0xb38981a8
  41f37f:	mov    esi,0xaa4142bc
  41f384:	bndldx bnd2,[eax-0x76]
  41f388:	es pop ecx
  41f38a:	sbb    BYTE PTR [ebx-0xd],dh
  41f38d:	jb     0x41f3be
  41f38f:	shl    bl,cl
  41f391:	lgs    esi,FWORD PTR [edx]
  41f394:	icebp  
  41f395:	add    BYTE PTR [ecx],ah
  41f397:	cmc    
  41f398:	pop    ds
  41f399:	add    cl,BYTE PTR [ebp+0x1e]
  41f39c:	sti    
  41f39d:	xchg   edi,eax
  41f39e:	sub    al,0xbe
  41f3a0:	and    eax,0x6cdf9f68
  41f3a5:	adc    esi,ebp
  41f3a7:	sub    al,0xe5
  41f3a9:	in     eax,0x68
  41f3ab:	pushf  
  41f3ac:	nop
  41f3ad:	or     eax,0xfdea4419
  41f3b2:	mov    edi,0x9f54c72
  41f3b7:	inc    ebp
  41f3b8:	outs   dx,BYTE PTR ds:[esi]
  41f3b9:	out    0x72,eax
  41f3bb:	and    eax,0x5a518ab6
  41f3c0:	pop    edi
  41f3c1:	adc    edx,DWORD PTR [ecx+0x68]
  41f3c4:	push   esp
  41f3c5:	jnp    0x41f3bc
  41f3c7:	dec    ebx
  41f3c8:	aam    0xbc
  41f3ca:	(bad)  
  41f3cb:	leave  
  41f3cc:	(bad)  
  41f3cd:	xor    eax,0xa1b3acb4
  41f3d2:	cmp    BYTE PTR [edi],0xa2
  41f3d5:	imul   esp,DWORD PTR [esp+esi*1-0x1ea99cd8],0x76962de7
  41f3e0:	call   0x697c7c4c
  41f3e5:	out    dx,eax
  41f3e6:	gs stc 
  41f3e8:	test   DWORD PTR [esi-0x243dce69],esp
  41f3ee:	stc    
  41f3ef:	(bad)  
  41f3f1:	pop    es
  41f3f2:	retf   
  41f3f3:	cwde   
  41f3f4:	mov    esp,0x51f60000
  41f3f9:	ins    DWORD PTR es:[edi],dx
  41f3fa:	jl     0x41f39c
  41f3fc:	or     DWORD PTR [ecx-0x572599c4],ecx
  41f402:	das    
  41f403:	cmp    eax,ebx
  41f405:	loope  0x41f44e
  41f407:	bound  esp,QWORD PTR [esi-0x71146f47]
  41f40d:	mov    ?,ecx
  41f40f:	inc    edi
  41f410:	add    eax,0xe2e19f60
  41f415:	es je  0x41f48b
  41f418:	out    0x16,al
  41f41a:	lock nop
  41f41c:	push   eax
  41f41d:	push   ss
  41f41e:	mov    WORD PTR [esi+0xf],?
  41f421:	gs dec edx
  41f423:	in     al,0x53
  41f425:	pop    ds
  41f426:	mov    bl,0x63
  41f428:	rcr    DWORD PTR [edi-0x26],cl
  41f42b:	cmp    cl,BYTE PTR [eax]
  41f42d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f42e:	inc    ebx
  41f42f:	push   cs
  41f430:	clc    
  41f431:	ret    
  41f432:	inc    ebp
  41f433:	std    
  41f434:	pushf  
  41f435:	sub    eax,0xabad594e
  41f43a:	ret    
  41f43b:	in     eax,0x18
  41f43d:	adc    ah,bl
  41f43f:	jno    0x41f40d
  41f441:	enter  0x7fa2,0xf
  41f445:	test   eax,0xbeb2e618
  41f44a:	push   0x62552ccd
  41f44f:	aas    
  41f450:	stos   DWORD PTR es:[edi],eax
  41f451:	into   
  41f452:	sub    DWORD PTR [ebx+0x6877a2dd],0x43
  41f459:	xor    DWORD PTR [eax],0x55
  41f45c:	push   0xfffffff3
  41f45e:	shr    BYTE PTR [edi-0x7a],1
  41f461:	inc    edi
  41f462:	fsub   QWORD PTR [edi+ecx*1-0xf225e7d]
  41f469:	push   esp
  41f46a:	dec    edi
  41f46b:	ins    BYTE PTR es:[edi],dx
  41f46c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f46d:	pop    ebx
  41f46e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f46f:	stos   BYTE PTR es:[edi],al
  41f470:	mov    dl,0xf3
  41f472:	fistp  DWORD PTR [ecx+0x7d]
  41f475:	sub    ah,BYTE PTR [edi]
  41f477:	add    DWORD PTR [edi-0xe],edi
  41f47a:	xchg   edx,eax
  41f47b:	call   0x94db:0xcc62949c
  41f482:	cmp    dl,BYTE PTR [eax+0x118381af]
  41f488:	jne    0x41f44e
  41f48a:	cdq    
  41f48b:	sti    
  41f48c:	ret    
  41f48d:	mov    eax,ds:0x5119bc14
  41f492:	mov    al,0x95
  41f494:	cwde   
  41f495:	in     al,dx
  41f496:	mov    eax,0xf188eb32
  41f49b:	adc    ah,BYTE PTR [eax+0x7cb4d466]
  41f4a1:	js     0x41f4c5
  41f4a3:	fsub   st(1),st
  41f4a5:	fs sti 
  41f4a7:	in     al,dx
  41f4a8:	ret    
  41f4a9:	test   BYTE PTR [ebx-0x5b332df9],dl
  41f4af:	pop    ss
  41f4b0:	loope  0x41f449
  41f4b2:	cmp    eax,0xfe2bae9
  41f4b7:	iret   
  41f4b8:	cwde   
  41f4b9:	jo     0x41f4e2
  41f4bb:	add    DWORD PTR [eax+0x16aab8f9],eax
  41f4c1:	pusha  
  41f4c2:	sub    eax,0xd4f9bd31
  41f4c7:	lahf   
  41f4c8:	jg     0x41f4de
  41f4ca:	fld    DWORD PTR [ecx-0x10]
  41f4cd:	mov    ecx,0xe243479c
  41f4d2:	mov    ecx,0x37f6c6be
  41f4d7:	pop    eax
  41f4d8:	das    
  41f4d9:	xor    BYTE PTR [esi],ch
  41f4db:	xor    edx,DWORD PTR fs:[ecx+0x2112b232]
  41f4e2:	pop    ebx
  41f4e3:	mov    ebp,0x29054680
  41f4e8:	xchg   edx,eax
  41f4e9:	mov    edx,0x9d9fcbf6
  41f4ee:	mov    ch,0xac
  41f4f0:	jae    0x41f53f
  41f4f2:	xchg   esi,eax
  41f4f3:	scas   al,BYTE PTR es:[edi]
  41f4f4:	pop    eax
  41f4f5:	dec    edx
  41f4f6:	retf   
  41f4f7:	es out dx,al
  41f4f9:	xchg   ebx,eax
  41f4fa:	pop    eax
  41f4fb:	adc    ch,BYTE PTR [esi+0x1e]
  41f4fe:	dec    ebp
  41f4ff:	(bad)  
  41f500:	xchg   ecx,eax
  41f501:	sub    bh,BYTE PTR [ecx]
  41f503:	ror    edx,0x3d
  41f506:	mov    WORD PTR [edi-0x4ef4deeb],gs
  41f50c:	or     eax,0xdcac3f5a
  41f511:	mov    bh,BYTE PTR [ebx*1+0x78b95cfa]
  41f518:	push   esi
  41f519:	push   ebp
  41f51b:	icebp  
  41f51c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f51d:	pavgw  mm3,mm5
  41f520:	popf   
  41f521:	pop    es
  41f522:	dec    ecx
  41f523:	div    BYTE PTR [eax+edi*1-0x23af009]
  41f52a:	add    esp,DWORD PTR [ecx+eiz*1-0x38a7836b]
  41f531:	fwait
  41f532:	popf   
  41f533:	push   ebx
  41f534:	icebp  
  41f535:	mov    cl,0xc0
  41f537:	mov    dh,0xbc
  41f539:	imul   esp,DWORD PTR [ecx+ebx*1-0x36f4cfdf],0x55f35d0c
  41f544:	into   
  41f545:	add    eax,0x96f65330
  41f54a:	sbb    ebp,DWORD PTR ds:0xa3843e4a
  41f550:	cdq    
  41f551:	fisttp WORD PTR ds:0x65acf28
  41f557:	push   esi
  41f558:	rcl    ebx,cl
  41f55a:	cmp    eax,DWORD PTR [edx+0x63d868ca]
  41f560:	enter  0x984f,0xdf
  41f564:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f565:	xor    ah,BYTE PTR [ebp+0x21]
  41f568:	jmp    0x41f56a
  41f56a:	fnsave [ebx+eiz*1]
  41f56d:	jne    0x41f508
  41f56f:	inc    esp
  41f570:	push   ecx
  41f571:	pushf  
  41f572:	jmp    0x41f55d
  41f574:	dec    edx
  41f575:	dec    esi
  41f576:	std    
  41f577:	pop    esp
  41f578:	adc    DWORD PTR [esi+edx*1+0x5845efe9],0xffffffb2
  41f580:	fdiv   DWORD PTR [edx-0x2dcf7128]
  41f586:	sar    DWORD PTR [edx],cl
  41f588:	leave  
  41f589:	push   ebp
  41f58a:	out    0xb0,al
  41f58c:	sar    BYTE PTR [esi+0x68],0xb7
  41f590:	or     al,0x38
  41f592:	test   BYTE PTR [eax+0x328024be],0xa1
  41f599:	rol    dh,0x69
  41f59c:	push   ebx
  41f59d:	xor    DWORD PTR [edx+0x4],esi
  41f5a0:	inc    edi
  41f5a1:	lock adc eax,0xd77a1b57
  41f5a7:	or     edi,DWORD PTR [ebx]
  41f5a9:	sbb    dh,0x1c
  41f5ac:	mov    ebx,0xae615338
  41f5b1:	xor    dh,ah
  41f5b3:	jge    0x41f5d4
  41f5b5:	fsubr  st(7),st
  41f5b7:	pop    ds
  41f5b8:	call   0xae53a012
  41f5bd:	adc    eax,0xcccb5c99
  41f5c2:	bound  esi,QWORD PTR [edx+eiz*2]
  41f5c5:	lea    eax,[esi-0x72a78117]
  41f5cb:	dec    edi
  41f5cc:	jae    0x41f575
  41f5ce:	rcl    edi,0x8d
  41f5d1:	enter  0xd3ee,0x6e
  41f5d5:	push   ss
  41f5d6:	adc    DWORD PTR [ecx],eax
  41f5d8:	(bad)
  41f5de:	cli    
  41f5df:	scas   eax,DWORD PTR es:[edi]
  41f5e0:	and    ebp,DWORD PTR [ebp+0x5b2d0f50]
  41f5e6:	push   ecx
  41f5e7:	dec    edi
  41f5e8:	and    al,0x5c
  41f5ea:	jnp    0x41f5b6
  41f5ec:	aaa    
  41f5ed:	stos   BYTE PTR es:[edi],al
  41f5ee:	dec    edi
  41f5ef:	ror    BYTE PTR [edx],0x51
  41f5f2:	push   eax
  41f5f3:	dec    ebp
  41f5f4:	mov    ebp,0x7485da43
  41f5f9:	clc    
  41f5fa:	int    0x3f
  41f5fc:	inc    ebx
  41f5fd:	xor    BYTE PTR fs:[esi+0x6d78863e],0xd6
  41f605:	lods   eax,DWORD PTR ds:[esi]
  41f606:	mov    esi,DWORD PTR [edi-0x6a7352bd]
  41f60c:	jl     0x41f654
  41f60e:	aad    0x89
  41f610:	ds popf 
  41f612:	icebp  
  41f613:	ret    0x2f3b
  41f616:	mov    dl,0x53
  41f618:	adc    eax,0x393c9d36
  41f61d:	js     0x41f5dd
  41f61f:	inc    DWORD PTR [ebx+0x75]
  41f622:	dec    edi
  41f623:	xor    BYTE PTR [edi+0x20],ch
  41f626:	push   ebx
  41f627:	dec    eax
  41f628:	int    0x4b
  41f62a:	inc    esi
  41f62b:	das    
  41f62c:	jp     0x41f645
  41f62e:	ja     0x41f5fd
  41f630:	and    BYTE PTR [esi+0x47],dh
  41f633:	mov    BYTE PTR [ebx+0x2a],bh
  41f636:	mov    eax,ds:0x1f109f46
  41f63b:	and    DWORD PTR [ebx-0x4a],eax
  41f63e:	fdiv   QWORD PTR [ecx]
  41f640:	stc    
  41f641:	ficom  DWORD PTR ds:0x96cc7725
  41f647:	fwait
  41f648:	and    al,BYTE PTR [eax+0x2d]
  41f64b:	mov    al,0x4b
  41f64d:	pop    ds
  41f64e:	sti    
  41f64f:	push   eax
  41f650:	mov    ebp,ebx
  41f652:	xchg   DWORD PTR [edx+0xc6d8dcd],esi
  41f658:	fisubr WORD PTR [edx+0x7a]
  41f65b:	adc    DWORD PTR [edi],edx
  41f65d:	sub    al,0x3e
  41f65f:	das    
  41f660:	or     BYTE PTR [edx],dl
  41f662:	(bad)  
  41f663:	cwde   
  41f664:	ins    BYTE PTR es:[edi],dx
  41f665:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f666:	lods   al,BYTE PTR ds:[esi]
  41f667:	outs   dx,BYTE PTR ds:[esi]
  41f668:	sbb    eax,0xae470572
  41f66d:	cwde   
  41f66e:	fbstp  TBYTE PTR [edx-0x476b8083]
  41f674:	jmp    0x9412:0x42e2a851
  41f67b:	js     0x41f660
  41f67d:	mov    ah,0xa0
  41f67f:	loope  0x41f659
  41f681:	dec    ecx
  41f682:	push   edx
  41f683:	gs pop es
  41f685:	cmp    DWORD PTR [ebp-0x50f5fce2],esp
  41f68b:	push   cs
  41f68c:	mov    dh,0xb5
  41f68e:	mov    eax,0x42933339
  41f693:	mov    DWORD PTR [eax],edx
  41f695:	aam    0x62
  41f697:	das    
  41f698:	mov    fs,WORD PTR [eax-0x1cb5a147]
  41f69e:	xor    DWORD PTR [edi+ebp*8-0x6e],ebp
  41f6a2:	cmc    
  41f6a3:	push   ebx
  41f6a4:	xchg   BYTE PTR [ebx],ah
  41f6a6:	jnp    0x41f678
  41f6a8:	push   ebp
  41f6a9:	xchg   ebp,eax
  41f6aa:	jp     0x41f704
  41f6ac:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f6ae:	mov    ebp,0x3026ef36
  41f6b3:	fiadd  DWORD PTR [edi+0x41e5737]
  41f6b9:	aaa    
  41f6ba:	add    dh,BYTE PTR [esi+0x77]
  41f6bd:	mov    bx,0x72ac
  41f6c1:	int3   
  41f6c2:	lods   al,BYTE PTR ds:[esi]
  41f6c3:	shr    esi,1
  41f6c5:	cs inc ecx
  41f6c7:	andps  xmm4,XMMWORD PTR [edx]
  41f6ca:	jo     0x41f683
  41f6cc:	loopne 0x41f67d
  41f6ce:	in     al,0x10
  41f6d0:	push   ss
  41f6d1:	ja     0x41f6ad
  41f6d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f6d4:	dec    ecx
  41f6d5:	pop    ebx
  41f6d6:	jg     0x41f6f6
  41f6d8:	or     BYTE PTR [ebp+0x43],ch
  41f6db:	or     eax,0xb6e6b083
  41f6e0:	xor    eax,0xa326d23f
  41f6e5:	repnz mov esp,ebx
  41f6e8:	int3   
  41f6e9:	or     BYTE PTR [ebx+edi*8-0x56],ah
  41f6ed:	cmp    cl,ah
  41f6ef:	sbb    esi,ecx
  41f6f1:	inc    esi
  41f6f2:	sbb    bl,BYTE PTR [esi+0x20]
  41f6f5:	paddd  mm6,mm4
  41f6f8:	pop    ss
  41f6f9:	mov    dh,0x25
  41f6fb:	and    al,0xd1
  41f6fd:	add    BYTE PTR [ebp-0x60],ch
  41f700:	(bad)  
  41f701:	test   eax,0xb88922a9
  41f706:	xchg   BYTE PTR [ebx],dh
  41f708:	stos   DWORD PTR es:[edi],eax
  41f709:	inc    edx
  41f70a:	pop    edx
  41f70b:	sub    ah,al
  41f70d:	or     eax,0x52938cd6
  41f712:	repz test DWORD PTR ds:0xcb89fea1,0x41bb8b75
  41f71d:	adc    eax,ebx
  41f71f:	push   cs
  41f720:	pop    esi
  41f721:	dec    ebp
  41f722:	or     bl,BYTE PTR [ecx-0x75005296]
  41f728:	adc    ebx,edx
  41f72a:	cmp    eax,0x1132857d
  41f72f:	fsub   DWORD PTR [edi-0x3a7a1f0f]
  41f735:	stc    
  41f736:	iret   
  41f737:	or     BYTE PTR [eax+edi*4],ch
  41f73a:	mov    eax,ds:0x91d065df
  41f73f:	pop    ds
  41f740:	adc    al,0x26
  41f742:	jecxz  0x41f796
  41f744:	gs iret 
  41f746:	js     0x41f6f4
  41f748:	scas   eax,DWORD PTR es:[edi]
  41f749:	and    dl,BYTE PTR [ecx]
  41f74b:	add    DWORD PTR [edi-0x5a],ebx
  41f74e:	jg     0x41f71a
  41f750:	ja     0x41f724
  41f752:	pop    ds
  41f753:	daa    
  41f754:	dec    ebp
  41f755:	fsub   QWORD PTR [esi-0x79229a77]
  41f75b:	adc    esp,DWORD PTR [ecx+0xf]
  41f75e:	cli    
  41f75f:	test   DWORD PTR [edx-0x30],esp
  41f762:	sub    eax,DWORD PTR [ebx]
  41f764:	fnstsw WORD PTR [edx-0x50f1a044]
  41f76a:	pop    esp
  41f76b:	into   
  41f76c:	shl    DWORD PTR [edi],1
  41f76e:	loopne 0x41f750
  41f770:	push   0xffffffbf
  41f772:	add    dh,ah
  41f774:	int    0x49
  41f776:	mov    bl,0x59
  41f778:	add    DWORD PTR [esi],ebx
  41f77a:	shl    DWORD PTR [esi],1
  41f77c:	push   0x929831ca
  41f781:	xchg   ecx,eax
  41f782:	mov    esi,0x1ca78651
  41f787:	dec    BYTE PTR [eax+eiz*2+0xe8057aa]
  41f78e:	sar    BYTE PTR [esi+0x46],0x66
  41f792:	sbb    ecx,esi
  41f794:	mov    ds,WORD PTR [ebx+0x58]
  41f797:	mov    BYTE PTR [ebx-0x36],0x82
  41f79b:	retf   0xb560
  41f79e:	js     0x41f77d
  41f7a0:	add    DWORD PTR [eax-0x64],ebx
  41f7a3:	dec    edx
  41f7a4:	mov    al,ds:0xa115e439
  41f7a9:	add    ah,ch
  41f7ab:	mov    esi,0x388752b7
  41f7b0:	jbe    0x41f810
  41f7b2:	jmp    0xc05d94e9
  41f7b7:	add    BYTE PTR [edx],dh
  41f7b9:	sub    esp,DWORD PTR [esi+0x7cb190a]
  41f7bf:	sub    DWORD PTR [esp+ebx*2-0x28],0xffffffa4
  41f7c4:	mov    eax,ds:0x716e380c
  41f7c9:	fstp   DWORD PTR [ebp+0x0]
  41f7cc:	mov    ch,0x12
  41f7ce:	hlt    
  41f7cf:	jmp    0xe3405036
  41f7d4:	jge    0x41f797
  41f7d6:	inc    eax
  41f7d7:	xchg   DWORD PTR [eax+0x7d],edi
  41f7da:	xchg   esi,eax
  41f7db:	ss mov ebx,0x1adbfd00
  41f7e1:	sbb    eax,0x805eba89
  41f7e6:	dec    DWORD PTR [eax-0x2e]
  41f7e9:	jp     0x41f781
  41f7eb:	mov    al,0x22
  41f7ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f7ee:	imul   ecx,DWORD PTR [ecx+0x39],0xd9a424f2
  41f7f5:	rol    BYTE PTR [ecx+0x66],1
  41f7f8:	lock sub BYTE PTR [edi-0x7f],cl
  41f7fc:	lahf   
  41f7fd:	(bad)  
  41f7fe:	out    dx,eax
  41f7ff:	scas   eax,DWORD PTR es:[edi]
  41f800:	rcr    DWORD PTR [esp+esi*1+0x55],1
  41f804:	leave  
  41f805:	retf   0x74fa
  41f808:	or     BYTE PTR [esi-0xc8d149a],dl
  41f80e:	loope  0x41f886
  41f810:	dec    ebx
  41f811:	inc    ebx
  41f812:	jmp    0x40a0c80f
  41f817:	and    esp,ebp
  41f819:	xor    esi,DWORD PTR [ecx-0xf]
  41f81c:	call   0xa778:0x4d712a06
  41f823:	pop    ebx
  41f824:	loopne 0x41f887
  41f826:	test   eax,0xb8d3f361
  41f82b:	xor    al,0x0
  41f82d:	add    BYTE PTR [eax],al
  41f82f:	add    BYTE PTR [eax],al
  41f831:	add    BYTE PTR [eax+0x64],cl
  41f834:	mul    BYTE PTR [eax-0x2]
  41f837:	repnz fisubr WORD PTR [ecx+eiz*8-0x64]
  41f83c:	out    0x52,eax
  41f83e:	rcl    DWORD PTR [edx+edi*1],1
  41f841:	and    al,0xb9
  41f843:	jb     0x41f846
  41f845:	add    dl,dh
  41f847:	add    al,0x0
  41f849:	add    BYTE PTR [esi+eiz*4+0xd],dl
  41f84d:	dec    eax
  41f84e:	mov    cl,ah
  41f850:	mov    dh,BYTE PTR [edi+0x5b]
  41f853:	inc    edi
  41f854:	mov    dh,0x11
  41f856:	std    
  41f857:	cmc    
  41f858:	daa    
  41f859:	mov    eax,ds:0x11a9ffe3
  41f85e:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  41f860:	int3   
  41f861:	in     eax,dx
  41f862:	les    ebx,FWORD PTR [ebx-0x5f]
  41f865:	into   
  41f866:	lods   al,BYTE PTR ds:[esi]
  41f867:	dec    esp
  41f868:	dec    edi
  41f869:	cmp    eax,0xeeff24ae
  41f86e:	retf   
  41f86f:	cmp    eax,0x447857f7
  41f874:	jae    0x41f80c
  41f876:	mov    WORD PTR [ecx+0x16],dx
  41f87a:	inc    ecx
  41f87b:	jno    0x41f8ee
  41f87d:	cmc    
  41f87e:	scas   eax,DWORD PTR es:[edi]
  41f87f:	xor    al,0x1d
  41f881:	jl     0x41f8a6
  41f883:	sub    eax,0xfaf1d9d7
  41f888:	jmp    0xf46f:0x8746387
  41f88f:	pusha  
  41f890:	push   ss
  41f891:	clc    
  41f892:	fstp   DWORD PTR [edx-0x3d]
  41f895:	arpl   WORD PTR [ebx+0x2d],di
  41f898:	xor    DWORD PTR [ebp+0x25a9ff00],esi
  41f89e:	stc    
  41f89f:	dec    eax
  41f8a0:	or     bl,dh
  41f8a2:	outs   dx,BYTE PTR ds:[esi]
  41f8a3:	call   0x6cf9:0xc47a05cb
  41f8aa:	ficom  WORD PTR [ebp-0x2fa559f1]
  41f8b0:	dec    edx
  41f8b1:	popa   
  41f8b2:	pop    ecx
  41f8b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f8b4:	jge    0x41f8ab
  41f8b6:	adc    edi,eax
  41f8b8:	(bad)  
  41f8b9:	xor    esi,DWORD PTR [ebx-0x308cf86]
  41f8bf:	es push ebp
  41f8c1:	push   ecx
  41f8c2:	or     bh,BYTE PTR [ebp+ebx*1+0x1]
  41f8c6:	(bad)  
  41f8c7:	sub    al,0xcb
  41f8c9:	pop    esp
  41f8ca:	or     al,0xd5
  41f8cc:	push   edi
  41f8cd:	fadd   st(6),st
  41f8cf:	mov    WORD PTR [edi+0x35906161],cs
  41f8d5:	fwait
  41f8d6:	dec    eax
  41f8d7:	retf   0xd3b7
  41f8da:	shl    ebx,cl
  41f8dc:	jle    0x41f8c8
  41f8de:	loop   0x41f8be
  41f8e0:	ss mov eax,0x66aa24f2
  41f8e6:	icebp  
  41f8e7:	rcl    DWORD PTR [esi],0xa7
  41f8ea:	mov    esp,0xbddfa00c
  41f8ef:	jmp    0x41f87e
  41f8f1:	cmp    ch,BYTE PTR [edx+0x55]
  41f8f4:	xchg   ecx,eax
  41f8f5:	sbb    al,0xe7
  41f8f7:	mov    es,WORD PTR [eax+ebp*8-0x4be2b2c5]
  41f8fe:	(bad)  
  41f8ff:	js     0x41f8e0
  41f901:	ins    DWORD PTR es:[edi],dx
  41f902:	pop    ds
  41f903:	inc    eax
  41f904:	retf   0x2801
  41f907:	add    bl,BYTE PTR [ebp+0x7]
  41f90a:	test   BYTE PTR [ebx],ah
  41f90c:	inc    edi
  41f90d:	(bad)  
  41f90e:	mov    ds:0xddb286ef,eax
  41f913:	int3   
  41f914:	test   eax,0x828c7b47
  41f919:	inc    edi
  41f91a:	mov    esi,0xc4f99972
  41f91f:	jbe    0x41f97a
  41f921:	scas   eax,DWORD PTR es:[edi]
  41f922:	mov    ebp,0xd47b2b49
  41f927:	lods   al,BYTE PTR ds:[esi]
  41f928:	sub    DWORD PTR [ebp+0x5e],ebx
  41f92b:	dec    eax
  41f92c:	inc    edx
  41f92d:	mov    ds:0x5414871,al
  41f932:	xchg   ebx,eax
  41f933:	out    0x94,al
  41f935:	jbe    0x41f910
  41f937:	dec    ebx
  41f938:	cmp    al,0x5d
  41f93a:	dec    esi
  41f93b:	into   
  41f93c:	cmp    bl,BYTE PTR ds:0x4f496d31
  41f942:	ret    0x971f
  41f945:	pop    esp
  41f946:	cmp    DWORD PTR [edi],ebp
  41f948:	mov    al,ds:0xc9c58c1c
  41f94d:	popa   
  41f94e:	jno    0x41f90b
  41f950:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f951:	gs dec edi
  41f953:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f954:	mov    ds:0x89cbddaa,eax
  41f959:	xchg   ecx,eax
  41f95a:	ins    DWORD PTR es:[edi],dx
  41f95b:	jp     0x41f94a
  41f95d:	xlat   BYTE PTR ds:[ebx]
  41f95e:	rol    DWORD PTR [ebx],0x5
  41f961:	jl     0x41f9ac
  41f963:	pop    ds
  41f964:	sti    
  41f965:	push   esi
  41f966:	adc    al,0x48
  41f968:	jnp    0x41f95f
  41f96a:	xor    al,0x91
  41f96c:	or     ah,BYTE PTR [edx-0x1b27dac4]
  41f972:	ins    DWORD PTR es:[edi],dx
  41f973:	popa   
  41f974:	pop    ss
  41f975:	fisttp WORD PTR [edi-0x6b02f7d7]
  41f97b:	adc    DWORD PTR [ecx+0x26],esi
  41f97e:	pop    ss
  41f97f:	call   0x51bf:0x147beb22
  41f986:	cli    
  41f987:	add    DWORD PTR ss:[ecx],esi
  41f98a:	call   0x7cef96e3
  41f98f:	inc    ebx
  41f990:	jl     0x41f9f7
  41f992:	fiadd  WORD PTR [edi-0x23]
  41f995:	retf   0x5450
  41f998:	ins    DWORD PTR es:[edi],dx
  41f999:	push   cs
  41f99a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f99b:	outs   dx,DWORD PTR ds:[esi]
  41f99c:	cs out dx,al
  41f99e:	lods   eax,DWORD PTR ds:[esi]
  41f99f:	sahf   
  41f9a0:	jo     0x41f95b
  41f9a2:	repz cli 
  41f9a4:	inc    ecx
  41f9a5:	iret   
  41f9a6:	push   ebp
  41f9a7:	mov    bh,0xbd
  41f9a9:	jmp    0x41f9e8
  41f9ab:	adc    eax,0xb99d8599
  41f9b0:	gs jecxz 0x41f94d
  41f9b3:	add    eax,0xc821f58f
  41f9b8:	mov    WORD PTR [edx+0x4e],?
  41f9bb:	push   ss
  41f9bc:	int    0x11
  41f9be:	mov    ch,0x36
  41f9c0:	clc    
  41f9c1:	out    dx,al
  41f9c2:	jnp    0x41f952
  41f9c4:	inc    eax
  41f9c5:	or     DWORD PTR [eax+0x3f0ad704],0xffffff83
  41f9cc:	call   0xfe2b4b76
  41f9d1:	ds int3 
  41f9d3:	pop    ss
  41f9d4:	push   esi
  41f9d5:	fwait
  41f9d6:	outs   dx,BYTE PTR ds:[esi]
  41f9d7:	out    0xfc,ax
  41f9da:	jns    0x41f9b0
  41f9dc:	pop    esp
  41f9dd:	cmp    BYTE PTR [edi-0x7f],bh
  41f9e0:	enter  0x2fd0,0x3
  41f9e4:	or     al,0x11
  41f9e6:	rcl    BYTE PTR [edi+edx*4-0x2c9c452c],1
  41f9ed:	retf   0xacaa
  41f9f0:	adc    eax,eax
  41f9f2:	pop    es
  41f9f3:	int    0x15
  41f9f5:	inc    edx
  41f9f6:	xor    ecx,ebx
  41f9f8:	in     eax,dx
  41f9f9:	mov    bh,0x56
  41f9fb:	dec    edx
  41f9fc:	jmp    ecx
  41f9fe:	xor    BYTE PTR ds:0x183317a8,0x68
  41fa05:	inc    eax
  41fa06:	out    dx,eax
  41fa07:	shl    BYTE PTR [ecx+0x46],0x45
  41fa0b:	mov    DWORD PTR [ebx+0x79d11ed7],ebp
  41fa11:	pusha  
  41fa12:	test   eax,0x5cbf6558
  41fa17:	scas   al,BYTE PTR es:[edi]
  41fa18:	call   0xba7430aa
  41fa1d:	test   DWORD PTR [edx-0x33],0xd8b253ad
  41fa24:	mov    edx,DWORD PTR ds:0x8caa69d6
  41fa2a:	aas    
  41fa2b:	aam    0x27
  41fa2d:	jge    0x41f9f9
  41fa2f:	sub    DWORD PTR [ecx+0x31],eax
  41fa32:	pop    es
  41fa33:	inc    ebx
  41fa34:	push   cs
  41fa35:	lock aad 0x7d
  41fa38:	and    ebx,DWORD PTR [edx+0x5eaed2f9]
  41fa3e:	or     eax,0x62dd5837
  41fa43:	mov    ecx,0x94613741
  41fa48:	xor    eax,0x5c6f6aac
  41fa4d:	stos   BYTE PTR es:[edi],al
  41fa4e:	xchg   edi,eax
  41fa4f:	jmp    0x1b2311c3
  41fa54:	push   eax
  41fa55:	push   edx
  41fa56:	pop    ebp
  41fa57:	retf   
  41fa58:	(bad)  
  41fa59:	fcom   DWORD PTR [eax]
  41fa5b:	jecxz  0x41fac4
  41fa5d:	jp     0x41fa97
  41fa5f:	cmp    al,0x6c
  41fa61:	mov    ebp,0x3b5c8df8
  41fa66:	out    0x30,al
  41fa68:	or     al,0x16
  41fa6a:	mov    dl,0xe3
  41fa6c:	jecxz  0x41fabf
  41fa6e:	jg     0x41fa8a
  41fa70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fa71:	(bad)  
  41fa72:	in     eax,dx
  41fa73:	in     al,0x2e
  41fa75:	push   ebp
  41fa76:	data16 loope 0x41fa4e
  41fa79:	jno    0x41faf8
  41fa7b:	enter  0xfa53,0x1a
  41fa7f:	dec    edx
  41fa80:	jo     0x41fac3
  41fa82:	ds jmp 0xf375dd1a
  41fa88:	push   edi
  41fa89:	test   eax,0x309c9fb9
  41fa8e:	adc    BYTE PTR ds:0x99246f8b,ch
  41fa94:	test   eax,0x3ab37fe8
  41fa99:	lea    ebp,ds:0xc1fa0ddf
  41fa9f:	dec    ebp
  41faa0:	mov    ds:0xe3562eb7,eax
  41faa5:	or     edi,DWORD PTR [edi-0x11]
  41faa8:	test   eax,0xdcdfa2fd
  41faad:	fwait
  41faae:	inc    ebx
  41faaf:	test   eax,0x26fcd868
  41fab4:	stc    
  41fab5:	inc    edx
  41fab6:	(bad)  
  41fab7:	fdiv   DWORD PTR [edi+0x30a83195]
  41fabd:	fmul   QWORD PTR [eax]
  41fabf:	popa   
  41fac0:	mov    edx,0x9b514752
  41fac5:	mov    ds:0xa5a8cb93,eax
  41faca:	dec    esp
  41facb:	sar    DWORD PTR [ebp+0x667bb17b],cl
  41fad1:	icebp  
  41fad2:	inc    ebx
  41fad3:	add    DWORD PTR [ecx-0x2e19a6dc],edi
  41fad9:	out    dx,al
  41fada:	push   ecx
  41fadb:	cmp    DWORD PTR ds:0x65bc57b7,ebp
  41fae1:	dec    eax
  41fae2:	test   al,0x6b
  41fae4:	arpl   WORD PTR [edi],dx
  41fae6:	mov    BYTE PTR [ebp+0x0],ah
  41fae9:	sub    al,0x1c
  41faeb:	and    al,ah
  41faed:	add    bh,BYTE PTR [edx-0x27]
  41faf0:	fcmovnu st,st(3)
  41faf2:	xor    BYTE PTR [ebp+0x35835b17],al
  41faf8:	je     0x41fb33
  41fafa:	jae    0x41fb75
  41fafc:	push   0x5d
  41fafe:	dec    ebx
  41faff:	das    
  41fb00:	lahf   
  41fb01:	call   0x873ea4b7
  41fb06:	ficomp WORD PTR [edx]
  41fb08:	imul   esp,DWORD PTR [esp+edi*2],0xfffffffe
  41fb0c:	cmp    eax,esi
  41fb0e:	(bad)  
  41fb0f:	in     eax,0x79
  41fb11:	dec    ebx
  41fb12:	xor    DWORD PTR es:0x1801c884,esp
  41fb19:	popa   
  41fb1a:	lods   al,BYTE PTR ds:[esi]
  41fb1b:	lock adc al,0x27
  41fb1e:	xor    ah,0x85
  41fb21:	xchg   DWORD PTR [ecx+eiz*1],esp
  41fb24:	js     0x41fb6f
  41fb26:	jle    0x41faca
  41fb28:	cmp    cl,ch
  41fb2a:	rcr    BYTE PTR [edx+0x63],0x11
  41fb2e:	pop    eax
  41fb2f:	in     al,0x9e
  41fb31:	xchg   DWORD PTR [edi+0x67],ecx
  41fb34:	jbe    0x41fad0
  41fb36:	pshufw mm1,mm4,0xf6
  41fb3a:	int    0x63
  41fb3c:	jbe    0x41fb19
  41fb3e:	add    DWORD PTR [edi],0x23755fca
  41fb44:	call   0xb55:0x28b977cc
  41fb4b:	push   es
  41fb4c:	add    BYTE PTR [ebp+0x6d],bh
  41fb4f:	mov    cl,0x18
  41fb51:	es std 
  41fb53:	mov    esi,0x47577248
  41fb58:	add    al,0x92
  41fb5a:	aaa    
  41fb5b:	mov    WORD PTR [eax+0x7c],cs
  41fb5e:	jns    0x41fbb8
  41fb60:	ficom  WORD PTR [esp+edx*2]
  41fb63:	call   0xc7ee:0xe9300322
  41fb6a:	imul   ebx,esi,0xaf861df1
  41fb70:	mov    ecx,0xa8796cb0
  41fb75:	mov    BYTE PTR [esp+ecx*1-0x5a],bh
  41fb79:	sbb    bh,bl
  41fb7b:	xor    bl,0x4d
  41fb7e:	(bad)
  41fb81:	xor    dh,BYTE PTR [esp+esi*4+0x18]
  41fb85:	cs ds out dx,al
  41fb88:	gs sar ebx,0x17
  41fb8c:	cwde   
  41fb8d:	or     bl,BYTE PTR [esi+0x10]
  41fb90:	outs   dx,BYTE PTR ds:[esi]
  41fb91:	xchg   esi,eax
  41fb92:	push   es
  41fb93:	mov    eax,0x123e1ea
  41fb98:	fs cld 
  41fb9a:	sbb    BYTE PTR [edi+0x64],dh
  41fb9d:	mov    ebp,0x4ad68fd2
  41fba2:	mov    ecx,DWORD PTR [ebx+0x6e]
  41fba5:	retf   
  41fba6:	jg     0x41fbfb
  41fba8:	xor    al,0xc1
  41fbaa:	inc    ecx
  41fbab:	out    dx,al
  41fbac:	adc    BYTE PTR gs:[eax-0x4d103220],ah
  41fbb3:	push   eax
  41fbb4:	sbb    BYTE PTR [ebx+0x4d084b22],bl
  41fbba:	test   ecx,0xfd9be903
  41fbc0:	out    0xc5,al
  41fbc2:	pop    es
  41fbc3:	mov    dl,0x11
  41fbc5:	add    BYTE PTR [ebp+0x2d7c9541],al
  41fbcb:	mov    cl,0xce
  41fbcd:	shl    ah,cl
  41fbcf:	pop    edx
  41fbd0:	jmp    0xb5a4:0x3c9bf713
  41fbd7:	adc    BYTE PTR [edi-0x55],cl
  41fbda:	iret   
  41fbdb:	add    al,0x29
  41fbdd:	je     0x41fc11
  41fbdf:	xor    dh,BYTE PTR [eax-0x73f42773]
  41fbe5:	xchg   esi,eax
  41fbe6:	fimul  DWORD PTR [ebp+0x70]
  41fbe9:	pop    es
  41fbea:	xchg   edx,eax
  41fbeb:	pop    edi
  41fbec:	cmp    BYTE PTR [ebp+0x52dbf747],cl
  41fbf2:	addr16 inc esp
  41fbf4:	popf   
  41fbf5:	jne    0x41fb9c
  41fbf7:	ret    
  41fbf8:	(bad)  
  41fbf9:	(bad)  
  41fbfa:	clc    
  41fbfb:	mov    ch,0xe0
  41fbfd:	jb     0x41fbc9
  41fbff:	int    0xfc
  41fc01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fc02:	push   cs
  41fc03:	loop   0x41fc7f
  41fc05:	out    0xb,eax
  41fc07:	add    edx,DWORD PTR [esi]
  41fc09:	or     al,0x63
  41fc0b:	jl     0x41fbdf
  41fc0d:	popa   
  41fc0e:	add    DWORD PTR [eax+0x4e],eax
  41fc11:	sbb    al,0xb7
  41fc13:	ror    BYTE PTR [ebp+edi*2+0x3f],cl
  41fc17:	int    0xe7
  41fc19:	pop    ss
  41fc1a:	int3   
  41fc1b:	dec    esi
  41fc1c:	in     eax,0xec
  41fc1e:	push   es
  41fc1f:	cli    
  41fc20:	jp     0x41fbb2
  41fc22:	retf   0xadbd
  41fc25:	aas    
  41fc26:	mov    esp,0x59ee5cbd
  41fc2b:	test   eax,0xe8849a44
  41fc30:	ds add al,0x41
  41fc33:	push   ss
  41fc34:	xlat   BYTE PTR ds:[ebx]
  41fc35:	push   ebp
  41fc36:	lds    ebx,FWORD PTR [esi+0x35]
  41fc39:	push   eax
  41fc3a:	mov    DWORD PTR [ebx-0x13],ecx
  41fc3d:	je     0x41fbeb
  41fc3f:	jmp    0x587be2ad
  41fc44:	sub    DWORD PTR [ebx],ecx
  41fc46:	or     BYTE PTR [esi+0x13],dh
  41fc49:	les    esp,FWORD PTR [edi]
  41fc4b:	xor    BYTE PTR [ecx+0x2e],bl
  41fc4e:	sbb    al,0xf6
  41fc50:	mov    eax,0x46e4d372
  41fc55:	xchg   esp,eax
  41fc56:	pop    eax
  41fc57:	cli    
  41fc58:	xor    bh,BYTE PTR [edx-0x61]
  41fc5b:	outs   dx,DWORD PTR ds:[esi]
  41fc5c:	mov    bh,0xf
  41fc5e:	les    esi,FWORD PTR [ebx-0x421e5d27]
  41fc64:	jge    0x41fc31
  41fc66:	mov    ds:0xb2703bbd,eax
  41fc6b:	test   eax,0x21cee786
  41fc70:	dec    ebp
  41fc71:	(bad)  
  41fc72:	mov    ds:0x1450f58d,eax
  41fc77:	pop    ebp
  41fc78:	jo     0x41fc5d
  41fc7a:	sar    bl,0xe2
  41fc7d:	ja     0x41fc26
  41fc7f:	ins    DWORD PTR es:[edi],dx
  41fc80:	jmp    0xf304:0x20b19ba
  41fc87:	cmp    BYTE PTR [ebx-0x48],cl
  41fc8a:	xchg   BYTE PTR ds:0xc815f9e5,ch
  41fc90:	stos   BYTE PTR es:[edi],al
  41fc91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fc92:	jl     0x41fd11
  41fc94:	push   edx
  41fc95:	icebp  
  41fc96:	test   eax,0x20145073
  41fc9b:	mov    DWORD PTR [ecx-0x59],ebx
  41fc9e:	mov    ss,WORD PTR [eax]
  41fca0:	(bad)  
  41fca1:	add    eax,0xed5f291e
  41fca6:	xchg   esi,edx
  41fca8:	jg     0x41fc74
  41fcaa:	jns    0x41fc5b
  41fcac:	add    DWORD PTR [ecx+edx*2+0x5efb6d0a],ebx
  41fcb3:	mov    ds:0xd237c4ac,eax
  41fcb8:	pop    es
  41fcb9:	das    
  41fcba:	bt     eax,0x10
  41fcbe:	push   ebp
  41fcbf:	rol    BYTE PTR [eax+0x7c],1
  41fcc2:	es test eax,0xd908c77d
  41fcc8:	mov    BYTE PTR [ecx],al
  41fcca:	dec    ebp
  41fccb:	cmc    
  41fccc:	popa   
  41fccd:	inc    ebx
  41fcce:	mov    ds:0xde5307e5,eax
  41fcd3:	test   ah,0x5f
  41fcd6:	pop    ebx
  41fcd7:	inc    eax
  41fcd8:	push   ebp
  41fcd9:	inc    edi
  41fcda:	fmul   QWORD PTR [ebp+0x6420bd92]
  41fce0:	and    al,0xce
  41fce2:	sbb    eax,0x190c033c
  41fce7:	std    
  41fce8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fce9:	rcl    BYTE PTR [esi+edi*2+0xd8fb9c2],0xaa
  41fcf1:	push   edi
  41fcf2:	xchg   esp,eax
  41fcf3:	mov    ecx,0x81844796
  41fcf8:	mov    bl,0xe1
  41fcfa:	cmc    
  41fcfb:	sbb    dl,BYTE PTR [edx]
  41fcfd:	xchg   DWORD PTR [ebx],esi
  41fcff:	cmp    BYTE PTR [edi+0x20],cl
  41fd02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fd03:	xor    al,0x1
  41fd05:	jecxz  0x41fd7b
  41fd07:	add    eax,0x649d2c1
  41fd0c:	mov    dh,0x7a
  41fd0e:	iret   
  41fd0f:	mov    DWORD PTR [ebp+0x58],esi
  41fd12:	div    BYTE PTR [ebx-0x59]
  41fd15:	sbb    BYTE PTR [ecx-0xf],dl
  41fd18:	sbb    al,BYTE PTR [edi-0x31]
  41fd1b:	cwde   
  41fd1c:	retf   
  41fd1d:	cmp    al,0xf
  41fd1f:	and    DWORD PTR [edx+0x35],0xffffffc1
  41fd23:	mov    edi,0xeee13f52
  41fd28:	fldcw  WORD PTR ds:0x26c291f4
  41fd2e:	jecxz  0x41fd84
  41fd30:	shl    esi,1
  41fd32:	test   DWORD PTR [edi+0x55],0x24bc86d6
  41fd39:	stc    
  41fd3a:	fsub   QWORD PTR [eax+0x0]
  41fd3d:	add    BYTE PTR [eax],al
  41fd3f:	add    BYTE PTR [eax],al
  41fd41:	add    BYTE PTR [edx-0x48ec49e9],ah
  41fd47:	mov    bl,0xa7
  41fd49:	mov    bh,0xb
  41fd4b:	add    BYTE PTR [edi-0x4b576c24],dh
  41fd51:	lock stos DWORD PTR es:[edi],eax
  41fd53:	ja     0x41fd56
  41fd55:	add    dl,dh
  41fd57:	add    al,0x0
  41fd59:	add    ch,ah
  41fd5b:	push   es
  41fd5c:	jne    0x41fcee
  41fd5e:	mov    esp,0x2b37c0e0
  41fd63:	fisttp DWORD PTR [ecx+0x292c3c7c]
  41fd69:	arpl   WORD PTR [edi+0x39],dx
  41fd6c:	jo     0x41fd86
  41fd6e:	lods   eax,DWORD PTR ds:[esi]
  41fd6f:	cmp    al,0x62
  41fd71:	sbb    eax,0x50c0b3e0
  41fd76:	mul    BYTE PTR [esi]
  41fd78:	inc    ebp
  41fd79:	inc    esp
  41fd7a:	and    dl,ah
  41fd7c:	mov    ax,ds:0xb310aa5d
  41fd82:	sub    BYTE PTR ds:0xf56cfcd1,cl
  41fd88:	jo     0x41fd8c
  41fd8a:	jno    0x41fdac
  41fd8c:	out    dx,eax
  41fd8d:	dec    ecx
  41fd8e:	pop    eax
  41fd8f:	and    eax,0xcbe5ce5c
  41fd94:	jmp    0x41fdaa
  41fd96:	jmp    0x2702:0x9f9b0b3a
  41fd9d:	retf   
  41fd9e:	repz cmp bl,BYTE PTR [ecx-0x6a655dec]
  41fda5:	push   ebx
  41fda6:	gs sbb eax,0x1c9c8f8
  41fdac:	lods   eax,DWORD PTR ds:[esi]
  41fdad:	xor    BYTE PTR [ebp+0x3a1669c6],cl
  41fdb3:	in     al,dx
  41fdb4:	test   al,0x5f
  41fdb6:	pop    edx
  41fdb7:	sub    bh,BYTE PTR [ebx]
  41fdb9:	sar    BYTE PTR [esi],cl
  41fdbb:	out    dx,al
  41fdbc:	mov    ebx,0xd4c4756a
  41fdc1:	dec    ecx
  41fdc2:	fidivr DWORD PTR [ecx+eiz*1+0x50]
  41fdc6:	add    DWORD PTR [ebp+0x133dcc48],ecx
  41fdcc:	push   0xffffffc4
  41fdce:	adc    eax,0xe3205126
  41fdd3:	xor    ah,dh
  41fdd5:	push   edi
  41fdd6:	or     DWORD PTR [ecx-0x58],esi
  41fdd9:	test   DWORD PTR [eax+0x7b],0xe2300160
  41fde0:	loope  0x41fe11
  41fde2:	cmp    eax,0x46b30d4a
  41fde7:	push   ecx
  41fde8:	dec    ecx
  41fde9:	jne    0x41fdb7
  41fdeb:	inc    edi
  41fdec:	ins    DWORD PTR es:[edi],dx
  41fded:	cmp    eax,DWORD PTR [ecx+0x4d]
  41fdf0:	into   
  41fdf1:	pop    ss
  41fdf2:	jle    0x41fdc1
  41fdf4:	push   edx
  41fdf5:	gs pop edi
  41fdf7:	cld    
  41fdf8:	sbb    al,0x18
  41fdfa:	xor    ah,BYTE PTR [ebx]
  41fdfc:	cmp    esp,DWORD PTR [ecx-0x5d]
  41fdff:	inc    esi
  41fe00:	and    ecx,ecx
  41fe02:	mov    BYTE PTR [esi+0x73],0x41
  41fe06:	jb     0x41fde5
  41fe08:	adc    al,0x5b
  41fe0a:	out    dx,eax
  41fe0b:	das    
  41fe0c:	push   ecx
  41fe0d:	push   ebx
  41fe0e:	inc    ebp
  41fe0f:	pop    es
  41fe10:	sub    dh,cl
  41fe12:	(bad)
  41fe16:	mov    es,WORD PTR [edi+0x2f]
  41fe19:	clc    
  41fe1a:	push   edi
  41fe1b:	inc    BYTE PTR [esi-0x76c17756]
  41fe21:	dec    esp
  41fe22:	adc    BYTE PTR [eax],dl
  41fe24:	pop    esp
  41fe25:	add    BYTE PTR [ecx-0x656491b1],0xd
  41fe2c:	mov    eax,0xf3646b00
  41fe31:	repnz sbb al,0x82
  41fe34:	gs cmc 
  41fe36:	inc    ebp
  41fe37:	jg     0x41fe17
  41fe39:	(bad)  
  41fe3a:	cmc    
  41fe3b:	xor    dh,BYTE PTR [edi-0x7b]
  41fe3e:	jge    0x41fde0
  41fe40:	dec    ecx
  41fe41:	pop    esp
  41fe42:	dec    eax
  41fe43:	jns    0x41fe0a
  41fe45:	jno    0x41fe2a
  41fe47:	std    
  41fe48:	leave  
  41fe49:	popf   
  41fe4a:	out    0x5a,eax
  41fe4c:	pop    esi
  41fe4d:	mov    BYTE PTR ds:[ecx],dl
  41fe50:	ficomp WORD PTR [ebx-0x43]
  41fe53:	sub    ebx,DWORD PTR [esp+ebx*4]
  41fe56:	mov    ds:0xc5f10e70,eax
  41fe5b:	mov    BYTE PTR [ebp+0x4a650edc],dh
  41fe61:	mov    esi,?
  41fe63:	add    BYTE PTR [edi-0x78],ch
  41fe66:	mov    dh,BYTE PTR [bp+di-0x4b30]
  41fe6b:	lods   al,BYTE PTR ds:[esi]
  41fe6c:	mov    gs,WORD PTR [esi-0x46]
  41fe6f:	push   ecx
  41fe70:	add    bl,BYTE PTR [esi+0x34]
  41fe73:	fbstp  TBYTE PTR [ebp+0x5ab3adc9]
  41fe79:	loop   0x41fe3c
  41fe7b:	jl     0x41fe0e
  41fe7d:	mov    ds:0x996e3b42,eax
  41fe82:	inc    edx
  41fe83:	pusha  
  41fe84:	push   esp
  41fe85:	and    al,0x96
  41fe87:	sub    bh,BYTE PTR [ebx]
  41fe89:	(bad)  
  41fe8a:	jl     0x41fecb
  41fe8c:	pushf  
  41fe8d:	dec    edx
  41fe8e:	dec    edx
  41fe8f:	sub    BYTE PTR [edx+0x7d],dh
  41fe92:	fmul   QWORD PTR [ebx]
  41fe94:	sbb    cl,al
  41fe96:	or     ebp,DWORD PTR [esi+0x35]
  41fe99:	jb     0x41fe66
  41fe9b:	add    ch,BYTE PTR [ebp+eax*1+0x12a11a32]
  41fea2:	ret    0xefdc
  41fea5:	push   ebp
  41fea6:	xchg   ebx,eax
  41fea7:	imul   eax,ecx,0xfffffff9
  41feaa:	mov    bh,0x71
  41feac:	call   0xd5866755
  41feb1:	mov    cl,0xa5
  41feb3:	jmp    0xc9e7:0x6628d625
  41feba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41febb:	adc    al,BYTE PTR [ebp+edx*4-0x57e9ddd9]
  41fec2:	add    ah,BYTE PTR [edx]
  41fec4:	icebp  
  41fec5:	jle    0x41fe97
  41fec7:	dec    eax
  41fec8:	dec    ebp
  41fec9:	repnz mov ecx,ebp
  41fecc:	add    esi,DWORD PTR [esi-0x52]
  41fecf:	jg     0x41fed9
  41fed1:	daa    
  41fed2:	les    esp,FWORD PTR [edx-0x6c4f10e9]
  41fed8:	(bad)  [ecx-0x3a5e52e8]
  41fede:	aaa    
  41fedf:	cmp    al,0xe0
  41fee1:	jo     0x41ff1d
  41fee3:	sub    esi,DWORD PTR [esi]
  41fee5:	retf   0x30fe
  41fee8:	out    dx,eax
  41fee9:	fldcw  WORD PTR [eax+0x69d6cb11]
  41feef:	fstp   st(4)
  41fef1:	(bad)  
  41fef2:	fisubr DWORD PTR [ebp-0x39cd9a06]
  41fef8:	pop    esp
  41fef9:	jle    0x41fedd
  41fefb:	iret   
  41fefc:	adc    BYTE PTR ds:0xe3c00524,0xef
  41ff03:	adc    BYTE PTR [esi],ch
  41ff05:	test   al,0xe5
  41ff07:	pusha  
  41ff08:	cmp    esp,0x82963ba4
  41ff0e:	daa    
  41ff0f:	jns    0x41feec
  41ff11:	fidivr DWORD PTR [ebx-0xe26ffb8]
  41ff17:	test   BYTE PTR [ebp-0x3c],0xda
  41ff1b:	mov    dh,dl
  41ff1d:	loop   0x41fef1
  41ff1f:	mov    esp,0xcc2c71dc
  41ff24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ff25:	fldl2t 
  41ff27:	fwait
  41ff28:	jbe    0x41fee9
  41ff2a:	sbb    ecx,DWORD PTR [edi-0x6ae14ff4]
  41ff30:	aad    0x91
  41ff32:	mov    eax,ds:0x715bd7c3
  41ff37:	sbb    dh,BYTE PTR [ebx]
  41ff39:	cmp    DWORD PTR [ebp+0x2],ecx
  41ff3c:	xlat   BYTE PTR ds:[ebx]
  41ff3d:	add    bh,0x7e
  41ff40:	mov    ebp,0x7edd204f
  41ff45:	sub    al,0xed
  41ff47:	add    bl,ah
  41ff49:	lods   al,BYTE PTR ds:[esi]
  41ff4a:	cmp    eax,0x972e8be5
  41ff4f:	(bad)  
  41ff50:	clc    
  41ff51:	fcomp  QWORD PTR [edx]
  41ff53:	push   esi
  41ff54:	xlat   BYTE PTR ds:[ebx]
  41ff55:	dec    DWORD PTR [ebx]
  41ff57:	push   eax
  41ff58:	stc    
  41ff59:	test   DWORD PTR [edx+0x5a0f5e9b],ebx
  41ff5f:	int3   
  41ff60:	cmp    eax,0xfbaef444
  41ff65:	sub    ebp,edx
  41ff67:	ror    DWORD PTR [ebx*2-0x3a22a389],cl
  41ff6e:	xchg   ebp,eax
  41ff6f:	(bad)  
  41ff70:	cmp    eax,0x5a78048f
  41ff75:	mov    ecx,0x6802cc8
  41ff7a:	scas   eax,DWORD PTR es:[edi]
  41ff7b:	push   ds
  41ff7c:	iret   
  41ff7d:	adc    DWORD PTR [eax+0x62],ebx
  41ff80:	int3   
  41ff81:	addr16 push ecx
  41ff83:	rcr    BYTE PTR [ecx-0x6e],0x4
  41ff87:	xchg   edi,eax
  41ff88:	lds    ebx,FWORD PTR [ebx+0x69]
  41ff8b:	dec    ebx
  41ff8c:	and    al,0x3a
  41ff8e:	cmp    eax,0x7830f7dd
  41ff93:	call   0xe6c1:0x2e0445e3
  41ff9a:	jbe    0x41ff9a
  41ff9c:	pop    ss
  41ff9d:	mov    dh,0x5e
  41ff9f:	mov    edx,0x5365cdb9
  41ffa4:	jne    0x41ffcf
  41ffa6:	je     0x41ffa8
  41ffa8:	aas    
  41ffa9:	ja     0x41ff9b
  41ffab:	repnz enter 0x1127,0x47
  41ffb0:	inc    eax
  41ffb1:	inc    eax
  41ffb2:	push   ds
  41ffb3:	clc    
  41ffb4:	jnp    0x41ffff
  41ffb6:	ror    esp,1
  41ffb8:	inc    ebp
  41ffb9:	add    ecx,DWORD PTR ds:0x695a6301
  41ffbf:	adc    dl,BYTE PTR [esp+ebx*8+0x65]
  41ffc3:	test   BYTE PTR [ebx],al
  41ffc5:	and    cl,al
  41ffc7:	cmp    DWORD PTR [edi+0x50afce40],0x4915fbd1
  41ffd1:	lods   al,BYTE PTR ds:[esi]
  41ffd2:	mov    dh,0x45
  41ffd4:	mov    esi,0xadd2c680
  41ffd9:	pushf  
  41ffda:	mov    al,BYTE PTR [ebx+0x56c57125]
  41ffe0:	mov    ds:0x222b93ad,al
  41ffe5:	int    0xb1
  41ffe7:	push   eax
  41ffe8:	daa    
  41ffe9:	mov    edx,0x3607c8e5
  41ffee:	not    BYTE PTR fs:[ecx+0x22]
  41fff2:	int    0xe0
  41fff4:	inc    ebx
  41fff5:	xor    DWORD PTR [ebx+edx*8],ecx
  41fff8:	out    dx,al
  41fff9:	or     BYTE PTR [ecx],dh
  41fffb:	call   0x6ff9:0x45f9ba93
  420002:	jmp    0x8952:0x8c10b046
  420009:	cmp    al,0x2c
  42000b:	mov    eax,0x82145c1e
  420010:	add    al,0x5c
  420012:	fbld   TBYTE PTR [ebx+edi*2+0x5757c78a]
  420019:	fist   WORD PTR [edx-0x32e53c84]
  42001f:	aas    
  420020:	mov    esp,0x98c83d07
  420025:	in     eax,dx
  420026:	pop    edi
  420027:	pop    es
  420028:	inc    ecx
  420029:	mov    esi,0x49fe4832
  42002e:	pusha  
  42002f:	mov    DWORD PTR [ebx+0x535f0db3],ebp
  420035:	je     0x4200a4
  420037:	js     0x42008c
  420039:	xchg   ebx,eax
  42003a:	pushf  
  42003b:	sbb    DWORD PTR [esi+0x39],0xa1c8f1c1
  420042:	not    BYTE PTR [ebp+ebx*1+0x52]
  420046:	dec    edx
  420047:	dec    esi
  420048:	punpckldq mm4,DWORD PTR [ebx-0x4a]
  42004c:	popf   
  42004d:	fistp  QWORD PTR [edi+0xb]
  420050:	adc    eax,0x15872678
  420055:	mov    eax,ds:0x59b4f871
  42005a:	cmp    eax,0x2a099f2d
  42005f:	inc    esp
  420060:	or     esi,DWORD PTR [esi+0x5c31d4e7]
  420066:	out    0x77,eax
  420068:	add    esi,DWORD PTR [edx-0x68]
  42006b:	sbb    edx,DWORD PTR [edx+0x56]
  42006e:	mov    edi,0x822cfe5b
  420073:	out    0x2b,al
  420075:	scas   al,BYTE PTR es:[edi]
  420076:	ja     0x420094
  420078:	enter  0x6f82,0x7c
  42007c:	ja     0x420076
  42007e:	sub    al,0xc3
  420080:	xor    al,0x10
  420082:	ja     0x420079
  420084:	pop    edx
  420085:	imul   ecx,DWORD PTR [ecx],0xffffff8c
  420088:	dec    esp
  420089:	stos   BYTE PTR es:[edi],al
  42008a:	jne    0x42008a
  42008c:	mov    esp,0x345ab986
  420091:	pushf  
  420092:	sub    ch,BYTE PTR [esi+0x50]
  420095:	pop    ss
  420096:	lods   al,BYTE PTR ds:[esi]
  420097:	cli    
  420098:	shr    BYTE PTR [esi+0x6d72acb7],0xd9
  42009f:	mov    bh,0x18
  4200a1:	mov    bh,BYTE PTR [edi+0x9ddfd82]
  4200a7:	(bad)  
  4200aa:	jmp    0xff0a6789
  4200af:	aam    0xa5
  4200b1:	or     cl,BYTE PTR [esi+ebp*2+0x4bc00acf]
  4200b8:	sbb    edx,ebx
  4200ba:	call   0xb91393bb
  4200bf:	mov    ebx,0xb5590674
  4200c4:	adc    DWORD PTR [edi+edx*2],ebx
  4200c7:	mov    ds:0x39888bcf,al
  4200cc:	aam    0xa0
  4200ce:	mov    esi,0x54e9369a
  4200d3:	push   0xa2a53afd
  4200d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4200d9:	aaa    
  4200da:	inc    ebp
  4200db:	or     al,0xce
  4200dd:	push   edx
  4200de:	test   al,0xad
  4200e0:	(bad)  
  4200e1:	fisttp WORD PTR [ebx-0x18]
  4200e4:	jnp    0x42008d
  4200e6:	pop    ss
  4200e7:	mov    ebx,0x42d5d643
  4200ec:	icebp  
  4200ed:	pop    edx
  4200ee:	rcl    BYTE PTR [eax+ebp*8-0x2669ff6f],1
  4200f5:	xlat   BYTE PTR ds:[ebx]
  4200f6:	jno    0x42008c
  4200f8:	mov    ds:0xbc8c0c10,eax
  4200fd:	loopne 0x42012c
  4200ff:	dec    esp
  420100:	add    al,0x85
  420102:	(bad)  
  420103:	jmp    0x6c652811
  420108:	adc    ebp,DWORD PTR [edx-0x95ee0a8]
  42010e:	mov    DWORD PTR [edi+0x7da5562e],0x39b049b2
  420118:	inc    eax
  420119:	or     DWORD PTR [ecx-0x75],ecx
  42011c:	xchg   DWORD PTR [edi],edi
  42011e:	sub    DWORD PTR [esi],0x9e03d2f4
  420124:	add    esp,DWORD PTR [esi]
  420126:	dec    ebx
  420127:	mov    BYTE PTR ds:[ebp+0x753b0cb0],ch
  42012e:	dec    edi
  42012f:	test   esp,edx
  420131:	les    edi,FWORD PTR [edi-0x13]
  420134:	mov    al,0x3a
  420136:	sbb    eax,0x719bb7ac
  42013b:	jmp    ecx
  42013d:	mov    ah,0xeb
  42013f:	dec    DWORD PTR [ecx]
  420141:	and    al,BYTE PTR [esi+0x75a64a38]
  420147:	or     DWORD PTR [ecx+0x3776910b],esp
  42014d:	mov    edx,?
  42014f:	mov    al,ds:0x94c70764
  420154:	das    
  420155:	ja     0x42017f
  420157:	lock (bad) 
  420159:	shr    dl,1
  42015b:	add    bl,bl
  42015d:	fs loope 0x420136
  420160:	pop    esi
  420161:	mov    cl,0xf4
  420163:	dec    esp
  420164:	add    esi,edi
  420166:	pop    edi
  420167:	aad    0x45
  420169:	push   es
  42016a:	test   al,0x20
  42016c:	inc    edi
  42016d:	push   cs
  42016e:	xchg   esi,eax
  42016f:	or     esp,DWORD PTR [ecx+0x71]
  420172:	mov    esi,edx
  420174:	test   eax,0xf0744c63
  420179:	fstp   QWORD PTR [edx+0x7674b8fa]
  42017f:	clc    
  420180:	hlt    
  420181:	lahf   
  420182:	xlat   BYTE PTR ds:[ebx]
  420183:	hlt    
  420184:	xor    al,0x4a
  420186:	(bad)  
  420187:	sub    DWORD PTR [eax],esi
  420189:	cld    
  42018a:	push   esp
  42018b:	sahf   
  42018c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42018d:	mov    ebp,0x63ed373f
  420192:	repnz pop esp
  420194:	ja     0x4201a0
  420196:	or     BYTE PTR [ebx],dl
  420198:	ds (bad) 
  42019a:	pop    eax
  42019b:	loopne 0x4201ac
  42019d:	fdiv   QWORD PTR [edx]
  42019f:	sahf   
  4201a0:	pop    ebp
  4201a1:	lahf   
  4201a2:	sti    
  4201a3:	xchg   ebx,eax
  4201a4:	adc    BYTE PTR [esi-0x53],ah
  4201a7:	xor    eax,0xd7280c4d
  4201ac:	adc    DWORD PTR [esi+0x1f4d3829],0x1d
  4201b3:	call   FWORD PTR [edx+0x6500f09b]
  4201b9:	div    BYTE PTR [eax]
  4201bb:	imul   edx,DWORD PTR [edi+0x27e17730],0x7ecaa46e
  4201c5:	cli    
  4201c6:	sahf   
  4201c7:	mov    bh,0xc4
  4201c9:	mov    bl,0xec
  4201cb:	pop    es
  4201cc:	adc    al,0x21
  4201ce:	sub    al,0x97
  4201d0:	dec    esp
  4201d1:	cmp    DWORD PTR [esi],ebp
  4201d3:	and    eax,0x864e995
  4201d8:	jmp    0x420208
  4201da:	loopne 0x42017d
  4201dc:	push   edi
  4201dd:	xlat   BYTE PTR ds:[ebx]
  4201de:	repz or DWORD PTR [esi],0x900937ee
  4201e5:	data16 outs dx,BYTE PTR ds:[esi]
  4201e7:	or     ebx,eax
  4201e9:	in     al,dx
  4201ea:	(bad)  [edx]
  4201ec:	sub    BYTE PTR [esi+0x19e33b1c],dh
  4201f2:	sahf   
  4201f3:	sub    ecx,ebx
  4201f5:	cli    
  4201f6:	add    eax,0x6f92fd17
  4201fb:	outs   dx,DWORD PTR ds:[esi]
  4201fc:	out    0x7d,eax
  4201fe:	imul   esi,ebp,0xedbc2d7e
  420204:	push   cs
  420205:	imul   esi,DWORD PTR [eax+ecx*8-0x24],0xf8a23c3c
  42020d:	mov    ebp,0x7ef0c649
  420212:	call   0xf618:0x905125ba
  420219:	fst    st(6)
  42021b:	retf   0xeebf
  42021e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42021f:	add    bh,BYTE PTR [ebp-0x66]
  420222:	hlt    
  420223:	scas   al,BYTE PTR es:[edi]
  420224:	pop    eax
  420225:	adc    al,0x67
  420227:	xchg   BYTE PTR [ebx+0x17fa0606],bl
  42022d:	pop    ecx
  42022e:	es mov ecx,0x602bf898
  420234:	sub    al,0xd2
  420236:	add    DWORD PTR [ebp+0x1d90bc13],edx
  42023c:	in     eax,0xd1
  42023e:	xchg   ebx,eax
  42023f:	icebp  
  420240:	dec    eax
  420241:	retf   0xa9f5
  420244:	mov    ss,WORD PTR [eax]
  420246:	mov    ch,BYTE PTR [esp+edi*1-0x80]
  42024a:	imul   edi,ebx,0x0
  42024d:	add    BYTE PTR [eax],al
  42024f:	add    BYTE PTR [eax],al
  420251:	add    BYTE PTR [esi+0x57fe4584],dl
  420257:	(bad)  
  420258:	mov    edi,0xa59b80ec
  42025d:	and    BYTE PTR [ebx-0x62a6a76e],ch
  420263:	jl     0x420266
  420265:	add    dl,dh
  420267:	add    al,0x0
  420269:	add    dl,bh
  42026b:	xchg   ecx,eax
  42026c:	cmp    eax,0x93bbb386
  420271:	xor    DWORD PTR [eax-0x22e74450],ebp
  420277:	jns    0x420247
  420279:	cmp    eax,0x20294220
  42027e:	addr16 dec edx
  420280:	pop    esp
  420281:	into   
  420282:	sub    ah,BYTE PTR [esi+0x2db36839]
  420288:	aam    0xff
  42028a:	(bad)  
  42028b:	not    DWORD PTR [ebp-0x68]
  42028e:	mov    edx,0x787f017
  420293:	pop    ebp
  420294:	cmp    BYTE PTR [edx+0x2c],cl
  420297:	pop    ecx
  420298:	xor    DWORD PTR ds:0x1add04c,ecx
  42029e:	mov    ebp,0x838021ba
  4202a3:	cmp    al,0xbe
  4202a5:	inc    esi
  4202a6:	jnp    0x4202a9
  4202a8:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  4202aa:	mov    dh,0xac
  4202ac:	jae    0x4202eb
  4202ae:	ret    
  4202af:	sbb    al,0xed
  4202b1:	cmp    DWORD PTR [bp+si],esp
  4202b4:	ins    BYTE PTR es:[edi],dx
  4202b5:	dec    esi
  4202b6:	icebp  
  4202b7:	dec    esp
  4202b8:	sub    eax,0xb760de9c
  4202bd:	test   DWORD PTR [ebx],0xae2347fd
  4202c3:	push   cs
  4202c4:	pop    edi
  4202c5:	dec    edx
  4202c6:	(bad)  
  4202c8:	and    al,0x19
  4202ca:	aam    0x48
  4202cc:	sar    DWORD PTR [edi+0x55],1
  4202cf:	add    BYTE PTR [esi+0x5],dl
  4202d2:	sub    ah,BYTE PTR [esi+0x3ad21365]
  4202d8:	sub    eax,0x93331626
  4202dd:	mov    ?,WORD PTR [edi-0x3f]
  4202e0:	repnz sub al,0x1f
  4202e3:	push   es
  4202e4:	push   0xe1458f8f
  4202e9:	ror    ah,1
  4202eb:	(bad)  
  4202ec:	xor    BYTE PTR [eax],dl
  4202ee:	pushf  
  4202ef:	adc    BYTE PTR cs:[ebp-0x2a11387e],dh
  4202f6:	fnstcw WORD PTR [ecx+edi*4]
  4202f9:	ins    BYTE PTR es:[edi],dx
  4202fa:	ret    
  4202fb:	lea    esi,[esi+eax*1]
  4202fe:	fsubrp st(5),st
  420300:	das    
  420301:	cdq    
  420302:	std    
  420303:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420304:	les    eax,FWORD PTR [ecx+esi*8-0x55beab34]
  42030b:	xor    al,0xd0
  42030d:	jbe    0x420382
  42030f:	mov    ds:0x8c563e65,eax
  420314:	popf   
  420315:	shl    BYTE PTR [esi-0x1f21de0e],cl
  42031b:	cmp    cl,dl
  42031d:	aam    0xad
  42031f:	cwde   
  420320:	fcmovne st,st(2)
  420322:	add    eax,0xefa6a6bd
  420327:	xchg   edx,eax
  420328:	pop    ebp
  420329:	and    al,0xa8
  42032b:	hlt    
  42032c:	inc    edx
  42032d:	int    0x9e
  42032f:	(bad)  
  420330:	or     DWORD PTR [esp+eax*1],ebx
  420333:	loop   0x42033a
  420335:	mov    esi,0xc888f97b
  42033a:	in     al,0xf3
  42033c:	ins    BYTE PTR es:[edi],dx
  42033d:	sbb    edx,ebp
  42033f:	lds    ebx,FWORD PTR [edx+0x4c235c91]
  420345:	shl    BYTE PTR [ebx],cl
  420347:	sbb    eax,0xa8abb99c
  42034c:	std    
  42034d:	jne    0x4202eb
  42034f:	nop
  420350:	les    ecx,FWORD PTR [ecx+0x1c12002d]
  420356:	popa   
  420357:	pusha  
  420358:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420359:	shl    DWORD PTR [ebp+0x3111cb2a],cl
  42035f:	and    esp,esi
  420361:	jge    0x4203c7
  420363:	push   edx
  420364:	lahf   
  420365:	dec    edi
  420366:	call   0x14e89191
  42036b:	ja     0x4202ff
  42036d:	dec    esp
  42036e:	cli    
  42036f:	mov    dl,0x78
  420371:	add    al,BYTE PTR [edx+0x28]
  420374:	lea    ebx,[edx]
  420376:	pusha  
  420377:	cmp    eax,0xdf13f25
  42037c:	mov    ah,0xfb
  42037e:	and    al,0x5
  420380:	fisubr WORD PTR [edi-0x44]
  420383:	fsubr  DWORD PTR [edi-0x6485521c]
  420389:	xchg   ebx,eax
  42038a:	mov    ebx,ecx
  42038c:	add    DWORD PTR [esi+0x61],ebp
  42038f:	jne    0x420374
  420391:	or     al,0xf2
  420393:	adc    al,0x82
  420395:	pop    es
  420396:	daa    
  420397:	leave  
  420398:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420399:	in     eax,0xef
  42039b:	scas   eax,DWORD PTR es:[edi]
  42039c:	dec    edi
  42039d:	dec    ebp
  42039e:	dec    esp
  42039f:	jle    0x4203f8
  4203a1:	lock xor BYTE PTR [ebx+ebp*2],0x6b
  4203a6:	rol    DWORD PTR [edi+0x8],0xb
  4203aa:	mov    esi,0xb9bf2dff
  4203af:	ins    DWORD PTR es:[edi],dx
  4203b0:	inc    esp
  4203b1:	pushf  
  4203b2:	arpl   WORD PTR [ebx-0x6ef84061],bp
  4203b8:	dec    edi
  4203b9:	xchg   BYTE PTR [edx-0x534fad68],bl
  4203bf:	in     al,dx
  4203c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4203c1:	mov    edi,0xa5cafdc1
  4203c6:	sub    eax,0x98eda836
  4203cb:	adc    DWORD PTR [ebx],ebp
  4203cd:	mov    edx,0x9abb63bc
  4203d2:	and    dl,BYTE PTR [ecx+0x6320f274]
  4203d8:	xchg   DWORD PTR [ecx+esi*4],ebx
  4203db:	stos   BYTE PTR es:[edi],al
  4203dc:	aad    0xf8
  4203de:	sub    BYTE PTR [edx],bl
  4203e0:	mov    ch,0x87
  4203e2:	and    eax,0xf8593c18
  4203e7:	jno    0x42038c
  4203e9:	jae    0x4203e9
  4203eb:	lea    esi,[edi]
  4203ed:	mov    dh,0x16
  4203ef:	xchg   edi,eax
  4203f0:	or     eax,0xd82cedc2
  4203f5:	clc    
  4203f6:	sub    BYTE PTR [edx],ah
  4203f8:	lahf   
  4203f9:	adc    ch,BYTE PTR [edx-0xe]
  4203fc:	test   al,0x36
  4203fe:	add    eax,0x55e8d927
  420403:	icebp  
  420404:	sbb    eax,0x28eee45d
  420409:	cmp    dl,bh
  42040b:	sbb    al,0x1e
  42040d:	inc    esi
  42040e:	mov    al,ds:0xea8098a5
  420413:	ss pop ebp
  420415:	call   0x711ff2b
  42041a:	clc    
  42041b:	scas   al,BYTE PTR es:[edi]
  42041c:	mov    ebx,0xa820f57d
  420421:	(bad)  
  420422:	clc    
  420423:	scas   eax,DWORD PTR es:[edi]
  420424:	mov    ebp,0xa96b9aa
  420429:	out    0x34,al
  42042b:	ficomp DWORD PTR [edi-0x22]
  42042e:	push   ebx
  42042f:	into   
  420430:	enter  0x4254,0x5e
  420434:	mov    eax,0x9d8275cc
  420439:	jo     0x420478
  42043b:	jb     0x4204a7
  42043d:	or     bh,BYTE PTR [esi]
  42043f:	mov    eax,ds:0x65ca47a7
  420444:	(bad)  
  420445:	repnz push ebp
  420447:	add    BYTE PTR [eax+esi*4],dl
  42044a:	retf   0x9497
  42044d:	push   esp
  42044e:	fld    st(3)
  420450:	cmp    ebx,ebx
  420452:	pop    es
  420453:	sub    dh,0xf
  420456:	xchg   BYTE PTR [eax+0x5e9895bc],ah
  42045c:	jp     0x420417
  42045e:	inc    ebx
  42045f:	push   cs
  420460:	mov    ebx,0x97497d0e
  420465:	cmc    
  420466:	or     DWORD PTR [ecx-0x1a],0xffffffc2
  42046a:	pop    ebx
  42046b:	push   es
  42046c:	inc    edx
  42046d:	xor    DWORD PTR [eax],0xe617b9eb
  420473:	jmp    0x639:0xc886301e
  42047a:	cs and al,0xd5
  42047d:	cmp    eax,0xd75f867c
  420482:	push   es
  420483:	pop    edi
  420484:	inc    eax
  420485:	push   edx
  420486:	test   DWORD PTR [ebx-0x38092bb6],edx
  42048c:	and    eax,0xe3b3574a
  420491:	adc    edx,DWORD PTR [eax-0x5dd8b4af]
  420497:	and    DWORD PTR [eax+0xe91da26],edx
  42049d:	fcmovnbe st,st(4)
  42049f:	loope  0x42042c
  4204a1:	push   0x542e99e3
  4204a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4204a7:	int    0x97
  4204a9:	sti    
  4204aa:	stos   DWORD PTR es:[edi],eax
  4204ab:	cld    
  4204ac:	push   es
  4204ad:	jns    0x420478
  4204af:	sbb    edi,DWORD PTR [ecx+0x50a33472]
  4204b5:	je     0x420518
  4204b7:	cmp    DWORD PTR [eax-0x197240e5],edx
  4204bd:	add    DWORD PTR [edx+0x28b3ea71],0xffffffd2
  4204c4:	shl    BYTE PTR [edi+ecx*4-0x6d15d5a5],cl
  4204cb:	mov    bl,0x14
  4204cd:	aad    0x27
  4204cf:	jnp    0x42053c
  4204d1:	adc    al,0x97
  4204d3:	xor    al,0x9e
  4204d5:	pop    edi
  4204d6:	sbb    edx,eax
  4204d8:	js     0x420511
  4204da:	cmc    
  4204db:	es push edx
  4204dd:	sbb    al,0xbb
  4204df:	sbb    edx,DWORD PTR [ebp-0x69]
  4204e2:	dec    ebp
  4204e3:	fcmovnb st,st(5)
  4204e5:	dec    esi
  4204e6:	lods   eax,DWORD PTR ds:[esi]
  4204e7:	scas   eax,DWORD PTR es:[edi]
  4204e8:	out    dx,al
  4204e9:	leave  
  4204ea:	mov    ds:0xeba81ee7,eax
  4204ef:	or     eax,0xb62f588e
  4204f4:	out    0xcd,al
  4204f6:	pushf  
  4204f7:	push   edi
  4204f8:	jecxz  0x420576
  4204fa:	mov    bl,0xd9
  4204fc:	add    BYTE PTR [eax+0x23],bh
  4204ff:	mov    ds:0x7e1df82,al
  420504:	mov    ah,0xa3
  420506:	mov    dh,0x21
  420508:	ret    0x5657
  42050b:	out    0xb4,al
  42050d:	call   0x58574b00
  420512:	jmp    FWORD PTR [ecx+0x1e37d8e8]
  420518:	push   ds
  420519:	jne    0x4204d1
  42051b:	jp     0x420529
  42051d:	test   eax,0x55aff180
  420522:	push   ds
  420523:	mov    WORD PTR [ebx],gs
  420525:	icebp  
  420526:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420527:	sbb    dh,dh
  420529:	ss in  eax,0x74
  42052c:	cmp    ch,BYTE PTR [ebx-0x6f]
  42052f:	mov    gs,WORD PTR [edx+ecx*4-0x75c0ebce]
  420536:	shl    BYTE PTR [esi+0x4d85eee1],1
  42053c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42053d:	xor    esp,DWORD PTR [edx+ebp*1+0x238f6a84]
  420544:	jp     0x420551
  420546:	retf   
  420547:	dec    edi
  420548:	mov    ah,0x97
  42054a:	inc    DWORD PTR [ebx]
  42054c:	or     al,0xe1
  42054e:	call   0x5c844c80
  420553:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420554:	data16 fild QWORD PTR [ecx+0x77]
  420559:	dec    ebx
  42055a:	jle    0x420512
  42055c:	cmovno ecx,DWORD PTR [ebp-0xb26ee5c]
  420563:	popa   
  420564:	push   ss
  420565:	(bad)  
  420566:	push   esp
  420567:	ins    BYTE PTR es:[edi],dx
  420568:	repnz mov edi,0xca9bbee3
  42056e:	int    0xa3
  420570:	add    DWORD PTR [edi+0x16],esp
  420573:	xor    DWORD PTR [edi-0x70],esp
  420576:	das    
  420577:	inc    esp
  420578:	hlt    
  420579:	daa    
  42057a:	and    BYTE PTR [ecx-0x78dd2fdf],cl
  420580:	xchg   ebx,eax
  420581:	std    
  420582:	lock fidiv DWORD PTR [ebp+0x65]
  420586:	pushf  
  420587:	(bad)  
  420589:	pop    edi
  42058a:	loopne 0x4205c5
  42058c:	jecxz  0x420519
  42058e:	xchg   ecx,eax
  42058f:	popa   
  420590:	sub    al,0x91
  420592:	hlt    
  420593:	pop    eax
  420594:	mov    ds:0xe0bd0858,al
  420599:	arpl   WORD PTR [ecx],bx
  42059b:	pop    ebx
  42059c:	push   esi
  42059d:	sub    edi,esi
  42059f:	mov    eax,ds:0x4f3f5262
  4205a4:	call   0xc49a9e6b
  4205a9:	test   BYTE PTR ss:[eax-0x4],dl
  4205ad:	rol    BYTE PTR [ebx+0x6ed1a297],1
  4205b3:	outs   dx,BYTE PTR ds:[esi]
  4205b4:	test   DWORD PTR [eax-0x12e27efd],edi
  4205ba:	cmc    
  4205bb:	mov    esi,esp
  4205bd:	test   eax,0x58ededf5
  4205c2:	(bad)  
  4205c3:	ror    BYTE PTR [edi-0x26a02688],0x2
  4205ca:	loop   0x42059f
  4205cc:	daa    
  4205cd:	and    eax,0xcf7814b4
  4205d2:	das    
  4205d3:	fisubr DWORD PTR [edx+ecx*1-0x60b58cee]
  4205da:	test   DWORD PTR [ebx+0x63da6aab],esp
  4205e0:	and    esp,eax
  4205e2:	call   0xa7cc70d1
  4205e7:	ins    BYTE PTR es:[edi],dx
  4205e8:	add    DWORD PTR [ebx-0x783f6eaf],esp
  4205ee:	mov    ah,0x78
  4205f0:	jns    0x420624
  4205f2:	stos   BYTE PTR es:[edi],al
  4205f3:	or     ecx,DWORD PTR [ebx+0xd6524f2]
  4205f9:	mov    edx,0xb8230ede
  4205fe:	mov    ds:0x2c7959fa,eax
  420603:	int    0x88
  420605:	jl     0x4205e2
  420607:	push   eax
  420608:	cdq    
  420609:	stos   BYTE PTR es:[edi],al
  42060a:	mov    esp,0x5b85358f
  42060f:	scas   al,BYTE PTR es:[edi]
  420610:	push   0x6a9fc147
  420615:	sub    esi,DWORD PTR [ebp+ecx*1+0x50]
  420619:	rcr    dl,1
  42061b:	sub    esi,0xddbf4c9e
  420621:	inc    ecx
  420622:	jl     0x4205a6
  420624:	bound  eax,QWORD PTR [ecx+eiz*2+0x79]
  420628:	mov    esp,0x4168ce05
  42062d:	mov    BYTE PTR ss:[eax+0x68],dl
  420631:	and    esp,DWORD PTR [edi-0x58]
  420634:	bound  edx,QWORD PTR [edx+ebp*2]
  420637:	add    bh,ch
  420639:	jmp    0xe13e:0x72bba272
  420640:	mov    cl,BYTE PTR [esi]
  420642:	or     eax,0x6d62fd0a
  420647:	std    
  420648:	outs   dx,DWORD PTR ds:[esi]
  420649:	pop    eax
  42064a:	mov    WORD PTR [eax-0x56],cs
  42064d:	jne    0x420612
  42064f:	pusha  
  420650:	hlt    
  420651:	fs fst st(1)
  420654:	or     eax,0x2bc81e93
  420659:	ss xchg esp,eax
  42065b:	clc    
  42065c:	xchg   edi,ecx
  42065e:	gs mov al,0x7e
  420661:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420662:	mov    bh,0xfe
  420664:	adc    al,0x67
  420666:	icebp  
  420667:	sahf   
  420668:	push   ds
  420669:	or     BYTE PTR [esi],dh
  42066b:	outs   dx,BYTE PTR gs:[esi]
  42066d:	sbb    al,0xfd
  42066f:	add    DWORD PTR [ebx],esp
  420671:	ret    
  420672:	adc    edi,DWORD PTR [esp+eiz*2-0x6f]
  420676:	or     eax,0x187426c1
  42067b:	sbb    BYTE PTR [ecx],dh
  42067d:	ins    BYTE PTR es:[edi],dx
  42067e:	and    eax,0x91ccf5a9
  420683:	stc    
  420684:	aad    0x30
  420686:	outs   dx,DWORD PTR ds:[esi]
  420687:	or     ebp,DWORD PTR [ebx]
  420689:	push   esp
  42068a:	add    eax,0xe4c6d3b5
  42068f:	sub    DWORD PTR [eax+edx*8-0x41c2d3ca],edi
  420696:	pop    ss
  420697:	cmp    eax,DWORD PTR [ebx+edx*8]
  42069a:	jno    0x42070c
  42069c:	(bad)  
  42069d:	mov    ebx,0xd04a739e
  4206a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4206a3:	cmp    ah,BYTE PTR [ecx-0x379eb4d4]
  4206a9:	sar    DWORD PTR [edi+0x37],1
  4206ac:	and    eax,0x3e3ea530
  4206b1:	nop
  4206b2:	xchg   DWORD PTR [ecx+eiz*1],esp
  4206b5:	dec    esi
  4206b6:	xor    DWORD PTR [esi+eax*1-0x7134258c],ecx
  4206bd:	(bad)  
  4206be:	shrd   DWORD PTR ds:0xf8f604e6,esi,cl
  4206c5:	sub    ah,BYTE PTR [ebp-0x22f3fc59]
  4206cb:	(bad)  
  4206cc:	(bad)  
  4206cd:	push   esp
  4206ce:	scas   eax,DWORD PTR es:[edi]
  4206cf:	aas    
  4206d0:	mov    bl,0x18
  4206d2:	fwait
  4206d3:	mov    edx,DWORD PTR [ecx]
  4206d5:	add    DWORD PTR [ebp+0x2d],eax
  4206d8:	das    
  4206d9:	add    bh,BYTE PTR [esi-0x2b]
  4206dc:	ror    DWORD PTR [esi-0x47],cl
  4206df:	add    al,0xde
  4206e1:	popa   
  4206e2:	pop    ebp
  4206e3:	xor    DWORD PTR [esi-0x6e219f13],esi
  4206e9:	mov    edi,0x6ccbaa4a
  4206ee:	sbb    esi,DWORD PTR [ebx-0x26]
  4206f1:	dec    ecx
  4206f2:	aad    0x1c
  4206f4:	sahf   
  4206f5:	add    edx,DWORD PTR [eax+0x430f8de]
  4206fb:	and    edx,0x55
  4206fe:	inc    edx
  4206ff:	int    0xbb
  420701:	sahf   
  420702:	lods   eax,DWORD PTR ds:[esi]
  420703:	xor    ch,ah
  420705:	dec    ecx
  420706:	lock mov al,ds:0xb9e46ee
  42070c:	bound  ebp,QWORD PTR [edi]
  42070e:	sbb    al,0x7a
  420710:	and    al,BYTE PTR [eax+0x4f]
  420713:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420714:	xchg   DWORD PTR [edi],esp
  420716:	test   DWORD PTR [eax],esp
  420718:	xchg   BYTE PTR [eax],ch
  42071a:	inc    ecx
  42071b:	(bad)  [edi+0x7d]
  42071e:	jmp    0xde79:0xe97e6fe0
  420725:	sub    eax,0xe0b34624
  42072a:	mov    DWORD PTR [eax+0x6],ebx
  42072d:	inc    edi
  42072e:	xchg   ecx,eax
  42072f:	mov    esi,0xe5f56205
  420734:	call   0xfd693e8
  420739:	jb     0x42074d
  42073b:	hlt    
  42073c:	push   edi
  42073d:	call   0x1c47:0x3ce7691
  420744:	sbb    BYTE PTR [edx+0x60],dh
  420747:	stos   DWORD PTR es:[edi],eax
  420748:	pop    esi
  420749:	jae    0x420717
  42074b:	xchg   ebx,eax
  42074c:	ror    DWORD PTR [ebx-0x2c029b73],cl
  420752:	lds    eax,FWORD PTR [esp+ebx*1-0x3e3db498]
  420759:	push   eax
  42075a:	(bad)  
  42075b:	inc    DWORD PTR [eax]
  42075d:	add    BYTE PTR [eax],al
  42075f:	add    BYTE PTR [eax],al
  420761:	add    BYTE PTR [ecx],ah
  420763:	pop    ds
  420764:	fld    QWORD PTR [esi]
  420766:	inc    esi
  420768:	sti    
  420769:	aas    
  42076a:	jb     0x42078b
  42076c:	add    edx,edx
  42076e:	pop    edi
  42076f:	inc    eax
  420770:	mov    ecx,0x1818fb1
  420775:	add    dl,dh
  420777:	add    al,0x0
  420779:	add    al,al
  42077b:	sti    
  42077c:	out    0x83,al
  42077e:	jno    0x4207b9
  420780:	mov    WORD PTR [esi+0x1714a493],ds
  420786:	jecxz  0x4207c2
  420788:	aas    
  420789:	int3   
  42078a:	push   ecx
  42078b:	push   0x61eb2c08
  420790:	in     eax,dx
  420791:	inc    edi
  420792:	aad    0x37
  420794:	lods   eax,DWORD PTR ds:[esi]
  420795:	nop
  420796:	sbb    al,0x8e
  420798:	jmp    0xa75a:0x9e5cf149
  42079f:	and    eax,esp
  4207a1:	cmc    
  4207a2:	pop    ebx
  4207a3:	test   DWORD PTR [edi],esp
  4207a5:	stos   DWORD PTR es:[edi],eax
  4207a6:	push   cs
  4207a7:	dec    ebx
  4207a8:	mov    ah,0x6a
  4207aa:	mov    ecx,0xbf9e57d1
  4207af:	das    
  4207b0:	push   esp
  4207b1:	int3   
  4207b2:	sbb    dh,BYTE PTR fs:[esi-0x13]
  4207b6:	pop    ebx
  4207b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4207b8:	aam    0x45
  4207ba:	bound  eax,QWORD PTR [ebp+0x7a37d5ac]
  4207c0:	(bad)  
  4207c1:	hlt    
  4207c2:	xchg   ebp,eax
  4207c3:	arpl   si,bx
  4207c5:	push   0x79
  4207c7:	fdiv   QWORD PTR [esi]
  4207c9:	call   0x8810:0x77ae230d
  4207d0:	jg     0x42079d
  4207d2:	iret   
  4207d3:	mov    ebx,0x1a155d7a
  4207d8:	icebp  
  4207d9:	mov    esp,0xd4133163
  4207de:	cmp    dh,BYTE PTR [ebx]
  4207e0:	and    DWORD PTR [ecx+0x4d],edi
  4207e3:	fdivr  QWORD PTR [edx+eax*8]
  4207e6:	add    al,0xb1
  4207e8:	call   0x127d:0x943ac98d
  4207ef:	loop   0x4207ef
  4207f1:	sub    DWORD PTR [esi+0x353a7801],edx
  4207f7:	inc    ebx
  4207f8:	xor    cl,bh
  4207fa:	dec    edi
  4207fb:	ins    BYTE PTR es:[edi],dx
  4207fc:	inc    ecx
  4207fd:	aam    0x17
  4207ff:	and    eax,0xfa4de67a
  420804:	mov    BYTE PTR [ecx],dh
  420806:	sahf   
  420807:	ss daa 
  420809:	dec    esi
  42080a:	mov    ebx,ecx
  42080c:	(bad)  
  42080d:	lock sar DWORD PTR [edi+0x2b],cl
  420811:	test   eax,0x3bb06637
  420816:	inc    esp
  420817:	stos   DWORD PTR es:[edi],eax
  420818:	jmp    0x2e3a9d9a
  42081d:	adc    ch,BYTE PTR [eax+0x7d]
  420820:	rcr    edi,0x23
  420823:	fwait
  420824:	and    eax,0xc04e03c6
  420829:	xchg   bx,ax
  42082b:	adc    BYTE PTR [ebx+edi*1-0x33],al
  42082f:	cmp    eax,0x81551119
  420834:	and    eax,0xd53d2d6f
  420839:	mov    edx,DWORD PTR [esi-0x1a]
  42083c:	cwde   
  42083d:	cmp    ebp,0xc06f539c
  420843:	inc    eax
  420844:	push   0x20
  420846:	mov    esi,0x78167dc4
  42084b:	lods   al,BYTE PTR ds:[esi]
  42084c:	lahf   
  42084d:	mov    edx,0xb6b4b46e
  420852:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420853:	jnp    0x4207f3
  420855:	pop    ecx
  420856:	adc    al,0x37
  420858:	fldenv [eax+0x27]
  42085b:	repnz mov ebx,0x8a423a18
  420861:	retf   0xbb2b
  420864:	xchg   esi,eax
  420865:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420866:	in     al,0x1
  420868:	jecxz  0x42082d
  42086a:	fsub   DWORD PTR [ecx+0x78f6e1e9]
  420870:	or     eax,0x4d6c96fe
  420875:	idiv   DWORD PTR [esi+0x7c]
  420878:	cld    
  420879:	push   0x466d962
  42087e:	xchg   BYTE PTR [edi+ebp*4+0x696606c9],bl
  420885:	or     ah,dl
  420887:	int    0x2c
  420889:	cld    
  42088a:	and    edx,DWORD PTR [edi+0x3922dd83]
  420890:	int3   
  420891:	pushf  
  420892:	cmc    
  420893:	faddp  st(6),st
  420895:	ss push esp
  420897:	push   0x2e
  420899:	pop    es
  42089a:	sbb    esp,DWORD PTR [edx]
  42089c:	jo     0x4208a2
  42089e:	ja     0x42086d
  4208a0:	jmp    0x5440c9c4
  4208a5:	cmp    bl,BYTE PTR es:[ebx]
  4208a8:	cmp    al,0xa0
  4208aa:	and    eax,0x669ecfcd
  4208af:	addr16 mov al,0x57
  4208b2:	jmp    0x420913
  4208b4:	retf   
  4208b5:	dec    esp
  4208b6:	mov    al,ds:0x7ec72b0e
  4208bb:	stc    
  4208bc:	icebp  
  4208bd:	xlat   BYTE PTR ds:[ebx]
  4208be:	les    ecx,FWORD PTR [ecx+ebp*4]
  4208c1:	cmp    eax,0x91ec5256
  4208c6:	mov    ds:0x184237d8,al
  4208cb:	adc    ecx,0x76
  4208ce:	or     BYTE PTR [ecx+eiz*4-0x2f813669],bh
  4208d5:	inc    ebp
  4208d6:	hlt    
  4208d7:	xchg   ebp,eax
  4208d8:	mov    BYTE PTR [edx+ecx*4-0x11c30523],dh
  4208df:	mov    bh,0xfd
  4208e1:	outs   dx,BYTE PTR ds:[esi]
  4208e2:	dec    ebx
  4208e3:	outs   dx,DWORD PTR ds:[esi]
  4208e4:	in     eax,dx
  4208e5:	xor    DWORD PTR [edx],eax
  4208e7:	mov    ds:0x1651c577,eax
  4208ec:	mov    dh,0x49
  4208ee:	adc    al,0x66
  4208f0:	rcr    DWORD PTR [edi+0x4e],cl
  4208f3:	sbb    BYTE PTR [esi],0xed
  4208f6:	mov    ds:0xa68c306,eax
  4208fb:	rcr    BYTE PTR ds:0x79a399c9,0xff
  420902:	adc    ebx,DWORD PTR [ebx]
  420904:	push   eax
  420905:	or     BYTE PTR [edx+esi*8+0x107b3970],al
  42090c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42090d:	cli    
  42090e:	nop
  42090f:	test   DWORD PTR [ebp+0x3f],ebx
  420912:	mov    ds:0x236d20aa,al
  420917:	nop
  420918:	mov    al,ds:0x43337d10
  42091d:	inc    esp
  42091e:	rol    BYTE PTR [ebp+0x30],1
  420921:	inc    esp
  420922:	adc    edi,eax
  420924:	sbb    BYTE PTR [ecx+0x7],ch
  420927:	push   eax
  420928:	pop    eax
  420929:	jno    0x4208dc
  42092b:	jne    0x420957
  42092d:	lock mov ebx,0x3d29d281
  420933:	fidiv  WORD PTR [ecx]
  420935:	fsub   DWORD PTR [edx-0xdece844]
  42093b:	bnd ja 0x42096a
  42093e:	test   al,0xda
  420940:	aad    0x27
  420942:	bnd jbe 0x420975
  420945:	dec    ebp
  420946:	push   esp
  420947:	pusha  
  420948:	leave  
  420949:	xor    BYTE PTR [ebx],ch
  42094b:	leave  
  42094c:	cmp    BYTE PTR [edx],cl
  42094e:	mov    BYTE PTR [ecx],ch
  420950:	enter  0xe9d7,0x6c
  420954:	or     BYTE PTR ds:0xd0d3a409,dl
  42095a:	xchg   esi,eax
  42095b:	clc    
  42095c:	in     eax,dx
  42095d:	push   edi
  42095e:	je     0x4209a5
  420960:	mov    dh,0x56
  420962:	sub    cl,dh
  420964:	add    BYTE PTR [ebx-0x41],0x5c
  420968:	jmp    FWORD PTR [edi]
  42096a:	adc    cl,BYTE PTR [esp+esi*2-0x5b]
  42096e:	frndint 
  420970:	nop
  420971:	ficomp DWORD PTR [ecx+0x17]
  420974:	mov    cl,0x9f
  420976:	scas   al,BYTE PTR es:[edi]
  420977:	icebp  
  420978:	aaa    
  420979:	imul   eax,edi,0x7
  42097c:	stos   BYTE PTR es:[edi],al
  42097d:	fcmovnbe st,st(4)
  42097f:	ret    0xb78a
  420982:	outs   dx,BYTE PTR ds:[esi]
  420983:	add    edx,ecx
  420985:	push   ecx
  420986:	es xor eax,0xefaa2ac7
  42098c:	clc    
  42098d:	sub    ecx,DWORD PTR [edx+edx*4-0x56]
  420991:	push   edx
  420992:	aaa    
  420993:	adc    edi,DWORD PTR [esi+0x226c4254]
  420999:	iret   
  42099a:	jae    0x4209e2
  42099c:	dec    edi
  42099d:	jb     0x420a0c
  42099f:	test   bh,ch
  4209a1:	and    eax,0x4d2e31ce
  4209a6:	pop    ecx
  4209a7:	(bad)  [ecx+0x5b]
  4209aa:	popa   
  4209ab:	cld    
  4209ac:	idiv   BYTE PTR [ecx]
  4209ae:	jl     0x420977
  4209b0:	int3   
  4209b1:	or     ah,BYTE PTR [edi+0x61721ebc]
  4209b7:	mov    cl,0x87
  4209b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4209ba:	push   edi
  4209bb:	xchg   ebx,esp
  4209bd:	jns    0x420994
  4209bf:	sbb    eax,0x4f6e57d2
  4209c4:	fdiv   DWORD PTR [ebx+0x54]
  4209c7:	sub    DWORD PTR [eax],0x94e43076
  4209cd:	push   0x4b
  4209cf:	imul   esi,DWORD PTR [ebp+0x6ce6e9a1],0x37
  4209d6:	in     eax,0x6f
  4209d8:	inc    ebx
  4209d9:	push   esi
  4209da:	inc    ebp
  4209db:	ins    DWORD PTR es:[edi],dx
  4209dc:	xor    edx,DWORD PTR [ebp-0x47219a16]
  4209e2:	ins    DWORD PTR es:[edi],dx
  4209e3:	cmp    al,BYTE PTR [edx+eiz*2+0x19]
  4209e7:	pop    esi
  4209e8:	fdivr  DWORD PTR [ebp+0x74255288]
  4209ee:	push   DWORD PTR [ebx+ebp*1-0x663f78c]
  4209f5:	sbb    dh,bl
  4209f7:	jns    0x4209a9
  4209f9:	mov    cl,0xfd
  4209fb:	mov    esp,0x99975a9d
  420a00:	in     al,0x3e
  420a02:	add    ch,dl
  420a04:	sbb    esp,edx
  420a06:	pop    esp
  420a07:	mov    esi,0xad8b9cb8
  420a0c:	arpl   bx,cx
  420a0e:	inc    esi
  420a0f:	cli    
  420a10:	adc    DWORD PTR [ebp-0xb],ebx
  420a13:	jb     0x4209ab
  420a15:	lock ja 0x4209b1
  420a18:	ins    BYTE PTR es:[edi],dx
  420a19:	xchg   edi,eax
  420a1a:	lea    ebx,[ebp+0x28]
  420a1d:	jmp    0x420a6e
  420a1f:	pop    edx
  420a20:	add    bl,BYTE PTR [ebx+0x46]
  420a23:	jno    0x4209ac
  420a25:	push   ecx
  420a26:	and    BYTE PTR [edx-0x4660533e],bl
  420a2c:	or     al,0x2
  420a2e:	adc    al,0xc3
  420a30:	out    dx,eax
  420a31:	cmp    DWORD PTR [eax+0x54],0x51fa94c9
  420a38:	retf   
  420a39:	jne    0x4209e8
  420a3b:	popa   
  420a3c:	push   ebx
  420a3d:	cmp    ch,al
  420a3f:	outs   dx,BYTE PTR ds:[esi]
  420a40:	sub    al,0xa0
  420a42:	dec    ebp
  420a43:	mov    ebp,0x27cc1ac0
  420a48:	mov    cl,0xb9
  420a4a:	loopne 0x420abb
  420a4c:	pop    edx
  420a4d:	ret    
  420a4e:	imul   eax,eax,0x87e576f
  420a54:	cs mov dh,0x9e
  420a57:	sahf   
  420a58:	push   0xffffffb3
  420a5a:	pop    ecx
  420a5b:	cli    
  420a5c:	or     bl,BYTE PTR [ecx]
  420a5e:	ret    0xdf4b
  420a61:	jecxz  0x420ac3
  420a63:	jo     0x420a25
  420a65:	test   al,0xb5
  420a67:	ss shl dh,0x6b
  420a6b:	push   edx
  420a6c:	fiadd  DWORD PTR [ebp+0xc]
  420a6f:	aas    
  420a70:	mov    ds:0xd4589c86,al
  420a75:	and    BYTE PTR [eax-0x1dedc6a],dh
  420a7b:	xlat   BYTE PTR ds:[ebx]
  420a7c:	push   0xffffffcc
  420a7e:	nop    esi
  420a81:	xor    eax,0xc4194440
  420a86:	adc    eax,0x1c2676dc
  420a8b:	fcmovbe st,st(1)
  420a8d:	pop    edx
  420a8e:	shl    ah,1
  420a90:	jl     0x420b0b
  420a92:	test   al,0xe6
  420a94:	mov    edx,DWORD PTR [eax+eiz*1]
  420a97:	jbe    0x420a7a
  420a99:	xchg   ebx,eax
  420a9a:	pusha  
  420a9b:	and    dl,dl
  420a9d:	push   cs
  420a9e:	lds    eax,FWORD PTR [ecx]
  420aa0:	in     eax,dx
  420aa1:	sar    ah,cl
  420aa3:	adc    eax,0x949a773
  420aa8:	sbb    bh,BYTE PTR [edx+0x35]
  420aab:	popa   
  420aac:	push   ebp
  420aad:	jmp    0x854c:0x8d5987df
  420ab4:	mov    ecx,0x6fefbd41
  420ab9:	ret    
  420aba:	ins    BYTE PTR es:[edi],dx
  420abb:	pop    ss
  420abc:	in     eax,dx
  420abd:	loope  0x420af6
  420abf:	and    eax,0x16cc7eab
  420ac4:	imul   DWORD PTR [esi-0x3a]
  420ac7:	stc    
  420ac8:	out    0x1c,al
  420aca:	icebp  
  420acb:	enter  0x4a34,0x54
  420acf:	xchg   esp,eax
  420ad0:	push   ds
  420ad1:	ds jmp 0x420ada
  420ad4:	shr    esp,1
  420ad6:	call   0xec75:0x8feb9fe0
  420add:	mov    ch,0xc9
  420adf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420ae0:	add    DWORD PTR [edi+edi*8+0x595d4170],edx
  420ae7:	retf   0x3738
  420aea:	icebp  
  420aeb:	sub    bh,bl
  420aed:	arpl   WORD PTR [edi-0x1c],sp
  420af0:	xor    eax,0x6fa5b9fd
  420af5:	mov    WORD PTR [edx+ecx*8],?
  420af8:	and    edx,ebp
  420afa:	enter  0xc25c,0x27
  420afe:	jecxz  0x420ad6
  420b00:	pop    esi
  420b01:	mov    esp,DWORD PTR [ebp+0x4f0c34c9]
  420b07:	cwde   
  420b08:	sub    BYTE PTR [ebx-0x1af8f2cc],ch
  420b0e:	call   0xcf80:0xa3e35c38
  420b15:	jns    0x420b56
  420b17:	push   es
  420b18:	dec    esi
  420b19:	fist   WORD PTR [esi+0x38ec51cd]
  420b1f:	(bad)
  420b23:	or     DWORD PTR [edx+0x37],edi
  420b26:	rcl    cl,cl
  420b28:	lock mov al,ds:0x2bb5e645
  420b2e:	jmp    0x420b29
  420b30:	pusha  
  420b31:	inc    esp
  420b32:	test   DWORD PTR [esp+eax*1],eax
  420b35:	test   BYTE PTR [edi],0x2
  420b38:	push   eax
  420b39:	daa    
  420b3a:	inc    eax
  420b3b:	bound  eax,QWORD PTR [eax+0x2a]
  420b3e:	lods   al,BYTE PTR ds:[esi]
  420b3f:	into   
  420b40:	xlat   BYTE PTR ds:[ebx]
  420b41:	leave  
  420b42:	jp     0x420b9f
  420b44:	test   bh,dh
  420b46:	or     eax,0x6e6b864f
  420b4b:	inc    esi
  420b4c:	ds sub ah,bh
  420b4f:	or     edi,DWORD PTR [edi-0xacb081c]
  420b55:	dec    esi
  420b56:	and    al,0xa8
  420b58:	pop    edi
  420b59:	mov    esi,0x130dcbb1
  420b5e:	mov    ebx,0xae6bd922
  420b63:	test   eax,0x14580fa8
  420b68:	xchg   esi,eax
  420b69:	call   0x5f0a0d17
  420b6e:	aas    
  420b6f:	in     eax,0xaf
  420b71:	jb     0x420b2f
  420b73:	mov    dh,BYTE PTR [edi+0x6b]
  420b76:	(bad)  
  420b77:	jbe    0x420bea
  420b79:	xlat   BYTE PTR ds:[ebx]
  420b7a:	fiadd  DWORD PTR [ecx-0x13]
  420b7d:	cdq    
  420b7e:	enter  0xe7c,0x29
  420b82:	xor    al,0x82
  420b84:	xchg   DWORD PTR [eax+0x8],edx
  420b87:	xchg   esi,ecx
  420b89:	scas   eax,DWORD PTR es:[edi]
  420b8a:	jl     0x420be8
  420b8c:	retf   
  420b8d:	ins    DWORD PTR es:[edi],dx
  420b8e:	mov    eax,0xc2233bd3
  420b93:	lods   eax,DWORD PTR ds:[esi]
  420b94:	xchg   esi,eax
  420b95:	inc    esi
  420b96:	test   eax,0x1ecd3747
  420b9b:	sti    
  420b9c:	fwait
  420b9d:	mov    ecx,0xb62026a8
  420ba2:	int    0xef
  420ba4:	jmp    0xaf50:0xe1464f73
  420bab:	push   ss
  420bac:	push   ds
  420bad:	lock lods al,BYTE PTR ds:[esi]
  420baf:	cdq    
  420bb0:	repz sbb BYTE PTR [ebx],bh
  420bb3:	mov    ch,BYTE PTR [edi-0x3356758e]
  420bb9:	mov    eax,es
  420bbb:	mov    dh,BYTE PTR [ecx+0x21]
  420bbe:	jo     0x420b68
  420bc0:	mov    DWORD PTR [eax],eax
  420bc2:	mov    edx,edi
  420bc4:	cli    
  420bc5:	mov    ebp,DWORD PTR [ebx+0x52]
  420bc8:	clc    
  420bc9:	frstor ds:0xdfb0088d
  420bcf:	jmp    0x420b86
  420bd1:	inc    edx
  420bd2:	push   cs
  420bd3:	inc    ebx
  420bd4:	iret   
  420bd5:	xchg   edx,eax
  420bd6:	and    esi,DWORD PTR [edi]
  420bd8:	shr    DWORD PTR [ebp+0x6ea43279],cl
  420bde:	push   ds
  420bdf:	aas    
  420be0:	jge    0x420bb8
  420be2:	scas   eax,DWORD PTR es:[edi]
  420be3:	fmul   DWORD PTR [edi]
  420be5:	scas   eax,DWORD PTR es:[edi]
  420be6:	arpl   WORD PTR [edi+0x1cef3ed4],di
  420bec:	sahf   
  420bed:	xor    BYTE PTR [ebx-0x789e7879],ch
  420bf3:	ror    DWORD PTR [eax-0x7df76a80],0x37
  420bfa:	and    ch,BYTE PTR [ecx+eax*2-0x72]
  420bfe:	xchg   edi,eax
  420bff:	xchg   esi,eax
  420c00:	call   FWORD PTR [edi+0x40]
  420c03:	jmp    0x1e2d5850
  420c08:	sub    BYTE PTR [esi+ebp*4],cl
  420c0b:	call   0x1aa6:0xc98c31cc
  420c12:	push   es
  420c13:	sbb    esp,eax
  420c15:	in     al,0xd5
  420c17:	cli    
  420c18:	sbb    DWORD PTR [ebp+0x29],esi
  420c1b:	punpckldq mm7,DWORD PTR [ebp+0xac54c09]
  420c22:	repnz pop edi
  420c24:	stc    
  420c25:	sub    DWORD PTR [ebx-0x66249c1c],esi
  420c2b:	loope  0x420c02
  420c2d:	iret   
  420c2e:	ds inc ebp
  420c30:	loope  0x420c61
  420c32:	scas   al,BYTE PTR es:[edi]
  420c33:	int3   
  420c34:	mov    ecx,0x91fb554a
  420c39:	repz sub al,BYTE PTR [ebx+0x29bd4ee2]
  420c40:	ja     0x420c7c
  420c42:	ins    BYTE PTR es:[edi],dx
  420c43:	push   esp
  420c44:	jmp    0x2072:0x62d6916
  420c4b:	retf   0xa78d
  420c4e:	shl    BYTE PTR [edi-0x48],0x46
  420c52:	mov    cl,0x25
  420c54:	xor    dh,BYTE PTR [ebp-0x3d]
  420c57:	jmp    FWORD PTR [ebp+0x4]
  420c5a:	shl    DWORD PTR [ebp-0x4291c511],cl
  420c60:	lods   al,BYTE PTR ds:[esi]
  420c61:	push   0xffffffa1
  420c63:	push   0xffffff91
  420c65:	or     BYTE PTR [ebx],ah
  420c67:	mov    edi,0xc9998d5e
  420c6c:	add    BYTE PTR [eax],al
  420c6e:	add    BYTE PTR [eax],al
  420c70:	add    BYTE PTR [eax],al
  420c72:	add    DWORD PTR [ebp-0x28],edi
  420c75:	mov    ebp,0xfd65bdfc
  420c7a:	or     cl,BYTE PTR [ecx+0xb65b857]
  420c80:	or     al,0x27
  420c82:	add    DWORD PTR [esi+0x4f20001],0xf61e0000
  420c8c:	add    eax,0xe22b6e86
  420c91:	arpl   WORD PTR [ecx+0x15],di
  420c94:	mov    al,ds:0x5b126101
  420c99:	retf   
  420c9a:	xchg   esi,eax
  420c9b:	xchg   edx,eax
  420c9c:	push   edx
  420c9d:	add    bl,ah
  420c9f:	fcmovnb st,st(7)
  420ca1:	fnstcw WORD PTR [ebx-0xc]
  420ca4:	push   0x46
  420ca6:	mov    dl,0xe7
  420ca8:	pop    eax
  420ca9:	fld    DWORD PTR [ebp+0x2661f1de]
  420caf:	inc    esi
  420cb0:	mov    ah,dl
  420cb2:	aad    0x4b
  420cb4:	dec    eax
  420cb5:	mov    eax,0xcc91190c
  420cba:	cmp    ebx,DWORD PTR [ebp+0x2f]
  420cbd:	mov    esi,0x7bed52bd
  420cc2:	add    cl,0xff
  420cc5:	mov    WORD PTR [esi-0x1d],?
  420cc8:	inc    esp
  420cc9:	xor    BYTE PTR [esi-0x50],0xef
  420ccd:	fwait
  420cce:	in     al,0xa3
  420cd0:	inc    edx
  420cd1:	rol    BYTE PTR [ecx-0x2f],0xc1
  420cd5:	or     ebp,DWORD PTR [ecx]
  420cd7:	shl    BYTE PTR [esp+ebp*4+0x66],cl
  420cdb:	jl     0x420d3d
  420cdd:	into   
  420cde:	(bad)
  420ce1:	addr16 popa 
  420ce3:	xchg   esp,eax
  420ce4:	jb     0x420d2a
  420ce6:	or     BYTE PTR [edi+edi*1],bl
  420ce9:	and    al,0x34
  420ceb:	push   esp
  420cec:	push   0xaf10b69c
  420cf1:	out    dx,al
  420cf2:	neg    BYTE PTR [ecx-0x23]
  420cf5:	popf   
  420cf6:	pop    ds
  420cf7:	add    eax,0x7c2e8507
  420cfc:	aad    0x1d
  420cfe:	cmp    ebp,DWORD PTR [ebx]
  420d00:	mov    cl,0xc4
  420d02:	lahf   
  420d03:	loop   0x420d7c
  420d05:	imul   ebp,DWORD PTR ds:0x93f7270d,0x4e
  420d0c:	pop    es
  420d0d:	jmp    0x420d85
  420d0f:	je     0x420d0e
  420d11:	js     0x420cc6
  420d13:	lock mov BYTE PTR [ebx],0xcc
  420d17:	mov    ecx,0x9b24ba74
  420d1c:	das    
  420d1d:	fidivr DWORD PTR [ecx+0x2e3f0120]
  420d23:	sub    ah,dh
  420d25:	sbb    al,0xb2
  420d27:	fbld   TBYTE PTR [ebp-0x4d4b8694]
  420d2d:	push   ebp
  420d2e:	imul   BYTE PTR [eax-0x1d]
  420d31:	scas   al,BYTE PTR es:[edi]
  420d32:	inc    edx
  420d33:	sar    DWORD PTR [esi+0x6],1
  420d36:	shl    DWORD PTR [ebx],1
  420d38:	shl    BYTE PTR [ebx],1
  420d3a:	dec    ebp
  420d3b:	sub    DWORD PTR [esi],edx
  420d3d:	mov    ch,0xcc
  420d3f:	push   eax
  420d40:	fstp   DWORD PTR ds:0xf5bcf238
  420d46:	pop    ebx
  420d47:	scas   eax,DWORD PTR es:[edi]
  420d48:	jbe    0x420cec
  420d4a:	inc    ecx
  420d4b:	cmp    esp,DWORD PTR gs:[edx]
  420d4e:	and    al,0x39
  420d50:	sti    
  420d51:	outs   dx,BYTE PTR ds:[esi]
  420d52:	scas   al,BYTE PTR es:[edi]
  420d53:	lds    edi,FWORD PTR [edx-0x1c]
  420d56:	lock xor esp,DWORD PTR [edi+ecx*8+0x6adc145]
  420d5e:	cmp    eax,0xd2774ab2
  420d63:	mov    BYTE PTR [ebx+ebx*1],bh
  420d66:	mov    eax,ds:0xd8aea5bd
  420d6b:	cmp    BYTE PTR [edi+0x1c0f7ccf],dl
  420d71:	pop    edx
  420d72:	xor    al,0x1e
  420d74:	ret    
  420d75:	adc    edi,edi
  420d77:	imul   edx,DWORD PTR [ebx],0x4a
  420d7a:	in     eax,0x7a
  420d7c:	mov    ah,0xfd
  420d7e:	scas   eax,DWORD PTR es:[edi]
  420d7f:	dec    eax
  420d80:	sub    ebx,DWORD PTR [ebx-0x4f]
  420d83:	arpl   WORD PTR [eax],sp
  420d85:	aad    0x21
  420d87:	xchg   bh,bl
  420d89:	sub    eax,0x2643a661
  420d8e:	mov    WORD PTR [edi+0x5ecd04d],es
  420d94:	xor    cx,ax
  420d97:	cli    
  420d98:	ja     0x420d7a
  420d9a:	mov    bh,0xd1
  420d9c:	mov    edi,0x6b8ac82a
  420da1:	mov    ch,0xc1
  420da3:	ins    DWORD PTR es:[edi],dx
  420da4:	fwait
  420da5:	shr    dh,0x88
  420da8:	fnstsw WORD PTR [ecx+0x5e63cac1]
  420dae:	fwait
  420daf:	jge    0x420e23
  420db1:	sub    eax,0x7bfc5399
  420db6:	adc    ch,BYTE PTR ds:0xd93f7916
  420dbc:	out    0xac,al
  420dbe:	adc    ebx,DWORD PTR [edx+0x18]
  420dc1:	jno    0x420e22
  420dc3:	cwde   
  420dc4:	cmp    ch,BYTE PTR [edx]
  420dc6:	lahf   
  420dc7:	sub    BYTE PTR [eax+0x671464a3],dl
  420dcd:	jl     0x420e18
  420dcf:	mov    eax,0x8da3f601
  420dd4:	sbb    eax,DWORD PTR [eax+0x4d]
  420dd7:	fadd   QWORD PTR [esi-0x6b2518af]
  420ddd:	ds gs add eax,0x824c3621
  420de4:	lock xor eax,edx
  420de7:	imul   esp,DWORD PTR [esi],0x8dbf9a16
  420ded:	inc    eax
  420dee:	xor    eax,0xe3e43a2e
  420df3:	mov    dh,BYTE PTR [edi+eax*8-0xb]
  420df7:	in     al,dx
  420df8:	sub    ch,BYTE PTR [edx]
  420dfa:	adc    BYTE PTR [ebx+0x542cbc48],0xd5
  420e01:	mov    esi,0xb8355a81
  420e06:	adc    BYTE PTR [esi+0x61],bh
  420e09:	out    0x42,eax
  420e0b:	mov    ds:0x923dd4ac,al
  420e10:	and    esp,DWORD PTR [ebx-0x1c]
  420e13:	sub    BYTE PTR [edx],bh
  420e15:	inc    ah
  420e17:	test   DWORD PTR [edi+0x39f46e17],0xd45195c2
  420e21:	nop
  420e22:	sbb    al,0x5
  420e24:	and    BYTE PTR [ecx],cl
  420e26:	fldcw  WORD PTR [edi-0x38870017]
  420e2c:	repz (bad) 
  420e2e:	mov    bl,0x76
  420e30:	push   edi
  420e31:	add    eax,0x69ca8d6d
  420e36:	jmp    DWORD PTR [ecx-0x2]
  420e39:	cs inc ebp
  420e3b:	and    eax,0x5d26a627
  420e40:	clc    
  420e41:	xchg   esi,eax
  420e42:	add    dh,BYTE PTR [ebx]
  420e44:	inc    edi
  420e45:	add    BYTE PTR [ebx-0x9],0x94
  420e49:	fmul   DWORD PTR [ebp-0x21f46d45]
  420e4f:	mov    eax,ds:0xe560cec0
  420e54:	push   ebx
  420e55:	dec    esp
  420e56:	pop    ebp
  420e57:	or     eax,0x8b45c29c
  420e5c:	xor    bl,dl
  420e5e:	push   cs
  420e5f:	pmulhw mm6,mm6
  420e62:	in     eax,0x84
  420e64:	test   eax,0x29ca6ca0
  420e69:	inc    esi
  420e6a:	jp     0x420e6d
  420e6c:	push   ds
  420e6d:	in     eax,0x36
  420e6f:	mov    cl,0xad
  420e71:	add    eax,0xf57f2846
  420e76:	mov    bl,0x8c
  420e78:	repnz push 0x69574db7
  420e7e:	cmovnp edx,DWORD PTR [esi-0x12]
  420e82:	iret   
  420e83:	(bad)  
  420e85:	cmp    DWORD PTR [eax+0x38],ebx
  420e88:	dec    DWORD PTR [ebx]
  420e8a:	inc    esi
  420e8b:	lds    ebp,FWORD PTR [ebp+0x3898c8a9]
  420e91:	adc    DWORD PTR [eax-0x7ec47632],0x4aae500d
  420e9b:	jp     0x420eae
  420e9d:	daa    
  420e9e:	lahf   
  420e9f:	jge    0x420ef1
  420ea1:	es ins BYTE PTR es:[edi],dx
  420ea3:	inc    ecx
  420ea4:	ret    0x8cf7
  420ea7:	dec    esp
  420ea8:	rcr    DWORD PTR [edx+0x3f4256b0],cl
  420eae:	xor    DWORD PTR [esi],ebx
  420eb0:	sub    eax,0xd4a567b1
  420eb5:	lds    ecx,FWORD PTR [edi+0x88b8fa6]
  420ebb:	les    edi,FWORD PTR [eax+0x1f0c5c4b]
  420ec1:	call   0x5ca1ea30
  420ec6:	frstor ds:0x3c255bfa
  420ecc:	adc    ecx,esi
  420ece:	and    eax,0xbd642aa3
  420ed3:	lods   eax,DWORD PTR ds:[esi]
  420ed4:	outs   dx,BYTE PTR ds:[esi]
  420ed5:	inc    esi
  420ed6:	pop    edx
  420ed7:	sar    DWORD PTR [edi+eax*8-0x75],0x4f
  420edc:	ins    DWORD PTR es:[edi],dx
  420edd:	and    BYTE PTR [ebx-0x151ec9ee],dl
  420ee3:	mov    ?,ecx
  420ee5:	out    0x9d,eax
  420ee7:	jle    0x420f30
  420ee9:	(bad)
  420eec:	test   DWORD PTR [esi-0x3e9c9965],esi
  420ef2:	imul   eax,DWORD PTR [esi+eax*4+0x6ceba898],0xe8ec2ee8
  420efd:	jecxz  0x420f2c
  420eff:	fs sub bh,al
  420f02:	jae    0x420f68
  420f04:	out    dx,eax
  420f05:	and    DWORD PTR [ebx],eax
  420f07:	(bad)  
  420f08:	mov    edx,0xd75bfd65
  420f0d:	sbb    al,0x57
  420f0f:	mov    ebx,0x947f9ba5
  420f14:	rcl    BYTE PTR [edi],0x23
  420f17:	repz shl BYTE PTR [edx+ebp*8],0x3c
  420f1c:	imul   edi,DWORD PTR [ebx+0x31],0x15
  420f20:	dec    eax
  420f21:	imul   esi,esp,0x56
  420f24:	mov    ebx,edi
  420f26:	jge    0x420f22
  420f28:	inc    esp
  420f29:	dec    eax
  420f2a:	(bad)  
  420f2b:	test   al,0x5e
  420f2d:	les    edi,FWORD PTR [edi+0x1ed321f2]
  420f33:	push   0xffffffef
  420f35:	jecxz  0x420ec0
  420f37:	sbb    bl,BYTE PTR [edx]
  420f39:	test   eax,0x8c05bf84
  420f3e:	or     BYTE PTR [edx+0x50],bh
  420f41:	xchg   BYTE PTR [eax-0x27b40f9c],bh
  420f47:	mov    bh,bh
  420f49:	mov    dl,0xbb
  420f4b:	sar    BYTE PTR [ebx],cl
  420f4d:	sub    eax,0x2918a035
  420f52:	xchg   DWORD PTR [edi-0x9],ebx
  420f55:	jns    0x420f26
  420f57:	les    ebp,FWORD PTR [ebp-0x2]
  420f5a:	mov    al,ds:0xb1a3d191
  420f5f:	sbb    BYTE PTR [eax+esi*4],ch
  420f62:	xchg   esp,eax
  420f63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420f64:	push   ecx
  420f65:	sbb    eax,0x849e1601
  420f6a:	push   esp
  420f6b:	mov    cl,0x15
  420f6d:	pusha  
  420f6e:	mov    DWORD PTR [eax+0x77],eax
  420f71:	mov    dl,0x2a
  420f73:	mov    cl,0x14
  420f75:	jb     0x420f82
  420f77:	xchg   edi,eax
  420f78:	inc    edi
  420f79:	call   0xdc9:0x43237f43
  420f80:	xchg   esi,eax
  420f81:	jno    0x420faf
  420f83:	push   eax
  420f84:	repz out dx,al
  420f86:	sbb    al,0xc4
  420f88:	outs   dx,BYTE PTR ds:[esi]
  420f89:	and    eax,0xb549d5e3
  420f8e:	cmp    edx,DWORD PTR ds:0xcc25ea2c
  420f94:	out    dx,eax
  420f95:	or     DWORD PTR [eax+0x45c13d73],edx
  420f9b:	adc    al,0xe7
  420f9d:	cdq    
  420f9e:	push   esi
  420f9f:	hlt    
  420fa0:	cld    
  420fa1:	int    0x10
  420fa3:	jle    0x420fab
  420fa5:	cmp    al,0xf7
  420fa7:	add    BYTE PTR [eax],dh
  420fa9:	aam    0x73
  420fab:	adc    ebp,DWORD PTR [ecx-0x5633a10f]
  420fb1:	push   ecx
  420fb2:	mov    ds:0x997fed70,eax
  420fb7:	add    BYTE PTR [edx+0x33dcc1d2],ch
  420fbd:	ja     0x420ff8
  420fbf:	mov    dl,0x5b
  420fc1:	add    eax,0x4d6fbb0f
  420fc6:	inc    ecx
  420fc7:	ret    
  420fc8:	mov    BYTE PTR [edi+0x15],bl
  420fcb:	push   esi
  420fcc:	iret   
  420fcd:	add    BYTE PTR [ecx+edx*2-0x418b57f1],0xf7
  420fd5:	cli    
  420fd6:	in     eax,dx
  420fd7:	jmp    0x9e5:0xd2df7664
  420fde:	sub    al,0x50
  420fe0:	dec    esi
  420fe1:	jp     0x421039
  420fe3:	adc    eax,0x730fba65
  420fe8:	pop    ds
  420fe9:	sub    esp,eax
  420feb:	sbb    al,0x20
  420fed:	pop    ebx
  420fee:	into   
  420fef:	fiadd  DWORD PTR [ebp+0x4e]
  420ff2:	sub    eax,0x9f7fc8b3
  420ff7:	sbb    eax,esi
  420ff9:	xor    BYTE PTR [edi-0x64d6b7ec],dl
  420fff:	setp   BYTE PTR [ebx+0x5f]
  421003:	push   0x5a
  421005:	mov    esi,0x9145038a
  42100a:	inc    DWORD PTR [ecx-0x747b6b90]
  421010:	sbb    al,0xb2
  421012:	sub    BYTE PTR [ebp+0x4a],ch
  421015:	cmp    BYTE PTR [ebp-0x44],0x61
  421019:	daa    
  42101a:	jbe    0x421006
  42101c:	stos   DWORD PTR es:[edi],eax
  42101d:	pop    ds
  42101e:	push   edx
  42101f:	mov    ds:0x35347333,eax
  421024:	(bad)
  421027:	out    0x19,eax
  421029:	dec    eax
  42102a:	ins    BYTE PTR es:[edi],dx
  42102b:	aaa    
  42102c:	retf   
  42102d:	pop    ebp
  42102e:	xchg   edx,eax
  42102f:	loop   0x420fd4
  421031:	push   ebp
  421032:	sbb    eax,0x21b859dc
  421037:	and    DWORD PTR [edi],edi
  421039:	xor    esp,DWORD PTR [esi+0x24]
  42103c:	int3   
  42103d:	and    edi,DWORD PTR [ecx-0xf05c545]
  421043:	push   0x35
  421045:	xchg   ebx,eax
  421046:	push   edx
  421047:	sub    al,0x72
  421049:	iret   
  42104a:	repz imul edx,DWORD PTR [eax],0xa
  42104e:	dec    esp
  42104f:	xor    edx,DWORD PTR es:[ebp-0x7618fcb9]
  421056:	test   DWORD PTR [ecx+eiz*8],ebx
  421059:	call   0x875d4091
  42105e:	jbe    0x4210cc
  421060:	aas    
  421061:	das    
  421062:	test   al,0x15
  421064:	pop    ss
  421065:	or     eax,0x50b1ab44
  42106a:	neg    ebp
  42106c:	popf   
  42106d:	pop    ds
  42106e:	aam    0x1
  421070:	arpl   bx,si
  421072:	mov    eax,0xc5ba6495
  421077:	int3   
  421078:	sbb    al,0x9c
  42107a:	fprem1 
  42107c:	push   ebp
  42107d:	pop    ecx
  42107e:	xchg   esi,eax
  42107f:	sbb    al,0xec
  421081:	sbb    cl,BYTE PTR [ebp+0x2a]
  421084:	pop    edi
  421085:	add    eax,0xb008720c
  42108a:	pop    edx
  42108b:	sti    
  42108c:	jae    0x421015
  42108e:	pop    es
  42108f:	iret   
  421090:	sub    al,bh
  421092:	(bad)  
  421093:	xchg   edi,eax
  421094:	add    DWORD PTR [edi+0x2e6c8ec4],eax
  42109a:	repz leave 
  42109c:	aas    
  42109d:	in     eax,dx
  42109e:	push   esi
  42109f:	pop    edi
  4210a0:	aaa    
  4210a1:	outs   dx,DWORD PTR ds:[esi]
  4210a2:	pop    ds
  4210a3:	pushf  
  4210a4:	scas   al,BYTE PTR es:[edi]
  4210a5:	add    dh,BYTE PTR [edx]
  4210a7:	mov    ebp,0xaf0d4d01
  4210ac:	enter  0x869a,0x27
  4210b0:	and    eax,0xc7a4e0f0
  4210b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4210b6:	ja     0x421089
  4210b8:	mov    ah,0xd7
  4210ba:	xchg   edi,eax
  4210bb:	or     dl,dl
  4210bd:	ret    0xe265
  4210c0:	or     eax,0x2d3c60a0
  4210c5:	adc    al,0x18
  4210c7:	or     al,0xf5
  4210c9:	jne    0x421139
  4210cb:	mov    esp,0x2efee989
  4210d0:	pusha  
  4210d1:	jbe    0x421057
  4210d3:	not    DWORD PTR gs:[edx+0x2387e3f8]
  4210da:	arpl   WORD PTR [edx+0x12],di
  4210dd:	xor    al,0xf9
  4210df:	test   dh,bh
  4210e1:	loope  0x4210b6
  4210e3:	sub    bl,al
  4210e5:	icebp  
  4210e6:	sub    BYTE PTR [esi+0x6f],0xdb
  4210ea:	mov    eax,ds:0xcabdc92d
  4210ef:	dec    esp
  4210f0:	and    eax,0x8faacfb4
  4210f5:	shr    DWORD PTR ds:0x941cdf0b,0x26
  4210fc:	sbb    ebp,DWORD PTR [ecx-0x59a8b685]
  421102:	or     eax,0xd93d7721
  421107:	fisubr DWORD PTR [ecx+0x14]
  42110a:	mov    eax,0x25ede5bd
  42110f:	pushf  
  421110:	or     BYTE PTR [ebp-0x347ad702],dh
  421116:	sbb    BYTE PTR [edx],ch
  421118:	inc    ebp
  421119:	push   esp
  42111a:	mov    dh,BYTE PTR [esi]
  42111c:	scas   eax,DWORD PTR es:[edi]
  42111d:	adc    al,0xdc
  42111f:	arpl   bp,cx
  421121:	enter  0x7c31,0xcf
  421125:	ret    0xe249
  421128:	aaa    
  421129:	sub    DWORD PTR [edi-0x5a32fa06],ebx
  42112f:	add    BYTE PTR [ebp-0x3],0xc3
  421133:	adc    eax,0xd47e3e3
  421138:	xlat   BYTE PTR ds:[ebx]
  421139:	xchg   BYTE PTR [edi],al
  42113b:	fimul  DWORD PTR [esi-0x6493eb0e]
  421141:	call   0xa9e62251
  421146:	pusha  
  421147:	sbb    DWORD PTR [esp+esi*8-0x7187a203],edx
  42114e:	mov    dh,0x7c
  421150:	xchg   edi,eax
  421151:	pop    ebx
  421152:	xchg   ebp,eax
  421153:	xor    BYTE PTR [ebp-0x1d],ah
  421156:	cmp    cl,0x62
  421159:	je     0x4211c8
  42115b:	outs   dx,DWORD PTR ds:[esi]
  42115c:	adc    DWORD PTR cs:[ecx+0x48],esp
  421160:	xchg   edx,eax
  421161:	inc    ebx
  421162:	scas   al,BYTE PTR es:[edi]
  421163:	stos   DWORD PTR es:[edi],eax
  421164:	mov    esi,0x2d920081
  421169:	xchg   ebp,eax
  42116a:	push   edx
  42116b:	(bad)  
  42116c:	sub    al,0xe7
  42116e:	mov    bh,0xc1
  421170:	stos   BYTE PTR es:[edi],al
  421171:	mov    edx,0x2882d522
  421176:	and    dl,BYTE PTR [edx]
  421178:	pop    eax
  421179:	cmp    DWORD PTR [eax+0x2a],0x0
  42117d:	add    BYTE PTR [eax],al
  42117f:	add    BYTE PTR [eax],al
  421181:	add    BYTE PTR [edi+0x5b2a13cf],al
  421187:	(bad)  
  421188:	mov    edi,0x5549c1ef
  42118d:	cmp    BYTE PTR [esi+0x737dba30],dl
  421193:	mov    eax,DWORD PTR [ecx]
  421195:	add    dl,dh
  421197:	add    al,0x0
  421199:	add    bl,bh
  42119b:	stc    
  42119c:	sbb    bh,BYTE PTR [edx-0x4f]
  42119f:	xchg   edi,eax
  4211a0:	adc    al,0x94
  4211a2:	daa    
  4211a3:	scas   al,BYTE PTR es:[edi]
  4211a4:	lock scas al,BYTE PTR es:[edi]
  4211a6:	jecxz  0x421131
  4211a8:	xor    eax,0xd092bb8a
  4211ad:	ret    
  4211ae:	fiadd  WORD PTR [esi+0x39]
  4211b1:	pop    ecx
  4211b2:	xor    ecx,edx
  4211b4:	mov    ch,0xd1
  4211b6:	add    esp,DWORD PTR [esi+0x78]
  4211b9:	inc    edx
  4211ba:	and    al,0xe
  4211bc:	cmp    bl,BYTE PTR [esi-0x37871ed7]
  4211c2:	cmp    eax,0x15bc69a5
  4211c7:	sti    
  4211c8:	(bad)  
  4211ca:	sbb    ebx,eax
  4211cc:	pop    ecx
  4211cd:	inc    edx
  4211ce:	retf   0xd6c1
  4211d1:	inc    ecx
  4211d2:	iret   
  4211d3:	(bad)  
  4211d4:	xchg   ecx,eax
  4211d5:	xor    DWORD PTR [edx+0x37],ebx
  4211d8:	xor    dl,BYTE PTR [ecx+0x7346f03b]
  4211de:	and    al,0xda
  4211e0:	mov    cl,0x74
  4211e2:	xchg   ebx,eax
  4211e3:	jne    0x421238
  4211e5:	and    ebp,ebp
  4211e7:	cmc    
  4211e8:	std    
  4211e9:	out    0xbb,eax
  4211eb:	into   
  4211ec:	hlt    
  4211ed:	mov    edi,0x5d6c7ecd
  4211f2:	mov    dl,0xd7
  4211f4:	mov    gs:0xf0df8ec7,al
  4211fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4211fb:	leave  
  4211fc:	xchg   DWORD PTR [edi],eax
  4211fe:	retf   0x409c
  421201:	fimul  DWORD PTR [esi]
  421203:	mov    ebx,gs
  421205:	aam    0xfb
  421207:	sbb    DWORD PTR [edx-0x6a93e284],esp
  42120d:	test   al,0xe9
  42120f:	rcl    BYTE PTR [esi],0x13
  421212:	cmp    al,0xcf
  421214:	mov    es,WORD PTR [edi+edx*1]
  421217:	lock je 0x4211ca
  42121a:	mov    edx,0x74902228
  42121f:	mov    edi,0xde4dd695
  421224:	mov    bl,0x42
  421226:	inc    ebp
  421227:	jmp    0xb7918bce
  42122c:	int3   
  42122d:	(bad)  
  42122e:	mov    dh,0x2d
  421230:	hlt    
  421231:	imul   esi,ebx,0x0
  421234:	test   eax,0x3e6e9ff3
  421239:	mov    ds:0xeccba2f4,eax
  42123e:	mov    es,edi
  421240:	jl     0x4211e9
  421242:	sub    ebp,DWORD PTR [ebx+0x31657899]
  421248:	fxch   st(2)
  42124a:	retf   
  42124b:	cmp    eax,0x66552b47
  421250:	in     eax,dx
  421251:	test   al,0xbe
  421253:	mov    al,ds:0x9e1b317b
  421258:	inc    ecx
  421259:	out    dx,al
  42125a:	imul   ecx,esp,0xc8705231
  421260:	xchg   edx,eax
  421261:	pusha  
  421262:	daa    
  421263:	jge    0x42125a
  421265:	inc    esp
  421266:	repnz popf 
  421268:	push   esp
  421269:	ins    BYTE PTR es:[edi],dx
  42126a:	in     eax,dx
  42126b:	and    BYTE PTR [ebp+0x6a9260ae],bl
  421271:	push   edi
  421272:	adc    DWORD PTR [edx+0x642354cc],ebp
  421278:	stos   BYTE PTR es:[edi],al
  421279:	push   es
  42127a:	adc    BYTE PTR [edx-0x4a],bh
  42127d:	inc    esp
  42127e:	push   cs
  42127f:	popf   
  421280:	and    bl,BYTE PTR [ecx]
  421282:	xlat   BYTE PTR ds:[ebx]
  421283:	push   cs
  421284:	test   eax,0xdade7f67
  421289:	xchg   edx,eax
  42128a:	aam    0xc7
  42128c:	pop    esp
  42128d:	mov    WORD PTR [edx],fs
  42128f:	outs   dx,DWORD PTR ds:[esi]
  421290:	sbb    al,0x1f
  421292:	cs aas 
  421294:	clc    
  421295:	sub    eax,0x286d3e56
  42129a:	test   eax,0xce528cc7
  42129f:	mov    eax,ds:0x2c292b64
  4212a4:	sbb    BYTE PTR [esi+0x4c],ah
  4212a7:	sbb    eax,0x9e525bf5
  4212ac:	jmp    0x421249
  4212ae:	sbb    BYTE PTR es:[esp+edi*4],ah
  4212b2:	adc    DWORD PTR [eax],edx
  4212b4:	mov    edx,0xea547e1b
  4212b9:	pop    ebx
  4212ba:	in     eax,dx
  4212bb:	(bad)
  4212be:	mov    ch,0xd9
  4212c0:	mov    dh,0xd2
  4212c2:	ss iret 
  4212c4:	or     DWORD PTR [edi],ebx
  4212c6:	jns    0x4212c9
  4212c8:	sub    BYTE PTR [edi-0x20511d85],cl
  4212ce:	jp     0x421252
  4212d0:	dec    esp
  4212d1:	dec    edx
  4212d2:	xor    eax,esi
  4212d4:	nop
  4212d5:	push   esi
  4212d6:	mov    ecx,0xee6cec58
  4212db:	mov    bl,0xda
  4212dd:	retf   0xacd5
  4212e0:	ja     0x4212b9
  4212e2:	inc    esp
  4212e3:	call   0x5e8685c9
  4212e8:	push   edi
  4212e9:	pop    ebp
  4212ea:	out    dx,al
  4212eb:	bound  ebp,QWORD PTR [ebx]
  4212ed:	retf   
  4212ee:	jge    0x42131a
  4212f0:	xor    al,0x25
  4212f2:	jnp    0x4212c9
  4212f4:	jmp    0x2d11:0x2fd91e50
  4212fb:	arpl   di,cx
  4212fd:	xchg   DWORD PTR [esi+0x37a8c938],esi
  421303:	inc    eax
  421304:	js     0x4212b7
  421306:	stc    
  421307:	mov    edx,0x2241640d
  42130c:	push   ds
  42130d:	loope  0x4212dc
  42130f:	nop
  421310:	rcr    bh,cl
  421312:	sbb    al,0xb9
  421314:	cld    
  421315:	adc    ecx,DWORD PTR ss:[ebx]
  421318:	ror    DWORD PTR [edx-0x71c4d6fa],1
  42131e:	add    BYTE PTR [ebp+edx*1+0x39f199d1],0x9b
  421326:	jns    0x421369
  421328:	hlt    
  421329:	mov    BYTE PTR [ecx],bh
  42132b:	push   es
  42132c:	iret   
  42132d:	pop    ebp
  42132e:	shl    BYTE PTR ds:0xd4f2d271,1
  421334:	sbb    BYTE PTR [esi+0x23c32b34],ch
  42133a:	or     DWORD PTR [ebp+edi*8-0x27],ebp
  42133e:	(bad)  
  42133f:	mov    esp,0xdeff7626
  421344:	ja     0x421309
  421346:	push   ss
  421347:	stc    
  421348:	sub    eax,0xa597fc59
  42134d:	js     0x421374
  42134f:	sub    al,0xfe
  421351:	sbb    eax,0xaab8dd09
  421356:	js     0x421323
  421358:	pop    es
  421359:	stos   BYTE PTR es:[edi],al
  42135a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42135b:	jl     0x4213c3
  42135d:	(bad)  
  42135e:	frstor [eax]
  421360:	stc    
  421361:	js     0x421355
  421363:	add    eax,DWORD PTR [ebp+0x63]
  421366:	mov    ecx,0x2123402e
  42136b:	imul   ebx,esi,0x4f4a4697
  421371:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421372:	mov    esp,0x8a12ace1
  421377:	mov    esp,0x298ce236
  42137c:	cmp    eax,0xaa3e1691
  421381:	add    edx,ecx
  421383:	leave  
  421384:	sti    
  421385:	or     al,0xf4
  421387:	dec    esi
  421388:	jecxz  0x421333
  42138a:	sub    al,0xa5
  42138c:	jmp    0x4213b2
  42138e:	jbe    0x42135e
  421390:	scas   al,BYTE PTR es:[edi]
  421391:	mov    eax,0x764ed774
  421396:	imul   ebx,DWORD PTR [esi-0x1d],0xffffffdf
  42139a:	popa   
  42139b:	aaa    
  42139c:	pusha  
  42139d:	lods   al,BYTE PTR ds:[esi]
  42139e:	mov    edx,0x9d4666a2
  4213a3:	inc    edi
  4213a4:	lahf   
  4213a5:	pop    esp
  4213a6:	or     esi,DWORD PTR [edi+ebp*8-0x3]
  4213aa:	jbe    0x42132e
  4213ac:	pop    esp
  4213ad:	add    al,0xb6
  4213af:	inc    esp
  4213b0:	mov    dh,0xa7
  4213b2:	cmp    al,0x44
  4213b4:	int3   
  4213b5:	mov    ds,WORD PTR [esi+0x2d2b8cda]
  4213bb:	xor    DWORD PTR ds:0xe01eb07d,0xc
  4213c2:	out    0x5a,eax
  4213c4:	mov    ebx,0xcbf99c65
  4213c9:	xchg   edi,eax
  4213ca:	xor    BYTE PTR [ebp-0x39],dh
  4213cd:	pop    ss
  4213ce:	jg     0x421351
  4213d0:	sbb    eax,0x20f84952
  4213d5:	aam    0xe7
  4213d7:	push   0x3db053e8
  4213dc:	jno    0x421376
  4213de:	mov    ecx,0xb4ba39d0
  4213e3:	xchg   edi,eax
  4213e4:	xchg   BYTE PTR ds:0x8b0f972d,bh
  4213ea:	push   ss
  4213eb:	sub    al,BYTE PTR [ebx-0xc985778]
  4213f1:	pushf  
  4213f2:	in     al,dx
  4213f3:	or     DWORD PTR [ebp+0x5e2c2ab8],esp
  4213f9:	scas   eax,DWORD PTR es:[edi]
  4213fa:	jl     0x4213bf
  4213fc:	loopne 0x4213b3
  4213fe:	jle    0x4213bf
  421400:	xor    DWORD PTR ds:0x6facf17f,eax
  421406:	popf   
  421407:	mov    ah,0xe
  421409:	mov    esi,0x542b1c48
  42140e:	popf   
  42140f:	arpl   WORD PTR [ebx-0x78],bx
  421412:	enter  0x9799,0x98
  421416:	test   BYTE PTR [ebp-0x4563f2f2],bl
  42141c:	or     al,0xf5
  42141e:	aaa    
  42141f:	in     al,0xa2
  421421:	xor    eax,DWORD PTR [eax+0x4a3ba0b]
  421427:	pop    ebp
  421428:	daa    
  421429:	inc    edi
  42142a:	(bad)  
  42142b:	jg     0x421450
  42142d:	mov    esp,0x712ccec
  421432:	jno    0x4213ca
  421434:	mov    cl,0x95
  421436:	frstor [edi-0x57]
  421439:	dec    esi
  42143a:	adc    ah,dl
  42143c:	cdq    
  42143d:	and    al,0xe1
  42143f:	xor    BYTE PTR [esi+0x8],bh
  421442:	imul   ebx,DWORD PTR [ebx-0x660b0602],0x4311d94b
  42144c:	and    al,0x7c
  42144e:	jae    0x4214ae
  421450:	int    0x16
  421452:	test   DWORD PTR [ebp+0x31559581],edx
  421458:	sbb    cl,dh
  42145a:	test   DWORD PTR ds:0x5b8eebf6,eax
  421460:	es sub eax,0x12e5ccc3
  421466:	mov    BYTE PTR [ecx],bh
  421468:	cmp    BYTE PTR [ebx+0x60],0x94
  42146c:	cld    
  42146d:	ins    DWORD PTR es:[edi],dx
  42146e:	jge    0x421410
  421470:	and    dh,ch
  421472:	mov    WORD PTR [ebp-0x405667fd],gs
  421478:	stc    
  421479:	in     al,dx
  42147a:	push   cs
  42147b:	fbld   TBYTE PTR ds:0x2487dc8b
  421481:	push   esi
  421482:	inc    ebp
  421483:	test   al,0x90
  421485:	mov    eax,0x1d9e355
  42148a:	add    ah,dh
  42148c:	scas   eax,DWORD PTR es:[edi]
  42148d:	mov    BYTE PTR [edx],al
  42148f:	xchg   DWORD PTR [ecx+0x4f5206a9],edi
  421495:	xchg   ebx,eax
  421496:	les    edi,FWORD PTR [eax+0x121e09cf]
  42149c:	loopne 0x42146c
  42149e:	ins    BYTE PTR es:[edi],dx
  42149f:	jns    0x4214a6
  4214a1:	mov    BYTE PTR [ebx+0x6c050d32],dl
  4214a7:	pop    edx
  4214a8:	test   BYTE PTR [ebx],dl
  4214aa:	xor    BYTE PTR [eax-0x5aadbbef],ch
  4214b0:	das    
  4214b1:	mov    eax,ds:0xec5215e3
  4214b6:	sbb    ah,BYTE PTR [ebx]
  4214b8:	sub    ecx,DWORD PTR [esi+eiz*4+0x9e0c2b4]
  4214bf:	ror    BYTE PTR ds:0xe8af2817,0x4c
  4214c6:	ins    BYTE PTR es:[edi],dx
  4214c7:	xor    eax,DWORD PTR ds:0x98f67545
  4214cd:	cmp    al,0xc1
  4214cf:	jmp    0xe7f7:0x1f82b575
  4214d6:	loope  0x421479
  4214d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4214d9:	data16 rcr BYTE PTR [eax-0x5e97447e],0x6f
  4214e1:	adc    DWORD PTR ds:0x975816d,0x58
  4214e8:	adc    edi,ebp
  4214ea:	mov    ecx,0xbbad1fa7
  4214ef:	cmp    al,dh
  4214f1:	or     BYTE PTR [eax],dh
  4214f3:	test   DWORD PTR [edi-0x40c7e495],edi
  4214f9:	shr    BYTE PTR [esi+0x4cb112c9],0x3
  421500:	dec    eax
  421501:	cmp    ebp,DWORD PTR [edi+0x1258cf3a]
  421507:	icebp  
  421508:	popa   
  421509:	out    dx,eax
  42150a:	imul   esp,DWORD PTR [edi+0x5f],0xffffffd2
  42150e:	fdivr  DWORD PTR [esi+ecx*8]
  421511:	adc    ecx,DWORD PTR [ecx]
  421513:	ret    
  421514:	pop    edi
  421515:	sbb    ch,al
  421517:	psubb  mm5,QWORD PTR [ebx+0x9]
  42151b:	stos   BYTE PTR es:[edi],al
  42151c:	fdiv   DWORD PTR [ecx+0x10d9909b]
  421522:	clc    
  421523:	nop
  421524:	int3   
  421525:	ret    0xdcc
  421528:	mov    esi,0x2f912d8a
  42152d:	push   ecx
  42152e:	mov    bl,0x15
  421530:	pop    ebx
  421531:	push   0x5
  421533:	pushf  
  421534:	push   ebx
  421535:	sub    eax,0x575175c8
  42153a:	push   esp
  42153b:	mov    ah,0x2f
  42153d:	outs   dx,DWORD PTR ds:[esi]
  42153e:	setle  BYTE PTR [edx-0x63a6957b]
  421545:	inc    BYTE PTR [edi+0x5e]
  421548:	fcmovnb st,st(2)
  42154a:	adc    DWORD PTR [ebx-0x33dfe7ee],ecx
  421550:	xchg   ebx,eax
  421551:	pop    esi
  421552:	mov    dh,0x59
  421554:	jle    0x4215af
  421556:	mov    dh,0x25
  421558:	cmp    BYTE PTR [eax+ebp*1+0x53],dl
  42155c:	or     esp,DWORD PTR [ebp-0x6e0b303a]
  421562:	mov    cl,0x19
  421564:	pusha  
  421565:	mov    ds:0x78fe1c42,eax
  42156a:	push   edi
  42156b:	(bad)  
  42156c:	shl    BYTE PTR [edx+0x4e],cl
  42156f:	shl    BYTE PTR [ebx],cl
  421571:	push   esp
  421572:	or     eax,0xea4ac5e1
  421577:	pop    esp
  421578:	fild   DWORD PTR [eax-0x33]
  42157b:	or     ch,BYTE PTR [ebx-0x7976b312]
  421581:	xchg   edx,eax
  421582:	or     DWORD PTR [edx],0x7e5d6c13
  421588:	jbe    0x4215e6
  42158a:	xchg   edi,eax
  42158b:	inc    ecx
  42158c:	add    DWORD PTR [eax+0x1c16fb80],0xffffffe7
  421593:	jno    0x421538
  421595:	je     0x4215b3
  421597:	push   edi
  421598:	pop    ebp
  421599:	addr16 push ebx
  42159b:	jb     0x42160e
  42159d:	xor    eax,0xbd870017
  4215a2:	call   0xe4e0903b
  4215a7:	xlat   BYTE PTR ds:[ebx]
  4215a8:	mov    esp,0xc8fe238b
  4215ad:	int    0xb4
  4215af:	push   esp
  4215b0:	sbb    BYTE PTR [eax+esi*8],bl
  4215b3:	addr16 popa 
  4215b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4215b6:	icebp  
  4215b7:	xchg   esp,eax
  4215b8:	in     al,dx
  4215b9:	pop    eax
  4215ba:	push   ecx
  4215bb:	mov    bh,0xb7
  4215bd:	pushf  
  4215be:	pop    es
  4215bf:	jo     0x421570
  4215c1:	mov    bh,0xdc
  4215c3:	test   DWORD PTR [esi],eax
  4215c5:	mov    ds:0x1b6df1bb,eax
  4215ca:	xchg   ebx,eax
  4215cb:	jg     0x421637
  4215cd:	or     DWORD PTR [edi+0x4c],ebp
  4215d0:	mov    edx,DWORD PTR [esi]
  4215d2:	xchg   esp,eax
  4215d3:	setl   BYTE PTR [edi+0x45]
  4215d7:	mov    dh,0x4b
  4215d9:	enter  0xbeaf,0x4b
  4215dd:	push   0x66
  4215df:	cmc    
  4215e0:	sbb    al,0xc3
  4215e2:	repz xchg edi,eax
  4215e4:	lea    esi,[eax-0x13583224]
  4215ea:	das    
  4215eb:	adc    dh,BYTE PTR [ebx-0x80]
  4215ee:	mov    dh,0x5a
  4215f0:	lds    esp,FWORD PTR [edi+0x5491ff1f]
  4215f6:	retf   0xd9f0
  4215f9:	lods   al,BYTE PTR ds:[esi]
  4215fa:	xchg   edi,eax
  4215fb:	test   al,0x3a
  4215fd:	popf   
  4215fe:	fbstp  TBYTE PTR [ecx-0x2b]
  421601:	stc    
  421602:	call   FWORD PTR [edx-0xf]
  421605:	mov    esp,0xbefa1933
  42160a:	mov    BYTE PTR [eax+0x754473a7],al
  421610:	fisub  DWORD PTR [ebx]
  421612:	dec    ebp
  421613:	clc    
  421614:	stc    
  421615:	cdq    
  421616:	mov    ch,0xc5
  421618:	pushf  
  421619:	or     BYTE PTR [edi],bl
  42161b:	mov    cl,0x5d
  42161d:	push   ebx
  42161e:	push   0xffffffd8
  421620:	and    ebx,DWORD PTR [ebx-0x2163ca1]
  421626:	test   DWORD PTR ds:0x621708f9,0xec10166b
  421630:	push   0xffffffd7
  421632:	ja     0x42168a
  421634:	mov    edi,0x7de691e1
  421639:	cmp    BYTE PTR [ebx+0x18],dl
  42163c:	adc    DWORD PTR [ecx+0x51cdbb6b],edi
  421642:	ds cld 
  421644:	dec    esp
  421645:	lds    esi,FWORD PTR [ebx+0x4d]
  421648:	xor    DWORD PTR [edi+0x51],edi
  42164b:	cs jns 0x421667
  42164e:	xor    al,0xe0
  421650:	or     al,0x93
  421652:	psubsb mm5,QWORD PTR [esi+0xa]
  421656:	dec    eax
  421657:	loopne 0x4216a6
  421659:	sub    al,BYTE PTR [edi-0x4b9a001b]
  42165f:	mov    ds:0x111bcc5d,al
  421664:	jmp    0xc7aa:0xbd5347f5
  42166b:	inc    DWORD PTR [edx]
  42166d:	fnstsw WORD PTR [ecx+0x41]
  421670:	je     0x4216c8
  421672:	and    DWORD PTR [eax],edx
  421674:	test   eax,0xb6629e4
  421679:	dec    ebx
  42167a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42167b:	push   ebx
  42167c:	rcl    edi,cl
  42167e:	dec    ebp
  42167f:	loop   0x4216de
  421681:	or     dl,dh
  421683:	sbb    al,0x48
  421685:	push   edi
  421686:	out    0x86,al
  421688:	neg    DWORD PTR ds:0x1314
  42168e:	add    BYTE PTR [eax],al
  421690:	add    BYTE PTR [eax],al
  421692:	sti    
  421693:	and    al,0xdc
  421695:	es (bad) 
  421698:	sti    
  421699:	std    
  42169a:	sbb    ch,BYTE PTR [edx]
  42169c:	adc    eax,0xa5f6b1c6
  4216a1:	(bad)  
  4216a2:	gs nop
  4216a4:	add    DWORD PTR [eax],eax
  4216a6:	repnz add al,0x0
  4216a9:	add    BYTE PTR [ebp+edi*4-0x8],bh
  4216ad:	push   0xffffffe5
  4216af:	icebp  
  4216b0:	jnp    0x4216cd
  4216b2:	xor    BYTE PTR [esp+esi*4],bh
  4216b5:	cwde   
  4216b6:	mov    bh,0x98
  4216b8:	iret   
  4216b9:	out    0x14,eax
  4216bb:	dec    ebx
  4216bc:	add    al,0xd
  4216be:	adc    DWORD PTR [edi+0x1233c053],edi
  4216c4:	mov    esi,0x245a5818
  4216c9:	pop    esp
  4216ca:	push   edi
  4216cb:	stos   BYTE PTR es:[edi],al
  4216cc:	dec    edi
  4216cd:	sbb    ecx,DWORD PTR [ebp-0x6d]
  4216d0:	in     al,dx
  4216d1:	xlat   BYTE PTR ds:[ebx]
  4216d2:	add    ebp,ebx
  4216d4:	and    BYTE PTR [ebp+0x13ce5b1f],al
  4216da:	stos   BYTE PTR es:[edi],al
  4216db:	into   
  4216dc:	cmp    edi,DWORD PTR [ebx+esi*1]
  4216df:	es cwde 
  4216e1:	and    DWORD PTR [eax+0xa],esp
  4216e4:	xchg   DWORD PTR [eax],ecx
  4216e6:	sbb    ch,ch
  4216e8:	dec    edx
  4216e9:	into   
  4216ea:	and    BYTE PTR [edi],0x1c
  4216ed:	mov    bh,0x82
  4216ef:	scas   eax,DWORD PTR es:[edi]
  4216f0:	je     0x4216dc
  4216f2:	push   0x23
  4216f4:	mov    eax,ds:0x7d0116bc
  4216f9:	jno    0x42172a
  4216fb:	mov    bh,0x53
  4216fd:	xor    eax,0x5bf47602
  421702:	push   0xffffffed
  421704:	dec    ecx
  421705:	fistp  WORD PTR [edx-0x7f]
  421708:	adc    BYTE PTR [edi],0xb9
  42170b:	mov    dl,0xa6
  42170d:	sar    ch,cl
  42170f:	jae    0x4216b8
  421711:	push   0xe0092deb
  421716:	sbb    DWORD PTR [esi],0xe9f4e2a5
  42171c:	inc    eax
  42171d:	cmp    al,BYTE PTR [esi+0x79f7a99f]
  421723:	mov    esi,0xc034ddf0
  421728:	mov    eax,?
  42172a:	add    al,0xbc
  42172c:	jae    0x42170a
  42172e:	fcomp  DWORD PTR [edx]
  421730:	jecxz  0x421786
  421732:	mov    ah,dh
  421734:	pushf  
  421735:	fdiv   QWORD PTR [esi]
  421737:	push   edi
  421738:	(bad)  
  421739:	hlt    
  42173a:	push   ds
  42173b:	daa    
  42173c:	lods   al,BYTE PTR ds:[esi]
  42173d:	retf   0x53
  421740:	out    dx,al
  421741:	push   ss
  421742:	stos   DWORD PTR es:[edi],eax
  421743:	out    0x9e,al
  421745:	ret    0x1fc7
  421748:	xor    BYTE PTR [ebx-0x57774026],0x70
  42174f:	stos   BYTE PTR es:[edi],al
  421750:	je     0x4217bf
  421752:	pop    esp
  421753:	out    dx,al
  421754:	sub    DWORD PTR ds:0x722292d4,ebx
  42175a:	pop    eax
  42175b:	mov    ecx,0x180d758c
  421760:	and    DWORD PTR [edx],esp
  421762:	fcmove st,st(0)
  421764:	into   
  421765:	(bad)  
  421766:	call   DWORD PTR [esi-0x16]
  421769:	shr    DWORD PTR [esi-0x48204b96],cl
  42176f:	push   ecx
  421770:	inc    edx
  421771:	outs   dx,BYTE PTR ds:[esi]
  421772:	add    eax,0xee73682d
  421777:	pop    edx
  421778:	fld    st(3)
  42177a:	es sbb eax,0x18430270
  421780:	fst    QWORD PTR [eax-0x125b5dec]
  421786:	jb     0x42178a
  421788:	xchg   edx,eax
  421789:	test   DWORD PTR [ebp+0x5a],ebx
  42178c:	fnstsw WORD PTR [eax+eiz*8+0x62]
  421790:	repnz mov bl,0x6
  421793:	ja     0x421726
  421795:	lea    esi,[ebp+0x68]
  421798:	jle    0x42174d
  42179a:	jmp    0x8187:0x49f2546
  4217a1:	lods   eax,DWORD PTR ds:[esi]
  4217a2:	jbe    0x421823
  4217a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4217a5:	dec    ebx
  4217a6:	cmp    eax,0xce70927d
  4217ab:	xor    ah,BYTE PTR ds:0xbb35a250
  4217b1:	add    al,BYTE PTR [edx-0x42]
  4217b4:	ss jmp 0x2763:0x272d2a34
  4217bc:	clc    
  4217bd:	popa   
  4217be:	cmp    edi,DWORD PTR [eax-0x7d]
  4217c1:	cmp    al,0x15
  4217c3:	lock (bad) 
  4217c5:	popf   
  4217c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4217c7:	mov    ch,0x35
  4217c9:	dec    edi
  4217ca:	push   esi
  4217cb:	test   eax,0xfa9d2709
  4217d0:	push   edx
  4217d1:	dec    ebx
  4217d2:	jbe    0x42176d
  4217d4:	push   ds
  4217d5:	cmp    al,0xe3
  4217d7:	aam    0xa7
  4217d9:	jnp    0x55433a49
  4217df:	fisubr WORD PTR [edi+0x241d3eb3]
  4217e5:	arpl   WORD PTR [esi],bp
  4217e7:	jo     0x421777
  4217e9:	mov    al,0xae
  4217eb:	mov    edx,0xee6a5ba5
  4217f0:	sbb    DWORD PTR [ecx],0xffffffd2
  4217f3:	pop    eax
  4217f4:	sub    eax,0x69d28036
  4217f9:	or     al,0x9
  4217fb:	cdq    
  4217fc:	out    dx,eax
  4217fd:	push   0x58
  4217ff:	mov    esp,0x97a2d99f
  421804:	lahf   
  421805:	mov    dh,0xce
  421807:	(bad)  
  421808:	imul   edi,DWORD PTR [ebp+0x2c],0xffffffcb
  42180c:	ds xchg esp,eax
  42180e:	pop    edi
  42180f:	dec    ebp
  421810:	mov    ah,0x68
  421812:	jbe    0x4217e6
  421814:	sub    BYTE PTR [edi-0x69a9ed6d],ch
  42181a:	rcl    BYTE PTR [edi-0x7c05d9e],0x7c
  421821:	push   esi
  421822:	xchg   edi,eax
  421823:	add    ebp,DWORD PTR ds:0xc7ca5fa9
  421829:	sbb    bl,ch
  42182b:	adc    bl,BYTE PTR [esi+0xe]
  42182e:	inc    esi
  42182f:	jbe    0x421863
  421831:	ret    
  421832:	fimul  DWORD PTR [eax-0x1742e5bd]
  421838:	lock test al,0xc1
  42183b:	jo     0x4218a5
  42183d:	ins    DWORD PTR es:[edi],dx
  42183e:	call   0xa287:0x9ad8a458
  421845:	dec    edx
  421846:	dec    edi
  421847:	xchg   ecx,eax
  421848:	cli    
  421849:	in     eax,0xf0
  42184b:	sbb    esi,DWORD PTR [edx+0x59786497]
  421851:	iret   
  421852:	add    eax,0x15656221
  421857:	or     esp,DWORD PTR [eax]
  421859:	dec    esp
  42185a:	sub    al,BYTE PTR ds:0x72d7c940
  421860:	push   cs
  421861:	ins    DWORD PTR es:[edi],dx
  421862:	(bad)  
  421863:	hlt    
  421864:	push   edi
  421865:	mov    WORD PTR [edi],ds
  421867:	jmp    0x4218da
  421869:	or     BYTE PTR [ecx+0x48197844],bh
  42186f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421870:	sti    
  421871:	dec    esp
  421872:	jge    0x42181d
  421874:	mov    esp,0xcf1a3f4e
  421879:	inc    ebx
  42187a:	das    
  42187b:	or     eax,0xcfa24f38
  421880:	push   ebp
  421881:	arpl   si,dx
  421883:	jl     0x421860
  421885:	arpl   WORD PTR [ebx+0x65],bp
  421888:	inc    ebp
  421889:	out    dx,eax
  42188a:	adc    ebx,DWORD PTR [esi+0x18]
  42188d:	mov    ch,0x87
  42188f:	xor    esp,DWORD PTR [ebx-0x13]
  421892:	adc    BYTE PTR [eax+ecx*4],al
  421895:	popf   
  421896:	adc    DWORD PTR [ecx],ecx
  421898:	dec    ebx
  421899:	sub    eax,0x336507fc
  42189e:	sub    edi,DWORD PTR [ecx]
  4218a0:	xchg   ecx,eax
  4218a1:	aas    
  4218a2:	mov    ebp,0xbb61e80b
  4218a7:	mov    edi,0xa9dc968b
  4218ac:	stc    
  4218ad:	jge    0x4218c9
  4218af:	ja     0x4218a7
  4218b1:	aaa    
  4218b2:	lods   al,BYTE PTR ds:[esi]
  4218b3:	inc    ebp
  4218b4:	push   eax
  4218b5:	xchg   DWORD PTR [edi-0x10656078],ebx
  4218bb:	and    edi,DWORD PTR [ebx]
  4218bd:	daa    
  4218be:	lods   al,BYTE PTR ds:[esi]
  4218bf:	mov    fs,WORD PTR [eax]
  4218c1:	test   al,0xf5
  4218c3:	cmp    ebp,ebp
  4218c5:	repnz fsubr DWORD PTR [ebx+ecx*2-0x13]
  4218ca:	dec    edi
  4218cb:	sub    cl,dl
  4218cd:	mov    ebp,0xd6e74461
  4218d2:	int    0xb6
  4218d4:	fstp   DWORD PTR [edi+eiz*4+0x43]
  4218d8:	js     0x42191e
  4218da:	inc    esp
  4218db:	test   al,0x5
  4218dd:	popf   
  4218de:	test   eax,0x496d5b2
  4218e3:	mov    ecx,0x850c4e4d
  4218e8:	sbb    cl,0x16
  4218eb:	mov    BYTE PTR ss:[ebp+0x37],al
  4218ef:	jae    0x4218ce
  4218f1:	fadd   DWORD PTR ds:0x26f552ea
  4218f7:	(bad)  
  4218f8:	dec    esp
  4218f9:	sub    edx,DWORD PTR ds:0xc7177373
  4218ff:	out    dx,eax
  421900:	mov    eax,0x531e091
  421905:	push   ebx
  421906:	ds push esp
  421908:	fnsave [eax]
  42190a:	pop    esi
  42190b:	jecxz  0x42189e
  42190d:	mov    eax,ds:0x87ea33db
  421912:	pop    ss
  421913:	daa    
  421914:	out    0x2d,al
  421916:	xor    al,0x64
  421918:	nop
  421919:	rol    BYTE PTR [edi],cl
  42191b:	fnstsw WORD PTR [eax-0x2b9021e0]
  421921:	inc    esi
  421922:	outs   dx,DWORD PTR ds:[esi]
  421923:	iret   
  421924:	lea    ebp,gs:[ecx-0x2bc890e8]
  42192b:	nop
  42192c:	or     BYTE PTR ds:0x66b2ff34,bh
  421932:	push   0xffffffbe
  421934:	aam    0xca
  421936:	das    
  421937:	xor    esp,DWORD PTR [ebx-0x7c]
  42193a:	outs   dx,DWORD PTR gs:[esi]
  42193c:	or     eax,0x6e88fb9e
  421941:	fs pop ebp
  421943:	xchg   ebx,eax
  421944:	sbb    al,0xc4
  421946:	push   ss
  421947:	test   al,0x3b
  42194a:	fld    QWORD PTR [edi+ebx*2-0x46655d8f]
  421951:	mov    WORD PTR [ebx],ss
  421953:	ss loopne 0x4219a7
  421956:	test   eax,0x4ac77f96
  42195b:	push   es
  42195c:	imul   edx,DWORD PTR [ecx],0x768b2715
  421962:	ins    DWORD PTR es:[edi],dx
  421963:	adc    al,0xe5
  421965:	mov    BYTE PTR [edi+edi*4],0x2c
  421969:	mov    eax,0x6dfd241b
  42196e:	push   cs
  42196f:	jecxz  0x4218fa
  421971:	aam    0x49
  421973:	add    DWORD PTR [ebx+0x4a],edi
  421976:	or     al,ch
  421978:	push   eax
  421979:	loope  0x421976
  42197b:	mov    ds:0xaa431ee2,eax
  421980:	jle    0x4219f0
  421982:	jo     0x42198c
  421984:	mov    bh,ch
  421986:	sbb    ebp,0x3c
  421989:	addr16 loop 0x42199c
  42198c:	xchg   esi,eax
  42198d:	outs   dx,BYTE PTR ds:[esi]
  42198e:	ins    BYTE PTR es:[edi],dx
  42198f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421990:	cs pushf 
  421992:	pop    ss
  421993:	fidivr WORD PTR [ecx+ebx*8]
  421996:	xor    dh,BYTE PTR [eax]
  421998:	mov    bl,0x44
  42199a:	or     BYTE PTR [esi-0x6b],al
  42199d:	jb     0x421989
  42199f:	pop    edx
  4219a0:	xchg   edx,eax
  4219a1:	fwait
  4219a2:	dec    edx
  4219a3:	pop    edx
  4219a4:	out    dx,al
  4219a5:	jo     0x421985
  4219a7:	add    edi,DWORD PTR [eax-0x26]
  4219aa:	or     eax,0x902c32ff
  4219af:	cmp    bl,BYTE PTR [edx-0x27]
  4219b2:	adc    DWORD PTR [ebp+0x69],esi
  4219b5:	cmp    eax,0x2b959c9d
  4219ba:	jge    0x4219dc
  4219bc:	ins    DWORD PTR es:[edi],dx
  4219bd:	clc    
  4219be:	pop    ss
  4219bf:	clc    
  4219c0:	sbb    BYTE PTR [eax-0x22960ba8],0x62
  4219c7:	nop
  4219c8:	scas   al,BYTE PTR es:[edi]
  4219c9:	inc    ecx
  4219ca:	push   ss
  4219cb:	sub    al,0xbf
  4219cd:	cwde   
  4219ce:	loop   0x42198a
  4219d0:	fdiv   QWORD PTR [edi]
  4219d2:	inc    ebp
  4219d3:	ficomp DWORD PTR [ebx+ebx*8]
  4219d6:	stos   BYTE PTR es:[edi],al
  4219d7:	outs   dx,DWORD PTR ds:[esi]
  4219d8:	cmp    edx,ecx
  4219da:	and    bl,BYTE PTR [ebx]
  4219dc:	mov    edx,0xb33a2313
  4219e1:	mov    DWORD PTR [ebx+0x20],eax
  4219e4:	inc    eax
  4219e5:	xchg   BYTE PTR [edx+0x20],al
  4219e8:	pop    esp
  4219e9:	rcr    BYTE PTR [esi-0xd],cl
  4219ec:	mov    DWORD PTR [edi],esi
  4219ee:	in     al,dx
  4219ef:	pop    edi
  4219f0:	cs cmp bh,0x2e
  4219f4:	adc    dl,0xc0
  4219f7:	imul   edi,esp,0x5be955
  4219fd:	pop    edi
  4219fe:	mov    al,0xc0
  421a00:	push   eax
  421a01:	push   ecx
  421a02:	mov    esp,0x2a27dae8
  421a07:	jge    0x4219a4
  421a09:	sar    DWORD PTR [esi-0x49],1
  421a0c:	outs   dx,DWORD PTR ds:[esi]
  421a0d:	push   edx
  421a0e:	out    0xf0,eax
  421a10:	sar    BYTE PTR [ecx-0x4c],0xa
  421a14:	out    dx,al
  421a15:	(bad)  
  421a16:	loope  0x421a1f
  421a18:	pop    edi
  421a19:	int    0x14
  421a1b:	push   cs
  421a1c:	jmp    eax
  421a1e:	sub    ebp,DWORD PTR [ecx]
  421a20:	jl     0x4219bf
  421a22:	test   BYTE PTR [edi+0x62],dh
  421a25:	or     esp,DWORD PTR [edi-0x22a722f4]
  421a2b:	inc    eax
  421a2c:	pop    ds
  421a2d:	(bad)  
  421a2e:	int    0xdd
  421a30:	add    esp,DWORD PTR [edx-0x75]
  421a33:	cmp    bh,dh
  421a35:	cmp    edx,ebx
  421a37:	retf   0x7c2a
  421a3a:	aam    0x4f
  421a3c:	in     eax,0x5c
  421a3e:	fist   WORD PTR [edi]
  421a40:	(bad)  
  421a41:	xchg   edi,eax
  421a42:	mov    ch,0xb3
  421a44:	(bad)  
  421a46:	jp     0x421a84
  421a48:	xchg   ecx,eax
  421a49:	xor    eax,0xf3d8cebe
  421a4e:	pop    ebp
  421a4f:	adc    BYTE PTR [ebp+0x5d64c685],cl
  421a55:	inc    eax
  421a56:	add    BYTE PTR [eax-0x38c5f41b],dh
  421a5c:	and    BYTE PTR [ecx],dl
  421a5e:	cmp    edx,DWORD PTR [ebp+0x64a11b11]
  421a64:	mov    BYTE PTR [edi],ch
  421a66:	adc    DWORD PTR [esi+0x2c],esp
  421a69:	pop    ds
  421a6a:	jae    0x421a7c
  421a6c:	dec    ebx
  421a6d:	cmp    eax,0x9e8e7426
  421a72:	mov    esp,0x8e89644a
  421a77:	xor    al,0x18
  421a79:	sub    al,0xd8
  421a7b:	xor    DWORD PTR ds:0x8bd1d6ca,ebx
  421a81:	outs   dx,DWORD PTR ds:[esi]
  421a82:	mov    WORD PTR [eax-0x80],ds
  421a85:	into   
  421a86:	push   ebx
  421a87:	mov    DWORD PTR [esi],edx
  421a89:	sbb    dl,BYTE PTR [eax+esi*4+0x19]
  421a8d:	scas   eax,DWORD PTR es:[edi]
  421a8e:	mov    bh,0xd3
  421a90:	add    BYTE PTR ds:0xd986c325,0x26
  421a97:	popa   
  421a98:	jp     0x421a36
  421a9a:	jl     0x421a89
  421a9c:	and    ebx,0x78
  421a9f:	sbb    cl,bl
  421aa1:	push   esp
  421aa2:	jp     0x421a43
  421aa4:	jle    0x421b25
  421aa6:	ret    
  421aa7:	fidivr WORD PTR [ebx-0x3f]
  421aaa:	lods   al,BYTE PTR ds:[esi]
  421aab:	dec    edi
  421aac:	rcl    DWORD PTR [edx],cl
  421aae:	repnz or dh,BYTE PTR [eax+ebx*2]
  421ab2:	shl    DWORD PTR [edi+0x77386fec],0x8b
  421ab9:	fisubr WORD PTR [ecx]
  421abb:	sti    
  421abc:	inc    esi
  421abd:	std    
  421abe:	sub    BYTE PTR [edx-0x45a08252],ch
  421ac4:	adc    ah,bh
  421ac6:	and    dl,BYTE PTR [edx]
  421ac8:	loop   0x421b1b
  421aca:	and    bh,BYTE PTR [ebp-0x54]
  421acd:	or     BYTE PTR [ecx-0x73],cl
  421ad0:	mov    ecx,0x533d563b
  421ad5:	fild   QWORD PTR [edx+0x2b0ecc5b]
  421adb:	mov    al,0xe1
  421add:	add    eax,0xecdf514d
  421ae2:	ins    DWORD PTR es:[edi],dx
  421ae3:	int    0x6
  421ae5:	repz xchg edi,eax
  421ae7:	xor    esi,DWORD PTR [ebx]
  421ae9:	dec    eax
  421aea:	push   edi
  421aeb:	frstor [edx+0x58de7332]
  421af1:	stc    
  421af2:	retf   0xc580
  421af5:	pop    edi
  421af6:	mov    bl,0x7c
  421af8:	sti    
  421af9:	jne    0x421ae6
  421afb:	pop    ds
  421afc:	outs   dx,DWORD PTR ds:[esi]
  421afd:	je     0x421b4c
  421aff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421b00:	je     0x421afb
  421b02:	outs   dx,BYTE PTR ds:[esi]
  421b03:	xor    ecx,ebp
  421b05:	imul   DWORD PTR [edi+0x6b]
  421b08:	lock inc edx
  421b0a:	mov    edx,0x1f8a7e6b
  421b0f:	pop    esi
  421b10:	(bad)  
  421b11:	sbb    al,0x6f
  421b13:	push   0x9bbfff72
  421b18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421b19:	rol    al,1
  421b1b:	aad    0xcd
  421b1d:	dec    edi
  421b1e:	lahf   
  421b1f:	data16 ror BYTE PTR [edx+0x25467fda],cl
  421b26:	stos   DWORD PTR es:[edi],eax
  421b27:	cld    
  421b28:	push   esp
  421b29:	sbb    ch,BYTE PTR [esi-0x55]
  421b2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421b2d:	cwde   
  421b2e:	mov    dh,0x5
  421b30:	test   eax,0x2e01f641
  421b35:	out    0xba,al
  421b37:	push   es
  421b38:	jmp    0x421b0b
  421b3a:	fldcw  WORD PTR [ebx+0x3b3df9c3]
  421b40:	pop    es
  421b41:	sar    BYTE PTR [edi],0x89
  421b44:	arpl   WORD PTR [ecx-0x3c6cb90f],bp
  421b4a:	mov    ah,0xcc
  421b4c:	lock push ss
  421b4e:	xchg   edx,eax
  421b4f:	pop    esp
  421b50:	cmc    
  421b51:	imul   cx,WORD PTR [edx+0x46],0xa341
  421b57:	jg     0x421b03
  421b59:	aam    0x68
  421b5b:	sahf   
  421b5c:	mov    bh,0xc7
  421b5e:	out    dx,al
  421b5f:	lods   al,BYTE PTR ds:[esi]
  421b60:	(bad)  
  421b61:	mov    esi,DWORD PTR [edx-0x14e7c812]
  421b67:	das    
  421b68:	jbe    0x421b97
  421b6a:	shr    dh,cl
  421b6c:	push   eax
  421b6d:	lock lea esi,[edi]
  421b70:	sbb    eax,0xe2d3adff
  421b75:	jno    0x421b9b
  421b77:	xchg   edi,eax
  421b78:	and    al,0x87
  421b7a:	push   0xcf9ca79
  421b7f:	pushf  
  421b80:	daa    
  421b81:	cmp    al,0xde
  421b83:	(bad)  
  421b84:	loope  0x421b73
  421b86:	sbb    esi,ebx
  421b88:	outs   dx,DWORD PTR ds:[esi]
  421b89:	xchg   ebx,eax
  421b8a:	xchg   edx,eax
  421b8b:	bound  esp,QWORD PTR [esi+0x2b]
  421b8e:	mov    cs,WORD PTR [edi]
  421b90:	pop    esi
  421b91:	aam    0x53
  421b93:	jb     0x421b2f
  421b95:	pop    edi
  421b96:	mov    eax,edx
  421b98:	push   es
  421b99:	fcomp  QWORD PTR [edi]
  421b9b:	cmp    eax,0x0
  421ba0:	add    BYTE PTR [eax],al
  421ba2:	sbb    edi,DWORD PTR [esi-0x25106512]
  421ba8:	jg     0x421b69
  421baa:	call   0x43d:0xcd770da0
  421bb1:	aaa    
  421bb2:	push   edi
  421bb3:	xchg   ebp,eax
  421bb4:	add    DWORD PTR [eax],eax
  421bb6:	repnz add al,0x0
  421bb9:	add    BYTE PTR [ebp+0x2a62d771],cl
  421bbf:	add    BYTE PTR [edi+0x29],bh
  421bc2:	pusha  
  421bc3:	dec    esp
  421bc4:	mov    ds:0x4286298,al
  421bc9:	add    BYTE PTR [esi-0xa],0x6d
  421bcd:	lahf   
  421bce:	push   cs
  421bcf:	jl     0x421b88
  421bd1:	mov    bl,BYTE PTR [ecx-0x44afbf52]
  421bd7:	repnz (bad) 
  421bd9:	loope  0x421bf5
  421bdb:	js     0x421bf7
  421bdd:	xlat   BYTE PTR ds:[ebx]
  421bde:	out    0xb6,eax
  421be0:	sub    edi,0xd8b479ba
  421be6:	hlt    
  421be7:	int3   
  421be8:	retf   0x7c1f
  421beb:	outs   dx,DWORD PTR ds:[esi]
  421bec:	inc    edi
  421bed:	adc    al,0xea
  421bef:	sub    DWORD PTR [ebp-0x72db805a],esi
  421bf5:	addr16 das 
  421bf7:	rcl    BYTE PTR [ebx+eiz*8],0x61
  421bfb:	cmp    BYTE PTR [esi],dl
  421bfd:	stc    
  421bfe:	outs   dx,DWORD PTR ds:[esi]
  421bff:	scas   al,BYTE PTR es:[edi]
  421c00:	mov    ebx,0x1903e6b8
  421c05:	repz shl ebx,1
  421c08:	enter  0x42df,0xfc
  421c0c:	mov    ebp,0xc3b63768
  421c11:	lods   al,BYTE PTR ds:[esi]
  421c12:	test   eax,0x91786dfa
  421c17:	(bad)  
  421c18:	mov    ds:0x3653b67d,al
  421c1d:	push   edx
  421c1e:	repnz cmp BYTE PTR [edx+0x131ffdc2],0x6c
  421c26:	pop    es
  421c27:	aaa    
  421c28:	inc    eax
  421c29:	jmp    0x421bb8
  421c2b:	pop    esi
  421c2c:	neg    BYTE PTR [eax+0x10]
  421c2f:	mov    bl,0xb6
  421c31:	(bad)  
  421c32:	xor    ebp,esi
  421c34:	mov    esp,0xf3c77a52
  421c39:	sbb    esp,esp
  421c3b:	pop    es
  421c3c:	cmp    al,0xc9
  421c3e:	call   0x258:0x353344f3
  421c45:	push   eax
  421c46:	cmp    DWORD PTR [eax-0x10663d0d],0xffffff8e
  421c4d:	push   eax
  421c4e:	test   al,dl
  421c50:	mov    BYTE PTR ds:[ecx],dl
  421c53:	call   0x8d01956b
  421c58:	rcr    BYTE PTR [ebx+eiz*8+0x6d9b7ae9],0x61
  421c60:	lds    edi,FWORD PTR [ecx+ebx*4+0xe69e689]
  421c67:	pop    esp
  421c68:	inc    ebp
  421c69:	fldenv [esi+ebx*1-0x56]
  421c6d:	dec    edi
  421c6e:	add    edi,esp
  421c70:	sbb    eax,0xeb5da49d
  421c75:	xlat   BYTE PTR ds:[ebx]
  421c76:	out    0x20,eax
  421c78:	mov    ebp,0xb5de0ced
  421c7d:	cld    
  421c7e:	xor    eax,0x915534fd
  421c83:	daa    
  421c84:	push   ecx
  421c85:	jl     0x421c1a
  421c87:	rol    BYTE PTR [esi-0x56],cl
  421c8a:	clc    
  421c8b:	jmp    0xd58c:0x862bd5ac
  421c92:	hlt    
  421c93:	(bad)  
  421c94:	xchg   ebx,eax
  421c95:	lods   eax,DWORD PTR ds:[esi]
  421c96:	fadd   QWORD PTR [esi+edx*8+0x4d26ff1e]
  421c9d:	pop    eax
  421c9e:	test   DWORD PTR ds:0x50464f2,0xee0417e3
  421ca8:	sub    eax,0x4db01a14
  421cad:	sar    edx,0x54
  421cb0:	imul   edx,DWORD PTR [ebx],0x43ddee16
  421cb6:	pop    edx
  421cb7:	stos   BYTE PTR es:[edi],al
  421cb8:	nop
  421cb9:	jne    0x421c75
  421cbb:	aad    0x21
  421cbd:	ins    BYTE PTR es:[edi],dx
  421cbe:	stos   BYTE PTR es:[edi],al
  421cbf:	sub    BYTE PTR [edx-0x442444a0],dh
  421cc5:	stos   DWORD PTR es:[edi],eax
  421cc6:	cmp    DWORD PTR [ecx-0x7582e9fc],0x478683da
  421cd0:	jne    0x421cdc
  421cd2:	out    0xa3,al
  421cd4:	int    0x31
  421cd6:	in     eax,dx
  421cd7:	and    ch,dh
  421cd9:	call   0x581a:0x15742aaa
  421ce0:	pop    es
  421ce1:	ja     0x421cfb
  421ce3:	sub    al,0x84
  421ce5:	sti    
  421ce6:	jge    0x421d49
  421ce8:	ror    BYTE PTR [edi],0xd1
  421ceb:	push   ebx
  421cec:	inc    ebp
  421ced:	push   ebx
  421cee:	jae    0x421d45
  421cf0:	push   eax
  421cf1:	int    0xea
  421cf3:	mov    WORD PTR [edi-0x1a],?
  421cf6:	xor    dh,BYTE PTR [edi-0xbd7b34f]
  421cfc:	or     eax,0x5c548101
  421d01:	lods   eax,DWORD PTR ds:[esi]
  421d02:	push   es
  421d03:	push   ebx
  421d04:	imul   ebp,eax,0x58
  421d07:	push   edx
  421d08:	cmp    al,0xc2
  421d0a:	cmp    DWORD PTR [edx+0x67],ecx
  421d0d:	(bad)  
  421d0e:	in     al,dx
  421d0f:	sar    BYTE PTR [eax-0x3b3fb06e],1
  421d15:	jae    0x421cee
  421d17:	(bad)  
  421d18:	fs add esi,esp
  421d1b:	mov    al,0xc1
  421d1d:	xchg   esi,eax
  421d1e:	loopne 0x421d1c
  421d20:	add    DWORD PTR [esi],ebp
  421d22:	mov    ecx,es
  421d24:	cmp    BYTE PTR [ebp-0x1],ch
  421d27:	cmp    esi,DWORD PTR [edi]
  421d29:	sub    BYTE PTR [ecx],bl
  421d2b:	clc    
  421d2c:	test   DWORD PTR [esi],eax
  421d2e:	fadd   QWORD PTR [ebx+0x4a]
  421d31:	inc    eax
  421d32:	fistp  QWORD PTR [edi+0x29]
  421d35:	out    0x1a,al
  421d37:	ret    0x404
  421d3a:	js     0x421ccd
  421d3c:	dec    esp
  421d3d:	inc    ebp
  421d3e:	jg     0x421db0
  421d40:	push   ebx
  421d41:	in     al,0xec
  421d43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421d44:	mov    WORD PTR [esi],?
  421d46:	test   al,0x68
  421d48:	xchg   edx,eax
  421d49:	cmc    
  421d4a:	adc    al,0xde
  421d4c:	lahf   
  421d4d:	(bad)  
  421d4e:	out    dx,al
  421d4f:	sub    esi,DWORD PTR [ebx]
  421d51:	inc    eax
  421d52:	in     eax,0x1c
  421d54:	(bad)  
  421d55:	lea    esi,ds:[ebp+edx*8+0x6d]
  421d5a:	sub    DWORD PTR [esi+0x42],esp
  421d5d:	pop    edx
  421d5e:	or     ah,BYTE PTR [edi]
  421d60:	arpl   WORD PTR [eax-0x79],cx
  421d63:	std    
  421d64:	and    ch,BYTE PTR [esi+0x37cdcfbf]
  421d6a:	jecxz  0x421d17
  421d6c:	xor    BYTE PTR [ebx+ecx*1],bh
  421d6f:	js     0x421d44
  421d71:	xchg   ebp,eax
  421d72:	aas    
  421d73:	ret    
  421d74:	out    dx,eax
  421d75:	and    ebx,ebx
  421d77:	ss (bad) 
  421d7a:	js     0x421de8
  421d7c:	push   cs
  421d7d:	and    al,0x63
  421d7f:	dec    edi
  421d80:	and    al,0x7a
  421d82:	pop    ds
  421d83:	pop    edx
  421d84:	mov    ds:0xc4dbd56c,al
  421d89:	dec    edi
  421d8a:	mov    al,ds:0xdb533446
  421d8f:	in     al,dx
  421d90:	mov    WORD PTR [edx+0x59],ds
  421d93:	ror    BYTE PTR [edi+0x20],0x36
  421d97:	mov    edi,0x55aa1f9b
  421d9c:	xor    al,ch
  421d9e:	mov    al,0x38
  421da0:	les    edi,FWORD PTR ds:0x6ef3886a
  421da6:	(bad)  
  421da7:	retf   0xdcb8
  421daa:	and    DWORD PTR [ecx+0x7315ed7f],esi
  421db0:	xchg   esi,eax
  421db1:	loopne 0x421dd0
  421db3:	aad    0xd2
  421db5:	cmp    BYTE PTR [esp+esi*1+0x18],0xed
  421dba:	and    edx,DWORD PTR [edi-0x7b0d9e9]
  421dc0:	aad    0x2e
  421dc2:	das    
  421dc3:	mov    esp,0x3611ba20
  421dc8:	jp     0x421dcf
  421dca:	(bad)
  421dcd:	cmp    al,0x39
  421dcf:	cmp    bh,BYTE PTR [ecx+0x2c]
  421dd2:	data16 sub al,0xec
  421dd5:	mov    esp,0x2e2f7979
  421dda:	mov    cl,0x6c
  421ddc:	xchg   BYTE PTR [ecx],dl
  421dde:	pusha  
  421ddf:	sub    bl,BYTE PTR [ebx]
  421de1:	lods   eax,DWORD PTR ds:[esi]
  421de2:	pop    edx
  421de3:	sub    ebx,DWORD PTR [ebx+0xd27969b]
  421de9:	sbb    BYTE PTR [ebx-0x2f0e558f],0x2
  421df0:	das    
  421df1:	lods   eax,DWORD PTR ds:[esi]
  421df2:	pop    edx
  421df3:	ja     0x421e0a
  421df5:	and    eax,0xe68602fa
  421dfa:	cmc    
  421dfb:	fdivr  st(6),st
  421dfd:	sub    BYTE PTR [edx+ebx*2+0xc9e251b],ah
  421e04:	lods   eax,DWORD PTR ds:[esi]
  421e05:	mov    bh,0xf8
  421e07:	ins    BYTE PTR es:[edi],dx
  421e08:	clc    
  421e09:	pop    ecx
  421e0a:	add    eax,0xc45b41b1
  421e0f:	out    0xec,al
  421e11:	dec    ebx
  421e12:	adc    BYTE PTR [ecx],dh
  421e14:	inc    esi
  421e15:	(bad)  
  421e16:	loop   0x421dc6
  421e18:	mov    dl,0xa1
  421e1a:	clc    
  421e1b:	cld    
  421e1c:	add    eax,0xac46e605
  421e21:	mov    ebx,0xe36fe452
  421e26:	data16 (bad) 
  421e28:	cs pop esi
  421e2a:	data16 cmc 
  421e2c:	dec    ebx
  421e2d:	in     al,dx
  421e2e:	sub    DWORD PTR [ecx+0x616dffc7],eax
  421e34:	retf   0xade8
  421e37:	pop    ebp
  421e38:	dec    esp
  421e39:	push   edi
  421e3a:	push   ebx
  421e3b:	imul   edx,DWORD PTR [esi+0x6d270fe8],0x8144f73
  421e45:	sti    
  421e46:	pusha  
  421e47:	dec    esi
  421e48:	repz sti 
  421e4a:	add    eax,0x50a81b1f
  421e4f:	loopne 0x421e21
  421e51:	iret   
  421e52:	push   cs
  421e53:	sbb    edi,esp
  421e55:	xor    eax,0xf949cdd3
  421e5a:	inc    esp
  421e5b:	aaa    
  421e5c:	call   0xc2f1:0xa679fe91
  421e63:	add    DWORD PTR [esi+edx*4-0x4c],0xac71a675
  421e6b:	pusha  
  421e6c:	xor    BYTE PTR [edx],dl
  421e6e:	sti    
  421e6f:	xlat   BYTE PTR ds:[ebx]
  421e70:	pop    ebp
  421e71:	pop    ss
  421e72:	adc    al,0x40
  421e74:	data16 (bad) 
  421e76:	xor    esi,DWORD PTR ds:0x378059a4
  421e7c:	and    al,0x7d
  421e7e:	test   cl,cl
  421e80:	cmc    
  421e81:	in     eax,dx
  421e82:	xchg   DWORD PTR [ebp-0x1292f489],esi
  421e88:	mov    esi,0x106bc978
  421e8d:	popf   
  421e8e:	adc    edi,DWORD PTR [esi+0x794789f8]
  421e94:	xchg   ebx,eax
  421e95:	outs   dx,BYTE PTR ds:[esi]
  421e96:	loop   0x421e8d
  421e98:	push   cs
  421e99:	sbb    BYTE PTR [edx+ebx*8],bh
  421e9c:	xor    DWORD PTR [ebx+0x2b],esp
  421e9f:	dec    ecx
  421ea0:	mov    bl,BYTE PTR [esi+0xf6a63fc]
  421ea6:	jns    0x421e93
  421ea8:	dec    ecx
  421ea9:	sub    BYTE PTR [ebx],bh
  421eab:	mov    dl,BYTE PTR [edx+0x1c1462fe]
  421eb1:	adc    ch,BYTE PTR [edi+0x3fb46bad]
  421eb7:	shl    DWORD PTR [ecx+0x23b2f859],0x97
  421ebe:	daa    
  421ebf:	test   eax,0x96254795
  421ec4:	mov    ebp,0x39907b83
  421ec9:	pop    ebp
  421eca:	jne    0x421f08
  421ecc:	nop
  421ecd:	jmp    FWORD PTR [ecx+0x2deabb96]
  421ed3:	mov    ch,0x87
  421ed5:	fs jl  0x421eec
  421ed8:	or     DWORD PTR [ebx-0x7e6ce987],0x3c61a9ec
  421ee2:	sub    DWORD PTR ds:0xb5e16348,0x1cf007d
  421eec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421eed:	mov    bl,bl
  421eef:	xchg   ecx,eax
  421ef0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421ef1:	inc    ebx
  421ef2:	xor    DWORD PTR [esi+0x6c5c98c2],edi
  421ef8:	jns    0x421ef4
  421efa:	gs in  al,dx
  421efc:	sbb    eax,0xaae8d1be
  421f01:	sbb    BYTE PTR [esi-0x40128f4d],al
  421f07:	dec    esp
  421f08:	outs   dx,BYTE PTR ds:[esi]
  421f09:	push   ebx
  421f0a:	fst    QWORD PTR [ecx+0x2b]
  421f0d:	jae    0x421f85
  421f0f:	jmp    0xa106a110
  421f14:	ja     0x421ec9
  421f16:	nop
  421f17:	sub    DWORD PTR [edi],eax
  421f19:	imul   si,WORD PTR [eax+ebx*2-0x5c],0xffc8
  421f1f:	xchg   esi,eax
  421f20:	xor    al,0xeb
  421f22:	jg     0x421ed5
  421f24:	fiadd  WORD PTR [eax+0x3b23cf1e]
  421f2a:	in     eax,0xb8
  421f2c:	les    ecx,FWORD PTR [ecx+0x3d8e9d18]
  421f32:	xchg   edx,eax
  421f33:	stos   BYTE PTR es:[edi],al
  421f34:	int    0x65
  421f36:	push   esp
  421f37:	and    DWORD PTR [esi],ecx
  421f39:	lods   eax,DWORD PTR ds:[esi]
  421f3a:	push   es
  421f3b:	int    0x93
  421f3d:	neg    BYTE PTR [ebx]
  421f3f:	(bad)  
  421f40:	jmp    DWORD PTR [esi-0x593ca233]
  421f46:	popa   
  421f47:	add    edx,esi
  421f49:	xchg   BYTE PTR [eax+0x4],dl
  421f4c:	das    
  421f4d:	ret    
  421f4e:	fsubr  QWORD PTR [esi+0x2538db3c]
  421f54:	cmp    ebx,eax
  421f56:	cmp    al,0xe3
  421f58:	sar    BYTE PTR ds:0xfa3e6ca5,0xcc
  421f5f:	stc    
  421f60:	xchg   DWORD PTR [ebp+edi*4-0x2901eb62],ebx
  421f67:	sbb    eax,0x82235fe8
  421f6c:	sub    eax,0x8a977cd8
  421f71:	cmp    esp,0x58
  421f74:	inc    ecx
  421f75:	sbb    BYTE PTR [esi+0x7d],0x4d
  421f79:	leave  
  421f7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421f7b:	loop   0x421f15
  421f7d:	stos   BYTE PTR es:[edi],al
  421f7e:	cmp    eax,0xa64852c4
  421f83:	push   ss
  421f84:	mov    bh,0x8d
  421f86:	or     BYTE PTR [edx-0x3],bl
  421f89:	jmp    0xdf9d:0x321c9862
  421f90:	xor    BYTE PTR [ebx+0x49],ah
  421f93:	ins    BYTE PTR es:[edi],dx
  421f94:	repnz adc eax,0xc19fd843
  421f9a:	jmp    0x1e443f02
  421f9f:	cwde   
  421fa0:	in     al,dx
  421fa1:	jnp    0x421ff2
  421fa3:	cld    
  421fa4:	outs   dx,DWORD PTR ds:[esi]
  421fa5:	xchg   DWORD PTR [edx+0x74],edx
  421fa8:	add    ebp,eax
  421faa:	stc    
  421fab:	int    0x71
  421fad:	es aad 0x48
  421fb0:	cwde   
  421fb1:	(bad)  
  421fb2:	test   edi,0x22fc9d43
  421fb8:	inc    eax
  421fb9:	mov    edx,DWORD PTR [edi+0x7d]
  421fbc:	push   ebp
  421fbd:	adc    bl,BYTE PTR [edx-0x51104f41]
  421fc3:	push   ebx
  421fc4:	(bad)  
  421fc5:	jae    0x421fe1
  421fc7:	fcom   QWORD PTR [edx]
  421fc9:	in     eax,dx
  421fca:	or     bl,BYTE PTR [edi-0x178131ea]
  421fd0:	fwait
  421fd1:	popw   es
  421fd3:	cmp    BYTE PTR [edx+edx*1+0x29a06fcb],bh
  421fda:	ins    BYTE PTR es:[edi],dx
  421fdb:	cmp    bl,BYTE PTR [edi+0x5617a1d8]
  421fe1:	es xor al,0x4d
  421fe4:	(bad)
  421fe8:	pusha  
  421fe9:	mov    al,0x71
  421feb:	in     eax,dx
  421fec:	sub    DWORD PTR [ebp+0x14],edx
  421fef:	inc    eax
  421ff0:	iret   
  421ff1:	scas   eax,DWORD PTR es:[edi]
  421ff2:	mov    esi,0x86606d7d
  421ff7:	shl    DWORD PTR [ebx+0x29],1
  421ffa:	jb     0x421fc7
  421ffc:	fisubr DWORD PTR [eax-0x19]
  422000:	pusha  
  422001:	inc    edi
  422002:	cs mov cl,0x6b
  422005:	fisttp DWORD PTR ds:[eax-0x33]
  422009:	dec    edi
  42200a:	int3   
  42200b:	ins    BYTE PTR es:[edi],dx
  42200c:	mov    ebp,edi
  42200e:	jl     0x42205f
  422010:	je     0x421f9f
  422012:	push   cs
  422013:	mov    al,0xe0
  422015:	dec    ecx
  422016:	int3   
  422017:	arpl   WORD PTR [edx],cx
  422019:	pusha  
  42201a:	or     DWORD PTR [esp+edx*1-0xd],edi
  42201e:	retf   
  42201f:	mov    fs,WORD PTR [ecx+0x1fdf9d8a]
  422025:	popa   
  422026:	imul   edx,DWORD PTR [esi-0x3f],0x61
  42202a:	xchg   esi,eax
  42202b:	es fmul st(1),st
  42202e:	push   0xa9e9c836
  422033:	addr16 jo 0x421fbe
  422036:	or     edi,ebx
  422038:	mov    ss,ebp
  42203a:	or     al,0xd5
  42203c:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  42203e:	add    DWORD PTR [edi-0x41],0x417a8c40
  422045:	int    0x67
  422047:	stos   BYTE PTR es:[edi],al
  422048:	push   0xffffff80
  42204a:	jnp    0x42202d
  42204c:	icebp  
  42204d:	mov    esp,0xcaf50e79
  422052:	jecxz  0x422084
  422054:	int3   
  422055:	test   eax,0x11c874ad
  42205a:	les    ebp,FWORD PTR [eax+0x6f]
  42205d:	mov    esp,0x2b5f5b98
  422062:	loope  0x4220c9
  422064:	stos   DWORD PTR es:[edi],eax
  422065:	outs   dx,BYTE PTR ds:[esi]
  422066:	gs jg  0x42202a
  422069:	test   BYTE PTR [eax-0x1d],ch
  42206c:	lahf   
  42206d:	div    BYTE PTR [ebx-0x5c2ac0f1]
  422073:	pop    eax
  422074:	test   BYTE PTR [ecx+eax*1],dh
  422077:	lods   eax,DWORD PTR ds:[esi]
  422078:	les    eax,FWORD PTR [esi]
  42207a:	pushf  
  42207b:	into   
  42207c:	test   BYTE PTR [eax-0x40],bh
  42207f:	sub    esp,ecx
  422081:	fld    TBYTE PTR [edx]
  422083:	adc    eax,0xd01918c
  422088:	and    al,0xba
  42208a:	test   eax,0xfa123061
  42208f:	scas   al,BYTE PTR es:[edi]
  422090:	das    
  422091:	cmp    dl,BYTE PTR ss:[ebp-0x3f8e7923]
  422098:	or     ecx,DWORD PTR [edi-0x116e23a0]
  42209e:	xor    BYTE PTR [edx-0x18029a33],cl
  4220a4:	mov    ch,0x3e
  4220a6:	mov    al,0xc0
  4220a8:	and    BYTE PTR [ebx+eiz*2-0x4a],al
  4220ac:	add    BYTE PTR [eax],al
  4220ae:	add    BYTE PTR [eax],al
  4220b0:	add    BYTE PTR [eax],al
  4220b2:	cmp    ecx,edi
  4220b4:	pop    ebx
  4220b5:	sub    ebx,ebx
  4220b7:	stos   DWORD PTR es:[edi],eax
  4220b8:	jns    0x4220b5
  4220ba:	dec    edx
  4220bb:	sub    bl,0xe9
  4220be:	in     al,dx
  4220bf:	mov    eax,ds:0x9a49fc80
  4220c4:	add    DWORD PTR [eax],eax
  4220c6:	repnz add al,0x0
  4220c9:	add    cl,bl
  4220cb:	mov    eax,eax
  4220cd:	pop    ebx
  4220ce:	jae    0x42206c
  4220d0:	into   
  4220d1:	and    DWORD PTR [ebx+edi*1+0x60cac097],edx
  4220d8:	mov    dl,0x93
  4220da:	(bad)
  4220df:	mov    ecx,DWORD PTR [edi+0xa]
  4220e2:	fwait
  4220e3:	ja     0x42209b
  4220e5:	cmp    ebp,edx
  4220e7:	dec    esp
  4220e8:	or     cl,BYTE PTR [ebx+0x15829fe6]
  4220ee:	mov    eax,ds:0xf7f7d7f0
  4220f3:	xor    ebp,DWORD PTR [edi+0x20]
  4220f6:	and    DWORD PTR [ecx-0x7a],0x6b8b0a3b
  4220fd:	(bad)  
  4220fe:	xlat   BYTE PTR ds:[ebx]
  4220ff:	dec    esi
  422100:	jmp    0x600b:0x48ecfe8e
  422107:	jle    0x4220e8
  422109:	sbb    eax,0x6d0eb226
  42210e:	push   ds
  42210f:	cli    
  422110:	shr    BYTE PTR [esi],0xa0
  422113:	dec    ecx
  422114:	call   0xa5e4b3ed
  422119:	lea    ebp,[edi+eax*2+0x1cfa75]
  422120:	dec    esi
  422121:	test   edx,eax
  422123:	inc    edi
  422124:	mov    ah,BYTE PTR [edi-0x1a]
  422127:	dec    eax
  422128:	imul   esi,DWORD PTR [edi],0xffffffac
  42212b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42212c:	test   BYTE PTR [ebx-0x79],dl
  42212f:	fcomp  DWORD PTR [esp+edx*8-0x55]
  422133:	mov    bh,BYTE PTR [ebp-0x141848bb]
  422139:	or     al,0x3d
  42213b:	mov    cl,0x51
  42213d:	out    0xf1,al
  42213f:	into   
  422140:	mov    edx,0x3606d83f
  422145:	and    bl,BYTE PTR [ebp-0x41676da8]
  42214b:	sbb    eax,0x218c7a1
  422150:	cld    
  422151:	mov    DWORD PTR [esi-0x38],edx
  422154:	inc    ecx
  422155:	sbb    eax,edx
  422157:	iret   
  422158:	int    0xf6
  42215a:	xchg   ebx,eax
  42215b:	test   eax,0xffd7c10e
  422160:	mov    bh,0x4f
  422162:	sub    al,0x45
  422164:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422165:	jl     0x4221d4
  422167:	dec    esp
  422168:	add    eax,0xfe297532
  42216d:	aam    0x2b
  42216f:	sub    BYTE PTR [eax+ebx*2+0x259f01e2],cl
  422176:	jb     0x422181
  422178:	inc    edx
  422179:	jecxz  0x422154
  42217b:	mov    ebp,0xb2fe8f51
  422180:	(bad)  
  422181:	pop    ecx
  422182:	ret    
  422183:	push   esi
  422184:	ror    DWORD PTR [ecx-0x17],cl
  422187:	stos   DWORD PTR es:[edi],eax
  422188:	(bad)  
  422189:	push   eax
  42218a:	push   ss
  42218b:	add    eax,0xf2c9f9e2
  422190:	rcl    bl,1
  422192:	pop    ds
  422193:	sbb    DWORD PTR ds:[ebx+0x61],0x3d9b4795
  42219b:	xlat   BYTE PTR ds:[ebx]
  42219c:	into   
  42219d:	sub    esi,esi
  42219f:	shr    BYTE PTR [ecx-0x11104f8],1
  4221a5:	dec    ecx
  4221a6:	iret   
  4221a7:	jne    0x42220b
  4221a9:	mov    bl,bh
  4221ab:	rcl    DWORD PTR [ecx-0x1f],0x88
  4221af:	gs cld 
  4221b1:	jle    0x422182
  4221b3:	push   ds
  4221b4:	lods   eax,DWORD PTR ds:[esi]
  4221b5:	inc    edi
  4221b6:	jecxz  0x42213f
  4221b8:	push   edx
  4221b9:	jecxz  0x4221b0
  4221bb:	add    BYTE PTR [ecx],cl
  4221bd:	push   ecx
  4221be:	add    eax,DWORD PTR [edx]
  4221c0:	jmp    0xe664bc16
  4221c5:	add    dh,cl
  4221c7:	dec    eax
  4221c8:	das    
  4221c9:	call   0x6d885a1c
  4221ce:	xor    al,0x79
  4221d0:	or     bl,0x5b
  4221d3:	mul    BYTE PTR [ecx-0x619e1dcf]
  4221d9:	fld    QWORD PTR [ecx-0x78]
  4221dc:	add    DWORD PTR [edi],edi
  4221de:	inc    edx
  4221df:	adc    al,0x1b
  4221e1:	outs   dx,BYTE PTR ds:[esi]
  4221e2:	ret    
  4221e3:	addr16 xchg esp,eax
  4221e5:	adc    ecx,DWORD PTR [ebx]
  4221e7:	icebp  
  4221e8:	adc    DWORD PTR [ecx+esi*4],eax
  4221eb:	(bad)  
  4221ec:	into   
  4221ed:	test   DWORD PTR [ebx-0x24388272],ecx
  4221f3:	adc    ch,bl
  4221f5:	mov    eax,0x27647fe3
  4221fa:	or     DWORD PTR [ebx+0x4f],ebp
  4221fd:	add    esi,esi
  4221ff:	xchg   esp,eax
  422200:	xor    al,0xe6
  422202:	cld    
  422203:	sbb    edi,DWORD PTR [ecx+0x5e0ad2]
  422209:	mov    ah,0xb5
  42220b:	or     ecx,DWORD PTR [eax]
  42220d:	es js  0x422255
  422210:	sahf   
  422211:	xchg   ebx,eax
  422212:	js     0x4221ee
  422214:	repnz or eax,0xcc325963
  42221a:	cli    
  42221b:	stc    
  42221c:	cs or  edi,ebp
  42221f:	lods   al,BYTE PTR ds:[esi]
  422220:	pop    edi
  422221:	sub    ah,BYTE PTR [esi+0x53550ba5]
  422227:	and    eax,0x9cba1051
  42222c:	mov    DWORD PTR [edx-0x397fc58],edx
  422232:	sbb    ebp,edx
  422234:	in     eax,0x3c
  422236:	das    
  422237:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422238:	jmp    0x42228c
  42223a:	jo     0x4221bd
  42223c:	(bad)  
  42223d:	xchg   edi,eax
  42223e:	gs jge 0x4221e7
  422241:	push   0xffffff8c
  422243:	mov    ebx,0x9848259
  422248:	mov    bl,0x9b
  42224a:	mov    ah,0x68
  42224c:	ret    
  42224d:	pusha  
  42224e:	dec    ebp
  42224f:	leave  
  422250:	pop    ebx
  422251:	scas   al,BYTE PTR es:[edi]
  422252:	sub    al,0x68
  422254:	jb     0x4221ef
  422256:	xchg   edi,eax
  422257:	call   0xe9ae:0xd9db0b81
  42225e:	mov    ecx,0x348f9ec0
  422263:	sub    eax,0xc29ca612
  422268:	adc    BYTE PTR [eax-0x2],bl
  42226b:	or     al,0x60
  42226d:	shr    al,0x7
  422270:	jmp    0xfb06:0x6e5cb1e7
  422277:	cmp    ebp,DWORD PTR [edx-0x50]
  42227a:	enter  0x7402,0x4e
  42227e:	pop    ds
  42227f:	xor    al,BYTE PTR [ebx]
  422281:	or     al,0xf0
  422283:	mov    bl,0x2f
  422285:	xor    esp,0x58
  422288:	imul   esp,DWORD PTR [ebx+0x1b],0xffffffa7
  42228c:	sbb    eax,0xef12bf9a
  422291:	mov    bl,bh
  422293:	mov    edi,0xdfca71ec
  422298:	push   edi
  422299:	lds    ebx,FWORD PTR [ecx-0x61]
  42229c:	leave  
  42229d:	(bad)  
  42229e:	scas   eax,DWORD PTR es:[di]
  4222a0:	addr16 sbb al,0xca
  4222a3:	enter  0x1507,0x24
  4222a7:	imul   esi,DWORD PTR [esi-0x7ff5a5bc],0x76
  4222ae:	adc    edi,esp
  4222b0:	fadd   DWORD PTR [ecx+0x52]
  4222b3:	(bad)  
  4222b4:	out    dx,eax
  4222b5:	pusha  
  4222b6:	addr16 ds adc al,0x86
  4222ba:	mov    bl,0x9b
  4222bc:	dec    esp
  4222bd:	dec    ebx
  4222be:	xchg   ecx,eax
  4222bf:	jle    0x4222de
  4222c1:	fst    QWORD PTR [edi+0x34]
  4222c4:	les    esi,FWORD PTR [ebp+0x3d098906]
  4222ca:	(bad)  
  4222cb:	call   0xc2925a6c
  4222d0:	scas   eax,DWORD PTR es:[edi]
  4222d1:	mov    ch,0xdd
  4222d3:	out    dx,al
  4222d4:	mov    cs,WORD PTR [ecx+esi*8+0x26322f3f]
  4222db:	xchg   ebx,eax
  4222dc:	cmp    bh,BYTE PTR ds:0xf6a590c2
  4222e2:	cmc    
  4222e3:	sbb    BYTE PTR [ebx+esi*8],cl
  4222e6:	icebp  
  4222e7:	mov    eax,0x5773aacf
  4222ec:	stc    
  4222ed:	and    al,0xd6
  4222ef:	(bad)  
  4222f0:	stc    
  4222f1:	repz inc ecx
  4222f3:	fdivr  st(5),st
  4222f5:	push   ss
  4222f6:	cld    
  4222f7:	xor    DWORD PTR [eax+0x59],ebp
  4222fa:	pop    ebp
  4222fb:	sub    DWORD PTR [ebp-0x287a0347],ebx
  422301:	sub    al,0x44
  422303:	in     eax,0xde
  422305:	xchg   BYTE PTR [esi],dh
  422307:	dec    esp
  422308:	lsl    ecx,WORD PTR [ebx-0x29]
  42230c:	mov    bh,0x29
  42230e:	cmp    ch,BYTE PTR [edx+0x7]
  422311:	jl     0x4222c6
  422313:	mov    bl,0xb
  422315:	pop    ecx
  422316:	xlat   BYTE PTR ds:[ebx]
  422317:	arpl   WORD PTR [edi-0x3b4d0ae4],ax
  42231d:	push   edi
  42231e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42231f:	ins    BYTE PTR es:[edi],dx
  422320:	adc    al,0xd8
  422322:	and    al,BYTE PTR [eax+0x1bc90159]
  422328:	inc    ebx
  422329:	sub    DWORD PTR [eax-0x13],ecx
  42232c:	pusha  
  42232d:	(bad)  [ebx-0x3bc57c74]
  422333:	sbb    eax,0xef44e164
  422338:	les    esi,FWORD PTR [eax-0x760d895e]
  42233e:	ja     0x4222e5
  422340:	inc    ecx
  422341:	iret   
  422342:	cdq    
  422343:	das    
  422344:	iret   
  422345:	dec    edx
  422346:	cmc    
  422347:	imul   ebp,DWORD PTR [ebp-0x5294c287],0xffffff8e
  42234e:	pop    es
  42234f:	add    eax,0x40012fd6
  422354:	xchg   esi,eax
  422355:	adc    DWORD PTR [ebp+0x691b94d9],eax
  42235b:	ins    DWORD PTR es:[edi],dx
  42235c:	call   0x7b55dc9b
  422361:	js     0x4223dd
  422363:	xor    DWORD PTR es:[ebp+0x3],ebx
  422367:	add    BYTE PTR [edi],bl
  422369:	pop    ss
  42236a:	sbb    DWORD PTR [ebp-0x34295206],edx
  422370:	rol    al,0xac
  422373:	cmp    eax,0x5df33338
  422378:	sbb    DWORD PTR [edx],esi
  42237a:	fist   DWORD PTR [eax+0x48b08a70]
  422380:	pop    edx
  422381:	xor    BYTE PTR [edi-0x636d30d7],dh
  422387:	icebp  
  422388:	imul   edx,DWORD PTR [edx-0x7e],0x34e84d0b
  42238f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422390:	pop    ebp
  422391:	dec    ebx
  422392:	(bad)  
  422393:	jo     0x4223b6
  422395:	std    
  422396:	inc    eax
  422397:	fisttp QWORD PTR [esi-0x7]
  42239a:	inc    edx
  42239b:	enter  0xc293,0xab
  42239f:	add    al,0x4c
  4223a1:	inc    ebp
  4223a2:	je     0x4223fc
  4223a4:	int3   
  4223a5:	mov    ebp,0x2f7dc1bf
  4223aa:	hlt    
  4223ab:	and    al,0x5
  4223ad:	adc    eax,0xe3a4a2e2
  4223b2:	cmp    bl,BYTE PTR fs:[edx-0x49]
  4223b6:	adc    DWORD PTR [ebp-0x487cf7bf],eax
  4223bc:	jnp    0x4223b1
  4223be:	(bad)  
  4223bf:	stc    
  4223c0:	jl     0x4223f7
  4223c2:	aam    0xd3
  4223c4:	ret    
  4223c5:	shr    BYTE PTR [ecx-0x49],1
  4223c8:	sub    edi,DWORD PTR [esi+0x6e]
  4223cb:	inc    ecx
  4223cc:	cmc    
  4223cd:	jbe    0x4223ba
  4223cf:	jns    0x422387
  4223d1:	or     eax,0xbe1fcdcb
  4223d6:	lods   eax,DWORD PTR ds:[esi]
  4223d7:	xor    ebp,0xffffffc0
  4223da:	fst    st(3)
  4223dc:	inc    edx
  4223dd:	push   0x4467619c
  4223e2:	push   ebx
  4223e3:	push   ecx
  4223e4:	dec    esi
  4223e5:	ins    BYTE PTR es:[edi],dx
  4223e6:	jg     0x422375
  4223e8:	xor    ch,BYTE PTR [edx+eiz*1]
  4223eb:	cli    
  4223ec:	stc    
  4223ed:	je     0x4223c0
  4223ef:	dec    esi
  4223f0:	xchg   ebp,eax
  4223f1:	iret   
  4223f2:	mov    bl,0x56
  4223f4:	jne    0x422406
  4223f6:	sub    cl,BYTE PTR [esi+0x503caf92]
  4223fc:	js     0x4223e2
  4223fe:	pop    esp
  4223ff:	fild   QWORD PTR [esi-0x7f1f369e]
  422405:	add    al,bl
  422407:	mov    cs,WORD PTR [edx]
  422409:	and    esp,0x5
  42240c:	adc    eax,0xa27dc8de
  422411:	or     BYTE PTR [eax+0x35],bl
  422414:	xchg   ebx,eax
  422415:	or     bl,bl
  422417:	inc    esp
  422418:	pop    ss
  422419:	inc    ebp
  42241a:	jbe    0x4223be
  42241c:	test   al,0xa5
  42241e:	xchg   esi,eax
  42241f:	mov    bh,0x32
  422421:	jne    0x4223c2
  422423:	mov    ah,0x9
  422425:	sbb    BYTE PTR cs:[edi],dl
  422428:	xor    al,0x50
  42242a:	mov    al,0x9b
  42242c:	mov    eax,0x3e322a07
  422431:	adc    al,0x9b
  422433:	inc    esp
  422434:	push   0xffb4aaf9
  422439:	push   ds
  42243a:	jns    0x422431
  42243c:	or     BYTE PTR [edx+ecx*8-0x192cdeba],0x7f
  422444:	leave  
  422445:	push   eax
  422446:	fiadd  DWORD PTR [edx-0x11161076]
  42244c:	adc    BYTE PTR [ecx-0x74],dh
  42244f:	retf   0x9148
  422452:	jp     0x42249c
  422454:	dec    ecx
  422455:	jmp    0x422459
  422457:	das    
  422458:	out    dx,eax
  422459:	xchg   edi,eax
  42245a:	xor    DWORD PTR [eax+0x4e],ecx
  42245d:	mov    ah,0x83
  42245f:	cmp    eax,0x6a8c9305
  422464:	mov    WORD PTR [edi],gs
  422466:	test   BYTE PTR fs:[ebp-0x64],ah
  42246a:	mov    esp,0xa10d4ae
  42246f:	lods   eax,DWORD PTR ds:[esi]
  422470:	repnz loopne 0x422407
  422473:	mov    esi,0xd60b5e40
  422478:	js     0x4223ff
  42247a:	push   ebp
  42247b:	adc    ebx,ebp
  42247d:	je     0x4224dd
  42247f:	ret    
  422480:	cmp    al,0x70
  422482:	sbb    edi,ecx
  422484:	pusha  
  422485:	arpl   WORD PTR [ebp-0x4b5a6d86],dx
  42248b:	add    al,0xe4
  42248d:	cli    
  42248e:	repnz xor dh,BYTE PTR [ebx]
  422491:	jle    0x42249d
  422493:	and    eax,0xf988a1ad
  422498:	pushf  
  422499:	out    0x2,eax
  42249b:	sub    al,0x5b
  42249d:	or     ecx,DWORD PTR [edi-0x316bf61e]
  4224a3:	test   ecx,edx
  4224a5:	or     ch,BYTE PTR [eax-0x42]
  4224a8:	xchg   edx,eax
  4224a9:	imul   ecx,DWORD PTR [esi+0x4a],0xffffffe1
  4224ad:	mov    cl,0x6b
  4224af:	test   eax,0x72fa582a
  4224b4:	stos   BYTE PTR es:[edi],al
  4224b5:	and    eax,0x5b78f4b1
  4224ba:	inc    edx
  4224bb:	xor    BYTE PTR [eax+esi*1-0x22e40ba5],dh
  4224c2:	dec    edx
  4224c3:	add    BYTE PTR [esi+ebp*2],ch
  4224c6:	jmp    0x4e17:0xdd1cd460
  4224cd:	retf   0xb111
  4224d0:	mov    dl,0x3e
  4224d2:	lock inc eax
  4224d4:	loope  0x4224b3
  4224d6:	mov    bl,0x48
  4224d8:	fsub   DWORD PTR [esi]
  4224da:	jns    0x4224a4
  4224dc:	inc    esp
  4224dd:	iret   
  4224de:	ja     0x422545
  4224e0:	push   eax
  4224e1:	in     eax,0x38
  4224e3:	imul   ebp,DWORD PTR [esi],0xdd6c634b
  4224e9:	inc    ebx
  4224ea:	call   FWORD PTR gs:[edi-0x7ce916c9]
  4224f1:	imul   esp,DWORD PTR [edi-0x14],0x46f0726c
  4224f8:	pusha  
  4224f9:	adc    al,dh
  4224fb:	into   
  4224fc:	scas   eax,DWORD PTR es:[edi]
  4224fd:	imul   edx,ebp,0x596b129b
  422503:	cmp    ecx,DWORD PTR [esi]
  422505:	push   ebx
  422506:	mov    ebp,0x491642f
  42250b:	and    DWORD PTR [edx],ebx
  42250d:	test   al,0x78
  42250f:	cmp    esi,0x67
  422512:	and    dh,ah
  422514:	or     edi,DWORD PTR [ebp+0x353c1452]
  42251a:	adc    cl,dl
  42251c:	call   0x75d9cfdc
  422521:	ret    0xa110
  422524:	aaa    
  422525:	xchg   edx,eax
  422526:	gs out dx,al
  422528:	sub    dl,ch
  42252a:	js     0x42258c
  42252c:	arpl   WORD PTR [ebx-0x8],si
  42252f:	into   
  422530:	lds    ebp,FWORD PTR [esi+0x15]
  422533:	push   ecx
  422534:	les    ecx,FWORD PTR [ebx+0x69]
  422537:	in     eax,dx
  422538:	scas   al,BYTE PTR es:[edi]
  422539:	push   esp
  42253a:	inc    eax
  42253b:	mov    edx,DWORD PTR [ebp+0x29]
  42253e:	repnz loop 0x4224cb
  422541:	cld    
  422542:	push   cs
  422543:	shr    DWORD PTR [ebp+0x35],0x3a
  422547:	pop    esp
  422548:	es jecxz 0x422515
  42254b:	fsubr  DWORD PTR [eax-0x197a7821]
  422551:	scas   al,BYTE PTR es:[edi]
  422552:	dec    edx
  422553:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422555:	pop    ss
  422556:	rol    DWORD PTR [edi],0x2
  422559:	push   es
  42255a:	push   es
  42255b:	daa    
  42255c:	add    BYTE PTR [ebp+ecx*8+0x12156c99],0x8c
  422564:	outs   dx,DWORD PTR ds:[esi]
  422565:	daa    
  422566:	out    dx,eax
  422567:	pop    ds
  422568:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422569:	or     DWORD PTR [esi-0x572ff1c8],edx
  42256f:	xchg   ebx,eax
  422570:	xchg   esp,eax
  422571:	jmp    0x454766df
  422576:	pop    ebp
  422577:	scas   eax,DWORD PTR es:[edi]
  422578:	inc    ecx
  422579:	or     esp,0xffffffff
  42257c:	leave  
  42257d:	mov    edx,esi
  42257f:	inc    esp
  422580:	jge    0x422548
  422582:	push   edx
  422583:	sbb    eax,0x821250e6
  422588:	sub    eax,0xacd21819
  42258d:	push   ss
  42258e:	cwde   
  42258f:	add    al,0x29
  422591:	adc    cl,bl
  422593:	sub    ebp,ebp
  422595:	(bad)  
  422596:	xchg   ebp,eax
  422597:	and    esp,0x22
  42259a:	adc    eax,0x7429411b
  42259f:	inc    ebx
  4225a0:	adc    DWORD PTR [edx-0x5b],ebx
  4225a3:	push   es
  4225a4:	mov    ebp,0x215752b3
  4225a9:	aam    0x78
  4225ab:	or     BYTE PTR [eax-0x21],bl
  4225ae:	cmovge ecx,DWORD PTR [ecx+0x30ba4308]
  4225b5:	jno    0x422563
  4225b7:	nop
  4225b8:	sti    
  4225b9:	jle    0x4225a1
  4225bb:	int3   
  4225bc:	add    BYTE PTR [eax],al
  4225be:	add    BYTE PTR [eax],al
  4225c0:	add    BYTE PTR [eax],al
  4225c2:	retf   0x6914
  4225c5:	dec    ecx
  4225c6:	(bad)  
  4225c7:	jge    0x4225b3
  4225c9:	xchg   edi,eax
  4225ca:	outs   dx,DWORD PTR ds:[esi]
  4225cb:	jge    0x422555
  4225cd:	call   0x9f3b:0x7bd41819
  4225d4:	add    DWORD PTR [eax],eax
  4225d6:	repnz add al,0x0
  4225d9:	add    BYTE PTR [edi-0x169e1de1],bh
  4225df:	push   ds
  4225e0:	repz cld 
  4225e2:	mov    esp,0x40fea882
  4225e7:	dec    esi
  4225e8:	cdq    
  4225e9:	cli    
  4225ea:	lahf   
  4225eb:	adc    BYTE PTR [edi+0x6d6bd086],bl
  4225f1:	ret    0x8f0
  4225f4:	in     eax,0xae
  4225f6:	jle    0x42265d
  4225f8:	popf   
  4225f9:	rol    al,1
  4225fb:	cld    
  4225fc:	inc    esp
  4225fd:	jno    0x4225dd
  4225ff:	fs into 
  422601:	sub    esi,DWORD PTR [edx+eax*1+0x50]
  422605:	(bad)  
  422607:	add    DWORD PTR [edx+0x649e0522],ebp
  42260d:	jecxz  0x422613
  42260f:	pop    edx
  422610:	mov    eax,0xd3e6b61c
  422615:	imul   ebp,edi,0x768b157b
  42261b:	jns    0x422679
  42261d:	fld    TBYTE PTR [edi-0x28]
  422620:	fiadd  WORD PTR [ecx-0x2d]
  422623:	mov    eax,0x9abf7256
  422628:	mov    bh,0x4b
  42262a:	mov    ch,0xd8
  42262c:	jb     0x4225c0
  42262e:	mov    ah,0xb5
  422630:	data16 in al,dx
  422632:	or     bl,BYTE PTR [edx-0x5a]
  422635:	and    DWORD PTR [ebp+0xe],eax
  422638:	pop    eax
  422639:	pop    bx
  42263b:	pushf  
  42263c:	outs   dx,BYTE PTR ds:[esi]
  42263d:	sub    bl,0x50
  422640:	and    eax,0x3d2dc23b
  422645:	je     0x422669
  422647:	xchg   ebp,eax
  422648:	inc    ebp
  422649:	not    edx
  42264b:	inc    ebp
  42264c:	xchg   esi,eax
  42264d:	arpl   WORD PTR [eax-0x16d2a562],si
  422653:	movzx  ebx,BYTE PTR [ebx+ebx*8]
  422657:	in     eax,0x64
  422659:	jle    0x422661
  42265b:	call   0xea2e1de1
  422660:	push   ecx
  422661:	pop    esp
  422662:	xchg   edi,eax
  422663:	cli    
  422664:	or     BYTE PTR [esi-0x75b5e6e5],bh
  42266a:	(bad)  
  42266b:	xor    DWORD PTR [ebx-0x71c8749c],edi
  422671:	jmp    0x642:0xec8e9dde
  422678:	outs   dx,BYTE PTR ds:[esi]
  422679:	push   ss
  42267a:	idiv   DWORD PTR [ebx+edi*8-0x13d96ca5]
  422681:	fsubrp st(7),st
  422683:	stos   BYTE PTR es:[edi],al
  422684:	sbb    al,0xcf
  422686:	cwde   
  422687:	aam    0xbf
  422689:	(bad)  
  42268a:	jne    0x422654
  42268c:	sub    bh,BYTE PTR [edx]
  42268e:	pop    ebx
  42268f:	or     bh,BYTE PTR [edi-0xdd13b5]
  422695:	std    
  422696:	imul   eax,DWORD PTR [ebx+0x61],0xffffffa1
  42269a:	pop    edx
  42269b:	mov    ds:0xcb18968f,al
  4226a0:	icebp  
  4226a1:	in     eax,dx
  4226a2:	pushf  
  4226a3:	test   BYTE PTR [ebp-0x7b6ee21e],cl
  4226a9:	addr16 mov eax,0x88ca5cee
  4226af:	pop    ebp
  4226b0:	mov    esi,0xcb989ea1
  4226b5:	pop    ds
  4226b6:	nop
  4226b7:	cwde   
  4226b8:	pop    ebx
  4226b9:	push   ebx
  4226ba:	repz imul ebx,DWORD PTR [esi+0x20],0x61
  4226bf:	(bad)  
  4226c0:	es add eax,0xb6fb4090
  4226c6:	sar    DWORD PTR [edx],cl
  4226c8:	cli    
  4226c9:	sbb    BYTE PTR [esp+ebx*1-0x75],dh
  4226cd:	enter  0x65c8,0xca
  4226d1:	jp     0x4226df
  4226d3:	pop    esi
  4226d4:	gs mov ecx,0xa0758f8f
  4226da:	imul   ecx,DWORD PTR [ebp-0x395d401c],0xcfaf32ed
  4226e4:	or     dl,BYTE PTR [esi-0xa528994]
  4226ea:	outs   dx,DWORD PTR es:[esi]
  4226ec:	inc    ecx
  4226ed:	loopne 0x422729
  4226ef:	push   ecx
  4226f0:	call   0xb9084307
  4226f5:	push   edi
  4226f6:	in     al,dx
  4226f7:	les    edi,FWORD PTR [ebx-0x20b428fa]
  4226fd:	dec    edi
  4226fe:	cdq    
  4226ff:	repz cs out 0x89,eax
  422703:	adc    dl,BYTE PTR [eax-0x2cb38afe]
  422709:	push   ebp
  42270a:	fcom   QWORD PTR [esi]
  42270c:	rol    edi,cl
  42270e:	adc    al,0x50
  422710:	int3   
  422711:	cdq    
  422712:	mov    ebp,0x58322770
  422717:	mov    ds:0xb848037f,eax
  42271c:	inc    eax
  42271d:	push   ebx
  42271e:	mov    DWORD PTR [ecx+0x21464d42],edx
  422724:	inc    eax
  422725:	test   eax,0x62535487
  42272a:	stos   DWORD PTR es:[edi],eax
  42272b:	jle    0x4226ef
  42272d:	mov    edi,0xcf1309f9
  422732:	(bad)  
  422734:	push   esp
  422735:	jmp    0x422742
  422737:	mov    ah,0xad
  422739:	retf   0x3c12
  42273c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42273d:	hlt    
  42273e:	ffree  st(3)
  422740:	test   BYTE PTR [ecx+0x35],al
  422743:	mov    ah,0xc4
  422745:	mov    bh,0xf4
  422747:	nop
  422748:	push   0xffffff9f
  42274a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42274b:	loope  0x4226d0
  42274d:	cmp    BYTE PTR [edx+0x79],dl
  422750:	cwde   
  422751:	pop    edi
  422752:	in     al,dx
  422753:	and    DWORD PTR [edx],0xffffffe2
  422756:	fistp  DWORD PTR [edx+0x3c]
  422759:	push   esi
  42275a:	jmp    0xf7011f87
  42275f:	xchg   ecx,eax
  422760:	jmp    0x27b2:0x7f27a6ef
  422767:	adc    ah,BYTE PTR [esi-0x41]
  42276a:	call   0xa7908d9e
  42276f:	sub    al,0xe1
  422771:	mov    dl,0x57
  422773:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422774:	add    eax,0xb8e68214
  422779:	daa    
  42277a:	pop    esp
  42277b:	sbb    BYTE PTR [eax],al
  42277d:	inc    ebx
  42277e:	clc    
  42277f:	mov    BYTE PTR [eax-0x5a],bl
  422782:	pop    es
  422783:	xor    eax,0x2fae5da4
  422788:	add    eax,0xbd568912
  42278d:	cmp    al,0xab
  42278f:	sbb    al,0xd0
  422791:	aaa    
  422792:	lock sahf 
  422794:	out    0x56,al
  422796:	jecxz  0x422803
  422798:	pop    ebp
  422799:	repnz push 0xffffff8c
  42279c:	nop
  42279d:	fisttp DWORD PTR [eax]
  42279f:	mov    ch,0xc5
  4227a1:	sub    eax,DWORD PTR [edx-0x65]
  4227a4:	dec    edx
  4227a5:	jae    0x4227d7
  4227a7:	add    ch,BYTE PTR [ecx]
  4227a9:	lea    ecx,[esi-0x50]
  4227ac:	cmp    dh,BYTE PTR [ecx+0x1c43ac01]
  4227b2:	iret   
  4227b3:	lea    eax,[ebp-0x19]
  4227b6:	loope  0x422790
  4227b8:	in     eax,0x29
  4227ba:	cmp    dh,al
  4227bc:	dec    edx
  4227bd:	loopne 0x422774
  4227bf:	inc    ebx
  4227c0:	es callw 0x448e
  4227c5:	imul   esi,edi,0xdf250e94
  4227cb:	add    bl,ch
  4227cd:	fs pop edx
  4227cf:	arpl   WORD PTR [edx+0x16741dc0],cx
  4227d5:	adc    ecx,DWORD PTR [esi]
  4227d7:	lahf   
  4227d8:	sub    DWORD PTR [ecx+0x45e0de63],ebp
  4227de:	stc    
  4227df:	jno    0x42282e
  4227e1:	cld    
  4227e2:	xor    ebx,DWORD PTR [edx+0xc7e7ec]
  4227e8:	xchg   esp,eax
  4227e9:	dec    ebp
  4227ea:	popa   
  4227eb:	mov    edi,0xa9581ffa
  4227f0:	inc    ecx
  4227f1:	retf   
  4227f2:	dec    ebx
  4227f3:	in     eax,0x7e
  4227f5:	sbb    DWORD PTR [esi+0x27],edx
  4227f8:	sbb    BYTE PTR [edi-0x37],ch
  4227fb:	stos   DWORD PTR es:[edi],eax
  4227fc:	mov    ch,0xc9
  4227fe:	sbb    bl,BYTE PTR [edi]
  422800:	xlat   BYTE PTR ds:[ebx]
  422801:	pop    edx
  422802:	popa   
  422803:	std    
  422804:	outs   dx,DWORD PTR ds:[esi]
  422805:	scas   al,BYTE PTR es:[edi]
  422806:	fldlg2 
  422808:	repz sbb BYTE PTR ds:0xaf99af62,dl
  42280f:	jae    0x422818
  422811:	dec    edi
  422812:	shl    DWORD PTR [esi+ebp*8+0x63],cl
  422816:	fsub   st,st(5)
  422818:	ret    0x8410
  42281b:	iret   
  42281c:	inc    esp
  42281d:	jmp    0x9ec409c5
  422822:	adc    edx,DWORD PTR [eax]
  422824:	jl     0x42282b
  422826:	inc    esp
  422827:	jae    0x4227f7
  422829:	(bad)  
  42282a:	stc    
  42282b:	jb     0x4228a6
  42282d:	in     al,dx
  42282e:	(bad)  
  422830:	xchg   DWORD PTR [esi+0xc7db42d],esp
  422836:	jae    0x4227fd
  422838:	je     0x42283c
  42283a:	mov    ds:0x5246506c,eax
  42283f:	push   es
  422840:	sbb    cl,BYTE PTR [bx+di+0x78b2]
  422845:	and    eax,0xadca0559
  42284a:	sbb    eax,0xdb5905cf
  42284f:	jmp    0x422821
  422851:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422852:	sahf   
  422853:	mov    ah,0x8f
  422855:	jne    0x422834
  422857:	mov    WORD PTR [edi],ds
  422859:	mov    ebp,0x5dcd2824
  42285e:	sbb    BYTE PTR [ebp+0x1f2d2440],ah
  422864:	mov    ebp,0xa54d2f45
  422869:	mov    WORD PTR [edi],cs
  42286b:	fidivr WORD PTR [ecx-0x2]
  42286e:	dec    ebp
  42286f:	pop    edx
  422870:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422871:	fcomp  DWORD PTR [esi]
  422873:	pop    ss
  422874:	shl    DWORD PTR [eax-0x5c353242],0x93
  42287b:	mov    esi,0xa73e5d4e
  422880:	dec    edx
  422881:	push   ebx
  422882:	vpminsw xmm1,xmm3,XMMWORD PTR [eax+0x20]
  422887:	push   ecx
  422888:	mov    esi,0x77ed5365
  42288d:	sti    
  42288e:	mov    DWORD PTR [ecx+0x7bab2c29],esi
  422894:	iret   
  422895:	cmp    eax,0xcfad22ac
  42289a:	test   BYTE PTR [ecx+0x30],dh
  42289d:	mov    cl,0x14
  42289f:	mov    esi,0x57311b92
  4228a4:	call   0x7625:0xd676a095
  4228ab:	pop    ebp
  4228ac:	scas   al,BYTE PTR es:[edi]
  4228ad:	push   ecx
  4228ae:	ficom  DWORD PTR [eax-0x51]
  4228b1:	or     DWORD PTR [ebx-0x57495e71],0xffffffe8
  4228b8:	rcl    ebp,0x44
  4228bb:	ja     0x4228fc
  4228bd:	ret    0xe800
  4228c0:	leave  
  4228c1:	cmp    BYTE PTR [edi+0x52b8f00f],al
  4228c7:	aam    0xf9
  4228c9:	cmp    cl,BYTE PTR [edi-0x5e]
  4228cc:	or     cl,ch
  4228ce:	mov    esp,0xf2fd515b
  4228d3:	(bad)  [edi-0x7bb4f886]
  4228d9:	les    edx,FWORD PTR [edx-0x29]
  4228dc:	cmp    BYTE PTR [edx+0x7a],dl
  4228df:	push   0xffffffbd
  4228e1:	sbb    eax,0x68e5a76d
  4228e6:	or     edi,DWORD PTR [edi+0x420cb225]
  4228ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4228ed:	or     BYTE PTR [edi+0x9],bh
  4228f0:	adc    ebx,DWORD PTR [edi+0x44]
  4228f3:	push   esi
  4228f4:	jnp    0x4228e5
  4228f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4228f7:	or     cl,BYTE PTR ds:0x8b304289
  4228fd:	icebp  
  4228fe:	aam    0x3d
  422900:	fimul  WORD PTR ds:0xb1a9e532
  422906:	and    al,0x75
  422908:	mov    ecx,0xb52fc20f
  42290d:	mov    esi,0xd07d778b
  422912:	in     al,dx
  422913:	fdiv   QWORD PTR [edi+0x2d]
  422916:	cmp    bl,BYTE PTR [edi]
  422918:	cmp    eax,0x3e13629f
  42291d:	fwait
  42291e:	inc    ecx
  42291f:	outs   dx,DWORD PTR ds:[esi]
  422920:	(bad)  
  422921:	mov    dl,BYTE PTR [esp+eax*4+0x7c495dfa]
  422928:	xor    DWORD PTR [edi-0x60],edx
  42292b:	mov    es,edx
  42292d:	cmp    DWORD PTR [esi+eax*1+0x1b],esi
  422931:	(bad)  
  422932:	xor    edi,DWORD PTR [edx-0x6f646ec2]
  422938:	push   esi
  422939:	xchg   esp,eax
  42293a:	cmc    
  42293b:	xlat   BYTE PTR ds:[ebx]
  42293c:	dec    eax
  42293d:	sbb    bh,BYTE PTR [edi]
  42293f:	sbb    ecx,esp
  422941:	jge    0x42297d
  422943:	test   eax,0xc2691615
  422948:	enter  0x59a7,0x94
  42294c:	rcl    DWORD PTR [ecx],0x53
  42294f:	sahf   
  422950:	xchg   edx,eax
  422951:	xchg   edx,eax
  422952:	pop    esi
  422953:	mov    al,0xf
  422955:	and    DWORD PTR [eax],0xffffffcc
  422958:	loope  0x42298a
  42295a:	cmp    BYTE PTR [edx+0x5ec11f9b],ch
  422960:	adc    ebx,ecx
  422962:	in     al,dx
  422963:	xchg   edx,eax
  422964:	cs cmp eax,0x630da7c7
  42296a:	xor    eax,0x52d2f0b4
  42296f:	js     0x422946
  422971:	xor    DWORD PTR [esi+0x73],ecx
  422974:	inc    esp
  422975:	stc    
  422976:	clc    
  422977:	xchg   ecx,eax
  422978:	repnz aad 0x7d
  42297b:	int    0x26
  42297d:	std    
  42297e:	mov    dl,0xc7
  422980:	pop    esp
  422981:	clc    
  422982:	repnz adc eax,0x461e9125
  422988:	xor    ecx,DWORD PTR [edi-0x45a2d8ac]
  42298e:	push   ds
  42298f:	ror    DWORD PTR [edi+0x1cfe0492],0x46
  422996:	imul   edx,DWORD PTR [ecx-0x1b],0x7a
  42299a:	or     esi,DWORD PTR ds:0x163811e0
  4229a0:	inc    esi
  4229a1:	pop    esi
  4229a2:	mov    esp,0xd3ac3618
  4229a7:	and    al,0x1b
  4229a9:	aaa    
  4229aa:	dec    edx
  4229ab:	cdq    
  4229ac:	pushf  
  4229ad:	imul   edx,ebx,0x4b7eb397
  4229b3:	(bad)  
  4229b4:	xor    BYTE PTR [edi+0x1356c990],ch
  4229ba:	stc    
  4229bb:	cdq    
  4229bc:	xchg   ebp,eax
  4229bd:	ins    DWORD PTR es:[edi],dx
  4229be:	cdq    
  4229bf:	mov    dh,0x2b
  4229c1:	sub    BYTE PTR [esi+0x4399ab94],bl
  4229c7:	mov    ds:0xd55ae194,eax
  4229cc:	mov    edx,0x522ebbf2
  4229d1:	sahf   
  4229d2:	mov    cl,0x99
  4229d4:	popa   
  4229d5:	xlat   BYTE PTR ds:[ebx]
  4229d6:	or     ebx,edx
  4229d8:	loope  0x422a44
  4229da:	cmp    ch,BYTE PTR [eax-0x51d00623]
  4229e0:	bound  esi,QWORD PTR [edx]
  4229e2:	jns    0x422981
  4229e4:	add    bl,dl
  4229e6:	or     DWORD PTR [eax],edi
  4229e8:	xor    DWORD PTR [ebp-0x38a35b23],esp
  4229ee:	mov    al,0x6
  4229f0:	sbb    dh,BYTE PTR [eax+ebp*2]
  4229f3:	xchg   edx,eax
  4229f4:	mov    al,ds:0x5b69fd6b
  4229f9:	add    eax,0x23fb7b38
  4229fe:	or     DWORD PTR [ebp+ecx*1-0x8],ecx
  422a02:	sahf   
  422a03:	loope  0x422a80
  422a05:	aaa    
  422a06:	call   0xcbf588d6
  422a0b:	jbe    0x4229e2
  422a0d:	(bad)  
  422a0e:	lahf   
  422a0f:	rcr    DWORD PTR [esi],1
  422a11:	add    bh,0xb2
  422a14:	pop    ss
  422a15:	fwait
  422a16:	into   
  422a17:	jno    0x4229fb
  422a19:	pop    eax
  422a1a:	sub    ch,BYTE PTR [ecx]
  422a1c:	lods   eax,DWORD PTR ds:[esi]
  422a1d:	dec    eax
  422a1e:	imul   ebx,esi,0xfffffffd
  422a21:	rol    DWORD PTR [esp+ecx*1+0x19],cl
  422a25:	mov    esp,0xf849c70a
  422a2a:	nop
  422a2b:	adc    eax,0x9a970fe4
  422a30:	or     edx,DWORD PTR [esi+0x53]
  422a33:	or     edi,DWORD PTR [eax+eax*1-0x3d]
  422a37:	pop    ebx
  422a38:	mov    dh,0xd9
  422a3a:	sar    DWORD PTR [eax-0x1b],1
  422a3d:	mov    ch,0xd2
  422a3f:	mov    bl,bl
  422a41:	test   al,0xce
  422a43:	aam    0xc4
  422a45:	fwait
  422a46:	or     BYTE PTR [eax+ecx*1-0x1b],0x18
  422a4b:	pop    edx
  422a4c:	adc    dl,BYTE PTR [edi+ecx*8]
  422a4f:	add    BYTE PTR [ebx-0x76],al
  422a52:	repz sbb al,0x32
  422a55:	xchg   esi,eax
  422a56:	mov    eax,ds:0xc325560c
  422a5b:	test   al,0x25
  422a5d:	cmp    al,0x5b
  422a5f:	rcl    BYTE PTR [ecx],cl
  422a61:	mov    dl,0x27
  422a63:	lahf   
  422a64:	fistp  WORD PTR [eax+0x7f037683]
  422a6a:	sti    
  422a6b:	ret    
  422a6c:	dec    bx
  422a6e:	push   DWORD PTR [ebx+0x432dfcef]
  422a74:	or     ebx,DWORD PTR [eax+0x79199d7b]
  422a7a:	out    dx,eax
  422a7b:	stc    
  422a7c:	mov    edi,0x73cba5d
  422a81:	sbb    cl,BYTE PTR [edi-0x763cbf5d]
  422a87:	xor    dh,BYTE PTR [edx]
  422a89:	or     ch,BYTE PTR [eax-0x722e4424]
  422a8f:	sbb    BYTE PTR [edi-0x38d16078],dl
  422a95:	cmp    DWORD PTR [eax+ecx*1-0x37],ebx
  422a99:	jge    0x422aa3
  422a9b:	xor    al,0x23
  422a9d:	repnz mov fs,WORD PTR [esi-0x3e]
  422aa1:	addr16 pop eax
  422aa3:	jno    0x422a4a
  422aa5:	fisttp QWORD PTR [ebp+0x46]
  422aa8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422aa9:	lods   al,BYTE PTR ds:[esi]
  422aaa:	pop    ds
  422aab:	mov    al,ds:0x2e3d97b5
  422ab0:	das    
  422ab1:	lods   al,BYTE PTR ds:[esi]
  422ab2:	dec    eax
  422ab3:	in     eax,dx
  422ab4:	mov    bl,0xdb
  422ab6:	push   ss
  422ab7:	add    al,0xa6
  422ab9:	and    ebx,ebp
  422abb:	(bad)  
  422abc:	(bad)  
  422abe:	push   edx
  422abf:	gs pushf 
  422ac1:	scas   al,BYTE PTR es:[edi]
  422ac2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422ac3:	arpl   WORD PTR [ecx+0x1f],sp
  422ac6:	jnp    0x422a8d
  422ac8:	(bad)  
  422ac9:	sbb    eax,0x9091
  422ace:	add    BYTE PTR [eax],al
  422ad0:	add    BYTE PTR [eax],al
  422ad2:	(bad)  
  422ad3:	xlat   BYTE PTR ds:[ebx]
  422ad4:	hlt    
  422ad5:	push   ebp
  422ad7:	jmp    FWORD PTR [ebx-0x21]
  422ada:	sub    al,0x7c
  422adc:	cmp    BYTE PTR [edx+0x6874bdf4],bh
  422ae2:	sub    eax,0xf20001a4
  422ae7:	add    al,0x0
  422ae9:	add    BYTE PTR [edx-0x7ac54b9e],al
  422aef:	mov    ch,0x7d
  422af1:	jb     0x422b08
  422af3:	icebp  
  422af4:	cli    
  422af5:	cmp    edx,DWORD PTR [edi+0xd3f0086]
  422afb:	sbb    eax,0xe770e238
  422b00:	xchg   DWORD PTR [ecx+0x33],esp
  422b03:	(bad)  
  422b04:	cld    
  422b05:	mov    BYTE PTR [ecx-0x4fef1faa],al
  422b0b:	aam    0xe4
  422b0d:	call   DWORD PTR [edx+esi*1+0x55]
  422b11:	cmp    dl,bl
  422b13:	addr16 jo 0x422b27
  422b16:	mul    bh
  422b18:	(bad)  
  422b19:	ffree  st(7)
  422b1b:	pop    ebx
  422b1c:	aam    0xa9
  422b1e:	add    cl,BYTE PTR [esi]
  422b20:	mov    edi,0x14a25b1f
  422b25:	sub    BYTE PTR [edx+0x2389fd82],dh
  422b2b:	pusha  
  422b2c:	jne    0x422b53
  422b2e:	sub    BYTE PTR [eax],ch
  422b30:	dec    esi
  422b31:	stos   DWORD PTR es:[edi],eax
  422b32:	lock enter 0x13c6,0x9b
  422b37:	inc    ecx
  422b38:	shr    BYTE PTR ds:0xb4691a98,0xa3
  422b3f:	pop    eax
  422b40:	jmp    0x5606:0x841a1ba9
  422b47:	mov    ecx,cs
  422b49:	jne    0x422b17
  422b4b:	sti    
  422b4c:	scas   al,BYTE PTR es:[edi]
  422b4d:	mov    eax,ds:0x9e13a2b0
  422b52:	shl    DWORD PTR [edx-0x3a],0x93
  422b56:	or     BYTE PTR [ebp+0x6f],0x53
  422b5a:	vpcomuq xmm0,xmm2,XMMWORD PTR [ecx],0x96
  422b60:	jmp    0x50b8:0x5e2b07e7
  422b67:	fld    QWORD PTR ds:0x66a4968a
  422b6d:	mov    cl,0x74
  422b6f:	lods   al,BYTE PTR ds:[esi]
  422b70:	fs fdivr st(2),st
  422b73:	int    0xf6
  422b75:	repz sbb DWORD PTR [edx],ecx
  422b78:	stos   BYTE PTR es:[edi],al
  422b79:	jnp    0x422b93
  422b7b:	xor    ebp,esp
  422b7d:	sbb    ecx,DWORD PTR [esi+0x55f91585]
  422b83:	fadd   DWORD PTR [ecx+0xa]
  422b86:	ret    
  422b87:	mov    eax,0xae7401b4
  422b8c:	mov    BYTE PTR [eax+edi*1-0x32],0xad
  422b91:	fstp   DWORD PTR [esi+0x64835da0]
  422b97:	(bad)  
  422b98:	push   0x32
  422b9a:	xor    ebp,ebx
  422b9c:	vpor   ymm4,ymm6,YMMWORD PTR [ebp-0x29]
  422ba1:	in     al,dx
  422ba2:	sbb    eax,0x977f23f6
  422ba7:	enter  0x3426,0x42
  422bab:	add    al,0xd4
  422bad:	add    al,0x8a
  422baf:	loop   0x422b7b
  422bb1:	ins    BYTE PTR es:[edi],dx
  422bb2:	hlt    
  422bb3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422bb4:	xor    eax,0xac6773bf
  422bb9:	add    ebx,ebx
  422bbb:	or     esi,DWORD PTR [ebx-0xe5e4220]
  422bc1:	xchg   edx,eax
  422bc2:	jmp    0x454712ae
  422bc7:	push   edi
  422bc8:	xchg   ecx,eax
  422bc9:	in     eax,dx
  422bca:	cmc    
  422bcb:	aam    0xf3
  422bcd:	xchg   edx,eax
  422bce:	shr    edx,1
  422bd0:	addr16 loope 0x422b84
  422bd3:	xchg   ecx,eax
  422bd4:	sahf   
  422bd5:	mov    cl,0x29
  422bd7:	cmp    eax,0x3e72ace
  422bdc:	shl    BYTE PTR [edi+0x28],cl
  422bdf:	lea    edx,ds:0xf395ae85
  422be5:	jae    0x422c0b
  422be7:	jmp    0x9acb:0x19956a96
  422bee:	call   0xb4d:0x6babcf0
  422bf5:	mov    esi,0x101285d5
  422bfa:	(bad)  [edx+0x6]
  422bfd:	stos   DWORD PTR es:[edi],eax
  422bfe:	ret    
  422bff:	jg     0x422bd5
  422c01:	or     ecx,ebp
  422c03:	jae    0x422c78
  422c05:	dec    ebx
  422c06:	shr    bl,cl
  422c08:	ror    al,cl
  422c0a:	dec    ecx
  422c0b:	xchg   cl,dl
  422c0d:	popa   
  422c0e:	xor    eax,0x79fc36a
  422c13:	push   0x5fe8dae9
  422c18:	mov    WORD PTR [edx+0x199d4112],ds
  422c1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422c1f:	mov    eax,ds:0xeca5e974
  422c24:	mov    bh,0x6f
  422c26:	aad    0x38
  422c28:	inc    eax
  422c29:	aas    
  422c2a:	pop    es
  422c2b:	dec    ebx
  422c2c:	std    
  422c2d:	popa   
  422c2e:	retf   
  422c2f:	cdq    
  422c30:	add    al,0x75
  422c32:	stos   DWORD PTR es:[edi],eax
  422c33:	sbb    al,0x2c
  422c35:	pop    edi
  422c36:	ins    BYTE PTR es:[edi],dx
  422c37:	xor    BYTE PTR [ecx+0x57fd9634],bl
  422c3d:	cwde   
  422c3e:	fcom   QWORD PTR [esi]
  422c40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422c41:	sub    al,0xd9
  422c43:	mov    cl,0x6c
  422c45:	pushf  
  422c46:	jno    0x422cc1
  422c48:	pop    eax
  422c49:	cmp    dl,BYTE PTR [eax+ecx*4+0x57]
  422c4d:	add    DWORD PTR [esi+0x179b7b39],edx
  422c53:	xchg   DWORD PTR [edi-0x2c],edx
  422c56:	adc    BYTE PTR [eax+0x35273dbe],al
  422c5c:	dec    eax
  422c5d:	xchg   BYTE PTR [eax],bl
  422c5f:	mov    dh,0xc2
  422c61:	mov    edi,0x2a1c32dc
  422c66:	inc    eax
  422c67:	mov    ah,0xe4
  422c69:	cli    
  422c6a:	sub    al,0x47
  422c6c:	jecxz  0x422c9b
  422c6e:	adc    al,0x9a
  422c70:	fcomp  DWORD PTR [ebx]
  422c72:	adc    BYTE PTR [ecx-0x7],dl
  422c75:	cmp    eax,0x8c5bd140
  422c7a:	mov    al,ds:0x267cc916
  422c7f:	pop    ebp
  422c80:	push   ebp
  422c81:	ins    BYTE PTR es:[edi],dx
  422c82:	iret   
  422c83:	sbb    ch,BYTE PTR [ecx]
  422c85:	pop    ss
  422c86:	mov    eax,0x86faa31a
  422c8b:	mov    ecx,0x21489b13
  422c90:	xchg   DWORD PTR [ebx+0x55],ebx
  422c93:	iret   
  422c94:	xchg   edi,eax
  422c95:	jbe    0x422ca3
  422c97:	push   0x51
  422c99:	retf   
  422c9a:	aas    
  422c9b:	pop    eax
  422c9c:	sbb    ch,ch
  422c9e:	mov    edx,0xff9e3761
  422ca3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422ca4:	cmp    eax,0x830f6582
  422ca9:	sub    BYTE PTR [esi],0x97
  422cac:	mov    cl,0x24
  422cae:	stc    
  422caf:	test   BYTE PTR [ebp+0x41],ch
  422cb2:	jge    0x422cca
  422cb4:	mov    esp,cr1
  422cb7:	adc    DWORD PTR [ecx+0x4b],edx
  422cba:	xor    edx,esp
  422cbc:	mov    bl,0x23
  422cbe:	cmc    
  422cbf:	push   0x8d2a9daf
  422cc4:	call   0x185245dd
  422cc9:	mov    eax,0x500000cb
  422cce:	push   0x2eb74947
  422cd3:	fldcw  WORD PTR [eax]
  422cd5:	das    
  422cd6:	xor    BYTE PTR [ecx-0x65],ah
  422cd9:	(bad)  
  422cda:	ret    0x1e59
  422cdd:	and    edx,esi
  422cdf:	jmp    0x2dad:0x5d61f32f
  422ce6:	sahf   
  422ce7:	in     eax,dx
  422ce8:	mov    edx,0x4666b544
  422ced:	jnp    0x422ce7
  422cef:	stc    
  422cf0:	(bad)  
  422cf1:	dec    ecx
  422cf2:	mov    dh,0x55
  422cf4:	xor    BYTE PTR ds:0xebe7898a,ch
  422cfa:	jb     0x422cd1
  422cfc:	and    DWORD PTR [edx],0xffffffeb
  422cff:	ss fldpi 
  422d02:	inc    ecx
  422d03:	ror    DWORD PTR [eax],0x4d
  422d06:	adc    al,0xf9
  422d08:	shl    esp,0x74
  422d0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422d0c:	xor    DWORD PTR [ebx],edi
  422d0e:	std    
  422d0f:	jo     0x422d31
  422d11:	int    0xd7
  422d13:	ror    BYTE PTR [ecx],cl
  422d15:	push   ecx
  422d16:	adc    ah,BYTE PTR [eax+0x18]
  422d19:	jne    0x422d32
  422d1b:	jmp    0x422d68
  422d1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422d1e:	push   es
  422d1f:	jmp    0x70b5:0xbdc5ad8e
  422d26:	push   ecx
  422d27:	mov    al,0xb0
  422d29:	out    0x18,al
  422d2b:	jl     0x422ce3
  422d2d:	and    al,0xbf
  422d2f:	add    eax,0xd20431e4
  422d34:	int    0xa4
  422d36:	nop
  422d37:	loopne 0x422cd0
  422d39:	stos   DWORD PTR es:[edi],eax
  422d3a:	jmp    0xd68d61cb
  422d3f:	or     al,0x2b
  422d41:	push   eax
  422d42:	add    ch,BYTE PTR [ebp+eax*8+0x79]
  422d46:	sbb    al,dl
  422d48:	push   ebp
  422d49:	xchg   esp,eax
  422d4a:	sahf   
  422d4b:	mov    DWORD PTR [ecx],eax
  422d4d:	inc    edx
  422d4e:	sbb    DWORD PTR [eax+0x3222b1d4],ecx
  422d54:	mov    ebx,0x426ed10f
  422d59:	pop    edi
  422d5a:	rcl    DWORD PTR [eax+0x71316033],cl
  422d60:	or     BYTE PTR [ebx+0x52],ch
  422d63:	push   ds
  422d64:	pop    edx
  422d65:	xor    BYTE PTR [edx+0x74],dl
  422d68:	mov    ecx,0xa17114a
  422d6d:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422d6f:	sub    esp,ecx
  422d71:	and    DWORD PTR [ebp-0x58],edi
  422d74:	or     al,0xe9
  422d76:	jmp    0xe550d39a
  422d7b:	ror    DWORD PTR [ebx+0x1],cl
  422d7e:	retf   
  422d7f:	stc    
  422d80:	xchg   DWORD PTR [eax-0x7e],edi
  422d83:	mov    al,0x9c
  422d85:	pop    edx
  422d86:	nop
  422d87:	icebp  
  422d88:	ins    BYTE PTR es:[edi],dx
  422d89:	mov    WORD PTR [ebx+0x66],?
  422d8c:	mul    BYTE PTR [eax-0x1f]
  422d8f:	call   0x882e9b3e
  422d94:	sbb    DWORD PTR [ecx+0x6c61d1f9],ecx
  422d9a:	mov    bh,0x81
  422d9c:	jbe    0x422e0b
  422d9e:	test   edi,0xad3b6f5f
  422da4:	aas    
  422da5:	add    al,0x6
  422da7:	cmp    eax,0xef7bdcdf
  422dac:	cli    
  422dad:	call   0xffc704d4
  422db2:	xor    DWORD PTR [ecx],edx
  422db4:	mov    esp,0xca6c04d0
  422db9:	retf   
  422dba:	js     0x422daf
  422dbc:	and    DWORD PTR [edx+0x6660e17c],ebx
  422dc2:	int3   
  422dc3:	inc    esi
  422dc4:	cmp    ebx,DWORD PTR [edx+0x73ccccbf]
  422dca:	push   ds
  422dcb:	cld    
  422dcc:	lea    ebx,[edi+0x4a6a51e7]
  422dd2:	pushf  
  422dd3:	stc    
  422dd4:	add    al,0x4c
  422dd6:	adc    eax,0xbd1e7fb5
  422ddb:	xor    eax,0x8b7249e2
  422de0:	cmp    ah,BYTE PTR [eax]
  422de2:	(bad)  [edx-0x49643580]
  422de8:	fistp  QWORD PTR [esi]
  422dea:	and    ecx,DWORD PTR [ecx+0x70]
  422ded:	mov    ebx,0xd85dbddd
  422df2:	call   0xd124:0x968b3107
  422df9:	push   0x15f2c3c4
  422dfe:	jg     0x422e3c
  422e00:	stos   BYTE PTR es:[edi],al
  422e01:	or     ch,BYTE PTR [edx+0x50]
  422e04:	pop    ss
  422e05:	cmp    esp,DWORD PTR [esp+edi*2]
  422e08:	ror    BYTE PTR ds:[ecx-0x3],0x8
  422e0d:	mov    DWORD PTR [ecx],edx
  422e0f:	les    ebp,FWORD PTR [edi]
  422e11:	cdq    
  422e12:	inc    edi
  422e13:	xor    DWORD PTR [edx],eax
  422e15:	mov    ch,0x9e
  422e17:	sub    ah,BYTE PTR [edi-0x1a39a68e]
  422e1d:	aad    0x5d
  422e1f:	es or  ebp,edi
  422e22:	fcmove st,st(5)
  422e24:	lods   al,BYTE PTR ds:[esi]
  422e25:	mov    ebp,0xeb412bca
  422e2a:	jb     0x422df7
  422e2c:	dec    eax
  422e2d:	xor    eax,0x26981f15
  422e32:	outs   dx,BYTE PTR ds:[esi]
  422e33:	cld    
  422e34:	retf   0x450b
  422e37:	push   eax
  422e38:	xchg   BYTE PTR [eax],bl
  422e3a:	sbb    al,0xa4
  422e3c:	ja     0x422ea4
  422e3e:	ins    DWORD PTR es:[edi],dx
  422e3f:	outs   dx,DWORD PTR ds:[esi]
  422e40:	sub    al,0x1e
  422e42:	fdivr  st(3),st
  422e44:	repnz fwait
  422e46:	add    ah,BYTE PTR [eax+0x67c1cf4]
  422e4c:	repnz inc edi
  422e4e:	inc    esp
  422e4f:	loop   0x422eb6
  422e51:	rol    BYTE PTR [ebp+0x56abb681],cl
  422e57:	push   esp
  422e58:	mov    ebx,0xd8a69d01
  422e5d:	dec    eax
  422e5e:	in     al,dx
  422e5f:	xchg   esp,eax
  422e60:	pop    ebx
  422e61:	cmp    al,0x51
  422e63:	xchg   esp,eax
  422e64:	aam    0x48
  422e66:	sbb    al,0xd6
  422e68:	push   0x7e
  422e6a:	jecxz  0x422e3c
  422e6c:	cmovp  esi,esp
  422e6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422e70:	test   BYTE PTR [edi*8-0x58d83c37],ah
  422e77:	aad    0x7c
  422e79:	push   esi
  422e7a:	mov    dl,0x5
  422e7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422e7d:	pop    eax
  422e7e:	adc    eax,0xfc76e9c0
  422e83:	mov    bh,0xc9
  422e85:	aas    
  422e86:	fprem1 
  422e88:	out    0xe,al
  422e8a:	into   
  422e8b:	clc    
  422e8c:	xchg   ebp,eax
  422e8d:	mov    edi,0x113b6691
  422e92:	pop    es
  422e93:	pusha  
  422e94:	or     al,0x8f
  422e96:	inc    ebp
  422e97:	jp     0x422e92
  422e99:	inc    esi
  422e9a:	inc    esp
  422e9b:	jmp    0x9e01:0x5a3600ed
  422ea2:	mov    ds:0xe3830ecf,al
  422ea7:	and    DWORD PTR ds:0xc6cf6d8c,esi
  422ead:	add    ebp,DWORD PTR [eax+0x44]
  422eb0:	mov    dh,0xfe
  422eb2:	int    0x27
  422eb4:	xchg   DWORD PTR ds:[esi-0x4a4cbaaf],edx
  422ebb:	push   ss
  422ebc:	and    dh,BYTE PTR [ebp+0x2079d3ba]
  422ec2:	test   al,0xe6
  422ec4:	mov    edi,0x9363ed9
  422ec9:	ja     0x422e96
  422ecb:	cld    
  422ecc:	in     al,0x68
  422ece:	ins    DWORD PTR es:[edi],dx
  422ecf:	push   0xeee2666
  422ed4:	mov    esi,0x174e05f7
  422ed9:	call   0x9007a12
  422ede:	icebp  
  422edf:	in     eax,0xe9
  422ee1:	nop
  422ee2:	jg     0xda33ff1
  422ee8:	jbe    0x422ecd
  422eea:	loope  0x422f19
  422eec:	jb     0x422e76
  422eee:	mov    ah,0xfd
  422ef0:	and    ebx,eax
  422ef2:	retf   0x6b25
  422ef5:	imul   eax,DWORD PTR [eax+0xa],0x6dc3022
  422efc:	adc    al,0x44
  422efe:	dec    ebp
  422eff:	retf   
  422f00:	mov    bl,0xb3
  422f02:	pavgb  mm4,QWORD PTR [edi]
  422f05:	xchg   ebp,eax
  422f06:	mov    ds:0x97df2e7c,al
  422f0b:	jo     0x422f6a
  422f0d:	int3   
  422f0e:	hlt    
  422f0f:	dec    ebp
  422f10:	push   esi
  422f11:	ret    
  422f12:	inc    edi
  422f13:	iret   
  422f14:	push   esi
  422f15:	pop    ecx
  422f16:	retf   0xde09
  422f19:	sbb    esi,DWORD PTR [ebx+0x6e5a06c2]
  422f1f:	mov    bh,0xab
  422f21:	cmp    cl,BYTE PTR [ebx+0x8]
  422f24:	mov    ds:0x9ca6881f,eax
  422f29:	or     al,0x15
  422f2b:	popa   
  422f2c:	hlt    
  422f2d:	scas   eax,DWORD PTR es:[edi]
  422f2e:	sbb    ecx,DWORD PTR [esi+0x2973902b]
  422f34:	into   
  422f35:	inc    ebx
  422f36:	mov    eax,ds:0x946df57b
  422f3b:	sar    BYTE PTR [ebp+0x351e63bf],cl
  422f41:	sub    al,0x32
  422f43:	add    ebp,DWORD PTR [esi-0x10267520]
  422f49:	xchg   ebp,eax
  422f4a:	xor    eax,DWORD PTR [ebp-0x6f]
  422f4d:	mov    ah,0x41
  422f4f:	cmp    al,0x27
  422f51:	imul   edi,edx,0xffffffcf
  422f54:	test   BYTE PTR [edi-0x671de54d],ah
  422f5a:	rcr    DWORD PTR [ebx+edi*4],cl
  422f5d:	imul   ecx,DWORD PTR [edx-0x78],0x9bd9255c
  422f64:	fabs   
  422f66:	scas   eax,DWORD PTR es:[edi]
  422f67:	inc    esp
  422f68:	jae    0x422f2a
  422f6a:	pop    es
  422f6b:	lfs    ebx,FWORD PTR [edx-0x5d]
  422f6f:	jb     0x422f44
  422f71:	mov    edx,0x35954c16
  422f76:	scas   al,BYTE PTR es:[edi]
  422f77:	xor    al,0xd7
  422f79:	push   ecx
  422f7a:	ins    DWORD PTR es:[edi],dx
  422f7b:	dec    ebx
  422f7c:	pop    eax
  422f7d:	jo     0x422f44
  422f7f:	xlat   BYTE PTR ds:[ebx]
  422f80:	pop    ecx
  422f81:	pop    ebp
  422f82:	inc    esi
  422f83:	inc    edx
  422f84:	inc    ebx
  422f85:	inc    esp
  422f86:	sub    ebx,DWORD PTR [esi+0x68]
  422f89:	xor    BYTE PTR [edi],bl
  422f8b:	aas    
  422f8c:	pop    esp
  422f8d:	push   es
  422f8e:	mov    bh,0x5b
  422f90:	call   0xae645173
  422f95:	fcmovnbe st,st(2)
  422f97:	popf   
  422f98:	shl    DWORD PTR [eax-0x34],cl
  422f9b:	inc    edi
  422f9c:	and    edi,DWORD PTR [edi-0x35]
  422f9f:	mov    edx,0x2e477b97
  422fa4:	dec    ecx
  422fa5:	xchg   esi,eax
  422fa6:	loopne 0x423016
  422fa8:	xchg   BYTE PTR [ecx-0x37529247],dh
  422fae:	leave  
  422faf:	and    dl,ch
  422fb1:	aad    0xa1
  422fb3:	adc    DWORD PTR [ecx-0x17f760a5],esi
  422fb9:	stc    
  422fba:	fnsave fs:[eax-0x63]
  422fbe:	jb     0x422fe7
  422fc0:	test   al,0x6f
  422fc2:	and    bl,BYTE PTR [edx-0x3d042924]
  422fc8:	push   ebx
  422fc9:	sbb    edx,esp
  422fcb:	fs retf 0x63a
  422fcf:	dec    edx
  422fd0:	and    dl,BYTE PTR [esi-0x2ae37ce7]
  422fd6:	enter  0x6c7c,0x0
  422fda:	add    edx,ecx
  422fdc:	add    BYTE PTR [eax],al
  422fde:	add    BYTE PTR [eax],al
  422fe0:	add    BYTE PTR [eax],al
  422fe2:	cvtdq2ps xmm0,XMMWORD PTR [esi+edx*1+0x5b9fdfd4]
  422fea:	dec    ebp
  422feb:	sar    ebx,cl
  422fed:	adc    esi,edx
  422fef:	push   edi
  422ff0:	popa   
  422ff1:	cld    
  422ff2:	pop    ds
  422ff3:	test   eax,0x4f20001
  422ff8:	add    BYTE PTR [eax],al
  422ffa:	xchg   ebp,eax
  422ffb:	or     al,0xa4
  422ffd:	pop    ebx
  422ffe:	inc    eax
  422fff:	icebp  
  423000:	xchg   ebx,eax
  423001:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423002:	(bad)  
  423004:	mov    ?,ebp
  423006:	adc    DWORD PTR [edi],eax
  423008:	clc    
  423009:	cmp    eax,0xff7665c0
  42300e:	mov    WORD PTR [ecx+0x36],ss
  423011:	shl    DWORD PTR [esi+0x61],1
  423014:	aaa    
  423015:	std    
  423016:	mov    ah,0x30
  423018:	mov    dh,0x1
  42301a:	jbe    0x423093
  42301c:	inc    edi
  42301d:	daa    
  42301e:	popa   
  42301f:	adc    eax,0xe7c9403a
  423024:	sbb    eax,0x441b07ab
  423029:	outs   dx,DWORD PTR ds:[esi]
  42302a:	lods   al,BYTE PTR ds:[esi]
  42302b:	push   0xfffffffb
  42302d:	shl    dl,1
  42302f:	mov    ebx,0xcb95d985
  423034:	mov    esp,0xbc983888
  423039:	mov    dl,0x5c
  42303b:	mov    edi,ecx
  42303d:	aad    0x51
  42303f:	pop    ebp
  423040:	pop    edx
  423041:	int    0xdc
  423043:	pop    ds
  423044:	pmaddwd mm5,QWORD PTR [ecx+eax*1-0x2d6566bf]
  42304c:	pop    ds
  42304d:	retf   
  42304e:	dec    edx
  42304f:	mov    edi,ebp
  423051:	jae    0x422ff1
  423053:	pusha  
  423054:	xor    ah,BYTE PTR [ecx+0x38d1e9d2]
  42305a:	inc    esp
  42305b:	push   edx
  42305c:	jnp    0x423016
  42305e:	retf   
  42305f:	in     al,dx
  423060:	push   eax
  423061:	mov    ah,0xba
  423063:	arpl   si,dx
  423065:	mov    dh,0x1
  423067:	icebp  
  423068:	and    cl,BYTE PTR [ebx+edx*8+0x1e024aa1]
  42306f:	in     al,dx
  423070:	cmp    al,0x4
  423072:	mov    BYTE PTR [edi+ebx*1],0xcb
  423076:	push   edi
  423077:	or     edi,DWORD PTR [edi-0x12]
  42307a:	rcr    al,0x6f
  42307d:	out    0xab,al
  42307f:	or     eax,0x4274b2c
  423084:	push   0xffffffbd
  423086:	or     edi,esp
  423088:	stc    
  423089:	pop    ss
  42308a:	cmp    al,bh
  42308c:	sub    eax,0x9545e6cf
  423091:	mov    WORD PTR [edi-0xe],?
  423094:	xor    BYTE PTR [edx+ebp*8],bl
  423097:	xor    ch,BYTE PTR [ecx+ecx*4-0xa]
  42309b:	out    dx,al
  42309c:	cld    
  42309d:	inc    ecx
  42309e:	jmp    0x211d:0x585f5617
  4230a5:	jecxz  0x42311c
  4230a7:	jge    0x4230f9
  4230a9:	imul   DWORD PTR [esi+eiz*1+0x5066bcd8]
  4230b0:	test   al,0x40
  4230b2:	or     eax,0xbc88623
  4230b7:	xor    eax,0xe066d5f5
  4230bc:	xchg   DWORD PTR [eax-0x7d],esi
  4230bf:	(bad)  
  4230c0:	in     al,dx
  4230c1:	imul   ecx,DWORD PTR [ecx-0x5b90ff6d],0x61
  4230c8:	in     eax,dx
  4230c9:	sbb    eax,esp
  4230cb:	push   ebp
  4230cc:	ss je  0x4230a0
  4230cf:	mov    cl,0xcf
  4230d1:	ret    0x2284
  4230d4:	in     al,dx
  4230d5:	jle    0x423073
  4230d7:	lods   al,BYTE PTR ds:[esi]
  4230d8:	fimul  DWORD PTR ds:0x3f09
  4230dd:	inc    edx
  4230de:	or     esp,DWORD PTR [eax+esi*1-0x12775b09]
  4230e5:	cmc    
  4230e6:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4230e8:	arpl   di,bp
  4230ea:	xchg   BYTE PTR [esi-0x29dd43d2],dh
  4230f0:	inc    esi
  4230f1:	sbb    esp,DWORD PTR [eax+0x36e319da]
  4230f7:	jnp    0x4230e6
  4230f9:	jb     0x4230a6
  4230fb:	push   0xffffffbb
  4230fd:	push   esi
  4230fe:	push   cs
  4230ff:	cwde   
  423100:	and    BYTE PTR ss:[eax+0x20],0x82
  423105:	pop    esi
  423106:	jle    0x423111
  423108:	push   0xfffffff9
  42310a:	xor    DWORD PTR [ecx-0x5ea7ad77],esi
  423110:	loopne 0x423184
  423112:	mov    bh,0x1f
  423114:	inc    edx
  423115:	and    cl,BYTE PTR [edx+ecx*1-0x3932a4df]
  42311c:	add    al,0x4e
  42311e:	(bad)  
  42311f:	pop    ds
  423120:	shl    DWORD PTR [ebp+0x382274d6],1
  423126:	scas   al,BYTE PTR es:[edi]
  423127:	nop
  423128:	jnp    0x42316e
  42312a:	inc    ebx
  42312b:	mov    ebx,tr2
  42312e:	test   al,0x9e
  423130:	dec    ebx
  423131:	or     eax,0x334e6246
  423136:	ret    
  423137:	out    0x1d,eax
  423139:	cmp    ebp,DWORD PTR [edi-0x71ed9e86]
  42313f:	xor    eax,0xe5efb675
  423144:	pusha  
  423145:	inc    ebp
  423146:	pop    esp
  423147:	scas   eax,DWORD PTR es:[edi]
  423148:	out    dx,eax
  423149:	mov    ebp,0x3ebddd94
  42314e:	inc    ecx
  42314f:	xchg   ecx,eax
  423150:	mov    dh,0xa
  423152:	mov    ebp,0xbe48a301
  423157:	mov    ebp,0xe8a937f5
  42315c:	mov    BYTE PTR [ebp-0x2413b903],bh
  423162:	retf   
  423163:	dec    eax
  423164:	lock (bad) 
  423168:	imul   esp,DWORD PTR [eax],0xb8e9ce1e
  42316e:	pop    esi
  42316f:	das    
  423170:	nop
  423171:	out    0x72,al
  423173:	mov    al,ds:0xbf0d3e07
  423178:	test   eax,0xf1bf0d3c
  42317d:	sbb    dh,bl
  42317f:	push   ebx
  423180:	cdq    
  423181:	fcmovne st,st(3)
  423183:	out    dx,eax
  423184:	test   DWORD PTR [eax-0x40],ebp
  423187:	cmp    dh,BYTE PTR [edx-0x44ad4e05]
  42318d:	push   es
  42318e:	xchg   esp,eax
  42318f:	inc    esi
  423190:	ror    DWORD PTR [eax],cl
  423192:	sbb    BYTE PTR [ebx-0x62],0xb5
  423196:	scas   eax,DWORD PTR es:[edi]
  423197:	pop    ebp
  423198:	mov    ds:0xe6f28c23,al
  42319d:	jge    0x423179
  42319f:	dec    edi
  4231a0:	jbe    0x423184
  4231a2:	sbb    ebp,DWORD PTR [esi]
  4231a4:	stos   BYTE PTR es:[edi],al
  4231a5:	mov    ds:0xdbab97e5,al
  4231aa:	sbb    eax,0xf7cd25bd
  4231af:	cmp    al,0x4f
  4231b1:	sub    DWORD PTR [edi+ebx*2+0xe],eax
  4231b5:	pop    edx
  4231b6:	es mov dl,0x73
  4231b9:	iret   
  4231ba:	ror    esp,cl
  4231bc:	ss daa 
  4231be:	pop    esp
  4231bf:	cmp    DWORD PTR [esi-0x34],eax
  4231c2:	inc    edx
  4231c3:	mov    al,ds:0x3a41432a
  4231c8:	add    cl,bl
  4231ca:	jns    0x423219
  4231cc:	sti    
  4231cd:	lods   al,BYTE PTR ds:[esi]
  4231ce:	int3   
  4231cf:	push   edi
  4231d0:	adc    eax,0x97d1a244
  4231d5:	scas   eax,DWORD PTR es:[edi]
  4231d6:	test   eax,0xb96a0178
  4231db:	loop   0x423185
  4231dd:	add    DWORD PTR [ebx],esi
  4231df:	mov    cl,dl
  4231e1:	clc    
  4231e2:	or     ebx,DWORD PTR [ecx]
  4231e4:	pusha  
  4231e5:	or     esp,edx
  4231e7:	xor    dl,bl
  4231e9:	retf   0xb730
  4231ec:	sbb    bh,bl
  4231ee:	fs ins BYTE PTR es:[edi],dx
  4231f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4231f1:	call   0x3a6f:0x3cf5e470
  4231f8:	int    0x83
  4231fa:	lods   al,BYTE PTR ds:[esi]
  4231fb:	test   BYTE PTR [ebp+0x2161e928],0xd0
  423202:	pop    ebx
  423203:	loopne 0x42326f
  423205:	push   cs
  423206:	(bad)
  423209:	gs mov dl,0x6c
  42320c:	(bad)  [edi+0x1cdbd60a]
  423212:	daa    
  423213:	inc    ebp
  423214:	mov    cl,0x6e
  423216:	inc    edi
  423217:	js     0x42321a
  423219:	adc    al,0xbc
  42321b:	repz loop 0x4231c2
  42321e:	push   cs
  42321f:	gs jmp 0x4e4756d6
  423225:	cdq    
  423226:	or     BYTE PTR ds:0x40470cff,bh
  42322c:	mov    al,0x58
  42322e:	xor    ebp,DWORD PTR gs:[ebp-0x55]
  423232:	lods   eax,DWORD PTR ds:[esi]
  423233:	mov    esi,eax
  423235:	stos   BYTE PTR es:[edi],al
  423236:	cmp    ebx,ebx
  423238:	mov    WORD PTR [bp+di-0x44],?
  42323c:	(bad)  
  42323d:	adc    al,BYTE PTR [esi]
  42323f:	xchg   edi,eax
  423240:	push   ss
  423241:	je     0x4232ac
  423243:	ds sahf 
  423245:	lods   eax,DWORD PTR ds:[esi]
  423246:	or     BYTE PTR [ecx+0x3fa89822],ch
  42324c:	ja     0x4231d2
  42324e:	cli    
  42324f:	das    
  423250:	jbe    0x423203
  423252:	dec    esp
  423253:	and    BYTE PTR ds:0xb5f91e84,0x74
  42325a:	add    al,0xcc
  42325c:	dec    ebp
  42325d:	aaa    
  42325e:	lea    esp,[eax]
  423260:	mov    bl,0x66
  423262:	(bad)  
  423263:	cwde   
  423264:	xor    BYTE PTR [eax-0x5],ch
  423267:	mov    ebp,0x6a7d6a02
  42326c:	dec    BYTE PTR [edi]
  42326e:	sahf   
  42326f:	hlt    
  423270:	xor    al,0x97
  423272:	xchg   DWORD PTR [ecx-0x4fda3091],esp
  423278:	bound  ebx,QWORD PTR [ecx-0x4af7f8cd]
  42327e:	(bad)  
  42327f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423280:	adc    ch,bl
  423282:	xor    al,0x82
  423284:	call   0xd900:0xf6028585
  42328b:	sbb    eax,0xe0218de
  423290:	in     al,0x3c
  423292:	mov    eax,0xf5cd3e7d
  423297:	stos   DWORD PTR es:[edi],eax
  423298:	(bad)  
  42329a:	mov    dh,0x10
  42329c:	jnp    0x4232f7
  42329e:	popf   
  42329f:	dec    ecx
  4232a0:	retf   
  4232a1:	pop    esp
  4232a2:	push   es
  4232a3:	les    edi,FWORD PTR gs:[ebp+0x1e]
  4232a7:	mov    esp,0xe11c2a48
  4232ac:	jno    0x4232aa
  4232ae:	pushf  
  4232af:	jb     0x4232b7
  4232b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4232b2:	lock cmp BYTE PTR [ebx+0x4e],bh
  4232b6:	ror    dh,1
  4232b8:	add    ah,ah
  4232ba:	inc    ebx
  4232bb:	inc    edi
  4232bc:	les    eax,FWORD PTR [esi-0x1e]
  4232bf:	clc    
  4232c0:	pop    es
  4232c1:	cwde   
  4232c2:	jmp    0x18cb2b46
  4232c7:	in     al,dx
  4232c8:	in     eax,dx
  4232c9:	js     0x42325d
  4232cb:	rcr    bh,1
  4232cd:	ds push ebx
  4232cf:	adc    ah,0xde
  4232d2:	fst    QWORD PTR [esi+0x11]
  4232d5:	lods   al,BYTE PTR ds:[esi]
  4232d6:	inc    esi
  4232d7:	push   esi
  4232d8:	and    esp,DWORD PTR [esi]
  4232da:	sbb    eax,0xabf7bc57
  4232df:	rdmsr  
  4232e1:	pop    esi
  4232e2:	inc    edx
  4232e3:	sar    DWORD PTR [ebp-0x71],0x9e
  4232e7:	inc    edx
  4232e8:	clc    
  4232e9:	loope  0x42335e
  4232eb:	call   0x82adb10f
  4232f0:	adc    DWORD PTR [esi],ebp
  4232f2:	sub    ebx,DWORD PTR [esi-0x53]
  4232f5:	and    BYTE PTR [ebx+0x5361232],0xcf
  4232fc:	(bad)  
  4232fd:	fild   QWORD PTR [edx]
  4232ff:	pop    ebx
  423300:	shl    BYTE PTR [esi],cl
  423302:	in     eax,0x15
  423304:	sub    al,0x92
  423306:	xor    ebp,DWORD PTR [edi+0x4cf40abc]
  42330c:	hlt    
  42330d:	outs   dx,DWORD PTR ds:[esi]
  42330e:	xor    bh,al
  423310:	ret    0xc755
  423313:	gs scas al,BYTE PTR es:[edi]
  423315:	and    ch,dl
  423317:	pusha  
  423318:	nop
  423319:	push   0x8002e6c
  42331e:	jns    0x423390
  423320:	scas   al,BYTE PTR es:[edi]
  423321:	in     al,dx
  423322:	mov    al,0x4
  423324:	mov    DWORD PTR [ebx+0x4ed4940f],ebp
  42332a:	push   edx
  42332b:	ins    BYTE PTR es:[edi],dx
  42332c:	or     bl,dh
  42332e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42332f:	adc    ch,BYTE PTR [ecx+0x264a577e]
  423335:	inc    eax
  423336:	mov    edi,0x2b73511a
  42333b:	xchg   edx,eax
  42333c:	push   ecx
  42333d:	push   0x7ef11b64
  423342:	mov    DWORD PTR [esi],esi
  423344:	mov    dl,BYTE PTR [ebx]
  423346:	sahf   
  423347:	sbb    ebp,DWORD PTR [edi+0x7f]
  42334a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42334b:	mov    WORD PTR [ebp+0xd],ss
  42334e:	cmp    dl,BYTE PTR [esi-0x160ed739]
  423354:	jbe    0x423335
  423356:	ror    DWORD PTR [edi+eax*4],cl
  423359:	or     al,cl
  42335b:	mov    edx,0x576f5d21
  423360:	fdivr  QWORD PTR [ecx]
  423362:	icebp  
  423363:	int3   
  423364:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423365:	loopne 0x4233bf
  423367:	pop    esp
  423368:	enter  0x5064,0x9f
  42336c:	int    0x81
  42336e:	pop    ds
  42336f:	sti    
  423370:	mov    al,0x6a
  423372:	xor    DWORD PTR [ebx+ebp*8-0x34f5e04],0x13
  42337a:	add    eax,0x94648183
  42337f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423380:	and    DWORD PTR [ebx-0x54711b6a],esi
  423386:	xor    bl,BYTE PTR [ebp+0x401c3a12]
  42338c:	shl    DWORD PTR [edx+0x7c50c0e8],1
  423392:	call   0xc5b4:0xcd92397f
  423399:	xchg   ebp,eax
  42339a:	je     0x423412
  42339c:	mov    ch,0x1a
  42339e:	fdivrp st(0),st
  4233a0:	cs ds call 0x9f222f71
  4233a7:	xor    ah,BYTE PTR [esi-0x28a36cec]
  4233ad:	sahf   
  4233ae:	mov    ds:0x810fdfd9,al
  4233b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4233b4:	dec    edi
  4233b5:	ins    BYTE PTR es:[edi],dx
  4233b6:	jae    0x42338c
  4233b8:	push   ecx
  4233b9:	mov    ch,0xaf
  4233bb:	outs   dx,DWORD PTR ds:[esi]
  4233bc:	icebp  
  4233bd:	cmp    al,0x78
  4233bf:	gs cli 
  4233c1:	std    
  4233c2:	pop    ss
  4233c3:	dec    edi
  4233c4:	mov    edi,0x1e97ec86
  4233c9:	dec    edi
  4233ca:	lods   al,BYTE PTR ds:[esi]
  4233cb:	test   eax,0x9fea98a1
  4233d0:	cmp    bh,BYTE PTR [ecx]
  4233d2:	das    
  4233d3:	push   ebx
  4233d4:	in     eax,dx
  4233d5:	jp     0x42340e
  4233d7:	xor    eax,DWORD PTR [ebx-0x8e6b810]
  4233dd:	xchg   edx,eax
  4233de:	jecxz  0x4233e7
  4233e0:	imul   esp,esi,0x17ed3d6c
  4233e6:	sbb    eax,0x4401470b
  4233eb:	out    0x3f,al
  4233ed:	cs pop edx
  4233ef:	sbb    bh,BYTE PTR [ebx+ecx*2-0x31]
  4233f3:	xor    DWORD PTR [eax],0x3a
  4233f6:	xor    BYTE PTR [esi],al
  4233f8:	sbb    BYTE PTR [ebx],ch
  4233fa:	stc    
  4233fb:	jnp    0x42344b
  4233fd:	jmp    0x423476
  4233ff:	xchg   BYTE PTR ss:[ebx+0x2ed93811],ch
  423406:	mov    cl,ch
  423408:	sahf   
  423409:	cmp    DWORD PTR [ebp-0x71],esp
  42340c:	or     DWORD PTR [ebp-0x2fbb2ca],0x17
  423413:	ds sbb eax,esp
  423416:	cmp    ah,BYTE PTR [esp+eax*1-0x6a]
  42341a:	dec    ebx
  42341b:	mov    ebx,0xbd167b4e
  423420:	fs (bad) 
  423422:	std    
  423423:	mov    ecx,0x46dbbead
  423428:	shl    BYTE PTR [edi-0x19],1
  42342b:	push   ss
  42342c:	aaa    
  42342d:	push   ss
  42342e:	mov    bl,0xf7
  423430:	cmc    
  423431:	xor    ebp,esi
  423433:	mov    ebx,esp
  423435:	or     al,0x53
  423438:	iret   
  423439:	or     eax,0x9fbf0bfa
  42343e:	loopne 0x4233ec
  423440:	aam    0x6
  423442:	aaa    
  423443:	imul   BYTE PTR [esp+edi*8-0x77]
  423447:	sahf   
  423448:	pop    edx
  423449:	jne    0x4234a1
  42344b:	jl     0x4234a2
  42344d:	sub    ebx,DWORD PTR ss:[edx]
  423450:	std    
  423451:	cmp    eax,DWORD PTR [edx-0x756a1418]
  423457:	pushf  
  423458:	loop   0x423492
  42345a:	fcmove st,st(6)
  42345c:	jg     0x4233e9
  42345e:	adc    BYTE PTR [eax+0x6c],0xe9
  423462:	scas   al,BYTE PTR es:[edi]
  423463:	enter  0xf790,0x64
  423467:	out    dx,eax
  423468:	xlat   BYTE PTR ds:[ebx]
  423469:	inc    esi
  42346a:	mov    ebx,0xfcdfab6
  42346f:	cmp    esp,eax
  423471:	add    ah,dl
  423473:	sbb    al,0x15
  423475:	xchg   ebx,eax
  423476:	fistp  DWORD PTR [esi]
  423478:	out    0x4f,al
  42347a:	push   ss
  42347b:	inc    esi
  42347c:	jmp    0xc642:0xe43cbb2b
  423483:	jnp    0x4234ba
  423485:	repnz call 0x7bec:0xdd833d1
  42348d:	out    0x23,eax
  42348f:	stos   BYTE PTR es:[edi],al
  423490:	mov    ecx,0x449385cf
  423495:	sti    
  423496:	fst    QWORD PTR [edx]
  423498:	add    dh,BYTE PTR [ebx-0x17]
  42349b:	(bad)  
  42349c:	icebp  
  42349d:	outs   dx,DWORD PTR ds:[esi]
  42349e:	jmp    FWORD PTR [edi-0x50bcb1ce]
  4234a4:	inc    ecx
  4234a5:	jp     0x423439
  4234a7:	dec    esp
  4234a8:	ins    DWORD PTR es:[edi],dx
  4234a9:	cmp    DWORD PTR ds:0xf5702c11,0x420c0de0
  4234b3:	push   eax
  4234b4:	ins    DWORD PTR es:[edi],dx
  4234b5:	les    esp,FWORD PTR [edx-0x52]
  4234b8:	mov    eax,0x438990a3
  4234bd:	dec    edx
  4234be:	and    eax,esp
  4234c0:	je     0x4234d4
  4234c2:	inc    esi
  4234c3:	(bad)
  4234c6:	sbb    esp,esi
  4234c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4234c9:	dec    ecx
  4234ca:	lock (bad) 
  4234cc:	push   0xd141934d
  4234d1:	inc    edi
  4234d2:	push   ss
  4234d3:	jge    0x423499
  4234d5:	lahf   
  4234d6:	ds jmp 0x4234f3
  4234d9:	inc    eax
  4234da:	rcl    DWORD PTR [ebx],0xbd
  4234dd:	dec    eax
  4234de:	daa    
  4234df:	cld    
  4234e0:	dec    eax
  4234e1:	xor    eax,0x8442d06b
  4234e6:	pop    edx
  4234e7:	cmovge esi,DWORD PTR [ecx-0x3e]
  4234eb:	and    DWORD PTR [eax],eax
  4234ed:	add    BYTE PTR [eax],al
  4234ef:	add    BYTE PTR [eax],al
  4234f1:	add    BYTE PTR [ecx-0x5d],cl
  4234f4:	push   ebp
  4234f5:	(bad)  
  4234f6:	push   esi
  4234f8:	retf   
  4234f9:	mov    edi,0x3f1d56c2
  4234fe:	pop    ds
  4234ff:	add    al,0xb2
  423501:	daa    
  423502:	adc    DWORD PTR [esi+0x4f20001],ebp
  423508:	add    BYTE PTR [eax],al
  42350a:	xchg   esp,eax
  42350b:	push   esp
  42350c:	xchg   esi,eax
  42350d:	out    dx,al
  42350e:	add    al,0xdf
  423510:	cli    
  423511:	add    eax,0x855b7b5d
  423516:	mov    ebp,DWORD PTR [ebp+0x22]
  423519:	mov    cl,0xf0
  42351b:	icebp  
  42351c:	cwde   
  42351d:	mov    eax,ds:0xcfa8ef3c
  423522:	cmp    DWORD PTR fs:[edi+ebp*4],edi
  423526:	fidivr WORD PTR [edx]
  423528:	dec    edx
  423529:	sub    DWORD PTR [esi+0x98d8b47],ebx
  42352f:	loopne 0x42351c
  423531:	and    edx,edi
  423533:	mov    dh,0x1
  423535:	jmp    0x423531
  423537:	mov    ecx,0x1a445b3a
  42353c:	shl    BYTE PTR [edx+0x5e9dc67a],0x87
  423543:	mov    al,ds:0xf0224c6
  423548:	sub    al,0x49
  42354a:	mov    bl,0xb1
  42354c:	xchg   edx,eax
  42354d:	cs mov ebp,0xa4969625
  423553:	jl     0x4235b0
  423555:	gs dec ebp
  423557:	sub    DWORD PTR [edi+0x55],0xffffffad
  42355b:	sbb    BYTE PTR [ebx-0x7932514a],al
  423561:	push   0x72
  423563:	cmp    DWORD PTR [ecx],esi
  423565:	mov    cl,0x18
  423567:	test   BYTE PTR [ebx+0x2b],bh
  42356a:	fstp   DWORD PTR [edx-0x6a]
  42356d:	dec    esp
  42356e:	fcom   st(7)
  423570:	pop    ss
  423571:	mov    ebx,0xae4e865d
  423576:	test   BYTE PTR [esi+0x7d],ch
  423579:	hlt    
  42357a:	push   ebx
  42357b:	not    BYTE PTR [esi]
  42357d:	bound  esi,QWORD PTR [ebx-0x6a475326]
  423583:	hlt    
  423584:	out    0x25,eax
  423586:	push   0x43c90330
  42358b:	push   edx
  42358c:	rol    DWORD PTR [edi+ebx*2+0x59ea0095],1
  423593:	mov    al,0x0
  423595:	out    dx,eax
  423596:	aas    
  423597:	out    dx,al
  423598:	sbb    BYTE PTR [edx+0x2797ebf4],dl
  42359e:	mov    ch,0x7a
  4235a0:	mov    BYTE PTR [ebp+0x52],bl
  4235a3:	mov    ebp,0x395aab3e
  4235a8:	jmp    0x4235af
  4235aa:	fwait
  4235ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4235ac:	sub    al,BYTE PTR [esp+edx*8-0x616c3045]
  4235b3:	fistp  WORD PTR [edi-0x78]
  4235b6:	aad    0xb
  4235b8:	lock (bad) 
  4235ba:	and    ch,al
  4235bc:	fcom   st(7)
  4235be:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  4235c0:	pushf  
  4235c1:	pushf  
  4235c2:	rol    BYTE PTR [ebp-0x14bf90a6],1
  4235c8:	mov    ds:0x63b152b,al
  4235cd:	lea    ebp,[esi-0x3c]
  4235d0:	sti    
  4235d1:	inc    edx
  4235d2:	dec    eax
  4235d3:	rol    DWORD PTR [edx+0x56],1
  4235d6:	mov    ebx,0x17870648
  4235db:	(bad)  
  4235dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4235dd:	add    al,0xf2
  4235df:	cld    
  4235e0:	shr    ebx,1
  4235e2:	scas   eax,DWORD PTR es:[edi]
  4235e3:	test   eax,0x5174ac40
  4235e8:	mov    esp,0x5c2a922e
  4235ed:	cmp    al,0xee
  4235ef:	dec    eax
  4235f0:	pop    esp
  4235f1:	dec    edx
  4235f2:	fisttp WORD PTR [edi+0x2d0cceb0]
  4235f8:	jmp    0x5da4de0b
  4235fd:	data16 das 
  4235ff:	jecxz  0x423666
  423601:	shr    ebx,1
  423603:	push   ds
  423604:	daa    
  423605:	sti    
  423606:	pop    ebp
  423607:	fdiv   st,st(2)
  423609:	push   0x7f
  42360b:	adc    bl,BYTE PTR [eax]
  42360d:	cli    
  42360e:	or     BYTE PTR [ecx],0x95
  423611:	jmp    0x42368c
  423613:	and    al,0xec
  423615:	lock call 0x63a33fd2
  42361b:	scas   eax,DWORD PTR es:[edi]
  42361c:	mov    ecx,ecx
  42361e:	rcr    BYTE PTR [ecx-0x18b340e1],0x81
  423625:	dec    edi
  423626:	inc    esi
  423627:	mov    edi,0xd02f0204
  42362c:	add    ecx,DWORD PTR [ecx+eax*4+0x5dc1e7de]
  423633:	dec    ebx
  423634:	fwait
  423635:	push   ds
  423636:	inc    edi
  423637:	mov    ecx,0x931606ca
  42363c:	aaa    
  42363d:	inc    esi
  42363e:	cmp    eax,0x14d153d5
  423643:	sahf   
  423644:	jle    0x423658
  423646:	test   BYTE PTR [edx+ebp*4+0x18],0x52
  42364b:	retf   0xaa7b
  42364e:	push   0x66
  423650:	ret    
  423651:	gs pop eax
  423653:	xor    BYTE PTR [ecx-0x4],ch
  423656:	mov    fs,WORD PTR [ecx+0x3ea43f5b]
  42365c:	or     bl,BYTE PTR [esi+0x5ccdba55]
  423662:	pop    eax
  423663:	cld    
  423664:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423665:	les    esi,FWORD PTR [edx+edi*4]
  423668:	inc    esp
  423669:	in     al,0xe2
  42366b:	scas   eax,DWORD PTR es:[edi]
  42366c:	loopne 0x4236ad
  42366e:	sbb    BYTE PTR [edx+0x30eda62f],dl
  423674:	pop    edi
  423675:	sar    BYTE PTR [edx-0xf7197c4],0x68
  42367c:	in     al,dx
  42367d:	sbb    al,0x44
  42367f:	jl     0x4236b8
  423681:	sub    esi,DWORD PTR [ebp-0x7a]
  423684:	push   eax
  423685:	mov    dl,0x2d
  423687:	js     0x423660
  423689:	ret    
  42368a:	dec    eax
  42368b:	mov    BYTE PTR [esi+0x1d],bh
  42368e:	inc    edx
  42368f:	outs   dx,DWORD PTR ds:[esi]
  423690:	adc    dl,BYTE PTR es:[ebx+0x4aaec445]
  423697:	stos   DWORD PTR es:[edi],eax
  423698:	ja     0x4236c8
  42369a:	push   ss
  42369b:	es push edx
  42369d:	adc    ecx,eax
  42369f:	cmp    ch,al
  4236a1:	mov    ebx,esi
  4236a3:	mov    es,ecx
  4236a5:	sbb    edi,DWORD PTR [edi]
  4236a7:	mov    fs,WORD PTR [edi-0x9]
  4236aa:	mov    cl,0xe5
  4236ac:	in     eax,0xd8
  4236ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4236af:	mov    al,ds:0x38b8d2ae
  4236b4:	lods   al,BYTE PTR ds:[esi]
  4236b5:	jo     0x4236fa
  4236b7:	xchg   edx,eax
  4236b8:	sub    edi,DWORD PTR [eax]
  4236ba:	hlt    
  4236bb:	test   cl,bh
  4236bd:	xchg   BYTE PTR [esi+ebx*4+0x43],ch
  4236c1:	sbb    al,0x51
  4236c3:	(bad)  
  4236c4:	je     0x42372c
  4236c6:	into   
  4236c7:	and    eax,0x82e28dd5
  4236cc:	or     edx,DWORD PTR [edi]
  4236ce:	jae    0x4236b8
  4236d0:	and    eax,0xb3fff225
  4236d5:	fmulp  st(7),st
  4236d7:	sbb    eax,0x22b36406
  4236dc:	xor    ebx,DWORD PTR [esp+edi*2]
  4236df:	push   esp
  4236e0:	inc    esp
  4236e1:	xor    eax,0xeeca15cb
  4236e6:	in     eax,dx
  4236e7:	push   eax
  4236e8:	add    edi,eax
  4236ea:	vpaddsb ymm5,ymm0,ymm1
  4236ee:	xlat   BYTE PTR ds:[ebx]
  4236ef:	ror    BYTE PTR [ebx],cl
  4236f1:	jo     0x4236ef
  4236f3:	pop    edx
  4236f4:	ja     0x423679
  4236f6:	xchg   DWORD PTR [ecx],edx
  4236f8:	pop    ebp
  4236f9:	dec    esp
  4236fa:	xor    al,0xf6
  4236fc:	pop    es
  4236fd:	or     cl,BYTE PTR [esi]
  4236ff:	aaa    
  423700:	mov    cl,0xb9
  423702:	dec    ebx
  423703:	add    DWORD PTR [eax],edx
  423705:	loope  0x4236e2
  423707:	test   DWORD PTR [ebp+0x21],edx
  42370a:	mov    bh,BYTE PTR [edi]
  42370c:	cmp    al,0xde
  42370e:	out    0xd4,al
  423710:	add    ch,bl
  423712:	ret    
  423713:	jmp    0x2bb8:0xdffb9f6d
  42371a:	aas    
  42371b:	std    
  42371c:	mov    esp,0xe06d8b34
  423721:	or     al,BYTE PTR [edi+0x6e2ab273]
  423727:	xchg   edx,eax
  423728:	mov    ebx,0x5f6145e3
  42372d:	pusha  
  42372e:	dec    ebp
  42372f:	mov    esp,0xcd0ea098
  423734:	add    eax,0x650ce250
  423739:	and    edx,DWORD PTR [edi]
  42373b:	mov    eax,ds:0x40ec8d02
  423740:	ja     0x4236ff
  423742:	push   ss
  423743:	stc    
  423744:	sbb    ecx,DWORD PTR [ecx]
  423746:	test   eax,0xb9628b4e
  42374b:	scas   al,BYTE PTR es:[edi]
  42374c:	sbb    eax,0x61d568c9
  423751:	sbb    DWORD PTR [ebx-0xa6b6131],edx
  423757:	push   0x1d
  423759:	imul   ebx,DWORD PTR [edx+0x59],0x92217530
  423760:	mov    edx,0x30b987cc
  423765:	dec    ebp
  423766:	xchg   esp,eax
  423767:	push   0x80890b4f
  42376c:	mov    dh,0x91
  42376e:	mov    esp,0x9c48eb38
  423773:	xor    dh,BYTE PTR [esi+0x5a]
  423776:	lods   al,BYTE PTR ds:[esi]
  423777:	cmc    
  423778:	push   ecx
  423779:	arpl   WORD PTR [edx-0x3e],sp
  42377c:	dec    edi
  42377d:	fcom   QWORD PTR [edx+0x76]
  423780:	cmp    dl,BYTE PTR [ebp+0x1031e0db]
  423786:	scas   al,BYTE PTR es:[edi]
  423787:	loop   0x4237ca
  423789:	jbe    0x423807
  42378b:	aad    0x9b
  42378d:	stos   DWORD PTR es:[edi],eax
  42378e:	lods   eax,DWORD PTR ds:[esi]
  42378f:	xchg   edx,eax
  423790:	pop    ss
  423791:	jp     0x4237d6
  423793:	loopne 0x4237f8
  423795:	mov    bl,0x83
  423797:	and    esp,esi
  423799:	sbb    eax,0x7222c094
  42379e:	mov    esi,0xd3c10a8c
  4237a3:	mov    ds:0x31b37acb,al
  4237a8:	jbe    0x423738
  4237aa:	push   ecx
  4237ab:	mov    bl,dl
  4237ad:	imul   esp,DWORD PTR [eax+0x24],0xffffff9f
  4237b1:	jnp    0x42382a
  4237b3:	cs mov ebp,0xc7b0b43a
  4237b9:	xor    DWORD PTR [edi-0x2d6a37fb],eax
  4237bf:	cmc    
  4237c0:	imul   eax,DWORD PTR [ebx+0x3d],0xde9e3686
  4237c7:	dec    ebp
  4237c8:	inc    ebx
  4237c9:	push   0x69
  4237cb:	jae    0x4237bc
  4237cd:	in     eax,0x19
  4237cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4237d0:	pop    edi
  4237d1:	inc    esp
  4237d2:	nop
  4237d3:	lea    esp,[esi-0x65]
  4237d6:	dec    edi
  4237d7:	adc    bl,0x3f
  4237da:	xchg   DWORD PTR [ecx-0x2b],edx
  4237dd:	dec    edx
  4237de:	xor    DWORD PTR [edi-0x590a04cc],ecx
  4237e4:	rol    BYTE PTR [ebx+0x3b],0xba
  4237e8:	mov    ds:0x7b185fa8,al
  4237ed:	xor    cl,BYTE PTR [eax-0x5a]
  4237f0:	daa    
  4237f1:	mov    al,0x70
  4237f3:	fsubp  st(1),st
  4237f5:	js     0x423781
  4237f7:	addr16 pop ecx
  4237f9:	loopne 0x423809
  4237fb:	pop    ss
  4237fc:	push   ecx
  4237fd:	iret   
  4237fe:	pop    eax
  4237ff:	add    BYTE PTR [eax],dh
  423801:	fcom   DWORD PTR [ebx-0x7e66820c]
  423807:	xor    al,0x13
  423809:	push   esi
  42380a:	popf   
  42380b:	daa    
  42380c:	loop   0x423808
  42380e:	push   eax
  42380f:	cwde   
  423810:	inc    eax
  423811:	lea    edi,[esi-0x62]
  423814:	inc    edx
  423815:	mov    gs,WORD PTR [edi+0x27]
  423818:	mov    dl,0xa0
  42381a:	mov    ds:0x87324380,al
  42381f:	and    eax,0x35273447
  423824:	lock lds edx,FWORD PTR [ebp-0x16]
  423828:	or     esi,DWORD PTR [ebp-0x602d98a9]
  42382e:	sbb    ebp,DWORD PTR [ebx-0x48]
  423831:	int    0x47
  423833:	mov    ds:0xc0f475c6,eax
  423838:	or     BYTE PTR [eax-0x8058746],ah
  42383e:	sub    dl,BYTE PTR [ecx-0x4c]
  423841:	test   DWORD PTR [eax],ebp
  423843:	loopne 0x42380b
  423845:	or     ch,ch
  423847:	xchg   edi,eax
  423848:	ins    DWORD PTR es:[edi],dx
  423849:	hlt    
  42384a:	out    dx,al
  42384b:	xchg   edx,eax
  42384c:	dec    ebp
  42384d:	sub    DWORD PTR [ebx-0xe],ebx
  423850:	sub    eax,0x780b2255
  423855:	mov    ?,WORD PTR ds:0x5977f0f0
  42385b:	push   cs
  42385c:	(bad)  
  42385d:	ins    DWORD PTR es:[edi],dx
  42385e:	push   es
  42385f:	in     eax,dx
  423860:	popa   
  423861:	xor    DWORD PTR [esp+esi*1+0x10],esi
  423865:	mov    esp,0x938c8b27
  42386a:	add    edx,eax
  42386c:	push   esi
  42386d:	fnstsw WORD PTR [ebx+0x5b52dc5a]
  423873:	call   0xd808:0x97040d04
  42387a:	call   0x3522:0x7917e4eb
  423881:	les    ebx,FWORD PTR [esi+eiz*4-0x38b85ab2]
  423888:	ins    BYTE PTR es:[edi],dx
  423889:	and    eax,0x71d5db4d
  42388e:	pop    ebp
  42388f:	stc    
  423890:	addr16 jno 0x4238cc
  423893:	retf   
  423894:	mov    DWORD PTR [ebx+0x7a709873],ebx
  42389a:	ret    0x4b05
  42389d:	imul   esp,edx,0x968f90c9
  4238a3:	dec    eax
  4238a4:	adc    eax,0xd7dadd2d
  4238a9:	inc    ecx
  4238aa:	mov    es,ecx
  4238ac:	xchg   BYTE PTR [ebx+0x5],dl
  4238af:	dec    eax
  4238b0:	les    esi,FWORD PTR [eax-0x4]
  4238b3:	fadd   DWORD PTR [esi-0x3cff9207]
  4238b9:	jmp    0x3732:0xdf4ae413
  4238c0:	(bad)
  4238c4:	mov    ds:0xdc63437,eax
  4238c9:	push   esp
  4238ca:	aad    0xef
  4238cc:	or     DWORD PTR [edi-0x7e56bd1f],ecx
  4238d2:	push   eax
  4238d3:	scas   al,BYTE PTR es:[edi]
  4238d4:	fs hlt 
  4238d6:	cdq    
  4238d7:	fld    QWORD PTR [ebx]
  4238d9:	das    
  4238da:	jge    0x423896
  4238dc:	cmp    dh,dl
  4238de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4238df:	pop    eax
  4238e0:	jle    0x4238dd
  4238e2:	push   eax
  4238e3:	cmp    eax,0xa615f00e
  4238e8:	sub    eax,0x4c076b55
  4238ed:	push   eax
  4238ee:	pop    edx
  4238ef:	mov    edi,0x75862eb4
  4238f4:	popf   
  4238f5:	loop   0x42391e
  4238f7:	ret    
  4238f8:	imul   ecx,DWORD PTR [eax],0x8ddb6529
  4238fe:	fisubr WORD PTR [ecx-0x56ec7ee3]
  423904:	iret   
  423905:	xlat   BYTE PTR ds:[ebx]
  423906:	add    DWORD PTR [ebx-0x5a],0x50
  42390a:	jne    0x42396b
  42390c:	sub    bh,BYTE PTR [eax-0x59aadbd5]
  423912:	xlat   BYTE PTR ds:[ebx]
  423913:	cdq    
  423914:	pop    esi
  423915:	and    al,0x9e
  423917:	clc    
  423918:	add    BYTE PTR [eax],ah
  42391a:	jne    0x423920
  42391c:	mov    dl,0xdb
  42391e:	mov    bl,0x68
  423920:	adc    al,0x43
  423922:	push   0x5c
  423924:	inc    eax
  423925:	cld    
  423926:	push   ebx
  423927:	jp     0x4238e5
  423929:	(bad)  
  42392a:	into   
  42392b:	(bad)  
  42392c:	mov    cl,0xd2
  42392e:	cs cmp al,0x19
  423931:	sub    BYTE PTR [edx],cl
  423933:	cmp    al,0xd
  423935:	adc    ah,BYTE PTR [esi+0x72d92a67]
  42393b:	adc    al,0xba
  42393d:	fld    DWORD PTR [esi+0x21]
  423940:	cld    
  423941:	dec    esp
  423942:	gs jb  0x4238e3
  423945:	add    eax,0x1a35e604
  42394a:	je     0x423968
  42394c:	iret   
  42394d:	and    eax,0xca09f158
  423952:	into   
  423953:	or     bh,BYTE PTR cs:[ebx-0x23]
  423957:	mov    ecx,0x40ac0fd8
  42395c:	mov    bh,BYTE PTR [ecx-0x4d39e31b]
  423962:	call   DWORD PTR [esp+edi*8-0x40]
  423966:	jbe    0x423927
  423968:	out    dx,eax
  423969:	jo     0x4239d1
  42396b:	xchg   cl,al
  42396d:	scas   eax,DWORD PTR es:[edi]
  42396e:	xor    DWORD PTR [ebp+0x688acf1b],esp
  423974:	scas   al,BYTE PTR es:[edi]
  423975:	repz data16 pause 
  423979:	ret    
  42397a:	jnp    0x4239cb
  42397c:	pushf  
  42397d:	xor    cl,0x0
  423980:	iret   
  423981:	sbb    ah,ah
  423983:	xchg   edx,eax
  423984:	sub    edx,DWORD PTR [esi]
  423986:	or     al,0x32
  423988:	xchg   edx,eax
  423989:	rcr    edi,cl
  42398b:	dec    ebp
  42398c:	imul   esi,DWORD PTR [edx+0x665980b3],0xffffffae
  423993:	mov    cl,0x74
  423995:	aaa    
  423996:	arpl   WORD PTR [edx],cx
  423998:	retf   
  423999:	loope  0x42398a
  42399b:	sub    al,0xf9
  42399d:	rol    DWORD PTR [edi],0x46
  4239a0:	in     eax,dx
  4239a1:	sbb    edx,0x354a14ad
  4239a7:	dec    edi
  4239a8:	retf   
  4239a9:	or     DWORD PTR [edx+0x503a923f],edx
  4239af:	jp     0x4239fe
  4239b1:	mov    ebx,0xe8acba3b
  4239b6:	leave  
  4239b7:	sbb    al,0xc9
  4239b9:	pop    ebp
  4239ba:	pop    ebp
  4239bb:	add    al,0x9a
  4239bd:	and    eax,0xbfae79f6
  4239c2:	cmp    esi,DWORD PTR [edx]
  4239c4:	mov    ds,WORD PTR [eax+edx*8-0x45baef38]
  4239cb:	fidiv  WORD PTR ds:0x6831c730
  4239d1:	(bad)  
  4239d2:	adc    ch,BYTE PTR [ebx+0x6f]
  4239d5:	pop    ecx
  4239d6:	pushf  
  4239d7:	sbb    al,0xb2
  4239d9:	xchg   ecx,eax
  4239da:	xor    eax,0x4ef2772b
  4239df:	jmp    0x9ac1:0xacfbdc80
  4239e6:	cmc    
  4239e7:	sbb    BYTE PTR ds:0x559f9469,bl
  4239ed:	inc    edx
  4239ee:	inc    DWORD PTR [eax]
  4239f0:	sbb    edi,ecx
  4239f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4239f3:	je     0x423a2b
  4239f5:	es ret 
  4239f7:	call   0x0:0xbef15277
  4239fe:	add    BYTE PTR [eax],al
  423a00:	add    BYTE PTR [eax],al
  423a02:	inc    esi
  423a03:	xchg   edi,eax
  423a04:	daa    
  423a05:	cmp    esi,edi
  423a07:	mov    ebx,0x9b53ff5e
  423a0c:	and    ebx,DWORD PTR [ebp+0x61b2eeb6]
  423a12:	add    esi,DWORD PTR [ebx+0x4f20001]
  423a18:	add    BYTE PTR [eax],al
  423a1a:	add    DWORD PTR [ebp-0x58],edx
  423a1d:	or     al,0x5b
  423a1f:	inc    eax
  423a20:	fimul  DWORD PTR [ecx-0x65478f1d]
  423a26:	retf   
  423a27:	xor    DWORD PTR [edx-0x1307aa8b],ebx
  423a2d:	ret    
  423a2e:	xchg   edi,eax
  423a2f:	es sbb al,0x42
  423a32:	das    
  423a33:	adc    cl,dh
  423a35:	cmp    DWORD PTR [eax+edi*8],0xffffffaf
  423a39:	fucomp st(5)
  423a3b:	bnd js 0x423a18
  423a3e:	enter  0x8dce,0x8
  423a42:	sub    ecx,DWORD PTR [eax]
  423a44:	cmp    eax,DWORD PTR [eax]
  423a46:	xchg   esi,eax
  423a47:	stos   BYTE PTR es:[edi],al
  423a48:	pop    eax
  423a49:	in     al,0x2e
  423a4b:	jl     0x423aad
  423a4d:	and    DWORD PTR [esp+ecx*1+0x43],ebp
  423a51:	pushf  
  423a52:	test   al,0xe1
  423a54:	pop    esp
  423a55:	inc    edi
  423a56:	or     al,0x58
  423a58:	add    eax,0x1e0355c5
  423a5d:	sub    eax,0x3509a679
  423a62:	or     ebx,DWORD PTR [edi-0x5c4cb8e5]
  423a68:	iret   
  423a69:	xor    dh,BYTE PTR [edx]
  423a6b:	mov    al,0xd8
  423a6d:	mov    ebp,0x595cd7a
  423a72:	pop    ss
  423a73:	sub    BYTE PTR [ebx],ah
  423a75:	popa   
  423a76:	shr    DWORD PTR ds:[ecx],1
  423a79:	out    0x7c,eax
  423a7b:	push   ebx
  423a7c:	cmp    DWORD PTR [edx+ebp*4+0x65],eax
  423a80:	(bad)  
  423a81:	mov    ebp,0x65d518a6
  423a86:	mov    esp,0x8f9214d8
  423a8b:	mov    ds:0x136d435c,al
  423a90:	mov    esi,edx
  423a92:	out    dx,eax
  423a93:	pop    ss
  423a94:	std    
  423a95:	cmp    al,0x89
  423a97:	outs   dx,BYTE PTR ds:[esi]
  423a98:	out    dx,al
  423a99:	stos   DWORD PTR es:[edi],eax
  423a9a:	sti    
  423a9b:	addr16 out dx,eax
  423a9d:	jns    0x423aec
  423a9f:	jmp    0xc7d831b2
  423aa4:	and    eax,0x43ca2d1a
  423aa9:	std    
  423aaa:	jns    0x423aa0
  423aac:	popa   
  423aad:	lock icebp 
  423aaf:	inc    ebp
  423ab0:	data16 outs dx,BYTE PTR ds:[esi]
  423ab2:	pushf  
  423ab3:	mov    BYTE PTR [eax-0x5a],0x8
  423ab7:	inc    edi
  423ab8:	das    
  423ab9:	rcr    BYTE PTR [esi+0x2],cl
  423abc:	imul   ecx
  423abe:	aad    0x28
  423ac0:	xor    al,0xbc
  423ac2:	rcl    ecx,1
  423ac4:	mov    ah,0x2c
  423ac6:	fidiv  WORD PTR [ecx+0x3e]
  423ac9:	test   DWORD PTR [di+0x27],0x34cdeb4b
  423ad1:	jbe    0x423a90
  423ad3:	out    0x0,al
  423ad5:	ret    
  423ad6:	add    ecx,DWORD PTR [eax+0x74]
  423ad9:	xor    dh,bl
  423adb:	jne    0x423a69
  423add:	jmp    0xe56e8446
  423ae2:	inc    edi
  423ae3:	(bad)  
  423ae5:	aad    0xff
  423ae7:	dec    eax
  423ae8:	pop    eax
  423ae9:	imul   DWORD PTR [esi-0x7c]
  423aec:	call   0xc606:0xc3c1b5f8
  423af3:	pushf  
  423af4:	add    al,0x60
  423af6:	jge    0x423ad5
  423af8:	stc    
  423af9:	push   DWORD PTR [ecx-0xa]
  423afc:	jge    0x423abb
  423afe:	inc    eax
  423aff:	mov    dh,0x9
  423b01:	lahf   
  423b02:	xchg   cl,dh
  423b04:	out    0x8f,eax
  423b06:	sbb    BYTE PTR [edx-0x1d],ch
  423b09:	pushf  
  423b0a:	fcmovnbe st,st(1)
  423b0c:	js     0x423b5a
  423b0e:	ja     0x423b87
  423b10:	icebp  
  423b11:	add    DWORD PTR [eax-0x30],0x59d03ce4
  423b18:	cmc    
  423b19:	mov    eax,ds:0x6d3e650
  423b1e:	dec    ebp
  423b1f:	push   edi
  423b20:	popf   
  423b21:	pop    eax
  423b22:	pop    ebx
  423b23:	sbb    DWORD PTR [ecx-0x21],edx
  423b26:	ins    DWORD PTR es:[edi],dx
  423b27:	hlt    
  423b28:	sbb    eax,0x206d1543
  423b2d:	jmp    0x423b6b
  423b2f:	or     eax,0x7c71f4d1
  423b34:	push   ds
  423b35:	ins    BYTE PTR es:[edi],dx
  423b36:	xchg   edi,eax
  423b37:	xchg   DWORD PTR [ecx+0x1367203e],edx
  423b3d:	ret    
  423b3e:	sahf   
  423b3f:	mov    BYTE PTR [eax+0x3d],cl
  423b42:	add    al,0xe1
  423b44:	rcr    BYTE PTR [edi+eiz*1+0x44],0xe5
  423b49:	mov    ds:0x19c44a21,al
  423b4e:	xor    BYTE PTR [edi+ebx*4-0x4a430c90],bl
  423b55:	mov    ds:0xa6c0755b,eax
  423b5a:	lahf   
  423b5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423b5c:	rcr    DWORD PTR [ebx-0x1a4ee58f],1
  423b62:	sub    eax,0xb3732bc
  423b67:	push   esi
  423b68:	les    esp,FWORD PTR [eax-0x4ff389e1]
  423b6e:	daa    
  423b6f:	xor    al,0x32
  423b71:	mov    ch,0xab
  423b73:	jb     0x423be2
  423b75:	scas   al,BYTE PTR es:[edi]
  423b76:	xor    BYTE PTR [esi+0x4d],al
  423b79:	enter  0xe2f,0x7e
  423b7d:	into   
  423b7e:	mov    ?,WORD PTR [ebp+0x7e0014e3]
  423b84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423b85:	inc    ebx
  423b86:	hlt    
  423b87:	inc    esp
  423b88:	lods   eax,DWORD PTR ds:[esi]
  423b89:	in     eax,dx
  423b8a:	xchg   edi,eax
  423b8b:	jo     0x423b85
  423b8d:	mov    ebp,esp
  423b8f:	fnsave [ecx-0x47d1e43d]
  423b95:	stos   DWORD PTR es:[edi],eax
  423b96:	pop    eax
  423b97:	adc    al,0xcf
  423b99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423b9a:	and    eax,0x88a38572
  423b9f:	push   ecx
  423ba0:	dec    ebx
  423ba1:	es leave 
  423ba3:	pop    esp
  423ba4:	and    BYTE PTR [edi],bl
  423ba6:	or     eax,0x29514e1d
  423bab:	test   DWORD PTR [eax+0x28],eax
  423bae:	push   esp
  423baf:	pop    ss
  423bb0:	retf   
  423bb1:	adc    DWORD PTR [ecx+0x37],eax
  423bb4:	int    0x36
  423bb6:	hlt    
  423bb7:	gs imul edi,eax,0x43ea1f3a
  423bbe:	pop    ebp
  423bbf:	mov    esp,0x9ba58445
  423bc4:	repz jns 0x423ba7
  423bc7:	in     al,dx
  423bc8:	inc    esi
  423bc9:	ror    DWORD PTR [esi+ebp*8],1
  423bcc:	je     0x423b6f
  423bce:	icebp  
  423bcf:	mov    esi,0x931b009d
  423bd4:	mov    ds:0x1dbd506a,al
  423bd9:	mov    esp,DWORD PTR [edx]
  423bdb:	dec    edi
  423bdc:	cdq    
  423bdd:	mov    ebp,0x89c5aa7
  423be2:	xor    BYTE PTR [esi],ch
  423be4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423be5:	stos   DWORD PTR es:[edi],eax
  423be6:	sub    eax,0x5e100d73
  423beb:	bound  ebp,QWORD PTR [ecx-0x42199fac]
  423bf1:	adc    BYTE PTR [edx+ebx*4-0x4],0xa7
  423bf6:	mov    ecx,0xbee2a71c
  423bfb:	jae    0x423c27
  423bfd:	sub    ah,BYTE PTR [ebx+0x52b577eb]
  423c03:	fadd   QWORD PTR [edi+0x2]
  423c06:	pop    esp
  423c07:	jle    0x423bb3
  423c09:	push   ds
  423c0a:	add    eax,0xd70af362
  423c0f:	add    esp,eax
  423c11:	aas    
  423c12:	frstor [ecx-0x49]
  423c15:	std    
  423c16:	test   BYTE PTR [ecx+edi*4-0x305a4d6d],dh
  423c1d:	add    BYTE PTR [ebp-0x2deb5a89],0x30
  423c24:	(bad)  
  423c27:	adc    BYTE PTR [edx+0x34],bh
  423c2a:	hlt    
  423c2b:	xchg   ebp,eax
  423c2c:	push   edx
  423c2d:	or     edx,esi
  423c2f:	cmc    
  423c30:	jns    0x423c9e
  423c32:	adc    BYTE PTR [esp+ecx*4-0x67],cl
  423c36:	ins    BYTE PTR es:[edi],dx
  423c37:	pusha  
  423c38:	jecxz  0x423c2e
  423c3a:	in     eax,0xec
  423c3c:	mov    bh,0xdf
  423c3e:	retf   0xf20
  423c41:	and    ebp,eax
  423c43:	adc    BYTE PTR [ebp-0x233e3873],dl
  423c49:	leave  
  423c4a:	adc    DWORD PTR [ebp+0x7bbae91d],0x9c962d38
  423c54:	idiv   DWORD PTR [edx+0x40c2bf64]
  423c5a:	hlt    
  423c5b:	addr16 xchg ecx,eax
  423c5d:	jnp    0x423c91
  423c5f:	hlt    
  423c60:	inc    ebx
  423c61:	mov    bl,0x2b
  423c63:	sub    DWORD PTR [esi-0x46931eb7],ebx
  423c69:	icebp  
  423c6a:	mov    edi,0x9f378f24
  423c6f:	and    eax,ebx
  423c71:	xchg   edx,eax
  423c72:	retf   0x7d0c
  423c75:	mov    BYTE PTR [esp+eax*4+0x72883c05],ch
  423c7c:	or     DWORD PTR [ebx],esi
  423c7e:	shr    ch,1
  423c80:	sub    ebx,DWORD PTR [ecx+0x39d30984]
  423c86:	inc    esp
  423c87:	lock adc ah,cl
  423c8a:	xor    ebp,esi
  423c8c:	mov    BYTE PTR [ebp*1-0x4ea865a9],al
  423c93:	push   esi
  423c94:	lods   al,BYTE PTR ds:[esi]
  423c95:	popa   
  423c96:	pop    ebp
  423c97:	push   esi
  423c98:	push   eax
  423c99:	mov    BYTE PTR [ebp-0x2],bh
  423c9c:	pusha  
  423c9d:	or     DWORD PTR [eax+esi*1+0x64],edx
  423ca1:	rcl    esi,1
  423ca3:	(bad)  
  423ca4:	aas    
  423ca5:	adc    DWORD PTR [ebx+0x37df652b],0xf6104c3e
  423caf:	fdivr  QWORD PTR [ebp+0x57]
  423cb2:	outs   dx,DWORD PTR ds:[esi]
  423cb3:	mov    ebp,0x33436e6e
  423cb8:	dec    ebp
  423cb9:	inc    edi
  423cba:	into   
  423cbb:	push   ecx
  423cbc:	inc    BYTE PTR [esi-0x6d]
  423cbf:	sub    eax,0x1a80f616
  423cc4:	out    0x70,eax
  423cc6:	rcr    ebp,cl
  423cc8:	stos   DWORD PTR es:[edi],eax
  423cc9:	sahf   
  423cca:	std    
  423ccb:	shl    BYTE PTR [esi-0x56ad1ca6],0xb2
  423cd2:	pop    edi
  423cd3:	and    BYTE PTR [edx+0xc],dl
  423cd6:	in     eax,dx
  423cd7:	je     0x423ce3
  423cd9:	scas   eax,DWORD PTR es:[edi]
  423cda:	and    al,0x21
  423cdc:	or     al,BYTE PTR ds:0x99f8750
  423ce2:	fcom   st(1)
  423ce4:	push   0x7c6443d9
  423ce9:	or     al,0x5e
  423ceb:	pop    ss
  423cec:	xchg   cx,ax
  423cee:	mov    al,ds:0x281e5b8b
  423cf3:	mov    dl,BYTE PTR [ebx]
  423cf5:	ret    
  423cf6:	jmp    0x423d35
  423cf8:	adc    ebx,esp
  423cfa:	mov    ebp,0x24ab93d4
  423cff:	mov    ch,BYTE PTR [edx+ecx*1+0x149e6f3c]
  423d06:	inc    esi
  423d07:	jno    0x423cfc
  423d09:	sbb    DWORD PTR [edx+0x1b597b94],eax
  423d0f:	cmp    DWORD PTR [ecx+0x57],0xd96080f
  423d16:	pop    ebp
  423d17:	out    0x8,eax
  423d19:	xchg   edx,eax
  423d1a:	adc    bh,BYTE PTR [edx-0x5a]
  423d1d:	popa   
  423d1e:	and    ecx,eax
  423d20:	add    eax,0x1ae4d870
  423d25:	pop    edi
  423d26:	ret    0x9ef5
  423d29:	mov    dh,0x15
  423d2b:	mov    esp,0xb2ca6be6
  423d30:	jb     0x423d03
  423d32:	push   edx
  423d33:	call   0x94b:0xa62d678f
  423d3a:	xchg   edi,eax
  423d3b:	dec    esp
  423d3c:	adc    edx,DWORD PTR [ebx+edi*4-0x79f85472]
  423d43:	fdivrp st(4),st
  423d45:	jl     0x423d6d
  423d47:	out    dx,al
  423d48:	xchg   BYTE PTR [ebp-0x980fca8],cl
  423d4e:	push   ds
  423d4f:	push   cs
  423d50:	fstp   DWORD PTR [ebx+0xc]
  423d53:	shl    BYTE PTR [edi-0x2f],cl
  423d56:	sub    al,0x30
  423d58:	into   
  423d59:	lods   eax,DWORD PTR ds:[esi]
  423d5a:	pop    esp
  423d5b:	fcmovbe st,st(6)
  423d5d:	cs push edx
  423d5f:	arpl   WORD PTR [eax-0x24a2a54e],bp
  423d65:	adc    bh,al
  423d67:	dec    edi
  423d68:	cmp    cl,BYTE PTR [edx+0x4040765b]
  423d6e:	fstp   TBYTE PTR [ecx+0x4a]
  423d71:	add    al,0xf9
  423d73:	add    esp,DWORD PTR [ebx+ebp*8+0x73]
  423d77:	mov    cs,WORD PTR [eax+0x7b]
  423d7a:	and    edi,DWORD PTR [ebp-0x3c061d59]
  423d80:	shl    DWORD PTR [eax-0x5cc9e4f8],cl
  423d86:	push   eax
  423d87:	push   0xffffffa0
  423d89:	mov    ah,0xea
  423d8b:	fimul  DWORD PTR [eax-0x7c]
  423d8e:	mov    esp,0xa0073757
  423d93:	leave  
  423d94:	daa    
  423d95:	mov    dl,0x13
  423d97:	dec    esi
  423d98:	out    0xb3,al
  423d9a:	push   eax
  423d9b:	xchg   esp,eax
  423d9c:	push   ds
  423d9d:	or     eax,0xdc19dff3
  423da2:	mov    edx,0x50d98d16
  423da7:	add    ebx,edi
  423da9:	push   0x7251089
  423dae:	fnsave [edx-0x596bbc81]
  423db4:	scas   al,BYTE PTR es:[edi]
  423db5:	xchg   ebp,eax
  423db6:	jp     0x423da1
  423db8:	mov    esp,0x8ab8bcc0
  423dbd:	div    DWORD PTR [ecx+0x1fbb0a26]
  423dc3:	xor    esi,DWORD PTR gs:[ebx+0x7a]
  423dc7:	inc    ebx
  423dc8:	sub    DWORD PTR [edi-0x679d444],0x8
  423dcf:	frstor [ecx]
  423dd1:	inc    ebp
  423dd2:	add    dl,BYTE PTR [edi+0x7f]
  423dd5:	push   esi
  423dd6:	jp     0x423d62
  423dd8:	adc    eax,0x47a71a47
  423ddd:	jne    0x423dea
  423ddf:	dec    edi
  423de0:	scas   al,BYTE PTR es:[edi]
  423de1:	cmp    ebx,DWORD PTR [ecx]
  423de3:	jp     0x423e63
  423de5:	inc    esp
  423de6:	jne    0x423d72
  423de8:	push   ss
  423de9:	(bad)  
  423dea:	push   0x14385cec
  423def:	jno    0x423d7c
  423df1:	shl    BYTE PTR [edi+0x35],1
  423df4:	mov    cl,ch
  423df6:	push   esi
  423df7:	cwd    
  423df9:	mov    ebx,0xf59e2737
  423dfe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423dff:	adc    bl,BYTE PTR [ebx]
  423e01:	cld    
  423e02:	in     eax,dx
  423e03:	je     0x423e45
  423e05:	aaa    
  423e06:	adc    al,0xa4
  423e08:	sub    al,0x5f
  423e0a:	push   ds
  423e0b:	and    edi,DWORD PTR [edx-0x4efa75d]
  423e11:	jmp    FWORD PTR [esi-0x5a]
  423e14:	pop    ecx
  423e15:	stos   DWORD PTR es:[edi],eax
  423e16:	add    BYTE PTR [ebx+0x12b05f97],dh
  423e1c:	out    dx,eax
  423e1d:	jmp    0xf815:0x378eb554
  423e24:	out    0xc0,eax
  423e26:	push   cs
  423e27:	test   DWORD PTR [edx-0x78],ebp
  423e2a:	add    DWORD PTR ds:0xc4233657,esp
  423e30:	cmp    eax,0xb546a23d
  423e35:	dec    ebx
  423e36:	and    DWORD PTR [edi+0x6],eax
  423e39:	and    al,ch
  423e3b:	mov    eax,ds:0x16a234cf
  423e40:	xor    cl,ch
  423e42:	popf   
  423e43:	ret    
  423e44:	mov    DWORD PTR [eax-0x3255a205],ebp
  423e4a:	loop   0x423e3b
  423e4c:	je     0x423e69
  423e4e:	inc    esp
  423e4f:	aad    0x73
  423e51:	inc    esp
  423e52:	stos   DWORD PTR es:[edi],eax
  423e53:	icebp  
  423e54:	repnz lds edx,FWORD PTR [ecx]
  423e57:	or     BYTE PTR [edi-0x38],0xc0
  423e5b:	xor    cl,BYTE PTR [edi]
  423e5d:	cmp    BYTE PTR [edx-0x1b96d65],ah
  423e63:	(bad)  
  423e64:	cdq    
  423e65:	shl    BYTE PTR [ebx],0x36
  423e68:	loope  0x423ee7
  423e6a:	outs   dx,DWORD PTR ds:[esi]
  423e6b:	fld    DWORD PTR [ecx]
  423e6d:	sub    BYTE PTR [edi],0x98
  423e70:	loope  0x423eda
  423e72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423e73:	mov    edx,0xa8d3dc3b
  423e78:	adc    DWORD PTR [ecx+0x1a228d65],0xeee0cd03
  423e82:	(bad)  
  423e83:	neg    ah
  423e85:	ret    
  423e86:	and    DWORD PTR [edi],esp
  423e88:	mov    ebp,0xa8f0c5ee
  423e8d:	cs mov esp,0xf35953b3
  423e93:	push   ds
  423e94:	jge    0x423e18
  423e96:	arpl   ax,ax
  423e98:	xchg   edx,eax
  423e99:	(bad)  
  423e9a:	or     eax,0x88135e12
  423e9f:	xor    DWORD PTR [esi+0x20695717],esp
  423ea5:	lods   eax,DWORD PTR ds:[esi]
  423ea6:	xor    al,BYTE PTR ds:0x9ed17a37
  423eac:	loop   0x423ef0
  423eae:	push   edx
  423eaf:	dec    ecx
  423eb0:	xor    DWORD PTR [esi+0x4],0x77
  423eb4:	xchg   DWORD PTR [ebp-0xe],edi
  423eb7:	xchg   ecx,eax
  423eb8:	pusha  
  423eb9:	lahf   
  423eba:	mov    edx,0xdf260024
  423ebf:	pop    ds
  423ec0:	adc    BYTE PTR [ebx+ebp*2-0x6910e712],ah
  423ec7:	jl     0x423f3c
  423ec9:	fistp  QWORD PTR [edx+ecx*8]
  423ecc:	iret   
  423ecd:	rcr    esp,0x82
  423ed0:	dec    esi
  423ed1:	in     eax,0xee
  423ed3:	jne    0x423eda
  423ed5:	mov    DWORD PTR [edx*8+0xe748d16],edi
  423edc:	shl    DWORD PTR [ecx],0xa8
  423edf:	sub    al,0x2b
  423ee1:	pop    edi
  423ee2:	sbb    al,0x6d
  423ee4:	sahf   
  423ee5:	push   es
  423ee6:	test   esp,edi
  423ee8:	adc    al,0x57
  423eea:	push   ecx
  423eeb:	mov    ah,0x34
  423eed:	cld    
  423eee:	dec    esp
  423eef:	call   DWORD PTR [esi+0x3c956a12]
  423ef5:	pop    ds
  423ef6:	int    0x9
  423ef8:	sbb    al,0xa1
  423efa:	nop
  423efb:	or     BYTE PTR [ebx+0x1f],ah
  423efe:	(bad)  
  423eff:	out    0x1b,eax
  423f01:	popf   
  423f02:	mov    DWORD PTR [ebx+0x6861ab30],edi
  423f08:	stc    
  423f09:	stos   DWORD PTR es:[edi],eax
  423f0a:	cmp    esp,DWORD PTR [ebx+0x0]
  423f0d:	add    BYTE PTR [eax],al
  423f0f:	add    BYTE PTR [eax],al
  423f11:	add    dl,dl
  423f13:	clc    
  423f14:	data16 outs dx,BYTE PTR es:[esi]
  423f17:	mov    esi,0x8c85fcd2
  423f1c:	out    dx,al
  423f1d:	fidiv  DWORD PTR [esi-0xa9cb409]
  423f23:	mov    bh,0x1
  423f25:	add    dl,dh
  423f27:	add    al,0x0
  423f29:	add    bh,dh
  423f2b:	aaa    
  423f2c:	adc    BYTE PTR [eax+0x27],dl
  423f2f:	mov    edi,0x7627b11f
  423f34:	fild   DWORD PTR [eax+0x48]
  423f37:	ja     0x423f07
  423f39:	xchg   edx,eax
  423f3a:	pop    edi
  423f3b:	sub    DWORD PTR [edx-0xe],edx
  423f3e:	bound  ebp,QWORD PTR [ecx+0x5c662450]
  423f44:	daa    
  423f45:	mov    edx,0x874b11e5
  423f4a:	pushf  
  423f4b:	mov    ebx,0x98d70429
  423f50:	lea    edx,[ebx]
  423f52:	(bad)  
  423f53:	into   
  423f54:	xchg   esi,eax
  423f55:	mov    WORD PTR [esi],?
  423f57:	xchg   esp,eax
  423f58:	sub    eax,0x857e5664
  423f5d:	fs mov esp,0x8d6096d
  423f63:	mov    al,ds:0x81f4d170
  423f68:	inc    eax
  423f69:	pop    eax
  423f6a:	mov    eax,ds:0xe1226d24
  423f6f:	fcomp  QWORD PTR [edx+0x66]
  423f72:	push   cs
  423f73:	and    ah,al
  423f75:	test   ch,cl
  423f77:	mov    dh,BYTE PTR [edi+0x37f056f7]
  423f7d:	mov    dh,0x41
  423f7f:	jmp    0x423ffd
  423f81:	add    DWORD PTR [ecx+0x56702d7d],edx
  423f87:	xchg   ecx,eax
  423f88:	dec    esp
  423f89:	xor    DWORD PTR [edi],edi
  423f8b:	jmp    0x9105810
  423f90:	or     eax,ebx
  423f92:	lods   al,BYTE PTR ds:[esi]
  423f93:	(bad)
  423f96:	dec    esi
  423f97:	add    DWORD PTR [ebx],ecx
  423f99:	mov    ecx,0xb2f7cf84
  423f9e:	mov    dh,0x7f
  423fa0:	repnz out dx,eax
  423fa2:	ret    
  423fa3:	mov    edi,eax
  423fa5:	aam    0x30
  423fa7:	out    dx,eax
  423fa8:	cwde   
  423fa9:	outs   dx,BYTE PTR ds:[esi]
  423faa:	call   0xdb86d06e
  423faf:	jl     0x423faa
  423fb1:	aad    0x5e
  423fb3:	lahf   
  423fb4:	mov    ah,0xe0
  423fb6:	repz iret 
  423fb8:	cld    
  423fb9:	pushf  
  423fba:	stc    
  423fbb:	imul   edx,ebp,0xc63a5c90
  423fc1:	or     eax,0x3afe119d
  423fc6:	mov    ebx,0xe86f988
  423fcb:	ret    0x858b
  423fce:	call   0x1114:0x9e9cf3f6
  423fd5:	inc    esi
  423fd6:	test   DWORD PTR [edi+0x7e5ff209],edi
  423fdc:	mov    ds:0x2465a3ad,al
  423fe1:	adc    DWORD PTR [ecx-0x7c],eax
  423fe4:	es aam 0xc6
  423fe7:	cmp    DWORD PTR [eax-0x62],0x7f
  423feb:	inc    edx
  423fec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423fed:	test   al,0x21
  423fef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423ff0:	mov    WORD PTR ds:0x39273a92,cs
  423ff6:	add    esp,ebx
  423ff8:	push   ss
  423ff9:	jmp    0x6097:0x9218de59
  424000:	mov    esp,0xc716f4c3
  424005:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424006:	pop    ds
  424007:	lds    edx,FWORD PTR [ebx+0xb519abe]
  42400d:	lods   al,BYTE PTR ds:[esi]
  42400e:	mov    esp,0x4d2bcd29
  424013:	push   esi
  424014:	or     DWORD PTR [eax],esp
  424016:	fwait
  424017:	dec    eax
  424018:	out    0x0,eax
  42401a:	popa   
  42401b:	dec    esi
  42401c:	cmp    DWORD PTR [eax+0x5d40e218],ebx
  424022:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424023:	fs sub al,0x15
  424026:	(bad)  
  424027:	arpl   WORD PTR [eax+ecx*8-0x4a],sp
  42402b:	cmp    al,0x40
  42402d:	inc    edx
  42402e:	mov    al,ds:0xcf393928
  424033:	mov    cl,0x4e
  424035:	sar    DWORD PTR [ecx],0x57
  424038:	nop
  424039:	push   es
  42403a:	mov    al,0x76
  42403c:	popf   
  42403d:	repz sub DWORD PTR [ecx+0x6da697e],0x58
  424045:	retf   
  424046:	or     al,0x1b
  424048:	(bad)  
  424049:	das    
  42404a:	mov    eax,ds:0xb3e2d7c9
  42404f:	xor    BYTE PTR [edx+0x4ea5e6b1],al
  424055:	mov    ecx,esp
  424057:	xchg   ebx,eax
  424058:	xchg   ebx,eax
  424059:	sub    eax,0x91a01729
  42405e:	sbb    al,0x2c
  424060:	test   DWORD PTR [eax+0x32],esi
  424063:	loop   0x4240b2
  424065:	inc    ecx
  424066:	fst    DWORD PTR [eax]
  424068:	in     al,0x48
  42406a:	lods   eax,DWORD PTR ds:[esi]
  42406b:	test   al,0xa0
  42406d:	adc    esp,DWORD PTR [eiz*4-0x35caa2c8]
  424074:	mov    ds:0x6f32bfbd,eax
  424079:	adc    DWORD PTR [ebx+0x4a],0x7
  42407d:	and    al,0xca
  42407f:	push   edx
  424080:	repnz sub bh,BYTE PTR [ecx+ecx*1-0x5ac35be1]
  424088:	inc    esp
  424089:	dec    ebx
  42408a:	fidiv  DWORD PTR [ebx+ecx*2-0x35]
  42408e:	push   ecx
  42408f:	das    
  424090:	pop    ss
  424091:	mov    edx,0x33ac74e1
  424096:	sbb    eax,eax
  424098:	push   ds
  424099:	icebp  
  42409a:	mov    cl,0x21
  42409c:	imul   edx,DWORD PTR [ebx-0x63cd5a2],0xf5bc6dd6
  4240a6:	int3   
  4240a7:	std    
  4240a8:	mov    ah,0xaf
  4240aa:	inc    ebx
  4240ab:	fst    DWORD PTR [edi+0x5dde73cf]
  4240b1:	or     DWORD PTR [ecx-0x3feb18f],ecx
  4240b7:	test   al,0x32
  4240b9:	arpl   di,sp
  4240bb:	xor    al,0x75
  4240bd:	inc    edi
  4240be:	xor    ebp,DWORD PTR [ecx]
  4240c0:	jp     0x424090
  4240c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4240c3:	ins    BYTE PTR es:[edi],dx
  4240c4:	ins    DWORD PTR es:[edi],dx
  4240c5:	jbe    0x424076
  4240c7:	stc    
  4240c8:	retf   
  4240c9:	in     al,0xcc
  4240cb:	aam    0xba
  4240cd:	loopne 0x424106
  4240cf:	gs dec ebp
  4240d1:	cmp    eax,0x906d119c
  4240d6:	sbb    dl,0x4c
  4240d9:	dec    ebx
  4240da:	mov    edi,0x559a8830
  4240df:	mov    dh,0x90
  4240e1:	repz das 
  4240e3:	jle    0x42415c
  4240e5:	dec    ecx
  4240e6:	ficom  WORD PTR [eax+0x383e6ae5]
  4240ec:	jbe    0x424156
  4240ee:	mov    ebx,0x95aa0cb5
  4240f3:	mov    esi,0x7e337a4e
  4240f8:	iret   
  4240f9:	sbb    ecx,DWORD PTR [ebx-0x50]
  4240fc:	mov    ecx,0x8b92ec83
  424101:	and    eax,0x5e96a3c6
  424106:	push   ecx
  424107:	ss push 0xf
  42410a:	jno    0x4240b3
  42410c:	fild   QWORD PTR [ecx+esi*4+0x62a73077]
  424113:	xchg   esi,eax
  424114:	imul   DWORD PTR [eax]
  424116:	add    esi,DWORD PTR [esi+0x3156ecaa]
  42411c:	fcomp  DWORD PTR [edi-0xf9949bc]
  424122:	dec    edx
  424123:	test   esi,esi
  424125:	out    dx,eax
  424126:	mov    bl,0xde
  424128:	shl    BYTE PTR [esi-0x80],1
  42412b:	inc    eax
  42412c:	push   edx
  42412d:	in     al,dx
  42412e:	data16 js 0x42414e
  424131:	cmp    dl,ch
  424133:	inc    ebp
  424134:	jnp    0x4240d7
  424136:	xchg   ebx,eax
  424137:	fwait
  424138:	pop    edx
  424139:	mov    dl,0xcf
  42413b:	xor    ch,BYTE PTR [edx-0x40cc5948]
  424141:	ror    BYTE PTR [eax],0x72
  424144:	mov    ah,0x4f
  424146:	xchg   esp,eax
  424147:	dec    edi
  424148:	cli    
  424149:	test   al,0xff
  42414b:	lea    esp,[edx+0x1872ec01]
  424151:	mov    ss,WORD PTR [edx+edx*4+0x3b]
  424155:	(bad)  
  424156:	stc    
  424157:	ins    BYTE PTR es:[edi],dx
  424158:	xor    eax,DWORD PTR [eax-0x30]
  42415b:	inc    ebp
  42415c:	and    BYTE PTR [ebx],ch
  42415e:	fsubr  QWORD PTR [edi]
  424160:	inc    esp
  424161:	retf   0xd188
  424164:	push   ecx
  424165:	ss push esp
  424167:	and    BYTE PTR ds:0x75a2c126,0xd2
  42416e:	sub    DWORD PTR [edx],ebx
  424170:	gs jb  0x4241f0
  424173:	push   esp
  424174:	xor    dl,BYTE PTR [ebx-0x14]
  424177:	mul    BYTE PTR [esi+0xa]
  42417a:	inc    ebx
  42417b:	xor    edx,edx
  42417d:	stc    
  42417e:	ret    
  42417f:	fnstsw WORD PTR ds:0xef9ff903
  424185:	repz jge 0x42416e
  424188:	dec    esp
  424189:	xor    DWORD PTR [edi],eax
  42418b:	mov    bh,0x6d
  42418d:	fiadd  DWORD PTR [ecx-0x24a40071]
  424193:	jmp    0x2539e42c
  424198:	pop    esi
  424199:	daa    
  42419a:	retf   
  42419b:	fs inc eax
  42419d:	or     esp,eax
  42419f:	xor    al,0x66
  4241a1:	shr    ah,cl
  4241a3:	mov    ebx,0x76c8c8cf
  4241a8:	sbb    BYTE PTR [ecx+0x53],cl
  4241ab:	jg     0x4241f8
  4241ad:	mov    edx,0xc8e45489
  4241b2:	jns    0x424214
  4241b4:	fcom   QWORD PTR [ebx+0x3f4a064c]
  4241ba:	adc    edx,DWORD PTR [ebx+0x61a43144]
  4241c0:	sub    ecx,ecx
  4241c2:	push   0x1600164c
  4241c7:	xchg   ebx,eax
  4241c8:	outs   dx,BYTE PTR ds:[esi]
  4241c9:	das    
  4241ca:	(bad)  
  4241cb:	cld    
  4241cc:	test   DWORD PTR [edi-0x3eaf872a],0x16399012
  4241d6:	jmp    FWORD PTR [ebx-0x6a]
  4241d9:	or     DWORD PTR [ecx],ecx
  4241db:	cdq    
  4241dc:	pop    ecx
  4241dd:	xchg   edi,eax
  4241de:	add    al,BYTE PTR [ebx]
  4241e0:	aas    
  4241e1:	test   DWORD PTR [edx],edx
  4241e3:	ret    
  4241e4:	sbb    ecx,DWORD PTR [eax+0x43ea0179]
  4241ea:	lahf   
  4241eb:	pushf  
  4241ec:	aas    
  4241ed:	xchg   edx,eax
  4241ee:	repz pop es
  4241f0:	sub    al,0xac
  4241f2:	sub    esp,DWORD PTR [ebp+0x3a]
  4241f5:	mov    dh,0xb2
  4241f7:	push   ss
  4241f8:	sub    esp,eax
  4241fa:	or     al,0xe7
  4241fd:	and    DWORD PTR [ecx],edi
  4241ff:	xchg   DWORD PTR [esi+0x71],eax
  424202:	fstp   DWORD PTR [edx]
  424204:	(bad)  
  424205:	sub    BYTE PTR [esi],0x5a
  424208:	push   ebx
  424209:	(bad)  
  42420a:	ins    BYTE PTR es:[edi],dx
  42420b:	jne    0x4241c0
  42420d:	ror    BYTE PTR [esi],cl
  42420f:	push   DWORD PTR [esi-0xa291d78]
  424215:	jbe    0x4241b0
  424217:	aam    0x74
  424219:	inc    edi
  42421a:	add    eax,0x183183d7
  42421f:	sub    al,0xe2
  424221:	idiv   edx
  424223:	aad    0x37
  424225:	mov    esp,DWORD PTR [ecx-0x67857087]
  42422b:	jle    0x424204
  42422d:	pop    esp
  42422e:	push   ss
  42422f:	(bad)  
  424230:	and    dh,BYTE PTR [esi]
  424232:	into   
  424233:	mov    al,BYTE PTR [ebx-0x5ab95c8c]
  424239:	icebp  
  42423a:	jo     0x4241e4
  42423c:	out    0xf9,al
  42423e:	stc    
  42423f:	inc    edi
  424240:	xor    bl,BYTE PTR [edx+0x5de68e52]
  424246:	push   ss
  424247:	int    0x4f
  424249:	add    eax,0xb2de7d50
  42424e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42424f:	sbb    ebp,ecx
  424251:	sahf   
  424252:	out    dx,al
  424253:	out    dx,al
  424254:	outs   dx,BYTE PTR ds:[esi]
  424255:	aaa    
  424256:	(bad)  
  424258:	xlat   BYTE PTR ds:[ebx]
  424259:	dec    ecx
  42425a:	int    0x84
  42425c:	add    al,0xf7
  42425e:	int3   
  42425f:	sbb    DWORD PTR [ecx+ebp*8],ebp
  424262:	inc    edi
  424263:	test   DWORD PTR [ecx+0xab5d71d],edx
  424269:	shr    DWORD PTR [ebx+eiz*1],1
  42426c:	mov    bh,0x69
  42426e:	aam    0x9d
  424270:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424271:	iret   
  424272:	mov    ch,0x90
  424274:	jns    0x424272
  424276:	jns    0x42425b
  424278:	aam    0x4f
  42427a:	pop    edi
  42427b:	inc    edi
  42427c:	jb     0x4242a5
  42427e:	mov    bl,0x3d
  424280:	pushf  
  424281:	push   ss
  424282:	add    BYTE PTR [edx],bh
  424284:	jo     0x4242be
  424286:	jbe    0x4242f2
  424288:	cmp    dh,BYTE PTR [edx]
  42428a:	lea    ecx,[edx+0x45]
  42428d:	hlt    
  42428e:	ja     0x42425e
  424290:	mov    ds:0xe6bff0ae,al
  424295:	stc    
  424296:	xchg   edi,eax
  424297:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424298:	ds adc eax,0x5b8b2b6a
  42429e:	nop
  42429f:	xor    ebp,DWORD PTR [eax+eax*1+0x1c84b968]
  4242a6:	dec    ebp
  4242a7:	(bad)  
  4242a8:	out    0x12,eax
  4242aa:	ja     0x424230
  4242ac:	push   edx
  4242ad:	fld    DWORD PTR [edi-0xe]
  4242b0:	dec    edi
  4242b1:	loopne 0x4242fe
  4242b3:	call   0xe4:0x95fa893
  4242ba:	and    bh,0x86
  4242bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4242be:	sub    ebp,edi
  4242c0:	lods   al,BYTE PTR ds:[esi]
  4242c1:	mov    ebp,0x63fe6e3c
  4242c6:	jge    0x42433b
  4242c8:	jg     0x42428b
  4242ca:	popf   
  4242cb:	(bad)  
  4242cc:	pop    esp
  4242cd:	jo     0x42431d
  4242cf:	pop    ebx
  4242d0:	clc    
  4242d1:	int3   
  4242d2:	jmp    0x42426b
  4242d4:	pop    edx
  4242d5:	push   esi
  4242d6:	cmp    eax,0x5dfe3574
  4242db:	push   eax
  4242dc:	mov    cl,0xf7
  4242de:	or     edx,edi
  4242e0:	sbb    esi,DWORD PTR [esp+esi*2+0x75]
  4242e4:	push   edx
  4242e5:	cmc    
  4242e6:	sahf   
  4242e7:	mov    cl,0x7f
  4242e9:	sbb    ecx,DWORD PTR [ebx-0x34ec4eb2]
  4242ef:	mov    al,BYTE PTR ds:0x87f52998
  4242f5:	call   0x3dde1642
  4242fa:	pop    ebx
  4242fb:	retf   
  4242fc:	rol    BYTE PTR [esi-0x9],1
  4242ff:	push   cs
  424300:	cmp    DWORD PTR [eax+edi*2],0xc2c07cff
  424307:	jnp    0x4242ec
  424309:	cmp    bh,BYTE PTR [ebx]
  42430b:	mov    cl,0x67
  42430d:	jle    0x424331
  42430f:	jno    0x4242fd
  424311:	lea    edx,[edi-0x2f]
  424314:	inc    ebp
  424315:	(bad)  
  424316:	lods   eax,DWORD PTR ds:[esi]
  424317:	fwait
  424318:	mov    esi,0xd790aaad
  42431d:	aas    
  42431e:	loopne 0x42437c
  424320:	lahf   
  424321:	ret    0x964
  424324:	push   ss
  424325:	(bad)
  424329:	lods   al,BYTE PTR ds:[esi]
  42432a:	push   ebx
  42432b:	push   fs
  42432d:	loope  0x424335
  42432f:	xor    BYTE PTR [ebp+0x401d25f3],0xd6
  424336:	and    ecx,DWORD PTR [ecx+ebx*8-0x22]
  42433a:	cld    
  42433b:	push   esp
  42433c:	shl    al,0x8b
  42433f:	out    dx,eax
  424340:	xchg   edx,eax
  424341:	test   BYTE PTR [esi+0x302b6b47],cl
  424347:	retf   0x2b54
  42434a:	movntq QWORD PTR [ebx-0x1ad9f65b],mm4
  424351:	sahf   
  424352:	xlat   BYTE PTR ds:[ebx]
  424353:	pop    ecx
  424354:	cwde   
  424355:	fst    QWORD PTR [ecx]
  424357:	jmp    0x658da984
  42435c:	jae    0x42430b
  42435e:	xchg   esi,eax
  42435f:	call   0x1fef:0x14d8e642
  424366:	cmc    
  424367:	pusha  
  424368:	pop    edi
  424369:	jg     0x4243c7
  42436b:	sbb    edx,DWORD PTR [esi-0x34]
  42436e:	mov    eax,0xa2e13390
  424373:	jle    0x42431b
  424375:	push   ecx
  424376:	push   ebx
  424378:	ins    BYTE PTR es:[edi],dx
  424379:	pop    edx
  42437a:	cli    
  42437b:	adc    BYTE PTR [ecx-0x18741ee1],ah
  424381:	enter  0xf26d,0xc5
  424385:	push   ds
  424386:	enter  0x7d6,0x3c
  42438a:	xchg   BYTE PTR [edx-0x4503ae0b],al
  424390:	out    dx,eax
  424391:	aas    
  424392:	push   0x34
  424394:	(bad)  
  424395:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424396:	push   ebx
  424397:	pop    ss
  424398:	pop    ds
  424399:	das    
  42439a:	sub    al,dh
  42439c:	cmp    DWORD PTR [edx+0x6ee091a],eax
  4243a2:	imul   ebp,DWORD PTR [ecx+0x77a1af03],0x54
  4243a9:	mov    al,0x3d
  4243ab:	stos   BYTE PTR es:[edi],al
  4243ac:	loopne 0x424363
  4243ae:	cmp    dl,BYTE PTR [eax+0x2d]
  4243b1:	and    al,0xf9
  4243b3:	sub    esp,DWORD PTR [ebp+eax*8-0x19]
  4243b7:	hlt    
  4243b8:	add    al,0x1
  4243ba:	(bad)  
  4243bb:	(bad)  
  4243bc:	cmp    BYTE PTR [eax],al
  4243be:	sbb    al,0xea
  4243c0:	mov    dh,0x4
  4243c2:	mov    dh,0xd9
  4243c4:	mov    bl,0xda
  4243c6:	pop    ebx
  4243c7:	or     ebx,esp
  4243c9:	add    al,0x12
  4243cb:	lods   eax,DWORD PTR ds:[esi]
  4243cc:	cli    
  4243cd:	cmp    al,0x8
  4243cf:	cmc    
  4243d0:	jo     0x42435e
  4243d2:	pop    es
  4243d3:	ret    0xf060
  4243d6:	inc    ecx
  4243d7:	in     al,dx
  4243d8:	and    al,0x6b
  4243da:	and    bl,cl
  4243dc:	es xchg ebx,eax
  4243de:	stc    
  4243df:	dec    ecx
  4243e0:	xor    eax,0x99758275
  4243e5:	ins    BYTE PTR es:[edi],dx
  4243e6:	lea    esp,[esi+0x7b]
  4243e9:	loope  0x4243ed
  4243eb:	and    DWORD PTR [ebx],esp
  4243ed:	stc    
  4243ee:	sbb    al,0xbf
  4243f0:	and    dl,BYTE PTR [esi-0x23]
  4243f3:	aam    0x16
  4243f5:	cmp    eax,0x3544a193
  4243fa:	adc    edx,edx
  4243fc:	fisub  WORD PTR [edi+ebx*1]
  4243ff:	and    al,0x2b
  424401:	js     0x4243db
  424403:	std    
  424404:	cld    
  424405:	adc    eax,0x5e425d52
  42440a:	(bad)  
  42440b:	arpl   WORD PTR ds:0xeb1b1fb5,sp
  424411:	jecxz  0x424490
  424413:	adc    dh,ah
  424415:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424416:	sar    DWORD PTR [edx],0xea
  424419:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42441a:	in     eax,dx
  42441b:	and    eax,0x0
  424420:	add    BYTE PTR [eax],al
  424422:	sub    al,0xda
  424424:	iret   
  424425:	cmp    bh,0x95
  424428:	outs   dx,DWORD PTR ds:[esi]
  424429:	(bad)  
  42442a:	jecxz  0x4243f5
  42442c:	push   ds
  42442d:	ins    DWORD PTR es:[edi],dx
  42442e:	ins    DWORD PTR es:[edi],dx
  42442f:	popa   
  424430:	pop    ebp
  424431:	shl    bh,cl
  424433:	mov    esp,0x4f20001
  424438:	add    BYTE PTR [eax],al
  42443a:	aam    0x85
  42443c:	mov    ebx,0x820059dc
  424441:	dec    esp
  424442:	nop
  424443:	cli    
  424444:	mov    ecx,0xeaab715a
  424449:	inc    esi
  42444a:	jp     0x4243eb
  42444c:	leave  
  42444d:	inc    ebp
  42444e:	pop    esi
  42444f:	mov    ds:0xf0f5e252,al
  424454:	popf   
  424455:	pushf  
  424456:	xchg   ebx,eax
  424457:	push   esp
  424458:	cmp    BYTE PTR [ecx],cl
  42445a:	lods   eax,DWORD PTR ds:[esi]
  42445b:	add    bh,BYTE PTR [eax-0x5609c23]
  424461:	jl     0x4244a1
  424463:	adc    cl,BYTE PTR [ebx]
  424465:	push   ebp
  424466:	in     eax,dx
  424467:	imul   ecx,DWORD PTR [ebx+ebx*1+0x6c],0xc45cd38b
  42446f:	in     eax,0x39
  424471:	cdq    
  424472:	not    esi
  424474:	stos   BYTE PTR es:[edi],al
  424475:	jno    0x424469
  424477:	pop    ecx
  424478:	mov    edx,0x4edf28da
  42447d:	ins    DWORD PTR es:[edi],dx
  42447e:	imul   esp,DWORD PTR ds:0x144105e0,0xffffffdb
  424485:	outs   dx,DWORD PTR ds:[esi]
  424486:	enter  0xc2fc,0x21
  42448a:	rcr    dh,1
  42448c:	jge    0x4244f6
  42448e:	es xchg esp,eax
  424490:	setl   BYTE PTR [esi]
  424493:	int3   
  424494:	iret   
  424495:	dec    edi
  424496:	mov    bh,BYTE PTR [ebp-0x73]
  424499:	sbb    ch,BYTE PTR [edx-0x5c]
  42449c:	mov    ah,0xb2
  42449e:	sbb    ebx,ecx
  4244a0:	stos   DWORD PTR es:[edi],eax
  4244a1:	into   
  4244a2:	dec    esp
  4244a3:	xor    al,0xc0
  4244a5:	(bad)  
  4244a6:	rcr    BYTE PTR [esi-0x2],1
  4244a9:	inc    ebp
  4244aa:	or     eax,0x73c039fe
  4244af:	ret    0x9c44
  4244b2:	loopne 0x4244d3
  4244b4:	xchg   ecx,eax
  4244b5:	xchg   ecx,eax
  4244b6:	call   0xa7e2f7b
  4244bb:	lods   al,BYTE PTR ds:[esi]
  4244bc:	scas   eax,DWORD PTR es:[edi]
  4244bd:	pop    edx
  4244be:	test   BYTE PTR [edx],dl
  4244c0:	scas   al,BYTE PTR es:[edi]
  4244c1:	pop    ebx
  4244c2:	sbb    eax,0x1ba5e964
  4244c7:	cmp    DWORD PTR [eax-0x36],ecx
  4244ca:	mov    dh,0x39
  4244cc:	jg     0x42444e
  4244ce:	jl     0x4244ce
  4244d0:	fstp   QWORD PTR [ebx-0x4801f7e0]
  4244d6:	mov    ebp,eax
  4244d8:	call   0x37fe62d4
  4244dd:	xlat   BYTE PTR ds:[ebx]
  4244de:	push   0x5d
  4244e0:	pop    ds
  4244e1:	iret   
  4244e2:	sbb    BYTE PTR [eax+0x1891a4d7],0xcd
  4244e9:	call   0x4e68:0xe599145e
  4244f0:	push   esi
  4244f1:	in     al,0xbe
  4244f3:	pusha  
  4244f4:	popa   
  4244f5:	test   al,0xc6
  4244f7:	ds add ecx,eax
  4244fa:	stc    
  4244fb:	fwait
  4244fc:	stc    
  4244fd:	dec    esi
  4244fe:	dec    ebp
  4244ff:	mov    esp,gs
  424501:	xchg   esp,eax
  424502:	xor    dl,bh
  424504:	sub    ch,BYTE PTR [edx]
  424506:	push   es
  424507:	and    DWORD PTR [ebx+ebx*2-0x78],edi
  42450b:	adc    BYTE PTR [eax+0x3bb4739f],cl
  424511:	fidiv  DWORD PTR [edx+ecx*1-0x2afd5b9f]
  424518:	sar    BYTE PTR [eax-0x79],cl
  42451b:	and    dh,BYTE PTR [edi-0x10]
  42451e:	add    bh,BYTE PTR [edx+edx*4-0x16]
  424522:	clc    
  424523:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424524:	(bad)  
  424525:	dec    ebx
  424526:	int    0x96
  424528:	adc    DWORD PTR [ebx+edi*8+0x532c95da],0x6cbd34da
  424533:	mov    edx,0x97f52b54
  424538:	(bad)  
  424539:	jmp    0x424520
  42453b:	imul   ebp,DWORD PTR [ecx],0xa50e0d5e
  424541:	daa    
  424542:	jmpw   0x8c60
  424546:	div    BYTE PTR [edx-0x6a8761f]
  42454c:	jge    0x4245bd
  42454e:	add    al,0x60
  424550:	mov    al,0x7a
  424552:	std    
  424553:	mov    dh,0x85
  424555:	push   edx
  424556:	cld    
  424557:	sahf   
  424558:	mov    eax,0x25c3d85c
  42455d:	(bad)  
  42455e:	in     al,0x8b
  424560:	mov    esi,0x8f7abaaa
  424565:	stos   BYTE PTR es:[edi],al
  424566:	add    dh,dh
  424568:	inc    ecx
  424569:	shr    DWORD PTR [edi-0x4a],1
  42456c:	pop    ebp
  42456d:	into   
  42456e:	xchg   ecx,eax
  42456f:	rol    BYTE PTR [ebp-0x1361f59b],1
  424575:	aaa    
  424576:	xor    al,0x38
  424578:	frstor [ebp+0x17096507]
  42457e:	int    0x8f
  424580:	xchg   DWORD PTR [ecx-0x2a],edi
  424583:	cld    
  424584:	push   ebx
  424585:	inc    ebx
  424586:	stc    
  424587:	fisttp WORD PTR [ebp-0x4d]
  42458a:	and    eax,DWORD PTR [ebx-0x2f323c32]
  424590:	add    eax,0xae6f64d3
  424595:	or     ecx,DWORD PTR [edi+ebx*4-0x45]
  424599:	inc    edx
  42459a:	fs test al,0x7f
  42459d:	inc    edx
  42459f:	or     ch,BYTE PTR [edx+0x3bc449c7]
  4245a5:	(bad)  
  4245a6:	push   esi
  4245a7:	test   al,0xf8
  4245a9:	push   ebx
  4245aa:	xchg   ecx,eax
  4245ab:	sub    eax,0x965554e0
  4245b0:	lods   eax,DWORD PTR ds:[esi]
  4245b1:	fwait
  4245b2:	mov    cl,0x13
  4245b4:	sbb    ebx,DWORD PTR [ecx+0x306c021d]
  4245ba:	and    edx,ebx
  4245bc:	in     eax,dx
  4245bd:	sbb    BYTE PTR ds:0xe9b5b933,cl
  4245c3:	pop    eax
  4245c4:	sbb    DWORD PTR [ecx+0x5d8a19f6],edi
  4245ca:	mov    cl,0x5b
  4245cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4245cd:	xchg   BYTE PTR [esi+0x1319b8d5],ah
  4245d3:	push   esp
  4245d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4245d5:	push   edx
  4245d6:	cwde   
  4245d7:	call   0x2288:0xd364f4e6
  4245de:	lock mov edi,DWORD PTR [esi+eiz*1-0x5cd022cd]
  4245e6:	inc    eax
  4245e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4245e8:	push   ds
  4245e9:	jle    0x424606
  4245eb:	rol    BYTE PTR [ebx],cl
  4245ed:	inc    ecx
  4245ee:	cli    
  4245ef:	dec    eax
  4245f0:	sar    DWORD PTR [esi+eax*8],1
  4245f3:	cmp    eax,0x84070e7b
  4245f8:	out    dx,al
  4245f9:	ret    
  4245fa:	rcr    ecx,cl
  4245fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4245fd:	push   edi
  4245fe:	mov    gs,WORD PTR [ebx]
  424600:	pushf  
  424601:	imul   ebx,DWORD PTR [ebp+0x3c447a9f],0x47dc11f7
  42460b:	sbb    ch,BYTE PTR [edx-0x3c]
  42460e:	jmp    0xf757:0xfc4bbba4
  424615:	jp     0x42464f
  424617:	stos   BYTE PTR es:[edi],al
  424618:	inc    ecx
  424619:	adc    eax,0xf419c3be
  42461e:	or     al,0x65
  424620:	pop    ds
  424621:	sahf   
  424622:	test   DWORD PTR [ebx],0xffbeac81
  424628:	adc    al,0x81
  42462a:	xchg   edi,eax
  42462b:	popa   
  42462c:	add    eax,0xcb01e4b5
  424631:	dec    esi
  424632:	jne    0x4245dd
  424634:	bound  edi,QWORD PTR [ecx+0x5d]
  424637:	mov    esp,DWORD PTR [edi]
  424639:	mov    dl,0x92
  42463b:	mov    ebx,0xb4bbdf81
  424640:	sar    BYTE PTR [ebp-0x6e188215],1
  424646:	out    dx,eax
  424647:	xor    BYTE PTR [ecx-0x20],ah
  42464a:	sahf   
  42464b:	and    BYTE PTR [eax+0x22],dh
  42464e:	loopne 0x42465c
  424650:	add    al,0x63
  424652:	pop    eax
  424653:	xchg   esi,eax
  424654:	cmp    ah,dl
  424656:	sbb    BYTE PTR [edi],cl
  424658:	jg     0x4245ec
  42465a:	xchg   esi,eax
  42465b:	mov    DWORD PTR [edx-0x34],ebx
  42465e:	or     eax,DWORD PTR [edx-0x36296bf8]
  424664:	xchg   edx,eax
  424665:	inc    ebx
  424666:	nop
  424667:	push   0x7b
  424669:	fwait
  42466a:	jge    0x4245f0
  42466c:	outs   dx,BYTE PTR ds:[esi]
  42466d:	cmp    esi,DWORD PTR [ebx+0x34]
  424670:	add    esp,DWORD PTR [ebp-0x59]
  424673:	jmp    0x4246e8
  424675:	aam    0xf6
  424677:	lods   al,BYTE PTR ds:[esi]
  424678:	fwait
  424679:	repnz dec eax
  42467b:	sti    
  42467c:	jp     0x4246d6
  42467e:	jecxz  0x424634
  424680:	push   ecx
  424681:	(bad)  
  424682:	out    dx,eax
  424683:	sbb    eax,0xdc74b4e1
  424688:	enter  0xb22b,0xb7
  42468c:	mov    al,ds:0x2b0f8a0b
  424691:	adc    ecx,DWORD PTR [edx+edi*8-0xf7b3062]
  424698:	(bad)  
  42469a:	test   BYTE PTR [eax-0x2d796c54],dh
  4246a0:	psubd  mm1,QWORD PTR [edx+0x28]
  4246a4:	or     al,0xb6
  4246a6:	lods   al,BYTE PTR ds:[esi]
  4246a7:	pop    esp
  4246a8:	hlt    
  4246a9:	push   edi
  4246aa:	into   
  4246ab:	nop
  4246ac:	and    BYTE PTR [esp+edi*8],dl
  4246af:	mov    ds:0x5d32d661,eax
  4246b4:	daa    
  4246b5:	jecxz  0x42465a
  4246b7:	test   eax,0xe79773a8
  4246bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4246bd:	push   ss
  4246be:	xchg   esi,eax
  4246bf:	xor    al,0xc
  4246c1:	loopne 0x4246c8
  4246c3:	shl    DWORD PTR [ebx],1
  4246c5:	retf   
  4246c6:	add    eax,0x1b4d2734
  4246cb:	rcr    DWORD PTR [edx],cl
  4246cd:	ins    BYTE PTR es:[edi],dx
  4246ce:	fistp  WORD PTR [ecx]
  4246d0:	pop    edi
  4246d1:	stos   BYTE PTR es:[edi],al
  4246d2:	jmp    FWORD PTR [ebx-0x483de73]
  4246d8:	pop    edx
  4246d9:	cs pop esi
  4246db:	dec    edx
  4246dc:	and    eax,0xdea8d451
  4246e1:	xor    BYTE PTR [edi+ebp*8],al
  4246e4:	push   cs
  4246e5:	xor    ebx,edx
  4246e7:	cmp    ch,BYTE PTR [ebx]
  4246e9:	mov    ah,0xba
  4246eb:	mov    esi,0x90a944b7
  4246f0:	or     dh,BYTE PTR [ebx]
  4246f2:	call   0x4b2f:0xcd28a97c
  4246f9:	imul   ebp,DWORD PTR [esi+0x3990e42],0xfffffff9
  424700:	push   ss
  424701:	icebp  
  424702:	mov    ebx,0x4851b4dc
  424707:	mov    ds:0xaa5eaf33,eax
  42470c:	cmp    eax,0x543dec78
  424711:	dec    esi
  424712:	adc    ah,BYTE PTR [eax]
  424714:	xchg   ebp,eax
  424715:	enter  0x1cc,0xf
  424719:	ins    BYTE PTR es:[edi],dx
  42471a:	or     esi,ebx
  42471c:	mov    ebp,0x5c6b96d8
  424721:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424722:	sbb    eax,0x92a26614
  424727:	sub    ebp,DWORD PTR [ecx+0x619aa26]
  42472d:	mov    ebx,0x9262b86
  424732:	rcr    BYTE PTR [esi],cl
  424734:	or     DWORD PTR [ebx],ebx
  424736:	add    al,0x10
  424738:	push   0x40
  42473a:	sbb    BYTE PTR [esi],0x48
  42473d:	test   al,0xe9
  42473f:	or     al,BYTE PTR fs:[edx+0x57e5ca0c]
  424746:	lea    ebx,[edi-0x69596438]
  42474c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42474d:	jp     0x42470e
  42474f:	push   0x51
  424751:	cmp    al,0x21
  424753:	adc    dl,BYTE PTR [ebp-0x15]
  424756:	inc    esi
  424757:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424758:	push   ds
  424759:	mov    ds:0x4e77ba70,al
  42475e:	sbb    BYTE PTR [esi-0x4fa7e0e],bl
  424764:	inc    edx
  424765:	aam    0xe9
  424767:	push   0x1485256
  42476c:	mov    cl,0x22
  42476e:	out    0x91,al
  424770:	push   ds
  424771:	ds xchg ebp,eax
  424773:	mov    edi,0x1e676d06
  424778:	scas   eax,DWORD PTR es:[edi]
  424779:	(bad)
  42477c:	jmp    0xecc402
  424781:	ins    BYTE PTR es:[edi],dx
  424782:	out    dx,eax
  424783:	cmc    
  424784:	popa   
  424785:	stos   DWORD PTR es:[edi],eax
  424786:	outs   dx,DWORD PTR ds:[esi]
  424787:	push   es
  424788:	jmp    0x8960:0x458e2ec8
  42478f:	inc    ecx
  424790:	adc    BYTE PTR [edx],cl
  424792:	jge    0x4247e4
  424794:	repz ret 
  424796:	push   cs
  424797:	cmp    esp,ebx
  424799:	jecxz  0x42478d
  42479b:	data16 sbb ah,bl
  42479e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42479f:	xor    DWORD PTR [esi+0x63c970df],ecx
  4247a5:	inc    esi
  4247a6:	inc    eax
  4247a7:	loopne 0x424730
  4247a9:	pop    ebp
  4247aa:	(bad)
  4247ad:	(bad)  
  4247af:	push   edx
  4247b0:	inc    ecx
  4247b1:	sub    al,0xec
  4247b3:	inc    DWORD PTR [eiz*1+0x2206d279]
  4247ba:	sub    eax,0x4130a148
  4247bf:	push   esp
  4247c0:	xchg   BYTE PTR [edx+0x73d14625],ch
  4247c6:	mov    esi,ebp
  4247c8:	add    ecx,eax
  4247ca:	jns    0x4247b2
  4247cc:	ins    BYTE PTR es:[edi],dx
  4247cd:	mov    al,0x28
  4247cf:	pop    ss
  4247d0:	std    
  4247d1:	imul   DWORD PTR [edi]
  4247d3:	fsubr  DWORD PTR [ebx]
  4247d5:	cmp    eax,0x429d7a52
  4247da:	xor    ecx,DWORD PTR ds:0xbcdc716d
  4247e0:	icebp  
  4247e1:	cmp    eax,0x7d9d20b
  4247e6:	cs mov ah,0x54
  4247e9:	mov    ch,0x38
  4247eb:	mov    dl,0xf
  4247ed:	dec    esi
  4247ee:	mov    ebx,DWORD PTR [ebx]
  4247f0:	jbe    0xb9748631
  4247f6:	dec    esp
  4247f7:	and    esp,ebp
  4247f9:	xor    edi,eax
  4247fb:	jle    0x42486d
  4247fd:	or     al,0xa0
  4247ff:	xchg   ebp,eax
  424800:	scas   eax,DWORD PTR es:[edi]
  424801:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424802:	out    dx,al
  424803:	cmp    al,0xdc
  424805:	mov    dh,0x6d
  424807:	xchg   edx,eax
  424808:	push   0x3a
  42480a:	sub    al,0x7f
  42480c:	pop    ecx
  42480d:	jp     0x4247c8
  42480f:	dec    ebx
  424810:	nop
  424811:	stc    
  424812:	call   0x218875e6
  424817:	mov    ds:0xe1a607ab,al
  42481c:	out    0xa4,eax
  42481e:	int    0x11
  424820:	sbb    edi,DWORD PTR [edx-0x31]
  424823:	lea    ebp,[edi-0x4224c8d]
  424829:	gs xchg edi,eax
  42482b:	xchg   edi,eax
  42482c:	popf   
  42482d:	sti    
  42482e:	xor    DWORD PTR ds:0xa9225261,edi
  424834:	imul   eax,DWORD PTR [edx],0x5e
  424837:	and    DWORD PTR [ebp+0x3e],eax
  42483a:	or     ebp,DWORD PTR [eax-0x60]
  42483d:	add    al,0xc8
  42483f:	test   al,0x50
  424841:	push   ds
  424842:	ins    BYTE PTR es:[edi],dx
  424843:	imul   esi,DWORD PTR [esi],0x79
  424846:	push   edi
  424847:	push   0xffffffef
  424849:	imul   ebp,DWORD PTR [edi],0x379a7fa3
  42484f:	pop    ss
  424850:	pop    edi
  424851:	cmp    eax,0xecc70d47
  424856:	not    cl
  424858:	retf   
  424859:	into   
  42485a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42485b:	lods   eax,DWORD PTR ds:[esi]
  42485c:	and    BYTE PTR [ecx+eiz*4],0xee
  424860:	daa    
  424861:	add    bl,al
  424863:	div    ecx
  424865:	in     al,dx
  424866:	ins    BYTE PTR es:[edi],dx
  424867:	(bad)  
  424868:	(bad)  
  424869:	sub    DWORD PTR [esi+0x7ba19881],eax
  42486f:	and    dl,bl
  424871:	pop    esp
  424872:	jnp    0x4247fd
  424874:	adc    BYTE PTR [edi-0xc],dh
  424877:	push   ss
  424878:	pop    ss
  424879:	in     al,dx
  42487a:	jg     0x4248d9
  42487c:	jb     0x424842
  42487e:	adc    ebp,DWORD PTR [ecx+0xc]
  424881:	jb     0x4248b6
  424883:	mov    WORD PTR [ebx-0x41e06c67],ds
  424889:	dec    ebp
  42488a:	jo     0x4248a8
  42488c:	test   eax,0xec856c57
  424891:	test   BYTE PTR [edi],0x20
  424894:	xchg   esp,eax
  424895:	xor    DWORD PTR [edx+0x14efa481],0x71
  42489c:	mov    ah,0xb1
  42489e:	dec    esi
  42489f:	mov    edi,0xac54036f
  4248a4:	sbb    eax,0x47b55149
  4248a9:	sbb    dl,BYTE PTR [eax+eax*8-0x471e5d1e]
  4248b0:	sbb    al,bh
  4248b2:	fbld   TBYTE PTR [ebx+0x53]
  4248b5:	mov    es,WORD PTR [edx+esi*8-0x4c]
  4248b9:	lock sub bl,al
  4248bc:	mov    al,ds:0x44277a95
  4248c1:	lahf   
  4248c2:	mov    ch,0xc5
  4248c4:	or     eax,0x214c8fe6
  4248c9:	(bad)  
  4248ca:	sbb    BYTE PTR [ebx-0x25223434],ch
  4248d0:	jb     0x4248fb
  4248d2:	push   0xb4a447a9
  4248d7:	sub    DWORD PTR [esi+ebp*2+0x5893d742],edi
  4248de:	xchg   ebp,eax
  4248df:	je     0x4248c2
  4248e1:	mov    al,0x30
  4248e3:	mov    edx,DWORD PTR [edi]
  4248e5:	adc    al,ah
  4248e7:	addr16 mov cl,0xce
  4248ea:	mov    ch,0x27
  4248ec:	into   
  4248ed:	lock xchg ecx,eax
  4248ef:	mov    ecx,0x54f2c8e2
  4248f4:	out    dx,al
  4248f5:	mov    bl,0xcf
  4248f7:	and    eax,DWORD PTR [eax]
  4248f9:	adc    al,0x2c
  4248fb:	fdivr  QWORD PTR [ecx+0x727e5f15]
  424901:	leave  
  424902:	push   esi
  424903:	or     edx,DWORD PTR [eax]
  424905:	ja     0x424887
  424907:	icebp  
  424908:	sub    eax,0x3fd9d545
  42490d:	push   ss
  42490e:	mul    DWORD PTR [esi+esi*2]
  424911:	sbb    cl,ch
  424913:	test   BYTE PTR [eax-0x1d],dh
  424916:	jbe    0x4248d9
  424918:	jmp    0x4c47e637
  42491d:	arpl   WORD PTR [ebx+ebp*4-0x1eb4ec2f],dx
  424924:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424925:	xchg   ecx,eax
  424926:	pop    ebx
  424927:	add    eax,0x483aa70e
  42492c:	add    BYTE PTR [eax],al
  42492e:	add    BYTE PTR [eax],al
  424930:	add    BYTE PTR [eax],al
  424932:	adc    ecx,DWORD PTR [ebp-0x104094d7]
  424938:	push   ebx
  424939:	std    
  42493a:	and    ebp,DWORD PTR [ebx-0x25]
  42493d:	(bad)  
  42493e:	scas   eax,DWORD PTR es:[edi]
  42493f:	mov    ebx,0xc1d9dfa2
  424944:	add    DWORD PTR [eax],eax
  424946:	repnz add al,0x0
  424949:	add    al,cl
  42494b:	es ret 
  42494d:	add    ah,dh
  42494f:	dec    esp
  424950:	mov    dl,0x5e
  424952:	scas   eax,DWORD PTR es:[edi]
  424953:	sbb    esp,ebx
  424955:	or     esp,DWORD PTR [ebx-0x47]
  424958:	pop    edx
  424959:	daa    
  42495a:	loope  0x424934
  42495c:	in     eax,dx
  42495d:	sub    eax,DWORD PTR [edi+0x7a]
  424960:	cmp    edx,DWORD PTR [edi+0x5e29de3f]
  424966:	icebp  
  424967:	lds    edi,FWORD PTR [ebx+eax*2+0x18d12dc5]
  42496e:	or     edi,DWORD PTR [eax+0x20]
  424971:	fisub  DWORD PTR [edi-0x51]
  424974:	or     eax,0x52b0fc53
  424979:	adc    DWORD PTR [eax],eax
  42497b:	add    BYTE PTR [ebx+0x4d],bl
  42497e:	fimul  DWORD PTR [ebx+eax*8]
  424981:	cmp    esi,esi
  424983:	mov    edx,0xb49350f
  424988:	push   ds
  424989:	sar    cl,1
  42498b:	sbb    al,0x32
  42498d:	test   DWORD PTR [eax],ebx
  42498f:	addr16 push ecx
  424991:	inc    BYTE PTR [ecx+0x36]
  424994:	adc    BYTE PTR [ebp+eax*4+0x4a],ah
  424998:	in     al,0xfc
  42499a:	mov    al,ds:0xfcef9814
  42499f:	int    0xaf
  4249a1:	pop    edx
  4249a2:	in     eax,0x3a
  4249a4:	or     al,0x9d
  4249a6:	jmp    0xbd66:0x66f74c71
  4249ad:	push   eax
  4249ae:	lds    esp,FWORD PTR [edi+eax*4-0x3cc48a4c]
  4249b5:	test   edx,0xc89fecc0
  4249bb:	daa    
  4249bc:	rep outs dx,BYTE PTR ds:[esi]
  4249be:	sub    bh,BYTE PTR [edx]
  4249c0:	xchg   BYTE PTR [ebx-0x24],dl
  4249c3:	and    ebp,ebp
  4249c5:	mov    cl,BYTE PTR [edi]
  4249c7:	sub    eax,0x99021cec
  4249cc:	xor    dl,BYTE PTR [ecx]
  4249ce:	xlat   BYTE PTR ds:[ebx]
  4249cf:	sub    BYTE PTR [eax+esi*1],al
  4249d2:	xchg   ebp,eax
  4249d3:	loope  0x4249f9
  4249d5:	js     0x424a10
  4249d7:	es fwait
  4249d9:	ins    DWORD PTR es:[edi],dx
  4249da:	(bad)  
  4249db:	out    dx,eax
  4249dc:	mov    gs,esi
  4249de:	pop    ecx
  4249df:	adc    ecx,0x760d024a
  4249e5:	dec    eax
  4249e6:	add    ah,dh
  4249e8:	jbe    0x424a12
  4249ea:	fisttp WORD PTR [ebx-0x2a]
  4249ed:	mov    ebp,edi
  4249ef:	push   esi
  4249f0:	mov    al,ds:0xd8ba15ff
  4249f5:	pop    es
  4249f6:	xchg   ebp,eax
  4249f7:	jns    0x424a4e
  4249f9:	sahf   
  4249fa:	ja     0x424a43
  4249fc:	push   edi
  4249fd:	xlat   BYTE PTR ds:[ebx]
  4249fe:	adc    ch,dl
  424a00:	adc    dh,al
  424a02:	je     0x4249ac
  424a04:	dec    ebx
  424a05:	mov    cl,0x94
  424a07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424a08:	(bad)  
  424a0a:	sbb    edi,eax
  424a0c:	loop   0x424a13
  424a0e:	push   es
  424a0f:	xor    eax,0xd30a905d
  424a14:	mov    dl,0xe3
  424a16:	xor    edi,edi
  424a18:	scas   al,BYTE PTR es:[edi]
  424a19:	push   es
  424a1a:	sbb    al,0x57
  424a1c:	sbb    BYTE PTR [edx-0x5d],bh
  424a1f:	add    DWORD PTR [ebx+0x662b472a],esp
  424a25:	leave  
  424a26:	lock mov ebp,0x422cb61c
  424a2c:	cmp    eax,0x5130e974
  424a31:	xor    edi,DWORD PTR [eax+0x5f514baf]
  424a37:	lods   eax,DWORD PTR ds:[esi]
  424a38:	push   ebp
  424a39:	std    
  424a3a:	mov    eax,ds:0xf0dcdadd
  424a3f:	outs   dx,DWORD PTR ds:[esi]
  424a40:	jnp    0x4249ed
  424a42:	pop    ds
  424a43:	sti    
  424a44:	call   0x831c:0xd33c7147
  424a4b:	mov    ebp,0xaf2f2fcc
  424a50:	(bad)
  424a53:	imul   esi,edi,0xd266baee
  424a59:	jae    0x424ad7
  424a5b:	cmp    al,0xc5
  424a5d:	rol    BYTE PTR [ebp+0x5907f017],1
  424a63:	bound  edi,QWORD PTR [eax]
  424a65:	add    BYTE PTR [edi-0x15],dl
  424a68:	not    DWORD PTR [ecx]
  424a6a:	sidtd  [esi]
  424a6d:	xor    cl,BYTE PTR [esi-0x1d]
  424a70:	test   eax,0x3f44a645
  424a75:	pop    edx
  424a76:	sub    al,0x87
  424a78:	fwait
  424a79:	in     al,dx
  424a7a:	mov    edx,?
  424a7c:	retf   0xa905
  424a7f:	not    dl
  424a81:	ficomp DWORD PTR [eax-0x26]
  424a84:	add    al,0x8e
  424a86:	imul   ebp,eax,0x41ae9890
  424a8c:	in     eax,0x89
  424a8e:	rol    BYTE PTR [esi],1
  424a90:	mov    ebx,0xc582cd39
  424a95:	cmp    edx,0xc1a04480
  424a9b:	out    dx,al
  424a9c:	pushf  
  424a9d:	cli    
  424a9e:	pop    ebx
  424a9f:	shl    ah,1
  424aa1:	dec    eax
  424aa2:	xor    al,0x5
  424aa4:	and    BYTE PTR [ecx+eax*8+0xfb8adbe],0xf5
  424aac:	ds out dx,eax
  424aae:	popf   
  424aaf:	sub    dh,bh
  424ab1:	xor    BYTE PTR [edx],ch
  424ab3:	clts   
  424ab5:	in     eax,0x8c
  424ab7:	(bad)  
  424ab8:	adc    esi,DWORD PTR [ecx-0x51ca8fc]
  424abe:	stos   BYTE PTR es:[edi],al
  424abf:	inc    edi
  424ac0:	ficom  DWORD PTR [edi-0x24a820ff]
  424ac6:	ret    0x160e
  424ac9:	dec    edx
  424aca:	sbb    esp,DWORD PTR [ecx]
  424acc:	retf   
  424acd:	push   edi
  424ace:	pop    ss
  424acf:	stos   DWORD PTR es:[edi],eax
  424ad0:	ror    BYTE PTR [ebp+0x23a5f3f3],cl
  424ad6:	mov    ?,ecx
  424ad8:	pminsw mm7,mm3
  424adb:	mov    ch,0x62
  424add:	fld    QWORD PTR [esi-0x33]
  424ae0:	call   DWORD PTR [edi+ebp*4]
  424ae3:	cmp    BYTE PTR ds:0xa05e6a65,bl
  424ae9:	es jle 0x424b4e
  424aec:	cs xchg ebx,eax
  424aee:	cmp    bl,BYTE PTR [ebp+0x62f0752]
  424af4:	mov    ch,0x65
  424af6:	call   0x614d:0xf20ef40b
  424afd:	hlt    
  424afe:	add    al,0x5
  424b00:	sub    DWORD PTR [ecx-0x4d],eax
  424b03:	push   ebx
  424b04:	fwait
  424b05:	sub    eax,0x89afb5c9
  424b0a:	imul   ebx,DWORD PTR cs:[edi],0x9dbd36a9
  424b11:	cdq    
  424b12:	fadd   DWORD PTR [esi-0x66638fd3]
  424b18:	jno    0x424b22
  424b1a:	sub    bh,BYTE PTR [eax]
  424b1c:	retf   
  424b1d:	lds    ebp,FWORD PTR [edi-0x2c]
  424b20:	scas   al,BYTE PTR es:[edi]
  424b21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424b22:	sahf   
  424b23:	cmp    BYTE PTR [esi+0x43c910f2],0xb
  424b2a:	and    esp,edx
  424b2c:	sbb    bl,cl
  424b2e:	ins    DWORD PTR es:[edi],dx
  424b2f:	icebp  
  424b30:	(bad)  
  424b32:	ds das 
  424b34:	push   ds
  424b35:	ss enter 0xd1a4,0x93
  424b3a:	jecxz  0x424b01
  424b3c:	add    esp,DWORD PTR [ecx-0x24df934b]
  424b42:	mov    ebp,0xd0e80780
  424b47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424b48:	cmp    dl,BYTE PTR [ebx-0x78]
  424b4b:	xchg   ecx,eax
  424b4c:	and    al,0x15
  424b4e:	adc    BYTE PTR [edx-0x4f],al
  424b51:	out    0xff,al
  424b53:	or     eax,0x72cd62f0
  424b58:	iret   
  424b59:	mov    dl,0x2e
  424b5b:	enter  0x6cb6,0x88
  424b5f:	fimul  DWORD PTR [esi-0xc53d0d7]
  424b65:	pushf  
  424b66:	mov    BYTE PTR [ecx],al
  424b68:	neg    cl
  424b6a:	add    BYTE PTR [ecx-0x1d],dl
  424b6d:	std    
  424b6e:	mov    ah,0x38
  424b70:	(bad)  
  424b71:	fisttp DWORD PTR [eax+0x4055de86]
  424b77:	mov    ah,0x1e
  424b79:	popf   
  424b7a:	cld    
  424b7b:	mov    ds:0x9b747a98,al
  424b80:	sbb    BYTE PTR es:[ecx+0x36],0xa
  424b85:	addr16 xchg ecx,eax
  424b87:	mov    WORD PTR [ecx-0x7f],es
  424b8a:	aas    
  424b8b:	rcr    DWORD PTR [edx+0x69],cl
  424b8e:	jge    0x424ba4
  424b90:	xchg   ebp,eax
  424b91:	stc    
  424b92:	push   ds
  424b93:	inc    ebx
  424b95:	test   eax,0xc9734a3e
  424b9a:	push   ecx
  424b9b:	repnz xchg ebp,ebp
  424b9e:	pop    edx
  424b9f:	and    al,0xc8
  424ba1:	cli    
  424ba2:	jle    0x424b36
  424ba4:	ror    BYTE PTR [edx-0x20],0xac
  424ba8:	inc    esi
  424ba9:	mov    ebx,0xad69031c
  424bae:	mov    dl,0x23
  424bb0:	rcr    DWORD PTR [esi+0x35],1
  424bb3:	push   edi
  424bb4:	fisub  DWORD PTR [ecx+0x3fb70ca1]
  424bba:	mov    edx,0x8909da79
  424bbf:	add    DWORD PTR [edi-0x20],ecx
  424bc2:	(bad)  
  424bc3:	xchg   edx,eax
  424bc4:	mov    ds:0x2611bf23,eax
  424bc9:	inc    esp
  424bca:	cmc    
  424bcb:	imul   ecx,DWORD PTR [ebp+0x1aeb9caa],0xffffffbe
  424bd2:	sub    al,0x60
  424bd4:	xchg   edi,eax
  424bd5:	fldenv [ebx]
  424bd7:	dec    ecx
  424bd8:	scas   eax,DWORD PTR es:[edi]
  424bd9:	int    0x58
  424bdb:	fdiv   QWORD PTR [edx+0x5]
  424bde:	dec    esi
  424bdf:	je     0x424c58
  424be1:	es leave 
  424be3:	in     eax,dx
  424be4:	hlt    
  424be5:	cmp    eax,0xe0ccd453
  424bea:	retf   
  424beb:	sbb    dh,BYTE PTR [edi+0x42]
  424bee:	jbe    0x424c2e
  424bf0:	jge    0x424c23
  424bf2:	jecxz  0x424c66
  424bf4:	enter  0x9980,0xa5
  424bf8:	or     DWORD PTR [edi],edx
  424bfa:	popf   
  424bfb:	aaa    
  424bfc:	mov    ebx,0x50df0f6a
  424c01:	hlt    
  424c02:	xor    bl,ch
  424c04:	mov    WORD PTR [eax-0x2d],cs
  424c07:	jg     0x424b89
  424c09:	out    0x6c,al
  424c0b:	mov    DWORD PTR [eax+edx*1+0x7144cf5f],ebp
  424c12:	or     ebx,esp
  424c14:	mov    bl,0x9e
  424c16:	mov    cl,0x5d
  424c18:	aad    0xf4
  424c1a:	cwde   
  424c1b:	addr16 cmp ebp,0xb7eeda96
  424c22:	(bad)  
  424c23:	stos   DWORD PTR es:[edi],eax
  424c24:	dec    DWORD PTR [ecx+0x643c7d07]
  424c2a:	mov    dh,0x8a
  424c2c:	fisub  WORD PTR [ebx+edi*1+0x1f]
  424c30:	xchg   ecx,eax
  424c31:	imul   ebx,ebp,0x922d24c0
  424c37:	cdq    
  424c38:	sub    DWORD PTR [ebx],edx
  424c3a:	push   esi
  424c3b:	adc    DWORD PTR [ecx],0xffffffd0
  424c3e:	in     al,dx
  424c3f:	js     0x424c97
  424c41:	push   esi
  424c42:	inc    ebp
  424c43:	mov    cl,0xe5
  424c45:	push   0xffffff94
  424c47:	sar    BYTE PTR [esi+0x20],cl
  424c4a:	in     eax,dx
  424c4b:	push   edx
  424c4c:	adc    eax,0xbc794483
  424c51:	pop    edx
  424c52:	int    0x2b
  424c54:	lock mov ebp,0x2aba1fff
  424c5a:	mov    bl,0x94
  424c5c:	mov    al,0x5
  424c5e:	xor    bh,BYTE PTR [edi]
  424c60:	nop
  424c61:	jg     0x424c11
  424c63:	jmp    DWORD PTR [eax]
  424c65:	push   0x7f
  424c67:	xchg   BYTE PTR [ebx-0x53],bh
  424c6a:	clc    
  424c6b:	mov    ds:0xcae1bb07,eax
  424c70:	fcomi  st,st(2)
  424c72:	(bad)  
  424c74:	mov    eax,ds:0x724b3d96
  424c79:	xchg   edx,eax
  424c7a:	dec    esi
  424c7b:	fs in  eax,0x23
  424c7e:	lds    edx,FWORD PTR [ebp+0x390435e]
  424c84:	xchg   edi,eax
  424c85:	mov    fs,WORD PTR [esi+0x8872c97]
  424c8b:	ror    DWORD PTR [edi],1
  424c8d:	aam    0x43
  424c8f:	mov    eax,0xc63c769a
  424c94:	pop    eax
  424c95:	outs   dx,BYTE PTR ds:[esi]
  424c96:	add    BYTE PTR [eax],al
  424c98:	xchg   esp,eax
  424c99:	aam    0x5c
  424c9b:	mov    al,0x2d
  424c9d:	sbb    al,0xb3
  424c9f:	popa   
  424ca0:	mov    ch,0x31
  424ca2:	je     0x424c2f
  424ca4:	int    0xf
  424ca6:	out    dx,al
  424ca7:	xor    ecx,DWORD PTR [edi-0x23]
  424caa:	repnz lahf 
  424cac:	imul   edi,DWORD PTR [edi+0x3a36659c],0x75602a7a
  424cb6:	and    bh,BYTE PTR [eax+eiz*8+0x92b3e66]
  424cbd:	adc    BYTE PTR [ebx],0x65
  424cc0:	sbb    DWORD PTR [ebx+ebp*1],edi
  424cc3:	pop    edx
  424cc4:	mov    cl,0x6f
  424cc6:	out    dx,eax
  424cc7:	aam    0x92
  424cc9:	(bad)  
  424ccb:	push   edi
  424ccc:	clc    
  424ccd:	or     BYTE PTR [eax],dl
  424ccf:	push   edx
  424cd0:	cli    
  424cd1:	cdq    
  424cd2:	jg     0x424cd6
  424cd4:	mov    eax,cs:0x4f8520b3
  424cda:	pop    esp
  424cdb:	add    al,0x97
  424cdd:	aaa    
  424cde:	shr    DWORD PTR [edx+esi*4],1
  424ce1:	ja     0x424c85
  424ce3:	add    al,0xa2
  424ce5:	jnp    0x424cd3
  424ce7:	ret    0xc944
  424cea:	xchg   edi,eax
  424ceb:	sbb    eax,0x8aadda64
  424cf0:	retf   
  424cf1:	inc    esp
  424cf2:	gs neg bl
  424cf5:	jp     0x424d6a
  424cf7:	sbb    bh,BYTE PTR [esi-0x1f]
  424cfa:	adc    DWORD PTR [edx-0x2e79e938],0x68
  424d01:	ss cli 
  424d03:	arpl   WORD PTR [edi-0x50],bx
  424d06:	pop    esp
  424d07:	xlat   BYTE PTR ds:[ebx]
  424d08:	(bad)  
  424d09:	scas   eax,DWORD PTR es:[edi]
  424d0a:	loop   0x424cc0
  424d0c:	cs js  0x424cc8
  424d0f:	jge    0x424d0e
  424d11:	mov    eax,0x56d5a1c4
  424d16:	adc    esp,DWORD PTR [edx]
  424d18:	xor    bh,dh
  424d1a:	fwait
  424d1b:	loopne 0x424d07
  424d1d:	ins    BYTE PTR es:[edi],dx
  424d1e:	adc    eax,0xb9b2c943
  424d23:	je     0xfcd07382
  424d29:	cmp    dh,BYTE PTR [ebx+0x2b]
  424d2c:	push   0xb37e13cc
  424d31:	xchg   edx,eax
  424d32:	cmp    cl,BYTE PTR [ebp+esi*8+0x2d27b4af]
  424d39:	adc    bh,BYTE PTR [edx-0x10ded923]
  424d3f:	sbb    BYTE PTR [edi],0x53
  424d42:	enter  0xc5c7,0xf6
  424d46:	push   ecx
  424d47:	out    0x4f,eax
  424d49:	mov    bh,0xe
  424d4b:	jns    0x424d06
  424d4d:	fcomp  DWORD PTR [edi+0x63]
  424d50:	repz and al,0x2c
  424d53:	push   0x6252d445
  424d58:	scas   al,BYTE PTR es:[edi]
  424d59:	pop    ds
  424d5a:	adc    bh,BYTE PTR [esi]
  424d5c:	mov    dl,0x78
  424d5e:	sbb    DWORD PTR [eax],ecx
  424d60:	inc    edx
  424d61:	sbb    BYTE PTR [ebp-0xa3d16b4],dh
  424d67:	mov    edx,0xd9714fea
  424d6c:	in     al,0xe5
  424d6e:	push   edi
  424d6f:	xchg   esp,eax
  424d70:	call   0xec5:0xab47df6f
  424d77:	mov    ds:0xbc5a128d,al
  424d7c:	mov    ecx,DWORD PTR [ebp+0x39]
  424d7f:	or     eax,0xf57e6d35
  424d84:	dec    ecx
  424d85:	outs   dx,BYTE PTR ds:[esi]
  424d86:	sub    BYTE PTR ds:0x78efbed9,dh
  424d8c:	xchg   ebx,eax
  424d8d:	adc    ebx,DWORD PTR [ecx+0x4c]
  424d90:	and    eax,0xb488bf15
  424d95:	cs jne 0x424d9b
  424d98:	xchg   edx,eax
  424d99:	jecxz  0x424e0a
  424d9b:	inc    esi
  424d9c:	sbb    eax,0x99bff8f3
  424da1:	loop   0x424da3
  424da3:	(bad)  
  424da4:	mov    ebp,0xc0bd3ff3
  424da9:	pop    ds
  424daa:	jne    0x424d6f
  424dac:	cmp    BYTE PTR [ebx-0x4065cd9e],0x24
  424db3:	int3   
  424db4:	pop    ebp
  424db5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424db6:	fdiv   DWORD PTR [edi+0x531b8330]
  424dbc:	mov    ecx,0x3b4402ea
  424dc1:	arpl   si,di
  424dc3:	aaa    
  424dc4:	in     eax,dx
  424dc5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424dc6:	leave  
  424dc7:	repz sbb bh,BYTE PTR [ebx+ebp*8]
  424dcb:	ss loopne 0x424e24
  424dce:	adc    eax,0x7102f6f0
  424dd3:	nop
  424dd4:	push   edx
  424dd5:	sahf   
  424dd6:	mov    dl,0x49
  424dd8:	(bad)  
  424dd9:	jmp    0x8ccc3b32
  424dde:	(bad)  
  424ddf:	cmc    
  424de0:	cld    
  424de1:	mov    ecx,fs
  424de3:	lock addr16 aas 
  424de6:	retf   
  424de7:	data16 mov dh,BYTE PTR gs:[edi]
  424deb:	imul   esi,edx,0xdae07dbc
  424df1:	pusha  
  424df2:	and    eax,0x67163d9f
  424df7:	cmp    DWORD PTR [edx],edx
  424df9:	out    0x37,al
  424dfb:	retf   0x444f
  424dfe:	dec    esi
  424dff:	mov    ds:0xacb85f02,al
  424e04:	mov    cs,edx
  424e06:	adc    ebx,0x55135027
  424e0c:	ror    DWORD PTR [ecx+eiz*2-0x56e17ee8],cl
  424e13:	(bad)  
  424e14:	fld    st(6)
  424e16:	add    eax,0xf32b9e37
  424e1b:	std    
  424e1c:	into   
  424e1d:	mov    fs,WORD PTR [edx+0x4ea10551]
  424e23:	mov    cl,0x84
  424e25:	pusha  
  424e26:	push   ss
  424e27:	xchg   esp,eax
  424e28:	std    
  424e29:	mov    WORD PTR [eax],ds
  424e2b:	pop    ss
  424e2c:	sub    al,BYTE PTR [ebx]
  424e2e:	stos   BYTE PTR es:[edi],al
  424e2f:	call   0xca99f5d5
  424e34:	mov    cl,0x48
  424e36:	bound  ecx,QWORD PTR [edx+0x1a]
  424e39:	cmp    al,0xcf
  424e3b:	xchg   esi,eax
  424e3c:	add    BYTE PTR [eax],al
  424e3e:	add    BYTE PTR [eax],al
  424e40:	add    BYTE PTR [eax],al
  424e42:	add    BYTE PTR [edi+ecx*2+0x7],0xcf
  424e47:	bswap  eax
  424e49:	(bad)  
  424e4a:	test   al,0x2c
  424e4c:	dec    eax
  424e4d:	or     ebp,DWORD PTR [ebp+eax*2-0x393460a6]
  424e54:	add    DWORD PTR [eax],eax
  424e56:	repnz add al,0x0
  424e59:	add    BYTE PTR [esi],dl
  424e5b:	sahf   
  424e5c:	sub    ecx,DWORD PTR [esi+0x3cb22e5a]
  424e62:	xchg   ebp,eax
  424e63:	xchg   ebp,eax
  424e64:	inc    esp
  424e65:	dec    esp
  424e66:	inc    edx
  424e67:	sahf   
  424e68:	neg    BYTE PTR [edx+0x2204ac39]
  424e6e:	inc    edi
  424e6f:	jno    0x424ead
  424e71:	aas    
  424e72:	or     al,BYTE PTR [edi+0x61]
  424e75:	scas   eax,DWORD PTR es:[edi]
  424e76:	(bad)  
  424e77:	pop    esp
  424e78:	push   esi
  424e79:	dec    esp
  424e7a:	jp     0x424e5e
  424e7c:	jno    0x424e93
  424e7e:	xchg   DWORD PTR [edx],eax
  424e80:	aad    0x1b
  424e82:	push   0xe300d9cb
  424e87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424e88:	mov    WORD PTR [esi+esi*1-0x4aa61ab6],?
  424e8f:	imul   bh
  424e91:	mov    bh,BYTE PTR [esi+0x6b7c5a0f]
  424e97:	xchg   edi,eax
  424e98:	jge    0x424eff
  424e9a:	add    BYTE PTR [esi-0x3d94935e],0x75
  424ea1:	ins    DWORD PTR es:[edi],dx
  424ea2:	cwde   
  424ea3:	retf   0xdabd
  424ea6:	push   esi
  424ea7:	daa    
  424ea8:	add    eax,0xd36d88ab
  424ead:	dec    edi
  424eae:	lods   eax,DWORD PTR ds:[esi]
  424eaf:	push   ecx
  424eb0:	pusha  
  424eb1:	push   esi
  424eb2:	stos   DWORD PTR es:[edi],eax
  424eb3:	ja     0x424e70
  424eb5:	push   0x40a4f022
  424eba:	(bad)  
  424ebc:	fmul   st(5),st
  424ebe:	jnp    0x424f05
  424ec0:	std    
  424ec1:	xchg   esi,eax
  424ec2:	ror    ch,0xe7
  424ec5:	ror    DWORD PTR [edx+eiz*1+0x2c2f7d80],0x81
  424ecd:	inc    edx
  424ece:	lahf   
  424ecf:	jecxz  0x424eb2
  424ed1:	fld    TBYTE PTR [eax+0x6fcf84d8]
  424ed7:	xchg   edi,eax
  424ed8:	in     eax,dx
  424ed9:	aad    0x65
  424edb:	push   edi
  424edc:	cmc    
  424edd:	sti    
  424ede:	mov    edi,0xf6d13ad1
  424ee3:	dec    ebx
  424ee4:	es push cs
  424ee6:	dec    eax
  424ee7:	jle    0x424ec4
  424ee9:	push   ebx
  424eea:	setb   dh
  424eed:	out    0x46,eax
  424eef:	ret    0xf881
  424ef2:	fsub   st(7),st
  424ef4:	jns    0x424ef8
  424ef6:	xor    bh,BYTE PTR [edi-0x77]
  424ef9:	imul   DWORD PTR [edi-0x3a]
  424efc:	loop   0x424f16
  424efe:	jl     0x424f35
  424f00:	pushf  
  424f01:	cmp    BYTE PTR [edi+eax*8],al
  424f04:	es (bad) 
  424f06:	xchg   BYTE PTR [ecx+ebx*4-0x38],dh
  424f0a:	ja     0x424eed
  424f0c:	mov    esi,0x6e4f053a
  424f11:	inc    esi
  424f12:	jmp    0x424ea4
  424f14:	xor    DWORD PTR [esi],ecx
  424f16:	test   edi,0xbfb03753
  424f1c:	jg     0x424f5a
  424f1e:	add    BYTE PTR [edi+0x62f2ebff],ch
  424f24:	adc    esp,DWORD PTR [edx+ecx*8]
  424f27:	sbb    dh,BYTE PTR [edx+eiz*2+0x78b85901]
  424f2e:	adc    BYTE PTR [ebx-0x5],al
  424f31:	inc    ebp
  424f32:	mov    bh,BYTE PTR [eax+0x23]
  424f35:	fistp  DWORD PTR [ecx]
  424f37:	in     eax,0xfd
  424f39:	mov    esi,0x75978440
  424f3e:	into   
  424f3f:	hlt    
  424f40:	retf   
  424f41:	sbb    bl,BYTE PTR [eax-0x269b7374]
  424f47:	mov    esi,0x69776aa7
  424f4c:	ins    DWORD PTR es:[edi],dx
  424f4d:	dec    ecx
  424f4e:	sti    
  424f4f:	ror    bl,cl
  424f51:	sbb    al,0x15
  424f53:	push   cs
  424f54:	push   edi
  424f55:	adc    al,0x1a
  424f57:	pop    ebp
  424f58:	cmp    al,0xf9
  424f5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424f5b:	dec    edx
  424f5c:	out    0xf7,al
  424f5e:	aam    0x99
  424f60:	es mov bl,0xb2
  424f63:	pop    eax
  424f64:	dec    di
  424f66:	mov    ?,WORD PTR [ecx+0xfb73712]
  424f6c:	mov    ebp,0xdfe69262
  424f71:	inc    eax
  424f72:	ret    
  424f73:	mov    edi,0xdac5a11b
  424f78:	mov    WORD PTR [ecx-0x60a3e7a1],?
  424f7e:	fldcw  WORD PTR [edx+edi*1]
  424f81:	fldenv [esi-0x10]
  424f84:	cmp    DWORD PTR [edi-0x68],esp
  424f87:	sub    dh,al
  424f89:	outs   dx,BYTE PTR ds:[si]
  424f8b:	aaa    
  424f8c:	pop    ebx
  424f8d:	mov    cs,ecx
  424f8f:	pop    ecx
  424f90:	(bad)  
  424f91:	jmp    0x79fa:0xca15f67b
  424f98:	sub    al,0x3f
  424f9a:	pop    es
  424f9b:	mov    ebx,DWORD PTR cs:[eax-0x24a1b090]
  424fa2:	test   cl,0xc4
  424fa5:	call   0xb80242d7
  424faa:	mov    al,ds:0xef00e93e
  424faf:	xchg   esi,eax
  424fb0:	push   esp
  424fb2:	jecxz  0x424f69
  424fb4:	cmc    
  424fb5:	xchg   ebx,eax
  424fb6:	inc    eax
  424fb7:	dec    edi
  424fb8:	sti    
  424fb9:	sub    eax,0xce8bde0e
  424fbe:	in     eax,0xaf
  424fc0:	daa    
  424fc1:	inc    edx
  424fc2:	pop    ecx
  424fc3:	push   0xb9b47514
  424fc8:	sbb    dh,dl
  424fca:	call   0xfa9ddd51
  424fcf:	or     eax,DWORD PTR [ebx-0x3d6c810d]
  424fd5:	ds int3 
  424fd7:	rol    cl,cl
  424fd9:	fbld   TBYTE PTR gs:[ecx+0x6d]
  424fdd:	(bad)  
  424fde:	adc    DWORD PTR [ebp+esi*2+0x337fd2e6],ecx
  424fe5:	shl    DWORD PTR [ebx-0x5e66a2ef],1
  424feb:	jecxz  0x425008
  424fed:	jne    0x424f80
  424fef:	mov    ch,0x8b
  424ff1:	push   ebp
  424ff2:	mov    ch,dh
  424ff4:	clc    
  424ff5:	outs   dx,DWORD PTR ds:[esi]
  424ff6:	push   edx
  424ff7:	pushf  
  424ff8:	enter  0x2058,0x27
  424ffc:	dec    ebx
  424ffd:	add    ebp,ecx
  424fff:	mov    al,ds:0x91eb24e4
  425004:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425005:	lahf   
  425006:	pop    ebx
  425007:	enter  0x9308,0x7b
  42500b:	mov    bl,0x68
  42500d:	(bad)  
  42500e:	dec    esi
  42500f:	jbe    0x424fc0
  425011:	xor    edx,eax
  425013:	adc    al,0xf2
  425015:	jp     0x424fca
  425017:	call   0x21959bc8
  42501c:	lds    esi,FWORD PTR [edi]
  42501e:	ret    0x8e97
  425021:	mov    dl,0x71
  425023:	cmp    DWORD PTR [eax+0x2e],edi
  425026:	popf   
  425027:	dec    eax
  425028:	lea    esi,ds:0xc5ba5433
  42502e:	sbb    ecx,DWORD PTR [ecx+0x71]
  425031:	pop    esi
  425032:	retf   
  425033:	sbb    dh,bh
  425035:	lahf   
  425036:	push   0x69caae45
  42503b:	mov    ds:0x97b95081,eax
  425040:	or     bl,BYTE PTR [esi-0x80]
  425043:	dec    ebx
  425044:	pusha  
  425045:	cli    
  425046:	lock mov bh,0x40
  425049:	fist   DWORD PTR [eax]
  42504b:	sub    eax,0xef9f3068
  425050:	sbb    eax,edx
  425052:	(bad)  
  425053:	int    0xe1
  425055:	inc    esp
  425056:	call   0x337c3091
  42505b:	add    dh,BYTE PTR [ebx]
  42505d:	jno    0x425071
  42505f:	imul   edx,DWORD PTR [ecx+0x50],0x3e
  425063:	push   0xc36aab45
  425068:	xor    DWORD PTR [esp+ebp*1-0x36],0x55da3c5f
  425070:	push   0x28a7ddc2
  425075:	pop    ss
  425076:	aas    
  425077:	stos   BYTE PTR es:[edi],al
  425078:	pop    ds
  425079:	dec    esi
  42507a:	sub    bl,BYTE PTR [edi+0x68]
  42507d:	dec    esp
  42507e:	ss and cl,bh
  425081:	or     al,BYTE PTR [edx+0x5ab00827]
  425087:	jecxz  0x42500f
  425089:	addr16 dec eax
  42508b:	jle    0x425028
  42508d:	push   0x5e
  42508f:	inc    esi
  425090:	clc    
  425091:	cmp    eax,DWORD PTR [ecx+esi*4]
  425094:	lea    ebx,[ebp+0xe]
  425097:	rcr    BYTE PTR [edi-0x67],cl
  42509a:	jmp    0x425061
  42509c:	cli    
  42509d:	sub    esp,DWORD PTR [ebp-0x1f]
  4250a0:	hlt    
  4250a1:	mov    ds:0xdeacc7e7,eax
  4250a6:	test   eax,0x63342036
  4250ab:	cs mov edx,0x8c3bf105
  4250b1:	je     0x425043
  4250b3:	jb     0x4250a3
  4250b5:	mov    ch,0x92
  4250b7:	clc    
  4250b8:	push   edx
  4250b9:	call   0x8acd:0xefee4462
  4250c0:	pop    ss
  4250c1:	inc    ebx
  4250c2:	ins    BYTE PTR es:[edi],dx
  4250c3:	sbb    BYTE PTR [ebx+0x10],dl
  4250c6:	out    dx,al
  4250c7:	jle    0x425068
  4250c9:	inc    ebp
  4250ca:	(bad)  
  4250cd:	in     eax,dx
  4250ce:	shr    DWORD PTR [esi+edx*2],1
  4250d1:	call   0x304:0xa1c3e7da
  4250d8:	cmp    ebx,DWORD PTR [ebx-0x7e82c797]
  4250de:	fs retf 
  4250e0:	jnp    0x4250eb
  4250e2:	sbb    DWORD PTR [ebx*8-0x7a2552],ecx
  4250e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4250ea:	sbb    edx,DWORD PTR [ecx-0x80]
  4250ed:	push   ecx
  4250ee:	mov    dh,0xc0
  4250f0:	pop    ebx
  4250f1:	pop    ecx
  4250f2:	push   esp
  4250f3:	add    al,0xf8
  4250f5:	aas    
  4250f6:	dec    edx
  4250f7:	inc    esi
  4250f8:	in     al,dx
  4250f9:	scas   eax,DWORD PTR es:[edi]
  4250fa:	jl     0x425176
  4250fc:	fwait
  4250fd:	add    esi,DWORD PTR [ecx-0x4156bd0c]
  425103:	scas   eax,DWORD PTR es:[edi]
  425104:	cmc    
  425105:	pop    eax
  425107:	(bad)
  42510a:	jge    0x42509a
  42510c:	mov    ds,WORD PTR [esi-0x2f464803]
  425112:	push   ebx
  425113:	rol    ebp,cl
  425115:	inc    eax
  425116:	sbb    eax,0x5a1f8bf8
  42511b:	rcl    BYTE PTR [esi],1
  42511d:	xchg   ecx,eax
  42511e:	inc    ebx
  42511f:	adc    eax,0x60d14a32
  425124:	pop    ds
  425125:	dec    eax
  425126:	xor    DWORD PTR [ebx],edx
  425128:	inc    ecx
  425129:	and    eax,0x66a6bd1e
  42512e:	sti    
  42512f:	cmc    
  425130:	inc    esp
  425131:	xchg   edx,eax
  425132:	inc    edi
  425133:	or     BYTE PTR [edx+0x1c8423a],dh
  425139:	(bad)  
  42513a:	jge    0x4250c9
  42513c:	push   0xffffffda
  42513e:	mov    edi,DWORD PTR [edx-0xa]
  425141:	in     eax,0x48
  425143:	inc    eax
  425144:	jne    0x4250e1
  425146:	mov    dl,0x64
  425148:	pop    es
  425149:	sbb    ch,BYTE PTR [edx+0x52]
  42514c:	loopne 0x425183
  42514e:	and    DWORD PTR [ecx],ebx
  425150:	xor    DWORD PTR [ecx],ecx
  425152:	sbb    al,0x6d
  425154:	sub    BYTE PTR [ecx],ch
  425156:	neg    BYTE PTR [eax]
  425158:	loopne 0x425172
  42515a:	dec    ebp
  42515b:	in     al,0xde
  42515d:	dec    ecx
  42515e:	mov    DWORD PTR ds:0xae15d9b3,edi
  425164:	data16 ins BYTE PTR es:[edi],dx
  425166:	dec    edx
  425167:	icebp  
  425168:	repz shr edx,1
  42516b:	aas    
  42516c:	int    0xa0
  42516e:	test   eax,0xe4358da
  425173:	wbinvd 
  425175:	mov    esi,0x5e3cb541
  42517a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42517b:	loopne 0x425121
  42517d:	les    ebx,FWORD PTR [esi]
  42517f:	pop    esi
  425180:	clc    
  425181:	xchg   ebx,eax
  425182:	jb     0x425126
  425184:	mov    DWORD PTR [eax+0x78cd290f],ebx
  42518a:	sbb    edi,DWORD PTR [eax]
  42518c:	mov    ch,0x31
  42518e:	pop    edx
  42518f:	xchg   ecx,eax
  425190:	cmp    bl,BYTE PTR [ebp+0xd]
  425193:	push   edx
  425194:	cmp    esp,DWORD PTR [eax+0x7585932a]
  42519a:	mov    al,ds:0x95fec7e7
  4251a0:	shr    DWORD PTR [ebx],cl
  4251a2:	das    
  4251a3:	dec    edi
  4251a4:	jbe    0x4251a3
  4251a6:	(bad)  
  4251a8:	and    eax,0x6e700fae
  4251ad:	dec    eax
  4251ae:	sub    eax,ebp
  4251b0:	inc    ebp
  4251b1:	mov    dh,0x8f
  4251b3:	out    dx,al
  4251b4:	pop    edi
  4251b5:	mov    al,ds:0x7e509669
  4251ba:	mov    BYTE PTR [ecx-0x70f866dc],cl
  4251c0:	and    al,0xef
  4251c2:	jb     0x4251f5
  4251c4:	retf   0x8533
  4251c7:	jbe    0x4251b3
  4251c9:	ss mov ebp,0x7509e317
  4251cf:	daa    
  4251d0:	pushf  
  4251d1:	call   0xf454a991
  4251d6:	loope  0x4251d5
  4251d8:	pop    ss
  4251d9:	hlt    
  4251da:	push   edi
  4251db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4251dc:	scas   al,BYTE PTR es:[edi]
  4251dd:	repnz and al,BYTE PTR ds:0x7956c288
  4251e4:	or     ch,BYTE PTR [edi-0x2]
  4251e7:	scas   al,BYTE PTR es:[edi]
  4251e8:	xor    DWORD PTR [esi+ebx*1],ebp
  4251eb:	fwait
  4251ec:	mov    edi,DWORD PTR [edx+eax*8+0x3b730d54]
  4251f3:	jnp    0x42524d
  4251f5:	int3   
  4251f6:	cs jbe 0x4251dc
  4251f9:	sar    ah,cl
  4251fb:	xor    DWORD PTR [ebx],eax
  4251fd:	into   
  4251fe:	clc    
  4251ff:	popa   
  425200:	into   
  425201:	das    
  425202:	jg     0x425217
  425204:	pop    esi
  425205:	mov    dh,0x13
  425207:	je     0x42519b
  425209:	div    dh
  42520b:	and    DWORD PTR [esi-0x4],0xffffffa5
  42520f:	xor    al,BYTE PTR [edx-0x1ee9e48a]
  425215:	out    0xd9,eax
  425217:	fwait
  425218:	mov    eax,0x502e55bd
  42521d:	adc    BYTE PTR [esi],al
  42521f:	mov    ah,0xb8
  425221:	push   eax
  425222:	lock sub al,0x87
  425225:	imul   ecx,DWORD PTR [edi],0xffffff95
  425228:	mov    ah,0x60
  42522a:	(bad)  
  42522b:	je     0x4251c5
  42522d:	xchg   ecx,eax
  42522e:	fsub   DWORD PTR [ebx+0x2b]
  425231:	push   ds
  425232:	dec    ebp
  425233:	test   edi,esp
  425235:	popa   
  425236:	loop   0x4251ee
  425238:	sahf   
  425239:	scas   eax,DWORD PTR es:[edi]
  42523a:	jb     0x4251f1
  42523c:	cld    
  42523d:	jmp    0x392c:0x1f157a3f
  425244:	imul   ebx,DWORD PTR [ebp-0x4a],0x14
  425248:	nop
  425249:	push   esp
  42524a:	push   esp
  42524b:	pop    esi
  42524c:	mov    esi,ebp
  42524e:	push   ss
  42524f:	(bad)  
  425251:	mov    edx,0x7c4008c1
  425256:	lods   al,BYTE PTR ds:[esi]
  425257:	cwde   
  425258:	or     DWORD PTR [edi+0x7],ebx
  42525b:	jle    0x425225
  42525d:	sbb    eax,0x77e7f21e
  425262:	sbb    dh,0xbb
  425265:	pop    ebx
  425266:	push   esi
  425267:	push   dx
  425269:	push   edi
  42526a:	les    ebp,FWORD PTR [ecx+edx*4]
  42526d:	xchg   esi,eax
  42526e:	scas   al,BYTE PTR es:[edi]
  42526f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425270:	sub    DWORD PTR [ecx],esi
  425272:	js     0x42525b
  425274:	sub    cl,BYTE PTR [ebp+0x1f4a1cf0]
  42527a:	xor    dh,BYTE PTR [eax+0x64]
  42527d:	dec    ecx
  42527e:	mov    ebx,0x34bb7f92
  425283:	in     al,dx
  425284:	stos   BYTE PTR es:[edi],al
  425285:	add    DWORD PTR [ebx+0x29],ecx
  425288:	js     0x4252f6
  42528a:	(bad)  
  42528b:	mov    ebp,0xfcd94ff3
  425290:	jo     0x425243
  425292:	and    ecx,DWORD PTR [edi+0x4b]
  425295:	iret   
  425296:	or     esp,DWORD PTR [ecx]
  425298:	push   ecx
  425299:	mov    al,0x70
  42529b:	jmp    0x201:0xe8cb9dec
  4252a2:	add    DWORD PTR [eax+0x68bbbbf4],ebp
  4252a8:	out    dx,al
  4252a9:	pop    eax
  4252aa:	(bad)  
  4252ac:	sub    ch,bh
  4252ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4252af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4252b0:	pop    es
  4252b1:	scas   eax,DWORD PTR es:[edi]
  4252b2:	inc    ebx
  4252b3:	retf   
  4252b4:	outs   dx,BYTE PTR ds:[esi]
  4252b5:	mov    esp,0x10afcf37
  4252ba:	lods   al,BYTE PTR ds:[esi]
  4252bb:	xchg   edi,eax
  4252bc:	sahf   
  4252bd:	xor    BYTE PTR [ebx-0x51],0x90
  4252c1:	sbb    edx,edx
  4252c3:	scas   al,BYTE PTR es:[edi]
  4252c4:	popf   
  4252c5:	out    dx,al
  4252c6:	loopne 0x42526d
  4252c8:	mov    ah,0xc1
  4252ca:	xor    DWORD PTR [ecx+edi*2],0x3aa5af84
  4252d1:	addr16 dec ecx
  4252d3:	iret   
  4252d4:	and    BYTE PTR ds:0x23cce34d,dl
  4252da:	jmp    0x425308
  4252dc:	mov    DWORD PTR [edi+0x6be04a6],eax
  4252e2:	pop    esp
  4252e4:	ret    
  4252e5:	jnp    0x42528d
  4252e7:	push   eax
  4252e8:	fistp  DWORD PTR [eax+0x46]
  4252eb:	xchg   ecx,eax
  4252ec:	mov    ebp,0x5c4c9c6b
  4252f1:	(bad)  
  4252f2:	neg    BYTE PTR [esi+0x3d8ff7c]
  4252f8:	push   ds
  4252f9:	jbe    0x42537a
  4252fb:	bnd jne 0x4252bf
  4252fe:	push   ecx
  4252ff:	push   0x5547697e
  425304:	(bad)  
  425305:	jp     0x42536d
  425307:	shr    DWORD PTR [edi+0x119e32b7],cl
  42530d:	in     al,dx
  42530e:	jl     0x425373
  425310:	mov    ebp,DWORD PTR [ebx+edx*1]
  425313:	pop    es
  425314:	(bad)  
  425315:	mov    edx,0x8d559f8a
  42531a:	xor    eax,0xc0c56a14
  42531f:	sub    al,dh
  425321:	les    edx,FWORD PTR [edi+0x6df91e14]
  425327:	lods   eax,DWORD PTR ds:[esi]
  425328:	(bad)  
  425329:	push   ecx
  42532a:	cdq    
  42532b:	je     0x425385
  42532d:	bound  eax,QWORD PTR [ebx+0x388004a0]
  425333:	(bad)  [edx+eiz*2]
  425336:	and    DWORD PTR [eax],esi
  425338:	sbb    al,0xca
  42533a:	push   edx
  42533b:	daa    
  42533c:	ror    BYTE PTR [ecx+ecx*4-0x6b],cl
  425340:	xchg   esi,eax
  425341:	and    al,0x50
  425343:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425344:	pop    esp
  425345:	cld    
  425346:	hlt    
  425347:	mov    dl,0xd6
  425349:	sti    
  42534a:	fnstenv [edx]
  42534c:	add    BYTE PTR [eax],al
  42534e:	add    BYTE PTR [eax],al
  425350:	add    BYTE PTR [eax],al
  425352:	fwait
  425353:	push   ebp
  425354:	pusha  
  425355:	outs   dx,DWORD PTR ds:[esi]
  425356:	out    dx,al
  425357:	jg     0x4252f8
  425359:	cmc    
  42535a:	or     DWORD PTR fs:[edi+0x22],ebx
  42535e:	cmp    eax,0xbd2206b4
  425363:	retf   
  425364:	add    DWORD PTR [eax],eax
  425366:	repnz add al,0x0
  425369:	add    BYTE PTR [ebp+0x60],cl
  42536c:	sub    ebp,0xa775bebe
  425372:	dec    ebp
  425373:	inc    DWORD PTR [edi+0x3e4449c6]
  425379:	fadd   DWORD PTR [esi+0x702d2863]
  42537f:	xor    eax,0xdb06da7c
  425384:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425385:	sbb    BYTE PTR [esi+0x4e9e3de4],0x6b
  42538c:	xor    BYTE PTR [esp+ecx*4],ah
  42538f:	push   eax
  425390:	popf   
  425391:	imul   edx,DWORD PTR [edi],0x1e
  425394:	adc    bl,BYTE PTR [edi+0x5d]
  425397:	daa    
  425398:	xchg   ecx,eax
  425399:	jecxz  0x4253f3
  42539b:	sbb    BYTE PTR [ecx],ah
  42539d:	and    DWORD PTR [ecx+0x3c13468],esp
  4253a3:	xchg   ebx,eax
  4253a4:	ss in  eax,0xe0
  4253a7:	ja     0x425365
  4253a9:	es jno 0x425427
  4253ac:	mov    al,0x10
  4253ae:	push   es
  4253af:	xchg   DWORD PTR [ebx],edi
  4253b1:	fcom   QWORD PTR [ebp+0x1c]
  4253b4:	dec    esp
  4253b5:	xchg   edx,eax
  4253b6:	shr    BYTE PTR [eax+0x37352578],1
  4253bc:	scas   eax,DWORD PTR es:[edi]
  4253bd:	sbb    ebx,DWORD PTR [ebx+0x5f]
  4253c0:	clc    
  4253c1:	adc    eax,0xb55beaaf
  4253c6:	mov    ecx,0xf95aeaee
  4253cb:	push   edx
  4253cc:	(bad)  
  4253ce:	into   
  4253cf:	mov    eax,DWORD PTR [esi]
  4253d1:	pop    es
  4253d2:	int    0x80
  4253d4:	jae    0x42542c
  4253d6:	xchg   BYTE PTR [ecx],al
  4253d8:	adc    DWORD PTR [ebx],0xad0a951a
  4253de:	je     0x42545a
  4253e0:	jb     0x4253c1
  4253e2:	in     al,0x5d
  4253e4:	arpl   WORD PTR [ecx],sp
  4253e6:	add    DWORD PTR ds:0x45ffc527,ebp
  4253ec:	mov    ecx,0xacb7149c
  4253f1:	(bad)  
  4253f2:	out    0xec,eax
  4253f4:	fsubr  QWORD PTR [eax+0x16]
  4253f7:	xchg   ebx,eax
  4253f8:	adc    esi,ecx
  4253fa:	push   ebp
  4253fb:	daa    
  4253fc:	cmp    bh,al
  4253fe:	jnp    0x4253d5
  425400:	push   ecx
  425401:	or     al,0xa7
  425403:	in     eax,0xd5
  425405:	addr16 mov ch,dl
  425408:	repnz push esi
  42540a:	popa   
  42540b:	lahf   
  42540c:	cwde   
  42540d:	std    
  42540e:	(bad)  
  42540f:	sub    al,BYTE PTR [esi+0x2b]
  425412:	sub    eax,0x1ddc8b6d
  425417:	ds jl  0x4253fd
  42541a:	stos   DWORD PTR es:[edi],eax
  42541b:	pop    ss
  42541c:	cld    
  42541d:	cld    
  42541e:	push   DWORD PTR [edx]
  425420:	ins    DWORD PTR es:[edi],dx
  425421:	arpl   WORD PTR [ebx],dx
  425423:	xchg   edx,eax
  425424:	inc    esp
  425425:	mov    edx,0xe452dd16
  42542a:	mov    WORD PTR [ebx],ds
  42542c:	(bad)  
  42542d:	cli    
  42542e:	scas   eax,DWORD PTR es:[edi]
  42542f:	inc    edi
  425430:	jle    0x425465
  425432:	sti    
  425433:	pop    esp
  425434:	add    BYTE PTR [ebx+0x7713766f],ah
  42543a:	pushf  
  42543b:	lock cmp BYTE PTR [ecx+0x2e39435],ch
  425442:	popa   
  425443:	xor    al,0x99
  425445:	or     al,0xb4
  425447:	out    dx,eax
  425448:	lock test eax,0x8b3426e
  42544e:	xlat   BYTE PTR ds:[ebx]
  42544f:	mov    al,0x6b
  425451:	gs scas al,BYTE PTR es:[edi]
  425453:	in     al,0xec
  425455:	pop    edx
  425456:	inc    esi
  425457:	cdq    
  425458:	inc    DWORD PTR [ecx-0x39]
  42545b:	and    eax,DWORD PTR [edx-0x7b2e239f]
  425461:	addr16 lahf 
  425463:	xchg   edi,eax
  425464:	jbe    0x4254b3
  425466:	jno    0x4254c8
  425468:	jg     0x4254df
  42546a:	jae    0x4254ea
  42546c:	dec    BYTE PTR [esi]
  42546e:	leave  
  42546f:	jns    0x425403
  425471:	js     0x4254db
  425473:	push   eax
  425474:	out    0x21,al
  425476:	std    
  425477:	cmp    DWORD PTR [ebx+0x653681d1],ebx
  42547d:	ret    0x4e70
  425480:	lahf   
  425481:	push   ebx
  425482:	pop    ds
  425483:	mov    dh,0x9e
  425485:	mov    eax,0x9ccca042
  42548a:	add    WORD PTR [esi],cx
  42548d:	xor    al,0x12
  42548f:	(bad)  
  425490:	mov    cl,0xcb
  425492:	(bad)  
  425493:	cwde   
  425494:	jbe    0x425450
  425496:	pop    ecx
  425497:	cdq    
  425498:	int    0x9c
  42549a:	xor    ecx,DWORD PTR [edx+0x2d]
  42549d:	cmp    esi,esp
  42549f:	pop    edi
  4254a0:	sub    BYTE PTR [ebx+0x54],dh
  4254a3:	cmp    al,0x92
  4254a5:	add    al,0xb1
  4254a7:	mov    eax,0xe19af750
  4254ac:	daa    
  4254ad:	dec    esp
  4254ae:	xchg   esp,eax
  4254af:	xlat   BYTE PTR ds:[ebx]
  4254b0:	inc    esp
  4254b1:	push   0xebf11a76
  4254b6:	lods   eax,DWORD PTR ds:[esi]
  4254b7:	daa    
  4254b8:	and    al,0xc7
  4254ba:	jge    0x4254c7
  4254bc:	bound  edx,QWORD PTR ds:0x83d70dfd
  4254c2:	push   ds
  4254c3:	xchg   esi,eax
  4254c4:	mov    ebx,0x7d656b8e
  4254c9:	add    BYTE PTR [eax+0x37],0x3a
  4254cd:	mov    dh,0x7c
  4254cf:	aas    
  4254d0:	mov    ds:0x6b51f804,al
  4254d5:	mov    ebp,0x2ef0c92f
  4254da:	cli    
  4254db:	and    eax,0xf8fa88b2
  4254e0:	push   esp
  4254e1:	sbb    DWORD PTR [ecx-0x5f],esi
  4254e4:	shl    cl,0x6
  4254e7:	rol    BYTE PTR [ecx-0x2e],0xd9
  4254eb:	call   0xc33b:0xe3ec9d64
  4254f2:	pop    esp
  4254f3:	cmp    eax,0x64092063
  4254f8:	rcl    edx,0x9a
  4254fb:	push   ds
  4254fc:	cmp    DWORD PTR [ebx],edx
  4254fe:	sub    eax,0xb07d0466
  425503:	ins    DWORD PTR es:[edi],dx
  425504:	cmp    al,0xf3
  425506:	imul   ecx,DWORD PTR [edx],0xffffffbb
  425509:	mov    ecx,0x4670612
  42550e:	adc    al,0x1f
  425510:	mov    ds,ebp
  425512:	add    bh,BYTE PTR [edx+0x7d]
  425515:	cmp    al,0x25
  425517:	ds or  eax,0x794a41c3
  42551d:	daa    
  42551e:	int3   
  42551f:	inc    esp
  425520:	daa    
  425521:	pop    es
  425522:	ror    BYTE PTR [eax],cl
  425524:	and    al,0x5e
  425526:	jnp    0x4254f7
  425528:	lods   eax,DWORD PTR ds:[esi]
  425529:	in     eax,dx
  42552a:	lods   al,BYTE PTR ds:[esi]
  42552b:	test   al,0xda
  42552d:	sub    al,0xcf
  42552f:	cmp    eax,ebp
  425531:	mov    bh,0xc7
  425533:	popa   
  425534:	mov    bl,0xc7
  425536:	push   edx
  425537:	mov    al,ds:0x3bc2dbcb
  42553c:	pop    esp
  42553d:	fs mov dl,0xf2
  425540:	pop    ebx
  425541:	out    0x8e,eax
  425543:	retf   
  425544:	cmc    
  425545:	out    dx,eax
  425546:	xor    al,0xce
  425548:	sbb    DWORD PTR [esi+0x301b34ef],esp
  42554e:	pop    ds
  42554f:	and    eax,0xda61079d
  425554:	adc    eax,0xd32f11bc
  425559:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42555a:	mov    bh,0xc4
  42555c:	jp     0x4255b0
  42555e:	nop
  42555f:	mov    ds:0xafe5d0b,al
  425564:	xor    eax,0xb67808cc
  425569:	fcomp  st(5)
  42556b:	push   edx
  42556c:	mov    ebp,0x8e2ff629
  425571:	and    bh,ch
  425573:	(bad)  
  425574:	fadd   QWORD PTR [edi]
  425576:	inc    eax
  425577:	cwd    
  425579:	es inc edx
  42557b:	es pusha 
  42557d:	out    dx,al
  42557e:	pusha  
  42557f:	lea    ebp,[edx]
  425581:	xchg   DWORD PTR [edx-0x20],esi
  425584:	mov    cl,0x7a
  425586:	or     al,0xe4
  425588:	sbb    al,BYTE PTR [ebp+0x23f9d7c5]
  42558e:	pop    esp
  42558f:	sbb    al,BYTE PTR [ecx]
  425591:	leave  
  425592:	xor    esp,DWORD PTR [ebp+0x7e]
  425595:	std    
  425596:	mov    ds:0x71eaeeab,al
  42559b:	(bad)  
  42559c:	retf   0xc52a
  42559f:	inc    eax
  4255a0:	fs rcr bl,0xe8
  4255a4:	and    eax,0xe5336b81
  4255a9:	outs   dx,DWORD PTR ds:[esi]
  4255aa:	jbe    0x425600
  4255ac:	(bad)  
  4255ae:	push   esi
  4255af:	jae    0x425568
  4255b1:	mov    ah,0x12
  4255b3:	(bad)  
  4255b4:	mov    al,0x9c
  4255b6:	into   
  4255b7:	inc    esp
  4255b8:	xchg   ebp,eax
  4255b9:	sub    al,0xcc
  4255bb:	loope  0x425637
  4255bd:	fwait
  4255be:	out    dx,eax
  4255bf:	popa   
  4255c0:	sar    cl,cl
  4255c2:	adc    eax,0xef6535bf
  4255c7:	loope  0x425611
  4255c9:	add    al,0xa
  4255cb:	ds popa 
  4255cd:	mov    eax,ds:0x766fcdb1
  4255d2:	and    eax,0xb877e8e6
  4255d7:	mov    esi,0xbbc04590
  4255dc:	mov    edi,0x10d135d9
  4255e1:	or     eax,0x31dc5144
  4255e6:	mov    ecx,0xf6380656
  4255eb:	ds and al,0x17
  4255ee:	ds or  eax,0x460ad70
  4255f4:	mov    ebp,0x27901975
  4255f9:	sahf   
  4255fa:	js     0x4255b0
  4255fc:	icebp  
  4255fd:	adc    DWORD PTR [ebx+0x53],esp
  425600:	push   0x1f
  425602:	or     BYTE PTR [eax],0x6f
  425605:	sti    
  425606:	jg     0x4255bc
  425608:	not    DWORD PTR [edi]
  42560a:	inc    esp
  42560b:	fcmovnbe st,st(2)
  42560d:	xchg   ebx,eax
  42560e:	retf   0xeba0
  425611:	aas    
  425612:	aad    0xf8
  425614:	mov    ebx,0x739847cf
  425619:	jae    0x425622
  42561b:	dec    eax
  42561c:	sbb    ebx,DWORD PTR [eax]
  42561e:	cmc    
  42561f:	push   esp
  425620:	mov    ah,0xa5
  425622:	and    DWORD PTR [eax+edi*8],esp
  425625:	test   ch,bl
  425627:	test   BYTE PTR [ebp+0x2e7fe869],0xe
  42562e:	sti    
  42562f:	jo     0x4256a0
  425631:	push   ecx
  425632:	sbb    eax,0x2e71e2ff
  425637:	adc    al,0x1a
  425639:	add    ch,0x3
  42563c:	sar    BYTE PTR [ebp-0x46e8417c],0xb2
  425643:	shl    DWORD PTR [ecx-0x709dfdca],cl
  425649:	int    0x6d
  42564b:	dec    esi
  42564c:	xor    BYTE PTR [edi-0x370661d5],al
  425652:	std    
  425653:	pop    es
  425654:	push   es
  425655:	jle    0x4256ae
  425657:	pop    esp
  425658:	push   0xcffcb696
  42565d:	ret    0xd74f
  425660:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425661:	rcr    BYTE PTR [eax+0x3caa3a51],0xa2
  425668:	pusha  
  425669:	push   es
  42566a:	cli    
  42566b:	test   eax,0x6e46cee8
  425670:	mov    al,ds:0x2dfcba88
  425675:	jmp    edx
  425677:	adc    eax,0xe6afe285
  42567c:	pop    eax
  42567d:	or     ebp,esi
  42567f:	jl     0x4256b8
  425681:	push   esi
  425682:	sbb    DWORD PTR [ebx],edi
  425684:	mov    edi,ebp
  425686:	ret    0xea69
  425689:	scas   al,BYTE PTR es:[edi]
  42568a:	sbb    ch,bh
  42568c:	dec    edi
  42568d:	add    eax,0xd854271a
  425692:	mov    bl,0x78
  425694:	jno    0x425656
  425696:	push   cs
  425697:	not    ecx
  425699:	inc    esp
  42569a:	(bad)  
  42569b:	(bad)
  42569e:	in     al,dx
  42569f:	jecxz  0x42564a
  4256a1:	mov    eax,ds:0xed28ab13
  4256a6:	mov    esi,0x580ff47e
  4256ab:	jae    0x42563b
  4256ad:	nop
  4256ae:	fcmovbe st,st(5)
  4256b0:	pop    esi
  4256b1:	xor    al,0xa0
  4256b3:	rol    BYTE PTR [ebx],1
  4256b5:	cmp    DWORD PTR [eax*4+0x17f9ee95],0xfbf68a9b
  4256c0:	jb     0x425696
  4256c2:	xor    eax,0x7e72c5c2
  4256c7:	jnp    0x4256e3
  4256c9:	outs   dx,DWORD PTR ds:[esi]
  4256ca:	(bad)  
  4256cc:	(bad)  
  4256cd:	mov    edx,0x1c188c48
  4256d2:	aaa    
  4256d3:	sub    eax,0x1e1f6829
  4256d8:	sbb    al,0xb2
  4256da:	iret   
  4256db:	mov    bh,BYTE PTR ds:0x5a8410fa
  4256e1:	and    esi,DWORD PTR ds:0x104fdff0
  4256e7:	add    eax,0xff7e52aa
  4256ec:	push   0xfffffffe
  4256ee:	push   es
  4256ef:	inc    ebx
  4256f0:	inc    eax
  4256f1:	imul   BYTE PTR [edx-0x1649e170]
  4256f7:	push   DWORD PTR [ecx-0x39]
  4256fa:	jmp    0x3d1e:0x674a0b3d
  425701:	aaa    
  425702:	push   ecx
  425703:	mov    ebp,0xb4262325
  425708:	stc    
  425709:	mov    esi,DWORD PTR [eax-0x44432d9f]
  42570f:	sub    BYTE PTR [ecx-0x27564b04],0x85
  425716:	push   edi
  425717:	jae    0x42573a
  425719:	push   edi
  42571a:	inc    esp
  42571b:	inc    eax
  42571c:	sub    eax,0x8d1496fb
  425721:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425722:	dec    DWORD PTR [edi+esi*8+0x7f02fdcc]
  425729:	and    dh,BYTE PTR [ebp-0x28439a9f]
  42572f:	(bad)  
  425730:	xchg   edi,eax
  425731:	mov    cs,WORD PTR [eax-0x28747d99]
  425737:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425738:	out    0x32,eax
  42573a:	pop    ecx
  42573b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42573c:	bound  esp,QWORD PTR [eax]
  42573e:	inc    BYTE PTR [esi]
  425740:	aaa    
  425741:	lahf   
  425742:	xor    BYTE PTR [eax],0xce
  425745:	call   0xc38a:0x3d8f4eb3
  42574c:	iret   
  42574d:	loop   0x42573f
  42574f:	shl    DWORD PTR [eax+0x41e2b981],cl
  425755:	inc    edi
  425756:	adc    dl,dh
  425758:	jmp    0xeafb6612
  42575d:	jns    0x425713
  42575f:	lds    edx,FWORD PTR [esi+0x32d605d0]
  425765:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425766:	in     al,0xf1
  425768:	sbb    ebx,DWORD PTR [edx+0x4d722584]
  42576e:	not    BYTE PTR [ebx+0x60d35ce5]
  425774:	fst    DWORD PTR [esp+ebx*1]
  425777:	fisubr WORD PTR [ecx+0x34a8d16c]
  42577d:	outs   dx,DWORD PTR ds:[esi]
  42577e:	das    
  42577f:	or     eax,0xea917d7e
  425784:	mov    eax,0x4f8a6964
  425789:	aam    0xc1
  42578b:	bnd ret 
  42578d:	imul   ebp,esp,0xffffffb7
  425790:	pop    ebp
  425791:	cmp    edi,eax
  425793:	in     eax,0x1f
  425795:	retf   
  425796:	ss pop edx
  425798:	fmul   DWORD PTR [eax]
  42579a:	sbb    esi,ebp
  42579c:	or     DWORD PTR [esi],esi
  42579e:	ret    
  42579f:	hlt    
  4257a0:	bound  edi,QWORD PTR [ecx+0x60]
  4257a3:	fadd   QWORD PTR [edi]
  4257a5:	pusha  
  4257a6:	ret    
  4257a7:	sub    eax,DWORD PTR [ebx*4-0x5556342f]
  4257ae:	jbe    0x42581e
  4257b0:	iret   
  4257b1:	xchg   esi,eax
  4257b2:	lds    edi,FWORD PTR [ebp-0x54]
  4257b5:	dec    esi
  4257b6:	mov    edi,0x20c42d04
  4257bb:	ja     0x42583b
  4257bd:	mov    al,ds:0x1f577ebc
  4257c2:	xor    eax,0xb9a0d96e
  4257c7:	or     BYTE PTR [ebp-0x52f04ef],al
  4257cd:	pop    ebx
  4257ce:	mov    ebx,0x8d3ae1da
  4257d3:	outs   dx,DWORD PTR ds:[esi]
  4257d4:	scas   eax,DWORD PTR es:[edi]
  4257d5:	cmp    bl,BYTE PTR [eax+0x69bfbccc]
  4257db:	sub    eax,0x96b1b291
  4257e0:	jnp    0x4257e5
  4257e2:	inc    edi
  4257e3:	cmp    DWORD PTR gs:[eax],esi
  4257e6:	addr16 (bad) 
  4257e8:	jns    0x4257f7
  4257ea:	addr16 out 0x36,eax
  4257ed:	mov    ds:0x4784f829,al
  4257f2:	pop    ecx
  4257f3:	mov    esi,0xb55137a4
  4257f8:	dec    esi
  4257f9:	js     0x42585d
  4257fb:	jns    0x425873
  4257fd:	out    dx,al
  4257fe:	push   cs
  4257ff:	in     eax,0x54
  425801:	or     al,0x19
  425803:	add    edx,DWORD PTR [esp+edx*2+0x3c]
  425807:	(bad)  
  425808:	loop   0x42578f
  42580a:	and    ebx,eax
  42580c:	or     eax,edx
  42580e:	arpl   WORD PTR [edi+0x15],ax
  425811:	xor    DWORD PTR [ebp*8-0x8296718],edi
  425818:	pop    ds
  425819:	xor    BYTE PTR [ebx],cl
  42581b:	lea    edi,[ebx]
  42581d:	push   0x13
  42581f:	push   DWORD PTR ds:0x18090f81
  425825:	mov    ch,0x33
  425827:	push   edi
  425828:	daa    
  425829:	sub    al,0x65
  42582b:	adc    BYTE PTR ds:0xa52db36,0xcb
  425832:	or     BYTE PTR [esp+ecx*4],al
  425835:	pop    ss
  425836:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425837:	jecxz  0x42586d
  425839:	enter  0xd1c0,0xe5
  42583d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42583e:	pop    ebx
  42583f:	pop    eax
  425840:	into   
  425841:	stos   BYTE PTR es:[edi],al
  425842:	pop    edx
  425843:	in     eax,dx
  425844:	jne    0x425865
  425846:	push   ss
  425847:	dec    eax
  425848:	stos   BYTE PTR es:[edi],al
  425849:	std    
  42584a:	jmp    0x9b07:0x2b62f0ea
  425851:	pop    ecx
  425852:	data16 aad 0xbe
  425855:	jb     0x425891
  425857:	ja     0x4258ab
  425859:	(bad)  
  42585a:	call   0x0:0xca
  425861:	add    BYTE PTR ds:0xaf44af85,al
  425867:	outs   dx,BYTE PTR ds:[esi]
  425868:	out    dx,eax
  425869:	lds    ecx,FWORD PTR [ecx-0x19a2c908]
  42586f:	mov    ecx,0xd0af6261
  425874:	add    DWORD PTR [eax],eax
  425876:	repnz add al,0x0
  425879:	add    BYTE PTR [ecx-0x1ea14649],al
  42587f:	js     0x4258d6
  425881:	add    DWORD PTR [edi],ebp
  425883:	cli    
  425884:	and    eax,0xf6babd51
  425889:	call   0x7723:0xe6b041ae
  425890:	call   0x3788:0x2c4dbbfc
  425897:	cld    
  425898:	mov    fs,WORD PTR [ebp+0x2]
  42589b:	not    DWORD PTR [esi-0x45d499da]
  4258a1:	dec    esi
  4258a2:	cmc    
  4258a3:	nop
  4258a4:	xchg   DWORD PTR [edx+0x47155d2a],esi
  4258aa:	add    DWORD PTR [ecx],edi
  4258ac:	sti    
  4258ad:	retf   0xe8ca
  4258b0:	call   0x7dfe:0x25799e5d
  4258b7:	fldcw  WORD PTR [edi-0x4ee54cd4]
  4258bd:	rcl    BYTE PTR ds:0x220e7d97,1
  4258c3:	pop    edx
  4258c4:	pop    ss
  4258c5:	jmp    0x85b71c35
  4258ca:	push   esp
  4258cb:	jno    0x425925
  4258cd:	test   DWORD PTR [esi-0x3a],0x868286f
  4258d4:	jp     0x42590b
  4258d6:	and    al,0xbf
  4258d8:	mov    ds:0xf50ec7fe,eax
  4258dd:	jae    0x4258b5
  4258df:	dec    eax
  4258e0:	fcom   QWORD PTR [eax+0x25]
  4258e3:	xor    edx,edx
  4258e5:	or     BYTE PTR [ebx],ch
  4258e7:	out    0x14,al
  4258e9:	stos   DWORD PTR es:[edi],eax
  4258ea:	mov    ebp,0x558e1cd6
  4258ef:	add    eax,0x5dd4d1f9
  4258f4:	cmp    ecx,DWORD PTR [edi-0x12]
  4258f7:	xor    al,0x26
  4258f9:	pop    ds
  4258fa:	hlt    
  4258fb:	add    ebx,DWORD PTR [edi]
  4258fd:	repnz test BYTE PTR [esi],ah
  425900:	mov    ds:0x25570c93,eax
  425905:	jmp    0x940fc6c3
  42590a:	pop    edx
  42590b:	mov    ds:0x7cfaaf1b,al
  425910:	test   BYTE PTR [ecx+0x483884de],ch
  425916:	loope  0x42589d
  425918:	push   eax
  425919:	fnstsw WORD PTR [esi]
  42591b:	sub    edi,ebp
  42591d:	out    dx,al
  42591e:	mov    ecx,0x22c818b9
  425923:	and    bh,BYTE PTR [esp+edi*2]
  425926:	xor    DWORD PTR [edx-0x64c9f209],0x69f3c389
  425930:	adc    eax,0x92a8ff5c
  425935:	test   ebx,esp
  425937:	inc    ebp
  425938:	shl    dl,0xcd
  42593b:	jae    0x42597b
  42593d:	aad    0x52
  42593f:	idiv   BYTE PTR [esi+0x0]
  425942:	stos   BYTE PTR es:[edi],al
  425943:	outs   dx,DWORD PTR ds:[esi]
  425944:	adc    al,0x5f
  425946:	sub    ecx,0xea3d39fa
  42594c:	(bad)  
  42594d:	rcr    BYTE PTR [esi+0x3c],1
  425950:	or     ebp,DWORD PTR [esi]
  425952:	jl     0x4258fa
  425954:	and    cl,al
  425956:	fsubr  DWORD PTR [ecx-0x76]
  425959:	adc    edx,DWORD PTR [ebx]
  42595b:	stc    
  42595c:	and    al,0xc9
  42595e:	out    0x72,eax
  425960:	adc    bl,ah
  425962:	mov    dh,0x4f
  425964:	scas   al,BYTE PTR es:[edi]
  425965:	or     eax,0xf452151
  42596a:	call   0xaa602d17
  42596f:	or     al,0xc
  425971:	movntq QWORD PTR [ecx],mm6
  425974:	jo     0x4259b0
  425976:	xchg   edi,eax
  425977:	jae    0x425925
  425979:	test   BYTE PTR ds:0x8148b322,cl
  42597f:	pop    ds
  425980:	sar    BYTE PTR [ecx],1
  425982:	push   edi
  425983:	pop    edx
  425984:	mov    WORD PTR [edx+0x74],gs
  425987:	(bad)  
  425988:	mov    ecx,0xc36b7cd2
  42598d:	inc    edi
  42598e:	imul   DWORD PTR [esi+0x2261c52c]
  425994:	popf   
  425995:	dec    eax
  425996:	push   esi
  425997:	into   
  425998:	xor    eax,0xd53616e3
  42599d:	ror    edi,0x4b
  4259a0:	sub    DWORD PTR [ecx+eax*8-0x39],ebx
  4259a4:	fild   WORD PTR [ecx]
  4259a6:	cli    
  4259a7:	push   edx
  4259a8:	jns    0x4259da
  4259aa:	lds    edi,FWORD PTR [ecx]
  4259ac:	xchg   edx,eax
  4259ad:	sti    
  4259ae:	inc    ebp
  4259af:	push   ss
  4259b0:	pusha  
  4259b1:	add    BYTE PTR [ecx],cl
  4259b3:	(bad)  
  4259b4:	jmp    0x4259a5
  4259b6:	cmc    
  4259b7:	lods   eax,DWORD PTR ds:[esi]
  4259b8:	mov    BYTE PTR [edx-0xd],dl
  4259bb:	scas   al,BYTE PTR es:[edi]
  4259bc:	xchg   edi,edx
  4259be:	(bad)  
  4259bf:	repnz xor dl,BYTE PTR [ebp-0x66e8b462]
  4259c6:	(bad)
  4259c9:	jb     0x4259d1
  4259cb:	(bad)  
  4259cc:	dec    ebp
  4259cd:	jl     0x4259d0
  4259cf:	pop    ss
  4259d0:	mov    ebx,fs
  4259d2:	or     al,0xc4
  4259d4:	out    0xab,eax
  4259d6:	loope  0x4259b5
  4259d8:	xchg   edx,eax
  4259d9:	cmp    dl,BYTE PTR [eax-0x5423373f]
  4259df:	push   ds
  4259e0:	sahf   
  4259e1:	push   0x69351c15
  4259e6:	pop    ss
  4259e7:	scas   al,BYTE PTR es:[edi]
  4259e8:	(bad)  
  4259ea:	sbb    esp,edx
  4259ec:	shl    BYTE PTR [edi+0x61],1
  4259ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4259f0:	cmp    dl,BYTE PTR [eax]
  4259f2:	xor    BYTE PTR [ebx],dh
  4259f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4259f5:	int    0xe6
  4259f7:	mov    dh,0xde
  4259f9:	fld    st(1)
  4259fb:	repz mov bl,0x32
  4259fe:	sub    ebx,DWORD PTR [ecx+0x49]
  425a01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425a02:	loop   0x425a43
  425a04:	pop    ecx
  425a05:	cwde   
  425a06:	xor    eax,0x8281e055
  425a0b:	sbb    eax,0x1070badf
  425a10:	mov    ds:0xed8b8b2f,eax
  425a15:	add    DWORD PTR [eax],ebp
  425a17:	ja     0x4259ff
  425a19:	outs   dx,BYTE PTR ds:[esi]
  425a1a:	mov    al,ds:0xd72aabb8
  425a1f:	or     DWORD PTR ds:0x844292f5,0xf4d0f90f
  425a29:	imul   bl
  425a2b:	lods   al,BYTE PTR ds:[esi]
  425a2c:	or     al,0x83
  425a2e:	xor    ebp,DWORD PTR [eax+0x64]
  425a31:	cdq    
  425a32:	mov    esi,0x56390369
  425a37:	or     eax,0xf9cf351c
  425a3c:	cmp    al,0xc4
  425a3e:	push   esi
  425a3f:	into   
  425a40:	les    ecx,FWORD PTR [ebx-0x3d]
  425a43:	pop    ecx
  425a44:	fxch   st(7)
  425a46:	(bad)  
  425a47:	icebp  
  425a48:	retf   0x964f
  425a4b:	add    BYTE PTR [ebp-0x2c0ac68b],dl
  425a51:	mov    cl,0xdc
  425a53:	in     al,0x9
  425a55:	pop    esi
  425a56:	and    al,0x17
  425a58:	mov    ebp,DWORD PTR ds:0xc3fe5863
  425a5e:	ret    
  425a5f:	xlat   BYTE PTR ds:[ebx]
  425a60:	and    DWORD PTR [edi],ebx
  425a62:	or     dl,0x47
  425a65:	outs   dx,DWORD PTR ds:[esi]
  425a66:	sbb    BYTE PTR [edi-0x19],ah
  425a69:	adc    BYTE PTR [eax-0x4e650cbf],dl
  425a6f:	mov    esp,0x2f2af30
  425a74:	or     DWORD PTR ds:0xf60a0081,eax
  425a7a:	cdq    
  425a7b:	stos   BYTE PTR es:[edi],al
  425a7c:	test   eax,0x55e98bcf
  425a81:	aam    0x9e
  425a83:	xor    al,0xb0
  425a85:	push   0xa68c283f
  425a8a:	adc    eax,0xf151484
  425a8f:	mov    DWORD PTR [edx],edx
  425a91:	dec    ecx
  425a92:	or     esp,DWORD PTR [ecx+0x75f0d12e]
  425a98:	stos   DWORD PTR es:[edi],eax
  425a99:	aad    0x3e
  425a9b:	mov    ch,0x3a
  425a9d:	jg     0x425a98
  425a9f:	adc    BYTE PTR [esi],dh
  425aa1:	ss cli 
  425aa3:	outs   dx,BYTE PTR ss:[esi]
  425aa5:	mov    al,0x47
  425aa7:	fild   WORD PTR [esi-0x6dc4f635]
  425aad:	jns    0x425b26
  425aaf:	dec    ebx
  425ab0:	mov    ds:0xcaed3171,eax
  425ab5:	outs   dx,DWORD PTR ds:[esi]
  425ab6:	pop    esp
  425ab7:	in     eax,dx
  425ab8:	pop    ds
  425ab9:	mov    cl,0xbe
  425abb:	sub    BYTE PTR [ecx+0x77f93931],dl
  425ac1:	or     eax,0x854dfea8
  425ac6:	inc    edx
  425ac7:	jge    0x425a5e
  425ac9:	loope  0x425ace
  425acb:	retf   
  425acc:	enter  0xfcdb,0x9e
  425ad0:	push   edx
  425ad1:	shl    esi,cl
  425ad3:	push   0x3be8d3c2
  425ad8:	pop    edi
  425ad9:	sbb    edi,0x55
  425adc:	loope  0x425b37
  425ade:	xor    al,0xaf
  425ae0:	or     BYTE PTR [esi-0x6e],bh
  425ae3:	add    eax,0x72c9014
  425ae8:	(bad)  [ecx+0x1c]
  425aeb:	ss dec ecx
  425aed:	fistp  QWORD PTR [ebx+edx*8]
  425af0:	inc    eax
  425af1:	dec    edi
  425af2:	dec    ebx
  425af3:	lahf   
  425af4:	inc    esi
  425af5:	xchg   edx,eax
  425af6:	cmp    al,0xcc
  425af8:	cmp    edi,DWORD PTR [ecx+ecx*2]
  425afb:	mov    es,ebp
  425afd:	and    ebp,DWORD PTR [ebp-0xdfa90c2]
  425b03:	pop    esi
  425b04:	or     ecx,ebp
  425b06:	les    edi,FWORD PTR [esi-0x59]
  425b09:	aam    0x37
  425b0b:	arpl   bp,sp
  425b0d:	sub    DWORD PTR [esp+ebx*8+0x6273db97],0x75f3f6d4
  425b18:	xchg   ebp,eax
  425b19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425b1a:	mov    al,0x47
  425b1c:	std    
  425b1d:	pop    ebp
  425b1e:	or     esp,DWORD PTR ds:0xf6151cbf
  425b24:	ret    0xd0e
  425b27:	and    BYTE PTR [eax+0x36],0x9d
  425b2b:	mov    bl,0x95
  425b2d:	push   es
  425b2e:	shl    BYTE PTR [ebx-0x4],1
  425b31:	icebp  
  425b32:	pop    edi
  425b33:	fs loope 0x425b90
  425b36:	stc    
  425b37:	push   cs
  425b38:	cmp    DWORD PTR [ecx+0x3f],ebx
  425b3b:	mov    DWORD PTR [ecx-0x1a],edi
  425b3e:	dec    ebp
  425b3f:	test   eax,0x11ceb590
  425b44:	inc    edi
  425b45:	dec    esp
  425b46:	ret    
  425b47:	gs add al,0x2
  425b4a:	push   edi
  425b4b:	dec    esi
  425b4c:	xor    ah,BYTE PTR [ebp+0x48e60226]
  425b52:	add    cl,BYTE PTR [ebx-0x61]
  425b55:	das    
  425b56:	mov    cl,BYTE PTR [esi+ecx*2-0x3d]
  425b5a:	adc    DWORD PTR ds:0x33e1bfac,edi
  425b60:	pop    ebp
  425b61:	lds    esi,FWORD PTR [edx-0x7d]
  425b64:	xor    ebx,DWORD PTR [edx]
  425b66:	and    al,0x91
  425b68:	adc    ebp,DWORD PTR [edx]
  425b6a:	aas    
  425b6b:	not    BYTE PTR [ebx-0x19]
  425b6e:	mov    al,ds:0x356fdafd
  425b73:	les    esp,FWORD PTR [eax+0x34]
  425b76:	lods   eax,DWORD PTR ds:[esi]
  425b77:	add    ebp,ebx
  425b79:	ror    DWORD PTR [ebp+0x4e4bfab5],cl
  425b7f:	cs jmp 0xb608:0xed24c94e
  425b87:	dec    ebx
  425b88:	dec    esp
  425b89:	or     DWORD PTR [edi],ebp
  425b8b:	jg     0x425bbe
  425b8d:	xor    al,BYTE PTR [esi]
  425b8f:	mov    ecx,0xe8cea26
  425b94:	loope  0x425b2e
  425b96:	pop    esi
  425b97:	lods   al,BYTE PTR ds:[esi]
  425b98:	rol    DWORD PTR [edx-0x40],1
  425b9b:	ins    DWORD PTR es:[edi],dx
  425b9c:	jb     0x425b71
  425b9e:	lds    esp,FWORD PTR [eax-0x79421ee8]
  425ba4:	xchg   esi,eax
  425ba5:	cmp    eax,0xfdda4f1c
  425baa:	inc    edx
  425bab:	mov    ah,0x18
  425bad:	inc    esi
  425bae:	jecxz  0x425baa
  425bb0:	outs   dx,BYTE PTR ds:[esi]
  425bb1:	js     0x425b7f
  425bb3:	test   eax,0xad1726ab
  425bb8:	xchg   DWORD PTR [eax-0x316bbaf8],esi
  425bbe:	sub    bl,BYTE PTR [ebx+0x6bec279d]
  425bc4:	add    BYTE PTR [eax+edi*8+0x4b],ah
  425bc8:	fisubr DWORD PTR [edx+edi*2]
  425bcb:	xlat   BYTE PTR ds:[ebx]
  425bcc:	pushf  
  425bcd:	icebp  
  425bce:	test   eax,0x9e2d2c35
  425bd3:	popa   
  425bd4:	cmp    ch,BYTE PTR [edi-0x4b45bc05]
  425bda:	mov    ah,dh
  425bdc:	jmp    0x425c23
  425bde:	mov    edi,0x2dc75432
  425be3:	push   eax
  425be4:	xchg   BYTE PTR [edx],bl
  425be6:	int    0x24
  425be8:	pop    esp
  425be9:	call   0x974d:0x67e2301e
  425bf0:	fisub  WORD PTR [edx+eax*2]
  425bf3:	inc    edi
  425bf4:	inc    ecx
  425bf5:	sbb    BYTE PTR [esi+edi*4-0x6c728554],dl
  425bfc:	outs   dx,DWORD PTR ds:[esi]
  425bfd:	int    0xfa
  425bff:	adc    BYTE PTR [ebx-0x1a],al
  425c02:	and    cl,bl
  425c04:	inc    ebx
  425c05:	das    
  425c06:	ficomp DWORD PTR [edx]
  425c08:	and    al,ch
  425c0a:	loopne 0x425c88
  425c0c:	mov    cl,0x6d
  425c0e:	hlt    
  425c0f:	xchg   esi,eax
  425c10:	or     BYTE PTR [ecx],ch
  425c12:	aas    
  425c13:	adc    ebp,DWORD PTR [esi]
  425c15:	pop    ss
  425c16:	push   esi
  425c17:	ficom  DWORD PTR [ecx-0x2e]
  425c1a:	je     0x425c17
  425c1c:	push   ebp
  425c1d:	lock into 
  425c1f:	rcr    BYTE PTR [esi-0x4cd0d5d4],cl
  425c25:	popa   
  425c26:	and    ah,dh
  425c28:	adc    DWORD PTR [ebx],edx
  425c2a:	les    ecx,FWORD PTR [ebp+0x6f]
  425c2d:	jns    0x425c1f
  425c2f:	mov    dh,BYTE PTR [eax-0x77109de8]
  425c35:	sub    DWORD PTR [esi],0x3e1928c0
  425c3b:	adc    BYTE PTR [ebx+esi*1-0x26],al
  425c3f:	loopne 0x425ca3
  425c41:	jge    0x425c54
  425c43:	push   ds
  425c44:	leave  
  425c45:	or     bh,BYTE PTR [ebp+0x27]
  425c48:	mov    edx,0xf0b1aa3a
  425c4d:	push   ebp
  425c4e:	aas    
  425c4f:	in     al,0x9c
  425c51:	js     0x425ccc
  425c53:	xchg   DWORD PTR [eax+0x4b],ecx
  425c56:	and    BYTE PTR [eax+esi*8],ah
  425c59:	nop
  425c5a:	mov    bh,BYTE PTR [edi+0x375173d8]
  425c60:	data16 mov bl,0xf5
  425c63:	push   eax
  425c64:	or     bh,BYTE PTR [edx-0x6277020f]
  425c6a:	inc    edx
  425c6b:	pop    es
  425c6c:	stos   BYTE PTR es:[edi],al
  425c6d:	test   al,0x19
  425c6f:	fsub   QWORD PTR [esi+0x7]
  425c72:	jae    0x425c57
  425c74:	xor    ah,0xf
  425c77:	lods   eax,DWORD PTR ds:[esi]
  425c78:	in     eax,0x46
  425c7a:	cli    
  425c7b:	(bad)  ds:0xff2dd569
  425c81:	jge    0x425c12
  425c83:	mov    dh,0xba
  425c85:	loop   0x425cd7
  425c87:	push   ebp
  425c88:	inc    edx
  425c89:	jne    0x425cc7
  425c8b:	(bad)  
  425c8c:	fnstsw WORD PTR [esp+ebp*2]
  425c8f:	mov    DWORD PTR [ebx+0x70f995f6],eax
  425c95:	dec    ebx
  425c96:	out    dx,al
  425c97:	ret    
  425c98:	xchg   ecx,eax
  425c99:	scas   eax,DWORD PTR es:[edi]
  425c9a:	ret    0x5a81
  425c9d:	mov    ebx,0x1c8cccd1
  425ca2:	adc    edx,DWORD PTR [edi-0x69]
  425ca5:	in     eax,dx
  425ca6:	fmul   QWORD PTR [ebx-0x2f]
  425ca9:	fidiv  WORD PTR [ecx+0x31384329]
  425caf:	jge    0x425cac
  425cb1:	inc    esp
  425cb2:	push   ebp
  425cb3:	xor    cl,BYTE PTR [eax+ecx*1-0x67]
  425cb7:	mov    DWORD PTR [edi+ecx*2+0x5386b2d2],ebp
  425cbe:	out    0x6f,al
  425cc0:	sahf   
  425cc1:	xchg   edx,eax
  425cc2:	dec    eax
  425cc3:	inc    edx
  425cc4:	jmp    0x58a3af8f
  425cc9:	mov    ds:0x97c438b6,eax
  425cce:	or     dl,BYTE PTR [ecx+0x17]
  425cd1:	or     ah,BYTE PTR ds:0x5b0978ae
  425cd7:	cld    
  425cd8:	ficomp DWORD PTR [ecx+0x5e]
  425cdb:	test   DWORD PTR [eax+0x7d],edx
  425cde:	or     DWORD PTR [ebx+0x2caa45a3],esp
  425ce4:	pop    ss
  425ce5:	js     0x425ca1
  425ce7:	xor    bl,dl
  425ce9:	scas   eax,DWORD PTR es:[edi]
  425cea:	es push 0xc683d98f
  425cf0:	fisub  WORD PTR ds:0x48200482
  425cf6:	loop   0x425d13
  425cf8:	stos   DWORD PTR es:[edi],eax
  425cf9:	mov    al,ds:0x7563f7fd
  425cfe:	les    ebp,FWORD PTR [edx+0x42b1ebd1]
  425d04:	mov    bl,0x74
  425d06:	rcl    BYTE PTR [edx+ebp*4-0x4c],1
  425d0a:	xchg   BYTE PTR [edi+0x5862ce53],bh
  425d10:	push   edi
  425d11:	enter  0xae1d,0x92
  425d15:	scas   al,BYTE PTR es:[edi]
  425d16:	(bad)  
  425d17:	sub    ch,bl
  425d19:	clc    
  425d1a:	lds    eax,FWORD PTR [edi]
  425d1c:	dec    edi
  425d1d:	cmp    eax,0xe2d29960
  425d22:	loope  0x425d73
  425d24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425d25:	sbb    al,0x2b
  425d27:	pop    esi
  425d28:	(bad)  
  425d2a:	in     al,0x18
  425d2c:	jmp    0x2558a196
  425d31:	(bad)  
  425d32:	aaa    
  425d33:	cdq    
  425d34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425d35:	cmp    ebx,DWORD PTR [ebx-0x51321838]
  425d3b:	xor    DWORD PTR [esi+0x55],0xffffffe8
  425d3f:	pop    esi
  425d40:	push   ecx
  425d41:	fcom   QWORD PTR [eax]
  425d43:	sbb    esp,0x4eb3ffcc
  425d49:	mov    ecx,0x41a71338
  425d4e:	inc    ebp
  425d4f:	icebp  
  425d50:	pop    ss
  425d51:	shl    DWORD PTR [ebp+0x78],1
  425d54:	and    eax,DWORD PTR [ecx-0x5d6c4c95]
  425d5a:	(bad)  
  425d5b:	imul   eax,DWORD PTR [esi-0x57ded61a],0xffffff99
  425d62:	sub    al,0x8f
  425d64:	jbe    0x425d75
  425d66:	in     eax,0x37
  425d68:	cmp    al,0xb
  425d6a:	ret    0x37
  425d6d:	add    BYTE PTR [eax],al
  425d6f:	add    BYTE PTR [eax],al
  425d71:	add    dh,ch
  425d73:	retf   0xd589
  425d76:	lods   eax,DWORD PTR ds:[esi]
  425d77:	xlat   BYTE PTR ds:[ebx]
  425d78:	(bad)  
  425d79:	sti    
  425d7a:	(bad)  
  425d7c:	mov    ss,WORD PTR [edi+edx*2+0x41]
  425d80:	dec    ebp
  425d81:	mul    BYTE PTR [ecx-0xdfffe2b]
  425d87:	add    al,0x0
  425d89:	add    cl,bl
  425d8b:	mov    ah,0xa1
  425d8d:	lods   eax,DWORD PTR ds:[esi]
  425d8e:	jno    0x425de9
  425d90:	push   ecx
  425d91:	fld    TBYTE PTR [edi+0x3e]
  425d94:	mov    WORD PTR [ebx],es
  425d96:	cs test eax,0xbc6ba35d
  425d9c:	adc    edx,DWORD PTR [edx+0x4ee9f675]
  425da2:	adc    BYTE PTR [ecx-0x73c1cca1],dl
  425da8:	and    ebp,DWORD PTR [ecx]
  425daa:	test   BYTE PTR [ecx+0x5ac44143],ch
  425db0:	and    eax,DWORD PTR [ebx]
  425db2:	pop    esp
  425db3:	push   ebp
  425db4:	imul   ebx,DWORD PTR [ecx-0x63],0xd0819790
  425dbb:	popa   
  425dbc:	adc    eax,0xfe904e00
  425dc1:	jae    0x425e37
  425dc3:	adc    al,0x71
  425dc5:	and    al,0x68
  425dc7:	sbb    eax,0x92760a6f
  425dcc:	shl    BYTE PTR [ecx+0x61],cl
  425dcf:	js     0x425e2b
  425dd1:	(bad)  
  425dd2:	dec    edi
  425dd3:	rcl    DWORD PTR [edi+0x60],1
  425dd6:	sti    
  425dd7:	push   esp
  425dd8:	xchg   ebx,eax
  425dd9:	mov    ebp,0xa3010c19
  425dde:	enter  0x3468,0xd
  425de2:	push   ds
  425de3:	mov    ebp,0x871709e1
  425de8:	sub    cl,BYTE PTR [esi+eiz*1+0x1c]
  425dec:	push   ebp
  425ded:	mov    ds:0xcd131182,eax
  425df2:	aaa    
  425df3:	jbe    0x425dec
  425df5:	data16 jnp 0x425e63
  425df8:	adc    al,0xc8
  425dfa:	(bad)  
  425dfc:	mov    dl,0x4c
  425dfe:	mov    al,ds:0x7d1da4c4
  425e03:	mov    ebp,0x24d26550
  425e08:	cmp    DWORD PTR [edi-0x43],eax
  425e0b:	or     eax,0x12851063
  425e10:	repnz (bad) 
  425e12:	pop    ecx
  425e13:	sbb    eax,0xf1c4c6fb
  425e18:	aad    0xaf
  425e1a:	mov    eax,cs
  425e1c:	xchg   esp,eax
  425e1d:	xor    eax,edi
  425e1f:	mov    ebx,0x466745a2
  425e24:	adc    eax,0x19af18a0
  425e29:	mov    ebx,0x5c2126c4
  425e2e:	sbb    ebp,esi
  425e30:	leave  
  425e31:	or     dl,BYTE PTR [ecx]
  425e33:	clc    
  425e34:	addr16 or al,0xe
  425e37:	push   ecx
  425e38:	jl     0x425e37
  425e3a:	or     BYTE PTR [esi+0x27],0xc5
  425e3e:	xchg   DWORD PTR [ebx],esp
  425e40:	test   eax,0x7dd5dc9c
  425e45:	push   ss
  425e46:	rol    BYTE PTR [edx],cl
  425e48:	jp     0x425ded
  425e4a:	add    al,0xb1
  425e4c:	xor    eax,0x560ee90f
  425e51:	ins    DWORD PTR es:[edi],dx
  425e52:	leave  
  425e53:	out    dx,al
  425e54:	cmp    esp,ecx
  425e56:	jno    0x425dd9
  425e58:	clc    
  425e59:	jmp    0x4893:0x82cc74b8
  425e60:	add    DWORD PTR ds:0xeaaeedcf,0xa20ab63f
  425e6a:	cmc    
  425e6b:	push   ecx
  425e6c:	sub    BYTE PTR [ecx-0x4e76fe32],bh
  425e72:	addr16 adc eax,0xa9529558
  425e78:	pop    ss
  425e79:	jne    0x425dfd
  425e7b:	jnp    0x425ef1
  425e7d:	sub    DWORD PTR [eax-0x3bcca877],ecx
  425e83:	sar    BYTE PTR [ecx-0x2f0a0e8e],0x1b
  425e8a:	mov    al,ds:0xa8f6f2a
  425e8f:	out    dx,al
  425e90:	rcl    BYTE PTR [edi],cl
  425e92:	bound  ebx,QWORD PTR [ebp-0xf48f6d0]
  425e98:	cmp    eax,0x142d3683
  425e9d:	mov    esi,0x9d67cefc
  425ea2:	sub    ah,BYTE PTR [ebx-0x1fcd0115]
  425ea8:	fbld   TBYTE PTR [edi+0x634b9897]
  425eae:	into   
  425eaf:	retf   
  425eb0:	mov    eax,ds:0x16761d3b
  425eb5:	in     eax,0x1d
  425eb7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425eb8:	es mov cs,edx
  425ebb:	daa    
  425ebc:	jl     0x425ea3
  425ebe:	shr    eax,1
  425ec0:	sub    ebp,edi
  425ec2:	push   ss
  425ec3:	popf   
  425ec4:	aam    0x47
  425ec6:	dec    edi
  425ec7:	cs out 0xd5,al
  425eca:	mov    ds:0x95ea2235,eax
  425ecf:	pop    ebp
  425ed0:	jbe    0x425ebe
  425ed2:	gs ret 0x13b2
  425ed6:	fsubr  DWORD PTR ds:0x8b3471e5
  425edc:	push   0xffffffe2
  425ede:	test   ebx,0x36c07b19
  425ee4:	jns    0x425f27
  425ee6:	push   cs
  425ee7:	dec    ecx
  425ee8:	sub    ch,al
  425eea:	jbe    0x425ead
  425eec:	and    eax,0xc1bba34d
  425ef1:	add    DWORD PTR [edx-0x75037e6f],esp
  425ef7:	jb     0x425ee7
  425ef9:	stos   DWORD PTR es:[edi],eax
  425efa:	or     DWORD PTR [edx+0x579b5fb1],0xdeab8991
  425f04:	pop    edx
  425f05:	stos   DWORD PTR es:[edi],eax
  425f06:	bnd jmp 0x91c4e742
  425f0c:	add    BYTE PTR [edi+ebp*4+0x2e],bl
  425f10:	mov    esp,0x77b7a0fb
  425f15:	lods   al,BYTE PTR ds:[esi]
  425f16:	inc    esi
  425f17:	add    ch,BYTE PTR [edi]
  425f19:	pop    es
  425f1a:	xor    BYTE PTR [ecx-0x6],dh
  425f1d:	and    ah,bh
  425f1f:	cld    
  425f20:	dec    ebx
  425f21:	push   ds
  425f22:	mov    ecx,0x9ae123be
  425f27:	hlt    
  425f28:	mov    ecx,0x774ad68c
  425f2d:	(bad)  
  425f2e:	xchg   esp,eax
  425f2f:	les    ebp,FWORD PTR [edi+0x4a4f1831]
  425f35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425f36:	or     DWORD PTR [esi],0xffffffb7
  425f39:	ss mov ecx,0x897476aa
  425f3f:	jmp    0xc8080779
  425f44:	scas   eax,DWORD PTR es:[edi]
  425f45:	xchg   ebp,eax
  425f46:	call   0x3e01:0x93ce8a48
  425f4d:	ds mov al,0x2a
  425f50:	jne    0x425f59
  425f52:	fsub   DWORD PTR [ecx-0x448d57e6]
  425f58:	jno    0x425edc
  425f5a:	mov    fs,WORD PTR [ebp+0x48a95e23]
  425f60:	mov    ch,BYTE PTR gs:[edi-0xb267a02]
  425f67:	mov    cs,eax
  425f69:	inc    ebx
  425f6a:	push   eax
  425f6b:	or     al,0x3f
  425f6d:	ret    
  425f6e:	sub    ah,BYTE PTR [ebx]
  425f70:	div    cl
  425f72:	and    esp,edi
  425f74:	fcomp  QWORD PTR [edi]
  425f76:	push   edi
  425f77:	lahf   
  425f78:	mov    bl,0x38
  425f7a:	rol    DWORD PTR [ecx],1
  425f7c:	mov    eax,0xf899232a
  425f81:	cld    
  425f82:	mov    edx,0x38eef688
  425f87:	imul   esi,DWORD PTR [eax+0x1c],0x337e5587
  425f8e:	sti    
  425f8f:	inc    ebx
  425f90:	mov    ecx,0xf421a45e
  425f95:	sub    eax,0x65662458
  425f9a:	pop    eax
  425f9b:	xchg   ebx,eax
  425f9c:	adc    ebp,eax
  425f9e:	xor    ax,0xbb7f
  425fa2:	cmp    eax,0x990e240c
  425fa7:	mov    al,BYTE PTR [edi-0x26be567e]
  425fad:	stos   DWORD PTR es:[edi],eax
  425fae:	and    cl,dh
  425fb0:	jl     0x425f3b
  425fb2:	xchg   edi,eax
  425fb3:	lods   al,BYTE PTR ds:[esi]
  425fb4:	and    DWORD PTR ds:0x31c3d2af,ecx
  425fba:	faddp  st(5),st
  425fbc:	ret    
  425fbd:	or     eax,0xe0411408
  425fc2:	sub    DWORD PTR [ebx-0x4301202c],esi
  425fc8:	es jmp 0x2fd89a55
  425fce:	sbb    eax,0x8b96a38d
  425fd3:	pop    edi
  425fd4:	inc    eax
  425fd5:	cmp    bl,BYTE PTR [ebx-0x391dded1]
  425fdb:	xchg   ebx,eax
  425fdc:	fwait
  425fdd:	loop   0x425f7c
  425fdf:	stos   BYTE PTR es:[edi],al
  425fe0:	sub    al,0x61
  425fe2:	shl    BYTE PTR es:[edi],1
  425fe5:	ror    BYTE PTR [edi],cl
  425fe7:	xchg   esp,eax
  425fe8:	adc    DWORD PTR [edx+eiz*2],eax
  425feb:	leave  
  425fec:	pop    esp
  425fed:	(bad)  
  425fee:	(bad)  
  425fef:	jmp    0x35ebde20
  425ff4:	mov    edx,0x66fdd56a
  425ff9:	mov    bh,ah
  425ffb:	dec    esp
  425ffc:	jmp    0x42600a
  425ffe:	xchg   DWORD PTR [edi],ebx
  426000:	xchg   edi,eax
  426001:	mov    BYTE PTR [ebx],ch
  426003:	fiadd  WORD PTR [ebp+ebx*4+0x73]
  426007:	outs   dx,BYTE PTR ds:[esi]
  426008:	or     DWORD PTR ds:0xa7036b6,0xffffffaa
  42600f:	xchg   edx,eax
  426010:	push   cs
  426011:	xor    esi,DWORD PTR [eax]
  426013:	dec    esi
  426014:	fmul   QWORD PTR [edi-0x3]
  426017:	pop    ecx
  426018:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426019:	mov    esi,0xef1e063e
  42601e:	ss dec edi
  426020:	je     0x426048
  426022:	or     al,0x9d
  426024:	test   BYTE PTR [esi+0x1d5f6e94],cl
  42602a:	pop    es
  42602b:	pushf  
  42602c:	ja     0x425fd4
  42602e:	sbb    eax,0x26e1d407
  426033:	inc    ecx
  426034:	jle    0x425fd2
  426036:	mov    al,0x6a
  426038:	adc    ah,BYTE PTR [ebx]
  42603a:	adc    ah,cl
  42603c:	push   cs
  42603d:	test   eax,0x33fbea35
  426042:	mov    ah,0xe2
  426044:	ins    DWORD PTR es:[edi],dx
  426045:	xchg   esi,eax
  426046:	push   ss
  426047:	cwde   
  426048:	push   ebx
  426049:	mov    ch,0x1e
  42604b:	nop    DWORD PTR [eax]
  42604e:	xlat   BYTE PTR ds:[ebx]
  42604f:	pop    ebx
  426050:	arpl   WORD PTR [ebp-0x39bc4854],sp
  426056:	in     al,0x73
  426058:	jbe    0x42603b
  42605a:	or     ch,BYTE PTR [ebx+edx*8-0x6cc2bb5d]
  426061:	adc    eax,0xaa343084
  426066:	dec    ebp
  426067:	cmp    BYTE PTR [ebx+edx*1+0x44],cl
  42606b:	test   DWORD PTR [edi],edx
  42606d:	dec    ebp
  42606e:	(bad)  
  426070:	inc    edx
  426071:	xchg   bl,ah
  426073:	cwde   
  426074:	add    dl,dh
  426076:	aam    0x54
  426078:	pushf  
  426079:	dec    edi
  42607a:	imul   ecx,DWORD PTR [esi],0xffffffe1
  42607d:	int3   
  42607e:	int3   
  42607f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426080:	addr16 mov edi,0xac98513e
  426086:	ret    
  426087:	or     al,0x47
  426089:	sbb    BYTE PTR [edi+0x73],bh
  42608c:	cmp    bl,ch
  42608e:	adc    edx,ebx
  426090:	jmp    0x4260de
  426092:	jp     0x4260a6
  426094:	cmp    al,0x9a
  426096:	fsub   QWORD PTR [edi-0x46fbf138]
  42609c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42609d:	sbb    eax,0xdfc81ab8
  4260a2:	pop    ss
  4260a3:	stos   BYTE PTR es:[edi],al
  4260a4:	mov    eax,0x986a43ca
  4260a9:	xchg   DWORD PTR [ecx+0x40],eax
  4260ac:	mov    bl,al
  4260ae:	pop    esp
  4260af:	jg     0x426059
  4260b1:	imul   esi,esp,0xffffffd5
  4260b4:	scas   eax,DWORD PTR es:[edi]
  4260b5:	mov    ch,ah
  4260b7:	cwde   
  4260b8:	or     DWORD PTR [esi],edi
  4260ba:	push   ebp
  4260bb:	pop    edx
  4260bc:	jae    0x4260c8
  4260be:	xor    bh,BYTE PTR [ecx]
  4260c0:	or     ebx,edi
  4260c2:	jmp    0x4260fd
  4260c4:	and    eax,0x7b7bb4a7
  4260c9:	mov    ah,0x28
  4260cb:	loope  0x42610d
  4260cd:	leave  
  4260ce:	jae    0x42605f
  4260d0:	sub    BYTE PTR [ebx],dh
  4260d2:	cmp    DWORD PTR [edx-0x77],esi
  4260d5:	icebp  
  4260d6:	mov    ds:0x274f8f51,eax
  4260db:	push   edx
  4260dc:	or     al,0x54
  4260de:	pop    ecx
  4260df:	test   al,0xaf
  4260e1:	add    DWORD PTR [edx+0x22],eax
  4260e4:	js     0x426067
  4260e6:	das    
  4260e7:	xchg   ebp,eax
  4260e8:	sub    DWORD PTR [ebx-0x62],ebp
  4260eb:	and    edx,DWORD PTR [ecx-0x4c]
  4260ee:	jb     0x426166
  4260f0:	mov    eax,0x3c187b9a
  4260f5:	pusha  
  4260f6:	iret   
  4260f7:	jae    0x426120
  4260f9:	test   WORD PTR ds:0x328c409f,0xb638
  426102:	sbb    eax,0x18ea097
  426107:	hlt    
  426108:	sub    bh,BYTE PTR [eax]
  42610a:	mov    bh,0x27
  42610c:	sbb    ch,BYTE PTR [ebp+0x3b]
  42610f:	clc    
  426110:	push   ebp
  426111:	push   eax
  426112:	xchg   BYTE PTR [eax+0x4d],al
  426115:	adc    DWORD PTR [edx],eax
  426117:	mov    bh,0x8e
  426119:	ins    BYTE PTR es:[edi],dx
  42611a:	adc    DWORD PTR ds:0xed47e2b4,edx
  426120:	cmp    edi,DWORD PTR [ebx+0x2e]
  426123:	push   esi
  426124:	dec    ebx
  426125:	cmp    al,0x4c
  426127:	cmc    
  426128:	repnz int 0x51
  42612b:	mov    ebp,0xdb105d3e
  426130:	push   esi
  426131:	out    dx,al
  426132:	dec    edx
  426133:	nop
  426134:	fist   DWORD PTR [esi+0x5c]
  426137:	mov    edx,0x51c24f1c
  42613c:	lahf   
  42613d:	lock jecxz 0x4260ea
  426140:	pop    edi
  426141:	mov    ch,0x4f
  426143:	loop   0x4260fe
  426145:	and    ch,BYTE PTR [esi+0x12]
  426148:	dec    ebp
  426149:	test   eax,0x2014b7ec
  42614e:	inc    ebx
  42614f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426150:	das    
  426151:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426152:	jge    0x42616b
  426154:	xchg   esp,eax
  426155:	mov    ds:0x3e76e5dc,eax
  42615a:	and    bh,bl
  42615c:	pop    ss
  42615d:	out    dx,al
  42615e:	push   edi
  42615f:	jp     0x4261a2
  426161:	adc    dl,BYTE PTR [esi]
  426163:	mov    cl,0xbf
  426165:	aam    0x75
  426167:	gs int3 
  426169:	dec    eax
  42616a:	aas    
  42616b:	cwde   
  42616c:	js     0x426122
  42616e:	icebp  
  42616f:	push   cs
  426170:	dec    esi
  426171:	(bad)  
  426172:	out    dx,eax
  426173:	lods   al,BYTE PTR ds:[esi]
  426174:	push   0xadcfc280
  426179:	scas   eax,DWORD PTR es:[edi]
  42617a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42617b:	cmp    al,0x7b
  42617d:	cmc    
  42617e:	test   eax,0xea26db47
  426183:	retf   0x8d30
  426186:	outs   dx,DWORD PTR ds:[esi]
  426187:	out    dx,eax
  426188:	icebp  
  426189:	icebp  
  42618a:	lods   al,BYTE PTR ds:[esi]
  42618b:	arpl   WORD PTR [edi-0x57],sp
  42618e:	pop    ecx
  42618f:	pusha  
  426190:	stos   BYTE PTR es:[edi],al
  426191:	push   cs
  426192:	fldcw  WORD PTR [ebp+ebp*1+0x3b7ce07]
  426199:	cmp    eax,0x7272749e
  42619e:	add    eax,0xbcd50fdc
  4261a3:	adc    edi,DWORD PTR gs:[edx+0xd]
  4261a7:	mov    al,0xf0
  4261a9:	dec    ebp
  4261aa:	out    0x1e,eax
  4261ac:	dec    ecx
  4261ad:	xor    edx,DWORD PTR [edi-0x3ba4d19b]
  4261b3:	cmp    DWORD PTR [ebp+0x63],0x1390e725
  4261ba:	pop    esi
  4261bb:	xchg   edi,eax
  4261bc:	test   al,0x1c
  4261be:	or     al,0xe6
  4261c0:	jnp    0x42622b
  4261c2:	lods   al,BYTE PTR ds:[esi]
  4261c3:	push   esi
  4261c4:	mov    edi,DWORD PTR ds:0xb45e383e
  4261ca:	push   edi
  4261cb:	lock inc ecx
  4261cd:	bound  eax,QWORD PTR [eax]
  4261cf:	rol    BYTE PTR [ecx],1
  4261d1:	stos   BYTE PTR es:[edi],al
  4261d2:	inc    edi
  4261d3:	mov    ah,0xc2
  4261d5:	mul    BYTE PTR [eax+0x2ea87126]
  4261db:	pusha  
  4261dc:	dec    esi
  4261dd:	jl     0x426176
  4261df:	push   0x67
  4261e1:	mov    edx,0x82d52e55
  4261e6:	es retf 
  4261e8:	call   0x7bc670a1
  4261ed:	das    
  4261ee:	xchg   esp,eax
  4261ef:	test   al,0xf
  4261f1:	iret   
  4261f2:	fidivr DWORD PTR [ecx-0x23]
  4261f5:	sbb    edx,edx
  4261f7:	shr    DWORD PTR [eax],cl
  4261f9:	dec    esp
  4261fa:	cmp    ch,BYTE PTR [edx-0x4a7c1820]
  426200:	xchg   ebp,eax
  426201:	bound  ebx,QWORD PTR [esi+ecx*8]
  426204:	add    DWORD PTR [esi-0x10],ebx
  426207:	addr16 clc 
  426209:	xor    eax,0x34a2a06d
  42620e:	(bad)  
  42620f:	fild   WORD PTR [ecx-0x2987619c]
  426215:	or     eax,DWORD PTR [eax]
  426217:	mov    eax,0x55a73c91
  42621c:	imul   ebx,DWORD PTR [edi+0x6d],0xdb149d10
  426223:	dec    ebx
  426224:	pop    ss
  426225:	aad    0xe0
  426227:	sbb    ch,dl
  426229:	ins    BYTE PTR es:[edi],dx
  42622a:	ds ins BYTE PTR es:[edi],dx
  42622c:	inc    esi
  42622d:	in     al,dx
  42622e:	std    
  42622f:	sar    BYTE PTR [esi+0x73],0xc2
  426233:	mov    eax,DWORD PTR [ecx-0x69d2910e]
  426239:	add    al,0x7d
  42623b:	aas    
  42623c:	dec    eax
  42623d:	aaa    
  42623e:	pushf  
  42623f:	out    0xfb,al
  426241:	call   0x46fbc2fc
  426246:	cdq    
  426247:	call   ebp
  426249:	test   eax,0x29cc1bf8
  42624e:	jne    0x42622d
  426250:	dec    esi
  426251:	or     BYTE PTR [edx-0x20],dl
  426254:	xor    DWORD PTR [ecx+0x8],ebp
  426257:	mov    dh,0x5b
  426259:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42625a:	jbe    0x42629e
  42625c:	dec    edi
  42625d:	push   esp
  42625e:	pop    edi
  42625f:	mov    dh,0x2a
  426261:	les    eax,FWORD PTR [edx]
  426263:	ds scas eax,DWORD PTR es:[edi]
  426265:	dec    eax
  426266:	add    esp,DWORD PTR [ebp+0x46147e88]
  42626c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42626d:	fiadd  WORD PTR [edx+ecx*1+0x52]
  426271:	fisubr DWORD PTR [ebp+0x5ae98c00]
  426277:	add    ecx,DWORD PTR [ebp+ebx*4+0xf6a3]
  42627e:	add    BYTE PTR [eax],al
  426280:	add    BYTE PTR [eax],al
  426282:	jno    0x426247
  426284:	loop   0x426271
  426286:	bnd jmp 0x426302
  426289:	fcomi  st,st(7)
  42628b:	mov    edi,db7
  42628e:	ja     0x426281
  426290:	lock dec edi
  426292:	xchg   ebx,eax
  426293:	fiadd  DWORD PTR [ecx]
  426295:	add    dl,dh
  426297:	add    al,0x0
  426299:	add    BYTE PTR [edi-0x7],bl
  42629c:	sbb    eax,0x55161fe1
  4262a1:	leave  
  4262a2:	push   0x9e3b2cf4
  4262a7:	inc    ecx
  4262a8:	ror    bh,cl
  4262aa:	repz pop es
  4262ac:	call   0xcefb:0xae4f3570
  4262b3:	dec    ecx
  4262b4:	mov    ebp,DWORD PTR [esi]
  4262b6:	test   ch,al
  4262b8:	add    edx,0xe5474be1
  4262be:	(bad)  
  4262bf:	(bad)  
  4262c1:	and    al,BYTE PTR [edx+ecx*2]
  4262c4:	(bad)  
  4262c6:	int3   
  4262c7:	mov    bl,0x10
  4262c9:	call   0x9fc81919
  4262ce:	outs   dx,BYTE PTR ds:[esi]
  4262cf:	sbb    dh,BYTE PTR [esi-0x60]
  4262d2:	dec    DWORD PTR [eax+0x2b47ba26]
  4262d8:	adc    BYTE PTR [ecx],cl
  4262da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4262db:	je     0x42628d
  4262dd:	test   al,0xc
  4262df:	sub    al,dl
  4262e1:	stos   BYTE PTR es:[edi],al
  4262e2:	sbb    ecx,DWORD PTR [eax+0x3f88acc9]
  4262e8:	xlat   BYTE PTR ds:[ebx]
  4262e9:	xor    bh,BYTE PTR [ebp+0x72f1302e]
  4262ef:	(bad)  [ecx-0x61]
  4262f2:	test   eax,0x7642c2a9
  4262f7:	sub    esp,DWORD PTR [ebp+ebp*4+0x5adc78e4]
  4262fe:	popf   
  4262ff:	je     0x426367
  426301:	mov    DWORD PTR [ebx],0x69ee7f74
  426307:	adc    al,0x15
  426309:	jb     0x4262e1
  42630b:	cld    
  42630c:	aad    0x60
  42630e:	stos   DWORD PTR es:[edi],eax
  42630f:	mov    es:0xfe2c3134,eax
  426315:	les    edx,FWORD PTR ds:[esi]
  426318:	or     al,ch
  42631a:	adc    bl,BYTE PTR [edx]
  42631c:	clc    
  42631d:	nop
  42631e:	pop    edx
  42631f:	push   es
  426320:	pop    ebp
  426321:	xchg   esi,eax
  426322:	cmc    
  426323:	sub    BYTE PTR [esi],ah
  426325:	or     eax,0x57a317c9
  42632a:	pop    esp
  42632b:	lea    eax,[eax+edi*1+0x2a]
  42632f:	imul   eax,eax,0xd
  426332:	dec    ebp
  426333:	mov    WORD PTR [ebx-0x63],ss
  426336:	mov    ch,0xcc
  426338:	add    DWORD PTR cs:[edx+0x4a],edx
  42633c:	sub    eax,0x6b4c7a10
  426341:	iret   
  426342:	sub    eax,0x2bbb8269
  426347:	jle    0x42630e
  426349:	lock ror BYTE PTR [eax],0x8f
  42634d:	push   0xffffffaa
  42634f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426350:	mov    eax,ds:0x99d8922c
  426355:	push   0x55
  426357:	ss out dx,al
  426359:	xchg   ebp,eax
  42635a:	int3   
  42635b:	pop    es
  42635c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42635d:	imul   ecx,DWORD PTR [eax+0x5f00da0a],0x19
  426364:	sbb    al,0x7
  426366:	ss sahf 
  426368:	ja     0x4263e0
  42636a:	or     al,0x54
  42636c:	mov    al,ds:0x8a4f641
  426371:	addr16 iret 
  426373:	xor    dl,ch
  426375:	loop   0x4263ce
  426377:	and    eax,0xcca55e88
  42637c:	adc    ecx,0xaa2f38fd
  426382:	xor    DWORD PTR [esi+0x39796732],esi
  426388:	mov    ds:0x80c8df0c,al
  42638d:	outs   dx,BYTE PTR ds:[esi]
  42638e:	test   BYTE PTR gs:[esi+0xddd16bd],bh
  426395:	add    al,0x6f
  426397:	sub    ebp,0x69
  42639a:	rol    WORD PTR [esp+edx*1],0xb8
  42639f:	or     al,0x78
  4263a1:	pop    es
  4263a2:	xchg   ebp,eax
  4263a3:	jmp    0xe535:0xfb055e0
  4263aa:	ja     0x426368
  4263ac:	jne    0x426348
  4263ae:	and    BYTE PTR [edx+ebx*4],ah
  4263b1:	push   ebp
  4263b2:	mov    bh,0x43
  4263b4:	and    BYTE PTR [ebp+0x34],dh
  4263b7:	mov    DWORD PTR [ecx+0x6366f77f],ecx
  4263bd:	scas   eax,DWORD PTR es:[edi]
  4263be:	out    dx,eax
  4263bf:	xchg   edx,eax
  4263c0:	and    DWORD PTR [edi+0x1b],edi
  4263c3:	jge    0x426401
  4263c5:	sar    bh,0x27
  4263c8:	mov    dh,0x7b
  4263ca:	cli    
  4263cb:	and    esp,DWORD PTR [eax]
  4263cd:	mov    edx,0x7b5b199f
  4263d2:	into   
  4263d3:	leave  
  4263d4:	inc    eax
  4263d5:	mov    ds:0x3b2130c0,al
  4263da:	clc    
  4263db:	jmp    FWORD PTR [eax+0x425440de]
  4263e1:	sbb    esp,DWORD PTR [ebp-0xe]
  4263e4:	ficomp WORD PTR [ebp+0x3fb53cc9]
  4263ea:	aas    
  4263eb:	push   0x4177e90b
  4263f0:	cmp    cl,BYTE PTR [eax]
  4263f2:	das    
  4263f3:	sbb    al,0x5a
  4263f5:	loope  0x4263e0
  4263f7:	push   es
  4263f8:	mov    edi,0x48458e29
  4263fd:	arpl   WORD PTR [edx-0x10a91f06],dx
  426403:	aaa    
  426404:	(bad)  
  426406:	je     0x42644f
  426408:	mov    dl,0xf7
  42640a:	and    edx,ecx
  42640c:	hlt    
  42640d:	sub    DWORD PTR ds:0xc93c2df,esp
  426413:	and    esp,ecx
  426415:	div    DWORD PTR [ecx+edx*2+0x45]
  426419:	sti    
  42641a:	cmp    BYTE PTR [esi-0x2c],cl
  42641d:	lods   eax,DWORD PTR ds:[esi]
  42641e:	mov    ecx,0x4c20d183
  426423:	or     ecx,edx
  426425:	int    0xf0
  426427:	not    BYTE PTR [edx+0x4d]
  42642a:	jnp    0x426478
  42642c:	(bad)  
  42642d:	adc    ebp,edi
  42642f:	mov    ah,0x58
  426431:	clc    
  426432:	pop    esp
  426433:	jl     0x426422
  426435:	cmp    cl,BYTE PTR [edx-0x2]
  426438:	adc    DWORD PTR [eax],edi
  42643a:	sub    DWORD PTR ds:0xe9219b65,edi
  426440:	jmp    0x18d:0x40c573fc
  426447:	lods   al,BYTE PTR ds:[esi]
  426448:	sbb    BYTE PTR [ebx+edi*4+0x4159dc19],cl
  42644f:	scas   eax,DWORD PTR es:[edi]
  426450:	gs aad 0xad
  426453:	mov    edi,0x9d4d628a
  426458:	and    DWORD PTR [esi+esi*1],ebp
  42645b:	push   0xffffff86
  42645d:	push   esp
  42645e:	jbe    0x426494
  426460:	and    bl,al
  426462:	cli    
  426463:	mov    ecx,DWORD PTR [ebx+0x20d4f4de]
  426469:	mov    bl,0x39
  42646b:	sub    eax,0xf9d09ab2
  426470:	stc    
  426471:	mov    edi,0x4d8a2114
  426476:	sub    DWORD PTR [ecx-0x29a0b5e7],eax
  42647c:	mov    esi,DWORD PTR [eax+0x4450fc6]
  426482:	retf   0x9d13
  426485:	ror    BYTE PTR [esp+esi*4+0xc],cl
  426489:	sbb    al,0xbe
  42648b:	mov    dl,0x74
  42648d:	cs mov dl,al
  426490:	fs jnp 0x4264e3
  426493:	clc    
  426494:	sbb    al,0x5d
  426496:	imul   esi,esp,0xffffffb2
  426499:	in     eax,dx
  42649a:	cmc    
  42649b:	xor    BYTE PTR [edx+0x25],0x88
  42649f:	mov    BYTE PTR [ebx+0x66],dl
  4264a2:	(bad)  
  4264a3:	mov    al,0x27
  4264a5:	enter  0xe76c,0xef
  4264a9:	imul   esi,esi,0x23f95e44
  4264af:	lldt   WORD PTR [ebx]
  4264b2:	mov    ebx,0xfca2438c
  4264b7:	hlt    
  4264b8:	push   0x6c
  4264ba:	popa   
  4264bb:	pop    esi
  4264bc:	popa   
  4264bd:	and    ebx,eax
  4264bf:	jmp    0x4264ff
  4264c1:	dec    ebx
  4264c2:	(bad)  
  4264c3:	fsubr  QWORD PTR [eax+0x36eea12b]
  4264c9:	or     BYTE PTR [ebx+0x4aa30515],al
  4264cf:	aad    0xad
  4264d1:	es iret 
  4264d3:	cmp    DWORD PTR [edi],ebx
  4264d5:	(bad)
  4264d9:	sub    al,0x2b
  4264db:	outs   dx,DWORD PTR ds:[esi]
  4264dc:	add    bh,ah
  4264de:	test   BYTE PTR [edx],bh
  4264e0:	ins    BYTE PTR es:[edi],dx
  4264e1:	inc    esp
  4264e2:	fdivr  st(2),st
  4264e4:	es stos BYTE PTR es:[edi],al
  4264e6:	loop   0x42646a
  4264e8:	pop    ecx
  4264e9:	call   0xd4611397
  4264ee:	add    eax,0xae479526
  4264f3:	and    edi,DWORD PTR [edi-0x16512b06]
  4264f9:	mov    edx,0xf13cca44
  4264fe:	mov    bh,ch
  426500:	out    0x22,al
  426502:	add    esi,ebp
  426504:	mov    al,BYTE PTR [eax-0x23]
  426507:	xchg   esi,eax
  426508:	(bad)  
  426509:	leave  
  42650a:	cmp    al,0xe5
  42650c:	jno    0x426584
  42650e:	mov    al,0x1d
  426510:	and    bh,BYTE PTR [ebx]
  426512:	sti    
  426513:	out    0x53,al
  426515:	sub    DWORD PTR [edx-0x22165b34],0x3495226f
  42651f:	es dec eax
  426521:	mov    edx,0x73d24158
  426526:	and    BYTE PTR [ebx+0x7983224],bh
  42652c:	shr    DWORD PTR [ecx],0x62
  42652f:	xchg   ebx,eax
  426530:	cs enter 0x9a80,0xa5
  426535:	sahf   
  426536:	cmp    al,0xec
  426538:	stos   BYTE PTR es:[edi],al
  426539:	lods   al,BYTE PTR ds:[esi]
  42653a:	jle    0x4264f8
  42653c:	cmp    eax,0xad4927a3
  426541:	cmp    BYTE PTR [esi+ebx*1],bl
  426544:	mov    dh,BYTE PTR [edi+0x38]
  426547:	dec    edi
  426548:	ret    
  426549:	push   esp
  42654a:	retf   0x225b
  42654d:	or     ebx,DWORD PTR [edx+0x411f77db]
  426553:	sbb    esi,DWORD PTR [ebx+0x5d525574]
  426559:	mov    bh,0xcc
  42655b:	je     0x42659d
  42655d:	mov    ch,0xd0
  42655f:	paddusw mm0,QWORD PTR [esi]
  426562:	hlt    
  426563:	pop    ecx
  426564:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426565:	in     al,0xb0
  426567:	mov    bl,0x1a
  426569:	add    al,0x85
  42656b:	je     0x4264f2
  42656d:	movlps xmm6,QWORD PTR [edx-0x79]
  426571:	or     DWORD PTR ds:0xa736f602,ebp
  426577:	mov    ecx,0xeb7810d
  42657c:	dec    eax
  42657d:	lea    edi,[esi+eiz*1-0x41dbbace]
  426584:	sahf   
  426585:	mov    esi,DWORD PTR [eax-0x4d3ca0f4]
  42658b:	mov    edi,0x5c17b38d
  426590:	mov    al,ds:0x475d64f5
  426595:	pop    ds
  426596:	mov    ds:0x8eda6522,eax
  42659b:	popa   
  42659c:	cs dec ebp
  42659e:	mov    al,ds:0xdceca687
  4265a3:	outs   dx,WORD PTR ds:[esi]
  4265a5:	push   edx
  4265a6:	dec    esp
  4265a7:	test   DWORD PTR [ecx],0x1897e616
  4265ad:	push   edx
  4265ae:	inc    ecx
  4265af:	mov    ecx,0x6ce14053
  4265b4:	pop    esp
  4265b5:	xor    DWORD PTR [edx-0x1d],esp
  4265b8:	sub    dh,BYTE PTR [esi+edx*1-0x76e86bda]
  4265bf:	mov    eax,ds:0x8db1aba1
  4265c4:	cli    
  4265c5:	int    0x49
  4265c7:	xchg   DWORD PTR [ebx],edi
  4265c9:	adc    dh,bh
  4265cb:	inc    ecx
  4265cc:	int    0x1b
  4265ce:	xchg   ebp,eax
  4265cf:	iret   
  4265d0:	js     0x42664b
  4265d2:	xchg   BYTE PTR [ebp-0x40],ch
  4265d5:	(bad)  
  4265d6:	lods   al,BYTE PTR ds:[esi]
  4265d7:	shl    WORD PTR [ecx],1
  4265da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4265db:	clc    
  4265dc:	test   al,0x37
  4265de:	mov    al,ds:0x95df3279
  4265e3:	lahf   
  4265e4:	dec    eax
  4265e5:	out    0xe7,al
  4265e7:	cmp    eax,0x76d94632
  4265ec:	pop    ds
  4265ed:	(bad)  
  4265ee:	cs mov ch,0x58
  4265f1:	clc    
  4265f2:	mov    ebp,0x50babe22
  4265f7:	mov    BYTE PTR [edi+esi*1+0x3b],bh
  4265fb:	call   0xae40:0xf27d8a80
  426602:	sub    DWORD PTR [eax+esi*4+0xe],edx
  426606:	pop    esi
  426607:	sub    edi,esi
  426609:	into   
  42660a:	push   eax
  42660b:	in     al,dx
  42660c:	jno    0x42663a
  42660e:	in     al,dx
  42660f:	mov    ?,esi
  426611:	cwde   
  426612:	push   esi
  426613:	inc    ebx
  426614:	add    al,0x69
  426616:	mov    dh,0x57
  426618:	or     BYTE PTR [edi],cl
  42661a:	enter  0xd010,0x8b
  42661e:	push   eax
  42661f:	inc    ecx
  426620:	xchg   ecx,eax
  426621:	not    BYTE PTR [eax+0x2f]
  426624:	shl    DWORD PTR [ebx+0x30],cl
  426627:	arpl   WORD PTR ds:0xe1a4b697,ax
  42662d:	pop    ds
  42662e:	mov    dl,bl
  426630:	ja     0x426623
  426632:	scas   eax,DWORD PTR es:[edi]
  426633:	push   ss
  426634:	nop
  426635:	sbb    ecx,DWORD PTR [esi+0x13eef964]
  42663b:	out    0xbe,al
  42663d:	int    0x14
  42663f:	mov    ds:0xd6615a79,al
  426644:	or     dl,BYTE PTR [ebx-0x11a9b6aa]
  42664a:	adc    DWORD PTR [ebx-0x2957eb25],eax
  426650:	xlat   BYTE PTR ds:[ebx]
  426651:	out    0x71,eax
  426653:	adc    eax,0xcd402954
  426658:	push   0xffffff81
  42665a:	std    
  42665b:	jne    0x426645
  42665d:	dec    eax
  42665e:	(bad)  
  42665f:	xor    BYTE PTR [bp+si-0x51],dl
  426663:	add    BYTE PTR [esi-0x43eb65b3],al
  426669:	popf   
  42666a:	pop    eax
  42666b:	xchg   ecx,eax
  42666c:	pop    esp
  42666d:	loope  0x4266ae
  42666f:	fisttp QWORD PTR [esi+0x40c0db2d]
  426675:	adc    al,0xb0
  426677:	cmc    
  426678:	arpl   WORD PTR [ecx],bx
  42667a:	mov    edx,0x48ffe32d
  42667f:	ret    
  426680:	je     0x42669b
  426682:	lock mov BYTE PTR [edx-0x7b],0xfd
  426687:	sahf   
  426688:	loope  0x4266fd
  42668a:	mov    ebp,0x4c51e467
  42668f:	nop
  426690:	sub    edi,DWORD PTR [ecx]
  426692:	xor    edi,DWORD PTR [ecx]
  426694:	dec    ecx
  426695:	iret   
  426696:	daa    
  426697:	loope  0x426692
  426699:	mov    ebx,0x8ee1b9d6
  42669e:	adc    BYTE PTR [edi+0x4d],bl
  4266a1:	pop    edx
  4266a2:	sub    BYTE PTR [ebx],0xa0
  4266a5:	popa   
  4266a6:	sub    edx,DWORD PTR [eax+0x10ceb970]
  4266ac:	mov    eax,0xccb0374e
  4266b1:	mul    BYTE PTR [edi]
  4266b3:	neg    DWORD PTR [edi]
  4266b5:	xor    eax,0xa89d3543
  4266ba:	cmp    cl,cl
  4266bc:	xchg   esp,eax
  4266bd:	cdq    
  4266be:	add    BYTE PTR [edi+0x13],bl
  4266c1:	in     al,0xf2
  4266c3:	pop    es
  4266c4:	xor    edi,DWORD PTR [eax+0x70fba600]
  4266ca:	ror    BYTE PTR [esi-0x6e855e6a],1
  4266d0:	out    0x4,eax
  4266d2:	dec    esi
  4266d3:	jmp    0x4266f7
  4266d5:	ins    DWORD PTR es:[edi],dx
  4266d6:	mov    al,ds:0x39edffd1
  4266db:	mov    dh,0x5f
  4266dd:	add    eax,0xfd848090
  4266e2:	cld    
  4266e3:	bound  ebp,QWORD PTR [ecx-0x12]
  4266e6:	loopne 0x42673e
  4266e8:	cmp    al,0xa3
  4266ea:	and    al,0xdc
  4266ec:	jl     0x426689
  4266ee:	scas   eax,DWORD PTR es:[edi]
  4266ef:	mov    bh,0x96
  4266f1:	lds    esp,FWORD PTR [edx-0x2183c700]
  4266f7:	add    dl,BYTE PTR [ebx+0x506fc18]
  4266fd:	mov    al,0x52
  4266ff:	call   0x63fe5c3c
  426704:	sti    
  426705:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426706:	cli    
  426707:	shr    BYTE PTR [ebx+0x27],cl
  42670a:	scas   eax,DWORD PTR es:[edi]
  42670b:	and    dl,0xcf
  42670e:	jbe    0x426694
  426710:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426711:	mov    edx,0x503aea48
  426716:	pop    eax
  426717:	in     eax,dx
  426718:	imul   edi
  42671a:	cs pop edx
  42671c:	cwde   
  42671d:	fst    QWORD PTR [ecx-0x15]
  426720:	jo     0x42676d
  426722:	xlat   BYTE PTR ds:[ebx]
  426723:	and    esp,DWORD PTR [ebx-0x175a1097]
  426729:	or     DWORD PTR [esi+0x61],ecx
  42672c:	out    dx,al
  42672d:	adc    al,0x82
  42672f:	jle    0x426714
  426731:	xchg   esp,eax
  426732:	xor    ecx,edi
  426734:	cmp    ecx,DWORD PTR [eax+0x70]
  426737:	rol    DWORD PTR [ebp-0x40],0xa3
  42673b:	or     BYTE PTR [edx+0x337bc135],dh
  426741:	scas   eax,DWORD PTR es:[edi]
  426742:	sub    al,0x9d
  426744:	sub    al,0x6a
  426746:	jo     0x426747
  426748:	in     eax,dx
  426749:	push   edi
  42674a:	mov    ch,0x89
  42674c:	int3   
  42674d:	jmp    0x42674d
  42674f:	sbb    BYTE PTR [eax+edx*2+0x4134cb4f],0x3b
  426757:	xchg   edx,eax
  426758:	shr    DWORD PTR [ebp-0x47],0xcc
  42675c:	sti    
  42675d:	cmp    DWORD PTR [ecx],edx
  42675f:	pop    esi
  426760:	push   ss
  426761:	mov    esi,0x7ff6e7b6
  426766:	(bad)  
  426767:	lds    esp,FWORD PTR [ebp+eiz*8-0x4c407505]
  42676e:	sbb    eax,0x95c87bfd
  426773:	push   0xb1cd6549
  426778:	xor    eax,0x88f61438
  42677d:	or     DWORD PTR [ebx],0x60
  426780:	shl    DWORD PTR [eax+0x7c0d40ea],0x7
  426787:	pusha  
  426788:	mov    al,BYTE PTR [esi+0x5ae4]
  42678e:	add    BYTE PTR [eax],al
  426790:	add    BYTE PTR [eax],al
  426792:	and    DWORD PTR [ecx+ebp*8],0xfbdfed93
  426799:	ss cwde 
  42679b:	in     eax,0x27
  42679d:	inc    esp
  42679e:	add    DWORD PTR [esi-0x207aa714],esi
  4267a4:	add    DWORD PTR [eax],eax
  4267a6:	repnz add al,0x0
  4267a9:	add    dh,dh
  4267ab:	shr    edx,0x9
  4267ae:	cmp    bl,BYTE PTR [ecx+0x6e]
  4267b1:	loopne 0x4267d7
  4267b3:	add    eax,DWORD PTR [ebp+0x5e]
  4267b6:	ror    cl,1
  4267b8:	dec    ebx
  4267b9:	dec    eax
  4267ba:	pop    ebx
  4267bb:	in     al,dx
  4267bc:	add    eax,0x2194a19d
  4267c1:	idiv   ch
  4267c3:	ins    BYTE PTR es:[edi],dx
  4267c4:	rcl    BYTE PTR [ebp+0x3dc24a06],0xa4
  4267cb:	clc    
  4267cc:	pop    eax
  4267cd:	outs   dx,DWORD PTR ds:[esi]
  4267ce:	dec    edx
  4267cf:	pop    edi
  4267d0:	cmc    
  4267d1:	and    dh,ah
  4267d3:	cmp    DWORD PTR [ecx],ebx
  4267d5:	dec    eax
  4267d6:	jecxz  0x426796
  4267d8:	ja     0x4267ee
  4267da:	adc    esp,DWORD PTR [esi-0x3c]
  4267dd:	xchg   edx,eax
  4267de:	xchg   ecx,edx
  4267e0:	aas    
  4267e1:	daa    
  4267e2:	mov    esi,0x5e9db684
  4267e7:	mov    esp,0x9cafcc78
  4267ec:	push   eax
  4267ed:	jmp    0x661c0e9f
  4267f2:	xchg   ebp,eax
  4267f3:	test   al,0xd8
  4267f5:	imul   BYTE PTR [ecx+edi*4-0x54483d9d]
  4267fc:	pusha  
  4267fd:	xchg   ebx,eax
  4267fe:	rol    BYTE PTR [ebp+0x217ae365],0x86
  426805:	jbe    0x426814
  426807:	repz and dh,ah
  42680a:	xor    DWORD PTR [edx+edi*4],esi
  42680d:	popa   
  42680e:	scas   eax,DWORD PTR es:[edi]
  42680f:	mov    bh,0xd2
  426811:	push   ss
  426812:	mov    bl,0x11
  426814:	es pop ds
  426816:	dec    ebp
  426817:	xor    edx,DWORD PTR ds:0xfb96308d
  42681d:	mov    dl,0x54
  42681f:	mov    cs,WORD PTR [edx-0x28]
  426822:	push   ss
  426823:	scas   al,BYTE PTR es:[edi]
  426824:	popf   
  426825:	mov    ?,WORD PTR [edi-0x75]
  426828:	call   0x7a36:0xa2a027fb
  42682f:	inc    esp
  426830:	push   esi
  426831:	mov    ch,dl
  426833:	inc    eax
  426834:	leave  
  426835:	xchg   DWORD PTR [ebx+0x10],eax
  426838:	(bad)  
  426839:	popf   
  42683a:	repnz iret 
  42683c:	popf   
  42683d:	lahf   
  42683e:	inc    ecx
  42683f:	dec    edx
  426840:	push   esi
  426841:	jb     0x4267fe
  426843:	jb     0x426807
  426845:	jne    0x4268a6
  426847:	jl     0x4268be
  426849:	test   al,0xf
  42684b:	push   0xfedc251a
  426850:	sub    al,0x2
  426852:	cmc    
  426853:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426854:	cli    
  426855:	popf   
  426856:	lods   eax,DWORD PTR ds:[esi]
  426857:	xchg   ebp,eax
  426858:	mov    ss,WORD PTR [eax-0x544703b5]
  42685e:	xchg   ebp,eax
  42685f:	(bad)  
  426860:	cdq    
  426861:	fild   WORD PTR [edx+0x2]
  426864:	push   cs
  426865:	fsub   st,st(7)
  426867:	cmp    ah,0xe9
  42686a:	xchg   edx,eax
  42686b:	call   0x585dfb53
  426870:	push   ebx
  426871:	repnz and edx,DWORD PTR ds:0xf6388050
  426878:	xchg   esi,eax
  426879:	xchg   ebp,eax
  42687a:	pushf  
  42687b:	bound  ecx,QWORD PTR [edi+0x4f67db14]
  426881:	cmp    ch,BYTE PTR [edi]
  426883:	cs jl  0x4268c5
  426886:	fsubp  st(3),st
  426888:	xchg   esi,eax
  426889:	push   0xcd95add1
  42688e:	jbe    0x4268ad
  426890:	dec    ebx
  426891:	pop    edi
  426892:	mov    dl,0x62
  426894:	ins    BYTE PTR es:[edi],dx
  426895:	test   eax,0xb85ca5d5
  42689a:	stos   BYTE PTR es:[edi],al
  42689b:	js     0x42687f
  42689d:	aam    0xf2
  42689f:	idiv   BYTE PTR [esp+eiz*2+0x25]
  4268a3:	xchg   ebp,eax
  4268a4:	icebp  
  4268a5:	push   ss
  4268a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4268a7:	in     eax,0x45
  4268a9:	arpl   WORD PTR [eax-0x33],cx
  4268ac:	fiadd  WORD PTR [ebp-0x34032e31]
  4268b2:	popa   
  4268b3:	mov    ah,BYTE PTR [edx+0x20]
  4268b6:	(bad)  
  4268b7:	jl     0x4268c6
  4268b9:	adc    eax,0x9690b562
  4268be:	mov    ebx,0xae449cda
  4268c3:	sub    BYTE PTR [esi+ebx*8],0xb9
  4268c7:	jge    0x4268d7
  4268c9:	mov    ah,0x72
  4268cb:	leave  
  4268cc:	xor    ebx,DWORD PTR [eax-0x522efd19]
  4268d2:	stos   BYTE PTR es:[edi],al
  4268d3:	rcr    BYTE PTR [ebp+0x8246259],cl
  4268d9:	pop    es
  4268da:	popf   
  4268db:	mov    al,ds:0x9174f8fc
  4268e0:	(bad)  
  4268e1:	icebp  
  4268e2:	and    esi,ecx
  4268e4:	push   0xa6d2e08a
  4268e9:	fwait
  4268ea:	sti    
  4268eb:	inc    ebx
  4268ec:	(bad)  
  4268ed:	jmp    0x4268b3
  4268ef:	setnp  BYTE PTR [edi]
  4268f2:	and    eax,0x8fe820d2
  4268f7:	clc    
  4268f8:	cmp    BYTE PTR [edi+0x282275fd],ah
  4268fe:	adc    ecx,DWORD PTR [ebp+eax*1+0x4f018327]
  426905:	clc    
  426906:	cdq    
  426907:	cmp    esp,edi
  426909:	jecxz  0x4268fb
  42690b:	mov    fs,WORD PTR [ebp+0x636b02af]
  426911:	loop   0x4268ab
  426913:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426914:	loop   0x42697b
  426916:	sub    al,0xf3
  426918:	mov    eax,0x3c334479
  42691d:	cmp    esi,esi
  42691f:	popf   
  426920:	jns    0x42695f
  426922:	das    
  426923:	les    esi,FWORD PTR [ecx-0x70a72bb4]
  426929:	pop    es
  42692a:	jmp    FWORD PTR [edx+0x42]
  42692d:	lods   eax,DWORD PTR ds:[esi]
  42692e:	mov    dh,0x65
  426930:	or     ebp,DWORD PTR [edi+esi*2+0x36]
  426934:	jne    0x4268e7
  426936:	add    eax,DWORD PTR [esi-0x68]
  426939:	in     al,0xfb
  42693b:	sbb    BYTE PTR [edx+eiz*4+0x4e],cl
  42693f:	das    
  426940:	sbb    ebx,DWORD PTR [edx]
  426942:	inc    eax
  426943:	sahf   
  426944:	cmp    eax,DWORD PTR [ecx-0x22fd6037]
  42694a:	push   0xade7a4c0
  42694f:	or     BYTE PTR [esi-0x63],0x23
  426953:	std    
  426954:	push   esp
  426955:	call   0x6288:0xb286c8d3
  42695c:	and    eax,0x95814276
  426961:	cmp    DWORD PTR [ecx+eax*1-0x6e360ca5],ebx
  426968:	iret   
  426969:	mul    ch
  42696b:	jg     0x426950
  42696d:	mov    eax,ds:0x2a09d37c
  426972:	sub    edx,DWORD PTR [eax-0x3]
  426975:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426977:	(bad)  
  426978:	enter  0x1ca7,0x62
  42697c:	cmp    al,0x79
  42697e:	xlat   BYTE PTR ds:[ebx]
  42697f:	out    dx,eax
  426980:	add    ah,bl
  426982:	xor    DWORD PTR [edi-0x5200c560],esp
  426988:	pop    es
  426989:	or     DWORD PTR [ebx+0x5e],ecx
  42698c:	data16 (bad) 
  42698f:	inc    ebp
  426990:	add    dl,al
  426992:	jae    0x426914
  426994:	dec    ebx
  426995:	out    dx,eax
  426996:	dec    edi
  426997:	nop
  426998:	mov    fs,WORD PTR [eax-0x63]
  42699b:	sub    esi,DWORD PTR [edi+0x3b]
  42699e:	pusha  
  42699f:	inc    ebp
  4269a0:	cdq    
  4269a1:	push   cs
  4269a2:	setne  BYTE PTR ds:0xed838cd2
  4269a9:	in     eax,0x3a
  4269ab:	ds hlt 
  4269ad:	xchg   esi,eax
  4269ae:	call   0xa219:0x6e7f75b1
  4269b5:	sahf   
  4269b6:	jge    0x4269dc
  4269b8:	jmp    0x20b6fc9
  4269bd:	daa    
  4269be:	inc    eax
  4269bf:	retf   
  4269c0:	fldcw  WORD PTR [edx+edx*2-0x6769c0fe]
  4269c7:	mov    eax,0x7aa2ccfd
  4269cc:	js     0x426971
  4269ce:	sahf   
  4269cf:	add    BYTE PTR [edi-0x7296b7ce],bh
  4269d5:	stos   DWORD PTR es:[edi],eax
  4269d6:	jae    0x4269bb
  4269d8:	jmp    0x4488:0x977d4b30
  4269df:	sahf   
  4269e0:	(bad)  
  4269e2:	clc    
  4269e3:	out    dx,eax
  4269e4:	xor    DWORD PTR [esi],0xfffffff5
  4269e7:	mov    bh,0x1d
  4269e9:	div    cl
  4269eb:	cmp    BYTE PTR [esi-0x6a],0x1e
  4269ef:	jge    0x426993
  4269f1:	adc    BYTE PTR [edx-0x16e51d1d],0x41
  4269f8:	push   esi
  4269f9:	dec    ebp
  4269fa:	(bad)  
  4269fb:	loopne 0x426a21
  4269fd:	stc    
  4269fe:	push   0xfffffffb
  426a00:	pop    ss
  426a01:	icebp  
  426a02:	sub    DWORD PTR [ebx+0x1a455b17],0xffffffd8
  426a09:	mov    ds:0xe18c67f5,eax
  426a0e:	cmp    eax,0x9d092e2f
  426a13:	add    al,0x23
  426a15:	leave  
  426a16:	in     al,dx
  426a17:	test   cl,al
  426a19:	das    
  426a1a:	xchg   BYTE PTR [esi+0x66f03762],bl
  426a20:	fs and al,0x48
  426a23:	jecxz  0x426a33
  426a25:	add    ch,ah
  426a27:	push   0xe1bd27f0
  426a2c:	mov    bh,0x3e
  426a2e:	pushf  
  426a2f:	lods   eax,DWORD PTR ds:[esi]
  426a30:	popf   
  426a31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426a32:	loope  0x426a6f
  426a34:	shl    BYTE PTR [ecx-0x475ff23],cl
  426a3a:	icebp  
  426a3b:	js     0x426a70
  426a3d:	cmp    dl,BYTE PTR [edi]
  426a3f:	in     al,dx
  426a40:	fsubr  st(3),st
  426a42:	inc    esi
  426a43:	xchg   esp,eax
  426a44:	mov    eax,0x6e6b74fe
  426a49:	mov    edx,0x199edb30
  426a4e:	adc    BYTE PTR [eax],0x3c
  426a51:	xchg   esi,eax
  426a52:	push   esp
  426a53:	xchg   esi,eax
  426a54:	pop    edi
  426a55:	mov    ebp,0xc8b4701f
  426a5a:	div    ebp
  426a5c:	and    eax,0x33cc627b
  426a61:	jge    0x426a18
  426a63:	or     BYTE PTR [ebx+0x67d9e210],dl
  426a69:	add    dh,bh
  426a6b:	sahf   
  426a6c:	mov    eax,ds:0xbddcfe40
  426a71:	loop   0x426ae7
  426a73:	aas    
  426a74:	cmc    
  426a75:	aaa    
  426a76:	jne    0x426a6e
  426a78:	call   0xf279:0x8b6703ca
  426a7f:	mov    dl,0x69
  426a81:	lds    esp,FWORD PTR [ebx-0x74]
  426a84:	fisttp DWORD PTR [edx+0x4d]
  426a87:	stos   BYTE PTR es:[edi],al
  426a88:	xchg   DWORD PTR [ebx],edx
  426a8a:	or     BYTE PTR [esi],al
  426a8c:	xchg   esp,eax
  426a8d:	inc    esp
  426a8e:	jge    0x426a79
  426a90:	mov    ebp,0xebb9f5d8
  426a95:	scas   al,BYTE PTR es:[edi]
  426a96:	xlat   BYTE PTR ds:[ebx]
  426a97:	push   es
  426a98:	(bad)  
  426a99:	or     BYTE PTR [esi+0x232a48ec],al
  426a9f:	mov    esi,0x58e89b4e
  426aa4:	(bad)  
  426aa5:	cli    
  426aa6:	sbb    edx,0xe06e170b
  426aac:	mov    edi,DWORD PTR [edx-0x4fa21cc6]
  426ab2:	or     edx,DWORD PTR ds:0xe074e6a
  426ab8:	sbb    BYTE PTR [esp+edx*4],dl
  426abb:	or     eax,0x4bd5e45
  426ac0:	jno    0x426ae6
  426ac2:	arpl   WORD PTR [edi-0x42],sp
  426ac5:	push   es
  426ac6:	(bad)  
  426ac7:	xor    DWORD PTR [eax+0x2a],ebx
  426aca:	dec    ebx
  426acb:	daa    
  426acc:	xchg   edi,eax
  426acd:	sub    DWORD PTR [edi],edx
  426acf:	stos   DWORD PTR es:[edi],eax
  426ad0:	inc    ebp
  426ad1:	rcr    DWORD PTR [edi],1
  426ad3:	js     0x426a9b
  426ad5:	push   edi
  426ad6:	sti    
  426ad7:	(bad)  
  426ad8:	repz pop esi
  426ada:	retf   0x48d5
  426add:	add    eax,0xd08a2c79
  426ae2:	xchg   ecx,eax
  426ae3:	pop    esp
  426ae4:	inc    esi
  426ae5:	mov    esp,ebx
  426ae7:	mov    eax,0x6074eea3
  426aec:	sub    DWORD PTR [edi],esp
  426aee:	ins    BYTE PTR es:[edi],dx
  426aef:	adc    ebx,DWORD PTR [edx-0x1e]
  426af2:	out    0x76,eax
  426af4:	xchg   ebp,eax
  426af5:	pop    ebx
  426af6:	xchg   ecx,eax
  426af7:	lods   al,BYTE PTR ds:[esi]
  426af8:	add    esp,eax
  426afa:	dec    ebx
  426afb:	pop    edx
  426afc:	cmp    DWORD PTR [edx],esp
  426afe:	lds    ebp,FWORD PTR [edx+0x5]
  426b01:	scas   eax,DWORD PTR es:[edi]
  426b02:	pop    ds
  426b03:	imul   esi,DWORD PTR fs:[edi+0x3e],0x92b82188
  426b0b:	add    al,0x92
  426b0d:	mov    edx,0x9728722c
  426b12:	inc    ecx
  426b13:	cmp    ecx,edi
  426b15:	imul   esi,edx,0x33
  426b18:	inc    ecx
  426b19:	arpl   WORD PTR [edx+0x75e809f6],cx
  426b1f:	xchg   esi,eax
  426b20:	mov    ebx,0xaef14bd2
  426b25:	mov    bl,BYTE PTR [ebp+0x1c]
  426b28:	or     dh,ah
  426b2a:	cmp    eax,0xa1575ea1
  426b2f:	cmp    al,0x5b
  426b31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426b32:	lds    esp,FWORD PTR [ebp+esi*4+0x28]
  426b36:	adc    al,0x13
  426b38:	mov    bh,0xc7
  426b3a:	adc    BYTE PTR [ebx-0x4c5fd5d6],ch
  426b40:	fsub   DWORD PTR [esi+0x17841265]
  426b46:	ret    
  426b47:	xchg   ecx,eax
  426b48:	ret    
  426b49:	xor    DWORD PTR [ecx],eax
  426b4b:	aaa    
  426b4c:	out    0x1d,al
  426b4e:	add    BYTE PTR [esi],dl
  426b50:	lahf   
  426b51:	push   ecx
  426b52:	scas   eax,DWORD PTR es:[edi]
  426b53:	ss cli 
  426b55:	mov    eax,gs:0x25169c94
  426b5b:	retf   0x5f02
  426b5e:	inc    eax
  426b5f:	dec    edi
  426b60:	fimul  DWORD PTR [edi+0x7006d02b]
  426b66:	sub    BYTE PTR [ecx+0x40f82170],0x9d
  426b6d:	mov    eax,0x89e7785c
  426b72:	stos   DWORD PTR es:[edi],eax
  426b73:	scas   eax,DWORD PTR es:[edi]
  426b74:	xor    BYTE PTR [eax-0x33],cl
  426b77:	aas    
  426b78:	pop    edi
  426b79:	(bad)  
  426b7b:	out    dx,eax
  426b7c:	mov    DWORD PTR ds:0xf020f723,edi
  426b82:	and    al,0x74
  426b84:	and    dh,BYTE PTR [eax+edi*2]
  426b87:	dec    edx
  426b88:	xchg   edx,eax
  426b89:	mov    bh,0x61
  426b8b:	jae    0x426b66
  426b8d:	jnp    0x426bbe
  426b8f:	jge    0x426b71
  426b91:	or     ah,ah
  426b93:	xchg   edx,eax
  426b94:	and    al,0x5
  426b96:	stos   BYTE PTR es:[edi],al
  426b97:	adc    BYTE PTR [edx+ecx*8-0x17],0x2f
  426b9c:	adc    dh,BYTE PTR [ebx]
  426b9e:	pop    esp
  426b9f:	bound  edx,QWORD PTR [edi]
  426ba1:	rcr    DWORD PTR [esi-0x5f],1
  426ba4:	pop    edx
  426ba5:	sbb    ebp,DWORD PTR [eax+0x64d37c50]
  426bab:	mov    DWORD PTR [ebx],0x3506d136
  426bb1:	test   eax,0xb40c775a
  426bb6:	mov    al,0xd8
  426bb8:	or     BYTE PTR [edi+0x442a4b93],0x2d
  426bbf:	jle    0x426b97
  426bc1:	clc    
  426bc2:	pop    es
  426bc3:	ins    BYTE PTR es:[edi],dx
  426bc4:	es pusha 
  426bc6:	add    ebx,esp
  426bc8:	repnz leave 
  426bca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426bcb:	data16 sahf 
  426bcd:	dec    ecx
  426bce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426bcf:	mov    ch,0x8a
  426bd1:	fs scas eax,DWORD PTR es:[edi]
  426bd3:	mov    al,ds:0x17fbb095
  426bd8:	mov    ds:0x6e4348d8,eax
  426bdd:	dec    ebp
  426bde:	sar    DWORD PTR [edi+edi*4+0x1bb1aee4],1
  426be5:	fwait
  426be6:	dec    esp
  426be7:	jae    0x426be6
  426be9:	add    eax,0x34daf989
  426bee:	sbb    ebp,ebx
  426bf0:	outs   dx,DWORD PTR ds:[esi]
  426bf1:	nop
  426bf2:	xor    ebx,DWORD PTR [edx+0x31ca530b]
  426bf8:	arpl   WORD PTR [edi+0x3a8029cd],ax
  426bfe:	add    ebp,ebp
  426c00:	inc    eax
  426c01:	pop    esi
  426c02:	xor    BYTE PTR [edx],0x9e
  426c05:	or     esi,edi
  426c07:	bound  eax,QWORD PTR [esi]
  426c09:	hlt    
  426c0a:	add    eax,0x3362bc9
  426c0f:	adc    eax,ebx
  426c11:	shl    ebx,cl
  426c13:	inc    BYTE PTR [eax+0xf]
  426c16:	jne    0x426c84
  426c18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426c19:	int    0x10
  426c1b:	inc    edi
  426c1c:	popa   
  426c1d:	jbe    0x426bf8
  426c1f:	mov    al,ds:0x16d1b4ba
  426c24:	cmp    eax,0xa9ab4087
  426c29:	fcomp  QWORD PTR [eax+ebx*2-0x2e]
  426c2d:	mov    ecx,0x15d77347
  426c32:	cmp    al,ah
  426c34:	repz arpl WORD PTR [ebx],ax
  426c37:	ss ds xchg ebx,eax
  426c3a:	in     eax,0x21
  426c3c:	mov    al,0xd3
  426c3e:	xchg   ebp,eax
  426c40:	pop    esi
  426c41:	scas   eax,DWORD PTR es:[edi]
  426c42:	mov    esp,0x5034e771
  426c47:	(bad)  
  426c48:	adc    al,0x6f
  426c4a:	xor    edi,DWORD PTR [ebx-0x45da36a6]
  426c50:	add    BYTE PTR [edx],cl
  426c52:	(bad)  
  426c53:	mov    eax,ds:0x20be40ad
  426c58:	xchg   esp,eax
  426c59:	cwde   
  426c5a:	push   eax
  426c5b:	pop    edi
  426c5c:	xor    eax,0xeb40d168
  426c61:	test   al,0x26
  426c63:	mov    dh,BYTE PTR [ecx+0x1673ec83]
  426c69:	adc    eax,esp
  426c6b:	sub    al,0x4a
  426c6d:	leave  
  426c6e:	adc    BYTE PTR [edx+ecx*4+0x1],bh
  426c72:	in     al,0x60
  426c74:	nop
  426c75:	jp     0x426c33
  426c77:	lds    esi,FWORD PTR [ebx]
  426c79:	lods   eax,DWORD PTR ds:[esi]
  426c7a:	and    eax,0x5f3fcccc
  426c7f:	push   ds
  426c80:	daa    
  426c81:	fldcw  WORD PTR [ecx]
  426c83:	dec    edx
  426c84:	lds    esp,FWORD PTR [edx-0x284ffec]
  426c8a:	or     ah,BYTE PTR [eax]
  426c8c:	xchg   esi,eax
  426c8d:	rcr    DWORD PTR [ecx+ebx*8],cl
  426c90:	lods   eax,DWORD PTR ds:[esi]
  426c91:	out    0x87,al
  426c93:	int3   
  426c94:	xchg   ecx,eax
  426c95:	inc    esp
  426c96:	pop    ecx
  426c97:	mov    eax,0xd025678d
  426c9c:	add    BYTE PTR [eax],al
  426c9e:	add    BYTE PTR [eax],al
  426ca0:	add    BYTE PTR [eax],al
  426ca2:	xchg   esi,eax
  426ca3:	rcr    BYTE PTR [edi],0x45
  426ca6:	pop    edi
  426ca7:	(bad)  
  426ca9:	rol    DWORD PTR [ebx-0x61771f0],cl
  426caf:	fcmovu st,st(3)
  426cb1:	das    
  426cb2:	ja     0x426c98
  426cb4:	add    DWORD PTR [eax],eax
  426cb6:	repnz add al,0x0
  426cb9:	add    bh,ch
  426cbb:	repnz push esp
  426cbd:	and    BYTE PTR [ebx-0x58],0xd5
  426cc1:	inc    esp
  426cc2:	add    dh,ah
  426cc4:	xor    al,0xe1
  426cc6:	ss ret 
  426cc8:	loope  0x426c4a
  426cca:	ja     0x426d23
  426ccc:	sbb    ch,BYTE PTR [edi]
  426cce:	sar    ebx,cl
  426cd0:	retf   
  426cd1:	xchg   ecx,edi
  426cd3:	sbb    dh,0x99
  426cd6:	mov    ah,0xc4
  426cd8:	pop    esp
  426cd9:	fs inc ebp
  426cdb:	jnp    0x426c7a
  426cdd:	dec    esi
  426cde:	push   ds
  426cdf:	push   edx
  426ce0:	cmp    ecx,eax
  426ce2:	call   0xcc13:0x744f26f9
  426ce9:	xchg   edx,eax
  426cea:	or     esi,DWORD PTR [edi+eax*2]
  426ced:	sbb    al,0xf3
  426cef:	(bad)
  426cf2:	in     eax,0xcb
  426cf4:	dec    ebp
  426cf5:	mov    ecx,0x3b82ee86
  426cfa:	jnp    0x426c9b
  426cfc:	sti    
  426cfd:	mov    ebp,0xe97edd0d
  426d02:	stos   BYTE PTR es:[edi],al
  426d03:	sbb    BYTE PTR [edi-0x6f],bl
  426d06:	popf   
  426d07:	xchg   BYTE PTR [ebp-0x5f],ah
  426d0a:	push   ebx
  426d0b:	inc    edx
  426d0c:	js     0x426d33
  426d0e:	cs lahf 
  426d10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426d11:	into   
  426d12:	sub    al,0xec
  426d14:	retf   
  426d15:	(bad)  
  426d16:	in     al,0x38
  426d18:	ins    DWORD PTR es:[edi],dx
  426d19:	cmp    bl,0xf0
  426d1c:	lods   al,BYTE PTR ds:[esi]
  426d1d:	int3   
  426d1e:	lea    edi,[esi+0x47]
  426d21:	mov    ah,0x1b
  426d23:	into   
  426d24:	mov    cl,0x59
  426d26:	(bad)  
  426d27:	nop
  426d28:	xrelease mov BYTE PTR ds:0xe2db0406,bh
  426d2f:	imul   esp,DWORD PTR [eax],0x2b
  426d32:	sbb    al,0x56
  426d34:	jns    0x426d12
  426d36:	add    BYTE PTR [ebp-0x108fc087],dl
  426d3c:	xor    DWORD PTR [ebx+0x3eb69ffd],0xd3068255
  426d46:	xor    eax,0x5a3301e
  426d4b:	and    DWORD PTR [edx-0x29115738],ebx
  426d51:	dec    esp
  426d52:	addr16 test eax,0xd65e4fb2
  426d58:	stc    
  426d59:	xor    eax,0x6bf7d63a
  426d5e:	cmp    dh,bh
  426d60:	sbb    DWORD PTR [ebp+0x435a530c],edx
  426d66:	add    BYTE PTR [edx+edx*1],bh
  426d69:	fs ins DWORD PTR es:[edi],dx
  426d6b:	push   0xffffffe0
  426d6d:	cmp    ah,ah
  426d6f:	dec    esp
  426d70:	popa   
  426d71:	call   0x2a56:0xdd3c1416
  426d78:	and    al,0xcf
  426d7a:	lds    eax,FWORD PTR [eax]
  426d7c:	aam    0xc7
  426d7e:	(bad)  
  426d7f:	lock push esp
  426d81:	jmp    0xa482:0xbbc2f867
  426d88:	jge    0x426d64
  426d8a:	sub    DWORD PTR [eax],esi
  426d8c:	cs (bad) 
  426d8f:	cmp    dl,dl
  426d91:	into   
  426d92:	mov    eax,ds:0x58b030a2
  426d97:	jge    0x426db0
  426d99:	clc    
  426d9a:	sbb    DWORD PTR [ecx-0x5009b17a],ebx
  426da0:	sub    esp,DWORD PTR [edi-0x51]
  426da3:	shl    BYTE PTR [edx+0x3a55d9c4],1
  426da9:	mov    ch,0x97
  426dab:	fwait
  426dac:	adc    DWORD PTR ds:0x9d36b9ef,eax
  426db2:	pop    ebx
  426db3:	and    al,0x74
  426db5:	fild   DWORD PTR [edi-0x3925ad5b]
  426dbb:	(bad)
  426dbe:	das    
  426dbf:	inc    ecx
  426dc0:	imul   BYTE PTR [ebx]
  426dc2:	and    eax,0xd92fabb3
  426dc7:	and    dl,bl
  426dc9:	scas   eax,DWORD PTR es:[edi]
  426dca:	gs pop eax
  426dcc:	and    DWORD PTR [esi+edx*1+0xf],eax
  426dd0:	pushf  
  426dd1:	sbb    ebp,DWORD PTR [ecx]
  426dd3:	cmp    eax,0xbc07e935
  426dd8:	sub    esp,DWORD PTR [ecx]
  426dda:	xor    ch,cl
  426ddc:	into   
  426ddd:	inc    ebx
  426dde:	xor    DWORD PTR [ebx-0x1abb8008],esp
  426de4:	jl     0x426e09
  426de6:	or     DWORD PTR [ebx+ebx*1-0x56],ecx
  426dea:	nop
  426deb:	push   cs
  426dec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426ded:	dec    eax
  426dee:	and    bh,dh
  426df0:	mov    eax,ds:0xcc8b0759
  426df5:	sar    BYTE PTR [esi+0x55],0x90
  426df9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426dfa:	sbb    DWORD PTR [ecx-0x1cd6f923],esp
  426e00:	adc    dl,bh
  426e02:	dec    ebx
  426e03:	adc    BYTE PTR [bp+di+0x2711],0xc1
  426e09:	mov    dl,0xc6
  426e0b:	adc    al,0x33
  426e0d:	push   0x61
  426e0f:	xlat   BYTE PTR ds:[ebx]
  426e10:	shl    DWORD PTR [ebp+0x45098542],1
  426e16:	sti    
  426e17:	push   edx
  426e18:	test   ah,ah
  426e1a:	pop    esi
  426e1b:	pop    edx
  426e1c:	jns    0x426e51
  426e1e:	data16 hlt 
  426e20:	lahf   
  426e21:	or     DWORD PTR ds:0x68566013,edx
  426e27:	push   esi
  426e28:	ss fdivrp st(7),st
  426e2b:	and    al,0xa9
  426e2d:	data16 xchg BYTE PTR [ecx-0x68],ah
  426e31:	pop    es
  426e32:	sub    eax,0xdf1bd7f7
  426e37:	mov    edi,0x904f78dc
  426e3c:	out    dx,al
  426e3d:	rol    esp,cl
  426e3f:	inc    esi
  426e40:	arpl   WORD PTR [ecx+0x2f],ax
  426e43:	mov    ds:0xd3d0b412,eax
  426e48:	adc    al,0x97
  426e4a:	jl     0x426e77
  426e4c:	jno    0x426eb4
  426e4e:	(bad)  
  426e4f:	stc    
  426e50:	ins    BYTE PTR es:[edi],dx
  426e51:	xor    eax,0x443d9c4b
  426e56:	cmp    esp,edx
  426e58:	mov    ds:0xe30ff1be,eax
  426e5d:	stos   DWORD PTR es:[edi],eax
  426e5e:	shl    BYTE PTR [edx],cl
  426e60:	inc    edi
  426e61:	xchg   esp,eax
  426e62:	sub    ebp,edx
  426e64:	jno    0x426e14
  426e66:	fwait
  426e67:	mov    ecx,edx
  426e69:	mov    eax,DWORD PTR [ebx+0x6f]
  426e6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426e6d:	push   edx
  426e6e:	inc    esi
  426e6f:	sub    BYTE PTR [esp+0x1de357a4],0xfb
  426e77:	fimul  WORD PTR [esp+edx*1-0x55df4eba]
  426e7e:	cwde   
  426e7f:	push   edx
  426e80:	ret    
  426e81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426e82:	push   esp
  426e83:	iret   
  426e84:	cmp    DWORD PTR [edx],0x73
  426e87:	fwait
  426e88:	cmp    dh,BYTE PTR [edx+0x41]
  426e8b:	sbb    edi,edx
  426e8d:	xchg   esp,eax
  426e8e:	daa    
  426e8f:	pop    es
  426e90:	sub    DWORD PTR [eax-0x53],0xeda8f1be
  426e97:	stos   DWORD PTR es:[edi],eax
  426e98:	pop    eax
  426e99:	fs sbb eax,0x8949d4e0
  426e9f:	xor    edx,DWORD PTR [esi]
  426ea1:	xor    al,BYTE PTR [edi+0x1d7681c5]
  426ea7:	test   BYTE PTR [edi],dl
  426ea9:	rol    DWORD PTR [edi-0x2c],1
  426eac:	test   eax,0x683fe3ca
  426eb1:	mov    bh,0xa7
  426eb3:	cwde   
  426eb4:	mov    ah,0x3f
  426eb6:	add    al,0xaf
  426eb8:	je     0x426ee4
  426eba:	dec    eax
  426ebb:	inc    ecx
  426ebc:	das    
  426ebd:	xor    BYTE PTR [esi+0x4d5b8ae8],dl
  426ec3:	cmc    
  426ec4:	call   eax
  426ec6:	(bad)  
  426ec7:	adc    al,0xe1
  426ec9:	scas   al,BYTE PTR es:[edi]
  426eca:	mov    fs,WORD PTR [ebx+edx*8+0x70507e1c]
  426ed1:	in     eax,dx
  426ed2:	loopne 0x426ef3
  426ed4:	bound  ebp,QWORD PTR [ebx]
  426ed6:	xchg   ebp,eax
  426ed7:	daa    
  426ed8:	xchg   edi,eax
  426ed9:	push   0xffffffa2
  426edb:	add    BYTE PTR [edx+edi*8],dh
  426ede:	or     BYTE PTR [edx-0x662ec647],bl
  426ee4:	push   cs
  426ee5:	mov    edi,0xb01ba884
  426eea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426eeb:	mov    edi,0xc398fff5
  426ef0:	es in  eax,dx
  426ef2:	xchg   edx,eax
  426ef3:	stos   BYTE PTR es:[edi],al
  426ef4:	mov    WORD PTR [ecx-0x2e],es
  426ef7:	push   eax
  426ef8:	mov    ?,esp
  426efa:	repz and BYTE PTR [ebx+0x7],dl
  426efe:	mov    esi,0xe84e213
  426f03:	xchg   edi,eax
  426f04:	(bad)  [ebx+edx*4]
  426f07:	push   esp
  426f08:	mul    BYTE PTR [esi+0x3b1b9c90]
  426f0e:	test   DWORD PTR [eax+0x1c],esi
  426f11:	sti    
  426f12:	out    0xfe,al
  426f14:	or     bl,BYTE PTR [edx]
  426f16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426f17:	mov    ecx,ebx
  426f19:	cdq    
  426f1a:	sti    
  426f1b:	int    0x7b
  426f1d:	and    al,0x64
  426f1f:	mov    DWORD PTR [eax+0x30],ebp
  426f22:	jl     0x426ed5
  426f24:	lock lahf 
  426f26:	gs dec eax
  426f28:	scas   al,BYTE PTR es:[edi]
  426f29:	jno    0x426ef6
  426f2b:	(bad)  
  426f2c:	stos   BYTE PTR es:[edi],al
  426f2d:	loop   0x426ec4
  426f2f:	jmp    0x3264:0xd97acb41
  426f36:	add    al,0x80
  426f38:	mov    dh,0x7d
  426f3a:	dec    ecx
  426f3b:	fisubr WORD PTR [edi]
  426f3d:	adc    eax,0x3fd6bf5e
  426f42:	sub    BYTE PTR [esi-0x65],dl
  426f45:	std    
  426f46:	dec    ecx
  426f47:	sbb    al,0xc8
  426f49:	and    eax,0x71615dff
  426f4e:	repnz mov al,0xdf
  426f51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426f52:	lock mov bh,0xa5
  426f55:	rol    dl,0x30
  426f58:	xchg   BYTE PTR fs:[edi+0x3],al
  426f5c:	or     eax,0xde4e13f8
  426f61:	fs aad 0x77
  426f64:	test   eax,0x516778fa
  426f69:	push   ebp
  426f6a:	xor    edx,eax
  426f6c:	mov    cl,0xe0
  426f6e:	div    DWORD PTR [esi]
  426f70:	lea    ebx,[ebx+0x3bab187d]
  426f76:	fnstcw WORD PTR [ecx+0x4ed02404]
  426f7c:	push   edi
  426f7d:	bound  esp,QWORD PTR [esi-0x58]
  426f80:	adc    al,0xc
  426f82:	imul   al
  426f84:	test   al,0xb0
  426f86:	sub    al,0xee
  426f88:	sub    eax,0xc89c5d3
  426f8d:	in     al,0x10
  426f8f:	ds clc 
  426f91:	xchg   ecx,eax
  426f92:	nop
  426f93:	sub    dl,BYTE PTR [ecx]
  426f95:	lea    esi,[esi-0x60ff0ae0]
  426f9b:	jmp    0xf4eac6b8
  426fa0:	sub    DWORD PTR [esi],esi
  426fa2:	out    0x9,eax
  426fa4:	jmp    0x426f77
  426fa6:	cmp    dl,ch
  426fa8:	ds add bl,bh
  426fab:	leave  
  426fac:	scas   eax,DWORD PTR es:[edi]
  426fad:	push   DWORD PTR [edx+eax*8+0x5]
  426fb1:	sbb    eax,0xc5bdc152
  426fb6:	out    dx,al
  426fb7:	inc    esi
  426fb8:	xchg   ebp,eax
  426fb9:	mov    al,ds:0x1eae43be
  426fbe:	fnstcw WORD PTR [eax]
  426fc0:	adc    edi,DWORD PTR [edi-0x21]
  426fc3:	daa    
  426fc4:	mov    dl,0x8e
  426fc6:	adc    al,BYTE PTR [ebp+0x6b]
  426fc9:	stos   DWORD PTR es:[edi],eax
  426fca:	mov    ebp,0x590acf6d
  426fcf:	sti    
  426fd0:	pop    ebx
  426fd1:	jmp    0x7830b127
  426fd6:	lods   eax,DWORD PTR ds:[esi]
  426fd7:	(bad)  
  426fd8:	adc    DWORD PTR [edi-0x74],edx
  426fdb:	clc    
  426fdc:	mov    ds:0x1cb30342,eax
  426fe1:	ds mov esi,0xd80211a
  426fe7:	and    esi,edi
  426fe9:	xchg   ebp,eax
  426fea:	adc    bh,BYTE PTR [ecx+edi*1]
  426fed:	cmp    eax,0x32530094
  426ff2:	dec    eax
  426ff3:	cmp    BYTE PTR ss:[eax],al
  426ff6:	(bad)  
  426ff7:	pop    eax
  426ff8:	jmp    0x4d77:0xcb51e9eb
  426fff:	mov    eax,0xb16bdc16
  427004:	ror    DWORD PTR [esi],0xd
  427007:	sbb    bh,BYTE PTR [ebx+0x51cd48fa]
  42700d:	mov    esi,0xb2f3e6d6
  427012:	jo     0x427053
  427014:	sbb    DWORD PTR [edx],0x5cfa657
  42701a:	jecxz  0x42704c
  42701c:	in     al,0x99
  42701e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42701f:	iret   
  427020:	jnp    0x42705b
  427022:	mov    ds:0xdbfb59fb,eax
  427027:	xor    eax,0xfe8c2a56
  42702c:	imul   DWORD PTR [eax-0x6541a90a]
  427032:	mov    edi,0xd6c64c59
  427037:	cmp    al,0xca
  427039:	fsubr  DWORD PTR es:[ebp+0xa]
  42703d:	in     al,dx
  42703e:	add    DWORD PTR [esi*1+0x236838d8],0xe02da65
  427049:	fdiv   DWORD PTR [ecx]
  42704b:	dec    ebp
  42704c:	jne    0x42705f
  42704e:	das    
  42704f:	cld    
  427050:	mov    ch,bh
  427052:	pop    es
  427053:	pop    ss
  427054:	add    DWORD PTR [edx],0x32750974
  42705a:	out    0xff,eax
  42705c:	fst    QWORD PTR [edi]
  42705e:	mov    edi,0x141fd610
  427063:	cmp    al,0xa7
  427065:	xor    eax,0xea122d43
  42706a:	dec    eax
  42706b:	dec    ecx
  42706c:	push   ecx
  42706d:	js     0x426ff8
  42706f:	mov    eax,0xb6b653c3
  427074:	in     al,dx
  427075:	jne    0x42705a
  427077:	sahf   
  427078:	fs nop
  42707a:	sub    ah,bh
  42707c:	fidivr DWORD PTR gs:[edi-0x7b1d1ec1]
  427083:	add    DWORD PTR [ebx-0x1c],ebx
  427086:	push   ebp
  427087:	xchg   DWORD PTR [ebx-0x375d5be8],eax
  42708d:	push   ebx
  42708e:	mov    BYTE PTR [ebp+0x6fb5436e],al
  427094:	add    DWORD PTR [edi],0x73
  427097:	frstor [edx-0x3c]
  42709a:	je     0x427051
  42709c:	mov    cl,0x7f
  42709e:	retf   0xb9db
  4270a1:	cmp    dl,BYTE PTR ss:[eax]
  4270a4:	pop    edx
  4270a5:	and    esp,DWORD PTR [edx+0x6401064c]
  4270ab:	retf   0x9d31
  4270ae:	ficomp WORD PTR [edx-0x394224d6]
  4270b4:	outs   dx,BYTE PTR ds:[esi]
  4270b5:	popa   
  4270b6:	sub    eax,0x5454ab64
  4270bb:	xchg   ecx,eax
  4270bc:	or     dh,BYTE PTR [edi+0x7c5ffcc1]
  4270c2:	cmc    
  4270c3:	cmp    edx,DWORD PTR [ebx+0x6b911fc]
  4270c9:	push   ecx
  4270ca:	sbb    BYTE PTR [ecx],cl
  4270cc:	push   0x42
  4270ce:	xchg   ebp,eax
  4270cf:	in     eax,0x87
  4270d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4270d2:	fstp   DWORD PTR [ebx]
  4270d4:	addr16 mov eax,ds:0xfb1c
  4270d8:	test   esi,ebp
  4270da:	fs enter 0xdd26,0x3a
  4270df:	mov    esi,0xd4222ac3
  4270e4:	add    esp,DWORD PTR [eax+0x3]
  4270e7:	imul   ebp,DWORD PTR [edx],0xfffffff1
  4270ea:	mov    edx,0x9a62b26
  4270ef:	loop   0x4270fe
  4270f1:	int3   
  4270f2:	cmp    eax,0x683d57ff
  4270f7:	xor    edx,ebx
  4270f9:	out    0x19,eax
  4270fb:	xor    eax,0xec45f7fc
  427100:	or     BYTE PTR ds:0xfb8e2f20,0x96
  427107:	fs add al,0x83
  42710a:	(bad)  
  42710b:	mov    dl,BYTE PTR [edx-0x1948b411]
  427111:	sbb    BYTE PTR [eax+0x3f859b2],dh
  427117:	xor    eax,0x1409cdd4
  42711c:	clc    
  42711d:	add    al,0x4a
  42711f:	xchg   DWORD PTR ds:0x26a75b,esi
  427125:	sub    DWORD PTR [eax+0x4dedcb88],ebx
  42712b:	ret    0xb6a5
  42712e:	xchg   edi,eax
  42712f:	pushf  
  427130:	mov    DWORD PTR [ecx+0x422bd69f],esp
  427136:	stos   BYTE PTR es:[edi],al
  427137:	or     al,BYTE PTR [esi+0x909ebfa]
  42713d:	in     eax,0x85
  42713f:	mov    esi,0x131cf976
  427144:	sbb    al,0x22
  427146:	add    bl,BYTE PTR [edx+0x64]
  427149:	outs   dx,BYTE PTR ds:[esi]
  42714a:	ss mov cl,0x93
  42714d:	push   esp
  42714e:	neg    esp
  427150:	adc    al,0xc7
  427152:	(bad)  
  427153:	dec    ebp
  427154:	inc    esp
  427155:	inc    edi
  427156:	mov    ebx,0x51b0d466
  42715b:	rol    BYTE PTR [edi-0x2b37a82e],1
  427161:	(bad)  
  427162:	fnstenv [ebp-0x11]
  427165:	pop    ds
  427166:	push   es
  427167:	push   ebx
  427168:	cmp    al,0xbf
  42716a:	inc    ebp
  42716b:	adc    dl,dh
  42716d:	arpl   WORD PTR ds:0xdbb0eab,bx
  427173:	sbb    bh,cl
  427175:	mov    bl,0x1c
  427178:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427179:	jg     0x42717d
  42717b:	mov    dh,ch
  42717d:	sbb    ebx,DWORD PTR [eax-0x40]
  427180:	dec    ecx
  427181:	test   BYTE PTR [edi-0x3adee644],dh
  427187:	pusha  
  427188:	ret    
  427189:	ret    0x6dc9
  42718c:	push   edx
  42718d:	pop    edi
  42718e:	shr    BYTE PTR [ecx+0x7bf3c612],cl
  427194:	lods   eax,DWORD PTR ds:[esi]
  427195:	sar    DWORD PTR [esi+ebx*1+0x753905f2],cl
  42719c:	and    bh,bh
  42719e:	int    0x34
  4271a0:	mov    es,WORD PTR [ebx+0x73]
  4271a3:	or     ch,BYTE PTR [ebx+eax*8]
  4271a6:	sbb    eax,esi
  4271a8:	xchg   edx,eax
  4271a9:	jecxz  0x427151
  4271ab:	jmp    0x0:0x0
  4271b2:	sub    eax,DWORD PTR [edi-0xc021e8b]
  4271b8:	mov    edi,0x7da68ccf
  4271bd:	inc    ecx
  4271be:	pushf  
  4271bf:	into   
  4271c0:	stos   BYTE PTR es:[edi],al
  4271c1:	outs   dx,BYTE PTR ds:[esi]
  4271c2:	imul   ebp,ecx,0x4f20001
  4271c8:	add    BYTE PTR [eax],al
  4271ca:	repz jmp 0x8471:0xd35bf030
  4271d2:	les    eax,FWORD PTR [edi-0x1fe9ecd5]
  4271d8:	push   ebx
  4271d9:	jns    0x4271a7
  4271db:	scas   al,BYTE PTR es:[edi]
  4271dc:	repnz sbb bh,BYTE PTR [edi-0x32]
  4271e0:	mov    esp,0xf62a2975
  4271e5:	mov    esp,0xdccd6a6a
  4271ea:	call   0xba62:0x3f8a1b9d
  4271f1:	es mov dh,0x66
  4271f4:	sbb    DWORD PTR [ebx-0x1932b9ce],edx
  4271fa:	inc    ebx
  4271fb:	xchg   BYTE PTR [edx],cl
  4271fd:	xchg   ecx,eax
  4271fe:	scas   al,BYTE PTR es:[edi]
  4271ff:	mov    ah,0x28
  427201:	pop    ds
  427202:	out    dx,al
  427203:	cld    
  427204:	mov    al,0xf1
  427206:	nop
  427207:	pop    eax
  427208:	imul   esp,esi,0x4
  42720b:	jg     0x4271cd
  42720d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42720e:	and    ah,al
  427210:	icebp  
  427211:	in     al,dx
  427212:	ds cmp al,0x41
  427215:	test   al,0x4e
  427217:	cdq    
  427218:	les    ecx,FWORD PTR [edi+0x63]
  42721b:	iret   
  42721c:	push   ss
  42721d:	inc    eax
  42721e:	aaa    
  42721f:	enter  0x8a31,0xdc
  427223:	test   BYTE PTR [ecx-0x6002a8dc],0x19
  42722a:	ror    BYTE PTR [edx],cl
  42722c:	shl    DWORD PTR [esi-0x6989fd36],1
  427232:	adc    DWORD PTR [ebp+0x42],ecx
  427235:	inc    ecx
  427236:	mov    bh,0x29
  427238:	sbb    DWORD PTR ds:0x4ff27a18,0xffffffcf
  42723f:	xchg   edx,eax
  427240:	(bad)  
  427241:	sar    BYTE PTR [edi+ebx*4-0x7dbf7a5b],cl
  427248:	sub    DWORD PTR [ecx+0xd],edx
  42724b:	and    eax,0xe8cf8584
  427250:	mov    al,0xc3
  427252:	ins    BYTE PTR es:[edi],dx
  427253:	xor    al,0x46
  427255:	xor    edi,esp
  427257:	cmp    eax,0x5a83d4d5
  42725c:	sbb    ecx,ecx
  42725e:	add    DWORD PTR [ecx+0x1d],ecx
  427261:	push   ecx
  427262:	into   
  427263:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427264:	iret   
  427265:	push   edx
  427266:	retf   
  427267:	dec    ebx
  427268:	inc    esp
  427269:	das    
  42726a:	sub    al,0x73
  42726c:	repnz push cs
  42726e:	scas   al,BYTE PTR es:[edi]
  42726f:	pop    ds
  427270:	xchg   esi,eax
  427271:	nop
  427272:	fistp  WORD PTR [esi-0x75be7176]
  427278:	ss add eax,0xf4330aec
  42727e:	cmc    
  42727f:	lea    ebp,[ebx-0x2c2707d]
  427285:	mov    esi,0x9fa29223
  42728a:	(bad)  
  42728b:	aas    
  42728c:	(bad)  
  42728e:	cmp    DWORD PTR [eax],ecx
  427290:	sbb    BYTE PTR ss:[ecx+eiz*2-0x7c064fb6],0xa4
  427299:	xlat   BYTE PTR ds:[ebx]
  42729a:	sbb    al,0x41
  42729c:	push   ss
  42729d:	push   edx
  42729e:	cli    
  42729f:	outs   dx,BYTE PTR ds:[esi]
  4272a0:	sbb    eax,0x4ec38cdf
  4272a5:	aas    
  4272a6:	or     eax,DWORD PTR [edx]
  4272a8:	or     DWORD PTR [esi-0x29],ebx
  4272ab:	sar    BYTE PTR [ebx],1
  4272ad:	in     eax,0x36
  4272af:	mov    ds:0xfa6d8e9,al
  4272b4:	xchg   esp,eax
  4272b5:	mov    ss,WORD PTR [ecx+0x119f726f]
  4272bb:	fsubr  st,st(2)
  4272bd:	iret   
  4272be:	ins    DWORD PTR es:[edi],dx
  4272bf:	sub    eax,0xea5dc9fe
  4272c4:	jl     0x427285
  4272c6:	xlat   BYTE PTR ds:[ebx]
  4272c7:	pop    ss
  4272c8:	add    bl,BYTE PTR [ebp-0x74d2a40b]
  4272ce:	in     eax,dx
  4272cf:	in     al,dx
  4272d0:	sub    bl,dh
  4272d2:	pop    edx
  4272d3:	nop
  4272d4:	in     al,0x81
  4272d6:	push   0xffffffd5
  4272d8:	dec    ecx
  4272d9:	dec    ebx
  4272da:	or     DWORD PTR [bp+0x3a92],ebx
  4272df:	cmp    bh,dh
  4272e1:	ret    
  4272e2:	into   
  4272e3:	pop    es
  4272e4:	test   BYTE PTR [ebx],ch
  4272e6:	cmp    DWORD PTR [ebx],0xf5f20ceb
  4272ec:	add    al,0xde
  4272ee:	mov    ecx,0x71ecec04
  4272f3:	ss dec ebp
  4272f5:	inc    ebp
  4272f6:	retf   0x6250
  4272f9:	out    0x4a,ax
  4272fc:	fstp   TBYTE PTR [esi]
  4272fe:	xchg   edi,eax
  4272ff:	cld    
  427300:	inc    edi
  427301:	jns    0x427365
  427303:	sub    edi,DWORD PTR [edx]
  427305:	pop    ebp
  427306:	xor    al,BYTE PTR [ecx+eiz*8-0x16]
  42730a:	and    al,0x62
  42730c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42730d:	bound  ecx,QWORD PTR [ebp-0xc]
  427310:	push   edi
  427311:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427312:	pushf  
  427313:	sar    BYTE PTR [ebx-0x3d],1
  427316:	adc    ecx,DWORD PTR [edi-0x6a092f58]
  42731c:	(bad)  
  42731d:	(bad)  
  42731e:	out    0x57,eax
  427320:	scas   al,BYTE PTR es:[edi]
  427321:	adc    eax,0x5e7e3bd
  427326:	dec    ebp
  427327:	data16 into 
  427329:	push   ecx
  42732a:	jmp    0xc050:0xb5a89add
  427331:	mov    dh,0x10
  427333:	or     al,0x4c
  427335:	in     eax,dx
  427336:	js     0x427305
  427338:	jg     0x4272c7
  42733a:	mov    ebx,0x774de362
  42733f:	sub    al,0xe
  427341:	mov    cl,0x5f
  427343:	out    dx,al
  427344:	pop    ecx
  427345:	inc    ebx
  427346:	out    0x25,al
  427348:	or     BYTE PTR [eax],0x6e
  42734b:	pop    ebx
  42734c:	outs   dx,BYTE PTR ds:[esi]
  42734d:	(bad)  [esi+0x22]
  427350:	cmc    
  427351:	out    dx,eax
  427352:	call   0x5356:0xbb9c0f61
  427359:	popf   
  42735a:	jmp    0x3fc290ba
  42735f:	add    BYTE PTR [esi],0x77
  427362:	nop
  427363:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427364:	lahf   
  427365:	sbb    DWORD PTR [esi],eax
  427367:	mov    eax,0xa856d839
  42736c:	cmp    eax,0x5a48cb26
  427371:	sbb    DWORD PTR [esi+0x529ff9e4],edx
  427377:	xlat   BYTE PTR ds:[ebx]
  427378:	pop    ds
  427379:	xor    DWORD PTR [edx+edi*8],ecx
  42737c:	out    dx,al
  42737d:	jl     0x427301
  42737f:	(bad)  
  427380:	mov    DWORD PTR [esi-0x23d456f9],eax
  427386:	inc    edx
  427387:	lahf   
  427388:	repz adc bh,BYTE PTR [eax+0x77]
  42738c:	xchg   ebp,eax
  42738d:	add    eax,0x2af37f
  427392:	push   ds
  427393:	adc    DWORD PTR [edi-0x3d23280b],ebx
  427399:	inc    esp
  42739a:	cmp    esi,DWORD PTR [edx-0x56a23087]
  4273a0:	xor    eax,0x892c2e1f
  4273a5:	cmp    ch,BYTE PTR [edi+0x7191e2e8]
  4273ab:	adc    edx,edi
  4273ad:	clc    
  4273ae:	mov    dl,0x43
  4273b0:	jb     0x427387
  4273b2:	mov    bl,0xd7
  4273b4:	inc    ecx
  4273b5:	sar    BYTE PTR [ecx+0x466691cb],cl
  4273bb:	pushf  
  4273bc:	mov    ebp,0x2b585483
  4273c1:	jmp    0x427352
  4273c3:	mov    al,ds:0x8450eba6
  4273c8:	mov    esi,0x7af441c3
  4273cd:	pusha  
  4273ce:	adc    ebp,DWORD PTR [ebp-0x41374d13]
  4273d4:	call   0xadecb78e
  4273d9:	sar    BYTE PTR [esi-0x3118bd2f],cl
  4273df:	rcr    DWORD PTR [ecx*2-0x1e6d7cf0],cl
  4273e6:	cmp    bl,BYTE PTR [eax+0x37b28bde]
  4273ec:	test   DWORD PTR [esi-0x50607a59],0x8abdff7f
  4273f6:	arpl   WORD PTR [esi+0x6c],cx
  4273f9:	cmp    al,BYTE PTR [esi+0x16]
  4273fc:	pop    edx
  4273fd:	and    bh,BYTE PTR [ebp-0x49485c89]
  427403:	jnp    0x4273ed
  427405:	daa    
  427406:	xor    DWORD PTR [esi],0x6b1634e2
  42740c:	or     esp,DWORD PTR [edi+0x41f9b3f6]
  427412:	cmp    DWORD PTR [esi],0xad16b1fb
  427418:	push   esi
  427419:	jmp    0xd946:0x966516cd
  427420:	xor    bl,BYTE PTR [edi-0x7a9aeb7c]
  427426:	icebp  
  427427:	loop   0x4274a0
  427429:	(bad)  
  42742a:	scas   eax,DWORD PTR es:[edi]
  42742b:	inc    edi
  42742c:	xchg   edi,eax
  42742e:	ja     0x42740f
  427430:	push   edx
  427431:	xchg   ebx,eax
  427432:	mov    esp,0xb111189a
  427437:	adc    ah,ch
  427439:	or     cl,BYTE PTR [edx]
  42743b:	aam    0x79
  42743d:	mov    esp,0xad02d118
  427442:	mov    dl,0xcb
  427444:	test   eax,0x31d01eea
  427449:	push   ecx
  42744a:	cmp    ah,BYTE PTR [ecx]
  42744c:	dec    ecx
  42744d:	fwait
  42744e:	mov    al,BYTE PTR [eax]
  427450:	inc    edx
  427451:	or     DWORD PTR [edi+0x59],eax
  427454:	fild   DWORD PTR [ebx]
  427456:	or     al,0x5
  427458:	icebp  
  427459:	out    0x58,al
  42745b:	fsub   DWORD PTR [edi-0x595092e8]
  427461:	(bad)  
  427462:	hlt    
  427463:	gs jecxz 0x42740a
  427466:	cmp    eax,0x6bbf6322
  42746b:	scas   eax,DWORD PTR es:[edi]
  42746c:	mov    cl,0xae
  42746e:	js     0x427450
  427470:	push   di
  427472:	pop    eax
  427473:	div    DWORD PTR [edx-0x5d]
  427476:	sbb    edx,DWORD PTR [eax+0x23]
  427479:	inc    ebp
  42747a:	mov    edi,0x9f3df5c7
  42747f:	add    bl,BYTE PTR [edi+0x76]
  427482:	stc    
  427483:	inc    esi
  427484:	sti    
  427485:	out    0x56,al
  427487:	jb     0x4274b6
  427489:	inc    ecx
  42748a:	add    dh,BYTE PTR [ebp+0x5f]
  42748d:	loope  0x42746e
  42748f:	add    BYTE PTR [esi-0x4d],0x34
  427493:	xchg   edi,eax
  427494:	mov    al,ds:0x8ad57009
  427499:	shr    BYTE PTR [edx],cl
  42749b:	mov    edx,0xcd23f461
  4274a0:	dec    ecx
  4274a1:	aam    0x39
  4274a3:	jecxz  0x427467
  4274a5:	push   cs
  4274a6:	dec    edi
  4274a7:	pop    edi
  4274a8:	dec    DWORD PTR [eax+0xb]
  4274ab:	mov    ah,dh
  4274ad:	int    0xf4
  4274af:	cmp    BYTE PTR [eax],0xc2
  4274b2:	retf   0x89c4
  4274b5:	rcr    edx,1
  4274b7:	add    BYTE PTR [ebx],bl
  4274b9:	test   dh,bh
  4274bb:	in     al,0x18
  4274bd:	jb     0x427521
  4274bf:	add    eax,0x606fad87
  4274c4:	test   ebp,0xf5cdae27
  4274ca:	dec    ebp
  4274cb:	test   eax,0x91a21d7b
  4274d0:	into   
  4274d1:	mov    edx,0xe9c5a23e
  4274d6:	fst    DWORD PTR [edi-0x107c5712]
  4274dc:	daa    
  4274dd:	adc    ecx,DWORD PTR [eax]
  4274df:	dec    ecx
  4274e0:	sbb    DWORD PTR [edx-0x6f27ff37],eax
  4274e6:	fidivr DWORD PTR [edi+0x52]
  4274e9:	mov    eax,ds:0x761f630d
  4274ee:	jle    0x427495
  4274f0:	adc    BYTE PTR [eax*1-0x170d2d],bh
  4274f7:	jbe    0x42754d
  4274f9:	pusha  
  4274fa:	in     al,dx
  4274fb:	push   ds
  4274fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4274fd:	(bad)  
  4274fe:	fs push cs
  427500:	call   0x54a89228
  427505:	aam    0xc6
  427507:	pop    ecx
  427508:	cmp    BYTE PTR [esi],bl
  42750a:	jecxz  0x4274d9
  42750c:	mov    bh,0xba
  42750e:	shr    DWORD PTR [eax+0x3f00b80b],1
  427514:	cmp    al,0xe2
  427516:	test   BYTE PTR [ecx-0x35],al
  427519:	cmp    eax,0x73ee8c3b
  42751e:	add    ebp,DWORD PTR [edi-0x18]
  427521:	iret   
  427522:	(bad)  
  427523:	jno    0x42755d
  427525:	fst    QWORD PTR [esi+0x5a2268e8]
  42752b:	pop    ss
  42752c:	stos   DWORD PTR es:[edi],eax
  42752d:	pop    ebx
  42752e:	mov    ebp,0x777e172e
  427533:	sbb    al,0x50
  427535:	ja     0x42751f
  427537:	pop    ebx
  427538:	cmp    al,0x41
  42753a:	hlt    
  42753b:	inc    eax
  42753c:	mov    edi,ds
  42753e:	imul   esp,edx,0xffffffd7
  427541:	adc    DWORD PTR [edx],edi
  427543:	shr    BYTE PTR [ebx-0x605b8ae1],cl
  427549:	rcr    DWORD PTR [esi+ecx*1+0x6e],0x32
  42754e:	stc    
  42754f:	sbb    ch,BYTE PTR ds:0x843a0f90
  427555:	aam    0x56
  427557:	add    al,0xcd
  427559:	push   ss
  42755a:	push   eax
  42755b:	neg    BYTE PTR [eax-0x6a]
  42755e:	shl    DWORD PTR ds:0xbec7a41f,1
  427564:	(bad)  
  427565:	in     al,0x1a
  427567:	std    
  427568:	cli    
  427569:	mov    ds:0x434f1417,al
  42756e:	outs   dx,DWORD PTR ds:[esi]
  42756f:	cwde   
  427570:	inc    ebp
  427571:	xchg   ebp,eax
  427572:	push   esp
  427573:	push   ds
  427574:	adc    al,0x3c
  427576:	adc    esi,DWORD PTR [edi]
  427578:	sbb    bh,BYTE PTR [esp+esi*2+0x437479f3]
  42757f:	adc    eax,DWORD PTR [edi+0x374adf69]
  427585:	les    esi,FWORD PTR [edx-0x715ed911]
  42758b:	call   0xdca37a93
  427590:	ins    DWORD PTR es:[edi],dx
  427591:	sbb    al,0x5e
  427593:	enter  0x6459,0xda
  427597:	arpl   WORD PTR [edx-0x53dcf3d8],ax
  42759d:	mov    ah,0xc3
  42759f:	pop    es
  4275a0:	adc    ebp,ebx
  4275a2:	mov    al,ds:0xfba78c8a
  4275a7:	cmc    
  4275a8:	mov    cl,0xfb
  4275aa:	lahf   
  4275ab:	mov    ebp,DWORD PTR [edx+edi*2+0x632c71b]
  4275b2:	and    al,0x39
  4275b4:	aas    
  4275b5:	adc    al,0x1d
  4275b7:	mov    al,BYTE PTR [edi]
  4275b9:	dec    ecx
  4275ba:	sub    eax,0x6eee19c8
  4275bf:	in     eax,dx
  4275c0:	jmp    0xb1fcc0c3
  4275c5:	inc    ebx
  4275c6:	(bad)  
  4275c7:	xor    edi,DWORD PTR [ecx-0x32]
  4275ca:	outs   dx,DWORD PTR ds:[esi]
  4275cb:	(bad)  
  4275cc:	jmp    0x42755c
  4275ce:	or     bl,BYTE PTR [esi-0x6a499c0d]
  4275d4:	hlt    
  4275d5:	jb     0x4275e2
  4275d7:	test   BYTE PTR [esi],bl
  4275d9:	jg     0x427620
  4275db:	cld    
  4275dc:	lea    esp,[ecx-0x4]
  4275df:	mov    ds:0xc632cff,al
  4275e4:	cwde   
  4275e5:	or     DWORD PTR cs:[ebx-0x272aad6],edx
  4275ec:	scas   al,BYTE PTR es:[edi]
  4275ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4275ee:	sbb    ebp,edi
  4275f0:	add    ebp,esi
  4275f2:	leave  
  4275f3:	mov    bl,0x8f
  4275f5:	add    DWORD PTR [edi+0x1c3abdf3],0xffffffbe
  4275fc:	pop    ebp
  4275fd:	lods   eax,DWORD PTR ds:[esi]
  4275fe:	test   DWORD PTR [eax-0x7a9ad026],0xe2e6e50b
  427608:	dec    esi
  427609:	mov    edi,cs
  42760b:	xor    ch,BYTE PTR [ebx+0x16]
  42760e:	jp     0x42759e
  427610:	push   esp
  427611:	sti    
  427612:	out    0xda,eax
  427614:	sbb    bh,dh
  427616:	inc    ebx
  427617:	xlat   BYTE PTR ds:[ebx]
  427618:	mov    esi,0x570a71a5
  42761d:	push   esi
  42761e:	sub    al,0x1d
  427620:	out    dx,al
  427621:	sar    BYTE PTR ds:0x213daeea,1
  427627:	sbb    al,0x77
  427629:	mov    esp,0x84e489cb
  42762e:	sar    DWORD PTR [esi+0x7df5104e],cl
  427634:	popf   
  427635:	or     BYTE PTR [esp+ebp*1-0x3dc7322f],dh
  42763c:	stos   BYTE PTR es:[edi],al
  42763d:	retf   
  42763e:	scas   eax,DWORD PTR es:[edi]
  42763f:	scas   eax,DWORD PTR es:[edi]
  427640:	std    
  427641:	pop    ebp
  427642:	mov    al,BYTE PTR [esi-0x5f32f4df]
  427648:	cmp    BYTE PTR [ecx-0xb7c5fc2],0x18
  42764f:	adc    ah,bh
  427651:	and    ah,bh
  427653:	inc    ebp
  427654:	sbb    DWORD PTR [ebp-0x5f],esi
  427657:	and    esi,DWORD PTR [ebp-0x4a]
  42765a:	push   0x62
  42765c:	enter  0x329f,0x6c
  427660:	pxor   mm2,mm3
  427663:	mov    WORD PTR [ecx-0x2de407a9],?
  427669:	(bad)  
  42766a:	jmp    0x4275f9
  42766c:	cdq    
  42766d:	mov    bl,0x5e
  42766f:	sahf   
  427670:	add    eax,0x9079b018
  427675:	fsub   DWORD PTR ds:0x1e97a0ef
  42767b:	jne    0x427605
  42767d:	not    DWORD PTR [eax+0x703f5aa6]
  427683:	rcr    bh,1
  427685:	cdq    
  427686:	sub    al,0x7c
  427688:	(bad)  
  427689:	adc    edi,DWORD PTR [ecx-0x1f94717a]
  42768f:	ror    DWORD PTR [ecx],1
  427691:	adc    al,0x2
  427693:	test   DWORD PTR [esi],0x6861522b
  427699:	in     al,dx
  42769a:	mov    dl,0xe3
  42769c:	retf   0xb696
  42769f:	lods   al,BYTE PTR ds:[esi]
  4276a0:	cwde   
  4276a1:	ficom  WORD PTR [ecx]
  4276a3:	adc    BYTE PTR [ecx+0x36],ah
  4276a6:	bound  eax,QWORD PTR [eax]
  4276a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4276a9:	add    eax,edi
  4276ab:	and    al,0x98
  4276ad:	enter  0x58be,0x35
  4276b1:	pop    ebp
  4276b2:	xchg   ebp,eax
  4276b3:	shl    DWORD PTR [ecx-0x6551598c],1
  4276b9:	outs   dx,DWORD PTR ds:[esi]
  4276ba:	add    DWORD PTR [eax+eax*1+0x0],edi
  4276be:	add    BYTE PTR [eax],al
  4276c0:	add    BYTE PTR [eax],al
  4276c2:	or     al,ah
  4276c4:	mov    eax,ds:0x5ef7eff7
  4276c9:	std    
  4276ca:	mov    ebp,0x86f91c3b
  4276cf:	mov    bl,0xfe
  4276d1:	mov    al,0x5b
  4276d3:	out    dx,al
  4276d4:	add    DWORD PTR [eax],eax
  4276d6:	repnz add al,0x0
  4276d9:	add    BYTE PTR [ecx-0x5e468f9a],dl
  4276df:	addr16 (bad) 
  4276e1:	adc    bl,BYTE PTR [ebp+0x7c]
  4276e4:	pop    ecx
  4276e5:	mov    al,0x1e
  4276e7:	jle    0x4276fc
  4276e9:	ins    DWORD PTR es:[edi],dx
  4276ea:	sub    BYTE PTR [edx-0x9e50409],0xe9
  4276f1:	std    
  4276f2:	jmp    0x55d2172e
  4276f7:	in     al,dx
  4276f8:	xor    edi,DWORD PTR [esi+0x57866c49]
  4276fe:	add    al,0x9e
  427700:	stos   DWORD PTR es:[edi],eax
  427701:	retf   0xfb0b
  427704:	mov    ah,bh
  427706:	ja     0x4276c1
  427708:	sub    DWORD PTR [eax+0x3e],ecx
  42770b:	or     eax,0x19125137
  427710:	sbb    DWORD PTR [edi-0x7],edx
  427713:	into   
  427714:	popa   
  427715:	in     eax,dx
  427716:	and    DWORD PTR [esi-0x4bfbcdc8],edx
  42771c:	fistp  WORD PTR [ecx+0x33]
  42771f:	jecxz  0x4276cd
  427721:	lahf   
  427722:	or     eax,0x47768686
  427727:	cli    
  427728:	inc    edi
  427729:	jle    0x42777f
  42772b:	fcomip st,st(7)
  42772d:	fldenv [ecx]
  42772f:	ret    0x7cc0
  427732:	jle    0x42770f
  427734:	lea    ecx,[edi-0x65]
  427737:	cdq    
  427738:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427739:	mov    ebx,0x1ff672fb
  42773e:	push   eax
  42773f:	in     al,0x0
  427741:	mov    DWORD PTR [ebp+edx*8+0x57],ebx
  427745:	pop    ebp
  427746:	xchg   edx,ebp
  427748:	aas    
  427749:	adc    al,0x1e
  42774b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42774c:	sbb    eax,0x6af409e7
  427751:	cmp    BYTE PTR [edi+0x7733bdbd],ch
  427757:	add    eax,0x8ef0937c
  42775c:	mul    DWORD PTR [ecx+0x77]
  42775f:	addr16 adc al,0x7a
  427762:	sbb    al,0xc1
  427764:	mov    ds:0x3cce3ba6,eax
  427769:	push   ds
  42776a:	pop    es
  42776b:	daa    
  42776c:	dec    ebp
  42776d:	in     al,dx
  42776e:	scas   eax,DWORD PTR es:[edi]
  42776f:	pop    edx
  427770:	or     BYTE PTR [esi-0x21913bb7],ch
  427776:	mov    ds:0xaece6fb5,al
  42777b:	adc    eax,0x5a40ec04
  427780:	pop    ss
  427781:	mov    edi,0x29942d22
  427786:	or     BYTE PTR [eax+0x65],al
  427789:	stos   BYTE PTR es:[edi],al
  42778a:	jl     0x4277c9
  42778c:	jb     0x427762
  42778e:	adc    esp,DWORD PTR [ebx-0x2a5d1d69]
  427794:	cmp    al,0x22
  427796:	in     eax,dx
  427797:	jp     0x427801
  427799:	mov    ebx,0x84969841
  42779e:	mov    eax,ds:0xc55544f5
  4277a3:	cmp    esi,DWORD PTR [esi+0x19]
  4277a6:	push   eax
  4277a7:	stc    
  4277a8:	sub    ebp,DWORD PTR [edi-0x36]
  4277ab:	xor    eax,0xd45dc9c
  4277b0:	pop    edx
  4277b1:	xchg   BYTE PTR [esi-0x35],dl
  4277b4:	push   ss
  4277b5:	pop    esi
  4277b6:	ret    
  4277b7:	out    dx,al
  4277b8:	jnp    0x427793
  4277ba:	out    dx,eax
  4277bb:	dec    ecx
  4277bc:	push   eax
  4277bd:	cmp    ecx,ebx
  4277bf:	dec    eax
  4277c0:	(bad)  [ecx-0x1d3698a2]
  4277c6:	sub    bh,BYTE PTR [eax+0x208163ce]
  4277cc:	xor    BYTE PTR [edx+ecx*8],cl
  4277cf:	sub    DWORD PTR [esi],eax
  4277d1:	mov    ebx,0x512b5da6
  4277d6:	jne    0x4277e8
  4277d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4277d9:	rol    DWORD PTR [edx],1
  4277db:	sub    al,0x9
  4277dd:	aad    0xab
  4277df:	outs   dx,BYTE PTR ds:[esi]
  4277e0:	call   0x86f6:0x6f6e36ca
  4277e7:	add    BYTE PTR [ebp-0x6ca010b9],dh
  4277ed:	loope  0x427773
  4277ef:	dec    ebp
  4277f0:	in     eax,0xd7
  4277f2:	mov    ds:0x9f71a93b,al
  4277f7:	push   esp
  4277f8:	push   edx
  4277f9:	xor    al,0xbb
  4277fb:	aaa    
  4277fc:	xchg   DWORD PTR [esi+0x2e],ebp
  4277ff:	inc    edi
  427800:	xlat   BYTE PTR ds:[ebx]
  427801:	clc    
  427802:	retf   0xb0cc
  427805:	xchg   esp,eax
  427806:	cmp    al,0x65
  427808:	ret    
  427809:	std    
  42780a:	pop    ecx
  42780b:	in     al,0xae
  42780d:	pop    ebx
  42780e:	dec    ebx
  42780f:	imul   edi,ebp,0x63b55e19
  427815:	inc    edi
  427816:	inc    ecx
  427817:	and    ch,BYTE PTR [eax]
  427819:	push   ecx
  42781a:	and    eax,0x1e5c2b49
  42781f:	shl    ecx,1
  427821:	mov    bl,BYTE PTR [edx+edi*1-0x21]
  427825:	dec    edi
  427826:	repnz out dx,al
  427828:	fs hlt 
  42782a:	in     eax,0xc7
  42782c:	push   cs
  42782d:	add    dh,BYTE PTR [eax+0x41]
  427830:	in     al,dx
  427831:	cmp    cl,BYTE PTR [eax+0x63]
  427834:	xchg   ecx,eax
  427835:	fwait
  427836:	mov    cl,0x67
  427838:	das    
  427839:	add    ebp,DWORD PTR [edx+edi*1-0x26020ec9]
  427840:	push   es
  427841:	in     al,dx
  427842:	dec    esp
  427843:	aad    0xc9
  427845:	popf   
  427846:	jp     0x4277d4
  427848:	xchg   ecx,eax
  427849:	dec    eax
  42784a:	loope  0x42786d
  42784c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42784d:	into   
  42784e:	sub    dl,BYTE PTR [edi]
  427850:	or     DWORD PTR [edi-0x11],ebx
  427853:	add    al,0xda
  427855:	xor    al,0x94
  427857:	jb     0x427899
  427859:	push   esp
  42785a:	adc    BYTE PTR [esi+0x3c],bh
  42785d:	call   0x39483e25
  427862:	cmp    BYTE PTR [ecx],al
  427864:	or     al,BYTE PTR [edx-0x18fa7547]
  42786a:	out    0x21,al
  42786c:	jmp    0xb4585c51
  427871:	(bad)  
  427872:	push   ebx
  427873:	xchg   edi,eax
  427874:	arpl   WORD PTR [eax],si
  427876:	mov    ch,0xd
  427878:	ins    DWORD PTR es:[edi],dx
  427879:	in     al,dx
  42787a:	rcl    BYTE PTR ds:0xf1c6ce63,1
  427880:	and    DWORD PTR [ebx],0x2f5dc73a
  427886:	inc    ebx
  427887:	aaa    
  427888:	mov    eax,ds:0x7c57f795
  42788d:	or     DWORD PTR [ebx+0x16],esp
  427890:	out    0x10,al
  427892:	fistp  DWORD PTR [ebx]
  427894:	cmp    BYTE PTR [edx],ah
  427896:	push   edx
  427897:	cmp    eax,0xa0159187
  42789c:	xor    ebp,ebp
  42789e:	jae    0x4278f0
  4278a0:	leave  
  4278a1:	pop    ebp
  4278a2:	out    dx,eax
  4278a3:	jns    0x42782a
  4278a5:	aad    0x1e
  4278a7:	fnsetpm(287 only) 
  4278a9:	pop    edi
  4278aa:	dec    edi
  4278ab:	and    DWORD PTR [ebp-0x15],0xd5be27c8
  4278b2:	xor    BYTE PTR [edx+0x4a4a235f],dl
  4278b8:	sbb    bl,BYTE PTR [edi+0x78]
  4278bb:	jp     0x4278b0
  4278bd:	add    DWORD PTR [edi+0x3f],0xb652c4e3
  4278c4:	nop
  4278c5:	in     eax,0x77
  4278c7:	std    
  4278c8:	mov    eax,ds:0x49f687ee
  4278cd:	(bad)  
  4278ce:	pop    ecx
  4278cf:	adc    dl,0x12
  4278d2:	mov    eax,DWORD PTR [eax]
  4278d4:	(bad)  
  4278d5:	sub    eax,0x68979952
  4278da:	mov    ah,0x32
  4278dc:	inc    edi
  4278dd:	or     BYTE PTR [edx+eiz*8+0x30],cl
  4278e1:	enter  0x2303,0x36
  4278e5:	cmp    bl,BYTE PTR [ecx+0x48778d0f]
  4278eb:	pop    ebp
  4278ec:	idiv   BYTE PTR [eax]
  4278ee:	jg     0x427957
  4278f0:	add    al,0xf7
  4278f2:	push   es
  4278f3:	add    dh,al
  4278f5:	jle    0x4278d7
  4278f7:	and    BYTE PTR [ebp+0x42],cl
  4278fa:	repz retf 0x257b
  4278fe:	dec    edx
  427900:	xlat   BYTE PTR ds:[ebx]
  427901:	lea    ebx,[edi+0x5fa53340]
  427907:	out    0x58,eax
  427909:	cmp    BYTE PTR [edi+ebp*8-0x5a],ch
  42790d:	dec    edx
  42790e:	add    al,0x2f
  427910:	int    0x8a
  427912:	fimul  DWORD PTR [edx+0x2e5f1c95]
  427918:	dec    eax
  427919:	mov    cl,0xa2
  42791b:	rcr    BYTE PTR [ecx],0x0
  42791e:	mov    ebp,0xdd0d78ee
  427923:	or     edx,DWORD PTR [esi-0xd]
  427926:	stc    
  427927:	daa    
  427928:	mov    ds:0xa6589f9c,eax
  42792d:	leave  
  42792e:	adc    DWORD PTR [eax],ebx
  427930:	test   eax,0x42b46265
  427935:	out    0x47,eax
  427937:	dec    edx
  427938:	mov    al,ds:0xf120a052
  42793d:	loope  0x4278fa
  42793f:	and    esi,DWORD PTR [ebx]
  427941:	icebp  
  427942:	test   eax,0x268870a7
  427947:	sub    al,0x38
  427949:	int    0x3f
  42794b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42794c:	cli    
  42794d:	jp     0x42798b
  42794f:	jp     0x427951
  427951:	and    BYTE PTR [esi+eax*4-0x4296492d],cl
  427958:	jo     0x42795d
  42795a:	fsubr  QWORD PTR [edi+0x1347caa3]
  427960:	jp     0x427930
  427962:	pop    ss
  427963:	inc    esp
  427964:	mov    ebp,0xd31c4dc8
  427969:	test   eax,0x542f7eac
  42796e:	arpl   WORD PTR [ebx+0x5d],ax
  427971:	xchg   edx,eax
  427972:	retf   0xe76a
  427975:	dec    ebp
  427976:	inc    ebp
  427977:	cld    
  427978:	sti    
  427979:	jle    0x427946
  42797b:	lods   eax,DWORD PTR ds:[esi]
  42797c:	arpl   WORD PTR [edx],cx
  42797e:	push   eax
  42797f:	xchg   DWORD PTR [ebx+0x5d],ebp
  427982:	popa   
  427983:	mov    eax,0xee1816c3
  427988:	scas   eax,DWORD PTR es:[edi]
  427989:	push   es
  42798a:	test   BYTE PTR [ecx+0xb0964af],cl
  427990:	cmp    eax,0xf09c5d8f
  427995:	cld    
  427996:	jae    0x4279fa
  427998:	xor    dl,ch
  42799a:	shl    BYTE PTR [ebp+0x59],cl
  42799d:	bound  edx,QWORD PTR [esi-0xbc0c78c]
  4279a3:	mov    WORD PTR [eax],es
  4279a5:	test   BYTE PTR [ebx],0xdd
  4279a8:	dec    esi
  4279a9:	dec    ecx
  4279aa:	fs fcmovnbe st,st(3)
  4279ad:	data16 ja 0x427975
  4279b0:	jmp    0x4279d4
  4279b2:	jge    0x427a2e
  4279b4:	(bad)  
  4279b5:	cwde   
  4279b6:	sbb    edx,DWORD PTR [ebx-0x384fb90c]
  4279bc:	imul   esp,DWORD PTR [edi-0x76106bd7],0xe2f274d2
  4279c6:	outs   dx,BYTE PTR ds:[esi]
  4279c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4279c8:	into   
  4279c9:	pop    ebx
  4279ca:	mov    al,0x3f
  4279cc:	pop    edx
  4279cd:	cmp    cl,BYTE PTR [edi+0x481a05b9]
  4279d3:	test   BYTE PTR [edi],dh
  4279d5:	pop    edx
  4279d6:	pop    ebp
  4279d7:	cli    
  4279d8:	adc    ah,BYTE PTR [ebp+0x4dbf602e]
  4279de:	(bad)  
  4279df:	xchg   bl,cl
  4279e1:	outs   dx,DWORD PTR ds:[esi]
  4279e2:	fst    QWORD PTR [ebp+0x2804fb53]
  4279e8:	mov    cs,WORD PTR [edi-0x43496e5e]
  4279ee:	add    eax,DWORD PTR [esi]
  4279f0:	and    eax,DWORD PTR [ecx-0x649d6b83]
  4279f6:	mov    ds,WORD PTR [eax+edx*8+0x15]
  4279fa:	mov    ebx,0xec286318
  4279ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427a00:	xchg   esp,eax
  427a01:	add    DWORD PTR [edx],ebx
  427a03:	adc    ebp,DWORD PTR [esi+0x18]
  427a06:	cwde   
  427a07:	sub    al,0x2d
  427a09:	mov    edx,DWORD PTR [edi]
  427a0b:	cmp    al,0x16
  427a0d:	pop    esi
  427a0e:	add    eax,0x23f6e06e
  427a13:	dec    ebp
  427a14:	mov    al,0x9
  427a16:	ja     0x4279a8
  427a18:	or     dh,ch
  427a1a:	xor    al,0x4c
  427a1d:	mov    edi,ebp
  427a1f:	ss aad 0xb3
  427a22:	ret    
  427a23:	pop    edx
  427a24:	xor    cl,BYTE PTR [esp+ecx*1]
  427a27:	xchg   esp,eax
  427a28:	ret    
  427a29:	loope  0x427a2f
  427a2b:	aas    
  427a2c:	cmp    BYTE PTR [eax-0x57190b31],cl
  427a32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427a33:	mov    edx,0xaeca65e7
  427a38:	leave  
  427a39:	add    DWORD PTR [ecx+ecx*1+0x21ddb9c2],esp
  427a40:	inc    ecx
  427a41:	dec    esi
  427a42:	lods   eax,DWORD PTR ds:[esi]
  427a43:	int3   
  427a44:	sbb    al,0x7f
  427a46:	out    0x8f,al
  427a48:	push   edx
  427a49:	jp     0x427a2b
  427a4b:	les    esp,FWORD PTR [edx+ebx*8]
  427a4e:	jbe    0x427ab8
  427a50:	aas    
  427a51:	(bad)  
  427a52:	jl     0x427a22
  427a54:	out    dx,al
  427a55:	sbb    al,0x56
  427a57:	sbb    DWORD PTR [eax+eax*2-0x5],edx
  427a5b:	mov    cl,0x50
  427a5d:	pushf  
  427a5e:	pusha  
  427a5f:	jo     0x427a39
  427a61:	push   edi
  427a62:	ret    0x19bf
  427a65:	fisub  WORD PTR [esp+ebx*1-0x6c]
  427a69:	scas   eax,DWORD PTR es:[edi]
  427a6a:	xor    DWORD PTR ds:[edx],eax
  427a6d:	lock or bh,BYTE PTR [edx+0x9]
  427a71:	mov    dl,0xe3
  427a73:	retf   
  427a74:	mov    edi,0xb21f0ef9
  427a79:	xor    ch,BYTE PTR [edi-0x42]
  427a7c:	mov    esi,0xca74920c
  427a81:	xchg   esi,eax
  427a82:	in     eax,0x86
  427a84:	loope  0x427acf
  427a86:	jmp    0x427a0e
  427a88:	jne    0x427a9a
  427a8a:	push   cs
  427a8b:	lock xchg ecx,eax
  427a8d:	jae    0x427a14
  427a8f:	and    DWORD PTR [eax-0x1c],ebx
  427a92:	mov    ch,0xb7
  427a94:	outs   dx,BYTE PTR ds:[esi]
  427a95:	mov    ds:0xe09424b8,al
  427a9a:	sbb    BYTE PTR [edx],al
  427a9c:	inc    esp
  427a9d:	in     al,0x12
  427a9f:	cmp    DWORD PTR [edi],esp
  427aa1:	jl     0x427af7
  427aa3:	cmp    edi,DWORD PTR [edi+edi*8+0x16]
  427aa7:	adc    BYTE PTR [edi+0x70],0xc6
  427aab:	adc    edi,ebx
  427aad:	cmp    dh,dh
  427aaf:	and    al,0x49
  427ab1:	cli    
  427ab2:	adc    DWORD PTR fs:[ebp+0x3c],ecx
  427ab6:	out    dx,eax
  427ab7:	mov    ?,eax
  427ab9:	xor    BYTE PTR [eax+0x64b4b13a],dl
  427abf:	imul   esp,DWORD PTR [esi+eax*1],0x7772d891
  427ac6:	xor    al,0x5e
  427ac8:	and    al,0x45
  427aca:	icebp  
  427acb:	pcmpeqw mm0,QWORD PTR [ebx-0x76]
  427acf:	cmp    esp,esp
  427ad1:	mov    bh,BYTE PTR [ecx-0x75]
  427ad4:	out    dx,eax
  427ad5:	push   ebp
  427ad6:	in     al,dx
  427ad7:	in     eax,0x5b
  427ad9:	repnz arpl WORD PTR [ebx-0x52ff3661],sp
  427ae0:	adc    eax,0xa5fc04c0
  427ae5:	jbe    0x427b10
  427ae7:	sbb    eax,0xb6161687
  427aec:	mov    al,BYTE PTR [edx+0x39ac90da]
  427af2:	sar    BYTE PTR [edx-0x478da339],1
  427af8:	inc    edx
  427af9:	rcl    BYTE PTR ds:0xeabe8aef,0x7e
  427b00:	retf   
  427b01:	repnz repnz mov al,0x7d
  427b05:	out    0xb6,al
  427b07:	nop
  427b08:	cmp    eax,0xf7357cb9
  427b0d:	in     al,dx
  427b0e:	or     DWORD PTR [eax-0x50],0xab98bcc7
  427b15:	cmp    ecx,ecx
  427b17:	out    0x92,eax
  427b19:	ficomp WORD PTR [esi]
  427b1b:	sbb    ecx,eax
  427b1d:	dec    eax
  427b1e:	inc    esi
  427b1f:	fldenv [ecx+eax*4+0x423c042]
  427b26:	aam    0x5a
  427b28:	ins    DWORD PTR es:[edi],dx
  427b29:	sub    BYTE PTR [eax+0x711c5640],bh
  427b2f:	mov    ds:0x2667961a,al
  427b34:	inc    ecx
  427b35:	push   cs
  427b36:	pop    edi
  427b37:	xchg   BYTE PTR [esi+0x70],ch
  427b3a:	jecxz  0x427b3c
  427b3c:	pop    ss
  427b3d:	(bad)  
  427b3e:	out    dx,al
  427b3f:	hlt    
  427b40:	jg     0x427af8
  427b42:	push   0x6
  427b44:	jle    0x427ac6
  427b46:	fprem1 
  427b48:	arpl   WORD PTR [ebx-0x1f62e591],si
  427b4e:	mov    ebp,0xc3eb0147
  427b53:	in     eax,dx
  427b54:	xor    eax,0x92ea100f
  427b59:	and    al,0xab
  427b5b:	xlat   BYTE PTR ds:[ebx]
  427b5c:	xor    BYTE PTR [esi],ch
  427b5e:	jne    0x427bce
  427b60:	ret    0xffee
  427b63:	(bad)  
  427b64:	add    al,ch
  427b66:	mov    bl,0x72
  427b68:	sbb    edi,DWORD PTR cs:[ebx+0x37]
  427b6c:	mov    ecx,0x2256a215
  427b71:	and    eax,0x4e47d889
  427b76:	jno    0x427ba7
  427b78:	scas   al,BYTE PTR es:[edi]
  427b79:	cmp    DWORD PTR [ebx-0x11],0xa51cf8f7
  427b80:	(bad)  
  427b81:	xchg   esi,eax
  427b82:	fidivr DWORD PTR [ebp-0x5610c444]
  427b88:	jo     0x427ba5
  427b8a:	add    al,BYTE PTR [ecx+0x7f]
  427b8d:	and    al,0xc7
  427b8f:	hlt    
  427b90:	stos   DWORD PTR es:[edi],eax
  427b91:	cmp    DWORD PTR [edx+esi*1+0x1858b9a1],ebp
  427b98:	mov    DWORD PTR [ebx],0xbc73a39f
  427b9e:	jge    0x427ba8
  427ba0:	sbb    edx,ebp
  427ba2:	shr    DWORD PTR [edi],1
  427ba4:	push   ebp
  427ba5:	xchg   BYTE PTR cs:[edi+ecx*8+0x32ee556d],cl
  427bad:	in     al,0xcb
  427baf:	jl     0x427b55
  427bb1:	mov    esp,0xb2a98ba2
  427bb6:	stos   BYTE PTR es:[edi],al
  427bb7:	cmp    eax,0x3898413
  427bbc:	mov    ch,0x9c
  427bbe:	lds    edi,FWORD PTR [eax-0x3157205f]
  427bc4:	cmp    esp,esi
  427bc6:	(bad)  
  427bc7:	ror    ah,1
  427bc9:	shr    eax,cl
  427bcb:	mov    bl,0x0
  427bcd:	add    BYTE PTR [eax],al
  427bcf:	add    BYTE PTR [eax],al
  427bd1:	add    BYTE PTR [edi-0xa],dh
  427bd4:	push   ecx
  427bd5:	dec    edi
  427bd6:	shr    edi,1
  427bd8:	jg     0x427bd8
  427bda:	push   cs
  427bdb:	mov    edi,0x91abe2d0
  427be0:	rcl    BYTE PTR [ebp+ecx*2-0xdfffe0d],cl
  427be7:	add    al,0x0
  427be9:	add    BYTE PTR [esi-0x36],dl
  427bec:	and    DWORD PTR [ebx+0x28534a14],edi
  427bf2:	cdq    
  427bf3:	mov    bl,0x4a
  427bf5:	sub    bl,BYTE PTR [ebp-0x4e]
  427bf8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427bf9:	les    edi,FWORD PTR [edx+0x6c]
  427bfc:	and    eax,ebx
  427bfe:	nop
  427bff:	gs aas 
  427c01:	push   ebx
  427c02:	scas   eax,DWORD PTR es:[edi]
  427c03:	jmp    0x427b9d
  427c05:	(bad)  
  427c06:	mov    al,BYTE PTR [ecx+0x2468d1fe]
  427c0c:	xchg   edx,eax
  427c0d:	mov    edi,0xaef76142
  427c12:	jl     0x427c37
  427c14:	or     ecx,DWORD PTR [esi+edx*8+0x20]
  427c18:	addr16 sub eax,0x7fd5b5bc
  427c1e:	loop   0x427bef
  427c20:	dec    edx
  427c22:	mov    ds:0xc06aebff,al
  427c27:	push   ds
  427c28:	pop    edi
  427c29:	push   eax
  427c2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427c2b:	fisubr DWORD PTR [eax]
  427c2d:	push   es
  427c2e:	or     ebp,DWORD PTR [ebp*2+0x2e20a4fc]
  427c35:	popf   
  427c36:	sbb    eax,0x9820d4df
  427c3b:	pop    ss
  427c3c:	(bad)  
  427c3d:	hlt    
  427c3e:	inc    esp
  427c3f:	xchg   ebx,eax
  427c40:	sbb    esp,esi
  427c42:	(bad)  
  427c43:	mov    cl,0x4e
  427c45:	test   DWORD PTR [eax],ebx
  427c47:	les    edi,FWORD PTR [eax-0xa]
  427c4a:	lea    esi,[esi]
  427c4c:	jnp    0x427c82
  427c4e:	mov    ebx,0x1c9ca222
  427c53:	lea    esp,[eax-0x30aaffd0]
  427c59:	ret    0xe39
  427c5c:	pop    ds
  427c5d:	jp     0x427c64
  427c5f:	pop    ds
  427c60:	bound  ebx,QWORD PTR [edx]
  427c62:	fidivr DWORD PTR [eax+0x264f07ba]
  427c68:	pop    edx
  427c69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427c6a:	jbe    0x427ce4
  427c6c:	dec    ebx
  427c6d:	push   es
  427c6e:	nop
  427c6f:	xor    BYTE PTR ds:[edx],0xfa
  427c73:	retf   0xb3e2
  427c76:	in     al,dx
  427c77:	mov    bh,0xdc
  427c79:	fsub   QWORD PTR [esi+edx*2+0x10]
  427c7d:	mov    al,0xf9
  427c7f:	aam    0x57
  427c81:	loope  0x427cb3
  427c83:	test   eax,0xa419094a
  427c88:	fucom  st(5)
  427c8a:	inc    eax
  427c8b:	les    edx,FWORD PTR [edi+0x3ff788a8]
  427c91:	jmp    0x49fc:0xfcefcc13
  427c98:	and    dh,BYTE PTR [ecx-0x29728cf4]
  427c9e:	or     al,0x95
  427ca0:	pop    ecx
  427ca1:	push   ecx
  427ca2:	mov    WORD PTR [esi-0x5],?
  427ca5:	inc    ebp
  427ca6:	cmp    edx,DWORD PTR [edi+ebx*1-0x21670c4e]
  427cad:	push   ds
  427cae:	into   
  427caf:	rcl    DWORD PTR [ebp+0x4e198d48],0xf7
  427cb6:	mov    ah,bh
  427cb8:	int    0x9e
  427cba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427cbb:	pop    ds
  427cbc:	mov    ds:0xcb921c47,eax
  427cc1:	pop    ecx
  427cc2:	(bad)  
  427cc3:	(bad)  
  427cc4:	in     al,0x92
  427cc6:	ins    DWORD PTR es:[edi],dx
  427cc7:	sbb    ebp,ebp
  427cc9:	dec    ebx
  427cca:	xlat   BYTE PTR ds:[ebx]
  427ccb:	mov    eax,0x9b31b7e8
  427cd0:	cmp    DWORD PTR [edx],0xb36b0554
  427cd6:	mov    ebp,ebp
  427cd8:	mov    eax,0xa0f11c78
  427cdd:	in     al,dx
  427cde:	and    BYTE PTR gs:[esi],al
  427ce1:	sbb    eax,0x8acf9062
  427ce6:	out    0xd7,eax
  427ce8:	pushf  
  427ce9:	mov    cl,0x86
  427ceb:	lods   eax,DWORD PTR ds:[esi]
  427cec:	icebp  
  427ced:	dec    edi
  427cee:	mov    ds:0xf1509bf9,eax
  427cf3:	sub    bl,0x97
  427cf6:	das    
  427cf7:	xchg   edi,eax
  427cf8:	inc    eax
  427cf9:	inc    ecx
  427cfa:	dec    esp
  427cfb:	cmp    al,0xa5
  427cfd:	jp     0x427cce
  427cff:	sbb    BYTE PTR [ebp-0x14],dl
  427d02:	add    ebp,0x469a20de
  427d08:	scas   al,BYTE PTR es:[edi]
  427d09:	ins    DWORD PTR es:[edi],dx
  427d0a:	rcr    DWORD PTR [ecx],cl
  427d0c:	sbb    esi,edi
  427d0e:	icebp  
  427d0f:	cmp    ebp,ecx
  427d11:	pop    ecx
  427d12:	sub    dh,bl
  427d14:	cmp    DWORD PTR [esi-0x4e07b9be],0x2ece3b51
  427d1e:	imul   ecx,DWORD PTR [ebp-0x7aee4f92],0x30
  427d25:	xchg   edi,eax
  427d26:	adc    ecx,ecx
  427d28:	inc    eax
  427d29:	or     BYTE PTR [eax-0x1014968e],ch
  427d2f:	nop
  427d30:	or     BYTE PTR [ebp+0x2ae219ab],ah
  427d36:	pop    eax
  427d37:	and    al,0x96
  427d39:	xor    edi,DWORD PTR [ebp+0x1a]
  427d3c:	lds    ebx,FWORD PTR [edi-0x40]
  427d3f:	call   eax
  427d41:	nop
  427d42:	clc    
  427d43:	lods   eax,DWORD PTR ds:[esi]
  427d44:	xchg   ebx,eax
  427d45:	dec    ebx
  427d46:	leave  
  427d47:	pop    ss
  427d48:	outs   dx,DWORD PTR ds:[esi]
  427d49:	iret   
  427d4a:	cmp    edx,DWORD PTR [ebx-0x57041514]
  427d50:	mov    ds:0xa0f3b6f1,eax
  427d55:	(bad)  
  427d56:	pop    esp
  427d57:	jmp    0xa0b6:0x461183b4
  427d5e:	xchg   edx,eax
  427d5f:	jle    0x427dd6
  427d61:	push   esi
  427d62:	int    0xb5
  427d64:	xchg   ecx,eax
  427d65:	mov    bh,0x67
  427d67:	cmc    
  427d68:	and    BYTE PTR [esi],cl
  427d6a:	scas   al,BYTE PTR es:[edi]
  427d6b:	mov    cl,0x2
  427d6d:	mov    ds:0x608accf9,eax
  427d72:	and    ch,BYTE PTR [eax+0x34f3296b]
  427d78:	rcl    DWORD PTR [ecx],1
  427d7a:	lods   eax,DWORD PTR ds:[esi]
  427d7b:	jmp    0xdea6:0x60ccae1e
  427d82:	stos   DWORD PTR es:[edi],eax
  427d83:	jno    0x427dcd
  427d85:	lds    ebp,FWORD PTR [ebp+0x632e51a3]
  427d8b:	loopne 0x427d9c
  427d8d:	fnstcw WORD PTR [edx+0x21b7371]
  427d93:	add    eax,0x159398cf
  427d98:	aaa    
  427d99:	sar    DWORD PTR [esi+0x54],1
  427d9c:	(bad)  
  427d9d:	jmp    0xdbe5:0x13fa4dd8
  427da4:	dec    ebx
  427da5:	sahf   
  427da6:	popa   
  427da7:	pushf  
  427da8:	je     0x427d2b
  427daa:	lds    eax,FWORD PTR [edi]
  427dac:	sub    bh,BYTE PTR [edi+0x6b38105d]
  427db2:	and    BYTE PTR [edx-0x10],0x6d
  427db6:	mov    gs,WORD PTR [ebp+0x2a]
  427db9:	mov    dh,0x9c
  427dbb:	cmp    al,0xd0
  427dbd:	xor    al,0x19
  427dbf:	sar    BYTE PTR [edi],1
  427dc1:	add    esp,DWORD PTR [ebp+edi*8-0x629c20f3]
  427dc8:	or     edx,ebx
  427dca:	test   DWORD PTR cs:[eax+ecx*8-0x47],ebx
  427dcf:	inc    eax
  427dd0:	ret    
  427dd1:	shr    edx,0x23
  427dd4:	mov    ah,0x3e
  427dd6:	pop    ebp
  427dd7:	push   esi
  427dd8:	es leave 
  427dda:	shl    BYTE PTR [ebx+edx*1-0x17dea3f9],cl
  427de1:	aad    0x58
  427de3:	sub    eax,DWORD PTR [ebx]
  427de5:	cmp    DWORD PTR [ecx],esi
  427de7:	pop    edi
  427de8:	mov    eax,0x7de69f8a
  427ded:	and    ah,bh
  427def:	xchg   BYTE PTR [ecx+0x18],dl
  427df2:	cmp    dl,BYTE PTR [ecx]
  427df4:	or     esp,eax
  427df6:	mov    esp,DWORD PTR [esi]
  427df8:	das    
  427df9:	pop    ebx
  427dfa:	adc    eax,0xb97764db
  427dff:	and    esp,ebx
  427e01:	enter  0x5e63,0x9c
  427e05:	mov    ds:0xba09f689,eax
  427e0a:	xlat   BYTE PTR ds:[ebx]
  427e0b:	sub    esi,DWORD PTR [eax-0xe]
  427e0e:	sub    ebp,DWORD PTR ds:0x48810e05
  427e14:	frstor [ecx-0x60]
  427e17:	inc    ebx
  427e18:	jae    0x427e86
  427e1a:	dec    esi
  427e1b:	add    al,0x80
  427e1d:	xchg   edi,eax
  427e1e:	loopne 0x427dcb
  427e20:	mov    bl,0xae
  427e22:	lods   al,BYTE PTR ds:[esi]
  427e23:	sbb    bh,BYTE PTR [ebx+edi*2-0x416e6223]
  427e2a:	inc    esi
  427e2b:	in     al,0xd7
  427e2d:	mov    ah,0xfe
  427e2f:	xlat   BYTE PTR ds:[ebx]
  427e30:	loop   0x427def
  427e32:	in     al,dx
  427e33:	hlt    
  427e34:	jno    0x427e6d
  427e36:	inc    esp
  427e37:	data16 jg 0x427eab
  427e3a:	jb     0x427eb2
  427e3c:	push   ss
  427e3d:	push   0xffffffa7
  427e3f:	imul   eax,DWORD PTR [bx+si-0x74df],0xa7848fab
  427e48:	inc    edi
  427e49:	adc    al,0x1b
  427e4b:	(bad)  
  427e4c:	jo     0x427de8
  427e4e:	hlt    
  427e4f:	fstp   DWORD PTR [ebp+edx*8-0x562f0b5a]
  427e56:	fs xor eax,0x4c67ccfc
  427e5c:	daa    
  427e5d:	and    BYTE PTR [edi-0x5ea0201f],ah
  427e63:	add    eax,esp
  427e65:	in     al,dx
  427e66:	sbb    DWORD PTR [esi+0x29cc6d07],esi
  427e6c:	pop    ebx
  427e6d:	adc    BYTE PTR [ebx+0x1f],ch
  427e70:	push   esp
  427e71:	(bad)  
  427e72:	cli    
  427e73:	xor    dl,BYTE PTR [edi]
  427e75:	mov    ah,0x68
  427e77:	repnz mov ch,0x68
  427e7a:	cmp    esp,ecx
  427e7c:	pop    eax
  427e7d:	aas    
  427e7e:	aam    0x70
  427e80:	dec    edi
  427e81:	loopne 0x427ee4
  427e83:	jbe    0x427ece
  427e85:	push   cs
  427e86:	gs call 0x83f:0xa384c6e2
  427e8e:	and    DWORD PTR [esi-0x54f6ab4a],0x76
  427e95:	test   cl,al
  427e97:	mov    al,ds:0xff7b2be4
  427e9c:	pop    ebx
  427e9d:	test   al,0x7e
  427e9f:	imul   ebp,DWORD PTR [edx],0x3d4a525c
  427ea5:	add    eax,0x3e7ae15b
  427eaa:	or     BYTE PTR [ebp+0x74],0x95
  427eae:	adc    DWORD PTR [ebx-0x69],eax
  427eb1:	leave  
  427eb2:	sbb    bl,BYTE PTR [ebx+ecx*2-0x1681fbfe]
  427eb9:	je     0x427eb8
  427ebb:	bnd ret 
  427ebd:	fcmovnbe st,st(4)
  427ebf:	adc    eax,0xaaabbcb7
  427ec4:	mov    ah,BYTE PTR [edx-0x4f]
  427ec7:	xchg   ecx,eax
  427ec8:	mov    dh,BYTE PTR [edi]
  427eca:	not    ch
  427ecc:	ja     0x427e5d
  427ece:	ret    
  427ecf:	cmc    
  427ed0:	cmc    
  427ed1:	rol    DWORD PTR [eax+eax*1],0x26
  427ed5:	dec    esi
  427ed6:	aad    0x65
  427ed8:	pushf  
  427ed9:	fadd   st,st(2)
  427edb:	dec    esp
  427edc:	add    DWORD PTR [eax],edx
  427ede:	and    esi,ecx
  427ee0:	ja     0x427f50
  427ee2:	(bad)  
  427ee3:	mov    eax,0x9b9a4fa0
  427ee8:	outs   dx,DWORD PTR ds:[esi]
  427ee9:	and    al,0xf1
  427eeb:	lods   eax,DWORD PTR ds:[esi]
  427eec:	sbb    BYTE PTR [edx],al
  427eee:	je     0x427eb6
  427ef0:	mov    eax,DWORD PTR [ebx-0x63]
  427ef3:	aad    0x85
  427ef5:	sub    DWORD PTR [eax+0xd],esp
  427ef8:	pushf  
  427ef9:	mov    cl,0x84
  427efb:	daa    
  427efc:	pop    ss
  427efd:	and    al,0x5f
  427eff:	push   ecx
  427f00:	pop    ebp
  427f01:	add    eax,0x85ebce5a
  427f06:	out    0xcb,al
  427f08:	pusha  
  427f09:	popf   
  427f0a:	mov    edi,0x28bb9dd4
  427f0f:	and    BYTE PTR ds:0xa04b017b,dh
  427f15:	rol    BYTE PTR [edx+0x43],0xff
  427f19:	inc    ebx
  427f1a:	and    BYTE PTR [esi+0x43],ah
  427f1d:	add    esp,DWORD PTR [ecx+0x7a7c0b35]
  427f23:	stc    
  427f24:	mov    esp,0xa09e1c21
  427f29:	in     eax,dx
  427f2a:	loope  0x427ef0
  427f2c:	or     BYTE PTR [edx+0x51],dl
  427f2f:	jmp    0x76e4:0x1ef0e3a9
  427f36:	inc    di
  427f38:	or     al,0xa9
  427f3a:	dec    ebx
  427f3b:	xchg   edi,eax
  427f3c:	out    dx,eax
  427f3d:	test   eax,0x54d126a9
  427f42:	sahf   
  427f43:	mov    bl,BYTE PTR [ecx+eiz*2-0x7a]
  427f47:	inc    esp
  427f48:	inc    ebp
  427f49:	pop    ebx
  427f4a:	mov    WORD PTR ds:0x9682ca40,?
  427f50:	popa   
  427f51:	nop
  427f52:	xchg   esp,eax
  427f53:	int3   
  427f54:	pop    edx
  427f55:	mov    ebx,DWORD PTR [eax+0x2428066]
  427f5b:	sub    al,0x43
  427f5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427f5e:	add    DWORD PTR [ebx],0x41
  427f61:	sub    bl,BYTE PTR [ecx+0x14333879]
  427f67:	xchg   ebx,eax
  427f68:	outs   dx,BYTE PTR ds:[esi]
  427f69:	pop    ebp
  427f6a:	test   al,0x68
  427f6c:	fadd   DWORD PTR [edx+0x15]
  427f6f:	mov    eax,ds:0xf0a16c86
  427f74:	fnstenv [edi]
  427f76:	jae    0x427f48
  427f78:	cs inc esp
  427f7a:	shl    BYTE PTR [ecx+0x59],0x6e
  427f7e:	cs adc al,0x8b
  427f81:	inc    esi
  427f82:	fs (bad) 
  427f84:	sbb    edx,DWORD PTR [eax+esi*2-0x1c13f23d]
  427f8b:	ja     0x427fc7
  427f8d:	and    edi,DWORD PTR [eax-0x2b93388c]
  427f93:	pusha  
  427f94:	ja     0x427fd7
  427f96:	test   DWORD PTR [ebp-0x705e2d5f],edi
  427f9c:	fist   DWORD PTR [edi+0xa9a8bf7]
  427fa2:	test   DWORD PTR [edx-0x4ce612d1],esp
  427fa8:	std    
  427fa9:	retf   0x6bf4
  427fac:	jmp    0xef43:0xebd8acbf
  427fb3:	sbb    esp,DWORD PTR [ecx-0x768ec255]
  427fb9:	dec    edx
  427fba:	lahf   
  427fbb:	dec    esi
  427fbc:	movlps QWORD PTR [edi+0x3],xmm2
  427fc0:	retf   
  427fc1:	inc    esi
  427fc2:	jecxz  0x428028
  427fc4:	sbb    DWORD PTR [edx-0x54],ebp
  427fc7:	cmp    edx,DWORD PTR [ebp+0x66f4bfb7]
  427fcd:	aam    0x50
  427fcf:	xor    cl,BYTE PTR [ebp+0x1e2bde70]
  427fd5:	xchg   esi,eax
  427fd6:	outs   dx,DWORD PTR ds:[esi]
  427fd7:	loopne 0x427f77
  427fd9:	push   esp
  427fda:	test   eax,0xc7fc4132
  427fdf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427fe0:	jecxz  0x428019
  427fe2:	xchg   esi,eax
  427fe3:	rcr    BYTE PTR [edi],cl
  427fe5:	mov    ds,WORD PTR [ebp+0x32]
  427fe8:	xor    bl,ah
  427fea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427feb:	add    edi,DWORD PTR [ebx+0x6c9882f6]
  427ff1:	or     al,0x81
  427ff3:	jmp    0x8953be2
  427ff8:	add    esi,edi
  427ffa:	repnz loope 0x427fd1
  427ffd:	outs   dx,BYTE PTR ds:[esi]
  427ffe:	aad    0xd9
  428000:	rcr    DWORD PTR ds:0x56818d46,1
  428006:	dec    ebx
  428007:	enter  0x8d83,0xe9
  42800b:	lods   eax,DWORD PTR ds:[esi]
  42800c:	fdiv   QWORD PTR [eax+0x27]
  42800f:	dec    ecx
  428010:	(bad)  
  428011:	pop    ebx
  428012:	arpl   si,cx
  428014:	pushf  
  428015:	xchg   ecx,eax
  428016:	cmp    eax,0xe749d51b
  42801b:	xor    esp,DWORD PTR [ecx-0x75]
  42801e:	das    
  42801f:	push   ds
  428020:	test   ebx,ebx
  428022:	imul   DWORD PTR [ebx+0x17dc6154]
  428028:	and    ah,BYTE PTR [edx-0x78]
  42802b:	xchg   ebp,eax
  42802c:	test   BYTE PTR [esi],dl
  42802e:	je     0x42804b
  428030:	pop    edx
  428031:	or     BYTE PTR [edx],ah
  428033:	enter  0xb05d,0xb5
  428037:	repz add esi,eax
  42803a:	fs and bl,dh
  42803d:	fdivr  QWORD PTR [ebx]
  42803f:	sbb    DWORD PTR [edi+0x5f],ebx
  428042:	mov    eax,0xc92d3b41
  428047:	daa    
  428048:	(bad)  
  428049:	not    DWORD PTR [ebp-0x77af0ff9]
  42804f:	inc    edi
  428050:	mov    ecx,0x11b05b28
  428055:	jnp    0x428053
  428057:	rcr    BYTE PTR [esi-0x21010869],cl
  42805d:	xchg   ecx,eax
  42805e:	mov    ah,0x44
  428060:	ins    BYTE PTR es:[edi],dx
  428061:	ins    BYTE PTR es:[edi],dx
  428062:	imul   ecx,ecx,0xc2fb6338
  428068:	pushf  
  428069:	ins    DWORD PTR es:[edi],dx
  42806a:	add    al,0x0
  42806c:	inc    ecx
  42806d:	mov    ?,WORD PTR cs:[esi]
  428070:	(bad)  
  428072:	ret    
  428073:	adc    eax,0x4059bf66
  428078:	push   ds
  428079:	fs xchg ebp,eax
  42807b:	xor    esp,DWORD PTR [ebx+0x1c76e276]
  428081:	in     eax,dx
  428082:	in     al,0x6b
  428084:	xchg   edx,eax
  428085:	sbb    BYTE PTR [edi-0x4],0x6b
  428089:	inc    edx
  42808a:	push   esp
  42808b:	push   eax
  42808c:	fwait
  42808d:	lods   eax,DWORD PTR ds:[esi]
  42808e:	stc    
  42808f:	push   esi
  428090:	add    DWORD PTR [ebx+0x4],edx
  428093:	hlt    
  428094:	dec    ebp
  428095:	mov    al,0x6e
  428097:	cdq    
  428098:	fadd   DWORD PTR [ecx-0x820d084]
  42809e:	mov    DWORD PTR [ecx],edi
  4280a0:	cli    
  4280a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4280a2:	out    dx,al
  4280a3:	dec    esp
  4280a4:	xchg   esp,eax
  4280a5:	xchg   esp,eax
  4280a6:	mov    edi,0xbf8f456
  4280ab:	mov    dh,0x8b
  4280ad:	fld    TBYTE PTR [edi+0x5cf91c1b]
  4280b3:	inc    edi
  4280b4:	loop   0x4280df
  4280b6:	jno    0x428093
  4280b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4280b9:	scas   eax,DWORD PTR es:[edi]
  4280ba:	mov    BYTE PTR [ebp+0x7d],bl
  4280bd:	mov    ecx,0xce50cd99
  4280c2:	retf   0x796d
  4280c5:	mov    ch,0x84
  4280c7:	sub    eax,ebx
  4280c9:	push   ebx
  4280ca:	mov    edi,0x41103d07
  4280cf:	or     ah,dh
  4280d1:	cdq    
  4280d2:	and    DWORD PTR [eax],edi
  4280d4:	adc    al,0xe4
  4280d6:	or     dl,BYTE PTR [ebp+0x670017a3]
  4280dc:	add    BYTE PTR [eax],al
  4280de:	add    BYTE PTR [eax],al
  4280e0:	add    BYTE PTR [eax],al
  4280e2:	(bad)  
  4280e3:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  4280e5:	push   eax
  4280e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4280e7:	shl    bh,cl
  4280e9:	div    DWORD PTR [ebx-0x60d89742]
  4280ef:	jmp    0xf8821130
  4280f4:	add    DWORD PTR [eax],eax
  4280f6:	fadd   DWORD PTR [eax+eax*1]
  4280f9:	add    BYTE PTR [ebx+0x6fe1d2e7],ch
  4280ff:	pop    edi
  428100:	not    edi
  428102:	pop    edx
  428103:	dec    ax
  428105:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  428107:	sub    eax,0xb538c533
  42810c:	test   BYTE PTR [eax],dh
  42810e:	mov    bl,al
  428110:	xchg   esi,eax
  428111:	rcl    DWORD PTR [edi],1
  428113:	pop    es
  428114:	jle    0x4280dd
  428116:	loope  0x428195
  428118:	ss stos BYTE PTR es:[edi],al
  42811a:	sbb    edx,eax
  42811c:	inc    ebx
  42811d:	(bad)  
  42811e:	cwde   
  42811f:	pop    ds
  428120:	mov    DWORD PTR [ecx+0x33a0e6dc],0x425ac06
  42812a:	or     edi,DWORD PTR [edi+0x60]
  42812d:	iret   
  42812e:	cli    
  42812f:	and    eax,0x250e5b02
  428134:	out    dx,eax
  428135:	sub    BYTE PTR [esi+0x3896d6dd],0x50
  42813c:	outs   dx,DWORD PTR ds:[esi]
  42813d:	xchg   edi,eax
  42813e:	idiv   ch
  428140:	xchg   ebp,eax
  428141:	adc    DWORD PTR [eax+0x74],ebp
  428144:	sub    DWORD PTR [ecx-0x33],ebp
  428147:	imul   edi,edx,0x681045a3
  42814d:	retf   
  42814e:	int    0x5a
  428150:	and    DWORD PTR [esi-0x25448e0],ebx
  428156:	retf   0x2e82
  428159:	call   0xbc86f193
  42815e:	jnp    0x4281c7
  428160:	sub    ecx,DWORD PTR [edi]
  428162:	in     eax,0x48
  428164:	sub    DWORD PTR ds:0xc287c3b8,ecx
  42816a:	in     eax,dx
  42816b:	scas   eax,DWORD PTR es:[edi]
  42816c:	call   0x1d01:0xb381cd9b
  428173:	ja     0x428109
  428175:	mov    edi,0x9f059dfc
  42817a:	cmp    BYTE PTR ds:0x4a6bfda4,0x51
  428181:	mov    ebx,?
  428183:	and    DWORD PTR [eax+ecx*4],eax
  428186:	push   ebx
  428187:	cmp    ecx,esi
  428189:	pop    eax
  42818a:	push   ebx
  42818b:	sbb    dh,BYTE PTR [edi+0xd]
  42818e:	cmp    DWORD PTR [edi],esp
  428190:	jle    0x428172
  428192:	or     dl,BYTE PTR [edi+0x383ca4d2]
  428198:	imul   esi,edi,0xc935cbce
  42819e:	jbe    0x4281c2
  4281a0:	sub    DWORD PTR [edx+0x42],ebx
  4281a3:	xchg   edx,eax
  4281a4:	jns    0x428183
  4281a6:	xchg   esi,eax
  4281a7:	or     eax,0x4c5c0269
  4281ac:	fisub  WORD PTR [edi+0x20]
  4281af:	shr    ch,0xf4
  4281b2:	data16 das 
  4281b4:	cwde   
  4281b5:	sbb    eax,0x610f122
  4281ba:	cli    
  4281bb:	popf   
  4281bc:	adc    al,0x7
  4281be:	mov    ecx,ebx
  4281c0:	in     eax,0xb3
  4281c2:	adc    BYTE PTR [esi],bl
  4281c4:	mov    dl,0x30
  4281c6:	shl    BYTE PTR [edx],cl
  4281c8:	popf   
  4281c9:	inc    ebp
  4281ca:	into   
  4281cb:	ins    BYTE PTR es:[edi],dx
  4281cc:	adc    eax,0x32603a6
  4281d1:	xchg   esi,eax
  4281d2:	loopne 0x42823f
  4281d4:	sub    dl,BYTE PTR [ebx+0x6f]
  4281d7:	xchg   ecx,eax
  4281d8:	adc    al,0xc8
  4281da:	xchg   ecx,eax
  4281db:	hlt    
  4281dc:	dec    edi
  4281dd:	or     al,0x52
  4281df:	inc    ebp
  4281e0:	sti    
  4281e1:	outs   dx,BYTE PTR ds:[esi]
  4281e2:	xchg   ebp,eax
  4281e3:	cmp    eax,DWORD PTR [edx+0x52e058ea]
  4281e9:	clc    
  4281ea:	int3   
  4281eb:	sbb    DWORD PTR ss:[edx],edx
  4281ee:	dec    ecx
  4281ef:	loop   0x42821a
  4281f1:	ret    
  4281f2:	hlt    
  4281f3:	stos   BYTE PTR es:[edi],al
  4281f4:	or     DWORD PTR [edx+0x2e],0x88ffd1d4
  4281fb:	(bad)  
  4281fc:	sub    eax,0x4f6620cd
  428201:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428202:	int3   
  428203:	xor    dl,BYTE PTR [edi-0x7ff146d8]
  428209:	cmp    cl,cl
  42820b:	xchg   edi,eax
  42820c:	mov    esi,0xb22521db
  428211:	ins    DWORD PTR es:[edi],dx
  428212:	setge  BYTE PTR [ebx+0x6f]
  428216:	repz mov ecx,0xebe09c64
  42821c:	push   eax
  42821d:	ret    0x610a
  428220:	push   0xffffffa5
  428222:	or     eax,0xb71fe154
  428227:	ins    DWORD PTR es:[edi],dx
  428228:	or     esp,esi
  42822a:	xor    eax,0x49f7f364
  42822f:	dec    ecx
  428230:	pop    ss
  428231:	mov    ds:0xd9aa612d,al
  428236:	mov    ebp,0xbd89a895
  42823b:	loopne 0x4281c5
  42823d:	cld    
  42823e:	inc    esi
  42823f:	adc    eax,0xe0bd0fbd
  428244:	or     al,0x68
  428246:	mov    esi,0xae51e6aa
  42824b:	jge    0x4281fa
  42824d:	pop    ds
  42824e:	daa    
  42824f:	js     0x42826e
  428251:	fidiv  DWORD PTR [esi-0x26]
  428254:	push   ebp
  428255:	fnstsw WORD PTR [ecx-0x19e66a24]
  42825b:	int    0xaa
  42825d:	inc    ebx
  42825e:	rcl    DWORD PTR [ebx+0x277c0413],0xd0
  428265:	sbb    eax,0xdfcfe648
  42826a:	adc    al,0xa1
  42826c:	dec    ebx
  42826d:	jge    0x4282e6
  42826f:	or     dl,bl
  428271:	lock pusha 
  428273:	sub    ecx,DWORD PTR [eax+0x17e3a269]
  428279:	icebp  
  42827a:	cwde   
  42827b:	hlt    
  42827c:	outs   dx,BYTE PTR ds:[esi]
  42827d:	push   eax
  42827e:	in     al,0x2a
  428280:	repnz jecxz 0x4282db
  428283:	iret   
  428284:	adc    eax,0x50446af3
  428289:	dec    esi
  42828a:	xchg   BYTE PTR [esi-0x6411407],dh
  428290:	popa   
  428291:	or     DWORD PTR [ecx+ecx*2+0xe],edx
  428295:	js     0x4282d4
  428297:	stc    
  428298:	es loop 0x4282ef
  42829b:	das    
  42829c:	push   esi
  42829d:	arpl   WORD PTR [esi+0xfb551b],si
  4282a3:	jl     0x428254
  4282a5:	(bad)  
  4282a6:	loope  0x42822f
  4282a8:	(bad)  
  4282a9:	lock sbb eax,0x81b24e37
  4282af:	mov    ch,0x33
  4282b1:	dec    ebx
  4282b2:	stos   DWORD PTR es:[edi],eax
  4282b3:	pop    es
  4282b4:	add    DWORD PTR ds:0xfcc63fde,esp
  4282ba:	sub    eax,0xb21c6993
  4282bf:	push   edx
  4282c0:	xor    edx,eax
  4282c2:	inc    edx
  4282c3:	fimul  DWORD PTR [eax+0x22e5f045]
  4282c9:	mov    ds:0xe56d819,al
  4282ce:	jbe    0x42825b
  4282d0:	bound  ecx,QWORD PTR [ebx]
  4282d2:	iret   
  4282d3:	leave  
  4282d4:	dec    ecx
  4282d5:	cwde   
  4282d6:	xor    DWORD PTR ds:0x9b1ff7ba,esp
  4282dc:	out    0x49,al
  4282de:	pop    edi
  4282df:	and    DWORD PTR [esi-0x14],ebp
  4282e2:	dec    edx
  4282e3:	into   
  4282e4:	xor    eax,0x5da54e82
  4282e9:	inc    edi
  4282ea:	cli    
  4282eb:	jb     0x42828a
  4282ed:	dec    esi
  4282ee:	call   DWORD PTR [edx+0x0]
  4282f1:	pop    esp
  4282f2:	mov    edi,0xd5943220
  4282f7:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  4282f9:	fwait
  4282fa:	push   ebp
  4282fb:	push   cs
  4282fc:	test   al,0xc
  4282fe:	ror    edx,1
  428300:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428301:	jbe    0x4282f6
  428303:	lock mov ecx,0xe4d97484
  428309:	and    dh,BYTE PTR [bp-0x5b94]
  42830e:	mov    bl,0x68
  428310:	sbb    esp,esi
  428312:	ficomp WORD PTR [esi]
  428314:	sub    al,0x33
  428316:	pop    eax
  428317:	xor    BYTE PTR [ebp+0x67db7f77],bh
  42831d:	(bad)  
  42831e:	jo     0x428363
  428320:	ror    ecx,cl
  428322:	and    cl,bl
  428324:	sub    BYTE PTR [ecx],dl
  428326:	dec    eax
  428327:	sbb    DWORD PTR [esi],ebx
  428329:	inc    BYTE PTR [ebp+0x59becc2c]
  42832f:	or     DWORD PTR [ebp+0x2e2eb48b],edi
  428335:	mov    ebp,0x8aec76ae
  42833a:	(bad)  
  42833b:	or     eax,0x14b30f2f
  428340:	call   0x53ae:0xf10df5fa
  428347:	xor    ch,BYTE PTR [esi+0x52]
  42834a:	mov    ebx,es
  42834c:	xchg   esp,eax
  42834d:	leave  
  42834e:	dec    ecx
  42834f:	mov    esi,0x749813ea
  428354:	inc    esi
  428355:	mov    dh,0xdd
  428357:	out    dx,eax
  428358:	out    dx,eax
  428359:	data16 sub ch,bl
  42835c:	xchg   edi,eax
  42835d:	xchg   edx,eax
  42835e:	push   ss
  42835f:	add    edx,DWORD PTR [ebp-0x62dfbd70]
  428365:	xchg   edx,eax
  428366:	repnz sub BYTE PTR [ebp+0xf],bl
  42836a:	and    DWORD PTR [ecx+0x57249c38],ebx
  428370:	push   es
  428371:	(bad)  
  428372:	fdivp  st(1),st
  428374:	push   esi
  428375:	inc    edi
  428376:	ret    0x8db3
  428379:	test   al,0x3e
  42837b:	or     BYTE PTR [edi-0x636124e1],ch
  428381:	fidivr WORD PTR [eax-0x2c]
  428384:	xchg   dh,bh
  428386:	and    ebp,DWORD PTR [di+0x4d]
  42838a:	and    BYTE PTR [esi-0x49875df3],dl
  428390:	pop    DWORD PTR [eax]
  428392:	sub    BYTE PTR [ecx+0x12],0xee
  428396:	cmp    ch,BYTE PTR [ebp+0x6b]
  428399:	cli    
  42839a:	push   edx
  42839b:	int    0xe7
  42839d:	pop    ss
  42839e:	sar    BYTE PTR [esi+0x5cefbc7f],0xea
  4283a5:	cmp    BYTE PTR [edx+0x1c7cf137],cl
  4283ab:	jo     0x4283e2
  4283ad:	pop    eax
  4283ae:	xchg   esi,eax
  4283af:	inc    edi
  4283b0:	jmp    0x428363
  4283b2:	and    ebp,DWORD PTR [edi]
  4283b4:	rcl    DWORD PTR [ecx],0xf2
  4283b7:	and    ebx,ebp
  4283b9:	xor    BYTE PTR [ebp-0x30],0xcd
  4283bd:	mov    ah,0x75
  4283bf:	mov    edx,0x7c719669
  4283c4:	outs   dx,BYTE PTR ds:[esi]
  4283c5:	add    DWORD PTR [esi+0x3a],ebp
  4283c8:	test   eax,0x51402932
  4283cd:	inc    ecx
  4283ce:	outs   dx,DWORD PTR ds:[esi]
  4283cf:	int3   
  4283d0:	stc    
  4283d1:	mov    ch,0xb3
  4283d3:	mov    ch,0x5d
  4283d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4283d6:	retf   0x4e6
  4283d9:	inc    ebx
  4283da:	call   FWORD PTR [eax-0x36]
  4283dd:	push   ss
  4283de:	out    dx,al
  4283df:	cmp    ebp,ebx
  4283e1:	mov    eax,0x98db5924
  4283e6:	in     eax,dx
  4283e7:	sub    DWORD PTR [edx+0x40fce0c4],esp
  4283ed:	fcomp  st(5)
  4283ef:	retf   0x7f85
  4283f2:	aas    
  4283f3:	pop    ebp
  4283f4:	(bad)  
  4283f5:	fld    TBYTE PTR [eax*1-0x42d090fb]
  4283fc:	and    eax,0x1e829aad
  428401:	mov    ds:0xacc60f87,al
  428406:	retf   0xeaac
  428409:	sar    BYTE PTR [ecx-0x2],cl
  42840c:	cmp    al,0x7e
  42840e:	inc    edx
  42840f:	push   esi
  428410:	push   esp
  428411:	clc    
  428412:	inc    esi
  428413:	pusha  
  428414:	shl    BYTE PTR [edx],0xe4
  428417:	mov    ah,0x5d
  428419:	stos   BYTE PTR es:[edi],al
  42841a:	mov    ch,0x97
  42841c:	cwde   
  42841d:	or     bl,ch
  42841f:	mov    fs,WORD PTR [ebp-0x63a69589]
  428425:	sub    eax,0x5a35806e
  42842a:	xor    al,0x6a
  42842c:	pop    es
  42842d:	iret   
  42842e:	idiv   DWORD PTR ds:0xfb1ee247
  428434:	ss jae 0x428474
  428437:	jmp    0x4283be
  428439:	dec    ebx
  42843a:	iret   
  42843b:	push   ds
  42843c:	xchg   ecx,eax
  42843d:	mov    dh,0x9d
  42843f:	and    BYTE PTR [ebp+0x1bce6260],al
  428445:	ins    DWORD PTR es:[edi],dx
  428446:	mov    cl,BYTE PTR [ebx]
  428448:	push   ds
  428449:	dec    esp
  42844a:	mov    ah,0x9e
  42844c:	xor    DWORD PTR [edi+0x1865d53e],0xc29977da
  428456:	xor    ecx,DWORD PTR [ebp-0x3aad055e]
  42845c:	arpl   WORD PTR cs:[esi],ax
  42845f:	lock cmp BYTE PTR [ebp+eiz*4+0x62cb44a5],dh
  428467:	sbb    al,0x5a
  428469:	mov    dh,BYTE PTR [ebx]
  42846b:	div    DWORD PTR [ebp+eax*4-0x7d]
  42846f:	adc    DWORD PTR [edx],ebx
  428471:	stos   DWORD PTR es:[edi],eax
  428472:	sub    ecx,DWORD PTR [esi-0x3d6b6e9]
  428478:	sbb    eax,0xc3daf8b8
  42847d:	imul   ebx,DWORD PTR [eax+0x12152c2f],0xe2625e1c
  428487:	int3   
  428488:	jp     0x4284d0
  42848a:	mov    ebp,0x2f499c11
  42848f:	fidivr DWORD PTR [bp+si-0x5c]
  428493:	test   al,0x5d
  428495:	out    0x76,al
  428497:	jl     0x42846c
  428499:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42849a:	addr16 gs hlt 
  42849d:	ror    BYTE PTR [edi+eax*4],cl
  4284a0:	int    0xdc
  4284a2:	push   esp
  4284a3:	mov    ebp,0x1e60e774
  4284a8:	sbb    eax,0xadcbb2f2
  4284ad:	push   ebp
  4284ae:	or     BYTE PTR [edx],cl
  4284b0:	pop    ebp
  4284b1:	dec    esi
  4284b2:	addr16 jbe 0x4284a7
  4284b5:	adc    BYTE PTR [ebp-0x43],0x6b
  4284b9:	hlt    
  4284ba:	xor    bh,BYTE PTR [ebx-0x72245d7e]
  4284c0:	inc    edi
  4284c1:	out    0x76,eax
  4284c3:	push   ss
  4284c4:	in     al,dx
  4284c5:	push   ebp
  4284c6:	stos   DWORD PTR es:[edi],eax
  4284c7:	mov    ds:0xf88eea86,eax
  4284cc:	mov    ds:0x69c68b3b,eax
  4284d1:	jp     0x42847c
  4284d3:	or     ch,BYTE PTR [esi-0x44]
  4284d6:	loop   0x42852c
  4284d8:	xlat   BYTE PTR ds:[ebx]
  4284d9:	hlt    
  4284da:	cmp    DWORD PTR [ecx+0x13],esp
  4284dd:	sub    BYTE PTR [esi-0x1578a0df],ch
  4284e3:	call   0x24b98a2d
  4284e8:	jmp    0xa3e9:0x4fa3a4c3
  4284ef:	retf   
  4284f0:	xor    ch,cl
  4284f2:	push   0xe9a8686e
  4284f7:	xlat   BYTE PTR ds:[ebx]
  4284f8:	inc    eax
  4284f9:	repz ja 0x428534
  4284fc:	pop    edx
  4284fd:	inc    ebx
  4284fe:	or     eax,0x1df9d368
  428503:	xchg   edi,eax
  428504:	jo     0x4284d5
  428506:	dec    edx
  428507:	xchg   edx,eax
  428508:	ret    0xdec4
  42850b:	js     0x428510
  42850d:	fdivrp st(1),st
  42850f:	stos   DWORD PTR es:[edi],eax
  428510:	repnz push ecx
  428512:	test   DWORD PTR [edx-0x5b20fde7],esp
  428518:	lock push edx
  42851a:	mov    BYTE PTR [edi-0x5d13d4f4],cl
  428520:	xchg   edx,eax
  428521:	pop    es
  428522:	and    BYTE PTR [edx-0x32ac654f],al
  428528:	pop    es
  428529:	jns    0x4284c1
  42852b:	inc    eax
  42852c:	xchg   edx,eax
  42852d:	mov    eax,0xd4e9268c
  428532:	retf   
  428533:	xor    BYTE PTR [ecx+0x1b],0x5e
  428537:	outs   dx,BYTE PTR ds:[esi]
  428538:	mov    edx,ebx
  42853a:	xchg   edx,eax
  42853b:	(bad)
  42853e:	dec    esp
  42853f:	les    ecx,FWORD PTR [ebx+0x10]
  428542:	and    ebx,DWORD PTR [ebx-0x2397496b]
  428548:	push   0xffffffce
  42854a:	pop    ss
  42854b:	cdq    
  42854c:	std    
  42854d:	sub    edx,DWORD PTR [ecx-0x66e9c0ba]
  428553:	mov    cl,0x29
  428555:	pop    ebx
  428556:	pop    ebx
  428557:	pcmpgtw mm5,mm7
  42855a:	cmp    eax,0xab542535
  42855f:	leave  
  428560:	mov    ebx,0x434f3068
  428565:	jle    0x42850b
  428567:	xor    eax,0xcce937ee
  42856c:	xor    al,0x14
  42856e:	retf   
  42856f:	sub    bh,BYTE PTR [ecx+0x55]
  428572:	dec    ebp
  428573:	rcr    DWORD PTR [ebp-0x5a51832],0x1e
  42857a:	fisubr DWORD PTR [ebx-0x7a]
  42857d:	outs   dx,BYTE PTR ds:[esi]
  42857e:	fild   DWORD PTR [edi+0x24]
  428581:	dec    edi
  428582:	push   ebx
  428583:	pop    ds
  428584:	sbb    eax,esp
  428586:	jne    0x428590
  428588:	mov    bl,0xce
  42858a:	push   0xd7e877dd
  42858f:	mov    edx,eax
  428591:	outs   dx,DWORD PTR ds:[esi]
  428592:	and    al,0xcc
  428594:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428595:	jle    0x42860e
  428597:	jo     0x4285d1
  428599:	adc    BYTE PTR [esi-0x40cf72c9],ch
  42859f:	dec    ecx
  4285a0:	jmp    DWORD PTR ds:0x34aba126
  4285a6:	cld    
  4285a7:	sbb    cl,BYTE PTR [edi+edx*4-0x74318907]
  4285ae:	xor    BYTE PTR [eax-0x25729112],bh
  4285b4:	mov    bl,0x22
  4285b6:	lahf   
  4285b7:	test   al,0xdc
  4285b9:	les    ebx,FWORD PTR [ebx-0x713cea38]
  4285bf:	xchg   ecx,eax
  4285c0:	je     0x428588
  4285c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4285c3:	pop    es
  4285c4:	clc    
  4285c5:	in     eax,dx
  4285c6:	push   cs
  4285c7:	adc    eax,0x10ff3415
  4285cc:	adc    eax,ebx
  4285ce:	fdiv   QWORD PTR [eax+esi*2+0x17]
