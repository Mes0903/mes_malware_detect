
82d11ca77e74621d42f4104d94e8ba68eb733e5491b3a369fc1e2b1da73b2e5c.exe:     file format pei-i386


Disassembly of section .text:

10001000 <.text>:
10001000:	push   DWORD PTR [ecx]
10001002:	call   DWORD PTR ds:0x100662b4
10001008:	ret    
10001009:	mov    DWORD PTR [ecx],0x100665c8
1000100f:	jmp    0x10043210
10001014:	push   esi
10001015:	mov    esi,ecx
10001017:	mov    DWORD PTR [esi],0x100665c8
1000101d:	call   0x10043210
10001022:	test   BYTE PTR [esp+0x8],0x1
10001027:	je     0x10001030
10001029:	push   esi
1000102a:	call   0x100430d2
1000102f:	pop    ecx
10001030:	mov    eax,esi
10001032:	pop    esi
10001033:	ret    0x4
10001036:	push   ebp
10001037:	mov    ebp,esp
10001039:	push   DWORD PTR [ebp+0x14]
1000103c:	push   DWORD PTR [ebp+0x10]
1000103f:	push   DWORD PTR [ebp+0xc]
10001042:	push   DWORD PTR [ebp+0x8]
10001045:	call   0x10043605
1000104a:	mov    eax,DWORD PTR [ebp+0x8]
1000104d:	add    esp,0x10
10001050:	pop    ebp
10001051:	ret    
10001052:	push   ebp
10001053:	mov    ebp,esp
10001055:	push   DWORD PTR [ebp+0x14]
10001058:	push   DWORD PTR [ebp+0x10]
1000105b:	push   DWORD PTR [ebp+0xc]
1000105e:	push   DWORD PTR [ebp+0x8]
10001061:	call   0x100430e6
10001066:	mov    eax,DWORD PTR [ebp+0x8]
10001069:	add    esp,0x10
1000106c:	pop    ebp
1000106d:	ret    
1000106e:	push   0x4
10001070:	mov    eax,0x1005fb64
10001075:	call   0x10059c75
1000107a:	mov    esi,ecx
1000107c:	mov    DWORD PTR [ebp-0x10],esi
1000107f:	call   0x10043141
10001084:	and    DWORD PTR [ebp-0x4],0x0
10001088:	push   DWORD PTR [ebp+0x8]
1000108b:	lea    ecx,[esi+0xc]
1000108e:	mov    DWORD PTR [esi],0x1006b960
10001094:	call   0x100011ab
10001099:	mov    eax,esi
1000109b:	call   0x10059d4d
100010a0:	ret    0x4
100010a3:	push   esi
100010a4:	mov    esi,ecx
100010a6:	push   0x0
100010a8:	push   0x1
100010aa:	lea    ecx,[esi+0xc]
100010ad:	mov    DWORD PTR [esi],0x1006b960
100010b3:	call   0x100012f4
100010b8:	mov    ecx,esi
100010ba:	pop    esi
100010bb:	jmp    0x10043210
100010c0:	push   esi
100010c1:	mov    esi,ecx
100010c3:	call   0x100010a3
100010c8:	test   BYTE PTR [esp+0x8],0x1
100010cd:	je     0x100010d6
100010cf:	push   esi
100010d0:	call   0x100430d2
100010d5:	pop    ecx
100010d6:	mov    eax,esi
100010d8:	pop    esi
100010d9:	ret    0x4
100010dc:	mov    DWORD PTR [ecx],0x1006b978
100010e2:	jmp    0x100010a3
100010e7:	push   esi
100010e8:	mov    esi,ecx
100010ea:	mov    DWORD PTR [esi],0x1006b978
100010f0:	call   0x100010a3
100010f5:	test   BYTE PTR [esp+0x8],0x1
100010fa:	je     0x10001103
100010fc:	push   esi
100010fd:	call   0x100430d2
10001102:	pop    ecx
10001103:	mov    eax,esi
10001105:	pop    esi
10001106:	ret    0x4
10001109:	push   esi
1000110a:	push   DWORD PTR [esp+0x8]
1000110e:	mov    esi,ecx
10001110:	call   0x10001121
10001115:	mov    DWORD PTR [esi],0x1006b978
1000111b:	mov    eax,esi
1000111d:	pop    esi
1000111e:	ret    0x4
10001121:	push   0x4
10001123:	mov    eax,0x1005fb64
10001128:	call   0x10059c75
1000112d:	mov    esi,ecx
1000112f:	mov    DWORD PTR [ebp-0x10],esi
10001132:	mov    edi,DWORD PTR [ebp+0x8]
10001135:	push   edi
10001136:	call   0x100431b8
1000113b:	and    DWORD PTR [ebp-0x4],0x0
1000113f:	add    edi,0xc
10001142:	push   edi
10001143:	lea    ecx,[esi+0xc]
10001146:	mov    DWORD PTR [esi],0x1006b960
1000114c:	call   0x100011ab
10001151:	mov    eax,esi
10001153:	call   0x10059d4d
10001158:	ret    0x4
1000115b:	push   0x28
1000115d:	mov    eax,0x10063334
10001162:	call   0x10059cde
10001167:	mov    eax,DWORD PTR [ebp+0x8]
1000116a:	lea    edx,[ebp-0x34]
1000116d:	push   edx
1000116e:	push   eax
1000116f:	call   0x10019ac3
10001174:	and    DWORD PTR [ebp-0x4],0x0
10001178:	lea    edi,[ebp-0x34]
1000117b:	call   0x10019983
10001180:	mov    bl,al
10001182:	neg    bl
10001184:	push   0x0
10001186:	sbb    bl,bl
10001188:	push   0x1
1000118a:	lea    ecx,[ebp-0x30]
1000118d:	inc    bl
1000118f:	call   0x100012f4
10001194:	mov    al,bl
10001196:	call   0x10059d61
1000119b:	ret    0x4
1000119e:	push   0x0
100011a0:	push   0x1
100011a2:	add    ecx,0x4
100011a5:	call   0x100012f4
100011aa:	ret    
100011ab:	push   esi
100011ac:	mov    esi,ecx
100011ae:	push   0x0
100011b0:	mov    DWORD PTR [esi+0x18],0xf
100011b7:	call   0x10001420
100011bc:	push   0xffffffff
100011be:	push   0x0
100011c0:	push   DWORD PTR [esp+0x10]
100011c4:	mov    ecx,esi
100011c6:	call   0x10001245
100011cb:	mov    eax,esi
100011cd:	pop    esi
100011ce:	ret    0x4
100011d1:	push   esi
100011d2:	mov    esi,ecx
100011d4:	push   0x0
100011d6:	mov    DWORD PTR [esi+0x18],0xf
100011dd:	call   0x10001420
100011e2:	push   DWORD PTR [esp+0x8]
100011e6:	mov    ecx,esi
100011e8:	call   0x100012d7
100011ed:	mov    eax,esi
100011ef:	pop    esi
100011f0:	ret    0x4
100011f3:	cmp    DWORD PTR [ecx+0x18],0x10
100011f7:	jb     0x100011fd
100011f9:	mov    eax,DWORD PTR [ecx+0x4]
100011fc:	ret    
100011fd:	lea    eax,[ecx+0x4]
10001200:	ret    
10001201:	push   0x0
10001203:	mov    eax,0x10060962
10001208:	call   0x10059c75
1000120d:	mov    esi,DWORD PTR [ebp+0x8]
10001210:	and    DWORD PTR [ebp-0x4],0x0
10001214:	push   DWORD PTR [esi+0x18]
10001217:	call   DWORD PTR ds:0x10066070
1000121d:	lea    eax,[esi+0xc]
10001220:	call   0x1000149a
10001225:	or     DWORD PTR [ebp-0x4],0xffffffff
10001229:	mov    eax,esi
1000122b:	call   0x100014cf
10001230:	call   0x10059d4d
10001235:	ret    0x4
10001238:	jmp    0x100014cf
1000123d:	push   ecx
1000123e:	call   0x1000149a
10001243:	pop    ecx
10001244:	ret    
10001245:	push   ebp
10001246:	mov    ebp,esp
10001248:	mov    eax,DWORD PTR [ebp+0xc]
1000124b:	push   ebx
1000124c:	push   esi
1000124d:	push   edi
1000124e:	mov    edi,DWORD PTR [ebp+0x8]
10001251:	cmp    DWORD PTR [edi+0x14],eax
10001254:	mov    ebx,ecx
10001256:	jae    0x1000125d
10001258:	call   0x1005747f
1000125d:	mov    esi,DWORD PTR [edi+0x14]
10001260:	mov    eax,DWORD PTR [ebp+0xc]
10001263:	sub    esi,eax
10001265:	cmp    DWORD PTR [ebp+0x10],esi
10001268:	jae    0x1000126d
1000126a:	mov    esi,DWORD PTR [ebp+0x10]
1000126d:	cmp    ebx,edi
1000126f:	mov    ecx,ebx
10001271:	jne    0x1000128b
10001273:	push   0xffffffff
10001275:	add    esi,eax
10001277:	push   esi
10001278:	call   0x100013b1
1000127d:	push   DWORD PTR [ebp+0xc]
10001280:	mov    ecx,ebx
10001282:	push   0x0
10001284:	call   0x100013b1
10001289:	jmp    0x100012ce
1000128b:	push   0x0
1000128d:	push   esi
1000128e:	call   0x1000143c
10001293:	test   al,al
10001295:	je     0x100012ce
10001297:	cmp    DWORD PTR [edi+0x18],0x10
1000129b:	jb     0x100012a2
1000129d:	mov    edi,DWORD PTR [edi+0x4]
100012a0:	jmp    0x100012a5
100012a2:	add    edi,0x4
100012a5:	mov    ecx,DWORD PTR [ebx+0x18]
100012a8:	cmp    ecx,0x10
100012ab:	jb     0x100012b2
100012ad:	mov    eax,DWORD PTR [ebx+0x4]
100012b0:	jmp    0x100012b5
100012b2:	lea    eax,[ebx+0x4]
100012b5:	mov    edx,DWORD PTR [ebp+0xc]
100012b8:	push   esi
100012b9:	add    edi,edx
100012bb:	push   edi
100012bc:	push   ecx
100012bd:	push   eax
100012be:	call   0x10001036
100012c3:	add    esp,0x10
100012c6:	push   esi
100012c7:	mov    ecx,ebx
100012c9:	call   0x10001420
100012ce:	pop    edi
100012cf:	pop    esi
100012d0:	mov    eax,ebx
100012d2:	pop    ebx
100012d3:	pop    ebp
100012d4:	ret    0xc
100012d7:	push   esi
100012d8:	push   DWORD PTR [esp+0x8]
100012dc:	mov    esi,ecx
100012de:	call   0x10043250
100012e3:	pop    ecx
100012e4:	push   eax
100012e5:	push   DWORD PTR [esp+0xc]
100012e9:	mov    ecx,esi
100012eb:	call   0x1000133f
100012f0:	pop    esi
100012f1:	ret    0x4
100012f4:	cmp    BYTE PTR [esp+0x4],0x0
100012f9:	push   esi
100012fa:	mov    esi,ecx
100012fc:	je     0x10001329
100012fe:	cmp    DWORD PTR [esi+0x18],0x10
10001302:	jb     0x10001329
10001304:	cmp    DWORD PTR [esp+0xc],0x0
10001309:	lea    eax,[esi+0x4]
1000130c:	push   edi
1000130d:	mov    edi,DWORD PTR [eax]
1000130f:	jbe    0x10001321
10001311:	push   DWORD PTR [esp+0x10]
10001315:	push   edi
10001316:	push   0x10
10001318:	push   eax
10001319:	call   0x10001036
1000131e:	add    esp,0x10
10001321:	push   edi
10001322:	call   0x100430d2
10001327:	pop    ecx
10001328:	pop    edi
10001329:	push   DWORD PTR [esp+0xc]
1000132d:	mov    ecx,esi
1000132f:	mov    DWORD PTR [esi+0x18],0xf
10001336:	call   0x10001420
1000133b:	pop    esi
1000133c:	ret    0x8
1000133f:	push   ebp
10001340:	mov    ebp,esp
10001342:	push   esi
10001343:	push   edi
10001344:	mov    edi,DWORD PTR [ebp+0x8]
10001347:	push   edi
10001348:	mov    esi,ecx
1000134a:	call   0x100015e6
1000134f:	test   al,al
10001351:	je     0x10001371
10001353:	cmp    DWORD PTR [esi+0x18],0x10
10001357:	jb     0x1000135e
10001359:	mov    eax,DWORD PTR [esi+0x4]
1000135c:	jmp    0x10001361
1000135e:	lea    eax,[esi+0x4]
10001361:	push   DWORD PTR [ebp+0xc]
10001364:	sub    edi,eax
10001366:	push   edi
10001367:	push   esi
10001368:	mov    ecx,esi
1000136a:	call   0x10001245
1000136f:	jmp    0x100013ab
10001371:	push   0x0
10001373:	push   DWORD PTR [ebp+0xc]
10001376:	mov    ecx,esi
10001378:	call   0x1000143c
1000137d:	test   al,al
1000137f:	je     0x100013a9
10001381:	mov    ecx,DWORD PTR [esi+0x18]
10001384:	cmp    ecx,0x10
10001387:	jb     0x1000138e
10001389:	mov    eax,DWORD PTR [esi+0x4]
1000138c:	jmp    0x10001391
1000138e:	lea    eax,[esi+0x4]
10001391:	push   DWORD PTR [ebp+0xc]
10001394:	push   edi
10001395:	push   ecx
10001396:	push   eax
10001397:	call   0x10001036
1000139c:	add    esp,0x10
1000139f:	push   DWORD PTR [ebp+0xc]
100013a2:	mov    ecx,esi
100013a4:	call   0x10001420
100013a9:	mov    eax,esi
100013ab:	pop    edi
100013ac:	pop    esi
100013ad:	pop    ebp
100013ae:	ret    0x8
100013b1:	push   ebp
100013b2:	mov    ebp,esp
100013b4:	push   esi
100013b5:	push   edi
100013b6:	mov    edi,DWORD PTR [ebp+0x8]
100013b9:	mov    esi,ecx
100013bb:	cmp    DWORD PTR [esi+0x14],edi
100013be:	jae    0x100013c5
100013c0:	call   0x1005747f
100013c5:	mov    eax,DWORD PTR [esi+0x14]
100013c8:	sub    eax,edi
100013ca:	cmp    eax,DWORD PTR [ebp+0xc]
100013cd:	jae    0x100013d2
100013cf:	mov    DWORD PTR [ebp+0xc],eax
100013d2:	cmp    DWORD PTR [ebp+0xc],0x0
100013d6:	jbe    0x10001418
100013d8:	mov    ecx,DWORD PTR [esi+0x18]
100013db:	cmp    ecx,0x10
100013de:	push   ebx
100013df:	lea    edx,[esi+0x4]
100013e2:	jb     0x100013e8
100013e4:	mov    ebx,DWORD PTR [edx]
100013e6:	jmp    0x100013ea
100013e8:	mov    ebx,edx
100013ea:	cmp    ecx,0x10
100013ed:	jb     0x100013f1
100013ef:	mov    edx,DWORD PTR [edx]
100013f1:	sub    eax,DWORD PTR [ebp+0xc]
100013f4:	add    ebx,edi
100013f6:	add    ebx,DWORD PTR [ebp+0xc]
100013f9:	push   eax
100013fa:	push   ebx
100013fb:	sub    ecx,edi
100013fd:	push   ecx
100013fe:	add    edx,edi
10001400:	push   edx
10001401:	call   0x10001052
10001406:	mov    eax,DWORD PTR [esi+0x14]
10001409:	sub    eax,DWORD PTR [ebp+0xc]
1000140c:	add    esp,0x10
1000140f:	push   eax
10001410:	mov    ecx,esi
10001412:	call   0x10001420
10001417:	pop    ebx
10001418:	pop    edi
10001419:	mov    eax,esi
1000141b:	pop    esi
1000141c:	pop    ebp
1000141d:	ret    0x8
10001420:	cmp    DWORD PTR [ecx+0x18],0x10
10001424:	mov    eax,DWORD PTR [esp+0x4]
10001428:	mov    DWORD PTR [ecx+0x14],eax
1000142b:	jb     0x10001432
1000142d:	mov    ecx,DWORD PTR [ecx+0x4]
10001430:	jmp    0x10001435
10001432:	add    ecx,0x4
10001435:	mov    BYTE PTR [ecx+eax*1],0x0
10001439:	ret    0x4
1000143c:	push   esi
1000143d:	push   edi
1000143e:	mov    edi,DWORD PTR [esp+0xc]
10001442:	cmp    edi,0xfffffffe
10001445:	mov    esi,ecx
10001447:	jbe    0x1000144e
10001449:	call   0x10057440
1000144e:	cmp    DWORD PTR [esi+0x18],edi
10001451:	jae    0x10001460
10001453:	push   DWORD PTR [esi+0x14]
10001456:	mov    ecx,esi
10001458:	push   edi
10001459:	call   0x10001504
1000145e:	jmp    0x1000148d
10001460:	cmp    BYTE PTR [esp+0x10],0x0
10001465:	je     0x10001481
10001467:	cmp    edi,0x10
1000146a:	jae    0x10001481
1000146c:	mov    eax,DWORD PTR [esi+0x14]
1000146f:	cmp    edi,eax
10001471:	jae    0x10001475
10001473:	mov    eax,edi
10001475:	push   eax
10001476:	push   0x1
10001478:	mov    ecx,esi
1000147a:	call   0x100012f4
1000147f:	jmp    0x1000148d
10001481:	test   edi,edi
10001483:	jne    0x1000148d
10001485:	push   edi
10001486:	mov    ecx,esi
10001488:	call   0x10001420
1000148d:	xor    eax,eax
1000148f:	cmp    eax,edi
10001491:	sbb    eax,eax
10001493:	pop    edi
10001494:	neg    eax
10001496:	pop    esi
10001497:	ret    0x8
1000149a:	push   ebp
1000149b:	mov    ebp,esp
1000149d:	and    esp,0xfffffff8
100014a0:	push   ecx
100014a1:	push   ecx
100014a2:	push   ebx
100014a3:	push   edi
100014a4:	mov    edi,eax
100014a6:	mov    eax,DWORD PTR [edi+0x4]
100014a9:	mov    ecx,DWORD PTR [eax]
100014ab:	push   eax
100014ac:	push   edi
100014ad:	push   ecx
100014ae:	push   edi
100014af:	lea    ebx,[esp+0x18]
100014b3:	call   0x1000161a
100014b8:	push   DWORD PTR [edi+0x4]
100014bb:	call   0x100430d2
100014c0:	and    DWORD PTR [edi+0x4],0x0
100014c4:	and    DWORD PTR [edi+0x8],0x0
100014c8:	pop    ecx
100014c9:	pop    edi
100014ca:	pop    ebx
100014cb:	mov    esp,ebp
100014cd:	pop    ebp
100014ce:	ret    
100014cf:	push   ebp
100014d0:	mov    ebp,esp
100014d2:	and    esp,0xfffffff8
100014d5:	push   ecx
100014d6:	push   ecx
100014d7:	push   ebx
100014d8:	push   edi
100014d9:	mov    edi,eax
100014db:	mov    eax,DWORD PTR [edi+0x4]
100014de:	mov    ecx,DWORD PTR [eax]
100014e0:	push   eax
100014e1:	push   edi
100014e2:	push   ecx
100014e3:	push   edi
100014e4:	lea    ebx,[esp+0x18]
100014e8:	call   0x100016c6
100014ed:	push   DWORD PTR [edi+0x4]
100014f0:	call   0x100430d2
100014f5:	and    DWORD PTR [edi+0x4],0x0
100014f9:	and    DWORD PTR [edi+0x8],0x0
100014fd:	pop    ecx
100014fe:	pop    edi
100014ff:	pop    ebx
10001500:	mov    esp,ebp
10001502:	pop    ebp
10001503:	ret    
10001504:	push   0xc
10001506:	mov    eax,0x1005fb41
1000150b:	call   0x10059ca8
10001510:	mov    edi,ecx
10001512:	mov    DWORD PTR [ebp-0x18],edi
10001515:	mov    esi,DWORD PTR [ebp+0x8]
10001518:	or     esi,0xf
1000151b:	cmp    esi,0xfffffffe
1000151e:	jbe    0x10001525
10001520:	mov    esi,DWORD PTR [ebp+0x8]
10001523:	jmp    0x1000154a
10001525:	xor    edx,edx
10001527:	push   0x3
10001529:	mov    eax,esi
1000152b:	pop    ebx
1000152c:	div    ebx
1000152e:	mov    ecx,DWORD PTR [edi+0x18]
10001531:	mov    DWORD PTR [ebp-0x14],ecx
10001534:	shr    DWORD PTR [ebp-0x14],1
10001537:	mov    edx,DWORD PTR [ebp-0x14]
1000153a:	cmp    eax,edx
1000153c:	jae    0x1000154a
1000153e:	push   0xfffffffe
10001540:	pop    eax
10001541:	sub    eax,edx
10001543:	cmp    ecx,eax
10001545:	ja     0x1000154a
10001547:	lea    esi,[edx+ecx*1]
1000154a:	and    DWORD PTR [ebp-0x4],0x0
1000154e:	lea    eax,[esi+0x1]
10001551:	push   0x0
10001553:	push   eax
10001554:	call   0x10001ec2
10001559:	pop    ecx
1000155a:	pop    ecx
1000155b:	mov    ebx,eax
1000155d:	jmp    0x10001589
1000155f:	mov    eax,DWORD PTR [ebp+0x8]
10001562:	mov    DWORD PTR [ebp-0x10],esp
10001565:	mov    DWORD PTR [ebp+0x8],eax
10001568:	inc    eax
10001569:	push   0x0
1000156b:	push   eax
1000156c:	mov    BYTE PTR [ebp-0x4],0x2
10001570:	call   0x10001ec2
10001575:	pop    ecx
10001576:	mov    DWORD PTR [ebp-0x14],eax
10001579:	pop    ecx
1000157a:	mov    eax,0x10001580
1000157f:	ret    
10001580:	mov    edi,DWORD PTR [ebp-0x18]
10001583:	mov    esi,DWORD PTR [ebp+0x8]
10001586:	mov    ebx,DWORD PTR [ebp-0x14]
10001589:	cmp    DWORD PTR [ebp+0xc],0x0
1000158d:	jbe    0x100015ae
1000158f:	cmp    DWORD PTR [edi+0x18],0x10
10001593:	jb     0x1000159a
10001595:	mov    eax,DWORD PTR [edi+0x4]
10001598:	jmp    0x1000159d
1000159a:	lea    eax,[edi+0x4]
1000159d:	push   DWORD PTR [ebp+0xc]
100015a0:	push   eax
100015a1:	lea    eax,[esi+0x1]
100015a4:	push   eax
100015a5:	push   ebx
100015a6:	call   0x10001036
100015ab:	add    esp,0x10
100015ae:	push   0x0
100015b0:	push   0x1
100015b2:	mov    ecx,edi
100015b4:	call   0x100012f4
100015b9:	push   DWORD PTR [ebp+0xc]
100015bc:	mov    ecx,edi
100015be:	mov    DWORD PTR [edi+0x4],ebx
100015c1:	mov    DWORD PTR [edi+0x18],esi
100015c4:	call   0x10001420
100015c9:	call   0x10059d4d
100015ce:	ret    0x8
100015d1:	mov    ecx,DWORD PTR [ebp-0x18]
100015d4:	xor    esi,esi
100015d6:	push   esi
100015d7:	push   0x1
100015d9:	call   0x100012f4
100015de:	push   esi
100015df:	push   esi
100015e0:	call   0x10047c54
100015e5:	int3   
100015e6:	push   esi
100015e7:	mov    esi,DWORD PTR [ecx+0x18]
100015ea:	cmp    esi,0x10
100015ed:	lea    eax,[ecx+0x4]
100015f0:	jb     0x100015f6
100015f2:	mov    edx,DWORD PTR [eax]
100015f4:	jmp    0x100015f8
100015f6:	mov    edx,eax
100015f8:	cmp    DWORD PTR [esp+0x8],edx
100015fc:	jb     0x10001614
100015fe:	cmp    esi,0x10
10001601:	jb     0x10001605
10001603:	mov    eax,DWORD PTR [eax]
10001605:	mov    ecx,DWORD PTR [ecx+0x14]
10001608:	add    ecx,eax
1000160a:	cmp    ecx,DWORD PTR [esp+0x8]
1000160e:	jbe    0x10001614
10001610:	mov    al,0x1
10001612:	jmp    0x10001616
10001614:	xor    al,al
10001616:	pop    esi
10001617:	ret    0x4
1000161a:	push   ebp
1000161b:	mov    ebp,esp
1000161d:	mov    eax,DWORD PTR [edi+0x4]
10001620:	sub    esp,0x14
10001623:	cmp    DWORD PTR [ebp+0x8],0x0
10001627:	push   esi
10001628:	mov    esi,DWORD PTR [eax]
1000162a:	je     0x10001631
1000162c:	cmp    DWORD PTR [ebp+0x8],edi
1000162f:	je     0x10001636
10001631:	call   0x100435f0
10001636:	cmp    DWORD PTR [ebp+0xc],esi
10001639:	jne    0x1000167e
1000163b:	cmp    DWORD PTR [ebp+0x10],0x0
1000163f:	mov    esi,DWORD PTR [edi+0x4]
10001642:	je     0x10001649
10001644:	cmp    DWORD PTR [ebp+0x10],edi
10001647:	je     0x1000164e
10001649:	call   0x100435f0
1000164e:	cmp    DWORD PTR [ebp+0x14],esi
10001651:	jne    0x1000167e
10001653:	mov    eax,DWORD PTR [edi+0x4]
10001656:	push   DWORD PTR [eax+0x4]
10001659:	mov    ecx,edi
1000165b:	call   0x10001ca0
10001660:	mov    eax,DWORD PTR [edi+0x4]
10001663:	mov    DWORD PTR [eax+0x4],eax
10001666:	mov    eax,DWORD PTR [edi+0x4]
10001669:	and    DWORD PTR [edi+0x8],0x0
1000166d:	mov    DWORD PTR [eax],eax
1000166f:	mov    eax,DWORD PTR [edi+0x4]
10001672:	mov    DWORD PTR [eax+0x8],eax
10001675:	mov    eax,DWORD PTR [edi+0x4]
10001678:	mov    eax,DWORD PTR [eax]
1000167a:	mov    DWORD PTR [ebx],edi
1000167c:	jmp    0x100016bc
1000167e:	mov    eax,DWORD PTR [ebp+0x8]
10001681:	test   eax,eax
10001683:	je     0x1000168a
10001685:	cmp    eax,DWORD PTR [ebp+0x10]
10001688:	je     0x1000168f
1000168a:	call   0x100435f0
1000168f:	mov    eax,DWORD PTR [ebp+0xc]
10001692:	cmp    eax,DWORD PTR [ebp+0x14]
10001695:	mov    ecx,DWORD PTR [ebp+0x8]
10001698:	je     0x100016ba
1000169a:	lea    esi,[ebp+0x8]
1000169d:	mov    DWORD PTR [ebp-0x8],ecx
100016a0:	mov    DWORD PTR [ebp-0x4],eax
100016a3:	call   0x10001e75
100016a8:	push   DWORD PTR [ebp-0x4]
100016ab:	lea    eax,[ebp-0x10]
100016ae:	push   DWORD PTR [ebp-0x8]
100016b1:	push   eax
100016b2:	push   edi
100016b3:	call   0x10001772
100016b8:	jmp    0x1000167e
100016ba:	mov    DWORD PTR [ebx],ecx
100016bc:	mov    DWORD PTR [ebx+0x4],eax
100016bf:	mov    eax,ebx
100016c1:	pop    esi
100016c2:	leave  
100016c3:	ret    0x10
100016c6:	push   ebp
100016c7:	mov    ebp,esp
100016c9:	mov    eax,DWORD PTR [edi+0x4]
100016cc:	sub    esp,0x14
100016cf:	cmp    DWORD PTR [ebp+0x8],0x0
100016d3:	push   esi
100016d4:	mov    esi,DWORD PTR [eax]
100016d6:	je     0x100016dd
100016d8:	cmp    DWORD PTR [ebp+0x8],edi
100016db:	je     0x100016e2
100016dd:	call   0x100435f0
100016e2:	cmp    DWORD PTR [ebp+0xc],esi
100016e5:	jne    0x1000172a
100016e7:	cmp    DWORD PTR [ebp+0x10],0x0
100016eb:	mov    esi,DWORD PTR [edi+0x4]
100016ee:	je     0x100016f5
100016f0:	cmp    DWORD PTR [ebp+0x10],edi
100016f3:	je     0x100016fa
100016f5:	call   0x100435f0
100016fa:	cmp    DWORD PTR [ebp+0x14],esi
100016fd:	jne    0x1000172a
100016ff:	mov    eax,DWORD PTR [edi+0x4]
10001702:	push   DWORD PTR [eax+0x4]
10001705:	mov    ecx,edi
10001707:	call   0x10001d54
1000170c:	mov    eax,DWORD PTR [edi+0x4]
1000170f:	mov    DWORD PTR [eax+0x4],eax
10001712:	mov    eax,DWORD PTR [edi+0x4]
10001715:	and    DWORD PTR [edi+0x8],0x0
10001719:	mov    DWORD PTR [eax],eax
1000171b:	mov    eax,DWORD PTR [edi+0x4]
1000171e:	mov    DWORD PTR [eax+0x8],eax
10001721:	mov    eax,DWORD PTR [edi+0x4]
10001724:	mov    eax,DWORD PTR [eax]
10001726:	mov    DWORD PTR [ebx],edi
10001728:	jmp    0x10001768
1000172a:	mov    eax,DWORD PTR [ebp+0x8]
1000172d:	test   eax,eax
1000172f:	je     0x10001736
10001731:	cmp    eax,DWORD PTR [ebp+0x10]
10001734:	je     0x1000173b
10001736:	call   0x100435f0
1000173b:	mov    eax,DWORD PTR [ebp+0xc]
1000173e:	cmp    eax,DWORD PTR [ebp+0x14]
10001741:	mov    ecx,DWORD PTR [ebp+0x8]
10001744:	je     0x10001766
10001746:	lea    esi,[ebp+0x8]
10001749:	mov    DWORD PTR [ebp-0x8],ecx
1000174c:	mov    DWORD PTR [ebp-0x4],eax
1000174f:	call   0x10001e28
10001754:	push   DWORD PTR [ebp-0x4]
10001757:	lea    eax,[ebp-0x10]
1000175a:	push   DWORD PTR [ebp-0x8]
1000175d:	push   eax
1000175e:	push   edi
1000175f:	call   0x100019fc
10001764:	jmp    0x1000172a
10001766:	mov    DWORD PTR [ebx],ecx
10001768:	mov    DWORD PTR [ebx+0x4],eax
1000176b:	mov    eax,ebx
1000176d:	pop    esi
1000176e:	leave  
1000176f:	ret    0x10
10001772:	push   0x44
10001774:	mov    eax,0x10060338
10001779:	call   0x10059c75
1000177e:	mov    ebx,DWORD PTR [ebp+0x14]
10001781:	cmp    BYTE PTR [ebx+0x11],0x0
10001785:	je     0x100017b9
10001787:	push   0x1006ccec
1000178c:	lea    ecx,[ebp-0x28]
1000178f:	call   0x100011d1
10001794:	and    DWORD PTR [ebp-0x4],0x0
10001798:	lea    eax,[ebp-0x28]
1000179b:	push   eax
1000179c:	lea    ecx,[ebp-0x50]
1000179f:	call   0x1000106e
100017a4:	push   0x10074de0
100017a9:	lea    eax,[ebp-0x50]
100017ac:	push   eax
100017ad:	mov    DWORD PTR [ebp-0x50],0x1006b978
100017b4:	call   0x10047c54
100017b9:	lea    esi,[ebp+0x10]
100017bc:	call   0x10001e75
100017c1:	mov    ecx,DWORD PTR [ebx]
100017c3:	cmp    BYTE PTR [ecx+0x11],0x0
100017c7:	je     0x100017ce
100017c9:	mov    edi,DWORD PTR [ebx+0x8]
100017cc:	jmp    0x100017e5
100017ce:	mov    eax,DWORD PTR [ebx+0x8]
100017d1:	cmp    BYTE PTR [eax+0x11],0x0
100017d5:	je     0x100017db
100017d7:	mov    edi,ecx
100017d9:	jmp    0x100017e5
100017db:	mov    eax,DWORD PTR [ebp+0x14]
100017de:	cmp    eax,ebx
100017e0:	mov    edi,DWORD PTR [eax+0x8]
100017e3:	jne    0x1000185b
100017e5:	cmp    BYTE PTR [edi+0x11],0x0
100017e9:	mov    esi,DWORD PTR [ebx+0x4]
100017ec:	jne    0x100017f1
100017ee:	mov    DWORD PTR [edi+0x4],esi
100017f1:	mov    ecx,DWORD PTR [ebp+0x8]
100017f4:	mov    eax,DWORD PTR [ecx+0x4]
100017f7:	cmp    DWORD PTR [eax+0x4],ebx
100017fa:	jne    0x10001801
100017fc:	mov    DWORD PTR [eax+0x4],edi
100017ff:	jmp    0x1000180c
10001801:	cmp    DWORD PTR [esi],ebx
10001803:	jne    0x10001809
10001805:	mov    DWORD PTR [esi],edi
10001807:	jmp    0x1000180c
10001809:	mov    DWORD PTR [esi+0x8],edi
1000180c:	mov    edx,DWORD PTR [ecx+0x4]
1000180f:	cmp    DWORD PTR [edx],ebx
10001811:	jne    0x1000182f
10001813:	cmp    BYTE PTR [edi+0x11],0x0
10001817:	je     0x1000181d
10001819:	mov    ecx,esi
1000181b:	jmp    0x1000182d
1000181d:	mov    eax,DWORD PTR [edi]
1000181f:	mov    ecx,edi
10001821:	jmp    0x10001827
10001823:	mov    ecx,eax
10001825:	mov    eax,DWORD PTR [ecx]
10001827:	cmp    BYTE PTR [eax+0x11],0x0
1000182b:	je     0x10001823
1000182d:	mov    DWORD PTR [edx],ecx
1000182f:	mov    eax,DWORD PTR [ebp+0x8]
10001832:	mov    edx,DWORD PTR [eax+0x4]
10001835:	cmp    DWORD PTR [edx+0x8],ebx
10001838:	jne    0x100018b5
1000183a:	cmp    BYTE PTR [edi+0x11],0x0
1000183e:	je     0x10001844
10001840:	mov    ecx,esi
10001842:	jmp    0x10001856
10001844:	mov    eax,DWORD PTR [edi+0x8]
10001847:	mov    ecx,edi
10001849:	jmp    0x10001850
1000184b:	mov    ecx,eax
1000184d:	mov    eax,DWORD PTR [ecx+0x8]
10001850:	cmp    BYTE PTR [eax+0x11],0x0
10001854:	je     0x1000184b
10001856:	mov    DWORD PTR [edx+0x8],ecx
10001859:	jmp    0x100018b5
1000185b:	mov    DWORD PTR [ecx+0x4],eax
1000185e:	mov    ecx,DWORD PTR [ebx]
10001860:	mov    DWORD PTR [eax],ecx
10001862:	cmp    eax,DWORD PTR [ebx+0x8]
10001865:	jne    0x1000186b
10001867:	mov    esi,eax
10001869:	jmp    0x10001885
1000186b:	cmp    BYTE PTR [edi+0x11],0x0
1000186f:	mov    esi,DWORD PTR [eax+0x4]
10001872:	jne    0x10001877
10001874:	mov    DWORD PTR [edi+0x4],esi
10001877:	mov    DWORD PTR [esi],edi
10001879:	mov    ecx,DWORD PTR [ebx+0x8]
1000187c:	mov    DWORD PTR [eax+0x8],ecx
1000187f:	mov    ecx,DWORD PTR [ebx+0x8]
10001882:	mov    DWORD PTR [ecx+0x4],eax
10001885:	mov    ecx,DWORD PTR [ebp+0x8]
10001888:	mov    ecx,DWORD PTR [ecx+0x4]
1000188b:	cmp    DWORD PTR [ecx+0x4],ebx
1000188e:	jne    0x10001895
10001890:	mov    DWORD PTR [ecx+0x4],eax
10001893:	jmp    0x100018a3
10001895:	mov    ecx,DWORD PTR [ebx+0x4]
10001898:	cmp    DWORD PTR [ecx],ebx
1000189a:	jne    0x100018a0
1000189c:	mov    DWORD PTR [ecx],eax
1000189e:	jmp    0x100018a3
100018a0:	mov    DWORD PTR [ecx+0x8],eax
100018a3:	mov    ecx,DWORD PTR [ebx+0x4]
100018a6:	mov    DWORD PTR [eax+0x4],ecx
100018a9:	mov    dl,BYTE PTR [ebx+0x10]
100018ac:	mov    cl,BYTE PTR [eax+0x10]
100018af:	mov    BYTE PTR [eax+0x10],dl
100018b2:	mov    BYTE PTR [ebx+0x10],cl
100018b5:	cmp    BYTE PTR [ebx+0x10],0x1
100018b9:	jne    0x100019d1
100018bf:	jmp    0x10001985
100018c4:	cmp    BYTE PTR [edi+0x10],0x1
100018c8:	jne    0x100019cd
100018ce:	mov    ecx,DWORD PTR [esi]
100018d0:	cmp    edi,ecx
100018d2:	jne    0x1000194b
100018d4:	mov    ecx,DWORD PTR [esi+0x8]
100018d7:	cmp    BYTE PTR [ecx+0x10],0x0
100018db:	jne    0x100018f2
100018dd:	push   DWORD PTR [ebp+0x8]
100018e0:	mov    BYTE PTR [ecx+0x10],0x1
100018e4:	mov    ecx,esi
100018e6:	mov    BYTE PTR [esi+0x10],0x0
100018ea:	call   0x10001cd2
100018ef:	mov    ecx,DWORD PTR [esi+0x8]
100018f2:	cmp    BYTE PTR [ecx+0x11],0x0
100018f6:	jne    0x10001980
100018fc:	mov    eax,DWORD PTR [ecx]
100018fe:	cmp    BYTE PTR [eax+0x10],0x1
10001902:	jne    0x1000190d
10001904:	mov    eax,DWORD PTR [ecx+0x8]
10001907:	cmp    BYTE PTR [eax+0x10],0x1
1000190b:	je     0x1000197c
1000190d:	mov    eax,DWORD PTR [ecx+0x8]
10001910:	cmp    BYTE PTR [eax+0x10],0x1
10001914:	jne    0x1000192b
10001916:	mov    eax,DWORD PTR [ecx]
10001918:	push   DWORD PTR [ebp+0x8]
1000191b:	mov    BYTE PTR [eax+0x10],0x1
1000191f:	mov    BYTE PTR [ecx+0x10],0x0
10001923:	call   0x10001d12
10001928:	mov    ecx,DWORD PTR [esi+0x8]
1000192b:	mov    al,BYTE PTR [esi+0x10]
1000192e:	push   DWORD PTR [ebp+0x8]
10001931:	mov    BYTE PTR [ecx+0x10],al
10001934:	mov    BYTE PTR [esi+0x10],0x1
10001938:	mov    eax,DWORD PTR [ecx+0x8]
1000193b:	mov    ecx,esi
1000193d:	mov    BYTE PTR [eax+0x10],0x1
10001941:	call   0x10001cd2
10001946:	jmp    0x100019cd
1000194b:	cmp    BYTE PTR [ecx+0x10],0x0
1000194f:	jne    0x10001965
10001951:	push   DWORD PTR [ebp+0x8]
10001954:	mov    BYTE PTR [ecx+0x10],0x1
10001958:	mov    ecx,esi
1000195a:	mov    BYTE PTR [esi+0x10],0x0
1000195e:	call   0x10001d12
10001963:	mov    ecx,DWORD PTR [esi]
10001965:	cmp    BYTE PTR [ecx+0x11],0x0
10001969:	jne    0x10001980
1000196b:	mov    eax,DWORD PTR [ecx+0x8]
1000196e:	cmp    BYTE PTR [eax+0x10],0x1
10001972:	jne    0x10001996
10001974:	mov    eax,DWORD PTR [ecx]
10001976:	cmp    BYTE PTR [eax+0x10],0x1
1000197a:	jne    0x10001996
1000197c:	mov    BYTE PTR [ecx+0x10],0x0
10001980:	mov    edi,esi
10001982:	mov    esi,DWORD PTR [esi+0x4]
10001985:	mov    eax,DWORD PTR [ebp+0x8]
10001988:	mov    eax,DWORD PTR [eax+0x4]
1000198b:	cmp    edi,DWORD PTR [eax+0x4]
1000198e:	jne    0x100018c4
10001994:	jmp    0x100019cd
10001996:	mov    eax,DWORD PTR [ecx]
10001998:	cmp    BYTE PTR [eax+0x10],0x1
1000199c:	jne    0x100019b3
1000199e:	mov    eax,DWORD PTR [ecx+0x8]
100019a1:	push   DWORD PTR [ebp+0x8]
100019a4:	mov    BYTE PTR [eax+0x10],0x1
100019a8:	mov    BYTE PTR [ecx+0x10],0x0
100019ac:	call   0x10001cd2
100019b1:	mov    ecx,DWORD PTR [esi]
100019b3:	mov    al,BYTE PTR [esi+0x10]
100019b6:	push   DWORD PTR [ebp+0x8]
100019b9:	mov    BYTE PTR [ecx+0x10],al
100019bc:	mov    BYTE PTR [esi+0x10],0x1
100019c0:	mov    eax,DWORD PTR [ecx]
100019c2:	mov    ecx,esi
100019c4:	mov    BYTE PTR [eax+0x10],0x1
100019c8:	call   0x10001d12
100019cd:	mov    BYTE PTR [edi+0x10],0x1
100019d1:	push   ebx
100019d2:	call   0x100430d2
100019d7:	pop    ecx
100019d8:	mov    ecx,DWORD PTR [ebp+0x8]
100019db:	mov    eax,DWORD PTR [ecx+0x8]
100019de:	test   eax,eax
100019e0:	jbe    0x100019e6
100019e2:	dec    eax
100019e3:	mov    DWORD PTR [ecx+0x8],eax
100019e6:	mov    ecx,DWORD PTR [ebp+0x10]
100019e9:	mov    eax,DWORD PTR [ebp+0xc]
100019ec:	mov    DWORD PTR [eax],ecx
100019ee:	mov    ecx,DWORD PTR [ebp+0x14]
100019f1:	mov    DWORD PTR [eax+0x4],ecx
100019f4:	call   0x10059d4d
100019f9:	ret    0x10
100019fc:	push   0x44
100019fe:	mov    eax,0x10060338
10001a03:	call   0x10059c75
10001a08:	mov    edi,DWORD PTR [ebp+0x14]
10001a0b:	cmp    BYTE PTR [edi+0x4d],0x0
10001a0f:	je     0x10001a43
10001a11:	push   0x1006ccec
10001a16:	lea    ecx,[ebp-0x28]
10001a19:	call   0x100011d1
10001a1e:	and    DWORD PTR [ebp-0x4],0x0
10001a22:	lea    eax,[ebp-0x28]
10001a25:	push   eax
10001a26:	lea    ecx,[ebp-0x50]
10001a29:	call   0x1000106e
10001a2e:	push   0x10074de0
10001a33:	lea    eax,[ebp-0x50]
10001a36:	push   eax
10001a37:	mov    DWORD PTR [ebp-0x50],0x1006b978
10001a3e:	call   0x10047c54
10001a43:	lea    esi,[ebp+0x10]
10001a46:	call   0x10001e28
10001a4b:	mov    ecx,DWORD PTR [edi]
10001a4d:	cmp    BYTE PTR [ecx+0x4d],0x0
10001a51:	je     0x10001a58
10001a53:	mov    ebx,DWORD PTR [edi+0x8]
10001a56:	jmp    0x10001a6f
10001a58:	mov    eax,DWORD PTR [edi+0x8]
10001a5b:	cmp    BYTE PTR [eax+0x4d],0x0
10001a5f:	je     0x10001a65
10001a61:	mov    ebx,ecx
10001a63:	jmp    0x10001a6f
10001a65:	mov    eax,DWORD PTR [ebp+0x14]
10001a68:	cmp    eax,edi
10001a6a:	mov    ebx,DWORD PTR [eax+0x8]
10001a6d:	jne    0x10001ae5
10001a6f:	cmp    BYTE PTR [ebx+0x4d],0x0
10001a73:	mov    esi,DWORD PTR [edi+0x4]
10001a76:	jne    0x10001a7b
10001a78:	mov    DWORD PTR [ebx+0x4],esi
10001a7b:	mov    ecx,DWORD PTR [ebp+0x8]
10001a7e:	mov    eax,DWORD PTR [ecx+0x4]
10001a81:	cmp    DWORD PTR [eax+0x4],edi
10001a84:	jne    0x10001a8b
10001a86:	mov    DWORD PTR [eax+0x4],ebx
10001a89:	jmp    0x10001a96
10001a8b:	cmp    DWORD PTR [esi],edi
10001a8d:	jne    0x10001a93
10001a8f:	mov    DWORD PTR [esi],ebx
10001a91:	jmp    0x10001a96
10001a93:	mov    DWORD PTR [esi+0x8],ebx
10001a96:	mov    edx,DWORD PTR [ecx+0x4]
10001a99:	cmp    DWORD PTR [edx],edi
10001a9b:	jne    0x10001ab9
10001a9d:	cmp    BYTE PTR [ebx+0x4d],0x0
10001aa1:	je     0x10001aa7
10001aa3:	mov    ecx,esi
10001aa5:	jmp    0x10001ab7
10001aa7:	mov    eax,DWORD PTR [ebx]
10001aa9:	mov    ecx,ebx
10001aab:	jmp    0x10001ab1
10001aad:	mov    ecx,eax
10001aaf:	mov    eax,DWORD PTR [ecx]
10001ab1:	cmp    BYTE PTR [eax+0x4d],0x0
10001ab5:	je     0x10001aad
10001ab7:	mov    DWORD PTR [edx],ecx
10001ab9:	mov    eax,DWORD PTR [ebp+0x8]
10001abc:	mov    edx,DWORD PTR [eax+0x4]
10001abf:	cmp    DWORD PTR [edx+0x8],edi
10001ac2:	jne    0x10001b3f
10001ac4:	cmp    BYTE PTR [ebx+0x4d],0x0
10001ac8:	je     0x10001ace
10001aca:	mov    ecx,esi
10001acc:	jmp    0x10001ae0
10001ace:	mov    eax,DWORD PTR [ebx+0x8]
10001ad1:	mov    ecx,ebx
10001ad3:	jmp    0x10001ada
10001ad5:	mov    ecx,eax
10001ad7:	mov    eax,DWORD PTR [ecx+0x8]
10001ada:	cmp    BYTE PTR [eax+0x4d],0x0
10001ade:	je     0x10001ad5
10001ae0:	mov    DWORD PTR [edx+0x8],ecx
10001ae3:	jmp    0x10001b3f
10001ae5:	mov    DWORD PTR [ecx+0x4],eax
10001ae8:	mov    ecx,DWORD PTR [edi]
10001aea:	mov    DWORD PTR [eax],ecx
10001aec:	cmp    eax,DWORD PTR [edi+0x8]
10001aef:	jne    0x10001af5
10001af1:	mov    esi,eax
10001af3:	jmp    0x10001b0f
10001af5:	cmp    BYTE PTR [ebx+0x4d],0x0
10001af9:	mov    esi,DWORD PTR [eax+0x4]
10001afc:	jne    0x10001b01
10001afe:	mov    DWORD PTR [ebx+0x4],esi
10001b01:	mov    DWORD PTR [esi],ebx
10001b03:	mov    ecx,DWORD PTR [edi+0x8]
10001b06:	mov    DWORD PTR [eax+0x8],ecx
10001b09:	mov    ecx,DWORD PTR [edi+0x8]
10001b0c:	mov    DWORD PTR [ecx+0x4],eax
10001b0f:	mov    ecx,DWORD PTR [ebp+0x8]
10001b12:	mov    ecx,DWORD PTR [ecx+0x4]
10001b15:	cmp    DWORD PTR [ecx+0x4],edi
10001b18:	jne    0x10001b1f
10001b1a:	mov    DWORD PTR [ecx+0x4],eax
10001b1d:	jmp    0x10001b2d
10001b1f:	mov    ecx,DWORD PTR [edi+0x4]
10001b22:	cmp    DWORD PTR [ecx],edi
10001b24:	jne    0x10001b2a
10001b26:	mov    DWORD PTR [ecx],eax
10001b28:	jmp    0x10001b2d
10001b2a:	mov    DWORD PTR [ecx+0x8],eax
10001b2d:	mov    ecx,DWORD PTR [edi+0x4]
10001b30:	mov    DWORD PTR [eax+0x4],ecx
10001b33:	mov    dl,BYTE PTR [edi+0x4c]
10001b36:	mov    cl,BYTE PTR [eax+0x4c]
10001b39:	mov    BYTE PTR [eax+0x4c],dl
10001b3c:	mov    BYTE PTR [edi+0x4c],cl
10001b3f:	cmp    BYTE PTR [edi+0x4c],0x1
10001b43:	jne    0x10001c5b
10001b49:	jmp    0x10001c0f
10001b4e:	cmp    BYTE PTR [ebx+0x4c],0x1
10001b52:	jne    0x10001c57
10001b58:	mov    ecx,DWORD PTR [esi]
10001b5a:	cmp    ebx,ecx
10001b5c:	jne    0x10001bd5
10001b5e:	mov    ecx,DWORD PTR [esi+0x8]
10001b61:	cmp    BYTE PTR [ecx+0x4c],0x0
10001b65:	jne    0x10001b7c
10001b67:	push   DWORD PTR [ebp+0x8]
10001b6a:	mov    BYTE PTR [ecx+0x4c],0x1
10001b6e:	mov    ecx,esi
10001b70:	mov    BYTE PTR [esi+0x4c],0x0
10001b74:	call   0x10001da6
10001b79:	mov    ecx,DWORD PTR [esi+0x8]
10001b7c:	cmp    BYTE PTR [ecx+0x4d],0x0
10001b80:	jne    0x10001c0a
10001b86:	mov    eax,DWORD PTR [ecx]
10001b88:	cmp    BYTE PTR [eax+0x4c],0x1
10001b8c:	jne    0x10001b97
10001b8e:	mov    eax,DWORD PTR [ecx+0x8]
10001b91:	cmp    BYTE PTR [eax+0x4c],0x1
10001b95:	je     0x10001c06
10001b97:	mov    eax,DWORD PTR [ecx+0x8]
10001b9a:	cmp    BYTE PTR [eax+0x4c],0x1
10001b9e:	jne    0x10001bb5
10001ba0:	mov    eax,DWORD PTR [ecx]
10001ba2:	push   DWORD PTR [ebp+0x8]
10001ba5:	mov    BYTE PTR [eax+0x4c],0x1
10001ba9:	mov    BYTE PTR [ecx+0x4c],0x0
10001bad:	call   0x10001de6
10001bb2:	mov    ecx,DWORD PTR [esi+0x8]
10001bb5:	mov    al,BYTE PTR [esi+0x4c]
10001bb8:	push   DWORD PTR [ebp+0x8]
10001bbb:	mov    BYTE PTR [ecx+0x4c],al
10001bbe:	mov    BYTE PTR [esi+0x4c],0x1
10001bc2:	mov    eax,DWORD PTR [ecx+0x8]
10001bc5:	mov    ecx,esi
10001bc7:	mov    BYTE PTR [eax+0x4c],0x1
10001bcb:	call   0x10001da6
10001bd0:	jmp    0x10001c57
10001bd5:	cmp    BYTE PTR [ecx+0x4c],0x0
10001bd9:	jne    0x10001bef
10001bdb:	push   DWORD PTR [ebp+0x8]
10001bde:	mov    BYTE PTR [ecx+0x4c],0x1
10001be2:	mov    ecx,esi
10001be4:	mov    BYTE PTR [esi+0x4c],0x0
10001be8:	call   0x10001de6
10001bed:	mov    ecx,DWORD PTR [esi]
10001bef:	cmp    BYTE PTR [ecx+0x4d],0x0
10001bf3:	jne    0x10001c0a
10001bf5:	mov    eax,DWORD PTR [ecx+0x8]
10001bf8:	cmp    BYTE PTR [eax+0x4c],0x1
10001bfc:	jne    0x10001c20
10001bfe:	mov    eax,DWORD PTR [ecx]
10001c00:	cmp    BYTE PTR [eax+0x4c],0x1
10001c04:	jne    0x10001c20
10001c06:	mov    BYTE PTR [ecx+0x4c],0x0
10001c0a:	mov    ebx,esi
10001c0c:	mov    esi,DWORD PTR [esi+0x4]
10001c0f:	mov    eax,DWORD PTR [ebp+0x8]
10001c12:	mov    eax,DWORD PTR [eax+0x4]
10001c15:	cmp    ebx,DWORD PTR [eax+0x4]
10001c18:	jne    0x10001b4e
10001c1e:	jmp    0x10001c57
10001c20:	mov    eax,DWORD PTR [ecx]
10001c22:	cmp    BYTE PTR [eax+0x4c],0x1
10001c26:	jne    0x10001c3d
10001c28:	mov    eax,DWORD PTR [ecx+0x8]
10001c2b:	push   DWORD PTR [ebp+0x8]
10001c2e:	mov    BYTE PTR [eax+0x4c],0x1
10001c32:	mov    BYTE PTR [ecx+0x4c],0x0
10001c36:	call   0x10001da6
10001c3b:	mov    ecx,DWORD PTR [esi]
10001c3d:	mov    al,BYTE PTR [esi+0x4c]
10001c40:	push   DWORD PTR [ebp+0x8]
10001c43:	mov    BYTE PTR [ecx+0x4c],al
10001c46:	mov    BYTE PTR [esi+0x4c],0x1
10001c4a:	mov    eax,DWORD PTR [ecx]
10001c4c:	mov    ecx,esi
10001c4e:	mov    BYTE PTR [eax+0x4c],0x1
10001c52:	call   0x10001de6
10001c57:	mov    BYTE PTR [ebx+0x4c],0x1
10001c5b:	push   0x0
10001c5d:	lea    esi,[edi+0xc]
10001c60:	push   0x1
10001c62:	lea    ecx,[esi+0x20]
10001c65:	call   0x100012f4
10001c6a:	push   0x0
10001c6c:	push   0x1
10001c6e:	mov    ecx,esi
10001c70:	call   0x100012f4
10001c75:	push   edi
10001c76:	call   0x100430d2
10001c7b:	pop    ecx
10001c7c:	mov    ecx,DWORD PTR [ebp+0x8]
10001c7f:	mov    eax,DWORD PTR [ecx+0x8]
10001c82:	test   eax,eax
10001c84:	jbe    0x10001c8a
10001c86:	dec    eax
10001c87:	mov    DWORD PTR [ecx+0x8],eax
10001c8a:	mov    ecx,DWORD PTR [ebp+0x10]
10001c8d:	mov    eax,DWORD PTR [ebp+0xc]
10001c90:	mov    DWORD PTR [eax],ecx
10001c92:	mov    ecx,DWORD PTR [ebp+0x14]
10001c95:	mov    DWORD PTR [eax+0x4],ecx
10001c98:	call   0x10059d4d
10001c9d:	ret    0x10
10001ca0:	push   ebx
10001ca1:	push   esi
10001ca2:	push   edi
10001ca3:	mov    edi,DWORD PTR [esp+0x10]
10001ca7:	cmp    BYTE PTR [edi+0x11],0x0
10001cab:	mov    ebx,ecx
10001cad:	mov    esi,edi
10001caf:	jne    0x10001ccc
10001cb1:	push   DWORD PTR [esi+0x8]
10001cb4:	mov    ecx,ebx
10001cb6:	call   0x10001ca0
10001cbb:	mov    esi,DWORD PTR [esi]
10001cbd:	push   edi
10001cbe:	call   0x100430d2
10001cc3:	cmp    BYTE PTR [esi+0x11],0x0
10001cc7:	pop    ecx
10001cc8:	mov    edi,esi
10001cca:	je     0x10001cb1
10001ccc:	pop    edi
10001ccd:	pop    esi
10001cce:	pop    ebx
10001ccf:	ret    0x4
10001cd2:	mov    eax,DWORD PTR [ecx+0x8]
10001cd5:	mov    edx,DWORD PTR [eax]
10001cd7:	mov    DWORD PTR [ecx+0x8],edx
10001cda:	mov    edx,DWORD PTR [eax]
10001cdc:	cmp    BYTE PTR [edx+0x11],0x0
10001ce0:	jne    0x10001ce5
10001ce2:	mov    DWORD PTR [edx+0x4],ecx
10001ce5:	mov    edx,DWORD PTR [ecx+0x4]
10001ce8:	mov    DWORD PTR [eax+0x4],edx
10001ceb:	mov    edx,DWORD PTR [esp+0x4]
10001cef:	mov    edx,DWORD PTR [edx+0x4]
10001cf2:	cmp    ecx,DWORD PTR [edx+0x4]
10001cf5:	jne    0x10001cfc
10001cf7:	mov    DWORD PTR [edx+0x4],eax
10001cfa:	jmp    0x10001d0a
10001cfc:	mov    edx,DWORD PTR [ecx+0x4]
10001cff:	cmp    ecx,DWORD PTR [edx]
10001d01:	jne    0x10001d07
10001d03:	mov    DWORD PTR [edx],eax
10001d05:	jmp    0x10001d0a
10001d07:	mov    DWORD PTR [edx+0x8],eax
10001d0a:	mov    DWORD PTR [eax],ecx
10001d0c:	mov    DWORD PTR [ecx+0x4],eax
10001d0f:	ret    0x4
10001d12:	mov    eax,DWORD PTR [ecx]
10001d14:	mov    edx,DWORD PTR [eax+0x8]
10001d17:	mov    DWORD PTR [ecx],edx
10001d19:	mov    edx,DWORD PTR [eax+0x8]
10001d1c:	cmp    BYTE PTR [edx+0x11],0x0
10001d20:	jne    0x10001d25
10001d22:	mov    DWORD PTR [edx+0x4],ecx
10001d25:	mov    edx,DWORD PTR [ecx+0x4]
10001d28:	mov    DWORD PTR [eax+0x4],edx
10001d2b:	mov    edx,DWORD PTR [esp+0x4]
10001d2f:	mov    edx,DWORD PTR [edx+0x4]
10001d32:	cmp    ecx,DWORD PTR [edx+0x4]
10001d35:	jne    0x10001d3c
10001d37:	mov    DWORD PTR [edx+0x4],eax
10001d3a:	jmp    0x10001d4b
10001d3c:	mov    edx,DWORD PTR [ecx+0x4]
10001d3f:	cmp    ecx,DWORD PTR [edx+0x8]
10001d42:	jne    0x10001d49
10001d44:	mov    DWORD PTR [edx+0x8],eax
10001d47:	jmp    0x10001d4b
10001d49:	mov    DWORD PTR [edx],eax
10001d4b:	mov    DWORD PTR [eax+0x8],ecx
10001d4e:	mov    DWORD PTR [ecx+0x4],eax
10001d51:	ret    0x4
10001d54:	push   ebp
10001d55:	mov    ebp,esp
10001d57:	push   ecx
10001d58:	push   esi
10001d59:	push   edi
10001d5a:	mov    edi,DWORD PTR [ebp+0x8]
10001d5d:	cmp    BYTE PTR [edi+0x4d],0x0
10001d61:	mov    DWORD PTR [ebp-0x4],ecx
10001d64:	mov    esi,edi
10001d66:	jne    0x10001da0
10001d68:	push   ebx
10001d69:	push   DWORD PTR [esi+0x8]
10001d6c:	mov    ecx,DWORD PTR [ebp-0x4]
10001d6f:	call   0x10001d54
10001d74:	mov    esi,DWORD PTR [esi]
10001d76:	push   0x0
10001d78:	lea    ebx,[edi+0xc]
10001d7b:	push   0x1
10001d7d:	lea    ecx,[ebx+0x20]
10001d80:	call   0x100012f4
10001d85:	push   0x0
10001d87:	push   0x1
10001d89:	mov    ecx,ebx
10001d8b:	call   0x100012f4
10001d90:	push   edi
10001d91:	call   0x100430d2
10001d96:	cmp    BYTE PTR [esi+0x4d],0x0
10001d9a:	pop    ecx
10001d9b:	mov    edi,esi
10001d9d:	je     0x10001d69
10001d9f:	pop    ebx
10001da0:	pop    edi
10001da1:	pop    esi
10001da2:	leave  
10001da3:	ret    0x4
10001da6:	mov    eax,DWORD PTR [ecx+0x8]
10001da9:	mov    edx,DWORD PTR [eax]
10001dab:	mov    DWORD PTR [ecx+0x8],edx
10001dae:	mov    edx,DWORD PTR [eax]
10001db0:	cmp    BYTE PTR [edx+0x4d],0x0
10001db4:	jne    0x10001db9
10001db6:	mov    DWORD PTR [edx+0x4],ecx
10001db9:	mov    edx,DWORD PTR [ecx+0x4]
10001dbc:	mov    DWORD PTR [eax+0x4],edx
10001dbf:	mov    edx,DWORD PTR [esp+0x4]
10001dc3:	mov    edx,DWORD PTR [edx+0x4]
10001dc6:	cmp    ecx,DWORD PTR [edx+0x4]
10001dc9:	jne    0x10001dd0
10001dcb:	mov    DWORD PTR [edx+0x4],eax
10001dce:	jmp    0x10001dde
10001dd0:	mov    edx,DWORD PTR [ecx+0x4]
10001dd3:	cmp    ecx,DWORD PTR [edx]
10001dd5:	jne    0x10001ddb
10001dd7:	mov    DWORD PTR [edx],eax
10001dd9:	jmp    0x10001dde
10001ddb:	mov    DWORD PTR [edx+0x8],eax
10001dde:	mov    DWORD PTR [eax],ecx
10001de0:	mov    DWORD PTR [ecx+0x4],eax
10001de3:	ret    0x4
10001de6:	mov    eax,DWORD PTR [ecx]
10001de8:	mov    edx,DWORD PTR [eax+0x8]
10001deb:	mov    DWORD PTR [ecx],edx
10001ded:	mov    edx,DWORD PTR [eax+0x8]
10001df0:	cmp    BYTE PTR [edx+0x4d],0x0
10001df4:	jne    0x10001df9
10001df6:	mov    DWORD PTR [edx+0x4],ecx
10001df9:	mov    edx,DWORD PTR [ecx+0x4]
10001dfc:	mov    DWORD PTR [eax+0x4],edx
10001dff:	mov    edx,DWORD PTR [esp+0x4]
10001e03:	mov    edx,DWORD PTR [edx+0x4]
10001e06:	cmp    ecx,DWORD PTR [edx+0x4]
10001e09:	jne    0x10001e10
10001e0b:	mov    DWORD PTR [edx+0x4],eax
10001e0e:	jmp    0x10001e1f
10001e10:	mov    edx,DWORD PTR [ecx+0x4]
10001e13:	cmp    ecx,DWORD PTR [edx+0x8]
10001e16:	jne    0x10001e1d
10001e18:	mov    DWORD PTR [edx+0x8],eax
10001e1b:	jmp    0x10001e1f
10001e1d:	mov    DWORD PTR [edx],eax
10001e1f:	mov    DWORD PTR [eax+0x8],ecx
10001e22:	mov    DWORD PTR [ecx+0x4],eax
10001e25:	ret    0x4
10001e28:	push   ebx
10001e29:	xor    ebx,ebx
10001e2b:	cmp    DWORD PTR [esi],ebx
10001e2d:	jne    0x10001e34
10001e2f:	call   0x100435f0
10001e34:	mov    eax,DWORD PTR [esi+0x4]
10001e37:	cmp    BYTE PTR [eax+0x4d],bl
10001e3a:	je     0x10001e43
10001e3c:	call   0x100435f0
10001e41:	jmp    0x10001e71
10001e43:	mov    ecx,DWORD PTR [eax+0x8]
10001e46:	cmp    BYTE PTR [ecx+0x4d],bl
10001e49:	jne    0x10001e66
10001e4b:	jmp    0x10001e4f
10001e4d:	mov    ecx,eax
10001e4f:	mov    eax,DWORD PTR [ecx]
10001e51:	cmp    BYTE PTR [eax+0x4d],bl
10001e54:	je     0x10001e4d
10001e56:	mov    DWORD PTR [esi+0x4],ecx
10001e59:	jmp    0x10001e71
10001e5b:	mov    ecx,DWORD PTR [esi+0x4]
10001e5e:	cmp    ecx,DWORD PTR [eax+0x8]
10001e61:	jne    0x10001e6e
10001e63:	mov    DWORD PTR [esi+0x4],eax
10001e66:	mov    eax,DWORD PTR [eax+0x4]
10001e69:	cmp    BYTE PTR [eax+0x4d],bl
10001e6c:	je     0x10001e5b
10001e6e:	mov    DWORD PTR [esi+0x4],eax
10001e71:	mov    eax,esi
10001e73:	pop    ebx
10001e74:	ret    
10001e75:	push   ebx
10001e76:	xor    ebx,ebx
10001e78:	cmp    DWORD PTR [esi],ebx
10001e7a:	jne    0x10001e81
10001e7c:	call   0x100435f0
10001e81:	mov    eax,DWORD PTR [esi+0x4]
10001e84:	cmp    BYTE PTR [eax+0x11],bl
10001e87:	je     0x10001e90
10001e89:	call   0x100435f0
10001e8e:	jmp    0x10001ebe
10001e90:	mov    ecx,DWORD PTR [eax+0x8]
10001e93:	cmp    BYTE PTR [ecx+0x11],bl
10001e96:	jne    0x10001eb3
10001e98:	jmp    0x10001e9c
10001e9a:	mov    ecx,eax
10001e9c:	mov    eax,DWORD PTR [ecx]
10001e9e:	cmp    BYTE PTR [eax+0x11],bl
10001ea1:	je     0x10001e9a
10001ea3:	mov    DWORD PTR [esi+0x4],ecx
10001ea6:	jmp    0x10001ebe
10001ea8:	mov    ecx,DWORD PTR [esi+0x4]
10001eab:	cmp    ecx,DWORD PTR [eax+0x8]
10001eae:	jne    0x10001ebb
10001eb0:	mov    DWORD PTR [esi+0x4],eax
10001eb3:	mov    eax,DWORD PTR [eax+0x4]
10001eb6:	cmp    BYTE PTR [eax+0x11],bl
10001eb9:	je     0x10001ea8
10001ebb:	mov    DWORD PTR [esi+0x4],eax
10001ebe:	mov    eax,esi
10001ec0:	pop    ebx
10001ec1:	ret    
10001ec2:	push   ebp
10001ec3:	mov    ebp,esp
10001ec5:	mov    ecx,DWORD PTR [ebp+0x8]
10001ec8:	sub    esp,0xc
10001ecb:	test   ecx,ecx
10001ecd:	ja     0x10001eda
10001ecf:	xor    ecx,ecx
10001ed1:	push   ecx
10001ed2:	call   0x100436de
10001ed7:	pop    ecx
10001ed8:	leave  
10001ed9:	ret    
10001eda:	or     eax,0xffffffff
10001edd:	xor    edx,edx
10001edf:	div    ecx
10001ee1:	cmp    eax,0x1
10001ee4:	jae    0x10001ed1
10001ee6:	and    DWORD PTR [ebp+0x8],0x0
10001eea:	lea    eax,[ebp+0x8]
10001eed:	push   eax
10001eee:	lea    ecx,[ebp-0xc]
10001ef1:	call   0x10043152
10001ef6:	push   0x10074e18
10001efb:	lea    eax,[ebp-0xc]
10001efe:	push   eax
10001eff:	mov    DWORD PTR [ebp-0xc],0x100665c8
10001f06:	call   0x10047c54
10001f0b:	int3   
10001f0c:	push   esi
10001f0d:	push   DWORD PTR [esp+0x8]
10001f11:	mov    esi,ecx
10001f13:	call   0x100431b8
10001f18:	mov    DWORD PTR [esi],0x100665c8
10001f1e:	mov    eax,esi
10001f20:	pop    esi
10001f21:	ret    0x4
10001f24:	push   ebp
10001f25:	mov    ebp,esp
10001f27:	mov    eax,DWORD PTR [ebp+0x8]
10001f2a:	mov    DWORD PTR [ebp+0x8],eax
10001f2d:	push   0x10074e4c
10001f32:	lea    eax,[ebp+0x8]
10001f35:	push   eax
10001f36:	call   0x10047c54
10001f3b:	int3   
10001f3c:	mov    eax,DWORD PTR [esp+0x4]
10001f40:	test   eax,eax
10001f42:	je     0x10001f70
10001f44:	cmp    eax,0xc
10001f47:	je     0x10001f69
10001f49:	cmp    eax,0x16
10001f4c:	je     0x10001f62
10001f4e:	cmp    eax,0x22
10001f51:	je     0x10001f62
10001f53:	cmp    eax,0x50
10001f56:	je     0x10001f70
10001f58:	push   0x80004005
10001f5d:	call   0x10001f24
10001f62:	push   0x80070057
10001f67:	jmp    0x10001f5d
10001f69:	push   0x8007000e
10001f6e:	jmp    0x10001f5d
10001f70:	ret    
10001f71:	push   esi
10001f72:	push   DWORD PTR [esp+0xc]
10001f76:	mov    esi,eax
10001f78:	push   DWORD PTR [esp+0xc]
10001f7c:	call   DWORD PTR ds:0x10066080
10001f82:	test   eax,eax
10001f84:	jne    0x10001f88
10001f86:	pop    esi
10001f87:	ret    
10001f88:	push   edi
10001f89:	push   eax
10001f8a:	call   DWORD PTR ds:0x10066090
10001f90:	mov    edi,eax
10001f92:	test   edi,edi
10001f94:	je     0x10001fbd
10001f96:	push   DWORD PTR [esp+0x10]
10001f9a:	push   DWORD PTR [esp+0x10]
10001f9e:	call   DWORD PTR ds:0x10066088
10001fa4:	add    eax,edi
10001fa6:	and    esi,0xf
10001fa9:	jbe    0x10001fb9
10001fab:	cmp    edi,eax
10001fad:	jae    0x10001fbd
10001faf:	dec    esi
10001fb0:	movzx  ecx,WORD PTR [edi]
10001fb3:	lea    edi,[edi+ecx*2+0x2]
10001fb7:	jne    0x10001fab
10001fb9:	cmp    edi,eax
10001fbb:	jb     0x10001fc1
10001fbd:	xor    eax,eax
10001fbf:	jmp    0x10001fcb
10001fc1:	mov    ax,WORD PTR [edi]
10001fc4:	neg    ax
10001fc7:	sbb    eax,eax
10001fc9:	and    eax,edi
10001fcb:	pop    edi
10001fcc:	pop    esi
10001fcd:	ret    
10001fce:	mov    eax,DWORD PTR [esp+0x8]
10001fd2:	shr    eax,0x4
10001fd5:	inc    eax
10001fd6:	movzx  eax,ax
10001fd9:	push   0x6
10001fdb:	push   eax
10001fdc:	push   DWORD PTR [esp+0xc]
10001fe0:	call   DWORD PTR ds:0x1006607c
10001fe6:	test   eax,eax
10001fe8:	jne    0x10001feb
10001fea:	ret    
10001feb:	push   eax
10001fec:	push   DWORD PTR [esp+0x8]
10001ff0:	mov    eax,DWORD PTR [esp+0x10]
10001ff4:	call   0x10001f71
10001ff9:	pop    ecx
10001ffa:	pop    ecx
10001ffb:	ret    
10001ffc:	push   ebx
10001ffd:	push   ebp
10001ffe:	push   esi
10001fff:	push   edi
10002000:	xor    edi,edi
10002002:	mov    ebx,0x10080a00
10002007:	push   edi
10002008:	mov    ecx,ebx
1000200a:	call   0x10056f85
1000200f:	xor    ebp,ebp
10002011:	inc    ebp
10002012:	jmp    0x1000204e
10002014:	test   edi,edi
10002016:	jne    0x10002054
10002018:	mov    eax,DWORD PTR [esp+0x14]
1000201c:	shr    eax,0x4
1000201f:	inc    eax
10002020:	push   edi
10002021:	movzx  eax,ax
10002024:	push   eax
10002025:	push   0x6
10002027:	push   esi
10002028:	call   DWORD PTR ds:0x10066078
1000202e:	test   eax,eax
10002030:	je     0x10002045
10002032:	push   eax
10002033:	mov    eax,DWORD PTR [esp+0x18]
10002037:	push   esi
10002038:	call   0x10001f71
1000203d:	mov    edi,eax
1000203f:	test   edi,edi
10002041:	pop    ecx
10002042:	pop    ecx
10002043:	jne    0x1000205b
10002045:	push   ebp
10002046:	mov    ecx,ebx
10002048:	call   0x10056f85
1000204d:	inc    ebp
1000204e:	mov    esi,eax
10002050:	test   esi,esi
10002052:	jne    0x10002014
10002054:	xor    eax,eax
10002056:	pop    edi
10002057:	pop    esi
10002058:	pop    ebp
10002059:	pop    ebx
1000205a:	ret    
1000205b:	mov    eax,esi
1000205d:	jmp    0x10002056
1000205f:	ret    
10002060:	lea    ecx,[eax+0xc]
10002063:	or     edx,0xffffffff
10002066:	lock xadd DWORD PTR [ecx],edx
1000206a:	dec    edx
1000206b:	test   edx,edx
1000206d:	jg     0x10002077
1000206f:	mov    ecx,DWORD PTR [eax]
10002071:	mov    edx,DWORD PTR [ecx]
10002073:	push   eax
10002074:	call   DWORD PTR [edx+0x4]
10002077:	ret    
10002078:	mov    eax,DWORD PTR [eax]
1000207a:	sub    eax,0x10
1000207d:	jmp    0x10002060
10002082:	mov    eax,DWORD PTR [esp+0x4]
10002086:	push   esi
10002087:	mov    esi,DWORD PTR [eax]
10002089:	and    DWORD PTR [eax],0x0
1000208c:	mov    eax,DWORD PTR [edi]
1000208e:	cmp    esi,eax
10002090:	je     0x10002099
10002092:	push   eax
10002093:	call   0x100430d2
10002098:	pop    ecx
10002099:	mov    DWORD PTR [edi],esi
1000209b:	mov    eax,edi
1000209d:	pop    esi
1000209e:	ret    0x4
100020a1:	push   DWORD PTR [eax]
100020a3:	call   0x100430d2
100020a8:	pop    ecx
100020a9:	ret    
100020aa:	push   ebp
100020ab:	mov    ebp,esp
100020ad:	push   ebx
100020ae:	mov    ebx,DWORD PTR ds:0x1006608c
100020b4:	push   esi
100020b5:	xor    esi,esi
100020b7:	cmp    DWORD PTR [ebp+0xc],esi
100020ba:	push   edi
100020bb:	je     0x100020d3
100020bd:	call   DWORD PTR ds:0x1007efec
100020c3:	push   esi
100020c4:	push   esi
100020c5:	push   0xffffffff
100020c7:	push   DWORD PTR [ebp+0xc]
100020ca:	push   esi
100020cb:	push   eax
100020cc:	call   ebx
100020ce:	mov    edi,eax
100020d0:	dec    edi
100020d1:	jmp    0x100020d5
100020d3:	xor    edi,edi
100020d5:	cmp    edi,esi
100020d7:	mov    esi,DWORD PTR [ebp+0x8]
100020da:	jle    0x100020ff
100020dc:	push   edi
100020dd:	call   0x1000219e
100020e2:	push   edi
100020e3:	push   eax
100020e4:	push   0xffffffff
100020e6:	push   DWORD PTR [ebp+0xc]
100020e9:	push   0x0
100020eb:	call   DWORD PTR ds:0x1007efec
100020f1:	push   eax
100020f2:	call   ebx
100020f4:	mov    eax,edi
100020f6:	mov    edx,esi
100020f8:	call   0x10002229
100020fd:	jmp    0x10002104
100020ff:	call   0x1000215e
10002104:	mov    eax,DWORD PTR [ebp+0x8]
10002107:	pop    edi
10002108:	pop    esi
10002109:	pop    ebx
1000210a:	pop    ebp
1000210b:	ret    0x8
1000210e:	xor    al,al
10002110:	cmp    DWORD PTR [esp+0x8],0x0
10002115:	je     0x10002140
10002117:	test   DWORD PTR [esp+0x8],0xffff0000
1000211f:	jne    0x10002140
10002121:	push   esi
10002122:	movzx  esi,WORD PTR [esp+0xc]
10002127:	push   esi
10002128:	call   0x10001ffc
1000212d:	test   eax,eax
1000212f:	pop    ecx
10002130:	je     0x1000213d
10002132:	push   esi
10002133:	push   eax
10002134:	push   DWORD PTR [esp+0x10]
10002138:	call   0x100021c4
1000213d:	mov    al,0x1
1000213f:	pop    esi
10002140:	ret    0x8
10002143:	test   ecx,ecx
10002145:	jne    0x10002151
10002147:	push   0x80004005
1000214c:	call   0x10001f24
10002151:	mov    eax,DWORD PTR [ecx]
10002153:	call   DWORD PTR [eax+0xc]
10002156:	add    eax,0x10
10002159:	mov    DWORD PTR [esi],eax
1000215b:	mov    eax,esi
1000215d:	ret    
1000215e:	mov    ecx,DWORD PTR [esi]
10002160:	lea    eax,[ecx-0x10]
10002163:	xor    edx,edx
10002165:	cmp    DWORD PTR [eax+0x4],edx
10002168:	push   edi
10002169:	mov    edi,DWORD PTR [eax]
1000216b:	je     0x1000219c
1000216d:	cmp    DWORD PTR [eax+0xc],edx
10002170:	jge    0x1000218b
10002172:	cmp    DWORD PTR [ecx-0x8],edx
10002175:	jge    0x10002181
10002177:	push   0x80070057
1000217c:	call   0x10001f24
10002181:	mov    DWORD PTR [ecx-0xc],edx
10002184:	mov    eax,DWORD PTR [esi]
10002186:	mov    WORD PTR [eax],dx
10002189:	pop    edi
1000218a:	ret    
1000218b:	call   0x10002060
10002190:	mov    eax,DWORD PTR [edi]
10002192:	mov    ecx,edi
10002194:	call   DWORD PTR [eax+0xc]
10002197:	add    eax,0x10
1000219a:	mov    DWORD PTR [esi],eax
1000219c:	pop    edi
1000219d:	ret    
1000219e:	mov    eax,DWORD PTR [esi]
100021a0:	xor    ecx,ecx
100021a2:	sub    eax,0x10
100021a5:	inc    ecx
100021a6:	sub    ecx,DWORD PTR [eax+0xc]
100021a9:	mov    eax,DWORD PTR [eax+0x8]
100021ac:	sub    eax,DWORD PTR [esp+0x4]
100021b0:	or     ecx,eax
100021b2:	jge    0x100021bf
100021b4:	mov    eax,DWORD PTR [esp+0x4]
100021b8:	mov    ecx,esi
100021ba:	call   0x1000224a
100021bf:	mov    eax,DWORD PTR [esi]
100021c1:	ret    0x4
100021c4:	push   edi
100021c5:	push   DWORD PTR [esp+0x10]
100021c9:	push   DWORD PTR [esp+0x10]
100021cd:	call   0x10001fce
100021d2:	mov    edi,eax
100021d4:	test   edi,edi
100021d6:	pop    ecx
100021d7:	pop    ecx
100021d8:	je     0x10002225
100021da:	push   ebx
100021db:	movzx  ebx,WORD PTR [edi]
100021de:	push   esi
100021df:	mov    esi,DWORD PTR [esp+0x10]
100021e3:	push   ebx
100021e4:	call   0x1000219e
100021e9:	mov    esi,eax
100021eb:	movzx  eax,WORD PTR [edi]
100021ee:	add    edi,0x2
100021f1:	cmp    eax,0xffffffff
100021f4:	jne    0x100021fe
100021f6:	push   edi
100021f7:	call   0x10043933
100021fc:	pop    ecx
100021fd:	inc    eax
100021fe:	add    eax,eax
10002200:	push   eax
10002201:	push   edi
10002202:	lea    eax,[ebx+ebx*1]
10002205:	push   eax
10002206:	push   esi
10002207:	call   0x10043605
1000220c:	push   eax
1000220d:	call   0x10001f3c
10002212:	mov    edx,DWORD PTR [esp+0x24]
10002216:	add    esp,0x14
10002219:	mov    eax,ebx
1000221b:	call   0x10002229
10002220:	xor    eax,eax
10002222:	pop    esi
10002223:	inc    eax
10002224:	pop    ebx
10002225:	pop    edi
10002226:	ret    0xc
10002229:	test   eax,eax
1000222b:	jl     0x1000223f
1000222d:	mov    ecx,DWORD PTR [edx]
1000222f:	cmp    eax,DWORD PTR [ecx-0x8]
10002232:	jg     0x1000223f
10002234:	mov    DWORD PTR [ecx-0xc],eax
10002237:	mov    ecx,DWORD PTR [edx]
10002239:	and    WORD PTR [ecx+eax*2],0x0
1000223e:	ret    
1000223f:	push   0x80070057
10002244:	call   0x10001f24
10002249:	int3   
1000224a:	push   esi
1000224b:	mov    esi,ecx
1000224d:	push   edi
1000224e:	mov    edi,eax
10002250:	mov    eax,DWORD PTR [esi]
10002252:	mov    ecx,DWORD PTR [eax-0xc]
10002255:	sub    eax,0x10
10002258:	cmp    ecx,edi
1000225a:	jle    0x1000225e
1000225c:	mov    edi,ecx
1000225e:	cmp    DWORD PTR [eax+0xc],0x1
10002262:	jle    0x1000226d
10002264:	push   edi
10002265:	push   esi
10002266:	call   0x10002293
1000226b:	jmp    0x10002290
1000226d:	mov    eax,DWORD PTR [eax+0x8]
10002270:	cmp    eax,edi
10002272:	jge    0x10002290
10002274:	mov    edx,eax
10002276:	mov    eax,0x400
1000227b:	cmp    edx,eax
1000227d:	jle    0x10002283
1000227f:	add    edx,eax
10002281:	jmp    0x10002285
10002283:	add    edx,edx
10002285:	cmp    edx,edi
10002287:	jge    0x1000228b
10002289:	mov    edx,edi
1000228b:	call   0x100022f9
10002290:	pop    edi
10002291:	pop    esi
10002292:	ret    
10002293:	push   ebp
10002294:	mov    ebp,esp
10002296:	push   ecx
10002297:	mov    eax,DWORD PTR [ebp+0x8]
1000229a:	push   ebx
1000229b:	push   esi
1000229c:	mov    esi,DWORD PTR [eax]
1000229e:	mov    ebx,DWORD PTR [esi-0xc]
100022a1:	sub    esi,0x10
100022a4:	mov    ecx,DWORD PTR [esi]
100022a6:	mov    eax,DWORD PTR [ecx]
100022a8:	push   edi
100022a9:	mov    DWORD PTR [ebp-0x4],ebx
100022ac:	call   DWORD PTR [eax+0x10]
100022af:	mov    edx,DWORD PTR [eax]
100022b1:	push   0x2
100022b3:	push   DWORD PTR [ebp+0xc]
100022b6:	mov    ecx,eax
100022b8:	call   DWORD PTR [edx]
100022ba:	mov    edi,eax
100022bc:	test   edi,edi
100022be:	jne    0x100022c5
100022c0:	call   0x1000233e
100022c5:	mov    eax,DWORD PTR [ebp+0xc]
100022c8:	cmp    ebx,eax
100022ca:	jge    0x100022ce
100022cc:	mov    eax,ebx
100022ce:	lea    ecx,[esi+0x10]
100022d1:	push   ecx
100022d2:	inc    eax
100022d3:	push   eax
100022d4:	lea    ebx,[edi+0x10]
100022d7:	push   ebx
100022d8:	call   0x10002323
100022dd:	mov    eax,DWORD PTR [ebp-0x4]
100022e0:	mov    DWORD PTR [edi+0x4],eax
100022e3:	add    esp,0xc
100022e6:	mov    eax,esi
100022e8:	call   0x10002060
100022ed:	mov    eax,DWORD PTR [ebp+0x8]
100022f0:	pop    edi
100022f1:	pop    esi
100022f2:	mov    DWORD PTR [eax],ebx
100022f4:	pop    ebx
100022f5:	leave  
100022f6:	ret    0x8
100022f9:	mov    eax,DWORD PTR [esi]
100022fb:	sub    eax,0x10
100022fe:	cmp    DWORD PTR [eax+0x8],edx
10002301:	mov    ecx,DWORD PTR [eax]
10002303:	jge    0x10002318
10002305:	test   edx,edx
10002307:	jle    0x10002318
10002309:	push   edi
1000230a:	mov    edi,DWORD PTR [ecx]
1000230c:	push   0x2
1000230e:	push   edx
1000230f:	push   eax
10002310:	call   DWORD PTR [edi+0x8]
10002313:	test   eax,eax
10002315:	pop    edi
10002316:	jne    0x1000231d
10002318:	jmp    0x1000233e
1000231d:	add    eax,0x10
10002320:	mov    DWORD PTR [esi],eax
10002322:	ret    
10002323:	add    eax,eax
10002325:	push   eax
10002326:	push   DWORD PTR [esp+0x10]
1000232a:	mov    eax,DWORD PTR [esp+0x10]
1000232e:	add    eax,eax
10002330:	push   eax
10002331:	push   DWORD PTR [esp+0x10]
10002335:	call   0x10043605
1000233a:	add    esp,0x10
1000233d:	ret    
1000233e:	push   0x8007000e
10002343:	call   0x10001f24
10002348:	int3   
10002349:	push   0x0
1000234b:	mov    eax,0x10062662
10002350:	call   0x10059c75
10002355:	mov    esi,DWORD PTR [ebp+0x8]
10002358:	mov    ecx,0x10080a74
1000235d:	call   0x10002143
10002362:	push   DWORD PTR [ebp+0xc]
10002365:	and    DWORD PTR [ebp-0x4],0x0
10002369:	push   esi
1000236a:	call   0x1000210e
1000236f:	test   al,al
10002371:	jne    0x1000237c
10002373:	push   DWORD PTR [ebp+0xc]
10002376:	push   esi
10002377:	call   0x10002386
1000237c:	mov    eax,esi
1000237e:	call   0x10059d4d
10002383:	ret    0x8
10002386:	push   ebp
10002387:	mov    ebp,esp
10002389:	xor    eax,eax
1000238b:	cmp    DWORD PTR [ebp+0xc],eax
1000238e:	je     0x10002399
10002390:	push   DWORD PTR [ebp+0xc]
10002393:	call   0x10043933
10002398:	pop    ecx
10002399:	push   ebx
1000239a:	push   DWORD PTR [ebp+0xc]
1000239d:	mov    ebx,eax
1000239f:	mov    eax,DWORD PTR [ebp+0x8]
100023a2:	call   0x100023af
100023a7:	mov    eax,DWORD PTR [ebp+0x8]
100023aa:	pop    ebx
100023ab:	pop    ebp
100023ac:	ret    0x8
100023af:	push   ebp
100023b0:	mov    ebp,esp
100023b2:	push   ecx
100023b3:	test   ebx,ebx
100023b5:	push   esi
100023b6:	mov    esi,eax
100023b8:	jne    0x100023c1
100023ba:	call   0x1000215e
100023bf:	jmp    0x10002417
100023c1:	push   edi
100023c2:	mov    edi,DWORD PTR [ebp+0x8]
100023c5:	test   edi,edi
100023c7:	jne    0x100023d3
100023c9:	push   0x80070057
100023ce:	call   0x10001f24
100023d3:	mov    eax,DWORD PTR [esi]
100023d5:	mov    ecx,DWORD PTR [eax-0xc]
100023d8:	sub    edi,eax
100023da:	push   ebx
100023db:	mov    DWORD PTR [ebp-0x4],ecx
100023de:	sar    edi,1
100023e0:	call   0x1000219e
100023e5:	cmp    edi,DWORD PTR [ebp-0x4]
100023e8:	ja     0x100023fe
100023ea:	lea    ecx,[ebx+ebx*1]
100023ed:	push   ecx
100023ee:	lea    edx,[eax+edi*2]
100023f1:	push   edx
100023f2:	push   ecx
100023f3:	push   eax
100023f4:	call   0x100430e6
100023f9:	add    esp,0x10
100023fc:	jmp    0x1000240d
100023fe:	push   DWORD PTR [ebp+0x8]
10002401:	push   ebx
10002402:	push   eax
10002403:	mov    eax,ebx
10002405:	call   0x10002323
1000240a:	add    esp,0xc
1000240d:	mov    eax,ebx
1000240f:	mov    edx,esi
10002411:	call   0x10002229
10002416:	pop    edi
10002417:	pop    esi
10002418:	leave  
10002419:	ret    0x4
1000241c:	xor    eax,eax
1000241e:	cmp    esi,eax
10002420:	je     0x1000244a
10002422:	cmp    DWORD PTR [esp+0x4],eax
10002426:	je     0x1000244a
10002428:	push   eax
10002429:	push   eax
1000242a:	push   DWORD PTR [esp+0x10]
1000242e:	mov    BYTE PTR [esi],al
10002430:	push   esi
10002431:	push   0xffffffff
10002433:	push   DWORD PTR [esp+0x18]
10002437:	push   eax
10002438:	push   DWORD PTR [esp+0x28]
1000243c:	call   DWORD PTR ds:0x100660b8
10002442:	neg    eax
10002444:	sbb    eax,eax
10002446:	and    eax,esi
10002448:	jmp    0x1000244c
1000244a:	xor    eax,eax
1000244c:	ret    0xc
1000244f:	push   0x4
10002451:	mov    eax,0x1005f8ac
10002456:	call   0x10059c75
1000245b:	push   0xc
1000245d:	call   0x100436de
10002462:	mov    esi,eax
10002464:	pop    ecx
10002465:	mov    DWORD PTR [ebp-0x10],esi
10002468:	and    DWORD PTR [ebp-0x4],0x0
1000246c:	test   esi,esi
1000246e:	je     0x10002487
10002470:	push   DWORD PTR [ebp+0x8]
10002473:	and    DWORD PTR [esi+0x4],0x0
10002477:	mov    DWORD PTR [esi+0x8],0x1
1000247e:	call   0x10050b40
10002483:	mov    DWORD PTR [esi],eax
10002485:	jmp    0x10002489
10002487:	xor    esi,esi
10002489:	or     DWORD PTR [ebp-0x4],0xffffffff
1000248d:	test   esi,esi
1000248f:	mov    DWORD PTR [edi],esi
10002491:	jne    0x1000249d
10002493:	push   0x8007000e
10002498:	call   0x10050e30
1000249d:	mov    eax,edi
1000249f:	call   0x10059d4d
100024a4:	ret    0x4
100024a7:	push   0x4
100024a9:	mov    eax,0x1005f8ac
100024ae:	call   0x10059c75
100024b3:	push   0xc
100024b5:	call   0x100436de
100024ba:	mov    esi,eax
100024bc:	pop    ecx
100024bd:	mov    DWORD PTR [ebp-0x10],esi
100024c0:	and    DWORD PTR [ebp-0x4],0x0
100024c4:	test   esi,esi
100024c6:	je     0x100024d2
100024c8:	push   DWORD PTR [ebp+0x8]
100024cb:	call   0x100025ea
100024d0:	jmp    0x100024d4
100024d2:	xor    eax,eax
100024d4:	or     DWORD PTR [ebp-0x4],0xffffffff
100024d8:	test   eax,eax
100024da:	mov    DWORD PTR [edi],eax
100024dc:	jne    0x100024e8
100024de:	push   0x8007000e
100024e3:	call   0x10050e30
100024e8:	mov    eax,edi
100024ea:	call   0x10059d4d
100024ef:	ret    0x4
100024f2:	jmp    0x100025aa
100024f7:	push   0x4
100024f9:	mov    eax,0x1005f8ac
100024fe:	call   0x10059c75
10002503:	push   0xc
10002505:	call   0x100436de
1000250a:	mov    edi,eax
1000250c:	pop    ecx
1000250d:	mov    DWORD PTR [ebp-0x10],edi
10002510:	xor    esi,esi
10002512:	cmp    edi,esi
10002514:	mov    DWORD PTR [ebp-0x4],esi
10002517:	je     0x10002524
10002519:	push   DWORD PTR [ebp+0x8]
1000251c:	push   ebx
1000251d:	call   0x1000261a
10002522:	mov    esi,eax
10002524:	or     DWORD PTR [ebp-0x4],0xffffffff
10002528:	test   esi,esi
1000252a:	jne    0x10002538
1000252c:	push   0x8007000e
10002531:	call   0x10050e30
10002536:	jmp    0x10002541
10002538:	mov    edi,ebx
1000253a:	call   0x100025aa
1000253f:	mov    DWORD PTR [ebx],esi
10002541:	mov    eax,ebx
10002543:	call   0x10059d4d
10002548:	ret    0x4
1000254b:	push   0x4
1000254d:	mov    eax,0x1005fb26
10002552:	call   0x10059c75
10002557:	mov    ebx,DWORD PTR [ebp+0x8]
1000255a:	and    DWORD PTR [ebp-0x4],0x0
1000255e:	push   DWORD PTR [ebp+0xc]
10002561:	and    DWORD PTR [ebp-0x10],0x0
10002565:	mov    edi,ebx
10002567:	call   0x100024a7
1000256c:	and    DWORD PTR [ebp-0x4],0x0
10002570:	push   DWORD PTR [ebp+0x10]
10002573:	mov    DWORD PTR [ebp-0x10],0x1
1000257a:	call   0x100024f7
1000257f:	mov    eax,ebx
10002581:	call   0x10059d4d
10002586:	ret    
10002587:	mov    eax,DWORD PTR [eax]
10002589:	test   eax,eax
1000258b:	je     0x10002590
1000258d:	mov    eax,DWORD PTR [eax]
1000258f:	ret    
10002590:	xor    eax,eax
10002592:	ret    
10002593:	mov    eax,DWORD PTR [eax]
10002595:	test   eax,eax
10002597:	je     0x100025a7
10002599:	mov    eax,DWORD PTR [eax]
1000259b:	test   eax,eax
1000259d:	je     0x100025a7
1000259f:	push   eax
100025a0:	call   DWORD PTR ds:0x100662ac
100025a6:	ret    
100025a7:	xor    eax,eax
100025a9:	ret    
100025aa:	push   esi
100025ab:	mov    esi,DWORD PTR [edi]
100025ad:	test   esi,esi
100025af:	je     0x100025e8
100025b1:	lea    eax,[esi+0x8]
100025b4:	push   eax
100025b5:	call   DWORD PTR ds:0x100660ac
100025bb:	test   eax,eax
100025bd:	jne    0x100025e5
100025bf:	test   esi,esi
100025c1:	je     0x100025e5
100025c3:	mov    eax,DWORD PTR [esi]
100025c5:	test   eax,eax
100025c7:	je     0x100025d0
100025c9:	push   eax
100025ca:	call   DWORD PTR ds:0x100662b4
100025d0:	mov    eax,DWORD PTR [esi+0x4]
100025d3:	test   eax,eax
100025d5:	je     0x100025de
100025d7:	push   eax
100025d8:	call   0x10043600
100025dd:	pop    ecx
100025de:	push   esi
100025df:	call   0x100430d2
100025e4:	pop    ecx
100025e5:	and    DWORD PTR [edi],0x0
100025e8:	pop    esi
100025e9:	ret    
100025ea:	push   DWORD PTR [esp+0x4]
100025ee:	and    DWORD PTR [esi+0x4],0x0
100025f2:	mov    DWORD PTR [esi+0x8],0x1
100025f9:	call   DWORD PTR ds:0x100662b0
100025ff:	test   eax,eax
10002601:	mov    DWORD PTR [esi],eax
10002603:	jne    0x10002615
10002605:	cmp    DWORD PTR [esp+0x4],eax
10002609:	je     0x10002615
1000260b:	push   0x8007000e
10002610:	call   0x10050e30
10002615:	mov    eax,esi
10002617:	ret    0x4
1000261a:	push   ebp
1000261b:	mov    ebp,esp
1000261d:	push   ecx
1000261e:	mov    eax,DWORD PTR [ebp+0x8]
10002621:	and    DWORD PTR [edi+0x4],0x0
10002625:	push   ebx
10002626:	push   esi
10002627:	mov    DWORD PTR [edi+0x8],0x1
1000262e:	call   0x10002593
10002633:	mov    ebx,eax
10002635:	mov    eax,DWORD PTR [ebp+0xc]
10002638:	call   0x10002593
1000263d:	lea    esi,[eax+ebx*1]
10002640:	add    esi,esi
10002642:	push   esi
10002643:	push   0x0
10002645:	mov    DWORD PTR [ebp-0x4],eax
10002648:	call   DWORD PTR ds:0x100662a8
1000264e:	test   eax,eax
10002650:	mov    DWORD PTR [edi],eax
10002652:	jne    0x10002660
10002654:	push   0x8007000e
10002659:	call   0x10050e30
1000265e:	jmp    0x100026b1
10002660:	mov    ecx,DWORD PTR [ebp+0x8]
10002663:	mov    ecx,DWORD PTR [ecx]
10002665:	test   ecx,ecx
10002667:	je     0x1000266d
10002669:	mov    ecx,DWORD PTR [ecx]
1000266b:	jmp    0x1000266f
1000266d:	xor    ecx,ecx
1000266f:	test   ecx,ecx
10002671:	je     0x10002686
10002673:	lea    edx,[ebx+ebx*1+0x2]
10002677:	push   edx
10002678:	push   ecx
10002679:	add    esi,0x2
1000267c:	push   esi
1000267d:	push   eax
1000267e:	call   0x10043605
10002683:	add    esp,0x10
10002686:	mov    eax,DWORD PTR [ebp+0xc]
10002689:	mov    eax,DWORD PTR [eax]
1000268b:	test   eax,eax
1000268d:	je     0x10002693
1000268f:	mov    ecx,DWORD PTR [eax]
10002691:	jmp    0x10002695
10002693:	xor    ecx,ecx
10002695:	test   ecx,ecx
10002697:	je     0x100026b1
10002699:	mov    eax,DWORD PTR [ebp-0x4]
1000269c:	lea    eax,[eax+eax*1+0x2]
100026a0:	push   eax
100026a1:	push   ecx
100026a2:	push   eax
100026a3:	mov    eax,DWORD PTR [edi]
100026a5:	lea    eax,[eax+ebx*2]
100026a8:	push   eax
100026a9:	call   0x10043605
100026ae:	add    esp,0x10
100026b1:	pop    esi
100026b2:	mov    eax,edi
100026b4:	pop    ebx
100026b5:	leave  
100026b6:	ret    0x8
100026b9:	mov    DWORD PTR [ecx],0x1006b96c
100026bf:	jmp    0x100010a3
100026c4:	push   esi
100026c5:	mov    esi,ecx
100026c7:	mov    DWORD PTR [esi],0x1006b96c
100026cd:	call   0x100010a3
100026d2:	test   BYTE PTR [esp+0x8],0x1
100026d7:	je     0x100026e0
100026d9:	push   esi
100026da:	call   0x100430d2
100026df:	pop    ecx
100026e0:	mov    eax,esi
100026e2:	pop    esi
100026e3:	ret    0x4
100026e6:	push   0x0
100026e8:	mov    eax,0x1005fff6
100026ed:	call   0x10059c75
100026f2:	mov    esi,DWORD PTR [ebp+0x8]
100026f5:	mov    ecx,esi
100026f7:	call   0x10043141
100026fc:	and    DWORD PTR [ebp-0x4],0x0
10002700:	push   DWORD PTR [ebp+0xc]
10002703:	lea    ecx,[esi+0xc]
10002706:	mov    DWORD PTR [esi],0x10073674
1000270c:	call   0x100011ab
10002711:	mov    eax,esi
10002713:	call   0x10059d4d
10002718:	ret    0x8
1000271b:	push   esi
1000271c:	mov    esi,ecx
1000271e:	push   0x0
10002720:	push   0x1
10002722:	lea    ecx,[esi+0xc]
10002725:	mov    DWORD PTR [esi],0x10073674
1000272b:	call   0x100012f4
10002730:	mov    ecx,esi
10002732:	pop    esi
10002733:	jmp    0x10043210
10002738:	cmp    DWORD PTR [ecx+0x24],0x10
1000273c:	jb     0x10002742
1000273e:	mov    eax,DWORD PTR [ecx+0x10]
10002741:	ret    
10002742:	lea    eax,[ecx+0x10]
10002745:	ret    
10002746:	push   esi
10002747:	mov    esi,ecx
10002749:	call   0x1000271b
1000274e:	test   BYTE PTR [esp+0x8],0x1
10002753:	je     0x1000275c
10002755:	push   esi
10002756:	call   0x100430d2
1000275b:	pop    ecx
1000275c:	mov    eax,esi
1000275e:	pop    esi
1000275f:	ret    0x4
10002762:	push   0x4
10002764:	mov    eax,0x1005fb64
10002769:	call   0x10059c75
1000276e:	mov    esi,ecx
10002770:	mov    DWORD PTR [ebp-0x10],esi
10002773:	mov    edi,DWORD PTR [ebp+0x8]
10002776:	push   edi
10002777:	call   0x100431b8
1000277c:	and    DWORD PTR [ebp-0x4],0x0
10002780:	add    edi,0xc
10002783:	push   edi
10002784:	lea    ecx,[esi+0xc]
10002787:	mov    DWORD PTR [esi],0x10073674
1000278d:	call   0x100011ab
10002792:	mov    eax,esi
10002794:	call   0x10059d4d
10002799:	ret    0x4
1000279c:	push   0x0
1000279e:	mov    eax,0x1005fe79
100027a3:	call   0x10059c75
100027a8:	mov    esi,DWORD PTR [ebp+0x8]
100027ab:	push   DWORD PTR [ebp+0xc]
100027ae:	mov    ecx,esi
100027b0:	call   0x100011ab
100027b5:	push   DWORD PTR [ebp+0x10]
100027b8:	and    DWORD PTR [ebp-0x4],0x0
100027bc:	lea    ecx,[esi+0x1c]
100027bf:	call   0x100011ab
100027c4:	push   DWORD PTR [ebp+0x14]
100027c7:	lea    ecx,[esi+0x38]
100027ca:	mov    BYTE PTR [ebp-0x4],0x1
100027ce:	call   0x100011ab
100027d3:	push   DWORD PTR [ebp+0x18]
100027d6:	lea    ecx,[esi+0x54]
100027d9:	mov    BYTE PTR [ebp-0x4],0x2
100027dd:	call   0x100011ab
100027e2:	mov    eax,DWORD PTR [ebp+0x1c]
100027e5:	mov    DWORD PTR [esi+0x70],eax
100027e8:	mov    eax,DWORD PTR [edi]
100027ea:	mov    DWORD PTR [esi+0x80],eax
100027f0:	mov    eax,DWORD PTR [edi+0x4]
100027f3:	mov    DWORD PTR [esi+0x84],eax
100027f9:	mov    eax,DWORD PTR [ebx]
100027fb:	mov    DWORD PTR [esi+0x78],eax
100027fe:	mov    eax,DWORD PTR [ebx+0x4]
10002801:	mov    DWORD PTR [esi+0x7c],eax
10002804:	mov    eax,esi
10002806:	call   0x10059d4d
1000280b:	ret    0x18
1000280e:	push   0x4
10002810:	mov    eax,0x1005ffd3
10002815:	call   0x10059c75
1000281a:	mov    esi,ecx
1000281c:	mov    DWORD PTR [ebp-0x10],esi
1000281f:	and    DWORD PTR [ebp-0x4],0x0
10002823:	call   0x100040e9
10002828:	push   0xffffffff
1000282a:	push   0x0
1000282c:	lea    eax,[ebp+0x8]
1000282f:	push   eax
10002830:	mov    ecx,esi
10002832:	mov    BYTE PTR [ebp-0x4],0x1
10002836:	call   0x10001245
1000283b:	mov    eax,DWORD PTR [ebp+0x24]
1000283e:	push   0x0
10002840:	push   0x1
10002842:	lea    ecx,[ebp+0x8]
10002845:	mov    DWORD PTR [esi+0x1c],eax
10002848:	call   0x100012f4
1000284d:	mov    eax,esi
1000284f:	call   0x10059d4d
10002854:	ret    0x20
10002857:	push   0x0
10002859:	mov    eax,0x10061151
1000285e:	call   0x10059c75
10002863:	mov    edi,DWORD PTR [ebp+0x8]
10002866:	mov    esi,edi
10002868:	call   0x100040e9
1000286d:	mov    esi,DWORD PTR [ebp+0x10]
10002870:	xor    eax,eax
10002872:	mov    DWORD PTR [ebp-0x4],eax
10002875:	mov    DWORD PTR [edi+0x1c],eax
10002878:	mov    DWORD PTR [edi+0x20],eax
1000287b:	mov    DWORD PTR [edi+0x24],eax
1000287e:	mov    eax,DWORD PTR [ebp+0xc]
10002881:	mov    ecx,edi
10002883:	call   0x1003a090
10002888:	mov    eax,edi
1000288a:	call   0x10059d4d
1000288f:	ret    0xc
10002892:	push   0x8
10002894:	mov    eax,0x1006263f
10002899:	call   0x10059c75
1000289e:	and    DWORD PTR [ebp-0x14],0x0
100028a2:	push   0x4
100028a4:	call   0x100436de
100028a9:	pop    ecx
100028aa:	mov    DWORD PTR [ebp-0x14],eax
100028ad:	and    DWORD PTR [ebp-0x4],0x0
100028b1:	test   eax,eax
100028b3:	je     0x100028c2
100028b5:	push   DWORD PTR [ebp+0xc]
100028b8:	push   eax
100028b9:	call   0x10034bf0
100028be:	mov    esi,eax
100028c0:	jmp    0x100028c4
100028c2:	xor    esi,esi
100028c4:	mov    edi,esi
100028c6:	mov    DWORD PTR [ebp-0x14],edi
100028c9:	push   0x4
100028cb:	mov    DWORD PTR [ebp-0x4],0x1
100028d2:	call   0x100436de
100028d7:	test   eax,eax
100028d9:	pop    ecx
100028da:	je     0x100028e2
100028dc:	xor    edi,edi
100028de:	mov    DWORD PTR [eax],esi
100028e0:	jmp    0x100028e4
100028e2:	xor    eax,eax
100028e4:	mov    esi,DWORD PTR [ebp+0x8]
100028e7:	and    DWORD PTR [ebp-0x10],0x0
100028eb:	mov    DWORD PTR [esi],eax
100028ed:	lea    eax,[ebp-0x10]
100028f0:	call   0x100042aa
100028f5:	test   edi,edi
100028f7:	je     0x10002908
100028f9:	push   DWORD PTR [edi]
100028fb:	call   DWORD PTR ds:0x10066070
10002901:	push   edi
10002902:	call   0x100430d2
10002907:	pop    ecx
10002908:	mov    eax,esi
1000290a:	call   0x10059d4d
1000290f:	ret    
10002910:	push   ebp
10002911:	mov    ebp,esp
10002913:	and    esp,0xfffffff8
10002916:	push   ecx
10002917:	push   ecx
10002918:	push   esi
10002919:	push   edi
1000291a:	call   0x1002fb70
1000291f:	mov    edi,eax
10002921:	mov    eax,DWORD PTR [ebp+0x8]
10002924:	mov    eax,DWORD PTR [eax]
10002926:	push   0x1
10002928:	push   eax
10002929:	lea    ecx,[esp+0x10]
1000292d:	mov    esi,edx
1000292f:	call   0x10035c50
10002934:	mov    ecx,DWORD PTR [eax]
10002936:	mov    eax,DWORD PTR [eax+0x4]
10002939:	add    ecx,0x9534e000
1000293f:	adc    eax,0x64
10002942:	cmp    esi,eax
10002944:	ja     0x10002951
10002946:	jb     0x1000294c
10002948:	cmp    edi,ecx
1000294a:	jae    0x10002951
1000294c:	xor    eax,eax
1000294e:	inc    eax
1000294f:	jmp    0x10002953
10002951:	xor    eax,eax
10002953:	pop    edi
10002954:	pop    esi
10002955:	mov    esp,ebp
10002957:	pop    ebp
10002958:	ret    0x4
1000295b:	xor    eax,eax
1000295d:	push   eax
1000295e:	push   eax
1000295f:	push   eax
10002960:	push   0x1000296e
10002965:	push   eax
10002966:	push   eax
10002967:	call   DWORD PTR ds:0x10066098
1000296d:	ret    
1000296e:	push   ebp
1000296f:	sub    esp,0x8c
10002975:	lea    ebp,[esp-0x4]
10002979:	mov    eax,ds:0x1007e030
1000297e:	xor    eax,ebp
10002980:	mov    DWORD PTR [ebp+0x8c],eax
10002986:	push   0xa4
1000298b:	mov    eax,0x10064ba3
10002990:	call   0x10059ca8
10002995:	lea    eax,[ebp-0x21]
10002998:	push   eax
10002999:	call   0x10037b40
1000299e:	push   0x1
100029a0:	lea    eax,[ebp-0x14]
100029a3:	xor    ebx,ebx
100029a5:	mov    DWORD PTR [ebp-0x4],ebx
100029a8:	push   eax
100029a9:	mov    BYTE PTR [ebp-0x4],0x1
100029ad:	call   0x10034bf0
100029b2:	mov    BYTE PTR [ebp-0x4],0x2
100029b6:	call   0x1002fb70
100029bb:	mov    edi,eax
100029bd:	push   0x4
100029bf:	lea    eax,[ebp-0x14]
100029c2:	push   eax
100029c3:	lea    ecx,[ebp-0x20]
100029c6:	mov    esi,edx
100029c8:	call   0x10035c50
100029cd:	mov    ecx,DWORD PTR [eax]
100029cf:	mov    eax,DWORD PTR [eax+0x4]
100029d2:	add    ecx,0x65a0bc00
100029d8:	adc    eax,0x1
100029db:	cmp    esi,eax
100029dd:	ja     0x10002a20
100029df:	jb     0x100029e5
100029e1:	cmp    edi,ecx
100029e3:	jae    0x10002a20
100029e5:	push   DWORD PTR [ebp-0x14]
100029e8:	call   DWORD PTR ds:0x10066070
100029ee:	call   0x10037b60
100029f3:	xor    eax,eax
100029f5:	lea    esp,[ebp-0xc0]
100029fb:	mov    ecx,DWORD PTR [ebp-0xc]
100029fe:	mov    DWORD PTR fs:0x0,ecx
10002a05:	pop    ecx
10002a06:	pop    edi
10002a07:	pop    esi
10002a08:	pop    ebx
10002a09:	mov    ecx,DWORD PTR [ebp+0x8c]
10002a0f:	xor    ecx,ebp
10002a11:	call   0x100430d7
10002a16:	add    ebp,0x90
10002a1c:	leave  
10002a1d:	ret    0x4
10002a20:	call   0x1002fb70
10002a25:	mov    DWORD PTR [ebp-0x20],eax
10002a28:	lea    eax,[ebp-0x20]
10002a2b:	push   eax
10002a2c:	lea    eax,[ebp-0x14]
10002a2f:	push   eax
10002a30:	push   0x4
10002a32:	pop    ecx
10002a33:	mov    DWORD PTR [ebp-0x1c],edx
10002a36:	call   0x10035d90
10002a3b:	push   DWORD PTR [ebp-0x14]
10002a3e:	call   DWORD PTR ds:0x10066070
10002a44:	push   0xf
10002a46:	pop    esi
10002a47:	push   ebx
10002a48:	lea    ecx,[ebp+0x70]
10002a4b:	mov    DWORD PTR [ebp+0x88],esi
10002a51:	call   0x10001420
10002a56:	mov    BYTE PTR [ebp-0x4],0x3
10002a5a:	cmp    BYTE PTR ds:0x10080c3c,bl
10002a60:	jne    0x10002a8b
10002a62:	lea    eax,[ebp-0x14]
10002a65:	push   eax
10002a66:	call   0x10038040
10002a6b:	mov    eax,DWORD PTR [eax]
10002a6d:	cmp    DWORD PTR [eax-0xc],ebx
10002a70:	pop    ecx
10002a71:	setne  al
10002a74:	mov    ds:0x10080c3d,al
10002a79:	mov    eax,DWORD PTR [ebp-0x14]
10002a7c:	add    eax,0xfffffff0
10002a7f:	call   0x10002060
10002a84:	mov    BYTE PTR ds:0x10080c3c,0x1
10002a8b:	cmp    BYTE PTR ds:0x10080c3d,bl
10002a91:	mov    edi,0x1006cce8
10002a96:	jne    0x10002a9d
10002a98:	mov    edi,0x1006cd0c
10002a9d:	push   0x4fe92436
10002aa2:	push   0x1006cd10
10002aa7:	call   0x100042d1
10002aac:	pop    ecx
10002aad:	pop    ecx
10002aae:	push   0x61bea8a0
10002ab3:	push   eax
10002ab4:	call   0x100042d1
10002ab9:	pop    ecx
10002aba:	pop    ecx
10002abb:	push   0x46041fce
10002ac0:	push   eax
10002ac1:	call   0x100042d1
10002ac6:	pop    ecx
10002ac7:	pop    ecx
10002ac8:	push   eax
10002ac9:	push   0x3
10002acb:	push   0x1006cd4c
10002ad0:	call   0x100042e3
10002ad5:	add    esp,0xc
10002ad8:	push   eax
10002ad9:	lea    ecx,[ebp-0x5c]
10002adc:	call   0x100011d1
10002ae1:	push   edi
10002ae2:	push   eax
10002ae3:	lea    eax,[ebp-0x94]
10002ae9:	push   eax
10002aea:	mov    BYTE PTR [ebp-0x4],0x4
10002aee:	call   0x100064b5
10002af3:	add    esp,0xc
10002af6:	push   0xffffffff
10002af8:	push   ebx
10002af9:	push   eax
10002afa:	lea    ecx,[ebp+0x70]
10002afd:	mov    BYTE PTR [ebp-0x4],0x5
10002b01:	call   0x10001245
10002b06:	push   ebx
10002b07:	push   0x1
10002b09:	lea    ecx,[ebp-0x94]
10002b0f:	call   0x100012f4
10002b14:	push   ebx
10002b15:	push   0x1
10002b17:	lea    ecx,[ebp-0x5c]
10002b1a:	call   0x100012f4
10002b1f:	push   ebx
10002b20:	lea    ecx,[ebp+0x1c]
10002b23:	mov    DWORD PTR [ebp+0x34],esi
10002b26:	call   0x10001420
10002b2b:	push   ebx
10002b2c:	lea    ecx,[ebp+0x0]
10002b2f:	mov    DWORD PTR [ebp+0x18],esi
10002b32:	call   0x10001420
10002b37:	push   ebx
10002b38:	lea    ecx,[ebp+0x38]
10002b3b:	mov    DWORD PTR [ebp+0x50],esi
10002b3e:	call   0x10001420
10002b43:	mov    BYTE PTR [ebp-0x4],0x8
10002b47:	lea    eax,[ebp+0x1c]
10002b4a:	mov    DWORD PTR [ebp-0x20],ebx
10002b4d:	mov    DWORD PTR [ebp-0x1c],ebx
10002b50:	push   eax
10002b51:	lea    ebx,[ebp-0x20]
10002b54:	lea    ecx,[ebp+0x38]
10002b57:	call   0x10038970
10002b5c:	xor    ebx,ebx
10002b5e:	cmp    al,bl
10002b60:	pop    ecx
10002b61:	je     0x10002d41
10002b67:	lea    eax,[ebp+0x38]
10002b6a:	push   eax
10002b6b:	lea    ecx,[ebp-0x78]
10002b6e:	call   0x10031180
10002b73:	pop    ecx
10002b74:	mov    esi,eax
10002b76:	push   0x3166348
10002b7b:	push   0x1006cd50
10002b80:	mov    BYTE PTR [ebp-0x4],0x9
10002b84:	call   0x100042d1
10002b89:	pop    ecx
10002b8a:	pop    ecx
10002b8b:	push   0x505a0f96
10002b90:	push   eax
10002b91:	call   0x100042d1
10002b96:	pop    ecx
10002b97:	pop    ecx
10002b98:	push   0x5ce0ce42
10002b9d:	push   eax
10002b9e:	call   0x100042d1
10002ba3:	pop    ecx
10002ba4:	pop    ecx
10002ba5:	push   0xa534058
10002baa:	push   eax
10002bab:	call   0x100042d1
10002bb0:	pop    ecx
10002bb1:	pop    ecx
10002bb2:	push   eax
10002bb3:	push   0x5
10002bb5:	push   0x1006cd84
10002bba:	call   0x100042e3
10002bbf:	add    esp,0xc
10002bc2:	push   eax
10002bc3:	lea    ecx,[ebp-0x94]
10002bc9:	call   0x100011d1
10002bce:	push   esi
10002bcf:	push   eax
10002bd0:	lea    eax,[ebp-0x5c]
10002bd3:	push   eax
10002bd4:	mov    BYTE PTR [ebp-0x4],0xa
10002bd8:	call   0x100064fb
10002bdd:	add    esp,0xc
10002be0:	push   0xffffffff
10002be2:	push   ebx
10002be3:	lea    esi,[ebp+0x70]
10002be6:	mov    BYTE PTR [ebp-0x4],0xb
10002bea:	call   0x10004cc2
10002bef:	xor    edi,edi
10002bf1:	push   ebx
10002bf2:	inc    edi
10002bf3:	push   edi
10002bf4:	lea    ecx,[ebp-0x5c]
10002bf7:	call   0x100012f4
10002bfc:	push   ebx
10002bfd:	push   edi
10002bfe:	lea    ecx,[ebp-0x94]
10002c04:	call   0x100012f4
10002c09:	push   ebx
10002c0a:	push   edi
10002c0b:	lea    ecx,[ebp-0x78]
10002c0e:	mov    BYTE PTR [ebp-0x4],0x8
10002c12:	call   0x100012f4
10002c17:	lea    eax,[ebp+0x1c]
10002c1a:	push   eax
10002c1b:	lea    ecx,[ebp-0x94]
10002c21:	call   0x10031180
10002c26:	pop    ecx
10002c27:	mov    esi,eax
10002c29:	push   0x4a8b3d8c
10002c2e:	push   0x1006cd8c
10002c33:	mov    BYTE PTR [ebp-0x4],0xc
10002c37:	call   0x100042d1
10002c3c:	pop    ecx
10002c3d:	pop    ecx
10002c3e:	push   eax
10002c3f:	push   0x7
10002c41:	push   0x1006cdc0
10002c46:	call   0x100042e3
10002c4b:	add    esp,0xc
10002c4e:	push   eax
10002c4f:	lea    ecx,[ebp-0x5c]
10002c52:	call   0x100011d1
10002c57:	push   esi
10002c58:	push   eax
10002c59:	lea    eax,[ebp-0x78]
10002c5c:	push   eax
10002c5d:	mov    BYTE PTR [ebp-0x4],0xd
10002c61:	call   0x100064fb
10002c66:	add    esp,0xc
10002c69:	push   0xffffffff
10002c6b:	push   ebx
10002c6c:	lea    esi,[ebp+0x70]
10002c6f:	mov    BYTE PTR [ebp-0x4],0xe
10002c73:	call   0x10004cc2
10002c78:	push   ebx
10002c79:	push   edi
10002c7a:	lea    ecx,[ebp-0x78]
10002c7d:	call   0x100012f4
10002c82:	push   ebx
10002c83:	push   edi
10002c84:	lea    ecx,[ebp-0x5c]
10002c87:	call   0x100012f4
10002c8c:	push   ebx
10002c8d:	push   edi
10002c8e:	lea    ecx,[ebp-0x94]
10002c94:	mov    BYTE PTR [ebp-0x4],0x8
10002c98:	call   0x100012f4
10002c9d:	mov    eax,ds:0x10080a74
10002ca2:	mov    ecx,0x10080a74
10002ca7:	call   DWORD PTR [eax+0xc]
10002caa:	add    eax,0x10
10002cad:	mov    DWORD PTR [ebp-0x14],eax
10002cb0:	push   0x68c80558
10002cb5:	push   0x1006cdc8
10002cba:	mov    BYTE PTR [ebp-0x4],0xf
10002cbe:	call   0x100042d1
10002cc3:	pop    ecx
10002cc4:	pop    ecx
10002cc5:	push   eax
10002cc6:	push   0xc
10002cc8:	push   0x1006cdec
10002ccd:	call   0x100044a2
10002cd2:	add    esp,0xc
10002cd5:	push   DWORD PTR [ebp-0x1c]
10002cd8:	push   DWORD PTR [ebp-0x20]
10002cdb:	push   eax
10002cdc:	lea    eax,[ebp-0x14]
10002cdf:	call   0x1000646a
10002ce4:	add    esp,0xc
10002ce7:	call   DWORD PTR ds:0x1007efec
10002ced:	lea    esi,[ebp-0x14]
10002cf0:	mov    DWORD PTR [ebp-0x18],eax
10002cf3:	call   0x10004208
10002cf8:	mov    edi,eax
10002cfa:	cmp    edi,ebx
10002cfc:	je     0x10002d0d
10002cfe:	push   edi
10002cff:	call   DWORD PTR ds:0x100660c4
10002d05:	inc    eax
10002d06:	cmp    eax,0x3fffffff
10002d0b:	jle    0x10002d11
10002d0d:	xor    eax,eax
10002d0f:	jmp    0x10002d2c
10002d11:	lea    esi,[eax+eax*1]
10002d14:	mov    eax,esi
10002d16:	call   0x1004b990
10002d1b:	mov    eax,esp
10002d1d:	mov    DWORD PTR [ebp-0x10],esp
10002d20:	push   DWORD PTR [ebp-0x18]
10002d23:	push   esi
10002d24:	push   edi
10002d25:	mov    esi,eax
10002d27:	call   0x1000241c
10002d2c:	push   eax
10002d2d:	lea    eax,[ebp+0x70]
10002d30:	push   eax
10002d31:	call   0x10004120
10002d36:	mov    eax,DWORD PTR [ebp-0x14]
10002d39:	add    eax,0xfffffff0
10002d3c:	call   0x10002060
10002d41:	mov    DWORD PTR [ebp-0x3c],ebx
10002d44:	mov    DWORD PTR [ebp-0x38],ebx
10002d47:	mov    DWORD PTR [ebp-0x34],ebx
10002d4a:	lea    eax,[ebp-0x40]
10002d4d:	push   eax
10002d4e:	mov    BYTE PTR [ebp-0x4],0x10
10002d52:	call   0x10038b50
10002d57:	pop    ecx
10002d58:	mov    DWORD PTR [ebp-0x14],ebx
10002d5b:	lea    eax,[ebp-0x40]
10002d5e:	call   0x10004674
10002d63:	cmp    DWORD PTR [ebp-0x14],eax
10002d66:	je     0x10002de2
10002d68:	push   0x71200006
10002d6d:	push   0x1006ce08
10002d72:	call   0x100042d1
10002d77:	pop    ecx
10002d78:	pop    ecx
10002d79:	push   eax
10002d7a:	push   0x5
10002d7c:	push   0x1006ce30
10002d81:	call   0x100042e3
10002d86:	add    esp,0xc
10002d89:	push   eax
10002d8a:	lea    ecx,[ebp-0x5c]
10002d8d:	call   0x100011d1
10002d92:	mov    edi,eax
10002d94:	mov    BYTE PTR [ebp-0x4],0x11
10002d98:	push   DWORD PTR [ebp-0x14]
10002d9b:	lea    esi,[ebp-0x40]
10002d9e:	call   0x1000468a
10002da3:	push   eax
10002da4:	lea    eax,[ebp-0x78]
10002da7:	push   edi
10002da8:	push   eax
10002da9:	call   0x100064fb
10002dae:	add    esp,0xc
10002db1:	push   0xffffffff
10002db3:	push   ebx
10002db4:	lea    esi,[ebp+0x70]
10002db7:	mov    BYTE PTR [ebp-0x4],0x12
10002dbb:	call   0x10004cc2
10002dc0:	push   ebx
10002dc1:	push   0x1
10002dc3:	lea    ecx,[ebp-0x78]
10002dc6:	call   0x100012f4
10002dcb:	push   ebx
10002dcc:	push   0x1
10002dce:	lea    ecx,[ebp-0x5c]
10002dd1:	mov    BYTE PTR [ebp-0x4],0x10
10002dd5:	call   0x100012f4
10002dda:	inc    DWORD PTR [ebp-0x14]
10002ddd:	jmp    0x10002d5b
10002de2:	lea    eax,[ebp-0xb0]
10002de8:	push   eax
10002de9:	call   0x10039310
10002dee:	pop    ecx
10002def:	push   eax
10002df0:	lea    ecx,[ebp-0x94]
10002df6:	mov    BYTE PTR [ebp-0x4],0x13
10002dfa:	call   0x10031180
10002dff:	pop    ecx
10002e00:	mov    esi,eax
10002e02:	push   0x4540545e
10002e07:	push   0x1006ce38
10002e0c:	mov    BYTE PTR [ebp-0x4],0x14
10002e10:	call   0x100042d1
10002e15:	pop    ecx
10002e16:	pop    ecx
10002e17:	push   0x3958624c
10002e1c:	push   eax
10002e1d:	call   0x100042d1
10002e22:	pop    ecx
10002e23:	pop    ecx
10002e24:	push   eax
10002e25:	push   0x7
10002e27:	push   0x1006ce74
10002e2c:	call   0x100042e3
10002e31:	add    esp,0xc
10002e34:	push   eax
10002e35:	lea    ecx,[ebp-0x5c]
10002e38:	call   0x100011d1
10002e3d:	push   esi
10002e3e:	push   eax
10002e3f:	lea    eax,[ebp-0x78]
10002e42:	push   eax
10002e43:	mov    BYTE PTR [ebp-0x4],0x15
10002e47:	call   0x100064fb
10002e4c:	add    esp,0xc
10002e4f:	push   0xffffffff
10002e51:	push   ebx
10002e52:	lea    esi,[ebp+0x70]
10002e55:	mov    BYTE PTR [ebp-0x4],0x16
10002e59:	call   0x10004cc2
10002e5e:	xor    esi,esi
10002e60:	push   ebx
10002e61:	inc    esi
10002e62:	push   esi
10002e63:	lea    ecx,[ebp-0x78]
10002e66:	call   0x100012f4
10002e6b:	push   ebx
10002e6c:	push   esi
10002e6d:	lea    ecx,[ebp-0x5c]
10002e70:	call   0x100012f4
10002e75:	push   ebx
10002e76:	push   esi
10002e77:	lea    ecx,[ebp-0x94]
10002e7d:	call   0x100012f4
10002e82:	push   ebx
10002e83:	push   esi
10002e84:	lea    ecx,[ebp-0xb0]
10002e8a:	mov    BYTE PTR [ebp-0x4],0x10
10002e8e:	call   0x100012f4
10002e93:	call   DWORD PTR ds:0x1007efec
10002e99:	mov    DWORD PTR [ebp-0x18],eax
10002e9c:	mov    eax,ds:0x10080a74
10002ea1:	mov    ecx,0x10080a74
10002ea6:	call   DWORD PTR [eax+0xc]
10002ea9:	add    eax,0x10
10002eac:	mov    DWORD PTR [ebp-0x14],eax
10002eaf:	mov    BYTE PTR [ebp-0x4],0x17
10002eb3:	call   0x10033610
10002eb8:	push   0x1006ce7c
10002ebd:	push   0x4
10002ebf:	push   0x1006cebc
10002ec4:	mov    esi,eax
10002ec6:	call   0x100044a2
10002ecb:	add    esp,0xc
10002ece:	push   esi
10002ecf:	push   eax
10002ed0:	lea    eax,[ebp-0x14]
10002ed3:	call   0x1000646a
10002ed8:	pop    ecx
10002ed9:	pop    ecx
10002eda:	push   0xffffffff
10002edc:	lea    esi,[ebp-0x14]
10002edf:	call   0x1000219e
10002ee4:	mov    edi,eax
10002ee6:	cmp    edi,ebx
10002ee8:	je     0x10002ef9
10002eea:	push   edi
10002eeb:	call   DWORD PTR ds:0x100660c4
10002ef1:	inc    eax
10002ef2:	cmp    eax,0x3fffffff
10002ef7:	jle    0x10002efd
10002ef9:	xor    eax,eax
10002efb:	jmp    0x10002f18
10002efd:	lea    esi,[eax+eax*1]
10002f00:	mov    eax,esi
10002f02:	call   0x1004b990
10002f07:	mov    eax,esp
10002f09:	mov    DWORD PTR [ebp-0x10],esp
10002f0c:	push   DWORD PTR [ebp-0x18]
10002f0f:	push   esi
10002f10:	push   edi
10002f11:	mov    esi,eax
10002f13:	call   0x1000241c
10002f18:	push   eax
10002f19:	lea    ecx,[ebp-0x78]
10002f1c:	call   0x100011d1
10002f21:	mov    esi,eax
10002f23:	push   0x6b27088a
10002f28:	push   0x1006cec8
10002f2d:	mov    BYTE PTR [ebp-0x4],0x18
10002f31:	call   0x100042d1
10002f36:	pop    ecx
10002f37:	pop    ecx
10002f38:	push   0x625ca0f6
10002f3d:	push   eax
10002f3e:	call   0x100042d1
10002f43:	pop    ecx
10002f44:	pop    ecx
10002f45:	push   0x20323fe6
10002f4a:	push   eax
10002f4b:	call   0x100042d1
10002f50:	pop    ecx
10002f51:	pop    ecx
10002f52:	push   0x378ee5c4
10002f57:	push   eax
10002f58:	call   0x100042d1
10002f5d:	pop    ecx
10002f5e:	pop    ecx
10002f5f:	push   0x19fb9962
10002f64:	push   eax
10002f65:	call   0x100042d1
10002f6a:	pop    ecx
10002f6b:	pop    ecx
10002f6c:	push   eax
10002f6d:	push   0x5
10002f6f:	push   0x1006cef8
10002f74:	call   0x100042e3
10002f79:	add    esp,0xc
10002f7c:	push   esi
10002f7d:	push   eax
10002f7e:	lea    eax,[ebp-0xb0]
10002f84:	push   eax
10002f85:	call   0x10006546
10002f8a:	add    esp,0xc
10002f8d:	push   0xffffffff
10002f8f:	push   ebx
10002f90:	lea    esi,[ebp+0x70]
10002f93:	mov    BYTE PTR [ebp-0x4],0x19
10002f97:	call   0x10004cc2
10002f9c:	push   ebx
10002f9d:	push   0x1
10002f9f:	lea    ecx,[ebp-0xb0]
10002fa5:	call   0x100012f4
10002faa:	push   ebx
10002fab:	push   0x1
10002fad:	lea    ecx,[ebp-0x78]
10002fb0:	call   0x100012f4
10002fb5:	mov    BYTE PTR [ebp-0x4],0x10
10002fb9:	mov    eax,DWORD PTR [ebp-0x14]
10002fbc:	add    eax,0xfffffff0
10002fbf:	call   0x10002060
10002fc4:	lea    ecx,[ebp+0x54]
10002fc7:	call   0x10018612
10002fcc:	mov    BYTE PTR [ebp-0x4],0x1a
10002fd0:	cmp    DWORD PTR [ebp+0x6c],0x10
10002fd4:	mov    eax,DWORD PTR [ebp+0x58]
10002fd7:	jae    0x10002fdc
10002fd9:	lea    eax,[ebp+0x58]
10002fdc:	push   eax
10002fdd:	call   0x1000205f
10002fe2:	pop    ecx
10002fe3:	push   DWORD PTR ds:0x10080d8c
10002fe9:	lea    ecx,[ebp-0x94]
10002fef:	mov    DWORD PTR [ebp-0x14],ebx
10002ff2:	call   0x100011d1
10002ff7:	push   0xffffffff
10002ff9:	lea    eax,[ebp-0x14]
10002ffc:	push   eax
10002ffd:	lea    eax,[ebp+0x70]
10003000:	push   eax
10003001:	lea    eax,[ebp+0x54]
10003004:	push   eax
10003005:	lea    eax,[ebp-0x18]
10003008:	push   eax
10003009:	lea    edx,[ebp-0x94]
1000300f:	mov    BYTE PTR [ebp-0x4],0x1b
10003013:	call   0x10031060
10003018:	mov    ecx,DWORD PTR [eax]
1000301a:	mov    edi,ecx
1000301c:	add    esp,0x14
1000301f:	mov    DWORD PTR [eax],ebx
10003021:	mov    DWORD PTR [ebp-0x1c],edi
10003024:	push   DWORD PTR [ebp-0x18]
10003027:	call   0x100430d2
1000302c:	pop    ecx
1000302d:	push   ebx
1000302e:	push   0x1
10003030:	lea    ecx,[ebp-0x94]
10003036:	mov    BYTE PTR [ebp-0x4],0x1d
1000303a:	call   0x100012f4
1000303f:	cmp    edi,ebx
10003041:	jne    0x10003089
10003043:	call   0x10018591
10003048:	push   ebx
10003049:	call   0x100430d2
1000304e:	pop    ecx
1000304f:	xor    edi,edi
10003051:	push   ebx
10003052:	inc    edi
10003053:	push   edi
10003054:	lea    ecx,[ebp+0x54]
10003057:	call   0x100012f4
1000305c:	lea    esi,[ebp-0x40]
1000305f:	call   0x1000499a
10003064:	push   ebx
10003065:	push   edi
10003066:	lea    ecx,[ebp+0x38]
10003069:	call   0x100012f4
1000306e:	push   ebx
1000306f:	push   edi
10003070:	lea    ecx,[ebp+0x0]
10003073:	call   0x100012f4
10003078:	push   ebx
10003079:	push   edi
1000307a:	lea    ecx,[ebp+0x1c]
1000307d:	call   0x100012f4
10003082:	push   ebx
10003083:	push   edi
10003084:	jmp    0x10003183
10003089:	mov    eax,DWORD PTR [ebp-0x14]
1000308c:	mov    DWORD PTR [ebp-0x2c],eax
1000308f:	lea    eax,[ebp-0x30]
10003092:	push   eax
10003093:	mov    DWORD PTR [ebp-0x30],ebx
10003096:	mov    DWORD PTR [ebp-0x28],edi
10003099:	call   0x100379d0
1000309e:	sub    eax,ebx
100030a0:	je     0x10003119
100030a2:	dec    eax
100030a3:	je     0x100030f6
100030a5:	dec    eax
100030a6:	je     0x100030db
100030a8:	dec    eax
100030a9:	je     0x100030bd
100030ab:	call   0x1000205f
100030b0:	push   0x5
100030b2:	call   0x10037b70
100030b7:	pop    ecx
100030b8:	jmp    0x10003146
100030bd:	lea    eax,[ebp-0x30]
100030c0:	push   eax
100030c1:	lea    esi,[ebp-0xb0]
100030c7:	call   0x10037690
100030cc:	push   eax
100030cd:	mov    BYTE PTR [ebp-0x4],0x21
100030d1:	call   0x10003e26
100030d6:	pop    ecx
100030d7:	mov    ecx,esi
100030d9:	jmp    0x1000310f
100030db:	lea    eax,[ebp-0x30]
100030de:	push   eax
100030df:	lea    esi,[ebp-0x78]
100030e2:	call   0x10037690
100030e7:	push   eax
100030e8:	mov    BYTE PTR [ebp-0x4],0x20
100030ec:	call   0x10003bf1
100030f1:	pop    ecx
100030f2:	mov    ecx,esi
100030f4:	jmp    0x1000310f
100030f6:	lea    eax,[ebp-0x30]
100030f9:	push   eax
100030fa:	lea    esi,[ebp-0x5c]
100030fd:	call   0x10037690
10003102:	push   eax
10003103:	mov    BYTE PTR [ebp-0x4],0x1f
10003107:	call   0x10003a70
1000310c:	pop    ecx
1000310d:	mov    ecx,esi
1000310f:	push   ebx
10003110:	push   0x1
10003112:	call   0x100012f4
10003117:	jmp    0x10003146
10003119:	call   0x1000205f
1000311e:	lea    eax,[ebp-0x14]
10003121:	push   0x1
10003123:	push   eax
10003124:	call   0x10002892
10003129:	pop    ecx
1000312a:	pop    ecx
1000312b:	mov    BYTE PTR [ebp-0x4],0x1e
1000312f:	mov    esi,DWORD PTR [eax]
10003131:	lea    eax,[ebp-0x30]
10003134:	call   0x100031b3
10003139:	lea    eax,[ebp-0x14]
1000313c:	call   0x100042aa
10003141:	call   0x1000205f
10003146:	push   edi
10003147:	call   0x100430d2
1000314c:	pop    ecx
1000314d:	push   ebx
1000314e:	push   0x1
10003150:	lea    ecx,[ebp+0x54]
10003153:	call   0x100012f4
10003158:	lea    esi,[ebp-0x40]
1000315b:	call   0x1000499a
10003160:	xor    esi,esi
10003162:	push   ebx
10003163:	inc    esi
10003164:	push   esi
10003165:	lea    ecx,[ebp+0x38]
10003168:	call   0x100012f4
1000316d:	push   ebx
1000316e:	push   esi
1000316f:	lea    ecx,[ebp+0x0]
10003172:	call   0x100012f4
10003177:	push   ebx
10003178:	push   esi
10003179:	lea    ecx,[ebp+0x1c]
1000317c:	call   0x100012f4
10003181:	push   ebx
10003182:	push   esi
10003183:	lea    ecx,[ebp+0x70]
10003186:	call   0x100012f4
1000318b:	jmp    0x100029ee
10003190:	call   0x10018591
10003195:	mov    eax,0x1000319b
1000319a:	ret    
1000319b:	jmp    0x100029ee
100031a0:	push   0x4
100031a2:	call   0x10037b70
100031a7:	pop    ecx
100031a8:	call   0x10018591
100031ad:	mov    eax,0x100029ee
100031b2:	ret    
100031b3:	push   ebp
100031b4:	mov    ebp,esp
100031b6:	and    esp,0xfffffff8
100031b9:	push   ecx
100031ba:	push   ecx
100031bb:	mov    ecx,DWORD PTR [esi]
100031bd:	push   ebx
100031be:	push   edi
100031bf:	mov    ebx,eax
100031c1:	call   0x10034ed0
100031c6:	and    DWORD PTR [esp+0x8],0x0
100031cb:	xor    eax,eax
100031cd:	lea    edi,[esp+0xc]
100031d1:	stos   DWORD PTR es:[edi],eax
100031d2:	lea    eax,[esp+0x8]
100031d6:	push   eax
100031d7:	push   DWORD PTR [esi]
100031d9:	xor    ecx,ecx
100031db:	inc    ecx
100031dc:	call   0x10035d90
100031e1:	push   esi
100031e2:	mov    ecx,ebx
100031e4:	call   0x1000325b
100031e9:	push   esi
100031ea:	mov    ecx,ebx
100031ec:	call   0x10003722
100031f1:	push   esi
100031f2:	call   0x10003461
100031f7:	call   0x10003560
100031fc:	push   esi
100031fd:	call   0x10003690
10003202:	push   ebx
10003203:	call   0x100379d0
10003208:	push   ebx
10003209:	mov    edi,eax
1000320b:	call   0x100379d0
10003210:	push   edi
10003211:	push   DWORD PTR [esi]
10003213:	mov    ecx,eax
10003215:	call   0x10035ec0
1000321a:	push   ebx
1000321b:	call   0x100379d0
10003220:	push   ebx
10003221:	mov    edi,eax
10003223:	call   0x100379d0
10003228:	push   edi
10003229:	push   DWORD PTR [esi]
1000322b:	mov    ecx,eax
1000322d:	call   0x100360d0
10003232:	call   0x1002fb70
10003237:	mov    DWORD PTR [esp+0x8],eax
1000323b:	lea    eax,[esp+0x8]
1000323f:	push   eax
10003240:	push   DWORD PTR [esi]
10003242:	xor    ecx,ecx
10003244:	inc    ecx
10003245:	mov    DWORD PTR [esp+0x14],edx
10003249:	call   0x10035d90
1000324e:	mov    ecx,ebx
10003250:	call   0x100039e2
10003255:	pop    edi
10003256:	pop    ebx
10003257:	mov    esp,ebp
10003259:	pop    ebp
1000325a:	ret    
1000325b:	push   0x140
10003260:	mov    eax,0x10063304
10003265:	call   0x10059cde
1000326a:	mov    eax,DWORD PTR [ebp+0x8]
1000326d:	mov    edi,ecx
1000326f:	push   edi
10003270:	mov    DWORD PTR [ebp-0x9c],eax
10003276:	mov    DWORD PTR [ebp-0x98],edi
1000327c:	call   0x100379d0
10003281:	xor    ebx,ebx
10003283:	cmp    eax,ebx
10003285:	je     0x10003429
1000328b:	mov    DWORD PTR [ebp-0x90],eax
10003291:	jmp    0x1000329b
10003293:	mov    edi,DWORD PTR [ebp-0x98]
10003299:	xor    ebx,ebx
1000329b:	push   edi
1000329c:	lea    esi,[ebp-0xc0]
100032a2:	call   0x10037690
100032a7:	push   eax
100032a8:	lea    esi,[ebp-0x30]
100032ab:	mov    DWORD PTR [ebp-0x4],ebx
100032ae:	call   0x1002fba0
100032b3:	pop    ecx
100032b4:	push   ebx
100032b5:	push   0x1
100032b7:	lea    ecx,[ebp-0xc0]
100032bd:	mov    BYTE PTR [ebp-0x4],0x2
100032c1:	call   0x100012f4
100032c6:	push   edi
100032c7:	lea    esi,[ebp-0x4c]
100032ca:	call   0x10037690
100032cf:	push   edi
100032d0:	lea    esi,[ebp-0x68]
100032d3:	mov    BYTE PTR [ebp-0x4],0x3
100032d7:	call   0x10037690
100032dc:	push   edi
100032dd:	lea    esi,[ebp-0x84]
100032e3:	mov    BYTE PTR [ebp-0x4],0x4
100032e7:	call   0x10037690
100032ec:	push   edi
100032ed:	mov    BYTE PTR [ebp-0x4],0x5
100032f1:	call   0x100379d0
100032f6:	push   edi
100032f7:	mov    DWORD PTR [ebp-0x94],eax
100032fd:	call   0x100379d0
10003302:	push   ebx
10003303:	cdq    
10003304:	mov    esi,0x2710
10003309:	push   esi
1000330a:	push   edx
1000330b:	push   eax
1000330c:	call   0x1004f6a0
10003311:	push   edi
10003312:	mov    DWORD PTR [ebp-0xa4],eax
10003318:	mov    DWORD PTR [ebp-0xa0],edx
1000331e:	call   0x100379d0
10003323:	push   ebx
10003324:	cdq    
10003325:	push   esi
10003326:	push   edx
10003327:	push   eax
10003328:	call   0x1004f6a0
1000332d:	mov    DWORD PTR [ebp-0x8c],eax
10003333:	mov    DWORD PTR [ebp-0x88],edx
10003339:	call   0x1002fb70
1000333e:	add    DWORD PTR [ebp-0x8c],eax
10003344:	mov    eax,DWORD PTR [ebp-0x94]
1000334a:	lea    ecx,[ebp-0x30]
1000334d:	adc    DWORD PTR [ebp-0x88],edx
10003353:	shr    eax,0x2
10003356:	test   al,0x1
10003358:	lea    eax,[ebp-0xc0]
1000335e:	push   eax
1000335f:	je     0x1000336d
10003361:	call   0x10030c80
10003366:	pop    ecx
10003367:	mov    BYTE PTR [ebp-0x4],0x6
1000336b:	jmp    0x10003377
1000336d:	call   0x1002fce0
10003372:	pop    ecx
10003373:	mov    BYTE PTR [ebp-0x4],0x7
10003377:	push   0xffffffff
10003379:	push   ebx
1000337a:	push   eax
1000337b:	lea    ecx,[ebp-0x30]
1000337e:	call   0x10001245
10003383:	push   ebx
10003384:	push   0x1
10003386:	lea    ecx,[ebp-0xc0]
1000338c:	mov    BYTE PTR [ebp-0x4],0x5
10003390:	call   0x100012f4
10003395:	push   DWORD PTR [ebp-0x94]
1000339b:	lea    eax,[ebp-0x84]
100033a1:	push   eax
100033a2:	lea    eax,[ebp-0x68]
100033a5:	push   eax
100033a6:	lea    eax,[ebp-0x4c]
100033a9:	push   eax
100033aa:	lea    eax,[ebp-0x30]
100033ad:	push   eax
100033ae:	lea    eax,[ebp-0x14c]
100033b4:	push   eax
100033b5:	lea    edi,[ebp-0x8c]
100033bb:	lea    ebx,[ebp-0xa4]
100033c1:	call   0x1000279c
100033c6:	mov    ecx,DWORD PTR [ebp-0x9c]
100033cc:	mov    BYTE PTR [ebp-0x4],0x8
100033d0:	mov    edx,DWORD PTR [ecx]
100033d2:	lea    ecx,[ebp-0x30]
100033d5:	push   ecx
100033d6:	push   edx
100033d7:	mov    ecx,eax
100033d9:	call   0x10034fe0
100033de:	lea    esi,[ebp-0x14c]
100033e4:	call   0x10003431
100033e9:	xor    edi,edi
100033eb:	xor    esi,esi
100033ed:	push   edi
100033ee:	inc    esi
100033ef:	push   esi
100033f0:	lea    ecx,[ebp-0x84]
100033f6:	call   0x100012f4
100033fb:	push   edi
100033fc:	push   esi
100033fd:	lea    ecx,[ebp-0x68]
10003400:	call   0x100012f4
10003405:	push   edi
10003406:	push   esi
10003407:	lea    ecx,[ebp-0x4c]
1000340a:	call   0x100012f4
1000340f:	or     DWORD PTR [ebp-0x4],0xffffffff
10003413:	push   edi
10003414:	push   esi
10003415:	lea    ecx,[ebp-0x30]
10003418:	call   0x100012f4
1000341d:	dec    DWORD PTR [ebp-0x90]
10003423:	jne    0x10003293
10003429:	call   0x10059d61
1000342e:	ret    0x4
10003431:	push   0x0
10003433:	push   0x1
10003435:	lea    ecx,[esi+0x54]
10003438:	call   0x100012f4
1000343d:	push   0x0
1000343f:	push   0x1
10003441:	lea    ecx,[esi+0x38]
10003444:	call   0x100012f4
10003449:	push   0x0
1000344b:	push   0x1
1000344d:	lea    ecx,[esi+0x1c]
10003450:	call   0x100012f4
10003455:	push   0x0
10003457:	push   0x1
10003459:	mov    ecx,esi
1000345b:	call   0x100012f4
10003460:	ret    
10003461:	push   0x50
10003463:	mov    eax,0x10063290
10003468:	call   0x10059cde
1000346d:	mov    eax,DWORD PTR [ebp+0x8]
10003470:	mov    DWORD PTR [ebp-0x34],eax
10003473:	mov    eax,DWORD PTR [ebx]
10003475:	push   0x4
10003477:	pop    edi
10003478:	mov    DWORD PTR [ebp-0x3c],ebx
1000347b:	mov    DWORD PTR [ebp-0x38],eax
1000347e:	and    DWORD PTR [ebp-0x4],0x0
10003482:	push   ebx
10003483:	call   0x100379d0
10003488:	test   eax,eax
1000348a:	je     0x1000351c
10003490:	mov    DWORD PTR [ebp-0x30],eax
10003493:	push   ebx
10003494:	lea    esi,[ebp-0x2c]
10003497:	call   0x10037690
1000349c:	mov    BYTE PTR [ebp-0x4],0x1
100034a0:	mov    eax,DWORD PTR [ebp-0x18]
100034a3:	push   ebx
100034a4:	lea    esi,[ebp-0x58]
100034a7:	lea    edi,[edi+eax*1+0x1]
100034ab:	call   0x10037690
100034b0:	push   0xffffffff
100034b2:	push   0x0
100034b4:	push   eax
100034b5:	lea    ecx,[ebp-0x2c]
100034b8:	mov    BYTE PTR [ebp-0x4],0x2
100034bc:	call   0x10001245
100034c1:	push   0x0
100034c3:	push   0x1
100034c5:	mov    ecx,esi
100034c7:	mov    BYTE PTR [ebp-0x4],0x1
100034cb:	call   0x100012f4
100034d0:	mov    eax,DWORD PTR [ebp-0x18]
100034d3:	push   ebx
100034d4:	lea    esi,[ebp-0x58]
100034d7:	lea    edi,[edi+eax*1+0x1]
100034db:	call   0x10037690
100034e0:	push   0xffffffff
100034e2:	push   0x0
100034e4:	push   eax
100034e5:	lea    ecx,[ebp-0x2c]
100034e8:	mov    BYTE PTR [ebp-0x4],0x3
100034ec:	call   0x10001245
100034f1:	push   0x0
100034f3:	push   0x1
100034f5:	mov    ecx,esi
100034f7:	call   0x100012f4
100034fc:	mov    eax,DWORD PTR [ebp-0x18]
100034ff:	push   0x0
10003501:	push   0x1
10003503:	lea    ecx,[ebp-0x2c]
10003506:	lea    edi,[edi+eax*1+0x1]
1000350a:	mov    BYTE PTR [ebp-0x4],0x0
1000350e:	call   0x100012f4
10003513:	dec    DWORD PTR [ebp-0x30]
10003516:	jne    0x10003493
1000351c:	or     DWORD PTR [ebp-0x4],0xffffffff
10003520:	mov    eax,DWORD PTR [ebp-0x38]
10003523:	push   edi
10003524:	mov    DWORD PTR [ebx],eax
10003526:	call   0x100439b6
1000352b:	pop    ecx
1000352c:	mov    DWORD PTR [ebp-0x30],eax
1000352f:	push   eax
10003530:	mov    esi,ebx
10003532:	mov    DWORD PTR [ebp-0x4],0x4
10003539:	call   0x10037ae0
1000353e:	push   DWORD PTR [ebp-0x30]
10003541:	mov    eax,DWORD PTR [ebp-0x34]
10003544:	push   0x1
10003546:	push   DWORD PTR [eax]
10003548:	mov    ecx,edi
1000354a:	call   0x10036b70
1000354f:	push   DWORD PTR [ebp-0x30]
10003552:	call   0x100430d2
10003557:	pop    ecx
10003558:	call   0x10059d61
1000355d:	ret    0x4
10003560:	push   0x7c
10003562:	mov    eax,0x10063fb7
10003567:	call   0x10059cde
1000356c:	push   ebx
1000356d:	call   0x100379d0
10003572:	xor    edi,edi
10003574:	mov    esi,eax
10003576:	mov    DWORD PTR [ebp-0x54],esi
10003579:	mov    DWORD PTR [ebp-0x60],edi
1000357c:	mov    DWORD PTR [ebp-0x5c],edi
1000357f:	mov    DWORD PTR [ebp-0x58],edi
10003582:	lea    ecx,[ebp-0x30]
10003585:	mov    DWORD PTR [ebp-0x4],edi
10003588:	call   0x10018612
1000358d:	cmp    esi,edi
1000358f:	mov    BYTE PTR [ebp-0x4],0x1
10003593:	jle    0x1000361a
10003599:	mov    DWORD PTR [ebp-0x50],esi
1000359c:	push   ebx
1000359d:	lea    esi,[ebp-0x4c]
100035a0:	call   0x10037690
100035a5:	push   ebx
100035a6:	mov    BYTE PTR [ebp-0x4],0x2
100035aa:	call   0x100379d0
100035af:	push   eax
100035b0:	sub    esp,0x1c
100035b3:	mov    eax,esi
100035b5:	mov    ecx,esp
100035b7:	mov    DWORD PTR [ebp-0x68],esp
100035ba:	push   eax
100035bb:	call   0x100011ab
100035c0:	lea    ecx,[ebp-0x88]
100035c6:	call   0x1000280e
100035cb:	push   eax
100035cc:	lea    esi,[ebp-0x64]
100035cf:	mov    BYTE PTR [ebp-0x4],0x3
100035d3:	call   0x1000424b
100035d8:	push   edi
100035d9:	push   0x1
100035db:	lea    ecx,[ebp-0x88]
100035e1:	mov    BYTE PTR [ebp-0x4],0x2
100035e5:	call   0x100012f4
100035ea:	lea    ecx,[ebp-0x30]
100035ed:	lea    eax,[ebp-0x4c]
100035f0:	call   0x10006591
100035f5:	test   al,al
100035f7:	je     0x10003606
100035f9:	push   0x1006cd08
100035fe:	lea    ecx,[ebp-0x30]
10003601:	call   0x100012d7
10003606:	push   edi
10003607:	push   0x1
10003609:	lea    ecx,[ebp-0x4c]
1000360c:	mov    BYTE PTR [ebp-0x4],0x1
10003610:	call   0x100012f4
10003615:	dec    DWORD PTR [ebp-0x50]
10003618:	jne    0x1000359c
1000361a:	cmp    DWORD PTR [ebp-0x54],edi
1000361d:	je     0x10003660
1000361f:	push   0x3e8
10003624:	push   DWORD PTR ds:0x10080ec8
1000362a:	call   DWORD PTR ds:0x10066084
10003630:	test   eax,eax
10003632:	jne    0x10003660
10003634:	call   0x10018865
10003639:	lea    eax,[ebp-0x64]
1000363c:	mov    ecx,0x10080eb8
10003641:	call   0x10018d54
10003646:	movzx  eax,BYTE PTR ds:0x1007f6b0
1000364d:	push   eax
1000364e:	call   0x10018b61
10003653:	pop    ecx
10003654:	push   DWORD PTR ds:0x10080ec8
1000365a:	call   DWORD PTR ds:0x10066094
10003660:	push   0x1006cd08
10003665:	lea    esi,[ebp-0x30]
10003668:	call   0x100065b3
1000366d:	test   al,al
1000366f:	pop    ecx
10003670:	jne    0x10003677
10003672:	call   0x10018591
10003677:	push   edi
10003678:	push   0x1
1000367a:	lea    ecx,[ebp-0x30]
1000367d:	call   0x100012f4
10003682:	lea    esi,[ebp-0x64]
10003685:	call   0x1000a2fa
1000368a:	call   0x10059d61
1000368f:	ret    
10003690:	push   0x30
10003692:	mov    eax,0x10063243
10003697:	call   0x10059cde
1000369c:	mov    eax,DWORD PTR [ebp+0x8]
1000369f:	mov    DWORD PTR [ebp-0x34],eax
100036a2:	mov    eax,DWORD PTR [ebx]
100036a4:	push   0x4
100036a6:	pop    edi
100036a7:	mov    DWORD PTR [ebp-0x3c],ebx
100036aa:	mov    DWORD PTR [ebp-0x38],eax
100036ad:	and    DWORD PTR [ebp-0x4],0x0
100036b1:	push   ebx
100036b2:	call   0x100379d0
100036b7:	test   eax,eax
100036b9:	je     0x100036de
100036bb:	mov    DWORD PTR [ebp-0x30],eax
100036be:	push   ebx
100036bf:	lea    esi,[ebp-0x2c]
100036c2:	call   0x10037690
100036c7:	mov    eax,DWORD PTR [ebp-0x18]
100036ca:	push   0x0
100036cc:	push   0x1
100036ce:	mov    ecx,esi
100036d0:	lea    edi,[edi+eax*1+0x1]
100036d4:	call   0x100012f4
100036d9:	dec    DWORD PTR [ebp-0x30]
100036dc:	jne    0x100036be
100036de:	or     DWORD PTR [ebp-0x4],0xffffffff
100036e2:	mov    eax,DWORD PTR [ebp-0x38]
100036e5:	push   edi
100036e6:	mov    DWORD PTR [ebx],eax
100036e8:	call   0x100439b6
100036ed:	pop    ecx
100036ee:	mov    DWORD PTR [ebp-0x30],eax
100036f1:	push   eax
100036f2:	mov    esi,ebx
100036f4:	mov    DWORD PTR [ebp-0x4],0x1
100036fb:	call   0x10037ae0
10003700:	push   DWORD PTR [ebp-0x30]
10003703:	mov    eax,DWORD PTR [ebp-0x34]
10003706:	push   0x3
10003708:	push   DWORD PTR [eax]
1000370a:	mov    ecx,edi
1000370c:	call   0x10036b70
10003711:	push   DWORD PTR [ebp-0x30]
10003714:	call   0x100430d2
10003719:	pop    ecx
1000371a:	call   0x10059d61
1000371f:	ret    0x4
10003722:	push   0x58
10003724:	mov    eax,0x1006320e
10003729:	call   0x10059cde
1000372e:	mov    eax,DWORD PTR [ebp+0x8]
10003731:	mov    edi,ecx
10003733:	push   edi
10003734:	lea    esi,[ebp-0x2c]
10003737:	mov    DWORD PTR [ebp-0x34],eax
1000373a:	call   0x10037690
1000373f:	xor    ebx,ebx
10003741:	push   edi
10003742:	mov    DWORD PTR [ebp-0x4],ebx
10003745:	call   0x100379d0
1000374a:	mov    esi,eax
1000374c:	push   0x34
1000374e:	mov    DWORD PTR [ebp-0x38],esi
10003751:	call   0x100436de
10003756:	pop    ecx
10003757:	mov    DWORD PTR [ebp-0x30],eax
1000375a:	cmp    eax,ebx
1000375c:	mov    BYTE PTR [ebp-0x4],0x1
10003760:	je     0x1000377e
10003762:	lea    ecx,[ebp-0x44]
10003765:	push   ecx
10003766:	lea    ecx,[ebp-0x2c]
10003769:	push   ecx
1000376a:	push   eax
1000376b:	mov    DWORD PTR [ebp-0x44],ebx
1000376e:	mov    DWORD PTR [ebp-0x40],ebx
10003771:	mov    DWORD PTR [ebp-0x3c],esi
10003774:	call   0x10002857
10003779:	mov    DWORD PTR [ebp-0x30],eax
1000377c:	jmp    0x10003783
1000377e:	mov    DWORD PTR [ebp-0x30],ebx
10003781:	mov    eax,ebx
10003783:	mov    DWORD PTR [ebp-0x48],eax
10003786:	mov    BYTE PTR [ebp-0x4],0x2
1000378a:	mov    eax,DWORD PTR [eax+0x30]
1000378d:	mov    edi,0x1006cd08
10003792:	push   edi
10003793:	mov    esi,eax
10003795:	call   0x100065b3
1000379a:	test   al,al
1000379c:	pop    ecx
1000379d:	je     0x100037b2
1000379f:	mov    eax,DWORD PTR [ebp-0x34]
100037a2:	push   DWORD PTR [ebp-0x38]
100037a5:	mov    eax,DWORD PTR [eax]
100037a7:	push   eax
100037a8:	lea    ecx,[ebp-0x2c]
100037ab:	call   0x10036410
100037b0:	jmp    0x100037d9
100037b2:	push   edi
100037b3:	lea    ecx,[ebp-0x64]
100037b6:	call   0x100011d1
100037bb:	mov    eax,DWORD PTR [ebp-0x34]
100037be:	mov    BYTE PTR [ebp-0x4],0x3
100037c2:	mov    eax,DWORD PTR [eax]
100037c4:	push   ebx
100037c5:	push   eax
100037c6:	lea    ecx,[ebp-0x64]
100037c9:	call   0x10036410
100037ce:	push   ebx
100037cf:	push   0x1
100037d1:	lea    ecx,[ebp-0x64]
100037d4:	call   0x100012f4
100037d9:	mov    BYTE PTR [ebp-0x4],bl
100037dc:	push   DWORD PTR [ebp-0x30]
100037df:	call   0x1003a170
100037e4:	push   DWORD PTR [ebp-0x30]
100037e7:	call   0x100430d2
100037ec:	pop    ecx
100037ed:	push   ebx
100037ee:	push   0x1
100037f0:	lea    ecx,[ebp-0x2c]
100037f3:	call   0x100012f4
100037f8:	call   0x10059d61
100037fd:	ret    0x4
10003800:	push   0x18
10003802:	mov    eax,0x1006093f
10003807:	call   0x10059c75
1000380c:	mov    eax,ds:0x10080a74
10003811:	mov    ebx,0x10080a74
10003816:	mov    ecx,ebx
10003818:	call   DWORD PTR [eax+0xc]
1000381b:	add    eax,0x10
1000381e:	mov    DWORD PTR [ebp-0x10],eax
10003821:	and    DWORD PTR [ebp-0x4],0x0
10003825:	mov    edi,0x104
1000382a:	push   edi
1000382b:	lea    esi,[ebp-0x10]
1000382e:	call   0x1000219e
10003833:	push   eax
10003834:	push   edi
10003835:	call   DWORD PTR ds:0x100660c8
1000383b:	test   eax,eax
1000383d:	je     0x1000396c
10003843:	cmp    eax,edi
10003845:	ja     0x1000396c
1000384b:	cmp    DWORD PTR [ebp-0x10],0x0
1000384f:	jne    0x10003855
10003851:	xor    eax,eax
10003853:	jmp    0x1000385e
10003855:	push   DWORD PTR [ebp-0x10]
10003858:	call   0x10043933
1000385d:	pop    ecx
1000385e:	lea    edx,[ebp-0x10]
10003861:	call   0x10002229
10003866:	mov    eax,ds:0x10080a74
1000386b:	mov    ecx,ebx
1000386d:	call   DWORD PTR [eax+0xc]
10003870:	add    eax,0x10
10003873:	mov    DWORD PTR [ebp-0x14],eax
10003876:	push   edi
10003877:	lea    esi,[ebp-0x14]
1000387a:	mov    BYTE PTR [ebp-0x4],0x1
1000387e:	call   0x1000219e
10003883:	mov    esi,DWORD PTR [ebp-0x10]
10003886:	push   eax
10003887:	xor    ebx,ebx
10003889:	push   ebx
1000388a:	push   0x1006cf00
1000388f:	push   esi
10003890:	call   DWORD PTR ds:0x1006609c
10003896:	test   eax,eax
10003898:	jne    0x100038ad
1000389a:	mov    eax,DWORD PTR [ebp-0x14]
1000389d:	add    eax,0xfffffff0
100038a0:	call   0x10002060
100038a5:	lea    eax,[esi-0x10]
100038a8:	jmp    0x10003972
100038ad:	mov    esi,DWORD PTR [ebp-0x14]
100038b0:	cmp    esi,ebx
100038b2:	jne    0x100038b8
100038b4:	xor    eax,eax
100038b6:	jmp    0x100038bf
100038b8:	push   esi
100038b9:	call   0x10043933
100038be:	pop    ecx
100038bf:	lea    edx,[ebp-0x14]
100038c2:	call   0x10002229
100038c7:	push   esi
100038c8:	call   DWORD PTR ds:0x100660d0
100038ce:	push   ebx
100038cf:	push   esi
100038d0:	call   DWORD PTR ds:0x100660b0
100038d6:	push   0x1006cf04
100038db:	lea    edi,[ebp-0x1c]
100038de:	call   0x1000244f
100038e3:	mov    eax,edi
100038e5:	push   eax
100038e6:	lea    eax,[ebp-0x20]
100038e9:	push   esi
100038ea:	push   eax
100038eb:	mov    BYTE PTR [ebp-0x4],0x2
100038ef:	call   0x1000254b
100038f4:	add    esp,0xc
100038f7:	mov    BYTE PTR [ebp-0x4],0x3
100038fb:	mov    eax,DWORD PTR [eax]
100038fd:	cmp    eax,ebx
100038ff:	je     0x10003905
10003901:	mov    eax,DWORD PTR [eax]
10003903:	jmp    0x10003907
10003905:	xor    eax,eax
10003907:	mov    ecx,DWORD PTR [ebp+0x10]
1000390a:	push   eax
1000390b:	lea    eax,[ebp-0x18]
1000390e:	push   eax
1000390f:	call   0x1000417c
10003914:	pop    ecx
10003915:	pop    ecx
10003916:	lea    edi,[ebp-0x20]
10003919:	call   0x100025aa
1000391e:	lea    edi,[ebp-0x1c]
10003921:	call   0x100025aa
10003926:	push   ebx
10003927:	push   0x80
1000392c:	push   0x2
1000392e:	push   ebx
1000392f:	push   ebx
10003930:	push   0x40000000
10003935:	push   DWORD PTR [ebp-0x18]
10003938:	call   DWORD PTR ds:0x100660c0
1000393e:	mov    edi,eax
10003940:	mov    DWORD PTR [ebp-0x1c],edi
10003943:	cmp    edi,0xffffffff
10003946:	mov    BYTE PTR [ebp-0x4],0x7
1000394a:	jne    0x1000397f
1000394c:	call   DWORD PTR ds:0x100660cc
10003952:	push   edi
10003953:	call   DWORD PTR ds:0x10066070
10003959:	mov    eax,DWORD PTR [ebp-0x18]
1000395c:	add    eax,0xfffffff0
1000395f:	call   0x10002060
10003964:	lea    eax,[esi-0x10]
10003967:	call   0x10002060
1000396c:	mov    eax,DWORD PTR [ebp-0x10]
1000396f:	add    eax,0xfffffff0
10003972:	call   0x10002060
10003977:	xor    al,al
10003979:	call   0x10059d4d
1000397e:	ret    
1000397f:	push   ebx
10003980:	lea    eax,[ebp-0x24]
10003983:	push   eax
10003984:	push   DWORD PTR [ebp+0xc]
10003987:	push   DWORD PTR [ebp+0x8]
1000398a:	push   edi
1000398b:	call   DWORD PTR ds:0x100660b4
10003991:	test   eax,eax
10003993:	jne    0x1000399c
10003995:	cmp    edi,ebx
10003997:	je     0x10003959
10003999:	push   edi
1000399a:	jmp    0x10003953
1000399c:	mov    edi,DWORD PTR [ebp+0x18]
1000399f:	lea    eax,[ebp-0x18]
100039a2:	call   0x1000413b
100039a7:	mov    edi,DWORD PTR [ebp+0x14]
100039aa:	lea    eax,[ebp-0x14]
100039ad:	call   0x1000413b
100039b2:	cmp    DWORD PTR [ebp-0x1c],ebx
100039b5:	je     0x100039c0
100039b7:	push   DWORD PTR [ebp-0x1c]
100039ba:	call   DWORD PTR ds:0x10066070
100039c0:	mov    eax,DWORD PTR [ebp-0x18]
100039c3:	add    eax,0xfffffff0
100039c6:	call   0x10002060
100039cb:	lea    eax,[esi-0x10]
100039ce:	call   0x10002060
100039d3:	mov    eax,DWORD PTR [ebp-0x10]
100039d6:	add    eax,0xfffffff0
100039d9:	call   0x10002060
100039de:	mov    al,0x1
100039e0:	jmp    0x10003979
100039e2:	push   0x24
100039e4:	mov    eax,0x1006394b
100039e9:	call   0x10059d14
100039ee:	and    DWORD PTR [ebp-0x4],0x0
100039f2:	mov    esi,ecx
100039f4:	push   esi
100039f5:	call   0x100379d0
100039fa:	lea    edi,[ebp-0x30]
100039fd:	mov    ebx,eax
100039ff:	call   0x100377c0
10003a04:	mov    eax,ebx
10003a06:	dec    eax
10003a07:	mov    BYTE PTR [ebp-0x4],0x1
10003a0b:	je     0x10003a41
10003a0d:	dec    eax
10003a0e:	je     0x10003a2a
10003a10:	dec    eax
10003a11:	jne    0x10003a58
10003a13:	cmp    DWORD PTR [ebp-0x18],0x10
10003a17:	mov    eax,DWORD PTR [ebp-0x2c]
10003a1a:	jae    0x10003a1f
10003a1c:	lea    eax,[ebp-0x2c]
10003a1f:	push   DWORD PTR [ebp-0x1c]
10003a22:	push   eax
10003a23:	call   0x10003eb2
10003a28:	jmp    0x10003a56
10003a2a:	cmp    DWORD PTR [ebp-0x18],0x10
10003a2e:	mov    eax,DWORD PTR [ebp-0x2c]
10003a31:	jae    0x10003a36
10003a33:	lea    eax,[ebp-0x2c]
10003a36:	push   DWORD PTR [ebp-0x1c]
10003a39:	push   eax
10003a3a:	call   0x10003c7d
10003a3f:	jmp    0x10003a56
10003a41:	cmp    DWORD PTR [ebp-0x18],0x10
10003a45:	mov    eax,DWORD PTR [ebp-0x2c]
10003a48:	jae    0x10003a4d
10003a4a:	lea    eax,[ebp-0x2c]
10003a4d:	push   DWORD PTR [ebp-0x1c]
10003a50:	push   eax
10003a51:	call   0x10003afc
10003a56:	pop    ecx
10003a57:	pop    ecx
10003a58:	push   0x0
10003a5a:	push   0x1
10003a5c:	lea    ecx,[ebp-0x30]
10003a5f:	call   0x100012f4
10003a64:	call   0x10059d70
10003a69:	ret    
10003a6a:	mov    eax,0x10003a64
10003a6f:	ret    
10003a70:	push   0x2c
10003a72:	mov    eax,0x10064a73
10003a77:	call   0x10059c75
10003a7c:	call   0x1000205f
10003a81:	xor    ebx,ebx
10003a83:	mov    DWORD PTR [ebp-0x14],ebx
10003a86:	mov    DWORD PTR [ebp-0x10],ebx
10003a89:	lea    ecx,[ebp-0x38]
10003a8c:	mov    DWORD PTR [ebp-0x4],ebx
10003a8f:	call   0x10018612
10003a94:	push   0xffffffff
10003a96:	lea    ecx,[ebp-0x14]
10003a99:	push   ecx
10003a9a:	push   DWORD PTR [ebp+0x8]
10003a9d:	lea    esi,[ebp-0x18]
10003aa0:	push   eax
10003aa1:	mov    BYTE PTR [ebp-0x4],0x1
10003aa5:	call   0x10030fa0
10003aaa:	add    esp,0x10
10003aad:	push   eax
10003aae:	lea    edi,[ebp-0x10]
10003ab1:	call   0x10002082
10003ab6:	push   DWORD PTR [ebp-0x18]
10003ab9:	call   0x100430d2
10003abe:	pop    ecx
10003abf:	push   ebx
10003ac0:	push   0x1
10003ac2:	lea    ecx,[ebp-0x38]
10003ac5:	mov    BYTE PTR [ebp-0x4],bl
10003ac8:	call   0x100012f4
10003acd:	cmp    DWORD PTR [ebp-0x10],ebx
10003ad0:	jne    0x10003ae0
10003ad2:	call   0x10018591
10003ad7:	push   ebx
10003ad8:	call   0x100430d2
10003add:	pop    ecx
10003ade:	jmp    0x10003af6
10003ae0:	push   DWORD PTR [ebp-0x14]
10003ae3:	push   DWORD PTR [ebp-0x10]
10003ae6:	call   0x10003afc
10003aeb:	push   DWORD PTR [ebp-0x10]
10003aee:	call   0x100430d2
10003af3:	add    esp,0xc
10003af6:	call   0x10059d4d
10003afb:	ret    
10003afc:	push   0xc
10003afe:	mov    eax,0x100631d1
10003b03:	call   0x10059c75
10003b08:	mov    eax,ds:0x10080a74
10003b0d:	mov    edi,0x10080a74
10003b12:	mov    ecx,edi
10003b14:	call   DWORD PTR [eax+0xc]
10003b17:	add    eax,0x10
10003b1a:	mov    DWORD PTR [ebp-0x18],eax
10003b1d:	xor    esi,esi
10003b1f:	mov    DWORD PTR [ebp-0x4],esi
10003b22:	mov    eax,ds:0x10080a74
10003b27:	mov    ecx,edi
10003b29:	call   DWORD PTR [eax+0xc]
10003b2c:	add    eax,0x10
10003b2f:	mov    DWORD PTR [ebp-0x14],eax
10003b32:	push   0x1006cf08
10003b37:	push   0x9
10003b39:	push   0x1006cf48
10003b3e:	mov    BYTE PTR [ebp-0x4],0x1
10003b42:	call   0x100044a2
10003b47:	add    esp,0xc
10003b4a:	push   eax
10003b4b:	lea    eax,[ebp-0x10]
10003b4e:	push   eax
10003b4f:	call   0x10002349
10003b54:	lea    eax,[ebp-0x14]
10003b57:	push   eax
10003b58:	lea    eax,[ebp-0x18]
10003b5b:	push   eax
10003b5c:	lea    eax,[ebp-0x10]
10003b5f:	push   eax
10003b60:	push   DWORD PTR [ebp+0xc]
10003b63:	mov    BYTE PTR [ebp-0x4],0x2
10003b67:	push   DWORD PTR [ebp+0x8]
10003b6a:	call   0x10003800
10003b6f:	mov    bl,al
10003b71:	add    esp,0x14
10003b74:	neg    bl
10003b76:	mov    BYTE PTR [ebp-0x4],0x1
10003b7a:	mov    eax,DWORD PTR [ebp-0x10]
10003b7d:	sbb    bl,bl
10003b7f:	add    eax,0xfffffff0
10003b82:	inc    bl
10003b84:	call   0x10002060
10003b89:	test   bl,bl
10003b8b:	je     0x10003b92
10003b8d:	call   0x1000205f
10003b92:	call   0x10004016
10003b97:	call   0x1000205f
10003b9c:	push   0x1
10003b9e:	lea    eax,[ebp-0x10]
10003ba1:	push   eax
10003ba2:	call   0x10034bf0
10003ba7:	mov    BYTE PTR [ebp-0x4],0x3
10003bab:	call   DWORD PTR ds:0x1007efec
10003bb1:	mov    edi,DWORD PTR [ebp-0x14]
10003bb4:	lea    eax,[ebp-0x10]
10003bb7:	push   eax
10003bb8:	call   0x10037270
10003bbd:	push   DWORD PTR [ebp-0x10]
10003bc0:	call   DWORD PTR ds:0x10066070
10003bc6:	mov    ebx,DWORD PTR ds:0x100660a8
10003bcc:	push   0x4
10003bce:	push   esi
10003bcf:	push   edi
10003bd0:	call   ebx
10003bd2:	push   0x4
10003bd4:	push   esi
10003bd5:	mov    esi,DWORD PTR [ebp-0x18]
10003bd8:	push   esi
10003bd9:	call   ebx
10003bdb:	lea    eax,[edi-0x10]
10003bde:	call   0x10002060
10003be3:	lea    eax,[esi-0x10]
10003be6:	call   0x10002060
10003beb:	call   0x10059d4d
10003bf0:	ret    
10003bf1:	push   0x2c
10003bf3:	mov    eax,0x10064a73
10003bf8:	call   0x10059c75
10003bfd:	call   0x1000205f
10003c02:	xor    ebx,ebx
10003c04:	mov    DWORD PTR [ebp-0x14],ebx
10003c07:	mov    DWORD PTR [ebp-0x10],ebx
10003c0a:	lea    ecx,[ebp-0x38]
10003c0d:	mov    DWORD PTR [ebp-0x4],ebx
10003c10:	call   0x10018612
10003c15:	push   0xffffffff
10003c17:	lea    ecx,[ebp-0x14]
10003c1a:	push   ecx
10003c1b:	push   DWORD PTR [ebp+0x8]
10003c1e:	lea    esi,[ebp-0x18]
10003c21:	push   eax
10003c22:	mov    BYTE PTR [ebp-0x4],0x1
10003c26:	call   0x10030fa0
10003c2b:	add    esp,0x10
10003c2e:	push   eax
10003c2f:	lea    edi,[ebp-0x10]
10003c32:	call   0x10002082
10003c37:	push   DWORD PTR [ebp-0x18]
10003c3a:	call   0x100430d2
10003c3f:	pop    ecx
10003c40:	push   ebx
10003c41:	push   0x1
10003c43:	lea    ecx,[ebp-0x38]
10003c46:	mov    BYTE PTR [ebp-0x4],bl
10003c49:	call   0x100012f4
10003c4e:	cmp    DWORD PTR [ebp-0x10],ebx
10003c51:	jne    0x10003c61
10003c53:	call   0x10018591
10003c58:	push   ebx
10003c59:	call   0x100430d2
10003c5e:	pop    ecx
10003c5f:	jmp    0x10003c77
10003c61:	push   DWORD PTR [ebp-0x14]
10003c64:	push   DWORD PTR [ebp-0x10]
10003c67:	call   0x10003c7d
10003c6c:	push   DWORD PTR [ebp-0x10]
10003c6f:	call   0x100430d2
10003c74:	add    esp,0xc
10003c77:	call   0x10059d4d
10003c7c:	ret    
10003c7d:	push   ebp
10003c7e:	mov    ebp,esp
10003c80:	and    esp,0xfffffff8
10003c83:	push   0xffffffff
10003c85:	push   0x10063196
10003c8a:	mov    eax,fs:0x0
10003c90:	push   eax
10003c91:	sub    esp,0x70
10003c94:	push   ebx
10003c95:	push   esi
10003c96:	push   edi
10003c97:	mov    eax,ds:0x1007e030
10003c9c:	xor    eax,esp
10003c9e:	push   eax
10003c9f:	lea    eax,[esp+0x80]
10003ca6:	mov    fs:0x0,eax
10003cac:	push   0x61eee10a
10003cb1:	push   0x1006cf5c
10003cb6:	call   0x100042d1
10003cbb:	push   0x360b947a
10003cc0:	push   eax
10003cc1:	call   0x100042d1
10003cc6:	push   eax
10003cc7:	push   0xc
10003cc9:	push   0x1006cf8c
10003cce:	call   0x100044a2
10003cd3:	add    esp,0x1c
10003cd6:	push   eax
10003cd7:	lea    eax,[esp+0x18]
10003cdb:	push   eax
10003cdc:	call   0x10002349
10003ce1:	xor    ebx,ebx
10003ce3:	mov    DWORD PTR [esp+0x88],ebx
10003cea:	mov    eax,ds:0x10080a74
10003cef:	mov    esi,0x10080a74
10003cf4:	mov    ecx,esi
10003cf6:	call   DWORD PTR [eax+0xc]
10003cf9:	add    eax,0x10
10003cfc:	mov    DWORD PTR [esp+0x20],eax
10003d00:	mov    BYTE PTR [esp+0x88],0x1
10003d08:	mov    eax,ds:0x10080a74
10003d0d:	mov    ecx,esi
10003d0f:	call   DWORD PTR [eax+0xc]
10003d12:	add    eax,0x10
10003d15:	mov    DWORD PTR [esp+0x1c],eax
10003d19:	lea    eax,[esp+0x1c]
10003d1d:	push   eax
10003d1e:	lea    eax,[esp+0x24]
10003d22:	push   eax
10003d23:	lea    eax,[esp+0x1c]
10003d27:	push   eax
10003d28:	push   DWORD PTR [ebp+0xc]
10003d2b:	mov    BYTE PTR [esp+0x98],0x2
10003d33:	push   DWORD PTR [ebp+0x8]
10003d36:	call   0x10003800
10003d3b:	add    esp,0x14
10003d3e:	test   al,al
10003d40:	jne    0x10003d47
10003d42:	call   0x1000205f
10003d47:	call   0x10004016
10003d4c:	call   0x1000205f
10003d51:	push   0x1
10003d53:	lea    eax,[esp+0x1c]
10003d57:	push   eax
10003d58:	call   0x10034bf0
10003d5d:	mov    BYTE PTR [esp+0x88],0x3
10003d65:	mov    ecx,DWORD PTR [esp+0x14]
10003d69:	lea    edx,[esp+0x18]
10003d6d:	call   0x10037000
10003d72:	push   DWORD PTR [esp+0x18]
10003d76:	mov    esi,DWORD PTR ds:0x10066070
10003d7c:	call   esi
10003d7e:	push   0x40
10003d80:	lea    eax,[esp+0x3c]
10003d84:	push   ebx
10003d85:	push   eax
10003d86:	call   0x10045ea0
10003d8b:	xor    eax,eax
10003d8d:	mov    DWORD PTR [esp+0x30],ebx
10003d91:	lea    edi,[esp+0x34]
10003d95:	stos   DWORD PTR es:[edi],eax
10003d96:	add    esp,0xc
10003d99:	stos   DWORD PTR es:[edi],eax
10003d9a:	stos   DWORD PTR es:[edi],eax
10003d9b:	mov    edi,DWORD PTR [esp+0x1c]
10003d9f:	lea    eax,[esp+0x24]
10003da3:	push   eax
10003da4:	lea    eax,[esp+0x38]
10003da8:	push   eax
10003da9:	push   ebx
10003daa:	push   ebx
10003dab:	push   ebx
10003dac:	push   ebx
10003dad:	push   ebx
10003dae:	push   ebx
10003daf:	push   ebx
10003db0:	push   edi
10003db1:	mov    DWORD PTR [esp+0x5c],0x44
10003db9:	call   DWORD PTR ds:0x100660a0
10003dbf:	test   eax,eax
10003dc1:	je     0x10003dd1
10003dc3:	push   DWORD PTR [esp+0x28]
10003dc7:	call   esi
10003dc9:	push   DWORD PTR [esp+0x24]
10003dcd:	call   esi
10003dcf:	jmp    0x10003dde
10003dd1:	call   DWORD PTR ds:0x100660cc
10003dd7:	push   eax
10003dd8:	call   0x1000205f
10003ddd:	pop    ecx
10003dde:	mov    esi,DWORD PTR ds:0x100660a8
10003de4:	push   0x4
10003de6:	push   ebx
10003de7:	push   edi
10003de8:	call   esi
10003dea:	push   0x4
10003dec:	push   ebx
10003ded:	mov    ebx,DWORD PTR [esp+0x28]
10003df1:	push   ebx
10003df2:	call   esi
10003df4:	lea    eax,[edi-0x10]
10003df7:	call   0x10002060
10003dfc:	lea    eax,[ebx-0x10]
10003dff:	call   0x10002060
10003e04:	mov    eax,DWORD PTR [esp+0x14]
10003e08:	add    eax,0xfffffff0
10003e0b:	call   0x10002060
10003e10:	mov    ecx,DWORD PTR [esp+0x80]
10003e17:	mov    DWORD PTR fs:0x0,ecx
10003e1e:	pop    ecx
10003e1f:	pop    edi
10003e20:	pop    esi
10003e21:	pop    ebx
10003e22:	mov    esp,ebp
10003e24:	pop    ebp
10003e25:	ret    
10003e26:	push   0x2c
10003e28:	mov    eax,0x10064a73
10003e2d:	call   0x10059c75
10003e32:	call   0x1000205f
10003e37:	xor    ebx,ebx
10003e39:	mov    DWORD PTR [ebp-0x14],ebx
10003e3c:	mov    DWORD PTR [ebp-0x10],ebx
10003e3f:	lea    ecx,[ebp-0x38]
10003e42:	mov    DWORD PTR [ebp-0x4],ebx
10003e45:	call   0x10018612
10003e4a:	push   0xffffffff
10003e4c:	lea    ecx,[ebp-0x14]
10003e4f:	push   ecx
10003e50:	push   DWORD PTR [ebp+0x8]
10003e53:	lea    esi,[ebp-0x18]
10003e56:	push   eax
10003e57:	mov    BYTE PTR [ebp-0x4],0x1
10003e5b:	call   0x10030fa0
10003e60:	add    esp,0x10
10003e63:	push   eax
10003e64:	lea    edi,[ebp-0x10]
10003e67:	call   0x10002082
10003e6c:	push   DWORD PTR [ebp-0x18]
10003e6f:	call   0x100430d2
10003e74:	pop    ecx
10003e75:	push   ebx
10003e76:	push   0x1
10003e78:	lea    ecx,[ebp-0x38]
10003e7b:	mov    BYTE PTR [ebp-0x4],bl
10003e7e:	call   0x100012f4
10003e83:	cmp    DWORD PTR [ebp-0x10],ebx
10003e86:	jne    0x10003e96
10003e88:	call   0x10018591
10003e8d:	push   ebx
10003e8e:	call   0x100430d2
10003e93:	pop    ecx
10003e94:	jmp    0x10003eac
10003e96:	push   DWORD PTR [ebp-0x14]
10003e99:	push   DWORD PTR [ebp-0x10]
10003e9c:	call   0x10003eb2
10003ea1:	push   DWORD PTR [ebp-0x10]
10003ea4:	call   0x100430d2
10003ea9:	add    esp,0xc
10003eac:	call   0x10059d4d
10003eb1:	ret    
10003eb2:	push   ebp
10003eb3:	mov    ebp,esp
10003eb5:	and    esp,0xfffffff8
10003eb8:	push   0xffffffff
10003eba:	push   0x1006315b
10003ebf:	mov    eax,fs:0x0
10003ec5:	push   eax
10003ec6:	sub    esp,0x10
10003ec9:	push   ebx
10003eca:	push   esi
10003ecb:	push   edi
10003ecc:	mov    eax,ds:0x1007e030
10003ed1:	xor    eax,esp
10003ed3:	push   eax
10003ed4:	lea    eax,[esp+0x20]
10003ed8:	mov    fs:0x0,eax
10003ede:	mov    eax,ds:0x10080a74
10003ee3:	mov    esi,0x10080a74
10003ee8:	mov    ecx,esi
10003eea:	call   DWORD PTR [eax+0xc]
10003eed:	add    eax,0x10
10003ef0:	mov    DWORD PTR [esp+0x18],eax
10003ef4:	xor    edi,edi
10003ef6:	mov    DWORD PTR [esp+0x28],edi
10003efa:	mov    eax,ds:0x10080a74
10003eff:	mov    ecx,esi
10003f01:	call   DWORD PTR [eax+0xc]
10003f04:	add    eax,0x10
10003f07:	mov    DWORD PTR [esp+0x14],eax
10003f0b:	push   0x2ee338de
10003f10:	push   0x1006cfa8
10003f15:	mov    BYTE PTR [esp+0x30],0x1
10003f1a:	call   0x100042d1
10003f1f:	push   0x2aaad49c
10003f24:	push   eax
10003f25:	call   0x100042d1
10003f2a:	push   0x6df55042
10003f2f:	push   eax
10003f30:	call   0x100042d1
10003f35:	push   eax
10003f36:	push   0x8
10003f38:	push   0x1006cfd0
10003f3d:	call   0x100044a2
10003f42:	add    esp,0x24
10003f45:	push   eax
10003f46:	lea    eax,[esp+0x14]
10003f4a:	push   eax
10003f4b:	call   0x10002349
10003f50:	lea    eax,[esp+0x14]
10003f54:	push   eax
10003f55:	lea    eax,[esp+0x1c]
10003f59:	push   eax
10003f5a:	lea    eax,[esp+0x18]
10003f5e:	push   eax
10003f5f:	push   DWORD PTR [ebp+0xc]
10003f62:	mov    BYTE PTR [esp+0x38],0x2
10003f67:	push   DWORD PTR [ebp+0x8]
10003f6a:	call   0x10003800
10003f6f:	mov    bl,al
10003f71:	add    esp,0x14
10003f74:	neg    bl
10003f76:	mov    BYTE PTR [esp+0x28],0x1
10003f7b:	mov    eax,DWORD PTR [esp+0x10]
10003f7f:	sbb    bl,bl
10003f81:	add    eax,0xfffffff0
10003f84:	inc    bl
10003f86:	call   0x10002060
10003f8b:	test   bl,bl
10003f8d:	je     0x10003f94
10003f8f:	call   0x1000205f
10003f94:	call   0x10004016
10003f99:	call   0x1000205f
10003f9e:	push   0x1
10003fa0:	lea    eax,[esp+0x14]
10003fa4:	push   eax
10003fa5:	call   0x10034bf0
10003faa:	push   0x1006cfe4
10003faf:	push   0xb
10003fb1:	push   0x1006d018
10003fb6:	mov    BYTE PTR [esp+0x34],0x3
10003fbb:	call   0x100044a2
10003fc0:	mov    ebx,DWORD PTR [esp+0x20]
10003fc4:	add    esp,0xc
10003fc7:	push   eax
10003fc8:	push   ebx
10003fc9:	lea    eax,[esp+0x18]
10003fcd:	push   eax
10003fce:	call   0x100372f0
10003fd3:	push   DWORD PTR [esp+0x10]
10003fd7:	call   DWORD PTR ds:0x10066070
10003fdd:	mov    esi,DWORD PTR ds:0x100660a8
10003fe3:	push   0x4
10003fe5:	push   edi
10003fe6:	push   ebx
10003fe7:	call   esi
10003fe9:	push   0x4
10003feb:	push   edi
10003fec:	mov    edi,DWORD PTR [esp+0x20]
10003ff0:	push   edi
10003ff1:	call   esi
10003ff3:	lea    eax,[ebx-0x10]
10003ff6:	call   0x10002060
10003ffb:	lea    eax,[edi-0x10]
10003ffe:	call   0x10002060
10004003:	mov    ecx,DWORD PTR [esp+0x20]
10004007:	mov    DWORD PTR fs:0x0,ecx
1000400e:	pop    ecx
1000400f:	pop    edi
10004010:	pop    esi
10004011:	pop    ebx
10004012:	mov    esp,ebp
10004014:	pop    ebp
10004015:	ret    
10004016:	push   ebp
10004017:	mov    ebp,esp
10004019:	and    esp,0xfffffff8
1000401c:	push   0xffffffff
1000401e:	push   0x10062612
10004023:	mov    eax,fs:0x0
10004029:	push   eax
1000402a:	sub    esp,0x14
1000402d:	mov    eax,ds:0x1007e030
10004032:	xor    eax,esp
10004034:	push   eax
10004035:	lea    eax,[esp+0x18]
10004039:	mov    fs:0x0,eax
1000403f:	push   0x1
10004041:	lea    eax,[esp+0xc]
10004045:	push   eax
10004046:	call   0x10034bf0
1000404b:	and    DWORD PTR [esp+0x20],0x0
10004050:	call   0x1002fb70
10004055:	add    eax,0x78c6c000
1000405a:	mov    DWORD PTR [esp+0xc],eax
1000405e:	lea    eax,[esp+0xc]
10004062:	push   eax
10004063:	lea    eax,[esp+0xc]
10004067:	push   eax
10004068:	push   0x4
1000406a:	adc    edx,0x11ed1
10004070:	pop    ecx
10004071:	mov    DWORD PTR [esp+0x18],edx
10004075:	call   0x10035d90
1000407a:	push   DWORD PTR [esp+0x8]
1000407e:	call   DWORD PTR ds:0x10066070
10004084:	mov    ecx,DWORD PTR [esp+0x18]
10004088:	mov    DWORD PTR fs:0x0,ecx
1000408f:	pop    ecx
10004090:	mov    esp,ebp
10004092:	pop    ebp
10004093:	ret    
10004094:	push   0xc
10004096:	mov    eax,0x10064ef9
1000409b:	call   0x10059ca8
100040a0:	xor    ebx,ebx
100040a2:	lea    eax,[ebp-0x14]
100040a5:	push   ebx
100040a6:	push   eax
100040a7:	mov    DWORD PTR [ebp-0x4],ebx
100040aa:	call   0x10002892
100040af:	pop    ecx
100040b0:	pop    ecx
100040b1:	mov    ecx,DWORD PTR [eax]
100040b3:	mov    esi,ecx
100040b5:	mov    DWORD PTR [eax],ebx
100040b7:	mov    DWORD PTR [ebp-0x18],esi
100040ba:	lea    eax,[ebp-0x14]
100040bd:	mov    BYTE PTR [ebp-0x4],0x1
100040c1:	call   0x100042aa
100040c6:	push   esi
100040c7:	call   0x10002910
100040cc:	cmp    al,bl
100040ce:	jne    0x100040d5
100040d0:	call   0x1000295b
100040d5:	lea    eax,[ebp-0x18]
100040d8:	call   0x100042aa
100040dd:	call   0x10059d4d
100040e2:	ret    
100040e3:	mov    eax,0x100040dd
100040e8:	ret    
100040e9:	push   0x0
100040eb:	mov    ecx,esi
100040ed:	mov    DWORD PTR [esi+0x18],0xf
100040f4:	call   0x10001420
100040f9:	mov    eax,esi
100040fb:	ret    
100040fc:	push   0x0
100040fe:	mov    ecx,esi
10004100:	mov    DWORD PTR [esi+0x18],0xf
10004107:	call   0x10001420
1000410c:	push   DWORD PTR [esp+0x8]
10004110:	mov    ecx,esi
10004112:	push   DWORD PTR [esp+0x8]
10004116:	call   0x1000133f
1000411b:	mov    eax,esi
1000411d:	ret    0x8
10004120:	push   DWORD PTR [esp+0x8]
10004124:	call   0x10043250
10004129:	pop    ecx
1000412a:	push   eax
1000412b:	push   DWORD PTR [esp+0xc]
1000412f:	mov    eax,DWORD PTR [esp+0xc]
10004133:	call   0x10004d66
10004138:	ret    0x8
1000413b:	mov    ecx,DWORD PTR [eax]
1000413d:	push   esi
1000413e:	mov    esi,DWORD PTR [edi]
10004140:	lea    eax,[ecx-0x10]
10004143:	sub    esi,0x10
10004146:	cmp    eax,esi
10004148:	je     0x10004178
1000414a:	cmp    DWORD PTR [esi+0xc],0x0
1000414e:	push   ebx
1000414f:	jl     0x1000416c
10004151:	mov    edx,DWORD PTR [eax]
10004153:	cmp    edx,DWORD PTR [esi]
10004155:	jne    0x1000416c
10004157:	call   0x10004e00
1000415c:	mov    ebx,eax
1000415e:	mov    eax,esi
10004160:	call   0x10002060
10004165:	add    ebx,0x10
10004168:	mov    DWORD PTR [edi],ebx
1000416a:	jmp    0x10004177
1000416c:	mov    ebx,DWORD PTR [ecx-0xc]
1000416f:	push   ecx
10004170:	mov    eax,edi
10004172:	call   0x100023af
10004177:	pop    ebx
10004178:	mov    eax,edi
1000417a:	pop    esi
1000417b:	ret    
1000417c:	push   0xc
1000417e:	mov    eax,0x1005ffa8
10004183:	call   0x10059c75
10004188:	mov    ebx,ecx
1000418a:	xor    edi,edi
1000418c:	mov    DWORD PTR [ebp-0x4],edi
1000418f:	mov    eax,ebx
10004191:	mov    DWORD PTR [ebp-0x10],edi
10004194:	call   0x10004718
10004199:	mov    esi,DWORD PTR [ebp+0x8]
1000419c:	mov    ecx,eax
1000419e:	call   0x10002143
100041a3:	cmp    DWORD PTR [ebp+0xc],edi
100041a6:	mov    DWORD PTR [ebp-0x4],edi
100041a9:	mov    eax,DWORD PTR [ebx]
100041ab:	mov    ebx,DWORD PTR [eax-0xc]
100041ae:	mov    DWORD PTR [ebp-0x10],0x1
100041b5:	mov    DWORD PTR [ebp-0x14],eax
100041b8:	je     0x100041c5
100041ba:	push   DWORD PTR [ebp+0xc]
100041bd:	call   0x10043933
100041c2:	pop    ecx
100041c3:	mov    edi,eax
100041c5:	mov    esi,DWORD PTR [ebp+0x8]
100041c8:	lea    eax,[edi+ebx*1]
100041cb:	push   eax
100041cc:	mov    DWORD PTR [ebp-0x18],eax
100041cf:	call   0x1000219e
100041d4:	push   DWORD PTR [ebp+0xc]
100041d7:	mov    esi,eax
100041d9:	push   edi
100041da:	push   esi
100041db:	mov    eax,edi
100041dd:	call   0x10002323
100041e2:	push   DWORD PTR [ebp-0x14]
100041e5:	lea    eax,[esi+edi*2]
100041e8:	push   ebx
100041e9:	push   eax
100041ea:	mov    eax,ebx
100041ec:	call   0x10002323
100041f1:	mov    eax,DWORD PTR [ebp-0x18]
100041f4:	mov    edx,DWORD PTR [ebp+0x8]
100041f7:	add    esp,0x18
100041fa:	call   0x10002229
100041ff:	mov    eax,DWORD PTR [ebp+0x8]
10004202:	call   0x10059d4d
10004207:	ret    
10004208:	mov    eax,DWORD PTR [esi]
1000420a:	sub    eax,0x10
1000420d:	cmp    DWORD PTR [eax+0xc],0x1
10004211:	jle    0x1000421c
10004213:	push   DWORD PTR [eax+0x4]
10004216:	push   esi
10004217:	call   0x10002293
1000421c:	mov    eax,DWORD PTR [esi]
1000421e:	ret    
1000421f:	mov    eax,DWORD PTR [esi]
10004221:	test   eax,eax
10004223:	je     0x1000422c
10004225:	push   eax
10004226:	call   0x10043933
1000422b:	pop    ecx
1000422c:	mov    edx,esi
1000422e:	jmp    0x10002229
10004233:	push   esi
10004234:	mov    esi,DWORD PTR [eax]
10004236:	test   esi,esi
10004238:	je     0x10004249
1000423a:	push   DWORD PTR [esi]
1000423c:	call   DWORD PTR ds:0x10066070
10004242:	push   esi
10004243:	call   0x100430d2
10004248:	pop    ecx
10004249:	pop    esi
1000424a:	ret    
1000424b:	push   ebp
1000424c:	mov    ebp,esp
1000424e:	and    esp,0xfffffff8
10004251:	push   ecx
10004252:	push   ecx
10004253:	push   ebx
10004254:	mov    ebx,DWORD PTR [esi+0x4]
10004257:	test   ebx,ebx
10004259:	push   edi
1000425a:	jne    0x10004260
1000425c:	xor    edi,edi
1000425e:	jmp    0x10004268
10004260:	mov    edi,DWORD PTR [esi+0xc]
10004263:	sub    edi,ebx
10004265:	sar    edi,0x5
10004268:	mov    eax,esi
1000426a:	call   0x1000473c
1000426f:	cmp    eax,edi
10004271:	jae    0x10004285
10004273:	push   DWORD PTR [ebp+0x8]
10004276:	push   0x1
10004278:	push   DWORD PTR [esi+0x8]
1000427b:	call   0x1000a31f
10004280:	mov    DWORD PTR [esi+0x8],eax
10004283:	jmp    0x100042a2
10004285:	mov    edi,DWORD PTR [esi+0x8]
10004288:	cmp    ebx,edi
1000428a:	jbe    0x10004291
1000428c:	call   0x100435f0
10004291:	push   edi
10004292:	push   esi
10004293:	push   DWORD PTR [ebp+0x8]
10004296:	lea    eax,[esp+0x14]
1000429a:	push   eax
1000429b:	mov    eax,esi
1000429d:	call   0x1000474f
100042a2:	pop    edi
100042a3:	pop    ebx
100042a4:	mov    esp,ebp
100042a6:	pop    ebp
100042a7:	ret    0x4
100042aa:	push   esi
100042ab:	mov    esi,DWORD PTR [eax]
100042ad:	test   esi,esi
100042af:	je     0x100042cf
100042b1:	push   edi
100042b2:	mov    edi,DWORD PTR [esi]
100042b4:	test   edi,edi
100042b6:	je     0x100042c7
100042b8:	push   DWORD PTR [edi]
100042ba:	call   DWORD PTR ds:0x10066070
100042c0:	push   edi
100042c1:	call   0x100430d2
100042c6:	pop    ecx
100042c7:	push   esi
100042c8:	call   0x100430d2
100042cd:	pop    ecx
100042ce:	pop    edi
100042cf:	pop    esi
100042d0:	ret    
100042d1:	jmp    0x100042d7
100042d3:	dec    DWORD PTR [esp+0x8]
100042d7:	test   BYTE PTR [esp+0x8],0x1
100042dc:	jne    0x100042d3
100042de:	mov    eax,DWORD PTR [esp+0x4]
100042e2:	ret    
100042e3:	push   ebp
100042e4:	mov    ebp,esp
100042e6:	and    esp,0xfffffff8
100042e9:	push   0xffffffff
100042eb:	push   0x1006141b
100042f0:	mov    eax,fs:0x0
100042f6:	push   eax
100042f7:	sub    esp,0x78
100042fa:	mov    eax,ds:0x1007e030
100042ff:	xor    eax,esp
10004301:	mov    DWORD PTR [esp+0x70],eax
10004305:	push   ebx
10004306:	push   esi
10004307:	push   edi
10004308:	mov    eax,ds:0x1007e030
1000430d:	xor    eax,esp
1000430f:	push   eax
10004310:	lea    eax,[esp+0x88]
10004317:	mov    fs:0x0,eax
1000431d:	push   DWORD PTR [ebp+0xc]
10004320:	mov    eax,DWORD PTR [ebp+0x8]
10004323:	push   eax
10004324:	lea    esi,[esp+0x50]
10004328:	call   0x100040fc
1000432d:	mov    eax,esi
1000432f:	push   eax
10004330:	lea    eax,[esp+0x1c]
10004334:	xor    ebx,ebx
10004336:	push   eax
10004337:	mov    DWORD PTR [esp+0x98],ebx
1000433e:	call   0x100047ce
10004343:	push   eax
10004344:	call   0x10004aa9
10004349:	call   0x100047ce
1000434e:	mov    ecx,DWORD PTR [eax+0x4]
10004351:	lea    edi,[esp+0x10]
10004355:	lea    esi,[esp+0x18]
10004359:	mov    DWORD PTR [esp+0x14],ecx
1000435d:	mov    DWORD PTR [esp+0x10],eax
10004361:	call   0x10004b10
10004366:	test   al,al
10004368:	je     0x100043c2
1000436a:	sub    esp,0x1c
1000436d:	lea    eax,[esp+0x64]
10004371:	mov    ecx,esp
10004373:	mov    DWORD PTR [esp+0x2c],esp
10004377:	push   eax
10004378:	call   0x100011ab
1000437d:	lea    esi,[esp+0x80]
10004384:	call   0x10004831
10004389:	add    esp,0x1c
1000438c:	lea    eax,[esp+0x48]
10004390:	push   eax
10004391:	mov    BYTE PTR [esp+0x94],0x1
10004399:	call   0x100047ce
1000439e:	push   eax
1000439f:	call   0x100049d5
100043a4:	push   0xffffffff
100043a6:	push   ebx
100043a7:	mov    ecx,esi
100043a9:	push   ecx
100043aa:	mov    ecx,eax
100043ac:	call   0x10001245
100043b1:	push   ebx
100043b2:	push   0x1
100043b4:	mov    ecx,esi
100043b6:	mov    BYTE PTR [esp+0x98],bl
100043bd:	call   0x100012f4
100043c2:	mov    eax,DWORD PTR [ebp+0x10]
100043c5:	movzx  eax,BYTE PTR [eax]
100043c8:	cmp    eax,0x100
100043cd:	jge    0x100043f3
100043cf:	lea    eax,[esp+0x48]
100043d3:	push   eax
100043d4:	lea    eax,[esp+0x14]
100043d8:	push   eax
100043d9:	call   0x100047ce
100043de:	push   eax
100043df:	call   0x10004aa9
100043e4:	mov    ecx,DWORD PTR [eax]
100043e6:	mov    ebx,DWORD PTR [eax+0x4]
100043e9:	mov    DWORD PTR [esp+0x18],ecx
100043ed:	mov    DWORD PTR [esp+0x1c],ebx
100043f1:	jmp    0x100043f7
100043f3:	mov    ebx,DWORD PTR [esp+0x1c]
100043f7:	call   0x100047ce
100043fc:	mov    ecx,DWORD PTR [eax+0x4]
100043ff:	lea    edi,[esp+0x10]
10004403:	lea    esi,[esp+0x18]
10004407:	mov    DWORD PTR [esp+0x14],ecx
1000440b:	mov    DWORD PTR [esp+0x10],eax
1000440f:	call   0x10004b10
10004414:	test   al,al
10004416:	jne    0x1000446d
10004418:	mov    esi,DWORD PTR [esp+0x18]
1000441c:	test   esi,esi
1000441e:	jne    0x10004425
10004420:	call   0x100435f0
10004425:	cmp    ebx,DWORD PTR [esi+0x4]
10004428:	jne    0x1000442f
1000442a:	call   0x100435f0
1000442f:	cmp    DWORD PTR [ebx+0x40],0x10
10004433:	jb     0x1000443a
10004435:	mov    ebx,DWORD PTR [ebx+0x2c]
10004438:	jmp    0x1000443d
1000443a:	add    ebx,0x2c
1000443d:	push   0x0
1000443f:	push   0x1
10004441:	lea    ecx,[esp+0x50]
10004445:	call   0x100012f4
1000444a:	mov    eax,ebx
1000444c:	mov    ecx,DWORD PTR [esp+0x88]
10004453:	mov    DWORD PTR fs:0x0,ecx
1000445a:	pop    ecx
1000445b:	pop    edi
1000445c:	pop    esi
1000445d:	pop    ebx
1000445e:	mov    ecx,DWORD PTR [esp+0x70]
10004462:	xor    ecx,esp
10004464:	call   0x100430d7
10004469:	mov    esp,ebp
1000446b:	pop    ebp
1000446c:	ret    
1000446d:	push   0x1006d030
10004472:	lea    ecx,[esp+0x68]
10004476:	call   0x100011d1
1000447b:	lea    eax,[esp+0x64]
1000447f:	push   eax
10004480:	lea    eax,[esp+0x24]
10004484:	push   eax
10004485:	mov    BYTE PTR [esp+0x98],0x2
1000448d:	call   0x100026e6
10004492:	push   0x10074e84
10004497:	lea    eax,[esp+0x24]
1000449b:	push   eax
1000449c:	call   0x10047c54
100044a1:	int3   
100044a2:	push   ebp
100044a3:	mov    ebp,esp
100044a5:	and    esp,0xfffffff8
100044a8:	push   0xffffffff
100044aa:	push   0x100608e1
100044af:	mov    eax,fs:0x0
100044b5:	push   eax
100044b6:	sub    esp,0x78
100044b9:	mov    eax,ds:0x1007e030
100044be:	xor    eax,esp
100044c0:	mov    DWORD PTR [esp+0x70],eax
100044c4:	push   ebx
100044c5:	push   esi
100044c6:	push   edi
100044c7:	mov    eax,ds:0x1007e030
100044cc:	xor    eax,esp
100044ce:	push   eax
100044cf:	lea    eax,[esp+0x88]
100044d6:	mov    fs:0x0,eax
100044dc:	mov    eax,DWORD PTR [ebp+0x8]
100044df:	xor    edi,edi
100044e1:	push   eax
100044e2:	mov    eax,DWORD PTR [ebp+0xc]
100044e5:	lea    esi,[esp+0x4c]
100044e9:	mov    DWORD PTR [esp+0x64],0x7
100044f1:	mov    DWORD PTR [esp+0x60],edi
100044f5:	mov    WORD PTR [esp+0x50],di
100044fa:	call   0x1000516e
100044ff:	mov    eax,esi
10004501:	push   eax
10004502:	lea    eax,[esp+0x1c]
10004506:	push   eax
10004507:	mov    DWORD PTR [esp+0x98],edi
1000450e:	call   0x1000488f
10004513:	push   eax
10004514:	call   0x10004c29
10004519:	call   0x1000488f
1000451e:	mov    ecx,DWORD PTR [eax+0x4]
10004521:	lea    edi,[esp+0x10]
10004525:	lea    esi,[esp+0x18]
10004529:	mov    DWORD PTR [esp+0x14],ecx
1000452d:	mov    DWORD PTR [esp+0x10],eax
10004531:	call   0x10004b10
10004536:	test   al,al
10004538:	je     0x1000458f
1000453a:	sub    esp,0x1c
1000453d:	lea    eax,[esp+0x64]
10004541:	mov    esi,esp
10004543:	mov    DWORD PTR [esp+0x2c],esp
10004547:	call   0x10004b2b
1000454c:	lea    edi,[esp+0x80]
10004553:	call   0x100048f2
10004558:	add    esp,0x1c
1000455b:	lea    eax,[esp+0x48]
1000455f:	push   eax
10004560:	mov    BYTE PTR [esp+0x94],0x1
10004568:	call   0x1000488f
1000456d:	push   eax
1000456e:	call   0x10004b56
10004573:	push   0xffffffff
10004575:	push   eax
10004576:	xor    ebx,ebx
10004578:	mov    eax,edi
1000457a:	call   0x100050e8
1000457f:	push   0x1
10004581:	mov    esi,edi
10004583:	mov    BYTE PTR [esp+0x94],bl
1000458a:	call   0x100051f3
1000458f:	mov    eax,DWORD PTR [ebp+0x10]
10004592:	movzx  eax,BYTE PTR [eax]
10004595:	cmp    eax,0x100
1000459a:	jge    0x100045c0
1000459c:	lea    eax,[esp+0x48]
100045a0:	push   eax
100045a1:	lea    eax,[esp+0x14]
100045a5:	push   eax
100045a6:	call   0x1000488f
100045ab:	push   eax
100045ac:	call   0x10004c29
100045b1:	mov    ecx,DWORD PTR [eax]
100045b3:	mov    ebx,DWORD PTR [eax+0x4]
100045b6:	mov    DWORD PTR [esp+0x18],ecx
100045ba:	mov    DWORD PTR [esp+0x1c],ebx
100045be:	jmp    0x100045c4
100045c0:	mov    ebx,DWORD PTR [esp+0x1c]
100045c4:	call   0x1000488f
100045c9:	mov    ecx,DWORD PTR [eax+0x4]
100045cc:	lea    edi,[esp+0x10]
100045d0:	lea    esi,[esp+0x18]
100045d4:	mov    DWORD PTR [esp+0x14],ecx
100045d8:	mov    DWORD PTR [esp+0x10],eax
100045dc:	call   0x10004b10
100045e1:	test   al,al
100045e3:	jne    0x1000463a
100045e5:	mov    esi,DWORD PTR [esp+0x18]
100045e9:	test   esi,esi
100045eb:	jne    0x100045f2
100045ed:	call   0x100435f0
100045f2:	cmp    ebx,DWORD PTR [esi+0x4]
100045f5:	jne    0x100045fc
100045f7:	call   0x100435f0
100045fc:	cmp    DWORD PTR [ebx+0x40],0x8
10004600:	jb     0x10004607
10004602:	mov    edi,DWORD PTR [ebx+0x2c]
10004605:	jmp    0x1000460a
10004607:	lea    edi,[ebx+0x2c]
1000460a:	push   0x1
1000460c:	xor    ebx,ebx
1000460e:	lea    esi,[esp+0x4c]
10004612:	call   0x100051f3
10004617:	mov    eax,edi
10004619:	mov    ecx,DWORD PTR [esp+0x88]
10004620:	mov    DWORD PTR fs:0x0,ecx
10004627:	pop    ecx
10004628:	pop    edi
10004629:	pop    esi
1000462a:	pop    ebx
1000462b:	mov    ecx,DWORD PTR [esp+0x70]
1000462f:	xor    ecx,esp
10004631:	call   0x100430d7
10004636:	mov    esp,ebp
10004638:	pop    ebp
10004639:	ret    
1000463a:	push   0x1006d030
1000463f:	lea    ecx,[esp+0x68]
10004643:	call   0x100011d1
10004648:	lea    eax,[esp+0x64]
1000464c:	push   eax
1000464d:	lea    eax,[esp+0x24]
10004651:	push   eax
10004652:	mov    BYTE PTR [esp+0x98],0x2
1000465a:	call   0x100026e6
1000465f:	push   0x10074e84
10004664:	lea    eax,[esp+0x24]
10004668:	push   eax
10004669:	call   0x10047c54
1000466e:	int3   
1000466f:	jmp    0x1000499a
10004674:	mov    ecx,DWORD PTR [eax+0x4]
10004677:	test   ecx,ecx
10004679:	jne    0x1000467e
1000467b:	xor    eax,eax
1000467d:	ret    
1000467e:	mov    eax,DWORD PTR [eax+0x8]
10004681:	sub    eax,ecx
10004683:	push   0x1c
10004685:	cdq    
10004686:	pop    ecx
10004687:	idiv   ecx
10004689:	ret    
1000468a:	mov    eax,esi
1000468c:	call   0x10004674
10004691:	cmp    DWORD PTR [esp+0x4],eax
10004695:	jb     0x1000469c
10004697:	call   0x100435f0
1000469c:	mov    eax,DWORD PTR [esp+0x4]
100046a0:	imul   eax,eax,0x1c
100046a3:	add    eax,DWORD PTR [esi+0x4]
100046a6:	ret    0x4
100046a9:	push   esi
100046aa:	mov    esi,DWORD PTR [eax]
100046ac:	test   esi,esi
100046ae:	je     0x100046bd
100046b0:	push   esi
100046b1:	call   0x1003a170
100046b6:	push   esi
100046b7:	call   0x100430d2
100046bc:	pop    ecx
100046bd:	pop    esi
100046be:	ret    
100046bf:	mov    eax,DWORD PTR [esi]
100046c1:	test   eax,eax
100046c3:	je     0x100046cc
100046c5:	push   eax
100046c6:	call   DWORD PTR ds:0x10066070
100046cc:	and    DWORD PTR [esi],0x0
100046cf:	ret    
100046d0:	push   esi
100046d1:	mov    esi,ecx
100046d3:	mov    ecx,DWORD PTR [eax+0x14]
100046d6:	cmp    ecx,esi
100046d8:	jae    0x100046dc
100046da:	mov    esi,ecx
100046dc:	cmp    esi,edi
100046de:	mov    ecx,esi
100046e0:	jb     0x100046e4
100046e2:	mov    ecx,edi
100046e4:	cmp    DWORD PTR [eax+0x18],0x10
100046e8:	jb     0x100046ef
100046ea:	mov    eax,DWORD PTR [eax+0x4]
100046ed:	jmp    0x100046f2
100046ef:	add    eax,0x4
100046f2:	push   ecx
100046f3:	push   DWORD PTR [esp+0xc]
100046f7:	push   eax
100046f8:	call   0x100439bb
100046fd:	add    esp,0xc
10004700:	test   eax,eax
10004702:	jne    0x10004714
10004704:	cmp    esi,edi
10004706:	jae    0x1000470d
10004708:	or     eax,0xffffffff
1000470b:	jmp    0x10004714
1000470d:	xor    eax,eax
1000470f:	cmp    esi,edi
10004711:	setne  al
10004714:	pop    esi
10004715:	ret    0x4
10004718:	mov    eax,DWORD PTR [eax]
1000471a:	mov    ecx,DWORD PTR [eax-0x10]
1000471d:	test   ecx,ecx
1000471f:	je     0x10004728
10004721:	mov    eax,DWORD PTR [ecx]
10004723:	call   DWORD PTR [eax+0x10]
10004726:	jmp    0x1000472a
10004728:	xor    eax,eax
1000472a:	test   eax,eax
1000472c:	jne    0x1000473b
1000472e:	mov    ecx,0x10080a74
10004733:	mov    eax,ds:0x10080a74
10004738:	jmp    DWORD PTR [eax+0x10]
1000473b:	ret    
1000473c:	mov    ecx,DWORD PTR [eax+0x4]
1000473f:	test   ecx,ecx
10004741:	jne    0x10004746
10004743:	xor    eax,eax
10004745:	ret    
10004746:	mov    eax,DWORD PTR [eax+0x8]
10004749:	sub    eax,ecx
1000474b:	sar    eax,0x5
1000474e:	ret    
1000474f:	push   ebp
10004750:	mov    ebp,esp
10004752:	push   ecx
10004753:	push   ebx
10004754:	push   esi
10004755:	push   edi
10004756:	mov    esi,eax
10004758:	call   0x1000473c
1000475d:	test   eax,eax
1000475f:	jne    0x10004765
10004761:	xor    edi,edi
10004763:	jmp    0x1000478a
10004765:	mov    ebx,DWORD PTR [esi+0x4]
10004768:	cmp    ebx,DWORD PTR [esi+0x8]
1000476b:	jbe    0x10004772
1000476d:	call   0x100435f0
10004772:	cmp    DWORD PTR [ebp+0x10],0x0
10004776:	je     0x1000477d
10004778:	cmp    DWORD PTR [ebp+0x10],esi
1000477b:	je     0x10004782
1000477d:	call   0x100435f0
10004782:	mov    edi,DWORD PTR [ebp+0x14]
10004785:	sub    edi,ebx
10004787:	sar    edi,0x5
1000478a:	push   DWORD PTR [ebp+0x14]
1000478d:	mov    edx,DWORD PTR [ebp+0xc]
10004790:	push   DWORD PTR [ebp+0x10]
10004793:	mov    ecx,esi
10004795:	call   0x1000a623
1000479a:	mov    ebx,DWORD PTR [esi+0x4]
1000479d:	cmp    ebx,DWORD PTR [esi+0x8]
100047a0:	jbe    0x100047a7
100047a2:	call   0x100435f0
100047a7:	shl    edi,0x5
100047aa:	add    edi,ebx
100047ac:	cmp    edi,DWORD PTR [esi+0x8]
100047af:	mov    DWORD PTR [ebp+0x14],ebx
100047b2:	ja     0x100047b9
100047b4:	cmp    edi,DWORD PTR [esi+0x4]
100047b7:	jae    0x100047be
100047b9:	call   0x100435f0
100047be:	mov    eax,DWORD PTR [ebp+0x8]
100047c1:	mov    DWORD PTR [eax+0x4],edi
100047c4:	pop    edi
100047c5:	mov    DWORD PTR [eax],esi
100047c7:	pop    esi
100047c8:	pop    ebx
100047c9:	pop    ecx
100047ca:	pop    ebp
100047cb:	ret    0x10
100047ce:	push   0x0
100047d0:	mov    eax,0x100608ae
100047d5:	call   0x10059c75
100047da:	test   BYTE PTR ds:0x10080c38,0x1
100047e1:	jne    0x10004826
100047e3:	or     DWORD PTR ds:0x10080c38,0x1
100047ea:	and    DWORD PTR [esp+0x18],0x0
100047ef:	call   0x10006037
100047f4:	mov    ds:0x10080c30,eax
100047f9:	mov    BYTE PTR [eax+0x45],0x1
100047fd:	mov    eax,ds:0x10080c30
10004802:	mov    DWORD PTR [eax+0x4],eax
10004805:	mov    eax,ds:0x10080c30
1000480a:	mov    DWORD PTR [eax],eax
1000480c:	mov    eax,ds:0x10080c30
10004811:	mov    DWORD PTR [eax+0x8],eax
10004814:	and    DWORD PTR ds:0x10080c34,0x0
1000481b:	push   0x100659e1
10004820:	call   0x100434b4
10004825:	pop    ecx
10004826:	mov    eax,0x10080c2c
1000482b:	call   0x10059d4d
10004830:	ret    
10004831:	push   0x4
10004833:	mov    eax,0x10063d92
10004838:	call   0x10059c75
1000483d:	and    DWORD PTR [ebp-0x10],0x0
10004841:	and    DWORD PTR [ebp-0x4],0x0
10004845:	lea    eax,[ebp+0x8]
10004848:	push   eax
10004849:	mov    ecx,esi
1000484b:	call   0x100011ab
10004850:	xor    ebx,ebx
10004852:	inc    ebx
10004853:	cmp    DWORD PTR [esi+0x14],ebx
10004856:	jbe    0x1000487b
10004858:	mov    edi,ebx
1000485a:	mov    eax,esi
1000485c:	call   0x10011fbe
10004861:	mov    DWORD PTR [ebp-0x10],eax
10004864:	lea    edi,[ebx-0x1]
10004867:	mov    eax,esi
10004869:	call   0x10011fbe
1000486e:	mov    cl,BYTE PTR [eax]
10004870:	mov    eax,DWORD PTR [ebp-0x10]
10004873:	xor    BYTE PTR [eax],cl
10004875:	inc    ebx
10004876:	cmp    ebx,DWORD PTR [esi+0x14]
10004879:	jb     0x10004858
1000487b:	push   0x0
1000487d:	push   0x1
1000487f:	lea    ecx,[ebp+0x8]
10004882:	call   0x100012f4
10004887:	mov    eax,esi
10004889:	call   0x10059d4d
1000488e:	ret    
1000488f:	push   0x0
10004891:	mov    eax,0x10060885
10004896:	call   0x10059c75
1000489b:	test   BYTE PTR ds:0x10080c1c,0x1
100048a2:	jne    0x100048e7
100048a4:	or     DWORD PTR ds:0x10080c1c,0x1
100048ab:	and    DWORD PTR [esp+0x18],0x0
100048b0:	call   0x10006037
100048b5:	mov    ds:0x10080c24,eax
100048ba:	mov    BYTE PTR [eax+0x45],0x1
100048be:	mov    eax,ds:0x10080c24
100048c3:	mov    DWORD PTR [eax+0x4],eax
100048c6:	mov    eax,ds:0x10080c24
100048cb:	mov    DWORD PTR [eax],eax
100048cd:	mov    eax,ds:0x10080c24
100048d2:	mov    DWORD PTR [eax+0x8],eax
100048d5:	and    DWORD PTR ds:0x10080c28,0x0
100048dc:	push   0x100659dc
100048e1:	call   0x100434b4
100048e6:	pop    ecx
100048e7:	mov    eax,0x10080c20
100048ec:	call   0x10059d4d
100048f1:	ret    
100048f2:	push   0x4
100048f4:	mov    eax,0x1005ff74
100048f9:	call   0x10059c75
100048fe:	and    DWORD PTR [ebp-0x10],0x0
10004902:	and    DWORD PTR [ebp-0x4],0x0
10004906:	lea    eax,[ebp+0x8]
10004909:	mov    esi,edi
1000490b:	call   0x10004b2b
10004910:	mov    eax,DWORD PTR [edi+0x14]
10004913:	xor    ebx,ebx
10004915:	inc    ebx
10004916:	cmp    ebx,eax
10004918:	jae    0x1000495d
1000491a:	jbe    0x10004921
1000491c:	call   0x100435f0
10004921:	cmp    DWORD PTR [edi+0x18],0x8
10004925:	jb     0x1000492c
10004927:	mov    esi,DWORD PTR [edi+0x4]
1000492a:	jmp    0x1000492f
1000492c:	lea    esi,[edi+0x4]
1000492f:	lea    eax,[ebx-0x1]
10004932:	cmp    eax,DWORD PTR [edi+0x14]
10004935:	lea    esi,[esi+ebx*2]
10004938:	jbe    0x1000493f
1000493a:	call   0x100435f0
1000493f:	cmp    DWORD PTR [edi+0x18],0x8
10004943:	jb     0x1000494a
10004945:	mov    eax,DWORD PTR [edi+0x4]
10004948:	jmp    0x1000494d
1000494a:	lea    eax,[edi+0x4]
1000494d:	mov    ax,WORD PTR [eax+ebx*2-0x2]
10004952:	xor    WORD PTR [esi],ax
10004955:	mov    eax,DWORD PTR [edi+0x14]
10004958:	inc    ebx
10004959:	cmp    ebx,eax
1000495b:	jb     0x10004921
1000495d:	push   0x1
1000495f:	xor    ebx,ebx
10004961:	lea    esi,[ebp+0x8]
10004964:	call   0x100051f3
10004969:	mov    eax,edi
1000496b:	call   0x10059d4d
10004970:	ret    
10004971:	push   esi
10004972:	mov    esi,eax
10004974:	cmp    esi,0x9249249
1000497a:	jbe    0x10004981
1000497c:	jmp    0x100120ac
10004981:	mov    ecx,esi
10004983:	call   0x10004e58
10004988:	imul   esi,esi,0x1c
1000498b:	add    esi,eax
1000498d:	mov    DWORD PTR [edi+0x4],eax
10004990:	mov    DWORD PTR [edi+0x8],eax
10004993:	mov    DWORD PTR [edi+0xc],esi
10004996:	mov    al,0x1
10004998:	pop    esi
10004999:	ret    
1000499a:	mov    eax,DWORD PTR [esi+0x4]
1000499d:	test   eax,eax
1000499f:	je     0x100049b2
100049a1:	push   DWORD PTR [esi+0x8]
100049a4:	call   0x10004ec8
100049a9:	push   DWORD PTR [esi+0x4]
100049ac:	call   0x100430d2
100049b1:	pop    ecx
100049b2:	and    DWORD PTR [esi+0x4],0x0
100049b6:	and    DWORD PTR [esi+0x8],0x0
100049ba:	and    DWORD PTR [esi+0xc],0x0
100049be:	ret    
100049bf:	mov    eax,DWORD PTR [esi]
100049c1:	test   eax,eax
100049c3:	je     0x100049cc
100049c5:	push   eax
100049c6:	call   DWORD PTR ds:0x10066070
100049cc:	mov    eax,DWORD PTR [esp+0x4]
100049d0:	mov    DWORD PTR [esi],eax
100049d2:	ret    0x4
100049d5:	push   0x64
100049d7:	mov    eax,0x1006085c
100049dc:	call   0x10059c75
100049e1:	push   DWORD PTR [ebp+0xc]
100049e4:	mov    edi,DWORD PTR [ebp+0x8]
100049e7:	lea    ebx,[ebp-0x14]
100049ea:	call   0x100050aa
100049ef:	mov    eax,DWORD PTR [edi+0x4]
100049f2:	mov    DWORD PTR [ebp-0x1c],edi
100049f5:	lea    edi,[ebp-0x1c]
100049f8:	mov    esi,ebx
100049fa:	mov    DWORD PTR [ebp-0x18],eax
100049fd:	call   0x10004b10
10004a02:	mov    ebx,DWORD PTR [ebp-0x10]
10004a05:	xor    esi,esi
10004a07:	test   al,al
10004a09:	jne    0x10004a1a
10004a0b:	mov    eax,DWORD PTR [ebp+0xc]
10004a0e:	lea    ecx,[ebx+0xc]
10004a11:	call   0x10004ea2
10004a16:	test   al,al
10004a18:	je     0x10004a88
10004a1a:	push   esi
10004a1b:	lea    ecx,[ebp-0x38]
10004a1e:	mov    DWORD PTR [ebp-0x20],0xf
10004a25:	call   0x10001420
10004a2a:	push   DWORD PTR [ebp+0xc]
10004a2d:	lea    ecx,[ebp-0x70]
10004a30:	mov    DWORD PTR [ebp-0x4],esi
10004a33:	call   0x100011ab
10004a38:	lea    eax,[ebp-0x38]
10004a3b:	push   eax
10004a3c:	lea    ecx,[ebp-0x54]
10004a3f:	mov    BYTE PTR [ebp-0x4],0x1
10004a43:	call   0x100011ab
10004a48:	push   ebx
10004a49:	mov    BYTE PTR [ebp-0x4],0x2
10004a4d:	push   DWORD PTR [ebp-0x14]
10004a50:	lea    eax,[ebp-0x70]
10004a53:	push   eax
10004a54:	lea    eax,[ebp-0x1c]
10004a57:	push   eax
10004a58:	mov    eax,DWORD PTR [ebp+0x8]
10004a5b:	call   0x10004f27
10004a60:	mov    edi,DWORD PTR [eax]
10004a62:	mov    ebx,DWORD PTR [eax+0x4]
10004a65:	push   esi
10004a66:	push   0x1
10004a68:	lea    ecx,[ebp-0x54]
10004a6b:	call   0x100012f4
10004a70:	push   esi
10004a71:	push   0x1
10004a73:	lea    ecx,[ebp-0x70]
10004a76:	call   0x100012f4
10004a7b:	push   esi
10004a7c:	push   0x1
10004a7e:	lea    ecx,[ebp-0x38]
10004a81:	call   0x100012f4
10004a86:	jmp    0x10004a8b
10004a88:	mov    edi,DWORD PTR [ebp-0x14]
10004a8b:	cmp    edi,esi
10004a8d:	jne    0x10004a94
10004a8f:	call   0x100435f0
10004a94:	cmp    ebx,DWORD PTR [edi+0x4]
10004a97:	jne    0x10004a9e
10004a99:	call   0x100435f0
10004a9e:	lea    eax,[ebx+0x28]
10004aa1:	call   0x10059d4d
10004aa6:	ret    0x8
10004aa9:	push   ebp
10004aaa:	mov    ebp,esp
10004aac:	sub    esp,0x18
10004aaf:	push   ebx
10004ab0:	push   esi
10004ab1:	push   edi
10004ab2:	push   DWORD PTR [ebp+0x10]
10004ab5:	mov    edi,DWORD PTR [ebp+0x8]
10004ab8:	lea    ebx,[ebp-0xc]
10004abb:	call   0x100050aa
10004ac0:	mov    eax,DWORD PTR [edi+0x4]
10004ac3:	mov    DWORD PTR [ebp-0x14],edi
10004ac6:	lea    edi,[ebp-0x14]
10004ac9:	mov    esi,ebx
10004acb:	mov    DWORD PTR [ebp-0x10],eax
10004ace:	call   0x10004b10
10004ad3:	test   al,al
10004ad5:	jne    0x10004aed
10004ad7:	mov    ecx,DWORD PTR [ebp-0x8]
10004ada:	mov    eax,DWORD PTR [ebp+0x10]
10004add:	add    ecx,0xc
10004ae0:	call   0x10004ea2
10004ae5:	test   al,al
10004ae7:	jne    0x10004aed
10004ae9:	mov    ecx,ebx
10004aeb:	jmp    0x10004afc
10004aed:	mov    eax,DWORD PTR [ebp+0x8]
10004af0:	mov    ecx,DWORD PTR [eax+0x4]
10004af3:	mov    DWORD PTR [ebp-0x10],ecx
10004af6:	mov    DWORD PTR [ebp-0x14],eax
10004af9:	lea    ecx,[ebp-0x14]
10004afc:	mov    edx,DWORD PTR [ecx]
10004afe:	mov    eax,DWORD PTR [ebp+0xc]
10004b01:	mov    ecx,DWORD PTR [ecx+0x4]
10004b04:	pop    edi
10004b05:	pop    esi
10004b06:	mov    DWORD PTR [eax],edx
10004b08:	mov    DWORD PTR [eax+0x4],ecx
10004b0b:	pop    ebx
10004b0c:	leave  
10004b0d:	ret    0xc
10004b10:	mov    eax,DWORD PTR [esi]
10004b12:	test   eax,eax
10004b14:	je     0x10004b1a
10004b16:	cmp    eax,DWORD PTR [edi]
10004b18:	je     0x10004b1f
10004b1a:	call   0x100435f0
10004b1f:	mov    eax,DWORD PTR [esi+0x4]
10004b22:	sub    eax,DWORD PTR [edi+0x4]
10004b25:	neg    eax
10004b27:	sbb    eax,eax
10004b29:	inc    eax
10004b2a:	ret    
10004b2b:	and    DWORD PTR [esi+0x14],0x0
10004b2f:	push   ebx
10004b30:	push   0xffffffff
10004b32:	mov    DWORD PTR [esi+0x18],0x7
10004b39:	and    WORD PTR [esi+0x4],0x0
10004b3e:	push   esi
10004b3f:	xor    ebx,ebx
10004b41:	call   0x100050e8
10004b46:	mov    eax,esi
10004b48:	pop    ebx
10004b49:	ret    
10004b4a:	push   ebx
10004b4b:	push   0x1
10004b4d:	xor    ebx,ebx
10004b4f:	call   0x100051f3
10004b54:	pop    ebx
10004b55:	ret    
10004b56:	push   0x64
10004b58:	mov    eax,0x10060829
10004b5d:	call   0x10059c75
10004b62:	push   DWORD PTR [ebp+0xc]
10004b65:	mov    edi,DWORD PTR [ebp+0x8]
10004b68:	lea    ebx,[ebp-0x14]
10004b6b:	call   0x100053fd
10004b70:	mov    eax,DWORD PTR [edi+0x4]
10004b73:	mov    DWORD PTR [ebp-0x1c],edi
10004b76:	lea    edi,[ebp-0x1c]
10004b79:	mov    esi,ebx
10004b7b:	mov    DWORD PTR [ebp-0x18],eax
10004b7e:	call   0x10004b10
10004b83:	test   al,al
10004b85:	mov    ebx,DWORD PTR [ebp-0x10]
10004b88:	jne    0x10004b99
10004b8a:	mov    eax,DWORD PTR [ebp+0xc]
10004b8d:	lea    ecx,[ebx+0xc]
10004b90:	call   0x1000543b
10004b95:	test   al,al
10004b97:	je     0x10004c08
10004b99:	xor    eax,eax
10004b9b:	mov    DWORD PTR [ebp-0x20],0x7
10004ba2:	mov    DWORD PTR [ebp-0x24],eax
10004ba5:	mov    WORD PTR [ebp-0x34],ax
10004ba9:	mov    DWORD PTR [ebp-0x4],eax
10004bac:	mov    eax,DWORD PTR [ebp+0xc]
10004baf:	lea    esi,[ebp-0x70]
10004bb2:	call   0x10004b2b
10004bb7:	lea    eax,[ebp-0x38]
10004bba:	lea    esi,[ebp-0x54]
10004bbd:	mov    BYTE PTR [ebp-0x4],0x1
10004bc1:	call   0x10004b2b
10004bc6:	push   ebx
10004bc7:	mov    BYTE PTR [ebp-0x4],0x2
10004bcb:	push   DWORD PTR [ebp-0x14]
10004bce:	lea    eax,[ebp-0x70]
10004bd1:	push   eax
10004bd2:	lea    eax,[ebp-0x1c]
10004bd5:	push   eax
10004bd6:	mov    eax,DWORD PTR [ebp+0x8]
10004bd9:	call   0x1000527a
10004bde:	mov    edi,DWORD PTR [eax]
10004be0:	mov    eax,DWORD PTR [eax+0x4]
10004be3:	push   0x1
10004be5:	xor    ebx,ebx
10004be7:	mov    DWORD PTR [ebp-0x10],eax
10004bea:	call   0x100051f3
10004bef:	push   0x1
10004bf1:	lea    esi,[ebp-0x70]
10004bf4:	call   0x100051f3
10004bf9:	push   0x1
10004bfb:	lea    esi,[ebp-0x38]
10004bfe:	call   0x100051f3
10004c03:	mov    ebx,DWORD PTR [ebp-0x10]
10004c06:	jmp    0x10004c0b
10004c08:	mov    edi,DWORD PTR [ebp-0x14]
10004c0b:	test   edi,edi
10004c0d:	jne    0x10004c14
10004c0f:	call   0x100435f0
10004c14:	cmp    ebx,DWORD PTR [edi+0x4]
10004c17:	jne    0x10004c1e
10004c19:	call   0x100435f0
10004c1e:	lea    eax,[ebx+0x28]
10004c21:	call   0x10059d4d
10004c26:	ret    0x8
10004c29:	push   ebp
10004c2a:	mov    ebp,esp
10004c2c:	sub    esp,0x18
10004c2f:	push   ebx
10004c30:	push   esi
10004c31:	push   edi
10004c32:	push   DWORD PTR [ebp+0x10]
10004c35:	mov    edi,DWORD PTR [ebp+0x8]
10004c38:	lea    ebx,[ebp-0xc]
10004c3b:	call   0x100053fd
10004c40:	mov    eax,DWORD PTR [edi+0x4]
10004c43:	mov    DWORD PTR [ebp-0x14],edi
10004c46:	lea    edi,[ebp-0x14]
10004c49:	mov    esi,ebx
10004c4b:	mov    DWORD PTR [ebp-0x10],eax
10004c4e:	call   0x10004b10
10004c53:	test   al,al
10004c55:	jne    0x10004c6d
10004c57:	mov    ecx,DWORD PTR [ebp-0x8]
10004c5a:	mov    eax,DWORD PTR [ebp+0x10]
10004c5d:	add    ecx,0xc
10004c60:	call   0x1000543b
10004c65:	test   al,al
10004c67:	jne    0x10004c6d
10004c69:	mov    ecx,ebx
10004c6b:	jmp    0x10004c7c
10004c6d:	mov    eax,DWORD PTR [ebp+0x8]
10004c70:	mov    ecx,DWORD PTR [eax+0x4]
10004c73:	mov    DWORD PTR [ebp-0x10],ecx
10004c76:	mov    DWORD PTR [ebp-0x14],eax
10004c79:	lea    ecx,[ebp-0x14]
10004c7c:	mov    edx,DWORD PTR [ecx]
10004c7e:	mov    eax,DWORD PTR [ebp+0xc]
10004c81:	mov    ecx,DWORD PTR [ecx+0x4]
10004c84:	pop    edi
10004c85:	pop    esi
10004c86:	mov    DWORD PTR [eax],edx
10004c88:	mov    DWORD PTR [eax+0x4],ecx
10004c8b:	pop    ebx
10004c8c:	leave  
10004c8d:	ret    0xc
10004c90:	push   0x0
10004c92:	push   0x1
10004c94:	lea    ecx,[esi+0x1c]
10004c97:	call   0x100012f4
10004c9c:	push   0x0
10004c9e:	push   0x1
10004ca0:	mov    ecx,esi
10004ca2:	call   0x100012f4
10004ca7:	ret    
10004ca8:	push   ebx
10004ca9:	push   esi
10004caa:	push   0x1
10004cac:	lea    esi,[edi+0x1c]
10004caf:	xor    ebx,ebx
10004cb1:	call   0x100051f3
10004cb6:	push   0x1
10004cb8:	mov    esi,edi
10004cba:	call   0x100051f3
10004cbf:	pop    esi
10004cc0:	pop    ebx
10004cc1:	ret    
10004cc2:	push   ebp
10004cc3:	mov    ebp,esp
10004cc5:	push   ecx
10004cc6:	push   ebx
10004cc7:	mov    ebx,DWORD PTR [ebp+0xc]
10004cca:	push   edi
10004ccb:	mov    edi,eax
10004ccd:	mov    eax,DWORD PTR [edi+0x14]
10004cd0:	cmp    eax,DWORD PTR [ebp+0x8]
10004cd3:	jae    0x10004cda
10004cd5:	call   0x1005747f
10004cda:	mov    eax,DWORD PTR [edi+0x14]
10004cdd:	sub    eax,DWORD PTR [ebp+0x8]
10004ce0:	cmp    eax,ebx
10004ce2:	jae    0x10004ce9
10004ce4:	mov    ebx,eax
10004ce6:	mov    DWORD PTR [ebp+0xc],ebx
10004ce9:	or     eax,0xffffffff
10004cec:	sub    eax,DWORD PTR [esi+0x14]
10004cef:	cmp    eax,ebx
10004cf1:	jbe    0x10004cfd
10004cf3:	mov    eax,DWORD PTR [esi+0x14]
10004cf6:	lea    ecx,[eax+ebx*1]
10004cf9:	cmp    ecx,eax
10004cfb:	jae    0x10004d02
10004cfd:	call   0x10057440
10004d02:	test   ebx,ebx
10004d04:	jbe    0x10004d5e
10004d06:	mov    eax,DWORD PTR [esi+0x14]
10004d09:	add    eax,ebx
10004d0b:	push   0x0
10004d0d:	push   eax
10004d0e:	mov    ecx,esi
10004d10:	mov    DWORD PTR [ebp-0x4],eax
10004d13:	call   0x1000143c
10004d18:	test   al,al
10004d1a:	je     0x10004d5e
10004d1c:	cmp    DWORD PTR [edi+0x18],0x10
10004d20:	jb     0x10004d27
10004d22:	mov    edi,DWORD PTR [edi+0x4]
10004d25:	jmp    0x10004d2a
10004d27:	add    edi,0x4
10004d2a:	mov    eax,DWORD PTR [esi+0x18]
10004d2d:	cmp    eax,0x10
10004d30:	jb     0x10004d37
10004d32:	mov    edx,DWORD PTR [esi+0x4]
10004d35:	jmp    0x10004d3a
10004d37:	lea    edx,[esi+0x4]
10004d3a:	push   DWORD PTR [ebp+0xc]
10004d3d:	mov    ecx,DWORD PTR [esi+0x14]
10004d40:	mov    ebx,DWORD PTR [ebp+0x8]
10004d43:	add    edi,ebx
10004d45:	sub    eax,ecx
10004d47:	push   edi
10004d48:	push   eax
10004d49:	add    ecx,edx
10004d4b:	push   ecx
10004d4c:	call   0x10001036
10004d51:	add    esp,0x10
10004d54:	push   DWORD PTR [ebp-0x4]
10004d57:	mov    ecx,esi
10004d59:	call   0x10001420
10004d5e:	pop    edi
10004d5f:	mov    eax,esi
10004d61:	pop    ebx
10004d62:	leave  
10004d63:	ret    0x8
10004d66:	push   ebx
10004d67:	mov    ebx,DWORD PTR [esp+0xc]
10004d6b:	push   esi
10004d6c:	push   edi
10004d6d:	mov    edi,DWORD PTR [esp+0x10]
10004d71:	mov    esi,eax
10004d73:	push   edi
10004d74:	mov    ecx,esi
10004d76:	call   0x100015e6
10004d7b:	test   al,al
10004d7d:	je     0x10004d9a
10004d7f:	cmp    DWORD PTR [esi+0x18],0x10
10004d83:	jb     0x10004d8a
10004d85:	mov    eax,DWORD PTR [esi+0x4]
10004d88:	jmp    0x10004d8d
10004d8a:	lea    eax,[esi+0x4]
10004d8d:	sub    edi,eax
10004d8f:	push   ebx
10004d90:	push   edi
10004d91:	mov    eax,esi
10004d93:	call   0x10004cc2
10004d98:	jmp    0x10004dfa
10004d9a:	or     eax,0xffffffff
10004d9d:	sub    eax,DWORD PTR [esi+0x14]
10004da0:	cmp    eax,ebx
10004da2:	jbe    0x10004dae
10004da4:	mov    eax,DWORD PTR [esi+0x14]
10004da7:	lea    ecx,[eax+ebx*1]
10004daa:	cmp    ecx,eax
10004dac:	jae    0x10004db3
10004dae:	call   0x10057440
10004db3:	test   ebx,ebx
10004db5:	jbe    0x10004df8
10004db7:	mov    edi,DWORD PTR [esi+0x14]
10004dba:	push   0x0
10004dbc:	add    edi,ebx
10004dbe:	push   edi
10004dbf:	mov    ecx,esi
10004dc1:	call   0x1000143c
10004dc6:	test   al,al
10004dc8:	je     0x10004df8
10004dca:	mov    eax,DWORD PTR [esi+0x18]
10004dcd:	cmp    eax,0x10
10004dd0:	jb     0x10004dd7
10004dd2:	mov    edx,DWORD PTR [esi+0x4]
10004dd5:	jmp    0x10004dda
10004dd7:	lea    edx,[esi+0x4]
10004dda:	mov    ecx,DWORD PTR [esi+0x14]
10004ddd:	push   ebx
10004dde:	push   DWORD PTR [esp+0x14]
10004de2:	sub    eax,ecx
10004de4:	push   eax
10004de5:	add    ecx,edx
10004de7:	push   ecx
10004de8:	call   0x10001036
10004ded:	add    esp,0x10
10004df0:	push   edi
10004df1:	mov    ecx,esi
10004df3:	call   0x10001420
10004df8:	mov    eax,esi
10004dfa:	pop    edi
10004dfb:	pop    esi
10004dfc:	pop    ebx
10004dfd:	ret    0x8
10004e00:	push   esi
10004e01:	mov    esi,eax
10004e03:	mov    ecx,DWORD PTR [esi]
10004e05:	mov    eax,DWORD PTR [ecx]
10004e07:	push   edi
10004e08:	call   DWORD PTR [eax+0x10]
10004e0b:	lea    edx,[esi+0xc]
10004e0e:	cmp    DWORD PTR [edx],0x0
10004e11:	jl     0x10004e22
10004e13:	cmp    eax,DWORD PTR [esi]
10004e15:	jne    0x10004e22
10004e17:	xor    eax,eax
10004e19:	mov    edi,esi
10004e1b:	inc    eax
10004e1c:	lock xadd DWORD PTR [edx],eax
10004e20:	jmp    0x10004e53
10004e22:	mov    edx,DWORD PTR [eax]
10004e24:	push   0x2
10004e26:	push   DWORD PTR [esi+0x4]
10004e29:	mov    ecx,eax
10004e2b:	call   DWORD PTR [edx]
10004e2d:	mov    edi,eax
10004e2f:	test   edi,edi
10004e31:	jne    0x10004e38
10004e33:	jmp    0x1000233e
10004e38:	mov    eax,DWORD PTR [esi+0x4]
10004e3b:	mov    DWORD PTR [edi+0x4],eax
10004e3e:	mov    eax,DWORD PTR [esi+0x4]
10004e41:	add    esi,0x10
10004e44:	inc    eax
10004e45:	push   esi
10004e46:	push   eax
10004e47:	lea    ecx,[edi+0x10]
10004e4a:	push   ecx
10004e4b:	call   0x10002323
10004e50:	add    esp,0xc
10004e53:	mov    eax,edi
10004e55:	pop    edi
10004e56:	pop    esi
10004e57:	ret    
10004e58:	push   ebp
10004e59:	mov    ebp,esp
10004e5b:	sub    esp,0x10
10004e5e:	test   ecx,ecx
10004e60:	ja     0x10004e70
10004e62:	xor    ecx,ecx
10004e64:	imul   ecx,ecx,0x1c
10004e67:	push   ecx
10004e68:	call   0x100436de
10004e6d:	pop    ecx
10004e6e:	leave  
10004e6f:	ret    
10004e70:	or     eax,0xffffffff
10004e73:	xor    edx,edx
10004e75:	div    ecx
10004e77:	cmp    eax,0x1c
10004e7a:	jae    0x10004e64
10004e7c:	and    DWORD PTR [ebp-0x4],0x0
10004e80:	lea    eax,[ebp-0x4]
10004e83:	push   eax
10004e84:	lea    ecx,[ebp-0x10]
10004e87:	call   0x10043152
10004e8c:	push   0x10074e18
10004e91:	lea    eax,[ebp-0x10]
10004e94:	push   eax
10004e95:	mov    DWORD PTR [ebp-0x10],0x100665c8
10004e9c:	call   0x10047c54
10004ea1:	int3   
10004ea2:	cmp    DWORD PTR [ecx+0x18],0x10
10004ea6:	push   edi
10004ea7:	mov    edi,DWORD PTR [ecx+0x14]
10004eaa:	jb     0x10004eb1
10004eac:	mov    ecx,DWORD PTR [ecx+0x4]
10004eaf:	jmp    0x10004eb4
10004eb1:	add    ecx,0x4
10004eb4:	push   ecx
10004eb5:	mov    ecx,DWORD PTR [eax+0x14]
10004eb8:	call   0x100046d0
10004ebd:	xor    ecx,ecx
10004ebf:	test   eax,eax
10004ec1:	setl   cl
10004ec4:	mov    al,cl
10004ec6:	pop    edi
10004ec7:	ret    
10004ec8:	push   esi
10004ec9:	mov    esi,eax
10004ecb:	jmp    0x10004ed8
10004ecd:	push   0x0
10004ecf:	push   esi
10004ed0:	call   0x10006657
10004ed5:	add    esi,0x1c
10004ed8:	cmp    esi,DWORD PTR [esp+0x8]
10004edc:	jne    0x10004ecd
10004ede:	pop    esi
10004edf:	ret    0x4
10004ee2:	push   ebp
10004ee3:	mov    ebp,esp
10004ee5:	and    esp,0xfffffff8
10004ee8:	mov    eax,ds:0x10080c30
10004eed:	mov    edx,DWORD PTR [eax]
10004eef:	sub    esp,0xc
10004ef2:	push   esi
10004ef3:	push   eax
10004ef4:	mov    ecx,0x10080c2c
10004ef9:	mov    esi,ecx
10004efb:	push   esi
10004efc:	push   edx
10004efd:	push   ecx
10004efe:	lea    eax,[esp+0x18]
10004f02:	push   eax
10004f03:	call   0x10005a16
10004f08:	push   DWORD PTR ds:0x10080c30
10004f0e:	call   0x100430d2
10004f13:	and    DWORD PTR ds:0x10080c30,0x0
10004f1a:	and    DWORD PTR ds:0x10080c34,0x0
10004f21:	pop    ecx
10004f22:	pop    esi
10004f23:	mov    esp,ebp
10004f25:	pop    ebp
10004f26:	ret    
10004f27:	push   ebp
10004f28:	mov    ebp,esp
10004f2a:	sub    esp,0x14
10004f2d:	push   ebx
10004f2e:	mov    ebx,eax
10004f30:	xor    eax,eax
10004f32:	cmp    DWORD PTR [ebx+0x8],eax
10004f35:	push   esi
10004f36:	push   edi
10004f37:	mov    DWORD PTR [ebp-0x8],eax
10004f3a:	mov    DWORD PTR [ebp-0x4],eax
10004f3d:	jne    0x10004f59
10004f3f:	mov    ecx,DWORD PTR [ebx+0x4]
10004f42:	push   DWORD PTR [ebp+0xc]
10004f45:	push   0x1
10004f47:	mov    esi,ebx
10004f49:	push   DWORD PTR [ebp+0x8]
10004f4c:	call   0x1000553a
10004f51:	mov    eax,DWORD PTR [ebp+0x8]
10004f54:	jmp    0x100050a3
10004f59:	mov    eax,DWORD PTR [ebx+0x4]
10004f5c:	mov    eax,DWORD PTR [eax]
10004f5e:	lea    edi,[ebp-0x10]
10004f61:	lea    esi,[ebp+0x10]
10004f64:	mov    DWORD PTR [ebp-0xc],eax
10004f67:	mov    DWORD PTR [ebp-0x10],ebx
10004f6a:	call   0x10004b10
10004f6f:	test   al,al
10004f71:	je     0x10004f8d
10004f73:	mov    esi,DWORD PTR [ebp+0x14]
10004f76:	mov    eax,DWORD PTR [ebp+0xc]
10004f79:	lea    ecx,[esi+0xc]
10004f7c:	call   0x10004ea2
10004f81:	test   al,al
10004f83:	je     0x10005088
10004f89:	mov    ecx,esi
10004f8b:	jmp    0x10004f42
10004f8d:	mov    eax,DWORD PTR [ebx+0x4]
10004f90:	lea    edi,[ebp-0x10]
10004f93:	lea    esi,[ebp+0x10]
10004f96:	mov    DWORD PTR [ebp-0xc],eax
10004f99:	mov    DWORD PTR [ebp-0x10],ebx
10004f9c:	call   0x10004b10
10004fa1:	test   al,al
10004fa3:	je     0x10004fce
10004fa5:	mov    eax,DWORD PTR [ebx+0x4]
10004fa8:	mov    eax,DWORD PTR [eax+0x8]
10004fab:	mov    ecx,DWORD PTR [ebp+0xc]
10004fae:	add    eax,0xc
10004fb1:	call   0x10004ea2
10004fb6:	test   al,al
10004fb8:	je     0x10005088
10004fbe:	push   DWORD PTR [ebp+0xc]
10004fc1:	mov    eax,DWORD PTR [ebx+0x4]
10004fc4:	mov    ecx,DWORD PTR [eax+0x8]
10004fc7:	push   0x0
10004fc9:	jmp    0x10004f47
10004fce:	mov    edi,DWORD PTR [ebp+0x14]
10004fd1:	mov    eax,DWORD PTR [ebp+0xc]
10004fd4:	lea    ecx,[edi+0xc]
10004fd7:	call   0x10004ea2
10004fdc:	test   al,al
10004fde:	je     0x10005024
10004fe0:	mov    eax,DWORD PTR [ebp+0x10]
10004fe3:	lea    esi,[ebp-0x8]
10004fe6:	mov    DWORD PTR [ebp-0x8],eax
10004fe9:	mov    DWORD PTR [ebp-0x4],edi
10004fec:	call   0x100059b5
10004ff1:	mov    eax,DWORD PTR [eax+0x4]
10004ff4:	mov    ecx,DWORD PTR [ebp+0xc]
10004ff7:	add    eax,0xc
10004ffa:	call   0x10004ea2
10004fff:	test   al,al
10005001:	je     0x10005024
10005003:	mov    ecx,DWORD PTR [ebp-0x4]
10005006:	mov    eax,DWORD PTR [ecx+0x8]
10005009:	cmp    BYTE PTR [eax+0x45],0x0
1000500d:	push   DWORD PTR [ebp+0xc]
10005010:	mov    esi,ebx
10005012:	je     0x1000501b
10005014:	push   0x0
10005016:	jmp    0x10004f49
1000501b:	push   0x1
1000501d:	mov    ecx,edi
1000501f:	jmp    0x10004f49
10005024:	mov    ecx,DWORD PTR [ebp+0xc]
10005027:	lea    eax,[edi+0xc]
1000502a:	call   0x10004ea2
1000502f:	test   al,al
10005031:	je     0x10005088
10005033:	mov    eax,DWORD PTR [ebp+0x10]
10005036:	mov    DWORD PTR [ebp-0x8],eax
10005039:	mov    eax,DWORD PTR [ebx+0x4]
1000503c:	lea    esi,[ebp-0x8]
1000503f:	mov    DWORD PTR [ebp-0x4],edi
10005042:	mov    DWORD PTR [ebp-0xc],eax
10005045:	mov    DWORD PTR [ebp-0x10],ebx
10005048:	call   0x10005968
1000504d:	lea    edi,[ebp-0x10]
10005050:	mov    esi,eax
10005052:	call   0x10004b10
10005057:	test   al,al
10005059:	jne    0x1000506d
1000505b:	mov    ecx,DWORD PTR [ebp-0x4]
1000505e:	mov    eax,DWORD PTR [ebp+0xc]
10005061:	add    ecx,0xc
10005064:	call   0x10004ea2
10005069:	test   al,al
1000506b:	je     0x10005088
1000506d:	mov    ecx,DWORD PTR [ebp+0x14]
10005070:	mov    eax,DWORD PTR [ecx+0x8]
10005073:	cmp    BYTE PTR [eax+0x45],0x0
10005077:	push   DWORD PTR [ebp+0xc]
1000507a:	mov    esi,ebx
1000507c:	jne    0x10005014
1000507e:	mov    ecx,DWORD PTR [ebp-0x4]
10005081:	push   0x1
10005083:	jmp    0x10004f49
10005088:	push   DWORD PTR [ebp+0xc]
1000508b:	push   ebx
1000508c:	lea    ebx,[ebp-0x14]
1000508f:	call   0x10005479
10005094:	mov    edx,DWORD PTR [eax]
10005096:	mov    ecx,DWORD PTR [ebp+0x8]
10005099:	mov    DWORD PTR [ecx],edx
1000509b:	mov    eax,DWORD PTR [eax+0x4]
1000509e:	mov    DWORD PTR [ecx+0x4],eax
100050a1:	mov    eax,ecx
100050a3:	pop    edi
100050a4:	pop    esi
100050a5:	pop    ebx
100050a6:	leave  
100050a7:	ret    0x10
100050aa:	push   ebp
100050ab:	mov    ebp,esp
100050ad:	push   ecx
100050ae:	mov    eax,DWORD PTR [edi+0x4]
100050b1:	push   esi
100050b2:	mov    esi,DWORD PTR [eax+0x4]
100050b5:	mov    DWORD PTR [ebp-0x4],eax
100050b8:	jmp    0x100050d3
100050ba:	mov    ecx,DWORD PTR [ebp+0x8]
100050bd:	lea    eax,[esi+0xc]
100050c0:	call   0x10004ea2
100050c5:	test   al,al
100050c7:	je     0x100050ce
100050c9:	mov    esi,DWORD PTR [esi+0x8]
100050cc:	jmp    0x100050d3
100050ce:	mov    DWORD PTR [ebp-0x4],esi
100050d1:	mov    esi,DWORD PTR [esi]
100050d3:	cmp    BYTE PTR [esi+0x45],0x0
100050d7:	je     0x100050ba
100050d9:	mov    eax,DWORD PTR [ebp-0x4]
100050dc:	mov    DWORD PTR [ebx+0x4],eax
100050df:	mov    DWORD PTR [ebx],edi
100050e1:	mov    eax,ebx
100050e3:	pop    esi
100050e4:	leave  
100050e5:	ret    0x4
100050e8:	push   ebp
100050e9:	mov    ebp,esp
100050eb:	push   esi
100050ec:	mov    esi,eax
100050ee:	cmp    DWORD PTR [esi+0x14],ebx
100050f1:	push   edi
100050f2:	jae    0x100050f9
100050f4:	call   0x1005747f
100050f9:	mov    edi,DWORD PTR [esi+0x14]
100050fc:	sub    edi,ebx
100050fe:	cmp    DWORD PTR [ebp+0xc],edi
10005101:	jae    0x10005106
10005103:	mov    edi,DWORD PTR [ebp+0xc]
10005106:	mov    eax,DWORD PTR [ebp+0x8]
10005109:	cmp    eax,esi
1000510b:	jne    0x10005122
1000510d:	push   0xffffffff
1000510f:	add    edi,ebx
10005111:	mov    esi,eax
10005113:	call   0x10005685
10005118:	push   ebx
10005119:	xor    edi,edi
1000511b:	call   0x10005685
10005120:	jmp    0x10005165
10005122:	call   0x10005717
10005127:	test   al,al
10005129:	je     0x10005165
1000512b:	cmp    DWORD PTR [esi+0x18],0x8
1000512f:	jb     0x10005136
10005131:	mov    eax,DWORD PTR [esi+0x4]
10005134:	jmp    0x10005139
10005136:	lea    eax,[esi+0x4]
10005139:	mov    esi,DWORD PTR [ebp+0x8]
1000513c:	mov    edx,DWORD PTR [esi+0x18]
1000513f:	cmp    edx,0x8
10005142:	jb     0x10005149
10005144:	mov    ecx,DWORD PTR [esi+0x4]
10005147:	jmp    0x1000514c
10005149:	lea    ecx,[esi+0x4]
1000514c:	lea    eax,[eax+ebx*2]
1000514f:	push   eax
10005150:	push   edx
10005151:	push   ecx
10005152:	mov    eax,edi
10005154:	call   0x100065d5
10005159:	add    esp,0xc
1000515c:	mov    ecx,edi
1000515e:	mov    eax,esi
10005160:	call   0x10005700
10005165:	mov    eax,DWORD PTR [ebp+0x8]
10005168:	pop    edi
10005169:	pop    esi
1000516a:	pop    ebp
1000516b:	ret    0x8
1000516e:	mov    ecx,DWORD PTR [esi+0x18]
10005171:	cmp    ecx,0x8
10005174:	push   ebx
10005175:	push   edi
10005176:	mov    edi,eax
10005178:	lea    ebx,[esi+0x4]
1000517b:	jb     0x10005181
1000517d:	mov    eax,DWORD PTR [ebx]
1000517f:	jmp    0x10005183
10005181:	mov    eax,ebx
10005183:	cmp    DWORD PTR [esp+0xc],eax
10005187:	jb     0x100051be
10005189:	cmp    ecx,0x8
1000518c:	jb     0x10005192
1000518e:	mov    eax,DWORD PTR [ebx]
10005190:	jmp    0x10005194
10005192:	mov    eax,ebx
10005194:	mov    edx,DWORD PTR [esi+0x14]
10005197:	lea    eax,[eax+edx*2]
1000519a:	cmp    eax,DWORD PTR [esp+0xc]
1000519e:	jbe    0x100051be
100051a0:	cmp    ecx,0x8
100051a3:	jb     0x100051a9
100051a5:	mov    eax,DWORD PTR [ebx]
100051a7:	jmp    0x100051ab
100051a9:	mov    eax,ebx
100051ab:	mov    ebx,DWORD PTR [esp+0xc]
100051af:	sub    ebx,eax
100051b1:	push   edi
100051b2:	sar    ebx,1
100051b4:	push   esi
100051b5:	mov    eax,esi
100051b7:	call   0x100050e8
100051bc:	jmp    0x100051ee
100051be:	mov    eax,esi
100051c0:	call   0x10005717
100051c5:	test   al,al
100051c7:	je     0x100051ec
100051c9:	mov    eax,DWORD PTR [esi+0x18]
100051cc:	cmp    eax,0x8
100051cf:	jb     0x100051d3
100051d1:	mov    ebx,DWORD PTR [ebx]
100051d3:	push   DWORD PTR [esp+0xc]
100051d7:	push   eax
100051d8:	push   ebx
100051d9:	mov    eax,edi
100051db:	call   0x100065d5
100051e0:	add    esp,0xc
100051e3:	mov    ecx,edi
100051e5:	mov    eax,esi
100051e7:	call   0x10005700
100051ec:	mov    eax,esi
100051ee:	pop    edi
100051ef:	pop    ebx
100051f0:	ret    0x4
100051f3:	cmp    BYTE PTR [esp+0x4],0x0
100051f8:	je     0x10005222
100051fa:	cmp    DWORD PTR [esi+0x18],0x8
100051fe:	jb     0x10005222
10005200:	test   ebx,ebx
10005202:	lea    eax,[esi+0x4]
10005205:	push   edi
10005206:	mov    edi,DWORD PTR [eax]
10005208:	jbe    0x1000521a
1000520a:	lea    ecx,[ebx+ebx*1]
1000520d:	push   ecx
1000520e:	push   edi
1000520f:	push   0x10
10005211:	push   eax
10005212:	call   0x10043605
10005217:	add    esp,0x10
1000521a:	push   edi
1000521b:	call   0x100430d2
10005220:	pop    ecx
10005221:	pop    edi
10005222:	mov    ecx,ebx
10005224:	mov    eax,esi
10005226:	mov    DWORD PTR [esi+0x18],0x7
1000522d:	call   0x10005700
10005232:	ret    0x4
10005235:	push   ebp
10005236:	mov    ebp,esp
10005238:	and    esp,0xfffffff8
1000523b:	mov    eax,ds:0x10080c24
10005240:	mov    edx,DWORD PTR [eax]
10005242:	sub    esp,0xc
10005245:	push   esi
10005246:	push   eax
10005247:	mov    ecx,0x10080c20
1000524c:	mov    esi,ecx
1000524e:	push   esi
1000524f:	push   edx
10005250:	push   ecx
10005251:	lea    eax,[esp+0x18]
10005255:	push   eax
10005256:	call   0x10005c01
1000525b:	push   DWORD PTR ds:0x10080c24
10005261:	call   0x100430d2
10005266:	and    DWORD PTR ds:0x10080c24,0x0
1000526d:	and    DWORD PTR ds:0x10080c28,0x0
10005274:	pop    ecx
10005275:	pop    esi
10005276:	mov    esp,ebp
10005278:	pop    ebp
10005279:	ret    
1000527a:	push   ebp
1000527b:	mov    ebp,esp
1000527d:	sub    esp,0x14
10005280:	push   ebx
10005281:	mov    ebx,eax
10005283:	xor    eax,eax
10005285:	cmp    DWORD PTR [ebx+0x8],eax
10005288:	push   esi
10005289:	push   edi
1000528a:	mov    DWORD PTR [ebp-0x8],eax
1000528d:	mov    DWORD PTR [ebp-0x4],eax
10005290:	jne    0x100052ac
10005292:	mov    ecx,DWORD PTR [ebx+0x4]
10005295:	push   DWORD PTR [ebp+0xc]
10005298:	push   0x1
1000529a:	mov    esi,ebx
1000529c:	push   DWORD PTR [ebp+0x8]
1000529f:	call   0x1000581d
100052a4:	mov    eax,DWORD PTR [ebp+0x8]
100052a7:	jmp    0x100053f6
100052ac:	mov    eax,DWORD PTR [ebx+0x4]
100052af:	mov    eax,DWORD PTR [eax]
100052b1:	lea    edi,[ebp-0x10]
100052b4:	lea    esi,[ebp+0x10]
100052b7:	mov    DWORD PTR [ebp-0xc],eax
100052ba:	mov    DWORD PTR [ebp-0x10],ebx
100052bd:	call   0x10004b10
100052c2:	test   al,al
100052c4:	je     0x100052e0
100052c6:	mov    esi,DWORD PTR [ebp+0x14]
100052c9:	mov    eax,DWORD PTR [ebp+0xc]
100052cc:	lea    ecx,[esi+0xc]
100052cf:	call   0x1000543b
100052d4:	test   al,al
100052d6:	je     0x100053db
100052dc:	mov    ecx,esi
100052de:	jmp    0x10005295
100052e0:	mov    eax,DWORD PTR [ebx+0x4]
100052e3:	lea    edi,[ebp-0x10]
100052e6:	lea    esi,[ebp+0x10]
100052e9:	mov    DWORD PTR [ebp-0xc],eax
100052ec:	mov    DWORD PTR [ebp-0x10],ebx
100052ef:	call   0x10004b10
100052f4:	test   al,al
100052f6:	je     0x10005321
100052f8:	mov    eax,DWORD PTR [ebx+0x4]
100052fb:	mov    eax,DWORD PTR [eax+0x8]
100052fe:	mov    ecx,DWORD PTR [ebp+0xc]
10005301:	add    eax,0xc
10005304:	call   0x1000543b
10005309:	test   al,al
1000530b:	je     0x100053db
10005311:	push   DWORD PTR [ebp+0xc]
10005314:	mov    eax,DWORD PTR [ebx+0x4]
10005317:	mov    ecx,DWORD PTR [eax+0x8]
1000531a:	push   0x0
1000531c:	jmp    0x1000529a
10005321:	mov    edi,DWORD PTR [ebp+0x14]
10005324:	mov    eax,DWORD PTR [ebp+0xc]
10005327:	lea    ecx,[edi+0xc]
1000532a:	call   0x1000543b
1000532f:	test   al,al
10005331:	je     0x10005377
10005333:	mov    eax,DWORD PTR [ebp+0x10]
10005336:	lea    esi,[ebp-0x8]
10005339:	mov    DWORD PTR [ebp-0x8],eax
1000533c:	mov    DWORD PTR [ebp-0x4],edi
1000533f:	call   0x100059b5
10005344:	mov    eax,DWORD PTR [eax+0x4]
10005347:	mov    ecx,DWORD PTR [ebp+0xc]
1000534a:	add    eax,0xc
1000534d:	call   0x1000543b
10005352:	test   al,al
10005354:	je     0x10005377
10005356:	mov    ecx,DWORD PTR [ebp-0x4]
10005359:	mov    eax,DWORD PTR [ecx+0x8]
1000535c:	cmp    BYTE PTR [eax+0x45],0x0
10005360:	push   DWORD PTR [ebp+0xc]
10005363:	mov    esi,ebx
10005365:	je     0x1000536e
10005367:	push   0x0
10005369:	jmp    0x1000529c
1000536e:	push   0x1
10005370:	mov    ecx,edi
10005372:	jmp    0x1000529c
10005377:	mov    ecx,DWORD PTR [ebp+0xc]
1000537a:	lea    eax,[edi+0xc]
1000537d:	call   0x1000543b
10005382:	test   al,al
10005384:	je     0x100053db
10005386:	mov    eax,DWORD PTR [ebp+0x10]
10005389:	mov    DWORD PTR [ebp-0x8],eax
1000538c:	mov    eax,DWORD PTR [ebx+0x4]
1000538f:	lea    esi,[ebp-0x8]
10005392:	mov    DWORD PTR [ebp-0x4],edi
10005395:	mov    DWORD PTR [ebp-0xc],eax
10005398:	mov    DWORD PTR [ebp-0x10],ebx
1000539b:	call   0x10005968
100053a0:	lea    edi,[ebp-0x10]
100053a3:	mov    esi,eax
100053a5:	call   0x10004b10
100053aa:	test   al,al
100053ac:	jne    0x100053c0
100053ae:	mov    ecx,DWORD PTR [ebp-0x4]
100053b1:	mov    eax,DWORD PTR [ebp+0xc]
100053b4:	add    ecx,0xc
100053b7:	call   0x1000543b
100053bc:	test   al,al
100053be:	je     0x100053db
100053c0:	mov    ecx,DWORD PTR [ebp+0x14]
100053c3:	mov    eax,DWORD PTR [ecx+0x8]
100053c6:	cmp    BYTE PTR [eax+0x45],0x0
100053ca:	push   DWORD PTR [ebp+0xc]
100053cd:	mov    esi,ebx
100053cf:	jne    0x10005367
100053d1:	mov    ecx,DWORD PTR [ebp-0x4]
100053d4:	push   0x1
100053d6:	jmp    0x1000529c
100053db:	push   DWORD PTR [ebp+0xc]
100053de:	push   ebx
100053df:	lea    ebx,[ebp-0x14]
100053e2:	call   0x1000575c
100053e7:	mov    edx,DWORD PTR [eax]
100053e9:	mov    ecx,DWORD PTR [ebp+0x8]
100053ec:	mov    DWORD PTR [ecx],edx
100053ee:	mov    eax,DWORD PTR [eax+0x4]
100053f1:	mov    DWORD PTR [ecx+0x4],eax
100053f4:	mov    eax,ecx
100053f6:	pop    edi
100053f7:	pop    esi
100053f8:	pop    ebx
100053f9:	leave  
100053fa:	ret    0x10
100053fd:	push   ebp
100053fe:	mov    ebp,esp
10005400:	push   ecx
10005401:	mov    eax,DWORD PTR [edi+0x4]
10005404:	push   esi
10005405:	mov    esi,DWORD PTR [eax+0x4]
10005408:	mov    DWORD PTR [ebp-0x4],eax
1000540b:	jmp    0x10005426
1000540d:	mov    ecx,DWORD PTR [ebp+0x8]
10005410:	lea    eax,[esi+0xc]
10005413:	call   0x1000543b
10005418:	test   al,al
1000541a:	je     0x10005421
1000541c:	mov    esi,DWORD PTR [esi+0x8]
1000541f:	jmp    0x10005426
10005421:	mov    DWORD PTR [ebp-0x4],esi
10005424:	mov    esi,DWORD PTR [esi]
10005426:	cmp    BYTE PTR [esi+0x45],0x0
1000542a:	je     0x1000540d
1000542c:	mov    eax,DWORD PTR [ebp-0x4]
1000542f:	mov    DWORD PTR [ebx+0x4],eax
10005432:	mov    DWORD PTR [ebx],edi
10005434:	mov    eax,ebx
10005436:	pop    esi
10005437:	leave  
10005438:	ret    0x4
1000543b:	cmp    DWORD PTR [ecx+0x18],0x8
1000543f:	push   edi
10005440:	mov    edi,DWORD PTR [ecx+0x14]
10005443:	jb     0x1000544a
10005445:	mov    ecx,DWORD PTR [ecx+0x4]
10005448:	jmp    0x1000544d
1000544a:	add    ecx,0x4
1000544d:	push   ecx
1000544e:	mov    ecx,DWORD PTR [eax+0x14]
10005451:	call   0x100065f4
10005456:	xor    ecx,ecx
10005458:	test   eax,eax
1000545a:	setl   cl
1000545d:	mov    al,cl
1000545f:	pop    edi
10005460:	ret    
10005461:	push   esi
10005462:	push   DWORD PTR [esp+0x8]
10005466:	mov    esi,ecx
10005468:	call   0x10001121
1000546d:	mov    DWORD PTR [esi],0x1006b96c
10005473:	mov    eax,esi
10005475:	pop    esi
10005476:	ret    0x4
10005479:	push   ebp
1000547a:	mov    ebp,esp
1000547c:	sub    esp,0x18
1000547f:	push   esi
10005480:	mov    esi,DWORD PTR [ebp+0x8]
10005483:	mov    eax,DWORD PTR [esi+0x4]
10005486:	push   edi
10005487:	mov    edi,DWORD PTR [eax+0x4]
1000548a:	mov    DWORD PTR [ebp-0x4],eax
1000548d:	mov    al,0x1
1000548f:	mov    BYTE PTR [ebp-0x8],al
10005492:	jmp    0x100054b0
10005494:	mov    eax,DWORD PTR [ebp+0xc]
10005497:	lea    ecx,[edi+0xc]
1000549a:	mov    DWORD PTR [ebp-0x4],edi
1000549d:	call   0x10004ea2
100054a2:	test   al,al
100054a4:	mov    BYTE PTR [ebp-0x8],al
100054a7:	je     0x100054ad
100054a9:	mov    edi,DWORD PTR [edi]
100054ab:	jmp    0x100054b0
100054ad:	mov    edi,DWORD PTR [edi+0x8]
100054b0:	cmp    BYTE PTR [edi+0x45],0x0
100054b4:	je     0x10005494
100054b6:	test   al,al
100054b8:	mov    edi,DWORD PTR [ebp-0x4]
100054bb:	mov    DWORD PTR [ebp-0xc],edi
100054be:	mov    DWORD PTR [ebp-0x10],esi
100054c1:	je     0x1000550f
100054c3:	mov    eax,DWORD PTR [esi+0x4]
100054c6:	mov    eax,DWORD PTR [eax]
100054c8:	mov    DWORD PTR [ebp-0x18],esi
100054cb:	lea    edi,[ebp-0x18]
100054ce:	lea    esi,[ebp-0x10]
100054d1:	mov    DWORD PTR [ebp-0x14],eax
100054d4:	call   0x10004b10
100054d9:	test   al,al
100054db:	je     0x10005501
100054dd:	push   DWORD PTR [ebp+0xc]
100054e0:	mov    esi,DWORD PTR [ebp+0x8]
100054e3:	push   0x1
100054e5:	mov    ecx,DWORD PTR [ebp-0x4]
100054e8:	lea    eax,[ebp-0x18]
100054eb:	push   eax
100054ec:	call   0x1000553a
100054f1:	mov    ecx,DWORD PTR [eax]
100054f3:	mov    eax,DWORD PTR [eax+0x4]
100054f6:	mov    DWORD PTR [ebx],ecx
100054f8:	mov    DWORD PTR [ebx+0x4],eax
100054fb:	mov    BYTE PTR [ebx+0x8],0x1
100054ff:	jmp    0x10005532
10005501:	lea    esi,[ebp-0x10]
10005504:	call   0x100059b5
10005509:	mov    edi,DWORD PTR [ebp-0xc]
1000550c:	mov    esi,DWORD PTR [ebp+0x8]
1000550f:	mov    ecx,DWORD PTR [ebp+0xc]
10005512:	lea    eax,[edi+0xc]
10005515:	call   0x10004ea2
1000551a:	test   al,al
1000551c:	je     0x10005526
1000551e:	push   DWORD PTR [ebp+0xc]
10005521:	push   DWORD PTR [ebp-0x8]
10005524:	jmp    0x100054e5
10005526:	mov    eax,DWORD PTR [ebp-0x10]
10005529:	mov    DWORD PTR [ebx],eax
1000552b:	mov    DWORD PTR [ebx+0x4],edi
1000552e:	mov    BYTE PTR [ebx+0x8],0x0
10005532:	pop    edi
10005533:	mov    eax,ebx
10005535:	pop    esi
10005536:	leave  
10005537:	ret    0x8
1000553a:	push   0x48
1000553c:	mov    eax,0x100603a7
10005541:	call   0x10059c75
10005546:	mov    edi,ecx
10005548:	cmp    DWORD PTR [esi+0x8],0x4924923
1000554f:	jb     0x10005583
10005551:	push   0x1006d04c
10005556:	lea    ecx,[ebp-0x2c]
10005559:	call   0x100011d1
1000555e:	and    DWORD PTR [ebp-0x4],0x0
10005562:	lea    eax,[ebp-0x2c]
10005565:	push   eax
10005566:	lea    ecx,[ebp-0x54]
10005569:	call   0x1000106e
1000556e:	push   0x10074ec0
10005573:	lea    eax,[ebp-0x54]
10005576:	push   eax
10005577:	mov    DWORD PTR [ebp-0x54],0x1006b96c
1000557e:	call   0x10047c54
10005583:	push   DWORD PTR [ebp+0x10]
10005586:	mov    eax,DWORD PTR [esi+0x4]
10005589:	push   eax
1000558a:	push   edi
1000558b:	push   eax
1000558c:	call   0x10005ad2
10005591:	inc    DWORD PTR [esi+0x8]
10005594:	mov    ebx,eax
10005596:	mov    eax,DWORD PTR [esi+0x4]
10005599:	cmp    edi,eax
1000559b:	jne    0x100055aa
1000559d:	mov    DWORD PTR [eax+0x4],ebx
100055a0:	mov    eax,DWORD PTR [esi+0x4]
100055a3:	mov    DWORD PTR [eax],ebx
100055a5:	mov    eax,DWORD PTR [esi+0x4]
100055a8:	jmp    0x100055c8
100055aa:	cmp    BYTE PTR [ebp+0xc],0x0
100055ae:	je     0x100055bd
100055b0:	mov    DWORD PTR [edi],ebx
100055b2:	mov    eax,DWORD PTR [esi+0x4]
100055b5:	cmp    edi,DWORD PTR [eax]
100055b7:	jne    0x100055cb
100055b9:	mov    DWORD PTR [eax],ebx
100055bb:	jmp    0x100055cb
100055bd:	mov    DWORD PTR [edi+0x8],ebx
100055c0:	mov    eax,DWORD PTR [esi+0x4]
100055c3:	cmp    edi,DWORD PTR [eax+0x8]
100055c6:	jne    0x100055cb
100055c8:	mov    DWORD PTR [eax+0x8],ebx
100055cb:	mov    edi,ebx
100055cd:	lea    eax,[ebx+0x4]
100055d0:	jmp    0x1000565f
100055d5:	mov    ecx,DWORD PTR [eax]
100055d7:	mov    edx,DWORD PTR [ecx+0x4]
100055da:	cmp    ecx,DWORD PTR [edx]
100055dc:	jne    0x10005613
100055de:	mov    edx,DWORD PTR [edx+0x8]
100055e1:	cmp    BYTE PTR [edx+0x44],0x0
100055e5:	je     0x1000561b
100055e7:	cmp    edi,DWORD PTR [ecx+0x8]
100055ea:	jne    0x100055f4
100055ec:	push   esi
100055ed:	mov    edi,ecx
100055ef:	call   0x10005cbd
100055f4:	mov    eax,DWORD PTR [edi+0x4]
100055f7:	mov    BYTE PTR [eax+0x44],0x1
100055fb:	mov    eax,DWORD PTR [edi+0x4]
100055fe:	mov    eax,DWORD PTR [eax+0x4]
10005601:	mov    BYTE PTR [eax+0x44],0x0
10005605:	mov    eax,DWORD PTR [edi+0x4]
10005608:	mov    ecx,DWORD PTR [eax+0x4]
1000560b:	push   esi
1000560c:	call   0x10005cfd
10005611:	jmp    0x1000565c
10005613:	mov    edx,DWORD PTR [edx]
10005615:	cmp    BYTE PTR [edx+0x44],0x0
10005619:	jne    0x10005633
1000561b:	mov    BYTE PTR [ecx+0x44],0x1
1000561f:	mov    BYTE PTR [edx+0x44],0x1
10005623:	mov    ecx,DWORD PTR [eax]
10005625:	mov    ecx,DWORD PTR [ecx+0x4]
10005628:	mov    BYTE PTR [ecx+0x44],0x0
1000562c:	mov    eax,DWORD PTR [eax]
1000562e:	mov    edi,DWORD PTR [eax+0x4]
10005631:	jmp    0x1000565c
10005633:	cmp    edi,DWORD PTR [ecx]
10005635:	jne    0x1000563f
10005637:	push   esi
10005638:	mov    edi,ecx
1000563a:	call   0x10005cfd
1000563f:	mov    eax,DWORD PTR [edi+0x4]
10005642:	mov    BYTE PTR [eax+0x44],0x1
10005646:	mov    eax,DWORD PTR [edi+0x4]
10005649:	mov    eax,DWORD PTR [eax+0x4]
1000564c:	mov    BYTE PTR [eax+0x44],0x0
10005650:	mov    eax,DWORD PTR [edi+0x4]
10005653:	mov    ecx,DWORD PTR [eax+0x4]
10005656:	push   esi
10005657:	call   0x10005cbd
1000565c:	lea    eax,[edi+0x4]
1000565f:	mov    ecx,DWORD PTR [eax]
10005661:	cmp    BYTE PTR [ecx+0x44],0x0
10005665:	je     0x100055d5
1000566b:	mov    eax,DWORD PTR [esi+0x4]
1000566e:	mov    eax,DWORD PTR [eax+0x4]
10005671:	mov    BYTE PTR [eax+0x44],0x1
10005675:	mov    eax,DWORD PTR [ebp+0x8]
10005678:	mov    DWORD PTR [eax+0x4],ebx
1000567b:	mov    DWORD PTR [eax],esi
1000567d:	call   0x10059d4d
10005682:	ret    0xc
10005685:	push   ebp
10005686:	mov    ebp,esp
10005688:	push   ecx
10005689:	push   ecx
1000568a:	cmp    DWORD PTR [esi+0x14],edi
1000568d:	jae    0x10005694
1000568f:	call   0x1005747f
10005694:	mov    eax,DWORD PTR [esi+0x14]
10005697:	sub    eax,edi
10005699:	cmp    eax,DWORD PTR [ebp+0x8]
1000569c:	jae    0x100056a1
1000569e:	mov    DWORD PTR [ebp+0x8],eax
100056a1:	cmp    DWORD PTR [ebp+0x8],0x0
100056a5:	jbe    0x100056fa
100056a7:	mov    ecx,DWORD PTR [esi+0x18]
100056aa:	cmp    ecx,0x8
100056ad:	push   ebx
100056ae:	lea    edx,[esi+0x4]
100056b1:	jb     0x100056ba
100056b3:	mov    ebx,DWORD PTR [edx]
100056b5:	mov    DWORD PTR [ebp-0x4],ebx
100056b8:	jmp    0x100056bd
100056ba:	mov    DWORD PTR [ebp-0x4],edx
100056bd:	cmp    ecx,0x8
100056c0:	jb     0x100056c4
100056c2:	mov    edx,DWORD PTR [edx]
100056c4:	mov    ebx,DWORD PTR [ebp+0x8]
100056c7:	sub    eax,ebx
100056c9:	add    eax,eax
100056cb:	push   eax
100056cc:	mov    DWORD PTR [ebp-0x8],edx
100056cf:	mov    edx,DWORD PTR [ebp-0x4]
100056d2:	lea    eax,[edi+ebx*1]
100056d5:	lea    eax,[edx+eax*2]
100056d8:	push   eax
100056d9:	mov    eax,DWORD PTR [ebp-0x8]
100056dc:	sub    ecx,edi
100056de:	add    ecx,ecx
100056e0:	push   ecx
100056e1:	lea    eax,[eax+edi*2]
100056e4:	push   eax
100056e5:	call   0x100430e6
100056ea:	mov    ecx,DWORD PTR [esi+0x14]
100056ed:	add    esp,0x10
100056f0:	sub    ecx,ebx
100056f2:	mov    eax,esi
100056f4:	call   0x10005700
100056f9:	pop    ebx
100056fa:	mov    eax,esi
100056fc:	leave  
100056fd:	ret    0x4
10005700:	cmp    DWORD PTR [eax+0x18],0x8
10005704:	mov    DWORD PTR [eax+0x14],ecx
10005707:	jb     0x1000570e
10005709:	mov    eax,DWORD PTR [eax+0x4]
1000570c:	jmp    0x10005711
1000570e:	add    eax,0x4
10005711:	and    WORD PTR [eax+ecx*2],0x0
10005716:	ret    
10005717:	cmp    edi,0x7ffffffe
1000571d:	push   esi
1000571e:	mov    esi,eax
10005720:	jbe    0x10005727
10005722:	call   0x10057440
10005727:	mov    eax,DWORD PTR [esi+0x18]
1000572a:	cmp    eax,edi
1000572c:	jae    0x1000573a
1000572e:	push   DWORD PTR [esi+0x14]
10005731:	push   edi
10005732:	push   esi
10005733:	call   0x10005b24
10005738:	jmp    0x10005752
1000573a:	test   edi,edi
1000573c:	jne    0x10005752
1000573e:	and    DWORD PTR [esi+0x14],edi
10005741:	cmp    eax,0x8
10005744:	jb     0x1000574b
10005746:	mov    esi,DWORD PTR [esi+0x4]
10005749:	jmp    0x1000574e
1000574b:	add    esi,0x4
1000574e:	and    WORD PTR [esi],0x0
10005752:	xor    eax,eax
10005754:	cmp    eax,edi
10005756:	sbb    eax,eax
10005758:	neg    eax
1000575a:	pop    esi
1000575b:	ret    
1000575c:	push   ebp
1000575d:	mov    ebp,esp
1000575f:	sub    esp,0x18
10005762:	push   esi
10005763:	mov    esi,DWORD PTR [ebp+0x8]
10005766:	mov    eax,DWORD PTR [esi+0x4]
10005769:	push   edi
1000576a:	mov    edi,DWORD PTR [eax+0x4]
1000576d:	mov    DWORD PTR [ebp-0x4],eax
10005770:	mov    al,0x1
10005772:	mov    BYTE PTR [ebp-0x8],al
10005775:	jmp    0x10005793
10005777:	mov    eax,DWORD PTR [ebp+0xc]
1000577a:	lea    ecx,[edi+0xc]
1000577d:	mov    DWORD PTR [ebp-0x4],edi
10005780:	call   0x1000543b
10005785:	test   al,al
10005787:	mov    BYTE PTR [ebp-0x8],al
1000578a:	je     0x10005790
1000578c:	mov    edi,DWORD PTR [edi]
1000578e:	jmp    0x10005793
10005790:	mov    edi,DWORD PTR [edi+0x8]
10005793:	cmp    BYTE PTR [edi+0x45],0x0
10005797:	je     0x10005777
10005799:	test   al,al
1000579b:	mov    edi,DWORD PTR [ebp-0x4]
1000579e:	mov    DWORD PTR [ebp-0xc],edi
100057a1:	mov    DWORD PTR [ebp-0x10],esi
100057a4:	je     0x100057f2
100057a6:	mov    eax,DWORD PTR [esi+0x4]
100057a9:	mov    eax,DWORD PTR [eax]
100057ab:	mov    DWORD PTR [ebp-0x18],esi
100057ae:	lea    edi,[ebp-0x18]
100057b1:	lea    esi,[ebp-0x10]
100057b4:	mov    DWORD PTR [ebp-0x14],eax
100057b7:	call   0x10004b10
100057bc:	test   al,al
100057be:	je     0x100057e4
100057c0:	push   DWORD PTR [ebp+0xc]
100057c3:	mov    esi,DWORD PTR [ebp+0x8]
100057c6:	push   0x1
100057c8:	mov    ecx,DWORD PTR [ebp-0x4]
100057cb:	lea    eax,[ebp-0x18]
100057ce:	push   eax
100057cf:	call   0x1000581d
100057d4:	mov    ecx,DWORD PTR [eax]
100057d6:	mov    eax,DWORD PTR [eax+0x4]
100057d9:	mov    DWORD PTR [ebx],ecx
100057db:	mov    DWORD PTR [ebx+0x4],eax
100057de:	mov    BYTE PTR [ebx+0x8],0x1
100057e2:	jmp    0x10005815
100057e4:	lea    esi,[ebp-0x10]
100057e7:	call   0x100059b5
100057ec:	mov    edi,DWORD PTR [ebp-0xc]
100057ef:	mov    esi,DWORD PTR [ebp+0x8]
100057f2:	mov    ecx,DWORD PTR [ebp+0xc]
100057f5:	lea    eax,[edi+0xc]
100057f8:	call   0x1000543b
100057fd:	test   al,al
100057ff:	je     0x10005809
10005801:	push   DWORD PTR [ebp+0xc]
10005804:	push   DWORD PTR [ebp-0x8]
10005807:	jmp    0x100057c8
10005809:	mov    eax,DWORD PTR [ebp-0x10]
1000580c:	mov    DWORD PTR [ebx],eax
1000580e:	mov    DWORD PTR [ebx+0x4],edi
10005811:	mov    BYTE PTR [ebx+0x8],0x0
10005815:	pop    edi
10005816:	mov    eax,ebx
10005818:	pop    esi
10005819:	leave  
1000581a:	ret    0x8
1000581d:	push   0x48
1000581f:	mov    eax,0x100603a7
10005824:	call   0x10059c75
10005829:	mov    edi,ecx
1000582b:	cmp    DWORD PTR [esi+0x8],0x4924923
10005832:	jb     0x10005866
10005834:	push   0x1006d04c
10005839:	lea    ecx,[ebp-0x2c]
1000583c:	call   0x100011d1
10005841:	and    DWORD PTR [ebp-0x4],0x0
10005845:	lea    eax,[ebp-0x2c]
10005848:	push   eax
10005849:	lea    ecx,[ebp-0x54]
1000584c:	call   0x1000106e
10005851:	push   0x10074ec0
10005856:	lea    eax,[ebp-0x54]
10005859:	push   eax
1000585a:	mov    DWORD PTR [ebp-0x54],0x1006b96c
10005861:	call   0x10047c54
10005866:	push   DWORD PTR [ebp+0x10]
10005869:	mov    eax,DWORD PTR [esi+0x4]
1000586c:	push   eax
1000586d:	push   edi
1000586e:	push   eax
1000586f:	call   0x10005d3f
10005874:	inc    DWORD PTR [esi+0x8]
10005877:	mov    ebx,eax
10005879:	mov    eax,DWORD PTR [esi+0x4]
1000587c:	cmp    edi,eax
1000587e:	jne    0x1000588d
10005880:	mov    DWORD PTR [eax+0x4],ebx
10005883:	mov    eax,DWORD PTR [esi+0x4]
10005886:	mov    DWORD PTR [eax],ebx
10005888:	mov    eax,DWORD PTR [esi+0x4]
1000588b:	jmp    0x100058ab
1000588d:	cmp    BYTE PTR [ebp+0xc],0x0
10005891:	je     0x100058a0
10005893:	mov    DWORD PTR [edi],ebx
10005895:	mov    eax,DWORD PTR [esi+0x4]
10005898:	cmp    edi,DWORD PTR [eax]
1000589a:	jne    0x100058ae
1000589c:	mov    DWORD PTR [eax],ebx
1000589e:	jmp    0x100058ae
100058a0:	mov    DWORD PTR [edi+0x8],ebx
100058a3:	mov    eax,DWORD PTR [esi+0x4]
100058a6:	cmp    edi,DWORD PTR [eax+0x8]
100058a9:	jne    0x100058ae
100058ab:	mov    DWORD PTR [eax+0x8],ebx
100058ae:	mov    edi,ebx
100058b0:	lea    eax,[ebx+0x4]
100058b3:	jmp    0x10005942
100058b8:	mov    ecx,DWORD PTR [eax]
100058ba:	mov    edx,DWORD PTR [ecx+0x4]
100058bd:	cmp    ecx,DWORD PTR [edx]
100058bf:	jne    0x100058f6
100058c1:	mov    edx,DWORD PTR [edx+0x8]
100058c4:	cmp    BYTE PTR [edx+0x44],0x0
100058c8:	je     0x100058fe
100058ca:	cmp    edi,DWORD PTR [ecx+0x8]
100058cd:	jne    0x100058d7
100058cf:	push   esi
100058d0:	mov    edi,ecx
100058d2:	call   0x10005cbd
100058d7:	mov    eax,DWORD PTR [edi+0x4]
100058da:	mov    BYTE PTR [eax+0x44],0x1
100058de:	mov    eax,DWORD PTR [edi+0x4]
100058e1:	mov    eax,DWORD PTR [eax+0x4]
100058e4:	mov    BYTE PTR [eax+0x44],0x0
100058e8:	mov    eax,DWORD PTR [edi+0x4]
100058eb:	mov    ecx,DWORD PTR [eax+0x4]
100058ee:	push   esi
100058ef:	call   0x10005cfd
100058f4:	jmp    0x1000593f
100058f6:	mov    edx,DWORD PTR [edx]
100058f8:	cmp    BYTE PTR [edx+0x44],0x0
100058fc:	jne    0x10005916
100058fe:	mov    BYTE PTR [ecx+0x44],0x1
10005902:	mov    BYTE PTR [edx+0x44],0x1
10005906:	mov    ecx,DWORD PTR [eax]
10005908:	mov    ecx,DWORD PTR [ecx+0x4]
1000590b:	mov    BYTE PTR [ecx+0x44],0x0
1000590f:	mov    eax,DWORD PTR [eax]
10005911:	mov    edi,DWORD PTR [eax+0x4]
10005914:	jmp    0x1000593f
10005916:	cmp    edi,DWORD PTR [ecx]
10005918:	jne    0x10005922
1000591a:	push   esi
1000591b:	mov    edi,ecx
1000591d:	call   0x10005cfd
10005922:	mov    eax,DWORD PTR [edi+0x4]
10005925:	mov    BYTE PTR [eax+0x44],0x1
10005929:	mov    eax,DWORD PTR [edi+0x4]
1000592c:	mov    eax,DWORD PTR [eax+0x4]
1000592f:	mov    BYTE PTR [eax+0x44],0x0
10005933:	mov    eax,DWORD PTR [edi+0x4]
10005936:	mov    ecx,DWORD PTR [eax+0x4]
10005939:	push   esi
1000593a:	call   0x10005cbd
1000593f:	lea    eax,[edi+0x4]
10005942:	mov    ecx,DWORD PTR [eax]
10005944:	cmp    BYTE PTR [ecx+0x44],0x0
10005948:	je     0x100058b8
1000594e:	mov    eax,DWORD PTR [esi+0x4]
10005951:	mov    eax,DWORD PTR [eax+0x4]
10005954:	mov    BYTE PTR [eax+0x44],0x1
10005958:	mov    eax,DWORD PTR [ebp+0x8]
1000595b:	mov    DWORD PTR [eax+0x4],ebx
1000595e:	mov    DWORD PTR [eax],esi
10005960:	call   0x10059d4d
10005965:	ret    0xc
10005968:	push   ebx
10005969:	xor    ebx,ebx
1000596b:	cmp    DWORD PTR [esi],ebx
1000596d:	jne    0x10005974
1000596f:	call   0x100435f0
10005974:	mov    eax,DWORD PTR [esi+0x4]
10005977:	cmp    BYTE PTR [eax+0x45],bl
1000597a:	je     0x10005983
1000597c:	call   0x100435f0
10005981:	jmp    0x100059b1
10005983:	mov    ecx,DWORD PTR [eax+0x8]
10005986:	cmp    BYTE PTR [ecx+0x45],bl
10005989:	jne    0x100059a6
1000598b:	jmp    0x1000598f
1000598d:	mov    ecx,eax
1000598f:	mov    eax,DWORD PTR [ecx]
10005991:	cmp    BYTE PTR [eax+0x45],bl
10005994:	je     0x1000598d
10005996:	mov    DWORD PTR [esi+0x4],ecx
10005999:	jmp    0x100059b1
1000599b:	mov    ecx,DWORD PTR [esi+0x4]
1000599e:	cmp    ecx,DWORD PTR [eax+0x8]
100059a1:	jne    0x100059ae
100059a3:	mov    DWORD PTR [esi+0x4],eax
100059a6:	mov    eax,DWORD PTR [eax+0x4]
100059a9:	cmp    BYTE PTR [eax+0x45],bl
100059ac:	je     0x1000599b
100059ae:	mov    DWORD PTR [esi+0x4],eax
100059b1:	mov    eax,esi
100059b3:	pop    ebx
100059b4:	ret    
100059b5:	push   ebx
100059b6:	xor    ebx,ebx
100059b8:	cmp    DWORD PTR [esi],ebx
100059ba:	jne    0x100059c1
100059bc:	call   0x100435f0
100059c1:	mov    eax,DWORD PTR [esi+0x4]
100059c4:	cmp    BYTE PTR [eax+0x45],bl
100059c7:	je     0x100059d6
100059c9:	mov    eax,DWORD PTR [eax+0x8]
100059cc:	mov    DWORD PTR [esi+0x4],eax
100059cf:	cmp    BYTE PTR [eax+0x45],bl
100059d2:	je     0x10005a12
100059d4:	jmp    0x10005a08
100059d6:	mov    ecx,DWORD PTR [eax]
100059d8:	cmp    BYTE PTR [ecx+0x45],bl
100059db:	jne    0x100059f8
100059dd:	jmp    0x100059e1
100059df:	mov    ecx,eax
100059e1:	mov    eax,DWORD PTR [ecx+0x8]
100059e4:	cmp    BYTE PTR [eax+0x45],bl
100059e7:	je     0x100059df
100059e9:	mov    DWORD PTR [esi+0x4],ecx
100059ec:	jmp    0x10005a12
100059ee:	mov    ecx,DWORD PTR [esi+0x4]
100059f1:	cmp    ecx,DWORD PTR [eax]
100059f3:	jne    0x10005a00
100059f5:	mov    DWORD PTR [esi+0x4],eax
100059f8:	mov    eax,DWORD PTR [eax+0x4]
100059fb:	cmp    BYTE PTR [eax+0x45],bl
100059fe:	je     0x100059ee
10005a00:	mov    ecx,DWORD PTR [esi+0x4]
10005a03:	cmp    BYTE PTR [ecx+0x45],bl
10005a06:	je     0x10005a0f
10005a08:	call   0x100435f0
10005a0d:	jmp    0x10005a12
10005a0f:	mov    DWORD PTR [esi+0x4],eax
10005a12:	mov    eax,esi
10005a14:	pop    ebx
10005a15:	ret    
10005a16:	push   ebp
10005a17:	mov    ebp,esp
10005a19:	sub    esp,0x10
10005a1c:	mov    eax,ds:0x10080c30
10005a21:	mov    eax,DWORD PTR [eax]
10005a23:	push   ebx
10005a24:	push   esi
10005a25:	push   edi
10005a26:	mov    ebx,0x10080c2c
10005a2b:	lea    edi,[ebp-0xc]
10005a2e:	lea    esi,[ebp+0xc]
10005a31:	mov    DWORD PTR [ebp-0x8],eax
10005a34:	mov    DWORD PTR [ebp-0xc],ebx
10005a37:	call   0x10004b10
10005a3c:	test   al,al
10005a3e:	je     0x10005aae
10005a40:	mov    eax,ds:0x10080c30
10005a45:	lea    edi,[ebp-0xc]
10005a48:	lea    esi,[ebp+0x14]
10005a4b:	mov    DWORD PTR [ebp-0x8],eax
10005a4e:	mov    DWORD PTR [ebp-0xc],ebx
10005a51:	call   0x10004b10
10005a56:	test   al,al
10005a58:	je     0x10005aae
10005a5a:	mov    eax,ds:0x10080c30
10005a5f:	push   DWORD PTR [eax+0x4]
10005a62:	mov    ecx,ebx
10005a64:	call   0x100063dc
10005a69:	mov    eax,ds:0x10080c30
10005a6e:	mov    DWORD PTR [eax+0x4],eax
10005a71:	mov    eax,ds:0x10080c30
10005a76:	and    DWORD PTR ds:0x10080c34,0x0
10005a7d:	mov    DWORD PTR [eax],eax
10005a7f:	mov    eax,ds:0x10080c30
10005a84:	mov    DWORD PTR [eax+0x8],eax
10005a87:	mov    eax,ds:0x10080c30
10005a8c:	mov    ecx,DWORD PTR [eax]
10005a8e:	mov    eax,DWORD PTR [ebp+0x8]
10005a91:	mov    DWORD PTR [eax],ebx
10005a93:	jmp    0x10005ac8
10005a95:	mov    edi,DWORD PTR [ebp+0xc]
10005a98:	mov    ebx,DWORD PTR [ebp+0x10]
10005a9b:	lea    esi,[ebp+0xc]
10005a9e:	call   0x10005968
10005aa3:	push   ebx
10005aa4:	push   edi
10005aa5:	lea    eax,[ebp-0xc]
10005aa8:	push   eax
10005aa9:	call   0x10005d91
10005aae:	lea    edi,[ebp+0x14]
10005ab1:	lea    esi,[ebp+0xc]
10005ab4:	call   0x10004b10
10005ab9:	test   al,al
10005abb:	je     0x10005a95
10005abd:	mov    ecx,DWORD PTR [ebp+0xc]
10005ac0:	mov    eax,DWORD PTR [ebp+0x8]
10005ac3:	mov    DWORD PTR [eax],ecx
10005ac5:	mov    ecx,DWORD PTR [ebp+0x10]
10005ac8:	pop    edi
10005ac9:	pop    esi
10005aca:	mov    DWORD PTR [eax+0x4],ecx
10005acd:	pop    ebx
10005ace:	leave  
10005acf:	ret    0x14
10005ad2:	push   0x8
10005ad4:	mov    eax,0x1005ff51
10005ad9:	call   0x10059ca8
10005ade:	push   0x48
10005ae0:	call   0x100436de
10005ae5:	mov    esi,eax
10005ae7:	pop    ecx
10005ae8:	mov    DWORD PTR [ebp-0x14],esi
10005aeb:	test   esi,esi
10005aed:	mov    DWORD PTR [ebp-0x4],0x1
10005af4:	je     0x10005b07
10005af6:	push   DWORD PTR [ebp+0x10]
10005af9:	mov    ecx,DWORD PTR [ebp+0x14]
10005afc:	push   DWORD PTR [ebp+0xc]
10005aff:	push   DWORD PTR [ebp+0x8]
10005b02:	call   0x10006342
10005b07:	mov    eax,esi
10005b09:	call   0x10059d4d
10005b0e:	ret    0x10
10005b11:	push   DWORD PTR [ebp-0x14]
10005b14:	call   0x100430d2
10005b19:	pop    ecx
10005b1a:	push   0x0
10005b1c:	push   0x0
10005b1e:	call   0x10047c54
10005b23:	int3   
10005b24:	push   0x8
10005b26:	mov    eax,0x1005ff31
10005b2b:	call   0x10059ca8
10005b30:	mov    esi,DWORD PTR [ebp+0x8]
10005b33:	mov    edi,DWORD PTR [ebp+0xc]
10005b36:	or     edi,0x7
10005b39:	cmp    edi,0x7ffffffe
10005b3f:	jbe    0x10005b46
10005b41:	mov    edi,DWORD PTR [ebp+0xc]
10005b44:	jmp    0x10005b6d
10005b46:	xor    edx,edx
10005b48:	push   0x3
10005b4a:	mov    eax,edi
10005b4c:	pop    ebx
10005b4d:	div    ebx
10005b4f:	mov    ecx,DWORD PTR [esi+0x18]
10005b52:	mov    DWORD PTR [ebp-0x14],ecx
10005b55:	shr    DWORD PTR [ebp-0x14],1
10005b58:	mov    edx,DWORD PTR [ebp-0x14]
10005b5b:	cmp    eax,edx
10005b5d:	jae    0x10005b6d
10005b5f:	mov    eax,0x7ffffffe
10005b64:	sub    eax,edx
10005b66:	cmp    ecx,eax
10005b68:	ja     0x10005b6d
10005b6a:	lea    edi,[edx+ecx*1]
10005b6d:	and    DWORD PTR [ebp-0x4],0x0
10005b71:	lea    ecx,[edi+0x1]
10005b74:	call   0x10006061
10005b79:	mov    DWORD PTR [ebp+0xc],eax
10005b7c:	jmp    0x10005ba2
10005b7e:	mov    eax,DWORD PTR [ebp+0xc]
10005b81:	lea    ecx,[eax+0x1]
10005b84:	mov    DWORD PTR [ebp-0x10],esp
10005b87:	mov    DWORD PTR [ebp-0x14],eax
10005b8a:	mov    BYTE PTR [ebp-0x4],0x2
10005b8e:	call   0x10006061
10005b93:	mov    DWORD PTR [ebp+0xc],eax
10005b96:	mov    eax,0x10005b9c
10005b9b:	ret    
10005b9c:	mov    esi,DWORD PTR [ebp+0x8]
10005b9f:	mov    edi,DWORD PTR [ebp-0x14]
10005ba2:	cmp    DWORD PTR [ebp+0x10],0x0
10005ba6:	jbe    0x10005bc9
10005ba8:	cmp    DWORD PTR [esi+0x18],0x8
10005bac:	jb     0x10005bb3
10005bae:	mov    eax,DWORD PTR [esi+0x4]
10005bb1:	jmp    0x10005bb6
10005bb3:	lea    eax,[esi+0x4]
10005bb6:	push   eax
10005bb7:	lea    eax,[edi+0x1]
10005bba:	push   eax
10005bbb:	push   DWORD PTR [ebp+0xc]
10005bbe:	mov    eax,DWORD PTR [ebp+0x10]
10005bc1:	call   0x100065d5
10005bc6:	add    esp,0xc
10005bc9:	push   0x1
10005bcb:	xor    ebx,ebx
10005bcd:	call   0x100051f3
10005bd2:	mov    eax,DWORD PTR [ebp+0xc]
10005bd5:	mov    ecx,DWORD PTR [ebp+0x10]
10005bd8:	mov    DWORD PTR [esi+0x4],eax
10005bdb:	mov    eax,esi
10005bdd:	mov    DWORD PTR [esi+0x18],edi
10005be0:	call   0x10005700
10005be5:	call   0x10059d4d
10005bea:	ret    0xc
10005bed:	mov    esi,DWORD PTR [ebp+0x8]
10005bf0:	push   0x1
10005bf2:	xor    ebx,ebx
10005bf4:	call   0x100051f3
10005bf9:	push   ebx
10005bfa:	push   ebx
10005bfb:	call   0x10047c54
10005c00:	int3   
10005c01:	push   ebp
10005c02:	mov    ebp,esp
10005c04:	sub    esp,0x10
10005c07:	mov    eax,ds:0x10080c24
10005c0c:	mov    eax,DWORD PTR [eax]
10005c0e:	push   ebx
10005c0f:	push   esi
10005c10:	push   edi
10005c11:	mov    ebx,0x10080c20
10005c16:	lea    edi,[ebp-0xc]
10005c19:	lea    esi,[ebp+0xc]
10005c1c:	mov    DWORD PTR [ebp-0x8],eax
10005c1f:	mov    DWORD PTR [ebp-0xc],ebx
10005c22:	call   0x10004b10
10005c27:	test   al,al
10005c29:	je     0x10005c99
10005c2b:	mov    eax,ds:0x10080c24
10005c30:	lea    edi,[ebp-0xc]
10005c33:	lea    esi,[ebp+0x14]
10005c36:	mov    DWORD PTR [ebp-0x8],eax
10005c39:	mov    DWORD PTR [ebp-0xc],ebx
10005c3c:	call   0x10004b10
10005c41:	test   al,al
10005c43:	je     0x10005c99
10005c45:	mov    eax,ds:0x10080c24
10005c4a:	push   DWORD PTR [eax+0x4]
10005c4d:	mov    ecx,ebx
10005c4f:	call   0x1000642e
10005c54:	mov    eax,ds:0x10080c24
10005c59:	mov    DWORD PTR [eax+0x4],eax
10005c5c:	mov    eax,ds:0x10080c24
10005c61:	and    DWORD PTR ds:0x10080c28,0x0
10005c68:	mov    DWORD PTR [eax],eax
10005c6a:	mov    eax,ds:0x10080c24
10005c6f:	mov    DWORD PTR [eax+0x8],eax
10005c72:	mov    eax,ds:0x10080c24
10005c77:	mov    ecx,DWORD PTR [eax]
10005c79:	mov    eax,DWORD PTR [ebp+0x8]
10005c7c:	mov    DWORD PTR [eax],ebx
10005c7e:	jmp    0x10005cb3
10005c80:	mov    edi,DWORD PTR [ebp+0xc]
10005c83:	mov    ebx,DWORD PTR [ebp+0x10]
10005c86:	lea    esi,[ebp+0xc]
10005c89:	call   0x10005968
10005c8e:	push   ebx
10005c8f:	push   edi
10005c90:	lea    eax,[ebp-0xc]
10005c93:	push   eax
10005c94:	call   0x100060ab
10005c99:	lea    edi,[ebp+0x14]
10005c9c:	lea    esi,[ebp+0xc]
10005c9f:	call   0x10004b10
10005ca4:	test   al,al
10005ca6:	je     0x10005c80
10005ca8:	mov    ecx,DWORD PTR [ebp+0xc]
10005cab:	mov    eax,DWORD PTR [ebp+0x8]
10005cae:	mov    DWORD PTR [eax],ecx
10005cb0:	mov    ecx,DWORD PTR [ebp+0x10]
10005cb3:	pop    edi
10005cb4:	pop    esi
10005cb5:	mov    DWORD PTR [eax+0x4],ecx
10005cb8:	pop    ebx
10005cb9:	leave  
10005cba:	ret    0x14
10005cbd:	mov    eax,DWORD PTR [ecx+0x8]
10005cc0:	mov    edx,DWORD PTR [eax]
10005cc2:	mov    DWORD PTR [ecx+0x8],edx
10005cc5:	mov    edx,DWORD PTR [eax]
10005cc7:	cmp    BYTE PTR [edx+0x45],0x0
10005ccb:	jne    0x10005cd0
10005ccd:	mov    DWORD PTR [edx+0x4],ecx
10005cd0:	mov    edx,DWORD PTR [ecx+0x4]
10005cd3:	mov    DWORD PTR [eax+0x4],edx
10005cd6:	mov    edx,DWORD PTR [esp+0x4]
10005cda:	mov    edx,DWORD PTR [edx+0x4]
10005cdd:	cmp    ecx,DWORD PTR [edx+0x4]
10005ce0:	jne    0x10005ce7
10005ce2:	mov    DWORD PTR [edx+0x4],eax
10005ce5:	jmp    0x10005cf5
10005ce7:	mov    edx,DWORD PTR [ecx+0x4]
10005cea:	cmp    ecx,DWORD PTR [edx]
10005cec:	jne    0x10005cf2
10005cee:	mov    DWORD PTR [edx],eax
10005cf0:	jmp    0x10005cf5
10005cf2:	mov    DWORD PTR [edx+0x8],eax
10005cf5:	mov    DWORD PTR [eax],ecx
10005cf7:	mov    DWORD PTR [ecx+0x4],eax
10005cfa:	ret    0x4
10005cfd:	mov    eax,DWORD PTR [ecx]
10005cff:	mov    edx,DWORD PTR [eax+0x8]
10005d02:	mov    DWORD PTR [ecx],edx
10005d04:	mov    edx,DWORD PTR [eax+0x8]
10005d07:	cmp    BYTE PTR [edx+0x45],0x0
10005d0b:	jne    0x10005d10
10005d0d:	mov    DWORD PTR [edx+0x4],ecx
10005d10:	mov    edx,DWORD PTR [ecx+0x4]
10005d13:	mov    DWORD PTR [eax+0x4],edx
10005d16:	mov    edx,DWORD PTR [esp+0x4]
10005d1a:	mov    edx,DWORD PTR [edx+0x4]
10005d1d:	cmp    ecx,DWORD PTR [edx+0x4]
10005d20:	jne    0x10005d27
10005d22:	mov    DWORD PTR [edx+0x4],eax
10005d25:	jmp    0x10005d36
10005d27:	mov    edx,DWORD PTR [ecx+0x4]
10005d2a:	cmp    ecx,DWORD PTR [edx+0x8]
10005d2d:	jne    0x10005d34
10005d2f:	mov    DWORD PTR [edx+0x8],eax
10005d32:	jmp    0x10005d36
10005d34:	mov    DWORD PTR [edx],eax
10005d36:	mov    DWORD PTR [eax+0x8],ecx
10005d39:	mov    DWORD PTR [ecx+0x4],eax
10005d3c:	ret    0x4
10005d3f:	push   0x8
10005d41:	mov    eax,0x100607f6
10005d46:	call   0x10059ca8
10005d4b:	push   0x48
10005d4d:	call   0x100436de
10005d52:	mov    edi,eax
10005d54:	pop    ecx
10005d55:	mov    DWORD PTR [ebp-0x14],edi
10005d58:	test   edi,edi
10005d5a:	mov    DWORD PTR [ebp-0x4],0x1
10005d61:	je     0x10005d74
10005d63:	push   DWORD PTR [ebp+0x10]
10005d66:	mov    ebx,DWORD PTR [ebp+0x14]
10005d69:	push   DWORD PTR [ebp+0xc]
10005d6c:	push   DWORD PTR [ebp+0x8]
10005d6f:	call   0x10006391
10005d74:	mov    eax,edi
10005d76:	call   0x10059d4d
10005d7b:	ret    0x10
10005d7e:	push   DWORD PTR [ebp-0x14]
10005d81:	call   0x100430d2
10005d86:	pop    ecx
10005d87:	push   0x0
10005d89:	push   0x0
10005d8b:	call   0x10047c54
10005d90:	int3   
10005d91:	push   0x48
10005d93:	mov    eax,0x100603a7
10005d98:	call   0x10059c75
10005d9d:	mov    edi,DWORD PTR [ebp+0x10]
10005da0:	cmp    BYTE PTR [edi+0x45],0x0
10005da4:	je     0x10005dd8
10005da6:	push   0x1006ccec
10005dab:	lea    ecx,[ebp-0x2c]
10005dae:	call   0x100011d1
10005db3:	and    DWORD PTR [ebp-0x4],0x0
10005db7:	lea    eax,[ebp-0x2c]
10005dba:	push   eax
10005dbb:	lea    ecx,[ebp-0x54]
10005dbe:	call   0x1000106e
10005dc3:	push   0x10074de0
10005dc8:	lea    eax,[ebp-0x54]
10005dcb:	push   eax
10005dcc:	mov    DWORD PTR [ebp-0x54],0x1006b978
10005dd3:	call   0x10047c54
10005dd8:	lea    esi,[ebp+0xc]
10005ddb:	mov    DWORD PTR [ebp-0x10],edi
10005dde:	call   0x10005968
10005de3:	mov    ecx,DWORD PTR [edi]
10005de5:	cmp    BYTE PTR [ecx+0x45],0x0
10005de9:	je     0x10005df0
10005deb:	mov    ebx,DWORD PTR [edi+0x8]
10005dee:	jmp    0x10005e07
10005df0:	mov    eax,DWORD PTR [edi+0x8]
10005df3:	cmp    BYTE PTR [eax+0x45],0x0
10005df7:	je     0x10005dfd
10005df9:	mov    ebx,ecx
10005dfb:	jmp    0x10005e07
10005dfd:	mov    eax,DWORD PTR [ebp+0x10]
10005e00:	cmp    eax,edi
10005e02:	mov    ebx,DWORD PTR [eax+0x8]
10005e05:	jne    0x10005e7f
10005e07:	cmp    BYTE PTR [ebx+0x45],0x0
10005e0b:	mov    esi,DWORD PTR [edi+0x4]
10005e0e:	jne    0x10005e13
10005e10:	mov    DWORD PTR [ebx+0x4],esi
10005e13:	mov    eax,ds:0x10080c30
10005e18:	cmp    DWORD PTR [eax+0x4],edi
10005e1b:	jne    0x10005e22
10005e1d:	mov    DWORD PTR [eax+0x4],ebx
10005e20:	jmp    0x10005e2d
10005e22:	cmp    DWORD PTR [esi],edi
10005e24:	jne    0x10005e2a
10005e26:	mov    DWORD PTR [esi],ebx
10005e28:	jmp    0x10005e2d
10005e2a:	mov    DWORD PTR [esi+0x8],ebx
10005e2d:	mov    edx,DWORD PTR ds:0x10080c30
10005e33:	cmp    DWORD PTR [edx],edi
10005e35:	jne    0x10005e53
10005e37:	cmp    BYTE PTR [ebx+0x45],0x0
10005e3b:	je     0x10005e41
10005e3d:	mov    ecx,esi
10005e3f:	jmp    0x10005e51
10005e41:	mov    eax,DWORD PTR [ebx]
10005e43:	mov    ecx,ebx
10005e45:	jmp    0x10005e4b
10005e47:	mov    ecx,eax
10005e49:	mov    eax,DWORD PTR [ecx]
10005e4b:	cmp    BYTE PTR [eax+0x45],0x0
10005e4f:	je     0x10005e47
10005e51:	mov    DWORD PTR [edx],ecx
10005e53:	mov    edx,DWORD PTR ds:0x10080c30
10005e59:	cmp    DWORD PTR [edx+0x8],edi
10005e5c:	jne    0x10005ed9
10005e5e:	cmp    BYTE PTR [ebx+0x45],0x0
10005e62:	je     0x10005e68
10005e64:	mov    ecx,esi
10005e66:	jmp    0x10005e7a
10005e68:	mov    eax,DWORD PTR [ebx+0x8]
10005e6b:	mov    ecx,ebx
10005e6d:	jmp    0x10005e74
10005e6f:	mov    ecx,eax
10005e71:	mov    eax,DWORD PTR [ecx+0x8]
10005e74:	cmp    BYTE PTR [eax+0x45],0x0
10005e78:	je     0x10005e6f
10005e7a:	mov    DWORD PTR [edx+0x8],ecx
10005e7d:	jmp    0x10005ed9
10005e7f:	mov    DWORD PTR [ecx+0x4],eax
10005e82:	mov    ecx,DWORD PTR [edi]
10005e84:	mov    DWORD PTR [eax],ecx
10005e86:	cmp    eax,DWORD PTR [edi+0x8]
10005e89:	jne    0x10005e8f
10005e8b:	mov    esi,eax
10005e8d:	jmp    0x10005ea9
10005e8f:	cmp    BYTE PTR [ebx+0x45],0x0
10005e93:	mov    esi,DWORD PTR [eax+0x4]
10005e96:	jne    0x10005e9b
10005e98:	mov    DWORD PTR [ebx+0x4],esi
10005e9b:	mov    DWORD PTR [esi],ebx
10005e9d:	mov    ecx,DWORD PTR [edi+0x8]
10005ea0:	mov    DWORD PTR [eax+0x8],ecx
10005ea3:	mov    ecx,DWORD PTR [edi+0x8]
10005ea6:	mov    DWORD PTR [ecx+0x4],eax
10005ea9:	mov    ecx,DWORD PTR ds:0x10080c30
10005eaf:	cmp    DWORD PTR [ecx+0x4],edi
10005eb2:	jne    0x10005eb9
10005eb4:	mov    DWORD PTR [ecx+0x4],eax
10005eb7:	jmp    0x10005ec7
10005eb9:	mov    ecx,DWORD PTR [edi+0x4]
10005ebc:	cmp    DWORD PTR [ecx],edi
10005ebe:	jne    0x10005ec4
10005ec0:	mov    DWORD PTR [ecx],eax
10005ec2:	jmp    0x10005ec7
10005ec4:	mov    DWORD PTR [ecx+0x8],eax
10005ec7:	mov    ecx,DWORD PTR [edi+0x4]
10005eca:	mov    DWORD PTR [eax+0x4],ecx
10005ecd:	mov    dl,BYTE PTR [edi+0x44]
10005ed0:	mov    cl,BYTE PTR [eax+0x44]
10005ed3:	mov    BYTE PTR [eax+0x44],dl
10005ed6:	mov    BYTE PTR [edi+0x44],cl
10005ed9:	cmp    BYTE PTR [edi+0x44],0x1
10005edd:	jne    0x10005ff2
10005ee3:	mov    eax,ds:0x10080c30
10005ee8:	cmp    ebx,DWORD PTR [eax+0x4]
10005eeb:	je     0x10005fee
10005ef1:	mov    edi,0x10080c2c
10005ef6:	cmp    BYTE PTR [ebx+0x44],0x1
10005efa:	jne    0x10005feb
10005f00:	mov    ecx,DWORD PTR [esi]
10005f02:	cmp    ebx,ecx
10005f04:	jne    0x10005f70
10005f06:	mov    ecx,DWORD PTR [esi+0x8]
10005f09:	cmp    BYTE PTR [ecx+0x44],0x0
10005f0d:	jne    0x10005f22
10005f0f:	mov    BYTE PTR [ecx+0x44],0x1
10005f13:	push   edi
10005f14:	mov    ecx,esi
10005f16:	mov    BYTE PTR [esi+0x44],0x0
10005f1a:	call   0x10005cbd
10005f1f:	mov    ecx,DWORD PTR [esi+0x8]
10005f22:	cmp    BYTE PTR [ecx+0x45],0x0
10005f26:	jne    0x10005fa3
10005f28:	mov    eax,DWORD PTR [ecx]
10005f2a:	cmp    BYTE PTR [eax+0x44],0x1
10005f2e:	jne    0x10005f39
10005f30:	mov    eax,DWORD PTR [ecx+0x8]
10005f33:	cmp    BYTE PTR [eax+0x44],0x1
10005f37:	je     0x10005f9f
10005f39:	mov    eax,DWORD PTR [ecx+0x8]
10005f3c:	cmp    BYTE PTR [eax+0x44],0x1
10005f40:	jne    0x10005f55
10005f42:	mov    eax,DWORD PTR [ecx]
10005f44:	mov    BYTE PTR [eax+0x44],0x1
10005f48:	push   edi
10005f49:	mov    BYTE PTR [ecx+0x44],0x0
10005f4d:	call   0x10005cfd
10005f52:	mov    ecx,DWORD PTR [esi+0x8]
10005f55:	mov    al,BYTE PTR [esi+0x44]
10005f58:	mov    BYTE PTR [ecx+0x44],al
10005f5b:	mov    BYTE PTR [esi+0x44],0x1
10005f5f:	mov    eax,DWORD PTR [ecx+0x8]
10005f62:	push   edi
10005f63:	mov    ecx,esi
10005f65:	mov    BYTE PTR [eax+0x44],0x1
10005f69:	call   0x10005cbd
10005f6e:	jmp    0x10005feb
10005f70:	cmp    BYTE PTR [ecx+0x44],0x0
10005f74:	jne    0x10005f88
10005f76:	mov    BYTE PTR [ecx+0x44],0x1
10005f7a:	push   edi
10005f7b:	mov    ecx,esi
10005f7d:	mov    BYTE PTR [esi+0x44],0x0
10005f81:	call   0x10005cfd
10005f86:	mov    ecx,DWORD PTR [esi]
10005f88:	cmp    BYTE PTR [ecx+0x45],0x0
10005f8c:	jne    0x10005fa3
10005f8e:	mov    eax,DWORD PTR [ecx+0x8]
10005f91:	cmp    BYTE PTR [eax+0x44],0x1
10005f95:	jne    0x10005fb8
10005f97:	mov    eax,DWORD PTR [ecx]
10005f99:	cmp    BYTE PTR [eax+0x44],0x1
10005f9d:	jne    0x10005fb8
10005f9f:	mov    BYTE PTR [ecx+0x44],0x0
10005fa3:	mov    eax,ds:0x10080c30
10005fa8:	mov    ebx,esi
10005faa:	cmp    ebx,DWORD PTR [eax+0x4]
10005fad:	mov    esi,DWORD PTR [esi+0x4]
10005fb0:	jne    0x10005ef6
10005fb6:	jmp    0x10005feb
10005fb8:	mov    eax,DWORD PTR [ecx]
10005fba:	cmp    BYTE PTR [eax+0x44],0x1
10005fbe:	jne    0x10005fd3
10005fc0:	mov    eax,DWORD PTR [ecx+0x8]
10005fc3:	mov    BYTE PTR [eax+0x44],0x1
10005fc7:	push   edi
10005fc8:	mov    BYTE PTR [ecx+0x44],0x0
10005fcc:	call   0x10005cbd
10005fd1:	mov    ecx,DWORD PTR [esi]
10005fd3:	mov    al,BYTE PTR [esi+0x44]
10005fd6:	mov    BYTE PTR [ecx+0x44],al
10005fd9:	mov    BYTE PTR [esi+0x44],0x1
10005fdd:	mov    eax,DWORD PTR [ecx]
10005fdf:	push   edi
10005fe0:	mov    ecx,esi
10005fe2:	mov    BYTE PTR [eax+0x44],0x1
10005fe6:	call   0x10005cfd
10005feb:	mov    edi,DWORD PTR [ebp-0x10]
10005fee:	mov    BYTE PTR [ebx+0x44],0x1
10005ff2:	xor    ebx,ebx
10005ff4:	push   ebx
10005ff5:	lea    esi,[edi+0xc]
10005ff8:	push   0x1
10005ffa:	lea    ecx,[esi+0x1c]
10005ffd:	call   0x100012f4
10006002:	push   ebx
10006003:	push   0x1
10006005:	mov    ecx,esi
10006007:	call   0x100012f4
1000600c:	push   edi
1000600d:	call   0x100430d2
10006012:	cmp    DWORD PTR ds:0x10080c34,ebx
10006018:	pop    ecx
10006019:	jbe    0x10006021
1000601b:	dec    DWORD PTR ds:0x10080c34
10006021:	mov    ecx,DWORD PTR [ebp+0xc]
10006024:	mov    eax,DWORD PTR [ebp+0x8]
10006027:	mov    DWORD PTR [eax],ecx
10006029:	mov    ecx,DWORD PTR [ebp+0x10]
1000602c:	mov    DWORD PTR [eax+0x4],ecx
1000602f:	call   0x10059d4d
10006034:	ret    0xc
10006037:	push   0x48
10006039:	call   0x100436de
1000603e:	xor    edx,edx
10006040:	cmp    eax,edx
10006042:	pop    ecx
10006043:	je     0x10006047
10006045:	mov    DWORD PTR [eax],edx
10006047:	lea    ecx,[eax+0x4]
1000604a:	cmp    ecx,edx
1000604c:	je     0x10006050
1000604e:	mov    DWORD PTR [ecx],edx
10006050:	lea    ecx,[eax+0x8]
10006053:	cmp    ecx,edx
10006055:	je     0x10006059
10006057:	mov    DWORD PTR [ecx],edx
10006059:	mov    BYTE PTR [eax+0x44],0x1
1000605d:	mov    BYTE PTR [eax+0x45],dl
10006060:	ret    
10006061:	push   ebp
10006062:	mov    ebp,esp
10006064:	sub    esp,0x10
10006067:	test   ecx,ecx
10006069:	ja     0x10006079
1000606b:	xor    ecx,ecx
1000606d:	lea    eax,[ecx+ecx*1]
10006070:	push   eax
10006071:	call   0x100436de
10006076:	pop    ecx
10006077:	leave  
10006078:	ret    
10006079:	or     eax,0xffffffff
1000607c:	xor    edx,edx
1000607e:	div    ecx
10006080:	cmp    eax,0x2
10006083:	jae    0x1000606d
10006085:	and    DWORD PTR [ebp-0x4],0x0
10006089:	lea    eax,[ebp-0x4]
1000608c:	push   eax
1000608d:	lea    ecx,[ebp-0x10]
10006090:	call   0x10043152
10006095:	push   0x10074e18
1000609a:	lea    eax,[ebp-0x10]
1000609d:	push   eax
1000609e:	mov    DWORD PTR [ebp-0x10],0x100665c8
100060a5:	call   0x10047c54
100060aa:	int3   
100060ab:	push   0x48
100060ad:	mov    eax,0x100603a7
100060b2:	call   0x10059c75
100060b7:	mov    edi,DWORD PTR [ebp+0x10]
100060ba:	cmp    BYTE PTR [edi+0x45],0x0
100060be:	je     0x100060f2
100060c0:	push   0x1006ccec
100060c5:	lea    ecx,[ebp-0x2c]
100060c8:	call   0x100011d1
100060cd:	and    DWORD PTR [ebp-0x4],0x0
100060d1:	lea    eax,[ebp-0x2c]
100060d4:	push   eax
100060d5:	lea    ecx,[ebp-0x54]
100060d8:	call   0x1000106e
100060dd:	push   0x10074de0
100060e2:	lea    eax,[ebp-0x54]
100060e5:	push   eax
100060e6:	mov    DWORD PTR [ebp-0x54],0x1006b978
100060ed:	call   0x10047c54
100060f2:	lea    esi,[ebp+0xc]
100060f5:	mov    DWORD PTR [ebp-0x10],edi
100060f8:	call   0x10005968
100060fd:	mov    ecx,DWORD PTR [edi]
100060ff:	cmp    BYTE PTR [ecx+0x45],0x0
10006103:	je     0x1000610a
10006105:	mov    ebx,DWORD PTR [edi+0x8]
10006108:	jmp    0x10006121
1000610a:	mov    eax,DWORD PTR [edi+0x8]
1000610d:	cmp    BYTE PTR [eax+0x45],0x0
10006111:	je     0x10006117
10006113:	mov    ebx,ecx
10006115:	jmp    0x10006121
10006117:	mov    eax,DWORD PTR [ebp+0x10]
1000611a:	cmp    eax,edi
1000611c:	mov    ebx,DWORD PTR [eax+0x8]
1000611f:	jne    0x10006199
10006121:	cmp    BYTE PTR [ebx+0x45],0x0
10006125:	mov    esi,DWORD PTR [edi+0x4]
10006128:	jne    0x1000612d
1000612a:	mov    DWORD PTR [ebx+0x4],esi
1000612d:	mov    eax,ds:0x10080c24
10006132:	cmp    DWORD PTR [eax+0x4],edi
10006135:	jne    0x1000613c
10006137:	mov    DWORD PTR [eax+0x4],ebx
1000613a:	jmp    0x10006147
1000613c:	cmp    DWORD PTR [esi],edi
1000613e:	jne    0x10006144
10006140:	mov    DWORD PTR [esi],ebx
10006142:	jmp    0x10006147
10006144:	mov    DWORD PTR [esi+0x8],ebx
10006147:	mov    edx,DWORD PTR ds:0x10080c24
1000614d:	cmp    DWORD PTR [edx],edi
1000614f:	jne    0x1000616d
10006151:	cmp    BYTE PTR [ebx+0x45],0x0
10006155:	je     0x1000615b
10006157:	mov    ecx,esi
10006159:	jmp    0x1000616b
1000615b:	mov    eax,DWORD PTR [ebx]
1000615d:	mov    ecx,ebx
1000615f:	jmp    0x10006165
10006161:	mov    ecx,eax
10006163:	mov    eax,DWORD PTR [ecx]
10006165:	cmp    BYTE PTR [eax+0x45],0x0
10006169:	je     0x10006161
1000616b:	mov    DWORD PTR [edx],ecx
1000616d:	mov    edx,DWORD PTR ds:0x10080c24
10006173:	cmp    DWORD PTR [edx+0x8],edi
10006176:	jne    0x100061f3
10006178:	cmp    BYTE PTR [ebx+0x45],0x0
1000617c:	je     0x10006182
1000617e:	mov    ecx,esi
10006180:	jmp    0x10006194
10006182:	mov    eax,DWORD PTR [ebx+0x8]
10006185:	mov    ecx,ebx
10006187:	jmp    0x1000618e
10006189:	mov    ecx,eax
1000618b:	mov    eax,DWORD PTR [ecx+0x8]
1000618e:	cmp    BYTE PTR [eax+0x45],0x0
10006192:	je     0x10006189
10006194:	mov    DWORD PTR [edx+0x8],ecx
10006197:	jmp    0x100061f3
10006199:	mov    DWORD PTR [ecx+0x4],eax
1000619c:	mov    ecx,DWORD PTR [edi]
1000619e:	mov    DWORD PTR [eax],ecx
100061a0:	cmp    eax,DWORD PTR [edi+0x8]
100061a3:	jne    0x100061a9
100061a5:	mov    esi,eax
100061a7:	jmp    0x100061c3
100061a9:	cmp    BYTE PTR [ebx+0x45],0x0
100061ad:	mov    esi,DWORD PTR [eax+0x4]
100061b0:	jne    0x100061b5
100061b2:	mov    DWORD PTR [ebx+0x4],esi
100061b5:	mov    DWORD PTR [esi],ebx
100061b7:	mov    ecx,DWORD PTR [edi+0x8]
100061ba:	mov    DWORD PTR [eax+0x8],ecx
100061bd:	mov    ecx,DWORD PTR [edi+0x8]
100061c0:	mov    DWORD PTR [ecx+0x4],eax
100061c3:	mov    ecx,DWORD PTR ds:0x10080c24
100061c9:	cmp    DWORD PTR [ecx+0x4],edi
100061cc:	jne    0x100061d3
100061ce:	mov    DWORD PTR [ecx+0x4],eax
100061d1:	jmp    0x100061e1
100061d3:	mov    ecx,DWORD PTR [edi+0x4]
100061d6:	cmp    DWORD PTR [ecx],edi
100061d8:	jne    0x100061de
100061da:	mov    DWORD PTR [ecx],eax
100061dc:	jmp    0x100061e1
100061de:	mov    DWORD PTR [ecx+0x8],eax
100061e1:	mov    ecx,DWORD PTR [edi+0x4]
100061e4:	mov    DWORD PTR [eax+0x4],ecx
100061e7:	mov    dl,BYTE PTR [edi+0x44]
100061ea:	mov    cl,BYTE PTR [eax+0x44]
100061ed:	mov    BYTE PTR [eax+0x44],dl
100061f0:	mov    BYTE PTR [edi+0x44],cl
100061f3:	cmp    BYTE PTR [edi+0x44],0x1
100061f7:	jne    0x1000630c
100061fd:	mov    eax,ds:0x10080c24
10006202:	cmp    ebx,DWORD PTR [eax+0x4]
10006205:	je     0x10006308
1000620b:	mov    edi,0x10080c20
10006210:	cmp    BYTE PTR [ebx+0x44],0x1
10006214:	jne    0x10006305
1000621a:	mov    ecx,DWORD PTR [esi]
1000621c:	cmp    ebx,ecx
1000621e:	jne    0x1000628a
10006220:	mov    ecx,DWORD PTR [esi+0x8]
10006223:	cmp    BYTE PTR [ecx+0x44],0x0
10006227:	jne    0x1000623c
10006229:	mov    BYTE PTR [ecx+0x44],0x1
1000622d:	push   edi
1000622e:	mov    ecx,esi
10006230:	mov    BYTE PTR [esi+0x44],0x0
10006234:	call   0x10005cbd
10006239:	mov    ecx,DWORD PTR [esi+0x8]
1000623c:	cmp    BYTE PTR [ecx+0x45],0x0
10006240:	jne    0x100062bd
10006242:	mov    eax,DWORD PTR [ecx]
10006244:	cmp    BYTE PTR [eax+0x44],0x1
10006248:	jne    0x10006253
1000624a:	mov    eax,DWORD PTR [ecx+0x8]
1000624d:	cmp    BYTE PTR [eax+0x44],0x1
10006251:	je     0x100062b9
10006253:	mov    eax,DWORD PTR [ecx+0x8]
10006256:	cmp    BYTE PTR [eax+0x44],0x1
1000625a:	jne    0x1000626f
1000625c:	mov    eax,DWORD PTR [ecx]
1000625e:	mov    BYTE PTR [eax+0x44],0x1
10006262:	push   edi
10006263:	mov    BYTE PTR [ecx+0x44],0x0
10006267:	call   0x10005cfd
1000626c:	mov    ecx,DWORD PTR [esi+0x8]
1000626f:	mov    al,BYTE PTR [esi+0x44]
10006272:	mov    BYTE PTR [ecx+0x44],al
10006275:	mov    BYTE PTR [esi+0x44],0x1
10006279:	mov    eax,DWORD PTR [ecx+0x8]
1000627c:	push   edi
1000627d:	mov    ecx,esi
1000627f:	mov    BYTE PTR [eax+0x44],0x1
10006283:	call   0x10005cbd
10006288:	jmp    0x10006305
1000628a:	cmp    BYTE PTR [ecx+0x44],0x0
1000628e:	jne    0x100062a2
10006290:	mov    BYTE PTR [ecx+0x44],0x1
10006294:	push   edi
10006295:	mov    ecx,esi
10006297:	mov    BYTE PTR [esi+0x44],0x0
1000629b:	call   0x10005cfd
100062a0:	mov    ecx,DWORD PTR [esi]
100062a2:	cmp    BYTE PTR [ecx+0x45],0x0
100062a6:	jne    0x100062bd
100062a8:	mov    eax,DWORD PTR [ecx+0x8]
100062ab:	cmp    BYTE PTR [eax+0x44],0x1
100062af:	jne    0x100062d2
100062b1:	mov    eax,DWORD PTR [ecx]
100062b3:	cmp    BYTE PTR [eax+0x44],0x1
100062b7:	jne    0x100062d2
100062b9:	mov    BYTE PTR [ecx+0x44],0x0
100062bd:	mov    eax,ds:0x10080c24
100062c2:	mov    ebx,esi
100062c4:	cmp    ebx,DWORD PTR [eax+0x4]
100062c7:	mov    esi,DWORD PTR [esi+0x4]
100062ca:	jne    0x10006210
100062d0:	jmp    0x10006305
100062d2:	mov    eax,DWORD PTR [ecx]
100062d4:	cmp    BYTE PTR [eax+0x44],0x1
100062d8:	jne    0x100062ed
100062da:	mov    eax,DWORD PTR [ecx+0x8]
100062dd:	mov    BYTE PTR [eax+0x44],0x1
100062e1:	push   edi
100062e2:	mov    BYTE PTR [ecx+0x44],0x0
100062e6:	call   0x10005cbd
100062eb:	mov    ecx,DWORD PTR [esi]
100062ed:	mov    al,BYTE PTR [esi+0x44]
100062f0:	mov    BYTE PTR [ecx+0x44],al
100062f3:	mov    BYTE PTR [esi+0x44],0x1
100062f7:	mov    eax,DWORD PTR [ecx]
100062f9:	push   edi
100062fa:	mov    ecx,esi
100062fc:	mov    BYTE PTR [eax+0x44],0x1
10006300:	call   0x10005cfd
10006305:	mov    edi,DWORD PTR [ebp-0x10]
10006308:	mov    BYTE PTR [ebx+0x44],0x1
1000630c:	add    edi,0xc
1000630f:	call   0x10004ca8
10006314:	push   DWORD PTR [ebp-0x10]
10006317:	call   0x100430d2
1000631c:	cmp    DWORD PTR ds:0x10080c28,0x0
10006323:	pop    ecx
10006324:	jbe    0x1000632c
10006326:	dec    DWORD PTR ds:0x10080c28
1000632c:	mov    ecx,DWORD PTR [ebp+0xc]
1000632f:	mov    eax,DWORD PTR [ebp+0x8]
10006332:	mov    DWORD PTR [eax],ecx
10006334:	mov    ecx,DWORD PTR [ebp+0x10]
10006337:	mov    DWORD PTR [eax+0x4],ecx
1000633a:	call   0x10059d4d
1000633f:	ret    0xc
10006342:	push   0x0
10006344:	mov    eax,0x10061151
10006349:	call   0x10059c75
1000634e:	mov    ebx,ecx
10006350:	mov    eax,DWORD PTR [ebp+0x8]
10006353:	mov    DWORD PTR [esi],eax
10006355:	mov    eax,DWORD PTR [ebp+0xc]
10006358:	mov    DWORD PTR [esi+0x4],eax
1000635b:	mov    eax,DWORD PTR [ebp+0x10]
1000635e:	lea    edi,[esi+0xc]
10006361:	push   ebx
10006362:	mov    ecx,edi
10006364:	mov    DWORD PTR [esi+0x8],eax
10006367:	mov    DWORD PTR [ebp+0x8],edi
1000636a:	call   0x100011ab
1000636f:	and    DWORD PTR [ebp-0x4],0x0
10006373:	add    ebx,0x1c
10006376:	push   ebx
10006377:	lea    ecx,[edi+0x1c]
1000637a:	call   0x100011ab
1000637f:	mov    BYTE PTR [esi+0x44],0x0
10006383:	mov    BYTE PTR [esi+0x45],0x0
10006387:	mov    eax,esi
10006389:	call   0x10059d4d
1000638e:	ret    0xc
10006391:	push   0x0
10006393:	mov    eax,0x100607d6
10006398:	call   0x10059c75
1000639d:	mov    eax,DWORD PTR [ebp+0x8]
100063a0:	mov    DWORD PTR [edi],eax
100063a2:	mov    eax,DWORD PTR [ebp+0xc]
100063a5:	mov    DWORD PTR [edi+0x4],eax
100063a8:	mov    eax,DWORD PTR [ebp+0x10]
100063ab:	mov    DWORD PTR [edi+0x8],eax
100063ae:	lea    esi,[edi+0xc]
100063b1:	mov    eax,ebx
100063b3:	mov    DWORD PTR [ebp+0x8],esi
100063b6:	call   0x10004b2b
100063bb:	and    DWORD PTR [ebp-0x4],0x0
100063bf:	lea    eax,[ebx+0x1c]
100063c2:	add    esi,0x1c
100063c5:	call   0x10004b2b
100063ca:	mov    BYTE PTR [edi+0x44],0x0
100063ce:	mov    BYTE PTR [edi+0x45],0x0
100063d2:	mov    eax,edi
100063d4:	call   0x10059d4d
100063d9:	ret    0xc
100063dc:	push   ebp
100063dd:	mov    ebp,esp
100063df:	push   ecx
100063e0:	push   esi
100063e1:	push   edi
100063e2:	mov    edi,DWORD PTR [ebp+0x8]
100063e5:	cmp    BYTE PTR [edi+0x45],0x0
100063e9:	mov    DWORD PTR [ebp-0x4],ecx
100063ec:	mov    esi,edi
100063ee:	jne    0x10006428
100063f0:	push   ebx
100063f1:	push   DWORD PTR [esi+0x8]
100063f4:	mov    ecx,DWORD PTR [ebp-0x4]
100063f7:	call   0x100063dc
100063fc:	mov    esi,DWORD PTR [esi]
100063fe:	push   0x0
10006400:	lea    ebx,[edi+0xc]
10006403:	push   0x1
10006405:	lea    ecx,[ebx+0x1c]
10006408:	call   0x100012f4
1000640d:	push   0x0
1000640f:	push   0x1
10006411:	mov    ecx,ebx
10006413:	call   0x100012f4
10006418:	push   edi
10006419:	call   0x100430d2
1000641e:	cmp    BYTE PTR [esi+0x45],0x0
10006422:	pop    ecx
10006423:	mov    edi,esi
10006425:	je     0x100063f1
10006427:	pop    ebx
10006428:	pop    edi
10006429:	pop    esi
1000642a:	leave  
1000642b:	ret    0x4
1000642e:	push   ebx
1000642f:	mov    ebx,DWORD PTR [esp+0x8]
10006433:	cmp    BYTE PTR [ebx+0x45],0x0
10006437:	push   ebp
10006438:	push   esi
10006439:	mov    ebp,ecx
1000643b:	mov    esi,ebx
1000643d:	jne    0x10006464
1000643f:	push   edi
10006440:	push   DWORD PTR [esi+0x8]
10006443:	mov    ecx,ebp
10006445:	call   0x1000642e
1000644a:	mov    esi,DWORD PTR [esi]
1000644c:	lea    edi,[ebx+0xc]
1000644f:	call   0x10004ca8
10006454:	push   ebx
10006455:	call   0x100430d2
1000645a:	cmp    BYTE PTR [esi+0x45],0x0
1000645e:	pop    ecx
1000645f:	mov    ebx,esi
10006461:	je     0x10006440
10006463:	pop    edi
10006464:	pop    esi
10006465:	pop    ebp
10006466:	pop    ebx
10006467:	ret    0x4
1000646a:	push   ebx
1000646b:	mov    ebx,DWORD PTR [esp+0x8]
1000646f:	test   ebx,ebx
10006471:	push   esi
10006472:	mov    esi,eax
10006474:	jne    0x10006480
10006476:	push   0x80070057
1000647b:	call   0x10001f24
10006480:	push   edi
10006481:	lea    eax,[esp+0x14]
10006485:	push   eax
10006486:	push   ebx
10006487:	call   0x1004399e
1000648c:	pop    ecx
1000648d:	pop    ecx
1000648e:	mov    edi,eax
10006490:	push   edi
10006491:	call   0x1000219e
10006496:	lea    ecx,[esp+0x14]
1000649a:	push   ecx
1000649b:	push   ebx
1000649c:	lea    ecx,[edi+0x1]
1000649f:	push   ecx
100064a0:	push   eax
100064a1:	call   0x100451b8
100064a6:	add    esp,0x10
100064a9:	mov    eax,edi
100064ab:	pop    edi
100064ac:	mov    edx,esi
100064ae:	pop    esi
100064af:	pop    ebx
100064b0:	jmp    0x10002229
100064b5:	push   0x20
100064b7:	mov    eax,0x100601cd
100064bc:	call   0x10059c75
100064c1:	push   DWORD PTR [ebp+0xc]
100064c4:	and    DWORD PTR [ebp-0x10],0x0
100064c8:	lea    ecx,[ebp-0x2c]
100064cb:	call   0x100011ab
100064d0:	push   DWORD PTR [ebp+0x10]
100064d3:	and    DWORD PTR [ebp-0x4],0x0
100064d7:	push   eax
100064d8:	call   0x10004120
100064dd:	mov    ecx,DWORD PTR [ebp+0x8]
100064e0:	push   eax
100064e1:	call   0x100011ab
100064e6:	push   0x0
100064e8:	push   0x1
100064ea:	lea    ecx,[ebp-0x2c]
100064ed:	call   0x100012f4
100064f2:	mov    eax,DWORD PTR [ebp+0x8]
100064f5:	call   0x10059d4d
100064fa:	ret    
100064fb:	push   0x20
100064fd:	mov    eax,0x100601cd
10006502:	call   0x10059c75
10006507:	push   DWORD PTR [ebp+0xc]
1000650a:	and    DWORD PTR [ebp-0x10],0x0
1000650e:	lea    ecx,[ebp-0x2c]
10006511:	call   0x100011ab
10006516:	mov    esi,eax
10006518:	mov    eax,DWORD PTR [ebp+0x10]
1000651b:	and    DWORD PTR [ebp-0x4],0x0
1000651f:	push   0xffffffff
10006521:	push   0x0
10006523:	call   0x10004cc2
10006528:	mov    ecx,DWORD PTR [ebp+0x8]
1000652b:	push   eax
1000652c:	call   0x100011ab
10006531:	push   0x0
10006533:	push   0x1
10006535:	lea    ecx,[ebp-0x2c]
10006538:	call   0x100012f4
1000653d:	mov    eax,DWORD PTR [ebp+0x8]
10006540:	call   0x10059d4d
10006545:	ret    
10006546:	push   0x20
10006548:	mov    eax,0x100601cd
1000654d:	call   0x10059c75
10006552:	push   DWORD PTR [ebp+0xc]
10006555:	and    DWORD PTR [ebp-0x10],0x0
10006559:	lea    ecx,[ebp-0x2c]
1000655c:	call   0x100011d1
10006561:	mov    esi,eax
10006563:	mov    eax,DWORD PTR [ebp+0x10]
10006566:	and    DWORD PTR [ebp-0x4],0x0
1000656a:	push   0xffffffff
1000656c:	push   0x0
1000656e:	call   0x10004cc2
10006573:	mov    ecx,DWORD PTR [ebp+0x8]
10006576:	push   eax
10006577:	call   0x100011ab
1000657c:	push   0x0
1000657e:	push   0x1
10006580:	lea    ecx,[ebp-0x2c]
10006583:	call   0x100012f4
10006588:	mov    eax,DWORD PTR [ebp+0x8]
1000658b:	call   0x10059d4d
10006590:	ret    
10006591:	cmp    DWORD PTR [ecx+0x18],0x10
10006595:	push   edi
10006596:	mov    edi,DWORD PTR [ecx+0x14]
10006599:	jb     0x100065a0
1000659b:	mov    ecx,DWORD PTR [ecx+0x4]
1000659e:	jmp    0x100065a3
100065a0:	add    ecx,0x4
100065a3:	push   ecx
100065a4:	mov    ecx,DWORD PTR [eax+0x14]
100065a7:	call   0x100046d0
100065ac:	neg    eax
100065ae:	sbb    eax,eax
100065b0:	inc    eax
100065b1:	pop    edi
100065b2:	ret    
100065b3:	push   edi
100065b4:	push   DWORD PTR [esp+0x8]
100065b8:	call   0x10043250
100065bd:	pop    ecx
100065be:	push   DWORD PTR [esp+0x8]
100065c2:	mov    ecx,DWORD PTR [esi+0x14]
100065c5:	mov    edi,eax
100065c7:	mov    eax,esi
100065c9:	call   0x100046d0
100065ce:	neg    eax
100065d0:	sbb    eax,eax
100065d2:	inc    eax
100065d3:	pop    edi
100065d4:	ret    
100065d5:	add    eax,eax
100065d7:	push   eax
100065d8:	push   DWORD PTR [esp+0x10]
100065dc:	mov    eax,DWORD PTR [esp+0x10]
100065e0:	add    eax,eax
100065e2:	push   eax
100065e3:	push   DWORD PTR [esp+0x10]
100065e7:	call   0x10043605
100065ec:	mov    eax,DWORD PTR [esp+0x14]
100065f0:	add    esp,0x10
100065f3:	ret    
100065f4:	push   esi
100065f5:	mov    esi,ecx
100065f7:	mov    ecx,DWORD PTR [eax+0x14]
100065fa:	cmp    ecx,esi
100065fc:	jae    0x10006600
100065fe:	mov    esi,ecx
10006600:	cmp    esi,edi
10006602:	mov    edx,esi
10006604:	jb     0x10006608
10006606:	mov    edx,edi
10006608:	cmp    DWORD PTR [eax+0x18],0x8
1000660c:	jb     0x10006613
1000660e:	mov    eax,DWORD PTR [eax+0x4]
10006611:	jmp    0x10006616
10006613:	add    eax,0x4
10006616:	test   edx,edx
10006618:	mov    ecx,DWORD PTR [esp+0x8]
1000661c:	push   ebx
1000661d:	jbe    0x1000662e
1000661f:	mov    bx,WORD PTR [eax]
10006622:	cmp    bx,WORD PTR [ecx]
10006625:	jne    0x1000663e
10006627:	inc    eax
10006628:	inc    eax
10006629:	inc    ecx
1000662a:	inc    ecx
1000662b:	dec    edx
1000662c:	jne    0x1000661f
1000662e:	xor    eax,eax
10006630:	test   eax,eax
10006632:	pop    ebx
10006633:	jne    0x10006653
10006635:	cmp    esi,edi
10006637:	jae    0x1000664c
10006639:	or     eax,0xffffffff
1000663c:	jmp    0x10006653
1000663e:	movzx  eax,WORD PTR [eax]
10006641:	cmp    ax,WORD PTR [ecx]
10006644:	sbb    eax,eax
10006646:	and    eax,0xfffffffe
10006649:	inc    eax
1000664a:	jmp    0x10006630
1000664c:	xor    eax,eax
1000664e:	cmp    esi,edi
10006650:	setne  al
10006653:	pop    esi
10006654:	ret    0x4
10006657:	mov    ecx,DWORD PTR [esp+0x4]
1000665b:	push   0x0
1000665d:	push   0x1
1000665f:	call   0x100012f4
10006664:	test   BYTE PTR [esp+0x8],0x1
10006669:	je     0x10006675
1000666b:	push   DWORD PTR [esp+0x4]
1000666f:	call   0x100430d2
10006674:	pop    ecx
10006675:	mov    eax,DWORD PTR [esp+0x4]
10006679:	ret    0x8
1000667c:	call   DWORD PTR ds:0x100660cc
10006682:	test   eax,eax
10006684:	jle    0x10006690
10006686:	and    eax,0xffff
1000668b:	or     eax,0x80070000
10006690:	ret    
10006691:	push   ebp
10006692:	mov    ebp,esp
10006694:	push   0x0
10006696:	push   DWORD PTR [ebp+0x1c]
10006699:	push   DWORD PTR [ebp+0x18]
1000669c:	push   0x0
1000669e:	push   DWORD PTR [ebp+0x14]
100066a1:	push   DWORD PTR [ebp+0x10]
100066a4:	push   DWORD PTR [ebp+0xc]
100066a7:	call   DWORD PTR ds:0x100660c0
100066ad:	cmp    eax,0xffffffff
100066b0:	jne    0x100066b9
100066b2:	call   0x1000667c
100066b7:	jmp    0x100066c0
100066b9:	mov    ecx,DWORD PTR [ebp+0x8]
100066bc:	mov    DWORD PTR [ecx],eax
100066be:	xor    eax,eax
100066c0:	pop    ebp
100066c1:	ret    0x18
100066c4:	mov    eax,DWORD PTR [esi]
100066c6:	test   eax,eax
100066c8:	je     0x100066d4
100066ca:	push   eax
100066cb:	call   DWORD PTR ds:0x10066070
100066d1:	and    DWORD PTR [esi],0x0
100066d4:	ret    
100066d5:	push   0x254
100066da:	mov    eax,0x10063f6c
100066df:	call   0x10059cde
100066e4:	test   BYTE PTR ds:0x10081434,0x1
100066eb:	jne    0x10006a47
100066f1:	or     DWORD PTR ds:0x10081434,0x1
100066f8:	and    DWORD PTR ds:0x10081428,0x0
100066ff:	push   0x100659e6
10006704:	call   0x100434b4
10006709:	pop    ecx
1000670a:	jmp    0x10006a47
1000670f:	lea    eax,[ebp-0x218]
10006715:	push   eax
10006716:	mov    esi,0x100
1000671b:	push   esi
1000671c:	mov    BYTE PTR ds:0x10080c3e,0x1
10006723:	call   DWORD PTR ds:0x100660c8
10006729:	cmp    eax,esi
1000672b:	ja     0x10006aea
10006731:	lea    eax,[ebp-0x218]
10006737:	push   eax
10006738:	lea    eax,[ebp-0x21c]
1000673e:	push   eax
1000673f:	call   0x10002349
10006744:	xor    ebx,ebx
10006746:	lea    eax,[ebp-0x21c]
1000674c:	mov    DWORD PTR [ebp-0x4],ebx
1000674f:	call   0x10006bde
10006754:	lea    edi,[ebp-0x260]
1000675a:	call   0x10033880
1000675f:	mov    BYTE PTR [ebp-0x4],0x1
10006763:	cmp    DWORD PTR [eax+0x18],0x10
10006767:	jb     0x1000676e
10006769:	mov    eax,DWORD PTR [eax+0x4]
1000676c:	jmp    0x10006771
1000676e:	add    eax,0x4
10006771:	push   eax
10006772:	lea    eax,[ebp-0x21c]
10006778:	push   eax
10006779:	call   0x10006b03
1000677e:	push   ebx
1000677f:	push   0x1
10006781:	lea    ecx,[ebp-0x260]
10006787:	mov    BYTE PTR [ebp-0x4],0x0
1000678b:	call   0x100012f4
10006790:	push   0x1006d188
10006795:	push   0x4
10006797:	push   0x1006d1c0
1000679c:	call   0x100042e3
100067a1:	add    esp,0xc
100067a4:	push   eax
100067a5:	lea    eax,[ebp-0x21c]
100067ab:	push   eax
100067ac:	call   0x10006b03
100067b1:	mov    DWORD PTR [ebp-0x220],ebx
100067b7:	push   ebx
100067b8:	push   0x4
100067ba:	push   0x7
100067bc:	push   0xc0000000
100067c1:	lea    esi,[ebp-0x21c]
100067c7:	mov    BYTE PTR [ebp-0x4],0x2
100067cb:	call   0x10004208
100067d0:	push   eax
100067d1:	lea    eax,[ebp-0x220]
100067d7:	push   eax
100067d8:	call   0x10006691
100067dd:	test   eax,eax
100067df:	je     0x1000691c
100067e5:	call   DWORD PTR ds:0x100660cc
100067eb:	cmp    eax,0x20
100067ee:	jne    0x10006ac4
100067f4:	push   ebx
100067f5:	push   0x4
100067f7:	push   0x7
100067f9:	push   0x80000000
100067fe:	call   0x10004208
10006803:	push   eax
10006804:	lea    eax,[ebp-0x220]
1000680a:	push   eax
1000680b:	call   0x10006691
10006810:	test   eax,eax
10006812:	jne    0x10006ac4
10006818:	mov    eax,ds:0x10080d34
1000681d:	push   0xa
1000681f:	push   0x12c
10006824:	push   eax
10006825:	mov    ebx,eax
10006827:	call   DWORD PTR ds:0x1006607c
1000682d:	test   eax,eax
1000682f:	je     0x10006a59
10006835:	lea    ecx,[ebp-0x234]
1000683b:	push   ecx
1000683c:	mov    edi,eax
1000683e:	call   0x10033940
10006843:	test   eax,eax
10006845:	pop    ecx
10006846:	je     0x10006a59
1000684c:	xor    edi,edi
1000684e:	push   edi
1000684f:	push   DWORD PTR ds:0x10080db8
10006855:	lea    edx,[ebp-0x225]
1000685b:	push   DWORD PTR [ebp-0x234]
10006861:	lea    ecx,[ebp-0x224]
10006867:	push   eax
10006868:	lea    eax,[ebp-0x238]
1000686e:	push   eax
1000686f:	mov    DWORD PTR [ebp-0x224],edi
10006875:	call   0x100399a0
1000687a:	mov    ecx,DWORD PTR [eax]
1000687c:	mov    esi,ecx
1000687e:	add    esp,0x14
10006881:	mov    DWORD PTR [eax],edi
10006883:	mov    DWORD PTR [ebp-0x230],esi
10006889:	mov    BYTE PTR [ebp-0x4],0x3
1000688d:	push   DWORD PTR [ebp-0x238]
10006893:	call   0x100430d2
10006898:	mov    ebx,DWORD PTR [ebp-0x224]
1000689e:	cmp    ebx,edi
100068a0:	pop    ecx
100068a1:	je     0x10006a86
100068a7:	cmp    esi,edi
100068a9:	je     0x10006a86
100068af:	lea    edi,[ebx+0x1]
100068b2:	push   edi
100068b3:	call   0x100439b6
100068b8:	and    DWORD PTR [ebp-0x22c],0x0
100068bf:	pop    ecx
100068c0:	push   0x0
100068c2:	lea    ecx,[ebp-0x22c]
100068c8:	push   ecx
100068c9:	push   edi
100068ca:	mov    edi,DWORD PTR [ebp-0x220]
100068d0:	push   eax
100068d1:	push   edi
100068d2:	mov    DWORD PTR [ebp-0x224],eax
100068d8:	call   DWORD PTR ds:0x100660d4
100068de:	test   eax,eax
100068e0:	jne    0x100068e7
100068e2:	call   0x1000667c
100068e7:	cmp    DWORD PTR [ebp-0x22c],ebx
100068ed:	jne    0x10006a67
100068f3:	push   ebx
100068f4:	push   esi
100068f5:	push   DWORD PTR [ebp-0x224]
100068fb:	call   0x100439bb
10006900:	add    esp,0xc
10006903:	test   eax,eax
10006905:	jne    0x10006a67
1000690b:	push   DWORD PTR [ebp-0x224]
10006911:	call   0x100430d2
10006916:	pop    ecx
10006917:	jmp    0x10006a06
1000691c:	mov    eax,ds:0x10080d34
10006921:	push   0xa
10006923:	push   0x12c
10006928:	push   eax
10006929:	mov    ebx,eax
1000692b:	call   DWORD PTR ds:0x1006607c
10006931:	test   eax,eax
10006933:	je     0x10006a59
10006939:	lea    ecx,[ebp-0x240]
1000693f:	push   ecx
10006940:	mov    edi,eax
10006942:	call   0x10033940
10006947:	test   eax,eax
10006949:	pop    ecx
1000694a:	je     0x10006a59
10006950:	xor    ebx,ebx
10006952:	push   ebx
10006953:	push   DWORD PTR ds:0x10080db8
10006959:	lea    edx,[ebp-0x226]
1000695f:	push   DWORD PTR [ebp-0x240]
10006965:	lea    ecx,[ebp-0x224]
1000696b:	push   eax
1000696c:	lea    eax,[ebp-0x23c]
10006972:	push   eax
10006973:	mov    DWORD PTR [ebp-0x224],ebx
10006979:	call   0x100399a0
1000697e:	mov    ecx,DWORD PTR [eax]
10006980:	add    esp,0x14
10006983:	mov    DWORD PTR [eax],ebx
10006985:	push   DWORD PTR [ebp-0x23c]
1000698b:	mov    esi,ecx
1000698d:	call   0x100430d2
10006992:	cmp    DWORD PTR [ebp-0x224],ebx
10006998:	pop    ecx
10006999:	je     0x10006ab8
1000699f:	cmp    esi,ebx
100069a1:	je     0x10006ab8
100069a7:	mov    edi,DWORD PTR [ebp-0x220]
100069ad:	push   ebx
100069ae:	lea    eax,[ebp-0x244]
100069b4:	push   eax
100069b5:	push   DWORD PTR [ebp-0x224]
100069bb:	push   esi
100069bc:	push   edi
100069bd:	call   DWORD PTR ds:0x100660b4
100069c3:	cmp    eax,ebx
100069c5:	jne    0x100069ce
100069c7:	call   0x1000667c
100069cc:	jmp    0x100069d0
100069ce:	xor    eax,eax
100069d0:	cmp    eax,ebx
100069d2:	jl     0x10006a9a
100069d8:	mov    eax,DWORD PTR [ebp-0x224]
100069de:	cmp    DWORD PTR [ebp-0x244],eax
100069e4:	jne    0x10006ab1
100069ea:	push   edi
100069eb:	call   DWORD PTR ds:0x100660d8
100069f1:	test   eax,eax
100069f3:	jne    0x100069fc
100069f5:	call   0x1000667c
100069fa:	jmp    0x100069fe
100069fc:	xor    eax,eax
100069fe:	cmp    eax,ebx
10006a00:	jl     0x10006aa7
10006a06:	push   esi
10006a07:	call   0x100430d2
10006a0c:	test   edi,edi
10006a0e:	pop    ecx
10006a0f:	mov    BYTE PTR [ebp-0x4],0x0
10006a13:	je     0x10006a1c
10006a15:	push   edi
10006a16:	call   DWORD PTR ds:0x10066070
10006a1c:	push   0x10081428
10006a21:	push   0x2
10006a23:	lea    esi,[ebp-0x21c]
10006a29:	call   0x10004208
10006a2e:	push   eax
10006a2f:	call   DWORD PTR ds:0x100662a4
10006a35:	or     DWORD PTR [ebp-0x4],0xffffffff
10006a39:	mov    eax,DWORD PTR [ebp-0x21c]
10006a3f:	add    eax,0xfffffff0
10006a42:	call   0x10002060
10006a47:	cmp    BYTE PTR ds:0x10080c3e,0x0
10006a4e:	je     0x1000670f
10006a54:	jmp    0x10006aea
10006a59:	call   0x1000205f
10006a5e:	cmp    DWORD PTR [ebp-0x220],0x0
10006a65:	jmp    0x10006aca
10006a67:	call   0x1000205f
10006a6c:	push   DWORD PTR [ebp-0x224]
10006a72:	call   0x100430d2
10006a77:	pop    ecx
10006a78:	push   esi
10006a79:	call   0x100430d2
10006a7e:	test   edi,edi
10006a80:	pop    ecx
10006a81:	je     0x10006ad8
10006a83:	push   edi
10006a84:	jmp    0x10006ad2
10006a86:	call   0x1000205f
10006a8b:	push   esi
10006a8c:	call   0x100430d2
10006a91:	cmp    DWORD PTR [ebp-0x220],edi
10006a97:	pop    ecx
10006a98:	jmp    0x10006aca
10006a9a:	call   DWORD PTR ds:0x100660cc
10006aa0:	push   eax
10006aa1:	call   0x1000205f
10006aa6:	pop    ecx
10006aa7:	push   esi
10006aa8:	call   0x100430d2
10006aad:	cmp    edi,ebx
10006aaf:	jmp    0x10006a80
10006ab1:	call   0x1000205f
10006ab6:	jmp    0x10006aa7
10006ab8:	call   0x1000205f
10006abd:	push   esi
10006abe:	call   0x100430d2
10006ac3:	pop    ecx
10006ac4:	cmp    DWORD PTR [ebp-0x220],ebx
10006aca:	je     0x10006ad8
10006acc:	push   DWORD PTR [ebp-0x220]
10006ad2:	call   DWORD PTR ds:0x10066070
10006ad8:	or     DWORD PTR [ebp-0x4],0xffffffff
10006adc:	mov    eax,DWORD PTR [ebp-0x21c]
10006ae2:	add    eax,0xfffffff0
10006ae5:	call   0x10002060
10006aea:	mov    eax,ds:0x10081428
10006aef:	test   eax,eax
10006af1:	mov    esi,eax
10006af3:	je     0x10006afb
10006af5:	mov    ecx,DWORD PTR [eax]
10006af7:	push   eax
10006af8:	call   DWORD PTR [ecx+0x4]
10006afb:	mov    eax,esi
10006afd:	call   0x10059d61
10006b02:	ret    
10006b03:	push   0x4
10006b05:	mov    eax,0x10062a4d
10006b0a:	call   0x10059c75
10006b0f:	mov    eax,DWORD PTR [ebp+0x8]
10006b12:	call   0x10004718
10006b17:	push   DWORD PTR [ebp+0xc]
10006b1a:	lea    ecx,[ebp-0x10]
10006b1d:	push   ecx
10006b1e:	mov    ecx,eax
10006b20:	call   0x10006b4b
10006b25:	mov    ecx,DWORD PTR [ebp+0x8]
10006b28:	and    DWORD PTR [ebp-0x4],0x0
10006b2c:	lea    eax,[ebp-0x10]
10006b2f:	call   0x10006b83
10006b34:	mov    esi,eax
10006b36:	mov    eax,DWORD PTR [ebp-0x10]
10006b39:	add    eax,0xfffffff0
10006b3c:	call   0x10002060
10006b41:	mov    eax,esi
10006b43:	call   0x10059d4d
10006b48:	ret    0x8
10006b4b:	push   0x0
10006b4d:	mov    eax,0x10062662
10006b52:	call   0x10059c75
10006b57:	mov    esi,DWORD PTR [ebp+0x8]
10006b5a:	call   0x10002143
10006b5f:	push   DWORD PTR [ebp+0xc]
10006b62:	and    DWORD PTR [ebp-0x4],0x0
10006b66:	push   esi
10006b67:	call   0x1000210e
10006b6c:	test   al,al
10006b6e:	jne    0x10006b79
10006b70:	push   DWORD PTR [ebp+0xc]
10006b73:	push   esi
10006b74:	call   0x100020aa
10006b79:	mov    eax,esi
10006b7b:	call   0x10059d4d
10006b80:	ret    0x8
10006b83:	push   ebp
10006b84:	mov    ebp,esp
10006b86:	sub    esp,0xc
10006b89:	mov    eax,DWORD PTR [eax]
10006b8b:	push   ebx
10006b8c:	push   esi
10006b8d:	push   edi
10006b8e:	mov    edi,eax
10006b90:	mov    esi,ecx
10006b92:	mov    ecx,DWORD PTR [eax-0xc]
10006b95:	mov    eax,DWORD PTR [esi]
10006b97:	mov    ebx,DWORD PTR [eax-0xc]
10006b9a:	mov    DWORD PTR [ebp-0x8],edi
10006b9d:	sub    edi,eax
10006b9f:	lea    eax,[ebx+ecx*1]
10006ba2:	push   eax
10006ba3:	mov    DWORD PTR [ebp-0x4],ecx
10006ba6:	sar    edi,1
10006ba8:	mov    DWORD PTR [ebp-0xc],eax
10006bab:	call   0x1000219e
10006bb0:	cmp    edi,ebx
10006bb2:	lea    edi,[eax+edi*2]
10006bb5:	jbe    0x10006bba
10006bb7:	mov    edi,DWORD PTR [ebp-0x8]
10006bba:	push   edi
10006bbb:	push   DWORD PTR [ebp-0x4]
10006bbe:	lea    eax,[eax+ebx*2]
10006bc1:	push   eax
10006bc2:	mov    eax,DWORD PTR [ebp-0x4]
10006bc5:	call   0x10002323
10006bca:	mov    eax,DWORD PTR [ebp-0xc]
10006bcd:	add    esp,0xc
10006bd0:	mov    edx,esi
10006bd2:	call   0x10002229
10006bd7:	pop    edi
10006bd8:	mov    eax,esi
10006bda:	pop    esi
10006bdb:	pop    ebx
10006bdc:	leave  
10006bdd:	ret    
10006bde:	push   ebx
10006bdf:	push   esi
10006be0:	mov    esi,eax
10006be2:	mov    eax,DWORD PTR [esi]
10006be4:	push   edi
10006be5:	mov    edi,DWORD PTR [eax-0xc]
10006be8:	lea    ebx,[edi+0x1]
10006beb:	push   ebx
10006bec:	call   0x1000219e
10006bf1:	mov    WORD PTR [eax+edi*2],0x5c
10006bf7:	pop    edi
10006bf8:	mov    edx,esi
10006bfa:	pop    esi
10006bfb:	mov    eax,ebx
10006bfd:	pop    ebx
10006bfe:	jmp    0x10002229
10006c03:	push   0x14
10006c05:	push   0x10074f40
10006c0a:	call   0x1005f62c
10006c0f:	mov    BYTE PTR [ebp-0x1d],0x1
10006c13:	xor    ebx,ebx
10006c15:	mov    DWORD PTR [ebp-0x4],ebx
10006c18:	mov    DWORD PTR [ebp-0x24],ebx
10006c1b:	push   0x2000
10006c20:	push   DWORD PTR [ebp+0x8]
10006c23:	lea    eax,[ebp-0x24]
10006c26:	push   eax
10006c27:	call   0x100075f5
10006c2c:	add    esp,0xc
10006c2f:	cmp    eax,ebx
10006c31:	jge    0x10006c38
10006c33:	mov    BYTE PTR [ebp-0x1d],bl
10006c36:	jmp    0x10006c65
10006c38:	mov    eax,DWORD PTR [ebp-0x24]
10006c3b:	call   0x1004b990
10006c40:	mov    DWORD PTR [ebp-0x18],esp
10006c43:	jmp    0x10006c65
10006c45:	mov    eax,DWORD PTR [ebp-0x14]
10006c48:	mov    eax,DWORD PTR [eax]
10006c4a:	mov    eax,DWORD PTR [eax]
10006c4c:	xor    ecx,ecx
10006c4e:	cmp    eax,0xc00000fd
10006c53:	sete   cl
10006c56:	mov    eax,ecx
10006c58:	ret    
10006c59:	mov    esp,DWORD PTR [ebp-0x18]
10006c5c:	mov    BYTE PTR [ebp-0x1d],0x0
10006c60:	call   0x100452e5
10006c65:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10006c6c:	mov    al,BYTE PTR [ebp-0x1d]
10006c6f:	lea    esp,[ebp-0x34]
10006c72:	call   0x1005f674
10006c77:	ret    
10006c78:	xor    eax,eax
10006c7a:	cmp    esi,eax
10006c7c:	je     0x10006ca5
10006c7e:	cmp    DWORD PTR [esp+0x4],eax
10006c82:	je     0x10006ca5
10006c84:	push   DWORD PTR [esp+0x8]
10006c88:	mov    WORD PTR [esi],ax
10006c8b:	push   esi
10006c8c:	push   0xffffffff
10006c8e:	push   DWORD PTR [esp+0x10]
10006c92:	push   eax
10006c93:	push   DWORD PTR [esp+0x20]
10006c97:	call   DWORD PTR ds:0x1006608c
10006c9d:	neg    eax
10006c9f:	sbb    eax,eax
10006ca1:	and    eax,esi
10006ca3:	jmp    0x10006ca7
10006ca5:	xor    eax,eax
10006ca7:	ret    0xc
10006caa:	mov    edx,DWORD PTR [ecx]
10006cac:	mov    eax,DWORD PTR [esp+0x4]
10006cb0:	cmp    edx,DWORD PTR [eax]
10006cb2:	jne    0x10006cd1
10006cb4:	mov    edx,DWORD PTR [ecx+0x4]
10006cb7:	cmp    edx,DWORD PTR [eax+0x4]
10006cba:	jne    0x10006cd1
10006cbc:	mov    edx,DWORD PTR [ecx+0x8]
10006cbf:	cmp    edx,DWORD PTR [eax+0x8]
10006cc2:	jne    0x10006cd1
10006cc4:	mov    ecx,DWORD PTR [ecx+0xc]
10006cc7:	cmp    ecx,DWORD PTR [eax+0xc]
10006cca:	jne    0x10006cd1
10006ccc:	xor    eax,eax
10006cce:	inc    eax
10006ccf:	jmp    0x10006cd3
10006cd1:	xor    eax,eax
10006cd3:	ret    0x4
10006cd6:	push   DWORD PTR [esp+0x4]
10006cda:	call   0x1005108f
10006cdf:	pop    ecx
10006ce0:	ret    0x4
10006ce3:	push   ecx
10006ce4:	call   0x100510d2
10006ce9:	pop    ecx
10006cea:	ret    
10006ceb:	push   0x20
10006ced:	mov    eax,0x100607a9
10006cf2:	call   0x10059cde
10006cf7:	mov    eax,DWORD PTR [ebp+0x8]
10006cfa:	xor    edi,edi
10006cfc:	mov    DWORD PTR [ebp-0x18],eax
10006cff:	mov    esi,ecx
10006d01:	mov    DWORD PTR [ebp-0x1c],edi
10006d04:	call   DWORD PTR ds:0x1007efec
10006d0a:	mov    DWORD PTR [ebp-0x24],eax
10006d0d:	mov    DWORD PTR [ebp-0x14],edi
10006d10:	push   edi
10006d11:	lea    eax,[ebp-0x20]
10006d14:	push   eax
10006d15:	push   esi
10006d16:	mov    DWORD PTR [ebp-0x4],edi
10006d19:	call   0x1005109b
10006d1e:	push   edi
10006d1f:	lea    eax,[ebp-0x28]
10006d22:	push   eax
10006d23:	push   esi
10006d24:	call   0x1005109b
10006d29:	mov    eax,DWORD PTR [ebp-0x20]
10006d2c:	add    esp,0x18
10006d2f:	cmp    eax,edi
10006d31:	mov    DWORD PTR [ebp-0x1c],eax
10006d34:	je     0x10006d5c
10006d36:	push   eax
10006d37:	call   DWORD PTR ds:0x100660c4
10006d3d:	push   edi
10006d3e:	inc    eax
10006d3f:	cdq    
10006d40:	push   0x2
10006d42:	push   edx
10006d43:	push   eax
10006d44:	call   0x1004f6a0
10006d49:	mov    ebx,eax
10006d4b:	add    eax,0x80000000
10006d50:	adc    edx,edi
10006d52:	mov    DWORD PTR [ebp-0x28],edx
10006d55:	jne    0x10006d5c
10006d57:	cmp    eax,0xffffffff
10006d5a:	jbe    0x10006d60
10006d5c:	xor    eax,eax
10006d5e:	jmp    0x10006d95
10006d60:	cmp    ebx,0x400
10006d66:	jg     0x10006d7e
10006d68:	push   ebx
10006d69:	call   0x10006c03
10006d6e:	test   al,al
10006d70:	pop    ecx
10006d71:	je     0x10006d7e
10006d73:	mov    eax,ebx
10006d75:	call   0x1004b990
10006d7a:	mov    eax,esp
10006d7c:	jmp    0x10006d87
10006d7e:	push   ebx
10006d7f:	lea    esi,[ebp-0x14]
10006d82:	call   0x10007592
10006d87:	push   DWORD PTR [ebp-0x24]
10006d8a:	mov    esi,eax
10006d8c:	push   ebx
10006d8d:	push   DWORD PTR [ebp-0x1c]
10006d90:	call   0x1000241c
10006d95:	mov    ecx,DWORD PTR [ebp-0x18]
10006d98:	push   eax
10006d99:	call   0x100011d1
10006d9e:	cmp    DWORD PTR [ebp-0x14],edi
10006da1:	je     0x10006db6
10006da3:	mov    eax,DWORD PTR [ebp-0x14]
10006da6:	mov    esi,DWORD PTR [eax]
10006da8:	push   eax
10006da9:	mov    DWORD PTR [ebp-0x14],esi
10006dac:	call   0x10043748
10006db1:	cmp    esi,edi
10006db3:	pop    ecx
10006db4:	jne    0x10006da3
10006db6:	mov    eax,DWORD PTR [ebp-0x18]
10006db9:	lea    esp,[ebp-0x3c]
10006dbc:	call   0x10059d61
10006dc1:	ret    
10006dc2:	push   0xc
10006dc4:	mov    eax,0x100613e8
10006dc9:	call   0x10059c75
10006dce:	xor    edi,edi
10006dd0:	mov    esi,ecx
10006dd2:	mov    DWORD PTR [ebp-0x10],edi
10006dd5:	call   DWORD PTR ds:0x1007efec
10006ddb:	mov    DWORD PTR [ebp-0x18],edi
10006dde:	push   edi
10006ddf:	lea    eax,[ebp-0x10]
10006de2:	push   eax
10006de3:	push   ebx
10006de4:	mov    DWORD PTR [ebp-0x4],edi
10006de7:	call   0x100510de
10006dec:	push   edi
10006ded:	lea    eax,[ebp-0x14]
10006df0:	push   eax
10006df1:	push   ebx
10006df2:	call   0x100510de
10006df7:	mov    ecx,DWORD PTR [ebp-0x14]
10006dfa:	add    eax,ecx
10006dfc:	sub    eax,DWORD PTR [ebp-0x10]
10006dff:	add    esp,0x18
10006e02:	push   eax
10006e03:	push   DWORD PTR [ebp-0x10]
10006e06:	call   0x100040fc
10006e0b:	mov    eax,esi
10006e0d:	call   0x10059d4d
10006e12:	ret    
10006e13:	push   0x74
10006e15:	mov    eax,0x10063113
10006e1a:	call   0x10059cde
10006e1f:	mov    eax,DWORD PTR [ebp+0xc]
10006e22:	mov    esi,DWORD PTR [ebp+0x8]
10006e25:	push   eax
10006e26:	push   esi
10006e27:	mov    DWORD PTR [ebp-0x34],eax
10006e2a:	call   DWORD PTR ds:0x10080c4c
10006e30:	mov    ebx,eax
10006e32:	mov    edi,0x80000000
10006e37:	test   edi,ebx
10006e39:	mov    DWORD PTR [ebp-0x38],ebx
10006e3c:	jne    0x10006f52
10006e42:	lea    eax,[ebp-0x48]
10006e45:	push   eax
10006e46:	call   0x1005107e
10006e4b:	pop    ecx
10006e4c:	and    DWORD PTR [ebp-0x4],0x0
10006e50:	mov    eax,DWORD PTR [esi]
10006e52:	lea    ecx,[ebp-0x48]
10006e55:	push   ecx
10006e56:	push   esi
10006e57:	call   DWORD PTR [eax+0xc4]
10006e5d:	test   edi,eax
10006e5f:	je     0x10006e71
10006e61:	lea    eax,[ebp-0x48]
10006e64:	push   eax
10006e65:	call   0x1005108f
10006e6a:	mov    eax,ebx
10006e6c:	jmp    0x10006f51
10006e71:	lea    eax,[ebp-0x80]
10006e74:	push   eax
10006e75:	lea    ecx,[ebp-0x48]
10006e78:	call   0x10006ceb
10006e7d:	pop    ecx
10006e7e:	lea    ecx,[ebp-0x30]
10006e81:	push   ecx
10006e82:	push   0x10080ee8
10006e87:	mov    ecx,eax
10006e89:	mov    BYTE PTR [ebp-0x4],0x1
10006e8d:	call   0x10019ac3
10006e92:	push   0x0
10006e94:	push   0x1
10006e96:	lea    ecx,[ebp-0x80]
10006e99:	mov    BYTE PTR [ebp-0x4],0x3
10006e9d:	call   0x100012f4
10006ea2:	lea    edi,[ebp-0x30]
10006ea5:	call   0x10019983
10006eaa:	test   al,al
10006eac:	jne    0x10006f39
10006eb2:	call   DWORD PTR ds:0x1007efec
10006eb8:	mov    ebx,eax
10006eba:	mov    eax,DWORD PTR [ebp-0x30]
10006ebd:	dec    eax
10006ebe:	je     0x10006ed7
10006ec0:	dec    eax
10006ec1:	jne    0x10006f39
10006ec3:	push   0xffffffff
10006ec5:	push   0x1006d1c8
10006eca:	push   DWORD PTR [ebp-0x34]
10006ecd:	call   0x100510b0
10006ed2:	add    esp,0xc
10006ed5:	jmp    0x10006f39
10006ed7:	lea    eax,[ebp-0x64]
10006eda:	push   eax
10006edb:	lea    eax,[ebp-0x30]
10006ede:	call   0x1000795e
10006ee3:	cmp    DWORD PTR [eax+0x18],0x10
10006ee7:	jb     0x10006eee
10006ee9:	mov    esi,DWORD PTR [eax+0x4]
10006eec:	jmp    0x10006ef1
10006eee:	lea    esi,[eax+0x4]
10006ef1:	test   esi,esi
10006ef3:	je     0x10006f07
10006ef5:	push   esi
10006ef6:	call   DWORD PTR ds:0x100660dc
10006efc:	mov    edi,eax
10006efe:	inc    edi
10006eff:	cmp    edi,0x3fffffff
10006f05:	jle    0x10006f0b
10006f07:	xor    eax,eax
10006f09:	jmp    0x10006f1f
10006f0b:	lea    eax,[edi+edi*1]
10006f0e:	call   0x1004b990
10006f13:	mov    eax,esp
10006f15:	push   ebx
10006f16:	push   edi
10006f17:	push   esi
10006f18:	mov    esi,eax
10006f1a:	call   0x10006c78
10006f1f:	push   0xffffffff
10006f21:	push   eax
10006f22:	push   DWORD PTR [ebp-0x34]
10006f25:	call   0x100510b0
10006f2a:	add    esp,0xc
10006f2d:	push   0x0
10006f2f:	push   0x1
10006f31:	lea    ecx,[ebp-0x64]
10006f34:	call   0x100012f4
10006f39:	push   0x0
10006f3b:	push   0x1
10006f3d:	lea    ecx,[ebp-0x2c]
10006f40:	call   0x100012f4
10006f45:	lea    eax,[ebp-0x48]
10006f48:	push   eax
10006f49:	call   0x1005108f
10006f4e:	mov    eax,DWORD PTR [ebp-0x38]
10006f51:	pop    ecx
10006f52:	lea    esp,[ebp-0x90]
10006f58:	call   0x10059d61
10006f5d:	ret    0x8
10006f60:	push   0x30
10006f62:	mov    eax,0x1006391e
10006f67:	call   0x10059cde
10006f6c:	mov    esi,DWORD PTR [ebp+0x18]
10006f6f:	mov    edx,DWORD PTR [ebp+0x14]
10006f72:	mov    ecx,DWORD PTR [ebp+0x10]
10006f75:	mov    edi,DWORD PTR [ebp+0xc]
10006f78:	mov    eax,DWORD PTR [ebp+0x8]
10006f7b:	push   esi
10006f7c:	push   edx
10006f7d:	push   ecx
10006f7e:	push   edi
10006f7f:	push   eax
10006f80:	mov    DWORD PTR [ebp-0x3c],esi
10006f83:	call   DWORD PTR ds:0x10080c44
10006f89:	xor    ebx,ebx
10006f8b:	push   ebx
10006f8c:	mov    esi,0x10080d94
10006f91:	push   esi
10006f92:	mov    DWORD PTR [ebp-0x38],eax
10006f95:	call   DWORD PTR ds:0x100660e4
10006f9b:	test   eax,eax
10006f9d:	jne    0x1000706e
10006fa3:	lea    eax,[ebp-0x20]
10006fa6:	push   eax
10006fa7:	mov    ecx,edi
10006fa9:	mov    DWORD PTR [ebp-0x20],0x5d0fcdd0
10006fb0:	mov    WORD PTR [ebp-0x1c],0x4daa
10006fb6:	mov    WORD PTR [ebp-0x1a],0x11d2
10006fbc:	mov    BYTE PTR [ebp-0x18],0xb3
10006fc0:	mov    BYTE PTR [ebp-0x17],0x28
10006fc4:	mov    BYTE PTR [ebp-0x16],bl
10006fc7:	mov    BYTE PTR [ebp-0x15],0x80
10006fcb:	mov    BYTE PTR [ebp-0x14],0x5f
10006fcf:	mov    BYTE PTR [ebp-0x13],0x8a
10006fd3:	mov    BYTE PTR [ebp-0x12],0x38
10006fd7:	mov    BYTE PTR [ebp-0x11],0x59
10006fdb:	mov    DWORD PTR [ebp-0x30],0xa6cf9084
10006fe2:	mov    WORD PTR [ebp-0x2c],0x15b3
10006fe8:	mov    WORD PTR [ebp-0x2a],0x11d2
10006fee:	mov    BYTE PTR [ebp-0x28],0x93
10006ff2:	mov    BYTE PTR [ebp-0x27],0x2e
10006ff6:	mov    BYTE PTR [ebp-0x26],bl
10006ff9:	mov    BYTE PTR [ebp-0x25],0x80
10006ffd:	mov    BYTE PTR [ebp-0x24],0x5f
10007001:	mov    BYTE PTR [ebp-0x23],0x8a
10007005:	mov    BYTE PTR [ebp-0x22],0xdd
10007009:	mov    BYTE PTR [ebp-0x21],0x32
1000700d:	call   0x10006caa
10007012:	test   eax,eax
10007014:	je     0x1000706e
10007016:	mov    eax,DWORD PTR [ebp-0x3c]
10007019:	lea    edx,[ebp-0x34]
1000701c:	push   edx
1000701d:	mov    DWORD PTR [ebp-0x4],ebx
10007020:	mov    eax,DWORD PTR [eax]
10007022:	lea    edx,[ebp-0x30]
10007025:	push   edx
10007026:	mov    DWORD PTR [ebp-0x34],ebx
10007029:	mov    ecx,DWORD PTR [eax]
1000702b:	push   eax
1000702c:	call   DWORD PTR [ecx]
1000702e:	test   eax,eax
10007030:	js     0x10007062
10007032:	mov    eax,DWORD PTR [ebp-0x34]
10007035:	mov    eax,DWORD PTR [eax]
10007037:	push   0x10006e13
1000703c:	push   DWORD PTR [eax+0xbc]
10007042:	call   0x10057710
10007047:	push   ebx
10007048:	push   0x1
1000704a:	push   esi
1000704b:	mov    esi,DWORD PTR ds:0x100660e0
10007051:	mov    ds:0x10080c4c,eax
10007056:	call   esi
10007058:	push   ebx
10007059:	push   0x1
1000705b:	push   0x10080da0
10007060:	call   esi
10007062:	or     DWORD PTR [ebp-0x4],0xffffffff
10007066:	lea    ecx,[ebp-0x34]
10007069:	call   0x10051104
1000706e:	mov    eax,DWORD PTR [ebp-0x38]
10007071:	call   0x10059d61
10007076:	ret    0x14
10007079:	push   0x4
1000707b:	mov    eax,0x10063f25
10007080:	call   0x10059c75
10007085:	push   0x0
10007087:	mov    esi,0x10080d9c
1000708c:	push   esi
1000708d:	call   DWORD PTR ds:0x100660e4
10007093:	test   eax,eax
10007095:	jne    0x100070df
10007097:	push   eax
10007098:	push   0x1
1000709a:	push   esi
1000709b:	call   DWORD PTR ds:0x100660e0
100070a1:	and    DWORD PTR [ebp-0x10],0x0
100070a5:	and    DWORD PTR [ebp-0x4],0x0
100070a9:	lea    ecx,[ebp-0x10]
100070ac:	call   0x100075df
100070b1:	push   eax
100070b2:	call   0x1005105c
100070b7:	test   eax,eax
100070b9:	pop    ecx
100070ba:	js     0x100070d3
100070bc:	mov    eax,DWORD PTR [ebp-0x10]
100070bf:	mov    eax,DWORD PTR [eax]
100070c1:	push   0x10006f60
100070c6:	push   DWORD PTR [eax+0x14]
100070c9:	call   0x10057710
100070ce:	mov    ds:0x10080c44,eax
100070d3:	or     DWORD PTR [ebp-0x4],0xffffffff
100070d7:	lea    ecx,[ebp-0x10]
100070da:	call   0x10051104
100070df:	call   0x10059d4d
100070e4:	ret    
100070e5:	jmp    0x10051104
100070ea:	push   esi
100070eb:	push   DWORD PTR [esp+0x10]
100070ef:	push   DWORD PTR [esp+0x10]
100070f3:	push   DWORD PTR [esp+0x10]
100070f7:	call   DWORD PTR ds:0x10080c50
100070fd:	mov    esi,eax
100070ff:	add    esp,0xc
10007102:	test   esi,esi
10007104:	js     0x1000710d
10007106:	call   0x10007079
1000710b:	mov    eax,esi
1000710d:	pop    esi
1000710e:	ret    
1000710f:	push   0x78
10007111:	mov    eax,0x100625e2
10007116:	call   0x10059cde
1000711b:	mov    eax,DWORD PTR [ebp+0x8]
1000711e:	mov    DWORD PTR [ebp-0x48],eax
10007121:	lea    eax,[ebp-0x68]
10007124:	xor    esi,esi
10007126:	push   eax
10007127:	mov    DWORD PTR [edi],esi
10007129:	call   0x100510c1
1000712e:	push   0xffffffff
10007130:	lea    eax,[ebp-0x68]
10007133:	push   0x1006d1cc
10007138:	push   eax
10007139:	mov    DWORD PTR [ebp-0x4],esi
1000713c:	call   0x100510f3
10007141:	mov    eax,ds:0x10080c78
10007146:	mov    ecx,DWORD PTR [eax]
10007148:	add    esp,0x10
1000714b:	lea    edx,[ebp-0x44]
1000714e:	push   edx
1000714f:	push   esi
10007150:	push   esi
10007151:	lea    edx,[ebp-0x68]
10007154:	push   edx
10007155:	push   eax
10007156:	call   DWORD PTR [ecx+0x14]
10007159:	cmp    eax,esi
1000715b:	je     0x1000716f
1000715d:	lea    eax,[ebp-0x68]
10007160:	push   eax
10007161:	call   0x100510d2
10007166:	pop    ecx
10007167:	xor    al,al
10007169:	call   0x10059d61
1000716e:	ret    
1000716f:	lea    edx,[ebp-0x30]
10007172:	push   edx
10007173:	xor    ebx,ebx
10007175:	push   esi
10007176:	inc    ebx
10007177:	mov    BYTE PTR [ebp-0x4],bl
1000717a:	mov    eax,ds:0x10080c74
1000717f:	push   DWORD PTR [ebp-0x44]
10007182:	mov    DWORD PTR [ebp-0x30],esi
10007185:	mov    ecx,DWORD PTR [eax]
10007187:	push   eax
10007188:	call   DWORD PTR [ecx+0xc]
1000718b:	cmp    eax,esi
1000718d:	je     0x100071ab
1000718f:	xor    bl,bl
10007191:	lea    ecx,[ebp-0x30]
10007194:	mov    BYTE PTR [ebp-0x4],0x0
10007198:	call   0x10051104
1000719d:	lea    eax,[ebp-0x68]
100071a0:	push   eax
100071a1:	call   0x100510d2
100071a6:	pop    ecx
100071a7:	mov    al,bl
100071a9:	jmp    0x10007169
100071ab:	cmp    DWORD PTR [ebp-0x30],esi
100071ae:	je     0x10007191
100071b0:	lea    eax,[ebp-0x40]
100071b3:	push   eax
100071b4:	call   0x100510c1
100071b9:	pop    ecx
100071ba:	push   esi
100071bb:	lea    ecx,[ebp-0x2c]
100071be:	mov    DWORD PTR [ebp-0x14],0xf
100071c5:	call   0x10001420
100071ca:	mov    BYTE PTR [ebp-0x4],0x3
100071ce:	mov    eax,DWORD PTR [ebp-0x30]
100071d1:	mov    ecx,DWORD PTR [eax]
100071d3:	lea    edx,[ebp-0x40]
100071d6:	push   edx
100071d7:	push   eax
100071d8:	call   DWORD PTR [ecx+0x14]
100071db:	cmp    eax,esi
100071dd:	je     0x100071f5
100071df:	push   esi
100071e0:	push   ebx
100071e1:	lea    ecx,[ebp-0x2c]
100071e4:	call   0x100012f4
100071e9:	lea    eax,[ebp-0x40]
100071ec:	push   eax
100071ed:	call   0x100510d2
100071f2:	pop    ecx
100071f3:	jmp    0x1000718f
100071f5:	lea    ebx,[ebp-0x40]
100071f8:	lea    ecx,[ebp-0x84]
100071fe:	call   0x10006dc2
10007203:	push   0x1006d1e4
10007208:	mov    esi,eax
1000720a:	mov    BYTE PTR [ebp-0x4],0x4
1000720e:	call   0x100065b3
10007213:	mov    bl,al
10007215:	neg    bl
10007217:	pop    ecx
10007218:	sbb    bl,bl
1000721a:	xor    esi,esi
1000721c:	push   esi
1000721d:	push   0x1
1000721f:	lea    ecx,[ebp-0x84]
10007225:	inc    bl
10007227:	call   0x100012f4
1000722c:	test   bl,bl
1000722e:	je     0x1000724c
10007230:	push   esi
10007231:	push   0x1
10007233:	lea    ecx,[ebp-0x2c]
10007236:	call   0x100012f4
1000723b:	lea    eax,[ebp-0x40]
1000723e:	push   eax
1000723f:	call   0x100510d2
10007244:	pop    ecx
10007245:	mov    bl,0x1
10007247:	jmp    0x10007191
1000724c:	lea    eax,[ebp-0x58]
1000724f:	push   eax
10007250:	call   0x100510c1
10007255:	pop    ecx
10007256:	mov    BYTE PTR [ebp-0x4],0x5
1000725a:	mov    eax,DWORD PTR [ebp-0x30]
1000725d:	mov    ecx,DWORD PTR [eax]
1000725f:	lea    edx,[ebp-0x58]
10007262:	push   edx
10007263:	push   eax
10007264:	call   DWORD PTR [ecx+0xc]
10007267:	cmp    eax,esi
10007269:	je     0x1000727d
1000726b:	lea    eax,[ebp-0x58]
1000726e:	push   eax
1000726f:	call   0x100510d2
10007274:	pop    ecx
10007275:	push   esi
10007276:	push   0x1
10007278:	jmp    0x100071e1
1000727d:	lea    ebx,[ebp-0x58]
10007280:	lea    ecx,[ebp-0x84]
10007286:	call   0x10006dc2
1000728b:	mov    ecx,DWORD PTR [ebp-0x48]
1000728e:	push   0xffffffff
10007290:	xor    ebx,ebx
10007292:	push   ebx
10007293:	push   eax
10007294:	mov    BYTE PTR [ebp-0x4],0x6
10007298:	call   0x10001245
1000729d:	push   ebx
1000729e:	push   0x1
100072a0:	lea    ecx,[ebp-0x84]
100072a6:	mov    BYTE PTR [ebp-0x4],0x5
100072aa:	call   0x100012f4
100072af:	mov    eax,DWORD PTR [ebp-0x30]
100072b2:	mov    ecx,DWORD PTR [eax]
100072b4:	push   edi
100072b5:	push   eax
100072b6:	call   DWORD PTR [ecx+0x10]
100072b9:	cmp    eax,ebx
100072bb:	lea    eax,[ebp-0x58]
100072be:	push   eax
100072bf:	je     0x100072e1
100072c1:	call   0x100510d2
100072c6:	pop    ecx
100072c7:	push   ebx
100072c8:	push   0x1
100072ca:	lea    ecx,[ebp-0x2c]
100072cd:	call   0x100012f4
100072d2:	lea    eax,[ebp-0x40]
100072d5:	push   eax
100072d6:	call   0x100510d2
100072db:	pop    ecx
100072dc:	jmp    0x10007191
100072e1:	call   0x100510d2
100072e6:	pop    ecx
100072e7:	push   ebx
100072e8:	jmp    0x10007231
100072ed:	push   ebp
100072ee:	mov    ebp,esp
100072f0:	sub    esp,0x1c
100072f3:	mov    eax,ds:0x1007e030
100072f8:	xor    eax,ebp
100072fa:	mov    DWORD PTR [ebp-0x8],eax
100072fd:	mov    edx,DWORD PTR [ebp+0x14]
10007300:	mov    ecx,DWORD PTR [ebp+0x10]
10007303:	mov    eax,DWORD PTR [ebp+0xc]
10007306:	push   esi
10007307:	mov    esi,DWORD PTR [ebp+0x8]
1000730a:	push   edi
1000730b:	push   DWORD PTR [ebp+0x18]
1000730e:	push   edx
1000730f:	push   ecx
10007310:	push   eax
10007311:	push   esi
10007312:	call   DWORD PTR ds:0x10080c40
10007318:	mov    edi,eax
1000731a:	add    esp,0x14
1000731d:	test   edi,edi
1000731f:	js     0x100073c2
10007325:	mov    esi,DWORD PTR [esi]
10007327:	mov    eax,DWORD PTR [esi]
10007329:	push   esi
1000732a:	call   DWORD PTR [eax+0x4]
1000732d:	mov    eax,DWORD PTR [esi]
1000732f:	push   0x10080c74
10007334:	lea    ecx,[ebp-0x18]
10007337:	push   ecx
10007338:	push   0x1006d1ec
1000733d:	push   esi
1000733e:	mov    DWORD PTR [ebp-0x18],0xe38ab577
10007345:	mov    WORD PTR [ebp-0x14],0x786e
1000734b:	mov    WORD PTR [ebp-0x12],0x4a7f
10007351:	mov    BYTE PTR [ebp-0x10],0x93
10007355:	mov    BYTE PTR [ebp-0xf],0x6b
10007359:	mov    BYTE PTR [ebp-0xe],0x7a
1000735d:	mov    BYTE PTR [ebp-0xd],0xe4
10007361:	mov    BYTE PTR [ebp-0xc],0xc7
10007365:	mov    BYTE PTR [ebp-0xb],0xd8
10007369:	mov    BYTE PTR [ebp-0xa],0x77
1000736d:	mov    BYTE PTR [ebp-0x9],0xb2
10007371:	call   DWORD PTR [eax+0x10]
10007374:	mov    eax,DWORD PTR [esi]
10007376:	push   0x10080c78
1000737b:	lea    ecx,[ebp-0x18]
1000737e:	push   ecx
1000737f:	push   0x1006d21c
10007384:	push   esi
10007385:	mov    DWORD PTR [ebp-0x18],0xbddeda3f
1000738c:	mov    WORD PTR [ebp-0x14],0x9020
10007392:	mov    WORD PTR [ebp-0x12],0x4d12
10007398:	mov    BYTE PTR [ebp-0x10],0x8c
1000739c:	mov    BYTE PTR [ebp-0xf],0x70
100073a0:	mov    BYTE PTR [ebp-0xe],0x98
100073a4:	mov    BYTE PTR [ebp-0xd],0x4e
100073a8:	mov    BYTE PTR [ebp-0xc],0xe9
100073ac:	mov    BYTE PTR [ebp-0xb],0xf7
100073b0:	mov    BYTE PTR [ebp-0xa],0x93
100073b4:	mov    BYTE PTR [ebp-0x9],0x5e
100073b8:	call   DWORD PTR [eax+0x10]
100073bb:	call   0x10007079
100073c0:	mov    eax,edi
100073c2:	mov    ecx,DWORD PTR [ebp-0x8]
100073c5:	pop    edi
100073c6:	xor    ecx,ebp
100073c8:	pop    esi
100073c9:	call   0x100430d7
100073ce:	leave  
100073cf:	ret    
100073d0:	push   ebx
100073d1:	push   esi
100073d2:	push   edi
100073d3:	mov    edi,DWORD PTR [esp+0x10]
100073d7:	push   edi
100073d8:	call   DWORD PTR ds:0x10080c48
100073de:	pop    ecx
100073df:	push   0x0
100073e1:	mov    esi,0x10080d9c
100073e6:	push   esi
100073e7:	mov    ebx,eax
100073e9:	call   DWORD PTR ds:0x100660e4
100073ef:	test   eax,eax
100073f1:	jne    0x10007415
100073f3:	push   eax
100073f4:	push   0x1
100073f6:	push   esi
100073f7:	call   DWORD PTR ds:0x100660e0
100073fd:	mov    eax,DWORD PTR [edi]
100073ff:	mov    eax,DWORD PTR [eax]
10007401:	add    eax,0x14
10007404:	push   0x10006f60
10007409:	push   DWORD PTR [eax]
1000740b:	call   0x10057710
10007410:	mov    ds:0x10080c44,eax
10007415:	pop    edi
10007416:	pop    esi
10007417:	mov    eax,ebx
10007419:	pop    ebx
1000741a:	ret    
1000741b:	push   ebp
1000741c:	mov    ebp,esp
1000741e:	and    esp,0xfffffff8
10007421:	push   ecx
10007422:	push   esi
10007423:	push   0x0
10007425:	mov    esi,0x10080d98
1000742a:	push   esi
1000742b:	call   DWORD PTR ds:0x100660e4
10007431:	test   eax,eax
10007433:	jne    0x1000758d
10007439:	push   eax
1000743a:	push   0x1
1000743c:	push   esi
1000743d:	call   DWORD PTR ds:0x100660e0
10007443:	push   0x0
10007445:	call   0x10050f32
1000744a:	test   eax,eax
1000744c:	pop    ecx
1000744d:	js     0x1000758d
10007453:	push   0x1006d240
10007458:	push   0xd
1000745a:	push   0x1006d280
1000745f:	call   0x100042e3
10007464:	add    esp,0xc
10007467:	push   eax
10007468:	push   0x3e6d605a
1000746d:	push   0x1006d290
10007472:	call   0x100042d1
10007477:	push   eax
10007478:	push   0x9
1000747a:	mov    esi,0x1006d2b8
1000747f:	push   esi
10007480:	call   0x100042e3
10007485:	add    esp,0x14
10007488:	push   eax
10007489:	call   0x10057d70
1000748e:	test   eax,eax
10007490:	je     0x100074a2
10007492:	push   0x100070ea
10007497:	push   eax
10007498:	call   0x10057710
1000749d:	mov    ds:0x10080c50,eax
100074a2:	push   0x615d1f04
100074a7:	push   0x1ceede3a
100074ac:	push   0x7ba68acc
100074b1:	push   0x1006d2c4
100074b6:	call   0x100042d1
100074bb:	pop    ecx
100074bc:	pop    ecx
100074bd:	push   eax
100074be:	call   0x100042d1
100074c3:	pop    ecx
100074c4:	pop    ecx
100074c5:	push   eax
100074c6:	call   0x100042d1
100074cb:	push   eax
100074cc:	push   0xd
100074ce:	push   0x1006d300
100074d3:	call   0x100042e3
100074d8:	add    esp,0x14
100074db:	push   eax
100074dc:	push   0x2fe1cad0
100074e1:	push   0x682e6ff6
100074e6:	push   0x1006d310
100074eb:	call   0x100042d1
100074f0:	pop    ecx
100074f1:	pop    ecx
100074f2:	push   eax
100074f3:	call   0x100042d1
100074f8:	push   eax
100074f9:	push   0x9
100074fb:	push   esi
100074fc:	call   0x100042e3
10007501:	add    esp,0x14
10007504:	push   eax
10007505:	call   0x10057d70
1000750a:	test   eax,eax
1000750c:	je     0x1000751e
1000750e:	push   0x100072ed
10007513:	push   eax
10007514:	call   0x10057710
10007519:	mov    ds:0x10080c40,eax
1000751e:	push   0x2a9d6b28
10007523:	push   0x1006d338
10007528:	call   0x100042d1
1000752d:	push   eax
1000752e:	push   0x16
10007530:	push   0x1006d360
10007535:	call   0x100042e3
1000753a:	add    esp,0x14
1000753d:	push   eax
1000753e:	push   0x6531d670
10007543:	push   0x53aa0be
10007548:	push   0x753815f8
1000754d:	push   0x1006d378
10007552:	call   0x100042d1
10007557:	pop    ecx
10007558:	pop    ecx
10007559:	push   eax
1000755a:	call   0x100042d1
1000755f:	pop    ecx
10007560:	pop    ecx
10007561:	push   eax
10007562:	call   0x100042d1
10007567:	push   eax
10007568:	push   0x9
1000756a:	push   esi
1000756b:	call   0x100042e3
10007570:	add    esp,0x14
10007573:	push   eax
10007574:	call   0x10057d70
10007579:	test   eax,eax
1000757b:	je     0x1000758d
1000757d:	push   0x100073d0
10007582:	push   eax
10007583:	call   0x10057710
10007588:	mov    ds:0x10080c48,eax
1000758d:	pop    esi
1000758e:	mov    esp,ebp
10007590:	pop    ebp
10007591:	ret    
10007592:	push   ebp
10007593:	mov    ebp,esp
10007595:	push   0x8
10007597:	push   DWORD PTR [ebp+0x8]
1000759a:	lea    eax,[ebp+0x8]
1000759d:	push   eax
1000759e:	call   0x100075f5
100075a3:	add    esp,0xc
100075a6:	test   eax,eax
100075a8:	jge    0x100075b0
100075aa:	push   eax
100075ab:	call   0x10001f24
100075b0:	push   DWORD PTR [ebp+0x8]
100075b3:	call   0x10045222
100075b8:	test   eax,eax
100075ba:	pop    ecx
100075bb:	je     0x100075c6
100075bd:	mov    ecx,DWORD PTR [esi]
100075bf:	mov    DWORD PTR [eax],ecx
100075c1:	mov    DWORD PTR [esi],eax
100075c3:	add    eax,0x8
100075c6:	pop    ebp
100075c7:	ret    0x4
100075ca:	jmp    0x100075d9
100075cc:	mov    eax,DWORD PTR [esi]
100075ce:	mov    ecx,DWORD PTR [eax]
100075d0:	push   eax
100075d1:	mov    DWORD PTR [esi],ecx
100075d3:	call   0x10043748
100075d8:	pop    ecx
100075d9:	cmp    DWORD PTR [esi],0x0
100075dc:	jne    0x100075cc
100075de:	ret    
100075df:	push   esi
100075e0:	mov    esi,ecx
100075e2:	mov    eax,DWORD PTR [esi]
100075e4:	and    DWORD PTR [esi],0x0
100075e7:	test   eax,eax
100075e9:	je     0x100075f1
100075eb:	mov    ecx,DWORD PTR [eax]
100075ed:	push   eax
100075ee:	call   DWORD PTR [ecx+0x8]
100075f1:	mov    eax,esi
100075f3:	pop    esi
100075f4:	ret    
100075f5:	mov    eax,DWORD PTR [esp+0x8]
100075f9:	mov    ecx,DWORD PTR [esp+0xc]
100075fd:	or     edx,0xffffffff
10007600:	sub    edx,eax
10007602:	cmp    edx,ecx
10007604:	jae    0x1000760c
10007606:	mov    eax,0x80070057
1000760b:	ret    
1000760c:	add    eax,ecx
1000760e:	mov    ecx,DWORD PTR [esp+0x4]
10007612:	mov    DWORD PTR [ecx],eax
10007614:	xor    eax,eax
10007616:	ret    
10007617:	test   esi,esi
10007619:	jne    0x1000761e
1000761b:	xor    eax,eax
1000761d:	ret    
1000761e:	test   edi,edi
10007620:	je     0x10007628
10007622:	mov    eax,DWORD PTR [edi]
10007624:	push   edi
10007625:	call   DWORD PTR [eax+0x4]
10007628:	mov    eax,DWORD PTR [esi]
1000762a:	test   eax,eax
1000762c:	je     0x10007634
1000762e:	mov    ecx,DWORD PTR [eax]
10007630:	push   eax
10007631:	call   DWORD PTR [ecx+0x8]
10007634:	mov    DWORD PTR [esi],edi
10007636:	mov    eax,edi
10007638:	ret    
10007639:	cmp    DWORD PTR [eax+0x18],0x10
1000763d:	jb     0x10007644
1000763f:	mov    eax,DWORD PTR [eax+0x4]
10007642:	jmp    0x10007647
10007644:	add    eax,0x4
10007647:	cmp    DWORD PTR [ecx+0x18],0x10
1000764b:	jb     0x10007652
1000764d:	mov    ecx,DWORD PTR [ecx+0x4]
10007650:	jmp    0x10007655
10007652:	add    ecx,0x4
10007655:	push   eax
10007656:	push   ecx
10007657:	call   0x1004590f
1000765c:	pop    ecx
1000765d:	pop    ecx
1000765e:	xor    ecx,ecx
10007660:	test   eax,eax
10007662:	setl   cl
10007665:	mov    al,cl
10007667:	ret    
10007668:	push   0x0
1000766a:	mov    eax,0x10060786
1000766f:	call   0x10059c75
10007674:	mov    esi,DWORD PTR [ebp+0x8]
10007677:	xor    ebx,ebx
10007679:	mov    DWORD PTR [esi],ebx
1000767b:	mov    DWORD PTR [ebp-0x4],ebx
1000767e:	mov    DWORD PTR [esi+0x8],ebx
10007681:	mov    DWORD PTR [esi+0xc],ebx
10007684:	mov    DWORD PTR [esi+0x10],ebx
10007687:	push   0x400
1000768c:	mov    BYTE PTR [ebp-0x4],0x1
10007690:	call   0x100439b6
10007695:	mov    DWORD PTR [esi+0x14],eax
10007698:	pop    ecx
10007699:	mov    DWORD PTR [esi+0x18],ebx
1000769c:	mov    DWORD PTR [esi+0x1c],0x400
100076a3:	mov    DWORD PTR [esi+0x20],ebx
100076a6:	mov    eax,esi
100076a8:	call   0x10059d4d
100076ad:	ret    0x4
100076b0:	push   esi
100076b1:	mov    esi,eax
100076b3:	mov    eax,DWORD PTR [esi+0x18]
100076b6:	add    eax,edi
100076b8:	call   0x1000788d
100076bd:	mov    eax,DWORD PTR [esi+0x14]
100076c0:	add    eax,DWORD PTR [esi+0x18]
100076c3:	push   edi
100076c4:	push   DWORD PTR [esp+0xc]
100076c8:	push   eax
100076c9:	call   0x10045420
100076ce:	add    DWORD PTR [esi+0x18],edi
100076d1:	add    esp,0xc
100076d4:	pop    esi
100076d5:	ret    0x4
100076d8:	push   ebp
100076d9:	mov    ebp,esp
100076db:	push   ecx
100076dc:	mov    ecx,DWORD PTR [edi+0x4]
100076df:	push   ebx
100076e0:	mov    ebx,DWORD PTR [ebp+0xc]
100076e3:	cmp    ebx,ecx
100076e5:	push   esi
100076e6:	mov    esi,eax
100076e8:	jbe    0x100076f6
100076ea:	mov    eax,DWORD PTR [esi+0x18]
100076ed:	sub    eax,ecx
100076ef:	add    eax,ebx
100076f1:	call   0x1000788d
100076f6:	mov    ecx,DWORD PTR [edi+0x4]
100076f9:	mov    eax,DWORD PTR [edi]
100076fb:	mov    edx,DWORD PTR [esi+0x18]
100076fe:	sub    ebx,ecx
10007700:	add    ecx,eax
10007702:	mov    DWORD PTR [ebp-0x4],ecx
10007705:	sub    edx,DWORD PTR [ebp-0x4]
10007708:	mov    ecx,DWORD PTR [esi+0x14]
1000770b:	push   edx
1000770c:	mov    edx,DWORD PTR [ebp-0x4]
1000770f:	add    edx,ecx
10007711:	add    ecx,eax
10007713:	add    ecx,DWORD PTR [ebp+0xc]
10007716:	push   edx
10007717:	push   ecx
10007718:	call   0x10045960
1000771d:	push   DWORD PTR [ebp+0xc]
10007720:	mov    eax,DWORD PTR [esi+0x14]
10007723:	add    eax,DWORD PTR [edi]
10007725:	push   DWORD PTR [ebp+0x8]
10007728:	push   eax
10007729:	call   0x10045960
1000772e:	add    esp,0x18
10007731:	push   ebx
10007732:	push   DWORD PTR [edi]
10007734:	mov    eax,esi
10007736:	call   0x10007825
1000773b:	mov    eax,DWORD PTR [ebp+0xc]
1000773e:	mov    DWORD PTR [edi+0x4],eax
10007741:	add    DWORD PTR [esi+0x18],ebx
10007744:	pop    esi
10007745:	pop    ebx
10007746:	leave  
10007747:	ret    0x8
1000774a:	push   ebp
1000774b:	mov    ebp,esp
1000774d:	sub    esp,0xc
10007750:	push   esi
10007751:	mov    esi,eax
10007753:	mov    edx,DWORD PTR [esi+0x8]
10007756:	add    esi,0x4
10007759:	test   edx,edx
1000775b:	push   edi
1000775c:	jne    0x10007762
1000775e:	xor    ecx,ecx
10007760:	jmp    0x1000776a
10007762:	mov    ecx,DWORD PTR [esi+0x8]
10007765:	sub    ecx,edx
10007767:	sar    ecx,0x2
1000776a:	test   edx,edx
1000776c:	je     0x1000778a
1000776e:	mov    eax,DWORD PTR [esi+0xc]
10007771:	sub    eax,edx
10007773:	sar    eax,0x2
10007776:	cmp    ecx,eax
10007778:	jae    0x1000778a
1000777a:	mov    eax,DWORD PTR [esi+0x8]
1000777d:	mov    ecx,DWORD PTR [ebp+0x8]
10007780:	mov    DWORD PTR [eax],ecx
10007782:	add    eax,0x4
10007785:	mov    DWORD PTR [esi+0x8],eax
10007788:	jmp    0x100077a7
1000778a:	mov    edi,DWORD PTR [esi+0x8]
1000778d:	cmp    edx,edi
1000778f:	jbe    0x10007796
10007791:	call   0x100435f0
10007796:	push   edi
10007797:	push   esi
10007798:	lea    eax,[ebp+0x8]
1000779b:	push   eax
1000779c:	lea    eax,[ebp-0xc]
1000779f:	push   eax
100077a0:	mov    eax,esi
100077a2:	call   0x10009f82
100077a7:	pop    edi
100077a8:	pop    esi
100077a9:	leave  
100077aa:	ret    0x4
100077ad:	push   ebx
100077ae:	push   esi
100077af:	mov    esi,eax
100077b1:	add    esi,0x4
100077b4:	push   edi
100077b5:	mov    edi,DWORD PTR [esi+0x4]
100077b8:	cmp    edi,DWORD PTR [esi+0x8]
100077bb:	jbe    0x100077c2
100077bd:	call   0x100435f0
100077c2:	mov    ebx,DWORD PTR [esi+0x8]
100077c5:	cmp    DWORD PTR [esi+0x4],ebx
100077c8:	jbe    0x100077cf
100077ca:	call   0x100435f0
100077cf:	cmp    esi,esi
100077d1:	je     0x100077d8
100077d3:	call   0x100435f0
100077d8:	cmp    edi,ebx
100077da:	je     0x1000781f
100077dc:	cmp    edi,DWORD PTR [esi+0x8]
100077df:	jb     0x100077e6
100077e1:	call   0x100435f0
100077e6:	mov    eax,DWORD PTR [edi]
100077e8:	cmp    eax,DWORD PTR [esp+0x10]
100077ec:	je     0x100077fd
100077ee:	cmp    edi,DWORD PTR [esi+0x8]
100077f1:	jb     0x100077f8
100077f3:	call   0x100435f0
100077f8:	add    edi,0x4
100077fb:	jmp    0x100077c2
100077fd:	mov    eax,DWORD PTR [esi+0x8]
10007800:	lea    ecx,[edi+0x4]
10007803:	sub    eax,ecx
10007805:	sar    eax,0x2
10007808:	test   eax,eax
1000780a:	jle    0x1000781b
1000780c:	shl    eax,0x2
1000780f:	push   eax
10007810:	push   ecx
10007811:	push   eax
10007812:	push   edi
10007813:	call   0x100430e6
10007818:	add    esp,0x10
1000781b:	add    DWORD PTR [esi+0x8],0xfffffffc
1000781f:	pop    edi
10007820:	pop    esi
10007821:	pop    ebx
10007822:	ret    0x4
10007825:	push   ebp
10007826:	mov    ebp,esp
10007828:	and    esp,0xfffffff8
1000782b:	push   ecx
1000782c:	push   ebx
1000782d:	push   esi
1000782e:	mov    esi,eax
10007830:	add    esi,0x4
10007833:	push   edi
10007834:	mov    edi,DWORD PTR [esi+0x4]
10007837:	cmp    edi,DWORD PTR [esi+0x8]
1000783a:	jbe    0x10007841
1000783c:	call   0x100435f0
10007841:	mov    ebx,DWORD PTR [esi+0x8]
10007844:	cmp    DWORD PTR [esi+0x4],ebx
10007847:	jbe    0x1000784e
10007849:	call   0x100435f0
1000784e:	cmp    esi,esi
10007850:	je     0x10007857
10007852:	call   0x100435f0
10007857:	cmp    edi,ebx
10007859:	je     0x10007884
1000785b:	cmp    edi,DWORD PTR [esi+0x8]
1000785e:	jb     0x10007865
10007860:	call   0x100435f0
10007865:	mov    eax,DWORD PTR [edi]
10007867:	mov    ecx,DWORD PTR [eax]
10007869:	cmp    ecx,DWORD PTR [ebp+0x8]
1000786c:	jbe    0x10007875
1000786e:	mov    edx,DWORD PTR [ebp+0xc]
10007871:	add    ecx,edx
10007873:	mov    DWORD PTR [eax],ecx
10007875:	cmp    edi,DWORD PTR [esi+0x8]
10007878:	jb     0x1000787f
1000787a:	call   0x100435f0
1000787f:	add    edi,0x4
10007882:	jmp    0x10007841
10007884:	pop    edi
10007885:	pop    esi
10007886:	pop    ebx
10007887:	mov    esp,ebp
10007889:	pop    ebp
1000788a:	ret    0x8
1000788d:	mov    ecx,DWORD PTR [esi+0x1c]
10007890:	cmp    eax,ecx
10007892:	jbe    0x100078d8
10007894:	shr    eax,0xa
10007897:	inc    eax
10007898:	shl    eax,0xa
1000789b:	push   ebx
1000789c:	mov    ebx,eax
1000789e:	cmp    ebx,ecx
100078a0:	je     0x100078d7
100078a2:	push   edi
100078a3:	push   ebx
100078a4:	call   0x100439b6
100078a9:	push   DWORD PTR [esi+0x18]
100078ac:	mov    edi,eax
100078ae:	push   DWORD PTR [esi+0x14]
100078b1:	push   edi
100078b2:	call   0x10045420
100078b7:	mov    eax,DWORD PTR [esi+0x14]
100078ba:	add    esp,0x10
100078bd:	cmp    edi,eax
100078bf:	je     0x100078c8
100078c1:	push   eax
100078c2:	call   0x100430d2
100078c7:	pop    ecx
100078c8:	mov    DWORD PTR [esi+0x14],edi
100078cb:	push   0x0
100078cd:	mov    DWORD PTR [esi+0x1c],ebx
100078d0:	call   0x100430d2
100078d5:	pop    ecx
100078d6:	pop    edi
100078d7:	pop    ebx
100078d8:	ret    
100078d9:	push   0x0
100078db:	mov    eax,0x1005ff16
100078e0:	call   0x10059c75
100078e5:	mov    esi,DWORD PTR [ebp+0x8]
100078e8:	push   0x8
100078ea:	call   0x100436de
100078ef:	test   eax,eax
100078f1:	pop    ecx
100078f2:	je     0x10007901
100078f4:	mov    ecx,DWORD PTR [ebp+0x10]
100078f7:	mov    DWORD PTR [eax],ecx
100078f9:	mov    ecx,DWORD PTR [ebp+0x14]
100078fc:	mov    DWORD PTR [eax+0x4],ecx
100078ff:	jmp    0x10007903
10007901:	xor    eax,eax
10007903:	mov    DWORD PTR [esi],eax
10007905:	push   DWORD PTR [ebp+0xc]
10007908:	and    DWORD PTR [ebp-0x4],0x0
1000790c:	lea    ecx,[esi+0x4]
1000790f:	call   0x100011ab
10007914:	and    DWORD PTR [esi+0x20],0x0
10007918:	mov    eax,esi
1000791a:	call   0x10059d4d
1000791f:	ret    0x10
10007922:	push   0x4
10007924:	mov    eax,0x1005f8ac
10007929:	call   0x10059c75
1000792e:	mov    esi,ecx
10007930:	push   0x24
10007932:	call   0x100436de
10007937:	pop    ecx
10007938:	mov    DWORD PTR [ebp-0x10],eax
1000793b:	xor    eax,eax
1000793d:	mov    DWORD PTR [ebp-0x4],eax
10007940:	cmp    DWORD PTR [ebp-0x10],eax
10007943:	je     0x10007958
10007945:	mov    eax,DWORD PTR [esi]
10007947:	push   DWORD PTR [eax+0x4]
1000794a:	add    esi,0x4
1000794d:	push   DWORD PTR [eax]
1000794f:	push   esi
10007950:	push   DWORD PTR [ebp-0x10]
10007953:	call   0x100078d9
10007958:	call   0x10059d4d
1000795d:	ret    
1000795e:	push   ebp
1000795f:	mov    ebp,esp
10007961:	push   ecx
10007962:	mov    ecx,DWORD PTR [ebp+0x8]
10007965:	and    DWORD PTR [ebp-0x4],0x0
10007969:	add    eax,0x4
1000796c:	push   eax
1000796d:	call   0x100011ab
10007972:	mov    eax,DWORD PTR [ebp+0x8]
10007975:	leave  
10007976:	ret    0x4
10007979:	push   ecx
1000797a:	mov    ecx,DWORD PTR [esp+0x8]
1000797e:	push   edi
1000797f:	lea    edi,[esi+0x4]
10007982:	mov    eax,edi
10007984:	call   0x10006591
10007989:	test   al,al
1000798b:	je     0x10007991
1000798d:	xor    al,al
1000798f:	jmp    0x100079c3
10007991:	push   0xffffffff
10007993:	push   0x0
10007995:	push   DWORD PTR [esp+0x14]
10007999:	mov    ecx,edi
1000799b:	call   0x10001245
100079a0:	mov    eax,DWORD PTR [esi+0x20]
100079a3:	test   eax,eax
100079a5:	je     0x100079c1
100079a7:	cmp    DWORD PTR [edi+0x18],0x10
100079ab:	mov    ecx,DWORD PTR [esi+0x18]
100079ae:	jb     0x100079b5
100079b0:	mov    edi,DWORD PTR [edi+0x4]
100079b3:	jmp    0x100079b8
100079b5:	add    edi,0x4
100079b8:	push   ecx
100079b9:	push   edi
100079ba:	mov    edi,DWORD PTR [esi]
100079bc:	call   0x100076d8
100079c1:	mov    al,0x1
100079c3:	pop    edi
100079c4:	pop    ecx
100079c5:	ret    0x4
100079c8:	push   ecx
100079c9:	mov    eax,DWORD PTR [esi]
100079cb:	add    DWORD PTR [eax],ecx
100079cd:	push   DWORD PTR [esi]
100079cf:	mov    eax,edi
100079d1:	call   0x1000774a
100079d6:	mov    DWORD PTR [esi+0x20],edi
100079d9:	pop    ecx
100079da:	ret    
100079db:	call   0x1000a87c
100079e0:	lea    ecx,[esi+0x4]
100079e3:	mov    DWORD PTR [ecx],eax
100079e5:	mov    BYTE PTR [eax+0x39],0x1
100079e9:	mov    eax,DWORD PTR [ecx]
100079eb:	mov    DWORD PTR [eax+0x4],eax
100079ee:	mov    eax,DWORD PTR [ecx]
100079f0:	mov    DWORD PTR [eax],eax
100079f2:	mov    ecx,DWORD PTR [ecx]
100079f4:	xor    eax,eax
100079f6:	mov    DWORD PTR [ecx+0x8],ecx
100079f9:	mov    DWORD PTR [esi+0x8],eax
100079fc:	mov    DWORD PTR [esi+0xc],eax
100079ff:	mov    DWORD PTR [esi+0x10],eax
10007a02:	mov    eax,esi
10007a04:	ret    
10007a05:	push   esi
10007a06:	push   0x8
10007a08:	call   0x100436de
10007a0d:	xor    esi,esi
10007a0f:	cmp    eax,esi
10007a11:	pop    ecx
10007a12:	je     0x10007a1f
10007a14:	mov    ecx,DWORD PTR [esp+0x8]
10007a18:	mov    DWORD PTR [eax+0x4],esi
10007a1b:	mov    DWORD PTR [eax],ecx
10007a1d:	mov    esi,eax
10007a1f:	mov    eax,DWORD PTR [edi+0x10]
10007a22:	cmp    esi,eax
10007a24:	je     0x10007a2d
10007a26:	push   eax
10007a27:	call   0x100430d2
10007a2c:	pop    ecx
10007a2d:	mov    DWORD PTR [edi+0x10],esi
10007a30:	pop    esi
10007a31:	ret    0x4
10007a34:	push   ebp
10007a35:	mov    ebp,esp
10007a37:	and    esp,0xfffffff8
10007a3a:	sub    esp,0x10
10007a3d:	mov    eax,DWORD PTR [ebx+0x4]
10007a40:	mov    eax,DWORD PTR [eax]
10007a42:	push   esi
10007a43:	push   edi
10007a44:	mov    DWORD PTR [esp+0xc],eax
10007a48:	mov    DWORD PTR [esp+0x8],ebx
10007a4c:	mov    DWORD PTR [esp+0x10],ebx
10007a50:	mov    eax,DWORD PTR [ebx+0x4]
10007a53:	lea    edi,[esp+0x10]
10007a57:	lea    esi,[esp+0x8]
10007a5b:	mov    DWORD PTR [esp+0x14],eax
10007a5f:	call   0x10004b10
10007a64:	test   al,al
10007a66:	jne    0x10007ab7
10007a68:	xor    edi,edi
10007a6a:	call   0x1000cedb
10007a6f:	add    eax,0x1c
10007a72:	call   0x1000473c
10007a77:	test   eax,eax
10007a79:	je     0x10007aac
10007a7b:	lea    esi,[esp+0x8]
10007a7f:	call   0x1000cedb
10007a84:	push   edi
10007a85:	lea    esi,[eax+0x1c]
10007a88:	call   0x10009d41
10007a8d:	push   DWORD PTR [eax+0x1c]
10007a90:	call   0x100430d2
10007a95:	pop    ecx
10007a96:	lea    esi,[esp+0x8]
10007a9a:	inc    edi
10007a9b:	call   0x1000cedb
10007aa0:	add    eax,0x1c
10007aa3:	call   0x1000473c
10007aa8:	cmp    edi,eax
10007aaa:	jne    0x10007a7b
10007aac:	lea    esi,[esp+0x8]
10007ab0:	call   0x10009c5c
10007ab5:	jmp    0x10007a50
10007ab7:	push   DWORD PTR [ebx+0x10]
10007aba:	call   0x100430d2
10007abf:	pop    ecx
10007ac0:	mov    eax,ebx
10007ac2:	call   0x1000a1ac
10007ac7:	pop    edi
10007ac8:	pop    esi
10007ac9:	mov    esp,ebp
10007acb:	pop    ebp
10007acc:	ret    
10007acd:	push   0x1c
10007acf:	mov    eax,0x10062589
10007ad4:	call   0x10059c75
10007ad9:	mov    eax,DWORD PTR [ebp+0x8]
10007adc:	mov    ecx,DWORD PTR [ebp+0xc]
10007adf:	xor    ebx,ebx
10007ae1:	mov    DWORD PTR [eax+0xc],ebx
10007ae4:	mov    eax,DWORD PTR [ecx+0x4]
10007ae7:	mov    eax,DWORD PTR [eax]
10007ae9:	mov    DWORD PTR [ebp-0x1c],eax
10007aec:	mov    DWORD PTR [ebp-0x20],ecx
10007aef:	mov    DWORD PTR [ebp-0x28],ecx
10007af2:	mov    eax,DWORD PTR [ecx+0x4]
10007af5:	lea    edi,[ebp-0x28]
10007af8:	lea    esi,[ebp-0x20]
10007afb:	mov    DWORD PTR [ebp-0x24],eax
10007afe:	call   0x10004b10
10007b03:	test   al,al
10007b05:	jne    0x10007c09
10007b0b:	mov    DWORD PTR [ebp-0x10],ebx
10007b0e:	call   0x1000cedb
10007b13:	add    eax,0x1c
10007b16:	call   0x1000473c
10007b1b:	test   eax,eax
10007b1d:	je     0x10007bf9
10007b23:	mov    DWORD PTR [ebp-0x14],ebx
10007b26:	push   DWORD PTR [ebp-0x10]
10007b29:	lea    esi,[ebp-0x20]
10007b2c:	mov    DWORD PTR [ebp-0x4],ebx
10007b2f:	call   0x1000cedb
10007b34:	mov    esi,eax
10007b36:	add    esi,0x1c
10007b39:	call   0x10009d41
10007b3e:	cmp    DWORD PTR [eax+0x1c],ebx
10007b41:	je     0x10007b9f
10007b43:	push   0x8
10007b45:	call   0x100436de
10007b4a:	mov    edi,eax
10007b4c:	cmp    edi,ebx
10007b4e:	pop    ecx
10007b4f:	je     0x10007b8f
10007b51:	push   DWORD PTR [ebp-0x10]
10007b54:	lea    esi,[ebp-0x20]
10007b57:	call   0x1000cedb
10007b5c:	mov    esi,eax
10007b5e:	add    esi,0x1c
10007b61:	call   0x10009d41
10007b66:	mov    eax,DWORD PTR [eax+0x1c]
10007b69:	push   DWORD PTR [ebp-0x10]
10007b6c:	mov    ebx,DWORD PTR [eax+0x4]
10007b6f:	lea    esi,[ebp-0x20]
10007b72:	call   0x1000cedb
10007b77:	mov    esi,eax
10007b79:	add    esi,0x1c
10007b7c:	call   0x10009d41
10007b81:	mov    eax,DWORD PTR [eax+0x1c]
10007b84:	mov    eax,DWORD PTR [eax]
10007b86:	mov    DWORD PTR [edi+0x4],ebx
10007b89:	mov    DWORD PTR [edi],eax
10007b8b:	xor    ebx,ebx
10007b8d:	jmp    0x10007b91
10007b8f:	xor    edi,edi
10007b91:	cmp    edi,ebx
10007b93:	je     0x10007b9c
10007b95:	push   ebx
10007b96:	call   0x100430d2
10007b9b:	pop    ecx
10007b9c:	mov    DWORD PTR [ebp-0x14],edi
10007b9f:	push   ecx
10007ba0:	mov    ecx,DWORD PTR [ebp-0x14]
10007ba3:	mov    eax,esp
10007ba5:	mov    DWORD PTR [ebp-0x18],esp
10007ba8:	push   DWORD PTR [ebp-0x10]
10007bab:	lea    esi,[ebp-0x20]
10007bae:	mov    DWORD PTR [ebp-0x14],ebx
10007bb1:	mov    DWORD PTR [eax],ecx
10007bb3:	call   0x1000cedb
10007bb8:	mov    esi,eax
10007bba:	add    esi,0x1c
10007bbd:	call   0x10009d41
10007bc2:	push   eax
10007bc3:	lea    esi,[ebp-0x20]
10007bc6:	call   0x1000cedb
10007bcb:	mov    ecx,DWORD PTR [ebp+0x8]
10007bce:	mov    edx,eax
10007bd0:	call   0x10007df5
10007bd5:	or     DWORD PTR [ebp-0x4],0xffffffff
10007bd9:	push   ebx
10007bda:	call   0x100430d2
10007bdf:	inc    DWORD PTR [ebp-0x10]
10007be2:	pop    ecx
10007be3:	call   0x1000cedb
10007be8:	add    eax,0x1c
10007beb:	call   0x1000473c
10007bf0:	cmp    DWORD PTR [ebp-0x10],eax
10007bf3:	jne    0x10007b23
10007bf9:	lea    esi,[ebp-0x20]
10007bfc:	call   0x10009c5c
10007c01:	mov    ecx,DWORD PTR [ebp+0xc]
10007c04:	jmp    0x10007af2
10007c09:	call   0x10059d4d
10007c0e:	ret    0x8
10007c11:	push   ebp
10007c12:	mov    ebp,esp
10007c14:	mov    eax,DWORD PTR [ebp+0x8]
10007c17:	mov    ecx,DWORD PTR [eax+0x8]
10007c1a:	mov    edx,DWORD PTR [ebp+0xc]
10007c1d:	sub    esp,0x2c
10007c20:	cmp    ecx,DWORD PTR [edx+0x8]
10007c23:	push   ebx
10007c24:	push   esi
10007c25:	push   edi
10007c26:	je     0x10007c2f
10007c28:	xor    al,al
10007c2a:	jmp    0x10007d0b
10007c2f:	mov    ecx,DWORD PTR [eax+0x4]
10007c32:	mov    ecx,DWORD PTR [ecx]
10007c34:	mov    DWORD PTR [ebp-0xc],ecx
10007c37:	mov    DWORD PTR [ebp-0x10],eax
10007c3a:	mov    DWORD PTR [ebp-0x18],eax
10007c3d:	mov    eax,DWORD PTR [eax+0x4]
10007c40:	lea    edi,[ebp-0x18]
10007c43:	lea    esi,[ebp-0x10]
10007c46:	mov    DWORD PTR [ebp-0x14],eax
10007c49:	call   0x10004b10
10007c4e:	test   al,al
10007c50:	jne    0x10007d09
10007c56:	call   0x1000cedb
10007c5b:	mov    ebx,DWORD PTR [ebp+0xc]
10007c5e:	push   eax
10007c5f:	lea    eax,[ebp-0x28]
10007c62:	push   eax
10007c63:	call   0x10009b92
10007c68:	mov    eax,ebx
10007c6a:	mov    ecx,DWORD PTR [eax+0x4]
10007c6d:	lea    edi,[ebp-0x20]
10007c70:	lea    esi,[ebp-0x28]
10007c73:	mov    DWORD PTR [ebp-0x1c],ecx
10007c76:	mov    DWORD PTR [ebp-0x20],eax
10007c79:	call   0x10004b10
10007c7e:	test   al,al
10007c80:	jne    0x10007c28
10007c82:	lea    esi,[ebp-0x10]
10007c85:	call   0x1000cedb
10007c8a:	mov    edi,eax
10007c8c:	lea    esi,[ebp-0x28]
10007c8f:	add    edi,0x1c
10007c92:	call   0x1000cedb
10007c97:	mov    ebx,eax
10007c99:	add    ebx,0x1c
10007c9c:	mov    eax,ebx
10007c9e:	call   0x1000473c
10007ca3:	mov    esi,eax
10007ca5:	mov    eax,edi
10007ca7:	call   0x1000473c
10007cac:	cmp    eax,esi
10007cae:	jne    0x10007c28
10007cb4:	and    DWORD PTR [ebp-0x4],0x0
10007cb8:	mov    eax,edi
10007cba:	call   0x1000473c
10007cbf:	test   eax,eax
10007cc1:	je     0x10007cf9
10007cc3:	push   DWORD PTR [ebp-0x4]
10007cc6:	mov    esi,ebx
10007cc8:	call   0x10009d41
10007ccd:	push   DWORD PTR [ebp-0x4]
10007cd0:	mov    esi,edi
10007cd2:	mov    DWORD PTR [ebp-0x8],eax
10007cd5:	call   0x10009d41
10007cda:	mov    ecx,DWORD PTR [ebp-0x8]
10007cdd:	call   0x10006591
10007ce2:	test   al,al
10007ce4:	je     0x10007c28
10007cea:	inc    DWORD PTR [ebp-0x4]
10007ced:	mov    eax,edi
10007cef:	call   0x1000473c
10007cf4:	cmp    DWORD PTR [ebp-0x4],eax
10007cf7:	jne    0x10007cc3
10007cf9:	lea    esi,[ebp-0x10]
10007cfc:	call   0x10009c5c
10007d01:	mov    eax,DWORD PTR [ebp+0x8]
10007d04:	jmp    0x10007c3d
10007d09:	mov    al,0x1
10007d0b:	pop    edi
10007d0c:	pop    esi
10007d0d:	pop    ebx
10007d0e:	leave  
10007d0f:	ret    0x8
10007d12:	push   0x3c
10007d14:	mov    eax,0x1006255c
10007d19:	call   0x10059cde
10007d1e:	mov    edi,ecx
10007d20:	push   ebx
10007d21:	push   edi
10007d22:	mov    DWORD PTR [ebp-0x40],edi
10007d25:	call   0x10007c11
10007d2a:	test   al,al
10007d2c:	je     0x10007d35
10007d2e:	xor    al,al
10007d30:	jmp    0x10007def
10007d35:	call   0x10008374
10007d3a:	mov    eax,DWORD PTR [ebx+0x4]
10007d3d:	mov    eax,DWORD PTR [eax]
10007d3f:	mov    DWORD PTR [ebp-0x38],eax
10007d42:	mov    DWORD PTR [ebp-0x3c],ebx
10007d45:	mov    DWORD PTR [ebp-0x48],ebx
10007d48:	mov    eax,DWORD PTR [ebx+0x4]
10007d4b:	lea    edi,[ebp-0x48]
10007d4e:	lea    esi,[ebp-0x3c]
10007d51:	mov    DWORD PTR [ebp-0x44],eax
10007d54:	call   0x10004b10
10007d59:	test   al,al
10007d5b:	jne    0x10007ded
10007d61:	xor    edi,edi
10007d63:	push   edi
10007d64:	mov    DWORD PTR [ebp-0x34],edi
10007d67:	call   0x1000cedb
10007d6c:	push   eax
10007d6d:	lea    eax,[ebp-0x30]
10007d70:	push   eax
10007d71:	mov    eax,ebx
10007d73:	call   0x100084c3
10007d78:	mov    DWORD PTR [ebp-0x4],edi
10007d7b:	mov    edi,0x1006cd08
10007d80:	jmp    0x10007dc3
10007d82:	push   0x1
10007d84:	lea    esi,[ebp-0x3c]
10007d87:	call   0x1000cedb
10007d8c:	mov    edx,DWORD PTR [ebp-0x40]
10007d8f:	push   eax
10007d90:	lea    ecx,[ebp-0x30]
10007d93:	call   0x10007f58
10007d98:	inc    DWORD PTR [ebp-0x34]
10007d9b:	or     DWORD PTR [ebp-0x4],0xffffffff
10007d9f:	push   0x0
10007da1:	push   0x1
10007da3:	lea    ecx,[ebp-0x30]
10007da6:	call   0x100012f4
10007dab:	push   DWORD PTR [ebp-0x34]
10007dae:	call   0x1000cedb
10007db3:	push   eax
10007db4:	lea    eax,[ebp-0x30]
10007db7:	push   eax
10007db8:	mov    eax,ebx
10007dba:	call   0x100084c3
10007dbf:	and    DWORD PTR [ebp-0x4],0x0
10007dc3:	push   edi
10007dc4:	lea    esi,[ebp-0x30]
10007dc7:	call   0x100065b3
10007dcc:	test   al,al
10007dce:	pop    ecx
10007dcf:	je     0x10007d82
10007dd1:	or     DWORD PTR [ebp-0x4],0xffffffff
10007dd5:	push   0x0
10007dd7:	push   0x1
10007dd9:	mov    ecx,esi
10007ddb:	call   0x100012f4
10007de0:	lea    esi,[ebp-0x3c]
10007de3:	call   0x10009c5c
10007de8:	jmp    0x10007d48
10007ded:	mov    al,0x1
10007def:	call   0x10059d61
10007df4:	ret    
10007df5:	push   0x9c
10007dfa:	mov    eax,0x1006252c
10007dff:	call   0x10059cde
10007e04:	mov    edi,DWORD PTR [ebp+0x8]
10007e07:	mov    ebx,ecx
10007e09:	mov    esi,edx
10007e0b:	mov    DWORD PTR [ebp-0x34],ebx
10007e0e:	mov    DWORD PTR [ebp-0x38],esi
10007e11:	and    DWORD PTR [ebp-0x4],0x0
10007e15:	push   0x0
10007e17:	lea    ecx,[ebp-0x30]
10007e1a:	mov    DWORD PTR [ebp-0x18],0xf
10007e21:	call   0x10001420
10007e26:	push   0xffffffff
10007e28:	push   0x0
10007e2a:	push   edi
10007e2b:	lea    ecx,[ebp-0x30]
10007e2e:	mov    BYTE PTR [ebp-0x4],0x1
10007e32:	call   0x10001245
10007e37:	mov    eax,DWORD PTR [ebp+0xc]
10007e3a:	mov    DWORD PTR [ebp-0x14],eax
10007e3d:	push   esi
10007e3e:	lea    eax,[ebp-0x40]
10007e41:	push   eax
10007e42:	call   0x10009b92
10007e47:	mov    eax,DWORD PTR [ebx+0x4]
10007e4a:	lea    edi,[ebp-0x48]
10007e4d:	lea    esi,[ebp-0x40]
10007e50:	mov    DWORD PTR [ebp-0x44],eax
10007e53:	mov    DWORD PTR [ebp-0x48],ebx
10007e56:	call   0x10004b10
10007e5b:	test   al,al
10007e5d:	je     0x10007f08
10007e63:	sub    esp,0x10
10007e66:	mov    eax,esp
10007e68:	xor    ecx,ecx
10007e6a:	mov    DWORD PTR [ebp-0x50],esp
10007e6d:	mov    DWORD PTR [eax+0x4],ecx
10007e70:	mov    DWORD PTR [eax+0x8],ecx
10007e73:	mov    DWORD PTR [eax+0xc],ecx
10007e76:	sub    esp,0x1c
10007e79:	mov    BYTE PTR [ebp-0x4],0x2
10007e7d:	mov    ecx,esp
10007e7f:	mov    DWORD PTR [ebp-0x44],esp
10007e82:	push   DWORD PTR [ebp-0x38]
10007e85:	call   0x100011ab
10007e8a:	lea    edi,[ebp-0xa8]
10007e90:	mov    BYTE PTR [ebp-0x4],0x1
10007e94:	call   0x1000a943
10007e99:	add    esp,0x2c
10007e9c:	lea    ecx,[ebp-0x7c]
10007e9f:	push   ecx
10007ea0:	mov    edi,eax
10007ea2:	mov    BYTE PTR [ebp-0x4],0x3
10007ea6:	call   0x1000a992
10007eab:	lea    eax,[ebp-0x7c]
10007eae:	push   eax
10007eaf:	push   ebx
10007eb0:	lea    ebx,[ebp-0x4c]
10007eb3:	mov    BYTE PTR [ebp-0x4],0x4
10007eb7:	call   0x10009831
10007ebc:	lea    esi,[ebp-0x60]
10007ebf:	call   0x1000a2fa
10007ec4:	push   0x0
10007ec6:	push   0x1
10007ec8:	lea    ecx,[ebp-0x7c]
10007ecb:	call   0x100012f4
10007ed0:	lea    esi,[ebp-0x8c]
10007ed6:	mov    BYTE PTR [ebp-0x4],0x1
10007eda:	call   0x1000a2fa
10007edf:	push   0x0
10007ee1:	push   0x1
10007ee3:	lea    ecx,[ebp-0xa8]
10007ee9:	call   0x100012f4
10007eee:	push   DWORD PTR [ebp-0x38]
10007ef1:	mov    ebx,DWORD PTR [ebp-0x34]
10007ef4:	lea    eax,[ebp-0x48]
10007ef7:	push   eax
10007ef8:	call   0x10009b92
10007efd:	mov    ecx,DWORD PTR [eax]
10007eff:	mov    eax,DWORD PTR [eax+0x4]
10007f02:	mov    DWORD PTR [ebp-0x40],ecx
10007f05:	mov    DWORD PTR [ebp-0x3c],eax
10007f08:	lea    eax,[ebp-0x30]
10007f0b:	push   eax
10007f0c:	lea    esi,[ebp-0x40]
10007f0f:	call   0x1000cedb
10007f14:	add    eax,0x1c
10007f17:	call   0x10009d60
10007f1c:	push   0x0
10007f1e:	push   0x1
10007f20:	lea    ecx,[ebp-0x30]
10007f23:	call   0x100012f4
10007f28:	push   0x0
10007f2a:	call   0x100430d2
10007f2f:	pop    ecx
10007f30:	call   0x10059d61
10007f35:	ret    0x8
10007f38:	push   0x0
10007f3a:	push   0x1
10007f3c:	call   0x100012f4
10007f41:	ret    
10007f42:	push   esi
10007f43:	lea    esi,[edi+0x1c]
10007f46:	call   0x1000a2fa
10007f4b:	push   0x0
10007f4d:	push   0x1
10007f4f:	mov    ecx,edi
10007f51:	call   0x100012f4
10007f56:	pop    esi
10007f57:	ret    
10007f58:	push   ebp
10007f59:	mov    ebp,esp
10007f5b:	and    esp,0xfffffff8
10007f5e:	push   0xffffffff
10007f60:	push   0x100624d3
10007f65:	mov    eax,fs:0x0
10007f6b:	push   eax
10007f6c:	sub    esp,0xd0
10007f72:	mov    eax,ds:0x1007e030
10007f77:	xor    eax,esp
10007f79:	mov    DWORD PTR [esp+0xc8],eax
10007f80:	push   ebx
10007f81:	push   esi
10007f82:	push   edi
10007f83:	mov    eax,ds:0x1007e030
10007f88:	xor    eax,esp
10007f8a:	push   eax
10007f8b:	lea    eax,[esp+0xe0]
10007f92:	mov    fs:0x0,eax
10007f98:	mov    eax,DWORD PTR [ebp+0x8]
10007f9b:	push   eax
10007f9c:	mov    DWORD PTR [esp+0x14],eax
10007fa0:	lea    eax,[esp+0x2c]
10007fa4:	mov    ebx,edx
10007fa6:	push   eax
10007fa7:	mov    DWORD PTR [esp+0x28],ebx
10007fab:	mov    DWORD PTR [esp+0x2c],ecx
10007faf:	call   0x10009b92
10007fb4:	mov    eax,DWORD PTR [ebx+0x4]
10007fb7:	lea    edi,[esp+0x18]
10007fbb:	lea    esi,[esp+0x28]
10007fbf:	mov    DWORD PTR [esp+0x1c],eax
10007fc3:	mov    DWORD PTR [esp+0x18],ebx
10007fc7:	call   0x10004b10
10007fcc:	xor    ebx,ebx
10007fce:	test   al,al
10007fd0:	jne    0x10007fdb
10007fd2:	cmp    BYTE PTR [ebp+0xc],bl
10007fd5:	je     0x1000823b
10007fdb:	push   DWORD PTR [esp+0x24]
10007fdf:	lea    eax,[esp+0xa0]
10007fe6:	push   DWORD PTR [esp+0x14]
10007fea:	push   eax
10007feb:	call   0x1000858a
10007ff0:	add    esp,0xc
10007ff3:	mov    esi,DWORD PTR [esp+0x20]
10007ff7:	mov    DWORD PTR [esp+0xe8],ebx
10007ffe:	mov    eax,DWORD PTR [esi+0xc]
10008001:	cmp    eax,ebx
10008003:	je     0x1000802d
10008005:	cmp    DWORD PTR [esp+0xb4],0x10
1000800d:	mov    ecx,DWORD PTR [esp+0xa0]
10008014:	jae    0x1000801d
10008016:	lea    ecx,[esp+0xa0]
1000801d:	push   DWORD PTR [esp+0xb0]
10008024:	mov    edi,DWORD PTR [esi+0x10]
10008027:	push   ecx
10008028:	call   0x100076d8
1000802d:	mov    DWORD PTR [esp+0x14],ebx
10008031:	mov    BYTE PTR [esp+0xe8],0x1
10008039:	cmp    DWORD PTR [esi+0xc],ebx
1000803c:	je     0x1000806c
1000803e:	push   0x8
10008040:	call   0x100436de
10008045:	cmp    eax,ebx
10008047:	pop    ecx
10008048:	je     0x1000805b
1000804a:	mov    ecx,DWORD PTR [esi+0x10]
1000804d:	mov    edx,DWORD PTR [ecx+0x4]
10008050:	add    edx,DWORD PTR [ecx]
10008052:	mov    DWORD PTR [eax+0x4],ebx
10008055:	mov    DWORD PTR [eax],edx
10008057:	mov    edi,eax
10008059:	jmp    0x1000805d
1000805b:	xor    edi,edi
1000805d:	cmp    edi,ebx
1000805f:	je     0x10008068
10008061:	push   ebx
10008062:	call   0x100430d2
10008067:	pop    ecx
10008068:	mov    DWORD PTR [esp+0x14],edi
1000806c:	push   ebx
1000806d:	lea    ecx,[esp+0xbc]
10008074:	mov    DWORD PTR [esp+0xd4],0xf
1000807f:	call   0x10001420
10008084:	push   0xffffffff
10008086:	push   ebx
10008087:	mov    BYTE PTR [esp+0xf0],0x2
1000808f:	push   DWORD PTR [esp+0x2c]
10008093:	lea    ecx,[esp+0xc4]
1000809a:	call   0x10001245
1000809f:	mov    eax,DWORD PTR [esi+0x10]
100080a2:	mov    DWORD PTR [esp+0xd4],eax
100080a9:	mov    DWORD PTR [esp+0x38],ebx
100080ad:	mov    DWORD PTR [esp+0x3c],ebx
100080b1:	mov    DWORD PTR [esp+0x40],ebx
100080b5:	push   DWORD PTR [esp+0x10]
100080b9:	lea    eax,[esp+0x1c]
100080bd:	push   eax
100080be:	mov    ebx,esi
100080c0:	mov    BYTE PTR [esp+0xf0],0x3
100080c8:	call   0x10009b92
100080cd:	mov    eax,DWORD PTR [esi+0x4]
100080d0:	mov    DWORD PTR [esp+0x28],esi
100080d4:	lea    edi,[esp+0x28]
100080d8:	lea    esi,[esp+0x18]
100080dc:	mov    DWORD PTR [esp+0x2c],eax
100080e0:	call   0x10004b10
100080e5:	test   al,al
100080e7:	je     0x100081b6
100080ed:	sub    esp,0x10
100080f0:	mov    eax,esp
100080f2:	mov    DWORD PTR [esp+0x34],esp
100080f6:	push   eax
100080f7:	lea    ecx,[esp+0x48]
100080fb:	call   0x10009ca9
10008100:	sub    esp,0x1c
10008103:	mov    BYTE PTR [esp+0x114],0x4
1000810b:	mov    ecx,esp
1000810d:	mov    DWORD PTR [esp+0x54],esp
10008111:	push   DWORD PTR [esp+0x3c]
10008115:	call   0x100011ab
1000811a:	lea    edi,[esp+0x9c]
10008121:	mov    BYTE PTR [esp+0x114],0x3
10008129:	call   0x1000a943
1000812e:	add    esp,0x2c
10008131:	lea    ecx,[esp+0x44]
10008135:	push   ecx
10008136:	mov    edi,eax
10008138:	mov    BYTE PTR [esp+0xec],0x5
10008140:	call   0x1000a992
10008145:	mov    edi,DWORD PTR [esp+0x20]
10008149:	lea    eax,[esp+0x44]
1000814d:	push   eax
1000814e:	push   edi
1000814f:	lea    ebx,[esp+0x30]
10008153:	mov    BYTE PTR [esp+0xf0],0x6
1000815b:	call   0x10009831
10008160:	lea    esi,[esp+0x60]
10008164:	call   0x1000a2fa
10008169:	push   0x0
1000816b:	push   0x1
1000816d:	lea    ecx,[esp+0x4c]
10008171:	call   0x100012f4
10008176:	lea    esi,[esp+0x8c]
1000817d:	mov    BYTE PTR [esp+0xe8],0x3
10008185:	call   0x1000a2fa
1000818a:	push   0x0
1000818c:	push   0x1
1000818e:	lea    ecx,[esp+0x78]
10008192:	call   0x100012f4
10008197:	push   DWORD PTR [esp+0x10]
1000819b:	lea    eax,[esp+0x2c]
1000819f:	push   eax
100081a0:	mov    ebx,edi
100081a2:	call   0x10009b92
100081a7:	mov    ecx,DWORD PTR [eax]
100081a9:	mov    eax,DWORD PTR [eax+0x4]
100081ac:	mov    DWORD PTR [esp+0x18],ecx
100081b0:	mov    DWORD PTR [esp+0x1c],eax
100081b4:	jmp    0x100081b8
100081b6:	mov    edi,ebx
100081b8:	lea    eax,[esp+0xb8]
100081bf:	push   eax
100081c0:	lea    esi,[esp+0x1c]
100081c4:	call   0x1000cedb
100081c9:	add    eax,0x1c
100081cc:	call   0x10009d60
100081d1:	lea    esi,[esp+0x34]
100081d5:	mov    BYTE PTR [esp+0xe8],0x2
100081dd:	call   0x1000a2fa
100081e2:	xor    ebx,ebx
100081e4:	cmp    DWORD PTR [edi+0xc],ebx
100081e7:	je     0x10008211
100081e9:	mov    esi,DWORD PTR [esp+0x14]
100081ed:	mov    eax,ebx
100081ef:	cmp    esi,eax
100081f1:	mov    DWORD PTR [edi+0x10],ebx
100081f4:	mov    DWORD PTR [esp+0x14],ebx
100081f8:	je     0x10008201
100081fa:	push   eax
100081fb:	call   0x100430d2
10008200:	pop    ecx
10008201:	mov    DWORD PTR [edi+0x10],esi
10008204:	mov    eax,DWORD PTR [edi+0xc]
10008207:	cmp    eax,ebx
10008209:	je     0x10008211
1000820b:	push   esi
1000820c:	call   0x1000774a
10008211:	push   ebx
10008212:	push   0x1
10008214:	lea    ecx,[esp+0xc0]
1000821b:	call   0x100012f4
10008220:	push   DWORD PTR [esp+0x14]
10008224:	call   0x100430d2
10008229:	pop    ecx
1000822a:	push   ebx
1000822b:	push   0x1
1000822d:	lea    ecx,[esp+0xa4]
10008234:	call   0x100012f4
10008239:	mov    al,0x1
1000823b:	mov    ecx,DWORD PTR [esp+0xe0]
10008242:	mov    DWORD PTR fs:0x0,ecx
10008249:	pop    ecx
1000824a:	pop    edi
1000824b:	pop    esi
1000824c:	pop    ebx
1000824d:	mov    ecx,DWORD PTR [esp+0xc8]
10008254:	xor    ecx,esp
10008256:	call   0x100430d7
1000825b:	mov    esp,ebp
1000825d:	pop    ebp
1000825e:	ret    0x8
10008261:	push   ebp
10008262:	mov    ebp,esp
10008264:	and    esp,0xfffffff8
10008267:	sub    esp,0x1c
1000826a:	push   ebx
1000826b:	mov    ebx,DWORD PTR [ebp+0x8]
1000826e:	push   esi
1000826f:	push   edi
10008270:	push   DWORD PTR [ebp+0xc]
10008273:	lea    eax,[esp+0x14]
10008277:	push   eax
10008278:	call   0x10009b92
1000827d:	mov    eax,DWORD PTR [ebx+0x4]
10008280:	lea    edi,[esp+0x18]
10008284:	lea    esi,[esp+0x10]
10008288:	mov    DWORD PTR [esp+0x1c],eax
1000828c:	mov    DWORD PTR [esp+0x18],ebx
10008290:	call   0x10004b10
10008295:	test   al,al
10008297:	je     0x100082a0
10008299:	xor    al,al
1000829b:	jmp    0x1000836b
100082a0:	lea    esi,[esp+0x10]
100082a4:	call   0x1000cedb
100082a9:	add    eax,0x1c
100082ac:	call   0x1000473c
100082b1:	test   eax,eax
100082b3:	jbe    0x10008299
100082b5:	call   0x1000cedb
100082ba:	push   0x0
100082bc:	lea    esi,[eax+0x1c]
100082bf:	call   0x10009d41
100082c4:	mov    esi,eax
100082c6:	mov    eax,DWORD PTR [ebx+0xc]
100082c9:	test   eax,eax
100082cb:	je     0x100082e7
100082cd:	push   DWORD PTR [esi+0x1c]
100082d0:	call   0x100077ad
100082d5:	mov    edi,DWORD PTR [esi+0x1c]
100082d8:	mov    eax,DWORD PTR [ebx+0xc]
100082db:	push   0x0
100082dd:	push   0x1006cd08
100082e2:	call   0x100076d8
100082e7:	push   DWORD PTR [esi+0x1c]
100082ea:	call   0x100430d2
100082ef:	pop    ecx
100082f0:	lea    esi,[esp+0x10]
100082f4:	call   0x1000cedb
100082f9:	mov    esi,eax
100082fb:	mov    edi,DWORD PTR [esi+0x20]
100082fe:	add    esi,0x1c
10008301:	cmp    edi,DWORD PTR [esi+0x8]
10008304:	jbe    0x1000830b
10008306:	call   0x100435f0
1000830b:	mov    DWORD PTR [esp+0x18],esi
1000830f:	lea    esi,[esp+0x10]
10008313:	mov    DWORD PTR [esp+0x1c],edi
10008317:	call   0x1000cedb
1000831c:	mov    esi,eax
1000831e:	lea    eax,[esp+0x20]
10008322:	push   eax
10008323:	xor    ecx,ecx
10008325:	lea    eax,[esp+0x1c]
10008329:	call   0x10009e0c
1000832e:	push   DWORD PTR [eax+0x4]
10008331:	add    esi,0x1c
10008334:	push   DWORD PTR [eax]
10008336:	lea    ebx,[esp+0x20]
1000833a:	call   0x10009dba
1000833f:	lea    esi,[esp+0x10]
10008343:	call   0x1000cedb
10008348:	add    eax,0x1c
1000834b:	call   0x1000473c
10008350:	test   eax,eax
10008352:	jne    0x10008369
10008354:	push   DWORD PTR [esp+0x14]
10008358:	lea    eax,[esp+0x24]
1000835c:	push   DWORD PTR [esp+0x14]
10008360:	push   eax
10008361:	push   DWORD PTR [ebp+0x8]
10008364:	call   0x100098f2
10008369:	mov    al,0x1
1000836b:	pop    edi
1000836c:	pop    esi
1000836d:	pop    ebx
1000836e:	mov    esp,ebp
10008370:	pop    ebp
10008371:	ret    0x8
10008374:	push   ebp
10008375:	mov    ebp,esp
10008377:	and    esp,0xfffffff8
1000837a:	sub    esp,0xc
1000837d:	cmp    DWORD PTR [edi+0x8],0x0
10008381:	push   esi
10008382:	je     0x100083a7
10008384:	mov    DWORD PTR [esp+0x8],edi
10008388:	mov    eax,DWORD PTR [edi+0x4]
1000838b:	mov    eax,DWORD PTR [eax]
1000838d:	lea    esi,[esp+0x8]
10008391:	mov    DWORD PTR [esp+0xc],eax
10008395:	call   0x1000cedb
1000839a:	push   eax
1000839b:	push   edi
1000839c:	call   0x10008261
100083a1:	cmp    DWORD PTR [edi+0x8],0x0
100083a5:	jne    0x10008388
100083a7:	pop    esi
100083a8:	mov    esp,ebp
100083aa:	pop    ebp
100083ab:	ret    
100083ac:	push   ebp
100083ad:	mov    ebp,esp
100083af:	and    esp,0xfffffff8
100083b2:	push   0xffffffff
100083b4:	push   0x10062467
100083b9:	mov    eax,fs:0x0
100083bf:	push   eax
100083c0:	sub    esp,0x38
100083c3:	mov    eax,ds:0x1007e030
100083c8:	xor    eax,esp
100083ca:	mov    DWORD PTR [esp+0x30],eax
100083ce:	push   ebx
100083cf:	push   esi
100083d0:	push   edi
100083d1:	mov    eax,ds:0x1007e030
100083d6:	xor    eax,esp
100083d8:	push   eax
100083d9:	lea    eax,[esp+0x48]
100083dd:	mov    fs:0x0,eax
100083e3:	mov    eax,DWORD PTR [ebp+0x8]
100083e6:	push   eax
100083e7:	lea    eax,[esp+0x18]
100083eb:	mov    ebx,edx
100083ed:	push   eax
100083ee:	mov    DWORD PTR [esp+0x18],ecx
100083f2:	call   0x10009b92
100083f7:	mov    eax,DWORD PTR [ebx+0x4]
100083fa:	lea    edi,[esp+0x1c]
100083fe:	lea    esi,[esp+0x14]
10008402:	mov    DWORD PTR [esp+0x20],eax
10008406:	mov    DWORD PTR [esp+0x1c],ebx
1000840a:	call   0x10004b10
1000840f:	test   al,al
10008411:	je     0x1000841a
10008413:	xor    al,al
10008415:	jmp    0x100084a3
1000841a:	lea    esi,[esp+0x14]
1000841e:	call   0x1000cedb
10008423:	add    eax,0x1c
10008426:	call   0x1000473c
1000842b:	test   eax,eax
1000842d:	jbe    0x10008413
1000842f:	call   0x1000cedb
10008434:	push   0x0
10008436:	lea    esi,[eax+0x1c]
10008439:	call   0x10009d41
1000843e:	push   0xffffffff
10008440:	push   0x0
10008442:	push   DWORD PTR [esp+0x18]
10008446:	mov    edi,eax
10008448:	mov    ecx,edi
1000844a:	call   0x10001245
1000844f:	lea    esi,[esp+0x14]
10008453:	call   0x1000cedb
10008458:	push   DWORD PTR [esp+0x10]
1000845c:	push   eax
1000845d:	lea    eax,[esp+0x2c]
10008461:	push   eax
10008462:	call   0x1000858a
10008467:	add    esp,0xc
1000846a:	and    DWORD PTR [esp+0x50],0x0
1000846f:	mov    ebx,DWORD PTR [ebx+0xc]
10008472:	test   ebx,ebx
10008474:	je     0x10008494
10008476:	cmp    DWORD PTR [esp+0x3c],0x10
1000847b:	mov    eax,DWORD PTR [esp+0x28]
1000847f:	jae    0x10008485
10008481:	lea    eax,[esp+0x28]
10008485:	push   DWORD PTR [esp+0x38]
10008489:	mov    edi,DWORD PTR [edi+0x1c]
1000848c:	push   eax
1000848d:	mov    eax,ebx
1000848f:	call   0x100076d8
10008494:	push   0x0
10008496:	push   0x1
10008498:	lea    ecx,[esp+0x2c]
1000849c:	call   0x100012f4
100084a1:	mov    al,0x1
100084a3:	mov    ecx,DWORD PTR [esp+0x48]
100084a7:	mov    DWORD PTR fs:0x0,ecx
100084ae:	pop    ecx
100084af:	pop    edi
100084b0:	pop    esi
100084b1:	pop    ebx
100084b2:	mov    ecx,DWORD PTR [esp+0x30]
100084b6:	xor    ecx,esp
100084b8:	call   0x100430d7
100084bd:	mov    esp,ebp
100084bf:	pop    ebp
100084c0:	ret    0x4
100084c3:	push   ebp
100084c4:	mov    ebp,esp
100084c6:	sub    esp,0x18
100084c9:	and    DWORD PTR [ebp-0x8],0x0
100084cd:	push   ebx
100084ce:	push   esi
100084cf:	push   edi
100084d0:	push   DWORD PTR [ebp+0xc]
100084d3:	mov    ebx,eax
100084d5:	lea    eax,[ebp-0xc]
100084d8:	push   eax
100084d9:	call   0x10009b92
100084de:	mov    eax,DWORD PTR [ebx+0x4]
100084e1:	lea    edi,[ebp-0x14]
100084e4:	lea    esi,[ebp-0xc]
100084e7:	mov    DWORD PTR [ebp-0x10],eax
100084ea:	mov    DWORD PTR [ebp-0x14],ebx
100084ed:	call   0x10004b10
100084f2:	test   al,al
100084f4:	jne    0x10008525
100084f6:	call   0x1000cedb
100084fb:	add    eax,0x1c
100084fe:	call   0x1000473c
10008503:	cmp    DWORD PTR [ebp+0x10],eax
10008506:	jae    0x10008525
10008508:	push   DWORD PTR [ebp+0x10]
1000850b:	call   0x1000cedb
10008510:	mov    esi,eax
10008512:	add    esi,0x1c
10008515:	call   0x10009d41
1000851a:	mov    ecx,DWORD PTR [ebp+0x8]
1000851d:	push   eax
1000851e:	call   0x100011ab
10008523:	jmp    0x10008532
10008525:	mov    ecx,DWORD PTR [ebp+0x8]
10008528:	push   0x1006cd08
1000852d:	call   0x100011d1
10008532:	mov    eax,DWORD PTR [ebp+0x8]
10008535:	pop    edi
10008536:	pop    esi
10008537:	pop    ebx
10008538:	leave  
10008539:	ret    0xc
1000853c:	push   ebp
1000853d:	mov    ebp,esp
1000853f:	sub    esp,0x18
10008542:	push   ebx
10008543:	push   esi
10008544:	push   edi
10008545:	push   DWORD PTR [ebp+0x8]
10008548:	mov    ebx,eax
1000854a:	lea    eax,[ebp-0x14]
1000854d:	push   eax
1000854e:	call   0x10009b92
10008553:	mov    eax,DWORD PTR [ebx+0x4]
10008556:	lea    edi,[ebp-0xc]
10008559:	lea    esi,[ebp-0x14]
1000855c:	mov    DWORD PTR [ebp-0x8],eax
1000855f:	mov    DWORD PTR [ebp-0xc],ebx
10008562:	call   0x10004b10
10008567:	test   al,al
10008569:	jne    0x10008581
1000856b:	call   0x1000cedb
10008570:	add    eax,0x1c
10008573:	call   0x1000473c
10008578:	test   eax,eax
1000857a:	jbe    0x10008581
1000857c:	xor    eax,eax
1000857e:	inc    eax
1000857f:	jmp    0x10008583
10008581:	xor    eax,eax
10008583:	pop    edi
10008584:	pop    esi
10008585:	pop    ebx
10008586:	leave  
10008587:	ret    0x4
1000858a:	push   0x3c
1000858c:	mov    eax,0x10062444
10008591:	call   0x10059c75
10008596:	and    DWORD PTR [ebp-0x10],0x0
1000859a:	push   0x1006d3a8
1000859f:	push   DWORD PTR [ebp+0xc]
100085a2:	lea    eax,[ebp-0x48]
100085a5:	push   eax
100085a6:	call   0x100064b5
100085ab:	push   DWORD PTR [ebp+0x10]
100085ae:	and    DWORD PTR [ebp-0x4],0x0
100085b2:	push   eax
100085b3:	lea    eax,[ebp-0x2c]
100085b6:	push   eax
100085b7:	call   0x100064fb
100085bc:	push   0x1006d3a4
100085c1:	push   eax
100085c2:	push   DWORD PTR [ebp+0x8]
100085c5:	mov    BYTE PTR [ebp-0x4],0x1
100085c9:	call   0x100064b5
100085ce:	add    esp,0x24
100085d1:	push   0x0
100085d3:	push   0x1
100085d5:	lea    ecx,[ebp-0x2c]
100085d8:	call   0x100012f4
100085dd:	push   0x0
100085df:	push   0x1
100085e1:	lea    ecx,[ebp-0x48]
100085e4:	call   0x100012f4
100085e9:	mov    eax,DWORD PTR [ebp+0x8]
100085ec:	call   0x10059d4d
100085f1:	ret    
100085f2:	push   ebp
100085f3:	mov    ebp,esp
100085f5:	sub    esp,0x10
100085f8:	mov    eax,DWORD PTR [ebx+0x4]
100085fb:	mov    eax,DWORD PTR [eax]
100085fd:	push   esi
100085fe:	push   edi
100085ff:	mov    DWORD PTR [ebp-0x4],eax
10008602:	mov    DWORD PTR [ebp-0x8],ebx
10008605:	mov    DWORD PTR [ebp-0x10],ebx
10008608:	mov    eax,DWORD PTR [ebx+0x4]
1000860b:	lea    edi,[ebp-0x10]
1000860e:	lea    esi,[ebp-0x8]
10008611:	mov    DWORD PTR [ebp-0xc],eax
10008614:	call   0x10004b10
10008619:	test   al,al
1000861b:	jne    0x1000866b
1000861d:	xor    edi,edi
1000861f:	call   0x1000cedb
10008624:	add    eax,0x1c
10008627:	call   0x1000473c
1000862c:	test   eax,eax
1000862e:	je     0x10008661
10008630:	lea    esi,[ebp-0x8]
10008633:	call   0x1000cedb
10008638:	push   edi
10008639:	lea    esi,[eax+0x1c]
1000863c:	call   0x10009d41
10008641:	push   DWORD PTR [eax+0x1c]
10008644:	mov    eax,DWORD PTR [ebx+0xc]
10008647:	call   0x1000774a
1000864c:	lea    esi,[ebp-0x8]
1000864f:	inc    edi
10008650:	call   0x1000cedb
10008655:	add    eax,0x1c
10008658:	call   0x1000473c
1000865d:	cmp    edi,eax
1000865f:	jne    0x10008630
10008661:	lea    esi,[ebp-0x8]
10008664:	call   0x10009c5c
10008669:	jmp    0x10008608
1000866b:	push   DWORD PTR [ebx+0x10]
1000866e:	mov    eax,DWORD PTR [ebx+0xc]
10008671:	call   0x1000774a
10008676:	pop    edi
10008677:	pop    esi
10008678:	leave  
10008679:	ret    
1000867a:	push   0x0
1000867c:	mov    eax,0x100638fb
10008681:	call   0x10059c75
10008686:	mov    edi,DWORD PTR [ebp+0x8]
10008689:	xor    ebx,ebx
1000868b:	mov    DWORD PTR [edi],ebx
1000868d:	mov    DWORD PTR [ebp-0x4],ebx
10008690:	mov    DWORD PTR [edi+0x4],ebx
10008693:	mov    DWORD PTR [edi+0x8],ebx
10008696:	mov    BYTE PTR [ebp-0x4],0x2
1000869a:	lea    esi,[edi+0x18]
1000869d:	mov    DWORD PTR [edi+0x10],ebx
100086a0:	mov    DWORD PTR [edi+0x14],ebx
100086a3:	call   0x100079db
100086a8:	mov    BYTE PTR [edi+0x2c],bl
100086ab:	mov    DWORD PTR [edi+0x30],ebx
100086ae:	mov    DWORD PTR [edi+0x34],ebx
100086b1:	mov    DWORD PTR [edi+0x38],ebx
100086b4:	mov    eax,edi
100086b6:	call   0x10059d4d
100086bb:	ret    0x4
100086be:	push   ebx
100086bf:	push   esi
100086c0:	mov    esi,ecx
100086c2:	push   edi
100086c3:	mov    edi,DWORD PTR [esi+0x30]
100086c6:	mov    ebx,eax
100086c8:	cmp    ebx,edi
100086ca:	je     0x100086d5
100086cc:	test   edi,edi
100086ce:	je     0x100086d5
100086d0:	call   0x10009e94
100086d5:	mov    DWORD PTR [esi+0x30],ebx
100086d8:	mov    edi,DWORD PTR [esi]
100086da:	test   edi,edi
100086dc:	je     0x100086ea
100086de:	push   DWORD PTR [edi]
100086e0:	mov    eax,ebx
100086e2:	call   0x1000774a
100086e7:	mov    DWORD PTR [edi+0x20],ebx
100086ea:	mov    edi,DWORD PTR [esi+0x4]
100086ed:	test   edi,edi
100086ef:	je     0x10008700
100086f1:	mov    ebx,DWORD PTR [esi+0x30]
100086f4:	push   DWORD PTR [edi]
100086f6:	mov    eax,ebx
100086f8:	call   0x1000774a
100086fd:	mov    DWORD PTR [edi+0x20],ebx
10008700:	mov    edi,DWORD PTR [esi+0x8]
10008703:	test   edi,edi
10008705:	je     0x10008716
10008707:	mov    ebx,DWORD PTR [esi+0x30]
1000870a:	push   DWORD PTR [edi]
1000870c:	mov    eax,ebx
1000870e:	call   0x1000774a
10008713:	mov    DWORD PTR [edi+0x20],ebx
10008716:	lea    ebx,[esi+0x18]
10008719:	mov    esi,DWORD PTR [esi+0x30]
1000871c:	test   esi,esi
1000871e:	mov    DWORD PTR [ebx+0xc],esi
10008721:	je     0x10008728
10008723:	call   0x100085f2
10008728:	pop    edi
10008729:	pop    esi
1000872a:	pop    ebx
1000872b:	ret    
1000872c:	mov    eax,DWORD PTR [ecx+0x30]
1000872f:	test   eax,eax
10008731:	je     0x10008737
10008733:	mov    eax,DWORD PTR [eax+0x18]
10008736:	ret    
10008737:	mov    eax,DWORD PTR [ecx+0x34]
1000873a:	ret    
1000873b:	push   ebp
1000873c:	mov    ebp,esp
1000873e:	sub    esp,0x18
10008741:	mov    eax,ds:0x1007e030
10008746:	xor    eax,ebp
10008748:	mov    DWORD PTR [ebp-0x4],eax
1000874b:	mov    eax,DWORD PTR [ebp+0x8]
1000874e:	mov    eax,DWORD PTR [eax+0x38]
10008751:	test   eax,eax
10008753:	push   esi
10008754:	push   edi
10008755:	lea    esi,[ebp+0xc]
10008758:	lea    edi,[ebp-0x14]
1000875b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000875c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000875d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000875e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000875f:	pop    edi
10008760:	pop    esi
10008761:	jne    0x10008767
10008763:	xor    eax,eax
10008765:	jmp    0x1000877f
10008767:	and    DWORD PTR [ebp-0x18],0x0
1000876b:	mov    ecx,DWORD PTR [eax]
1000876d:	lea    edx,[ebp-0x18]
10008770:	push   edx
10008771:	lea    edx,[ebp-0x14]
10008774:	push   edx
10008775:	push   eax
10008776:	call   DWORD PTR [ecx]
10008778:	test   eax,eax
1000877a:	jl     0x10008763
1000877c:	mov    eax,DWORD PTR [ebp-0x18]
1000877f:	mov    ecx,DWORD PTR [ebp-0x4]
10008782:	xor    ecx,ebp
10008784:	call   0x100430d7
10008789:	leave  
1000878a:	ret    0x14
1000878d:	push   ebp
1000878e:	mov    ebp,esp
10008790:	sub    esp,0x14
10008793:	mov    eax,ds:0x1007e030
10008798:	xor    eax,ebp
1000879a:	mov    DWORD PTR [ebp-0x4],eax
1000879d:	push   esi
1000879e:	push   edi
1000879f:	mov    eax,DWORD PTR [ebp+0x8]
100087a2:	lea    esi,[ebp+0xc]
100087a5:	lea    edi,[ebp-0x14]
100087a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
100087a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
100087aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
100087ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
100087ac:	sub    esp,0x10
100087af:	mov    edi,esp
100087b1:	lea    esi,[ebp-0x14]
100087b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
100087b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
100087b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
100087b7:	push   eax
100087b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
100087b9:	call   0x1000873b
100087be:	mov    ecx,DWORD PTR [ebp-0x4]
100087c1:	pop    edi
100087c2:	xor    ecx,ebp
100087c4:	pop    esi
100087c5:	call   0x100430d7
100087ca:	leave  
100087cb:	ret    0x14
100087ce:	push   0x8
100087d0:	mov    eax,0x10063f02
100087d5:	call   0x10059c75
100087da:	push   0x40
100087dc:	call   0x100436de
100087e1:	pop    ecx
100087e2:	mov    DWORD PTR [ebp-0x10],eax
100087e5:	and    DWORD PTR [ebp-0x4],0x0
100087e9:	test   eax,eax
100087eb:	je     0x100087fa
100087ed:	push   eax
100087ee:	call   0x1000867a
100087f3:	mov    esi,eax
100087f5:	mov    DWORD PTR [ebp-0x10],esi
100087f8:	jmp    0x10008801
100087fa:	and    DWORD PTR [ebp-0x10],0x0
100087fe:	mov    esi,DWORD PTR [ebp-0x10]
10008801:	mov    DWORD PTR [ebp-0x14],esi
10008804:	mov    eax,DWORD PTR [ebp+0x8]
10008807:	mov    DWORD PTR [ebp-0x4],0x1
1000880e:	mov    ecx,DWORD PTR [eax]
10008810:	call   0x10007922
10008815:	mov    ebx,eax
10008817:	mov    edi,esi
10008819:	call   0x10009c24
1000881e:	mov    eax,DWORD PTR [ebp+0x8]
10008821:	mov    ecx,DWORD PTR [eax+0x4]
10008824:	call   0x10007922
10008829:	lea    edi,[esi+0x4]
1000882c:	mov    ebx,eax
1000882e:	call   0x10009c24
10008833:	mov    eax,DWORD PTR [ebp+0x8]
10008836:	mov    ecx,DWORD PTR [eax+0x8]
10008839:	call   0x10007922
1000883e:	lea    edi,[esi+0x8]
10008841:	mov    ebx,eax
10008843:	call   0x10009c24
10008848:	mov    ebx,DWORD PTR [ebp+0x8]
1000884b:	lea    eax,[ebx+0x18]
1000884e:	push   eax
1000884f:	lea    eax,[esi+0x18]
10008852:	push   eax
10008853:	call   0x10007acd
10008858:	mov    al,BYTE PTR [ebx+0x2c]
1000885b:	mov    BYTE PTR [esi+0x2c],al
1000885e:	mov    eax,DWORD PTR [ebx+0x10]
10008861:	mov    DWORD PTR [esi+0x10],eax
10008864:	mov    eax,DWORD PTR [ebx+0x14]
10008867:	mov    DWORD PTR [esi+0x14],eax
1000886a:	mov    edi,DWORD PTR [ebx+0x38]
1000886d:	lea    eax,[esi+0x38]
10008870:	cmp    DWORD PTR [eax],edi
10008872:	je     0x1000887e
10008874:	mov    esi,eax
10008876:	call   0x10007617
1000887b:	mov    esi,DWORD PTR [ebp-0x10]
1000887e:	mov    ecx,ebx
10008880:	call   0x1000872c
10008885:	mov    DWORD PTR [esi+0x34],eax
10008888:	mov    eax,esi
1000888a:	call   0x10059d4d
1000888f:	ret    0x4
10008892:	push   0x44
10008894:	mov    eax,0x100630de
10008899:	call   0x10059c75
1000889e:	and    DWORD PTR [ebp-0x14],0x0
100088a2:	mov    ebx,DWORD PTR [ebp+0xc]
100088a5:	mov    eax,DWORD PTR [ebx]
100088a7:	lea    ecx,[ebp-0x30]
100088aa:	push   ecx
100088ab:	call   0x1000795e
100088b0:	and    DWORD PTR [ebp-0x4],0x0
100088b4:	mov    edi,DWORD PTR [ebp+0x8]
100088b7:	mov    esi,DWORD PTR [edi]
100088b9:	push   eax
100088ba:	mov    DWORD PTR [ebp-0x14],0x1
100088c1:	call   0x10007979
100088c6:	test   al,al
100088c8:	setne  BYTE PTR [ebp-0xd]
100088cc:	or     DWORD PTR [ebp-0x4],0xffffffff
100088d0:	xor    esi,esi
100088d2:	push   0x0
100088d4:	inc    esi
100088d5:	push   esi
100088d6:	lea    ecx,[ebp-0x30]
100088d9:	call   0x100012f4
100088de:	mov    eax,DWORD PTR [ebx+0x4]
100088e1:	lea    ecx,[ebp-0x30]
100088e4:	push   ecx
100088e5:	call   0x1000795e
100088ea:	mov    DWORD PTR [ebp-0x4],esi
100088ed:	mov    esi,DWORD PTR [edi+0x4]
100088f0:	push   eax
100088f1:	mov    DWORD PTR [ebp-0x14],0x2
100088f8:	call   0x10007979
100088fd:	test   al,al
100088ff:	jne    0x10008909
10008901:	cmp    BYTE PTR [ebp-0xd],al
10008904:	mov    BYTE PTR [ebp-0xd],al
10008907:	je     0x1000890d
10008909:	mov    BYTE PTR [ebp-0xd],0x1
1000890d:	or     DWORD PTR [ebp-0x4],0xffffffff
10008911:	push   0x0
10008913:	push   0x1
10008915:	lea    ecx,[ebp-0x30]
10008918:	call   0x100012f4
1000891d:	mov    eax,DWORD PTR [ebx+0x8]
10008920:	lea    ecx,[ebp-0x4c]
10008923:	push   ecx
10008924:	call   0x1000795e
10008929:	mov    DWORD PTR [ebp-0x4],0x2
10008930:	mov    esi,DWORD PTR [edi+0x8]
10008933:	push   eax
10008934:	mov    DWORD PTR [ebp-0x14],0x4
1000893b:	call   0x10007979
10008940:	test   al,al
10008942:	jne    0x1000894c
10008944:	cmp    BYTE PTR [ebp-0xd],al
10008947:	mov    BYTE PTR [ebp-0xd],al
1000894a:	je     0x10008950
1000894c:	mov    BYTE PTR [ebp-0xd],0x1
10008950:	or     DWORD PTR [ebp-0x4],0xffffffff
10008954:	push   0x0
10008956:	push   0x1
10008958:	lea    ecx,[ebp-0x4c]
1000895b:	call   0x100012f4
10008960:	add    ebx,0x18
10008963:	lea    ecx,[edi+0x18]
10008966:	call   0x10007d12
1000896b:	test   al,al
1000896d:	jne    0x10008978
1000896f:	cmp    BYTE PTR [ebp-0xd],al
10008972:	jne    0x10008978
10008974:	xor    bl,bl
10008976:	jmp    0x1000897a
10008978:	mov    bl,0x1
1000897a:	mov    edx,DWORD PTR [ebp+0xc]
1000897d:	mov    al,BYTE PTR [edx+0x2c]
10008980:	cmp    BYTE PTR [edi+0x2c],al
10008983:	je     0x1000898a
10008985:	mov    bl,0x1
10008987:	mov    BYTE PTR [edi+0x2c],al
1000898a:	mov    eax,DWORD PTR [edx+0x10]
1000898d:	mov    ecx,DWORD PTR [edi+0x10]
10008990:	cmp    ecx,eax
10008992:	mov    esi,DWORD PTR [edx+0x14]
10008995:	jne    0x1000899e
10008997:	mov    ecx,DWORD PTR [edi+0x14]
1000899a:	cmp    ecx,esi
1000899c:	je     0x100089a6
1000899e:	mov    bl,0x1
100089a0:	mov    DWORD PTR [edi+0x10],eax
100089a3:	mov    DWORD PTR [edi+0x14],esi
100089a6:	mov    eax,DWORD PTR [edx+0x38]
100089a9:	lea    esi,[edi+0x38]
100089ac:	cmp    DWORD PTR [esi],eax
100089ae:	je     0x100089bf
100089b0:	mov    edi,eax
100089b2:	mov    bl,0x1
100089b4:	call   0x10007617
100089b9:	mov    edi,DWORD PTR [ebp+0x8]
100089bc:	mov    edx,DWORD PTR [ebp+0xc]
100089bf:	cmp    DWORD PTR [edi+0x30],0x0
100089c3:	jne    0x100089e5
100089c5:	mov    ecx,edx
100089c7:	call   0x1000872c
100089cc:	mov    ecx,edi
100089ce:	mov    esi,eax
100089d0:	call   0x1000872c
100089d5:	cmp    esi,eax
100089d7:	je     0x100089e5
100089d9:	mov    ecx,edx
100089db:	mov    bl,0x1
100089dd:	call   0x1000872c
100089e2:	mov    DWORD PTR [edi+0x34],eax
100089e5:	mov    al,bl
100089e7:	call   0x10059d4d
100089ec:	ret    0x8
100089ef:	push   0x74
100089f1:	mov    eax,0x10060755
100089f6:	call   0x10059c75
100089fb:	mov    eax,DWORD PTR [esi]
100089fd:	lea    ecx,[ebp-0x44]
10008a00:	push   ecx
10008a01:	call   0x1000795e
10008a06:	mov    ebx,eax
10008a08:	and    DWORD PTR [ebp-0x4],0x0
10008a0c:	mov    eax,DWORD PTR [edi]
10008a0e:	lea    ecx,[ebp-0x28]
10008a11:	push   ecx
10008a12:	call   0x1000795e
10008a17:	mov    ecx,ebx
10008a19:	mov    BYTE PTR [ebp-0x4],0x1
10008a1d:	call   0x10006591
10008a22:	mov    bl,al
10008a24:	neg    bl
10008a26:	push   0x0
10008a28:	sbb    bl,bl
10008a2a:	push   0x1
10008a2c:	lea    ecx,[ebp-0x28]
10008a2f:	inc    bl
10008a31:	call   0x100012f4
10008a36:	or     DWORD PTR [ebp-0x4],0xffffffff
10008a3a:	push   0x0
10008a3c:	push   0x1
10008a3e:	lea    ecx,[ebp-0x44]
10008a41:	call   0x100012f4
10008a46:	test   bl,bl
10008a48:	je     0x10008a51
10008a4a:	xor    al,al
10008a4c:	jmp    0x10008b38
10008a51:	mov    eax,DWORD PTR [esi+0x4]
10008a54:	lea    ecx,[ebp-0x28]
10008a57:	push   ecx
10008a58:	call   0x1000795e
10008a5d:	mov    ebx,eax
10008a5f:	lea    ecx,[ebp-0x44]
10008a62:	mov    DWORD PTR [ebp-0x4],0x2
10008a69:	mov    eax,DWORD PTR [edi+0x4]
10008a6c:	push   ecx
10008a6d:	call   0x1000795e
10008a72:	mov    ecx,ebx
10008a74:	mov    BYTE PTR [ebp-0x4],0x3
10008a78:	call   0x10006591
10008a7d:	mov    bl,al
10008a7f:	neg    bl
10008a81:	push   0x0
10008a83:	sbb    bl,bl
10008a85:	push   0x1
10008a87:	lea    ecx,[ebp-0x44]
10008a8a:	inc    bl
10008a8c:	call   0x100012f4
10008a91:	or     DWORD PTR [ebp-0x4],0xffffffff
10008a95:	push   0x0
10008a97:	push   0x1
10008a99:	lea    ecx,[ebp-0x28]
10008a9c:	call   0x100012f4
10008aa1:	test   bl,bl
10008aa3:	jne    0x10008a4a
10008aa5:	mov    eax,DWORD PTR [esi+0x8]
10008aa8:	lea    ecx,[ebp-0x7c]
10008aab:	push   ecx
10008aac:	call   0x1000795e
10008ab1:	mov    ebx,eax
10008ab3:	lea    ecx,[ebp-0x60]
10008ab6:	mov    DWORD PTR [ebp-0x4],0x4
10008abd:	mov    eax,DWORD PTR [edi+0x8]
10008ac0:	push   ecx
10008ac1:	call   0x1000795e
10008ac6:	mov    ecx,ebx
10008ac8:	mov    BYTE PTR [ebp-0x4],0x5
10008acc:	call   0x10006591
10008ad1:	mov    bl,al
10008ad3:	neg    bl
10008ad5:	push   0x0
10008ad7:	sbb    bl,bl
10008ad9:	push   0x1
10008adb:	lea    ecx,[ebp-0x60]
10008ade:	inc    bl
10008ae0:	call   0x100012f4
10008ae5:	or     DWORD PTR [ebp-0x4],0xffffffff
10008ae9:	push   0x0
10008aeb:	push   0x1
10008aed:	lea    ecx,[ebp-0x7c]
10008af0:	call   0x100012f4
10008af5:	test   bl,bl
10008af7:	jne    0x10008a4a
10008afd:	lea    eax,[esi+0x18]
10008b00:	push   eax
10008b01:	lea    eax,[edi+0x18]
10008b04:	push   eax
10008b05:	call   0x10007c11
10008b0a:	test   al,al
10008b0c:	je     0x10008a4a
10008b12:	mov    al,BYTE PTR [edi+0x2c]
10008b15:	cmp    al,BYTE PTR [esi+0x2c]
10008b18:	jne    0x10008a4a
10008b1e:	mov    eax,DWORD PTR [edi+0x10]
10008b21:	cmp    eax,DWORD PTR [esi+0x10]
10008b24:	jne    0x10008a4a
10008b2a:	mov    eax,DWORD PTR [edi+0x14]
10008b2d:	cmp    eax,DWORD PTR [esi+0x14]
10008b30:	jne    0x10008a4a
10008b36:	mov    al,0x1
10008b38:	call   0x10059d4d
10008b3d:	ret    
10008b3e:	push   ebp
10008b3f:	mov    ebp,esp
10008b41:	and    esp,0xfffffff8
10008b44:	push   0xffffffff
10008b46:	push   0x10062406
10008b4b:	mov    eax,fs:0x0
10008b51:	push   eax
10008b52:	sub    esp,0xc0
10008b58:	mov    eax,ds:0x1007e030
10008b5d:	xor    eax,esp
10008b5f:	mov    DWORD PTR [esp+0xb8],eax
10008b66:	push   ebx
10008b67:	push   esi
10008b68:	push   edi
10008b69:	mov    eax,ds:0x1007e030
10008b6e:	xor    eax,esp
10008b70:	push   eax
10008b71:	lea    eax,[esp+0xd0]
10008b78:	mov    fs:0x0,eax
10008b7e:	mov    eax,DWORD PTR [ebp+0x8]
10008b81:	xor    edi,edi
10008b83:	mov    DWORD PTR [esp+0x1c],eax
10008b87:	mov    DWORD PTR [esp+0x10],edi
10008b8b:	mov    eax,DWORD PTR [eax+0x4]
10008b8e:	cmp    eax,edi
10008b90:	mov    DWORD PTR [esp+0x18],ecx
10008b94:	je     0x10008bb0
10008b96:	lea    ecx,[esp+0x3c]
10008b9a:	push   ecx
10008b9b:	call   0x1000795e
10008ba0:	xor    ebx,ebx
10008ba2:	inc    ebx
10008ba3:	mov    DWORD PTR [esp+0xd8],edi
10008baa:	mov    DWORD PTR [esp+0x10],ebx
10008bae:	jmp    0x10008bd0
10008bb0:	push   0x1006cd08
10008bb5:	lea    ecx,[esp+0x24]
10008bb9:	call   0x100011d1
10008bbe:	xor    ebx,ebx
10008bc0:	inc    ebx
10008bc1:	mov    DWORD PTR [esp+0xd8],ebx
10008bc8:	mov    DWORD PTR [esp+0x10],0x2
10008bd0:	push   eax
10008bd1:	lea    ecx,[esp+0xb0]
10008bd8:	call   0x100011ab
10008bdd:	mov    DWORD PTR [esp+0xd8],0x2
10008be8:	test   BYTE PTR [esp+0x10],0x2
10008bed:	je     0x10008bff
10008bef:	and    DWORD PTR [esp+0x10],0xfffffffd
10008bf4:	push   edi
10008bf5:	push   ebx
10008bf6:	lea    ecx,[esp+0x28]
10008bfa:	call   0x100012f4
10008bff:	mov    BYTE PTR [esp+0xd8],0x4
10008c07:	test   BYTE PTR [esp+0x10],bl
10008c0b:	je     0x10008c18
10008c0d:	push   edi
10008c0e:	push   ebx
10008c0f:	lea    ecx,[esp+0x44]
10008c13:	call   0x100012f4
10008c18:	push   0x1006cd08
10008c1d:	lea    esi,[esp+0xb0]
10008c24:	call   0x100065b3
10008c29:	test   al,al
10008c2b:	pop    ecx
10008c2c:	je     0x10008c41
10008c2e:	mov    ecx,DWORD PTR [esp+0x18]
10008c32:	push   0x1006cd08
10008c37:	call   0x100011d1
10008c3c:	jmp    0x10008ef6
10008c41:	push   edi
10008c42:	lea    ecx,[esp+0x94]
10008c49:	mov    DWORD PTR [esp+0xac],0xf
10008c54:	call   0x10001420
10008c59:	push   0x2c8b63b6
10008c5e:	push   0x1006d3ac
10008c63:	mov    BYTE PTR [esp+0xe0],0x5
10008c6b:	call   0x100042d1
10008c70:	push   0x60b81222
10008c75:	push   eax
10008c76:	call   0x100042d1
10008c7b:	push   0x22e573c6
10008c80:	push   eax
10008c81:	call   0x100042d1
10008c86:	mov    ecx,DWORD PTR [esp+0xc8]
10008c8d:	add    esp,0x18
10008c90:	cmp    DWORD PTR [esp+0xc4],0x10
10008c98:	jb     0x10008ca0
10008c9a:	mov    DWORD PTR [esp+0x10],ecx
10008c9e:	jmp    0x10008cab
10008ca0:	lea    edx,[esp+0xb0]
10008ca7:	mov    DWORD PTR [esp+0x10],edx
10008cab:	cmp    DWORD PTR [esp+0xc4],0x10
10008cb3:	jae    0x10008cbc
10008cb5:	lea    ecx,[esp+0xb0]
10008cbc:	push   eax
10008cbd:	push   0x7
10008cbf:	mov    esi,0x1006d3dc
10008cc4:	push   esi
10008cc5:	mov    DWORD PTR [esp+0x20],ecx
10008cc9:	call   0x100042e3
10008cce:	add    esp,0xc
10008cd1:	push   eax
10008cd2:	push   DWORD PTR [esp+0x14]
10008cd6:	call   0x10045cd0
10008cdb:	cmp    eax,DWORD PTR [esp+0x1c]
10008cdf:	pop    ecx
10008ce0:	pop    ecx
10008ce1:	jne    0x10008cff
10008ce3:	push   0xffffffff
10008ce5:	push   edi
10008ce6:	lea    eax,[esp+0xb4]
10008ced:	push   eax
10008cee:	lea    ecx,[esp+0x9c]
10008cf5:	call   0x10001245
10008cfa:	jmp    0x10008ed7
10008cff:	push   0x1aed296c
10008d04:	push   0x1006d3e4
10008d09:	call   0x100042d1
10008d0e:	push   0x920b784
10008d13:	push   eax
10008d14:	call   0x100042d1
10008d19:	push   0x3109a566
10008d1e:	push   eax
10008d1f:	call   0x100042d1
10008d24:	push   eax
10008d25:	push   0x4
10008d27:	push   0x1006d420
10008d2c:	call   0x100042e3
10008d31:	add    esp,0x24
10008d34:	push   eax
10008d35:	lea    ecx,[esp+0x24]
10008d39:	call   0x100011d1
10008d3e:	push   edi
10008d3f:	lea    eax,[esp+0x24]
10008d43:	push   eax
10008d44:	lea    eax,[esp+0x60]
10008d48:	push   eax
10008d49:	mov    eax,DWORD PTR [esp+0x28]
10008d4d:	add    eax,0x18
10008d50:	mov    BYTE PTR [esp+0xe4],0x6
10008d58:	call   0x100084c3
10008d5d:	lea    ecx,[esp+0xac]
10008d64:	push   ecx
10008d65:	push   eax
10008d66:	lea    eax,[esp+0x44]
10008d6a:	push   eax
10008d6b:	mov    BYTE PTR [esp+0xe4],0x7
10008d73:	call   0x100064fb
10008d78:	add    esp,0xc
10008d7b:	push   0xffffffff
10008d7d:	push   edi
10008d7e:	push   eax
10008d7f:	lea    ecx,[esp+0x9c]
10008d86:	mov    BYTE PTR [esp+0xe4],0x8
10008d8e:	call   0x10001245
10008d93:	push   edi
10008d94:	push   ebx
10008d95:	lea    ecx,[esp+0x44]
10008d99:	call   0x100012f4
10008d9e:	push   edi
10008d9f:	push   ebx
10008da0:	lea    ecx,[esp+0x60]
10008da4:	call   0x100012f4
10008da9:	push   edi
10008daa:	push   ebx
10008dab:	lea    ecx,[esp+0x28]
10008daf:	mov    BYTE PTR [esp+0xe0],0x5
10008db7:	call   0x100012f4
10008dbc:	push   0x15f8a6ec
10008dc1:	push   0x1006d428
10008dc6:	call   0x100042d1
10008dcb:	push   0x44a8a59e
10008dd0:	push   eax
10008dd1:	call   0x100042d1
10008dd6:	push   0xd9fec16
10008ddb:	push   eax
10008ddc:	call   0x100042d1
10008de1:	push   0x168b324e
10008de6:	push   eax
10008de7:	call   0x100042d1
10008dec:	push   0x126ad8de
10008df1:	push   eax
10008df2:	call   0x100042d1
10008df7:	mov    ecx,DWORD PTR [esp+0xbc]
10008dfe:	add    esp,0x28
10008e01:	cmp    DWORD PTR [esp+0xa8],0x10
10008e09:	jb     0x10008e11
10008e0b:	mov    DWORD PTR [esp+0x14],ecx
10008e0f:	jmp    0x10008e1c
10008e11:	lea    edx,[esp+0x94]
10008e18:	mov    DWORD PTR [esp+0x14],edx
10008e1c:	cmp    DWORD PTR [esp+0xa8],0x10
10008e24:	jae    0x10008e2d
10008e26:	lea    ecx,[esp+0x94]
10008e2d:	push   eax
10008e2e:	push   0x7
10008e30:	push   esi
10008e31:	mov    DWORD PTR [esp+0x1c],ecx
10008e35:	call   0x100042e3
10008e3a:	add    esp,0xc
10008e3d:	push   eax
10008e3e:	push   DWORD PTR [esp+0x18]
10008e42:	call   0x10045cd0
10008e47:	cmp    eax,DWORD PTR [esp+0x18]
10008e4b:	pop    ecx
10008e4c:	pop    ecx
10008e4d:	je     0x10008ed7
10008e53:	push   0x60c11092
10008e58:	push   0x1006d44c
10008e5d:	call   0x100042d1
10008e62:	push   0x77fa65f8
10008e67:	push   eax
10008e68:	call   0x100042d1
10008e6d:	push   eax
10008e6e:	push   0x7
10008e70:	push   esi
10008e71:	call   0x100042e3
10008e76:	add    esp,0x1c
10008e79:	push   eax
10008e7a:	lea    ecx,[esp+0x78]
10008e7e:	call   0x100011d1
10008e83:	lea    ecx,[esp+0x90]
10008e8a:	push   ecx
10008e8b:	push   eax
10008e8c:	lea    eax,[esp+0x60]
10008e90:	push   eax
10008e91:	mov    BYTE PTR [esp+0xe4],0x9
10008e99:	call   0x100064fb
10008e9e:	add    esp,0xc
10008ea1:	push   0xffffffff
10008ea3:	push   edi
10008ea4:	push   eax
10008ea5:	lea    ecx,[esp+0x9c]
10008eac:	mov    BYTE PTR [esp+0xe4],0xa
10008eb4:	call   0x10001245
10008eb9:	push   edi
10008eba:	push   ebx
10008ebb:	lea    ecx,[esp+0x60]
10008ebf:	call   0x100012f4
10008ec4:	push   edi
10008ec5:	push   ebx
10008ec6:	lea    ecx,[esp+0x7c]
10008eca:	mov    BYTE PTR [esp+0xe0],0x5
10008ed2:	call   0x100012f4
10008ed7:	mov    ecx,DWORD PTR [esp+0x18]
10008edb:	lea    eax,[esp+0x90]
10008ee2:	push   eax
10008ee3:	call   0x100011ab
10008ee8:	push   edi
10008ee9:	push   ebx
10008eea:	lea    ecx,[esp+0x98]
10008ef1:	call   0x100012f4
10008ef6:	push   edi
10008ef7:	push   ebx
10008ef8:	lea    ecx,[esp+0xb4]
10008eff:	call   0x100012f4
10008f04:	mov    eax,DWORD PTR [esp+0x18]
10008f08:	mov    ecx,DWORD PTR [esp+0xd0]
10008f0f:	mov    DWORD PTR fs:0x0,ecx
10008f16:	pop    ecx
10008f17:	pop    edi
10008f18:	pop    esi
10008f19:	pop    ebx
10008f1a:	mov    ecx,DWORD PTR [esp+0xb8]
10008f21:	xor    ecx,esp
10008f23:	call   0x100430d7
10008f28:	mov    esp,ebp
10008f2a:	pop    ebp
10008f2b:	ret    0x4
10008f2e:	push   0x0
10008f30:	mov    eax,0x10063873
10008f35:	call   0x10059c75
10008f3a:	mov    edi,DWORD PTR [ebp+0x8]
10008f3d:	xor    ebx,ebx
10008f3f:	mov    DWORD PTR [edi],ebx
10008f41:	mov    DWORD PTR [ebp-0x4],ebx
10008f44:	mov    DWORD PTR [edi+0x4],ebx
10008f47:	mov    DWORD PTR [edi+0x8],ebx
10008f4a:	mov    DWORD PTR [edi+0xc],ebx
10008f4d:	mov    BYTE PTR [ebp-0x4],0x3
10008f51:	lea    esi,[edi+0x20]
10008f54:	mov    DWORD PTR [edi+0x10],ebx
10008f57:	mov    DWORD PTR [edi+0x14],ebx
10008f5a:	mov    DWORD PTR [edi+0x18],ebx
10008f5d:	mov    DWORD PTR [edi+0x1c],ebx
10008f60:	call   0x100079db
10008f65:	mov    DWORD PTR [edi+0x34],ebx
10008f68:	mov    DWORD PTR [edi+0x38],ebx
10008f6b:	mov    eax,edi
10008f6d:	call   0x10059d4d
10008f72:	ret    0x4
10008f75:	push   ebx
10008f76:	push   esi
10008f77:	mov    esi,ecx
10008f79:	push   edi
10008f7a:	mov    edi,DWORD PTR [esi+0x34]
10008f7d:	mov    ebx,eax
10008f7f:	cmp    ebx,edi
10008f81:	je     0x10008f8c
10008f83:	test   edi,edi
10008f85:	je     0x10008f8c
10008f87:	call   0x10009e94
10008f8c:	mov    DWORD PTR [esi+0x34],ebx
10008f8f:	mov    edi,DWORD PTR [esi]
10008f91:	test   edi,edi
10008f93:	je     0x10008fa1
10008f95:	push   DWORD PTR [edi]
10008f97:	mov    eax,ebx
10008f99:	call   0x1000774a
10008f9e:	mov    DWORD PTR [edi+0x20],ebx
10008fa1:	mov    edi,DWORD PTR [esi+0x4]
10008fa4:	test   edi,edi
10008fa6:	je     0x10008fb7
10008fa8:	mov    ebx,DWORD PTR [esi+0x34]
10008fab:	push   DWORD PTR [edi]
10008fad:	mov    eax,ebx
10008faf:	call   0x1000774a
10008fb4:	mov    DWORD PTR [edi+0x20],ebx
10008fb7:	mov    edi,DWORD PTR [esi+0x8]
10008fba:	test   edi,edi
10008fbc:	je     0x10008fcd
10008fbe:	mov    ebx,DWORD PTR [esi+0x34]
10008fc1:	push   DWORD PTR [edi]
10008fc3:	mov    eax,ebx
10008fc5:	call   0x1000774a
10008fca:	mov    DWORD PTR [edi+0x20],ebx
10008fcd:	lea    ebx,[esi+0x20]
10008fd0:	mov    esi,DWORD PTR [esi+0x34]
10008fd3:	test   esi,esi
10008fd5:	mov    DWORD PTR [ebx+0xc],esi
10008fd8:	je     0x10008fdf
10008fda:	call   0x100085f2
10008fdf:	pop    edi
10008fe0:	pop    esi
10008fe1:	pop    ebx
10008fe2:	ret    
10008fe3:	push   0xc
10008fe5:	mov    eax,0x10062363
10008fea:	call   0x10059c75
10008fef:	mov    esi,ecx
10008ff1:	mov    DWORD PTR [ebp-0x14],ebx
10008ff4:	and    DWORD PTR [ebp-0x4],0x0
10008ff8:	mov    eax,DWORD PTR [esi+0x34]
10008ffb:	mov    edi,DWORD PTR [ebx+0x18]
10008ffe:	test   edi,edi
10009000:	mov    ecx,DWORD PTR [eax+0x18]
10009003:	mov    DWORD PTR [ebp-0x10],ecx
10009006:	je     0x10009010
10009008:	push   DWORD PTR [ebx+0x14]
1000900b:	call   0x100076b0
10009010:	mov    eax,DWORD PTR [esi+0xc]
10009013:	test   eax,eax
10009015:	je     0x10009024
10009017:	mov    edi,DWORD PTR [esi+0x34]
1000901a:	mov    ecx,DWORD PTR [ebp-0x10]
1000901d:	mov    esi,eax
1000901f:	call   0x100079c8
10009024:	mov    edi,ebx
10009026:	call   0x10009e94
1000902b:	call   0x10059d4d
10009030:	ret    
10009031:	mov    eax,DWORD PTR [ecx+0x34]
10009034:	test   eax,eax
10009036:	je     0x1000903c
10009038:	mov    eax,DWORD PTR [eax+0x18]
1000903b:	ret    
1000903c:	mov    eax,DWORD PTR [ecx+0x38]
1000903f:	ret    
10009040:	push   0x8
10009042:	mov    eax,0x10063ed5
10009047:	call   0x10059c75
1000904c:	push   0x40
1000904e:	call   0x100436de
10009053:	pop    ecx
10009054:	mov    DWORD PTR [ebp-0x10],eax
10009057:	xor    esi,esi
10009059:	cmp    eax,esi
1000905b:	mov    DWORD PTR [ebp-0x4],esi
1000905e:	je     0x10009068
10009060:	push   eax
10009061:	call   0x10008f2e
10009066:	mov    esi,eax
10009068:	mov    DWORD PTR [ebp-0x10],esi
1000906b:	mov    eax,DWORD PTR [ebp+0x8]
1000906e:	mov    DWORD PTR [ebp-0x4],0x1
10009075:	mov    ecx,DWORD PTR [eax]
10009077:	call   0x10007922
1000907c:	mov    ebx,eax
1000907e:	mov    edi,esi
10009080:	call   0x10009c24
10009085:	mov    eax,DWORD PTR [ebp+0x8]
10009088:	mov    ecx,DWORD PTR [eax+0x4]
1000908b:	call   0x10007922
10009090:	lea    edi,[esi+0x4]
10009093:	mov    ebx,eax
10009095:	call   0x10009c24
1000909a:	mov    eax,DWORD PTR [ebp+0x8]
1000909d:	mov    ecx,DWORD PTR [eax+0x8]
100090a0:	call   0x10007922
100090a5:	lea    edi,[esi+0x8]
100090a8:	mov    ebx,eax
100090aa:	call   0x10009c24
100090af:	mov    edi,DWORD PTR [ebp+0x8]
100090b2:	mov    ecx,DWORD PTR [edi+0xc]
100090b5:	test   ecx,ecx
100090b7:	je     0x100090cb
100090b9:	call   0x10007922
100090be:	lea    edi,[esi+0xc]
100090c1:	mov    ebx,eax
100090c3:	call   0x10009c24
100090c8:	mov    edi,DWORD PTR [ebp+0x8]
100090cb:	lea    eax,[edi+0x20]
100090ce:	push   eax
100090cf:	lea    eax,[esi+0x20]
100090d2:	push   eax
100090d3:	call   0x10007acd
100090d8:	mov    eax,DWORD PTR [edi+0x10]
100090db:	mov    DWORD PTR [esi+0x10],eax
100090de:	mov    eax,DWORD PTR [edi+0x14]
100090e1:	mov    DWORD PTR [esi+0x14],eax
100090e4:	mov    eax,DWORD PTR [edi+0x18]
100090e7:	mov    DWORD PTR [esi+0x18],eax
100090ea:	mov    eax,DWORD PTR [edi+0x1c]
100090ed:	mov    ecx,edi
100090ef:	mov    DWORD PTR [esi+0x1c],eax
100090f2:	call   0x10009031
100090f7:	and    DWORD PTR [ebp-0x10],0x0
100090fb:	or     DWORD PTR [ebp-0x4],0xffffffff
100090ff:	mov    DWORD PTR [esi+0x38],eax
10009102:	lea    eax,[ebp-0x10]
10009105:	call   0x10009e51
1000910a:	mov    eax,esi
1000910c:	call   0x10059d4d
10009111:	ret    0x4
10009114:	push   0x40
10009116:	mov    eax,0x10063078
1000911b:	call   0x10059c75
10009120:	and    DWORD PTR [ebp-0x14],0x0
10009124:	mov    ebx,DWORD PTR [ebp+0x8]
10009127:	mov    eax,DWORD PTR [ebx]
10009129:	lea    ecx,[ebp-0x30]
1000912c:	push   ecx
1000912d:	call   0x1000795e
10009132:	and    DWORD PTR [ebp-0x4],0x0
10009136:	mov    esi,DWORD PTR [edi]
10009138:	push   eax
10009139:	mov    DWORD PTR [ebp-0x14],0x1
10009140:	call   0x10007979
10009145:	test   al,al
10009147:	setne  BYTE PTR [ebp-0xd]
1000914b:	or     DWORD PTR [ebp-0x4],0xffffffff
1000914f:	xor    esi,esi
10009151:	push   0x0
10009153:	inc    esi
10009154:	push   esi
10009155:	lea    ecx,[ebp-0x30]
10009158:	call   0x100012f4
1000915d:	mov    eax,DWORD PTR [ebx+0x4]
10009160:	lea    ecx,[ebp-0x30]
10009163:	push   ecx
10009164:	call   0x1000795e
10009169:	mov    DWORD PTR [ebp-0x4],esi
1000916c:	mov    esi,DWORD PTR [edi+0x4]
1000916f:	push   eax
10009170:	mov    DWORD PTR [ebp-0x14],0x2
10009177:	call   0x10007979
1000917c:	test   al,al
1000917e:	jne    0x10009188
10009180:	cmp    BYTE PTR [ebp-0xd],al
10009183:	mov    BYTE PTR [ebp-0xd],al
10009186:	je     0x1000918c
10009188:	mov    BYTE PTR [ebp-0xd],0x1
1000918c:	or     DWORD PTR [ebp-0x4],0xffffffff
10009190:	push   0x0
10009192:	push   0x1
10009194:	lea    ecx,[ebp-0x30]
10009197:	call   0x100012f4
1000919c:	mov    eax,DWORD PTR [ebx+0x8]
1000919f:	lea    ecx,[ebp-0x30]
100091a2:	push   ecx
100091a3:	call   0x1000795e
100091a8:	mov    DWORD PTR [ebp-0x4],0x2
100091af:	mov    esi,DWORD PTR [edi+0x8]
100091b2:	push   eax
100091b3:	mov    DWORD PTR [ebp-0x14],0x4
100091ba:	call   0x10007979
100091bf:	test   al,al
100091c1:	jne    0x100091cb
100091c3:	cmp    BYTE PTR [ebp-0xd],al
100091c6:	mov    BYTE PTR [ebp-0xd],al
100091c9:	je     0x100091cf
100091cb:	mov    BYTE PTR [ebp-0xd],0x1
100091cf:	or     DWORD PTR [ebp-0x4],0xffffffff
100091d3:	push   0x0
100091d5:	push   0x1
100091d7:	lea    ecx,[ebp-0x30]
100091da:	call   0x100012f4
100091df:	mov    eax,DWORD PTR [ebx+0xc]
100091e2:	test   eax,eax
100091e4:	je     0x1000922c
100091e6:	cmp    DWORD PTR [edi+0xc],0x0
100091ea:	je     0x1000922c
100091ec:	lea    ecx,[ebp-0x4c]
100091ef:	push   ecx
100091f0:	call   0x1000795e
100091f5:	mov    DWORD PTR [ebp-0x4],0x3
100091fc:	mov    esi,DWORD PTR [edi+0xc]
100091ff:	push   eax
10009200:	mov    DWORD PTR [ebp-0x14],0x8
10009207:	call   0x10007979
1000920c:	test   al,al
1000920e:	jne    0x10009218
10009210:	cmp    BYTE PTR [ebp-0xd],al
10009213:	mov    BYTE PTR [ebp-0xd],al
10009216:	je     0x1000921c
10009218:	mov    BYTE PTR [ebp-0xd],0x1
1000921c:	or     DWORD PTR [ebp-0x4],0xffffffff
10009220:	push   0x0
10009222:	push   0x1
10009224:	lea    ecx,[ebp-0x4c]
10009227:	call   0x100012f4
1000922c:	add    ebx,0x20
1000922f:	lea    ecx,[edi+0x20]
10009232:	call   0x10007d12
10009237:	test   al,al
10009239:	jne    0x10009242
1000923b:	xor    bl,bl
1000923d:	cmp    BYTE PTR [ebp-0xd],bl
10009240:	je     0x10009244
10009242:	mov    bl,0x1
10009244:	mov    edx,DWORD PTR [ebp+0x8]
10009247:	mov    eax,DWORD PTR [edx+0x10]
1000924a:	cmp    eax,DWORD PTR [edi+0x10]
1000924d:	mov    esi,DWORD PTR [edx+0x14]
10009250:	jne    0x10009257
10009252:	cmp    esi,DWORD PTR [edi+0x14]
10009255:	je     0x1000925f
10009257:	mov    bl,0x1
10009259:	mov    DWORD PTR [edi+0x10],eax
1000925c:	mov    DWORD PTR [edi+0x14],esi
1000925f:	mov    eax,DWORD PTR [edx+0x18]
10009262:	cmp    eax,DWORD PTR [edi+0x18]
10009265:	mov    esi,DWORD PTR [edx+0x1c]
10009268:	jne    0x1000926f
1000926a:	cmp    esi,DWORD PTR [edi+0x1c]
1000926d:	je     0x10009277
1000926f:	mov    bl,0x1
10009271:	mov    DWORD PTR [edi+0x18],eax
10009274:	mov    DWORD PTR [edi+0x1c],esi
10009277:	cmp    DWORD PTR [edi+0x34],0x0
1000927b:	jne    0x1000929d
1000927d:	mov    ecx,edx
1000927f:	call   0x10009031
10009284:	mov    ecx,edi
10009286:	mov    esi,eax
10009288:	call   0x10009031
1000928d:	cmp    esi,eax
1000928f:	je     0x1000929d
10009291:	mov    ecx,edx
10009293:	mov    bl,0x1
10009295:	call   0x10009031
1000929a:	mov    DWORD PTR [edi+0x38],eax
1000929d:	mov    al,bl
1000929f:	call   0x10059d4d
100092a4:	ret    0x4
100092a7:	push   0x74
100092a9:	mov    eax,0x10060755
100092ae:	call   0x10059c75
100092b3:	mov    eax,DWORD PTR [esi]
100092b5:	lea    ecx,[ebp-0x44]
100092b8:	push   ecx
100092b9:	call   0x1000795e
100092be:	mov    ebx,eax
100092c0:	and    DWORD PTR [ebp-0x4],0x0
100092c4:	mov    eax,DWORD PTR [edi]
100092c6:	lea    ecx,[ebp-0x28]
100092c9:	push   ecx
100092ca:	call   0x1000795e
100092cf:	mov    ecx,ebx
100092d1:	mov    BYTE PTR [ebp-0x4],0x1
100092d5:	call   0x10006591
100092da:	mov    bl,al
100092dc:	neg    bl
100092de:	push   0x0
100092e0:	sbb    bl,bl
100092e2:	push   0x1
100092e4:	lea    ecx,[ebp-0x28]
100092e7:	inc    bl
100092e9:	call   0x100012f4
100092ee:	or     DWORD PTR [ebp-0x4],0xffffffff
100092f2:	push   0x0
100092f4:	push   0x1
100092f6:	lea    ecx,[ebp-0x44]
100092f9:	call   0x100012f4
100092fe:	test   bl,bl
10009300:	je     0x10009309
10009302:	xor    al,al
10009304:	jmp    0x1000940f
10009309:	mov    eax,DWORD PTR [esi+0x4]
1000930c:	lea    ecx,[ebp-0x28]
1000930f:	push   ecx
10009310:	call   0x1000795e
10009315:	mov    ebx,eax
10009317:	lea    ecx,[ebp-0x44]
1000931a:	mov    DWORD PTR [ebp-0x4],0x2
10009321:	mov    eax,DWORD PTR [edi+0x4]
10009324:	push   ecx
10009325:	call   0x1000795e
1000932a:	mov    ecx,ebx
1000932c:	mov    BYTE PTR [ebp-0x4],0x3
10009330:	call   0x10006591
10009335:	mov    bl,al
10009337:	neg    bl
10009339:	push   0x0
1000933b:	sbb    bl,bl
1000933d:	push   0x1
1000933f:	lea    ecx,[ebp-0x44]
10009342:	inc    bl
10009344:	call   0x100012f4
10009349:	or     DWORD PTR [ebp-0x4],0xffffffff
1000934d:	push   0x0
1000934f:	push   0x1
10009351:	lea    ecx,[ebp-0x28]
10009354:	call   0x100012f4
10009359:	test   bl,bl
1000935b:	jne    0x10009302
1000935d:	mov    eax,DWORD PTR [esi+0x8]
10009360:	lea    ecx,[ebp-0x7c]
10009363:	push   ecx
10009364:	call   0x1000795e
10009369:	mov    ebx,eax
1000936b:	lea    ecx,[ebp-0x60]
1000936e:	mov    DWORD PTR [ebp-0x4],0x4
10009375:	mov    eax,DWORD PTR [edi+0x8]
10009378:	push   ecx
10009379:	call   0x1000795e
1000937e:	mov    ecx,ebx
10009380:	mov    BYTE PTR [ebp-0x4],0x5
10009384:	call   0x10006591
10009389:	mov    bl,al
1000938b:	neg    bl
1000938d:	push   0x0
1000938f:	sbb    bl,bl
10009391:	push   0x1
10009393:	lea    ecx,[ebp-0x60]
10009396:	inc    bl
10009398:	call   0x100012f4
1000939d:	or     DWORD PTR [ebp-0x4],0xffffffff
100093a1:	push   0x0
100093a3:	push   0x1
100093a5:	lea    ecx,[ebp-0x7c]
100093a8:	call   0x100012f4
100093ad:	test   bl,bl
100093af:	jne    0x10009302
100093b5:	lea    eax,[esi+0x20]
100093b8:	push   eax
100093b9:	lea    eax,[edi+0x20]
100093bc:	push   eax
100093bd:	call   0x10007c11
100093c2:	test   al,al
100093c4:	je     0x10009302
100093ca:	mov    eax,DWORD PTR [esi+0x10]
100093cd:	cmp    eax,DWORD PTR [edi+0x10]
100093d0:	jne    0x10009302
100093d6:	mov    eax,DWORD PTR [esi+0x14]
100093d9:	cmp    eax,DWORD PTR [edi+0x14]
100093dc:	jne    0x10009302
100093e2:	mov    eax,DWORD PTR [esi+0x18]
100093e5:	cmp    eax,DWORD PTR [edi+0x18]
100093e8:	jne    0x10009302
100093ee:	mov    eax,DWORD PTR [esi+0x1c]
100093f1:	cmp    eax,DWORD PTR [edi+0x1c]
100093f4:	jne    0x10009302
100093fa:	mov    ecx,esi
100093fc:	call   0x10009031
10009401:	mov    ecx,edi
10009403:	mov    edx,eax
10009405:	call   0x10009031
1000940a:	cmp    edx,eax
1000940c:	sete   al
1000940f:	call   0x10059d4d
10009414:	ret    
10009415:	push   0x34
10009417:	mov    eax,0x10063e9e
1000941c:	call   0x10059cde
10009421:	mov    eax,DWORD PTR [ebp+0x8]
10009424:	mov    DWORD PTR [ebp-0x38],eax
10009427:	mov    eax,DWORD PTR [ebp+0xc]
1000942a:	push   0x40
1000942c:	mov    ebx,ecx
1000942e:	mov    DWORD PTR [ebp-0x34],eax
10009431:	call   0x100436de
10009436:	pop    ecx
10009437:	mov    DWORD PTR [ebp-0x30],eax
1000943a:	xor    esi,esi
1000943c:	cmp    eax,esi
1000943e:	mov    DWORD PTR [ebp-0x4],esi
10009441:	je     0x1000944e
10009443:	push   eax
10009444:	call   0x1000867a
10009449:	mov    DWORD PTR [ebp-0x30],eax
1000944c:	jmp    0x10009451
1000944e:	mov    DWORD PTR [ebp-0x30],esi
10009451:	mov    eax,DWORD PTR [ebp-0x30]
10009454:	mov    DWORD PTR [ebp-0x40],eax
10009457:	mov    DWORD PTR [ebp-0x4],0x1
1000945e:	push   esi
1000945f:	lea    ecx,[ebp-0x2c]
10009462:	mov    DWORD PTR [ebp-0x14],0xf
10009469:	call   0x10001420
1000946e:	push   0xffffffff
10009470:	push   esi
10009471:	mov    BYTE PTR [ebp-0x4],0x2
10009475:	mov    edi,DWORD PTR [ebp-0x18]
10009478:	mov    eax,ebx
1000947a:	lea    esi,[ebp-0x2c]
1000947d:	call   0x10004cc2
10009482:	mov    esi,DWORD PTR [ebp-0x18]
10009485:	push   0x24
10009487:	call   0x100436de
1000948c:	pop    ecx
1000948d:	mov    DWORD PTR [ebp-0x3c],eax
10009490:	test   eax,eax
10009492:	mov    BYTE PTR [ebp-0x4],0x3
10009496:	je     0x100094a5
10009498:	sub    esi,edi
1000949a:	push   esi
1000949b:	push   edi
1000949c:	push   ebx
1000949d:	push   eax
1000949e:	call   0x100078d9
100094a3:	jmp    0x100094a7
100094a5:	xor    eax,eax
100094a7:	mov    BYTE PTR [ebp-0x4],0x2
100094ab:	mov    edi,DWORD PTR [ebp-0x30]
100094ae:	mov    ebx,eax
100094b0:	call   0x10009c24
100094b5:	push   0x1006d47c
100094ba:	lea    eax,[ebp-0x2c]
100094bd:	push   eax
100094be:	call   0x10004120
100094c3:	mov    eax,DWORD PTR [ebp-0x38]
100094c6:	mov    edi,DWORD PTR [ebp-0x18]
100094c9:	push   0xffffffff
100094cb:	push   0x0
100094cd:	lea    esi,[ebp-0x2c]
100094d0:	call   0x10004cc2
100094d5:	mov    esi,DWORD PTR [ebp-0x18]
100094d8:	push   0x24
100094da:	call   0x100436de
100094df:	pop    ecx
100094e0:	mov    DWORD PTR [ebp-0x3c],eax
100094e3:	test   eax,eax
100094e5:	mov    BYTE PTR [ebp-0x4],0x4
100094e9:	je     0x100094fa
100094eb:	sub    esi,edi
100094ed:	push   esi
100094ee:	push   edi
100094ef:	push   DWORD PTR [ebp-0x38]
100094f2:	push   eax
100094f3:	call   0x100078d9
100094f8:	jmp    0x100094fc
100094fa:	xor    eax,eax
100094fc:	mov    BYTE PTR [ebp-0x4],0x2
10009500:	mov    edi,DWORD PTR [ebp-0x30]
10009503:	add    edi,0x4
10009506:	mov    ebx,eax
10009508:	call   0x10009c24
1000950d:	push   0x1006d47c
10009512:	lea    eax,[ebp-0x2c]
10009515:	push   eax
10009516:	call   0x10004120
1000951b:	push   0x1006d480
10009520:	push   0x5
10009522:	push   0x1006d4ac
10009527:	call   0x100042e3
1000952c:	add    esp,0xc
1000952f:	push   eax
10009530:	lea    eax,[ebp-0x2c]
10009533:	push   eax
10009534:	call   0x10004120
10009539:	mov    eax,DWORD PTR [ebp-0x34]
1000953c:	mov    edi,DWORD PTR [ebp-0x18]
1000953f:	push   0xffffffff
10009541:	push   0x0
10009543:	lea    esi,[ebp-0x2c]
10009546:	call   0x10004cc2
1000954b:	mov    esi,DWORD PTR [ebp-0x18]
1000954e:	push   0x24
10009550:	mov    DWORD PTR [ebp-0x38],esi
10009553:	call   0x100436de
10009558:	pop    ecx
10009559:	mov    DWORD PTR [ebp-0x3c],eax
1000955c:	test   eax,eax
1000955e:	mov    BYTE PTR [ebp-0x4],0x5
10009562:	je     0x10009573
10009564:	sub    esi,edi
10009566:	push   esi
10009567:	push   edi
10009568:	push   DWORD PTR [ebp-0x34]
1000956b:	push   eax
1000956c:	call   0x100078d9
10009571:	jmp    0x10009575
10009573:	xor    eax,eax
10009575:	mov    BYTE PTR [ebp-0x4],0x2
10009579:	mov    esi,DWORD PTR [ebp-0x30]
1000957c:	lea    edi,[esi+0x8]
1000957f:	mov    ebx,eax
10009581:	call   0x10009c24
10009586:	mov    ebx,0x1006d3a4
1000958b:	push   ebx
1000958c:	lea    eax,[ebp-0x2c]
1000958f:	push   eax
10009590:	call   0x10004120
10009595:	push   DWORD PTR [ebp-0x18]
10009598:	lea    edi,[esi+0x18]
1000959b:	call   0x10007a05
100095a0:	push   ebx
100095a1:	lea    eax,[ebp-0x2c]
100095a4:	push   eax
100095a5:	call   0x10004120
100095aa:	push   0x24
100095ac:	call   0x100436de
100095b1:	pop    ecx
100095b2:	mov    DWORD PTR [ebp-0x3c],eax
100095b5:	test   eax,eax
100095b7:	mov    BYTE PTR [ebp-0x4],0x6
100095bb:	je     0x100095c7
100095bd:	push   eax
100095be:	call   0x10007668
100095c3:	mov    esi,eax
100095c5:	jmp    0x100095c9
100095c7:	xor    esi,esi
100095c9:	mov    DWORD PTR [ebp-0x34],esi
100095cc:	mov    eax,DWORD PTR [ebp-0x38]
100095cf:	mov    BYTE PTR [ebp-0x4],0x7
100095d3:	call   0x1000788d
100095d8:	cmp    DWORD PTR [ebp-0x14],0x10
100095dc:	mov    eax,DWORD PTR [ebp-0x28]
100095df:	jae    0x100095e4
100095e1:	lea    eax,[ebp-0x28]
100095e4:	mov    edi,DWORD PTR [ebp-0x18]
100095e7:	push   eax
100095e8:	mov    eax,esi
100095ea:	call   0x100076b0
100095ef:	mov    ecx,DWORD PTR [ebp-0x30]
100095f2:	and    DWORD PTR [ebp-0x34],0x0
100095f6:	mov    eax,esi
100095f8:	call   0x100086be
100095fd:	push   0x0
100095ff:	push   0x1
10009601:	lea    ecx,[ebp-0x2c]
10009604:	call   0x100012f4
10009609:	mov    eax,DWORD PTR [ebp-0x30]
1000960c:	call   0x10059d61
10009611:	ret    
10009612:	push   0x3c
10009614:	mov    eax,0x10063e2f
10009619:	call   0x10059cde
1000961e:	mov    eax,DWORD PTR [ebp+0x8]
10009621:	mov    DWORD PTR [ebp-0x44],eax
10009624:	mov    eax,DWORD PTR [ebp+0xc]
10009627:	mov    esi,ecx
10009629:	xor    ebx,ebx
1000962b:	push   0x40
1000962d:	mov    DWORD PTR [ebp-0x3c],esi
10009630:	mov    DWORD PTR [ebp-0x38],eax
10009633:	mov    DWORD PTR [ebp-0x34],ebx
10009636:	call   0x100436de
1000963b:	pop    ecx
1000963c:	mov    DWORD PTR [ebp-0x34],eax
1000963f:	cmp    eax,ebx
10009641:	mov    DWORD PTR [ebp-0x4],ebx
10009644:	je     0x10009651
10009646:	push   eax
10009647:	call   0x10008f2e
1000964c:	mov    DWORD PTR [ebp-0x30],eax
1000964f:	jmp    0x10009654
10009651:	mov    DWORD PTR [ebp-0x30],ebx
10009654:	mov    eax,DWORD PTR [ebp-0x30]
10009657:	mov    DWORD PTR [ebp-0x34],eax
1000965a:	mov    DWORD PTR [ebp-0x4],0x1
10009661:	push   ebx
10009662:	lea    ecx,[ebp-0x2c]
10009665:	mov    DWORD PTR [ebp-0x14],0xf
1000966c:	call   0x10001420
10009671:	push   0xffffffff
10009673:	mov    eax,esi
10009675:	mov    BYTE PTR [ebp-0x4],0x2
10009679:	mov    edi,DWORD PTR [ebp-0x18]
1000967c:	push   ebx
1000967d:	lea    esi,[ebp-0x2c]
10009680:	call   0x10004cc2
10009685:	mov    esi,DWORD PTR [ebp-0x18]
10009688:	push   0x24
1000968a:	call   0x100436de
1000968f:	pop    ecx
10009690:	mov    DWORD PTR [ebp-0x40],eax
10009693:	cmp    eax,ebx
10009695:	mov    BYTE PTR [ebp-0x4],0x3
10009699:	je     0x100096aa
1000969b:	sub    esi,edi
1000969d:	push   esi
1000969e:	push   edi
1000969f:	push   DWORD PTR [ebp-0x3c]
100096a2:	push   eax
100096a3:	call   0x100078d9
100096a8:	jmp    0x100096ac
100096aa:	xor    eax,eax
100096ac:	mov    edi,DWORD PTR [ebp-0x30]
100096af:	mov    ebx,eax
100096b1:	mov    BYTE PTR [ebp-0x4],0x2
100096b5:	call   0x10009c24
100096ba:	push   0x1006d47c
100096bf:	lea    eax,[ebp-0x2c]
100096c2:	push   eax
100096c3:	call   0x10004120
100096c8:	mov    eax,DWORD PTR [ebp-0x44]
100096cb:	mov    edi,DWORD PTR [ebp-0x18]
100096ce:	push   0xffffffff
100096d0:	push   0x0
100096d2:	lea    esi,[ebp-0x2c]
100096d5:	call   0x10004cc2
100096da:	mov    esi,DWORD PTR [ebp-0x18]
100096dd:	push   0x24
100096df:	call   0x100436de
100096e4:	pop    ecx
100096e5:	mov    DWORD PTR [ebp-0x40],eax
100096e8:	test   eax,eax
100096ea:	mov    BYTE PTR [ebp-0x4],0x4
100096ee:	je     0x100096ff
100096f0:	sub    esi,edi
100096f2:	push   esi
100096f3:	push   edi
100096f4:	push   DWORD PTR [ebp-0x44]
100096f7:	push   eax
100096f8:	call   0x100078d9
100096fd:	jmp    0x10009701
100096ff:	xor    eax,eax
10009701:	mov    edi,DWORD PTR [ebp-0x30]
10009704:	add    edi,0x4
10009707:	mov    ebx,eax
10009709:	mov    BYTE PTR [ebp-0x4],0x2
1000970d:	call   0x10009c24
10009712:	push   0x1006d47c
10009717:	lea    eax,[ebp-0x2c]
1000971a:	push   eax
1000971b:	call   0x10004120
10009720:	mov    eax,DWORD PTR [ebp-0x38]
10009723:	mov    edi,DWORD PTR [ebp-0x18]
10009726:	push   0xffffffff
10009728:	push   0x0
1000972a:	lea    esi,[ebp-0x2c]
1000972d:	call   0x10004cc2
10009732:	mov    esi,DWORD PTR [ebp-0x18]
10009735:	push   0x24
10009737:	mov    DWORD PTR [ebp-0x3c],esi
1000973a:	call   0x100436de
1000973f:	pop    ecx
10009740:	mov    DWORD PTR [ebp-0x40],eax
10009743:	test   eax,eax
10009745:	mov    BYTE PTR [ebp-0x4],0x5
10009749:	je     0x1000975a
1000974b:	sub    esi,edi
1000974d:	push   esi
1000974e:	push   edi
1000974f:	push   DWORD PTR [ebp-0x38]
10009752:	push   eax
10009753:	call   0x100078d9
10009758:	jmp    0x1000975c
1000975a:	xor    eax,eax
1000975c:	mov    esi,DWORD PTR [ebp-0x30]
1000975f:	lea    edi,[esi+0x8]
10009762:	mov    ebx,eax
10009764:	mov    BYTE PTR [ebp-0x4],0x2
10009768:	call   0x10009c24
1000976d:	mov    ebx,0x1006d3a4
10009772:	push   ebx
10009773:	lea    eax,[ebp-0x2c]
10009776:	push   eax
10009777:	call   0x10004120
1000977c:	push   DWORD PTR [ebp-0x18]
1000977f:	lea    edi,[esi+0x20]
10009782:	call   0x10007a05
10009787:	push   ebx
10009788:	lea    eax,[ebp-0x2c]
1000978b:	push   eax
1000978c:	call   0x10004120
10009791:	push   0x24
10009793:	call   0x100436de
10009798:	pop    ecx
10009799:	mov    DWORD PTR [ebp-0x40],eax
1000979c:	xor    ebx,ebx
1000979e:	cmp    eax,ebx
100097a0:	mov    BYTE PTR [ebp-0x4],0x6
100097a4:	je     0x100097b0
100097a6:	push   eax
100097a7:	call   0x10007668
100097ac:	mov    esi,eax
100097ae:	jmp    0x100097b2
100097b0:	xor    esi,esi
100097b2:	mov    DWORD PTR [ebp-0x38],esi
100097b5:	mov    eax,DWORD PTR [ebp-0x3c]
100097b8:	mov    BYTE PTR [ebp-0x4],0x7
100097bc:	call   0x1000788d
100097c1:	cmp    DWORD PTR [ebp-0x14],0x10
100097c5:	mov    eax,DWORD PTR [ebp-0x28]
100097c8:	jae    0x100097cd
100097ca:	lea    eax,[ebp-0x28]
100097cd:	mov    edi,DWORD PTR [ebp-0x18]
100097d0:	push   eax
100097d1:	mov    eax,esi
100097d3:	call   0x100076b0
100097d8:	mov    ecx,DWORD PTR [ebp-0x30]
100097db:	mov    eax,esi
100097dd:	mov    DWORD PTR [ebp-0x38],ebx
100097e0:	call   0x10008f75
100097e5:	push   ebx
100097e6:	push   0x1
100097e8:	lea    ecx,[ebp-0x2c]
100097eb:	mov    DWORD PTR [ebp-0x34],ebx
100097ee:	call   0x100012f4
100097f3:	or     DWORD PTR [ebp-0x4],0xffffffff
100097f7:	lea    eax,[ebp-0x34]
100097fa:	call   0x10009e51
100097ff:	mov    eax,DWORD PTR [ebp-0x30]
10009802:	call   0x10059d61
10009807:	ret    
10009808:	push   esi
10009809:	mov    esi,DWORD PTR [eax]
1000980b:	test   esi,esi
1000980d:	je     0x10009814
1000980f:	call   0x10009e67
10009814:	pop    esi
10009815:	ret    
10009816:	mov    eax,DWORD PTR [esi+0x4]
10009819:	test   eax,eax
1000981b:	je     0x10009824
1000981d:	push   eax
1000981e:	call   0x100430d2
10009823:	pop    ecx
10009824:	and    DWORD PTR [esi+0x4],0x0
10009828:	and    DWORD PTR [esi+0x8],0x0
1000982c:	and    DWORD PTR [esi+0xc],0x0
10009830:	ret    
10009831:	push   ebp
10009832:	mov    ebp,esp
10009834:	sub    esp,0x18
10009837:	push   esi
10009838:	mov    esi,DWORD PTR [ebp+0x8]
1000983b:	mov    eax,DWORD PTR [esi+0x4]
1000983e:	push   edi
1000983f:	mov    edi,DWORD PTR [eax+0x4]
10009842:	mov    DWORD PTR [ebp-0x4],eax
10009845:	mov    al,0x1
10009847:	mov    BYTE PTR [ebp-0x8],al
1000984a:	jmp    0x10009868
1000984c:	mov    ecx,DWORD PTR [ebp+0xc]
1000984f:	lea    eax,[edi+0xc]
10009852:	mov    DWORD PTR [ebp-0x4],edi
10009855:	call   0x10007639
1000985a:	test   al,al
1000985c:	mov    BYTE PTR [ebp-0x8],al
1000985f:	je     0x10009865
10009861:	mov    edi,DWORD PTR [edi]
10009863:	jmp    0x10009868
10009865:	mov    edi,DWORD PTR [edi+0x8]
10009868:	cmp    BYTE PTR [edi+0x39],0x0
1000986c:	je     0x1000984c
1000986e:	test   al,al
10009870:	mov    edi,DWORD PTR [ebp-0x4]
10009873:	mov    DWORD PTR [ebp-0xc],edi
10009876:	mov    DWORD PTR [ebp-0x10],esi
10009879:	je     0x100098c7
1000987b:	mov    eax,DWORD PTR [esi+0x4]
1000987e:	mov    eax,DWORD PTR [eax]
10009880:	mov    DWORD PTR [ebp-0x18],esi
10009883:	lea    edi,[ebp-0x18]
10009886:	lea    esi,[ebp-0x10]
10009889:	mov    DWORD PTR [ebp-0x14],eax
1000988c:	call   0x10004b10
10009891:	test   al,al
10009893:	je     0x100098b9
10009895:	push   DWORD PTR [ebp+0xc]
10009898:	mov    esi,DWORD PTR [ebp+0x8]
1000989b:	push   0x1
1000989d:	mov    ecx,DWORD PTR [ebp-0x4]
100098a0:	lea    eax,[ebp-0x18]
100098a3:	push   eax
100098a4:	call   0x1000a021
100098a9:	mov    ecx,DWORD PTR [eax]
100098ab:	mov    eax,DWORD PTR [eax+0x4]
100098ae:	mov    DWORD PTR [ebx],ecx
100098b0:	mov    DWORD PTR [ebx+0x4],eax
100098b3:	mov    BYTE PTR [ebx+0x8],0x1
100098b7:	jmp    0x100098ea
100098b9:	lea    esi,[ebp-0x10]
100098bc:	call   0x1000a1e1
100098c1:	mov    edi,DWORD PTR [ebp-0xc]
100098c4:	mov    esi,DWORD PTR [ebp+0x8]
100098c7:	mov    eax,DWORD PTR [ebp+0xc]
100098ca:	lea    ecx,[edi+0xc]
100098cd:	call   0x10007639
100098d2:	test   al,al
100098d4:	je     0x100098de
100098d6:	push   DWORD PTR [ebp+0xc]
100098d9:	push   DWORD PTR [ebp-0x8]
100098dc:	jmp    0x1000989d
100098de:	mov    eax,DWORD PTR [ebp-0x10]
100098e1:	mov    DWORD PTR [ebx],eax
100098e3:	mov    DWORD PTR [ebx+0x4],edi
100098e6:	mov    BYTE PTR [ebx+0x8],0x0
100098ea:	pop    edi
100098eb:	mov    eax,ebx
100098ed:	pop    esi
100098ee:	leave  
100098ef:	ret    0x8
100098f2:	push   0x44
100098f4:	mov    eax,0x10060338
100098f9:	call   0x10059c75
100098fe:	mov    edi,DWORD PTR [ebp+0x14]
10009901:	cmp    BYTE PTR [edi+0x39],0x0
10009905:	je     0x10009939
10009907:	push   0x1006ccec
1000990c:	lea    ecx,[ebp-0x28]
1000990f:	call   0x100011d1
10009914:	and    DWORD PTR [ebp-0x4],0x0
10009918:	lea    eax,[ebp-0x28]
1000991b:	push   eax
1000991c:	lea    ecx,[ebp-0x50]
1000991f:	call   0x1000106e
10009924:	push   0x10074de0
10009929:	lea    eax,[ebp-0x50]
1000992c:	push   eax
1000992d:	mov    DWORD PTR [ebp-0x50],0x1006b978
10009934:	call   0x10047c54
10009939:	lea    esi,[ebp+0x10]
1000993c:	call   0x10009c5c
10009941:	mov    ecx,DWORD PTR [edi]
10009943:	cmp    BYTE PTR [ecx+0x39],0x0
10009947:	je     0x1000994e
10009949:	mov    ebx,DWORD PTR [edi+0x8]
1000994c:	jmp    0x10009965
1000994e:	mov    eax,DWORD PTR [edi+0x8]
10009951:	cmp    BYTE PTR [eax+0x39],0x0
10009955:	je     0x1000995b
10009957:	mov    ebx,ecx
10009959:	jmp    0x10009965
1000995b:	mov    eax,DWORD PTR [ebp+0x14]
1000995e:	cmp    eax,edi
10009960:	mov    ebx,DWORD PTR [eax+0x8]
10009963:	jne    0x100099db
10009965:	cmp    BYTE PTR [ebx+0x39],0x0
10009969:	mov    esi,DWORD PTR [edi+0x4]
1000996c:	jne    0x10009971
1000996e:	mov    DWORD PTR [ebx+0x4],esi
10009971:	mov    ecx,DWORD PTR [ebp+0x8]
10009974:	mov    eax,DWORD PTR [ecx+0x4]
10009977:	cmp    DWORD PTR [eax+0x4],edi
1000997a:	jne    0x10009981
1000997c:	mov    DWORD PTR [eax+0x4],ebx
1000997f:	jmp    0x1000998c
10009981:	cmp    DWORD PTR [esi],edi
10009983:	jne    0x10009989
10009985:	mov    DWORD PTR [esi],ebx
10009987:	jmp    0x1000998c
10009989:	mov    DWORD PTR [esi+0x8],ebx
1000998c:	mov    edx,DWORD PTR [ecx+0x4]
1000998f:	cmp    DWORD PTR [edx],edi
10009991:	jne    0x100099af
10009993:	cmp    BYTE PTR [ebx+0x39],0x0
10009997:	je     0x1000999d
10009999:	mov    ecx,esi
1000999b:	jmp    0x100099ad
1000999d:	mov    eax,DWORD PTR [ebx]
1000999f:	mov    ecx,ebx
100099a1:	jmp    0x100099a7
100099a3:	mov    ecx,eax
100099a5:	mov    eax,DWORD PTR [ecx]
100099a7:	cmp    BYTE PTR [eax+0x39],0x0
100099ab:	je     0x100099a3
100099ad:	mov    DWORD PTR [edx],ecx
100099af:	mov    eax,DWORD PTR [ebp+0x8]
100099b2:	mov    edx,DWORD PTR [eax+0x4]
100099b5:	cmp    DWORD PTR [edx+0x8],edi
100099b8:	jne    0x10009a35
100099ba:	cmp    BYTE PTR [ebx+0x39],0x0
100099be:	je     0x100099c4
100099c0:	mov    ecx,esi
100099c2:	jmp    0x100099d6
100099c4:	mov    eax,DWORD PTR [ebx+0x8]
100099c7:	mov    ecx,ebx
100099c9:	jmp    0x100099d0
100099cb:	mov    ecx,eax
100099cd:	mov    eax,DWORD PTR [ecx+0x8]
100099d0:	cmp    BYTE PTR [eax+0x39],0x0
100099d4:	je     0x100099cb
100099d6:	mov    DWORD PTR [edx+0x8],ecx
100099d9:	jmp    0x10009a35
100099db:	mov    DWORD PTR [ecx+0x4],eax
100099de:	mov    ecx,DWORD PTR [edi]
100099e0:	mov    DWORD PTR [eax],ecx
100099e2:	cmp    eax,DWORD PTR [edi+0x8]
100099e5:	jne    0x100099eb
100099e7:	mov    esi,eax
100099e9:	jmp    0x10009a05
100099eb:	cmp    BYTE PTR [ebx+0x39],0x0
100099ef:	mov    esi,DWORD PTR [eax+0x4]
100099f2:	jne    0x100099f7
100099f4:	mov    DWORD PTR [ebx+0x4],esi
100099f7:	mov    DWORD PTR [esi],ebx
100099f9:	mov    ecx,DWORD PTR [edi+0x8]
100099fc:	mov    DWORD PTR [eax+0x8],ecx
100099ff:	mov    ecx,DWORD PTR [edi+0x8]
10009a02:	mov    DWORD PTR [ecx+0x4],eax
10009a05:	mov    ecx,DWORD PTR [ebp+0x8]
10009a08:	mov    ecx,DWORD PTR [ecx+0x4]
10009a0b:	cmp    DWORD PTR [ecx+0x4],edi
10009a0e:	jne    0x10009a15
10009a10:	mov    DWORD PTR [ecx+0x4],eax
10009a13:	jmp    0x10009a23
10009a15:	mov    ecx,DWORD PTR [edi+0x4]
10009a18:	cmp    DWORD PTR [ecx],edi
10009a1a:	jne    0x10009a20
10009a1c:	mov    DWORD PTR [ecx],eax
10009a1e:	jmp    0x10009a23
10009a20:	mov    DWORD PTR [ecx+0x8],eax
10009a23:	mov    ecx,DWORD PTR [edi+0x4]
10009a26:	mov    DWORD PTR [eax+0x4],ecx
10009a29:	mov    dl,BYTE PTR [edi+0x38]
10009a2c:	mov    cl,BYTE PTR [eax+0x38]
10009a2f:	mov    BYTE PTR [eax+0x38],dl
10009a32:	mov    BYTE PTR [edi+0x38],cl
10009a35:	cmp    BYTE PTR [edi+0x38],0x1
10009a39:	jne    0x10009b51
10009a3f:	jmp    0x10009b05
10009a44:	cmp    BYTE PTR [ebx+0x38],0x1
10009a48:	jne    0x10009b4d
10009a4e:	mov    ecx,DWORD PTR [esi]
10009a50:	cmp    ebx,ecx
10009a52:	jne    0x10009acb
10009a54:	mov    ecx,DWORD PTR [esi+0x8]
10009a57:	cmp    BYTE PTR [ecx+0x38],0x0
10009a5b:	jne    0x10009a72
10009a5d:	push   DWORD PTR [ebp+0x8]
10009a60:	mov    BYTE PTR [ecx+0x38],0x1
10009a64:	mov    ecx,esi
10009a66:	mov    BYTE PTR [esi+0x38],0x0
10009a6a:	call   0x1000a16c
10009a6f:	mov    ecx,DWORD PTR [esi+0x8]
10009a72:	cmp    BYTE PTR [ecx+0x39],0x0
10009a76:	jne    0x10009b00
10009a7c:	mov    eax,DWORD PTR [ecx]
10009a7e:	cmp    BYTE PTR [eax+0x38],0x1
10009a82:	jne    0x10009a8d
10009a84:	mov    eax,DWORD PTR [ecx+0x8]
10009a87:	cmp    BYTE PTR [eax+0x38],0x1
10009a8b:	je     0x10009afc
10009a8d:	mov    eax,DWORD PTR [ecx+0x8]
10009a90:	cmp    BYTE PTR [eax+0x38],0x1
10009a94:	jne    0x10009aab
10009a96:	mov    eax,DWORD PTR [ecx]
10009a98:	push   DWORD PTR [ebp+0x8]
10009a9b:	mov    BYTE PTR [eax+0x38],0x1
10009a9f:	mov    BYTE PTR [ecx+0x38],0x0
10009aa3:	call   0x1000d38e
10009aa8:	mov    ecx,DWORD PTR [esi+0x8]
10009aab:	mov    al,BYTE PTR [esi+0x38]
10009aae:	push   DWORD PTR [ebp+0x8]
10009ab1:	mov    BYTE PTR [ecx+0x38],al
10009ab4:	mov    BYTE PTR [esi+0x38],0x1
10009ab8:	mov    eax,DWORD PTR [ecx+0x8]
10009abb:	mov    ecx,esi
10009abd:	mov    BYTE PTR [eax+0x38],0x1
10009ac1:	call   0x1000a16c
10009ac6:	jmp    0x10009b4d
10009acb:	cmp    BYTE PTR [ecx+0x38],0x0
10009acf:	jne    0x10009ae5
10009ad1:	push   DWORD PTR [ebp+0x8]
10009ad4:	mov    BYTE PTR [ecx+0x38],0x1
10009ad8:	mov    ecx,esi
10009ada:	mov    BYTE PTR [esi+0x38],0x0
10009ade:	call   0x1000d38e
10009ae3:	mov    ecx,DWORD PTR [esi]
10009ae5:	cmp    BYTE PTR [ecx+0x39],0x0
10009ae9:	jne    0x10009b00
10009aeb:	mov    eax,DWORD PTR [ecx+0x8]
10009aee:	cmp    BYTE PTR [eax+0x38],0x1
10009af2:	jne    0x10009b16
10009af4:	mov    eax,DWORD PTR [ecx]
10009af6:	cmp    BYTE PTR [eax+0x38],0x1
10009afa:	jne    0x10009b16
10009afc:	mov    BYTE PTR [ecx+0x38],0x0
10009b00:	mov    ebx,esi
10009b02:	mov    esi,DWORD PTR [esi+0x4]
10009b05:	mov    eax,DWORD PTR [ebp+0x8]
10009b08:	mov    eax,DWORD PTR [eax+0x4]
10009b0b:	cmp    ebx,DWORD PTR [eax+0x4]
10009b0e:	jne    0x10009a44
10009b14:	jmp    0x10009b4d
10009b16:	mov    eax,DWORD PTR [ecx]
10009b18:	cmp    BYTE PTR [eax+0x38],0x1
10009b1c:	jne    0x10009b33
10009b1e:	mov    eax,DWORD PTR [ecx+0x8]
10009b21:	push   DWORD PTR [ebp+0x8]
10009b24:	mov    BYTE PTR [eax+0x38],0x1
10009b28:	mov    BYTE PTR [ecx+0x38],0x0
10009b2c:	call   0x1000a16c
10009b31:	mov    ecx,DWORD PTR [esi]
10009b33:	mov    al,BYTE PTR [esi+0x38]
10009b36:	push   DWORD PTR [ebp+0x8]
10009b39:	mov    BYTE PTR [ecx+0x38],al
10009b3c:	mov    BYTE PTR [esi+0x38],0x1
10009b40:	mov    eax,DWORD PTR [ecx]
10009b42:	mov    ecx,esi
10009b44:	mov    BYTE PTR [eax+0x38],0x1
10009b48:	call   0x1000d38e
10009b4d:	mov    BYTE PTR [ebx+0x38],0x1
10009b51:	lea    ebx,[edi+0xc]
10009b54:	lea    esi,[ebx+0x1c]
10009b57:	call   0x1000a2fa
10009b5c:	push   0x0
10009b5e:	push   0x1
10009b60:	mov    ecx,ebx
10009b62:	call   0x100012f4
10009b67:	push   edi
10009b68:	call   0x100430d2
10009b6d:	pop    ecx
10009b6e:	mov    ecx,DWORD PTR [ebp+0x8]
10009b71:	mov    eax,DWORD PTR [ecx+0x8]
10009b74:	test   eax,eax
10009b76:	jbe    0x10009b7c
10009b78:	dec    eax
10009b79:	mov    DWORD PTR [ecx+0x8],eax
10009b7c:	mov    ecx,DWORD PTR [ebp+0x10]
10009b7f:	mov    eax,DWORD PTR [ebp+0xc]
10009b82:	mov    DWORD PTR [eax],ecx
10009b84:	mov    ecx,DWORD PTR [ebp+0x14]
10009b87:	mov    DWORD PTR [eax+0x4],ecx
10009b8a:	call   0x10059d4d
10009b8f:	ret    0x10
10009b92:	push   ebp
10009b93:	mov    ebp,esp
10009b95:	sub    esp,0x10
10009b98:	push   esi
10009b99:	push   edi
10009b9a:	push   DWORD PTR [ebp+0xc]
10009b9d:	mov    eax,ebx
10009b9f:	call   0x1000a59f
10009ba4:	test   ebx,ebx
10009ba6:	mov    DWORD PTR [ebp-0x4],eax
10009ba9:	jne    0x10009bb0
10009bab:	call   0x100435f0
10009bb0:	mov    eax,DWORD PTR [ebx+0x4]
10009bb3:	lea    edi,[ebp-0x10]
10009bb6:	lea    esi,[ebp-0x8]
10009bb9:	mov    DWORD PTR [ebp-0x8],ebx
10009bbc:	mov    DWORD PTR [ebp-0xc],eax
10009bbf:	mov    DWORD PTR [ebp-0x10],ebx
10009bc2:	call   0x10004b10
10009bc7:	test   al,al
10009bc9:	jne    0x10009be1
10009bcb:	mov    eax,DWORD PTR [ebp-0x4]
10009bce:	mov    ecx,DWORD PTR [ebp+0xc]
10009bd1:	add    eax,0xc
10009bd4:	call   0x10007639
10009bd9:	test   al,al
10009bdb:	jne    0x10009be1
10009bdd:	mov    ecx,esi
10009bdf:	jmp    0x10009bed
10009be1:	mov    eax,DWORD PTR [ebx+0x4]
10009be4:	mov    DWORD PTR [ebp-0xc],eax
10009be7:	mov    DWORD PTR [ebp-0x10],ebx
10009bea:	lea    ecx,[ebp-0x10]
10009bed:	mov    edx,DWORD PTR [ecx]
10009bef:	mov    eax,DWORD PTR [ebp+0x8]
10009bf2:	mov    ecx,DWORD PTR [ecx+0x4]
10009bf5:	pop    edi
10009bf6:	mov    DWORD PTR [eax],edx
10009bf8:	mov    DWORD PTR [eax+0x4],ecx
10009bfb:	pop    esi
10009bfc:	leave  
10009bfd:	ret    0x8
10009c00:	push   esi
10009c01:	mov    esi,DWORD PTR [eax]
10009c03:	test   esi,esi
10009c05:	je     0x10009c22
10009c07:	push   0x0
10009c09:	push   0x1
10009c0b:	lea    ecx,[esi+0x4]
10009c0e:	call   0x100012f4
10009c13:	push   DWORD PTR [esi]
10009c15:	call   0x100430d2
10009c1a:	push   esi
10009c1b:	call   0x100430d2
10009c20:	pop    ecx
10009c21:	pop    ecx
10009c22:	pop    esi
10009c23:	ret    
10009c24:	push   esi
10009c25:	mov    esi,DWORD PTR [edi]
10009c27:	cmp    ebx,esi
10009c29:	je     0x10009c4a
10009c2b:	test   esi,esi
10009c2d:	je     0x10009c4a
10009c2f:	push   0x0
10009c31:	push   0x1
10009c33:	lea    ecx,[esi+0x4]
10009c36:	call   0x100012f4
10009c3b:	push   DWORD PTR [esi]
10009c3d:	call   0x100430d2
10009c42:	push   esi
10009c43:	call   0x100430d2
10009c48:	pop    ecx
10009c49:	pop    ecx
10009c4a:	mov    DWORD PTR [edi],ebx
10009c4c:	pop    esi
10009c4d:	ret    
10009c4e:	push   edi
10009c4f:	mov    edi,DWORD PTR [eax]
10009c51:	test   edi,edi
10009c53:	je     0x10009c5a
10009c55:	call   0x10009e94
10009c5a:	pop    edi
10009c5b:	ret    
10009c5c:	push   ebx
10009c5d:	xor    ebx,ebx
10009c5f:	cmp    DWORD PTR [esi],ebx
10009c61:	jne    0x10009c68
10009c63:	call   0x100435f0
10009c68:	mov    eax,DWORD PTR [esi+0x4]
10009c6b:	cmp    BYTE PTR [eax+0x39],bl
10009c6e:	je     0x10009c77
10009c70:	call   0x100435f0
10009c75:	jmp    0x10009ca5
10009c77:	mov    ecx,DWORD PTR [eax+0x8]
10009c7a:	cmp    BYTE PTR [ecx+0x39],bl
10009c7d:	jne    0x10009c9a
10009c7f:	jmp    0x10009c83
10009c81:	mov    ecx,eax
10009c83:	mov    eax,DWORD PTR [ecx]
10009c85:	cmp    BYTE PTR [eax+0x39],bl
10009c88:	je     0x10009c81
10009c8a:	mov    DWORD PTR [esi+0x4],ecx
10009c8d:	jmp    0x10009ca5
10009c8f:	mov    ecx,DWORD PTR [esi+0x4]
10009c92:	cmp    ecx,DWORD PTR [eax+0x8]
10009c95:	jne    0x10009ca2
10009c97:	mov    DWORD PTR [esi+0x4],eax
10009c9a:	mov    eax,DWORD PTR [eax+0x4]
10009c9d:	cmp    BYTE PTR [eax+0x39],bl
10009ca0:	je     0x10009c8f
10009ca2:	mov    DWORD PTR [esi+0x4],eax
10009ca5:	mov    eax,esi
10009ca7:	pop    ebx
10009ca8:	ret    
10009ca9:	push   0x10
10009cab:	mov    eax,0x100613c5
10009cb0:	call   0x10059ca8
10009cb5:	mov    ebx,ecx
10009cb7:	mov    esi,DWORD PTR [ebp+0x8]
10009cba:	mov    eax,ebx
10009cbc:	call   0x1000473c
10009cc1:	xor    ecx,ecx
10009cc3:	cmp    eax,ecx
10009cc5:	mov    DWORD PTR [esi+0x4],ecx
10009cc8:	mov    DWORD PTR [esi+0x8],ecx
10009ccb:	mov    DWORD PTR [esi+0xc],ecx
10009cce:	je     0x10009d20
10009cd0:	mov    edi,esi
10009cd2:	call   0x1000a2b4
10009cd7:	test   al,al
10009cd9:	je     0x10009d20
10009cdb:	and    DWORD PTR [ebp-0x4],0x0
10009cdf:	mov    eax,DWORD PTR [ebx+0x8]
10009ce2:	cmp    DWORD PTR [ebx+0x4],eax
10009ce5:	mov    DWORD PTR [ebp-0x18],eax
10009ce8:	jbe    0x10009cef
10009cea:	call   0x100435f0
10009cef:	mov    eax,DWORD PTR [ebx+0x4]
10009cf2:	cmp    eax,DWORD PTR [ebx+0x8]
10009cf5:	mov    DWORD PTR [ebp-0x1c],eax
10009cf8:	jbe    0x10009cff
10009cfa:	call   0x100435f0
10009cff:	mov    ecx,DWORD PTR [esi+0x4]
10009d02:	xor    eax,eax
10009d04:	lea    edi,[ebp-0x14]
10009d07:	stos   BYTE PTR es:[edi],al
10009d08:	push   DWORD PTR [ebp-0x14]
10009d0b:	push   DWORD PTR [ebp+0x8]
10009d0e:	push   ecx
10009d0f:	push   DWORD PTR [ebp-0x18]
10009d12:	mov    ecx,DWORD PTR [ebp-0x1c]
10009d15:	call   0x1000aa8d
10009d1a:	add    esp,0x10
10009d1d:	mov    DWORD PTR [esi+0x8],eax
10009d20:	mov    eax,esi
10009d22:	call   0x10059d4d
10009d27:	ret    0x4
10009d2a:	mov    esi,DWORD PTR [ebp+0x8]
10009d2d:	call   0x1000a2fa
10009d32:	push   0x0
10009d34:	push   0x0
10009d36:	call   0x10047c54
10009d3b:	int3   
10009d3c:	jmp    0x1000a2fa
10009d41:	mov    eax,esi
10009d43:	call   0x1000473c
10009d48:	cmp    DWORD PTR [esp+0x4],eax
10009d4c:	jb     0x10009d53
10009d4e:	call   0x100435f0
10009d53:	mov    eax,DWORD PTR [esp+0x4]
10009d57:	shl    eax,0x5
10009d5a:	add    eax,DWORD PTR [esi+0x4]
10009d5d:	ret    0x4
10009d60:	push   ebp
10009d61:	mov    ebp,esp
10009d63:	sub    esp,0x10
10009d66:	push   ebx
10009d67:	push   esi
10009d68:	mov    esi,eax
10009d6a:	mov    ebx,DWORD PTR [esi+0x4]
10009d6d:	test   ebx,ebx
10009d6f:	push   edi
10009d70:	jne    0x10009d76
10009d72:	xor    edi,edi
10009d74:	jmp    0x10009d7e
10009d76:	mov    edi,DWORD PTR [esi+0xc]
10009d79:	sub    edi,ebx
10009d7b:	sar    edi,0x5
10009d7e:	call   0x1000473c
10009d83:	cmp    eax,edi
10009d85:	jae    0x10009d99
10009d87:	push   DWORD PTR [ebp+0x8]
10009d8a:	push   0x1
10009d8c:	push   DWORD PTR [esi+0x8]
10009d8f:	call   0x1000a31f
10009d94:	mov    DWORD PTR [esi+0x8],eax
10009d97:	jmp    0x10009db3
10009d99:	mov    edi,DWORD PTR [esi+0x8]
10009d9c:	cmp    ebx,edi
10009d9e:	jbe    0x10009da5
10009da0:	call   0x100435f0
10009da5:	push   edi
10009da6:	push   esi
10009da7:	push   DWORD PTR [ebp+0x8]
10009daa:	lea    eax,[ebp-0xc]
10009dad:	push   eax
10009dae:	call   0x1000a242
10009db3:	pop    edi
10009db4:	pop    esi
10009db5:	pop    ebx
10009db6:	leave  
10009db7:	ret    0x4
10009dba:	push   ebp
10009dbb:	mov    ebp,esp
10009dbd:	push   ecx
10009dbe:	mov    eax,DWORD PTR [esi+0x8]
10009dc1:	push   edi
10009dc2:	mov    edi,DWORD PTR [ebp+0xc]
10009dc5:	add    edi,0x20
10009dc8:	cmp    edi,eax
10009dca:	mov    DWORD PTR [ebp-0x4],eax
10009dcd:	je     0x10009dea
10009dcf:	push   0xffffffff
10009dd1:	push   0x0
10009dd3:	push   edi
10009dd4:	lea    ecx,[edi-0x20]
10009dd7:	call   0x10001245
10009ddc:	mov    eax,DWORD PTR [edi+0x1c]
10009ddf:	mov    DWORD PTR [edi-0x4],eax
10009de2:	add    edi,0x20
10009de5:	cmp    edi,DWORD PTR [ebp-0x4]
10009de8:	jne    0x10009dcf
10009dea:	mov    eax,DWORD PTR [esi+0x8]
10009ded:	push   eax
10009dee:	add    eax,0xffffffe0
10009df1:	call   0x1000a2dd
10009df6:	mov    eax,DWORD PTR [ebp+0x8]
10009df9:	add    DWORD PTR [esi+0x8],0xffffffe0
10009dfd:	mov    DWORD PTR [ebx],eax
10009dff:	mov    eax,DWORD PTR [ebp+0xc]
10009e02:	mov    DWORD PTR [ebx+0x4],eax
10009e05:	mov    eax,ebx
10009e07:	pop    edi
10009e08:	leave  
10009e09:	ret    0x8
10009e0c:	push   ebx
10009e0d:	mov    ebx,DWORD PTR [eax+0x4]
10009e10:	push   esi
10009e11:	mov    esi,DWORD PTR [eax]
10009e13:	test   esi,esi
10009e15:	push   edi
10009e16:	mov    edi,ecx
10009e18:	jne    0x10009e1f
10009e1a:	call   0x100435f0
10009e1f:	shl    edi,0x5
10009e22:	add    edi,ebx
10009e24:	cmp    edi,DWORD PTR [esi+0x8]
10009e27:	ja     0x10009e2e
10009e29:	cmp    edi,DWORD PTR [esi+0x4]
10009e2c:	jae    0x10009e33
10009e2e:	call   0x100435f0
10009e33:	mov    eax,DWORD PTR [esp+0x10]
10009e37:	mov    DWORD PTR [eax+0x4],edi
10009e3a:	pop    edi
10009e3b:	mov    DWORD PTR [eax],esi
10009e3d:	pop    esi
10009e3e:	pop    ebx
10009e3f:	ret    0x4
10009e42:	push   ecx
10009e43:	mov    eax,DWORD PTR [eax]
10009e45:	test   eax,eax
10009e47:	je     0x10009e4f
10009e49:	push   eax
10009e4a:	call   0x10009ece
10009e4f:	pop    ecx
10009e50:	ret    
10009e51:	push   esi
10009e52:	mov    esi,DWORD PTR [eax]
10009e54:	test   esi,esi
10009e56:	je     0x10009e65
10009e58:	push   esi
10009e59:	call   0x10009f31
10009e5e:	push   esi
10009e5f:	call   0x100430d2
10009e64:	pop    ecx
10009e65:	pop    esi
10009e66:	ret    
10009e67:	push   0x0
10009e69:	push   0x1
10009e6b:	lea    ecx,[esi+0x38]
10009e6e:	call   0x100012f4
10009e73:	push   0x0
10009e75:	push   0x1
10009e77:	lea    ecx,[esi+0x1c]
10009e7a:	call   0x100012f4
10009e7f:	push   0x0
10009e81:	push   0x1
10009e83:	mov    ecx,esi
10009e85:	call   0x100012f4
10009e8a:	push   esi
10009e8b:	call   0x100430d2
10009e90:	pop    ecx
10009e91:	mov    eax,esi
10009e93:	ret    
10009e94:	push   DWORD PTR [edi+0x14]
10009e97:	call   0x100430d2
10009e9c:	mov    eax,DWORD PTR [edi+0x8]
10009e9f:	test   eax,eax
10009ea1:	pop    ecx
10009ea2:	je     0x10009eab
10009ea4:	push   eax
10009ea5:	call   0x100430d2
10009eaa:	pop    ecx
10009eab:	and    DWORD PTR [edi+0x8],0x0
10009eaf:	and    DWORD PTR [edi+0xc],0x0
10009eb3:	and    DWORD PTR [edi+0x10],0x0
10009eb7:	push   esi
10009eb8:	mov    esi,DWORD PTR [edi]
10009eba:	test   esi,esi
10009ebc:	je     0x10009ec3
10009ebe:	call   0x10009e67
10009ec3:	push   edi
10009ec4:	call   0x100430d2
10009ec9:	pop    ecx
10009eca:	mov    eax,edi
10009ecc:	pop    esi
10009ecd:	ret    
10009ece:	push   0x0
10009ed0:	mov    eax,0x100638c2
10009ed5:	call   0x10059c75
10009eda:	mov    esi,DWORD PTR [ebp+0x8]
10009edd:	mov    DWORD PTR [ebp-0x4],0x4
10009ee4:	mov    eax,DWORD PTR [esi+0x38]
10009ee7:	test   eax,eax
10009ee9:	je     0x10009ef1
10009eeb:	mov    ecx,DWORD PTR [eax]
10009eed:	push   eax
10009eee:	call   DWORD PTR [ecx+0x8]
10009ef1:	mov    edi,DWORD PTR [esi+0x30]
10009ef4:	test   edi,edi
10009ef6:	je     0x10009efd
10009ef8:	call   0x10009e94
10009efd:	lea    ebx,[esi+0x18]
10009f00:	mov    BYTE PTR [ebp-0x4],0x2
10009f04:	call   0x10007a34
10009f09:	lea    eax,[esi+0x8]
10009f0c:	call   0x10009c00
10009f11:	lea    eax,[esi+0x4]
10009f14:	call   0x10009c00
10009f19:	mov    eax,esi
10009f1b:	call   0x10009c00
10009f20:	push   esi
10009f21:	call   0x100430d2
10009f26:	pop    ecx
10009f27:	mov    eax,esi
10009f29:	call   0x10059d4d
10009f2e:	ret    0x4
10009f31:	push   0x0
10009f33:	mov    eax,0x10063873
10009f38:	call   0x10059c75
10009f3d:	mov    esi,DWORD PTR [ebp+0x8]
10009f40:	mov    DWORD PTR [ebp-0x4],0x3
10009f47:	mov    edi,DWORD PTR [esi+0x34]
10009f4a:	test   edi,edi
10009f4c:	je     0x10009f53
10009f4e:	call   0x10009e94
10009f53:	lea    ebx,[esi+0x20]
10009f56:	call   0x10007a34
10009f5b:	lea    eax,[esi+0xc]
10009f5e:	call   0x10009c00
10009f63:	lea    eax,[esi+0x8]
10009f66:	call   0x10009c00
10009f6b:	lea    eax,[esi+0x4]
10009f6e:	call   0x10009c00
10009f73:	mov    eax,esi
10009f75:	call   0x10009c00
10009f7a:	call   0x10059d4d
10009f7f:	ret    0x4
10009f82:	push   ebp
10009f83:	mov    ebp,esp
10009f85:	push   ecx
10009f86:	push   ebx
10009f87:	push   esi
10009f88:	mov    esi,eax
10009f8a:	push   edi
10009f8b:	mov    edi,DWORD PTR [esi+0x4]
10009f8e:	xor    ebx,ebx
10009f90:	cmp    edi,ebx
10009f92:	je     0x10009fc0
10009f94:	mov    eax,DWORD PTR [esi+0x8]
10009f97:	mov    ecx,eax
10009f99:	sub    ecx,edi
10009f9b:	sar    ecx,0x2
10009f9e:	je     0x10009fc0
10009fa0:	cmp    edi,eax
10009fa2:	jbe    0x10009fa9
10009fa4:	call   0x100435f0
10009fa9:	cmp    DWORD PTR [ebp+0x10],ebx
10009fac:	je     0x10009fb3
10009fae:	cmp    DWORD PTR [ebp+0x10],esi
10009fb1:	je     0x10009fb8
10009fb3:	call   0x100435f0
10009fb8:	mov    ebx,DWORD PTR [ebp+0x14]
10009fbb:	sub    ebx,edi
10009fbd:	sar    ebx,0x2
10009fc0:	push   DWORD PTR [ebp+0x14]
10009fc3:	mov    eax,DWORD PTR [ebp+0xc]
10009fc6:	push   DWORD PTR [ebp+0x10]
10009fc9:	mov    ecx,esi
10009fcb:	call   0x1000a34f
10009fd0:	mov    edi,DWORD PTR [esi+0x4]
10009fd3:	cmp    edi,DWORD PTR [esi+0x8]
10009fd6:	jbe    0x10009fdd
10009fd8:	call   0x100435f0
10009fdd:	mov    DWORD PTR [ebp+0x14],edi
10009fe0:	lea    edi,[edi+ebx*4]
10009fe3:	cmp    edi,DWORD PTR [esi+0x8]
10009fe6:	ja     0x10009fed
10009fe8:	cmp    edi,DWORD PTR [esi+0x4]
10009feb:	jae    0x10009ff2
10009fed:	call   0x100435f0
10009ff2:	mov    eax,DWORD PTR [ebp+0x8]
10009ff5:	mov    DWORD PTR [eax+0x4],edi
10009ff8:	pop    edi
10009ff9:	mov    DWORD PTR [eax],esi
10009ffb:	pop    esi
10009ffc:	pop    ebx
10009ffd:	leave  
10009ffe:	ret    0x10
1000a001:	test   edx,edx
1000a003:	mov    ecx,edx
1000a005:	mov    eax,esi
1000a007:	jbe    0x1000a01b
1000a009:	push   edi
1000a00a:	mov    edi,DWORD PTR [esp+0x8]
1000a00e:	mov    edi,DWORD PTR [edi]
1000a010:	mov    DWORD PTR [eax],edi
1000a012:	dec    ecx
1000a013:	add    eax,0x4
1000a016:	test   ecx,ecx
1000a018:	ja     0x1000a00a
1000a01a:	pop    edi
1000a01b:	lea    eax,[esi+edx*4]
1000a01e:	ret    0x4
1000a021:	push   0x48
1000a023:	mov    eax,0x100603a7
1000a028:	call   0x10059c75
1000a02d:	mov    edi,ecx
1000a02f:	cmp    DWORD PTR [esi+0x8],0x5d1745c
1000a036:	jb     0x1000a06a
1000a038:	push   0x1006d04c
1000a03d:	lea    ecx,[ebp-0x2c]
1000a040:	call   0x100011d1
1000a045:	and    DWORD PTR [ebp-0x4],0x0
1000a049:	lea    eax,[ebp-0x2c]
1000a04c:	push   eax
1000a04d:	lea    ecx,[ebp-0x54]
1000a050:	call   0x1000106e
1000a055:	push   0x10074ec0
1000a05a:	lea    eax,[ebp-0x54]
1000a05d:	push   eax
1000a05e:	mov    DWORD PTR [ebp-0x54],0x1006b96c
1000a065:	call   0x10047c54
1000a06a:	push   DWORD PTR [ebp+0x10]
1000a06d:	mov    eax,DWORD PTR [esi+0x4]
1000a070:	push   eax
1000a071:	push   edi
1000a072:	push   eax
1000a073:	call   0x1000a5d1
1000a078:	inc    DWORD PTR [esi+0x8]
1000a07b:	mov    ebx,eax
1000a07d:	mov    eax,DWORD PTR [esi+0x4]
1000a080:	cmp    edi,eax
1000a082:	jne    0x1000a091
1000a084:	mov    DWORD PTR [eax+0x4],ebx
1000a087:	mov    eax,DWORD PTR [esi+0x4]
1000a08a:	mov    DWORD PTR [eax],ebx
1000a08c:	mov    eax,DWORD PTR [esi+0x4]
1000a08f:	jmp    0x1000a0af
1000a091:	cmp    BYTE PTR [ebp+0xc],0x0
1000a095:	je     0x1000a0a4
1000a097:	mov    DWORD PTR [edi],ebx
1000a099:	mov    eax,DWORD PTR [esi+0x4]
1000a09c:	cmp    edi,DWORD PTR [eax]
1000a09e:	jne    0x1000a0b2
1000a0a0:	mov    DWORD PTR [eax],ebx
1000a0a2:	jmp    0x1000a0b2
1000a0a4:	mov    DWORD PTR [edi+0x8],ebx
1000a0a7:	mov    eax,DWORD PTR [esi+0x4]
1000a0aa:	cmp    edi,DWORD PTR [eax+0x8]
1000a0ad:	jne    0x1000a0b2
1000a0af:	mov    DWORD PTR [eax+0x8],ebx
1000a0b2:	mov    edi,ebx
1000a0b4:	lea    eax,[ebx+0x4]
1000a0b7:	jmp    0x1000a146
1000a0bc:	mov    ecx,DWORD PTR [eax]
1000a0be:	mov    edx,DWORD PTR [ecx+0x4]
1000a0c1:	cmp    ecx,DWORD PTR [edx]
1000a0c3:	jne    0x1000a0fa
1000a0c5:	mov    edx,DWORD PTR [edx+0x8]
1000a0c8:	cmp    BYTE PTR [edx+0x38],0x0
1000a0cc:	je     0x1000a102
1000a0ce:	cmp    edi,DWORD PTR [ecx+0x8]
1000a0d1:	jne    0x1000a0db
1000a0d3:	push   esi
1000a0d4:	mov    edi,ecx
1000a0d6:	call   0x1000a16c
1000a0db:	mov    eax,DWORD PTR [edi+0x4]
1000a0de:	mov    BYTE PTR [eax+0x38],0x1
1000a0e2:	mov    eax,DWORD PTR [edi+0x4]
1000a0e5:	mov    eax,DWORD PTR [eax+0x4]
1000a0e8:	mov    BYTE PTR [eax+0x38],0x0
1000a0ec:	mov    eax,DWORD PTR [edi+0x4]
1000a0ef:	mov    ecx,DWORD PTR [eax+0x4]
1000a0f2:	push   esi
1000a0f3:	call   0x1000d38e
1000a0f8:	jmp    0x1000a143
1000a0fa:	mov    edx,DWORD PTR [edx]
1000a0fc:	cmp    BYTE PTR [edx+0x38],0x0
1000a100:	jne    0x1000a11a
1000a102:	mov    BYTE PTR [ecx+0x38],0x1
1000a106:	mov    BYTE PTR [edx+0x38],0x1
1000a10a:	mov    ecx,DWORD PTR [eax]
1000a10c:	mov    ecx,DWORD PTR [ecx+0x4]
1000a10f:	mov    BYTE PTR [ecx+0x38],0x0
1000a113:	mov    eax,DWORD PTR [eax]
1000a115:	mov    edi,DWORD PTR [eax+0x4]
1000a118:	jmp    0x1000a143
1000a11a:	cmp    edi,DWORD PTR [ecx]
1000a11c:	jne    0x1000a126
1000a11e:	push   esi
1000a11f:	mov    edi,ecx
1000a121:	call   0x1000d38e
1000a126:	mov    eax,DWORD PTR [edi+0x4]
1000a129:	mov    BYTE PTR [eax+0x38],0x1
1000a12d:	mov    eax,DWORD PTR [edi+0x4]
1000a130:	mov    eax,DWORD PTR [eax+0x4]
1000a133:	mov    BYTE PTR [eax+0x38],0x0
1000a137:	mov    eax,DWORD PTR [edi+0x4]
1000a13a:	mov    ecx,DWORD PTR [eax+0x4]
1000a13d:	push   esi
1000a13e:	call   0x1000a16c
1000a143:	lea    eax,[edi+0x4]
1000a146:	mov    ecx,DWORD PTR [eax]
1000a148:	cmp    BYTE PTR [ecx+0x38],0x0
1000a14c:	je     0x1000a0bc
1000a152:	mov    eax,DWORD PTR [esi+0x4]
1000a155:	mov    eax,DWORD PTR [eax+0x4]
1000a158:	mov    BYTE PTR [eax+0x38],0x1
1000a15c:	mov    eax,DWORD PTR [ebp+0x8]
1000a15f:	mov    DWORD PTR [eax+0x4],ebx
1000a162:	mov    DWORD PTR [eax],esi
1000a164:	call   0x10059d4d
1000a169:	ret    0xc
1000a16c:	mov    eax,DWORD PTR [ecx+0x8]
1000a16f:	mov    edx,DWORD PTR [eax]
1000a171:	mov    DWORD PTR [ecx+0x8],edx
1000a174:	mov    edx,DWORD PTR [eax]
1000a176:	cmp    BYTE PTR [edx+0x39],0x0
1000a17a:	jne    0x1000a17f
1000a17c:	mov    DWORD PTR [edx+0x4],ecx
1000a17f:	mov    edx,DWORD PTR [ecx+0x4]
1000a182:	mov    DWORD PTR [eax+0x4],edx
1000a185:	mov    edx,DWORD PTR [esp+0x4]
1000a189:	mov    edx,DWORD PTR [edx+0x4]
1000a18c:	cmp    ecx,DWORD PTR [edx+0x4]
1000a18f:	jne    0x1000a196
1000a191:	mov    DWORD PTR [edx+0x4],eax
1000a194:	jmp    0x1000a1a4
1000a196:	mov    edx,DWORD PTR [ecx+0x4]
1000a199:	cmp    ecx,DWORD PTR [edx]
1000a19b:	jne    0x1000a1a1
1000a19d:	mov    DWORD PTR [edx],eax
1000a19f:	jmp    0x1000a1a4
1000a1a1:	mov    DWORD PTR [edx+0x8],eax
1000a1a4:	mov    DWORD PTR [eax],ecx
1000a1a6:	mov    DWORD PTR [ecx+0x4],eax
1000a1a9:	ret    0x4
1000a1ac:	push   ebp
1000a1ad:	mov    ebp,esp
1000a1af:	and    esp,0xfffffff8
1000a1b2:	sub    esp,0xc
1000a1b5:	push   ebx
1000a1b6:	mov    ebx,eax
1000a1b8:	mov    eax,DWORD PTR [ebx+0x4]
1000a1bb:	mov    ecx,DWORD PTR [eax]
1000a1bd:	push   eax
1000a1be:	push   ebx
1000a1bf:	push   ecx
1000a1c0:	push   ebx
1000a1c1:	lea    eax,[esp+0x18]
1000a1c5:	push   eax
1000a1c6:	call   0x1000a4f5
1000a1cb:	push   DWORD PTR [ebx+0x4]
1000a1ce:	call   0x100430d2
1000a1d3:	and    DWORD PTR [ebx+0x4],0x0
1000a1d7:	and    DWORD PTR [ebx+0x8],0x0
1000a1db:	pop    ecx
1000a1dc:	pop    ebx
1000a1dd:	mov    esp,ebp
1000a1df:	pop    ebp
1000a1e0:	ret    
1000a1e1:	push   ebx
1000a1e2:	xor    ebx,ebx
1000a1e4:	cmp    DWORD PTR [esi],ebx
1000a1e6:	jne    0x1000a1ed
1000a1e8:	call   0x100435f0
1000a1ed:	mov    eax,DWORD PTR [esi+0x4]
1000a1f0:	cmp    BYTE PTR [eax+0x39],bl
1000a1f3:	je     0x1000a202
1000a1f5:	mov    eax,DWORD PTR [eax+0x8]
1000a1f8:	mov    DWORD PTR [esi+0x4],eax
1000a1fb:	cmp    BYTE PTR [eax+0x39],bl
1000a1fe:	je     0x1000a23e
1000a200:	jmp    0x1000a234
1000a202:	mov    ecx,DWORD PTR [eax]
1000a204:	cmp    BYTE PTR [ecx+0x39],bl
1000a207:	jne    0x1000a224
1000a209:	jmp    0x1000a20d
1000a20b:	mov    ecx,eax
1000a20d:	mov    eax,DWORD PTR [ecx+0x8]
1000a210:	cmp    BYTE PTR [eax+0x39],bl
1000a213:	je     0x1000a20b
1000a215:	mov    DWORD PTR [esi+0x4],ecx
1000a218:	jmp    0x1000a23e
1000a21a:	mov    ecx,DWORD PTR [esi+0x4]
1000a21d:	cmp    ecx,DWORD PTR [eax]
1000a21f:	jne    0x1000a22c
1000a221:	mov    DWORD PTR [esi+0x4],eax
1000a224:	mov    eax,DWORD PTR [eax+0x4]
1000a227:	cmp    BYTE PTR [eax+0x39],bl
1000a22a:	je     0x1000a21a
1000a22c:	mov    ecx,DWORD PTR [esi+0x4]
1000a22f:	cmp    BYTE PTR [ecx+0x39],bl
1000a232:	je     0x1000a23b
1000a234:	call   0x100435f0
1000a239:	jmp    0x1000a23e
1000a23b:	mov    DWORD PTR [esi+0x4],eax
1000a23e:	mov    eax,esi
1000a240:	pop    ebx
1000a241:	ret    
1000a242:	push   ebp
1000a243:	mov    ebp,esp
1000a245:	push   ebx
1000a246:	push   edi
1000a247:	mov    eax,esi
1000a249:	call   0x1000473c
1000a24e:	test   eax,eax
1000a250:	jne    0x1000a256
1000a252:	xor    ebx,ebx
1000a254:	jmp    0x1000a27b
1000a256:	mov    edi,DWORD PTR [esi+0x4]
1000a259:	cmp    edi,DWORD PTR [esi+0x8]
1000a25c:	jbe    0x1000a263
1000a25e:	call   0x100435f0
1000a263:	cmp    DWORD PTR [ebp+0x10],0x0
1000a267:	je     0x1000a26e
1000a269:	cmp    DWORD PTR [ebp+0x10],esi
1000a26c:	je     0x1000a273
1000a26e:	call   0x100435f0
1000a273:	mov    ebx,DWORD PTR [ebp+0x14]
1000a276:	sub    ebx,edi
1000a278:	sar    ebx,0x5
1000a27b:	push   DWORD PTR [ebp+0x14]
1000a27e:	mov    edx,DWORD PTR [ebp+0xc]
1000a281:	push   DWORD PTR [ebp+0x10]
1000a284:	mov    ecx,esi
1000a286:	call   0x1000a623
1000a28b:	mov    edi,DWORD PTR [esi+0x4]
1000a28e:	cmp    edi,DWORD PTR [esi+0x8]
1000a291:	jbe    0x1000a298
1000a293:	call   0x100435f0
1000a298:	push   DWORD PTR [ebp+0x8]
1000a29b:	mov    ecx,ebx
1000a29d:	lea    eax,[ebp+0x10]
1000a2a0:	mov    DWORD PTR [ebp+0x10],esi
1000a2a3:	mov    DWORD PTR [ebp+0x14],edi
1000a2a6:	call   0x10009e0c
1000a2ab:	mov    eax,DWORD PTR [ebp+0x8]
1000a2ae:	pop    edi
1000a2af:	pop    ebx
1000a2b0:	pop    ebp
1000a2b1:	ret    0x10
1000a2b4:	push   esi
1000a2b5:	mov    esi,eax
1000a2b7:	cmp    esi,0x7ffffff
1000a2bd:	jbe    0x1000a2c4
1000a2bf:	jmp    0x100120ac
1000a2c4:	mov    ecx,esi
1000a2c6:	call   0x1000a832
1000a2cb:	shl    esi,0x5
1000a2ce:	add    esi,eax
1000a2d0:	mov    DWORD PTR [edi+0x4],eax
1000a2d3:	mov    DWORD PTR [edi+0x8],eax
1000a2d6:	mov    DWORD PTR [edi+0xc],esi
1000a2d9:	mov    al,0x1
1000a2db:	pop    esi
1000a2dc:	ret    
1000a2dd:	push   esi
1000a2de:	mov    esi,eax
1000a2e0:	jmp    0x1000a2f0
1000a2e2:	push   0x0
1000a2e4:	push   0x1
1000a2e6:	mov    ecx,esi
1000a2e8:	call   0x100012f4
1000a2ed:	add    esi,0x20
1000a2f0:	cmp    esi,DWORD PTR [esp+0x8]
1000a2f4:	jne    0x1000a2e2
1000a2f6:	pop    esi
1000a2f7:	ret    0x4
1000a2fa:	mov    eax,DWORD PTR [esi+0x4]
1000a2fd:	test   eax,eax
1000a2ff:	je     0x1000a312
1000a301:	push   DWORD PTR [esi+0x8]
1000a304:	call   0x1000a2dd
1000a309:	push   DWORD PTR [esi+0x4]
1000a30c:	call   0x100430d2
1000a311:	pop    ecx
1000a312:	and    DWORD PTR [esi+0x4],0x0
1000a316:	and    DWORD PTR [esi+0x8],0x0
1000a31a:	and    DWORD PTR [esi+0xc],0x0
1000a31e:	ret    
1000a31f:	push   ebp
1000a320:	mov    ebp,esp
1000a322:	push   ecx
1000a323:	push   edi
1000a324:	xor    eax,eax
1000a326:	lea    edi,[ebp-0x4]
1000a329:	stos   BYTE PTR es:[edi],al
1000a32a:	push   DWORD PTR [ebp-0x4]
1000a32d:	push   DWORD PTR [ebp+0xc]
1000a330:	push   DWORD PTR [ebp+0x10]
1000a333:	push   DWORD PTR [ebp+0xc]
1000a336:	push   DWORD PTR [ebp+0x8]
1000a339:	call   0x1000aa10
1000a33e:	mov    eax,DWORD PTR [ebp+0xc]
1000a341:	add    esp,0x14
1000a344:	shl    eax,0x5
1000a347:	add    eax,DWORD PTR [ebp+0x8]
1000a34a:	pop    edi
1000a34b:	leave  
1000a34c:	ret    0xc
1000a34f:	push   ebp
1000a350:	mov    ebp,esp
1000a352:	sub    esp,0xc
1000a355:	mov    eax,DWORD PTR [eax]
1000a357:	push   ebx
1000a358:	push   esi
1000a359:	push   edi
1000a35a:	mov    edi,ecx
1000a35c:	mov    ecx,DWORD PTR [edi+0x4]
1000a35f:	test   ecx,ecx
1000a361:	mov    DWORD PTR [ebp-0x8],eax
1000a364:	jne    0x1000a36b
1000a366:	and    DWORD PTR [ebp-0x4],ecx
1000a369:	jmp    0x1000a376
1000a36b:	mov    eax,DWORD PTR [edi+0xc]
1000a36e:	sub    eax,ecx
1000a370:	sar    eax,0x2
1000a373:	mov    DWORD PTR [ebp-0x4],eax
1000a376:	test   ecx,ecx
1000a378:	jne    0x1000a37e
1000a37a:	xor    eax,eax
1000a37c:	jmp    0x1000a386
1000a37e:	mov    eax,DWORD PTR [edi+0x8]
1000a381:	sub    eax,ecx
1000a383:	sar    eax,0x2
1000a386:	mov    edx,0x3fffffff
1000a38b:	mov    esi,edx
1000a38d:	sub    esi,eax
1000a38f:	cmp    esi,0x1
1000a392:	jae    0x1000a399
1000a394:	call   0x100120ac
1000a399:	test   ecx,ecx
1000a39b:	jne    0x1000a3a1
1000a39d:	xor    eax,eax
1000a39f:	jmp    0x1000a3a9
1000a3a1:	mov    eax,DWORD PTR [edi+0x8]
1000a3a4:	sub    eax,ecx
1000a3a6:	sar    eax,0x2
1000a3a9:	inc    eax
1000a3aa:	cmp    DWORD PTR [ebp-0x4],eax
1000a3ad:	jae    0x1000a45a
1000a3b3:	mov    eax,DWORD PTR [ebp-0x4]
1000a3b6:	shr    eax,1
1000a3b8:	sub    edx,eax
1000a3ba:	cmp    edx,DWORD PTR [ebp-0x4]
1000a3bd:	jae    0x1000a3c5
1000a3bf:	and    DWORD PTR [ebp-0x4],0x0
1000a3c3:	jmp    0x1000a3c8
1000a3c5:	add    DWORD PTR [ebp-0x4],eax
1000a3c8:	test   ecx,ecx
1000a3ca:	jne    0x1000a3d0
1000a3cc:	xor    eax,eax
1000a3ce:	jmp    0x1000a3d8
1000a3d0:	mov    eax,DWORD PTR [edi+0x8]
1000a3d3:	sub    eax,ecx
1000a3d5:	sar    eax,0x2
1000a3d8:	inc    eax
1000a3d9:	cmp    DWORD PTR [ebp-0x4],eax
1000a3dc:	jae    0x1000a3f2
1000a3de:	test   ecx,ecx
1000a3e0:	jne    0x1000a3e6
1000a3e2:	xor    eax,eax
1000a3e4:	jmp    0x1000a3ee
1000a3e6:	mov    eax,DWORD PTR [edi+0x8]
1000a3e9:	sub    eax,ecx
1000a3eb:	sar    eax,0x2
1000a3ee:	inc    eax
1000a3ef:	mov    DWORD PTR [ebp-0x4],eax
1000a3f2:	mov    ecx,DWORD PTR [ebp-0x4]
1000a3f5:	call   0x1002624a
1000a3fa:	push   DWORD PTR [edi+0x4]
1000a3fd:	mov    ebx,eax
1000a3ff:	mov    eax,DWORD PTR [ebp+0xc]
1000a402:	mov    ecx,ebx
1000a404:	call   0x1000a9c3
1000a409:	lea    ecx,[ebp-0x8]
1000a40c:	xor    edx,edx
1000a40e:	push   ecx
1000a40f:	inc    edx
1000a410:	mov    esi,eax
1000a412:	call   0x1000a001
1000a417:	push   DWORD PTR [ebp+0xc]
1000a41a:	mov    ecx,eax
1000a41c:	mov    eax,DWORD PTR [edi+0x8]
1000a41f:	call   0x1000a9c3
1000a424:	mov    eax,DWORD PTR [edi+0x4]
1000a427:	test   eax,eax
1000a429:	jne    0x1000a42f
1000a42b:	xor    esi,esi
1000a42d:	jmp    0x1000a437
1000a42f:	mov    esi,DWORD PTR [edi+0x8]
1000a432:	sub    esi,eax
1000a434:	sar    esi,0x2
1000a437:	test   eax,eax
1000a439:	je     0x1000a442
1000a43b:	push   eax
1000a43c:	call   0x100430d2
1000a441:	pop    ecx
1000a442:	mov    eax,DWORD PTR [ebp-0x4]
1000a445:	lea    eax,[ebx+eax*4]
1000a448:	mov    DWORD PTR [edi+0xc],eax
1000a44b:	lea    eax,[ebx+esi*4+0x4]
1000a44f:	mov    DWORD PTR [edi+0x8],eax
1000a452:	mov    DWORD PTR [edi+0x4],ebx
1000a455:	jmp    0x1000a4ee
1000a45a:	mov    esi,DWORD PTR [edi+0x8]
1000a45d:	mov    ebx,DWORD PTR [ebp+0xc]
1000a460:	mov    eax,esi
1000a462:	sub    eax,ebx
1000a464:	sar    eax,0x2
1000a467:	cmp    eax,0x1
1000a46a:	jae    0x1000a4ad
1000a46c:	lea    ecx,[ebx+0x4]
1000a46f:	push   ebx
1000a470:	mov    eax,esi
1000a472:	call   0x1000a9c3
1000a477:	mov    esi,DWORD PTR [edi+0x8]
1000a47a:	lea    eax,[ebp-0x8]
1000a47d:	push   eax
1000a47e:	mov    eax,esi
1000a480:	xor    edx,edx
1000a482:	sub    eax,ebx
1000a484:	sar    eax,0x2
1000a487:	inc    edx
1000a488:	sub    edx,eax
1000a48a:	call   0x1000a001
1000a48f:	add    DWORD PTR [edi+0x8],0x4
1000a493:	mov    edi,DWORD PTR [edi+0x8]
1000a496:	lea    eax,[edi-0x4]
1000a499:	cmp    ebx,eax
1000a49b:	mov    ecx,ebx
1000a49d:	je     0x1000a4ee
1000a49f:	mov    edx,DWORD PTR [ebp-0x8]
1000a4a2:	mov    DWORD PTR [ecx],edx
1000a4a4:	add    ecx,0x4
1000a4a7:	cmp    ecx,eax
1000a4a9:	jne    0x1000a49f
1000a4ab:	jmp    0x1000a4ee
1000a4ad:	lea    eax,[esi-0x4]
1000a4b0:	mov    DWORD PTR [ebp+0xc],eax
1000a4b3:	push   eax
1000a4b4:	mov    ecx,esi
1000a4b6:	mov    eax,esi
1000a4b8:	call   0x1000a9c3
1000a4bd:	mov    DWORD PTR [edi+0x8],eax
1000a4c0:	mov    eax,DWORD PTR [ebp+0xc]
1000a4c3:	sub    eax,ebx
1000a4c5:	sar    eax,0x2
1000a4c8:	test   eax,eax
1000a4ca:	jle    0x1000a4dd
1000a4cc:	shl    eax,0x2
1000a4cf:	push   eax
1000a4d0:	push   ebx
1000a4d1:	push   eax
1000a4d2:	sub    esi,eax
1000a4d4:	push   esi
1000a4d5:	call   0x100430e6
1000a4da:	add    esp,0x10
1000a4dd:	lea    eax,[ebx+0x4]
1000a4e0:	jmp    0x1000a4ea
1000a4e2:	mov    ecx,DWORD PTR [ebp-0x8]
1000a4e5:	mov    DWORD PTR [ebx],ecx
1000a4e7:	add    ebx,0x4
1000a4ea:	cmp    ebx,eax
1000a4ec:	jne    0x1000a4e2
1000a4ee:	pop    edi
1000a4ef:	pop    esi
1000a4f0:	pop    ebx
1000a4f1:	leave  
1000a4f2:	ret    0x8
1000a4f5:	push   ebp
1000a4f6:	mov    ebp,esp
1000a4f8:	sub    esp,0x14
1000a4fb:	mov    eax,DWORD PTR [ebx+0x4]
1000a4fe:	mov    eax,DWORD PTR [eax]
1000a500:	push   esi
1000a501:	push   edi
1000a502:	lea    edi,[ebp-0xc]
1000a505:	lea    esi,[ebp+0xc]
1000a508:	mov    DWORD PTR [ebp-0x8],eax
1000a50b:	mov    DWORD PTR [ebp-0xc],ebx
1000a50e:	call   0x10004b10
1000a513:	test   al,al
1000a515:	je     0x1000a57c
1000a517:	mov    eax,DWORD PTR [ebx+0x4]
1000a51a:	lea    edi,[ebp-0xc]
1000a51d:	lea    esi,[ebp+0x14]
1000a520:	mov    DWORD PTR [ebp-0x8],eax
1000a523:	mov    DWORD PTR [ebp-0xc],ebx
1000a526:	call   0x10004b10
1000a52b:	test   al,al
1000a52d:	je     0x1000a57c
1000a52f:	mov    eax,DWORD PTR [ebx+0x4]
1000a532:	push   DWORD PTR [eax+0x4]
1000a535:	mov    ecx,ebx
1000a537:	call   0x1000a8f3
1000a53c:	mov    eax,DWORD PTR [ebx+0x4]
1000a53f:	mov    DWORD PTR [eax+0x4],eax
1000a542:	mov    eax,DWORD PTR [ebx+0x4]
1000a545:	and    DWORD PTR [ebx+0x8],0x0
1000a549:	mov    DWORD PTR [eax],eax
1000a54b:	mov    eax,DWORD PTR [ebx+0x4]
1000a54e:	mov    DWORD PTR [eax+0x8],eax
1000a551:	mov    eax,DWORD PTR [ebx+0x4]
1000a554:	mov    ecx,DWORD PTR [eax]
1000a556:	mov    eax,DWORD PTR [ebp+0x8]
1000a559:	mov    DWORD PTR [eax],ebx
1000a55b:	jmp    0x1000a596
1000a55d:	mov    eax,DWORD PTR [ebp+0x10]
1000a560:	mov    edi,DWORD PTR [ebp+0xc]
1000a563:	lea    esi,[ebp+0xc]
1000a566:	mov    DWORD PTR [ebp-0x8],eax
1000a569:	call   0x10009c5c
1000a56e:	push   DWORD PTR [ebp-0x8]
1000a571:	lea    eax,[ebp-0x14]
1000a574:	push   edi
1000a575:	push   eax
1000a576:	push   ebx
1000a577:	call   0x100098f2
1000a57c:	lea    edi,[ebp+0x14]
1000a57f:	lea    esi,[ebp+0xc]
1000a582:	call   0x10004b10
1000a587:	test   al,al
1000a589:	je     0x1000a55d
1000a58b:	mov    ecx,DWORD PTR [ebp+0xc]
1000a58e:	mov    eax,DWORD PTR [ebp+0x8]
1000a591:	mov    DWORD PTR [eax],ecx
1000a593:	mov    ecx,DWORD PTR [ebp+0x10]
1000a596:	pop    edi
1000a597:	mov    DWORD PTR [eax+0x4],ecx
1000a59a:	pop    esi
1000a59b:	leave  
1000a59c:	ret    0x14
1000a59f:	mov    eax,DWORD PTR [eax+0x4]
1000a5a2:	push   esi
1000a5a3:	mov    esi,DWORD PTR [eax+0x4]
1000a5a6:	push   edi
1000a5a7:	mov    edi,eax
1000a5a9:	jmp    0x1000a5c4
1000a5ab:	mov    eax,DWORD PTR [esp+0xc]
1000a5af:	lea    ecx,[esi+0xc]
1000a5b2:	call   0x10007639
1000a5b7:	test   al,al
1000a5b9:	je     0x1000a5c0
1000a5bb:	mov    esi,DWORD PTR [esi+0x8]
1000a5be:	jmp    0x1000a5c4
1000a5c0:	mov    edi,esi
1000a5c2:	mov    esi,DWORD PTR [esi]
1000a5c4:	cmp    BYTE PTR [esi+0x39],0x0
1000a5c8:	je     0x1000a5ab
1000a5ca:	mov    eax,edi
1000a5cc:	pop    edi
1000a5cd:	pop    esi
1000a5ce:	ret    0x4
1000a5d1:	push   0xc
1000a5d3:	mov    eax,0x10062340
1000a5d8:	call   0x10059ca8
1000a5dd:	push   0x3c
1000a5df:	call   0x100436de
1000a5e4:	mov    esi,eax
1000a5e6:	pop    ecx
1000a5e7:	mov    DWORD PTR [ebp-0x14],esi
1000a5ea:	test   esi,esi
1000a5ec:	mov    DWORD PTR [ebp-0x4],0x1
1000a5f3:	je     0x1000a606
1000a5f5:	push   DWORD PTR [ebp+0x10]
1000a5f8:	mov    ebx,DWORD PTR [ebp+0x14]
1000a5fb:	push   DWORD PTR [ebp+0xc]
1000a5fe:	push   DWORD PTR [ebp+0x8]
1000a601:	call   0x1000a8a6
1000a606:	mov    eax,esi
1000a608:	call   0x10059d4d
1000a60d:	ret    0x10
1000a610:	push   DWORD PTR [ebp-0x14]
1000a613:	call   0x100430d2
1000a618:	pop    ecx
1000a619:	push   0x0
1000a61b:	push   0x0
1000a61d:	call   0x10047c54
1000a622:	int3   
1000a623:	push   0x34
1000a625:	mov    eax,0x100613a0
1000a62a:	call   0x10059d14
1000a62f:	mov    esi,ecx
1000a631:	mov    edi,edx
1000a633:	push   edi
1000a634:	lea    ecx,[ebp-0x38]
1000a637:	mov    DWORD PTR [ebp-0x3c],esi
1000a63a:	call   0x100011ab
1000a63f:	mov    eax,DWORD PTR [edi+0x1c]
1000a642:	mov    DWORD PTR [ebp-0x1c],eax
1000a645:	xor    edi,edi
1000a647:	mov    DWORD PTR [ebp-0x4],edi
1000a64a:	mov    eax,DWORD PTR [esi+0x4]
1000a64d:	cmp    eax,edi
1000a64f:	je     0x1000a659
1000a651:	mov    edi,DWORD PTR [esi+0xc]
1000a654:	sub    edi,eax
1000a656:	sar    edi,0x5
1000a659:	mov    eax,esi
1000a65b:	call   0x1000473c
1000a660:	mov    ebx,0x7ffffff
1000a665:	mov    ecx,ebx
1000a667:	sub    ecx,eax
1000a669:	cmp    ecx,0x1
1000a66c:	jae    0x1000a673
1000a66e:	call   0x100120ac
1000a673:	mov    eax,esi
1000a675:	call   0x1000473c
1000a67a:	inc    eax
1000a67b:	cmp    edi,eax
1000a67d:	jae    0x1000a73e
1000a683:	mov    eax,edi
1000a685:	shr    eax,1
1000a687:	sub    ebx,eax
1000a689:	cmp    ebx,edi
1000a68b:	jae    0x1000a691
1000a68d:	xor    edi,edi
1000a68f:	jmp    0x1000a693
1000a691:	add    edi,eax
1000a693:	mov    eax,esi
1000a695:	call   0x1000473c
1000a69a:	inc    eax
1000a69b:	cmp    edi,eax
1000a69d:	jae    0x1000a6a9
1000a69f:	mov    eax,esi
1000a6a1:	call   0x1000473c
1000a6a6:	mov    edi,eax
1000a6a8:	inc    edi
1000a6a9:	mov    ecx,edi
1000a6ab:	call   0x1000a832
1000a6b0:	push   eax
1000a6b1:	push   DWORD PTR [ebp+0xc]
1000a6b4:	mov    BYTE PTR [ebp-0x4],0x1
1000a6b8:	mov    ecx,DWORD PTR [esi+0x4]
1000a6bb:	mov    DWORD PTR [ebp-0x3c],eax
1000a6be:	mov    DWORD PTR [ebp-0x40],eax
1000a6c1:	call   0x1000a9ec
1000a6c6:	lea    ecx,[ebp-0x38]
1000a6c9:	push   ecx
1000a6ca:	push   0x1
1000a6cc:	push   eax
1000a6cd:	mov    DWORD PTR [ebp-0x40],eax
1000a6d0:	call   0x1000a31f
1000a6d5:	mov    ecx,DWORD PTR [ebp+0xc]
1000a6d8:	push   eax
1000a6d9:	push   DWORD PTR [esi+0x8]
1000a6dc:	mov    DWORD PTR [ebp-0x40],eax
1000a6df:	call   0x1000a9ec
1000a6e4:	mov    eax,esi
1000a6e6:	call   0x1000473c
1000a6eb:	mov    ebx,eax
1000a6ed:	mov    eax,DWORD PTR [esi+0x4]
1000a6f0:	inc    ebx
1000a6f1:	test   eax,eax
1000a6f3:	je     0x1000a706
1000a6f5:	push   DWORD PTR [esi+0x8]
1000a6f8:	call   0x1000a2dd
1000a6fd:	push   DWORD PTR [esi+0x4]
1000a700:	call   0x100430d2
1000a705:	pop    ecx
1000a706:	mov    eax,DWORD PTR [ebp-0x3c]
1000a709:	shl    edi,0x5
1000a70c:	add    edi,eax
1000a70e:	shl    ebx,0x5
1000a711:	add    ebx,eax
1000a713:	mov    DWORD PTR [esi+0xc],edi
1000a716:	mov    DWORD PTR [esi+0x8],ebx
1000a719:	mov    DWORD PTR [esi+0x4],eax
1000a71c:	jmp    0x1000a81e
1000a721:	push   DWORD PTR [ebp-0x40]
1000a724:	mov    eax,DWORD PTR [ebp-0x3c]
1000a727:	call   0x1000a2dd
1000a72c:	push   DWORD PTR [ebp-0x3c]
1000a72f:	call   0x100430d2
1000a734:	pop    ecx
1000a735:	push   0x0
1000a737:	push   0x0
1000a739:	call   0x10047c54
1000a73e:	mov    eax,DWORD PTR [esi+0x8]
1000a741:	mov    edi,DWORD PTR [ebp+0xc]
1000a744:	mov    ecx,eax
1000a746:	sub    ecx,edi
1000a748:	sar    ecx,0x5
1000a74b:	cmp    ecx,0x1
1000a74e:	jae    0x1000a7ca
1000a750:	lea    ecx,[edi+0x20]
1000a753:	push   ecx
1000a754:	push   eax
1000a755:	mov    ecx,edi
1000a757:	call   0x1000a9ec
1000a75c:	mov    BYTE PTR [ebp-0x4],0x3
1000a760:	mov    eax,DWORD PTR [esi+0x8]
1000a763:	lea    ecx,[ebp-0x38]
1000a766:	push   ecx
1000a767:	mov    ecx,eax
1000a769:	xor    edx,edx
1000a76b:	sub    ecx,edi
1000a76d:	sar    ecx,0x5
1000a770:	inc    edx
1000a771:	sub    edx,ecx
1000a773:	push   edx
1000a774:	push   eax
1000a775:	call   0x1000a31f
1000a77a:	and    DWORD PTR [ebp-0x4],0x0
1000a77e:	add    DWORD PTR [esi+0x8],0x20
1000a782:	mov    esi,DWORD PTR [esi+0x8]
1000a785:	lea    ebx,[esi-0x20]
1000a788:	cmp    edi,ebx
1000a78a:	mov    esi,edi
1000a78c:	je     0x1000a81e
1000a792:	push   0xffffffff
1000a794:	push   0x0
1000a796:	lea    eax,[ebp-0x38]
1000a799:	push   eax
1000a79a:	mov    ecx,esi
1000a79c:	call   0x10001245
1000a7a1:	mov    eax,DWORD PTR [ebp-0x1c]
1000a7a4:	mov    DWORD PTR [esi+0x1c],eax
1000a7a7:	add    esi,0x20
1000a7aa:	cmp    esi,ebx
1000a7ac:	jne    0x1000a792
1000a7ae:	jmp    0x1000a81e
1000a7b0:	mov    eax,DWORD PTR [ebp-0x3c]
1000a7b3:	mov    eax,DWORD PTR [eax+0x8]
1000a7b6:	add    eax,0x20
1000a7b9:	push   eax
1000a7ba:	mov    eax,DWORD PTR [ebp+0xc]
1000a7bd:	add    eax,0x20
1000a7c0:	call   0x1000a2dd
1000a7c5:	jmp    0x1000a735
1000a7ca:	lea    ebx,[eax-0x20]
1000a7cd:	push   eax
1000a7ce:	push   eax
1000a7cf:	mov    ecx,ebx
1000a7d1:	call   0x1000a9ec
1000a7d6:	mov    DWORD PTR [esi+0x8],eax
1000a7d9:	mov    esi,ebx
1000a7db:	cmp    edi,esi
1000a7dd:	je     0x1000a7f9
1000a7df:	push   0xffffffff
1000a7e1:	sub    esi,0x20
1000a7e4:	push   0x0
1000a7e6:	push   esi
1000a7e7:	lea    ecx,[esi+0x20]
1000a7ea:	call   0x10001245
1000a7ef:	cmp    esi,edi
1000a7f1:	mov    eax,DWORD PTR [esi+0x1c]
1000a7f4:	mov    DWORD PTR [esi+0x3c],eax
1000a7f7:	jne    0x1000a7df
1000a7f9:	lea    ebx,[edi+0x20]
1000a7fc:	cmp    edi,ebx
1000a7fe:	mov    esi,edi
1000a800:	je     0x1000a81e
1000a802:	push   0xffffffff
1000a804:	push   0x0
1000a806:	lea    eax,[ebp-0x38]
1000a809:	push   eax
1000a80a:	mov    ecx,esi
1000a80c:	call   0x10001245
1000a811:	mov    eax,DWORD PTR [ebp-0x1c]
1000a814:	mov    DWORD PTR [esi+0x1c],eax
1000a817:	add    esi,0x20
1000a81a:	cmp    esi,ebx
1000a81c:	jne    0x1000a802
1000a81e:	push   0x0
1000a820:	push   0x1
1000a822:	lea    ecx,[ebp-0x38]
1000a825:	call   0x100012f4
1000a82a:	call   0x10059d70
1000a82f:	ret    0x8
1000a832:	push   ebp
1000a833:	mov    ebp,esp
1000a835:	sub    esp,0x10
1000a838:	test   ecx,ecx
1000a83a:	ja     0x1000a84a
1000a83c:	xor    ecx,ecx
1000a83e:	shl    ecx,0x5
1000a841:	push   ecx
1000a842:	call   0x100436de
1000a847:	pop    ecx
1000a848:	leave  
1000a849:	ret    
1000a84a:	or     eax,0xffffffff
1000a84d:	xor    edx,edx
1000a84f:	div    ecx
1000a851:	cmp    eax,0x20
1000a854:	jae    0x1000a83e
1000a856:	and    DWORD PTR [ebp-0x4],0x0
1000a85a:	lea    eax,[ebp-0x4]
1000a85d:	push   eax
1000a85e:	lea    ecx,[ebp-0x10]
1000a861:	call   0x10043152
1000a866:	push   0x10074e18
1000a86b:	lea    eax,[ebp-0x10]
1000a86e:	push   eax
1000a86f:	mov    DWORD PTR [ebp-0x10],0x100665c8
1000a876:	call   0x10047c54
1000a87b:	int3   
1000a87c:	push   0x3c
1000a87e:	call   0x100436de
1000a883:	xor    edx,edx
1000a885:	cmp    eax,edx
1000a887:	pop    ecx
1000a888:	je     0x1000a88c
1000a88a:	mov    DWORD PTR [eax],edx
1000a88c:	lea    ecx,[eax+0x4]
1000a88f:	cmp    ecx,edx
1000a891:	je     0x1000a895
1000a893:	mov    DWORD PTR [ecx],edx
1000a895:	lea    ecx,[eax+0x8]
1000a898:	cmp    ecx,edx
1000a89a:	je     0x1000a89e
1000a89c:	mov    DWORD PTR [ecx],edx
1000a89e:	mov    BYTE PTR [eax+0x38],0x1
1000a8a2:	mov    BYTE PTR [eax+0x39],dl
1000a8a5:	ret    
1000a8a6:	push   0x0
1000a8a8:	mov    eax,0x10061151
1000a8ad:	call   0x10059c75
1000a8b2:	mov    eax,DWORD PTR [ebp+0x8]
1000a8b5:	mov    DWORD PTR [esi],eax
1000a8b7:	mov    eax,DWORD PTR [ebp+0xc]
1000a8ba:	mov    DWORD PTR [esi+0x4],eax
1000a8bd:	mov    eax,DWORD PTR [ebp+0x10]
1000a8c0:	lea    edi,[esi+0xc]
1000a8c3:	push   ebx
1000a8c4:	mov    ecx,edi
1000a8c6:	mov    DWORD PTR [esi+0x8],eax
1000a8c9:	mov    DWORD PTR [ebp+0x8],edi
1000a8cc:	call   0x100011ab
1000a8d1:	and    DWORD PTR [ebp-0x4],0x0
1000a8d5:	add    edi,0x1c
1000a8d8:	lea    ecx,[ebx+0x1c]
1000a8db:	push   edi
1000a8dc:	call   0x10009ca9
1000a8e1:	mov    BYTE PTR [esi+0x38],0x0
1000a8e5:	mov    BYTE PTR [esi+0x39],0x0
1000a8e9:	mov    eax,esi
1000a8eb:	call   0x10059d4d
1000a8f0:	ret    0xc
1000a8f3:	push   ecx
1000a8f4:	push   ebp
1000a8f5:	mov    ebp,DWORD PTR [esp+0xc]
1000a8f9:	cmp    BYTE PTR [ebp+0x39],0x0
1000a8fd:	push   edi
1000a8fe:	mov    DWORD PTR [esp+0x8],ecx
1000a902:	mov    edi,ebp
1000a904:	jne    0x1000a93d
1000a906:	push   ebx
1000a907:	push   esi
1000a908:	push   DWORD PTR [edi+0x8]
1000a90b:	mov    ecx,DWORD PTR [esp+0x14]
1000a90f:	call   0x1000a8f3
1000a914:	mov    edi,DWORD PTR [edi]
1000a916:	lea    ebx,[ebp+0xc]
1000a919:	lea    esi,[ebx+0x1c]
1000a91c:	call   0x1000a2fa
1000a921:	push   0x0
1000a923:	push   0x1
1000a925:	mov    ecx,ebx
1000a927:	call   0x100012f4
1000a92c:	push   ebp
1000a92d:	call   0x100430d2
1000a932:	cmp    BYTE PTR [edi+0x39],0x0
1000a936:	pop    ecx
1000a937:	mov    ebp,edi
1000a939:	je     0x1000a908
1000a93b:	pop    esi
1000a93c:	pop    ebx
1000a93d:	pop    edi
1000a93e:	pop    ebp
1000a93f:	pop    ecx
1000a940:	ret    0x4
1000a943:	push   0x8
1000a945:	mov    eax,0x10062320
1000a94a:	call   0x10059c75
1000a94f:	and    DWORD PTR [ebp-0x14],0x0
1000a953:	mov    DWORD PTR [ebp-0x10],edi
1000a956:	xor    esi,esi
1000a958:	lea    eax,[ebp+0x8]
1000a95b:	inc    esi
1000a95c:	push   eax
1000a95d:	mov    ecx,edi
1000a95f:	mov    DWORD PTR [ebp-0x4],esi
1000a962:	call   0x100011ab
1000a967:	lea    eax,[edi+0x1c]
1000a96a:	push   eax
1000a96b:	lea    ecx,[ebp+0x24]
1000a96e:	mov    BYTE PTR [ebp-0x4],0x2
1000a972:	call   0x10009ca9
1000a977:	push   0x0
1000a979:	push   esi
1000a97a:	lea    ecx,[ebp+0x8]
1000a97d:	call   0x100012f4
1000a982:	lea    esi,[ebp+0x24]
1000a985:	call   0x1000a2fa
1000a98a:	mov    eax,edi
1000a98c:	call   0x10059d4d
1000a991:	ret    
1000a992:	push   0x0
1000a994:	mov    eax,0x10061151
1000a999:	call   0x10059c75
1000a99e:	mov    esi,DWORD PTR [ebp+0x8]
1000a9a1:	push   edi
1000a9a2:	mov    ecx,esi
1000a9a4:	call   0x100011ab
1000a9a9:	and    DWORD PTR [ebp-0x4],0x0
1000a9ad:	lea    eax,[esi+0x1c]
1000a9b0:	lea    ecx,[edi+0x1c]
1000a9b3:	push   eax
1000a9b4:	call   0x10009ca9
1000a9b9:	mov    eax,esi
1000a9bb:	call   0x10059d4d
1000a9c0:	ret    0x4
1000a9c3:	sub    eax,DWORD PTR [esp+0x4]
1000a9c7:	push   esi
1000a9c8:	sar    eax,0x2
1000a9cb:	lea    eax,[eax*4+0x0]
1000a9d2:	lea    esi,[eax+ecx*1]
1000a9d5:	je     0x1000a9e6
1000a9d7:	push   eax
1000a9d8:	push   DWORD PTR [esp+0xc]
1000a9dc:	push   eax
1000a9dd:	push   ecx
1000a9de:	call   0x100430e6
1000a9e3:	add    esp,0x10
1000a9e6:	mov    eax,esi
1000a9e8:	pop    esi
1000a9e9:	ret    0x4
1000a9ec:	push   ebp
1000a9ed:	mov    ebp,esp
1000a9ef:	push   ecx
1000a9f0:	push   edi
1000a9f1:	xor    eax,eax
1000a9f3:	lea    edi,[ebp-0x4]
1000a9f6:	stos   BYTE PTR es:[edi],al
1000a9f7:	push   DWORD PTR [ebp-0x4]
1000a9fa:	push   DWORD PTR [ebp+0xc]
1000a9fd:	push   DWORD PTR [ebp+0xc]
1000aa00:	push   DWORD PTR [ebp+0x8]
1000aa03:	call   0x1000aa8d
1000aa08:	add    esp,0x10
1000aa0b:	pop    edi
1000aa0c:	leave  
1000aa0d:	ret    0x8
1000aa10:	push   0x8
1000aa12:	mov    eax,0x1006070a
1000aa17:	call   0x10059ca8
1000aa1c:	mov    esi,DWORD PTR [ebp+0x8]
1000aa1f:	and    DWORD PTR [ebp-0x4],0x0
1000aa23:	mov    DWORD PTR [ebp-0x14],esi
1000aa26:	cmp    DWORD PTR [ebp+0xc],0x0
1000aa2a:	jbe    0x1000aa5e
1000aa2c:	mov    edi,DWORD PTR [ebp+0x10]
1000aa2f:	call   0x1000aa64
1000aa34:	dec    DWORD PTR [ebp+0xc]
1000aa37:	add    esi,0x20
1000aa3a:	mov    DWORD PTR [ebp+0x8],esi
1000aa3d:	jmp    0x1000aa26
1000aa3f:	mov    esi,DWORD PTR [ebp-0x14]
1000aa42:	jmp    0x1000aa50
1000aa44:	push   0x1
1000aa46:	mov    ecx,esi
1000aa48:	call   0x100012f4
1000aa4d:	add    esi,0x20
1000aa50:	cmp    esi,DWORD PTR [ebp+0x8]
1000aa53:	push   0x0
1000aa55:	jne    0x1000aa44
1000aa57:	push   0x0
1000aa59:	call   0x10047c54
1000aa5e:	call   0x10059d4d
1000aa63:	ret    
1000aa64:	push   0x0
1000aa66:	mov    eax,0x1005fb84
1000aa6b:	call   0x10059c75
1000aa70:	and    DWORD PTR [esp+0x18],0x0
1000aa75:	test   esi,esi
1000aa77:	je     0x1000aa87
1000aa79:	push   edi
1000aa7a:	mov    ecx,esi
1000aa7c:	call   0x100011ab
1000aa81:	mov    eax,DWORD PTR [edi+0x1c]
1000aa84:	mov    DWORD PTR [esi+0x1c],eax
1000aa87:	call   0x10059d4d
1000aa8c:	ret    
1000aa8d:	push   0x8
1000aa8f:	mov    eax,0x1006137d
1000aa94:	call   0x10059ca8
1000aa99:	mov    esi,DWORD PTR [ebp+0xc]
1000aa9c:	mov    edi,ecx
1000aa9e:	and    DWORD PTR [ebp-0x4],0x0
1000aaa2:	mov    DWORD PTR [ebp-0x14],esi
1000aaa5:	cmp    edi,DWORD PTR [ebp+0x8]
1000aaa8:	je     0x1000aad9
1000aaaa:	call   0x1000aa64
1000aaaf:	add    esi,0x20
1000aab2:	mov    DWORD PTR [ebp+0xc],esi
1000aab5:	add    edi,0x20
1000aab8:	jmp    0x1000aaa5
1000aaba:	mov    esi,DWORD PTR [ebp-0x14]
1000aabd:	jmp    0x1000aacb
1000aabf:	push   0x1
1000aac1:	mov    ecx,esi
1000aac3:	call   0x100012f4
1000aac8:	add    esi,0x20
1000aacb:	cmp    esi,DWORD PTR [ebp+0xc]
1000aace:	push   0x0
1000aad0:	jne    0x1000aabf
1000aad2:	push   0x0
1000aad4:	call   0x10047c54
1000aad9:	mov    eax,esi
1000aadb:	call   0x10059d4d
1000aae0:	ret    
1000aae1:	mov    eax,DWORD PTR [esi]
1000aae3:	test   eax,eax
1000aae5:	je     0x1000aaf1
1000aae7:	push   eax
1000aae8:	call   DWORD PTR ds:0x10066094
1000aaee:	and    DWORD PTR [esi],0x0
1000aaf1:	ret    
1000aaf2:	push   ebp
1000aaf3:	mov    ebp,esp
1000aaf5:	push   ecx
1000aaf6:	push   ecx
1000aaf7:	mov    eax,ds:0x10080fa0
1000aafc:	push   0x0
1000aafe:	mov    DWORD PTR [ebp-0x4],eax
1000ab01:	push   0x0
1000ab03:	lea    eax,[ebp-0x8]
1000ab06:	push   eax
1000ab07:	push   0x2
1000ab09:	mov    DWORD PTR [ebp-0x8],esi
1000ab0c:	call   DWORD PTR ds:0x100660e8
1000ab12:	sub    eax,0x0
1000ab15:	je     0x1000ab2f
1000ab17:	dec    eax
1000ab18:	je     0x1000ab2a
1000ab1a:	sub    eax,0x101
1000ab1f:	je     0x1000ab25
1000ab21:	push   0x3
1000ab23:	jmp    0x1000ab27
1000ab25:	push   0x2
1000ab27:	pop    eax
1000ab28:	jmp    0x1000ab36
1000ab2a:	xor    eax,eax
1000ab2c:	inc    eax
1000ab2d:	jmp    0x1000ab36
1000ab2f:	mov    eax,DWORD PTR [ebp+0x8]
1000ab32:	mov    DWORD PTR [eax],esi
1000ab34:	xor    eax,eax
1000ab36:	leave  
1000ab37:	ret    0x4
1000ab3a:	push   ebp
1000ab3b:	mov    ebp,esp
1000ab3d:	and    esp,0xfffffff8
1000ab40:	push   ecx
1000ab41:	push   edi
1000ab42:	mov    edi,eax
1000ab44:	mov    eax,ds:0x10080c7c
1000ab49:	and    DWORD PTR [edi],0x0
1000ab4c:	cmp    eax,0x2
1000ab4f:	jne    0x1000ab5c
1000ab51:	push   DWORD PTR [ebp+0x8]
1000ab54:	call   0x1000710f
1000ab59:	pop    ecx
1000ab5a:	jmp    0x1000ab6f
1000ab5c:	cmp    eax,0x1
1000ab5f:	jne    0x1000ab6d
1000ab61:	push   edi
1000ab62:	push   DWORD PTR [ebp+0x8]
1000ab65:	call   0x100126a4
1000ab6a:	pop    ecx
1000ab6b:	jmp    0x1000ab59
1000ab6d:	xor    al,al
1000ab6f:	pop    edi
1000ab70:	mov    esp,ebp
1000ab72:	pop    ebp
1000ab73:	ret    
1000ab74:	push   ebp
1000ab75:	mov    ebp,esp
1000ab77:	sub    esp,0x10
1000ab7a:	mov    eax,DWORD PTR [ebp+0xc]
1000ab7d:	and    DWORD PTR [ebp+0xc],0x0
1000ab81:	push   esi
1000ab82:	push   edi
1000ab83:	mov    DWORD PTR [ebp-0x8],eax
1000ab86:	mov    eax,DWORD PTR [ebp+0x8]
1000ab89:	push   0x0
1000ab8b:	mov    esi,ecx
1000ab8d:	mov    DWORD PTR [ebp-0x4],eax
1000ab90:	lea    edi,[esi+0x8]
1000ab93:	push   edi
1000ab94:	lea    eax,[ebp+0xc]
1000ab97:	push   eax
1000ab98:	lea    eax,[ebp+0x8]
1000ab9b:	push   eax
1000ab9c:	push   0x1
1000ab9e:	lea    eax,[ebp-0x8]
1000aba1:	push   eax
1000aba2:	push   DWORD PTR [esi+0x4]
1000aba5:	call   DWORD PTR ds:0x100663e4
1000abab:	cmp    eax,0xffffffff
1000abae:	jne    0x1000abc1
1000abb0:	call   DWORD PTR ds:0x100663f0
1000abb6:	cmp    eax,0x3e5
1000abbb:	je     0x1000abc1
1000abbd:	xor    al,al
1000abbf:	jmp    0x1000ac0e
1000abc1:	mov    eax,DWORD PTR [esi+0x18]
1000abc4:	push   0x1
1000abc6:	mov    DWORD PTR [ebp-0x10],eax
1000abc9:	mov    eax,DWORD PTR [esi+0x1c]
1000abcc:	push   0xffffffff
1000abce:	mov    DWORD PTR [ebp-0xc],eax
1000abd1:	push   0x0
1000abd3:	lea    eax,[ebp-0x10]
1000abd6:	push   eax
1000abd7:	push   0x2
1000abd9:	call   DWORD PTR ds:0x100663ac
1000abdf:	test   eax,eax
1000abe1:	jne    0x1000abbd
1000abe3:	lea    eax,[ebp+0xc]
1000abe6:	push   eax
1000abe7:	push   0x0
1000abe9:	lea    eax,[ebp+0x8]
1000abec:	push   eax
1000abed:	push   edi
1000abee:	push   DWORD PTR [esi+0x4]
1000abf1:	call   DWORD PTR ds:0x100663c0
1000abf7:	test   eax,eax
1000abf9:	je     0x1000abbd
1000abfb:	mov    eax,DWORD PTR [ebp+0x10]
1000abfe:	mov    ecx,DWORD PTR [ebp+0x8]
1000ac01:	mov    DWORD PTR [eax],ecx
1000ac03:	push   DWORD PTR [esi+0x18]
1000ac06:	call   DWORD PTR ds:0x100663b4
1000ac0c:	mov    al,0x1
1000ac0e:	pop    edi
1000ac0f:	pop    esi
1000ac10:	leave  
1000ac11:	ret    0xc
1000ac14:	push   esi
1000ac15:	mov    esi,ecx
1000ac17:	push   DWORD PTR [esi+0x18]
1000ac1a:	mov    DWORD PTR [esi],0x1006d908
1000ac20:	call   DWORD PTR ds:0x100663d4
1000ac26:	test   BYTE PTR [esp+0x8],0x1
1000ac2b:	mov    DWORD PTR [esi],0x100718a4
1000ac31:	je     0x1000ac3a
1000ac33:	push   esi
1000ac34:	call   0x100430d2
1000ac39:	pop    ecx
1000ac3a:	mov    eax,esi
1000ac3c:	pop    esi
1000ac3d:	ret    0x4
1000ac40:	push   ebx
1000ac41:	xor    ebx,ebx
1000ac43:	mov    DWORD PTR [edi],ebx
1000ac45:	mov    DWORD PTR [edi+0x4],ebx
1000ac48:	mov    DWORD PTR [edi+0x8],ebx
1000ac4b:	mov    DWORD PTR [edi+0xc],ebx
1000ac4e:	push   esi
1000ac4f:	mov    DWORD PTR [edi+0x10],ebx
1000ac52:	lea    esi,[edi+0x18]
1000ac55:	mov    DWORD PTR [edi+0x14],ebx
1000ac58:	call   0x100040e9
1000ac5d:	lea    esi,[edi+0x38]
1000ac60:	mov    WORD PTR [edi+0x34],bx
1000ac64:	call   0x100040e9
1000ac69:	mov    BYTE PTR [edi+0x58],bl
1000ac6c:	call   DWORD PTR ds:0x100663bc
1000ac72:	mov    esi,eax
1000ac74:	mov    eax,DWORD PTR [edi+0x4]
1000ac77:	cmp    eax,ebx
1000ac79:	je     0x1000ac82
1000ac7b:	push   eax
1000ac7c:	call   DWORD PTR ds:0x100663d4
1000ac82:	mov    DWORD PTR [edi+0x4],esi
1000ac85:	pop    esi
1000ac86:	mov    eax,edi
1000ac88:	pop    ebx
1000ac89:	ret    
1000ac8a:	push   ebp
1000ac8b:	mov    ebp,esp
1000ac8d:	sub    esp,0x1c
1000ac90:	mov    eax,ds:0x1007e030
1000ac95:	xor    eax,ebp
1000ac97:	mov    DWORD PTR [ebp-0x4],eax
1000ac9a:	push   edi
1000ac9b:	push   0x0
1000ac9d:	push   0x1
1000ac9f:	push   0x2
1000aca1:	call   DWORD PTR ds:0x100663c4
1000aca7:	mov    edi,eax
1000aca9:	mov    eax,DWORD PTR [esi+0x8]
1000acac:	test   eax,eax
1000acae:	je     0x1000acb7
1000acb0:	push   eax
1000acb1:	call   DWORD PTR ds:0x100663b8
1000acb7:	test   edi,edi
1000acb9:	mov    DWORD PTR [esi+0x8],edi
1000acbc:	jne    0x1000acc5
1000acbe:	xor    al,al
1000acc0:	jmp    0x1000adb3
1000acc5:	xor    eax,eax
1000acc7:	cmp    DWORD PTR [esi+0x54],0x0
1000accb:	lea    edi,[ebp-0x12]
1000acce:	stos   DWORD PTR es:[edi],eax
1000accf:	stos   DWORD PTR es:[edi],eax
1000acd0:	stos   DWORD PTR es:[edi],eax
1000acd1:	stos   WORD PTR es:[edi],ax
1000acd3:	mov    WORD PTR [ebp-0x14],0x2
1000acd9:	jne    0x1000ad0c
1000acdb:	cmp    DWORD PTR [esi+0x30],0x10
1000acdf:	jb     0x1000ace6
1000ace1:	mov    eax,DWORD PTR [esi+0x1c]
1000ace4:	jmp    0x1000ace9
1000ace6:	lea    eax,[esi+0x1c]
1000ace9:	push   eax
1000acea:	call   DWORD PTR ds:0x100663b0
1000acf0:	movsx  ecx,WORD PTR [eax+0xa]
1000acf4:	mov    eax,DWORD PTR [eax+0xc]
1000acf7:	push   ecx
1000acf8:	push   DWORD PTR [eax]
1000acfa:	lea    eax,[ebp-0x10]
1000acfd:	push   eax
1000acfe:	call   0x10045420
1000ad03:	movzx  eax,WORD PTR [esi+0x34]
1000ad07:	add    esp,0xc
1000ad0a:	jmp    0x1000ad28
1000ad0c:	cmp    DWORD PTR [esi+0x50],0x10
1000ad10:	jb     0x1000ad17
1000ad12:	mov    eax,DWORD PTR [esi+0x3c]
1000ad15:	jmp    0x1000ad1a
1000ad17:	lea    eax,[esi+0x3c]
1000ad1a:	push   eax
1000ad1b:	call   DWORD PTR ds:0x100663e0
1000ad21:	mov    DWORD PTR [ebp-0x10],eax
1000ad24:	movzx  eax,WORD PTR [esi+0x54]
1000ad28:	push   eax
1000ad29:	call   DWORD PTR ds:0x100663f4
1000ad2f:	mov    WORD PTR [ebp-0x12],ax
1000ad33:	call   DWORD PTR ds:0x100663bc
1000ad39:	mov    edi,eax
1000ad3b:	call   0x1000205f
1000ad40:	mov    eax,DWORD PTR [esi+0x8]
1000ad43:	push   0x10
1000ad45:	push   edi
1000ad46:	push   eax
1000ad47:	call   DWORD PTR ds:0x100663cc
1000ad4d:	test   eax,eax
1000ad4f:	je     0x1000ad65
1000ad51:	test   edi,edi
1000ad53:	je     0x1000acbe
1000ad59:	push   edi
1000ad5a:	call   DWORD PTR ds:0x100663d4
1000ad60:	jmp    0x1000acbe
1000ad65:	mov    eax,DWORD PTR [esi+0x8]
1000ad68:	push   0x10
1000ad6a:	lea    ecx,[ebp-0x14]
1000ad6d:	push   ecx
1000ad6e:	push   eax
1000ad6f:	call   DWORD PTR ds:0x100663dc
1000ad75:	cmp    eax,0xffffffff
1000ad78:	jne    0x1000ada6
1000ad7a:	call   DWORD PTR ds:0x100663f0
1000ad80:	cmp    eax,0x2733
1000ad85:	jne    0x1000ad51
1000ad87:	mov    eax,DWORD PTR [esi+0x4]
1000ad8a:	push   0x1
1000ad8c:	push   0xffffffff
1000ad8e:	mov    DWORD PTR [ebp-0x18],eax
1000ad91:	push   0x0
1000ad93:	lea    eax,[ebp-0x1c]
1000ad96:	push   eax
1000ad97:	push   0x2
1000ad99:	mov    DWORD PTR [ebp-0x1c],edi
1000ad9c:	call   DWORD PTR ds:0x100663ac
1000ada2:	test   eax,eax
1000ada4:	jne    0x1000ad51
1000ada6:	test   edi,edi
1000ada8:	je     0x1000adb1
1000adaa:	push   edi
1000adab:	call   DWORD PTR ds:0x100663d4
1000adb1:	mov    al,0x1
1000adb3:	mov    ecx,DWORD PTR [ebp-0x4]
1000adb6:	xor    ecx,ebp
1000adb8:	pop    edi
1000adb9:	call   0x100430d7
1000adbe:	leave  
1000adbf:	ret    
1000adc0:	mov    eax,DWORD PTR [esi+0x14]
1000adc3:	push   ebx
1000adc4:	xor    ebx,ebx
1000adc6:	cmp    eax,ebx
1000adc8:	je     0x1000add1
1000adca:	push   eax
1000adcb:	call   0x100430d2
1000add0:	pop    ecx
1000add1:	push   ebp
1000add2:	push   edi
1000add3:	mov    DWORD PTR [esi+0x14],ebx
1000add6:	mov    edi,DWORD PTR [esi+0x10]
1000add9:	cmp    edi,ebx
1000addb:	je     0x1000adeb
1000addd:	mov    eax,edi
1000addf:	call   0x1000dcca
1000ade4:	push   edi
1000ade5:	call   0x100430d2
1000adea:	pop    ecx
1000adeb:	push   0x20
1000aded:	mov    DWORD PTR [esi+0x10],ebx
1000adf0:	call   0x100436de
1000adf5:	mov    edi,eax
1000adf7:	cmp    edi,ebx
1000adf9:	pop    ecx
1000adfa:	je     0x1000ae28
1000adfc:	mov    eax,DWORD PTR [esi+0x4]
1000adff:	mov    ecx,DWORD PTR [esi+0x8]
1000ae02:	push   0x14
1000ae04:	mov    DWORD PTR [edi+0x1c],eax
1000ae07:	lea    eax,[edi+0x8]
1000ae0a:	push   ebx
1000ae0b:	push   eax
1000ae0c:	mov    DWORD PTR [edi],0x1006d908
1000ae12:	mov    DWORD PTR [edi+0x4],ecx
1000ae15:	call   0x10045ea0
1000ae1a:	add    esp,0xc
1000ae1d:	call   DWORD PTR ds:0x100663bc
1000ae23:	mov    DWORD PTR [edi+0x18],eax
1000ae26:	jmp    0x1000ae2a
1000ae28:	xor    edi,edi
1000ae2a:	mov    ecx,DWORD PTR [esi+0xc]
1000ae2d:	cmp    edi,ecx
1000ae2f:	je     0x1000ae3b
1000ae31:	cmp    ecx,ebx
1000ae33:	je     0x1000ae3b
1000ae35:	mov    eax,DWORD PTR [ecx]
1000ae37:	push   0x1
1000ae39:	call   DWORD PTR [eax]
1000ae3b:	push   0x1c
1000ae3d:	mov    DWORD PTR [esi+0xc],edi
1000ae40:	call   0x100436de
1000ae45:	cmp    eax,ebx
1000ae47:	pop    ecx
1000ae48:	je     0x1000ae65
1000ae4a:	mov    ecx,DWORD PTR [esi+0xc]
1000ae4d:	mov    DWORD PTR [eax],ebx
1000ae4f:	mov    DWORD PTR [eax+0x4],ebx
1000ae52:	mov    DWORD PTR [eax+0x8],ebx
1000ae55:	mov    DWORD PTR [eax+0xc],ebx
1000ae58:	mov    BYTE PTR [eax+0x10],bl
1000ae5b:	mov    DWORD PTR [eax+0x14],ebx
1000ae5e:	mov    DWORD PTR [eax+0x18],ecx
1000ae61:	mov    edi,eax
1000ae63:	jmp    0x1000ae67
1000ae65:	xor    edi,edi
1000ae67:	mov    ebp,DWORD PTR [esi+0x10]
1000ae6a:	cmp    edi,ebp
1000ae6c:	je     0x1000ae80
1000ae6e:	cmp    ebp,ebx
1000ae70:	je     0x1000ae80
1000ae72:	mov    eax,ebp
1000ae74:	call   0x1000dcca
1000ae79:	push   ebp
1000ae7a:	call   0x100430d2
1000ae7f:	pop    ecx
1000ae80:	push   0x4
1000ae82:	mov    DWORD PTR [esi+0x10],edi
1000ae85:	call   0x100436de
1000ae8a:	cmp    eax,ebx
1000ae8c:	pop    ecx
1000ae8d:	pop    edi
1000ae8e:	pop    ebp
1000ae8f:	je     0x1000ae98
1000ae91:	mov    ecx,DWORD PTR [esi+0x10]
1000ae94:	mov    DWORD PTR [eax],ecx
1000ae96:	mov    ebx,eax
1000ae98:	mov    eax,DWORD PTR [esi+0x14]
1000ae9b:	cmp    ebx,eax
1000ae9d:	je     0x1000aea6
1000ae9f:	push   eax
1000aea0:	call   0x100430d2
1000aea5:	pop    ecx
1000aea6:	mov    DWORD PTR [esi+0x14],ebx
1000aea9:	pop    ebx
1000aeaa:	ret    
1000aeab:	push   0x4
1000aead:	mov    eax,0x10064996
1000aeb2:	call   0x10059c75
1000aeb7:	mov    edi,ecx
1000aeb9:	mov    esi,edx
1000aebb:	push   0xffffffff
1000aebd:	xor    ebx,ebx
1000aebf:	push   ebx
1000aec0:	mov    DWORD PTR [ebp-0x10],ebx
1000aec3:	push   DWORD PTR [ebp+0xc]
1000aec6:	lea    ecx,[esi+0x18]
1000aec9:	call   0x10001245
1000aece:	mov    ax,WORD PTR [ebp+0x10]
1000aed2:	lea    ecx,[esi+0x38]
1000aed5:	mov    WORD PTR [esi+0x34],ax
1000aed9:	lea    eax,[esi+0x54]
1000aedc:	push   ecx
1000aedd:	call   0x1000ab3a
1000aee2:	pop    ecx
1000aee3:	mov    DWORD PTR [ebp+0xc],ebx
1000aee6:	mov    DWORD PTR [ebp-0x4],0x1
1000aeed:	mov    eax,DWORD PTR [ebp+0x1c]
1000aef0:	mov    DWORD PTR [eax],ebx
1000aef2:	push   DWORD PTR [esi+0x4]
1000aef5:	call   DWORD PTR ds:0x100663b4
1000aefb:	cmp    edi,0xffffffff
1000aefe:	je     0x1000af4c
1000af00:	push   0x8
1000af02:	call   0x100436de
1000af07:	cmp    eax,ebx
1000af09:	pop    ecx
1000af0a:	je     0x1000af18
1000af0c:	mov    ecx,DWORD PTR [esi+0x4]
1000af0f:	mov    DWORD PTR [eax+0x4],edi
1000af12:	mov    DWORD PTR [eax],ecx
1000af14:	mov    edi,eax
1000af16:	jmp    0x1000af1a
1000af18:	xor    edi,edi
1000af1a:	push   ebx
1000af1b:	push   ebx
1000af1c:	push   edi
1000af1d:	push   0x1000b007
1000af22:	push   ebx
1000af23:	push   ebx
1000af24:	call   DWORD PTR ds:0x10066098
1000af2a:	push   eax
1000af2b:	call   0x100049bf
1000af30:	cmp    DWORD PTR [esi],ebx
1000af32:	jne    0x1000af45
1000af34:	push   edi
1000af35:	call   0x100430d2
1000af3a:	mov    esi,DWORD PTR [ebp+0x8]
1000af3d:	pop    ecx
1000af3e:	mov    DWORD PTR [esi],ebx
1000af40:	jmp    0x1000aff6
1000af45:	push   ebx
1000af46:	call   0x100430d2
1000af4b:	pop    ecx
1000af4c:	cmp    DWORD PTR [esi+0x8],ebx
1000af4f:	jne    0x1000af64
1000af51:	call   0x1000ac8a
1000af56:	test   al,al
1000af58:	jne    0x1000af64
1000af5a:	mov    esi,DWORD PTR [ebp+0x8]
1000af5d:	mov    DWORD PTR [esi],ebx
1000af5f:	jmp    0x1000aff6
1000af64:	call   0x1000adc0
1000af69:	mov    DWORD PTR [ebp+0x10],ebx
1000af6c:	push   DWORD PTR [ebp+0x18]
1000af6f:	mov    ecx,DWORD PTR [ebp+0x14]
1000af72:	push   esi
1000af73:	lea    edi,[ebp+0x10]
1000af76:	mov    BYTE PTR [ebp-0x4],0x2
1000af7a:	call   0x1000b148
1000af7f:	test   al,al
1000af81:	jne    0x1000af8a
1000af83:	mov    esi,DWORD PTR [ebp+0x8]
1000af86:	mov    DWORD PTR [esi],ebx
1000af88:	jmp    0x1000afdb
1000af8a:	push   DWORD PTR [ebp+0x10]
1000af8d:	mov    ecx,DWORD PTR [ebp+0x1c]
1000af90:	lea    eax,[ebp+0x1c]
1000af93:	push   eax
1000af94:	push   esi
1000af95:	call   0x1000b3f9
1000af9a:	push   eax
1000af9b:	lea    edi,[ebp+0xc]
1000af9e:	call   0x10002082
1000afa3:	push   DWORD PTR [ebp+0x1c]
1000afa6:	call   0x100430d2
1000afab:	cmp    DWORD PTR [esi],ebx
1000afad:	pop    ecx
1000afae:	je     0x1000afc4
1000afb0:	push   DWORD PTR [esi+0x4]
1000afb3:	call   DWORD PTR ds:0x100663d8
1000afb9:	mov    eax,DWORD PTR [esi]
1000afbb:	push   0xffffffff
1000afbd:	push   eax
1000afbe:	call   DWORD PTR ds:0x10066084
1000afc4:	mov    eax,DWORD PTR [esi]
1000afc6:	cmp    eax,ebx
1000afc8:	je     0x1000afd1
1000afca:	push   eax
1000afcb:	call   DWORD PTR ds:0x10066070
1000afd1:	mov    eax,DWORD PTR [ebp+0xc]
1000afd4:	mov    DWORD PTR [esi],ebx
1000afd6:	mov    esi,DWORD PTR [ebp+0x8]
1000afd9:	mov    DWORD PTR [esi],eax
1000afdb:	mov    BYTE PTR [ebp-0x4],0x1
1000afdf:	cmp    DWORD PTR [ebp+0x10],ebx
1000afe2:	mov    DWORD PTR [ebp-0x10],0x1
1000afe9:	mov    DWORD PTR [ebp+0xc],ebx
1000afec:	je     0x1000aff6
1000afee:	push   DWORD PTR [ebp+0x10]
1000aff1:	call   0x10009ece
1000aff6:	push   ebx
1000aff7:	call   0x100430d2
1000affc:	mov    eax,esi
1000affe:	pop    ecx
1000afff:	call   0x10059d4d
1000b004:	ret    0x18
1000b007:	push   ebp
1000b008:	mov    ebp,esp
1000b00a:	push   ecx
1000b00b:	push   ecx
1000b00c:	push   esi
1000b00d:	push   edi
1000b00e:	lea    eax,[ebp+0xb]
1000b011:	push   eax
1000b012:	call   0x10037b40
1000b017:	mov    eax,DWORD PTR [ebp+0x8]
1000b01a:	mov    esi,DWORD PTR [eax]
1000b01c:	mov    edi,DWORD PTR [eax+0x4]
1000b01f:	push   eax
1000b020:	call   0x100430d2
1000b025:	mov    eax,ds:0x10080fa0
1000b02a:	pop    ecx
1000b02b:	push   edi
1000b02c:	mov    DWORD PTR [ebp-0x4],eax
1000b02f:	push   0x0
1000b031:	lea    eax,[ebp-0x8]
1000b034:	push   eax
1000b035:	push   0x2
1000b037:	mov    DWORD PTR [ebp-0x8],esi
1000b03a:	call   DWORD PTR ds:0x100660e8
1000b040:	cmp    eax,0x102
1000b045:	jne    0x1000b04e
1000b047:	push   esi
1000b048:	call   DWORD PTR ds:0x100663d8
1000b04e:	call   0x10037b60
1000b053:	pop    edi
1000b054:	xor    eax,eax
1000b056:	pop    esi
1000b057:	leave  
1000b058:	ret    0x4
1000b05b:	push   ebp
1000b05c:	mov    ebp,esp
1000b05e:	push   ecx
1000b05f:	mov    ecx,DWORD PTR [ebp+0x8]
1000b062:	and    DWORD PTR [ebp-0x4],0x0
1000b066:	add    eax,0x18
1000b069:	push   eax
1000b06a:	call   0x100011ab
1000b06f:	mov    eax,DWORD PTR [ebp+0x8]
1000b072:	leave  
1000b073:	ret    0x4
1000b076:	push   ebp
1000b077:	mov    ebp,esp
1000b079:	sub    esp,0x2c
1000b07c:	push   ebx
1000b07d:	push   esi
1000b07e:	mov    esi,eax
1000b080:	push   edi
1000b081:	xor    eax,eax
1000b083:	xor    ebx,ebx
1000b085:	mov    DWORD PTR [ebp-0x2c],ebx
1000b088:	lea    edi,[ebp-0x28]
1000b08b:	stos   DWORD PTR es:[edi],eax
1000b08c:	stos   DWORD PTR es:[edi],eax
1000b08d:	stos   DWORD PTR es:[edi],eax
1000b08e:	stos   DWORD PTR es:[edi],eax
1000b08f:	mov    eax,DWORD PTR [ebp+0x8]
1000b092:	mov    eax,DWORD PTR [eax+0x30]
1000b095:	mov    ecx,DWORD PTR [eax+0x18]
1000b098:	mov    DWORD PTR [ebp-0x10],ecx
1000b09b:	mov    eax,DWORD PTR [eax+0x14]
1000b09e:	mov    DWORD PTR [ebp-0xc],eax
1000b0a1:	call   DWORD PTR ds:0x100663bc
1000b0a7:	push   ebx
1000b0a8:	lea    ecx,[ebp-0x2c]
1000b0ab:	push   ecx
1000b0ac:	push   ebx
1000b0ad:	lea    ecx,[ebp-0x4]
1000b0b0:	push   ecx
1000b0b1:	push   0x1
1000b0b3:	mov    edi,eax
1000b0b5:	mov    eax,DWORD PTR [esi+0x8]
1000b0b8:	lea    ecx,[ebp-0x10]
1000b0bb:	push   ecx
1000b0bc:	push   eax
1000b0bd:	mov    DWORD PTR [ebp-0x1c],edi
1000b0c0:	mov    DWORD PTR [ebp-0x8],ebx
1000b0c3:	call   DWORD PTR ds:0x100663e8
1000b0c9:	cmp    eax,0xffffffff
1000b0cc:	jne    0x1000b0ea
1000b0ce:	call   DWORD PTR ds:0x100663f0
1000b0d4:	cmp    eax,0x3e5
1000b0d9:	je     0x1000b0ea
1000b0db:	cmp    edi,ebx
1000b0dd:	je     0x1000b0e6
1000b0df:	push   edi
1000b0e0:	call   DWORD PTR ds:0x100663d4
1000b0e6:	xor    al,al
1000b0e8:	jmp    0x1000b141
1000b0ea:	mov    eax,DWORD PTR [ebp-0x1c]
1000b0ed:	push   0x1
1000b0ef:	mov    DWORD PTR [ebp-0x18],eax
1000b0f2:	mov    eax,DWORD PTR [esi+0x4]
1000b0f5:	push   0xffffffff
1000b0f7:	mov    DWORD PTR [ebp-0x14],eax
1000b0fa:	push   ebx
1000b0fb:	lea    eax,[ebp-0x18]
1000b0fe:	push   eax
1000b0ff:	push   0x2
1000b101:	call   DWORD PTR ds:0x100663ac
1000b107:	test   eax,eax
1000b109:	jne    0x1000b0db
1000b10b:	mov    esi,DWORD PTR [esi+0x8]
1000b10e:	lea    eax,[ebp-0x8]
1000b111:	push   eax
1000b112:	push   ebx
1000b113:	lea    eax,[ebp-0x4]
1000b116:	push   eax
1000b117:	lea    eax,[ebp-0x2c]
1000b11a:	push   eax
1000b11b:	push   esi
1000b11c:	call   DWORD PTR ds:0x100663c0
1000b122:	test   eax,eax
1000b124:	je     0x1000b0db
1000b126:	mov    eax,DWORD PTR [ebp+0x8]
1000b129:	mov    eax,DWORD PTR [eax+0x30]
1000b12c:	mov    ecx,DWORD PTR [ebp-0x4]
1000b12f:	cmp    ecx,DWORD PTR [eax+0x18]
1000b132:	jne    0x1000b0db
1000b134:	cmp    edi,ebx
1000b136:	je     0x1000b13f
1000b138:	push   edi
1000b139:	call   DWORD PTR ds:0x100663d4
1000b13f:	mov    al,0x1
1000b141:	pop    edi
1000b142:	pop    esi
1000b143:	pop    ebx
1000b144:	leave  
1000b145:	ret    0x4
1000b148:	push   ebp
1000b149:	mov    ebp,esp
1000b14b:	and    esp,0xfffffff8
1000b14e:	push   0xffffffff
1000b150:	push   0x1006494c
1000b155:	mov    eax,fs:0x0
1000b15b:	push   eax
1000b15c:	sub    esp,0x94
1000b162:	push   ebx
1000b163:	push   esi
1000b164:	mov    eax,ds:0x1007e030
1000b169:	xor    eax,esp
1000b16b:	push   eax
1000b16c:	lea    eax,[esp+0xa0]
1000b173:	mov    fs:0x0,eax
1000b179:	mov    esi,ecx
1000b17b:	push   0x1006d4b4
1000b180:	push   0x3
1000b182:	push   0x1006d4f0
1000b187:	call   0x100042e3
1000b18c:	add    esp,0xc
1000b18f:	push   eax
1000b190:	lea    ecx,[esp+0x4c]
1000b194:	call   0x100011d1
1000b199:	xor    ebx,ebx
1000b19b:	mov    DWORD PTR [esp+0xa8],ebx
1000b1a2:	cmp    DWORD PTR [esi+0x18],0x10
1000b1a6:	jb     0x1000b1ad
1000b1a8:	mov    esi,DWORD PTR [esi+0x4]
1000b1ab:	jmp    0x1000b1b0
1000b1ad:	add    esi,0x4
1000b1b0:	push   esi
1000b1b1:	lea    ecx,[esp+0x68]
1000b1b5:	call   0x100011d1
1000b1ba:	push   0x5044f3ea
1000b1bf:	push   0x1006d4f4
1000b1c4:	mov    BYTE PTR [esp+0xb0],0x1
1000b1cc:	call   0x100042d1
1000b1d1:	push   0x6b6325c6
1000b1d6:	push   eax
1000b1d7:	call   0x100042d1
1000b1dc:	push   eax
1000b1dd:	push   0x3
1000b1df:	push   0x1006d524
1000b1e4:	call   0x100042e3
1000b1e9:	add    esp,0x1c
1000b1ec:	push   eax
1000b1ed:	lea    ecx,[esp+0x30]
1000b1f1:	call   0x100011d1
1000b1f6:	lea    eax,[esp+0x48]
1000b1fa:	push   eax
1000b1fb:	lea    eax,[esp+0x68]
1000b1ff:	push   eax
1000b200:	lea    ecx,[esp+0x34]
1000b204:	mov    BYTE PTR [esp+0xb0],0x2
1000b20c:	call   0x10009415
1000b211:	mov    esi,eax
1000b213:	mov    eax,DWORD PTR [edi]
1000b215:	cmp    esi,eax
1000b217:	pop    ecx
1000b218:	pop    ecx
1000b219:	je     0x1000b225
1000b21b:	cmp    eax,ebx
1000b21d:	je     0x1000b225
1000b21f:	push   eax
1000b220:	call   0x10009ece
1000b225:	push   ebx
1000b226:	push   0x1
1000b228:	lea    ecx,[esp+0x34]
1000b22c:	mov    DWORD PTR [edi],esi
1000b22e:	call   0x100012f4
1000b233:	push   ebx
1000b234:	push   0x1
1000b236:	lea    ecx,[esp+0x6c]
1000b23a:	call   0x100012f4
1000b23f:	or     DWORD PTR [esp+0xa8],0xffffffff
1000b247:	push   ebx
1000b248:	push   0x1
1000b24a:	lea    ecx,[esp+0x50]
1000b24e:	call   0x100012f4
1000b253:	push   0x42d7899c
1000b258:	push   0x1006d528
1000b25d:	call   0x100042d1
1000b262:	push   0x1433994a
1000b267:	push   eax
1000b268:	call   0x100042d1
1000b26d:	push   eax
1000b26e:	push   0x4
1000b270:	push   0x1006d420
1000b275:	call   0x100042e3
1000b27a:	add    esp,0x1c
1000b27d:	push   eax
1000b27e:	lea    ecx,[esp+0x84]
1000b285:	call   0x100011d1
1000b28a:	mov    esi,DWORD PTR [ebp+0x8]
1000b28d:	mov    DWORD PTR [esp+0xa8],0x3
1000b298:	mov    eax,DWORD PTR [edi]
1000b29a:	push   ebx
1000b29b:	lea    edx,[esp+0x84]
1000b2a2:	push   edx
1000b2a3:	lea    ecx,[esi+0x18]
1000b2a6:	lea    edx,[eax+0x18]
1000b2a9:	call   0x10007f58
1000b2ae:	or     DWORD PTR [esp+0xa8],0xffffffff
1000b2b6:	push   ebx
1000b2b7:	push   0x1
1000b2b9:	lea    ecx,[esp+0x88]
1000b2c0:	call   0x100012f4
1000b2c5:	push   DWORD PTR [ebp+0xc]
1000b2c8:	lea    eax,[esp+0x18]
1000b2cc:	push   eax
1000b2cd:	call   0x1000f62f
1000b2d2:	pop    ecx
1000b2d3:	pop    ecx
1000b2d4:	mov    DWORD PTR [esp+0xa8],0x4
1000b2df:	mov    DWORD PTR [esp+0x10],ebx
1000b2e3:	cmp    DWORD PTR [esp+0x18],ebx
1000b2e7:	jne    0x1000b2ed
1000b2e9:	xor    eax,eax
1000b2eb:	jmp    0x1000b2f8
1000b2ed:	mov    eax,DWORD PTR [esp+0x1c]
1000b2f1:	sub    eax,DWORD PTR [esp+0x18]
1000b2f5:	sar    eax,0x4
1000b2f8:	cmp    DWORD PTR [esp+0x10],eax
1000b2fc:	je     0x1000b363
1000b2fe:	push   DWORD PTR [esp+0x10]
1000b302:	lea    esi,[esp+0x18]
1000b306:	call   0x1000cb07
1000b30b:	call   0x10004674
1000b310:	cmp    eax,0x2
1000b313:	jne    0x1000b35a
1000b315:	mov    eax,DWORD PTR [edi]
1000b317:	push   ebx
1000b318:	push   0x1
1000b31a:	push   DWORD PTR [esp+0x18]
1000b31e:	mov    DWORD PTR [esp+0x34],eax
1000b322:	call   0x1000cb07
1000b327:	mov    esi,eax
1000b329:	call   0x1000468a
1000b32e:	push   ebx
1000b32f:	push   DWORD PTR [esp+0x18]
1000b333:	lea    esi,[esp+0x20]
1000b337:	mov    DWORD PTR [esp+0x30],eax
1000b33b:	call   0x1000cb07
1000b340:	mov    esi,eax
1000b342:	call   0x1000468a
1000b347:	mov    edx,DWORD PTR [esp+0x2c]
1000b34b:	push   eax
1000b34c:	mov    eax,DWORD PTR [esp+0x2c]
1000b350:	add    edx,0x18
1000b353:	mov    ecx,eax
1000b355:	call   0x10007f58
1000b35a:	inc    DWORD PTR [esp+0x10]
1000b35e:	mov    esi,DWORD PTR [ebp+0x8]
1000b361:	jmp    0x1000b2e3
1000b363:	cmp    DWORD PTR [esi+0x54],ebx
1000b366:	mov    ecx,DWORD PTR [edi]
1000b368:	setne  al
1000b36b:	push   eax
1000b36c:	call   0x1000b70a
1000b371:	call   0x1000205f
1000b376:	push   DWORD PTR [edi]
1000b378:	mov    eax,esi
1000b37a:	call   0x1000b076
1000b37f:	test   al,al
1000b381:	je     0x1000b392
1000b383:	mov    esi,DWORD PTR [esi+0x10]
1000b386:	call   0x1000de4d
1000b38b:	test   al,al
1000b38d:	je     0x1000b3f5
1000b38f:	mov    esi,DWORD PTR [ebp+0x8]
1000b392:	call   0x1000205f
1000b397:	mov    eax,DWORD PTR [esi+0x8]
1000b39a:	cmp    eax,ebx
1000b39c:	je     0x1000b3a5
1000b39e:	push   eax
1000b39f:	call   DWORD PTR ds:0x100663b8
1000b3a5:	mov    DWORD PTR [esi+0x8],ebx
1000b3a8:	call   0x1000ac8a
1000b3ad:	test   al,al
1000b3af:	jne    0x1000b3d3
1000b3b1:	lea    esi,[esp+0x14]
1000b3b5:	call   0x1000d21e
1000b3ba:	xor    al,al
1000b3bc:	mov    ecx,DWORD PTR [esp+0xa0]
1000b3c3:	mov    DWORD PTR fs:0x0,ecx
1000b3ca:	pop    ecx
1000b3cb:	pop    esi
1000b3cc:	pop    ebx
1000b3cd:	mov    esp,ebp
1000b3cf:	pop    ebp
1000b3d0:	ret    0x8
1000b3d3:	mov    esi,DWORD PTR [ebp+0x8]
1000b3d6:	call   0x1000adc0
1000b3db:	push   DWORD PTR [edi]
1000b3dd:	mov    eax,esi
1000b3df:	call   0x1000b076
1000b3e4:	test   al,al
1000b3e6:	jne    0x1000b3f5
1000b3e8:	lea    esi,[esp+0x14]
1000b3ec:	call   0x1000d21e
1000b3f1:	mov    al,bl
1000b3f3:	jmp    0x1000b3bc
1000b3f5:	mov    bl,0x1
1000b3f7:	jmp    0x1000b3e8
1000b3f9:	push   0x50
1000b3fb:	mov    eax,0x10064906
1000b400:	call   0x10059c75
1000b405:	mov    esi,ecx
1000b407:	xor    edi,edi
1000b409:	mov    DWORD PTR [ebp-0x18],edi
1000b40c:	mov    DWORD PTR [ebp-0x14],edi
1000b40f:	xor    ebx,ebx
1000b411:	lea    eax,[ebp-0x5c]
1000b414:	inc    ebx
1000b415:	mov    DWORD PTR [ebp-0x4],ebx
1000b418:	push   eax
1000b419:	mov    DWORD PTR [esi],edi
1000b41b:	call   0x10008f2e
1000b420:	mov    eax,DWORD PTR [ebp+0x8]
1000b423:	lea    ecx,[ebp-0x5c]
1000b426:	mov    BYTE PTR [ebp-0x4],0x2
1000b42a:	mov    eax,DWORD PTR [eax+0x14]
1000b42d:	push   ecx
1000b42e:	push   eax
1000b42f:	call   0x1000e598
1000b434:	test   eax,eax
1000b436:	je     0x1000b442
1000b438:	mov    esi,DWORD PTR [ebp+0xc]
1000b43b:	mov    DWORD PTR [ebp-0x14],edi
1000b43e:	mov    DWORD PTR [esi],edi
1000b440:	jmp    0x1000b4b0
1000b442:	mov    eax,DWORD PTR [ebp+0x8]
1000b445:	push   DWORD PTR [ebp+0x10]
1000b448:	mov    ecx,DWORD PTR [eax+0x14]
1000b44b:	lea    edx,[ebp-0x5c]
1000b44e:	call   0x1000e676
1000b453:	test   eax,eax
1000b455:	je     0x1000b45e
1000b457:	mov    esi,DWORD PTR [ebp+0xc]
1000b45a:	mov    DWORD PTR [esi],edi
1000b45c:	jmp    0x1000b4ad
1000b45e:	push   DWORD PTR [ebp+0x8]
1000b461:	lea    ecx,[ebp-0x5c]
1000b464:	call   0x1000b4d0
1000b469:	mov    eax,DWORD PTR [ebp-0x50]
1000b46c:	mov    eax,DWORD PTR [eax+0x18]
1000b46f:	push   eax
1000b470:	mov    DWORD PTR [esi],eax
1000b472:	call   0x100439b6
1000b477:	cmp    eax,edi
1000b479:	pop    ecx
1000b47a:	mov    DWORD PTR [ebp+0x8],eax
1000b47d:	je     0x1000b486
1000b47f:	push   edi
1000b480:	call   0x100430d2
1000b485:	pop    ecx
1000b486:	mov    eax,DWORD PTR [ebp-0x50]
1000b489:	cmp    DWORD PTR [eax+0x1c],0x10
1000b48d:	jb     0x1000b494
1000b48f:	mov    eax,DWORD PTR [eax+0x8]
1000b492:	jmp    0x1000b497
1000b494:	add    eax,0x8
1000b497:	push   DWORD PTR [esi]
1000b499:	push   eax
1000b49a:	push   DWORD PTR [ebp+0x8]
1000b49d:	call   0x10045420
1000b4a2:	mov    eax,DWORD PTR [ebp+0x8]
1000b4a5:	mov    esi,DWORD PTR [ebp+0xc]
1000b4a8:	add    esp,0xc
1000b4ab:	mov    DWORD PTR [esi],eax
1000b4ad:	mov    DWORD PTR [ebp-0x14],edi
1000b4b0:	lea    eax,[ebp-0x5c]
1000b4b3:	push   eax
1000b4b4:	mov    DWORD PTR [ebp-0x18],ebx
1000b4b7:	mov    BYTE PTR [ebp-0x4],bl
1000b4ba:	call   0x10009f31
1000b4bf:	push   edi
1000b4c0:	call   0x100430d2
1000b4c5:	pop    ecx
1000b4c6:	mov    eax,esi
1000b4c8:	call   0x10059d4d
1000b4cd:	ret    0xc
1000b4d0:	push   ebp
1000b4d1:	mov    ebp,esp
1000b4d3:	and    esp,0xfffffff8
1000b4d6:	push   0xffffffff
1000b4d8:	push   0x100622e7
1000b4dd:	mov    eax,fs:0x0
1000b4e3:	push   eax
1000b4e4:	sub    esp,0x78
1000b4e7:	push   ebx
1000b4e8:	push   esi
1000b4e9:	push   edi
1000b4ea:	mov    eax,ds:0x1007e030
1000b4ef:	xor    eax,esp
1000b4f1:	push   eax
1000b4f2:	lea    eax,[esp+0x88]
1000b4f9:	mov    fs:0x0,eax
1000b4ff:	mov    ebx,ecx
1000b501:	mov    eax,DWORD PTR [ebx]
1000b503:	lea    ecx,[esp+0x14]
1000b507:	push   ecx
1000b508:	call   0x1000795e
1000b50d:	mov    esi,eax
1000b50f:	push   0x1006d568
1000b514:	push   0x3
1000b516:	xor    edi,edi
1000b518:	push   0x1006d4f0
1000b51d:	mov    DWORD PTR [esp+0x9c],edi
1000b524:	call   0x100042e3
1000b529:	add    esp,0xc
1000b52c:	push   eax
1000b52d:	call   0x100065b3
1000b532:	or     DWORD PTR [esp+0x94],0xffffffff
1000b53a:	pop    ecx
1000b53b:	xor    esi,esi
1000b53d:	push   edi
1000b53e:	inc    esi
1000b53f:	push   esi
1000b540:	lea    ecx,[esp+0x1c]
1000b544:	mov    BYTE PTR [esp+0x1b],al
1000b548:	call   0x100012f4
1000b54d:	cmp    BYTE PTR [esp+0x13],0x0
1000b552:	je     0x1000b61d
1000b558:	push   0x22d7ad4c
1000b55d:	push   0x1006d5e4
1000b562:	call   0x100042d1
1000b567:	push   0x5417320c
1000b56c:	push   eax
1000b56d:	call   0x100042d1
1000b572:	push   eax
1000b573:	push   0xa
1000b575:	push   0x1006d60c
1000b57a:	call   0x100042e3
1000b57f:	add    esp,0x1c
1000b582:	push   eax
1000b583:	lea    ecx,[esp+0x18]
1000b587:	call   0x100011d1
1000b58c:	push   edi
1000b58d:	lea    eax,[esp+0x18]
1000b591:	push   eax
1000b592:	lea    eax,[esp+0x54]
1000b596:	push   eax
1000b597:	lea    eax,[ebx+0x20]
1000b59a:	mov    DWORD PTR [esp+0x9c],esi
1000b5a1:	call   0x100084c3
1000b5a6:	mov    ebx,eax
1000b5a8:	push   0x66a9b206
1000b5ad:	push   0x2ac81130
1000b5b2:	push   0x1006d598
1000b5b7:	mov    BYTE PTR [esp+0x9c],0x2
1000b5bf:	call   0x100042d1
1000b5c4:	pop    ecx
1000b5c5:	pop    ecx
1000b5c6:	push   eax
1000b5c7:	call   0x100042d1
1000b5cc:	cmp    DWORD PTR [ebx+0x18],0x10
1000b5d0:	pop    ecx
1000b5d1:	pop    ecx
1000b5d2:	jb     0x1000b5d9
1000b5d4:	mov    ebx,DWORD PTR [ebx+0x4]
1000b5d7:	jmp    0x1000b5dc
1000b5d9:	add    ebx,0x4
1000b5dc:	push   eax
1000b5dd:	push   0xa
1000b5df:	push   0x1006d5d8
1000b5e4:	call   0x100042e3
1000b5e9:	add    esp,0xc
1000b5ec:	push   eax
1000b5ed:	push   ebx
1000b5ee:	call   0x1004590f
1000b5f3:	pop    ecx
1000b5f4:	pop    ecx
1000b5f5:	mov    ebx,eax
1000b5f7:	neg    ebx
1000b5f9:	push   edi
1000b5fa:	sbb    bl,bl
1000b5fc:	push   esi
1000b5fd:	lea    ecx,[esp+0x54]
1000b601:	inc    bl
1000b603:	call   0x100012f4
1000b608:	push   edi
1000b609:	push   esi
1000b60a:	lea    ecx,[esp+0x1c]
1000b60e:	call   0x100012f4
1000b613:	test   bl,bl
1000b615:	setne  al
1000b618:	jmp    0x1000b6ec
1000b61d:	push   0x60d356e0
1000b622:	push   0x1006d648
1000b627:	call   0x100042d1
1000b62c:	push   0x60c69fc4
1000b631:	push   eax
1000b632:	call   0x100042d1
1000b637:	push   0x277d2e56
1000b63c:	push   eax
1000b63d:	call   0x100042d1
1000b642:	push   eax
1000b643:	push   0xa
1000b645:	push   0x1006d60c
1000b64a:	call   0x100042e3
1000b64f:	add    esp,0x24
1000b652:	push   eax
1000b653:	lea    ecx,[esp+0x34]
1000b657:	call   0x100011d1
1000b65c:	push   edi
1000b65d:	lea    eax,[esp+0x34]
1000b661:	push   eax
1000b662:	lea    eax,[esp+0x70]
1000b666:	push   eax
1000b667:	lea    eax,[ebx+0x20]
1000b66a:	mov    DWORD PTR [esp+0x9c],0x3
1000b675:	call   0x100084c3
1000b67a:	mov    ebx,eax
1000b67c:	push   0x606d84f6
1000b681:	push   0x76ec4dfa
1000b686:	push   0x1006d618
1000b68b:	mov    BYTE PTR [esp+0x9c],0x4
1000b693:	call   0x100042d1
1000b698:	pop    ecx
1000b699:	pop    ecx
1000b69a:	push   eax
1000b69b:	call   0x100042d1
1000b6a0:	cmp    DWORD PTR [ebx+0x18],0x10
1000b6a4:	pop    ecx
1000b6a5:	pop    ecx
1000b6a6:	jb     0x1000b6ad
1000b6a8:	mov    ebx,DWORD PTR [ebx+0x4]
1000b6ab:	jmp    0x1000b6b0
1000b6ad:	add    ebx,0x4
1000b6b0:	push   eax
1000b6b1:	push   0x5
1000b6b3:	push   0x1006d640
1000b6b8:	call   0x100042e3
1000b6bd:	add    esp,0xc
1000b6c0:	push   eax
1000b6c1:	push   ebx
1000b6c2:	call   0x1004590f
1000b6c7:	pop    ecx
1000b6c8:	pop    ecx
1000b6c9:	mov    ebx,eax
1000b6cb:	neg    ebx
1000b6cd:	push   edi
1000b6ce:	sbb    bl,bl
1000b6d0:	push   esi
1000b6d1:	lea    ecx,[esp+0x70]
1000b6d5:	inc    bl
1000b6d7:	call   0x100012f4
1000b6dc:	push   edi
1000b6dd:	push   esi
1000b6de:	lea    ecx,[esp+0x38]
1000b6e2:	call   0x100012f4
1000b6e7:	test   bl,bl
1000b6e9:	sete   al
1000b6ec:	mov    ecx,DWORD PTR [ebp+0x8]
1000b6ef:	mov    BYTE PTR [ecx+0x58],al
1000b6f2:	mov    ecx,DWORD PTR [esp+0x88]
1000b6f9:	mov    DWORD PTR fs:0x0,ecx
1000b700:	pop    ecx
1000b701:	pop    edi
1000b702:	pop    esi
1000b703:	pop    ebx
1000b704:	mov    esp,ebp
1000b706:	pop    ebp
1000b707:	ret    0x4
1000b70a:	push   0x200
1000b70f:	mov    eax,0x10062fec
1000b714:	call   0x10059cde
1000b719:	mov    esi,ecx
1000b71b:	push   0x3b1013f6
1000b720:	push   0x1006d680
1000b725:	mov    DWORD PTR [ebp-0x160],esi
1000b72b:	call   0x100042d1
1000b730:	push   0x422ca7b0
1000b735:	push   eax
1000b736:	call   0x100042d1
1000b73b:	push   eax
1000b73c:	push   0x7
1000b73e:	push   0x1006d6b8
1000b743:	call   0x100042e3
1000b748:	add    esp,0x1c
1000b74b:	push   eax
1000b74c:	lea    ecx,[ebp-0x180]
1000b752:	call   0x100011d1
1000b757:	lea    ecx,[ebp-0x180]
1000b75d:	lea    eax,[esi+0x18]
1000b760:	push   ecx
1000b761:	xor    ebx,ebx
1000b763:	push   eax
1000b764:	mov    DWORD PTR [ebp-0x4],ebx
1000b767:	mov    DWORD PTR [ebp-0x15c],eax
1000b76d:	call   0x10008261
1000b772:	or     DWORD PTR [ebp-0x4],0xffffffff
1000b776:	xor    edi,edi
1000b778:	push   ebx
1000b779:	inc    edi
1000b77a:	push   edi
1000b77b:	lea    ecx,[ebp-0x180]
1000b781:	call   0x100012f4
1000b786:	lea    ecx,[ebp-0xc0]
1000b78c:	call   0x10012ce7
1000b791:	push   0x1006cd08
1000b796:	lea    esi,[ebp-0xc0]
1000b79c:	mov    DWORD PTR [ebp-0x4],edi
1000b79f:	call   0x100065b3
1000b7a4:	test   al,al
1000b7a6:	pop    ecx
1000b7a7:	jne    0x1000b881
1000b7ad:	push   0x44b88f42
1000b7b2:	push   0x1006d6c0
1000b7b7:	call   0x100042d1
1000b7bc:	push   0x707f141c
1000b7c1:	push   eax
1000b7c2:	call   0x100042d1
1000b7c7:	push   0x5643651e
1000b7cc:	push   eax
1000b7cd:	call   0x100042d1
1000b7d2:	push   eax
1000b7d3:	push   0xa
1000b7d5:	mov    esi,0x1006d6e8
1000b7da:	push   esi
1000b7db:	call   0x100042e3
1000b7e0:	add    esp,0x24
1000b7e3:	push   eax
1000b7e4:	lea    ecx,[ebp-0x180]
1000b7ea:	call   0x100011d1
1000b7ef:	lea    eax,[ebp-0x180]
1000b7f5:	push   eax
1000b7f6:	push   DWORD PTR [ebp-0x15c]
1000b7fc:	mov    BYTE PTR [ebp-0x4],0x2
1000b800:	call   0x10008261
1000b805:	push   ebx
1000b806:	push   edi
1000b807:	lea    ecx,[ebp-0x180]
1000b80d:	mov    BYTE PTR [ebp-0x4],0x1
1000b811:	call   0x100012f4
1000b816:	push   0x23f9bd74
1000b81b:	push   0x1006d6f4
1000b820:	call   0x100042d1
1000b825:	push   0x8faff50
1000b82a:	push   eax
1000b82b:	call   0x100042d1
1000b830:	push   0x2fb07be0
1000b835:	push   eax
1000b836:	call   0x100042d1
1000b83b:	push   eax
1000b83c:	push   0xa
1000b83e:	push   esi
1000b83f:	call   0x100042e3
1000b844:	add    esp,0x24
1000b847:	push   eax
1000b848:	lea    ecx,[ebp-0x180]
1000b84e:	call   0x100011d1
1000b853:	mov    edx,DWORD PTR [ebp-0x15c]
1000b859:	push   ebx
1000b85a:	lea    eax,[ebp-0x180]
1000b860:	push   eax
1000b861:	lea    ecx,[ebp-0xc0]
1000b867:	mov    BYTE PTR [ebp-0x4],0x3
1000b86b:	call   0x10007f58
1000b870:	push   ebx
1000b871:	push   edi
1000b872:	lea    ecx,[ebp-0x180]
1000b878:	mov    BYTE PTR [ebp-0x4],0x1
1000b87c:	call   0x100012f4
1000b881:	push   0x1006cd08
1000b886:	lea    esi,[ebp-0x6c]
1000b889:	call   0x100065b3
1000b88e:	test   al,al
1000b890:	pop    ecx
1000b891:	jne    0x1000b952
1000b897:	push   0x1006d730
1000b89c:	push   0xf
1000b89e:	mov    esi,0x1006d758
1000b8a3:	push   esi
1000b8a4:	call   0x100042e3
1000b8a9:	add    esp,0xc
1000b8ac:	push   eax
1000b8ad:	lea    ecx,[ebp-0x180]
1000b8b3:	call   0x100011d1
1000b8b8:	lea    eax,[ebp-0x180]
1000b8be:	push   eax
1000b8bf:	push   DWORD PTR [ebp-0x15c]
1000b8c5:	mov    BYTE PTR [ebp-0x4],0x4
1000b8c9:	call   0x10008261
1000b8ce:	push   ebx
1000b8cf:	push   edi
1000b8d0:	lea    ecx,[ebp-0x180]
1000b8d6:	mov    BYTE PTR [ebp-0x4],0x1
1000b8da:	call   0x100012f4
1000b8df:	push   0x2492199c
1000b8e4:	push   0x1006d768
1000b8e9:	call   0x100042d1
1000b8ee:	push   0x771a7c5a
1000b8f3:	push   eax
1000b8f4:	call   0x100042d1
1000b8f9:	push   0x18c0aac8
1000b8fe:	push   eax
1000b8ff:	call   0x100042d1
1000b904:	push   0x4a81a3c
1000b909:	push   eax
1000b90a:	call   0x100042d1
1000b90f:	push   eax
1000b910:	push   0xf
1000b912:	push   esi
1000b913:	call   0x100042e3
1000b918:	add    esp,0x2c
1000b91b:	push   eax
1000b91c:	lea    ecx,[ebp-0x180]
1000b922:	call   0x100011d1
1000b927:	mov    edx,DWORD PTR [ebp-0x15c]
1000b92d:	push   ebx
1000b92e:	lea    eax,[ebp-0x180]
1000b934:	push   eax
1000b935:	lea    ecx,[ebp-0x6c]
1000b938:	mov    BYTE PTR [ebp-0x4],0x5
1000b93c:	call   0x10007f58
1000b941:	push   ebx
1000b942:	push   edi
1000b943:	lea    ecx,[ebp-0x180]
1000b949:	mov    BYTE PTR [ebp-0x4],0x1
1000b94d:	call   0x100012f4
1000b952:	push   0x1006cd08
1000b957:	lea    esi,[ebp-0x88]
1000b95d:	call   0x100065b3
1000b962:	test   al,al
1000b964:	pop    ecx
1000b965:	jne    0x1000bb0e
1000b96b:	lea    edi,[ebp-0x158]
1000b971:	call   0x1000bdef
1000b976:	mov    eax,esi
1000b978:	push   eax
1000b979:	lea    ecx,[ebp-0x2c]
1000b97c:	mov    BYTE PTR [ebp-0x4],0x6
1000b980:	call   0x100011ab
1000b985:	cmp    BYTE PTR [ebp+0x8],bl
1000b988:	mov    BYTE PTR [ebp-0x4],0x7
1000b98c:	je     0x1000badd
1000b992:	mov    eax,edi
1000b994:	push   eax
1000b995:	lea    ecx,[ebp-0x2c]
1000b998:	call   0x10032d80
1000b99d:	test   al,al
1000b99f:	pop    ecx
1000b9a0:	je     0x1000badd
1000b9a6:	push   0x26b5a8a
1000b9ab:	push   0x1006d78c
1000b9b0:	call   0x100042d1
1000b9b5:	push   eax
1000b9b6:	push   0x4
1000b9b8:	push   0x1006d420
1000b9bd:	call   0x100042e3
1000b9c2:	add    esp,0x14
1000b9c5:	push   eax
1000b9c6:	lea    ecx,[ebp-0x180]
1000b9cc:	call   0x100011d1
1000b9d1:	push   ebx
1000b9d2:	lea    eax,[ebp-0x180]
1000b9d8:	push   eax
1000b9d9:	lea    eax,[ebp-0x1b8]
1000b9df:	push   eax
1000b9e0:	mov    eax,DWORD PTR [ebp-0x15c]
1000b9e6:	mov    BYTE PTR [ebp-0x4],0x8
1000b9ea:	call   0x100084c3
1000b9ef:	mov    esi,eax
1000b9f1:	push   0x3fdc413c
1000b9f6:	push   0x1006d7c0
1000b9fb:	mov    BYTE PTR [ebp-0x4],0x9
1000b9ff:	call   0x100042d1
1000ba04:	push   0x5154a2e0
1000ba09:	push   eax
1000ba0a:	call   0x100042d1
1000ba0f:	push   eax
1000ba10:	push   0x7
1000ba12:	push   0x1006d3dc
1000ba17:	call   0x100042e3
1000ba1c:	add    esp,0x1c
1000ba1f:	push   eax
1000ba20:	lea    ecx,[ebp-0x1f0]
1000ba26:	call   0x100011d1
1000ba2b:	push   esi
1000ba2c:	push   eax
1000ba2d:	lea    eax,[ebp-0x20c]
1000ba33:	push   eax
1000ba34:	mov    BYTE PTR [ebp-0x4],0xa
1000ba38:	call   0x100064fb
1000ba3d:	add    esp,0xc
1000ba40:	lea    ecx,[ebp-0xfc]
1000ba46:	push   ecx
1000ba47:	push   eax
1000ba48:	lea    eax,[ebp-0x1d4]
1000ba4e:	push   eax
1000ba4f:	mov    BYTE PTR [ebp-0x4],0xb
1000ba53:	call   0x100064fb
1000ba58:	add    esp,0xc
1000ba5b:	lea    ecx,[ebp-0xe0]
1000ba61:	push   ecx
1000ba62:	push   eax
1000ba63:	lea    eax,[ebp-0x19c]
1000ba69:	push   eax
1000ba6a:	mov    BYTE PTR [ebp-0x4],0xc
1000ba6e:	call   0x100064fb
1000ba73:	add    esp,0xc
1000ba76:	push   0xffffffff
1000ba78:	push   ebx
1000ba79:	push   eax
1000ba7a:	lea    ecx,[ebp-0x2c]
1000ba7d:	mov    BYTE PTR [ebp-0x4],0xd
1000ba81:	call   0x10001245
1000ba86:	xor    edi,edi
1000ba88:	push   ebx
1000ba89:	inc    edi
1000ba8a:	push   edi
1000ba8b:	lea    ecx,[ebp-0x19c]
1000ba91:	call   0x100012f4
1000ba96:	push   ebx
1000ba97:	push   edi
1000ba98:	lea    ecx,[ebp-0x1d4]
1000ba9e:	call   0x100012f4
1000baa3:	push   ebx
1000baa4:	push   edi
1000baa5:	lea    ecx,[ebp-0x20c]
1000baab:	call   0x100012f4
1000bab0:	push   ebx
1000bab1:	push   edi
1000bab2:	lea    ecx,[ebp-0x1f0]
1000bab8:	call   0x100012f4
1000babd:	push   ebx
1000babe:	push   edi
1000babf:	lea    ecx,[ebp-0x1b8]
1000bac5:	call   0x100012f4
1000baca:	push   ebx
1000bacb:	push   edi
1000bacc:	lea    ecx,[ebp-0x180]
1000bad2:	mov    BYTE PTR [ebp-0x4],0x7
1000bad6:	call   0x100012f4
1000badb:	jmp    0x1000bae0
1000badd:	xor    edi,edi
1000badf:	inc    edi
1000bae0:	mov    eax,DWORD PTR [ebp-0x160]
1000bae6:	mov    esi,DWORD PTR [eax+0x4]
1000bae9:	lea    eax,[ebp-0x2c]
1000baec:	push   eax
1000baed:	call   0x10007979
1000baf2:	push   ebx
1000baf3:	push   edi
1000baf4:	lea    ecx,[ebp-0x2c]
1000baf7:	call   0x100012f4
1000bafc:	lea    esi,[ebp-0x158]
1000bb02:	mov    BYTE PTR [ebp-0x4],0x1
1000bb06:	call   0x1000be1c
1000bb0b:	xor    edi,edi
1000bb0d:	inc    edi
1000bb0e:	cmp    BYTE PTR [ebp+0x8],bl
1000bb11:	jne    0x1000bbcd
1000bb17:	push   0x1006cd08
1000bb1c:	lea    esi,[ebp-0xa4]
1000bb22:	call   0x100065b3
1000bb27:	test   al,al
1000bb29:	pop    ecx
1000bb2a:	jne    0x1000bbcd
1000bb30:	push   0x1006d800
1000bb35:	push   0x4
1000bb37:	mov    esi,0x1006d420
1000bb3c:	push   esi
1000bb3d:	call   0x100042e3
1000bb42:	add    esp,0xc
1000bb45:	push   eax
1000bb46:	lea    ecx,[ebp-0x180]
1000bb4c:	call   0x100011d1
1000bb51:	lea    eax,[ebp-0x180]
1000bb57:	push   eax
1000bb58:	push   DWORD PTR [ebp-0x15c]
1000bb5e:	mov    BYTE PTR [ebp-0x4],0xe
1000bb62:	call   0x10008261
1000bb67:	push   ebx
1000bb68:	push   edi
1000bb69:	lea    ecx,[ebp-0x180]
1000bb6f:	mov    BYTE PTR [ebp-0x4],0x1
1000bb73:	call   0x100012f4
1000bb78:	push   0x31a4d1fc
1000bb7d:	push   0x1006d840
1000bb82:	call   0x100042d1
1000bb87:	push   eax
1000bb88:	push   0x4
1000bb8a:	push   esi
1000bb8b:	call   0x100042e3
1000bb90:	add    esp,0x14
1000bb93:	push   eax
1000bb94:	lea    ecx,[ebp-0x180]
1000bb9a:	call   0x100011d1
1000bb9f:	mov    edx,DWORD PTR [ebp-0x15c]
1000bba5:	push   ebx
1000bba6:	lea    eax,[ebp-0x180]
1000bbac:	push   eax
1000bbad:	lea    ecx,[ebp-0xa4]
1000bbb3:	mov    BYTE PTR [ebp-0x4],0xf
1000bbb7:	call   0x10007f58
1000bbbc:	push   ebx
1000bbbd:	push   edi
1000bbbe:	lea    ecx,[ebp-0x180]
1000bbc4:	mov    BYTE PTR [ebp-0x4],0x1
1000bbc8:	call   0x100012f4
1000bbcd:	push   0x1006cd08
1000bbd2:	lea    esi,[ebp-0x50]
1000bbd5:	call   0x100065b3
1000bbda:	test   al,al
1000bbdc:	pop    ecx
1000bbdd:	jne    0x1000bbf1
1000bbdf:	mov    eax,DWORD PTR [ebp-0x160]
1000bbe5:	mov    esi,DWORD PTR [eax+0x8]
1000bbe8:	lea    eax,[ebp-0x50]
1000bbeb:	push   eax
1000bbec:	call   0x10007979
1000bbf1:	push   0x14d28e78
1000bbf6:	push   0x1006d87c
1000bbfb:	call   0x100042d1
1000bc00:	push   0x2a2ae42c
1000bc05:	push   eax
1000bc06:	call   0x100042d1
1000bc0b:	push   eax
1000bc0c:	push   0x6
1000bc0e:	mov    esi,0x1006d8a4
1000bc13:	push   esi
1000bc14:	call   0x100042e3
1000bc19:	add    esp,0x1c
1000bc1c:	push   eax
1000bc1d:	lea    ecx,[ebp-0x180]
1000bc23:	call   0x100011d1
1000bc28:	push   ebx
1000bc29:	lea    eax,[ebp-0x180]
1000bc2f:	push   eax
1000bc30:	lea    eax,[ebp-0x2c]
1000bc33:	push   eax
1000bc34:	mov    eax,DWORD PTR [ebp-0x15c]
1000bc3a:	mov    BYTE PTR [ebp-0x4],0x10
1000bc3e:	call   0x100084c3
1000bc43:	push   ebx
1000bc44:	push   edi
1000bc45:	lea    ecx,[ebp-0x180]
1000bc4b:	mov    BYTE PTR [ebp-0x4],0x12
1000bc4f:	call   0x100012f4
1000bc54:	push   0x6f2c138e
1000bc59:	push   0x1006d8ac
1000bc5e:	call   0x100042d1
1000bc63:	push   eax
1000bc64:	push   0x6
1000bc66:	push   esi
1000bc67:	call   0x100042e3
1000bc6c:	add    esp,0x14
1000bc6f:	push   eax
1000bc70:	lea    ecx,[ebp-0x19c]
1000bc76:	call   0x100011d1
1000bc7b:	lea    eax,[ebp-0x19c]
1000bc81:	push   eax
1000bc82:	push   DWORD PTR [ebp-0x15c]
1000bc88:	mov    BYTE PTR [ebp-0x4],0x13
1000bc8c:	call   0x10008261
1000bc91:	push   ebx
1000bc92:	push   edi
1000bc93:	lea    ecx,[ebp-0x19c]
1000bc99:	mov    BYTE PTR [ebp-0x4],0x12
1000bc9d:	call   0x100012f4
1000bca2:	cmp    DWORD PTR [ebp-0x18],ebx
1000bca5:	mov    DWORD PTR [ebp-0x164],ebx
1000bcab:	jbe    0x1000bd97
1000bcb1:	push   DWORD PTR [ebp-0x164]
1000bcb7:	lea    eax,[ebp-0x2c]
1000bcba:	push   0x1006d8d4
1000bcbf:	push   eax
1000bcc0:	call   0x1000ca77
1000bcc5:	cmp    eax,0xffffffff
1000bcc8:	mov    DWORD PTR [ebp-0x160],eax
1000bcce:	jne    0x1000bcd9
1000bcd0:	mov    eax,DWORD PTR [ebp-0x18]
1000bcd3:	mov    DWORD PTR [ebp-0x160],eax
1000bcd9:	cmp    eax,DWORD PTR [ebp-0x164]
1000bcdf:	jbe    0x1000bd85
1000bce5:	push   0x37218e7a
1000bcea:	push   0x1006d8d8
1000bcef:	call   0x100042d1
1000bcf4:	push   0x4b1226ec
1000bcf9:	push   eax
1000bcfa:	call   0x100042d1
1000bcff:	push   0x7d25761c
1000bd04:	push   eax
1000bd05:	call   0x100042d1
1000bd0a:	push   eax
1000bd0b:	push   0x6
1000bd0d:	push   esi
1000bd0e:	call   0x100042e3
1000bd13:	add    esp,0x24
1000bd16:	push   eax
1000bd17:	lea    ecx,[ebp-0x19c]
1000bd1d:	call   0x100011d1
1000bd22:	mov    eax,DWORD PTR [ebp-0x160]
1000bd28:	sub    eax,DWORD PTR [ebp-0x164]
1000bd2e:	mov    BYTE PTR [ebp-0x4],0x14
1000bd32:	push   eax
1000bd33:	push   DWORD PTR [ebp-0x164]
1000bd39:	lea    eax,[ebp-0x2c]
1000bd3c:	push   eax
1000bd3d:	lea    eax,[ebp-0x1b8]
1000bd43:	call   0x1000ca96
1000bd48:	mov    edx,DWORD PTR [ebp-0x15c]
1000bd4e:	push   edi
1000bd4f:	lea    ecx,[ebp-0x19c]
1000bd55:	push   ecx
1000bd56:	mov    ecx,eax
1000bd58:	mov    BYTE PTR [ebp-0x4],0x15
1000bd5c:	call   0x10007f58
1000bd61:	push   ebx
1000bd62:	push   edi
1000bd63:	lea    ecx,[ebp-0x1b8]
1000bd69:	call   0x100012f4
1000bd6e:	push   ebx
1000bd6f:	push   edi
1000bd70:	lea    ecx,[ebp-0x19c]
1000bd76:	mov    BYTE PTR [ebp-0x4],0x12
1000bd7a:	call   0x100012f4
1000bd7f:	mov    eax,DWORD PTR [ebp-0x160]
1000bd85:	cmp    eax,DWORD PTR [ebp-0x18]
1000bd88:	lea    ecx,[eax+0x1]
1000bd8b:	mov    DWORD PTR [ebp-0x164],ecx
1000bd91:	jb     0x1000bcb1
1000bd97:	push   ebx
1000bd98:	push   edi
1000bd99:	lea    ecx,[ebp-0x2c]
1000bd9c:	call   0x100012f4
1000bda1:	lea    esi,[ebp-0xc0]
1000bda7:	call   0x1000bdb4
1000bdac:	call   0x10059d61
1000bdb1:	ret    0x4
1000bdb4:	push   ebx
1000bdb5:	xor    ebx,ebx
1000bdb7:	push   ebx
1000bdb8:	push   0x1
1000bdba:	lea    ecx,[esi+0x70]
1000bdbd:	call   0x100012f4
1000bdc2:	push   ebx
1000bdc3:	push   0x1
1000bdc5:	lea    ecx,[esi+0x54]
1000bdc8:	call   0x100012f4
1000bdcd:	push   ebx
1000bdce:	push   0x1
1000bdd0:	lea    ecx,[esi+0x38]
1000bdd3:	call   0x100012f4
1000bdd8:	push   ebx
1000bdd9:	push   0x1
1000bddb:	lea    ecx,[esi+0x1c]
1000bdde:	call   0x100012f4
1000bde3:	push   ebx
1000bde4:	push   0x1
1000bde6:	mov    ecx,esi
1000bde8:	call   0x100012f4
1000bded:	pop    ebx
1000bdee:	ret    
1000bdef:	push   esi
1000bdf0:	lea    esi,[edi+0x4]
1000bdf3:	call   0x100040e9
1000bdf8:	lea    esi,[edi+0x24]
1000bdfb:	call   0x100040e9
1000be00:	lea    esi,[edi+0x40]
1000be03:	call   0x100040e9
1000be08:	lea    esi,[edi+0x5c]
1000be0b:	call   0x100040e9
1000be10:	lea    esi,[edi+0x78]
1000be13:	call   0x100040e9
1000be18:	mov    eax,edi
1000be1a:	pop    esi
1000be1b:	ret    
1000be1c:	push   ebx
1000be1d:	xor    ebx,ebx
1000be1f:	push   ebx
1000be20:	push   0x1
1000be22:	lea    ecx,[esi+0x78]
1000be25:	call   0x100012f4
1000be2a:	push   ebx
1000be2b:	push   0x1
1000be2d:	lea    ecx,[esi+0x5c]
1000be30:	call   0x100012f4
1000be35:	push   ebx
1000be36:	push   0x1
1000be38:	lea    ecx,[esi+0x40]
1000be3b:	call   0x100012f4
1000be40:	push   ebx
1000be41:	push   0x1
1000be43:	lea    ecx,[esi+0x24]
1000be46:	call   0x100012f4
1000be4b:	push   ebx
1000be4c:	push   0x1
1000be4e:	lea    ecx,[esi+0x4]
1000be51:	call   0x100012f4
1000be56:	pop    ebx
1000be57:	ret    
1000be58:	push   0x4
1000be5a:	mov    eax,0x10061362
1000be5f:	call   0x10059c75
1000be64:	mov    edi,0x10080da4
1000be69:	xor    ebx,ebx
1000be6b:	mov    DWORD PTR [ebp-0x10],edi
1000be6e:	mov    DWORD PTR ds:0x10080da4,ebx
1000be74:	mov    DWORD PTR [ebp-0x4],ebx
1000be77:	mov    DWORD PTR ds:0x10080da8,ebx
1000be7d:	mov    BYTE PTR [ebp-0x4],0x1
1000be81:	call   0x1000a87c
1000be86:	mov    ds:0x10080db0,eax
1000be8b:	mov    BYTE PTR [eax+0x39],0x1
1000be8f:	mov    eax,ds:0x10080db0
1000be94:	mov    DWORD PTR [eax+0x4],eax
1000be97:	mov    eax,ds:0x10080db0
1000be9c:	mov    DWORD PTR [eax],eax
1000be9e:	mov    eax,ds:0x10080db0
1000bea3:	push   ebx
1000bea4:	push   ebx
1000bea5:	mov    DWORD PTR [eax+0x8],eax
1000bea8:	push   ebx
1000bea9:	mov    DWORD PTR ds:0x10080db4,ebx
1000beaf:	call   DWORD PTR ds:0x10066074
1000beb5:	push   eax
1000beb6:	mov    esi,edi
1000beb8:	call   0x100049bf
1000bebd:	push   ebx
1000bebe:	push   ebx
1000bebf:	push   edi
1000bec0:	push   0x1000c4ba
1000bec5:	push   ebx
1000bec6:	push   ebx
1000bec7:	call   DWORD PTR ds:0x10066098
1000becd:	push   eax
1000bece:	mov    esi,0x10080da8
1000bed3:	call   0x100049bf
1000bed8:	mov    eax,edi
1000beda:	call   0x10059d4d
1000bedf:	ret    
1000bee0:	push   0x40
1000bee2:	mov    eax,0x100622a4
1000bee7:	call   0x10059c75
1000beec:	mov    edi,ecx
1000beee:	lea    eax,[ebp-0x30]
1000bef1:	push   eax
1000bef2:	xor    ebx,ebx
1000bef4:	mov    eax,edi
1000bef6:	mov    DWORD PTR [ebp-0x14],ebx
1000bef9:	call   0x1000b05b
1000befe:	mov    DWORD PTR [ebp-0x4],ebx
1000bf01:	push   0x1006cd08
1000bf06:	mov    esi,eax
1000bf08:	mov    DWORD PTR [ebp-0x14],0x1
1000bf0f:	call   0x100065b3
1000bf14:	test   al,al
1000bf16:	pop    ecx
1000bf17:	jne    0x1000bf25
1000bf19:	movzx  eax,WORD PTR [edi+0x34]
1000bf1d:	cmp    ax,bx
1000bf20:	mov    BYTE PTR [ebp-0xd],bl
1000bf23:	jne    0x1000bf29
1000bf25:	mov    BYTE PTR [ebp-0xd],0x1
1000bf29:	or     DWORD PTR [ebp-0x4],0xffffffff
1000bf2d:	xor    esi,esi
1000bf2f:	push   ebx
1000bf30:	inc    esi
1000bf31:	push   esi
1000bf32:	lea    ecx,[ebp-0x30]
1000bf35:	call   0x100012f4
1000bf3a:	cmp    BYTE PTR [ebp-0xd],bl
1000bf3d:	je     0x1000bf46
1000bf3f:	xor    al,al
1000bf41:	jmp    0x1000bfcb
1000bf46:	mov    DWORD PTR [ebp-0x14],ebx
1000bf49:	lea    eax,[ebp-0x14]
1000bf4c:	mov    DWORD PTR [ebp-0x4],esi
1000bf4f:	mov    esi,DWORD PTR ds:0x10080da4
1000bf55:	push   eax
1000bf56:	call   0x1000aaf2
1000bf5b:	test   eax,eax
1000bf5d:	je     0x1000bf6f
1000bf5f:	cmp    DWORD PTR [ebp-0x14],ebx
1000bf62:	je     0x1000bf3f
1000bf64:	push   DWORD PTR [ebp-0x14]
1000bf67:	call   DWORD PTR ds:0x10066094
1000bf6d:	jmp    0x1000bf3f
1000bf6f:	lea    eax,[ebp-0x4c]
1000bf72:	push   eax
1000bf73:	mov    eax,edi
1000bf75:	call   0x1000b05b
1000bf7a:	mov    BYTE PTR [ebp-0x4],0x2
1000bf7e:	movzx  ecx,WORD PTR [edi+0x34]
1000bf82:	push   0x1
1000bf84:	push   ecx
1000bf85:	push   eax
1000bf86:	call   0x1000c7d4
1000bf8b:	push   ebx
1000bf8c:	push   0x1
1000bf8e:	lea    ecx,[ebp-0x4c]
1000bf91:	mov    esi,eax
1000bf93:	call   0x100012f4
1000bf98:	cmp    esi,ebx
1000bf9a:	je     0x1000bf5f
1000bf9c:	mov    BYTE PTR [esi],bl
1000bf9e:	call   0x1002fb70
1000bfa3:	mov    ecx,eax
1000bfa5:	mov    eax,DWORD PTR [ebp+0x8]
1000bfa8:	mov    edi,edx
1000bfaa:	mov    edx,0x2710
1000bfaf:	mul    edx
1000bfb1:	add    eax,ecx
1000bfb3:	adc    edx,edi
1000bfb5:	cmp    DWORD PTR [ebp-0x14],ebx
1000bfb8:	mov    DWORD PTR [esi+0x8],eax
1000bfbb:	mov    DWORD PTR [esi+0xc],edx
1000bfbe:	je     0x1000bfc9
1000bfc0:	push   DWORD PTR [ebp-0x14]
1000bfc3:	call   DWORD PTR ds:0x10066094
1000bfc9:	mov    al,0x1
1000bfcb:	call   0x10059d4d
1000bfd0:	ret    0x4
1000bfd3:	push   ebp
1000bfd4:	mov    ebp,esp
1000bfd6:	and    esp,0xfffffff8
1000bfd9:	push   0xffffffff
1000bfdb:	push   0x10061321
1000bfe0:	mov    eax,fs:0x0
1000bfe6:	push   eax
1000bfe7:	sub    esp,0xc0
1000bfed:	mov    eax,ds:0x1007e030
1000bff2:	xor    eax,esp
1000bff4:	mov    DWORD PTR [esp+0xb8],eax
1000bffb:	push   ebx
1000bffc:	push   esi
1000bffd:	push   edi
1000bffe:	mov    eax,ds:0x1007e030
1000c003:	xor    eax,esp
1000c005:	push   eax
1000c006:	lea    eax,[esp+0xd0]
1000c00d:	mov    fs:0x0,eax
1000c013:	and    DWORD PTR [esp+0x14],0x0
1000c018:	mov    edi,ecx
1000c01a:	lea    eax,[esp+0x1c]
1000c01e:	push   eax
1000c01f:	mov    eax,edi
1000c021:	mov    DWORD PTR [esp+0x1c],edi
1000c025:	call   0x1000b05b
1000c02a:	and    DWORD PTR [esp+0xd8],0x0
1000c032:	xor    ebx,ebx
1000c034:	inc    ebx
1000c035:	push   0x1006cd08
1000c03a:	mov    esi,eax
1000c03c:	mov    DWORD PTR [esp+0x18],ebx
1000c040:	call   0x100065b3
1000c045:	test   al,al
1000c047:	pop    ecx
1000c048:	jne    0x1000c058
1000c04a:	movzx  eax,WORD PTR [edi+0x34]
1000c04e:	test   ax,ax
1000c051:	mov    BYTE PTR [esp+0x13],0x0
1000c056:	jne    0x1000c05d
1000c058:	mov    BYTE PTR [esp+0x13],0x1
1000c05d:	or     DWORD PTR [esp+0xd8],0xffffffff
1000c065:	push   0x0
1000c067:	push   ebx
1000c068:	lea    ecx,[esp+0x24]
1000c06c:	call   0x100012f4
1000c071:	cmp    BYTE PTR [esp+0x13],0x0
1000c076:	je     0x1000c07f
1000c078:	xor    al,al
1000c07a:	jmp    0x1000c266
1000c07f:	and    DWORD PTR [esp+0x14],0x0
1000c084:	lea    eax,[esp+0x14]
1000c088:	mov    DWORD PTR [esp+0xd8],ebx
1000c08f:	mov    esi,DWORD PTR ds:0x10080da4
1000c095:	push   eax
1000c096:	call   0x1000aaf2
1000c09b:	test   eax,eax
1000c09d:	je     0x1000c0b2
1000c09f:	cmp    DWORD PTR [esp+0x14],0x0
1000c0a4:	je     0x1000c078
1000c0a6:	push   DWORD PTR [esp+0x14]
1000c0aa:	call   DWORD PTR ds:0x10066094
1000c0b0:	jmp    0x1000c078
1000c0b2:	lea    eax,[esp+0x54]
1000c0b6:	push   eax
1000c0b7:	mov    eax,edi
1000c0b9:	call   0x1000b05b
1000c0be:	mov    BYTE PTR [esp+0xd8],0x2
1000c0c6:	movzx  ecx,WORD PTR [edi+0x34]
1000c0ca:	push   ecx
1000c0cb:	push   eax
1000c0cc:	lea    ecx,[esp+0xb4]
1000c0d3:	call   0x1000c77d
1000c0d8:	push   0x0
1000c0da:	push   ebx
1000c0db:	lea    ecx,[esp+0x5c]
1000c0df:	mov    BYTE PTR [esp+0xe0],0x4
1000c0e7:	call   0x100012f4
1000c0ec:	lea    eax,[esp+0xac]
1000c0f3:	push   eax
1000c0f4:	lea    eax,[esp+0x20]
1000c0f8:	mov    ebx,0x10080dac
1000c0fd:	push   eax
1000c0fe:	mov    edi,ebx
1000c100:	call   0x1000ce6d
1000c105:	mov    esi,DWORD PTR ds:0x10080db0
1000c10b:	xor    edi,edi
1000c10d:	cmp    DWORD PTR [esp+0x1c],edi
1000c111:	je     0x1000c119
1000c113:	cmp    DWORD PTR [esp+0x1c],ebx
1000c117:	je     0x1000c11e
1000c119:	call   0x100435f0
1000c11e:	cmp    DWORD PTR [esp+0x20],esi
1000c122:	jne    0x1000c21d
1000c128:	mov    DWORD PTR [esp+0x40],edi
1000c12c:	mov    DWORD PTR [esp+0x44],edi
1000c130:	mov    DWORD PTR [esp+0x48],edi
1000c134:	push   edi
1000c135:	push   DWORD PTR [ebp+0x8]
1000c138:	mov    BYTE PTR [esp+0xe0],0x5
1000c140:	push   DWORD PTR [esp+0x20]
1000c144:	lea    esi,[esp+0x28]
1000c148:	call   0x1000c728
1000c14d:	push   eax
1000c14e:	lea    eax,[esp+0x40]
1000c152:	call   0x1000cfd6
1000c157:	sub    esp,0x10
1000c15a:	mov    eax,esp
1000c15c:	mov    DWORD PTR [esp+0x28],esp
1000c160:	push   eax
1000c161:	lea    ecx,[esp+0x50]
1000c165:	call   0x1000cefb
1000c16a:	sub    esp,0x1c
1000c16d:	mov    BYTE PTR [esp+0x104],0x6
1000c175:	lea    eax,[esp+0xd8]
1000c17c:	mov    ecx,esp
1000c17e:	mov    DWORD PTR [esp+0x48],esp
1000c182:	push   eax
1000c183:	call   0x100011ab
1000c188:	lea    edi,[esp+0xac]
1000c18f:	mov    BYTE PTR [esp+0x104],0x5
1000c197:	call   0x1000d88b
1000c19c:	add    esp,0x2c
1000c19f:	mov    esi,eax
1000c1a1:	push   esi
1000c1a2:	lea    ecx,[esp+0x58]
1000c1a6:	mov    BYTE PTR [esp+0xdc],0x7
1000c1ae:	call   0x100011ab
1000c1b3:	lea    eax,[esp+0x70]
1000c1b7:	lea    ecx,[esi+0x1c]
1000c1ba:	push   eax
1000c1bb:	mov    BYTE PTR [esp+0xdc],0x8
1000c1c3:	call   0x1000cefb
1000c1c8:	lea    eax,[esp+0x54]
1000c1cc:	push   eax
1000c1cd:	lea    edi,[esp+0x20]
1000c1d1:	mov    BYTE PTR [esp+0xdc],0x9
1000c1d9:	call   0x1000cb26
1000c1de:	lea    esi,[esp+0x70]
1000c1e2:	call   0x10009816
1000c1e7:	push   0x0
1000c1e9:	push   0x1
1000c1eb:	lea    ecx,[esp+0x5c]
1000c1ef:	call   0x100012f4
1000c1f4:	lea    esi,[esp+0x9c]
1000c1fb:	call   0x10009816
1000c200:	push   0x0
1000c202:	push   0x1
1000c204:	lea    ecx,[esp+0x88]
1000c20b:	call   0x100012f4
1000c210:	lea    esi,[esp+0x3c]
1000c214:	call   0x10009816
1000c219:	xor    edi,edi
1000c21b:	jmp    0x1000c240
1000c21d:	push   edi
1000c21e:	push   DWORD PTR [ebp+0x8]
1000c221:	lea    esi,[esp+0x44]
1000c225:	push   DWORD PTR [esp+0x20]
1000c229:	call   0x1000c728
1000c22e:	push   eax
1000c22f:	lea    esi,[esp+0x20]
1000c233:	call   0x1000cedb
1000c238:	add    eax,0x1c
1000c23b:	call   0x1000cfd6
1000c240:	call   0x1000205f
1000c245:	push   edi
1000c246:	push   0x1
1000c248:	lea    ecx,[esp+0xb4]
1000c24f:	call   0x100012f4
1000c254:	cmp    DWORD PTR [esp+0x14],edi
1000c258:	je     0x1000c264
1000c25a:	push   DWORD PTR [esp+0x14]
1000c25e:	call   DWORD PTR ds:0x10066094
1000c264:	mov    al,0x1
1000c266:	mov    ecx,DWORD PTR [esp+0xd0]
1000c26d:	mov    DWORD PTR fs:0x0,ecx
1000c274:	pop    ecx
1000c275:	pop    edi
1000c276:	pop    esi
1000c277:	pop    ebx
1000c278:	mov    ecx,DWORD PTR [esp+0xb8]
1000c27f:	xor    ecx,esp
1000c281:	call   0x100430d7
1000c286:	mov    esp,ebp
1000c288:	pop    ebp
1000c289:	ret    0x4
1000c28c:	push   ebp
1000c28d:	mov    ebp,esp
1000c28f:	and    esp,0xfffffff8
1000c292:	push   0xffffffff
1000c294:	push   0x10061285
1000c299:	mov    eax,fs:0x0
1000c29f:	push   eax
1000c2a0:	sub    esp,0x60
1000c2a3:	mov    eax,ds:0x1007e030
1000c2a8:	xor    eax,esp
1000c2aa:	mov    DWORD PTR [esp+0x58],eax
1000c2ae:	push   ebx
1000c2af:	push   esi
1000c2b0:	push   edi
1000c2b1:	mov    eax,ds:0x1007e030
1000c2b6:	xor    eax,esp
1000c2b8:	push   eax
1000c2b9:	lea    eax,[esp+0x70]
1000c2bd:	mov    fs:0x0,eax
1000c2c3:	and    DWORD PTR [esp+0x14],0x0
1000c2c8:	mov    edi,ecx
1000c2ca:	lea    eax,[esp+0x30]
1000c2ce:	push   eax
1000c2cf:	mov    eax,edi
1000c2d1:	mov    DWORD PTR [esp+0x24],edi
1000c2d5:	call   0x1000b05b
1000c2da:	and    DWORD PTR [esp+0x78],0x0
1000c2df:	xor    ebx,ebx
1000c2e1:	inc    ebx
1000c2e2:	push   0x1006cd08
1000c2e7:	mov    esi,eax
1000c2e9:	mov    DWORD PTR [esp+0x18],ebx
1000c2ed:	call   0x100065b3
1000c2f2:	test   al,al
1000c2f4:	pop    ecx
1000c2f5:	jne    0x1000c305
1000c2f7:	movzx  eax,WORD PTR [edi+0x34]
1000c2fb:	test   ax,ax
1000c2fe:	mov    BYTE PTR [esp+0x13],0x0
1000c303:	jne    0x1000c30a
1000c305:	mov    BYTE PTR [esp+0x13],0x1
1000c30a:	or     DWORD PTR [esp+0x78],0xffffffff
1000c30f:	push   0x0
1000c311:	push   ebx
1000c312:	lea    ecx,[esp+0x38]
1000c316:	call   0x100012f4
1000c31b:	cmp    BYTE PTR [esp+0x13],0x0
1000c320:	je     0x1000c329
1000c322:	xor    al,al
1000c324:	jmp    0x1000c49c
1000c329:	and    DWORD PTR [esp+0x14],0x0
1000c32e:	lea    eax,[esp+0x14]
1000c332:	mov    DWORD PTR [esp+0x78],ebx
1000c336:	mov    esi,DWORD PTR ds:0x10080da4
1000c33c:	push   eax
1000c33d:	call   0x1000aaf2
1000c342:	test   eax,eax
1000c344:	je     0x1000c359
1000c346:	cmp    DWORD PTR [esp+0x14],0x0
1000c34b:	je     0x1000c322
1000c34d:	push   DWORD PTR [esp+0x14]
1000c351:	call   DWORD PTR ds:0x10066094
1000c357:	jmp    0x1000c322
1000c359:	lea    eax,[esp+0x30]
1000c35d:	push   eax
1000c35e:	mov    eax,edi
1000c360:	call   0x1000b05b
1000c365:	mov    BYTE PTR [esp+0x78],0x2
1000c36a:	movzx  ecx,WORD PTR [edi+0x34]
1000c36e:	push   ecx
1000c36f:	push   eax
1000c370:	lea    ecx,[esp+0x54]
1000c374:	call   0x1000c77d
1000c379:	push   0x0
1000c37b:	push   ebx
1000c37c:	lea    ecx,[esp+0x38]
1000c380:	mov    BYTE PTR [esp+0x80],0x4
1000c388:	call   0x100012f4
1000c38d:	lea    eax,[esp+0x4c]
1000c391:	push   eax
1000c392:	lea    eax,[esp+0x1c]
1000c396:	push   eax
1000c397:	mov    edi,0x10080dac
1000c39c:	call   0x1000ce6d
1000c3a1:	cmp    DWORD PTR [esp+0x18],0x0
1000c3a6:	mov    esi,DWORD PTR ds:0x10080db0
1000c3ac:	je     0x1000c3b4
1000c3ae:	cmp    DWORD PTR [esp+0x18],edi
1000c3b2:	je     0x1000c3b9
1000c3b4:	call   0x100435f0
1000c3b9:	cmp    DWORD PTR [esp+0x1c],esi
1000c3bd:	jne    0x1000c3d0
1000c3bf:	push   0x0
1000c3c1:	push   ebx
1000c3c2:	lea    ecx,[esp+0x54]
1000c3c6:	call   0x100012f4
1000c3cb:	jmp    0x1000c346
1000c3d0:	lea    esi,[esp+0x18]
1000c3d4:	call   0x1000cedb
1000c3d9:	mov    ebx,eax
1000c3db:	add    ebx,0x1c
1000c3de:	mov    eax,ebx
1000c3e0:	xor    edi,edi
1000c3e2:	call   0x1000cfa1
1000c3e7:	test   eax,eax
1000c3e9:	je     0x1000c408
1000c3eb:	push   edi
1000c3ec:	mov    esi,ebx
1000c3ee:	call   0x1000cfb7
1000c3f3:	mov    ecx,DWORD PTR [esp+0x20]
1000c3f7:	cmp    DWORD PTR [eax+0x10],ecx
1000c3fa:	je     0x1000c40e
1000c3fc:	mov    eax,ebx
1000c3fe:	inc    edi
1000c3ff:	call   0x1000cfa1
1000c404:	cmp    edi,eax
1000c406:	jne    0x1000c3eb
1000c408:	push   0x0
1000c40a:	push   0x1
1000c40c:	jmp    0x1000c3c2
1000c40e:	mov    esi,DWORD PTR [ebx+0x4]
1000c411:	cmp    esi,DWORD PTR [ebx+0x8]
1000c414:	jbe    0x1000c41b
1000c416:	call   0x100435f0
1000c41b:	lea    eax,[esp+0x20]
1000c41f:	push   eax
1000c420:	mov    ecx,edi
1000c422:	lea    eax,[esp+0x2c]
1000c426:	mov    DWORD PTR [esp+0x2c],ebx
1000c42a:	mov    DWORD PTR [esp+0x30],esi
1000c42e:	call   0x1000d09a
1000c433:	lea    esi,[esp+0x20]
1000c437:	call   0x1000d07d
1000c43c:	mov    edi,eax
1000c43e:	call   0x1000c762
1000c443:	push   DWORD PTR [esp+0x24]
1000c447:	lea    eax,[esp+0x2c]
1000c44b:	push   DWORD PTR [esp+0x24]
1000c44f:	push   eax
1000c450:	call   0x1000d037
1000c455:	mov    eax,ebx
1000c457:	call   0x1000cfa1
1000c45c:	test   eax,eax
1000c45e:	jne    0x1000c477
1000c460:	push   DWORD PTR [esp+0x1c]
1000c464:	lea    eax,[esp+0x2c]
1000c468:	push   DWORD PTR [esp+0x1c]
1000c46c:	push   eax
1000c46d:	push   0x10080dac
1000c472:	call   0x1000cbcd
1000c477:	call   0x1000205f
1000c47c:	push   0x0
1000c47e:	push   0x1
1000c480:	lea    ecx,[esp+0x54]
1000c484:	call   0x100012f4
1000c489:	cmp    DWORD PTR [esp+0x14],0x0
1000c48e:	je     0x1000c49a
1000c490:	push   DWORD PTR [esp+0x14]
1000c494:	call   DWORD PTR ds:0x10066094
1000c49a:	mov    al,0x1
1000c49c:	mov    ecx,DWORD PTR [esp+0x70]
1000c4a0:	mov    DWORD PTR fs:0x0,ecx
1000c4a7:	pop    ecx
1000c4a8:	pop    edi
1000c4a9:	pop    esi
1000c4aa:	pop    ebx
1000c4ab:	mov    ecx,DWORD PTR [esp+0x58]
1000c4af:	xor    ecx,esp
1000c4b1:	call   0x100430d7
1000c4b6:	mov    esp,ebp
1000c4b8:	pop    ebp
1000c4b9:	ret    
1000c4ba:	push   ebp
1000c4bb:	mov    ebp,esp
1000c4bd:	and    esp,0xfffffff8
1000c4c0:	push   0xffffffff
1000c4c2:	push   0x10061239
1000c4c7:	mov    eax,fs:0x0
1000c4cd:	push   eax
1000c4ce:	sub    esp,0xc
1000c4d1:	push   esi
1000c4d2:	push   edi
1000c4d3:	mov    eax,ds:0x1007e030
1000c4d8:	xor    eax,esp
1000c4da:	push   eax
1000c4db:	lea    eax,[esp+0x18]
1000c4df:	mov    fs:0x0,eax
1000c4e5:	lea    eax,[esp+0x13]
1000c4e9:	push   eax
1000c4ea:	call   0x10037b40
1000c4ef:	and    DWORD PTR [esp+0x20],0x0
1000c4f4:	mov    esi,DWORD PTR ds:0x10066084
1000c4fa:	mov    edi,0x7d0
1000c4ff:	jmp    0x1000c509
1000c501:	mov    ecx,DWORD PTR [ebp+0x8]
1000c504:	call   0x1000c531
1000c509:	push   edi
1000c50a:	push   DWORD PTR ds:0x10080fa0
1000c510:	call   esi
1000c512:	test   eax,eax
1000c514:	jne    0x1000c501
1000c516:	call   0x10037b60
1000c51b:	xor    eax,eax
1000c51d:	mov    ecx,DWORD PTR [esp+0x18]
1000c521:	mov    DWORD PTR fs:0x0,ecx
1000c528:	pop    ecx
1000c529:	pop    edi
1000c52a:	pop    esi
1000c52b:	mov    esp,ebp
1000c52d:	pop    ebp
1000c52e:	ret    0x4
1000c531:	push   0x14c
1000c536:	mov    eax,0x10061216
1000c53b:	call   0x10059c75
1000c540:	mov    edi,ecx
1000c542:	call   0x1002fb70
1000c547:	xor    ebx,ebx
1000c549:	mov    DWORD PTR [ebp-0x30],eax
1000c54c:	mov    DWORD PTR [ebp-0x2c],edx
1000c54f:	mov    DWORD PTR [ebp-0x18],ebx
1000c552:	lea    eax,[ebp-0x18]
1000c555:	mov    DWORD PTR [ebp-0x4],ebx
1000c558:	mov    esi,DWORD PTR [edi]
1000c55a:	push   eax
1000c55b:	call   0x1000aaf2
1000c560:	test   eax,eax
1000c562:	je     0x1000c56c
1000c564:	cmp    DWORD PTR [ebp-0x18],ebx
1000c567:	jmp    0x1000c717
1000c56c:	mov    eax,DWORD PTR [edi+0xc]
1000c56f:	mov    eax,DWORD PTR [eax]
1000c571:	add    edi,0x8
1000c574:	mov    DWORD PTR [ebp-0x28],edi
1000c577:	mov    DWORD PTR [ebp-0x20],edi
1000c57a:	mov    DWORD PTR [ebp-0x1c],eax
1000c57d:	cmp    DWORD PTR [ebp-0x20],0x0
1000c581:	mov    esi,DWORD PTR [edi+0x4]
1000c584:	je     0x1000c58b
1000c586:	cmp    DWORD PTR [ebp-0x20],edi
1000c589:	je     0x1000c590
1000c58b:	call   0x100435f0
1000c590:	cmp    DWORD PTR [ebp-0x1c],esi
1000c593:	je     0x1000c713
1000c599:	lea    esi,[ebp-0x20]
1000c59c:	call   0x1000cedb
1000c5a1:	mov    ebx,eax
1000c5a3:	mov    esi,DWORD PTR [ebx+0x20]
1000c5a6:	add    ebx,0x1c
1000c5a9:	cmp    esi,DWORD PTR [ebx+0x8]
1000c5ac:	jbe    0x1000c5b3
1000c5ae:	call   0x100435f0
1000c5b3:	mov    DWORD PTR [ebp-0x14],ebx
1000c5b6:	mov    DWORD PTR [ebp-0x10],esi
1000c5b9:	mov    esi,DWORD PTR [ebx+0x8]
1000c5bc:	cmp    DWORD PTR [ebx+0x4],esi
1000c5bf:	jbe    0x1000c5c6
1000c5c1:	call   0x100435f0
1000c5c6:	cmp    DWORD PTR [ebp-0x14],0x0
1000c5ca:	je     0x1000c5d1
1000c5cc:	cmp    DWORD PTR [ebp-0x14],ebx
1000c5cf:	je     0x1000c5d6
1000c5d1:	call   0x100435f0
1000c5d6:	cmp    DWORD PTR [ebp-0x10],esi
1000c5d9:	je     0x1000c6d8
1000c5df:	lea    esi,[ebp-0x14]
1000c5e2:	call   0x1000d07d
1000c5e7:	cmp    BYTE PTR [eax],0x0
1000c5ea:	jne    0x1000c633
1000c5ec:	call   0x1000d07d
1000c5f1:	mov    ecx,DWORD PTR [eax+0xc]
1000c5f4:	cmp    ecx,DWORD PTR [ebp-0x2c]
1000c5f7:	ja     0x1000c633
1000c5f9:	jb     0x1000c603
1000c5fb:	mov    eax,DWORD PTR [eax+0x8]
1000c5fe:	cmp    eax,DWORD PTR [ebp-0x30]
1000c601:	jae    0x1000c633
1000c603:	call   0x1000205f
1000c608:	lea    esi,[ebp-0x14]
1000c60b:	call   0x1000d07d
1000c610:	mov    edi,eax
1000c612:	call   0x1000c762
1000c617:	lea    eax,[ebp-0x50]
1000c61a:	push   DWORD PTR [ebp-0x10]
1000c61d:	push   DWORD PTR [ebp-0x14]
1000c620:	push   eax
1000c621:	call   0x1000d037
1000c626:	mov    ecx,DWORD PTR [eax]
1000c628:	mov    eax,DWORD PTR [eax+0x4]
1000c62b:	mov    DWORD PTR [ebp-0x14],ecx
1000c62e:	mov    DWORD PTR [ebp-0x10],eax
1000c631:	jmp    0x1000c5b9
1000c633:	lea    esi,[ebp-0x14]
1000c636:	call   0x1000d07d
1000c63b:	cmp    BYTE PTR [eax],0x0
1000c63e:	jne    0x1000c6b6
1000c640:	call   0x1000d07d
1000c645:	mov    esi,DWORD PTR [eax+0x10]
1000c648:	mov    eax,DWORD PTR [esi+0x8]
1000c64b:	and    DWORD PTR [ebp-0x38],0x0
1000c64f:	mov    DWORD PTR [ebp-0x154],eax
1000c655:	xor    eax,eax
1000c657:	lea    edi,[ebp-0x34]
1000c65a:	stos   DWORD PTR es:[edi],eax
1000c65b:	lea    eax,[ebp-0x38]
1000c65e:	push   eax
1000c65f:	xor    eax,eax
1000c661:	push   eax
1000c662:	push   eax
1000c663:	lea    ecx,[ebp-0x158]
1000c669:	push   ecx
1000c66a:	push   eax
1000c66b:	mov    DWORD PTR [ebp-0x158],0x1
1000c675:	call   DWORD PTR ds:0x100663ec
1000c67b:	cmp    eax,0x1
1000c67e:	jne    0x1000c6b6
1000c680:	mov    esi,DWORD PTR [esi+0x8]
1000c683:	push   0x2
1000c685:	push   eax
1000c686:	lea    eax,[ebp-0x21]
1000c689:	push   eax
1000c68a:	push   esi
1000c68b:	call   DWORD PTR ds:0x100663c8
1000c691:	test   eax,eax
1000c693:	setne  al
1000c696:	test   al,al
1000c698:	jne    0x1000c6b6
1000c69a:	call   0x1000205f
1000c69f:	lea    esi,[ebp-0x14]
1000c6a2:	call   0x1000d07d
1000c6a7:	mov    edi,eax
1000c6a9:	call   0x1000c762
1000c6ae:	lea    eax,[ebp-0x40]
1000c6b1:	jmp    0x1000c61a
1000c6b6:	mov    esi,DWORD PTR [ebp-0x14]
1000c6b9:	test   esi,esi
1000c6bb:	jne    0x1000c6c2
1000c6bd:	call   0x100435f0
1000c6c2:	mov    eax,DWORD PTR [ebp-0x10]
1000c6c5:	cmp    eax,DWORD PTR [esi+0x8]
1000c6c8:	jb     0x1000c6cf
1000c6ca:	call   0x100435f0
1000c6cf:	add    DWORD PTR [ebp-0x10],0x18
1000c6d3:	jmp    0x1000c5b9
1000c6d8:	mov    eax,ebx
1000c6da:	call   0x1000cfa1
1000c6df:	test   eax,eax
1000c6e1:	jne    0x1000c703
1000c6e3:	push   DWORD PTR [ebp-0x1c]
1000c6e6:	mov    edi,DWORD PTR [ebp-0x28]
1000c6e9:	push   DWORD PTR [ebp-0x20]
1000c6ec:	lea    eax,[ebp-0x48]
1000c6ef:	push   eax
1000c6f0:	push   edi
1000c6f1:	call   0x1000cbcd
1000c6f6:	mov    ecx,DWORD PTR [eax]
1000c6f8:	mov    eax,DWORD PTR [eax+0x4]
1000c6fb:	mov    DWORD PTR [ebp-0x20],ecx
1000c6fe:	jmp    0x1000c57a
1000c703:	lea    esi,[ebp-0x20]
1000c706:	call   0x10009c5c
1000c70b:	mov    edi,DWORD PTR [ebp-0x28]
1000c70e:	jmp    0x1000c57d
1000c713:	cmp    DWORD PTR [ebp-0x18],0x0
1000c717:	je     0x1000c722
1000c719:	push   DWORD PTR [ebp-0x18]
1000c71c:	call   DWORD PTR ds:0x10066094
1000c722:	call   0x10059d4d
1000c727:	ret    
1000c728:	push   ebx
1000c729:	push   edi
1000c72a:	mov    BYTE PTR [esi],0x0
1000c72d:	call   0x1002fb70
1000c732:	push   0x0
1000c734:	push   0x2710
1000c739:	push   DWORD PTR [esp+0x1c]
1000c73d:	mov    edi,eax
1000c73f:	push   DWORD PTR [esp+0x1c]
1000c743:	mov    ebx,edx
1000c745:	call   0x1004f6a0
1000c74a:	add    eax,edi
1000c74c:	mov    DWORD PTR [esi+0x8],eax
1000c74f:	mov    eax,DWORD PTR [esp+0xc]
1000c753:	adc    edx,ebx
1000c755:	pop    edi
1000c756:	mov    DWORD PTR [esi+0x10],eax
1000c759:	mov    DWORD PTR [esi+0xc],edx
1000c75c:	mov    eax,esi
1000c75e:	pop    ebx
1000c75f:	ret    0xc
1000c762:	push   esi
1000c763:	mov    esi,DWORD PTR [edi+0x10]
1000c766:	test   esi,esi
1000c768:	je     0x1000c77b
1000c76a:	push   esi
1000c76b:	call   0x1000c88c
1000c770:	push   esi
1000c771:	call   0x100430d2
1000c776:	and    DWORD PTR [edi+0x10],0x0
1000c77a:	pop    ecx
1000c77b:	pop    esi
1000c77c:	ret    
1000c77d:	push   0x50
1000c77f:	mov    eax,0x100611e9
1000c784:	call   0x10059cde
1000c789:	mov    eax,DWORD PTR [ebp+0x8]
1000c78c:	and    DWORD PTR [ebp-0x4],0x0
1000c790:	and    DWORD PTR [ebp-0x58],0x0
1000c794:	mov    esi,ecx
1000c796:	push   eax
1000c797:	mov    DWORD PTR [ebp-0x5c],esi
1000c79a:	call   0x100011ab
1000c79f:	and    DWORD PTR [ebp-0x4],0x0
1000c7a3:	xor    ebx,ebx
1000c7a5:	inc    ebx
1000c7a6:	push   0x3a
1000c7a8:	mov    DWORD PTR [ebp-0x58],ebx
1000c7ab:	call   0x1000d10e
1000c7b0:	push   0xa
1000c7b2:	lea    eax,[ebp-0x54]
1000c7b5:	push   eax
1000c7b6:	movzx  eax,WORD PTR [ebp+0xc]
1000c7ba:	push   eax
1000c7bb:	call   0x10045d96
1000c7c0:	add    esp,0xc
1000c7c3:	push   eax
1000c7c4:	push   esi
1000c7c5:	call   0x10004120
1000c7ca:	mov    eax,esi
1000c7cc:	call   0x10059d61
1000c7d1:	ret    0x8
1000c7d4:	push   0x28
1000c7d6:	mov    eax,0x10062256
1000c7db:	call   0x10059cde
1000c7e0:	push   DWORD PTR [ebp+0xc]
1000c7e3:	lea    ecx,[ebp-0x2c]
1000c7e6:	push   DWORD PTR [ebp+0x8]
1000c7e9:	call   0x1000c77d
1000c7ee:	and    DWORD PTR [ebp-0x4],0x0
1000c7f2:	lea    eax,[ebp-0x2c]
1000c7f5:	push   eax
1000c7f6:	lea    eax,[ebp-0x34]
1000c7f9:	push   eax
1000c7fa:	mov    edi,0x10080dac
1000c7ff:	call   0x1000ce6d
1000c804:	cmp    DWORD PTR [ebp-0x34],0x0
1000c808:	mov    esi,DWORD PTR ds:0x10080db0
1000c80e:	je     0x1000c815
1000c810:	cmp    DWORD PTR [ebp-0x34],edi
1000c813:	je     0x1000c81a
1000c815:	call   0x100435f0
1000c81a:	cmp    DWORD PTR [ebp-0x30],esi
1000c81d:	jne    0x1000c837
1000c81f:	xor    esi,esi
1000c821:	push   0x0
1000c823:	push   0x1
1000c825:	lea    ecx,[ebp-0x2c]
1000c828:	call   0x100012f4
1000c82d:	mov    eax,esi
1000c82f:	call   0x10059d61
1000c834:	ret    0xc
1000c837:	lea    esi,[ebp-0x34]
1000c83a:	call   0x1000cedb
1000c83f:	mov    esi,eax
1000c841:	add    esi,0x1c
1000c844:	mov    eax,esi
1000c846:	xor    edi,edi
1000c848:	call   0x1000cfa1
1000c84d:	test   eax,eax
1000c84f:	je     0x1000c81f
1000c851:	push   edi
1000c852:	call   0x1000cfb7
1000c857:	mov    al,BYTE PTR [eax]
1000c859:	cmp    al,BYTE PTR [ebp+0x10]
1000c85c:	je     0x1000c86c
1000c85e:	mov    eax,esi
1000c860:	inc    edi
1000c861:	call   0x1000cfa1
1000c866:	cmp    edi,eax
1000c868:	jne    0x1000c851
1000c86a:	jmp    0x1000c81f
1000c86c:	push   edi
1000c86d:	call   0x1000cfb7
1000c872:	mov    esi,eax
1000c874:	jmp    0x1000c821
1000c876:	push   esi
1000c877:	lea    esi,[edi+0x1c]
1000c87a:	call   0x10009816
1000c87f:	push   0x0
1000c881:	push   0x1
1000c883:	mov    ecx,edi
1000c885:	call   0x100012f4
1000c88a:	pop    esi
1000c88b:	ret    
1000c88c:	push   0x0
1000c88e:	mov    eax,0x100611b5
1000c893:	call   0x10059c75
1000c898:	mov    esi,DWORD PTR [ebp+0x8]
1000c89b:	xor    edi,edi
1000c89d:	push   edi
1000c89e:	push   0x1
1000c8a0:	lea    ecx,[esi+0x38]
1000c8a3:	mov    DWORD PTR [ebp-0x4],0x3
1000c8aa:	call   0x100012f4
1000c8af:	push   edi
1000c8b0:	push   0x1
1000c8b2:	lea    ecx,[esi+0x18]
1000c8b5:	call   0x100012f4
1000c8ba:	push   DWORD PTR [esi+0x14]
1000c8bd:	call   0x100430d2
1000c8c2:	pop    ecx
1000c8c3:	lea    eax,[esi+0x10]
1000c8c6:	call   0x1000cad8
1000c8cb:	mov    BYTE PTR [ebp-0x4],0x2
1000c8cf:	mov    ecx,DWORD PTR [esi+0xc]
1000c8d2:	cmp    ecx,edi
1000c8d4:	je     0x1000c8dc
1000c8d6:	mov    eax,DWORD PTR [ecx]
1000c8d8:	push   0x1
1000c8da:	call   DWORD PTR [eax]
1000c8dc:	mov    eax,DWORD PTR [esi+0x8]
1000c8df:	cmp    eax,edi
1000c8e1:	je     0x1000c8ea
1000c8e3:	push   eax
1000c8e4:	call   DWORD PTR ds:0x100663b8
1000c8ea:	mov    DWORD PTR [esi+0x8],edi
1000c8ed:	mov    eax,DWORD PTR [esi+0x4]
1000c8f0:	cmp    eax,edi
1000c8f2:	je     0x1000c8fb
1000c8f4:	push   eax
1000c8f5:	call   DWORD PTR ds:0x100663d4
1000c8fb:	mov    DWORD PTR [esi+0x4],edi
1000c8fe:	mov    eax,DWORD PTR [esi]
1000c900:	cmp    eax,edi
1000c902:	je     0x1000c90b
1000c904:	push   eax
1000c905:	call   DWORD PTR ds:0x10066070
1000c90b:	mov    DWORD PTR [esi],edi
1000c90d:	call   0x10059d4d
1000c912:	ret    0x4
1000c915:	push   0x10
1000c917:	mov    eax,0x10064a48
1000c91c:	call   0x10059c75
1000c921:	xor    ebx,ebx
1000c923:	mov    DWORD PTR [ebp-0x18],ebx
1000c926:	mov    DWORD PTR [ebp-0x14],ebx
1000c929:	mov    DWORD PTR [ebp-0x4],0x1
1000c930:	mov    DWORD PTR [ebp-0x10],ebx
1000c933:	lea    eax,[ebp-0x10]
1000c936:	mov    BYTE PTR [ebp-0x4],0x2
1000c93a:	mov    esi,DWORD PTR ds:0x10080da4
1000c940:	push   eax
1000c941:	call   0x1000aaf2
1000c946:	test   eax,eax
1000c948:	je     0x1000c95e
1000c94a:	mov    BYTE PTR [ebp-0x4],0x1
1000c94e:	cmp    DWORD PTR [ebp-0x10],ebx
1000c951:	je     0x1000c993
1000c953:	push   DWORD PTR [ebp-0x10]
1000c956:	call   DWORD PTR ds:0x10066094
1000c95c:	jmp    0x1000c993
1000c95e:	push   ebx
1000c95f:	push   DWORD PTR [ebp+0x10]
1000c962:	push   DWORD PTR [ebp+0xc]
1000c965:	call   0x1000c7d4
1000c96a:	mov    esi,eax
1000c96c:	cmp    esi,ebx
1000c96e:	je     0x1000c94a
1000c970:	mov    BYTE PTR [esi],0x1
1000c973:	call   0x1000205f
1000c978:	mov    esi,DWORD PTR [esi+0x10]
1000c97b:	mov    BYTE PTR [ebp-0x4],0x1
1000c97f:	cmp    DWORD PTR [ebp-0x10],ebx
1000c982:	je     0x1000c98d
1000c984:	push   DWORD PTR [ebp-0x10]
1000c987:	call   DWORD PTR ds:0x10066094
1000c98d:	cmp    esi,ebx
1000c98f:	mov    edi,esi
1000c991:	jne    0x1000c9af
1000c993:	push   0x5c
1000c995:	call   0x100436de
1000c99a:	cmp    eax,ebx
1000c99c:	pop    ecx
1000c99d:	je     0x1000c9a8
1000c99f:	mov    edi,eax
1000c9a1:	call   0x1000ac40
1000c9a6:	jmp    0x1000c9aa
1000c9a8:	xor    eax,eax
1000c9aa:	mov    DWORD PTR [ebp-0x14],eax
1000c9ad:	mov    edi,eax
1000c9af:	push   DWORD PTR [ebp+0x24]
1000c9b2:	mov    ecx,DWORD PTR [ebp+0x28]
1000c9b5:	push   DWORD PTR [ebp+0x18]
1000c9b8:	lea    eax,[ebp-0x10]
1000c9bb:	push   DWORD PTR [ebp+0x14]
1000c9be:	mov    edx,edi
1000c9c0:	push   DWORD PTR [ebp+0x10]
1000c9c3:	push   DWORD PTR [ebp+0xc]
1000c9c6:	push   eax
1000c9c7:	call   0x1000aeab
1000c9cc:	mov    ecx,DWORD PTR [eax]
1000c9ce:	mov    esi,ecx
1000c9d0:	mov    DWORD PTR [eax],ebx
1000c9d2:	mov    DWORD PTR [ebp-0x1c],esi
1000c9d5:	mov    BYTE PTR [ebp-0x4],0x3
1000c9d9:	push   DWORD PTR [ebp-0x10]
1000c9dc:	call   0x100430d2
1000c9e1:	cmp    esi,ebx
1000c9e3:	pop    ecx
1000c9e4:	jne    0x1000ca17
1000c9e6:	mov    esi,DWORD PTR [ebp-0x14]
1000c9e9:	cmp    esi,ebx
1000c9eb:	jne    0x1000c9f4
1000c9ed:	mov    ecx,edi
1000c9ef:	call   0x1000c28c
1000c9f4:	mov    edi,DWORD PTR [ebp+0x8]
1000c9f7:	mov    DWORD PTR [edi],ebx
1000c9f9:	push   ebx
1000c9fa:	mov    DWORD PTR [ebp-0x18],0x1
1000ca01:	call   0x100430d2
1000ca06:	cmp    esi,ebx
1000ca08:	pop    ecx
1000ca09:	mov    BYTE PTR [ebp-0x4],bl
1000ca0c:	je     0x1000ca6f
1000ca0e:	push   esi
1000ca0f:	call   0x1000c88c
1000ca14:	push   esi
1000ca15:	jmp    0x1000ca69
1000ca17:	mov    al,BYTE PTR [edi+0x58]
1000ca1a:	neg    al
1000ca1c:	mov    ecx,edi
1000ca1e:	sbb    eax,eax
1000ca20:	and    eax,0x3a98
1000ca25:	add    eax,0x1388
1000ca2a:	cmp    DWORD PTR [ebp-0x14],ebx
1000ca2d:	push   eax
1000ca2e:	je     0x1000ca3e
1000ca30:	call   0x1000bfd3
1000ca35:	test   al,al
1000ca37:	je     0x1000ca43
1000ca39:	mov    DWORD PTR [ebp-0x14],ebx
1000ca3c:	jmp    0x1000ca43
1000ca3e:	call   0x1000bee0
1000ca43:	mov    edi,DWORD PTR [ebp+0x8]
1000ca46:	push   ebx
1000ca47:	mov    DWORD PTR [edi],esi
1000ca49:	mov    DWORD PTR [ebp-0x18],0x1
1000ca50:	call   0x100430d2
1000ca55:	mov    BYTE PTR [ebp-0x4],bl
1000ca58:	cmp    DWORD PTR [ebp-0x14],ebx
1000ca5b:	pop    ecx
1000ca5c:	je     0x1000ca6f
1000ca5e:	push   DWORD PTR [ebp-0x14]
1000ca61:	call   0x1000c88c
1000ca66:	push   DWORD PTR [ebp-0x14]
1000ca69:	call   0x100430d2
1000ca6e:	pop    ecx
1000ca6f:	mov    eax,edi
1000ca71:	call   0x10059d4d
1000ca76:	ret    
1000ca77:	push   DWORD PTR [esp+0x8]
1000ca7b:	call   0x10043250
1000ca80:	pop    ecx
1000ca81:	push   eax
1000ca82:	push   DWORD PTR [esp+0xc]
1000ca86:	mov    eax,DWORD PTR [esp+0x14]
1000ca8a:	push   DWORD PTR [esp+0xc]
1000ca8e:	call   0x1000d182
1000ca93:	ret    0xc
1000ca96:	push   ebp
1000ca97:	mov    ebp,esp
1000ca99:	push   ecx
1000ca9a:	and    DWORD PTR [ebp-0x4],0x0
1000ca9e:	push   esi
1000ca9f:	push   DWORD PTR [ebp+0x10]
1000caa2:	mov    esi,eax
1000caa4:	push   DWORD PTR [ebp+0xc]
1000caa7:	push   DWORD PTR [ebp+0x8]
1000caaa:	call   0x1000d0e6
1000caaf:	mov    eax,esi
1000cab1:	pop    esi
1000cab2:	leave  
1000cab3:	ret    0xc
1000cab6:	mov    eax,DWORD PTR [esi]
1000cab8:	test   eax,eax
1000caba:	je     0x1000cac3
1000cabc:	push   eax
1000cabd:	call   DWORD PTR ds:0x100663d4
1000cac3:	and    DWORD PTR [esi],0x0
1000cac6:	ret    
1000cac7:	mov    eax,DWORD PTR [esi]
1000cac9:	test   eax,eax
1000cacb:	je     0x1000cad4
1000cacd:	push   eax
1000cace:	call   DWORD PTR ds:0x100663b8
1000cad4:	and    DWORD PTR [esi],0x0
1000cad7:	ret    
1000cad8:	push   esi
1000cad9:	mov    esi,DWORD PTR [eax]
1000cadb:	test   esi,esi
1000cadd:	je     0x1000caed
1000cadf:	mov    eax,esi
1000cae1:	call   0x1000dcca
1000cae6:	push   esi
1000cae7:	call   0x100430d2
1000caec:	pop    ecx
1000caed:	pop    esi
1000caee:	ret    
1000caef:	jmp    0x1000d21e
1000caf4:	mov    ecx,DWORD PTR [eax+0x4]
1000caf7:	test   ecx,ecx
1000caf9:	jne    0x1000cafe
1000cafb:	xor    eax,eax
1000cafd:	ret    
1000cafe:	mov    eax,DWORD PTR [eax+0x8]
1000cb01:	sub    eax,ecx
1000cb03:	sar    eax,0x4
1000cb06:	ret    
1000cb07:	mov    eax,esi
1000cb09:	call   0x1000caf4
1000cb0e:	cmp    DWORD PTR [esp+0x4],eax
1000cb12:	jb     0x1000cb19
1000cb14:	call   0x100435f0
1000cb19:	mov    eax,DWORD PTR [esp+0x4]
1000cb1d:	shl    eax,0x4
1000cb20:	add    eax,DWORD PTR [esi+0x4]
1000cb23:	ret    0x4
1000cb26:	push   ebp
1000cb27:	mov    ebp,esp
1000cb29:	sub    esp,0x18
1000cb2c:	mov    eax,DWORD PTR [ebx+0x4]
1000cb2f:	push   esi
1000cb30:	mov    esi,DWORD PTR [eax+0x4]
1000cb33:	mov    DWORD PTR [ebp-0x8],eax
1000cb36:	mov    al,0x1
1000cb38:	mov    BYTE PTR [ebp-0xc],al
1000cb3b:	jmp    0x1000cb59
1000cb3d:	mov    eax,DWORD PTR [ebp+0x8]
1000cb40:	lea    ecx,[esi+0xc]
1000cb43:	mov    DWORD PTR [ebp-0x8],esi
1000cb46:	call   0x10004ea2
1000cb4b:	test   al,al
1000cb4d:	mov    BYTE PTR [ebp-0xc],al
1000cb50:	je     0x1000cb56
1000cb52:	mov    esi,DWORD PTR [esi]
1000cb54:	jmp    0x1000cb59
1000cb56:	mov    esi,DWORD PTR [esi+0x8]
1000cb59:	cmp    BYTE PTR [esi+0x39],0x0
1000cb5d:	je     0x1000cb3d
1000cb5f:	test   al,al
1000cb61:	mov    ecx,DWORD PTR [ebp-0x8]
1000cb64:	mov    esi,ecx
1000cb66:	mov    DWORD PTR [ebp-0x10],esi
1000cb69:	mov    DWORD PTR [ebp-0x14],ebx
1000cb6c:	je     0x1000cba0
1000cb6e:	mov    eax,DWORD PTR [ebx+0x4]
1000cb71:	cmp    ecx,DWORD PTR [eax]
1000cb73:	jne    0x1000cb95
1000cb75:	push   DWORD PTR [ebp+0x8]
1000cb78:	push   0x1
1000cb7a:	lea    eax,[ebp-0x14]
1000cb7d:	push   eax
1000cb7e:	mov    esi,ebx
1000cb80:	call   0x1000d243
1000cb85:	mov    ecx,DWORD PTR [eax]
1000cb87:	mov    eax,DWORD PTR [eax+0x4]
1000cb8a:	mov    DWORD PTR [edi],ecx
1000cb8c:	mov    DWORD PTR [edi+0x4],eax
1000cb8f:	mov    BYTE PTR [edi+0x8],0x1
1000cb93:	jmp    0x1000cbc6
1000cb95:	lea    esi,[ebp-0x14]
1000cb98:	call   0x1000a1e1
1000cb9d:	mov    esi,DWORD PTR [ebp-0x10]
1000cba0:	mov    ecx,DWORD PTR [ebp+0x8]
1000cba3:	lea    eax,[esi+0xc]
1000cba6:	call   0x10004ea2
1000cbab:	test   al,al
1000cbad:	je     0x1000cbba
1000cbaf:	push   DWORD PTR [ebp+0x8]
1000cbb2:	mov    ecx,DWORD PTR [ebp-0x8]
1000cbb5:	push   DWORD PTR [ebp-0xc]
1000cbb8:	jmp    0x1000cb7a
1000cbba:	mov    eax,DWORD PTR [ebp-0x14]
1000cbbd:	mov    DWORD PTR [edi],eax
1000cbbf:	mov    DWORD PTR [edi+0x4],esi
1000cbc2:	mov    BYTE PTR [edi+0x8],0x0
1000cbc6:	mov    eax,edi
1000cbc8:	pop    esi
1000cbc9:	leave  
1000cbca:	ret    0x4
1000cbcd:	push   0x44
1000cbcf:	mov    eax,0x10060338
1000cbd4:	call   0x10059c75
1000cbd9:	mov    edi,DWORD PTR [ebp+0x14]
1000cbdc:	cmp    BYTE PTR [edi+0x39],0x0
1000cbe0:	je     0x1000cc14
1000cbe2:	push   0x1006ccec
1000cbe7:	lea    ecx,[ebp-0x28]
1000cbea:	call   0x100011d1
1000cbef:	and    DWORD PTR [ebp-0x4],0x0
1000cbf3:	lea    eax,[ebp-0x28]
1000cbf6:	push   eax
1000cbf7:	lea    ecx,[ebp-0x50]
1000cbfa:	call   0x1000106e
1000cbff:	push   0x10074de0
1000cc04:	lea    eax,[ebp-0x50]
1000cc07:	push   eax
1000cc08:	mov    DWORD PTR [ebp-0x50],0x1006b978
1000cc0f:	call   0x10047c54
1000cc14:	lea    esi,[ebp+0x10]
1000cc17:	call   0x10009c5c
1000cc1c:	mov    ecx,DWORD PTR [edi]
1000cc1e:	cmp    BYTE PTR [ecx+0x39],0x0
1000cc22:	je     0x1000cc29
1000cc24:	mov    ebx,DWORD PTR [edi+0x8]
1000cc27:	jmp    0x1000cc40
1000cc29:	mov    eax,DWORD PTR [edi+0x8]
1000cc2c:	cmp    BYTE PTR [eax+0x39],0x0
1000cc30:	je     0x1000cc36
1000cc32:	mov    ebx,ecx
1000cc34:	jmp    0x1000cc40
1000cc36:	mov    eax,DWORD PTR [ebp+0x14]
1000cc39:	cmp    eax,edi
1000cc3b:	mov    ebx,DWORD PTR [eax+0x8]
1000cc3e:	jne    0x1000ccb6
1000cc40:	cmp    BYTE PTR [ebx+0x39],0x0
1000cc44:	mov    esi,DWORD PTR [edi+0x4]
1000cc47:	jne    0x1000cc4c
1000cc49:	mov    DWORD PTR [ebx+0x4],esi
1000cc4c:	mov    ecx,DWORD PTR [ebp+0x8]
1000cc4f:	mov    eax,DWORD PTR [ecx+0x4]
1000cc52:	cmp    DWORD PTR [eax+0x4],edi
1000cc55:	jne    0x1000cc5c
1000cc57:	mov    DWORD PTR [eax+0x4],ebx
1000cc5a:	jmp    0x1000cc67
1000cc5c:	cmp    DWORD PTR [esi],edi
1000cc5e:	jne    0x1000cc64
1000cc60:	mov    DWORD PTR [esi],ebx
1000cc62:	jmp    0x1000cc67
1000cc64:	mov    DWORD PTR [esi+0x8],ebx
1000cc67:	mov    edx,DWORD PTR [ecx+0x4]
1000cc6a:	cmp    DWORD PTR [edx],edi
1000cc6c:	jne    0x1000cc8a
1000cc6e:	cmp    BYTE PTR [ebx+0x39],0x0
1000cc72:	je     0x1000cc78
1000cc74:	mov    ecx,esi
1000cc76:	jmp    0x1000cc88
1000cc78:	mov    eax,DWORD PTR [ebx]
1000cc7a:	mov    ecx,ebx
1000cc7c:	jmp    0x1000cc82
1000cc7e:	mov    ecx,eax
1000cc80:	mov    eax,DWORD PTR [ecx]
1000cc82:	cmp    BYTE PTR [eax+0x39],0x0
1000cc86:	je     0x1000cc7e
1000cc88:	mov    DWORD PTR [edx],ecx
1000cc8a:	mov    eax,DWORD PTR [ebp+0x8]
1000cc8d:	mov    edx,DWORD PTR [eax+0x4]
1000cc90:	cmp    DWORD PTR [edx+0x8],edi
1000cc93:	jne    0x1000cd10
1000cc95:	cmp    BYTE PTR [ebx+0x39],0x0
1000cc99:	je     0x1000cc9f
1000cc9b:	mov    ecx,esi
1000cc9d:	jmp    0x1000ccb1
1000cc9f:	mov    eax,DWORD PTR [ebx+0x8]
1000cca2:	mov    ecx,ebx
1000cca4:	jmp    0x1000ccab
1000cca6:	mov    ecx,eax
1000cca8:	mov    eax,DWORD PTR [ecx+0x8]
1000ccab:	cmp    BYTE PTR [eax+0x39],0x0
1000ccaf:	je     0x1000cca6
1000ccb1:	mov    DWORD PTR [edx+0x8],ecx
1000ccb4:	jmp    0x1000cd10
1000ccb6:	mov    DWORD PTR [ecx+0x4],eax
1000ccb9:	mov    ecx,DWORD PTR [edi]
1000ccbb:	mov    DWORD PTR [eax],ecx
1000ccbd:	cmp    eax,DWORD PTR [edi+0x8]
1000ccc0:	jne    0x1000ccc6
1000ccc2:	mov    esi,eax
1000ccc4:	jmp    0x1000cce0
1000ccc6:	cmp    BYTE PTR [ebx+0x39],0x0
1000ccca:	mov    esi,DWORD PTR [eax+0x4]
1000cccd:	jne    0x1000ccd2
1000cccf:	mov    DWORD PTR [ebx+0x4],esi
1000ccd2:	mov    DWORD PTR [esi],ebx
1000ccd4:	mov    ecx,DWORD PTR [edi+0x8]
1000ccd7:	mov    DWORD PTR [eax+0x8],ecx
1000ccda:	mov    ecx,DWORD PTR [edi+0x8]
1000ccdd:	mov    DWORD PTR [ecx+0x4],eax
1000cce0:	mov    ecx,DWORD PTR [ebp+0x8]
1000cce3:	mov    ecx,DWORD PTR [ecx+0x4]
1000cce6:	cmp    DWORD PTR [ecx+0x4],edi
1000cce9:	jne    0x1000ccf0
1000cceb:	mov    DWORD PTR [ecx+0x4],eax
1000ccee:	jmp    0x1000ccfe
1000ccf0:	mov    ecx,DWORD PTR [edi+0x4]
1000ccf3:	cmp    DWORD PTR [ecx],edi
1000ccf5:	jne    0x1000ccfb
1000ccf7:	mov    DWORD PTR [ecx],eax
1000ccf9:	jmp    0x1000ccfe
1000ccfb:	mov    DWORD PTR [ecx+0x8],eax
1000ccfe:	mov    ecx,DWORD PTR [edi+0x4]
1000cd01:	mov    DWORD PTR [eax+0x4],ecx
1000cd04:	mov    dl,BYTE PTR [edi+0x38]
1000cd07:	mov    cl,BYTE PTR [eax+0x38]
1000cd0a:	mov    BYTE PTR [eax+0x38],dl
1000cd0d:	mov    BYTE PTR [edi+0x38],cl
1000cd10:	cmp    BYTE PTR [edi+0x38],0x1
1000cd14:	jne    0x1000ce2c
1000cd1a:	jmp    0x1000cde0
1000cd1f:	cmp    BYTE PTR [ebx+0x38],0x1
1000cd23:	jne    0x1000ce28
1000cd29:	mov    ecx,DWORD PTR [esi]
1000cd2b:	cmp    ebx,ecx
1000cd2d:	jne    0x1000cda6
1000cd2f:	mov    ecx,DWORD PTR [esi+0x8]
1000cd32:	cmp    BYTE PTR [ecx+0x38],0x0
1000cd36:	jne    0x1000cd4d
1000cd38:	push   DWORD PTR [ebp+0x8]
1000cd3b:	mov    BYTE PTR [ecx+0x38],0x1
1000cd3f:	mov    ecx,esi
1000cd41:	mov    BYTE PTR [esi+0x38],0x0
1000cd45:	call   0x1000a16c
1000cd4a:	mov    ecx,DWORD PTR [esi+0x8]
1000cd4d:	cmp    BYTE PTR [ecx+0x39],0x0
1000cd51:	jne    0x1000cddb
1000cd57:	mov    eax,DWORD PTR [ecx]
1000cd59:	cmp    BYTE PTR [eax+0x38],0x1
1000cd5d:	jne    0x1000cd68
1000cd5f:	mov    eax,DWORD PTR [ecx+0x8]
1000cd62:	cmp    BYTE PTR [eax+0x38],0x1
1000cd66:	je     0x1000cdd7
1000cd68:	mov    eax,DWORD PTR [ecx+0x8]
1000cd6b:	cmp    BYTE PTR [eax+0x38],0x1
1000cd6f:	jne    0x1000cd86
1000cd71:	mov    eax,DWORD PTR [ecx]
1000cd73:	push   DWORD PTR [ebp+0x8]
1000cd76:	mov    BYTE PTR [eax+0x38],0x1
1000cd7a:	mov    BYTE PTR [ecx+0x38],0x0
1000cd7e:	call   0x1000d38e
1000cd83:	mov    ecx,DWORD PTR [esi+0x8]
1000cd86:	mov    al,BYTE PTR [esi+0x38]
1000cd89:	push   DWORD PTR [ebp+0x8]
1000cd8c:	mov    BYTE PTR [ecx+0x38],al
1000cd8f:	mov    BYTE PTR [esi+0x38],0x1
1000cd93:	mov    eax,DWORD PTR [ecx+0x8]
1000cd96:	mov    ecx,esi
1000cd98:	mov    BYTE PTR [eax+0x38],0x1
1000cd9c:	call   0x1000a16c
1000cda1:	jmp    0x1000ce28
1000cda6:	cmp    BYTE PTR [ecx+0x38],0x0
1000cdaa:	jne    0x1000cdc0
1000cdac:	push   DWORD PTR [ebp+0x8]
1000cdaf:	mov    BYTE PTR [ecx+0x38],0x1
1000cdb3:	mov    ecx,esi
1000cdb5:	mov    BYTE PTR [esi+0x38],0x0
1000cdb9:	call   0x1000d38e
1000cdbe:	mov    ecx,DWORD PTR [esi]
1000cdc0:	cmp    BYTE PTR [ecx+0x39],0x0
1000cdc4:	jne    0x1000cddb
1000cdc6:	mov    eax,DWORD PTR [ecx+0x8]
1000cdc9:	cmp    BYTE PTR [eax+0x38],0x1
1000cdcd:	jne    0x1000cdf1
1000cdcf:	mov    eax,DWORD PTR [ecx]
1000cdd1:	cmp    BYTE PTR [eax+0x38],0x1
1000cdd5:	jne    0x1000cdf1
1000cdd7:	mov    BYTE PTR [ecx+0x38],0x0
1000cddb:	mov    ebx,esi
1000cddd:	mov    esi,DWORD PTR [esi+0x4]
1000cde0:	mov    eax,DWORD PTR [ebp+0x8]
1000cde3:	mov    eax,DWORD PTR [eax+0x4]
1000cde6:	cmp    ebx,DWORD PTR [eax+0x4]
1000cde9:	jne    0x1000cd1f
1000cdef:	jmp    0x1000ce28
1000cdf1:	mov    eax,DWORD PTR [ecx]
1000cdf3:	cmp    BYTE PTR [eax+0x38],0x1
1000cdf7:	jne    0x1000ce0e
1000cdf9:	mov    eax,DWORD PTR [ecx+0x8]
1000cdfc:	push   DWORD PTR [ebp+0x8]
1000cdff:	mov    BYTE PTR [eax+0x38],0x1
1000ce03:	mov    BYTE PTR [ecx+0x38],0x0
1000ce07:	call   0x1000a16c
1000ce0c:	mov    ecx,DWORD PTR [esi]
1000ce0e:	mov    al,BYTE PTR [esi+0x38]
1000ce11:	push   DWORD PTR [ebp+0x8]
1000ce14:	mov    BYTE PTR [ecx+0x38],al
1000ce17:	mov    BYTE PTR [esi+0x38],0x1
1000ce1b:	mov    eax,DWORD PTR [ecx]
1000ce1d:	mov    ecx,esi
1000ce1f:	mov    BYTE PTR [eax+0x38],0x1
1000ce23:	call   0x1000d38e
1000ce28:	mov    BYTE PTR [ebx+0x38],0x1
1000ce2c:	lea    ebx,[edi+0xc]
1000ce2f:	lea    esi,[ebx+0x1c]
1000ce32:	call   0x10009816
1000ce37:	push   0x0
1000ce39:	push   0x1
1000ce3b:	mov    ecx,ebx
1000ce3d:	call   0x100012f4
1000ce42:	push   edi
1000ce43:	call   0x100430d2
1000ce48:	pop    ecx
1000ce49:	mov    ecx,DWORD PTR [ebp+0x8]
1000ce4c:	mov    eax,DWORD PTR [ecx+0x8]
1000ce4f:	test   eax,eax
1000ce51:	jbe    0x1000ce57
1000ce53:	dec    eax
1000ce54:	mov    DWORD PTR [ecx+0x8],eax
1000ce57:	mov    ecx,DWORD PTR [ebp+0x10]
1000ce5a:	mov    eax,DWORD PTR [ebp+0xc]
1000ce5d:	mov    DWORD PTR [eax],ecx
1000ce5f:	mov    ecx,DWORD PTR [ebp+0x14]
1000ce62:	mov    DWORD PTR [eax+0x4],ecx
1000ce65:	call   0x10059d4d
1000ce6a:	ret    0x10
1000ce6d:	push   ebp
1000ce6e:	mov    ebp,esp
1000ce70:	mov    eax,DWORD PTR [edi+0x4]
1000ce73:	sub    esp,0x10
1000ce76:	push   ebx
1000ce77:	push   esi
1000ce78:	mov    esi,DWORD PTR [eax+0x4]
1000ce7b:	mov    ebx,eax
1000ce7d:	jmp    0x1000ce97
1000ce7f:	mov    ecx,DWORD PTR [ebp+0xc]
1000ce82:	lea    eax,[esi+0xc]
1000ce85:	call   0x10004ea2
1000ce8a:	test   al,al
1000ce8c:	je     0x1000ce93
1000ce8e:	mov    esi,DWORD PTR [esi+0x8]
1000ce91:	jmp    0x1000ce97
1000ce93:	mov    ebx,esi
1000ce95:	mov    esi,DWORD PTR [esi]
1000ce97:	cmp    BYTE PTR [esi+0x39],0x0
1000ce9b:	je     0x1000ce7f
1000ce9d:	cmp    ebx,DWORD PTR [edi+0x4]
1000cea0:	mov    DWORD PTR [ebp-0x4],ebx
1000cea3:	mov    DWORD PTR [ebp-0x8],edi
1000cea6:	je     0x1000cebc
1000cea8:	mov    eax,DWORD PTR [ebp+0xc]
1000ceab:	lea    ecx,[ebx+0xc]
1000ceae:	call   0x10004ea2
1000ceb3:	test   al,al
1000ceb5:	jne    0x1000cebc
1000ceb7:	lea    ecx,[ebp-0x8]
1000ceba:	jmp    0x1000cec8
1000cebc:	mov    eax,DWORD PTR [edi+0x4]
1000cebf:	mov    DWORD PTR [ebp-0xc],eax
1000cec2:	mov    DWORD PTR [ebp-0x10],edi
1000cec5:	lea    ecx,[ebp-0x10]
1000cec8:	mov    edx,DWORD PTR [ecx]
1000ceca:	mov    eax,DWORD PTR [ebp+0x8]
1000cecd:	mov    ecx,DWORD PTR [ecx+0x4]
1000ced0:	pop    esi
1000ced1:	mov    DWORD PTR [eax],edx
1000ced3:	mov    DWORD PTR [eax+0x4],ecx
1000ced6:	pop    ebx
1000ced7:	leave  
1000ced8:	ret    0x8
1000cedb:	cmp    DWORD PTR [esi],0x0
1000cede:	jne    0x1000cee5
1000cee0:	call   0x100435f0
1000cee5:	mov    eax,DWORD PTR [esi]
1000cee7:	mov    ecx,DWORD PTR [esi+0x4]
1000ceea:	cmp    ecx,DWORD PTR [eax+0x4]
1000ceed:	jne    0x1000cef4
1000ceef:	call   0x100435f0
1000cef4:	mov    eax,DWORD PTR [esi+0x4]
1000cef7:	add    eax,0xc
1000cefa:	ret    
1000cefb:	push   0x10
1000cefd:	mov    eax,0x100606ef
1000cf02:	call   0x10059ca8
1000cf07:	mov    ebx,ecx
1000cf09:	mov    esi,DWORD PTR [ebp+0x8]
1000cf0c:	mov    eax,ebx
1000cf0e:	call   0x1000cfa1
1000cf13:	xor    ecx,ecx
1000cf15:	cmp    eax,ecx
1000cf17:	mov    DWORD PTR [esi+0x4],ecx
1000cf1a:	mov    DWORD PTR [esi+0x8],ecx
1000cf1d:	mov    DWORD PTR [esi+0xc],ecx
1000cf20:	je     0x1000cf73
1000cf22:	mov    edi,esi
1000cf24:	call   0x1000d47c
1000cf29:	test   al,al
1000cf2b:	je     0x1000cf73
1000cf2d:	and    DWORD PTR [ebp-0x4],0x0
1000cf31:	mov    eax,DWORD PTR [ebx+0x8]
1000cf34:	cmp    DWORD PTR [ebx+0x4],eax
1000cf37:	mov    DWORD PTR [ebp-0x18],eax
1000cf3a:	jbe    0x1000cf41
1000cf3c:	call   0x100435f0
1000cf41:	mov    eax,DWORD PTR [ebx+0x4]
1000cf44:	cmp    eax,DWORD PTR [ebx+0x8]
1000cf47:	mov    DWORD PTR [ebp-0x1c],eax
1000cf4a:	jbe    0x1000cf51
1000cf4c:	call   0x100435f0
1000cf51:	mov    ecx,DWORD PTR [esi+0x4]
1000cf54:	mov    edx,DWORD PTR [ebp-0x1c]
1000cf57:	xor    eax,eax
1000cf59:	lea    edi,[ebp-0x14]
1000cf5c:	stos   BYTE PTR es:[edi],al
1000cf5d:	push   DWORD PTR [ebp-0x14]
1000cf60:	mov    eax,ecx
1000cf62:	push   DWORD PTR [ebp+0x8]
1000cf65:	push   DWORD PTR [ebp-0x18]
1000cf68:	call   0x1000d92a
1000cf6d:	add    esp,0xc
1000cf70:	mov    DWORD PTR [esi+0x8],eax
1000cf73:	mov    eax,esi
1000cf75:	call   0x10059d4d
1000cf7a:	ret    0x4
1000cf7d:	mov    esi,DWORD PTR [ebp+0x8]
1000cf80:	mov    eax,DWORD PTR [esi+0x4]
1000cf83:	xor    edi,edi
1000cf85:	cmp    eax,edi
1000cf87:	je     0x1000cf90
1000cf89:	push   eax
1000cf8a:	call   0x100430d2
1000cf8f:	pop    ecx
1000cf90:	push   edi
1000cf91:	push   edi
1000cf92:	mov    DWORD PTR [esi+0x4],edi
1000cf95:	mov    DWORD PTR [esi+0x8],edi
1000cf98:	mov    DWORD PTR [esi+0xc],edi
1000cf9b:	call   0x10047c54
1000cfa0:	int3   
1000cfa1:	mov    ecx,DWORD PTR [eax+0x4]
1000cfa4:	test   ecx,ecx
1000cfa6:	jne    0x1000cfab
1000cfa8:	xor    eax,eax
1000cfaa:	ret    
1000cfab:	mov    eax,DWORD PTR [eax+0x8]
1000cfae:	sub    eax,ecx
1000cfb0:	push   0x18
1000cfb2:	cdq    
1000cfb3:	pop    ecx
1000cfb4:	idiv   ecx
1000cfb6:	ret    
1000cfb7:	mov    eax,esi
1000cfb9:	call   0x1000cfa1
1000cfbe:	cmp    DWORD PTR [esp+0x4],eax
1000cfc2:	jb     0x1000cfc9
1000cfc4:	call   0x100435f0
1000cfc9:	mov    eax,DWORD PTR [esp+0x4]
1000cfcd:	imul   eax,eax,0x18
1000cfd0:	add    eax,DWORD PTR [esi+0x4]
1000cfd3:	ret    0x4
1000cfd6:	push   ebp
1000cfd7:	mov    ebp,esp
1000cfd9:	sub    esp,0x10
1000cfdc:	push   ebx
1000cfdd:	push   esi
1000cfde:	mov    esi,eax
1000cfe0:	push   edi
1000cfe1:	mov    edi,DWORD PTR [esi+0x4]
1000cfe4:	test   edi,edi
1000cfe6:	jne    0x1000cfec
1000cfe8:	xor    ebx,ebx
1000cfea:	jmp    0x1000cff9
1000cfec:	mov    eax,DWORD PTR [esi+0xc]
1000cfef:	sub    eax,edi
1000cff1:	push   0x18
1000cff3:	cdq    
1000cff4:	pop    ecx
1000cff5:	idiv   ecx
1000cff7:	mov    ebx,eax
1000cff9:	mov    eax,esi
1000cffb:	call   0x1000cfa1
1000d000:	cmp    eax,ebx
1000d002:	jae    0x1000d016
1000d004:	push   DWORD PTR [ebp+0x8]
1000d007:	push   0x1
1000d009:	push   DWORD PTR [esi+0x8]
1000d00c:	call   0x1000d4a5
1000d011:	mov    DWORD PTR [esi+0x8],eax
1000d014:	jmp    0x1000d030
1000d016:	mov    ebx,DWORD PTR [esi+0x8]
1000d019:	cmp    edi,ebx
1000d01b:	jbe    0x1000d022
1000d01d:	call   0x100435f0
1000d022:	push   ebx
1000d023:	push   esi
1000d024:	push   DWORD PTR [ebp+0x8]
1000d027:	lea    eax,[ebp-0xc]
1000d02a:	push   eax
1000d02b:	call   0x1000d405
1000d030:	pop    edi
1000d031:	pop    esi
1000d032:	pop    ebx
1000d033:	leave  
1000d034:	ret    0x4
1000d037:	push   ebp
1000d038:	mov    ebp,esp
1000d03a:	push   ecx
1000d03b:	mov    edx,DWORD PTR [ebp+0x10]
1000d03e:	mov    eax,DWORD PTR [ebx+0x8]
1000d041:	add    edx,0x18
1000d044:	cmp    edx,eax
1000d046:	je     0x1000d067
1000d048:	lea    ecx,[edx-0x18]
1000d04b:	push   esi
1000d04c:	mov    DWORD PTR [ebp-0x4],ecx
1000d04f:	push   edi
1000d050:	mov    edi,DWORD PTR [ebp-0x4]
1000d053:	add    DWORD PTR [ebp-0x4],0x18
1000d057:	mov    esi,edx
1000d059:	push   0x6
1000d05b:	add    edx,0x18
1000d05e:	cmp    edx,eax
1000d060:	pop    ecx
1000d061:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000d063:	jne    0x1000d050
1000d065:	pop    edi
1000d066:	pop    esi
1000d067:	mov    ecx,DWORD PTR [ebp+0xc]
1000d06a:	mov    eax,DWORD PTR [ebp+0x8]
1000d06d:	add    DWORD PTR [ebx+0x8],0xffffffe8
1000d071:	mov    DWORD PTR [eax],ecx
1000d073:	mov    ecx,DWORD PTR [ebp+0x10]
1000d076:	mov    DWORD PTR [eax+0x4],ecx
1000d079:	leave  
1000d07a:	ret    0xc
1000d07d:	cmp    DWORD PTR [esi],0x0
1000d080:	jne    0x1000d087
1000d082:	call   0x100435f0
1000d087:	mov    eax,DWORD PTR [esi]
1000d089:	mov    ecx,DWORD PTR [esi+0x4]
1000d08c:	cmp    ecx,DWORD PTR [eax+0x8]
1000d08f:	jb     0x1000d096
1000d091:	call   0x100435f0
1000d096:	mov    eax,DWORD PTR [esi+0x4]
1000d099:	ret    
1000d09a:	push   ebx
1000d09b:	mov    ebx,DWORD PTR [eax+0x4]
1000d09e:	push   esi
1000d09f:	mov    esi,DWORD PTR [eax]
1000d0a1:	test   esi,esi
1000d0a3:	push   edi
1000d0a4:	mov    edi,ecx
1000d0a6:	jne    0x1000d0ad
1000d0a8:	call   0x100435f0
1000d0ad:	imul   edi,edi,0x18
1000d0b0:	add    edi,ebx
1000d0b2:	cmp    edi,DWORD PTR [esi+0x8]
1000d0b5:	ja     0x1000d0bc
1000d0b7:	cmp    edi,DWORD PTR [esi+0x4]
1000d0ba:	jae    0x1000d0c1
1000d0bc:	call   0x100435f0
1000d0c1:	mov    eax,DWORD PTR [esp+0x10]
1000d0c5:	mov    DWORD PTR [eax+0x4],edi
1000d0c8:	pop    edi
1000d0c9:	mov    DWORD PTR [eax],esi
1000d0cb:	pop    esi
1000d0cc:	pop    ebx
1000d0cd:	ret    0x4
1000d0d0:	push   esi
1000d0d1:	mov    esi,DWORD PTR [eax]
1000d0d3:	test   esi,esi
1000d0d5:	je     0x1000d0e4
1000d0d7:	push   esi
1000d0d8:	call   0x1000c88c
1000d0dd:	push   esi
1000d0de:	call   0x100430d2
1000d0e3:	pop    ecx
1000d0e4:	pop    esi
1000d0e5:	ret    
1000d0e6:	push   0x0
1000d0e8:	mov    ecx,esi
1000d0ea:	mov    DWORD PTR [esi+0x18],0xf
1000d0f1:	call   0x10001420
1000d0f6:	push   DWORD PTR [esp+0xc]
1000d0fa:	mov    ecx,esi
1000d0fc:	push   DWORD PTR [esp+0xc]
1000d100:	push   DWORD PTR [esp+0xc]
1000d104:	call   0x10001245
1000d109:	mov    eax,esi
1000d10b:	ret    0xc
1000d10e:	or     eax,0xffffffff
1000d111:	sub    eax,DWORD PTR [esi+0x14]
1000d114:	cmp    eax,ebx
1000d116:	ja     0x1000d11d
1000d118:	call   0x10057440
1000d11d:	test   ebx,ebx
1000d11f:	jbe    0x1000d17d
1000d121:	push   edi
1000d122:	mov    edi,DWORD PTR [esi+0x14]
1000d125:	push   0x0
1000d127:	add    edi,ebx
1000d129:	push   edi
1000d12a:	mov    ecx,esi
1000d12c:	call   0x1000143c
1000d131:	test   al,al
1000d133:	je     0x1000d17c
1000d135:	cmp    ebx,0x1
1000d138:	mov    ecx,DWORD PTR [esi+0x14]
1000d13b:	jne    0x1000d154
1000d13d:	cmp    DWORD PTR [esi+0x18],0x10
1000d141:	jb     0x1000d148
1000d143:	mov    eax,DWORD PTR [esi+0x4]
1000d146:	jmp    0x1000d14b
1000d148:	lea    eax,[esi+0x4]
1000d14b:	mov    dl,BYTE PTR [esp+0x8]
1000d14f:	mov    BYTE PTR [eax+ecx*1],dl
1000d152:	jmp    0x1000d174
1000d154:	cmp    DWORD PTR [esi+0x18],0x10
1000d158:	jb     0x1000d15f
1000d15a:	mov    eax,DWORD PTR [esi+0x4]
1000d15d:	jmp    0x1000d162
1000d15f:	lea    eax,[esi+0x4]
1000d162:	movsx  edx,BYTE PTR [esp+0x8]
1000d167:	push   ebx
1000d168:	push   edx
1000d169:	add    eax,ecx
1000d16b:	push   eax
1000d16c:	call   0x10045ea0
1000d171:	add    esp,0xc
1000d174:	push   edi
1000d175:	mov    ecx,esi
1000d177:	call   0x10001420
1000d17c:	pop    edi
1000d17d:	mov    eax,esi
1000d17f:	ret    0x4
1000d182:	push   ebp
1000d183:	mov    ebp,esp
1000d185:	push   ecx
1000d186:	cmp    DWORD PTR [ebp+0x10],0x0
1000d18a:	mov    ecx,DWORD PTR [ebp+0x8]
1000d18d:	jne    0x1000d194
1000d18f:	cmp    eax,DWORD PTR [ecx+0x14]
1000d192:	jbe    0x1000d201
1000d194:	push   ebx
1000d195:	push   esi
1000d196:	mov    esi,DWORD PTR [ecx+0x14]
1000d199:	cmp    eax,esi
1000d19b:	push   edi
1000d19c:	jae    0x1000d1fb
1000d19e:	sub    esi,eax
1000d1a0:	cmp    DWORD PTR [ebp+0x10],esi
1000d1a3:	ja     0x1000d1fb
1000d1a5:	xor    edx,edx
1000d1a7:	inc    edx
1000d1a8:	sub    edx,DWORD PTR [ebp+0x10]
1000d1ab:	add    esi,edx
1000d1ad:	cmp    DWORD PTR [ecx+0x18],0x10
1000d1b1:	jb     0x1000d1bd
1000d1b3:	add    ecx,0x4
1000d1b6:	mov    DWORD PTR [ebp-0x4],ecx
1000d1b9:	mov    ecx,DWORD PTR [ecx]
1000d1bb:	jmp    0x1000d1c3
1000d1bd:	add    ecx,0x4
1000d1c0:	mov    DWORD PTR [ebp-0x4],ecx
1000d1c3:	lea    ebx,[ecx+eax*1]
1000d1c6:	jmp    0x1000d1e4
1000d1c8:	push   DWORD PTR [ebp+0x10]
1000d1cb:	push   DWORD PTR [ebp+0xc]
1000d1ce:	push   edi
1000d1cf:	call   0x100439bb
1000d1d4:	add    esp,0xc
1000d1d7:	test   eax,eax
1000d1d9:	je     0x1000d205
1000d1db:	sub    ebx,edi
1000d1dd:	lea    esi,[esi+ebx*1-0x1]
1000d1e1:	lea    ebx,[edi+0x1]
1000d1e4:	mov    eax,DWORD PTR [ebp+0xc]
1000d1e7:	movsx  eax,BYTE PTR [eax]
1000d1ea:	push   esi
1000d1eb:	push   eax
1000d1ec:	push   ebx
1000d1ed:	call   0x10045df0
1000d1f2:	mov    edi,eax
1000d1f4:	add    esp,0xc
1000d1f7:	test   edi,edi
1000d1f9:	jne    0x1000d1c8
1000d1fb:	or     eax,0xffffffff
1000d1fe:	pop    edi
1000d1ff:	pop    esi
1000d200:	pop    ebx
1000d201:	leave  
1000d202:	ret    0xc
1000d205:	mov    eax,DWORD PTR [ebp+0x8]
1000d208:	cmp    DWORD PTR [eax+0x18],0x10
1000d20c:	jb     0x1000d215
1000d20e:	mov    eax,DWORD PTR [ebp-0x4]
1000d211:	mov    ecx,DWORD PTR [eax]
1000d213:	jmp    0x1000d218
1000d215:	mov    ecx,DWORD PTR [ebp-0x4]
1000d218:	mov    eax,edi
1000d21a:	sub    eax,ecx
1000d21c:	jmp    0x1000d1fe
1000d21e:	mov    eax,DWORD PTR [esi+0x4]
1000d221:	test   eax,eax
1000d223:	je     0x1000d236
1000d225:	push   DWORD PTR [esi+0x8]
1000d228:	call   0x1000d4d5
1000d22d:	push   DWORD PTR [esi+0x4]
1000d230:	call   0x100430d2
1000d235:	pop    ecx
1000d236:	and    DWORD PTR [esi+0x4],0x0
1000d23a:	and    DWORD PTR [esi+0x8],0x0
1000d23e:	and    DWORD PTR [esi+0xc],0x0
1000d242:	ret    
1000d243:	push   0x48
1000d245:	mov    eax,0x100603a7
1000d24a:	call   0x10059c75
1000d24f:	mov    edi,ecx
1000d251:	cmp    DWORD PTR [esi+0x8],0x5d1745c
1000d258:	jb     0x1000d28c
1000d25a:	push   0x1006d04c
1000d25f:	lea    ecx,[ebp-0x2c]
1000d262:	call   0x100011d1
1000d267:	and    DWORD PTR [ebp-0x4],0x0
1000d26b:	lea    eax,[ebp-0x2c]
1000d26e:	push   eax
1000d26f:	lea    ecx,[ebp-0x54]
1000d272:	call   0x1000106e
1000d277:	push   0x10074ec0
1000d27c:	lea    eax,[ebp-0x54]
1000d27f:	push   eax
1000d280:	mov    DWORD PTR [ebp-0x54],0x1006b96c
1000d287:	call   0x10047c54
1000d28c:	push   DWORD PTR [ebp+0x10]
1000d28f:	mov    eax,DWORD PTR [esi+0x4]
1000d292:	push   eax
1000d293:	push   edi
1000d294:	push   eax
1000d295:	call   0x1000d598
1000d29a:	inc    DWORD PTR [esi+0x8]
1000d29d:	mov    ebx,eax
1000d29f:	mov    eax,DWORD PTR [esi+0x4]
1000d2a2:	cmp    edi,eax
1000d2a4:	jne    0x1000d2b3
1000d2a6:	mov    DWORD PTR [eax+0x4],ebx
1000d2a9:	mov    eax,DWORD PTR [esi+0x4]
1000d2ac:	mov    DWORD PTR [eax],ebx
1000d2ae:	mov    eax,DWORD PTR [esi+0x4]
1000d2b1:	jmp    0x1000d2d1
1000d2b3:	cmp    BYTE PTR [ebp+0xc],0x0
1000d2b7:	je     0x1000d2c6
1000d2b9:	mov    DWORD PTR [edi],ebx
1000d2bb:	mov    eax,DWORD PTR [esi+0x4]
1000d2be:	cmp    edi,DWORD PTR [eax]
1000d2c0:	jne    0x1000d2d4
1000d2c2:	mov    DWORD PTR [eax],ebx
1000d2c4:	jmp    0x1000d2d4
1000d2c6:	mov    DWORD PTR [edi+0x8],ebx
1000d2c9:	mov    eax,DWORD PTR [esi+0x4]
1000d2cc:	cmp    edi,DWORD PTR [eax+0x8]
1000d2cf:	jne    0x1000d2d4
1000d2d1:	mov    DWORD PTR [eax+0x8],ebx
1000d2d4:	mov    edi,ebx
1000d2d6:	lea    eax,[ebx+0x4]
1000d2d9:	jmp    0x1000d368
1000d2de:	mov    ecx,DWORD PTR [eax]
1000d2e0:	mov    edx,DWORD PTR [ecx+0x4]
1000d2e3:	cmp    ecx,DWORD PTR [edx]
1000d2e5:	jne    0x1000d31c
1000d2e7:	mov    edx,DWORD PTR [edx+0x8]
1000d2ea:	cmp    BYTE PTR [edx+0x38],0x0
1000d2ee:	je     0x1000d324
1000d2f0:	cmp    edi,DWORD PTR [ecx+0x8]
1000d2f3:	jne    0x1000d2fd
1000d2f5:	push   esi
1000d2f6:	mov    edi,ecx
1000d2f8:	call   0x1000a16c
1000d2fd:	mov    eax,DWORD PTR [edi+0x4]
1000d300:	mov    BYTE PTR [eax+0x38],0x1
1000d304:	mov    eax,DWORD PTR [edi+0x4]
1000d307:	mov    eax,DWORD PTR [eax+0x4]
1000d30a:	mov    BYTE PTR [eax+0x38],0x0
1000d30e:	mov    eax,DWORD PTR [edi+0x4]
1000d311:	mov    ecx,DWORD PTR [eax+0x4]
1000d314:	push   esi
1000d315:	call   0x1000d38e
1000d31a:	jmp    0x1000d365
1000d31c:	mov    edx,DWORD PTR [edx]
1000d31e:	cmp    BYTE PTR [edx+0x38],0x0
1000d322:	jne    0x1000d33c
1000d324:	mov    BYTE PTR [ecx+0x38],0x1
1000d328:	mov    BYTE PTR [edx+0x38],0x1
1000d32c:	mov    ecx,DWORD PTR [eax]
1000d32e:	mov    ecx,DWORD PTR [ecx+0x4]
1000d331:	mov    BYTE PTR [ecx+0x38],0x0
1000d335:	mov    eax,DWORD PTR [eax]
1000d337:	mov    edi,DWORD PTR [eax+0x4]
1000d33a:	jmp    0x1000d365
1000d33c:	cmp    edi,DWORD PTR [ecx]
1000d33e:	jne    0x1000d348
1000d340:	push   esi
1000d341:	mov    edi,ecx
1000d343:	call   0x1000d38e
1000d348:	mov    eax,DWORD PTR [edi+0x4]
1000d34b:	mov    BYTE PTR [eax+0x38],0x1
1000d34f:	mov    eax,DWORD PTR [edi+0x4]
1000d352:	mov    eax,DWORD PTR [eax+0x4]
1000d355:	mov    BYTE PTR [eax+0x38],0x0
1000d359:	mov    eax,DWORD PTR [edi+0x4]
1000d35c:	mov    ecx,DWORD PTR [eax+0x4]
1000d35f:	push   esi
1000d360:	call   0x1000a16c
1000d365:	lea    eax,[edi+0x4]
1000d368:	mov    ecx,DWORD PTR [eax]
1000d36a:	cmp    BYTE PTR [ecx+0x38],0x0
1000d36e:	je     0x1000d2de
1000d374:	mov    eax,DWORD PTR [esi+0x4]
1000d377:	mov    eax,DWORD PTR [eax+0x4]
1000d37a:	mov    BYTE PTR [eax+0x38],0x1
1000d37e:	mov    eax,DWORD PTR [ebp+0x8]
1000d381:	mov    DWORD PTR [eax+0x4],ebx
1000d384:	mov    DWORD PTR [eax],esi
1000d386:	call   0x10059d4d
1000d38b:	ret    0xc
1000d38e:	mov    eax,DWORD PTR [ecx]
1000d390:	mov    edx,DWORD PTR [eax+0x8]
1000d393:	mov    DWORD PTR [ecx],edx
1000d395:	mov    edx,DWORD PTR [eax+0x8]
1000d398:	cmp    BYTE PTR [edx+0x39],0x0
1000d39c:	jne    0x1000d3a1
1000d39e:	mov    DWORD PTR [edx+0x4],ecx
1000d3a1:	mov    edx,DWORD PTR [ecx+0x4]
1000d3a4:	mov    DWORD PTR [eax+0x4],edx
1000d3a7:	mov    edx,DWORD PTR [esp+0x4]
1000d3ab:	mov    edx,DWORD PTR [edx+0x4]
1000d3ae:	cmp    ecx,DWORD PTR [edx+0x4]
1000d3b1:	jne    0x1000d3b8
1000d3b3:	mov    DWORD PTR [edx+0x4],eax
1000d3b6:	jmp    0x1000d3c7
1000d3b8:	mov    edx,DWORD PTR [ecx+0x4]
1000d3bb:	cmp    ecx,DWORD PTR [edx+0x8]
1000d3be:	jne    0x1000d3c5
1000d3c0:	mov    DWORD PTR [edx+0x8],eax
1000d3c3:	jmp    0x1000d3c7
1000d3c5:	mov    DWORD PTR [edx],eax
1000d3c7:	mov    DWORD PTR [eax+0x8],ecx
1000d3ca:	mov    DWORD PTR [ecx+0x4],eax
1000d3cd:	ret    0x4
1000d3d0:	push   ebp
1000d3d1:	mov    ebp,esp
1000d3d3:	and    esp,0xfffffff8
1000d3d6:	push   ecx
1000d3d7:	push   ecx
1000d3d8:	push   ebx
1000d3d9:	push   edi
1000d3da:	mov    edi,eax
1000d3dc:	mov    eax,DWORD PTR [edi+0x4]
1000d3df:	mov    ecx,DWORD PTR [eax]
1000d3e1:	push   eax
1000d3e2:	push   edi
1000d3e3:	push   ecx
1000d3e4:	push   edi
1000d3e5:	lea    ebx,[esp+0x18]
1000d3e9:	call   0x1000d4ec
1000d3ee:	push   DWORD PTR [edi+0x4]
1000d3f1:	call   0x100430d2
1000d3f6:	and    DWORD PTR [edi+0x4],0x0
1000d3fa:	and    DWORD PTR [edi+0x8],0x0
1000d3fe:	pop    ecx
1000d3ff:	pop    edi
1000d400:	pop    ebx
1000d401:	mov    esp,ebp
1000d403:	pop    ebp
1000d404:	ret    
1000d405:	push   ebp
1000d406:	mov    ebp,esp
1000d408:	push   ebx
1000d409:	push   edi
1000d40a:	mov    eax,esi
1000d40c:	call   0x1000cfa1
1000d411:	test   eax,eax
1000d413:	jne    0x1000d419
1000d415:	xor    ebx,ebx
1000d417:	jmp    0x1000d443
1000d419:	mov    edi,DWORD PTR [esi+0x4]
1000d41c:	cmp    edi,DWORD PTR [esi+0x8]
1000d41f:	jbe    0x1000d426
1000d421:	call   0x100435f0
1000d426:	cmp    DWORD PTR [ebp+0x10],0x0
1000d42a:	je     0x1000d431
1000d42c:	cmp    DWORD PTR [ebp+0x10],esi
1000d42f:	je     0x1000d436
1000d431:	call   0x100435f0
1000d436:	mov    eax,DWORD PTR [ebp+0x14]
1000d439:	sub    eax,edi
1000d43b:	push   0x18
1000d43d:	cdq    
1000d43e:	pop    ecx
1000d43f:	idiv   ecx
1000d441:	mov    ebx,eax
1000d443:	push   DWORD PTR [ebp+0x14]
1000d446:	mov    edx,DWORD PTR [ebp+0xc]
1000d449:	push   DWORD PTR [ebp+0x10]
1000d44c:	mov    ecx,esi
1000d44e:	call   0x1000d5ea
1000d453:	mov    edi,DWORD PTR [esi+0x4]
1000d456:	cmp    edi,DWORD PTR [esi+0x8]
1000d459:	jbe    0x1000d460
1000d45b:	call   0x100435f0
1000d460:	push   DWORD PTR [ebp+0x8]
1000d463:	mov    ecx,ebx
1000d465:	lea    eax,[ebp+0x10]
1000d468:	mov    DWORD PTR [ebp+0x10],esi
1000d46b:	mov    DWORD PTR [ebp+0x14],edi
1000d46e:	call   0x1000d09a
1000d473:	mov    eax,DWORD PTR [ebp+0x8]
1000d476:	pop    edi
1000d477:	pop    ebx
1000d478:	pop    ebp
1000d479:	ret    0x10
1000d47c:	push   esi
1000d47d:	mov    esi,eax
1000d47f:	cmp    esi,0xaaaaaaa
1000d485:	jbe    0x1000d48c
1000d487:	jmp    0x100120ac
1000d48c:	mov    ecx,esi
1000d48e:	call   0x1000d7a4
1000d493:	imul   esi,esi,0x18
1000d496:	add    esi,eax
1000d498:	mov    DWORD PTR [edi+0x4],eax
1000d49b:	mov    DWORD PTR [edi+0x8],eax
1000d49e:	mov    DWORD PTR [edi+0xc],esi
1000d4a1:	mov    al,0x1
1000d4a3:	pop    esi
1000d4a4:	ret    
1000d4a5:	push   ebp
1000d4a6:	mov    ebp,esp
1000d4a8:	push   ecx
1000d4a9:	push   edi
1000d4aa:	xor    eax,eax
1000d4ac:	lea    edi,[ebp-0x4]
1000d4af:	stos   BYTE PTR es:[edi],al
1000d4b0:	push   DWORD PTR [ebp-0x4]
1000d4b3:	push   DWORD PTR [ebp+0xc]
1000d4b6:	push   DWORD PTR [ebp+0x10]
1000d4b9:	push   DWORD PTR [ebp+0xc]
1000d4bc:	push   DWORD PTR [ebp+0x8]
1000d4bf:	call   0x1000d8fe
1000d4c4:	mov    eax,DWORD PTR [ebp+0xc]
1000d4c7:	imul   eax,eax,0x18
1000d4ca:	add    esp,0x14
1000d4cd:	add    eax,DWORD PTR [ebp+0x8]
1000d4d0:	pop    edi
1000d4d1:	leave  
1000d4d2:	ret    0xc
1000d4d5:	push   esi
1000d4d6:	mov    esi,eax
1000d4d8:	jmp    0x1000d4e2
1000d4da:	call   0x1000499a
1000d4df:	add    esi,0x10
1000d4e2:	cmp    esi,DWORD PTR [esp+0x8]
1000d4e6:	jne    0x1000d4da
1000d4e8:	pop    esi
1000d4e9:	ret    0x4
1000d4ec:	push   ebp
1000d4ed:	mov    ebp,esp
1000d4ef:	mov    eax,DWORD PTR [edi+0x4]
1000d4f2:	sub    esp,0x14
1000d4f5:	cmp    DWORD PTR [ebp+0x8],0x0
1000d4f9:	push   esi
1000d4fa:	mov    esi,DWORD PTR [eax]
1000d4fc:	je     0x1000d503
1000d4fe:	cmp    DWORD PTR [ebp+0x8],edi
1000d501:	je     0x1000d508
1000d503:	call   0x100435f0
1000d508:	cmp    DWORD PTR [ebp+0xc],esi
1000d50b:	jne    0x1000d550
1000d50d:	cmp    DWORD PTR [ebp+0x10],0x0
1000d511:	mov    esi,DWORD PTR [edi+0x4]
1000d514:	je     0x1000d51b
1000d516:	cmp    DWORD PTR [ebp+0x10],edi
1000d519:	je     0x1000d520
1000d51b:	call   0x100435f0
1000d520:	cmp    DWORD PTR [ebp+0x14],esi
1000d523:	jne    0x1000d550
1000d525:	mov    eax,DWORD PTR [edi+0x4]
1000d528:	push   DWORD PTR [eax+0x4]
1000d52b:	mov    ecx,edi
1000d52d:	call   0x1000d83b
1000d532:	mov    eax,DWORD PTR [edi+0x4]
1000d535:	mov    DWORD PTR [eax+0x4],eax
1000d538:	mov    eax,DWORD PTR [edi+0x4]
1000d53b:	and    DWORD PTR [edi+0x8],0x0
1000d53f:	mov    DWORD PTR [eax],eax
1000d541:	mov    eax,DWORD PTR [edi+0x4]
1000d544:	mov    DWORD PTR [eax+0x8],eax
1000d547:	mov    eax,DWORD PTR [edi+0x4]
1000d54a:	mov    eax,DWORD PTR [eax]
1000d54c:	mov    DWORD PTR [ebx],edi
1000d54e:	jmp    0x1000d58e
1000d550:	mov    eax,DWORD PTR [ebp+0x8]
1000d553:	test   eax,eax
1000d555:	je     0x1000d55c
1000d557:	cmp    eax,DWORD PTR [ebp+0x10]
1000d55a:	je     0x1000d561
1000d55c:	call   0x100435f0
1000d561:	mov    eax,DWORD PTR [ebp+0xc]
1000d564:	cmp    eax,DWORD PTR [ebp+0x14]
1000d567:	mov    ecx,DWORD PTR [ebp+0x8]
1000d56a:	je     0x1000d58c
1000d56c:	lea    esi,[ebp+0x8]
1000d56f:	mov    DWORD PTR [ebp-0x8],ecx
1000d572:	mov    DWORD PTR [ebp-0x4],eax
1000d575:	call   0x10009c5c
1000d57a:	push   DWORD PTR [ebp-0x4]
1000d57d:	lea    eax,[ebp-0x10]
1000d580:	push   DWORD PTR [ebp-0x8]
1000d583:	push   eax
1000d584:	push   edi
1000d585:	call   0x1000cbcd
1000d58a:	jmp    0x1000d550
1000d58c:	mov    DWORD PTR [ebx],ecx
1000d58e:	mov    DWORD PTR [ebx+0x4],eax
1000d591:	mov    eax,ebx
1000d593:	pop    esi
1000d594:	leave  
1000d595:	ret    0x10
1000d598:	push   0xc
1000d59a:	mov    eax,0x10061171
1000d59f:	call   0x10059ca8
1000d5a4:	push   0x3c
1000d5a6:	call   0x100436de
1000d5ab:	mov    esi,eax
1000d5ad:	pop    ecx
1000d5ae:	mov    DWORD PTR [ebp-0x14],esi
1000d5b1:	test   esi,esi
1000d5b3:	mov    DWORD PTR [ebp-0x4],0x1
1000d5ba:	je     0x1000d5cd
1000d5bc:	push   DWORD PTR [ebp+0x10]
1000d5bf:	mov    ebx,DWORD PTR [ebp+0x14]
1000d5c2:	push   DWORD PTR [ebp+0xc]
1000d5c5:	push   DWORD PTR [ebp+0x8]
1000d5c8:	call   0x1000d7ee
1000d5cd:	mov    eax,esi
1000d5cf:	call   0x10059d4d
1000d5d4:	ret    0x10
1000d5d7:	push   DWORD PTR [ebp-0x14]
1000d5da:	call   0x100430d2
1000d5df:	pop    ecx
1000d5e0:	push   0x0
1000d5e2:	push   0x0
1000d5e4:	call   0x10047c54
1000d5e9:	int3   
1000d5ea:	push   0x24
1000d5ec:	mov    eax,0x100606d4
1000d5f1:	call   0x10059ca8
1000d5f6:	mov    ebx,ecx
1000d5f8:	push   0x6
1000d5fa:	pop    ecx
1000d5fb:	mov    esi,edx
1000d5fd:	lea    edi,[ebp-0x30]
1000d600:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000d602:	mov    ecx,DWORD PTR [ebx+0x4]
1000d605:	test   ecx,ecx
1000d607:	jne    0x1000d60d
1000d609:	xor    edi,edi
1000d60b:	jmp    0x1000d61a
1000d60d:	mov    eax,DWORD PTR [ebx+0xc]
1000d610:	sub    eax,ecx
1000d612:	push   0x18
1000d614:	cdq    
1000d615:	pop    ecx
1000d616:	idiv   ecx
1000d618:	mov    edi,eax
1000d61a:	mov    eax,ebx
1000d61c:	call   0x1000cfa1
1000d621:	mov    esi,0xaaaaaaa
1000d626:	mov    ecx,esi
1000d628:	sub    ecx,eax
1000d62a:	cmp    ecx,0x1
1000d62d:	jae    0x1000d634
1000d62f:	call   0x100120ac
1000d634:	mov    eax,ebx
1000d636:	call   0x1000cfa1
1000d63b:	inc    eax
1000d63c:	cmp    edi,eax
1000d63e:	jae    0x1000d6ef
1000d644:	mov    eax,edi
1000d646:	shr    eax,1
1000d648:	sub    esi,eax
1000d64a:	cmp    esi,edi
1000d64c:	jae    0x1000d652
1000d64e:	xor    edi,edi
1000d650:	jmp    0x1000d654
1000d652:	add    edi,eax
1000d654:	mov    eax,ebx
1000d656:	call   0x1000cfa1
1000d65b:	inc    eax
1000d65c:	cmp    edi,eax
1000d65e:	jae    0x1000d66a
1000d660:	mov    eax,ebx
1000d662:	call   0x1000cfa1
1000d667:	mov    edi,eax
1000d669:	inc    edi
1000d66a:	mov    ecx,edi
1000d66c:	call   0x1000d7a4
1000d671:	and    DWORD PTR [ebp-0x4],0x0
1000d675:	mov    edx,DWORD PTR [ebx+0x4]
1000d678:	push   eax
1000d679:	push   DWORD PTR [ebp+0xc]
1000d67c:	mov    DWORD PTR [ebp-0x14],eax
1000d67f:	call   0x1000d8da
1000d684:	lea    ecx,[ebp-0x30]
1000d687:	push   ecx
1000d688:	push   0x1
1000d68a:	push   eax
1000d68b:	call   0x1000d4a5
1000d690:	mov    edx,DWORD PTR [ebp+0xc]
1000d693:	push   eax
1000d694:	push   DWORD PTR [ebx+0x8]
1000d697:	call   0x1000d8da
1000d69c:	mov    eax,ebx
1000d69e:	call   0x1000cfa1
1000d6a3:	mov    esi,eax
1000d6a5:	mov    eax,DWORD PTR [ebx+0x4]
1000d6a8:	inc    esi
1000d6a9:	test   eax,eax
1000d6ab:	je     0x1000d6c2
1000d6ad:	mov    ecx,DWORD PTR [ebx+0x8]
1000d6b0:	jmp    0x1000d6b5
1000d6b2:	add    eax,0x18
1000d6b5:	cmp    eax,ecx
1000d6b7:	jne    0x1000d6b2
1000d6b9:	push   DWORD PTR [ebx+0x4]
1000d6bc:	call   0x100430d2
1000d6c1:	pop    ecx
1000d6c2:	mov    eax,DWORD PTR [ebp-0x14]
1000d6c5:	imul   edi,edi,0x18
1000d6c8:	imul   esi,esi,0x18
1000d6cb:	add    edi,eax
1000d6cd:	add    esi,eax
1000d6cf:	mov    DWORD PTR [ebx+0xc],edi
1000d6d2:	mov    DWORD PTR [ebx+0x8],esi
1000d6d5:	mov    DWORD PTR [ebx+0x4],eax
1000d6d8:	jmp    0x1000d79c
1000d6dd:	push   DWORD PTR [ebp-0x14]
1000d6e0:	call   0x100430d2
1000d6e5:	pop    ecx
1000d6e6:	push   0x0
1000d6e8:	push   0x0
1000d6ea:	call   0x10047c54
1000d6ef:	mov    ecx,DWORD PTR [ebx+0x8]
1000d6f2:	mov    edi,DWORD PTR [ebp+0xc]
1000d6f5:	mov    eax,ecx
1000d6f7:	sub    eax,edi
1000d6f9:	push   0x18
1000d6fb:	cdq    
1000d6fc:	pop    esi
1000d6fd:	idiv   esi
1000d6ff:	cmp    eax,0x1
1000d702:	jae    0x1000d753
1000d704:	lea    eax,[edi+0x18]
1000d707:	push   eax
1000d708:	push   ecx
1000d709:	mov    edx,edi
1000d70b:	call   0x1000d8da
1000d710:	mov    DWORD PTR [ebp-0x4],0x2
1000d717:	mov    ecx,DWORD PTR [ebx+0x8]
1000d71a:	lea    eax,[ebp-0x30]
1000d71d:	push   eax
1000d71e:	mov    eax,ecx
1000d720:	sub    eax,edi
1000d722:	cdq    
1000d723:	idiv   esi
1000d725:	xor    edx,edx
1000d727:	inc    edx
1000d728:	sub    edx,eax
1000d72a:	push   edx
1000d72b:	push   ecx
1000d72c:	call   0x1000d4a5
1000d731:	add    DWORD PTR [ebx+0x8],esi
1000d734:	mov    ebx,DWORD PTR [ebx+0x8]
1000d737:	lea    eax,[ebx-0x18]
1000d73a:	cmp    edi,eax
1000d73c:	mov    edx,edi
1000d73e:	je     0x1000d79c
1000d740:	mov    edi,edx
1000d742:	push   0x6
1000d744:	add    edx,0x18
1000d747:	cmp    edx,eax
1000d749:	pop    ecx
1000d74a:	lea    esi,[ebp-0x30]
1000d74d:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000d74f:	jne    0x1000d740
1000d751:	jmp    0x1000d79c
1000d753:	lea    esi,[ecx-0x18]
1000d756:	push   ecx
1000d757:	push   ecx
1000d758:	mov    edx,esi
1000d75a:	call   0x1000d8da
1000d75f:	mov    DWORD PTR [ebx+0x8],eax
1000d762:	mov    eax,esi
1000d764:	cmp    edi,eax
1000d766:	je     0x1000d782
1000d768:	lea    edx,[eax+0x18]
1000d76b:	sub    eax,0x18
1000d76e:	sub    edx,0x18
1000d771:	cmp    eax,DWORD PTR [ebp+0xc]
1000d774:	push   0x6
1000d776:	pop    ecx
1000d777:	mov    esi,eax
1000d779:	mov    edi,edx
1000d77b:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000d77d:	jne    0x1000d76b
1000d77f:	mov    edi,DWORD PTR [ebp+0xc]
1000d782:	lea    eax,[edi+0x18]
1000d785:	cmp    edi,eax
1000d787:	mov    edx,edi
1000d789:	je     0x1000d79c
1000d78b:	mov    edi,edx
1000d78d:	push   0x6
1000d78f:	add    edx,0x18
1000d792:	cmp    edx,eax
1000d794:	pop    ecx
1000d795:	lea    esi,[ebp-0x30]
1000d798:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000d79a:	jne    0x1000d78b
1000d79c:	call   0x10059d4d
1000d7a1:	ret    0x8
1000d7a4:	push   ebp
1000d7a5:	mov    ebp,esp
1000d7a7:	sub    esp,0x10
1000d7aa:	test   ecx,ecx
1000d7ac:	ja     0x1000d7bc
1000d7ae:	xor    ecx,ecx
1000d7b0:	imul   ecx,ecx,0x18
1000d7b3:	push   ecx
1000d7b4:	call   0x100436de
1000d7b9:	pop    ecx
1000d7ba:	leave  
1000d7bb:	ret    
1000d7bc:	or     eax,0xffffffff
1000d7bf:	xor    edx,edx
1000d7c1:	div    ecx
1000d7c3:	cmp    eax,0x18
1000d7c6:	jae    0x1000d7b0
1000d7c8:	and    DWORD PTR [ebp-0x4],0x0
1000d7cc:	lea    eax,[ebp-0x4]
1000d7cf:	push   eax
1000d7d0:	lea    ecx,[ebp-0x10]
1000d7d3:	call   0x10043152
1000d7d8:	push   0x10074e18
1000d7dd:	lea    eax,[ebp-0x10]
1000d7e0:	push   eax
1000d7e1:	mov    DWORD PTR [ebp-0x10],0x100665c8
1000d7e8:	call   0x10047c54
1000d7ed:	int3   
1000d7ee:	push   0x0
1000d7f0:	mov    eax,0x10061151
1000d7f5:	call   0x10059c75
1000d7fa:	mov    eax,DWORD PTR [ebp+0x8]
1000d7fd:	mov    DWORD PTR [esi],eax
1000d7ff:	mov    eax,DWORD PTR [ebp+0xc]
1000d802:	mov    DWORD PTR [esi+0x4],eax
1000d805:	mov    eax,DWORD PTR [ebp+0x10]
1000d808:	lea    edi,[esi+0xc]
1000d80b:	push   ebx
1000d80c:	mov    ecx,edi
1000d80e:	mov    DWORD PTR [esi+0x8],eax
1000d811:	mov    DWORD PTR [ebp+0x8],edi
1000d814:	call   0x100011ab
1000d819:	and    DWORD PTR [ebp-0x4],0x0
1000d81d:	add    edi,0x1c
1000d820:	lea    ecx,[ebx+0x1c]
1000d823:	push   edi
1000d824:	call   0x1000cefb
1000d829:	mov    BYTE PTR [esi+0x38],0x0
1000d82d:	mov    BYTE PTR [esi+0x39],0x0
1000d831:	mov    eax,esi
1000d833:	call   0x10059d4d
1000d838:	ret    0xc
1000d83b:	push   ecx
1000d83c:	push   ebp
1000d83d:	mov    ebp,DWORD PTR [esp+0xc]
1000d841:	cmp    BYTE PTR [ebp+0x39],0x0
1000d845:	push   edi
1000d846:	mov    DWORD PTR [esp+0x8],ecx
1000d84a:	mov    edi,ebp
1000d84c:	jne    0x1000d885
1000d84e:	push   ebx
1000d84f:	push   esi
1000d850:	push   DWORD PTR [edi+0x8]
1000d853:	mov    ecx,DWORD PTR [esp+0x14]
1000d857:	call   0x1000d83b
1000d85c:	mov    edi,DWORD PTR [edi]
1000d85e:	lea    ebx,[ebp+0xc]
1000d861:	lea    esi,[ebx+0x1c]
1000d864:	call   0x10009816
1000d869:	push   0x0
1000d86b:	push   0x1
1000d86d:	mov    ecx,ebx
1000d86f:	call   0x100012f4
1000d874:	push   ebp
1000d875:	call   0x100430d2
1000d87a:	cmp    BYTE PTR [edi+0x39],0x0
1000d87e:	pop    ecx
1000d87f:	mov    ebp,edi
1000d881:	je     0x1000d850
1000d883:	pop    esi
1000d884:	pop    ebx
1000d885:	pop    edi
1000d886:	pop    ebp
1000d887:	pop    ecx
1000d888:	ret    0x4
1000d88b:	push   0x8
1000d88d:	mov    eax,0x1006112e
1000d892:	call   0x10059c75
1000d897:	and    DWORD PTR [ebp-0x14],0x0
1000d89b:	mov    DWORD PTR [ebp-0x10],edi
1000d89e:	xor    esi,esi
1000d8a0:	lea    eax,[ebp+0x8]
1000d8a3:	inc    esi
1000d8a4:	push   eax
1000d8a5:	mov    ecx,edi
1000d8a7:	mov    DWORD PTR [ebp-0x4],esi
1000d8aa:	call   0x100011ab
1000d8af:	lea    eax,[edi+0x1c]
1000d8b2:	push   eax
1000d8b3:	lea    ecx,[ebp+0x24]
1000d8b6:	mov    BYTE PTR [ebp-0x4],0x2
1000d8ba:	call   0x1000cefb
1000d8bf:	push   0x0
1000d8c1:	push   esi
1000d8c2:	lea    ecx,[ebp+0x8]
1000d8c5:	call   0x100012f4
1000d8ca:	lea    esi,[ebp+0x24]
1000d8cd:	call   0x10009816
1000d8d2:	mov    eax,edi
1000d8d4:	call   0x10059d4d
1000d8d9:	ret    
1000d8da:	push   ebp
1000d8db:	mov    ebp,esp
1000d8dd:	push   ecx
1000d8de:	push   edi
1000d8df:	xor    eax,eax
1000d8e1:	lea    edi,[ebp-0x4]
1000d8e4:	stos   BYTE PTR es:[edi],al
1000d8e5:	push   DWORD PTR [ebp-0x4]
1000d8e8:	mov    eax,DWORD PTR [ebp+0xc]
1000d8eb:	push   DWORD PTR [ebp+0x8]
1000d8ee:	push   DWORD PTR [ebp+0x8]
1000d8f1:	call   0x1000d92a
1000d8f6:	add    esp,0xc
1000d8f9:	pop    edi
1000d8fa:	leave  
1000d8fb:	ret    0x8
1000d8fe:	push   ebp
1000d8ff:	mov    ebp,esp
1000d901:	xor    eax,eax
1000d903:	cmp    DWORD PTR [ebp+0xc],eax
1000d906:	jbe    0x1000d928
1000d908:	push   esi
1000d909:	push   edi
1000d90a:	cmp    DWORD PTR [ebp+0x8],eax
1000d90d:	je     0x1000d91a
1000d90f:	mov    esi,DWORD PTR [ebp+0x10]
1000d912:	mov    edi,DWORD PTR [ebp+0x8]
1000d915:	push   0x6
1000d917:	pop    ecx
1000d918:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000d91a:	dec    DWORD PTR [ebp+0xc]
1000d91d:	add    DWORD PTR [ebp+0x8],0x18
1000d921:	cmp    DWORD PTR [ebp+0xc],eax
1000d924:	ja     0x1000d90a
1000d926:	pop    edi
1000d927:	pop    esi
1000d928:	pop    ebp
1000d929:	ret    
1000d92a:	cmp    edx,DWORD PTR [esp+0x4]
1000d92e:	je     0x1000d94d
1000d930:	push   esi
1000d931:	push   edi
1000d932:	test   eax,eax
1000d934:	je     0x1000d93f
1000d936:	push   0x6
1000d938:	pop    ecx
1000d939:	mov    esi,edx
1000d93b:	mov    edi,eax
1000d93d:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000d93f:	add    edx,0x18
1000d942:	add    eax,0x18
1000d945:	cmp    edx,DWORD PTR [esp+0xc]
1000d949:	jne    0x1000d932
1000d94b:	pop    edi
1000d94c:	pop    esi
1000d94d:	ret    
1000d94e:	push   0x4
1000d950:	mov    eax,0x1005f8ac
1000d955:	call   0x10059c75
1000d95a:	mov    esi,ecx
1000d95c:	push   0xc
1000d95e:	call   0x100436de
1000d963:	pop    ecx
1000d964:	mov    DWORD PTR [ebp-0x10],eax
1000d967:	and    DWORD PTR [ebp-0x4],0x0
1000d96b:	test   eax,eax
1000d96d:	je     0x1000d98e
1000d96f:	and    DWORD PTR [eax+0x4],0x0
1000d973:	cmp    BYTE PTR [ebp+0x8],0x0
1000d977:	mov    DWORD PTR [eax+0x8],0x1
1000d97e:	je     0x1000d98a
1000d980:	push   esi
1000d981:	mov    esi,eax
1000d983:	call   0x1000d9f8
1000d988:	jmp    0x1000d990
1000d98a:	mov    DWORD PTR [eax],esi
1000d98c:	jmp    0x1000d990
1000d98e:	xor    eax,eax
1000d990:	or     DWORD PTR [ebp-0x4],0xffffffff
1000d994:	test   eax,eax
1000d996:	mov    DWORD PTR [edi],eax
1000d998:	jne    0x1000d9a4
1000d99a:	push   0x8007000e
1000d99f:	call   0x10050e30
1000d9a4:	mov    eax,edi
1000d9a6:	call   0x10059d4d
1000d9ab:	ret    0x4
1000d9ae:	push   esi
1000d9af:	mov    esi,DWORD PTR [eax]
1000d9b1:	xor    eax,eax
1000d9b3:	cmp    esi,eax
1000d9b5:	je     0x1000d9c9
1000d9b7:	cmp    DWORD PTR [esi+0x4],eax
1000d9ba:	jne    0x1000d9c6
1000d9bc:	push   DWORD PTR [esi]
1000d9be:	call   0x10050cd0
1000d9c3:	mov    DWORD PTR [esi+0x4],eax
1000d9c6:	mov    eax,DWORD PTR [esi+0x4]
1000d9c9:	pop    esi
1000d9ca:	ret    
1000d9cb:	push   edi
1000d9cc:	mov    edi,eax
1000d9ce:	mov    eax,DWORD PTR [edi]
1000d9d0:	test   eax,eax
1000d9d2:	je     0x1000d9ea
1000d9d4:	cmp    DWORD PTR [eax+0x8],0x1
1000d9d8:	jne    0x1000d9ea
1000d9da:	push   esi
1000d9db:	mov    esi,DWORD PTR [eax]
1000d9dd:	and    DWORD PTR [eax],0x0
1000d9e0:	call   0x100025aa
1000d9e5:	mov    eax,esi
1000d9e7:	pop    esi
1000d9e8:	pop    edi
1000d9e9:	ret    
1000d9ea:	push   0x80004003
1000d9ef:	call   0x10050e30
1000d9f4:	xor    eax,eax
1000d9f6:	pop    edi
1000d9f7:	ret    
1000d9f8:	cmp    DWORD PTR [esp+0x4],0x0
1000d9fd:	je     0x1000da26
1000d9ff:	push   DWORD PTR [esp+0x4]
1000da03:	call   DWORD PTR ds:0x100662a0
1000da09:	push   eax
1000da0a:	push   DWORD PTR [esp+0x8]
1000da0e:	call   DWORD PTR ds:0x100662a8
1000da14:	test   eax,eax
1000da16:	mov    DWORD PTR [esi],eax
1000da18:	jne    0x1000da29
1000da1a:	push   0x8007000e
1000da1f:	call   0x10050e30
1000da24:	jmp    0x1000da29
1000da26:	and    DWORD PTR [esi],0x0
1000da29:	mov    eax,esi
1000da2b:	ret    0x4
1000da2e:	push   0x38
1000da30:	mov    eax,0x10062ef0
1000da35:	call   0x10059c75
1000da3a:	mov    esi,DWORD PTR [ebp+0x8]
1000da3d:	xor    ebx,ebx
1000da3f:	cmp    DWORD PTR [esi+0x8],ebx
1000da42:	jne    0x1000da4e
1000da44:	mov    eax,0x80004005
1000da49:	jmp    0x1000dad7
1000da4e:	mov    ecx,DWORD PTR [ebp+0xc]
1000da51:	push   0x1
1000da53:	lea    edi,[ebp+0xc]
1000da56:	call   0x1000d94e
1000da5b:	mov    ecx,DWORD PTR [ebp+0x10]
1000da5e:	push   0x1
1000da60:	lea    edi,[ebp+0x8]
1000da63:	mov    DWORD PTR [ebp-0x4],ebx
1000da66:	call   0x1000d94e
1000da6b:	mov    eax,edi
1000da6d:	mov    BYTE PTR [ebp-0x4],0x1
1000da71:	call   0x1000d9ae
1000da76:	push   eax
1000da77:	lea    ecx,[ebp-0x44]
1000da7a:	call   0x100011d1
1000da7f:	lea    eax,[ebp+0xc]
1000da82:	mov    BYTE PTR [ebp-0x4],0x2
1000da86:	call   0x1000d9ae
1000da8b:	push   eax
1000da8c:	lea    ecx,[ebp-0x28]
1000da8f:	call   0x100011d1
1000da94:	push   ebx
1000da95:	lea    eax,[ebp-0x28]
1000da98:	mov    BYTE PTR [ebp-0x4],0x3
1000da9c:	mov    edx,DWORD PTR [esi+0x8]
1000da9f:	push   eax
1000daa0:	lea    ecx,[ebp-0x44]
1000daa3:	call   0x10007f58
1000daa8:	mov    ecx,DWORD PTR [ebp+0x14]
1000daab:	neg    al
1000daad:	push   ebx
1000daae:	push   0x1
1000dab0:	sbb    eax,eax
1000dab2:	mov    WORD PTR [ecx],ax
1000dab5:	lea    ecx,[ebp-0x28]
1000dab8:	call   0x100012f4
1000dabd:	push   ebx
1000dabe:	push   0x1
1000dac0:	lea    ecx,[ebp-0x44]
1000dac3:	call   0x100012f4
1000dac8:	call   0x100025aa
1000dacd:	lea    edi,[ebp+0xc]
1000dad0:	call   0x100025aa
1000dad5:	xor    eax,eax
1000dad7:	call   0x10059d4d
1000dadc:	ret    0x10
1000dadf:	push   0x1c
1000dae1:	mov    eax,0x10061015
1000dae6:	call   0x10059c75
1000daeb:	mov    esi,DWORD PTR [ebp+0x8]
1000daee:	cmp    DWORD PTR [esi+0x8],0x0
1000daf2:	jne    0x1000dafb
1000daf4:	mov    eax,0x80004005
1000daf9:	jmp    0x1000db49
1000dafb:	mov    ecx,DWORD PTR [ebp+0xc]
1000dafe:	push   0x1
1000db00:	lea    edi,[ebp+0x8]
1000db03:	call   0x1000d94e
1000db08:	and    DWORD PTR [ebp-0x4],0x0
1000db0c:	mov    eax,edi
1000db0e:	call   0x1000d9ae
1000db13:	push   eax
1000db14:	lea    ecx,[ebp-0x28]
1000db17:	call   0x100011d1
1000db1c:	lea    eax,[ebp-0x28]
1000db1f:	push   eax
1000db20:	mov    BYTE PTR [ebp-0x4],0x1
1000db24:	push   DWORD PTR [esi+0x8]
1000db27:	call   0x10008261
1000db2c:	mov    ecx,DWORD PTR [ebp+0x10]
1000db2f:	neg    al
1000db31:	push   0x0
1000db33:	push   0x1
1000db35:	sbb    eax,eax
1000db37:	mov    WORD PTR [ecx],ax
1000db3a:	lea    ecx,[ebp-0x28]
1000db3d:	call   0x100012f4
1000db42:	call   0x100025aa
1000db47:	xor    eax,eax
1000db49:	call   0x10059d4d
1000db4e:	ret    0xc
1000db51:	mov    eax,DWORD PTR [esp+0x4]
1000db55:	push   edi
1000db56:	mov    edi,DWORD PTR [eax+0x8]
1000db59:	test   edi,edi
1000db5b:	jne    0x1000db64
1000db5d:	mov    eax,0x80004005
1000db62:	jmp    0x1000db6b
1000db64:	call   0x10008374
1000db69:	xor    eax,eax
1000db6b:	pop    edi
1000db6c:	ret    0x4
1000db6f:	push   0x38
1000db71:	mov    eax,0x10062ef0
1000db76:	call   0x10059c75
1000db7b:	mov    esi,DWORD PTR [ebp+0x8]
1000db7e:	cmp    DWORD PTR [esi+0x8],0x0
1000db82:	jne    0x1000db8e
1000db84:	mov    eax,0x80004005
1000db89:	jmp    0x1000dc19
1000db8e:	mov    ecx,DWORD PTR [ebp+0xc]
1000db91:	push   0x1
1000db93:	lea    edi,[ebp+0xc]
1000db96:	call   0x1000d94e
1000db9b:	mov    ecx,DWORD PTR [ebp+0x10]
1000db9e:	and    DWORD PTR [ebp-0x4],0x0
1000dba2:	push   0x1
1000dba4:	lea    edi,[ebp+0x8]
1000dba7:	call   0x1000d94e
1000dbac:	mov    eax,edi
1000dbae:	mov    BYTE PTR [ebp-0x4],0x1
1000dbb2:	call   0x1000d9ae
1000dbb7:	push   eax
1000dbb8:	lea    ecx,[ebp-0x44]
1000dbbb:	call   0x100011d1
1000dbc0:	lea    eax,[ebp+0xc]
1000dbc3:	mov    BYTE PTR [ebp-0x4],0x2
1000dbc7:	call   0x1000d9ae
1000dbcc:	push   eax
1000dbcd:	lea    ecx,[ebp-0x28]
1000dbd0:	call   0x100011d1
1000dbd5:	lea    eax,[ebp-0x28]
1000dbd8:	mov    BYTE PTR [ebp-0x4],0x3
1000dbdc:	mov    edx,DWORD PTR [esi+0x8]
1000dbdf:	push   eax
1000dbe0:	lea    ecx,[ebp-0x44]
1000dbe3:	call   0x100083ac
1000dbe8:	mov    ecx,DWORD PTR [ebp+0x14]
1000dbeb:	neg    al
1000dbed:	push   0x0
1000dbef:	push   0x1
1000dbf1:	sbb    eax,eax
1000dbf3:	mov    WORD PTR [ecx],ax
1000dbf6:	lea    ecx,[ebp-0x28]
1000dbf9:	call   0x100012f4
1000dbfe:	push   0x0
1000dc00:	push   0x1
1000dc02:	lea    ecx,[ebp-0x44]
1000dc05:	call   0x100012f4
1000dc0a:	call   0x100025aa
1000dc0f:	lea    edi,[ebp+0xc]
1000dc12:	call   0x100025aa
1000dc17:	xor    eax,eax
1000dc19:	call   0x10059d4d
1000dc1e:	ret    0x10
1000dc21:	push   0x38
1000dc23:	mov    eax,0x100610fb
1000dc28:	call   0x10059c75
1000dc2d:	mov    esi,DWORD PTR [ebp+0x8]
1000dc30:	xor    ebx,ebx
1000dc32:	cmp    DWORD PTR [esi+0x8],ebx
1000dc35:	jne    0x1000dc41
1000dc37:	mov    eax,0x80004005
1000dc3c:	jmp    0x1000dcc2
1000dc41:	mov    ecx,DWORD PTR [ebp+0xc]
1000dc44:	push   0x1
1000dc46:	lea    edi,[ebp+0xc]
1000dc49:	call   0x1000d94e
1000dc4e:	mov    eax,edi
1000dc50:	mov    DWORD PTR [ebp-0x4],ebx
1000dc53:	call   0x1000d9ae
1000dc58:	push   eax
1000dc59:	lea    ecx,[ebp-0x28]
1000dc5c:	call   0x100011d1
1000dc61:	push   ebx
1000dc62:	lea    eax,[ebp-0x28]
1000dc65:	push   eax
1000dc66:	lea    eax,[ebp-0x44]
1000dc69:	mov    BYTE PTR [ebp-0x4],0x1
1000dc6d:	push   eax
1000dc6e:	mov    eax,DWORD PTR [esi+0x8]
1000dc71:	call   0x100084c3
1000dc76:	mov    BYTE PTR [ebp-0x4],0x2
1000dc7a:	cmp    DWORD PTR [eax+0x18],0x10
1000dc7e:	jb     0x1000dc85
1000dc80:	mov    eax,DWORD PTR [eax+0x4]
1000dc83:	jmp    0x1000dc88
1000dc85:	add    eax,0x4
1000dc88:	push   eax
1000dc89:	lea    edi,[ebp+0x8]
1000dc8c:	call   0x1000244f
1000dc91:	push   ebx
1000dc92:	push   0x1
1000dc94:	lea    ecx,[ebp-0x44]
1000dc97:	call   0x100012f4
1000dc9c:	push   ebx
1000dc9d:	push   0x1
1000dc9f:	lea    ecx,[ebp-0x28]
1000dca2:	call   0x100012f4
1000dca7:	mov    eax,edi
1000dca9:	call   0x1000d9cb
1000dcae:	mov    ecx,DWORD PTR [ebp+0x10]
1000dcb1:	mov    DWORD PTR [ecx],eax
1000dcb3:	call   0x100025aa
1000dcb8:	lea    edi,[ebp+0xc]
1000dcbb:	call   0x100025aa
1000dcc0:	xor    eax,eax
1000dcc2:	call   0x10059d4d
1000dcc7:	ret    0xc
1000dcca:	push   esi
1000dccb:	mov    esi,eax
1000dccd:	call   0x1000dcfb
1000dcd2:	cmp    DWORD PTR [esi],0x0
1000dcd5:	je     0x1000dcf9
1000dcd7:	push   edi
1000dcd8:	mov    edi,DWORD PTR [esi]
1000dcda:	test   edi,edi
1000dcdc:	mov    eax,DWORD PTR [edi+0x4]
1000dcdf:	mov    DWORD PTR [esi],eax
1000dce1:	je     0x1000dcf3
1000dce3:	push   DWORD PTR [edi+0x8]
1000dce6:	call   0x100430d2
1000dceb:	push   edi
1000dcec:	call   0x100430d2
1000dcf1:	pop    ecx
1000dcf2:	pop    ecx
1000dcf3:	cmp    DWORD PTR [esi],0x0
1000dcf6:	jne    0x1000dcd8
1000dcf8:	pop    edi
1000dcf9:	pop    esi
1000dcfa:	ret    
1000dcfb:	push   0x8
1000dcfd:	mov    eax,0x100610c8
1000dd02:	call   0x10059c75
1000dd07:	xor    edi,edi
1000dd09:	cmp    DWORD PTR [esi+0x14],edi
1000dd0c:	je     0x1000dd52
1000dd0e:	lea    eax,[ebp-0x14]
1000dd11:	push   eax
1000dd12:	mov    ebx,esi
1000dd14:	call   0x1000de72
1000dd19:	mov    ecx,DWORD PTR [eax]
1000dd1b:	mov    ebx,ecx
1000dd1d:	mov    DWORD PTR [eax],edi
1000dd1f:	mov    DWORD PTR [ebp-0x10],ebx
1000dd22:	mov    DWORD PTR [ebp-0x4],edi
1000dd25:	cmp    DWORD PTR [ebp-0x14],edi
1000dd28:	je     0x1000dd34
1000dd2a:	mov    edi,DWORD PTR [ebp-0x14]
1000dd2d:	call   0x10009e94
1000dd32:	xor    edi,edi
1000dd34:	cmp    DWORD PTR [ebx+0x18],edi
1000dd37:	jbe    0x1000dd45
1000dd39:	mov    ecx,DWORD PTR [esi+0x14]
1000dd3c:	mov    eax,DWORD PTR [ecx]
1000dd3e:	push   ebx
1000dd3f:	mov    DWORD PTR [ebp-0x10],edi
1000dd42:	call   DWORD PTR [eax+0x4]
1000dd45:	cmp    DWORD PTR [ebp-0x10],edi
1000dd48:	je     0x1000dd52
1000dd4a:	mov    edi,DWORD PTR [ebp-0x10]
1000dd4d:	call   0x10009e94
1000dd52:	call   0x10059d4d
1000dd57:	ret    
1000dd58:	push   ebp
1000dd59:	lea    ebp,[esp-0x10004]
1000dd60:	mov    eax,0x10004
1000dd65:	call   0x1004a080
1000dd6a:	push   0xffffffff
1000dd6c:	push   0x10062226
1000dd71:	mov    eax,fs:0x0
1000dd77:	push   eax
1000dd78:	push   ecx
1000dd79:	push   ecx
1000dd7a:	mov    eax,ds:0x1007e030
1000dd7f:	xor    eax,ebp
1000dd81:	mov    DWORD PTR [ebp+0x10000],eax
1000dd87:	push   ebx
1000dd88:	push   esi
1000dd89:	push   edi
1000dd8a:	push   eax
1000dd8b:	lea    eax,[ebp-0xc]
1000dd8e:	mov    fs:0x0,eax
1000dd94:	mov    esi,ecx
1000dd96:	call   0x1000dcfb
1000dd9b:	mov    ecx,DWORD PTR [esi+0x18]
1000dd9e:	lea    edx,[ebp-0x10]
1000dda1:	push   edx
1000dda2:	xor    ebx,ebx
1000dda4:	push   0x10000
1000dda9:	lea    edx,[ebp+0x0]
1000ddac:	mov    DWORD PTR [ebp-0x10],ebx
1000ddaf:	mov    eax,DWORD PTR [ecx]
1000ddb1:	push   edx
1000ddb2:	call   DWORD PTR [eax+0x4]
1000ddb5:	test   al,al
1000ddb7:	jne    0x1000ddbc
1000ddb9:	mov    DWORD PTR [ebp-0x10],ebx
1000ddbc:	cmp    DWORD PTR [ebp-0x10],ebx
1000ddbf:	jne    0x1000ddc7
1000ddc1:	mov    BYTE PTR [esi+0x10],0x1
1000ddc5:	jmp    0x1000de2a
1000ddc7:	push   0xc
1000ddc9:	call   0x100436de
1000ddce:	mov    edi,eax
1000ddd0:	pop    ecx
1000ddd1:	mov    DWORD PTR [ebp-0x14],edi
1000ddd4:	cmp    edi,ebx
1000ddd6:	mov    DWORD PTR [ebp-0x4],ebx
1000ddd9:	je     0x1000ddfd
1000dddb:	mov    eax,DWORD PTR [ebp-0x10]
1000ddde:	push   eax
1000dddf:	mov    DWORD PTR [edi],eax
1000dde1:	mov    DWORD PTR [edi+0x4],ebx
1000dde4:	call   0x100439b6
1000dde9:	push   DWORD PTR [edi]
1000ddeb:	lea    ecx,[ebp+0x0]
1000ddee:	push   ecx
1000ddef:	push   eax
1000ddf0:	mov    DWORD PTR [edi+0x8],eax
1000ddf3:	call   0x10045420
1000ddf8:	add    esp,0x10
1000ddfb:	jmp    0x1000ddff
1000ddfd:	xor    edi,edi
1000ddff:	mov    eax,DWORD PTR [esi]
1000de01:	cmp    eax,ebx
1000de03:	jne    0x1000de0f
1000de05:	mov    DWORD PTR [esi],edi
1000de07:	mov    DWORD PTR [esi+0x4],edi
1000de0a:	jmp    0x1000de17
1000de0c:	mov    eax,DWORD PTR [eax+0x4]
1000de0f:	cmp    DWORD PTR [eax+0x4],ebx
1000de12:	jne    0x1000de0c
1000de14:	mov    DWORD PTR [eax+0x4],edi
1000de17:	mov    eax,DWORD PTR [esi+0x4]
1000de1a:	mov    ecx,DWORD PTR [esi+0x8]
1000de1d:	cmp    ecx,DWORD PTR [eax]
1000de1f:	jne    0x1000de2a
1000de21:	mov    eax,DWORD PTR [eax+0x4]
1000de24:	mov    DWORD PTR [esi+0x4],eax
1000de27:	mov    DWORD PTR [esi+0x8],ebx
1000de2a:	mov    ecx,DWORD PTR [ebp-0xc]
1000de2d:	mov    DWORD PTR fs:0x0,ecx
1000de34:	pop    ecx
1000de35:	pop    edi
1000de36:	pop    esi
1000de37:	pop    ebx
1000de38:	mov    ecx,DWORD PTR [ebp+0x10000]
1000de3e:	xor    ecx,ebp
1000de40:	call   0x100430d7
1000de45:	add    ebp,0x10004
1000de4b:	leave  
1000de4c:	ret    
1000de4d:	cmp    BYTE PTR [esi+0x10],0x0
1000de51:	je     0x1000de56
1000de53:	mov    al,0x1
1000de55:	ret    
1000de56:	mov    eax,DWORD PTR [esi+0x4]
1000de59:	test   eax,eax
1000de5b:	je     0x1000de67
1000de5d:	mov    ecx,DWORD PTR [esi+0x8]
1000de60:	cmp    ecx,DWORD PTR [eax]
1000de62:	jae    0x1000de67
1000de64:	xor    al,al
1000de66:	ret    
1000de67:	mov    ecx,esi
1000de69:	call   0x1000dd58
1000de6e:	mov    al,BYTE PTR [esi+0x10]
1000de71:	ret    
1000de72:	push   0x8
1000de74:	mov    eax,0x100610a5
1000de79:	call   0x10059c75
1000de7e:	xor    esi,esi
1000de80:	mov    DWORD PTR [ebp-0x4],esi
1000de83:	push   0x24
1000de85:	mov    DWORD PTR [ebp-0x10],esi
1000de88:	call   0x100436de
1000de8d:	pop    ecx
1000de8e:	mov    DWORD PTR [ebp-0x14],eax
1000de91:	xor    edi,edi
1000de93:	inc    edi
1000de94:	cmp    eax,esi
1000de96:	mov    DWORD PTR [ebp-0x4],edi
1000de99:	je     0x1000dea5
1000de9b:	push   eax
1000de9c:	call   0x10007668
1000dea1:	mov    ecx,eax
1000dea3:	jmp    0x1000dea7
1000dea5:	xor    ecx,ecx
1000dea7:	mov    eax,DWORD PTR [ebp+0x8]
1000deaa:	mov    DWORD PTR [eax],ecx
1000deac:	mov    DWORD PTR [ebp-0x4],esi
1000deaf:	mov    eax,DWORD PTR [ebx+0xc]
1000deb2:	mov    esi,ecx
1000deb4:	mov    DWORD PTR [ebp-0x10],edi
1000deb7:	call   0x1000788d
1000debc:	jmp    0x1000deeb
1000debe:	mov    ecx,DWORD PTR [ebx]
1000dec0:	mov    edx,DWORD PTR [ecx+0x8]
1000dec3:	mov    eax,DWORD PTR [ebp+0x8]
1000dec6:	mov    eax,DWORD PTR [eax]
1000dec8:	mov    edi,DWORD PTR [ecx]
1000deca:	push   edx
1000decb:	call   0x100076b0
1000ded0:	mov    esi,DWORD PTR [ebx]
1000ded2:	test   esi,esi
1000ded4:	mov    eax,DWORD PTR [esi+0x4]
1000ded7:	mov    DWORD PTR [ebx],eax
1000ded9:	je     0x1000deeb
1000dedb:	push   DWORD PTR [esi+0x8]
1000dede:	call   0x100430d2
1000dee3:	push   esi
1000dee4:	call   0x100430d2
1000dee9:	pop    ecx
1000deea:	pop    ecx
1000deeb:	mov    eax,DWORD PTR [ebx]
1000deed:	cmp    eax,DWORD PTR [ebx+0x4]
1000def0:	jne    0x1000debe
1000def2:	test   eax,eax
1000def4:	je     0x1000df86
1000defa:	mov    edi,DWORD PTR [ebx+0x8]
1000defd:	test   edi,edi
1000deff:	je     0x1000df86
1000df05:	mov    eax,DWORD PTR [eax+0x8]
1000df08:	mov    ecx,DWORD PTR [ebp+0x8]
1000df0b:	mov    ecx,DWORD PTR [ecx]
1000df0d:	push   eax
1000df0e:	mov    eax,ecx
1000df10:	xor    esi,esi
1000df12:	call   0x100076b0
1000df17:	mov    eax,DWORD PTR [ebx]
1000df19:	mov    ecx,DWORD PTR [ebx+0x8]
1000df1c:	cmp    ecx,DWORD PTR [eax]
1000df1e:	jae    0x1000df6e
1000df20:	push   0xc
1000df22:	call   0x100436de
1000df27:	mov    esi,eax
1000df29:	pop    ecx
1000df2a:	mov    DWORD PTR [ebp-0x14],esi
1000df2d:	test   esi,esi
1000df2f:	mov    DWORD PTR [ebp-0x4],0x2
1000df36:	je     0x1000df64
1000df38:	mov    eax,DWORD PTR [ebx]
1000df3a:	mov    edx,DWORD PTR [eax+0x8]
1000df3d:	mov    ecx,DWORD PTR [ebx+0x8]
1000df40:	mov    eax,DWORD PTR [eax]
1000df42:	and    DWORD PTR [esi+0x4],0x0
1000df46:	sub    eax,ecx
1000df48:	push   eax
1000df49:	lea    edi,[ecx+edx*1]
1000df4c:	mov    DWORD PTR [esi],eax
1000df4e:	call   0x100439b6
1000df53:	push   DWORD PTR [esi]
1000df55:	mov    DWORD PTR [esi+0x8],eax
1000df58:	push   edi
1000df59:	push   eax
1000df5a:	call   0x10045420
1000df5f:	add    esp,0x10
1000df62:	jmp    0x1000df66
1000df64:	xor    esi,esi
1000df66:	mov    eax,DWORD PTR [ebx]
1000df68:	mov    eax,DWORD PTR [eax+0x4]
1000df6b:	mov    DWORD PTR [esi+0x4],eax
1000df6e:	mov    edi,DWORD PTR [ebx]
1000df70:	test   edi,edi
1000df72:	mov    DWORD PTR [ebx],esi
1000df74:	je     0x1000df86
1000df76:	push   DWORD PTR [edi+0x8]
1000df79:	call   0x100430d2
1000df7e:	push   edi
1000df7f:	call   0x100430d2
1000df84:	pop    ecx
1000df85:	pop    ecx
1000df86:	mov    eax,DWORD PTR [ebx]
1000df88:	and    DWORD PTR [ebx+0x8],0x0
1000df8c:	and    DWORD PTR [ebx+0xc],0x0
1000df90:	mov    DWORD PTR [ebx+0x4],eax
1000df93:	mov    eax,DWORD PTR [ebp+0x8]
1000df96:	call   0x10059d4d
1000df9b:	ret    0x4
1000df9e:	push   esi
1000df9f:	mov    esi,eax
1000dfa1:	call   0x1000de4d
1000dfa6:	test   al,al
1000dfa8:	jne    0x1000dfb8
1000dfaa:	mov    eax,DWORD PTR [esi+0x4]
1000dfad:	mov    ecx,DWORD PTR [esi+0x8]
1000dfb0:	mov    eax,DWORD PTR [eax+0x8]
1000dfb3:	mov    al,BYTE PTR [eax+ecx*1]
1000dfb6:	pop    esi
1000dfb7:	ret    
1000dfb8:	xor    al,al
1000dfba:	pop    esi
1000dfbb:	ret    
1000dfbc:	push   esi
1000dfbd:	mov    esi,eax
1000dfbf:	call   0x1000de4d
1000dfc4:	test   al,al
1000dfc6:	je     0x1000dfcc
1000dfc8:	xor    al,al
1000dfca:	pop    esi
1000dfcb:	ret    
1000dfcc:	mov    eax,DWORD PTR [esi+0x4]
1000dfcf:	test   eax,eax
1000dfd1:	je     0x1000dff1
1000dfd3:	mov    ecx,DWORD PTR [esi+0x8]
1000dfd6:	inc    ecx
1000dfd7:	cmp    ecx,DWORD PTR [eax]
1000dfd9:	jb     0x1000dfeb
1000dfdb:	mov    eax,DWORD PTR [eax+0x4]
1000dfde:	test   eax,eax
1000dfe0:	je     0x1000dfeb
1000dfe2:	and    DWORD PTR [esi+0x8],0x0
1000dfe6:	mov    DWORD PTR [esi+0x4],eax
1000dfe9:	jmp    0x1000dfee
1000dfeb:	mov    DWORD PTR [esi+0x8],ecx
1000dfee:	inc    DWORD PTR [esi+0xc]
1000dff1:	mov    al,0x1
1000dff3:	pop    esi
1000dff4:	ret    
1000dff5:	push   esi
1000dff6:	mov    esi,eax
1000dff8:	call   0x1000de4d
1000dffd:	test   al,al
1000dfff:	je     0x1000e005
1000e001:	xor    eax,eax
1000e003:	jmp    0x1000e053
1000e005:	mov    eax,DWORD PTR [esi+0x4]
1000e008:	mov    ecx,DWORD PTR [esi+0x8]
1000e00b:	push   edi
1000e00c:	mov    edi,DWORD PTR [eax]
1000e00e:	sub    edi,ecx
1000e010:	cmp    edi,DWORD PTR [esp+0x10]
1000e014:	jbe    0x1000e01a
1000e016:	mov    edi,DWORD PTR [esp+0x10]
1000e01a:	mov    eax,DWORD PTR [eax+0x8]
1000e01d:	push   edi
1000e01e:	add    eax,ecx
1000e020:	push   eax
1000e021:	push   DWORD PTR [esp+0x14]
1000e025:	call   0x10045420
1000e02a:	mov    eax,DWORD PTR [esi+0x8]
1000e02d:	lea    ecx,[edi+eax*1]
1000e030:	mov    eax,DWORD PTR [esi+0x4]
1000e033:	add    esp,0xc
1000e036:	cmp    ecx,DWORD PTR [eax]
1000e038:	jb     0x1000e04a
1000e03a:	mov    eax,DWORD PTR [eax+0x4]
1000e03d:	test   eax,eax
1000e03f:	je     0x1000e04a
1000e041:	and    DWORD PTR [esi+0x8],0x0
1000e045:	mov    DWORD PTR [esi+0x4],eax
1000e048:	jmp    0x1000e04d
1000e04a:	mov    DWORD PTR [esi+0x8],ecx
1000e04d:	add    DWORD PTR [esi+0xc],edi
1000e050:	mov    eax,edi
1000e052:	pop    edi
1000e053:	pop    esi
1000e054:	ret    0x8
1000e057:	push   esi
1000e058:	mov    esi,eax
1000e05a:	call   0x1000de4d
1000e05f:	test   al,al
1000e061:	je     0x1000e067
1000e063:	xor    al,al
1000e065:	pop    esi
1000e066:	ret    
1000e067:	mov    eax,DWORD PTR [esi+0x4]
1000e06a:	xor    ecx,ecx
1000e06c:	jmp    0x1000e07f
1000e06e:	mov    edx,DWORD PTR [eax]
1000e070:	sub    edx,DWORD PTR [esi+0x8]
1000e073:	add    DWORD PTR [esi+0xc],edx
1000e076:	mov    eax,DWORD PTR [eax+0x4]
1000e079:	mov    DWORD PTR [esi+0x4],eax
1000e07c:	mov    DWORD PTR [esi+0x8],ecx
1000e07f:	cmp    DWORD PTR [eax+0x4],ecx
1000e082:	mov    eax,DWORD PTR [esi+0x4]
1000e085:	jne    0x1000e06e
1000e087:	mov    ecx,DWORD PTR [eax]
1000e089:	sub    ecx,DWORD PTR [esi+0x8]
1000e08c:	add    DWORD PTR [esi+0xc],ecx
1000e08f:	mov    eax,DWORD PTR [eax]
1000e091:	mov    DWORD PTR [esi+0x8],eax
1000e094:	mov    al,0x1
1000e096:	pop    esi
1000e097:	ret    
1000e098:	push   0x10
1000e09a:	mov    eax,0x100648c0
1000e09f:	call   0x10059c75
1000e0a4:	mov    ebx,ecx
1000e0a6:	xor    edi,edi
1000e0a8:	mov    DWORD PTR [ebp-0x10],edi
1000e0ab:	mov    DWORD PTR [ebp-0x4],edi
1000e0ae:	mov    DWORD PTR [ebp-0x14],edi
1000e0b1:	mov    DWORD PTR [ebp-0x18],edi
1000e0b4:	lea    eax,[ebp-0x18]
1000e0b7:	push   eax
1000e0b8:	lea    eax,[ebp-0x14]
1000e0bb:	push   eax
1000e0bc:	lea    eax,[ebp-0x10]
1000e0bf:	push   eax
1000e0c0:	mov    BYTE PTR [ebp-0x4],0x2
1000e0c4:	call   0x1000e161
1000e0c9:	cmp    eax,edi
1000e0cb:	je     0x1000e0f1
1000e0cd:	mov    esi,eax
1000e0cf:	lea    eax,[ebp-0x18]
1000e0d2:	call   0x10009c00
1000e0d7:	lea    eax,[ebp-0x14]
1000e0da:	call   0x10009c00
1000e0df:	lea    eax,[ebp-0x10]
1000e0e2:	call   0x10009c00
1000e0e7:	mov    eax,esi
1000e0e9:	call   0x10059d4d
1000e0ee:	ret    0x4
1000e0f1:	mov    esi,DWORD PTR [ebx]
1000e0f3:	call   0x1000de4d
1000e0f8:	test   al,al
1000e0fa:	je     0x1000e101
1000e0fc:	xor    esi,esi
1000e0fe:	inc    esi
1000e0ff:	jmp    0x1000e0cf
1000e101:	mov    esi,DWORD PTR [ebp+0x8]
1000e104:	lea    eax,[esi+0x18]
1000e107:	push   eax
1000e108:	mov    ecx,ebx
1000e10a:	call   0x1000ed56
1000e10f:	cmp    eax,edi
1000e111:	jne    0x1000e0cd
1000e113:	push   edi
1000e114:	sub    esp,0x1c
1000e117:	mov    ecx,esp
1000e119:	mov    DWORD PTR [ebp+0x8],esp
1000e11c:	push   0x1006d3a4
1000e121:	call   0x100011d1
1000e126:	call   0x1000ef05
1000e12b:	cmp    eax,edi
1000e12d:	jne    0x1000e0cd
1000e12f:	mov    ebx,DWORD PTR [ebp-0x10]
1000e132:	mov    DWORD PTR [ebp-0x10],edi
1000e135:	mov    edi,esi
1000e137:	call   0x10009c24
1000e13c:	mov    ebx,DWORD PTR [ebp-0x14]
1000e13f:	and    DWORD PTR [ebp-0x14],0x0
1000e143:	lea    edi,[esi+0x4]
1000e146:	call   0x10009c24
1000e14b:	mov    ebx,DWORD PTR [ebp-0x18]
1000e14e:	and    DWORD PTR [ebp-0x18],0x0
1000e152:	lea    edi,[esi+0x8]
1000e155:	call   0x10009c24
1000e15a:	xor    esi,esi
1000e15c:	jmp    0x1000e0cf
1000e161:	push   0x50
1000e163:	mov    eax,0x10064883
1000e168:	call   0x10059cde
1000e16d:	mov    eax,DWORD PTR [ebp+0x8]
1000e170:	mov    DWORD PTR [ebp-0x58],eax
1000e173:	mov    eax,DWORD PTR [ebp+0xc]
1000e176:	mov    edi,ecx
1000e178:	mov    DWORD PTR [ebp-0x5c],eax
1000e17b:	mov    eax,DWORD PTR [ebp+0x10]
1000e17e:	push   0x0
1000e180:	lea    ecx,[ebp-0x2c]
1000e183:	mov    DWORD PTR [ebp-0x4c],edi
1000e186:	mov    DWORD PTR [ebp-0x54],eax
1000e189:	mov    DWORD PTR [ebp-0x14],0xf
1000e190:	call   0x10001420
1000e195:	and    DWORD PTR [ebp-0x4],0x0
1000e199:	mov    eax,DWORD PTR [edi]
1000e19b:	mov    ebx,DWORD PTR [eax+0xc]
1000e19e:	push   0x1
1000e1a0:	lea    eax,[ebp-0x2c]
1000e1a3:	push   eax
1000e1a4:	call   0x1000f229
1000e1a9:	test   eax,eax
1000e1ab:	mov    ecx,DWORD PTR [edi]
1000e1ad:	mov    edi,DWORD PTR [ecx+0xc]
1000e1b0:	je     0x1000e1c7
1000e1b2:	mov    esi,eax
1000e1b4:	push   0x0
1000e1b6:	push   0x1
1000e1b8:	lea    ecx,[ebp-0x2c]
1000e1bb:	call   0x100012f4
1000e1c0:	mov    eax,esi
1000e1c2:	jmp    0x1000e34c
1000e1c7:	push   0xb2a4a18
1000e1cc:	push   0x1006d910
1000e1d1:	call   0x100042d1
1000e1d6:	push   eax
1000e1d7:	push   0x3
1000e1d9:	push   0x1006d524
1000e1de:	call   0x100042e3
1000e1e3:	add    esp,0x14
1000e1e6:	push   eax
1000e1e7:	lea    esi,[ebp-0x2c]
1000e1ea:	call   0x100065b3
1000e1ef:	test   al,al
1000e1f1:	pop    ecx
1000e1f2:	jne    0x1000e247
1000e1f4:	push   0x45dead94
1000e1f9:	push   0x1006d950
1000e1fe:	call   0x100042d1
1000e203:	push   0x465d961c
1000e208:	push   eax
1000e209:	call   0x100042d1
1000e20e:	push   0x7ff8679a
1000e213:	push   eax
1000e214:	call   0x100042d1
1000e219:	push   0x3e3881d2
1000e21e:	push   eax
1000e21f:	call   0x100042d1
1000e224:	push   eax
1000e225:	push   0x4
1000e227:	push   0x1006d980
1000e22c:	call   0x100042e3
1000e231:	add    esp,0x2c
1000e234:	push   eax
1000e235:	call   0x100065b3
1000e23a:	test   al,al
1000e23c:	pop    ecx
1000e23d:	jne    0x1000e247
1000e23f:	xor    esi,esi
1000e241:	inc    esi
1000e242:	jmp    0x1000e1b4
1000e247:	push   0x24
1000e249:	call   0x100436de
1000e24e:	pop    ecx
1000e24f:	mov    DWORD PTR [ebp-0x50],eax
1000e252:	test   eax,eax
1000e254:	mov    BYTE PTR [ebp-0x4],0x1
1000e258:	je     0x1000e26a
1000e25a:	sub    edi,ebx
1000e25c:	push   edi
1000e25d:	push   ebx
1000e25e:	lea    ecx,[ebp-0x2c]
1000e261:	push   ecx
1000e262:	push   eax
1000e263:	call   0x100078d9
1000e268:	jmp    0x1000e26c
1000e26a:	xor    eax,eax
1000e26c:	mov    edi,DWORD PTR [ebp-0x58]
1000e26f:	mov    ebx,eax
1000e271:	call   0x10009c24
1000e276:	or     DWORD PTR [ebp-0x4],0xffffffff
1000e27a:	push   0x0
1000e27c:	push   0x1
1000e27e:	lea    ecx,[ebp-0x2c]
1000e281:	call   0x100012f4
1000e286:	mov    esi,DWORD PTR [ebp-0x4c]
1000e289:	mov    edi,esi
1000e28b:	call   0x1000ef94
1000e290:	test   eax,eax
1000e292:	jne    0x1000e34c
1000e298:	push   eax
1000e299:	lea    ecx,[ebp-0x48]
1000e29c:	mov    DWORD PTR [ebp-0x30],0xf
1000e2a3:	call   0x10001420
1000e2a8:	mov    DWORD PTR [ebp-0x4],0x2
1000e2af:	mov    eax,DWORD PTR [esi]
1000e2b1:	mov    ebx,DWORD PTR [eax+0xc]
1000e2b4:	lea    eax,[ebp-0x48]
1000e2b7:	push   eax
1000e2b8:	call   0x1000f2f4
1000e2bd:	test   eax,eax
1000e2bf:	mov    ecx,DWORD PTR [esi]
1000e2c1:	mov    edi,DWORD PTR [ecx+0xc]
1000e2c4:	mov    DWORD PTR [ebp-0x4c],eax
1000e2c7:	je     0x1000e2da
1000e2c9:	push   0x0
1000e2cb:	push   0x1
1000e2cd:	lea    ecx,[ebp-0x48]
1000e2d0:	call   0x100012f4
1000e2d5:	mov    eax,DWORD PTR [ebp-0x4c]
1000e2d8:	jmp    0x1000e34c
1000e2da:	push   0x24
1000e2dc:	call   0x100436de
1000e2e1:	pop    ecx
1000e2e2:	mov    DWORD PTR [ebp-0x50],eax
1000e2e5:	test   eax,eax
1000e2e7:	mov    BYTE PTR [ebp-0x4],0x3
1000e2eb:	je     0x1000e2fd
1000e2ed:	sub    edi,ebx
1000e2ef:	push   edi
1000e2f0:	push   ebx
1000e2f1:	lea    ecx,[ebp-0x48]
1000e2f4:	push   ecx
1000e2f5:	push   eax
1000e2f6:	call   0x100078d9
1000e2fb:	jmp    0x1000e2ff
1000e2fd:	xor    eax,eax
1000e2ff:	mov    edi,DWORD PTR [ebp-0x5c]
1000e302:	mov    ebx,eax
1000e304:	call   0x10009c24
1000e309:	or     DWORD PTR [ebp-0x4],0xffffffff
1000e30d:	push   0x0
1000e30f:	push   0x1
1000e311:	lea    ecx,[ebp-0x48]
1000e314:	call   0x100012f4
1000e319:	mov    edi,esi
1000e31b:	call   0x1000ef94
1000e320:	test   eax,eax
1000e322:	jne    0x1000e34c
1000e324:	push   DWORD PTR [ebp-0x54]
1000e327:	mov    ecx,esi
1000e329:	call   0x1000efc2
1000e32e:	test   eax,eax
1000e330:	jne    0x1000e34c
1000e332:	push   eax
1000e333:	sub    esp,0x1c
1000e336:	mov    ecx,esp
1000e338:	mov    DWORD PTR [ebp-0x50],esp
1000e33b:	push   0x1006d3a4
1000e340:	call   0x100011d1
1000e345:	mov    ebx,esi
1000e347:	call   0x1000ef05
1000e34c:	call   0x10059d61
1000e351:	ret    0xc
1000e354:	push   0x80
1000e359:	mov    eax,0x10063dbd
1000e35e:	call   0x10059cde
1000e363:	mov    eax,DWORD PTR [ebp+0x8]
1000e366:	push   0x2deb468
1000e36b:	xor    ebx,ebx
1000e36d:	push   0x1006d988
1000e372:	mov    DWORD PTR [ebp-0x38],eax
1000e375:	mov    edi,ecx
1000e377:	mov    DWORD PTR [ebp-0x34],ebx
1000e37a:	call   0x100042d1
1000e37f:	push   0x2de51eb2
1000e384:	push   eax
1000e385:	call   0x100042d1
1000e38a:	push   0x3da17370
1000e38f:	push   eax
1000e390:	call   0x100042d1
1000e395:	push   0x4931887e
1000e39a:	push   eax
1000e39b:	call   0x100042d1
1000e3a0:	push   0x4b5aaf6
1000e3a5:	push   eax
1000e3a6:	call   0x100042d1
1000e3ab:	push   0x497eadb6
1000e3b0:	push   eax
1000e3b1:	call   0x100042d1
1000e3b6:	push   eax
1000e3b7:	push   0xe
1000e3b9:	mov    esi,0x1006d9c0
1000e3be:	push   esi
1000e3bf:	call   0x100042e3
1000e3c4:	add    esp,0x3c
1000e3c7:	push   eax
1000e3c8:	lea    ecx,[ebp-0x54]
1000e3cb:	call   0x100011d1
1000e3d0:	lea    eax,[ebp-0x54]
1000e3d3:	add    edi,0x18
1000e3d6:	push   eax
1000e3d7:	mov    eax,edi
1000e3d9:	call   0x1000853c
1000e3de:	push   ebx
1000e3df:	push   0x1
1000e3e1:	lea    ecx,[ebp-0x54]
1000e3e4:	mov    BYTE PTR [ebp-0x2d],al
1000e3e7:	call   0x100012f4
1000e3ec:	cmp    BYTE PTR [ebp-0x2d],bl
1000e3ef:	je     0x1000e486
1000e3f5:	push   ebx
1000e3f6:	lea    ecx,[ebp-0x2c]
1000e3f9:	mov    DWORD PTR [ebp-0x14],0xf
1000e400:	call   0x10001420
1000e405:	push   0x1006d9d0
1000e40a:	push   0xe
1000e40c:	push   esi
1000e40d:	mov    DWORD PTR [ebp-0x4],ebx
1000e410:	call   0x100042e3
1000e415:	add    esp,0xc
1000e418:	push   eax
1000e419:	lea    ecx,[ebp-0x70]
1000e41c:	call   0x100011d1
1000e421:	push   ebx
1000e422:	lea    eax,[ebp-0x70]
1000e425:	push   eax
1000e426:	lea    eax,[ebp-0x8c]
1000e42c:	push   eax
1000e42d:	mov    eax,edi
1000e42f:	mov    BYTE PTR [ebp-0x4],0x1
1000e433:	call   0x100084c3
1000e438:	cmp    DWORD PTR [eax+0x18],0x10
1000e43c:	jb     0x1000e443
1000e43e:	mov    eax,DWORD PTR [eax+0x4]
1000e441:	jmp    0x1000e446
1000e443:	add    eax,0x4
1000e446:	push   eax
1000e447:	call   0x10045f55
1000e44c:	pop    ecx
1000e44d:	push   ebx
1000e44e:	push   0x1
1000e450:	lea    ecx,[ebp-0x8c]
1000e456:	mov    esi,eax
1000e458:	call   0x100012f4
1000e45d:	push   ebx
1000e45e:	push   0x1
1000e460:	lea    ecx,[ebp-0x70]
1000e463:	mov    BYTE PTR [ebp-0x4],bl
1000e466:	call   0x100012f4
1000e46b:	push   esi
1000e46c:	lea    eax,[ebp-0x2c]
1000e46f:	push   eax
1000e470:	push   DWORD PTR [ebp-0x38]
1000e473:	call   0x1000f382
1000e478:	push   ebx
1000e479:	push   0x1
1000e47b:	lea    ecx,[ebp-0x2c]
1000e47e:	mov    DWORD PTR [ebp-0x34],eax
1000e481:	call   0x100012f4
1000e486:	mov    eax,DWORD PTR [ebp-0x34]
1000e489:	call   0x10059d61
1000e48e:	ret    0x4
1000e491:	push   0x40
1000e493:	mov    eax,0x100621f7
1000e498:	call   0x10059cde
1000e49d:	mov    eax,DWORD PTR [ebp+0x8]
1000e4a0:	mov    eax,DWORD PTR [eax]
1000e4a2:	mov    edi,ecx
1000e4a4:	lea    ecx,[ebp-0x4c]
1000e4a7:	push   ecx
1000e4a8:	call   0x1000795e
1000e4ad:	mov    esi,eax
1000e4af:	and    DWORD PTR [ebp-0x4],0x0
1000e4b3:	push   0x4cced5fc
1000e4b8:	push   0x1006da08
1000e4bd:	call   0x100042d1
1000e4c2:	push   eax
1000e4c3:	push   0x4
1000e4c5:	push   0x1006da34
1000e4ca:	call   0x100042e3
1000e4cf:	push   eax
1000e4d0:	call   0x100065b3
1000e4d5:	or     DWORD PTR [ebp-0x4],0xffffffff
1000e4d9:	add    esp,0x18
1000e4dc:	xor    ebx,ebx
1000e4de:	push   0x0
1000e4e0:	inc    ebx
1000e4e1:	push   ebx
1000e4e2:	lea    ecx,[ebp-0x4c]
1000e4e5:	mov    BYTE PTR [ebp-0x2d],al
1000e4e8:	call   0x100012f4
1000e4ed:	cmp    BYTE PTR [ebp-0x2d],0x0
1000e4f1:	jne    0x1000e590
1000e4f7:	mov    eax,DWORD PTR [edi+0x4]
1000e4fa:	lea    ecx,[ebp-0x2c]
1000e4fd:	push   ecx
1000e4fe:	call   0x1000795e
1000e503:	xor    edi,edi
1000e505:	lea    eax,[ebp-0x2c]
1000e508:	mov    DWORD PTR [ebp-0x4],ebx
1000e50b:	call   0x10011fbe
1000e510:	cmp    BYTE PTR [eax],0x31
1000e513:	je     0x1000e585
1000e515:	push   0x1e8ea014
1000e51a:	push   0x1006da3c
1000e51f:	call   0x100042d1
1000e524:	push   eax
1000e525:	push   0x3
1000e527:	push   0x1006da6c
1000e52c:	call   0x100042e3
1000e531:	push   eax
1000e532:	lea    esi,[ebp-0x2c]
1000e535:	call   0x100065b3
1000e53a:	add    esp,0x18
1000e53d:	test   al,al
1000e53f:	jne    0x1000e585
1000e541:	push   0x8522690
1000e546:	push   0x620f0d38
1000e54b:	push   0x1006da70
1000e550:	call   0x100042d1
1000e555:	pop    ecx
1000e556:	pop    ecx
1000e557:	push   eax
1000e558:	call   0x100042d1
1000e55d:	push   eax
1000e55e:	push   0x3
1000e560:	push   0x1006da94
1000e565:	call   0x100042e3
1000e56a:	push   eax
1000e56b:	call   0x100065b3
1000e570:	add    esp,0x18
1000e573:	test   al,al
1000e575:	jne    0x1000e585
1000e577:	push   0x0
1000e579:	push   ebx
1000e57a:	mov    ecx,esi
1000e57c:	call   0x100012f4
1000e581:	mov    al,bl
1000e583:	jmp    0x1000e592
1000e585:	push   0x0
1000e587:	push   ebx
1000e588:	lea    ecx,[ebp-0x2c]
1000e58b:	call   0x100012f4
1000e590:	xor    al,al
1000e592:	call   0x10059d61
1000e597:	ret    
1000e598:	push   0xc
1000e59a:	mov    eax,0x10064844
1000e59f:	call   0x10059c75
1000e5a4:	xor    edi,edi
1000e5a6:	mov    DWORD PTR [ebp-0x18],edi
1000e5a9:	mov    DWORD PTR [ebp-0x4],edi
1000e5ac:	mov    DWORD PTR [ebp-0x14],edi
1000e5af:	mov    DWORD PTR [ebp-0x10],edi
1000e5b2:	mov    esi,DWORD PTR [ebp+0x8]
1000e5b5:	lea    eax,[ebp-0x10]
1000e5b8:	push   eax
1000e5b9:	lea    eax,[ebp-0x18]
1000e5bc:	push   eax
1000e5bd:	lea    ecx,[ebp-0x14]
1000e5c0:	mov    BYTE PTR [ebp-0x4],0x2
1000e5c4:	call   0x1000eba4
1000e5c9:	mov    esi,eax
1000e5cb:	cmp    esi,edi
1000e5cd:	jne    0x1000e654
1000e5d3:	mov    esi,DWORD PTR [ebp+0xc]
1000e5d6:	mov    ecx,DWORD PTR [ebp+0x8]
1000e5d9:	lea    eax,[esi+0x20]
1000e5dc:	push   eax
1000e5dd:	call   0x1000ed56
1000e5e2:	mov    ebx,eax
1000e5e4:	cmp    ebx,edi
1000e5e6:	je     0x1000e604
1000e5e8:	lea    eax,[ebp-0x10]
1000e5eb:	call   0x10009c00
1000e5f0:	lea    eax,[ebp-0x14]
1000e5f3:	call   0x10009c00
1000e5f8:	lea    eax,[ebp-0x18]
1000e5fb:	call   0x10009c00
1000e600:	mov    eax,ebx
1000e602:	jmp    0x1000e66e
1000e604:	mov    ebx,DWORD PTR [ebp-0x18]
1000e607:	mov    DWORD PTR [ebp-0x18],edi
1000e60a:	mov    edi,esi
1000e60c:	call   0x10009c24
1000e611:	mov    ebx,DWORD PTR [ebp-0x14]
1000e614:	and    DWORD PTR [ebp-0x14],0x0
1000e618:	lea    edi,[esi+0x4]
1000e61b:	call   0x10009c24
1000e620:	mov    ebx,DWORD PTR [ebp-0x10]
1000e623:	and    DWORD PTR [ebp-0x10],0x0
1000e627:	add    esi,0x8
1000e62a:	mov    edi,esi
1000e62c:	call   0x10009c24
1000e631:	xor    esi,esi
1000e633:	push   esi
1000e634:	sub    esp,0x1c
1000e637:	mov    ecx,esp
1000e639:	mov    DWORD PTR [ebp+0xc],esp
1000e63c:	push   0x1006d3a4
1000e641:	call   0x100011d1
1000e646:	mov    ebx,DWORD PTR [ebp+0x8]
1000e649:	call   0x1000ef05
1000e64e:	cmp    eax,esi
1000e650:	je     0x1000e654
1000e652:	mov    esi,eax
1000e654:	lea    eax,[ebp-0x10]
1000e657:	call   0x10009c00
1000e65c:	lea    eax,[ebp-0x14]
1000e65f:	call   0x10009c00
1000e664:	lea    eax,[ebp-0x18]
1000e667:	call   0x10009c00
1000e66c:	mov    eax,esi
1000e66e:	call   0x10059d4d
1000e673:	ret    0x8
1000e676:	push   ebp
1000e677:	mov    ebp,esp
1000e679:	and    esp,0xfffffff8
1000e67c:	push   0xffffffff
1000e67e:	push   0x100647fe
1000e683:	mov    eax,fs:0x0
1000e689:	push   eax
1000e68a:	sub    esp,0xc8
1000e690:	mov    eax,ds:0x1007e030
1000e695:	xor    eax,esp
1000e697:	mov    DWORD PTR [esp+0xc0],eax
1000e69e:	push   ebx
1000e69f:	push   esi
1000e6a0:	push   edi
1000e6a1:	mov    eax,ds:0x1007e030
1000e6a6:	xor    eax,esp
1000e6a8:	push   eax
1000e6a9:	lea    eax,[esp+0xd8]
1000e6b0:	mov    fs:0x0,eax
1000e6b6:	mov    eax,DWORD PTR [ebp+0x8]
1000e6b9:	mov    esi,edx
1000e6bb:	mov    edi,ecx
1000e6bd:	xor    ebx,ebx
1000e6bf:	push   eax
1000e6c0:	mov    ecx,esi
1000e6c2:	mov    DWORD PTR [esp+0x24],edi
1000e6c6:	mov    DWORD PTR [esp+0x20],esi
1000e6ca:	mov    DWORD PTR [esp+0x1c],ebx
1000e6ce:	call   0x1000e491
1000e6d3:	test   al,al
1000e6d5:	pop    ecx
1000e6d6:	je     0x1000eb7c
1000e6dc:	push   ebx
1000e6dd:	lea    ecx,[esp+0xb8]
1000e6e4:	mov    DWORD PTR [esp+0xd0],0xf
1000e6ef:	call   0x10001420
1000e6f4:	mov    DWORD PTR [esp+0xe0],ebx
1000e6fb:	mov    eax,DWORD PTR [edi]
1000e6fd:	mov    eax,DWORD PTR [eax+0xc]
1000e700:	lea    ecx,[esp+0x44]
1000e704:	mov    DWORD PTR [esp+0x24],eax
1000e708:	mov    eax,DWORD PTR [esi]
1000e70a:	push   ecx
1000e70b:	call   0x1000795e
1000e710:	mov    esi,eax
1000e712:	push   0x5e136208
1000e717:	push   0x1006da98
1000e71c:	mov    BYTE PTR [esp+0xe8],0x1
1000e724:	call   0x100042d1
1000e729:	push   eax
1000e72a:	push   0x3
1000e72c:	push   0x1006d4f0
1000e731:	call   0x100042e3
1000e736:	add    esp,0x14
1000e739:	push   eax
1000e73a:	call   0x100065b3
1000e73f:	pop    ecx
1000e740:	xor    edi,edi
1000e742:	push   ebx
1000e743:	inc    edi
1000e744:	push   edi
1000e745:	lea    ecx,[esp+0x4c]
1000e749:	mov    BYTE PTR [esp+0x1f],al
1000e74d:	mov    BYTE PTR [esp+0xe8],bl
1000e754:	call   0x100012f4
1000e759:	cmp    BYTE PTR [esp+0x17],bl
1000e75d:	je     0x1000e86b
1000e763:	push   0x1a088d12
1000e768:	push   0x1006dac4
1000e76d:	call   0x100042d1
1000e772:	push   0x787ffed0
1000e777:	push   eax
1000e778:	call   0x100042d1
1000e77d:	push   eax
1000e77e:	push   0xe
1000e780:	mov    esi,0x1006d9c0
1000e785:	push   esi
1000e786:	call   0x100042e3
1000e78b:	add    esp,0x1c
1000e78e:	push   eax
1000e78f:	lea    ecx,[esp+0x2c]
1000e793:	call   0x100011d1
1000e798:	mov    eax,DWORD PTR [esp+0x1c]
1000e79c:	lea    ecx,[esp+0x28]
1000e7a0:	add    eax,0x20
1000e7a3:	push   ecx
1000e7a4:	call   0x1000853c
1000e7a9:	push   ebx
1000e7aa:	push   edi
1000e7ab:	lea    ecx,[esp+0x30]
1000e7af:	mov    BYTE PTR [esp+0x1f],al
1000e7b3:	call   0x100012f4
1000e7b8:	cmp    BYTE PTR [esp+0x17],bl
1000e7bc:	je     0x1000e851
1000e7c2:	push   0x713dbb02
1000e7c7:	push   0x1006daec
1000e7cc:	call   0x100042d1
1000e7d1:	push   eax
1000e7d2:	push   0xe
1000e7d4:	push   esi
1000e7d5:	call   0x100042e3
1000e7da:	add    esp,0x14
1000e7dd:	push   eax
1000e7de:	lea    ecx,[esp+0x2c]
1000e7e2:	call   0x100011d1
1000e7e7:	mov    BYTE PTR [esp+0xe0],0x2
1000e7ef:	push   ebx
1000e7f0:	lea    eax,[esp+0x2c]
1000e7f4:	push   eax
1000e7f5:	lea    eax,[esp+0x4c]
1000e7f9:	push   eax
1000e7fa:	mov    eax,DWORD PTR [esp+0x28]
1000e7fe:	add    eax,0x20
1000e801:	call   0x100084c3
1000e806:	cmp    DWORD PTR [eax+0x18],0x10
1000e80a:	jb     0x1000e811
1000e80c:	mov    eax,DWORD PTR [eax+0x4]
1000e80f:	jmp    0x1000e814
1000e811:	add    eax,0x4
1000e814:	push   eax
1000e815:	call   0x10045f55
1000e81a:	pop    ecx
1000e81b:	push   ebx
1000e81c:	push   edi
1000e81d:	lea    ecx,[esp+0x4c]
1000e821:	mov    esi,eax
1000e823:	call   0x100012f4
1000e828:	push   ebx
1000e829:	push   edi
1000e82a:	lea    ecx,[esp+0x30]
1000e82e:	mov    BYTE PTR [esp+0xe8],bl
1000e835:	call   0x100012f4
1000e83a:	push   esi
1000e83b:	lea    eax,[esp+0xb8]
1000e842:	push   eax
1000e843:	push   DWORD PTR [esp+0x28]
1000e847:	call   0x1000f382
1000e84c:	jmp    0x1000eb0a
1000e851:	mov    edi,DWORD PTR [esp+0x20]
1000e855:	lea    ebx,[esp+0xb4]
1000e85c:	call   0x1000f42f
1000e861:	xor    edi,edi
1000e863:	xor    ebx,ebx
1000e865:	inc    edi
1000e866:	jmp    0x1000eb0a
1000e86b:	push   0x702a2c78
1000e870:	push   0x1006db20
1000e875:	call   0x100042d1
1000e87a:	push   eax
1000e87b:	push   0xe
1000e87d:	mov    esi,0x1006d9c0
1000e882:	push   esi
1000e883:	call   0x100042e3
1000e888:	add    esp,0x14
1000e88b:	push   eax
1000e88c:	lea    ecx,[esp+0x2c]
1000e890:	call   0x100011d1
1000e895:	mov    eax,DWORD PTR [esp+0x1c]
1000e899:	lea    ecx,[esp+0x28]
1000e89d:	add    eax,0x20
1000e8a0:	push   ecx
1000e8a1:	call   0x1000853c
1000e8a6:	push   ebx
1000e8a7:	push   edi
1000e8a8:	lea    ecx,[esp+0x30]
1000e8ac:	mov    BYTE PTR [esp+0x1f],al
1000e8b0:	call   0x100012f4
1000e8b5:	cmp    BYTE PTR [esp+0x17],bl
1000e8b9:	je     0x1000e8ed
1000e8bb:	push   0x559a994e
1000e8c0:	push   0x1006db4c
1000e8c5:	call   0x100042d1
1000e8ca:	push   eax
1000e8cb:	push   0xe
1000e8cd:	push   esi
1000e8ce:	call   0x100042e3
1000e8d3:	add    esp,0x14
1000e8d6:	push   eax
1000e8d7:	lea    ecx,[esp+0x2c]
1000e8db:	call   0x100011d1
1000e8e0:	mov    BYTE PTR [esp+0xe0],0x3
1000e8e8:	jmp    0x1000e7ef
1000e8ed:	push   0x739dab12
1000e8f2:	push   0x1006dbbc
1000e8f7:	call   0x100042d1
1000e8fc:	push   eax
1000e8fd:	push   0xa
1000e8ff:	push   0x1006d60c
1000e904:	call   0x100042e3
1000e909:	add    esp,0x14
1000e90c:	push   eax
1000e90d:	lea    ecx,[esp+0x48]
1000e911:	call   0x100011d1
1000e916:	push   ebx
1000e917:	lea    eax,[esp+0x48]
1000e91b:	push   eax
1000e91c:	lea    eax,[esp+0x84]
1000e923:	push   eax
1000e924:	mov    eax,DWORD PTR [esp+0x28]
1000e928:	mov    BYTE PTR [esp+0xec],0x4
1000e930:	add    eax,0x20
1000e933:	mov    DWORD PTR [esp+0x24],edi
1000e937:	call   0x100084c3
1000e93c:	mov    esi,eax
1000e93e:	push   0x48df8ae0
1000e943:	mov    DWORD PTR [esp+0xe4],0x5
1000e94e:	push   0x1006db88
1000e953:	mov    DWORD PTR [esp+0x20],0x3
1000e95b:	call   0x100042d1
1000e960:	cmp    DWORD PTR [esi+0x18],0x10
1000e964:	pop    ecx
1000e965:	pop    ecx
1000e966:	jb     0x1000e96d
1000e968:	mov    esi,DWORD PTR [esi+0x4]
1000e96b:	jmp    0x1000e970
1000e96d:	add    esi,0x4
1000e970:	push   eax
1000e971:	push   0x5
1000e973:	push   0x1006dbb4
1000e978:	call   0x100042e3
1000e97d:	add    esp,0xc
1000e980:	push   eax
1000e981:	push   esi
1000e982:	call   0x1004590f
1000e987:	test   eax,eax
1000e989:	pop    ecx
1000e98a:	pop    ecx
1000e98b:	jne    0x1000ea70
1000e991:	push   0x439c12fc
1000e996:	push   0x1006dc30
1000e99b:	call   0x100042d1
1000e9a0:	push   0x7615aee2
1000e9a5:	push   eax
1000e9a6:	call   0x100042d1
1000e9ab:	push   eax
1000e9ac:	push   0x11
1000e9ae:	push   0x1006dc5c
1000e9b3:	call   0x100042e3
1000e9b8:	add    esp,0x1c
1000e9bb:	push   eax
1000e9bc:	lea    ecx,[esp+0x2c]
1000e9c0:	call   0x100011d1
1000e9c5:	push   0x7
1000e9c7:	pop    edi
1000e9c8:	push   ebx
1000e9c9:	lea    eax,[esp+0x2c]
1000e9cd:	push   eax
1000e9ce:	lea    eax,[esp+0xa0]
1000e9d5:	push   eax
1000e9d6:	mov    eax,DWORD PTR [esp+0x28]
1000e9da:	mov    DWORD PTR [esp+0xec],0x6
1000e9e5:	add    eax,0x20
1000e9e8:	mov    DWORD PTR [esp+0x24],edi
1000e9ec:	call   0x100084c3
1000e9f1:	mov    DWORD PTR [esp+0xe0],edi
1000e9f8:	push   eax
1000e9f9:	lea    esi,[esp+0x64]
1000e9fd:	mov    DWORD PTR [esp+0x1c],0xf
1000ea05:	call   0x1002fba0
1000ea0a:	mov    esi,eax
1000ea0c:	mov    DWORD PTR [esp+0xe4],0x8
1000ea17:	mov    DWORD PTR [esp],0x1a5907fa
1000ea1e:	push   0x1006dbf0
1000ea23:	mov    DWORD PTR [esp+0x20],0x1f
1000ea2b:	call   0x100042d1
1000ea30:	push   0x146cac90
1000ea35:	push   eax
1000ea36:	call   0x100042d1
1000ea3b:	add    esp,0x10
1000ea3e:	cmp    DWORD PTR [esi+0x18],0x10
1000ea42:	jb     0x1000ea49
1000ea44:	mov    esi,DWORD PTR [esi+0x4]
1000ea47:	jmp    0x1000ea4c
1000ea49:	add    esi,0x4
1000ea4c:	push   eax
1000ea4d:	push   edi
1000ea4e:	push   0x1006dc28
1000ea53:	call   0x100042e3
1000ea58:	add    esp,0xc
1000ea5b:	push   eax
1000ea5c:	push   esi
1000ea5d:	call   0x10045cd0
1000ea62:	xor    edi,edi
1000ea64:	pop    ecx
1000ea65:	inc    edi
1000ea66:	test   eax,eax
1000ea68:	pop    ecx
1000ea69:	mov    BYTE PTR [esp+0x17],0x1
1000ea6e:	je     0x1000ea74
1000ea70:	mov    BYTE PTR [esp+0x17],bl
1000ea74:	test   BYTE PTR [esp+0x18],0x10
1000ea79:	je     0x1000ea8b
1000ea7b:	and    DWORD PTR [esp+0x18],0xffffffef
1000ea80:	push   ebx
1000ea81:	push   edi
1000ea82:	lea    ecx,[esp+0x68]
1000ea86:	call   0x100012f4
1000ea8b:	test   BYTE PTR [esp+0x18],0x8
1000ea90:	je     0x1000eaa5
1000ea92:	and    DWORD PTR [esp+0x18],0xfffffff7
1000ea97:	push   ebx
1000ea98:	push   edi
1000ea99:	lea    ecx,[esp+0xa0]
1000eaa0:	call   0x100012f4
1000eaa5:	test   BYTE PTR [esp+0x18],0x4
1000eaaa:	je     0x1000eabc
1000eaac:	and    DWORD PTR [esp+0x18],0xfffffffb
1000eab1:	push   ebx
1000eab2:	push   edi
1000eab3:	lea    ecx,[esp+0x30]
1000eab7:	call   0x100012f4
1000eabc:	test   BYTE PTR [esp+0x18],0x2
1000eac1:	je     0x1000ead6
1000eac3:	and    DWORD PTR [esp+0x18],0xfffffffd
1000eac8:	push   ebx
1000eac9:	push   edi
1000eaca:	lea    ecx,[esp+0x84]
1000ead1:	call   0x100012f4
1000ead6:	mov    DWORD PTR [esp+0xe0],ebx
1000eadd:	test   BYTE PTR [esp+0x18],0x1
1000eae2:	je     0x1000eaef
1000eae4:	push   ebx
1000eae5:	push   edi
1000eae6:	lea    ecx,[esp+0x4c]
1000eaea:	call   0x100012f4
1000eaef:	cmp    BYTE PTR [esp+0x17],bl
1000eaf3:	jne    0x1000e851
1000eaf9:	mov    ecx,DWORD PTR [esp+0x20]
1000eafd:	lea    eax,[esp+0xb4]
1000eb04:	push   eax
1000eb05:	call   0x1000f493
1000eb0a:	mov    esi,eax
1000eb0c:	cmp    esi,ebx
1000eb0e:	je     0x1000eb22
1000eb10:	push   ebx
1000eb11:	push   edi
1000eb12:	lea    ecx,[esp+0xbc]
1000eb19:	call   0x100012f4
1000eb1e:	mov    eax,esi
1000eb20:	jmp    0x1000eb7e
1000eb22:	mov    eax,DWORD PTR [esp+0x20]
1000eb26:	mov    eax,DWORD PTR [eax]
1000eb28:	mov    esi,DWORD PTR [eax+0xc]
1000eb2b:	push   0x24
1000eb2d:	call   0x100436de
1000eb32:	pop    ecx
1000eb33:	mov    DWORD PTR [esp+0x20],eax
1000eb37:	cmp    eax,ebx
1000eb39:	mov    BYTE PTR [esp+0xe0],0x9
1000eb41:	je     0x1000eb5c
1000eb43:	sub    esi,DWORD PTR [esp+0x24]
1000eb47:	lea    ecx,[esp+0xb4]
1000eb4e:	push   esi
1000eb4f:	push   DWORD PTR [esp+0x28]
1000eb53:	push   ecx
1000eb54:	push   eax
1000eb55:	call   0x100078d9
1000eb5a:	jmp    0x1000eb5e
1000eb5c:	xor    eax,eax
1000eb5e:	mov    edi,DWORD PTR [esp+0x1c]
1000eb62:	add    edi,0xc
1000eb65:	mov    ebx,eax
1000eb67:	call   0x10009c24
1000eb6c:	push   0x0
1000eb6e:	push   0x1
1000eb70:	lea    ecx,[esp+0xbc]
1000eb77:	call   0x100012f4
1000eb7c:	xor    eax,eax
1000eb7e:	mov    ecx,DWORD PTR [esp+0xd8]
1000eb85:	mov    DWORD PTR fs:0x0,ecx
1000eb8c:	pop    ecx
1000eb8d:	pop    edi
1000eb8e:	pop    esi
1000eb8f:	pop    ebx
1000eb90:	mov    ecx,DWORD PTR [esp+0xc0]
1000eb97:	xor    ecx,esp
1000eb99:	call   0x100430d7
1000eb9e:	mov    esp,ebp
1000eba0:	pop    ebp
1000eba1:	ret    0x4
1000eba4:	push   0x4c
1000eba6:	mov    eax,0x100646ff
1000ebab:	call   0x10059cde
1000ebb0:	mov    eax,DWORD PTR [ebp+0x8]
1000ebb3:	mov    DWORD PTR [ebp-0x54],ecx
1000ebb6:	mov    ecx,DWORD PTR [ebp+0xc]
1000ebb9:	mov    DWORD PTR [ebp-0x50],ecx
1000ebbc:	push   eax
1000ebbd:	mov    ecx,esi
1000ebbf:	call   0x1000efc2
1000ebc4:	test   eax,eax
1000ebc6:	jne    0x1000ecfe
1000ebcc:	mov    edi,esi
1000ebce:	call   0x1000ef94
1000ebd3:	test   eax,eax
1000ebd5:	jne    0x1000ecfe
1000ebdb:	push   eax
1000ebdc:	lea    ecx,[ebp-0x2c]
1000ebdf:	mov    DWORD PTR [ebp-0x14],0xf
1000ebe6:	call   0x10001420
1000ebeb:	and    DWORD PTR [ebp-0x4],0x0
1000ebef:	mov    eax,DWORD PTR [esi]
1000ebf1:	mov    ebx,DWORD PTR [eax+0xc]
1000ebf4:	lea    eax,[ebp-0x2c]
1000ebf7:	push   eax
1000ebf8:	call   0x1000ed06
1000ebfd:	test   eax,eax
1000ebff:	mov    ecx,DWORD PTR [esi]
1000ec01:	mov    edi,DWORD PTR [ecx+0xc]
1000ec04:	mov    DWORD PTR [ebp-0x4c],eax
1000ec07:	je     0x1000ec1d
1000ec09:	lea    ecx,[ebp-0x2c]
1000ec0c:	push   0x0
1000ec0e:	push   0x1
1000ec10:	call   0x100012f4
1000ec15:	mov    eax,DWORD PTR [ebp-0x4c]
1000ec18:	jmp    0x1000ecfe
1000ec1d:	push   0x24
1000ec1f:	call   0x100436de
1000ec24:	pop    ecx
1000ec25:	mov    DWORD PTR [ebp-0x4c],eax
1000ec28:	test   eax,eax
1000ec2a:	mov    BYTE PTR [ebp-0x4],0x1
1000ec2e:	je     0x1000ec40
1000ec30:	sub    edi,ebx
1000ec32:	push   edi
1000ec33:	push   ebx
1000ec34:	lea    ecx,[ebp-0x2c]
1000ec37:	push   ecx
1000ec38:	push   eax
1000ec39:	call   0x100078d9
1000ec3e:	jmp    0x1000ec42
1000ec40:	xor    eax,eax
1000ec42:	mov    edi,DWORD PTR [ebp-0x54]
1000ec45:	mov    ebx,eax
1000ec47:	call   0x10009c24
1000ec4c:	or     DWORD PTR [ebp-0x4],0xffffffff
1000ec50:	push   0x0
1000ec52:	push   0x1
1000ec54:	lea    ecx,[ebp-0x2c]
1000ec57:	call   0x100012f4
1000ec5c:	mov    edi,esi
1000ec5e:	call   0x1000ef94
1000ec63:	test   eax,eax
1000ec65:	jne    0x1000ecfe
1000ec6b:	push   eax
1000ec6c:	lea    ecx,[ebp-0x48]
1000ec6f:	mov    DWORD PTR [ebp-0x30],0xf
1000ec76:	call   0x10001420
1000ec7b:	mov    DWORD PTR [ebp-0x4],0x2
1000ec82:	mov    eax,DWORD PTR [esi]
1000ec84:	mov    ebx,DWORD PTR [eax+0xc]
1000ec87:	lea    eax,[ebp-0x48]
1000ec8a:	push   eax
1000ec8b:	call   0x1000f340
1000ec90:	test   eax,eax
1000ec92:	mov    ecx,DWORD PTR [esi]
1000ec94:	mov    edi,DWORD PTR [ecx+0xc]
1000ec97:	mov    DWORD PTR [ebp-0x4c],eax
1000ec9a:	je     0x1000eca4
1000ec9c:	lea    ecx,[ebp-0x48]
1000ec9f:	jmp    0x1000ec0c
1000eca4:	push   0x24
1000eca6:	call   0x100436de
1000ecab:	pop    ecx
1000ecac:	mov    DWORD PTR [ebp-0x54],eax
1000ecaf:	test   eax,eax
1000ecb1:	mov    BYTE PTR [ebp-0x4],0x3
1000ecb5:	je     0x1000ecc7
1000ecb7:	sub    edi,ebx
1000ecb9:	push   edi
1000ecba:	push   ebx
1000ecbb:	lea    ecx,[ebp-0x48]
1000ecbe:	push   ecx
1000ecbf:	push   eax
1000ecc0:	call   0x100078d9
1000ecc5:	jmp    0x1000ecc9
1000ecc7:	xor    eax,eax
1000ecc9:	mov    edi,DWORD PTR [ebp-0x50]
1000eccc:	mov    ebx,eax
1000ecce:	call   0x10009c24
1000ecd3:	or     DWORD PTR [ebp-0x4],0xffffffff
1000ecd7:	push   0x0
1000ecd9:	push   0x1
1000ecdb:	lea    ecx,[ebp-0x48]
1000ecde:	call   0x100012f4
1000ece3:	push   0x0
1000ece5:	sub    esp,0x1c
1000ece8:	mov    ecx,esp
1000ecea:	mov    DWORD PTR [ebp-0x50],esp
1000eced:	push   0x1006d3a4
1000ecf2:	call   0x100011d1
1000ecf7:	mov    ebx,esi
1000ecf9:	call   0x1000ef05
1000ecfe:	call   0x10059d61
1000ed03:	ret    0x8
1000ed06:	push   ebp
1000ed07:	mov    ebp,esp
1000ed09:	push   ecx
1000ed0a:	push   ecx
1000ed0b:	and    DWORD PTR [ebp-0x4],0x0
1000ed0f:	push   ebx
1000ed10:	xor    ebx,ebx
1000ed12:	push   esi
1000ed13:	inc    ebx
1000ed14:	mov    esi,DWORD PTR [edi]
1000ed16:	call   0x1000de4d
1000ed1b:	test   al,al
1000ed1d:	jne    0x1000ed52
1000ed1f:	mov    eax,DWORD PTR [edi]
1000ed21:	call   0x1000df9e
1000ed26:	mov    BYTE PTR [ebp-0x8],al
1000ed29:	sub    al,0x30
1000ed2b:	cmp    al,0x9
1000ed2d:	ja     0x1000ed52
1000ed2f:	push   DWORD PTR [ebp-0x8]
1000ed32:	mov    esi,DWORD PTR [ebp+0x8]
1000ed35:	call   0x1000d10e
1000ed3a:	mov    eax,DWORD PTR [edi]
1000ed3c:	call   0x1000dfbc
1000ed41:	inc    DWORD PTR [ebp-0x4]
1000ed44:	cmp    DWORD PTR [ebp-0x4],0x3
1000ed48:	jne    0x1000ed14
1000ed4a:	xor    eax,eax
1000ed4c:	pop    esi
1000ed4d:	pop    ebx
1000ed4e:	leave  
1000ed4f:	ret    0x4
1000ed52:	mov    eax,ebx
1000ed54:	jmp    0x1000ed4c
1000ed56:	push   ebp
1000ed57:	mov    ebp,esp
1000ed59:	and    esp,0xfffffff8
1000ed5c:	push   0xffffffff
1000ed5e:	push   0x100646b3
1000ed63:	mov    eax,fs:0x0
1000ed69:	push   eax
1000ed6a:	sub    esp,0x58
1000ed6d:	mov    eax,ds:0x1007e030
1000ed72:	xor    eax,esp
1000ed74:	mov    DWORD PTR [esp+0x50],eax
1000ed78:	push   ebx
1000ed79:	push   esi
1000ed7a:	push   edi
1000ed7b:	mov    eax,ds:0x1007e030
1000ed80:	xor    eax,esp
1000ed82:	push   eax
1000ed83:	lea    eax,[esp+0x68]
1000ed87:	mov    fs:0x0,eax
1000ed8d:	mov    eax,DWORD PTR [ebp+0x8]
1000ed90:	mov    edi,ecx
1000ed92:	mov    esi,DWORD PTR [edi]
1000ed94:	mov    DWORD PTR [esp+0x14],eax
1000ed98:	call   0x1000de4d
1000ed9d:	test   al,al
1000ed9f:	je     0x1000eda9
1000eda1:	xor    eax,eax
1000eda3:	inc    eax
1000eda4:	jmp    0x1000eec9
1000eda9:	mov    eax,DWORD PTR [edi]
1000edab:	call   0x1000df9e
1000edb0:	cmp    al,0xd
1000edb2:	je     0x1000eeb9
1000edb8:	xor    esi,esi
1000edba:	push   0xf
1000edbc:	pop    ebx
1000edbd:	push   esi
1000edbe:	lea    ecx,[esp+0x48]
1000edc2:	mov    DWORD PTR [esp+0x60],ebx
1000edc6:	call   0x10001420
1000edcb:	mov    DWORD PTR [esp+0x70],esi
1000edcf:	push   esi
1000edd0:	lea    ecx,[esp+0x2c]
1000edd4:	mov    DWORD PTR [esp+0x44],ebx
1000edd8:	call   0x10001420
1000eddd:	mov    BYTE PTR [esp+0x70],0x1
1000ede2:	mov    eax,DWORD PTR [edi]
1000ede4:	mov    eax,DWORD PTR [eax+0xc]
1000ede7:	mov    DWORD PTR [esp+0x20],eax
1000edeb:	push   esi
1000edec:	lea    eax,[esp+0x48]
1000edf0:	push   eax
1000edf1:	call   0x1000f229
1000edf6:	cmp    eax,esi
1000edf8:	je     0x1000edfe
1000edfa:	mov    ebx,eax
1000edfc:	jmp    0x1000ee38
1000edfe:	push   esi
1000edff:	sub    esp,0x1c
1000ee02:	mov    ecx,esp
1000ee04:	mov    DWORD PTR [esp+0x3c],esp
1000ee08:	push   0x1006dc98
1000ee0d:	call   0x100011d1
1000ee12:	mov    ebx,edi
1000ee14:	call   0x1000ef05
1000ee19:	cmp    eax,esi
1000ee1b:	jne    0x1000edfa
1000ee1d:	lea    eax,[esp+0x28]
1000ee21:	push   eax
1000ee22:	mov    ecx,edi
1000ee24:	call   0x1000f153
1000ee29:	cmp    eax,esi
1000ee2b:	jne    0x1000edfa
1000ee2d:	mov    eax,DWORD PTR [edi]
1000ee2f:	mov    eax,DWORD PTR [eax+0xc]
1000ee32:	mov    DWORD PTR [esp+0x24],eax
1000ee36:	xor    ebx,ebx
1000ee38:	cmp    ebx,esi
1000ee3a:	jne    0x1000eee9
1000ee40:	push   0x8
1000ee42:	call   0x100436de
1000ee47:	cmp    eax,esi
1000ee49:	pop    ecx
1000ee4a:	je     0x1000ee5d
1000ee4c:	mov    edx,DWORD PTR [esp+0x20]
1000ee50:	mov    ecx,DWORD PTR [esp+0x24]
1000ee54:	sub    ecx,edx
1000ee56:	mov    DWORD PTR [eax],edx
1000ee58:	mov    DWORD PTR [eax+0x4],ecx
1000ee5b:	jmp    0x1000ee5f
1000ee5d:	xor    eax,eax
1000ee5f:	push   ecx
1000ee60:	mov    ecx,esp
1000ee62:	mov    BYTE PTR [esp+0x74],0x2
1000ee67:	mov    DWORD PTR [esp+0x1c],esi
1000ee6b:	mov    DWORD PTR [ecx],eax
1000ee6d:	mov    ecx,DWORD PTR [esp+0x18]
1000ee71:	lea    eax,[esp+0x2c]
1000ee75:	mov    DWORD PTR [esp+0x20],esp
1000ee79:	push   eax
1000ee7a:	lea    edx,[esp+0x4c]
1000ee7e:	call   0x10007df5
1000ee83:	push   DWORD PTR [esp+0x18]
1000ee87:	call   0x100430d2
1000ee8c:	pop    ecx
1000ee8d:	push   esi
1000ee8e:	push   0x1
1000ee90:	lea    ecx,[esp+0x30]
1000ee94:	call   0x100012f4
1000ee99:	or     DWORD PTR [esp+0x70],0xffffffff
1000ee9e:	push   esi
1000ee9f:	push   0x1
1000eea1:	lea    ecx,[esp+0x4c]
1000eea5:	call   0x100012f4
1000eeaa:	mov    eax,DWORD PTR [edi]
1000eeac:	call   0x1000df9e
1000eeb1:	cmp    al,0xd
1000eeb3:	jne    0x1000edba
1000eeb9:	mov    eax,DWORD PTR [edi]
1000eebb:	push   DWORD PTR [eax+0xc]
1000eebe:	mov    edi,DWORD PTR [esp+0x18]
1000eec2:	call   0x10007a05
1000eec7:	xor    eax,eax
1000eec9:	mov    ecx,DWORD PTR [esp+0x68]
1000eecd:	mov    DWORD PTR fs:0x0,ecx
1000eed4:	pop    ecx
1000eed5:	pop    edi
1000eed6:	pop    esi
1000eed7:	pop    ebx
1000eed8:	mov    ecx,DWORD PTR [esp+0x50]
1000eedc:	xor    ecx,esp
1000eede:	call   0x100430d7
1000eee3:	mov    esp,ebp
1000eee5:	pop    ebp
1000eee6:	ret    0x4
1000eee9:	push   esi
1000eeea:	push   0x1
1000eeec:	lea    ecx,[esp+0x30]
1000eef0:	call   0x100012f4
1000eef5:	push   esi
1000eef6:	push   0x1
1000eef8:	lea    ecx,[esp+0x4c]
1000eefc:	call   0x100012f4
1000ef01:	mov    eax,ebx
1000ef03:	jmp    0x1000eec9
1000ef05:	push   0x4
1000ef07:	mov    eax,0x10063d92
1000ef0c:	call   0x10059c75
1000ef11:	xor    edi,edi
1000ef13:	mov    DWORD PTR [ebp-0x4],edi
1000ef16:	cmp    DWORD PTR [ebp+0x1c],edi
1000ef19:	je     0x1000ef7d
1000ef1b:	cmp    BYTE PTR [ebp+0x24],0x0
1000ef1f:	je     0x1000ef4c
1000ef21:	test   edi,edi
1000ef23:	jle    0x1000ef4c
1000ef25:	mov    eax,DWORD PTR [ebx]
1000ef27:	mov    ecx,DWORD PTR [eax+0x4]
1000ef2a:	test   ecx,ecx
1000ef2c:	je     0x1000ef35
1000ef2e:	mov    eax,DWORD PTR [eax+0x8]
1000ef31:	cmp    eax,DWORD PTR [ecx]
1000ef33:	jb     0x1000ef57
1000ef35:	push   0x0
1000ef37:	push   0x1
1000ef39:	lea    ecx,[ebp+0x8]
1000ef3c:	call   0x100012f4
1000ef41:	xor    eax,eax
1000ef43:	inc    eax
1000ef44:	call   0x10059d4d
1000ef49:	ret    0x20
1000ef4c:	mov    esi,DWORD PTR [ebx]
1000ef4e:	call   0x1000de4d
1000ef53:	test   al,al
1000ef55:	jne    0x1000ef35
1000ef57:	mov    eax,DWORD PTR [ebx]
1000ef59:	call   0x1000df9e
1000ef5e:	mov    BYTE PTR [ebp-0xd],al
1000ef61:	lea    eax,[ebp+0x8]
1000ef64:	call   0x10011fbe
1000ef69:	mov    cl,BYTE PTR [ebp-0xd]
1000ef6c:	cmp    BYTE PTR [eax],cl
1000ef6e:	jne    0x1000ef81
1000ef70:	mov    eax,DWORD PTR [ebx]
1000ef72:	call   0x1000dfbc
1000ef77:	inc    edi
1000ef78:	cmp    edi,DWORD PTR [ebp+0x1c]
1000ef7b:	jne    0x1000ef1b
1000ef7d:	xor    esi,esi
1000ef7f:	jmp    0x1000ef84
1000ef81:	xor    esi,esi
1000ef83:	inc    esi
1000ef84:	push   0x0
1000ef86:	push   0x1
1000ef88:	lea    ecx,[ebp+0x8]
1000ef8b:	call   0x100012f4
1000ef90:	mov    eax,esi
1000ef92:	jmp    0x1000ef44
1000ef94:	push   ebx
1000ef95:	push   esi
1000ef96:	xor    ebx,ebx
1000ef98:	jmp    0x1000efad
1000ef9a:	mov    eax,DWORD PTR [edi]
1000ef9c:	call   0x1000df9e
1000efa1:	cmp    al,0x20
1000efa3:	jne    0x1000efb8
1000efa5:	mov    eax,DWORD PTR [edi]
1000efa7:	inc    ebx
1000efa8:	call   0x1000dfbc
1000efad:	mov    esi,DWORD PTR [edi]
1000efaf:	call   0x1000de4d
1000efb4:	test   al,al
1000efb6:	je     0x1000ef9a
1000efb8:	xor    eax,eax
1000efba:	test   ebx,ebx
1000efbc:	pop    esi
1000efbd:	setle  al
1000efc0:	pop    ebx
1000efc1:	ret    
1000efc2:	push   0x30
1000efc4:	mov    eax,0x10064676
1000efc9:	call   0x10059cde
1000efce:	mov    eax,DWORD PTR [ebp+0x8]
1000efd1:	push   0x1
1000efd3:	push   0x4cc55b5e
1000efd8:	push   0x1006dc70
1000efdd:	mov    edi,ecx
1000efdf:	mov    DWORD PTR [ebp-0x3c],eax
1000efe2:	call   0x100042d1
1000efe7:	push   0x7935134a
1000efec:	push   eax
1000efed:	call   0x100042d1
1000eff2:	push   eax
1000eff3:	push   0x5
1000eff5:	push   0x1006d4ac
1000effa:	call   0x100042e3
1000efff:	mov    ecx,esp
1000f001:	mov    DWORD PTR [ebp-0x34],esp
1000f004:	push   eax
1000f005:	call   0x100011d1
1000f00a:	mov    ebx,edi
1000f00c:	call   0x1000ef05
1000f011:	xor    ebx,ebx
1000f013:	cmp    eax,ebx
1000f015:	jne    0x1000f07e
1000f017:	push   ebx
1000f018:	lea    ecx,[ebp-0x2c]
1000f01b:	mov    DWORD PTR [ebp-0x14],0xf
1000f022:	call   0x10001420
1000f027:	mov    DWORD PTR [ebp-0x4],ebx
1000f02a:	mov    esi,DWORD PTR [edi]
1000f02c:	mov    eax,DWORD PTR [esi+0xc]
1000f02f:	mov    DWORD PTR [ebp-0x38],eax
1000f032:	mov    DWORD PTR [ebp-0x30],ebx
1000f035:	jmp    0x1000f061
1000f037:	mov    eax,DWORD PTR [edi]
1000f039:	call   0x1000df9e
1000f03e:	mov    BYTE PTR [ebp-0x34],al
1000f041:	sub    al,0x30
1000f043:	cmp    al,0x9
1000f045:	ja     0x1000f086
1000f047:	push   DWORD PTR [ebp-0x34]
1000f04a:	xor    ebx,ebx
1000f04c:	inc    ebx
1000f04d:	lea    esi,[ebp-0x2c]
1000f050:	call   0x1000d10e
1000f055:	mov    eax,DWORD PTR [edi]
1000f057:	inc    DWORD PTR [ebp-0x30]
1000f05a:	call   0x1000dfbc
1000f05f:	mov    esi,DWORD PTR [edi]
1000f061:	call   0x1000de4d
1000f066:	test   al,al
1000f068:	je     0x1000f037
1000f06a:	push   0x0
1000f06c:	push   0x1
1000f06e:	lea    ecx,[ebp-0x2c]
1000f071:	call   0x100012f4
1000f076:	xor    eax,eax
1000f078:	cmp    DWORD PTR [ebp-0x30],eax
1000f07b:	setle  al
1000f07e:	call   0x10059d61
1000f083:	ret    0x4
1000f086:	cmp    DWORD PTR [ebp-0x30],0x0
1000f08a:	jne    0x1000f09f
1000f08c:	xor    esi,esi
1000f08e:	inc    esi
1000f08f:	push   0x0
1000f091:	push   0x1
1000f093:	lea    ecx,[ebp-0x2c]
1000f096:	call   0x100012f4
1000f09b:	mov    eax,esi
1000f09d:	jmp    0x1000f07e
1000f09f:	push   0x0
1000f0a1:	sub    esp,0x1c
1000f0a4:	mov    ecx,esp
1000f0a6:	mov    DWORD PTR [ebp-0x34],esp
1000f0a9:	mov    esi,0x1006dc94
1000f0ae:	push   esi
1000f0af:	call   0x100011d1
1000f0b4:	mov    ebx,edi
1000f0b6:	call   0x1000ef05
1000f0bb:	test   eax,eax
1000f0bd:	je     0x1000f0c3
1000f0bf:	mov    esi,eax
1000f0c1:	jmp    0x1000f08f
1000f0c3:	push   esi
1000f0c4:	lea    eax,[ebp-0x2c]
1000f0c7:	push   eax
1000f0c8:	call   0x10004120
1000f0cd:	and    DWORD PTR [ebp-0x30],0x0
1000f0d1:	jmp    0x1000f0fb
1000f0d3:	mov    eax,DWORD PTR [edi]
1000f0d5:	call   0x1000df9e
1000f0da:	mov    BYTE PTR [ebp-0x34],al
1000f0dd:	sub    al,0x30
1000f0df:	cmp    al,0x9
1000f0e1:	ja     0x1000f10b
1000f0e3:	push   DWORD PTR [ebp-0x34]
1000f0e6:	xor    ebx,ebx
1000f0e8:	inc    ebx
1000f0e9:	lea    esi,[ebp-0x2c]
1000f0ec:	call   0x1000d10e
1000f0f1:	mov    eax,DWORD PTR [edi]
1000f0f3:	inc    DWORD PTR [ebp-0x30]
1000f0f6:	call   0x1000dfbc
1000f0fb:	mov    esi,DWORD PTR [edi]
1000f0fd:	call   0x1000de4d
1000f102:	test   al,al
1000f104:	je     0x1000f0d3
1000f106:	jmp    0x1000f06a
1000f10b:	cmp    DWORD PTR [ebp-0x30],0x0
1000f10f:	je     0x1000f08c
1000f115:	mov    eax,DWORD PTR [edi]
1000f117:	mov    esi,DWORD PTR [eax+0xc]
1000f11a:	push   0x24
1000f11c:	call   0x100436de
1000f121:	pop    ecx
1000f122:	mov    DWORD PTR [ebp-0x34],eax
1000f125:	test   eax,eax
1000f127:	mov    BYTE PTR [ebp-0x4],0x1
1000f12b:	je     0x1000f140
1000f12d:	sub    esi,DWORD PTR [ebp-0x38]
1000f130:	lea    ecx,[ebp-0x2c]
1000f133:	push   esi
1000f134:	push   DWORD PTR [ebp-0x38]
1000f137:	push   ecx
1000f138:	push   eax
1000f139:	call   0x100078d9
1000f13e:	jmp    0x1000f142
1000f140:	xor    eax,eax
1000f142:	mov    edi,DWORD PTR [ebp-0x3c]
1000f145:	mov    ebx,eax
1000f147:	call   0x10009c24
1000f14c:	xor    esi,esi
1000f14e:	jmp    0x1000f08f
1000f153:	push   0x24
1000f155:	mov    eax,0x10064649
1000f15a:	call   0x10059c75
1000f15f:	mov    edi,ecx
1000f161:	and    DWORD PTR [ebp-0x10],0x0
1000f165:	jmp    0x1000f18d
1000f167:	mov    eax,DWORD PTR [edi]
1000f169:	call   0x1000df9e
1000f16e:	cmp    al,0xd
1000f170:	mov    BYTE PTR [ebp-0x14],al
1000f173:	je     0x1000f1a2
1000f175:	push   DWORD PTR [ebp-0x14]
1000f178:	mov    esi,DWORD PTR [ebp+0x8]
1000f17b:	inc    DWORD PTR [ebp-0x10]
1000f17e:	xor    ebx,ebx
1000f180:	inc    ebx
1000f181:	call   0x1000d10e
1000f186:	mov    eax,DWORD PTR [edi]
1000f188:	call   0x1000dfbc
1000f18d:	mov    esi,DWORD PTR [edi]
1000f18f:	call   0x1000de4d
1000f194:	test   al,al
1000f196:	je     0x1000f167
1000f198:	xor    eax,eax
1000f19a:	cmp    DWORD PTR [ebp-0x10],eax
1000f19d:	setle  al
1000f1a0:	jmp    0x1000f221
1000f1a2:	push   0x0
1000f1a4:	sub    esp,0x1c
1000f1a7:	mov    ecx,esp
1000f1a9:	mov    DWORD PTR [ebp-0x14],esp
1000f1ac:	push   0x1006d3a4
1000f1b1:	call   0x100011d1
1000f1b6:	mov    ebx,edi
1000f1b8:	call   0x1000ef05
1000f1bd:	test   eax,eax
1000f1bf:	jne    0x1000f221
1000f1c1:	mov    ebx,DWORD PTR [ebp+0x8]
1000f1c4:	mov    eax,DWORD PTR [ebx+0x14]
1000f1c7:	xor    edi,edi
1000f1c9:	test   eax,eax
1000f1cb:	je     0x1000f1df
1000f1cd:	mov    eax,ebx
1000f1cf:	call   0x10011fbe
1000f1d4:	cmp    BYTE PTR [eax],0x20
1000f1d7:	jne    0x1000f1df
1000f1d9:	inc    edi
1000f1da:	cmp    edi,DWORD PTR [ebx+0x14]
1000f1dd:	jne    0x1000f1cd
1000f1df:	mov    esi,DWORD PTR [ebx+0x14]
1000f1e2:	dec    esi
1000f1e3:	test   edi,edi
1000f1e5:	jl     0x1000f1f6
1000f1e7:	mov    eax,ebx
1000f1e9:	call   0x10011fbe
1000f1ee:	cmp    BYTE PTR [eax],0x20
1000f1f1:	jne    0x1000f1f6
1000f1f3:	dec    edi
1000f1f4:	jns    0x1000f1e7
1000f1f6:	sub    esi,edi
1000f1f8:	inc    esi
1000f1f9:	push   esi
1000f1fa:	push   edi
1000f1fb:	push   ebx
1000f1fc:	lea    eax,[ebp-0x30]
1000f1ff:	call   0x1000ca96
1000f204:	push   0xffffffff
1000f206:	xor    esi,esi
1000f208:	push   esi
1000f209:	push   eax
1000f20a:	mov    ecx,ebx
1000f20c:	mov    DWORD PTR [ebp-0x4],esi
1000f20f:	call   0x10001245
1000f214:	push   esi
1000f215:	push   0x1
1000f217:	lea    ecx,[ebp-0x30]
1000f21a:	call   0x100012f4
1000f21f:	xor    eax,eax
1000f221:	call   0x10059d4d
1000f226:	ret    0x4
1000f229:	push   ebp
1000f22a:	mov    ebp,esp
1000f22c:	push   ecx
1000f22d:	push   ecx
1000f22e:	push   ebx
1000f22f:	xor    ebx,ebx
1000f231:	push   esi
1000f232:	mov    DWORD PTR [ebp-0x4],ebx
1000f235:	cmp    DWORD PTR [ebp-0x4],ebx
1000f238:	jle    0x1000f256
1000f23a:	cmp    BYTE PTR [ebp+0xc],bl
1000f23d:	je     0x1000f256
1000f23f:	mov    eax,DWORD PTR [edi]
1000f241:	mov    ecx,DWORD PTR [eax+0x4]
1000f244:	cmp    ecx,ebx
1000f246:	je     0x1000f24f
1000f248:	mov    eax,DWORD PTR [eax+0x8]
1000f24b:	cmp    eax,DWORD PTR [ecx]
1000f24d:	jb     0x1000f265
1000f24f:	xor    eax,eax
1000f251:	jmp    0x1000f2ee
1000f256:	mov    esi,DWORD PTR [edi]
1000f258:	call   0x1000de4d
1000f25d:	test   al,al
1000f25f:	jne    0x1000f2e6
1000f265:	mov    eax,DWORD PTR [edi]
1000f267:	call   0x1000df9e
1000f26c:	cmp    al,0x28
1000f26e:	mov    BYTE PTR [ebp-0x8],al
1000f271:	je     0x1000f2e6
1000f273:	cmp    al,0x29
1000f275:	je     0x1000f2e6
1000f277:	cmp    al,0x3c
1000f279:	je     0x1000f2e6
1000f27b:	cmp    al,0x3e
1000f27d:	je     0x1000f2e6
1000f27f:	cmp    al,0x40
1000f281:	je     0x1000f2e6
1000f283:	cmp    al,0x2c
1000f285:	je     0x1000f2e6
1000f287:	cmp    al,0x3b
1000f289:	je     0x1000f2e6
1000f28b:	cmp    al,0x3a
1000f28d:	je     0x1000f2e6
1000f28f:	cmp    al,0x5c
1000f291:	je     0x1000f2e6
1000f293:	cmp    al,0x22
1000f295:	je     0x1000f2e6
1000f297:	cmp    al,0x2f
1000f299:	je     0x1000f2e6
1000f29b:	cmp    al,0x5b
1000f29d:	je     0x1000f2e6
1000f29f:	cmp    al,0x5d
1000f2a1:	je     0x1000f2e6
1000f2a3:	cmp    al,0x3f
1000f2a5:	je     0x1000f2e6
1000f2a7:	cmp    al,0x3d
1000f2a9:	je     0x1000f2e6
1000f2ab:	cmp    al,0x7b
1000f2ad:	je     0x1000f2e6
1000f2af:	cmp    al,0x7d
1000f2b1:	je     0x1000f2e6
1000f2b3:	cmp    al,0x20
1000f2b5:	je     0x1000f2e6
1000f2b7:	cmp    al,0x9
1000f2b9:	je     0x1000f2e6
1000f2bb:	cmp    al,bl
1000f2bd:	jl     0x1000f2c3
1000f2bf:	cmp    al,0x1f
1000f2c1:	jle    0x1000f2e6
1000f2c3:	cmp    al,0x7f
1000f2c5:	je     0x1000f2e6
1000f2c7:	push   DWORD PTR [ebp-0x8]
1000f2ca:	mov    esi,DWORD PTR [ebp+0x8]
1000f2cd:	inc    DWORD PTR [ebp-0x4]
1000f2d0:	xor    ebx,ebx
1000f2d2:	inc    ebx
1000f2d3:	call   0x1000d10e
1000f2d8:	mov    eax,DWORD PTR [edi]
1000f2da:	call   0x1000dfbc
1000f2df:	xor    ebx,ebx
1000f2e1:	jmp    0x1000f235
1000f2e6:	xor    eax,eax
1000f2e8:	cmp    DWORD PTR [ebp-0x4],ebx
1000f2eb:	setle  al
1000f2ee:	pop    esi
1000f2ef:	pop    ebx
1000f2f0:	leave  
1000f2f1:	ret    0x8
1000f2f4:	push   ebp
1000f2f5:	mov    ebp,esp
1000f2f7:	push   ecx
1000f2f8:	push   ecx
1000f2f9:	and    DWORD PTR [ebp-0x4],0x0
1000f2fd:	push   ebx
1000f2fe:	push   esi
1000f2ff:	jmp    0x1000f327
1000f301:	mov    eax,DWORD PTR [edi]
1000f303:	call   0x1000df9e
1000f308:	cmp    al,0x20
1000f30a:	mov    BYTE PTR [ebp-0x8],al
1000f30d:	je     0x1000f332
1000f30f:	push   DWORD PTR [ebp-0x8]
1000f312:	mov    esi,DWORD PTR [ebp+0x8]
1000f315:	inc    DWORD PTR [ebp-0x4]
1000f318:	xor    ebx,ebx
1000f31a:	inc    ebx
1000f31b:	call   0x1000d10e
1000f320:	mov    eax,DWORD PTR [edi]
1000f322:	call   0x1000dfbc
1000f327:	mov    esi,DWORD PTR [edi]
1000f329:	call   0x1000de4d
1000f32e:	test   al,al
1000f330:	je     0x1000f301
1000f332:	xor    eax,eax
1000f334:	cmp    DWORD PTR [ebp-0x4],eax
1000f337:	pop    esi
1000f338:	setle  al
1000f33b:	pop    ebx
1000f33c:	leave  
1000f33d:	ret    0x4
1000f340:	push   ebp
1000f341:	mov    ebp,esp
1000f343:	push   ecx
1000f344:	push   ebx
1000f345:	push   esi
1000f346:	jmp    0x1000f36f
1000f348:	mov    eax,DWORD PTR [edi]
1000f34a:	call   0x1000df9e
1000f34f:	cmp    al,0xd
1000f351:	mov    BYTE PTR [ebp-0x4],al
1000f354:	je     0x1000f37a
1000f356:	cmp    al,0xa
1000f358:	je     0x1000f37a
1000f35a:	push   DWORD PTR [ebp-0x4]
1000f35d:	mov    esi,DWORD PTR [ebp+0x8]
1000f360:	xor    ebx,ebx
1000f362:	inc    ebx
1000f363:	call   0x1000d10e
1000f368:	mov    eax,DWORD PTR [edi]
1000f36a:	call   0x1000dfbc
1000f36f:	mov    esi,DWORD PTR [edi]
1000f371:	call   0x1000de4d
1000f376:	test   al,al
1000f378:	je     0x1000f348
1000f37a:	pop    esi
1000f37b:	xor    eax,eax
1000f37d:	pop    ebx
1000f37e:	leave  
1000f37f:	ret    0x4
1000f382:	push   0xc
1000f384:	mov    eax,0x10063d6f
1000f389:	call   0x10059c75
1000f38e:	xor    eax,eax
1000f390:	mov    DWORD PTR [ebp-0x10],eax
1000f393:	mov    DWORD PTR [ebp-0x18],eax
1000f396:	mov    ebx,0xf4240
1000f39b:	cmp    DWORD PTR [ebp+0x10],ebx
1000f39e:	mov    DWORD PTR [ebp-0x4],eax
1000f3a1:	mov    edi,0x10000
1000f3a6:	jbe    0x1000f3ad
1000f3a8:	mov    edi,0x100000
1000f3ad:	push   edi
1000f3ae:	call   0x100439b6
1000f3b3:	mov    esi,eax
1000f3b5:	test   esi,esi
1000f3b7:	pop    ecx
1000f3b8:	mov    DWORD PTR [ebp-0x14],esi
1000f3bb:	je     0x1000f3c5
1000f3bd:	push   0x0
1000f3bf:	call   0x100430d2
1000f3c4:	pop    ecx
1000f3c5:	cmp    DWORD PTR [ebp+0x10],0x0
1000f3c9:	mov    DWORD PTR [ebp-0x18],esi
1000f3cc:	je     0x1000f415
1000f3ce:	mov    eax,DWORD PTR [ebp+0x8]
1000f3d1:	mov    esi,DWORD PTR [eax]
1000f3d3:	call   0x1000de4d
1000f3d8:	test   al,al
1000f3da:	jne    0x1000f419
1000f3dc:	mov    eax,DWORD PTR [ebp-0x10]
1000f3df:	mov    esi,DWORD PTR [ebp+0x10]
1000f3e2:	lea    ecx,[edi+eax*1]
1000f3e5:	cmp    ecx,esi
1000f3e7:	jbe    0x1000f3ed
1000f3e9:	mov    edi,esi
1000f3eb:	sub    edi,eax
1000f3ed:	mov    eax,DWORD PTR [ebp+0x8]
1000f3f0:	mov    eax,DWORD PTR [eax]
1000f3f2:	push   edi
1000f3f3:	push   DWORD PTR [ebp-0x14]
1000f3f6:	call   0x1000dff5
1000f3fb:	mov    edi,eax
1000f3fd:	add    DWORD PTR [ebp-0x10],edi
1000f400:	cmp    esi,ebx
1000f402:	ja     0x1000f410
1000f404:	mov    eax,DWORD PTR [ebp+0xc]
1000f407:	push   edi
1000f408:	push   DWORD PTR [ebp-0x14]
1000f40b:	call   0x10004d66
1000f410:	cmp    DWORD PTR [ebp-0x10],esi
1000f413:	jne    0x1000f3ce
1000f415:	xor    esi,esi
1000f417:	jmp    0x1000f41c
1000f419:	xor    esi,esi
1000f41b:	inc    esi
1000f41c:	push   DWORD PTR [ebp-0x14]
1000f41f:	call   0x100430d2
1000f424:	pop    ecx
1000f425:	mov    eax,esi
1000f427:	call   0x10059d4d
1000f42c:	ret    0xc
1000f42f:	push   ebp
1000f430:	mov    ebp,esp
1000f432:	mov    eax,0x10004
1000f437:	call   0x1004a080
1000f43c:	mov    eax,ds:0x1007e030
1000f441:	xor    eax,ebp
1000f443:	mov    DWORD PTR [ebp-0x4],eax
1000f446:	push   esi
1000f447:	jmp    0x1000f474
1000f449:	push   0x10000
1000f44e:	lea    eax,[ebp-0x10004]
1000f454:	push   eax
1000f455:	mov    eax,DWORD PTR [edi]
1000f457:	call   0x1000dff5
1000f45c:	push   eax
1000f45d:	lea    eax,[ebp-0x10004]
1000f463:	push   eax
1000f464:	mov    eax,ebx
1000f466:	call   0x10004d66
1000f46b:	cmp    DWORD PTR [ebx+0x14],0xf4240
1000f472:	jae    0x1000f483
1000f474:	mov    esi,DWORD PTR [edi]
1000f476:	call   0x1000de4d
1000f47b:	test   al,al
1000f47d:	je     0x1000f449
1000f47f:	xor    eax,eax
1000f481:	jmp    0x1000f486
1000f483:	xor    eax,eax
1000f485:	inc    eax
1000f486:	mov    ecx,DWORD PTR [ebp-0x4]
1000f489:	xor    ecx,ebp
1000f48b:	pop    esi
1000f48c:	call   0x100430d7
1000f491:	leave  
1000f492:	ret    
1000f493:	push   0x2c
1000f495:	mov    eax,0x1006461c
1000f49a:	call   0x10059cde
1000f49f:	mov    eax,DWORD PTR [ebp+0x8]
1000f4a2:	mov    ebx,ecx
1000f4a4:	mov    DWORD PTR [ebp-0x34],eax
1000f4a7:	lea    eax,[ebp-0x30]
1000f4aa:	mov    edi,ebx
1000f4ac:	call   0x1000f57c
1000f4b1:	xor    edi,edi
1000f4b3:	cmp    eax,edi
1000f4b5:	jne    0x1000f574
1000f4bb:	jmp    0x1000f4bf
1000f4bd:	xor    edi,edi
1000f4bf:	cmp    DWORD PTR [ebp-0x30],edi
1000f4c2:	push   edi
1000f4c3:	je     0x1000f544
1000f4c5:	lea    ecx,[ebp-0x2c]
1000f4c8:	mov    DWORD PTR [ebp-0x14],0xf
1000f4cf:	call   0x10001420
1000f4d4:	mov    DWORD PTR [ebp-0x4],edi
1000f4d7:	push   DWORD PTR [ebp-0x30]
1000f4da:	lea    eax,[ebp-0x2c]
1000f4dd:	push   eax
1000f4de:	push   ebx
1000f4df:	call   0x1000f382
1000f4e4:	mov    esi,eax
1000f4e6:	cmp    esi,edi
1000f4e8:	push   edi
1000f4e9:	jne    0x1000f55e
1000f4eb:	sub    esp,0x1c
1000f4ee:	mov    ecx,esp
1000f4f0:	mov    DWORD PTR [ebp-0x38],esp
1000f4f3:	push   0x1006d3a4
1000f4f8:	call   0x100011d1
1000f4fd:	call   0x1000ef05
1000f502:	mov    esi,eax
1000f504:	cmp    esi,edi
1000f506:	jne    0x1000f55d
1000f508:	mov    esi,DWORD PTR [ebp-0x34]
1000f50b:	push   0xffffffff
1000f50d:	push   edi
1000f50e:	lea    eax,[ebp-0x2c]
1000f511:	call   0x10004cc2
1000f516:	mov    eax,esi
1000f518:	cmp    DWORD PTR [eax+0x14],0xf4240
1000f51f:	push   edi
1000f520:	lea    ecx,[ebp-0x2c]
1000f523:	push   0x1
1000f525:	jae    0x1000f56c
1000f527:	or     DWORD PTR [ebp-0x4],0xffffffff
1000f52b:	call   0x100012f4
1000f530:	lea    eax,[ebp-0x30]
1000f533:	mov    edi,ebx
1000f535:	call   0x1000f57c
1000f53a:	test   eax,eax
1000f53c:	je     0x1000f4bd
1000f542:	jmp    0x1000f574
1000f544:	sub    esp,0x1c
1000f547:	mov    ecx,esp
1000f549:	mov    DWORD PTR [ebp-0x38],esp
1000f54c:	push   0x1006d3a4
1000f551:	call   0x100011d1
1000f556:	call   0x1000ef05
1000f55b:	jmp    0x1000f574
1000f55d:	push   edi
1000f55e:	push   0x1
1000f560:	lea    ecx,[ebp-0x2c]
1000f563:	call   0x100012f4
1000f568:	mov    eax,esi
1000f56a:	jmp    0x1000f574
1000f56c:	call   0x100012f4
1000f571:	xor    eax,eax
1000f573:	inc    eax
1000f574:	call   0x10059d61
1000f579:	ret    0x4
1000f57c:	push   ebp
1000f57d:	mov    ebp,esp
1000f57f:	push   ecx
1000f580:	push   ecx
1000f581:	and    DWORD PTR [ebp-0x8],0x0
1000f585:	push   ebx
1000f586:	mov    ebx,eax
1000f588:	and    DWORD PTR [ebx],0x0
1000f58b:	push   esi
1000f58c:	jmp    0x1000f5db
1000f58e:	mov    eax,DWORD PTR [edi]
1000f590:	call   0x1000df9e
1000f595:	movsx  esi,al
1000f598:	push   esi
1000f599:	mov    BYTE PTR [ebp-0x1],al
1000f59c:	call   0x10046071
1000f5a1:	pop    ecx
1000f5a2:	mov    cl,BYTE PTR [ebp-0x1]
1000f5a5:	sub    cl,0x30
1000f5a8:	cmp    cl,0x9
1000f5ab:	mov    BYTE PTR [ebp-0x1],cl
1000f5ae:	jbe    0x1000f5b8
1000f5b0:	cmp    al,0x61
1000f5b2:	jl     0x1000f5eb
1000f5b4:	cmp    al,0x66
1000f5b6:	jg     0x1000f5eb
1000f5b8:	mov    eax,DWORD PTR [edi]
1000f5ba:	call   0x1000dfbc
1000f5bf:	mov    eax,DWORD PTR [ebx]
1000f5c1:	shl    eax,0x4
1000f5c4:	cmp    BYTE PTR [ebp-0x1],0x9
1000f5c8:	mov    DWORD PTR [ebx],eax
1000f5ca:	ja     0x1000f5d2
1000f5cc:	lea    eax,[eax+esi*1-0x30]
1000f5d0:	jmp    0x1000f5d6
1000f5d2:	lea    eax,[eax+esi*1-0x57]
1000f5d6:	inc    DWORD PTR [ebp-0x8]
1000f5d9:	mov    DWORD PTR [ebx],eax
1000f5db:	mov    esi,DWORD PTR [edi]
1000f5dd:	call   0x1000de4d
1000f5e2:	test   al,al
1000f5e4:	je     0x1000f58e
1000f5e6:	xor    eax,eax
1000f5e8:	inc    eax
1000f5e9:	jmp    0x1000f62b
1000f5eb:	cmp    DWORD PTR [ebp-0x8],0x0
1000f5ef:	jne    0x1000f605
1000f5f1:	jmp    0x1000f5e6
1000f5f3:	mov    eax,DWORD PTR [edi]
1000f5f5:	call   0x1000df9e
1000f5fa:	cmp    al,0xd
1000f5fc:	je     0x1000f610
1000f5fe:	mov    eax,DWORD PTR [edi]
1000f600:	call   0x1000dfbc
1000f605:	mov    esi,DWORD PTR [edi]
1000f607:	call   0x1000de4d
1000f60c:	test   al,al
1000f60e:	je     0x1000f5f3
1000f610:	push   0x0
1000f612:	sub    esp,0x1c
1000f615:	mov    ecx,esp
1000f617:	mov    DWORD PTR [ebp-0x8],esp
1000f61a:	push   0x1006d3a4
1000f61f:	call   0x100011d1
1000f624:	mov    ebx,edi
1000f626:	call   0x1000ef05
1000f62b:	pop    esi
1000f62c:	pop    ebx
1000f62d:	leave  
1000f62e:	ret    
1000f62f:	push   ebp
1000f630:	mov    ebp,esp
1000f632:	push   ecx
1000f633:	push   ecx
1000f634:	push   DWORD PTR [ebp+0xc]
1000f637:	and    DWORD PTR [ebp-0x4],0x0
1000f63b:	push   DWORD PTR [ebp+0x8]
1000f63e:	call   0x1000f64a
1000f643:	mov    eax,DWORD PTR [ebp+0x8]
1000f646:	pop    ecx
1000f647:	pop    ecx
1000f648:	leave  
1000f649:	ret    
1000f64a:	push   0x34
1000f64c:	mov    eax,0x10063795
1000f651:	call   0x10059c75
1000f656:	mov    edi,DWORD PTR [ebp+0x8]
1000f659:	xor    esi,esi
1000f65b:	mov    DWORD PTR [ebp-0x10],esi
1000f65e:	mov    DWORD PTR [edi+0x4],esi
1000f661:	mov    DWORD PTR [edi+0x8],esi
1000f664:	mov    DWORD PTR [edi+0xc],esi
1000f667:	mov    DWORD PTR [ebp-0x4],esi
1000f66a:	push   DWORD PTR ds:0x10081438
1000f670:	mov    DWORD PTR [ebp-0x10],0x1
1000f677:	call   0x10043250
1000f67c:	pop    ecx
1000f67d:	mov    DWORD PTR [ebp-0x14],eax
1000f680:	push   esi
1000f681:	push   DWORD PTR ds:0x10081438
1000f687:	push   DWORD PTR [ebp+0xc]
1000f68a:	call   0x1000ca77
1000f68f:	mov    ebx,eax
1000f691:	cmp    ebx,0xffffffff
1000f694:	jne    0x1000f69c
1000f696:	mov    eax,DWORD PTR [ebp+0xc]
1000f699:	mov    ebx,DWORD PTR [eax+0x14]
1000f69c:	cmp    ebx,esi
1000f69e:	jb     0x1000f6ee
1000f6a0:	mov    eax,ebx
1000f6a2:	sub    eax,esi
1000f6a4:	push   eax
1000f6a5:	push   esi
1000f6a6:	push   DWORD PTR [ebp+0xc]
1000f6a9:	lea    eax,[ebp-0x40]
1000f6ac:	call   0x1000ca96
1000f6b1:	push   eax
1000f6b2:	lea    eax,[ebp-0x24]
1000f6b5:	push   eax
1000f6b6:	mov    DWORD PTR [ebp-0x4],0x1
1000f6bd:	call   0x1000f6fe
1000f6c2:	pop    ecx
1000f6c3:	pop    ecx
1000f6c4:	push   eax
1000f6c5:	mov    esi,edi
1000f6c7:	mov    BYTE PTR [ebp-0x4],0x2
1000f6cb:	call   0x1000f7b9
1000f6d0:	lea    esi,[ebp-0x24]
1000f6d3:	call   0x1000499a
1000f6d8:	push   0x0
1000f6da:	push   0x1
1000f6dc:	lea    ecx,[ebp-0x40]
1000f6df:	mov    BYTE PTR [ebp-0x4],0x0
1000f6e3:	call   0x100012f4
1000f6e8:	mov    eax,DWORD PTR [ebp-0x14]
1000f6eb:	lea    esi,[ebx+eax*1]
1000f6ee:	mov    eax,DWORD PTR [ebp+0xc]
1000f6f1:	cmp    esi,DWORD PTR [eax+0x14]
1000f6f4:	jb     0x1000f680
1000f6f6:	mov    eax,edi
1000f6f8:	call   0x10059d4d
1000f6fd:	ret    
1000f6fe:	push   0x44
1000f700:	mov    eax,0x10062103
1000f705:	call   0x10059c75
1000f70a:	mov    esi,DWORD PTR [ebp+0x8]
1000f70d:	xor    ebx,ebx
1000f70f:	mov    DWORD PTR [ebp-0x14],ebx
1000f712:	mov    DWORD PTR [esi+0x4],ebx
1000f715:	mov    DWORD PTR [esi+0x8],ebx
1000f718:	mov    DWORD PTR [esi+0xc],ebx
1000f71b:	xor    edi,edi
1000f71d:	inc    edi
1000f71e:	mov    DWORD PTR [ebp-0x4],ebx
1000f721:	push   0x1006dc98
1000f726:	mov    DWORD PTR [ebp-0x14],edi
1000f729:	call   0x10043250
1000f72e:	pop    ecx
1000f72f:	mov    DWORD PTR [ebp-0x18],eax
1000f732:	mov    DWORD PTR [ebp-0x10],ebx
1000f735:	push   DWORD PTR [ebp-0x10]
1000f738:	push   0x1006dc98
1000f73d:	push   DWORD PTR [ebp+0xc]
1000f740:	call   0x1000ca77
1000f745:	mov    ebx,eax
1000f747:	cmp    ebx,0xffffffff
1000f74a:	jne    0x1000f752
1000f74c:	mov    eax,DWORD PTR [ebp+0xc]
1000f74f:	mov    ebx,DWORD PTR [eax+0x14]
1000f752:	cmp    ebx,DWORD PTR [ebp-0x10]
1000f755:	jb     0x1000f7a6
1000f757:	mov    eax,ebx
1000f759:	sub    eax,DWORD PTR [ebp-0x10]
1000f75c:	push   eax
1000f75d:	push   DWORD PTR [ebp-0x10]
1000f760:	lea    eax,[ebp-0x50]
1000f763:	push   DWORD PTR [ebp+0xc]
1000f766:	call   0x1000ca96
1000f76b:	lea    ecx,[ebp-0x34]
1000f76e:	push   ecx
1000f76f:	mov    ecx,eax
1000f771:	mov    DWORD PTR [ebp-0x4],edi
1000f774:	call   0x1002df6a
1000f779:	pop    ecx
1000f77a:	push   eax
1000f77b:	mov    BYTE PTR [ebp-0x4],0x2
1000f77f:	call   0x1000f97e
1000f784:	push   0x0
1000f786:	push   edi
1000f787:	lea    ecx,[ebp-0x34]
1000f78a:	call   0x100012f4
1000f78f:	push   0x0
1000f791:	push   edi
1000f792:	lea    ecx,[ebp-0x50]
1000f795:	mov    BYTE PTR [ebp-0x4],0x0
1000f799:	call   0x100012f4
1000f79e:	mov    eax,DWORD PTR [ebp-0x18]
1000f7a1:	add    ebx,eax
1000f7a3:	mov    DWORD PTR [ebp-0x10],ebx
1000f7a6:	mov    eax,DWORD PTR [ebp-0x10]
1000f7a9:	mov    ecx,DWORD PTR [ebp+0xc]
1000f7ac:	cmp    eax,DWORD PTR [ecx+0x14]
1000f7af:	jb     0x1000f735
1000f7b1:	mov    eax,esi
1000f7b3:	call   0x10059d4d
1000f7b8:	ret    
1000f7b9:	push   ebp
1000f7ba:	mov    ebp,esp
1000f7bc:	sub    esp,0xc
1000f7bf:	push   ebx
1000f7c0:	mov    ebx,DWORD PTR [esi+0x4]
1000f7c3:	test   ebx,ebx
1000f7c5:	push   edi
1000f7c6:	jne    0x1000f7cc
1000f7c8:	xor    edi,edi
1000f7ca:	jmp    0x1000f7d4
1000f7cc:	mov    edi,DWORD PTR [esi+0xc]
1000f7cf:	sub    edi,ebx
1000f7d1:	sar    edi,0x4
1000f7d4:	mov    eax,esi
1000f7d6:	call   0x1000caf4
1000f7db:	cmp    eax,edi
1000f7dd:	jae    0x1000f7f1
1000f7df:	push   DWORD PTR [ebp+0x8]
1000f7e2:	push   0x1
1000f7e4:	push   DWORD PTR [esi+0x8]
1000f7e7:	call   0x1000f8ba
1000f7ec:	mov    DWORD PTR [esi+0x8],eax
1000f7ef:	jmp    0x1000f80d
1000f7f1:	mov    edi,DWORD PTR [esi+0x8]
1000f7f4:	cmp    ebx,edi
1000f7f6:	jbe    0x1000f7fd
1000f7f8:	call   0x100435f0
1000f7fd:	push   edi
1000f7fe:	push   esi
1000f7ff:	push   DWORD PTR [ebp+0x8]
1000f802:	lea    eax,[ebp-0xc]
1000f805:	push   eax
1000f806:	mov    eax,esi
1000f808:	call   0x1000f813
1000f80d:	pop    edi
1000f80e:	pop    ebx
1000f80f:	leave  
1000f810:	ret    0x4
1000f813:	push   ebp
1000f814:	mov    ebp,esp
1000f816:	push   ecx
1000f817:	push   ebx
1000f818:	push   esi
1000f819:	push   edi
1000f81a:	mov    esi,eax
1000f81c:	call   0x1000caf4
1000f821:	test   eax,eax
1000f823:	jne    0x1000f829
1000f825:	xor    edi,edi
1000f827:	jmp    0x1000f84e
1000f829:	mov    ebx,DWORD PTR [esi+0x4]
1000f82c:	cmp    ebx,DWORD PTR [esi+0x8]
1000f82f:	jbe    0x1000f836
1000f831:	call   0x100435f0
1000f836:	cmp    DWORD PTR [ebp+0x10],0x0
1000f83a:	je     0x1000f841
1000f83c:	cmp    DWORD PTR [ebp+0x10],esi
1000f83f:	je     0x1000f846
1000f841:	call   0x100435f0
1000f846:	mov    edi,DWORD PTR [ebp+0x14]
1000f849:	sub    edi,ebx
1000f84b:	sar    edi,0x4
1000f84e:	push   DWORD PTR [ebp+0x14]
1000f851:	mov    ecx,DWORD PTR [ebp+0xc]
1000f854:	push   DWORD PTR [ebp+0x10]
1000f857:	push   esi
1000f858:	call   0x1000fab0
1000f85d:	mov    ebx,DWORD PTR [esi+0x4]
1000f860:	cmp    ebx,DWORD PTR [esi+0x8]
1000f863:	jbe    0x1000f86a
1000f865:	call   0x100435f0
1000f86a:	shl    edi,0x4
1000f86d:	add    edi,ebx
1000f86f:	cmp    edi,DWORD PTR [esi+0x8]
1000f872:	mov    DWORD PTR [ebp+0x14],ebx
1000f875:	ja     0x1000f87c
1000f877:	cmp    edi,DWORD PTR [esi+0x4]
1000f87a:	jae    0x1000f881
1000f87c:	call   0x100435f0
1000f881:	mov    eax,DWORD PTR [ebp+0x8]
1000f884:	mov    DWORD PTR [eax+0x4],edi
1000f887:	pop    edi
1000f888:	mov    DWORD PTR [eax],esi
1000f88a:	pop    esi
1000f88b:	pop    ebx
1000f88c:	pop    ecx
1000f88d:	pop    ebp
1000f88e:	ret    0x10
1000f891:	push   esi
1000f892:	mov    esi,eax
1000f894:	cmp    esi,0xfffffff
1000f89a:	jbe    0x1000f8a1
1000f89c:	jmp    0x100120ac
1000f8a1:	mov    ecx,esi
1000f8a3:	call   0x1000fc79
1000f8a8:	shl    esi,0x4
1000f8ab:	add    esi,eax
1000f8ad:	mov    DWORD PTR [edi+0x4],eax
1000f8b0:	mov    DWORD PTR [edi+0x8],eax
1000f8b3:	mov    DWORD PTR [edi+0xc],esi
1000f8b6:	mov    al,0x1
1000f8b8:	pop    esi
1000f8b9:	ret    
1000f8ba:	push   ebp
1000f8bb:	mov    ebp,esp
1000f8bd:	push   ecx
1000f8be:	push   ecx
1000f8bf:	push   edi
1000f8c0:	xor    eax,eax
1000f8c2:	lea    edi,[ebp-0x4]
1000f8c5:	stos   BYTE PTR es:[edi],al
1000f8c6:	push   DWORD PTR [ebp-0x4]
1000f8c9:	push   DWORD PTR [ebp+0xc]
1000f8cc:	push   DWORD PTR [ebp+0x10]
1000f8cf:	push   DWORD PTR [ebp+0xc]
1000f8d2:	push   DWORD PTR [ebp+0x8]
1000f8d5:	call   0x10010025
1000f8da:	mov    eax,DWORD PTR [ebp+0xc]
1000f8dd:	add    esp,0x14
1000f8e0:	shl    eax,0x4
1000f8e3:	add    eax,DWORD PTR [ebp+0x8]
1000f8e6:	pop    edi
1000f8e7:	leave  
1000f8e8:	ret    0xc
1000f8eb:	push   0x10
1000f8ed:	mov    eax,0x1006105d
1000f8f2:	call   0x10059ca8
1000f8f7:	mov    ebx,ecx
1000f8f9:	mov    esi,DWORD PTR [ebp+0x8]
1000f8fc:	mov    eax,ebx
1000f8fe:	call   0x10004674
1000f903:	xor    ecx,ecx
1000f905:	cmp    eax,ecx
1000f907:	mov    DWORD PTR [esi+0x4],ecx
1000f90a:	mov    DWORD PTR [esi+0x8],ecx
1000f90d:	mov    DWORD PTR [esi+0xc],ecx
1000f910:	je     0x1000f962
1000f912:	mov    edi,esi
1000f914:	call   0x10004971
1000f919:	test   al,al
1000f91b:	je     0x1000f962
1000f91d:	and    DWORD PTR [ebp-0x4],0x0
1000f921:	mov    eax,DWORD PTR [ebx+0x8]
1000f924:	cmp    DWORD PTR [ebx+0x4],eax
1000f927:	mov    DWORD PTR [ebp-0x18],eax
1000f92a:	jbe    0x1000f931
1000f92c:	call   0x100435f0
1000f931:	mov    eax,DWORD PTR [ebx+0x4]
1000f934:	cmp    eax,DWORD PTR [ebx+0x8]
1000f937:	mov    DWORD PTR [ebp-0x1c],eax
1000f93a:	jbe    0x1000f941
1000f93c:	call   0x100435f0
1000f941:	mov    ecx,DWORD PTR [esi+0x4]
1000f944:	xor    eax,eax
1000f946:	lea    edi,[ebp-0x14]
1000f949:	stos   BYTE PTR es:[edi],al
1000f94a:	push   DWORD PTR [ebp-0x14]
1000f94d:	push   DWORD PTR [ebp+0x8]
1000f950:	push   ecx
1000f951:	push   DWORD PTR [ebp-0x18]
1000f954:	mov    ecx,DWORD PTR [ebp-0x1c]
1000f957:	call   0x10010242
1000f95c:	add    esp,0x10
1000f95f:	mov    DWORD PTR [esi+0x8],eax
1000f962:	mov    eax,esi
1000f964:	call   0x10059d4d
1000f969:	ret    0x4
1000f96c:	mov    esi,DWORD PTR [ebp+0x8]
1000f96f:	call   0x1000499a
1000f974:	push   0x0
1000f976:	push   0x0
1000f978:	call   0x10047c54
1000f97d:	int3   
1000f97e:	push   ebp
1000f97f:	mov    ebp,esp
1000f981:	sub    esp,0xc
1000f984:	push   ebx
1000f985:	push   edi
1000f986:	mov    edi,DWORD PTR [esi+0x4]
1000f989:	test   edi,edi
1000f98b:	jne    0x1000f991
1000f98d:	xor    ebx,ebx
1000f98f:	jmp    0x1000f99e
1000f991:	mov    eax,DWORD PTR [esi+0xc]
1000f994:	sub    eax,edi
1000f996:	push   0x1c
1000f998:	cdq    
1000f999:	pop    ecx
1000f99a:	idiv   ecx
1000f99c:	mov    ebx,eax
1000f99e:	mov    eax,esi
1000f9a0:	call   0x10004674
1000f9a5:	cmp    eax,ebx
1000f9a7:	jae    0x1000f9bb
1000f9a9:	push   DWORD PTR [ebp+0x8]
1000f9ac:	push   0x1
1000f9ae:	push   DWORD PTR [esi+0x8]
1000f9b1:	call   0x1000fd47
1000f9b6:	mov    DWORD PTR [esi+0x8],eax
1000f9b9:	jmp    0x1000f9d7
1000f9bb:	mov    ebx,DWORD PTR [esi+0x8]
1000f9be:	cmp    edi,ebx
1000f9c0:	jbe    0x1000f9c7
1000f9c2:	call   0x100435f0
1000f9c7:	push   ebx
1000f9c8:	push   esi
1000f9c9:	push   DWORD PTR [ebp+0x8]
1000f9cc:	lea    eax,[ebp-0xc]
1000f9cf:	push   eax
1000f9d0:	mov    eax,esi
1000f9d2:	call   0x1000fcc3
1000f9d7:	pop    edi
1000f9d8:	pop    ebx
1000f9d9:	leave  
1000f9da:	ret    0x4
1000f9dd:	push   ebp
1000f9de:	mov    ebp,esp
1000f9e0:	push   ecx
1000f9e1:	push   ecx
1000f9e2:	mov    ecx,DWORD PTR [ebx+0x14]
1000f9e5:	test   ecx,ecx
1000f9e7:	push   esi
1000f9e8:	push   edi
1000f9e9:	mov    BYTE PTR [ebp-0x4],0x20
1000f9ed:	jbe    0x1000fa30
1000f9ef:	mov    edx,DWORD PTR [ebx+0x18]
1000f9f2:	cmp    edx,0x10
1000f9f5:	lea    esi,[ebx+0x4]
1000f9f8:	jb     0x1000f9fe
1000f9fa:	mov    eax,DWORD PTR [esi]
1000f9fc:	jmp    0x1000fa00
1000f9fe:	mov    eax,esi
1000fa00:	add    eax,ecx
1000fa02:	cmp    edx,0x10
1000fa05:	mov    DWORD PTR [ebp-0x8],eax
1000fa08:	jb     0x1000fa0e
1000fa0a:	mov    edi,DWORD PTR [esi]
1000fa0c:	jmp    0x1000fa10
1000fa0e:	mov    edi,esi
1000fa10:	cmp    edi,eax
1000fa12:	jae    0x1000fa30
1000fa14:	movsx  eax,BYTE PTR [edi]
1000fa17:	push   0x1
1000fa19:	push   eax
1000fa1a:	lea    eax,[ebp-0x4]
1000fa1d:	push   eax
1000fa1e:	call   0x10045df0
1000fa23:	add    esp,0xc
1000fa26:	test   eax,eax
1000fa28:	je     0x1000fa37
1000fa2a:	inc    edi
1000fa2b:	cmp    edi,DWORD PTR [ebp-0x8]
1000fa2e:	jb     0x1000fa14
1000fa30:	or     eax,0xffffffff
1000fa33:	pop    edi
1000fa34:	pop    esi
1000fa35:	leave  
1000fa36:	ret    
1000fa37:	cmp    DWORD PTR [ebx+0x18],0x10
1000fa3b:	jb     0x1000fa3f
1000fa3d:	mov    esi,DWORD PTR [esi]
1000fa3f:	sub    edi,esi
1000fa41:	mov    eax,edi
1000fa43:	jmp    0x1000fa33
1000fa45:	push   ebp
1000fa46:	mov    ebp,esp
1000fa48:	push   ecx
1000fa49:	mov    eax,DWORD PTR [ebx+0x14]
1000fa4c:	test   eax,eax
1000fa4e:	push   esi
1000fa4f:	push   edi
1000fa50:	mov    BYTE PTR [ebp-0x4],0x20
1000fa54:	jbe    0x1000faa9
1000fa56:	or     ecx,0xffffffff
1000fa59:	cmp    eax,ecx
1000fa5b:	ja     0x1000fa60
1000fa5d:	lea    ecx,[eax-0x1]
1000fa60:	cmp    DWORD PTR [ebx+0x18],0x10
1000fa64:	lea    edi,[ebx+0x4]
1000fa67:	jb     0x1000fa6d
1000fa69:	mov    eax,DWORD PTR [edi]
1000fa6b:	jmp    0x1000fa6f
1000fa6d:	mov    eax,edi
1000fa6f:	lea    esi,[eax+ecx*1]
1000fa72:	jmp    0x1000fa85
1000fa74:	cmp    DWORD PTR [ebx+0x18],0x10
1000fa78:	jb     0x1000fa7e
1000fa7a:	mov    eax,DWORD PTR [edi]
1000fa7c:	jmp    0x1000fa80
1000fa7e:	mov    eax,edi
1000fa80:	cmp    esi,eax
1000fa82:	je     0x1000faa9
1000fa84:	dec    esi
1000fa85:	movsx  eax,BYTE PTR [esi]
1000fa88:	push   0x1
1000fa8a:	push   eax
1000fa8b:	lea    eax,[ebp-0x4]
1000fa8e:	push   eax
1000fa8f:	call   0x10045df0
1000fa94:	add    esp,0xc
1000fa97:	test   eax,eax
1000fa99:	jne    0x1000fa74
1000fa9b:	cmp    DWORD PTR [ebx+0x18],0x10
1000fa9f:	jb     0x1000faa3
1000faa1:	mov    edi,DWORD PTR [edi]
1000faa3:	sub    esi,edi
1000faa5:	mov    eax,esi
1000faa7:	jmp    0x1000faac
1000faa9:	or     eax,0xffffffff
1000faac:	pop    edi
1000faad:	pop    esi
1000faae:	leave  
1000faaf:	ret    
1000fab0:	push   0x18
1000fab2:	mov    eax,0x10062eb5
1000fab7:	call   0x10059ca8
1000fabc:	mov    esi,DWORD PTR [ebp+0x8]
1000fabf:	lea    eax,[ebp-0x24]
1000fac2:	push   eax
1000fac3:	call   0x1000f8eb
1000fac8:	xor    edi,edi
1000faca:	mov    DWORD PTR [ebp-0x4],edi
1000facd:	mov    eax,DWORD PTR [esi+0x4]
1000fad0:	cmp    eax,edi
1000fad2:	je     0x1000fadc
1000fad4:	mov    edi,DWORD PTR [esi+0xc]
1000fad7:	sub    edi,eax
1000fad9:	sar    edi,0x4
1000fadc:	mov    eax,esi
1000fade:	call   0x1000caf4
1000fae3:	mov    ebx,0xfffffff
1000fae8:	mov    ecx,ebx
1000faea:	sub    ecx,eax
1000faec:	cmp    ecx,0x1
1000faef:	jae    0x1000faf6
1000faf1:	call   0x100120ac
1000faf6:	mov    eax,esi
1000faf8:	call   0x1000caf4
1000fafd:	inc    eax
1000fafe:	cmp    edi,eax
1000fb00:	jae    0x1000fbc1
1000fb06:	mov    eax,edi
1000fb08:	shr    eax,1
1000fb0a:	sub    ebx,eax
1000fb0c:	cmp    ebx,edi
1000fb0e:	jae    0x1000fb14
1000fb10:	xor    edi,edi
1000fb12:	jmp    0x1000fb16
1000fb14:	add    edi,eax
1000fb16:	mov    eax,esi
1000fb18:	call   0x1000caf4
1000fb1d:	inc    eax
1000fb1e:	cmp    edi,eax
1000fb20:	jae    0x1000fb2c
1000fb22:	mov    eax,esi
1000fb24:	call   0x1000caf4
1000fb29:	mov    edi,eax
1000fb2b:	inc    edi
1000fb2c:	mov    ecx,edi
1000fb2e:	call   0x1000fc79
1000fb33:	push   eax
1000fb34:	push   DWORD PTR [ebp+0x10]
1000fb37:	mov    BYTE PTR [ebp-0x4],0x1
1000fb3b:	mov    ecx,DWORD PTR [esi+0x4]
1000fb3e:	mov    DWORD PTR [ebp-0x14],eax
1000fb41:	mov    DWORD PTR [ebp+0x8],eax
1000fb44:	call   0x1000ff8a
1000fb49:	lea    ecx,[ebp-0x24]
1000fb4c:	push   ecx
1000fb4d:	push   0x1
1000fb4f:	push   eax
1000fb50:	mov    DWORD PTR [ebp+0x8],eax
1000fb53:	call   0x1000f8ba
1000fb58:	mov    ecx,DWORD PTR [ebp+0x10]
1000fb5b:	push   eax
1000fb5c:	push   DWORD PTR [esi+0x8]
1000fb5f:	mov    DWORD PTR [ebp+0x8],eax
1000fb62:	call   0x1000ff8a
1000fb67:	mov    eax,esi
1000fb69:	call   0x1000caf4
1000fb6e:	mov    ebx,eax
1000fb70:	mov    eax,DWORD PTR [esi+0x4]
1000fb73:	inc    ebx
1000fb74:	test   eax,eax
1000fb76:	je     0x1000fb89
1000fb78:	push   DWORD PTR [esi+0x8]
1000fb7b:	call   0x1000d4d5
1000fb80:	push   DWORD PTR [esi+0x4]
1000fb83:	call   0x100430d2
1000fb88:	pop    ecx
1000fb89:	mov    eax,DWORD PTR [ebp-0x14]
1000fb8c:	shl    edi,0x4
1000fb8f:	add    edi,eax
1000fb91:	shl    ebx,0x4
1000fb94:	add    ebx,eax
1000fb96:	mov    DWORD PTR [esi+0xc],edi
1000fb99:	mov    DWORD PTR [esi+0x8],ebx
1000fb9c:	mov    DWORD PTR [esi+0x4],eax
1000fb9f:	jmp    0x1000fc69
1000fba4:	push   DWORD PTR [ebp+0x8]
1000fba7:	mov    eax,DWORD PTR [ebp-0x14]
1000fbaa:	call   0x1000d4d5
1000fbaf:	push   DWORD PTR [ebp-0x14]
1000fbb2:	call   0x100430d2
1000fbb7:	pop    ecx
1000fbb8:	push   0x0
1000fbba:	push   0x0
1000fbbc:	call   0x10047c54
1000fbc1:	mov    ebx,DWORD PTR [esi+0x8]
1000fbc4:	mov    edi,DWORD PTR [ebp+0x10]
1000fbc7:	mov    eax,ebx
1000fbc9:	sub    eax,edi
1000fbcb:	sar    eax,0x4
1000fbce:	cmp    eax,0x1
1000fbd1:	jae    0x1000fc37
1000fbd3:	lea    eax,[edi+0x10]
1000fbd6:	push   eax
1000fbd7:	push   ebx
1000fbd8:	mov    ecx,edi
1000fbda:	call   0x1000ff8a
1000fbdf:	mov    BYTE PTR [ebp-0x4],0x3
1000fbe3:	mov    eax,DWORD PTR [esi+0x8]
1000fbe6:	lea    ecx,[ebp-0x24]
1000fbe9:	push   ecx
1000fbea:	mov    ecx,eax
1000fbec:	xor    edx,edx
1000fbee:	sub    ecx,edi
1000fbf0:	sar    ecx,0x4
1000fbf3:	inc    edx
1000fbf4:	sub    edx,ecx
1000fbf6:	push   edx
1000fbf7:	push   eax
1000fbf8:	call   0x1000f8ba
1000fbfd:	and    DWORD PTR [ebp-0x4],0x0
1000fc01:	add    DWORD PTR [esi+0x8],0x10
1000fc05:	mov    esi,DWORD PTR [esi+0x8]
1000fc08:	add    esi,0xfffffff0
1000fc0b:	jmp    0x1000fc1a
1000fc0d:	lea    eax,[ebp-0x24]
1000fc10:	mov    ecx,edi
1000fc12:	call   0x10010112
1000fc17:	add    edi,0x10
1000fc1a:	cmp    edi,esi
1000fc1c:	jne    0x1000fc0d
1000fc1e:	jmp    0x1000fc69
1000fc20:	mov    eax,DWORD PTR [ebp+0x8]
1000fc23:	mov    eax,DWORD PTR [eax+0x8]
1000fc26:	add    eax,0x10
1000fc29:	push   eax
1000fc2a:	mov    eax,DWORD PTR [ebp+0x10]
1000fc2d:	add    eax,0x10
1000fc30:	call   0x1000d4d5
1000fc35:	jmp    0x1000fbb8
1000fc37:	push   ebx
1000fc38:	lea    ecx,[ebx-0x10]
1000fc3b:	push   ebx
1000fc3c:	mov    DWORD PTR [ebp+0x8],ecx
1000fc3f:	call   0x1000ff8a
1000fc44:	mov    ecx,DWORD PTR [ebp+0x8]
1000fc47:	mov    DWORD PTR [esi+0x8],eax
1000fc4a:	push   edi
1000fc4b:	mov    eax,ebx
1000fc4d:	call   0x1000ffae
1000fc52:	pop    ecx
1000fc53:	lea    esi,[edi+0x10]
1000fc56:	jmp    0x1000fc65
1000fc58:	lea    eax,[ebp-0x24]
1000fc5b:	mov    ecx,edi
1000fc5d:	call   0x10010112
1000fc62:	add    edi,0x10
1000fc65:	cmp    edi,esi
1000fc67:	jne    0x1000fc58
1000fc69:	lea    esi,[ebp-0x24]
1000fc6c:	call   0x1000499a
1000fc71:	call   0x10059d4d
1000fc76:	ret    0xc
1000fc79:	push   ebp
1000fc7a:	mov    ebp,esp
1000fc7c:	sub    esp,0x10
1000fc7f:	test   ecx,ecx
1000fc81:	ja     0x1000fc91
1000fc83:	xor    ecx,ecx
1000fc85:	shl    ecx,0x4
1000fc88:	push   ecx
1000fc89:	call   0x100436de
1000fc8e:	pop    ecx
1000fc8f:	leave  
1000fc90:	ret    
1000fc91:	or     eax,0xffffffff
1000fc94:	xor    edx,edx
1000fc96:	div    ecx
1000fc98:	cmp    eax,0x10
1000fc9b:	jae    0x1000fc85
1000fc9d:	and    DWORD PTR [ebp-0x4],0x0
1000fca1:	lea    eax,[ebp-0x4]
1000fca4:	push   eax
1000fca5:	lea    ecx,[ebp-0x10]
1000fca8:	call   0x10043152
1000fcad:	push   0x10074e18
1000fcb2:	lea    eax,[ebp-0x10]
1000fcb5:	push   eax
1000fcb6:	mov    DWORD PTR [ebp-0x10],0x100665c8
1000fcbd:	call   0x10047c54
1000fcc2:	int3   
1000fcc3:	push   ebp
1000fcc4:	mov    ebp,esp
1000fcc6:	push   ecx
1000fcc7:	push   ebx
1000fcc8:	push   esi
1000fcc9:	push   edi
1000fcca:	mov    esi,eax
1000fccc:	call   0x10004674
1000fcd1:	test   eax,eax
1000fcd3:	jne    0x1000fcd9
1000fcd5:	xor    ebx,ebx
1000fcd7:	jmp    0x1000fd03
1000fcd9:	mov    edi,DWORD PTR [esi+0x4]
1000fcdc:	cmp    edi,DWORD PTR [esi+0x8]
1000fcdf:	jbe    0x1000fce6
1000fce1:	call   0x100435f0
1000fce6:	cmp    DWORD PTR [ebp+0x10],0x0
1000fcea:	je     0x1000fcf1
1000fcec:	cmp    DWORD PTR [ebp+0x10],esi
1000fcef:	je     0x1000fcf6
1000fcf1:	call   0x100435f0
1000fcf6:	mov    eax,DWORD PTR [ebp+0x14]
1000fcf9:	sub    eax,edi
1000fcfb:	push   0x1c
1000fcfd:	cdq    
1000fcfe:	pop    ecx
1000fcff:	idiv   ecx
1000fd01:	mov    ebx,eax
1000fd03:	push   DWORD PTR [ebp+0x14]
1000fd06:	mov    ecx,esi
1000fd08:	push   DWORD PTR [ebp+0x10]
1000fd0b:	push   DWORD PTR [ebp+0xc]
1000fd0e:	call   0x1000fd8f
1000fd13:	mov    edi,DWORD PTR [esi+0x4]
1000fd16:	cmp    edi,DWORD PTR [esi+0x8]
1000fd19:	jbe    0x1000fd20
1000fd1b:	call   0x100435f0
1000fd20:	imul   ebx,ebx,0x1c
1000fd23:	mov    DWORD PTR [ebp+0x14],edi
1000fd26:	add    edi,ebx
1000fd28:	cmp    edi,DWORD PTR [esi+0x8]
1000fd2b:	ja     0x1000fd32
1000fd2d:	cmp    edi,DWORD PTR [esi+0x4]
1000fd30:	jae    0x1000fd37
1000fd32:	call   0x100435f0
1000fd37:	mov    eax,DWORD PTR [ebp+0x8]
1000fd3a:	mov    DWORD PTR [eax+0x4],edi
1000fd3d:	pop    edi
1000fd3e:	mov    DWORD PTR [eax],esi
1000fd40:	pop    esi
1000fd41:	pop    ebx
1000fd42:	pop    ecx
1000fd43:	pop    ebp
1000fd44:	ret    0x10
1000fd47:	push   ebp
1000fd48:	mov    ebp,esp
1000fd4a:	push   ecx
1000fd4b:	push   edi
1000fd4c:	xor    eax,eax
1000fd4e:	lea    edi,[ebp-0x4]
1000fd51:	stos   BYTE PTR es:[edi],al
1000fd52:	push   DWORD PTR [ebp-0x4]
1000fd55:	push   DWORD PTR [ebp+0xc]
1000fd58:	push   DWORD PTR [ebp+0x10]
1000fd5b:	push   DWORD PTR [ebp+0xc]
1000fd5e:	push   DWORD PTR [ebp+0x8]
1000fd61:	call   0x10010076
1000fd66:	mov    eax,DWORD PTR [ebp+0xc]
1000fd69:	imul   eax,eax,0x1c
1000fd6c:	add    esp,0x14
1000fd6f:	add    eax,DWORD PTR [ebp+0x8]
1000fd72:	pop    edi
1000fd73:	leave  
1000fd74:	ret    0xc
1000fd77:	push   ebp
1000fd78:	mov    ebp,esp
1000fd7a:	push   ecx
1000fd7b:	push   DWORD PTR [ebp+0xc]
1000fd7e:	mov    ecx,DWORD PTR [ebp+0x8]
1000fd81:	and    DWORD PTR [ebp-0x4],0x0
1000fd85:	call   0x100011ab
1000fd8a:	mov    eax,DWORD PTR [ebp+0x8]
1000fd8d:	leave  
1000fd8e:	ret    
1000fd8f:	push   0x30
1000fd91:	mov    eax,0x10061038
1000fd96:	call   0x10059d14
1000fd9b:	mov    eax,DWORD PTR [ebp+0x8]
1000fd9e:	mov    esi,ecx
1000fda0:	push   eax
1000fda1:	lea    ecx,[ebp-0x30]
1000fda4:	mov    DWORD PTR [ebp-0x34],esi
1000fda7:	call   0x100011ab
1000fdac:	xor    ebx,ebx
1000fdae:	mov    DWORD PTR [ebp-0x4],ebx
1000fdb1:	mov    ecx,DWORD PTR [esi+0x4]
1000fdb4:	cmp    ecx,ebx
1000fdb6:	je     0x1000fdc5
1000fdb8:	mov    eax,DWORD PTR [esi+0xc]
1000fdbb:	sub    eax,ecx
1000fdbd:	push   0x1c
1000fdbf:	cdq    
1000fdc0:	pop    ecx
1000fdc1:	idiv   ecx
1000fdc3:	mov    ebx,eax
1000fdc5:	mov    eax,esi
1000fdc7:	call   0x10004674
1000fdcc:	mov    edi,0x9249249
1000fdd1:	mov    ecx,edi
1000fdd3:	sub    ecx,eax
1000fdd5:	cmp    ecx,0x1
1000fdd8:	jae    0x1000fddf
1000fdda:	call   0x100120ac
1000fddf:	mov    eax,esi
1000fde1:	call   0x10004674
1000fde6:	inc    eax
1000fde7:	cmp    ebx,eax
1000fde9:	jae    0x1000feac
1000fdef:	mov    eax,ebx
1000fdf1:	shr    eax,1
1000fdf3:	sub    edi,eax
1000fdf5:	cmp    edi,ebx
1000fdf7:	jae    0x1000fdfd
1000fdf9:	xor    ebx,ebx
1000fdfb:	jmp    0x1000fdff
1000fdfd:	add    ebx,eax
1000fdff:	mov    eax,esi
1000fe01:	call   0x10004674
1000fe06:	inc    eax
1000fe07:	cmp    ebx,eax
1000fe09:	jae    0x1000fe15
1000fe0b:	mov    eax,esi
1000fe0d:	call   0x10004674
1000fe12:	mov    ebx,eax
1000fe14:	inc    ebx
1000fe15:	mov    ecx,ebx
1000fe17:	call   0x10004e58
1000fe1c:	push   DWORD PTR [ebp+0x10]
1000fe1f:	mov    BYTE PTR [ebp-0x4],0x1
1000fe23:	mov    ecx,DWORD PTR [esi+0x4]
1000fe26:	mov    edx,eax
1000fe28:	mov    DWORD PTR [ebp-0x34],eax
1000fe2b:	mov    DWORD PTR [ebp-0x38],eax
1000fe2e:	call   0x10010004
1000fe33:	lea    ecx,[ebp-0x30]
1000fe36:	push   ecx
1000fe37:	push   0x1
1000fe39:	push   eax
1000fe3a:	mov    DWORD PTR [ebp-0x38],eax
1000fe3d:	call   0x1000fd47
1000fe42:	push   DWORD PTR [esi+0x8]
1000fe45:	mov    ecx,DWORD PTR [ebp+0x10]
1000fe48:	mov    edx,eax
1000fe4a:	mov    DWORD PTR [ebp-0x38],edx
1000fe4d:	call   0x10010004
1000fe52:	mov    eax,esi
1000fe54:	call   0x10004674
1000fe59:	mov    edi,eax
1000fe5b:	mov    eax,DWORD PTR [esi+0x4]
1000fe5e:	inc    edi
1000fe5f:	test   eax,eax
1000fe61:	je     0x1000fe74
1000fe63:	push   DWORD PTR [esi+0x8]
1000fe66:	call   0x10004ec8
1000fe6b:	push   DWORD PTR [esi+0x4]
1000fe6e:	call   0x100430d2
1000fe73:	pop    ecx
1000fe74:	mov    eax,DWORD PTR [ebp-0x34]
1000fe77:	imul   ebx,ebx,0x1c
1000fe7a:	imul   edi,edi,0x1c
1000fe7d:	add    ebx,eax
1000fe7f:	add    edi,eax
1000fe81:	mov    DWORD PTR [esi+0xc],ebx
1000fe84:	mov    DWORD PTR [esi+0x8],edi
1000fe87:	mov    DWORD PTR [esi+0x4],eax
1000fe8a:	jmp    0x1000ff76
1000fe8f:	push   DWORD PTR [ebp-0x38]
1000fe92:	mov    eax,DWORD PTR [ebp-0x34]
1000fe95:	call   0x10004ec8
1000fe9a:	push   DWORD PTR [ebp-0x34]
1000fe9d:	call   0x100430d2
1000fea2:	pop    ecx
1000fea3:	push   0x0
1000fea5:	push   0x0
1000fea7:	call   0x10047c54
1000feac:	mov    edi,DWORD PTR [esi+0x8]
1000feaf:	mov    ebx,DWORD PTR [ebp+0x10]
1000feb2:	mov    eax,edi
1000feb4:	sub    eax,ebx
1000feb6:	push   0x1c
1000feb8:	cdq    
1000feb9:	pop    ecx
1000feba:	idiv   ecx
1000febc:	push   edi
1000febd:	cmp    eax,0x1
1000fec0:	jae    0x1000ff2e
1000fec2:	lea    edx,[ebx+0x1c]
1000fec5:	mov    ecx,ebx
1000fec7:	call   0x10010004
1000fecc:	mov    BYTE PTR [ebp-0x4],0x3
1000fed0:	mov    ecx,DWORD PTR [esi+0x8]
1000fed3:	lea    eax,[ebp-0x30]
1000fed6:	push   eax
1000fed7:	mov    eax,ecx
1000fed9:	sub    eax,ebx
1000fedb:	push   0x1c
1000fedd:	pop    edi
1000fede:	cdq    
1000fedf:	idiv   edi
1000fee1:	xor    edx,edx
1000fee3:	inc    edx
1000fee4:	sub    edx,eax
1000fee6:	push   edx
1000fee7:	push   ecx
1000fee8:	call   0x1000fd47
1000feed:	and    DWORD PTR [ebp-0x4],0x0
1000fef1:	add    DWORD PTR [esi+0x8],edi
1000fef4:	mov    esi,DWORD PTR [esi+0x8]
1000fef7:	add    esi,0xffffffe4
1000fefa:	jmp    0x1000ff0e
1000fefc:	push   0xffffffff
1000fefe:	push   0x0
1000ff00:	lea    eax,[ebp-0x30]
1000ff03:	push   eax
1000ff04:	mov    ecx,ebx
1000ff06:	call   0x10001245
1000ff0b:	add    ebx,0x1c
1000ff0e:	cmp    ebx,esi
1000ff10:	jne    0x1000fefc
1000ff12:	jmp    0x1000ff76
1000ff14:	mov    eax,DWORD PTR [ebp-0x34]
1000ff17:	mov    eax,DWORD PTR [eax+0x8]
1000ff1a:	add    eax,0x1c
1000ff1d:	push   eax
1000ff1e:	mov    eax,DWORD PTR [ebp+0x10]
1000ff21:	add    eax,0x1c
1000ff24:	call   0x10004ec8
1000ff29:	jmp    0x1000fea3
1000ff2e:	lea    ecx,[edi-0x1c]
1000ff31:	mov    edx,edi
1000ff33:	call   0x10010004
1000ff38:	mov    DWORD PTR [esi+0x8],eax
1000ff3b:	lea    esi,[edi-0x1c]
1000ff3e:	cmp    ebx,esi
1000ff40:	je     0x1000ff57
1000ff42:	sub    edi,esi
1000ff44:	sub    esi,0x1c
1000ff47:	lea    eax,[edi+esi*1]
1000ff4a:	push   eax
1000ff4b:	mov    ecx,esi
1000ff4d:	call   0x10010408
1000ff52:	cmp    esi,ebx
1000ff54:	pop    ecx
1000ff55:	jne    0x1000ff44
1000ff57:	lea    edi,[ebx+0x1c]
1000ff5a:	cmp    ebx,edi
1000ff5c:	mov    esi,ebx
1000ff5e:	je     0x1000ff76
1000ff60:	push   0xffffffff
1000ff62:	push   0x0
1000ff64:	lea    eax,[ebp-0x30]
1000ff67:	push   eax
1000ff68:	mov    ecx,esi
1000ff6a:	call   0x10001245
1000ff6f:	add    esi,0x1c
1000ff72:	cmp    esi,edi
1000ff74:	jne    0x1000ff60
1000ff76:	push   0x0
1000ff78:	push   0x1
1000ff7a:	lea    ecx,[ebp-0x30]
1000ff7d:	call   0x100012f4
1000ff82:	call   0x10059d70
1000ff87:	ret    0xc
1000ff8a:	push   ebp
1000ff8b:	mov    ebp,esp
1000ff8d:	push   ecx
1000ff8e:	push   edi
1000ff8f:	xor    eax,eax
1000ff91:	lea    edi,[ebp-0x4]
1000ff94:	stos   BYTE PTR es:[edi],al
1000ff95:	push   DWORD PTR [ebp-0x4]
1000ff98:	push   DWORD PTR [ebp+0xc]
1000ff9b:	push   DWORD PTR [ebp+0xc]
1000ff9e:	push   DWORD PTR [ebp+0x8]
1000ffa1:	call   0x10010296
1000ffa6:	add    esp,0x10
1000ffa9:	pop    edi
1000ffaa:	leave  
1000ffab:	ret    0x8
1000ffae:	push   ecx
1000ffaf:	push   ebx
1000ffb0:	push   esi
1000ffb1:	push   edi
1000ffb2:	mov    edi,ecx
1000ffb4:	sub    ecx,DWORD PTR [esp+0x14]
1000ffb8:	mov    esi,eax
1000ffba:	sar    ecx,0x4
1000ffbd:	shl    ecx,0x4
1000ffc0:	sub    eax,ecx
1000ffc2:	cmp    DWORD PTR [esp+0x14],edi
1000ffc6:	je     0x1000ffff
1000ffc8:	lea    edx,[edi+0xc]
1000ffcb:	lea    ecx,[esi+0x8]
1000ffce:	sub    edi,esi
1000ffd0:	mov    ebx,DWORD PTR [edx-0x18]
1000ffd3:	mov    esi,DWORD PTR [ecx-0x14]
1000ffd6:	sub    ecx,0x10
1000ffd9:	sub    edx,0x10
1000ffdc:	mov    DWORD PTR [ecx-0x4],ebx
1000ffdf:	mov    DWORD PTR [edx-0x8],esi
1000ffe2:	mov    ebx,DWORD PTR [edi+ecx*1]
1000ffe5:	mov    esi,DWORD PTR [ecx]
1000ffe7:	mov    DWORD PTR [ecx],ebx
1000ffe9:	mov    DWORD PTR [edi+ecx*1],esi
1000ffec:	mov    esi,DWORD PTR [ecx+0x4]
1000ffef:	mov    ebx,DWORD PTR [edx]
1000fff1:	mov    DWORD PTR [ecx+0x4],ebx
1000fff4:	mov    DWORD PTR [edx],esi
1000fff6:	lea    esi,[edx-0xc]
1000fff9:	cmp    esi,DWORD PTR [esp+0x14]
1000fffd:	jne    0x1000ffd0
1000ffff:	pop    edi
10010000:	pop    esi
10010001:	pop    ebx
10010002:	pop    ecx
10010003:	ret    
10010004:	push   ebp
10010005:	mov    ebp,esp
10010007:	push   ecx
10010008:	push   edi
10010009:	xor    eax,eax
1001000b:	lea    edi,[ebp-0x4]
1001000e:	stos   BYTE PTR es:[edi],al
1001000f:	push   DWORD PTR [ebp-0x4]
10010012:	push   DWORD PTR [ebp+0x8]
10010015:	push   DWORD PTR [ebp+0x8]
10010018:	call   0x10010324
1001001d:	add    esp,0xc
10010020:	pop    edi
10010021:	leave  
10010022:	ret    0x4
10010025:	push   0x8
10010027:	mov    eax,0x100621cc
1001002c:	call   0x10059ca8
10010031:	mov    eax,DWORD PTR [ebp+0x8]
10010034:	and    DWORD PTR [ebp-0x4],0x0
10010038:	mov    DWORD PTR [ebp-0x14],eax
1001003b:	cmp    DWORD PTR [ebp+0xc],0x0
1001003f:	jbe    0x10010070
10010041:	push   DWORD PTR [ebp+0x8]
10010044:	mov    ecx,DWORD PTR [ebp+0x10]
10010047:	call   0x100100ec
1001004c:	dec    DWORD PTR [ebp+0xc]
1001004f:	add    DWORD PTR [ebp+0x8],0x10
10010053:	jmp    0x1001003b
10010055:	mov    esi,DWORD PTR [ebp-0x14]
10010058:	jmp    0x10010062
1001005a:	call   0x1000499a
1001005f:	add    esi,0x10
10010062:	cmp    esi,DWORD PTR [ebp+0x8]
10010065:	jne    0x1001005a
10010067:	push   0x0
10010069:	push   0x0
1001006b:	call   0x10047c54
10010070:	call   0x10059d4d
10010075:	ret    
10010076:	push   0x8
10010078:	mov    eax,0x1005fef3
1001007d:	call   0x10059ca8
10010082:	mov    eax,DWORD PTR [ebp+0x8]
10010085:	and    DWORD PTR [ebp-0x4],0x0
10010089:	mov    DWORD PTR [ebp-0x14],eax
1001008c:	cmp    DWORD PTR [ebp+0xc],0x0
10010090:	jbe    0x100100c2
10010092:	push   DWORD PTR [ebp+0x10]
10010095:	mov    ecx,DWORD PTR [ebp+0x8]
10010098:	call   0x100100c8
1001009d:	dec    DWORD PTR [ebp+0xc]
100100a0:	add    DWORD PTR [ebp+0x8],0x1c
100100a4:	jmp    0x1001008c
100100a6:	mov    esi,DWORD PTR [ebp-0x14]
100100a9:	jmp    0x100100b4
100100ab:	push   esi
100100ac:	call   0x10006657
100100b1:	add    esi,0x1c
100100b4:	cmp    esi,DWORD PTR [ebp+0x8]
100100b7:	push   0x0
100100b9:	jne    0x100100ab
100100bb:	push   0x0
100100bd:	call   0x10047c54
100100c2:	call   0x10059d4d
100100c7:	ret    
100100c8:	push   0x0
100100ca:	mov    eax,0x1005fb84
100100cf:	call   0x10059c75
100100d4:	and    DWORD PTR [ebp-0x4],0x0
100100d8:	test   ecx,ecx
100100da:	je     0x100100e4
100100dc:	push   DWORD PTR [ebp+0x8]
100100df:	call   0x100011ab
100100e4:	call   0x10059d4d
100100e9:	ret    0x4
100100ec:	push   0x0
100100ee:	mov    eax,0x1005fb84
100100f3:	call   0x10059c75
100100f8:	and    DWORD PTR [ebp-0x4],0x0
100100fc:	cmp    DWORD PTR [ebp+0x8],0x0
10010100:	je     0x1001010a
10010102:	push   DWORD PTR [ebp+0x8]
10010105:	call   0x1000f8eb
1001010a:	call   0x10059d4d
1001010f:	ret    0x4
10010112:	push   ebp
10010113:	mov    ebp,esp
10010115:	push   ecx
10010116:	push   ebx
10010117:	push   esi
10010118:	push   edi
10010119:	mov    ebx,eax
1001011b:	mov    edi,ecx
1001011d:	cmp    edi,ebx
1001011f:	je     0x1001023b
10010125:	call   0x10004674
1001012a:	test   eax,eax
1001012c:	jne    0x1001016f
1001012e:	mov    ebx,DWORD PTR [edi+0x8]
10010131:	cmp    DWORD PTR [edi+0x4],ebx
10010134:	jbe    0x1001013b
10010136:	call   0x100435f0
1001013b:	mov    esi,DWORD PTR [edi+0x4]
1001013e:	cmp    esi,DWORD PTR [edi+0x8]
10010141:	jbe    0x10010148
10010143:	call   0x100435f0
10010148:	cmp    esi,ebx
1001014a:	je     0x1001023b
10010150:	push   DWORD PTR [edi+0x8]
10010153:	mov    eax,esi
10010155:	mov    ecx,ebx
10010157:	call   0x100103a6
1001015c:	pop    ecx
1001015d:	push   DWORD PTR [edi+0x8]
10010160:	mov    esi,eax
10010162:	call   0x10004ec8
10010167:	mov    DWORD PTR [edi+0x8],esi
1001016a:	jmp    0x1001023b
1001016f:	mov    eax,ebx
10010171:	call   0x10004674
10010176:	mov    esi,eax
10010178:	mov    eax,edi
1001017a:	call   0x10004674
1001017f:	cmp    esi,eax
10010181:	ja     0x100101ac
10010183:	push   DWORD PTR [ebx+0x8]
10010186:	mov    eax,DWORD PTR [edi+0x4]
10010189:	mov    ecx,DWORD PTR [ebx+0x4]
1001018c:	call   0x100103a6
10010191:	pop    ecx
10010192:	push   DWORD PTR [edi+0x8]
10010195:	call   0x10004ec8
1001019a:	mov    eax,ebx
1001019c:	call   0x10004674
100101a1:	imul   eax,eax,0x1c
100101a4:	add    eax,DWORD PTR [edi+0x4]
100101a7:	jmp    0x10010238
100101ac:	mov    esi,DWORD PTR [edi+0x4]
100101af:	test   esi,esi
100101b1:	jne    0x100101b8
100101b3:	and    DWORD PTR [ebp-0x4],esi
100101b6:	jmp    0x100101c6
100101b8:	mov    eax,DWORD PTR [edi+0xc]
100101bb:	sub    eax,esi
100101bd:	push   0x1c
100101bf:	cdq    
100101c0:	pop    ecx
100101c1:	idiv   ecx
100101c3:	mov    DWORD PTR [ebp-0x4],eax
100101c6:	mov    eax,ebx
100101c8:	call   0x10004674
100101cd:	cmp    eax,DWORD PTR [ebp-0x4]
100101d0:	ja     0x100101f4
100101d2:	mov    eax,edi
100101d4:	call   0x10004674
100101d9:	mov    ecx,DWORD PTR [ebx+0x4]
100101dc:	mov    esi,eax
100101de:	mov    eax,DWORD PTR [edi+0x4]
100101e1:	imul   esi,esi,0x1c
100101e4:	add    esi,ecx
100101e6:	push   esi
100101e7:	call   0x100103a6
100101ec:	pop    ecx
100101ed:	push   DWORD PTR [edi+0x8]
100101f0:	mov    ecx,esi
100101f2:	jmp    0x10010230
100101f4:	test   esi,esi
100101f6:	je     0x1001020b
100101f8:	push   DWORD PTR [edi+0x8]
100101fb:	mov    eax,esi
100101fd:	call   0x10004ec8
10010202:	push   DWORD PTR [edi+0x4]
10010205:	call   0x100430d2
1001020a:	pop    ecx
1001020b:	mov    eax,ebx
1001020d:	call   0x10004674
10010212:	xor    ecx,ecx
10010214:	cmp    eax,ecx
10010216:	mov    DWORD PTR [edi+0x4],ecx
10010219:	mov    DWORD PTR [edi+0x8],ecx
1001021c:	mov    DWORD PTR [edi+0xc],ecx
1001021f:	je     0x1001023b
10010221:	call   0x10004971
10010226:	test   al,al
10010228:	je     0x1001023b
1001022a:	push   DWORD PTR [edi+0x4]
1001022d:	mov    ecx,DWORD PTR [ebx+0x4]
10010230:	push   DWORD PTR [ebx+0x8]
10010233:	call   0x100103e4
10010238:	mov    DWORD PTR [edi+0x8],eax
1001023b:	mov    eax,edi
1001023d:	pop    edi
1001023e:	pop    esi
1001023f:	pop    ebx
10010240:	leave  
10010241:	ret    
10010242:	push   0x8
10010244:	mov    eax,0x100606b9
10010249:	call   0x10059ca8
1001024e:	mov    esi,ecx
10010250:	mov    eax,DWORD PTR [ebp+0xc]
10010253:	and    DWORD PTR [ebp-0x4],0x0
10010257:	mov    DWORD PTR [ebp-0x14],eax
1001025a:	cmp    esi,DWORD PTR [ebp+0x8]
1001025d:	je     0x1001028d
1001025f:	mov    ecx,DWORD PTR [ebp+0xc]
10010262:	push   esi
10010263:	call   0x100100c8
10010268:	add    DWORD PTR [ebp+0xc],0x1c
1001026c:	add    esi,0x1c
1001026f:	jmp    0x1001025a
10010271:	mov    esi,DWORD PTR [ebp-0x14]
10010274:	jmp    0x1001027f
10010276:	push   esi
10010277:	call   0x10006657
1001027c:	add    esi,0x1c
1001027f:	cmp    esi,DWORD PTR [ebp+0xc]
10010282:	push   0x0
10010284:	jne    0x10010276
10010286:	push   0x0
10010288:	call   0x10047c54
1001028d:	mov    eax,DWORD PTR [ebp+0xc]
10010290:	call   0x10059d4d
10010295:	ret    
10010296:	push   0x1c
10010298:	mov    eax,0x10062e92
1001029d:	call   0x10059ca8
100102a2:	mov    edi,DWORD PTR [ebp+0xc]
100102a5:	mov    esi,ecx
100102a7:	xor    eax,eax
100102a9:	mov    DWORD PTR [ebp-0x18],edi
100102ac:	mov    DWORD PTR [ebp-0x24],eax
100102af:	mov    DWORD PTR [ebp-0x20],eax
100102b2:	mov    DWORD PTR [ebp-0x1c],eax
100102b5:	mov    DWORD PTR [ebp-0x4],eax
100102b8:	mov    BYTE PTR [ebp-0x4],0x1
100102bc:	cmp    esi,DWORD PTR [ebp+0x8]
100102bf:	je     0x10010314
100102c1:	push   edi
100102c2:	lea    ecx,[ebp-0x28]
100102c5:	call   0x100100ec
100102ca:	mov    ecx,DWORD PTR [esi+0x4]
100102cd:	mov    eax,DWORD PTR [edi+0x4]
100102d0:	mov    DWORD PTR [edi+0x4],ecx
100102d3:	mov    DWORD PTR [esi+0x4],eax
100102d6:	mov    ecx,DWORD PTR [esi+0x8]
100102d9:	mov    eax,DWORD PTR [edi+0x8]
100102dc:	mov    DWORD PTR [edi+0x8],ecx
100102df:	mov    DWORD PTR [esi+0x8],eax
100102e2:	mov    ecx,DWORD PTR [esi+0xc]
100102e5:	mov    eax,DWORD PTR [edi+0xc]
100102e8:	mov    DWORD PTR [edi+0xc],ecx
100102eb:	add    edi,0x10
100102ee:	mov    DWORD PTR [esi+0xc],eax
100102f1:	mov    DWORD PTR [ebp+0xc],edi
100102f4:	add    esi,0x10
100102f7:	jmp    0x100102bc
100102f9:	mov    esi,DWORD PTR [ebp-0x18]
100102fc:	jmp    0x10010306
100102fe:	call   0x1000499a
10010303:	add    esi,0x10
10010306:	cmp    esi,DWORD PTR [ebp+0xc]
10010309:	jne    0x100102fe
1001030b:	xor    eax,eax
1001030d:	push   eax
1001030e:	push   eax
1001030f:	call   0x10047c54
10010314:	lea    esi,[ebp-0x28]
10010317:	call   0x1000499a
1001031c:	mov    eax,edi
1001031e:	call   0x10059d4d
10010323:	ret    
10010324:	push   0x2c
10010326:	mov    eax,0x10060694
1001032b:	call   0x10059d14
10010330:	mov    esi,edx
10010332:	xor    ebx,ebx
10010334:	mov    edi,ecx
10010336:	push   ebx
10010337:	lea    ecx,[ebp-0x30]
1001033a:	mov    DWORD PTR [ebp-0x34],esi
1001033d:	mov    DWORD PTR [ebp-0x38],esi
10010340:	mov    DWORD PTR [ebp-0x18],0xf
10010347:	call   0x10001420
1001034c:	mov    DWORD PTR [ebp-0x4],ebx
1001034f:	mov    BYTE PTR [ebp-0x4],0x1
10010353:	cmp    edi,DWORD PTR [ebp+0x8]
10010356:	je     0x10010393
10010358:	lea    eax,[ebp-0x30]
1001035b:	push   eax
1001035c:	mov    ecx,esi
1001035e:	call   0x100100c8
10010363:	push   esi
10010364:	mov    ecx,edi
10010366:	call   0x10010408
1001036b:	add    esi,0x1c
1001036e:	pop    ecx
1001036f:	mov    DWORD PTR [ebp-0x34],esi
10010372:	add    edi,0x1c
10010375:	jmp    0x10010353
10010377:	mov    esi,DWORD PTR [ebp-0x38]
1001037a:	jmp    0x10010385
1001037c:	push   esi
1001037d:	call   0x10006657
10010382:	add    esi,0x1c
10010385:	cmp    esi,DWORD PTR [ebp-0x34]
10010388:	push   0x0
1001038a:	jne    0x1001037c
1001038c:	push   0x0
1001038e:	call   0x10047c54
10010393:	push   ebx
10010394:	push   0x1
10010396:	lea    ecx,[ebp-0x30]
10010399:	call   0x100012f4
1001039e:	mov    eax,esi
100103a0:	call   0x10059d70
100103a5:	ret    
100103a6:	push   ebx
100103a7:	push   esi
100103a8:	mov    ebx,eax
100103aa:	mov    eax,DWORD PTR [esp+0xc]
100103ae:	push   edi
100103af:	mov    edi,ecx
100103b1:	sub    eax,edi
100103b3:	push   0x1c
100103b5:	cdq    
100103b6:	pop    ecx
100103b7:	idiv   ecx
100103b9:	mov    esi,eax
100103bb:	imul   esi,esi,0x1c
100103be:	add    esi,ebx
100103c0:	cmp    edi,DWORD PTR [esp+0x10]
100103c4:	je     0x100103de
100103c6:	sub    ebx,edi
100103c8:	push   0xffffffff
100103ca:	push   0x0
100103cc:	push   edi
100103cd:	lea    ecx,[ebx+edi*1]
100103d0:	call   0x10001245
100103d5:	add    edi,0x1c
100103d8:	cmp    edi,DWORD PTR [esp+0x10]
100103dc:	jne    0x100103c8
100103de:	pop    edi
100103df:	mov    eax,esi
100103e1:	pop    esi
100103e2:	pop    ebx
100103e3:	ret    
100103e4:	push   ebp
100103e5:	mov    ebp,esp
100103e7:	push   ecx
100103e8:	push   edi
100103e9:	xor    eax,eax
100103eb:	lea    edi,[ebp-0x4]
100103ee:	stos   BYTE PTR es:[edi],al
100103ef:	push   DWORD PTR [ebp-0x4]
100103f2:	push   DWORD PTR [ebp+0xc]
100103f5:	push   DWORD PTR [ebp+0xc]
100103f8:	push   DWORD PTR [ebp+0x8]
100103fb:	call   0x10010242
10010400:	add    esp,0x10
10010403:	pop    edi
10010404:	leave  
10010405:	ret    0x8
10010408:	push   ebp
10010409:	mov    ebp,esp
1001040b:	sub    esp,0x14
1001040e:	mov    eax,ds:0x1007e030
10010413:	xor    eax,ebp
10010415:	mov    DWORD PTR [ebp-0x4],eax
10010418:	mov    eax,DWORD PTR [ebp+0x8]
1001041b:	push   ebx
1001041c:	push   esi
1001041d:	push   edi
1001041e:	lea    edx,[eax+0x4]
10010421:	mov    esi,edx
10010423:	lea    edi,[ebp-0x14]
10010426:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10010427:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10010428:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10010429:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1001042a:	lea    ebx,[ecx+0x4]
1001042d:	mov    edi,edx
1001042f:	mov    esi,ebx
10010431:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10010432:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10010433:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10010434:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10010435:	mov    edi,ebx
10010437:	lea    esi,[ebp-0x14]
1001043a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1001043b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1001043c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1001043d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1001043e:	mov    esi,DWORD PTR [ecx+0x14]
10010441:	mov    edx,DWORD PTR [eax+0x14]
10010444:	mov    DWORD PTR [eax+0x14],esi
10010447:	mov    esi,DWORD PTR [ecx+0x18]
1001044a:	mov    DWORD PTR [ecx+0x14],edx
1001044d:	mov    edx,DWORD PTR [eax+0x18]
10010450:	mov    DWORD PTR [eax+0x18],esi
10010453:	mov    DWORD PTR [ecx+0x18],edx
10010456:	mov    ecx,DWORD PTR [ebp-0x4]
10010459:	pop    edi
1001045a:	pop    esi
1001045b:	xor    ecx,ebp
1001045d:	pop    ebx
1001045e:	call   0x100430d7
10010463:	leave  
10010464:	ret    
10010465:	mov    edx,DWORD PTR [ecx]
10010467:	cmp    edx,DWORD PTR [eax]
10010469:	jne    0x10010487
1001046b:	mov    edx,DWORD PTR [ecx+0x4]
1001046e:	cmp    edx,DWORD PTR [eax+0x4]
10010471:	jne    0x10010487
10010473:	mov    edx,DWORD PTR [ecx+0x8]
10010476:	cmp    edx,DWORD PTR [eax+0x8]
10010479:	jne    0x10010487
1001047b:	mov    ecx,DWORD PTR [ecx+0xc]
1001047e:	cmp    ecx,DWORD PTR [eax+0xc]
10010481:	jne    0x10010487
10010483:	xor    eax,eax
10010485:	inc    eax
10010486:	ret    
10010487:	xor    eax,eax
10010489:	ret    
1001048a:	test   esi,esi
1001048c:	jne    0x10010492
1001048e:	xor    eax,eax
10010490:	jmp    0x100104b3
10010492:	push   edi
10010493:	mov    edi,DWORD PTR [esi]
10010495:	and    DWORD PTR [esi],0x0
10010498:	test   eax,eax
1001049a:	je     0x100104a6
1001049c:	mov    ecx,DWORD PTR [eax]
1001049e:	push   esi
1001049f:	push   DWORD PTR [esp+0xc]
100104a3:	push   eax
100104a4:	call   DWORD PTR [ecx]
100104a6:	test   edi,edi
100104a8:	je     0x100104b0
100104aa:	mov    eax,DWORD PTR [edi]
100104ac:	push   edi
100104ad:	call   DWORD PTR [eax+0x8]
100104b0:	mov    eax,DWORD PTR [esi]
100104b2:	pop    edi
100104b3:	ret    0x4
100104b6:	cmp    DWORD PTR [eax],0x0
100104b9:	jne    0x100104d7
100104bb:	cmp    DWORD PTR [eax+0x4],0x0
100104bf:	jne    0x100104d7
100104c1:	cmp    DWORD PTR [eax+0x8],0xc0
100104c8:	jne    0x100104d7
100104ca:	cmp    DWORD PTR [eax+0xc],0x46000000
100104d1:	jne    0x100104d7
100104d3:	xor    eax,eax
100104d5:	inc    eax
100104d6:	ret    
100104d7:	xor    eax,eax
100104d9:	ret    
100104da:	push   ebp
100104db:	mov    ebp,esp
100104dd:	push   ecx
100104de:	cmp    DWORD PTR [ebp+0x8],0x0
100104e2:	push   esi
100104e3:	push   edi
100104e4:	mov    esi,eax
100104e6:	je     0x10010564
100104e8:	test   esi,esi
100104ea:	je     0x10010564
100104ec:	test   ebx,ebx
100104ee:	jne    0x100104f7
100104f0:	mov    eax,0x80004003
100104f5:	jmp    0x10010569
100104f7:	mov    eax,DWORD PTR [ebp+0xc]
100104fa:	and    DWORD PTR [ebx],0x0
100104fd:	call   0x100104b6
10010502:	test   eax,eax
10010504:	je     0x10010556
10010506:	mov    esi,DWORD PTR [esi+0x4]
10010509:	add    esi,DWORD PTR [ebp+0x8]
1001050c:	mov    eax,DWORD PTR [esi]
1001050e:	push   esi
1001050f:	call   DWORD PTR [eax+0x4]
10010512:	mov    DWORD PTR [ebx],esi
10010514:	xor    eax,eax
10010516:	jmp    0x10010569
10010518:	mov    ecx,DWORD PTR [esi]
1001051a:	xor    eax,eax
1001051c:	test   ecx,ecx
1001051e:	sete   al
10010521:	test   eax,eax
10010523:	mov    DWORD PTR [ebp-0x4],eax
10010526:	jne    0x10010534
10010528:	mov    eax,DWORD PTR [ebp+0xc]
1001052b:	call   0x10010465
10010530:	test   eax,eax
10010532:	je     0x10010553
10010534:	cmp    edi,0x1
10010537:	je     0x10010506
10010539:	push   DWORD PTR [esi+0x4]
1001053c:	push   ebx
1001053d:	push   DWORD PTR [ebp+0xc]
10010540:	push   DWORD PTR [ebp+0x8]
10010543:	call   edi
10010545:	test   eax,eax
10010547:	je     0x10010569
10010549:	cmp    DWORD PTR [ebp-0x4],0x0
1001054d:	jne    0x10010553
1001054f:	test   eax,eax
10010551:	jl     0x10010569
10010553:	add    esi,0xc
10010556:	mov    edi,DWORD PTR [esi+0x8]
10010559:	test   edi,edi
1001055b:	jne    0x10010518
1001055d:	mov    eax,0x80004002
10010562:	jmp    0x10010569
10010564:	mov    eax,0x80070057
10010569:	pop    edi
1001056a:	pop    esi
1001056b:	leave  
1001056c:	ret    0x8
1001056f:	push   0xc
10010571:	mov    eax,0x1005faf2
10010576:	call   0x10059ca8
1001057b:	mov    edi,DWORD PTR [ebp+0x8]
1001057e:	test   edi,edi
10010580:	jne    0x10010589
10010582:	mov    eax,0x80070057
10010587:	jmp    0x100105e5
10010589:	and    DWORD PTR [ebp-0x14],0x0
1001058d:	and    DWORD PTR [ebp-0x4],0x0
10010591:	push   0xc
10010593:	call   0x100436de
10010598:	pop    ecx
10010599:	mov    esi,eax
1001059b:	jmp    0x100105a9
1001059d:	mov    eax,0x100105a3
100105a2:	ret    
100105a3:	mov    edi,DWORD PTR [ebp+0x8]
100105a6:	mov    esi,DWORD PTR [ebp-0x14]
100105a9:	test   esi,esi
100105ab:	jne    0x100105b4
100105ad:	mov    ebx,0x8007000e
100105b2:	jmp    0x100105e3
100105b4:	mov    eax,DWORD PTR [ebp+0xc]
100105b7:	mov    DWORD PTR [esi],eax
100105b9:	mov    eax,DWORD PTR [ebp+0x10]
100105bc:	mov    DWORD PTR [esi+0x4],eax
100105bf:	lea    eax,[edi+0xc]
100105c2:	push   eax
100105c3:	mov    DWORD PTR [ebp-0x18],eax
100105c6:	call   DWORD PTR ds:0x100660f0
100105cc:	mov    eax,DWORD PTR [edi+0x8]
100105cf:	mov    DWORD PTR [esi+0x8],eax
100105d2:	lea    ecx,[ebp-0x18]
100105d5:	mov    BYTE PTR [ebp-0x14],0x1
100105d9:	xor    ebx,ebx
100105db:	mov    DWORD PTR [edi+0x8],esi
100105de:	call   0x10010e45
100105e3:	mov    eax,ebx
100105e5:	call   0x10059d4d
100105ea:	ret    0xc
100105ed:	mov    eax,ecx
100105ef:	and    DWORD PTR [eax],0x0
100105f2:	and    DWORD PTR [eax+0x4],0x0
100105f6:	or     DWORD PTR [eax+0x8],0xffffffff
100105fa:	ret    
100105fb:	test   edi,edi
100105fd:	jne    0x10010605
100105ff:	mov    eax,0x80004003
10010604:	ret    
10010605:	push   esi
10010606:	xor    eax,eax
10010608:	lea    esi,[ecx+0xc]
1001060b:	cmp    DWORD PTR [esi],eax
1001060d:	jne    0x10010614
1001060f:	call   0x100108bc
10010614:	mov    ecx,DWORD PTR [esi]
10010616:	mov    DWORD PTR [edi],ecx
10010618:	cmp    DWORD PTR [esi],0x0
1001061b:	je     0x10010627
1001061d:	mov    esi,DWORD PTR [esi]
1001061f:	mov    eax,DWORD PTR [esi]
10010621:	push   esi
10010622:	call   DWORD PTR [eax+0x4]
10010625:	xor    eax,eax
10010627:	pop    esi
10010628:	ret    
10010629:	push   ebp
1001062a:	mov    ebp,esp
1001062c:	push   ecx
1001062d:	push   esi
1001062e:	push   edi
1001062f:	mov    esi,eax
10010631:	xor    edi,edi
10010633:	xor    eax,eax
10010635:	cmp    DWORD PTR [esi+0xc],edi
10010638:	je     0x1001063f
1001063a:	cmp    DWORD PTR [esi+0x14],edi
1001063d:	jne    0x10010646
1001063f:	mov    ecx,esi
10010641:	call   0x100108bc
10010646:	cmp    DWORD PTR [esi+0xc],edi
10010649:	je     0x100106b3
1001064b:	cmp    DWORD PTR [esi+0x14],edi
1001064e:	push   ebx
1001064f:	je     0x100106a0
10010651:	cmp    DWORD PTR [ebp+0xc],0x1
10010655:	jne    0x100106a0
10010657:	mov    eax,DWORD PTR [ebp+0x8]
1001065a:	push   DWORD PTR [eax]
1001065c:	call   DWORD PTR ds:0x100660c4
10010662:	mov    edi,DWORD PTR [esi+0x18]
10010665:	dec    edi
10010666:	mov    DWORD PTR [ebp-0x4],eax
10010669:	js     0x100106a0
1001066b:	mov    ebx,edi
1001066d:	imul   ebx,ebx,0xc
10010670:	mov    eax,DWORD PTR [esi+0x14]
10010673:	mov    ecx,DWORD PTR [ebp-0x4]
10010676:	cmp    ecx,DWORD PTR [ebx+eax*1+0x4]
1001067a:	jne    0x10010698
1001067c:	add    eax,ebx
1001067e:	mov    ecx,DWORD PTR [eax]
10010680:	mov    eax,DWORD PTR [eax+0x4]
10010683:	add    eax,eax
10010685:	push   eax
10010686:	mov    eax,DWORD PTR [ebp+0x8]
10010689:	push   DWORD PTR [eax]
1001068b:	push   ecx
1001068c:	call   0x100439bb
10010691:	add    esp,0xc
10010694:	test   eax,eax
10010696:	je     0x100106b9
10010698:	dec    edi
10010699:	sub    ebx,0xc
1001069c:	test   edi,edi
1001069e:	jge    0x10010670
100106a0:	push   DWORD PTR [ebp+0x10]
100106a3:	mov    esi,DWORD PTR [esi+0xc]
100106a6:	push   DWORD PTR [ebp+0xc]
100106a9:	mov    eax,DWORD PTR [esi]
100106ab:	push   DWORD PTR [ebp+0x8]
100106ae:	push   esi
100106af:	call   DWORD PTR [eax+0x28]
100106b2:	pop    ebx
100106b3:	pop    edi
100106b4:	pop    esi
100106b5:	leave  
100106b6:	ret    0xc
100106b9:	mov    eax,DWORD PTR [esi+0x14]
100106bc:	imul   edi,edi,0xc
100106bf:	mov    eax,DWORD PTR [edi+eax*1+0x8]
100106c3:	mov    ecx,DWORD PTR [ebp+0x10]
100106c6:	mov    DWORD PTR [ecx],eax
100106c8:	xor    eax,eax
100106ca:	jmp    0x100106b2
100106cc:	push   ebp
100106cd:	mov    ebp,esp
100106cf:	push   esi
100106d0:	mov    esi,eax
100106d2:	xor    eax,eax
100106d4:	cmp    DWORD PTR [esi+0xc],eax
100106d7:	je     0x100106de
100106d9:	cmp    DWORD PTR [esi+0x14],eax
100106dc:	jne    0x100106e5
100106de:	mov    ecx,esi
100106e0:	call   0x100108bc
100106e5:	cmp    DWORD PTR [esi+0xc],0x0
100106e9:	je     0x10010709
100106eb:	push   DWORD PTR [ebp+0x20]
100106ee:	mov    esi,DWORD PTR [esi+0xc]
100106f1:	push   DWORD PTR [ebp+0x1c]
100106f4:	mov    eax,DWORD PTR [esi]
100106f6:	push   DWORD PTR [ebp+0x18]
100106f9:	push   DWORD PTR [ebp+0x14]
100106fc:	push   DWORD PTR [ebp+0x10]
100106ff:	push   DWORD PTR [ebp+0xc]
10010702:	push   DWORD PTR [ebp+0x8]
10010705:	push   esi
10010706:	call   DWORD PTR [eax+0x2c]
10010709:	pop    esi
1001070a:	pop    ebp
1001070b:	ret    0x1c
1001070e:	push   0x14
10010710:	mov    eax,0x1005fad7
10010715:	call   0x10059ca8
1001071a:	mov    edi,DWORD PTR [ebp+0x8]
1001071d:	mov    ebx,DWORD PTR [ebp+0xc]
10010720:	mov    eax,DWORD PTR [ebx]
10010722:	lea    ecx,[ebp-0x20]
10010725:	push   ecx
10010726:	push   ebx
10010727:	call   DWORD PTR [eax+0xc]
1001072a:	xor    ecx,ecx
1001072c:	cmp    eax,ecx
1001072e:	jl     0x1001086e
10010734:	mov    eax,DWORD PTR [ebp-0x20]
10010737:	movzx  eax,WORD PTR [eax+0x2c]
1001073b:	mov    esi,eax
1001073d:	cmp    esi,ecx
1001073f:	mov    DWORD PTR [ebp-0x18],ecx
10010742:	mov    DWORD PTR [edi+0x18],eax
10010745:	mov    DWORD PTR [edi+0x14],ecx
10010748:	je     0x100107c9
1001074a:	push   0xc
1001074c:	pop    edx
1001074d:	mul    edx
1001074f:	mov    DWORD PTR [ebp-0x4],ecx
10010752:	seto   cl
10010755:	neg    ecx
10010757:	or     ecx,eax
10010759:	xor    eax,eax
1001075b:	add    ecx,0x4
1001075e:	setb   al
10010761:	neg    eax
10010763:	or     eax,ecx
10010765:	push   eax
10010766:	call   0x100439b6
1001076b:	pop    ecx
1001076c:	mov    DWORD PTR [ebp-0x14],eax
1001076f:	test   eax,eax
10010771:	mov    BYTE PTR [ebp-0x4],0x1
10010775:	je     0x10010797
10010777:	push   0x10001000
1001077c:	push   0x100105ed
10010781:	push   esi
10010782:	mov    DWORD PTR [eax],esi
10010784:	add    eax,0x4
10010787:	push   0xc
10010789:	push   eax
1001078a:	mov    DWORD PTR [ebp-0x1c],eax
1001078d:	call   0x10046098
10010792:	mov    eax,DWORD PTR [ebp-0x1c]
10010795:	jmp    0x10010799
10010797:	xor    eax,eax
10010799:	or     DWORD PTR [ebp-0x4],0xffffffff
1001079d:	mov    DWORD PTR [ebp-0x18],eax
100107a0:	jmp    0x100107ae
100107a2:	mov    eax,0x100107a8
100107a7:	ret    
100107a8:	mov    edi,DWORD PTR [ebp+0x8]
100107ab:	mov    ebx,DWORD PTR [ebp+0xc]
100107ae:	cmp    DWORD PTR [ebp-0x18],0x0
100107b2:	jne    0x100107c7
100107b4:	push   DWORD PTR [ebp-0x20]
100107b7:	mov    eax,DWORD PTR [ebx]
100107b9:	push   ebx
100107ba:	call   DWORD PTR [eax+0x4c]
100107bd:	mov    eax,0x8007000e
100107c2:	jmp    0x10010870
100107c7:	xor    ecx,ecx
100107c9:	cmp    DWORD PTR [edi+0x18],ecx
100107cc:	mov    DWORD PTR [ebp-0x14],ecx
100107cf:	jle    0x1001085f
100107d5:	mov    esi,DWORD PTR [ebp-0x18]
100107d8:	mov    eax,DWORD PTR [ebx]
100107da:	lea    ecx,[ebp-0x1c]
100107dd:	push   ecx
100107de:	push   DWORD PTR [ebp-0x14]
100107e1:	push   ebx
100107e2:	call   DWORD PTR [eax+0x14]
100107e5:	test   eax,eax
100107e7:	jl     0x1001084d
100107e9:	xor    eax,eax
100107eb:	mov    DWORD PTR [ebp+0x8],eax
100107ee:	push   eax
100107ef:	push   eax
100107f0:	push   eax
100107f1:	mov    DWORD PTR [ebp-0x4],0x3
100107f8:	mov    ecx,DWORD PTR [ebx]
100107fa:	lea    eax,[ebp+0x8]
100107fd:	push   eax
100107fe:	mov    eax,DWORD PTR [ebp-0x1c]
10010801:	push   DWORD PTR [eax]
10010803:	push   ebx
10010804:	call   DWORD PTR [ecx+0x30]
10010807:	test   eax,eax
10010809:	jl     0x10010837
1001080b:	mov    ebx,DWORD PTR [ebp+0x8]
1001080e:	mov    eax,DWORD PTR [esi]
10010810:	and    DWORD PTR [ebp+0x8],0x0
10010814:	cmp    eax,ebx
10010816:	je     0x10010821
10010818:	push   eax
10010819:	call   DWORD PTR ds:0x100662b4
1001081f:	mov    DWORD PTR [esi],ebx
10010821:	push   DWORD PTR [esi]
10010823:	call   DWORD PTR ds:0x100662ac
10010829:	mov    ebx,DWORD PTR [ebp+0xc]
1001082c:	mov    DWORD PTR [esi+0x4],eax
1001082f:	mov    eax,DWORD PTR [ebp-0x1c]
10010832:	mov    eax,DWORD PTR [eax]
10010834:	mov    DWORD PTR [esi+0x8],eax
10010837:	push   DWORD PTR [ebp-0x1c]
1001083a:	mov    eax,DWORD PTR [ebx]
1001083c:	push   ebx
1001083d:	call   DWORD PTR [eax+0x50]
10010840:	or     DWORD PTR [ebp-0x4],0xffffffff
10010844:	push   DWORD PTR [ebp+0x8]
10010847:	call   DWORD PTR ds:0x100662b4
1001084d:	inc    DWORD PTR [ebp-0x14]
10010850:	mov    eax,DWORD PTR [ebp-0x14]
10010853:	add    esi,0xc
10010856:	cmp    eax,DWORD PTR [edi+0x18]
10010859:	jl     0x100107d8
1001085f:	mov    eax,DWORD PTR [ebp-0x18]
10010862:	push   DWORD PTR [ebp-0x20]
10010865:	mov    DWORD PTR [edi+0x14],eax
10010868:	mov    eax,DWORD PTR [ebx]
1001086a:	push   ebx
1001086b:	call   DWORD PTR [eax+0x4c]
1001086e:	xor    eax,eax
10010870:	call   0x10059d4d
10010875:	ret    0x8
10010878:	push   esi
10010879:	mov    esi,DWORD PTR [esp+0x8]
1001087d:	test   esi,esi
1001087f:	je     0x100108b8
10010881:	mov    eax,DWORD PTR [esi+0xc]
10010884:	test   eax,eax
10010886:	je     0x1001088e
10010888:	mov    ecx,DWORD PTR [eax]
1001088a:	push   eax
1001088b:	call   DWORD PTR [ecx+0x8]
1001088e:	mov    eax,DWORD PTR [esi+0x14]
10010891:	and    DWORD PTR [esi+0xc],0x0
10010895:	test   eax,eax
10010897:	je     0x100108b4
10010899:	push   edi
1001089a:	push   0x10001000
1001089f:	lea    edi,[eax-0x4]
100108a2:	push   DWORD PTR [edi]
100108a4:	push   0xc
100108a6:	push   eax
100108a7:	call   0x10043339
100108ac:	push   edi
100108ad:	call   0x10043600
100108b2:	pop    ecx
100108b3:	pop    edi
100108b4:	and    DWORD PTR [esi+0x14],0x0
100108b8:	pop    esi
100108b9:	ret    0x4
100108bc:	push   ebp
100108bd:	mov    ebp,esp
100108bf:	and    esp,0xfffffff8
100108c2:	push   0xffffffff
100108c4:	push   0x100645f9
100108c9:	mov    eax,fs:0x0
100108cf:	push   eax
100108d0:	sub    esp,0x20
100108d3:	push   ebx
100108d4:	push   esi
100108d5:	push   edi
100108d6:	mov    eax,ds:0x1007e030
100108db:	xor    eax,esp
100108dd:	push   eax
100108de:	lea    eax,[esp+0x30]
100108e2:	mov    fs:0x0,eax
100108e8:	mov    esi,ecx
100108ea:	xor    ebx,ebx
100108ec:	cmp    DWORD PTR [esi+0xc],ebx
100108ef:	je     0x1001090b
100108f1:	cmp    DWORD PTR [esi+0x14],ebx
100108f4:	je     0x1001090b
100108f6:	xor    eax,eax
100108f8:	mov    ecx,DWORD PTR [esp+0x30]
100108fc:	mov    DWORD PTR fs:0x0,ecx
10010903:	pop    ecx
10010904:	pop    edi
10010905:	pop    esi
10010906:	pop    ebx
10010907:	mov    esp,ebp
10010909:	pop    ebp
1001090a:	ret    
1001090b:	mov    eax,ds:0x10080c04
10010910:	add    eax,0x10
10010913:	mov    DWORD PTR [esp+0x24],eax
10010917:	push   eax
10010918:	mov    DWORD PTR [esp+0x3c],ebx
1001091c:	call   DWORD PTR ds:0x100660f0
10010922:	cmp    DWORD PTR [esi+0xc],ebx
10010925:	mov    BYTE PTR [esp+0x28],0x1
1001092a:	jne    0x10010a16
10010930:	call   0x100066d5
10010935:	mov    edi,eax
10010937:	cmp    edi,ebx
10010939:	jne    0x1001094d
1001093b:	mov    esi,0x80004005
10010940:	lea    ecx,[esp+0x24]
10010944:	call   0x10010e45
10010949:	mov    eax,esi
1001094b:	jmp    0x100108f8
1001094d:	mov    DWORD PTR [esp+0x18],ebx
10010951:	lea    ecx,[esp+0x18]
10010955:	push   ecx
10010956:	mov    BYTE PTR [esp+0x3c],0x1
1001095b:	push   DWORD PTR [esi]
1001095d:	mov    eax,DWORD PTR [edi]
1001095f:	push   edi
10010960:	call   DWORD PTR [eax+0x18]
10010963:	cmp    eax,ebx
10010965:	mov    DWORD PTR [esp+0x20],eax
10010969:	jl     0x100109fc
1001096f:	mov    eax,DWORD PTR [esp+0x18]
10010973:	cmp    eax,ebx
10010975:	mov    DWORD PTR [esp+0x14],eax
10010979:	je     0x10010985
1001097b:	mov    ecx,DWORD PTR [eax]
1001097d:	push   eax
1001097e:	call   DWORD PTR [ecx+0x4]
10010981:	mov    eax,DWORD PTR [esp+0x18]
10010985:	mov    DWORD PTR [esp+0x1c],ebx
10010989:	lea    edx,[esp+0x1c]
1001098d:	push   edx
1001098e:	push   0x1006dd54
10010993:	mov    BYTE PTR [esp+0x40],0x3
10010998:	mov    ecx,DWORD PTR [eax]
1001099a:	push   eax
1001099b:	call   DWORD PTR [ecx]
1001099d:	test   eax,eax
1001099f:	jl     0x100109af
100109a1:	lea    eax,[esp+0x14]
100109a5:	push   eax
100109a6:	lea    eax,[esp+0x20]
100109aa:	call   0x10010e5c
100109af:	mov    eax,DWORD PTR [esp+0x14]
100109b3:	mov    DWORD PTR [esi+0xc],eax
100109b6:	mov    eax,ds:0x10080c04
100109bb:	mov    ecx,eax
100109bd:	add    eax,0x4
100109c0:	neg    ecx
100109c2:	push   esi
100109c3:	sbb    ecx,ecx
100109c5:	push   0x10010878
100109ca:	and    ecx,eax
100109cc:	push   ecx
100109cd:	mov    DWORD PTR [esp+0x20],ebx
100109d1:	call   0x1001056f
100109d6:	mov    BYTE PTR [esp+0x38],0x2
100109db:	mov    eax,DWORD PTR [esp+0x1c]
100109df:	cmp    eax,ebx
100109e1:	je     0x100109e9
100109e3:	mov    ecx,DWORD PTR [eax]
100109e5:	push   eax
100109e6:	call   DWORD PTR [ecx+0x8]
100109e9:	mov    BYTE PTR [esp+0x38],0x1
100109ee:	mov    eax,DWORD PTR [esp+0x14]
100109f2:	cmp    eax,ebx
100109f4:	je     0x100109fc
100109f6:	mov    ecx,DWORD PTR [eax]
100109f8:	push   eax
100109f9:	call   DWORD PTR [ecx+0x8]
100109fc:	mov    eax,DWORD PTR [edi]
100109fe:	push   edi
100109ff:	call   DWORD PTR [eax+0x8]
10010a02:	mov    BYTE PTR [esp+0x38],bl
10010a06:	mov    eax,DWORD PTR [esp+0x18]
10010a0a:	cmp    eax,ebx
10010a0c:	je     0x10010a1a
10010a0e:	mov    ecx,DWORD PTR [eax]
10010a10:	push   eax
10010a11:	call   DWORD PTR [ecx+0x8]
10010a14:	jmp    0x10010a1a
10010a16:	mov    DWORD PTR [esp+0x20],ebx
10010a1a:	mov    eax,DWORD PTR [esi+0xc]
10010a1d:	cmp    eax,ebx
10010a1f:	je     0x10010a31
10010a21:	cmp    DWORD PTR [esi+0x14],ebx
10010a24:	jne    0x10010a31
10010a26:	push   eax
10010a27:	push   esi
10010a28:	call   0x1001070e
10010a2d:	mov    DWORD PTR [esp+0x20],eax
10010a31:	mov    esi,DWORD PTR [esp+0x20]
10010a35:	jmp    0x10010940
10010a3a:	push   ebp
10010a3b:	mov    ebp,esp
10010a3d:	push   ecx
10010a3e:	push   ebx
10010a3f:	mov    ebx,eax
10010a41:	push   edi
10010a42:	lea    eax,[ebp-0x4]
10010a45:	mov    edi,ecx
10010a47:	push   eax
10010a48:	mov    DWORD PTR [edi+0x8],ebx
10010a4b:	call   0x10010ee0
10010a50:	test   eax,eax
10010a52:	jl     0x10010a82
10010a54:	push   esi
10010a55:	mov    esi,DWORD PTR [ebp-0x4]
10010a58:	test   esi,esi
10010a5a:	mov    DWORD PTR [ebp-0x4],esi
10010a5d:	je     0x10010a65
10010a5f:	mov    eax,DWORD PTR [esi]
10010a61:	push   esi
10010a62:	call   DWORD PTR [eax+0x4]
10010a65:	add    edi,0xc
10010a68:	push   edi
10010a69:	lea    eax,[ebp-0x4]
10010a6c:	call   0x10010f5c
10010a71:	test   esi,esi
10010a73:	je     0x10010a7b
10010a75:	mov    eax,DWORD PTR [esi]
10010a77:	push   esi
10010a78:	call   DWORD PTR [eax+0x8]
10010a7b:	add    ebx,0x18
10010a7e:	mov    DWORD PTR [esi+0x8],ebx
10010a81:	pop    esi
10010a82:	pop    edi
10010a83:	pop    ebx
10010a84:	leave  
10010a85:	ret    
10010a86:	push   0x1c
10010a88:	mov    eax,0x10060671
10010a8d:	call   0x10059c75
10010a92:	mov    eax,DWORD PTR [ebp+0x8]
10010a95:	mov    eax,DWORD PTR [eax+0x8]
10010a98:	test   eax,eax
10010a9a:	jne    0x10010aa3
10010a9c:	mov    eax,0x80004005
10010aa1:	jmp    0x10010aed
10010aa3:	cmp    DWORD PTR [eax],0x0
10010aa6:	je     0x10010a9c
10010aa8:	mov    eax,DWORD PTR [eax]
10010aaa:	lea    ecx,[ebp-0x28]
10010aad:	push   ecx
10010aae:	call   0x1000795e
10010ab3:	and    DWORD PTR [ebp-0x4],0x0
10010ab7:	cmp    DWORD PTR [eax+0x18],0x10
10010abb:	jb     0x10010ac2
10010abd:	mov    eax,DWORD PTR [eax+0x4]
10010ac0:	jmp    0x10010ac5
10010ac2:	add    eax,0x4
10010ac5:	push   eax
10010ac6:	lea    edi,[ebp+0x8]
10010ac9:	call   0x1000244f
10010ace:	push   0x0
10010ad0:	push   0x1
10010ad2:	lea    ecx,[ebp-0x28]
10010ad5:	call   0x100012f4
10010ada:	mov    eax,edi
10010adc:	call   0x1000d9cb
10010ae1:	mov    ecx,DWORD PTR [ebp+0xc]
10010ae4:	mov    DWORD PTR [ecx],eax
10010ae6:	call   0x100025aa
10010aeb:	xor    eax,eax
10010aed:	call   0x10059d4d
10010af2:	ret    0x8
10010af5:	push   0x1c
10010af7:	mov    eax,0x10061015
10010afc:	call   0x10059c75
10010b01:	mov    esi,DWORD PTR [ebp+0x8]
10010b04:	mov    eax,DWORD PTR [esi+0x8]
10010b07:	test   eax,eax
10010b09:	jne    0x10010b12
10010b0b:	mov    eax,0x80004005
10010b10:	jmp    0x10010b5d
10010b12:	cmp    DWORD PTR [eax],0x0
10010b15:	je     0x10010b0b
10010b17:	mov    ecx,DWORD PTR [ebp+0xc]
10010b1a:	push   0x1
10010b1c:	lea    edi,[ebp+0x8]
10010b1f:	call   0x1000d94e
10010b24:	and    DWORD PTR [ebp-0x4],0x0
10010b28:	mov    eax,edi
10010b2a:	call   0x1000d9ae
10010b2f:	push   eax
10010b30:	lea    ecx,[ebp-0x28]
10010b33:	call   0x100011d1
10010b38:	lea    eax,[ebp-0x28]
10010b3b:	mov    BYTE PTR [ebp-0x4],0x1
10010b3f:	push   eax
10010b40:	mov    eax,DWORD PTR [esi+0x8]
10010b43:	mov    esi,DWORD PTR [eax]
10010b45:	call   0x10007979
10010b4a:	push   0x0
10010b4c:	push   0x1
10010b4e:	lea    ecx,[ebp-0x28]
10010b51:	call   0x100012f4
10010b56:	call   0x100025aa
10010b5b:	xor    eax,eax
10010b5d:	call   0x10059d4d
10010b62:	ret    0x8
10010b65:	push   0x1c
10010b67:	mov    eax,0x10060671
10010b6c:	call   0x10059c75
10010b71:	mov    eax,DWORD PTR [ebp+0x8]
10010b74:	mov    eax,DWORD PTR [eax+0x8]
10010b77:	test   eax,eax
10010b79:	jne    0x10010b82
10010b7b:	mov    eax,0x80004005
10010b80:	jmp    0x10010bce
10010b82:	cmp    DWORD PTR [eax+0x4],0x0
10010b86:	je     0x10010b7b
10010b88:	mov    eax,DWORD PTR [eax+0x4]
10010b8b:	lea    ecx,[ebp-0x28]
10010b8e:	push   ecx
10010b8f:	call   0x1000795e
10010b94:	and    DWORD PTR [ebp-0x4],0x0
10010b98:	cmp    DWORD PTR [eax+0x18],0x10
10010b9c:	jb     0x10010ba3
10010b9e:	mov    eax,DWORD PTR [eax+0x4]
10010ba1:	jmp    0x10010ba6
10010ba3:	add    eax,0x4
10010ba6:	push   eax
10010ba7:	lea    edi,[ebp+0x8]
10010baa:	call   0x1000244f
10010baf:	push   0x0
10010bb1:	push   0x1
10010bb3:	lea    ecx,[ebp-0x28]
10010bb6:	call   0x100012f4
10010bbb:	mov    eax,edi
10010bbd:	call   0x1000d9cb
10010bc2:	mov    ecx,DWORD PTR [ebp+0xc]
10010bc5:	mov    DWORD PTR [ecx],eax
10010bc7:	call   0x100025aa
10010bcc:	xor    eax,eax
10010bce:	call   0x10059d4d
10010bd3:	ret    0x8
10010bd6:	push   0x1c
10010bd8:	mov    eax,0x10061015
10010bdd:	call   0x10059c75
10010be2:	mov    esi,DWORD PTR [ebp+0x8]
10010be5:	mov    eax,DWORD PTR [esi+0x8]
10010be8:	test   eax,eax
10010bea:	jne    0x10010bf3
10010bec:	mov    eax,0x80004005
10010bf1:	jmp    0x10010c40
10010bf3:	cmp    DWORD PTR [eax+0x4],0x0
10010bf7:	je     0x10010bec
10010bf9:	mov    ecx,DWORD PTR [ebp+0xc]
10010bfc:	push   0x1
10010bfe:	lea    edi,[ebp+0x8]
10010c01:	call   0x1000d94e
10010c06:	and    DWORD PTR [ebp-0x4],0x0
10010c0a:	mov    eax,edi
10010c0c:	call   0x1000d9ae
10010c11:	push   eax
10010c12:	lea    ecx,[ebp-0x28]
10010c15:	call   0x100011d1
10010c1a:	lea    eax,[ebp-0x28]
10010c1d:	mov    BYTE PTR [ebp-0x4],0x1
10010c21:	push   eax
10010c22:	mov    eax,DWORD PTR [esi+0x8]
10010c25:	mov    esi,DWORD PTR [eax+0x4]
10010c28:	call   0x10007979
10010c2d:	push   0x0
10010c2f:	push   0x1
10010c31:	lea    ecx,[ebp-0x28]
10010c34:	call   0x100012f4
10010c39:	call   0x100025aa
10010c3e:	xor    eax,eax
10010c40:	call   0x10059d4d
10010c45:	ret    0x8
10010c48:	push   0x1c
10010c4a:	mov    eax,0x10060671
10010c4f:	call   0x10059c75
10010c54:	mov    eax,DWORD PTR [ebp+0x8]
10010c57:	mov    eax,DWORD PTR [eax+0x8]
10010c5a:	test   eax,eax
10010c5c:	jne    0x10010c65
10010c5e:	mov    eax,0x80004005
10010c63:	jmp    0x10010cb1
10010c65:	cmp    DWORD PTR [eax+0x8],0x0
10010c69:	je     0x10010c5e
10010c6b:	mov    eax,DWORD PTR [eax+0x8]
10010c6e:	lea    ecx,[ebp-0x28]
10010c71:	push   ecx
10010c72:	call   0x1000795e
10010c77:	and    DWORD PTR [ebp-0x4],0x0
10010c7b:	cmp    DWORD PTR [eax+0x18],0x10
10010c7f:	jb     0x10010c86
10010c81:	mov    eax,DWORD PTR [eax+0x4]
10010c84:	jmp    0x10010c89
10010c86:	add    eax,0x4
10010c89:	push   eax
10010c8a:	lea    edi,[ebp+0x8]
10010c8d:	call   0x1000244f
10010c92:	push   0x0
10010c94:	push   0x1
10010c96:	lea    ecx,[ebp-0x28]
10010c99:	call   0x100012f4
10010c9e:	mov    eax,edi
10010ca0:	call   0x1000d9cb
10010ca5:	mov    ecx,DWORD PTR [ebp+0xc]
10010ca8:	mov    DWORD PTR [ecx],eax
10010caa:	call   0x100025aa
10010caf:	xor    eax,eax
10010cb1:	call   0x10059d4d
10010cb6:	ret    0x8
10010cb9:	push   0x1c
10010cbb:	mov    eax,0x10061015
10010cc0:	call   0x10059c75
10010cc5:	mov    esi,DWORD PTR [ebp+0x8]
10010cc8:	mov    eax,DWORD PTR [esi+0x8]
10010ccb:	test   eax,eax
10010ccd:	jne    0x10010cd6
10010ccf:	mov    eax,0x80004005
10010cd4:	jmp    0x10010d23
10010cd6:	cmp    DWORD PTR [eax+0x8],0x0
10010cda:	je     0x10010ccf
10010cdc:	mov    ecx,DWORD PTR [ebp+0xc]
10010cdf:	push   0x1
10010ce1:	lea    edi,[ebp+0x8]
10010ce4:	call   0x1000d94e
10010ce9:	and    DWORD PTR [ebp-0x4],0x0
10010ced:	mov    eax,edi
10010cef:	call   0x1000d9ae
10010cf4:	push   eax
10010cf5:	lea    ecx,[ebp-0x28]
10010cf8:	call   0x100011d1
10010cfd:	lea    eax,[ebp-0x28]
10010d00:	mov    BYTE PTR [ebp-0x4],0x1
10010d04:	push   eax
10010d05:	mov    eax,DWORD PTR [esi+0x8]
10010d08:	mov    esi,DWORD PTR [eax+0x8]
10010d0b:	call   0x10007979
10010d10:	push   0x0
10010d12:	push   0x1
10010d14:	lea    ecx,[ebp-0x28]
10010d17:	call   0x100012f4
10010d1c:	call   0x100025aa
10010d21:	xor    eax,eax
10010d23:	call   0x10059d4d
10010d28:	ret    0x8
10010d2b:	mov    eax,DWORD PTR [esp+0x4]
10010d2f:	push   esi
10010d30:	mov    esi,DWORD PTR [eax+0xc]
10010d33:	test   esi,esi
10010d35:	push   edi
10010d36:	je     0x10010d3e
10010d38:	mov    eax,DWORD PTR [esi]
10010d3a:	push   esi
10010d3b:	call   DWORD PTR [eax+0x4]
10010d3e:	mov    eax,DWORD PTR [esp+0x10]
10010d42:	test   eax,eax
10010d44:	jne    0x10010d4d
10010d46:	mov    edi,0x80004003
10010d4b:	jmp    0x10010d5b
10010d4d:	test   esi,esi
10010d4f:	mov    DWORD PTR [eax],esi
10010d51:	je     0x10010d59
10010d53:	mov    eax,DWORD PTR [esi]
10010d55:	push   esi
10010d56:	call   DWORD PTR [eax+0x4]
10010d59:	xor    edi,edi
10010d5b:	test   esi,esi
10010d5d:	je     0x10010d65
10010d5f:	mov    eax,DWORD PTR [esi]
10010d61:	push   esi
10010d62:	call   DWORD PTR [eax+0x8]
10010d65:	mov    eax,edi
10010d67:	pop    edi
10010d68:	pop    esi
10010d69:	ret    0x8
10010d6c:	mov    eax,DWORD PTR [esp+0x8]
10010d70:	test   eax,eax
10010d72:	jne    0x10010d7b
10010d74:	mov    eax,0x80004003
10010d79:	jmp    0x10010d83
10010d7b:	mov    DWORD PTR [eax],0x1
10010d81:	xor    eax,eax
10010d83:	ret    0x8
10010d86:	push   edi
10010d87:	mov    edi,DWORD PTR [esp+0x14]
10010d8b:	mov    ecx,0x1007f7f8
10010d90:	call   0x100105fb
10010d95:	pop    edi
10010d96:	ret    0x10
10010d99:	push   DWORD PTR [esp+0x18]
10010d9d:	mov    eax,0x1007f7f8
10010da2:	push   DWORD PTR [esp+0x14]
10010da6:	push   DWORD PTR [esp+0x14]
10010daa:	call   0x10010629
10010daf:	ret    0x18
10010db2:	push   ebp
10010db3:	mov    ebp,esp
10010db5:	push   DWORD PTR [ebp+0x28]
10010db8:	mov    eax,0x1007f7f8
10010dbd:	push   DWORD PTR [ebp+0x24]
10010dc0:	push   DWORD PTR [ebp+0x20]
10010dc3:	push   DWORD PTR [ebp+0x1c]
10010dc6:	push   DWORD PTR [ebp+0x18]
10010dc9:	push   DWORD PTR [ebp+0xc]
10010dcc:	push   DWORD PTR [ebp+0x8]
10010dcf:	call   0x100106cc
10010dd4:	pop    ebp
10010dd5:	ret    0x24
10010dd8:	mov    DWORD PTR [ecx],0x1006dd10
10010dde:	mov    DWORD PTR [ecx+0x4],0xc0000001
10010de5:	mov    ecx,DWORD PTR ds:0x10080c04
10010deb:	mov    eax,DWORD PTR [ecx]
10010ded:	jmp    DWORD PTR [eax+0x8]
10010df0:	mov    ecx,DWORD PTR [esp+0x4]
10010df4:	dec    DWORD PTR [ecx+0x4]
10010df7:	push   esi
10010df8:	mov    esi,DWORD PTR [ecx+0x4]
10010dfb:	jne    0x10010e08
10010dfd:	test   ecx,ecx
10010dff:	je     0x10010e08
10010e01:	mov    eax,DWORD PTR [ecx]
10010e03:	push   0x1
10010e05:	call   DWORD PTR [eax+0x30]
10010e08:	mov    eax,esi
10010e0a:	pop    esi
10010e0b:	ret    0x4
10010e0e:	push   ebx
10010e0f:	push   DWORD PTR [esp+0xc]
10010e13:	mov    ebx,DWORD PTR [esp+0x14]
10010e17:	push   DWORD PTR [esp+0xc]
10010e1b:	mov    eax,0x1006dcec
10010e20:	call   0x100104da
10010e25:	pop    ebx
10010e26:	ret    0xc
10010e29:	push   esi
10010e2a:	mov    esi,ecx
10010e2c:	call   0x10010dd8
10010e31:	test   BYTE PTR [esp+0x8],0x1
10010e36:	je     0x10010e3f
10010e38:	push   esi
10010e39:	call   0x100430d2
10010e3e:	pop    ecx
10010e3f:	mov    eax,esi
10010e41:	pop    esi
10010e42:	ret    0x4
10010e45:	push   esi
10010e46:	mov    esi,ecx
10010e48:	cmp    BYTE PTR [esi+0x4],0x0
10010e4c:	je     0x10010e5a
10010e4e:	push   DWORD PTR [esi]
10010e50:	call   DWORD PTR ds:0x100660ec
10010e56:	mov    BYTE PTR [esi+0x4],0x0
10010e5a:	pop    esi
10010e5b:	ret    
10010e5c:	push   ebp
10010e5d:	mov    ebp,esp
10010e5f:	push   ecx
10010e60:	push   ecx
10010e61:	mov    ecx,DWORD PTR [ebp+0x8]
10010e64:	push   ebx
10010e65:	push   esi
10010e66:	mov    esi,eax
10010e68:	mov    eax,DWORD PTR [ecx]
10010e6a:	test   eax,eax
10010e6c:	mov    ebx,DWORD PTR [esi]
10010e6e:	jne    0x10010e8a
10010e70:	test   ebx,ebx
10010e72:	je     0x10010ed8
10010e74:	xor    al,al
10010e76:	test   al,al
10010e78:	jne    0x10010ed8
10010e7a:	mov    eax,DWORD PTR [esi]
10010e7c:	push   0x1006dd64
10010e81:	mov    esi,ecx
10010e83:	call   0x1001048a
10010e88:	jmp    0x10010eda
10010e8a:	test   ebx,ebx
10010e8c:	je     0x10010e74
10010e8e:	and    DWORD PTR [ebp-0x4],0x0
10010e92:	and    DWORD PTR [ebp-0x8],0x0
10010e96:	mov    ecx,DWORD PTR [eax]
10010e98:	push   edi
10010e99:	lea    edx,[ebp-0x4]
10010e9c:	push   edx
10010e9d:	mov    edi,0x1006dd44
10010ea2:	push   edi
10010ea3:	push   eax
10010ea4:	call   DWORD PTR [ecx]
10010ea6:	mov    eax,DWORD PTR [ebx]
10010ea8:	lea    ecx,[ebp-0x8]
10010eab:	push   ecx
10010eac:	push   edi
10010ead:	push   ebx
10010eae:	call   DWORD PTR [eax]
10010eb0:	mov    eax,DWORD PTR [ebp-0x8]
10010eb3:	cmp    DWORD PTR [ebp-0x4],eax
10010eb6:	pop    edi
10010eb7:	sete   bl
10010eba:	test   eax,eax
10010ebc:	je     0x10010ec4
10010ebe:	mov    ecx,DWORD PTR [eax]
10010ec0:	push   eax
10010ec1:	call   DWORD PTR [ecx+0x8]
10010ec4:	mov    eax,DWORD PTR [ebp-0x4]
10010ec7:	test   eax,eax
10010ec9:	je     0x10010ed1
10010ecb:	mov    ecx,DWORD PTR [eax]
10010ecd:	push   eax
10010ece:	call   DWORD PTR [ecx+0x8]
10010ed1:	mov    ecx,DWORD PTR [ebp+0x8]
10010ed4:	mov    al,bl
10010ed6:	jmp    0x10010e76
10010ed8:	mov    eax,DWORD PTR [ecx]
10010eda:	pop    esi
10010edb:	pop    ebx
10010edc:	leave  
10010edd:	ret    0x4
10010ee0:	push   0xc
10010ee2:	mov    eax,0x1005fed8
10010ee7:	call   0x10059ca8
10010eec:	mov    ebx,DWORD PTR [ebp+0x8]
10010eef:	xor    edi,edi
10010ef1:	cmp    ebx,edi
10010ef3:	jne    0x10010efc
10010ef5:	mov    eax,0x80004003
10010efa:	jmp    0x10010f54
10010efc:	push   0xc
10010efe:	mov    DWORD PTR [ebx],edi
10010f00:	mov    DWORD PTR [ebp-0x14],0x8007000e
10010f07:	mov    DWORD PTR [ebp-0x4],edi
10010f0a:	call   0x100436de
10010f0f:	mov    esi,eax
10010f11:	cmp    esi,edi
10010f13:	pop    ecx
10010f14:	je     0x10010f31
10010f16:	mov    DWORD PTR [esi+0x4],edi
10010f19:	mov    DWORD PTR [esi+0x8],edi
10010f1c:	mov    DWORD PTR [esi],0x1006dd10
10010f22:	mov    ecx,DWORD PTR ds:0x10080c04
10010f28:	mov    eax,DWORD PTR [ecx]
10010f2a:	call   DWORD PTR [eax+0x4]
10010f2d:	mov    eax,esi
10010f2f:	jmp    0x10010f42
10010f31:	xor    eax,eax
10010f33:	jmp    0x10010f42
10010f35:	mov    eax,0x10010f3b
10010f3a:	ret    
10010f3b:	mov    ebx,DWORD PTR [ebp+0x8]
10010f3e:	xor    edi,edi
10010f40:	mov    eax,edi
10010f42:	cmp    eax,edi
10010f44:	je     0x10010f4f
10010f46:	inc    DWORD PTR [eax+0x4]
10010f49:	dec    DWORD PTR [eax+0x4]
10010f4c:	mov    DWORD PTR [ebp-0x14],edi
10010f4f:	mov    DWORD PTR [ebx],eax
10010f51:	mov    eax,DWORD PTR [ebp-0x14]
10010f54:	call   0x10059d4d
10010f59:	ret    0x4
10010f5c:	push   ebp
10010f5d:	mov    ebp,esp
10010f5f:	push   ecx
10010f60:	push   ecx
10010f61:	mov    ecx,DWORD PTR [ebp+0x8]
10010f64:	push   ebx
10010f65:	push   esi
10010f66:	mov    esi,eax
10010f68:	mov    eax,DWORD PTR [ecx]
10010f6a:	test   eax,eax
10010f6c:	mov    ebx,DWORD PTR [esi]
10010f6e:	jne    0x10010f8a
10010f70:	test   ebx,ebx
10010f72:	je     0x10010fd8
10010f74:	xor    al,al
10010f76:	test   al,al
10010f78:	jne    0x10010fd8
10010f7a:	mov    eax,DWORD PTR [esi]
10010f7c:	push   0x1006dcdc
10010f81:	mov    esi,ecx
10010f83:	call   0x1001048a
10010f88:	jmp    0x10010fda
10010f8a:	test   ebx,ebx
10010f8c:	je     0x10010f74
10010f8e:	and    DWORD PTR [ebp-0x4],0x0
10010f92:	and    DWORD PTR [ebp-0x8],0x0
10010f96:	mov    ecx,DWORD PTR [eax]
10010f98:	push   edi
10010f99:	lea    edx,[ebp-0x4]
10010f9c:	push   edx
10010f9d:	mov    edi,0x1006dd44
10010fa2:	push   edi
10010fa3:	push   eax
10010fa4:	call   DWORD PTR [ecx]
10010fa6:	mov    eax,DWORD PTR [ebx]
10010fa8:	lea    ecx,[ebp-0x8]
10010fab:	push   ecx
10010fac:	push   edi
10010fad:	push   ebx
10010fae:	call   DWORD PTR [eax]
10010fb0:	mov    eax,DWORD PTR [ebp-0x8]
10010fb3:	cmp    DWORD PTR [ebp-0x4],eax
10010fb6:	pop    edi
10010fb7:	sete   bl
10010fba:	test   eax,eax
10010fbc:	je     0x10010fc4
10010fbe:	mov    ecx,DWORD PTR [eax]
10010fc0:	push   eax
10010fc1:	call   DWORD PTR [ecx+0x8]
10010fc4:	mov    eax,DWORD PTR [ebp-0x4]
10010fc7:	test   eax,eax
10010fc9:	je     0x10010fd1
10010fcb:	mov    ecx,DWORD PTR [eax]
10010fcd:	push   eax
10010fce:	call   DWORD PTR [ecx+0x8]
10010fd1:	mov    ecx,DWORD PTR [ebp+0x8]
10010fd4:	mov    al,bl
10010fd6:	jmp    0x10010f76
10010fd8:	mov    eax,DWORD PTR [ecx]
10010fda:	pop    esi
10010fdb:	pop    ebx
10010fdc:	leave  
10010fdd:	ret    0x4
10010fe0:	push   edi
10010fe1:	mov    edi,eax
10010fe3:	cmp    edi,esi
10010fe5:	je     0x10010ffe
10010fe7:	call   0x100025aa
10010fec:	mov    eax,DWORD PTR [esi]
10010fee:	test   eax,eax
10010ff0:	mov    DWORD PTR [edi],eax
10010ff2:	je     0x10010ffe
10010ff4:	add    eax,0x8
10010ff7:	push   eax
10010ff8:	call   DWORD PTR ds:0x100660a4
10010ffe:	mov    eax,edi
10011000:	pop    edi
10011001:	ret    
10011002:	push   0x4
10011004:	mov    eax,0x1005f8ac
10011009:	call   0x10059c75
1001100e:	mov    edi,ecx
10011010:	cmp    DWORD PTR [ebp+0x8],0x0
10011014:	je     0x10011027
10011016:	mov    eax,DWORD PTR [edi]
10011018:	test   eax,eax
1001101a:	je     0x10011020
1001101c:	mov    eax,DWORD PTR [eax]
1001101e:	jmp    0x10011022
10011020:	xor    eax,eax
10011022:	cmp    eax,DWORD PTR [ebp+0x8]
10011025:	je     0x10011061
10011027:	call   0x100025aa
1001102c:	push   0xc
1001102e:	call   0x100436de
10011033:	mov    esi,eax
10011035:	pop    ecx
10011036:	mov    DWORD PTR [ebp-0x10],esi
10011039:	and    DWORD PTR [ebp-0x4],0x0
1001103d:	test   esi,esi
1001103f:	je     0x1001104b
10011041:	push   DWORD PTR [ebp+0x8]
10011044:	call   0x100025ea
10011049:	jmp    0x1001104d
1001104b:	xor    eax,eax
1001104d:	or     DWORD PTR [ebp-0x4],0xffffffff
10011051:	test   eax,eax
10011053:	mov    DWORD PTR [edi],eax
10011055:	jne    0x10011061
10011057:	push   0x8007000e
1001105c:	call   0x10050e30
10011061:	mov    eax,edi
10011063:	call   0x10059d4d
10011068:	ret    0x4
1001106b:	push   0x4
1001106d:	mov    eax,0x1005f8ac
10011072:	call   0x10059c75
10011077:	cmp    DWORD PTR [esi],0x0
1001107a:	jne    0x100110af
1001107c:	push   0xc
1001107e:	call   0x100436de
10011083:	pop    ecx
10011084:	test   eax,eax
10011086:	je     0x10011098
10011088:	and    DWORD PTR [eax+0x4],0x0
1001108c:	and    DWORD PTR [eax],0x0
1001108f:	mov    DWORD PTR [eax+0x8],0x1
10011096:	jmp    0x1001109a
10011098:	xor    eax,eax
1001109a:	or     DWORD PTR [esp+0x1c],0xffffffff
1001109f:	test   eax,eax
100110a1:	mov    DWORD PTR [esi],eax
100110a3:	jne    0x100110af
100110a5:	push   0x8007000e
100110aa:	call   0x10050e30
100110af:	mov    eax,DWORD PTR [esi]
100110b1:	call   0x10059d4d
100110b6:	ret    
100110b7:	push   0x34
100110b9:	mov    eax,0x100621a7
100110be:	call   0x10059cde
100110c3:	mov    eax,DWORD PTR [ebp+0x8]
100110c6:	xor    ebx,ebx
100110c8:	mov    esi,ecx
100110ca:	mov    DWORD PTR [ebp-0x34],eax
100110cd:	mov    DWORD PTR [ebp-0x40],esi
100110d0:	mov    DWORD PTR [ebp-0x3c],ebx
100110d3:	xor    edi,edi
100110d5:	push   0x1
100110d7:	lea    eax,[ebp-0x30]
100110da:	push   eax
100110db:	push   esi
100110dc:	mov    eax,edi
100110de:	mov    BYTE PTR [ebp-0x30],0x3b
100110e2:	call   0x1000d182
100110e7:	cmp    eax,0xffffffff
100110ea:	mov    DWORD PTR [ebp-0x38],eax
100110ed:	jne    0x100110f5
100110ef:	mov    eax,DWORD PTR [esi+0x14]
100110f2:	mov    DWORD PTR [ebp-0x38],eax
100110f5:	cmp    DWORD PTR [ebp-0x38],edi
100110f8:	jbe    0x1001117f
100110fe:	push   ebx
100110ff:	lea    ecx,[ebp-0x2c]
10011102:	mov    DWORD PTR [ebp-0x14],0xf
10011109:	call   0x10001420
1001110e:	mov    DWORD PTR [ebp-0x4],ebx
10011111:	jmp    0x10011147
10011113:	mov    eax,esi
10011115:	call   0x10011fbe
1001111a:	cmp    BYTE PTR [eax],0x20
1001111d:	je     0x10011146
1001111f:	mov    eax,esi
10011121:	call   0x10011fbe
10011126:	movsx  eax,BYTE PTR [eax]
10011129:	push   eax
1001112a:	call   0x10046071
1001112f:	pop    ecx
10011130:	mov    BYTE PTR [ebp-0x3c],al
10011133:	push   DWORD PTR [ebp-0x3c]
10011136:	xor    ebx,ebx
10011138:	inc    ebx
10011139:	lea    esi,[ebp-0x2c]
1001113c:	call   0x1000d10e
10011141:	mov    esi,DWORD PTR [ebp-0x40]
10011144:	xor    ebx,ebx
10011146:	inc    edi
10011147:	cmp    edi,DWORD PTR [ebp-0x38]
1001114a:	jb     0x10011113
1001114c:	push   ebx
1001114d:	push   0x1006dd74
10011152:	push   0x8
10011154:	push   0x1006dda8
10011159:	inc    edi
1001115a:	call   0x100042e3
1001115f:	add    esp,0xc
10011162:	push   eax
10011163:	lea    eax,[ebp-0x2c]
10011166:	push   eax
10011167:	call   0x1000ca77
1001116c:	test   eax,eax
1001116e:	lea    ecx,[ebp-0x2c]
10011171:	je     0x1001119e
10011173:	or     DWORD PTR [ebp-0x4],0xffffffff
10011177:	push   ebx
10011178:	push   0x1
1001117a:	call   0x100012f4
1001117f:	cmp    edi,DWORD PTR [esi+0x14]
10011182:	jb     0x100110d5
10011188:	mov    ecx,DWORD PTR [ebp-0x34]
1001118b:	push   0x1006cd08
10011190:	call   0x100011d1
10011195:	mov    eax,DWORD PTR [ebp-0x34]
10011198:	call   0x10059d61
1001119d:	ret    
1001119e:	push   0x8
100111a0:	push   ebx
100111a1:	call   0x100013b1
100111a6:	mov    ecx,DWORD PTR [ebp-0x34]
100111a9:	lea    eax,[ebp-0x2c]
100111ac:	push   eax
100111ad:	call   0x100011ab
100111b2:	push   ebx
100111b3:	push   0x1
100111b5:	lea    ecx,[ebp-0x2c]
100111b8:	call   0x100012f4
100111bd:	jmp    0x10011195
100111bf:	push   0x3c
100111c1:	mov    eax,0x10062184
100111c6:	call   0x10059c75
100111cb:	mov    edi,ecx
100111cd:	push   0x6d656c9a
100111d2:	push   0x1006ddbc
100111d7:	call   0x100042d1
100111dc:	push   eax
100111dd:	push   0x10
100111df:	push   0x1006ddf8
100111e4:	call   0x100042e3
100111e9:	add    esp,0x14
100111ec:	push   eax
100111ed:	lea    ecx,[ebp-0x28]
100111f0:	call   0x100011d1
100111f5:	xor    ebx,ebx
100111f7:	push   ebx
100111f8:	lea    eax,[ebp-0x28]
100111fb:	push   eax
100111fc:	lea    eax,[ebp-0x44]
100111ff:	push   eax
10011200:	mov    eax,DWORD PTR [ebp+0x8]
10011203:	mov    DWORD PTR [ebp-0x4],ebx
10011206:	mov    eax,DWORD PTR [eax+0x34]
10011209:	add    eax,0x20
1001120c:	call   0x100084c3
10011211:	push   0x1006ddb4
10011216:	mov    esi,eax
10011218:	mov    BYTE PTR [ebp-0x4],0x1
1001121c:	call   0x100065b3
10011221:	pop    ecx
10011222:	push   ebx
10011223:	push   0x1
10011225:	lea    ecx,[ebp-0x44]
10011228:	mov    BYTE PTR [ebp+0xb],al
1001122b:	call   0x100012f4
10011230:	or     DWORD PTR [ebp-0x4],0xffffffff
10011234:	push   ebx
10011235:	push   0x1
10011237:	lea    ecx,[ebp-0x28]
1001123a:	call   0x100012f4
1001123f:	cmp    BYTE PTR [ebp+0xb],bl
10011242:	je     0x1001126c
10011244:	push   DWORD PTR [ebp+0x14]
10011247:	lea    eax,[ebp+0x10]
1001124a:	push   DWORD PTR [ebp+0x10]
1001124d:	push   DWORD PTR [ebp+0xc]
10011250:	push   eax
10011251:	call   0x1002f670
10011256:	add    esp,0x10
10011259:	push   eax
1001125a:	call   0x10002082
1001125f:	push   DWORD PTR [ebp+0x10]
10011262:	call   0x100430d2
10011267:	mov    eax,DWORD PTR [edi]
10011269:	pop    ecx
1001126a:	jmp    0x10011277
1001126c:	mov    eax,DWORD PTR [ebp+0x10]
1001126f:	mov    ecx,DWORD PTR [ebp+0x14]
10011272:	mov    DWORD PTR [ecx],eax
10011274:	mov    eax,DWORD PTR [ebp+0xc]
10011277:	call   0x10059d4d
1001127c:	ret    0x10
1001127f:	xor    ecx,ecx
10011281:	cmp    DWORD PTR [esp+0x8],ecx
10011285:	je     0x10011299
10011287:	mov    eax,DWORD PTR [esp+0x4]
1001128b:	lea    eax,[eax+ecx*2]
1001128e:	rol    WORD PTR [eax],0x8
10011292:	inc    ecx
10011293:	cmp    ecx,DWORD PTR [esp+0x8]
10011297:	jne    0x10011287
10011299:	ret    
1001129a:	push   0x14
1001129c:	mov    eax,0x1006064e
100112a1:	call   0x10059c75
100112a6:	mov    edi,DWORD PTR ds:0x1006608c
100112ac:	xor    esi,esi
100112ae:	push   esi
100112af:	push   esi
100112b0:	push   DWORD PTR [ebp+0x14]
100112b3:	push   DWORD PTR [ebp+0x10]
100112b6:	push   0x8
100112b8:	push   DWORD PTR [ebp+0xc]
100112bb:	call   edi
100112bd:	mov    ebx,eax
100112bf:	cmp    ebx,esi
100112c1:	je     0x10011360
100112c7:	lea    eax,[ebp-0x10]
100112ca:	mov    DWORD PTR [ebp-0x10],esi
100112cd:	push   eax
100112ce:	mov    eax,ebx
100112d0:	lea    esi,[ebp-0x20]
100112d3:	call   0x10011fff
100112d8:	and    DWORD PTR [ebp-0x4],0x0
100112dc:	mov    esi,DWORD PTR [ebp-0x1c]
100112df:	test   esi,esi
100112e1:	je     0x100112ec
100112e3:	mov    eax,DWORD PTR [ebp-0x18]
100112e6:	sub    eax,esi
100112e8:	sar    eax,1
100112ea:	jne    0x100112f1
100112ec:	call   0x100435f0
100112f1:	push   ebx
100112f2:	push   esi
100112f3:	push   DWORD PTR [ebp+0x14]
100112f6:	push   DWORD PTR [ebp+0x10]
100112f9:	push   0x8
100112fb:	push   DWORD PTR [ebp+0xc]
100112fe:	call   edi
10011300:	cmp    eax,ebx
10011302:	jne    0x10011355
10011304:	test   esi,esi
10011306:	je     0x10011311
10011308:	mov    eax,DWORD PTR [ebp-0x18]
1001130b:	sub    eax,esi
1001130d:	sar    eax,1
1001130f:	jne    0x10011316
10011311:	call   0x100435f0
10011316:	push   0x0
10011318:	push   ebx
10011319:	push   esi
1001131a:	call   DWORD PTR ds:0x1006629c
10011320:	mov    ecx,eax
10011322:	lea    edi,[ebp+0x14]
10011325:	call   0x1000d94e
1001132a:	mov    ebx,DWORD PTR [ebp+0x8]
1001132d:	mov    esi,eax
1001132f:	lea    eax,[ebx+0x30]
10011332:	call   0x10010fe0
10011337:	call   0x100025aa
1001133c:	cmp    DWORD PTR [ebp-0x1c],0x0
10011340:	mov    eax,DWORD PTR [ebp+0xc]
10011343:	mov    DWORD PTR [ebx+0x24],eax
10011346:	je     0x10011351
10011348:	push   DWORD PTR [ebp-0x1c]
1001134b:	call   0x100430d2
10011350:	pop    ecx
10011351:	mov    al,0x1
10011353:	jmp    0x10011362
10011355:	test   esi,esi
10011357:	je     0x10011360
10011359:	push   esi
1001135a:	call   0x100430d2
1001135f:	pop    ecx
10011360:	xor    al,al
10011362:	call   0x10059d4d
10011367:	ret    0x10
1001136a:	push   0x8
1001136c:	mov    eax,0x1005faaa
10011371:	call   0x10059c75
10011376:	mov    ebx,ecx
10011378:	test   bl,0x1
1001137b:	je     0x10011384
1001137d:	xor    al,al
1001137f:	jmp    0x10011413
10011384:	xor    edi,edi
10011386:	mov    DWORD PTR [ebp-0x10],edi
10011389:	cmp    DWORD PTR [ebp+0xc],0x4b1
10011390:	mov    DWORD PTR [ebp-0x4],edi
10011393:	mov    esi,DWORD PTR [ebp+0x10]
10011396:	jne    0x100113da
10011398:	mov    eax,ebx
1001139a:	shr    eax,1
1001139c:	xor    ecx,ecx
1001139e:	push   0x2
100113a0:	pop    edx
100113a1:	mov    DWORD PTR [ebp-0x14],eax
100113a4:	mul    edx
100113a6:	seto   cl
100113a9:	neg    ecx
100113ab:	or     ecx,eax
100113ad:	push   ecx
100113ae:	call   0x100439b6
100113b3:	mov    esi,eax
100113b5:	cmp    esi,edi
100113b7:	pop    ecx
100113b8:	je     0x100113c1
100113ba:	push   edi
100113bb:	call   0x100430d2
100113c0:	pop    ecx
100113c1:	push   ebx
100113c2:	push   DWORD PTR [ebp+0x10]
100113c5:	mov    DWORD PTR [ebp-0x10],esi
100113c8:	push   esi
100113c9:	call   0x10045420
100113ce:	push   DWORD PTR [ebp-0x14]
100113d1:	push   esi
100113d2:	call   0x1001127f
100113d7:	add    esp,0x14
100113da:	push   0x0
100113dc:	shr    ebx,1
100113de:	push   ebx
100113df:	push   esi
100113e0:	call   DWORD PTR ds:0x1006629c
100113e6:	mov    ecx,eax
100113e8:	lea    edi,[ebp+0x10]
100113eb:	call   0x1000d94e
100113f0:	mov    ebx,DWORD PTR [ebp+0x8]
100113f3:	mov    esi,eax
100113f5:	lea    eax,[ebx+0x30]
100113f8:	call   0x10010fe0
100113fd:	call   0x100025aa
10011402:	mov    eax,DWORD PTR [ebp+0xc]
10011405:	push   DWORD PTR [ebp-0x10]
10011408:	mov    DWORD PTR [ebx+0x24],eax
1001140b:	call   0x100430d2
10011410:	pop    ecx
10011411:	mov    al,0x1
10011413:	call   0x10059d4d
10011418:	ret    0xc
1001141b:	mov    cl,BYTE PTR [eax]
1001141d:	cmp    cl,0xff
10011420:	jne    0x10011434
10011422:	cmp    BYTE PTR [eax+0x1],0xfe
10011426:	jne    0x10011434
10011428:	mov    eax,0x4b0
1001142d:	mov    DWORD PTR [edx],0x2
10011433:	ret    
10011434:	cmp    cl,0xfe
10011437:	jne    0x10011446
10011439:	cmp    BYTE PTR [eax+0x1],0xff
1001143d:	jne    0x10011446
1001143f:	mov    eax,0x4b1
10011444:	jmp    0x1001142d
10011446:	and    DWORD PTR [edx],0x0
10011449:	xor    eax,eax
1001144b:	ret    
1001144c:	push   0x14
1001144e:	mov    eax,0x10062e6f
10011453:	call   0x10059c75
10011458:	xor    esi,esi
1001145a:	mov    DWORD PTR [ebp-0x18],esi
1001145d:	mov    DWORD PTR [ebp-0x4],esi
10011460:	mov    eax,DWORD PTR [edi+0x34]
10011463:	mov    eax,DWORD PTR [eax+0xc]
10011466:	cmp    DWORD PTR [eax+0x1c],0x10
1001146a:	mov    ecx,DWORD PTR [eax+0x18]
1001146d:	mov    DWORD PTR [ebp-0x10],esi
10011470:	jb     0x10011477
10011472:	mov    eax,DWORD PTR [eax+0x8]
10011475:	jmp    0x1001147a
10011477:	add    eax,0x8
1001147a:	lea    edx,[ebp-0x10]
1001147d:	push   edx
1001147e:	push   ecx
1001147f:	push   eax
10011480:	push   edi
10011481:	lea    ecx,[ebp-0x18]
10011484:	call   0x100111bf
10011489:	cmp    eax,esi
1001148b:	mov    DWORD PTR [ebp-0x14],eax
1001148e:	je     0x10011707
10011494:	or     DWORD PTR [edi+0x28],0xffffffff
10011498:	mov    eax,DWORD PTR [edi+0x34]
1001149b:	mov    eax,DWORD PTR [eax+0xc]
1001149e:	cmp    DWORD PTR [eax+0x18],esi
100114a1:	je     0x10011707
100114a7:	push   0x100fc32
100114ac:	push   0x1006de0c
100114b1:	call   0x100042d1
100114b6:	push   eax
100114b7:	push   0x5
100114b9:	push   0x1006de44
100114be:	lea    esi,[edi+0x8]
100114c1:	call   0x100042e3
100114c6:	add    esp,0x14
100114c9:	push   eax
100114ca:	call   0x100065b3
100114cf:	test   al,al
100114d1:	pop    ecx
100114d2:	je     0x100114ea
100114d4:	push   DWORD PTR [ebp-0x10]
100114d7:	push   DWORD PTR [ebp-0x14]
100114da:	push   0xfde9
100114df:	push   edi
100114e0:	call   0x1001129a
100114e5:	jmp    0x100116fc
100114ea:	push   0x4f632dee
100114ef:	push   0x1006de4c
100114f4:	call   0x100042d1
100114f9:	push   eax
100114fa:	push   0x6
100114fc:	push   0x1006de80
10011501:	call   0x100042e3
10011506:	add    esp,0x14
10011509:	push   eax
1001150a:	call   0x100065b3
1001150f:	test   al,al
10011511:	pop    ecx
10011512:	mov    ebx,0x1006defc
10011517:	jne    0x1001163d
1001151d:	push   0x5c78d836
10011522:	push   0x320f86ae
10011527:	push   0x31e77ab0
1001152c:	push   0x566874e
10011531:	push   0x1006de88
10011536:	call   0x100042d1
1001153b:	pop    ecx
1001153c:	pop    ecx
1001153d:	push   eax
1001153e:	call   0x100042d1
10011543:	pop    ecx
10011544:	pop    ecx
10011545:	push   eax
10011546:	call   0x100042d1
1001154b:	pop    ecx
1001154c:	pop    ecx
1001154d:	push   eax
1001154e:	call   0x100042d1
10011553:	push   eax
10011554:	push   0x8
10011556:	push   0x1006deb8
1001155b:	call   0x100042e3
10011560:	add    esp,0x14
10011563:	push   eax
10011564:	call   0x100065b3
10011569:	test   al,al
1001156b:	pop    ecx
1001156c:	jne    0x1001163d
10011572:	push   0x317733c2
10011577:	push   0x3ae5630
1001157c:	push   0x451f7b2c
10011581:	push   0x7d0191c6
10011586:	push   0x56ef839e
1001158b:	push   0x1006dec4
10011590:	call   0x100042d1
10011595:	pop    ecx
10011596:	pop    ecx
10011597:	push   eax
10011598:	call   0x100042d1
1001159d:	pop    ecx
1001159e:	pop    ecx
1001159f:	push   eax
100115a0:	call   0x100042d1
100115a5:	pop    ecx
100115a6:	pop    ecx
100115a7:	push   eax
100115a8:	call   0x100042d1
100115ad:	pop    ecx
100115ae:	pop    ecx
100115af:	push   eax
100115b0:	call   0x100042d1
100115b5:	push   eax
100115b6:	push   0x8
100115b8:	push   ebx
100115b9:	call   0x100042e3
100115be:	add    esp,0x14
100115c1:	push   eax
100115c2:	call   0x100065b3
100115c7:	test   al,al
100115c9:	pop    ecx
100115ca:	jne    0x1001163d
100115cc:	push   0x1006cd08
100115d1:	call   0x100065b3
100115d6:	test   al,al
100115d8:	pop    ecx
100115d9:	push   DWORD PTR [ebp-0x10]
100115dc:	push   DWORD PTR [ebp-0x14]
100115df:	je     0x10011621
100115e1:	push   0xfde9
100115e6:	push   edi
100115e7:	call   0x1001129a
100115ec:	test   al,al
100115ee:	je     0x100115fc
100115f0:	mov    DWORD PTR [edi+0x28],0x2
100115f7:	jmp    0x10011707
100115fc:	push   DWORD PTR [ebp-0x10]
100115ff:	push   DWORD PTR [ebp-0x14]
10011602:	push   0x6faf
10011607:	push   edi
10011608:	call   0x1001129a
1001160d:	test   al,al
1001160f:	je     0x10011707
10011615:	mov    DWORD PTR [edi+0x28],0x1
1001161c:	jmp    0x10011707
10011621:	push   0x6faf
10011626:	push   edi
10011627:	call   0x1001129a
1001162c:	test   al,al
1001162e:	je     0x10011707
10011634:	and    DWORD PTR [edi+0x28],0x0
10011638:	jmp    0x10011707
1001163d:	and    DWORD PTR [ebp-0x1c],0x0
10011641:	cmp    DWORD PTR [ebp-0x10],0x2
10011645:	jb     0x1001166a
10011647:	mov    eax,DWORD PTR [ebp-0x14]
1001164a:	lea    edx,[ebp-0x1c]
1001164d:	call   0x1001141b
10011652:	test   eax,eax
10011654:	je     0x1001166a
10011656:	mov    edx,DWORD PTR [ebp-0x1c]
10011659:	mov    ecx,DWORD PTR [ebp-0x10]
1001165c:	mov    esi,DWORD PTR [ebp-0x14]
1001165f:	sub    ecx,edx
10011661:	add    edx,esi
10011663:	push   edx
10011664:	push   eax
10011665:	jmp    0x100116f6
1001166a:	push   0x51519442
1001166f:	push   0x29875f86
10011674:	push   0x1006df08
10011679:	call   0x100042d1
1001167e:	pop    ecx
1001167f:	pop    ecx
10011680:	push   eax
10011681:	call   0x100042d1
10011686:	push   eax
10011687:	push   0x8
10011689:	push   ebx
1001168a:	call   0x100042e3
1001168f:	add    esp,0x14
10011692:	push   eax
10011693:	call   0x100065b3
10011698:	test   al,al
1001169a:	pop    ecx
1001169b:	je     0x100116a7
1001169d:	push   DWORD PTR [ebp-0x14]
100116a0:	push   0x4b0
100116a5:	jmp    0x100116f3
100116a7:	push   0x7332dbd8
100116ac:	push   0x5093cee0
100116b1:	push   0x496680f4
100116b6:	push   0x1006df48
100116bb:	call   0x100042d1
100116c0:	pop    ecx
100116c1:	pop    ecx
100116c2:	push   eax
100116c3:	call   0x100042d1
100116c8:	pop    ecx
100116c9:	pop    ecx
100116ca:	push   eax
100116cb:	call   0x100042d1
100116d0:	push   eax
100116d1:	push   0x8
100116d3:	push   0x1006deb8
100116d8:	call   0x100042e3
100116dd:	add    esp,0x14
100116e0:	push   eax
100116e1:	call   0x100065b3
100116e6:	test   al,al
100116e8:	pop    ecx
100116e9:	je     0x10011707
100116eb:	push   DWORD PTR [ebp-0x14]
100116ee:	push   0x4b1
100116f3:	mov    ecx,DWORD PTR [ebp-0x10]
100116f6:	push   edi
100116f7:	call   0x1001136a
100116fc:	test   al,al
100116fe:	je     0x10011707
10011700:	mov    DWORD PTR [edi+0x28],0x3
10011707:	push   DWORD PTR [ebp-0x18]
1001170a:	call   0x100430d2
1001170f:	pop    ecx
10011710:	call   0x10059d4d
10011715:	ret    
10011716:	push   0x0
10011718:	push   0x1006df80
1001171d:	push   0x5
1001171f:	push   0x1006dfb0
10011724:	call   0x100042e3
10011729:	add    esp,0xc
1001172c:	push   eax
1001172d:	push   esi
1001172e:	call   0x1000ca77
10011733:	cmp    eax,0xffffffff
10011736:	jne    0x100117d5
1001173c:	push   0x0
1001173e:	push   0xbc1abe
10011743:	push   0x4b3796de
10011748:	push   0x1006dfb8
1001174d:	call   0x100042d1
10011752:	pop    ecx
10011753:	pop    ecx
10011754:	push   eax
10011755:	call   0x100042d1
1001175a:	push   eax
1001175b:	push   0x16
1001175d:	push   0x1006dfdc
10011762:	call   0x100042e3
10011767:	add    esp,0x14
1001176a:	push   eax
1001176b:	push   esi
1001176c:	call   0x1000ca77
10011771:	cmp    eax,0xffffffff
10011774:	jne    0x100117d5
10011776:	push   0x0
10011778:	push   0x1006dff4
1001177d:	push   0x18
1001177f:	push   0x1006e030
10011784:	call   0x100042e3
10011789:	add    esp,0xc
1001178c:	push   eax
1001178d:	push   esi
1001178e:	call   0x1000ca77
10011793:	cmp    eax,0xffffffff
10011796:	jne    0x100117d5
10011798:	push   0x0
1001179a:	push   0x54e2e75a
1001179f:	push   0x7c13fc9a
100117a4:	push   0x1006e04c
100117a9:	call   0x100042d1
100117ae:	pop    ecx
100117af:	pop    ecx
100117b0:	push   eax
100117b1:	call   0x100042d1
100117b6:	push   eax
100117b7:	push   0x16
100117b9:	push   0x1006e084
100117be:	call   0x100042e3
100117c3:	add    esp,0x14
100117c6:	push   eax
100117c7:	push   esi
100117c8:	call   0x1000ca77
100117cd:	cmp    eax,0xffffffff
100117d0:	jne    0x100117d5
100117d2:	xor    al,al
100117d4:	ret    
100117d5:	mov    al,0x1
100117d7:	ret    
100117d8:	push   ebp
100117d9:	mov    ebp,esp
100117db:	and    esp,0xfffffff8
100117de:	push   0xffffffff
100117e0:	push   0x1006381c
100117e5:	mov    eax,fs:0x0
100117eb:	push   eax
100117ec:	sub    esp,0x84
100117f2:	mov    eax,ds:0x1007e030
100117f7:	xor    eax,esp
100117f9:	mov    DWORD PTR [esp+0x7c],eax
100117fd:	push   esi
100117fe:	push   edi
100117ff:	mov    eax,ds:0x1007e030
10011804:	xor    eax,esp
10011806:	push   eax
10011807:	lea    eax,[esp+0x90]
1001180e:	mov    fs:0x0,eax
10011814:	lea    eax,[esp+0x10]
10011818:	mov    edi,ecx
1001181a:	push   eax
1001181b:	mov    DWORD PTR [ebx+0x34],edi
1001181e:	call   0x10010ee0
10011823:	test   eax,eax
10011825:	jl     0x10011958
1001182b:	mov    esi,DWORD PTR [esp+0x10]
1001182f:	test   esi,esi
10011831:	mov    DWORD PTR [esp+0x10],esi
10011835:	je     0x1001183d
10011837:	mov    eax,DWORD PTR [esi]
10011839:	push   esi
1001183a:	call   DWORD PTR [eax+0x4]
1001183d:	lea    eax,[ebx+0x38]
10011840:	push   eax
10011841:	lea    eax,[esp+0x14]
10011845:	call   0x10010f5c
1001184a:	test   esi,esi
1001184c:	je     0x10011854
1001184e:	mov    eax,DWORD PTR [esi]
10011850:	push   esi
10011851:	call   DWORD PTR [eax+0x8]
10011854:	lea    eax,[edi+0x20]
10011857:	push   0x1006cd08
1001185c:	lea    edi,[esp+0x14]
10011860:	mov    DWORD PTR [esp+0x18],eax
10011864:	mov    DWORD PTR [esi+0x8],eax
10011867:	call   0x1000244f
1001186c:	mov    esi,eax
1001186e:	lea    eax,[ebx+0x30]
10011871:	call   0x10010fe0
10011876:	call   0x100025aa
1001187b:	push   0x1006e09c
10011880:	push   0xc
10011882:	push   0x1006e0d4
10011887:	call   0x100042e3
1001188c:	add    esp,0xc
1001188f:	push   eax
10011890:	lea    ecx,[esp+0x1c]
10011894:	call   0x100011d1
10011899:	xor    edi,edi
1001189b:	push   edi
1001189c:	lea    eax,[esp+0x1c]
100118a0:	push   eax
100118a1:	lea    eax,[esp+0x74]
100118a5:	push   eax
100118a6:	mov    DWORD PTR [esp+0xa4],edi
100118ad:	mov    eax,DWORD PTR [ebx+0x34]
100118b0:	add    eax,0x20
100118b3:	call   0x100084c3
100118b8:	push   edi
100118b9:	push   0x1
100118bb:	lea    ecx,[esp+0x20]
100118bf:	mov    BYTE PTR [esp+0xa0],0x2
100118c7:	call   0x100012f4
100118cc:	push   0x1006cd08
100118d1:	lea    esi,[esp+0x70]
100118d5:	call   0x100065b3
100118da:	test   al,al
100118dc:	pop    ecx
100118dd:	jne    0x1001194c
100118df:	call   0x10011716
100118e4:	test   al,al
100118e6:	je     0x1001194c
100118e8:	push   edi
100118e9:	mov    eax,esi
100118eb:	push   eax
100118ec:	lea    eax,[esp+0x3c]
100118f0:	push   eax
100118f1:	mov    eax,DWORD PTR [esp+0x20]
100118f5:	call   0x100084c3
100118fa:	lea    ecx,[esp+0x50]
100118fe:	push   ecx
100118ff:	mov    ecx,eax
10011901:	mov    BYTE PTR [esp+0x9c],0x3
10011909:	call   0x100110b7
1001190e:	pop    ecx
1001190f:	push   0xffffffff
10011911:	push   edi
10011912:	push   eax
10011913:	lea    ecx,[ebx+0x8]
10011916:	mov    BYTE PTR [esp+0xa4],0x4
1001191e:	call   0x10001245
10011923:	push   edi
10011924:	push   0x1
10011926:	lea    ecx,[esp+0x58]
1001192a:	call   0x100012f4
1001192f:	push   edi
10011930:	push   0x1
10011932:	lea    ecx,[esp+0x3c]
10011936:	mov    BYTE PTR [esp+0xa0],0x2
1001193e:	call   0x100012f4
10011943:	mov    edi,ebx
10011945:	call   0x1001144c
1001194a:	xor    edi,edi
1001194c:	push   edi
1001194d:	push   0x1
1001194f:	lea    ecx,[esp+0x74]
10011953:	call   0x100012f4
10011958:	mov    ecx,DWORD PTR [esp+0x90]
1001195f:	mov    DWORD PTR fs:0x0,ecx
10011966:	pop    ecx
10011967:	pop    edi
10011968:	pop    esi
10011969:	mov    ecx,DWORD PTR [esp+0x7c]
1001196d:	xor    ecx,esp
1001196f:	call   0x100430d7
10011974:	mov    esp,ebp
10011976:	pop    ebp
10011977:	ret    
10011978:	push   0x3c
1001197a:	mov    eax,0x10062159
1001197f:	call   0x10059c75
10011984:	push   0x1006e120
10011989:	push   0x10
1001198b:	xor    ebx,ebx
1001198d:	push   0x1006ddf8
10011992:	mov    DWORD PTR [ebp-0x10],ebx
10011995:	call   0x100042e3
1001199a:	add    esp,0xc
1001199d:	push   eax
1001199e:	lea    ecx,[ebp-0x2c]
100119a1:	call   0x100011d1
100119a6:	push   ebx
100119a7:	lea    eax,[ebp-0x2c]
100119aa:	push   eax
100119ab:	lea    eax,[ebp-0x48]
100119ae:	push   eax
100119af:	mov    DWORD PTR [ebp-0x4],ebx
100119b2:	mov    eax,DWORD PTR [ebp+0x8]
100119b5:	mov    eax,DWORD PTR [eax+0x34]
100119b8:	add    eax,0x20
100119bb:	call   0x100084c3
100119c0:	mov    esi,eax
100119c2:	push   0x2d794b62
100119c7:	push   0x1006e0e4
100119cc:	mov    BYTE PTR [ebp-0x4],0x1
100119d0:	call   0x100042d1
100119d5:	push   0x40d625e2
100119da:	push   eax
100119db:	call   0x100042d1
100119e0:	push   eax
100119e1:	push   0x4
100119e3:	push   0x1006e118
100119e8:	call   0x100042e3
100119ed:	add    esp,0x1c
100119f0:	push   eax
100119f1:	call   0x100065b3
100119f6:	pop    ecx
100119f7:	push   ebx
100119f8:	push   0x1
100119fa:	lea    ecx,[ebp-0x48]
100119fd:	mov    BYTE PTR [ebp+0xb],al
10011a00:	call   0x100012f4
10011a05:	or     DWORD PTR [ebp-0x4],0xffffffff
10011a09:	push   ebx
10011a0a:	push   0x1
10011a0c:	lea    ecx,[ebp-0x2c]
10011a0f:	call   0x100012f4
10011a14:	cmp    BYTE PTR [ebp+0xb],bl
10011a17:	je     0x10011a5b
10011a19:	mov    ecx,DWORD PTR [ebp+0x14]
10011a1c:	mov    edx,DWORD PTR [ebp+0x10]
10011a1f:	lea    eax,[ebp+0x8]
10011a22:	lea    esi,[ebp+0x14]
10011a25:	mov    DWORD PTR [ebp+0x8],ebx
10011a28:	call   0x1002fa80
10011a2d:	mov    ecx,DWORD PTR [eax]
10011a2f:	mov    edi,ecx
10011a31:	mov    DWORD PTR [eax],ebx
10011a33:	mov    DWORD PTR [ebp+0x10],edi
10011a36:	mov    DWORD PTR [ebp-0x4],0x2
10011a3d:	push   DWORD PTR [ebp+0x14]
10011a40:	call   0x100430d2
10011a45:	mov    esi,DWORD PTR [ebp+0xc]
10011a48:	pop    ecx
10011a49:	push   DWORD PTR [ebp+0x8]
10011a4c:	push   edi
10011a4d:	call   0x100040fc
10011a52:	push   edi
10011a53:	call   0x100430d2
10011a58:	pop    ecx
10011a59:	jmp    0x10011a69
10011a5b:	push   DWORD PTR [ebp+0x14]
10011a5e:	mov    esi,DWORD PTR [ebp+0xc]
10011a61:	push   DWORD PTR [ebp+0x10]
10011a64:	call   0x100040fc
10011a69:	mov    eax,esi
10011a6b:	call   0x10059d4d
10011a70:	ret    0x10
10011a73:	push   0x34
10011a75:	mov    eax,0x10062e4c
10011a7a:	call   0x10059c75
10011a7f:	lea    edi,[ebx+0x30]
10011a82:	mov    esi,edi
10011a84:	call   0x1001106b
10011a89:	xor    esi,esi
10011a8b:	push   esi
10011a8c:	push   esi
10011a8d:	push   esi
10011a8e:	mov    DWORD PTR [ebp-0x14],eax
10011a91:	push   esi
10011a92:	mov    eax,edi
10011a94:	call   0x10002593
10011a99:	push   eax
10011a9a:	mov    eax,DWORD PTR [ebp-0x14]
10011a9d:	push   DWORD PTR [eax]
10011a9f:	push   esi
10011aa0:	push   DWORD PTR [ebx+0x24]
10011aa3:	call   DWORD PTR ds:0x100660b8
10011aa9:	mov    edi,eax
10011aab:	cmp    edi,esi
10011aad:	je     0x10011b44
10011ab3:	lea    eax,[ebp-0xd]
10011ab6:	push   eax
10011ab7:	lea    esi,[ebp-0x24]
10011aba:	mov    BYTE PTR [ebp-0xd],0x0
10011abe:	call   0x10012056
10011ac3:	and    DWORD PTR [ebp-0x4],0x0
10011ac7:	lea    esi,[ebx+0x30]
10011aca:	call   0x1001106b
10011acf:	mov    DWORD PTR [ebp-0x14],eax
10011ad2:	xor    eax,eax
10011ad4:	push   eax
10011ad5:	push   eax
10011ad6:	push   edi
10011ad7:	push   eax
10011ad8:	lea    esi,[ebp-0x24]
10011adb:	call   0x10011fde
10011ae0:	push   eax
10011ae1:	lea    eax,[ebx+0x30]
10011ae4:	call   0x10002593
10011ae9:	push   eax
10011aea:	mov    eax,DWORD PTR [ebp-0x14]
10011aed:	push   DWORD PTR [eax]
10011aef:	xor    esi,esi
10011af1:	push   esi
10011af2:	push   DWORD PTR [ebx+0x24]
10011af5:	call   DWORD PTR ds:0x100660b8
10011afb:	cmp    eax,edi
10011afd:	je     0x10011b04
10011aff:	cmp    DWORD PTR [ebp-0x20],esi
10011b02:	jmp    0x10011b39
10011b04:	push   edi
10011b05:	push   esi
10011b06:	lea    esi,[ebp-0x24]
10011b09:	call   0x10011fde
10011b0e:	push   eax
10011b0f:	lea    eax,[ebp-0x40]
10011b12:	push   eax
10011b13:	push   ebx
10011b14:	call   0x10011978
10011b19:	mov    BYTE PTR [ebp-0x4],0x1
10011b1d:	push   eax
10011b1e:	mov    eax,DWORD PTR [ebx+0x34]
10011b21:	mov    esi,DWORD PTR [eax+0xc]
10011b24:	call   0x10007979
10011b29:	push   0x0
10011b2b:	push   0x1
10011b2d:	lea    ecx,[ebp-0x40]
10011b30:	call   0x100012f4
10011b35:	cmp    DWORD PTR [ebp-0x20],0x0
10011b39:	je     0x10011b44
10011b3b:	push   DWORD PTR [ebp-0x20]
10011b3e:	call   0x100430d2
10011b43:	pop    ecx
10011b44:	call   0x10059d4d
10011b49:	ret    
10011b4a:	push   0x44
10011b4c:	mov    eax,0x10060fea
10011b51:	call   0x10059c75
10011b56:	mov    eax,DWORD PTR [ebx+0x34]
10011b59:	mov    eax,DWORD PTR [eax+0xc]
10011b5c:	and    DWORD PTR [ebp-0x18],0x0
10011b60:	cmp    DWORD PTR [eax+0x1c],0x10
10011b64:	mov    ecx,DWORD PTR [eax+0x18]
10011b67:	jb     0x10011b6e
10011b69:	mov    eax,DWORD PTR [eax+0x8]
10011b6c:	jmp    0x10011b71
10011b6e:	add    eax,0x8
10011b71:	cmp    ecx,0x2
10011b74:	jb     0x10011b7e
10011b76:	lea    edx,[ebp-0x18]
10011b79:	call   0x1001141b
10011b7e:	cmp    DWORD PTR [ebx+0x24],0x4b0
10011b85:	jne    0x10011bcc
10011b87:	cmp    DWORD PTR [ebp-0x18],0x0
10011b8b:	jne    0x10011bcc
10011b8d:	lea    esi,[ebx+0x30]
10011b90:	call   0x1001106b
10011b95:	mov    edi,eax
10011b97:	mov    eax,esi
10011b99:	call   0x10002593
10011b9e:	add    eax,eax
10011ba0:	push   eax
10011ba1:	push   DWORD PTR [edi]
10011ba3:	lea    esi,[ebp-0x34]
10011ba6:	call   0x100040fc
10011bab:	and    DWORD PTR [ebp-0x4],0x0
10011baf:	push   eax
10011bb0:	mov    eax,DWORD PTR [ebx+0x34]
10011bb3:	mov    esi,DWORD PTR [eax+0xc]
10011bb6:	call   0x10007979
10011bbb:	push   0x0
10011bbd:	push   0x1
10011bbf:	lea    ecx,[ebp-0x34]
10011bc2:	call   0x100012f4
10011bc7:	jmp    0x10011cb3
10011bcc:	lea    eax,[ebx+0x30]
10011bcf:	call   0x10002593
10011bd4:	mov    ecx,DWORD PTR [ebp-0x18]
10011bd7:	lea    edi,[ecx+eax*2]
10011bda:	lea    eax,[ebp-0x11]
10011bdd:	push   eax
10011bde:	lea    esi,[ebp-0x28]
10011be1:	mov    BYTE PTR [ebp-0x11],0x0
10011be5:	call   0x10012056
10011bea:	mov    DWORD PTR [ebp-0x4],0x1
10011bf1:	mov    edi,DWORD PTR [ebp-0x18]
10011bf4:	test   edi,edi
10011bf6:	je     0x10011c21
10011bf8:	mov    eax,DWORD PTR [ebx+0x34]
10011bfb:	mov    eax,DWORD PTR [eax+0xc]
10011bfe:	cmp    DWORD PTR [eax+0x1c],0x10
10011c02:	jb     0x10011c09
10011c04:	mov    eax,DWORD PTR [eax+0x8]
10011c07:	jmp    0x10011c0c
10011c09:	add    eax,0x8
10011c0c:	push   edi
10011c0d:	push   eax
10011c0e:	push   0x0
10011c10:	lea    esi,[ebp-0x28]
10011c13:	call   0x10011fde
10011c18:	push   eax
10011c19:	call   0x10045420
10011c1e:	add    esp,0xc
10011c21:	lea    esi,[ebx+0x30]
10011c24:	call   0x1001106b
10011c29:	mov    esi,eax
10011c2b:	lea    eax,[ebx+0x30]
10011c2e:	call   0x10002593
10011c33:	add    eax,eax
10011c35:	push   eax
10011c36:	push   DWORD PTR [esi]
10011c38:	lea    esi,[ebp-0x28]
10011c3b:	push   edi
10011c3c:	call   0x10011fde
10011c41:	push   eax
10011c42:	call   0x10045420
10011c47:	add    esp,0xc
10011c4a:	cmp    DWORD PTR [ebx+0x24],0x4b1
10011c51:	jne    0x10011c6a
10011c53:	lea    eax,[ebx+0x30]
10011c56:	call   0x10002593
10011c5b:	push   eax
10011c5c:	push   edi
10011c5d:	call   0x10011fde
10011c62:	push   eax
10011c63:	call   0x1001127f
10011c68:	pop    ecx
10011c69:	pop    ecx
10011c6a:	lea    eax,[ebx+0x30]
10011c6d:	call   0x10002593
10011c72:	lea    eax,[edi+eax*2]
10011c75:	push   eax
10011c76:	xor    edi,edi
10011c78:	push   edi
10011c79:	lea    esi,[ebp-0x28]
10011c7c:	call   0x10011fde
10011c81:	push   eax
10011c82:	lea    esi,[ebp-0x50]
10011c85:	call   0x100040fc
10011c8a:	mov    BYTE PTR [ebp-0x4],0x2
10011c8e:	push   eax
10011c8f:	mov    eax,DWORD PTR [ebx+0x34]
10011c92:	mov    esi,DWORD PTR [eax+0xc]
10011c95:	call   0x10007979
10011c9a:	push   edi
10011c9b:	push   0x1
10011c9d:	lea    ecx,[ebp-0x50]
10011ca0:	call   0x100012f4
10011ca5:	cmp    DWORD PTR [ebp-0x24],edi
10011ca8:	je     0x10011cb3
10011caa:	push   DWORD PTR [ebp-0x24]
10011cad:	call   0x100430d2
10011cb2:	pop    ecx
10011cb3:	call   0x10059d4d
10011cb8:	ret    
10011cb9:	push   ebp
10011cba:	mov    ebp,esp
10011cbc:	and    esp,0xfffffff8
10011cbf:	push   ecx
10011cc0:	push   ebx
10011cc1:	mov    ebx,eax
10011cc3:	cmp    BYTE PTR [ebx+0x2c],0x0
10011cc7:	je     0x10011ce6
10011cc9:	mov    eax,DWORD PTR [ebx+0x24]
10011ccc:	cmp    eax,0x4b1
10011cd1:	je     0x10011ce1
10011cd3:	cmp    eax,0x4b0
10011cd8:	je     0x10011ce1
10011cda:	call   0x10011a73
10011cdf:	jmp    0x10011ce6
10011ce1:	call   0x10011b4a
10011ce6:	pop    ebx
10011ce7:	mov    esp,ebp
10011ce9:	pop    ebp
10011cea:	ret    
10011ceb:	push   ebp
10011cec:	mov    ebp,esp
10011cee:	mov    eax,DWORD PTR [ebp+0x8]
10011cf1:	mov    eax,DWORD PTR [eax+0x34]
10011cf4:	test   eax,eax
10011cf6:	jne    0x10011cff
10011cf8:	mov    eax,0x80004005
10011cfd:	jmp    0x10011d31
10011cff:	mov    eax,DWORD PTR [eax]
10011d01:	test   eax,eax
10011d03:	je     0x10011cf8
10011d05:	cmp    DWORD PTR [eax+0x1c],0x10
10011d09:	jb     0x10011d10
10011d0b:	mov    eax,DWORD PTR [eax+0x8]
10011d0e:	jmp    0x10011d13
10011d10:	add    eax,0x8
10011d13:	push   edi
10011d14:	push   eax
10011d15:	lea    edi,[ebp+0x8]
10011d18:	call   0x1000244f
10011d1d:	mov    eax,edi
10011d1f:	call   0x1000d9cb
10011d24:	mov    ecx,DWORD PTR [ebp+0xc]
10011d27:	mov    DWORD PTR [ecx],eax
10011d29:	call   0x100025aa
10011d2e:	xor    eax,eax
10011d30:	pop    edi
10011d31:	pop    ebp
10011d32:	ret    0x8
10011d35:	push   0x1c
10011d37:	mov    eax,0x10061015
10011d3c:	call   0x10059c75
10011d41:	mov    esi,DWORD PTR [ebp+0x8]
10011d44:	mov    eax,DWORD PTR [esi+0x34]
10011d47:	test   eax,eax
10011d49:	jne    0x10011d52
10011d4b:	mov    eax,0x80004005
10011d50:	jmp    0x10011d9d
10011d52:	cmp    DWORD PTR [eax],0x0
10011d55:	je     0x10011d4b
10011d57:	mov    ecx,DWORD PTR [ebp+0xc]
10011d5a:	push   0x1
10011d5c:	lea    edi,[ebp+0x8]
10011d5f:	call   0x1000d94e
10011d64:	and    DWORD PTR [ebp-0x4],0x0
10011d68:	mov    eax,edi
10011d6a:	call   0x1000d9ae
10011d6f:	push   eax
10011d70:	lea    ecx,[ebp-0x28]
10011d73:	call   0x100011d1
10011d78:	lea    eax,[ebp-0x28]
10011d7b:	mov    BYTE PTR [ebp-0x4],0x1
10011d7f:	push   eax
10011d80:	mov    eax,DWORD PTR [esi+0x34]
10011d83:	mov    esi,DWORD PTR [eax]
10011d85:	call   0x10007979
10011d8a:	push   0x0
10011d8c:	push   0x1
10011d8e:	lea    ecx,[ebp-0x28]
10011d91:	call   0x100012f4
10011d96:	call   0x100025aa
10011d9b:	xor    eax,eax
10011d9d:	call   0x10059d4d
10011da2:	ret    0x8
10011da5:	push   ebp
10011da6:	mov    ebp,esp
10011da8:	mov    eax,DWORD PTR [ebp+0x8]
10011dab:	mov    eax,DWORD PTR [eax+0x34]
10011dae:	test   eax,eax
10011db0:	jne    0x10011db9
10011db2:	mov    eax,0x80004005
10011db7:	jmp    0x10011dec
10011db9:	mov    eax,DWORD PTR [eax+0x4]
10011dbc:	test   eax,eax
10011dbe:	je     0x10011db2
10011dc0:	cmp    DWORD PTR [eax+0x1c],0x10
10011dc4:	jb     0x10011dcb
10011dc6:	mov    eax,DWORD PTR [eax+0x8]
10011dc9:	jmp    0x10011dce
10011dcb:	add    eax,0x8
10011dce:	push   edi
10011dcf:	push   eax
10011dd0:	lea    edi,[ebp+0x8]
10011dd3:	call   0x1000244f
10011dd8:	mov    eax,edi
10011dda:	call   0x1000d9cb
10011ddf:	mov    ecx,DWORD PTR [ebp+0xc]
10011de2:	mov    DWORD PTR [ecx],eax
10011de4:	call   0x100025aa
10011de9:	xor    eax,eax
10011deb:	pop    edi
10011dec:	pop    ebp
10011ded:	ret    0x8
10011df0:	push   0x1c
10011df2:	mov    eax,0x10061015
10011df7:	call   0x10059c75
10011dfc:	mov    esi,DWORD PTR [ebp+0x8]
10011dff:	mov    eax,DWORD PTR [esi+0x34]
10011e02:	test   eax,eax
10011e04:	jne    0x10011e0d
10011e06:	mov    eax,0x80004005
10011e0b:	jmp    0x10011e5a
10011e0d:	cmp    DWORD PTR [eax+0x4],0x0
10011e11:	je     0x10011e06
10011e13:	mov    ecx,DWORD PTR [ebp+0xc]
10011e16:	push   0x1
10011e18:	lea    edi,[ebp+0x8]
10011e1b:	call   0x1000d94e
10011e20:	and    DWORD PTR [ebp-0x4],0x0
10011e24:	mov    eax,edi
10011e26:	call   0x1000d9ae
10011e2b:	push   eax
10011e2c:	lea    ecx,[ebp-0x28]
10011e2f:	call   0x100011d1
10011e34:	lea    eax,[ebp-0x28]
10011e37:	mov    BYTE PTR [ebp-0x4],0x1
10011e3b:	push   eax
10011e3c:	mov    eax,DWORD PTR [esi+0x34]
10011e3f:	mov    esi,DWORD PTR [eax+0x4]
10011e42:	call   0x10007979
10011e47:	push   0x0
10011e49:	push   0x1
10011e4b:	lea    ecx,[ebp-0x28]
10011e4e:	call   0x100012f4
10011e53:	call   0x100025aa
10011e58:	xor    eax,eax
10011e5a:	call   0x10059d4d
10011e5f:	ret    0x8
10011e62:	push   ebp
10011e63:	mov    ebp,esp
10011e65:	mov    eax,DWORD PTR [ebp+0x8]
10011e68:	mov    eax,DWORD PTR [eax+0x34]
10011e6b:	test   eax,eax
10011e6d:	jne    0x10011e76
10011e6f:	mov    eax,0x80004005
10011e74:	jmp    0x10011ea9
10011e76:	mov    eax,DWORD PTR [eax+0x8]
10011e79:	test   eax,eax
10011e7b:	je     0x10011e6f
10011e7d:	cmp    DWORD PTR [eax+0x1c],0x10
10011e81:	jb     0x10011e88
10011e83:	mov    eax,DWORD PTR [eax+0x8]
10011e86:	jmp    0x10011e8b
10011e88:	add    eax,0x8
10011e8b:	push   edi
10011e8c:	push   eax
10011e8d:	lea    edi,[ebp+0x8]
10011e90:	call   0x1000244f
10011e95:	mov    eax,edi
10011e97:	call   0x1000d9cb
10011e9c:	mov    ecx,DWORD PTR [ebp+0xc]
10011e9f:	mov    DWORD PTR [ecx],eax
10011ea1:	call   0x100025aa
10011ea6:	xor    eax,eax
10011ea8:	pop    edi
10011ea9:	pop    ebp
10011eaa:	ret    0x8
10011ead:	push   0x1c
10011eaf:	mov    eax,0x10061015
10011eb4:	call   0x10059c75
10011eb9:	mov    esi,DWORD PTR [ebp+0x8]
10011ebc:	mov    eax,DWORD PTR [esi+0x34]
10011ebf:	test   eax,eax
10011ec1:	jne    0x10011eca
10011ec3:	mov    eax,0x80004005
10011ec8:	jmp    0x10011f17
10011eca:	cmp    DWORD PTR [eax+0x8],0x0
10011ece:	je     0x10011ec3
10011ed0:	mov    ecx,DWORD PTR [ebp+0xc]
10011ed3:	push   0x1
10011ed5:	lea    edi,[ebp+0x8]
10011ed8:	call   0x1000d94e
10011edd:	and    DWORD PTR [ebp-0x4],0x0
10011ee1:	mov    eax,edi
10011ee3:	call   0x1000d9ae
10011ee8:	push   eax
10011ee9:	lea    ecx,[ebp-0x28]
10011eec:	call   0x100011d1
10011ef1:	lea    eax,[ebp-0x28]
10011ef4:	mov    BYTE PTR [ebp-0x4],0x1
10011ef8:	push   eax
10011ef9:	mov    eax,DWORD PTR [esi+0x34]
10011efc:	mov    esi,DWORD PTR [eax+0x8]
10011eff:	call   0x10007979
10011f04:	push   0x0
10011f06:	push   0x1
10011f08:	lea    ecx,[ebp-0x28]
10011f0b:	call   0x100012f4
10011f10:	call   0x100025aa
10011f15:	xor    eax,eax
10011f17:	call   0x10059d4d
10011f1c:	ret    0x8
10011f1f:	push   ebp
10011f20:	mov    ebp,esp
10011f22:	mov    eax,DWORD PTR [ebp+0x8]
10011f25:	mov    eax,DWORD PTR [eax+0x30]
10011f28:	test   eax,eax
10011f2a:	je     0x10011f30
10011f2c:	mov    eax,DWORD PTR [eax]
10011f2e:	jmp    0x10011f32
10011f30:	xor    eax,eax
10011f32:	push   edi
10011f33:	push   0x1
10011f35:	mov    ecx,eax
10011f37:	lea    edi,[ebp+0x8]
10011f3a:	call   0x1000d94e
10011f3f:	mov    eax,edi
10011f41:	call   0x1000d9cb
10011f46:	mov    ecx,DWORD PTR [ebp+0xc]
10011f49:	mov    DWORD PTR [ecx],eax
10011f4b:	call   0x100025aa
10011f50:	xor    eax,eax
10011f52:	pop    edi
10011f53:	pop    ebp
10011f54:	ret    0x8
10011f57:	mov    eax,DWORD PTR [esp+0x4]
10011f5b:	push   DWORD PTR [esp+0x8]
10011f5f:	lea    ecx,[eax+0x30]
10011f62:	mov    BYTE PTR [eax+0x2c],0x1
10011f66:	call   0x10011002
10011f6b:	xor    eax,eax
10011f6d:	ret    0x8
10011f70:	mov    ecx,DWORD PTR [esp+0x8]
10011f74:	test   ecx,ecx
10011f76:	mov    eax,DWORD PTR [esp+0x4]
10011f7a:	jne    0x10011f83
10011f7c:	mov    eax,0x80004003
10011f81:	jmp    0x10011f97
10011f83:	mov    edx,DWORD PTR [eax+0x38]
10011f86:	mov    DWORD PTR [ecx],edx
10011f88:	mov    eax,DWORD PTR [eax+0x38]
10011f8b:	test   eax,eax
10011f8d:	je     0x10011f95
10011f8f:	mov    ecx,DWORD PTR [eax]
10011f91:	push   eax
10011f92:	call   DWORD PTR [ecx+0x4]
10011f95:	xor    eax,eax
10011f97:	ret    0x8
10011f9a:	mov    eax,DWORD PTR [esp+0x4]
10011f9e:	mov    eax,DWORD PTR [eax+0x24]
10011fa1:	mov    ecx,DWORD PTR [esp+0x8]
10011fa5:	mov    DWORD PTR [ecx],eax
10011fa7:	xor    eax,eax
10011fa9:	ret    0x8
10011fac:	mov    eax,DWORD PTR [esp+0x4]
10011fb0:	mov    eax,DWORD PTR [eax+0x28]
10011fb3:	mov    ecx,DWORD PTR [esp+0x8]
10011fb7:	mov    DWORD PTR [ecx],eax
10011fb9:	xor    eax,eax
10011fbb:	ret    0x8
10011fbe:	push   esi
10011fbf:	mov    esi,eax
10011fc1:	cmp    edi,DWORD PTR [esi+0x14]
10011fc4:	jbe    0x10011fcb
10011fc6:	call   0x100435f0
10011fcb:	cmp    DWORD PTR [esi+0x18],0x10
10011fcf:	jb     0x10011fd6
10011fd1:	mov    esi,DWORD PTR [esi+0x4]
10011fd4:	jmp    0x10011fd9
10011fd6:	add    esi,0x4
10011fd9:	lea    eax,[esi+edi*1]
10011fdc:	pop    esi
10011fdd:	ret    
10011fde:	mov    ecx,DWORD PTR [esi+0x4]
10011fe1:	test   ecx,ecx
10011fe3:	je     0x10011ff0
10011fe5:	mov    eax,DWORD PTR [esi+0x8]
10011fe8:	sub    eax,ecx
10011fea:	cmp    DWORD PTR [esp+0x4],eax
10011fee:	jb     0x10011ff5
10011ff0:	call   0x100435f0
10011ff5:	mov    eax,DWORD PTR [esi+0x4]
10011ff8:	add    eax,DWORD PTR [esp+0x4]
10011ffc:	ret    0x4
10011fff:	push   edi
10012000:	mov    edi,eax
10012002:	xor    eax,eax
10012004:	cmp    edi,eax
10012006:	mov    DWORD PTR [esi+0x4],eax
10012009:	mov    DWORD PTR [esi+0x8],eax
1001200c:	mov    DWORD PTR [esi+0xc],eax
1001200f:	je     0x10012052
10012011:	cmp    edi,0x7fffffff
10012017:	jbe    0x1001201e
10012019:	call   0x100120ac
1001201e:	mov    ecx,edi
10012020:	call   0x10006061
10012025:	test   edi,edi
10012027:	lea    ecx,[edi+edi*1]
1001202a:	lea    edx,[ecx+eax*1]
1001202d:	mov    DWORD PTR [esi+0xc],edx
10012030:	mov    DWORD PTR [esi+0x4],eax
10012033:	mov    DWORD PTR [esi+0x8],eax
10012036:	mov    edx,eax
10012038:	jbe    0x1001204d
1001203a:	push   ebx
1001203b:	mov    ebx,DWORD PTR [esp+0xc]
1001203f:	mov    bx,WORD PTR [ebx]
10012042:	mov    WORD PTR [edx],bx
10012045:	dec    edi
10012046:	inc    edx
10012047:	inc    edx
10012048:	test   edi,edi
1001204a:	ja     0x1001203b
1001204c:	pop    ebx
1001204d:	add    ecx,eax
1001204f:	mov    DWORD PTR [esi+0x8],ecx
10012052:	pop    edi
10012053:	ret    0x4
10012056:	push   ebp
10012057:	mov    ebp,esp
10012059:	push   ecx
1001205a:	push   ebx
1001205b:	xor    ebx,ebx
1001205d:	cmp    edi,ebx
1001205f:	mov    DWORD PTR [esi+0x4],ebx
10012062:	mov    DWORD PTR [esi+0x8],ebx
10012065:	mov    DWORD PTR [esi+0xc],ebx
10012068:	je     0x100120a7
1001206a:	cmp    edi,0xffffffff
1001206d:	jbe    0x10012074
1001206f:	call   0x100120ac
10012074:	push   ebx
10012075:	push   edi
10012076:	call   0x10001ec2
1001207b:	cmp    edi,ebx
1001207d:	pop    ecx
1001207e:	pop    ecx
1001207f:	lea    ecx,[eax+edi*1]
10012082:	mov    DWORD PTR [esi+0xc],ecx
10012085:	mov    DWORD PTR [esi+0x4],eax
10012088:	mov    DWORD PTR [esi+0x8],eax
1001208b:	mov    DWORD PTR [ebp-0x4],edi
1001208e:	mov    ecx,eax
10012090:	jbe    0x100120a2
10012092:	mov    edx,DWORD PTR [ebp+0x8]
10012095:	mov    dl,BYTE PTR [edx]
10012097:	dec    DWORD PTR [ebp-0x4]
1001209a:	mov    BYTE PTR [ecx],dl
1001209c:	inc    ecx
1001209d:	cmp    DWORD PTR [ebp-0x4],ebx
100120a0:	ja     0x10012092
100120a2:	add    eax,edi
100120a4:	mov    DWORD PTR [esi+0x8],eax
100120a7:	pop    ebx
100120a8:	leave  
100120a9:	ret    0x4
100120ac:	push   0x44
100120ae:	mov    eax,0x10060338
100120b3:	call   0x10059c75
100120b8:	push   0x1006d038
100120bd:	lea    ecx,[ebp-0x28]
100120c0:	call   0x100011d1
100120c5:	and    DWORD PTR [ebp-0x4],0x0
100120c9:	lea    eax,[ebp-0x28]
100120cc:	push   eax
100120cd:	lea    ecx,[ebp-0x50]
100120d0:	call   0x1000106e
100120d5:	push   0x10074ec0
100120da:	lea    eax,[ebp-0x50]
100120dd:	push   eax
100120de:	mov    DWORD PTR [ebp-0x50],0x1006b96c
100120e5:	call   0x10047c54
100120ea:	int3   
100120eb:	push   esi
100120ec:	mov    esi,DWORD PTR [eax]
100120ee:	test   esi,esi
100120f0:	je     0x10012120
100120f2:	mov    eax,DWORD PTR [esi]
100120f4:	test   eax,eax
100120f6:	je     0x1001211a
100120f8:	push   eax
100120f9:	call   DWORD PTR ds:0x100662a0
100120ff:	push   eax
10012100:	push   DWORD PTR [esi]
10012102:	call   DWORD PTR ds:0x100662a8
10012108:	mov    esi,eax
1001210a:	test   esi,esi
1001210c:	jne    0x1001211c
1001210e:	push   0x8007000e
10012113:	call   0x10050e30
10012118:	jmp    0x1001211c
1001211a:	xor    esi,esi
1001211c:	mov    eax,esi
1001211e:	pop    esi
1001211f:	ret    
10012120:	xor    eax,eax
10012122:	pop    esi
10012123:	ret    
10012124:	push   0x4
10012126:	mov    eax,0x1005f8ac
1001212b:	call   0x10059c75
10012130:	mov    edi,ecx
10012132:	call   0x100025aa
10012137:	push   0xc
10012139:	call   0x100436de
1001213e:	pop    ecx
1001213f:	test   eax,eax
10012141:	je     0x10012153
10012143:	and    DWORD PTR [eax+0x4],0x0
10012147:	and    DWORD PTR [eax],0x0
1001214a:	mov    DWORD PTR [eax+0x8],0x1
10012151:	jmp    0x10012155
10012153:	xor    eax,eax
10012155:	or     DWORD PTR [esp+0x1c],0xffffffff
1001215a:	test   eax,eax
1001215c:	mov    DWORD PTR [edi],eax
1001215e:	jne    0x1001216a
10012160:	push   0x8007000e
10012165:	call   0x10050e30
1001216a:	mov    eax,DWORD PTR [edi]
1001216c:	call   0x10059d4d
10012171:	ret    
10012172:	push   0x8c
10012177:	mov    eax,0x10062e14
1001217c:	call   0x10059d14
10012181:	mov    esi,DWORD PTR [ebp+0x8]
10012184:	mov    ebx,DWORD PTR [ebp+0xc]
10012187:	mov    eax,DWORD PTR [esi+0xc]
1001218a:	push   ebx
1001218b:	push   eax
1001218c:	call   DWORD PTR ds:0x10080c54
10012192:	xor    edi,edi
10012194:	cmp    eax,edi
10012196:	mov    DWORD PTR [ebp-0x60],eax
10012199:	jl     0x1001233d
1001219f:	mov    DWORD PTR [ebp-0x4],edi
100121a2:	mov    DWORD PTR [ebp-0x58],edi
100121a5:	lea    ecx,[ebp-0x58]
100121a8:	push   ecx
100121a9:	mov    BYTE PTR [ebp-0x4],0x1
100121ad:	mov    eax,DWORD PTR [esi]
100121af:	push   esi
100121b0:	call   DWORD PTR [eax+0x94]
100121b6:	cmp    eax,edi
100121b8:	jge    0x100121c8
100121ba:	mov    BYTE PTR [ebp-0x4],0x0
100121be:	mov    eax,DWORD PTR [ebp-0x58]
100121c1:	cmp    eax,edi
100121c3:	jmp    0x10012332
100121c8:	mov    esi,DWORD PTR [ebp-0x58]
100121cb:	cmp    esi,edi
100121cd:	je     0x1001233a
100121d3:	mov    DWORD PTR [ebp-0x5c],edi
100121d6:	lea    ecx,[ebp-0x5c]
100121d9:	mov    BYTE PTR [ebp-0x4],0x2
100121dd:	call   0x10012124
100121e2:	mov    ecx,DWORD PTR [esi]
100121e4:	push   eax
100121e5:	push   esi
100121e6:	call   DWORD PTR [ecx+0x20]
100121e9:	cmp    eax,edi
100121eb:	jl     0x10012321
100121f1:	lea    eax,[ebp-0x5c]
100121f4:	call   0x1000d9ae
100121f9:	push   eax
100121fa:	lea    ecx,[ebp-0x30]
100121fd:	call   0x100011d1
10012202:	push   0x10
10012204:	mov    BYTE PTR [ebp-0x4],0x3
10012208:	mov    eax,DWORD PTR [ebp-0x2c]
1001220b:	pop    esi
1001220c:	cmp    DWORD PTR [ebp-0x18],esi
1001220f:	jae    0x10012214
10012211:	lea    eax,[ebp-0x2c]
10012214:	push   eax
10012215:	call   0x1000205f
1001221a:	pop    ecx
1001221b:	lea    eax,[ebp-0x50]
1001221e:	push   eax
1001221f:	push   0x10080ee8
10012224:	lea    ecx,[ebp-0x30]
10012227:	call   0x10019ac3
1001222c:	lea    edi,[ebp-0x50]
1001222f:	mov    BYTE PTR [ebp-0x4],0x4
10012233:	call   0x10019983
10012238:	test   al,al
1001223a:	jne    0x10012309
10012240:	mov    eax,DWORD PTR [ebp-0x50]
10012243:	dec    eax
10012244:	je     0x1001227a
10012246:	dec    eax
10012247:	jne    0x10012309
1001224d:	cmp    DWORD PTR [ebp-0x18],esi
10012250:	mov    eax,DWORD PTR [ebp-0x2c]
10012253:	jae    0x10012258
10012255:	lea    eax,[ebp-0x2c]
10012258:	push   eax
10012259:	call   0x1000205f
1001225e:	pop    ecx
1001225f:	push   DWORD PTR [ebx]
10012261:	call   DWORD PTR ds:0x100662b4
10012267:	push   0x1006cd08
1001226c:	lea    edi,[ebp-0x54]
1001226f:	call   0x1000244f
10012274:	mov    BYTE PTR [ebp-0x4],0x8
10012278:	jmp    0x100122f7
1001227a:	lea    eax,[ebp-0x7c]
1001227d:	push   eax
1001227e:	lea    eax,[ebp-0x50]
10012281:	call   0x1000795e
10012286:	cmp    DWORD PTR [ebp-0x18],esi
10012289:	mov    ecx,DWORD PTR [ebp-0x2c]
1001228c:	jae    0x10012291
1001228e:	lea    ecx,[ebp-0x2c]
10012291:	cmp    DWORD PTR [eax+0x18],esi
10012294:	jb     0x1001229b
10012296:	mov    eax,DWORD PTR [eax+0x4]
10012299:	jmp    0x1001229e
1001229b:	add    eax,0x4
1001229e:	push   ecx
1001229f:	push   eax
100122a0:	call   0x1000205f
100122a5:	pop    ecx
100122a6:	pop    ecx
100122a7:	push   0x0
100122a9:	push   0x1
100122ab:	lea    ecx,[ebp-0x7c]
100122ae:	call   0x100012f4
100122b3:	push   DWORD PTR [ebx]
100122b5:	call   DWORD PTR ds:0x100662b4
100122bb:	lea    eax,[ebp-0x98]
100122c1:	push   eax
100122c2:	lea    eax,[ebp-0x50]
100122c5:	call   0x1000795e
100122ca:	mov    BYTE PTR [ebp-0x4],0x5
100122ce:	cmp    DWORD PTR [eax+0x18],esi
100122d1:	jb     0x100122d8
100122d3:	mov    eax,DWORD PTR [eax+0x4]
100122d6:	jmp    0x100122db
100122d8:	add    eax,0x4
100122db:	push   eax
100122dc:	lea    edi,[ebp-0x54]
100122df:	call   0x1000244f
100122e4:	push   0x0
100122e6:	push   0x1
100122e8:	lea    ecx,[ebp-0x98]
100122ee:	mov    BYTE PTR [ebp-0x4],0x7
100122f2:	call   0x100012f4
100122f7:	lea    eax,[ebp-0x54]
100122fa:	call   0x100120eb
100122ff:	lea    edi,[ebp-0x54]
10012302:	mov    DWORD PTR [ebx],eax
10012304:	call   0x100025aa
10012309:	push   0x0
1001230b:	push   0x1
1001230d:	lea    ecx,[ebp-0x4c]
10012310:	call   0x100012f4
10012315:	push   0x0
10012317:	push   0x1
10012319:	lea    ecx,[ebp-0x30]
1001231c:	call   0x100012f4
10012321:	lea    edi,[ebp-0x5c]
10012324:	call   0x100025aa
10012329:	mov    BYTE PTR [ebp-0x4],0x0
1001232d:	mov    eax,DWORD PTR [ebp-0x58]
10012330:	test   eax,eax
10012332:	je     0x1001233a
10012334:	mov    ecx,DWORD PTR [eax]
10012336:	push   eax
10012337:	call   DWORD PTR [ecx+0x8]
1001233a:	mov    eax,DWORD PTR [ebp-0x60]
1001233d:	call   0x10059d70
10012342:	ret    0x8
10012345:	push   0x8
10012347:	call   0x10037b70
1001234c:	pop    ecx
1001234d:	mov    eax,0x1001233a
10012352:	ret    
10012353:	mov    DWORD PTR [esp+0x4],eax
10012357:	jmp    0x10012172
1001235c:	push   ebp
1001235d:	mov    ebp,esp
1001235f:	sub    esp,0x1c
10012362:	and    DWORD PTR [ebp-0x1c],0x0
10012366:	push   edi
10012367:	push   0x6
10012369:	pop    ecx
1001236a:	xor    eax,eax
1001236c:	lea    edi,[ebp-0x18]
1001236f:	rep stos DWORD PTR es:[edi],eax
10012371:	push   esi
10012372:	lea    eax,[ebp-0x1c]
10012375:	push   eax
10012376:	push   ebx
10012377:	call   DWORD PTR ds:0x100660f4
1001237d:	test   eax,eax
1001237f:	pop    edi
10012380:	jne    0x10012386
10012382:	xor    al,al
10012384:	leave  
10012385:	ret    
10012386:	cmp    DWORD PTR [ebp-0xc],0x10000
1001238d:	je     0x10012382
1001238f:	mov    eax,DWORD PTR [ebp-0x1c]
10012392:	mov    ecx,DWORD PTR [ebp-0x10]
10012395:	add    ecx,eax
10012397:	lea    eax,[ebx+esi*1]
1001239a:	cmp    ecx,eax
1001239c:	jb     0x10012382
1001239e:	push   esi
1001239f:	push   DWORD PTR [ebp+0x8]
100123a2:	push   ebx
100123a3:	call   0x100439bb
100123a8:	add    esp,0xc
100123ab:	neg    eax
100123ad:	sbb    al,al
100123af:	inc    al
100123b1:	leave  
100123b2:	ret    
100123b3:	push   ebp
100123b4:	mov    ebp,esp
100123b6:	sub    esp,0x40
100123b9:	mov    eax,ds:0x1007e030
100123be:	xor    eax,ebp
100123c0:	mov    DWORD PTR [ebp-0x4],eax
100123c3:	xor    al,al
100123c5:	push   ebx
100123c6:	push   esi
100123c7:	mov    BYTE PTR [ebp-0x38],al
100123ca:	mov    BYTE PTR [ebp-0x37],al
100123cd:	mov    BYTE PTR [ebp-0x36],al
100123d0:	mov    BYTE PTR [ebp-0x28],al
100123d3:	mov    BYTE PTR [ebp-0x27],al
100123d6:	mov    BYTE PTR [ebp-0x26],al
100123d9:	mov    BYTE PTR [ebp-0x17],al
100123dc:	mov    BYTE PTR [ebp-0x9],al
100123df:	mov    BYTE PTR [ebp-0x8],al
100123e2:	mov    BYTE PTR [ebp-0x7],al
100123e5:	lea    eax,[ebp-0x40]
100123e8:	push   eax
100123e9:	push   0x1d
100123eb:	mov    ebx,ecx
100123ed:	pop    esi
100123ee:	mov    BYTE PTR [ebp-0x40],0x8b
100123f2:	mov    BYTE PTR [ebp-0x3f],0x44
100123f6:	mov    BYTE PTR [ebp-0x3e],0x24
100123fa:	mov    BYTE PTR [ebp-0x3d],0x4
100123fe:	mov    BYTE PTR [ebp-0x3c],0xc7
10012402:	mov    BYTE PTR [ebp-0x3b],0x40
10012406:	mov    BYTE PTR [ebp-0x3a],0x20
1001240a:	mov    BYTE PTR [ebp-0x39],0x24
1001240e:	mov    BYTE PTR [ebp-0x35],0x8b
10012412:	mov    BYTE PTR [ebp-0x34],0x48
10012416:	mov    BYTE PTR [ebp-0x33],0xc
1001241a:	mov    BYTE PTR [ebp-0x32],0x89
1001241e:	mov    BYTE PTR [ebp-0x31],0x4c
10012422:	mov    BYTE PTR [ebp-0x30],0x24
10012426:	mov    BYTE PTR [ebp-0x2f],0x4
1001242a:	mov    BYTE PTR [ebp-0x2e],0x8b
1001242e:	mov    BYTE PTR [ebp-0x2d],0x48
10012432:	mov    BYTE PTR [ebp-0x2c],0x10
10012436:	mov    BYTE PTR [ebp-0x2b],0x8b
1001243a:	mov    BYTE PTR [ebp-0x2a],0x89
1001243e:	mov    BYTE PTR [ebp-0x29],0x90
10012442:	mov    BYTE PTR [ebp-0x25],0xff
10012446:	mov    BYTE PTR [ebp-0x24],0xe1
1001244a:	mov    BYTE PTR [ebp-0x20],0x8b
1001244e:	mov    BYTE PTR [ebp-0x1f],0x44
10012452:	mov    BYTE PTR [ebp-0x1e],0x24
10012456:	mov    BYTE PTR [ebp-0x1d],0x4
1001245a:	mov    BYTE PTR [ebp-0x1c],0x66
1001245e:	mov    BYTE PTR [ebp-0x1b],0xc7
10012462:	mov    BYTE PTR [ebp-0x1a],0x40
10012466:	mov    BYTE PTR [ebp-0x19],0x20
1001246a:	mov    BYTE PTR [ebp-0x18],0x24
1001246e:	mov    BYTE PTR [ebp-0x16],0x8b
10012472:	mov    BYTE PTR [ebp-0x15],0x48
10012476:	mov    BYTE PTR [ebp-0x14],0xc
1001247a:	mov    BYTE PTR [ebp-0x13],0x89
1001247e:	mov    BYTE PTR [ebp-0x12],0x4c
10012482:	mov    BYTE PTR [ebp-0x11],0x24
10012486:	mov    BYTE PTR [ebp-0x10],0x4
1001248a:	mov    BYTE PTR [ebp-0xf],0x8b
1001248e:	mov    BYTE PTR [ebp-0xe],0x48
10012492:	mov    BYTE PTR [ebp-0xd],0x10
10012496:	mov    BYTE PTR [ebp-0xc],0x8b
1001249a:	mov    BYTE PTR [ebp-0xb],0x89
1001249e:	mov    BYTE PTR [ebp-0xa],0x90
100124a2:	mov    BYTE PTR [ebp-0x6],0xff
100124a6:	mov    BYTE PTR [ebp-0x5],0xe1
100124aa:	call   0x1001235c
100124af:	test   al,al
100124b1:	pop    ecx
100124b2:	jne    0x100124c9
100124b4:	lea    eax,[ebp-0x20]
100124b7:	push   eax
100124b8:	push   0x1c
100124ba:	pop    esi
100124bb:	call   0x1001235c
100124c0:	test   al,al
100124c2:	pop    ecx
100124c3:	jne    0x100124c9
100124c5:	xor    eax,eax
100124c7:	jmp    0x100124cc
100124c9:	xor    eax,eax
100124cb:	inc    eax
100124cc:	mov    ecx,DWORD PTR [ebp-0x4]
100124cf:	pop    esi
100124d0:	xor    ecx,ebp
100124d2:	pop    ebx
100124d3:	call   0x100430d7
100124d8:	leave  
100124d9:	ret    
100124da:	push   ebp
100124db:	mov    ebp,esp
100124dd:	and    esp,0xfffffff8
100124e0:	push   0xffffffff
100124e2:	push   0x10063d3f
100124e7:	mov    eax,fs:0x0
100124ed:	push   eax
100124ee:	sub    esp,0x20
100124f1:	mov    eax,ds:0x1007e030
100124f6:	xor    eax,esp
100124f8:	mov    DWORD PTR [esp+0x18],eax
100124fc:	push   esi
100124fd:	mov    eax,ds:0x1007e030
10012502:	xor    eax,esp
10012504:	push   eax
10012505:	lea    eax,[esp+0x28]
10012509:	mov    fs:0x0,eax
1001250f:	push   0x570bdc4a
10012514:	push   0x1006e14c
10012519:	call   0x100042d1
1001251e:	push   0xb641d30
10012523:	push   eax
10012524:	call   0x100042d1
10012529:	push   0x13306fb2
1001252e:	push   eax
1001252f:	call   0x100042d1
10012534:	push   eax
10012535:	push   0xa
10012537:	push   0x1006e17c
1001253c:	call   0x100044a2
10012541:	add    esp,0x24
10012544:	push   eax
10012545:	call   DWORD PTR ds:0x100660f8
1001254b:	xor    esi,esi
1001254d:	push   esi
1001254e:	call   DWORD PTR ds:0x10066434
10012554:	mov    DWORD PTR [esp+0xc],esi
10012558:	push   0x5a2811c4
1001255d:	push   0x1006e194
10012562:	mov    DWORD PTR [esp+0x38],esi
10012566:	call   0x100042d1
1001256b:	push   eax
1001256c:	push   0x8
1001256e:	push   0x1006e1bc
10012573:	call   0x100044a2
10012578:	add    esp,0x14
1001257b:	lea    ecx,[esp+0x10]
1001257f:	push   ecx
10012580:	push   eax
10012581:	call   DWORD PTR ds:0x10066438
10012587:	cmp    eax,esi
10012589:	jl     0x100125f6
1001258b:	lea    eax,[esp+0xc]
1001258f:	push   eax
10012590:	push   0x1006e244
10012595:	push   0x17
10012597:	push   esi
10012598:	lea    eax,[esp+0x20]
1001259c:	push   eax
1001259d:	call   DWORD PTR ds:0x1006643c
100125a3:	cmp    eax,esi
100125a5:	jl     0x100125f6
100125a7:	mov    eax,DWORD PTR [esp+0xc]
100125ab:	mov    eax,DWORD PTR [eax]
100125ad:	mov    ecx,DWORD PTR [eax+0x90]
100125b3:	call   0x100123b3
100125b8:	test   al,al
100125ba:	jne    0x100125cb
100125bc:	call   0x1000205f
100125c1:	push   0x8
100125c3:	call   0x10037b70
100125c8:	pop    ecx
100125c9:	jmp    0x100125f6
100125cb:	mov    eax,DWORD PTR [esp+0xc]
100125cf:	mov    eax,DWORD PTR [eax+0x10]
100125d2:	mov    eax,DWORD PTR [eax+0x90]
100125d8:	push   0x10012353
100125dd:	push   eax
100125de:	call   0x10057710
100125e3:	push   esi
100125e4:	push   0x1
100125e6:	push   0x10080da0
100125eb:	mov    ds:0x10080c54,eax
100125f0:	call   DWORD PTR ds:0x100660e0
100125f6:	or     DWORD PTR [esp+0x30],0xffffffff
100125fb:	mov    eax,DWORD PTR [esp+0xc]
100125ff:	cmp    eax,esi
10012601:	je     0x10012609
10012603:	mov    ecx,DWORD PTR [eax]
10012605:	push   eax
10012606:	call   DWORD PTR [ecx+0x8]
10012609:	mov    ecx,DWORD PTR [esp+0x28]
1001260d:	mov    DWORD PTR fs:0x0,ecx
10012614:	pop    ecx
10012615:	pop    esi
10012616:	mov    ecx,DWORD PTR [esp+0x18]
1001261a:	xor    ecx,esp
1001261c:	call   0x100430d7
10012621:	mov    esp,ebp
10012623:	pop    ebp
10012624:	ret    
10012625:	mov    eax,DWORD PTR [eax]
10012627:	test   eax,eax
10012629:	je     0x10012631
1001262b:	mov    ecx,DWORD PTR [eax]
1001262d:	push   eax
1001262e:	call   DWORD PTR [ecx+0x8]
10012631:	ret    
10012632:	push   0x10
10012634:	mov    eax,0x10062126
10012639:	call   0x10059c75
1001263e:	push   DWORD PTR [ebp+0x8]
10012641:	lea    eax,[ebp-0x1c]
10012644:	push   eax
10012645:	call   0x1000f6fe
1001264a:	pop    ecx
1001264b:	pop    ecx
1001264c:	xor    ebx,ebx
1001264e:	lea    eax,[ebp-0x1c]
10012651:	mov    DWORD PTR [ebp-0x4],ebx
10012654:	call   0x10004674
10012659:	cmp    eax,0x2
1001265c:	jne    0x10012694
1001265e:	push   ebx
1001265f:	lea    esi,[ebp-0x1c]
10012662:	call   0x1000468a
10012667:	mov    ecx,DWORD PTR [ebp+0xc]
1001266a:	push   0xffffffff
1001266c:	push   ebx
1001266d:	push   eax
1001266e:	call   0x10001245
10012673:	inc    ebx
10012674:	push   ebx
10012675:	call   0x1000468a
1001267a:	cmp    DWORD PTR [eax+0x18],0x10
1001267e:	jb     0x10012685
10012680:	mov    eax,DWORD PTR [eax+0x4]
10012683:	jmp    0x10012688
10012685:	add    eax,0x4
10012688:	push   eax
10012689:	call   0x10045f55
1001268e:	pop    ecx
1001268f:	mov    ecx,DWORD PTR [ebp+0x10]
10012692:	mov    DWORD PTR [ecx],eax
10012694:	lea    esi,[ebp-0x1c]
10012697:	call   0x1000499a
1001269c:	mov    al,bl
1001269e:	call   0x10059d4d
100126a3:	ret    
100126a4:	push   ebp
100126a5:	mov    ebp,esp
100126a7:	push   0xffffffff
100126a9:	push   0x100637d1
100126ae:	mov    eax,fs:0x0
100126b4:	push   eax
100126b5:	push   ecx
100126b6:	mov    eax,0x1058
100126bb:	call   0x1004a080
100126c0:	mov    eax,ds:0x1007e030
100126c5:	xor    eax,ebp
100126c7:	mov    DWORD PTR [ebp-0x14],eax
100126ca:	push   ebx
100126cb:	push   esi
100126cc:	push   edi
100126cd:	push   eax
100126ce:	lea    eax,[ebp-0xc]
100126d1:	mov    fs:0x0,eax
100126d7:	mov    DWORD PTR [ebp-0x10],esp
100126da:	mov    eax,DWORD PTR [ebp+0x8]
100126dd:	mov    DWORD PTR [ebp-0x103c],eax
100126e3:	mov    eax,DWORD PTR [ebp+0xc]
100126e6:	xor    edi,edi
100126e8:	push   0xfff
100126ed:	mov    DWORD PTR [ebp-0x1040],eax
100126f3:	mov    DWORD PTR [eax],edi
100126f5:	lea    eax,[ebp-0x1017]
100126fb:	push   edi
100126fc:	push   eax
100126fd:	mov    DWORD PTR [ebp-0x1054],0x1000
10012707:	mov    BYTE PTR [ebp-0x1018],0x0
1001270e:	call   0x10045ea0
10012713:	add    esp,0xc
10012716:	lea    eax,[ebp-0x1054]
1001271c:	push   eax
1001271d:	lea    eax,[ebp-0x1018]
10012723:	push   eax
10012724:	push   0x26
10012726:	push   edi
10012727:	call   DWORD PTR ds:0x10066370
1001272d:	test   eax,eax
1001272f:	jne    0x1001274d
10012731:	xor    al,al
10012733:	mov    ecx,DWORD PTR [ebp-0xc]
10012736:	mov    DWORD PTR fs:0x0,ecx
1001273d:	pop    ecx
1001273e:	pop    edi
1001273f:	pop    esi
10012740:	pop    ebx
10012741:	mov    ecx,DWORD PTR [ebp-0x14]
10012744:	xor    ecx,ebp
10012746:	call   0x100430d7
1001274b:	leave  
1001274c:	ret    
1001274d:	cmp    DWORD PTR [ebp-0x1018],0x3
10012754:	jne    0x10012731
10012756:	cmp    DWORD PTR [ebp-0x1014],edi
1001275c:	je     0x10012731
1001275e:	push   DWORD PTR [ebp-0x1014]
10012764:	lea    ecx,[ebp-0x1034]
1001276a:	call   0x100011d1
1001276f:	mov    DWORD PTR [ebp-0x4],edi
10012772:	mov    DWORD PTR [ebp-0x104c],edi
10012778:	mov    DWORD PTR [ebp-0x1048],edi
1001277e:	mov    DWORD PTR [ebp-0x1044],edi
10012784:	lea    eax,[ebp-0x1034]
1001278a:	push   eax
1001278b:	lea    eax,[ebp-0x1064]
10012791:	push   eax
10012792:	mov    BYTE PTR [ebp-0x1035],0x0
10012799:	mov    BYTE PTR [ebp-0x4],0x2
1001279d:	call   0x100128ee
100127a2:	pop    ecx
100127a3:	pop    ecx
100127a4:	lea    ecx,[ebp-0x1050]
100127aa:	mov    BYTE PTR [ebp-0x4],0x3
100127ae:	call   0x100129a2
100127b3:	lea    esi,[ebp-0x1064]
100127b9:	mov    BYTE PTR [ebp-0x4],0x2
100127bd:	call   0x1000d21e
100127c2:	xor    ebx,ebx
100127c4:	cmp    DWORD PTR [ebp-0x104c],edi
100127ca:	jne    0x100127d0
100127cc:	xor    eax,eax
100127ce:	jmp    0x100127df
100127d0:	mov    eax,DWORD PTR [ebp-0x1048]
100127d6:	sub    eax,DWORD PTR [ebp-0x104c]
100127dc:	sar    eax,0x4
100127df:	cmp    ebx,eax
100127e1:	je     0x10012882
100127e7:	push   ebx
100127e8:	lea    esi,[ebp-0x1050]
100127ee:	call   0x1000cb07
100127f3:	call   0x10004674
100127f8:	cmp    eax,0x2
100127fb:	jne    0x1001287a
100127fd:	push   0x462a8f5e
10012802:	push   0x1006e210
10012807:	call   0x100042d1
1001280c:	pop    ecx
1001280d:	pop    ecx
1001280e:	push   0x0
10012810:	push   ebx
10012811:	mov    edi,eax
10012813:	call   0x1000cb07
10012818:	mov    esi,eax
1001281a:	call   0x1000468a
1001281f:	cmp    DWORD PTR [eax+0x18],0x10
10012823:	jb     0x1001282a
10012825:	mov    esi,DWORD PTR [eax+0x4]
10012828:	jmp    0x1001282d
1001282a:	lea    esi,[eax+0x4]
1001282d:	push   edi
1001282e:	push   0x4
10012830:	push   0x1006e23c
10012835:	call   0x100042e3
1001283a:	add    esp,0xc
1001283d:	push   eax
1001283e:	push   esi
1001283f:	call   0x1004590f
10012844:	test   eax,eax
10012846:	pop    ecx
10012847:	pop    ecx
10012848:	jne    0x1001287a
1001284a:	push   DWORD PTR [ebp-0x1040]
10012850:	lea    esi,[ebp-0x1050]
10012856:	push   DWORD PTR [ebp-0x103c]
1001285c:	push   0x1
1001285e:	push   ebx
1001285f:	call   0x1000cb07
10012864:	mov    esi,eax
10012866:	call   0x1000468a
1001286b:	push   eax
1001286c:	call   0x10012632
10012871:	add    esp,0xc
10012874:	mov    BYTE PTR [ebp-0x1035],al
1001287a:	inc    ebx
1001287b:	xor    edi,edi
1001287d:	jmp    0x100127c4
10012882:	mov    DWORD PTR [ebp-0x4],0x1
10012889:	cmp    BYTE PTR [ebp-0x1035],0x0
10012890:	je     0x100128bb
10012892:	mov    bl,0x1
10012894:	lea    esi,[ebp-0x1050]
1001289a:	call   0x1000d21e
1001289f:	push   0x0
100128a1:	push   0x1
100128a3:	lea    ecx,[ebp-0x1034]
100128a9:	call   0x100012f4
100128ae:	mov    al,bl
100128b0:	jmp    0x10012733
100128b5:	mov    eax,0x10012889
100128ba:	ret    
100128bb:	push   DWORD PTR [ebp-0x1040]
100128c1:	lea    eax,[ebp-0x1034]
100128c7:	push   DWORD PTR [ebp-0x103c]
100128cd:	mov    BYTE PTR [ebp-0x4],0x5
100128d1:	push   eax
100128d2:	call   0x10012632
100128d7:	add    esp,0xc
100128da:	mov    BYTE PTR [ebp-0x1035],al
100128e0:	mov    bl,BYTE PTR [ebp-0x1035]
100128e6:	jmp    0x10012894
100128e8:	mov    eax,0x100128e0
100128ed:	ret    
100128ee:	push   0x34
100128f0:	mov    eax,0x10063795
100128f5:	call   0x10059c75
100128fa:	mov    edi,DWORD PTR [ebp+0x8]
100128fd:	xor    esi,esi
100128ff:	mov    DWORD PTR [ebp-0x10],esi
10012902:	mov    DWORD PTR [edi+0x4],esi
10012905:	mov    DWORD PTR [edi+0x8],esi
10012908:	mov    DWORD PTR [edi+0xc],esi
1001290b:	mov    DWORD PTR [ebp-0x4],esi
1001290e:	push   DWORD PTR ds:0x1008143c
10012914:	mov    DWORD PTR [ebp-0x10],0x1
1001291b:	call   0x10043250
10012920:	pop    ecx
10012921:	mov    DWORD PTR [ebp-0x14],eax
10012924:	push   esi
10012925:	push   DWORD PTR ds:0x1008143c
1001292b:	push   DWORD PTR [ebp+0xc]
1001292e:	call   0x1000ca77
10012933:	mov    ebx,eax
10012935:	cmp    ebx,0xffffffff
10012938:	jne    0x10012940
1001293a:	mov    eax,DWORD PTR [ebp+0xc]
1001293d:	mov    ebx,DWORD PTR [eax+0x14]
10012940:	cmp    ebx,esi
10012942:	jb     0x10012992
10012944:	mov    eax,ebx
10012946:	sub    eax,esi
10012948:	push   eax
10012949:	push   esi
1001294a:	push   DWORD PTR [ebp+0xc]
1001294d:	lea    eax,[ebp-0x40]
10012950:	call   0x1000ca96
10012955:	push   eax
10012956:	lea    eax,[ebp-0x24]
10012959:	push   eax
1001295a:	mov    DWORD PTR [ebp-0x4],0x1
10012961:	call   0x10012ac3
10012966:	pop    ecx
10012967:	pop    ecx
10012968:	push   eax
10012969:	mov    esi,edi
1001296b:	mov    BYTE PTR [ebp-0x4],0x2
1001296f:	call   0x1000f7b9
10012974:	lea    esi,[ebp-0x24]
10012977:	call   0x1000499a
1001297c:	push   0x0
1001297e:	push   0x1
10012980:	lea    ecx,[ebp-0x40]
10012983:	mov    BYTE PTR [ebp-0x4],0x0
10012987:	call   0x100012f4
1001298c:	mov    eax,DWORD PTR [ebp-0x14]
1001298f:	lea    esi,[ebx+eax*1]
10012992:	mov    eax,DWORD PTR [ebp+0xc]
10012995:	cmp    esi,DWORD PTR [eax+0x14]
10012998:	jb     0x10012924
1001299a:	mov    eax,edi
1001299c:	call   0x10059d4d
100129a1:	ret    
100129a2:	push   ebx
100129a3:	push   esi
100129a4:	push   edi
100129a5:	mov    esi,eax
100129a7:	mov    edi,ecx
100129a9:	cmp    edi,esi
100129ab:	je     0x10012abd
100129b1:	call   0x1000caf4
100129b6:	test   eax,eax
100129b8:	jne    0x100129fb
100129ba:	mov    ebx,DWORD PTR [edi+0x8]
100129bd:	cmp    DWORD PTR [edi+0x4],ebx
100129c0:	jbe    0x100129c7
100129c2:	call   0x100435f0
100129c7:	mov    esi,DWORD PTR [edi+0x4]
100129ca:	cmp    esi,DWORD PTR [edi+0x8]
100129cd:	jbe    0x100129d4
100129cf:	call   0x100435f0
100129d4:	cmp    esi,ebx
100129d6:	je     0x10012abd
100129dc:	push   DWORD PTR [edi+0x8]
100129df:	mov    eax,esi
100129e1:	mov    ecx,ebx
100129e3:	call   0x10012b7e
100129e8:	pop    ecx
100129e9:	push   DWORD PTR [edi+0x8]
100129ec:	mov    esi,eax
100129ee:	call   0x1000d4d5
100129f3:	mov    DWORD PTR [edi+0x8],esi
100129f6:	jmp    0x10012abd
100129fb:	mov    eax,esi
100129fd:	call   0x1000caf4
10012a02:	mov    ebx,eax
10012a04:	mov    eax,edi
10012a06:	call   0x1000caf4
10012a0b:	cmp    ebx,eax
10012a0d:	mov    eax,DWORD PTR [edi+0x4]
10012a10:	ja     0x10012a38
10012a12:	push   DWORD PTR [esi+0x8]
10012a15:	mov    ecx,DWORD PTR [esi+0x4]
10012a18:	call   0x10012b7e
10012a1d:	pop    ecx
10012a1e:	push   DWORD PTR [edi+0x8]
10012a21:	call   0x1000d4d5
10012a26:	mov    eax,esi
10012a28:	call   0x1000caf4
10012a2d:	shl    eax,0x4
10012a30:	add    eax,DWORD PTR [edi+0x4]
10012a33:	jmp    0x10012aba
10012a38:	test   eax,eax
10012a3a:	jne    0x10012a40
10012a3c:	xor    ebx,ebx
10012a3e:	jmp    0x10012a48
10012a40:	mov    ebx,DWORD PTR [edi+0xc]
10012a43:	sub    ebx,eax
10012a45:	sar    ebx,0x4
10012a48:	mov    eax,esi
10012a4a:	call   0x1000caf4
10012a4f:	cmp    eax,ebx
10012a51:	ja     0x10012a75
10012a53:	mov    eax,edi
10012a55:	call   0x1000caf4
10012a5a:	mov    ecx,DWORD PTR [esi+0x4]
10012a5d:	mov    ebx,eax
10012a5f:	mov    eax,DWORD PTR [edi+0x4]
10012a62:	shl    ebx,0x4
10012a65:	add    ebx,ecx
10012a67:	push   ebx
10012a68:	call   0x10012b7e
10012a6d:	pop    ecx
10012a6e:	push   DWORD PTR [edi+0x8]
10012a71:	mov    ecx,ebx
10012a73:	jmp    0x10012ab2
10012a75:	mov    eax,DWORD PTR [edi+0x4]
10012a78:	xor    ebx,ebx
10012a7a:	cmp    eax,ebx
10012a7c:	je     0x10012a8f
10012a7e:	push   DWORD PTR [edi+0x8]
10012a81:	call   0x1000d4d5
10012a86:	push   DWORD PTR [edi+0x4]
10012a89:	call   0x100430d2
10012a8e:	pop    ecx
10012a8f:	mov    eax,esi
10012a91:	call   0x1000caf4
10012a96:	cmp    eax,ebx
10012a98:	mov    DWORD PTR [edi+0x4],ebx
10012a9b:	mov    DWORD PTR [edi+0x8],ebx
10012a9e:	mov    DWORD PTR [edi+0xc],ebx
10012aa1:	je     0x10012abd
10012aa3:	call   0x1000f891
10012aa8:	test   al,al
10012aaa:	je     0x10012abd
10012aac:	push   DWORD PTR [edi+0x4]
10012aaf:	mov    ecx,DWORD PTR [esi+0x4]
10012ab2:	push   DWORD PTR [esi+0x8]
10012ab5:	call   0x10012bb6
10012aba:	mov    DWORD PTR [edi+0x8],eax
10012abd:	mov    eax,edi
10012abf:	pop    edi
10012ac0:	pop    esi
10012ac1:	pop    ebx
10012ac2:	ret    
10012ac3:	push   0x44
10012ac5:	mov    eax,0x10062103
10012aca:	call   0x10059c75
10012acf:	mov    esi,DWORD PTR [ebp+0x8]
10012ad2:	xor    ebx,ebx
10012ad4:	mov    DWORD PTR [ebp-0x14],ebx
10012ad7:	mov    DWORD PTR [esi+0x4],ebx
10012ada:	mov    DWORD PTR [esi+0x8],ebx
10012add:	mov    DWORD PTR [esi+0xc],ebx
10012ae0:	xor    edi,edi
10012ae2:	inc    edi
10012ae3:	mov    DWORD PTR [ebp-0x4],ebx
10012ae6:	push   0x1006e148
10012aeb:	mov    DWORD PTR [ebp-0x14],edi
10012aee:	call   0x10043250
10012af3:	pop    ecx
10012af4:	mov    DWORD PTR [ebp-0x18],eax
10012af7:	mov    DWORD PTR [ebp-0x10],ebx
10012afa:	push   DWORD PTR [ebp-0x10]
10012afd:	push   0x1006e148
10012b02:	push   DWORD PTR [ebp+0xc]
10012b05:	call   0x1000ca77
10012b0a:	mov    ebx,eax
10012b0c:	cmp    ebx,0xffffffff
10012b0f:	jne    0x10012b17
10012b11:	mov    eax,DWORD PTR [ebp+0xc]
10012b14:	mov    ebx,DWORD PTR [eax+0x14]
10012b17:	cmp    ebx,DWORD PTR [ebp-0x10]
10012b1a:	jb     0x10012b6b
10012b1c:	mov    eax,ebx
10012b1e:	sub    eax,DWORD PTR [ebp-0x10]
10012b21:	push   eax
10012b22:	push   DWORD PTR [ebp-0x10]
10012b25:	lea    eax,[ebp-0x50]
10012b28:	push   DWORD PTR [ebp+0xc]
10012b2b:	call   0x1000ca96
10012b30:	push   eax
10012b31:	lea    eax,[ebp-0x34]
10012b34:	push   eax
10012b35:	mov    DWORD PTR [ebp-0x4],edi
10012b38:	call   0x1000fd77
10012b3d:	pop    ecx
10012b3e:	pop    ecx
10012b3f:	push   eax
10012b40:	mov    BYTE PTR [ebp-0x4],0x2
10012b44:	call   0x1000f97e
10012b49:	push   0x0
10012b4b:	push   edi
10012b4c:	lea    ecx,[ebp-0x34]
10012b4f:	call   0x100012f4
10012b54:	push   0x0
10012b56:	push   edi
10012b57:	lea    ecx,[ebp-0x50]
10012b5a:	mov    BYTE PTR [ebp-0x4],0x0
10012b5e:	call   0x100012f4
10012b63:	mov    eax,DWORD PTR [ebp-0x18]
10012b66:	add    ebx,eax
10012b68:	mov    DWORD PTR [ebp-0x10],ebx
10012b6b:	mov    eax,DWORD PTR [ebp-0x10]
10012b6e:	mov    ecx,DWORD PTR [ebp+0xc]
10012b71:	cmp    eax,DWORD PTR [ecx+0x14]
10012b74:	jb     0x10012afa
10012b76:	mov    eax,esi
10012b78:	call   0x10059d4d
10012b7d:	ret    
10012b7e:	push   ecx
10012b7f:	push   ebx
10012b80:	push   esi
10012b81:	mov    esi,DWORD PTR [esp+0x10]
10012b85:	push   edi
10012b86:	mov    edi,ecx
10012b88:	sub    esi,edi
10012b8a:	sar    esi,0x4
10012b8d:	shl    esi,0x4
10012b90:	mov    ebx,eax
10012b92:	add    esi,ebx
10012b94:	cmp    edi,DWORD PTR [esp+0x14]
10012b98:	je     0x10012baf
10012b9a:	sub    ebx,edi
10012b9c:	lea    ecx,[ebx+edi*1]
10012b9f:	mov    eax,edi
10012ba1:	call   0x10010112
10012ba6:	add    edi,0x10
10012ba9:	cmp    edi,DWORD PTR [esp+0x14]
10012bad:	jne    0x10012b9c
10012baf:	pop    edi
10012bb0:	mov    eax,esi
10012bb2:	pop    esi
10012bb3:	pop    ebx
10012bb4:	pop    ecx
10012bb5:	ret    
10012bb6:	push   ebp
10012bb7:	mov    ebp,esp
10012bb9:	push   ecx
10012bba:	push   edi
10012bbb:	xor    eax,eax
10012bbd:	lea    edi,[ebp-0x4]
10012bc0:	stos   BYTE PTR es:[edi],al
10012bc1:	push   DWORD PTR [ebp-0x4]
10012bc4:	push   DWORD PTR [ebp+0xc]
10012bc7:	push   DWORD PTR [ebp+0xc]
10012bca:	push   DWORD PTR [ebp+0x8]
10012bcd:	call   0x10012bda
10012bd2:	add    esp,0x10
10012bd5:	pop    edi
10012bd6:	leave  
10012bd7:	ret    0x8
10012bda:	push   0xc
10012bdc:	mov    eax,0x10062dbe
10012be1:	call   0x10059ca8
10012be6:	mov    esi,ecx
10012be8:	mov    eax,DWORD PTR [ebp+0xc]
10012beb:	and    DWORD PTR [ebp-0x4],0x0
10012bef:	mov    DWORD PTR [ebp-0x14],eax
10012bf2:	cmp    esi,DWORD PTR [ebp+0x8]
10012bf5:	je     0x10012c25
10012bf7:	push   DWORD PTR [ebp+0xc]
10012bfa:	mov    ecx,esi
10012bfc:	call   0x100100ec
10012c01:	add    DWORD PTR [ebp+0xc],0x10
10012c05:	add    esi,0x10
10012c08:	jmp    0x10012bf2
10012c0a:	mov    esi,DWORD PTR [ebp-0x14]
10012c0d:	jmp    0x10012c17
10012c0f:	call   0x1000499a
10012c14:	add    esi,0x10
10012c17:	cmp    esi,DWORD PTR [ebp+0xc]
10012c1a:	jne    0x10012c0f
10012c1c:	push   0x0
10012c1e:	push   0x0
10012c20:	call   0x10047c54
10012c25:	mov    eax,DWORD PTR [ebp+0xc]
10012c28:	call   0x10059d4d
10012c2d:	ret    
10012c2e:	push   esi
10012c2f:	mov    esi,edi
10012c31:	call   0x100040e9
10012c36:	lea    esi,[edi+0x1c]
10012c39:	call   0x100040e9
10012c3e:	lea    esi,[edi+0x38]
10012c41:	call   0x100040e9
10012c46:	lea    esi,[edi+0x54]
10012c49:	call   0x100040e9
10012c4e:	lea    esi,[edi+0x70]
10012c51:	call   0x100040e9
10012c56:	mov    eax,edi
10012c58:	pop    esi
10012c59:	ret    
10012c5a:	push   0x0
10012c5c:	mov    eax,0x1006062b
10012c61:	call   0x10059c75
10012c66:	mov    edi,DWORD PTR [ebp+0x8]
10012c69:	mov    esi,edi
10012c6b:	call   0x100040e9
10012c70:	xor    ebx,ebx
10012c72:	lea    esi,[edi+0x1c]
10012c75:	mov    DWORD PTR [ebp-0x4],ebx
10012c78:	call   0x100040e9
10012c7d:	lea    esi,[edi+0x38]
10012c80:	call   0x100040e9
10012c85:	lea    esi,[edi+0x54]
10012c88:	call   0x100040e9
10012c8d:	lea    esi,[edi+0x70]
10012c90:	call   0x100040e9
10012c95:	push   0xffffffff
10012c97:	push   ebx
10012c98:	push   DWORD PTR [ebp+0xc]
10012c9b:	mov    ecx,edi
10012c9d:	mov    BYTE PTR [ebp-0x4],0x4
10012ca1:	call   0x10001245
10012ca6:	push   0xffffffff
10012ca8:	push   ebx
10012ca9:	push   DWORD PTR [ebp+0x10]
10012cac:	lea    ecx,[edi+0x1c]
10012caf:	call   0x10001245
10012cb4:	push   0xffffffff
10012cb6:	push   ebx
10012cb7:	push   DWORD PTR [ebp+0x14]
10012cba:	lea    ecx,[edi+0x38]
10012cbd:	call   0x10001245
10012cc2:	push   0xffffffff
10012cc4:	push   ebx
10012cc5:	push   DWORD PTR [ebp+0x18]
10012cc8:	lea    ecx,[edi+0x54]
10012ccb:	call   0x10001245
10012cd0:	push   0xffffffff
10012cd2:	push   ebx
10012cd3:	push   DWORD PTR [ebp+0x1c]
10012cd6:	mov    ecx,esi
10012cd8:	call   0x10001245
10012cdd:	mov    eax,edi
10012cdf:	call   0x10059d4d
10012ce4:	ret    0x18
10012ce7:	push   0x94
10012cec:	mov    eax,0x100605cf
10012cf1:	call   0x10059cde
10012cf6:	and    DWORD PTR [ebp-0xa0],0x0
10012cfd:	push   0xffffffff
10012cff:	push   DWORD PTR ds:0x10080dc4
10012d05:	mov    edi,ecx
10012d07:	call   DWORD PTR ds:0x10066084
10012d0d:	test   eax,eax
10012d0f:	jne    0x10012d4b
10012d11:	lea    eax,[ebp-0x9c]
10012d17:	push   eax
10012d18:	mov    ecx,0x10080dc8
10012d1d:	call   0x10012d58
10012d22:	and    DWORD PTR [ebp-0x4],0x0
10012d26:	push   DWORD PTR ds:0x10080dc4
10012d2c:	call   DWORD PTR ds:0x10066094
10012d32:	push   edi
10012d33:	lea    ecx,[ebp-0x9c]
10012d39:	call   0x10012d58
10012d3e:	lea    esi,[ebp-0x9c]
10012d44:	call   0x1000bdb4
10012d49:	jmp    0x10012d50
10012d4b:	call   0x10012c2e
10012d50:	mov    eax,edi
10012d52:	call   0x10059d61
10012d57:	ret    
10012d58:	push   0x0
10012d5a:	mov    eax,0x1005febd
10012d5f:	call   0x10059c75
10012d64:	mov    edi,ecx
10012d66:	mov    esi,DWORD PTR [ebp+0x8]
10012d69:	push   edi
10012d6a:	mov    ecx,esi
10012d6c:	call   0x100011ab
10012d71:	and    DWORD PTR [ebp-0x4],0x0
10012d75:	lea    eax,[edi+0x1c]
10012d78:	push   eax
10012d79:	lea    ecx,[esi+0x1c]
10012d7c:	call   0x100011ab
10012d81:	lea    eax,[edi+0x38]
10012d84:	push   eax
10012d85:	lea    ecx,[esi+0x38]
10012d88:	mov    BYTE PTR [ebp-0x4],0x1
10012d8c:	call   0x100011ab
10012d91:	lea    eax,[edi+0x54]
10012d94:	push   eax
10012d95:	lea    ecx,[esi+0x54]
10012d98:	mov    BYTE PTR [ebp-0x4],0x2
10012d9c:	call   0x100011ab
10012da1:	add    edi,0x70
10012da4:	push   edi
10012da5:	lea    ecx,[esi+0x70]
10012da8:	mov    BYTE PTR [ebp-0x4],0x3
10012dac:	call   0x100011ab
10012db1:	mov    eax,esi
10012db3:	call   0x10059d4d
10012db8:	ret    0x4
10012dbb:	push   ebx
10012dbc:	push   esi
10012dbd:	push   edi
10012dbe:	push   0xffffffff
10012dc0:	xor    ebx,ebx
10012dc2:	mov    esi,eax
10012dc4:	push   ebx
10012dc5:	mov    edi,0x10080dc8
10012dca:	push   esi
10012dcb:	mov    ecx,edi
10012dcd:	call   0x10001245
10012dd2:	push   0xffffffff
10012dd4:	push   ebx
10012dd5:	lea    eax,[esi+0x1c]
10012dd8:	push   eax
10012dd9:	mov    ecx,0x10080de4
10012dde:	call   0x10001245
10012de3:	push   0xffffffff
10012de5:	push   ebx
10012de6:	lea    eax,[esi+0x38]
10012de9:	push   eax
10012dea:	mov    ecx,0x10080e00
10012def:	call   0x10001245
10012df4:	push   0xffffffff
10012df6:	push   ebx
10012df7:	lea    eax,[esi+0x54]
10012dfa:	push   eax
10012dfb:	mov    ecx,0x10080e1c
10012e00:	call   0x10001245
10012e05:	push   0xffffffff
10012e07:	push   ebx
10012e08:	add    esi,0x70
10012e0b:	push   esi
10012e0c:	mov    ecx,0x10080e38
10012e11:	call   0x10001245
10012e16:	mov    eax,edi
10012e18:	pop    edi
10012e19:	pop    esi
10012e1a:	pop    ebx
10012e1b:	ret    
10012e1c:	push   esi
10012e1d:	mov    esi,edi
10012e1f:	call   0x100040e9
10012e24:	lea    esi,[edi+0x1c]
10012e27:	call   0x100040e9
10012e2c:	lea    esi,[edi+0x38]
10012e2f:	call   0x100040e9
10012e34:	lea    esi,[edi+0x54]
10012e37:	call   0x100040e9
10012e3c:	xor    eax,eax
10012e3e:	mov    DWORD PTR [edi+0x70],eax
10012e41:	mov    DWORD PTR [edi+0x80],eax
10012e47:	mov    DWORD PTR [edi+0x84],eax
10012e4d:	mov    eax,edi
10012e4f:	pop    esi
10012e50:	ret    
10012e51:	push   0x38
10012e53:	mov    eax,0x10062da3
10012e58:	call   0x10059c75
10012e5d:	push   DWORD PTR [ebp+0xc]
10012e60:	lea    esi,[ebp-0x44]
10012e63:	call   0x10030580
10012e68:	pop    ecx
10012e69:	lea    ecx,[ebp-0x28]
10012e6c:	push   ecx
10012e6d:	xor    esi,esi
10012e6f:	mov    ecx,eax
10012e71:	mov    DWORD PTR [ebp-0x4],esi
10012e74:	call   0x1002fce0
10012e79:	pop    ecx
10012e7a:	push   DWORD PTR [ebp+0x10]
10012e7d:	mov    BYTE PTR [ebp-0x4],0x1
10012e81:	push   eax
10012e82:	push   DWORD PTR [ebp+0x8]
10012e85:	call   0x10013331
10012e8a:	push   esi
10012e8b:	push   0x1
10012e8d:	lea    ecx,[ebp-0x28]
10012e90:	mov    bl,al
10012e92:	call   0x100012f4
10012e97:	push   esi
10012e98:	push   0x1
10012e9a:	lea    ecx,[ebp-0x44]
10012e9d:	call   0x100012f4
10012ea2:	mov    al,bl
10012ea4:	call   0x10059d4d
10012ea9:	ret    0xc
10012eac:	push   0x104
10012eb1:	mov    eax,0x10062d6b
10012eb6:	call   0x10059cde
10012ebb:	mov    eax,DWORD PTR [ebp+0x8]
10012ebe:	mov    DWORD PTR [ebp-0xf0],eax
10012ec4:	mov    eax,DWORD PTR [ebp+0xc]
10012ec7:	push   eax
10012ec8:	lea    esi,[ebp-0x110]
10012ece:	mov    DWORD PTR [ebp-0xf4],ecx
10012ed4:	call   0x10030580
10012ed9:	pop    ecx
10012eda:	and    DWORD PTR [ebp-0x4],0x0
10012ede:	lea    ecx,[ebp-0x60]
10012ee1:	push   ecx
10012ee2:	mov    ecx,eax
10012ee4:	call   0x1002fce0
10012ee9:	pop    ecx
10012eea:	push   0x0
10012eec:	push   0x1
10012eee:	mov    ecx,esi
10012ef0:	call   0x100012f4
10012ef5:	lea    edi,[ebp-0xec]
10012efb:	call   0x10012e1c
10012f00:	mov    eax,edi
10012f02:	push   eax
10012f03:	lea    eax,[ebp-0x60]
10012f06:	push   eax
10012f07:	push   DWORD PTR [ebp-0xf0]
10012f0d:	mov    BYTE PTR [ebp-0x4],0x3
10012f11:	call   0x10013331
10012f16:	test   al,al
10012f18:	je     0x10012fd6
10012f1e:	push   0x1006cd08
10012f23:	lea    esi,[ebp-0xd0]
10012f29:	call   0x100065b3
10012f2e:	test   al,al
10012f30:	pop    ecx
10012f31:	jne    0x10012fa5
10012f33:	mov    eax,esi
10012f35:	push   eax
10012f36:	lea    ecx,[ebp-0x44]
10012f39:	call   0x100011ab
10012f3e:	mov    eax,DWORD PTR [ebx]
10012f40:	mov    DWORD PTR [ebp-0x24],eax
10012f43:	mov    eax,DWORD PTR [ebx+0x4]
10012f46:	mov    DWORD PTR [ebp-0x20],eax
10012f49:	mov    eax,DWORD PTR [ebp-0xf4]
10012f4f:	mov    ecx,DWORD PTR [eax]
10012f51:	mov    eax,DWORD PTR [eax+0x4]
10012f54:	mov    DWORD PTR [ebp-0x1c],ecx
10012f57:	mov    DWORD PTR [ebp-0x18],eax
10012f5a:	sub    esp,0x30
10012f5d:	mov    esi,esp
10012f5f:	lea    eax,[ebp-0x44]
10012f62:	mov    DWORD PTR [ebp-0xf4],esp
10012f68:	push   eax
10012f69:	mov    ecx,esi
10012f6b:	mov    BYTE PTR [ebp-0x4],0x4
10012f6f:	call   0x100011ab
10012f74:	mov    eax,DWORD PTR [ebp-0x24]
10012f77:	mov    ecx,DWORD PTR [ebp-0xf0]
10012f7d:	mov    DWORD PTR [esi+0x20],eax
10012f80:	mov    eax,DWORD PTR [ebp-0x20]
10012f83:	mov    DWORD PTR [esi+0x24],eax
10012f86:	mov    eax,DWORD PTR [ebp-0x1c]
10012f89:	mov    DWORD PTR [esi+0x28],eax
10012f8c:	mov    eax,DWORD PTR [ebp-0x18]
10012f8f:	mov    DWORD PTR [esi+0x2c],eax
10012f92:	call   0x1001437f
10012f97:	push   0x0
10012f99:	push   0x1
10012f9b:	lea    ecx,[ebp-0x44]
10012f9e:	call   0x100012f4
10012fa3:	jmp    0x10012fd6
10012fa5:	mov    eax,DWORD PTR [ebx]
10012fa7:	mov    DWORD PTR [ebp-0x74],eax
10012faa:	mov    eax,DWORD PTR [ebx+0x4]
10012fad:	mov    DWORD PTR [ebp-0x70],eax
10012fb0:	mov    eax,DWORD PTR [ebp-0xf4]
10012fb6:	mov    ecx,DWORD PTR [eax]
10012fb8:	mov    eax,DWORD PTR [eax+0x4]
10012fbb:	mov    DWORD PTR [ebp-0x68],eax
10012fbe:	lea    eax,[ebp-0xec]
10012fc4:	mov    DWORD PTR [ebp-0x6c],ecx
10012fc7:	mov    ecx,DWORD PTR [ebp-0xf0]
10012fcd:	push   eax
10012fce:	lea    edx,[ebp-0x60]
10012fd1:	call   0x100130a1
10012fd6:	lea    esi,[ebp-0xec]
10012fdc:	call   0x10003431
10012fe1:	push   0x0
10012fe3:	push   0x1
10012fe5:	lea    ecx,[ebp-0x60]
10012fe8:	call   0x100012f4
10012fed:	call   0x10059d61
10012ff2:	ret    0x8
10012ff5:	push   0x0
10012ff7:	mov    eax,0x100620bf
10012ffc:	call   0x10059c75
10013001:	call   0x100142a4
10013006:	mov    ds:0x10080e58,eax
1001300b:	mov    BYTE PTR [eax+0xc1],0x1
10013012:	mov    eax,ds:0x10080e58
10013017:	mov    DWORD PTR [eax+0x4],eax
1001301a:	mov    eax,ds:0x10080e58
1001301f:	mov    DWORD PTR [eax],eax
10013021:	mov    eax,ds:0x10080e58
10013026:	xor    edi,edi
10013028:	mov    DWORD PTR [eax+0x8],eax
1001302b:	mov    DWORD PTR ds:0x10080e5c,edi
10013031:	mov    esi,0x10080e60
10013036:	mov    DWORD PTR [esp+0x18],edi
1001303a:	call   0x1001404c
1001303f:	push   edi
10013040:	push   edi
10013041:	push   edi
10013042:	mov    DWORD PTR ds:0x10080e70,0x14
1001304c:	mov    DWORD PTR ds:0x10080e74,0x96
10013056:	call   DWORD PTR ds:0x10066074
1001305c:	mov    ds:0x10080e6c,eax
10013061:	mov    eax,0x10080e54
10013066:	call   0x10059d4d
1001306b:	ret    
1001306c:	push   0x0
1001306e:	mov    eax,0x100620bf
10013073:	call   0x10059c75
10013078:	and    DWORD PTR [ebp-0x4],0x0
1001307c:	push   DWORD PTR ds:0x10080e6c
10013082:	call   DWORD PTR ds:0x10066070
10013088:	mov    eax,0x10080e60
1001308d:	call   0x1000149a
10013092:	or     DWORD PTR [ebp-0x4],0xffffffff
10013096:	call   0x10013f4d
1001309b:	call   0x10059d4d
100130a0:	ret    
100130a1:	push   0x228
100130a6:	mov    eax,0x10062092
100130ab:	call   0x10059d14
100130b0:	mov    eax,DWORD PTR [ebp+0x8]
100130b3:	mov    edi,ecx
100130b5:	push   0x1f4
100130ba:	push   DWORD PTR [edi+0x18]
100130bd:	mov    esi,edx
100130bf:	mov    DWORD PTR [ebp-0xbc],edi
100130c5:	mov    DWORD PTR [ebp-0xc4],esi
100130cb:	mov    DWORD PTR [ebp-0xc0],eax
100130d1:	call   DWORD PTR ds:0x10066084
100130d7:	test   eax,eax
100130d9:	jne    0x100131d9
100130df:	and    DWORD PTR [ebp-0x4],eax
100130e2:	push   edi
100130e3:	call   0x1001364e
100130e8:	push   esi
100130e9:	lea    ebx,[ebp-0xb8]
100130ef:	mov    esi,edi
100130f1:	call   0x100138ea
100130f6:	cmp    DWORD PTR [ebp-0xb8],0x0
100130fd:	mov    ebx,DWORD PTR [edi+0x4]
10013100:	je     0x1001310a
10013102:	cmp    DWORD PTR [ebp-0xb8],edi
10013108:	je     0x1001310f
1001310a:	call   0x100435f0
1001310f:	mov    esi,DWORD PTR [ebp-0xb4]
10013115:	cmp    esi,ebx
10013117:	je     0x100131e1
1001311d:	and    DWORD PTR [ebp-0xd0],0x0
10013124:	lea    ebx,[edi+0xc]
10013127:	mov    eax,DWORD PTR [ebx+0x4]
1001312a:	mov    DWORD PTR [ebp-0xc8],eax
10013130:	lea    eax,[ebp-0xd0]
10013136:	mov    DWORD PTR [ebp-0xcc],ebx
1001313c:	call   0x10013942
10013141:	mov    eax,DWORD PTR [eax]
10013143:	mov    edi,DWORD PTR [ebp-0xb8]
10013149:	inc    eax
1001314a:	test   edi,edi
1001314c:	mov    DWORD PTR [ebp-0xb0],eax
10013152:	jne    0x10013159
10013154:	call   0x100435f0
10013159:	cmp    esi,DWORD PTR [edi+0x4]
1001315c:	jne    0x10013163
1001315e:	call   0x100435f0
10013163:	lea    edx,[esi+0xb8]
10013169:	mov    eax,ebx
1001316b:	mov    DWORD PTR [ebp-0xc4],edx
10013171:	call   0x100135a4
10013176:	lea    eax,[ebp-0xb0]
1001317c:	push   eax
1001317d:	lea    edi,[ebp-0xd0]
10013183:	call   0x100134eb
10013188:	mov    eax,DWORD PTR [ebp-0xb8]
1001318e:	cmp    esi,DWORD PTR [eax+0x4]
10013191:	jne    0x10013198
10013193:	call   0x100435f0
10013198:	mov    edi,DWORD PTR [ebp-0xc0]
1001319e:	add    esi,0x30
100131a1:	call   0x100133d8
100131a6:	mov    eax,DWORD PTR [ebp-0xb4]
100131ac:	mov    ecx,DWORD PTR [ebp-0xb8]
100131b2:	cmp    eax,DWORD PTR [ecx+0x4]
100131b5:	jne    0x100131bc
100131b7:	call   0x100435f0
100131bc:	mov    eax,DWORD PTR [ebp-0xb0]
100131c2:	mov    ecx,DWORD PTR [ebp-0xc4]
100131c8:	mov    DWORD PTR [ecx],eax
100131ca:	mov    eax,DWORD PTR [ebp-0xbc]
100131d0:	push   DWORD PTR [eax+0x18]
100131d3:	call   DWORD PTR ds:0x10066094
100131d9:	call   0x10059d70
100131de:	ret    0x4
100131e1:	lea    edi,[ebp-0xac]
100131e7:	call   0x10012e1c
100131ec:	mov    eax,DWORD PTR [ebp-0xbc]
100131f2:	mov    BYTE PTR [ebp-0x4],0x1
100131f6:	cmp    DWORD PTR [eax+0x14],0x0
100131fa:	je     0x10013225
100131fc:	mov    ecx,DWORD PTR [eax+0x10]
100131ff:	and    DWORD PTR [ebp-0xd0],0x0
10013206:	add    eax,0xc
10013209:	mov    DWORD PTR [ebp-0xcc],eax
1001320f:	lea    eax,[ebp-0xd0]
10013215:	mov    DWORD PTR [ebp-0xc8],ecx
1001321b:	call   0x10013942
10013220:	mov    eax,DWORD PTR [eax]
10013222:	inc    eax
10013223:	jmp    0x10013227
10013225:	xor    eax,eax
10013227:	mov    edi,DWORD PTR [ebp-0xc0]
1001322d:	lea    esi,[ebp-0xac]
10013233:	mov    DWORD PTR [ebp-0xb0],eax
10013239:	mov    DWORD PTR [ebp-0x24],eax
1001323c:	call   0x100133d8
10013241:	sub    esp,0x90
10013247:	mov    esi,esp
10013249:	mov    DWORD PTR [ebp-0xc0],esp
1001324f:	push   esi
10013250:	lea    edi,[ebp-0xac]
10013256:	call   0x10013470
1001325b:	mov    eax,DWORD PTR [ebp-0x24]
1001325e:	mov    DWORD PTR [esi+0x88],eax
10013264:	sub    esp,0x1c
10013267:	mov    BYTE PTR [ebp-0x4],0x2
1001326b:	mov    ecx,esp
1001326d:	mov    DWORD PTR [ebp-0xb4],esp
10013273:	push   DWORD PTR [ebp-0xc4]
10013279:	call   0x100011ab
1001327e:	lea    ebx,[ebp-0x234]
10013284:	mov    BYTE PTR [ebp-0x4],0x1
10013288:	call   0x1001448a
1001328d:	add    esp,0xac
10013293:	mov    esi,eax
10013295:	push   esi
10013296:	lea    ecx,[ebp-0x184]
1001329c:	mov    BYTE PTR [ebp-0x4],0x3
100132a0:	call   0x100011ab
100132a5:	lea    eax,[esi+0x20]
100132a8:	lea    esi,[ebp-0x164]
100132ae:	mov    BYTE PTR [ebp-0x4],0x4
100132b2:	call   0x10013441
100132b7:	mov    ebx,DWORD PTR [ebp-0xbc]
100132bd:	lea    eax,[ebp-0x184]
100132c3:	push   eax
100132c4:	push   ebx
100132c5:	lea    edi,[ebp-0xd0]
100132cb:	mov    BYTE PTR [ebp-0x4],0x5
100132cf:	call   0x100137d8
100132d4:	call   0x10003431
100132d9:	push   0x0
100132db:	push   0x1
100132dd:	lea    ecx,[ebp-0x184]
100132e3:	call   0x100012f4
100132e8:	lea    esi,[ebp-0x214]
100132ee:	mov    BYTE PTR [ebp-0x4],0x1
100132f2:	call   0x10003431
100132f7:	push   0x0
100132f9:	push   0x1
100132fb:	lea    ecx,[ebp-0x234]
10013301:	call   0x100012f4
10013306:	lea    eax,[ebp-0xb0]
1001330c:	push   eax
1001330d:	add    ebx,0xc
10013310:	lea    edi,[ebp-0xd0]
10013316:	call   0x100134eb
1001331b:	lea    esi,[ebp-0xac]
10013321:	call   0x10003431
10013326:	jmp    0x100131ca
1001332b:	mov    eax,0x100131ca
10013330:	ret    
10013331:	push   0x10
10013333:	mov    eax,0x10062d2a
10013338:	call   0x10059ca8
1001333d:	mov    esi,DWORD PTR [ebp+0x8]
10013340:	push   0x1f4
10013345:	push   DWORD PTR [esi+0x18]
10013348:	mov    BYTE PTR [ebp-0x11],0x0
1001334c:	call   DWORD PTR ds:0x10066084
10013352:	test   eax,eax
10013354:	je     0x1001335a
10013356:	xor    al,al
10013358:	jmp    0x100133b8
1001335a:	push   DWORD PTR [ebp+0xc]
1001335d:	and    DWORD PTR [ebp-0x4],0x0
10013361:	lea    ebx,[ebp-0x1c]
10013364:	call   0x100138ea
10013369:	mov    ebx,DWORD PTR [ebp-0x1c]
1001336c:	test   ebx,ebx
1001336e:	mov    edi,DWORD PTR [esi+0x4]
10013371:	je     0x10013377
10013373:	cmp    ebx,esi
10013375:	je     0x1001337c
10013377:	call   0x100435f0
1001337c:	cmp    DWORD PTR [ebp-0x18],edi
1001337f:	je     0x100133ac
10013381:	test   ebx,ebx
10013383:	jne    0x1001338a
10013385:	call   0x100435f0
1001338a:	mov    eax,DWORD PTR [ebp-0x18]
1001338d:	cmp    eax,DWORD PTR [ebx+0x4]
10013390:	jne    0x10013397
10013392:	call   0x100435f0
10013397:	mov    edi,DWORD PTR [ebp-0x18]
1001339a:	mov    esi,DWORD PTR [ebp+0x10]
1001339d:	add    edi,0x30
100133a0:	call   0x100133d8
100133a5:	mov    BYTE PTR [ebp-0x11],0x1
100133a9:	mov    esi,DWORD PTR [ebp+0x8]
100133ac:	push   DWORD PTR [esi+0x18]
100133af:	call   DWORD PTR ds:0x10066094
100133b5:	mov    al,BYTE PTR [ebp-0x11]
100133b8:	call   0x10059d4d
100133bd:	ret    0xc
100133c0:	push   0x4
100133c2:	call   0x10037b70
100133c7:	pop    ecx
100133c8:	mov    eax,0x100133a9
100133cd:	ret    
100133ce:	jmp    0x10013f4d
100133d3:	jmp    0x10003431
100133d8:	push   0xffffffff
100133da:	push   0x0
100133dc:	push   edi
100133dd:	mov    ecx,esi
100133df:	call   0x10001245
100133e4:	push   0xffffffff
100133e6:	push   0x0
100133e8:	lea    eax,[edi+0x1c]
100133eb:	push   eax
100133ec:	lea    ecx,[esi+0x1c]
100133ef:	call   0x10001245
100133f4:	push   0xffffffff
100133f6:	push   0x0
100133f8:	lea    eax,[edi+0x38]
100133fb:	push   eax
100133fc:	lea    ecx,[esi+0x38]
100133ff:	call   0x10001245
10013404:	push   0xffffffff
10013406:	push   0x0
10013408:	lea    eax,[edi+0x54]
1001340b:	push   eax
1001340c:	lea    ecx,[esi+0x54]
1001340f:	call   0x10001245
10013414:	mov    eax,DWORD PTR [edi+0x70]
10013417:	mov    DWORD PTR [esi+0x70],eax
1001341a:	mov    eax,DWORD PTR [edi+0x78]
1001341d:	mov    DWORD PTR [esi+0x78],eax
10013420:	mov    eax,DWORD PTR [edi+0x7c]
10013423:	mov    DWORD PTR [esi+0x7c],eax
10013426:	mov    eax,DWORD PTR [edi+0x80]
1001342c:	mov    DWORD PTR [esi+0x80],eax
10013432:	mov    eax,DWORD PTR [edi+0x84]
10013438:	mov    DWORD PTR [esi+0x84],eax
1001343e:	mov    eax,esi
10013440:	ret    
10013441:	push   edi
10013442:	mov    edi,eax
10013444:	push   esi
10013445:	call   0x10013470
1001344a:	mov    eax,DWORD PTR [edi+0x88]
10013450:	mov    DWORD PTR [esi+0x88],eax
10013456:	mov    eax,esi
10013458:	pop    edi
10013459:	ret    
1001345a:	push   esi
1001345b:	lea    esi,[edi+0x20]
1001345e:	call   0x10003431
10013463:	push   0x0
10013465:	push   0x1
10013467:	mov    ecx,edi
10013469:	call   0x100012f4
1001346e:	pop    esi
1001346f:	ret    
10013470:	push   0x0
10013472:	mov    eax,0x1005fe79
10013477:	call   0x10059c75
1001347c:	mov    esi,DWORD PTR [ebp+0x8]
1001347f:	push   edi
10013480:	mov    ecx,esi
10013482:	call   0x100011ab
10013487:	and    DWORD PTR [ebp-0x4],0x0
1001348b:	lea    eax,[edi+0x1c]
1001348e:	push   eax
1001348f:	lea    ecx,[esi+0x1c]
10013492:	call   0x100011ab
10013497:	lea    eax,[edi+0x38]
1001349a:	push   eax
1001349b:	lea    ecx,[esi+0x38]
1001349e:	mov    BYTE PTR [ebp-0x4],0x1
100134a2:	call   0x100011ab
100134a7:	lea    eax,[edi+0x54]
100134aa:	push   eax
100134ab:	lea    ecx,[esi+0x54]
100134ae:	mov    BYTE PTR [ebp-0x4],0x2
100134b2:	call   0x100011ab
100134b7:	mov    eax,DWORD PTR [edi+0x70]
100134ba:	mov    DWORD PTR [esi+0x70],eax
100134bd:	mov    eax,DWORD PTR [edi+0x78]
100134c0:	mov    DWORD PTR [esi+0x78],eax
100134c3:	mov    eax,DWORD PTR [edi+0x7c]
100134c6:	mov    DWORD PTR [esi+0x7c],eax
100134c9:	mov    eax,DWORD PTR [edi+0x80]
100134cf:	mov    DWORD PTR [esi+0x80],eax
100134d5:	mov    eax,DWORD PTR [edi+0x84]
100134db:	mov    DWORD PTR [esi+0x84],eax
100134e1:	mov    eax,esi
100134e3:	call   0x10059d4d
100134e8:	ret    0x4
100134eb:	push   ebp
100134ec:	mov    ebp,esp
100134ee:	and    esp,0xfffffff8
100134f1:	sub    esp,0x14
100134f4:	mov    ecx,DWORD PTR [ebx+0x4]
100134f7:	mov    eax,DWORD PTR [ecx+0x4]
100134fa:	cmp    BYTE PTR [eax+0x11],0x0
100134fe:	push   esi
100134ff:	mov    DWORD PTR [esp+0xc],ecx
10013503:	mov    BYTE PTR [esp+0x8],0x1
10013508:	jne    0x1001352f
1001350a:	mov    ecx,DWORD PTR [ebp+0x8]
1001350d:	mov    esi,DWORD PTR [ecx]
1001350f:	cmp    esi,DWORD PTR [eax+0xc]
10013512:	mov    DWORD PTR [esp+0xc],eax
10013516:	setb   BYTE PTR [esp+0x8]
1001351b:	cmp    BYTE PTR [esp+0x8],0x0
10013520:	je     0x10013526
10013522:	mov    eax,DWORD PTR [eax]
10013524:	jmp    0x10013529
10013526:	mov    eax,DWORD PTR [eax+0x8]
10013529:	cmp    BYTE PTR [eax+0x11],0x0
1001352d:	je     0x1001350f
1001352f:	cmp    BYTE PTR [esp+0x8],0x0
10013534:	mov    eax,DWORD PTR [esp+0xc]
10013538:	mov    DWORD PTR [esp+0x14],eax
1001353c:	mov    DWORD PTR [esp+0x10],ebx
10013540:	je     0x10013574
10013542:	mov    ecx,DWORD PTR [ebx+0x4]
10013545:	cmp    eax,DWORD PTR [ecx]
10013547:	jne    0x10013567
10013549:	push   DWORD PTR [ebp+0x8]
1001354c:	lea    ecx,[esp+0x14]
10013550:	push   0x1
10013552:	push   ecx
10013553:	mov    ecx,eax
10013555:	mov    esi,ebx
10013557:	call   0x10013966
1001355c:	mov    ecx,DWORD PTR [eax]
1001355e:	mov    eax,DWORD PTR [eax+0x4]
10013561:	mov    BYTE PTR [edi+0x8],0x1
10013565:	jmp    0x10013596
10013567:	lea    esi,[esp+0x10]
1001356b:	call   0x10013feb
10013570:	mov    eax,DWORD PTR [esp+0x14]
10013574:	mov    edx,DWORD PTR [eax+0xc]
10013577:	mov    ecx,DWORD PTR [ebp+0x8]
1001357a:	cmp    edx,DWORD PTR [ecx]
1001357c:	jae    0x1001358e
1001357e:	push   ecx
1001357f:	push   DWORD PTR [esp+0xc]
10013583:	mov    ecx,DWORD PTR [esp+0x14]
10013587:	lea    eax,[esp+0x18]
1001358b:	push   eax
1001358c:	jmp    0x10013555
1001358e:	mov    ecx,DWORD PTR [esp+0x10]
10013592:	mov    BYTE PTR [edi+0x8],0x0
10013596:	mov    DWORD PTR [edi+0x4],eax
10013599:	mov    DWORD PTR [edi],ecx
1001359b:	mov    eax,edi
1001359d:	pop    esi
1001359e:	mov    esp,ebp
100135a0:	pop    ebp
100135a1:	ret    0x4
100135a4:	push   ebp
100135a5:	mov    ebp,esp
100135a7:	and    esp,0xfffffff8
100135aa:	sub    esp,0x14
100135ad:	push   ebx
100135ae:	push   esi
100135af:	push   edi
100135b0:	mov    edi,eax
100135b2:	mov    ecx,DWORD PTR [edi+0x4]
100135b5:	mov    eax,DWORD PTR [ecx+0x4]
100135b8:	cmp    BYTE PTR [eax+0x11],0x0
100135bc:	mov    DWORD PTR [esp+0x14],ecx
100135c0:	jne    0x100135da
100135c2:	mov    ecx,DWORD PTR [edx]
100135c4:	cmp    ecx,DWORD PTR [eax+0xc]
100135c7:	jae    0x100135d1
100135c9:	mov    DWORD PTR [esp+0x14],eax
100135cd:	mov    eax,DWORD PTR [eax]
100135cf:	jmp    0x100135d4
100135d1:	mov    eax,DWORD PTR [eax+0x8]
100135d4:	cmp    BYTE PTR [eax+0x11],0x0
100135d8:	je     0x100135c4
100135da:	mov    ecx,DWORD PTR [edi+0x4]
100135dd:	mov    eax,DWORD PTR [ecx+0x4]
100135e0:	cmp    BYTE PTR [eax+0x11],0x0
100135e4:	mov    ebx,ecx
100135e6:	jne    0x100135fe
100135e8:	mov    ecx,DWORD PTR [edx]
100135ea:	cmp    DWORD PTR [eax+0xc],ecx
100135ed:	jae    0x100135f4
100135ef:	mov    eax,DWORD PTR [eax+0x8]
100135f2:	jmp    0x100135f8
100135f4:	mov    ebx,eax
100135f6:	mov    eax,DWORD PTR [eax]
100135f8:	cmp    BYTE PTR [eax+0x11],0x0
100135fc:	je     0x100135ea
100135fe:	and    DWORD PTR [esp+0x10],0x0
10013603:	mov    DWORD PTR [esp+0x18],edi
10013607:	mov    DWORD PTR [esp+0x1c],ebx
1001360b:	cmp    DWORD PTR [esp+0x18],0x0
10013610:	je     0x10013618
10013612:	cmp    DWORD PTR [esp+0x18],edi
10013616:	je     0x1001361d
10013618:	call   0x100435f0
1001361d:	mov    eax,DWORD PTR [esp+0x14]
10013621:	cmp    DWORD PTR [esp+0x1c],eax
10013625:	je     0x10013636
10013627:	inc    DWORD PTR [esp+0x10]
1001362b:	lea    esi,[esp+0x18]
1001362f:	call   0x10001e75
10013634:	jmp    0x1001360b
10013636:	push   eax
10013637:	push   edi
10013638:	push   ebx
10013639:	push   edi
1001363a:	lea    ebx,[esp+0x28]
1001363e:	call   0x1000161a
10013643:	mov    eax,DWORD PTR [esp+0x10]
10013647:	pop    edi
10013648:	pop    esi
10013649:	pop    ebx
1001364a:	mov    esp,ebp
1001364c:	pop    ebp
1001364d:	ret    
1001364e:	push   ebp
1001364f:	mov    ebp,esp
10013651:	and    esp,0xfffffff8
10013654:	push   0xffffffff
10013656:	push   0x10062040
1001365b:	mov    eax,fs:0x0
10013661:	push   eax
10013662:	sub    esp,0x40
10013665:	push   ebx
10013666:	push   esi
10013667:	push   edi
10013668:	mov    eax,ds:0x1007e030
1001366d:	xor    eax,esp
1001366f:	push   eax
10013670:	lea    eax,[esp+0x50]
10013674:	mov    fs:0x0,eax
1001367a:	mov    edi,DWORD PTR [ebp+0x8]
1001367d:	mov    ecx,DWORD PTR [edi+0x1c]
10013680:	mov    edx,DWORD PTR [edi+0x20]
10013683:	mov    eax,DWORD PTR [edi+0x8]
10013686:	add    edx,ecx
10013688:	cmp    eax,edx
1001368a:	jbe    0x100137c3
10013690:	and    DWORD PTR [esp+0x14],0x0
10013695:	test   ecx,ecx
10013697:	lea    ebx,[edi+0xc]
1001369a:	mov    eax,DWORD PTR [ebx+0x4]
1001369d:	mov    eax,DWORD PTR [eax]
1001369f:	mov    DWORD PTR [esp+0x18],ebx
100136a3:	mov    DWORD PTR [esp+0x1c],ebx
100136a7:	mov    DWORD PTR [esp+0x20],eax
100136ab:	je     0x100136c3
100136ad:	lea    esi,[esp+0x1c]
100136b1:	call   0x10001e75
100136b6:	inc    DWORD PTR [esp+0x14]
100136ba:	mov    eax,DWORD PTR [esp+0x14]
100136be:	cmp    eax,DWORD PTR [edi+0x1c]
100136c1:	jne    0x100136ad
100136c3:	lea    esi,[esp+0x1c]
100136c7:	call   0x1000cedb
100136cc:	mov    eax,DWORD PTR [eax]
100136ce:	mov    DWORD PTR [esp+0x14],eax
100136d2:	call   0x1001427a
100136d7:	mov    DWORD PTR [esp+0x38],eax
100136db:	mov    BYTE PTR [eax+0x11],0x1
100136df:	mov    eax,DWORD PTR [esp+0x38]
100136e3:	mov    DWORD PTR [eax+0x4],eax
100136e6:	mov    eax,DWORD PTR [esp+0x38]
100136ea:	mov    DWORD PTR [eax],eax
100136ec:	mov    eax,DWORD PTR [esp+0x38]
100136f0:	mov    DWORD PTR [eax+0x8],eax
100136f3:	and    DWORD PTR [esp+0x3c],0x0
100136f8:	and    DWORD PTR [esp+0x58],0x0
100136fd:	mov    eax,DWORD PTR [edi+0x4]
10013700:	mov    esi,DWORD PTR [eax]
10013702:	mov    DWORD PTR [esp+0x1c],edi
10013706:	mov    DWORD PTR [esp+0x20],esi
1001370a:	cmp    DWORD PTR [esp+0x1c],0x0
1001370f:	mov    eax,DWORD PTR [edi+0x4]
10013712:	mov    DWORD PTR [esp+0x28],eax
10013716:	je     0x1001371e
10013718:	cmp    DWORD PTR [esp+0x1c],edi
1001371c:	je     0x10013723
1001371e:	call   0x100435f0
10013723:	cmp    esi,DWORD PTR [esp+0x28]
10013727:	je     0x10013799
10013729:	cmp    DWORD PTR [esp+0x1c],0x0
1001372e:	jne    0x10013735
10013730:	call   0x100435f0
10013735:	mov    eax,DWORD PTR [esp+0x1c]
10013739:	cmp    esi,DWORD PTR [eax+0x4]
1001373c:	jne    0x10013743
1001373e:	call   0x100435f0
10013743:	lea    ecx,[esi+0xb8]
10013749:	mov    eax,DWORD PTR [ecx]
1001374b:	cmp    eax,DWORD PTR [esp+0x14]
1001374f:	jae    0x1001376c
10013751:	push   esi
10013752:	push   DWORD PTR [esp+0x20]
10013756:	lea    eax,[esp+0x34]
1001375a:	push   eax
1001375b:	push   edi
1001375c:	call   0x10013ab3
10013761:	mov    ecx,DWORD PTR [eax]
10013763:	mov    esi,DWORD PTR [eax+0x4]
10013766:	mov    DWORD PTR [esp+0x1c],ecx
1001376a:	jmp    0x10013706
1001376c:	sub    eax,DWORD PTR [esp+0x14]
10013770:	push   ecx
10013771:	lea    edi,[esp+0x44]
10013775:	lea    ebx,[esp+0x38]
10013779:	mov    DWORD PTR [ecx],eax
1001377b:	call   0x100134eb
10013780:	lea    esi,[esp+0x1c]
10013784:	call   0x10013f92
10013789:	mov    esi,DWORD PTR [esp+0x20]
1001378d:	mov    ebx,DWORD PTR [esp+0x18]
10013791:	mov    edi,DWORD PTR [ebp+0x8]
10013794:	jmp    0x1001370a
10013799:	mov    eax,DWORD PTR [ebx+0x4]
1001379c:	mov    ecx,DWORD PTR [esp+0x38]
100137a0:	mov    DWORD PTR [ebx+0x4],ecx
100137a3:	mov    ecx,DWORD PTR [esp+0x3c]
100137a7:	mov    DWORD PTR [esp+0x38],eax
100137ab:	mov    eax,DWORD PTR [ebx+0x8]
100137ae:	or     DWORD PTR [esp+0x58],0xffffffff
100137b3:	mov    DWORD PTR [esp+0x3c],eax
100137b7:	lea    eax,[esp+0x34]
100137bb:	mov    DWORD PTR [ebx+0x8],ecx
100137be:	call   0x1000149a
100137c3:	mov    ecx,DWORD PTR [esp+0x50]
100137c7:	mov    DWORD PTR fs:0x0,ecx
100137ce:	pop    ecx
100137cf:	pop    edi
100137d0:	pop    esi
100137d1:	pop    ebx
100137d2:	mov    esp,ebp
100137d4:	pop    ebp
100137d5:	ret    0x4
100137d8:	push   ebp
100137d9:	mov    ebp,esp
100137db:	and    esp,0xfffffff8
100137de:	push   ecx
100137df:	push   ecx
100137e0:	mov    edx,DWORD PTR [ebp+0x8]
100137e3:	mov    eax,DWORD PTR [edx+0x4]
100137e6:	push   ebx
100137e7:	push   esi
100137e8:	mov    esi,DWORD PTR [eax+0x4]
100137eb:	cmp    BYTE PTR [esi+0xc1],0x0
100137f2:	mov    ebx,eax
100137f4:	mov    al,0x1
100137f6:	mov    BYTE PTR [esp+0x8],al
100137fa:	jne    0x10013824
100137fc:	mov    ecx,DWORD PTR [ebp+0xc]
100137ff:	lea    eax,[esi+0x10]
10013802:	mov    ebx,esi
10013804:	call   0x10007639
10013809:	test   al,al
1001380b:	mov    BYTE PTR [esp+0x8],al
1001380f:	je     0x10013815
10013811:	mov    esi,DWORD PTR [esi]
10013813:	jmp    0x10013818
10013815:	mov    esi,DWORD PTR [esi+0x8]
10013818:	cmp    BYTE PTR [esi+0xc1],0x0
1001381f:	je     0x100137fc
10013821:	mov    edx,DWORD PTR [ebp+0x8]
10013824:	test   al,al
10013826:	mov    esi,ebx
10013828:	je     0x100138b6
1001382e:	mov    eax,DWORD PTR [edx+0x4]
10013831:	cmp    ebx,DWORD PTR [eax]
10013833:	jne    0x1001385b
10013835:	push   DWORD PTR [ebp+0xc]
10013838:	mov    esi,edx
1001383a:	push   0x1
1001383c:	lea    eax,[esp+0x10]
10013840:	mov    ecx,ebx
10013842:	push   eax
10013843:	call   0x10013ddd
10013848:	mov    ecx,DWORD PTR [eax]
1001384a:	mov    eax,DWORD PTR [eax+0x4]
1001384d:	mov    DWORD PTR [edi],ecx
1001384f:	mov    DWORD PTR [edi+0x4],eax
10013852:	mov    BYTE PTR [edi+0x8],0x1
10013856:	jmp    0x100138e0
1001385b:	cmp    BYTE PTR [ebx+0xc1],0x0
10013862:	je     0x10013872
10013864:	mov    esi,DWORD PTR [ebx+0x8]
10013867:	cmp    BYTE PTR [esi+0xc1],0x0
1001386e:	je     0x100138b6
10013870:	jmp    0x100138ad
10013872:	mov    eax,DWORD PTR [ebx]
10013874:	cmp    BYTE PTR [eax+0xc1],0x0
1001387b:	jne    0x1001388d
1001387d:	mov    esi,eax
1001387f:	mov    eax,DWORD PTR [esi+0x8]
10013882:	cmp    BYTE PTR [eax+0xc1],0x0
10013889:	je     0x1001387d
1001388b:	jmp    0x100138b6
1001388d:	mov    eax,DWORD PTR [ebx+0x4]
10013890:	jmp    0x1001389b
10013892:	cmp    esi,DWORD PTR [eax]
10013894:	jne    0x100138a4
10013896:	mov    esi,eax
10013898:	mov    eax,DWORD PTR [eax+0x4]
1001389b:	cmp    BYTE PTR [eax+0xc1],0x0
100138a2:	je     0x10013892
100138a4:	cmp    BYTE PTR [esi+0xc1],0x0
100138ab:	je     0x100138b4
100138ad:	call   0x100435f0
100138b2:	jmp    0x100138b6
100138b4:	mov    esi,eax
100138b6:	mov    eax,DWORD PTR [ebp+0xc]
100138b9:	lea    ecx,[esi+0x10]
100138bc:	call   0x10007639
100138c1:	test   al,al
100138c3:	je     0x100138d4
100138c5:	push   DWORD PTR [ebp+0xc]
100138c8:	mov    esi,DWORD PTR [ebp+0x8]
100138cb:	push   DWORD PTR [esp+0xc]
100138cf:	jmp    0x1001383c
100138d4:	mov    eax,DWORD PTR [ebp+0x8]
100138d7:	mov    DWORD PTR [edi],eax
100138d9:	mov    DWORD PTR [edi+0x4],esi
100138dc:	mov    BYTE PTR [edi+0x8],0x0
100138e0:	pop    esi
100138e1:	mov    eax,edi
100138e3:	pop    ebx
100138e4:	mov    esp,ebp
100138e6:	pop    ebp
100138e7:	ret    0x8
100138ea:	push   ebp
100138eb:	mov    ebp,esp
100138ed:	sub    esp,0x18
100138f0:	push   edi
100138f1:	push   DWORD PTR [ebp+0x8]
100138f4:	mov    eax,esi
100138f6:	call   0x10014168
100138fb:	test   esi,esi
100138fd:	mov    edi,eax
100138ff:	mov    DWORD PTR [ebp-0x8],edi
10013902:	jne    0x10013909
10013904:	call   0x100435f0
10013909:	cmp    edi,DWORD PTR [esi+0x4]
1001390c:	mov    DWORD PTR [ebp-0xc],esi
1001390f:	je     0x10013925
10013911:	mov    ecx,DWORD PTR [ebp+0x8]
10013914:	lea    eax,[edi+0x10]
10013917:	call   0x10007639
1001391c:	test   al,al
1001391e:	jne    0x10013925
10013920:	lea    eax,[ebp-0xc]
10013923:	jmp    0x10013931
10013925:	mov    eax,DWORD PTR [esi+0x4]
10013928:	mov    DWORD PTR [ebp-0x10],eax
1001392b:	mov    DWORD PTR [ebp-0x14],esi
1001392e:	lea    eax,[ebp-0x14]
10013931:	mov    ecx,DWORD PTR [eax]
10013933:	mov    eax,DWORD PTR [eax+0x4]
10013936:	mov    DWORD PTR [ebx+0x4],eax
10013939:	mov    DWORD PTR [ebx],ecx
1001393b:	mov    eax,ebx
1001393d:	pop    edi
1001393e:	leave  
1001393f:	ret    0x4
10013942:	push   ebp
10013943:	mov    ebp,esp
10013945:	push   ecx
10013946:	push   ecx
10013947:	mov    ecx,DWORD PTR [eax+0x4]
1001394a:	mov    eax,DWORD PTR [eax+0x8]
1001394d:	push   esi
1001394e:	lea    esi,[ebp-0x8]
10013951:	mov    DWORD PTR [ebp-0x8],ecx
10013954:	mov    DWORD PTR [ebp-0x4],eax
10013957:	call   0x10013feb
1001395c:	mov    esi,eax
1001395e:	call   0x1000cedb
10013963:	pop    esi
10013964:	leave  
10013965:	ret    
10013966:	push   0x48
10013968:	mov    eax,0x100603a7
1001396d:	call   0x10059c75
10013972:	mov    edi,ecx
10013974:	cmp    DWORD PTR [esi+0x8],0x3ffffffe
1001397b:	jb     0x100139af
1001397d:	push   0x1006d04c
10013982:	lea    ecx,[ebp-0x2c]
10013985:	call   0x100011d1
1001398a:	and    DWORD PTR [ebp-0x4],0x0
1001398e:	lea    eax,[ebp-0x2c]
10013991:	push   eax
10013992:	lea    ecx,[ebp-0x54]
10013995:	call   0x1000106e
1001399a:	push   0x10074ec0
1001399f:	lea    eax,[ebp-0x54]
100139a2:	push   eax
100139a3:	mov    DWORD PTR [ebp-0x54],0x1006b96c
100139aa:	call   0x10047c54
100139af:	mov    eax,DWORD PTR [esi+0x4]
100139b2:	push   0x0
100139b4:	push   DWORD PTR [ebp+0x10]
100139b7:	push   eax
100139b8:	push   edi
100139b9:	push   eax
100139ba:	call   0x1001406d
100139bf:	inc    DWORD PTR [esi+0x8]
100139c2:	mov    ebx,eax
100139c4:	mov    eax,DWORD PTR [esi+0x4]
100139c7:	cmp    edi,eax
100139c9:	jne    0x100139d8
100139cb:	mov    DWORD PTR [eax+0x4],ebx
100139ce:	mov    eax,DWORD PTR [esi+0x4]
100139d1:	mov    DWORD PTR [eax],ebx
100139d3:	mov    eax,DWORD PTR [esi+0x4]
100139d6:	jmp    0x100139f6
100139d8:	cmp    BYTE PTR [ebp+0xc],0x0
100139dc:	je     0x100139eb
100139de:	mov    DWORD PTR [edi],ebx
100139e0:	mov    eax,DWORD PTR [esi+0x4]
100139e3:	cmp    edi,DWORD PTR [eax]
100139e5:	jne    0x100139f9
100139e7:	mov    DWORD PTR [eax],ebx
100139e9:	jmp    0x100139f9
100139eb:	mov    DWORD PTR [edi+0x8],ebx
100139ee:	mov    eax,DWORD PTR [esi+0x4]
100139f1:	cmp    edi,DWORD PTR [eax+0x8]
100139f4:	jne    0x100139f9
100139f6:	mov    DWORD PTR [eax+0x8],ebx
100139f9:	mov    edi,ebx
100139fb:	lea    eax,[ebx+0x4]
100139fe:	jmp    0x10013a8d
10013a03:	mov    ecx,DWORD PTR [eax]
10013a05:	mov    edx,DWORD PTR [ecx+0x4]
10013a08:	cmp    ecx,DWORD PTR [edx]
10013a0a:	jne    0x10013a41
10013a0c:	mov    edx,DWORD PTR [edx+0x8]
10013a0f:	cmp    BYTE PTR [edx+0x10],0x0
10013a13:	je     0x10013a49
10013a15:	cmp    edi,DWORD PTR [ecx+0x8]
10013a18:	jne    0x10013a22
10013a1a:	push   esi
10013a1b:	mov    edi,ecx
10013a1d:	call   0x10001cd2
10013a22:	mov    eax,DWORD PTR [edi+0x4]
10013a25:	mov    BYTE PTR [eax+0x10],0x1
10013a29:	mov    eax,DWORD PTR [edi+0x4]
10013a2c:	mov    eax,DWORD PTR [eax+0x4]
10013a2f:	mov    BYTE PTR [eax+0x10],0x0
10013a33:	mov    eax,DWORD PTR [edi+0x4]
10013a36:	mov    ecx,DWORD PTR [eax+0x4]
10013a39:	push   esi
10013a3a:	call   0x10001d12
10013a3f:	jmp    0x10013a8a
10013a41:	mov    edx,DWORD PTR [edx]
10013a43:	cmp    BYTE PTR [edx+0x10],0x0
10013a47:	jne    0x10013a61
10013a49:	mov    BYTE PTR [ecx+0x10],0x1
10013a4d:	mov    BYTE PTR [edx+0x10],0x1
10013a51:	mov    ecx,DWORD PTR [eax]
10013a53:	mov    ecx,DWORD PTR [ecx+0x4]
10013a56:	mov    BYTE PTR [ecx+0x10],0x0
10013a5a:	mov    eax,DWORD PTR [eax]
10013a5c:	mov    edi,DWORD PTR [eax+0x4]
10013a5f:	jmp    0x10013a8a
10013a61:	cmp    edi,DWORD PTR [ecx]
10013a63:	jne    0x10013a6d
10013a65:	push   esi
10013a66:	mov    edi,ecx
10013a68:	call   0x10001d12
10013a6d:	mov    eax,DWORD PTR [edi+0x4]
10013a70:	mov    BYTE PTR [eax+0x10],0x1
10013a74:	mov    eax,DWORD PTR [edi+0x4]
10013a77:	mov    eax,DWORD PTR [eax+0x4]
10013a7a:	mov    BYTE PTR [eax+0x10],0x0
10013a7e:	mov    eax,DWORD PTR [edi+0x4]
10013a81:	mov    ecx,DWORD PTR [eax+0x4]
10013a84:	push   esi
10013a85:	call   0x10001cd2
10013a8a:	lea    eax,[edi+0x4]
10013a8d:	mov    ecx,DWORD PTR [eax]
10013a8f:	cmp    BYTE PTR [ecx+0x10],0x0
10013a93:	je     0x10013a03
10013a99:	mov    eax,DWORD PTR [esi+0x4]
10013a9c:	mov    eax,DWORD PTR [eax+0x4]
10013a9f:	mov    BYTE PTR [eax+0x10],0x1
10013aa3:	mov    eax,DWORD PTR [ebp+0x8]
10013aa6:	mov    DWORD PTR [eax+0x4],ebx
10013aa9:	mov    DWORD PTR [eax],esi
10013aab:	call   0x10059d4d
10013ab0:	ret    0xc
10013ab3:	push   0x4c
10013ab5:	mov    eax,0x10060fb7
10013aba:	call   0x10059c75
10013abf:	mov    edi,DWORD PTR [ebp+0x14]
10013ac2:	cmp    BYTE PTR [edi+0xc1],0x0
10013ac9:	je     0x10013afd
10013acb:	push   0x1006ccec
10013ad0:	lea    ecx,[ebp-0x30]
10013ad3:	call   0x100011d1
10013ad8:	and    DWORD PTR [ebp-0x4],0x0
10013adc:	lea    eax,[ebp-0x30]
10013adf:	push   eax
10013ae0:	lea    ecx,[ebp-0x58]
10013ae3:	call   0x1000106e
10013ae8:	push   0x10074de0
10013aed:	lea    eax,[ebp-0x58]
10013af0:	push   eax
10013af1:	mov    DWORD PTR [ebp-0x58],0x1006b978
10013af8:	call   0x10047c54
10013afd:	lea    esi,[ebp+0x10]
10013b00:	call   0x10013f92
10013b05:	mov    ecx,DWORD PTR [edi]
10013b07:	cmp    BYTE PTR [ecx+0xc1],0x0
10013b0e:	je     0x10013b15
10013b10:	mov    ebx,DWORD PTR [edi+0x8]
10013b13:	jmp    0x10013b33
10013b15:	mov    eax,DWORD PTR [edi+0x8]
10013b18:	cmp    BYTE PTR [eax+0xc1],0x0
10013b1f:	je     0x10013b25
10013b21:	mov    ebx,ecx
10013b23:	jmp    0x10013b33
10013b25:	mov    eax,DWORD PTR [ebp+0x14]
10013b28:	cmp    eax,edi
10013b2a:	mov    ebx,DWORD PTR [eax+0x8]
10013b2d:	jne    0x10013bbc
10013b33:	cmp    BYTE PTR [ebx+0xc1],0x0
10013b3a:	mov    esi,DWORD PTR [edi+0x4]
10013b3d:	jne    0x10013b42
10013b3f:	mov    DWORD PTR [ebx+0x4],esi
10013b42:	mov    ecx,DWORD PTR [ebp+0x8]
10013b45:	mov    eax,DWORD PTR [ecx+0x4]
10013b48:	cmp    DWORD PTR [eax+0x4],edi
10013b4b:	jne    0x10013b52
10013b4d:	mov    DWORD PTR [eax+0x4],ebx
10013b50:	jmp    0x10013b5d
10013b52:	cmp    DWORD PTR [esi],edi
10013b54:	jne    0x10013b5a
10013b56:	mov    DWORD PTR [esi],ebx
10013b58:	jmp    0x10013b5d
10013b5a:	mov    DWORD PTR [esi+0x8],ebx
10013b5d:	mov    edx,DWORD PTR [ecx+0x4]
10013b60:	cmp    DWORD PTR [edx],edi
10013b62:	jne    0x10013b86
10013b64:	cmp    BYTE PTR [ebx+0xc1],0x0
10013b6b:	je     0x10013b71
10013b6d:	mov    ecx,esi
10013b6f:	jmp    0x10013b84
10013b71:	mov    eax,DWORD PTR [ebx]
10013b73:	mov    ecx,ebx
10013b75:	jmp    0x10013b7b
10013b77:	mov    ecx,eax
10013b79:	mov    eax,DWORD PTR [ecx]
10013b7b:	cmp    BYTE PTR [eax+0xc1],0x0
10013b82:	je     0x10013b77
10013b84:	mov    DWORD PTR [edx],ecx
10013b86:	mov    eax,DWORD PTR [ebp+0x8]
10013b89:	mov    edx,DWORD PTR [eax+0x4]
10013b8c:	cmp    DWORD PTR [edx+0x8],edi
10013b8f:	jne    0x10013c26
10013b95:	cmp    BYTE PTR [ebx+0xc1],0x0
10013b9c:	je     0x10013ba2
10013b9e:	mov    ecx,esi
10013ba0:	jmp    0x10013bb7
10013ba2:	mov    eax,DWORD PTR [ebx+0x8]
10013ba5:	mov    ecx,ebx
10013ba7:	jmp    0x10013bae
10013ba9:	mov    ecx,eax
10013bab:	mov    eax,DWORD PTR [ecx+0x8]
10013bae:	cmp    BYTE PTR [eax+0xc1],0x0
10013bb5:	je     0x10013ba9
10013bb7:	mov    DWORD PTR [edx+0x8],ecx
10013bba:	jmp    0x10013c26
10013bbc:	mov    DWORD PTR [ecx+0x4],eax
10013bbf:	mov    ecx,DWORD PTR [edi]
10013bc1:	mov    DWORD PTR [eax],ecx
10013bc3:	cmp    eax,DWORD PTR [edi+0x8]
10013bc6:	jne    0x10013bcc
10013bc8:	mov    esi,eax
10013bca:	jmp    0x10013be9
10013bcc:	cmp    BYTE PTR [ebx+0xc1],0x0
10013bd3:	mov    esi,DWORD PTR [eax+0x4]
10013bd6:	jne    0x10013bdb
10013bd8:	mov    DWORD PTR [ebx+0x4],esi
10013bdb:	mov    DWORD PTR [esi],ebx
10013bdd:	mov    ecx,DWORD PTR [edi+0x8]
10013be0:	mov    DWORD PTR [eax+0x8],ecx
10013be3:	mov    ecx,DWORD PTR [edi+0x8]
10013be6:	mov    DWORD PTR [ecx+0x4],eax
10013be9:	mov    ecx,DWORD PTR [ebp+0x8]
10013bec:	mov    ecx,DWORD PTR [ecx+0x4]
10013bef:	cmp    DWORD PTR [ecx+0x4],edi
10013bf2:	jne    0x10013bf9
10013bf4:	mov    DWORD PTR [ecx+0x4],eax
10013bf7:	jmp    0x10013c07
10013bf9:	mov    ecx,DWORD PTR [edi+0x4]
10013bfc:	cmp    DWORD PTR [ecx],edi
10013bfe:	jne    0x10013c04
10013c00:	mov    DWORD PTR [ecx],eax
10013c02:	jmp    0x10013c07
10013c04:	mov    DWORD PTR [ecx+0x8],eax
10013c07:	mov    ecx,DWORD PTR [edi+0x4]
10013c0a:	mov    DWORD PTR [eax+0x4],ecx
10013c0d:	add    eax,0xc0
10013c12:	mov    dl,BYTE PTR [eax]
10013c14:	lea    ecx,[edi+0xc0]
10013c1a:	mov    BYTE PTR [ebp-0x11],dl
10013c1d:	mov    dl,BYTE PTR [ecx]
10013c1f:	mov    BYTE PTR [eax],dl
10013c21:	mov    al,BYTE PTR [ebp-0x11]
10013c24:	mov    BYTE PTR [ecx],al
10013c26:	cmp    BYTE PTR [edi+0xc0],0x1
10013c2d:	jne    0x10013d9c
10013c33:	jmp    0x10013d3a
10013c38:	cmp    BYTE PTR [ebx+0xc0],0x1
10013c3f:	jne    0x10013d95
10013c45:	mov    ecx,DWORD PTR [esi]
10013c47:	cmp    ebx,ecx
10013c49:	jne    0x10013ced
10013c4f:	mov    ecx,DWORD PTR [esi+0x8]
10013c52:	lea    eax,[ecx+0xc0]
10013c58:	cmp    BYTE PTR [eax],0x0
10013c5b:	jne    0x10013c74
10013c5d:	push   DWORD PTR [ebp+0x8]
10013c60:	mov    BYTE PTR [eax],0x1
10013c63:	mov    ecx,esi
10013c65:	mov    BYTE PTR [esi+0xc0],0x0
10013c6c:	call   0x1001419d
10013c71:	mov    ecx,DWORD PTR [esi+0x8]
10013c74:	cmp    BYTE PTR [ecx+0xc1],0x0
10013c7b:	jne    0x10013d35
10013c81:	mov    eax,DWORD PTR [ecx]
10013c83:	cmp    BYTE PTR [eax+0xc0],0x1
10013c8a:	jne    0x10013c9c
10013c8c:	mov    eax,DWORD PTR [ecx+0x8]
10013c8f:	cmp    BYTE PTR [eax+0xc0],0x1
10013c96:	je     0x10013d2e
10013c9c:	mov    eax,DWORD PTR [ecx+0x8]
10013c9f:	cmp    BYTE PTR [eax+0xc0],0x1
10013ca6:	jne    0x10013cc3
10013ca8:	mov    eax,DWORD PTR [ecx]
10013caa:	push   DWORD PTR [ebp+0x8]
10013cad:	mov    BYTE PTR [eax+0xc0],0x1
10013cb4:	mov    BYTE PTR [ecx+0xc0],0x0
10013cbb:	call   0x100141e0
10013cc0:	mov    ecx,DWORD PTR [esi+0x8]
10013cc3:	push   DWORD PTR [ebp+0x8]
10013cc6:	lea    eax,[esi+0xc0]
10013ccc:	mov    dl,BYTE PTR [eax]
10013cce:	mov    BYTE PTR [ecx+0xc0],dl
10013cd4:	mov    BYTE PTR [eax],0x1
10013cd7:	mov    eax,DWORD PTR [ecx+0x8]
10013cda:	mov    ecx,esi
10013cdc:	mov    BYTE PTR [eax+0xc0],0x1
10013ce3:	call   0x1001419d
10013ce8:	jmp    0x10013d95
10013ced:	lea    eax,[ecx+0xc0]
10013cf3:	cmp    BYTE PTR [eax],0x0
10013cf6:	jne    0x10013d0e
10013cf8:	push   DWORD PTR [ebp+0x8]
10013cfb:	mov    BYTE PTR [eax],0x1
10013cfe:	mov    ecx,esi
10013d00:	mov    BYTE PTR [esi+0xc0],0x0
10013d07:	call   0x100141e0
10013d0c:	mov    ecx,DWORD PTR [esi]
10013d0e:	cmp    BYTE PTR [ecx+0xc1],0x0
10013d15:	jne    0x10013d35
10013d17:	mov    eax,DWORD PTR [ecx+0x8]
10013d1a:	cmp    BYTE PTR [eax+0xc0],0x1
10013d21:	jne    0x10013d4b
10013d23:	mov    eax,DWORD PTR [ecx]
10013d25:	cmp    BYTE PTR [eax+0xc0],0x1
10013d2c:	jne    0x10013d4b
10013d2e:	mov    BYTE PTR [ecx+0xc0],0x0
10013d35:	mov    ebx,esi
10013d37:	mov    esi,DWORD PTR [esi+0x4]
10013d3a:	mov    eax,DWORD PTR [ebp+0x8]
10013d3d:	mov    eax,DWORD PTR [eax+0x4]
10013d40:	cmp    ebx,DWORD PTR [eax+0x4]
10013d43:	jne    0x10013c38
10013d49:	jmp    0x10013d95
10013d4b:	mov    eax,DWORD PTR [ecx]
10013d4d:	cmp    BYTE PTR [eax+0xc0],0x1
10013d54:	jne    0x10013d71
10013d56:	mov    eax,DWORD PTR [ecx+0x8]
10013d59:	push   DWORD PTR [ebp+0x8]
10013d5c:	mov    BYTE PTR [eax+0xc0],0x1
10013d63:	mov    BYTE PTR [ecx+0xc0],0x0
10013d6a:	call   0x1001419d
10013d6f:	mov    ecx,DWORD PTR [esi]
10013d71:	push   DWORD PTR [ebp+0x8]
10013d74:	lea    eax,[esi+0xc0]
10013d7a:	mov    dl,BYTE PTR [eax]
10013d7c:	mov    BYTE PTR [ecx+0xc0],dl
10013d82:	mov    BYTE PTR [eax],0x1
10013d85:	mov    eax,DWORD PTR [ecx]
10013d87:	mov    ecx,esi
10013d89:	mov    BYTE PTR [eax+0xc0],0x1
10013d90:	call   0x100141e0
10013d95:	mov    BYTE PTR [ebx+0xc0],0x1
10013d9c:	lea    ebx,[edi+0x10]
10013d9f:	lea    esi,[ebx+0x20]
10013da2:	call   0x10003431
10013da7:	push   0x0
10013da9:	push   0x1
10013dab:	mov    ecx,ebx
10013dad:	call   0x100012f4
10013db2:	push   edi
10013db3:	call   0x100430d2
10013db8:	pop    ecx
10013db9:	mov    ecx,DWORD PTR [ebp+0x8]
10013dbc:	mov    eax,DWORD PTR [ecx+0x8]
10013dbf:	test   eax,eax
10013dc1:	jbe    0x10013dc7
10013dc3:	dec    eax
10013dc4:	mov    DWORD PTR [ecx+0x8],eax
10013dc7:	mov    ecx,DWORD PTR [ebp+0x10]
10013dca:	mov    eax,DWORD PTR [ebp+0xc]
10013dcd:	mov    DWORD PTR [eax],ecx
10013dcf:	mov    ecx,DWORD PTR [ebp+0x14]
10013dd2:	mov    DWORD PTR [eax+0x4],ecx
10013dd5:	call   0x10059d4d
10013dda:	ret    0x10
10013ddd:	push   0x48
10013ddf:	mov    eax,0x100603a7
10013de4:	call   0x10059c75
10013de9:	mov    edi,ecx
10013deb:	cmp    DWORD PTR [esi+0x8],0x1745d16
10013df2:	jb     0x10013e26
10013df4:	push   0x1006d04c
10013df9:	lea    ecx,[ebp-0x2c]
10013dfc:	call   0x100011d1
10013e01:	and    DWORD PTR [ebp-0x4],0x0
10013e05:	lea    eax,[ebp-0x2c]
10013e08:	push   eax
10013e09:	lea    ecx,[ebp-0x54]
10013e0c:	call   0x1000106e
10013e11:	push   0x10074ec0
10013e16:	lea    eax,[ebp-0x54]
10013e19:	push   eax
10013e1a:	mov    DWORD PTR [ebp-0x54],0x1006b96c
10013e21:	call   0x10047c54
10013e26:	push   DWORD PTR [ebp+0x10]
10013e29:	mov    eax,DWORD PTR [esi+0x4]
10013e2c:	push   eax
10013e2d:	push   edi
10013e2e:	push   eax
10013e2f:	call   0x10014225
10013e34:	inc    DWORD PTR [esi+0x8]
10013e37:	mov    ebx,eax
10013e39:	mov    eax,DWORD PTR [esi+0x4]
10013e3c:	cmp    edi,eax
10013e3e:	jne    0x10013e4d
10013e40:	mov    DWORD PTR [eax+0x4],ebx
10013e43:	mov    eax,DWORD PTR [esi+0x4]
10013e46:	mov    DWORD PTR [eax],ebx
10013e48:	mov    eax,DWORD PTR [esi+0x4]
10013e4b:	jmp    0x10013e6b
10013e4d:	cmp    BYTE PTR [ebp+0xc],0x0
10013e51:	je     0x10013e60
10013e53:	mov    DWORD PTR [edi],ebx
10013e55:	mov    eax,DWORD PTR [esi+0x4]
10013e58:	cmp    edi,DWORD PTR [eax]
10013e5a:	jne    0x10013e6e
10013e5c:	mov    DWORD PTR [eax],ebx
10013e5e:	jmp    0x10013e6e
10013e60:	mov    DWORD PTR [edi+0x8],ebx
10013e63:	mov    eax,DWORD PTR [esi+0x4]
10013e66:	cmp    edi,DWORD PTR [eax+0x8]
10013e69:	jne    0x10013e6e
10013e6b:	mov    DWORD PTR [eax+0x8],ebx
10013e6e:	mov    edi,ebx
10013e70:	lea    eax,[ebx+0x4]
10013e73:	jmp    0x10013f21
10013e78:	mov    edx,DWORD PTR [eax]
10013e7a:	mov    ecx,DWORD PTR [edx+0x4]
10013e7d:	cmp    edx,DWORD PTR [ecx]
10013e7f:	jne    0x10013ec3
10013e81:	mov    ecx,DWORD PTR [ecx+0x8]
10013e84:	add    ecx,0xc0
10013e8a:	cmp    BYTE PTR [ecx],0x0
10013e8d:	je     0x10013ed0
10013e8f:	cmp    edi,DWORD PTR [edx+0x8]
10013e92:	jne    0x10013e9e
10013e94:	mov    edi,edx
10013e96:	push   esi
10013e97:	mov    ecx,edi
10013e99:	call   0x1001419d
10013e9e:	mov    eax,DWORD PTR [edi+0x4]
10013ea1:	mov    BYTE PTR [eax+0xc0],0x1
10013ea8:	mov    eax,DWORD PTR [edi+0x4]
10013eab:	mov    eax,DWORD PTR [eax+0x4]
10013eae:	mov    BYTE PTR [eax+0xc0],0x0
10013eb5:	mov    eax,DWORD PTR [edi+0x4]
10013eb8:	mov    ecx,DWORD PTR [eax+0x4]
10013ebb:	push   esi
10013ebc:	call   0x100141e0
10013ec1:	jmp    0x10013f1e
10013ec3:	mov    ecx,DWORD PTR [ecx]
10013ec5:	add    ecx,0xc0
10013ecb:	cmp    BYTE PTR [ecx],0x0
10013ece:	jne    0x10013eed
10013ed0:	mov    BYTE PTR [edx+0xc0],0x1
10013ed7:	mov    BYTE PTR [ecx],0x1
10013eda:	mov    ecx,DWORD PTR [eax]
10013edc:	mov    ecx,DWORD PTR [ecx+0x4]
10013edf:	mov    BYTE PTR [ecx+0xc0],0x0
10013ee6:	mov    eax,DWORD PTR [eax]
10013ee8:	mov    edi,DWORD PTR [eax+0x4]
10013eeb:	jmp    0x10013f1e
10013eed:	cmp    edi,DWORD PTR [edx]
10013eef:	jne    0x10013efb
10013ef1:	mov    edi,edx
10013ef3:	push   esi
10013ef4:	mov    ecx,edi
10013ef6:	call   0x100141e0
10013efb:	mov    eax,DWORD PTR [edi+0x4]
10013efe:	mov    BYTE PTR [eax+0xc0],0x1
10013f05:	mov    eax,DWORD PTR [edi+0x4]
10013f08:	mov    eax,DWORD PTR [eax+0x4]
10013f0b:	mov    BYTE PTR [eax+0xc0],0x0
10013f12:	mov    eax,DWORD PTR [edi+0x4]
10013f15:	mov    ecx,DWORD PTR [eax+0x4]
10013f18:	push   esi
10013f19:	call   0x1001419d
10013f1e:	lea    eax,[edi+0x4]
10013f21:	mov    ecx,DWORD PTR [eax]
10013f23:	cmp    BYTE PTR [ecx+0xc0],0x0
10013f2a:	je     0x10013e78
10013f30:	mov    eax,DWORD PTR [esi+0x4]
10013f33:	mov    eax,DWORD PTR [eax+0x4]
10013f36:	mov    BYTE PTR [eax+0xc0],0x1
10013f3d:	mov    eax,DWORD PTR [ebp+0x8]
10013f40:	mov    DWORD PTR [eax+0x4],ebx
10013f43:	mov    DWORD PTR [eax],esi
10013f45:	call   0x10059d4d
10013f4a:	ret    0xc
10013f4d:	push   ebp
10013f4e:	mov    ebp,esp
10013f50:	and    esp,0xfffffff8
10013f53:	push   ecx
10013f54:	push   ecx
10013f55:	mov    eax,ds:0x10080e58
10013f5a:	mov    edx,DWORD PTR [eax]
10013f5c:	push   ebx
10013f5d:	push   esi
10013f5e:	mov    ecx,0x10080e54
10013f63:	push   eax
10013f64:	mov    esi,ecx
10013f66:	push   esi
10013f67:	push   edx
10013f68:	push   ecx
10013f69:	lea    ebx,[esp+0x18]
10013f6d:	call   0x100140a3
10013f72:	push   DWORD PTR ds:0x10080e58
10013f78:	call   0x100430d2
10013f7d:	and    DWORD PTR ds:0x10080e58,0x0
10013f84:	and    DWORD PTR ds:0x10080e5c,0x0
10013f8b:	pop    ecx
10013f8c:	pop    esi
10013f8d:	pop    ebx
10013f8e:	mov    esp,ebp
10013f90:	pop    ebp
10013f91:	ret    
10013f92:	push   ebx
10013f93:	xor    ebx,ebx
10013f95:	cmp    DWORD PTR [esi],ebx
10013f97:	jne    0x10013f9e
10013f99:	call   0x100435f0
10013f9e:	mov    eax,DWORD PTR [esi+0x4]
10013fa1:	cmp    BYTE PTR [eax+0xc1],bl
10013fa7:	je     0x10013fb0
10013fa9:	call   0x100435f0
10013fae:	jmp    0x10013fe7
10013fb0:	mov    ecx,DWORD PTR [eax+0x8]
10013fb3:	cmp    BYTE PTR [ecx+0xc1],bl
10013fb9:	jne    0x10013fd9
10013fbb:	jmp    0x10013fbf
10013fbd:	mov    ecx,eax
10013fbf:	mov    eax,DWORD PTR [ecx]
10013fc1:	cmp    BYTE PTR [eax+0xc1],bl
10013fc7:	je     0x10013fbd
10013fc9:	mov    DWORD PTR [esi+0x4],ecx
10013fcc:	jmp    0x10013fe7
10013fce:	mov    ecx,DWORD PTR [esi+0x4]
10013fd1:	cmp    ecx,DWORD PTR [eax+0x8]
10013fd4:	jne    0x10013fe4
10013fd6:	mov    DWORD PTR [esi+0x4],eax
10013fd9:	mov    eax,DWORD PTR [eax+0x4]
10013fdc:	cmp    BYTE PTR [eax+0xc1],bl
10013fe2:	je     0x10013fce
10013fe4:	mov    DWORD PTR [esi+0x4],eax
10013fe7:	mov    eax,esi
10013fe9:	pop    ebx
10013fea:	ret    
10013feb:	push   ebx
10013fec:	xor    ebx,ebx
10013fee:	cmp    DWORD PTR [esi],ebx
10013ff0:	jne    0x10013ff7
10013ff2:	call   0x100435f0
10013ff7:	mov    eax,DWORD PTR [esi+0x4]
10013ffa:	cmp    BYTE PTR [eax+0x11],bl
10013ffd:	je     0x1001400c
10013fff:	mov    eax,DWORD PTR [eax+0x8]
10014002:	mov    DWORD PTR [esi+0x4],eax
10014005:	cmp    BYTE PTR [eax+0x11],bl
10014008:	je     0x10014048
1001400a:	jmp    0x1001403e
1001400c:	mov    ecx,DWORD PTR [eax]
1001400e:	cmp    BYTE PTR [ecx+0x11],bl
10014011:	jne    0x1001402e
10014013:	jmp    0x10014017
10014015:	mov    ecx,eax
10014017:	mov    eax,DWORD PTR [ecx+0x8]
1001401a:	cmp    BYTE PTR [eax+0x11],bl
1001401d:	je     0x10014015
1001401f:	mov    DWORD PTR [esi+0x4],ecx
10014022:	jmp    0x10014048
10014024:	mov    ecx,DWORD PTR [esi+0x4]
10014027:	cmp    ecx,DWORD PTR [eax]
10014029:	jne    0x10014036
1001402b:	mov    DWORD PTR [esi+0x4],eax
1001402e:	mov    eax,DWORD PTR [eax+0x4]
10014031:	cmp    BYTE PTR [eax+0x11],bl
10014034:	je     0x10014024
10014036:	mov    ecx,DWORD PTR [esi+0x4]
10014039:	cmp    BYTE PTR [ecx+0x11],bl
1001403c:	je     0x10014045
1001403e:	call   0x100435f0
10014043:	jmp    0x10014048
10014045:	mov    DWORD PTR [esi+0x4],eax
10014048:	mov    eax,esi
1001404a:	pop    ebx
1001404b:	ret    
1001404c:	call   0x1001427a
10014051:	lea    ecx,[esi+0x4]
10014054:	mov    DWORD PTR [ecx],eax
10014056:	mov    BYTE PTR [eax+0x11],0x1
1001405a:	mov    eax,DWORD PTR [ecx]
1001405c:	mov    DWORD PTR [eax+0x4],eax
1001405f:	mov    eax,DWORD PTR [ecx]
10014061:	mov    DWORD PTR [eax],eax
10014063:	mov    ecx,DWORD PTR [ecx]
10014065:	mov    DWORD PTR [ecx+0x8],ecx
10014068:	and    DWORD PTR [esi+0x8],0x0
1001406c:	ret    
1001406d:	push   ebp
1001406e:	mov    ebp,esp
10014070:	push   0x14
10014072:	call   0x100436de
10014077:	test   eax,eax
10014079:	pop    ecx
1001407a:	je     0x1001409f
1001407c:	mov    ecx,DWORD PTR [ebp+0x8]
1001407f:	mov    DWORD PTR [eax],ecx
10014081:	mov    ecx,DWORD PTR [ebp+0xc]
10014084:	mov    DWORD PTR [eax+0x4],ecx
10014087:	mov    ecx,DWORD PTR [ebp+0x10]
1001408a:	mov    DWORD PTR [eax+0x8],ecx
1001408d:	mov    ecx,DWORD PTR [ebp+0x14]
10014090:	mov    ecx,DWORD PTR [ecx]
10014092:	mov    DWORD PTR [eax+0xc],ecx
10014095:	mov    cl,BYTE PTR [ebp+0x18]
10014098:	mov    BYTE PTR [eax+0x10],cl
1001409b:	mov    BYTE PTR [eax+0x11],0x0
1001409f:	pop    ebp
100140a0:	ret    0x14
100140a3:	push   ebp
100140a4:	mov    ebp,esp
100140a6:	mov    eax,ds:0x10080e58
100140ab:	sub    esp,0x10
100140ae:	cmp    DWORD PTR [ebp+0x8],0x0
100140b2:	push   esi
100140b3:	mov    esi,DWORD PTR [eax]
100140b5:	push   edi
100140b6:	mov    edi,0x10080e54
100140bb:	je     0x100140c2
100140bd:	cmp    DWORD PTR [ebp+0x8],edi
100140c0:	je     0x100140c7
100140c2:	call   0x100435f0
100140c7:	cmp    DWORD PTR [ebp+0xc],esi
100140ca:	jne    0x1001411f
100140cc:	cmp    DWORD PTR [ebp+0x10],0x0
100140d0:	mov    esi,DWORD PTR ds:0x10080e58
100140d6:	je     0x100140dd
100140d8:	cmp    DWORD PTR [ebp+0x10],edi
100140db:	je     0x100140e2
100140dd:	call   0x100435f0
100140e2:	cmp    DWORD PTR [ebp+0x14],esi
100140e5:	jne    0x1001411f
100140e7:	mov    eax,ds:0x10080e58
100140ec:	push   DWORD PTR [eax+0x4]
100140ef:	mov    ecx,edi
100140f1:	call   0x10014329
100140f6:	mov    eax,ds:0x10080e58
100140fb:	mov    DWORD PTR [eax+0x4],eax
100140fe:	mov    eax,ds:0x10080e58
10014103:	and    DWORD PTR ds:0x10080e5c,0x0
1001410a:	mov    DWORD PTR [eax],eax
1001410c:	mov    eax,ds:0x10080e58
10014111:	mov    DWORD PTR [eax+0x8],eax
10014114:	mov    eax,ds:0x10080e58
10014119:	mov    eax,DWORD PTR [eax]
1001411b:	mov    DWORD PTR [ebx],edi
1001411d:	jmp    0x1001415d
1001411f:	mov    eax,DWORD PTR [ebp+0x8]
10014122:	test   eax,eax
10014124:	je     0x1001412b
10014126:	cmp    eax,DWORD PTR [ebp+0x10]
10014129:	je     0x10014130
1001412b:	call   0x100435f0
10014130:	mov    eax,DWORD PTR [ebp+0xc]
10014133:	cmp    eax,DWORD PTR [ebp+0x14]
10014136:	mov    ecx,DWORD PTR [ebp+0x8]
10014139:	je     0x1001415b
1001413b:	lea    esi,[ebp+0x8]
1001413e:	mov    DWORD PTR [ebp-0x8],ecx
10014141:	mov    DWORD PTR [ebp-0x4],eax
10014144:	call   0x10013f92
10014149:	push   DWORD PTR [ebp-0x4]
1001414c:	lea    eax,[ebp-0x10]
1001414f:	push   DWORD PTR [ebp-0x8]
10014152:	push   eax
10014153:	push   edi
10014154:	call   0x10013ab3
10014159:	jmp    0x1001411f
1001415b:	mov    DWORD PTR [ebx],ecx
1001415d:	pop    edi
1001415e:	mov    DWORD PTR [ebx+0x4],eax
10014161:	mov    eax,ebx
10014163:	pop    esi
10014164:	leave  
10014165:	ret    0x10
10014168:	mov    eax,DWORD PTR [eax+0x4]
1001416b:	push   esi
1001416c:	mov    esi,DWORD PTR [eax+0x4]
1001416f:	push   edi
10014170:	mov    edi,eax
10014172:	jmp    0x1001418d
10014174:	mov    eax,DWORD PTR [esp+0xc]
10014178:	lea    ecx,[esi+0x10]
1001417b:	call   0x10007639
10014180:	test   al,al
10014182:	je     0x10014189
10014184:	mov    esi,DWORD PTR [esi+0x8]
10014187:	jmp    0x1001418d
10014189:	mov    edi,esi
1001418b:	mov    esi,DWORD PTR [esi]
1001418d:	cmp    BYTE PTR [esi+0xc1],0x0
10014194:	je     0x10014174
10014196:	mov    eax,edi
10014198:	pop    edi
10014199:	pop    esi
1001419a:	ret    0x4
1001419d:	mov    eax,DWORD PTR [ecx+0x8]
100141a0:	mov    edx,DWORD PTR [eax]
100141a2:	mov    DWORD PTR [ecx+0x8],edx
100141a5:	mov    edx,DWORD PTR [eax]
100141a7:	cmp    BYTE PTR [edx+0xc1],0x0
100141ae:	jne    0x100141b3
100141b0:	mov    DWORD PTR [edx+0x4],ecx
100141b3:	mov    edx,DWORD PTR [ecx+0x4]
100141b6:	mov    DWORD PTR [eax+0x4],edx
100141b9:	mov    edx,DWORD PTR [esp+0x4]
100141bd:	mov    edx,DWORD PTR [edx+0x4]
100141c0:	cmp    ecx,DWORD PTR [edx+0x4]
100141c3:	jne    0x100141ca
100141c5:	mov    DWORD PTR [edx+0x4],eax
100141c8:	jmp    0x100141d8
100141ca:	mov    edx,DWORD PTR [ecx+0x4]
100141cd:	cmp    ecx,DWORD PTR [edx]
100141cf:	jne    0x100141d5
100141d1:	mov    DWORD PTR [edx],eax
100141d3:	jmp    0x100141d8
100141d5:	mov    DWORD PTR [edx+0x8],eax
100141d8:	mov    DWORD PTR [eax],ecx
100141da:	mov    DWORD PTR [ecx+0x4],eax
100141dd:	ret    0x4
100141e0:	mov    eax,DWORD PTR [ecx]
100141e2:	mov    edx,DWORD PTR [eax+0x8]
100141e5:	mov    DWORD PTR [ecx],edx
100141e7:	mov    edx,DWORD PTR [eax+0x8]
100141ea:	cmp    BYTE PTR [edx+0xc1],0x0
100141f1:	jne    0x100141f6
100141f3:	mov    DWORD PTR [edx+0x4],ecx
100141f6:	mov    edx,DWORD PTR [ecx+0x4]
100141f9:	mov    DWORD PTR [eax+0x4],edx
100141fc:	mov    edx,DWORD PTR [esp+0x4]
10014200:	mov    edx,DWORD PTR [edx+0x4]
10014203:	cmp    ecx,DWORD PTR [edx+0x4]
10014206:	jne    0x1001420d
10014208:	mov    DWORD PTR [edx+0x4],eax
1001420b:	jmp    0x1001421c
1001420d:	mov    edx,DWORD PTR [ecx+0x4]
10014210:	cmp    ecx,DWORD PTR [edx+0x8]
10014213:	jne    0x1001421a
10014215:	mov    DWORD PTR [edx+0x8],eax
10014218:	jmp    0x1001421c
1001421a:	mov    DWORD PTR [edx],eax
1001421c:	mov    DWORD PTR [eax+0x8],ecx
1001421f:	mov    DWORD PTR [ecx+0x4],eax
10014222:	ret    0x4
10014225:	push   0x8
10014227:	mov    eax,0x10060f94
1001422c:	call   0x10059ca8
10014231:	push   0xc8
10014236:	call   0x100436de
1001423b:	mov    edi,eax
1001423d:	pop    ecx
1001423e:	mov    DWORD PTR [ebp-0x14],edi
10014241:	test   edi,edi
10014243:	mov    DWORD PTR [ebp-0x4],0x1
1001424a:	je     0x1001425d
1001424c:	push   DWORD PTR [ebp+0x10]
1001424f:	mov    ebx,DWORD PTR [ebp+0x14]
10014252:	push   DWORD PTR [ebp+0xc]
10014255:	push   DWORD PTR [ebp+0x8]
10014258:	call   0x100142d7
1001425d:	mov    eax,edi
1001425f:	call   0x10059d4d
10014264:	ret    0x10
10014267:	push   DWORD PTR [ebp-0x14]
1001426a:	call   0x100430d2
1001426f:	pop    ecx
10014270:	push   0x0
10014272:	push   0x0
10014274:	call   0x10047c54
10014279:	int3   
1001427a:	push   0x14
1001427c:	call   0x100436de
10014281:	xor    edx,edx
10014283:	cmp    eax,edx
10014285:	pop    ecx
10014286:	je     0x1001428a
10014288:	mov    DWORD PTR [eax],edx
1001428a:	lea    ecx,[eax+0x4]
1001428d:	cmp    ecx,edx
1001428f:	je     0x10014293
10014291:	mov    DWORD PTR [ecx],edx
10014293:	lea    ecx,[eax+0x8]
10014296:	cmp    ecx,edx
10014298:	je     0x1001429c
1001429a:	mov    DWORD PTR [ecx],edx
1001429c:	mov    BYTE PTR [eax+0x10],0x1
100142a0:	mov    BYTE PTR [eax+0x11],dl
100142a3:	ret    
100142a4:	push   0xc8
100142a9:	call   0x100436de
100142ae:	xor    edx,edx
100142b0:	cmp    eax,edx
100142b2:	pop    ecx
100142b3:	je     0x100142b7
100142b5:	mov    DWORD PTR [eax],edx
100142b7:	lea    ecx,[eax+0x4]
100142ba:	cmp    ecx,edx
100142bc:	je     0x100142c0
100142be:	mov    DWORD PTR [ecx],edx
100142c0:	lea    ecx,[eax+0x8]
100142c3:	cmp    ecx,edx
100142c5:	je     0x100142c9
100142c7:	mov    DWORD PTR [ecx],edx
100142c9:	mov    BYTE PTR [eax+0xc0],0x1
100142d0:	mov    BYTE PTR [eax+0xc1],dl
100142d6:	ret    
100142d7:	push   0x0
100142d9:	mov    eax,0x10061151
100142de:	call   0x10059c75
100142e3:	mov    eax,DWORD PTR [ebp+0x8]
100142e6:	mov    DWORD PTR [edi],eax
100142e8:	mov    eax,DWORD PTR [ebp+0xc]
100142eb:	mov    DWORD PTR [edi+0x4],eax
100142ee:	mov    eax,DWORD PTR [ebp+0x10]
100142f1:	lea    esi,[edi+0x10]
100142f4:	push   ebx
100142f5:	mov    ecx,esi
100142f7:	mov    DWORD PTR [edi+0x8],eax
100142fa:	mov    DWORD PTR [ebp+0x8],esi
100142fd:	call   0x100011ab
10014302:	and    DWORD PTR [ebp-0x4],0x0
10014306:	lea    eax,[ebx+0x20]
10014309:	add    esi,0x20
1001430c:	call   0x10013441
10014311:	mov    BYTE PTR [edi+0xc0],0x0
10014318:	mov    BYTE PTR [edi+0xc1],0x0
1001431f:	mov    eax,edi
10014321:	call   0x10059d4d
10014326:	ret    0xc
10014329:	push   ecx
1001432a:	push   ebp
1001432b:	mov    ebp,DWORD PTR [esp+0xc]
1001432f:	cmp    BYTE PTR [ebp+0xc1],0x0
10014336:	push   edi
10014337:	mov    DWORD PTR [esp+0x8],ecx
1001433b:	mov    edi,ebp
1001433d:	jne    0x10014379
1001433f:	push   ebx
10014340:	push   esi
10014341:	push   DWORD PTR [edi+0x8]
10014344:	mov    ecx,DWORD PTR [esp+0x14]
10014348:	call   0x10014329
1001434d:	mov    edi,DWORD PTR [edi]
1001434f:	lea    ebx,[ebp+0x10]
10014352:	lea    esi,[ebx+0x20]
10014355:	call   0x10003431
1001435a:	push   0x0
1001435c:	push   0x1
1001435e:	mov    ecx,ebx
10014360:	call   0x100012f4
10014365:	push   ebp
10014366:	call   0x100430d2
1001436b:	cmp    BYTE PTR [edi+0xc1],0x0
10014372:	pop    ecx
10014373:	mov    ebp,edi
10014375:	je     0x10014341
10014377:	pop    esi
10014378:	pop    ebx
10014379:	pop    edi
1001437a:	pop    ebp
1001437b:	pop    ecx
1001437c:	ret    0x4
1001437f:	push   0x34
10014381:	mov    eax,0x1006201d
10014386:	call   0x10059c75
1001438b:	mov    ebx,ecx
1001438d:	mov    DWORD PTR [ebp-0x20],ebx
10014390:	and    DWORD PTR [ebp-0x4],0x0
10014394:	mov    eax,DWORD PTR [ebx+0x4]
10014397:	mov    esi,DWORD PTR [eax]
10014399:	mov    edi,ebx
1001439b:	mov    DWORD PTR [ebp-0x10],esi
1001439e:	mov    DWORD PTR [ebp-0x14],edi
100143a1:	test   edi,edi
100143a3:	mov    eax,DWORD PTR [ebx+0x4]
100143a6:	mov    DWORD PTR [ebp-0x30],eax
100143a9:	je     0x100143af
100143ab:	cmp    edi,ebx
100143ad:	je     0x100143b4
100143af:	call   0x100435f0
100143b4:	cmp    esi,DWORD PTR [ebp-0x30]
100143b7:	je     0x10014476
100143bd:	test   edi,edi
100143bf:	jne    0x100143c6
100143c1:	call   0x100435f0
100143c6:	cmp    esi,DWORD PTR [edi+0x4]
100143c9:	jne    0x100143d0
100143cb:	call   0x100435f0
100143d0:	lea    ecx,[esi+0x4c]
100143d3:	lea    eax,[ebp+0x8]
100143d6:	call   0x10006591
100143db:	test   al,al
100143dd:	je     0x10014463
100143e3:	mov    eax,DWORD PTR [ebp+0x28]
100143e6:	and    DWORD PTR [ebp-0x2c],0x0
100143ea:	mov    DWORD PTR [esi+0xa8],eax
100143f0:	mov    eax,DWORD PTR [ebp+0x2c]
100143f3:	mov    DWORD PTR [esi+0xac],eax
100143f9:	mov    eax,DWORD PTR [ebp+0x30]
100143fc:	mov    DWORD PTR [esi+0xb0],eax
10014402:	mov    eax,DWORD PTR [ebp+0x34]
10014405:	mov    DWORD PTR [esi+0xb4],eax
1001440b:	mov    eax,DWORD PTR [ebx+0x10]
1001440e:	add    ebx,0xc
10014411:	mov    DWORD PTR [ebp-0x24],eax
10014414:	lea    eax,[ebp-0x2c]
10014417:	mov    DWORD PTR [ebp-0x28],ebx
1001441a:	call   0x10013942
1001441f:	mov    eax,DWORD PTR [eax]
10014421:	inc    eax
10014422:	cmp    esi,DWORD PTR [edi+0x4]
10014425:	mov    DWORD PTR [ebp-0x18],eax
10014428:	jne    0x1001442f
1001442a:	call   0x100435f0
1001442f:	lea    edx,[esi+0xb8]
10014435:	mov    eax,ebx
10014437:	mov    DWORD PTR [ebp-0x1c],edx
1001443a:	call   0x100135a4
1001443f:	lea    eax,[ebp-0x18]
10014442:	push   eax
10014443:	lea    edi,[ebp-0x40]
10014446:	call   0x100134eb
1001444b:	mov    eax,DWORD PTR [ebp-0x14]
1001444e:	cmp    esi,DWORD PTR [eax+0x4]
10014451:	jne    0x10014458
10014453:	call   0x100435f0
10014458:	mov    eax,DWORD PTR [ebp-0x18]
1001445b:	mov    ecx,DWORD PTR [ebp-0x1c]
1001445e:	mov    ebx,DWORD PTR [ebp-0x20]
10014461:	mov    DWORD PTR [ecx],eax
10014463:	lea    esi,[ebp-0x14]
10014466:	call   0x10013f92
1001446b:	mov    esi,DWORD PTR [ebp-0x10]
1001446e:	mov    edi,DWORD PTR [ebp-0x14]
10014471:	jmp    0x100143a1
10014476:	push   0x0
10014478:	push   0x1
1001447a:	lea    ecx,[ebp+0x8]
1001447d:	call   0x100012f4
10014482:	call   0x10059d4d
10014487:	ret    0x30
1001448a:	push   0x8
1001448c:	mov    eax,0x10060f74
10014491:	call   0x10059c75
10014496:	and    DWORD PTR [ebp-0x14],0x0
1001449a:	mov    DWORD PTR [ebp-0x10],ebx
1001449d:	lea    eax,[ebp+0x8]
100144a0:	push   eax
100144a1:	mov    ecx,ebx
100144a3:	mov    DWORD PTR [ebp-0x4],0x1
100144aa:	call   0x100011ab
100144af:	lea    esi,[ebx+0x20]
100144b2:	push   esi
100144b3:	lea    edi,[ebp+0x24]
100144b6:	mov    BYTE PTR [ebp-0x4],0x2
100144ba:	call   0x10013470
100144bf:	mov    eax,DWORD PTR [ebp+0xac]
100144c5:	push   0x0
100144c7:	push   0x1
100144c9:	lea    ecx,[ebp+0x8]
100144cc:	mov    DWORD PTR [esi+0x88],eax
100144d2:	call   0x100012f4
100144d7:	mov    esi,edi
100144d9:	call   0x10003431
100144de:	mov    eax,ebx
100144e0:	call   0x10059d4d
100144e5:	ret    
100144e6:	mov    eax,DWORD PTR [esp+0x8]
100144ea:	mul    DWORD PTR [esp+0xc]
100144ee:	test   edx,edx
100144f0:	ja     0x100144f7
100144f2:	cmp    eax,0xffffffff
100144f5:	jbe    0x100144fd
100144f7:	mov    eax,0x80070057
100144fc:	ret    
100144fd:	mov    ecx,DWORD PTR [esp+0x4]
10014501:	mov    DWORD PTR [ecx],eax
10014503:	xor    eax,eax
10014505:	ret    
10014506:	push   DWORD PTR [esp+0xc]
1001450a:	call   DWORD PTR ds:0x100660c4
10014510:	lea    eax,[eax+eax*1+0x2]
10014514:	push   eax
10014515:	push   DWORD PTR [esp+0x10]
10014519:	mov    eax,DWORD PTR [esp+0x10]
1001451d:	add    eax,eax
1001451f:	push   eax
10014520:	push   DWORD PTR [esp+0x10]
10014524:	call   0x10043605
10014529:	add    esp,0x10
1001452c:	neg    eax
1001452e:	sbb    eax,eax
10014530:	inc    eax
10014531:	ret    
10014532:	push   DWORD PTR [esp+0x10]
10014536:	push   DWORD PTR [esp+0x10]
1001453a:	push   DWORD PTR [esp+0x10]
1001453e:	push   DWORD PTR [esp+0x10]
10014542:	call   0x10043605
10014547:	push   eax
10014548:	call   0x10001f3c
1001454d:	add    esp,0x14
10014550:	ret    
10014551:	push   esi
10014552:	push   0x18
10014554:	mov    esi,ecx
10014556:	push   0x0
10014558:	push   esi
10014559:	call   0x10045ea0
1001455e:	add    esp,0xc
10014561:	mov    eax,esi
10014563:	pop    esi
10014564:	ret    
10014565:	push   0xc
10014567:	push   0x10074f20
1001456c:	call   0x10046f34
10014571:	and    DWORD PTR [ebp-0x4],0x0
10014575:	push   ecx
10014576:	call   DWORD PTR ds:0x1006611c
1001457c:	and    DWORD PTR [ebp-0x1c],0x0
10014580:	jmp    0x100145a0
10014582:	mov    eax,DWORD PTR [ebp-0x14]
10014585:	mov    eax,DWORD PTR [eax]
10014587:	mov    eax,DWORD PTR [eax]
10014589:	xor    ecx,ecx
1001458b:	cmp    eax,0xc0000017
10014590:	sete   cl
10014593:	mov    eax,ecx
10014595:	ret    
10014596:	mov    esp,DWORD PTR [ebp-0x18]
10014599:	mov    DWORD PTR [ebp-0x1c],0x8007000e
100145a0:	mov    DWORD PTR [ebp-0x4],0xfffffffe
100145a7:	mov    eax,DWORD PTR [ebp-0x1c]
100145aa:	call   0x10046f79
100145af:	ret    
100145b0:	test   eax,eax
100145b2:	jle    0x100145be
100145b4:	and    eax,0xffff
100145b9:	or     eax,0x80070000
100145be:	ret    
100145bf:	push   ebx
100145c0:	push   ebp
100145c1:	mov    ebx,ecx
100145c3:	push   edi
100145c4:	lea    edi,[ebx+0x4]
100145c7:	xor    ebp,ebp
100145c9:	cmp    DWORD PTR [edi],ebp
100145cb:	je     0x10014622
100145cd:	cmp    DWORD PTR [ebx+0xc],ebp
100145d0:	je     0x10014609
100145d2:	cmp    edi,ebp
100145d4:	jne    0x100145e5
100145d6:	push   ebp
100145d7:	push   ebp
100145d8:	push   0x1
100145da:	push   0xc0000005
100145df:	call   DWORD PTR ds:0x10066128
100145e5:	push   esi
100145e6:	mov    esi,DWORD PTR [edi+0x8]
100145e9:	cmp    esi,ebp
100145eb:	je     0x10014602
100145ed:	push   DWORD PTR [esi+0x4]
100145f0:	call   DWORD PTR [esi]
100145f2:	mov    ebp,DWORD PTR [esi+0x8]
100145f5:	push   esi
100145f6:	call   0x100430d2
100145fb:	test   ebp,ebp
100145fd:	pop    ecx
100145fe:	mov    esi,ebp
10014600:	jne    0x100145ed
10014602:	mov    DWORD PTR [edi+0x8],ebp
10014605:	mov    DWORD PTR [ebx+0xc],ebp
10014608:	pop    esi
10014609:	mov    eax,DWORD PTR [ebx+0x28]
1001460c:	cmp    eax,ebp
1001460e:	je     0x10014616
10014610:	mov    ecx,DWORD PTR [eax]
10014612:	push   eax
10014613:	call   DWORD PTR [ecx+0x8]
10014616:	add    ebx,0x10
10014619:	push   ebx
1001461a:	call   DWORD PTR ds:0x10066138
10014620:	mov    DWORD PTR [edi],ebp
10014622:	pop    edi
10014623:	pop    ebp
10014624:	pop    ebx
10014625:	ret    
10014626:	add    ecx,0x8
10014629:	push   ecx
1001462a:	call   DWORD PTR ds:0x100660a4
10014630:	ret    
10014631:	add    ecx,0x8
10014634:	push   ecx
10014635:	call   DWORD PTR ds:0x100660ac
1001463b:	ret    
1001463c:	mov    eax,DWORD PTR [ecx+0x8]
1001463f:	ret    
10014640:	push   ebx
10014641:	mov    ebx,DWORD PTR [esp+0x8]
10014645:	test   ebx,ebx
10014647:	jne    0x10014650
10014649:	mov    eax,0x80004003
1001464e:	jmp    0x10014685
10014650:	push   esi
10014651:	push   edi
10014652:	xor    edi,edi
10014654:	lea    esi,[ecx+0x28]
10014657:	cmp    DWORD PTR [esi],edi
10014659:	jne    0x10014675
1001465b:	push   esi
1001465c:	push   0x1006fcd8
10014661:	push   0x1
10014663:	push   edi
10014664:	push   0x1006b848
10014669:	call   DWORD PTR ds:0x1006643c
1001466f:	mov    edi,eax
10014671:	test   edi,edi
10014673:	jl     0x10014681
10014675:	mov    eax,DWORD PTR [esi]
10014677:	mov    DWORD PTR [ebx],eax
10014679:	mov    esi,DWORD PTR [esi]
1001467b:	mov    eax,DWORD PTR [esi]
1001467d:	push   esi
1001467e:	call   DWORD PTR [eax+0x4]
10014681:	mov    eax,edi
10014683:	pop    edi
10014684:	pop    esi
10014685:	pop    ebx
10014686:	ret    0x4
10014689:	push   esi
1001468a:	push   edi
1001468b:	mov    esi,ecx
1001468d:	xor    edi,edi
1001468f:	dec    esi
10014690:	je     0x100146b8
10014692:	movzx  ecx,WORD PTR [edx]
10014695:	test   cx,cx
10014698:	je     0x100146b8
1001469a:	mov    WORD PTR [eax],cx
1001469d:	inc    eax
1001469e:	inc    eax
1001469f:	cmp    WORD PTR [edx],0x27
100146a3:	jne    0x100146b1
100146a5:	inc    edi
100146a6:	cmp    edi,esi
100146a8:	jae    0x100146b1
100146aa:	mov    WORD PTR [eax],0x27
100146af:	inc    eax
100146b0:	inc    eax
100146b1:	inc    edx
100146b2:	inc    edx
100146b3:	inc    edi
100146b4:	cmp    edi,esi
100146b6:	jb     0x10014692
100146b8:	and    WORD PTR [eax],0x0
100146bc:	pop    edi
100146bd:	pop    esi
100146be:	ret    
100146bf:	mov    eax,0x80004005
100146c4:	ret    0x10
100146c7:	push   DWORD PTR [esp+0xc]
100146cb:	mov    edx,DWORD PTR [esp+0x14]
100146cf:	push   DWORD PTR [esp+0xc]
100146d3:	mov    ecx,DWORD PTR [esp+0xc]
100146d7:	call   0x10015c55
100146dc:	ret    0x10
100146df:	push   DWORD PTR [esp+0xc]
100146e3:	mov    edx,DWORD PTR [esp+0x14]
100146e7:	push   DWORD PTR [esp+0xc]
100146eb:	mov    ecx,DWORD PTR [esp+0xc]
100146ef:	call   0x10015e08
100146f4:	ret    0x10
100146f7:	push   esi
100146f8:	mov    esi,ecx
100146fa:	mov    DWORD PTR [esi],0x1006fc98
10014700:	call   0x100145bf
10014705:	test   BYTE PTR [esp+0x8],0x1
1001470a:	je     0x10014713
1001470c:	push   esi
1001470d:	call   0x100430d2
10014712:	pop    ecx
10014713:	mov    eax,esi
10014715:	pop    esi
10014716:	ret    0x4
10014719:	mov    eax,DWORD PTR [esi]
1001471b:	test   eax,eax
1001471d:	je     0x10014729
1001471f:	push   eax
10014720:	call   DWORD PTR ds:0x10066018
10014726:	and    DWORD PTR [esi],0x0
10014729:	ret    
1001472a:	push   ebp
1001472b:	mov    ebp,esp
1001472d:	cmp    DWORD PTR [ebp+0x10],0x0
10014731:	jne    0x1001473d
10014733:	push   0x80004005
10014738:	call   0x10001f24
1001473d:	push   esi
1001473e:	mov    esi,DWORD PTR [ebp+0x10]
10014741:	push   edi
10014742:	xor    edi,edi
10014744:	push   esi
10014745:	call   DWORD PTR ds:0x100660c4
1001474b:	inc    eax
1001474c:	lea    ecx,[eax+eax*1]
1001474f:	add    esi,ecx
10014751:	add    edi,ecx
10014753:	cmp    eax,0x1
10014756:	jne    0x10014744
10014758:	mov    eax,DWORD PTR [ebp+0x8]
1001475b:	push   edi
1001475c:	push   DWORD PTR [ebp+0x10]
1001475f:	push   0x7
10014761:	push   0x0
10014763:	push   DWORD PTR [ebp+0xc]
10014766:	push   DWORD PTR [eax]
10014768:	call   DWORD PTR ds:0x10066014
1001476e:	pop    edi
1001476f:	pop    esi
10014770:	pop    ebp
10014771:	ret    0xc
10014774:	push   ebp
10014775:	mov    ebp,esp
10014777:	sub    esp,0x228
1001477d:	mov    eax,ds:0x1007e030
10014782:	xor    eax,ebp
10014784:	mov    DWORD PTR [ebp-0x8],eax
10014787:	push   ebx
10014788:	push   esi
10014789:	push   edi
1001478a:	lea    edx,[ebp-0x214]
10014790:	push   edx
10014791:	push   0x2001f
10014796:	mov    eax,ecx
10014798:	mov    ecx,DWORD PTR [ebp+0x8]
1001479b:	xor    esi,esi
1001479d:	push   esi
1001479e:	mov    DWORD PTR [ebp-0x220],eax
100147a4:	mov    eax,DWORD PTR [eax]
100147a6:	push   ecx
100147a7:	push   eax
100147a8:	mov    DWORD PTR [ebp-0x21c],ecx
100147ae:	mov    DWORD PTR [ebp-0x210],esi
100147b4:	mov    DWORD PTR [ebp-0x214],esi
100147ba:	call   DWORD PTR ds:0x10066020
100147c0:	mov    ebx,DWORD PTR ds:0x10066018
100147c6:	mov    edi,eax
100147c8:	cmp    edi,esi
100147ca:	jne    0x10014891
100147d0:	xor    eax,eax
100147d2:	cmp    DWORD PTR [ebp-0x210],esi
100147d8:	je     0x100147e2
100147da:	push   DWORD PTR [ebp-0x210]
100147e0:	call   ebx
100147e2:	cmp    eax,esi
100147e4:	mov    ecx,DWORD PTR [ebp-0x214]
100147ea:	mov    edi,eax
100147ec:	mov    DWORD PTR [ebp-0x210],ecx
100147f2:	jne    0x10014891
100147f8:	mov    edi,DWORD PTR ds:0x1006601c
100147fe:	lea    eax,[ebp-0x228]
10014804:	push   eax
10014805:	push   esi
10014806:	push   esi
10014807:	push   esi
10014808:	lea    eax,[ebp-0x218]
1001480e:	push   eax
1001480f:	lea    eax,[ebp-0x20c]
10014815:	push   eax
10014816:	push   esi
10014817:	push   ecx
10014818:	jmp    0x10014855
1001481a:	lea    eax,[ebp-0x20c]
10014820:	push   eax
10014821:	lea    ecx,[ebp-0x210]
10014827:	call   0x10014774
1001482c:	cmp    eax,esi
1001482e:	mov    DWORD PTR [ebp-0x214],eax
10014834:	jne    0x100148b4
10014836:	lea    eax,[ebp-0x228]
1001483c:	push   eax
1001483d:	push   esi
1001483e:	push   esi
1001483f:	push   esi
10014840:	lea    eax,[ebp-0x218]
10014846:	push   eax
10014847:	lea    eax,[ebp-0x20c]
1001484d:	push   eax
1001484e:	push   esi
1001484f:	push   DWORD PTR [ebp-0x210]
10014855:	mov    DWORD PTR [ebp-0x218],0x100
1001485f:	call   edi
10014861:	test   eax,eax
10014863:	je     0x1001481a
10014865:	cmp    DWORD PTR [ebp-0x210],esi
1001486b:	je     0x1001487b
1001486d:	push   DWORD PTR [ebp-0x210]
10014873:	call   ebx
10014875:	mov    DWORD PTR [ebp-0x210],esi
1001487b:	push   DWORD PTR [ebp-0x21c]
10014881:	mov    eax,DWORD PTR [ebp-0x220]
10014887:	push   DWORD PTR [eax]
10014889:	call   DWORD PTR ds:0x1006600c
1001488f:	mov    edi,eax
10014891:	cmp    DWORD PTR [ebp-0x210],esi
10014897:	je     0x100148a1
10014899:	push   DWORD PTR [ebp-0x210]
1001489f:	call   ebx
100148a1:	mov    eax,edi
100148a3:	mov    ecx,DWORD PTR [ebp-0x8]
100148a6:	pop    edi
100148a7:	pop    esi
100148a8:	xor    ecx,ebp
100148aa:	pop    ebx
100148ab:	call   0x100430d7
100148b0:	leave  
100148b1:	ret    0x4
100148b4:	cmp    DWORD PTR [ebp-0x210],esi
100148ba:	je     0x100148c4
100148bc:	push   DWORD PTR [ebp-0x210]
100148c2:	call   ebx
100148c4:	mov    eax,DWORD PTR [ebp-0x214]
100148ca:	jmp    0x100148a3
100148cc:	push   0x20
100148ce:	mov    eax,0x100605a9
100148d3:	call   0x10059ca8
100148d8:	xor    edi,edi
100148da:	cmp    DWORD PTR [ebp+0xc],edi
100148dd:	je     0x100149e5
100148e3:	cmp    DWORD PTR [ebp+0x10],edi
100148e6:	je     0x100149e5
100148ec:	push   DWORD PTR [ebp+0xc]
100148ef:	mov    DWORD PTR [ebp-0x1c],edi
100148f2:	call   DWORD PTR ds:0x100660c4
100148f8:	push   0x2
100148fa:	lea    eax,[eax+eax*1+0x2]
100148fe:	xor    ecx,ecx
10014900:	pop    esi
10014901:	mov    DWORD PTR [ebp-0x20],eax
10014904:	mov    edx,esi
10014906:	mul    edx
10014908:	seto   cl
1001490b:	mov    DWORD PTR [ebp-0x14],edi
1001490e:	mov    DWORD PTR [ebp-0x4],edi
10014911:	neg    ecx
10014913:	or     ecx,eax
10014915:	push   ecx
10014916:	call   0x100439b6
1001491b:	pop    ecx
1001491c:	mov    DWORD PTR [ebp-0x14],eax
1001491f:	jmp    0x1001492c
10014921:	mov    eax,0x10014927
10014926:	ret    
10014927:	push   0x2
10014929:	xor    edi,edi
1001492b:	pop    esi
1001492c:	push   DWORD PTR [ebp+0x10]
1001492f:	mov    DWORD PTR [ebp-0x4],esi
10014932:	mov    eax,DWORD PTR [ebp-0x14]
10014935:	mov    DWORD PTR [ebp-0x2c],eax
10014938:	call   DWORD PTR ds:0x100660c4
1001493e:	lea    eax,[eax+eax*1+0x2]
10014942:	xor    ecx,ecx
10014944:	mov    DWORD PTR [ebp-0x24],eax
10014947:	mov    edx,esi
10014949:	mul    edx
1001494b:	seto   cl
1001494e:	mov    DWORD PTR [ebp-0x18],edi
10014951:	mov    BYTE PTR [ebp-0x4],0x3
10014955:	neg    ecx
10014957:	or     ecx,eax
10014959:	push   ecx
1001495a:	call   0x100439b6
1001495f:	pop    ecx
10014960:	mov    DWORD PTR [ebp-0x18],eax
10014963:	mov    DWORD PTR [ebp-0x4],esi
10014966:	jmp    0x10014970
10014968:	mov    eax,0x1001496e
1001496d:	ret    
1001496e:	xor    edi,edi
10014970:	mov    BYTE PTR [ebp-0x4],0x5
10014974:	cmp    DWORD PTR [ebp-0x14],edi
10014977:	mov    esi,DWORD PTR [ebp-0x18]
1001497a:	mov    DWORD PTR [ebp-0x28],esi
1001497d:	je     0x100149ba
1001497f:	cmp    esi,edi
10014981:	je     0x100149ba
10014983:	push   DWORD PTR [ebp-0x20]
10014986:	push   DWORD PTR [ebp+0xc]
10014989:	push   DWORD PTR [ebp-0x20]
1001498c:	push   DWORD PTR [ebp-0x14]
1001498f:	call   0x10014532
10014994:	push   DWORD PTR [ebp-0x24]
10014997:	push   DWORD PTR [ebp+0x10]
1001499a:	push   DWORD PTR [ebp-0x24]
1001499d:	push   esi
1001499e:	call   0x10014532
100149a3:	mov    esi,DWORD PTR [ebp+0x8]
100149a6:	add    esp,0x20
100149a9:	lea    eax,[ebp-0x18]
100149ac:	push   eax
100149ad:	lea    eax,[ebp-0x14]
100149b0:	push   eax
100149b1:	call   0x1001797c
100149b6:	test   eax,eax
100149b8:	jne    0x100149c3
100149ba:	mov    DWORD PTR [ebp-0x1c],0x8007000e
100149c1:	jmp    0x100149c9
100149c3:	mov    DWORD PTR [ebp-0x2c],edi
100149c6:	mov    DWORD PTR [ebp-0x28],edi
100149c9:	push   DWORD PTR [ebp-0x28]
100149cc:	call   0x10043600
100149d1:	push   DWORD PTR [ebp-0x2c]
100149d4:	call   0x10043600
100149d9:	xor    eax,eax
100149db:	cmp    DWORD PTR [ebp-0x1c],edi
100149de:	pop    ecx
100149df:	pop    ecx
100149e0:	setge  al
100149e3:	jmp    0x100149e7
100149e5:	xor    eax,eax
100149e7:	call   0x10059d4d
100149ec:	ret    0xc
100149ef:	push   esi
100149f0:	mov    esi,eax
100149f2:	mov    eax,DWORD PTR [esi+0x8]
100149f5:	push   edi
100149f6:	xor    edi,edi
100149f8:	test   eax,eax
100149fa:	jle    0x10014a28
100149fc:	test   edi,edi
100149fe:	jl     0x10014a32
10014a00:	cmp    edi,eax
10014a02:	jge    0x10014a32
10014a04:	mov    eax,DWORD PTR [esi]
10014a06:	push   DWORD PTR [eax+edi*4]
10014a09:	call   0x10043600
10014a0e:	pop    ecx
10014a0f:	mov    eax,edi
10014a11:	mov    ecx,esi
10014a13:	call   0x10017a05
10014a18:	push   DWORD PTR [eax]
10014a1a:	call   0x10043600
10014a1f:	mov    eax,DWORD PTR [esi+0x8]
10014a22:	inc    edi
10014a23:	cmp    edi,eax
10014a25:	pop    ecx
10014a26:	jl     0x100149fc
10014a28:	call   0x100179de
10014a2d:	pop    edi
10014a2e:	xor    eax,eax
10014a30:	pop    esi
10014a31:	ret    
10014a32:	push   0x0
10014a34:	push   0x0
10014a36:	push   0x1
10014a38:	push   0xc000008c
10014a3d:	call   DWORD PTR ds:0x10066128
10014a43:	int3   
10014a44:	push   ebp
10014a45:	mov    ebp,esp
10014a47:	push   ecx
10014a48:	cmp    eax,0x64
10014a4b:	jge    0x10014a52
10014a4d:	mov    eax,0x3e8
10014a52:	and    DWORD PTR [esi],0x0
10014a55:	and    DWORD PTR [ebp-0x4],0x0
10014a59:	push   0x2
10014a5b:	push   eax
10014a5c:	mov    DWORD PTR [esi+0x4],eax
10014a5f:	lea    eax,[ebp-0x4]
10014a62:	push   eax
10014a63:	call   0x100144e6
10014a68:	add    esp,0xc
10014a6b:	test   eax,eax
10014a6d:	jge    0x10014a73
10014a6f:	xor    eax,eax
10014a71:	jmp    0x10014a7c
10014a73:	push   DWORD PTR [ebp-0x4]
10014a76:	call   DWORD PTR ds:0x10066428
10014a7c:	test   eax,eax
10014a7e:	mov    DWORD PTR [esi+0x8],eax
10014a81:	je     0x10014a87
10014a83:	and    WORD PTR [eax],0x0
10014a87:	mov    eax,esi
10014a89:	leave  
10014a8a:	ret    
10014a8b:	push   DWORD PTR [eax+0x8]
10014a8e:	call   DWORD PTR ds:0x1006642c
10014a94:	ret    
10014a95:	push   ebp
10014a96:	mov    ebp,esp
10014a98:	push   ecx
10014a99:	mov    ecx,DWORD PTR [esi]
10014a9b:	lea    eax,[ecx+edi*1+0x1]
10014a9f:	cmp    eax,ecx
10014aa1:	push   ebx
10014aa2:	jle    0x10014b33
10014aa8:	cmp    eax,edi
10014aaa:	jle    0x10014b33
10014ab0:	cmp    eax,DWORD PTR [esi+0x4]
10014ab3:	jl     0x10014af4
10014ab5:	mov    ecx,DWORD PTR [esi+0x4]
10014ab8:	cmp    ecx,0x3fffffff
10014abe:	jg     0x10014b33
10014ac0:	add    ecx,ecx
10014ac2:	cmp    eax,ecx
10014ac4:	mov    DWORD PTR [esi+0x4],ecx
10014ac7:	jge    0x10014ab5
10014ac9:	mov    ebx,DWORD PTR [esi+0x8]
10014acc:	and    DWORD PTR [ebp-0x4],0x0
10014ad0:	push   0x2
10014ad2:	push   ecx
10014ad3:	lea    eax,[ebp-0x4]
10014ad6:	push   eax
10014ad7:	call   0x100144e6
10014adc:	add    esp,0xc
10014adf:	test   eax,eax
10014ae1:	jl     0x10014b33
10014ae3:	push   DWORD PTR [ebp-0x4]
10014ae6:	push   ebx
10014ae7:	call   DWORD PTR ds:0x10066430
10014aed:	test   eax,eax
10014aef:	je     0x10014b33
10014af1:	mov    DWORD PTR [esi+0x8],eax
10014af4:	mov    eax,DWORD PTR [esi]
10014af6:	test   eax,eax
10014af8:	jl     0x10014b33
10014afa:	mov    edx,DWORD PTR [esi+0x4]
10014afd:	cmp    eax,edx
10014aff:	jge    0x10014b33
10014b01:	mov    ecx,edx
10014b03:	sub    ecx,eax
10014b05:	cmp    ecx,edx
10014b07:	jg     0x10014b33
10014b09:	lea    edx,[edi+edi*1]
10014b0c:	push   edx
10014b0d:	push   DWORD PTR [ebp+0x8]
10014b10:	add    ecx,ecx
10014b12:	push   ecx
10014b13:	mov    ecx,DWORD PTR [esi+0x8]
10014b16:	lea    eax,[ecx+eax*2]
10014b19:	push   eax
10014b1a:	call   0x10014532
10014b1f:	add    DWORD PTR [esi],edi
10014b21:	mov    eax,DWORD PTR [esi]
10014b23:	mov    ecx,DWORD PTR [esi+0x8]
10014b26:	and    WORD PTR [ecx+eax*2],0x0
10014b2b:	xor    eax,eax
10014b2d:	add    esp,0x10
10014b30:	inc    eax
10014b31:	jmp    0x10014b35
10014b33:	xor    eax,eax
10014b35:	pop    ebx
10014b36:	leave  
10014b37:	ret    0x4
10014b3a:	mov    eax,0x80004001
10014b3f:	ret    0xc
10014b42:	xor    eax,eax
10014b44:	inc    eax
10014b45:	ret    0x4
10014b48:	push   esi
10014b49:	lea    esi,[ecx+0x4]
10014b4c:	mov    eax,esi
10014b4e:	mov    DWORD PTR [ecx],0x1006fcc0
10014b54:	call   0x100149ef
10014b59:	mov    eax,esi
10014b5b:	call   0x100149ef
10014b60:	call   0x100179de
10014b65:	pop    esi
10014b66:	ret    
10014b67:	push   esi
10014b68:	mov    esi,ecx
10014b6a:	call   0x10014b48
10014b6f:	test   BYTE PTR [esp+0x8],0x1
10014b74:	je     0x10014b7d
10014b76:	push   esi
10014b77:	call   0x100430d2
10014b7c:	pop    ecx
10014b7d:	mov    eax,esi
10014b7f:	pop    esi
10014b80:	ret    0x4
10014b83:	push   0x4
10014b85:	mov    eax,0x10060f41
10014b8a:	call   0x10059c75
10014b8f:	cmp    DWORD PTR [ebp+0xc],0x0
10014b93:	je     0x10014bcb
10014b95:	cmp    DWORD PTR [ebp+0x10],0x0
10014b99:	je     0x10014bcb
10014b9b:	call   DWORD PTR ds:0x1007efec
10014ba1:	and    DWORD PTR [ebp-0x10],0x0
10014ba5:	push   DWORD PTR [ebp+0x10]
10014ba8:	mov    eax,DWORD PTR [ebp+0x8]
10014bab:	push   DWORD PTR [ebp+0xc]
10014bae:	and    DWORD PTR [ebp-0x4],0x0
10014bb2:	add    eax,0x4
10014bb5:	push   eax
10014bb6:	call   0x100148cc
10014bbb:	neg    eax
10014bbd:	sbb    eax,eax
10014bbf:	and    eax,0x7ff8fff2
10014bc4:	add    eax,0x8007000e
10014bc9:	jmp    0x10014bd0
10014bcb:	mov    eax,0x80070057
10014bd0:	call   0x10059d4d
10014bd5:	ret    0xc
10014bd8:	push   ebp
10014bd9:	sub    esp,0x404
10014bdf:	lea    ebp,[esp-0x4]
10014be3:	mov    eax,ds:0x1007e030
10014be8:	xor    eax,ebp
10014bea:	mov    DWORD PTR [ebp+0x404],eax
10014bf0:	push   0x1c
10014bf2:	mov    eax,0x10062d02
10014bf7:	call   0x10059ca8
10014bfc:	mov    eax,DWORD PTR [ebp+0x414]
10014c02:	mov    edi,ecx
10014c04:	mov    ebx,edx
10014c06:	mov    DWORD PTR [ebp-0x14],eax
10014c09:	call   DWORD PTR ds:0x1007efec
10014c0f:	xor    esi,esi
10014c11:	mov    DWORD PTR [ebp-0x28],esi
10014c14:	mov    eax,DWORD PTR [ebp+0x410]
10014c1a:	mov    DWORD PTR [ebp-0x4],esi
10014c1d:	mov    DWORD PTR [ebp-0x20],eax
10014c20:	mov    DWORD PTR [ebp-0x24],esi
10014c23:	mov    DWORD PTR [ebp+0x0],esi
10014c26:	push   0x2
10014c28:	push   esi
10014c29:	push   edi
10014c2a:	mov    BYTE PTR [ebp-0x4],0x1
10014c2e:	call   DWORD PTR ds:0x10066100
10014c34:	cmp    eax,esi
10014c36:	mov    DWORD PTR [ebp-0x18],eax
10014c39:	jne    0x10014c47
10014c3b:	call   0x1000667c
10014c40:	mov    esi,eax
10014c42:	jmp    0x10014d2b
10014c47:	push   DWORD PTR [ebp-0x14]
10014c4a:	push   ebx
10014c4b:	push   eax
10014c4c:	call   DWORD PTR ds:0x1006607c
10014c52:	mov    edi,eax
10014c54:	cmp    edi,esi
10014c56:	jne    0x10014c62
10014c58:	call   0x1000667c
10014c5d:	jmp    0x10014d20
10014c62:	push   edi
10014c63:	push   DWORD PTR [ebp-0x18]
10014c66:	call   DWORD PTR ds:0x10066080
10014c6c:	cmp    eax,esi
10014c6e:	mov    DWORD PTR [ebp-0x1c],eax
10014c71:	je     0x10014c58
10014c73:	push   edi
10014c74:	push   DWORD PTR [ebp-0x18]
10014c77:	call   DWORD PTR ds:0x10066088
10014c7d:	mov    edi,eax
10014c7f:	lea    eax,[edi+0x1]
10014c82:	cmp    eax,edi
10014c84:	mov    DWORD PTR [ebp-0x14],edi
10014c87:	jae    0x10014ca3
10014c89:	lea    eax,[ebp+0x4]
10014c8c:	cmp    DWORD PTR [ebp+0x0],eax
10014c8f:	je     0x10014c99
10014c91:	lea    eax,[ebp+0x0]
10014c94:	call   0x10017bc8
10014c99:	mov    eax,0x8007000e
10014c9e:	jmp    0x10014d3d
10014ca3:	push   0x2
10014ca5:	push   eax
10014ca6:	mov    BYTE PTR [ebp-0x4],0x2
10014caa:	call   0x10018277
10014caf:	cmp    eax,0x400
10014cb4:	pop    ecx
10014cb5:	pop    ecx
10014cb6:	jbe    0x10014cc4
10014cb8:	push   eax
10014cb9:	lea    eax,[ebp+0x0]
10014cbc:	push   eax
10014cbd:	call   0x10017e88
10014cc2:	jmp    0x10014cca
10014cc4:	lea    eax,[ebp+0x4]
10014cc7:	mov    DWORD PTR [ebp+0x0],eax
10014cca:	mov    DWORD PTR [ebp-0x4],0x1
10014cd1:	jmp    0x10014cde
10014cd3:	mov    eax,0x10014cd9
10014cd8:	ret    
10014cd9:	mov    edi,DWORD PTR [ebp-0x14]
10014cdc:	xor    esi,esi
10014cde:	mov    ebx,DWORD PTR [ebp+0x0]
10014ce1:	cmp    ebx,esi
10014ce3:	jne    0x10014cec
10014ce5:	mov    esi,0x8007000e
10014cea:	jmp    0x10014d22
10014cec:	call   DWORD PTR ds:0x1007efec
10014cf2:	push   edi
10014cf3:	push   ebx
10014cf4:	push   edi
10014cf5:	push   DWORD PTR [ebp-0x1c]
10014cf8:	push   esi
10014cf9:	push   eax
10014cfa:	call   DWORD PTR ds:0x1006608c
10014d00:	cmp    eax,esi
10014d02:	je     0x10014c58
10014d08:	mov    ecx,DWORD PTR [ebp+0x0]
10014d0b:	push   DWORD PTR [ebp+0x418]
10014d11:	mov    WORD PTR [ecx+eax*2],si
10014d15:	push   DWORD PTR [ebp+0x0]
10014d18:	lea    ecx,[ebp-0x24]
10014d1b:	call   0x1001552e
10014d20:	mov    esi,eax
10014d22:	push   DWORD PTR [ebp-0x18]
10014d25:	call   DWORD PTR ds:0x100660fc
10014d2b:	lea    eax,[ebp+0x4]
10014d2e:	cmp    DWORD PTR [ebp+0x0],eax
10014d31:	je     0x10014d3b
10014d33:	lea    eax,[ebp+0x0]
10014d36:	call   0x10017bc8
10014d3b:	mov    eax,esi
10014d3d:	mov    ecx,DWORD PTR [ebp-0xc]
10014d40:	mov    DWORD PTR fs:0x0,ecx
10014d47:	pop    ecx
10014d48:	pop    edi
10014d49:	pop    esi
10014d4a:	pop    ebx
10014d4b:	mov    ecx,DWORD PTR [ebp+0x404]
10014d51:	xor    ecx,ebp
10014d53:	call   0x100430d7
10014d58:	add    ebp,0x408
10014d5e:	leave  
10014d5f:	ret    0xc
10014d62:	mov    eax,DWORD PTR [esp+0x4]
10014d66:	add    eax,0x4
10014d69:	call   0x100149ef
10014d6e:	ret    0x4
10014d71:	push   esi
10014d72:	mov    esi,eax
10014d74:	push   edi
10014d75:	add    esi,0x4
10014d78:	xor    edi,edi
10014d7a:	cmp    DWORD PTR [esi+0x8],edi
10014d7d:	jle    0x10014d99
10014d7f:	mov    eax,DWORD PTR [esi]
10014d81:	push   DWORD PTR [esp+0xc]
10014d85:	mov    eax,DWORD PTR [eax+edi*4]
10014d88:	push   eax
10014d89:	call   DWORD PTR ds:0x10066134
10014d8f:	test   eax,eax
10014d91:	je     0x10014da5
10014d93:	inc    edi
10014d94:	cmp    edi,DWORD PTR [esi+0x8]
10014d97:	jl     0x10014d7f
10014d99:	or     eax,0xffffffff
10014d9c:	cmp    eax,0xffffffff
10014d9f:	jne    0x10014da9
10014da1:	xor    eax,eax
10014da3:	jmp    0x10014db2
10014da5:	mov    eax,edi
10014da7:	jmp    0x10014d9c
10014da9:	mov    ecx,esi
10014dab:	call   0x10017a05
10014db0:	mov    eax,DWORD PTR [eax]
10014db2:	pop    edi
10014db3:	pop    esi
10014db4:	ret    0x4
10014db7:	test   BYTE PTR ds:0x10080fb0,0x1
10014dbe:	jne    0x10014e13
10014dc0:	or     DWORD PTR ds:0x10080fb0,0x1
10014dc7:	mov    DWORD PTR ds:0x10080fb4,0x1006cc8c
10014dd1:	mov    WORD PTR ds:0x10080fb8,0x8
10014dda:	mov    DWORD PTR ds:0x10080fbc,0x1006cc88
10014de4:	mov    WORD PTR ds:0x10080fc0,0x4008
10014ded:	mov    DWORD PTR ds:0x10080fc4,0x1006cc84
10014df7:	mov    WORD PTR ds:0x10080fc8,0x13
10014e00:	mov    DWORD PTR ds:0x10080fcc,0x1006cc80
10014e0a:	mov    WORD PTR ds:0x10080fd0,0x11
10014e13:	push   esi
10014e14:	xor    esi,esi
10014e16:	push   DWORD PTR [esi*8+0x10080fb4]
10014e1d:	push   DWORD PTR [esp+0xc]
10014e21:	call   DWORD PTR ds:0x10066134
10014e27:	test   eax,eax
10014e29:	je     0x10014e35
10014e2b:	inc    esi
10014e2c:	cmp    esi,0x4
10014e2f:	jl     0x10014e16
10014e31:	xor    eax,eax
10014e33:	pop    esi
10014e34:	ret    
10014e35:	mov    ax,WORD PTR [esi*8+0x10080fb8]
10014e3d:	mov    ecx,DWORD PTR [esp+0xc]
10014e41:	mov    WORD PTR [ecx],ax
10014e44:	xor    eax,eax
10014e46:	inc    eax
10014e47:	pop    esi
10014e48:	ret    
10014e49:	push   esi
10014e4a:	xor    esi,esi
10014e4c:	test   eax,eax
10014e4e:	jne    0x10014e60
10014e50:	pop    esi
10014e51:	ret    
10014e52:	cmp    cx,WORD PTR [esp+0x8]
10014e57:	je     0x10014e6a
10014e59:	push   eax
10014e5a:	call   DWORD PTR ds:0x10066348
10014e60:	movzx  ecx,WORD PTR [eax]
10014e63:	test   cx,cx
10014e66:	jne    0x10014e52
10014e68:	jmp    0x10014e6c
10014e6a:	mov    esi,eax
10014e6c:	mov    eax,esi
10014e6e:	pop    esi
10014e6f:	ret    
10014e70:	mov    eax,DWORD PTR [esi]
10014e72:	movzx  ecx,WORD PTR [eax]
10014e75:	cmp    ecx,0x9
10014e78:	jl     0x10014e94
10014e7a:	cmp    ecx,0xa
10014e7d:	jle    0x10014e89
10014e7f:	cmp    ecx,0xd
10014e82:	je     0x10014e89
10014e84:	cmp    ecx,0x20
10014e87:	jne    0x10014e94
10014e89:	push   eax
10014e8a:	call   DWORD PTR ds:0x10066348
10014e90:	mov    DWORD PTR [esi],eax
10014e92:	jmp    0x10014e70
10014e94:	ret    
10014e95:	push   ebp
10014e96:	mov    ebp,esp
10014e98:	push   ecx
10014e99:	push   ecx
10014e9a:	push   ebx
10014e9b:	push   esi
10014e9c:	mov    esi,ecx
10014e9e:	mov    ebx,eax
10014ea0:	call   0x10014e70
10014ea5:	mov    eax,DWORD PTR [esi]
10014ea7:	movzx  ecx,WORD PTR [eax]
10014eaa:	test   cx,cx
10014ead:	jne    0x10014eb9
10014eaf:	mov    eax,0x80020009
10014eb4:	jmp    0x10014f9b
10014eb9:	cmp    cx,0x27
10014ebd:	push   edi
10014ebe:	mov    DWORD PTR [ebp-0x8],ebx
10014ec1:	jne    0x10014f42
10014ec3:	mov    edi,DWORD PTR ds:0x10066348
10014ec9:	push   eax
10014eca:	call   edi
10014ecc:	mov    DWORD PTR [esi],eax
10014ece:	jmp    0x10014f28
10014ed0:	mov    eax,DWORD PTR [esi]
10014ed2:	cmp    WORD PTR [eax],0x27
10014ed6:	jne    0x10014ee1
10014ed8:	push   eax
10014ed9:	call   edi
10014edb:	cmp    WORD PTR [eax],0x27
10014edf:	jne    0x10014f2e
10014ee1:	mov    eax,DWORD PTR [esi]
10014ee3:	cmp    WORD PTR [eax],0x27
10014ee7:	jne    0x10014eee
10014ee9:	push   eax
10014eea:	call   edi
10014eec:	mov    DWORD PTR [esi],eax
10014eee:	mov    eax,DWORD PTR [esi]
10014ef0:	push   eax
10014ef1:	mov    DWORD PTR [ebp-0x4],eax
10014ef4:	call   edi
10014ef6:	mov    edx,DWORD PTR [ebp-0x8]
10014ef9:	mov    DWORD PTR [esi],eax
10014efb:	sub    eax,DWORD PTR [ebp-0x4]
10014efe:	add    edx,0x2000
10014f04:	sar    eax,1
10014f06:	lea    ecx,[ebx+eax*2+0x2]
10014f0a:	cmp    ecx,edx
10014f0c:	jae    0x10014f9f
10014f12:	test   eax,eax
10014f14:	jle    0x10014f26
10014f16:	mov    ecx,DWORD PTR [ebp-0x4]
10014f19:	mov    dx,WORD PTR [ecx]
10014f1c:	mov    WORD PTR [ebx],dx
10014f1f:	inc    ebx
10014f20:	inc    ebx
10014f21:	inc    ecx
10014f22:	inc    ecx
10014f23:	dec    eax
10014f24:	jne    0x10014f19
10014f26:	mov    eax,DWORD PTR [esi]
10014f28:	cmp    WORD PTR [eax],0x0
10014f2c:	jne    0x10014ed0
10014f2e:	mov    eax,DWORD PTR [esi]
10014f30:	cmp    WORD PTR [eax],0x0
10014f34:	je     0x10014f9f
10014f36:	and    WORD PTR [ebx],0x0
10014f3a:	push   DWORD PTR [esi]
10014f3c:	call   edi
10014f3e:	mov    DWORD PTR [esi],eax
10014f40:	jmp    0x10014f98
10014f42:	mov    eax,DWORD PTR [esi]
10014f44:	movzx  ecx,WORD PTR [eax]
10014f47:	cmp    ecx,0x9
10014f4a:	jl     0x10014f5b
10014f4c:	cmp    ecx,0xa
10014f4f:	jle    0x10014f94
10014f51:	cmp    ecx,0xd
10014f54:	je     0x10014f94
10014f56:	cmp    ecx,0x20
10014f59:	je     0x10014f94
10014f5b:	push   eax
10014f5c:	mov    edi,eax
10014f5e:	call   DWORD PTR ds:0x10066348
10014f64:	mov    edx,DWORD PTR [ebp-0x8]
10014f67:	mov    DWORD PTR [esi],eax
10014f69:	sub    eax,edi
10014f6b:	sar    eax,1
10014f6d:	lea    ecx,[ebx+eax*2+0x2]
10014f71:	add    edx,0x2000
10014f77:	cmp    ecx,edx
10014f79:	jae    0x10014f9f
10014f7b:	test   eax,eax
10014f7d:	jle    0x10014f8c
10014f7f:	mov    cx,WORD PTR [edi]
10014f82:	mov    WORD PTR [ebx],cx
10014f85:	inc    ebx
10014f86:	inc    ebx
10014f87:	inc    edi
10014f88:	inc    edi
10014f89:	dec    eax
10014f8a:	jne    0x10014f7f
10014f8c:	mov    eax,DWORD PTR [esi]
10014f8e:	cmp    WORD PTR [eax],0x0
10014f92:	jne    0x10014f42
10014f94:	and    WORD PTR [ebx],0x0
10014f98:	xor    eax,eax
10014f9a:	pop    edi
10014f9b:	pop    esi
10014f9c:	pop    ebx
10014f9d:	leave  
10014f9e:	ret    
10014f9f:	mov    eax,0x80020009
10014fa4:	jmp    0x10014f9a
10014fa6:	push   ebp
10014fa7:	lea    ebp,[esp-0x2108]
10014fae:	mov    eax,0x2108
10014fb3:	call   0x1004a080
10014fb8:	push   0xffffffff
10014fba:	push   0x1005fe33
10014fbf:	mov    eax,fs:0x0
10014fc5:	push   eax
10014fc6:	sub    esp,0x1c
10014fc9:	mov    eax,ds:0x1007e030
10014fce:	xor    eax,ebp
10014fd0:	mov    DWORD PTR [ebp+0x2104],eax
10014fd6:	push   ebx
10014fd7:	push   esi
10014fd8:	push   edi
10014fd9:	push   eax
10014fda:	lea    eax,[ebp-0xc]
10014fdd:	mov    fs:0x0,eax
10014fe3:	mov    DWORD PTR [ebp-0x10],esp
10014fe6:	mov    eax,DWORD PTR [ebp+0x2110]
10014fec:	mov    DWORD PTR [ebp-0x1c],eax
10014fef:	mov    eax,DWORD PTR [ebp+0x2114]
10014ff5:	mov    esi,ecx
10014ff7:	mov    edi,edx
10014ff9:	mov    DWORD PTR [ebp-0x28],eax
10014ffc:	xor    ebx,ebx
10014ffe:	lea    eax,[ebp+0x104]
10015004:	mov    DWORD PTR [ebp-0x24],esi
10015007:	mov    DWORD PTR [ebp-0x20],edi
1001500a:	mov    DWORD PTR [ebp-0x14],ebx
1001500d:	call   0x10014e95
10015012:	cmp    eax,ebx
10015014:	jl     0x100152cf
1001501a:	lea    eax,[ebp-0x14]
1001501d:	push   eax
1001501e:	lea    eax,[ebp+0x104]
10015024:	push   eax
10015025:	call   0x10014db7
1001502a:	test   eax,eax
1001502c:	pop    ecx
1001502d:	pop    ecx
1001502e:	jne    0x1001503a
10015030:	mov    eax,0x80020009
10015035:	jmp    0x100152cf
1001503a:	call   0x10014e70
1001503f:	lea    eax,[ebp+0x104]
10015045:	mov    ecx,esi
10015047:	call   0x10014e95
1001504c:	cmp    eax,ebx
1001504e:	jl     0x100152cf
10015054:	movzx  eax,WORD PTR [ebp-0x14]
10015058:	sub    eax,0x8
1001505b:	je     0x10015288
10015061:	sub    eax,0x9
10015064:	je     0x1001516e
1001506a:	dec    eax
1001506b:	dec    eax
1001506c:	je     0x10015142
10015072:	sub    eax,0x3ff5
10015077:	jne    0x100152be
1001507d:	lea    eax,[ebp+0x104]
10015083:	push   eax
10015084:	call   DWORD PTR ds:0x100660c4
1001508a:	inc    eax
1001508b:	inc    eax
1001508c:	mov    DWORD PTR [ebp+0x0],ebx
1001508f:	push   0x2
10015091:	mov    DWORD PTR [ebp-0x4],ebx
10015094:	push   eax
10015095:	mov    BYTE PTR [ebp-0x4],0x1
10015099:	call   0x10018277
1001509e:	cmp    eax,0x100
100150a3:	pop    ecx
100150a4:	pop    ecx
100150a5:	jbe    0x100150b3
100150a7:	push   eax
100150a8:	lea    eax,[ebp+0x0]
100150ab:	push   eax
100150ac:	call   0x10017e88
100150b1:	jmp    0x100150c3
100150b3:	lea    eax,[ebp+0x4]
100150b6:	mov    DWORD PTR [ebp+0x0],eax
100150b9:	jmp    0x100150c3
100150bb:	mov    eax,0x100150c1
100150c0:	ret    
100150c1:	xor    ebx,ebx
100150c3:	mov    esi,DWORD PTR [ebp+0x0]
100150c6:	cmp    esi,ebx
100150c8:	je     0x10015126
100150ca:	cmp    WORD PTR [ebp+0x104],bx
100150d1:	lea    edi,[ebp+0x104]
100150d7:	je     0x1001510d
100150d9:	mov    ebx,DWORD PTR ds:0x10066348
100150df:	push   edi
100150e0:	call   ebx
100150e2:	movzx  ecx,WORD PTR [edi]
100150e5:	cmp    cx,0x5c
100150e9:	jne    0x100150fe
100150eb:	cmp    WORD PTR [eax],0x30
100150ef:	jne    0x100150fe
100150f1:	and    WORD PTR [esi],0x0
100150f5:	inc    esi
100150f6:	push   eax
100150f7:	inc    esi
100150f8:	call   ebx
100150fa:	mov    edi,eax
100150fc:	jmp    0x10015105
100150fe:	mov    WORD PTR [esi],cx
10015101:	inc    esi
10015102:	inc    esi
10015103:	inc    edi
10015104:	inc    edi
10015105:	cmp    WORD PTR [edi],0x0
10015109:	jne    0x100150df
1001510b:	xor    ebx,ebx
1001510d:	mov    WORD PTR [esi],bx
10015110:	mov    WORD PTR [esi+0x2],bx
10015114:	push   DWORD PTR [ebp+0x0]
10015117:	push   DWORD PTR [ebp-0x1c]
1001511a:	push   DWORD PTR [ebp-0x20]
1001511d:	call   0x1001472a
10015122:	mov    esi,eax
10015124:	jmp    0x10015129
10015126:	push   0xe
10015128:	pop    esi
10015129:	lea    eax,[ebp+0x4]
1001512c:	cmp    DWORD PTR [ebp+0x0],eax
1001512f:	je     0x100152b1
10015135:	lea    eax,[ebp+0x0]
10015138:	call   0x10017bc8
1001513d:	jmp    0x100152b1
10015142:	call   DWORD PTR ds:0x1007efec
10015148:	lea    eax,[ebp-0x18]
1001514b:	push   eax
1001514c:	push   ebx
1001514d:	push   ebx
1001514e:	lea    eax,[ebp+0x104]
10015154:	push   eax
10015155:	call   DWORD PTR ds:0x10066298
1001515b:	mov    eax,DWORD PTR [ebp-0x18]
1001515e:	mov    DWORD PTR [ebp-0x14],eax
10015161:	push   0x4
10015163:	lea    eax,[ebp-0x14]
10015166:	push   eax
10015167:	push   0x4
10015169:	jmp    0x100152a3
1001516e:	lea    eax,[ebp+0x104]
10015174:	push   eax
10015175:	call   DWORD PTR ds:0x100660c4
1001517b:	test   al,0x1
1001517d:	mov    DWORD PTR [ebp-0x14],eax
10015180:	je     0x1001518c
10015182:	mov    eax,0x80004005
10015187:	jmp    0x100152cf
1001518c:	cdq    
1001518d:	sub    eax,edx
1001518f:	mov    esi,eax
10015191:	sar    esi,1
10015193:	mov    DWORD PTR [ebp-0x18],esi
10015196:	mov    DWORD PTR [ebp+0x0],ebx
10015199:	push   0x1
1001519b:	mov    DWORD PTR [ebp-0x4],0x3
100151a2:	push   esi
100151a3:	mov    BYTE PTR [ebp-0x4],0x4
100151a7:	call   0x10018277
100151ac:	cmp    eax,0x100
100151b1:	pop    ecx
100151b2:	pop    ecx
100151b3:	jbe    0x100151c1
100151b5:	push   eax
100151b6:	lea    eax,[ebp+0x0]
100151b9:	push   eax
100151ba:	call   0x10017e88
100151bf:	jmp    0x100151d7
100151c1:	lea    eax,[ebp+0x4]
100151c4:	mov    DWORD PTR [ebp+0x0],eax
100151c7:	jmp    0x100151d7
100151c9:	mov    eax,0x100151cf
100151ce:	ret    
100151cf:	mov    edi,DWORD PTR [ebp-0x20]
100151d2:	mov    esi,DWORD PTR [ebp-0x18]
100151d5:	xor    ebx,ebx
100151d7:	cmp    DWORD PTR [ebp+0x0],ebx
100151da:	jne    0x100151ed
100151dc:	lea    eax,[ebp+0x4]
100151df:	test   eax,eax
100151e1:	je     0x10015182
100151e3:	lea    eax,[ebp+0x0]
100151e6:	call   0x10017bc8
100151eb:	jmp    0x10015182
100151ed:	push   esi
100151ee:	push   ebx
100151ef:	push   DWORD PTR [ebp+0x0]
100151f2:	call   0x10045ea0
100151f7:	add    esp,0xc
100151fa:	xor    esi,esi
100151fc:	cmp    DWORD PTR [ebp-0x14],ebx
100151ff:	jle    0x1001525f
10015201:	movzx  ecx,WORD PTR [ebp+esi*2+0x104]
10015209:	mov    eax,esi
1001520b:	cdq    
1001520c:	sub    eax,edx
1001520e:	sar    eax,1
10015210:	add    eax,DWORD PTR [ebp+0x0]
10015213:	movzx  edx,cx
10015216:	cmp    edx,0x30
10015219:	jl     0x10015243
1001521b:	cmp    edx,0x39
1001521e:	jle    0x1001523c
10015220:	cmp    edx,0x40
10015223:	jle    0x10015243
10015225:	cmp    edx,0x46
10015228:	jle    0x10015237
1001522a:	add    edx,0xffffff9f
1001522d:	cmp    edx,0x5
10015230:	ja     0x10015243
10015232:	sub    cl,0x57
10015235:	jmp    0x1001523f
10015237:	sub    cl,0x37
1001523a:	jmp    0x1001523f
1001523c:	sub    cl,0x30
1001523f:	mov    dl,cl
10015241:	jmp    0x10015245
10015243:	xor    dl,dl
10015245:	mov    edi,esi
10015247:	and    edi,0x1
1001524a:	shl    edi,0x2
1001524d:	push   0x4
1001524f:	pop    ecx
10015250:	sub    ecx,edi
10015252:	shl    dl,cl
10015254:	or     BYTE PTR [eax],dl
10015256:	inc    esi
10015257:	cmp    esi,DWORD PTR [ebp-0x14]
1001525a:	jl     0x10015201
1001525c:	mov    edi,DWORD PTR [ebp-0x20]
1001525f:	push   DWORD PTR [ebp-0x18]
10015262:	mov    eax,DWORD PTR [edi]
10015264:	push   DWORD PTR [ebp+0x0]
10015267:	push   0x3
10015269:	push   ebx
1001526a:	push   DWORD PTR [ebp-0x1c]
1001526d:	push   eax
1001526e:	call   DWORD PTR ds:0x10066014
10015274:	mov    esi,eax
10015276:	lea    eax,[ebp+0x4]
10015279:	cmp    DWORD PTR [ebp+0x0],eax
1001527c:	je     0x100152b1
1001527e:	lea    eax,[ebp+0x0]
10015281:	call   0x10017bc8
10015286:	jmp    0x100152b1
10015288:	lea    eax,[ebp+0x104]
1001528e:	push   eax
1001528f:	call   DWORD PTR ds:0x100660c4
10015295:	lea    eax,[eax+eax*1+0x2]
10015299:	push   eax
1001529a:	lea    eax,[ebp+0x104]
100152a0:	push   eax
100152a1:	push   0x1
100152a3:	push   ebx
100152a4:	push   DWORD PTR [ebp-0x1c]
100152a7:	push   DWORD PTR [edi]
100152a9:	call   DWORD PTR ds:0x10066014
100152af:	mov    esi,eax
100152b1:	cmp    esi,ebx
100152b3:	je     0x100152be
100152b5:	mov    eax,esi
100152b7:	call   0x100145b0
100152bc:	jmp    0x100152cf
100152be:	mov    eax,DWORD PTR [ebp-0x28]
100152c1:	mov    ecx,DWORD PTR [ebp-0x24]
100152c4:	call   0x10014e95
100152c9:	cmp    eax,ebx
100152cb:	jl     0x100152cf
100152cd:	xor    eax,eax
100152cf:	mov    ecx,DWORD PTR [ebp-0xc]
100152d2:	mov    DWORD PTR fs:0x0,ecx
100152d9:	pop    ecx
100152da:	pop    edi
100152db:	pop    esi
100152dc:	pop    ebx
100152dd:	mov    ecx,DWORD PTR [ebp+0x2104]
100152e3:	xor    ecx,ebp
100152e5:	call   0x100430d7
100152ea:	add    ebp,0x2108
100152f0:	leave  
100152f1:	ret    0x8
100152f4:	push   esi
100152f5:	mov    esi,0x1006ccb8
100152fa:	push   DWORD PTR [esi]
100152fc:	push   DWORD PTR [esp+0xc]
10015300:	call   DWORD PTR ds:0x10066134
10015306:	test   eax,eax
10015308:	je     0x1001531c
1001530a:	add    esi,0x4
1001530d:	cmp    esi,0x1006cce8
10015313:	jl     0x100152fa
10015315:	xor    eax,eax
10015317:	inc    eax
10015318:	pop    esi
10015319:	ret    0x4
1001531c:	xor    eax,eax
1001531e:	jmp    0x10015318
10015320:	push   ebp
10015321:	mov    ebp,esp
10015323:	push   ecx
10015324:	xor    eax,eax
10015326:	push   eax
10015327:	push   eax
10015328:	push   eax
10015329:	push   eax
1001532a:	push   eax
1001532b:	push   eax
1001532c:	push   eax
1001532d:	lea    ecx,[ebp-0x4]
10015330:	push   ecx
10015331:	push   eax
10015332:	push   eax
10015333:	push   eax
10015334:	push   DWORD PTR [ebp+0x8]
10015337:	mov    DWORD PTR [ebp-0x4],eax
1001533a:	call   DWORD PTR ds:0x10066008
10015340:	test   eax,eax
10015342:	je     0x10015348
10015344:	xor    eax,eax
10015346:	jmp    0x10015351
10015348:	xor    eax,eax
1001534a:	cmp    eax,DWORD PTR [ebp-0x4]
1001534d:	sbb    eax,eax
1001534f:	neg    eax
10015351:	leave  
10015352:	ret    0x4
10015355:	mov    eax,0x2004
1001535a:	call   0x1004a080
1001535f:	mov    eax,ds:0x1007e030
10015364:	xor    eax,esp
10015366:	mov    DWORD PTR [esp+0x2000],eax
1001536d:	cmp    WORD PTR [edi],0x3d
10015371:	push   esi
10015372:	mov    esi,ecx
10015374:	jne    0x100153a2
10015376:	mov    eax,edi
10015378:	call   0x10014e95
1001537d:	test   eax,eax
1001537f:	jl     0x100153a4
10015381:	call   0x10014e70
10015386:	lea    eax,[esp+0x4]
1001538a:	mov    ecx,esi
1001538c:	call   0x10014e95
10015391:	test   eax,eax
10015393:	jl     0x100153a4
10015395:	mov    eax,edi
10015397:	mov    ecx,esi
10015399:	call   0x10014e95
1001539e:	test   eax,eax
100153a0:	jl     0x100153a4
100153a2:	xor    eax,eax
100153a4:	mov    ecx,DWORD PTR [esp+0x2004]
100153ab:	pop    esi
100153ac:	xor    ecx,esp
100153ae:	call   0x100430d7
100153b3:	add    esp,0x2004
100153b9:	ret    
100153ba:	push   0x60
100153bc:	mov    eax,0x10061ff0
100153c1:	call   0x10059cde
100153c6:	mov    eax,DWORD PTR [ebp+0x8]
100153c9:	test   eax,eax
100153cb:	mov    edi,ecx
100153cd:	mov    DWORD PTR [ebp-0x54],eax
100153d0:	mov    DWORD PTR [ebp-0x64],edi
100153d3:	je     0x10015521
100153d9:	test   edi,edi
100153db:	je     0x10015521
100153e1:	and    DWORD PTR [edi],0x0
100153e4:	push   eax
100153e5:	call   DWORD PTR ds:0x100660c4
100153eb:	add    eax,eax
100153ed:	lea    esi,[ebp-0x60]
100153f0:	call   0x10014a44
100153f5:	xor    ecx,ecx
100153f7:	mov    DWORD PTR [ebp-0x4],ecx
100153fa:	cmp    DWORD PTR [ebp-0x58],ecx
100153fd:	jne    0x10015410
100153ff:	push   ecx
10015400:	call   DWORD PTR ds:0x1006642c
10015406:	mov    eax,0x8007000e
1001540b:	jmp    0x10015526
10015410:	mov    eax,DWORD PTR [ebp-0x54]
10015413:	mov    DWORD PTR [ebx],eax
10015415:	cmp    WORD PTR [eax],cx
10015418:	mov    DWORD PTR [ebp-0x54],ecx
1001541b:	je     0x1001545b
1001541d:	mov    eax,DWORD PTR [ebx]
1001541f:	cmp    WORD PTR [eax],0x25
10015423:	push   eax
10015424:	jne    0x10015435
10015426:	call   DWORD PTR ds:0x10066348
1001542c:	mov    DWORD PTR [ebx],eax
1001542e:	cmp    WORD PTR [eax],0x25
10015432:	jne    0x10015475
10015434:	push   eax
10015435:	xor    edi,edi
10015437:	inc    edi
10015438:	lea    esi,[ebp-0x60]
1001543b:	call   0x10014a95
10015440:	test   eax,eax
10015442:	je     0x10015515
10015448:	push   DWORD PTR [ebx]
1001544a:	call   DWORD PTR ds:0x10066348
10015450:	mov    DWORD PTR [ebx],eax
10015452:	cmp    WORD PTR [eax],0x0
10015456:	jne    0x1001541d
10015458:	mov    edi,DWORD PTR [ebp-0x64]
1001545b:	mov    eax,DWORD PTR [ebp-0x58]
1001545e:	and    DWORD PTR [ebp-0x58],0x0
10015462:	mov    DWORD PTR [edi],eax
10015464:	push   DWORD PTR [ebp-0x58]
10015467:	call   DWORD PTR ds:0x1006642c
1001546d:	mov    eax,DWORD PTR [ebp-0x54]
10015470:	jmp    0x10015526
10015475:	push   0x25
10015477:	call   0x10014e49
1001547c:	test   eax,eax
1001547e:	pop    ecx
1001547f:	mov    DWORD PTR [ebp-0x68],eax
10015482:	je     0x100154fd
10015484:	mov    ecx,DWORD PTR [ebx]
10015486:	sub    eax,ecx
10015488:	sar    eax,1
1001548a:	cmp    eax,0x1f
1001548d:	jg     0x10015509
1001548f:	push   eax
10015490:	push   ecx
10015491:	lea    eax,[ebp-0x50]
10015494:	push   0x20
10015496:	push   eax
10015497:	call   0x100460fd
1001549c:	push   eax
1001549d:	call   0x10001f3c
100154a2:	add    esp,0x14
100154a5:	lea    eax,[ebp-0x50]
100154a8:	push   eax
100154a9:	mov    eax,DWORD PTR [ebx+0x4]
100154ac:	call   0x10014d71
100154b1:	mov    esi,eax
100154b3:	test   esi,esi
100154b5:	je     0x100154fd
100154b7:	call   DWORD PTR ds:0x1007efec
100154bd:	and    DWORD PTR [ebp-0x6c],0x0
100154c1:	push   esi
100154c2:	mov    BYTE PTR [ebp-0x4],0x1
100154c6:	call   DWORD PTR ds:0x100660c4
100154cc:	push   esi
100154cd:	mov    edi,eax
100154cf:	lea    esi,[ebp-0x60]
100154d2:	call   0x10014a95
100154d7:	test   eax,eax
100154d9:	mov    BYTE PTR [ebp-0x4],0x0
100154dd:	je     0x10015515
100154df:	mov    esi,DWORD PTR [ebp-0x68]
100154e2:	cmp    DWORD PTR [ebx],esi
100154e4:	je     0x10015448
100154ea:	push   DWORD PTR [ebx]
100154ec:	call   DWORD PTR ds:0x10066348
100154f2:	cmp    eax,esi
100154f4:	mov    DWORD PTR [ebx],eax
100154f6:	jne    0x100154ea
100154f8:	jmp    0x10015448
100154fd:	mov    DWORD PTR [ebp-0x54],0x80020009
10015504:	jmp    0x10015464
10015509:	mov    DWORD PTR [ebp-0x54],0x80004005
10015510:	jmp    0x10015464
10015515:	mov    DWORD PTR [ebp-0x54],0x8007000e
1001551c:	jmp    0x10015464
10015521:	mov    eax,0x80004003
10015526:	call   0x10059d61
1001552b:	ret    0x4
1001552e:	push   ebp
1001552f:	lea    ebp,[esp-0x1f8c]
10015536:	mov    eax,0x200c
1001553b:	call   0x1004a080
10015540:	mov    eax,ds:0x1007e030
10015545:	xor    eax,ebp
10015547:	mov    DWORD PTR [ebp+0x1f88],eax
1001554d:	mov    eax,DWORD PTR [ebp+0x1f94]
10015553:	push   ebx
10015554:	push   esi
10015555:	push   edi
10015556:	mov    esi,ecx
10015558:	xor    edi,edi
1001555a:	push   eax
1001555b:	lea    ecx,[ebp-0x80]
1001555e:	mov    ebx,esi
10015560:	mov    DWORD PTR [ebp-0x80],edi
10015563:	call   0x100153ba
10015568:	mov    ebx,eax
1001556a:	cmp    ebx,edi
1001556c:	jl     0x1001564b
10015572:	mov    eax,DWORD PTR [ebp-0x80]
10015575:	mov    DWORD PTR [esi],eax
10015577:	jmp    0x1001561a
1001557c:	lea    eax,[ebp-0x78]
1001557f:	mov    ecx,esi
10015581:	call   0x10014e95
10015586:	mov    ebx,eax
10015588:	cmp    ebx,edi
1001558a:	jl     0x10015640
10015590:	xor    ebx,ebx
10015592:	push   DWORD PTR [ebx*8+0x1006f628]
10015599:	lea    eax,[ebp-0x78]
1001559c:	push   eax
1001559d:	call   DWORD PTR ds:0x10066134
100155a3:	test   eax,eax
100155a5:	je     0x100155f6
100155a7:	inc    ebx
100155a8:	cmp    ebx,0xe
100155ab:	jl     0x10015592
100155ad:	mov    DWORD PTR [ebp-0x7c],edi
100155b0:	cmp    DWORD PTR [ebp-0x7c],edi
100155b3:	je     0x10015625
100155b5:	lea    eax,[ebp-0x78]
100155b8:	mov    ecx,esi
100155ba:	call   0x10014e95
100155bf:	mov    ebx,eax
100155c1:	cmp    ebx,edi
100155c3:	jl     0x10015640
100155c5:	cmp    WORD PTR [ebp-0x78],0x7b
100155ca:	jne    0x10015625
100155cc:	cmp    DWORD PTR [ebp+0x1f98],edi
100155d2:	lea    eax,[ebp-0x78]
100155d5:	mov    ecx,esi
100155d7:	je     0x10015602
100155d9:	mov    edi,DWORD PTR [esi]
100155db:	push   0x0
100155dd:	push   DWORD PTR [ebp+0x1f98]
100155e3:	push   DWORD PTR [ebp-0x7c]
100155e6:	push   eax
100155e7:	call   0x10015665
100155ec:	mov    ebx,eax
100155ee:	test   ebx,ebx
100155f0:	jl     0x1001562c
100155f2:	xor    edi,edi
100155f4:	jmp    0x10015613
100155f6:	mov    eax,DWORD PTR [ebx*8+0x1006f62c]
100155fd:	mov    DWORD PTR [ebp-0x7c],eax
10015600:	jmp    0x100155b0
10015602:	push   edi
10015603:	push   edi
10015604:	push   DWORD PTR [ebp-0x7c]
10015607:	push   eax
10015608:	call   0x10015665
1001560d:	mov    ebx,eax
1001560f:	cmp    ebx,edi
10015611:	jl     0x10015640
10015613:	call   0x10014e70
10015618:	mov    eax,DWORD PTR [esi]
1001561a:	cmp    WORD PTR [eax],di
1001561d:	jne    0x1001557c
10015623:	jmp    0x10015640
10015625:	mov    ebx,0x80020009
1001562a:	jmp    0x10015640
1001562c:	push   0x0
1001562e:	push   0x0
10015630:	push   DWORD PTR [ebp-0x7c]
10015633:	lea    eax,[ebp-0x78]
10015636:	push   eax
10015637:	mov    ecx,esi
10015639:	mov    DWORD PTR [esi],edi
1001563b:	call   0x10015665
10015640:	push   DWORD PTR [ebp-0x80]
10015643:	call   DWORD PTR ds:0x1006642c
10015649:	mov    eax,ebx
1001564b:	mov    ecx,DWORD PTR [ebp+0x1f88]
10015651:	pop    edi
10015652:	pop    esi
10015653:	xor    ecx,ebp
10015655:	pop    ebx
10015656:	call   0x100430d7
1001565b:	add    ebp,0x1f8c
10015661:	leave  
10015662:	ret    0x8
10015665:	push   ebp
10015666:	mov    ebp,esp
10015668:	and    esp,0xfffffff8
1001566b:	push   0xffffffff
1001566d:	push   0x1006056b
10015672:	mov    eax,fs:0x0
10015678:	push   eax
10015679:	sub    esp,0x438
1001567f:	mov    eax,ds:0x1007e030
10015684:	xor    eax,esp
10015686:	mov    DWORD PTR [esp+0x430],eax
1001568d:	push   ebx
1001568e:	push   esi
1001568f:	push   edi
10015690:	mov    eax,ds:0x1007e030
10015695:	xor    eax,esp
10015697:	push   eax
10015698:	lea    eax,[esp+0x448]
1001569f:	mov    fs:0x0,eax
100156a5:	mov    eax,DWORD PTR [ebp+0xc]
100156a8:	mov    edi,DWORD PTR [ebp+0x8]
100156ab:	and    DWORD PTR [esp+0x10],0x0
100156b0:	mov    DWORD PTR [esp+0x18],ecx
100156b4:	mov    DWORD PTR [esp+0x1c],eax
100156b8:	mov    eax,DWORD PTR [ebp+0x14]
100156bb:	and    DWORD PTR [esp+0x450],0x0
100156c3:	mov    DWORD PTR [esp+0x24],eax
100156c7:	mov    eax,edi
100156c9:	call   0x10014e95
100156ce:	mov    esi,eax
100156d0:	test   esi,esi
100156d2:	jl     0x10015b2a
100156d8:	cmp    WORD PTR [edi],0x7d
100156dc:	je     0x10015b28
100156e2:	mov    esi,DWORD PTR ds:0x10066134
100156e8:	push   0x1006cc3c
100156ed:	push   edi
100156ee:	mov    DWORD PTR [esp+0x28],0x1
100156f6:	call   esi
100156f8:	mov    ebx,eax
100156fa:	neg    ebx
100156fc:	push   0x1006cc60
10015701:	sbb    ebx,ebx
10015703:	push   edi
10015704:	inc    ebx
10015705:	call   esi
10015707:	test   eax,eax
10015709:	je     0x10015713
1001570b:	test   ebx,ebx
1001570d:	je     0x100157df
10015713:	mov    ecx,DWORD PTR [esp+0x18]
10015717:	mov    eax,edi
10015719:	call   0x10014e95
1001571e:	mov    esi,eax
10015720:	test   esi,esi
10015722:	jl     0x10015b17
10015728:	cmp    DWORD PTR [ebp+0x10],0x0
1001572c:	je     0x100157df
10015732:	push   0x5c
10015734:	mov    eax,edi
10015736:	call   0x10014e49
1001573b:	test   eax,eax
1001573d:	pop    ecx
1001573e:	jne    0x10015bed
10015744:	push   edi
10015745:	call   0x100152f4
1001574a:	test   eax,eax
1001574c:	je     0x10015760
1001574e:	mov    eax,DWORD PTR [esp+0x1c]
10015752:	push   edi
10015753:	lea    ecx,[esp+0x18]
10015757:	mov    DWORD PTR [esp+0x18],eax
1001575b:	call   0x10014774
10015760:	test   ebx,ebx
10015762:	je     0x100157df
10015764:	mov    ecx,DWORD PTR [esp+0x18]
10015768:	mov    eax,edi
1001576a:	call   0x10014e95
1001576f:	mov    esi,eax
10015771:	test   esi,esi
10015773:	jl     0x10015b17
10015779:	mov    ecx,DWORD PTR [esp+0x18]
1001577d:	call   0x10015355
10015782:	mov    esi,eax
10015784:	test   esi,esi
10015786:	jl     0x10015b17
1001578c:	cmp    WORD PTR [edi],0x7b
10015790:	jne    0x100157d0
10015792:	push   edi
10015793:	call   DWORD PTR ds:0x100660c4
10015799:	cmp    eax,0x1
1001579c:	jne    0x100157d0
1001579e:	mov    ecx,DWORD PTR [esp+0x18]
100157a2:	push   0x0
100157a4:	push   DWORD PTR [ebp+0x10]
100157a7:	push   DWORD PTR [esp+0x18]
100157ab:	push   edi
100157ac:	call   0x10015665
100157b1:	mov    esi,eax
100157b3:	test   esi,esi
100157b5:	jl     0x10015b17
100157bb:	mov    ecx,DWORD PTR [esp+0x18]
100157bf:	mov    eax,edi
100157c1:	call   0x10014e95
100157c6:	mov    esi,eax
100157c8:	test   esi,esi
100157ca:	jl     0x10015b17
100157d0:	cmp    WORD PTR [edi],0x7d
100157d4:	jne    0x100156e2
100157da:	jmp    0x10015b17
100157df:	push   0x1006cc4c
100157e4:	push   edi
100157e5:	call   DWORD PTR ds:0x10066134
100157eb:	test   eax,eax
100157ed:	jne    0x10015808
100157ef:	and    DWORD PTR [esp+0x20],eax
100157f3:	mov    ecx,DWORD PTR [esp+0x18]
100157f7:	mov    eax,edi
100157f9:	call   0x10014e95
100157fe:	mov    esi,eax
10015800:	test   esi,esi
10015802:	jl     0x10015b17
10015808:	push   0x1006cc78
1001580d:	push   edi
1001580e:	xor    ebx,ebx
10015810:	call   DWORD PTR ds:0x10066134
10015816:	test   eax,eax
10015818:	jne    0x10015904
1001581e:	mov    ecx,DWORD PTR [esp+0x18]
10015822:	lea    eax,[esp+0x234]
10015829:	call   0x10014e95
1001582e:	mov    esi,eax
10015830:	test   esi,esi
10015832:	jl     0x10015b17
10015838:	mov    ecx,DWORD PTR [esp+0x18]
1001583c:	mov    eax,edi
1001583e:	call   0x10014e95
10015843:	mov    esi,eax
10015845:	test   esi,esi
10015847:	jl     0x10015b17
1001584d:	cmp    WORD PTR [edi],0x3d
10015851:	jne    0x10015bed
10015857:	cmp    DWORD PTR [ebp+0x10],ebx
1001585a:	je     0x10015898
1001585c:	mov    eax,DWORD PTR [esp+0x1c]
10015860:	mov    ecx,DWORD PTR [esp+0x18]
10015864:	mov    BYTE PTR [esp+0x450],0x1
1001586c:	mov    DWORD PTR [esp+0x14],eax
10015870:	push   edi
10015871:	lea    eax,[esp+0x238]
10015878:	push   eax
10015879:	lea    edx,[esp+0x1c]
1001587d:	call   0x10014fa6
10015882:	mov    esi,eax
10015884:	cmp    esi,ebx
10015886:	jl     0x10015c08
1001588c:	mov    BYTE PTR [esp+0x450],bl
10015893:	jmp    0x1001578c
10015898:	cmp    DWORD PTR [ebp+0x14],ebx
1001589b:	jne    0x100158f2
1001589d:	cmp    DWORD PTR [esp+0x20],ebx
100158a1:	je     0x100158f2
100158a3:	lea    eax,[esp+0x14]
100158a7:	push   eax
100158a8:	push   0x20006
100158ad:	push   ebx
100158ae:	push   ebx
100158af:	push   DWORD PTR [esp+0x2c]
100158b3:	mov    DWORD PTR [esp+0x28],ebx
100158b7:	call   DWORD PTR ds:0x10066020
100158bd:	cmp    eax,ebx
100158bf:	jne    0x10015b10
100158c5:	mov    ebx,DWORD PTR [esp+0x14]
100158c9:	lea    eax,[esp+0x234]
100158d0:	push   eax
100158d1:	push   ebx
100158d2:	call   DWORD PTR ds:0x10066010
100158d8:	test   eax,eax
100158da:	je     0x100158e5
100158dc:	cmp    eax,0x2
100158df:	jne    0x10015c11
100158e5:	test   ebx,ebx
100158e7:	je     0x100158f0
100158e9:	push   ebx
100158ea:	call   DWORD PTR ds:0x10066018
100158f0:	xor    ebx,ebx
100158f2:	mov    ecx,DWORD PTR [esp+0x18]
100158f6:	call   0x10015355
100158fb:	mov    esi,eax
100158fd:	cmp    esi,ebx
100158ff:	jmp    0x100157ca
10015904:	push   0x5c
10015906:	mov    eax,edi
10015908:	call   0x10014e49
1001590d:	test   eax,eax
1001590f:	pop    ecx
10015910:	jne    0x10015c2c
10015916:	cmp    DWORD PTR [ebp+0x10],ebx
10015919:	je     0x10015a17
1001591f:	mov    esi,DWORD PTR ds:0x10066020
10015925:	lea    eax,[esp+0x14]
10015929:	push   eax
1001592a:	push   0x2001f
1001592f:	push   ebx
10015930:	push   edi
10015931:	push   DWORD PTR [esp+0x2c]
10015935:	mov    DWORD PTR [esp+0x28],ebx
10015939:	call   esi
1001593b:	cmp    eax,ebx
1001593d:	jne    0x10015963
1001593f:	xor    eax,eax
10015941:	cmp    DWORD PTR [esp+0x10],ebx
10015945:	je     0x10015951
10015947:	push   DWORD PTR [esp+0x10]
1001594b:	call   DWORD PTR ds:0x10066018
10015951:	test   eax,eax
10015953:	mov    ebx,DWORD PTR [esp+0x14]
10015957:	mov    DWORD PTR [esp+0x10],ebx
1001595b:	je     0x100159e3
10015961:	jmp    0x10015967
10015963:	mov    ebx,DWORD PTR [esp+0x10]
10015967:	and    DWORD PTR [esp+0x14],0x0
1001596c:	lea    eax,[esp+0x14]
10015970:	push   eax
10015971:	push   0x20019
10015976:	push   0x0
10015978:	push   edi
10015979:	push   DWORD PTR [esp+0x2c]
1001597d:	call   esi
1001597f:	xor    esi,esi
10015981:	test   eax,eax
10015983:	jne    0x1001599c
10015985:	cmp    ebx,esi
10015987:	je     0x10015990
10015989:	push   ebx
1001598a:	call   DWORD PTR ds:0x10066018
10015990:	cmp    eax,esi
10015992:	mov    ebx,DWORD PTR [esp+0x14]
10015996:	mov    DWORD PTR [esp+0x10],ebx
1001599a:	je     0x100159e3
1001599c:	lea    eax,[esp+0x28]
100159a0:	push   eax
100159a1:	lea    eax,[esp+0x18]
100159a5:	push   eax
100159a6:	push   esi
100159a7:	push   0x2001f
100159ac:	push   esi
100159ad:	push   esi
100159ae:	push   esi
100159af:	push   edi
100159b0:	push   DWORD PTR [esp+0x3c]
100159b4:	mov    DWORD PTR [esp+0x38],esi
100159b8:	call   DWORD PTR ds:0x10066004
100159be:	cmp    eax,esi
100159c0:	jne    0x10015c32
100159c6:	xor    eax,eax
100159c8:	cmp    ebx,esi
100159ca:	je     0x100159d3
100159cc:	push   ebx
100159cd:	call   DWORD PTR ds:0x10066018
100159d3:	cmp    eax,esi
100159d5:	mov    ebx,DWORD PTR [esp+0x14]
100159d9:	mov    DWORD PTR [esp+0x10],ebx
100159dd:	jne    0x10015c32
100159e3:	mov    ecx,DWORD PTR [esp+0x18]
100159e7:	mov    eax,edi
100159e9:	call   0x10014e95
100159ee:	mov    esi,eax
100159f0:	test   esi,esi
100159f2:	jl     0x10015b17
100159f8:	cmp    WORD PTR [edi],0x3d
100159fc:	jne    0x1001578c
10015a02:	mov    ecx,DWORD PTR [esp+0x18]
10015a06:	push   edi
10015a07:	push   0x0
10015a09:	lea    edx,[esp+0x18]
10015a0d:	call   0x10014fa6
10015a12:	jmp    0x10015782
10015a17:	cmp    DWORD PTR [ebp+0x14],ebx
10015a1a:	jne    0x10015a5a
10015a1c:	lea    eax,[esp+0x14]
10015a20:	push   eax
10015a21:	push   0x20019
10015a26:	push   ebx
10015a27:	push   edi
10015a28:	push   DWORD PTR [esp+0x2c]
10015a2c:	mov    DWORD PTR [esp+0x28],ebx
10015a30:	call   DWORD PTR ds:0x10066020
10015a36:	cmp    eax,ebx
10015a38:	jne    0x10015a54
10015a3a:	xor    eax,eax
10015a3c:	cmp    DWORD PTR [esp+0x10],ebx
10015a40:	je     0x10015a4c
10015a42:	push   DWORD PTR [esp+0x10]
10015a46:	call   DWORD PTR ds:0x10066018
10015a4c:	mov    ecx,DWORD PTR [esp+0x14]
10015a50:	mov    DWORD PTR [esp+0x10],ecx
10015a54:	mov    DWORD PTR [esp+0x14],eax
10015a58:	jmp    0x10015a62
10015a5a:	mov    DWORD PTR [esp+0x14],0x2
10015a62:	cmp    DWORD PTR [esp+0x14],ebx
10015a66:	je     0x10015a6f
10015a68:	mov    DWORD PTR [ebp+0x14],0x1
10015a6f:	push   0xffffffff
10015a71:	push   edi
10015a72:	lea    eax,[esp+0x34]
10015a76:	push   0x104
10015a7b:	push   eax
10015a7c:	call   0x100460fd
10015a81:	push   eax
10015a82:	call   0x10001f3c
10015a87:	mov    ecx,DWORD PTR [esp+0x2c]
10015a8b:	add    esp,0x14
10015a8e:	mov    eax,edi
10015a90:	call   0x10014e95
10015a95:	mov    esi,eax
10015a97:	test   esi,esi
10015a99:	jl     0x10015b17
10015a9b:	mov    ecx,DWORD PTR [esp+0x18]
10015a9f:	call   0x10015355
10015aa4:	mov    esi,eax
10015aa6:	test   esi,esi
10015aa8:	jl     0x10015b17
10015aaa:	cmp    WORD PTR [edi],0x7b
10015aae:	jne    0x10015aec
10015ab0:	push   edi
10015ab1:	call   DWORD PTR ds:0x100660c4
10015ab7:	cmp    eax,0x1
10015aba:	jne    0x10015aec
10015abc:	push   DWORD PTR [ebp+0x14]
10015abf:	mov    ecx,DWORD PTR [esp+0x1c]
10015ac3:	push   0x0
10015ac5:	push   DWORD PTR [esp+0x18]
10015ac9:	push   edi
10015aca:	call   0x10015665
10015acf:	mov    esi,eax
10015ad1:	test   esi,esi
10015ad3:	jge    0x10015adb
10015ad5:	cmp    DWORD PTR [ebp+0x14],0x0
10015ad9:	je     0x10015b17
10015adb:	mov    ecx,DWORD PTR [esp+0x18]
10015adf:	mov    eax,edi
10015ae1:	call   0x10014e95
10015ae6:	mov    esi,eax
10015ae8:	test   esi,esi
10015aea:	jl     0x10015b17
10015aec:	mov    eax,DWORD PTR [esp+0x24]
10015af0:	mov    DWORD PTR [ebp+0x14],eax
10015af3:	mov    eax,DWORD PTR [esp+0x14]
10015af7:	cmp    eax,0x2
10015afa:	je     0x100157d0
10015b00:	xor    ebx,ebx
10015b02:	cmp    eax,ebx
10015b04:	je     0x10015b50
10015b06:	cmp    DWORD PTR [esp+0x24],ebx
10015b0a:	jne    0x100157d0
10015b10:	call   0x100145b0
10015b15:	mov    esi,eax
10015b17:	cmp    DWORD PTR [esp+0x10],0x0
10015b1c:	je     0x10015b28
10015b1e:	push   DWORD PTR [esp+0x10]
10015b22:	call   DWORD PTR ds:0x10066018
10015b28:	mov    eax,esi
10015b2a:	mov    ecx,DWORD PTR [esp+0x448]
10015b31:	mov    DWORD PTR fs:0x0,ecx
10015b38:	pop    ecx
10015b39:	pop    edi
10015b3a:	pop    esi
10015b3b:	pop    ebx
10015b3c:	mov    ecx,DWORD PTR [esp+0x430]
10015b43:	xor    ecx,esp
10015b45:	call   0x100430d7
10015b4a:	mov    esp,ebp
10015b4c:	pop    ebp
10015b4d:	ret    0x10
10015b50:	cmp    DWORD PTR [esp+0x24],ebx
10015b54:	je     0x10015b93
10015b56:	push   DWORD PTR [esp+0x10]
10015b5a:	call   0x10015320
10015b5f:	test   eax,eax
10015b61:	je     0x10015b93
10015b63:	lea    eax,[esp+0x2c]
10015b67:	push   eax
10015b68:	call   0x100152f4
10015b6d:	test   eax,eax
10015b6f:	je     0x100157d0
10015b75:	cmp    DWORD PTR [esp+0x20],0x0
10015b7a:	je     0x100157d0
10015b80:	lea    eax,[esp+0x2c]
10015b84:	push   eax
10015b85:	lea    ecx,[esp+0x14]
10015b89:	call   0x10014774
10015b8e:	jmp    0x100157d0
10015b93:	push   DWORD PTR [esp+0x10]
10015b97:	call   0x10015320
10015b9c:	cmp    DWORD PTR [esp+0x10],ebx
10015ba0:	mov    DWORD PTR [esp+0x14],eax
10015ba4:	je     0x10015bbc
10015ba6:	push   DWORD PTR [esp+0x10]
10015baa:	call   DWORD PTR ds:0x10066018
10015bb0:	cmp    eax,ebx
10015bb2:	mov    DWORD PTR [esp+0x10],ebx
10015bb6:	jne    0x10015c4b
10015bbc:	cmp    DWORD PTR [esp+0x20],ebx
10015bc0:	je     0x100157d0
10015bc6:	cmp    DWORD PTR [esp+0x14],0x0
10015bcb:	jne    0x100157d0
10015bd1:	lea    eax,[esp+0x2c]
10015bd5:	push   eax
10015bd6:	push   DWORD PTR [esp+0x20]
10015bda:	call   DWORD PTR ds:0x1006600c
10015be0:	test   eax,eax
10015be2:	jne    0x10015b10
10015be8:	jmp    0x100157d0
10015bed:	cmp    DWORD PTR [esp+0x10],0x0
10015bf2:	je     0x10015bfe
10015bf4:	push   DWORD PTR [esp+0x10]
10015bf8:	call   DWORD PTR ds:0x10066018
10015bfe:	mov    eax,0x80020009
10015c03:	jmp    0x10015b2a
10015c08:	cmp    DWORD PTR [esp+0x10],ebx
10015c0c:	jmp    0x10015b1c
10015c11:	call   0x100145b0
10015c16:	test   ebx,ebx
10015c18:	mov    esi,eax
10015c1a:	je     0x10015b17
10015c20:	push   ebx
10015c21:	call   DWORD PTR ds:0x10066018
10015c27:	jmp    0x10015b17
10015c2c:	cmp    DWORD PTR [esp+0x10],ebx
10015c30:	jmp    0x10015bf2
10015c32:	call   0x100145b0
10015c37:	cmp    ebx,esi
10015c39:	mov    edi,eax
10015c3b:	je     0x10015c44
10015c3d:	push   ebx
10015c3e:	call   DWORD PTR ds:0x10066018
10015c44:	mov    eax,edi
10015c46:	jmp    0x10015b2a
10015c4b:	call   0x100145b0
10015c50:	jmp    0x10015b2a
10015c55:	push   ebp
10015c56:	lea    ebp,[esp-0x9cc]
10015c5d:	sub    esp,0xa4c
10015c63:	mov    eax,ds:0x1007e030
10015c68:	xor    eax,ebp
10015c6a:	mov    DWORD PTR [ebp+0x9c8],eax
10015c70:	mov    eax,DWORD PTR [ebp+0x9d4]
10015c76:	push   ebx
10015c77:	push   esi
10015c78:	push   edi
10015c79:	xor    edi,edi
10015c7b:	mov    esi,edx
10015c7d:	cmp    esi,edi
10015c7f:	mov    ebx,ecx
10015c81:	mov    DWORD PTR [ebp-0x6c],eax
10015c84:	mov    DWORD PTR [ebp-0x80],0x1006fcc0
10015c8b:	mov    DWORD PTR [ebp-0x7c],edi
10015c8e:	mov    DWORD PTR [ebp-0x78],edi
10015c91:	mov    DWORD PTR [ebp-0x74],edi
10015c94:	je     0x10015cae
10015c96:	jmp    0x10015ca8
10015c98:	push   DWORD PTR [esi+0x4]
10015c9b:	push   eax
10015c9c:	lea    eax,[ebp-0x80]
10015c9f:	push   eax
10015ca0:	call   0x10014b83
10015ca5:	add    esi,0x8
10015ca8:	mov    eax,DWORD PTR [esi]
10015caa:	cmp    eax,edi
10015cac:	jne    0x10015c98
10015cae:	mov    eax,DWORD PTR [ebx]
10015cb0:	lea    ecx,[ebp-0x80]
10015cb3:	push   ecx
10015cb4:	mov    ecx,ebx
10015cb6:	call   DWORD PTR [eax+0x14]
10015cb9:	cmp    eax,edi
10015cbb:	jge    0x10015ce3
10015cbd:	mov    esi,eax
10015cbf:	lea    ecx,[ebp-0x80]
10015cc2:	call   0x10014b48
10015cc7:	mov    ecx,DWORD PTR [ebp+0x9c8]
10015ccd:	pop    edi
10015cce:	mov    eax,esi
10015cd0:	pop    esi
10015cd1:	xor    ecx,ebp
10015cd3:	pop    ebx
10015cd4:	call   0x100430d7
10015cd9:	add    ebp,0x9cc
10015cdf:	leave  
10015ce0:	ret    0x8
10015ce3:	call   DWORD PTR ds:0x1007efec
10015ce9:	mov    ebx,DWORD PTR ds:0x10080a04
10015cef:	mov    esi,0x104
10015cf4:	push   esi
10015cf5:	lea    eax,[ebp+0x7c0]
10015cfb:	push   eax
10015cfc:	push   ebx
10015cfd:	call   DWORD PTR ds:0x10066124
10015d03:	cmp    eax,edi
10015d05:	jne    0x10015d0e
10015d07:	call   0x1000667c
10015d0c:	jmp    0x10015cbd
10015d0e:	cmp    eax,esi
10015d10:	jne    0x10015d19
10015d12:	mov    esi,0x8007007a
10015d17:	jmp    0x10015cbf
10015d19:	lea    edx,[ebp+0x7c0]
10015d1f:	mov    ecx,0x208
10015d24:	lea    eax,[ebp-0x68]
10015d27:	call   0x10014689
10015d2c:	cmp    ebx,edi
10015d2e:	je     0x10015d40
10015d30:	push   edi
10015d31:	call   DWORD PTR ds:0x10066114
10015d37:	cmp    ebx,eax
10015d39:	je     0x10015d40
10015d3b:	lea    eax,[ebp-0x68]
10015d3e:	jmp    0x10015d96
10015d40:	lea    eax,[ebp-0x68]
10015d43:	push   eax
10015d44:	lea    eax,[ebp+0x3aa]
10015d4a:	push   0x20b
10015d4f:	push   eax
10015d50:	mov    WORD PTR [ebp+0x3a8],0x22
10015d59:	call   0x10014506
10015d5e:	add    esp,0xc
10015d61:	test   al,al
10015d63:	jne    0x10015d6f
10015d65:	mov    esi,0x80004005
10015d6a:	jmp    0x10015cbf
10015d6f:	lea    eax,[ebp+0x3a8]
10015d75:	push   eax
10015d76:	call   DWORD PTR ds:0x100660c4
10015d7c:	add    eax,eax
10015d7e:	mov    WORD PTR [ebp+eax*1+0x3a8],0x22
10015d88:	mov    WORD PTR [ebp+eax*1+0x3aa],di
10015d90:	lea    eax,[ebp+0x3a8]
10015d96:	push   eax
10015d97:	push   0x1006f698
10015d9c:	lea    eax,[ebp-0x80]
10015d9f:	push   eax
10015da0:	call   0x10014b83
10015da5:	cmp    eax,edi
10015da7:	jl     0x10015cbd
10015dad:	lea    eax,[ebp-0x68]
10015db0:	push   eax
10015db1:	push   0x1006f6a8
10015db6:	lea    eax,[ebp-0x80]
10015db9:	push   eax
10015dba:	call   0x10014b83
10015dbf:	cmp    eax,edi
10015dc1:	jl     0x10015cbd
10015dc7:	call   DWORD PTR ds:0x1007efec
10015dcd:	cmp    DWORD PTR [ebp+0x9d8],edi
10015dd3:	mov    edx,DWORD PTR [ebp-0x6c]
10015dd6:	je     0x10015dea
10015dd8:	cmp    edx,edi
10015dda:	je     0x10015de0
10015ddc:	push   0x1
10015dde:	jmp    0x10015def
10015de0:	mov    eax,0x80070057
10015de5:	jmp    0x10015cbd
10015dea:	cmp    edx,edi
10015dec:	je     0x10015de0
10015dee:	push   edi
10015def:	push   0x1006f6c0
10015df4:	lea    eax,[ebp-0x80]
10015df7:	push   eax
10015df8:	lea    ecx,[ebp+0x7c0]
10015dfe:	call   0x10014bd8
10015e03:	jmp    0x10015cbd
10015e08:	push   ebp
10015e09:	lea    ebp,[esp-0x9c8]
10015e10:	sub    esp,0xa48
10015e16:	mov    eax,ds:0x1007e030
10015e1b:	xor    eax,ebp
10015e1d:	mov    DWORD PTR [ebp+0x9c4],eax
10015e23:	push   ebx
10015e24:	push   esi
10015e25:	push   edi
10015e26:	xor    edi,edi
10015e28:	mov    esi,edx
10015e2a:	cmp    esi,edi
10015e2c:	mov    ebx,ecx
10015e2e:	mov    DWORD PTR [ebp-0x80],0x1006fcc0
10015e35:	mov    DWORD PTR [ebp-0x7c],edi
10015e38:	mov    DWORD PTR [ebp-0x78],edi
10015e3b:	mov    DWORD PTR [ebp-0x74],edi
10015e3e:	je     0x10015e58
10015e40:	jmp    0x10015e52
10015e42:	push   DWORD PTR [esi+0x4]
10015e45:	push   eax
10015e46:	lea    eax,[ebp-0x80]
10015e49:	push   eax
10015e4a:	call   0x10014b83
10015e4f:	add    esi,0x8
10015e52:	mov    eax,DWORD PTR [esi]
10015e54:	cmp    eax,edi
10015e56:	jne    0x10015e42
10015e58:	mov    eax,DWORD PTR [ebx]
10015e5a:	lea    ecx,[ebp-0x80]
10015e5d:	push   ecx
10015e5e:	mov    ecx,ebx
10015e60:	call   DWORD PTR [eax+0x14]
10015e63:	cmp    eax,edi
10015e65:	jge    0x10015e8d
10015e67:	mov    esi,eax
10015e69:	lea    ecx,[ebp-0x80]
10015e6c:	call   0x10014b48
10015e71:	mov    ecx,DWORD PTR [ebp+0x9c4]
10015e77:	pop    edi
10015e78:	mov    eax,esi
10015e7a:	pop    esi
10015e7b:	xor    ecx,ebp
10015e7d:	pop    ebx
10015e7e:	call   0x100430d7
10015e83:	add    ebp,0x9c8
10015e89:	leave  
10015e8a:	ret    0x8
10015e8d:	call   DWORD PTR ds:0x1007efec
10015e93:	mov    ebx,DWORD PTR ds:0x10080a04
10015e99:	mov    esi,0x104
10015e9e:	push   esi
10015e9f:	lea    eax,[ebp+0x7bc]
10015ea5:	push   eax
10015ea6:	push   ebx
10015ea7:	call   DWORD PTR ds:0x10066124
10015ead:	cmp    eax,edi
10015eaf:	jne    0x10015eb8
10015eb1:	call   0x1000667c
10015eb6:	jmp    0x10015e67
10015eb8:	cmp    eax,esi
10015eba:	jne    0x10015ec3
10015ebc:	mov    esi,0x8007007a
10015ec1:	jmp    0x10015e69
10015ec3:	lea    edx,[ebp+0x7bc]
10015ec9:	mov    ecx,0x208
10015ece:	lea    eax,[ebp-0x6c]
10015ed1:	call   0x10014689
10015ed6:	cmp    ebx,edi
10015ed8:	je     0x10015eea
10015eda:	push   edi
10015edb:	call   DWORD PTR ds:0x10066114
10015ee1:	cmp    ebx,eax
10015ee3:	je     0x10015eea
10015ee5:	lea    eax,[ebp-0x6c]
10015ee8:	jmp    0x10015f40
10015eea:	lea    eax,[ebp-0x6c]
10015eed:	push   eax
10015eee:	lea    eax,[ebp+0x3a6]
10015ef4:	push   0x20b
10015ef9:	push   eax
10015efa:	mov    WORD PTR [ebp+0x3a4],0x22
10015f03:	call   0x10014506
10015f08:	add    esp,0xc
10015f0b:	test   al,al
10015f0d:	jne    0x10015f19
10015f0f:	mov    esi,0x80004005
10015f14:	jmp    0x10015e69
10015f19:	lea    eax,[ebp+0x3a4]
10015f1f:	push   eax
10015f20:	call   DWORD PTR ds:0x100660c4
10015f26:	add    eax,eax
10015f28:	mov    WORD PTR [ebp+eax*1+0x3a4],0x22
10015f32:	mov    WORD PTR [ebp+eax*1+0x3a6],di
10015f3a:	lea    eax,[ebp+0x3a4]
10015f40:	push   eax
10015f41:	push   0x1006f698
10015f46:	lea    eax,[ebp-0x80]
10015f49:	push   eax
10015f4a:	call   0x10014b83
10015f4f:	cmp    eax,edi
10015f51:	jl     0x10015e67
10015f57:	lea    eax,[ebp-0x6c]
10015f5a:	push   eax
10015f5b:	push   0x1006f6a8
10015f60:	lea    eax,[ebp-0x80]
10015f63:	push   eax
10015f64:	call   0x10014b83
10015f69:	cmp    eax,edi
10015f6b:	jl     0x10015e67
10015f71:	call   DWORD PTR ds:0x1007efec
10015f77:	cmp    DWORD PTR [ebp+0x9d4],edi
10015f7d:	je     0x10015fa1
10015f7f:	push   0x1
10015f81:	movzx  edx,WORD PTR [ebp+0x9d0]
10015f88:	push   0x1006f6c0
10015f8d:	lea    eax,[ebp-0x80]
10015f90:	push   eax
10015f91:	lea    ecx,[ebp+0x7bc]
10015f97:	call   0x10014bd8
10015f9c:	jmp    0x10015e67
10015fa1:	push   edi
10015fa2:	jmp    0x10015f81
10015fa4:	mov    edx,DWORD PTR [esp+0x8]
10015fa8:	mov    eax,DWORD PTR [esp+0x4]
10015fac:	push   esi
10015fad:	xor    esi,esi
10015faf:	mov    ecx,eax
10015fb1:	and    ecx,0x1
10015fb4:	or     ecx,esi
10015fb6:	push   esi
10015fb7:	jne    0x10015fc4
10015fb9:	push   0x2
10015fbb:	push   edx
10015fbc:	push   eax
10015fbd:	call   0x1005f580
10015fc2:	jmp    0x10015fd2
10015fc4:	push   0x3
10015fc6:	push   edx
10015fc7:	push   eax
10015fc8:	call   0x1004f6a0
10015fcd:	add    eax,0x1
10015fd0:	adc    edx,esi
10015fd2:	cmp    eax,0x4
10015fd5:	jne    0x10015faf
10015fd7:	cmp    edx,esi
10015fd9:	jne    0x10015faf
10015fdb:	xor    edx,edx
10015fdd:	pop    esi
10015fde:	ret    
10015fdf:	push   esi
10015fe0:	mov    esi,ecx
10015fe2:	mov    eax,DWORD PTR [esi]
10015fe4:	test   eax,eax
10015fe6:	je     0x10015fed
10015fe8:	call   0x10016208
10015fed:	and    DWORD PTR [esi],0x0
10015ff0:	pop    esi
10015ff1:	ret    
10015ff2:	push   edi
10015ff3:	mov    edi,eax
10015ff5:	mov    eax,DWORD PTR [esi]
10015ff7:	test   eax,eax
10015ff9:	je     0x10016000
10015ffb:	call   0x10016208
10016000:	cmp    BYTE PTR [esp+0x8],0x0
10016005:	mov    DWORD PTR [esi],edi
10016007:	je     0x10016017
10016009:	test   edi,edi
1001600b:	je     0x10016017
1001600d:	add    edi,0x20
10016010:	push   edi
10016011:	call   DWORD PTR ds:0x100660a4
10016017:	pop    edi
10016018:	ret    0x4
1001601b:	push   ebp
1001601c:	mov    ebp,esp
1001601e:	and    esp,0xfffffff8
10016021:	sub    esp,0x14
10016024:	push   ebx
10016025:	push   esi
10016026:	push   edi
10016027:	mov    esi,0xf0
1001602c:	push   esi
1001602d:	call   0x100436de
10016032:	pop    ecx
10016033:	push   esi
10016034:	xor    esi,esi
10016036:	mov    ebx,eax
10016038:	push   esi
10016039:	push   ebx
1001603a:	call   0x10045ea0
1001603f:	mov    eax,DWORD PTR [ebp+0x8]
10016042:	add    esp,0xc
10016045:	push   0x1e
10016047:	pop    ecx
10016048:	mov    DWORD PTR [ebx+0x20],esi
1001604b:	mov    DWORD PTR [ebx+0x1c],esi
1001604e:	push   0xf
10016050:	mov    DWORD PTR [ebx],eax
10016052:	mov    BYTE PTR [ebx+0x25],0x0
10016056:	mov    BYTE PTR [ebx+0x24],0x0
1001605a:	mov    BYTE PTR [ebx+0x26],0x1
1001605e:	mov    BYTE PTR [ebx+0x27],0x0
10016062:	lea    edi,[ebx+0x3c]
10016065:	mov    esi,0x10080c80
1001606a:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1001606c:	pop    ecx
1001606d:	lea    edi,[ebx+0xb4]
10016073:	mov    esi,0x10080cf8
10016078:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1001607a:	mov    esi,DWORD PTR ds:0x10066130
10016080:	xor    edi,edi
10016082:	push   edi
10016083:	push   edi
10016084:	push   0x1
10016086:	push   edi
10016087:	call   esi
10016089:	push   edi
1001608a:	push   0x1
1001608c:	push   0x1
1001608e:	push   edi
1001608f:	mov    DWORD PTR [ebx+0x28],eax
10016092:	call   esi
10016094:	push   edi
10016095:	push   edi
10016096:	push   0x1
10016098:	push   edi
10016099:	mov    DWORD PTR [ebx+0x2c],eax
1001609c:	call   esi
1001609e:	push   edi
1001609f:	push   edi
100160a0:	push   0x1
100160a2:	push   edi
100160a3:	mov    DWORD PTR [ebx+0x30],eax
100160a6:	call   esi
100160a8:	mov    DWORD PTR [ebx+0x34],eax
100160ab:	lea    eax,[ebx+0x4]
100160ae:	push   eax
100160af:	mov    DWORD PTR [ebx+0x38],edi
100160b2:	call   DWORD PTR ds:0x1006611c
100160b8:	mov    esi,0x10080c58
100160bd:	push   esi
100160be:	call   DWORD PTR ds:0x100660f0
100160c4:	mov    eax,DWORD PTR [ebp+0x8]
100160c7:	mov    DWORD PTR [esp+0xc],eax
100160cb:	lea    eax,[esp+0xc]
100160cf:	push   eax
100160d0:	lea    edi,[esp+0x18]
100160d4:	mov    DWORD PTR [esp+0x14],ebx
100160d8:	call   0x10017a85
100160dd:	push   esi
100160de:	call   DWORD PTR ds:0x100660ec
100160e4:	pop    edi
100160e5:	pop    esi
100160e6:	mov    eax,ebx
100160e8:	pop    ebx
100160e9:	mov    esp,ebp
100160eb:	pop    ebp
100160ec:	ret    
100160ed:	push   edi
100160ee:	push   DWORD PTR [esi+0x28]
100160f1:	mov    edi,DWORD PTR ds:0x10066070
100160f7:	call   edi
100160f9:	push   DWORD PTR [esi+0x2c]
100160fc:	call   edi
100160fe:	push   DWORD PTR [esi+0x30]
10016101:	call   edi
10016103:	push   DWORD PTR [esi+0x34]
10016106:	call   edi
10016108:	lea    eax,[esi+0x4]
1001610b:	push   eax
1001610c:	call   DWORD PTR ds:0x10066138
10016112:	mov    edi,DWORD PTR [esi+0x1c]
10016115:	test   edi,edi
10016117:	je     0x10016126
10016119:	push   edi
1001611a:	call   0x10024f35
1001611f:	push   edi
10016120:	call   0x100430d2
10016125:	pop    ecx
10016126:	and    DWORD PTR [esi+0x1c],0x0
1001612a:	push   esi
1001612b:	call   0x100430d2
10016130:	pop    ecx
10016131:	pop    edi
10016132:	ret    
10016133:	push   ebp
10016134:	mov    ebp,esp
10016136:	sub    esp,0x18
10016139:	push   ebx
1001613a:	mov    ebx,DWORD PTR ds:0x100660f0
10016140:	push   esi
10016141:	push   edi
10016142:	push   0x10080c58
10016147:	call   ebx
10016149:	lea    eax,[ebp+0x8]
1001614c:	push   eax
1001614d:	lea    eax,[ebp-0xc]
10016150:	call   0x10017c93
10016155:	cmp    DWORD PTR [ebp-0xc],0x0
10016159:	mov    eax,ds:0x10080e7c
1001615e:	mov    esi,eax
10016160:	je     0x1001616b
10016162:	cmp    DWORD PTR [ebp-0xc],0x10080e78
10016169:	je     0x10016175
1001616b:	call   0x100435f0
10016170:	mov    eax,ds:0x10080e7c
10016175:	mov    ecx,DWORD PTR [ebp-0x8]
10016178:	cmp    ecx,esi
1001617a:	je     0x10016189
1001617c:	mov    edx,DWORD PTR [ebp+0x8]
1001617f:	cmp    edx,DWORD PTR [ecx+0xc]
10016182:	jb     0x10016189
10016184:	lea    ecx,[ebp-0xc]
10016187:	jmp    0x10016196
10016189:	mov    DWORD PTR [ebp-0x10],eax
1001618c:	mov    DWORD PTR [ebp-0x14],0x10080e78
10016193:	lea    ecx,[ebp-0x14]
10016196:	mov    esi,DWORD PTR [ecx]
10016198:	test   esi,esi
1001619a:	mov    edi,DWORD PTR [ecx+0x4]
1001619d:	mov    DWORD PTR [ebp-0x10],eax
100161a0:	je     0x100161aa
100161a2:	cmp    esi,0x10080e78
100161a8:	je     0x100161af
100161aa:	call   0x100435f0
100161af:	cmp    edi,DWORD PTR [ebp-0x10]
100161b2:	je     0x100161cc
100161b4:	test   esi,esi
100161b6:	jne    0x100161bd
100161b8:	call   0x100435f0
100161bd:	cmp    edi,DWORD PTR [esi+0x4]
100161c0:	jne    0x100161c7
100161c2:	call   0x100435f0
100161c7:	mov    esi,DWORD PTR [edi+0x10]
100161ca:	jmp    0x100161ce
100161cc:	xor    esi,esi
100161ce:	test   esi,esi
100161d0:	je     0x100161f6
100161d2:	lea    edi,[esi+0x4]
100161d5:	push   edi
100161d6:	call   ebx
100161d8:	mov    bl,BYTE PTR [esi+0x27]
100161db:	test   bl,bl
100161dd:	jne    0x100161e9
100161df:	lea    eax,[esi+0x20]
100161e2:	push   eax
100161e3:	call   DWORD PTR ds:0x100660a4
100161e9:	push   edi
100161ea:	call   DWORD PTR ds:0x100660ec
100161f0:	test   bl,bl
100161f2:	je     0x100161f6
100161f4:	xor    esi,esi
100161f6:	push   0x10080c58
100161fb:	call   DWORD PTR ds:0x100660ec
10016201:	pop    edi
10016202:	mov    eax,esi
10016204:	pop    esi
10016205:	pop    ebx
10016206:	leave  
10016207:	ret    
10016208:	push   esi
10016209:	mov    esi,eax
1001620b:	test   esi,esi
1001620d:	je     0x1001623f
1001620f:	push   ebx
10016210:	push   ebp
10016211:	push   edi
10016212:	mov    edi,DWORD PTR ds:0x100660f0
10016218:	mov    ebp,0x10080c58
1001621d:	push   ebp
1001621e:	call   edi
10016220:	lea    ebx,[esi+0x4]
10016223:	push   ebx
10016224:	call   edi
10016226:	add    esi,0x20
10016229:	push   esi
1001622a:	call   DWORD PTR ds:0x100660ac
10016230:	mov    esi,DWORD PTR ds:0x100660ec
10016236:	push   ebx
10016237:	call   esi
10016239:	push   ebp
1001623a:	call   esi
1001623c:	pop    edi
1001623d:	pop    ebp
1001623e:	pop    ebx
1001623f:	pop    esi
10016240:	ret    
10016241:	add    eax,0x4
10016244:	push   eax
10016245:	call   DWORD PTR ds:0x100660f0
1001624b:	ret    
1001624c:	push   0x8
1001624e:	mov    eax,0x10062cd7
10016253:	call   0x10059ca8
10016258:	mov    esi,DWORD PTR [ebp+0x8]
1001625b:	and    DWORD PTR [ebp-0x4],0x0
1001625f:	push   0x54
10016261:	call   0x100436de
10016266:	pop    ecx
10016267:	mov    DWORD PTR [ebp-0x14],eax
1001626a:	test   eax,eax
1001626c:	mov    BYTE PTR [ebp-0x4],0x1
10016270:	je     0x1001627b
10016272:	push   esi
10016273:	push   eax
10016274:	call   0x10024ea8
10016279:	jmp    0x1001627d
1001627b:	xor    eax,eax
1001627d:	mov    DWORD PTR [esi+0x1c],eax
10016280:	call   0x10059d4d
10016285:	ret    
10016286:	push   0x4
10016288:	call   0x10037b70
1001628d:	mov    eax,DWORD PTR [ebp+0x8]
10016290:	and    DWORD PTR [eax+0x1c],0x0
10016294:	pop    ecx
10016295:	mov    eax,0x10016280
1001629a:	ret    
1001629b:	push   ebp
1001629c:	mov    ebp,esp
1001629e:	and    esp,0xfffffff8
100162a1:	push   ecx
100162a2:	push   esi
100162a3:	mov    esi,eax
100162a5:	and    DWORD PTR [esi],0x0
100162a8:	jmp    0x100162d8
100162aa:	mov    eax,DWORD PTR [esi]
100162ac:	push   DWORD PTR [ebp+0x10]
100162af:	mov    ecx,DWORD PTR [ebp+0xc]
100162b2:	sub    ecx,eax
100162b4:	push   ecx
100162b5:	mov    ecx,DWORD PTR [ebp+0x8]
100162b8:	add    eax,ecx
100162ba:	push   eax
100162bb:	push   edi
100162bc:	lea    eax,[esp+0x14]
100162c0:	call   0x10025abc
100162c5:	mov    eax,DWORD PTR [esp+0x4]
100162c9:	add    DWORD PTR [esi],eax
100162cb:	mov    eax,DWORD PTR [esi]
100162cd:	cmp    eax,DWORD PTR [ebp+0xc]
100162d0:	je     0x100162e3
100162d2:	cmp    BYTE PTR [ebp+0x10],0x0
100162d6:	jne    0x100162e3
100162d8:	mov    eax,edi
100162da:	call   0x10025b7a
100162df:	test   eax,eax
100162e1:	jne    0x100162aa
100162e3:	lea    esi,[edi+0x38]
100162e6:	push   esi
100162e7:	call   DWORD PTR ds:0x100660f0
100162ed:	cmp    DWORD PTR [edi+0x28],0x0
100162f1:	jne    0x100162ff
100162f3:	mov    eax,DWORD PTR [edi+0x50]
100162f6:	push   DWORD PTR [eax+0x28]
100162f9:	call   DWORD PTR ds:0x10066164
100162ff:	push   esi
10016300:	call   DWORD PTR ds:0x100660ec
10016306:	pop    esi
10016307:	mov    esp,ebp
10016309:	pop    ebp
1001630a:	ret    
1001630b:	push   ebp
1001630c:	mov    ebp,esp
1001630e:	sub    esp,0x10
10016311:	push   ebx
10016312:	xor    ebx,ebx
10016314:	cmp    BYTE PTR [esi+0x27],bl
10016317:	push   edi
10016318:	jne    0x10016395
1001631a:	lea    eax,[ebp-0x4]
1001631d:	push   eax
1001631e:	push   ebx
1001631f:	push   ebx
10016320:	push   ebx
10016321:	lea    eax,[ebp-0x8]
10016324:	push   eax
10016325:	push   ebx
10016326:	push   ebx
10016327:	push   0x4
10016329:	lea    eax,[ebp-0xc]
1001632c:	push   eax
1001632d:	push   0x8004667e
10016332:	push   DWORD PTR [esi]
10016334:	mov    DWORD PTR [ebp-0xc],0x1
1001633b:	mov    DWORD PTR [ebp-0x8],ebx
1001633e:	mov    DWORD PTR [ebp-0x4],ebx
10016341:	call   DWORD PTR [esi+0x7c]
10016344:	push   esi
10016345:	call   0x1001624c
1001634a:	lea    eax,[esi+0x4]
1001634d:	pop    ecx
1001634e:	push   eax
1001634f:	mov    DWORD PTR [ebp-0x10],eax
10016352:	call   DWORD PTR ds:0x100660f0
10016358:	mov    edi,DWORD PTR ds:0x100660a4
1001635e:	lea    eax,[esi+0x20]
10016361:	push   eax
10016362:	call   edi
10016364:	lea    eax,[esi+0x20]
10016367:	push   eax
10016368:	call   edi
1001636a:	mov    edi,DWORD PTR ds:0x10066098
10016370:	push   ebx
10016371:	push   ebx
10016372:	push   esi
10016373:	push   0x100254b6
10016378:	push   ebx
10016379:	push   ebx
1001637a:	call   edi
1001637c:	push   ebx
1001637d:	push   ebx
1001637e:	push   esi
1001637f:	push   0x10025a60
10016384:	push   ebx
10016385:	push   ebx
10016386:	call   edi
10016388:	push   DWORD PTR [ebp-0x10]
1001638b:	mov    BYTE PTR [esi+0x25],0x1
1001638f:	call   DWORD PTR ds:0x100660ec
10016395:	pop    edi
10016396:	pop    ebx
10016397:	leave  
10016398:	ret    
10016399:	push   ebp
1001639a:	mov    ebp,esp
1001639c:	push   ebx
1001639d:	mov    ebx,DWORD PTR [ebp+0x50]
100163a0:	push   esi
100163a1:	push   edi
100163a2:	push   0xf
100163a4:	pop    ecx
100163a5:	push   ebx
100163a6:	sub    esp,0x3c
100163a9:	push   0xf
100163ab:	lea    esi,[ebp+0x14]
100163ae:	mov    edi,0x10080cf8
100163b3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
100163b5:	pop    ecx
100163b6:	mov    edi,esp
100163b8:	push   DWORD PTR [ebp+0x10]
100163bb:	lea    esi,[ebp+0x14]
100163be:	push   DWORD PTR [ebp+0xc]
100163c1:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
100163c3:	push   DWORD PTR [ebp+0x8]
100163c6:	call   DWORD PTR ds:0x10080c70
100163cc:	push   0x78
100163ce:	push   ebx
100163cf:	push   0x10080c80
100163d4:	mov    esi,eax
100163d6:	call   0x10045420
100163db:	add    esp,0xc
100163de:	pop    edi
100163df:	mov    eax,esi
100163e1:	pop    esi
100163e2:	mov    DWORD PTR [ebx+0x18],0x10016739
100163e9:	mov    DWORD PTR [ebx+0x1c],0x10016897
100163f0:	mov    DWORD PTR [ebx+0x40],0x1001699c
100163f7:	mov    DWORD PTR [ebx+0x4c],0x10016b61
100163fe:	mov    DWORD PTR [ebx+0x58],0x10016c31
10016405:	mov    DWORD PTR [ebx+0x5c],0x100174cb
1001640c:	mov    DWORD PTR [ebx+0x68],0x10017638
10016413:	mov    DWORD PTR [ebx+0x70],0x10017542
1001641a:	pop    ebx
1001641b:	pop    ebp
1001641c:	ret    0x4c
1001641f:	push   ebp
10016420:	mov    ebp,esp
10016422:	and    esp,0xfffffff8
10016425:	sub    esp,0x210
1001642b:	mov    eax,ds:0x1007e030
10016430:	xor    eax,esp
10016432:	mov    DWORD PTR [esp+0x20c],eax
10016439:	cmp    BYTE PTR ds:0x10080fd4,0x0
10016440:	jne    0x10016562
10016446:	push   0x208
1001644b:	lea    eax,[esp+0x4]
1001644f:	push   eax
10016450:	push   0x0
10016452:	call   DWORD PTR ds:0x10066124
10016458:	test   eax,eax
1001645a:	je     0x10016562
10016460:	lea    eax,[esp]
10016463:	push   eax
10016464:	call   0x10046380
10016469:	mov    DWORD PTR [esp],0x1006f6d4
10016470:	push   0xc
10016472:	push   0x1006f700
10016477:	call   0x100044a2
1001647c:	push   eax
1001647d:	lea    eax,[esp+0x10]
10016481:	push   eax
10016482:	call   0x100463e9
10016487:	add    esp,0x14
1001648a:	test   eax,eax
1001648c:	je     0x1001649d
1001648e:	mov    DWORD PTR ds:0x10080c7c,0x1
10016498:	jmp    0x1001655b
1001649d:	push   0x1006f71c
100164a2:	push   0xb
100164a4:	push   0x1006f75c
100164a9:	call   0x100044a2
100164ae:	push   eax
100164af:	lea    eax,[esp+0x10]
100164b3:	push   eax
100164b4:	call   0x100463e9
100164b9:	add    esp,0x14
100164bc:	test   eax,eax
100164be:	je     0x100164cf
100164c0:	mov    DWORD PTR ds:0x10080c7c,0x2
100164ca:	jmp    0x1001655b
100164cf:	push   0x7eda81fc
100164d4:	push   0x554a9184
100164d9:	push   0x1006f774
100164de:	call   0x100042d1
100164e3:	pop    ecx
100164e4:	pop    ecx
100164e5:	push   eax
100164e6:	call   0x100042d1
100164eb:	push   eax
100164ec:	push   0x9
100164ee:	push   0x1006f7b4
100164f3:	call   0x100044a2
100164f8:	push   eax
100164f9:	lea    eax,[esp+0x18]
100164fd:	push   eax
100164fe:	call   0x100463e9
10016503:	add    esp,0x1c
10016506:	test   eax,eax
10016508:	je     0x10016516
1001650a:	mov    DWORD PTR ds:0x10080c7c,0x4
10016514:	jmp    0x1001655b
10016516:	push   0x340d7bae
1001651b:	push   0xb634a
10016520:	push   0x1006f7c8
10016525:	call   0x100042d1
1001652a:	pop    ecx
1001652b:	pop    ecx
1001652c:	push   eax
1001652d:	call   0x100042d1
10016532:	push   eax
10016533:	push   0xa
10016535:	push   0x1006f800
1001653a:	call   0x100044a2
1001653f:	push   eax
10016540:	lea    eax,[esp+0x18]
10016544:	push   eax
10016545:	call   0x100463e9
1001654a:	add    esp,0x1c
1001654d:	test   eax,eax
1001654f:	je     0x1001655b
10016551:	mov    DWORD PTR ds:0x10080c7c,0x3
1001655b:	mov    BYTE PTR ds:0x10080fd4,0x1
10016562:	mov    ecx,DWORD PTR [esp+0x20c]
10016569:	xor    ecx,esp
1001656b:	call   0x100430d7
10016570:	mov    esp,ebp
10016572:	pop    ebp
10016573:	ret    
10016574:	call   DWORD PTR ds:0x1007efec
1001657a:	push   0x10080c58
1001657f:	call   DWORD PTR ds:0x1006611c
10016585:	mov    eax,ds:0x10080c7c
1001658a:	test   eax,eax
1001658c:	je     0x10016605
1001658e:	push   eax
1001658f:	call   0x1000205f
10016594:	pop    ecx
10016595:	push   0x1006f818
1001659a:	push   0xb
1001659c:	push   0x1006f83c
100165a1:	call   0x100044a2
100165a6:	add    esp,0xc
100165a9:	push   eax
100165aa:	call   DWORD PTR ds:0x100660f8
100165b0:	test   eax,eax
100165b2:	mov    ds:0x10080d38,eax
100165b7:	je     0x10016605
100165b9:	push   0xf8973f6
100165be:	push   0x482dd73c
100165c3:	push   0x1006f854
100165c8:	call   0x100042d1
100165cd:	pop    ecx
100165ce:	pop    ecx
100165cf:	push   eax
100165d0:	call   0x100042d1
100165d5:	push   eax
100165d6:	push   0xa
100165d8:	push   0x1006f878
100165dd:	call   0x100042e3
100165e2:	add    esp,0x14
100165e5:	push   eax
100165e6:	push   DWORD PTR ds:0x10080d38
100165ec:	call   DWORD PTR ds:0x1006612c
100165f2:	push   0x10016399
100165f7:	push   eax
100165f8:	call   0x10057710
100165fd:	mov    ds:0x10080c70,eax
10016602:	mov    al,0x1
10016604:	ret    
10016605:	xor    al,al
10016607:	ret    
10016608:	push   0x10
1001660a:	push   0x1007c2a0
1001660f:	call   0x10046f34
10016614:	xor    ebx,ebx
10016616:	push   ebx
10016617:	push   0x12
10016619:	call   0x10015fa4
1001661e:	pop    ecx
1001661f:	pop    ecx
10016620:	mov    DWORD PTR [ebp-0x20],eax
10016623:	mov    DWORD PTR [ebp-0x1c],edx
10016626:	mov    eax,DWORD PTR [ebp+0xc]
10016629:	sub    eax,ebx
1001662b:	je     0x100166d0
10016631:	dec    eax
10016632:	jne    0x1001672e
10016638:	call   0x1001641f
1001663d:	cmp    DWORD PTR ds:0x10080d3c,ebx
10016643:	jne    0x10016673
10016645:	mov    eax,DWORD PTR [ebp+0x8]
10016648:	mov    ds:0x10080d34,eax
1001664d:	call   0x10026946
10016652:	call   0x10018799
10016657:	test   al,al
10016659:	je     0x10016665
1001665b:	call   0x10016574
10016660:	mov    ds:0x10080fd5,al
10016665:	cmp    DWORD PTR ds:0x10080c7c,0x2
1001666c:	jne    0x10016673
1001666e:	call   0x1000741b
10016673:	inc    DWORD PTR ds:0x10080d3c
10016679:	mov    DWORD PTR [ebp-0x4],ebx
1001667c:	mov    DWORD PTR ds:0x10080c04,0x10080e88
10016686:	mov    esi,0x1006f598
1001668b:	mov    edi,0x10080c08
10016690:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10016691:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10016692:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10016693:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10016694:	push   ebx
10016695:	push   0xe6
1001669a:	call   0x10015fa4
1001669f:	pop    ecx
100166a0:	pop    ecx
100166a1:	mov    esi,eax
100166a3:	call   DWORD PTR ds:0x10066118
100166a9:	add    esi,DWORD PTR [ebp-0x20]
100166ac:	add    eax,esi
100166ae:	push   eax
100166af:	call   0x100466aa
100166b4:	pop    ecx
100166b5:	mov    DWORD PTR [ebp-0x4],0xfffffffe
100166bc:	jmp    0x1001672e
100166be:	xor    eax,eax
100166c0:	inc    eax
100166c1:	ret    
100166c2:	mov    esp,DWORD PTR [ebp-0x18]
100166c5:	mov    DWORD PTR [ebp-0x4],0xfffffffe
100166cc:	xor    eax,eax
100166ce:	jmp    0x10016731
100166d0:	dec    DWORD PTR ds:0x10080d3c
100166d6:	jne    0x1001672e
100166d8:	cmp    BYTE PTR ds:0x10080fd5,bl
100166de:	je     0x1001672e
100166e0:	xor    eax,eax
100166e2:	cmp    DWORD PTR ds:0x10080c7c,ebx
100166e8:	je     0x100166eb
100166ea:	inc    eax
100166eb:	cmp    eax,ebx
100166ed:	je     0x1001670a
100166ef:	push   0x10016399
100166f4:	push   DWORD PTR ds:0x10080c70
100166fa:	call   0x100574c0
100166ff:	push   0x10080c58
10016704:	call   DWORD PTR ds:0x10066138
1001670a:	mov    BYTE PTR ds:0x10080fd5,bl
10016710:	mov    eax,ds:0x10080c7c
10016715:	dec    eax
10016716:	je     0x10016726
10016718:	dec    eax
10016719:	je     0x10016722
1001671b:	dec    eax
1001671c:	jne    0x1001672e
1001671e:	push   0xb
10016720:	jmp    0x10016728
10016722:	push   0x3
10016724:	jmp    0x10016728
10016726:	push   0x1
10016728:	call   0x10037b70
1001672d:	pop    ecx
1001672e:	xor    eax,eax
10016730:	inc    eax
10016731:	call   0x10046f79
10016736:	ret    0xc
10016739:	push   0x14
1001673b:	mov    eax,0x100645be
10016740:	call   0x10059c75
10016745:	push   DWORD PTR [ebp+0x8]
10016748:	call   0x10016133
1001674d:	pop    ecx
1001674e:	mov    DWORD PTR [ebp-0x10],eax
10016751:	xor    ebx,ebx
10016753:	cmp    eax,ebx
10016755:	mov    DWORD PTR [ebp-0x4],ebx
10016758:	jne    0x1001677a
1001675a:	push   DWORD PTR [ebp+0xc]
1001675d:	push   DWORD PTR [ebp+0x8]
10016760:	call   DWORD PTR ds:0x10080c98
10016766:	lea    ecx,[ebp-0x10]
10016769:	mov    esi,eax
1001676b:	call   0x10015fdf
10016770:	mov    eax,esi
10016772:	call   0x10059d4d
10016777:	ret    0x8
1001677a:	mov    esi,DWORD PTR ds:0x100660f0
10016780:	add    eax,0x4
10016783:	push   eax
10016784:	call   esi
10016786:	mov    eax,DWORD PTR [ebp-0x10]
10016789:	cmp    BYTE PTR [eax+0x27],bl
1001678c:	jne    0x10016842
10016792:	push   DWORD PTR [eax+0x30]
10016795:	call   DWORD PTR ds:0x10066110
1001679b:	mov    eax,DWORD PTR [ebp-0x10]
1001679e:	mov    edi,DWORD PTR ds:0x100660ec
100167a4:	mov    BYTE PTR [eax+0x27],0x1
100167a8:	jmp    0x100167c1
100167aa:	add    eax,0x4
100167ad:	push   eax
100167ae:	call   edi
100167b0:	push   0x64
100167b2:	call   DWORD PTR ds:0x100660bc
100167b8:	mov    eax,DWORD PTR [ebp-0x10]
100167bb:	add    eax,0x4
100167be:	push   eax
100167bf:	call   esi
100167c1:	mov    eax,DWORD PTR [ebp-0x10]
100167c4:	mov    eax,DWORD PTR [eax+0x20]
100167c7:	cmp    eax,0x1
100167ca:	mov    eax,DWORD PTR [ebp-0x10]
100167cd:	jg     0x100167aa
100167cf:	push   DWORD PTR [eax+0x34]
100167d2:	call   DWORD PTR ds:0x10066110
100167d8:	mov    eax,DWORD PTR [ebp-0x10]
100167db:	xor    ecx,ecx
100167dd:	cmp    BYTE PTR [eax+0x26],bl
100167e0:	sete   cl
100167e3:	add    eax,0x4
100167e6:	push   eax
100167e7:	mov    DWORD PTR [ebp-0x20],ecx
100167ea:	call   edi
100167ec:	push   0x10080c58
100167f1:	call   esi
100167f3:	lea    edx,[ebp+0x8]
100167f6:	call   0x10017b21
100167fb:	push   0x10080c58
10016800:	call   edi
10016802:	mov    eax,DWORD PTR [ebp-0x10]
10016805:	add    eax,0x4
10016808:	push   eax
10016809:	call   esi
1001680b:	mov    esi,DWORD PTR [ebp-0x10]
1001680e:	call   0x100160ed
10016813:	lea    eax,[ebp-0x18]
10016816:	push   eax
10016817:	push   ebx
10016818:	push   ebx
10016819:	push   ebx
1001681a:	lea    eax,[ebp-0x1c]
1001681d:	push   eax
1001681e:	push   ebx
1001681f:	push   ebx
10016820:	push   0x4
10016822:	lea    eax,[ebp-0x20]
10016825:	push   eax
10016826:	push   0x8004667e
1001682b:	push   DWORD PTR [ebp+0x8]
1001682e:	mov    DWORD PTR [ebp-0x10],ebx
10016831:	mov    DWORD PTR [ebp-0x1c],ebx
10016834:	mov    DWORD PTR [ebp-0x18],ebx
10016837:	call   DWORD PTR ds:0x10080cc0
1001683d:	jmp    0x1001675a
10016842:	mov    ecx,DWORD PTR [eax+0x34]
10016845:	mov    esi,DWORD PTR ds:0x10066108
1001684b:	push   0x2
1001684d:	push   0x1
1001684f:	mov    edi,eax
10016851:	push   ebx
10016852:	lea    eax,[ebp-0x14]
10016855:	push   eax
10016856:	mov    DWORD PTR [ebp-0x14],ecx
10016859:	call   esi
1001685b:	push   eax
1001685c:	push   DWORD PTR [edi+0x34]
1001685f:	call   esi
10016861:	push   eax
10016862:	call   DWORD PTR ds:0x1006613c
10016868:	mov    esi,eax
1001686a:	mov    eax,DWORD PTR [ebp-0x10]
1001686d:	add    eax,0x4
10016870:	push   eax
10016871:	call   DWORD PTR ds:0x100660ec
10016877:	cmp    esi,ebx
10016879:	je     0x10016886
1001687b:	push   0xffffffff
1001687d:	push   DWORD PTR [ebp-0x14]
10016880:	call   DWORD PTR ds:0x10066084
10016886:	mov    ecx,DWORD PTR [ebp+0xc]
10016889:	or     eax,0xffffffff
1001688c:	mov    DWORD PTR [ecx],0x2736
10016892:	jmp    0x10016766
10016897:	push   0x4
10016899:	mov    eax,0x10065334
1001689e:	call   0x10059c75
100168a3:	mov    esi,DWORD PTR [ebp+0xc]
100168a6:	cmp    WORD PTR [esi],0x2
100168aa:	jne    0x100168ed
100168ac:	mov    eax,DWORD PTR [esi+0x4]
100168af:	push   eax
100168b0:	mov    DWORD PTR [ebp-0x10],eax
100168b3:	call   DWORD PTR ds:0x100663a8
100168b9:	mov    ebx,eax
100168bb:	call   0x10017642
100168c0:	test   al,al
100168c2:	je     0x100168ed
100168c4:	movzx  eax,BYTE PTR [ebp-0xd]
100168c8:	push   eax
100168c9:	movzx  eax,BYTE PTR [ebp-0xe]
100168cd:	push   eax
100168ce:	movzx  eax,BYTE PTR [ebp-0xf]
100168d2:	push   eax
100168d3:	movzx  eax,BYTE PTR [ebp-0x10]
100168d7:	push   eax
100168d8:	call   0x1000205f
100168dd:	add    esp,0x10
100168e0:	mov    eax,0x274d
100168e5:	call   0x10059d4d
100168ea:	ret    0x20
100168ed:	mov    ebx,DWORD PTR [ebp+0x8]
100168f0:	push   ebx
100168f1:	call   0x10016133
100168f6:	pop    ecx
100168f7:	mov    DWORD PTR [ebp+0xc],eax
100168fa:	and    DWORD PTR [ebp-0x4],0x0
100168fe:	test   eax,eax
10016900:	jne    0x1001692a
10016902:	push   DWORD PTR [ebp+0x24]
10016905:	push   DWORD PTR [ebp+0x20]
10016908:	push   DWORD PTR [ebp+0x1c]
1001690b:	push   DWORD PTR [ebp+0x18]
1001690e:	push   DWORD PTR [ebp+0x14]
10016911:	push   DWORD PTR [ebp+0x10]
10016914:	push   esi
10016915:	push   ebx
10016916:	call   DWORD PTR ds:0x10080c9c
1001691c:	mov    esi,eax
1001691e:	lea    ecx,[ebp+0xc]
10016921:	call   0x10015fdf
10016926:	mov    eax,esi
10016928:	jmp    0x100168e5
1001692a:	mov    edi,DWORD PTR [ebp+0x24]
1001692d:	push   edi
1001692e:	push   DWORD PTR [ebp+0x20]
10016931:	push   DWORD PTR [ebp+0x1c]
10016934:	push   DWORD PTR [ebp+0x18]
10016937:	push   DWORD PTR [ebp+0x14]
1001693a:	push   DWORD PTR [ebp+0x10]
1001693d:	push   esi
1001693e:	push   ebx
1001693f:	call   DWORD PTR [eax+0x58]
10016942:	cmp    eax,0xffffffff
10016945:	mov    DWORD PTR [ebp+0x24],eax
10016948:	jne    0x10016975
1001694a:	mov    edi,DWORD PTR [edi]
1001694c:	cmp    edi,0x2733
10016952:	jne    0x1001696a
10016954:	mov    eax,DWORD PTR [ebp+0xc]
10016957:	add    eax,0x4
1001695a:	push   eax
1001695b:	call   DWORD PTR ds:0x100660f0
10016961:	mov    eax,DWORD PTR [ebp+0xc]
10016964:	mov    BYTE PTR [eax+0x24],0x1
10016968:	jmp    0x1001698a
1001696a:	push   edi
1001696b:	push   ebx
1001696c:	call   0x1000205f
10016971:	pop    ecx
10016972:	pop    ecx
10016973:	jmp    0x10016997
10016975:	mov    eax,DWORD PTR [ebp+0xc]
10016978:	add    eax,0x4
1001697b:	push   eax
1001697c:	call   DWORD PTR ds:0x100660f0
10016982:	mov    esi,DWORD PTR [ebp+0xc]
10016985:	call   0x1001630b
1001698a:	mov    eax,DWORD PTR [ebp+0xc]
1001698d:	add    eax,0x4
10016990:	push   eax
10016991:	call   DWORD PTR ds:0x100660ec
10016997:	mov    esi,DWORD PTR [ebp+0x24]
1001699a:	jmp    0x1001691e
1001699c:	push   0x4
1001699e:	mov    eax,0x1005fe08
100169a3:	call   0x10059c75
100169a8:	push   DWORD PTR [ebp+0x8]
100169ab:	or     edi,0xffffffff
100169ae:	call   0x10016133
100169b3:	pop    ecx
100169b4:	mov    DWORD PTR [ebp-0x10],eax
100169b7:	mov    esi,DWORD PTR [ebp+0x10]
100169ba:	xor    ebx,ebx
100169bc:	cmp    eax,ebx
100169be:	mov    DWORD PTR [ebp-0x4],ebx
100169c1:	je     0x10016a30
100169c3:	cmp    DWORD PTR [ebp+0xc],0x4004667f
100169ca:	je     0x100169f4
100169cc:	cmp    DWORD PTR [ebp+0xc],0x8004667e
100169d3:	jne    0x10016a30
100169d5:	add    eax,0x4
100169d8:	push   eax
100169d9:	call   DWORD PTR ds:0x100660f0
100169df:	cmp    DWORD PTR [esi],ebx
100169e1:	mov    ecx,DWORD PTR [ebp-0x10]
100169e4:	sete   al
100169e7:	mov    BYTE PTR [ecx+0x26],al
100169ea:	mov    eax,DWORD PTR [ebp-0x10]
100169ed:	cmp    BYTE PTR [eax+0x25],bl
100169f0:	je     0x10016a21
100169f2:	jmp    0x10016a1f
100169f4:	add    eax,0x4
100169f7:	push   eax
100169f8:	call   DWORD PTR ds:0x100660f0
100169fe:	mov    eax,DWORD PTR [ebp-0x10]
10016a01:	cmp    BYTE PTR [eax+0x25],bl
10016a04:	je     0x10016a21
10016a06:	mov    eax,DWORD PTR [eax+0x1c]
10016a09:	call   0x10025b7a
10016a0e:	cmp    eax,ebx
10016a10:	mov    DWORD PTR [esi],ebx
10016a12:	je     0x10016a1c
10016a14:	mov    ecx,DWORD PTR [eax+0x18]
10016a17:	sub    ecx,DWORD PTR [eax+0x20]
10016a1a:	mov    DWORD PTR [esi],ecx
10016a1c:	mov    eax,DWORD PTR [ebp-0x10]
10016a1f:	xor    edi,edi
10016a21:	add    eax,0x4
10016a24:	push   eax
10016a25:	call   DWORD PTR ds:0x100660ec
10016a2b:	cmp    edi,0xffffffff
10016a2e:	jne    0x10016a57
10016a30:	push   DWORD PTR [ebp+0x30]
10016a33:	push   DWORD PTR [ebp+0x2c]
10016a36:	push   DWORD PTR [ebp+0x28]
10016a39:	push   DWORD PTR [ebp+0x24]
10016a3c:	push   DWORD PTR [ebp+0x20]
10016a3f:	push   DWORD PTR [ebp+0x1c]
10016a42:	push   DWORD PTR [ebp+0x18]
10016a45:	push   DWORD PTR [ebp+0x14]
10016a48:	push   esi
10016a49:	push   DWORD PTR [ebp+0xc]
10016a4c:	push   DWORD PTR [ebp+0x8]
10016a4f:	call   DWORD PTR ds:0x10080cc0
10016a55:	mov    edi,eax
10016a57:	lea    ecx,[ebp-0x10]
10016a5a:	call   0x10015fdf
10016a5f:	mov    eax,edi
10016a61:	call   0x10059d4d
10016a66:	ret    0x2c
10016a69:	push   ebp
10016a6a:	mov    ebp,esp
10016a6c:	sub    esp,0x10
10016a6f:	or     DWORD PTR [ebp-0x4],0xffffffff
10016a73:	push   ebx
10016a74:	push   edi
10016a75:	mov    edi,DWORD PTR ds:0x100660f0
10016a7b:	lea    eax,[esi+0x4]
10016a7e:	push   eax
10016a7f:	mov    DWORD PTR [ebp-0x8],eax
10016a82:	call   edi
10016a84:	xor    ebx,ebx
10016a86:	cmp    DWORD PTR [esi+0x38],ebx
10016a89:	je     0x10016aa1
10016a8b:	mov    eax,DWORD PTR [ebp+0xc]
10016a8e:	mov    ecx,DWORD PTR [ebp+0x14]
10016a91:	or     DWORD PTR [ebp-0x4],0xffffffff
10016a95:	mov    DWORD PTR [eax],ebx
10016a97:	mov    eax,DWORD PTR [esi+0x38]
10016a9a:	mov    DWORD PTR [ecx],eax
10016a9c:	jmp    0x10016b4f
10016aa1:	cmp    BYTE PTR [esi+0x26],bl
10016aa4:	je     0x10016acf
10016aa6:	push   DWORD PTR [ebp-0x8]
10016aa9:	call   DWORD PTR ds:0x100660ec
10016aaf:	mov    eax,DWORD PTR [esi+0x28]
10016ab2:	mov    DWORD PTR [ebp-0x10],eax
10016ab5:	mov    eax,DWORD PTR [esi+0x30]
10016ab8:	push   0xffffffff
10016aba:	mov    DWORD PTR [ebp-0xc],eax
10016abd:	push   ebx
10016abe:	lea    eax,[ebp-0x10]
10016ac1:	push   eax
10016ac2:	push   0x2
10016ac4:	call   DWORD PTR ds:0x100660e8
10016aca:	push   DWORD PTR [ebp-0x8]
10016acd:	call   edi
10016acf:	mov    ebx,DWORD PTR [esi+0x1c]
10016ad2:	cmp    BYTE PTR [ebx+0x1],0x0
10016ad6:	je     0x10016b00
10016ad8:	lea    eax,[ebx+0x38]
10016adb:	push   eax
10016adc:	mov    DWORD PTR [ebp-0xc],eax
10016adf:	call   edi
10016ae1:	push   DWORD PTR [ebp-0xc]
10016ae4:	xor    edi,edi
10016ae6:	cmp    DWORD PTR [ebx+0x28],edi
10016ae9:	setne  bl
10016aec:	call   DWORD PTR ds:0x100660ec
10016af2:	test   bl,bl
10016af4:	jne    0x10016b00
10016af6:	mov    eax,DWORD PTR [ebp+0xc]
10016af9:	mov    DWORD PTR [eax],edi
10016afb:	mov    DWORD PTR [ebp-0x4],edi
10016afe:	jmp    0x10016b4f
10016b00:	mov    eax,DWORD PTR [ebp+0x10]
10016b03:	mov    eax,DWORD PTR [eax]
10016b05:	mov    ebx,DWORD PTR [ebp+0x8]
10016b08:	mov    edi,DWORD PTR [esi+0x1c]
10016b0b:	shr    eax,1
10016b0d:	and    eax,0xffffff01
10016b12:	push   eax
10016b13:	push   DWORD PTR [ebx]
10016b15:	mov    eax,DWORD PTR [ebp+0xc]
10016b18:	push   DWORD PTR [ebx+0x4]
10016b1b:	call   0x1001629b
10016b20:	mov    ecx,DWORD PTR [ebp+0x10]
10016b23:	xor    eax,eax
10016b25:	mov    DWORD PTR [ecx],eax
10016b27:	mov    ecx,DWORD PTR [ebp+0xc]
10016b2a:	add    esp,0xc
10016b2d:	cmp    DWORD PTR [ecx],eax
10016b2f:	jne    0x10016b4c
10016b31:	cmp    DWORD PTR [ebx+0x4],eax
10016b34:	je     0x10016b4c
10016b36:	mov    al,BYTE PTR [esi+0x26]
10016b39:	mov    ecx,DWORD PTR [ebp+0x14]
10016b3c:	neg    al
10016b3e:	sbb    eax,eax
10016b40:	and    eax,0x13
10016b43:	add    eax,0x2733
10016b48:	mov    DWORD PTR [ecx],eax
10016b4a:	jmp    0x10016b4f
10016b4c:	mov    DWORD PTR [ebp-0x4],eax
10016b4f:	push   DWORD PTR [ebp-0x8]
10016b52:	call   DWORD PTR ds:0x100660ec
10016b58:	mov    eax,DWORD PTR [ebp-0x4]
10016b5b:	pop    edi
10016b5c:	pop    ebx
10016b5d:	leave  
10016b5e:	ret    0x10
10016b61:	push   0x4
10016b63:	mov    eax,0x1005fe08
10016b68:	call   0x10059c75
10016b6d:	push   DWORD PTR [ebp+0x8]
10016b70:	call   0x10016133
10016b75:	pop    ecx
10016b76:	mov    DWORD PTR [ebp-0x10],eax
10016b79:	mov    ecx,DWORD PTR [ebp+0x18]
10016b7c:	xor    edx,edx
10016b7e:	cmp    DWORD PTR [ebp+0x1c],edx
10016b81:	mov    DWORD PTR [ebp-0x4],edx
10016b84:	jne    0x10016ba7
10016b86:	cmp    eax,edx
10016b88:	je     0x10016ba7
10016b8a:	cmp    BYTE PTR [eax+0x25],dl
10016b8d:	je     0x10016ba7
10016b8f:	test   BYTE PTR [ecx],0x1
10016b92:	jne    0x10016ba7
10016b94:	push   DWORD PTR [ebp+0x28]
10016b97:	mov    esi,eax
10016b99:	push   ecx
10016b9a:	push   DWORD PTR [ebp+0x14]
10016b9d:	push   DWORD PTR [ebp+0xc]
10016ba0:	call   0x10016a69
10016ba5:	jmp    0x10016bc6
10016ba7:	push   DWORD PTR [ebp+0x28]
10016baa:	push   DWORD PTR [ebp+0x24]
10016bad:	push   DWORD PTR [ebp+0x20]
10016bb0:	push   DWORD PTR [ebp+0x1c]
10016bb3:	push   ecx
10016bb4:	push   DWORD PTR [ebp+0x14]
10016bb7:	push   DWORD PTR [ebp+0x10]
10016bba:	push   DWORD PTR [ebp+0xc]
10016bbd:	push   DWORD PTR [ebp+0x8]
10016bc0:	call   DWORD PTR ds:0x10080ccc
10016bc6:	lea    ecx,[ebp-0x10]
10016bc9:	mov    esi,eax
10016bcb:	call   0x10015fdf
10016bd0:	mov    eax,esi
10016bd2:	call   0x10059d4d
10016bd7:	ret    0x24
10016bda:	push   ebp
10016bdb:	mov    ebp,esp
10016bdd:	push   ecx
10016bde:	mov    edx,DWORD PTR [ebp+0x8]
10016be1:	xor    ecx,ecx
10016be3:	mov    DWORD PTR [eax],ecx
10016be5:	cmp    DWORD PTR [edx],ecx
10016be7:	mov    DWORD PTR [ebp-0x4],ecx
10016bea:	jbe    0x10016c2f
10016bec:	push   ebx
10016bed:	push   esi
10016bee:	push   edi
10016bef:	lea    esi,[edx+0x4]
10016bf2:	mov    ebx,DWORD PTR [eax]
10016bf4:	xor    ecx,ecx
10016bf6:	test   ebx,ebx
10016bf8:	jbe    0x10016c0e
10016bfa:	mov    edi,DWORD PTR [esi]
10016bfc:	lea    edx,[eax+0x4]
10016bff:	cmp    DWORD PTR [edx],edi
10016c01:	je     0x10016c0b
10016c03:	inc    ecx
10016c04:	add    edx,0x4
10016c07:	cmp    ecx,ebx
10016c09:	jb     0x10016bff
10016c0b:	mov    edx,DWORD PTR [ebp+0x8]
10016c0e:	cmp    ecx,ebx
10016c10:	jne    0x10016c1f
10016c12:	cmp    ebx,0x40
10016c15:	jae    0x10016c1f
10016c17:	mov    edi,DWORD PTR [esi]
10016c19:	mov    DWORD PTR [eax+ecx*4+0x4],edi
10016c1d:	inc    DWORD PTR [eax]
10016c1f:	inc    DWORD PTR [ebp-0x4]
10016c22:	mov    ecx,DWORD PTR [ebp-0x4]
10016c25:	add    esi,0x4
10016c28:	cmp    ecx,DWORD PTR [edx]
10016c2a:	jb     0x10016bf2
10016c2c:	pop    edi
10016c2d:	pop    esi
10016c2e:	pop    ebx
10016c2f:	leave  
10016c30:	ret    
10016c31:	push   ebp
10016c32:	mov    ebp,esp
10016c34:	and    esp,0xfffffff8
10016c37:	push   0xffffffff
10016c39:	push   0x1006530b
10016c3e:	mov    eax,fs:0x0
10016c44:	push   eax
10016c45:	sub    esp,0xa88
10016c4b:	push   ebx
10016c4c:	push   esi
10016c4d:	push   edi
10016c4e:	mov    eax,ds:0x1007e030
10016c53:	xor    eax,esp
10016c55:	push   eax
10016c56:	lea    eax,[esp+0xa98]
10016c5d:	mov    fs:0x0,eax
10016c63:	xor    ebx,ebx
10016c65:	mov    DWORD PTR [esp+0x1c],ebx
10016c69:	or     DWORD PTR [esp+0x2c],0xffffffff
10016c6e:	mov    edi,0x10015fdf
10016c73:	push   edi
10016c74:	mov    esi,0x100173dd
10016c79:	push   esi
10016c7a:	push   0x40
10016c7c:	push   0x4
10016c7e:	lea    eax,[esp+0x8a4]
10016c85:	push   eax
10016c86:	mov    DWORD PTR [esp+0xab4],ebx
10016c8d:	call   0x10046098
10016c92:	push   edi
10016c93:	push   esi
10016c94:	push   0x40
10016c96:	push   0x4
10016c98:	lea    eax,[esp+0x7a4]
10016c9f:	push   eax
10016ca0:	mov    BYTE PTR [esp+0xab4],0x1
10016ca8:	call   0x10046098
10016cad:	push   edi
10016cae:	push   esi
10016caf:	push   0x40
10016cb1:	push   0x4
10016cb3:	lea    eax,[esp+0x9a4]
10016cba:	push   eax
10016cbb:	mov    BYTE PTR [esp+0xab4],0x2
10016cc3:	call   0x10046098
10016cc8:	cmp    DWORD PTR [ebp+0xc],ebx
10016ccb:	mov    BYTE PTR [esp+0xaa0],0x3
10016cd3:	mov    DWORD PTR [esp+0x28],ebx
10016cd7:	mov    DWORD PTR [esp+0x18],ebx
10016cdb:	mov    DWORD PTR [esp+0x584],ebx
10016ce2:	je     0x10016dc8
10016ce8:	mov    eax,DWORD PTR [ebp+0xc]
10016ceb:	mov    eax,DWORD PTR [eax]
10016ced:	cmp    eax,0x40
10016cf0:	jbe    0x10016d00
10016cf2:	mov    eax,DWORD PTR [ebp+0x1c]
10016cf5:	mov    DWORD PTR [eax],0x2747
10016cfb:	jmp    0x10017365
10016d00:	and    DWORD PTR [esp+0x14],0x0
10016d05:	test   eax,eax
10016d07:	jbe    0x10016dc8
10016d0d:	mov    edi,DWORD PTR [ebp+0xc]
10016d10:	lea    ebx,[esp+0x894]
10016d17:	add    edi,0x4
10016d1a:	push   DWORD PTR [edi]
10016d1c:	call   0x10016133
10016d21:	test   eax,eax
10016d23:	pop    ecx
10016d24:	mov    DWORD PTR [esp+0x20],eax
10016d28:	je     0x10016d73
10016d2a:	cmp    BYTE PTR [eax+0x25],0x0
10016d2e:	je     0x10016d73
10016d30:	cmp    DWORD PTR [esp+0x1c],0x0
10016d35:	jne    0x10016d46
10016d37:	push   0x1
10016d39:	lea    esi,[esp+0x20]
10016d3d:	call   0x10015ff2
10016d42:	mov    eax,DWORD PTR [esp+0x20]
10016d46:	push   0x1
10016d48:	mov    esi,ebx
10016d4a:	call   0x10015ff2
10016d4f:	inc    DWORD PTR [esp+0x28]
10016d53:	and    DWORD PTR [esp+0x30],0x0
10016d58:	push   0x1
10016d5a:	xor    eax,eax
10016d5c:	lea    esi,[esp+0x24]
10016d60:	add    ebx,0x4
10016d63:	call   0x10015ff2
10016d68:	lea    ecx,[esp+0x30]
10016d6c:	call   0x10015fdf
10016d71:	jmp    0x10016da9
10016d73:	mov    edx,DWORD PTR [esp+0x584]
10016d7a:	xor    eax,eax
10016d7c:	test   edx,edx
10016d7e:	jbe    0x10016d90
10016d80:	mov    ecx,DWORD PTR [edi]
10016d82:	cmp    DWORD PTR [esp+eax*4+0x588],ecx
10016d89:	je     0x10016d90
10016d8b:	inc    eax
10016d8c:	cmp    eax,edx
10016d8e:	jb     0x10016d82
10016d90:	cmp    eax,edx
10016d92:	jne    0x10016da9
10016d94:	cmp    edx,0x40
10016d97:	jae    0x10016da9
10016d99:	mov    ecx,DWORD PTR [edi]
10016d9b:	mov    DWORD PTR [esp+eax*4+0x588],ecx
10016da2:	inc    DWORD PTR [esp+0x584]
10016da9:	lea    ecx,[esp+0x20]
10016dad:	call   0x10015fdf
10016db2:	inc    DWORD PTR [esp+0x14]
10016db6:	mov    eax,DWORD PTR [ebp+0xc]
10016db9:	mov    ecx,DWORD PTR [esp+0x14]
10016dbd:	add    edi,0x4
10016dc0:	cmp    ecx,DWORD PTR [eax]
10016dc2:	jb     0x10016d1a
10016dc8:	mov    esi,DWORD PTR [ebp+0x10]
10016dcb:	and    DWORD PTR [esp+0x5c],0x0
10016dd0:	and    DWORD PTR [esp+0x47c],0x0
10016dd8:	test   esi,esi
10016dda:	je     0x10016eee
10016de0:	mov    eax,DWORD PTR [esi]
10016de2:	cmp    eax,0x40
10016de5:	ja     0x10016cf2
10016deb:	and    DWORD PTR [esp+0x14],0x0
10016df0:	test   eax,eax
10016df2:	jbe    0x10016eee
10016df8:	lea    ebx,[esp+0x794]
10016dff:	lea    edi,[esi+0x4]
10016e02:	push   DWORD PTR [edi]
10016e04:	call   0x10016133
10016e09:	test   eax,eax
10016e0b:	pop    ecx
10016e0c:	mov    DWORD PTR [esp+0x20],eax
10016e10:	jne    0x10016e37
10016e12:	mov    edx,DWORD PTR [esp+0x5c]
10016e16:	test   edx,edx
10016e18:	jbe    0x10016e27
10016e1a:	mov    ecx,DWORD PTR [edi]
10016e1c:	cmp    DWORD PTR [esp+eax*4+0x60],ecx
10016e20:	je     0x10016e27
10016e22:	inc    eax
10016e23:	cmp    eax,edx
10016e25:	jb     0x10016e1c
10016e27:	cmp    eax,edx
10016e29:	jne    0x10016ed2
10016e2f:	cmp    edx,0x40
10016e32:	jmp    0x10016ec6
10016e37:	cmp    BYTE PTR [eax+0x25],0x0
10016e3b:	je     0x10016e68
10016e3d:	cmp    DWORD PTR [esp+0x1c],0x0
10016e42:	jne    0x10016e53
10016e44:	push   0x1
10016e46:	lea    esi,[esp+0x20]
10016e4a:	call   0x10015ff2
10016e4f:	mov    eax,DWORD PTR [esp+0x20]
10016e53:	push   0x1
10016e55:	mov    esi,ebx
10016e57:	call   0x10015ff2
10016e5c:	inc    DWORD PTR [esp+0x18]
10016e60:	mov    esi,DWORD PTR [ebp+0x10]
10016e63:	add    ebx,0x4
10016e66:	jmp    0x10016ed2
10016e68:	cmp    BYTE PTR [eax+0x24],0x0
10016e6c:	je     0x10016ea4
10016e6e:	mov    edx,DWORD PTR [esp+0x47c]
10016e75:	xor    eax,eax
10016e77:	test   edx,edx
10016e79:	jbe    0x10016e8b
10016e7b:	mov    ecx,DWORD PTR [edi]
10016e7d:	cmp    DWORD PTR [esp+eax*4+0x480],ecx
10016e84:	je     0x10016e8b
10016e86:	inc    eax
10016e87:	cmp    eax,edx
10016e89:	jb     0x10016e7d
10016e8b:	cmp    eax,edx
10016e8d:	jne    0x10016ea4
10016e8f:	cmp    edx,0x40
10016e92:	jae    0x10016ea4
10016e94:	mov    ecx,DWORD PTR [edi]
10016e96:	mov    DWORD PTR [esp+eax*4+0x480],ecx
10016e9d:	inc    DWORD PTR [esp+0x47c]
10016ea4:	xor    eax,eax
10016ea6:	cmp    eax,DWORD PTR [esp+0x5c]
10016eaa:	jae    0x10016ebf
10016eac:	mov    ecx,DWORD PTR [edi]
10016eae:	cmp    DWORD PTR [esp+eax*4+0x60],ecx
10016eb2:	je     0x10016ebb
10016eb4:	inc    eax
10016eb5:	cmp    eax,DWORD PTR [esp+0x5c]
10016eb9:	jb     0x10016eae
10016ebb:	cmp    eax,DWORD PTR [esp+0x5c]
10016ebf:	jne    0x10016ed2
10016ec1:	cmp    DWORD PTR [esp+0x5c],0x40
10016ec6:	jae    0x10016ed2
10016ec8:	mov    ecx,DWORD PTR [edi]
10016eca:	mov    DWORD PTR [esp+eax*4+0x60],ecx
10016ece:	inc    DWORD PTR [esp+0x5c]
10016ed2:	lea    ecx,[esp+0x20]
10016ed6:	call   0x10015fdf
10016edb:	inc    DWORD PTR [esp+0x14]
10016edf:	mov    eax,DWORD PTR [esp+0x14]
10016ee3:	add    edi,0x4
10016ee6:	cmp    eax,DWORD PTR [esi]
10016ee8:	jb     0x10016e02
10016eee:	mov    edi,DWORD PTR [ebp+0x14]
10016ef1:	xor    ebx,ebx
10016ef3:	cmp    edi,ebx
10016ef5:	mov    DWORD PTR [esp+0x164],ebx
10016efc:	je     0x10016f5e
10016efe:	mov    eax,DWORD PTR [edi]
10016f00:	cmp    eax,0x40
10016f03:	ja     0x10016cf2
10016f09:	cmp    eax,ebx
10016f0b:	jbe    0x10016f5e
10016f0d:	lea    ecx,[edi+0x4]
10016f10:	mov    esi,eax
10016f12:	xor    eax,eax
10016f14:	cmp    DWORD PTR [esp+0x164],ebx
10016f1b:	jbe    0x10016f32
10016f1d:	mov    edx,DWORD PTR [ecx]
10016f1f:	cmp    DWORD PTR [esp+eax*4+0x168],edx
10016f26:	je     0x10016f32
10016f28:	inc    eax
10016f29:	cmp    eax,DWORD PTR [esp+0x164]
10016f30:	jb     0x10016f1f
10016f32:	cmp    eax,DWORD PTR [esp+0x164]
10016f39:	jne    0x10016f55
10016f3b:	cmp    DWORD PTR [esp+0x164],0x40
10016f43:	jae    0x10016f55
10016f45:	mov    edx,DWORD PTR [ecx]
10016f47:	mov    DWORD PTR [esp+eax*4+0x168],edx
10016f4e:	inc    DWORD PTR [esp+0x164]
10016f55:	add    ecx,0x4
10016f58:	dec    esi
10016f59:	jne    0x10016f12
10016f5b:	mov    esi,DWORD PTR [ebp+0x10]
10016f5e:	mov    eax,DWORD PTR [esp+0x1c]
10016f62:	cmp    eax,ebx
10016f64:	je     0x100172a9
10016f6a:	cmp    BYTE PTR [eax+0x25],0x0
10016f6e:	je     0x100172a9
10016f74:	xor    eax,eax
10016f76:	mov    WORD PTR [esp+0x3c],bx
10016f7b:	lea    edi,[esp+0x3e]
10016f7f:	stos   DWORD PTR es:[edi],eax
10016f80:	stos   DWORD PTR es:[edi],eax
10016f81:	stos   DWORD PTR es:[edi],eax
10016f82:	stos   WORD PTR es:[edi],ax
10016f84:	xor    eax,eax
10016f86:	mov    DWORD PTR [esp+0x20],ebx
10016f8a:	lea    edi,[esp+0x24]
10016f8e:	stos   DWORD PTR es:[edi],eax
10016f8f:	lea    eax,[esp+0x3c]
10016f93:	push   eax
10016f94:	call   DWORD PTR ds:0x10066140
10016f9a:	lea    eax,[esp+0x20]
10016f9e:	push   eax
10016f9f:	lea    eax,[esp+0x40]
10016fa3:	push   eax
10016fa4:	call   DWORD PTR ds:0x10066104
10016faa:	mov    ecx,DWORD PTR [ebp+0x18]
10016fad:	xor    eax,eax
10016faf:	cmp    ecx,ebx
10016fb1:	lea    edi,[esp+0x58]
10016fb5:	mov    DWORD PTR [esp+0x54],ebx
10016fb9:	stos   DWORD PTR es:[edi],eax
10016fba:	je     0x10016fe6
10016fbc:	mov    eax,DWORD PTR [ecx]
10016fbe:	imul   eax,eax,0x3e8
10016fc4:	add    eax,DWORD PTR [ecx+0x4]
10016fc7:	imul   eax,eax,0x2710
10016fcd:	cdq    
10016fce:	add    DWORD PTR [esp+0x20],eax
10016fd2:	lea    eax,[esp+0x3c]
10016fd6:	push   eax
10016fd7:	adc    DWORD PTR [esp+0x28],edx
10016fdb:	lea    eax,[esp+0x24]
10016fdf:	push   eax
10016fe0:	call   DWORD PTR ds:0x10066120
10016fe6:	mov    eax,DWORD PTR [esp+0x18]
10016fea:	mov    ecx,DWORD PTR [esp+0x28]
10016fee:	add    eax,ecx
10016ff0:	mov    DWORD PTR [esp+0x14],ebx
10016ff4:	mov    DWORD PTR [esp+0x30],eax
10016ff8:	push   0x1
10016ffa:	call   DWORD PTR ds:0x100660bc
10017000:	cmp    DWORD PTR [esp+0x584],ebx
10017007:	mov    DWORD PTR [esp+0x26c],ebx
1001700e:	mov    DWORD PTR [esp+0x374],ebx
10017015:	mov    DWORD PTR [esp+0x68c],ebx
1001701c:	ja     0x1001702d
1001701e:	cmp    DWORD PTR [esp+0x5c],ebx
10017022:	ja     0x1001702d
10017024:	cmp    DWORD PTR [esp+0x164],ebx
1001702b:	jbe    0x10017096
1001702d:	lea    eax,[esp+0x584]
10017034:	push   eax
10017035:	lea    eax,[esp+0x270]
1001703c:	call   0x10016bda
10017041:	pop    ecx
10017042:	lea    eax,[esp+0x5c]
10017046:	push   eax
10017047:	lea    eax,[esp+0x378]
1001704e:	call   0x10016bda
10017053:	pop    ecx
10017054:	lea    eax,[esp+0x164]
1001705b:	push   eax
1001705c:	lea    eax,[esp+0x690]
10017063:	call   0x10016bda
10017068:	pop    ecx
10017069:	push   DWORD PTR [ebp+0x1c]
1001706c:	lea    eax,[esp+0x58]
10017070:	push   eax
10017071:	lea    eax,[esp+0x694]
10017078:	push   eax
10017079:	lea    eax,[esp+0x380]
10017080:	push   eax
10017081:	lea    eax,[esp+0x27c]
10017088:	push   eax
10017089:	push   DWORD PTR [ebp+0x8]
1001708c:	mov    eax,DWORD PTR [esp+0x34]
10017090:	call   DWORD PTR [eax+0x94]
10017096:	cmp    DWORD PTR [esp+0x30],ebx
1001709a:	jbe    0x100171d6
100170a0:	xor    edi,edi
100170a2:	cmp    DWORD PTR [esp+0x28],ebx
100170a6:	je     0x1001713b
100170ac:	lea    esi,[esp+edi*4+0x894]
100170b3:	mov    eax,DWORD PTR [esi]
100170b5:	add    eax,0x4
100170b8:	push   eax
100170b9:	call   DWORD PTR ds:0x100660f0
100170bf:	mov    eax,DWORD PTR [esi]
100170c1:	mov    ecx,DWORD PTR [eax+0x28]
100170c4:	mov    DWORD PTR [esp+0x34],ecx
100170c8:	mov    ecx,DWORD PTR [eax+0x30]
100170cb:	mov    DWORD PTR [esp+0x38],ecx
100170cf:	cmp    DWORD PTR [eax+0x38],ebx
100170d2:	jne    0x100170ea
100170d4:	push   ebx
100170d5:	push   ebx
100170d6:	lea    eax,[esp+0x3c]
100170da:	push   eax
100170db:	push   0x2
100170dd:	call   DWORD PTR ds:0x100660e8
100170e3:	cmp    eax,0x102
100170e8:	je     0x10017124
100170ea:	mov    edx,DWORD PTR [esp+0x26c]
100170f1:	xor    ecx,ecx
100170f3:	cmp    edx,ebx
100170f5:	jbe    0x10017109
100170f7:	mov    eax,DWORD PTR [esi]
100170f9:	mov    eax,DWORD PTR [eax]
100170fb:	cmp    DWORD PTR [esp+ecx*4+0x270],eax
10017102:	je     0x10017109
10017104:	inc    ecx
10017105:	cmp    ecx,edx
10017107:	jb     0x100170fb
10017109:	cmp    ecx,edx
1001710b:	jne    0x10017124
1001710d:	cmp    edx,0x40
10017110:	jae    0x10017124
10017112:	mov    eax,DWORD PTR [esi]
10017114:	mov    eax,DWORD PTR [eax]
10017116:	mov    DWORD PTR [esp+ecx*4+0x270],eax
1001711d:	inc    DWORD PTR [esp+0x26c]
10017124:	mov    esi,DWORD PTR [esi]
10017126:	add    esi,0x4
10017129:	push   esi
1001712a:	call   DWORD PTR ds:0x100660ec
10017130:	inc    edi
10017131:	cmp    edi,DWORD PTR [esp+0x28]
10017135:	jne    0x100170ac
1001713b:	xor    edi,edi
1001713d:	cmp    DWORD PTR [esp+0x18],ebx
10017141:	je     0x100171d6
10017147:	lea    esi,[esp+edi*4+0x794]
1001714e:	mov    eax,DWORD PTR [esi]
10017150:	add    eax,0x4
10017153:	push   eax
10017154:	call   DWORD PTR ds:0x100660f0
1001715a:	mov    eax,DWORD PTR [esi]
1001715c:	mov    ecx,DWORD PTR [eax+0x2c]
1001715f:	mov    DWORD PTR [esp+0x34],ecx
10017163:	mov    ecx,DWORD PTR [eax+0x30]
10017166:	mov    DWORD PTR [esp+0x38],ecx
1001716a:	cmp    DWORD PTR [eax+0x38],ebx
1001716d:	jne    0x10017185
1001716f:	push   ebx
10017170:	push   ebx
10017171:	lea    eax,[esp+0x3c]
10017175:	push   eax
10017176:	push   0x2
10017178:	call   DWORD PTR ds:0x100660e8
1001717e:	cmp    eax,0x102
10017183:	je     0x100171bf
10017185:	mov    edx,DWORD PTR [esp+0x374]
1001718c:	xor    ecx,ecx
1001718e:	cmp    edx,ebx
10017190:	jbe    0x100171a4
10017192:	mov    eax,DWORD PTR [esi]
10017194:	mov    eax,DWORD PTR [eax]
10017196:	cmp    DWORD PTR [esp+ecx*4+0x378],eax
1001719d:	je     0x100171a4
1001719f:	inc    ecx
100171a0:	cmp    ecx,edx
100171a2:	jb     0x10017196
100171a4:	cmp    ecx,edx
100171a6:	jne    0x100171bf
100171a8:	cmp    edx,0x40
100171ab:	jae    0x100171bf
100171ad:	mov    eax,DWORD PTR [esi]
100171af:	mov    eax,DWORD PTR [eax]
100171b1:	mov    DWORD PTR [esp+ecx*4+0x378],eax
100171b8:	inc    DWORD PTR [esp+0x374]
100171bf:	mov    esi,DWORD PTR [esi]
100171c1:	add    esi,0x4
100171c4:	push   esi
100171c5:	call   DWORD PTR ds:0x100660ec
100171cb:	inc    edi
100171cc:	cmp    edi,DWORD PTR [esp+0x18]
100171d0:	jne    0x10017147
100171d6:	mov    eax,DWORD PTR [esp+0x68c]
100171dd:	mov    ecx,DWORD PTR [esp+0x374]
100171e4:	lea    esi,[eax+ecx*1]
100171e7:	add    esi,DWORD PTR [esp+0x26c]
100171ee:	cmp    esi,ebx
100171f0:	mov    DWORD PTR [esp+0x2c],esi
100171f4:	jg     0x1001725f
100171f6:	cmp    DWORD PTR [ebp+0x18],ebx
100171f9:	je     0x10017240
100171fb:	lea    eax,[esp+0x3c]
100171ff:	push   eax
10017200:	call   DWORD PTR ds:0x10066140
10017206:	xor    eax,eax
10017208:	mov    DWORD PTR [esp+0x4c],ebx
1001720c:	lea    edi,[esp+0x50]
10017210:	stos   DWORD PTR es:[edi],eax
10017211:	lea    eax,[esp+0x3c]
10017215:	push   eax
10017216:	call   DWORD PTR ds:0x10066140
1001721c:	lea    eax,[esp+0x4c]
10017220:	push   eax
10017221:	lea    eax,[esp+0x40]
10017225:	push   eax
10017226:	call   DWORD PTR ds:0x10066104
1001722c:	lea    eax,[esp+0x20]
10017230:	push   eax
10017231:	lea    eax,[esp+0x50]
10017235:	push   eax
10017236:	call   DWORD PTR ds:0x1006610c
1001723c:	test   eax,eax
1001723e:	jge    0x1001725f
10017240:	push   DWORD PTR [esp+0x14]
10017244:	call   DWORD PTR ds:0x100660bc
1001724a:	cmp    DWORD PTR [esp+0x14],0x64
1001724f:	jae    0x10016ff8
10017255:	add    DWORD PTR [esp+0x14],0x2
1001725a:	jmp    0x10016ff8
1001725f:	cmp    esi,0xffffffff
10017262:	je     0x10017365
10017268:	mov    eax,DWORD PTR [ebp+0xc]
1001726b:	test   eax,eax
1001726d:	je     0x1001727d
1001726f:	lea    ecx,[esp+0x26c]
10017276:	push   ecx
10017277:	call   0x10016bda
1001727c:	pop    ecx
1001727d:	mov    eax,DWORD PTR [ebp+0x10]
10017280:	test   eax,eax
10017282:	je     0x10017292
10017284:	lea    ecx,[esp+0x374]
1001728b:	push   ecx
1001728c:	call   0x10016bda
10017291:	pop    ecx
10017292:	mov    eax,DWORD PTR [ebp+0x14]
10017295:	test   eax,eax
10017297:	je     0x100172c1
10017299:	lea    ecx,[esp+0x68c]
100172a0:	push   ecx
100172a1:	call   0x10016bda
100172a6:	pop    ecx
100172a7:	jmp    0x100172c1
100172a9:	push   DWORD PTR [ebp+0x1c]
100172ac:	push   DWORD PTR [ebp+0x18]
100172af:	push   edi
100172b0:	push   esi
100172b1:	push   DWORD PTR [ebp+0xc]
100172b4:	push   DWORD PTR [ebp+0x8]
100172b7:	call   DWORD PTR ds:0x10080cd8
100172bd:	mov    DWORD PTR [esp+0x2c],eax
100172c1:	cmp    DWORD PTR [esp+0x2c],0xffffffff
100172c6:	je     0x10017365
100172cc:	cmp    DWORD PTR [ebp+0x10],0x0
100172d0:	je     0x10017365
100172d6:	cmp    DWORD PTR [esp+0x47c],0x0
100172de:	jbe    0x10017365
100172e4:	xor    ebx,ebx
100172e6:	cmp    DWORD PTR [esp+0x47c],ebx
100172ed:	je     0x10017365
100172ef:	mov    edi,DWORD PTR [ebp+0x10]
100172f2:	add    edi,0x4
100172f5:	mov    esi,DWORD PTR [edi]
100172f7:	lea    eax,[esp+0x47c]
100172fe:	push   eax
100172ff:	push   esi
10017300:	call   0x10050f2c
10017305:	test   eax,eax
10017307:	je     0x10017358
10017309:	push   esi
1001730a:	call   0x10016133
1001730f:	pop    ecx
10017310:	mov    DWORD PTR [esp+0x18],eax
10017314:	test   eax,eax
10017316:	mov    BYTE PTR [esp+0xaa0],0x4
1001731e:	je     0x1001734f
10017320:	add    eax,0x4
10017323:	push   eax
10017324:	call   DWORD PTR ds:0x100660f0
1001732a:	mov    eax,DWORD PTR [esp+0x18]
1001732e:	cmp    BYTE PTR [eax+0x25],0x0
10017332:	jne    0x10017345
10017334:	mov    BYTE PTR [eax+0x24],0x0
10017338:	mov    esi,DWORD PTR [esp+0x18]
1001733c:	call   0x1001630b
10017341:	mov    eax,DWORD PTR [esp+0x18]
10017345:	add    eax,0x4
10017348:	push   eax
10017349:	call   DWORD PTR ds:0x100660ec
1001734f:	lea    ecx,[esp+0x18]
10017353:	call   0x10015fdf
10017358:	inc    ebx
10017359:	add    edi,0x4
1001735c:	cmp    ebx,DWORD PTR [esp+0x47c]
10017363:	jne    0x100172f5
10017365:	mov    esi,0x10015fdf
1001736a:	push   esi
1001736b:	push   0x40
1001736d:	push   0x4
1001736f:	lea    eax,[esp+0x9a0]
10017376:	push   eax
10017377:	mov    BYTE PTR [esp+0xab0],0x2
1001737f:	call   0x10043339
10017384:	push   esi
10017385:	push   0x40
10017387:	push   0x4
10017389:	lea    eax,[esp+0x7a0]
10017390:	push   eax
10017391:	mov    BYTE PTR [esp+0xab0],0x1
10017399:	call   0x10043339
1001739e:	push   esi
1001739f:	push   0x40
100173a1:	push   0x4
100173a3:	lea    eax,[esp+0x8a0]
100173aa:	push   eax
100173ab:	mov    BYTE PTR [esp+0xab0],0x0
100173b3:	call   0x10043339
100173b8:	lea    ecx,[esp+0x1c]
100173bc:	call   0x10015fdf
100173c1:	mov    eax,DWORD PTR [esp+0x2c]
100173c5:	mov    ecx,DWORD PTR [esp+0xa98]
100173cc:	mov    DWORD PTR fs:0x0,ecx
100173d3:	pop    ecx
100173d4:	pop    edi
100173d5:	pop    esi
100173d6:	pop    ebx
100173d7:	mov    esp,ebp
100173d9:	pop    ebp
100173da:	ret    0x18
100173dd:	and    DWORD PTR [ecx],0x0
100173e0:	ret    
100173e1:	push   0x14
100173e3:	push   0x100752f8
100173e8:	call   0x10046f34
100173ed:	mov    ebx,DWORD PTR [ebp+0x8]
100173f0:	or     DWORD PTR [ebp-0x20],0xffffffff
100173f4:	xor    esi,esi
100173f6:	cmp    DWORD PTR [ebx+0x1c],esi
100173f9:	je     0x100174b4
100173ff:	cmp    DWORD PTR [ebx+0x38],esi
10017402:	je     0x10017417
10017404:	mov    eax,DWORD PTR [ebp+0x14]
10017407:	mov    DWORD PTR [eax],esi
10017409:	mov    eax,DWORD PTR [ebx+0x38]
1001740c:	mov    DWORD PTR [ecx],eax
1001740e:	or     DWORD PTR [ebp-0x20],0xffffffff
10017412:	jmp    0x100174b4
10017417:	mov    DWORD PTR [ebp-0x1c],esi
1001741a:	mov    DWORD PTR [ebp-0x4],esi
1001741d:	mov    eax,ebx
1001741f:	call   0x10016241
10017424:	xor    eax,eax
10017426:	mov    DWORD PTR [ebp-0x24],eax
10017429:	cmp    eax,DWORD PTR [ebp+0x10]
1001742c:	je     0x10017489
1001742e:	mov    ecx,DWORD PTR [ebp+0xc]
10017431:	lea    edi,[ecx+eax*8]
10017434:	mov    eax,DWORD PTR [edi]
10017436:	mov    ecx,DWORD PTR [edi+0x4]
10017439:	mov    edx,DWORD PTR [ebx+0x1c]
1001743c:	mov    esi,DWORD PTR [edx+0x30]
1001743f:	mov    DWORD PTR [esi+0xc],ecx
10017442:	mov    DWORD PTR [esi+0x10],eax
10017445:	mov    BYTE PTR [esi+0x18],0x0
10017449:	and    DWORD PTR [esi+0x14],0x0
1001744d:	push   DWORD PTR [esi+0x4]
10017450:	call   DWORD PTR ds:0x10066110
10017456:	mov    eax,DWORD PTR [esi+0x8]
10017459:	push   0xffffffff
1001745b:	push   eax
1001745c:	call   DWORD PTR ds:0x10066084
10017462:	mov    esi,DWORD PTR [esi+0x14]
10017465:	add    DWORD PTR [ebp-0x1c],esi
10017468:	cmp    esi,DWORD PTR [edi]
1001746a:	jae    0x1001747d
1001746c:	cmp    BYTE PTR [ebx+0x26],0x0
10017470:	je     0x10017487
10017472:	push   0xc8
10017477:	call   DWORD PTR ds:0x100660bc
1001747d:	inc    DWORD PTR [ebp-0x24]
10017480:	mov    eax,DWORD PTR [ebp-0x24]
10017483:	xor    esi,esi
10017485:	jmp    0x10017429
10017487:	xor    esi,esi
10017489:	cmp    DWORD PTR [ebp-0x1c],esi
1001748c:	jne    0x1001749d
1001748e:	mov    eax,DWORD PTR [ebx+0x20]
10017491:	cmp    eax,0x1
10017494:	mov    DWORD PTR [ebp-0x20],0x2746
1001749b:	je     0x100174a0
1001749d:	mov    DWORD PTR [ebp-0x20],esi
100174a0:	mov    DWORD PTR [ebp-0x4],0xfffffffe
100174a7:	call   0x100174c0
100174ac:	mov    eax,DWORD PTR [ebp+0x14]
100174af:	mov    ecx,DWORD PTR [ebp-0x1c]
100174b2:	mov    DWORD PTR [eax],ecx
100174b4:	mov    eax,DWORD PTR [ebp-0x20]
100174b7:	call   0x10046f79
100174bc:	ret    
100174bd:	mov    ebx,DWORD PTR [ebp+0x8]
100174c0:	add    ebx,0x4
100174c3:	push   ebx
100174c4:	call   DWORD PTR ds:0x100660ec
100174ca:	ret    
100174cb:	push   0x4
100174cd:	mov    eax,0x1005fe08
100174d2:	call   0x10059c75
100174d7:	push   DWORD PTR [ebp+0x8]
100174da:	call   0x10016133
100174df:	pop    ecx
100174e0:	mov    DWORD PTR [ebp-0x10],eax
100174e3:	xor    ecx,ecx
100174e5:	cmp    DWORD PTR [ebp+0x1c],ecx
100174e8:	mov    DWORD PTR [ebp-0x4],ecx
100174eb:	jne    0x1001750d
100174ed:	cmp    eax,ecx
100174ef:	je     0x1001750d
100174f1:	cmp    BYTE PTR [eax+0x25],cl
100174f4:	je     0x1001750d
100174f6:	push   DWORD PTR [ebp+0x14]
100174f9:	mov    ecx,DWORD PTR [ebp+0x28]
100174fc:	push   DWORD PTR [ebp+0x10]
100174ff:	push   DWORD PTR [ebp+0xc]
10017502:	push   eax
10017503:	call   0x100173e1
10017508:	add    esp,0x10
1001750b:	jmp    0x1001752e
1001750d:	push   DWORD PTR [ebp+0x28]
10017510:	push   DWORD PTR [ebp+0x24]
10017513:	push   DWORD PTR [ebp+0x20]
10017516:	push   DWORD PTR [ebp+0x1c]
10017519:	push   DWORD PTR [ebp+0x18]
1001751c:	push   DWORD PTR [ebp+0x14]
1001751f:	push   DWORD PTR [ebp+0x10]
10017522:	push   DWORD PTR [ebp+0xc]
10017525:	push   DWORD PTR [ebp+0x8]
10017528:	call   DWORD PTR ds:0x10080cdc
1001752e:	lea    ecx,[ebp-0x10]
10017531:	mov    esi,eax
10017533:	call   0x10015fdf
10017538:	mov    eax,esi
1001753a:	call   0x10059d4d
1001753f:	ret    0x24
10017542:	push   0x10
10017544:	mov    eax,0x1006459b
10017549:	call   0x10059ca8
1001754e:	push   DWORD PTR [ebp+0x20]
10017551:	mov    edi,DWORD PTR [ebp+0x14]
10017554:	push   DWORD PTR [ebp+0x1c]
10017557:	xor    esi,esi
10017559:	mov    DWORD PTR [ebp-0x14],esi
1001755c:	push   DWORD PTR [ebp+0x18]
1001755f:	push   edi
10017560:	push   DWORD PTR [ebp+0x10]
10017563:	push   DWORD PTR [ebp+0xc]
10017566:	push   DWORD PTR [ebp+0x8]
10017569:	call   DWORD PTR ds:0x10080cf0
1001756f:	xor    ebx,ebx
10017571:	mov    DWORD PTR [ebp+0x1c],eax
10017574:	mov    eax,ds:0x10080c7c
10017579:	inc    ebx
1001757a:	cmp    eax,ebx
1001757c:	je     0x10017583
1001757e:	cmp    eax,0x4
10017581:	jne    0x10017599
10017583:	push   esi
10017584:	push   ebx
10017585:	push   0x10080e84
1001758a:	call   DWORD PTR ds:0x100660e0
10017590:	cmp    eax,esi
10017592:	jne    0x10017599
10017594:	call   0x100124da
10017599:	mov    DWORD PTR [ebp-0x4],esi
1001759c:	call   0x10018799
100175a1:	test   al,al
100175a3:	je     0x100175dc
100175a5:	push   esi
100175a6:	push   0x10080da0
100175ab:	call   DWORD PTR ds:0x100660e4
100175b1:	test   eax,eax
100175b3:	jne    0x100175d6
100175b5:	push   ebx
100175b6:	lea    eax,[ebp+0x18]
100175b9:	push   eax
100175ba:	call   0x10034bf0
100175bf:	push   ebx
100175c0:	mov    BYTE PTR [ebp-0x4],bl
100175c3:	push   eax
100175c4:	lea    ecx,[ebp-0x1c]
100175c7:	mov    DWORD PTR [ebp-0x14],ebx
100175ca:	call   0x10035c50
100175cf:	mov    ecx,DWORD PTR [eax]
100175d1:	or     ecx,DWORD PTR [eax+0x4]
100175d4:	jne    0x100175dc
100175d6:	mov    BYTE PTR [ebp+0x23],0x0
100175da:	jmp    0x100175df
100175dc:	mov    BYTE PTR [ebp+0x23],bl
100175df:	mov    DWORD PTR [ebp-0x4],esi
100175e2:	test   BYTE PTR [ebp-0x14],bl
100175e5:	je     0x100175f0
100175e7:	push   DWORD PTR [ebp+0x18]
100175ea:	call   DWORD PTR ds:0x10066070
100175f0:	cmp    BYTE PTR [ebp+0x23],0x0
100175f4:	jne    0x1001762d
100175f6:	mov    esi,DWORD PTR [ebp+0x1c]
100175f9:	or     DWORD PTR [ebp-0x4],0xffffffff
100175fd:	cmp    esi,0xffffffff
10017600:	je     0x10017615
10017602:	cmp    DWORD PTR [ebp+0xc],0x2
10017606:	je     0x10017615
10017608:	cmp    DWORD PTR [edi+0x58],0x2
1001760c:	je     0x10017615
1001760e:	push   esi
1001760f:	call   0x1001601b
10017614:	pop    ecx
10017615:	mov    eax,esi
10017617:	jmp    0x10017630
10017619:	mov    eax,0x1001762d
1001761e:	ret    
1001761f:	push   0x4
10017621:	call   0x10037b70
10017626:	pop    ecx
10017627:	mov    eax,0x1001762d
1001762c:	ret    
1001762d:	mov    eax,DWORD PTR [ebp+0x1c]
10017630:	call   0x10059d4d
10017635:	ret    0x1c
10017638:	push   ebp
10017639:	mov    ebp,esp
1001763b:	pop    ebp
1001763c:	jmp    DWORD PTR ds:0x10080ce8
10017642:	push   ebp
10017643:	mov    ebp,esp
10017645:	and    esp,0xfffffff8
10017648:	push   esi
10017649:	push   edi
1001764a:	push   0x3b33f296
1001764f:	push   0x46e337c0
10017654:	push   0x1cbc15a6
10017659:	push   0x1006f894
1001765e:	call   0x100042d1
10017663:	pop    ecx
10017664:	pop    ecx
10017665:	push   eax
10017666:	call   0x100042d1
1001766b:	pop    ecx
1001766c:	pop    ecx
1001766d:	push   eax
1001766e:	call   0x100042d1
10017673:	push   eax
10017674:	push   0xc
10017676:	push   0x1006f8d0
1001767b:	call   0x100042e3
10017680:	mov    esi,DWORD PTR ds:0x100663e0
10017686:	add    esp,0x14
10017689:	push   eax
1001768a:	call   esi
1001768c:	mov    edi,DWORD PTR ds:0x100663a8
10017692:	push   eax
10017693:	call   edi
10017695:	cmp    ebx,eax
10017697:	jb     0x100176c6
10017699:	push   0x45e6a5a4
1001769e:	push   0x1006f8e0
100176a3:	call   0x100042d1
100176a8:	push   eax
100176a9:	push   0xc
100176ab:	push   0x1006f904
100176b0:	call   0x100042e3
100176b5:	add    esp,0x14
100176b8:	push   eax
100176b9:	call   esi
100176bb:	push   eax
100176bc:	call   edi
100176be:	cmp    ebx,eax
100176c0:	jbe    0x10017958
100176c6:	push   0x1006f914
100176cb:	push   0xc
100176cd:	push   0x1006f944
100176d2:	call   0x100042e3
100176d7:	add    esp,0xc
100176da:	push   eax
100176db:	call   esi
100176dd:	push   eax
100176de:	call   edi
100176e0:	cmp    ebx,eax
100176e2:	jb     0x10017706
100176e4:	push   0x1006f954
100176e9:	push   0xc
100176eb:	push   0x1006f978
100176f0:	call   0x100042e3
100176f5:	add    esp,0xc
100176f8:	push   eax
100176f9:	call   esi
100176fb:	push   eax
100176fc:	call   edi
100176fe:	cmp    ebx,eax
10017700:	jbe    0x10017958
10017706:	push   0x41cec8da
1001770b:	push   0x1006f988
10017710:	call   0x100042d1
10017715:	push   eax
10017716:	push   0xd
10017718:	push   0x1006f9b8
1001771d:	call   0x100042e3
10017722:	add    esp,0x14
10017725:	push   eax
10017726:	call   esi
10017728:	push   eax
10017729:	call   edi
1001772b:	cmp    ebx,eax
1001772d:	jb     0x10017751
1001772f:	push   0x1006f9c8
10017734:	push   0xd
10017736:	push   0x1006f9ec
1001773b:	call   0x100042e3
10017740:	add    esp,0xc
10017743:	push   eax
10017744:	call   esi
10017746:	push   eax
10017747:	call   edi
10017749:	cmp    ebx,eax
1001774b:	jbe    0x10017958
10017751:	push   0x1006f9fc
10017756:	push   0xc
10017758:	push   0x1006fa2c
1001775d:	call   0x100042e3
10017762:	add    esp,0xc
10017765:	push   eax
10017766:	call   esi
10017768:	push   eax
10017769:	call   edi
1001776b:	cmp    ebx,eax
1001776d:	jb     0x10017791
1001776f:	push   0x1006fa3c
10017774:	push   0xc
10017776:	push   0x1006fa70
1001777b:	call   0x100042e3
10017780:	add    esp,0xc
10017783:	push   eax
10017784:	call   esi
10017786:	push   eax
10017787:	call   edi
10017789:	cmp    ebx,eax
1001778b:	jbe    0x10017958
10017791:	push   0x53ca3448
10017796:	push   0x1006fa80
1001779b:	call   0x100042d1
100177a0:	push   eax
100177a1:	push   0xe
100177a3:	push   0x1006fab4
100177a8:	call   0x100042e3
100177ad:	add    esp,0x14
100177b0:	push   eax
100177b1:	call   esi
100177b3:	push   eax
100177b4:	call   edi
100177b6:	cmp    ebx,eax
100177b8:	jb     0x100177f4
100177ba:	push   0x369508c6
100177bf:	push   0x3d5d3ee4
100177c4:	push   0x1006fac4
100177c9:	call   0x100042d1
100177ce:	pop    ecx
100177cf:	pop    ecx
100177d0:	push   eax
100177d1:	call   0x100042d1
100177d6:	push   eax
100177d7:	push   0xe
100177d9:	push   0x1006fae8
100177de:	call   0x100042e3
100177e3:	add    esp,0x14
100177e6:	push   eax
100177e7:	call   esi
100177e9:	push   eax
100177ea:	call   edi
100177ec:	cmp    ebx,eax
100177ee:	jbe    0x10017958
100177f4:	push   0x66a2c2ec
100177f9:	push   0x3d017826
100177fe:	push   0x1006faf8
10017803:	call   0x100042d1
10017808:	pop    ecx
10017809:	pop    ecx
1001780a:	push   eax
1001780b:	call   0x100042d1
10017810:	push   eax
10017811:	push   0xc
10017813:	push   0x1006fb24
10017818:	call   0x100042e3
1001781d:	add    esp,0x14
10017820:	push   eax
10017821:	call   esi
10017823:	push   eax
10017824:	call   edi
10017826:	cmp    ebx,eax
10017828:	jb     0x1001787e
1001782a:	push   0x36c3021c
1001782f:	push   0x49efca72
10017834:	push   0x1354bb7c
10017839:	push   0x20a5032e
1001783e:	push   0x1006fb34
10017843:	call   0x100042d1
10017848:	pop    ecx
10017849:	pop    ecx
1001784a:	push   eax
1001784b:	call   0x100042d1
10017850:	pop    ecx
10017851:	pop    ecx
10017852:	push   eax
10017853:	call   0x100042d1
10017858:	pop    ecx
10017859:	pop    ecx
1001785a:	push   eax
1001785b:	call   0x100042d1
10017860:	push   eax
10017861:	push   0xc
10017863:	push   0x1006fb68
10017868:	call   0x100042e3
1001786d:	add    esp,0x14
10017870:	push   eax
10017871:	call   esi
10017873:	push   eax
10017874:	call   edi
10017876:	cmp    ebx,eax
10017878:	jbe    0x10017958
1001787e:	push   0x3a3e7666
10017883:	push   0x16ee1cc4
10017888:	push   0x1006fb78
1001788d:	call   0x100042d1
10017892:	pop    ecx
10017893:	pop    ecx
10017894:	push   eax
10017895:	call   0x100042d1
1001789a:	push   eax
1001789b:	push   0xc
1001789d:	push   0x1006fba4
100178a2:	call   0x100042e3
100178a7:	add    esp,0x14
100178aa:	push   eax
100178ab:	call   esi
100178ad:	push   eax
100178ae:	call   edi
100178b0:	cmp    ebx,eax
100178b2:	jb     0x100178f7
100178b4:	push   0x1f089e16
100178b9:	push   0x251f44a4
100178be:	push   0x36091cbe
100178c3:	push   0x1006fbb4
100178c8:	call   0x100042d1
100178cd:	pop    ecx
100178ce:	pop    ecx
100178cf:	push   eax
100178d0:	call   0x100042d1
100178d5:	pop    ecx
100178d6:	pop    ecx
100178d7:	push   eax
100178d8:	call   0x100042d1
100178dd:	push   eax
100178de:	push   0xc
100178e0:	push   0x1006fbe4
100178e5:	call   0x100042e3
100178ea:	add    esp,0x14
100178ed:	push   eax
100178ee:	call   esi
100178f0:	push   eax
100178f1:	call   edi
100178f3:	cmp    ebx,eax
100178f5:	jbe    0x10017958
100178f7:	push   0x4e6483e6
100178fc:	push   0x5be799f6
10017901:	push   0x679492d4
10017906:	push   0x1006fbf4
1001790b:	call   0x100042d1
10017910:	pop    ecx
10017911:	pop    ecx
10017912:	push   eax
10017913:	call   0x100042d1
10017918:	pop    ecx
10017919:	pop    ecx
1001791a:	push   eax
1001791b:	call   0x100042d1
10017920:	push   eax
10017921:	push   0xc
10017923:	push   0x1006fc30
10017928:	call   0x100042e3
1001792d:	add    esp,0x14
10017930:	push   eax
10017931:	call   esi
10017933:	push   eax
10017934:	call   edi
10017936:	cmp    ebx,eax
10017938:	jb     0x1001795d
1001793a:	push   0x1006fc40
1001793f:	push   0xc
10017941:	push   0x1006fc7c
10017946:	call   0x100042e3
1001794b:	add    esp,0xc
1001794e:	push   eax
1001794f:	call   esi
10017951:	push   eax
10017952:	call   edi
10017954:	cmp    ebx,eax
10017956:	ja     0x1001795d
10017958:	xor    eax,eax
1001795a:	inc    eax
1001795b:	jmp    0x1001795f
1001795d:	xor    eax,eax
1001795f:	pop    edi
10017960:	pop    esi
10017961:	mov    esp,ebp
10017963:	pop    ebp
10017964:	ret    
10017965:	mov    eax,DWORD PTR [esp+0x4]
10017969:	mov    ecx,DWORD PTR [eax]
1001796b:	push   0x1006d1c8
10017970:	push   0x1006fc8c
10017975:	push   eax
10017976:	call   DWORD PTR [ecx+0xc]
10017979:	ret    0x4
1001797c:	mov    eax,DWORD PTR [esi+0x8]
1001797f:	push   0x4
10017981:	inc    eax
10017982:	push   eax
10017983:	push   DWORD PTR [esi]
10017985:	call   0x10046663
1001798a:	add    esp,0xc
1001798d:	test   eax,eax
1001798f:	jne    0x10017995
10017991:	xor    eax,eax
10017993:	jmp    0x100179db
10017995:	mov    DWORD PTR [esi],eax
10017997:	mov    eax,DWORD PTR [esi+0x8]
1001799a:	push   0x4
1001799c:	inc    eax
1001799d:	push   eax
1001799e:	push   DWORD PTR [esi+0x4]
100179a1:	call   0x10046663
100179a6:	add    esp,0xc
100179a9:	test   eax,eax
100179ab:	je     0x10017991
100179ad:	mov    DWORD PTR [esi+0x4],eax
100179b0:	mov    eax,DWORD PTR [esi+0x8]
100179b3:	mov    ecx,eax
100179b5:	mov    eax,DWORD PTR [esi]
100179b7:	shl    ecx,0x2
100179ba:	add    eax,ecx
100179bc:	je     0x100179c6
100179be:	mov    edx,DWORD PTR [esp+0x4]
100179c2:	mov    edx,DWORD PTR [edx]
100179c4:	mov    DWORD PTR [eax],edx
100179c6:	mov    eax,DWORD PTR [esi+0x4]
100179c9:	add    eax,ecx
100179cb:	je     0x100179d5
100179cd:	mov    ecx,DWORD PTR [esp+0x8]
100179d1:	mov    ecx,DWORD PTR [ecx]
100179d3:	mov    DWORD PTR [eax],ecx
100179d5:	inc    DWORD PTR [esi+0x8]
100179d8:	xor    eax,eax
100179da:	inc    eax
100179db:	ret    0x8
100179de:	mov    eax,DWORD PTR [esi]
100179e0:	test   eax,eax
100179e2:	je     0x100179ee
100179e4:	push   eax
100179e5:	call   0x10043748
100179ea:	and    DWORD PTR [esi],0x0
100179ed:	pop    ecx
100179ee:	mov    eax,DWORD PTR [esi+0x4]
100179f1:	test   eax,eax
100179f3:	je     0x10017a00
100179f5:	push   eax
100179f6:	call   0x10043748
100179fb:	and    DWORD PTR [esi+0x4],0x0
100179ff:	pop    ecx
10017a00:	and    DWORD PTR [esi+0x8],0x0
10017a04:	ret    
10017a05:	test   eax,eax
10017a07:	jl     0x10017a15
10017a09:	cmp    eax,DWORD PTR [ecx+0x8]
10017a0c:	jge    0x10017a15
10017a0e:	mov    ecx,DWORD PTR [ecx+0x4]
10017a11:	lea    eax,[ecx+eax*4]
10017a14:	ret    
10017a15:	push   0x0
10017a17:	push   0x0
10017a19:	push   0x1
10017a1b:	push   0xc000008c
10017a20:	call   DWORD PTR ds:0x10066128
10017a26:	int3   
10017a27:	push   DWORD PTR [esi]
10017a29:	call   0x10043600
10017a2e:	and    DWORD PTR [esi],0x0
10017a31:	pop    ecx
10017a32:	ret    
10017a33:	lea    ecx,[eax+0x4]
10017a36:	cmp    DWORD PTR [eax],ecx
10017a38:	je     0x10017a3f
10017a3a:	jmp    0x10017bc8
10017a3f:	ret    
10017a40:	push   ebp
10017a41:	mov    ebp,esp
10017a43:	and    esp,0xfffffff8
10017a46:	push   ecx
10017a47:	push   ecx
10017a48:	mov    eax,ds:0x10080e7c
10017a4d:	mov    edx,DWORD PTR [eax]
10017a4f:	push   esi
10017a50:	push   edi
10017a51:	mov    ecx,0x10080e78
10017a56:	push   eax
10017a57:	mov    esi,ecx
10017a59:	push   esi
10017a5a:	push   edx
10017a5b:	push   ecx
10017a5c:	lea    edi,[esp+0x18]
10017a60:	call   0x10017bd1
10017a65:	push   DWORD PTR ds:0x10080e7c
10017a6b:	call   0x100430d2
10017a70:	and    DWORD PTR ds:0x10080e7c,0x0
10017a77:	and    DWORD PTR ds:0x10080e80,0x0
10017a7e:	pop    ecx
10017a7f:	pop    edi
10017a80:	pop    esi
10017a81:	mov    esp,ebp
10017a83:	pop    ebp
10017a84:	ret    
10017a85:	push   ebp
10017a86:	mov    ebp,esp
10017a88:	sub    esp,0x14
10017a8b:	mov    ecx,DWORD PTR ds:0x10080e7c
10017a91:	mov    eax,DWORD PTR [ecx+0x4]
10017a94:	cmp    BYTE PTR [eax+0x15],0x0
10017a98:	push   ebx
10017a99:	push   esi
10017a9a:	mov    ebx,ecx
10017a9c:	mov    BYTE PTR [ebp-0x8],0x1
10017aa0:	jne    0x10017ac3
10017aa2:	mov    edx,DWORD PTR [ebp+0x8]
10017aa5:	mov    esi,DWORD PTR [edx]
10017aa7:	cmp    esi,DWORD PTR [eax+0xc]
10017aaa:	mov    ebx,eax
10017aac:	setb   BYTE PTR [ebp-0x8]
10017ab0:	cmp    BYTE PTR [ebp-0x8],0x0
10017ab4:	je     0x10017aba
10017ab6:	mov    eax,DWORD PTR [eax]
10017ab8:	jmp    0x10017abd
10017aba:	mov    eax,DWORD PTR [eax+0x8]
10017abd:	cmp    BYTE PTR [eax+0x15],0x0
10017ac1:	je     0x10017aa7
10017ac3:	cmp    BYTE PTR [ebp-0x8],0x0
10017ac7:	mov    eax,ebx
10017ac9:	mov    DWORD PTR [ebp-0xc],eax
10017acc:	mov    DWORD PTR [ebp-0x10],0x10080e78
10017ad3:	je     0x10017afd
10017ad5:	cmp    ebx,DWORD PTR [ecx]
10017ad7:	jne    0x10017af2
10017ad9:	push   DWORD PTR [ebp+0x8]
10017adc:	push   0x1
10017ade:	lea    eax,[ebp-0x10]
10017ae1:	push   eax
10017ae2:	call   0x10017cca
10017ae7:	mov    ecx,DWORD PTR [eax]
10017ae9:	mov    eax,DWORD PTR [eax+0x4]
10017aec:	mov    BYTE PTR [edi+0x8],0x1
10017af0:	jmp    0x10017b14
10017af2:	lea    esi,[ebp-0x10]
10017af5:	call   0x10017e27
10017afa:	mov    eax,DWORD PTR [ebp-0xc]
10017afd:	mov    edx,DWORD PTR [eax+0xc]
10017b00:	mov    ecx,DWORD PTR [ebp+0x8]
10017b03:	cmp    edx,DWORD PTR [ecx]
10017b05:	jae    0x10017b0d
10017b07:	push   ecx
10017b08:	push   DWORD PTR [ebp-0x8]
10017b0b:	jmp    0x10017ade
10017b0d:	mov    ecx,DWORD PTR [ebp-0x10]
10017b10:	mov    BYTE PTR [edi+0x8],0x0
10017b14:	pop    esi
10017b15:	mov    DWORD PTR [edi+0x4],eax
10017b18:	mov    DWORD PTR [edi],ecx
10017b1a:	mov    eax,edi
10017b1c:	pop    ebx
10017b1d:	leave  
10017b1e:	ret    0x4
10017b21:	push   ebp
10017b22:	mov    ebp,esp
10017b24:	and    esp,0xfffffff8
10017b27:	sub    esp,0x2c
10017b2a:	mov    ecx,DWORD PTR ds:0x10080e7c
10017b30:	mov    eax,DWORD PTR [ecx+0x4]
10017b33:	cmp    BYTE PTR [eax+0x15],0x0
10017b37:	push   ebx
10017b38:	push   esi
10017b39:	push   edi
10017b3a:	mov    DWORD PTR [esp+0x14],ecx
10017b3e:	jne    0x10017b58
10017b40:	mov    ecx,DWORD PTR [edx]
10017b42:	cmp    ecx,DWORD PTR [eax+0xc]
10017b45:	jae    0x10017b4f
10017b47:	mov    DWORD PTR [esp+0x14],eax
10017b4b:	mov    eax,DWORD PTR [eax]
10017b4d:	jmp    0x10017b52
10017b4f:	mov    eax,DWORD PTR [eax+0x8]
10017b52:	cmp    BYTE PTR [eax+0x15],0x0
10017b56:	je     0x10017b42
10017b58:	push   edx
10017b59:	lea    eax,[esp+0x24]
10017b5d:	mov    edi,0x10080e78
10017b62:	call   0x10017c93
10017b67:	mov    ecx,DWORD PTR [eax+0x4]
10017b6a:	mov    ebx,DWORD PTR [eax]
10017b6c:	mov    eax,DWORD PTR [eax+0x4]
10017b6f:	and    DWORD PTR [esp+0x10],0x0
10017b74:	mov    DWORD PTR [esp+0x2c],ecx
10017b78:	mov    ecx,ebx
10017b7a:	mov    DWORD PTR [esp+0x18],ecx
10017b7e:	mov    DWORD PTR [esp+0x1c],eax
10017b82:	cmp    DWORD PTR [esp+0x18],0x0
10017b87:	je     0x10017b8f
10017b89:	cmp    DWORD PTR [esp+0x18],edi
10017b8d:	je     0x10017b94
10017b8f:	call   0x100435f0
10017b94:	mov    eax,DWORD PTR [esp+0x14]
10017b98:	cmp    DWORD PTR [esp+0x1c],eax
10017b9c:	je     0x10017bad
10017b9e:	inc    DWORD PTR [esp+0x10]
10017ba2:	lea    esi,[esp+0x18]
10017ba6:	call   0x1001822a
10017bab:	jmp    0x10017b82
10017bad:	push   eax
10017bae:	push   edi
10017baf:	push   DWORD PTR [esp+0x34]
10017bb3:	lea    edi,[esp+0x2c]
10017bb7:	push   ebx
10017bb8:	call   0x10017bd1
10017bbd:	mov    eax,DWORD PTR [esp+0x10]
10017bc1:	pop    edi
10017bc2:	pop    esi
10017bc3:	pop    ebx
10017bc4:	mov    esp,ebp
10017bc6:	pop    ebp
10017bc7:	ret    
10017bc8:	push   DWORD PTR [eax]
10017bca:	call   0x10043748
10017bcf:	pop    ecx
10017bd0:	ret    
10017bd1:	push   ebp
10017bd2:	mov    ebp,esp
10017bd4:	mov    eax,ds:0x10080e7c
10017bd9:	sub    esp,0x10
10017bdc:	cmp    DWORD PTR [ebp+0x8],0x0
10017be0:	push   ebx
10017be1:	mov    ebx,DWORD PTR [eax]
10017be3:	push   esi
10017be4:	mov    esi,0x10080e78
10017be9:	je     0x10017bf0
10017beb:	cmp    DWORD PTR [ebp+0x8],esi
10017bee:	je     0x10017bf5
10017bf0:	call   0x100435f0
10017bf5:	cmp    DWORD PTR [ebp+0xc],ebx
10017bf8:	jne    0x10017c4d
10017bfa:	cmp    DWORD PTR [ebp+0x10],0x0
10017bfe:	mov    ebx,DWORD PTR ds:0x10080e7c
10017c04:	je     0x10017c0b
10017c06:	cmp    DWORD PTR [ebp+0x10],esi
10017c09:	je     0x10017c10
10017c0b:	call   0x100435f0
10017c10:	cmp    DWORD PTR [ebp+0x14],ebx
10017c13:	jne    0x10017c4d
10017c15:	mov    eax,ds:0x10080e7c
10017c1a:	push   DWORD PTR [eax+0x4]
10017c1d:	mov    ecx,esi
10017c1f:	call   0x100181ce
10017c24:	mov    eax,ds:0x10080e7c
10017c29:	mov    DWORD PTR [eax+0x4],eax
10017c2c:	mov    eax,ds:0x10080e7c
10017c31:	and    DWORD PTR ds:0x10080e80,0x0
10017c38:	mov    DWORD PTR [eax],eax
10017c3a:	mov    eax,ds:0x10080e7c
10017c3f:	mov    DWORD PTR [eax+0x8],eax
10017c42:	mov    eax,ds:0x10080e7c
10017c47:	mov    eax,DWORD PTR [eax]
10017c49:	mov    DWORD PTR [edi],esi
10017c4b:	jmp    0x10017c88
10017c4d:	mov    eax,DWORD PTR [ebp+0x8]
10017c50:	test   eax,eax
10017c52:	je     0x10017c59
10017c54:	cmp    eax,DWORD PTR [ebp+0x10]
10017c57:	je     0x10017c5e
10017c59:	call   0x100435f0
10017c5e:	mov    eax,DWORD PTR [ebp+0xc]
10017c61:	cmp    eax,DWORD PTR [ebp+0x14]
10017c64:	je     0x10017c83
10017c66:	mov    ebx,DWORD PTR [ebp+0x8]
10017c69:	lea    esi,[ebp+0x8]
10017c6c:	mov    DWORD PTR [ebp-0x4],eax
10017c6f:	call   0x1001822a
10017c74:	push   DWORD PTR [ebp-0x4]
10017c77:	lea    eax,[ebp-0x10]
10017c7a:	push   ebx
10017c7b:	push   eax
10017c7c:	call   0x10017ea9
10017c81:	jmp    0x10017c4d
10017c83:	mov    ecx,DWORD PTR [ebp+0x8]
10017c86:	mov    DWORD PTR [edi],ecx
10017c88:	pop    esi
10017c89:	mov    DWORD PTR [edi+0x4],eax
10017c8c:	mov    eax,edi
10017c8e:	pop    ebx
10017c8f:	leave  
10017c90:	ret    0x10
10017c93:	mov    edx,DWORD PTR ds:0x10080e7c
10017c99:	mov    ecx,DWORD PTR [edx+0x4]
10017c9c:	cmp    BYTE PTR [ecx+0x15],0x0
10017ca0:	jne    0x10017cbe
10017ca2:	push   esi
10017ca3:	mov    esi,DWORD PTR [esp+0x8]
10017ca7:	mov    esi,DWORD PTR [esi]
10017ca9:	cmp    DWORD PTR [ecx+0xc],esi
10017cac:	jae    0x10017cb3
10017cae:	mov    ecx,DWORD PTR [ecx+0x8]
10017cb1:	jmp    0x10017cb7
10017cb3:	mov    edx,ecx
10017cb5:	mov    ecx,DWORD PTR [ecx]
10017cb7:	cmp    BYTE PTR [ecx+0x15],0x0
10017cbb:	je     0x10017ca9
10017cbd:	pop    esi
10017cbe:	mov    DWORD PTR [eax+0x4],edx
10017cc1:	mov    DWORD PTR [eax],0x10080e78
10017cc7:	ret    0x4
10017cca:	push   0x48
10017ccc:	mov    eax,0x100603a7
10017cd1:	call   0x10059c75
10017cd6:	cmp    DWORD PTR ds:0x10080e80,0x1ffffffe
10017ce0:	jb     0x10017d14
10017ce2:	push   0x1006d04c
10017ce7:	lea    ecx,[ebp-0x2c]
10017cea:	call   0x100011d1
10017cef:	and    DWORD PTR [ebp-0x4],0x0
10017cf3:	lea    eax,[ebp-0x2c]
10017cf6:	push   eax
10017cf7:	lea    ecx,[ebp-0x54]
10017cfa:	call   0x1000106e
10017cff:	push   0x10074ec0
10017d04:	lea    eax,[ebp-0x54]
10017d07:	push   eax
10017d08:	mov    DWORD PTR [ebp-0x54],0x1006b96c
10017d0f:	call   0x10047c54
10017d14:	mov    eax,ds:0x10080e7c
10017d19:	mov    esi,DWORD PTR [ebp+0x10]
10017d1c:	push   eax
10017d1d:	push   ebx
10017d1e:	push   eax
10017d1f:	call   0x10018198
10017d24:	inc    DWORD PTR ds:0x10080e80
10017d2a:	mov    edi,eax
10017d2c:	mov    eax,ds:0x10080e7c
10017d31:	cmp    ebx,eax
10017d33:	jne    0x10017d46
10017d35:	mov    DWORD PTR [eax+0x4],edi
10017d38:	mov    eax,ds:0x10080e7c
10017d3d:	mov    DWORD PTR [eax],edi
10017d3f:	mov    eax,ds:0x10080e7c
10017d44:	jmp    0x10017d68
10017d46:	cmp    BYTE PTR [ebp+0xc],0x0
10017d4a:	je     0x10017d5b
10017d4c:	mov    DWORD PTR [ebx],edi
10017d4e:	mov    eax,ds:0x10080e7c
10017d53:	cmp    ebx,DWORD PTR [eax]
10017d55:	jne    0x10017d6b
10017d57:	mov    DWORD PTR [eax],edi
10017d59:	jmp    0x10017d6b
10017d5b:	mov    DWORD PTR [ebx+0x8],edi
10017d5e:	mov    eax,ds:0x10080e7c
10017d63:	cmp    ebx,DWORD PTR [eax+0x8]
10017d66:	jne    0x10017d6b
10017d68:	mov    DWORD PTR [eax+0x8],edi
10017d6b:	mov    esi,edi
10017d6d:	lea    eax,[edi+0x4]
10017d70:	jmp    0x10017dfb
10017d75:	mov    ecx,DWORD PTR [eax]
10017d77:	mov    edx,DWORD PTR [ecx+0x4]
10017d7a:	cmp    ecx,DWORD PTR [edx]
10017d7c:	jne    0x10017db1
10017d7e:	mov    edx,DWORD PTR [edx+0x8]
10017d81:	cmp    BYTE PTR [edx+0x14],0x0
10017d85:	je     0x10017db9
10017d87:	cmp    esi,DWORD PTR [ecx+0x8]
10017d8a:	jne    0x10017d93
10017d8c:	mov    esi,ecx
10017d8e:	call   0x1001811c
10017d93:	mov    eax,DWORD PTR [esi+0x4]
10017d96:	mov    BYTE PTR [eax+0x14],0x1
10017d9a:	mov    eax,DWORD PTR [esi+0x4]
10017d9d:	mov    eax,DWORD PTR [eax+0x4]
10017da0:	mov    BYTE PTR [eax+0x14],0x0
10017da4:	mov    eax,DWORD PTR [esi+0x4]
10017da7:	mov    ecx,DWORD PTR [eax+0x4]
10017daa:	call   0x10018159
10017daf:	jmp    0x10017df8
10017db1:	mov    edx,DWORD PTR [edx]
10017db3:	cmp    BYTE PTR [edx+0x14],0x0
10017db7:	jne    0x10017dd1
10017db9:	mov    BYTE PTR [ecx+0x14],0x1
10017dbd:	mov    BYTE PTR [edx+0x14],0x1
10017dc1:	mov    ecx,DWORD PTR [eax]
10017dc3:	mov    ecx,DWORD PTR [ecx+0x4]
10017dc6:	mov    BYTE PTR [ecx+0x14],0x0
10017dca:	mov    eax,DWORD PTR [eax]
10017dcc:	mov    esi,DWORD PTR [eax+0x4]
10017dcf:	jmp    0x10017df8
10017dd1:	cmp    esi,DWORD PTR [ecx]
10017dd3:	jne    0x10017ddc
10017dd5:	mov    esi,ecx
10017dd7:	call   0x10018159
10017ddc:	mov    eax,DWORD PTR [esi+0x4]
10017ddf:	mov    BYTE PTR [eax+0x14],0x1
10017de3:	mov    eax,DWORD PTR [esi+0x4]
10017de6:	mov    eax,DWORD PTR [eax+0x4]
10017de9:	mov    BYTE PTR [eax+0x14],0x0
10017ded:	mov    eax,DWORD PTR [esi+0x4]
10017df0:	mov    ecx,DWORD PTR [eax+0x4]
10017df3:	call   0x1001811c
10017df8:	lea    eax,[esi+0x4]
10017dfb:	mov    ecx,DWORD PTR [eax]
10017dfd:	cmp    BYTE PTR [ecx+0x14],0x0
10017e01:	je     0x10017d75
10017e07:	mov    eax,ds:0x10080e7c
10017e0c:	mov    eax,DWORD PTR [eax+0x4]
10017e0f:	mov    BYTE PTR [eax+0x14],0x1
10017e13:	mov    eax,DWORD PTR [ebp+0x8]
10017e16:	mov    DWORD PTR [eax+0x4],edi
10017e19:	mov    DWORD PTR [eax],0x10080e78
10017e1f:	call   0x10059d4d
10017e24:	ret    0xc
10017e27:	push   ebx
10017e28:	xor    ebx,ebx
10017e2a:	cmp    DWORD PTR [esi],ebx
10017e2c:	jne    0x10017e33
10017e2e:	call   0x100435f0
10017e33:	mov    eax,DWORD PTR [esi+0x4]
10017e36:	cmp    BYTE PTR [eax+0x15],bl
10017e39:	je     0x10017e48
10017e3b:	mov    eax,DWORD PTR [eax+0x8]
10017e3e:	mov    DWORD PTR [esi+0x4],eax
10017e41:	cmp    BYTE PTR [eax+0x15],bl
10017e44:	je     0x10017e84
10017e46:	jmp    0x10017e7a
10017e48:	mov    ecx,DWORD PTR [eax]
10017e4a:	cmp    BYTE PTR [ecx+0x15],bl
10017e4d:	jne    0x10017e6a
10017e4f:	jmp    0x10017e53
10017e51:	mov    ecx,eax
10017e53:	mov    eax,DWORD PTR [ecx+0x8]
10017e56:	cmp    BYTE PTR [eax+0x15],bl
10017e59:	je     0x10017e51
10017e5b:	mov    DWORD PTR [esi+0x4],ecx
10017e5e:	jmp    0x10017e84
10017e60:	mov    ecx,DWORD PTR [esi+0x4]
10017e63:	cmp    ecx,DWORD PTR [eax]
10017e65:	jne    0x10017e72
10017e67:	mov    DWORD PTR [esi+0x4],eax
10017e6a:	mov    eax,DWORD PTR [eax+0x4]
10017e6d:	cmp    BYTE PTR [eax+0x15],bl
10017e70:	je     0x10017e60
10017e72:	mov    ecx,DWORD PTR [esi+0x4]
10017e75:	cmp    BYTE PTR [ecx+0x15],bl
10017e78:	je     0x10017e81
10017e7a:	call   0x100435f0
10017e7f:	jmp    0x10017e84
10017e81:	mov    DWORD PTR [esi+0x4],eax
10017e84:	mov    eax,esi
10017e86:	pop    ebx
10017e87:	ret    
10017e88:	push   DWORD PTR [esp+0x8]
10017e8c:	call   0x10045222
10017e91:	test   eax,eax
10017e93:	pop    ecx
10017e94:	jne    0x10017ea0
10017e96:	push   0x8007000e
10017e9b:	call   0x10001f24
10017ea0:	mov    ecx,DWORD PTR [esp+0x4]
10017ea4:	mov    DWORD PTR [ecx],eax
10017ea6:	ret    0x8
10017ea9:	push   0x48
10017eab:	mov    eax,0x100603a7
10017eb0:	call   0x10059c75
10017eb5:	mov    ebx,DWORD PTR [ebp+0x10]
10017eb8:	cmp    BYTE PTR [ebx+0x15],0x0
10017ebc:	je     0x10017ef0
10017ebe:	push   0x1006ccec
10017ec3:	lea    ecx,[ebp-0x2c]
10017ec6:	call   0x100011d1
10017ecb:	and    DWORD PTR [ebp-0x4],0x0
10017ecf:	lea    eax,[ebp-0x2c]
10017ed2:	push   eax
10017ed3:	lea    ecx,[ebp-0x54]
10017ed6:	call   0x1000106e
10017edb:	push   0x10074de0
10017ee0:	lea    eax,[ebp-0x54]
10017ee3:	push   eax
10017ee4:	mov    DWORD PTR [ebp-0x54],0x1006b978
10017eeb:	call   0x10047c54
10017ef0:	lea    esi,[ebp+0xc]
10017ef3:	call   0x1001822a
10017ef8:	mov    ecx,DWORD PTR [ebx]
10017efa:	cmp    BYTE PTR [ecx+0x15],0x0
10017efe:	je     0x10017f05
10017f00:	mov    edi,DWORD PTR [ebx+0x8]
10017f03:	jmp    0x10017f1c
10017f05:	mov    eax,DWORD PTR [ebx+0x8]
10017f08:	cmp    BYTE PTR [eax+0x15],0x0
10017f0c:	je     0x10017f12
10017f0e:	mov    edi,ecx
10017f10:	jmp    0x10017f1c
10017f12:	mov    eax,DWORD PTR [ebp+0x10]
10017f15:	cmp    eax,ebx
10017f17:	mov    edi,DWORD PTR [eax+0x8]
10017f1a:	jne    0x10017f94
10017f1c:	cmp    BYTE PTR [edi+0x15],0x0
10017f20:	mov    esi,DWORD PTR [ebx+0x4]
10017f23:	jne    0x10017f28
10017f25:	mov    DWORD PTR [edi+0x4],esi
10017f28:	mov    eax,ds:0x10080e7c
10017f2d:	cmp    DWORD PTR [eax+0x4],ebx
10017f30:	jne    0x10017f37
10017f32:	mov    DWORD PTR [eax+0x4],edi
10017f35:	jmp    0x10017f42
10017f37:	cmp    DWORD PTR [esi],ebx
10017f39:	jne    0x10017f3f
10017f3b:	mov    DWORD PTR [esi],edi
10017f3d:	jmp    0x10017f42
10017f3f:	mov    DWORD PTR [esi+0x8],edi
10017f42:	mov    edx,DWORD PTR ds:0x10080e7c
10017f48:	cmp    DWORD PTR [edx],ebx
10017f4a:	jne    0x10017f68
10017f4c:	cmp    BYTE PTR [edi+0x15],0x0
10017f50:	je     0x10017f56
10017f52:	mov    ecx,esi
10017f54:	jmp    0x10017f66
10017f56:	mov    eax,DWORD PTR [edi]
10017f58:	mov    ecx,edi
10017f5a:	jmp    0x10017f60
10017f5c:	mov    ecx,eax
10017f5e:	mov    eax,DWORD PTR [ecx]
10017f60:	cmp    BYTE PTR [eax+0x15],0x0
10017f64:	je     0x10017f5c
10017f66:	mov    DWORD PTR [edx],ecx
10017f68:	mov    edx,DWORD PTR ds:0x10080e7c
10017f6e:	cmp    DWORD PTR [edx+0x8],ebx
10017f71:	jne    0x10017fee
10017f73:	cmp    BYTE PTR [edi+0x15],0x0
10017f77:	je     0x10017f7d
10017f79:	mov    ecx,esi
10017f7b:	jmp    0x10017f8f
10017f7d:	mov    eax,DWORD PTR [edi+0x8]
10017f80:	mov    ecx,edi
10017f82:	jmp    0x10017f89
10017f84:	mov    ecx,eax
10017f86:	mov    eax,DWORD PTR [ecx+0x8]
10017f89:	cmp    BYTE PTR [eax+0x15],0x0
10017f8d:	je     0x10017f84
10017f8f:	mov    DWORD PTR [edx+0x8],ecx
10017f92:	jmp    0x10017fee
10017f94:	mov    DWORD PTR [ecx+0x4],eax
10017f97:	mov    ecx,DWORD PTR [ebx]
10017f99:	mov    DWORD PTR [eax],ecx
10017f9b:	cmp    eax,DWORD PTR [ebx+0x8]
10017f9e:	jne    0x10017fa4
10017fa0:	mov    esi,eax
10017fa2:	jmp    0x10017fbe
10017fa4:	cmp    BYTE PTR [edi+0x15],0x0
10017fa8:	mov    esi,DWORD PTR [eax+0x4]
10017fab:	jne    0x10017fb0
10017fad:	mov    DWORD PTR [edi+0x4],esi
10017fb0:	mov    DWORD PTR [esi],edi
10017fb2:	mov    ecx,DWORD PTR [ebx+0x8]
10017fb5:	mov    DWORD PTR [eax+0x8],ecx
10017fb8:	mov    ecx,DWORD PTR [ebx+0x8]
10017fbb:	mov    DWORD PTR [ecx+0x4],eax
10017fbe:	mov    ecx,DWORD PTR ds:0x10080e7c
10017fc4:	cmp    DWORD PTR [ecx+0x4],ebx
10017fc7:	jne    0x10017fce
10017fc9:	mov    DWORD PTR [ecx+0x4],eax
10017fcc:	jmp    0x10017fdc
10017fce:	mov    ecx,DWORD PTR [ebx+0x4]
10017fd1:	cmp    DWORD PTR [ecx],ebx
10017fd3:	jne    0x10017fd9
10017fd5:	mov    DWORD PTR [ecx],eax
10017fd7:	jmp    0x10017fdc
10017fd9:	mov    DWORD PTR [ecx+0x8],eax
10017fdc:	mov    ecx,DWORD PTR [ebx+0x4]
10017fdf:	mov    DWORD PTR [eax+0x4],ecx
10017fe2:	mov    dl,BYTE PTR [ebx+0x14]
10017fe5:	mov    cl,BYTE PTR [eax+0x14]
10017fe8:	mov    BYTE PTR [eax+0x14],dl
10017feb:	mov    BYTE PTR [ebx+0x14],cl
10017fee:	cmp    BYTE PTR [ebx+0x14],0x1
10017ff2:	jne    0x100180f0
10017ff8:	jmp    0x100180ab
10017ffd:	cmp    BYTE PTR [edi+0x14],0x1
10018001:	jne    0x100180ec
10018007:	mov    ecx,DWORD PTR [esi]
10018009:	cmp    edi,ecx
1001800b:	jne    0x10018074
1001800d:	mov    ecx,DWORD PTR [esi+0x8]
10018010:	cmp    BYTE PTR [ecx+0x14],0x0
10018014:	jne    0x10018028
10018016:	mov    BYTE PTR [ecx+0x14],0x1
1001801a:	mov    ecx,esi
1001801c:	mov    BYTE PTR [esi+0x14],0x0
10018020:	call   0x1001811c
10018025:	mov    ecx,DWORD PTR [esi+0x8]
10018028:	cmp    BYTE PTR [ecx+0x15],0x0
1001802c:	jne    0x100180a6
1001802e:	mov    eax,DWORD PTR [ecx]
10018030:	cmp    BYTE PTR [eax+0x14],0x1
10018034:	jne    0x1001803f
10018036:	mov    eax,DWORD PTR [ecx+0x8]
10018039:	cmp    BYTE PTR [eax+0x14],0x1
1001803d:	je     0x100180a2
1001803f:	mov    eax,DWORD PTR [ecx+0x8]
10018042:	cmp    BYTE PTR [eax+0x14],0x1
10018046:	jne    0x1001805a
10018048:	mov    eax,DWORD PTR [ecx]
1001804a:	mov    BYTE PTR [eax+0x14],0x1
1001804e:	mov    BYTE PTR [ecx+0x14],0x0
10018052:	call   0x10018159
10018057:	mov    ecx,DWORD PTR [esi+0x8]
1001805a:	mov    al,BYTE PTR [esi+0x14]
1001805d:	mov    BYTE PTR [ecx+0x14],al
10018060:	mov    BYTE PTR [esi+0x14],0x1
10018064:	mov    eax,DWORD PTR [ecx+0x8]
10018067:	mov    ecx,esi
10018069:	mov    BYTE PTR [eax+0x14],0x1
1001806d:	call   0x1001811c
10018072:	jmp    0x100180ec
10018074:	cmp    BYTE PTR [ecx+0x14],0x0
10018078:	jne    0x1001808b
1001807a:	mov    BYTE PTR [ecx+0x14],0x1
1001807e:	mov    ecx,esi
10018080:	mov    BYTE PTR [esi+0x14],0x0
10018084:	call   0x10018159
10018089:	mov    ecx,DWORD PTR [esi]
1001808b:	cmp    BYTE PTR [ecx+0x15],0x0
1001808f:	jne    0x100180a6
10018091:	mov    eax,DWORD PTR [ecx+0x8]
10018094:	cmp    BYTE PTR [eax+0x14],0x1
10018098:	jne    0x100180bb
1001809a:	mov    eax,DWORD PTR [ecx]
1001809c:	cmp    BYTE PTR [eax+0x14],0x1
100180a0:	jne    0x100180bb
100180a2:	mov    BYTE PTR [ecx+0x14],0x0
100180a6:	mov    edi,esi
100180a8:	mov    esi,DWORD PTR [esi+0x4]
100180ab:	mov    eax,ds:0x10080e7c
100180b0:	cmp    edi,DWORD PTR [eax+0x4]
100180b3:	jne    0x10017ffd
100180b9:	jmp    0x100180ec
100180bb:	mov    eax,DWORD PTR [ecx]
100180bd:	cmp    BYTE PTR [eax+0x14],0x1
100180c1:	jne    0x100180d5
100180c3:	mov    eax,DWORD PTR [ecx+0x8]
100180c6:	mov    BYTE PTR [eax+0x14],0x1
100180ca:	mov    BYTE PTR [ecx+0x14],0x0
100180ce:	call   0x1001811c
100180d3:	mov    ecx,DWORD PTR [esi]
100180d5:	mov    al,BYTE PTR [esi+0x14]
100180d8:	mov    BYTE PTR [ecx+0x14],al
100180db:	mov    BYTE PTR [esi+0x14],0x1
100180df:	mov    eax,DWORD PTR [ecx]
100180e1:	mov    ecx,esi
100180e3:	mov    BYTE PTR [eax+0x14],0x1
100180e7:	call   0x10018159
100180ec:	mov    BYTE PTR [edi+0x14],0x1
100180f0:	push   ebx
100180f1:	call   0x100430d2
100180f6:	cmp    DWORD PTR ds:0x10080e80,0x0
100180fd:	pop    ecx
100180fe:	jbe    0x10018106
10018100:	dec    DWORD PTR ds:0x10080e80
10018106:	mov    ecx,DWORD PTR [ebp+0xc]
10018109:	mov    eax,DWORD PTR [ebp+0x8]
1001810c:	mov    DWORD PTR [eax],ecx
1001810e:	mov    ecx,DWORD PTR [ebp+0x10]
10018111:	mov    DWORD PTR [eax+0x4],ecx
10018114:	call   0x10059d4d
10018119:	ret    0xc
1001811c:	mov    eax,DWORD PTR [ecx+0x8]
1001811f:	mov    edx,DWORD PTR [eax]
10018121:	mov    DWORD PTR [ecx+0x8],edx
10018124:	mov    edx,DWORD PTR [eax]
10018126:	cmp    BYTE PTR [edx+0x15],0x0
1001812a:	jne    0x1001812f
1001812c:	mov    DWORD PTR [edx+0x4],ecx
1001812f:	mov    edx,DWORD PTR [ecx+0x4]
10018132:	mov    DWORD PTR [eax+0x4],edx
10018135:	mov    edx,DWORD PTR ds:0x10080e7c
1001813b:	cmp    ecx,DWORD PTR [edx+0x4]
1001813e:	jne    0x10018145
10018140:	mov    DWORD PTR [edx+0x4],eax
10018143:	jmp    0x10018153
10018145:	mov    edx,DWORD PTR [ecx+0x4]
10018148:	cmp    ecx,DWORD PTR [edx]
1001814a:	jne    0x10018150
1001814c:	mov    DWORD PTR [edx],eax
1001814e:	jmp    0x10018153
10018150:	mov    DWORD PTR [edx+0x8],eax
10018153:	mov    DWORD PTR [eax],ecx
10018155:	mov    DWORD PTR [ecx+0x4],eax
10018158:	ret    
10018159:	mov    eax,DWORD PTR [ecx]
1001815b:	mov    edx,DWORD PTR [eax+0x8]
1001815e:	mov    DWORD PTR [ecx],edx
10018160:	mov    edx,DWORD PTR [eax+0x8]
10018163:	cmp    BYTE PTR [edx+0x15],0x0
10018167:	jne    0x1001816c
10018169:	mov    DWORD PTR [edx+0x4],ecx
1001816c:	mov    edx,DWORD PTR [ecx+0x4]
1001816f:	mov    DWORD PTR [eax+0x4],edx
10018172:	mov    edx,DWORD PTR ds:0x10080e7c
10018178:	cmp    ecx,DWORD PTR [edx+0x4]
1001817b:	jne    0x10018182
1001817d:	mov    DWORD PTR [edx+0x4],eax
10018180:	jmp    0x10018191
10018182:	mov    edx,DWORD PTR [ecx+0x4]
10018185:	cmp    ecx,DWORD PTR [edx+0x8]
10018188:	jne    0x1001818f
1001818a:	mov    DWORD PTR [edx+0x8],eax
1001818d:	jmp    0x10018191
1001818f:	mov    DWORD PTR [edx],eax
10018191:	mov    DWORD PTR [eax+0x8],ecx
10018194:	mov    DWORD PTR [ecx+0x4],eax
10018197:	ret    
10018198:	push   0x18
1001819a:	call   0x100436de
1001819f:	test   eax,eax
100181a1:	pop    ecx
100181a2:	je     0x100181cb
100181a4:	mov    ecx,DWORD PTR [esp+0x4]
100181a8:	mov    DWORD PTR [eax],ecx
100181aa:	mov    ecx,DWORD PTR [esp+0x8]
100181ae:	mov    DWORD PTR [eax+0x4],ecx
100181b1:	mov    ecx,DWORD PTR [esp+0xc]
100181b5:	mov    DWORD PTR [eax+0x8],ecx
100181b8:	mov    ecx,DWORD PTR [esi]
100181ba:	mov    DWORD PTR [eax+0xc],ecx
100181bd:	mov    ecx,DWORD PTR [esi+0x4]
100181c0:	mov    DWORD PTR [eax+0x10],ecx
100181c3:	mov    BYTE PTR [eax+0x14],0x0
100181c7:	mov    BYTE PTR [eax+0x15],0x0
100181cb:	ret    0xc
100181ce:	push   ebx
100181cf:	push   esi
100181d0:	push   edi
100181d1:	mov    edi,DWORD PTR [esp+0x10]
100181d5:	cmp    BYTE PTR [edi+0x15],0x0
100181d9:	mov    ebx,ecx
100181db:	mov    esi,edi
100181dd:	jne    0x100181fa
100181df:	push   DWORD PTR [esi+0x8]
100181e2:	mov    ecx,ebx
100181e4:	call   0x100181ce
100181e9:	mov    esi,DWORD PTR [esi]
100181eb:	push   edi
100181ec:	call   0x100430d2
100181f1:	cmp    BYTE PTR [esi+0x15],0x0
100181f5:	pop    ecx
100181f6:	mov    edi,esi
100181f8:	je     0x100181df
100181fa:	pop    edi
100181fb:	pop    esi
100181fc:	pop    ebx
100181fd:	ret    0x4
10018200:	push   0x18
10018202:	call   0x100436de
10018207:	xor    edx,edx
10018209:	cmp    eax,edx
1001820b:	pop    ecx
1001820c:	je     0x10018210
1001820e:	mov    DWORD PTR [eax],edx
10018210:	lea    ecx,[eax+0x4]
10018213:	cmp    ecx,edx
10018215:	je     0x10018219
10018217:	mov    DWORD PTR [ecx],edx
10018219:	lea    ecx,[eax+0x8]
1001821c:	cmp    ecx,edx
1001821e:	je     0x10018222
10018220:	mov    DWORD PTR [ecx],edx
10018222:	mov    BYTE PTR [eax+0x14],0x1
10018226:	mov    BYTE PTR [eax+0x15],dl
10018229:	ret    
1001822a:	push   ebx
1001822b:	xor    ebx,ebx
1001822d:	cmp    DWORD PTR [esi],ebx
1001822f:	jne    0x10018236
10018231:	call   0x100435f0
10018236:	mov    eax,DWORD PTR [esi+0x4]
10018239:	cmp    BYTE PTR [eax+0x15],bl
1001823c:	je     0x10018245
1001823e:	call   0x100435f0
10018243:	jmp    0x10018273
10018245:	mov    ecx,DWORD PTR [eax+0x8]
10018248:	cmp    BYTE PTR [ecx+0x15],bl
1001824b:	jne    0x10018268
1001824d:	jmp    0x10018251
1001824f:	mov    ecx,eax
10018251:	mov    eax,DWORD PTR [ecx]
10018253:	cmp    BYTE PTR [eax+0x15],bl
10018256:	je     0x1001824f
10018258:	mov    DWORD PTR [esi+0x4],ecx
1001825b:	jmp    0x10018273
1001825d:	mov    ecx,DWORD PTR [esi+0x4]
10018260:	cmp    ecx,DWORD PTR [eax+0x8]
10018263:	jne    0x10018270
10018265:	mov    DWORD PTR [esi+0x4],eax
10018268:	mov    eax,DWORD PTR [eax+0x4]
1001826b:	cmp    BYTE PTR [eax+0x15],bl
1001826e:	je     0x1001825d
10018270:	mov    DWORD PTR [esi+0x4],eax
10018273:	mov    eax,esi
10018275:	pop    ebx
10018276:	ret    
10018277:	push   ebp
10018278:	mov    ebp,esp
1001827a:	push   ecx
1001827b:	push   DWORD PTR [ebp+0xc]
1001827e:	lea    eax,[ebp-0x4]
10018281:	push   DWORD PTR [ebp+0x8]
10018284:	push   eax
10018285:	call   0x100144e6
1001828a:	add    esp,0xc
1001828d:	test   eax,eax
1001828f:	jge    0x10018297
10018291:	push   eax
10018292:	call   0x10001f24
10018297:	mov    eax,DWORD PTR [ebp-0x4]
1001829a:	leave  
1001829b:	ret    
1001829c:	push   ecx
1001829d:	call   0x1001910e
100182a2:	pop    ecx
100182a3:	ret    
100182a4:	push   0x28
100182a6:	mov    eax,0x10061fc5
100182ab:	call   0x10059c75
100182b0:	mov    esi,DWORD PTR [ebp+0x8]
100182b3:	xor    ebx,ebx
100182b5:	mov    DWORD PTR [ebp-0x10],ebx
100182b8:	mov    DWORD PTR [esi+0x4],ebx
100182bb:	mov    DWORD PTR [esi+0x8],ebx
100182be:	mov    DWORD PTR [esi+0xc],ebx
100182c1:	xor    edi,edi
100182c3:	inc    edi
100182c4:	push   edi
100182c5:	push   0x1c7277b8
100182ca:	mov    DWORD PTR [ebp-0x4],ebx
100182cd:	push   0x1006fce8
100182d2:	mov    DWORD PTR [ebp-0x10],edi
100182d5:	call   0x100042d1
100182da:	push   eax
100182db:	push   0x13
100182dd:	push   0x1006fd20
100182e2:	call   0x100042e3
100182e7:	push   ecx
100182e8:	push   ecx
100182e9:	mov    ecx,esp
100182eb:	mov    DWORD PTR [ebp-0x14],esp
100182ee:	push   eax
100182ef:	call   0x100011d1
100182f4:	lea    ecx,[ebp-0x34]
100182f7:	call   0x1000280e
100182fc:	push   eax
100182fd:	mov    DWORD PTR [ebp-0x4],edi
10018300:	call   0x1000424b
10018305:	push   ebx
10018306:	push   edi
10018307:	lea    ecx,[ebp-0x34]
1001830a:	mov    BYTE PTR [ebp-0x4],bl
1001830d:	call   0x100012f4
10018312:	push   edi
10018313:	push   0x5f90f71c
10018318:	push   0x1006fd34
1001831d:	call   0x100042d1
10018322:	push   eax
10018323:	push   0x12
10018325:	push   0x1006fd58
1001832a:	call   0x100042e3
1001832f:	push   ecx
10018330:	push   ecx
10018331:	mov    ecx,esp
10018333:	mov    DWORD PTR [ebp-0x14],esp
10018336:	push   eax
10018337:	call   0x100011d1
1001833c:	lea    ecx,[ebp-0x34]
1001833f:	call   0x1000280e
10018344:	push   eax
10018345:	mov    DWORD PTR [ebp-0x4],0x2
1001834c:	call   0x1000424b
10018351:	push   ebx
10018352:	push   edi
10018353:	lea    ecx,[ebp-0x34]
10018356:	mov    BYTE PTR [ebp-0x4],bl
10018359:	call   0x100012f4
1001835e:	push   edi
1001835f:	push   0x3c60908a
10018364:	push   0x1006fd6c
10018369:	call   0x100042d1
1001836e:	push   eax
1001836f:	push   0x14
10018371:	push   0x1006fd9c
10018376:	call   0x100042e3
1001837b:	push   ecx
1001837c:	push   ecx
1001837d:	mov    ecx,esp
1001837f:	mov    DWORD PTR [ebp-0x14],esp
10018382:	push   eax
10018383:	call   0x100011d1
10018388:	lea    ecx,[ebp-0x34]
1001838b:	call   0x1000280e
10018390:	push   eax
10018391:	mov    DWORD PTR [ebp-0x4],0x3
10018398:	call   0x1000424b
1001839d:	mov    BYTE PTR [ebp-0x4],bl
100183a0:	push   ebx
100183a1:	push   edi
100183a2:	lea    ecx,[ebp-0x34]
100183a5:	call   0x100012f4
100183aa:	push   edi
100183ab:	push   0x42645a32
100183b0:	push   0x1006fdb4
100183b5:	call   0x100042d1
100183ba:	push   eax
100183bb:	push   0x15
100183bd:	push   0x1006fde8
100183c2:	call   0x100042e3
100183c7:	push   ecx
100183c8:	push   ecx
100183c9:	mov    ecx,esp
100183cb:	mov    DWORD PTR [ebp-0x14],esp
100183ce:	push   eax
100183cf:	call   0x100011d1
100183d4:	lea    ecx,[ebp-0x34]
100183d7:	call   0x1000280e
100183dc:	push   eax
100183dd:	mov    DWORD PTR [ebp-0x4],0x4
100183e4:	call   0x1000424b
100183e9:	push   ebx
100183ea:	push   edi
100183eb:	lea    ecx,[ebp-0x34]
100183ee:	mov    BYTE PTR [ebp-0x4],bl
100183f1:	call   0x100012f4
100183f6:	push   edi
100183f7:	push   0x409d1d6
100183fc:	push   0x1006fe00
10018401:	call   0x100042d1
10018406:	push   0x2574e27e
1001840b:	push   eax
1001840c:	call   0x100042d1
10018411:	push   0xbe90714
10018416:	push   eax
10018417:	call   0x100042d1
1001841c:	push   0x3917a3da
10018421:	push   eax
10018422:	call   0x100042d1
10018427:	push   0x46d1594
1001842c:	push   eax
1001842d:	call   0x100042d1
10018432:	push   0x4d79e8d8
10018437:	push   eax
10018438:	call   0x100042d1
1001843d:	push   eax
1001843e:	push   0x15
10018440:	push   0x1006fe3c
10018445:	call   0x100042e3
1001844a:	add    esp,0x20
1001844d:	mov    ecx,esp
1001844f:	mov    DWORD PTR [ebp-0x14],esp
10018452:	push   eax
10018453:	call   0x100011d1
10018458:	lea    ecx,[ebp-0x34]
1001845b:	call   0x1000280e
10018460:	push   eax
10018461:	mov    DWORD PTR [ebp-0x4],0x5
10018468:	call   0x1000424b
1001846d:	push   ebx
1001846e:	push   edi
1001846f:	lea    ecx,[ebp-0x34]
10018472:	mov    BYTE PTR [ebp-0x4],bl
10018475:	call   0x100012f4
1001847a:	push   edi
1001847b:	push   0x554aa9a6
10018480:	push   0x1006fe54
10018485:	call   0x100042d1
1001848a:	push   0xb18675e
1001848f:	push   eax
10018490:	call   0x100042d1
10018495:	push   0x41f4d222
1001849a:	push   eax
1001849b:	call   0x100042d1
100184a0:	push   0x3ad69d52
100184a5:	push   eax
100184a6:	call   0x100042d1
100184ab:	push   0x7178a92e
100184b0:	push   eax
100184b1:	call   0x100042d1
100184b6:	push   eax
100184b7:	push   0x13
100184b9:	push   0x1006fe80
100184be:	call   0x100042e3
100184c3:	add    esp,0x18
100184c6:	mov    ecx,esp
100184c8:	mov    DWORD PTR [ebp-0x14],esp
100184cb:	push   eax
100184cc:	call   0x100011d1
100184d1:	lea    ecx,[ebp-0x34]
100184d4:	call   0x1000280e
100184d9:	push   eax
100184da:	mov    DWORD PTR [ebp-0x4],0x6
100184e1:	call   0x1000424b
100184e6:	push   ebx
100184e7:	push   edi
100184e8:	lea    ecx,[ebp-0x34]
100184eb:	mov    BYTE PTR [ebp-0x4],bl
100184ee:	call   0x100012f4
100184f3:	push   edi
100184f4:	push   0x2fbe304
100184f9:	push   0x1006fe94
100184fe:	call   0x100042d1
10018503:	push   0x5add60fa
10018508:	push   eax
10018509:	call   0x100042d1
1001850e:	push   eax
1001850f:	push   0x12
10018511:	push   0x1006fec4
10018516:	call   0x100042e3
1001851b:	mov    ecx,esp
1001851d:	mov    DWORD PTR [ebp-0x14],esp
10018520:	push   eax
10018521:	call   0x100011d1
10018526:	lea    ecx,[ebp-0x34]
10018529:	call   0x1000280e
1001852e:	push   eax
1001852f:	mov    DWORD PTR [ebp-0x4],0x7
10018536:	call   0x1000424b
1001853b:	push   ebx
1001853c:	push   edi
1001853d:	lea    ecx,[ebp-0x34]
10018540:	call   0x100012f4
10018545:	mov    eax,esi
10018547:	call   0x10059d4d
1001854c:	ret    
1001854d:	push   ebp
1001854e:	mov    ebp,esp
10018550:	push   ecx
10018551:	push   ecx
10018552:	call   0x10033610
10018557:	push   0x10
10018559:	push   edi
1001855a:	push   esi
1001855b:	mov    DWORD PTR [ebp-0x4],eax
1001855e:	call   0x10045420
10018563:	add    esp,0xc
10018566:	xor    ecx,ecx
10018568:	xor    eax,eax
1001856a:	mov    dl,BYTE PTR [eax+edi*1]
1001856d:	xor    BYTE PTR [ecx+esi*1],dl
10018570:	inc    ecx
10018571:	inc    eax
10018572:	and    eax,0xf
10018575:	cmp    ecx,0x10
10018578:	jne    0x1001856a
1001857a:	xor    ecx,ecx
1001857c:	xor    eax,eax
1001857e:	mov    dl,BYTE PTR [ebp+eax*1-0x4]
10018582:	xor    BYTE PTR [ecx+esi*1],dl
10018585:	inc    ecx
10018586:	inc    eax
10018587:	and    eax,0x3
1001858a:	cmp    ecx,0x4
1001858d:	jne    0x1001857e
1001858f:	leave  
10018590:	ret    
10018591:	push   ebp
10018592:	mov    ebp,esp
10018594:	and    esp,0xfffffff8
10018597:	push   0xffffffff
10018599:	push   0x10061f59
1001859e:	mov    eax,fs:0x0
100185a4:	push   eax
100185a5:	sub    esp,0xc
100185a8:	mov    eax,ds:0x1007e030
100185ad:	xor    eax,esp
100185af:	push   eax
100185b0:	lea    eax,[esp+0x10]
100185b4:	mov    fs:0x0,eax
100185ba:	push   0x1
100185bc:	call   0x100439b6
100185c1:	pop    ecx
100185c2:	mov    DWORD PTR [esp+0x8],eax
100185c6:	and    DWORD PTR [esp+0x18],0x0
100185cb:	push   0x1
100185cd:	lea    eax,[esp+0x8]
100185d1:	push   eax
100185d2:	call   0x10034bf0
100185d7:	mov    BYTE PTR [esp+0x18],0x1
100185dc:	push   DWORD PTR [esp+0x8]
100185e0:	lea    eax,[esp+0x8]
100185e4:	push   0x4
100185e6:	push   eax
100185e7:	xor    ecx,ecx
100185e9:	call   0x10036b70
100185ee:	push   DWORD PTR [esp+0x4]
100185f2:	call   DWORD PTR ds:0x10066070
100185f8:	push   DWORD PTR [esp+0x8]
100185fc:	call   0x100430d2
10018601:	pop    ecx
10018602:	mov    ecx,DWORD PTR [esp+0x10]
10018606:	mov    DWORD PTR fs:0x0,ecx
1001860d:	pop    ecx
1001860e:	mov    esp,ebp
10018610:	pop    ebp
10018611:	ret    
10018612:	push   0x3c
10018614:	mov    eax,0x10063d1c
10018619:	call   0x10059c75
1001861e:	xor    eax,eax
10018620:	mov    esi,ecx
10018622:	mov    DWORD PTR [ebp-0x48],eax
10018625:	mov    DWORD PTR [ebp-0x18],esi
10018628:	mov    DWORD PTR [ebp-0x24],eax
1001862b:	mov    DWORD PTR [ebp-0x14],eax
1001862e:	xor    ebx,ebx
10018630:	inc    ebx
10018631:	mov    DWORD PTR [ebp-0x4],ebx
10018634:	call   0x100040e9
10018639:	push   ebx
1001863a:	lea    eax,[ebp-0x1c]
1001863d:	push   eax
1001863e:	mov    DWORD PTR [ebp-0x48],ebx
10018641:	call   0x10034bf0
10018646:	lea    eax,[ebp-0x24]
10018649:	push   eax
1001864a:	push   0x4
1001864c:	lea    eax,[ebp-0x20]
1001864f:	push   eax
10018650:	lea    eax,[ebp-0x1c]
10018653:	push   eax
10018654:	mov    BYTE PTR [ebp-0x4],0x2
10018658:	call   0x10036cc0
1001865d:	push   eax
1001865e:	lea    edi,[ebp-0x14]
10018661:	call   0x10002082
10018666:	push   DWORD PTR [ebp-0x20]
10018669:	call   0x100430d2
1001866e:	xor    esi,esi
10018670:	cmp    DWORD PTR [ebp-0x14],esi
10018673:	pop    ecx
10018674:	je     0x100186a9
10018676:	cmp    DWORD PTR [ebp-0x24],esi
10018679:	je     0x100186a9
1001867b:	push   DWORD PTR [ebp-0x24]
1001867e:	lea    esi,[ebp-0x40]
10018681:	push   DWORD PTR [ebp-0x14]
10018684:	call   0x100040fc
10018689:	push   0xffffffff
1001868b:	push   0x0
1001868d:	mov    BYTE PTR [ebp-0x4],0x6
10018691:	mov    ecx,DWORD PTR [ebp-0x18]
10018694:	push   eax
10018695:	call   0x10001245
1001869a:	push   0x0
1001869c:	push   ebx
1001869d:	mov    ecx,esi
1001869f:	call   0x100012f4
100186a4:	jmp    0x1001877e
100186a9:	lea    edi,[ebp-0x34]
100186ac:	call   0x100187cd
100186b1:	mov    BYTE PTR [ebp-0x4],0x3
100186b5:	cmp    DWORD PTR [ebp-0x30],esi
100186b8:	je     0x10018776
100186be:	mov    eax,DWORD PTR [ebp-0x2c]
100186c1:	sub    eax,DWORD PTR [ebp-0x30]
100186c4:	sar    eax,0x5
100186c7:	je     0x10018776
100186cd:	call   DWORD PTR ds:0x10066118
100186d3:	push   eax
100186d4:	call   0x100466aa
100186d9:	xor    edi,edi
100186db:	pop    ecx
100186dc:	xor    ebx,ebx
100186de:	cmp    DWORD PTR [ebp-0x30],0x0
100186e2:	jne    0x100186e8
100186e4:	xor    eax,eax
100186e6:	jmp    0x100186f1
100186e8:	mov    eax,DWORD PTR [ebp-0x2c]
100186eb:	sub    eax,DWORD PTR [ebp-0x30]
100186ee:	sar    eax,0x5
100186f1:	cmp    ebx,eax
100186f3:	je     0x10018704
100186f5:	push   ebx
100186f6:	lea    esi,[ebp-0x34]
100186f9:	call   0x10009d41
100186fe:	add    edi,DWORD PTR [eax+0x1c]
10018701:	inc    ebx
10018702:	jmp    0x100186de
10018704:	call   0x100466b7
10018709:	xor    edx,edx
1001870b:	div    edi
1001870d:	xor    edi,edi
1001870f:	xor    ebx,ebx
10018711:	mov    DWORD PTR [ebp-0x20],edx
10018714:	xor    eax,eax
10018716:	cmp    DWORD PTR [ebp-0x30],eax
10018719:	je     0x10018724
1001871b:	mov    eax,DWORD PTR [ebp-0x2c]
1001871e:	sub    eax,DWORD PTR [ebp-0x30]
10018721:	sar    eax,0x5
10018724:	cmp    ebx,eax
10018726:	je     0x10018756
10018728:	push   ebx
10018729:	lea    esi,[ebp-0x34]
1001872c:	call   0x10009d41
10018731:	add    edi,DWORD PTR [eax+0x1c]
10018734:	cmp    DWORD PTR [ebp-0x20],edi
10018737:	jb     0x1001873c
10018739:	inc    ebx
1001873a:	jmp    0x10018714
1001873c:	push   ebx
1001873d:	lea    esi,[ebp-0x34]
10018740:	call   0x10009d41
10018745:	mov    esi,DWORD PTR [ebp-0x18]
10018748:	push   0xffffffff
1001874a:	push   0x0
1001874c:	push   eax
1001874d:	mov    ecx,esi
1001874f:	call   0x10001245
10018754:	jmp    0x10018759
10018756:	mov    esi,DWORD PTR [ebp-0x18]
10018759:	cmp    DWORD PTR [esi+0x18],0x10
1001875d:	mov    ecx,DWORD PTR [esi+0x14]
10018760:	jb     0x10018767
10018762:	mov    esi,DWORD PTR [esi+0x4]
10018765:	jmp    0x1001876a
10018767:	add    esi,0x4
1001876a:	push   esi
1001876b:	push   0x4
1001876d:	lea    eax,[ebp-0x1c]
10018770:	push   eax
10018771:	call   0x10036b70
10018776:	lea    esi,[ebp-0x34]
10018779:	call   0x1000a2fa
1001877e:	push   DWORD PTR [ebp-0x1c]
10018781:	call   DWORD PTR ds:0x10066070
10018787:	push   DWORD PTR [ebp-0x14]
1001878a:	call   0x100430d2
1001878f:	mov    eax,DWORD PTR [ebp-0x18]
10018792:	pop    ecx
10018793:	call   0x10059d4d
10018798:	ret    
10018799:	push   0x3e8
1001879e:	push   DWORD PTR ds:0x10080ec8
100187a4:	call   DWORD PTR ds:0x10066084
100187aa:	test   eax,eax
100187ac:	je     0x100187b1
100187ae:	mov    al,0x1
100187b0:	ret    
100187b1:	push   ebx
100187b2:	call   0x10018865
100187b7:	push   DWORD PTR ds:0x10080ec8
100187bd:	mov    bl,BYTE PTR ds:0x1007f6b0
100187c3:	call   DWORD PTR ds:0x10066094
100187c9:	mov    al,bl
100187cb:	pop    ebx
100187cc:	ret    
100187cd:	push   ebp
100187ce:	mov    ebp,esp
100187d0:	and    esp,0xfffffff8
100187d3:	push   0xffffffff
100187d5:	push   0x10063cc8
100187da:	mov    eax,fs:0x0
100187e0:	push   eax
100187e1:	sub    esp,0x18
100187e4:	push   esi
100187e5:	mov    eax,ds:0x1007e030
100187ea:	xor    eax,esp
100187ec:	push   eax
100187ed:	lea    eax,[esp+0x20]
100187f1:	mov    fs:0x0,eax
100187f7:	and    DWORD PTR [esp+0x8],0x0
100187fc:	push   0x3e8
10018801:	push   DWORD PTR ds:0x10080ec8
10018807:	call   DWORD PTR ds:0x10066084
1001880d:	test   eax,eax
1001880f:	je     0x1001881a
10018811:	push   edi
10018812:	call   0x100182a4
10018817:	pop    ecx
10018818:	jmp    0x10018852
1001881a:	call   0x10018865
1001881f:	lea    eax,[esp+0xc]
10018823:	push   eax
10018824:	mov    ecx,0x10080eb8
10018829:	call   0x10009ca9
1001882e:	and    DWORD PTR [esp+0x28],0x0
10018833:	push   DWORD PTR ds:0x10080ec8
10018839:	call   DWORD PTR ds:0x10066094
1001883f:	push   edi
10018840:	lea    ecx,[esp+0x10]
10018844:	call   0x10009ca9
10018849:	lea    esi,[esp+0xc]
1001884d:	call   0x1000a2fa
10018852:	mov    eax,edi
10018854:	mov    ecx,DWORD PTR [esp+0x20]
10018858:	mov    DWORD PTR fs:0x0,ecx
1001885f:	pop    ecx
10018860:	pop    esi
10018861:	mov    esp,ebp
10018863:	pop    ebp
10018864:	ret    
10018865:	push   0xac
1001886a:	mov    eax,0x10063c98
1001886f:	call   0x10059d14
10018874:	xor    ebx,ebx
10018876:	mov    DWORD PTR [ebp-0x4],ebx
10018879:	mov    DWORD PTR [ebp-0x34],ebx
1001887c:	xor    eax,eax
1001887e:	lea    edi,[ebp-0x30]
10018881:	stos   DWORD PTR es:[edi],eax
10018882:	stos   DWORD PTR es:[edi],eax
10018883:	stos   DWORD PTR es:[edi],eax
10018884:	mov    DWORD PTR [ebp-0x54],ebx
10018887:	mov    DWORD PTR [ebp-0x60],ebx
1001888a:	push   0x1
1001888c:	lea    eax,[ebp-0x58]
1001888f:	push   eax
10018890:	mov    BYTE PTR [ebp-0x4],0x2
10018894:	call   0x10034bf0
10018899:	lea    eax,[ebp-0x58]
1001889c:	push   eax
1001889d:	lea    ecx,[ebp-0x34]
100188a0:	mov    BYTE PTR [ebp-0x4],0x3
100188a4:	call   0x10036610
100188a9:	push   0x2
100188ab:	lea    eax,[ebp-0x58]
100188ae:	push   eax
100188af:	lea    ecx,[ebp-0x88]
100188b5:	call   0x10035c50
100188ba:	mov    ecx,DWORD PTR [eax+0x4]
100188bd:	cmp    ecx,DWORD PTR ds:0x10080d44
100188c3:	ja     0x100188ea
100188c5:	jb     0x100188d1
100188c7:	mov    eax,DWORD PTR [eax]
100188c9:	cmp    eax,DWORD PTR ds:0x10080d40
100188cf:	ja     0x100188ea
100188d1:	push   DWORD PTR [ebp-0x58]
100188d4:	call   DWORD PTR ds:0x10066070
100188da:	push   ebx
100188db:	call   0x100430d2
100188e0:	pop    ecx
100188e1:	mov    BYTE PTR [ebp-0x4],bl
100188e4:	push   ebx
100188e5:	jmp    0x10018a7b
100188ea:	lea    eax,[ebp-0x5c]
100188ed:	push   eax
100188ee:	push   0x2
100188f0:	lea    eax,[ebp-0x64]
100188f3:	push   eax
100188f4:	lea    eax,[ebp-0x58]
100188f7:	push   eax
100188f8:	call   0x10036cc0
100188fd:	push   eax
100188fe:	lea    edi,[ebp-0x54]
10018901:	call   0x10002082
10018906:	push   DWORD PTR [ebp-0x64]
10018909:	call   0x100430d2
1001890e:	cmp    DWORD PTR [ebp-0x54],ebx
10018911:	pop    ecx
10018912:	je     0x100188d1
10018914:	call   0x1002fb70
10018919:	lea    esi,[ebp-0x24]
1001891c:	lea    edi,[ebp-0x34]
1001891f:	mov    ds:0x10080d40,eax
10018924:	mov    DWORD PTR ds:0x10080d44,edx
1001892a:	call   0x1001854d
1001892f:	push   0x1
10018931:	mov    eax,esi
10018933:	mov    esi,DWORD PTR [ebp-0x54]
10018936:	push   eax
10018937:	push   DWORD PTR [ebp-0x5c]
1001893a:	lea    eax,[ebp-0x5c]
1001893d:	push   esi
1001893e:	push   eax
1001893f:	lea    edx,[ebp-0x65]
10018942:	lea    ecx,[ebp-0x64]
10018945:	call   0x100399a0
1001894a:	add    esp,0x14
1001894d:	push   eax
1001894e:	lea    edi,[ebp-0x60]
10018951:	call   0x10002082
10018956:	push   DWORD PTR [ebp-0x5c]
10018959:	call   0x100430d2
1001895e:	mov    edi,DWORD PTR [ebp-0x60]
10018961:	cmp    edi,ebx
10018963:	pop    ecx
10018964:	jne    0x1001897f
10018966:	push   DWORD PTR [ebp-0x58]
10018969:	call   DWORD PTR ds:0x10066070
1001896f:	push   ebx
10018970:	call   0x100430d2
10018975:	pop    ecx
10018976:	mov    BYTE PTR [ebp-0x4],bl
10018979:	push   esi
1001897a:	jmp    0x10018a7b
1001897f:	mov    eax,DWORD PTR [ebp-0x64]
10018982:	mov    DWORD PTR [ebp-0x70],eax
10018985:	lea    eax,[ebp-0x74]
10018988:	push   eax
10018989:	mov    DWORD PTR [ebp-0x74],ebx
1001898c:	mov    DWORD PTR [ebp-0x6c],edi
1001898f:	call   0x100379d0
10018994:	cmp    eax,0x1
10018997:	je     0x100189a5
10018999:	push   DWORD PTR [ebp-0x58]
1001899c:	call   DWORD PTR ds:0x10066070
100189a2:	push   edi
100189a3:	jmp    0x10018970
100189a5:	lea    eax,[ebp-0x74]
100189a8:	push   eax
100189a9:	call   0x100379d0
100189ae:	cmp    eax,ebx
100189b0:	setne  al
100189b3:	mov    ds:0x1007f6b0,al
100189b8:	lea    eax,[ebp-0x74]
100189bb:	push   eax
100189bc:	call   0x100379d0
100189c1:	cmp    eax,ebx
100189c3:	mov    DWORD PTR [ebp-0x5c],eax
100189c6:	je     0x10018999
100189c8:	mov    DWORD PTR [ebp-0x94],ebx
100189ce:	mov    DWORD PTR [ebp-0x90],ebx
100189d4:	mov    DWORD PTR [ebp-0x8c],ebx
100189da:	mov    BYTE PTR [ebp-0x4],0x4
100189de:	xor    edi,edi
100189e0:	cmp    edi,DWORD PTR [ebp-0x5c]
100189e3:	jge    0x10018a4d
100189e5:	lea    eax,[ebp-0x74]
100189e8:	push   eax
100189e9:	lea    esi,[ebp-0x50]
100189ec:	call   0x10037690
100189f1:	lea    eax,[ebp-0x74]
100189f4:	push   eax
100189f5:	mov    BYTE PTR [ebp-0x4],0x5
100189f9:	call   0x100379d0
100189fe:	push   eax
100189ff:	sub    esp,0x1c
10018a02:	mov    eax,esi
10018a04:	mov    ecx,esp
10018a06:	mov    DWORD PTR [ebp-0x84],esp
10018a0c:	push   eax
10018a0d:	call   0x100011ab
10018a12:	lea    ecx,[ebp-0xb8]
10018a18:	call   0x1000280e
10018a1d:	push   eax
10018a1e:	lea    esi,[ebp-0x98]
10018a24:	mov    BYTE PTR [ebp-0x4],0x6
10018a28:	call   0x1000424b
10018a2d:	push   ebx
10018a2e:	push   0x1
10018a30:	lea    ecx,[ebp-0xb8]
10018a36:	call   0x100012f4
10018a3b:	push   ebx
10018a3c:	push   0x1
10018a3e:	lea    ecx,[ebp-0x50]
10018a41:	mov    BYTE PTR [ebp-0x4],0x4
10018a45:	call   0x100012f4
10018a4a:	inc    edi
10018a4b:	jmp    0x100189e0
10018a4d:	lea    eax,[ebp-0x98]
10018a53:	call   0x10018e9a
10018a58:	lea    esi,[ebp-0x98]
10018a5e:	call   0x1000a2fa
10018a63:	push   DWORD PTR [ebp-0x58]
10018a66:	call   DWORD PTR ds:0x10066070
10018a6c:	push   DWORD PTR [ebp-0x60]
10018a6f:	call   0x100430d2
10018a74:	pop    ecx
10018a75:	mov    BYTE PTR [ebp-0x4],bl
10018a78:	push   DWORD PTR [ebp-0x54]
10018a7b:	call   0x100430d2
10018a80:	mov    eax,ds:0x10080ebc
10018a85:	cmp    eax,ebx
10018a87:	pop    ecx
10018a88:	je     0x10018a97
10018a8a:	mov    ecx,DWORD PTR ds:0x10080ec0
10018a90:	sub    ecx,eax
10018a92:	sar    ecx,0x5
10018a95:	jne    0x10018aba
10018a97:	lea    eax,[ebp-0x24]
10018a9a:	push   eax
10018a9b:	call   0x100182a4
10018aa0:	pop    ecx
10018aa1:	mov    ecx,0x10080eb8
10018aa6:	mov    BYTE PTR [ebp-0x4],0x7
10018aaa:	call   0x10018d54
10018aaf:	lea    esi,[ebp-0x24]
10018ab2:	mov    BYTE PTR [ebp-0x4],bl
10018ab5:	call   0x1000a2fa
10018aba:	call   0x1001956e
10018abf:	mov    DWORD PTR [ebp-0x7c],eax
10018ac2:	mov    BYTE PTR [eax+0x29],0x1
10018ac6:	mov    eax,DWORD PTR [ebp-0x7c]
10018ac9:	mov    DWORD PTR [eax+0x4],eax
10018acc:	mov    eax,DWORD PTR [ebp-0x7c]
10018acf:	mov    DWORD PTR [eax],eax
10018ad1:	mov    eax,DWORD PTR [ebp-0x7c]
10018ad4:	mov    DWORD PTR [eax+0x8],eax
10018ad7:	mov    DWORD PTR [ebp-0x78],ebx
10018ada:	mov    BYTE PTR [ebp-0x4],0x8
10018ade:	mov    DWORD PTR [ebp-0x54],ebx
10018ae1:	mov    ecx,DWORD PTR ds:0x10080ebc
10018ae7:	cmp    ecx,ebx
10018ae9:	je     0x10018b3a
10018aeb:	mov    eax,ds:0x10080ec0
10018af0:	sub    eax,ecx
10018af2:	sar    eax,0x5
10018af5:	cmp    DWORD PTR [ebp-0x54],eax
10018af8:	jae    0x10018b3a
10018afa:	push   DWORD PTR [ebp-0x54]
10018afd:	mov    esi,0x10080eb8
10018b02:	call   0x10009d41
10018b07:	lea    ecx,[ebp-0x50]
10018b0a:	push   ecx
10018b0b:	mov    ecx,eax
10018b0d:	call   0x10030c80
10018b12:	pop    ecx
10018b13:	push   eax
10018b14:	lea    edi,[ebp-0x74]
10018b17:	lea    ebx,[ebp-0x80]
10018b1a:	mov    BYTE PTR [ebp-0x4],0x9
10018b1e:	call   0x10018eda
10018b23:	push   0x0
10018b25:	push   0x1
10018b27:	lea    ecx,[ebp-0x50]
10018b2a:	mov    BYTE PTR [ebp-0x4],0x8
10018b2e:	call   0x100012f4
10018b33:	inc    DWORD PTR [ebp-0x54]
10018b36:	xor    ebx,ebx
10018b38:	jmp    0x10018ae1
10018b3a:	lea    eax,[ebp-0x80]
10018b3d:	call   0x10018f93
10018b42:	lea    eax,[ebp-0x80]
10018b45:	mov    BYTE PTR [ebp-0x4],bl
10018b48:	call   0x1001910e
10018b4d:	call   0x10059d70
10018b52:	ret    
10018b53:	push   0x4
10018b55:	call   0x10037b70
10018b5a:	pop    ecx
10018b5b:	mov    eax,0x10018b4d
10018b60:	ret    
10018b61:	push   0x58
10018b63:	mov    eax,0x10063c25
10018b68:	call   0x10059d14
10018b6d:	xor    edi,edi
10018b6f:	inc    edi
10018b70:	push   edi
10018b71:	lea    eax,[ebp-0x40]
10018b74:	xor    esi,esi
10018b76:	push   eax
10018b77:	mov    DWORD PTR [ebp-0x4],esi
10018b7a:	call   0x10034bf0
10018b7f:	lea    eax,[ebp-0x40]
10018b82:	push   eax
10018b83:	lea    ecx,[ebp-0x38]
10018b86:	mov    BYTE PTR [ebp-0x4],0x1
10018b8a:	call   0x10036610
10018b8f:	mov    eax,0x10080eb8
10018b94:	call   0x1000473c
10018b99:	mov    DWORD PTR [ebp-0x58],eax
10018b9c:	mov    DWORD PTR [ebp-0x3c],0xc
10018ba3:	cmp    esi,DWORD PTR [ebp-0x58]
10018ba6:	jge    0x10018bbe
10018ba8:	push   esi
10018ba9:	call   0x10018e75
10018bae:	mov    ecx,DWORD PTR [ebp-0x3c]
10018bb1:	mov    eax,DWORD PTR [eax+0x14]
10018bb4:	lea    eax,[ecx+eax*1+0x5]
10018bb8:	mov    DWORD PTR [ebp-0x3c],eax
10018bbb:	inc    esi
10018bbc:	jmp    0x10018ba3
10018bbe:	push   DWORD PTR [ebp-0x3c]
10018bc1:	call   0x100439b6
10018bc6:	mov    ebx,eax
10018bc8:	pop    ecx
10018bc9:	mov    DWORD PTR [ebp-0x64],ebx
10018bcc:	push   0x4
10018bce:	mov    BYTE PTR [ebp-0x4],0x2
10018bd2:	mov    DWORD PTR [ebp-0x60],edi
10018bd5:	pop    edi
10018bd6:	push   edi
10018bd7:	lea    eax,[ebp-0x60]
10018bda:	push   eax
10018bdb:	push   ebx
10018bdc:	call   0x10045420
10018be1:	add    esp,0xc
10018be4:	push   edi
10018be5:	lea    eax,[ebp+0x8]
10018be8:	push   eax
10018be9:	lea    eax,[ebx+0x4]
10018bec:	push   eax
10018bed:	call   0x10045420
10018bf2:	add    esp,0xc
10018bf5:	push   edi
10018bf6:	lea    eax,[ebp-0x58]
10018bf9:	push   eax
10018bfa:	lea    eax,[ebx+0x8]
10018bfd:	push   eax
10018bfe:	call   0x10045420
10018c03:	add    esp,0xc
10018c06:	and    DWORD PTR [ebp-0x48],0x0
10018c0a:	push   0xc
10018c0c:	pop    esi
10018c0d:	mov    eax,DWORD PTR [ebp-0x48]
10018c10:	cmp    eax,DWORD PTR [ebp-0x58]
10018c13:	jge    0x10018c64
10018c15:	push   eax
10018c16:	call   0x10018e75
10018c1b:	cmp    DWORD PTR [eax+0x18],0x10
10018c1f:	jb     0x10018c26
10018c21:	mov    eax,DWORD PTR [eax+0x4]
10018c24:	jmp    0x10018c29
10018c26:	add    eax,0x4
10018c29:	push   eax
10018c2a:	lea    eax,[esi+ebx*1]
10018c2d:	push   eax
10018c2e:	call   0x100466e0
10018c33:	pop    ecx
10018c34:	pop    ecx
10018c35:	push   DWORD PTR [ebp-0x48]
10018c38:	call   0x10018e75
10018c3d:	mov    eax,DWORD PTR [eax+0x14]
10018c40:	push   edi
10018c41:	push   DWORD PTR [ebp-0x48]
10018c44:	lea    esi,[esi+eax*1+0x1]
10018c48:	call   0x10018e75
10018c4d:	add    eax,0x1c
10018c50:	push   eax
10018c51:	lea    eax,[esi+ebx*1]
10018c54:	push   eax
10018c55:	call   0x10045420
10018c5a:	add    esp,0xc
10018c5d:	add    esi,edi
10018c5f:	inc    DWORD PTR [ebp-0x48]
10018c62:	jmp    0x10018c0d
10018c64:	lea    esi,[ebp-0x28]
10018c67:	lea    edi,[ebp-0x38]
10018c6a:	call   0x1001854d
10018c6f:	and    DWORD PTR [ebp-0x48],0x0
10018c73:	lea    eax,[ebp-0x48]
10018c76:	push   eax
10018c77:	mov    eax,esi
10018c79:	push   eax
10018c7a:	push   DWORD PTR [ebp-0x3c]
10018c7d:	xor    cl,cl
10018c7f:	mov    edx,ebx
10018c81:	lea    edi,[ebp-0x3c]
10018c84:	call   0x100397f0
10018c89:	mov    ecx,DWORD PTR [eax]
10018c8b:	mov    esi,ecx
10018c8d:	xor    edi,edi
10018c8f:	add    esp,0xc
10018c92:	mov    DWORD PTR [eax],edi
10018c94:	mov    DWORD PTR [ebp-0x5c],esi
10018c97:	mov    BYTE PTR [ebp-0x4],0x3
10018c9b:	push   DWORD PTR [ebp-0x3c]
10018c9e:	call   0x100430d2
10018ca3:	pop    ecx
10018ca4:	mov    ecx,DWORD PTR [ebp-0x48]
10018ca7:	push   esi
10018ca8:	push   0x2
10018caa:	lea    eax,[ebp-0x40]
10018cad:	push   eax
10018cae:	call   0x10036b70
10018cb3:	call   0x1002fb70
10018cb8:	mov    DWORD PTR [ebp-0x4c],eax
10018cbb:	lea    eax,[ebp-0x4c]
10018cbe:	push   eax
10018cbf:	lea    eax,[ebp-0x40]
10018cc2:	push   eax
10018cc3:	push   0x2
10018cc5:	pop    ecx
10018cc6:	mov    DWORD PTR [ebp-0x48],edx
10018cc9:	call   0x10035d90
10018cce:	cmp    DWORD PTR [ebp+0x8],edi
10018cd1:	jne    0x10018cec
10018cd3:	mov    DWORD PTR [ebp-0x4c],edi
10018cd6:	xor    eax,eax
10018cd8:	lea    edi,[ebp-0x48]
10018cdb:	stos   DWORD PTR es:[edi],eax
10018cdc:	lea    eax,[ebp-0x4c]
10018cdf:	push   eax
10018ce0:	lea    eax,[ebp-0x40]
10018ce3:	push   eax
10018ce4:	push   0x2
10018ce6:	pop    ecx
10018ce7:	call   0x10035d90
10018cec:	push   esi
10018ced:	call   0x100430d2
10018cf2:	pop    ecx
10018cf3:	push   ebx
10018cf4:	call   0x100430d2
10018cf9:	pop    ecx
10018cfa:	push   DWORD PTR [ebp-0x40]
10018cfd:	call   DWORD PTR ds:0x10066070
10018d03:	or     DWORD PTR [ebp-0x4],0xffffffff
10018d07:	mov    eax,ds:0x10080ebc
10018d0c:	test   eax,eax
10018d0e:	je     0x10018d1d
10018d10:	mov    ecx,DWORD PTR ds:0x10080ec0
10018d16:	sub    ecx,eax
10018d18:	sar    ecx,0x5
10018d1b:	jne    0x10018d40
10018d1d:	lea    eax,[ebp-0x54]
10018d20:	push   eax
10018d21:	call   0x100182a4
10018d26:	pop    ecx
10018d27:	mov    ecx,0x10080eb8
10018d2c:	mov    DWORD PTR [ebp-0x4],0x5
10018d33:	call   0x10018d54
10018d38:	lea    esi,[ebp-0x54]
10018d3b:	call   0x1000a2fa
10018d40:	call   0x10059d70
10018d45:	ret    
10018d46:	push   0x4
10018d48:	call   0x10037b70
10018d4d:	pop    ecx
10018d4e:	mov    eax,0x10018d07
10018d53:	ret    
10018d54:	push   ebx
10018d55:	push   esi
10018d56:	push   edi
10018d57:	mov    esi,eax
10018d59:	mov    edi,ecx
10018d5b:	cmp    edi,esi
10018d5d:	je     0x10018e6f
10018d63:	call   0x1000473c
10018d68:	test   eax,eax
10018d6a:	jne    0x10018dad
10018d6c:	mov    ebx,DWORD PTR [edi+0x8]
10018d6f:	cmp    DWORD PTR [edi+0x4],ebx
10018d72:	jbe    0x10018d79
10018d74:	call   0x100435f0
10018d79:	mov    esi,DWORD PTR [edi+0x4]
10018d7c:	cmp    esi,DWORD PTR [edi+0x8]
10018d7f:	jbe    0x10018d86
10018d81:	call   0x100435f0
10018d86:	cmp    esi,ebx
10018d88:	je     0x10018e6f
10018d8e:	push   DWORD PTR [edi+0x8]
10018d91:	mov    eax,esi
10018d93:	mov    ecx,ebx
10018d95:	call   0x100195d6
10018d9a:	pop    ecx
10018d9b:	push   DWORD PTR [edi+0x8]
10018d9e:	mov    esi,eax
10018da0:	call   0x1000a2dd
10018da5:	mov    DWORD PTR [edi+0x8],esi
10018da8:	jmp    0x10018e6f
10018dad:	mov    eax,esi
10018daf:	call   0x1000473c
10018db4:	mov    ebx,eax
10018db6:	mov    eax,edi
10018db8:	call   0x1000473c
10018dbd:	cmp    ebx,eax
10018dbf:	mov    eax,DWORD PTR [edi+0x4]
10018dc2:	ja     0x10018dea
10018dc4:	push   DWORD PTR [esi+0x8]
10018dc7:	mov    ecx,DWORD PTR [esi+0x4]
10018dca:	call   0x100195d6
10018dcf:	pop    ecx
10018dd0:	push   DWORD PTR [edi+0x8]
10018dd3:	call   0x1000a2dd
10018dd8:	mov    eax,esi
10018dda:	call   0x1000473c
10018ddf:	shl    eax,0x5
10018de2:	add    eax,DWORD PTR [edi+0x4]
10018de5:	jmp    0x10018e6c
10018dea:	test   eax,eax
10018dec:	jne    0x10018df2
10018dee:	xor    ebx,ebx
10018df0:	jmp    0x10018dfa
10018df2:	mov    ebx,DWORD PTR [edi+0xc]
10018df5:	sub    ebx,eax
10018df7:	sar    ebx,0x5
10018dfa:	mov    eax,esi
10018dfc:	call   0x1000473c
10018e01:	cmp    eax,ebx
10018e03:	ja     0x10018e27
10018e05:	mov    eax,edi
10018e07:	call   0x1000473c
10018e0c:	mov    ecx,DWORD PTR [esi+0x4]
10018e0f:	mov    ebx,eax
10018e11:	mov    eax,DWORD PTR [edi+0x4]
10018e14:	shl    ebx,0x5
10018e17:	add    ebx,ecx
10018e19:	push   ebx
10018e1a:	call   0x100195d6
10018e1f:	pop    ecx
10018e20:	push   DWORD PTR [edi+0x8]
10018e23:	mov    ecx,ebx
10018e25:	jmp    0x10018e64
10018e27:	mov    eax,DWORD PTR [edi+0x4]
10018e2a:	xor    ebx,ebx
10018e2c:	cmp    eax,ebx
10018e2e:	je     0x10018e41
10018e30:	push   DWORD PTR [edi+0x8]
10018e33:	call   0x1000a2dd
10018e38:	push   DWORD PTR [edi+0x4]
10018e3b:	call   0x100430d2
10018e40:	pop    ecx
10018e41:	mov    eax,esi
10018e43:	call   0x1000473c
10018e48:	cmp    eax,ebx
10018e4a:	mov    DWORD PTR [edi+0x4],ebx
10018e4d:	mov    DWORD PTR [edi+0x8],ebx
10018e50:	mov    DWORD PTR [edi+0xc],ebx
10018e53:	je     0x10018e6f
10018e55:	call   0x1000a2b4
10018e5a:	test   al,al
10018e5c:	je     0x10018e6f
10018e5e:	push   DWORD PTR [edi+0x4]
10018e61:	mov    ecx,DWORD PTR [esi+0x4]
10018e64:	push   DWORD PTR [esi+0x8]
10018e67:	call   0x1000a9ec
10018e6c:	mov    DWORD PTR [edi+0x8],eax
10018e6f:	mov    eax,edi
10018e71:	pop    edi
10018e72:	pop    esi
10018e73:	pop    ebx
10018e74:	ret    
10018e75:	mov    eax,0x10080eb8
10018e7a:	call   0x1000473c
10018e7f:	cmp    DWORD PTR [esp+0x4],eax
10018e83:	jb     0x10018e8a
10018e85:	call   0x100435f0
10018e8a:	mov    eax,DWORD PTR [esp+0x4]
10018e8e:	shl    eax,0x5
10018e91:	add    eax,DWORD PTR ds:0x10080ebc
10018e97:	ret    0x4
10018e9a:	push   ebp
10018e9b:	mov    ebp,esp
10018e9d:	and    esp,0xfffffff8
10018ea0:	mov    edx,DWORD PTR [eax+0x4]
10018ea3:	mov    ecx,DWORD PTR ds:0x10080ebc
10018ea9:	mov    DWORD PTR ds:0x10080ebc,edx
10018eaf:	mov    DWORD PTR [eax+0x4],ecx
10018eb2:	mov    edx,DWORD PTR [eax+0x8]
10018eb5:	mov    ecx,DWORD PTR ds:0x10080ec0
10018ebb:	mov    DWORD PTR ds:0x10080ec0,edx
10018ec1:	mov    DWORD PTR [eax+0x8],ecx
10018ec4:	mov    edx,DWORD PTR [eax+0xc]
10018ec7:	mov    ecx,DWORD PTR ds:0x10080ec4
10018ecd:	mov    DWORD PTR ds:0x10080ec4,edx
10018ed3:	mov    DWORD PTR [eax+0xc],ecx
10018ed6:	mov    esp,ebp
10018ed8:	pop    ebp
10018ed9:	ret    
10018eda:	push   ebp
10018edb:	mov    ebp,esp
10018edd:	and    esp,0xfffffff8
10018ee0:	sub    esp,0x14
10018ee3:	mov    eax,DWORD PTR [ebx+0x4]
10018ee6:	push   esi
10018ee7:	mov    esi,DWORD PTR [eax+0x4]
10018eea:	mov    DWORD PTR [esp+0x8],eax
10018eee:	mov    al,0x1
10018ef0:	mov    BYTE PTR [esp+0xc],al
10018ef4:	jmp    0x10018f14
10018ef6:	mov    eax,DWORD PTR [ebp+0x8]
10018ef9:	lea    ecx,[esi+0xc]
10018efc:	mov    DWORD PTR [esp+0x8],esi
10018f00:	call   0x10004ea2
10018f05:	test   al,al
10018f07:	mov    BYTE PTR [esp+0xc],al
10018f0b:	je     0x10018f11
10018f0d:	mov    esi,DWORD PTR [esi]
10018f0f:	jmp    0x10018f14
10018f11:	mov    esi,DWORD PTR [esi+0x8]
10018f14:	cmp    BYTE PTR [esi+0x29],0x0
10018f18:	je     0x10018ef6
10018f1a:	test   al,al
10018f1c:	mov    ecx,DWORD PTR [esp+0x8]
10018f20:	mov    esi,ecx
10018f22:	mov    DWORD PTR [esp+0x14],esi
10018f26:	mov    DWORD PTR [esp+0x10],ebx
10018f2a:	je     0x10018f61
10018f2c:	mov    eax,DWORD PTR [ebx+0x4]
10018f2f:	cmp    ecx,DWORD PTR [eax]
10018f31:	jne    0x10018f54
10018f33:	push   DWORD PTR [ebp+0x8]
10018f36:	push   0x1
10018f38:	lea    eax,[esp+0x18]
10018f3c:	push   eax
10018f3d:	mov    esi,ebx
10018f3f:	call   0x10018fc1
10018f44:	mov    ecx,DWORD PTR [eax]
10018f46:	mov    eax,DWORD PTR [eax+0x4]
10018f49:	mov    DWORD PTR [edi],ecx
10018f4b:	mov    DWORD PTR [edi+0x4],eax
10018f4e:	mov    BYTE PTR [edi+0x8],0x1
10018f52:	jmp    0x10018f8a
10018f54:	lea    esi,[esp+0x10]
10018f58:	call   0x1002e6f8
10018f5d:	mov    esi,DWORD PTR [esp+0x14]
10018f61:	mov    ecx,DWORD PTR [ebp+0x8]
10018f64:	lea    eax,[esi+0xc]
10018f67:	call   0x10004ea2
10018f6c:	test   al,al
10018f6e:	je     0x10018f7d
10018f70:	push   DWORD PTR [ebp+0x8]
10018f73:	mov    ecx,DWORD PTR [esp+0xc]
10018f77:	push   DWORD PTR [esp+0x10]
10018f7b:	jmp    0x10018f38
10018f7d:	mov    eax,DWORD PTR [esp+0x10]
10018f81:	mov    DWORD PTR [edi],eax
10018f83:	mov    DWORD PTR [edi+0x4],esi
10018f86:	mov    BYTE PTR [edi+0x8],0x0
10018f8a:	mov    eax,edi
10018f8c:	pop    esi
10018f8d:	mov    esp,ebp
10018f8f:	pop    ebp
10018f90:	ret    0x4
10018f93:	push   ebp
10018f94:	mov    ebp,esp
10018f96:	and    esp,0xfffffff8
10018f99:	mov    edx,DWORD PTR [eax+0x4]
10018f9c:	mov    ecx,DWORD PTR ds:0x10080ed0
10018fa2:	mov    DWORD PTR ds:0x10080ed0,edx
10018fa8:	mov    DWORD PTR [eax+0x4],ecx
10018fab:	mov    edx,DWORD PTR [eax+0x8]
10018fae:	mov    ecx,DWORD PTR ds:0x10080ed4
10018fb4:	mov    DWORD PTR ds:0x10080ed4,edx
10018fba:	mov    DWORD PTR [eax+0x8],ecx
10018fbd:	mov    esp,ebp
10018fbf:	pop    ebp
10018fc0:	ret    
10018fc1:	push   0x48
10018fc3:	mov    eax,0x100603a7
10018fc8:	call   0x10059c75
10018fcd:	mov    edi,ecx
10018fcf:	cmp    DWORD PTR [esi+0x8],0x9249248
10018fd6:	jb     0x1001900a
10018fd8:	push   0x1006d04c
10018fdd:	lea    ecx,[ebp-0x2c]
10018fe0:	call   0x100011d1
10018fe5:	and    DWORD PTR [ebp-0x4],0x0
10018fe9:	lea    eax,[ebp-0x2c]
10018fec:	push   eax
10018fed:	lea    ecx,[ebp-0x54]
10018ff0:	call   0x1000106e
10018ff5:	push   0x10074ec0
10018ffa:	lea    eax,[ebp-0x54]
10018ffd:	push   eax
10018ffe:	mov    DWORD PTR [ebp-0x54],0x1006b96c
10019005:	call   0x10047c54
1001900a:	mov    eax,DWORD PTR [esi+0x4]
1001900d:	push   0x0
1001900f:	push   DWORD PTR [ebp+0x10]
10019012:	push   eax
10019013:	push   edi
10019014:	push   eax
10019015:	call   0x10019271
1001901a:	inc    DWORD PTR [esi+0x8]
1001901d:	mov    ebx,eax
1001901f:	mov    eax,DWORD PTR [esi+0x4]
10019022:	cmp    edi,eax
10019024:	jne    0x10019033
10019026:	mov    DWORD PTR [eax+0x4],ebx
10019029:	mov    eax,DWORD PTR [esi+0x4]
1001902c:	mov    DWORD PTR [eax],ebx
1001902e:	mov    eax,DWORD PTR [esi+0x4]
10019031:	jmp    0x10019051
10019033:	cmp    BYTE PTR [ebp+0xc],0x0
10019037:	je     0x10019046
10019039:	mov    DWORD PTR [edi],ebx
1001903b:	mov    eax,DWORD PTR [esi+0x4]
1001903e:	cmp    edi,DWORD PTR [eax]
10019040:	jne    0x10019054
10019042:	mov    DWORD PTR [eax],ebx
10019044:	jmp    0x10019054
10019046:	mov    DWORD PTR [edi+0x8],ebx
10019049:	mov    eax,DWORD PTR [esi+0x4]
1001904c:	cmp    edi,DWORD PTR [eax+0x8]
1001904f:	jne    0x10019054
10019051:	mov    DWORD PTR [eax+0x8],ebx
10019054:	mov    edi,ebx
10019056:	lea    eax,[ebx+0x4]
10019059:	jmp    0x100190e8
1001905e:	mov    ecx,DWORD PTR [eax]
10019060:	mov    edx,DWORD PTR [ecx+0x4]
10019063:	cmp    ecx,DWORD PTR [edx]
10019065:	jne    0x1001909c
10019067:	mov    edx,DWORD PTR [edx+0x8]
1001906a:	cmp    BYTE PTR [edx+0x28],0x0
1001906e:	je     0x100190a4
10019070:	cmp    edi,DWORD PTR [ecx+0x8]
10019073:	jne    0x1001907d
10019075:	push   esi
10019076:	mov    edi,ecx
10019078:	call   0x100191ef
1001907d:	mov    eax,DWORD PTR [edi+0x4]
10019080:	mov    BYTE PTR [eax+0x28],0x1
10019084:	mov    eax,DWORD PTR [edi+0x4]
10019087:	mov    eax,DWORD PTR [eax+0x4]
1001908a:	mov    BYTE PTR [eax+0x28],0x0
1001908e:	mov    eax,DWORD PTR [edi+0x4]
10019091:	mov    ecx,DWORD PTR [eax+0x4]
10019094:	push   esi
10019095:	call   0x1001922f
1001909a:	jmp    0x100190e5
1001909c:	mov    edx,DWORD PTR [edx]
1001909e:	cmp    BYTE PTR [edx+0x28],0x0
100190a2:	jne    0x100190bc
100190a4:	mov    BYTE PTR [ecx+0x28],0x1
100190a8:	mov    BYTE PTR [edx+0x28],0x1
100190ac:	mov    ecx,DWORD PTR [eax]
100190ae:	mov    ecx,DWORD PTR [ecx+0x4]
100190b1:	mov    BYTE PTR [ecx+0x28],0x0
100190b5:	mov    eax,DWORD PTR [eax]
100190b7:	mov    edi,DWORD PTR [eax+0x4]
100190ba:	jmp    0x100190e5
100190bc:	cmp    edi,DWORD PTR [ecx]
100190be:	jne    0x100190c8
100190c0:	push   esi
100190c1:	mov    edi,ecx
100190c3:	call   0x1001922f
100190c8:	mov    eax,DWORD PTR [edi+0x4]
100190cb:	mov    BYTE PTR [eax+0x28],0x1
100190cf:	mov    eax,DWORD PTR [edi+0x4]
100190d2:	mov    eax,DWORD PTR [eax+0x4]
100190d5:	mov    BYTE PTR [eax+0x28],0x0
100190d9:	mov    eax,DWORD PTR [edi+0x4]
100190dc:	mov    ecx,DWORD PTR [eax+0x4]
100190df:	push   esi
100190e0:	call   0x100191ef
100190e5:	lea    eax,[edi+0x4]
100190e8:	mov    ecx,DWORD PTR [eax]
100190ea:	cmp    BYTE PTR [ecx+0x28],0x0
100190ee:	je     0x1001905e
100190f4:	mov    eax,DWORD PTR [esi+0x4]
100190f7:	mov    eax,DWORD PTR [eax+0x4]
100190fa:	mov    BYTE PTR [eax+0x28],0x1
100190fe:	mov    eax,DWORD PTR [ebp+0x8]
10019101:	mov    DWORD PTR [eax+0x4],ebx
10019104:	mov    DWORD PTR [eax],esi
10019106:	call   0x10059d4d
1001910b:	ret    0xc
1001910e:	push   ebp
1001910f:	mov    ebp,esp
10019111:	and    esp,0xfffffff8
10019114:	push   ecx
10019115:	push   ecx
10019116:	push   ebx
10019117:	push   edi
10019118:	mov    edi,eax
1001911a:	mov    eax,DWORD PTR [edi+0x4]
1001911d:	mov    ecx,DWORD PTR [eax]
1001911f:	push   eax
10019120:	push   edi
10019121:	push   ecx
10019122:	push   edi
10019123:	lea    ebx,[esp+0x18]
10019127:	call   0x10019143
1001912c:	push   DWORD PTR [edi+0x4]
1001912f:	call   0x100430d2
10019134:	and    DWORD PTR [edi+0x4],0x0
10019138:	and    DWORD PTR [edi+0x8],0x0
1001913c:	pop    ecx
1001913d:	pop    edi
1001913e:	pop    ebx
1001913f:	mov    esp,ebp
10019141:	pop    ebp
10019142:	ret    
10019143:	push   ebp
10019144:	mov    ebp,esp
10019146:	mov    eax,DWORD PTR [edi+0x4]
10019149:	sub    esp,0x14
1001914c:	cmp    DWORD PTR [ebp+0x8],0x0
10019150:	push   esi
10019151:	mov    esi,DWORD PTR [eax]
10019153:	je     0x1001915a
10019155:	cmp    DWORD PTR [ebp+0x8],edi
10019158:	je     0x1001915f
1001915a:	call   0x100435f0
1001915f:	cmp    DWORD PTR [ebp+0xc],esi
10019162:	jne    0x100191a7
10019164:	cmp    DWORD PTR [ebp+0x10],0x0
10019168:	mov    esi,DWORD PTR [edi+0x4]
1001916b:	je     0x10019172
1001916d:	cmp    DWORD PTR [ebp+0x10],edi
10019170:	je     0x10019177
10019172:	call   0x100435f0
10019177:	cmp    DWORD PTR [ebp+0x14],esi
1001917a:	jne    0x100191a7
1001917c:	mov    eax,DWORD PTR [edi+0x4]
1001917f:	push   DWORD PTR [eax+0x4]
10019182:	mov    ecx,edi
10019184:	call   0x10019598
10019189:	mov    eax,DWORD PTR [edi+0x4]
1001918c:	mov    DWORD PTR [eax+0x4],eax
1001918f:	mov    eax,DWORD PTR [edi+0x4]
10019192:	and    DWORD PTR [edi+0x8],0x0
10019196:	mov    DWORD PTR [eax],eax
10019198:	mov    eax,DWORD PTR [edi+0x4]
1001919b:	mov    DWORD PTR [eax+0x8],eax
1001919e:	mov    eax,DWORD PTR [edi+0x4]
100191a1:	mov    eax,DWORD PTR [eax]
100191a3:	mov    DWORD PTR [ebx],edi
100191a5:	jmp    0x100191e5
100191a7:	mov    eax,DWORD PTR [ebp+0x8]
100191aa:	test   eax,eax
100191ac:	je     0x100191b3
100191ae:	cmp    eax,DWORD PTR [ebp+0x10]
100191b1:	je     0x100191b8
100191b3:	call   0x100435f0
100191b8:	mov    eax,DWORD PTR [ebp+0xc]
100191bb:	cmp    eax,DWORD PTR [ebp+0x14]
100191be:	mov    ecx,DWORD PTR [ebp+0x8]
100191c1:	je     0x100191e3
100191c3:	lea    esi,[ebp+0x8]
100191c6:	mov    DWORD PTR [ebp-0x8],ecx
100191c9:	mov    DWORD PTR [ebp-0x4],eax
100191cc:	call   0x1002df1d
100191d1:	push   DWORD PTR [ebp-0x4]
100191d4:	lea    eax,[ebp-0x10]
100191d7:	push   DWORD PTR [ebp-0x8]
100191da:	push   eax
100191db:	push   edi
100191dc:	call   0x100192d8
100191e1:	jmp    0x100191a7
100191e3:	mov    DWORD PTR [ebx],ecx
100191e5:	mov    DWORD PTR [ebx+0x4],eax
100191e8:	mov    eax,ebx
100191ea:	pop    esi
100191eb:	leave  
100191ec:	ret    0x10
100191ef:	mov    eax,DWORD PTR [ecx+0x8]
100191f2:	mov    edx,DWORD PTR [eax]
100191f4:	mov    DWORD PTR [ecx+0x8],edx
100191f7:	mov    edx,DWORD PTR [eax]
100191f9:	cmp    BYTE PTR [edx+0x29],0x0
100191fd:	jne    0x10019202
100191ff:	mov    DWORD PTR [edx+0x4],ecx
10019202:	mov    edx,DWORD PTR [ecx+0x4]
10019205:	mov    DWORD PTR [eax+0x4],edx
10019208:	mov    edx,DWORD PTR [esp+0x4]
1001920c:	mov    edx,DWORD PTR [edx+0x4]
1001920f:	cmp    ecx,DWORD PTR [edx+0x4]
10019212:	jne    0x10019219
10019214:	mov    DWORD PTR [edx+0x4],eax
10019217:	jmp    0x10019227
10019219:	mov    edx,DWORD PTR [ecx+0x4]
1001921c:	cmp    ecx,DWORD PTR [edx]
1001921e:	jne    0x10019224
10019220:	mov    DWORD PTR [edx],eax
10019222:	jmp    0x10019227
10019224:	mov    DWORD PTR [edx+0x8],eax
10019227:	mov    DWORD PTR [eax],ecx
10019229:	mov    DWORD PTR [ecx+0x4],eax
1001922c:	ret    0x4
1001922f:	mov    eax,DWORD PTR [ecx]
10019231:	mov    edx,DWORD PTR [eax+0x8]
10019234:	mov    DWORD PTR [ecx],edx
10019236:	mov    edx,DWORD PTR [eax+0x8]
10019239:	cmp    BYTE PTR [edx+0x29],0x0
1001923d:	jne    0x10019242
1001923f:	mov    DWORD PTR [edx+0x4],ecx
10019242:	mov    edx,DWORD PTR [ecx+0x4]
10019245:	mov    DWORD PTR [eax+0x4],edx
10019248:	mov    edx,DWORD PTR [esp+0x4]
1001924c:	mov    edx,DWORD PTR [edx+0x4]
1001924f:	cmp    ecx,DWORD PTR [edx+0x4]
10019252:	jne    0x10019259
10019254:	mov    DWORD PTR [edx+0x4],eax
10019257:	jmp    0x10019268
10019259:	mov    edx,DWORD PTR [ecx+0x4]
1001925c:	cmp    ecx,DWORD PTR [edx+0x8]
1001925f:	jne    0x10019266
10019261:	mov    DWORD PTR [edx+0x8],eax
10019264:	jmp    0x10019268
10019266:	mov    DWORD PTR [edx],eax
10019268:	mov    DWORD PTR [eax+0x8],ecx
1001926b:	mov    DWORD PTR [ecx+0x4],eax
1001926e:	ret    0x4
10019271:	push   0x8
10019273:	mov    eax,0x1005fde5
10019278:	call   0x10059ca8
1001927d:	push   0x2c
1001927f:	call   0x100436de
10019284:	mov    esi,eax
10019286:	pop    ecx
10019287:	mov    DWORD PTR [ebp-0x14],esi
1001928a:	test   esi,esi
1001928c:	mov    DWORD PTR [ebp-0x4],0x1
10019293:	je     0x100192bb
10019295:	mov    eax,DWORD PTR [ebp+0x8]
10019298:	push   DWORD PTR [ebp+0x14]
1001929b:	mov    DWORD PTR [esi],eax
1001929d:	mov    eax,DWORD PTR [ebp+0xc]
100192a0:	mov    DWORD PTR [esi+0x4],eax
100192a3:	mov    eax,DWORD PTR [ebp+0x10]
100192a6:	lea    ecx,[esi+0xc]
100192a9:	mov    DWORD PTR [esi+0x8],eax
100192ac:	call   0x100011ab
100192b1:	mov    al,BYTE PTR [ebp+0x18]
100192b4:	mov    BYTE PTR [esi+0x28],al
100192b7:	mov    BYTE PTR [esi+0x29],0x0
100192bb:	mov    eax,esi
100192bd:	call   0x10059d4d
100192c2:	ret    0x14
100192c5:	push   DWORD PTR [ebp-0x14]
100192c8:	call   0x100430d2
100192cd:	pop    ecx
100192ce:	push   0x0
100192d0:	push   0x0
100192d2:	call   0x10047c54
100192d7:	int3   
100192d8:	push   0x44
100192da:	mov    eax,0x10060338
100192df:	call   0x10059c75
100192e4:	mov    ebx,DWORD PTR [ebp+0x14]
100192e7:	cmp    BYTE PTR [ebx+0x29],0x0
100192eb:	je     0x1001931f
100192ed:	push   0x1006ccec
100192f2:	lea    ecx,[ebp-0x28]
100192f5:	call   0x100011d1
100192fa:	and    DWORD PTR [ebp-0x4],0x0
100192fe:	lea    eax,[ebp-0x28]
10019301:	push   eax
10019302:	lea    ecx,[ebp-0x50]
10019305:	call   0x1000106e
1001930a:	push   0x10074de0
1001930f:	lea    eax,[ebp-0x50]
10019312:	push   eax
10019313:	mov    DWORD PTR [ebp-0x50],0x1006b978
1001931a:	call   0x10047c54
1001931f:	lea    esi,[ebp+0x10]
10019322:	call   0x1002df1d
10019327:	mov    ecx,DWORD PTR [ebx]
10019329:	cmp    BYTE PTR [ecx+0x29],0x0
1001932d:	je     0x10019334
1001932f:	mov    edi,DWORD PTR [ebx+0x8]
10019332:	jmp    0x1001934b
10019334:	mov    eax,DWORD PTR [ebx+0x8]
10019337:	cmp    BYTE PTR [eax+0x29],0x0
1001933b:	je     0x10019341
1001933d:	mov    edi,ecx
1001933f:	jmp    0x1001934b
10019341:	mov    eax,DWORD PTR [ebp+0x14]
10019344:	cmp    eax,ebx
10019346:	mov    edi,DWORD PTR [eax+0x8]
10019349:	jne    0x100193c1
1001934b:	cmp    BYTE PTR [edi+0x29],0x0
1001934f:	mov    esi,DWORD PTR [ebx+0x4]
10019352:	jne    0x10019357
10019354:	mov    DWORD PTR [edi+0x4],esi
10019357:	mov    ecx,DWORD PTR [ebp+0x8]
1001935a:	mov    eax,DWORD PTR [ecx+0x4]
1001935d:	cmp    DWORD PTR [eax+0x4],ebx
10019360:	jne    0x10019367
10019362:	mov    DWORD PTR [eax+0x4],edi
10019365:	jmp    0x10019372
10019367:	cmp    DWORD PTR [esi],ebx
10019369:	jne    0x1001936f
1001936b:	mov    DWORD PTR [esi],edi
1001936d:	jmp    0x10019372
1001936f:	mov    DWORD PTR [esi+0x8],edi
10019372:	mov    edx,DWORD PTR [ecx+0x4]
10019375:	cmp    DWORD PTR [edx],ebx
10019377:	jne    0x10019395
10019379:	cmp    BYTE PTR [edi+0x29],0x0
1001937d:	je     0x10019383
1001937f:	mov    ecx,esi
10019381:	jmp    0x10019393
10019383:	mov    eax,DWORD PTR [edi]
10019385:	mov    ecx,edi
10019387:	jmp    0x1001938d
10019389:	mov    ecx,eax
1001938b:	mov    eax,DWORD PTR [ecx]
1001938d:	cmp    BYTE PTR [eax+0x29],0x0
10019391:	je     0x10019389
10019393:	mov    DWORD PTR [edx],ecx
10019395:	mov    eax,DWORD PTR [ebp+0x8]
10019398:	mov    edx,DWORD PTR [eax+0x4]
1001939b:	cmp    DWORD PTR [edx+0x8],ebx
1001939e:	jne    0x1001941b
100193a0:	cmp    BYTE PTR [edi+0x29],0x0
100193a4:	je     0x100193aa
100193a6:	mov    ecx,esi
100193a8:	jmp    0x100193bc
100193aa:	mov    eax,DWORD PTR [edi+0x8]
100193ad:	mov    ecx,edi
100193af:	jmp    0x100193b6
100193b1:	mov    ecx,eax
100193b3:	mov    eax,DWORD PTR [ecx+0x8]
100193b6:	cmp    BYTE PTR [eax+0x29],0x0
100193ba:	je     0x100193b1
100193bc:	mov    DWORD PTR [edx+0x8],ecx
100193bf:	jmp    0x1001941b
100193c1:	mov    DWORD PTR [ecx+0x4],eax
100193c4:	mov    ecx,DWORD PTR [ebx]
100193c6:	mov    DWORD PTR [eax],ecx
100193c8:	cmp    eax,DWORD PTR [ebx+0x8]
100193cb:	jne    0x100193d1
100193cd:	mov    esi,eax
100193cf:	jmp    0x100193eb
100193d1:	cmp    BYTE PTR [edi+0x29],0x0
100193d5:	mov    esi,DWORD PTR [eax+0x4]
100193d8:	jne    0x100193dd
100193da:	mov    DWORD PTR [edi+0x4],esi
100193dd:	mov    DWORD PTR [esi],edi
100193df:	mov    ecx,DWORD PTR [ebx+0x8]
100193e2:	mov    DWORD PTR [eax+0x8],ecx
100193e5:	mov    ecx,DWORD PTR [ebx+0x8]
100193e8:	mov    DWORD PTR [ecx+0x4],eax
100193eb:	mov    ecx,DWORD PTR [ebp+0x8]
100193ee:	mov    ecx,DWORD PTR [ecx+0x4]
100193f1:	cmp    DWORD PTR [ecx+0x4],ebx
100193f4:	jne    0x100193fb
100193f6:	mov    DWORD PTR [ecx+0x4],eax
100193f9:	jmp    0x10019409
100193fb:	mov    ecx,DWORD PTR [ebx+0x4]
100193fe:	cmp    DWORD PTR [ecx],ebx
10019400:	jne    0x10019406
10019402:	mov    DWORD PTR [ecx],eax
10019404:	jmp    0x10019409
10019406:	mov    DWORD PTR [ecx+0x8],eax
10019409:	mov    ecx,DWORD PTR [ebx+0x4]
1001940c:	mov    DWORD PTR [eax+0x4],ecx
1001940f:	mov    dl,BYTE PTR [ebx+0x28]
10019412:	mov    cl,BYTE PTR [eax+0x28]
10019415:	mov    BYTE PTR [eax+0x28],dl
10019418:	mov    BYTE PTR [ebx+0x28],cl
1001941b:	cmp    BYTE PTR [ebx+0x28],0x1
1001941f:	jne    0x10019537
10019425:	jmp    0x100194eb
1001942a:	cmp    BYTE PTR [edi+0x28],0x1
1001942e:	jne    0x10019533
10019434:	mov    ecx,DWORD PTR [esi]
10019436:	cmp    edi,ecx
10019438:	jne    0x100194b1
1001943a:	mov    ecx,DWORD PTR [esi+0x8]
1001943d:	cmp    BYTE PTR [ecx+0x28],0x0
10019441:	jne    0x10019458
10019443:	push   DWORD PTR [ebp+0x8]
10019446:	mov    BYTE PTR [ecx+0x28],0x1
1001944a:	mov    ecx,esi
1001944c:	mov    BYTE PTR [esi+0x28],0x0
10019450:	call   0x100191ef
10019455:	mov    ecx,DWORD PTR [esi+0x8]
10019458:	cmp    BYTE PTR [ecx+0x29],0x0
1001945c:	jne    0x100194e6
10019462:	mov    eax,DWORD PTR [ecx]
10019464:	cmp    BYTE PTR [eax+0x28],0x1
10019468:	jne    0x10019473
1001946a:	mov    eax,DWORD PTR [ecx+0x8]
1001946d:	cmp    BYTE PTR [eax+0x28],0x1
10019471:	je     0x100194e2
10019473:	mov    eax,DWORD PTR [ecx+0x8]
10019476:	cmp    BYTE PTR [eax+0x28],0x1
1001947a:	jne    0x10019491
1001947c:	mov    eax,DWORD PTR [ecx]
1001947e:	push   DWORD PTR [ebp+0x8]
10019481:	mov    BYTE PTR [eax+0x28],0x1
10019485:	mov    BYTE PTR [ecx+0x28],0x0
10019489:	call   0x1001922f
1001948e:	mov    ecx,DWORD PTR [esi+0x8]
10019491:	mov    al,BYTE PTR [esi+0x28]
10019494:	push   DWORD PTR [ebp+0x8]
10019497:	mov    BYTE PTR [ecx+0x28],al
1001949a:	mov    BYTE PTR [esi+0x28],0x1
1001949e:	mov    eax,DWORD PTR [ecx+0x8]
100194a1:	mov    ecx,esi
100194a3:	mov    BYTE PTR [eax+0x28],0x1
100194a7:	call   0x100191ef
100194ac:	jmp    0x10019533
100194b1:	cmp    BYTE PTR [ecx+0x28],0x0
100194b5:	jne    0x100194cb
100194b7:	push   DWORD PTR [ebp+0x8]
100194ba:	mov    BYTE PTR [ecx+0x28],0x1
100194be:	mov    ecx,esi
100194c0:	mov    BYTE PTR [esi+0x28],0x0
100194c4:	call   0x1001922f
100194c9:	mov    ecx,DWORD PTR [esi]
100194cb:	cmp    BYTE PTR [ecx+0x29],0x0
100194cf:	jne    0x100194e6
100194d1:	mov    eax,DWORD PTR [ecx+0x8]
100194d4:	cmp    BYTE PTR [eax+0x28],0x1
100194d8:	jne    0x100194fc
100194da:	mov    eax,DWORD PTR [ecx]
100194dc:	cmp    BYTE PTR [eax+0x28],0x1
100194e0:	jne    0x100194fc
100194e2:	mov    BYTE PTR [ecx+0x28],0x0
100194e6:	mov    edi,esi
100194e8:	mov    esi,DWORD PTR [esi+0x4]
100194eb:	mov    eax,DWORD PTR [ebp+0x8]
100194ee:	mov    eax,DWORD PTR [eax+0x4]
100194f1:	cmp    edi,DWORD PTR [eax+0x4]
100194f4:	jne    0x1001942a
100194fa:	jmp    0x10019533
100194fc:	mov    eax,DWORD PTR [ecx]
100194fe:	cmp    BYTE PTR [eax+0x28],0x1
10019502:	jne    0x10019519
10019504:	mov    eax,DWORD PTR [ecx+0x8]
10019507:	push   DWORD PTR [ebp+0x8]
1001950a:	mov    BYTE PTR [eax+0x28],0x1
1001950e:	mov    BYTE PTR [ecx+0x28],0x0
10019512:	call   0x100191ef
10019517:	mov    ecx,DWORD PTR [esi]
10019519:	mov    al,BYTE PTR [esi+0x28]
1001951c:	push   DWORD PTR [ebp+0x8]
1001951f:	mov    BYTE PTR [ecx+0x28],al
10019522:	mov    BYTE PTR [esi+0x28],0x1
10019526:	mov    eax,DWORD PTR [ecx]
10019528:	mov    ecx,esi
1001952a:	mov    BYTE PTR [eax+0x28],0x1
1001952e:	call   0x1001922f
10019533:	mov    BYTE PTR [edi+0x28],0x1
10019537:	push   0x0
10019539:	push   0x1
1001953b:	lea    ecx,[ebx+0xc]
1001953e:	call   0x100012f4
10019543:	push   ebx
10019544:	call   0x100430d2
10019549:	pop    ecx
1001954a:	mov    ecx,DWORD PTR [ebp+0x8]
1001954d:	mov    eax,DWORD PTR [ecx+0x8]
10019550:	test   eax,eax
10019552:	jbe    0x10019558
10019554:	dec    eax
10019555:	mov    DWORD PTR [ecx+0x8],eax
10019558:	mov    ecx,DWORD PTR [ebp+0x10]
1001955b:	mov    eax,DWORD PTR [ebp+0xc]
1001955e:	mov    DWORD PTR [eax],ecx
10019560:	mov    ecx,DWORD PTR [ebp+0x14]
10019563:	mov    DWORD PTR [eax+0x4],ecx
10019566:	call   0x10059d4d
1001956b:	ret    0x10
1001956e:	push   0x2c
10019570:	call   0x100436de
10019575:	xor    edx,edx
10019577:	cmp    eax,edx
10019579:	pop    ecx
1001957a:	je     0x1001957e
1001957c:	mov    DWORD PTR [eax],edx
1001957e:	lea    ecx,[eax+0x4]
10019581:	cmp    ecx,edx
10019583:	je     0x10019587
10019585:	mov    DWORD PTR [ecx],edx
10019587:	lea    ecx,[eax+0x8]
1001958a:	cmp    ecx,edx
1001958c:	je     0x10019590
1001958e:	mov    DWORD PTR [ecx],edx
10019590:	mov    BYTE PTR [eax+0x28],0x1
10019594:	mov    BYTE PTR [eax+0x29],dl
10019597:	ret    
10019598:	push   ebx
10019599:	push   esi
1001959a:	push   edi
1001959b:	mov    edi,DWORD PTR [esp+0x10]
1001959f:	cmp    BYTE PTR [edi+0x29],0x0
100195a3:	mov    ebx,ecx
100195a5:	mov    esi,edi
100195a7:	jne    0x100195d0
100195a9:	push   DWORD PTR [esi+0x8]
100195ac:	mov    ecx,ebx
100195ae:	call   0x10019598
100195b3:	mov    esi,DWORD PTR [esi]
100195b5:	push   0x0
100195b7:	push   0x1
100195b9:	lea    ecx,[edi+0xc]
100195bc:	call   0x100012f4
100195c1:	push   edi
100195c2:	call   0x100430d2
100195c7:	cmp    BYTE PTR [esi+0x29],0x0
100195cb:	pop    ecx
100195cc:	mov    edi,esi
100195ce:	je     0x100195a9
100195d0:	pop    edi
100195d1:	pop    esi
100195d2:	pop    ebx
100195d3:	ret    0x4
100195d6:	push   ebx
100195d7:	push   esi
100195d8:	mov    esi,DWORD PTR [esp+0xc]
100195dc:	push   edi
100195dd:	mov    edi,ecx
100195df:	sub    esi,edi
100195e1:	sar    esi,0x5
100195e4:	shl    esi,0x5
100195e7:	mov    ebx,eax
100195e9:	add    esi,ebx
100195eb:	cmp    edi,DWORD PTR [esp+0x10]
100195ef:	je     0x10019610
100195f1:	sub    ebx,edi
100195f3:	push   0xffffffff
100195f5:	push   0x0
100195f7:	push   edi
100195f8:	lea    ecx,[ebx+edi*1]
100195fb:	call   0x10001245
10019600:	mov    eax,DWORD PTR [edi+0x1c]
10019603:	mov    DWORD PTR [ebx+edi*1+0x1c],eax
10019607:	add    edi,0x20
1001960a:	cmp    edi,DWORD PTR [esp+0x10]
1001960e:	jne    0x100195f3
10019610:	pop    edi
10019611:	mov    eax,esi
10019613:	pop    esi
10019614:	pop    ebx
10019615:	ret    
10019616:	push   ebp
10019617:	mov    ebp,esp
10019619:	and    esp,0xfffffff8
1001961c:	push   0xffffffff
1001961e:	push   0x10060f1e
10019623:	mov    eax,fs:0x0
10019629:	push   eax
1001962a:	sub    esp,0x18
1001962d:	push   esi
1001962e:	mov    eax,ds:0x1007e030
10019633:	xor    eax,esp
10019635:	push   eax
10019636:	lea    eax,[esp+0x20]
1001963a:	mov    fs:0x0,eax
10019640:	mov    esi,ecx
10019642:	and    DWORD PTR [esp+0xc],0x0
10019647:	push   0x1f4
1001964c:	push   DWORD PTR [esi+0xc]
1001964f:	call   DWORD PTR ds:0x10066084
10019655:	test   eax,eax
10019657:	je     0x10019667
10019659:	call   0x100197ce
1001965e:	and    DWORD PTR [edi+0x8],0x0
10019662:	mov    DWORD PTR [edi+0x4],eax
10019665:	jmp    0x1001969e
10019667:	lea    eax,[esp+0x10]
1001966b:	push   eax
1001966c:	mov    ecx,esi
1001966e:	call   0x100196b1
10019673:	and    DWORD PTR [esp+0x28],0x0
10019678:	push   DWORD PTR [esi+0xc]
1001967b:	call   DWORD PTR ds:0x10066094
10019681:	push   edi
10019682:	lea    ecx,[esp+0x14]
10019686:	call   0x100196b1
1001968b:	lea    esi,[esp+0x10]
1001968f:	call   0x10019727
10019694:	push   DWORD PTR [esp+0x14]
10019698:	call   0x100430d2
1001969d:	pop    ecx
1001969e:	mov    eax,edi
100196a0:	mov    ecx,DWORD PTR [esp+0x20]
100196a4:	mov    DWORD PTR fs:0x0,ecx
100196ab:	pop    ecx
100196ac:	pop    esi
100196ad:	mov    esp,ebp
100196af:	pop    ebp
100196b0:	ret    
100196b1:	push   0x8
100196b3:	mov    eax,0x10060efb
100196b8:	call   0x10059ca8
100196bd:	mov    edi,ecx
100196bf:	mov    esi,DWORD PTR [ebp+0x8]
100196c2:	call   0x100197ce
100196c7:	xor    ecx,ecx
100196c9:	mov    DWORD PTR [ebp-0x4],ecx
100196cc:	mov    DWORD PTR [esi+0x4],eax
100196cf:	mov    DWORD PTR [esi+0x8],ecx
100196d2:	mov    ecx,DWORD PTR [edi+0x4]
100196d5:	mov    edx,DWORD PTR [ecx]
100196d7:	mov    eax,DWORD PTR [eax]
100196d9:	push   ecx
100196da:	push   edi
100196db:	push   edx
100196dc:	push   edi
100196dd:	push   eax
100196de:	push   esi
100196df:	push   DWORD PTR [ebp+0x8]
100196e2:	push   esi
100196e3:	call   0x10019840
100196e8:	mov    eax,esi
100196ea:	call   0x10059d4d
100196ef:	ret    0x4
100196f2:	mov    esi,DWORD PTR [ebp+0x8]
100196f5:	call   0x10019727
100196fa:	push   DWORD PTR [esi+0x4]
100196fd:	call   0x100430d2
10019702:	pop    ecx
10019703:	xor    ecx,ecx
10019705:	push   ecx
10019706:	push   ecx
10019707:	mov    DWORD PTR [esi+0x4],ecx
1001970a:	call   0x10047c54
1001970f:	int3   
10019710:	push   esi
10019711:	mov    esi,eax
10019713:	call   0x10019727
10019718:	push   DWORD PTR [esi+0x4]
1001971b:	call   0x100430d2
10019720:	and    DWORD PTR [esi+0x4],0x0
10019724:	pop    ecx
10019725:	pop    esi
10019726:	ret    
10019727:	mov    eax,DWORD PTR [esi+0x4]
1001972a:	push   edi
1001972b:	mov    edi,DWORD PTR [eax]
1001972d:	mov    DWORD PTR [eax],eax
1001972f:	mov    eax,DWORD PTR [esi+0x4]
10019732:	mov    DWORD PTR [eax+0x4],eax
10019735:	and    DWORD PTR [esi+0x8],0x0
10019739:	cmp    edi,DWORD PTR [esi+0x4]
1001973c:	je     0x1001975c
1001973e:	push   ebx
1001973f:	mov    ebx,DWORD PTR [edi]
10019741:	push   0x0
10019743:	push   0x1
10019745:	lea    ecx,[edi+0x8]
10019748:	call   0x100012f4
1001974d:	push   edi
1001974e:	call   0x100430d2
10019753:	cmp    ebx,DWORD PTR [esi+0x4]
10019756:	pop    ecx
10019757:	mov    edi,ebx
10019759:	jne    0x1001973f
1001975b:	pop    ebx
1001975c:	pop    edi
1001975d:	ret    
1001975e:	push   0x48
10019760:	mov    eax,0x100603a7
10019765:	call   0x10059c75
1001976a:	push   DWORD PTR [ebp+0x8]
1001976d:	mov    esi,DWORD PTR [ebp+0x10]
10019770:	push   DWORD PTR [esi+0x4]
10019773:	push   esi
10019774:	call   0x100197e6
10019779:	mov    ecx,DWORD PTR [edi+0x8]
1001977c:	mov    edx,0x9249249
10019781:	sub    edx,ecx
10019783:	cmp    edx,0x1
10019786:	jae    0x100197ba
10019788:	push   0x1006fed8
1001978d:	lea    ecx,[ebp-0x2c]
10019790:	call   0x100011d1
10019795:	and    DWORD PTR [ebp-0x4],0x0
10019799:	lea    eax,[ebp-0x2c]
1001979c:	push   eax
1001979d:	lea    ecx,[ebp-0x54]
100197a0:	call   0x1000106e
100197a5:	push   0x10074ec0
100197aa:	lea    eax,[ebp-0x54]
100197ad:	push   eax
100197ae:	mov    DWORD PTR [ebp-0x54],0x1006b96c
100197b5:	call   0x10047c54
100197ba:	inc    ecx
100197bb:	mov    DWORD PTR [edi+0x8],ecx
100197be:	mov    DWORD PTR [esi+0x4],eax
100197c1:	mov    ecx,DWORD PTR [eax+0x4]
100197c4:	mov    DWORD PTR [ecx],eax
100197c6:	call   0x10059d4d
100197cb:	ret    0xc
100197ce:	push   0x24
100197d0:	call   0x100436de
100197d5:	test   eax,eax
100197d7:	pop    ecx
100197d8:	je     0x100197dc
100197da:	mov    DWORD PTR [eax],eax
100197dc:	lea    ecx,[eax+0x4]
100197df:	test   ecx,ecx
100197e1:	je     0x100197e5
100197e3:	mov    DWORD PTR [ecx],eax
100197e5:	ret    
100197e6:	push   0x8
100197e8:	mov    eax,0x1006053a
100197ed:	call   0x10059ca8
100197f2:	push   0x24
100197f4:	call   0x100436de
100197f9:	and    DWORD PTR [ebp-0x4],0x0
100197fd:	mov    esi,eax
100197ff:	test   esi,esi
10019801:	pop    ecx
10019802:	mov    DWORD PTR [ebp-0x14],esi
10019805:	je     0x1001980c
10019807:	mov    eax,DWORD PTR [ebp+0x8]
1001980a:	mov    DWORD PTR [esi],eax
1001980c:	lea    eax,[esi+0x4]
1001980f:	test   eax,eax
10019811:	je     0x10019818
10019813:	mov    ecx,DWORD PTR [ebp+0xc]
10019816:	mov    DWORD PTR [eax],ecx
10019818:	push   DWORD PTR [ebp+0x10]
1001981b:	lea    ecx,[esi+0x8]
1001981e:	call   0x100100c8
10019823:	mov    eax,esi
10019825:	call   0x10059d4d
1001982a:	ret    0xc
1001982d:	push   DWORD PTR [ebp-0x14]
10019830:	call   0x100430d2
10019835:	pop    ecx
10019836:	push   0x0
10019838:	push   0x0
1001983a:	call   0x10047c54
1001983f:	int3   
10019840:	push   0x14
10019842:	mov    eax,0x10060ee0
10019847:	call   0x10059ca8
1001984c:	mov    edi,DWORD PTR [ebp+0x18]
1001984f:	mov    esi,DWORD PTR [ebp+0x1c]
10019852:	and    DWORD PTR [ebp-0x4],0x0
10019856:	mov    DWORD PTR [ebp-0x18],edi
10019859:	mov    DWORD PTR [ebp-0x14],esi
1001985c:	test   edi,edi
1001985e:	je     0x10019865
10019860:	cmp    edi,DWORD PTR [ebp+0x20]
10019863:	je     0x1001986a
10019865:	call   0x100435f0
1001986a:	cmp    esi,DWORD PTR [ebp+0x24]
1001986d:	je     0x10019901
10019873:	test   edi,edi
10019875:	jne    0x1001987c
10019877:	call   0x100435f0
1001987c:	cmp    esi,DWORD PTR [edi+0x4]
1001987f:	jne    0x10019886
10019881:	call   0x100435f0
10019886:	push   DWORD PTR [ebp+0x14]
10019889:	mov    edi,DWORD PTR [ebp+0x8]
1001988c:	push   DWORD PTR [ebp+0x10]
1001988f:	add    esi,0x8
10019892:	push   esi
10019893:	call   0x1001975e
10019898:	lea    esi,[ebp+0x18]
1001989b:	call   0x1001995f
100198a0:	mov    esi,DWORD PTR [ebp+0x1c]
100198a3:	mov    edi,DWORD PTR [ebp+0x18]
100198a6:	jmp    0x1001985c
100198a8:	mov    edi,DWORD PTR [ebp+0x14]
100198ab:	mov    eax,DWORD PTR [ebp-0x18]
100198ae:	test   eax,eax
100198b0:	je     0x100198b7
100198b2:	cmp    eax,DWORD PTR [ebp+0x18]
100198b5:	je     0x100198bc
100198b7:	call   0x100435f0
100198bc:	mov    eax,DWORD PTR [ebp-0x14]
100198bf:	cmp    eax,DWORD PTR [ebp+0x1c]
100198c2:	je     0x100198f8
100198c4:	mov    ebx,DWORD PTR [ebp+0x10]
100198c7:	test   ebx,ebx
100198c9:	mov    DWORD PTR [ebp+0x24],edi
100198cc:	jne    0x100198d3
100198ce:	call   0x100435f0
100198d3:	mov    esi,DWORD PTR [edi+0x4]
100198d6:	cmp    esi,DWORD PTR [ebx+0x4]
100198d9:	jne    0x100198e0
100198db:	call   0x100435f0
100198e0:	push   esi
100198e1:	push   ebx
100198e2:	mov    ebx,DWORD PTR [ebp+0x8]
100198e5:	lea    eax,[ebp-0x20]
100198e8:	push   eax
100198e9:	call   0x10019909
100198ee:	lea    esi,[ebp-0x18]
100198f1:	call   0x1001995f
100198f6:	jmp    0x100198ab
100198f8:	push   0x0
100198fa:	push   0x0
100198fc:	call   0x10047c54
10019901:	call   0x10059d4d
10019906:	ret    0x20
10019909:	push   ebp
1001990a:	mov    ebp,esp
1001990c:	push   ecx
1001990d:	push   ecx
1001990e:	mov    eax,DWORD PTR [ebp+0xc]
10019911:	push   esi
10019912:	push   edi
10019913:	mov    edi,DWORD PTR [ebp+0x10]
10019916:	lea    esi,[ebp+0xc]
10019919:	mov    DWORD PTR [ebp-0x8],eax
1001991c:	call   0x1001995f
10019921:	cmp    edi,DWORD PTR [ebx+0x4]
10019924:	je     0x1001994b
10019926:	mov    eax,DWORD PTR [edi+0x4]
10019929:	mov    ecx,DWORD PTR [edi]
1001992b:	mov    DWORD PTR [eax],ecx
1001992d:	mov    ecx,DWORD PTR [edi+0x4]
10019930:	mov    eax,DWORD PTR [edi]
10019932:	push   0x0
10019934:	mov    DWORD PTR [eax+0x4],ecx
10019937:	push   0x1
10019939:	lea    ecx,[edi+0x8]
1001993c:	call   0x100012f4
10019941:	push   edi
10019942:	call   0x100430d2
10019947:	dec    DWORD PTR [ebx+0x8]
1001994a:	pop    ecx
1001994b:	mov    ecx,DWORD PTR [ebp+0xc]
1001994e:	mov    eax,DWORD PTR [ebp+0x8]
10019951:	mov    DWORD PTR [eax],ecx
10019953:	mov    ecx,DWORD PTR [ebp+0x10]
10019956:	pop    edi
10019957:	mov    DWORD PTR [eax+0x4],ecx
1001995a:	pop    esi
1001995b:	leave  
1001995c:	ret    0xc
1001995f:	cmp    DWORD PTR [esi],0x0
10019962:	jne    0x10019969
10019964:	call   0x100435f0
10019969:	mov    eax,DWORD PTR [esi]
1001996b:	mov    ecx,DWORD PTR [esi+0x4]
1001996e:	cmp    ecx,DWORD PTR [eax+0x4]
10019971:	jne    0x10019978
10019973:	call   0x100435f0
10019978:	mov    eax,DWORD PTR [esi+0x4]
1001997b:	mov    eax,DWORD PTR [eax]
1001997d:	mov    DWORD PTR [esi+0x4],eax
10019980:	mov    eax,esi
10019982:	ret    
10019983:	push   esi
10019984:	push   0x1006cd08
10019989:	lea    esi,[edi+0x4]
1001998c:	call   0x100065b3
10019991:	test   al,al
10019993:	pop    ecx
10019994:	pop    esi
10019995:	je     0x100199a0
10019997:	cmp    DWORD PTR [edi],0x0
1001999a:	jne    0x100199a0
1001999c:	xor    eax,eax
1001999e:	inc    eax
1001999f:	ret    
100199a0:	xor    eax,eax
100199a2:	ret    
100199a3:	push   0x0
100199a5:	mov    eax,0x10060962
100199aa:	call   0x10059c75
100199af:	mov    edi,DWORD PTR [ebp+0x8]
100199b2:	call   0x1001a3c6
100199b7:	lea    ecx,[edi+0x4]
100199ba:	mov    DWORD PTR [ecx],eax
100199bc:	mov    BYTE PTR [eax+0x4d],0x1
100199c0:	mov    eax,DWORD PTR [ecx]
100199c2:	mov    DWORD PTR [eax+0x4],eax
100199c5:	mov    eax,DWORD PTR [ecx]
100199c7:	mov    DWORD PTR [eax],eax
100199c9:	mov    ecx,DWORD PTR [ecx]
100199cb:	xor    ebx,ebx
100199cd:	mov    DWORD PTR [ecx+0x8],ecx
100199d0:	mov    DWORD PTR [edi+0x8],ebx
100199d3:	lea    esi,[edi+0xc]
100199d6:	mov    DWORD PTR [ebp-0x4],ebx
100199d9:	call   0x1001404c
100199de:	mov    eax,DWORD PTR [ebp+0xc]
100199e1:	push   ebx
100199e2:	mov    DWORD PTR [edi+0x1c],eax
100199e5:	mov    eax,DWORD PTR [ebp+0x10]
100199e8:	push   ebx
100199e9:	push   ebx
100199ea:	mov    DWORD PTR [edi+0x20],eax
100199ed:	call   DWORD PTR ds:0x10066074
100199f3:	mov    DWORD PTR [edi+0x18],eax
100199f6:	mov    eax,edi
100199f8:	call   0x10059d4d
100199fd:	ret    0xc
10019a00:	push   ebp
10019a01:	mov    ebp,esp
10019a03:	and    esp,0xfffffff8
10019a06:	push   0xffffffff
10019a08:	push   0x10061f21
10019a0d:	mov    eax,fs:0x0
10019a13:	push   eax
10019a14:	sub    esp,0x60
10019a17:	mov    eax,ds:0x1007e030
10019a1c:	xor    eax,esp
10019a1e:	mov    DWORD PTR [esp+0x58],eax
10019a22:	push   esi
10019a23:	mov    eax,ds:0x1007e030
10019a28:	xor    eax,esp
10019a2a:	push   eax
10019a2b:	lea    eax,[esp+0x68]
10019a2f:	mov    fs:0x0,eax
10019a35:	mov    eax,DWORD PTR [ebp+0x8]
10019a38:	push   eax
10019a39:	lea    esi,[esp+0x2c]
10019a3d:	call   0x10030580
10019a42:	pop    ecx
10019a43:	lea    ecx,[esp+0x44]
10019a47:	push   ecx
10019a48:	xor    esi,esi
10019a4a:	mov    ecx,eax
10019a4c:	mov    DWORD PTR [esp+0x74],esi
10019a50:	call   0x1002fce0
10019a55:	pop    ecx
10019a56:	push   esi
10019a57:	push   0x1
10019a59:	lea    ecx,[esp+0x30]
10019a5d:	mov    BYTE PTR [esp+0x78],0x2
10019a62:	call   0x100012f4
10019a67:	mov    eax,DWORD PTR [ebp+0xc]
10019a6a:	push   ebx
10019a6b:	lea    ecx,[esp+0x10]
10019a6f:	mov    DWORD PTR [esp+0xc],eax
10019a73:	call   0x100011ab
10019a78:	lea    eax,[esp+0x8]
10019a7c:	push   eax
10019a7d:	lea    edx,[esp+0x48]
10019a81:	mov    ecx,edi
10019a83:	mov    BYTE PTR [esp+0x74],0x3
10019a88:	call   0x10019c39
10019a8d:	push   esi
10019a8e:	push   0x1
10019a90:	lea    ecx,[esp+0x14]
10019a94:	call   0x100012f4
10019a99:	push   esi
10019a9a:	push   0x1
10019a9c:	lea    ecx,[esp+0x4c]
10019aa0:	call   0x100012f4
10019aa5:	mov    ecx,DWORD PTR [esp+0x68]
10019aa9:	mov    DWORD PTR fs:0x0,ecx
10019ab0:	pop    ecx
10019ab1:	pop    esi
10019ab2:	mov    ecx,DWORD PTR [esp+0x58]
10019ab6:	xor    ecx,esp
10019ab8:	call   0x100430d7
10019abd:	mov    esp,ebp
10019abf:	pop    ebp
10019ac0:	ret    0x8
10019ac3:	push   ebp
10019ac4:	mov    ebp,esp
10019ac6:	and    esp,0xfffffff8
10019ac9:	push   0xffffffff
10019acb:	push   0x10062c9f
10019ad0:	mov    eax,fs:0x0
10019ad6:	push   eax
10019ad7:	sub    esp,0x90
10019add:	mov    eax,ds:0x1007e030
10019ae2:	xor    eax,esp
10019ae4:	mov    DWORD PTR [esp+0x88],eax
10019aeb:	push   ebx
10019aec:	push   esi
10019aed:	push   edi
10019aee:	mov    eax,ds:0x1007e030
10019af3:	xor    eax,esp
10019af5:	push   eax
10019af6:	lea    eax,[esp+0xa0]
10019afd:	mov    fs:0x0,eax
10019b03:	mov    eax,DWORD PTR [ebp+0x8]
10019b06:	mov    DWORD PTR [esp+0x1c],eax
10019b0a:	mov    eax,DWORD PTR [ebp+0xc]
10019b0d:	mov    esi,ecx
10019b0f:	mov    edi,0x1006cd08
10019b14:	xor    ebx,ebx
10019b16:	push   edi
10019b17:	lea    ecx,[esp+0x44]
10019b1b:	mov    DWORD PTR [esp+0x1c],eax
10019b1f:	mov    DWORD PTR [esp+0x24],ebx
10019b23:	call   0x100011d1
10019b28:	lea    eax,[esp+0x40]
10019b2c:	mov    DWORD PTR [esp+0xa8],ebx
10019b33:	push   eax
10019b34:	lea    ecx,[esp+0x80]
10019b3b:	mov    DWORD PTR [esp+0x7c],ebx
10019b3f:	call   0x100011ab
10019b44:	push   ebx
10019b45:	push   0x1
10019b47:	lea    ecx,[esp+0x48]
10019b4b:	mov    BYTE PTR [esp+0xb0],0x2
10019b53:	call   0x100012f4
10019b58:	push   esi
10019b59:	lea    esi,[esp+0x60]
10019b5d:	call   0x10030580
10019b62:	pop    ecx
10019b63:	lea    ecx,[esp+0x24]
10019b67:	push   ecx
10019b68:	mov    ecx,eax
10019b6a:	mov    BYTE PTR [esp+0xac],0x3
10019b72:	call   0x1002fce0
10019b77:	pop    ecx
10019b78:	lea    ecx,[esp+0x78]
10019b7c:	push   ecx
10019b7d:	push   eax
10019b7e:	push   DWORD PTR [esp+0x24]
10019b82:	mov    BYTE PTR [esp+0xb4],0x4
10019b8a:	call   0x10019e8b
10019b8f:	xor    esi,esi
10019b91:	push   ebx
10019b92:	inc    esi
10019b93:	push   esi
10019b94:	lea    ecx,[esp+0x2c]
10019b98:	mov    BYTE PTR [esp+0x1f],al
10019b9c:	call   0x100012f4
10019ba1:	push   ebx
10019ba2:	push   esi
10019ba3:	lea    ecx,[esp+0x64]
10019ba7:	mov    BYTE PTR [esp+0xb0],0x2
10019baf:	call   0x100012f4
10019bb4:	cmp    BYTE PTR [esp+0x17],bl
10019bb8:	je     0x10019bd3
10019bba:	mov    eax,DWORD PTR [esp+0x78]
10019bbe:	mov    edi,DWORD PTR [esp+0x18]
10019bc2:	mov    DWORD PTR [edi],eax
10019bc4:	lea    eax,[esp+0x7c]
10019bc8:	push   eax
10019bc9:	lea    ecx,[edi+0x4]
10019bcc:	call   0x100011ab
10019bd1:	jmp    0x10019c03
10019bd3:	push   edi
10019bd4:	lea    ecx,[esp+0x28]
10019bd8:	call   0x100011d1
10019bdd:	mov    edi,DWORD PTR [esp+0x18]
10019be1:	lea    eax,[esp+0x24]
10019be5:	mov    BYTE PTR [esp+0xa8],0x5
10019bed:	push   eax
10019bee:	lea    ecx,[edi+0x4]
10019bf1:	mov    DWORD PTR [edi],ebx
10019bf3:	call   0x100011ab
10019bf8:	push   ebx
10019bf9:	push   esi
10019bfa:	lea    ecx,[esp+0x2c]
10019bfe:	call   0x100012f4
10019c03:	push   ebx
10019c04:	push   esi
10019c05:	lea    ecx,[esp+0x84]
10019c0c:	call   0x100012f4
10019c11:	mov    eax,edi
10019c13:	mov    ecx,DWORD PTR [esp+0xa0]
10019c1a:	mov    DWORD PTR fs:0x0,ecx
10019c21:	pop    ecx
10019c22:	pop    edi
10019c23:	pop    esi
10019c24:	pop    ebx
10019c25:	mov    ecx,DWORD PTR [esp+0x88]
10019c2c:	xor    ecx,esp
10019c2e:	call   0x100430d7
10019c33:	mov    esp,ebp
10019c35:	pop    ebp
10019c36:	ret    0x8
10019c39:	push   0xf0
10019c3e:	mov    eax,0x10061ee1
10019c43:	call   0x10059d14
10019c48:	mov    eax,DWORD PTR [ebp+0x8]
10019c4b:	mov    edi,ecx
10019c4d:	push   0x1f4
10019c52:	push   DWORD PTR [edi+0x18]
10019c55:	mov    esi,edx
10019c57:	mov    DWORD PTR [ebp-0x50],edi
10019c5a:	mov    DWORD PTR [ebp-0x4c],esi
10019c5d:	mov    DWORD PTR [ebp-0x54],eax
10019c60:	call   DWORD PTR ds:0x10066084
10019c66:	test   eax,eax
10019c68:	jne    0x10019d33
10019c6e:	and    DWORD PTR [ebp-0x4],eax
10019c71:	push   edi
10019c72:	call   0x10019f67
10019c77:	push   esi
10019c78:	lea    ebx,[ebp-0x44]
10019c7b:	mov    esi,edi
10019c7d:	call   0x1001a13e
10019c82:	mov    ebx,DWORD PTR [edi+0x4]
10019c85:	xor    esi,esi
10019c87:	cmp    DWORD PTR [ebp-0x44],esi
10019c8a:	je     0x10019c91
10019c8c:	cmp    DWORD PTR [ebp-0x44],edi
10019c8f:	je     0x10019c96
10019c91:	call   0x100435f0
10019c96:	cmp    DWORD PTR [ebp-0x40],ebx
10019c99:	je     0x10019d3b
10019c9f:	lea    ebx,[edi+0xc]
10019ca2:	mov    eax,DWORD PTR [ebx+0x4]
10019ca5:	mov    DWORD PTR [ebp-0x58],eax
10019ca8:	lea    eax,[ebp-0x60]
10019cab:	mov    DWORD PTR [ebp-0x60],esi
10019cae:	mov    DWORD PTR [ebp-0x5c],ebx
10019cb1:	call   0x10013942
10019cb6:	mov    esi,DWORD PTR [eax]
10019cb8:	inc    esi
10019cb9:	cmp    DWORD PTR [ebp-0x44],0x0
10019cbd:	mov    DWORD PTR [ebp-0x48],esi
10019cc0:	jne    0x10019cc7
10019cc2:	call   0x100435f0
10019cc7:	mov    edi,DWORD PTR [ebp-0x40]
10019cca:	mov    eax,DWORD PTR [ebp-0x44]
10019ccd:	cmp    edi,DWORD PTR [eax+0x4]
10019cd0:	jne    0x10019cd7
10019cd2:	call   0x100435f0
10019cd7:	lea    edx,[edi+0x48]
10019cda:	mov    eax,ebx
10019cdc:	mov    DWORD PTR [ebp-0x4c],edx
10019cdf:	call   0x100135a4
10019ce4:	lea    eax,[ebp-0x48]
10019ce7:	push   eax
10019ce8:	lea    edi,[ebp-0x60]
10019ceb:	call   0x100134eb
10019cf0:	mov    edi,DWORD PTR [ebp-0x40]
10019cf3:	mov    ebx,DWORD PTR [ebp-0x44]
10019cf6:	cmp    edi,DWORD PTR [ebx+0x4]
10019cf9:	jne    0x10019d00
10019cfb:	call   0x100435f0
10019d00:	mov    eax,DWORD PTR [ebp-0x54]
10019d03:	mov    ecx,DWORD PTR [eax]
10019d05:	push   0xffffffff
10019d07:	push   0x0
10019d09:	add    eax,0x4
10019d0c:	mov    DWORD PTR [edi+0x28],ecx
10019d0f:	push   eax
10019d10:	lea    ecx,[edi+0x2c]
10019d13:	call   0x10001245
10019d18:	cmp    edi,DWORD PTR [ebx+0x4]
10019d1b:	jne    0x10019d22
10019d1d:	call   0x100435f0
10019d22:	mov    eax,DWORD PTR [ebp-0x4c]
10019d25:	mov    DWORD PTR [eax],esi
10019d27:	mov    eax,DWORD PTR [ebp-0x50]
10019d2a:	push   DWORD PTR [eax+0x18]
10019d2d:	call   DWORD PTR ds:0x10066094
10019d33:	call   0x10059d70
10019d38:	ret    0x4
10019d3b:	push   0x1006cd08
10019d40:	lea    ecx,[ebp-0x7c]
10019d43:	call   0x100011d1
10019d48:	lea    eax,[ebp-0x7c]
10019d4b:	mov    BYTE PTR [ebp-0x4],0x1
10019d4f:	push   eax
10019d50:	lea    ecx,[ebp-0x38]
10019d53:	mov    DWORD PTR [ebp-0x3c],esi
10019d56:	call   0x100011ab
10019d5b:	push   esi
10019d5c:	push   0x1
10019d5e:	lea    ecx,[ebp-0x7c]
10019d61:	call   0x100012f4
10019d66:	mov    BYTE PTR [ebp-0x4],0x2
10019d6a:	cmp    DWORD PTR [edi+0x14],esi
10019d6d:	je     0x10019d8b
10019d6f:	mov    eax,DWORD PTR [edi+0x10]
10019d72:	add    edi,0xc
10019d75:	mov    DWORD PTR [ebp-0x58],eax
10019d78:	lea    eax,[ebp-0x60]
10019d7b:	mov    DWORD PTR [ebp-0x60],esi
10019d7e:	mov    DWORD PTR [ebp-0x5c],edi
10019d81:	call   0x10013942
10019d86:	mov    eax,DWORD PTR [eax]
10019d88:	inc    eax
10019d89:	jmp    0x10019d8d
10019d8b:	xor    eax,eax
10019d8d:	mov    DWORD PTR [ebp-0x48],eax
10019d90:	mov    DWORD PTR [ebp-0x1c],eax
10019d93:	mov    eax,DWORD PTR [ebp-0x54]
10019d96:	mov    ecx,DWORD PTR [eax]
10019d98:	push   0xffffffff
10019d9a:	push   esi
10019d9b:	add    eax,0x4
10019d9e:	mov    DWORD PTR [ebp-0x3c],ecx
10019da1:	push   eax
10019da2:	lea    ecx,[ebp-0x38]
10019da5:	call   0x10001245
10019daa:	mov    eax,DWORD PTR [ebp-0x3c]
10019dad:	sub    esp,0x24
10019db0:	mov    esi,esp
10019db2:	mov    DWORD PTR [esi],eax
10019db4:	lea    eax,[ebp-0x38]
10019db7:	mov    DWORD PTR [ebp-0x54],esp
10019dba:	push   eax
10019dbb:	lea    ecx,[esi+0x4]
10019dbe:	call   0x100011ab
10019dc3:	mov    eax,DWORD PTR [ebp-0x1c]
10019dc6:	mov    DWORD PTR [esi+0x20],eax
10019dc9:	sub    esp,0x1c
10019dcc:	mov    BYTE PTR [ebp-0x4],0x3
10019dd0:	mov    ecx,esp
10019dd2:	mov    DWORD PTR [ebp-0x40],esp
10019dd5:	push   DWORD PTR [ebp-0x4c]
10019dd8:	call   0x100011ab
10019ddd:	lea    esi,[ebp-0xfc]
10019de3:	mov    BYTE PTR [ebp-0x4],0x2
10019de7:	call   0x1001a43e
10019dec:	add    esp,0x40
10019def:	mov    esi,eax
10019df1:	push   esi
10019df2:	lea    ecx,[ebp-0xbc]
10019df8:	mov    BYTE PTR [ebp-0x4],0x4
10019dfc:	call   0x100011ab
10019e01:	lea    edi,[esi+0x1c]
10019e04:	lea    esi,[ebp-0xa0]
10019e0a:	mov    BYTE PTR [ebp-0x4],0x5
10019e0e:	call   0x10019f36
10019e13:	mov    ebx,DWORD PTR [ebp-0x50]
10019e16:	lea    eax,[ebp-0xbc]
10019e1c:	push   eax
10019e1d:	lea    edi,[ebp-0x60]
10019e20:	mov    BYTE PTR [ebp-0x4],0x6
10019e24:	call   0x1001a097
10019e29:	xor    esi,esi
10019e2b:	xor    edi,edi
10019e2d:	push   esi
10019e2e:	inc    edi
10019e2f:	push   edi
10019e30:	lea    ecx,[ebp-0x9c]
10019e36:	call   0x100012f4
10019e3b:	push   esi
10019e3c:	push   edi
10019e3d:	lea    ecx,[ebp-0xbc]
10019e43:	call   0x100012f4
10019e48:	push   esi
10019e49:	push   edi
10019e4a:	lea    ecx,[ebp-0xdc]
10019e50:	mov    BYTE PTR [ebp-0x4],0x2
10019e54:	call   0x100012f4
10019e59:	push   esi
10019e5a:	push   edi
10019e5b:	lea    ecx,[ebp-0xfc]
10019e61:	call   0x100012f4
10019e66:	lea    eax,[ebp-0x48]
10019e69:	push   eax
10019e6a:	add    ebx,0xc
10019e6d:	lea    edi,[ebp-0x60]
10019e70:	call   0x100134eb
10019e75:	push   esi
10019e76:	push   0x1
10019e78:	lea    ecx,[ebp-0x38]
10019e7b:	call   0x100012f4
10019e80:	jmp    0x10019d27
10019e85:	mov    eax,0x10019d27
10019e8a:	ret    
10019e8b:	push   0x10
10019e8d:	mov    eax,0x10062c56
10019e92:	call   0x10059ca8
10019e97:	mov    esi,DWORD PTR [ebp+0x8]
10019e9a:	push   0x1f4
10019e9f:	push   DWORD PTR [esi+0x18]
10019ea2:	mov    BYTE PTR [ebp-0x11],0x0
10019ea6:	call   DWORD PTR ds:0x10066084
10019eac:	test   eax,eax
10019eae:	je     0x10019eb4
10019eb0:	xor    al,al
10019eb2:	jmp    0x10019f2e
10019eb4:	push   DWORD PTR [ebp+0xc]
10019eb7:	and    DWORD PTR [ebp-0x4],0x0
10019ebb:	lea    ebx,[ebp-0x1c]
10019ebe:	call   0x1001a13e
10019ec3:	cmp    DWORD PTR [ebp-0x1c],0x0
10019ec7:	mov    edi,DWORD PTR [esi+0x4]
10019eca:	je     0x10019ed1
10019ecc:	cmp    DWORD PTR [ebp-0x1c],esi
10019ecf:	je     0x10019ed6
10019ed1:	call   0x100435f0
10019ed6:	mov    ebx,DWORD PTR [ebp-0x18]
10019ed9:	cmp    ebx,edi
10019edb:	je     0x10019f22
10019edd:	mov    edi,DWORD PTR [ebp-0x1c]
10019ee0:	test   edi,edi
10019ee2:	jne    0x10019ee9
10019ee4:	call   0x100435f0
10019ee9:	cmp    ebx,DWORD PTR [edi+0x4]
10019eec:	jne    0x10019ef3
10019eee:	call   0x100435f0
10019ef3:	mov    ecx,DWORD PTR [ebx+0x28]
10019ef6:	mov    eax,DWORD PTR [ebp+0x10]
10019ef9:	push   0xffffffff
10019efb:	push   0x0
10019efd:	add    ebx,0x2c
10019f00:	mov    DWORD PTR [eax],ecx
10019f02:	push   ebx
10019f03:	lea    ecx,[eax+0x4]
10019f06:	call   0x10001245
10019f0b:	mov    BYTE PTR [ebp-0x11],0x1
10019f0f:	jmp    0x10019f22
10019f11:	push   0x4
10019f13:	call   0x10037b70
10019f18:	pop    ecx
10019f19:	mov    eax,0x10019f1f
10019f1e:	ret    
10019f1f:	mov    esi,DWORD PTR [ebp+0x8]
10019f22:	push   DWORD PTR [esi+0x18]
10019f25:	call   DWORD PTR ds:0x10066094
10019f2b:	mov    al,BYTE PTR [ebp-0x11]
10019f2e:	call   0x10059d4d
10019f33:	ret    0xc
10019f36:	mov    eax,DWORD PTR [edi]
10019f38:	mov    DWORD PTR [esi],eax
10019f3a:	lea    eax,[edi+0x4]
10019f3d:	push   eax
10019f3e:	lea    ecx,[esi+0x4]
10019f41:	call   0x100011ab
10019f46:	mov    eax,DWORD PTR [edi+0x20]
10019f49:	mov    DWORD PTR [esi+0x20],eax
10019f4c:	mov    eax,esi
10019f4e:	ret    
10019f4f:	push   0x0
10019f51:	push   0x1
10019f53:	lea    ecx,[esi+0x20]
10019f56:	call   0x100012f4
10019f5b:	push   0x0
10019f5d:	push   0x1
10019f5f:	mov    ecx,esi
10019f61:	call   0x100012f4
10019f66:	ret    
10019f67:	push   0x38
10019f69:	mov    eax,0x10061e8d
10019f6e:	call   0x10059c75
10019f73:	mov    edi,DWORD PTR [ebp+0x8]
10019f76:	mov    ecx,DWORD PTR [edi+0x1c]
10019f79:	mov    edx,DWORD PTR [edi+0x20]
10019f7c:	mov    eax,DWORD PTR [edi+0x8]
10019f7f:	add    edx,ecx
10019f81:	cmp    eax,edx
10019f83:	jbe    0x1001a08f
10019f89:	and    DWORD PTR [ebp-0x10],0x0
10019f8d:	test   ecx,ecx
10019f8f:	lea    ebx,[edi+0xc]
10019f92:	mov    eax,DWORD PTR [ebx+0x4]
10019f95:	mov    eax,DWORD PTR [eax]
10019f97:	mov    DWORD PTR [ebp-0x14],ebx
10019f9a:	mov    DWORD PTR [ebp-0x1c],ebx
10019f9d:	mov    DWORD PTR [ebp-0x18],eax
10019fa0:	je     0x10019fb5
10019fa2:	lea    esi,[ebp-0x1c]
10019fa5:	call   0x10001e75
10019faa:	inc    DWORD PTR [ebp-0x10]
10019fad:	mov    eax,DWORD PTR [ebp-0x10]
10019fb0:	cmp    eax,DWORD PTR [edi+0x1c]
10019fb3:	jne    0x10019fa2
10019fb5:	lea    esi,[ebp-0x1c]
10019fb8:	call   0x1000cedb
10019fbd:	mov    eax,DWORD PTR [eax]
10019fbf:	mov    DWORD PTR [ebp-0x10],eax
10019fc2:	call   0x1001427a
10019fc7:	mov    DWORD PTR [ebp-0x34],eax
10019fca:	mov    BYTE PTR [eax+0x11],0x1
10019fce:	mov    eax,DWORD PTR [ebp-0x34]
10019fd1:	mov    DWORD PTR [eax+0x4],eax
10019fd4:	mov    eax,DWORD PTR [ebp-0x34]
10019fd7:	mov    DWORD PTR [eax],eax
10019fd9:	mov    eax,DWORD PTR [ebp-0x34]
10019fdc:	mov    DWORD PTR [eax+0x8],eax
10019fdf:	and    DWORD PTR [ebp-0x30],0x0
10019fe3:	and    DWORD PTR [ebp-0x4],0x0
10019fe7:	mov    eax,DWORD PTR [edi+0x4]
10019fea:	mov    esi,DWORD PTR [eax]
10019fec:	mov    DWORD PTR [ebp-0x1c],edi
10019fef:	mov    DWORD PTR [ebp-0x18],esi
10019ff2:	cmp    DWORD PTR [ebp-0x1c],0x0
10019ff6:	mov    eax,DWORD PTR [edi+0x4]
10019ff9:	mov    DWORD PTR [ebp-0x20],eax
10019ffc:	je     0x1001a003
10019ffe:	cmp    DWORD PTR [ebp-0x1c],edi
1001a001:	je     0x1001a008
1001a003:	call   0x100435f0
1001a008:	cmp    esi,DWORD PTR [ebp-0x20]
1001a00b:	je     0x1001a06b
1001a00d:	cmp    DWORD PTR [ebp-0x1c],0x0
1001a011:	jne    0x1001a018
1001a013:	call   0x100435f0
1001a018:	mov    eax,DWORD PTR [ebp-0x1c]
1001a01b:	cmp    esi,DWORD PTR [eax+0x4]
1001a01e:	jne    0x1001a025
1001a020:	call   0x100435f0
1001a025:	lea    ecx,[esi+0x48]
1001a028:	mov    eax,DWORD PTR [ecx]
1001a02a:	cmp    eax,DWORD PTR [ebp-0x10]
1001a02d:	jae    0x1001a047
1001a02f:	push   esi
1001a030:	push   DWORD PTR [ebp-0x1c]
1001a033:	lea    eax,[ebp-0x2c]
1001a036:	push   eax
1001a037:	push   edi
1001a038:	call   0x100019fc
1001a03d:	mov    ecx,DWORD PTR [eax]
1001a03f:	mov    esi,DWORD PTR [eax+0x4]
1001a042:	mov    DWORD PTR [ebp-0x1c],ecx
1001a045:	jmp    0x10019fef
1001a047:	sub    eax,DWORD PTR [ebp-0x10]
1001a04a:	push   ecx
1001a04b:	lea    edi,[ebp-0x44]
1001a04e:	lea    ebx,[ebp-0x38]
1001a051:	mov    DWORD PTR [ecx],eax
1001a053:	call   0x100134eb
1001a058:	lea    esi,[ebp-0x1c]
1001a05b:	call   0x10001e28
1001a060:	mov    esi,DWORD PTR [ebp-0x18]
1001a063:	mov    ebx,DWORD PTR [ebp-0x14]
1001a066:	mov    edi,DWORD PTR [ebp+0x8]
1001a069:	jmp    0x10019ff2
1001a06b:	mov    eax,DWORD PTR [ebx+0x4]
1001a06e:	mov    ecx,DWORD PTR [ebp-0x34]
1001a071:	mov    DWORD PTR [ebx+0x4],ecx
1001a074:	mov    ecx,DWORD PTR [ebp-0x30]
1001a077:	mov    DWORD PTR [ebp-0x34],eax
1001a07a:	mov    eax,DWORD PTR [ebx+0x8]
1001a07d:	or     DWORD PTR [ebp-0x4],0xffffffff
1001a081:	mov    DWORD PTR [ebp-0x30],eax
1001a084:	lea    eax,[ebp-0x38]
1001a087:	mov    DWORD PTR [ebx+0x8],ecx
1001a08a:	call   0x1000149a
1001a08f:	call   0x10059d4d
1001a094:	ret    0x4
1001a097:	push   ebp
1001a098:	mov    ebp,esp
1001a09a:	sub    esp,0x18
1001a09d:	mov    eax,DWORD PTR [ebx+0x4]
1001a0a0:	push   esi
1001a0a1:	mov    esi,DWORD PTR [eax+0x4]
1001a0a4:	mov    DWORD PTR [ebp-0x8],eax
1001a0a7:	mov    al,0x1
1001a0a9:	mov    BYTE PTR [ebp-0xc],al
1001a0ac:	jmp    0x1001a0ca
1001a0ae:	mov    ecx,DWORD PTR [ebp+0x8]
1001a0b1:	lea    eax,[esi+0xc]
1001a0b4:	mov    DWORD PTR [ebp-0x8],esi
1001a0b7:	call   0x10007639
1001a0bc:	test   al,al
1001a0be:	mov    BYTE PTR [ebp-0xc],al
1001a0c1:	je     0x1001a0c7
1001a0c3:	mov    esi,DWORD PTR [esi]
1001a0c5:	jmp    0x1001a0ca
1001a0c7:	mov    esi,DWORD PTR [esi+0x8]
1001a0ca:	cmp    BYTE PTR [esi+0x4d],0x0
1001a0ce:	je     0x1001a0ae
1001a0d0:	test   al,al
1001a0d2:	mov    ecx,DWORD PTR [ebp-0x8]
1001a0d5:	mov    esi,ecx
1001a0d7:	mov    DWORD PTR [ebp-0x10],esi
1001a0da:	mov    DWORD PTR [ebp-0x14],ebx
1001a0dd:	je     0x1001a111
1001a0df:	mov    eax,DWORD PTR [ebx+0x4]
1001a0e2:	cmp    ecx,DWORD PTR [eax]
1001a0e4:	jne    0x1001a106
1001a0e6:	push   DWORD PTR [ebp+0x8]
1001a0e9:	push   0x1
1001a0eb:	lea    eax,[ebp-0x14]
1001a0ee:	push   eax
1001a0ef:	mov    esi,ebx
1001a0f1:	call   0x1001a196
1001a0f6:	mov    ecx,DWORD PTR [eax]
1001a0f8:	mov    eax,DWORD PTR [eax+0x4]
1001a0fb:	mov    DWORD PTR [edi],ecx
1001a0fd:	mov    DWORD PTR [edi+0x4],eax
1001a100:	mov    BYTE PTR [edi+0x8],0x1
1001a104:	jmp    0x1001a137
1001a106:	lea    esi,[ebp-0x14]
1001a109:	call   0x1001a2e1
1001a10e:	mov    esi,DWORD PTR [ebp-0x10]
1001a111:	mov    eax,DWORD PTR [ebp+0x8]
1001a114:	lea    ecx,[esi+0xc]
1001a117:	call   0x10007639
1001a11c:	test   al,al
1001a11e:	je     0x1001a12b
1001a120:	push   DWORD PTR [ebp+0x8]
1001a123:	mov    ecx,DWORD PTR [ebp-0x8]
1001a126:	push   DWORD PTR [ebp-0xc]
1001a129:	jmp    0x1001a0eb
1001a12b:	mov    eax,DWORD PTR [ebp-0x14]
1001a12e:	mov    DWORD PTR [edi],eax
1001a130:	mov    DWORD PTR [edi+0x4],esi
1001a133:	mov    BYTE PTR [edi+0x8],0x0
1001a137:	mov    eax,edi
1001a139:	pop    esi
1001a13a:	leave  
1001a13b:	ret    0x4
1001a13e:	push   ebp
1001a13f:	mov    ebp,esp
1001a141:	sub    esp,0x18
1001a144:	push   edi
1001a145:	push   DWORD PTR [ebp+0x8]
1001a148:	mov    eax,esi
1001a14a:	call   0x1001a342
1001a14f:	test   esi,esi
1001a151:	mov    edi,eax
1001a153:	mov    DWORD PTR [ebp-0x8],edi
1001a156:	jne    0x1001a15d
1001a158:	call   0x100435f0
1001a15d:	cmp    edi,DWORD PTR [esi+0x4]
1001a160:	mov    DWORD PTR [ebp-0xc],esi
1001a163:	je     0x1001a179
1001a165:	mov    ecx,DWORD PTR [ebp+0x8]
1001a168:	lea    eax,[edi+0xc]
1001a16b:	call   0x10007639
1001a170:	test   al,al
1001a172:	jne    0x1001a179
1001a174:	lea    eax,[ebp-0xc]
1001a177:	jmp    0x1001a185
1001a179:	mov    eax,DWORD PTR [esi+0x4]
1001a17c:	mov    DWORD PTR [ebp-0x10],eax
1001a17f:	mov    DWORD PTR [ebp-0x14],esi
1001a182:	lea    eax,[ebp-0x14]
1001a185:	mov    ecx,DWORD PTR [eax]
1001a187:	mov    eax,DWORD PTR [eax+0x4]
1001a18a:	mov    DWORD PTR [ebx+0x4],eax
1001a18d:	mov    DWORD PTR [ebx],ecx
1001a18f:	mov    eax,ebx
1001a191:	pop    edi
1001a192:	leave  
1001a193:	ret    0x4
1001a196:	push   0x48
1001a198:	mov    eax,0x100603a7
1001a19d:	call   0x10059c75
1001a1a2:	mov    edi,ecx
1001a1a4:	cmp    DWORD PTR [esi+0x8],0x3fffffe
1001a1ab:	jb     0x1001a1df
1001a1ad:	push   0x1006d04c
1001a1b2:	lea    ecx,[ebp-0x2c]
1001a1b5:	call   0x100011d1
1001a1ba:	and    DWORD PTR [ebp-0x4],0x0
1001a1be:	lea    eax,[ebp-0x2c]
1001a1c1:	push   eax
1001a1c2:	lea    ecx,[ebp-0x54]
1001a1c5:	call   0x1000106e
1001a1ca:	push   0x10074ec0
1001a1cf:	lea    eax,[ebp-0x54]
1001a1d2:	push   eax
1001a1d3:	mov    DWORD PTR [ebp-0x54],0x1006b96c
1001a1da:	call   0x10047c54
1001a1df:	push   DWORD PTR [ebp+0x10]
1001a1e2:	mov    eax,DWORD PTR [esi+0x4]
1001a1e5:	push   eax
1001a1e6:	push   edi
1001a1e7:	push   eax
1001a1e8:	call   0x1001a374
1001a1ed:	inc    DWORD PTR [esi+0x8]
1001a1f0:	mov    ebx,eax
1001a1f2:	mov    eax,DWORD PTR [esi+0x4]
1001a1f5:	cmp    edi,eax
1001a1f7:	jne    0x1001a206
1001a1f9:	mov    DWORD PTR [eax+0x4],ebx
1001a1fc:	mov    eax,DWORD PTR [esi+0x4]
1001a1ff:	mov    DWORD PTR [eax],ebx
1001a201:	mov    eax,DWORD PTR [esi+0x4]
1001a204:	jmp    0x1001a224
1001a206:	cmp    BYTE PTR [ebp+0xc],0x0
1001a20a:	je     0x1001a219
1001a20c:	mov    DWORD PTR [edi],ebx
1001a20e:	mov    eax,DWORD PTR [esi+0x4]
1001a211:	cmp    edi,DWORD PTR [eax]
1001a213:	jne    0x1001a227
1001a215:	mov    DWORD PTR [eax],ebx
1001a217:	jmp    0x1001a227
1001a219:	mov    DWORD PTR [edi+0x8],ebx
1001a21c:	mov    eax,DWORD PTR [esi+0x4]
1001a21f:	cmp    edi,DWORD PTR [eax+0x8]
1001a222:	jne    0x1001a227
1001a224:	mov    DWORD PTR [eax+0x8],ebx
1001a227:	mov    edi,ebx
1001a229:	lea    eax,[ebx+0x4]
1001a22c:	jmp    0x1001a2bb
1001a231:	mov    ecx,DWORD PTR [eax]
1001a233:	mov    edx,DWORD PTR [ecx+0x4]
1001a236:	cmp    ecx,DWORD PTR [edx]
1001a238:	jne    0x1001a26f
1001a23a:	mov    edx,DWORD PTR [edx+0x8]
1001a23d:	cmp    BYTE PTR [edx+0x4c],0x0
1001a241:	je     0x1001a277
1001a243:	cmp    edi,DWORD PTR [ecx+0x8]
1001a246:	jne    0x1001a250
1001a248:	push   esi
1001a249:	mov    edi,ecx
1001a24b:	call   0x10001da6
1001a250:	mov    eax,DWORD PTR [edi+0x4]
1001a253:	mov    BYTE PTR [eax+0x4c],0x1
1001a257:	mov    eax,DWORD PTR [edi+0x4]
1001a25a:	mov    eax,DWORD PTR [eax+0x4]
1001a25d:	mov    BYTE PTR [eax+0x4c],0x0
1001a261:	mov    eax,DWORD PTR [edi+0x4]
1001a264:	mov    ecx,DWORD PTR [eax+0x4]
1001a267:	push   esi
1001a268:	call   0x10001de6
1001a26d:	jmp    0x1001a2b8
1001a26f:	mov    edx,DWORD PTR [edx]
1001a271:	cmp    BYTE PTR [edx+0x4c],0x0
1001a275:	jne    0x1001a28f
1001a277:	mov    BYTE PTR [ecx+0x4c],0x1
1001a27b:	mov    BYTE PTR [edx+0x4c],0x1
1001a27f:	mov    ecx,DWORD PTR [eax]
1001a281:	mov    ecx,DWORD PTR [ecx+0x4]
1001a284:	mov    BYTE PTR [ecx+0x4c],0x0
1001a288:	mov    eax,DWORD PTR [eax]
1001a28a:	mov    edi,DWORD PTR [eax+0x4]
1001a28d:	jmp    0x1001a2b8
1001a28f:	cmp    edi,DWORD PTR [ecx]
1001a291:	jne    0x1001a29b
1001a293:	push   esi
1001a294:	mov    edi,ecx
1001a296:	call   0x10001de6
1001a29b:	mov    eax,DWORD PTR [edi+0x4]
1001a29e:	mov    BYTE PTR [eax+0x4c],0x1
1001a2a2:	mov    eax,DWORD PTR [edi+0x4]
1001a2a5:	mov    eax,DWORD PTR [eax+0x4]
1001a2a8:	mov    BYTE PTR [eax+0x4c],0x0
1001a2ac:	mov    eax,DWORD PTR [edi+0x4]
1001a2af:	mov    ecx,DWORD PTR [eax+0x4]
1001a2b2:	push   esi
1001a2b3:	call   0x10001da6
1001a2b8:	lea    eax,[edi+0x4]
1001a2bb:	mov    ecx,DWORD PTR [eax]
1001a2bd:	cmp    BYTE PTR [ecx+0x4c],0x0
1001a2c1:	je     0x1001a231
1001a2c7:	mov    eax,DWORD PTR [esi+0x4]
1001a2ca:	mov    eax,DWORD PTR [eax+0x4]
1001a2cd:	mov    BYTE PTR [eax+0x4c],0x1
1001a2d1:	mov    eax,DWORD PTR [ebp+0x8]
1001a2d4:	mov    DWORD PTR [eax+0x4],ebx
1001a2d7:	mov    DWORD PTR [eax],esi
1001a2d9:	call   0x10059d4d
1001a2de:	ret    0xc
1001a2e1:	push   ebx
1001a2e2:	xor    ebx,ebx
1001a2e4:	cmp    DWORD PTR [esi],ebx
1001a2e6:	jne    0x1001a2ed
1001a2e8:	call   0x100435f0
1001a2ed:	mov    eax,DWORD PTR [esi+0x4]
1001a2f0:	cmp    BYTE PTR [eax+0x4d],bl
1001a2f3:	je     0x1001a302
1001a2f5:	mov    eax,DWORD PTR [eax+0x8]
1001a2f8:	mov    DWORD PTR [esi+0x4],eax
1001a2fb:	cmp    BYTE PTR [eax+0x4d],bl
1001a2fe:	je     0x1001a33e
1001a300:	jmp    0x1001a334
1001a302:	mov    ecx,DWORD PTR [eax]
1001a304:	cmp    BYTE PTR [ecx+0x4d],bl
1001a307:	jne    0x1001a324
1001a309:	jmp    0x1001a30d
1001a30b:	mov    ecx,eax
1001a30d:	mov    eax,DWORD PTR [ecx+0x8]
1001a310:	cmp    BYTE PTR [eax+0x4d],bl
1001a313:	je     0x1001a30b
1001a315:	mov    DWORD PTR [esi+0x4],ecx
1001a318:	jmp    0x1001a33e
1001a31a:	mov    ecx,DWORD PTR [esi+0x4]
1001a31d:	cmp    ecx,DWORD PTR [eax]
1001a31f:	jne    0x1001a32c
1001a321:	mov    DWORD PTR [esi+0x4],eax
1001a324:	mov    eax,DWORD PTR [eax+0x4]
1001a327:	cmp    BYTE PTR [eax+0x4d],bl
1001a32a:	je     0x1001a31a
1001a32c:	mov    ecx,DWORD PTR [esi+0x4]
1001a32f:	cmp    BYTE PTR [ecx+0x4d],bl
1001a332:	je     0x1001a33b
1001a334:	call   0x100435f0
1001a339:	jmp    0x1001a33e
1001a33b:	mov    DWORD PTR [esi+0x4],eax
1001a33e:	mov    eax,esi
1001a340:	pop    ebx
1001a341:	ret    
1001a342:	mov    eax,DWORD PTR [eax+0x4]
1001a345:	push   esi
1001a346:	mov    esi,DWORD PTR [eax+0x4]
1001a349:	push   edi
1001a34a:	mov    edi,eax
1001a34c:	jmp    0x1001a367
1001a34e:	mov    eax,DWORD PTR [esp+0xc]
1001a352:	lea    ecx,[esi+0xc]
1001a355:	call   0x10007639
1001a35a:	test   al,al
1001a35c:	je     0x1001a363
1001a35e:	mov    esi,DWORD PTR [esi+0x8]
1001a361:	jmp    0x1001a367
1001a363:	mov    edi,esi
1001a365:	mov    esi,DWORD PTR [esi]
1001a367:	cmp    BYTE PTR [esi+0x4d],0x0
1001a36b:	je     0x1001a34e
1001a36d:	mov    eax,edi
1001a36f:	pop    edi
1001a370:	pop    esi
1001a371:	ret    0x4
1001a374:	push   0x8
1001a376:	mov    eax,0x10060ec5
1001a37b:	call   0x10059ca8
1001a380:	push   0x50
1001a382:	call   0x100436de
1001a387:	mov    ebx,eax
1001a389:	pop    ecx
1001a38a:	mov    DWORD PTR [ebp-0x14],ebx
1001a38d:	test   ebx,ebx
1001a38f:	mov    DWORD PTR [ebp-0x4],0x1
1001a396:	je     0x1001a3a9
1001a398:	push   DWORD PTR [ebp+0x10]
1001a39b:	mov    ecx,DWORD PTR [ebp+0x14]
1001a39e:	push   DWORD PTR [ebp+0xc]
1001a3a1:	push   DWORD PTR [ebp+0x8]
1001a3a4:	call   0x1001a3f0
1001a3a9:	mov    eax,ebx
1001a3ab:	call   0x10059d4d
1001a3b0:	ret    0x10
1001a3b3:	push   DWORD PTR [ebp-0x14]
1001a3b6:	call   0x100430d2
1001a3bb:	pop    ecx
1001a3bc:	push   0x0
1001a3be:	push   0x0
1001a3c0:	call   0x10047c54
1001a3c5:	int3   
1001a3c6:	push   0x50
1001a3c8:	call   0x100436de
1001a3cd:	xor    edx,edx
1001a3cf:	cmp    eax,edx
1001a3d1:	pop    ecx
1001a3d2:	je     0x1001a3d6
1001a3d4:	mov    DWORD PTR [eax],edx
1001a3d6:	lea    ecx,[eax+0x4]
1001a3d9:	cmp    ecx,edx
1001a3db:	je     0x1001a3df
1001a3dd:	mov    DWORD PTR [ecx],edx
1001a3df:	lea    ecx,[eax+0x8]
1001a3e2:	cmp    ecx,edx
1001a3e4:	je     0x1001a3e8
1001a3e6:	mov    DWORD PTR [ecx],edx
1001a3e8:	mov    BYTE PTR [eax+0x4c],0x1
1001a3ec:	mov    BYTE PTR [eax+0x4d],dl
1001a3ef:	ret    
1001a3f0:	push   0x0
1001a3f2:	mov    eax,0x10061151
1001a3f7:	call   0x10059c75
1001a3fc:	mov    edi,ecx
1001a3fe:	mov    eax,DWORD PTR [ebp+0x8]
1001a401:	mov    DWORD PTR [ebx],eax
1001a403:	mov    eax,DWORD PTR [ebp+0xc]
1001a406:	mov    DWORD PTR [ebx+0x4],eax
1001a409:	mov    eax,DWORD PTR [ebp+0x10]
1001a40c:	lea    esi,[ebx+0xc]
1001a40f:	push   edi
1001a410:	mov    ecx,esi
1001a412:	mov    DWORD PTR [ebx+0x8],eax
1001a415:	mov    DWORD PTR [ebp+0x8],esi
1001a418:	call   0x100011ab
1001a41d:	and    DWORD PTR [ebp-0x4],0x0
1001a421:	add    edi,0x1c
1001a424:	add    esi,0x1c
1001a427:	call   0x10019f36
1001a42c:	mov    BYTE PTR [ebx+0x4c],0x0
1001a430:	mov    BYTE PTR [ebx+0x4d],0x0
1001a434:	mov    eax,ebx
1001a436:	call   0x10059d4d
1001a43b:	ret    0xc
1001a43e:	push   0x8
1001a440:	mov    eax,0x10060ea5
1001a445:	call   0x10059c75
1001a44a:	and    DWORD PTR [ebp-0x14],0x0
1001a44e:	mov    DWORD PTR [ebp-0x10],esi
1001a451:	lea    eax,[ebp+0x8]
1001a454:	push   eax
1001a455:	mov    ecx,esi
1001a457:	mov    DWORD PTR [ebp-0x4],0x1
1001a45e:	call   0x100011ab
1001a463:	mov    BYTE PTR [ebp-0x4],0x2
1001a467:	mov    eax,DWORD PTR [ebp+0x24]
1001a46a:	mov    DWORD PTR [esi+0x1c],eax
1001a46d:	lea    eax,[ebp+0x28]
1001a470:	push   eax
1001a471:	lea    ecx,[esi+0x20]
1001a474:	call   0x100011ab
1001a479:	mov    eax,DWORD PTR [ebp+0x44]
1001a47c:	push   0x0
1001a47e:	push   0x1
1001a480:	lea    ecx,[ebp+0x8]
1001a483:	mov    DWORD PTR [esi+0x3c],eax
1001a486:	call   0x100012f4
1001a48b:	push   0x0
1001a48d:	push   0x1
1001a48f:	lea    ecx,[ebp+0x28]
1001a492:	call   0x100012f4
1001a497:	mov    eax,esi
1001a499:	call   0x10059d4d
1001a49e:	ret    
1001a49f:	push   0xd4
1001a4a4:	mov    eax,0x10061e67
1001a4a9:	call   0x10059ca8
1001a4ae:	mov    ebx,DWORD PTR [ebp+0x8]
1001a4b1:	push   0x1f4
1001a4b6:	push   DWORD PTR [ebx+0x18]
1001a4b9:	call   DWORD PTR ds:0x10066084
1001a4bf:	test   eax,eax
1001a4c1:	jne    0x1001a77c
1001a4c7:	and    DWORD PTR [ebp-0x4],eax
1001a4ca:	cmp    DWORD PTR [ebx+0x8],eax
1001a4cd:	jbe    0x1001a512
1001a4cf:	push   0x1
1001a4d1:	lea    eax,[ebp-0x2c]
1001a4d4:	push   eax
1001a4d5:	call   0x10034bf0
1001a4da:	lea    eax,[ebp-0x2c]
1001a4dd:	push   eax
1001a4de:	mov    BYTE PTR [ebp-0x4],0x1
1001a4e2:	call   0x100361e0
1001a4e7:	mov    esi,eax
1001a4e9:	test   esi,esi
1001a4eb:	ja     0x1001a4f0
1001a4ed:	xor    esi,esi
1001a4ef:	inc    esi
1001a4f0:	cmp    DWORD PTR [ebx+0x8],esi
1001a4f3:	jb     0x1001a509
1001a4f5:	mov    eax,DWORD PTR [ebx+0x4]
1001a4f8:	push   DWORD PTR [eax]
1001a4fa:	lea    eax,[ebp-0x38]
1001a4fd:	push   ebx
1001a4fe:	push   eax
1001a4ff:	call   0x1001b15e
1001a504:	mov    ebx,DWORD PTR [ebp+0x8]
1001a507:	jmp    0x1001a4f0
1001a509:	push   DWORD PTR [ebp-0x2c]
1001a50c:	call   DWORD PTR ds:0x10066070
1001a512:	or     DWORD PTR [ebp-0x4],0xffffffff
1001a516:	push   DWORD PTR [ebp+0xc]
1001a519:	lea    ecx,[ebp-0x9c]
1001a51f:	call   0x100011ab
1001a524:	push   DWORD PTR [ebp+0x10]
1001a527:	lea    ecx,[ebp-0x80]
1001a52a:	mov    DWORD PTR [ebp-0x4],0x3
1001a531:	call   0x100011ab
1001a536:	push   DWORD PTR [ebp+0x14]
1001a539:	lea    ecx,[ebp-0x64]
1001a53c:	mov    BYTE PTR [ebp-0x4],0x4
1001a540:	call   0x100011ab
1001a545:	mov    eax,DWORD PTR [ebp+0x18]
1001a548:	mov    DWORD PTR [ebp-0x48],eax
1001a54b:	mov    eax,DWORD PTR [ebp+0x1c]
1001a54e:	mov    DWORD PTR [ebp-0x44],eax
1001a551:	mov    eax,DWORD PTR [ebp+0x20]
1001a554:	mov    DWORD PTR [ebp-0x40],eax
1001a557:	mov    eax,DWORD PTR [ebp+0x24]
1001a55a:	mov    DWORD PTR [ebp-0x3c],eax
1001a55d:	mov    DWORD PTR [ebp-0x4],0x5
1001a564:	push   DWORD PTR [ebx+0x4]
1001a567:	lea    eax,[ebp-0x9c]
1001a56d:	push   ebx
1001a56e:	push   eax
1001a56f:	mov    edi,ebx
1001a571:	call   0x1001b260
1001a576:	or     DWORD PTR [ebp-0x4],0xffffffff
1001a57a:	lea    esi,[ebp-0x9c]
1001a580:	call   0x1001a784
1001a585:	inc    DWORD PTR [ebx+0x1c]
1001a588:	call   0x1001b2d0
1001a58d:	xor    esi,esi
1001a58f:	mov    DWORD PTR [ebp-0x24],eax
1001a592:	mov    DWORD PTR [ebp-0x20],esi
1001a595:	mov    DWORD PTR [ebp-0x4],0x6
1001a59c:	call   0x1001b300
1001a5a1:	mov    DWORD PTR [ebp-0x18],eax
1001a5a4:	mov    DWORD PTR [ebp-0x14],esi
1001a5a7:	mov    BYTE PTR [ebp-0x4],0x7
1001a5ab:	cmp    DWORD PTR [ebx+0x14],esi
1001a5ae:	je     0x1001a693
1001a5b4:	mov    eax,DWORD PTR [ebx+0x10]
1001a5b7:	mov    esi,DWORD PTR [eax]
1001a5b9:	cmp    esi,eax
1001a5bb:	jne    0x1001a5c2
1001a5bd:	call   0x100435f0
1001a5c2:	mov    eax,DWORD PTR [esi+0x8]
1001a5c5:	cmp    eax,DWORD PTR [ebx+0x1c]
1001a5c8:	jg     0x1001a63b
1001a5ca:	mov    eax,DWORD PTR [ebx+0x10]
1001a5cd:	mov    edi,DWORD PTR [eax]
1001a5cf:	cmp    edi,eax
1001a5d1:	jne    0x1001a5d8
1001a5d3:	call   0x100435f0
1001a5d8:	mov    ecx,DWORD PTR [ebp-0x18]
1001a5db:	lea    eax,[edi+0xc]
1001a5de:	push   eax
1001a5df:	lea    edi,[ecx+0x4]
1001a5e2:	push   DWORD PTR [edi]
1001a5e4:	push   ecx
1001a5e5:	call   0x10026f13
1001a5ea:	mov    ecx,0x3fffffff
1001a5ef:	sub    ecx,DWORD PTR [ebp-0x14]
1001a5f2:	cmp    ecx,0x1
1001a5f5:	jb     0x1001a703
1001a5fb:	inc    DWORD PTR [ebp-0x14]
1001a5fe:	mov    DWORD PTR [edi],eax
1001a600:	mov    ecx,DWORD PTR [eax+0x4]
1001a603:	mov    DWORD PTR [ecx],eax
1001a605:	mov    eax,DWORD PTR [ebx+0x10]
1001a608:	mov    edi,DWORD PTR [eax]
1001a60a:	cmp    edi,eax
1001a60c:	jne    0x1001a613
1001a60e:	call   0x100435f0
1001a613:	cmp    edi,DWORD PTR [ebx+0x10]
1001a616:	je     0x1001a631
1001a618:	mov    eax,DWORD PTR [edi+0x4]
1001a61b:	mov    ecx,DWORD PTR [edi]
1001a61d:	mov    DWORD PTR [eax],ecx
1001a61f:	mov    eax,DWORD PTR [edi]
1001a621:	mov    ecx,DWORD PTR [edi+0x4]
1001a624:	push   edi
1001a625:	mov    DWORD PTR [eax+0x4],ecx
1001a628:	call   0x100430d2
1001a62d:	dec    DWORD PTR [ebx+0x14]
1001a630:	pop    ecx
1001a631:	cmp    DWORD PTR [ebx+0x14],0x0
1001a635:	jne    0x1001a5b4
1001a63b:	cmp    DWORD PTR [ebp-0x14],0x0
1001a63f:	je     0x1001a693
1001a641:	lea    eax,[ebp-0x28]
1001a644:	cmp    eax,ebx
1001a646:	je     0x1001a66f
1001a648:	mov    esi,DWORD PTR [ebx+0x4]
1001a64b:	mov    eax,DWORD PTR [esi]
1001a64d:	lea    edi,[ebp-0x28]
1001a650:	mov    DWORD PTR [ebp-0x2c],eax
1001a653:	call   0x1001b318
1001a658:	mov    eax,DWORD PTR [ebp-0x24]
1001a65b:	mov    eax,DWORD PTR [eax]
1001a65d:	push   esi
1001a65e:	push   ebx
1001a65f:	push   DWORD PTR [ebp-0x2c]
1001a662:	mov    ecx,edi
1001a664:	push   ebx
1001a665:	push   eax
1001a666:	push   ecx
1001a667:	mov    eax,edi
1001a669:	push   eax
1001a66a:	call   0x1001b455
1001a66f:	cmp    DWORD PTR [ebp-0x20],0x9
1001a673:	jbe    0x1001a693
1001a675:	lea    esi,[ebp-0x28]
1001a678:	mov    eax,DWORD PTR [ebp-0x24]
1001a67b:	push   DWORD PTR [eax]
1001a67d:	lea    eax,[ebp-0x38]
1001a680:	push   esi
1001a681:	push   eax
1001a682:	lea    ebx,[ebp-0x28]
1001a685:	call   0x1001b15e
1001a68a:	cmp    DWORD PTR [ebp-0x20],0x9
1001a68e:	ja     0x1001a678
1001a690:	mov    ebx,DWORD PTR [ebp+0x8]
1001a693:	push   DWORD PTR [ebx+0x18]
1001a696:	call   DWORD PTR ds:0x10066094
1001a69c:	mov    eax,DWORD PTR [ebp-0x18]
1001a69f:	mov    esi,DWORD PTR [eax]
1001a6a1:	cmp    esi,eax
1001a6a3:	je     0x1001a744
1001a6a9:	sub    esp,0xc
1001a6ac:	mov    eax,esp
1001a6ae:	mov    DWORD PTR [ebp+0x8],esp
1001a6b1:	push   eax
1001a6b2:	lea    ecx,[ebp-0x28]
1001a6b5:	call   0x1001b0eb
1001a6ba:	cmp    esi,DWORD PTR [ebp-0x18]
1001a6bd:	jne    0x1001a6c4
1001a6bf:	call   0x100435f0
1001a6c4:	call   DWORD PTR [esi+0x8]
1001a6c7:	mov    eax,DWORD PTR [ebp-0x18]
1001a6ca:	add    esp,0xc
1001a6cd:	cmp    esi,eax
1001a6cf:	jne    0x1001a6d9
1001a6d1:	call   0x100435f0
1001a6d6:	mov    eax,DWORD PTR [ebp-0x18]
1001a6d9:	mov    esi,DWORD PTR [esi]
1001a6db:	jmp    0x1001a6a1
1001a6dd:	mov    ebx,DWORD PTR [ebp+0x8]
1001a6e0:	cmp    DWORD PTR [ebx+0x8],0x0
1001a6e4:	jbe    0x1001a6f5
1001a6e6:	mov    eax,DWORD PTR [ebx+0x4]
1001a6e9:	push   DWORD PTR [eax]
1001a6eb:	lea    eax,[ebp-0x38]
1001a6ee:	push   ebx
1001a6ef:	push   eax
1001a6f0:	call   0x1001b15e
1001a6f5:	mov    eax,0x1001a6fb
1001a6fa:	ret    
1001a6fb:	mov    ebx,DWORD PTR [ebp+0x8]
1001a6fe:	jmp    0x1001a516
1001a703:	push   0x1006fed8
1001a708:	lea    ecx,[ebp-0xe0]
1001a70e:	call   0x100011d1
1001a713:	lea    eax,[ebp-0xe0]
1001a719:	push   eax
1001a71a:	lea    ecx,[ebp-0xc4]
1001a720:	mov    BYTE PTR [ebp-0x4],0x8
1001a724:	call   0x1000106e
1001a729:	push   0x10074ec0
1001a72e:	lea    eax,[ebp-0xc4]
1001a734:	push   eax
1001a735:	mov    DWORD PTR [ebp-0xc4],0x1006b96c
1001a73f:	call   0x10047c54
1001a744:	mov    ecx,DWORD PTR [eax]
1001a746:	mov    DWORD PTR [eax],eax
1001a748:	mov    eax,DWORD PTR [ebp-0x18]
1001a74b:	mov    DWORD PTR [eax+0x4],eax
1001a74e:	and    DWORD PTR [ebp-0x14],0x0
1001a752:	cmp    ecx,DWORD PTR [ebp-0x18]
1001a755:	je     0x1001a767
1001a757:	mov    esi,DWORD PTR [ecx]
1001a759:	push   ecx
1001a75a:	call   0x100430d2
1001a75f:	cmp    esi,DWORD PTR [ebp-0x18]
1001a762:	pop    ecx
1001a763:	mov    ecx,esi
1001a765:	jne    0x1001a757
1001a767:	push   DWORD PTR [ebp-0x18]
1001a76a:	call   0x100430d2
1001a76f:	and    DWORD PTR [ebp-0x18],0x0
1001a773:	pop    ecx
1001a774:	lea    eax,[ebp-0x28]
1001a777:	call   0x1001b147
1001a77c:	call   0x10059d4d
1001a781:	ret    0x20
1001a784:	push   0x0
1001a786:	push   0x1
1001a788:	lea    ecx,[esi+0x38]
1001a78b:	call   0x100012f4
1001a790:	push   0x0
1001a792:	push   0x1
1001a794:	lea    ecx,[esi+0x1c]
1001a797:	call   0x100012f4
1001a79c:	push   0x0
1001a79e:	push   0x1
1001a7a0:	mov    ecx,esi
1001a7a2:	call   0x100012f4
1001a7a7:	ret    
1001a7a8:	push   0x10
1001a7aa:	mov    eax,0x1006051f
1001a7af:	call   0x10059ca8
1001a7b4:	mov    edi,DWORD PTR [ebp+0x8]
1001a7b7:	push   0x1f4
1001a7bc:	push   DWORD PTR [edi+0x18]
1001a7bf:	call   DWORD PTR ds:0x10066084
1001a7c5:	test   eax,eax
1001a7c7:	jne    0x1001a7fb
1001a7c9:	and    DWORD PTR [ebp-0x4],eax
1001a7cc:	mov    eax,DWORD PTR [edi+0x1c]
1001a7cf:	add    eax,0x9
1001a7d2:	lea    ebx,[edi+0xc]
1001a7d5:	lea    esi,[ebp-0x1c]
1001a7d8:	mov    DWORD PTR [ebp-0x1c],eax
1001a7db:	mov    DWORD PTR [ebp-0x18],0x1001b030
1001a7e2:	call   0x1001b1b0
1001a7e7:	jmp    0x1001a7f2
1001a7e9:	mov    eax,0x1001a7ef
1001a7ee:	ret    
1001a7ef:	mov    edi,DWORD PTR [ebp+0x8]
1001a7f2:	push   DWORD PTR [edi+0x18]
1001a7f5:	call   DWORD PTR ds:0x10066094
1001a7fb:	call   0x10059d4d
1001a800:	ret    0x4
1001a803:	push   0x14
1001a805:	mov    eax,0x10060e72
1001a80a:	call   0x10059c75
1001a80f:	push   0x1f4
1001a814:	push   DWORD PTR [esi+0x18]
1001a817:	xor    edi,edi
1001a819:	mov    DWORD PTR [ebp-0x10],edi
1001a81c:	call   DWORD PTR ds:0x10066084
1001a822:	test   eax,eax
1001a824:	je     0x1001a833
1001a826:	call   0x1001b2d0
1001a82b:	mov    DWORD PTR [ebx+0x4],eax
1001a82e:	mov    DWORD PTR [ebx+0x8],edi
1001a831:	jmp    0x1001a86f
1001a833:	lea    eax,[ebp-0x1c]
1001a836:	push   eax
1001a837:	mov    ecx,esi
1001a839:	call   0x1001b0eb
1001a83e:	mov    DWORD PTR [ebp-0x4],edi
1001a841:	mov    eax,DWORD PTR [ebp-0x18]
1001a844:	mov    edx,DWORD PTR [eax]
1001a846:	push   eax
1001a847:	lea    ecx,[ebp-0x1c]
1001a84a:	push   ecx
1001a84b:	mov    edi,ecx
1001a84d:	push   edx
1001a84e:	push   edi
1001a84f:	call   0x1001b3e3
1001a854:	add    esp,0x10
1001a857:	push   DWORD PTR [esi+0x18]
1001a85a:	call   DWORD PTR ds:0x10066094
1001a860:	push   ebx
1001a861:	mov    ecx,edi
1001a863:	call   0x1001b0eb
1001a868:	mov    eax,edi
1001a86a:	call   0x1001b147
1001a86f:	mov    eax,ebx
1001a871:	call   0x10059d4d
1001a876:	ret    
1001a877:	push   0xbc
1001a87c:	mov    eax,0x10063744
1001a881:	call   0x10059cde
1001a886:	mov    esi,ecx
1001a888:	xor    ebx,ebx
1001a88a:	mov    DWORD PTR [ebp-0x9c],esi
1001a890:	mov    DWORD PTR [ebp-0xac],ebx
1001a896:	xor    edi,edi
1001a898:	inc    edi
1001a899:	mov    DWORD PTR [ebp-0x4],edi
1001a89c:	call   0x100040e9
1001a8a1:	push   0x30b399fa
1001a8a6:	push   0x1006feec
1001a8ab:	mov    DWORD PTR [ebp-0xac],edi
1001a8b1:	mov    DWORD PTR [ebp-0x98],ebx
1001a8b7:	call   0x100042d1
1001a8bc:	push   0x617553c0
1001a8c1:	push   eax
1001a8c2:	call   0x100042d1
1001a8c7:	push   eax
1001a8c8:	push   0x7
1001a8ca:	push   0x1006ff24
1001a8cf:	call   0x100042e3
1001a8d4:	add    esp,0x1c
1001a8d7:	push   eax
1001a8d8:	push   esi
1001a8d9:	call   0x10004120
1001a8de:	push   0xa
1001a8e0:	lea    eax,[ebp-0x78]
1001a8e3:	push   eax
1001a8e4:	call   DWORD PTR ds:0x10066118
1001a8ea:	push   eax
1001a8eb:	call   0x10045d96
1001a8f0:	add    esp,0xc
1001a8f3:	push   eax
1001a8f4:	push   esi
1001a8f5:	call   0x10004120
1001a8fa:	mov    eax,DWORD PTR [ebp+0xc]
1001a8fd:	mov    edi,DWORD PTR [eax]
1001a8ff:	mov    DWORD PTR [ebp-0xa0],ebx
1001a905:	lea    ebx,[ebp+0x8]
1001a908:	mov    DWORD PTR [ebp-0xa4],edi
1001a90e:	mov    DWORD PTR [ebp-0xa8],ebx
1001a914:	test   ebx,ebx
1001a916:	mov    esi,DWORD PTR [ebp+0xc]
1001a919:	je     0x1001a922
1001a91b:	lea    eax,[ebp+0x8]
1001a91e:	cmp    ebx,eax
1001a920:	je     0x1001a927
1001a922:	call   0x100435f0
1001a927:	cmp    edi,esi
1001a929:	je     0x1001af07
1001a92f:	push   0x0
1001a931:	lea    ecx,[ebp-0x94]
1001a937:	mov    DWORD PTR [ebp-0x7c],0xf
1001a93e:	call   0x10001420
1001a943:	push   0x1006ff2c
1001a948:	push   0x4
1001a94a:	push   0x1006ff58
1001a94f:	mov    BYTE PTR [ebp-0x4],0x2
1001a953:	call   0x100042e3
1001a958:	add    esp,0xc
1001a95b:	push   eax
1001a95c:	lea    eax,[ebp-0x94]
1001a962:	push   eax
1001a963:	call   0x10004120
1001a968:	push   0xa
1001a96a:	lea    eax,[ebp-0x78]
1001a96d:	push   eax
1001a96e:	push   DWORD PTR [ebp-0x98]
1001a974:	call   0x10045d96
1001a979:	add    esp,0xc
1001a97c:	push   eax
1001a97d:	lea    eax,[ebp-0x94]
1001a983:	push   eax
1001a984:	call   0x10004120
1001a989:	push   0x1006ff60
1001a98e:	push   0x8
1001a990:	push   0x1006ff84
1001a995:	call   0x100042e3
1001a99a:	add    esp,0xc
1001a99d:	push   eax
1001a99e:	lea    eax,[ebp-0x94]
1001a9a4:	push   eax
1001a9a5:	call   0x10004120
1001a9aa:	test   ebx,ebx
1001a9ac:	jne    0x1001a9b3
1001a9ae:	call   0x100435f0
1001a9b3:	cmp    edi,DWORD PTR [ebx+0x4]
1001a9b6:	jne    0x1001a9bd
1001a9b8:	call   0x100435f0
1001a9bd:	push   0xa
1001a9bf:	lea    eax,[ebp-0x78]
1001a9c2:	push   eax
1001a9c3:	lea    esi,[edi+0x8]
1001a9c6:	push   DWORD PTR [esi+0x54]
1001a9c9:	call   0x10045d96
1001a9ce:	add    esp,0xc
1001a9d1:	push   eax
1001a9d2:	lea    eax,[ebp-0x94]
1001a9d8:	push   eax
1001a9d9:	call   0x10004120
1001a9de:	push   0x1149fb54
1001a9e3:	push   0x1006ff90
1001a9e8:	call   0x100042d1
1001a9ed:	push   eax
1001a9ee:	push   0x4
1001a9f0:	push   0x1006ff58
1001a9f5:	call   0x100042e3
1001a9fa:	add    esp,0x14
1001a9fd:	push   eax
1001a9fe:	lea    eax,[ebp-0x94]
1001aa04:	push   eax
1001aa05:	call   0x10004120
1001aa0a:	push   0xa
1001aa0c:	lea    eax,[ebp-0x78]
1001aa0f:	push   eax
1001aa10:	push   DWORD PTR [ebp-0x98]
1001aa16:	call   0x10045d96
1001aa1b:	add    esp,0xc
1001aa1e:	push   eax
1001aa1f:	lea    eax,[ebp-0x94]
1001aa25:	push   eax
1001aa26:	call   0x10004120
1001aa2b:	push   0x65e0614c
1001aa30:	push   0x1006ffd0
1001aa35:	call   0x100042d1
1001aa3a:	push   0x615c9440
1001aa3f:	push   eax
1001aa40:	call   0x100042d1
1001aa45:	push   0x66e0ec28
1001aa4a:	push   eax
1001aa4b:	call   0x100042d1
1001aa50:	push   eax
1001aa51:	push   0x8
1001aa53:	push   0x10070010
1001aa58:	call   0x100042e3
1001aa5d:	add    esp,0x24
1001aa60:	push   eax
1001aa61:	lea    eax,[ebp-0x94]
1001aa67:	push   eax
1001aa68:	call   0x10004120
1001aa6d:	cmp    edi,DWORD PTR [ebx+0x4]
1001aa70:	jne    0x1001aa77
1001aa72:	call   0x100435f0
1001aa77:	push   esi
1001aa78:	lea    ecx,[ebp-0xc8]
1001aa7e:	call   0x10031180
1001aa83:	pop    ecx
1001aa84:	push   0xffffffff
1001aa86:	push   0x0
1001aa88:	lea    esi,[ebp-0x94]
1001aa8e:	mov    BYTE PTR [ebp-0x4],0x3
1001aa92:	call   0x10004cc2
1001aa97:	push   0x0
1001aa99:	push   0x1
1001aa9b:	lea    ecx,[ebp-0xc8]
1001aaa1:	mov    BYTE PTR [ebp-0x4],0x2
1001aaa5:	call   0x100012f4
1001aaaa:	push   0x78d95a80
1001aaaf:	push   0x1007001c
1001aab4:	call   0x100042d1
1001aab9:	push   0x5b0bdbcc
1001aabe:	push   eax
1001aabf:	call   0x100042d1
1001aac4:	push   0xfa8b1ac
1001aac9:	push   eax
1001aaca:	call   0x100042d1
1001aacf:	push   eax
1001aad0:	push   0x4
1001aad2:	push   0x1006ff58
1001aad7:	call   0x100042e3
1001aadc:	add    esp,0x24
1001aadf:	push   eax
1001aae0:	mov    eax,esi
1001aae2:	push   eax
1001aae3:	call   0x10004120
1001aae8:	push   0xa
1001aaea:	lea    eax,[ebp-0x78]
1001aaed:	push   eax
1001aaee:	push   DWORD PTR [ebp-0x98]
1001aaf4:	call   0x10045d96
1001aaf9:	add    esp,0xc
1001aafc:	push   eax
1001aafd:	mov    eax,esi
1001aaff:	push   eax
1001ab00:	call   0x10004120
1001ab05:	push   0x65fc38ba
1001ab0a:	push   0x10070050
1001ab0f:	call   0x100042d1
1001ab14:	push   0x699d702a
1001ab19:	push   eax
1001ab1a:	call   0x100042d1
1001ab1f:	push   0x3b06e8
1001ab24:	push   eax
1001ab25:	call   0x100042d1
1001ab2a:	push   eax
1001ab2b:	push   0xa
1001ab2d:	push   0x1007007c
1001ab32:	call   0x100042e3
1001ab37:	add    esp,0x24
1001ab3a:	push   eax
1001ab3b:	mov    eax,esi
1001ab3d:	push   eax
1001ab3e:	call   0x10004120
1001ab43:	cmp    edi,DWORD PTR [ebx+0x4]
1001ab46:	jne    0x1001ab4d
1001ab48:	call   0x100435f0
1001ab4d:	lea    eax,[edi+0x40]
1001ab50:	push   eax
1001ab51:	lea    ecx,[ebp-0xc8]
1001ab57:	call   0x10031180
1001ab5c:	pop    ecx
1001ab5d:	push   0xffffffff
1001ab5f:	push   0x0
1001ab61:	lea    esi,[ebp-0x94]
1001ab67:	mov    BYTE PTR [ebp-0x4],0x4
1001ab6b:	call   0x10004cc2
1001ab70:	push   0x0
1001ab72:	push   0x1
1001ab74:	lea    ecx,[ebp-0xc8]
1001ab7a:	mov    BYTE PTR [ebp-0x4],0x2
1001ab7e:	call   0x100012f4
1001ab83:	cmp    edi,DWORD PTR [ebx+0x4]
1001ab86:	jne    0x1001ab8d
1001ab88:	call   0x100435f0
1001ab8d:	push   0x1006cd08
1001ab92:	lea    esi,[edi+0x24]
1001ab95:	call   0x100065b3
1001ab9a:	test   al,al
1001ab9c:	pop    ecx
1001ab9d:	jne    0x1001ac72
1001aba3:	push   0x56589590
1001aba8:	push   0x10070088
1001abad:	call   0x100042d1
1001abb2:	push   eax
1001abb3:	push   0x4
1001abb5:	push   0x1006ff58
1001abba:	call   0x100042e3
1001abbf:	add    esp,0x14
1001abc2:	push   eax
1001abc3:	lea    eax,[ebp-0x94]
1001abc9:	push   eax
1001abca:	call   0x10004120
1001abcf:	push   0xa
1001abd1:	lea    eax,[ebp-0x78]
1001abd4:	push   eax
1001abd5:	push   DWORD PTR [ebp-0x98]
1001abdb:	call   0x10045d96
1001abe0:	add    esp,0xc
1001abe3:	push   eax
1001abe4:	lea    eax,[ebp-0x94]
1001abea:	push   eax
1001abeb:	call   0x10004120
1001abf0:	push   0x5a452032
1001abf5:	push   0x100700c4
1001abfa:	call   0x100042d1
1001abff:	push   0x75c1c7c4
1001ac04:	push   eax
1001ac05:	call   0x100042d1
1001ac0a:	push   0x2e6df012
1001ac0f:	push   eax
1001ac10:	call   0x100042d1
1001ac15:	push   eax
1001ac16:	push   0x7
1001ac18:	push   0x10070104
1001ac1d:	call   0x100042e3
1001ac22:	add    esp,0x24
1001ac25:	push   eax
1001ac26:	lea    eax,[ebp-0x94]
1001ac2c:	push   eax
1001ac2d:	call   0x10004120
1001ac32:	cmp    edi,DWORD PTR [ebx+0x4]
1001ac35:	jne    0x1001ac3c
1001ac37:	call   0x100435f0
1001ac3c:	lea    eax,[edi+0x24]
1001ac3f:	push   eax
1001ac40:	lea    ecx,[ebp-0xc8]
1001ac46:	call   0x10031180
1001ac4b:	pop    ecx
1001ac4c:	push   0xffffffff
1001ac4e:	push   0x0
1001ac50:	lea    esi,[ebp-0x94]
1001ac56:	mov    BYTE PTR [ebp-0x4],0x5
1001ac5a:	call   0x10004cc2
1001ac5f:	push   0x0
1001ac61:	push   0x1
1001ac63:	lea    ecx,[ebp-0xc8]
1001ac69:	mov    BYTE PTR [ebp-0x4],0x2
1001ac6d:	call   0x100012f4
1001ac72:	push   0x1007010c
1001ac77:	push   0x4
1001ac79:	push   0x1006ff58
1001ac7e:	call   0x100042e3
1001ac83:	add    esp,0xc
1001ac86:	push   eax
1001ac87:	lea    eax,[ebp-0x94]
1001ac8d:	push   eax
1001ac8e:	call   0x10004120
1001ac93:	push   0xa
1001ac95:	lea    eax,[ebp-0x78]
1001ac98:	push   eax
1001ac99:	push   DWORD PTR [ebp-0x98]
1001ac9f:	call   0x10045d96
1001aca4:	add    esp,0xc
1001aca7:	push   eax
1001aca8:	lea    eax,[ebp-0x94]
1001acae:	push   eax
1001acaf:	call   0x10004120
1001acb4:	push   0x154b38e
1001acb9:	push   0x10070134
1001acbe:	call   0x100042d1
1001acc3:	push   eax
1001acc4:	push   0xf
1001acc6:	push   0x10070170
1001accb:	call   0x100042e3
1001acd0:	add    esp,0x14
1001acd3:	push   eax
1001acd4:	lea    eax,[ebp-0x94]
1001acda:	push   eax
1001acdb:	call   0x10004120
1001ace0:	cmp    edi,DWORD PTR [ebx+0x4]
1001ace3:	jne    0x1001acea
1001ace5:	call   0x100435f0
1001acea:	push   0xa
1001acec:	lea    eax,[ebp-0x78]
1001acef:	push   eax
1001acf0:	lea    esi,[edi+0x8]
1001acf3:	push   DWORD PTR [esi+0x58]
1001acf6:	call   0x10045d96
1001acfb:	add    esp,0xc
1001acfe:	push   eax
1001acff:	lea    eax,[ebp-0x94]
1001ad05:	push   eax
1001ad06:	call   0x10004120
1001ad0b:	push   0x75d0fdec
1001ad10:	push   0x10070180
1001ad15:	call   0x100042d1
1001ad1a:	push   0x50efff54
1001ad1f:	push   eax
1001ad20:	call   0x100042d1
1001ad25:	push   0x15cee858
1001ad2a:	push   eax
1001ad2b:	call   0x100042d1
1001ad30:	push   0x4a00e75a
1001ad35:	push   eax
1001ad36:	call   0x100042d1
1001ad3b:	push   eax
1001ad3c:	push   0x4
1001ad3e:	push   0x1006ff58
1001ad43:	call   0x100042e3
1001ad48:	add    esp,0x2c
1001ad4b:	push   eax
1001ad4c:	lea    eax,[ebp-0x94]
1001ad52:	push   eax
1001ad53:	call   0x10004120
1001ad58:	push   0xa
1001ad5a:	lea    eax,[ebp-0x78]
1001ad5d:	push   eax
1001ad5e:	push   DWORD PTR [ebp-0x98]
1001ad64:	call   0x10045d96
1001ad69:	add    esp,0xc
1001ad6c:	push   eax
1001ad6d:	lea    eax,[ebp-0x94]
1001ad73:	push   eax
1001ad74:	call   0x10004120
1001ad79:	push   0x31b25890
1001ad7e:	push   0x100701bc
1001ad83:	call   0x100042d1
1001ad88:	push   0x2f7d264
1001ad8d:	push   eax
1001ad8e:	call   0x100042d1
1001ad93:	push   0x3e49922c
1001ad98:	push   eax
1001ad99:	call   0x100042d1
1001ad9e:	push   0x225f72b0
1001ada3:	push   eax
1001ada4:	call   0x100042d1
1001ada9:	push   eax
1001adaa:	push   0xa
1001adac:	push   0x100701f0
1001adb1:	call   0x100042e3
1001adb6:	add    esp,0x2c
1001adb9:	push   eax
1001adba:	lea    eax,[ebp-0x94]
1001adc0:	push   eax
1001adc1:	call   0x10004120
1001adc6:	cmp    edi,DWORD PTR [ebx+0x4]
1001adc9:	jne    0x1001add0
1001adcb:	call   0x100435f0
1001add0:	push   0xa
1001add2:	lea    eax,[ebp-0x78]
1001add5:	push   eax
1001add6:	push   DWORD PTR [esi+0x5c]
1001add9:	call   0x10045d96
1001adde:	add    esp,0xc
1001ade1:	push   eax
1001ade2:	lea    eax,[ebp-0x94]
1001ade8:	push   eax
1001ade9:	call   0x10004120
1001adee:	push   0x6f2cb968
1001adf3:	push   0x100701fc
1001adf8:	call   0x100042d1
1001adfd:	push   0x39f7476a
1001ae02:	push   eax
1001ae03:	call   0x100042d1
1001ae08:	push   0x1a3c2906
1001ae0d:	push   eax
1001ae0e:	call   0x100042d1
1001ae13:	push   eax
1001ae14:	push   0x4
1001ae16:	push   0x1006ff58
1001ae1b:	call   0x100042e3
1001ae20:	add    esp,0x24
1001ae23:	push   eax
1001ae24:	lea    eax,[ebp-0x94]
1001ae2a:	push   eax
1001ae2b:	call   0x10004120
1001ae30:	push   0xa
1001ae32:	lea    eax,[ebp-0x78]
1001ae35:	push   eax
1001ae36:	push   DWORD PTR [ebp-0x98]
1001ae3c:	call   0x10045d96
1001ae41:	add    esp,0xc
1001ae44:	push   eax
1001ae45:	lea    eax,[ebp-0x94]
1001ae4b:	push   eax
1001ae4c:	call   0x10004120
1001ae51:	push   0x10070238
1001ae56:	push   0xa
1001ae58:	push   0x10070268
1001ae5d:	call   0x100042e3
1001ae62:	add    esp,0xc
1001ae65:	push   eax
1001ae66:	lea    eax,[ebp-0x94]
1001ae6c:	push   eax
1001ae6d:	call   0x10004120
1001ae72:	cmp    edi,DWORD PTR [ebx+0x4]
1001ae75:	jne    0x1001ae7c
1001ae77:	call   0x100435f0
1001ae7c:	push   0xa
1001ae7e:	lea    eax,[ebp-0x78]
1001ae81:	push   eax
1001ae82:	push   DWORD PTR [esi+0x60]
1001ae85:	call   0x10045d96
1001ae8a:	add    esp,0xc
1001ae8d:	push   eax
1001ae8e:	lea    eax,[ebp-0x94]
1001ae94:	push   eax
1001ae95:	call   0x10004120
1001ae9a:	mov    eax,DWORD PTR [ebp-0xa0]
1001aea0:	mov    esi,DWORD PTR [ebp-0x9c]
1001aea6:	add    eax,DWORD PTR [esi+0x14]
1001aea9:	cmp    eax,DWORD PTR [ebp+0x14]
1001aeac:	mov    DWORD PTR [ebp-0xa0],eax
1001aeb2:	jg     0x1001aef8
1001aeb4:	push   0xffffffff
1001aeb6:	push   0x0
1001aeb8:	lea    eax,[ebp-0x94]
1001aebe:	call   0x10004cc2
1001aec3:	inc    DWORD PTR [ebp-0x98]
1001aec9:	push   0x0
1001aecb:	push   0x1
1001aecd:	lea    ecx,[ebp-0x94]
1001aed3:	mov    BYTE PTR [ebp-0x4],0x1
1001aed7:	call   0x100012f4
1001aedc:	lea    esi,[ebp-0xa8]
1001aee2:	call   0x1001995f
1001aee7:	mov    edi,DWORD PTR [ebp-0xa4]
1001aeed:	mov    ebx,DWORD PTR [ebp-0xa8]
1001aef3:	jmp    0x1001a914
1001aef8:	push   0x0
1001aefa:	push   0x1
1001aefc:	lea    ecx,[ebp-0x94]
1001af02:	call   0x100012f4
1001af07:	lea    eax,[ebp+0x8]
1001af0a:	call   0x1001b147
1001af0f:	mov    eax,DWORD PTR [ebp-0x9c]
1001af15:	call   0x10059d61
1001af1a:	ret    
1001af1b:	push   0x70
1001af1d:	mov    eax,0x10064ecc
1001af22:	call   0x10059d14
1001af27:	mov    edi,DWORD PTR [ebp+0x8]
1001af2a:	mov    DWORD PTR [ebp-0x38],edi
1001af2d:	mov    DWORD PTR [ebp-0x40],edi
1001af30:	xor    ebx,ebx
1001af32:	mov    DWORD PTR [ebp-0x4],ebx
1001af35:	lea    ecx,[ebp-0x30]
1001af38:	mov    BYTE PTR [ebp-0x4],0x1
1001af3c:	call   0x10018612
1001af41:	mov    BYTE PTR [ebp-0x4],0x2
1001af45:	call   0x1000205f
1001af4a:	cmp    DWORD PTR [edi+0x18],0x10
1001af4e:	jb     0x1001af55
1001af50:	mov    eax,DWORD PTR [edi+0x4]
1001af53:	jmp    0x1001af58
1001af55:	lea    eax,[edi+0x4]
1001af58:	push   eax
1001af59:	lea    ecx,[ebp-0x78]
1001af5c:	call   0x100011d1
1001af61:	mov    BYTE PTR [ebp-0x4],0x3
1001af65:	push   DWORD PTR ds:0x10080d84
1001af6b:	lea    ecx,[ebp-0x5c]
1001af6e:	call   0x100011d1
1001af73:	push   0x4e20
1001af78:	lea    eax,[ebp-0x34]
1001af7b:	push   eax
1001af7c:	lea    eax,[ebp-0x78]
1001af7f:	push   eax
1001af80:	lea    eax,[ebp-0x30]
1001af83:	push   eax
1001af84:	lea    eax,[ebp-0x3c]
1001af87:	push   eax
1001af88:	lea    edx,[ebp-0x5c]
1001af8b:	mov    BYTE PTR [ebp-0x4],0x4
1001af8f:	call   0x10031060
1001af94:	mov    ecx,DWORD PTR [eax]
1001af96:	mov    esi,ecx
1001af98:	add    esp,0x14
1001af9b:	mov    DWORD PTR [eax],ebx
1001af9d:	mov    DWORD PTR [ebp-0x34],esi
1001afa0:	push   DWORD PTR [ebp-0x3c]
1001afa3:	call   0x100430d2
1001afa8:	pop    ecx
1001afa9:	push   ebx
1001afaa:	push   0x1
1001afac:	lea    ecx,[ebp-0x5c]
1001afaf:	call   0x100012f4
1001afb4:	push   ebx
1001afb5:	push   0x1
1001afb7:	lea    ecx,[ebp-0x78]
1001afba:	mov    BYTE PTR [ebp-0x4],0x7
1001afbe:	call   0x100012f4
1001afc3:	cmp    esi,ebx
1001afc5:	jne    0x1001affb
1001afc7:	call   0x10018591
1001afcc:	cmp    DWORD PTR [ebp-0x18],0x10
1001afd0:	mov    eax,DWORD PTR [ebp-0x2c]
1001afd3:	jae    0x1001afd8
1001afd5:	lea    eax,[ebp-0x2c]
1001afd8:	push   eax
1001afd9:	call   0x1000205f
1001afde:	pop    ecx
1001afdf:	push   0x5
1001afe1:	call   0x10037b70
1001afe6:	pop    ecx
1001afe7:	push   ebx
1001afe8:	call   0x100430d2
1001afed:	pop    ecx
1001afee:	push   ebx
1001afef:	push   0x1
1001aff1:	lea    ecx,[ebp-0x30]
1001aff4:	call   0x100012f4
1001aff9:	jmp    0x1001b01e
1001affb:	push   esi
1001affc:	call   0x100430d2
1001b001:	pop    ecx
1001b002:	push   ebx
1001b003:	push   0x1
1001b005:	lea    ecx,[ebp-0x30]
1001b008:	call   0x100012f4
1001b00d:	jmp    0x1001b01a
1001b00f:	mov    eax,0x1001b015
1001b014:	ret    
1001b015:	mov    edi,DWORD PTR [ebp-0x38]
1001b018:	xor    ebx,ebx
1001b01a:	cmp    edi,ebx
1001b01c:	je     0x1001b026
1001b01e:	push   0x1
1001b020:	push   edi
1001b021:	call   0x10006657
1001b026:	xor    eax,eax
1001b028:	call   0x10059d70
1001b02d:	ret    0x4
1001b030:	push   0x28
1001b032:	mov    eax,0x10064ff2
1001b037:	call   0x10059c75
1001b03c:	xor    edi,edi
1001b03e:	push   0x1c
1001b040:	mov    DWORD PTR [ebp-0x4],edi
1001b043:	call   0x100436de
1001b048:	cmp    eax,edi
1001b04a:	pop    ecx
1001b04b:	je     0x1001b058
1001b04d:	mov    esi,eax
1001b04f:	call   0x100040e9
1001b054:	mov    ebx,eax
1001b056:	jmp    0x1001b05a
1001b058:	xor    ebx,ebx
1001b05a:	push   0x1
1001b05c:	lea    eax,[ebp-0x10]
1001b05f:	push   eax
1001b060:	call   0x10034bf0
1001b065:	push   eax
1001b066:	mov    BYTE PTR [ebp-0x4],0x1
1001b06a:	call   0x100362f0
1001b06f:	lea    eax,[eax*4+0x800]
1001b076:	push   eax
1001b077:	sub    esp,0xc
1001b07a:	mov    eax,esp
1001b07c:	mov    DWORD PTR [ebp-0x14],esp
1001b07f:	push   eax
1001b080:	lea    ecx,[ebp+0x8]
1001b083:	call   0x1001b0eb
1001b088:	lea    ecx,[ebp-0x30]
1001b08b:	call   0x1001a877
1001b090:	add    esp,0x10
1001b093:	push   0xffffffff
1001b095:	push   edi
1001b096:	push   eax
1001b097:	mov    ecx,ebx
1001b099:	mov    BYTE PTR [ebp-0x4],0x2
1001b09d:	call   0x10001245
1001b0a2:	push   edi
1001b0a3:	push   0x1
1001b0a5:	lea    ecx,[ebp-0x30]
1001b0a8:	call   0x100012f4
1001b0ad:	push   DWORD PTR [ebp-0x10]
1001b0b0:	mov    esi,DWORD PTR ds:0x10066070
1001b0b6:	call   esi
1001b0b8:	push   edi
1001b0b9:	push   edi
1001b0ba:	push   ebx
1001b0bb:	push   0x1001af1b
1001b0c0:	push   edi
1001b0c1:	push   edi
1001b0c2:	call   DWORD PTR ds:0x10066098
1001b0c8:	cmp    eax,edi
1001b0ca:	je     0x1001b0d1
1001b0cc:	push   eax
1001b0cd:	call   esi
1001b0cf:	jmp    0x1001b0dd
1001b0d1:	cmp    ebx,edi
1001b0d3:	je     0x1001b0dd
1001b0d5:	push   0x1
1001b0d7:	push   ebx
1001b0d8:	call   0x10006657
1001b0dd:	lea    eax,[ebp+0x8]
1001b0e0:	call   0x1001b147
1001b0e5:	call   0x10059d4d
1001b0ea:	ret    
1001b0eb:	push   0x4
1001b0ed:	mov    eax,0x10060e4f
1001b0f2:	call   0x10059ca8
1001b0f7:	mov    edi,ecx
1001b0f9:	mov    esi,DWORD PTR [ebp+0x8]
1001b0fc:	call   0x1001b2d0
1001b101:	xor    ecx,ecx
1001b103:	mov    DWORD PTR [esi+0x4],eax
1001b106:	mov    DWORD PTR [esi+0x8],ecx
1001b109:	mov    DWORD PTR [ebp-0x4],ecx
1001b10c:	mov    ecx,DWORD PTR [edi+0x4]
1001b10f:	mov    edx,DWORD PTR [ecx]
1001b111:	mov    eax,DWORD PTR [eax]
1001b113:	push   ecx
1001b114:	push   edi
1001b115:	push   edx
1001b116:	push   edi
1001b117:	push   eax
1001b118:	push   esi
1001b119:	push   esi
1001b11a:	call   0x1001b455
1001b11f:	mov    eax,esi
1001b121:	call   0x10059d4d
1001b126:	ret    0x4
1001b129:	mov    edi,DWORD PTR [ebp+0x8]
1001b12c:	call   0x1001b318
1001b131:	push   DWORD PTR [edi+0x4]
1001b134:	call   0x100430d2
1001b139:	pop    ecx
1001b13a:	xor    ecx,ecx
1001b13c:	push   ecx
1001b13d:	push   ecx
1001b13e:	mov    DWORD PTR [edi+0x4],ecx
1001b141:	call   0x10047c54
1001b146:	int3   
1001b147:	push   edi
1001b148:	mov    edi,eax
1001b14a:	call   0x1001b318
1001b14f:	push   DWORD PTR [edi+0x4]
1001b152:	call   0x100430d2
1001b157:	and    DWORD PTR [edi+0x4],0x0
1001b15b:	pop    ecx
1001b15c:	pop    edi
1001b15d:	ret    
1001b15e:	push   ebp
1001b15f:	mov    ebp,esp
1001b161:	push   ecx
1001b162:	push   ecx
1001b163:	mov    eax,DWORD PTR [ebp+0xc]
1001b166:	push   esi
1001b167:	push   edi
1001b168:	mov    edi,DWORD PTR [ebp+0x10]
1001b16b:	lea    esi,[ebp+0xc]
1001b16e:	mov    DWORD PTR [ebp-0x8],eax
1001b171:	call   0x1001995f
1001b176:	cmp    edi,DWORD PTR [ebx+0x4]
1001b179:	je     0x1001b19c
1001b17b:	mov    eax,DWORD PTR [edi+0x4]
1001b17e:	mov    ecx,DWORD PTR [edi]
1001b180:	mov    DWORD PTR [eax],ecx
1001b182:	mov    eax,DWORD PTR [edi]
1001b184:	mov    ecx,DWORD PTR [edi+0x4]
1001b187:	lea    esi,[edi+0x8]
1001b18a:	mov    DWORD PTR [eax+0x4],ecx
1001b18d:	call   0x1001a784
1001b192:	push   edi
1001b193:	call   0x100430d2
1001b198:	dec    DWORD PTR [ebx+0x8]
1001b19b:	pop    ecx
1001b19c:	mov    ecx,DWORD PTR [ebp+0xc]
1001b19f:	mov    eax,DWORD PTR [ebp+0x8]
1001b1a2:	mov    DWORD PTR [eax],ecx
1001b1a4:	mov    ecx,DWORD PTR [ebp+0x10]
1001b1a7:	pop    edi
1001b1a8:	mov    DWORD PTR [eax+0x4],ecx
1001b1ab:	pop    esi
1001b1ac:	leave  
1001b1ad:	ret    0xc
1001b1b0:	push   0x44
1001b1b2:	mov    eax,0x10060338
1001b1b7:	call   0x10059c75
1001b1bc:	mov    edi,DWORD PTR [ebx+0x4]
1001b1bf:	push   DWORD PTR [edi+0x4]
1001b1c2:	push   edi
1001b1c3:	call   0x1001b3b0
1001b1c8:	mov    ecx,DWORD PTR [ebx+0x8]
1001b1cb:	mov    edx,0x1fffffff
1001b1d0:	sub    edx,ecx
1001b1d2:	cmp    edx,0x1
1001b1d5:	jae    0x1001b209
1001b1d7:	push   0x1006fed8
1001b1dc:	lea    ecx,[ebp-0x28]
1001b1df:	call   0x100011d1
1001b1e4:	and    DWORD PTR [ebp-0x4],0x0
1001b1e8:	lea    eax,[ebp-0x28]
1001b1eb:	push   eax
1001b1ec:	lea    ecx,[ebp-0x50]
1001b1ef:	call   0x1000106e
1001b1f4:	push   0x10074ec0
1001b1f9:	lea    eax,[ebp-0x50]
1001b1fc:	push   eax
1001b1fd:	mov    DWORD PTR [ebp-0x50],0x1006b96c
1001b204:	call   0x10047c54
1001b209:	inc    ecx
1001b20a:	mov    DWORD PTR [ebx+0x8],ecx
1001b20d:	mov    DWORD PTR [edi+0x4],eax
1001b210:	mov    ecx,DWORD PTR [eax+0x4]
1001b213:	mov    DWORD PTR [ecx],eax
1001b215:	call   0x10059d4d
1001b21a:	ret    
1001b21b:	mov    eax,DWORD PTR [esi+0x4]
1001b21e:	mov    ecx,DWORD PTR [eax]
1001b220:	mov    DWORD PTR [eax],eax
1001b222:	mov    eax,DWORD PTR [esi+0x4]
1001b225:	mov    DWORD PTR [eax+0x4],eax
1001b228:	and    DWORD PTR [esi+0x8],0x0
1001b22c:	cmp    ecx,DWORD PTR [esi+0x4]
1001b22f:	je     0x1001b243
1001b231:	push   edi
1001b232:	mov    edi,DWORD PTR [ecx]
1001b234:	push   ecx
1001b235:	call   0x100430d2
1001b23a:	cmp    edi,DWORD PTR [esi+0x4]
1001b23d:	pop    ecx
1001b23e:	mov    ecx,edi
1001b240:	jne    0x1001b232
1001b242:	pop    edi
1001b243:	push   DWORD PTR [esi+0x4]
1001b246:	call   0x100430d2
1001b24b:	and    DWORD PTR [esi+0x4],0x0
1001b24f:	pop    ecx
1001b250:	ret    
1001b251:	mov    eax,DWORD PTR [eax]
1001b253:	test   eax,eax
1001b255:	je     0x1001b25f
1001b257:	push   0x1
1001b259:	push   eax
1001b25a:	call   0x10006657
1001b25f:	ret    
1001b260:	push   0x48
1001b262:	mov    eax,0x100603a7
1001b267:	call   0x10059c75
1001b26c:	push   DWORD PTR [ebp+0x8]
1001b26f:	mov    esi,DWORD PTR [ebp+0x10]
1001b272:	push   DWORD PTR [esi+0x4]
1001b275:	push   esi
1001b276:	call   0x1001b34d
1001b27b:	mov    ecx,DWORD PTR [edi+0x8]
1001b27e:	mov    edx,0x28f5c28
1001b283:	sub    edx,ecx
1001b285:	cmp    edx,0x1
1001b288:	jae    0x1001b2bc
1001b28a:	push   0x1006fed8
1001b28f:	lea    ecx,[ebp-0x2c]
1001b292:	call   0x100011d1
1001b297:	and    DWORD PTR [ebp-0x4],0x0
1001b29b:	lea    eax,[ebp-0x2c]
1001b29e:	push   eax
1001b29f:	lea    ecx,[ebp-0x54]
1001b2a2:	call   0x1000106e
1001b2a7:	push   0x10074ec0
1001b2ac:	lea    eax,[ebp-0x54]
1001b2af:	push   eax
1001b2b0:	mov    DWORD PTR [ebp-0x54],0x1006b96c
1001b2b7:	call   0x10047c54
1001b2bc:	inc    ecx
1001b2bd:	mov    DWORD PTR [edi+0x8],ecx
1001b2c0:	mov    DWORD PTR [esi+0x4],eax
1001b2c3:	mov    ecx,DWORD PTR [eax+0x4]
1001b2c6:	mov    DWORD PTR [ecx],eax
1001b2c8:	call   0x10059d4d
1001b2cd:	ret    0xc
1001b2d0:	push   0x6c
1001b2d2:	call   0x100436de
1001b2d7:	test   eax,eax
1001b2d9:	pop    ecx
1001b2da:	je     0x1001b2de
1001b2dc:	mov    DWORD PTR [eax],eax
1001b2de:	lea    ecx,[eax+0x4]
1001b2e1:	test   ecx,ecx
1001b2e3:	je     0x1001b2e7
1001b2e5:	mov    DWORD PTR [ecx],eax
1001b2e7:	ret    
1001b2e8:	push   0x10
1001b2ea:	call   0x100436de
1001b2ef:	test   eax,eax
1001b2f1:	pop    ecx
1001b2f2:	je     0x1001b2f6
1001b2f4:	mov    DWORD PTR [eax],eax
1001b2f6:	lea    ecx,[eax+0x4]
1001b2f9:	test   ecx,ecx
1001b2fb:	je     0x1001b2ff
1001b2fd:	mov    DWORD PTR [ecx],eax
1001b2ff:	ret    
1001b300:	push   0xc
1001b302:	call   0x100436de
1001b307:	test   eax,eax
1001b309:	pop    ecx
1001b30a:	je     0x1001b30e
1001b30c:	mov    DWORD PTR [eax],eax
1001b30e:	lea    ecx,[eax+0x4]
1001b311:	test   ecx,ecx
1001b313:	je     0x1001b317
1001b315:	mov    DWORD PTR [ecx],eax
1001b317:	ret    
1001b318:	mov    eax,DWORD PTR [edi+0x4]
1001b31b:	push   ebx
1001b31c:	mov    ebx,DWORD PTR [eax]
1001b31e:	mov    DWORD PTR [eax],eax
1001b320:	mov    eax,DWORD PTR [edi+0x4]
1001b323:	mov    DWORD PTR [eax+0x4],eax
1001b326:	and    DWORD PTR [edi+0x8],0x0
1001b32a:	cmp    ebx,DWORD PTR [edi+0x4]
1001b32d:	je     0x1001b34b
1001b32f:	push   ebp
1001b330:	push   esi
1001b331:	mov    ebp,DWORD PTR [ebx]
1001b333:	lea    esi,[ebx+0x8]
1001b336:	call   0x1001a784
1001b33b:	push   ebx
1001b33c:	call   0x100430d2
1001b341:	cmp    ebp,DWORD PTR [edi+0x4]
1001b344:	pop    ecx
1001b345:	mov    ebx,ebp
1001b347:	jne    0x1001b331
1001b349:	pop    esi
1001b34a:	pop    ebp
1001b34b:	pop    ebx
1001b34c:	ret    
1001b34d:	push   0x8
1001b34f:	mov    eax,0x1005fdc5
1001b354:	call   0x10059ca8
1001b359:	push   0x6c
1001b35b:	call   0x100436de
1001b360:	and    DWORD PTR [ebp-0x4],0x0
1001b364:	mov    esi,eax
1001b366:	test   esi,esi
1001b368:	pop    ecx
1001b369:	mov    DWORD PTR [ebp-0x14],esi
1001b36c:	je     0x1001b373
1001b36e:	mov    eax,DWORD PTR [ebp+0x8]
1001b371:	mov    DWORD PTR [esi],eax
1001b373:	lea    eax,[esi+0x4]
1001b376:	test   eax,eax
1001b378:	je     0x1001b37f
1001b37a:	mov    ecx,DWORD PTR [ebp+0xc]
1001b37d:	mov    DWORD PTR [eax],ecx
1001b37f:	lea    eax,[esi+0x8]
1001b382:	test   eax,eax
1001b384:	mov    BYTE PTR [ebp-0x4],0x1
1001b388:	je     0x1001b393
1001b38a:	mov    edi,DWORD PTR [ebp+0x10]
1001b38d:	push   eax
1001b38e:	call   0x1001b481
1001b393:	mov    eax,esi
1001b395:	call   0x10059d4d
1001b39a:	ret    0xc
1001b39d:	push   DWORD PTR [ebp-0x14]
1001b3a0:	call   0x100430d2
1001b3a5:	pop    ecx
1001b3a6:	push   0x0
1001b3a8:	push   0x0
1001b3aa:	call   0x10047c54
1001b3af:	int3   
1001b3b0:	push   0x10
1001b3b2:	call   0x100436de
1001b3b7:	test   eax,eax
1001b3b9:	pop    ecx
1001b3ba:	je     0x1001b3c2
1001b3bc:	mov    ecx,DWORD PTR [esp+0x4]
1001b3c0:	mov    DWORD PTR [eax],ecx
1001b3c2:	lea    ecx,[eax+0x4]
1001b3c5:	test   ecx,ecx
1001b3c7:	je     0x1001b3cf
1001b3c9:	mov    edx,DWORD PTR [esp+0x8]
1001b3cd:	mov    DWORD PTR [ecx],edx
1001b3cf:	lea    ecx,[eax+0x8]
1001b3d2:	test   ecx,ecx
1001b3d4:	je     0x1001b3e0
1001b3d6:	mov    edx,DWORD PTR [esi]
1001b3d8:	mov    DWORD PTR [ecx],edx
1001b3da:	mov    edx,DWORD PTR [esi+0x4]
1001b3dd:	mov    DWORD PTR [ecx+0x4],edx
1001b3e0:	ret    0x8
1001b3e3:	push   0x7c
1001b3e5:	mov    eax,0x100604f7
1001b3ea:	call   0x10059cde
1001b3ef:	mov    eax,DWORD PTR [ebp+0x10]
1001b3f2:	mov    ecx,DWORD PTR [ebp+0x8]
1001b3f5:	mov    edx,DWORD PTR [ebp+0x14]
1001b3f8:	mov    ebx,DWORD PTR [ebp+0xc]
1001b3fb:	mov    DWORD PTR [ebp-0x80],eax
1001b3fe:	mov    DWORD PTR [ebp-0x88],ecx
1001b404:	cmp    ebx,edx
1001b406:	je     0x1001b44f
1001b408:	mov    eax,DWORD PTR [edx+0x4]
1001b40b:	cmp    ebx,eax
1001b40d:	mov    DWORD PTR [ebp-0x7c],eax
1001b410:	je     0x1001b44f
1001b412:	lea    esi,[eax+0x8]
1001b415:	lea    eax,[ebp-0x78]
1001b418:	lea    edi,[ebx+0x8]
1001b41b:	push   eax
1001b41c:	call   0x1001b481
1001b421:	and    DWORD PTR [ebp-0x4],0x0
1001b425:	mov    edi,esi
1001b427:	lea    esi,[ebx+0x8]
1001b42a:	call   0x1001b5a3
1001b42f:	mov    esi,DWORD PTR [ebp-0x7c]
1001b432:	lea    edi,[ebp-0x78]
1001b435:	add    esi,0x8
1001b438:	call   0x1001b5a3
1001b43d:	or     DWORD PTR [ebp-0x4],0xffffffff
1001b441:	mov    esi,edi
1001b443:	call   0x1001a784
1001b448:	mov    ebx,DWORD PTR [ebx]
1001b44a:	mov    edx,DWORD PTR [ebp-0x7c]
1001b44d:	jmp    0x1001b404
1001b44f:	call   0x10059d61
1001b454:	ret    
1001b455:	push   ebp
1001b456:	mov    ebp,esp
1001b458:	and    esp,0xfffffff8
1001b45b:	push   ecx
1001b45c:	push   ecx
1001b45d:	push   DWORD PTR [ebp+0x20]
1001b460:	push   DWORD PTR [ebp+0x1c]
1001b463:	push   DWORD PTR [ebp+0x18]
1001b466:	push   DWORD PTR [ebp+0x14]
1001b469:	push   DWORD PTR [ebp+0x10]
1001b46c:	push   DWORD PTR [ebp+0xc]
1001b46f:	push   DWORD PTR [esp+0x1c]
1001b473:	push   DWORD PTR [ebp+0x8]
1001b476:	call   0x1001b4da
1001b47b:	mov    esp,ebp
1001b47d:	pop    ebp
1001b47e:	ret    0x1c
1001b481:	push   0x0
1001b483:	mov    eax,0x1005fc1e
1001b488:	call   0x10059c75
1001b48d:	mov    esi,DWORD PTR [ebp+0x8]
1001b490:	push   edi
1001b491:	mov    ecx,esi
1001b493:	call   0x100011ab
1001b498:	and    DWORD PTR [ebp-0x4],0x0
1001b49c:	lea    eax,[edi+0x1c]
1001b49f:	push   eax
1001b4a0:	lea    ecx,[esi+0x1c]
1001b4a3:	call   0x100011ab
1001b4a8:	lea    eax,[edi+0x38]
1001b4ab:	push   eax
1001b4ac:	lea    ecx,[esi+0x38]
1001b4af:	mov    BYTE PTR [ebp-0x4],0x1
1001b4b3:	call   0x100011ab
1001b4b8:	mov    eax,DWORD PTR [edi+0x54]
1001b4bb:	mov    DWORD PTR [esi+0x54],eax
1001b4be:	mov    eax,DWORD PTR [edi+0x58]
1001b4c1:	mov    DWORD PTR [esi+0x58],eax
1001b4c4:	mov    eax,DWORD PTR [edi+0x5c]
1001b4c7:	mov    DWORD PTR [esi+0x5c],eax
1001b4ca:	mov    eax,DWORD PTR [edi+0x60]
1001b4cd:	mov    DWORD PTR [esi+0x60],eax
1001b4d0:	mov    eax,esi
1001b4d2:	call   0x10059d4d
1001b4d7:	ret    0x4
1001b4da:	push   0x14
1001b4dc:	mov    eax,0x10060e34
1001b4e1:	call   0x10059ca8
1001b4e6:	mov    edi,DWORD PTR [ebp+0x18]
1001b4e9:	mov    esi,DWORD PTR [ebp+0x1c]
1001b4ec:	and    DWORD PTR [ebp-0x4],0x0
1001b4f0:	mov    DWORD PTR [ebp-0x18],edi
1001b4f3:	mov    DWORD PTR [ebp-0x14],esi
1001b4f6:	test   edi,edi
1001b4f8:	je     0x1001b4ff
1001b4fa:	cmp    edi,DWORD PTR [ebp+0x20]
1001b4fd:	je     0x1001b504
1001b4ff:	call   0x100435f0
1001b504:	cmp    esi,DWORD PTR [ebp+0x24]
1001b507:	je     0x1001b59b
1001b50d:	test   edi,edi
1001b50f:	jne    0x1001b516
1001b511:	call   0x100435f0
1001b516:	cmp    esi,DWORD PTR [edi+0x4]
1001b519:	jne    0x1001b520
1001b51b:	call   0x100435f0
1001b520:	push   DWORD PTR [ebp+0x14]
1001b523:	mov    edi,DWORD PTR [ebp+0x8]
1001b526:	push   DWORD PTR [ebp+0x10]
1001b529:	add    esi,0x8
1001b52c:	push   esi
1001b52d:	call   0x1001b260
1001b532:	lea    esi,[ebp+0x18]
1001b535:	call   0x1001995f
1001b53a:	mov    esi,DWORD PTR [ebp+0x1c]
1001b53d:	mov    edi,DWORD PTR [ebp+0x18]
1001b540:	jmp    0x1001b4f6
1001b542:	mov    edi,DWORD PTR [ebp+0x14]
1001b545:	mov    eax,DWORD PTR [ebp-0x18]
1001b548:	test   eax,eax
1001b54a:	je     0x1001b551
1001b54c:	cmp    eax,DWORD PTR [ebp+0x18]
1001b54f:	je     0x1001b556
1001b551:	call   0x100435f0
1001b556:	mov    eax,DWORD PTR [ebp-0x14]
1001b559:	cmp    eax,DWORD PTR [ebp+0x1c]
1001b55c:	je     0x1001b592
1001b55e:	mov    ebx,DWORD PTR [ebp+0x10]
1001b561:	test   ebx,ebx
1001b563:	mov    DWORD PTR [ebp+0x24],edi
1001b566:	jne    0x1001b56d
1001b568:	call   0x100435f0
1001b56d:	mov    esi,DWORD PTR [edi+0x4]
1001b570:	cmp    esi,DWORD PTR [ebx+0x4]
1001b573:	jne    0x1001b57a
1001b575:	call   0x100435f0
1001b57a:	push   esi
1001b57b:	push   ebx
1001b57c:	mov    ebx,DWORD PTR [ebp+0x8]
1001b57f:	lea    eax,[ebp-0x20]
1001b582:	push   eax
1001b583:	call   0x1001b15e
1001b588:	lea    esi,[ebp-0x18]
1001b58b:	call   0x1001995f
1001b590:	jmp    0x1001b545
1001b592:	push   0x0
1001b594:	push   0x0
1001b596:	call   0x10047c54
1001b59b:	call   0x10059d4d
1001b5a0:	ret    0x20
1001b5a3:	push   0xffffffff
1001b5a5:	push   0x0
1001b5a7:	push   edi
1001b5a8:	mov    ecx,esi
1001b5aa:	call   0x10001245
1001b5af:	push   0xffffffff
1001b5b1:	push   0x0
1001b5b3:	lea    eax,[edi+0x1c]
1001b5b6:	push   eax
1001b5b7:	lea    ecx,[esi+0x1c]
1001b5ba:	call   0x10001245
1001b5bf:	push   0xffffffff
1001b5c1:	push   0x0
1001b5c3:	lea    eax,[edi+0x38]
1001b5c6:	push   eax
1001b5c7:	lea    ecx,[esi+0x38]
1001b5ca:	call   0x10001245
1001b5cf:	mov    eax,DWORD PTR [edi+0x54]
1001b5d2:	mov    DWORD PTR [esi+0x54],eax
1001b5d5:	mov    eax,DWORD PTR [edi+0x58]
1001b5d8:	mov    DWORD PTR [esi+0x58],eax
1001b5db:	mov    eax,DWORD PTR [edi+0x5c]
1001b5de:	mov    DWORD PTR [esi+0x5c],eax
1001b5e1:	mov    eax,DWORD PTR [edi+0x60]
1001b5e4:	mov    DWORD PTR [esi+0x60],eax
1001b5e7:	mov    eax,esi
1001b5e9:	ret    
1001b5ea:	mov    eax,DWORD PTR [esp+0x4]
1001b5ee:	test   eax,eax
1001b5f0:	je     0x1001b604
1001b5f2:	sub    eax,0x8
1001b5f5:	cmp    DWORD PTR [eax],0xdddd
1001b5fb:	jne    0x1001b604
1001b5fd:	push   eax
1001b5fe:	call   0x10043748
1001b603:	pop    ecx
1001b604:	ret    
1001b605:	cmp    DWORD PTR [esp+0x4],0x0
1001b60a:	jne    0x1001b614
1001b60c:	and    DWORD PTR [esi],0x0
1001b60f:	mov    eax,esi
1001b611:	ret    0x4
1001b614:	push   DWORD PTR [esp+0x4]
1001b618:	call   DWORD PTR ds:0x100662b0
1001b61e:	test   eax,eax
1001b620:	mov    DWORD PTR [esi],eax
1001b622:	jne    0x1001b60f
1001b624:	push   0x8007000e
1001b629:	call   0x10001f24
1001b62e:	int3   
1001b62f:	push   ebp
1001b630:	mov    ebp,esp
1001b632:	sub    esp,0x84
1001b638:	mov    eax,ds:0x1007e030
1001b63d:	xor    eax,ebp
1001b63f:	mov    DWORD PTR [ebp-0x4],eax
1001b642:	mov    eax,DWORD PTR [ebp+0x8]
1001b645:	push   0x40
1001b647:	lea    ecx,[ebp-0x84]
1001b64d:	push   ecx
1001b64e:	push   eax
1001b64f:	call   DWORD PTR ds:0x10066418
1001b655:	lea    eax,[ebp-0x84]
1001b65b:	push   eax
1001b65c:	call   DWORD PTR ds:0x100662b0
1001b662:	test   eax,eax
1001b664:	mov    DWORD PTR [esi],eax
1001b666:	jne    0x1001b672
1001b668:	push   0x8007000e
1001b66d:	call   0x10001f24
1001b672:	mov    ecx,DWORD PTR [ebp-0x4]
1001b675:	xor    ecx,ebp
1001b677:	mov    eax,esi
1001b679:	call   0x100430d7
1001b67e:	leave  
1001b67f:	ret    0x4
1001b682:	push   ebp
1001b683:	mov    ebp,esp
1001b685:	push   ecx
1001b686:	push   ecx
1001b687:	test   esi,esi
1001b689:	je     0x1001b6c5
1001b68b:	test   eax,eax
1001b68d:	je     0x1001b6c5
1001b68f:	mov    DWORD PTR [esi],eax
1001b691:	call   DWORD PTR ds:0x10066160
1001b697:	mov    DWORD PTR [esi+0x4],eax
1001b69a:	mov    eax,0x10080a40
1001b69f:	push   eax
1001b6a0:	mov    DWORD PTR [ebp-0x8],eax
1001b6a3:	call   DWORD PTR ds:0x100660f0
1001b6a9:	mov    eax,ds:0x10080a58
1001b6ae:	mov    DWORD PTR [esi+0x8],eax
1001b6b1:	lea    ecx,[ebp-0x8]
1001b6b4:	mov    BYTE PTR [ebp-0x4],0x1
1001b6b8:	mov    DWORD PTR ds:0x10080a58,esi
1001b6be:	call   0x10010e45
1001b6c3:	leave  
1001b6c4:	ret    
1001b6c5:	push   0x0
1001b6c7:	push   0x0
1001b6c9:	push   0x1
1001b6cb:	push   0xc0000005
1001b6d0:	call   DWORD PTR ds:0x10066128
1001b6d6:	int3   
1001b6d7:	push   esi
1001b6d8:	mov    esi,eax
1001b6da:	test   esi,esi
1001b6dc:	push   edi
1001b6dd:	je     0x1001b70d
1001b6df:	mov    edi,DWORD PTR ds:0x10066348
1001b6e5:	cmp    WORD PTR [esi],0x0
1001b6e9:	je     0x1001b70d
1001b6eb:	mov    eax,0x10070404
1001b6f0:	movzx  ecx,WORD PTR [eax]
1001b6f3:	test   cx,cx
1001b6f6:	je     0x1001b704
1001b6f8:	cmp    WORD PTR [esi],cx
1001b6fb:	je     0x1001b712
1001b6fd:	push   eax
1001b6fe:	call   edi
1001b700:	test   eax,eax
1001b702:	jne    0x1001b6f0
1001b704:	push   esi
1001b705:	call   edi
1001b707:	mov    esi,eax
1001b709:	test   esi,esi
1001b70b:	jne    0x1001b6e5
1001b70d:	xor    eax,eax
1001b70f:	pop    edi
1001b710:	pop    esi
1001b711:	ret    
1001b712:	push   esi
1001b713:	call   edi
1001b715:	jmp    0x1001b70f
1001b717:	push   ebp
1001b718:	mov    ebp,esp
1001b71a:	push   ecx
1001b71b:	push   ecx
1001b71c:	test   eax,eax
1001b71e:	jne    0x1001b727
1001b720:	mov    eax,0x80070057
1001b725:	jmp    0x1001b788
1001b727:	mov    ecx,DWORD PTR [eax]
1001b729:	and    DWORD PTR [ebp-0x8],0x0
1001b72d:	and    DWORD PTR [ebp-0x4],0x0
1001b731:	push   esi
1001b732:	lea    edx,[ebp-0x8]
1001b735:	push   edx
1001b736:	push   0x10070284
1001b73b:	push   eax
1001b73c:	call   DWORD PTR [ecx]
1001b73e:	mov    esi,eax
1001b740:	test   esi,esi
1001b742:	jl     0x1001b76b
1001b744:	mov    eax,DWORD PTR [ebp-0x8]
1001b747:	mov    ecx,DWORD PTR [eax]
1001b749:	lea    edx,[ebp-0x4]
1001b74c:	push   edx
1001b74d:	push   DWORD PTR [ebp+0xc]
1001b750:	push   eax
1001b751:	call   DWORD PTR [ecx+0x10]
1001b754:	mov    esi,eax
1001b756:	test   esi,esi
1001b758:	jl     0x1001b76b
1001b75a:	push   DWORD PTR [ebp+0x10]
1001b75d:	mov    eax,DWORD PTR [ebp-0x4]
1001b760:	push   DWORD PTR [ebp+0x8]
1001b763:	mov    ecx,DWORD PTR [eax]
1001b765:	push   eax
1001b766:	call   DWORD PTR [ecx+0x14]
1001b769:	mov    esi,eax
1001b76b:	mov    eax,DWORD PTR [ebp-0x4]
1001b76e:	test   eax,eax
1001b770:	je     0x1001b778
1001b772:	mov    ecx,DWORD PTR [eax]
1001b774:	push   eax
1001b775:	call   DWORD PTR [ecx+0x8]
1001b778:	mov    eax,DWORD PTR [ebp-0x8]
1001b77b:	test   eax,eax
1001b77d:	je     0x1001b785
1001b77f:	mov    ecx,DWORD PTR [eax]
1001b781:	push   eax
1001b782:	call   DWORD PTR [ecx+0x8]
1001b785:	mov    eax,esi
1001b787:	pop    esi
1001b788:	leave  
1001b789:	ret    0xc
1001b78c:	push   ebp
1001b78d:	mov    ebp,esp
1001b78f:	push   ecx
1001b790:	push   ecx
1001b791:	test   eax,eax
1001b793:	jne    0x1001b79c
1001b795:	mov    eax,0x80070057
1001b79a:	jmp    0x1001b7fa
1001b79c:	mov    ecx,DWORD PTR [eax]
1001b79e:	and    DWORD PTR [ebp-0x8],0x0
1001b7a2:	and    DWORD PTR [ebp-0x4],0x0
1001b7a6:	push   esi
1001b7a7:	lea    edx,[ebp-0x8]
1001b7aa:	push   edx
1001b7ab:	push   0x10070284
1001b7b0:	push   eax
1001b7b1:	call   DWORD PTR [ecx]
1001b7b3:	mov    esi,eax
1001b7b5:	test   esi,esi
1001b7b7:	jl     0x1001b7dd
1001b7b9:	mov    eax,DWORD PTR [ebp-0x8]
1001b7bc:	mov    ecx,DWORD PTR [eax]
1001b7be:	lea    edx,[ebp-0x4]
1001b7c1:	push   edx
1001b7c2:	push   DWORD PTR [ebp+0x8]
1001b7c5:	push   eax
1001b7c6:	call   DWORD PTR [ecx+0x10]
1001b7c9:	mov    esi,eax
1001b7cb:	test   esi,esi
1001b7cd:	jl     0x1001b7dd
1001b7cf:	mov    eax,DWORD PTR [ebp-0x4]
1001b7d2:	push   DWORD PTR [ebp+0xc]
1001b7d5:	mov    ecx,DWORD PTR [eax]
1001b7d7:	push   eax
1001b7d8:	call   DWORD PTR [ecx+0x18]
1001b7db:	mov    esi,eax
1001b7dd:	mov    eax,DWORD PTR [ebp-0x4]
1001b7e0:	test   eax,eax
1001b7e2:	je     0x1001b7ea
1001b7e4:	mov    ecx,DWORD PTR [eax]
1001b7e6:	push   eax
1001b7e7:	call   DWORD PTR [ecx+0x8]
1001b7ea:	mov    eax,DWORD PTR [ebp-0x8]
1001b7ed:	test   eax,eax
1001b7ef:	je     0x1001b7f7
1001b7f1:	mov    ecx,DWORD PTR [eax]
1001b7f3:	push   eax
1001b7f4:	call   DWORD PTR [ecx+0x8]
1001b7f7:	mov    eax,esi
1001b7f9:	pop    esi
1001b7fa:	leave  
1001b7fb:	ret    0x8
1001b7fe:	push   ebp
1001b7ff:	mov    ebp,esp
1001b801:	push   edi
1001b802:	xor    edi,edi
1001b804:	xor    eax,eax
1001b806:	cmp    DWORD PTR ds:0x1007f96c,edi
1001b80c:	je     0x1001b816
1001b80e:	cmp    DWORD PTR ds:0x1007f974,edi
1001b814:	jne    0x1001b81e
1001b816:	push   DWORD PTR [ebp+0xc]
1001b819:	call   0x1001ba17
1001b81e:	cmp    DWORD PTR ds:0x1007f96c,edi
1001b824:	je     0x1001b88e
1001b826:	cmp    DWORD PTR ds:0x1007f974,edi
1001b82c:	push   esi
1001b82d:	je     0x1001b87b
1001b82f:	cmp    DWORD PTR [ebp+0x8],0x1
1001b833:	jne    0x1001b87b
1001b835:	push   DWORD PTR [ebx]
1001b837:	call   DWORD PTR ds:0x100660c4
1001b83d:	mov    esi,DWORD PTR ds:0x1007f978
1001b843:	dec    esi
1001b844:	cmp    esi,edi
1001b846:	mov    DWORD PTR [ebp+0xc],eax
1001b849:	jl     0x1001b87b
1001b84b:	mov    edi,esi
1001b84d:	imul   edi,edi,0xc
1001b850:	mov    eax,ds:0x1007f974
1001b855:	add    eax,edi
1001b857:	mov    ecx,DWORD PTR [eax+0x4]
1001b85a:	cmp    DWORD PTR [ebp+0xc],ecx
1001b85d:	jne    0x1001b873
1001b85f:	mov    eax,DWORD PTR [eax]
1001b861:	add    ecx,ecx
1001b863:	push   ecx
1001b864:	push   DWORD PTR [ebx]
1001b866:	push   eax
1001b867:	call   0x100439bb
1001b86c:	add    esp,0xc
1001b86f:	test   eax,eax
1001b871:	je     0x1001b893
1001b873:	dec    esi
1001b874:	sub    edi,0xc
1001b877:	test   esi,esi
1001b879:	jge    0x1001b850
1001b87b:	push   DWORD PTR [ebp+0x10]
1001b87e:	mov    eax,ds:0x1007f96c
1001b883:	push   DWORD PTR [ebp+0x8]
1001b886:	mov    ecx,DWORD PTR [eax]
1001b888:	push   ebx
1001b889:	push   eax
1001b88a:	call   DWORD PTR [ecx+0x28]
1001b88d:	pop    esi
1001b88e:	pop    edi
1001b88f:	pop    ebp
1001b890:	ret    0xc
1001b893:	mov    eax,ds:0x1007f974
1001b898:	imul   esi,esi,0xc
1001b89b:	mov    eax,DWORD PTR [esi+eax*1+0x8]
1001b89f:	mov    ecx,DWORD PTR [ebp+0x10]
1001b8a2:	mov    DWORD PTR [ecx],eax
1001b8a4:	xor    eax,eax
1001b8a6:	jmp    0x1001b88d
1001b8a8:	push   0x18
1001b8aa:	mov    eax,0x1005fa87
1001b8af:	call   0x10059ca8
1001b8b4:	mov    ebx,DWORD PTR [ebp+0x8]
1001b8b7:	mov    eax,DWORD PTR [ebx]
1001b8b9:	lea    ecx,[ebp-0x24]
1001b8bc:	push   ecx
1001b8bd:	push   ebx
1001b8be:	call   DWORD PTR [eax+0xc]
1001b8c1:	xor    ecx,ecx
1001b8c3:	cmp    eax,ecx
1001b8c5:	jl     0x1001ba0d
1001b8cb:	mov    eax,DWORD PTR [ebp-0x24]
1001b8ce:	movzx  eax,WORD PTR [eax+0x2c]
1001b8d2:	cmp    eax,ecx
1001b8d4:	mov    DWORD PTR [ebp-0x1c],ecx
1001b8d7:	mov    ds:0x1007f978,eax
1001b8dc:	mov    DWORD PTR ds:0x1007f974,ecx
1001b8e2:	je     0x1001b95f
1001b8e4:	mov    edi,eax
1001b8e6:	push   0xc
1001b8e8:	pop    edx
1001b8e9:	mul    edx
1001b8eb:	mov    DWORD PTR [ebp-0x4],ecx
1001b8ee:	seto   cl
1001b8f1:	neg    ecx
1001b8f3:	or     ecx,eax
1001b8f5:	xor    eax,eax
1001b8f7:	add    ecx,0x4
1001b8fa:	setb   al
1001b8fd:	neg    eax
1001b8ff:	or     eax,ecx
1001b901:	push   eax
1001b902:	call   0x100439b6
1001b907:	pop    ecx
1001b908:	mov    DWORD PTR [ebp-0x20],eax
1001b90b:	test   eax,eax
1001b90d:	mov    BYTE PTR [ebp-0x4],0x1
1001b911:	je     0x1001b92d
1001b913:	push   0x10001000
1001b918:	push   0x100105ed
1001b91d:	push   edi
1001b91e:	lea    esi,[eax+0x4]
1001b921:	push   0xc
1001b923:	push   esi
1001b924:	mov    DWORD PTR [eax],edi
1001b926:	call   0x10046098
1001b92b:	jmp    0x1001b92f
1001b92d:	xor    esi,esi
1001b92f:	or     DWORD PTR [ebp-0x4],0xffffffff
1001b933:	mov    DWORD PTR [ebp-0x1c],esi
1001b936:	jmp    0x1001b941
1001b938:	mov    eax,0x1001b93e
1001b93d:	ret    
1001b93e:	mov    ebx,DWORD PTR [ebp+0x8]
1001b941:	cmp    DWORD PTR [ebp-0x1c],0x0
1001b945:	jne    0x1001b95a
1001b947:	push   DWORD PTR [ebp-0x24]
1001b94a:	mov    eax,DWORD PTR [ebx]
1001b94c:	push   ebx
1001b94d:	call   DWORD PTR [eax+0x4c]
1001b950:	mov    eax,0x8007000e
1001b955:	jmp    0x1001ba0f
1001b95a:	mov    eax,ds:0x1007f978
1001b95f:	and    DWORD PTR [ebp-0x18],0x0
1001b963:	test   eax,eax
1001b965:	jle    0x1001b9fc
1001b96b:	mov    esi,DWORD PTR [ebp-0x1c]
1001b96e:	mov    ebx,DWORD PTR ds:0x100662b4
1001b974:	mov    edi,DWORD PTR [ebp+0x8]
1001b977:	mov    eax,DWORD PTR [edi]
1001b979:	lea    ecx,[ebp-0x20]
1001b97c:	push   ecx
1001b97d:	push   DWORD PTR [ebp-0x18]
1001b980:	push   edi
1001b981:	call   DWORD PTR [eax+0x14]
1001b984:	test   eax,eax
1001b986:	jl     0x1001b9e4
1001b988:	xor    eax,eax
1001b98a:	mov    DWORD PTR [ebp-0x14],eax
1001b98d:	push   eax
1001b98e:	push   eax
1001b98f:	push   eax
1001b990:	mov    DWORD PTR [ebp-0x4],0x3
1001b997:	mov    ecx,DWORD PTR [edi]
1001b999:	lea    eax,[ebp-0x14]
1001b99c:	push   eax
1001b99d:	mov    eax,DWORD PTR [ebp-0x20]
1001b9a0:	push   DWORD PTR [eax]
1001b9a2:	push   edi
1001b9a3:	call   DWORD PTR [ecx+0x30]
1001b9a6:	test   eax,eax
1001b9a8:	jl     0x1001b9d2
1001b9aa:	mov    edi,DWORD PTR [ebp-0x14]
1001b9ad:	mov    eax,DWORD PTR [esi]
1001b9af:	and    DWORD PTR [ebp-0x14],0x0
1001b9b3:	cmp    eax,edi
1001b9b5:	je     0x1001b9bc
1001b9b7:	push   eax
1001b9b8:	call   ebx
1001b9ba:	mov    DWORD PTR [esi],edi
1001b9bc:	push   DWORD PTR [esi]
1001b9be:	call   DWORD PTR ds:0x100662ac
1001b9c4:	mov    edi,DWORD PTR [ebp+0x8]
1001b9c7:	mov    DWORD PTR [esi+0x4],eax
1001b9ca:	mov    eax,DWORD PTR [ebp-0x20]
1001b9cd:	mov    eax,DWORD PTR [eax]
1001b9cf:	mov    DWORD PTR [esi+0x8],eax
1001b9d2:	push   DWORD PTR [ebp-0x20]
1001b9d5:	mov    eax,DWORD PTR [edi]
1001b9d7:	push   edi
1001b9d8:	call   DWORD PTR [eax+0x50]
1001b9db:	or     DWORD PTR [ebp-0x4],0xffffffff
1001b9df:	push   DWORD PTR [ebp-0x14]
1001b9e2:	call   ebx
1001b9e4:	inc    DWORD PTR [ebp-0x18]
1001b9e7:	mov    eax,DWORD PTR [ebp-0x18]
1001b9ea:	add    esi,0xc
1001b9ed:	cmp    eax,DWORD PTR ds:0x1007f978
1001b9f3:	jl     0x1001b974
1001b9f9:	mov    ebx,DWORD PTR [ebp+0x8]
1001b9fc:	mov    eax,DWORD PTR [ebp-0x1c]
1001b9ff:	push   DWORD PTR [ebp-0x24]
1001ba02:	mov    ds:0x1007f974,eax
1001ba07:	mov    eax,DWORD PTR [ebx]
1001ba09:	push   ebx
1001ba0a:	call   DWORD PTR [eax+0x4c]
1001ba0d:	xor    eax,eax
1001ba0f:	call   0x10059d4d
1001ba14:	ret    0x4
1001ba17:	push   ebp
1001ba18:	sub    esp,0x208
1001ba1e:	lea    ebp,[esp-0x4]
1001ba22:	mov    eax,ds:0x1007e030
1001ba27:	xor    eax,ebp
1001ba29:	mov    DWORD PTR [ebp+0x208],eax
1001ba2f:	push   0x18
1001ba31:	mov    eax,0x1005fd98
1001ba36:	call   0x10059c75
1001ba3b:	xor    ebx,ebx
1001ba3d:	cmp    DWORD PTR ds:0x1007f96c,ebx
1001ba43:	je     0x1001ba54
1001ba45:	cmp    DWORD PTR ds:0x1007f974,ebx
1001ba4b:	je     0x1001ba54
1001ba4d:	xor    eax,eax
1001ba4f:	jmp    0x1001bbf2
1001ba54:	mov    eax,ds:0x10080c04
1001ba59:	add    eax,0x10
1001ba5c:	mov    DWORD PTR [ebp-0x24],eax
1001ba5f:	push   eax
1001ba60:	mov    DWORD PTR [ebp-0x4],ebx
1001ba63:	call   DWORD PTR ds:0x100660f0
1001ba69:	cmp    DWORD PTR ds:0x1007f96c,ebx
1001ba6f:	mov    BYTE PTR [ebp-0x20],0x1
1001ba73:	mov    edi,0x80004005
1001ba78:	jne    0x1001bbcd
1001ba7e:	mov    esi,DWORD PTR ds:0x1007f964
1001ba84:	mov    eax,esi
1001ba86:	mov    ecx,0x10080c08
1001ba8b:	mov    DWORD PTR [ebp-0x14],ebx
1001ba8e:	call   0x10010465
1001ba93:	mov    cx,WORD PTR ds:0x1007f968
1001ba9a:	test   eax,eax
1001ba9c:	mov    ax,ds:0x1007f96a
1001baa2:	je     0x1001baec
1001baa4:	cmp    cx,0xffff
1001baa9:	jne    0x1001baec
1001baab:	cmp    ax,cx
1001baae:	jne    0x1001baec
1001bab0:	mov    esi,0x104
1001bab5:	push   esi
1001bab6:	lea    eax,[ebp+0x0]
1001bab9:	push   eax
1001baba:	push   DWORD PTR ds:0x10080a04
1001bac0:	call   DWORD PTR ds:0x10066124
1001bac6:	cmp    eax,ebx
1001bac8:	je     0x1001bbcf
1001bace:	cmp    eax,esi
1001bad0:	je     0x1001bbcf
1001bad6:	call   DWORD PTR ds:0x1007efec
1001badc:	lea    eax,[ebp-0x14]
1001badf:	push   eax
1001bae0:	lea    eax,[ebp+0x0]
1001bae3:	push   eax
1001bae4:	call   DWORD PTR ds:0x10066290
1001baea:	jmp    0x1001baff
1001baec:	lea    edx,[ebp-0x14]
1001baef:	push   edx
1001baf0:	push   DWORD PTR [ebp+0x214]
1001baf6:	push   eax
1001baf7:	push   ecx
1001baf8:	push   esi
1001baf9:	call   DWORD PTR ds:0x10066284
1001baff:	mov    edi,eax
1001bb01:	cmp    edi,ebx
1001bb03:	jl     0x1001bbcf
1001bb09:	mov    DWORD PTR [ebp-0x10],ebx
1001bb0c:	lea    edx,[ebp-0x10]
1001bb0f:	mov    BYTE PTR [ebp-0x4],0x1
1001bb13:	mov    eax,DWORD PTR [ebp-0x14]
1001bb16:	mov    ecx,DWORD PTR [eax]
1001bb18:	push   edx
1001bb19:	push   DWORD PTR ds:0x1007f960
1001bb1f:	push   eax
1001bb20:	call   DWORD PTR [ecx+0x18]
1001bb23:	mov    edi,eax
1001bb25:	cmp    edi,ebx
1001bb27:	jl     0x1001bbb2
1001bb2d:	mov    eax,DWORD PTR [ebp-0x10]
1001bb30:	cmp    eax,ebx
1001bb32:	mov    DWORD PTR [ebp-0x18],eax
1001bb35:	je     0x1001bb40
1001bb37:	mov    ecx,DWORD PTR [eax]
1001bb39:	push   eax
1001bb3a:	call   DWORD PTR [ecx+0x4]
1001bb3d:	mov    eax,DWORD PTR [ebp-0x10]
1001bb40:	mov    DWORD PTR [ebp-0x1c],ebx
1001bb43:	lea    edx,[ebp-0x1c]
1001bb46:	push   edx
1001bb47:	push   0x1006dd54
1001bb4c:	mov    BYTE PTR [ebp-0x4],0x3
1001bb50:	mov    ecx,DWORD PTR [eax]
1001bb52:	push   eax
1001bb53:	call   DWORD PTR [ecx]
1001bb55:	test   eax,eax
1001bb57:	jl     0x1001bb65
1001bb59:	lea    eax,[ebp-0x18]
1001bb5c:	push   eax
1001bb5d:	lea    eax,[ebp-0x1c]
1001bb60:	call   0x10010e5c
1001bb65:	mov    eax,DWORD PTR [ebp-0x18]
1001bb68:	mov    ds:0x1007f96c,eax
1001bb6d:	mov    eax,ds:0x10080c04
1001bb72:	mov    ecx,eax
1001bb74:	add    eax,0x4
1001bb77:	neg    ecx
1001bb79:	push   0x1007f960
1001bb7e:	sbb    ecx,ecx
1001bb80:	push   0x10010878
1001bb85:	and    ecx,eax
1001bb87:	push   ecx
1001bb88:	mov    DWORD PTR [ebp-0x18],ebx
1001bb8b:	call   0x1001056f
1001bb90:	mov    BYTE PTR [ebp-0x4],0x2
1001bb94:	mov    eax,DWORD PTR [ebp-0x1c]
1001bb97:	cmp    eax,ebx
1001bb99:	je     0x1001bba1
1001bb9b:	mov    ecx,DWORD PTR [eax]
1001bb9d:	push   eax
1001bb9e:	call   DWORD PTR [ecx+0x8]
1001bba1:	mov    BYTE PTR [ebp-0x4],0x1
1001bba5:	mov    eax,DWORD PTR [ebp-0x18]
1001bba8:	cmp    eax,ebx
1001bbaa:	je     0x1001bbb2
1001bbac:	mov    ecx,DWORD PTR [eax]
1001bbae:	push   eax
1001bbaf:	call   DWORD PTR [ecx+0x8]
1001bbb2:	mov    eax,DWORD PTR [ebp-0x14]
1001bbb5:	mov    ecx,DWORD PTR [eax]
1001bbb7:	push   eax
1001bbb8:	call   DWORD PTR [ecx+0x8]
1001bbbb:	mov    BYTE PTR [ebp-0x4],bl
1001bbbe:	mov    eax,DWORD PTR [ebp-0x10]
1001bbc1:	cmp    eax,ebx
1001bbc3:	je     0x1001bbcf
1001bbc5:	mov    ecx,DWORD PTR [eax]
1001bbc7:	push   eax
1001bbc8:	call   DWORD PTR [ecx+0x8]
1001bbcb:	jmp    0x1001bbcf
1001bbcd:	xor    edi,edi
1001bbcf:	mov    eax,ds:0x1007f96c
1001bbd4:	cmp    eax,ebx
1001bbd6:	je     0x1001bbe8
1001bbd8:	cmp    DWORD PTR ds:0x1007f974,ebx
1001bbde:	jne    0x1001bbe8
1001bbe0:	push   eax
1001bbe1:	call   0x1001b8a8
1001bbe6:	mov    edi,eax
1001bbe8:	lea    ecx,[ebp-0x24]
1001bbeb:	call   0x10010e45
1001bbf0:	mov    eax,edi
1001bbf2:	mov    ecx,DWORD PTR [ebp-0xc]
1001bbf5:	mov    DWORD PTR fs:0x0,ecx
1001bbfc:	pop    ecx
1001bbfd:	pop    edi
1001bbfe:	pop    esi
1001bbff:	pop    ebx
1001bc00:	mov    ecx,DWORD PTR [ebp+0x208]
1001bc06:	xor    ecx,ebp
1001bc08:	call   0x100430d7
1001bc0d:	add    ebp,0x20c
1001bc13:	leave  
1001bc14:	ret    0x4
1001bc17:	push   ebp
1001bc18:	sub    esp,0x3e8
1001bc1e:	lea    ebp,[esp-0x4]
1001bc22:	mov    eax,ds:0x1007e030
1001bc27:	xor    eax,ebp
1001bc29:	mov    DWORD PTR [ebp+0x3e8],eax
1001bc2f:	push   0x18
1001bc31:	mov    eax,0x1005fd50
1001bc36:	call   0x10059c75
1001bc3b:	mov    eax,DWORD PTR [ebp+0x3f4]
1001bc41:	xor    ebx,ebx
1001bc43:	mov    esi,ecx
1001bc45:	cmp    esi,ebx
1001bc47:	mov    DWORD PTR [ebp-0x20],eax
1001bc4a:	mov    DWORD PTR [eax],ebx
1001bc4c:	je     0x1001bd83
1001bc52:	mov    eax,DWORD PTR [esi]
1001bc54:	lea    ecx,[ebp-0x14]
1001bc57:	push   ecx
1001bc58:	push   0x2
1001bc5a:	lea    ecx,[ebp-0x1c]
1001bc5d:	push   ecx
1001bc5e:	push   esi
1001bc5f:	call   DWORD PTR [eax+0xc]
1001bc62:	cmp    eax,ebx
1001bc64:	jl     0x1001bd85
1001bc6a:	mov    eax,DWORD PTR [esi]
1001bc6c:	lea    ecx,[ebp-0x14]
1001bc6f:	push   ecx
1001bc70:	push   0x4
1001bc72:	lea    ecx,[ebp-0x24]
1001bc75:	push   ecx
1001bc76:	push   esi
1001bc77:	call   DWORD PTR [eax+0xc]
1001bc7a:	cmp    eax,ebx
1001bc7c:	jl     0x1001bd85
1001bc82:	mov    eax,DWORD PTR [esi]
1001bc84:	lea    ecx,[ebp-0x14]
1001bc87:	push   ecx
1001bc88:	push   0x4
1001bc8a:	lea    ecx,[ebp-0x18]
1001bc8d:	push   ecx
1001bc8e:	push   esi
1001bc8f:	call   DWORD PTR [eax+0xc]
1001bc92:	cmp    eax,ebx
1001bc94:	jl     0x1001bd85
1001bc9a:	cmp    DWORD PTR [ebp-0x18],ebx
1001bc9d:	jbe    0x1001bd23
1001bca3:	jne    0x1001bccb
1001bca5:	xor    edi,edi
1001bca7:	mov    DWORD PTR [ebp-0x10],edi
1001bcaa:	push   edi
1001bcab:	mov    DWORD PTR [ebp-0x4],ebx
1001bcae:	call   DWORD PTR ds:0x100662ac
1001bcb4:	test   eax,eax
1001bcb6:	jne    0x1001bce8
1001bcb8:	mov    esi,0x8007000e
1001bcbd:	push   edi
1001bcbe:	call   DWORD PTR ds:0x100662b4
1001bcc4:	mov    eax,esi
1001bcc6:	jmp    0x1001bd85
1001bccb:	push   DWORD PTR [ebp-0x18]
1001bcce:	push   ebx
1001bccf:	call   DWORD PTR ds:0x1006629c
1001bcd5:	mov    edi,eax
1001bcd7:	cmp    edi,ebx
1001bcd9:	mov    DWORD PTR [ebp-0x10],edi
1001bcdc:	jne    0x1001bcaa
1001bcde:	push   0x8007000e
1001bce3:	call   0x10001f24
1001bce8:	mov    eax,DWORD PTR [ebp-0x18]
1001bceb:	lea    eax,[eax+eax*1+0x2]
1001bcef:	push   eax
1001bcf0:	push   ebx
1001bcf1:	push   edi
1001bcf2:	call   0x10045ea0
1001bcf7:	mov    eax,DWORD PTR [esi]
1001bcf9:	add    esp,0xc
1001bcfc:	lea    ecx,[ebp-0x14]
1001bcff:	push   ecx
1001bd00:	mov    ecx,DWORD PTR [ebp-0x18]
1001bd03:	add    ecx,ecx
1001bd05:	push   ecx
1001bd06:	push   edi
1001bd07:	push   esi
1001bd08:	call   DWORD PTR [eax+0xc]
1001bd0b:	cmp    eax,ebx
1001bd0d:	jge    0x1001bd13
1001bd0f:	mov    esi,eax
1001bd11:	jmp    0x1001bcbd
1001bd13:	mov    eax,DWORD PTR [ebp-0x20]
1001bd16:	or     DWORD PTR [ebp-0x4],0xffffffff
1001bd1a:	push   ebx
1001bd1b:	mov    DWORD PTR [eax],edi
1001bd1d:	call   DWORD PTR ds:0x100662b4
1001bd23:	mov    ax,WORD PTR [ebp-0x1c]
1001bd27:	cmp    ax,0x37a
1001bd2b:	je     0x1001bd43
1001bd2d:	cmp    ax,0x37b
1001bd31:	je     0x1001bd43
1001bd33:	sub    ax,0x376
1001bd37:	neg    ax
1001bd3a:	sbb    eax,eax
1001bd3c:	and    eax,0x80004005
1001bd41:	jmp    0x1001bd85
1001bd43:	mov    eax,DWORD PTR [esi]
1001bd45:	lea    ecx,[ebp-0x14]
1001bd48:	push   ecx
1001bd49:	push   0x4
1001bd4b:	lea    ecx,[ebp-0x10]
1001bd4e:	push   ecx
1001bd4f:	push   esi
1001bd50:	call   DWORD PTR [eax+0xc]
1001bd53:	cmp    eax,ebx
1001bd55:	jl     0x1001bd85
1001bd57:	sub    DWORD PTR [ebp-0x10],0x4
1001bd5b:	je     0x1001bd83
1001bd5d:	mov    edi,0x3e8
1001bd62:	cmp    DWORD PTR [ebp-0x10],edi
1001bd65:	mov    eax,DWORD PTR [ebp-0x10]
1001bd68:	jb     0x1001bd6c
1001bd6a:	mov    eax,edi
1001bd6c:	mov    ecx,DWORD PTR [esi]
1001bd6e:	lea    edx,[ebp-0x14]
1001bd71:	push   edx
1001bd72:	push   eax
1001bd73:	lea    eax,[ebp+0x0]
1001bd76:	push   eax
1001bd77:	push   esi
1001bd78:	call   DWORD PTR [ecx+0xc]
1001bd7b:	mov    eax,DWORD PTR [ebp-0x14]
1001bd7e:	sub    DWORD PTR [ebp-0x10],eax
1001bd81:	jne    0x1001bd62
1001bd83:	xor    eax,eax
1001bd85:	mov    ecx,DWORD PTR [ebp-0xc]
1001bd88:	mov    DWORD PTR fs:0x0,ecx
1001bd8f:	pop    ecx
1001bd90:	pop    edi
1001bd91:	pop    esi
1001bd92:	pop    ebx
1001bd93:	mov    ecx,DWORD PTR [ebp+0x3e8]
1001bd99:	xor    ecx,ebp
1001bd9b:	call   0x100430d7
1001bda0:	add    ebp,0x3ec
1001bda6:	leave  
1001bda7:	ret    
1001bda8:	push   ebp
1001bda9:	mov    ebp,esp
1001bdab:	sub    esp,0x14
1001bdae:	mov    eax,ds:0x1007e030
1001bdb3:	xor    eax,ebp
1001bdb5:	mov    DWORD PTR [ebp-0x4],eax
1001bdb8:	mov    eax,DWORD PTR [ebp+0x8]
1001bdbb:	push   DWORD PTR [eax]
1001bdbd:	call   DWORD PTR ds:0x100662e0
1001bdc3:	push   0x8
1001bdc5:	lea    ecx,[ebp-0x14]
1001bdc8:	push   ecx
1001bdc9:	push   eax
1001bdca:	call   DWORD PTR ds:0x1006634c
1001bdd0:	test   eax,eax
1001bdd2:	je     0x1001bde8
1001bdd4:	push   0x100703e4
1001bdd9:	lea    eax,[ebp-0x14]
1001bddc:	push   eax
1001bddd:	call   DWORD PTR ds:0x10066150
1001bde3:	neg    eax
1001bde5:	sbb    eax,eax
1001bde7:	inc    eax
1001bde8:	mov    ecx,DWORD PTR [ebp-0x4]
1001bdeb:	xor    ecx,ebp
1001bded:	call   0x100430d7
1001bdf2:	leave  
1001bdf3:	ret    0x4
1001bdf6:	cmp    DWORD PTR [edi+0xc],0x0
1001bdfa:	push   esi
1001bdfb:	mov    esi,eax
1001bdfd:	jne    0x1001be0b
1001bdff:	call   0x1005743b
1001be04:	test   eax,eax
1001be06:	mov    DWORD PTR [edi+0xc],eax
1001be09:	je     0x1001be3a
1001be0b:	mov    eax,DWORD PTR [edi+0xc]
1001be0e:	mov    ecx,DWORD PTR [esp+0x8]
1001be12:	sub    esi,eax
1001be14:	push   0xd
1001be16:	sub    esi,0xd
1001be19:	push   eax
1001be1a:	mov    DWORD PTR [eax],0x42444c7
1001be20:	mov    DWORD PTR [eax+0x4],ecx
1001be23:	mov    BYTE PTR [eax+0x8],0xe9
1001be27:	mov    DWORD PTR [eax+0x9],esi
1001be2a:	call   DWORD PTR ds:0x10066108
1001be30:	push   eax
1001be31:	call   DWORD PTR ds:0x10066158
1001be37:	xor    eax,eax
1001be39:	inc    eax
1001be3a:	pop    esi
1001be3b:	ret    0x4
1001be3e:	push   ecx
1001be3f:	push   ecx
1001be40:	test   edi,edi
1001be42:	jne    0x1001be4e
1001be44:	push   0x80004003
1001be49:	call   0x10001f24
1001be4e:	test   esi,esi
1001be50:	je     0x1001be44
1001be52:	push   ebx
1001be53:	push   ebp
1001be54:	push   0x0
1001be56:	call   DWORD PTR ds:0x100662c0
1001be5c:	mov    ebp,DWORD PTR ds:0x10066040
1001be62:	mov    ebx,eax
1001be64:	push   0x58
1001be66:	push   ebx
1001be67:	call   ebp
1001be69:	push   0x5a
1001be6b:	push   ebx
1001be6c:	mov    DWORD PTR [esp+0x10],eax
1001be70:	call   ebp
1001be72:	push   ebx
1001be73:	push   0x0
1001be75:	mov    DWORD PTR [esp+0x14],eax
1001be79:	call   DWORD PTR ds:0x10066350
1001be7f:	mov    ebx,DWORD PTR ds:0x1006614c
1001be85:	mov    ebp,0x9ec
1001be8a:	push   ebp
1001be8b:	push   DWORD PTR [edi]
1001be8d:	push   DWORD PTR [esp+0x10]
1001be91:	call   ebx
1001be93:	push   ebp
1001be94:	mov    DWORD PTR [esi],eax
1001be96:	push   DWORD PTR [edi+0x4]
1001be99:	push   DWORD PTR [esp+0x14]
1001be9d:	call   ebx
1001be9f:	pop    ebp
1001bea0:	mov    DWORD PTR [esi+0x4],eax
1001bea3:	pop    ebx
1001bea4:	pop    ecx
1001bea5:	pop    ecx
1001bea6:	ret    
1001bea7:	push   ecx
1001bea8:	push   ecx
1001bea9:	test   edi,edi
1001beab:	jne    0x1001beb7
1001bead:	push   0x80004003
1001beb2:	call   0x10001f24
1001beb7:	test   esi,esi
1001beb9:	je     0x1001bead
1001bebb:	push   ebx
1001bebc:	push   ebp
1001bebd:	push   0x0
1001bebf:	call   DWORD PTR ds:0x100662c0
1001bec5:	mov    ebp,DWORD PTR ds:0x10066040
1001becb:	mov    ebx,eax
1001becd:	push   0x58
1001becf:	push   ebx
1001bed0:	call   ebp
1001bed2:	push   0x5a
1001bed4:	push   ebx
1001bed5:	mov    DWORD PTR [esp+0x10],eax
1001bed9:	call   ebp
1001bedb:	push   ebx
1001bedc:	push   0x0
1001bede:	mov    DWORD PTR [esp+0x14],eax
1001bee2:	call   DWORD PTR ds:0x10066350
1001bee8:	push   DWORD PTR [esp+0x8]
1001beec:	mov    ebx,DWORD PTR ds:0x1006614c
1001bef2:	push   DWORD PTR [edi]
1001bef4:	mov    ebp,0x9ec
1001bef9:	push   ebp
1001befa:	call   ebx
1001befc:	push   DWORD PTR [esp+0xc]
1001bf00:	mov    DWORD PTR [esi],eax
1001bf02:	push   DWORD PTR [edi+0x4]
1001bf05:	push   ebp
1001bf06:	call   ebx
1001bf08:	pop    ebp
1001bf09:	mov    DWORD PTR [esi+0x4],eax
1001bf0c:	pop    ebx
1001bf0d:	pop    ecx
1001bf0e:	pop    ecx
1001bf0f:	ret    
1001bf10:	push   0x20
1001bf12:	mov    eax,0x1005f87d
1001bf17:	call   0x10059cde
1001bf1c:	test   ebx,ebx
1001bf1e:	mov    eax,DWORD PTR [ebp+0x8]
1001bf21:	mov    esi,ecx
1001bf23:	mov    DWORD PTR [ebp-0x2c],eax
1001bf26:	jne    0x1001bf32
1001bf28:	mov    eax,0x80004003
1001bf2d:	jmp    0x1001c09a
1001bf32:	and    DWORD PTR [ebx],0x0
1001bf35:	test   esi,esi
1001bf37:	mov    DWORD PTR [ebp-0x24],0x80004005
1001bf3e:	mov    BYTE PTR [edi],0x0
1001bf41:	je     0x1001c098
1001bf47:	movzx  eax,WORD PTR [esi]
1001bf4a:	test   ax,ax
1001bf4d:	je     0x1001c098
1001bf53:	cmp    ax,0x4d
1001bf57:	je     0x1001bf5f
1001bf59:	cmp    ax,0x6d
1001bf5d:	jne    0x1001bfd3
1001bf5f:	movzx  eax,WORD PTR [esi+0x2]
1001bf63:	cmp    ax,0x53
1001bf67:	je     0x1001bf6f
1001bf69:	cmp    ax,0x73
1001bf6d:	jne    0x1001bfd3
1001bf6f:	movzx  eax,WORD PTR [esi+0x4]
1001bf73:	cmp    ax,0x48
1001bf77:	je     0x1001bf7f
1001bf79:	cmp    ax,0x68
1001bf7d:	jne    0x1001bfd3
1001bf7f:	movzx  eax,WORD PTR [esi+0x6]
1001bf83:	cmp    ax,0x54
1001bf87:	je     0x1001bf8f
1001bf89:	cmp    ax,0x74
1001bf8d:	jne    0x1001bfd3
1001bf8f:	movzx  eax,WORD PTR [esi+0x8]
1001bf93:	cmp    ax,0x4d
1001bf97:	je     0x1001bf9f
1001bf99:	cmp    ax,0x6d
1001bf9d:	jne    0x1001bfd3
1001bf9f:	movzx  eax,WORD PTR [esi+0xa]
1001bfa3:	cmp    ax,0x4c
1001bfa7:	je     0x1001bfaf
1001bfa9:	cmp    ax,0x6c
1001bfad:	jne    0x1001bfd3
1001bfaf:	cmp    WORD PTR [esi+0xc],0x3a
1001bfb4:	jne    0x1001bfd3
1001bfb6:	push   ebx
1001bfb7:	push   0x1006dd44
1001bfbc:	push   0x1
1001bfbe:	push   0x0
1001bfc0:	push   0x10070a00
1001bfc5:	call   DWORD PTR ds:0x1006643c
1001bfcb:	mov    BYTE PTR [edi],0x1
1001bfce:	jmp    0x1001c090
1001bfd3:	mov    eax,esi
1001bfd5:	call   0x1001b6d7
1001bfda:	test   eax,eax
1001bfdc:	je     0x1001bfef
1001bfde:	push   ebx
1001bfdf:	push   0x1006dd44
1001bfe4:	push   0x1
1001bfe6:	push   0x0
1001bfe8:	push   0x10070a10
1001bfed:	jmp    0x1001bfc5
1001bfef:	push   esi
1001bff0:	call   DWORD PTR ds:0x100660c4
1001bff6:	cmp    eax,0xff
1001bffb:	jge    0x1001c093
1001c001:	cmp    WORD PTR [esi],0x7b
1001c005:	lea    eax,[ebp-0x20]
1001c008:	push   eax
1001c009:	push   esi
1001c00a:	jne    0x1001c014
1001c00c:	call   DWORD PTR ds:0x10066420
1001c012:	jmp    0x1001c01a
1001c014:	call   DWORD PTR ds:0x10066438
1001c01a:	xor    esi,esi
1001c01c:	cmp    eax,esi
1001c01e:	mov    DWORD PTR [ebp-0x24],eax
1001c021:	jl     0x1001c093
1001c023:	push   DWORD PTR [ebp-0x2c]
1001c026:	call   DWORD PTR ds:0x100662ac
1001c02c:	test   eax,eax
1001c02e:	je     0x1001c07d
1001c030:	mov    DWORD PTR [ebp-0x28],esi
1001c033:	lea    eax,[ebp-0x28]
1001c036:	push   eax
1001c037:	push   0x10070a20
1001c03c:	push   esi
1001c03d:	push   0x1
1001c03f:	lea    eax,[ebp-0x20]
1001c042:	push   eax
1001c043:	mov    DWORD PTR [ebp-0x4],esi
1001c046:	call   DWORD PTR ds:0x1006640c
1001c04c:	cmp    eax,esi
1001c04e:	mov    DWORD PTR [ebp-0x24],eax
1001c051:	jl     0x1001c06a
1001c053:	mov    eax,DWORD PTR [ebp-0x28]
1001c056:	mov    ecx,DWORD PTR [eax]
1001c058:	push   ebx
1001c059:	push   DWORD PTR [ebp-0x2c]
1001c05c:	push   0x1006dd44
1001c061:	push   esi
1001c062:	push   esi
1001c063:	push   eax
1001c064:	call   DWORD PTR [ecx+0x1c]
1001c067:	mov    DWORD PTR [ebp-0x24],eax
1001c06a:	or     DWORD PTR [ebp-0x4],0xffffffff
1001c06e:	mov    eax,DWORD PTR [ebp-0x28]
1001c071:	cmp    eax,esi
1001c073:	je     0x1001c093
1001c075:	mov    ecx,DWORD PTR [eax]
1001c077:	push   eax
1001c078:	call   DWORD PTR [ecx+0x8]
1001c07b:	jmp    0x1001c093
1001c07d:	push   ebx
1001c07e:	push   0x1006dd44
1001c083:	push   0x1
1001c085:	push   esi
1001c086:	lea    eax,[ebp-0x20]
1001c089:	push   eax
1001c08a:	call   DWORD PTR ds:0x1006643c
1001c090:	mov    DWORD PTR [ebp-0x24],eax
1001c093:	mov    eax,DWORD PTR [ebp-0x24]
1001c096:	jmp    0x1001c09a
1001c098:	xor    eax,eax
1001c09a:	call   0x10059d61
1001c09f:	ret    
1001c0a0:	xor    eax,eax
1001c0a2:	ret    0x18
1001c0a5:	push   ebx
1001c0a6:	mov    ebx,DWORD PTR [esp+0xc]
1001c0aa:	xor    ecx,ecx
1001c0ac:	cmp    ebx,ecx
1001c0ae:	push   esi
1001c0af:	push   edi
1001c0b0:	jne    0x1001c0b9
1001c0b2:	mov    eax,0x80004003
1001c0b7:	jmp    0x1001c0db
1001c0b9:	mov    edi,DWORD PTR [esp+0x10]
1001c0bd:	cmp    DWORD PTR [edi-0x20],ecx
1001c0c0:	jne    0x1001c0d4
1001c0c2:	push   ecx
1001c0c3:	mov    eax,esp
1001c0c5:	mov    DWORD PTR [eax],ecx
1001c0c7:	push   ecx
1001c0c8:	mov    eax,esp
1001c0ca:	lea    esi,[edi-0x24]
1001c0cd:	mov    DWORD PTR [eax],ecx
1001c0cf:	call   0x10020081
1001c0d4:	mov    eax,DWORD PTR [edi-0x20]
1001c0d7:	mov    DWORD PTR [ebx],eax
1001c0d9:	xor    eax,eax
1001c0db:	pop    edi
1001c0dc:	pop    esi
1001c0dd:	pop    ebx
1001c0de:	ret    0x8
1001c0e1:	mov    eax,0x800401a1
1001c0e6:	ret    0x8
1001c0e9:	push   esi
1001c0ea:	mov    esi,DWORD PTR [esp+0x8]
1001c0ee:	push   edi
1001c0ef:	mov    edi,DWORD PTR [esp+0x10]
1001c0f3:	add    esi,0x8
1001c0f6:	cmp    DWORD PTR [esi],edi
1001c0f8:	je     0x1001c0ff
1001c0fa:	call   0x10007617
1001c0ff:	pop    edi
1001c100:	xor    eax,eax
1001c102:	pop    esi
1001c103:	ret    0xc
1001c106:	xor    eax,eax
1001c108:	ret    0xc
1001c10b:	xor    eax,eax
1001c10d:	ret    0x10
1001c110:	xor    eax,eax
1001c112:	ret    0x8
1001c115:	xor    eax,eax
1001c117:	inc    eax
1001c118:	ret    0xc
1001c11b:	push   esi
1001c11c:	push   edi
1001c11d:	mov    edi,DWORD PTR [esp+0xc]
1001c121:	xor    ecx,ecx
1001c123:	cmp    DWORD PTR [edi-0x20],ecx
1001c126:	jne    0x1001c13a
1001c128:	push   ecx
1001c129:	mov    eax,esp
1001c12b:	mov    DWORD PTR [eax],ecx
1001c12d:	push   ecx
1001c12e:	mov    eax,esp
1001c130:	lea    esi,[edi-0x24]
1001c133:	mov    DWORD PTR [eax],ecx
1001c135:	call   0x100200d0
1001c13a:	mov    eax,DWORD PTR [edi-0x20]
1001c13d:	mov    ecx,DWORD PTR [esp+0x10]
1001c141:	pop    edi
1001c142:	mov    DWORD PTR [ecx],eax
1001c144:	xor    eax,eax
1001c146:	pop    esi
1001c147:	ret    0x8
1001c14a:	mov    eax,ds:0x1006633c
1001c14f:	push   edi
1001c150:	xor    edi,edi
1001c152:	mov    DWORD PTR [esi+0x50],edi
1001c155:	mov    DWORD PTR [esi+0x4],edi
1001c158:	mov    DWORD PTR [esi+0x14],edi
1001c15b:	mov    DWORD PTR [esi+0x20],eax
1001c15e:	mov    DWORD PTR [esi+0x18],edi
1001c161:	mov    DWORD PTR [esi+0x1c],edi
1001c164:	mov    DWORD PTR [esi+0x3c],edi
1001c167:	mov    DWORD PTR [esi+0x54],edi
1001c16a:	mov    DWORD PTR [esi+0x60],edi
1001c16d:	mov    DWORD PTR [esi+0x64],edi
1001c170:	mov    DWORD PTR [esi+0x68],edi
1001c173:	mov    DWORD PTR [esi+0x6c],edi
1001c176:	mov    DWORD PTR [esi+0x70],edi
1001c179:	mov    DWORD PTR [esi+0x74],edi
1001c17c:	mov    DWORD PTR [esi+0x78],edi
1001c17f:	mov    DWORD PTR [esi+0x7c],edi
1001c182:	mov    DWORD PTR [esi+0xd8],edi
1001c188:	mov    DWORD PTR [esi+0xdc],edi
1001c18e:	mov    DWORD PTR [esi+0xe8],edi
1001c194:	mov    eax,DWORD PTR [esi+0xc8]
1001c19a:	and    DWORD PTR [esi+0x98],0xffffffc0
1001c1a1:	and    eax,0xfffffffb
1001c1a4:	or     eax,0x3
1001c1a7:	push   0x8
1001c1a9:	mov    DWORD PTR [esi+0xc8],eax
1001c1af:	mov    DWORD PTR [esi+0xcc],edi
1001c1b5:	call   DWORD PTR ds:0x10066318
1001c1bb:	and    DWORD PTR [esi+0x98],0xffffffbf
1001c1c2:	mov    DWORD PTR [esi+0xd0],eax
1001c1c8:	mov    eax,DWORD PTR [esi+0xc8]
1001c1ce:	and    eax,0xffffffaf
1001c1d1:	or     eax,0x28
1001c1d4:	mov    DWORD PTR [esi+0xe4],edi
1001c1da:	mov    DWORD PTR [esi+0xc8],eax
1001c1e0:	mov    DWORD PTR [esi+0x58],edi
1001c1e3:	mov    DWORD PTR [esi+0xc4],edi
1001c1e9:	mov    DWORD PTR [esi+0xd4],0x400
1001c1f3:	mov    DWORD PTR [esi+0x94],0xcdcdcdcd
1001c1fd:	mov    DWORD PTR [esi+0xe0],0x4
1001c207:	mov    BYTE PTR [esi+0x5c],0x1
1001c20b:	mov    eax,esi
1001c20d:	pop    edi
1001c20e:	ret    
1001c20f:	push   esi
1001c210:	mov    esi,eax
1001c212:	push   DWORD PTR [esi+0xe8]
1001c218:	call   DWORD PTR ds:0x100662b4
1001c21e:	mov    eax,DWORD PTR [esi+0xdc]
1001c224:	test   eax,eax
1001c226:	je     0x1001c22e
1001c228:	mov    ecx,DWORD PTR [eax]
1001c22a:	push   eax
1001c22b:	call   DWORD PTR [ecx+0x8]
1001c22e:	mov    eax,DWORD PTR [esi+0xd8]
1001c234:	test   eax,eax
1001c236:	je     0x1001c23e
1001c238:	mov    ecx,DWORD PTR [eax]
1001c23a:	push   eax
1001c23b:	call   DWORD PTR [ecx+0x8]
1001c23e:	mov    eax,DWORD PTR [esi+0x7c]
1001c241:	test   eax,eax
1001c243:	je     0x1001c24b
1001c245:	mov    ecx,DWORD PTR [eax]
1001c247:	push   eax
1001c248:	call   DWORD PTR [ecx+0x8]
1001c24b:	mov    eax,DWORD PTR [esi+0x78]
1001c24e:	test   eax,eax
1001c250:	je     0x1001c258
1001c252:	mov    ecx,DWORD PTR [eax]
1001c254:	push   eax
1001c255:	call   DWORD PTR [ecx+0x8]
1001c258:	mov    eax,DWORD PTR [esi+0x74]
1001c25b:	test   eax,eax
1001c25d:	je     0x1001c265
1001c25f:	mov    ecx,DWORD PTR [eax]
1001c261:	push   eax
1001c262:	call   DWORD PTR [ecx+0x8]
1001c265:	mov    eax,DWORD PTR [esi+0x70]
1001c268:	test   eax,eax
1001c26a:	je     0x1001c272
1001c26c:	mov    ecx,DWORD PTR [eax]
1001c26e:	push   eax
1001c26f:	call   DWORD PTR [ecx+0x8]
1001c272:	mov    eax,DWORD PTR [esi+0x6c]
1001c275:	test   eax,eax
1001c277:	je     0x1001c27f
1001c279:	mov    ecx,DWORD PTR [eax]
1001c27b:	push   eax
1001c27c:	call   DWORD PTR [ecx+0x8]
1001c27f:	mov    eax,DWORD PTR [esi+0x68]
1001c282:	test   eax,eax
1001c284:	je     0x1001c28c
1001c286:	mov    ecx,DWORD PTR [eax]
1001c288:	push   eax
1001c289:	call   DWORD PTR [ecx+0x8]
1001c28c:	mov    eax,DWORD PTR [esi+0x64]
1001c28f:	test   eax,eax
1001c291:	je     0x1001c299
1001c293:	mov    ecx,DWORD PTR [eax]
1001c295:	push   eax
1001c296:	call   DWORD PTR [ecx+0x8]
1001c299:	mov    eax,DWORD PTR [esi+0x60]
1001c29c:	test   eax,eax
1001c29e:	je     0x1001c2a6
1001c2a0:	mov    ecx,DWORD PTR [eax]
1001c2a2:	push   eax
1001c2a3:	call   DWORD PTR [ecx+0x8]
1001c2a6:	mov    eax,DWORD PTR [esi+0x54]
1001c2a9:	test   eax,eax
1001c2ab:	je     0x1001c2b3
1001c2ad:	mov    ecx,DWORD PTR [eax]
1001c2af:	push   eax
1001c2b0:	call   DWORD PTR [ecx+0x8]
1001c2b3:	mov    eax,DWORD PTR [esi+0x3c]
1001c2b6:	test   eax,eax
1001c2b8:	je     0x1001c2c0
1001c2ba:	mov    ecx,DWORD PTR [eax]
1001c2bc:	push   eax
1001c2bd:	call   DWORD PTR [ecx+0x8]
1001c2c0:	mov    esi,DWORD PTR [esi+0x14]
1001c2c3:	test   esi,esi
1001c2c5:	je     0x1001c2cd
1001c2c7:	push   esi
1001c2c8:	call   0x1005738e
1001c2cd:	pop    esi
1001c2ce:	ret    
1001c2cf:	mov    eax,DWORD PTR [ecx]
1001c2d1:	call   DWORD PTR [eax+0x10]
1001c2d4:	mov    ecx,DWORD PTR [eax]
1001c2d6:	push   eax
1001c2d7:	call   DWORD PTR [ecx+0x8]
1001c2da:	ret    0x4
1001c2dd:	push   ebp
1001c2de:	mov    ebp,esp
1001c2e0:	and    esp,0xfffffff8
1001c2e3:	sub    esp,0xc
1001c2e6:	push   ebx
1001c2e7:	push   esi
1001c2e8:	push   edi
1001c2e9:	mov    edi,ecx
1001c2eb:	xor    ecx,ecx
1001c2ed:	cmp    DWORD PTR [ebp+0x1c],ecx
1001c2f0:	jne    0x1001c702
1001c2f6:	mov    eax,DWORD PTR [ebp+0xc]
1001c2f9:	cmp    eax,0x14
1001c2fc:	jne    0x1001c31e
1001c2fe:	xor    esi,esi
1001c300:	inc    esi
1001c301:	cmp    DWORD PTR [edi+0x70],ecx
1001c304:	mov    eax,esi
1001c306:	jne    0x1001c30a
1001c308:	xor    eax,eax
1001c30a:	cmp    eax,ecx
1001c30c:	mov    ebx,DWORD PTR [ebp+0x18]
1001c30f:	mov    DWORD PTR [ebx],esi
1001c311:	je     0x1001c39c
1001c317:	mov    eax,esi
1001c319:	jmp    0x1001c704
1001c31e:	cmp    eax,0xf
1001c321:	jne    0x1001c34f
1001c323:	lea    eax,[esp+0xc]
1001c327:	push   eax
1001c328:	mov    esi,edi
1001c32a:	mov    DWORD PTR [esp+0x10],0x1
1001c332:	call   0x1001cb19
1001c337:	cmp    DWORD PTR [esp+0xc],0x0
1001c33c:	mov    ecx,DWORD PTR [ebp+0x18]
1001c33f:	mov    DWORD PTR [ecx],eax
1001c341:	je     0x1001c4e3
1001c347:	xor    eax,eax
1001c349:	inc    eax
1001c34a:	jmp    0x1001c704
1001c34f:	cmp    eax,0x5
1001c352:	jne    0x1001c36d
1001c354:	mov    ecx,DWORD PTR [ebp+0x14]
1001c357:	lea    eax,[esp+0xc]
1001c35b:	push   eax
1001c35c:	mov    ebx,edi
1001c35e:	mov    DWORD PTR [esp+0x10],0x1
1001c366:	call   0x1001ca0d
1001c36b:	jmp    0x1001c337
1001c36d:	cmp    eax,0x21
1001c370:	jne    0x1001c48e
1001c376:	lea    eax,[esp+0xc]
1001c37a:	push   eax
1001c37b:	mov    ecx,edi
1001c37d:	mov    DWORD PTR [esp+0x10],0x1
1001c385:	call   0x1001c8c9
1001c38a:	cmp    DWORD PTR [esp+0xc],0x0
1001c38f:	mov    ecx,DWORD PTR [ebp+0x18]
1001c392:	mov    DWORD PTR [ecx],eax
1001c394:	jne    0x1001c347
1001c396:	xor    esi,esi
1001c398:	mov    ebx,DWORD PTR [ebp+0x18]
1001c39b:	inc    esi
1001c39c:	mov    eax,DWORD PTR [edi+0x98]
1001c3a2:	test   al,0x8
1001c3a4:	mov    ecx,DWORD PTR [ebp+0xc]
1001c3a7:	je     0x1001c442
1001c3ad:	lea    edx,[ecx-0x200]
1001c3b3:	cmp    edx,0xd
1001c3b6:	ja     0x1001c442
1001c3bc:	and    al,0x10
1001c3be:	neg    al
1001c3c0:	sbb    eax,eax
1001c3c2:	and    eax,0x3
1001c3c5:	mov    DWORD PTR [esp+0x14],eax
1001c3c9:	jne    0x1001c407
1001c3cb:	mov    eax,DWORD PTR [edi+0x70]
1001c3ce:	test   eax,eax
1001c3d0:	je     0x1001c442
1001c3d2:	movsx  ecx,WORD PTR [ebp+0x14]
1001c3d6:	mov    DWORD PTR [esp+0xc],ecx
1001c3da:	mov    ecx,DWORD PTR [ebp+0x14]
1001c3dd:	shr    ecx,0x10
1001c3e0:	movsx  ecx,cx
1001c3e3:	lea    edx,[esp+0x14]
1001c3e7:	push   edx
1001c3e8:	push   0x0
1001c3ea:	mov    DWORD PTR [esp+0x18],ecx
1001c3ee:	push   DWORD PTR [esp+0x18]
1001c3f2:	mov    ecx,DWORD PTR [eax]
1001c3f4:	push   DWORD PTR [esp+0x18]
1001c3f8:	lea    edx,[edi+0xb4]
1001c3fe:	push   edx
1001c3ff:	push   esi
1001c400:	push   eax
1001c401:	call   DWORD PTR [ecx+0x30]
1001c404:	mov    ecx,DWORD PTR [ebp+0xc]
1001c407:	cmp    DWORD PTR [esp+0x14],0x3
1001c40c:	jne    0x1001c442
1001c40e:	mov    eax,0x200
1001c413:	cmp    ecx,eax
1001c415:	jne    0x1001c4ec
1001c41b:	lea    ecx,[esp+0xc]
1001c41f:	push   ecx
1001c420:	push   DWORD PTR [ebp+0x14]
1001c423:	push   DWORD PTR [ebp+0x10]
1001c426:	push   eax
1001c427:	mov    ecx,edi
1001c429:	mov    DWORD PTR [esp+0x1c],esi
1001c42d:	call   0x1001cadc
1001c432:	cmp    DWORD PTR [esp+0xc],0x0
1001c437:	mov    DWORD PTR [ebx],eax
1001c439:	jne    0x1001c317
1001c43f:	mov    ecx,DWORD PTR [ebp+0xc]
1001c442:	mov    eax,DWORD PTR [edi+0x98]
1001c448:	mov    edx,eax
1001c44a:	shr    edx,0x2
1001c44d:	and    edx,eax
1001c44f:	test   dl,0x8
1001c452:	je     0x1001c659
1001c458:	mov    eax,0x100
1001c45d:	cmp    ecx,eax
1001c45f:	jne    0x1001c569
1001c465:	lea    ecx,[esp+0xc]
1001c469:	push   ecx
1001c46a:	push   DWORD PTR [ebp+0x14]
1001c46d:	push   DWORD PTR [ebp+0x10]
1001c470:	push   eax
1001c471:	mov    ecx,edi
1001c473:	mov    DWORD PTR [esp+0x1c],esi
1001c477:	call   0x1001ca9a
1001c47c:	cmp    DWORD PTR [esp+0xc],0x0
1001c481:	mov    DWORD PTR [ebx],eax
1001c483:	je     0x1001c689
1001c489:	jmp    0x1001c317
1001c48e:	cmp    eax,0x7
1001c491:	jne    0x1001c4c5
1001c493:	lea    eax,[edi+0x98]
1001c499:	or     DWORD PTR [eax],0x20
1001c49c:	test   BYTE PTR [eax],0x40
1001c49f:	mov    DWORD PTR [esp+0xc],0x1
1001c4a7:	jne    0x1001c4ba
1001c4a9:	lea    eax,[esp+0xc]
1001c4ad:	push   eax
1001c4ae:	mov    esi,edi
1001c4b0:	call   0x1001c963
1001c4b5:	jmp    0x1001c38a
1001c4ba:	mov    DWORD PTR [esp+0xc],ecx
1001c4be:	xor    eax,eax
1001c4c0:	jmp    0x1001c38a
1001c4c5:	xor    esi,esi
1001c4c7:	cmp    eax,0x8
1001c4ca:	jne    0x1001c398
1001c4d0:	mov    eax,DWORD PTR [ebp+0x18]
1001c4d3:	and    DWORD PTR [edi+0x98],0xffffffdf
1001c4da:	mov    DWORD PTR [eax],ecx
1001c4dc:	mov    ebx,eax
1001c4de:	jmp    0x1001c39b
1001c4e3:	mov    ebx,ecx
1001c4e5:	xor    esi,esi
1001c4e7:	jmp    0x1001c39b
1001c4ec:	mov    eax,0x202
1001c4f1:	cmp    ecx,eax
1001c4f3:	je     0x1001c41b
1001c4f9:	add    eax,0x3
1001c4fc:	cmp    ecx,eax
1001c4fe:	je     0x1001c41b
1001c504:	mov    eax,0x208
1001c509:	cmp    ecx,eax
1001c50b:	je     0x1001c41b
1001c511:	add    eax,0xfffffff9
1001c514:	cmp    ecx,eax
1001c516:	je     0x1001c41b
1001c51c:	mov    eax,0x204
1001c521:	cmp    ecx,eax
1001c523:	je     0x1001c41b
1001c529:	add    eax,0x3
1001c52c:	cmp    ecx,eax
1001c52e:	je     0x1001c41b
1001c534:	mov    eax,0x203
1001c539:	cmp    ecx,eax
1001c53b:	je     0x1001c41b
1001c541:	add    eax,0x3
1001c544:	cmp    ecx,eax
1001c546:	je     0x1001c41b
1001c54c:	cmp    ecx,0x209
1001c552:	jne    0x1001c442
1001c558:	lea    eax,[esp+0xc]
1001c55c:	push   eax
1001c55d:	push   DWORD PTR [ebp+0x14]
1001c560:	push   DWORD PTR [ebp+0x10]
1001c563:	push   ecx
1001c564:	jmp    0x1001c427
1001c569:	mov    eax,0x101
1001c56e:	cmp    ecx,eax
1001c570:	je     0x1001c465
1001c576:	inc    eax
1001c577:	cmp    ecx,eax
1001c579:	je     0x1001c465
1001c57f:	mov    eax,0x103
1001c584:	cmp    ecx,eax
1001c586:	je     0x1001c465
1001c58c:	inc    eax
1001c58d:	cmp    ecx,eax
1001c58f:	je     0x1001c465
1001c595:	mov    eax,0x105
1001c59a:	cmp    ecx,eax
1001c59c:	je     0x1001c465
1001c5a2:	add    eax,0x2
1001c5a5:	cmp    ecx,eax
1001c5a7:	je     0x1001c465
1001c5ad:	cmp    ecx,0x53
1001c5b0:	jne    0x1001c5c3
1001c5b2:	lea    eax,[esp+0xc]
1001c5b6:	push   eax
1001c5b7:	push   DWORD PTR [ebp+0x14]
1001c5ba:	push   DWORD PTR [ebp+0x10]
1001c5bd:	push   ecx
1001c5be:	jmp    0x1001c471
1001c5c3:	cmp    ecx,0x1f
1001c5c6:	jne    0x1001c5d9
1001c5c8:	lea    eax,[esp+0xc]
1001c5cc:	push   eax
1001c5cd:	push   DWORD PTR [ebp+0x14]
1001c5d0:	push   DWORD PTR [ebp+0x10]
1001c5d3:	push   ecx
1001c5d4:	jmp    0x1001c471
1001c5d9:	mov    eax,0x286
1001c5de:	cmp    ecx,eax
1001c5e0:	jne    0x1001c607
1001c5e2:	lea    ecx,[esp+0xc]
1001c5e6:	push   ecx
1001c5e7:	push   DWORD PTR [ebp+0x14]
1001c5ea:	mov    ecx,edi
1001c5ec:	push   DWORD PTR [ebp+0x10]
1001c5ef:	mov    DWORD PTR [esp+0x18],esi
1001c5f3:	push   eax
1001c5f4:	call   0x1001ca9a
1001c5f9:	cmp    DWORD PTR [esp+0xc],0x0
1001c5fe:	mov    DWORD PTR [ebx],eax
1001c600:	je     0x1001c630
1001c602:	jmp    0x1001c317
1001c607:	cmp    ecx,0x209
1001c60d:	jne    0x1001c620
1001c60f:	lea    eax,[esp+0xc]
1001c613:	push   eax
1001c614:	push   DWORD PTR [ebp+0x14]
1001c617:	push   DWORD PTR [ebp+0x10]
1001c61a:	push   ecx
1001c61b:	jmp    0x1001c471
1001c620:	cmp    ecx,0x281
1001c626:	jb     0x1001c659
1001c628:	cmp    ecx,0x291
1001c62e:	ja     0x1001c659
1001c630:	lea    eax,[esp+0xc]
1001c634:	push   eax
1001c635:	push   DWORD PTR [ebp+0x14]
1001c638:	mov    ecx,edi
1001c63a:	push   DWORD PTR [ebp+0x10]
1001c63d:	mov    DWORD PTR [esp+0x18],esi
1001c641:	push   DWORD PTR [ebp+0xc]
1001c644:	call   0x1001ca9a
1001c649:	cmp    DWORD PTR [esp+0xc],0x0
1001c64e:	mov    DWORD PTR [ebx],eax
1001c650:	jne    0x1001c317
1001c656:	mov    ecx,DWORD PTR [ebp+0xc]
1001c659:	cmp    ecx,0x2
1001c65c:	jne    0x1001c689
1001c65e:	mov    eax,DWORD PTR [edi]
1001c660:	mov    ecx,edi
1001c662:	call   DWORD PTR [eax+0x10]
1001c665:	mov    ecx,DWORD PTR [eax]
1001c667:	push   eax
1001c668:	call   DWORD PTR [ecx+0x4]
1001c66b:	push   DWORD PTR [ebp+0x14]
1001c66e:	push   DWORD PTR [ebp+0x10]
1001c671:	push   0x2
1001c673:	push   DWORD PTR [edi+0x4]
1001c676:	push   DWORD PTR [edi+0x20]
1001c679:	call   DWORD PTR ds:0x10066338
1001c67f:	mov    ecx,edi
1001c681:	call   0x1001c77f
1001c686:	and    DWORD PTR [ebx],0x0
1001c689:	test   BYTE PTR [edi+0xc8],0x8
1001c690:	je     0x1001c6b9
1001c692:	lea    eax,[esp+0xc]
1001c696:	push   eax
1001c697:	push   DWORD PTR [ebp+0x10]
1001c69a:	mov    eax,DWORD PTR [ebp+0xc]
1001c69d:	mov    DWORD PTR [esp+0x14],esi
1001c6a1:	mov    esi,DWORD PTR [ebp+0x14]
1001c6a4:	call   0x1001e860
1001c6a9:	cmp    DWORD PTR [esp+0xc],0x0
1001c6ae:	mov    DWORD PTR [ebx],eax
1001c6b0:	jne    0x1001c347
1001c6b6:	xor    esi,esi
1001c6b8:	inc    esi
1001c6b9:	mov    eax,DWORD PTR [ebp+0xc]
1001c6bc:	cmp    eax,DWORD PTR ds:0x10080fd8
1001c6c2:	jne    0x1001c6da
1001c6c4:	mov    eax,DWORD PTR [edi]
1001c6c6:	mov    ecx,edi
1001c6c8:	call   DWORD PTR [eax+0x10]
1001c6cb:	mov    edi,eax
1001c6cd:	mov    eax,DWORD PTR [edi]
1001c6cf:	push   edi
1001c6d0:	call   DWORD PTR [eax+0x4]
1001c6d3:	mov    DWORD PTR [ebx],edi
1001c6d5:	jmp    0x1001c317
1001c6da:	cmp    eax,DWORD PTR ds:0x10080fdc
1001c6e0:	jne    0x1001c6eb
1001c6e2:	mov    edi,DWORD PTR [edi+0x60]
1001c6e5:	test   edi,edi
1001c6e7:	je     0x1001c6d3
1001c6e9:	jmp    0x1001c6cd
1001c6eb:	cmp    eax,0x37f
1001c6f0:	jne    0x1001c702
1001c6f2:	push   DWORD PTR [ebp+0x14]
1001c6f5:	push   edi
1001c6f6:	call   0x1001c70d
1001c6fb:	mov    DWORD PTR [ebx],eax
1001c6fd:	jmp    0x1001c317
1001c702:	xor    eax,eax
1001c704:	pop    edi
1001c705:	pop    esi
1001c706:	pop    ebx
1001c707:	mov    esp,ebp
1001c709:	pop    ebp
1001c70a:	ret    0x18
1001c70d:	push   0x0
1001c70f:	mov    eax,0x1005f85a
1001c714:	call   0x10059c75
1001c719:	mov    eax,DWORD PTR [ebp+0x8]
1001c71c:	mov    eax,DWORD PTR [eax+0x60]
1001c71f:	xor    ecx,ecx
1001c721:	test   eax,eax
1001c723:	mov    DWORD PTR [ebp+0x8],ecx
1001c726:	je     0x1001c739
1001c728:	mov    ecx,DWORD PTR [eax]
1001c72a:	lea    edx,[ebp+0x8]
1001c72d:	push   edx
1001c72e:	push   0x10070a30
1001c733:	push   eax
1001c734:	call   DWORD PTR [ecx]
1001c736:	mov    ecx,DWORD PTR [ebp+0x8]
1001c739:	and    DWORD PTR [ebp-0x4],0x0
1001c73d:	test   ecx,ecx
1001c73f:	je     0x1001c767
1001c741:	push   DWORD PTR [ebp+0xc]
1001c744:	mov    eax,DWORD PTR [ecx]
1001c746:	push   ecx
1001c747:	call   DWORD PTR [eax+0x14]
1001c74a:	test   eax,eax
1001c74c:	jne    0x1001c764
1001c74e:	or     DWORD PTR [ebp-0x4],0xffffffff
1001c752:	mov    eax,DWORD PTR [ebp+0x8]
1001c755:	test   eax,eax
1001c757:	je     0x1001c75f
1001c759:	mov    ecx,DWORD PTR [eax]
1001c75b:	push   eax
1001c75c:	call   DWORD PTR [ecx+0x8]
1001c75f:	xor    eax,eax
1001c761:	inc    eax
1001c762:	jmp    0x1001c777
1001c764:	mov    ecx,DWORD PTR [ebp+0x8]
1001c767:	or     DWORD PTR [ebp-0x4],0xffffffff
1001c76b:	test   ecx,ecx
1001c76d:	je     0x1001c775
1001c76f:	mov    eax,DWORD PTR [ecx]
1001c771:	push   ecx
1001c772:	call   DWORD PTR [eax+0x8]
1001c775:	xor    eax,eax
1001c777:	call   0x10059d4d
1001c77c:	ret    0x8
1001c77f:	push   0x4
1001c781:	mov    eax,0x1005fa5a
1001c786:	call   0x10059c75
1001c78b:	mov    esi,ecx
1001c78d:	mov    eax,DWORD PTR [esi+0x98]
1001c793:	test   al,0x40
1001c795:	jne    0x1001c8c3
1001c79b:	or     eax,0x40
1001c79e:	mov    DWORD PTR [esi+0x98],eax
1001c7a4:	mov    eax,DWORD PTR [esi+0x70]
1001c7a7:	xor    edi,edi
1001c7a9:	cmp    eax,edi
1001c7ab:	je     0x1001c7b7
1001c7ad:	mov    ecx,DWORD PTR [eax]
1001c7af:	push   edi
1001c7b0:	push   edi
1001c7b1:	push   0x1
1001c7b3:	push   eax
1001c7b4:	call   DWORD PTR [ecx+0x1c]
1001c7b7:	mov    ecx,DWORD PTR [esi+0x94]
1001c7bd:	cmp    ecx,0xcdcdcdcd
1001c7c3:	je     0x1001c7df
1001c7c5:	mov    eax,DWORD PTR [esi+0x60]
1001c7c8:	push   ecx
1001c7c9:	lea    ecx,[esi+0x80]
1001c7cf:	push   ecx
1001c7d0:	call   0x1001b78c
1001c7d5:	mov    DWORD PTR [esi+0x94],0xcdcdcdcd
1001c7df:	mov    eax,DWORD PTR [esi+0x64]
1001c7e2:	cmp    eax,edi
1001c7e4:	je     0x1001c807
1001c7e6:	push   DWORD PTR [esi+0x9c]
1001c7ec:	mov    ecx,DWORD PTR [eax]
1001c7ee:	push   eax
1001c7ef:	call   DWORD PTR [ecx+0x50]
1001c7f2:	mov    eax,DWORD PTR [esi+0x64]
1001c7f5:	mov    ecx,DWORD PTR [eax]
1001c7f7:	push   0x1
1001c7f9:	push   eax
1001c7fa:	call   DWORD PTR [ecx+0x18]
1001c7fd:	mov    eax,DWORD PTR [esi+0x64]
1001c800:	mov    ecx,DWORD PTR [eax]
1001c802:	push   edi
1001c803:	push   eax
1001c804:	call   DWORD PTR [ecx+0xc]
1001c807:	mov    eax,DWORD PTR [esi+0x60]
1001c80a:	cmp    eax,edi
1001c80c:	je     0x1001c841
1001c80e:	mov    DWORD PTR [ebp-0x10],edi
1001c811:	lea    edx,[ebp-0x10]
1001c814:	push   edx
1001c815:	push   0x10070324
1001c81a:	mov    DWORD PTR [ebp-0x4],edi
1001c81d:	mov    ecx,DWORD PTR [eax]
1001c81f:	push   eax
1001c820:	call   DWORD PTR [ecx]
1001c822:	mov    eax,DWORD PTR [ebp-0x10]
1001c825:	cmp    eax,edi
1001c827:	je     0x1001c833
1001c829:	mov    ecx,DWORD PTR [eax]
1001c82b:	push   edi
1001c82c:	push   eax
1001c82d:	call   DWORD PTR [ecx+0xc]
1001c830:	mov    eax,DWORD PTR [ebp-0x10]
1001c833:	or     DWORD PTR [ebp-0x4],0xffffffff
1001c837:	cmp    eax,edi
1001c839:	je     0x1001c841
1001c83b:	mov    ecx,DWORD PTR [eax]
1001c83d:	push   eax
1001c83e:	call   DWORD PTR [ecx+0x8]
1001c841:	mov    eax,DWORD PTR [esi+0x70]
1001c844:	cmp    eax,edi
1001c846:	je     0x1001c851
1001c848:	mov    DWORD PTR [esi+0x70],edi
1001c84b:	mov    ecx,DWORD PTR [eax]
1001c84d:	push   eax
1001c84e:	call   DWORD PTR [ecx+0x8]
1001c851:	mov    DWORD PTR [esi+0x90],edi
1001c857:	mov    eax,DWORD PTR [esi+0x74]
1001c85a:	cmp    eax,edi
1001c85c:	je     0x1001c867
1001c85e:	mov    DWORD PTR [esi+0x74],edi
1001c861:	mov    ecx,DWORD PTR [eax]
1001c863:	push   eax
1001c864:	call   DWORD PTR [ecx+0x8]
1001c867:	mov    eax,DWORD PTR [esi+0x64]
1001c86a:	cmp    eax,edi
1001c86c:	je     0x1001c877
1001c86e:	mov    DWORD PTR [esi+0x64],edi
1001c871:	mov    ecx,DWORD PTR [eax]
1001c873:	push   eax
1001c874:	call   DWORD PTR [ecx+0x8]
1001c877:	mov    eax,DWORD PTR [esi+0x60]
1001c87a:	cmp    eax,edi
1001c87c:	je     0x1001c887
1001c87e:	mov    DWORD PTR [esi+0x60],edi
1001c881:	mov    ecx,DWORD PTR [eax]
1001c883:	push   eax
1001c884:	call   DWORD PTR [ecx+0x8]
1001c887:	mov    eax,DWORD PTR [esi+0x6c]
1001c88a:	cmp    eax,edi
1001c88c:	je     0x1001c897
1001c88e:	mov    DWORD PTR [esi+0x6c],edi
1001c891:	mov    ecx,DWORD PTR [eax]
1001c893:	push   eax
1001c894:	call   DWORD PTR [ecx+0x8]
1001c897:	mov    eax,DWORD PTR [esi+0x68]
1001c89a:	cmp    eax,edi
1001c89c:	je     0x1001c8a7
1001c89e:	mov    DWORD PTR [esi+0x68],edi
1001c8a1:	mov    ecx,DWORD PTR [eax]
1001c8a3:	push   eax
1001c8a4:	call   DWORD PTR [ecx+0x8]
1001c8a7:	and    DWORD PTR [esi+0x98],0xffffffa4
1001c8ae:	add    esi,0xc4
1001c8b4:	mov    eax,DWORD PTR [esi]
1001c8b6:	cmp    eax,edi
1001c8b8:	je     0x1001c8c3
1001c8ba:	push   eax
1001c8bb:	call   DWORD PTR ds:0x100662fc
1001c8c1:	mov    DWORD PTR [esi],edi
1001c8c3:	call   0x10059d4d
1001c8c8:	ret    
1001c8c9:	push   0x0
1001c8cb:	mov    eax,0x1005f85a
1001c8d0:	call   0x10059c75
1001c8d5:	mov    esi,ecx
1001c8d7:	mov    eax,DWORD PTR [ebp+0x8]
1001c8da:	xor    edi,edi
1001c8dc:	test   WORD PTR [esi+0xa0],0x4000
1001c8e5:	mov    DWORD PTR [eax],edi
1001c8e7:	je     0x1001c942
1001c8e9:	cmp    DWORD PTR [esi+0x64],edi
1001c8ec:	je     0x1001c959
1001c8ee:	test   BYTE PTR [esi+0x98],0x1
1001c8f5:	jne    0x1001c959
1001c8f7:	mov    DWORD PTR [ebp+0x8],edi
1001c8fa:	mov    DWORD PTR [ebp-0x4],edi
1001c8fd:	mov    eax,DWORD PTR [esi]
1001c8ff:	call   DWORD PTR [eax+0x10]
1001c902:	mov    ecx,DWORD PTR [eax]
1001c904:	lea    edx,[ebp+0x8]
1001c907:	push   edx
1001c908:	push   0x10070384
1001c90d:	push   eax
1001c90e:	call   DWORD PTR [ecx]
1001c910:	mov    ecx,DWORD PTR [ebp+0x8]
1001c913:	cmp    ecx,edi
1001c915:	je     0x1001c932
1001c917:	mov    eax,DWORD PTR [esi+0x64]
1001c91a:	mov    edx,DWORD PTR [eax]
1001c91c:	lea    ebx,[esi+0xb4]
1001c922:	push   ebx
1001c923:	push   DWORD PTR [esi+0x4]
1001c926:	push   edi
1001c927:	push   ecx
1001c928:	push   edi
1001c929:	push   0xfffffffb
1001c92b:	push   eax
1001c92c:	call   DWORD PTR [edx+0x2c]
1001c92f:	mov    ecx,DWORD PTR [ebp+0x8]
1001c932:	or     DWORD PTR [ebp-0x4],0xffffffff
1001c936:	cmp    ecx,edi
1001c938:	je     0x1001c959
1001c93a:	mov    eax,DWORD PTR [ecx]
1001c93c:	push   ecx
1001c93d:	call   DWORD PTR [eax+0x8]
1001c940:	jmp    0x1001c959
1001c942:	lea    eax,[esi+0x98]
1001c948:	or     DWORD PTR [eax],0x20
1001c94b:	test   BYTE PTR [eax],0x40
1001c94e:	jne    0x1001c959
1001c950:	lea    eax,[ebp+0x8]
1001c953:	push   eax
1001c954:	call   0x1001c963
1001c959:	xor    eax,eax
1001c95b:	call   0x10059d4d
1001c960:	ret    0x4
1001c963:	push   0x4
1001c965:	mov    eax,0x1005fa5a
1001c96a:	call   0x10059c75
1001c96f:	xor    edi,edi
1001c971:	cmp    DWORD PTR [esi+0x64],edi
1001c974:	je     0x1001c9ca
1001c976:	test   BYTE PTR [esi+0x98],0x2
1001c97d:	jne    0x1001c9ca
1001c97f:	mov    DWORD PTR [ebp-0x10],edi
1001c982:	mov    DWORD PTR [ebp-0x4],edi
1001c985:	mov    eax,DWORD PTR [esi]
1001c987:	mov    ecx,esi
1001c989:	call   DWORD PTR [eax+0x10]
1001c98c:	mov    ecx,DWORD PTR [eax]
1001c98e:	lea    edx,[ebp-0x10]
1001c991:	push   edx
1001c992:	push   0x10070384
1001c997:	push   eax
1001c998:	call   DWORD PTR [ecx]
1001c99a:	mov    ecx,DWORD PTR [ebp-0x10]
1001c99d:	cmp    ecx,edi
1001c99f:	je     0x1001c9bc
1001c9a1:	mov    eax,DWORD PTR [esi+0x64]
1001c9a4:	mov    edx,DWORD PTR [eax]
1001c9a6:	lea    ebx,[esi+0xb4]
1001c9ac:	push   ebx
1001c9ad:	push   DWORD PTR [esi+0x4]
1001c9b0:	push   edi
1001c9b1:	push   ecx
1001c9b2:	push   edi
1001c9b3:	push   0xfffffffc
1001c9b5:	push   eax
1001c9b6:	call   DWORD PTR [edx+0x2c]
1001c9b9:	mov    ecx,DWORD PTR [ebp-0x10]
1001c9bc:	or     DWORD PTR [ebp-0x4],0xffffffff
1001c9c0:	cmp    ecx,edi
1001c9c2:	je     0x1001c9ca
1001c9c4:	mov    eax,DWORD PTR [ecx]
1001c9c6:	push   ecx
1001c9c7:	call   DWORD PTR [eax+0x8]
1001c9ca:	test   BYTE PTR [esi+0x98],0x8
1001c9d1:	je     0x1001c9d8
1001c9d3:	push   DWORD PTR [esi+0x4]
1001c9d6:	jmp    0x1001c9f8
1001c9d8:	call   DWORD PTR ds:0x100662e4
1001c9de:	push   eax
1001c9df:	push   DWORD PTR [esi+0x4]
1001c9e2:	call   DWORD PTR ds:0x100662ec
1001c9e8:	test   eax,eax
1001c9ea:	jne    0x1001c9fe
1001c9ec:	push   0x5
1001c9ee:	push   DWORD PTR [esi+0x4]
1001c9f1:	call   DWORD PTR ds:0x10066340
1001c9f7:	push   eax
1001c9f8:	call   DWORD PTR ds:0x100662cc
1001c9fe:	mov    eax,DWORD PTR [ebp+0x8]
1001ca01:	mov    DWORD PTR [eax],edi
1001ca03:	xor    eax,eax
1001ca05:	call   0x10059d4d
1001ca0a:	ret    0x4
1001ca0d:	mov    edx,DWORD PTR [ebx+0xb4]
1001ca13:	movsx  eax,cx
1001ca16:	shr    ecx,0x10
1001ca19:	push   esi
1001ca1a:	mov    esi,DWORD PTR [ebx+0xb8]
1001ca20:	movsx  ecx,cx
1001ca23:	add    ecx,esi
1001ca25:	add    eax,edx
1001ca27:	push   edi
1001ca28:	mov    DWORD PTR [ebx+0xbc],eax
1001ca2e:	mov    DWORD PTR [ebx+0xc0],ecx
1001ca34:	sub    ecx,esi
1001ca36:	lea    edi,[ebx+0xac]
1001ca3c:	sub    eax,edx
1001ca3e:	lea    esi,[ebx+0xa4]
1001ca44:	mov    DWORD PTR [edi],eax
1001ca46:	mov    DWORD PTR [ebx+0xb0],ecx
1001ca4c:	call   0x1001bea7
1001ca51:	mov    eax,DWORD PTR [ebx+0x64]
1001ca54:	test   eax,eax
1001ca56:	je     0x1001ca61
1001ca58:	mov    ecx,DWORD PTR [eax]
1001ca5a:	push   esi
1001ca5b:	push   0x1
1001ca5d:	push   eax
1001ca5e:	call   DWORD PTR [ecx+0x44]
1001ca61:	mov    eax,DWORD PTR [ebx+0x74]
1001ca64:	test   eax,eax
1001ca66:	pop    edi
1001ca67:	pop    esi
1001ca68:	je     0x1001ca78
1001ca6a:	mov    edx,DWORD PTR [eax]
1001ca6c:	lea    ecx,[ebx+0xb4]
1001ca72:	push   ecx
1001ca73:	push   ecx
1001ca74:	push   eax
1001ca75:	call   DWORD PTR [edx+0x1c]
1001ca78:	test   BYTE PTR [ebx+0x98],0x8
1001ca7f:	je     0x1001ca8e
1001ca81:	push   0x1
1001ca83:	lea    eax,[ebx+0x2c]
1001ca86:	mov    ecx,DWORD PTR [eax]
1001ca88:	push   0x0
1001ca8a:	push   eax
1001ca8b:	call   DWORD PTR [ecx+0x64]
1001ca8e:	mov    eax,DWORD PTR [esp+0x4]
1001ca92:	and    DWORD PTR [eax],0x0
1001ca95:	xor    eax,eax
1001ca97:	ret    0x4
1001ca9a:	push   ebp
1001ca9b:	mov    ebp,esp
1001ca9d:	push   ecx
1001ca9e:	mov    eax,DWORD PTR [ecx+0x98]
1001caa4:	and    DWORD PTR [ebp-0x4],0x0
1001caa8:	test   al,0x1
1001caaa:	je     0x1001cacf
1001caac:	test   al,0x8
1001caae:	je     0x1001cacf
1001cab0:	mov    eax,DWORD PTR [ecx+0x74]
1001cab3:	test   eax,eax
1001cab5:	je     0x1001cacf
1001cab7:	mov    ecx,DWORD PTR [eax]
1001cab9:	lea    edx,[ebp-0x4]
1001cabc:	push   edx
1001cabd:	push   DWORD PTR [ebp+0x10]
1001cac0:	push   DWORD PTR [ebp+0xc]
1001cac3:	push   DWORD PTR [ebp+0x8]
1001cac6:	push   eax
1001cac7:	call   DWORD PTR [ecx+0x24]
1001caca:	cmp    eax,0x1
1001cacd:	jne    0x1001cad5
1001cacf:	mov    eax,DWORD PTR [ebp+0x14]
1001cad2:	and    DWORD PTR [eax],0x0
1001cad5:	mov    eax,DWORD PTR [ebp-0x4]
1001cad8:	leave  
1001cad9:	ret    0x10
1001cadc:	push   ebp
1001cadd:	mov    ebp,esp
1001cadf:	push   ecx
1001cae0:	mov    eax,DWORD PTR [ecx+0x98]
1001cae6:	and    DWORD PTR [ebp-0x4],0x0
1001caea:	test   al,0x1
1001caec:	je     0x1001cb0c
1001caee:	test   al,0x8
1001caf0:	je     0x1001cb0c
1001caf2:	mov    eax,DWORD PTR [ecx+0x74]
1001caf5:	test   eax,eax
1001caf7:	je     0x1001cb0c
1001caf9:	mov    ecx,DWORD PTR [eax]
1001cafb:	lea    edx,[ebp-0x4]
1001cafe:	push   edx
1001caff:	push   DWORD PTR [ebp+0x10]
1001cb02:	push   DWORD PTR [ebp+0xc]
1001cb05:	push   DWORD PTR [ebp+0x8]
1001cb08:	push   eax
1001cb09:	call   DWORD PTR [ecx+0x24]
1001cb0c:	mov    eax,DWORD PTR [ebp+0x14]
1001cb0f:	and    DWORD PTR [eax],0x0
1001cb12:	mov    eax,DWORD PTR [ebp-0x4]
1001cb15:	leave  
1001cb16:	ret    0x10
1001cb19:	push   ebp
1001cb1a:	mov    ebp,esp
1001cb1c:	sub    esp,0x6c
1001cb1f:	mov    eax,ds:0x1007e030
1001cb24:	xor    eax,ebp
1001cb26:	mov    DWORD PTR [ebp-0x8],eax
1001cb29:	mov    eax,DWORD PTR [ebp+0x8]
1001cb2c:	push   ebx
1001cb2d:	push   edi
1001cb2e:	xor    edi,edi
1001cb30:	cmp    DWORD PTR [esi+0x70],edi
1001cb33:	jne    0x1001cb96
1001cb35:	lea    eax,[ebp-0x4c]
1001cb38:	push   eax
1001cb39:	push   DWORD PTR [esi+0x4]
1001cb3c:	call   DWORD PTR ds:0x100662c8
1001cb42:	cmp    eax,edi
1001cb44:	mov    DWORD PTR [ebp-0x50],eax
1001cb47:	je     0x1001cc7b
1001cb4d:	lea    eax,[ebp-0x60]
1001cb50:	push   eax
1001cb51:	push   DWORD PTR [esi+0x4]
1001cb54:	call   DWORD PTR ds:0x100662d4
1001cb5a:	push   DWORD PTR [esi+0xcc]
1001cb60:	call   DWORD PTR ds:0x1006602c
1001cb66:	mov    ebx,eax
1001cb68:	cmp    ebx,edi
1001cb6a:	je     0x1001cb81
1001cb6c:	push   ebx
1001cb6d:	lea    eax,[ebp-0x60]
1001cb70:	push   eax
1001cb71:	push   DWORD PTR [ebp-0x50]
1001cb74:	call   DWORD PTR ds:0x100662f0
1001cb7a:	push   ebx
1001cb7b:	call   DWORD PTR ds:0x10066044
1001cb81:	lea    eax,[ebp-0x4c]
1001cb84:	push   eax
1001cb85:	push   DWORD PTR [esi+0x4]
1001cb88:	call   DWORD PTR ds:0x1006630c
1001cb8e:	xor    eax,eax
1001cb90:	inc    eax
1001cb91:	jmp    0x1001cc7d
1001cb96:	test   BYTE PTR [esi+0x98],0x8
1001cb9d:	je     0x1001cc79
1001cba3:	lea    eax,[ebp-0x4c]
1001cba6:	push   eax
1001cba7:	push   DWORD PTR [esi+0x4]
1001cbaa:	call   DWORD PTR ds:0x100662c8
1001cbb0:	mov    ebx,eax
1001cbb2:	cmp    ebx,edi
1001cbb4:	mov    DWORD PTR [ebp-0x64],ebx
1001cbb7:	je     0x1001cc7b
1001cbbd:	lea    eax,[ebp-0x60]
1001cbc0:	push   eax
1001cbc1:	push   DWORD PTR [esi+0x4]
1001cbc4:	call   DWORD PTR ds:0x100662d4
1001cbca:	mov    eax,DWORD PTR [ebp-0x54]
1001cbcd:	sub    eax,DWORD PTR [ebp-0x5c]
1001cbd0:	push   eax
1001cbd1:	mov    eax,DWORD PTR [ebp-0x58]
1001cbd4:	sub    eax,DWORD PTR [ebp-0x60]
1001cbd7:	push   eax
1001cbd8:	push   ebx
1001cbd9:	call   DWORD PTR ds:0x10066034
1001cbdf:	cmp    eax,edi
1001cbe1:	mov    DWORD PTR [ebp-0x50],eax
1001cbe4:	je     0x1001cb81
1001cbe6:	push   ebx
1001cbe7:	call   DWORD PTR ds:0x1006604c
1001cbed:	mov    ebx,eax
1001cbef:	cmp    ebx,edi
1001cbf1:	je     0x1001cc71
1001cbf3:	push   DWORD PTR [ebp-0x50]
1001cbf6:	push   ebx
1001cbf7:	call   DWORD PTR ds:0x10066048
1001cbfd:	cmp    eax,edi
1001cbff:	mov    DWORD PTR [ebp-0x6c],eax
1001cc02:	je     0x1001cc6a
1001cc04:	push   DWORD PTR [esi+0xcc]
1001cc0a:	call   DWORD PTR ds:0x1006602c
1001cc10:	cmp    eax,edi
1001cc12:	mov    DWORD PTR [ebp-0x68],eax
1001cc15:	je     0x1001cc60
1001cc17:	push   eax
1001cc18:	lea    eax,[ebp-0x60]
1001cc1b:	push   eax
1001cc1c:	push   ebx
1001cc1d:	call   DWORD PTR ds:0x100662f0
1001cc23:	push   DWORD PTR [ebp-0x68]
1001cc26:	call   DWORD PTR ds:0x10066044
1001cc2c:	mov    eax,DWORD PTR [esi+0x70]
1001cc2f:	mov    edx,DWORD PTR [eax]
1001cc31:	push   edi
1001cc32:	push   edi
1001cc33:	lea    ecx,[esi+0xb4]
1001cc39:	push   ecx
1001cc3a:	push   ecx
1001cc3b:	push   ebx
1001cc3c:	push   edi
1001cc3d:	push   edi
1001cc3e:	push   edi
1001cc3f:	push   0xffffffff
1001cc41:	push   0x1
1001cc43:	push   eax
1001cc44:	call   DWORD PTR [edx+0xc]
1001cc47:	push   0xcc0020
1001cc4c:	push   edi
1001cc4d:	push   edi
1001cc4e:	push   ebx
1001cc4f:	push   DWORD PTR [ebp-0x54]
1001cc52:	push   DWORD PTR [ebp-0x58]
1001cc55:	push   edi
1001cc56:	push   edi
1001cc57:	push   DWORD PTR [ebp-0x64]
1001cc5a:	call   DWORD PTR ds:0x10066038
1001cc60:	push   DWORD PTR [ebp-0x6c]
1001cc63:	push   ebx
1001cc64:	call   DWORD PTR ds:0x10066048
1001cc6a:	push   ebx
1001cc6b:	call   DWORD PTR ds:0x1006603c
1001cc71:	push   DWORD PTR [ebp-0x50]
1001cc74:	jmp    0x1001cb7b
1001cc79:	mov    DWORD PTR [eax],edi
1001cc7b:	xor    eax,eax
1001cc7d:	mov    ecx,DWORD PTR [ebp-0x8]
1001cc80:	pop    edi
1001cc81:	xor    ecx,ebp
1001cc83:	pop    ebx
1001cc84:	call   0x100430d7
1001cc89:	leave  
1001cc8a:	ret    0x4
1001cc8d:	push   0x4
1001cc8f:	mov    eax,0x1005fa5a
1001cc94:	call   0x10059c75
1001cc99:	and    DWORD PTR [ebp-0x10],0x0
1001cc9d:	mov    eax,DWORD PTR [ebp+0x8]
1001cca0:	and    DWORD PTR [ebp-0x4],0x0
1001cca4:	mov    ecx,DWORD PTR [eax]
1001cca6:	push   0x0
1001cca8:	push   0x0
1001ccaa:	push   0x1006b858
1001ccaf:	lea    edx,[ebp-0x10]
1001ccb2:	push   edx
1001ccb3:	push   DWORD PTR [ebp+0x14]
1001ccb6:	push   DWORD PTR [ebp+0x10]
1001ccb9:	push   DWORD PTR [ebp+0xc]
1001ccbc:	push   eax
1001ccbd:	call   DWORD PTR [ecx+0x28]
1001ccc0:	or     DWORD PTR [ebp-0x4],0xffffffff
1001ccc4:	mov    edi,eax
1001ccc6:	mov    eax,DWORD PTR [ebp-0x10]
1001ccc9:	test   eax,eax
1001cccb:	je     0x1001ccd3
1001cccd:	mov    ecx,DWORD PTR [eax]
1001cccf:	push   eax
1001ccd0:	call   DWORD PTR [ecx+0x8]
1001ccd3:	mov    eax,edi
1001ccd5:	call   0x10059d4d
1001ccda:	ret    0x10
1001ccdd:	push   ebp
1001ccde:	mov    ebp,esp
1001cce0:	mov    eax,DWORD PTR [ebp+0x8]
1001cce3:	mov    ecx,DWORD PTR [eax]
1001cce5:	push   0x0
1001cce7:	push   DWORD PTR [ebp+0x20]
1001ccea:	push   DWORD PTR [ebp+0x1c]
1001cced:	push   DWORD PTR [ebp+0x18]
1001ccf0:	push   DWORD PTR [ebp+0x14]
1001ccf3:	push   DWORD PTR [ebp+0x10]
1001ccf6:	push   DWORD PTR [ebp+0xc]
1001ccf9:	push   eax
1001ccfa:	call   DWORD PTR [ecx+0x28]
1001ccfd:	pop    ebp
1001ccfe:	ret    0x1c
1001cd01:	push   ebx
1001cd02:	push   ebp
1001cd03:	push   esi
1001cd04:	push   edi
1001cd05:	mov    edi,DWORD PTR [esp+0x14]
1001cd09:	lea    esi,[edi-0x24]
1001cd0c:	xor    ebx,ebx
1001cd0e:	mov    ecx,esi
1001cd10:	inc    ebx
1001cd11:	call   0x1001c77f
1001cd16:	mov    eax,DWORD PTR [edi-0x20]
1001cd19:	test   eax,eax
1001cd1b:	mov    ebp,DWORD PTR ds:0x10066360
1001cd21:	mov    BYTE PTR [esp+0x14],0x0
1001cd26:	je     0x1001cd3f
1001cd28:	cmp    eax,DWORD PTR [esp+0x1c]
1001cd2c:	je     0x1001cd3f
1001cd2e:	push   0x507
1001cd33:	push   0x0
1001cd35:	push   0x0
1001cd37:	push   eax
1001cd38:	call   ebp
1001cd3a:	call   0x1001e813
1001cd3f:	push   DWORD PTR [esp+0x1c]
1001cd43:	call   DWORD PTR ds:0x10066320
1001cd49:	test   eax,eax
1001cd4b:	je     0x1001cd9b
1001cd4d:	mov    ebx,DWORD PTR [esp+0x1c]
1001cd51:	cmp    DWORD PTR [edi-0x20],ebx
1001cd54:	je     0x1001cd60
1001cd56:	call   0x1001e7cf
1001cd5b:	mov    BYTE PTR [esp+0x14],0x1
1001cd60:	push   0x0
1001cd62:	push   0x1
1001cd64:	push   DWORD PTR [esp+0x20]
1001cd68:	mov    ecx,esi
1001cd6a:	call   0x1001e3dc
1001cd6f:	mov    ebx,eax
1001cd71:	test   ebx,ebx
1001cd73:	jge    0x1001cd9b
1001cd75:	mov    ecx,esi
1001cd77:	call   0x1001c77f
1001cd7c:	mov    edi,DWORD PTR [edi-0x20]
1001cd7f:	test   edi,edi
1001cd81:	je     0x1001cd9b
1001cd83:	push   0x507
1001cd88:	push   0x0
1001cd8a:	push   0x0
1001cd8c:	push   edi
1001cd8d:	call   ebp
1001cd8f:	cmp    BYTE PTR [esp+0x14],0x0
1001cd94:	je     0x1001cd9b
1001cd96:	call   0x1001e813
1001cd9b:	pop    edi
1001cd9c:	pop    esi
1001cd9d:	pop    ebp
1001cd9e:	mov    eax,ebx
1001cda0:	pop    ebx
1001cda1:	ret    0xc
1001cda4:	mov    ecx,DWORD PTR [esp+0xc]
1001cda8:	test   ecx,ecx
1001cdaa:	mov    eax,0x80004003
1001cdaf:	je     0x1001cdd0
1001cdb1:	mov    eax,DWORD PTR [esp+0x4]
1001cdb5:	mov    eax,DWORD PTR [eax+0x3c]
1001cdb8:	test   eax,eax
1001cdba:	je     0x1001cdc8
1001cdbc:	mov    edx,DWORD PTR [eax]
1001cdbe:	push   ecx
1001cdbf:	push   DWORD PTR [esp+0xc]
1001cdc3:	push   eax
1001cdc4:	call   DWORD PTR [edx]
1001cdc6:	jmp    0x1001cdd0
1001cdc8:	and    DWORD PTR [ecx],0x0
1001cdcb:	mov    eax,0x80040004
1001cdd0:	ret    0xc
1001cdd3:	push   esi
1001cdd4:	mov    esi,DWORD PTR [esp+0x8]
1001cdd8:	push   edi
1001cdd9:	mov    edi,DWORD PTR [esp+0x10]
1001cddd:	add    esi,0x54
1001cde0:	cmp    DWORD PTR [esi],edi
1001cde2:	je     0x1001cde9
1001cde4:	call   0x10007617
1001cde9:	pop    edi
1001cdea:	xor    eax,eax
1001cdec:	pop    esi
1001cded:	ret    0x8
1001cdf0:	push   esi
1001cdf1:	mov    esi,DWORD PTR [esp+0x8]
1001cdf5:	push   edi
1001cdf6:	mov    edi,DWORD PTR [esp+0x10]
1001cdfa:	add    esi,0x58
1001cdfd:	cmp    DWORD PTR [esi],edi
1001cdff:	je     0x1001ce06
1001ce01:	call   0x10007617
1001ce06:	pop    edi
1001ce07:	xor    eax,eax
1001ce09:	pop    esi
1001ce0a:	ret    0x8
1001ce0d:	push   0x4
1001ce0f:	mov    eax,0x1005fa5a
1001ce14:	call   0x10059c75
1001ce19:	and    DWORD PTR [ebp-0x10],0x0
1001ce1d:	push   DWORD PTR [ebp+0x18]
1001ce20:	mov    eax,DWORD PTR [ebp+0x8]
1001ce23:	and    DWORD PTR [ebp-0x4],0x0
1001ce27:	mov    ecx,DWORD PTR [eax]
1001ce29:	push   0x0
1001ce2b:	push   0x1006b858
1001ce30:	lea    edx,[ebp-0x10]
1001ce33:	push   edx
1001ce34:	push   DWORD PTR [ebp+0x14]
1001ce37:	push   DWORD PTR [ebp+0x10]
1001ce3a:	push   DWORD PTR [ebp+0xc]
1001ce3d:	push   eax
1001ce3e:	call   DWORD PTR [ecx+0x28]
1001ce41:	or     DWORD PTR [ebp-0x4],0xffffffff
1001ce45:	mov    edi,eax
1001ce47:	mov    eax,DWORD PTR [ebp-0x10]
1001ce4a:	test   eax,eax
1001ce4c:	je     0x1001ce54
1001ce4e:	mov    ecx,DWORD PTR [eax]
1001ce50:	push   eax
1001ce51:	call   DWORD PTR [ecx+0x8]
1001ce54:	mov    eax,edi
1001ce56:	call   0x10059d4d
1001ce5b:	ret    0x14
1001ce5e:	push   ebp
1001ce5f:	mov    ebp,esp
1001ce61:	and    esp,0xfffffff8
1001ce64:	push   0xffffffff
1001ce66:	push   0x100604d4
1001ce6b:	mov    eax,fs:0x0
1001ce71:	push   eax
1001ce72:	sub    esp,0x40
1001ce75:	push   ebx
1001ce76:	push   esi
1001ce77:	push   edi
1001ce78:	mov    eax,ds:0x1007e030
1001ce7d:	xor    eax,esp
1001ce7f:	push   eax
1001ce80:	lea    eax,[esp+0x50]
1001ce84:	mov    fs:0x0,eax
1001ce8a:	mov    eax,DWORD PTR [ebp+0x18]
1001ce8d:	test   eax,eax
1001ce8f:	jne    0x1001ce9b
1001ce91:	mov    eax,0x80004003
1001ce96:	jmp    0x1001d1a5
1001ce9b:	mov    edi,DWORD PTR [ebp+0x8]
1001ce9e:	and    DWORD PTR [eax],0x0
1001cea1:	lea    esi,[edi-0x24]
1001cea4:	mov    ecx,esi
1001cea6:	mov    DWORD PTR [esp+0x14],0x1
1001ceae:	mov    BYTE PTR [esp+0x13],0x0
1001ceb3:	mov    DWORD PTR [esp+0x28],esi
1001ceb7:	call   0x1001c77f
1001cebc:	lea    ebx,[edi-0x20]
1001cebf:	mov    eax,DWORD PTR [ebx]
1001cec1:	test   eax,eax
1001cec3:	mov    DWORD PTR [esp+0x24],ebx
1001cec7:	je     0x1001cee3
1001cec9:	cmp    eax,DWORD PTR [ebp+0x10]
1001cecc:	je     0x1001cee3
1001cece:	push   0x507
1001ced3:	push   0x0
1001ced5:	push   0x0
1001ced7:	push   eax
1001ced8:	call   DWORD PTR ds:0x10066360
1001cede:	call   0x1001e813
1001cee3:	push   DWORD PTR [ebp+0x10]
1001cee6:	call   DWORD PTR ds:0x10066320
1001ceec:	test   eax,eax
1001ceee:	je     0x1001d1a1
1001cef4:	mov    eax,DWORD PTR [ebp+0x10]
1001cef7:	cmp    DWORD PTR [ebx],eax
1001cef9:	je     0x1001cf0b
1001cefb:	mov    ebx,eax
1001cefd:	call   0x1001e7cf
1001cf02:	mov    ebx,DWORD PTR [esp+0x24]
1001cf06:	mov    BYTE PTR [esp+0x13],0x1
1001cf0b:	cmp    DWORD PTR [edi+0xa8],0x0
1001cf12:	jne    0x1001cf30
1001cf14:	push   ebx
1001cf15:	call   0x1001bda8
1001cf1a:	test   eax,eax
1001cf1c:	je     0x1001cf22
1001cf1e:	push   0xf
1001cf20:	jmp    0x1001cf24
1001cf22:	push   0x5
1001cf24:	call   DWORD PTR ds:0x10066318
1001cf2a:	mov    DWORD PTR [edi+0xa8],eax
1001cf30:	mov    esi,DWORD PTR [ebp+0x18]
1001cf33:	push   DWORD PTR [ebp+0x24]
1001cf36:	mov    ecx,DWORD PTR [ebp+0xc]
1001cf39:	lea    edi,[esp+0x16]
1001cf3d:	mov    ebx,esi
1001cf3f:	mov    BYTE PTR [esp+0x16],0x0
1001cf44:	call   0x1001bf10
1001cf49:	xor    ebx,ebx
1001cf4b:	cmp    eax,ebx
1001cf4d:	pop    ecx
1001cf4e:	mov    DWORD PTR [esp+0x14],eax
1001cf52:	jl     0x1001cf67
1001cf54:	push   DWORD PTR [ebp+0x14]
1001cf57:	mov    ecx,DWORD PTR [esp+0x2c]
1001cf5b:	push   ebx
1001cf5c:	push   DWORD PTR [esi]
1001cf5e:	call   0x1001e3dc
1001cf63:	mov    DWORD PTR [esp+0x14],eax
1001cf67:	cmp    DWORD PTR [esp+0x14],ebx
1001cf6b:	mov    edx,DWORD PTR [ebp+0x8]
1001cf6e:	mov    esi,DWORD PTR [ebp+0x1c]
1001cf71:	lea    ecx,[edx+0x5c]
1001cf74:	mov    edi,ecx
1001cf76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1001cf77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1001cf78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1001cf79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1001cf7a:	jl     0x1001d16c
1001cf80:	mov    esi,DWORD PTR [ebp+0x18]
1001cf83:	mov    eax,DWORD PTR [esi]
1001cf85:	cmp    eax,ebx
1001cf87:	je     0x1001cf9b
1001cf89:	cmp    DWORD PTR [ebp+0x20],ebx
1001cf8c:	je     0x1001cf9b
1001cf8e:	add    edx,0x70
1001cf91:	push   edx
1001cf92:	push   ecx
1001cf93:	push   DWORD PTR [ebp+0x20]
1001cf96:	call   0x1001b717
1001cf9b:	cmp    BYTE PTR [esp+0x12],bl
1001cf9f:	je     0x1001d15e
1001cfa5:	cmp    DWORD PTR [esi],ebx
1001cfa7:	je     0x1001d15e
1001cfad:	mov    edi,DWORD PTR [esp+0x24]
1001cfb1:	mov    esi,DWORD PTR ds:0x10066310
1001cfb7:	push   0xfffffff0
1001cfb9:	push   DWORD PTR [edi]
1001cfbb:	call   esi
1001cfbd:	test   eax,0x300000
1001cfc2:	jne    0x1001cfd0
1001cfc4:	mov    eax,DWORD PTR [ebp+0x8]
1001cfc7:	or     DWORD PTR [eax+0xbc],0x8
1001cfce:	jmp    0x1001cff5
1001cfd0:	push   0xfffffff0
1001cfd2:	push   DWORD PTR [edi]
1001cfd4:	call   esi
1001cfd6:	and    eax,0xffcfffff
1001cfdb:	push   eax
1001cfdc:	push   0xfffffff0
1001cfde:	push   DWORD PTR [edi]
1001cfe0:	call   DWORD PTR ds:0x10066358
1001cfe6:	push   0x37
1001cfe8:	push   ebx
1001cfe9:	push   ebx
1001cfea:	push   ebx
1001cfeb:	push   ebx
1001cfec:	push   ebx
1001cfed:	push   DWORD PTR [edi]
1001cfef:	call   DWORD PTR ds:0x1006631c
1001cff5:	mov    eax,DWORD PTR [ebp+0x18]
1001cff8:	mov    edi,DWORD PTR [eax]
1001cffa:	cmp    edi,ebx
1001cffc:	mov    DWORD PTR [esp+0x1c],edi
1001d000:	je     0x1001d008
1001d002:	mov    eax,DWORD PTR [edi]
1001d004:	push   edi
1001d005:	call   DWORD PTR [eax+0x4]
1001d008:	mov    esi,DWORD PTR [ebp+0xc]
1001d00b:	mov    DWORD PTR [esp+0x58],ebx
1001d00f:	movzx  eax,WORD PTR [esi]
1001d012:	cmp    ax,0x4d
1001d016:	je     0x1001d022
1001d018:	cmp    ax,0x6d
1001d01c:	jne    0x1001d1c4
1001d022:	movzx  eax,WORD PTR [esi+0x2]
1001d026:	cmp    ax,0x53
1001d02a:	je     0x1001d036
1001d02c:	cmp    ax,0x73
1001d030:	jne    0x1001d1c4
1001d036:	movzx  eax,WORD PTR [esi+0x4]
1001d03a:	cmp    ax,0x48
1001d03e:	je     0x1001d04a
1001d040:	cmp    ax,0x68
1001d044:	jne    0x1001d1c4
1001d04a:	movzx  eax,WORD PTR [esi+0x6]
1001d04e:	cmp    ax,0x54
1001d052:	je     0x1001d05e
1001d054:	cmp    ax,0x74
1001d058:	jne    0x1001d1c4
1001d05e:	movzx  eax,WORD PTR [esi+0x8]
1001d062:	cmp    ax,0x4d
1001d066:	je     0x1001d072
1001d068:	cmp    ax,0x6d
1001d06c:	jne    0x1001d1c4
1001d072:	movzx  eax,WORD PTR [esi+0xa]
1001d076:	cmp    ax,0x4c
1001d07a:	je     0x1001d086
1001d07c:	cmp    ax,0x6c
1001d080:	jne    0x1001d1c4
1001d086:	cmp    WORD PTR [esi+0xc],0x3a
1001d08b:	jne    0x1001d1c4
1001d091:	push   esi
1001d092:	call   DWORD PTR ds:0x100660c4
1001d098:	lea    edi,[eax+eax*1-0xe]
1001d09c:	push   edi
1001d09d:	push   0x42
1001d09f:	call   DWORD PTR ds:0x10066148
1001d0a5:	mov    ebx,eax
1001d0a7:	test   ebx,ebx
1001d0a9:	je     0x1001d1ba
1001d0af:	and    DWORD PTR [esp+0x20],0x0
1001d0b4:	push   ebx
1001d0b5:	mov    BYTE PTR [esp+0x5c],0x1
1001d0ba:	call   DWORD PTR ds:0x10066144
1001d0c0:	push   edi
1001d0c1:	add    esi,0xe
1001d0c4:	push   esi
1001d0c5:	push   edi
1001d0c6:	push   eax
1001d0c7:	call   0x10014532
1001d0cc:	add    esp,0x10
1001d0cf:	push   ebx
1001d0d0:	call   DWORD PTR ds:0x10066154
1001d0d6:	lea    eax,[esp+0x20]
1001d0da:	push   eax
1001d0db:	push   0x1
1001d0dd:	push   ebx
1001d0de:	call   DWORD PTR ds:0x1006641c
1001d0e4:	test   eax,eax
1001d0e6:	mov    DWORD PTR [esp+0x14],eax
1001d0ea:	jl     0x1001d136
1001d0ec:	and    DWORD PTR [esp+0x18],0x0
1001d0f1:	lea    edx,[esp+0x18]
1001d0f5:	push   edx
1001d0f6:	mov    BYTE PTR [esp+0x5c],0x2
1001d0fb:	mov    eax,DWORD PTR [esp+0x20]
1001d0ff:	mov    ecx,DWORD PTR [eax]
1001d101:	push   0x100709f0
1001d106:	push   eax
1001d107:	call   DWORD PTR [ecx]
1001d109:	test   eax,eax
1001d10b:	mov    DWORD PTR [esp+0x14],eax
1001d10f:	jl     0x1001d123
1001d111:	mov    eax,DWORD PTR [esp+0x18]
1001d115:	push   DWORD PTR [esp+0x20]
1001d119:	mov    ecx,DWORD PTR [eax]
1001d11b:	push   eax
1001d11c:	call   DWORD PTR [ecx+0x14]
1001d11f:	mov    DWORD PTR [esp+0x14],eax
1001d123:	mov    BYTE PTR [esp+0x58],0x1
1001d128:	mov    eax,DWORD PTR [esp+0x18]
1001d12c:	test   eax,eax
1001d12e:	je     0x1001d136
1001d130:	mov    ecx,DWORD PTR [eax]
1001d132:	push   eax
1001d133:	call   DWORD PTR [ecx+0x8]
1001d136:	mov    BYTE PTR [esp+0x58],0x0
1001d13b:	mov    eax,DWORD PTR [esp+0x20]
1001d13f:	test   eax,eax
1001d141:	je     0x1001d149
1001d143:	mov    ecx,DWORD PTR [eax]
1001d145:	push   eax
1001d146:	call   DWORD PTR [ecx+0x8]
1001d149:	mov    edi,DWORD PTR [esp+0x1c]
1001d14d:	xor    ebx,ebx
1001d14f:	or     DWORD PTR [esp+0x58],0xffffffff
1001d154:	cmp    edi,ebx
1001d156:	je     0x1001d15e
1001d158:	mov    eax,DWORD PTR [edi]
1001d15a:	push   edi
1001d15b:	call   DWORD PTR [eax+0x8]
1001d15e:	cmp    DWORD PTR [esp+0x14],ebx
1001d162:	jl     0x1001d16c
1001d164:	mov    eax,DWORD PTR [ebp+0x8]
1001d167:	cmp    DWORD PTR [eax+0x3c],ebx
1001d16a:	jne    0x1001d1a1
1001d16c:	mov    esi,DWORD PTR [esp+0x28]
1001d170:	mov    ecx,esi
1001d172:	call   0x1001c77f
1001d177:	mov    eax,DWORD PTR [esp+0x24]
1001d17b:	mov    eax,DWORD PTR [eax]
1001d17d:	cmp    eax,ebx
1001d17f:	je     0x1001d1a1
1001d181:	push   0x507
1001d186:	push   ebx
1001d187:	push   ebx
1001d188:	push   eax
1001d189:	call   DWORD PTR ds:0x10066360
1001d18f:	cmp    DWORD PTR [esp+0x14],ebx
1001d193:	jge    0x1001d1a1
1001d195:	cmp    BYTE PTR [esp+0x13],0x0
1001d19a:	je     0x1001d1a1
1001d19c:	call   0x1001e813
1001d1a1:	mov    eax,DWORD PTR [esp+0x14]
1001d1a5:	mov    ecx,DWORD PTR [esp+0x50]
1001d1a9:	mov    DWORD PTR fs:0x0,ecx
1001d1b0:	pop    ecx
1001d1b1:	pop    edi
1001d1b2:	pop    esi
1001d1b3:	pop    ebx
1001d1b4:	mov    esp,ebp
1001d1b6:	pop    ebp
1001d1b7:	ret    0x20
1001d1ba:	mov    DWORD PTR [esp+0x14],0x8007000e
1001d1c2:	jmp    0x1001d149
1001d1c4:	mov    DWORD PTR [esp+0x18],ebx
1001d1c8:	lea    ecx,[esp+0x18]
1001d1cc:	push   ecx
1001d1cd:	push   0x10070a40
1001d1d2:	mov    BYTE PTR [esp+0x60],0x3
1001d1d7:	mov    eax,DWORD PTR [edi]
1001d1d9:	push   edi
1001d1da:	call   DWORD PTR [eax]
1001d1dc:	cmp    DWORD PTR [esp+0x18],ebx
1001d1e0:	je     0x1001d274
1001d1e6:	lea    eax,[esp+0x3c]
1001d1ea:	push   eax
1001d1eb:	call   DWORD PTR ds:0x1006628c
1001d1f1:	mov    BYTE PTR [esp+0x58],0x4
1001d1f6:	mov    edi,DWORD PTR ds:0x10066294
1001d1fc:	lea    eax,[esp+0x2c]
1001d200:	push   eax
1001d201:	mov    WORD PTR [esp+0x30],bx
1001d206:	call   edi
1001d208:	push   esi
1001d209:	mov    WORD PTR [esp+0x30],0x8
1001d210:	call   DWORD PTR ds:0x100662b0
1001d216:	cmp    eax,ebx
1001d218:	mov    DWORD PTR [esp+0x34],eax
1001d21c:	jne    0x1001d234
1001d21e:	mov    eax,0x8007000e
1001d223:	push   eax
1001d224:	mov    WORD PTR [esp+0x30],0xa
1001d22b:	mov    DWORD PTR [esp+0x38],eax
1001d22f:	call   0x10001f24
1001d234:	mov    BYTE PTR [esp+0x58],0x5
1001d239:	mov    eax,DWORD PTR [esp+0x18]
1001d23d:	mov    ecx,DWORD PTR [eax]
1001d23f:	push   0xffffffff
1001d241:	push   eax
1001d242:	call   DWORD PTR [ecx+0xa4]
1001d248:	mov    eax,DWORD PTR [esp+0x18]
1001d24c:	mov    ecx,DWORD PTR [eax]
1001d24e:	lea    edx,[esp+0x3c]
1001d252:	push   edx
1001d253:	push   edx
1001d254:	push   edx
1001d255:	push   edx
1001d256:	lea    edx,[esp+0x3c]
1001d25a:	push   edx
1001d25b:	push   eax
1001d25c:	call   DWORD PTR [ecx+0xd0]
1001d262:	lea    eax,[esp+0x2c]
1001d266:	push   eax
1001d267:	call   edi
1001d269:	lea    eax,[esp+0x3c]
1001d26d:	push   eax
1001d26e:	call   edi
1001d270:	mov    edi,DWORD PTR [esp+0x1c]
1001d274:	mov    BYTE PTR [esp+0x58],0x0
1001d279:	mov    eax,DWORD PTR [esp+0x18]
1001d27d:	cmp    eax,ebx
1001d27f:	je     0x1001d14f
1001d285:	mov    ecx,DWORD PTR [eax]
1001d287:	push   eax
1001d288:	call   DWORD PTR [ecx+0x8]
1001d28b:	jmp    0x1001d14f
1001d290:	push   ebp
1001d291:	mov    ebp,esp
1001d293:	mov    ecx,DWORD PTR [ebp+0x8]
1001d296:	mov    eax,DWORD PTR [ecx+0x80]
1001d29c:	mov    ecx,DWORD PTR [ecx+0x34]
1001d29f:	shr    eax,0x5
1001d2a2:	and    eax,0x1
1001d2a5:	test   ecx,ecx
1001d2a7:	mov    DWORD PTR [ebp+0x8],eax
1001d2aa:	je     0x1001d2ca
1001d2ac:	mov    edx,DWORD PTR [ecx]
1001d2ae:	lea    eax,[ebp+0x8]
1001d2b1:	push   eax
1001d2b2:	push   DWORD PTR [ebp+0x18]
1001d2b5:	mov    eax,DWORD PTR [ebp+0x10]
1001d2b8:	push   DWORD PTR [ebp+0x14]
1001d2bb:	push   DWORD PTR [eax+0x4]
1001d2be:	push   DWORD PTR [eax]
1001d2c0:	push   DWORD PTR [ebp+0xc]
1001d2c3:	push   ecx
1001d2c4:	call   DWORD PTR [edx+0x1c]
1001d2c7:	mov    eax,DWORD PTR [ebp+0x8]
1001d2ca:	pop    ebp
1001d2cb:	ret    0x14
1001d2ce:	mov    eax,DWORD PTR [esp+0x8]
1001d2d2:	test   eax,eax
1001d2d4:	jne    0x1001d2dd
1001d2d6:	mov    eax,0x80004003
1001d2db:	jmp    0x1001d30e
1001d2dd:	mov    ecx,DWORD PTR [esp+0x4]
1001d2e1:	mov    edx,DWORD PTR [ecx+0x34]
1001d2e4:	test   edx,edx
1001d2e6:	je     0x1001d2fa
1001d2e8:	mov    ecx,DWORD PTR [edx]
1001d2ea:	push   esi
1001d2eb:	lea    esi,[eax+0x8]
1001d2ee:	push   esi
1001d2ef:	add    eax,0x4
1001d2f2:	push   eax
1001d2f3:	push   edx
1001d2f4:	call   DWORD PTR [ecx+0x20]
1001d2f7:	pop    esi
1001d2f8:	jmp    0x1001d30e
1001d2fa:	mov    edx,DWORD PTR [ecx+0x98]
1001d300:	mov    DWORD PTR [eax+0x4],edx
1001d303:	mov    ecx,DWORD PTR [ecx+0x9c]
1001d309:	mov    DWORD PTR [eax+0x8],ecx
1001d30c:	xor    eax,eax
1001d30e:	ret    0x8
1001d311:	push   ebp
1001d312:	mov    ebp,esp
1001d314:	mov    ecx,DWORD PTR [ebp+0x8]
1001d317:	mov    eax,DWORD PTR [ecx+0x80]
1001d31d:	mov    ecx,DWORD PTR [ecx+0x34]
1001d320:	shr    eax,0x6
1001d323:	and    eax,0x1
1001d326:	test   ecx,ecx
1001d328:	mov    DWORD PTR [ebp+0x8],eax
1001d32b:	je     0x1001d349
1001d32d:	mov    eax,DWORD PTR [ecx]
1001d32f:	lea    edx,[ebp+0x8]
1001d332:	push   edx
1001d333:	push   DWORD PTR [ebp+0x1c]
1001d336:	push   DWORD PTR [ebp+0x18]
1001d339:	push   DWORD PTR [ebp+0x14]
1001d33c:	push   DWORD PTR [ebp+0x10]
1001d33f:	push   DWORD PTR [ebp+0xc]
1001d342:	push   ecx
1001d343:	call   DWORD PTR [eax+0x24]
1001d346:	mov    eax,DWORD PTR [ebp+0x8]
1001d349:	pop    ebp
1001d34a:	ret    0x18
1001d34d:	mov    ecx,DWORD PTR [esp+0x4]
1001d351:	mov    ecx,DWORD PTR [ecx+0x34]
1001d354:	xor    eax,eax
1001d356:	test   ecx,ecx
1001d358:	je     0x1001d360
1001d35a:	mov    eax,DWORD PTR [ecx]
1001d35c:	push   ecx
1001d35d:	call   DWORD PTR [eax+0x28]
1001d360:	ret    0x4
1001d363:	mov    ecx,DWORD PTR [esp+0x4]
1001d367:	mov    ecx,DWORD PTR [ecx+0x34]
1001d36a:	xor    eax,eax
1001d36c:	test   ecx,ecx
1001d36e:	je     0x1001d376
1001d370:	mov    eax,DWORD PTR [ecx]
1001d372:	push   ecx
1001d373:	call   DWORD PTR [eax+0x2c]
1001d376:	ret    0x4
1001d379:	mov    ecx,DWORD PTR [esp+0x4]
1001d37d:	mov    ecx,DWORD PTR [ecx+0x34]
1001d380:	xor    eax,eax
1001d382:	test   ecx,ecx
1001d384:	je     0x1001d395
1001d386:	mov    edx,DWORD PTR [esp+0x8]
1001d38a:	mov    eax,DWORD PTR [ecx]
1001d38c:	neg    edx
1001d38e:	sbb    edx,edx
1001d390:	push   edx
1001d391:	push   ecx
1001d392:	call   DWORD PTR [eax+0x30]
1001d395:	ret    0x8
1001d398:	mov    ecx,DWORD PTR [esp+0x4]
1001d39c:	mov    ecx,DWORD PTR [ecx+0x34]
1001d39f:	xor    eax,eax
1001d3a1:	test   ecx,ecx
1001d3a3:	je     0x1001d3b4
1001d3a5:	mov    edx,DWORD PTR [esp+0x8]
1001d3a9:	mov    eax,DWORD PTR [ecx]
1001d3ab:	neg    edx
1001d3ad:	sbb    edx,edx
1001d3af:	push   edx
1001d3b0:	push   ecx
1001d3b1:	call   DWORD PTR [eax+0x34]
1001d3b4:	ret    0x8
1001d3b7:	mov    ecx,DWORD PTR [esp+0x4]
1001d3bb:	mov    ecx,DWORD PTR [ecx+0x34]
1001d3be:	xor    eax,eax
1001d3c0:	test   ecx,ecx
1001d3c2:	je     0x1001d3d3
1001d3c4:	mov    edx,DWORD PTR [esp+0x8]
1001d3c8:	mov    eax,DWORD PTR [ecx]
1001d3ca:	neg    edx
1001d3cc:	sbb    edx,edx
1001d3ce:	push   edx
1001d3cf:	push   ecx
1001d3d0:	call   DWORD PTR [eax+0x38]
1001d3d3:	ret    0x8
1001d3d6:	mov    ecx,DWORD PTR [esp+0x4]
1001d3da:	mov    ecx,DWORD PTR [ecx+0x34]
1001d3dd:	xor    eax,eax
1001d3df:	test   ecx,ecx
1001d3e1:	je     0x1001d405
1001d3e3:	mov    eax,DWORD PTR [esp+0x10]
1001d3e7:	mov    edx,DWORD PTR [ecx]
1001d3e9:	neg    eax
1001d3eb:	sbb    eax,eax
1001d3ed:	push   eax
1001d3ee:	push   DWORD PTR [esp+0x10]
1001d3f2:	mov    eax,DWORD PTR [esp+0x10]
1001d3f6:	push   DWORD PTR [eax+0xc]
1001d3f9:	push   DWORD PTR [eax+0x8]
1001d3fc:	push   DWORD PTR [eax+0x4]
1001d3ff:	push   DWORD PTR [eax]
1001d401:	push   ecx
1001d402:	call   DWORD PTR [edx+0x3c]
1001d405:	ret    0x10
1001d408:	push   0x4
1001d40a:	mov    eax,0x1005fd2d
1001d40f:	call   0x10059c75
1001d414:	mov    eax,DWORD PTR [ebp+0x8]
1001d417:	mov    edi,DWORD PTR [eax+0x34]
1001d41a:	test   edi,edi
1001d41c:	mov    DWORD PTR [ebp-0x10],0x1
1001d423:	je     0x1001d45a
1001d425:	push   DWORD PTR [ebp+0x10]
1001d428:	lea    esi,[ebp+0x8]
1001d42b:	call   0x1001b62f
1001d430:	and    DWORD PTR [ebp-0x4],0x0
1001d434:	mov    ecx,DWORD PTR [edi]
1001d436:	lea    edx,[ebp-0x10]
1001d439:	push   edx
1001d43a:	push   DWORD PTR [ebp+0x14]
1001d43d:	push   DWORD PTR [eax]
1001d43f:	mov    eax,DWORD PTR [ebp+0xc]
1001d442:	push   DWORD PTR [eax+0xc]
1001d445:	push   DWORD PTR [eax+0x8]
1001d448:	push   DWORD PTR [eax+0x4]
1001d44b:	push   DWORD PTR [eax]
1001d44d:	push   edi
1001d44e:	call   DWORD PTR [ecx+0x40]
1001d451:	push   DWORD PTR [ebp+0x8]
1001d454:	call   DWORD PTR ds:0x100662b4
1001d45a:	mov    eax,DWORD PTR [ebp-0x10]
1001d45d:	call   0x10059d4d
1001d462:	ret    0x10
1001d465:	push   ebp
1001d466:	mov    ebp,esp
1001d468:	push   ebx
1001d469:	xor    ebx,ebx
1001d46b:	push   edi
1001d46c:	mov    edi,DWORD PTR [ebp+0xc]
1001d46f:	inc    ebx
1001d470:	test   edi,edi
1001d472:	jne    0x1001d47e
1001d474:	mov    eax,0x80004003
1001d479:	jmp    0x1001d500
1001d47e:	and    DWORD PTR [edi],0x0
1001d481:	push   esi
1001d482:	mov    esi,DWORD PTR [ebp+0x8]
1001d485:	mov    eax,DWORD PTR [esi+0x34]
1001d488:	test   eax,eax
1001d48a:	je     0x1001d4a6
1001d48c:	push   DWORD PTR [ebp+0x10]
1001d48f:	mov    ecx,DWORD PTR [eax]
1001d491:	push   edi
1001d492:	push   eax
1001d493:	call   DWORD PTR [ecx+0x44]
1001d496:	mov    ebx,eax
1001d498:	test   ebx,ebx
1001d49a:	jl     0x1001d4a1
1001d49c:	cmp    DWORD PTR [edi],0x0
1001d49f:	jne    0x1001d4fd
1001d4a1:	xor    ebx,ebx
1001d4a3:	inc    ebx
1001d4a4:	jmp    0x1001d4fd
1001d4a6:	push   DWORD PTR [esi+0xa0]
1001d4ac:	call   DWORD PTR ds:0x100662ac
1001d4b2:	test   eax,eax
1001d4b4:	je     0x1001d4fd
1001d4b6:	push   DWORD PTR [esi+0xa0]
1001d4bc:	call   DWORD PTR ds:0x100662a0
1001d4c2:	add    eax,0x2
1001d4c5:	push   eax
1001d4c6:	mov    DWORD PTR [ebp+0xc],eax
1001d4c9:	call   DWORD PTR ds:0x10066428
1001d4cf:	mov    ebx,eax
1001d4d1:	test   ebx,ebx
1001d4d3:	jne    0x1001d4dc
1001d4d5:	mov    eax,0x8007000e
1001d4da:	jmp    0x1001d4ff
1001d4dc:	push   DWORD PTR [esi+0xa0]
1001d4e2:	push   DWORD PTR [ebp+0xc]
1001d4e5:	push   ebx
1001d4e6:	call   0x10014506
1001d4eb:	add    esp,0xc
1001d4ee:	test   al,al
1001d4f0:	jne    0x1001d4f9
1001d4f2:	mov    eax,0x80004005
1001d4f7:	jmp    0x1001d4ff
1001d4f9:	mov    DWORD PTR [edi],ebx
1001d4fb:	xor    ebx,ebx
1001d4fd:	mov    eax,ebx
1001d4ff:	pop    esi
1001d500:	pop    edi
1001d501:	pop    ebx
1001d502:	pop    ebp
1001d503:	ret    0xc
1001d506:	push   0x0
1001d508:	mov    eax,0x1005f837
1001d50d:	call   0x10059c75
1001d512:	mov    esi,DWORD PTR [ebp+0x10]
1001d515:	test   esi,esi
1001d517:	jne    0x1001d520
1001d519:	mov    eax,0x80004003
1001d51e:	jmp    0x1001d57c
1001d520:	and    DWORD PTR [esi],0x0
1001d523:	mov    eax,DWORD PTR [ebp+0x8]
1001d526:	mov    eax,DWORD PTR [eax+0x34]
1001d529:	test   eax,eax
1001d52b:	mov    edi,0x80004001
1001d530:	je     0x1001d57a
1001d532:	and    DWORD PTR [ebp+0x10],0x0
1001d536:	and    DWORD PTR [ebp-0x4],0x0
1001d53a:	mov    ecx,DWORD PTR [eax]
1001d53c:	lea    edx,[ebp+0x10]
1001d53f:	push   edx
1001d540:	push   DWORD PTR [ebp+0xc]
1001d543:	push   eax
1001d544:	call   DWORD PTR [ecx+0x48]
1001d547:	mov    edi,eax
1001d549:	mov    eax,DWORD PTR [ebp+0x10]
1001d54c:	test   eax,eax
1001d54e:	je     0x1001d560
1001d550:	mov    ecx,DWORD PTR [eax]
1001d552:	push   esi
1001d553:	push   0x10070a50
1001d558:	push   eax
1001d559:	call   DWORD PTR [ecx]
1001d55b:	mov    edi,eax
1001d55d:	mov    eax,DWORD PTR [ebp+0x10]
1001d560:	test   edi,edi
1001d562:	jl     0x1001d569
1001d564:	cmp    DWORD PTR [esi],0x0
1001d567:	jne    0x1001d56c
1001d569:	xor    edi,edi
1001d56b:	inc    edi
1001d56c:	or     DWORD PTR [ebp-0x4],0xffffffff
1001d570:	test   eax,eax
1001d572:	je     0x1001d57a
1001d574:	mov    ecx,DWORD PTR [eax]
1001d576:	push   eax
1001d577:	call   DWORD PTR [ecx+0x8]
1001d57a:	mov    eax,edi
1001d57c:	call   0x10059d4d
1001d581:	ret    0xc
1001d584:	push   esi
1001d585:	mov    esi,DWORD PTR [esp+0xc]
1001d589:	test   esi,esi
1001d58b:	jne    0x1001d594
1001d58d:	mov    eax,0x80004003
1001d592:	jmp    0x1001d5cd
1001d594:	and    DWORD PTR [esi],0x0
1001d597:	mov    eax,DWORD PTR [esp+0x8]
1001d59b:	mov    ecx,DWORD PTR [eax+0x34]
1001d59e:	test   ecx,ecx
1001d5a0:	je     0x1001d5b9
1001d5a2:	mov    eax,DWORD PTR [ecx]
1001d5a4:	push   esi
1001d5a5:	push   ecx
1001d5a6:	call   DWORD PTR [eax+0x4c]
1001d5a9:	test   eax,eax
1001d5ab:	jl     0x1001d5b2
1001d5ad:	cmp    DWORD PTR [esi],0x0
1001d5b0:	jne    0x1001d5cd
1001d5b2:	mov    eax,0x80004002
1001d5b7:	jmp    0x1001d5cd
1001d5b9:	mov    ecx,DWORD PTR [eax+0x30]
1001d5bc:	mov    DWORD PTR [esi],ecx
1001d5be:	mov    eax,DWORD PTR [eax+0x30]
1001d5c1:	test   eax,eax
1001d5c3:	je     0x1001d5cb
1001d5c5:	mov    ecx,DWORD PTR [eax]
1001d5c7:	push   eax
1001d5c8:	call   DWORD PTR [ecx+0x4]
1001d5cb:	xor    eax,eax
1001d5cd:	pop    esi
1001d5ce:	ret    0x8
1001d5d1:	push   0x4
1001d5d3:	mov    eax,0x10060489
1001d5d8:	call   0x10059c75
1001d5dd:	mov    eax,DWORD PTR [ebp+0x14]
1001d5e0:	xor    ebx,ebx
1001d5e2:	cmp    eax,ebx
1001d5e4:	jne    0x1001d5f0
1001d5e6:	mov    eax,0x80004003
1001d5eb:	jmp    0x1001d695
1001d5f0:	mov    DWORD PTR [eax],ebx
1001d5f2:	mov    eax,DWORD PTR [ebp+0x8]
1001d5f5:	mov    edi,DWORD PTR [eax+0x34]
1001d5f8:	cmp    edi,ebx
1001d5fa:	mov    DWORD PTR [ebp-0x10],0x1
1001d601:	je     0x1001d692
1001d607:	mov    DWORD PTR [ebp+0x8],ebx
1001d60a:	mov    DWORD PTR [ebp-0x4],ebx
1001d60d:	push   DWORD PTR [ebp+0x10]
1001d610:	lea    esi,[ebp+0x10]
1001d613:	call   0x1001b605
1001d618:	mov    BYTE PTR [ebp-0x4],0x1
1001d61c:	mov    eax,DWORD PTR [eax]
1001d61e:	mov    ecx,DWORD PTR [edi]
1001d620:	lea    edx,[ebp+0x8]
1001d623:	push   edx
1001d624:	push   eax
1001d625:	push   DWORD PTR [ebp+0xc]
1001d628:	push   edi
1001d629:	call   DWORD PTR [ecx+0x50]
1001d62c:	mov    BYTE PTR [ebp-0x4],bl
1001d62f:	push   DWORD PTR [ebp+0x10]
1001d632:	mov    esi,DWORD PTR ds:0x100662b4
1001d638:	mov    DWORD PTR [ebp-0x10],eax
1001d63b:	call   esi
1001d63d:	cmp    DWORD PTR [ebp-0x10],ebx
1001d640:	jl     0x1001d686
1001d642:	push   DWORD PTR [ebp+0x8]
1001d645:	mov    edi,DWORD PTR ds:0x100662ac
1001d64b:	call   edi
1001d64d:	test   eax,eax
1001d64f:	je     0x1001d686
1001d651:	push   DWORD PTR [ebp+0x8]
1001d654:	call   edi
1001d656:	lea    edi,[eax+eax*1+0x2]
1001d65a:	push   edi
1001d65b:	call   DWORD PTR ds:0x10066428
1001d661:	cmp    eax,ebx
1001d663:	mov    ecx,DWORD PTR [ebp+0x14]
1001d666:	mov    DWORD PTR [ecx],eax
1001d668:	jne    0x1001d676
1001d66a:	push   DWORD PTR [ebp+0x8]
1001d66d:	call   esi
1001d66f:	mov    eax,0x8007000e
1001d674:	jmp    0x1001d695
1001d676:	push   edi
1001d677:	push   DWORD PTR [ebp+0x8]
1001d67a:	push   edi
1001d67b:	push   eax
1001d67c:	call   0x10014532
1001d681:	add    esp,0x10
1001d684:	jmp    0x1001d68d
1001d686:	mov    DWORD PTR [ebp-0x10],0x1
1001d68d:	push   DWORD PTR [ebp+0x8]
1001d690:	call   esi
1001d692:	mov    eax,DWORD PTR [ebp-0x10]
1001d695:	call   0x10059d4d
1001d69a:	ret    0x10
1001d69d:	push   0x0
1001d69f:	mov    eax,0x1005f837
1001d6a4:	call   0x10059c75
1001d6a9:	mov    edi,DWORD PTR [ebp+0x10]
1001d6ac:	xor    ecx,ecx
1001d6ae:	cmp    edi,ecx
1001d6b0:	jne    0x1001d6b9
1001d6b2:	mov    eax,0x80004003
1001d6b7:	jmp    0x1001d712
1001d6b9:	mov    esi,DWORD PTR [ebp+0x8]
1001d6bc:	xor    ebx,ebx
1001d6be:	mov    DWORD PTR [edi],ecx
1001d6c0:	mov    eax,DWORD PTR [esi+0x34]
1001d6c3:	inc    ebx
1001d6c4:	cmp    eax,ecx
1001d6c6:	je     0x1001d710
1001d6c8:	mov    DWORD PTR [ebp+0x10],ecx
1001d6cb:	lea    edx,[ebp+0x10]
1001d6ce:	push   edx
1001d6cf:	push   DWORD PTR [ebp+0xc]
1001d6d2:	mov    DWORD PTR [ebp-0x4],ecx
1001d6d5:	mov    ecx,DWORD PTR [eax]
1001d6d7:	push   eax
1001d6d8:	call   DWORD PTR [ecx+0x54]
1001d6db:	cmp    DWORD PTR [ebp+0x10],0x0
1001d6df:	mov    ebx,eax
1001d6e1:	je     0x1001d6f3
1001d6e3:	push   edi
1001d6e4:	lea    eax,[esi-0x24]
1001d6e7:	mov    ecx,DWORD PTR [eax]
1001d6e9:	push   0x10070a60
1001d6ee:	push   eax
1001d6ef:	call   DWORD PTR [ecx]
1001d6f1:	mov    ebx,eax
1001d6f3:	test   ebx,ebx
1001d6f5:	jl     0x1001d6fc
1001d6f7:	cmp    DWORD PTR [edi],0x0
1001d6fa:	jne    0x1001d6ff
1001d6fc:	xor    ebx,ebx
1001d6fe:	inc    ebx
1001d6ff:	or     DWORD PTR [ebp-0x4],0xffffffff
1001d703:	mov    eax,DWORD PTR [ebp+0x10]
1001d706:	test   eax,eax
1001d708:	je     0x1001d710
1001d70a:	mov    ecx,DWORD PTR [eax]
1001d70c:	push   eax
1001d70d:	call   DWORD PTR [ecx+0x8]
1001d710:	mov    eax,ebx
1001d712:	call   0x10059d4d
1001d717:	ret    0xc
1001d71a:	push   0x0
1001d71c:	mov    eax,0x1005f85a
1001d721:	call   0x10059c75
1001d726:	mov    eax,DWORD PTR [ebp+0x8]
1001d729:	mov    eax,DWORD PTR [eax+0x60]
1001d72c:	xor    ecx,ecx
1001d72e:	xor    esi,esi
1001d730:	test   eax,eax
1001d732:	mov    DWORD PTR [ebp+0x8],ecx
1001d735:	je     0x1001d748
1001d737:	mov    ecx,DWORD PTR [eax]
1001d739:	lea    edx,[ebp+0x8]
1001d73c:	push   edx
1001d73d:	push   0x10070a70
1001d742:	push   eax
1001d743:	call   DWORD PTR [ecx]
1001d745:	mov    ecx,DWORD PTR [ebp+0x8]
1001d748:	and    DWORD PTR [ebp-0x4],0x0
1001d74c:	test   ecx,ecx
1001d74e:	je     0x1001d75e
1001d750:	push   DWORD PTR [ebp+0xc]
1001d753:	mov    eax,DWORD PTR [ecx]
1001d755:	push   ecx
1001d756:	call   DWORD PTR [eax+0x14]
1001d759:	mov    ecx,DWORD PTR [ebp+0x8]
1001d75c:	mov    esi,eax
1001d75e:	or     DWORD PTR [ebp-0x4],0xffffffff
1001d762:	test   ecx,ecx
1001d764:	je     0x1001d76c
1001d766:	mov    eax,DWORD PTR [ecx]
1001d768:	push   ecx
1001d769:	call   DWORD PTR [eax+0x8]
1001d76c:	mov    eax,esi
1001d76e:	call   0x10059d4d
1001d773:	ret    0x8
1001d776:	push   ebp
1001d777:	mov    ebp,esp
1001d779:	push   esi
1001d77a:	push   DWORD PTR [ebp+0x28]
1001d77d:	mov    esi,DWORD PTR [ebp+0x8]
1001d780:	push   DWORD PTR [ebp+0x24]
1001d783:	push   DWORD PTR [ebp+0x20]
1001d786:	push   DWORD PTR [ebp+0x1c]
1001d789:	push   DWORD PTR [ebp+0x18]
1001d78c:	push   DWORD PTR [ebp+0x14]
1001d78f:	push   DWORD PTR [ebp+0x10]
1001d792:	push   DWORD PTR [ebp+0xc]
1001d795:	push   esi
1001d796:	call   0x100201a3
1001d79b:	cmp    eax,0x80020003
1001d7a0:	je     0x1001d7a9
1001d7a2:	cmp    eax,0x8002802b
1001d7a7:	jne    0x1001d7e4
1001d7a9:	mov    ecx,DWORD PTR [esi+0x8]
1001d7ac:	test   ecx,ecx
1001d7ae:	je     0x1001d7e4
1001d7b0:	push   DWORD PTR [ebp+0x28]
1001d7b3:	mov    eax,DWORD PTR [ecx]
1001d7b5:	push   DWORD PTR [ebp+0x24]
1001d7b8:	push   DWORD PTR [ebp+0x20]
1001d7bb:	push   DWORD PTR [ebp+0x1c]
1001d7be:	push   DWORD PTR [ebp+0x18]
1001d7c1:	push   DWORD PTR [ebp+0x14]
1001d7c4:	push   DWORD PTR [ebp+0x10]
1001d7c7:	push   DWORD PTR [ebp+0xc]
1001d7ca:	push   ecx
1001d7cb:	call   DWORD PTR [eax+0x18]
1001d7ce:	test   eax,eax
1001d7d0:	jl     0x1001d7e4
1001d7d2:	test   BYTE PTR [ebp+0x18],0x4
1001d7d6:	je     0x1001d7e4
1001d7d8:	push   DWORD PTR [ebp+0xc]
1001d7db:	add    esi,0xffffffb4
1001d7de:	push   esi
1001d7df:	call   0x1001d71a
1001d7e4:	pop    esi
1001d7e5:	pop    ebp
1001d7e6:	ret    0x24
1001d7e9:	mov    eax,DWORD PTR [esp+0x4]
1001d7ed:	mov    ecx,DWORD PTR [esp+0x8]
1001d7f1:	xor    ecx,DWORD PTR [eax+0x7c]
1001d7f4:	and    ecx,0x1
1001d7f7:	xor    DWORD PTR [eax+0x7c],ecx
1001d7fa:	xor    eax,eax
1001d7fc:	ret    0x8
1001d7ff:	mov    eax,DWORD PTR [esp+0x8]
1001d803:	test   eax,eax
1001d805:	jne    0x1001d80e
1001d807:	mov    eax,0x80004003
1001d80c:	jmp    0x1001d821
1001d80e:	mov    ecx,DWORD PTR [esp+0x4]
1001d812:	mov    ecx,DWORD PTR [ecx+0x7c]
1001d815:	and    cl,0x1
1001d818:	neg    cl
1001d81a:	sbb    ecx,ecx
1001d81c:	mov    WORD PTR [eax],cx
1001d81f:	xor    eax,eax
1001d821:	ret    0x8
1001d824:	mov    eax,DWORD PTR [esp+0x8]
1001d828:	push   esi
1001d829:	mov    esi,DWORD PTR [esp+0x8]
1001d82d:	mov    DWORD PTR [esi+0x80],eax
1001d833:	push   0xfffffd43
1001d838:	lea    eax,[esi-0x4c]
1001d83b:	push   eax
1001d83c:	call   0x1001d71a
1001d841:	push   0x0
1001d843:	lea    eax,[esi-0x20]
1001d846:	mov    ecx,DWORD PTR [eax]
1001d848:	push   0x0
1001d84a:	push   eax
1001d84b:	call   DWORD PTR [ecx+0x64]
1001d84e:	xor    eax,eax
1001d850:	pop    esi
1001d851:	ret    0x8
1001d854:	mov    eax,DWORD PTR [esp+0x8]
1001d858:	test   eax,eax
1001d85a:	jne    0x1001d863
1001d85c:	mov    eax,0x80004003
1001d861:	jmp    0x1001d871
1001d863:	mov    ecx,DWORD PTR [esp+0x4]
1001d867:	mov    ecx,DWORD PTR [ecx+0x80]
1001d86d:	mov    DWORD PTR [eax],ecx
1001d86f:	xor    eax,eax
1001d871:	ret    0x8
1001d874:	mov    eax,DWORD PTR [esp+0x4]
1001d878:	mov    ecx,DWORD PTR [esp+0x8]
1001d87c:	mov    DWORD PTR [eax+0x84],ecx
1001d882:	push   0xfffffd40
1001d887:	add    eax,0xffffffb4
1001d88a:	push   eax
1001d88b:	call   0x1001d71a
1001d890:	xor    eax,eax
1001d892:	ret    0x8
1001d895:	mov    eax,DWORD PTR [esp+0x8]
1001d899:	test   eax,eax
1001d89b:	jne    0x1001d8a4
1001d89d:	mov    eax,0x80004003
1001d8a2:	jmp    0x1001d8b2
1001d8a4:	mov    ecx,DWORD PTR [esp+0x4]
1001d8a8:	mov    ecx,DWORD PTR [ecx+0x84]
1001d8ae:	mov    DWORD PTR [eax],ecx
1001d8b0:	xor    eax,eax
1001d8b2:	ret    0x8
1001d8b5:	mov    eax,DWORD PTR [esp+0x4]
1001d8b9:	mov    ecx,DWORD PTR [esp+0x8]
1001d8bd:	mov    DWORD PTR [eax+0x88],ecx
1001d8c3:	push   0xfffffd3f
1001d8c8:	add    eax,0xffffffb4
1001d8cb:	push   eax
1001d8cc:	call   0x1001d71a
1001d8d1:	xor    eax,eax
1001d8d3:	ret    0x8
1001d8d6:	mov    eax,DWORD PTR [esp+0x8]
1001d8da:	test   eax,eax
1001d8dc:	jne    0x1001d8e5
1001d8de:	mov    eax,0x80004003
1001d8e3:	jmp    0x1001d8f3
1001d8e5:	mov    ecx,DWORD PTR [esp+0x4]
1001d8e9:	mov    ecx,DWORD PTR [ecx+0x88]
1001d8ef:	mov    DWORD PTR [eax],ecx
1001d8f1:	xor    eax,eax
1001d8f3:	ret    0x8
1001d8f6:	movsx  ecx,WORD PTR [esp+0x8]
1001d8fb:	mov    eax,DWORD PTR [esp+0x4]
1001d8ff:	add    ecx,ecx
1001d901:	xor    ecx,DWORD PTR [eax+0x7c]
1001d904:	push   0xfffffd3b
1001d909:	and    ecx,0x2
1001d90c:	xor    DWORD PTR [eax+0x7c],ecx
1001d90f:	add    eax,0xffffffb4
1001d912:	push   eax
1001d913:	call   0x1001d71a
1001d918:	xor    eax,eax
1001d91a:	ret    0x8
1001d91d:	mov    eax,DWORD PTR [esp+0x8]
1001d921:	test   eax,eax
1001d923:	jne    0x1001d92c
1001d925:	mov    eax,0x80004003
1001d92a:	jmp    0x1001d93f
1001d92c:	mov    ecx,DWORD PTR [esp+0x4]
1001d930:	mov    ecx,DWORD PTR [ecx+0x7c]
1001d933:	and    cl,0x2
1001d936:	neg    cl
1001d938:	sbb    ecx,ecx
1001d93a:	mov    WORD PTR [eax],cx
1001d93d:	xor    eax,eax
1001d93f:	ret    0x8
1001d942:	movsx  ecx,WORD PTR [esp+0x8]
1001d947:	mov    eax,DWORD PTR [esp+0x4]
1001d94b:	shl    ecx,0x2
1001d94e:	xor    ecx,DWORD PTR [eax+0x7c]
1001d951:	push   0xfffffd37
1001d956:	and    ecx,0x4
1001d959:	xor    DWORD PTR [eax+0x7c],ecx
1001d95c:	add    eax,0xffffffb4
1001d95f:	push   eax
1001d960:	call   0x1001d71a
1001d965:	xor    eax,eax
1001d967:	ret    0x8
1001d96a:	mov    eax,DWORD PTR [esp+0x8]
1001d96e:	test   eax,eax
1001d970:	jne    0x1001d979
1001d972:	mov    eax,0x80004003
1001d977:	jmp    0x1001d98c
1001d979:	mov    ecx,DWORD PTR [esp+0x4]
1001d97d:	mov    ecx,DWORD PTR [ecx+0x7c]
1001d980:	and    cl,0x4
1001d983:	neg    cl
1001d985:	sbb    ecx,ecx
1001d987:	mov    WORD PTR [eax],cx
1001d98a:	xor    eax,eax
1001d98c:	ret    0x8
1001d98f:	push   ebx
1001d990:	mov    ebx,DWORD PTR [esp+0x8]
1001d994:	push   esi
1001d995:	push   edi
1001d996:	mov    edi,DWORD PTR [esp+0x14]
1001d99a:	lea    esi,[ebx+0x8c]
1001d9a0:	cmp    DWORD PTR [esi],edi
1001d9a2:	je     0x1001d9a9
1001d9a4:	call   0x10007617
1001d9a9:	push   0xfffffd41
1001d9ae:	add    ebx,0xffffffb4
1001d9b1:	push   ebx
1001d9b2:	call   0x1001d71a
1001d9b7:	pop    edi
1001d9b8:	pop    esi
1001d9b9:	xor    eax,eax
1001d9bb:	pop    ebx
1001d9bc:	ret    0x8
1001d9bf:	push   ebp
1001d9c0:	lea    ebp,[esp-0x70]
1001d9c4:	sub    esp,0x8c
1001d9ca:	mov    eax,ds:0x1007e030
1001d9cf:	xor    eax,ebp
1001d9d1:	mov    DWORD PTR [ebp+0x6c],eax
1001d9d4:	mov    eax,DWORD PTR [ebp+0x7c]
1001d9d7:	test   eax,eax
1001d9d9:	push   ebx
1001d9da:	mov    ebx,DWORD PTR [ebp+0x78]
1001d9dd:	mov    DWORD PTR [ebp+0x4],eax
1001d9e0:	jne    0x1001d9ec
1001d9e2:	mov    eax,0x80004003
1001d9e7:	jmp    0x1001db02
1001d9ec:	and    DWORD PTR [eax],0x0
1001d9ef:	push   esi
1001d9f0:	lea    esi,[ebx+0x8c]
1001d9f6:	cmp    DWORD PTR [esi],0x0
1001d9f9:	push   edi
1001d9fa:	jne    0x1001daee
1001da00:	call   DWORD PTR ds:0x1007efec
1001da06:	mov    edi,DWORD PTR ds:0x10066028
1001da0c:	push   0x11
1001da0e:	call   edi
1001da10:	test   eax,eax
1001da12:	jne    0x1001da20
1001da14:	push   0xd
1001da16:	call   edi
1001da18:	test   eax,eax
1001da1a:	je     0x1001daaa
1001da20:	lea    ecx,[ebp+0x10]
1001da23:	push   ecx
1001da24:	push   0x5c
1001da26:	push   eax
1001da27:	call   DWORD PTR ds:0x10066030
1001da2d:	lea    eax,[ebp+0x2c]
1001da30:	mov    DWORD PTR [ebp-0x18],eax
1001da33:	mov    ax,WORD PTR [ebp+0x20]
1001da37:	mov    WORD PTR [ebp-0xc],ax
1001da3b:	movzx  ax,BYTE PTR [ebp+0x27]
1001da40:	mov    WORD PTR [ebp-0xa],ax
1001da44:	movzx  eax,BYTE PTR [ebp+0x24]
1001da48:	mov    DWORD PTR [ebp-0x8],eax
1001da4b:	movzx  eax,BYTE PTR [ebp+0x25]
1001da4f:	mov    DWORD PTR [ebp-0x4],eax
1001da52:	movzx  eax,BYTE PTR [ebp+0x26]
1001da56:	mov    DWORD PTR [ebp+0x0],eax
1001da59:	mov    eax,DWORD PTR [ebp+0x10]
1001da5c:	test   eax,eax
1001da5e:	mov    DWORD PTR [ebp-0x1c],0x20
1001da65:	mov    DWORD PTR [ebp+0x8],eax
1001da68:	jge    0x1001da6f
1001da6a:	neg    eax
1001da6c:	mov    DWORD PTR [ebp+0x8],eax
1001da6f:	mov    eax,DWORD PTR [ebx-0x48]
1001da72:	test   eax,eax
1001da74:	je     0x1001da95
1001da76:	push   eax
1001da77:	call   DWORD PTR ds:0x100662c0
1001da7d:	mov    edi,eax
1001da7f:	test   edi,edi
1001da81:	je     0x1001daaa
1001da83:	push   0x5a
1001da85:	push   edi
1001da86:	call   DWORD PTR ds:0x10066040
1001da8c:	push   edi
1001da8d:	push   DWORD PTR [ebx-0x48]
1001da90:	mov    DWORD PTR [ebp+0xc],eax
1001da93:	jmp    0x1001dac1
1001da95:	mov    edi,DWORD PTR ds:0x100662d8
1001da9b:	call   edi
1001da9d:	push   eax
1001da9e:	call   DWORD PTR ds:0x100662c0
1001daa4:	mov    ebx,eax
1001daa6:	test   ebx,ebx
1001daa8:	jne    0x1001dab1
1001daaa:	call   0x1000667c
1001daaf:	jmp    0x1001db00
1001dab1:	push   0x5a
1001dab3:	push   ebx
1001dab4:	call   DWORD PTR ds:0x10066040
1001daba:	push   ebx
1001dabb:	mov    DWORD PTR [ebp+0xc],eax
1001dabe:	call   edi
1001dac0:	push   eax
1001dac1:	call   DWORD PTR ds:0x10066350
1001dac7:	mov    eax,DWORD PTR [ebp+0x8]
1001daca:	imul   eax,eax,0xafc80
1001dad0:	cdq    
1001dad1:	idiv   DWORD PTR [ebp+0xc]
1001dad4:	and    DWORD PTR [ebp-0x10],0x0
1001dad8:	push   esi
1001dad9:	push   0x10070a80
1001dade:	mov    DWORD PTR [ebp-0x14],eax
1001dae1:	lea    eax,[ebp-0x1c]
1001dae4:	push   eax
1001dae5:	call   DWORD PTR ds:0x10066288
1001daeb:	mov    eax,DWORD PTR [ebp+0x4]
1001daee:	mov    ecx,DWORD PTR [esi]
1001daf0:	mov    DWORD PTR [eax],ecx
1001daf2:	mov    esi,DWORD PTR [esi]
1001daf4:	test   esi,esi
1001daf6:	je     0x1001dafe
1001daf8:	mov    eax,DWORD PTR [esi]
1001dafa:	push   esi
1001dafb:	call   DWORD PTR [eax+0x4]
1001dafe:	xor    eax,eax
1001db00:	pop    edi
1001db01:	pop    esi
1001db02:	mov    ecx,DWORD PTR [ebp+0x6c]
1001db05:	xor    ecx,ebp
1001db07:	pop    ebx
1001db08:	call   0x100430d7
1001db0d:	add    ebp,0x70
1001db10:	leave  
1001db11:	ret    0x8
1001db14:	movsx  ecx,WORD PTR [esp+0x8]
1001db19:	mov    eax,DWORD PTR [esp+0x4]
1001db1d:	shl    ecx,0x3
1001db20:	xor    ecx,DWORD PTR [eax+0x7c]
1001db23:	push   0xfffffd3e
1001db28:	and    ecx,0x8
1001db2b:	xor    DWORD PTR [eax+0x7c],ecx
1001db2e:	add    eax,0xffffffb4
1001db31:	push   eax
1001db32:	call   0x1001d71a
1001db37:	xor    eax,eax
1001db39:	ret    0x8
1001db3c:	mov    eax,DWORD PTR [esp+0x8]
1001db40:	test   eax,eax
1001db42:	jne    0x1001db4b
1001db44:	mov    eax,0x80004003
1001db49:	jmp    0x1001db5e
1001db4b:	mov    ecx,DWORD PTR [esp+0x4]
1001db4f:	mov    ecx,DWORD PTR [ecx+0x7c]
1001db52:	and    cl,0x8
1001db55:	neg    cl
1001db57:	sbb    ecx,ecx
1001db59:	mov    WORD PTR [eax],cx
1001db5c:	xor    eax,eax
1001db5e:	ret    0x8
1001db61:	mov    eax,DWORD PTR [esp+0x8]
1001db65:	and    WORD PTR [eax],0x0
1001db69:	xor    eax,eax
1001db6b:	ret    0x8
1001db6e:	mov    eax,DWORD PTR [esp+0x8]
1001db72:	test   eax,eax
1001db74:	jne    0x1001db7d
1001db76:	mov    eax,0x80004003
1001db7b:	jmp    0x1001db83
1001db7d:	and    WORD PTR [eax],0x0
1001db81:	xor    eax,eax
1001db83:	ret    0x8
1001db86:	mov    eax,DWORD PTR [esp+0x4]
1001db8a:	mov    ecx,DWORD PTR [esp+0x8]
1001db8e:	mov    DWORD PTR [eax+0x94],ecx
1001db94:	push   0xffffffff
1001db96:	add    eax,0xffffffb4
1001db99:	push   eax
1001db9a:	call   0x1001d71a
1001db9f:	xor    eax,eax
1001dba1:	ret    0x8
1001dba4:	mov    eax,DWORD PTR [esp+0x8]
1001dba8:	test   eax,eax
1001dbaa:	jne    0x1001dbb3
1001dbac:	mov    eax,0x80004003
1001dbb1:	jmp    0x1001dbc1
1001dbb3:	mov    ecx,DWORD PTR [esp+0x4]
1001dbb7:	mov    ecx,DWORD PTR [ecx+0x94]
1001dbbd:	mov    DWORD PTR [eax],ecx
1001dbbf:	xor    eax,eax
1001dbc1:	ret    0x8
1001dbc4:	mov    eax,DWORD PTR [esp+0x4]
1001dbc8:	mov    ecx,DWORD PTR [esp+0x8]
1001dbcc:	mov    DWORD PTR [eax+0x98],ecx
1001dbd2:	xor    eax,eax
1001dbd4:	ret    0x8
1001dbd7:	mov    eax,DWORD PTR [esp+0x8]
1001dbdb:	test   eax,eax
1001dbdd:	jne    0x1001dbe6
1001dbdf:	mov    eax,0x80004003
1001dbe4:	jmp    0x1001dbf4
1001dbe6:	mov    ecx,DWORD PTR [esp+0x4]
1001dbea:	mov    ecx,DWORD PTR [ecx+0x98]
1001dbf0:	mov    DWORD PTR [eax],ecx
1001dbf2:	xor    eax,eax
1001dbf4:	ret    0x8
1001dbf7:	movsx  ecx,WORD PTR [esp+0x8]
1001dbfc:	mov    eax,DWORD PTR [esp+0x4]
1001dc00:	shl    ecx,0x5
1001dc03:	xor    ecx,DWORD PTR [eax+0x7c]
1001dc06:	and    ecx,0x20
1001dc09:	xor    DWORD PTR [eax+0x7c],ecx
1001dc0c:	xor    eax,eax
1001dc0e:	ret    0x8
1001dc11:	mov    eax,DWORD PTR [esp+0x8]
1001dc15:	test   eax,eax
1001dc17:	jne    0x1001dc20
1001dc19:	mov    eax,0x80004003
1001dc1e:	jmp    0x1001dc33
1001dc20:	mov    ecx,DWORD PTR [esp+0x4]
1001dc24:	mov    ecx,DWORD PTR [ecx+0x7c]
1001dc27:	and    cl,0x20
1001dc2a:	neg    cl
1001dc2c:	sbb    ecx,ecx
1001dc2e:	mov    WORD PTR [eax],cx
1001dc31:	xor    eax,eax
1001dc33:	ret    0x8
1001dc36:	movsx  ecx,WORD PTR [esp+0x8]
1001dc3b:	mov    eax,DWORD PTR [esp+0x4]
1001dc3f:	shl    ecx,0x6
1001dc42:	xor    ecx,DWORD PTR [eax+0x7c]
1001dc45:	and    ecx,0x40
1001dc48:	xor    DWORD PTR [eax+0x7c],ecx
1001dc4b:	xor    eax,eax
1001dc4d:	ret    0x8
1001dc50:	mov    eax,DWORD PTR [esp+0x8]
1001dc54:	test   eax,eax
1001dc56:	jne    0x1001dc5f
1001dc58:	mov    eax,0x80004003
1001dc5d:	jmp    0x1001dc72
1001dc5f:	mov    ecx,DWORD PTR [esp+0x4]
1001dc63:	mov    ecx,DWORD PTR [ecx+0x7c]
1001dc66:	and    cl,0x40
1001dc69:	neg    cl
1001dc6b:	sbb    ecx,ecx
1001dc6d:	mov    WORD PTR [eax],cx
1001dc70:	xor    eax,eax
1001dc72:	ret    0x8
1001dc75:	push   esi
1001dc76:	mov    esi,DWORD PTR [esp+0x8]
1001dc7a:	mov    eax,DWORD PTR [esi+0x9c]
1001dc80:	cmp    DWORD PTR [esp+0xc],eax
1001dc84:	je     0x1001dcb9
1001dc86:	push   eax
1001dc87:	call   DWORD PTR ds:0x100662b4
1001dc8d:	cmp    DWORD PTR [esp+0xc],0x0
1001dc92:	je     0x1001dcb2
1001dc94:	push   DWORD PTR [esp+0xc]
1001dc98:	call   DWORD PTR ds:0x100662b0
1001dc9e:	test   eax,eax
1001dca0:	mov    DWORD PTR [esi+0x9c],eax
1001dca6:	jne    0x1001dcb9
1001dca8:	push   0x8007000e
1001dcad:	call   0x10001f24
1001dcb2:	and    DWORD PTR [esi+0x9c],0x0
1001dcb9:	xor    eax,eax
1001dcbb:	pop    esi
1001dcbc:	ret    0x8
1001dcbf:	mov    eax,DWORD PTR [esp+0x8]
1001dcc3:	test   eax,eax
1001dcc5:	jne    0x1001dcce
1001dcc7:	mov    eax,0x80004003
1001dccc:	jmp    0x1001dcdc
1001dcce:	mov    ecx,DWORD PTR [esp+0x4]
1001dcd2:	mov    ecx,DWORD PTR [ecx+0x9c]
1001dcd8:	mov    DWORD PTR [eax],ecx
1001dcda:	xor    eax,eax
1001dcdc:	ret    0x8
1001dcdf:	push   esi
1001dce0:	mov    esi,DWORD PTR [esp+0x8]
1001dce4:	push   edi
1001dce5:	mov    edi,DWORD PTR [esp+0x10]
1001dce9:	add    esi,0x8
1001dcec:	cmp    DWORD PTR [esi],edi
1001dcee:	je     0x1001dcf5
1001dcf0:	call   0x10007617
1001dcf5:	pop    edi
1001dcf6:	xor    eax,eax
1001dcf8:	pop    esi
1001dcf9:	ret    0x8
1001dcfc:	push   esi
1001dcfd:	mov    esi,DWORD PTR [esp+0x8]
1001dd01:	push   edi
1001dd02:	push   DWORD PTR [esp+0x10]
1001dd06:	push   esi
1001dd07:	call   0x10020119
1001dd0c:	mov    edi,eax
1001dd0e:	test   edi,edi
1001dd10:	jl     0x1001dd2c
1001dd12:	mov    eax,DWORD PTR [esi+0x4]
1001dd15:	test   eax,eax
1001dd17:	je     0x1001dd2c
1001dd19:	mov    ecx,DWORD PTR [eax]
1001dd1b:	lea    edx,[esi+0xa4]
1001dd21:	push   edx
1001dd22:	push   0x10070314
1001dd27:	push   eax
1001dd28:	call   DWORD PTR [ecx]
1001dd2a:	mov    edi,eax
1001dd2c:	cmp    DWORD PTR [esp+0x10],0x0
1001dd31:	jne    0x1001dd48
1001dd33:	lea    eax,[esi+0xa4]
1001dd39:	mov    ecx,DWORD PTR [eax]
1001dd3b:	test   ecx,ecx
1001dd3d:	je     0x1001dd48
1001dd3f:	and    DWORD PTR [eax],0x0
1001dd42:	mov    eax,DWORD PTR [ecx]
1001dd44:	push   ecx
1001dd45:	call   DWORD PTR [eax+0x8]
1001dd48:	mov    eax,edi
1001dd4a:	pop    edi
1001dd4b:	pop    esi
1001dd4c:	ret    0x8
1001dd4f:	push   edi
1001dd50:	mov    edi,DWORD PTR [esp+0xc]
1001dd54:	test   edi,edi
1001dd56:	mov    eax,0x80004003
1001dd5b:	je     0x1001dd89
1001dd5d:	and    DWORD PTR [edi],0x0
1001dd60:	push   ebx
1001dd61:	mov    ebx,DWORD PTR [esp+0xc]
1001dd65:	mov    eax,DWORD PTR [ebx+0x14]
1001dd68:	test   eax,eax
1001dd6a:	push   esi
1001dd6b:	mov    esi,0x10070334
1001dd70:	je     0x1001dd7d
1001dd72:	mov    ecx,DWORD PTR [eax]
1001dd74:	push   edi
1001dd75:	push   esi
1001dd76:	push   eax
1001dd77:	call   DWORD PTR [ecx]
1001dd79:	test   eax,eax
1001dd7b:	jge    0x1001dd87
1001dd7d:	push   edi
1001dd7e:	lea    eax,[ebx-0x4]
1001dd81:	mov    ecx,DWORD PTR [eax]
1001dd83:	push   esi
1001dd84:	push   eax
1001dd85:	call   DWORD PTR [ecx]
1001dd87:	pop    esi
1001dd88:	pop    ebx
1001dd89:	pop    edi
1001dd8a:	ret    0x8
1001dd8d:	push   esi
1001dd8e:	mov    esi,DWORD PTR [esp+0x8]
1001dd92:	push   edi
1001dd93:	push   DWORD PTR [esi-0x24]
1001dd96:	call   DWORD PTR ds:0x100662c0
1001dd9c:	mov    edi,eax
1001dd9e:	xor    edx,edx
1001dda0:	cmp    edi,edx
1001dda2:	jne    0x1001ddab
1001dda4:	mov    eax,0x80004005
1001dda9:	jmp    0x1001ddd8
1001ddab:	mov    eax,DWORD PTR [esi+0x48]
1001ddae:	cmp    eax,edx
1001ddb0:	je     0x1001ddcc
1001ddb2:	push   ebx
1001ddb3:	mov    ebx,DWORD PTR [eax]
1001ddb5:	push   edx
1001ddb6:	push   edx
1001ddb7:	lea    ecx,[esi+0x8c]
1001ddbd:	push   ecx
1001ddbe:	push   ecx
1001ddbf:	push   edi
1001ddc0:	push   edx
1001ddc1:	push   edx
1001ddc2:	push   edx
1001ddc3:	push   0xffffffff
1001ddc5:	push   0x1
1001ddc7:	push   eax
1001ddc8:	call   DWORD PTR [ebx+0xc]
1001ddcb:	pop    ebx
1001ddcc:	push   edi
1001ddcd:	push   DWORD PTR [esi-0x24]
1001ddd0:	call   DWORD PTR ds:0x10066350
1001ddd6:	xor    eax,eax
1001ddd8:	pop    edi
1001ddd9:	pop    esi
1001ddda:	ret    0x4
1001dddd:	mov    eax,DWORD PTR [esp+0x4]
1001dde1:	mov    eax,DWORD PTR [eax-0x28]
1001dde4:	mov    ecx,DWORD PTR [esp+0x8]
1001dde8:	mov    DWORD PTR [ecx],eax
1001ddea:	xor    eax,eax
1001ddec:	ret    0x8
1001ddef:	mov    eax,0x80004001
1001ddf4:	ret    0x8
1001ddf7:	xor    eax,eax
1001ddf9:	ret    0x4
1001ddfc:	push   esi
1001ddfd:	mov    esi,DWORD PTR [esp+0x8]
1001de01:	or     DWORD PTR [esi+0x6c],0x1
1001de05:	push   0x0
1001de07:	push   0x1
1001de09:	push   DWORD PTR [esi+0x38]
1001de0c:	call   DWORD PTR ds:0x10066448
1001de12:	mov    eax,DWORD PTR [esi+0x38]
1001de15:	and    DWORD PTR [esi+0x6c],0xfffffff7
1001de19:	mov    ecx,DWORD PTR [eax]
1001de1b:	add    esi,0x48
1001de1e:	push   esi
1001de1f:	push   0x10070a90
1001de24:	push   eax
1001de25:	call   DWORD PTR [ecx]
1001de27:	xor    eax,eax
1001de29:	pop    esi
1001de2a:	ret    0x4
1001de2d:	mov    eax,DWORD PTR [esp+0x4]
1001de31:	or     DWORD PTR [eax+0x6c],0x2
1001de35:	xor    eax,eax
1001de37:	ret    0x4
1001de3a:	push   ebp
1001de3b:	mov    ebp,esp
1001de3d:	push   ecx
1001de3e:	push   ecx
1001de3f:	mov    edx,DWORD PTR [ebp+0xc]
1001de42:	xor    eax,eax
1001de44:	cmp    edx,eax
1001de46:	je     0x1001de4a
1001de48:	mov    DWORD PTR [edx],eax
1001de4a:	mov    ecx,DWORD PTR [ebp+0x10]
1001de4d:	cmp    ecx,eax
1001de4f:	je     0x1001de53
1001de51:	mov    DWORD PTR [ecx],eax
1001de53:	cmp    edx,eax
1001de55:	je     0x1001df60
1001de5b:	cmp    ecx,eax
1001de5d:	je     0x1001df60
1001de63:	cmp    DWORD PTR [ebp+0x14],eax
1001de66:	je     0x1001df60
1001de6c:	cmp    DWORD PTR [ebp+0x18],eax
1001de6f:	je     0x1001df60
1001de75:	push   ebx
1001de76:	push   esi
1001de77:	mov    esi,DWORD PTR [ebp+0x8]
1001de7a:	lea    ebx,[esi+0x3c]
1001de7d:	cmp    DWORD PTR [ebx],eax
1001de7f:	push   edi
1001de80:	jne    0x1001de9c
1001de82:	lea    eax,[ebp+0x8]
1001de85:	push   eax
1001de86:	call   0x10021fb8
1001de8b:	mov    eax,DWORD PTR [ebp+0x8]
1001de8e:	push   ebx
1001de8f:	add    eax,0x24
1001de92:	mov    ecx,DWORD PTR [eax]
1001de94:	push   0x100703d4
1001de99:	push   eax
1001de9a:	call   DWORD PTR [ecx]
1001de9c:	lea    edi,[esi+0x40]
1001de9f:	cmp    DWORD PTR [edi],0x0
1001dea2:	jne    0x1001debe
1001dea4:	lea    eax,[ebp+0x8]
1001dea7:	push   eax
1001dea8:	call   0x10022047
1001dead:	mov    eax,DWORD PTR [ebp+0x8]
1001deb0:	push   edi
1001deb1:	add    eax,0x24
1001deb4:	mov    ecx,DWORD PTR [eax]
1001deb6:	push   0x100703c4
1001debb:	push   eax
1001debc:	call   DWORD PTR [ecx]
1001debe:	mov    eax,DWORD PTR [ebx]
1001dec0:	mov    ecx,DWORD PTR [ebp+0xc]
1001dec3:	mov    DWORD PTR [ecx],eax
1001dec5:	mov    ebx,DWORD PTR [ebx]
1001dec7:	test   ebx,ebx
1001dec9:	je     0x1001ded1
1001decb:	mov    eax,DWORD PTR [ebx]
1001decd:	push   ebx
1001dece:	call   DWORD PTR [eax+0x4]
1001ded1:	mov    eax,DWORD PTR [edi]
1001ded3:	mov    ecx,DWORD PTR [ebp+0x10]
1001ded6:	mov    DWORD PTR [ecx],eax
1001ded8:	mov    edi,DWORD PTR [edi]
1001deda:	test   edi,edi
1001dedc:	je     0x1001dee4
1001dede:	mov    eax,DWORD PTR [edi]
1001dee0:	push   edi
1001dee1:	call   DWORD PTR [eax+0x4]
1001dee4:	push   DWORD PTR [ebp+0x14]
1001dee7:	mov    edi,DWORD PTR ds:0x100662d4
1001deed:	push   DWORD PTR [esi-0x28]
1001def0:	call   edi
1001def2:	push   DWORD PTR [ebp+0x18]
1001def5:	push   DWORD PTR [esi-0x28]
1001def8:	call   edi
1001defa:	xor    ebx,ebx
1001defc:	cmp    DWORD PTR [esi+0x98],ebx
1001df02:	jne    0x1001df21
1001df04:	push   0x1
1001df06:	lea    eax,[ebp-0x8]
1001df09:	push   eax
1001df0a:	mov    BYTE PTR [ebp-0x8],bl
1001df0d:	mov    WORD PTR [ebp-0x6],bx
1001df11:	mov    WORD PTR [ebp-0x4],bx
1001df15:	call   DWORD PTR ds:0x100662d0
1001df1b:	mov    DWORD PTR [esi+0x98],eax
1001df21:	mov    edi,DWORD PTR [ebp+0x1c]
1001df24:	mov    DWORD PTR [edi],0x14
1001df2a:	mov    eax,DWORD PTR [esi+0x6c]
1001df2d:	shr    eax,0x2
1001df30:	and    eax,0x1
1001df33:	mov    DWORD PTR [edi+0x4],eax
1001df36:	push   DWORD PTR [esi-0x28]
1001df39:	call   DWORD PTR ds:0x100662e0
1001df3f:	mov    DWORD PTR [edi+0x8],eax
1001df42:	mov    eax,DWORD PTR [esi+0x98]
1001df48:	mov    DWORD PTR [edi+0xc],eax
1001df4b:	xor    eax,eax
1001df4d:	cmp    DWORD PTR [esi+0x98],ebx
1001df53:	setne  al
1001df56:	mov    DWORD PTR [edi+0x10],eax
1001df59:	pop    edi
1001df5a:	pop    esi
1001df5b:	xor    eax,eax
1001df5d:	pop    ebx
1001df5e:	jmp    0x1001df65
1001df60:	mov    eax,0x80004003
1001df65:	leave  
1001df66:	ret    0x18
1001df69:	mov    eax,DWORD PTR [esp+0x4]
1001df6d:	and    DWORD PTR [eax+0x6c],0xfffffffd
1001df71:	xor    eax,eax
1001df73:	ret    0x8
1001df76:	mov    eax,DWORD PTR [esp+0x4]
1001df7a:	and    DWORD PTR [eax+0x6c],0xfffffffe
1001df7e:	mov    ecx,DWORD PTR [eax+0x48]
1001df81:	test   ecx,ecx
1001df83:	je     0x1001df8f
1001df85:	and    DWORD PTR [eax+0x48],0x0
1001df89:	mov    eax,DWORD PTR [ecx]
1001df8b:	push   ecx
1001df8c:	call   DWORD PTR [eax+0x8]
1001df8f:	xor    eax,eax
1001df91:	ret    0x4
1001df94:	mov    eax,0x80004001
1001df99:	ret    0x4
1001df9c:	push   ebp
1001df9d:	mov    ebp,esp
1001df9f:	sub    esp,0x10
1001dfa2:	push   esi
1001dfa3:	mov    esi,DWORD PTR [ebp+0xc]
1001dfa6:	test   esi,esi
1001dfa8:	jne    0x1001dfb1
1001dfaa:	mov    eax,0x80004003
1001dfaf:	jmp    0x1001e023
1001dfb1:	push   ebx
1001dfb2:	push   edi
1001dfb3:	lea    edi,[ebp-0x10]
1001dfb6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1001dfb7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1001dfb8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1001dfb9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1001dfba:	mov    esi,DWORD PTR [ebp+0x8]
1001dfbd:	mov    edi,DWORD PTR ds:0x10066308
1001dfc3:	lea    eax,[ebp-0x10]
1001dfc6:	push   eax
1001dfc7:	push   DWORD PTR [esi-0x28]
1001dfca:	call   edi
1001dfcc:	test   eax,eax
1001dfce:	je     0x1001dfd9
1001dfd0:	lea    eax,[ebp-0x8]
1001dfd3:	push   eax
1001dfd4:	push   DWORD PTR [esi-0x28]
1001dfd7:	call   edi
1001dfd9:	push   DWORD PTR [esi-0x28]
1001dfdc:	call   DWORD PTR ds:0x100662e0
1001dfe2:	mov    ebx,eax
1001dfe4:	test   ebx,ebx
1001dfe6:	je     0x1001e000
1001dfe8:	mov    edi,DWORD PTR ds:0x100662f8
1001dfee:	lea    eax,[ebp-0x10]
1001dff1:	push   eax
1001dff2:	push   ebx
1001dff3:	call   edi
1001dff5:	test   eax,eax
1001dff7:	je     0x1001e000
1001dff9:	lea    eax,[ebp-0x8]
1001dffc:	push   eax
1001dffd:	push   ebx
1001dffe:	call   edi
1001e000:	mov    eax,DWORD PTR [ebp-0x4]
1001e003:	sub    eax,DWORD PTR [ebp-0xc]
1001e006:	push   0x1
1001e008:	push   eax
1001e009:	mov    eax,DWORD PTR [ebp-0x8]
1001e00c:	sub    eax,DWORD PTR [ebp-0x10]
1001e00f:	push   eax
1001e010:	push   DWORD PTR [ebp-0xc]
1001e013:	push   DWORD PTR [ebp-0x10]
1001e016:	push   DWORD PTR [esi-0x28]
1001e019:	call   DWORD PTR ds:0x10066344
1001e01f:	pop    edi
1001e020:	xor    eax,eax
1001e022:	pop    ebx
1001e023:	pop    esi
1001e024:	leave  
1001e025:	ret    0x8
1001e028:	push   esi
1001e029:	mov    esi,DWORD PTR [esp+0x8]
1001e02d:	or     DWORD PTR [esi+0x6c],0x1
1001e031:	push   edi
1001e032:	push   0x0
1001e034:	push   0x1
1001e036:	push   DWORD PTR [esi+0x38]
1001e039:	call   DWORD PTR ds:0x10066448
1001e03f:	test   BYTE PTR [esp+0x14],0x1
1001e044:	je     0x1001e05f
1001e046:	mov    eax,DWORD PTR [esi+0x38]
1001e049:	or     DWORD PTR [esi+0x6c],0x8
1001e04d:	mov    ecx,DWORD PTR [eax]
1001e04f:	lea    edi,[esi+0x48]
1001e052:	push   edi
1001e053:	push   0x10070aa0
1001e058:	push   eax
1001e059:	call   DWORD PTR [ecx]
1001e05b:	test   eax,eax
1001e05d:	jge    0x1001e074
1001e05f:	mov    eax,DWORD PTR [esi+0x38]
1001e062:	and    DWORD PTR [esi+0x6c],0xfffffff7
1001e066:	mov    ecx,DWORD PTR [eax]
1001e068:	lea    edi,[esi+0x48]
1001e06b:	push   edi
1001e06c:	push   0x10070a90
1001e071:	push   eax
1001e072:	call   DWORD PTR [ecx]
1001e074:	mov    edi,DWORD PTR [edi]
1001e076:	test   edi,edi
1001e078:	je     0x1001e088
1001e07a:	mov    ecx,DWORD PTR [edi]
1001e07c:	lea    eax,[esi+0x88]
1001e082:	push   eax
1001e083:	push   eax
1001e084:	push   edi
1001e085:	call   DWORD PTR [ecx+0x1c]
1001e088:	pop    edi
1001e089:	xor    eax,eax
1001e08b:	pop    esi
1001e08c:	ret    0xc
1001e08f:	mov    eax,DWORD PTR [esp+0x4]
1001e093:	and    DWORD PTR [eax+0x6c],0xfffffffe
1001e097:	mov    ecx,DWORD PTR [eax+0x48]
1001e09a:	test   ecx,ecx
1001e09c:	je     0x1001e0a8
1001e09e:	and    DWORD PTR [eax+0x48],0x0
1001e0a2:	mov    eax,DWORD PTR [ecx]
1001e0a4:	push   ecx
1001e0a5:	call   DWORD PTR [eax+0x8]
1001e0a8:	xor    eax,eax
1001e0aa:	ret    0x8
1001e0ad:	mov    eax,DWORD PTR [esp+0x4]
1001e0b1:	mov    eax,DWORD PTR [eax+0x9c]
1001e0b7:	not    eax
1001e0b9:	and    eax,0x1
1001e0bc:	ret    0x4
1001e0bf:	mov    eax,DWORD PTR [esp+0x4]
1001e0c3:	mov    eax,DWORD PTR [eax+0x6c]
1001e0c6:	shr    eax,0x4
1001e0c9:	not    eax
1001e0cb:	and    eax,0x1
1001e0ce:	ret    0x4
1001e0d1:	cmp    DWORD PTR [esp+0x8],0x0
1001e0d6:	je     0x1001e0ed
1001e0d8:	push   esi
1001e0d9:	mov    esi,DWORD PTR [esp+0x8]
1001e0dd:	push   DWORD PTR [esi-0x28]
1001e0e0:	call   DWORD PTR ds:0x100662e8
1001e0e6:	or     DWORD PTR [esi+0x6c],0x10
1001e0ea:	pop    esi
1001e0eb:	jmp    0x1001e0fb
1001e0ed:	call   DWORD PTR ds:0x1006632c
1001e0f3:	mov    eax,DWORD PTR [esp+0x4]
1001e0f7:	and    DWORD PTR [eax+0x6c],0xffffffef
1001e0fb:	xor    eax,eax
1001e0fd:	ret    0x8
1001e100:	mov    eax,DWORD PTR [esp+0x4]
1001e104:	mov    eax,DWORD PTR [eax+0x6c]
1001e107:	shr    eax,0x5
1001e10a:	not    eax
1001e10c:	and    eax,0x1
1001e10f:	ret    0x4
1001e112:	mov    eax,DWORD PTR [esp+0x4]
1001e116:	mov    ecx,DWORD PTR [esp+0x8]
1001e11a:	shl    ecx,0x5
1001e11d:	xor    ecx,DWORD PTR [eax+0x6c]
1001e120:	and    ecx,0x20
1001e123:	xor    DWORD PTR [eax+0x6c],ecx
1001e126:	xor    eax,eax
1001e128:	ret    0x8
1001e12b:	push   ebp
1001e12c:	mov    ebp,esp
1001e12e:	sub    esp,0x10
1001e131:	push   esi
1001e132:	mov    esi,DWORD PTR [ebp+0x14]
1001e135:	test   esi,esi
1001e137:	jne    0x1001e143
1001e139:	mov    eax,0x80004003
1001e13e:	jmp    0x1001e1f7
1001e143:	push   edi
1001e144:	mov    edi,DWORD PTR [ebp+0x8]
1001e147:	cmp    BYTE PTR [edi+0x30],0x0
1001e14b:	je     0x1001e15c
1001e14d:	push   DWORD PTR [edi-0x28]
1001e150:	call   DWORD PTR ds:0x100662c0
1001e156:	test   eax,eax
1001e158:	mov    DWORD PTR [esi],eax
1001e15a:	jne    0x1001e166
1001e15c:	mov    eax,0x80004005
1001e161:	jmp    0x1001e1f6
1001e166:	test   BYTE PTR [ebp+0x10],0x1
1001e16a:	mov    BYTE PTR [edi+0x30],0x0
1001e16e:	jne    0x1001e1f4
1001e174:	lea    eax,[ebp-0x10]
1001e177:	push   eax
1001e178:	push   DWORD PTR [edi-0x28]
1001e17b:	call   DWORD PTR ds:0x100662d4
1001e181:	test   BYTE PTR [ebp+0x10],0x4
1001e185:	je     0x1001e1e0
1001e187:	push   ebx
1001e188:	push   DWORD PTR [esi]
1001e18a:	call   DWORD PTR ds:0x1006604c
1001e190:	mov    ebx,eax
1001e192:	test   ebx,ebx
1001e194:	je     0x1001e1df
1001e196:	mov    eax,DWORD PTR [ebp-0x4]
1001e199:	sub    eax,DWORD PTR [ebp-0xc]
1001e19c:	push   eax
1001e19d:	mov    eax,DWORD PTR [ebp-0x8]
1001e1a0:	sub    eax,DWORD PTR [ebp-0x10]
1001e1a3:	push   eax
1001e1a4:	push   DWORD PTR [esi]
1001e1a6:	call   DWORD PTR ds:0x10066034
1001e1ac:	test   eax,eax
1001e1ae:	mov    DWORD PTR [ebp+0x14],eax
1001e1b1:	je     0x1001e1c8
1001e1b3:	push   eax
1001e1b4:	push   ebx
1001e1b5:	call   DWORD PTR ds:0x10066048
1001e1bb:	test   eax,eax
1001e1bd:	jne    0x1001e1d1
1001e1bf:	push   DWORD PTR [ebp+0x14]
1001e1c2:	call   DWORD PTR ds:0x10066044
1001e1c8:	push   ebx
1001e1c9:	call   DWORD PTR ds:0x1006603c
1001e1cf:	jmp    0x1001e1df
1001e1d1:	push   eax
1001e1d2:	call   DWORD PTR ds:0x10066044
1001e1d8:	mov    eax,DWORD PTR [esi]
1001e1da:	mov    DWORD PTR [edi+0x2c],eax
1001e1dd:	mov    DWORD PTR [esi],ebx
1001e1df:	pop    ebx
1001e1e0:	test   BYTE PTR [ebp+0x10],0x2
1001e1e4:	je     0x1001e1f4
1001e1e6:	push   0x6
1001e1e8:	lea    eax,[ebp-0x10]
1001e1eb:	push   eax
1001e1ec:	push   DWORD PTR [esi]
1001e1ee:	call   DWORD PTR ds:0x100662f0
1001e1f4:	xor    eax,eax
1001e1f6:	pop    edi
1001e1f7:	pop    esi
1001e1f8:	leave  
1001e1f9:	ret    0x10
1001e1fc:	push   ebp
1001e1fd:	mov    ebp,esp
1001e1ff:	sub    esp,0x10
1001e202:	push   esi
1001e203:	mov    esi,DWORD PTR [ebp+0x8]
1001e206:	cmp    DWORD PTR [esi+0x2c],0x0
1001e20a:	mov    BYTE PTR [esi+0x30],0x1
1001e20e:	je     0x1001e254
1001e210:	lea    eax,[ebp-0x10]
1001e213:	push   eax
1001e214:	push   DWORD PTR [esi-0x28]
1001e217:	call   DWORD PTR ds:0x100662d4
1001e21d:	mov    eax,DWORD PTR [ebp-0x4]
1001e220:	sub    eax,DWORD PTR [ebp-0xc]
1001e223:	push   0xcc0020
1001e228:	push   0x0
1001e22a:	push   0x0
1001e22c:	push   DWORD PTR [ebp+0xc]
1001e22f:	push   eax
1001e230:	mov    eax,DWORD PTR [ebp-0x8]
1001e233:	sub    eax,DWORD PTR [ebp-0x10]
1001e236:	push   eax
1001e237:	push   DWORD PTR [ebp-0xc]
1001e23a:	push   DWORD PTR [ebp-0x10]
1001e23d:	push   DWORD PTR [esi+0x2c]
1001e240:	call   DWORD PTR ds:0x10066038
1001e246:	push   DWORD PTR [ebp+0xc]
1001e249:	call   DWORD PTR ds:0x1006603c
1001e24f:	mov    eax,DWORD PTR [esi+0x2c]
1001e252:	jmp    0x1001e257
1001e254:	mov    eax,DWORD PTR [ebp+0xc]
1001e257:	push   eax
1001e258:	push   DWORD PTR [esi-0x28]
1001e25b:	call   DWORD PTR ds:0x10066350
1001e261:	xor    eax,eax
1001e263:	pop    esi
1001e264:	leave  
1001e265:	ret    0x8
1001e268:	push   DWORD PTR [esp+0xc]
1001e26c:	mov    eax,DWORD PTR [esp+0x8]
1001e270:	push   DWORD PTR [esp+0xc]
1001e274:	push   DWORD PTR [eax-0x28]
1001e277:	call   DWORD PTR ds:0x10066300
1001e27d:	xor    eax,eax
1001e27f:	ret    0xc
1001e282:	push   DWORD PTR [esp+0xc]
1001e286:	mov    eax,DWORD PTR [esp+0x8]
1001e28a:	push   DWORD PTR [esp+0xc]
1001e28e:	push   DWORD PTR [eax-0x28]
1001e291:	call   DWORD PTR ds:0x100662dc
1001e297:	xor    eax,eax
1001e299:	ret    0xc
1001e29c:	xor    eax,eax
1001e29e:	ret    0x14
1001e2a1:	push   ebp
1001e2a2:	mov    ebp,esp
1001e2a4:	push   DWORD PTR [ebp+0x14]
1001e2a7:	mov    eax,DWORD PTR [ebp+0x8]
1001e2aa:	push   DWORD PTR [ebp+0x10]
1001e2ad:	push   DWORD PTR [ebp+0xc]
1001e2b0:	push   DWORD PTR [eax-0x28]
1001e2b3:	push   DWORD PTR [eax-0xc]
1001e2b6:	call   DWORD PTR ds:0x10066338
1001e2bc:	mov    ecx,DWORD PTR [ebp+0x18]
1001e2bf:	mov    DWORD PTR [ecx],eax
1001e2c1:	xor    eax,eax
1001e2c3:	pop    ebp
1001e2c4:	ret    0x14
1001e2c7:	cmp    DWORD PTR [esp+0x8],0x0
1001e2cc:	jne    0x1001e2d5
1001e2ce:	mov    eax,0x80004003
1001e2d3:	jmp    0x1001e2ea
1001e2d5:	push   DWORD PTR [esp+0x8]
1001e2d9:	mov    eax,DWORD PTR [esp+0x8]
1001e2dd:	mov    eax,DWORD PTR [eax+0x34]
1001e2e0:	mov    ecx,DWORD PTR [eax]
1001e2e2:	push   0x1006dccc
1001e2e7:	push   eax
1001e2e8:	call   DWORD PTR [ecx]
1001e2ea:	ret    0x8
1001e2ed:	mov    eax,0x80004001
1001e2f2:	ret    0x10
1001e2f5:	mov    eax,DWORD PTR [esp+0x4]
1001e2f9:	mov    ecx,DWORD PTR [esp+0x8]
1001e2fd:	shl    ecx,0x5
1001e300:	xor    ecx,DWORD PTR [eax+0x68]
1001e303:	and    ecx,0x20
1001e306:	xor    DWORD PTR [eax+0x68],ecx
1001e309:	xor    eax,eax
1001e30b:	ret    0x8
1001e30e:	ret    0xc
1001e311:	ret    0x8
1001e314:	ret    0x4
1001e317:	mov    eax,0x80004001
1001e31c:	ret    0x14
1001e31f:	push   0xc
1001e321:	mov    eax,0x1005fa37
1001e326:	call   0x10059ca8
1001e32b:	mov    eax,DWORD PTR [ebp+0x10]
1001e32e:	xor    esi,esi
1001e330:	cmp    eax,esi
1001e332:	jne    0x1001e33b
1001e334:	mov    eax,0x80004003
1001e339:	jmp    0x1001e3b8
1001e33b:	push   0x1c
1001e33d:	mov    DWORD PTR [eax],esi
1001e33f:	mov    DWORD PTR [ebp-0x18],esi
1001e342:	mov    DWORD PTR [ebp-0x4],esi
1001e345:	call   0x100436de
1001e34a:	cmp    eax,esi
1001e34c:	pop    ecx
1001e34d:	je     0x1001e358
1001e34f:	mov    esi,eax
1001e351:	call   0x100202ef
1001e356:	mov    esi,eax
1001e358:	or     DWORD PTR [ebp-0x4],0xffffffff
1001e35c:	jmp    0x1001e367
1001e35e:	mov    eax,0x1001e364
1001e363:	ret    
1001e364:	mov    esi,DWORD PTR [ebp-0x18]
1001e367:	test   esi,esi
1001e369:	jne    0x1001e372
1001e36b:	mov    eax,0x8007000e
1001e370:	jmp    0x1001e3b8
1001e372:	mov    eax,DWORD PTR [ebp+0x8]
1001e375:	mov    ecx,DWORD PTR [eax+0x2c]
1001e378:	mov    DWORD PTR [ebp-0x14],ecx
1001e37b:	lea    ecx,[eax-0x34]
1001e37e:	mov    eax,DWORD PTR [ecx]
1001e380:	push   0x3
1001e382:	call   DWORD PTR [eax+0x10]
1001e385:	push   eax
1001e386:	lea    eax,[ebp-0x10]
1001e389:	push   eax
1001e38a:	lea    eax,[ebp-0x14]
1001e38d:	push   eax
1001e38e:	push   esi
1001e38f:	call   0x100249fc
1001e394:	mov    edi,eax
1001e396:	test   edi,edi
1001e398:	jl     0x1001e3ad
1001e39a:	push   DWORD PTR [ebp+0x10]
1001e39d:	mov    eax,DWORD PTR [esi]
1001e39f:	push   0x10070274
1001e3a4:	push   esi
1001e3a5:	call   DWORD PTR [eax]
1001e3a7:	mov    edi,eax
1001e3a9:	test   edi,edi
1001e3ab:	jge    0x1001e3b6
1001e3ad:	mov    eax,DWORD PTR [esi]
1001e3af:	push   0x1
1001e3b1:	mov    ecx,esi
1001e3b3:	call   DWORD PTR [eax+0x1c]
1001e3b6:	mov    eax,edi
1001e3b8:	call   0x10059d4d
1001e3bd:	ret    0xc
1001e3c0:	mov    eax,DWORD PTR [esp+0x4]
1001e3c4:	mov    ecx,DWORD PTR [esp+0x8]
1001e3c8:	shl    ecx,0x7
1001e3cb:	xor    ecx,DWORD PTR [eax+0x64]
1001e3ce:	and    ecx,0x80
1001e3d4:	xor    DWORD PTR [eax+0x64],ecx
1001e3d7:	xor    eax,eax
1001e3d9:	ret    0x8
1001e3dc:	push   0x18
1001e3de:	mov    eax,0x1005fd0a
1001e3e3:	call   0x10059c75
1001e3e8:	mov    ebx,ecx
1001e3ea:	mov    esi,DWORD PTR [ebp+0x8]
1001e3ed:	test   esi,esi
1001e3ef:	jne    0x1001e3f8
1001e3f1:	xor    eax,eax
1001e3f3:	jmp    0x1001e7c7
1001e3f8:	lea    eax,[ebx+0x60]
1001e3fb:	cmp    DWORD PTR [eax],esi
1001e3fd:	mov    DWORD PTR [ebp-0x24],eax
1001e400:	je     0x1001e40d
1001e402:	mov    edi,esi
1001e404:	mov    esi,eax
1001e406:	call   0x10007617
1001e40b:	mov    esi,edi
1001e40d:	mov    eax,DWORD PTR [esi]
1001e40f:	and    DWORD PTR [ebp-0x10],0x0
1001e413:	lea    edi,[ebx+0x64]
1001e416:	push   edi
1001e417:	push   0x10070ab0
1001e41c:	push   esi
1001e41d:	call   DWORD PTR [eax]
1001e41f:	mov    eax,DWORD PTR [edi]
1001e421:	test   eax,eax
1001e423:	je     0x1001e781
1001e429:	mov    ecx,DWORD PTR [eax]
1001e42b:	lea    esi,[ebx+0xa0]
1001e431:	push   esi
1001e432:	push   0x1
1001e434:	push   eax
1001e435:	mov    DWORD PTR [ebp-0x20],esi
1001e438:	call   DWORD PTR [ecx+0x58]
1001e43b:	test   DWORD PTR [esi],0x20000
1001e441:	je     0x1001e482
1001e443:	mov    eax,DWORD PTR [ebx]
1001e445:	mov    ecx,ebx
1001e447:	call   DWORD PTR [eax+0x10]
1001e44a:	xor    esi,esi
1001e44c:	cmp    eax,esi
1001e44e:	mov    DWORD PTR [ebp-0x18],esi
1001e451:	je     0x1001e461
1001e453:	mov    ecx,DWORD PTR [eax]
1001e455:	lea    edx,[ebp-0x18]
1001e458:	push   edx
1001e459:	push   0x10070384
1001e45e:	push   eax
1001e45f:	call   DWORD PTR [ecx]
1001e461:	mov    DWORD PTR [ebp-0x4],esi
1001e464:	mov    eax,DWORD PTR [edi]
1001e466:	push   DWORD PTR [ebp-0x18]
1001e469:	mov    ecx,DWORD PTR [eax]
1001e46b:	push   eax
1001e46c:	call   DWORD PTR [ecx+0xc]
1001e46f:	or     DWORD PTR [ebp-0x4],0xffffffff
1001e473:	mov    eax,DWORD PTR [ebp-0x18]
1001e476:	cmp    eax,esi
1001e478:	je     0x1001e484
1001e47a:	mov    ecx,DWORD PTR [eax]
1001e47c:	push   eax
1001e47d:	call   DWORD PTR [ecx+0x8]
1001e480:	jmp    0x1001e484
1001e482:	xor    esi,esi
1001e484:	cmp    BYTE PTR [ebp+0xc],0x0
1001e488:	jne    0x1001e56f
1001e48e:	mov    eax,DWORD PTR [edi]
1001e490:	cmp    eax,esi
1001e492:	mov    DWORD PTR [ebp+0xc],esi
1001e495:	je     0x1001e4a5
1001e497:	mov    ecx,DWORD PTR [eax]
1001e499:	lea    edx,[ebp+0xc]
1001e49c:	push   edx
1001e49d:	push   0x100709f0
1001e4a2:	push   eax
1001e4a3:	call   DWORD PTR [ecx]
1001e4a5:	mov    DWORD PTR [ebp-0x4],0x1
1001e4ac:	mov    eax,DWORD PTR [ebp+0xc]
1001e4af:	cmp    eax,esi
1001e4b1:	je     0x1001e4cc
1001e4b3:	cmp    DWORD PTR [ebp+0x10],esi
1001e4b6:	mov    ecx,DWORD PTR [eax]
1001e4b8:	je     0x1001e4c3
1001e4ba:	push   DWORD PTR [ebp+0x10]
1001e4bd:	push   eax
1001e4be:	call   DWORD PTR [ecx+0x14]
1001e4c1:	jmp    0x1001e4c7
1001e4c3:	push   eax
1001e4c4:	call   DWORD PTR [ecx+0x20]
1001e4c7:	mov    DWORD PTR [ebp-0x10],eax
1001e4ca:	jmp    0x1001e516
1001e4cc:	cmp    DWORD PTR [ebp+0x10],esi
1001e4cf:	je     0x1001e561
1001e4d5:	mov    ecx,DWORD PTR [edi]
1001e4d7:	xor    eax,eax
1001e4d9:	cmp    ecx,esi
1001e4db:	mov    DWORD PTR [ebp-0x18],eax
1001e4de:	je     0x1001e4f1
1001e4e0:	mov    eax,DWORD PTR [ecx]
1001e4e2:	lea    edx,[ebp-0x18]
1001e4e5:	push   edx
1001e4e6:	push   0x100709e0
1001e4eb:	push   ecx
1001e4ec:	call   DWORD PTR [eax]
1001e4ee:	mov    eax,DWORD PTR [ebp-0x18]
1001e4f1:	cmp    eax,esi
1001e4f3:	mov    BYTE PTR [ebp-0x4],0x2
1001e4f7:	je     0x1001e508
1001e4f9:	push   DWORD PTR [ebp+0x10]
1001e4fc:	mov    ecx,DWORD PTR [eax]
1001e4fe:	push   eax
1001e4ff:	call   DWORD PTR [ecx+0x14]
1001e502:	mov    DWORD PTR [ebp-0x10],eax
1001e505:	mov    eax,DWORD PTR [ebp-0x18]
1001e508:	cmp    eax,esi
1001e50a:	mov    BYTE PTR [ebp-0x4],0x1
1001e50e:	je     0x1001e516
1001e510:	mov    ecx,DWORD PTR [eax]
1001e512:	push   eax
1001e513:	call   DWORD PTR [ecx+0x8]
1001e516:	cmp    DWORD PTR [ebp-0x10],esi
1001e519:	jge    0x1001e55e
1001e51b:	mov    ebx,DWORD PTR [ebp-0x20]
1001e51e:	test   DWORD PTR [ebx],0x20000
1001e524:	je     0x1001e52f
1001e526:	mov    eax,DWORD PTR [edi]
1001e528:	mov    ecx,DWORD PTR [eax]
1001e52a:	push   esi
1001e52b:	push   eax
1001e52c:	call   DWORD PTR [ecx+0xc]
1001e52f:	mov    DWORD PTR [ebx],esi
1001e531:	mov    eax,DWORD PTR [edi]
1001e533:	cmp    eax,esi
1001e535:	je     0x1001e53f
1001e537:	mov    DWORD PTR [edi],esi
1001e539:	mov    ecx,DWORD PTR [eax]
1001e53b:	push   eax
1001e53c:	call   DWORD PTR [ecx+0x8]
1001e53f:	mov    ecx,DWORD PTR [ebp-0x24]
1001e542:	mov    eax,DWORD PTR [ecx]
1001e544:	cmp    eax,esi
1001e546:	je     0x1001e550
1001e548:	mov    DWORD PTR [ecx],esi
1001e54a:	mov    ecx,DWORD PTR [eax]
1001e54c:	push   eax
1001e54d:	call   DWORD PTR [ecx+0x8]
1001e550:	or     DWORD PTR [ebp-0x4],0xffffffff
1001e554:	mov    eax,DWORD PTR [ebp+0xc]
1001e557:	cmp    eax,esi
1001e559:	jmp    0x1001e7bc
1001e55e:	mov    eax,DWORD PTR [ebp+0xc]
1001e561:	or     DWORD PTR [ebp-0x4],0xffffffff
1001e565:	cmp    eax,esi
1001e567:	je     0x1001e56f
1001e569:	mov    ecx,DWORD PTR [eax]
1001e56b:	push   eax
1001e56c:	call   DWORD PTR [ecx+0x8]
1001e56f:	mov    eax,DWORD PTR [ebp-0x20]
1001e572:	test   DWORD PTR [eax],0x20000
1001e578:	jne    0x1001e5b9
1001e57a:	mov    eax,DWORD PTR [ebx]
1001e57c:	mov    ecx,ebx
1001e57e:	call   DWORD PTR [eax+0x10]
1001e581:	cmp    eax,esi
1001e583:	mov    DWORD PTR [ebp+0xc],esi
1001e586:	je     0x1001e596
1001e588:	mov    ecx,DWORD PTR [eax]
1001e58a:	lea    edx,[ebp+0xc]
1001e58d:	push   edx
1001e58e:	push   0x10070384
1001e593:	push   eax
1001e594:	call   DWORD PTR [ecx]
1001e596:	mov    DWORD PTR [ebp-0x4],0x3
1001e59d:	mov    eax,DWORD PTR [edi]
1001e59f:	push   DWORD PTR [ebp+0xc]
1001e5a2:	mov    ecx,DWORD PTR [eax]
1001e5a4:	push   eax
1001e5a5:	call   DWORD PTR [ecx+0xc]
1001e5a8:	or     DWORD PTR [ebp-0x4],0xffffffff
1001e5ac:	mov    eax,DWORD PTR [ebp+0xc]
1001e5af:	cmp    eax,esi
1001e5b1:	je     0x1001e5b9
1001e5b3:	mov    ecx,DWORD PTR [eax]
1001e5b5:	push   eax
1001e5b6:	call   DWORD PTR [ecx+0x8]
1001e5b9:	mov    eax,DWORD PTR [edi]
1001e5bb:	mov    DWORD PTR [ebx+0x90],esi
1001e5c1:	mov    ecx,DWORD PTR [eax]
1001e5c3:	lea    esi,[ebx+0x70]
1001e5c6:	push   esi
1001e5c7:	push   0x10070ac0
1001e5cc:	push   eax
1001e5cd:	call   DWORD PTR [ecx]
1001e5cf:	test   eax,eax
1001e5d1:	mov    DWORD PTR [ebp-0x10],eax
1001e5d4:	jge    0x1001e5f6
1001e5d6:	mov    eax,DWORD PTR [edi]
1001e5d8:	mov    ecx,DWORD PTR [eax]
1001e5da:	push   esi
1001e5db:	push   0x10070ad0
1001e5e0:	push   eax
1001e5e1:	call   DWORD PTR [ecx]
1001e5e3:	test   eax,eax
1001e5e5:	mov    DWORD PTR [ebp-0x10],eax
1001e5e8:	jl     0x1001e602
1001e5ea:	mov    DWORD PTR [ebx+0x90],0x3
1001e5f4:	jmp    0x1001e620
1001e5f6:	mov    DWORD PTR [ebx+0x90],0x7
1001e600:	jmp    0x1001e620
1001e602:	mov    eax,DWORD PTR [edi]
1001e604:	mov    ecx,DWORD PTR [eax]
1001e606:	push   esi
1001e607:	push   0x10070ae0
1001e60c:	push   eax
1001e60d:	call   DWORD PTR [ecx]
1001e60f:	test   eax,eax
1001e611:	mov    DWORD PTR [ebp-0x10],eax
1001e614:	jl     0x1001e620
1001e616:	mov    DWORD PTR [ebx+0x90],0x1
1001e620:	mov    eax,DWORD PTR [ebx]
1001e622:	mov    ecx,ebx
1001e624:	call   DWORD PTR [eax+0x10]
1001e627:	and    DWORD PTR [ebp-0x14],0x0
1001e62b:	test   eax,eax
1001e62d:	je     0x1001e63d
1001e62f:	mov    ecx,DWORD PTR [eax]
1001e631:	lea    edx,[ebp-0x14]
1001e634:	push   edx
1001e635:	push   0x100702d4
1001e63a:	push   eax
1001e63b:	call   DWORD PTR [ecx]
1001e63d:	lea    edx,[ebx+0x9c]
1001e643:	mov    DWORD PTR [ebp-0x4],0x4
1001e64a:	mov    eax,DWORD PTR [edi]
1001e64c:	mov    ecx,DWORD PTR [eax]
1001e64e:	push   edx
1001e64f:	push   DWORD PTR [ebp-0x14]
1001e652:	push   eax
1001e653:	call   DWORD PTR [ecx+0x4c]
1001e656:	mov    esi,DWORD PTR [esi]
1001e658:	test   esi,esi
1001e65a:	je     0x1001e669
1001e65c:	push   DWORD PTR [ebp-0x14]
1001e65f:	mov    eax,DWORD PTR [esi]
1001e661:	push   0x0
1001e663:	push   0x1
1001e665:	push   esi
1001e666:	call   DWORD PTR [eax+0x1c]
1001e669:	mov    edi,DWORD PTR [edi]
1001e66b:	mov    eax,DWORD PTR [edi]
1001e66d:	push   0x0
1001e66f:	push   0x1007058c
1001e674:	push   edi
1001e675:	call   DWORD PTR [eax+0x14]
1001e678:	test   WORD PTR [ebx+0xa0],0x400
1001e681:	jne    0x1001e76d
1001e687:	lea    esi,[ebx+0xb4]
1001e68d:	push   esi
1001e68e:	push   DWORD PTR [ebx+0x4]
1001e691:	call   DWORD PTR ds:0x100662d4
1001e697:	mov    eax,DWORD PTR [ebx+0xbc]
1001e69d:	sub    eax,DWORD PTR [esi]
1001e69f:	lea    edi,[ebx+0xac]
1001e6a5:	mov    DWORD PTR [edi],eax
1001e6a7:	mov    eax,DWORD PTR [ebx+0xc0]
1001e6ad:	sub    eax,DWORD PTR [ebx+0xb8]
1001e6b3:	lea    esi,[ebx+0xa4]
1001e6b9:	mov    DWORD PTR [ebx+0xb0],eax
1001e6bf:	call   0x1001bea7
1001e6c4:	mov    eax,DWORD PTR [ebx+0x64]
1001e6c7:	mov    ecx,DWORD PTR [eax]
1001e6c9:	lea    edi,[ebx+0xa4]
1001e6cf:	push   edi
1001e6d0:	push   0x1
1001e6d2:	push   eax
1001e6d3:	call   DWORD PTR [ecx+0x44]
1001e6d6:	mov    eax,DWORD PTR [ebx+0x64]
1001e6d9:	mov    ecx,DWORD PTR [eax]
1001e6db:	push   edi
1001e6dc:	push   0x1
1001e6de:	push   eax
1001e6df:	call   DWORD PTR [ecx+0x48]
1001e6e2:	lea    esi,[ebx+0xac]
1001e6e8:	call   0x1001be3e
1001e6ed:	mov    eax,DWORD PTR [ebx+0xac]
1001e6f3:	lea    esi,[ebx+0xb4]
1001e6f9:	add    eax,DWORD PTR [esi]
1001e6fb:	mov    ecx,ebx
1001e6fd:	mov    DWORD PTR [ebx+0xbc],eax
1001e703:	mov    eax,DWORD PTR [ebx+0xb0]
1001e709:	add    eax,DWORD PTR [ebx+0xb8]
1001e70f:	mov    DWORD PTR [ebx+0xc0],eax
1001e715:	mov    eax,DWORD PTR [ebx]
1001e717:	call   DWORD PTR [eax+0x10]
1001e71a:	xor    edi,edi
1001e71c:	cmp    eax,edi
1001e71e:	mov    DWORD PTR [ebp+0x10],edi
1001e721:	je     0x1001e731
1001e723:	mov    ecx,DWORD PTR [eax]
1001e725:	lea    edx,[ebp+0x10]
1001e728:	push   edx
1001e729:	push   0x10070384
1001e72e:	push   eax
1001e72f:	call   DWORD PTR [ecx]
1001e731:	push   esi
1001e732:	mov    BYTE PTR [ebp-0x4],0x5
1001e736:	push   DWORD PTR [ebx+0x4]
1001e739:	mov    eax,DWORD PTR [ebx+0x64]
1001e73c:	mov    ecx,DWORD PTR [eax]
1001e73e:	push   edi
1001e73f:	push   DWORD PTR [ebp+0x10]
1001e742:	push   edi
1001e743:	push   0xfffffffb
1001e745:	push   eax
1001e746:	call   DWORD PTR [ecx+0x2c]
1001e749:	push   0x507
1001e74e:	push   edi
1001e74f:	push   edi
1001e750:	push   DWORD PTR [ebx+0x4]
1001e753:	mov    DWORD PTR [ebp-0x10],eax
1001e756:	call   DWORD PTR ds:0x10066360
1001e75c:	mov    BYTE PTR [ebp-0x4],0x4
1001e760:	mov    eax,DWORD PTR [ebp+0x10]
1001e763:	cmp    eax,edi
1001e765:	je     0x1001e76d
1001e767:	mov    ecx,DWORD PTR [eax]
1001e769:	push   eax
1001e76a:	call   DWORD PTR [ecx+0x8]
1001e76d:	or     DWORD PTR [ebp-0x4],0xffffffff
1001e771:	mov    eax,DWORD PTR [ebp-0x14]
1001e774:	test   eax,eax
1001e776:	je     0x1001e77e
1001e778:	mov    ecx,DWORD PTR [eax]
1001e77a:	push   eax
1001e77b:	call   DWORD PTR [ecx+0x8]
1001e77e:	mov    esi,DWORD PTR [ebp+0x8]
1001e781:	and    DWORD PTR [ebp-0x1c],0x0
1001e785:	lea    ecx,[ebp-0x1c]
1001e788:	push   ecx
1001e789:	push   0x10070324
1001e78e:	mov    DWORD PTR [ebp-0x4],0x6
1001e795:	mov    eax,DWORD PTR [esi]
1001e797:	push   esi
1001e798:	call   DWORD PTR [eax]
1001e79a:	mov    eax,DWORD PTR [ebp-0x1c]
1001e79d:	test   eax,eax
1001e79f:	je     0x1001e7b6
1001e7a1:	mov    edi,DWORD PTR [eax]
1001e7a3:	mov    esi,eax
1001e7a5:	mov    eax,DWORD PTR [ebx]
1001e7a7:	mov    ecx,ebx
1001e7a9:	add    edi,0xc
1001e7ac:	call   DWORD PTR [eax+0x10]
1001e7af:	push   eax
1001e7b0:	push   esi
1001e7b1:	call   DWORD PTR [edi]
1001e7b3:	mov    eax,DWORD PTR [ebp-0x1c]
1001e7b6:	or     DWORD PTR [ebp-0x4],0xffffffff
1001e7ba:	test   eax,eax
1001e7bc:	je     0x1001e7c4
1001e7be:	mov    ecx,DWORD PTR [eax]
1001e7c0:	push   eax
1001e7c1:	call   DWORD PTR [ecx+0x8]
1001e7c4:	mov    eax,DWORD PTR [ebp-0x10]
1001e7c7:	call   0x10059d4d
1001e7cc:	ret    0xc
1001e7cf:	mov    eax,DWORD PTR [esi]
1001e7d1:	push   edi
1001e7d2:	push   esi
1001e7d3:	mov    ecx,esi
1001e7d5:	call   DWORD PTR [eax+0x8]
1001e7d8:	lea    edi,[esi+0x8]
1001e7db:	call   0x1001bdf6
1001e7e0:	test   eax,eax
1001e7e2:	pop    edi
1001e7e3:	jne    0x1001e7e9
1001e7e5:	xor    eax,eax
1001e7e7:	jmp    0x1001e802
1001e7e9:	push   DWORD PTR [esi+0x14]
1001e7ec:	push   0xfffffffc
1001e7ee:	push   ebx
1001e7ef:	call   DWORD PTR ds:0x10066358
1001e7f5:	test   eax,eax
1001e7f7:	je     0x1001e7e5
1001e7f9:	mov    DWORD PTR [esi+0x20],eax
1001e7fc:	xor    eax,eax
1001e7fe:	mov    DWORD PTR [esi+0x4],ebx
1001e801:	inc    eax
1001e802:	lea    ecx,[esi+0xc8]
1001e808:	shl    eax,0x4
1001e80b:	xor    eax,DWORD PTR [ecx]
1001e80d:	and    eax,0x10
1001e810:	xor    DWORD PTR [ecx],eax
1001e812:	ret    
1001e813:	test   BYTE PTR [esi+0xc8],0x10
1001e81a:	je     0x1001e856
1001e81c:	push   0xfffffffc
1001e81e:	push   DWORD PTR [esi+0x4]
1001e821:	call   DWORD PTR ds:0x10066310
1001e827:	mov    eax,DWORD PTR [esi+0x20]
1001e82a:	mov    ecx,DWORD PTR [esi+0x4]
1001e82d:	push   eax
1001e82e:	push   0xfffffffc
1001e830:	push   ecx
1001e831:	call   DWORD PTR ds:0x10066358
1001e837:	test   eax,eax
1001e839:	je     0x1001e85f
1001e83b:	mov    eax,ds:0x1006633c
1001e840:	mov    DWORD PTR [esi+0x20],eax
1001e843:	mov    eax,DWORD PTR [esi+0x4]
1001e846:	and    DWORD PTR [esi+0x4],0x0
1001e84a:	test   eax,eax
1001e84c:	je     0x1001e85f
1001e84e:	and    DWORD PTR [esi+0xc8],0xffffffef
1001e855:	ret    
1001e856:	push   DWORD PTR [esi+0x4]
1001e859:	call   DWORD PTR ds:0x10066304
1001e85f:	ret    
1001e860:	push   ebp
1001e861:	mov    ebp,esp
1001e863:	push   ebx
1001e864:	mov    ebx,eax
1001e866:	cmp    ebx,0x4e
1001e869:	ja     0x1001e8cd
1001e86b:	je     0x1001e8c9
1001e86d:	cmp    ebx,0x2b
1001e870:	je     0x1001e8b2
1001e872:	cmp    ebx,0x2c
1001e875:	je     0x1001e8a4
1001e877:	cmp    ebx,0x2d
1001e87a:	je     0x1001e89c
1001e87c:	jbe    0x1001e93f
1001e882:	cmp    ebx,0x2f
1001e885:	jbe    0x1001e939
1001e88b:	cmp    ebx,0x39
1001e88e:	jne    0x1001e93f
1001e894:	mov    eax,DWORD PTR [esi+0x8]
1001e897:	jmp    0x1001e93b
1001e89c:	mov    eax,DWORD PTR [esi+0xc]
1001e89f:	jmp    0x1001e93b
1001e8a4:	cmp    DWORD PTR [esi],0x1
1001e8a7:	je     0x1001e93f
1001e8ad:	push   DWORD PTR [esi+0x4]
1001e8b0:	jmp    0x1001e92a
1001e8b2:	cmp    DWORD PTR [esi],0x1
1001e8b5:	jne    0x1001e8c4
1001e8b7:	push   DWORD PTR [esi+0x14]
1001e8ba:	call   DWORD PTR ds:0x10066320
1001e8c0:	test   eax,eax
1001e8c2:	je     0x1001e93f
1001e8c4:	mov    eax,DWORD PTR [esi+0x14]
1001e8c7:	jmp    0x1001e93b
1001e8c9:	mov    eax,DWORD PTR [esi]
1001e8cb:	jmp    0x1001e93b
1001e8cd:	cmp    ebx,0x111
1001e8d3:	je     0x1001e935
1001e8d5:	cmp    ebx,0x113
1001e8db:	jbe    0x1001e93f
1001e8dd:	cmp    ebx,0x115
1001e8e3:	jbe    0x1001e939
1001e8e5:	cmp    ebx,0x131
1001e8eb:	jbe    0x1001e93f
1001e8ed:	cmp    ebx,0x138
1001e8f3:	jbe    0x1001e939
1001e8f5:	cmp    ebx,0x210
1001e8fb:	jne    0x1001e93f
1001e8fd:	mov    eax,DWORD PTR [edi+0x18]
1001e900:	test   eax,eax
1001e902:	je     0x1001e919
1001e904:	push   DWORD PTR [eax+0xc]
1001e907:	push   DWORD PTR [eax+0x8]
1001e90a:	push   DWORD PTR [eax+0x4]
1001e90d:	push   DWORD PTR [edi+0x4]
1001e910:	push   DWORD PTR [edi+0x20]
1001e913:	call   DWORD PTR ds:0x10066338
1001e919:	movzx  eax,WORD PTR [ebp+0x8]
1001e91d:	dec    eax
1001e91e:	cmp    eax,0x1
1001e921:	jbe    0x1001e939
1001e923:	mov    eax,DWORD PTR [ebp+0x8]
1001e926:	shr    eax,0x10
1001e929:	push   eax
1001e92a:	push   DWORD PTR [edi+0x4]
1001e92d:	call   DWORD PTR ds:0x10066354
1001e933:	jmp    0x1001e93b
1001e935:	test   esi,esi
1001e937:	je     0x1001e93f
1001e939:	mov    eax,esi
1001e93b:	test   eax,eax
1001e93d:	jne    0x1001e94a
1001e93f:	mov    eax,DWORD PTR [ebp+0xc]
1001e942:	and    DWORD PTR [eax],0x0
1001e945:	xor    eax,eax
1001e947:	inc    eax
1001e948:	jmp    0x1001e991
1001e94a:	mov    ecx,DWORD PTR [edi+0x98]
1001e950:	test   cl,0x8
1001e953:	je     0x1001e97f
1001e955:	and    DWORD PTR [ebp+0xc],0x0
1001e959:	test   cl,0x1
1001e95c:	je     0x1001e97a
1001e95e:	mov    eax,DWORD PTR [edi+0x74]
1001e961:	test   eax,eax
1001e963:	je     0x1001e97a
1001e965:	mov    ecx,DWORD PTR [eax]
1001e967:	lea    edx,[ebp+0xc]
1001e96a:	push   edx
1001e96b:	push   esi
1001e96c:	push   DWORD PTR [ebp+0x8]
1001e96f:	add    ebx,0x2000
1001e975:	push   ebx
1001e976:	push   eax
1001e977:	call   DWORD PTR [ecx+0x24]
1001e97a:	mov    eax,DWORD PTR [ebp+0xc]
1001e97d:	jmp    0x1001e991
1001e97f:	push   esi
1001e980:	push   DWORD PTR [ebp+0x8]
1001e983:	add    ebx,0x2000
1001e989:	push   ebx
1001e98a:	push   eax
1001e98b:	call   DWORD PTR ds:0x10066330
1001e991:	pop    ebx
1001e992:	pop    ebp
1001e993:	ret    0x8
1001e996:	mov    edx,DWORD PTR [esp+0x10]
1001e99a:	test   edx,edx
1001e99c:	jne    0x1001e9a5
1001e99e:	mov    eax,0x80004003
1001e9a3:	jmp    0x1001e9ca
1001e9a5:	and    DWORD PTR [edx],0x0
1001e9a8:	mov    ecx,DWORD PTR [esp+0x4]
1001e9ac:	mov    ecx,DWORD PTR [ecx+0x9c]
1001e9b2:	test   ecx,ecx
1001e9b4:	mov    eax,0x80004002
1001e9b9:	je     0x1001e9ca
1001e9bb:	mov    eax,DWORD PTR [ecx]
1001e9bd:	push   edx
1001e9be:	push   DWORD PTR [esp+0x10]
1001e9c2:	push   DWORD PTR [esp+0x10]
1001e9c6:	push   ecx
1001e9c7:	call   DWORD PTR [eax+0xc]
1001e9ca:	ret    0x10
1001e9cd:	push   0x1c
1001e9cf:	mov    eax,0x10060454
1001e9d4:	call   0x10059cde
1001e9d9:	mov    eax,DWORD PTR [ebp+0xc]
1001e9dc:	dec    eax
1001e9dd:	je     0x1001ea4f
1001e9df:	sub    eax,0x81
1001e9e4:	je     0x1001ea2f
1001e9e6:	sub    eax,0x18e
1001e9eb:	jne    0x1001ebcb
1001e9f1:	cmp    DWORD PTR [ebp+0x10],0x1
1001e9f5:	jne    0x1001ebcb
1001e9fb:	mov    esi,DWORD PTR ds:0x10066310
1001ea01:	push   0xffffffec
1001ea03:	push   DWORD PTR [ebp+0x14]
1001ea06:	call   esi
1001ea08:	mov    ebx,0x10000
1001ea0d:	test   ebx,eax
1001ea0f:	je     0x1001ebcb
1001ea15:	push   0xffffffec
1001ea17:	push   DWORD PTR [ebp+0x8]
1001ea1a:	call   esi
1001ea1c:	or     eax,ebx
1001ea1e:	push   eax
1001ea1f:	push   0xffffffec
1001ea21:	push   DWORD PTR [ebp+0x8]
1001ea24:	call   DWORD PTR ds:0x10066358
1001ea2a:	jmp    0x1001ebcb
1001ea2f:	push   0xffffffeb
1001ea31:	push   DWORD PTR [ebp+0x8]
1001ea34:	call   DWORD PTR ds:0x10066310
1001ea3a:	test   eax,eax
1001ea3c:	je     0x1001ea44
1001ea3e:	mov    ecx,DWORD PTR [eax]
1001ea40:	push   eax
1001ea41:	call   DWORD PTR [ecx+0x8]
1001ea44:	call   DWORD PTR ds:0x10066410
1001ea4a:	jmp    0x1001ebcb
1001ea4f:	xor    edi,edi
1001ea51:	push   edi
1001ea52:	call   DWORD PTR ds:0x10066414
1001ea58:	push   DWORD PTR [ebp+0x8]
1001ea5b:	call   DWORD PTR ds:0x1006635c
1001ea61:	mov    esi,eax
1001ea63:	lea    eax,[esi+esi*1+0xa]
1001ea67:	cmp    eax,0x400
1001ea6c:	ja     0x1001ea81
1001ea6e:	call   0x1004b990
1001ea73:	mov    eax,esp
1001ea75:	cmp    eax,edi
1001ea77:	je     0x1001ea95
1001ea79:	mov    DWORD PTR [eax],0xcccc
1001ea7f:	jmp    0x1001ea92
1001ea81:	push   eax
1001ea82:	call   0x10045222
1001ea87:	cmp    eax,edi
1001ea89:	pop    ecx
1001ea8a:	je     0x1001ea95
1001ea8c:	mov    DWORD PTR [eax],0xdddd
1001ea92:	add    eax,0x8
1001ea95:	mov    DWORD PTR [ebp-0x1c],eax
1001ea98:	mov    DWORD PTR [ebp-0x24],eax
1001ea9b:	cmp    eax,edi
1001ea9d:	mov    DWORD PTR [ebp-0x4],edi
1001eaa0:	jne    0x1001eab1
1001eaa2:	push   edi
1001eaa3:	call   0x1001b5ea
1001eaa8:	pop    ecx
1001eaa9:	or     eax,0xffffffff
1001eaac:	jmp    0x1001ebdd
1001eab1:	inc    esi
1001eab2:	push   esi
1001eab3:	push   eax
1001eab4:	push   DWORD PTR [ebp+0x8]
1001eab7:	call   DWORD PTR ds:0x10066314
1001eabd:	push   0x1006d1c8
1001eac2:	push   DWORD PTR [ebp+0x8]
1001eac5:	call   DWORD PTR ds:0x10066334
1001eacb:	mov    eax,DWORD PTR [ebp+0x14]
1001eace:	xor    esi,esi
1001ead0:	cmp    eax,edi
1001ead2:	mov    DWORD PTR [ebp-0x20],edi
1001ead5:	je     0x1001eae0
1001ead7:	mov    eax,DWORD PTR [eax]
1001ead9:	cmp    eax,edi
1001eadb:	je     0x1001eae0
1001eadd:	movzx  esi,WORD PTR [eax]
1001eae0:	push   esi
1001eae1:	push   0x42
1001eae3:	call   DWORD PTR ds:0x10066148
1001eae9:	mov    ebx,eax
1001eaeb:	mov    DWORD PTR [ebp-0x14],edi
1001eaee:	cmp    ebx,edi
1001eaf0:	mov    BYTE PTR [ebp-0x4],0x1
1001eaf4:	je     0x1001eb28
1001eaf6:	cmp    esi,edi
1001eaf8:	je     0x1001eb28
1001eafa:	push   ebx
1001eafb:	call   DWORD PTR ds:0x10066144
1001eb01:	mov    ecx,DWORD PTR [ebp+0x14]
1001eb04:	mov    ecx,DWORD PTR [ecx]
1001eb06:	inc    ecx
1001eb07:	push   esi
1001eb08:	inc    ecx
1001eb09:	push   ecx
1001eb0a:	push   esi
1001eb0b:	push   eax
1001eb0c:	call   0x10014532
1001eb11:	add    esp,0x10
1001eb14:	push   ebx
1001eb15:	call   DWORD PTR ds:0x10066154
1001eb1b:	lea    eax,[ebp-0x14]
1001eb1e:	push   eax
1001eb1f:	push   0x1
1001eb21:	push   ebx
1001eb22:	call   DWORD PTR ds:0x1006641c
1001eb28:	call   DWORD PTR ds:0x1007efec
1001eb2e:	mov    DWORD PTR [ebp-0x28],edi
1001eb31:	mov    DWORD PTR [ebp-0x18],edi
1001eb34:	push   edi
1001eb35:	mov    edi,DWORD PTR [ebp-0x1c]
1001eb38:	mov    BYTE PTR [ebp-0x4],0x3
1001eb3c:	push   DWORD PTR [ebp-0x14]
1001eb3f:	lea    ebx,[ebp-0x18]
1001eb42:	push   DWORD PTR [ebp+0x8]
1001eb45:	push   edi
1001eb46:	call   0x1001ee40
1001eb4b:	xor    ebx,ebx
1001eb4d:	cmp    eax,ebx
1001eb4f:	jge    0x1001eb7b
1001eb51:	mov    BYTE PTR [ebp-0x4],0x2
1001eb55:	mov    eax,DWORD PTR [ebp-0x18]
1001eb58:	cmp    eax,ebx
1001eb5a:	je     0x1001eb62
1001eb5c:	mov    ecx,DWORD PTR [eax]
1001eb5e:	push   eax
1001eb5f:	call   DWORD PTR [ecx+0x8]
1001eb62:	mov    BYTE PTR [ebp-0x4],bl
1001eb65:	mov    eax,DWORD PTR [ebp-0x14]
1001eb68:	cmp    eax,ebx
1001eb6a:	je     0x1001eaa2
1001eb70:	mov    ecx,DWORD PTR [eax]
1001eb72:	push   eax
1001eb73:	call   DWORD PTR [ecx+0x8]
1001eb76:	jmp    0x1001eaa2
1001eb7b:	mov    esi,DWORD PTR [ebp-0x18]
1001eb7e:	mov    eax,DWORD PTR [esi]
1001eb80:	lea    ecx,[ebp-0x20]
1001eb83:	push   ecx
1001eb84:	push   0x100703a4
1001eb89:	push   esi
1001eb8a:	call   DWORD PTR [eax]
1001eb8c:	cmp    eax,ebx
1001eb8e:	jge    0x1001eb9c
1001eb90:	mov    BYTE PTR [ebp-0x4],0x2
1001eb94:	mov    eax,DWORD PTR [esi]
1001eb96:	push   esi
1001eb97:	call   DWORD PTR [eax+0x8]
1001eb9a:	jmp    0x1001eb62
1001eb9c:	push   DWORD PTR [ebp-0x20]
1001eb9f:	push   0xffffffeb
1001eba1:	push   DWORD PTR [ebp+0x8]
1001eba4:	call   DWORD PTR ds:0x10066358
1001ebaa:	mov    BYTE PTR [ebp-0x4],0x2
1001ebae:	mov    eax,DWORD PTR [esi]
1001ebb0:	push   esi
1001ebb1:	call   DWORD PTR [eax+0x8]
1001ebb4:	mov    BYTE PTR [ebp-0x4],bl
1001ebb7:	mov    eax,DWORD PTR [ebp-0x14]
1001ebba:	cmp    eax,ebx
1001ebbc:	je     0x1001ebc4
1001ebbe:	mov    ecx,DWORD PTR [eax]
1001ebc0:	push   eax
1001ebc1:	call   DWORD PTR [ecx+0x8]
1001ebc4:	push   edi
1001ebc5:	call   0x1001b5ea
1001ebca:	pop    ecx
1001ebcb:	push   DWORD PTR [ebp+0x14]
1001ebce:	push   DWORD PTR [ebp+0x10]
1001ebd1:	push   DWORD PTR [ebp+0xc]
1001ebd4:	push   DWORD PTR [ebp+0x8]
1001ebd7:	call   DWORD PTR ds:0x1006633c
1001ebdd:	lea    esp,[ebp-0x38]
1001ebe0:	call   0x10059d61
1001ebe5:	ret    0x10
1001ebe8:	push   0x20
1001ebea:	mov    eax,0x1006040f
1001ebef:	call   0x10059cde
1001ebf4:	mov    eax,DWORD PTR [ebp+0xc]
1001ebf7:	dec    eax
1001ebf8:	je     0x1001ec6a
1001ebfa:	sub    eax,0x81
1001ebff:	je     0x1001ec4a
1001ec01:	sub    eax,0x18e
1001ec06:	jne    0x1001ee23
1001ec0c:	cmp    DWORD PTR [ebp+0x10],0x1
1001ec10:	jne    0x1001ee23
1001ec16:	mov    esi,DWORD PTR ds:0x10066310
1001ec1c:	push   0xffffffec
1001ec1e:	push   DWORD PTR [ebp+0x14]
1001ec21:	call   esi
1001ec23:	mov    ebx,0x10000
1001ec28:	test   ebx,eax
1001ec2a:	je     0x1001ee23
1001ec30:	push   0xffffffec
1001ec32:	push   DWORD PTR [ebp+0x8]
1001ec35:	call   esi
1001ec37:	or     eax,ebx
1001ec39:	push   eax
1001ec3a:	push   0xffffffec
1001ec3c:	push   DWORD PTR [ebp+0x8]
1001ec3f:	call   DWORD PTR ds:0x10066358
1001ec45:	jmp    0x1001ee23
1001ec4a:	push   0xffffffeb
1001ec4c:	push   DWORD PTR [ebp+0x8]
1001ec4f:	call   DWORD PTR ds:0x10066310
1001ec55:	test   eax,eax
1001ec57:	je     0x1001ec5f
1001ec59:	mov    ecx,DWORD PTR [eax]
1001ec5b:	push   eax
1001ec5c:	call   DWORD PTR [ecx+0x8]
1001ec5f:	call   DWORD PTR ds:0x10066410
1001ec65:	jmp    0x1001ee23
1001ec6a:	xor    edi,edi
1001ec6c:	push   edi
1001ec6d:	call   DWORD PTR ds:0x10066414
1001ec73:	push   DWORD PTR [ebp+0x8]
1001ec76:	call   DWORD PTR ds:0x1006635c
1001ec7c:	mov    esi,eax
1001ec7e:	lea    eax,[esi+esi*1+0xa]
1001ec82:	cmp    eax,0x400
1001ec87:	ja     0x1001ec9c
1001ec89:	call   0x1004b990
1001ec8e:	mov    eax,esp
1001ec90:	cmp    eax,edi
1001ec92:	je     0x1001ecb0
1001ec94:	mov    DWORD PTR [eax],0xcccc
1001ec9a:	jmp    0x1001ecad
1001ec9c:	push   eax
1001ec9d:	call   0x10045222
1001eca2:	cmp    eax,edi
1001eca4:	pop    ecx
1001eca5:	je     0x1001ecb0
1001eca7:	mov    DWORD PTR [eax],0xdddd
1001ecad:	add    eax,0x8
1001ecb0:	mov    DWORD PTR [ebp-0x18],eax
1001ecb3:	mov    DWORD PTR [ebp-0x28],eax
1001ecb6:	cmp    eax,edi
1001ecb8:	mov    DWORD PTR [ebp-0x4],edi
1001ecbb:	jne    0x1001eccc
1001ecbd:	push   edi
1001ecbe:	call   0x1001b5ea
1001ecc3:	pop    ecx
1001ecc4:	or     eax,0xffffffff
1001ecc7:	jmp    0x1001ee35
1001eccc:	inc    esi
1001eccd:	push   esi
1001ecce:	push   eax
1001eccf:	push   DWORD PTR [ebp+0x8]
1001ecd2:	call   DWORD PTR ds:0x10066314
1001ecd8:	push   0x1006d1c8
1001ecdd:	push   DWORD PTR [ebp+0x8]
1001ece0:	call   DWORD PTR ds:0x10066334
1001ece6:	mov    eax,DWORD PTR [ebp+0x14]
1001ece9:	xor    ebx,ebx
1001eceb:	cmp    eax,edi
1001eced:	mov    DWORD PTR [ebp-0x24],edi
1001ecf0:	je     0x1001ecfb
1001ecf2:	mov    eax,DWORD PTR [eax]
1001ecf4:	cmp    eax,edi
1001ecf6:	je     0x1001ecfb
1001ecf8:	movzx  ebx,WORD PTR [eax]
1001ecfb:	push   ebx
1001ecfc:	push   0x42
1001ecfe:	call   DWORD PTR ds:0x10066148
1001ed04:	mov    esi,eax
1001ed06:	mov    DWORD PTR [ebp-0x14],edi
1001ed09:	cmp    esi,edi
1001ed0b:	mov    BYTE PTR [ebp-0x4],0x1
1001ed0f:	je     0x1001ed43
1001ed11:	cmp    ebx,edi
1001ed13:	je     0x1001ed43
1001ed15:	push   esi
1001ed16:	call   DWORD PTR ds:0x10066144
1001ed1c:	mov    ecx,DWORD PTR [ebp+0x14]
1001ed1f:	mov    ecx,DWORD PTR [ecx]
1001ed21:	inc    ecx
1001ed22:	push   ebx
1001ed23:	inc    ecx
1001ed24:	push   ecx
1001ed25:	push   ebx
1001ed26:	push   eax
1001ed27:	call   0x10014532
1001ed2c:	add    esp,0x10
1001ed2f:	push   esi
1001ed30:	call   DWORD PTR ds:0x10066154
1001ed36:	lea    eax,[ebp-0x14]
1001ed39:	push   eax
1001ed3a:	push   0x1
1001ed3c:	push   esi
1001ed3d:	call   DWORD PTR ds:0x1006641c
1001ed43:	mov    DWORD PTR [ebp-0x20],edi
1001ed46:	lea    eax,[ebp-0x20]
1001ed49:	mov    BYTE PTR [ebp-0x4],0x2
1001ed4d:	mov    ecx,DWORD PTR [ebp-0x14]
1001ed50:	push   eax
1001ed51:	call   0x1001bc17
1001ed56:	cmp    eax,edi
1001ed58:	pop    ecx
1001ed59:	jge    0x1001ed7d
1001ed5b:	push   DWORD PTR [ebp-0x20]
1001ed5e:	call   DWORD PTR ds:0x100662b4
1001ed64:	mov    BYTE PTR [ebp-0x4],0x0
1001ed68:	mov    eax,DWORD PTR [ebp-0x14]
1001ed6b:	cmp    eax,edi
1001ed6d:	je     0x1001ed75
1001ed6f:	mov    ecx,DWORD PTR [eax]
1001ed71:	push   eax
1001ed72:	call   DWORD PTR [ecx+0x8]
1001ed75:	push   DWORD PTR [ebp-0x18]
1001ed78:	jmp    0x1001ecbe
1001ed7d:	call   DWORD PTR ds:0x1007efec
1001ed83:	mov    DWORD PTR [ebp-0x2c],edi
1001ed86:	mov    DWORD PTR [ebp-0x1c],edi
1001ed89:	mov    BYTE PTR [ebp-0x4],0x4
1001ed8d:	mov    edi,DWORD PTR [ebp-0x20]
1001ed90:	push   edi
1001ed91:	push   DWORD PTR [ebp-0x14]
1001ed94:	lea    ebx,[ebp-0x1c]
1001ed97:	push   DWORD PTR [ebp+0x8]
1001ed9a:	push   DWORD PTR [ebp-0x18]
1001ed9d:	call   0x1001ee40
1001eda2:	xor    ebx,ebx
1001eda4:	cmp    eax,ebx
1001eda6:	jge    0x1001edca
1001eda8:	mov    BYTE PTR [ebp-0x4],0x3
1001edac:	mov    eax,DWORD PTR [ebp-0x1c]
1001edaf:	cmp    eax,ebx
1001edb1:	je     0x1001edb9
1001edb3:	mov    ecx,DWORD PTR [eax]
1001edb5:	push   eax
1001edb6:	call   DWORD PTR [ecx+0x8]
1001edb9:	push   edi
1001edba:	call   DWORD PTR ds:0x100662b4
1001edc0:	mov    BYTE PTR [ebp-0x4],bl
1001edc3:	mov    eax,DWORD PTR [ebp-0x14]
1001edc6:	cmp    eax,ebx
1001edc8:	jmp    0x1001ed6d
1001edca:	mov    esi,DWORD PTR [ebp-0x1c]
1001edcd:	mov    eax,DWORD PTR [esi]
1001edcf:	lea    ecx,[ebp-0x24]
1001edd2:	push   ecx
1001edd3:	push   0x10070394
1001edd8:	push   esi
1001edd9:	call   DWORD PTR [eax]
1001eddb:	cmp    eax,ebx
1001eddd:	jge    0x1001edeb
1001eddf:	mov    BYTE PTR [ebp-0x4],0x3
1001ede3:	mov    eax,DWORD PTR [esi]
1001ede5:	push   esi
1001ede6:	call   DWORD PTR [eax+0x8]
1001ede9:	jmp    0x1001edb9
1001edeb:	push   DWORD PTR [ebp-0x24]
1001edee:	push   0xffffffeb
1001edf0:	push   DWORD PTR [ebp+0x8]
1001edf3:	call   DWORD PTR ds:0x10066358
1001edf9:	mov    BYTE PTR [ebp-0x4],0x3
1001edfd:	mov    eax,DWORD PTR [esi]
1001edff:	push   esi
1001ee00:	call   DWORD PTR [eax+0x8]
1001ee03:	push   edi
1001ee04:	call   DWORD PTR ds:0x100662b4
1001ee0a:	mov    BYTE PTR [ebp-0x4],bl
1001ee0d:	mov    eax,DWORD PTR [ebp-0x14]
1001ee10:	cmp    eax,ebx
1001ee12:	je     0x1001ee1a
1001ee14:	mov    ecx,DWORD PTR [eax]
1001ee16:	push   eax
1001ee17:	call   DWORD PTR [ecx+0x8]
1001ee1a:	push   DWORD PTR [ebp-0x18]
1001ee1d:	call   0x1001b5ea
1001ee22:	pop    ecx
1001ee23:	push   DWORD PTR [ebp+0x14]
1001ee26:	push   DWORD PTR [ebp+0x10]
1001ee29:	push   DWORD PTR [ebp+0xc]
1001ee2c:	push   DWORD PTR [ebp+0x8]
1001ee2f:	call   DWORD PTR ds:0x1006633c
1001ee35:	lea    esp,[ebp-0x3c]
1001ee38:	call   0x10059d61
1001ee3d:	ret    0x10
1001ee40:	push   ebp
1001ee41:	mov    ebp,esp
1001ee43:	sub    esp,0xc
1001ee46:	push   esi
1001ee47:	push   edi
1001ee48:	call   0x1001eef0
1001ee4d:	lea    eax,[ebp-0x4]
1001ee50:	xor    edi,edi
1001ee52:	push   eax
1001ee53:	mov    DWORD PTR [ebp-0x4],edi
1001ee56:	mov    DWORD PTR [ebp-0xc],edi
1001ee59:	call   0x10020361
1001ee5e:	mov    esi,eax
1001ee60:	cmp    esi,edi
1001ee62:	jl     0x1001eeba
1001ee64:	mov    eax,DWORD PTR [ebp-0x4]
1001ee67:	lea    edx,[ebp-0x8]
1001ee6a:	push   edx
1001ee6b:	push   0x100703a4
1001ee70:	mov    DWORD PTR [ebp-0x8],edi
1001ee73:	mov    ecx,DWORD PTR [eax]
1001ee75:	push   eax
1001ee76:	call   DWORD PTR [ecx]
1001ee78:	push   DWORD PTR [ebp+0x8]
1001ee7b:	lea    esi,[ebp+0x8]
1001ee7e:	call   0x1001b605
1001ee83:	push   DWORD PTR [ebp+0x14]
1001ee86:	mov    eax,DWORD PTR [ebp-0x8]
1001ee89:	mov    ecx,DWORD PTR [eax]
1001ee8b:	push   edi
1001ee8c:	push   0x1006b858
1001ee91:	lea    edx,[ebp-0xc]
1001ee94:	push   edx
1001ee95:	push   DWORD PTR [ebp+0x10]
1001ee98:	push   DWORD PTR [ebp+0xc]
1001ee9b:	push   DWORD PTR [ebp+0x8]
1001ee9e:	push   eax
1001ee9f:	call   DWORD PTR [ecx+0x28]
1001eea2:	push   DWORD PTR [ebp+0x8]
1001eea5:	mov    esi,eax
1001eea7:	call   DWORD PTR ds:0x100662b4
1001eead:	mov    eax,DWORD PTR [ebp-0x8]
1001eeb0:	cmp    eax,edi
1001eeb2:	je     0x1001eeba
1001eeb4:	mov    ecx,DWORD PTR [eax]
1001eeb6:	push   eax
1001eeb7:	call   DWORD PTR [ecx+0x8]
1001eeba:	cmp    ebx,edi
1001eebc:	je     0x1001eece
1001eebe:	cmp    esi,edi
1001eec0:	jl     0x1001eecc
1001eec2:	mov    eax,DWORD PTR [ebp-0x4]
1001eec5:	mov    DWORD PTR [ebx],eax
1001eec7:	mov    DWORD PTR [ebp-0x4],edi
1001eeca:	jmp    0x1001eece
1001eecc:	mov    DWORD PTR [ebx],edi
1001eece:	mov    eax,DWORD PTR [ebp-0xc]
1001eed1:	cmp    eax,edi
1001eed3:	je     0x1001eedb
1001eed5:	mov    ecx,DWORD PTR [eax]
1001eed7:	push   eax
1001eed8:	call   DWORD PTR [ecx+0x8]
1001eedb:	mov    eax,DWORD PTR [ebp-0x4]
1001eede:	cmp    eax,edi
1001eee0:	je     0x1001eee8
1001eee2:	mov    ecx,DWORD PTR [eax]
1001eee4:	push   eax
1001eee5:	call   DWORD PTR [ecx+0x8]
1001eee8:	pop    edi
1001eee9:	mov    eax,esi
1001eeeb:	pop    esi
1001eeec:	leave  
1001eeed:	ret    0x10
1001eef0:	push   ebp
1001eef1:	mov    ebp,esp
1001eef3:	and    esp,0xfffffff8
1001eef6:	sub    esp,0x3c
1001eef9:	push   ebx
1001eefa:	push   esi
1001eefb:	mov    eax,0x10080a40
1001ef00:	push   edi
1001ef01:	push   eax
1001ef02:	mov    DWORD PTR [esp+0x14],eax
1001ef06:	call   DWORD PTR ds:0x100660f0
1001ef0c:	mov    esi,DWORD PTR ds:0x100662f4
1001ef12:	push   0x10070598
1001ef17:	mov    BYTE PTR [esp+0x18],0x1
1001ef1c:	call   esi
1001ef1e:	push   0x100705b4
1001ef23:	mov    ds:0x10080fd8,eax
1001ef28:	call   esi
1001ef2a:	push   0x30
1001ef2c:	pop    edi
1001ef2d:	mov    ds:0x10080fdc,eax
1001ef32:	lea    eax,[esp+0x18]
1001ef36:	push   eax
1001ef37:	mov    esi,0x10070574
1001ef3c:	push   esi
1001ef3d:	push   DWORD PTR ds:0x10080a04
1001ef43:	mov    DWORD PTR [esp+0x24],edi
1001ef47:	call   DWORD PTR ds:0x100662c4
1001ef4d:	xor    ebx,ebx
1001ef4f:	cmp    eax,ebx
1001ef51:	jne    0x1001efca
1001ef53:	mov    eax,ds:0x10080a04
1001ef58:	push   0x7f00
1001ef5d:	push   ebx
1001ef5e:	mov    DWORD PTR [esp+0x20],edi
1001ef62:	mov    DWORD PTR [esp+0x24],0x8
1001ef6a:	mov    DWORD PTR [esp+0x28],0x1001e9cd
1001ef72:	mov    DWORD PTR [esp+0x2c],ebx
1001ef76:	mov    DWORD PTR [esp+0x30],ebx
1001ef7a:	mov    DWORD PTR [esp+0x34],eax
1001ef7e:	mov    DWORD PTR [esp+0x38],ebx
1001ef82:	call   DWORD PTR ds:0x10066364
1001ef88:	mov    DWORD PTR [esp+0x34],eax
1001ef8c:	lea    eax,[esp+0x18]
1001ef90:	push   eax
1001ef91:	mov    DWORD PTR [esp+0x3c],0x6
1001ef99:	mov    DWORD PTR [esp+0x40],ebx
1001ef9d:	mov    DWORD PTR [esp+0x44],esi
1001efa1:	mov    DWORD PTR [esp+0x48],ebx
1001efa5:	call   DWORD PTR ds:0x100662bc
1001efab:	movzx  eax,ax
1001efae:	cmp    ax,bx
1001efb1:	mov    DWORD PTR [esp+0xc],eax
1001efb5:	je     0x1001f07d
1001efbb:	lea    eax,[esp+0xc]
1001efbf:	push   eax
1001efc0:	mov    esi,0x10080a5c
1001efc5:	call   0x1001ff6d
1001efca:	push   edi
1001efcb:	lea    eax,[esp+0x1c]
1001efcf:	push   ebx
1001efd0:	push   eax
1001efd1:	call   0x10045ea0
1001efd6:	add    esp,0xc
1001efd9:	lea    eax,[esp+0x18]
1001efdd:	push   eax
1001efde:	mov    esi,0x10070684
1001efe3:	push   esi
1001efe4:	push   DWORD PTR ds:0x10080a04
1001efea:	mov    DWORD PTR [esp+0x24],edi
1001efee:	call   DWORD PTR ds:0x100662c4
1001eff4:	cmp    eax,ebx
1001eff6:	mov    DWORD PTR [esp+0xc],eax
1001effa:	jne    0x1001f081
1001f000:	mov    eax,ds:0x10080a04
1001f005:	push   0x7f00
1001f00a:	push   ebx
1001f00b:	mov    DWORD PTR [esp+0x20],edi
1001f00f:	mov    DWORD PTR [esp+0x24],0x8
1001f017:	mov    DWORD PTR [esp+0x28],0x1001ebe8
1001f01f:	mov    DWORD PTR [esp+0x2c],ebx
1001f023:	mov    DWORD PTR [esp+0x30],ebx
1001f027:	mov    DWORD PTR [esp+0x34],eax
1001f02b:	mov    DWORD PTR [esp+0x38],ebx
1001f02f:	call   DWORD PTR ds:0x10066364
1001f035:	mov    DWORD PTR [esp+0x34],eax
1001f039:	lea    eax,[esp+0x18]
1001f03d:	push   eax
1001f03e:	mov    DWORD PTR [esp+0x3c],0x6
1001f046:	mov    DWORD PTR [esp+0x40],ebx
1001f04a:	mov    DWORD PTR [esp+0x44],esi
1001f04e:	mov    DWORD PTR [esp+0x48],ebx
1001f052:	call   DWORD PTR ds:0x100662bc
1001f058:	movzx  eax,ax
1001f05b:	cmp    ax,bx
1001f05e:	mov    DWORD PTR [esp+0xc],eax
1001f062:	je     0x1001f07d
1001f064:	lea    eax,[esp+0xc]
1001f068:	push   eax
1001f069:	mov    esi,0x10080a5c
1001f06e:	call   0x1001ff6d
1001f073:	mov    DWORD PTR [esp+0xc],0x1
1001f07b:	jmp    0x1001f081
1001f07d:	mov    DWORD PTR [esp+0xc],ebx
1001f081:	lea    ecx,[esp+0x10]
1001f085:	call   0x10010e45
1001f08a:	mov    eax,DWORD PTR [esp+0xc]
1001f08e:	pop    edi
1001f08f:	pop    esi
1001f090:	pop    ebx
1001f091:	mov    esp,ebp
1001f093:	pop    ebp
1001f094:	ret    
1001f095:	cmp    DWORD PTR [eax+0x18],0x8
1001f099:	push   esi
1001f09a:	push   edi
1001f09b:	jb     0x1001f0a2
1001f09d:	mov    esi,DWORD PTR [eax+0x4]
1001f0a0:	jmp    0x1001f0a5
1001f0a2:	lea    esi,[eax+0x4]
1001f0a5:	push   esi
1001f0a6:	call   0x10043933
1001f0ab:	pop    ecx
1001f0ac:	mov    ecx,DWORD PTR [ebx+0x14]
1001f0af:	mov    edi,eax
1001f0b1:	push   esi
1001f0b2:	mov    eax,ebx
1001f0b4:	call   0x100065f4
1001f0b9:	xor    ecx,ecx
1001f0bb:	test   eax,eax
1001f0bd:	setl   cl
1001f0c0:	pop    edi
1001f0c1:	mov    al,cl
1001f0c3:	pop    esi
1001f0c4:	ret    
1001f0c5:	push   ebp
1001f0c6:	mov    ebp,esp
1001f0c8:	sub    esp,0x20
1001f0cb:	push   ebx
1001f0cc:	push   esi
1001f0cd:	push   edi
1001f0ce:	push   0xffffffff
1001f0d0:	push   DWORD PTR ds:0x10080f50
1001f0d6:	xor    ebx,ebx
1001f0d8:	call   DWORD PTR ds:0x10066084
1001f0de:	test   eax,eax
1001f0e0:	jne    0x1001f184
1001f0e6:	lea    eax,[ebp+0x8]
1001f0e9:	push   eax
1001f0ea:	lea    eax,[ebp-0x14]
1001f0ed:	push   eax
1001f0ee:	call   0x10020aa8
1001f0f3:	mov    eax,ds:0x10080f58
1001f0f8:	lea    edi,[ebp-0xc]
1001f0fb:	lea    esi,[ebp-0x14]
1001f0fe:	mov    DWORD PTR [ebp-0x8],eax
1001f101:	mov    DWORD PTR [ebp-0xc],0x10080f54
1001f108:	call   0x10004b10
1001f10d:	test   al,al
1001f10f:	je     0x1001f178
1001f111:	mov    esi,DWORD PTR ds:0x10066130
1001f117:	push   ebx
1001f118:	push   ebx
1001f119:	push   ebx
1001f11a:	push   ebx
1001f11b:	mov    BYTE PTR [ebp-0x10],bl
1001f11e:	mov    DWORD PTR [ebp-0x1c],0x1388
1001f125:	call   esi
1001f127:	push   ebx
1001f128:	push   ebx
1001f129:	push   ebx
1001f12a:	push   ebx
1001f12b:	mov    DWORD PTR [ebp-0x14],eax
1001f12e:	call   esi
1001f130:	lea    ebx,[ebp+0x8]
1001f133:	mov    DWORD PTR [ebp-0x18],eax
1001f136:	call   0x10020775
1001f13b:	mov    edi,eax
1001f13d:	lea    esi,[ebp-0x1c]
1001f140:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1001f141:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1001f142:	push   0x2
1001f144:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1001f145:	xor    ebx,ebx
1001f147:	push   ebx
1001f148:	push   ebx
1001f149:	push   DWORD PTR [ebp+0xc]
1001f14c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1001f14d:	mov    esi,DWORD PTR ds:0x10066108
1001f153:	call   esi
1001f155:	push   eax
1001f156:	push   DWORD PTR [ebp-0x18]
1001f159:	call   esi
1001f15b:	mov    edi,DWORD PTR ds:0x1006613c
1001f161:	push   eax
1001f162:	call   edi
1001f164:	push   0x2
1001f166:	push   ebx
1001f167:	push   ebx
1001f168:	push   DWORD PTR [ebp+0x10]
1001f16b:	call   esi
1001f16d:	push   eax
1001f16e:	push   DWORD PTR [ebp-0x14]
1001f171:	call   esi
1001f173:	push   eax
1001f174:	call   edi
1001f176:	mov    bl,0x1
1001f178:	push   DWORD PTR ds:0x10080f50
1001f17e:	call   DWORD PTR ds:0x10066094
1001f184:	pop    edi
1001f185:	pop    esi
1001f186:	mov    al,bl
1001f188:	pop    ebx
1001f189:	leave  
1001f18a:	ret    
1001f18b:	push   ebp
1001f18c:	mov    ebp,esp
1001f18e:	sub    esp,0x10
1001f191:	push   0xffffffff
1001f193:	push   DWORD PTR ds:0x10080f50
1001f199:	call   DWORD PTR ds:0x10066084
1001f19f:	test   eax,eax
1001f1a1:	jne    0x1001f1f7
1001f1a3:	push   esi
1001f1a4:	push   edi
1001f1a5:	lea    eax,[ebp+0x8]
1001f1a8:	push   eax
1001f1a9:	lea    eax,[ebp-0x8]
1001f1ac:	push   eax
1001f1ad:	call   0x10020aa8
1001f1b2:	mov    eax,ds:0x10080f58
1001f1b7:	lea    edi,[ebp-0x10]
1001f1ba:	lea    esi,[ebp-0x8]
1001f1bd:	mov    DWORD PTR [ebp-0xc],eax
1001f1c0:	mov    DWORD PTR [ebp-0x10],0x10080f54
1001f1c7:	call   0x10004b10
1001f1cc:	test   al,al
1001f1ce:	jne    0x1001f1e9
1001f1d0:	call   0x1000cedb
1001f1d5:	mov    ecx,DWORD PTR [ebp+0xc]
1001f1d8:	mov    DWORD PTR [eax+0x4],ecx
1001f1db:	call   0x1000cedb
1001f1e0:	push   DWORD PTR [eax+0x8]
1001f1e3:	call   DWORD PTR ds:0x10066110
1001f1e9:	push   DWORD PTR ds:0x10080f50
1001f1ef:	call   DWORD PTR ds:0x10066094
1001f1f5:	pop    edi
1001f1f6:	pop    esi
1001f1f7:	leave  
1001f1f8:	ret    
1001f1f9:	push   ebp
1001f1fa:	mov    ebp,esp
1001f1fc:	sub    esp,0x14
1001f1ff:	push   esi
1001f200:	push   edi
1001f201:	push   0xffffffff
1001f203:	push   DWORD PTR ds:0x10080f50
1001f209:	call   DWORD PTR ds:0x10066084
1001f20f:	test   eax,eax
1001f211:	jne    0x1001f253
1001f213:	lea    eax,[ebp+0x8]
1001f216:	push   eax
1001f217:	lea    eax,[ebp-0x14]
1001f21a:	push   eax
1001f21b:	call   0x10020aa8
1001f220:	mov    eax,ds:0x10080f58
1001f225:	lea    edi,[ebp-0xc]
1001f228:	lea    esi,[ebp-0x14]
1001f22b:	mov    DWORD PTR [ebp-0x8],eax
1001f22e:	mov    DWORD PTR [ebp-0xc],0x10080f54
1001f235:	call   0x10004b10
1001f23a:	test   al,al
1001f23c:	jne    0x1001f247
1001f23e:	call   0x1000cedb
1001f243:	mov    BYTE PTR [eax+0x10],0x1
1001f247:	push   DWORD PTR ds:0x10080f50
1001f24d:	call   DWORD PTR ds:0x10066094
1001f253:	pop    edi
1001f254:	pop    esi
1001f255:	leave  
1001f256:	ret    
1001f257:	push   ebp
1001f258:	mov    ebp,esp
1001f25a:	and    esp,0xfffffff8
1001f25d:	sub    esp,0x14
1001f260:	push   ebx
1001f261:	push   esi
1001f262:	push   edi
1001f263:	push   0xffffffff
1001f265:	push   DWORD PTR ds:0x10080f50
1001f26b:	xor    bl,bl
1001f26d:	call   DWORD PTR ds:0x10066084
1001f273:	test   eax,eax
1001f275:	jne    0x1001f2e7
1001f277:	lea    eax,[ebp+0x8]
1001f27a:	push   eax
1001f27b:	lea    eax,[esp+0x14]
1001f27f:	push   eax
1001f280:	call   0x10020aa8
1001f285:	mov    eax,ds:0x10080f58
1001f28a:	lea    edi,[esp+0x18]
1001f28e:	lea    esi,[esp+0x10]
1001f292:	mov    DWORD PTR [esp+0x1c],eax
1001f296:	mov    DWORD PTR [esp+0x18],0x10080f54
1001f29e:	call   0x10004b10
1001f2a3:	test   al,al
1001f2a5:	jne    0x1001f2db
1001f2a7:	call   0x1000cedb
1001f2ac:	mov    bl,BYTE PTR [eax+0x10]
1001f2af:	call   0x1000cedb
1001f2b4:	push   DWORD PTR [eax+0x8]
1001f2b7:	mov    edi,DWORD PTR ds:0x10066070
1001f2bd:	call   edi
1001f2bf:	call   0x1000cedb
1001f2c4:	push   DWORD PTR [eax+0xc]
1001f2c7:	call   edi
1001f2c9:	push   DWORD PTR [esp+0x14]
1001f2cd:	lea    eax,[esp+0x1c]
1001f2d1:	push   DWORD PTR [esp+0x14]
1001f2d5:	push   eax
1001f2d6:	call   0x10020835
1001f2db:	push   DWORD PTR ds:0x10080f50
1001f2e1:	call   DWORD PTR ds:0x10066094
1001f2e7:	pop    edi
1001f2e8:	pop    esi
1001f2e9:	mov    al,bl
1001f2eb:	pop    ebx
1001f2ec:	mov    esp,ebp
1001f2ee:	pop    ebp
1001f2ef:	ret    
1001f2f0:	push   esi
1001f2f1:	xor    esi,esi
1001f2f3:	mov    eax,DWORD PTR [esp+0xc]
1001f2f7:	mov    ecx,DWORD PTR [esi+0x1007f824]
1001f2fd:	call   0x10010465
1001f302:	test   eax,eax
1001f304:	jne    0x1001f313
1001f306:	add    esi,0x4
1001f309:	cmp    esi,0x4
1001f30c:	jb     0x1001f2f3
1001f30e:	inc    eax
1001f30f:	pop    esi
1001f310:	ret    0x8
1001f313:	xor    eax,eax
1001f315:	jmp    0x1001f30f
1001f317:	mov    ecx,DWORD PTR [esp+0x4]
1001f31b:	mov    edx,DWORD PTR [esp+0x8]
1001f31f:	add    ecx,0xffffffe4
1001f322:	call   0x100203eb
1001f327:	neg    eax
1001f329:	sbb    eax,eax
1001f32b:	and    eax,0x7fffbffb
1001f330:	add    eax,0x80004005
1001f335:	ret    0x8
1001f338:	cmp    DWORD PTR [esp+0x8],0xffffea78
1001f340:	jne    0x1001f356
1001f342:	mov    eax,DWORD PTR [esp+0x1c]
1001f346:	mov    WORD PTR [eax],0x3
1001f34b:	mov    DWORD PTR [eax+0x8],0x60009f80
1001f352:	xor    eax,eax
1001f354:	jmp    0x1001f35b
1001f356:	mov    eax,0x80020003
1001f35b:	ret    0x24
1001f35e:	push   ebp
1001f35f:	mov    ebp,esp
1001f361:	and    esp,0xfffffff8
1001f364:	push   0xffffffff
1001f366:	push   0x10061e0b
1001f36b:	mov    eax,fs:0x0
1001f371:	push   eax
1001f372:	sub    esp,0x20
1001f375:	push   ebx
1001f376:	push   esi
1001f377:	push   edi
1001f378:	mov    eax,ds:0x1007e030
1001f37d:	xor    eax,esp
1001f37f:	push   eax
1001f380:	lea    eax,[esp+0x30]
1001f384:	mov    fs:0x0,eax
1001f38a:	call   DWORD PTR ds:0x1007efec
1001f390:	push   0x2301959a
1001f395:	push   0x10070650
1001f39a:	call   0x100042d1
1001f39f:	push   0x349756a2
1001f3a4:	push   eax
1001f3a5:	call   0x100042d1
1001f3aa:	push   eax
1001f3ab:	push   0x8
1001f3ad:	push   0x1006e1bc
1001f3b2:	call   0x100044a2
1001f3b7:	add    esp,0x1c
1001f3ba:	push   eax
1001f3bb:	push   DWORD PTR [ebp+0xc]
1001f3be:	call   0x10046903
1001f3c3:	test   eax,eax
1001f3c5:	pop    ecx
1001f3c6:	pop    ecx
1001f3c7:	push   DWORD PTR [ebp+0xc]
1001f3ca:	jne    0x1001f5dd
1001f3d0:	call   0x1002069e
1001f3d5:	mov    edi,eax
1001f3d7:	xor    esi,esi
1001f3d9:	cmp    edi,esi
1001f3db:	mov    DWORD PTR [esp+0x28],edi
1001f3df:	je     0x1001f3e7
1001f3e1:	mov    eax,DWORD PTR [edi]
1001f3e3:	push   edi
1001f3e4:	call   DWORD PTR [eax+0x4]
1001f3e7:	mov    DWORD PTR [esp+0x38],esi
1001f3eb:	mov    DWORD PTR [esp+0x20],esi
1001f3ef:	call   0x1001eef0
1001f3f4:	push   ecx
1001f3f5:	mov    eax,esp
1001f3f7:	mov    DWORD PTR [esp+0x28],esp
1001f3fb:	push   ecx
1001f3fc:	mov    DWORD PTR [eax],esi
1001f3fe:	mov    eax,esp
1001f400:	mov    DWORD PTR [eax],esi
1001f402:	lea    eax,[esp+0x28]
1001f406:	mov    DWORD PTR [esp+0x2c],esp
1001f40a:	push   eax
1001f40b:	call   0x1001ffca
1001f410:	cmp    eax,esi
1001f412:	jne    0x1001f42d
1001f414:	or     DWORD PTR [esp+0x38],0xffffffff
1001f419:	cmp    edi,esi
1001f41b:	je     0x1001f423
1001f41d:	mov    eax,DWORD PTR [edi]
1001f41f:	push   edi
1001f420:	call   DWORD PTR [eax+0x8]
1001f423:	mov    eax,0x80004005
1001f428:	jmp    0x1001f5f5
1001f42d:	mov    DWORD PTR [esp+0x10],esi
1001f431:	push   0x1006b898
1001f436:	lea    eax,[esp+0x24]
1001f43a:	push   eax
1001f43b:	lea    ebx,[esp+0x18]
1001f43f:	mov    BYTE PTR [esp+0x40],0x1
1001f444:	call   0x10020013
1001f449:	mov    esi,eax
1001f44b:	xor    ebx,ebx
1001f44d:	cmp    esi,ebx
1001f44f:	jge    0x1001f479
1001f451:	mov    BYTE PTR [esp+0x38],bl
1001f455:	mov    eax,DWORD PTR [esp+0x10]
1001f459:	cmp    eax,ebx
1001f45b:	je     0x1001f463
1001f45d:	mov    ecx,DWORD PTR [eax]
1001f45f:	push   eax
1001f460:	call   DWORD PTR [ecx+0x8]
1001f463:	or     DWORD PTR [esp+0x38],0xffffffff
1001f468:	cmp    edi,ebx
1001f46a:	je     0x1001f472
1001f46c:	mov    eax,DWORD PTR [edi]
1001f46e:	push   edi
1001f46f:	call   DWORD PTR [eax+0x8]
1001f472:	mov    eax,esi
1001f474:	jmp    0x1001f5f5
1001f479:	mov    DWORD PTR [esp+0x18],ebx
1001f47d:	mov    DWORD PTR [esp+0x14],ebx
1001f481:	lea    ecx,[esp+0x18]
1001f485:	push   ecx
1001f486:	push   0x1006b888
1001f48b:	mov    BYTE PTR [esp+0x40],0x3
1001f490:	mov    eax,DWORD PTR [edi]
1001f492:	push   edi
1001f493:	call   DWORD PTR [eax]
1001f495:	mov    esi,eax
1001f497:	cmp    esi,ebx
1001f499:	jge    0x1001f4da
1001f49b:	mov    BYTE PTR [esp+0x38],0x2
1001f4a0:	mov    eax,DWORD PTR [esp+0x14]
1001f4a4:	cmp    eax,ebx
1001f4a6:	je     0x1001f4ae
1001f4a8:	mov    ecx,DWORD PTR [eax]
1001f4aa:	push   eax
1001f4ab:	call   DWORD PTR [ecx+0x8]
1001f4ae:	mov    BYTE PTR [esp+0x38],0x1
1001f4b3:	mov    eax,DWORD PTR [esp+0x18]
1001f4b7:	cmp    eax,ebx
1001f4b9:	je     0x1001f4c1
1001f4bb:	mov    ecx,DWORD PTR [eax]
1001f4bd:	push   eax
1001f4be:	call   DWORD PTR [ecx+0x8]
1001f4c1:	mov    BYTE PTR [esp+0x38],bl
1001f4c5:	mov    eax,DWORD PTR [esp+0x10]
1001f4c9:	cmp    eax,ebx
1001f4cb:	je     0x1001f4d3
1001f4cd:	mov    ecx,DWORD PTR [eax]
1001f4cf:	push   eax
1001f4d0:	call   DWORD PTR [ecx+0x8]
1001f4d3:	or     DWORD PTR [esp+0x38],0xffffffff
1001f4d8:	jmp    0x1001f46c
1001f4da:	mov    eax,DWORD PTR [edi]
1001f4dc:	lea    ecx,[esp+0x14]
1001f4e0:	push   ecx
1001f4e1:	push   0x1006b868
1001f4e6:	push   edi
1001f4e7:	call   DWORD PTR [eax]
1001f4e9:	mov    esi,eax
1001f4eb:	cmp    esi,ebx
1001f4ed:	jl     0x1001f49b
1001f4ef:	mov    eax,DWORD PTR [esp+0x18]
1001f4f3:	push   DWORD PTR [esp+0x10]
1001f4f7:	mov    ecx,DWORD PTR [eax]
1001f4f9:	push   eax
1001f4fa:	call   DWORD PTR [ecx+0xc]
1001f4fd:	mov    esi,eax
1001f4ff:	cmp    esi,ebx
1001f501:	jl     0x1001f49b
1001f503:	mov    DWORD PTR [esp+0x1c],ebx
1001f507:	push   0x1006cc90
1001f50c:	lea    eax,[esp+0x24]
1001f510:	push   eax
1001f511:	lea    ebx,[esp+0x24]
1001f515:	mov    BYTE PTR [esp+0x40],0x4
1001f51a:	call   0x10020013
1001f51f:	mov    esi,eax
1001f521:	xor    ebx,ebx
1001f523:	cmp    esi,ebx
1001f525:	jge    0x1001f543
1001f527:	mov    BYTE PTR [esp+0x38],0x3
1001f52c:	mov    eax,DWORD PTR [esp+0x1c]
1001f530:	cmp    eax,ebx
1001f532:	je     0x1001f49b
1001f538:	mov    ecx,DWORD PTR [eax]
1001f53a:	push   eax
1001f53b:	call   DWORD PTR [ecx+0x8]
1001f53e:	jmp    0x1001f49b
1001f543:	lea    eax,[esp+0x24]
1001f547:	push   eax
1001f548:	call   0x100222b5
1001f54d:	mov    eax,DWORD PTR [esp+0x1c]
1001f551:	push   DWORD PTR [esp+0x24]
1001f555:	mov    ecx,DWORD PTR [eax]
1001f557:	push   eax
1001f558:	call   DWORD PTR [ecx+0x8c]
1001f55e:	mov    esi,eax
1001f560:	cmp    esi,ebx
1001f562:	jl     0x1001f527
1001f564:	mov    eax,DWORD PTR [esp+0x14]
1001f568:	mov    ecx,DWORD PTR [eax]
1001f56a:	push   0xffffea78
1001f56f:	push   eax
1001f570:	call   DWORD PTR [ecx+0x14]
1001f573:	mov    esi,eax
1001f575:	cmp    esi,ebx
1001f577:	jl     0x1001f527
1001f579:	push   DWORD PTR [esp+0x20]
1001f57d:	call   DWORD PTR ds:0x10066304
1001f583:	mov    ecx,DWORD PTR [ebp+0x10]
1001f586:	mov    eax,edi
1001f588:	mov    DWORD PTR [ecx],eax
1001f58a:	mov    BYTE PTR [esp+0x38],0x3
1001f58f:	mov    eax,DWORD PTR [esp+0x1c]
1001f593:	cmp    eax,ebx
1001f595:	mov    DWORD PTR [esp+0x28],ebx
1001f599:	je     0x1001f5a1
1001f59b:	mov    ecx,DWORD PTR [eax]
1001f59d:	push   eax
1001f59e:	call   DWORD PTR [ecx+0x8]
1001f5a1:	mov    BYTE PTR [esp+0x38],0x2
1001f5a6:	mov    eax,DWORD PTR [esp+0x14]
1001f5aa:	cmp    eax,ebx
1001f5ac:	je     0x1001f5b4
1001f5ae:	mov    ecx,DWORD PTR [eax]
1001f5b0:	push   eax
1001f5b1:	call   DWORD PTR [ecx+0x8]
1001f5b4:	mov    BYTE PTR [esp+0x38],0x1
1001f5b9:	mov    eax,DWORD PTR [esp+0x18]
1001f5bd:	cmp    eax,ebx
1001f5bf:	je     0x1001f5c7
1001f5c1:	mov    ecx,DWORD PTR [eax]
1001f5c3:	push   eax
1001f5c4:	call   DWORD PTR [ecx+0x8]
1001f5c7:	mov    BYTE PTR [esp+0x38],bl
1001f5cb:	mov    eax,DWORD PTR [esp+0x10]
1001f5cf:	cmp    eax,ebx
1001f5d1:	je     0x1001f5d9
1001f5d3:	mov    ecx,DWORD PTR [eax]
1001f5d5:	push   eax
1001f5d6:	call   DWORD PTR [ecx+0x8]
1001f5d9:	xor    eax,eax
1001f5db:	jmp    0x1001f5f5
1001f5dd:	call   0x1002069e
1001f5e2:	mov    ecx,DWORD PTR [ebp+0x10]
1001f5e5:	mov    DWORD PTR [ecx],eax
1001f5e7:	neg    eax
1001f5e9:	sbb    eax,eax
1001f5eb:	and    eax,0x7fffbffb
1001f5f0:	add    eax,0x80004005
1001f5f5:	mov    ecx,DWORD PTR [esp+0x30]
1001f5f9:	mov    DWORD PTR fs:0x0,ecx
1001f600:	pop    ecx
1001f601:	pop    edi
1001f602:	pop    esi
1001f603:	pop    ebx
1001f604:	mov    esp,ebp
1001f606:	pop    ebp
1001f607:	ret    0xc
1001f60a:	mov    edx,DWORD PTR [esp+0x4]
1001f60e:	push   DWORD PTR [esp+0x8]
1001f612:	mov    ecx,DWORD PTR [esp+0x10]
1001f616:	add    edx,0xffffffe4
1001f619:	call   0x10020584
1001f61e:	neg    eax
1001f620:	sbb    eax,eax
1001f622:	and    eax,0x7fffbffb
1001f627:	add    eax,0x80004005
1001f62c:	ret    0xc
1001f62f:	push   ebp
1001f630:	mov    ebp,esp
1001f632:	mov    edx,DWORD PTR [ebp+0x8]
1001f635:	sub    esp,0x20
1001f638:	push   esi
1001f639:	xor    esi,esi
1001f63b:	cmp    DWORD PTR [edx-0x10],esi
1001f63e:	je     0x1001f673
1001f640:	push   edi
1001f641:	push   0x7
1001f643:	pop    ecx
1001f644:	mov    WORD PTR [ebp-0x20],si
1001f648:	xor    eax,eax
1001f64a:	lea    edi,[ebp-0x1e]
1001f64d:	rep stos DWORD PTR es:[edi],eax
1001f64f:	stos   WORD PTR es:[edi],ax
1001f651:	mov    eax,DWORD PTR [edx-0x14]
1001f654:	mov    ecx,DWORD PTR [eax]
1001f656:	lea    edx,[ebp-0x20]
1001f659:	push   edx
1001f65a:	push   esi
1001f65b:	push   0x42
1001f65d:	push   esi
1001f65e:	push   esi
1001f65f:	push   esi
1001f660:	push   esi
1001f661:	push   esi
1001f662:	push   DWORD PTR [ebp+0xc]
1001f665:	push   eax
1001f666:	call   DWORD PTR [ecx+0x14]
1001f669:	test   eax,eax
1001f66b:	pop    edi
1001f66c:	jl     0x1001f673
1001f66e:	xor    eax,eax
1001f670:	inc    eax
1001f671:	jmp    0x1001f675
1001f673:	xor    eax,eax
1001f675:	neg    eax
1001f677:	sbb    eax,eax
1001f679:	and    eax,0x7fffbffb
1001f67e:	add    eax,0x80004005
1001f683:	pop    esi
1001f684:	leave  
1001f685:	ret    0x8
1001f688:	push   ebp
1001f689:	mov    ebp,esp
1001f68b:	mov    eax,DWORD PTR [ebp+0x8]
1001f68e:	mov    edx,DWORD PTR [eax-0x14]
1001f691:	sub    esp,0x20
1001f694:	push   esi
1001f695:	xor    esi,esi
1001f697:	cmp    edx,esi
1001f699:	je     0x1001f6e9
1001f69b:	push   edi
1001f69c:	push   0x7
1001f69e:	pop    ecx
1001f69f:	mov    WORD PTR [ebp-0x20],si
1001f6a3:	xor    eax,eax
1001f6a5:	lea    edi,[ebp-0x1e]
1001f6a8:	rep stos DWORD PTR es:[edi],eax
1001f6aa:	lea    ecx,[ebp-0x20]
1001f6ad:	push   ecx
1001f6ae:	lea    ecx,[ebp+0x8]
1001f6b1:	push   ecx
1001f6b2:	push   esi
1001f6b3:	push   esi
1001f6b4:	push   esi
1001f6b5:	push   0x1006d1c8
1001f6ba:	push   DWORD PTR [ebp+0x18]
1001f6bd:	stos   WORD PTR es:[edi],ax
1001f6bf:	push   DWORD PTR [ebp+0x14]
1001f6c2:	mov    DWORD PTR [ebp+0x8],esi
1001f6c5:	push   DWORD PTR [ebp+0x14]
1001f6c8:	mov    eax,DWORD PTR [edx]
1001f6ca:	push   DWORD PTR [ebp+0x10]
1001f6cd:	push   DWORD PTR [ebp+0xc]
1001f6d0:	push   edx
1001f6d1:	call   DWORD PTR [eax+0x10]
1001f6d4:	push   DWORD PTR [ebp+0x8]
1001f6d7:	mov    edi,eax
1001f6d9:	call   DWORD PTR ds:0x100662b4
1001f6df:	cmp    edi,esi
1001f6e1:	pop    edi
1001f6e2:	jl     0x1001f6e9
1001f6e4:	xor    eax,eax
1001f6e6:	inc    eax
1001f6e7:	jmp    0x1001f6eb
1001f6e9:	xor    eax,eax
1001f6eb:	neg    eax
1001f6ed:	sbb    eax,eax
1001f6ef:	and    eax,0x7fffbffb
1001f6f4:	add    eax,0x80004005
1001f6f9:	pop    esi
1001f6fa:	leave  
1001f6fb:	ret    0x14
1001f6fe:	call   DWORD PTR ds:0x1007efec
1001f704:	push   0x0
1001f706:	push   0x1006d1c8
1001f70b:	push   DWORD PTR [esp+0x10]
1001f70f:	push   0x0
1001f711:	call   DWORD PTR ds:0x10066328
1001f717:	xor    eax,eax
1001f719:	ret    0x8
1001f71c:	push   ebp
1001f71d:	mov    ebp,esp
1001f71f:	push   DWORD PTR [ebp+0x18]
1001f722:	mov    ecx,DWORD PTR [ebp+0x8]
1001f725:	push   DWORD PTR [ebp+0x14]
1001f728:	add    ecx,0xffffffe4
1001f72b:	push   DWORD PTR [ebp+0x10]
1001f72e:	push   DWORD PTR [ebp+0xc]
1001f731:	call   0x100206fc
1001f736:	pop    ebp
1001f737:	ret    0x14
1001f73a:	push   ebp
1001f73b:	sub    esp,0x70
1001f73e:	lea    ebp,[esp-0x4]
1001f742:	mov    eax,ds:0x1007e030
1001f747:	xor    eax,ebp
1001f749:	mov    DWORD PTR [ebp+0x70],eax
1001f74c:	push   0xe4
1001f751:	mov    eax,0x10062c2e
1001f756:	call   0x10059ca8
1001f75b:	mov    eax,DWORD PTR [ebp+0x84]
1001f761:	mov    esi,DWORD PTR [ebp+0x80]
1001f767:	mov    DWORD PTR [ebp-0x18],eax
1001f76a:	mov    eax,DWORD PTR [ebp+0x88]
1001f770:	mov    DWORD PTR [ebp-0x24],eax
1001f773:	mov    eax,DWORD PTR [ebp+0x8c]
1001f779:	xor    edi,edi
1001f77b:	mov    DWORD PTR [ebp-0x1c],eax
1001f77e:	lea    eax,[ebp-0x2c]
1001f781:	push   edi
1001f782:	push   eax
1001f783:	mov    DWORD PTR [ebp-0x4],edi
1001f786:	call   0x10002892
1001f78b:	pop    ecx
1001f78c:	pop    ecx
1001f78d:	mov    ecx,DWORD PTR [eax]
1001f78f:	mov    DWORD PTR [eax],edi
1001f791:	mov    DWORD PTR [ebp-0x30],ecx
1001f794:	lea    eax,[ebp-0x2c]
1001f797:	mov    BYTE PTR [ebp-0x4],0x1
1001f79b:	call   0x100042aa
1001f7a0:	call   DWORD PTR ds:0x1007efec
1001f7a6:	cmp    esi,edi
1001f7a8:	mov    ebx,DWORD PTR ds:0x100660c4
1001f7ae:	mov    DWORD PTR [ebp-0x14],eax
1001f7b1:	je     0x1001f7be
1001f7b3:	push   esi
1001f7b4:	call   ebx
1001f7b6:	inc    eax
1001f7b7:	cmp    eax,0x3fffffff
1001f7bc:	jle    0x1001f7c2
1001f7be:	xor    eax,eax
1001f7c0:	jmp    0x1001f7dd
1001f7c2:	lea    edi,[eax+eax*1]
1001f7c5:	mov    eax,edi
1001f7c7:	call   0x1004b990
1001f7cc:	mov    eax,esp
1001f7ce:	mov    DWORD PTR [ebp-0x10],esp
1001f7d1:	push   DWORD PTR [ebp-0x14]
1001f7d4:	push   edi
1001f7d5:	push   esi
1001f7d6:	mov    esi,eax
1001f7d8:	call   0x1000241c
1001f7dd:	push   eax
1001f7de:	lea    ecx,[ebp+0x54]
1001f7e1:	call   0x100011d1
1001f7e6:	cmp    DWORD PTR [ebp-0x18],0x0
1001f7ea:	mov    BYTE PTR [ebp-0x4],0x2
1001f7ee:	je     0x1001f7fd
1001f7f0:	push   DWORD PTR [ebp-0x18]
1001f7f3:	call   ebx
1001f7f5:	inc    eax
1001f7f6:	cmp    eax,0x3fffffff
1001f7fb:	jle    0x1001f801
1001f7fd:	xor    eax,eax
1001f7ff:	jmp    0x1001f81c
1001f801:	lea    edi,[eax+eax*1]
1001f804:	mov    eax,edi
1001f806:	call   0x1004b990
1001f80b:	mov    DWORD PTR [ebp-0x10],esp
1001f80e:	mov    esi,esp
1001f810:	push   DWORD PTR [ebp-0x14]
1001f813:	push   edi
1001f814:	push   DWORD PTR [ebp-0x18]
1001f817:	call   0x1000241c
1001f81c:	push   eax
1001f81d:	lea    ecx,[ebp+0x1c]
1001f820:	call   0x100011d1
1001f825:	mov    BYTE PTR [ebp-0x4],0x3
1001f829:	cmp    DWORD PTR [ebp-0x24],0x0
1001f82d:	je     0x1001f83c
1001f82f:	push   DWORD PTR [ebp-0x24]
1001f832:	call   ebx
1001f834:	inc    eax
1001f835:	cmp    eax,0x3fffffff
1001f83a:	jle    0x1001f840
1001f83c:	xor    eax,eax
1001f83e:	jmp    0x1001f85b
1001f840:	lea    edi,[eax+eax*1]
1001f843:	mov    eax,edi
1001f845:	call   0x1004b990
1001f84a:	mov    DWORD PTR [ebp-0x10],esp
1001f84d:	mov    esi,esp
1001f84f:	push   DWORD PTR [ebp-0x14]
1001f852:	push   edi
1001f853:	push   DWORD PTR [ebp-0x24]
1001f856:	call   0x1000241c
1001f85b:	push   eax
1001f85c:	lea    ecx,[ebp+0x0]
1001f85f:	call   0x100011d1
1001f864:	mov    BYTE PTR [ebp-0x4],0x4
1001f868:	cmp    DWORD PTR [ebp-0x1c],0x0
1001f86c:	je     0x1001f87b
1001f86e:	push   DWORD PTR [ebp-0x1c]
1001f871:	call   ebx
1001f873:	inc    eax
1001f874:	cmp    eax,0x3fffffff
1001f879:	jle    0x1001f87f
1001f87b:	xor    eax,eax
1001f87d:	jmp    0x1001f89a
1001f87f:	lea    edi,[eax+eax*1]
1001f882:	mov    eax,edi
1001f884:	call   0x1004b990
1001f889:	mov    DWORD PTR [ebp-0x10],esp
1001f88c:	mov    esi,esp
1001f88e:	push   DWORD PTR [ebp-0x14]
1001f891:	push   edi
1001f892:	push   DWORD PTR [ebp-0x1c]
1001f895:	call   0x1000241c
1001f89a:	push   eax
1001f89b:	lea    ecx,[ebp+0x38]
1001f89e:	call   0x100011d1
1001f8a3:	fld    QWORD PTR [ebp+0x94]
1001f8a9:	mov    BYTE PTR [ebp-0x4],0x5
1001f8ad:	call   0x1005f6c6
1001f8b2:	push   0x0
1001f8b4:	mov    esi,0x2710
1001f8b9:	push   esi
1001f8ba:	push   edx
1001f8bb:	push   eax
1001f8bc:	call   0x1004f6a0
1001f8c1:	fld    QWORD PTR [ebp+0x9c]
1001f8c7:	mov    DWORD PTR [ebp-0x28],eax
1001f8ca:	mov    DWORD PTR [ebp-0x24],edx
1001f8cd:	call   0x1005f6c6
1001f8d2:	push   0x0
1001f8d4:	push   esi
1001f8d5:	push   edx
1001f8d6:	push   eax
1001f8d7:	call   0x1004f6a0
1001f8dc:	push   ecx
1001f8dd:	mov    ecx,DWORD PTR [ebp+0x90]
1001f8e3:	mov    DWORD PTR [ebp-0x20],eax
1001f8e6:	mov    eax,esp
1001f8e8:	mov    DWORD PTR [eax],ecx
1001f8ea:	mov    DWORD PTR [ebp-0x2c],esp
1001f8ed:	lea    eax,[ebp+0x38]
1001f8f0:	push   eax
1001f8f1:	lea    eax,[ebp+0x0]
1001f8f4:	push   eax
1001f8f5:	lea    eax,[ebp+0x1c]
1001f8f8:	push   eax
1001f8f9:	lea    eax,[ebp+0x54]
1001f8fc:	push   eax
1001f8fd:	lea    eax,[ebp-0xf0]
1001f903:	lea    edi,[ebp-0x20]
1001f906:	lea    ebx,[ebp-0x28]
1001f909:	push   eax
1001f90a:	mov    DWORD PTR [ebp-0x1c],edx
1001f90d:	call   0x1000279c
1001f912:	mov    edi,eax
1001f914:	lea    eax,[ebp+0x54]
1001f917:	push   eax
1001f918:	lea    esi,[ebp-0x68]
1001f91b:	mov    BYTE PTR [ebp-0x4],0x6
1001f91f:	call   0x10030580
1001f924:	pop    ecx
1001f925:	lea    ecx,[ebp-0x4c]
1001f928:	push   ecx
1001f929:	mov    ecx,eax
1001f92b:	mov    BYTE PTR [ebp-0x4],0x7
1001f92f:	call   0x1002fce0
1001f934:	pop    ecx
1001f935:	push   edi
1001f936:	mov    edx,eax
1001f938:	mov    ecx,0x10080e54
1001f93d:	mov    BYTE PTR [ebp-0x4],0x8
1001f941:	call   0x100130a1
1001f946:	xor    ebx,ebx
1001f948:	xor    edi,edi
1001f94a:	push   ebx
1001f94b:	inc    edi
1001f94c:	push   edi
1001f94d:	lea    ecx,[ebp-0x4c]
1001f950:	call   0x100012f4
1001f955:	push   ebx
1001f956:	push   edi
1001f957:	mov    ecx,esi
1001f959:	call   0x100012f4
1001f95e:	lea    esi,[ebp-0xf0]
1001f964:	call   0x10003431
1001f969:	push   ebx
1001f96a:	push   edi
1001f96b:	lea    ecx,[ebp+0x38]
1001f96e:	call   0x100012f4
1001f973:	push   ebx
1001f974:	push   edi
1001f975:	lea    ecx,[ebp+0x0]
1001f978:	call   0x100012f4
1001f97d:	push   ebx
1001f97e:	push   edi
1001f97f:	lea    ecx,[ebp+0x1c]
1001f982:	call   0x100012f4
1001f987:	push   ebx
1001f988:	push   edi
1001f989:	lea    ecx,[ebp+0x54]
1001f98c:	call   0x100012f4
1001f991:	lea    eax,[ebp-0x30]
1001f994:	call   0x100042aa
1001f999:	xor    eax,eax
1001f99b:	lea    esp,[ebp-0x100]
1001f9a1:	mov    ecx,DWORD PTR [ebp-0xc]
1001f9a4:	mov    DWORD PTR fs:0x0,ecx
1001f9ab:	pop    ecx
1001f9ac:	pop    edi
1001f9ad:	pop    esi
1001f9ae:	pop    ebx
1001f9af:	mov    ecx,DWORD PTR [ebp+0x70]
1001f9b2:	xor    ecx,ebp
1001f9b4:	call   0x100430d7
1001f9b9:	add    ebp,0x74
1001f9bc:	leave  
1001f9bd:	ret    0x28
1001f9c0:	mov    eax,0x1001f9c6
1001f9c5:	ret    
1001f9c6:	jmp    0x1001f999
1001f9c8:	push   0x4
1001f9ca:	call   0x10037b70
1001f9cf:	pop    ecx
1001f9d0:	mov    eax,0x1001f999
1001f9d5:	ret    
1001f9d6:	push   0x48
1001f9d8:	mov    eax,0x10061dbe
1001f9dd:	call   0x10059d14
1001f9e2:	mov    eax,DWORD PTR [ebp+0x10]
1001f9e5:	mov    esi,DWORD PTR [ebp+0xc]
1001f9e8:	and    DWORD PTR [ebp-0x4],0x0
1001f9ec:	mov    DWORD PTR [ebp-0x50],eax
1001f9ef:	push   0x1
1001f9f1:	lea    eax,[ebp-0x54]
1001f9f4:	push   eax
1001f9f5:	call   0x10034bf0
1001f9fa:	mov    BYTE PTR [ebp-0x4],0x1
1001f9fe:	call   DWORD PTR ds:0x1007efec
1001fa04:	test   esi,esi
1001fa06:	mov    ebx,eax
1001fa08:	je     0x1001fa19
1001fa0a:	push   esi
1001fa0b:	call   DWORD PTR ds:0x100660c4
1001fa11:	inc    eax
1001fa12:	cmp    eax,0x3fffffff
1001fa17:	jle    0x1001fa1d
1001fa19:	xor    eax,eax
1001fa1b:	jmp    0x1001fa36
1001fa1d:	lea    edi,[eax+eax*1]
1001fa20:	mov    eax,edi
1001fa22:	call   0x1004b990
1001fa27:	mov    eax,esp
1001fa29:	mov    DWORD PTR [ebp-0x10],esp
1001fa2c:	push   ebx
1001fa2d:	push   edi
1001fa2e:	push   esi
1001fa2f:	mov    esi,eax
1001fa31:	call   0x1000241c
1001fa36:	push   eax
1001fa37:	lea    ecx,[ebp-0x4c]
1001fa3a:	call   0x100011d1
1001fa3f:	cmp    DWORD PTR [ebp-0x50],0x0
1001fa43:	mov    BYTE PTR [ebp-0x4],0x2
1001fa47:	je     0x1001fa5a
1001fa49:	push   DWORD PTR [ebp-0x50]
1001fa4c:	call   DWORD PTR ds:0x100660c4
1001fa52:	inc    eax
1001fa53:	cmp    eax,0x3fffffff
1001fa58:	jle    0x1001fa5e
1001fa5a:	xor    eax,eax
1001fa5c:	jmp    0x1001fa77
1001fa5e:	lea    edi,[eax+eax*1]
1001fa61:	mov    eax,edi
1001fa63:	call   0x1004b990
1001fa68:	mov    DWORD PTR [ebp-0x10],esp
1001fa6b:	mov    esi,esp
1001fa6d:	push   ebx
1001fa6e:	push   edi
1001fa6f:	push   DWORD PTR [ebp-0x50]
1001fa72:	call   0x1000241c
1001fa77:	push   eax
1001fa78:	lea    ecx,[ebp-0x30]
1001fa7b:	call   0x100011d1
1001fa80:	lea    eax,[ebp-0x30]
1001fa83:	push   eax
1001fa84:	lea    eax,[ebp-0x54]
1001fa87:	push   eax
1001fa88:	lea    ecx,[ebp-0x4c]
1001fa8b:	mov    BYTE PTR [ebp-0x4],0x3
1001fa8f:	call   0x10035790
1001fa94:	push   0x0
1001fa96:	push   0x1
1001fa98:	lea    ecx,[ebp-0x30]
1001fa9b:	call   0x100012f4
1001faa0:	push   0x0
1001faa2:	push   0x1
1001faa4:	lea    ecx,[ebp-0x4c]
1001faa7:	call   0x100012f4
1001faac:	push   DWORD PTR [ebp-0x54]
1001faaf:	call   DWORD PTR ds:0x10066070
1001fab5:	xor    eax,eax
1001fab7:	jmp    0x1001fac4
1001fab9:	mov    eax,0x1001fabf
1001fabe:	ret    
1001fabf:	mov    eax,0x80004005
1001fac4:	lea    esp,[ebp-0x64]
1001fac7:	call   0x10059d70
1001facc:	ret    0xc
1001facf:	push   0x48
1001fad1:	mov    eax,0x10061d81
1001fad6:	call   0x10059d14
1001fadb:	and    DWORD PTR [ebp-0x4],0x0
1001fadf:	push   0x1
1001fae1:	lea    eax,[ebp-0x18]
1001fae4:	push   eax
1001fae5:	call   0x10034bf0
1001faea:	mov    BYTE PTR [ebp-0x4],0x1
1001faee:	call   DWORD PTR ds:0x1007efec
1001faf4:	cmp    DWORD PTR [ebp+0xc],0x0
1001faf8:	mov    ebx,eax
1001fafa:	je     0x1001fb0d
1001fafc:	push   DWORD PTR [ebp+0xc]
1001faff:	call   DWORD PTR ds:0x100660c4
1001fb05:	inc    eax
1001fb06:	cmp    eax,0x3fffffff
1001fb0b:	jle    0x1001fb11
1001fb0d:	xor    eax,eax
1001fb0f:	jmp    0x1001fb2a
1001fb11:	lea    edi,[eax+eax*1]
1001fb14:	mov    eax,edi
1001fb16:	call   0x1004b990
1001fb1b:	mov    DWORD PTR [ebp-0x10],esp
1001fb1e:	mov    esi,esp
1001fb20:	push   ebx
1001fb21:	push   edi
1001fb22:	push   DWORD PTR [ebp+0xc]
1001fb25:	call   0x1000241c
1001fb2a:	push   eax
1001fb2b:	lea    ecx,[ebp-0x38]
1001fb2e:	call   0x100011d1
1001fb33:	lea    eax,[ebp-0x38]
1001fb36:	push   eax
1001fb37:	lea    eax,[ebp-0x54]
1001fb3a:	push   eax
1001fb3b:	lea    eax,[ebp-0x18]
1001fb3e:	push   eax
1001fb3f:	mov    BYTE PTR [ebp-0x4],0x2
1001fb43:	call   0x10035940
1001fb48:	mov    BYTE PTR [ebp-0x4],0x3
1001fb4c:	cmp    DWORD PTR [eax+0x18],0x10
1001fb50:	jb     0x1001fb57
1001fb52:	mov    eax,DWORD PTR [eax+0x4]
1001fb55:	jmp    0x1001fb5a
1001fb57:	add    eax,0x4
1001fb5a:	push   eax
1001fb5b:	lea    edi,[ebp-0x1c]
1001fb5e:	call   0x1000244f
1001fb63:	mov    BYTE PTR [ebp-0x4],0x4
1001fb67:	call   0x100120eb
1001fb6c:	mov    ecx,DWORD PTR [ebp+0x10]
1001fb6f:	mov    DWORD PTR [ecx],eax
1001fb71:	call   0x100025aa
1001fb76:	push   0x0
1001fb78:	push   0x1
1001fb7a:	lea    ecx,[ebp-0x54]
1001fb7d:	call   0x100012f4
1001fb82:	push   0x0
1001fb84:	push   0x1
1001fb86:	lea    ecx,[ebp-0x38]
1001fb89:	call   0x100012f4
1001fb8e:	push   DWORD PTR [ebp-0x18]
1001fb91:	call   DWORD PTR ds:0x10066070
1001fb97:	xor    eax,eax
1001fb99:	jmp    0x1001fba6
1001fb9b:	mov    eax,0x1001fba1
1001fba0:	ret    
1001fba1:	mov    eax,0x80004005
1001fba6:	lea    esp,[ebp-0x64]
1001fba9:	call   0x10059d70
1001fbae:	ret    0xc
1001fbb1:	push   ebp
1001fbb2:	sub    esp,0xcc
1001fbb8:	lea    ebp,[esp-0x4]
1001fbbc:	mov    eax,ds:0x1007e030
1001fbc1:	xor    eax,ebp
1001fbc3:	mov    DWORD PTR [ebp+0xcc],eax
1001fbc9:	push   0x3c
1001fbcb:	mov    eax,0x10064e7c
1001fbd0:	call   0x10059ca8
1001fbd5:	mov    eax,DWORD PTR [ebp+0xe4]
1001fbdb:	mov    ebx,DWORD PTR [ebp+0xe0]
1001fbe1:	mov    DWORD PTR [ebp-0x14],eax
1001fbe4:	mov    eax,DWORD PTR [ebp+0xec]
1001fbea:	mov    DWORD PTR [ebp-0x20],eax
1001fbed:	call   DWORD PTR ds:0x1007efec
1001fbf3:	xor    esi,esi
1001fbf5:	cmp    DWORD PTR [ebp+0xe8],esi
1001fbfb:	mov    DWORD PTR [ebp-0x1c],eax
1001fbfe:	jne    0x1001fc0a
1001fc00:	mov    DWORD PTR [ebp+0xe8],0x7d0
1001fc0a:	cmp    WORD PTR [ebp+0xdc],0xffff
1001fc12:	jne    0x1001fd68
1001fc18:	cmp    ebx,esi
1001fc1a:	mov    DWORD PTR [ebp-0x4],esi
1001fc1d:	mov    DWORD PTR [ebp-0x14],esi
1001fc20:	je     0x1001fc31
1001fc22:	push   ebx
1001fc23:	call   DWORD PTR ds:0x100660c4
1001fc29:	inc    eax
1001fc2a:	cmp    eax,0x3fffffff
1001fc2f:	jle    0x1001fc35
1001fc31:	xor    eax,eax
1001fc33:	jmp    0x1001fc4e
1001fc35:	lea    edi,[eax+eax*1]
1001fc38:	mov    eax,edi
1001fc3a:	call   0x1004b990
1001fc3f:	mov    DWORD PTR [ebp-0x10],esp
1001fc42:	mov    esi,esp
1001fc44:	push   DWORD PTR [ebp-0x1c]
1001fc47:	push   edi
1001fc48:	push   ebx
1001fc49:	call   0x1000241c
1001fc4e:	push   eax
1001fc4f:	lea    ecx,[ebp+0xb0]
1001fc55:	call   0x100011d1
1001fc5a:	lea    ecx,[ebp-0x48]
1001fc5d:	mov    BYTE PTR [ebp-0x4],0x1
1001fc61:	call   0x10018612
1001fc66:	push   DWORD PTR [ebp+0xe8]
1001fc6c:	lea    ecx,[ebp-0x14]
1001fc6f:	push   ecx
1001fc70:	lea    ecx,[ebp+0xb0]
1001fc76:	push   ecx
1001fc77:	push   eax
1001fc78:	lea    esi,[ebp-0x18]
1001fc7b:	mov    BYTE PTR [ebp-0x4],0x2
1001fc7f:	call   0x10030fa0
1001fc84:	mov    ecx,DWORD PTR [eax]
1001fc86:	mov    ebx,ecx
1001fc88:	xor    esi,esi
1001fc8a:	add    esp,0x10
1001fc8d:	mov    DWORD PTR [eax],esi
1001fc8f:	mov    DWORD PTR [ebp-0x1c],ebx
1001fc92:	push   DWORD PTR [ebp-0x18]
1001fc95:	call   0x100430d2
1001fc9a:	pop    ecx
1001fc9b:	push   esi
1001fc9c:	push   0x1
1001fc9e:	lea    ecx,[ebp-0x48]
1001fca1:	call   0x100012f4
1001fca6:	push   esi
1001fca7:	push   0x1
1001fca9:	lea    ecx,[ebp+0xb0]
1001fcaf:	mov    BYTE PTR [ebp-0x4],0x5
1001fcb3:	call   0x100012f4
1001fcb8:	mov    eax,DWORD PTR [ebp-0x14]
1001fcbb:	mov    DWORD PTR [ebp-0x2c],esi
1001fcbe:	lea    edi,[ebp+0x94]
1001fcc4:	lea    esi,[ebp-0x2c]
1001fcc7:	mov    DWORD PTR [ebp-0x28],eax
1001fcca:	mov    DWORD PTR [ebp-0x24],ebx
1001fccd:	call   0x100377c0
1001fcd2:	mov    BYTE PTR [ebp-0x4],0x6
1001fcd6:	cmp    DWORD PTR [eax+0x18],0x10
1001fcda:	jb     0x1001fce1
1001fcdc:	mov    eax,DWORD PTR [eax+0x4]
1001fcdf:	jmp    0x1001fce4
1001fce1:	add    eax,0x4
1001fce4:	push   eax
1001fce5:	lea    edi,[ebp-0x14]
1001fce8:	call   0x1000244f
1001fced:	mov    BYTE PTR [ebp-0x4],0x7
1001fcf1:	call   0x100120eb
1001fcf6:	mov    ecx,DWORD PTR [ebp-0x20]
1001fcf9:	mov    DWORD PTR [ecx],eax
1001fcfb:	call   0x100025aa
1001fd00:	push   0x0
1001fd02:	push   0x1
1001fd04:	lea    ecx,[ebp+0x94]
1001fd0a:	call   0x100012f4
1001fd0f:	push   ebx
1001fd10:	call   0x100430d2
1001fd15:	pop    ecx
1001fd16:	xor    eax,eax
1001fd18:	lea    esp,[ebp-0x58]
1001fd1b:	mov    ecx,DWORD PTR [ebp-0xc]
1001fd1e:	mov    DWORD PTR fs:0x0,ecx
1001fd25:	pop    ecx
1001fd26:	pop    edi
1001fd27:	pop    esi
1001fd28:	pop    ebx
1001fd29:	mov    ecx,DWORD PTR [ebp+0xcc]
1001fd2f:	xor    ecx,ebp
1001fd31:	call   0x100430d7
1001fd36:	add    ebp,0xd0
1001fd3c:	leave  
1001fd3d:	ret    0x18
1001fd40:	mov    eax,0x1001fd46
1001fd45:	ret    
1001fd46:	and    DWORD PTR [ebp-0x14],0x0
1001fd4a:	lea    eax,[ebp-0x14]
1001fd4d:	mov    DWORD PTR [ebp-0x4],0x9
1001fd54:	call   0x100120eb
1001fd59:	mov    ecx,DWORD PTR [ebp-0x20]
1001fd5c:	lea    edi,[ebp-0x14]
1001fd5f:	mov    DWORD PTR [ecx],eax
1001fd61:	call   0x100025aa
1001fd66:	jmp    0x1001fd16
1001fd68:	lea    edi,[ebp+0x0]
1001fd6b:	call   0x1000bdef
1001fd70:	cmp    ebx,esi
1001fd72:	mov    DWORD PTR [ebp-0x4],0xa
1001fd79:	je     0x1001fd8a
1001fd7b:	push   ebx
1001fd7c:	call   DWORD PTR ds:0x100660c4
1001fd82:	inc    eax
1001fd83:	cmp    eax,0x3fffffff
1001fd88:	jle    0x1001fd8e
1001fd8a:	xor    eax,eax
1001fd8c:	jmp    0x1001fda7
1001fd8e:	lea    edi,[eax+eax*1]
1001fd91:	mov    eax,edi
1001fd93:	call   0x1004b990
1001fd98:	mov    DWORD PTR [ebp-0x10],esp
1001fd9b:	mov    esi,esp
1001fd9d:	push   DWORD PTR [ebp-0x1c]
1001fda0:	push   edi
1001fda1:	push   ebx
1001fda2:	call   0x1000241c
1001fda7:	push   eax
1001fda8:	lea    ecx,[ebp+0xb0]
1001fdae:	call   0x100011d1
1001fdb3:	lea    eax,[ebp+0x0]
1001fdb6:	push   eax
1001fdb7:	lea    ecx,[ebp+0xb0]
1001fdbd:	mov    BYTE PTR [ebp-0x4],0xb
1001fdc1:	call   0x10032d80
1001fdc6:	mov    bl,al
1001fdc8:	neg    bl
1001fdca:	pop    ecx
1001fdcb:	sbb    bl,bl
1001fdcd:	xor    edi,edi
1001fdcf:	push   edi
1001fdd0:	push   0x1
1001fdd2:	lea    ecx,[ebp+0xb0]
1001fdd8:	inc    bl
1001fdda:	mov    BYTE PTR [ebp-0x4],0xa
1001fdde:	call   0x100012f4
1001fde3:	test   bl,bl
1001fde5:	je     0x1001fdfb
1001fde7:	mov    edi,0x80004005
1001fdec:	lea    esi,[ebp+0x0]
1001fdef:	call   0x1000be1c
1001fdf4:	mov    eax,edi
1001fdf6:	jmp    0x1001fd18
1001fdfb:	cmp    DWORD PTR [ebp-0x14],edi
1001fdfe:	mov    DWORD PTR [ebp-0x18],edi
1001fe01:	je     0x1001fe14
1001fe03:	push   DWORD PTR [ebp-0x14]
1001fe06:	call   DWORD PTR ds:0x100660c4
1001fe0c:	inc    eax
1001fe0d:	cmp    eax,0x3fffffff
1001fe12:	jle    0x1001fe18
1001fe14:	xor    eax,eax
1001fe16:	jmp    0x1001fe33
1001fe18:	lea    ebx,[eax+eax*1]
1001fe1b:	mov    eax,ebx
1001fe1d:	call   0x1004b990
1001fe22:	mov    DWORD PTR [ebp-0x10],esp
1001fe25:	mov    esi,esp
1001fe27:	push   DWORD PTR [ebp-0x1c]
1001fe2a:	push   ebx
1001fe2b:	push   DWORD PTR [ebp-0x14]
1001fe2e:	call   0x1000241c
1001fe33:	push   eax
1001fe34:	lea    ecx,[ebp+0x94]
1001fe3a:	call   0x100011d1
1001fe3f:	push   DWORD PTR [ebp+0xe8]
1001fe45:	lea    eax,[ebp-0x18]
1001fe48:	push   eax
1001fe49:	push   edi
1001fe4a:	push   edi
1001fe4b:	lea    eax,[ebp+0x94]
1001fe51:	push   eax
1001fe52:	lea    eax,[ebp+0x5c]
1001fe55:	push   eax
1001fe56:	mov    BYTE PTR [ebp-0x4],0xc
1001fe5a:	push   DWORD PTR [ebp+0x20]
1001fe5d:	lea    eax,[ebp+0x4]
1001fe60:	push   eax
1001fe61:	lea    eax,[ebp-0x14]
1001fe64:	push   eax
1001fe65:	call   0x100328a0
1001fe6a:	mov    ecx,DWORD PTR [eax]
1001fe6c:	mov    ebx,ecx
1001fe6e:	mov    DWORD PTR [eax],edi
1001fe70:	mov    DWORD PTR [ebp-0x1c],ebx
1001fe73:	mov    BYTE PTR [ebp-0x4],0xd
1001fe77:	push   DWORD PTR [ebp-0x14]
1001fe7a:	call   0x100430d2
1001fe7f:	add    esp,0x28
1001fe82:	cmp    ebx,edi
1001fe84:	je     0x1001fef4
1001fe86:	push   DWORD PTR [ebp-0x18]
1001fe89:	lea    esi,[ebp+0xb0]
1001fe8f:	push   ebx
1001fe90:	call   0x100040fc
1001fe95:	mov    BYTE PTR [ebp-0x4],0xe
1001fe99:	cmp    DWORD PTR [ebp+0xc8],0x10
1001fea0:	mov    eax,DWORD PTR [ebp+0xb4]
1001fea6:	jae    0x1001feae
1001fea8:	lea    eax,[ebp+0xb4]
1001feae:	push   eax
1001feaf:	lea    edi,[ebp-0x18]
1001feb2:	call   0x1000244f
1001feb7:	mov    BYTE PTR [ebp-0x4],0xf
1001febb:	call   0x100120eb
1001fec0:	mov    ecx,DWORD PTR [ebp-0x20]
1001fec3:	mov    DWORD PTR [ecx],eax
1001fec5:	call   0x100025aa
1001feca:	xor    edi,edi
1001fecc:	push   edi
1001fecd:	push   0x1
1001fecf:	lea    ecx,[ebp+0xb0]
1001fed5:	call   0x100012f4
1001feda:	push   ebx
1001fedb:	call   0x100430d2
1001fee0:	pop    ecx
1001fee1:	push   edi
1001fee2:	push   0x1
1001fee4:	lea    ecx,[ebp+0x94]
1001feea:	call   0x100012f4
1001feef:	jmp    0x1001fdec
1001fef4:	mov    DWORD PTR [ebp-0x18],edi
1001fef7:	lea    eax,[ebp-0x18]
1001fefa:	mov    BYTE PTR [ebp-0x4],0x10
1001fefe:	call   0x100120eb
1001ff03:	mov    ecx,DWORD PTR [ebp-0x20]
1001ff06:	lea    edi,[ebp-0x18]
1001ff09:	mov    DWORD PTR [ecx],eax
1001ff0b:	call   0x100025aa
1001ff10:	push   0x0
1001ff12:	call   0x100430d2
1001ff17:	pop    ecx
1001ff18:	push   0x0
1001ff1a:	push   0x1
1001ff1c:	lea    ecx,[ebp+0x94]
1001ff22:	call   0x100012f4
1001ff27:	jmp    0x1001fde7
1001ff2c:	mov    ecx,DWORD PTR [esp+0x8]
1001ff30:	test   ecx,ecx
1001ff32:	mov    eax,DWORD PTR [esp+0x4]
1001ff36:	jne    0x1001ff3f
1001ff38:	mov    eax,0x80004003
1001ff3d:	jmp    0x1001ff53
1001ff3f:	mov    edx,DWORD PTR [eax-0x10]
1001ff42:	mov    DWORD PTR [ecx],edx
1001ff44:	mov    eax,DWORD PTR [eax-0x10]
1001ff47:	test   eax,eax
1001ff49:	je     0x1001ff51
1001ff4b:	mov    ecx,DWORD PTR [eax]
1001ff4d:	push   eax
1001ff4e:	call   DWORD PTR [ecx+0x4]
1001ff51:	xor    eax,eax
1001ff53:	ret    0x8
1001ff56:	push   DWORD PTR [esp+0x8]
1001ff5a:	call   DWORD PTR ds:0x10066160
1001ff60:	push   eax
1001ff61:	call   0x1001f18b
1001ff66:	pop    ecx
1001ff67:	pop    ecx
1001ff68:	xor    eax,eax
1001ff6a:	ret    0x8
1001ff6d:	mov    eax,DWORD PTR [esi+0x4]
1001ff70:	mov    ecx,DWORD PTR [esi+0x8]
1001ff73:	cmp    eax,ecx
1001ff75:	push   edi
1001ff76:	jne    0x1001ffa6
1001ff78:	test   ecx,ecx
1001ff7a:	jne    0x1001ff81
1001ff7c:	xor    edi,edi
1001ff7e:	inc    edi
1001ff7f:	jmp    0x1001ff90
1001ff81:	lea    edi,[eax+eax*1]
1001ff84:	test   edi,edi
1001ff86:	jl     0x1001ffc6
1001ff88:	cmp    edi,0x3fffffff
1001ff8e:	ja     0x1001ffc6
1001ff90:	push   0x2
1001ff92:	push   edi
1001ff93:	push   DWORD PTR [esi]
1001ff95:	call   0x10046663
1001ff9a:	add    esp,0xc
1001ff9d:	test   eax,eax
1001ff9f:	je     0x1001ffc6
1001ffa1:	mov    DWORD PTR [esi+0x8],edi
1001ffa4:	mov    DWORD PTR [esi],eax
1001ffa6:	mov    eax,DWORD PTR [esi+0x4]
1001ffa9:	mov    ecx,DWORD PTR [esi]
1001ffab:	lea    eax,[ecx+eax*2]
1001ffae:	test   eax,eax
1001ffb0:	je     0x1001ffbc
1001ffb2:	mov    ecx,DWORD PTR [esp+0x8]
1001ffb6:	mov    cx,WORD PTR [ecx]
1001ffb9:	mov    WORD PTR [eax],cx
1001ffbc:	inc    DWORD PTR [esi+0x4]
1001ffbf:	xor    eax,eax
1001ffc1:	inc    eax
1001ffc2:	pop    edi
1001ffc3:	ret    0x4
1001ffc6:	xor    eax,eax
1001ffc8:	jmp    0x1001ffc2
1001ffca:	mov    eax,DWORD PTR [esp+0x8]
1001ffce:	push   esi
1001ffcf:	xor    esi,esi
1001ffd1:	cmp    eax,esi
1001ffd3:	push   edi
1001ffd4:	jne    0x1001ffdb
1001ffd6:	mov    eax,0x1007f814
1001ffdb:	mov    ecx,DWORD PTR [eax+0x4]
1001ffde:	mov    edi,DWORD PTR [eax+0xc]
1001ffe1:	mov    edx,DWORD PTR [eax]
1001ffe3:	mov    eax,DWORD PTR [eax+0x8]
1001ffe6:	push   esi
1001ffe7:	push   DWORD PTR ds:0x10080a04
1001ffed:	sub    edi,ecx
1001ffef:	push   DWORD PTR [esp+0x1c]
1001fff3:	sub    eax,edx
1001fff5:	push   esi
1001fff6:	push   edi
1001fff7:	push   eax
1001fff8:	push   ecx
1001fff9:	push   edx
1001fffa:	push   esi
1001fffb:	push   esi
1001fffc:	push   0x10070574
10020001:	push   esi
10020002:	call   DWORD PTR ds:0x10066324
10020008:	mov    ecx,DWORD PTR [esp+0xc]
1002000c:	pop    edi
1002000d:	mov    DWORD PTR [ecx],eax
1002000f:	pop    esi
10020010:	ret    0xc
10020013:	push   0x0
10020015:	mov    eax,0x1005f85a
1002001a:	call   0x10059c75
1002001f:	xor    ecx,ecx
10020021:	cmp    ebx,ecx
10020023:	jne    0x1002002c
10020025:	mov    eax,0x80004003
1002002a:	jmp    0x10020079
1002002c:	mov    DWORD PTR [ebx],ecx
1002002e:	push   ecx
1002002f:	mov    DWORD PTR [ebp-0x4],ecx
10020032:	mov    eax,DWORD PTR [ebp+0x8]
10020035:	mov    eax,DWORD PTR [eax]
10020037:	push   ecx
10020038:	push   DWORD PTR ds:0x10080fd8
1002003e:	push   eax
1002003f:	call   DWORD PTR ds:0x10066330
10020045:	mov    edi,eax
10020047:	mov    esi,edi
10020049:	neg    esi
1002004b:	sbb    esi,esi
1002004d:	and    esi,0x7fffbffb
10020053:	add    esi,0x80004005
10020059:	mov    DWORD PTR [ebp+0x8],edi
1002005c:	js     0x10020069
1002005e:	mov    eax,DWORD PTR [edi]
10020060:	push   ebx
10020061:	push   DWORD PTR [ebp+0xc]
10020064:	push   edi
10020065:	call   DWORD PTR [eax]
10020067:	mov    esi,eax
10020069:	or     DWORD PTR [ebp-0x4],0xffffffff
1002006d:	test   edi,edi
1002006f:	je     0x10020077
10020071:	mov    eax,DWORD PTR [edi]
10020073:	push   edi
10020074:	call   DWORD PTR [eax+0x8]
10020077:	mov    eax,esi
10020079:	call   0x10059d4d
1002007e:	ret    0x8
10020081:	push   ebp
10020082:	mov    ebp,esp
10020084:	cmp    DWORD PTR ds:0x1007f858,0x0
1002008b:	jne    0x10020094
1002008d:	and    DWORD PTR ds:0x1007f858,0x0
10020094:	push   ebx
10020095:	push   DWORD PTR [ebp+0xc]
10020098:	lea    eax,[esi+0x20]
1002009b:	push   eax
1002009c:	mov    ebx,0x1007f828
100200a1:	call   0x10021e50
100200a6:	pop    ecx
100200a7:	pop    ecx
100200a8:	movzx  eax,ax
100200ab:	push   eax
100200ac:	push   DWORD PTR [ebp+0xc]
100200af:	mov    ebx,esi
100200b1:	push   0x0
100200b3:	push   0xcf0000
100200b8:	push   0x10070438
100200bd:	push   DWORD PTR [ebp+0x8]
100200c0:	call   0x10021dc9
100200c5:	pop    ebx
100200c6:	pop    ebp
100200c7:	ret    0x8
100200ca:	mov    eax,0x10021cc3
100200cf:	ret    
100200d0:	push   ebp
100200d1:	mov    ebp,esp
100200d3:	cmp    DWORD PTR ds:0x1007f8e8,0x0
100200da:	jne    0x100200e3
100200dc:	and    DWORD PTR ds:0x1007f8e8,0x0
100200e3:	push   ebx
100200e4:	push   DWORD PTR [ebp+0xc]
100200e7:	lea    eax,[esi+0x20]
100200ea:	push   eax
100200eb:	mov    ebx,0x1007f8b8
100200f0:	call   0x10021e50
100200f5:	pop    ecx
100200f6:	pop    ecx
100200f7:	movzx  eax,ax
100200fa:	push   eax
100200fb:	push   DWORD PTR [ebp+0xc]
100200fe:	mov    ebx,esi
10020100:	push   0x0
10020102:	push   0xcf0000
10020107:	push   0x10070484
1002010c:	push   DWORD PTR [ebp+0x8]
1002010f:	call   0x10021dc9
10020114:	pop    ebx
10020115:	pop    ebp
10020116:	ret    0x8
10020119:	push   esi
1002011a:	mov    esi,DWORD PTR [esp+0x8]
1002011e:	lea    eax,[esi-0x38]
10020121:	neg    esi
10020123:	sbb    esi,esi
10020125:	and    esi,eax
10020127:	push   edi
10020128:	mov    edi,DWORD PTR [esp+0x10]
1002012c:	add    esi,0x3c
1002012f:	cmp    DWORD PTR [esi],edi
10020131:	je     0x10020138
10020133:	call   0x10007617
10020138:	pop    edi
10020139:	xor    eax,eax
1002013b:	pop    esi
1002013c:	ret    0x8
1002013f:	mov    ecx,DWORD PTR [esp+0x4]
10020143:	mov    edx,DWORD PTR [esp+0xc]
10020147:	lea    eax,[ecx-0x38]
1002014a:	neg    ecx
1002014c:	sbb    ecx,ecx
1002014e:	and    ecx,eax
10020150:	test   edx,edx
10020152:	mov    eax,0x80004003
10020157:	je     0x10020174
10020159:	mov    ecx,DWORD PTR [ecx+0x3c]
1002015c:	test   ecx,ecx
1002015e:	je     0x1002016c
10020160:	mov    eax,DWORD PTR [ecx]
10020162:	push   edx
10020163:	push   DWORD PTR [esp+0xc]
10020167:	push   ecx
10020168:	call   DWORD PTR [eax]
1002016a:	jmp    0x10020174
1002016c:	and    DWORD PTR [edx],0x0
1002016f:	mov    eax,0x80004005
10020174:	ret    0xc
10020177:	push   edi
10020178:	mov    edi,DWORD PTR [esp+0x14]
1002017c:	mov    ecx,0x1007f944
10020181:	call   0x100105fb
10020186:	pop    edi
10020187:	ret    0x10
1002018a:	push   DWORD PTR [esp+0x18]
1002018e:	mov    eax,0x1007f944
10020193:	push   DWORD PTR [esp+0x14]
10020197:	push   DWORD PTR [esp+0x14]
1002019b:	call   0x10010629
100201a0:	ret    0x18
100201a3:	push   ebp
100201a4:	mov    ebp,esp
100201a6:	push   DWORD PTR [ebp+0x28]
100201a9:	mov    eax,0x1007f944
100201ae:	push   DWORD PTR [ebp+0x24]
100201b1:	push   DWORD PTR [ebp+0x20]
100201b4:	push   DWORD PTR [ebp+0x1c]
100201b7:	push   DWORD PTR [ebp+0x18]
100201ba:	push   DWORD PTR [ebp+0xc]
100201bd:	push   DWORD PTR [ebp+0x8]
100201c0:	call   0x100106cc
100201c5:	pop    ebp
100201c6:	ret    0x24
100201c9:	push   esi
100201ca:	mov    esi,ecx
100201cc:	mov    DWORD PTR [esi],0x100706e0
100201d2:	mov    DWORD PTR [esi+0x24],0x100706f0
100201d9:	mov    DWORD PTR [esi+0x28],0xc0000001
100201e0:	mov    eax,DWORD PTR [esi+0x2c]
100201e3:	test   eax,eax
100201e5:	je     0x100201f1
100201e7:	and    DWORD PTR [esi+0x2c],0x0
100201eb:	mov    ecx,DWORD PTR [eax]
100201ed:	push   eax
100201ee:	call   DWORD PTR [ecx+0x8]
100201f1:	mov    eax,DWORD PTR [esi+0x4]
100201f4:	test   eax,eax
100201f6:	je     0x100201ff
100201f8:	push   eax
100201f9:	call   DWORD PTR ds:0x10066304
100201ff:	mov    ecx,DWORD PTR ds:0x10080c04
10020205:	mov    eax,DWORD PTR [ecx]
10020207:	call   DWORD PTR [eax+0x8]
1002020a:	mov    eax,DWORD PTR [esi+0x2c]
1002020d:	test   eax,eax
1002020f:	je     0x10020217
10020211:	mov    ecx,DWORD PTR [eax]
10020213:	push   eax
10020214:	call   DWORD PTR [ecx+0x8]
10020217:	mov    esi,DWORD PTR [esi+0x14]
1002021a:	test   esi,esi
1002021c:	je     0x10020224
1002021e:	push   esi
1002021f:	call   0x1005738e
10020224:	pop    esi
10020225:	ret    
10020226:	mov    eax,DWORD PTR [esp+0x4]
1002022a:	push   ebx
1002022b:	push   DWORD PTR [esp+0xc]
1002022f:	mov    ebx,DWORD PTR [esp+0x14]
10020233:	add    eax,0xffffffdc
10020236:	push   eax
10020237:	mov    eax,0x10070408
1002023c:	call   0x100104da
10020241:	pop    ebx
10020242:	ret    0xc
10020245:	push   esi
10020246:	mov    esi,ecx
10020248:	mov    DWORD PTR [esi],0x1007072c
1002024e:	mov    DWORD PTR [esi+0x24],0x1007073c
10020255:	mov    DWORD PTR [esi+0x28],0xc0000001
1002025c:	mov    eax,DWORD PTR [esi+0x2c]
1002025f:	test   eax,eax
10020261:	je     0x1002026d
10020263:	and    DWORD PTR [esi+0x2c],0x0
10020267:	mov    ecx,DWORD PTR [eax]
10020269:	push   eax
1002026a:	call   DWORD PTR [ecx+0x8]
1002026d:	mov    eax,DWORD PTR [esi+0x4]
10020270:	test   eax,eax
10020272:	je     0x1002027b
10020274:	push   eax
10020275:	call   DWORD PTR ds:0x10066304
1002027b:	mov    ecx,DWORD PTR ds:0x10080c04
10020281:	mov    eax,DWORD PTR [ecx]
10020283:	call   DWORD PTR [eax+0x8]
10020286:	mov    eax,DWORD PTR [esi+0x2c]
10020289:	test   eax,eax
1002028b:	je     0x10020293
1002028d:	mov    ecx,DWORD PTR [eax]
1002028f:	push   eax
10020290:	call   DWORD PTR [ecx+0x8]
10020293:	mov    esi,DWORD PTR [esi+0x14]
10020296:	test   esi,esi
10020298:	je     0x100202a0
1002029a:	push   esi
1002029b:	call   0x1005738e
100202a0:	pop    esi
100202a1:	ret    
100202a2:	mov    eax,DWORD PTR [esp+0x4]
100202a6:	inc    DWORD PTR [eax+0x4]
100202a9:	mov    eax,DWORD PTR [eax+0x4]
100202ac:	ret    0x4
100202af:	mov    eax,DWORD PTR [esp+0x4]
100202b3:	dec    DWORD PTR [eax+0x4]
100202b6:	push   esi
100202b7:	mov    esi,DWORD PTR [eax+0x4]
100202ba:	jne    0x100202ca
100202bc:	lea    ecx,[eax-0x24]
100202bf:	test   ecx,ecx
100202c1:	je     0x100202ca
100202c3:	mov    eax,DWORD PTR [ecx]
100202c5:	push   0x1
100202c7:	call   DWORD PTR [eax+0x4]
100202ca:	mov    eax,esi
100202cc:	pop    esi
100202cd:	ret    0x4
100202d0:	mov    eax,DWORD PTR [esp+0x4]
100202d4:	push   ebx
100202d5:	push   DWORD PTR [esp+0xc]
100202d9:	mov    ebx,DWORD PTR [esp+0x14]
100202dd:	add    eax,0xffffffdc
100202e0:	push   eax
100202e1:	mov    eax,0x10070460
100202e6:	call   0x100104da
100202eb:	pop    ebx
100202ec:	ret    0xc
100202ef:	xor    eax,eax
100202f1:	mov    DWORD PTR [esi+0x4],eax
100202f4:	mov    DWORD PTR [esi+0x10],eax
100202f7:	mov    DWORD PTR [esi+0xc],eax
100202fa:	mov    DWORD PTR [esi+0x8],eax
100202fd:	mov    DWORD PTR [esi+0x14],eax
10020300:	mov    DWORD PTR [esi+0x18],eax
10020303:	mov    DWORD PTR [esi],0x10070760
10020309:	mov    ecx,DWORD PTR ds:0x10080c04
1002030f:	mov    eax,DWORD PTR [ecx]
10020311:	call   DWORD PTR [eax+0x4]
10020314:	mov    eax,esi
10020316:	ret    
10020317:	push   esi
10020318:	mov    esi,ecx
1002031a:	mov    DWORD PTR [esi],0x10070760
10020320:	mov    DWORD PTR [esi+0x18],0xc0000001
10020327:	mov    ecx,DWORD PTR ds:0x10080c04
1002032d:	mov    eax,DWORD PTR [ecx]
1002032f:	call   DWORD PTR [eax+0x8]
10020332:	mov    ecx,esi
10020334:	pop    esi
10020335:	jmp    0x100220d6
1002033a:	push   ebx
1002033b:	push   DWORD PTR [esp+0xc]
1002033f:	mov    ebx,DWORD PTR [esp+0x14]
10020343:	push   DWORD PTR [esp+0xc]
10020347:	mov    eax,0x100706b8
1002034c:	call   0x100104da
10020351:	pop    ebx
10020352:	ret    0xc
10020355:	push   DWORD PTR [esi]
10020357:	call   0x1001b5ea
1002035c:	and    DWORD PTR [esi],0x0
1002035f:	pop    ecx
10020360:	ret    
10020361:	push   0x10
10020363:	mov    eax,0x100603cc
10020368:	call   0x10059ca8
1002036d:	mov    eax,DWORD PTR [ebp+0x8]
10020370:	xor    esi,esi
10020372:	cmp    eax,esi
10020374:	jne    0x1002037d
10020376:	mov    eax,0x80004003
1002037b:	jmp    0x100203e3
1002037d:	push   0xf4
10020382:	mov    DWORD PTR [eax],esi
10020384:	mov    DWORD PTR [ebp-0x14],0x8007000e
1002038b:	mov    DWORD PTR [ebp-0x1c],esi
1002038e:	mov    DWORD PTR [ebp-0x4],esi
10020391:	call   0x100436de
10020396:	pop    ecx
10020397:	mov    DWORD PTR [ebp-0x18],eax
1002039a:	cmp    eax,esi
1002039c:	mov    BYTE PTR [ebp-0x4],0x1
100203a0:	je     0x100203aa
100203a2:	push   eax
100203a3:	call   0x1002101b
100203a8:	mov    esi,eax
100203aa:	or     DWORD PTR [ebp-0x4],0xffffffff
100203ae:	jmp    0x100203b9
100203b0:	mov    eax,0x100203b6
100203b5:	ret    
100203b6:	mov    esi,DWORD PTR [ebp-0x1c]
100203b9:	test   esi,esi
100203bb:	je     0x100203e0
100203bd:	push   DWORD PTR [ebp+0x8]
100203c0:	inc    DWORD PTR [esi+0x4]
100203c3:	dec    DWORD PTR [esi+0x4]
100203c6:	mov    eax,DWORD PTR [esi]
100203c8:	push   0x1006dd44
100203cd:	push   esi
100203ce:	call   DWORD PTR [eax]
100203d0:	test   eax,eax
100203d2:	mov    DWORD PTR [ebp-0x14],eax
100203d5:	je     0x100203e0
100203d7:	mov    eax,DWORD PTR [esi]
100203d9:	push   0x1
100203db:	mov    ecx,esi
100203dd:	call   DWORD PTR [eax+0xc]
100203e0:	mov    eax,DWORD PTR [ebp-0x14]
100203e3:	call   0x10059d4d
100203e8:	ret    0x4
100203eb:	push   ebp
100203ec:	mov    ebp,esp
100203ee:	and    esp,0xfffffff8
100203f1:	push   0xffffffff
100203f3:	push   0x10060e0c
100203f8:	mov    eax,fs:0x0
100203fe:	push   eax
100203ff:	sub    esp,0x70
10020402:	mov    eax,ds:0x1007e030
10020407:	xor    eax,esp
10020409:	mov    DWORD PTR [esp+0x68],eax
1002040d:	push   ebx
1002040e:	push   esi
1002040f:	push   edi
10020410:	mov    eax,ds:0x1007e030
10020415:	xor    eax,esp
10020417:	push   eax
10020418:	lea    eax,[esp+0x80]
1002041f:	mov    fs:0x0,eax
10020425:	mov    edi,ecx
10020427:	mov    eax,edi
10020429:	mov    DWORD PTR [esp+0x14],edi
1002042d:	mov    esi,edx
1002042f:	call   0x10020d9e
10020434:	lea    eax,[esp+0x68]
10020438:	push   eax
10020439:	push   esi
1002043a:	call   DWORD PTR ds:0x10066438
10020440:	test   eax,eax
10020442:	jl     0x10020561
10020448:	lea    esi,[edi+0xc]
1002044b:	push   esi
1002044c:	push   0x1006b8b8
10020451:	push   0x17
10020453:	push   0x0
10020455:	lea    eax,[esp+0x78]
10020459:	push   eax
1002045a:	mov    DWORD PTR [esp+0x2c],esi
1002045e:	call   DWORD PTR ds:0x1006643c
10020464:	test   eax,eax
10020466:	mov    DWORD PTR [esp+0x10],eax
1002046a:	jl     0x100204a1
1002046c:	mov    eax,DWORD PTR [esi]
1002046e:	mov    ecx,DWORD PTR [eax]
10020470:	lea    ebx,[edi+0x8]
10020473:	push   ebx
10020474:	push   0x1006b8a8
10020479:	push   eax
1002047a:	call   DWORD PTR [ecx]
1002047c:	test   eax,eax
1002047e:	mov    DWORD PTR [esp+0x10],eax
10020482:	jl     0x100204a1
10020484:	mov    esi,DWORD PTR [esi]
10020486:	mov    eax,DWORD PTR [esi]
10020488:	push   edi
10020489:	push   esi
1002048a:	call   DWORD PTR [eax+0xc]
1002048d:	test   eax,eax
1002048f:	mov    DWORD PTR [esp+0x10],eax
10020493:	jl     0x100204a1
10020495:	mov    ebx,DWORD PTR [ebx]
10020497:	mov    eax,DWORD PTR [ebx]
10020499:	push   ebx
1002049a:	call   DWORD PTR [eax+0xc]
1002049d:	mov    DWORD PTR [esp+0x10],eax
100204a1:	push   0x100706a0
100204a6:	lea    eax,[esp+0x50]
100204aa:	call   0x10020c2c
100204af:	and    DWORD PTR [esp+0x88],0x0
100204b7:	mov    eax,edi
100204b9:	neg    eax
100204bb:	sbb    eax,eax
100204bd:	lea    ecx,[edi-0x8]
100204c0:	and    eax,ecx
100204c2:	lea    ebx,[eax+0x24]
100204c5:	lea    eax,[esp+0x4c]
100204c9:	lea    esi,[esp+0x20]
100204cd:	call   0x10004b2b
100204d2:	mov    DWORD PTR [esp+0x3c],ebx
100204d6:	mov    eax,esi
100204d8:	add    edi,0x10
100204db:	push   eax
100204dc:	push   edi
100204dd:	mov    DWORD PTR [esp+0x24],edi
100204e1:	lea    edi,[esp+0x48]
100204e5:	mov    BYTE PTR [esp+0x90],0x1
100204ed:	call   0x10020c58
100204f2:	push   0x1
100204f4:	xor    ebx,ebx
100204f6:	mov    BYTE PTR [esp+0x8c],0x0
100204fe:	call   0x100051f3
10020503:	cmp    DWORD PTR [esp+0x10],ebx
10020507:	jl     0x1002053e
10020509:	mov    esi,DWORD PTR [esp+0x18]
1002050d:	mov    eax,DWORD PTR [esi]
1002050f:	mov    ecx,DWORD PTR [eax]
10020511:	push   0xe
10020513:	push   0x100706a0
10020518:	push   eax
10020519:	call   DWORD PTR [ecx+0x20]
1002051c:	test   eax,eax
1002051e:	jl     0x1002053e
10020520:	mov    eax,DWORD PTR [esi]
10020522:	mov    ecx,DWORD PTR [eax]
10020524:	push   0x1
10020526:	push   eax
10020527:	call   DWORD PTR [ecx+0x14]
1002052a:	test   eax,eax
1002052c:	jl     0x1002053e
1002052e:	push   0x1
10020530:	lea    esi,[esp+0x50]
10020534:	call   0x100051f3
10020539:	xor    eax,eax
1002053b:	inc    eax
1002053c:	jmp    0x10020563
1002053e:	mov    ecx,DWORD PTR [esp+0x1c]
10020542:	lea    eax,[esp+0x4c]
10020546:	call   0x10020d0e
1002054b:	mov    eax,DWORD PTR [esp+0x14]
1002054f:	call   0x10020d9e
10020554:	push   0x1
10020556:	xor    ebx,ebx
10020558:	lea    esi,[esp+0x50]
1002055c:	call   0x100051f3
10020561:	xor    eax,eax
10020563:	mov    ecx,DWORD PTR [esp+0x80]
1002056a:	mov    DWORD PTR fs:0x0,ecx
10020571:	pop    ecx
10020572:	pop    edi
10020573:	pop    esi
10020574:	pop    ebx
10020575:	mov    ecx,DWORD PTR [esp+0x68]
10020579:	xor    ecx,esp
1002057b:	call   0x100430d7
10020580:	mov    esp,ebp
10020582:	pop    ebp
10020583:	ret    
10020584:	push   ebp
10020585:	mov    ebp,esp
10020587:	and    esp,0xfffffff8
1002058a:	push   0xffffffff
1002058c:	push   0x10060dd4
10020591:	mov    eax,fs:0x0
10020597:	push   eax
10020598:	sub    esp,0x60
1002059b:	mov    eax,ds:0x1007e030
100205a0:	xor    eax,esp
100205a2:	mov    DWORD PTR [esp+0x58],eax
100205a6:	push   ebx
100205a7:	push   esi
100205a8:	push   edi
100205a9:	mov    eax,ds:0x1007e030
100205ae:	xor    eax,esp
100205b0:	push   eax
100205b1:	lea    eax,[esp+0x70]
100205b5:	mov    fs:0x0,eax
100205bb:	mov    ebx,ecx
100205bd:	mov    esi,DWORD PTR [ebp+0x8]
100205c0:	mov    edi,edx
100205c2:	cmp    DWORD PTR [edi+0xc],0x0
100205c6:	mov    DWORD PTR [esp+0x18],edi
100205ca:	mov    DWORD PTR [esp+0x1c],esi
100205ce:	je     0x1002067c
100205d4:	test   ebx,ebx
100205d6:	je     0x1002067c
100205dc:	call   DWORD PTR ds:0x1007efec
100205e2:	push   esi
100205e3:	lea    eax,[esp+0x50]
100205e7:	call   0x10020c2c
100205ec:	and    DWORD PTR [esp+0x78],0x0
100205f1:	lea    eax,[esp+0x4c]
100205f5:	lea    esi,[esp+0x20]
100205f9:	call   0x10004b2b
100205fe:	mov    DWORD PTR [esp+0x3c],ebx
10020602:	lea    eax,[edi+0x10]
10020605:	mov    ecx,esi
10020607:	push   ecx
10020608:	push   eax
10020609:	lea    edi,[esp+0x48]
1002060d:	mov    BYTE PTR [esp+0x80],0x1
10020615:	mov    DWORD PTR [esp+0x1c],eax
10020619:	call   0x10020c58
1002061e:	push   0x1
10020620:	xor    ebx,ebx
10020622:	mov    BYTE PTR [esp+0x7c],0x0
10020627:	call   0x100051f3
1002062c:	mov    esi,DWORD PTR [esp+0x18]
10020630:	mov    eax,DWORD PTR [esi+0xc]
10020633:	mov    ecx,DWORD PTR [eax]
10020635:	push   0xe
10020637:	push   DWORD PTR [esp+0x20]
1002063b:	push   eax
1002063c:	call   DWORD PTR [ecx+0x20]
1002063f:	test   eax,eax
10020641:	jl     0x10020662
10020643:	mov    esi,DWORD PTR [esi+0xc]
10020646:	mov    eax,DWORD PTR [esi]
10020648:	push   0x2
1002064a:	push   esi
1002064b:	call   DWORD PTR [eax+0x14]
1002064e:	test   eax,eax
10020650:	jl     0x10020662
10020652:	push   0x1
10020654:	lea    esi,[esp+0x50]
10020658:	call   0x100051f3
1002065d:	xor    eax,eax
1002065f:	inc    eax
10020660:	jmp    0x1002067e
10020662:	mov    ecx,DWORD PTR [esp+0x14]
10020666:	lea    eax,[esp+0x4c]
1002066a:	call   0x10020d0e
1002066f:	push   0x1
10020671:	xor    ebx,ebx
10020673:	lea    esi,[esp+0x50]
10020677:	call   0x100051f3
1002067c:	xor    eax,eax
1002067e:	mov    ecx,DWORD PTR [esp+0x70]
10020682:	mov    DWORD PTR fs:0x0,ecx
10020689:	pop    ecx
1002068a:	pop    edi
1002068b:	pop    esi
1002068c:	pop    ebx
1002068d:	mov    ecx,DWORD PTR [esp+0x58]
10020691:	xor    ecx,esp
10020693:	call   0x100430d7
10020698:	mov    esp,ebp
1002069a:	pop    ebp
1002069b:	ret    0x4
1002069e:	push   ebp
1002069f:	mov    ebp,esp
100206a1:	sub    esp,0x1c
100206a4:	mov    eax,ds:0x1007e030
100206a9:	xor    eax,ebp
100206ab:	mov    DWORD PTR [ebp-0x8],eax
100206ae:	mov    eax,DWORD PTR [ebp+0x8]
100206b1:	and    DWORD PTR [ebp-0x1c],0x0
100206b5:	push   esi
100206b6:	push   edi
100206b7:	mov    esi,0x1006b858
100206bc:	lea    edi,[ebp-0x18]
100206bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
100206c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
100206c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
100206c2:	lea    ecx,[ebp-0x18]
100206c5:	push   ecx
100206c6:	push   eax
100206c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
100206c8:	call   DWORD PTR ds:0x10066438
100206ce:	test   eax,eax
100206d0:	jl     0x100206e9
100206d2:	lea    eax,[ebp-0x1c]
100206d5:	push   eax
100206d6:	push   0x1006b8c8
100206db:	push   0x1
100206dd:	push   0x0
100206df:	lea    eax,[ebp-0x18]
100206e2:	push   eax
100206e3:	call   DWORD PTR ds:0x1006643c
100206e9:	mov    ecx,DWORD PTR [ebp-0x8]
100206ec:	mov    eax,DWORD PTR [ebp-0x1c]
100206ef:	pop    edi
100206f0:	xor    ecx,ebp
100206f2:	pop    esi
100206f3:	call   0x100430d7
100206f8:	leave  
100206f9:	ret    0x4
100206fc:	push   ebp
100206fd:	mov    ebp,esp
100206ff:	mov    ecx,DWORD PTR [ecx+0xc]
10020702:	sub    esp,0x14
10020705:	push   edi
10020706:	xor    edi,edi
10020708:	cmp    ecx,edi
1002070a:	mov    eax,0x80004005
1002070f:	je     0x10020770
10020711:	mov    eax,DWORD PTR [ebp+0xc]
10020714:	lea    edx,[ebp-0x4]
10020717:	mov    DWORD PTR [ebp-0x14],eax
1002071a:	mov    eax,DWORD PTR [ebp+0x10]
1002071d:	push   edx
1002071e:	push   edi
1002071f:	mov    DWORD PTR [ebp-0x4],edi
10020722:	mov    DWORD PTR [ebp-0x10],edi
10020725:	mov    DWORD PTR [ebp-0xc],eax
10020728:	mov    DWORD PTR [ebp-0x8],edi
1002072b:	mov    eax,DWORD PTR [ecx]
1002072d:	push   ecx
1002072e:	call   DWORD PTR [eax+0x28]
10020731:	cmp    eax,edi
10020733:	jl     0x10020770
10020735:	mov    eax,DWORD PTR [ebp-0x4]
10020738:	mov    ecx,DWORD PTR [eax]
1002073a:	push   esi
1002073b:	lea    edx,[ebp+0xc]
1002073e:	push   edx
1002073f:	push   0x9
10020741:	push   0x1
10020743:	lea    edx,[ebp+0x8]
10020746:	push   edx
10020747:	mov    esi,0x1006b858
1002074c:	push   esi
1002074d:	push   eax
1002074e:	call   DWORD PTR [ecx+0x14]
10020751:	cmp    eax,edi
10020753:	jl     0x1002076f
10020755:	mov    eax,DWORD PTR [ebp-0x4]
10020758:	mov    ecx,DWORD PTR [eax]
1002075a:	push   edi
1002075b:	push   edi
1002075c:	push   DWORD PTR [ebp+0x14]
1002075f:	lea    edx,[ebp-0x14]
10020762:	push   edx
10020763:	push   0x1
10020765:	push   0x9
10020767:	push   esi
10020768:	push   DWORD PTR [ebp+0xc]
1002076b:	push   eax
1002076c:	call   DWORD PTR [ecx+0x18]
1002076f:	pop    esi
10020770:	pop    edi
10020771:	leave  
10020772:	ret    0x10
10020775:	push   ebp
10020776:	mov    ebp,esp
10020778:	sub    esp,0x30
1002077b:	push   esi
1002077c:	push   edi
1002077d:	push   ebx
1002077e:	lea    eax,[ebp-0x8]
10020781:	call   0x10020f1b
10020786:	mov    eax,ds:0x10080f58
1002078b:	lea    edi,[ebp-0x10]
1002078e:	lea    esi,[ebp-0x8]
10020791:	mov    DWORD PTR [ebp-0xc],eax
10020794:	mov    DWORD PTR [ebp-0x10],0x10080f54
1002079b:	call   0x10004b10
100207a0:	test   al,al
100207a2:	mov    ecx,DWORD PTR [ebp-0x4]
100207a5:	jne    0x100207ae
100207a7:	mov    eax,DWORD PTR [ebx]
100207a9:	cmp    eax,DWORD PTR [ecx+0xc]
100207ac:	jae    0x100207e1
100207ae:	xor    eax,eax
100207b0:	lea    edi,[ebp-0x18]
100207b3:	stos   DWORD PTR es:[edi],eax
100207b4:	stos   DWORD PTR es:[edi],eax
100207b5:	stos   DWORD PTR es:[edi],eax
100207b6:	stos   DWORD PTR es:[edi],eax
100207b7:	mov    eax,DWORD PTR [ebx]
100207b9:	mov    DWORD PTR [ebp-0x2c],eax
100207bc:	lea    esi,[ebp-0x18]
100207bf:	lea    edi,[ebp-0x28]
100207c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
100207c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
100207c4:	push   ecx
100207c5:	push   DWORD PTR [ebp-0x8]
100207c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
100207c9:	lea    eax,[ebp-0x10]
100207cc:	push   eax
100207cd:	lea    eax,[ebp-0x2c]
100207d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
100207d1:	call   0x10020dd6
100207d6:	mov    ecx,DWORD PTR [eax]
100207d8:	mov    eax,DWORD PTR [eax+0x4]
100207db:	mov    DWORD PTR [ebp-0x8],ecx
100207de:	mov    DWORD PTR [ebp-0x4],eax
100207e1:	lea    esi,[ebp-0x8]
100207e4:	call   0x1000cedb
100207e9:	pop    edi
100207ea:	add    eax,0x4
100207ed:	pop    esi
100207ee:	leave  
100207ef:	ret    
100207f0:	push   ebp
100207f1:	mov    ebp,esp
100207f3:	and    esp,0xfffffff8
100207f6:	mov    eax,ds:0x10080f58
100207fb:	mov    edx,DWORD PTR [eax]
100207fd:	sub    esp,0xc
10020800:	push   esi
10020801:	push   eax
10020802:	mov    ecx,0x10080f54
10020807:	mov    esi,ecx
10020809:	push   esi
1002080a:	push   edx
1002080b:	push   ecx
1002080c:	lea    eax,[esp+0x18]
10020810:	push   eax
10020811:	call   0x10021488
10020816:	push   DWORD PTR ds:0x10080f58
1002081c:	call   0x100430d2
10020821:	and    DWORD PTR ds:0x10080f58,0x0
10020828:	and    DWORD PTR ds:0x10080f5c,0x0
1002082f:	pop    ecx
10020830:	pop    esi
10020831:	mov    esp,ebp
10020833:	pop    ebp
10020834:	ret    
10020835:	push   0x48
10020837:	mov    eax,0x100603a7
1002083c:	call   0x10059c75
10020841:	mov    ebx,DWORD PTR [ebp+0x10]
10020844:	cmp    BYTE PTR [ebx+0x21],0x0
10020848:	je     0x1002087c
1002084a:	push   0x1006ccec
1002084f:	lea    ecx,[ebp-0x2c]
10020852:	call   0x100011d1
10020857:	and    DWORD PTR [ebp-0x4],0x0
1002085b:	lea    eax,[ebp-0x2c]
1002085e:	push   eax
1002085f:	lea    ecx,[ebp-0x54]
10020862:	call   0x1000106e
10020867:	push   0x10074de0
1002086c:	lea    eax,[ebp-0x54]
1002086f:	push   eax
10020870:	mov    DWORD PTR [ebp-0x54],0x1006b978
10020877:	call   0x10047c54
1002087c:	lea    esi,[ebp+0xc]
1002087f:	call   0x10020fce
10020884:	mov    ecx,DWORD PTR [ebx]
10020886:	cmp    BYTE PTR [ecx+0x21],0x0
1002088a:	je     0x10020891
1002088c:	mov    edi,DWORD PTR [ebx+0x8]
1002088f:	jmp    0x100208a8
10020891:	mov    eax,DWORD PTR [ebx+0x8]
10020894:	cmp    BYTE PTR [eax+0x21],0x0
10020898:	je     0x1002089e
1002089a:	mov    edi,ecx
1002089c:	jmp    0x100208a8
1002089e:	mov    eax,DWORD PTR [ebp+0x10]
100208a1:	cmp    eax,ebx
100208a3:	mov    edi,DWORD PTR [eax+0x8]
100208a6:	jne    0x10020920
100208a8:	cmp    BYTE PTR [edi+0x21],0x0
100208ac:	mov    esi,DWORD PTR [ebx+0x4]
100208af:	jne    0x100208b4
100208b1:	mov    DWORD PTR [edi+0x4],esi
100208b4:	mov    eax,ds:0x10080f58
100208b9:	cmp    DWORD PTR [eax+0x4],ebx
100208bc:	jne    0x100208c3
100208be:	mov    DWORD PTR [eax+0x4],edi
100208c1:	jmp    0x100208ce
100208c3:	cmp    DWORD PTR [esi],ebx
100208c5:	jne    0x100208cb
100208c7:	mov    DWORD PTR [esi],edi
100208c9:	jmp    0x100208ce
100208cb:	mov    DWORD PTR [esi+0x8],edi
100208ce:	mov    edx,DWORD PTR ds:0x10080f58
100208d4:	cmp    DWORD PTR [edx],ebx
100208d6:	jne    0x100208f4
100208d8:	cmp    BYTE PTR [edi+0x21],0x0
100208dc:	je     0x100208e2
100208de:	mov    ecx,esi
100208e0:	jmp    0x100208f2
100208e2:	mov    eax,DWORD PTR [edi]
100208e4:	mov    ecx,edi
100208e6:	jmp    0x100208ec
100208e8:	mov    ecx,eax
100208ea:	mov    eax,DWORD PTR [ecx]
100208ec:	cmp    BYTE PTR [eax+0x21],0x0
100208f0:	je     0x100208e8
100208f2:	mov    DWORD PTR [edx],ecx
100208f4:	mov    edx,DWORD PTR ds:0x10080f58
100208fa:	cmp    DWORD PTR [edx+0x8],ebx
100208fd:	jne    0x1002097a
100208ff:	cmp    BYTE PTR [edi+0x21],0x0
10020903:	je     0x10020909
10020905:	mov    ecx,esi
10020907:	jmp    0x1002091b
10020909:	mov    eax,DWORD PTR [edi+0x8]
1002090c:	mov    ecx,edi
1002090e:	jmp    0x10020915
10020910:	mov    ecx,eax
10020912:	mov    eax,DWORD PTR [ecx+0x8]
10020915:	cmp    BYTE PTR [eax+0x21],0x0
10020919:	je     0x10020910
1002091b:	mov    DWORD PTR [edx+0x8],ecx
1002091e:	jmp    0x1002097a
10020920:	mov    DWORD PTR [ecx+0x4],eax
10020923:	mov    ecx,DWORD PTR [ebx]
10020925:	mov    DWORD PTR [eax],ecx
10020927:	cmp    eax,DWORD PTR [ebx+0x8]
1002092a:	jne    0x10020930
1002092c:	mov    esi,eax
1002092e:	jmp    0x1002094a
10020930:	cmp    BYTE PTR [edi+0x21],0x0
10020934:	mov    esi,DWORD PTR [eax+0x4]
10020937:	jne    0x1002093c
10020939:	mov    DWORD PTR [edi+0x4],esi
1002093c:	mov    DWORD PTR [esi],edi
1002093e:	mov    ecx,DWORD PTR [ebx+0x8]
10020941:	mov    DWORD PTR [eax+0x8],ecx
10020944:	mov    ecx,DWORD PTR [ebx+0x8]
10020947:	mov    DWORD PTR [ecx+0x4],eax
1002094a:	mov    ecx,DWORD PTR ds:0x10080f58
10020950:	cmp    DWORD PTR [ecx+0x4],ebx
10020953:	jne    0x1002095a
10020955:	mov    DWORD PTR [ecx+0x4],eax
10020958:	jmp    0x10020968
1002095a:	mov    ecx,DWORD PTR [ebx+0x4]
1002095d:	cmp    DWORD PTR [ecx],ebx
1002095f:	jne    0x10020965
10020961:	mov    DWORD PTR [ecx],eax
10020963:	jmp    0x10020968
10020965:	mov    DWORD PTR [ecx+0x8],eax
10020968:	mov    ecx,DWORD PTR [ebx+0x4]
1002096b:	mov    DWORD PTR [eax+0x4],ecx
1002096e:	mov    dl,BYTE PTR [ebx+0x20]
10020971:	mov    cl,BYTE PTR [eax+0x20]
10020974:	mov    BYTE PTR [eax+0x20],dl
10020977:	mov    BYTE PTR [ebx+0x20],cl
1002097a:	cmp    BYTE PTR [ebx+0x20],0x1
1002097e:	jne    0x10020a7c
10020984:	jmp    0x10020a37
10020989:	cmp    BYTE PTR [edi+0x20],0x1
1002098d:	jne    0x10020a78
10020993:	mov    ecx,DWORD PTR [esi]
10020995:	cmp    edi,ecx
10020997:	jne    0x10020a00
10020999:	mov    ecx,DWORD PTR [esi+0x8]
1002099c:	cmp    BYTE PTR [ecx+0x20],0x0
100209a0:	jne    0x100209b4
100209a2:	mov    BYTE PTR [ecx+0x20],0x1
100209a6:	mov    ecx,esi
100209a8:	mov    BYTE PTR [esi+0x20],0x0
100209ac:	call   0x10020f52
100209b1:	mov    ecx,DWORD PTR [esi+0x8]
100209b4:	cmp    BYTE PTR [ecx+0x21],0x0
100209b8:	jne    0x10020a32
100209ba:	mov    eax,DWORD PTR [ecx]
100209bc:	cmp    BYTE PTR [eax+0x20],0x1
100209c0:	jne    0x100209cb
100209c2:	mov    eax,DWORD PTR [ecx+0x8]
100209c5:	cmp    BYTE PTR [eax+0x20],0x1
100209c9:	je     0x10020a2e
100209cb:	mov    eax,DWORD PTR [ecx+0x8]
100209ce:	cmp    BYTE PTR [eax+0x20],0x1
100209d2:	jne    0x100209e6
100209d4:	mov    eax,DWORD PTR [ecx]
100209d6:	mov    BYTE PTR [eax+0x20],0x1
100209da:	mov    BYTE PTR [ecx+0x20],0x0
100209de:	call   0x10020f8f
100209e3:	mov    ecx,DWORD PTR [esi+0x8]
100209e6:	mov    al,BYTE PTR [esi+0x20]
100209e9:	mov    BYTE PTR [ecx+0x20],al
100209ec:	mov    BYTE PTR [esi+0x20],0x1
100209f0:	mov    eax,DWORD PTR [ecx+0x8]
100209f3:	mov    ecx,esi
100209f5:	mov    BYTE PTR [eax+0x20],0x1
100209f9:	call   0x10020f52
100209fe:	jmp    0x10020a78
10020a00:	cmp    BYTE PTR [ecx+0x20],0x0
10020a04:	jne    0x10020a17
10020a06:	mov    BYTE PTR [ecx+0x20],0x1
10020a0a:	mov    ecx,esi
10020a0c:	mov    BYTE PTR [esi+0x20],0x0
10020a10:	call   0x10020f8f
10020a15:	mov    ecx,DWORD PTR [esi]
10020a17:	cmp    BYTE PTR [ecx+0x21],0x0
10020a1b:	jne    0x10020a32
10020a1d:	mov    eax,DWORD PTR [ecx+0x8]
10020a20:	cmp    BYTE PTR [eax+0x20],0x1
10020a24:	jne    0x10020a47
10020a26:	mov    eax,DWORD PTR [ecx]
10020a28:	cmp    BYTE PTR [eax+0x20],0x1
10020a2c:	jne    0x10020a47
10020a2e:	mov    BYTE PTR [ecx+0x20],0x0
10020a32:	mov    edi,esi
10020a34:	mov    esi,DWORD PTR [esi+0x4]
10020a37:	mov    eax,ds:0x10080f58
10020a3c:	cmp    edi,DWORD PTR [eax+0x4]
10020a3f:	jne    0x10020989
10020a45:	jmp    0x10020a78
10020a47:	mov    eax,DWORD PTR [ecx]
10020a49:	cmp    BYTE PTR [eax+0x20],0x1
10020a4d:	jne    0x10020a61
10020a4f:	mov    eax,DWORD PTR [ecx+0x8]
10020a52:	mov    BYTE PTR [eax+0x20],0x1
10020a56:	mov    BYTE PTR [ecx+0x20],0x0
10020a5a:	call   0x10020f52
10020a5f:	mov    ecx,DWORD PTR [esi]
10020a61:	mov    al,BYTE PTR [esi+0x20]
10020a64:	mov    BYTE PTR [ecx+0x20],al
10020a67:	mov    BYTE PTR [esi+0x20],0x1
10020a6b:	mov    eax,DWORD PTR [ecx]
10020a6d:	mov    ecx,esi
10020a6f:	mov    BYTE PTR [eax+0x20],0x1
10020a73:	call   0x10020f8f
10020a78:	mov    BYTE PTR [edi+0x20],0x1
10020a7c:	push   ebx
10020a7d:	call   0x100430d2
10020a82:	cmp    DWORD PTR ds:0x10080f5c,0x0
10020a89:	pop    ecx
10020a8a:	jbe    0x10020a92
10020a8c:	dec    DWORD PTR ds:0x10080f5c
10020a92:	mov    ecx,DWORD PTR [ebp+0xc]
10020a95:	mov    eax,DWORD PTR [ebp+0x8]
10020a98:	mov    DWORD PTR [eax],ecx
10020a9a:	mov    ecx,DWORD PTR [ebp+0x10]
10020a9d:	mov    DWORD PTR [eax+0x4],ecx
10020aa0:	call   0x10059d4d
10020aa5:	ret    0xc
10020aa8:	push   ebp
10020aa9:	mov    ebp,esp
10020aab:	sub    esp,0x14
10020aae:	push   ebx
10020aaf:	push   esi
10020ab0:	push   edi
10020ab1:	push   DWORD PTR [ebp+0xc]
10020ab4:	lea    eax,[ebp-0x8]
10020ab7:	call   0x10020f1b
10020abc:	mov    eax,ds:0x10080f58
10020ac1:	mov    ebx,0x10080f54
10020ac6:	lea    edi,[ebp-0x10]
10020ac9:	lea    esi,[ebp-0x8]
10020acc:	mov    DWORD PTR [ebp-0xc],eax
10020acf:	mov    DWORD PTR [ebp-0x10],ebx
10020ad2:	call   0x10004b10
10020ad7:	test   al,al
10020ad9:	jne    0x10020aec
10020adb:	mov    eax,DWORD PTR [ebp+0xc]
10020ade:	mov    eax,DWORD PTR [eax]
10020ae0:	mov    ecx,DWORD PTR [ebp-0x4]
10020ae3:	cmp    eax,DWORD PTR [ecx+0xc]
10020ae6:	jb     0x10020aec
10020ae8:	mov    eax,esi
10020aea:	jmp    0x10020afa
10020aec:	mov    eax,ds:0x10080f58
10020af1:	mov    DWORD PTR [ebp-0xc],eax
10020af4:	mov    DWORD PTR [ebp-0x10],ebx
10020af7:	lea    eax,[ebp-0x10]
10020afa:	mov    edx,DWORD PTR [eax]
10020afc:	mov    ecx,DWORD PTR [ebp+0x8]
10020aff:	mov    eax,DWORD PTR [eax+0x4]
10020b02:	pop    edi
10020b03:	pop    esi
10020b04:	mov    DWORD PTR [ecx+0x4],eax
10020b07:	mov    DWORD PTR [ecx],edx
10020b09:	mov    eax,ecx
10020b0b:	pop    ebx
10020b0c:	leave  
10020b0d:	ret    0x8
10020b10:	push   esi
10020b11:	mov    esi,DWORD PTR [esp+0x14]
10020b15:	test   esi,esi
10020b17:	jne    0x10020b20
10020b19:	mov    eax,0x80004003
10020b1e:	jmp    0x10020b4d
10020b20:	xor    eax,eax
10020b22:	cmp    DWORD PTR ds:0x1007f96c,eax
10020b28:	jne    0x10020b33
10020b2a:	push   DWORD PTR [esp+0x10]
10020b2e:	call   0x1001ba17
10020b33:	mov    ecx,DWORD PTR ds:0x1007f96c
10020b39:	mov    DWORD PTR [esi],ecx
10020b3b:	mov    ecx,DWORD PTR ds:0x1007f96c
10020b41:	test   ecx,ecx
10020b43:	je     0x10020b4d
10020b45:	mov    eax,DWORD PTR [ecx]
10020b47:	push   ecx
10020b48:	call   DWORD PTR [eax+0x4]
10020b4b:	xor    eax,eax
10020b4d:	pop    esi
10020b4e:	ret    0x10
10020b51:	push   ebx
10020b52:	push   DWORD PTR [esp+0x1c]
10020b56:	mov    ebx,DWORD PTR [esp+0x14]
10020b5a:	push   DWORD PTR [esp+0x1c]
10020b5e:	push   DWORD PTR [esp+0x1c]
10020b62:	call   0x1001b7fe
10020b67:	pop    ebx
10020b68:	ret    0x18
10020b6b:	mov    DWORD PTR [ecx],0x10070780
10020b71:	mov    DWORD PTR [ecx+0x4],0xc0000001
10020b78:	mov    ecx,DWORD PTR ds:0x10080c04
10020b7e:	mov    eax,DWORD PTR [ecx]
10020b80:	jmp    DWORD PTR [eax+0x8]
10020b83:	mov    ecx,DWORD PTR [esp+0x4]
10020b87:	dec    DWORD PTR [ecx+0x4]
10020b8a:	push   esi
10020b8b:	mov    esi,DWORD PTR [ecx+0x4]
10020b8e:	jne    0x10020b9b
10020b90:	test   ecx,ecx
10020b92:	je     0x10020b9b
10020b94:	mov    eax,DWORD PTR [ecx]
10020b96:	push   0x1
10020b98:	call   DWORD PTR [eax+0x1c]
10020b9b:	mov    eax,esi
10020b9d:	pop    esi
10020b9e:	ret    0x4
10020ba1:	push   ebx
10020ba2:	push   DWORD PTR [esp+0xc]
10020ba6:	mov    ebx,DWORD PTR [esp+0x14]
10020baa:	push   DWORD PTR [esp+0xc]
10020bae:	mov    eax,0x1007062c
10020bb3:	call   0x100104da
10020bb8:	pop    ebx
10020bb9:	ret    0xc
10020bbc:	push   esi
10020bbd:	mov    esi,ecx
10020bbf:	call   0x100201c9
10020bc4:	test   BYTE PTR [esp+0x8],0x1
10020bc9:	je     0x10020bd2
10020bcb:	push   esi
10020bcc:	call   0x100430d2
10020bd1:	pop    ecx
10020bd2:	mov    eax,esi
10020bd4:	pop    esi
10020bd5:	ret    0x4
10020bd8:	push   esi
10020bd9:	mov    esi,ecx
10020bdb:	call   0x10020245
10020be0:	test   BYTE PTR [esp+0x8],0x1
10020be5:	je     0x10020bee
10020be7:	push   esi
10020be8:	call   0x100430d2
10020bed:	pop    ecx
10020bee:	mov    eax,esi
10020bf0:	pop    esi
10020bf1:	ret    0x4
10020bf4:	push   esi
10020bf5:	mov    esi,ecx
10020bf7:	call   0x10020317
10020bfc:	test   BYTE PTR [esp+0x8],0x1
10020c01:	je     0x10020c0a
10020c03:	push   esi
10020c04:	call   0x100430d2
10020c09:	pop    ecx
10020c0a:	mov    eax,esi
10020c0c:	pop    esi
10020c0d:	ret    0x4
10020c10:	push   esi
10020c11:	mov    esi,ecx
10020c13:	call   0x10020b6b
10020c18:	test   BYTE PTR [esp+0x8],0x1
10020c1d:	je     0x10020c26
10020c1f:	push   esi
10020c20:	call   0x100430d2
10020c25:	pop    ecx
10020c26:	mov    eax,esi
10020c28:	pop    esi
10020c29:	ret    0x4
10020c2c:	push   esi
10020c2d:	push   DWORD PTR [esp+0x8]
10020c31:	mov    esi,eax
10020c33:	and    DWORD PTR [esi+0x14],0x0
10020c37:	mov    DWORD PTR [esi+0x18],0x7
10020c3e:	and    WORD PTR [esi+0x4],0x0
10020c43:	call   0x10043933
10020c48:	pop    ecx
10020c49:	push   DWORD PTR [esp+0x8]
10020c4d:	call   0x1000516e
10020c52:	mov    eax,esi
10020c54:	pop    esi
10020c55:	ret    0x4
10020c58:	push   ebp
10020c59:	mov    ebp,esp
10020c5b:	sub    esp,0x10
10020c5e:	mov    edx,DWORD PTR [ebp+0x8]
10020c61:	mov    eax,DWORD PTR [edx+0x4]
10020c64:	push   ebx
10020c65:	push   esi
10020c66:	mov    esi,DWORD PTR [eax+0x4]
10020c69:	cmp    BYTE PTR [esi+0x2d],0x0
10020c6d:	mov    DWORD PTR [ebp-0x4],eax
10020c70:	mov    al,0x1
10020c72:	mov    BYTE PTR [ebp-0x8],al
10020c75:	jne    0x10020c9c
10020c77:	mov    ebx,DWORD PTR [ebp+0xc]
10020c7a:	lea    eax,[esi+0xc]
10020c7d:	mov    DWORD PTR [ebp-0x4],esi
10020c80:	call   0x1001f095
10020c85:	test   al,al
10020c87:	mov    BYTE PTR [ebp-0x8],al
10020c8a:	je     0x10020c90
10020c8c:	mov    esi,DWORD PTR [esi]
10020c8e:	jmp    0x10020c93
10020c90:	mov    esi,DWORD PTR [esi+0x8]
10020c93:	cmp    BYTE PTR [esi+0x2d],0x0
10020c97:	je     0x10020c77
10020c99:	mov    edx,DWORD PTR [ebp+0x8]
10020c9c:	test   al,al
10020c9e:	mov    ecx,DWORD PTR [ebp-0x4]
10020ca1:	mov    esi,ecx
10020ca3:	mov    DWORD PTR [ebp-0xc],esi
10020ca6:	mov    DWORD PTR [ebp-0x10],edx
10020ca9:	je     0x10020cdd
10020cab:	mov    eax,DWORD PTR [edx+0x4]
10020cae:	cmp    ecx,DWORD PTR [eax]
10020cb0:	jne    0x10020cd2
10020cb2:	push   DWORD PTR [ebp+0xc]
10020cb5:	mov    esi,edx
10020cb7:	push   0x1
10020cb9:	lea    eax,[ebp-0x10]
10020cbc:	push   eax
10020cbd:	call   0x10021282
10020cc2:	mov    ecx,DWORD PTR [eax]
10020cc4:	mov    eax,DWORD PTR [eax+0x4]
10020cc7:	mov    DWORD PTR [edi],ecx
10020cc9:	mov    DWORD PTR [edi+0x4],eax
10020ccc:	mov    BYTE PTR [edi+0x8],0x1
10020cd0:	jmp    0x10020d06
10020cd2:	lea    esi,[ebp-0x10]
10020cd5:	call   0x100216ff
10020cda:	mov    esi,DWORD PTR [ebp-0xc]
10020cdd:	mov    eax,DWORD PTR [ebp+0xc]
10020ce0:	lea    ebx,[esi+0xc]
10020ce3:	call   0x1001f095
10020ce8:	test   al,al
10020cea:	je     0x10020cfa
10020cec:	push   DWORD PTR [ebp+0xc]
10020cef:	mov    ecx,DWORD PTR [ebp-0x4]
10020cf2:	push   DWORD PTR [ebp-0x8]
10020cf5:	mov    esi,DWORD PTR [ebp+0x8]
10020cf8:	jmp    0x10020cb9
10020cfa:	mov    eax,DWORD PTR [ebp-0x10]
10020cfd:	mov    DWORD PTR [edi],eax
10020cff:	mov    DWORD PTR [edi+0x4],esi
10020d02:	mov    BYTE PTR [edi+0x8],0x0
10020d06:	pop    esi
10020d07:	mov    eax,edi
10020d09:	pop    ebx
10020d0a:	leave  
10020d0b:	ret    0x8
10020d0e:	push   ebp
10020d0f:	mov    ebp,esp
10020d11:	sub    esp,0x2c
10020d14:	push   ebx
10020d15:	push   esi
10020d16:	push   edi
10020d17:	mov    edi,ecx
10020d19:	mov    ebx,eax
10020d1b:	mov    eax,DWORD PTR [edi+0x4]
10020d1e:	mov    esi,DWORD PTR [eax+0x4]
10020d21:	mov    DWORD PTR [ebp-0x8],eax
10020d24:	jmp    0x10020d3c
10020d26:	lea    eax,[esi+0xc]
10020d29:	call   0x1001f095
10020d2e:	test   al,al
10020d30:	je     0x10020d39
10020d32:	mov    DWORD PTR [ebp-0x8],esi
10020d35:	mov    esi,DWORD PTR [esi]
10020d37:	jmp    0x10020d3c
10020d39:	mov    esi,DWORD PTR [esi+0x8]
10020d3c:	cmp    BYTE PTR [esi+0x2d],0x0
10020d40:	je     0x10020d26
10020d42:	push   ebx
10020d43:	lea    eax,[ebp-0x18]
10020d46:	push   eax
10020d47:	call   0x1002123d
10020d4c:	mov    ecx,DWORD PTR [eax+0x4]
10020d4f:	mov    ebx,DWORD PTR [eax]
10020d51:	mov    eax,DWORD PTR [eax+0x4]
10020d54:	and    DWORD PTR [ebp-0x4],0x0
10020d58:	mov    DWORD PTR [ebp-0x24],ecx
10020d5b:	mov    ecx,ebx
10020d5d:	mov    DWORD PTR [ebp-0x10],ecx
10020d60:	mov    DWORD PTR [ebp-0xc],eax
10020d63:	cmp    DWORD PTR [ebp-0x10],0x0
10020d67:	je     0x10020d6e
10020d69:	cmp    DWORD PTR [ebp-0x10],edi
10020d6c:	je     0x10020d73
10020d6e:	call   0x100435f0
10020d73:	mov    eax,DWORD PTR [ebp-0x8]
10020d76:	cmp    DWORD PTR [ebp-0xc],eax
10020d79:	je     0x10020d88
10020d7b:	inc    DWORD PTR [ebp-0x4]
10020d7e:	lea    esi,[ebp-0x10]
10020d81:	call   0x10021bde
10020d86:	jmp    0x10020d63
10020d88:	push   eax
10020d89:	push   edi
10020d8a:	push   DWORD PTR [ebp-0x24]
10020d8d:	push   ebx
10020d8e:	lea    ebx,[ebp-0x18]
10020d91:	call   0x10021191
10020d96:	mov    eax,DWORD PTR [ebp-0x4]
10020d99:	pop    edi
10020d9a:	pop    esi
10020d9b:	pop    ebx
10020d9c:	leave  
10020d9d:	ret    
10020d9e:	push   ebx
10020d9f:	lea    ebx,[eax+0xc]
10020da2:	cmp    DWORD PTR [ebx],0x0
10020da5:	push   esi
10020da6:	push   edi
10020da7:	je     0x10020db8
10020da9:	lea    esi,[eax+0x8]
10020dac:	cmp    DWORD PTR [esi],0x0
10020daf:	je     0x10020db8
10020db1:	xor    edi,edi
10020db3:	call   0x10007617
10020db8:	mov    eax,DWORD PTR [ebx]
10020dba:	test   eax,eax
10020dbc:	je     0x10020dd2
10020dbe:	mov    ecx,DWORD PTR [eax]
10020dc0:	push   eax
10020dc1:	call   DWORD PTR [ecx+0x1c]
10020dc4:	cmp    DWORD PTR [ebx],0x0
10020dc7:	je     0x10020dd2
10020dc9:	xor    edi,edi
10020dcb:	mov    esi,ebx
10020dcd:	call   0x10007617
10020dd2:	pop    edi
10020dd3:	pop    esi
10020dd4:	pop    ebx
10020dd5:	ret    
10020dd6:	push   ebp
10020dd7:	mov    ebp,esp
10020dd9:	sub    esp,0x18
10020ddc:	push   ebx
10020ddd:	mov    ebx,eax
10020ddf:	xor    eax,eax
10020de1:	cmp    DWORD PTR ds:0x10080f5c,eax
10020de7:	push   esi
10020de8:	push   edi
10020de9:	mov    DWORD PTR [ebp-0xc],eax
10020dec:	mov    DWORD PTR [ebp-0x8],eax
10020def:	jne    0x10020e07
10020df1:	mov    ecx,DWORD PTR ds:0x10080f58
10020df7:	push   ebx
10020df8:	push   0x1
10020dfa:	push   DWORD PTR [ebp+0x8]
10020dfd:	call   0x10021544
10020e02:	mov    eax,DWORD PTR [ebp+0x8]
10020e05:	jmp    0x10020e49
10020e07:	mov    eax,ds:0x10080f58
10020e0c:	mov    eax,DWORD PTR [eax]
10020e0e:	lea    edi,[ebp-0x14]
10020e11:	lea    esi,[ebp+0xc]
10020e14:	mov    DWORD PTR [ebp-0x10],eax
10020e17:	mov    DWORD PTR [ebp-0x14],0x10080f54
10020e1e:	call   0x10004b10
10020e23:	test   al,al
10020e25:	je     0x10020e50
10020e27:	mov    eax,DWORD PTR [ebx]
10020e29:	mov    ecx,DWORD PTR [ebp+0x10]
10020e2c:	cmp    eax,DWORD PTR [ecx+0xc]
10020e2f:	jb     0x10020df7
10020e31:	push   ebx
10020e32:	lea    ebx,[ebp-0x18]
10020e35:	call   0x100213cd
10020e3a:	mov    edx,DWORD PTR [eax]
10020e3c:	mov    ecx,DWORD PTR [ebp+0x8]
10020e3f:	mov    DWORD PTR [ecx],edx
10020e41:	mov    eax,DWORD PTR [eax+0x4]
10020e44:	mov    DWORD PTR [ecx+0x4],eax
10020e47:	mov    eax,ecx
10020e49:	pop    edi
10020e4a:	pop    esi
10020e4b:	pop    ebx
10020e4c:	leave  
10020e4d:	ret    0xc
10020e50:	mov    eax,ds:0x10080f58
10020e55:	lea    edi,[ebp-0x14]
10020e58:	lea    esi,[ebp+0xc]
10020e5b:	mov    DWORD PTR [ebp-0x10],eax
10020e5e:	mov    DWORD PTR [ebp-0x14],0x10080f54
10020e65:	call   0x10004b10
10020e6a:	test   al,al
10020e6c:	je     0x10020e85
10020e6e:	mov    eax,ds:0x10080f58
10020e73:	mov    ecx,DWORD PTR [eax+0x8]
10020e76:	mov    eax,DWORD PTR [ecx+0xc]
10020e79:	cmp    eax,DWORD PTR [ebx]
10020e7b:	jae    0x10020e31
10020e7d:	push   ebx
10020e7e:	push   0x0
10020e80:	jmp    0x10020dfa
10020e85:	mov    ecx,DWORD PTR [ebx]
10020e87:	mov    edi,DWORD PTR [ebp+0x10]
10020e8a:	cmp    DWORD PTR [edi+0xc],ecx
10020e8d:	jbe    0x10020ec1
10020e8f:	mov    eax,DWORD PTR [ebp+0xc]
10020e92:	lea    esi,[ebp-0xc]
10020e95:	mov    DWORD PTR [ebp-0xc],eax
10020e98:	mov    DWORD PTR [ebp-0x8],edi
10020e9b:	call   0x1002169e
10020ea0:	mov    ecx,DWORD PTR [ebx]
10020ea2:	mov    eax,DWORD PTR [eax+0x4]
10020ea5:	cmp    DWORD PTR [eax+0xc],ecx
10020ea8:	jae    0x10020ebe
10020eaa:	mov    ecx,DWORD PTR [ebp-0x8]
10020ead:	mov    eax,DWORD PTR [ecx+0x8]
10020eb0:	cmp    BYTE PTR [eax+0x21],0x0
10020eb4:	push   ebx
10020eb5:	jne    0x10020e7e
10020eb7:	mov    ecx,edi
10020eb9:	jmp    0x10020df8
10020ebe:	cmp    DWORD PTR [edi+0xc],ecx
10020ec1:	jae    0x10020e31
10020ec7:	mov    eax,DWORD PTR [ebp+0xc]
10020eca:	mov    DWORD PTR [ebp-0xc],eax
10020ecd:	mov    eax,ds:0x10080f58
10020ed2:	lea    esi,[ebp-0xc]
10020ed5:	mov    DWORD PTR [ebp-0x8],edi
10020ed8:	mov    DWORD PTR [ebp-0x10],eax
10020edb:	mov    DWORD PTR [ebp-0x14],0x10080f54
10020ee2:	call   0x10020fce
10020ee7:	lea    edi,[ebp-0x14]
10020eea:	mov    esi,eax
10020eec:	call   0x10004b10
10020ef1:	test   al,al
10020ef3:	mov    eax,DWORD PTR [ebp-0x8]
10020ef6:	jne    0x10020f03
10020ef8:	mov    ecx,DWORD PTR [ebx]
10020efa:	cmp    ecx,DWORD PTR [eax+0xc]
10020efd:	jae    0x10020e31
10020f03:	mov    ecx,DWORD PTR [ebp+0x10]
10020f06:	mov    edx,DWORD PTR [ecx+0x8]
10020f09:	cmp    BYTE PTR [edx+0x21],0x0
10020f0d:	push   ebx
10020f0e:	jne    0x10020e7e
10020f14:	mov    ecx,eax
10020f16:	jmp    0x10020df8
10020f1b:	mov    edx,DWORD PTR ds:0x10080f58
10020f21:	mov    ecx,DWORD PTR [edx+0x4]
10020f24:	cmp    BYTE PTR [ecx+0x21],0x0
10020f28:	jne    0x10020f46
10020f2a:	push   esi
10020f2b:	mov    esi,DWORD PTR [esp+0x8]
10020f2f:	mov    esi,DWORD PTR [esi]
10020f31:	cmp    DWORD PTR [ecx+0xc],esi
10020f34:	jae    0x10020f3b
10020f36:	mov    ecx,DWORD PTR [ecx+0x8]
10020f39:	jmp    0x10020f3f
10020f3b:	mov    edx,ecx
10020f3d:	mov    ecx,DWORD PTR [ecx]
10020f3f:	cmp    BYTE PTR [ecx+0x21],0x0
10020f43:	je     0x10020f31
10020f45:	pop    esi
10020f46:	mov    DWORD PTR [eax+0x4],edx
10020f49:	mov    DWORD PTR [eax],0x10080f54
10020f4f:	ret    0x4
10020f52:	mov    eax,DWORD PTR [ecx+0x8]
10020f55:	mov    edx,DWORD PTR [eax]
10020f57:	mov    DWORD PTR [ecx+0x8],edx
10020f5a:	mov    edx,DWORD PTR [eax]
10020f5c:	cmp    BYTE PTR [edx+0x21],0x0
10020f60:	jne    0x10020f65
10020f62:	mov    DWORD PTR [edx+0x4],ecx
10020f65:	mov    edx,DWORD PTR [ecx+0x4]
10020f68:	mov    DWORD PTR [eax+0x4],edx
10020f6b:	mov    edx,DWORD PTR ds:0x10080f58
10020f71:	cmp    ecx,DWORD PTR [edx+0x4]
10020f74:	jne    0x10020f7b
10020f76:	mov    DWORD PTR [edx+0x4],eax
10020f79:	jmp    0x10020f89
10020f7b:	mov    edx,DWORD PTR [ecx+0x4]
10020f7e:	cmp    ecx,DWORD PTR [edx]
10020f80:	jne    0x10020f86
10020f82:	mov    DWORD PTR [edx],eax
10020f84:	jmp    0x10020f89
10020f86:	mov    DWORD PTR [edx+0x8],eax
10020f89:	mov    DWORD PTR [eax],ecx
10020f8b:	mov    DWORD PTR [ecx+0x4],eax
10020f8e:	ret    
10020f8f:	mov    eax,DWORD PTR [ecx]
10020f91:	mov    edx,DWORD PTR [eax+0x8]
10020f94:	mov    DWORD PTR [ecx],edx
10020f96:	mov    edx,DWORD PTR [eax+0x8]
10020f99:	cmp    BYTE PTR [edx+0x21],0x0
10020f9d:	jne    0x10020fa2
10020f9f:	mov    DWORD PTR [edx+0x4],ecx
10020fa2:	mov    edx,DWORD PTR [ecx+0x4]
10020fa5:	mov    DWORD PTR [eax+0x4],edx
10020fa8:	mov    edx,DWORD PTR ds:0x10080f58
10020fae:	cmp    ecx,DWORD PTR [edx+0x4]
10020fb1:	jne    0x10020fb8
10020fb3:	mov    DWORD PTR [edx+0x4],eax
10020fb6:	jmp    0x10020fc7
10020fb8:	mov    edx,DWORD PTR [ecx+0x4]
10020fbb:	cmp    ecx,DWORD PTR [edx+0x8]
10020fbe:	jne    0x10020fc5
10020fc0:	mov    DWORD PTR [edx+0x8],eax
10020fc3:	jmp    0x10020fc7
10020fc5:	mov    DWORD PTR [edx],eax
10020fc7:	mov    DWORD PTR [eax+0x8],ecx
10020fca:	mov    DWORD PTR [ecx+0x4],eax
10020fcd:	ret    
10020fce:	push   ebx
10020fcf:	xor    ebx,ebx
10020fd1:	cmp    DWORD PTR [esi],ebx
10020fd3:	jne    0x10020fda
10020fd5:	call   0x100435f0
10020fda:	mov    eax,DWORD PTR [esi+0x4]
10020fdd:	cmp    BYTE PTR [eax+0x21],bl
10020fe0:	je     0x10020fe9
10020fe2:	call   0x100435f0
10020fe7:	jmp    0x10021017
10020fe9:	mov    ecx,DWORD PTR [eax+0x8]
10020fec:	cmp    BYTE PTR [ecx+0x21],bl
10020fef:	jne    0x1002100c
10020ff1:	jmp    0x10020ff5
10020ff3:	mov    ecx,eax
10020ff5:	mov    eax,DWORD PTR [ecx]
10020ff7:	cmp    BYTE PTR [eax+0x21],bl
10020ffa:	je     0x10020ff3
10020ffc:	mov    DWORD PTR [esi+0x4],ecx
10020fff:	jmp    0x10021017
10021001:	mov    ecx,DWORD PTR [esi+0x4]
10021004:	cmp    ecx,DWORD PTR [eax+0x8]
10021007:	jne    0x10021014
10021009:	mov    DWORD PTR [esi+0x4],eax
1002100c:	mov    eax,DWORD PTR [eax+0x4]
1002100f:	cmp    BYTE PTR [eax+0x21],bl
10021012:	je     0x10021001
10021014:	mov    DWORD PTR [esi+0x4],eax
10021017:	mov    eax,esi
10021019:	pop    ebx
1002101a:	ret    
1002101b:	push   0x0
1002101d:	mov    eax,0x10060384
10021022:	call   0x10059c75
10021027:	mov    edi,DWORD PTR [ebp+0x8]
1002102a:	and    DWORD PTR [edi+0x4],0x0
1002102e:	lea    esi,[edi+0x8]
10021031:	mov    DWORD PTR [edi],0x100706d0
10021037:	call   0x1001c14a
1002103c:	mov    DWORD PTR [esi],0x100707a0
10021042:	mov    DWORD PTR [esi+0x24],0x100707b4
10021049:	mov    DWORD PTR [esi+0x28],0x100707e0
10021050:	mov    DWORD PTR [esi+0x2c],0x10070808
10021057:	mov    DWORD PTR [esi+0x30],0x10070880
1002105e:	mov    DWORD PTR [esi+0x34],0x100708a8
10021065:	mov    DWORD PTR [esi+0x38],0x100708c0
1002106c:	mov    DWORD PTR [esi+0x40],0x100708d8
10021073:	mov    DWORD PTR [esi+0x44],0x100708e8
1002107a:	mov    DWORD PTR [esi+0x48],0x10070908
10021081:	mov    DWORD PTR [esi+0x4c],0x10070950
10021088:	mov    DWORD PTR [esi+0x50],edi
1002108b:	and    DWORD PTR [ebp-0x4],0x0
1002108f:	mov    ecx,DWORD PTR ds:0x10080c04
10021095:	mov    eax,DWORD PTR [ecx]
10021097:	call   DWORD PTR [eax+0x4]
1002109a:	mov    eax,edi
1002109c:	call   0x10059d4d
100210a1:	ret    0x4
100210a4:	push   0x4
100210a6:	mov    eax,0x1006035e
100210ab:	call   0x10059c75
100210b0:	mov    DWORD PTR [ebp-0x10],ecx
100210b3:	mov    DWORD PTR [ecx],0x100706d0
100210b9:	and    DWORD PTR [ebp-0x4],0x0
100210bd:	lea    esi,[ecx+0x8]
100210c0:	mov    DWORD PTR [ecx+0x4],0xc0000001
100210c7:	mov    ecx,esi
100210c9:	call   0x1001c77f
100210ce:	mov    ecx,DWORD PTR ds:0x10080c04
100210d4:	mov    eax,DWORD PTR [ecx]
100210d6:	call   DWORD PTR [eax+0x8]
100210d9:	or     DWORD PTR [ebp-0x4],0xffffffff
100210dd:	mov    eax,esi
100210df:	call   0x1001c20f
100210e4:	call   0x10059d4d
100210e9:	ret    
100210ea:	push   ebp
100210eb:	mov    ebp,esp
100210ed:	push   ebx
100210ee:	mov    ebx,DWORD PTR [ebp+0x10]
100210f1:	push   esi
100210f2:	xor    esi,esi
100210f4:	cmp    ebx,esi
100210f6:	jne    0x100210ff
100210f8:	mov    eax,0x80004003
100210fd:	jmp    0x1002112f
100210ff:	mov    eax,DWORD PTR [ebp+0xc]
10021102:	mov    DWORD PTR [ebx],esi
10021104:	call   0x100104b6
10021109:	test   eax,eax
1002110b:	mov    eax,DWORD PTR [ebp+0x8]
1002110e:	je     0x1002111a
10021110:	mov    DWORD PTR [ebx],eax
10021112:	mov    ecx,DWORD PTR [eax]
10021114:	push   eax
10021115:	call   DWORD PTR [ecx+0x4]
10021118:	jmp    0x1002112d
1002111a:	push   DWORD PTR [ebp+0xc]
1002111d:	add    eax,0x8
10021120:	push   eax
10021121:	mov    eax,0x100704a8
10021126:	call   0x100104da
1002112b:	mov    esi,eax
1002112d:	mov    eax,esi
1002112f:	pop    esi
10021130:	pop    ebx
10021131:	pop    ebp
10021132:	ret    0xc
10021135:	mov    eax,DWORD PTR [esp+0x4]
10021139:	mov    eax,DWORD PTR [eax+0x2c]
1002113c:	mov    ecx,DWORD PTR [eax]
1002113e:	push   eax
1002113f:	call   DWORD PTR [ecx+0x4]
10021142:	ret    0x4
10021145:	mov    eax,DWORD PTR [esp+0x4]
10021149:	mov    eax,DWORD PTR [eax+0x2c]
1002114c:	mov    ecx,DWORD PTR [eax]
1002114e:	push   eax
1002114f:	call   DWORD PTR [ecx+0x8]
10021152:	ret    0x4
10021155:	push   DWORD PTR [esp+0xc]
10021159:	mov    eax,DWORD PTR [esp+0x8]
1002115d:	mov    eax,DWORD PTR [eax+0x2c]
10021160:	push   DWORD PTR [esp+0xc]
10021164:	mov    ecx,DWORD PTR [eax]
10021166:	push   eax
10021167:	call   DWORD PTR [ecx]
10021169:	ret    0xc
1002116c:	mov    eax,DWORD PTR [ecx+0x50]
1002116f:	ret    
10021170:	push   esi
10021171:	mov    esi,ecx
10021173:	call   0x100210a4
10021178:	test   BYTE PTR [esp+0x8],0x1
1002117d:	je     0x10021186
1002117f:	push   esi
10021180:	call   0x100430d2
10021185:	pop    ecx
10021186:	mov    eax,esi
10021188:	pop    esi
10021189:	ret    0x4
1002118c:	jmp    0x1001c20f
10021191:	push   ebp
10021192:	mov    ebp,esp
10021194:	mov    eax,DWORD PTR [edi+0x4]
10021197:	sub    esp,0x14
1002119a:	cmp    DWORD PTR [ebp+0x8],0x0
1002119e:	push   esi
1002119f:	mov    esi,DWORD PTR [eax]
100211a1:	je     0x100211a8
100211a3:	cmp    DWORD PTR [ebp+0x8],edi
100211a6:	je     0x100211ad
100211a8:	call   0x100435f0
100211ad:	cmp    DWORD PTR [ebp+0xc],esi
100211b0:	jne    0x100211f5
100211b2:	cmp    DWORD PTR [ebp+0x10],0x0
100211b6:	mov    esi,DWORD PTR [edi+0x4]
100211b9:	je     0x100211c0
100211bb:	cmp    DWORD PTR [ebp+0x10],edi
100211be:	je     0x100211c5
100211c0:	call   0x100435f0
100211c5:	cmp    DWORD PTR [ebp+0x14],esi
100211c8:	jne    0x100211f5
100211ca:	mov    eax,DWORD PTR [edi+0x4]
100211cd:	push   DWORD PTR [eax+0x4]
100211d0:	mov    ecx,edi
100211d2:	call   0x10021b67
100211d7:	mov    eax,DWORD PTR [edi+0x4]
100211da:	mov    DWORD PTR [eax+0x4],eax
100211dd:	mov    eax,DWORD PTR [edi+0x4]
100211e0:	and    DWORD PTR [edi+0x8],0x0
100211e4:	mov    DWORD PTR [eax],eax
100211e6:	mov    eax,DWORD PTR [edi+0x4]
100211e9:	mov    DWORD PTR [eax+0x8],eax
100211ec:	mov    eax,DWORD PTR [edi+0x4]
100211ef:	mov    eax,DWORD PTR [eax]
100211f1:	mov    DWORD PTR [ebx],edi
100211f3:	jmp    0x10021233
100211f5:	mov    eax,DWORD PTR [ebp+0x8]
100211f8:	test   eax,eax
100211fa:	je     0x10021201
100211fc:	cmp    eax,DWORD PTR [ebp+0x10]
100211ff:	je     0x10021206
10021201:	call   0x100435f0
10021206:	mov    eax,DWORD PTR [ebp+0xc]
10021209:	cmp    eax,DWORD PTR [ebp+0x14]
1002120c:	mov    ecx,DWORD PTR [ebp+0x8]
1002120f:	je     0x10021231
10021211:	lea    esi,[ebp+0x8]
10021214:	mov    DWORD PTR [ebp-0x8],ecx
10021217:	mov    DWORD PTR [ebp-0x4],eax
1002121a:	call   0x10021bde
1002121f:	push   DWORD PTR [ebp-0x4]
10021222:	lea    eax,[ebp-0x10]
10021225:	push   DWORD PTR [ebp-0x8]
10021228:	push   eax
10021229:	push   edi
1002122a:	call   0x1002177e
1002122f:	jmp    0x100211f5
10021231:	mov    DWORD PTR [ebx],ecx
10021233:	mov    DWORD PTR [ebx+0x4],eax
10021236:	mov    eax,ebx
10021238:	pop    esi
10021239:	leave  
1002123a:	ret    0x10
1002123d:	push   ebp
1002123e:	mov    ebp,esp
10021240:	push   ecx
10021241:	mov    eax,DWORD PTR [edi+0x4]
10021244:	push   esi
10021245:	mov    esi,DWORD PTR [eax+0x4]
10021248:	cmp    BYTE PTR [esi+0x2d],0x0
1002124c:	mov    DWORD PTR [ebp-0x4],eax
1002124f:	jne    0x10021272
10021251:	push   ebx
10021252:	mov    eax,DWORD PTR [ebp+0xc]
10021255:	lea    ebx,[esi+0xc]
10021258:	call   0x1001f095
1002125d:	test   al,al
1002125f:	je     0x10021266
10021261:	mov    esi,DWORD PTR [esi+0x8]
10021264:	jmp    0x1002126b
10021266:	mov    DWORD PTR [ebp-0x4],esi
10021269:	mov    esi,DWORD PTR [esi]
1002126b:	cmp    BYTE PTR [esi+0x2d],0x0
1002126f:	je     0x10021252
10021271:	pop    ebx
10021272:	mov    eax,DWORD PTR [ebp+0x8]
10021275:	mov    ecx,DWORD PTR [ebp-0x4]
10021278:	mov    DWORD PTR [eax+0x4],ecx
1002127b:	mov    DWORD PTR [eax],edi
1002127d:	pop    esi
1002127e:	leave  
1002127f:	ret    0x8
10021282:	push   0x48
10021284:	mov    eax,0x100603a7
10021289:	call   0x10059c75
1002128e:	mov    edi,ecx
10021290:	cmp    DWORD PTR [esi+0x8],0x7fffffe
10021297:	jb     0x100212cb
10021299:	push   0x1006d04c
1002129e:	lea    ecx,[ebp-0x2c]
100212a1:	call   0x100011d1
100212a6:	and    DWORD PTR [ebp-0x4],0x0
100212aa:	lea    eax,[ebp-0x2c]
100212ad:	push   eax
100212ae:	lea    ecx,[ebp-0x54]
100212b1:	call   0x1000106e
100212b6:	push   0x10074ec0
100212bb:	lea    eax,[ebp-0x54]
100212be:	push   eax
100212bf:	mov    DWORD PTR [ebp-0x54],0x1006b96c
100212c6:	call   0x10047c54
100212cb:	mov    eax,DWORD PTR [esi+0x4]
100212ce:	mov    ecx,DWORD PTR [ebp+0x10]
100212d1:	push   eax
100212d2:	push   edi
100212d3:	push   eax
100212d4:	call   0x10021a96
100212d9:	inc    DWORD PTR [esi+0x8]
100212dc:	mov    ebx,eax
100212de:	mov    eax,DWORD PTR [esi+0x4]
100212e1:	cmp    edi,eax
100212e3:	jne    0x100212f2
100212e5:	mov    DWORD PTR [eax+0x4],ebx
100212e8:	mov    eax,DWORD PTR [esi+0x4]
100212eb:	mov    DWORD PTR [eax],ebx
100212ed:	mov    eax,DWORD PTR [esi+0x4]
100212f0:	jmp    0x10021310
100212f2:	cmp    BYTE PTR [ebp+0xc],0x0
100212f6:	je     0x10021305
100212f8:	mov    DWORD PTR [edi],ebx
100212fa:	mov    eax,DWORD PTR [esi+0x4]
100212fd:	cmp    edi,DWORD PTR [eax]
100212ff:	jne    0x10021313
10021301:	mov    DWORD PTR [eax],ebx
10021303:	jmp    0x10021313
10021305:	mov    DWORD PTR [edi+0x8],ebx
10021308:	mov    eax,DWORD PTR [esi+0x4]
1002130b:	cmp    edi,DWORD PTR [eax+0x8]
1002130e:	jne    0x10021313
10021310:	mov    DWORD PTR [eax+0x8],ebx
10021313:	mov    edi,ebx
10021315:	lea    eax,[ebx+0x4]
10021318:	jmp    0x100213a7
1002131d:	mov    ecx,DWORD PTR [eax]
1002131f:	mov    edx,DWORD PTR [ecx+0x4]
10021322:	cmp    ecx,DWORD PTR [edx]
10021324:	jne    0x1002135b
10021326:	mov    edx,DWORD PTR [edx+0x8]
10021329:	cmp    BYTE PTR [edx+0x2c],0x0
1002132d:	je     0x10021363
1002132f:	cmp    edi,DWORD PTR [ecx+0x8]
10021332:	jne    0x1002133c
10021334:	push   esi
10021335:	mov    edi,ecx
10021337:	call   0x10021a14
1002133c:	mov    eax,DWORD PTR [edi+0x4]
1002133f:	mov    BYTE PTR [eax+0x2c],0x1
10021343:	mov    eax,DWORD PTR [edi+0x4]
10021346:	mov    eax,DWORD PTR [eax+0x4]
10021349:	mov    BYTE PTR [eax+0x2c],0x0
1002134d:	mov    eax,DWORD PTR [edi+0x4]
10021350:	mov    ecx,DWORD PTR [eax+0x4]
10021353:	push   esi
10021354:	call   0x10021a54
10021359:	jmp    0x100213a4
1002135b:	mov    edx,DWORD PTR [edx]
1002135d:	cmp    BYTE PTR [edx+0x2c],0x0
10021361:	jne    0x1002137b
10021363:	mov    BYTE PTR [ecx+0x2c],0x1
10021367:	mov    BYTE PTR [edx+0x2c],0x1
1002136b:	mov    ecx,DWORD PTR [eax]
1002136d:	mov    ecx,DWORD PTR [ecx+0x4]
10021370:	mov    BYTE PTR [ecx+0x2c],0x0
10021374:	mov    eax,DWORD PTR [eax]
10021376:	mov    edi,DWORD PTR [eax+0x4]
10021379:	jmp    0x100213a4
1002137b:	cmp    edi,DWORD PTR [ecx]
1002137d:	jne    0x10021387
1002137f:	push   esi
10021380:	mov    edi,ecx
10021382:	call   0x10021a54
10021387:	mov    eax,DWORD PTR [edi+0x4]
1002138a:	mov    BYTE PTR [eax+0x2c],0x1
1002138e:	mov    eax,DWORD PTR [edi+0x4]
10021391:	mov    eax,DWORD PTR [eax+0x4]
10021394:	mov    BYTE PTR [eax+0x2c],0x0
10021398:	mov    eax,DWORD PTR [edi+0x4]
1002139b:	mov    ecx,DWORD PTR [eax+0x4]
1002139e:	push   esi
1002139f:	call   0x10021a14
100213a4:	lea    eax,[edi+0x4]
100213a7:	mov    ecx,DWORD PTR [eax]
100213a9:	cmp    BYTE PTR [ecx+0x2c],0x0
100213ad:	je     0x1002131d
100213b3:	mov    eax,DWORD PTR [esi+0x4]
100213b6:	mov    eax,DWORD PTR [eax+0x4]
100213b9:	mov    BYTE PTR [eax+0x2c],0x1
100213bd:	mov    eax,DWORD PTR [ebp+0x8]
100213c0:	mov    DWORD PTR [eax+0x4],ebx
100213c3:	mov    DWORD PTR [eax],esi
100213c5:	call   0x10059d4d
100213ca:	ret    0xc
100213cd:	push   ebp
100213ce:	mov    ebp,esp
100213d0:	sub    esp,0x1c
100213d3:	push   esi
100213d4:	mov    esi,DWORD PTR ds:0x10080f58
100213da:	mov    eax,DWORD PTR [esi+0x4]
100213dd:	cmp    BYTE PTR [eax+0x21],0x0
100213e1:	push   edi
100213e2:	mov    DWORD PTR [ebp-0xc],esi
100213e5:	mov    BYTE PTR [ebp-0x8],0x1
100213e9:	jne    0x1002140d
100213eb:	mov    ecx,DWORD PTR [ebp+0x8]
100213ee:	mov    edi,DWORD PTR [ecx]
100213f0:	cmp    edi,DWORD PTR [eax+0xc]
100213f3:	mov    DWORD PTR [ebp-0xc],eax
100213f6:	setb   BYTE PTR [ebp-0x8]
100213fa:	cmp    BYTE PTR [ebp-0x8],0x0
100213fe:	je     0x10021404
10021400:	mov    eax,DWORD PTR [eax]
10021402:	jmp    0x10021407
10021404:	mov    eax,DWORD PTR [eax+0x8]
10021407:	cmp    BYTE PTR [eax+0x21],0x0
1002140b:	je     0x100213f0
1002140d:	cmp    BYTE PTR [ebp-0x8],0x0
10021411:	mov    edi,DWORD PTR [ebp-0xc]
10021414:	mov    eax,0x10080f54
10021419:	mov    DWORD PTR [ebp-0x10],edi
1002141c:	mov    DWORD PTR [ebp-0x14],eax
1002141f:	je     0x10021464
10021421:	mov    ecx,DWORD PTR [esi]
10021423:	lea    edi,[ebp-0x1c]
10021426:	lea    esi,[ebp-0x14]
10021429:	mov    DWORD PTR [ebp-0x18],ecx
1002142c:	mov    DWORD PTR [ebp-0x1c],eax
1002142f:	call   0x10004b10
10021434:	test   al,al
10021436:	je     0x10021459
10021438:	push   DWORD PTR [ebp+0x8]
1002143b:	push   0x1
1002143d:	mov    ecx,DWORD PTR [ebp-0xc]
10021440:	lea    eax,[ebp-0x1c]
10021443:	push   eax
10021444:	call   0x10021544
10021449:	mov    ecx,DWORD PTR [eax]
1002144b:	mov    eax,DWORD PTR [eax+0x4]
1002144e:	mov    DWORD PTR [ebx],ecx
10021450:	mov    DWORD PTR [ebx+0x4],eax
10021453:	mov    BYTE PTR [ebx+0x8],0x1
10021457:	jmp    0x10021480
10021459:	lea    esi,[ebp-0x14]
1002145c:	call   0x1002169e
10021461:	mov    edi,DWORD PTR [ebp-0x10]
10021464:	mov    ecx,DWORD PTR [edi+0xc]
10021467:	mov    eax,DWORD PTR [ebp+0x8]
1002146a:	cmp    ecx,DWORD PTR [eax]
1002146c:	jae    0x10021474
1002146e:	push   eax
1002146f:	push   DWORD PTR [ebp-0x8]
10021472:	jmp    0x1002143d
10021474:	mov    eax,DWORD PTR [ebp-0x14]
10021477:	mov    DWORD PTR [ebx],eax
10021479:	mov    DWORD PTR [ebx+0x4],edi
1002147c:	mov    BYTE PTR [ebx+0x8],0x0
10021480:	pop    edi
10021481:	mov    eax,ebx
10021483:	pop    esi
10021484:	leave  
10021485:	ret    0x4
10021488:	push   ebp
10021489:	mov    ebp,esp
1002148b:	sub    esp,0x10
1002148e:	mov    eax,ds:0x10080f58
10021493:	mov    eax,DWORD PTR [eax]
10021495:	push   ebx
10021496:	push   esi
10021497:	push   edi
10021498:	mov    ebx,0x10080f54
1002149d:	lea    edi,[ebp-0xc]
100214a0:	lea    esi,[ebp+0xc]
100214a3:	mov    DWORD PTR [ebp-0x8],eax
100214a6:	mov    DWORD PTR [ebp-0xc],ebx
100214a9:	call   0x10004b10
100214ae:	test   al,al
100214b0:	je     0x10021520
100214b2:	mov    eax,ds:0x10080f58
100214b7:	lea    edi,[ebp-0xc]
100214ba:	lea    esi,[ebp+0x14]
100214bd:	mov    DWORD PTR [ebp-0x8],eax
100214c0:	mov    DWORD PTR [ebp-0xc],ebx
100214c3:	call   0x10004b10
100214c8:	test   al,al
100214ca:	je     0x10021520
100214cc:	mov    eax,ds:0x10080f58
100214d1:	push   DWORD PTR [eax+0x4]
100214d4:	mov    ecx,ebx
100214d6:	call   0x10021bac
100214db:	mov    eax,ds:0x10080f58
100214e0:	mov    DWORD PTR [eax+0x4],eax
100214e3:	mov    eax,ds:0x10080f58
100214e8:	and    DWORD PTR ds:0x10080f5c,0x0
100214ef:	mov    DWORD PTR [eax],eax
100214f1:	mov    eax,ds:0x10080f58
100214f6:	mov    DWORD PTR [eax+0x8],eax
100214f9:	mov    eax,ds:0x10080f58
100214fe:	mov    ecx,DWORD PTR [eax]
10021500:	mov    eax,DWORD PTR [ebp+0x8]
10021503:	mov    DWORD PTR [eax],ebx
10021505:	jmp    0x1002153a
10021507:	mov    edi,DWORD PTR [ebp+0xc]
1002150a:	mov    ebx,DWORD PTR [ebp+0x10]
1002150d:	lea    esi,[ebp+0xc]
10021510:	call   0x10020fce
10021515:	push   ebx
10021516:	push   edi
10021517:	lea    eax,[ebp-0xc]
1002151a:	push   eax
1002151b:	call   0x10020835
10021520:	lea    edi,[ebp+0x14]
10021523:	lea    esi,[ebp+0xc]
10021526:	call   0x10004b10
1002152b:	test   al,al
1002152d:	je     0x10021507
1002152f:	mov    ecx,DWORD PTR [ebp+0xc]
10021532:	mov    eax,DWORD PTR [ebp+0x8]
10021535:	mov    DWORD PTR [eax],ecx
10021537:	mov    ecx,DWORD PTR [ebp+0x10]
1002153a:	pop    edi
1002153b:	pop    esi
1002153c:	mov    DWORD PTR [eax+0x4],ecx
1002153f:	pop    ebx
10021540:	leave  
10021541:	ret    0x14
10021544:	push   0x48
10021546:	mov    eax,0x100603a7
1002154b:	call   0x10059c75
10021550:	mov    esi,ecx
10021552:	cmp    DWORD PTR ds:0x10080f5c,0xccccccb
1002155c:	jb     0x10021590
1002155e:	push   0x1006d04c
10021563:	lea    ecx,[ebp-0x2c]
10021566:	call   0x100011d1
1002156b:	and    DWORD PTR [ebp-0x4],0x0
1002156f:	lea    eax,[ebp-0x2c]
10021572:	push   eax
10021573:	lea    ecx,[ebp-0x54]
10021576:	call   0x1000106e
1002157b:	push   0x10074ec0
10021580:	lea    eax,[ebp-0x54]
10021583:	push   eax
10021584:	mov    DWORD PTR [ebp-0x54],0x1006b96c
1002158b:	call   0x10047c54
10021590:	push   DWORD PTR [ebp+0x10]
10021593:	mov    eax,ds:0x10080f58
10021598:	push   eax
10021599:	push   esi
1002159a:	push   eax
1002159b:	call   0x10021b2c
100215a0:	inc    DWORD PTR ds:0x10080f5c
100215a6:	mov    edi,eax
100215a8:	mov    eax,ds:0x10080f58
100215ad:	xor    bl,bl
100215af:	cmp    esi,eax
100215b1:	jne    0x100215c4
100215b3:	mov    DWORD PTR [eax+0x4],edi
100215b6:	mov    eax,ds:0x10080f58
100215bb:	mov    DWORD PTR [eax],edi
100215bd:	mov    eax,ds:0x10080f58
100215c2:	jmp    0x100215e5
100215c4:	cmp    BYTE PTR [ebp+0xc],bl
100215c7:	je     0x100215d8
100215c9:	mov    DWORD PTR [esi],edi
100215cb:	mov    eax,ds:0x10080f58
100215d0:	cmp    esi,DWORD PTR [eax]
100215d2:	jne    0x100215e8
100215d4:	mov    DWORD PTR [eax],edi
100215d6:	jmp    0x100215e8
100215d8:	mov    DWORD PTR [esi+0x8],edi
100215db:	mov    eax,ds:0x10080f58
100215e0:	cmp    esi,DWORD PTR [eax+0x8]
100215e3:	jne    0x100215e8
100215e5:	mov    DWORD PTR [eax+0x8],edi
100215e8:	mov    esi,edi
100215ea:	lea    eax,[edi+0x4]
100215ed:	jmp    0x10021673
100215f2:	mov    ecx,DWORD PTR [eax]
100215f4:	mov    edx,DWORD PTR [ecx+0x4]
100215f7:	cmp    ecx,DWORD PTR [edx]
100215f9:	jne    0x1002162c
100215fb:	mov    edx,DWORD PTR [edx+0x8]
100215fe:	cmp    BYTE PTR [edx+0x20],bl
10021601:	je     0x10021633
10021603:	cmp    esi,DWORD PTR [ecx+0x8]
10021606:	jne    0x1002160f
10021608:	mov    esi,ecx
1002160a:	call   0x10020f52
1002160f:	mov    eax,DWORD PTR [esi+0x4]
10021612:	mov    BYTE PTR [eax+0x20],0x1
10021616:	mov    eax,DWORD PTR [esi+0x4]
10021619:	mov    eax,DWORD PTR [eax+0x4]
1002161c:	mov    BYTE PTR [eax+0x20],bl
1002161f:	mov    eax,DWORD PTR [esi+0x4]
10021622:	mov    ecx,DWORD PTR [eax+0x4]
10021625:	call   0x10020f8f
1002162a:	jmp    0x10021670
1002162c:	mov    edx,DWORD PTR [edx]
1002162e:	cmp    BYTE PTR [edx+0x20],bl
10021631:	jne    0x1002164a
10021633:	mov    BYTE PTR [ecx+0x20],0x1
10021637:	mov    BYTE PTR [edx+0x20],0x1
1002163b:	mov    ecx,DWORD PTR [eax]
1002163d:	mov    ecx,DWORD PTR [ecx+0x4]
10021640:	mov    BYTE PTR [ecx+0x20],bl
10021643:	mov    eax,DWORD PTR [eax]
10021645:	mov    esi,DWORD PTR [eax+0x4]
10021648:	jmp    0x10021670
1002164a:	cmp    esi,DWORD PTR [ecx]
1002164c:	jne    0x10021655
1002164e:	mov    esi,ecx
10021650:	call   0x10020f8f
10021655:	mov    eax,DWORD PTR [esi+0x4]
10021658:	mov    BYTE PTR [eax+0x20],0x1
1002165c:	mov    eax,DWORD PTR [esi+0x4]
1002165f:	mov    eax,DWORD PTR [eax+0x4]
10021662:	mov    BYTE PTR [eax+0x20],bl
10021665:	mov    eax,DWORD PTR [esi+0x4]
10021668:	mov    ecx,DWORD PTR [eax+0x4]
1002166b:	call   0x10020f52
10021670:	lea    eax,[esi+0x4]
10021673:	mov    ecx,DWORD PTR [eax]
10021675:	cmp    BYTE PTR [ecx+0x20],bl
10021678:	je     0x100215f2
1002167e:	mov    eax,ds:0x10080f58
10021683:	mov    eax,DWORD PTR [eax+0x4]
10021686:	mov    BYTE PTR [eax+0x20],0x1
1002168a:	mov    eax,DWORD PTR [ebp+0x8]
1002168d:	mov    DWORD PTR [eax+0x4],edi
10021690:	mov    DWORD PTR [eax],0x10080f54
10021696:	call   0x10059d4d
1002169b:	ret    0xc
1002169e:	push   ebx
1002169f:	xor    ebx,ebx
100216a1:	cmp    DWORD PTR [esi],ebx
100216a3:	jne    0x100216aa
100216a5:	call   0x100435f0
100216aa:	mov    eax,DWORD PTR [esi+0x4]
100216ad:	cmp    BYTE PTR [eax+0x21],bl
100216b0:	je     0x100216bf
100216b2:	mov    eax,DWORD PTR [eax+0x8]
100216b5:	mov    DWORD PTR [esi+0x4],eax
100216b8:	cmp    BYTE PTR [eax+0x21],bl
100216bb:	je     0x100216fb
100216bd:	jmp    0x100216f1
100216bf:	mov    ecx,DWORD PTR [eax]
100216c1:	cmp    BYTE PTR [ecx+0x21],bl
100216c4:	jne    0x100216e1
100216c6:	jmp    0x100216ca
100216c8:	mov    ecx,eax
100216ca:	mov    eax,DWORD PTR [ecx+0x8]
100216cd:	cmp    BYTE PTR [eax+0x21],bl
100216d0:	je     0x100216c8
100216d2:	mov    DWORD PTR [esi+0x4],ecx
100216d5:	jmp    0x100216fb
100216d7:	mov    ecx,DWORD PTR [esi+0x4]
100216da:	cmp    ecx,DWORD PTR [eax]
100216dc:	jne    0x100216e9
100216de:	mov    DWORD PTR [esi+0x4],eax
100216e1:	mov    eax,DWORD PTR [eax+0x4]
100216e4:	cmp    BYTE PTR [eax+0x21],bl
100216e7:	je     0x100216d7
100216e9:	mov    ecx,DWORD PTR [esi+0x4]
100216ec:	cmp    BYTE PTR [ecx+0x21],bl
100216ef:	je     0x100216f8
100216f1:	call   0x100435f0
100216f6:	jmp    0x100216fb
100216f8:	mov    DWORD PTR [esi+0x4],eax
100216fb:	mov    eax,esi
100216fd:	pop    ebx
100216fe:	ret    
100216ff:	push   ebx
10021700:	xor    ebx,ebx
10021702:	cmp    DWORD PTR [esi],ebx
10021704:	jne    0x1002170b
10021706:	call   0x100435f0
1002170b:	mov    eax,DWORD PTR [esi+0x4]
1002170e:	cmp    BYTE PTR [eax+0x2d],bl
10021711:	je     0x10021720
10021713:	mov    eax,DWORD PTR [eax+0x8]
10021716:	mov    DWORD PTR [esi+0x4],eax
10021719:	cmp    BYTE PTR [eax+0x2d],bl
1002171c:	je     0x1002175c
1002171e:	jmp    0x10021752
10021720:	mov    ecx,DWORD PTR [eax]
10021722:	cmp    BYTE PTR [ecx+0x2d],bl
10021725:	jne    0x10021742
10021727:	jmp    0x1002172b
10021729:	mov    ecx,eax
1002172b:	mov    eax,DWORD PTR [ecx+0x8]
1002172e:	cmp    BYTE PTR [eax+0x2d],bl
10021731:	je     0x10021729
10021733:	mov    DWORD PTR [esi+0x4],ecx
10021736:	jmp    0x1002175c
10021738:	mov    ecx,DWORD PTR [esi+0x4]
1002173b:	cmp    ecx,DWORD PTR [eax]
1002173d:	jne    0x1002174a
1002173f:	mov    DWORD PTR [esi+0x4],eax
10021742:	mov    eax,DWORD PTR [eax+0x4]
10021745:	cmp    BYTE PTR [eax+0x2d],bl
10021748:	je     0x10021738
1002174a:	mov    ecx,DWORD PTR [esi+0x4]
1002174d:	cmp    BYTE PTR [ecx+0x2d],bl
10021750:	je     0x10021759
10021752:	call   0x100435f0
10021757:	jmp    0x1002175c
10021759:	mov    DWORD PTR [esi+0x4],eax
1002175c:	mov    eax,esi
1002175e:	pop    ebx
1002175f:	ret    
10021760:	push   esi
10021761:	mov    esi,ecx
10021763:	mov    eax,esi
10021765:	call   0x1001c20f
1002176a:	test   BYTE PTR [esp+0x8],0x1
1002176f:	je     0x10021778
10021771:	push   esi
10021772:	call   0x100430d2
10021777:	pop    ecx
10021778:	mov    eax,esi
1002177a:	pop    esi
1002177b:	ret    0x4
1002177e:	push   0x44
10021780:	mov    eax,0x10060338
10021785:	call   0x10059c75
1002178a:	mov    edi,DWORD PTR [ebp+0x14]
1002178d:	cmp    BYTE PTR [edi+0x2d],0x0
10021791:	je     0x100217c5
10021793:	push   0x1006ccec
10021798:	lea    ecx,[ebp-0x28]
1002179b:	call   0x100011d1
100217a0:	and    DWORD PTR [ebp-0x4],0x0
100217a4:	lea    eax,[ebp-0x28]
100217a7:	push   eax
100217a8:	lea    ecx,[ebp-0x50]
100217ab:	call   0x1000106e
100217b0:	push   0x10074de0
100217b5:	lea    eax,[ebp-0x50]
100217b8:	push   eax
100217b9:	mov    DWORD PTR [ebp-0x50],0x1006b978
100217c0:	call   0x10047c54
100217c5:	lea    esi,[ebp+0x10]
100217c8:	call   0x10021bde
100217cd:	mov    ecx,DWORD PTR [edi]
100217cf:	cmp    BYTE PTR [ecx+0x2d],0x0
100217d3:	je     0x100217da
100217d5:	mov    ebx,DWORD PTR [edi+0x8]
100217d8:	jmp    0x100217f1
100217da:	mov    eax,DWORD PTR [edi+0x8]
100217dd:	cmp    BYTE PTR [eax+0x2d],0x0
100217e1:	je     0x100217e7
100217e3:	mov    ebx,ecx
100217e5:	jmp    0x100217f1
100217e7:	mov    eax,DWORD PTR [ebp+0x14]
100217ea:	cmp    eax,edi
100217ec:	mov    ebx,DWORD PTR [eax+0x8]
100217ef:	jne    0x10021867
100217f1:	cmp    BYTE PTR [ebx+0x2d],0x0
100217f5:	mov    esi,DWORD PTR [edi+0x4]
100217f8:	jne    0x100217fd
100217fa:	mov    DWORD PTR [ebx+0x4],esi
100217fd:	mov    ecx,DWORD PTR [ebp+0x8]
10021800:	mov    eax,DWORD PTR [ecx+0x4]
10021803:	cmp    DWORD PTR [eax+0x4],edi
10021806:	jne    0x1002180d
10021808:	mov    DWORD PTR [eax+0x4],ebx
1002180b:	jmp    0x10021818
1002180d:	cmp    DWORD PTR [esi],edi
1002180f:	jne    0x10021815
10021811:	mov    DWORD PTR [esi],ebx
10021813:	jmp    0x10021818
10021815:	mov    DWORD PTR [esi+0x8],ebx
10021818:	mov    edx,DWORD PTR [ecx+0x4]
1002181b:	cmp    DWORD PTR [edx],edi
1002181d:	jne    0x1002183b
1002181f:	cmp    BYTE PTR [ebx+0x2d],0x0
10021823:	je     0x10021829
10021825:	mov    ecx,esi
10021827:	jmp    0x10021839
10021829:	mov    eax,DWORD PTR [ebx]
1002182b:	mov    ecx,ebx
1002182d:	jmp    0x10021833
1002182f:	mov    ecx,eax
10021831:	mov    eax,DWORD PTR [ecx]
10021833:	cmp    BYTE PTR [eax+0x2d],0x0
10021837:	je     0x1002182f
10021839:	mov    DWORD PTR [edx],ecx
1002183b:	mov    eax,DWORD PTR [ebp+0x8]
1002183e:	mov    edx,DWORD PTR [eax+0x4]
10021841:	cmp    DWORD PTR [edx+0x8],edi
10021844:	jne    0x100218c1
10021846:	cmp    BYTE PTR [ebx+0x2d],0x0
1002184a:	je     0x10021850
1002184c:	mov    ecx,esi
1002184e:	jmp    0x10021862
10021850:	mov    eax,DWORD PTR [ebx+0x8]
10021853:	mov    ecx,ebx
10021855:	jmp    0x1002185c
10021857:	mov    ecx,eax
10021859:	mov    eax,DWORD PTR [ecx+0x8]
1002185c:	cmp    BYTE PTR [eax+0x2d],0x0
10021860:	je     0x10021857
10021862:	mov    DWORD PTR [edx+0x8],ecx
10021865:	jmp    0x100218c1
10021867:	mov    DWORD PTR [ecx+0x4],eax
1002186a:	mov    ecx,DWORD PTR [edi]
1002186c:	mov    DWORD PTR [eax],ecx
1002186e:	cmp    eax,DWORD PTR [edi+0x8]
10021871:	jne    0x10021877
10021873:	mov    esi,eax
10021875:	jmp    0x10021891
10021877:	cmp    BYTE PTR [ebx+0x2d],0x0
1002187b:	mov    esi,DWORD PTR [eax+0x4]
1002187e:	jne    0x10021883
10021880:	mov    DWORD PTR [ebx+0x4],esi
10021883:	mov    DWORD PTR [esi],ebx
10021885:	mov    ecx,DWORD PTR [edi+0x8]
10021888:	mov    DWORD PTR [eax+0x8],ecx
1002188b:	mov    ecx,DWORD PTR [edi+0x8]
1002188e:	mov    DWORD PTR [ecx+0x4],eax
10021891:	mov    ecx,DWORD PTR [ebp+0x8]
10021894:	mov    ecx,DWORD PTR [ecx+0x4]
10021897:	cmp    DWORD PTR [ecx+0x4],edi
1002189a:	jne    0x100218a1
1002189c:	mov    DWORD PTR [ecx+0x4],eax
1002189f:	jmp    0x100218af
100218a1:	mov    ecx,DWORD PTR [edi+0x4]
100218a4:	cmp    DWORD PTR [ecx],edi
100218a6:	jne    0x100218ac
100218a8:	mov    DWORD PTR [ecx],eax
100218aa:	jmp    0x100218af
100218ac:	mov    DWORD PTR [ecx+0x8],eax
100218af:	mov    ecx,DWORD PTR [edi+0x4]
100218b2:	mov    DWORD PTR [eax+0x4],ecx
100218b5:	mov    dl,BYTE PTR [edi+0x2c]
100218b8:	mov    cl,BYTE PTR [eax+0x2c]
100218bb:	mov    BYTE PTR [eax+0x2c],dl
100218be:	mov    BYTE PTR [edi+0x2c],cl
100218c1:	cmp    BYTE PTR [edi+0x2c],0x1
100218c5:	jne    0x100219dd
100218cb:	jmp    0x10021991
100218d0:	cmp    BYTE PTR [ebx+0x2c],0x1
100218d4:	jne    0x100219d9
100218da:	mov    ecx,DWORD PTR [esi]
100218dc:	cmp    ebx,ecx
100218de:	jne    0x10021957
100218e0:	mov    ecx,DWORD PTR [esi+0x8]
100218e3:	cmp    BYTE PTR [ecx+0x2c],0x0
100218e7:	jne    0x100218fe
100218e9:	push   DWORD PTR [ebp+0x8]
100218ec:	mov    BYTE PTR [ecx+0x2c],0x1
100218f0:	mov    ecx,esi
100218f2:	mov    BYTE PTR [esi+0x2c],0x0
100218f6:	call   0x10021a14
100218fb:	mov    ecx,DWORD PTR [esi+0x8]
100218fe:	cmp    BYTE PTR [ecx+0x2d],0x0
10021902:	jne    0x1002198c
10021908:	mov    eax,DWORD PTR [ecx]
1002190a:	cmp    BYTE PTR [eax+0x2c],0x1
1002190e:	jne    0x10021919
10021910:	mov    eax,DWORD PTR [ecx+0x8]
10021913:	cmp    BYTE PTR [eax+0x2c],0x1
10021917:	je     0x10021988
10021919:	mov    eax,DWORD PTR [ecx+0x8]
1002191c:	cmp    BYTE PTR [eax+0x2c],0x1
10021920:	jne    0x10021937
10021922:	mov    eax,DWORD PTR [ecx]
10021924:	push   DWORD PTR [ebp+0x8]
10021927:	mov    BYTE PTR [eax+0x2c],0x1
1002192b:	mov    BYTE PTR [ecx+0x2c],0x0
1002192f:	call   0x10021a54
10021934:	mov    ecx,DWORD PTR [esi+0x8]
10021937:	mov    al,BYTE PTR [esi+0x2c]
1002193a:	push   DWORD PTR [ebp+0x8]
1002193d:	mov    BYTE PTR [ecx+0x2c],al
10021940:	mov    BYTE PTR [esi+0x2c],0x1
10021944:	mov    eax,DWORD PTR [ecx+0x8]
10021947:	mov    ecx,esi
10021949:	mov    BYTE PTR [eax+0x2c],0x1
1002194d:	call   0x10021a14
10021952:	jmp    0x100219d9
10021957:	cmp    BYTE PTR [ecx+0x2c],0x0
1002195b:	jne    0x10021971
1002195d:	push   DWORD PTR [ebp+0x8]
10021960:	mov    BYTE PTR [ecx+0x2c],0x1
10021964:	mov    ecx,esi
10021966:	mov    BYTE PTR [esi+0x2c],0x0
1002196a:	call   0x10021a54
1002196f:	mov    ecx,DWORD PTR [esi]
10021971:	cmp    BYTE PTR [ecx+0x2d],0x0
10021975:	jne    0x1002198c
10021977:	mov    eax,DWORD PTR [ecx+0x8]
1002197a:	cmp    BYTE PTR [eax+0x2c],0x1
1002197e:	jne    0x100219a2
10021980:	mov    eax,DWORD PTR [ecx]
10021982:	cmp    BYTE PTR [eax+0x2c],0x1
10021986:	jne    0x100219a2
10021988:	mov    BYTE PTR [ecx+0x2c],0x0
1002198c:	mov    ebx,esi
1002198e:	mov    esi,DWORD PTR [esi+0x4]
10021991:	mov    eax,DWORD PTR [ebp+0x8]
10021994:	mov    eax,DWORD PTR [eax+0x4]
10021997:	cmp    ebx,DWORD PTR [eax+0x4]
1002199a:	jne    0x100218d0
100219a0:	jmp    0x100219d9
100219a2:	mov    eax,DWORD PTR [ecx]
100219a4:	cmp    BYTE PTR [eax+0x2c],0x1
100219a8:	jne    0x100219bf
100219aa:	mov    eax,DWORD PTR [ecx+0x8]
100219ad:	push   DWORD PTR [ebp+0x8]
100219b0:	mov    BYTE PTR [eax+0x2c],0x1
100219b4:	mov    BYTE PTR [ecx+0x2c],0x0
100219b8:	call   0x10021a14
100219bd:	mov    ecx,DWORD PTR [esi]
100219bf:	mov    al,BYTE PTR [esi+0x2c]
100219c2:	push   DWORD PTR [ebp+0x8]
100219c5:	mov    BYTE PTR [ecx+0x2c],al
100219c8:	mov    BYTE PTR [esi+0x2c],0x1
100219cc:	mov    eax,DWORD PTR [ecx]
100219ce:	mov    ecx,esi
100219d0:	mov    BYTE PTR [eax+0x2c],0x1
100219d4:	call   0x10021a54
100219d9:	mov    BYTE PTR [ebx+0x2c],0x1
100219dd:	push   0x1
100219df:	lea    esi,[edi+0xc]
100219e2:	xor    ebx,ebx
100219e4:	call   0x100051f3
100219e9:	push   edi
100219ea:	call   0x100430d2
100219ef:	pop    ecx
100219f0:	mov    ecx,DWORD PTR [ebp+0x8]
100219f3:	mov    eax,DWORD PTR [ecx+0x8]
100219f6:	test   eax,eax
100219f8:	jbe    0x100219fe
100219fa:	dec    eax
100219fb:	mov    DWORD PTR [ecx+0x8],eax
100219fe:	mov    ecx,DWORD PTR [ebp+0x10]
10021a01:	mov    eax,DWORD PTR [ebp+0xc]
10021a04:	mov    DWORD PTR [eax],ecx
10021a06:	mov    ecx,DWORD PTR [ebp+0x14]
10021a09:	mov    DWORD PTR [eax+0x4],ecx
10021a0c:	call   0x10059d4d
10021a11:	ret    0x10
10021a14:	mov    eax,DWORD PTR [ecx+0x8]
10021a17:	mov    edx,DWORD PTR [eax]
10021a19:	mov    DWORD PTR [ecx+0x8],edx
10021a1c:	mov    edx,DWORD PTR [eax]
10021a1e:	cmp    BYTE PTR [edx+0x2d],0x0
10021a22:	jne    0x10021a27
10021a24:	mov    DWORD PTR [edx+0x4],ecx
10021a27:	mov    edx,DWORD PTR [ecx+0x4]
10021a2a:	mov    DWORD PTR [eax+0x4],edx
10021a2d:	mov    edx,DWORD PTR [esp+0x4]
10021a31:	mov    edx,DWORD PTR [edx+0x4]
10021a34:	cmp    ecx,DWORD PTR [edx+0x4]
10021a37:	jne    0x10021a3e
10021a39:	mov    DWORD PTR [edx+0x4],eax
10021a3c:	jmp    0x10021a4c
10021a3e:	mov    edx,DWORD PTR [ecx+0x4]
10021a41:	cmp    ecx,DWORD PTR [edx]
10021a43:	jne    0x10021a49
10021a45:	mov    DWORD PTR [edx],eax
10021a47:	jmp    0x10021a4c
10021a49:	mov    DWORD PTR [edx+0x8],eax
10021a4c:	mov    DWORD PTR [eax],ecx
10021a4e:	mov    DWORD PTR [ecx+0x4],eax
10021a51:	ret    0x4
10021a54:	mov    eax,DWORD PTR [ecx]
10021a56:	mov    edx,DWORD PTR [eax+0x8]
10021a59:	mov    DWORD PTR [ecx],edx
10021a5b:	mov    edx,DWORD PTR [eax+0x8]
10021a5e:	cmp    BYTE PTR [edx+0x2d],0x0
10021a62:	jne    0x10021a67
10021a64:	mov    DWORD PTR [edx+0x4],ecx
10021a67:	mov    edx,DWORD PTR [ecx+0x4]
10021a6a:	mov    DWORD PTR [eax+0x4],edx
10021a6d:	mov    edx,DWORD PTR [esp+0x4]
10021a71:	mov    edx,DWORD PTR [edx+0x4]
10021a74:	cmp    ecx,DWORD PTR [edx+0x4]
10021a77:	jne    0x10021a7e
10021a79:	mov    DWORD PTR [edx+0x4],eax
10021a7c:	jmp    0x10021a8d
10021a7e:	mov    edx,DWORD PTR [ecx+0x4]
10021a81:	cmp    ecx,DWORD PTR [edx+0x8]
10021a84:	jne    0x10021a8b
10021a86:	mov    DWORD PTR [edx+0x8],eax
10021a89:	jmp    0x10021a8d
10021a8b:	mov    DWORD PTR [edx],eax
10021a8d:	mov    DWORD PTR [eax+0x8],ecx
10021a90:	mov    DWORD PTR [ecx+0x4],eax
10021a93:	ret    0x4
10021a96:	push   0x8
10021a98:	mov    eax,0x10060315
10021a9d:	call   0x10059ca8
10021aa2:	mov    ebx,ecx
10021aa4:	push   0x30
10021aa6:	call   0x100436de
10021aab:	mov    edi,eax
10021aad:	pop    ecx
10021aae:	mov    DWORD PTR [ebp-0x14],edi
10021ab1:	test   edi,edi
10021ab3:	mov    DWORD PTR [ebp-0x4],0x1
10021aba:	je     0x10021ae5
10021abc:	mov    eax,DWORD PTR [ebp+0x8]
10021abf:	mov    DWORD PTR [edi],eax
10021ac1:	mov    eax,DWORD PTR [ebp+0xc]
10021ac4:	mov    DWORD PTR [edi+0x4],eax
10021ac7:	mov    eax,DWORD PTR [ebp+0x10]
10021aca:	mov    DWORD PTR [edi+0x8],eax
10021acd:	lea    esi,[edi+0xc]
10021ad0:	mov    eax,ebx
10021ad2:	call   0x10004b2b
10021ad7:	mov    eax,DWORD PTR [ebx+0x1c]
10021ada:	mov    DWORD PTR [esi+0x1c],eax
10021add:	mov    BYTE PTR [edi+0x2c],0x0
10021ae1:	mov    BYTE PTR [edi+0x2d],0x0
10021ae5:	mov    eax,edi
10021ae7:	call   0x10059d4d
10021aec:	ret    0xc
10021aef:	push   DWORD PTR [ebp-0x14]
10021af2:	call   0x100430d2
10021af7:	pop    ecx
10021af8:	push   0x0
10021afa:	push   0x0
10021afc:	call   0x10047c54
10021b01:	int3   
10021b02:	push   0x24
10021b04:	call   0x100436de
10021b09:	xor    edx,edx
10021b0b:	cmp    eax,edx
10021b0d:	pop    ecx
10021b0e:	je     0x10021b12
10021b10:	mov    DWORD PTR [eax],edx
10021b12:	lea    ecx,[eax+0x4]
10021b15:	cmp    ecx,edx
10021b17:	je     0x10021b1b
10021b19:	mov    DWORD PTR [ecx],edx
10021b1b:	lea    ecx,[eax+0x8]
10021b1e:	cmp    ecx,edx
10021b20:	je     0x10021b24
10021b22:	mov    DWORD PTR [ecx],edx
10021b24:	mov    BYTE PTR [eax+0x20],0x1
10021b28:	mov    BYTE PTR [eax+0x21],dl
10021b2b:	ret    
10021b2c:	push   0x24
10021b2e:	call   0x100436de
10021b33:	test   eax,eax
10021b35:	pop    ecx
10021b36:	je     0x10021b64
10021b38:	mov    ecx,DWORD PTR [esp+0x4]
10021b3c:	push   esi
10021b3d:	mov    esi,DWORD PTR [esp+0x14]
10021b41:	mov    DWORD PTR [eax],ecx
10021b43:	mov    ecx,DWORD PTR [esp+0xc]
10021b47:	push   edi
10021b48:	mov    DWORD PTR [eax+0x4],ecx
10021b4b:	mov    ecx,DWORD PTR [esp+0x14]
10021b4f:	push   0x5
10021b51:	mov    DWORD PTR [eax+0x8],ecx
10021b54:	pop    ecx
10021b55:	lea    edi,[eax+0xc]
10021b58:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10021b5a:	pop    edi
10021b5b:	mov    BYTE PTR [eax+0x20],0x0
10021b5f:	mov    BYTE PTR [eax+0x21],0x0
10021b63:	pop    esi
10021b64:	ret    0x10
10021b67:	push   ecx
10021b68:	push   ebp
10021b69:	mov    ebp,DWORD PTR [esp+0xc]
10021b6d:	cmp    BYTE PTR [ebp+0x2d],0x0
10021b71:	push   edi
10021b72:	mov    DWORD PTR [esp+0x8],ecx
10021b76:	mov    edi,ebp
10021b78:	jne    0x10021ba6
10021b7a:	push   ebx
10021b7b:	push   esi
10021b7c:	push   DWORD PTR [edi+0x8]
10021b7f:	mov    ecx,DWORD PTR [esp+0x14]
10021b83:	call   0x10021b67
10021b88:	mov    edi,DWORD PTR [edi]
10021b8a:	push   0x1
10021b8c:	lea    esi,[ebp+0xc]
10021b8f:	xor    ebx,ebx
10021b91:	call   0x100051f3
10021b96:	push   ebp
10021b97:	call   0x100430d2
10021b9c:	cmp    BYTE PTR [edi+0x2d],bl
10021b9f:	pop    ecx
10021ba0:	mov    ebp,edi
10021ba2:	je     0x10021b7c
10021ba4:	pop    esi
10021ba5:	pop    ebx
10021ba6:	pop    edi
10021ba7:	pop    ebp
10021ba8:	pop    ecx
10021ba9:	ret    0x4
10021bac:	push   ebx
10021bad:	push   esi
10021bae:	push   edi
10021baf:	mov    edi,DWORD PTR [esp+0x10]
10021bb3:	cmp    BYTE PTR [edi+0x21],0x0
10021bb7:	mov    ebx,ecx
10021bb9:	mov    esi,edi
10021bbb:	jne    0x10021bd8
10021bbd:	push   DWORD PTR [esi+0x8]
10021bc0:	mov    ecx,ebx
10021bc2:	call   0x10021bac
10021bc7:	mov    esi,DWORD PTR [esi]
10021bc9:	push   edi
10021bca:	call   0x100430d2
10021bcf:	cmp    BYTE PTR [esi+0x21],0x0
10021bd3:	pop    ecx
10021bd4:	mov    edi,esi
10021bd6:	je     0x10021bbd
10021bd8:	pop    edi
10021bd9:	pop    esi
10021bda:	pop    ebx
10021bdb:	ret    0x4
10021bde:	push   ebx
10021bdf:	xor    ebx,ebx
10021be1:	cmp    DWORD PTR [esi],ebx
10021be3:	jne    0x10021bea
10021be5:	call   0x100435f0
10021bea:	mov    eax,DWORD PTR [esi+0x4]
10021bed:	cmp    BYTE PTR [eax+0x2d],bl
10021bf0:	je     0x10021bf9
10021bf2:	call   0x100435f0
10021bf7:	jmp    0x10021c27
10021bf9:	mov    ecx,DWORD PTR [eax+0x8]
10021bfc:	cmp    BYTE PTR [ecx+0x2d],bl
10021bff:	jne    0x10021c1c
10021c01:	jmp    0x10021c05
10021c03:	mov    ecx,eax
10021c05:	mov    eax,DWORD PTR [ecx]
10021c07:	cmp    BYTE PTR [eax+0x2d],bl
10021c0a:	je     0x10021c03
10021c0c:	mov    DWORD PTR [esi+0x4],ecx
10021c0f:	jmp    0x10021c27
10021c11:	mov    ecx,DWORD PTR [esi+0x4]
10021c14:	cmp    ecx,DWORD PTR [eax+0x8]
10021c17:	jne    0x10021c24
10021c19:	mov    DWORD PTR [esi+0x4],eax
10021c1c:	mov    eax,DWORD PTR [eax+0x4]
10021c1f:	cmp    BYTE PTR [eax+0x2d],bl
10021c22:	je     0x10021c11
10021c24:	mov    DWORD PTR [esi+0x4],eax
10021c27:	mov    eax,esi
10021c29:	pop    ebx
10021c2a:	ret    
10021c2b:	push   ebp
10021c2c:	mov    ebp,esp
10021c2e:	push   ecx
10021c2f:	push   ecx
10021c30:	push   ebx
10021c31:	mov    eax,0x10080a40
10021c36:	push   esi
10021c37:	push   eax
10021c38:	xor    ebx,ebx
10021c3a:	mov    DWORD PTR [ebp-0x8],eax
10021c3d:	call   DWORD PTR ds:0x100660f0
10021c43:	mov    esi,DWORD PTR ds:0x10080a58
10021c49:	test   esi,esi
10021c4b:	mov    BYTE PTR [ebp-0x4],0x1
10021c4f:	je     0x10021c7c
10021c51:	call   DWORD PTR ds:0x10066160
10021c57:	xor    ecx,ecx
10021c59:	cmp    DWORD PTR [esi+0x4],eax
10021c5c:	je     0x10021c69
10021c5e:	mov    ecx,esi
10021c60:	mov    esi,DWORD PTR [esi+0x8]
10021c63:	test   esi,esi
10021c65:	jne    0x10021c59
10021c67:	jmp    0x10021c7c
10021c69:	test   ecx,ecx
10021c6b:	mov    eax,DWORD PTR [esi+0x8]
10021c6e:	jne    0x10021c77
10021c70:	mov    ds:0x10080a58,eax
10021c75:	jmp    0x10021c7a
10021c77:	mov    DWORD PTR [ecx+0x8],eax
10021c7a:	mov    ebx,DWORD PTR [esi]
10021c7c:	lea    ecx,[ebp-0x8]
10021c7f:	call   0x10010e45
10021c84:	test   ebx,ebx
10021c86:	jne    0x10021c8c
10021c88:	xor    eax,eax
10021c8a:	jmp    0x10021cbd
10021c8c:	mov    esi,DWORD PTR [ebp+0x8]
10021c8f:	mov    eax,DWORD PTR [ebx]
10021c91:	push   edi
10021c92:	push   ebx
10021c93:	mov    ecx,ebx
10021c95:	mov    DWORD PTR [ebx+0x4],esi
10021c98:	call   DWORD PTR [eax+0x8]
10021c9b:	lea    edi,[ebx+0x8]
10021c9e:	call   0x1001bdf6
10021ca3:	mov    ebx,DWORD PTR [ebx+0x14]
10021ca6:	push   ebx
10021ca7:	push   0xfffffffc
10021ca9:	push   esi
10021caa:	call   DWORD PTR ds:0x10066358
10021cb0:	push   DWORD PTR [ebp+0x14]
10021cb3:	push   DWORD PTR [ebp+0x10]
10021cb6:	push   DWORD PTR [ebp+0xc]
10021cb9:	push   esi
10021cba:	call   ebx
10021cbc:	pop    edi
10021cbd:	pop    esi
10021cbe:	pop    ebx
10021cbf:	leave  
10021cc0:	ret    0x10
10021cc3:	push   ebp
10021cc4:	mov    ebp,esp
10021cc6:	sub    esp,0x24
10021cc9:	mov    ecx,DWORD PTR [ebp+0x14]
10021ccc:	push   ebx
10021ccd:	mov    ebx,DWORD PTR [ebp+0x10]
10021cd0:	push   esi
10021cd1:	mov    esi,DWORD PTR [ebp+0x8]
10021cd4:	mov    edx,DWORD PTR [esi+0x18]
10021cd7:	mov    eax,DWORD PTR [esi+0x4]
10021cda:	push   edi
10021cdb:	mov    edi,DWORD PTR [ebp+0xc]
10021cde:	mov    DWORD PTR [ebp-0x18],ecx
10021ce1:	xor    ecx,ecx
10021ce3:	push   ecx
10021ce4:	mov    DWORD PTR [ebp-0x14],ecx
10021ce7:	mov    DWORD PTR [ebp-0xc],ecx
10021cea:	mov    DWORD PTR [ebp-0x10],ecx
10021ced:	lea    ecx,[ebp+0x8]
10021cf0:	push   ecx
10021cf1:	push   DWORD PTR [ebp+0x14]
10021cf4:	mov    DWORD PTR [ebp+0xc],edx
10021cf7:	push   ebx
10021cf8:	lea    edx,[ebp-0x24]
10021cfb:	push   edi
10021cfc:	mov    DWORD PTR [esi+0x18],edx
10021cff:	mov    edx,DWORD PTR [esi]
10021d01:	push   eax
10021d02:	mov    ecx,esi
10021d04:	mov    DWORD PTR [ebp-0x8],0x24
10021d0b:	mov    DWORD PTR [ebp-0x4],0x1
10021d12:	mov    DWORD PTR [ebp-0x24],eax
10021d15:	mov    DWORD PTR [ebp-0x20],edi
10021d18:	mov    DWORD PTR [ebp-0x1c],ebx
10021d1b:	call   DWORD PTR [edx]
10021d1d:	test   eax,eax
10021d1f:	jne    0x10021d92
10021d21:	cmp    edi,0x82
10021d27:	je     0x10021d3f
10021d29:	push   DWORD PTR [ebp+0x14]
10021d2c:	push   ebx
10021d2d:	push   edi
10021d2e:	push   DWORD PTR [esi+0x4]
10021d31:	push   DWORD PTR [esi+0x20]
10021d34:	call   DWORD PTR ds:0x10066338
10021d3a:	mov    DWORD PTR [ebp+0x8],eax
10021d3d:	jmp    0x10021d92
10021d3f:	mov    eax,DWORD PTR [esi+0x4]
10021d42:	mov    edi,DWORD PTR ds:0x10066310
10021d48:	push   0xfffffffc
10021d4a:	push   eax
10021d4b:	call   edi
10021d4d:	push   DWORD PTR [ebp+0x14]
10021d50:	mov    DWORD PTR [ebp+0x10],eax
10021d53:	push   ebx
10021d54:	push   0x82
10021d59:	push   DWORD PTR [esi+0x4]
10021d5c:	push   DWORD PTR [esi+0x20]
10021d5f:	call   DWORD PTR ds:0x10066338
10021d65:	mov    DWORD PTR [ebp+0x8],eax
10021d68:	mov    eax,DWORD PTR [esi+0x20]
10021d6b:	cmp    eax,DWORD PTR ds:0x1006633c
10021d71:	je     0x10021d8e
10021d73:	mov    eax,DWORD PTR [esi+0x4]
10021d76:	push   0xfffffffc
10021d78:	push   eax
10021d79:	call   edi
10021d7b:	cmp    eax,DWORD PTR [ebp+0x10]
10021d7e:	jne    0x10021d8e
10021d80:	push   DWORD PTR [esi+0x20]
10021d83:	push   0xfffffffc
10021d85:	push   DWORD PTR [esi+0x4]
10021d88:	call   DWORD PTR ds:0x10066358
10021d8e:	or     DWORD PTR [esi+0x1c],0x1
10021d92:	mov    eax,DWORD PTR [esi+0x1c]
10021d95:	test   al,0x1
10021d97:	je     0x10021db9
10021d99:	xor    edx,edx
10021d9b:	cmp    DWORD PTR [ebp+0xc],edx
10021d9e:	jne    0x10021db9
10021da0:	mov    ecx,DWORD PTR [esi+0x4]
10021da3:	and    eax,0xfffffffe
10021da6:	mov    DWORD PTR [esi+0x1c],eax
10021da9:	mov    eax,DWORD PTR [esi]
10021dab:	push   ecx
10021dac:	mov    ecx,esi
10021dae:	mov    DWORD PTR [esi+0x4],edx
10021db1:	mov    DWORD PTR [esi+0x18],edx
10021db4:	call   DWORD PTR [eax+0xc]
10021db7:	jmp    0x10021dbf
10021db9:	mov    eax,DWORD PTR [ebp+0xc]
10021dbc:	mov    DWORD PTR [esi+0x18],eax
10021dbf:	mov    eax,DWORD PTR [ebp+0x8]
10021dc2:	pop    edi
10021dc3:	pop    esi
10021dc4:	pop    ebx
10021dc5:	leave  
10021dc6:	ret    0x10
10021dc9:	push   ebp
10021dca:	mov    ebp,esp
10021dcc:	push   esi
10021dcd:	push   edi
10021dce:	lea    esi,[ebx+0x8]
10021dd1:	push   0x0
10021dd3:	xor    eax,eax
10021dd5:	mov    edi,esi
10021dd7:	call   0x1001bdf6
10021ddc:	test   eax,eax
10021dde:	jne    0x10021dec
10021de0:	push   0xe
10021de2:	call   DWORD PTR ds:0x1006615c
10021de8:	xor    eax,eax
10021dea:	jmp    0x10021e4a
10021dec:	xor    edi,edi
10021dee:	cmp    WORD PTR [ebp+0x1c],di
10021df2:	je     0x10021de8
10021df4:	mov    eax,ebx
10021df6:	call   0x1001b682
10021dfb:	cmp    DWORD PTR [ebp+0x18],edi
10021dfe:	jne    0x10021e0c
10021e00:	test   DWORD PTR [ebp+0x10],0x40000000
10021e07:	je     0x10021e0c
10021e09:	mov    DWORD PTR [ebp+0x18],ebx
10021e0c:	mov    eax,DWORD PTR [ebp+0x8]
10021e0f:	cmp    eax,edi
10021e11:	jne    0x10021e18
10021e13:	mov    eax,0x1007f814
10021e18:	mov    ecx,DWORD PTR [eax+0x4]
10021e1b:	mov    esi,DWORD PTR [eax+0xc]
10021e1e:	mov    edx,DWORD PTR [eax]
10021e20:	mov    eax,DWORD PTR [eax+0x8]
10021e23:	push   edi
10021e24:	push   DWORD PTR ds:0x10080a04
10021e2a:	sub    esi,ecx
10021e2c:	push   DWORD PTR [ebp+0x18]
10021e2f:	sub    eax,edx
10021e31:	push   edi
10021e32:	push   esi
10021e33:	push   eax
10021e34:	movzx  eax,WORD PTR [ebp+0x1c]
10021e38:	push   ecx
10021e39:	push   edx
10021e3a:	push   DWORD PTR [ebp+0x10]
10021e3d:	push   DWORD PTR [ebp+0xc]
10021e40:	push   eax
10021e41:	push   DWORD PTR [ebp+0x14]
10021e44:	call   DWORD PTR ds:0x10066324
10021e4a:	pop    edi
10021e4b:	pop    esi
10021e4c:	pop    ebp
10021e4d:	ret    0x18
10021e50:	push   ebp
10021e51:	mov    ebp,esp
10021e53:	and    esp,0xfffffff8
10021e56:	sub    esp,0x70
10021e59:	push   esi
10021e5a:	xor    esi,esi
10021e5c:	cmp    ebx,esi
10021e5e:	push   edi
10021e5f:	je     0x10021edd
10021e61:	cmp    DWORD PTR [ebp+0x8],esi
10021e64:	je     0x10021edd
10021e66:	cmp    WORD PTR [ebx+0x40],si
10021e6a:	jne    0x10021fa2
10021e70:	mov    eax,0x10080a40
10021e75:	push   eax
10021e76:	mov    DWORD PTR [esp+0x14],eax
10021e7a:	call   DWORD PTR ds:0x100660f0
10021e80:	cmp    WORD PTR [ebx+0x40],si
10021e84:	mov    BYTE PTR [esp+0x14],0x1
10021e89:	jne    0x10021f97
10021e8f:	mov    eax,DWORD PTR [ebx+0x30]
10021e92:	cmp    eax,esi
10021e94:	je     0x10021f07
10021e96:	mov    ecx,DWORD PTR [ebx+0x28]
10021e99:	mov    DWORD PTR [esp+0x8],ecx
10021e9d:	mov    ecx,DWORD PTR [ebx+0x8]
10021ea0:	mov    DWORD PTR [esp+0xc],ecx
10021ea4:	lea    ecx,[esp+0x18]
10021ea8:	push   ecx
10021ea9:	push   eax
10021eaa:	push   esi
10021eab:	mov    esi,DWORD PTR ds:0x100662c4
10021eb1:	mov    DWORD PTR [esp+0x24],0x30
10021eb9:	call   esi
10021ebb:	test   eax,eax
10021ebd:	jne    0x10021ee6
10021ebf:	mov    eax,DWORD PTR [ebx+0x30]
10021ec2:	lea    ecx,[esp+0x18]
10021ec6:	push   ecx
10021ec7:	push   eax
10021ec8:	push   DWORD PTR ds:0x10080a04
10021ece:	call   esi
10021ed0:	test   eax,eax
10021ed2:	jne    0x10021ee6
10021ed4:	lea    ecx,[esp+0x10]
10021ed8:	call   0x10010e45
10021edd:	xor    ax,ax
10021ee0:	pop    edi
10021ee1:	pop    esi
10021ee2:	mov    esp,ebp
10021ee4:	pop    ebp
10021ee5:	ret    
10021ee6:	push   0xc
10021ee8:	pop    ecx
10021ee9:	lea    esi,[esp+0x18]
10021eed:	mov    edi,ebx
10021eef:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10021ef1:	mov    eax,DWORD PTR [ebx+0x8]
10021ef4:	mov    DWORD PTR [ebx+0x34],eax
10021ef7:	mov    eax,DWORD PTR [esp+0x8]
10021efb:	mov    DWORD PTR [ebx+0x28],eax
10021efe:	mov    eax,DWORD PTR [esp+0xc]
10021f02:	mov    DWORD PTR [ebx+0x8],eax
10021f05:	jmp    0x10021f23
10021f07:	mov    eax,DWORD PTR [ebx+0x3c]
10021f0a:	push   DWORD PTR [ebx+0x38]
10021f0d:	neg    eax
10021f0f:	sbb    eax,eax
10021f11:	not    eax
10021f13:	and    eax,DWORD PTR ds:0x10080a08
10021f19:	push   eax
10021f1a:	call   DWORD PTR ds:0x10066364
10021f20:	mov    DWORD PTR [ebx+0x1c],eax
10021f23:	mov    eax,ds:0x10080a04
10021f28:	and    DWORD PTR [ebx+0x4],0xffffbfff
10021f2f:	cmp    DWORD PTR [ebx+0x28],0x0
10021f33:	mov    DWORD PTR [ebx+0x14],eax
10021f36:	jne    0x10021f4f
10021f38:	push   ebx
10021f39:	push   0x100703f4
10021f3e:	lea    esi,[ebx+0x42]
10021f41:	push   0x25
10021f43:	push   esi
10021f44:	call   0x100467d8
10021f49:	add    esp,0x10
10021f4c:	mov    DWORD PTR [ebx+0x28],esi
10021f4f:	mov    eax,DWORD PTR [ebx+0x28]
10021f52:	push   0xc
10021f54:	pop    ecx
10021f55:	lea    edx,[esp+0x48]
10021f59:	push   edx
10021f5a:	mov    esi,ebx
10021f5c:	lea    edi,[esp+0x4c]
10021f60:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10021f62:	mov    ecx,DWORD PTR [ebx+0x14]
10021f65:	push   eax
10021f66:	push   ecx
10021f67:	call   DWORD PTR ds:0x100662c4
10021f6d:	test   ax,ax
10021f70:	mov    WORD PTR [ebx+0x40],ax
10021f74:	jne    0x10021f97
10021f76:	push   ebx
10021f77:	call   DWORD PTR ds:0x100662bc
10021f7d:	movzx  edi,ax
10021f80:	lea    eax,[esp+0xc]
10021f84:	push   eax
10021f85:	mov    esi,0x10080a5c
10021f8a:	mov    DWORD PTR [esp+0x10],edi
10021f8e:	call   0x1001ff6d
10021f93:	mov    WORD PTR [ebx+0x40],di
10021f97:	lea    ecx,[esp+0x10]
10021f9b:	call   0x10010e45
10021fa0:	xor    esi,esi
10021fa2:	cmp    DWORD PTR [ebx+0x30],esi
10021fa5:	je     0x10021faf
10021fa7:	mov    eax,DWORD PTR [ebx+0x34]
10021faa:	mov    ecx,DWORD PTR [ebp+0x8]
10021fad:	mov    DWORD PTR [ecx],eax
10021faf:	mov    ax,WORD PTR [ebx+0x40]
10021fb3:	jmp    0x10021ee0
10021fb8:	push   0xc
10021fba:	mov    eax,0x100602f5
10021fbf:	call   0x10059ca8
10021fc4:	mov    ebx,DWORD PTR [ebp+0x8]
10021fc7:	xor    edi,edi
10021fc9:	cmp    ebx,edi
10021fcb:	jne    0x10021fd4
10021fcd:	mov    eax,0x80004003
10021fd2:	jmp    0x1002203f
10021fd4:	push   0x30
10021fd6:	mov    DWORD PTR [ebx],edi
10021fd8:	mov    DWORD PTR [ebp-0x14],0x8007000e
10021fdf:	mov    DWORD PTR [ebp-0x4],edi
10021fe2:	call   0x100436de
10021fe7:	mov    esi,eax
10021fe9:	cmp    esi,edi
10021feb:	pop    ecx
10021fec:	je     0x10022022
10021fee:	mov    eax,ds:0x1006633c
10021ff3:	mov    DWORD PTR [esi+0x28],edi
10021ff6:	mov    DWORD PTR [esi+0x4],edi
10021ff9:	mov    DWORD PTR [esi+0x14],edi
10021ffc:	mov    DWORD PTR [esi+0x18],edi
10021fff:	mov    DWORD PTR [esi+0x1c],edi
10022002:	mov    DWORD PTR [esi+0x20],eax
10022005:	mov    DWORD PTR [esi+0x2c],edi
10022008:	mov    DWORD PTR [esi],0x100706e0
1002200e:	mov    DWORD PTR [esi+0x24],0x100706f0
10022015:	mov    ecx,DWORD PTR ds:0x10080c04
1002201b:	mov    eax,DWORD PTR [ecx]
1002201d:	call   DWORD PTR [eax+0x4]
10022020:	jmp    0x10022033
10022022:	xor    esi,esi
10022024:	jmp    0x10022033
10022026:	mov    eax,0x1002202c
1002202b:	ret    
1002202c:	mov    ebx,DWORD PTR [ebp+0x8]
1002202f:	xor    edi,edi
10022031:	mov    esi,edi
10022033:	cmp    esi,edi
10022035:	je     0x1002203a
10022037:	mov    DWORD PTR [ebp-0x14],edi
1002203a:	mov    eax,DWORD PTR [ebp-0x14]
1002203d:	mov    DWORD PTR [ebx],esi
1002203f:	call   0x10059d4d
10022044:	ret    0x4
10022047:	push   0xc
10022049:	mov    eax,0x10060da9
1002204e:	call   0x10059ca8
10022053:	mov    ebx,DWORD PTR [ebp+0x8]
10022056:	xor    edi,edi
10022058:	cmp    ebx,edi
1002205a:	jne    0x10022063
1002205c:	mov    eax,0x80004003
10022061:	jmp    0x100220ce
10022063:	push   0x30
10022065:	mov    DWORD PTR [ebx],edi
10022067:	mov    DWORD PTR [ebp-0x14],0x8007000e
1002206e:	mov    DWORD PTR [ebp-0x4],edi
10022071:	call   0x100436de
10022076:	mov    esi,eax
10022078:	cmp    esi,edi
1002207a:	pop    ecx
1002207b:	je     0x100220b1
1002207d:	mov    eax,ds:0x1006633c
10022082:	mov    DWORD PTR [esi+0x28],edi
10022085:	mov    DWORD PTR [esi+0x4],edi
10022088:	mov    DWORD PTR [esi+0x14],edi
1002208b:	mov    DWORD PTR [esi+0x18],edi
1002208e:	mov    DWORD PTR [esi+0x1c],edi
10022091:	mov    DWORD PTR [esi+0x20],eax
10022094:	mov    DWORD PTR [esi+0x2c],edi
10022097:	mov    DWORD PTR [esi],0x1007072c
1002209d:	mov    DWORD PTR [esi+0x24],0x1007073c
100220a4:	mov    ecx,DWORD PTR ds:0x10080c04
100220aa:	mov    eax,DWORD PTR [ecx]
100220ac:	call   DWORD PTR [eax+0x4]
100220af:	jmp    0x100220c2
100220b1:	xor    esi,esi
100220b3:	jmp    0x100220c2
100220b5:	mov    eax,0x100220bb
100220ba:	ret    
100220bb:	mov    ebx,DWORD PTR [ebp+0x8]
100220be:	xor    edi,edi
100220c0:	mov    esi,edi
100220c2:	cmp    esi,edi
100220c4:	je     0x100220c9
100220c6:	mov    DWORD PTR [ebp-0x14],edi
100220c9:	mov    eax,DWORD PTR [ebp-0x14]
100220cc:	mov    DWORD PTR [ebx],esi
100220ce:	call   0x10059d4d
100220d3:	ret    0x4
100220d6:	push   0x4
100220d8:	mov    eax,0x1005f814
100220dd:	call   0x10059c75
100220e2:	mov    esi,ecx
100220e4:	mov    DWORD PTR [ebp-0x10],esi
100220e7:	and    DWORD PTR [ebp-0x4],0x0
100220eb:	test   BYTE PTR [esi+0x14],0x2
100220ef:	je     0x10022113
100220f1:	mov    edi,DWORD PTR [esi+0x8]
100220f4:	jmp    0x10022105
100220f6:	mov    eax,DWORD PTR [edi]
100220f8:	test   eax,eax
100220fa:	je     0x10022102
100220fc:	mov    ecx,DWORD PTR [eax]
100220fe:	push   eax
100220ff:	call   DWORD PTR [ecx+0x8]
10022102:	add    edi,0x4
10022105:	cmp    edi,DWORD PTR [esi+0xc]
10022108:	jne    0x100220f6
1002210a:	push   DWORD PTR [esi+0x8]
1002210d:	call   0x10043600
10022112:	pop    ecx
10022113:	or     DWORD PTR [ebp-0x4],0xffffffff
10022117:	mov    esi,DWORD PTR [esi+0x4]
1002211a:	test   esi,esi
1002211c:	je     0x10022124
1002211e:	mov    eax,DWORD PTR [esi]
10022120:	push   esi
10022121:	call   DWORD PTR [eax+0x8]
10022124:	call   0x10059d4d
10022129:	ret    
1002212a:	push   ebp
1002212b:	mov    ebp,esp
1002212d:	mov    edx,DWORD PTR [ebp+0x14]
10022130:	xor    ecx,ecx
10022132:	cmp    edx,ecx
10022134:	je     0x10022138
10022136:	mov    DWORD PTR [edx],ecx
10022138:	push   esi
10022139:	push   edi
1002213a:	mov    edi,DWORD PTR [ebp+0xc]
1002213d:	cmp    edi,ecx
1002213f:	jne    0x1002214b
10022141:	mov    eax,0x80070057
10022146:	jmp    0x100221ef
1002214b:	cmp    DWORD PTR [ebp+0x10],ecx
1002214e:	push   ebx
1002214f:	je     0x100221e9
10022155:	xor    ebx,ebx
10022157:	inc    ebx
10022158:	cmp    edi,ebx
1002215a:	je     0x10022164
1002215c:	cmp    edx,ecx
1002215e:	je     0x100221e9
10022164:	mov    esi,DWORD PTR [ebp+0x8]
10022167:	cmp    DWORD PTR [esi+0x8],ecx
1002216a:	je     0x100221e2
1002216c:	mov    eax,DWORD PTR [esi+0xc]
1002216f:	cmp    eax,ecx
10022171:	je     0x100221e2
10022173:	mov    ecx,DWORD PTR [esi+0x10]
10022176:	test   ecx,ecx
10022178:	je     0x100221e2
1002217a:	and    DWORD PTR [ebp+0xc],0x0
1002217e:	sub    eax,ecx
10022180:	sar    eax,0x2
10022183:	cmp    edi,eax
10022185:	jbe    0x1002218a
10022187:	mov    DWORD PTR [ebp+0xc],ebx
1002218a:	jb     0x1002218e
1002218c:	mov    edi,eax
1002218e:	test   edx,edx
10022190:	je     0x10022194
10022192:	mov    DWORD PTR [edx],edi
10022194:	mov    ebx,DWORD PTR [ebp+0x10]
10022197:	jmp    0x100221b2
10022199:	mov    eax,DWORD PTR [esi+0x10]
1002219c:	mov    ecx,ebx
1002219e:	dec    edi
1002219f:	call   0x10024af4
100221a4:	test   eax,eax
100221a6:	mov    DWORD PTR [ebp+0x8],eax
100221a9:	jl     0x100221bb
100221ab:	add    ebx,0x4
100221ae:	add    DWORD PTR [esi+0x10],0x4
100221b2:	test   edi,edi
100221b4:	jne    0x10022199
100221b6:	mov    eax,DWORD PTR [ebp+0xc]
100221b9:	jmp    0x100221ee
100221bb:	mov    esi,DWORD PTR [ebp+0x10]
100221be:	jmp    0x100221cf
100221c0:	mov    eax,DWORD PTR [esi]
100221c2:	test   eax,eax
100221c4:	je     0x100221cc
100221c6:	mov    ecx,DWORD PTR [eax]
100221c8:	push   eax
100221c9:	call   DWORD PTR [ecx+0x8]
100221cc:	add    esi,0x4
100221cf:	cmp    esi,ebx
100221d1:	jb     0x100221c0
100221d3:	mov    eax,DWORD PTR [ebp+0x14]
100221d6:	test   eax,eax
100221d8:	je     0x100221dd
100221da:	and    DWORD PTR [eax],0x0
100221dd:	mov    eax,DWORD PTR [ebp+0x8]
100221e0:	jmp    0x100221ee
100221e2:	mov    eax,0x80004005
100221e7:	jmp    0x100221ee
100221e9:	mov    eax,0x80004003
100221ee:	pop    ebx
100221ef:	pop    edi
100221f0:	pop    esi
100221f1:	pop    ebp
100221f2:	ret    0x10
100221f5:	push   0x8
100221f7:	mov    eax,0x100602da
100221fc:	call   0x10059c75
10022201:	mov    eax,DWORD PTR [ebp+0xc]
10022204:	xor    edi,edi
10022206:	cmp    eax,edi
10022208:	mov    DWORD PTR [ebp-0x10],edi
1002220b:	mov    ebx,0x80004003
10022210:	je     0x100222ab
10022216:	mov    DWORD PTR [eax],edi
10022218:	lea    eax,[ebp-0x14]
1002221b:	push   eax
1002221c:	call   0x10022326
10022221:	mov    ebx,eax
10022223:	cmp    ebx,edi
10022225:	jl     0x100222ab
1002222b:	mov    esi,DWORD PTR [ebp+0x8]
1002222e:	test   BYTE PTR [esi+0x14],0x2
10022232:	je     0x1002224c
10022234:	mov    eax,DWORD PTR [esi]
10022236:	push   esi
10022237:	mov    DWORD PTR [ebp+0x8],esi
1002223a:	call   DWORD PTR [eax+0x4]
1002223d:	mov    DWORD PTR [ebp-0x4],edi
10022240:	lea    eax,[ebp+0x8]
10022243:	mov    DWORD PTR [ebp-0x10],0x1
1002224a:	jmp    0x1002224f
1002224c:	lea    eax,[esi+0x4]
1002224f:	mov    eax,DWORD PTR [eax]
10022251:	push   edi
10022252:	mov    edi,DWORD PTR [ebp-0x14]
10022255:	push   eax
10022256:	push   DWORD PTR [esi+0xc]
10022259:	push   DWORD PTR [esi+0x8]
1002225c:	push   edi
1002225d:	call   0x100249fc
10022262:	or     DWORD PTR [ebp-0x4],0xffffffff
10022266:	test   BYTE PTR [ebp-0x10],0x1
1002226a:	mov    ebx,eax
1002226c:	je     0x1002227b
1002226e:	mov    eax,DWORD PTR [ebp+0x8]
10022271:	test   eax,eax
10022273:	je     0x1002227b
10022275:	mov    ecx,DWORD PTR [eax]
10022277:	push   eax
10022278:	call   DWORD PTR [ecx+0x8]
1002227b:	test   ebx,ebx
1002227d:	jl     0x1002229e
1002227f:	mov    eax,DWORD PTR [esi+0x10]
10022282:	mov    ebx,DWORD PTR [ebp+0xc]
10022285:	push   0x10070274
1002228a:	mov    DWORD PTR [edi+0x10],eax
1002228d:	push   edi
1002228e:	mov    eax,0x100706b8
10022293:	call   0x100104da
10022298:	mov    ebx,eax
1002229a:	test   ebx,ebx
1002229c:	jge    0x100222ab
1002229e:	test   edi,edi
100222a0:	je     0x100222ab
100222a2:	mov    eax,DWORD PTR [edi]
100222a4:	push   0x1
100222a6:	mov    ecx,edi
100222a8:	call   DWORD PTR [eax+0x1c]
100222ab:	mov    eax,ebx
100222ad:	call   0x10059d4d
100222b2:	ret    0x8
100222b5:	push   0xc
100222b7:	mov    eax,0x1005fcb7
100222bc:	call   0x10059ca8
100222c1:	mov    edi,DWORD PTR [ebp+0x8]
100222c4:	xor    ebx,ebx
100222c6:	cmp    edi,ebx
100222c8:	jne    0x100222d1
100222ca:	mov    eax,0x80004003
100222cf:	jmp    0x1002231e
100222d1:	push   0x8
100222d3:	mov    DWORD PTR [edi],ebx
100222d5:	mov    DWORD PTR [ebp-0x14],0x8007000e
100222dc:	mov    DWORD PTR [ebp-0x4],ebx
100222df:	call   0x100436de
100222e4:	mov    esi,eax
100222e6:	cmp    esi,ebx
100222e8:	pop    ecx
100222e9:	je     0x10022301
100222eb:	mov    DWORD PTR [esi+0x4],ebx
100222ee:	mov    DWORD PTR [esi],0x10070780
100222f4:	mov    ecx,DWORD PTR ds:0x10080c04
100222fa:	mov    eax,DWORD PTR [ecx]
100222fc:	call   DWORD PTR [eax+0x4]
100222ff:	jmp    0x10022312
10022301:	xor    esi,esi
10022303:	jmp    0x10022312
10022305:	mov    eax,0x1002230b
1002230a:	ret    
1002230b:	mov    edi,DWORD PTR [ebp+0x8]
1002230e:	xor    ebx,ebx
10022310:	mov    esi,ebx
10022312:	cmp    esi,ebx
10022314:	je     0x10022319
10022316:	mov    DWORD PTR [ebp-0x14],ebx
10022319:	mov    eax,DWORD PTR [ebp-0x14]
1002231c:	mov    DWORD PTR [edi],esi
1002231e:	call   0x10059d4d
10022323:	ret    0x4
10022326:	push   0xc
10022328:	mov    eax,0x1005fc9c
1002232d:	call   0x10059ca8
10022332:	mov    edi,DWORD PTR [ebp+0x8]
10022335:	xor    esi,esi
10022337:	cmp    edi,esi
10022339:	jne    0x10022342
1002233b:	mov    eax,0x80004003
10022340:	jmp    0x10022383
10022342:	push   0x1c
10022344:	mov    DWORD PTR [edi],esi
10022346:	mov    DWORD PTR [ebp-0x14],0x8007000e
1002234d:	mov    DWORD PTR [ebp-0x18],esi
10022350:	mov    DWORD PTR [ebp-0x4],esi
10022353:	call   0x100436de
10022358:	cmp    eax,esi
1002235a:	pop    ecx
1002235b:	je     0x10022366
1002235d:	mov    esi,eax
1002235f:	call   0x100202ef
10022364:	jmp    0x10022376
10022366:	xor    eax,eax
10022368:	jmp    0x10022376
1002236a:	mov    eax,0x10022370
1002236f:	ret    
10022370:	mov    edi,DWORD PTR [ebp+0x8]
10022373:	mov    eax,DWORD PTR [ebp-0x18]
10022376:	test   eax,eax
10022378:	je     0x1002237e
1002237a:	and    DWORD PTR [ebp-0x14],0x0
1002237e:	mov    DWORD PTR [edi],eax
10022380:	mov    eax,DWORD PTR [ebp-0x14]
10022383:	call   0x10059d4d
10022388:	ret    0x4
1002238b:	sub    DWORD PTR [esp+0x4],0x1c
10022390:	jmp    0x10021155
10022395:	sub    DWORD PTR [esp+0x4],0x14
1002239a:	jmp    0x10021145
1002239f:	sub    ecx,0x38
100223a2:	jmp    0x10021760
100223a7:	sub    DWORD PTR [esp+0x4],0x14
100223ac:	jmp    0x10021135
100223b1:	sub    DWORD PTR [esp+0x4],0x20
100223b6:	jmp    0x10021155
100223bb:	sub    DWORD PTR [esp+0x4],0x4
100223c0:	jmp    0x10021155
100223c5:	sub    DWORD PTR [esp+0x4],0x24
100223ca:	jmp    0x10021155
100223cf:	sub    DWORD PTR [esp+0x4],0x1c
100223d4:	jmp    0x10021145
100223d9:	sub    DWORD PTR [esp+0x4],0x1c
100223de:	jmp    0x10021135
100223e3:	sub    DWORD PTR [esp+0x4],0x8
100223e8:	jmp    0x10021155
100223ed:	sub    DWORD PTR [esp+0x4],0x28
100223f2:	jmp    0x10021155
100223f7:	sub    DWORD PTR [esp+0x4],0x20
100223fc:	jmp    0x10021145
10022401:	sub    DWORD PTR [esp+0x4],0x20
10022406:	jmp    0x10021135
1002240b:	sub    DWORD PTR [esp+0x4],0xc
10022410:	jmp    0x10021155
10022415:	sub    DWORD PTR [esp+0x4],0x4
1002241a:	jmp    0x10021145
1002241f:	sub    DWORD PTR [esp+0x4],0x24
10022424:	jmp    0x10021145
10022429:	sub    DWORD PTR [esp+0x4],0x4
1002242e:	jmp    0x10021135
10022433:	sub    DWORD PTR [esp+0x4],0x24
10022438:	jmp    0x10021135
1002243d:	sub    DWORD PTR [esp+0x4],0x10
10022442:	jmp    0x10021155
10022447:	sub    DWORD PTR [esp+0x4],0x8
1002244c:	jmp    0x10021145
10022451:	sub    DWORD PTR [esp+0x4],0x28
10022456:	jmp    0x10021145
1002245b:	sub    DWORD PTR [esp+0x4],0x8
10022460:	jmp    0x10021135
10022465:	sub    DWORD PTR [esp+0x4],0x28
1002246a:	jmp    0x10021135
1002246f:	sub    DWORD PTR [esp+0x4],0x14
10022474:	jmp    0x10021155
10022479:	sub    DWORD PTR [esp+0x4],0xc
1002247e:	jmp    0x10021145
10022483:	sub    DWORD PTR [esp+0x4],0xc
10022488:	jmp    0x10021135
1002248d:	sub    DWORD PTR [esp+0x4],0x10
10022492:	jmp    0x10021145
10022497:	sub    DWORD PTR [esp+0x4],0x10
1002249c:	jmp    0x10021135
100224a1:	mov    eax,DWORD PTR [esp+0x4]
100224a5:	add    eax,0x8
100224a8:	call   0x100120eb
100224ad:	mov    ecx,DWORD PTR [esp+0x8]
100224b1:	mov    DWORD PTR [ecx],eax
100224b3:	xor    eax,eax
100224b5:	ret    0x8
100224b8:	mov    eax,DWORD PTR [esp+0x4]
100224bc:	add    eax,0xc
100224bf:	call   0x100120eb
100224c4:	mov    ecx,DWORD PTR [esp+0x8]
100224c8:	mov    DWORD PTR [ecx],eax
100224ca:	xor    eax,eax
100224cc:	ret    0x8
100224cf:	mov    eax,DWORD PTR [esp+0x4]
100224d3:	add    eax,0x10
100224d6:	call   0x100120eb
100224db:	mov    ecx,DWORD PTR [esp+0x8]
100224df:	mov    DWORD PTR [ecx],eax
100224e1:	xor    eax,eax
100224e3:	ret    0x8
100224e6:	mov    eax,DWORD PTR [esp+0x4]
100224ea:	add    eax,0x14
100224ed:	call   0x100120eb
100224f2:	mov    ecx,DWORD PTR [esp+0x8]
100224f6:	mov    DWORD PTR [ecx],eax
100224f8:	xor    eax,eax
100224fa:	ret    0x8
100224fd:	mov    eax,DWORD PTR [esp+0x4]
10022501:	add    eax,0x18
10022504:	call   0x100120eb
10022509:	mov    ecx,DWORD PTR [esp+0x8]
1002250d:	mov    DWORD PTR [ecx],eax
1002250f:	xor    eax,eax
10022511:	ret    0x8
10022514:	mov    eax,DWORD PTR [esp+0x4]
10022518:	mov    eax,DWORD PTR [eax+0x1c]
1002251b:	mov    ecx,DWORD PTR [esp+0x8]
1002251f:	mov    DWORD PTR [ecx],eax
10022521:	xor    eax,eax
10022523:	ret    0x8
10022526:	mov    WORD PTR [esi],0x8
1002252b:	mov    eax,DWORD PTR [eax]
1002252d:	test   eax,eax
1002252f:	push   edi
10022530:	je     0x10022536
10022532:	mov    edi,DWORD PTR [eax]
10022534:	jmp    0x10022538
10022536:	xor    edi,edi
10022538:	test   edi,edi
1002253a:	jne    0x10022541
1002253c:	and    DWORD PTR [esi+0x8],edi
1002253f:	jmp    0x10022561
10022541:	push   edi
10022542:	call   DWORD PTR ds:0x100662a0
10022548:	push   eax
10022549:	push   edi
1002254a:	call   DWORD PTR ds:0x100662a8
10022550:	test   eax,eax
10022552:	mov    DWORD PTR [esi+0x8],eax
10022555:	jne    0x10022561
10022557:	push   0x8007000e
1002255c:	call   0x10050e30
10022561:	mov    eax,esi
10022563:	pop    edi
10022564:	ret    
10022565:	test   ecx,ecx
10022567:	jne    0x1002256b
10022569:	mov    ecx,eax
1002256b:	cmp    eax,ecx
1002256d:	jne    0x10022574
1002256f:	cmp    dx,WORD PTR [eax]
10022572:	je     0x10022589
10022574:	push   edx
10022575:	push   0x0
10022577:	push   ecx
10022578:	push   eax
10022579:	call   DWORD PTR ds:0x1006627c
1002257f:	test   eax,eax
10022581:	jge    0x10022589
10022583:	push   eax
10022584:	call   0x10050e30
10022589:	ret    
1002258a:	push   ecx
1002258b:	call   DWORD PTR ds:0x10066294
10022591:	ret    
10022592:	push   0x14
10022594:	mov    eax,0x1005fa01
10022599:	call   0x10059c75
1002259e:	and    DWORD PTR [edi],0x0
100225a1:	cmp    WORD PTR [esi],0x8
100225a5:	jne    0x100225b3
100225a7:	push   DWORD PTR [esi+0x8]
100225aa:	mov    ecx,edi
100225ac:	call   0x10011002
100225b1:	jmp    0x100225e3
100225b3:	lea    eax,[ebp-0x20]
100225b6:	push   eax
100225b7:	call   DWORD PTR ds:0x1006628c
100225bd:	and    DWORD PTR [ebp-0x4],0x0
100225c1:	mov    ecx,esi
100225c3:	mov    dx,0x8
100225c7:	lea    eax,[ebp-0x20]
100225ca:	call   0x10022565
100225cf:	push   DWORD PTR [ebp-0x18]
100225d2:	mov    ecx,edi
100225d4:	call   0x10011002
100225d9:	lea    eax,[ebp-0x20]
100225dc:	push   eax
100225dd:	call   DWORD PTR ds:0x10066294
100225e3:	mov    eax,edi
100225e5:	call   0x10059d4d
100225ea:	ret    
100225eb:	push   0x4
100225ed:	mov    eax,0x10060d8e
100225f2:	call   0x10059c75
100225f7:	xor    eax,eax
100225f9:	lea    edi,[esi+0x8]
100225fc:	mov    DWORD PTR [esi+0x28],eax
100225ff:	mov    DWORD PTR [ebp-0x10],edi
10022602:	mov    DWORD PTR [edi+0x8],eax
10022605:	mov    DWORD PTR [ebp-0x4],eax
10022608:	mov    DWORD PTR [edi+0xc],eax
1002260b:	mov    BYTE PTR [ebp-0x4],0x1
1002260f:	call   0x10024739
10022614:	lea    ecx,[edi+0x14]
10022617:	mov    DWORD PTR [ecx],eax
10022619:	mov    BYTE PTR [eax+0x2d],0x1
1002261d:	mov    eax,DWORD PTR [ecx]
1002261f:	mov    DWORD PTR [eax+0x4],eax
10022622:	mov    eax,DWORD PTR [ecx]
10022624:	mov    DWORD PTR [eax],eax
10022626:	mov    ecx,DWORD PTR [ecx]
10022628:	mov    DWORD PTR [ecx+0x8],ecx
1002262b:	and    DWORD PTR [edi+0x18],0x0
1002262f:	mov    DWORD PTR [esi],0x1007160c
10022635:	mov    DWORD PTR [esi+0x4],0x1007161c
1002263c:	mov    DWORD PTR [edi],0x10071630
10022642:	mov    DWORD PTR [esi+0xc],0x10071668
10022649:	mov    DWORD PTR [esi+0x24],0x10071680
10022650:	mov    eax,esi
10022652:	call   0x10059d4d
10022657:	ret    
10022658:	push   ebp
10022659:	mov    ebp,esp
1002265b:	sub    esp,0x34
1002265e:	mov    eax,ds:0x1007e030
10022663:	xor    eax,ebp
10022665:	mov    DWORD PTR [ebp-0x4],eax
10022668:	push   ebx
10022669:	push   esi
1002266a:	mov    esi,DWORD PTR [ebp+0xc]
1002266d:	mov    eax,DWORD PTR [esi]
1002266f:	push   edi
10022670:	lea    ecx,[ebp-0x34]
10022673:	push   ecx
10022674:	push   esi
10022675:	call   DWORD PTR [eax+0xc]
10022678:	mov    eax,DWORD PTR [esi]
1002267a:	lea    ecx,[ebp-0x10]
1002267d:	push   ecx
1002267e:	lea    ecx,[ebp-0x8]
10022681:	push   ecx
10022682:	lea    ecx,[ebp-0x14]
10022685:	push   ecx
10022686:	push   esi
10022687:	call   DWORD PTR [eax+0x10]
1002268a:	call   DWORD PTR ds:0x1007efec
10022690:	mov    ebx,eax
10022692:	mov    eax,DWORD PTR [ebp-0x2c]
10022695:	test   eax,eax
10022697:	mov    DWORD PTR [ebp-0xc],eax
1002269a:	je     0x100226ab
1002269c:	push   eax
1002269d:	call   DWORD PTR ds:0x100660c4
100226a3:	inc    eax
100226a4:	cmp    eax,0x3fffffff
100226a9:	jle    0x100226af
100226ab:	xor    eax,eax
100226ad:	jmp    0x100226c5
100226af:	lea    edi,[eax+eax*1]
100226b2:	mov    eax,edi
100226b4:	call   0x1004b990
100226b9:	mov    esi,esp
100226bb:	push   ebx
100226bc:	push   edi
100226bd:	push   DWORD PTR [ebp-0xc]
100226c0:	call   0x1000241c
100226c5:	push   DWORD PTR [ebp-0x10]
100226c8:	push   DWORD PTR [ebp-0x8]
100226cb:	push   eax
100226cc:	call   0x1000205f
100226d1:	add    esp,0xc
100226d4:	xor    eax,eax
100226d6:	lea    esp,[ebp-0x40]
100226d9:	pop    edi
100226da:	pop    esi
100226db:	pop    ebx
100226dc:	mov    ecx,DWORD PTR [ebp-0x4]
100226df:	xor    ecx,ebp
100226e1:	call   0x100430d7
100226e6:	leave  
100226e7:	ret    0x8
100226ea:	push   esi
100226eb:	mov    esi,ecx
100226ed:	neg    ecx
100226ef:	lea    eax,[esi+0x8]
100226f2:	sbb    ecx,ecx
100226f4:	and    ecx,eax
100226f6:	call   0x10024117
100226fb:	test   BYTE PTR [esp+0x8],0x1
10022700:	je     0x10022709
10022702:	push   esi
10022703:	call   0x100430d2
10022708:	pop    ecx
10022709:	mov    eax,esi
1002270b:	pop    esi
1002270c:	ret    0x4
1002270f:	push   ebp
10022710:	mov    ebp,esp
10022712:	and    esp,0xfffffff8
10022715:	push   0xffffffff
10022717:	push   0x10060d5d
1002271c:	mov    eax,fs:0x0
10022722:	push   eax
10022723:	sub    esp,0x48
10022726:	push   ebx
10022727:	push   esi
10022728:	push   edi
10022729:	mov    eax,ds:0x1007e030
1002272e:	xor    eax,esp
10022730:	push   eax
10022731:	lea    eax,[esp+0x58]
10022735:	mov    fs:0x0,eax
1002273b:	mov    ebx,DWORD PTR [ebp+0x8]
1002273e:	mov    DWORD PTR [esp+0x18],ebx
10022742:	and    DWORD PTR [esp+0x60],0x0
10022747:	lea    eax,[esp+0x1c]
1002274b:	push   eax
1002274c:	lea    eax,[esp+0x24]
10022750:	push   eax
10022751:	push   DWORD PTR [ebx+0x4]
10022754:	call   0x1001f0c5
10022759:	add    esp,0xc
1002275c:	test   al,al
1002275e:	je     0x1002289e
10022764:	push   0x1388
10022769:	jmp    0x100227d6
1002276b:	mov    eax,DWORD PTR [ebx+0x4]
1002276e:	and    DWORD PTR [esp+0x10],0x0
10022773:	push   0xffffffff
10022775:	push   DWORD PTR ds:0x10080f50
1002277b:	mov    DWORD PTR [esp+0x1c],eax
1002277f:	call   DWORD PTR ds:0x10066084
10022785:	test   eax,eax
10022787:	jne    0x100227d2
10022789:	lea    eax,[esp+0x14]
1002278d:	push   eax
1002278e:	lea    eax,[esp+0x30]
10022792:	push   eax
10022793:	call   0x10020aa8
10022798:	mov    eax,ds:0x10080f58
1002279d:	lea    edi,[esp+0x24]
100227a1:	lea    esi,[esp+0x2c]
100227a5:	mov    DWORD PTR [esp+0x28],eax
100227a9:	mov    DWORD PTR [esp+0x24],0x10080f54
100227b1:	call   0x10004b10
100227b6:	test   al,al
100227b8:	jne    0x100227c6
100227ba:	call   0x1000cedb
100227bf:	mov    eax,DWORD PTR [eax+0x4]
100227c2:	mov    DWORD PTR [esp+0x10],eax
100227c6:	push   DWORD PTR ds:0x10080f50
100227cc:	call   DWORD PTR ds:0x10066094
100227d2:	push   DWORD PTR [esp+0x10]
100227d6:	push   0x0
100227d8:	lea    eax,[esp+0x24]
100227dc:	push   eax
100227dd:	push   0x2
100227df:	call   DWORD PTR ds:0x100660e8
100227e5:	mov    esi,eax
100227e7:	call   DWORD PTR ds:0x100660cc
100227ed:	cmp    esi,0x1
100227f0:	je     0x1002276b
100227f6:	cmp    esi,0x102
100227fc:	jne    0x1002288c
10022802:	and    DWORD PTR [esp+0x10],0x0
10022807:	mov    BYTE PTR [esp+0x60],0x1
1002280c:	mov    eax,DWORD PTR [ebx]
1002280e:	mov    ecx,DWORD PTR [eax]
10022810:	lea    edx,[esp+0x10]
10022814:	push   edx
10022815:	push   eax
10022816:	call   DWORD PTR [ecx+0x4c]
10022819:	test   eax,eax
1002281b:	jl     0x10022879
1002281d:	push   0x7
1002281f:	pop    ecx
10022820:	xor    eax,eax
10022822:	lea    edi,[esp+0x36]
10022826:	rep stos DWORD PTR es:[edi],eax
10022828:	stos   WORD PTR es:[edi],ax
1002282a:	push   0x1006cd08
1002282f:	lea    edi,[esp+0x18]
10022833:	mov    WORD PTR [esp+0x38],0x3e8
1002283a:	call   0x1000244f
1002283f:	mov    esi,edi
10022841:	mov    BYTE PTR [esp+0x60],0x2
10022846:	call   0x1001106b
1002284b:	mov    eax,DWORD PTR [eax]
1002284d:	push   0x0
1002284f:	lea    edx,[esp+0x38]
10022853:	mov    DWORD PTR [esp+0x3c],eax
10022857:	mov    eax,DWORD PTR [esp+0x14]
1002285b:	mov    ecx,DWORD PTR [eax]
1002285d:	push   edx
1002285e:	push   DWORD PTR [ebx+0x4]
10022861:	push   eax
10022862:	call   DWORD PTR [ecx+0x38]
10022865:	mov    esi,eax
10022867:	call   0x100025aa
1002286c:	test   esi,esi
1002286e:	jl     0x10022879
10022870:	push   DWORD PTR [ebx+0x4]
10022873:	call   0x1001f1f9
10022878:	pop    ecx
10022879:	mov    BYTE PTR [esp+0x60],0x0
1002287e:	mov    eax,DWORD PTR [esp+0x10]
10022882:	test   eax,eax
10022884:	je     0x1002288c
10022886:	mov    ecx,DWORD PTR [eax]
10022888:	push   eax
10022889:	call   DWORD PTR [ecx+0x8]
1002288c:	xor    esi,esi
1002288e:	push   DWORD PTR [esp+esi*4+0x1c]
10022892:	call   DWORD PTR ds:0x10066070
10022898:	inc    esi
10022899:	cmp    esi,0x2
1002289c:	jne    0x1002288e
1002289e:	or     DWORD PTR [esp+0x60],0xffffffff
100228a3:	mov    eax,DWORD PTR [ebx]
100228a5:	test   eax,eax
100228a7:	je     0x100228af
100228a9:	mov    ecx,DWORD PTR [eax]
100228ab:	push   eax
100228ac:	call   DWORD PTR [ecx+0x8]
100228af:	push   ebx
100228b0:	call   0x100430d2
100228b5:	xor    eax,eax
100228b7:	pop    ecx
100228b8:	mov    ecx,DWORD PTR [esp+0x58]
100228bc:	mov    DWORD PTR fs:0x0,ecx
100228c3:	pop    ecx
100228c4:	pop    edi
100228c5:	pop    esi
100228c6:	pop    ebx
100228c7:	mov    esp,ebp
100228c9:	pop    ebp
100228ca:	ret    0x4
100228cd:	push   0x4c
100228cf:	mov    eax,0x100636d3
100228d4:	call   0x10059ca8
100228d9:	test   BYTE PTR ds:0x10081430,0x1
100228e0:	jne    0x100228fb
100228e2:	or     DWORD PTR ds:0x10081430,0x1
100228e9:	and    DWORD PTR ds:0x1008142c,0x0
100228f0:	push   0x10065ae7
100228f5:	call   0x100434b4
100228fa:	pop    ecx
100228fb:	push   0x1f4
10022900:	push   DWORD PTR ds:0x10080f60
10022906:	call   DWORD PTR ds:0x10066084
1002290c:	test   eax,eax
1002290e:	jne    0x100229bd
10022914:	xor    ebx,ebx
10022916:	mov    DWORD PTR [ebp-0x4],ebx
10022919:	cmp    DWORD PTR ds:0x1008142c,ebx
1002291f:	jne    0x100229ad
10022925:	push   0x2c
10022927:	call   0x100436de
1002292c:	mov    edi,eax
1002292e:	cmp    edi,ebx
10022930:	pop    ecx
10022931:	mov    esi,0x10022a41
10022936:	je     0x1002294d
10022938:	push   esi
10022939:	push   0x10022a30
1002293e:	push   0x2
10022940:	push   0x14
10022942:	lea    eax,[edi+0x4]
10022945:	push   eax
10022946:	call   0x10046098
1002294b:	mov    ebx,edi
1002294d:	xor    eax,eax
1002294f:	push   eax
10022950:	push   eax
10022951:	push   ebx
10022952:	push   0x10023f6c
10022957:	push   eax
10022958:	push   eax
10022959:	mov    edi,ebx
1002295b:	call   DWORD PTR ds:0x10066098
10022961:	test   eax,eax
10022963:	je     0x10022994
10022965:	mov    eax,ds:0x1008142c
1002296a:	xor    edi,edi
1002296c:	cmp    ebx,eax
1002296e:	je     0x1002298e
10022970:	test   eax,eax
10022972:	mov    DWORD PTR [ebp-0x14],eax
10022975:	je     0x1002298e
10022977:	push   esi
10022978:	push   0x2
1002297a:	push   0x14
1002297c:	add    eax,0x4
1002297f:	push   eax
10022980:	call   0x10043339
10022985:	push   DWORD PTR [ebp-0x14]
10022988:	call   0x100430d2
1002298d:	pop    ecx
1002298e:	mov    DWORD PTR ds:0x1008142c,ebx
10022994:	test   edi,edi
10022996:	je     0x100229ad
10022998:	push   esi
10022999:	push   0x2
1002299b:	push   0x14
1002299d:	lea    eax,[edi+0x4]
100229a0:	push   eax
100229a1:	call   0x10043339
100229a6:	push   edi
100229a7:	call   0x100430d2
100229ac:	pop    ecx
100229ad:	push   DWORD PTR ds:0x10080f60
100229b3:	call   DWORD PTR ds:0x10066094
100229b9:	or     DWORD PTR [ebp-0x4],0xffffffff
100229bd:	mov    eax,ds:0x1008142c
100229c2:	test   eax,eax
100229c4:	jne    0x10022a2a
100229c6:	push   0xf4d6f60
100229cb:	push   0x10070b68
100229d0:	call   0x100042d1
100229d5:	push   eax
100229d6:	push   0x16
100229d8:	push   0x10070b9c
100229dd:	call   0x100042e3
100229e2:	add    esp,0x14
100229e5:	push   eax
100229e6:	lea    ecx,[ebp-0x30]
100229e9:	call   0x100011d1
100229ee:	lea    eax,[ebp-0x30]
100229f1:	push   eax
100229f2:	lea    eax,[ebp-0x58]
100229f5:	push   eax
100229f6:	mov    DWORD PTR [ebp-0x4],0x2
100229fd:	call   0x100026e6
10022a02:	push   0x10074e84
10022a07:	lea    eax,[ebp-0x58]
10022a0a:	push   eax
10022a0b:	jmp    0x10022a25
10022a0d:	push   0x4
10022a0f:	call   0x10037b70
10022a14:	pop    ecx
10022a15:	push   DWORD PTR ds:0x10080f60
10022a1b:	call   DWORD PTR ds:0x10066094
10022a21:	push   0x0
10022a23:	push   0x0
10022a25:	call   0x10047c54
10022a2a:	call   0x10059d4d
10022a2f:	ret    
10022a30:	push   esi
10022a31:	mov    esi,ecx
10022a33:	mov    ecx,0x10080a74
10022a38:	call   0x10002143
10022a3d:	mov    eax,esi
10022a3f:	pop    esi
10022a40:	ret    
10022a41:	mov    eax,DWORD PTR [ecx]
10022a43:	sub    eax,0x10
10022a46:	jmp    0x10002060
10022a4b:	push   0x50
10022a4d:	mov    eax,0x10062bd0
10022a52:	call   0x10059ca8
10022a57:	xor    esi,esi
10022a59:	mov    DWORD PTR [ebp-0x18],esi
10022a5c:	mov    DWORD PTR [ebp-0x4],esi
10022a5f:	push   DWORD PTR ds:0x10080f6c
10022a65:	xor    eax,eax
10022a67:	lea    edi,[ebp-0x38]
10022a6a:	mov    DWORD PTR [ebp-0x3c],esi
10022a6d:	stos   DWORD PTR es:[edi],eax
10022a6e:	lea    edi,[ebp-0x40]
10022a71:	mov    DWORD PTR [ebp-0x44],esi
10022a74:	stos   DWORD PTR es:[edi],eax
10022a75:	call   DWORD PTR ds:0x10066110
10022a7b:	mov    eax,ds:0x10080fa0
10022a80:	mov    DWORD PTR [ebp-0x4c],eax
10022a83:	mov    eax,ds:0x10080f64
10022a88:	push   0xffffffff
10022a8a:	mov    DWORD PTR [ebp-0x48],eax
10022a8d:	push   esi
10022a8e:	lea    eax,[ebp-0x4c]
10022a91:	push   eax
10022a92:	push   0x2
10022a94:	call   DWORD PTR ds:0x100660e8
10022a9a:	cmp    eax,esi
10022a9c:	jne    0x10022bc9
10022aa2:	push   0x1f4
10022aa7:	push   DWORD PTR ds:0x10080f6c
10022aad:	call   DWORD PTR ds:0x10066084
10022ab3:	test   eax,eax
10022ab5:	je     0x10022bd2
10022abb:	mov    BYTE PTR [ebp-0x4],0x1
10022abf:	mov    ebx,DWORD PTR [ebp-0x44]
10022ac2:	mov    edi,DWORD PTR [ebp-0x40]
10022ac5:	add    ebx,0x989680
10022acb:	adc    edi,esi
10022acd:	call   0x1002fb70
10022ad2:	cmp    edi,edx
10022ad4:	ja     0x10022b9f
10022ada:	jb     0x10022ae4
10022adc:	cmp    ebx,eax
10022ade:	jae    0x10022b9f
10022ae4:	lea    eax,[ebp-0x2c]
10022ae7:	push   esi
10022ae8:	push   eax
10022ae9:	call   0x10002892
10022aee:	pop    ecx
10022aef:	pop    ecx
10022af0:	mov    ecx,DWORD PTR [eax]
10022af2:	mov    ebx,ecx
10022af4:	mov    DWORD PTR [eax],esi
10022af6:	mov    DWORD PTR [ebp-0x28],ebx
10022af9:	lea    eax,[ebp-0x2c]
10022afc:	mov    BYTE PTR [ebp-0x4],0x2
10022b00:	call   0x100042aa
10022b05:	push   ebx
10022b06:	call   0x10002910
10022b0b:	test   al,al
10022b0d:	je     0x10022b2b
10022b0f:	mov    eax,DWORD PTR [ebx]
10022b11:	push   0x1
10022b13:	push   eax
10022b14:	lea    ecx,[ebp-0x54]
10022b17:	call   0x10035c50
10022b1c:	mov    ecx,DWORD PTR [ebp-0x3c]
10022b1f:	cmp    ecx,DWORD PTR [eax]
10022b21:	jne    0x10022b2b
10022b23:	mov    ecx,DWORD PTR [ebp-0x38]
10022b26:	cmp    ecx,DWORD PTR [eax+0x4]
10022b29:	je     0x10022b8c
10022b2b:	cmp    DWORD PTR [ebp-0x18],esi
10022b2e:	mov    DWORD PTR [ebp-0x3c],esi
10022b31:	mov    DWORD PTR [ebp-0x38],esi
10022b34:	je     0x10022b47
10022b36:	push   0x100702c4
10022b3b:	xor    eax,eax
10022b3d:	lea    esi,[ebp-0x18]
10022b40:	call   0x1001048a
10022b45:	xor    esi,esi
10022b47:	push   ebx
10022b48:	lea    eax,[ebp-0x30]
10022b4b:	push   eax
10022b4c:	call   0x10023484
10022b51:	mov    edi,DWORD PTR [eax]
10022b53:	cmp    DWORD PTR [ebp-0x18],edi
10022b56:	je     0x10022b62
10022b58:	lea    esi,[ebp-0x18]
10022b5b:	call   0x10007617
10022b60:	xor    esi,esi
10022b62:	mov    eax,DWORD PTR [ebp-0x30]
10022b65:	cmp    eax,esi
10022b67:	je     0x10022b6f
10022b69:	mov    ecx,DWORD PTR [eax]
10022b6b:	push   eax
10022b6c:	call   DWORD PTR [ecx+0x8]
10022b6f:	cmp    DWORD PTR [ebp-0x18],esi
10022b72:	je     0x10022b8c
10022b74:	mov    ebx,DWORD PTR [ebx]
10022b76:	push   0x1
10022b78:	push   ebx
10022b79:	lea    ecx,[ebp-0x5c]
10022b7c:	call   0x10035c50
10022b81:	mov    ecx,DWORD PTR [eax]
10022b83:	mov    eax,DWORD PTR [eax+0x4]
10022b86:	mov    DWORD PTR [ebp-0x3c],ecx
10022b89:	mov    DWORD PTR [ebp-0x38],eax
10022b8c:	call   0x1002fb70
10022b91:	mov    DWORD PTR [ebp-0x44],eax
10022b94:	lea    eax,[ebp-0x28]
10022b97:	mov    DWORD PTR [ebp-0x40],edx
10022b9a:	call   0x100042aa
10022b9f:	mov    DWORD PTR [ebp-0x4],esi
10022ba2:	cmp    DWORD PTR [ebp-0x18],esi
10022ba5:	jne    0x10022c0f
10022ba7:	mov    ecx,DWORD PTR [ebp+0x8]
10022baa:	xor    edx,edx
10022bac:	cmp    DWORD PTR [ecx],esi
10022bae:	je     0x10022bbe
10022bb0:	lea    eax,[ecx+0x14]
10022bb3:	mov    BYTE PTR [eax],0x0
10022bb6:	inc    edx
10022bb7:	add    eax,0x14
10022bba:	cmp    edx,DWORD PTR [ecx]
10022bbc:	jne    0x10022bb3
10022bbe:	push   DWORD PTR ds:0x10080f68
10022bc4:	jmp    0x10022a75
10022bc9:	cmp    eax,0x1
10022bcc:	je     0x10022abb
10022bd2:	or     DWORD PTR [ebp-0x4],0xffffffff
10022bd6:	mov    eax,DWORD PTR [ebp-0x18]
10022bd9:	cmp    eax,esi
10022bdb:	je     0x10022be3
10022bdd:	mov    ecx,DWORD PTR [eax]
10022bdf:	push   eax
10022be0:	call   DWORD PTR [ecx+0x8]
10022be3:	call   0x10059d4d
10022be8:	ret    0x4
10022beb:	xor    eax,eax
10022bed:	cmp    DWORD PTR [ebp-0x18],eax
10022bf0:	mov    DWORD PTR [ebp-0x3c],eax
10022bf3:	mov    DWORD PTR [ebp-0x38],eax
10022bf6:	je     0x10022c05
10022bf8:	push   0x100702c4
10022bfd:	lea    esi,[ebp-0x18]
10022c00:	call   0x1001048a
10022c05:	mov    eax,0x10022c0b
10022c0a:	ret    
10022c0b:	xor    esi,esi
10022c0d:	jmp    0x10022ba2
10022c0f:	call   DWORD PTR ds:0x10066118
10022c15:	mov    ebx,DWORD PTR [ebp+0x8]
10022c18:	cmp    DWORD PTR [ebx],esi
10022c1a:	mov    DWORD PTR [ebp-0x20],eax
10022c1d:	mov    DWORD PTR [ebp-0x24],esi
10022c20:	je     0x10022bbe
10022c22:	add    ebx,0xc
10022c25:	jmp    0x10022c29
10022c27:	xor    esi,esi
10022c29:	push   0x8
10022c2b:	call   0x100436de
10022c30:	cmp    eax,esi
10022c32:	pop    ecx
10022c33:	je     0x10022c39
10022c35:	mov    DWORD PTR [eax],esi
10022c37:	mov    esi,eax
10022c39:	mov    DWORD PTR [ebp-0x28],esi
10022c3c:	mov    edi,DWORD PTR [ebp-0x18]
10022c3f:	cmp    DWORD PTR [esi],edi
10022c41:	je     0x10022c48
10022c43:	call   0x10007617
10022c48:	call   DWORD PTR ds:0x10066160
10022c4e:	xor    edi,edi
10022c50:	push   edi
10022c51:	push   edi
10022c52:	push   esi
10022c53:	push   0x1002270f
10022c58:	push   edi
10022c59:	push   edi
10022c5a:	mov    DWORD PTR [esi+0x4],eax
10022c5d:	call   DWORD PTR ds:0x10066098
10022c63:	mov    DWORD PTR [ebp-0x1c],eax
10022c66:	cmp    eax,edi
10022c68:	mov    BYTE PTR [ebp-0x4],0x5
10022c6c:	je     0x10022c71
10022c6e:	mov    DWORD PTR [ebp-0x28],edi
10022c71:	push   DWORD PTR [ebx+0x4]
10022c74:	mov    eax,DWORD PTR [ebp-0x18]
10022c77:	push   DWORD PTR [ebx]
10022c79:	mov    edi,DWORD PTR [eax]
10022c7b:	push   DWORD PTR [ebx-0x4]
10022c7e:	lea    esi,[ebx-0x8]
10022c81:	mov    DWORD PTR [ebp-0x34],eax
10022c84:	add    edi,0x34
10022c87:	call   0x10004208
10022c8c:	push   eax
10022c8d:	push   DWORD PTR [ebp-0x34]
10022c90:	call   DWORD PTR [edi]
10022c92:	test   eax,eax
10022c94:	setge  al
10022c97:	mov    BYTE PTR [ebx+0x8],al
10022c9a:	call   DWORD PTR ds:0x10066118
10022ca0:	mov    edi,eax
10022ca2:	call   DWORD PTR ds:0x10066160
10022ca8:	push   eax
10022ca9:	call   0x1001f257
10022cae:	test   al,al
10022cb0:	pop    ecx
10022cb1:	je     0x10022cdc
10022cb3:	push   0xe
10022cb5:	call   0x10037b70
10022cba:	mov    eax,edi
10022cbc:	sub    eax,DWORD PTR [ebp-0x20]
10022cbf:	pop    ecx
10022cc0:	push   eax
10022cc1:	call   0x10004208
10022cc6:	push   eax
10022cc7:	call   0x1000205f
10022ccc:	xor    eax,eax
10022cce:	pop    ecx
10022ccf:	pop    ecx
10022cd0:	mov    DWORD PTR [ebp-0x3c],eax
10022cd3:	mov    DWORD PTR [ebp-0x38],eax
10022cd6:	mov    DWORD PTR [ebp-0x44],eax
10022cd9:	mov    DWORD PTR [ebp-0x40],eax
10022cdc:	cmp    BYTE PTR [ebx+0x8],0x0
10022ce0:	je     0x10022d40
10022ce2:	mov    eax,edi
10022ce4:	sub    eax,DWORD PTR [ebp-0x20]
10022ce7:	push   eax
10022ce8:	call   0x10004208
10022ced:	push   eax
10022cee:	call   0x1000205f
10022cf3:	cmp    DWORD PTR [ebp-0x1c],0x0
10022cf7:	pop    ecx
10022cf8:	pop    ecx
10022cf9:	mov    DWORD PTR [ebp-0x20],edi
10022cfc:	je     0x10022d07
10022cfe:	push   DWORD PTR [ebp-0x1c]
10022d01:	call   DWORD PTR ds:0x10066070
10022d07:	mov    BYTE PTR [ebp-0x4],0x0
10022d0b:	mov    esi,DWORD PTR [ebp-0x28]
10022d0e:	test   esi,esi
10022d10:	je     0x10022d25
10022d12:	mov    eax,DWORD PTR [esi]
10022d14:	test   eax,eax
10022d16:	je     0x10022d1e
10022d18:	mov    ecx,DWORD PTR [eax]
10022d1a:	push   eax
10022d1b:	call   DWORD PTR [ecx+0x8]
10022d1e:	push   esi
10022d1f:	call   0x100430d2
10022d24:	pop    ecx
10022d25:	inc    DWORD PTR [ebp-0x24]
10022d28:	mov    eax,DWORD PTR [ebp+0x8]
10022d2b:	mov    ecx,DWORD PTR [ebp-0x24]
10022d2e:	add    ebx,0x14
10022d31:	cmp    ecx,DWORD PTR [eax]
10022d33:	jne    0x10022c27
10022d39:	xor    esi,esi
10022d3b:	jmp    0x10022bbe
10022d40:	cmp    DWORD PTR [ebp-0x1c],0x0
10022d44:	je     0x10022d4f
10022d46:	push   DWORD PTR [ebp-0x1c]
10022d49:	call   DWORD PTR ds:0x10066070
10022d4f:	mov    BYTE PTR [ebp-0x4],0x0
10022d53:	mov    esi,DWORD PTR [ebp-0x28]
10022d56:	test   esi,esi
10022d58:	je     0x10022d39
10022d5a:	mov    eax,DWORD PTR [esi]
10022d5c:	test   eax,eax
10022d5e:	je     0x10022d66
10022d60:	mov    ecx,DWORD PTR [eax]
10022d62:	push   eax
10022d63:	call   DWORD PTR [ecx+0x8]
10022d66:	push   esi
10022d67:	call   0x100430d2
10022d6c:	pop    ecx
10022d6d:	jmp    0x10022d39
10022d6f:	push   0xa4
10022d74:	mov    eax,0x10062b92
10022d79:	call   0x10059ca8
10022d7e:	push   0x1f4
10022d83:	push   DWORD PTR ds:0x10080f6c
10022d89:	call   DWORD PTR ds:0x10066084
10022d8f:	test   eax,eax
10022d91:	je     0x10022da2
10022d93:	push   0xf
10022d95:	call   0x10037b70
10022d9a:	pop    ecx
10022d9b:	xor    al,al
10022d9d:	jmp    0x10023081
10022da2:	xor    esi,esi
10022da4:	mov    DWORD PTR [ebp-0x4],esi
10022da7:	mov    BYTE PTR [ebp-0x11],0x0
10022dab:	mov    DWORD PTR [ebp-0x18],esi
10022dae:	cmp    DWORD PTR [ebp+0x10],esi
10022db1:	je     0x10022de0
10022db3:	lea    eax,[ebp-0x1c]
10022db6:	push   eax
10022db7:	call   0x100247f5
10022dbc:	test   eax,eax
10022dbe:	jl     0x10023072
10022dc4:	mov    edi,DWORD PTR [ebp-0x1c]
10022dc7:	mov    eax,DWORD PTR [ebp+0x10]
10022dca:	mov    ecx,edi
10022dcc:	call   0x10010a3a
10022dd1:	cmp    edi,esi
10022dd3:	je     0x10022de0
10022dd5:	lea    esi,[ebp-0x18]
10022dd8:	call   0x10007617
10022ddd:	mov    esi,DWORD PTR [ebp-0x18]
10022de0:	mov    eax,DWORD PTR [ebp+0xc]
10022de3:	mov    WORD PTR [ebp-0x60],0x16
10022de9:	mov    DWORD PTR [ebp-0x58],eax
10022dec:	lea    eax,[ebp-0x50]
10022def:	push   eax
10022df0:	call   DWORD PTR ds:0x1006628c
10022df6:	mov    BYTE PTR [ebp-0x4],0x3
10022dfa:	cmp    DWORD PTR [ebp+0x10],0x0
10022dfe:	je     0x10022e41
10022e00:	test   esi,esi
10022e02:	mov    WORD PTR [ebp-0x70],0x9
10022e08:	mov    DWORD PTR [ebp-0x68],esi
10022e0b:	je     0x10022e13
10022e0d:	mov    eax,DWORD PTR [esi]
10022e0f:	push   esi
10022e10:	call   DWORD PTR [eax+0x4]
10022e13:	lea    eax,[ebp-0x70]
10022e16:	push   eax
10022e17:	lea    eax,[ebp-0x50]
10022e1a:	push   eax
10022e1b:	mov    BYTE PTR [ebp-0x4],0x4
10022e1f:	call   DWORD PTR ds:0x10066280
10022e25:	test   eax,eax
10022e27:	jge    0x10022e2f
10022e29:	push   eax
10022e2a:	call   0x10050e30
10022e2f:	lea    eax,[ebp-0x70]
10022e32:	mov    BYTE PTR [ebp-0x4],0x3
10022e36:	mov    ebx,DWORD PTR ds:0x10066294
10022e3c:	push   eax
10022e3d:	call   ebx
10022e3f:	jmp    0x10022e47
10022e41:	mov    ebx,DWORD PTR ds:0x10066294
10022e47:	mov    eax,DWORD PTR [ebp+0x14]
10022e4a:	cmp    DWORD PTR [eax+0x18],0x10
10022e4e:	jb     0x10022e55
10022e50:	mov    eax,DWORD PTR [eax+0x4]
10022e53:	jmp    0x10022e58
10022e55:	add    eax,0x4
10022e58:	push   eax
10022e59:	lea    edi,[ebp+0x10]
10022e5c:	call   0x1000244f
10022e61:	lea    esi,[ebp-0x80]
10022e64:	mov    BYTE PTR [ebp-0x4],0x5
10022e68:	call   0x10022526
10022e6d:	call   0x100025aa
10022e72:	mov    esi,DWORD PTR ds:0x1006628c
10022e78:	lea    eax,[ebp-0x40]
10022e7b:	push   eax
10022e7c:	call   esi
10022e7e:	lea    eax,[ebp-0x30]
10022e81:	push   eax
10022e82:	call   esi
10022e84:	mov    BYTE PTR [ebp-0x4],0x9
10022e88:	lea    esi,[ebp-0x60]
10022e8b:	lea    edi,[ebp-0x90]
10022e91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10022e92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10022e93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10022e94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10022e95:	lea    esi,[ebp-0x50]
10022e98:	lea    edi,[ebp-0xa0]
10022e9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10022e9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10022ea0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10022ea1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10022ea2:	lea    esi,[ebp-0x80]
10022ea5:	lea    edi,[ebp-0xb0]
10022eab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10022eac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10022ead:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10022eae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10022eaf:	mov    esi,DWORD PTR [ebp+0x8]
10022eb2:	push   0x1c5ede62
10022eb7:	push   0x10070bb4
10022ebc:	mov    DWORD PTR [esi],0x2
10022ec2:	call   0x100042d1
10022ec7:	pop    ecx
10022ec8:	pop    ecx
10022ec9:	push   0x19114054
10022ece:	push   eax
10022ecf:	call   0x100042d1
10022ed4:	pop    ecx
10022ed5:	pop    ecx
10022ed6:	push   0x54e94676
10022edb:	push   eax
10022edc:	call   0x100042d1
10022ee1:	pop    ecx
10022ee2:	pop    ecx
10022ee3:	push   0x6c210d74
10022ee8:	push   eax
10022ee9:	call   0x100042d1
10022eee:	pop    ecx
10022eef:	pop    ecx
10022ef0:	push   0x72898fbc
10022ef5:	push   eax
10022ef6:	call   0x100042d1
10022efb:	pop    ecx
10022efc:	pop    ecx
10022efd:	push   eax
10022efe:	push   0xb
10022f00:	push   0x10070bdc
10022f05:	call   0x100044a2
10022f0a:	add    esp,0xc
10022f0d:	push   eax
10022f0e:	lea    eax,[esi+0x4]
10022f11:	push   eax
10022f12:	call   0x10002386
10022f17:	lea    eax,[ebp-0xb0]
10022f1d:	mov    DWORD PTR [esi+0x8],eax
10022f20:	lea    eax,[ebp-0x40]
10022f23:	push   0x30818462
10022f28:	mov    DWORD PTR [esi+0xc],0x3
10022f2f:	mov    DWORD PTR [esi+0x10],eax
10022f32:	push   0x10070bf4
10022f37:	call   0x100042d1
10022f3c:	pop    ecx
10022f3d:	pop    ecx
10022f3e:	push   0xdf37202
10022f43:	push   eax
10022f44:	call   0x100042d1
10022f49:	pop    ecx
10022f4a:	pop    ecx
10022f4b:	push   0x2a734a6a
10022f50:	push   eax
10022f51:	call   0x100042d1
10022f56:	pop    ecx
10022f57:	pop    ecx
10022f58:	push   0x3abdd274
10022f5d:	push   eax
10022f5e:	call   0x100042d1
10022f63:	pop    ecx
10022f64:	pop    ecx
10022f65:	push   0x2fc2ecc6
10022f6a:	push   eax
10022f6b:	call   0x100042d1
10022f70:	pop    ecx
10022f71:	pop    ecx
10022f72:	push   0x546756e2
10022f77:	push   eax
10022f78:	call   0x100042d1
10022f7d:	pop    ecx
10022f7e:	pop    ecx
10022f7f:	push   eax
10022f80:	push   0xd
10022f82:	push   0x10070c1c
10022f87:	call   0x100044a2
10022f8c:	add    esp,0xc
10022f8f:	push   eax
10022f90:	lea    eax,[esi+0x18]
10022f93:	push   eax
10022f94:	call   0x10002386
10022f99:	push   DWORD PTR ds:0x10080f64
10022f9f:	and    DWORD PTR [esi+0x1c],0x0
10022fa3:	and    DWORD PTR [esi+0x20],0x0
10022fa7:	lea    eax,[ebp-0x30]
10022faa:	mov    DWORD PTR [esi+0x24],eax
10022fad:	call   DWORD PTR ds:0x10066110
10022fb3:	push   0xffffffff
10022fb5:	push   DWORD PTR ds:0x10080f68
10022fbb:	call   DWORD PTR ds:0x10066084
10022fc1:	cmp    BYTE PTR [esi+0x14],0x0
10022fc5:	je     0x10023043
10022fc7:	cmp    BYTE PTR [esi+0x28],0x0
10022fcb:	je     0x10023043
10022fcd:	lea    esi,[ebp-0x40]
10022fd0:	lea    edi,[ebp+0x10]
10022fd3:	call   0x10022592
10022fd8:	mov    BYTE PTR [ebp-0x4],0xa
10022fdc:	mov    eax,DWORD PTR [eax]
10022fde:	test   eax,eax
10022fe0:	je     0x10022fe6
10022fe2:	mov    eax,DWORD PTR [eax]
10022fe4:	jmp    0x10022fe8
10022fe6:	xor    eax,eax
10022fe8:	push   eax
10022fe9:	push   DWORD PTR [ebp+0x18]
10022fec:	call   0x10002386
10022ff1:	lea    edi,[ebp+0x10]
10022ff4:	mov    BYTE PTR [ebp-0x4],0x9
10022ff8:	call   0x100025aa
10022ffd:	push   DWORD PTR [ebp+0x18]
10023000:	call   0x10024354
10023005:	mov    esi,DWORD PTR [ebp+0x1c]
10023008:	mov    BYTE PTR [ebp-0x4],0xb
1002300c:	cmp    WORD PTR [ebp-0x30],0x3
10023011:	pop    ecx
10023012:	mov    BYTE PTR [ebp-0x11],al
10023015:	mov    DWORD PTR [esi],0x1
1002301b:	je     0x10023036
1002301d:	push   0x3
1002301f:	push   0x0
10023021:	lea    eax,[ebp-0x30]
10023024:	push   eax
10023025:	push   eax
10023026:	call   DWORD PTR ds:0x1006627c
1002302c:	test   eax,eax
1002302e:	jge    0x10023036
10023030:	push   eax
10023031:	call   0x10050e30
10023036:	movsx  eax,WORD PTR [ebp-0x28]
1002303a:	mov    DWORD PTR [esi],eax
1002303c:	mov    DWORD PTR [ebp-0x4],0x9
10023043:	lea    eax,[ebp-0x30]
10023046:	push   eax
10023047:	call   ebx
10023049:	lea    eax,[ebp-0x40]
1002304c:	push   eax
1002304d:	call   ebx
1002304f:	lea    eax,[ebp-0x80]
10023052:	push   eax
10023053:	call   ebx
10023055:	lea    eax,[ebp-0x50]
10023058:	push   eax
10023059:	call   ebx
1002305b:	lea    eax,[ebp-0x60]
1002305e:	push   eax
1002305f:	call   ebx
10023061:	mov    BYTE PTR [ebp-0x4],0x0
10023065:	mov    eax,DWORD PTR [ebp-0x18]
10023068:	test   eax,eax
1002306a:	je     0x10023072
1002306c:	mov    ecx,DWORD PTR [eax]
1002306e:	push   eax
1002306f:	call   DWORD PTR [ecx+0x8]
10023072:	push   DWORD PTR ds:0x10080f6c
10023078:	call   DWORD PTR ds:0x10066110
1002307e:	mov    al,BYTE PTR [ebp-0x11]
10023081:	call   0x10059d4d
10023086:	ret    0x18
10023089:	mov    eax,0x1002308f
1002308e:	ret    
1002308f:	mov    ebx,DWORD PTR ds:0x10066294
10023095:	jmp    0x10023043
10023097:	push   0x4
10023099:	call   0x10037b70
1002309e:	pop    ecx
1002309f:	mov    eax,0x10023072
100230a4:	ret    
100230a5:	push   0xd8
100230aa:	mov    eax,0x10063be7
100230af:	call   0x10059ca8
100230b4:	mov    edi,ecx
100230b6:	push   0x1f4
100230bb:	push   DWORD PTR ds:0x10080f6c
100230c1:	call   DWORD PTR ds:0x10066084
100230c7:	test   eax,eax
100230c9:	je     0x100230d7
100230cb:	push   0xf
100230cd:	call   0x10037b70
100230d2:	pop    ecx
100230d3:	xor    al,al
100230d5:	jmp    0x10023133
100230d7:	lea    eax,[ebp-0x1c]
100230da:	xor    ebx,ebx
100230dc:	push   eax
100230dd:	mov    BYTE PTR [ebp-0x15],bl
100230e0:	mov    DWORD PTR [ebp-0x4],ebx
100230e3:	call   0x100247f5
100230e8:	test   eax,eax
100230ea:	jl     0x10023124
100230ec:	mov    esi,DWORD PTR [ebp-0x1c]
100230ef:	mov    eax,DWORD PTR [ebp+0x10]
100230f2:	mov    ecx,esi
100230f4:	call   0x10010a3a
100230f9:	cmp    esi,ebx
100230fb:	mov    DWORD PTR [ebp-0x80],esi
100230fe:	je     0x10023106
10023100:	mov    eax,DWORD PTR [esi]
10023102:	push   esi
10023103:	call   DWORD PTR [eax+0x4]
10023106:	lea    eax,[ebp+0x10]
10023109:	push   eax
1002310a:	mov    BYTE PTR [ebp-0x4],0x1
1002310e:	call   0x10024872
10023113:	test   eax,eax
10023115:	jge    0x1002313b
10023117:	cmp    esi,ebx
10023119:	mov    BYTE PTR [ebp-0x4],bl
1002311c:	je     0x10023124
1002311e:	mov    eax,DWORD PTR [esi]
10023120:	push   esi
10023121:	call   DWORD PTR [eax+0x8]
10023124:	push   DWORD PTR ds:0x10080f6c
1002312a:	call   DWORD PTR ds:0x10066110
10023130:	mov    al,BYTE PTR [ebp-0x15]
10023133:	call   0x10059d4d
10023138:	ret    0x1c
1002313b:	mov    ecx,DWORD PTR [ebp+0x14]
1002313e:	mov    ebx,DWORD PTR [ebp+0x10]
10023141:	call   0x100117d8
10023146:	test   ebx,ebx
10023148:	mov    DWORD PTR [ebp+0x14],ebx
1002314b:	je     0x10023153
1002314d:	mov    eax,DWORD PTR [ebx]
1002314f:	push   ebx
10023150:	call   DWORD PTR [eax+0x4]
10023153:	mov    eax,DWORD PTR [ebp+0xc]
10023156:	mov    WORD PTR [ebp-0x5c],0x16
1002315c:	mov    DWORD PTR [ebp-0x54],eax
1002315f:	test   esi,esi
10023161:	mov    BYTE PTR [ebp-0x4],0x3
10023165:	mov    WORD PTR [ebp-0x3c],0x9
1002316b:	mov    DWORD PTR [ebp-0x34],esi
1002316e:	je     0x10023176
10023170:	mov    eax,DWORD PTR [esi]
10023172:	push   esi
10023173:	call   DWORD PTR [eax+0x4]
10023176:	test   ebx,ebx
10023178:	mov    BYTE PTR [ebp-0x4],0x4
1002317c:	mov    WORD PTR [ebp-0x6c],0x9
10023182:	mov    DWORD PTR [ebp-0x64],ebx
10023185:	je     0x1002318d
10023187:	mov    eax,DWORD PTR [ebx]
10023189:	push   ebx
1002318a:	call   DWORD PTR [eax+0x4]
1002318d:	test   edi,edi
1002318f:	mov    BYTE PTR [ebp-0x4],0x5
10023193:	mov    WORD PTR [ebp-0x2c],0x9
10023199:	mov    DWORD PTR [ebp-0x24],edi
1002319c:	je     0x100231a4
1002319e:	mov    eax,DWORD PTR [edi]
100231a0:	push   edi
100231a1:	call   DWORD PTR [eax+0x4]
100231a4:	mov    eax,DWORD PTR [ebp+0x18]
100231a7:	mov    BYTE PTR [ebp-0x4],0x6
100231ab:	cmp    DWORD PTR [eax+0x18],0x10
100231af:	jb     0x100231b6
100231b1:	mov    eax,DWORD PTR [eax+0x4]
100231b4:	jmp    0x100231b9
100231b6:	add    eax,0x4
100231b9:	push   eax
100231ba:	lea    edi,[ebp+0x10]
100231bd:	call   0x1000244f
100231c2:	lea    esi,[ebp-0x7c]
100231c5:	mov    BYTE PTR [ebp-0x4],0x7
100231c9:	call   0x10022526
100231ce:	mov    BYTE PTR [ebp-0x4],0x9
100231d2:	call   0x100025aa
100231d7:	mov    eax,DWORD PTR [ebp+0x1c]
100231da:	mov    esi,DWORD PTR [eax]
100231dc:	push   esi
100231dd:	mov    WORD PTR [ebp-0x4c],0x8
100231e3:	call   DWORD PTR ds:0x100662b0
100231e9:	test   eax,eax
100231eb:	mov    DWORD PTR [ebp-0x44],eax
100231ee:	jne    0x100231fe
100231f0:	test   esi,esi
100231f2:	je     0x100231fe
100231f4:	push   0x8007000e
100231f9:	call   0x10050e30
100231fe:	cmp    BYTE PTR [ebp+0x20],0x0
10023202:	mov    BYTE PTR [ebp-0x4],0xa
10023206:	lea    esi,[ebp-0x5c]
10023209:	lea    edi,[ebp-0x94]
1002320f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10023210:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10023211:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10023212:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10023213:	lea    esi,[ebp-0x3c]
10023216:	lea    edi,[ebp-0xa4]
1002321c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002321d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002321e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002321f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10023220:	lea    esi,[ebp-0x6c]
10023223:	lea    edi,[ebp-0xb4]
10023229:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002322a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002322b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002322c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002322d:	lea    esi,[ebp-0x2c]
10023230:	lea    edi,[ebp-0xc4]
10023236:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10023237:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10023238:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10023239:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002323a:	lea    esi,[ebp-0x7c]
1002323d:	lea    edi,[ebp-0xd4]
10023243:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10023244:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10023245:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10023246:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10023247:	lea    esi,[ebp-0x4c]
1002324a:	lea    edi,[ebp-0xe4]
10023250:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10023251:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10023252:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10023253:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10023254:	mov    esi,DWORD PTR [ebp+0x8]
10023257:	mov    DWORD PTR [esi],0x1
1002325d:	je     0x100232ae
1002325f:	push   0x79367dcc
10023264:	push   0x10070c38
10023269:	call   0x100042d1
1002326e:	pop    ecx
1002326f:	pop    ecx
10023270:	push   0x2be135e4
10023275:	push   eax
10023276:	call   0x100042d1
1002327b:	pop    ecx
1002327c:	pop    ecx
1002327d:	push   0x27777600
10023282:	push   eax
10023283:	call   0x100042d1
10023288:	pop    ecx
10023289:	pop    ecx
1002328a:	push   0xd2e3608
1002328f:	push   eax
10023290:	call   0x100042d1
10023295:	pop    ecx
10023296:	pop    ecx
10023297:	push   0x491708ce
1002329c:	push   eax
1002329d:	call   0x100042d1
100232a2:	pop    ecx
100232a3:	pop    ecx
100232a4:	push   eax
100232a5:	push   0x9
100232a7:	push   0x10070c70
100232ac:	jmp    0x100232d4
100232ae:	push   0x5ce6f75c
100232b3:	push   0x10070c84
100232b8:	call   0x100042d1
100232bd:	pop    ecx
100232be:	pop    ecx
100232bf:	push   0x777fba14
100232c4:	push   eax
100232c5:	call   0x100042d1
100232ca:	pop    ecx
100232cb:	pop    ecx
100232cc:	push   eax
100232cd:	push   0x8
100232cf:	push   0x10070cb0
100232d4:	call   0x100044a2
100232d9:	add    esp,0xc
100232dc:	push   eax
100232dd:	lea    eax,[esi+0x4]
100232e0:	push   eax
100232e1:	call   0x10002386
100232e6:	push   DWORD PTR ds:0x10080f64
100232ec:	and    DWORD PTR [esi+0x10],0x0
100232f0:	lea    eax,[ebp-0xe4]
100232f6:	mov    DWORD PTR [esi+0x8],eax
100232f9:	mov    DWORD PTR [esi+0xc],0x6
10023300:	call   DWORD PTR ds:0x10066110
10023306:	push   0xffffffff
10023308:	push   DWORD PTR ds:0x10080f68
1002330e:	call   DWORD PTR ds:0x10066084
10023314:	cmp    BYTE PTR [esi+0x14],0x0
10023318:	je     0x10023325
1002331a:	mov    eax,ebx
1002331c:	call   0x10011cb9
10023321:	mov    BYTE PTR [ebp-0x15],0x1
10023325:	mov    esi,DWORD PTR ds:0x10066294
1002332b:	lea    eax,[ebp-0x4c]
1002332e:	push   eax
1002332f:	call   esi
10023331:	lea    eax,[ebp-0x7c]
10023334:	push   eax
10023335:	call   esi
10023337:	lea    eax,[ebp-0x2c]
1002333a:	push   eax
1002333b:	call   esi
1002333d:	lea    eax,[ebp-0x6c]
10023340:	push   eax
10023341:	call   esi
10023343:	lea    eax,[ebp-0x3c]
10023346:	push   eax
10023347:	call   esi
10023349:	lea    eax,[ebp-0x5c]
1002334c:	push   eax
1002334d:	call   esi
1002334f:	test   ebx,ebx
10023351:	mov    BYTE PTR [ebp-0x4],0x1
10023355:	je     0x1002335d
10023357:	mov    eax,DWORD PTR [ebx]
10023359:	push   ebx
1002335a:	call   DWORD PTR [eax+0x8]
1002335d:	mov    BYTE PTR [ebp-0x4],0x0
10023361:	mov    eax,DWORD PTR [ebp-0x1c]
10023364:	test   eax,eax
10023366:	je     0x10023124
1002336c:	mov    ecx,DWORD PTR [eax]
1002336e:	push   eax
1002336f:	call   DWORD PTR [ecx+0x8]
10023372:	jmp    0x10023124
10023377:	push   0x4
10023379:	call   0x10037b70
1002337e:	pop    ecx
1002337f:	mov    eax,0x10023124
10023384:	ret    
10023385:	push   0x2c
10023387:	mov    eax,0x10062b2f
1002338c:	call   0x10059ca8
10023391:	mov    esi,ecx
10023393:	mov    ebx,DWORD PTR ds:0x10066084
10023399:	push   0x1f4
1002339e:	push   DWORD PTR ds:0x10080f6c
100233a4:	call   ebx
100233a6:	test   eax,eax
100233a8:	je     0x100233b9
100233aa:	push   0xf
100233ac:	call   0x10037b70
100233b1:	pop    ecx
100233b2:	xor    eax,eax
100233b4:	jmp    0x10023470
100233b9:	and    DWORD PTR [ebp-0x4],0x0
100233bd:	mov    edi,DWORD PTR ds:0x1006628c
100233c3:	and    DWORD PTR [ebp-0x14],0x0
100233c7:	lea    eax,[ebp-0x28]
100233ca:	push   eax
100233cb:	call   edi
100233cd:	push   0x10070cc8
100233d2:	push   0x8
100233d4:	mov    BYTE PTR [ebp-0x4],0x1
100233d8:	push   0x10070d08
100233dd:	mov    DWORD PTR [esi],0x1
100233e3:	call   0x100044a2
100233e8:	add    esp,0xc
100233eb:	push   eax
100233ec:	lea    eax,[esi+0x4]
100233ef:	push   eax
100233f0:	call   0x10002386
100233f5:	push   DWORD PTR ds:0x10080f64
100233fb:	and    DWORD PTR [esi+0x8],0x0
100233ff:	and    DWORD PTR [esi+0xc],0x0
10023403:	lea    eax,[ebp-0x28]
10023406:	mov    DWORD PTR [esi+0x10],eax
10023409:	call   DWORD PTR ds:0x10066110
1002340f:	push   0xffffffff
10023411:	push   DWORD PTR ds:0x10080f68
10023417:	call   ebx
10023419:	cmp    BYTE PTR [esi+0x14],0x0
1002341d:	je     0x10023457
1002341f:	cmp    WORD PTR [ebp-0x28],0x16
10023424:	jne    0x1002342e
10023426:	mov    eax,DWORD PTR [ebp-0x20]
10023429:	mov    DWORD PTR [ebp-0x14],eax
1002342c:	jmp    0x10023457
1002342e:	lea    eax,[ebp-0x38]
10023431:	push   eax
10023432:	call   edi
10023434:	lea    ecx,[ebp-0x28]
10023437:	mov    dx,0x16
1002343b:	lea    eax,[ebp-0x38]
1002343e:	mov    BYTE PTR [ebp-0x4],0x2
10023442:	call   0x10022565
10023447:	mov    esi,DWORD PTR [ebp-0x30]
1002344a:	lea    eax,[ebp-0x38]
1002344d:	push   eax
1002344e:	call   DWORD PTR ds:0x10066294
10023454:	mov    DWORD PTR [ebp-0x14],esi
10023457:	lea    eax,[ebp-0x28]
1002345a:	push   eax
1002345b:	call   DWORD PTR ds:0x10066294
10023461:	push   DWORD PTR ds:0x10080f6c
10023467:	call   DWORD PTR ds:0x10066110
1002346d:	mov    eax,DWORD PTR [ebp-0x14]
10023470:	call   0x10059d4d
10023475:	ret    
10023476:	push   0x4
10023478:	call   0x10037b70
1002347d:	pop    ecx
1002347e:	mov    eax,0x10023461
10023483:	ret    
10023484:	push   ebp
10023485:	mov    ebp,esp
10023487:	and    esp,0xfffffff8
1002348a:	push   0xffffffff
1002348c:	push   0x10062af1
10023491:	mov    eax,fs:0x0
10023497:	push   eax
10023498:	sub    esp,0xd8
1002349e:	mov    eax,ds:0x1007e030
100234a3:	xor    eax,esp
100234a5:	mov    DWORD PTR [esp+0xd0],eax
100234ac:	push   ebx
100234ad:	push   esi
100234ae:	push   edi
100234af:	mov    eax,ds:0x1007e030
100234b4:	xor    eax,esp
100234b6:	push   eax
100234b7:	lea    eax,[esp+0xe8]
100234be:	mov    fs:0x0,eax
100234c4:	mov    eax,DWORD PTR [ebp+0x8]
100234c7:	mov    DWORD PTR [esp+0x28],eax
100234cb:	mov    eax,DWORD PTR [ebp+0xc]
100234ce:	mov    DWORD PTR [esp+0x1c],eax
100234d2:	lea    eax,[esp+0x10]
100234d6:	xor    edi,edi
100234d8:	push   eax
100234d9:	mov    DWORD PTR [esp+0x24],edi
100234dd:	call   0x10024763
100234e2:	cmp    eax,edi
100234e4:	jge    0x10023529
100234e6:	push   0x10070d1c
100234eb:	push   0x16
100234ed:	push   0x10070d4c
100234f2:	call   0x100042e3
100234f7:	add    esp,0xc
100234fa:	push   eax
100234fb:	lea    ecx,[esp+0x3c]
100234ff:	call   0x100011d1
10023504:	lea    eax,[esp+0x38]
10023508:	push   eax
10023509:	lea    eax,[esp+0x5c]
1002350d:	push   eax
1002350e:	mov    DWORD PTR [esp+0xf8],edi
10023515:	call   0x100026e6
1002351a:	push   0x10074e84
1002351f:	lea    eax,[esp+0x5c]
10023523:	push   eax
10023524:	call   0x10047c54
10023529:	mov    esi,DWORD PTR [esp+0x10]
1002352d:	lea    eax,[esi+0x24]
10023530:	neg    esi
10023532:	sbb    esi,esi
10023534:	and    esi,eax
10023536:	mov    DWORD PTR [esp+0x18],esi
1002353a:	je     0x10023542
1002353c:	mov    eax,DWORD PTR [esi]
1002353e:	push   esi
1002353f:	call   DWORD PTR [eax+0x4]
10023542:	mov    DWORD PTR [esp+0xf0],0x1
1002354d:	call   DWORD PTR ds:0x10066118
10023553:	cmp    esi,edi
10023555:	mov    DWORD PTR [esp+0x20],eax
10023559:	mov    DWORD PTR [esp+0x14],edi
1002355d:	je     0x1002356e
1002355f:	mov    eax,DWORD PTR [esi]
10023561:	lea    ecx,[esp+0x14]
10023565:	push   ecx
10023566:	push   0x100702b4
1002356b:	push   esi
1002356c:	call   DWORD PTR [eax]
1002356e:	mov    BYTE PTR [esp+0xf0],0x2
10023576:	cmp    DWORD PTR [esp+0x14],edi
1002357a:	jne    0x100235d5
1002357c:	push   0x30f2b77c
10023581:	push   0x10070d64
10023586:	call   0x100042d1
1002358b:	push   0x4fa83d08
10023590:	push   eax
10023591:	call   0x100042d1
10023596:	push   eax
10023597:	push   0x16
10023599:	push   0x10070d4c
1002359e:	call   0x100042e3
100235a3:	add    esp,0x1c
100235a6:	push   eax
100235a7:	lea    ecx,[esp+0x3c]
100235ab:	call   0x100011d1
100235b0:	lea    eax,[esp+0x38]
100235b4:	push   eax
100235b5:	lea    eax,[esp+0x5c]
100235b9:	push   eax
100235ba:	mov    BYTE PTR [esp+0xf8],0x3
100235c2:	call   0x100026e6
100235c7:	push   0x10074e84
100235cc:	lea    eax,[esp+0x5c]
100235d0:	jmp    0x10023523
100235d5:	mov    eax,DWORD PTR [esi]
100235d7:	push   0x10070da4
100235dc:	push   esi
100235dd:	call   DWORD PTR [eax+0x1c]
100235e0:	test   eax,eax
100235e2:	jge    0x10023648
100235e4:	push   0x5f04d854
100235e9:	push   0x10070db4
100235ee:	call   0x100042d1
100235f3:	push   0x1e221ee
100235f8:	push   eax
100235f9:	call   0x100042d1
100235fe:	push   0x23ea6a18
10023603:	push   eax
10023604:	call   0x100042d1
10023609:	push   eax
1002360a:	push   0x16
1002360c:	push   0x10070d4c
10023611:	call   0x100042e3
10023616:	add    esp,0x24
10023619:	push   eax
1002361a:	lea    ecx,[esp+0x3c]
1002361e:	call   0x100011d1
10023623:	lea    eax,[esp+0x38]
10023627:	push   eax
10023628:	lea    eax,[esp+0x5c]
1002362c:	push   eax
1002362d:	mov    BYTE PTR [esp+0xf8],0x4
10023635:	call   0x100026e6
1002363a:	push   0x10074e84
1002363f:	lea    eax,[esp+0x5c]
10023643:	jmp    0x10023523
10023648:	push   edi
10023649:	lea    ecx,[esp+0xc8]
10023650:	mov    DWORD PTR [esp+0xe0],0xf
1002365b:	call   0x10001420
10023660:	push   0x10070de4
10023665:	push   0x16
10023667:	push   0x10070e0c
1002366c:	mov    BYTE PTR [esp+0xfc],0x5
10023674:	call   0x100042e3
10023679:	add    esp,0xc
1002367c:	push   eax
1002367d:	lea    eax,[esp+0xc8]
10023684:	push   eax
10023685:	call   0x10004120
1002368a:	push   0x521036ce
1002368f:	push   0x10070e24
10023694:	call   0x100042d1
10023699:	push   eax
1002369a:	push   0x15
1002369c:	push   0x10070e48
100236a1:	call   0x100042e3
100236a6:	add    esp,0x14
100236a9:	push   eax
100236aa:	lea    eax,[esp+0xc8]
100236b1:	push   eax
100236b2:	call   0x10004120
100236b7:	push   0x46a61e28
100236bc:	push   0x10070e60
100236c1:	call   0x100042d1
100236c6:	push   0x479f47ca
100236cb:	push   eax
100236cc:	call   0x100042d1
100236d1:	push   0x6c13f77a
100236d6:	push   eax
100236d7:	call   0x100042d1
100236dc:	push   eax
100236dd:	push   0x1c
100236df:	push   0x10070e9c
100236e4:	call   0x100042e3
100236e9:	add    esp,0x24
100236ec:	push   eax
100236ed:	lea    eax,[esp+0xc8]
100236f4:	push   eax
100236f5:	call   0x10004120
100236fa:	push   0x25b03f8c
100236ff:	push   0x10070ebc
10023704:	call   0x100042d1
10023709:	push   eax
1002370a:	push   0x1d
1002370c:	push   0x10070ee8
10023711:	call   0x100042e3
10023716:	add    esp,0x14
10023719:	push   eax
1002371a:	lea    eax,[esp+0xc8]
10023721:	push   eax
10023722:	call   0x10004120
10023727:	push   0x5d2a5410
1002372c:	push   0x10070f08
10023731:	call   0x100042d1
10023736:	push   0xcd7361c
1002373b:	push   eax
1002373c:	call   0x100042d1
10023741:	push   0x5a544830
10023746:	push   eax
10023747:	call   0x100042d1
1002374c:	push   0x2554f4c8
10023751:	push   eax
10023752:	call   0x100042d1
10023757:	push   0xbc26a20
1002375c:	push   eax
1002375d:	call   0x100042d1
10023762:	push   eax
10023763:	push   0x14
10023765:	push   0x10070f30
1002376a:	call   0x100042e3
1002376f:	add    esp,0x34
10023772:	push   eax
10023773:	lea    eax,[esp+0xc8]
1002377a:	push   eax
1002377b:	call   0x10004120
10023780:	push   0x7871a752
10023785:	push   0x10070f48
1002378a:	call   0x100042d1
1002378f:	push   0x39a6d90e
10023794:	push   eax
10023795:	call   0x100042d1
1002379a:	push   0x39cf0d8
1002379f:	push   eax
100237a0:	call   0x100042d1
100237a5:	push   0x49db6138
100237aa:	push   eax
100237ab:	call   0x100042d1
100237b0:	push   0xb62955e
100237b5:	push   eax
100237b6:	call   0x100042d1
100237bb:	push   eax
100237bc:	push   0x1b
100237be:	push   0x10070f84
100237c3:	call   0x100042e3
100237c8:	add    esp,0x34
100237cb:	push   eax
100237cc:	lea    eax,[esp+0xc8]
100237d3:	push   eax
100237d4:	call   0x10004120
100237d9:	push   0x3b9d2114
100237de:	push   0x10070fa0
100237e3:	call   0x100042d1
100237e8:	push   0x4c8d3c10
100237ed:	push   eax
100237ee:	call   0x100042d1
100237f3:	push   0x3b258b20
100237f8:	push   eax
100237f9:	call   0x100042d1
100237fe:	push   eax
100237ff:	push   0x7
10023801:	push   0x10070fcc
10023806:	call   0x100042e3
1002380b:	add    esp,0x24
1002380e:	push   eax
1002380f:	lea    eax,[esp+0xc8]
10023816:	push   eax
10023817:	call   0x10004120
1002381c:	push   0x70ee41ec
10023821:	push   0x10070fd4
10023826:	call   0x100042d1
1002382b:	push   0x1fc85ad4
10023830:	push   eax
10023831:	call   0x100042d1
10023836:	push   0x511fb33a
1002383b:	push   eax
1002383c:	call   0x100042d1
10023841:	push   0x412d8fa2
10023846:	push   eax
10023847:	call   0x100042d1
1002384c:	push   0x5d36e2aa
10023851:	push   eax
10023852:	call   0x100042d1
10023857:	push   eax
10023858:	push   0x19
1002385a:	push   0x10071014
1002385f:	call   0x100042e3
10023864:	add    esp,0x34
10023867:	push   eax
10023868:	lea    eax,[esp+0xc8]
1002386f:	push   eax
10023870:	call   0x10004120
10023875:	mov    ebx,0x10071030
1002387a:	push   ebx
1002387b:	lea    eax,[esp+0xc8]
10023882:	push   eax
10023883:	call   0x10004120
10023888:	push   0x45c37708
1002388d:	push   0x10071034
10023892:	call   0x100042d1
10023897:	push   0x6b7a28ce
1002389c:	push   eax
1002389d:	call   0x100042d1
100238a2:	push   0x6a087c2c
100238a7:	push   eax
100238a8:	call   0x100042d1
100238ad:	push   eax
100238ae:	push   0x15
100238b0:	push   0x10071064
100238b5:	call   0x100042e3
100238ba:	add    esp,0x24
100238bd:	push   eax
100238be:	lea    eax,[esp+0xc8]
100238c5:	push   eax
100238c6:	call   0x10004120
100238cb:	mov    esi,0x1007107c
100238d0:	push   esi
100238d1:	lea    eax,[esp+0xc8]
100238d8:	push   eax
100238d9:	call   0x10004120
100238de:	push   0x31e8e296
100238e3:	push   0x10071080
100238e8:	call   0x100042d1
100238ed:	push   0x18580b2c
100238f2:	push   eax
100238f3:	call   0x100042d1
100238f8:	push   0x71b65724
100238fd:	push   eax
100238fe:	call   0x100042d1
10023903:	push   eax
10023904:	push   0x14
10023906:	push   0x100710a8
1002390b:	call   0x100042e3
10023910:	add    esp,0x24
10023913:	push   eax
10023914:	lea    eax,[esp+0xc8]
1002391b:	push   eax
1002391c:	call   0x10004120
10023921:	push   ebx
10023922:	lea    eax,[esp+0xc8]
10023929:	push   eax
1002392a:	call   0x10004120
1002392f:	push   0x188adfe2
10023934:	push   0x100710c0
10023939:	call   0x100042d1
1002393e:	push   eax
1002393f:	push   0x19
10023941:	push   0x10071100
10023946:	call   0x100042e3
1002394b:	add    esp,0x14
1002394e:	push   eax
1002394f:	lea    eax,[esp+0xc8]
10023956:	push   eax
10023957:	call   0x10004120
1002395c:	push   esi
1002395d:	lea    eax,[esp+0xc8]
10023964:	push   eax
10023965:	call   0x10004120
1002396a:	push   0x726ab804
1002396f:	push   0x1007111c
10023974:	call   0x100042d1
10023979:	push   0x76a51266
1002397e:	push   eax
1002397f:	call   0x100042d1
10023984:	push   eax
10023985:	push   0x26
10023987:	push   0x10071144
1002398c:	call   0x100042e3
10023991:	add    esp,0x1c
10023994:	push   eax
10023995:	lea    eax,[esp+0xc8]
1002399c:	push   eax
1002399d:	call   0x10004120
100239a2:	push   0x66592abc
100239a7:	push   0x1007116c
100239ac:	call   0x100042d1
100239b1:	push   0x6baa228e
100239b6:	push   eax
100239b7:	call   0x100042d1
100239bc:	push   0x44d30008
100239c1:	push   eax
100239c2:	call   0x100042d1
100239c7:	push   eax
100239c8:	push   0x2
100239ca:	push   0x100711a4
100239cf:	call   0x100042e3
100239d4:	add    esp,0x24
100239d7:	push   eax
100239d8:	lea    eax,[esp+0xc8]
100239df:	push   eax
100239e0:	call   0x10004120
100239e5:	push   0x1bf1132c
100239ea:	push   0x100711a8
100239ef:	call   0x100042d1
100239f4:	push   0x401a15c0
100239f9:	push   eax
100239fa:	call   0x100042d1
100239ff:	push   eax
10023a00:	push   0x12
10023a02:	push   0x100711d4
10023a07:	call   0x100042e3
10023a0c:	add    esp,0x1c
10023a0f:	push   eax
10023a10:	lea    eax,[esp+0xc8]
10023a17:	push   eax
10023a18:	call   0x10004120
10023a1d:	push   0x46f36556
10023a22:	push   0x100711e8
10023a27:	call   0x100042d1
10023a2c:	push   0x4a7317b6
10023a31:	push   eax
10023a32:	call   0x100042d1
10023a37:	push   0x7a187030
10023a3c:	push   eax
10023a3d:	call   0x100042d1
10023a42:	push   eax
10023a43:	push   0x39
10023a45:	push   0x10071228
10023a4a:	call   0x100042e3
10023a4f:	add    esp,0x24
10023a52:	push   eax
10023a53:	lea    eax,[esp+0xc8]
10023a5a:	push   eax
10023a5b:	call   0x10004120
10023a60:	push   esi
10023a61:	lea    eax,[esp+0xc8]
10023a68:	push   eax
10023a69:	call   0x10004120
10023a6e:	push   0x4622e9b2
10023a73:	push   0x10071264
10023a78:	call   0x100042d1
10023a7d:	push   0x7e98b4f6
10023a82:	push   eax
10023a83:	call   0x100042d1
10023a88:	push   eax
10023a89:	push   0x3c
10023a8b:	push   0x1007129c
10023a90:	call   0x100042e3
10023a95:	add    esp,0x1c
10023a98:	push   eax
10023a99:	lea    eax,[esp+0xc8]
10023aa0:	push   eax
10023aa1:	call   0x10004120
10023aa6:	push   ebx
10023aa7:	lea    eax,[esp+0xc8]
10023aae:	push   eax
10023aaf:	call   0x10004120
10023ab4:	push   0x625ba306
10023ab9:	push   0x100712dc
10023abe:	call   0x100042d1
10023ac3:	push   0x60e9f9fa
10023ac8:	push   eax
10023ac9:	call   0x100042d1
10023ace:	push   eax
10023acf:	push   0x45
10023ad1:	push   0x10071318
10023ad6:	call   0x100042e3
10023adb:	add    esp,0x1c
10023ade:	push   eax
10023adf:	lea    eax,[esp+0xc8]
10023ae6:	push   eax
10023ae7:	call   0x10004120
10023aec:	push   esi
10023aed:	lea    eax,[esp+0xc8]
10023af4:	push   eax
10023af5:	call   0x10004120
10023afa:	push   0x6c553f64
10023aff:	push   0x10071360
10023b04:	call   0x100042d1
10023b09:	push   0x4f444f66
10023b0e:	push   eax
10023b0f:	call   0x100042d1
10023b14:	push   0x52b7b1f0
10023b19:	push   eax
10023b1a:	call   0x100042d1
10023b1f:	push   eax
10023b20:	push   0x3d
10023b22:	push   0x100713a0
10023b27:	call   0x100042e3
10023b2c:	add    esp,0x24
10023b2f:	push   eax
10023b30:	lea    eax,[esp+0xc8]
10023b37:	push   eax
10023b38:	call   0x10004120
10023b3d:	push   ebx
10023b3e:	lea    eax,[esp+0xc8]
10023b45:	push   eax
10023b46:	call   0x10004120
10023b4b:	push   0x46afcca6
10023b50:	push   0x100713e0
10023b55:	call   0x100042d1
10023b5a:	push   eax
10023b5b:	push   0x46
10023b5d:	push   0x10071420
10023b62:	call   0x100042e3
10023b67:	add    esp,0x14
10023b6a:	push   eax
10023b6b:	lea    eax,[esp+0xc8]
10023b72:	push   eax
10023b73:	call   0x10004120
10023b78:	push   esi
10023b79:	lea    eax,[esp+0xc8]
10023b80:	push   eax
10023b81:	call   0x10004120
10023b86:	mov    eax,DWORD PTR [esp+0x1c]
10023b8a:	mov    eax,DWORD PTR [eax]
10023b8c:	lea    ecx,[esp+0x10]
10023b90:	push   ecx
10023b91:	push   0x1
10023b93:	lea    ecx,[esp+0x24]
10023b97:	push   ecx
10023b98:	push   eax
10023b99:	call   0x10036cc0
10023b9e:	mov    ecx,DWORD PTR [eax]
10023ba0:	mov    esi,ecx
10023ba2:	mov    DWORD PTR [esp+0x24],esi
10023ba6:	mov    DWORD PTR [eax],edi
10023ba8:	mov    DWORD PTR [esp+0x54],esi
10023bac:	mov    BYTE PTR [esp+0xf0],0x6
10023bb4:	push   DWORD PTR [esp+0x1c]
10023bb8:	call   0x100430d2
10023bbd:	cmp    esi,edi
10023bbf:	pop    ecx
10023bc0:	jne    0x10023c0d
10023bc2:	mov    esi,DWORD PTR [esp+0x28]
10023bc6:	push   edi
10023bc7:	mov    DWORD PTR [esi],edi
10023bc9:	call   0x100430d2
10023bce:	pop    ecx
10023bcf:	push   edi
10023bd0:	push   0x1
10023bd2:	lea    ecx,[esp+0xcc]
10023bd9:	call   0x100012f4
10023bde:	mov    BYTE PTR [esp+0xf0],0x1
10023be6:	mov    eax,DWORD PTR [esp+0x14]
10023bea:	cmp    eax,edi
10023bec:	je     0x10023bf4
10023bee:	mov    ecx,DWORD PTR [eax]
10023bf0:	push   eax
10023bf1:	call   DWORD PTR [ecx+0x8]
10023bf4:	or     DWORD PTR [esp+0xf0],0xffffffff
10023bfc:	mov    eax,DWORD PTR [esp+0x18]
10023c00:	mov    ecx,DWORD PTR [eax]
10023c02:	push   eax
10023c03:	call   DWORD PTR [ecx+0x8]
10023c06:	mov    eax,esi
10023c08:	jmp    0x10023f46
10023c0d:	mov    eax,DWORD PTR [esp+0x10]
10023c11:	mov    DWORD PTR [esp+0x30],eax
10023c15:	lea    eax,[esp+0x2c]
10023c19:	push   eax
10023c1a:	mov    DWORD PTR [esp+0x30],edi
10023c1e:	mov    DWORD PTR [esp+0x38],esi
10023c22:	call   0x100379d0
10023c27:	cmp    eax,edi
10023c29:	je     0x10023dfb
10023c2f:	mov    DWORD PTR [esp+0x10],eax
10023c33:	mov    ebx,0x100714ec
10023c38:	push   0x10071468
10023c3d:	push   0x12
10023c3f:	push   0x1007148c
10023c44:	call   0x100042e3
10023c49:	add    esp,0xc
10023c4c:	push   eax
10023c4d:	lea    eax,[esp+0xc8]
10023c54:	push   eax
10023c55:	call   0x10004120
10023c5a:	push   0x5a4db7f8
10023c5f:	push   0x100714a0
10023c64:	call   0x100042d1
10023c69:	push   eax
10023c6a:	push   0x10
10023c6c:	push   0x100714d8
10023c71:	call   0x100042e3
10023c76:	add    esp,0x14
10023c79:	push   eax
10023c7a:	lea    eax,[esp+0xc8]
10023c81:	push   eax
10023c82:	call   0x10004120
10023c87:	lea    eax,[esp+0x2c]
10023c8b:	push   eax
10023c8c:	lea    esi,[esp+0x3c]
10023c90:	call   0x10037690
10023c95:	push   0xffffffff
10023c97:	push   edi
10023c98:	lea    esi,[esp+0xcc]
10023c9f:	mov    BYTE PTR [esp+0xf8],0x7
10023ca7:	call   0x10004cc2
10023cac:	push   edi
10023cad:	push   0x1
10023caf:	lea    ecx,[esp+0x40]
10023cb3:	mov    BYTE PTR [esp+0xf8],0x6
10023cbb:	call   0x100012f4
10023cc0:	push   ebx
10023cc1:	mov    eax,esi
10023cc3:	push   eax
10023cc4:	call   0x10004120
10023cc9:	push   0xf9d79ec
10023cce:	push   0x100714f0
10023cd3:	call   0x100042d1
10023cd8:	push   0x3fa4b664
10023cdd:	push   eax
10023cde:	call   0x100042d1
10023ce3:	push   0x38b84cb8
10023ce8:	push   eax
10023ce9:	call   0x100042d1
10023cee:	push   eax
10023cef:	push   0xd
10023cf1:	push   0x10071524
10023cf6:	call   0x100042e3
10023cfb:	add    esp,0x24
10023cfe:	push   eax
10023cff:	mov    eax,esi
10023d01:	push   eax
10023d02:	call   0x10004120
10023d07:	lea    eax,[esp+0x2c]
10023d0b:	push   eax
10023d0c:	lea    esi,[esp+0x3c]
10023d10:	call   0x10037690
10023d15:	push   0xffffffff
10023d17:	push   edi
10023d18:	lea    esi,[esp+0xcc]
10023d1f:	mov    BYTE PTR [esp+0xf8],0x8
10023d27:	call   0x10004cc2
10023d2c:	push   edi
10023d2d:	push   0x1
10023d2f:	lea    ecx,[esp+0x40]
10023d33:	mov    BYTE PTR [esp+0xf8],0x6
10023d3b:	call   0x100012f4
10023d40:	push   ebx
10023d41:	mov    eax,esi
10023d43:	push   eax
10023d44:	call   0x10004120
10023d49:	push   0x30bc52ac
10023d4e:	push   0x10071534
10023d53:	call   0x100042d1
10023d58:	push   0x66dbd8b6
10023d5d:	push   eax
10023d5e:	call   0x100042d1
10023d63:	push   0x477a3538
10023d68:	push   eax
10023d69:	call   0x100042d1
10023d6e:	push   eax
10023d6f:	push   0xe
10023d71:	push   0x10071570
10023d76:	call   0x100042e3
10023d7b:	add    esp,0x24
10023d7e:	push   eax
10023d7f:	mov    eax,esi
10023d81:	push   eax
10023d82:	call   0x10004120
10023d87:	lea    eax,[esp+0x2c]
10023d8b:	push   eax
10023d8c:	lea    esi,[esp+0x3c]
10023d90:	call   0x10037690
10023d95:	push   0xffffffff
10023d97:	push   edi
10023d98:	lea    esi,[esp+0xcc]
10023d9f:	mov    BYTE PTR [esp+0xf8],0x9
10023da7:	call   0x10004cc2
10023dac:	push   edi
10023dad:	push   0x1
10023daf:	lea    ecx,[esp+0x40]
10023db3:	mov    BYTE PTR [esp+0xf8],0x6
10023dbb:	call   0x100012f4
10023dc0:	push   ebx
10023dc1:	mov    eax,esi
10023dc3:	push   eax
10023dc4:	call   0x10004120
10023dc9:	push   0x71fbb41c
10023dce:	push   0x10071580
10023dd3:	call   0x100042d1
10023dd8:	push   eax
10023dd9:	push   0x11
10023ddb:	push   0x100715a8
10023de0:	call   0x100042e3
10023de5:	add    esp,0x14
10023de8:	push   eax
10023de9:	mov    eax,esi
10023deb:	push   eax
10023dec:	call   0x10004120
10023df1:	dec    DWORD PTR [esp+0x10]
10023df5:	jne    0x10023c38
10023dfb:	call   DWORD PTR ds:0x1007efec
10023e01:	cmp    DWORD PTR [esp+0xdc],0x10
10023e09:	mov    eax,DWORD PTR [esp+0xc8]
10023e10:	jae    0x10023e19
10023e12:	lea    eax,[esp+0xc8]
10023e19:	push   eax
10023e1a:	lea    ecx,[esp+0x3c]
10023e1e:	call   0x100011d1
10023e23:	lea    eax,[esp+0x10]
10023e27:	push   eax
10023e28:	lea    ebx,[esp+0x3c]
10023e2c:	mov    BYTE PTR [esp+0xf4],0xa
10023e34:	call   0x100343a0
10023e39:	pop    ecx
10023e3a:	mov    BYTE PTR [esp+0xf0],0xb
10023e42:	mov    eax,DWORD PTR [eax]
10023e44:	test   eax,eax
10023e46:	je     0x10023e4c
10023e48:	mov    eax,DWORD PTR [eax]
10023e4a:	jmp    0x10023e4e
10023e4c:	xor    eax,eax
10023e4e:	mov    ecx,DWORD PTR [esp+0x18]
10023e52:	mov    edx,DWORD PTR [ecx]
10023e54:	push   eax
10023e55:	push   ecx
10023e56:	call   DWORD PTR [edx+0x28]
10023e59:	test   eax,eax
10023e5b:	lea    edi,[esp+0x10]
10023e5f:	setl   bl
10023e62:	call   0x100025aa
10023e67:	push   0x0
10023e69:	push   0x1
10023e6b:	lea    ecx,[esp+0x40]
10023e6f:	mov    BYTE PTR [esp+0xf8],0x6
10023e77:	call   0x100012f4
10023e7c:	test   bl,bl
10023e7e:	je     0x10023ee5
10023e80:	push   0x458d541a
10023e85:	push   0x100715bc
10023e8a:	call   0x100042d1
10023e8f:	push   0x20d73e50
10023e94:	push   eax
10023e95:	call   0x100042d1
10023e9a:	push   eax
10023e9b:	push   0x16
10023e9d:	push   0x10070d4c
10023ea2:	call   0x100042e3
10023ea7:	add    esp,0x1c
10023eaa:	push   eax
10023eab:	lea    ecx,[esp+0x84]
10023eb2:	call   0x100011d1
10023eb7:	lea    eax,[esp+0x80]
10023ebe:	push   eax
10023ebf:	lea    eax,[esp+0xa0]
10023ec6:	push   eax
10023ec7:	mov    BYTE PTR [esp+0xf8],0xc
10023ecf:	call   0x100026e6
10023ed4:	push   0x10074e84
10023ed9:	lea    eax,[esp+0xa0]
10023ee0:	jmp    0x10023523
10023ee5:	push   DWORD PTR [esp+0x24]
10023ee9:	call   0x100430d2
10023eee:	pop    ecx
10023eef:	push   0x0
10023ef1:	push   0x1
10023ef3:	lea    ecx,[esp+0xcc]
10023efa:	call   0x100012f4
10023eff:	mov    BYTE PTR [esp+0xf0],0x1
10023f07:	mov    eax,DWORD PTR [esp+0x14]
10023f0b:	test   eax,eax
10023f0d:	je     0x10023f15
10023f0f:	mov    ecx,DWORD PTR [eax]
10023f11:	push   eax
10023f12:	call   DWORD PTR [ecx+0x8]
10023f15:	call   DWORD PTR ds:0x10066118
10023f1b:	sub    eax,DWORD PTR [esp+0x20]
10023f1f:	push   eax
10023f20:	call   0x1000205f
10023f25:	mov    esi,DWORD PTR [esp+0x1c]
10023f29:	mov    edi,DWORD PTR [esp+0x2c]
10023f2d:	pop    ecx
10023f2e:	mov    DWORD PTR [edi],esi
10023f30:	mov    eax,DWORD PTR [esi]
10023f32:	push   esi
10023f33:	call   DWORD PTR [eax+0x4]
10023f36:	or     DWORD PTR [esp+0xf0],0xffffffff
10023f3e:	mov    eax,DWORD PTR [esi]
10023f40:	push   esi
10023f41:	call   DWORD PTR [eax+0x8]
10023f44:	mov    eax,edi
10023f46:	mov    ecx,DWORD PTR [esp+0xe8]
10023f4d:	mov    DWORD PTR fs:0x0,ecx
10023f54:	pop    ecx
10023f55:	pop    edi
10023f56:	pop    esi
10023f57:	pop    ebx
10023f58:	mov    ecx,DWORD PTR [esp+0xd0]
10023f5f:	xor    ecx,esp
10023f61:	call   0x100430d7
10023f66:	mov    esp,ebp
10023f68:	pop    ebp
10023f69:	ret    0x8
10023f6c:	push   0x0
10023f6e:	mov    eax,0x100636b0
10023f73:	call   0x10059c75
10023f78:	lea    eax,[ebp+0xb]
10023f7b:	push   eax
10023f7c:	call   0x10037b40
10023f81:	xor    eax,eax
10023f83:	push   eax
10023f84:	push   eax
10023f85:	mov    DWORD PTR [ebp-0x4],eax
10023f88:	call   DWORD PTR ds:0x10066440
10023f8e:	push   DWORD PTR [ebp+0x8]
10023f91:	call   0x10022a4b
10023f96:	call   DWORD PTR ds:0x10066424
10023f9c:	call   0x10037b60
10023fa1:	xor    eax,eax
10023fa3:	call   0x10059d4d
10023fa8:	ret    0x4
10023fab:	push   0x10
10023fad:	mov    eax,0x1005fc77
10023fb2:	call   0x10059d14
10023fb7:	mov    eax,DWORD PTR [ebp+0xc]
10023fba:	xor    ebx,ebx
10023fbc:	cmp    eax,ebx
10023fbe:	jne    0x10023fca
10023fc0:	mov    eax,0x80004003
10023fc5:	jmp    0x100240dc
10023fca:	push   0x1c
10023fcc:	mov    DWORD PTR [eax],ebx
10023fce:	mov    DWORD PTR [ebp-0x18],ebx
10023fd1:	mov    DWORD PTR [ebp-0x4],ebx
10023fd4:	call   0x100436de
10023fd9:	cmp    eax,ebx
10023fdb:	pop    ecx
10023fdc:	je     0x10023fe9
10023fde:	mov    esi,eax
10023fe0:	call   0x10024622
10023fe5:	mov    edi,eax
10023fe7:	jmp    0x10023feb
10023fe9:	xor    edi,edi
10023feb:	or     DWORD PTR [ebp-0x4],0xffffffff
10023fef:	jmp    0x10023ffc
10023ff1:	mov    eax,0x10023ff7
10023ff6:	ret    
10023ff7:	mov    edi,DWORD PTR [ebp-0x18]
10023ffa:	xor    ebx,ebx
10023ffc:	cmp    edi,ebx
10023ffe:	jne    0x1002400a
10024000:	mov    eax,0x8007000e
10024005:	jmp    0x100240dc
1002400a:	xor    esi,esi
1002400c:	mov    DWORD PTR [ebp-0x18],esi
1002400f:	push   ebx
10024010:	lea    eax,[ebp-0x1c]
10024013:	push   0x4
10024015:	mov    DWORD PTR [ebp-0x4],0x2
1002401c:	push   eax
1002401d:	mov    DWORD PTR [ebp-0x1c],ebx
10024020:	call   0x100144e6
10024025:	add    esp,0xc
10024028:	cmp    eax,ebx
1002402a:	jl     0x100240dc
10024030:	mov    ebx,DWORD PTR [ebp-0x1c]
10024033:	cmp    ebx,0x400
10024039:	ja     0x10024054
1002403b:	push   ebx
1002403c:	call   0x10006c03
10024041:	test   al,al
10024043:	pop    ecx
10024044:	je     0x10024054
10024046:	mov    eax,ebx
10024048:	call   0x1004b990
1002404d:	mov    DWORD PTR [ebp-0x10],esp
10024050:	mov    eax,esp
10024052:	jmp    0x10024060
10024054:	push   ebx
10024055:	lea    esi,[ebp-0x18]
10024058:	call   0x10007592
1002405d:	mov    esi,DWORD PTR [ebp-0x18]
10024060:	test   eax,eax
10024062:	jne    0x10024080
10024064:	mov    eax,DWORD PTR [edi]
10024066:	push   0x1
10024068:	mov    ecx,edi
1002406a:	call   DWORD PTR [eax+0x1c]
1002406d:	jmp    0x1002407a
1002406f:	mov    eax,esi
10024071:	mov    esi,DWORD PTR [esi]
10024073:	push   eax
10024074:	call   0x10043748
10024079:	pop    ecx
1002407a:	test   esi,esi
1002407c:	jne    0x1002406f
1002407e:	jmp    0x10024000
10024080:	push   0x3
10024082:	push   DWORD PTR [ebp+0x8]
10024085:	push   eax
10024086:	push   eax
10024087:	push   edi
10024088:	call   0x100249fc
1002408d:	mov    ebx,eax
1002408f:	test   ebx,ebx
10024091:	mov    eax,DWORD PTR [edi]
10024093:	jge    0x100240af
10024095:	push   0x1
10024097:	mov    ecx,edi
10024099:	call   DWORD PTR [eax+0x1c]
1002409c:	jmp    0x100240a9
1002409e:	mov    eax,esi
100240a0:	mov    esi,DWORD PTR [esi]
100240a2:	push   eax
100240a3:	call   0x10043748
100240a8:	pop    ecx
100240a9:	test   esi,esi
100240ab:	jne    0x1002409e
100240ad:	jmp    0x100240da
100240af:	push   DWORD PTR [ebp+0xc]
100240b2:	push   0x10070af0
100240b7:	push   edi
100240b8:	call   DWORD PTR [eax]
100240ba:	mov    ebx,eax
100240bc:	test   ebx,ebx
100240be:	jge    0x100240d6
100240c0:	mov    eax,DWORD PTR [edi]
100240c2:	push   0x1
100240c4:	mov    ecx,edi
100240c6:	call   DWORD PTR [eax+0x1c]
100240c9:	jmp    0x100240d6
100240cb:	mov    eax,esi
100240cd:	mov    esi,DWORD PTR [esi]
100240cf:	push   eax
100240d0:	call   0x10043748
100240d5:	pop    ecx
100240d6:	test   esi,esi
100240d8:	jne    0x100240cb
100240da:	mov    eax,ebx
100240dc:	lea    esp,[ebp-0x2c]
100240df:	call   0x10059d70
100240e4:	ret    0x8
100240e7:	push   ecx
100240e8:	mov    eax,ds:0x1007e030
100240ed:	xor    eax,esp
100240ef:	mov    DWORD PTR [esp],eax
100240f2:	mov    eax,DWORD PTR [esp+0x10]
100240f6:	test   eax,eax
100240f8:	jne    0x10024101
100240fa:	mov    eax,0x80004003
100240ff:	jmp    0x10024109
10024101:	and    DWORD PTR [eax],0x0
10024104:	mov    eax,0x80040200
10024109:	mov    ecx,DWORD PTR [esp]
1002410c:	xor    ecx,esp
1002410e:	call   0x100430d7
10024113:	pop    ecx
10024114:	ret    0xc
10024117:	push   0x4
10024119:	mov    eax,0x10060d2a
1002411e:	call   0x10059c75
10024123:	mov    esi,ecx
10024125:	mov    DWORD PTR [ebp-0x10],esi
10024128:	mov    eax,esi
1002412a:	mov    DWORD PTR [ebp-0x4],0x2
10024131:	call   0x10020d9e
10024136:	lea    eax,[esi+0x10]
10024139:	mov    BYTE PTR [ebp-0x4],0x1
1002413d:	call   0x100246de
10024142:	mov    BYTE PTR [ebp-0x4],0x0
10024146:	mov    eax,DWORD PTR [esi+0xc]
10024149:	test   eax,eax
1002414b:	je     0x10024153
1002414d:	mov    ecx,DWORD PTR [eax]
1002414f:	push   eax
10024150:	call   DWORD PTR [ecx+0x8]
10024153:	or     DWORD PTR [ebp-0x4],0xffffffff
10024157:	mov    esi,DWORD PTR [esi+0x8]
1002415a:	test   esi,esi
1002415c:	je     0x10024164
1002415e:	mov    eax,DWORD PTR [esi]
10024160:	push   esi
10024161:	call   DWORD PTR [eax+0x8]
10024164:	call   0x10059d4d
10024169:	ret    
1002416a:	push   0x34
1002416c:	mov    eax,0x10061d3c
10024171:	call   0x10059cde
10024176:	mov    eax,DWORD PTR [ebp+0x8]
10024179:	push   eax
1002417a:	xor    ebx,ebx
1002417c:	lea    eax,[ebp-0x2c]
1002417f:	mov    edi,ecx
10024181:	mov    DWORD PTR [ebp-0x30],ebx
10024184:	call   0x10020c2c
10024189:	lea    eax,[ebp-0x2c]
1002418c:	push   eax
1002418d:	lea    eax,[ebp-0x38]
10024190:	add    edi,0x10
10024193:	push   eax
10024194:	mov    DWORD PTR [ebp-0x4],ebx
10024197:	call   0x1002123d
1002419c:	cmp    DWORD PTR [ebp-0x38],ebx
1002419f:	mov    esi,DWORD PTR [edi+0x4]
100241a2:	je     0x100241a9
100241a4:	cmp    DWORD PTR [ebp-0x38],edi
100241a7:	je     0x100241ae
100241a9:	call   0x100435f0
100241ae:	mov    eax,DWORD PTR [ebp-0x34]
100241b1:	cmp    eax,esi
100241b3:	je     0x100241c9
100241b5:	add    eax,0xc
100241b8:	lea    ebx,[ebp-0x2c]
100241bb:	call   0x1001f095
100241c0:	test   al,al
100241c2:	jne    0x100241c9
100241c4:	lea    eax,[ebp-0x38]
100241c7:	jmp    0x100241d5
100241c9:	mov    eax,DWORD PTR [edi+0x4]
100241cc:	mov    DWORD PTR [ebp-0x3c],eax
100241cf:	mov    DWORD PTR [ebp-0x40],edi
100241d2:	lea    eax,[ebp-0x40]
100241d5:	mov    esi,DWORD PTR [eax]
100241d7:	test   esi,esi
100241d9:	mov    ebx,DWORD PTR [eax+0x4]
100241dc:	mov    eax,DWORD PTR [edi+0x4]
100241df:	mov    DWORD PTR [ebp-0x3c],eax
100241e2:	je     0x100241e8
100241e4:	cmp    esi,edi
100241e6:	je     0x100241ed
100241e8:	call   0x100435f0
100241ed:	cmp    ebx,DWORD PTR [ebp-0x3c]
100241f0:	je     0x1002420b
100241f2:	test   esi,esi
100241f4:	jne    0x100241fb
100241f6:	call   0x100435f0
100241fb:	cmp    ebx,DWORD PTR [esi+0x4]
100241fe:	jne    0x10024205
10024200:	call   0x100435f0
10024205:	mov    eax,DWORD PTR [ebx+0x28]
10024208:	mov    DWORD PTR [ebp-0x30],eax
1002420b:	push   0x1
1002420d:	xor    ebx,ebx
1002420f:	lea    esi,[ebp-0x2c]
10024212:	call   0x100051f3
10024217:	mov    eax,DWORD PTR [ebp-0x30]
1002421a:	call   0x10059d61
1002421f:	ret    0x4
10024222:	jmp    DWORD PTR ds:0x100662d8
10024228:	mov    eax,DWORD PTR [esp+0x8]
1002422c:	mov    DWORD PTR [eax],0x9
10024232:	xor    eax,eax
10024234:	ret    0x8
10024237:	push   ebp
10024238:	mov    ebp,esp
1002423a:	push   ecx
1002423b:	mov    ecx,DWORD PTR [ebp+0x10]
1002423e:	push   edi
1002423f:	mov    edi,ecx
10024241:	and    edi,0x2
10024244:	je     0x1002425a
10024246:	mov    eax,DWORD PTR [ebp+0x18]
10024249:	test   eax,eax
1002424b:	jne    0x10024257
1002424d:	mov    eax,0x80070057
10024252:	jmp    0x100242e0
10024257:	and    DWORD PTR [eax],0x0
1002425a:	mov    DWORD PTR [ebp-0x4],ecx
1002425d:	and    DWORD PTR [ebp-0x4],0x1
10024261:	je     0x1002426d
10024263:	mov    eax,DWORD PTR [ebp+0x14]
10024266:	test   eax,eax
10024268:	je     0x1002424d
1002426a:	and    DWORD PTR [eax],0x0
1002426d:	mov    ecx,DWORD PTR [ebp+0x8]
10024270:	mov    eax,DWORD PTR [ecx]
10024272:	push   esi
10024273:	push   DWORD PTR [ebp+0xc]
10024276:	call   DWORD PTR [eax+0x30]
10024279:	mov    esi,eax
1002427b:	test   esi,esi
1002427d:	jne    0x10024286
1002427f:	mov    eax,0x8002802b
10024284:	jmp    0x100242df
10024286:	test   edi,edi
10024288:	je     0x100242cc
1002428a:	mov    eax,DWORD PTR [esi]
1002428c:	and    DWORD PTR [ebp+0x10],0x0
10024290:	lea    ecx,[ebp+0x10]
10024293:	push   ecx
10024294:	push   0x1006b878
10024299:	push   esi
1002429a:	call   DWORD PTR [eax]
1002429c:	mov    edi,eax
1002429e:	test   edi,edi
100242a0:	jl     0x100242b4
100242a2:	mov    eax,DWORD PTR [ebp+0x10]
100242a5:	test   eax,eax
100242a7:	je     0x100242c1
100242a9:	push   DWORD PTR [ebp+0x18]
100242ac:	mov    ecx,DWORD PTR [eax]
100242ae:	push   eax
100242af:	call   DWORD PTR [ecx+0xc]
100242b2:	mov    edi,eax
100242b4:	mov    eax,DWORD PTR [ebp+0x10]
100242b7:	test   eax,eax
100242b9:	je     0x100242c1
100242bb:	mov    ecx,DWORD PTR [eax]
100242bd:	push   eax
100242be:	call   DWORD PTR [ecx+0x8]
100242c1:	test   edi,edi
100242c3:	jge    0x100242cc
100242c5:	mov    eax,0x80004005
100242ca:	jmp    0x100242df
100242cc:	cmp    DWORD PTR [ebp-0x4],0x0
100242d0:	je     0x100242dd
100242d2:	mov    eax,DWORD PTR [ebp+0x14]
100242d5:	mov    DWORD PTR [eax],esi
100242d7:	mov    eax,DWORD PTR [esi]
100242d9:	push   esi
100242da:	call   DWORD PTR [eax+0x4]
100242dd:	xor    eax,eax
100242df:	pop    esi
100242e0:	pop    edi
100242e1:	leave  
100242e2:	ret    0x14
100242e5:	mov    ecx,DWORD PTR [esp+0x4]
100242e9:	lea    eax,[ecx-0x4]
100242ec:	neg    ecx
100242ee:	sbb    ecx,ecx
100242f0:	and    ecx,eax
100242f2:	mov    eax,DWORD PTR [ecx]
100242f4:	call   DWORD PTR [eax+0x34]
100242f7:	mov    ecx,DWORD PTR [esp+0x8]
100242fb:	mov    DWORD PTR [ecx],eax
100242fd:	xor    eax,eax
100242ff:	ret    0x8
10024302:	push   edi
10024303:	mov    edi,DWORD PTR [esp+0x14]
10024307:	mov    ecx,0x1007f97c
1002430c:	call   0x100105fb
10024311:	pop    edi
10024312:	ret    0x10
10024315:	push   DWORD PTR [esp+0x18]
10024319:	mov    eax,0x1007f97c
1002431e:	push   DWORD PTR [esp+0x14]
10024322:	push   DWORD PTR [esp+0x14]
10024326:	call   0x10010629
1002432b:	ret    0x18
1002432e:	push   ebp
1002432f:	mov    ebp,esp
10024331:	push   DWORD PTR [ebp+0x28]
10024334:	mov    eax,0x1007f97c
10024339:	push   DWORD PTR [ebp+0x24]
1002433c:	push   DWORD PTR [ebp+0x20]
1002433f:	push   DWORD PTR [ebp+0x1c]
10024342:	push   DWORD PTR [ebp+0x18]
10024345:	push   DWORD PTR [ebp+0xc]
10024348:	push   DWORD PTR [ebp+0x8]
1002434b:	call   0x100106cc
10024350:	pop    ebp
10024351:	ret    0x24
10024354:	push   0x4
10024356:	mov    eax,0x10062a4d
1002435b:	call   0x10059c75
10024360:	mov    eax,DWORD PTR [ebp+0x8]
10024363:	call   0x10004718
10024368:	push   0x1006cd08
1002436d:	lea    ecx,[ebp-0x10]
10024370:	push   ecx
10024371:	mov    ecx,eax
10024373:	call   0x10006b4b
10024378:	and    DWORD PTR [ebp-0x4],0x0
1002437c:	push   DWORD PTR [ebp-0x10]
1002437f:	push   DWORD PTR [ebp+0x8]
10024382:	call   0x10024713
10024387:	test   eax,eax
10024389:	mov    eax,DWORD PTR [ebp-0x10]
1002438c:	setne  bl
1002438f:	add    eax,0xfffffff0
10024392:	call   0x10002060
10024397:	mov    al,bl
10024399:	call   0x10059d4d
1002439e:	ret    
1002439f:	push   edi
100243a0:	mov    edi,DWORD PTR [esp+0x14]
100243a4:	mov    ecx,0x1007f998
100243a9:	call   0x100105fb
100243ae:	pop    edi
100243af:	ret    0x10
100243b2:	push   DWORD PTR [esp+0x18]
100243b6:	mov    eax,0x1007f998
100243bb:	push   DWORD PTR [esp+0x14]
100243bf:	push   DWORD PTR [esp+0x14]
100243c3:	call   0x10010629
100243c8:	ret    0x18
100243cb:	push   ebp
100243cc:	mov    ebp,esp
100243ce:	push   DWORD PTR [ebp+0x28]
100243d1:	mov    eax,0x1007f998
100243d6:	push   DWORD PTR [ebp+0x24]
100243d9:	push   DWORD PTR [ebp+0x20]
100243dc:	push   DWORD PTR [ebp+0x1c]
100243df:	push   DWORD PTR [ebp+0x18]
100243e2:	push   DWORD PTR [ebp+0xc]
100243e5:	push   DWORD PTR [ebp+0x8]
100243e8:	call   0x100106cc
100243ed:	pop    ebp
100243ee:	ret    0x24
100243f1:	push   edi
100243f2:	mov    edi,DWORD PTR [esp+0x14]
100243f6:	mov    ecx,0x1007f9b4
100243fb:	call   0x100105fb
10024400:	pop    edi
10024401:	ret    0x10
10024404:	push   DWORD PTR [esp+0x18]
10024408:	mov    eax,0x1007f9b4
1002440d:	push   DWORD PTR [esp+0x14]
10024411:	push   DWORD PTR [esp+0x14]
10024415:	call   0x10010629
1002441a:	ret    0x18
1002441d:	push   ebp
1002441e:	mov    ebp,esp
10024420:	push   DWORD PTR [ebp+0x28]
10024423:	mov    eax,0x1007f9b4
10024428:	push   DWORD PTR [ebp+0x24]
1002442b:	push   DWORD PTR [ebp+0x20]
1002442e:	push   DWORD PTR [ebp+0x1c]
10024431:	push   DWORD PTR [ebp+0x18]
10024434:	push   DWORD PTR [ebp+0xc]
10024437:	push   DWORD PTR [ebp+0x8]
1002443a:	call   0x100106cc
1002443f:	pop    ebp
10024440:	ret    0x24
10024443:	push   esi
10024444:	mov    esi,DWORD PTR [eax]
10024446:	test   esi,esi
10024448:	je     0x1002445d
1002444a:	mov    eax,DWORD PTR [esi]
1002444c:	test   eax,eax
1002444e:	je     0x10024456
10024450:	mov    ecx,DWORD PTR [eax]
10024452:	push   eax
10024453:	call   DWORD PTR [ecx+0x8]
10024456:	push   esi
10024457:	call   0x100430d2
1002445c:	pop    ecx
1002445d:	pop    esi
1002445e:	ret    
1002445f:	push   esi
10024460:	mov    esi,ecx
10024462:	mov    DWORD PTR [esi],0x10071790
10024468:	mov    DWORD PTR [esi+0x4],0xc0000001
1002446f:	mov    ecx,DWORD PTR ds:0x10080c04
10024475:	mov    eax,DWORD PTR [ecx]
10024477:	call   DWORD PTR [eax+0x8]
1002447a:	mov    esi,DWORD PTR [esi+0xc]
1002447d:	test   esi,esi
1002447f:	je     0x10024487
10024481:	mov    eax,DWORD PTR [esi]
10024483:	push   esi
10024484:	call   DWORD PTR [eax+0x8]
10024487:	pop    esi
10024488:	ret    
10024489:	mov    ecx,DWORD PTR [esp+0x4]
1002448d:	dec    DWORD PTR [ecx+0x4]
10024490:	push   esi
10024491:	mov    esi,DWORD PTR [ecx+0x4]
10024494:	jne    0x100244a1
10024496:	test   ecx,ecx
10024498:	je     0x100244a1
1002449a:	mov    eax,DWORD PTR [ecx]
1002449c:	push   0x1
1002449e:	call   DWORD PTR [eax+0x38]
100244a1:	mov    eax,esi
100244a3:	pop    esi
100244a4:	ret    0x4
100244a7:	push   ebx
100244a8:	push   DWORD PTR [esp+0xc]
100244ac:	mov    ebx,DWORD PTR [esp+0x14]
100244b0:	push   DWORD PTR [esp+0xc]
100244b4:	mov    eax,0x10070b20
100244b9:	call   0x100104da
100244be:	pop    ebx
100244bf:	ret    0xc
100244c2:	push   esi
100244c3:	mov    esi,ecx
100244c5:	mov    DWORD PTR [esi],0x100717d0
100244cb:	mov    DWORD PTR [esi+0x4],0xc0000001
100244d2:	mov    ecx,DWORD PTR ds:0x10080c04
100244d8:	mov    eax,DWORD PTR [ecx]
100244da:	call   DWORD PTR [eax+0x8]
100244dd:	call   0x100245e2
100244e2:	pop    esi
100244e3:	ret    
100244e4:	mov    ecx,DWORD PTR [esp+0x4]
100244e8:	dec    DWORD PTR [ecx+0x4]
100244eb:	push   esi
100244ec:	mov    esi,DWORD PTR [ecx+0x4]
100244ef:	jne    0x100244fc
100244f1:	test   ecx,ecx
100244f3:	je     0x100244fc
100244f5:	mov    eax,DWORD PTR [ecx]
100244f7:	push   0x1
100244f9:	call   DWORD PTR [eax+0x48]
100244fc:	mov    eax,esi
100244fe:	pop    esi
100244ff:	ret    0x4
10024502:	push   ebx
10024503:	push   DWORD PTR [esp+0xc]
10024507:	mov    ebx,DWORD PTR [esp+0x14]
1002450b:	push   DWORD PTR [esp+0xc]
1002450f:	mov    eax,0x10070b44
10024514:	call   0x100104da
10024519:	pop    ebx
1002451a:	ret    0xc
1002451d:	push   esi
1002451e:	lea    esi,[ecx+0x8]
10024521:	mov    DWORD PTR [ecx],0x100716d0
10024527:	mov    DWORD PTR [ecx+0x4],0x100716e0
1002452e:	mov    DWORD PTR [esi],0x100716f4
10024534:	mov    DWORD PTR [ecx+0xc],0x1007172c
1002453b:	mov    DWORD PTR [ecx+0x24],0x10071740
10024542:	mov    DWORD PTR [ecx+0x28],0xc0000001
10024549:	mov    ecx,DWORD PTR ds:0x10080c04
1002454f:	mov    eax,DWORD PTR [ecx]
10024551:	call   DWORD PTR [eax+0x8]
10024554:	mov    ecx,esi
10024556:	pop    esi
10024557:	jmp    0x10024117
1002455c:	mov    eax,DWORD PTR [esp+0x4]
10024560:	inc    DWORD PTR [eax+0x28]
10024563:	mov    eax,DWORD PTR [eax+0x28]
10024566:	ret    0x4
10024569:	mov    eax,DWORD PTR [esp+0x4]
1002456d:	dec    DWORD PTR [eax+0x28]
10024570:	push   esi
10024571:	mov    esi,DWORD PTR [eax+0x28]
10024574:	jne    0x10024584
10024576:	test   eax,eax
10024578:	je     0x10024584
1002457a:	lea    ecx,[eax+0x8]
1002457d:	mov    eax,DWORD PTR [ecx]
1002457f:	push   0x1
10024581:	call   DWORD PTR [eax+0x2c]
10024584:	mov    eax,esi
10024586:	pop    esi
10024587:	ret    0x4
1002458a:	push   ebx
1002458b:	push   DWORD PTR [esp+0xc]
1002458f:	mov    ebx,DWORD PTR [esp+0x14]
10024593:	push   DWORD PTR [esp+0xc]
10024597:	mov    eax,0x100705d8
1002459c:	call   0x100104da
100245a1:	pop    ebx
100245a2:	ret    0xc
100245a5:	jmp    0x100246de
100245aa:	push   esi
100245ab:	mov    esi,ecx
100245ad:	call   0x1002445f
100245b2:	test   BYTE PTR [esp+0x8],0x1
100245b7:	je     0x100245c0
100245b9:	push   esi
100245ba:	call   0x100430d2
100245bf:	pop    ecx
100245c0:	mov    eax,esi
100245c2:	pop    esi
100245c3:	ret    0x4
100245c6:	push   esi
100245c7:	mov    esi,ecx
100245c9:	call   0x100244c2
100245ce:	test   BYTE PTR [esp+0x8],0x1
100245d3:	je     0x100245dc
100245d5:	push   esi
100245d6:	call   0x100430d2
100245db:	pop    ecx
100245dc:	mov    eax,esi
100245de:	pop    esi
100245df:	ret    0x4
100245e2:	mov    eax,DWORD PTR [esi+0x38]
100245e5:	test   eax,eax
100245e7:	je     0x100245ef
100245e9:	mov    ecx,DWORD PTR [eax]
100245eb:	push   eax
100245ec:	call   DWORD PTR [ecx+0x8]
100245ef:	push   edi
100245f0:	lea    edi,[esi+0x30]
100245f3:	call   0x100025aa
100245f8:	push   0x0
100245fa:	push   0x1
100245fc:	lea    ecx,[esi+0x8]
100245ff:	call   0x100012f4
10024604:	pop    edi
10024605:	ret    
10024606:	push   esi
10024607:	mov    esi,ecx
10024609:	call   0x1002451d
1002460e:	test   BYTE PTR [esp+0x8],0x1
10024613:	je     0x1002461c
10024615:	push   esi
10024616:	call   0x100430d2
1002461b:	pop    ecx
1002461c:	mov    eax,esi
1002461e:	pop    esi
1002461f:	ret    0x4
10024622:	xor    eax,eax
10024624:	mov    DWORD PTR [esi+0x4],eax
10024627:	mov    DWORD PTR [esi+0x10],eax
1002462a:	mov    DWORD PTR [esi+0xc],eax
1002462d:	mov    DWORD PTR [esi+0x8],eax
10024630:	mov    DWORD PTR [esi+0x14],eax
10024633:	mov    DWORD PTR [esi+0x18],eax
10024636:	mov    DWORD PTR [esi],0x1007181c
1002463c:	mov    ecx,DWORD PTR ds:0x10080c04
10024642:	mov    eax,DWORD PTR [ecx]
10024644:	call   DWORD PTR [eax+0x4]
10024647:	mov    eax,esi
10024649:	ret    
1002464a:	push   esi
1002464b:	mov    esi,ecx
1002464d:	mov    DWORD PTR [esi],0x1007181c
10024653:	mov    DWORD PTR [esi+0x18],0xc0000001
1002465a:	mov    ecx,DWORD PTR ds:0x10080c04
10024660:	mov    eax,DWORD PTR [ecx]
10024662:	call   DWORD PTR [eax+0x8]
10024665:	mov    ecx,esi
10024667:	pop    esi
10024668:	jmp    0x100220d6
1002466d:	mov    eax,DWORD PTR [esp+0x4]
10024671:	inc    DWORD PTR [eax+0x18]
10024674:	mov    eax,DWORD PTR [eax+0x18]
10024677:	ret    0x4
1002467a:	mov    ecx,DWORD PTR [esp+0x4]
1002467e:	dec    DWORD PTR [ecx+0x18]
10024681:	push   esi
10024682:	mov    esi,DWORD PTR [ecx+0x18]
10024685:	jne    0x10024692
10024687:	test   ecx,ecx
10024689:	je     0x10024692
1002468b:	mov    eax,DWORD PTR [ecx]
1002468d:	push   0x1
1002468f:	call   DWORD PTR [eax+0x1c]
10024692:	mov    eax,esi
10024694:	pop    esi
10024695:	ret    0x4
10024698:	push   ebx
10024699:	push   DWORD PTR [esp+0xc]
1002469d:	mov    ebx,DWORD PTR [esp+0x14]
100246a1:	push   DWORD PTR [esp+0xc]
100246a5:	mov    eax,0x100715f4
100246aa:	call   0x100104da
100246af:	pop    ebx
100246b0:	ret    0xc
100246b3:	mov    eax,DWORD PTR [esp+0x4]
100246b7:	mov    ecx,DWORD PTR [eax+0x8]
100246ba:	mov    DWORD PTR [eax+0x10],ecx
100246bd:	xor    eax,eax
100246bf:	ret    0x4
100246c2:	push   esi
100246c3:	mov    esi,ecx
100246c5:	call   0x1002464a
100246ca:	test   BYTE PTR [esp+0x8],0x1
100246cf:	je     0x100246d8
100246d1:	push   esi
100246d2:	call   0x100430d2
100246d7:	pop    ecx
100246d8:	mov    eax,esi
100246da:	pop    esi
100246db:	ret    0x4
100246de:	push   ebp
100246df:	mov    ebp,esp
100246e1:	and    esp,0xfffffff8
100246e4:	push   ecx
100246e5:	push   ecx
100246e6:	push   ebx
100246e7:	push   edi
100246e8:	mov    edi,eax
100246ea:	mov    eax,DWORD PTR [edi+0x4]
100246ed:	mov    ecx,DWORD PTR [eax]
100246ef:	push   eax
100246f0:	push   edi
100246f1:	push   ecx
100246f2:	push   edi
100246f3:	lea    ebx,[esp+0x18]
100246f7:	call   0x10021191
100246fc:	push   DWORD PTR [edi+0x4]
100246ff:	call   0x100430d2
10024704:	and    DWORD PTR [edi+0x4],0x0
10024708:	and    DWORD PTR [edi+0x8],0x0
1002470c:	pop    ecx
1002470d:	pop    edi
1002470e:	pop    ebx
1002470f:	mov    esp,ebp
10024711:	pop    ebp
10024712:	ret    
10024713:	cmp    DWORD PTR [esp+0x8],0x0
10024718:	jne    0x10024724
1002471a:	push   0x80004005
1002471f:	call   0x10001f24
10024724:	mov    eax,DWORD PTR [esp+0x4]
10024728:	mov    eax,DWORD PTR [eax]
1002472a:	push   DWORD PTR [esp+0x8]
1002472e:	push   eax
1002472f:	call   0x10046994
10024734:	pop    ecx
10024735:	pop    ecx
10024736:	ret    0x8
10024739:	push   0x30
1002473b:	call   0x100436de
10024740:	xor    edx,edx
10024742:	cmp    eax,edx
10024744:	pop    ecx
10024745:	je     0x10024749
10024747:	mov    DWORD PTR [eax],edx
10024749:	lea    ecx,[eax+0x4]
1002474c:	cmp    ecx,edx
1002474e:	je     0x10024752
10024750:	mov    DWORD PTR [ecx],edx
10024752:	lea    ecx,[eax+0x8]
10024755:	cmp    ecx,edx
10024757:	je     0x1002475b
10024759:	mov    DWORD PTR [ecx],edx
1002475b:	mov    BYTE PTR [eax+0x2c],0x1
1002475f:	mov    BYTE PTR [eax+0x2d],dl
10024762:	ret    
10024763:	push   0xc
10024765:	mov    eax,0x10061d19
1002476a:	call   0x10059ca8
1002476f:	mov    edi,DWORD PTR [ebp+0x8]
10024772:	xor    ebx,ebx
10024774:	cmp    edi,ebx
10024776:	jne    0x1002477f
10024778:	mov    eax,0x80004003
1002477d:	jmp    0x100247ed
1002477f:	push   0x2c
10024781:	mov    DWORD PTR [edi],ebx
10024783:	mov    DWORD PTR [ebp-0x14],0x8007000e
1002478a:	mov    DWORD PTR [ebp-0x18],ebx
1002478d:	mov    DWORD PTR [ebp-0x4],ebx
10024790:	call   0x100436de
10024795:	mov    esi,eax
10024797:	cmp    esi,ebx
10024799:	pop    ecx
1002479a:	je     0x100247d0
1002479c:	call   0x100225eb
100247a1:	mov    DWORD PTR [esi],0x100716d0
100247a7:	mov    DWORD PTR [esi+0x4],0x100716e0
100247ae:	mov    DWORD PTR [esi+0x8],0x100716f4
100247b5:	mov    DWORD PTR [esi+0xc],0x1007172c
100247bc:	mov    DWORD PTR [esi+0x24],0x10071740
100247c3:	mov    ecx,DWORD PTR ds:0x10080c04
100247c9:	mov    eax,DWORD PTR [ecx]
100247cb:	call   DWORD PTR [eax+0x4]
100247ce:	jmp    0x100247e0
100247d0:	xor    esi,esi
100247d2:	jmp    0x100247e0
100247d4:	mov    eax,0x100247da
100247d9:	ret    
100247da:	mov    edi,DWORD PTR [ebp+0x8]
100247dd:	mov    esi,DWORD PTR [ebp-0x18]
100247e0:	test   esi,esi
100247e2:	je     0x100247e8
100247e4:	and    DWORD PTR [ebp-0x14],0x0
100247e8:	mov    eax,DWORD PTR [ebp-0x14]
100247eb:	mov    DWORD PTR [edi],esi
100247ed:	call   0x10059d4d
100247f2:	ret    0x4
100247f5:	push   0xc
100247f7:	mov    eax,0x1005fc54
100247fc:	call   0x10059ca8
10024801:	mov    ebx,DWORD PTR [ebp+0x8]
10024804:	xor    edi,edi
10024806:	cmp    ebx,edi
10024808:	jne    0x10024811
1002480a:	mov    eax,0x80004003
1002480f:	jmp    0x1002486a
10024811:	push   0x10
10024813:	mov    DWORD PTR [ebx],edi
10024815:	mov    DWORD PTR [ebp-0x14],0x8007000e
1002481c:	mov    DWORD PTR [ebp-0x4],edi
1002481f:	call   0x100436de
10024824:	mov    esi,eax
10024826:	cmp    esi,edi
10024828:	pop    ecx
10024829:	je     0x10024847
1002482b:	mov    DWORD PTR [esi+0x4],edi
1002482e:	mov    DWORD PTR [esi+0x8],edi
10024831:	mov    DWORD PTR [esi+0xc],edi
10024834:	mov    DWORD PTR [esi],0x10071790
1002483a:	mov    ecx,DWORD PTR ds:0x10080c04
10024840:	mov    eax,DWORD PTR [ecx]
10024842:	call   DWORD PTR [eax+0x4]
10024845:	jmp    0x10024858
10024847:	xor    esi,esi
10024849:	jmp    0x10024858
1002484b:	mov    eax,0x10024851
10024850:	ret    
10024851:	mov    ebx,DWORD PTR [ebp+0x8]
10024854:	xor    edi,edi
10024856:	mov    esi,edi
10024858:	cmp    esi,edi
1002485a:	je     0x10024865
1002485c:	inc    DWORD PTR [esi+0x4]
1002485f:	dec    DWORD PTR [esi+0x4]
10024862:	mov    DWORD PTR [ebp-0x14],edi
10024865:	mov    eax,DWORD PTR [ebp-0x14]
10024868:	mov    DWORD PTR [ebx],esi
1002486a:	call   0x10059d4d
1002486f:	ret    0x4
10024872:	push   0xc
10024874:	mov    eax,0x100602a6
10024879:	call   0x10059ca8
1002487e:	mov    eax,DWORD PTR [ebp+0x8]
10024881:	xor    ebx,ebx
10024883:	cmp    eax,ebx
10024885:	jne    0x1002488e
10024887:	mov    eax,0x80004003
1002488c:	jmp    0x100248fc
1002488e:	push   0x3c
10024890:	mov    DWORD PTR [eax],ebx
10024892:	mov    DWORD PTR [ebp-0x14],0x8007000e
10024899:	mov    DWORD PTR [ebp-0x4],ebx
1002489c:	call   0x100436de
100248a1:	mov    edi,eax
100248a3:	cmp    edi,ebx
100248a5:	pop    ecx
100248a6:	je     0x100248d9
100248a8:	lea    esi,[edi+0x8]
100248ab:	mov    DWORD PTR [edi+0x4],ebx
100248ae:	call   0x100040e9
100248b3:	or     DWORD PTR [edi+0x28],0xffffffff
100248b7:	mov    DWORD PTR [edi+0x24],ebx
100248ba:	mov    BYTE PTR [edi+0x2c],bl
100248bd:	mov    DWORD PTR [edi+0x30],ebx
100248c0:	mov    DWORD PTR [edi+0x34],ebx
100248c3:	mov    DWORD PTR [edi+0x38],ebx
100248c6:	mov    DWORD PTR [edi],0x100717d0
100248cc:	mov    ecx,DWORD PTR ds:0x10080c04
100248d2:	mov    eax,DWORD PTR [ecx]
100248d4:	call   DWORD PTR [eax+0x4]
100248d7:	jmp    0x100248e7
100248d9:	xor    edi,edi
100248db:	jmp    0x100248e7
100248dd:	mov    eax,0x100248e3
100248e2:	ret    
100248e3:	xor    ebx,ebx
100248e5:	mov    edi,ebx
100248e7:	cmp    edi,ebx
100248e9:	je     0x100248f4
100248eb:	inc    DWORD PTR [edi+0x4]
100248ee:	dec    DWORD PTR [edi+0x4]
100248f1:	mov    DWORD PTR [ebp-0x14],ebx
100248f4:	mov    eax,DWORD PTR [ebp+0x8]
100248f7:	mov    DWORD PTR [eax],edi
100248f9:	mov    eax,DWORD PTR [ebp-0x14]
100248fc:	call   0x10059d4d
10024901:	ret    0x4
10024904:	push   esi
10024905:	mov    esi,DWORD PTR [esp+0xc]
10024909:	test   esi,esi
1002490b:	jne    0x10024914
1002490d:	mov    eax,0x80070057
10024912:	jmp    0x10024938
10024914:	mov    ecx,DWORD PTR [esp+0x8]
10024918:	mov    edx,DWORD PTR [ecx+0x10]
1002491b:	mov    eax,DWORD PTR [ecx+0xc]
1002491e:	sub    eax,edx
10024920:	sar    eax,0x2
10024923:	cmp    esi,eax
10024925:	ja     0x10024929
10024927:	mov    eax,esi
10024929:	lea    edx,[edx+eax*4]
1002492c:	mov    DWORD PTR [ecx+0x10],edx
1002492f:	xor    ecx,ecx
10024931:	cmp    esi,eax
10024933:	setne  cl
10024936:	mov    eax,ecx
10024938:	pop    esi
10024939:	ret    0x8
1002493c:	push   0x8
1002493e:	mov    eax,0x100602da
10024943:	call   0x10059c75
10024948:	mov    eax,DWORD PTR [ebp+0xc]
1002494b:	xor    edi,edi
1002494d:	cmp    eax,edi
1002494f:	mov    DWORD PTR [ebp-0x10],edi
10024952:	mov    ebx,0x80004003
10024957:	je     0x100249f2
1002495d:	mov    DWORD PTR [eax],edi
1002495f:	lea    eax,[ebp-0x14]
10024962:	push   eax
10024963:	call   0x10024b17
10024968:	mov    ebx,eax
1002496a:	cmp    ebx,edi
1002496c:	jl     0x100249f2
10024972:	mov    esi,DWORD PTR [ebp+0x8]
10024975:	test   BYTE PTR [esi+0x14],0x2
10024979:	je     0x10024993
1002497b:	mov    eax,DWORD PTR [esi]
1002497d:	push   esi
1002497e:	mov    DWORD PTR [ebp+0x8],esi
10024981:	call   DWORD PTR [eax+0x4]
10024984:	mov    DWORD PTR [ebp-0x4],edi
10024987:	lea    eax,[ebp+0x8]
1002498a:	mov    DWORD PTR [ebp-0x10],0x1
10024991:	jmp    0x10024996
10024993:	lea    eax,[esi+0x4]
10024996:	mov    eax,DWORD PTR [eax]
10024998:	push   edi
10024999:	mov    edi,DWORD PTR [ebp-0x14]
1002499c:	push   eax
1002499d:	push   DWORD PTR [esi+0xc]
100249a0:	push   DWORD PTR [esi+0x8]
100249a3:	push   edi
100249a4:	call   0x100249fc
100249a9:	or     DWORD PTR [ebp-0x4],0xffffffff
100249ad:	test   BYTE PTR [ebp-0x10],0x1
100249b1:	mov    ebx,eax
100249b3:	je     0x100249c2
100249b5:	mov    eax,DWORD PTR [ebp+0x8]
100249b8:	test   eax,eax
100249ba:	je     0x100249c2
100249bc:	mov    ecx,DWORD PTR [eax]
100249be:	push   eax
100249bf:	call   DWORD PTR [ecx+0x8]
100249c2:	test   ebx,ebx
100249c4:	jl     0x100249e5
100249c6:	mov    eax,DWORD PTR [esi+0x10]
100249c9:	mov    ebx,DWORD PTR [ebp+0xc]
100249cc:	push   0x10070af0
100249d1:	mov    DWORD PTR [edi+0x10],eax
100249d4:	push   edi
100249d5:	mov    eax,0x100715f4
100249da:	call   0x100104da
100249df:	mov    ebx,eax
100249e1:	test   ebx,ebx
100249e3:	jge    0x100249f2
100249e5:	test   edi,edi
100249e7:	je     0x100249f2
100249e9:	mov    eax,DWORD PTR [edi]
100249eb:	push   0x1
100249ed:	mov    ecx,edi
100249ef:	call   DWORD PTR [eax+0x1c]
100249f2:	mov    eax,ebx
100249f4:	call   0x10059d4d
100249f9:	ret    0x8
100249fc:	push   0x4
100249fe:	mov    eax,0x1005fa1c
10024a03:	call   0x10059ca8
10024a08:	mov    esi,DWORD PTR [ebp+0x10]
10024a0b:	mov    ebx,DWORD PTR [ebp+0x8]
10024a0e:	cmp    DWORD PTR [ebp+0x18],0x3
10024a12:	jne    0x10024ac6
10024a18:	and    DWORD PTR [ebp-0x4],0x0
10024a1c:	mov    eax,esi
10024a1e:	sub    eax,DWORD PTR [ebp+0xc]
10024a21:	xor    ecx,ecx
10024a23:	push   0x4
10024a25:	sar    eax,0x2
10024a28:	pop    edx
10024a29:	mul    edx
10024a2b:	seto   cl
10024a2e:	neg    ecx
10024a30:	or     ecx,eax
10024a32:	push   ecx
10024a33:	call   0x100439b6
10024a38:	or     DWORD PTR [ebp-0x4],0xffffffff
10024a3c:	pop    ecx
10024a3d:	mov    DWORD PTR [ebx+0x8],eax
10024a40:	jmp    0x10024a4e
10024a42:	mov    eax,0x10024a48
10024a47:	ret    
10024a48:	mov    ebx,DWORD PTR [ebp+0x8]
10024a4b:	mov    esi,DWORD PTR [ebp+0x10]
10024a4e:	mov    eax,DWORD PTR [ebx+0x8]
10024a51:	test   eax,eax
10024a53:	mov    DWORD PTR [ebx+0x10],eax
10024a56:	jne    0x10024a62
10024a58:	mov    eax,0x8007000e
10024a5d:	jmp    0x10024aec
10024a62:	mov    edi,DWORD PTR [ebp+0xc]
10024a65:	jmp    0x10024a7f
10024a67:	mov    ecx,DWORD PTR [ebx+0x10]
10024a6a:	mov    eax,edi
10024a6c:	call   0x10024af4
10024a71:	test   eax,eax
10024a73:	mov    DWORD PTR [ebp+0x8],eax
10024a76:	jl     0x10024a94
10024a78:	add    DWORD PTR [ebx+0x10],0x4
10024a7c:	add    edi,0x4
10024a7f:	cmp    edi,esi
10024a81:	jne    0x10024a67
10024a83:	sub    esi,DWORD PTR [ebp+0xc]
10024a86:	mov    eax,DWORD PTR [ebx+0x8]
10024a89:	sar    esi,0x2
10024a8c:	lea    eax,[eax+esi*4]
10024a8f:	mov    DWORD PTR [ebx+0xc],eax
10024a92:	jmp    0x10024acf
10024a94:	mov    esi,DWORD PTR [ebx+0x8]
10024a97:	jmp    0x10024aa8
10024a99:	mov    eax,DWORD PTR [esi]
10024a9b:	test   eax,eax
10024a9d:	je     0x10024aa5
10024a9f:	mov    ecx,DWORD PTR [eax]
10024aa1:	push   eax
10024aa2:	call   DWORD PTR [ecx+0x8]
10024aa5:	add    esi,0x4
10024aa8:	cmp    esi,DWORD PTR [ebx+0x10]
10024aab:	jb     0x10024a99
10024aad:	push   DWORD PTR [ebx+0x8]
10024ab0:	call   0x10043600
10024ab5:	xor    eax,eax
10024ab7:	mov    DWORD PTR [ebx+0x10],eax
10024aba:	mov    DWORD PTR [ebx+0xc],eax
10024abd:	mov    DWORD PTR [ebx+0x8],eax
10024ac0:	mov    eax,DWORD PTR [ebp+0x8]
10024ac3:	pop    ecx
10024ac4:	jmp    0x10024aec
10024ac6:	mov    eax,DWORD PTR [ebp+0xc]
10024ac9:	mov    DWORD PTR [ebx+0x8],eax
10024acc:	mov    DWORD PTR [ebx+0xc],esi
10024acf:	mov    edi,DWORD PTR [ebp+0x14]
10024ad2:	lea    esi,[ebx+0x4]
10024ad5:	cmp    DWORD PTR [esi],edi
10024ad7:	je     0x10024ade
10024ad9:	call   0x10007617
10024ade:	mov    eax,DWORD PTR [ebx+0x8]
10024ae1:	mov    DWORD PTR [ebx+0x10],eax
10024ae4:	mov    eax,DWORD PTR [ebp+0x18]
10024ae7:	mov    DWORD PTR [ebx+0x14],eax
10024aea:	xor    eax,eax
10024aec:	call   0x10059d4d
10024af1:	ret    0x14
10024af4:	test   ecx,ecx
10024af6:	je     0x10024afc
10024af8:	test   eax,eax
10024afa:	jne    0x10024b06
10024afc:	push   0x80004005
10024b01:	call   0x10001f24
10024b06:	mov    eax,DWORD PTR [eax]
10024b08:	test   eax,eax
10024b0a:	mov    DWORD PTR [ecx],eax
10024b0c:	je     0x10024b14
10024b0e:	mov    ecx,DWORD PTR [eax]
10024b10:	push   eax
10024b11:	call   DWORD PTR [ecx+0x4]
10024b14:	xor    eax,eax
10024b16:	ret    
10024b17:	push   0xc
10024b19:	mov    eax,0x1005fc39
10024b1e:	call   0x10059ca8
10024b23:	mov    edi,DWORD PTR [ebp+0x8]
10024b26:	xor    esi,esi
10024b28:	cmp    edi,esi
10024b2a:	jne    0x10024b33
10024b2c:	mov    eax,0x80004003
10024b31:	jmp    0x10024b74
10024b33:	push   0x1c
10024b35:	mov    DWORD PTR [edi],esi
10024b37:	mov    DWORD PTR [ebp-0x14],0x8007000e
10024b3e:	mov    DWORD PTR [ebp-0x18],esi
10024b41:	mov    DWORD PTR [ebp-0x4],esi
10024b44:	call   0x100436de
10024b49:	cmp    eax,esi
10024b4b:	pop    ecx
10024b4c:	je     0x10024b57
10024b4e:	mov    esi,eax
10024b50:	call   0x10024622
10024b55:	jmp    0x10024b67
10024b57:	xor    eax,eax
10024b59:	jmp    0x10024b67
10024b5b:	mov    eax,0x10024b61
10024b60:	ret    
10024b61:	mov    edi,DWORD PTR [ebp+0x8]
10024b64:	mov    eax,DWORD PTR [ebp-0x18]
10024b67:	test   eax,eax
10024b69:	je     0x10024b6f
10024b6b:	and    DWORD PTR [ebp-0x14],0x0
10024b6f:	mov    DWORD PTR [edi],eax
10024b71:	mov    eax,DWORD PTR [ebp-0x14]
10024b74:	call   0x10059d4d
10024b79:	ret    0x4
10024b7c:	sub    DWORD PTR [esp+0x4],0x24
10024b81:	jmp    0x1002458a
10024b86:	sub    DWORD PTR [esp+0x4],0x8
10024b8b:	jmp    0x1002458a
10024b90:	sub    DWORD PTR [esp+0x4],0xc
10024b95:	jmp    0x1002458a
10024b9a:	sub    DWORD PTR [esp+0x4],0x4
10024b9f:	jmp    0x10024569
10024ba4:	sub    DWORD PTR [esp+0x4],0x24
10024ba9:	jmp    0x10024569
10024bae:	sub    DWORD PTR [esp+0x4],0x4
10024bb3:	jmp    0x1002455c
10024bb8:	sub    DWORD PTR [esp+0x4],0x24
10024bbd:	jmp    0x1002455c
10024bc2:	sub    DWORD PTR [esp+0x4],0x8
10024bc7:	jmp    0x10024569
10024bcc:	sub    DWORD PTR [esp+0x4],0x8
10024bd1:	jmp    0x1002455c
10024bd6:	sub    DWORD PTR [esp+0x4],0xc
10024bdb:	jmp    0x10024569
10024be0:	sub    DWORD PTR [esp+0x4],0xc
10024be5:	jmp    0x1002455c
10024bea:	sub    ecx,0x8
10024bed:	jmp    0x10024606
10024bf2:	sub    ecx,0x8
10024bf5:	jmp    0x100226ea
10024bfa:	sub    DWORD PTR [esp+0x4],0x4
10024bff:	jmp    0x1002458a
10024c04:	push   0x0
10024c06:	mov    eax,0x1005fc1e
10024c0b:	call   0x10059c75
10024c10:	mov    esi,DWORD PTR [ebp+0x8]
10024c13:	push   DWORD PTR [ebp+0xc]
10024c16:	mov    ecx,esi
10024c18:	call   0x100011ab
10024c1d:	push   DWORD PTR [ebp+0x10]
10024c20:	and    DWORD PTR [ebp-0x4],0x0
10024c24:	lea    ecx,[esi+0x1c]
10024c27:	call   0x100011ab
10024c2c:	push   DWORD PTR [ebp+0x14]
10024c2f:	lea    ecx,[esi+0x38]
10024c32:	mov    BYTE PTR [ebp-0x4],0x1
10024c36:	call   0x100011ab
10024c3b:	mov    eax,DWORD PTR [ebp+0x18]
10024c3e:	mov    DWORD PTR [esi+0x58],eax
10024c41:	mov    eax,DWORD PTR [ebp+0x1c]
10024c44:	mov    DWORD PTR [esi+0x5c],eax
10024c47:	mov    eax,DWORD PTR [ebp+0x20]
10024c4a:	mov    DWORD PTR [esi+0x60],eax
10024c4d:	mov    eax,DWORD PTR [ebp+0x24]
10024c50:	mov    DWORD PTR [esi+0x64],eax
10024c53:	mov    eax,esi
10024c55:	call   0x10059d4d
10024c5a:	ret    0x20
10024c5d:	test   BYTE PTR [esp+0x4],0x1
10024c62:	push   esi
10024c63:	mov    esi,ecx
10024c65:	mov    DWORD PTR [esi],0x100718a4
10024c6b:	je     0x10024c74
10024c6d:	push   esi
10024c6e:	call   0x100430d2
10024c73:	pop    ecx
10024c74:	mov    eax,esi
10024c76:	pop    esi
10024c77:	ret    0x4
10024c7a:	push   ebp
10024c7b:	mov    ebp,esp
10024c7d:	push   ecx
10024c7e:	push   ebx
10024c7f:	mov    ebx,DWORD PTR ds:0x10066130
10024c85:	push   esi
10024c86:	xor    esi,esi
10024c88:	push   esi
10024c89:	push   esi
10024c8a:	mov    DWORD PTR [edi],0x100718ac
10024c90:	mov    DWORD PTR [edi+0x4],esi
10024c93:	push   esi
10024c94:	mov    DWORD PTR [edi+0x8],esi
10024c97:	push   esi
10024c98:	mov    DWORD PTR [edi+0x1c],eax
10024c9b:	call   ebx
10024c9d:	push   esi
10024c9e:	push   esi
10024c9f:	push   esi
10024ca0:	push   esi
10024ca1:	mov    DWORD PTR [ebp-0x4],eax
10024ca4:	call   ebx
10024ca6:	push   DWORD PTR [ebp-0x4]
10024ca9:	lea    esi,[edi+0x4]
10024cac:	mov    ebx,eax
10024cae:	call   0x100049bf
10024cb3:	push   ebx
10024cb4:	lea    esi,[edi+0x8]
10024cb7:	call   0x100049bf
10024cbc:	pop    esi
10024cbd:	mov    eax,edi
10024cbf:	pop    ebx
10024cc0:	leave  
10024cc1:	ret    
10024cc2:	push   esi
10024cc3:	mov    esi,ecx
10024cc5:	mov    DWORD PTR [esi],0x100718ac
10024ccb:	mov    eax,DWORD PTR [esi+0x8]
10024cce:	test   eax,eax
10024cd0:	push   edi
10024cd1:	mov    edi,DWORD PTR ds:0x10066070
10024cd7:	je     0x10024cdc
10024cd9:	push   eax
10024cda:	call   edi
10024cdc:	and    DWORD PTR [esi+0x8],0x0
10024ce0:	mov    eax,DWORD PTR [esi+0x4]
10024ce3:	test   eax,eax
10024ce5:	je     0x10024cea
10024ce7:	push   eax
10024ce8:	call   edi
10024cea:	and    DWORD PTR [esi+0x4],0x0
10024cee:	test   BYTE PTR [esp+0xc],0x1
10024cf3:	mov    DWORD PTR [esi],0x100718a4
10024cf9:	je     0x10024d02
10024cfb:	push   esi
10024cfc:	call   0x100430d2
10024d01:	pop    ecx
10024d02:	pop    edi
10024d03:	mov    eax,esi
10024d05:	pop    esi
10024d06:	ret    0x4
10024d09:	push   ebp
10024d0a:	mov    ebp,esp
10024d0c:	sub    esp,0xc
10024d0f:	push   ebx
10024d10:	push   esi
10024d11:	mov    esi,ecx
10024d13:	mov    eax,DWORD PTR [esi+0x4]
10024d16:	mov    DWORD PTR [ebp-0xc],eax
10024d19:	mov    eax,ds:0x10080fa0
10024d1e:	mov    DWORD PTR [ebp-0x8],eax
10024d21:	mov    eax,DWORD PTR [esi+0x1c]
10024d24:	mov    eax,DWORD PTR [eax+0x30]
10024d27:	push   0xffffffff
10024d29:	mov    DWORD PTR [ebp-0x4],eax
10024d2c:	xor    ebx,ebx
10024d2e:	push   ebx
10024d2f:	lea    eax,[ebp-0xc]
10024d32:	push   eax
10024d33:	push   0x3
10024d35:	call   DWORD PTR ds:0x100660e8
10024d3b:	test   eax,eax
10024d3d:	je     0x10024d58
10024d3f:	mov    eax,DWORD PTR [ebp+0x10]
10024d42:	mov    DWORD PTR [eax],ebx
10024d44:	mov    BYTE PTR [esi+0x18],bl
10024d47:	push   DWORD PTR [esi+0x8]
10024d4a:	call   DWORD PTR ds:0x10066110
10024d50:	pop    esi
10024d51:	mov    al,bl
10024d53:	pop    ebx
10024d54:	leave  
10024d55:	ret    0xc
10024d58:	push   edi
10024d59:	mov    edi,DWORD PTR [esi+0x10]
10024d5c:	cmp    edi,DWORD PTR [ebp+0xc]
10024d5f:	jb     0x10024d64
10024d61:	mov    edi,DWORD PTR [ebp+0xc]
10024d64:	push   edi
10024d65:	push   DWORD PTR [esi+0xc]
10024d68:	push   DWORD PTR [ebp+0x8]
10024d6b:	call   0x10045420
10024d70:	mov    eax,DWORD PTR [ebp+0x10]
10024d73:	mov    DWORD PTR [eax],edi
10024d75:	add    esp,0xc
10024d78:	mov    DWORD PTR [esi+0x14],edi
10024d7b:	mov    BYTE PTR [esi+0x18],0x1
10024d7f:	mov    bl,0x1
10024d81:	pop    edi
10024d82:	jmp    0x10024d47
10024d84:	test   BYTE PTR [esp+0x4],0x1
10024d89:	push   esi
10024d8a:	mov    esi,ecx
10024d8c:	mov    DWORD PTR [esi],0x100718a4
10024d92:	je     0x10024d9b
10024d94:	push   esi
10024d95:	call   0x100430d2
10024d9a:	pop    ecx
10024d9b:	mov    eax,esi
10024d9d:	pop    esi
10024d9e:	ret    0x4
10024da1:	mov    DWORD PTR [eax],0x100718a4
10024da7:	ret    
10024da8:	push   ebp
10024da9:	mov    ebp,esp
10024dab:	sub    esp,0x21c
10024db1:	mov    eax,DWORD PTR [ebp+0x8]
10024db4:	push   ebx
10024db5:	push   esi
10024db6:	mov    DWORD PTR [ebp-0x8],eax
10024db9:	mov    eax,DWORD PTR [ebp+0xc]
10024dbc:	push   edi
10024dbd:	xor    edi,edi
10024dbf:	mov    esi,ecx
10024dc1:	mov    DWORD PTR [ebp-0xc],eax
10024dc4:	mov    eax,DWORD PTR [esi+0x4]
10024dc7:	push   edi
10024dc8:	mov    DWORD PTR [ebp-0x4],edi
10024dcb:	mov    DWORD PTR [ebp+0x8],edi
10024dce:	mov    DWORD PTR [ebp+0xc],edi
10024dd1:	push   DWORD PTR [eax+0x30]
10024dd4:	call   DWORD PTR ds:0x10066084
10024dda:	test   eax,eax
10024ddc:	je     0x10024e56
10024dde:	xor    ebx,ebx
10024de0:	inc    ebx
10024de1:	mov    eax,DWORD PTR [esi+0x4]
10024de4:	mov    DWORD PTR [ebp-0x21c],edi
10024dea:	mov    DWORD PTR [ebp-0x14],edi
10024ded:	mov    DWORD PTR [ebp-0x10],0x64
10024df4:	mov    ecx,DWORD PTR [eax]
10024df6:	mov    DWORD PTR [ebp-0x218],ecx
10024dfc:	mov    DWORD PTR [ebp-0x118],edi
10024e02:	mov    DWORD PTR [ebp-0x21c],ebx
10024e08:	mov    ecx,DWORD PTR [eax]
10024e0a:	mov    DWORD PTR [ebp-0x114],ecx
10024e10:	lea    ecx,[ebp+0x8]
10024e13:	push   ecx
10024e14:	lea    ecx,[ebp-0x14]
10024e17:	push   ecx
10024e18:	lea    ecx,[ebp-0x118]
10024e1e:	push   ecx
10024e1f:	push   edi
10024e20:	lea    ecx,[ebp-0x21c]
10024e26:	push   ecx
10024e27:	push   edi
10024e28:	mov    DWORD PTR [ebp-0x118],ebx
10024e2e:	call   DWORD PTR [eax+0x94]
10024e34:	cmp    eax,0xffffffff
10024e37:	je     0x10024e5f
10024e39:	cmp    DWORD PTR [ebp-0x118],ebx
10024e3f:	je     0x10024e6a
10024e41:	cmp    eax,edi
10024e43:	mov    eax,DWORD PTR [esi+0x4]
10024e46:	jg     0x10024e76
10024e48:	push   edi
10024e49:	push   DWORD PTR [eax+0x30]
10024e4c:	call   DWORD PTR ds:0x10066084
10024e52:	test   eax,eax
10024e54:	jne    0x10024de1
10024e56:	mov    eax,DWORD PTR [ebp+0x10]
10024e59:	mov    DWORD PTR [eax],edi
10024e5b:	xor    al,al
10024e5d:	jmp    0x10024ea1
10024e5f:	mov    eax,DWORD PTR [esi+0x4]
10024e62:	mov    ecx,DWORD PTR [ebp+0x8]
10024e65:	mov    DWORD PTR [eax+0x38],ecx
10024e68:	jmp    0x10024e5b
10024e6a:	mov    eax,DWORD PTR [esi+0x4]
10024e6d:	mov    DWORD PTR [eax+0x38],0x2746
10024e74:	jmp    0x10024e5b
10024e76:	lea    ecx,[ebp+0x8]
10024e79:	push   ecx
10024e7a:	push   edi
10024e7b:	push   edi
10024e7c:	push   edi
10024e7d:	lea    ecx,[ebp+0xc]
10024e80:	push   ecx
10024e81:	lea    ecx,[ebp-0x4]
10024e84:	push   ecx
10024e85:	push   ebx
10024e86:	lea    ecx,[ebp-0xc]
10024e89:	push   ecx
10024e8a:	push   DWORD PTR [eax]
10024e8c:	call   DWORD PTR [eax+0x88]
10024e92:	cmp    eax,0xffffffff
10024e95:	je     0x10024e5f
10024e97:	mov    eax,DWORD PTR [ebp+0x10]
10024e9a:	mov    ecx,DWORD PTR [ebp-0x4]
10024e9d:	mov    DWORD PTR [eax],ecx
10024e9f:	mov    al,bl
10024ea1:	pop    edi
10024ea2:	pop    esi
10024ea3:	pop    ebx
10024ea4:	leave  
10024ea5:	ret    0xc
10024ea8:	push   0x0
10024eaa:	mov    eax,0x10061cfe
10024eaf:	call   0x10059c75
10024eb4:	mov    esi,DWORD PTR [ebp+0x8]
10024eb7:	xor    ebx,ebx
10024eb9:	mov    BYTE PTR [esi],bl
10024ebb:	mov    BYTE PTR [esi+0x1],bl
10024ebe:	mov    DWORD PTR [esi+0x8],ebx
10024ec1:	mov    DWORD PTR [esi+0xc],ebx
10024ec4:	mov    DWORD PTR [esi+0x10],ebx
10024ec7:	mov    DWORD PTR [esi+0x14],ebx
10024eca:	mov    DWORD PTR [ebp-0x4],ebx
10024ecd:	mov    DWORD PTR [esi+0x1c],ebx
10024ed0:	mov    DWORD PTR [esi+0x20],ebx
10024ed3:	mov    DWORD PTR [esi+0x24],ebx
10024ed6:	mov    DWORD PTR [esi+0x28],ebx
10024ed9:	mov    DWORD PTR [esi+0x2c],ebx
10024edc:	mov    DWORD PTR [esi+0x30],ebx
10024edf:	mov    DWORD PTR [esi+0x34],ebx
10024ee2:	mov    eax,DWORD PTR [ebp+0xc]
10024ee5:	mov    BYTE PTR [ebp-0x4],0x4
10024ee9:	mov    DWORD PTR [esi+0x50],eax
10024eec:	lea    eax,[esi+0x38]
10024eef:	push   eax
10024ef0:	call   DWORD PTR ds:0x1006611c
10024ef6:	push   0x20
10024ef8:	call   0x100436de
10024efd:	mov    edi,eax
10024eff:	cmp    edi,ebx
10024f01:	pop    ecx
10024f02:	je     0x10024f10
10024f04:	mov    eax,DWORD PTR [esi+0x50]
10024f07:	call   0x10024c7a
10024f0c:	mov    edi,eax
10024f0e:	jmp    0x10024f12
10024f10:	xor    edi,edi
10024f12:	mov    ecx,DWORD PTR [esi+0x30]
10024f15:	cmp    edi,ecx
10024f17:	je     0x10024f23
10024f19:	cmp    ecx,ebx
10024f1b:	je     0x10024f23
10024f1d:	mov    eax,DWORD PTR [ecx]
10024f1f:	push   0x1
10024f21:	call   DWORD PTR [eax]
10024f23:	mov    DWORD PTR [esi+0x30],edi
10024f26:	mov    eax,esi
10024f28:	call   0x10059d4d
10024f2d:	ret    0x8
10024f30:	jmp    0x10026057
10024f35:	push   0x0
10024f37:	mov    eax,0x10061cfe
10024f3c:	call   0x10059c75
10024f41:	mov    edi,DWORD PTR [ebp+0x8]
10024f44:	mov    DWORD PTR [ebp-0x4],0x4
10024f4b:	mov    ecx,edi
10024f4d:	call   0x10025bd9
10024f52:	test   al,al
10024f54:	jne    0x10024f4b
10024f56:	push   edi
10024f57:	call   0x10025f76
10024f5c:	test   al,al
10024f5e:	jne    0x10024f56
10024f60:	lea    eax,[edi+0x38]
10024f63:	push   eax
10024f64:	call   DWORD PTR ds:0x10066138
10024f6a:	lea    eax,[edi+0x34]
10024f6d:	mov    BYTE PTR [ebp-0x4],0x3
10024f71:	call   0x1000cad8
10024f76:	mov    BYTE PTR [ebp-0x4],0x2
10024f7a:	mov    ecx,DWORD PTR [edi+0x30]
10024f7d:	test   ecx,ecx
10024f7f:	je     0x10024f87
10024f81:	mov    eax,DWORD PTR [ecx]
10024f83:	push   0x1
10024f85:	call   DWORD PTR [eax]
10024f87:	mov    BYTE PTR [ebp-0x4],0x1
10024f8b:	mov    eax,DWORD PTR [edi+0x2c]
10024f8e:	test   eax,eax
10024f90:	je     0x10024f98
10024f92:	mov    ecx,DWORD PTR [eax]
10024f94:	push   eax
10024f95:	call   DWORD PTR [ecx+0x8]
10024f98:	lea    esi,[edi+0x18]
10024f9b:	call   0x10026057
10024fa0:	lea    esi,[edi+0x4]
10024fa3:	call   0x10026057
10024fa8:	call   0x10059d4d
10024fad:	ret    0x4
10024fb0:	push   0x8
10024fb2:	mov    eax,0x10064fbf
10024fb7:	call   0x10059ca8
10024fbc:	mov    edi,ecx
10024fbe:	mov    esi,edx
10024fc0:	xor    ebx,ebx
10024fc2:	mov    DWORD PTR [ebp-0x4],ebx
10024fc5:	cmp    DWORD PTR ds:0x10080c7c,0x3
10024fcc:	mov    BYTE PTR [edi],bl
10024fce:	jne    0x10024fd5
10024fd0:	call   0x10004094
10024fd5:	mov    DWORD PTR [ebp-0x14],ebx
10024fd8:	lea    eax,[ebp-0x14]
10024fdb:	push   eax
10024fdc:	mov    BYTE PTR [ebp-0x4],0x1
10024fe0:	push   DWORD PTR [esi+0x50]
10024fe3:	push   DWORD PTR [ebp+0x8]
10024fe6:	push   0x10080f88
10024feb:	call   0x100262bd
10024ff0:	add    esp,0x10
10024ff3:	cmp    al,bl
10024ff5:	je     0x10025009
10024ff7:	mov    ecx,DWORD PTR [ebp-0x14]
10024ffa:	cmp    ecx,ebx
10024ffc:	je     0x10025015
10024ffe:	mov    DWORD PTR [ebp-0x14],ebx
10025001:	call   0x10025c4a
10025006:	mov    BYTE PTR [edi],0x1
10025009:	mov    edi,DWORD PTR [ebp-0x14]
1002500c:	cmp    edi,ebx
1002500e:	je     0x10025015
10025010:	call   0x10009e94
10025015:	call   0x10059d4d
1002501a:	ret    0x4
1002501d:	mov    eax,0x10025015
10025022:	ret    
10025023:	push   ebp
10025024:	mov    ebp,esp
10025026:	and    esp,0xfffffff8
10025029:	sub    esp,0x120
1002502f:	push   ebx
10025030:	push   esi
10025031:	xor    esi,esi
10025033:	xor    ebx,ebx
10025035:	cmp    DWORD PTR [ebp+0xc],esi
10025038:	jbe    0x100250dd
1002503e:	mov    eax,DWORD PTR [ebp+0x8]
10025041:	add    eax,ebx
10025043:	mov    DWORD PTR [esp+0x1c],eax
10025047:	mov    eax,DWORD PTR [ebp+0xc]
1002504a:	sub    eax,ebx
1002504c:	mov    DWORD PTR [esp+0x8],esi
10025050:	mov    DWORD PTR [esp+0xc],esi
10025054:	mov    DWORD PTR [esp+0x18],eax
10025058:	mov    eax,DWORD PTR [edi+0x50]
1002505b:	push   esi
1002505c:	push   DWORD PTR [eax+0x30]
1002505f:	call   DWORD PTR ds:0x10066084
10025065:	test   eax,eax
10025067:	mov    eax,DWORD PTR [edi+0x50]
1002506a:	je     0x100250e7
1002506c:	mov    DWORD PTR [esp+0x20],esi
10025070:	mov    DWORD PTR [esp+0x10],esi
10025074:	mov    DWORD PTR [esp+0x14],0x64
1002507c:	mov    ecx,DWORD PTR [eax]
1002507e:	mov    DWORD PTR [esp+0x24],ecx
10025082:	lea    ecx,[esp+0x8]
10025086:	push   ecx
10025087:	lea    ecx,[esp+0x14]
1002508b:	push   ecx
1002508c:	push   esi
1002508d:	lea    ecx,[esp+0x2c]
10025091:	push   ecx
10025092:	push   esi
10025093:	push   esi
10025094:	mov    DWORD PTR [esp+0x38],0x1
1002509c:	call   DWORD PTR [eax+0x94]
100250a2:	cmp    eax,0xffffffff
100250a5:	je     0x100250f2
100250a7:	cmp    eax,esi
100250a9:	jle    0x10025058
100250ab:	mov    eax,DWORD PTR [edi+0x50]
100250ae:	lea    ecx,[esp+0x8]
100250b2:	push   ecx
100250b3:	push   esi
100250b4:	push   esi
100250b5:	push   esi
100250b6:	push   esi
100250b7:	lea    ecx,[esp+0x20]
100250bb:	push   ecx
100250bc:	push   0x1
100250be:	lea    ecx,[esp+0x34]
100250c2:	push   ecx
100250c3:	push   DWORD PTR [eax]
100250c5:	call   DWORD PTR [eax+0x98]
100250cb:	cmp    eax,0xffffffff
100250ce:	je     0x100250f2
100250d0:	add    ebx,DWORD PTR [esp+0xc]
100250d4:	cmp    DWORD PTR [ebp+0xc],ebx
100250d7:	ja     0x1002503e
100250dd:	mov    al,0x1
100250df:	pop    esi
100250e0:	pop    ebx
100250e1:	mov    esp,ebp
100250e3:	pop    ebp
100250e4:	ret    0x8
100250e7:	mov    DWORD PTR [eax+0x38],0x2749
100250ee:	xor    al,al
100250f0:	jmp    0x100250df
100250f2:	mov    eax,DWORD PTR [edi+0x50]
100250f5:	mov    ecx,DWORD PTR [esp+0x8]
100250f9:	mov    DWORD PTR [eax+0x38],ecx
100250fc:	jmp    0x100250ee
100250fe:	push   0x8
10025100:	mov    eax,0x10063b84
10025105:	call   0x10059c75
1002510a:	mov    ebx,ecx
1002510c:	push   0x40
1002510e:	call   0x100436de
10025113:	pop    ecx
10025114:	mov    DWORD PTR [ebp-0x14],eax
10025117:	and    DWORD PTR [ebp-0x4],0x0
1002511b:	test   eax,eax
1002511d:	je     0x10025129
1002511f:	push   eax
10025120:	call   0x1000867a
10025125:	mov    esi,eax
10025127:	jmp    0x1002512b
10025129:	xor    esi,esi
1002512b:	mov    DWORD PTR [ebp-0x14],esi
1002512e:	mov    eax,ebx
10025130:	mov    DWORD PTR [ebp-0x4],0x1
10025137:	call   0x1000e057
1002513c:	test   al,al
1002513e:	je     0x10025191
10025140:	lea    eax,[ebp-0x10]
10025143:	push   eax
10025144:	call   0x1000de72
10025149:	mov    BYTE PTR [ebp-0x4],0x2
1002514d:	mov    ecx,DWORD PTR [eax]
1002514f:	and    DWORD PTR [eax],0x0
10025152:	mov    eax,ecx
10025154:	mov    ecx,esi
10025156:	call   0x100086be
1002515b:	mov    BYTE PTR [ebp-0x4],0x1
1002515f:	mov    edi,DWORD PTR [ebp-0x10]
10025162:	test   edi,edi
10025164:	je     0x1002516b
10025166:	call   0x10009e94
1002516b:	mov    eax,DWORD PTR [esi+0x30]
1002516e:	mov    ecx,DWORD PTR [eax+0x18]
10025171:	mov    eax,DWORD PTR [eax+0x14]
10025174:	mov    edi,DWORD PTR [ebp+0x8]
10025177:	push   ecx
10025178:	push   eax
10025179:	call   0x10025023
1002517e:	or     DWORD PTR [ebp-0x4],0xffffffff
10025182:	test   al,al
10025184:	push   esi
10025185:	je     0x1002519a
10025187:	call   0x10009ece
1002518c:	jmp    0x1002510c
10025191:	or     DWORD PTR [ebp-0x4],0xffffffff
10025195:	test   esi,esi
10025197:	je     0x1002519f
10025199:	push   esi
1002519a:	call   0x10009ece
1002519f:	call   0x10059d4d
100251a4:	ret    0x4
100251a7:	push   esi
100251a8:	mov    esi,ecx
100251aa:	cmp    BYTE PTR [esi+0x8],0x0
100251ae:	jne    0x100251e2
100251b0:	cmp    BYTE PTR [esi+0x9],0x0
100251b4:	jne    0x100251e2
100251b6:	push   ebx
100251b7:	mov    ebx,DWORD PTR [esp+0xc]
100251bb:	mov    eax,DWORD PTR [ebx+0x18]
100251be:	mov    ecx,DWORD PTR [ebx+0x14]
100251c1:	push   edi
100251c2:	push   eax
100251c3:	mov    eax,DWORD PTR [esi+0x4]
100251c6:	mov    edi,DWORD PTR [eax+0x1c]
100251c9:	push   ecx
100251ca:	call   0x10025023
100251cf:	test   al,al
100251d1:	jne    0x100251e0
100251d3:	mov    BYTE PTR [esi+0x9],0x1
100251d7:	push   DWORD PTR [ebx+0x18]
100251da:	call   0x1000205f
100251df:	pop    ecx
100251e0:	pop    edi
100251e1:	pop    ebx
100251e2:	pop    esi
100251e3:	ret    0x4
100251e6:	push   0x8
100251e8:	mov    eax,0x10064567
100251ed:	call   0x10059ca8
100251f2:	mov    esi,DWORD PTR [ebp+0x10]
100251f5:	push   0xc
100251f7:	call   0x100436de
100251fc:	xor    ebx,ebx
100251fe:	cmp    eax,ebx
10025200:	pop    ecx
10025201:	je     0x1002521f
10025203:	mov    ecx,DWORD PTR [ebp+0x8]
10025206:	mov    ecx,DWORD PTR [ecx+0x50]
10025209:	mov    DWORD PTR [eax+0x4],ecx
1002520c:	mov    cl,BYTE PTR [ebp+0x18]
1002520f:	mov    DWORD PTR [eax],0x100718bc
10025215:	mov    BYTE PTR [eax+0x8],cl
10025218:	mov    BYTE PTR [eax+0x9],bl
1002521b:	mov    edi,eax
1002521d:	jmp    0x10025221
1002521f:	xor    edi,edi
10025221:	mov    DWORD PTR [ebp-0x14],edi
10025224:	mov    DWORD PTR [ebp-0x4],ebx
10025227:	call   0x1000dcfb
1002522c:	push   DWORD PTR [ebp+0xc]
1002522f:	mov    ecx,DWORD PTR [ebp+0x14]
10025232:	mov    DWORD PTR [esi+0x14],edi
10025235:	mov    BYTE PTR [ebp-0x4],0x1
10025239:	call   0x1000e354
1002523e:	cmp    eax,ebx
10025240:	mov    DWORD PTR [ebp+0x18],eax
10025243:	jne    0x10025268
10025245:	cmp    BYTE PTR [edi+0x9],bl
10025248:	je     0x10025268
1002524a:	mov    esi,DWORD PTR [ebp+0x8]
1002524d:	call   0x10025ba8
10025252:	or     DWORD PTR [ebp-0x4],0xffffffff
10025256:	mov    eax,DWORD PTR [edi]
10025258:	push   0x1
1002525a:	mov    ecx,edi
1002525c:	call   DWORD PTR [eax]
1002525e:	xor    eax,eax
10025260:	call   0x10059d4d
10025265:	ret    0x14
10025268:	mov    DWORD PTR [ebp-0x4],ebx
1002526b:	call   0x1000dcfb
10025270:	or     DWORD PTR [ebp-0x4],0xffffffff
10025274:	cmp    edi,ebx
10025276:	mov    DWORD PTR [esi+0x14],ebx
10025279:	je     0x10025283
1002527b:	mov    eax,DWORD PTR [edi]
1002527d:	push   0x1
1002527f:	mov    ecx,edi
10025281:	call   DWORD PTR [eax]
10025283:	mov    eax,DWORD PTR [ebp+0x18]
10025286:	jmp    0x10025260
10025288:	push   0x4
1002528a:	call   0x10037b70
1002528f:	mov    esi,DWORD PTR [ebp+0x10]
10025292:	pop    ecx
10025293:	call   0x1000dcfb
10025298:	xor    ebx,ebx
1002529a:	push   ebx
1002529b:	push   ebx
1002529c:	mov    DWORD PTR [esi+0x14],ebx
1002529f:	call   0x10047c54
100252a4:	int3   
100252a5:	push   ebp
100252a6:	mov    ebp,esp
100252a8:	and    esp,0xfffffff8
100252ab:	push   0xffffffff
100252ad:	push   0x10065270
100252b2:	mov    eax,fs:0x0
100252b8:	push   eax
100252b9:	sub    esp,0x40
100252bc:	push   ebx
100252bd:	push   esi
100252be:	push   edi
100252bf:	mov    eax,ds:0x1007e030
100252c4:	xor    eax,esp
100252c6:	push   eax
100252c7:	lea    eax,[esp+0x50]
100252cb:	mov    fs:0x0,eax
100252d1:	mov    esi,ecx
100252d3:	mov    eax,DWORD PTR [esi+0x30]
100252d6:	xor    ebx,ebx
100252d8:	mov    DWORD PTR [esp+0x30],ebx
100252dc:	mov    DWORD PTR [esp+0x34],ebx
100252e0:	mov    DWORD PTR [esp+0x38],ebx
100252e4:	mov    DWORD PTR [esp+0x3c],ebx
100252e8:	mov    BYTE PTR [esp+0x40],bl
100252ec:	mov    DWORD PTR [esp+0x44],ebx
100252f0:	mov    DWORD PTR [esp+0x48],eax
100252f4:	lea    eax,[esp+0x30]
100252f8:	mov    DWORD PTR [esp+0x58],ebx
100252fc:	mov    DWORD PTR [esp+0x20],eax
10025300:	push   0x40
10025302:	call   0x100436de
10025307:	pop    ecx
10025308:	mov    DWORD PTR [esp+0x24],eax
1002530c:	cmp    eax,ebx
1002530e:	mov    BYTE PTR [esp+0x58],0x1
10025313:	je     0x10025323
10025315:	push   eax
10025316:	call   0x1000867a
1002531b:	mov    edi,eax
1002531d:	mov    DWORD PTR [esp+0x10],edi
10025321:	jmp    0x10025329
10025323:	mov    DWORD PTR [esp+0x10],ebx
10025327:	mov    edi,ebx
10025329:	mov    DWORD PTR [esp+0x28],edi
1002532d:	push   edi
1002532e:	lea    ecx,[esp+0x24]
10025332:	mov    BYTE PTR [esp+0x5c],0x2
10025337:	call   0x1000e098
1002533c:	cmp    eax,0x1
1002533f:	mov    DWORD PTR [esp+0x14],eax
10025343:	je     0x10025444
10025349:	lea    eax,[esp+0x1c]
1002534d:	push   eax
1002534e:	lea    ebx,[esp+0x34]
10025352:	call   0x1000de72
10025357:	mov    BYTE PTR [esp+0x58],0x3
1002535c:	mov    ecx,DWORD PTR [eax]
1002535e:	xor    ebx,ebx
10025360:	mov    DWORD PTR [eax],ebx
10025362:	mov    eax,ecx
10025364:	mov    ecx,edi
10025366:	call   0x100086be
1002536b:	mov    BYTE PTR [esp+0x58],0x2
10025370:	cmp    DWORD PTR [esp+0x1c],ebx
10025374:	je     0x10025383
10025376:	mov    edi,DWORD PTR [esp+0x1c]
1002537a:	call   0x10009e94
1002537f:	mov    edi,DWORD PTR [esp+0x10]
10025383:	call   0x1002fb70
10025388:	mov    DWORD PTR [edi+0x10],eax
1002538b:	mov    DWORD PTR [edi+0x14],edx
1002538e:	call   0x10025bbf
10025393:	test   al,al
10025395:	je     0x1002539f
10025397:	mov    DWORD PTR [esp+0x14],0x1
1002539f:	cmp    DWORD PTR [esp+0x14],ebx
100253a3:	mov    BYTE PTR [esp+0x18],bl
100253a7:	jne    0x100253bb
100253a9:	push   edi
100253aa:	lea    ecx,[esp+0x1c]
100253ae:	mov    edx,esi
100253b0:	call   0x10024fb0
100253b5:	cmp    BYTE PTR [esp+0x18],bl
100253b9:	jne    0x10025412
100253bb:	push   edi
100253bc:	call   0x100087ce
100253c1:	lea    ebx,[esi+0x38]
100253c4:	push   ebx
100253c5:	mov    DWORD PTR [esp+0x28],eax
100253c9:	mov    DWORD PTR [esp+0x30],ebx
100253cd:	call   DWORD PTR ds:0x100660f0
100253d3:	lea    eax,[esp+0x24]
100253d7:	push   eax
100253d8:	lea    eax,[esi+0x4]
100253db:	mov    BYTE PTR [esp+0x5c],0x4
100253e0:	call   0x100260b1
100253e5:	push   ebx
100253e6:	mov    BYTE PTR [esp+0x5c],0x2
100253eb:	call   DWORD PTR ds:0x100660ec
100253f1:	mov    eax,DWORD PTR [edi+0x30]
100253f4:	mov    ecx,DWORD PTR [eax+0x18]
100253f7:	mov    eax,DWORD PTR [eax+0x14]
100253fa:	push   ecx
100253fb:	push   eax
100253fc:	mov    edi,esi
100253fe:	call   0x10025023
10025403:	test   al,al
10025405:	mov    edi,DWORD PTR [esp+0x10]
10025409:	je     0x1002545d
1002540b:	cmp    DWORD PTR [esp+0x14],0x0
10025410:	jne    0x1002542b
10025412:	push   DWORD PTR [esp+0x18]
10025416:	lea    eax,[esp+0x34]
1002541a:	push   edi
1002541b:	push   eax
1002541c:	lea    eax,[esp+0x2c]
10025420:	push   eax
10025421:	push   esi
10025422:	call   0x100251e6
10025427:	mov    DWORD PTR [esp+0x14],eax
1002542b:	cmp    DWORD PTR [esp+0x14],0x1
10025430:	je     0x10025473
10025432:	push   edi
10025433:	mov    BYTE PTR [esp+0x5c],0x0
10025438:	call   0x10009ece
1002543d:	xor    ebx,ebx
1002543f:	jmp    0x10025300
10025444:	call   0x10025ba8
10025449:	push   esi
1002544a:	lea    ecx,[esp+0x34]
1002544e:	call   0x100250fe
10025453:	cmp    edi,ebx
10025455:	mov    BYTE PTR [esp+0x58],bl
10025459:	je     0x10025495
1002545b:	jmp    0x1002548f
1002545d:	mov    eax,DWORD PTR [edi+0x30]
10025460:	push   DWORD PTR [eax+0x18]
10025463:	push   0x0
10025465:	call   0x1000205f
1002546a:	pop    ecx
1002546b:	pop    ecx
1002546c:	call   0x10025ba8
10025471:	jmp    0x1002548a
10025473:	push   0x10
10025475:	call   0x10037b70
1002547a:	pop    ecx
1002547b:	call   0x10025ba8
10025480:	push   esi
10025481:	lea    ecx,[esp+0x34]
10025485:	call   0x100250fe
1002548a:	mov    BYTE PTR [esp+0x58],0x0
1002548f:	push   edi
10025490:	call   0x10009ece
10025495:	or     DWORD PTR [esp+0x58],0xffffffff
1002549a:	lea    eax,[esp+0x30]
1002549e:	call   0x1000dcca
100254a3:	mov    ecx,DWORD PTR [esp+0x50]
100254a7:	mov    DWORD PTR fs:0x0,ecx
100254ae:	pop    ecx
100254af:	pop    edi
100254b0:	pop    esi
100254b1:	pop    ebx
100254b2:	mov    esp,ebp
100254b4:	pop    ebp
100254b5:	ret    
100254b6:	push   0x8
100254b8:	mov    eax,0x10065298
100254bd:	call   0x10059ca8
100254c2:	lea    eax,[ebp+0xb]
100254c5:	push   eax
100254c6:	call   0x10037b40
100254cb:	and    DWORD PTR [ebp-0x4],0x0
100254cf:	mov    eax,DWORD PTR [ebp+0x8]
100254d2:	mov    DWORD PTR [ebp-0x14],eax
100254d5:	mov    BYTE PTR [ebp-0x4],0x2
100254d9:	mov    ecx,DWORD PTR [eax+0x1c]
100254dc:	call   0x100252a5
100254e1:	lea    ecx,[ebp-0x14]
100254e4:	call   0x10015fdf
100254e9:	call   0x10037b60
100254ee:	xor    eax,eax
100254f0:	call   0x10059d4d
100254f5:	ret    0x4
100254f8:	mov    eax,DWORD PTR [ebp-0x14]
100254fb:	push   DWORD PTR [eax]
100254fd:	call   0x1000205f
10025502:	pop    ecx
10025503:	mov    eax,0x100254e1
10025508:	ret    
10025509:	push   0x4
1002550b:	mov    eax,0x10063b4f
10025510:	call   0x10059c75
10025515:	mov    ebx,ecx
10025517:	mov    esi,edx
10025519:	mov    eax,DWORD PTR [esi+0x50]
1002551c:	xor    edi,edi
1002551e:	push   edi
1002551f:	push   DWORD PTR [eax+0x30]
10025522:	call   DWORD PTR ds:0x10066084
10025528:	test   eax,eax
1002552a:	je     0x10025541
1002552c:	mov    eax,esi
1002552e:	call   0x10025b7a
10025533:	test   eax,eax
10025535:	je     0x10025541
10025537:	push   0xa
10025539:	call   DWORD PTR ds:0x100660bc
1002553f:	jmp    0x10025519
10025541:	mov    eax,ebx
10025543:	call   0x1000e057
10025548:	test   al,al
1002554a:	je     0x10025574
1002554c:	lea    eax,[ebp-0x10]
1002554f:	push   eax
10025550:	call   0x1000de72
10025555:	mov    DWORD PTR [ebp-0x4],edi
10025558:	mov    ecx,DWORD PTR [eax]
1002555a:	mov    DWORD PTR [eax],edi
1002555c:	call   0x10025c4a
10025561:	or     DWORD PTR [ebp-0x4],0xffffffff
10025565:	cmp    DWORD PTR [ebp-0x10],edi
10025568:	je     0x10025519
1002556a:	mov    edi,DWORD PTR [ebp-0x10]
1002556d:	call   0x10009e94
10025572:	jmp    0x10025519
10025574:	call   0x10025ff8
10025579:	call   0x10059d4d
1002557e:	ret    
1002557f:	mov    eax,DWORD PTR [ecx+0x4]
10025582:	mov    ecx,DWORD PTR [esp+0x4]
10025586:	push   esi
10025587:	mov    esi,DWORD PTR [eax+0x1c]
1002558a:	call   0x10025c4a
1002558f:	pop    esi
10025590:	ret    0x4
10025593:	push   0x10
10025595:	mov    eax,0x100649fc
1002559a:	call   0x10059ca8
1002559f:	mov    ebx,ecx
100255a1:	mov    edi,edx
100255a3:	and    DWORD PTR [ebp-0x4],0x0
100255a7:	mov    ecx,DWORD PTR [ebp+0x10]
100255aa:	lea    eax,[ecx+0x34]
100255ad:	mov    edx,DWORD PTR [eax]
100255af:	mov    edx,DWORD PTR [edx+0x18]
100255b2:	mov    DWORD PTR [ecx+0x38],edx
100255b5:	mov    ecx,DWORD PTR [eax]
100255b7:	and    DWORD PTR [eax],0x0
100255ba:	mov    esi,edi
100255bc:	call   0x10025c4a
100255c1:	push   0x8
100255c3:	call   0x100436de
100255c8:	test   eax,eax
100255ca:	pop    ecx
100255cb:	je     0x100255de
100255cd:	mov    ecx,DWORD PTR [edi+0x50]
100255d0:	mov    DWORD PTR [eax],0x100718c4
100255d6:	mov    DWORD PTR [eax+0x4],ecx
100255d9:	mov    DWORD PTR [ebp-0x14],eax
100255dc:	jmp    0x100255e2
100255de:	and    DWORD PTR [ebp-0x14],0x0
100255e2:	mov    eax,DWORD PTR [ebp-0x14]
100255e5:	mov    DWORD PTR [ebp-0x1c],eax
100255e8:	mov    esi,DWORD PTR [ebp+0xc]
100255eb:	mov    BYTE PTR [ebp-0x4],0x1
100255ef:	call   0x1000dcfb
100255f4:	mov    eax,DWORD PTR [ebp-0x14]
100255f7:	mov    BYTE PTR [ebp-0x4],0x2
100255fb:	mov    edx,DWORD PTR [ebp+0x10]
100255fe:	mov    ecx,DWORD PTR [ebp+0x8]
10025601:	push   ebx
10025602:	mov    DWORD PTR [esi+0x14],eax
10025605:	call   0x1000e676
1002560a:	test   eax,eax
1002560c:	mov    DWORD PTR [ebp-0x18],eax
1002560f:	jne    0x10025664
10025611:	call   0x1002fb70
10025616:	mov    ecx,DWORD PTR [ebp+0x10]
10025619:	mov    DWORD PTR [ecx+0x18],eax
1002561c:	mov    eax,DWORD PTR [ebp+0x10]
1002561f:	mov    DWORD PTR [eax+0x1c],edx
10025622:	mov    ecx,DWORD PTR [ebp+0x10]
10025625:	push   edi
10025626:	call   0x10025ca6
1002562b:	cmp    BYTE PTR [ebx+0x2c],0x0
1002562f:	jne    0x10025664
10025631:	push   ebx
10025632:	call   0x100087ce
10025637:	mov    DWORD PTR [ebp+0x8],eax
1002563a:	lea    eax,[ebp+0x10]
1002563d:	push   eax
1002563e:	lea    eax,[ebp+0x8]
10025641:	push   eax
10025642:	mov    edi,0x10080f70
10025647:	mov    BYTE PTR [ebp-0x4],0x3
1002564b:	call   0x100266d1
10025650:	pop    ecx
10025651:	mov    BYTE PTR [ebp-0x4],0x2
10025655:	cmp    DWORD PTR [ebp+0x8],0x0
10025659:	pop    ecx
1002565a:	je     0x10025664
1002565c:	push   DWORD PTR [ebp+0x8]
1002565f:	call   0x10009ece
10025664:	mov    esi,DWORD PTR [ebp+0xc]
10025667:	xor    edi,edi
10025669:	inc    edi
1002566a:	mov    DWORD PTR [ebp-0x4],edi
1002566d:	call   0x1000dcfb
10025672:	and    DWORD PTR [esi+0x14],0x0
10025676:	mov    ecx,DWORD PTR [ebp-0x14]
10025679:	test   ecx,ecx
1002567b:	mov    BYTE PTR [ebp-0x4],0x0
1002567f:	je     0x10025686
10025681:	mov    eax,DWORD PTR [ecx]
10025683:	push   edi
10025684:	call   DWORD PTR [eax]
10025686:	or     DWORD PTR [ebp-0x4],0xffffffff
1002568a:	lea    eax,[ebp+0x10]
1002568d:	call   0x10009e51
10025692:	mov    eax,DWORD PTR [ebp-0x18]
10025695:	call   0x10059d4d
1002569a:	ret    0xc
1002569d:	push   0x4
1002569f:	call   0x10037b70
100256a4:	mov    esi,DWORD PTR [ebp+0xc]
100256a7:	pop    ecx
100256a8:	call   0x1000dcfb
100256ad:	xor    eax,eax
100256af:	push   eax
100256b0:	push   eax
100256b1:	mov    DWORD PTR [esi+0x14],eax
100256b4:	call   0x10047c54
100256b9:	int3   
100256ba:	push   0x10
100256bc:	mov    eax,0x100649c9
100256c1:	call   0x10059c75
100256c6:	mov    ebx,edx
100256c8:	mov    esi,DWORD PTR [ebp+0x10]
100256cb:	push   DWORD PTR [ebp+0xc]
100256ce:	mov    edx,esi
100256d0:	call   0x1000e676
100256d5:	test   eax,eax
100256d7:	mov    DWORD PTR [ebp-0x10],eax
100256da:	jne    0x10025730
100256dc:	lea    eax,[ebp-0x14]
100256df:	push   eax
100256e0:	call   0x1000de72
100256e5:	and    DWORD PTR [ebp-0x4],0x0
100256e9:	mov    ebx,DWORD PTR [eax]
100256eb:	and    DWORD PTR [eax],0x0
100256ee:	mov    ecx,esi
100256f0:	call   0x10008fe3
100256f5:	or     DWORD PTR [ebp-0x4],0xffffffff
100256f9:	mov    edi,DWORD PTR [ebp-0x14]
100256fc:	test   edi,edi
100256fe:	je     0x10025705
10025700:	call   0x10009e94
10025705:	call   0x1002fb70
1002570a:	mov    DWORD PTR [esi+0x18],eax
1002570d:	mov    eax,DWORD PTR [ebp+0xc]
10025710:	mov    DWORD PTR [esi+0x1c],edx
10025713:	cmp    BYTE PTR [eax+0x2c],0x0
10025717:	jne    0x10025776
10025719:	mov    ecx,DWORD PTR [ebp+0x8]
1002571c:	push   esi
1002571d:	push   DWORD PTR [ecx+0x50]
10025720:	push   eax
10025721:	push   0x10080f94
10025726:	call   0x100265d0
1002572b:	add    esp,0x10
1002572e:	jmp    0x10025776
10025730:	lea    eax,[ebp-0x18]
10025733:	push   eax
10025734:	call   0x1000de72
10025739:	mov    DWORD PTR [ebp-0x4],0x1
10025740:	mov    ebx,DWORD PTR [eax]
10025742:	and    DWORD PTR [eax],0x0
10025745:	mov    DWORD PTR [ebp-0x14],ebx
10025748:	mov    BYTE PTR [ebp-0x4],0x2
1002574c:	mov    edi,DWORD PTR [ebx+0x18]
1002574f:	test   edi,edi
10025751:	je     0x1002575f
10025753:	mov    ecx,DWORD PTR [ebx+0x14]
10025756:	mov    eax,DWORD PTR [esi+0x34]
10025759:	push   ecx
1002575a:	call   0x100076b0
1002575f:	mov    edi,ebx
10025761:	call   0x10009e94
10025766:	or     DWORD PTR [ebp-0x4],0xffffffff
1002576a:	mov    edi,DWORD PTR [ebp-0x18]
1002576d:	test   edi,edi
1002576f:	je     0x10025776
10025771:	call   0x10009e94
10025776:	mov    eax,DWORD PTR [esi+0x34]
10025779:	mov    eax,DWORD PTR [eax+0x18]
1002577c:	mov    DWORD PTR [esi+0x38],eax
1002577f:	mov    ecx,DWORD PTR [esi+0x34]
10025782:	and    DWORD PTR [esi+0x34],0x0
10025786:	mov    esi,DWORD PTR [ebp+0x8]
10025789:	call   0x10025c4a
1002578e:	cmp    DWORD PTR [ebp-0x10],0x0
10025792:	jne    0x100257a0
10025794:	mov    ecx,DWORD PTR [ebp+0x10]
10025797:	mov    ebx,DWORD PTR [ebp+0xc]
1002579a:	push   esi
1002579b:	call   0x10025ca6
100257a0:	mov    eax,DWORD PTR [ebp-0x10]
100257a3:	call   0x10059d4d
100257a8:	ret    0xc
100257ab:	push   ebp
100257ac:	mov    ebp,esp
100257ae:	and    esp,0xfffffff8
100257b1:	push   0xffffffff
100257b3:	push   0x10064f9c
100257b8:	mov    eax,fs:0x0
100257be:	push   eax
100257bf:	sub    esp,0x48
100257c2:	push   ebx
100257c3:	push   esi
100257c4:	push   edi
100257c5:	mov    eax,ds:0x1007e030
100257ca:	xor    eax,esp
100257cc:	push   eax
100257cd:	lea    eax,[esp+0x58]
100257d1:	mov    fs:0x0,eax
100257d7:	mov    edi,DWORD PTR [ebp+0x8]
100257da:	mov    eax,DWORD PTR [edi+0x50]
100257dd:	mov    DWORD PTR [esp+0x30],0x100718b4
100257e5:	mov    DWORD PTR [esp+0x34],eax
100257e9:	xor    ebx,ebx
100257eb:	mov    DWORD PTR [esp+0x60],ebx
100257ef:	lea    ecx,[esp+0x30]
100257f3:	mov    DWORD PTR [esp+0x38],ebx
100257f7:	mov    DWORD PTR [esp+0x3c],ebx
100257fb:	mov    DWORD PTR [esp+0x40],ebx
100257ff:	mov    DWORD PTR [esp+0x44],ebx
10025803:	mov    BYTE PTR [esp+0x48],bl
10025807:	mov    DWORD PTR [esp+0x4c],ebx
1002580b:	mov    DWORD PTR [esp+0x50],ecx
1002580f:	lea    ecx,[esp+0x38]
10025813:	mov    BYTE PTR [esp+0x60],0x1
10025818:	mov    DWORD PTR [esp+0x20],ecx
1002581c:	jmp    0x100259fe
10025821:	mov    eax,edi
10025823:	call   0x10025b7a
10025828:	test   eax,eax
1002582a:	je     0x10025839
1002582c:	push   0xa
1002582e:	call   DWORD PTR ds:0x100660bc
10025834:	jmp    0x100259fb
10025839:	lea    esi,[esp+0x38]
1002583d:	call   0x1000de4d
10025842:	test   al,al
10025844:	jne    0x10025a12
1002584a:	push   0x40
1002584c:	call   0x100436de
10025851:	pop    ecx
10025852:	mov    DWORD PTR [esp+0x24],eax
10025856:	cmp    eax,ebx
10025858:	mov    BYTE PTR [esp+0x60],0x2
1002585d:	je     0x1002586b
1002585f:	push   eax
10025860:	call   0x10008f2e
10025865:	mov    DWORD PTR [esp+0x18],eax
10025869:	jmp    0x1002586f
1002586b:	mov    DWORD PTR [esp+0x18],ebx
1002586f:	mov    eax,DWORD PTR [esp+0x18]
10025873:	mov    DWORD PTR [esp+0x24],eax
10025877:	push   eax
10025878:	lea    eax,[esp+0x24]
1002587c:	push   eax
1002587d:	mov    BYTE PTR [esp+0x68],0x3
10025882:	call   0x1000e598
10025887:	lea    esi,[edi+0x38]
1002588a:	push   esi
1002588b:	mov    DWORD PTR [esp+0x18],eax
1002588f:	call   DWORD PTR ds:0x100660f0
10025895:	cmp    BYTE PTR [edi],bl
10025897:	jne    0x100258b8
10025899:	cmp    DWORD PTR [edi+0x14],ebx
1002589c:	je     0x100258b8
1002589e:	lea    esi,[edi+0x4]
100258a1:	call   0x10026014
100258a6:	mov    esi,DWORD PTR [eax]
100258a8:	lea    eax,[edi+0x38]
100258ab:	push   eax
100258ac:	call   DWORD PTR ds:0x100660ec
100258b2:	mov    DWORD PTR [esp+0x1c],esi
100258b6:	jmp    0x100258c3
100258b8:	push   esi
100258b9:	call   DWORD PTR ds:0x100660ec
100258bf:	mov    DWORD PTR [esp+0x1c],ebx
100258c3:	cmp    DWORD PTR [esp+0x1c],ebx
100258c7:	jne    0x100258d1
100258c9:	mov    DWORD PTR [esp+0x14],0x1
100258d1:	mov    esi,edi
100258d3:	call   0x10025bbf
100258d8:	test   al,al
100258da:	je     0x100258e4
100258dc:	mov    DWORD PTR [esp+0x14],0x1
100258e4:	cmp    DWORD PTR [esp+0x14],ebx
100258e8:	jne    0x100259a1
100258ee:	call   0x10004094
100258f3:	lea    eax,[esp+0x28]
100258f7:	push   eax
100258f8:	lea    ebx,[esp+0x3c]
100258fc:	call   0x1000de72
10025901:	mov    esi,DWORD PTR [esp+0x18]
10025905:	mov    BYTE PTR [esp+0x60],0x4
1002590a:	mov    ecx,DWORD PTR [eax]
1002590c:	and    DWORD PTR [eax],0x0
1002590f:	mov    eax,ecx
10025911:	mov    ecx,esi
10025913:	call   0x10008f75
10025918:	mov    BYTE PTR [esp+0x60],0x3
1002591d:	cmp    DWORD PTR [esp+0x28],0x0
10025922:	je     0x10025930
10025924:	mov    edi,DWORD PTR [esp+0x28]
10025928:	call   0x10009e94
1002592d:	mov    edi,DWORD PTR [ebp+0x8]
10025930:	call   0x1002fb70
10025935:	mov    ebx,DWORD PTR [esp+0x1c]
10025939:	mov    DWORD PTR [esi+0x10],eax
1002593c:	mov    DWORD PTR [esi+0x14],edx
1002593f:	cmp    BYTE PTR [ebx+0x2c],0x0
10025943:	mov    BYTE PTR [esp+0x13],0x1
10025948:	jne    0x10025968
1002594a:	lea    eax,[esp+0x13]
1002594e:	push   eax
1002594f:	push   esi
10025950:	push   DWORD PTR [edi+0x50]
10025953:	push   ebx
10025954:	push   0x10080f7c
10025959:	call   0x100264bf
1002595e:	add    esp,0x14
10025961:	cmp    BYTE PTR [esp+0x13],0x0
10025966:	je     0x1002598b
10025968:	push   ecx
10025969:	mov    eax,esp
1002596b:	mov    DWORD PTR [eax],esi
1002596d:	mov    DWORD PTR [esp+0x28],esp
10025971:	and    DWORD PTR [esp+0x28],0x0
10025976:	lea    eax,[esp+0x3c]
1002597a:	push   eax
1002597b:	lea    eax,[esp+0x28]
1002597f:	push   eax
10025980:	mov    ecx,ebx
10025982:	mov    edx,edi
10025984:	call   0x10025593
10025989:	jmp    0x1002599b
1002598b:	push   esi
1002598c:	push   ebx
1002598d:	push   edi
1002598e:	lea    edx,[esp+0x44]
10025992:	lea    ecx,[esp+0x2c]
10025996:	call   0x100256ba
1002599b:	mov    DWORD PTR [esp+0x14],eax
1002599f:	jmp    0x100259dd
100259a1:	mov    esi,edi
100259a3:	call   0x10025ba8
100259a8:	lea    eax,[esp+0x2c]
100259ac:	push   eax
100259ad:	lea    ebx,[esp+0x3c]
100259b1:	call   0x1000de72
100259b6:	mov    BYTE PTR [esp+0x60],0x5
100259bb:	mov    ecx,DWORD PTR [eax]
100259bd:	and    DWORD PTR [eax],0x0
100259c0:	call   0x10025c4a
100259c5:	mov    BYTE PTR [esp+0x60],0x3
100259ca:	cmp    DWORD PTR [esp+0x2c],0x0
100259cf:	je     0x100259dd
100259d1:	mov    edi,DWORD PTR [esp+0x2c]
100259d5:	call   0x10009e94
100259da:	mov    edi,DWORD PTR [ebp+0x8]
100259dd:	mov    ecx,edi
100259df:	call   0x10025bd9
100259e4:	cmp    DWORD PTR [esp+0x14],0x1
100259e9:	je     0x10025a1b
100259eb:	lea    eax,[esp+0x24]
100259ef:	mov    BYTE PTR [esp+0x60],0x1
100259f4:	call   0x10009e51
100259f9:	xor    ebx,ebx
100259fb:	mov    eax,DWORD PTR [edi+0x50]
100259fe:	push   ebx
100259ff:	push   DWORD PTR [eax+0x30]
10025a02:	call   DWORD PTR ds:0x10066084
10025a08:	test   eax,eax
10025a0a:	jne    0x10025821
10025a10:	jmp    0x10025a3e
10025a12:	mov    esi,edi
10025a14:	call   0x10025ff8
10025a19:	jmp    0x10025a3e
10025a1b:	push   0x10
10025a1d:	call   0x10037b70
10025a22:	pop    ecx
10025a23:	lea    ecx,[esp+0x38]
10025a27:	mov    edx,edi
10025a29:	call   0x10025509
10025a2e:	lea    eax,[esp+0x24]
10025a32:	mov    BYTE PTR [esp+0x60],0x1
10025a37:	call   0x10009e51
10025a3c:	xor    ebx,ebx
10025a3e:	lea    eax,[esp+0x38]
10025a42:	mov    BYTE PTR [esp+0x60],bl
10025a46:	call   0x1000dcca
10025a4b:	mov    ecx,DWORD PTR [esp+0x58]
10025a4f:	mov    DWORD PTR fs:0x0,ecx
10025a56:	pop    ecx
10025a57:	pop    edi
10025a58:	pop    esi
10025a59:	pop    ebx
10025a5a:	mov    esp,ebp
10025a5c:	pop    ebp
10025a5d:	ret    0x4
10025a60:	push   0x8
10025a62:	mov    eax,0x1006522b
10025a67:	call   0x10059ca8
10025a6c:	lea    eax,[ebp+0xb]
10025a6f:	push   eax
10025a70:	call   0x10037b40
10025a75:	and    DWORD PTR [ebp-0x4],0x0
10025a79:	mov    eax,DWORD PTR [ebp+0x8]
10025a7c:	mov    DWORD PTR [ebp-0x14],eax
10025a7f:	mov    BYTE PTR [ebp-0x4],0x2
10025a83:	push   DWORD PTR [eax+0x1c]
10025a86:	call   0x100257ab
10025a8b:	mov    eax,DWORD PTR [ebp-0x14]
10025a8e:	push   DWORD PTR [eax+0x30]
10025a91:	call   DWORD PTR ds:0x10066110
10025a97:	lea    ecx,[ebp-0x14]
10025a9a:	call   0x10015fdf
10025a9f:	call   0x10037b60
10025aa4:	xor    eax,eax
10025aa6:	call   0x10059d4d
10025aab:	ret    0x4
10025aae:	push   0x4
10025ab0:	call   0x10037b70
10025ab5:	pop    ecx
10025ab6:	mov    eax,0x10025a8b
10025abb:	ret    
10025abc:	push   ebp
10025abd:	mov    ebp,esp
10025abf:	push   ecx
10025ac0:	push   ebx
10025ac1:	push   esi
10025ac2:	mov    esi,eax
10025ac4:	mov    eax,DWORD PTR [ebp+0x8]
10025ac7:	xor    ebx,ebx
10025ac9:	push   edi
10025aca:	mov    DWORD PTR [esi],ebx
10025acc:	call   0x10025b7a
10025ad1:	mov    edi,eax
10025ad3:	cmp    edi,ebx
10025ad5:	je     0x10025b72
10025adb:	mov    eax,DWORD PTR [edi+0x18]
10025ade:	sub    eax,DWORD PTR [edi+0x20]
10025ae1:	cmp    eax,DWORD PTR [ebp+0x10]
10025ae4:	jbe    0x10025ae9
10025ae6:	mov    eax,DWORD PTR [ebp+0x10]
10025ae9:	push   eax
10025aea:	mov    DWORD PTR [esi],eax
10025aec:	mov    eax,DWORD PTR [edi+0x14]
10025aef:	add    eax,DWORD PTR [edi+0x20]
10025af2:	push   eax
10025af3:	push   DWORD PTR [ebp+0xc]
10025af6:	call   0x10045420
10025afb:	add    esp,0xc
10025afe:	cmp    BYTE PTR [ebp+0x14],bl
10025b01:	jne    0x10025b72
10025b03:	mov    eax,DWORD PTR [esi]
10025b05:	add    DWORD PTR [edi+0x20],eax
10025b08:	mov    eax,DWORD PTR [edi+0x20]
10025b0b:	cmp    eax,DWORD PTR [edi+0x18]
10025b0e:	jb     0x10025b72
10025b10:	cmp    DWORD PTR [edi],ebx
10025b12:	je     0x10025b6a
10025b14:	call   0x1002fb70
10025b19:	mov    esi,DWORD PTR [edi]
10025b1b:	sub    eax,DWORD PTR [esi+0x58]
10025b1e:	push   ebx
10025b1f:	sbb    edx,DWORD PTR [esi+0x5c]
10025b22:	push   0x2710
10025b27:	push   edx
10025b28:	push   eax
10025b29:	call   0x1005f580
10025b2e:	push   DWORD PTR [esi+0x64]
10025b31:	mov    ebx,eax
10025b33:	push   DWORD PTR [esi+0x60]
10025b36:	push   ebx
10025b37:	call   DWORD PTR ds:0x10066118
10025b3d:	push   eax
10025b3e:	lea    eax,[esi+0x38]
10025b41:	push   eax
10025b42:	lea    eax,[esi+0x1c]
10025b45:	push   eax
10025b46:	push   esi
10025b47:	push   0x10080f30
10025b4c:	call   0x1001a49f
10025b51:	mov    edi,DWORD PTR [edi]
10025b53:	cmp    DWORD PTR [edi+0x18],0x10
10025b57:	jb     0x10025b5e
10025b59:	mov    edi,DWORD PTR [edi+0x4]
10025b5c:	jmp    0x10025b61
10025b5e:	add    edi,0x4
10025b61:	push   edi
10025b62:	push   ebx
10025b63:	call   0x1000205f
10025b68:	pop    ecx
10025b69:	pop    ecx
10025b6a:	push   DWORD PTR [ebp+0x8]
10025b6d:	call   0x10025f76
10025b72:	pop    edi
10025b73:	pop    esi
10025b74:	pop    ebx
10025b75:	pop    ecx
10025b76:	pop    ebp
10025b77:	ret    0x10
10025b7a:	push   esi
10025b7b:	push   edi
10025b7c:	mov    esi,eax
10025b7e:	lea    edi,[esi+0x38]
10025b81:	push   edi
10025b82:	call   DWORD PTR ds:0x100660f0
10025b88:	cmp    DWORD PTR [esi+0x28],0x0
10025b8c:	jne    0x10025b9c
10025b8e:	xor    esi,esi
10025b90:	push   edi
10025b91:	call   DWORD PTR ds:0x100660ec
10025b97:	pop    edi
10025b98:	mov    eax,esi
10025b9a:	pop    esi
10025b9b:	ret    
10025b9c:	add    esi,0x18
10025b9f:	call   0x10026014
10025ba4:	mov    esi,DWORD PTR [eax]
10025ba6:	jmp    0x10025b90
10025ba8:	push   edi
10025ba9:	lea    edi,[esi+0x38]
10025bac:	push   edi
10025bad:	call   DWORD PTR ds:0x100660f0
10025bb3:	push   edi
10025bb4:	mov    BYTE PTR [esi],0x1
10025bb7:	call   DWORD PTR ds:0x100660ec
10025bbd:	pop    edi
10025bbe:	ret    
10025bbf:	push   ebx
10025bc0:	push   edi
10025bc1:	lea    edi,[esi+0x38]
10025bc4:	push   edi
10025bc5:	call   DWORD PTR ds:0x100660f0
10025bcb:	mov    bl,BYTE PTR [esi]
10025bcd:	push   edi
10025bce:	call   DWORD PTR ds:0x100660ec
10025bd4:	pop    edi
10025bd5:	mov    al,bl
10025bd7:	pop    ebx
10025bd8:	ret    
10025bd9:	push   0x4
10025bdb:	mov    eax,0x10063b2c
10025be0:	call   0x10059c75
10025be5:	mov    esi,ecx
10025be7:	lea    edi,[esi+0x38]
10025bea:	push   edi
10025beb:	mov    DWORD PTR [ebp-0x10],edi
10025bee:	call   DWORD PTR ds:0x100660f0
10025bf4:	xor    ebx,ebx
10025bf6:	mov    DWORD PTR [ebp-0x4],ebx
10025bf9:	cmp    DWORD PTR [esi+0x14],ebx
10025bfc:	jne    0x10025c0d
10025bfe:	push   edi
10025bff:	call   DWORD PTR ds:0x100660ec
10025c05:	mov    al,bl
10025c07:	call   0x10059d4d
10025c0c:	ret    
10025c0d:	add    esi,0x4
10025c10:	call   0x10026014
10025c15:	mov    eax,DWORD PTR [eax]
10025c17:	cmp    eax,ebx
10025c19:	je     0x10025c21
10025c1b:	push   eax
10025c1c:	call   0x10009ece
10025c21:	mov    eax,DWORD PTR [esi+0x10]
10025c24:	cmp    eax,ebx
10025c26:	je     0x10025c46
10025c28:	inc    DWORD PTR [esi+0xc]
10025c2b:	mov    edx,DWORD PTR [esi+0x8]
10025c2e:	mov    ecx,DWORD PTR [esi+0xc]
10025c31:	shl    edx,0x2
10025c34:	cmp    edx,ecx
10025c36:	ja     0x10025c3b
10025c38:	mov    DWORD PTR [esi+0xc],ebx
10025c3b:	dec    eax
10025c3c:	cmp    eax,ebx
10025c3e:	mov    DWORD PTR [esi+0x10],eax
10025c41:	jne    0x10025c46
10025c43:	mov    DWORD PTR [esi+0xc],ebx
10025c46:	mov    bl,0x1
10025c48:	jmp    0x10025bfe
10025c4a:	push   0xc
10025c4c:	mov    eax,0x1006028b
10025c51:	call   0x10059c75
10025c56:	mov    edi,ecx
10025c58:	and    DWORD PTR [ebp-0x4],0x0
10025c5c:	cmp    DWORD PTR [edi+0x18],0x0
10025c60:	jne    0x10025c69
10025c62:	call   0x10009e94
10025c67:	jmp    0x10025ca0
10025c69:	lea    ebx,[esi+0x38]
10025c6c:	push   ebx
10025c6d:	mov    DWORD PTR [ebp-0x14],ebx
10025c70:	call   DWORD PTR ds:0x100660f0
10025c76:	lea    eax,[ebp-0x10]
10025c79:	mov    BYTE PTR [ebp-0x4],0x1
10025c7d:	and    DWORD PTR [ebp-0x18],0x0
10025c81:	push   eax
10025c82:	lea    eax,[esi+0x18]
10025c85:	mov    DWORD PTR [ebp-0x10],edi
10025c88:	call   0x100260b1
10025c8d:	mov    eax,DWORD PTR [esi+0x50]
10025c90:	push   DWORD PTR [eax+0x28]
10025c93:	call   DWORD PTR ds:0x10066110
10025c99:	push   ebx
10025c9a:	call   DWORD PTR ds:0x100660ec
10025ca0:	call   0x10059d4d
10025ca5:	ret    
10025ca6:	push   0xa8
10025cab:	mov    eax,0x10062a27
10025cb0:	call   0x10059c75
10025cb5:	mov    edi,ecx
10025cb7:	mov    eax,DWORD PTR [ebp+0x8]
10025cba:	add    eax,0x38
10025cbd:	xor    esi,esi
10025cbf:	mov    DWORD PTR [ebp-0x10],esi
10025cc2:	push   eax
10025cc3:	mov    BYTE PTR [ebp-0x11],0x0
10025cc7:	mov    DWORD PTR [ebp-0x20],eax
10025cca:	mov    DWORD PTR [ebp-0x24],eax
10025ccd:	call   DWORD PTR ds:0x100660f0
10025cd3:	mov    eax,DWORD PTR [ebp+0x8]
10025cd6:	mov    DWORD PTR [ebp-0x4],esi
10025cd9:	cmp    DWORD PTR [eax+0x28],esi
10025cdc:	jne    0x10025ce7
10025cde:	mov    BYTE PTR [ebp-0x11],0x1
10025ce2:	jmp    0x10025e27
10025ce7:	push   0x68
10025ce9:	call   0x100436de
10025cee:	pop    ecx
10025cef:	mov    DWORD PTR [ebp-0x1c],eax
10025cf2:	cmp    eax,esi
10025cf4:	mov    BYTE PTR [ebp-0x4],0x1
10025cf8:	je     0x10025da3
10025cfe:	push   0x1007183c
10025d03:	push   0x7
10025d05:	push   0x1006d6b8
10025d0a:	call   0x100042e3
10025d0f:	add    esp,0xc
10025d12:	push   eax
10025d13:	lea    ecx,[ebp-0x44]
10025d16:	call   0x100011d1
10025d1b:	mov    BYTE PTR [ebp-0x4],0x2
10025d1f:	mov    eax,DWORD PTR [edi+0x4]
10025d22:	lea    ecx,[ebp-0x7c]
10025d25:	push   ecx
10025d26:	mov    DWORD PTR [ebp-0x10],0x1
10025d2d:	call   0x1000795e
10025d32:	mov    DWORD PTR [ebp-0x18],eax
10025d35:	push   0x3
10025d37:	pop    eax
10025d38:	mov    DWORD PTR [ebp-0x4],eax
10025d3b:	mov    DWORD PTR [ebp-0x10],eax
10025d3e:	push   esi
10025d3f:	lea    eax,[ebp-0x44]
10025d42:	push   eax
10025d43:	lea    eax,[ebp-0x60]
10025d46:	push   eax
10025d47:	lea    eax,[ebx+0x18]
10025d4a:	call   0x100084c3
10025d4f:	mov    esi,eax
10025d51:	mov    DWORD PTR [ebp-0x4],0x4
10025d58:	push   ebx
10025d59:	lea    ecx,[ebp-0x98]
10025d5f:	mov    DWORD PTR [ebp-0x10],0x7
10025d66:	call   0x10008b3e
10025d6b:	mov    edx,eax
10025d6d:	mov    DWORD PTR [ebp-0x4],0x5
10025d74:	mov    ecx,edi
10025d76:	mov    DWORD PTR [ebp-0x10],0xf
10025d7d:	call   0x10009031
10025d82:	push   eax
10025d83:	mov    ecx,ebx
10025d85:	call   0x1000872c
10025d8a:	push   eax
10025d8b:	push   DWORD PTR [edi+0x14]
10025d8e:	push   DWORD PTR [edi+0x10]
10025d91:	push   DWORD PTR [ebp-0x18]
10025d94:	push   esi
10025d95:	push   edx
10025d96:	push   DWORD PTR [ebp-0x1c]
10025d99:	call   0x10024c04
10025d9e:	mov    DWORD PTR [ebp-0x18],eax
10025da1:	jmp    0x10025da6
10025da3:	mov    DWORD PTR [ebp-0x18],esi
10025da6:	mov    esi,DWORD PTR [ebp+0x8]
10025da9:	add    esi,0x18
10025dac:	call   0x10026014
10025db1:	mov    eax,DWORD PTR [eax]
10025db3:	mov    esi,DWORD PTR [eax]
10025db5:	cmp    DWORD PTR [ebp-0x18],esi
10025db8:	mov    DWORD PTR [ebp+0x8],eax
10025dbb:	je     0x10025dc9
10025dbd:	test   esi,esi
10025dbf:	je     0x10025dc9
10025dc1:	call   0x10009e67
10025dc6:	mov    eax,DWORD PTR [ebp+0x8]
10025dc9:	test   BYTE PTR [ebp-0x10],0x8
10025dcd:	mov    ecx,DWORD PTR [ebp-0x18]
10025dd0:	mov    DWORD PTR [eax],ecx
10025dd2:	je     0x10025de7
10025dd4:	and    DWORD PTR [ebp-0x10],0xfffffff7
10025dd8:	push   0x0
10025dda:	push   0x1
10025ddc:	lea    ecx,[ebp-0x98]
10025de2:	call   0x100012f4
10025de7:	test   BYTE PTR [ebp-0x10],0x4
10025deb:	je     0x10025dfd
10025ded:	and    DWORD PTR [ebp-0x10],0xfffffffb
10025df1:	push   0x0
10025df3:	push   0x1
10025df5:	lea    ecx,[ebp-0x60]
10025df8:	call   0x100012f4
10025dfd:	test   BYTE PTR [ebp-0x10],0x2
10025e01:	je     0x10025e13
10025e03:	and    DWORD PTR [ebp-0x10],0xfffffffd
10025e07:	push   0x0
10025e09:	push   0x1
10025e0b:	lea    ecx,[ebp-0x7c]
10025e0e:	call   0x100012f4
10025e13:	test   BYTE PTR [ebp-0x10],0x1
10025e17:	je     0x10025e25
10025e19:	push   0x0
10025e1b:	push   0x1
10025e1d:	lea    ecx,[ebp-0x44]
10025e20:	call   0x100012f4
10025e25:	xor    esi,esi
10025e27:	push   DWORD PTR [ebp-0x20]
10025e2a:	or     DWORD PTR [ebp-0x4],0xffffffff
10025e2e:	call   DWORD PTR ds:0x100660ec
10025e34:	cmp    BYTE PTR [ebp-0x11],0x0
10025e38:	je     0x10025f6e
10025e3e:	mov    eax,DWORD PTR [edi+0x10]
10025e41:	mov    DWORD PTR [ebp-0x28],eax
10025e44:	mov    eax,DWORD PTR [edi+0x14]
10025e47:	mov    DWORD PTR [ebp-0x24],eax
10025e4a:	call   0x1002fb70
10025e4f:	sub    eax,DWORD PTR [ebp-0x28]
10025e52:	push   esi
10025e53:	sbb    edx,DWORD PTR [ebp-0x24]
10025e56:	push   0x2710
10025e5b:	push   edx
10025e5c:	push   eax
10025e5d:	call   0x1005f580
10025e62:	push   0x55a33122
10025e67:	push   0x1007186c
10025e6c:	mov    DWORD PTR [ebp+0x8],eax
10025e6f:	call   0x100042d1
10025e74:	push   0x759f3358
10025e79:	push   eax
10025e7a:	call   0x100042d1
10025e7f:	push   eax
10025e80:	push   0x7
10025e82:	push   0x1006d6b8
10025e87:	call   0x100042e3
10025e8c:	add    esp,0x1c
10025e8f:	push   eax
10025e90:	lea    ecx,[ebp-0x44]
10025e93:	call   0x100011d1
10025e98:	lea    ecx,[ebp-0x98]
10025e9e:	mov    DWORD PTR [ebp-0x4],0xa
10025ea5:	mov    eax,DWORD PTR [edi+0x4]
10025ea8:	push   ecx
10025ea9:	call   0x1000795e
10025eae:	mov    DWORD PTR [ebp-0x20],eax
10025eb1:	push   esi
10025eb2:	lea    eax,[ebp-0x44]
10025eb5:	push   eax
10025eb6:	lea    eax,[ebp-0x60]
10025eb9:	push   eax
10025eba:	lea    eax,[ebx+0x18]
10025ebd:	mov    BYTE PTR [ebp-0x4],0xb
10025ec1:	call   0x100084c3
10025ec6:	mov    DWORD PTR [ebp-0x1c],eax
10025ec9:	push   ebx
10025eca:	lea    ecx,[ebp-0x7c]
10025ecd:	mov    BYTE PTR [ebp-0x4],0xc
10025ed1:	call   0x10008b3e
10025ed6:	mov    DWORD PTR [ebp-0x18],eax
10025ed9:	mov    ecx,edi
10025edb:	mov    BYTE PTR [ebp-0x4],0xd
10025edf:	call   0x10009031
10025ee4:	push   eax
10025ee5:	mov    ecx,ebx
10025ee7:	call   0x1000872c
10025eec:	push   eax
10025eed:	push   DWORD PTR [ebp+0x8]
10025ef0:	call   DWORD PTR ds:0x10066118
10025ef6:	push   eax
10025ef7:	push   DWORD PTR [ebp-0x20]
10025efa:	push   DWORD PTR [ebp-0x1c]
10025efd:	push   DWORD PTR [ebp-0x18]
10025f00:	push   0x10080f30
10025f05:	call   0x1001a49f
10025f0a:	xor    edi,edi
10025f0c:	push   esi
10025f0d:	inc    edi
10025f0e:	push   edi
10025f0f:	lea    ecx,[ebp-0x7c]
10025f12:	call   0x100012f4
10025f17:	push   esi
10025f18:	push   edi
10025f19:	lea    ecx,[ebp-0x60]
10025f1c:	call   0x100012f4
10025f21:	push   esi
10025f22:	push   edi
10025f23:	lea    ecx,[ebp-0x98]
10025f29:	call   0x100012f4
10025f2e:	or     DWORD PTR [ebp-0x4],0xffffffff
10025f32:	push   esi
10025f33:	push   edi
10025f34:	lea    ecx,[ebp-0x44]
10025f37:	call   0x100012f4
10025f3c:	push   ebx
10025f3d:	lea    ecx,[ebp-0xb4]
10025f43:	call   0x10008b3e
10025f48:	cmp    DWORD PTR [eax+0x18],0x10
10025f4c:	jb     0x10025f53
10025f4e:	mov    eax,DWORD PTR [eax+0x4]
10025f51:	jmp    0x10025f56
10025f53:	add    eax,0x4
10025f56:	push   eax
10025f57:	push   DWORD PTR [ebp+0x8]
10025f5a:	call   0x1000205f
10025f5f:	pop    ecx
10025f60:	pop    ecx
10025f61:	push   esi
10025f62:	push   edi
10025f63:	lea    ecx,[ebp-0xb4]
10025f69:	call   0x100012f4
10025f6e:	call   0x10059d4d
10025f73:	ret    0x4
10025f76:	push   ebx
10025f77:	push   ebp
10025f78:	mov    ebp,DWORD PTR [esp+0xc]
10025f7c:	lea    eax,[ebp+0x38]
10025f7f:	push   eax
10025f80:	mov    DWORD PTR [esp+0x10],eax
10025f84:	call   DWORD PTR ds:0x100660f0
10025f8a:	xor    ebx,ebx
10025f8c:	cmp    DWORD PTR [ebp+0x28],ebx
10025f8f:	jne    0x10025fa2
10025f91:	push   DWORD PTR [esp+0xc]
10025f95:	call   DWORD PTR ds:0x100660ec
10025f9b:	pop    ebp
10025f9c:	mov    al,bl
10025f9e:	pop    ebx
10025f9f:	ret    0x4
10025fa2:	push   esi
10025fa3:	push   edi
10025fa4:	lea    esi,[ebp+0x18]
10025fa7:	call   0x10026014
10025fac:	mov    edi,DWORD PTR [eax]
10025fae:	cmp    edi,ebx
10025fb0:	je     0x10025fb7
10025fb2:	call   0x10009e94
10025fb7:	mov    eax,DWORD PTR [esi+0x10]
10025fba:	cmp    eax,ebx
10025fbc:	je     0x10025fdc
10025fbe:	inc    DWORD PTR [esi+0xc]
10025fc1:	mov    edx,DWORD PTR [esi+0x8]
10025fc4:	mov    ecx,DWORD PTR [esi+0xc]
10025fc7:	shl    edx,0x2
10025fca:	cmp    edx,ecx
10025fcc:	ja     0x10025fd1
10025fce:	mov    DWORD PTR [esi+0xc],ebx
10025fd1:	dec    eax
10025fd2:	cmp    eax,ebx
10025fd4:	mov    DWORD PTR [esi+0x10],eax
10025fd7:	jne    0x10025fdc
10025fd9:	mov    DWORD PTR [esi+0xc],ebx
10025fdc:	cmp    DWORD PTR [ebp+0x28],ebx
10025fdf:	pop    edi
10025fe0:	pop    esi
10025fe1:	jne    0x10025ff4
10025fe3:	cmp    BYTE PTR [ebp+0x1],bl
10025fe6:	je     0x10025ff4
10025fe8:	mov    eax,DWORD PTR [ebp+0x50]
10025feb:	push   DWORD PTR [eax+0x30]
10025fee:	call   DWORD PTR ds:0x10066110
10025ff4:	mov    bl,0x1
10025ff6:	jmp    0x10025f91
10025ff8:	mov    eax,esi
10025ffa:	mov    BYTE PTR [esi+0x1],0x1
10025ffe:	call   0x10025b7a
10026003:	test   eax,eax
10026005:	jne    0x10026013
10026007:	mov    eax,DWORD PTR [esi+0x50]
1002600a:	push   DWORD PTR [eax+0x30]
1002600d:	call   DWORD PTR ds:0x10066110
10026013:	ret    
10026014:	mov    eax,DWORD PTR [esi+0x10]
10026017:	push   ebx
10026018:	push   ebp
10026019:	mov    ebp,DWORD PTR [esi+0xc]
1002601c:	add    eax,ebp
1002601e:	cmp    ebp,eax
10026020:	push   edi
10026021:	jbe    0x10026028
10026023:	call   0x100435f0
10026028:	mov    eax,DWORD PTR [esi+0x10]
1002602b:	add    eax,DWORD PTR [esi+0xc]
1002602e:	mov    edi,ebp
10026030:	mov    ebx,ebp
10026032:	shr    edi,0x2
10026035:	and    ebx,0x3
10026038:	cmp    ebp,eax
1002603a:	jb     0x10026041
1002603c:	call   0x100435f0
10026041:	mov    eax,DWORD PTR [esi+0x8]
10026044:	cmp    eax,edi
10026046:	ja     0x1002604a
10026048:	sub    edi,eax
1002604a:	mov    eax,DWORD PTR [esi+0x4]
1002604d:	mov    eax,DWORD PTR [eax+edi*4]
10026050:	pop    edi
10026051:	pop    ebp
10026052:	lea    eax,[eax+ebx*4]
10026055:	pop    ebx
10026056:	ret    
10026057:	push   ebx
10026058:	xor    ebx,ebx
1002605a:	jmp    0x1002606e
1002605c:	mov    eax,DWORD PTR [esi+0x10]
1002605f:	cmp    eax,ebx
10026061:	je     0x1002606e
10026063:	dec    eax
10026064:	cmp    eax,ebx
10026066:	mov    DWORD PTR [esi+0x10],eax
10026069:	jne    0x1002606e
1002606b:	mov    DWORD PTR [esi+0xc],ebx
1002606e:	cmp    DWORD PTR [esi+0x10],ebx
10026071:	jne    0x1002605c
10026073:	push   edi
10026074:	mov    edi,DWORD PTR [esi+0x8]
10026077:	jmp    0x10026089
10026079:	dec    edi
1002607a:	lea    eax,[eax+edi*4]
1002607d:	cmp    DWORD PTR [eax],ebx
1002607f:	je     0x10026089
10026081:	push   DWORD PTR [eax]
10026083:	call   0x100430d2
10026088:	pop    ecx
10026089:	cmp    edi,ebx
1002608b:	mov    eax,DWORD PTR [esi+0x4]
1002608e:	ja     0x10026079
10026090:	cmp    eax,ebx
10026092:	pop    edi
10026093:	je     0x1002609c
10026095:	push   eax
10026096:	call   0x100430d2
1002609b:	pop    ecx
1002609c:	mov    DWORD PTR [esi+0x8],ebx
1002609f:	mov    DWORD PTR [esi+0x4],ebx
100260a2:	pop    ebx
100260a3:	ret    
100260a4:	mov    ecx,DWORD PTR [eax]
100260a6:	test   ecx,ecx
100260a8:	je     0x100260b0
100260aa:	mov    eax,DWORD PTR [ecx]
100260ac:	push   0x1
100260ae:	call   DWORD PTR [eax]
100260b0:	ret    
100260b1:	push   esi
100260b2:	mov    esi,eax
100260b4:	mov    eax,DWORD PTR [esi+0x10]
100260b7:	mov    ecx,DWORD PTR [esi+0xc]
100260ba:	add    ecx,eax
100260bc:	test   cl,0x3
100260bf:	push   edi
100260c0:	jne    0x100260d2
100260c2:	add    eax,0x4
100260c5:	shr    eax,0x2
100260c8:	cmp    DWORD PTR [esi+0x8],eax
100260cb:	ja     0x100260d2
100260cd:	call   0x10026124
100260d2:	mov    edi,DWORD PTR [esi+0xc]
100260d5:	add    edi,DWORD PTR [esi+0x10]
100260d8:	mov    ecx,DWORD PTR [esi+0x8]
100260db:	mov    eax,edi
100260dd:	shr    eax,0x2
100260e0:	cmp    ecx,eax
100260e2:	ja     0x100260e6
100260e4:	sub    eax,ecx
100260e6:	push   ebx
100260e7:	mov    ebx,eax
100260e9:	mov    eax,DWORD PTR [esi+0x4]
100260ec:	shl    ebx,0x2
100260ef:	cmp    DWORD PTR [ebx+eax*1],0x0
100260f3:	jne    0x10026103
100260f5:	push   0x10
100260f7:	call   0x100436de
100260fc:	pop    ecx
100260fd:	mov    ecx,DWORD PTR [esi+0x4]
10026100:	mov    DWORD PTR [ebx+ecx*1],eax
10026103:	mov    eax,DWORD PTR [esi+0x4]
10026106:	mov    eax,DWORD PTR [eax+ebx*1]
10026109:	and    edi,0x3
1002610c:	lea    edi,[eax+edi*4]
1002610f:	test   edi,edi
10026111:	pop    ebx
10026112:	je     0x1002611c
10026114:	mov    eax,DWORD PTR [esp+0xc]
10026118:	mov    eax,DWORD PTR [eax]
1002611a:	mov    DWORD PTR [edi],eax
1002611c:	inc    DWORD PTR [esi+0x10]
1002611f:	pop    edi
10026120:	pop    esi
10026121:	ret    0x4
10026124:	push   ebp
10026125:	mov    ebp,esp
10026127:	sub    esp,0xc
1002612a:	mov    eax,DWORD PTR [esi+0x8]
1002612d:	push   ebx
1002612e:	push   edi
1002612f:	mov    edx,0xfffffff
10026134:	xor    edi,edi
10026136:	mov    ecx,edx
10026138:	inc    edi
10026139:	sub    ecx,eax
1002613b:	cmp    ecx,edi
1002613d:	mov    DWORD PTR [ebp-0x4],edi
10026140:	jae    0x10026147
10026142:	jmp    0x1002620b
10026147:	mov    ecx,eax
10026149:	shr    ecx,1
1002614b:	cmp    ecx,0x8
1002614e:	jae    0x10026153
10026150:	push   0x8
10026152:	pop    ecx
10026153:	cmp    ecx,edi
10026155:	jbe    0x10026160
10026157:	sub    edx,ecx
10026159:	cmp    eax,edx
1002615b:	ja     0x10026160
1002615d:	mov    DWORD PTR [ebp-0x4],ecx
10026160:	mov    ebx,DWORD PTR [esi+0xc]
10026163:	mov    ecx,DWORD PTR [ebp-0x4]
10026166:	add    ecx,eax
10026168:	shr    ebx,0x2
1002616b:	call   0x1002624a
10026170:	mov    edx,DWORD PTR [esi+0x4]
10026173:	mov    edi,ebx
10026175:	shl    edi,0x2
10026178:	mov    DWORD PTR [ebp-0x8],eax
1002617b:	lea    ecx,[edi+eax*1]
1002617e:	mov    eax,DWORD PTR [esi+0x8]
10026181:	lea    eax,[edx+eax*4]
10026184:	add    edx,edi
10026186:	push   edx
10026187:	call   0x10026296
1002618c:	mov    edx,DWORD PTR [esi+0x4]
1002618f:	pop    ecx
10026190:	mov    ecx,eax
10026192:	mov    eax,DWORD PTR [ebp-0x4]
10026195:	cmp    ebx,eax
10026197:	push   edx
10026198:	ja     0x100261c0
1002619a:	sub    eax,ebx
1002619c:	mov    DWORD PTR [ebp-0xc],eax
1002619f:	lea    eax,[edx+edi*1]
100261a2:	call   0x10026296
100261a7:	pop    ecx
100261a8:	mov    ecx,DWORD PTR [ebp-0xc]
100261ab:	test   ecx,ecx
100261ad:	mov    edi,eax
100261af:	jbe    0x100261b5
100261b1:	xor    eax,eax
100261b3:	rep stos DWORD PTR es:[edi],eax
100261b5:	test   ebx,ebx
100261b7:	jbe    0x100261ed
100261b9:	mov    edi,DWORD PTR [ebp-0x8]
100261bc:	mov    ecx,ebx
100261be:	jmp    0x100261e9
100261c0:	mov    ebx,eax
100261c2:	shl    ebx,0x2
100261c5:	lea    eax,[ebx+edx*1]
100261c8:	call   0x10026296
100261cd:	mov    ecx,DWORD PTR [esi+0x4]
100261d0:	add    ebx,ecx
100261d2:	lea    eax,[ecx+edi*1]
100261d5:	mov    ecx,DWORD PTR [ebp-0x8]
100261d8:	push   ebx
100261d9:	call   0x10026296
100261de:	pop    ecx
100261df:	pop    ecx
100261e0:	mov    ecx,DWORD PTR [ebp-0x4]
100261e3:	test   ecx,ecx
100261e5:	mov    edi,eax
100261e7:	jbe    0x100261ed
100261e9:	xor    eax,eax
100261eb:	rep stos DWORD PTR es:[edi],eax
100261ed:	mov    eax,DWORD PTR [esi+0x4]
100261f0:	test   eax,eax
100261f2:	pop    edi
100261f3:	pop    ebx
100261f4:	je     0x100261fd
100261f6:	push   eax
100261f7:	call   0x100430d2
100261fc:	pop    ecx
100261fd:	mov    eax,DWORD PTR [ebp-0x8]
10026200:	mov    DWORD PTR [esi+0x4],eax
10026203:	mov    eax,DWORD PTR [ebp-0x4]
10026206:	add    DWORD PTR [esi+0x8],eax
10026209:	leave  
1002620a:	ret    
1002620b:	push   0x44
1002620d:	mov    eax,0x10060338
10026212:	call   0x10059c75
10026217:	push   0x10071890
1002621c:	lea    ecx,[ebp-0x28]
1002621f:	call   0x100011d1
10026224:	and    DWORD PTR [ebp-0x4],0x0
10026228:	lea    eax,[ebp-0x28]
1002622b:	push   eax
1002622c:	lea    ecx,[ebp-0x50]
1002622f:	call   0x1000106e
10026234:	push   0x10074ec0
10026239:	lea    eax,[ebp-0x50]
1002623c:	push   eax
1002623d:	mov    DWORD PTR [ebp-0x50],0x1006b96c
10026244:	call   0x10047c54
10026249:	int3   
1002624a:	push   ebp
1002624b:	mov    ebp,esp
1002624d:	sub    esp,0x10
10026250:	test   ecx,ecx
10026252:	ja     0x10026264
10026254:	xor    ecx,ecx
10026256:	mov    eax,ecx
10026258:	shl    eax,0x2
1002625b:	push   eax
1002625c:	call   0x100436de
10026261:	pop    ecx
10026262:	leave  
10026263:	ret    
10026264:	or     eax,0xffffffff
10026267:	xor    edx,edx
10026269:	div    ecx
1002626b:	cmp    eax,0x4
1002626e:	jae    0x10026256
10026270:	and    DWORD PTR [ebp-0x4],0x0
10026274:	lea    eax,[ebp-0x4]
10026277:	push   eax
10026278:	lea    ecx,[ebp-0x10]
1002627b:	call   0x10043152
10026280:	push   0x10074e18
10026285:	lea    eax,[ebp-0x10]
10026288:	push   eax
10026289:	mov    DWORD PTR [ebp-0x10],0x100665c8
10026290:	call   0x10047c54
10026295:	int3   
10026296:	sub    eax,DWORD PTR [esp+0x4]
1002629a:	push   esi
1002629b:	sar    eax,0x2
1002629e:	lea    eax,[eax*4+0x0]
100262a5:	lea    esi,[eax+ecx*1]
100262a8:	je     0x100262b9
100262aa:	push   eax
100262ab:	push   DWORD PTR [esp+0xc]
100262af:	push   eax
100262b0:	push   ecx
100262b1:	call   0x100430e6
100262b6:	add    esp,0x10
100262b9:	mov    eax,esi
100262bb:	pop    esi
100262bc:	ret    
100262bd:	push   0x34
100262bf:	mov    eax,0x10064544
100262c4:	call   0x10059c75
100262c9:	push   DWORD PTR [ebp+0xc]
100262cc:	mov    BYTE PTR [ebp-0xd],0x0
100262d0:	call   0x100087ce
100262d5:	mov    DWORD PTR [ebp-0x20],eax
100262d8:	push   DWORD PTR [ebp+0xc]
100262db:	xor    esi,esi
100262dd:	mov    DWORD PTR [ebp-0x4],esi
100262e0:	call   0x100087ce
100262e5:	mov    DWORD PTR [ebp-0x14],eax
100262e8:	mov    DWORD PTR [ebp-0x1c],esi
100262eb:	mov    DWORD PTR [ebp-0x18],esi
100262ee:	mov    ecx,DWORD PTR [ebp+0x8]
100262f1:	mov    eax,DWORD PTR [ecx+0x4]
100262f4:	mov    edi,DWORD PTR [eax]
100262f6:	mov    esi,ecx
100262f8:	mov    DWORD PTR [ebp-0x24],edi
100262fb:	mov    DWORD PTR [ebp-0x28],esi
100262fe:	test   esi,esi
10026300:	mov    ebx,DWORD PTR [ecx+0x4]
10026303:	je     0x10026309
10026305:	cmp    esi,ecx
10026307:	je     0x1002630e
10026309:	call   0x100435f0
1002630e:	cmp    edi,ebx
10026310:	je     0x100263b8
10026316:	mov    eax,DWORD PTR [ebp-0x20]
10026319:	and    DWORD PTR [ebp-0x38],0x0
1002631d:	and    DWORD PTR [ebp-0x34],0x0
10026321:	mov    DWORD PTR [ebp-0x40],eax
10026324:	mov    eax,DWORD PTR [ebp-0x14]
10026327:	mov    DWORD PTR [ebp-0x3c],eax
1002632a:	mov    eax,DWORD PTR [ebp+0x10]
1002632d:	mov    DWORD PTR [ebp-0x30],eax
10026330:	mov    BYTE PTR [ebp-0x2c],0x0
10026334:	test   esi,esi
10026336:	mov    BYTE PTR [ebp-0x4],0x4
1002633a:	jne    0x10026341
1002633c:	call   0x100435f0
10026341:	cmp    edi,DWORD PTR [esi+0x4]
10026344:	jne    0x1002634b
10026346:	call   0x100435f0
1002634b:	mov    edi,DWORD PTR [edi+0x8]
1002634e:	mov    eax,DWORD PTR [edi]
10026350:	lea    ecx,[ebp-0x40]
10026353:	push   ecx
10026354:	mov    ecx,edi
10026356:	call   DWORD PTR [eax]
10026358:	test   al,al
1002635a:	je     0x100263ef
10026360:	push   DWORD PTR [ebp-0x14]
10026363:	mov    BYTE PTR [ebp-0xd],0x1
10026367:	push   DWORD PTR [ebp+0xc]
1002636a:	call   0x10008892
1002636f:	mov    eax,DWORD PTR [ebp-0x38]
10026372:	and    DWORD PTR [ebp-0x38],0x0
10026376:	mov    ebx,eax
10026378:	lea    edi,[ebp-0x1c]
1002637b:	call   0x1002692a
10026380:	mov    ebx,DWORD PTR [ebp-0x34]
10026383:	mov    edi,DWORD PTR [ebp-0x18]
10026386:	and    DWORD PTR [ebp-0x34],0x0
1002638a:	cmp    ebx,edi
1002638c:	je     0x10026397
1002638e:	test   edi,edi
10026390:	je     0x10026397
10026392:	call   0x10009e94
10026397:	cmp    BYTE PTR [ebp-0x2c],0x0
1002639b:	mov    DWORD PTR [ebp-0x18],ebx
1002639e:	je     0x10026417
100263a0:	mov    BYTE PTR [ebp-0x4],0x3
100263a4:	mov    edi,DWORD PTR [ebp-0x34]
100263a7:	test   edi,edi
100263a9:	je     0x100263b0
100263ab:	call   0x10009e94
100263b0:	lea    eax,[ebp-0x38]
100263b3:	call   0x10009e51
100263b8:	cmp    BYTE PTR [ebp-0xd],0x0
100263bc:	je     0x10026464
100263c2:	mov    eax,DWORD PTR [ebp-0x1c]
100263c5:	test   eax,eax
100263c7:	je     0x10026445
100263c9:	mov    ecx,DWORD PTR [eax+0x34]
100263cc:	mov    ecx,DWORD PTR [ecx+0x18]
100263cf:	mov    ebx,DWORD PTR [ebp+0x14]
100263d2:	mov    DWORD PTR [eax+0x38],ecx
100263d5:	mov    esi,DWORD PTR [eax+0x34]
100263d8:	and    DWORD PTR [eax+0x34],0x0
100263dc:	mov    edi,DWORD PTR [ebx]
100263de:	cmp    esi,edi
100263e0:	je     0x100263eb
100263e2:	test   edi,edi
100263e4:	je     0x100263eb
100263e6:	call   0x10009e94
100263eb:	mov    DWORD PTR [ebx],esi
100263ed:	jmp    0x10026464
100263ef:	mov    esi,DWORD PTR [ebp+0xc]
100263f2:	mov    edi,DWORD PTR [ebp-0x14]
100263f5:	call   0x100089ef
100263fa:	test   al,al
100263fc:	jne    0x10026417
100263fe:	push   esi
100263ff:	call   0x100087ce
10026404:	mov    esi,eax
10026406:	cmp    esi,edi
10026408:	je     0x10026414
1002640a:	test   edi,edi
1002640c:	je     0x10026414
1002640e:	push   edi
1002640f:	call   0x10009ece
10026414:	mov    DWORD PTR [ebp-0x14],esi
10026417:	mov    BYTE PTR [ebp-0x4],0x3
1002641b:	mov    edi,DWORD PTR [ebp-0x34]
1002641e:	test   edi,edi
10026420:	je     0x10026427
10026422:	call   0x10009e94
10026427:	lea    eax,[ebp-0x38]
1002642a:	call   0x10009e51
1002642f:	lea    esi,[ebp-0x28]
10026432:	call   0x1001995f
10026437:	mov    edi,DWORD PTR [ebp-0x24]
1002643a:	mov    esi,DWORD PTR [ebp-0x28]
1002643d:	mov    ecx,DWORD PTR [ebp+0x8]
10026440:	jmp    0x100262fe
10026445:	mov    ebx,DWORD PTR [ebp-0x18]
10026448:	test   ebx,ebx
1002644a:	je     0x10026470
1002644c:	mov    esi,DWORD PTR [ebp+0x14]
1002644f:	mov    edi,DWORD PTR [esi]
10026451:	and    DWORD PTR [ebp-0x18],0x0
10026455:	cmp    ebx,edi
10026457:	je     0x10026462
10026459:	test   edi,edi
1002645b:	je     0x10026462
1002645d:	call   0x10009e94
10026462:	mov    DWORD PTR [esi],ebx
10026464:	mov    edi,DWORD PTR [ebp-0x18]
10026467:	test   edi,edi
10026469:	je     0x10026470
1002646b:	call   0x10009e94
10026470:	lea    eax,[ebp-0x1c]
10026473:	mov    BYTE PTR [ebp-0x4],0x1
10026477:	call   0x10009e51
1002647c:	mov    BYTE PTR [ebp-0x4],0x0
10026480:	cmp    DWORD PTR [ebp-0x14],0x0
10026484:	je     0x1002648e
10026486:	push   DWORD PTR [ebp-0x14]
10026489:	call   0x10009ece
1002648e:	or     DWORD PTR [ebp-0x4],0xffffffff
10026492:	cmp    DWORD PTR [ebp-0x20],0x0
10026496:	je     0x100264a0
10026498:	push   DWORD PTR [ebp-0x20]
1002649b:	call   0x10009ece
100264a0:	mov    al,BYTE PTR [ebp-0xd]
100264a3:	call   0x10059d4d
100264a8:	ret    
100264a9:	push   edi
100264aa:	mov    edi,DWORD PTR [esi+0xc]
100264ad:	test   edi,edi
100264af:	je     0x100264b6
100264b1:	call   0x10009e94
100264b6:	lea    eax,[esi+0x8]
100264b9:	pop    edi
100264ba:	jmp    0x10009e51
100264bf:	push   0x30
100264c1:	mov    eax,0x10064501
100264c6:	call   0x10059c75
100264cb:	push   DWORD PTR [ebp+0x14]
100264ce:	mov    BYTE PTR [ebp-0xd],0x0
100264d2:	call   0x10009040
100264d7:	mov    DWORD PTR [ebp-0x18],eax
100264da:	push   DWORD PTR [ebp+0x14]
100264dd:	and    DWORD PTR [ebp-0x4],0x0
100264e1:	call   0x10009040
100264e6:	mov    DWORD PTR [ebp-0x14],eax
100264e9:	mov    ebx,DWORD PTR [ebp+0x8]
100264ec:	mov    BYTE PTR [ebp-0x4],0x1
100264f0:	mov    eax,DWORD PTR [ebx+0x4]
100264f3:	mov    esi,DWORD PTR [eax]
100264f5:	mov    edi,ebx
100264f7:	mov    DWORD PTR [ebp-0x1c],esi
100264fa:	mov    DWORD PTR [ebp-0x20],edi
100264fd:	test   edi,edi
100264ff:	mov    eax,DWORD PTR [ebx+0x4]
10026502:	mov    DWORD PTR [ebp-0x24],eax
10026505:	je     0x1002650b
10026507:	cmp    edi,ebx
10026509:	je     0x10026510
1002650b:	call   0x100435f0
10026510:	cmp    esi,DWORD PTR [ebp-0x24]
10026513:	je     0x1002657a
10026515:	test   edi,edi
10026517:	mov    ecx,DWORD PTR [ebp+0xc]
1002651a:	mov    eax,DWORD PTR [ebp+0x18]
1002651d:	mov    al,BYTE PTR [eax]
1002651f:	mov    DWORD PTR [ebp-0x3c],ecx
10026522:	mov    ecx,DWORD PTR [ebp-0x18]
10026525:	mov    DWORD PTR [ebp-0x38],ecx
10026528:	mov    ecx,DWORD PTR [ebp-0x14]
1002652b:	mov    DWORD PTR [ebp-0x34],ecx
1002652e:	mov    ecx,DWORD PTR [ebp+0x10]
10026531:	mov    DWORD PTR [ebp-0x30],ecx
10026534:	mov    BYTE PTR [ebp-0x2c],al
10026537:	mov    BYTE PTR [ebp-0x2b],0x0
1002653b:	jne    0x10026542
1002653d:	call   0x100435f0
10026542:	cmp    esi,DWORD PTR [edi+0x4]
10026545:	jne    0x1002654c
10026547:	call   0x100435f0
1002654c:	mov    esi,DWORD PTR [esi+0x8]
1002654f:	mov    eax,DWORD PTR [esi]
10026551:	lea    ecx,[ebp-0x3c]
10026554:	push   ecx
10026555:	mov    ecx,esi
10026557:	call   DWORD PTR [eax]
10026559:	test   al,al
1002655b:	je     0x1002659b
1002655d:	mov    al,BYTE PTR [ebp-0x2c]
10026560:	mov    ecx,DWORD PTR [ebp+0x18]
10026563:	push   DWORD PTR [ebp-0x14]
10026566:	mov    edi,DWORD PTR [ebp+0x14]
10026569:	mov    BYTE PTR [ebp-0xd],0x1
1002656d:	mov    BYTE PTR [ecx],al
1002656f:	call   0x10009114
10026574:	cmp    BYTE PTR [ebp-0x2b],0x0
10026578:	je     0x100265bd
1002657a:	lea    eax,[ebp-0x14]
1002657d:	mov    BYTE PTR [ebp-0x4],0x0
10026581:	call   0x10009e51
10026586:	or     DWORD PTR [ebp-0x4],0xffffffff
1002658a:	lea    eax,[ebp-0x18]
1002658d:	call   0x10009e51
10026592:	mov    al,BYTE PTR [ebp-0xd]
10026595:	call   0x10059d4d
1002659a:	ret    
1002659b:	mov    esi,DWORD PTR [ebp+0x14]
1002659e:	mov    edi,DWORD PTR [ebp-0x14]
100265a1:	call   0x100092a7
100265a6:	test   al,al
100265a8:	jne    0x100265bd
100265aa:	push   esi
100265ab:	call   0x10009040
100265b0:	mov    ebx,eax
100265b2:	lea    edi,[ebp-0x14]
100265b5:	call   0x1002692a
100265ba:	mov    ebx,DWORD PTR [ebp+0x8]
100265bd:	lea    esi,[ebp-0x20]
100265c0:	call   0x1001995f
100265c5:	mov    esi,DWORD PTR [ebp-0x1c]
100265c8:	mov    edi,DWORD PTR [ebp-0x20]
100265cb:	jmp    0x100264fd
100265d0:	push   0x34
100265d2:	mov    eax,0x100644d6
100265d7:	call   0x10059c75
100265dc:	push   DWORD PTR [ebp+0x14]
100265df:	mov    BYTE PTR [ebp-0x11],0x0
100265e3:	call   0x10009040
100265e8:	mov    DWORD PTR [ebp-0x1c],eax
100265eb:	push   DWORD PTR [ebp+0x14]
100265ee:	and    DWORD PTR [ebp-0x4],0x0
100265f2:	call   0x10009040
100265f7:	mov    DWORD PTR [ebp-0x18],eax
100265fa:	mov    ebx,DWORD PTR [ebp+0x8]
100265fd:	mov    BYTE PTR [ebp-0x4],0x1
10026601:	mov    eax,DWORD PTR [ebx+0x4]
10026604:	mov    esi,DWORD PTR [eax]
10026606:	mov    edi,ebx
10026608:	mov    DWORD PTR [ebp-0x20],esi
1002660b:	mov    DWORD PTR [ebp-0x24],edi
1002660e:	test   edi,edi
10026610:	mov    eax,DWORD PTR [ebx+0x4]
10026613:	mov    DWORD PTR [ebp-0x28],eax
10026616:	je     0x1002661c
10026618:	cmp    edi,ebx
1002661a:	je     0x10026621
1002661c:	call   0x100435f0
10026621:	cmp    esi,DWORD PTR [ebp-0x28]
10026624:	je     0x1002667b
10026626:	test   edi,edi
10026628:	mov    eax,DWORD PTR [ebp+0xc]
1002662b:	mov    DWORD PTR [ebp-0x40],eax
1002662e:	mov    eax,DWORD PTR [ebp-0x1c]
10026631:	mov    DWORD PTR [ebp-0x3c],eax
10026634:	mov    eax,DWORD PTR [ebp-0x18]
10026637:	mov    DWORD PTR [ebp-0x38],eax
1002663a:	mov    eax,DWORD PTR [ebp+0x10]
1002663d:	mov    DWORD PTR [ebp-0x34],eax
10026640:	mov    BYTE PTR [ebp-0x30],0x0
10026644:	jne    0x1002664b
10026646:	call   0x100435f0
1002664b:	cmp    esi,DWORD PTR [edi+0x4]
1002664e:	jne    0x10026655
10026650:	call   0x100435f0
10026655:	mov    esi,DWORD PTR [esi+0x8]
10026658:	mov    eax,DWORD PTR [esi]
1002665a:	lea    ecx,[ebp-0x40]
1002665d:	push   ecx
1002665e:	mov    ecx,esi
10026660:	call   DWORD PTR [eax]
10026662:	test   al,al
10026664:	je     0x1002669c
10026666:	push   DWORD PTR [ebp-0x18]
10026669:	mov    edi,DWORD PTR [ebp+0x14]
1002666c:	mov    BYTE PTR [ebp-0x11],0x1
10026670:	call   0x10009114
10026675:	cmp    BYTE PTR [ebp-0x30],0x0
10026679:	je     0x100266be
1002667b:	lea    eax,[ebp-0x18]
1002667e:	mov    BYTE PTR [ebp-0x4],0x0
10026682:	call   0x10009e51
10026687:	or     DWORD PTR [ebp-0x4],0xffffffff
1002668b:	lea    eax,[ebp-0x1c]
1002668e:	call   0x10009e51
10026693:	mov    al,BYTE PTR [ebp-0x11]
10026696:	call   0x10059d4d
1002669b:	ret    
1002669c:	mov    esi,DWORD PTR [ebp+0x14]
1002669f:	mov    edi,DWORD PTR [ebp-0x18]
100266a2:	call   0x100092a7
100266a7:	test   al,al
100266a9:	jne    0x100266be
100266ab:	push   esi
100266ac:	call   0x10009040
100266b1:	mov    ebx,eax
100266b3:	lea    edi,[ebp-0x18]
100266b6:	call   0x1002692a
100266bb:	mov    ebx,DWORD PTR [ebp+0x8]
100266be:	lea    esi,[ebp-0x24]
100266c1:	call   0x1001995f
100266c6:	mov    esi,DWORD PTR [ebp-0x20]
100266c9:	mov    edi,DWORD PTR [ebp-0x24]
100266cc:	jmp    0x1002660e
100266d1:	push   ebp
100266d2:	mov    ebp,esp
100266d4:	sub    esp,0x20
100266d7:	mov    eax,DWORD PTR [ebp+0x8]
100266da:	mov    DWORD PTR [ebp-0x20],eax
100266dd:	mov    eax,DWORD PTR [ebp+0xc]
100266e0:	push   ebx
100266e1:	mov    DWORD PTR [ebp-0x1c],eax
100266e4:	mov    eax,DWORD PTR [edi+0x4]
100266e7:	push   esi
100266e8:	mov    BYTE PTR [ebp-0x18],0x0
100266ec:	mov    esi,DWORD PTR [eax]
100266ee:	mov    ebx,edi
100266f0:	mov    BYTE PTR [ebp-0x1],0x0
100266f4:	mov    DWORD PTR [ebp-0x8],esi
100266f7:	mov    DWORD PTR [ebp-0xc],ebx
100266fa:	test   ebx,ebx
100266fc:	mov    eax,DWORD PTR [edi+0x4]
100266ff:	mov    DWORD PTR [ebp-0x10],eax
10026702:	je     0x10026708
10026704:	cmp    ebx,edi
10026706:	je     0x1002670d
10026708:	call   0x100435f0
1002670d:	cmp    esi,DWORD PTR [ebp-0x10]
10026710:	je     0x1002675e
10026712:	test   ebx,ebx
10026714:	jne    0x1002671b
10026716:	call   0x100435f0
1002671b:	cmp    esi,DWORD PTR [ebx+0x4]
1002671e:	jne    0x10026725
10026720:	call   0x100435f0
10026725:	mov    ecx,DWORD PTR [esi+0x8]
10026728:	mov    eax,DWORD PTR [ecx]
1002672a:	lea    edx,[ebp-0x20]
1002672d:	push   edx
1002672e:	call   DWORD PTR [eax]
10026730:	test   al,al
10026732:	je     0x1002674e
10026734:	cmp    BYTE PTR [ebp-0x18],0x0
10026738:	mov    BYTE PTR [ebp-0x1],0x1
1002673c:	jne    0x1002675e
1002673e:	mov    eax,DWORD PTR [ebp+0x8]
10026741:	cmp    DWORD PTR [eax],0x0
10026744:	je     0x1002675e
10026746:	mov    eax,DWORD PTR [ebp+0xc]
10026749:	cmp    DWORD PTR [eax],0x0
1002674c:	je     0x1002675e
1002674e:	lea    esi,[ebp-0xc]
10026751:	call   0x1001995f
10026756:	mov    esi,DWORD PTR [ebp-0x8]
10026759:	mov    ebx,DWORD PTR [ebp-0xc]
1002675c:	jmp    0x100266fa
1002675e:	mov    al,BYTE PTR [ebp-0x1]
10026761:	pop    esi
10026762:	pop    ebx
10026763:	leave  
10026764:	ret    
10026765:	push   ebp
10026766:	mov    ebp,esp
10026768:	and    esp,0xfffffff8
1002676b:	sub    esp,0x30
1002676e:	mov    eax,ds:0x1007e030
10026773:	xor    eax,esp
10026775:	mov    DWORD PTR [esp+0x2c],eax
10026779:	push   0x10
1002677b:	pop    eax
1002677c:	mov    DWORD PTR [esp+0x8],eax
10026780:	mov    DWORD PTR [esp+0x4],eax
10026784:	lea    eax,[esp+0x8]
10026788:	push   eax
10026789:	lea    eax,[esp+0x20]
1002678d:	push   eax
1002678e:	push   DWORD PTR [esi]
10026790:	call   DWORD PTR ds:0x100663a4
10026796:	cmp    eax,0xffffffff
10026799:	je     0x10026809
1002679b:	lea    eax,[esp+0x4]
1002679f:	push   eax
100267a0:	lea    eax,[esp+0x10]
100267a4:	push   eax
100267a5:	push   DWORD PTR [esi]
100267a7:	call   DWORD PTR ds:0x100663a0
100267ad:	cmp    eax,0xffffffff
100267b0:	je     0x10026809
100267b2:	cmp    WORD PTR [esp+0xc],0x2
100267b8:	jne    0x10026809
100267ba:	cmp    WORD PTR [esp+0x1c],0x2
100267c0:	jne    0x10026809
100267c2:	mov    eax,DWORD PTR [esp+0x10]
100267c6:	cmp    eax,DWORD PTR [esp+0x20]
100267ca:	je     0x10026805
100267cc:	push   0x4b4af182
100267d1:	push   0x2699afc2
100267d6:	push   0x100718cc
100267db:	call   0x100042d1
100267e0:	pop    ecx
100267e1:	pop    ecx
100267e2:	push   eax
100267e3:	call   0x100042d1
100267e8:	push   eax
100267e9:	push   0x9
100267eb:	push   0x10071904
100267f0:	call   0x100042e3
100267f5:	add    esp,0x14
100267f8:	push   eax
100267f9:	call   DWORD PTR ds:0x100663e0
100267ff:	cmp    DWORD PTR [esp+0x10],eax
10026803:	jne    0x10026809
10026805:	mov    al,0x1
10026807:	jmp    0x1002680b
10026809:	xor    al,al
1002680b:	mov    ecx,DWORD PTR [esp+0x2c]
1002680f:	xor    ecx,esp
10026811:	call   0x100430d7
10026816:	mov    esp,ebp
10026818:	pop    ebp
10026819:	ret    
1002681a:	push   ebp
1002681b:	mov    ebp,esp
1002681d:	and    esp,0xfffffff8
10026820:	push   0xffffffff
10026822:	push   0x10061cac
10026827:	mov    eax,fs:0x0
1002682d:	push   eax
1002682e:	sub    esp,0x3c
10026831:	push   ebx
10026832:	push   esi
10026833:	mov    eax,ds:0x1007e030
10026838:	xor    eax,esp
1002683a:	push   eax
1002683b:	lea    eax,[esp+0x48]
1002683f:	mov    fs:0x0,eax
10026845:	push   0x1a22c26e
1002684a:	push   0x1007195c
1002684f:	call   0x100042d1
10026854:	push   0x108fbe7c
10026859:	push   eax
1002685a:	call   0x100042d1
1002685f:	push   0x51403076
10026864:	push   eax
10026865:	call   0x100042d1
1002686a:	push   0x73bc4d3a
1002686f:	push   eax
10026870:	call   0x100042d1
10026875:	push   eax
10026876:	push   0x5
10026878:	push   0x1007199c
1002687d:	call   0x100042e3
10026882:	add    esp,0x2c
10026885:	push   eax
10026886:	lea    ecx,[esp+0x10]
1002688a:	call   0x100011d1
1002688f:	and    DWORD PTR [esp+0x50],0x0
10026894:	push   0x0
10026896:	lea    eax,[esp+0x10]
1002689a:	push   eax
1002689b:	lea    eax,[esp+0x30]
1002689f:	push   eax
100268a0:	mov    eax,DWORD PTR [ebp+0x8]
100268a3:	add    eax,0x18
100268a6:	call   0x100084c3
100268ab:	mov    esi,eax
100268ad:	push   0x166602b0
100268b2:	push   0x3c722224
100268b7:	push   0x10071910
100268bc:	mov    BYTE PTR [esp+0x5c],0x1
100268c1:	call   0x100042d1
100268c6:	pop    ecx
100268c7:	pop    ecx
100268c8:	push   eax
100268c9:	call   0x100042d1
100268ce:	cmp    DWORD PTR [esi+0x18],0x10
100268d2:	pop    ecx
100268d3:	pop    ecx
100268d4:	jb     0x100268db
100268d6:	mov    esi,DWORD PTR [esi+0x4]
100268d9:	jmp    0x100268de
100268db:	add    esi,0x4
100268de:	push   eax
100268df:	push   0x8
100268e1:	push   0x10071950
100268e6:	call   0x100042e3
100268eb:	add    esp,0xc
100268ee:	push   eax
100268ef:	push   esi
100268f0:	call   0x10045cd0
100268f5:	pop    ecx
100268f6:	pop    ecx
100268f7:	push   0x0
100268f9:	test   eax,eax
100268fb:	push   0x1
100268fd:	lea    ecx,[esp+0x30]
10026901:	setne  bl
10026904:	call   0x100012f4
10026909:	push   0x0
1002690b:	push   0x1
1002690d:	lea    ecx,[esp+0x14]
10026911:	call   0x100012f4
10026916:	mov    al,bl
10026918:	mov    ecx,DWORD PTR [esp+0x48]
1002691c:	mov    DWORD PTR fs:0x0,ecx
10026923:	pop    ecx
10026924:	pop    esi
10026925:	pop    ebx
10026926:	mov    esp,ebp
10026928:	pop    ebp
10026929:	ret    
1002692a:	push   esi
1002692b:	mov    esi,DWORD PTR [edi]
1002692d:	cmp    ebx,esi
1002692f:	je     0x10026942
10026931:	test   esi,esi
10026933:	je     0x10026942
10026935:	push   esi
10026936:	call   0x10009f31
1002693b:	push   esi
1002693c:	call   0x100430d2
10026941:	pop    ecx
10026942:	mov    DWORD PTR [edi],ebx
10026944:	pop    esi
10026945:	ret    
10026946:	push   ebp
10026947:	mov    ebp,esp
10026949:	and    esp,0xfffffff8
1002694c:	push   0xffffffff
1002694e:	push   0x10060cee
10026953:	mov    eax,fs:0x0
10026959:	push   eax
1002695a:	sub    esp,0x28
1002695d:	push   ebx
1002695e:	push   esi
1002695f:	push   edi
10026960:	mov    eax,ds:0x1007e030
10026965:	xor    eax,esp
10026967:	push   eax
10026968:	lea    eax,[esp+0x38]
1002696c:	mov    fs:0x0,eax
10026972:	xor    ebx,ebx
10026974:	cmp    DWORD PTR ds:0x10080f90,ebx
1002697a:	jne    0x10026bf6
10026980:	call   0x1001b300
10026985:	mov    DWORD PTR [esp+0x20],eax
10026989:	mov    DWORD PTR [esp+0x24],ebx
1002698d:	push   0x4
1002698f:	pop    esi
10026990:	push   esi
10026991:	mov    DWORD PTR [esp+0x44],ebx
10026995:	call   0x100436de
1002699a:	cmp    eax,ebx
1002699c:	pop    ecx
1002699d:	je     0x100269ab
1002699f:	mov    DWORD PTR [eax],0x100719dc
100269a5:	mov    DWORD PTR [esp+0x14],eax
100269a9:	jmp    0x100269af
100269ab:	mov    DWORD PTR [esp+0x14],ebx
100269af:	mov    eax,DWORD PTR [esp+0x20]
100269b3:	push   eax
100269b4:	lea    ecx,[esp+0x20]
100269b8:	push   ecx
100269b9:	lea    eax,[esp+0x1c]
100269bd:	push   eax
100269be:	mov    edi,ecx
100269c0:	call   0x10026ea3
100269c5:	push   esi
100269c6:	call   0x100436de
100269cb:	cmp    eax,ebx
100269cd:	pop    ecx
100269ce:	je     0x100269dc
100269d0:	mov    DWORD PTR [eax],0x100719e4
100269d6:	mov    DWORD PTR [esp+0x14],eax
100269da:	jmp    0x100269e0
100269dc:	mov    DWORD PTR [esp+0x14],ebx
100269e0:	mov    eax,DWORD PTR [esp+0x20]
100269e4:	push   eax
100269e5:	lea    ecx,[esp+0x20]
100269e9:	push   ecx
100269ea:	lea    eax,[esp+0x1c]
100269ee:	push   eax
100269ef:	mov    edi,ecx
100269f1:	call   0x10026ea3
100269f6:	push   esi
100269f7:	call   0x100436de
100269fc:	cmp    eax,ebx
100269fe:	pop    ecx
100269ff:	je     0x10026a0d
10026a01:	mov    DWORD PTR [eax],0x100719fc
10026a07:	mov    DWORD PTR [esp+0x14],eax
10026a0b:	jmp    0x10026a11
10026a0d:	mov    DWORD PTR [esp+0x14],ebx
10026a11:	mov    eax,DWORD PTR [esp+0x20]
10026a15:	push   eax
10026a16:	lea    ecx,[esp+0x20]
10026a1a:	push   ecx
10026a1b:	lea    eax,[esp+0x1c]
10026a1f:	push   eax
10026a20:	mov    edi,ecx
10026a22:	call   0x10026ea3
10026a27:	push   esi
10026a28:	call   0x100436de
10026a2d:	cmp    eax,ebx
10026a2f:	pop    ecx
10026a30:	je     0x10026a3e
10026a32:	mov    DWORD PTR [eax],0x10071a0c
10026a38:	mov    DWORD PTR [esp+0x14],eax
10026a3c:	jmp    0x10026a42
10026a3e:	mov    DWORD PTR [esp+0x14],ebx
10026a42:	mov    eax,DWORD PTR [esp+0x20]
10026a46:	push   eax
10026a47:	lea    ecx,[esp+0x20]
10026a4b:	push   ecx
10026a4c:	lea    eax,[esp+0x1c]
10026a50:	push   eax
10026a51:	mov    edi,ecx
10026a53:	call   0x10026ea3
10026a58:	push   esi
10026a59:	call   0x100436de
10026a5e:	cmp    eax,ebx
10026a60:	pop    ecx
10026a61:	je     0x10026a6f
10026a63:	mov    DWORD PTR [eax],0x10071a1c
10026a69:	mov    DWORD PTR [esp+0x14],eax
10026a6d:	jmp    0x10026a73
10026a6f:	mov    DWORD PTR [esp+0x14],ebx
10026a73:	mov    eax,DWORD PTR [esp+0x20]
10026a77:	push   eax
10026a78:	lea    ecx,[esp+0x20]
10026a7c:	push   ecx
10026a7d:	lea    eax,[esp+0x1c]
10026a81:	push   eax
10026a82:	mov    edi,ecx
10026a84:	call   0x10026ea3
10026a89:	push   esi
10026a8a:	call   0x100436de
10026a8f:	cmp    eax,ebx
10026a91:	pop    ecx
10026a92:	je     0x10026aa0
10026a94:	mov    DWORD PTR [eax],0x100719ac
10026a9a:	mov    DWORD PTR [esp+0x14],eax
10026a9e:	jmp    0x10026aa4
10026aa0:	mov    DWORD PTR [esp+0x14],ebx
10026aa4:	mov    eax,DWORD PTR [esp+0x20]
10026aa8:	push   eax
10026aa9:	lea    ecx,[esp+0x20]
10026aad:	push   ecx
10026aae:	lea    eax,[esp+0x1c]
10026ab2:	push   eax
10026ab3:	mov    edi,ecx
10026ab5:	call   0x10026ea3
10026aba:	push   esi
10026abb:	call   0x100436de
10026ac0:	cmp    eax,ebx
10026ac2:	pop    ecx
10026ac3:	je     0x10026ad1
10026ac5:	mov    DWORD PTR [eax],0x10071a04
10026acb:	mov    DWORD PTR [esp+0x14],eax
10026acf:	jmp    0x10026ad5
10026ad1:	mov    DWORD PTR [esp+0x14],ebx
10026ad5:	mov    eax,DWORD PTR [esp+0x20]
10026ad9:	push   eax
10026ada:	lea    ecx,[esp+0x20]
10026ade:	push   ecx
10026adf:	lea    eax,[esp+0x1c]
10026ae3:	push   eax
10026ae4:	mov    edi,ecx
10026ae6:	call   0x10026ea3
10026aeb:	push   esi
10026aec:	call   0x100436de
10026af1:	cmp    eax,ebx
10026af3:	pop    ecx
10026af4:	je     0x10026b02
10026af6:	mov    DWORD PTR [eax],0x100719ec
10026afc:	mov    DWORD PTR [esp+0x14],eax
10026b00:	jmp    0x10026b06
10026b02:	mov    DWORD PTR [esp+0x14],ebx
10026b06:	mov    eax,DWORD PTR [esp+0x20]
10026b0a:	push   eax
10026b0b:	lea    ecx,[esp+0x20]
10026b0f:	push   ecx
10026b10:	lea    eax,[esp+0x1c]
10026b14:	push   eax
10026b15:	mov    edi,ecx
10026b17:	call   0x10026ea3
10026b1c:	push   esi
10026b1d:	call   0x100436de
10026b22:	cmp    eax,ebx
10026b24:	pop    ecx
10026b25:	je     0x10026b33
10026b27:	mov    DWORD PTR [eax],0x100719cc
10026b2d:	mov    DWORD PTR [esp+0x14],eax
10026b31:	jmp    0x10026b37
10026b33:	mov    DWORD PTR [esp+0x14],ebx
10026b37:	mov    eax,DWORD PTR [esp+0x20]
10026b3b:	push   eax
10026b3c:	lea    ecx,[esp+0x20]
10026b40:	push   ecx
10026b41:	lea    eax,[esp+0x1c]
10026b45:	push   eax
10026b46:	mov    edi,ecx
10026b48:	call   0x10026ea3
10026b4d:	push   esi
10026b4e:	call   0x100436de
10026b53:	cmp    eax,ebx
10026b55:	pop    ecx
10026b56:	je     0x10026b64
10026b58:	mov    DWORD PTR [eax],0x100719b4
10026b5e:	mov    DWORD PTR [esp+0x14],eax
10026b62:	jmp    0x10026b68
10026b64:	mov    DWORD PTR [esp+0x14],ebx
10026b68:	mov    eax,DWORD PTR [esp+0x20]
10026b6c:	push   eax
10026b6d:	lea    ecx,[esp+0x20]
10026b71:	push   ecx
10026b72:	lea    eax,[esp+0x1c]
10026b76:	push   eax
10026b77:	mov    edi,ecx
10026b79:	call   0x10026ea3
10026b7e:	push   esi
10026b7f:	call   0x100436de
10026b84:	cmp    eax,ebx
10026b86:	pop    ecx
10026b87:	je     0x10026b95
10026b89:	mov    DWORD PTR [eax],0x100719d4
10026b8f:	mov    DWORD PTR [esp+0x14],eax
10026b93:	jmp    0x10026b99
10026b95:	mov    DWORD PTR [esp+0x14],ebx
10026b99:	mov    eax,DWORD PTR [esp+0x20]
10026b9d:	push   eax
10026b9e:	lea    ecx,[esp+0x20]
10026ba2:	push   ecx
10026ba3:	lea    eax,[esp+0x1c]
10026ba7:	push   eax
10026ba8:	mov    edi,ecx
10026baa:	call   0x10026ea3
10026baf:	mov    eax,DWORD PTR [esp+0x20]
10026bb3:	mov    ebx,DWORD PTR [eax]
10026bb5:	mov    esi,0x10080f88
10026bba:	mov    DWORD PTR [esp+0x18],eax
10026bbe:	call   0x10026f44
10026bc3:	push   DWORD PTR [esp+0x18]
10026bc7:	mov    eax,ds:0x10080f8c
10026bcc:	mov    ecx,DWORD PTR [eax]
10026bce:	push   edi
10026bcf:	push   ebx
10026bd0:	mov    eax,edi
10026bd2:	push   eax
10026bd3:	push   ecx
10026bd4:	push   esi
10026bd5:	push   DWORD PTR [esp+0x2c]
10026bd9:	call   0x10026f6d
10026bde:	or     DWORD PTR [esp+0x40],0xffffffff
10026be3:	mov    esi,edi
10026be5:	call   0x10026f44
10026bea:	push   DWORD PTR [esp+0x20]
10026bee:	call   0x100430d2
10026bf3:	pop    ecx
10026bf4:	xor    ebx,ebx
10026bf6:	cmp    DWORD PTR ds:0x10080f84,ebx
10026bfc:	jne    0x10026d25
10026c02:	call   0x1001b300
10026c07:	mov    DWORD PTR [esp+0x20],eax
10026c0b:	mov    DWORD PTR [esp+0x24],ebx
10026c0f:	push   0x4
10026c11:	pop    esi
10026c12:	push   esi
10026c13:	mov    DWORD PTR [esp+0x44],0x1
10026c1b:	call   0x100436de
10026c20:	cmp    eax,ebx
10026c22:	pop    ecx
10026c23:	je     0x10026c31
10026c25:	mov    DWORD PTR [eax],0x10071a24
10026c2b:	mov    DWORD PTR [esp+0x14],eax
10026c2f:	jmp    0x10026c35
10026c31:	mov    DWORD PTR [esp+0x14],ebx
10026c35:	mov    eax,DWORD PTR [esp+0x20]
10026c39:	push   eax
10026c3a:	lea    ecx,[esp+0x20]
10026c3e:	push   ecx
10026c3f:	lea    eax,[esp+0x1c]
10026c43:	push   eax
10026c44:	mov    edi,ecx
10026c46:	call   0x10026ea3
10026c4b:	push   esi
10026c4c:	call   0x100436de
10026c51:	cmp    eax,ebx
10026c53:	pop    ecx
10026c54:	je     0x10026c62
10026c56:	mov    DWORD PTR [eax],0x10071a14
10026c5c:	mov    DWORD PTR [esp+0x14],eax
10026c60:	jmp    0x10026c66
10026c62:	mov    DWORD PTR [esp+0x14],ebx
10026c66:	mov    eax,DWORD PTR [esp+0x20]
10026c6a:	push   eax
10026c6b:	lea    ecx,[esp+0x20]
10026c6f:	push   ecx
10026c70:	lea    eax,[esp+0x1c]
10026c74:	push   eax
10026c75:	mov    edi,ecx
10026c77:	call   0x10026ea3
10026c7c:	push   esi
10026c7d:	call   0x100436de
10026c82:	cmp    eax,ebx
10026c84:	pop    ecx
10026c85:	je     0x10026c93
10026c87:	mov    DWORD PTR [eax],0x100719f4
10026c8d:	mov    DWORD PTR [esp+0x14],eax
10026c91:	jmp    0x10026c97
10026c93:	mov    DWORD PTR [esp+0x14],ebx
10026c97:	mov    eax,DWORD PTR [esp+0x20]
10026c9b:	push   eax
10026c9c:	lea    ecx,[esp+0x20]
10026ca0:	push   ecx
10026ca1:	lea    eax,[esp+0x1c]
10026ca5:	push   eax
10026ca6:	mov    edi,ecx
10026ca8:	call   0x10026ea3
10026cad:	push   esi
10026cae:	call   0x100436de
10026cb3:	cmp    eax,ebx
10026cb5:	pop    ecx
10026cb6:	je     0x10026cc4
10026cb8:	mov    DWORD PTR [eax],0x100719bc
10026cbe:	mov    DWORD PTR [esp+0x14],eax
10026cc2:	jmp    0x10026cc8
10026cc4:	mov    DWORD PTR [esp+0x14],ebx
10026cc8:	mov    eax,DWORD PTR [esp+0x20]
10026ccc:	push   eax
10026ccd:	lea    ecx,[esp+0x20]
10026cd1:	push   ecx
10026cd2:	lea    eax,[esp+0x1c]
10026cd6:	push   eax
10026cd7:	mov    edi,ecx
10026cd9:	call   0x10026ea3
10026cde:	mov    eax,DWORD PTR [esp+0x20]
10026ce2:	mov    ebx,DWORD PTR [eax]
10026ce4:	mov    esi,0x10080f7c
10026ce9:	mov    DWORD PTR [esp+0x18],eax
10026ced:	call   0x10026f44
10026cf2:	push   DWORD PTR [esp+0x18]
10026cf6:	mov    eax,ds:0x10080f80
10026cfb:	mov    ecx,DWORD PTR [eax]
10026cfd:	push   edi
10026cfe:	push   ebx
10026cff:	mov    eax,edi
10026d01:	push   eax
10026d02:	push   ecx
10026d03:	push   esi
10026d04:	push   DWORD PTR [esp+0x2c]
10026d08:	call   0x10027034
10026d0d:	or     DWORD PTR [esp+0x40],0xffffffff
10026d12:	mov    esi,edi
10026d14:	call   0x10026f44
10026d19:	push   DWORD PTR [esp+0x20]
10026d1d:	call   0x100430d2
10026d22:	pop    ecx
10026d23:	xor    ebx,ebx
10026d25:	cmp    DWORD PTR ds:0x10080f9c,ebx
10026d2b:	jne    0x10026dcb
10026d31:	call   0x1001b300
10026d36:	mov    DWORD PTR [esp+0x20],eax
10026d3a:	mov    DWORD PTR [esp+0x24],ebx
10026d3e:	push   0x8
10026d40:	mov    DWORD PTR [esp+0x44],0x2
10026d48:	call   0x100436de
10026d4d:	pop    ecx
10026d4e:	mov    DWORD PTR [esp+0x14],eax
10026d52:	cmp    eax,ebx
10026d54:	mov    BYTE PTR [esp+0x40],0x3
10026d59:	je     0x10026d63
10026d5b:	push   eax
10026d5c:	call   0x1002c6b9
10026d61:	jmp    0x10026d65
10026d63:	xor    eax,eax
10026d65:	mov    BYTE PTR [esp+0x40],0x2
10026d6a:	mov    DWORD PTR [esp+0x14],eax
10026d6e:	mov    eax,DWORD PTR [esp+0x20]
10026d72:	push   eax
10026d73:	lea    ecx,[esp+0x20]
10026d77:	push   ecx
10026d78:	lea    eax,[esp+0x1c]
10026d7c:	push   eax
10026d7d:	mov    edi,ecx
10026d7f:	call   0x10026ea3
10026d84:	mov    eax,DWORD PTR [esp+0x20]
10026d88:	mov    ebx,DWORD PTR [eax]
10026d8a:	mov    esi,0x10080f94
10026d8f:	mov    DWORD PTR [esp+0x18],eax
10026d93:	call   0x10026f44
10026d98:	push   DWORD PTR [esp+0x18]
10026d9c:	mov    eax,ds:0x10080f98
10026da1:	mov    ecx,DWORD PTR [eax]
10026da3:	push   edi
10026da4:	push   ebx
10026da5:	mov    eax,edi
10026da7:	push   eax
10026da8:	push   ecx
10026da9:	push   esi
10026daa:	push   DWORD PTR [esp+0x2c]
10026dae:	call   0x100270fb
10026db3:	or     DWORD PTR [esp+0x40],0xffffffff
10026db8:	mov    esi,edi
10026dba:	call   0x10026f44
10026dbf:	push   DWORD PTR [esp+0x20]
10026dc3:	call   0x100430d2
10026dc8:	pop    ecx
10026dc9:	xor    ebx,ebx
10026dcb:	cmp    DWORD PTR ds:0x10080f78,ebx
10026dd1:	jne    0x10026e5c
10026dd7:	call   0x1001b300
10026ddc:	mov    DWORD PTR [esp+0x2c],eax
10026de0:	mov    DWORD PTR [esp+0x30],ebx
10026de4:	push   0x4
10026de6:	pop    eax
10026de7:	push   eax
10026de8:	mov    DWORD PTR [esp+0x44],eax
10026dec:	call   0x100436de
10026df1:	cmp    eax,ebx
10026df3:	pop    ecx
10026df4:	je     0x10026e02
10026df6:	mov    DWORD PTR [eax],0x100719c4
10026dfc:	mov    DWORD PTR [esp+0x14],eax
10026e00:	jmp    0x10026e06
10026e02:	mov    DWORD PTR [esp+0x14],ebx
10026e06:	mov    eax,DWORD PTR [esp+0x2c]
10026e0a:	push   eax
10026e0b:	lea    ecx,[esp+0x2c]
10026e0f:	push   ecx
10026e10:	lea    eax,[esp+0x1c]
10026e14:	push   eax
10026e15:	mov    edi,ecx
10026e17:	call   0x10026ea3
10026e1c:	mov    eax,DWORD PTR [esp+0x2c]
10026e20:	mov    ebx,DWORD PTR [eax]
10026e22:	mov    esi,0x10080f70
10026e27:	mov    DWORD PTR [esp+0x18],eax
10026e2b:	call   0x10026f44
10026e30:	push   DWORD PTR [esp+0x18]
10026e34:	mov    eax,ds:0x10080f74
10026e39:	mov    ecx,DWORD PTR [eax]
10026e3b:	push   edi
10026e3c:	push   ebx
10026e3d:	mov    eax,edi
10026e3f:	push   eax
10026e40:	push   ecx
10026e41:	push   esi
10026e42:	push   DWORD PTR [esp+0x2c]
10026e46:	call   0x100271c2
10026e4b:	mov    esi,edi
10026e4d:	call   0x10026f44
10026e52:	push   DWORD PTR [esp+0x2c]
10026e56:	call   0x100430d2
10026e5b:	pop    ecx
10026e5c:	mov    ecx,DWORD PTR [esp+0x38]
10026e60:	mov    DWORD PTR fs:0x0,ecx
10026e67:	pop    ecx
10026e68:	pop    edi
10026e69:	pop    esi
10026e6a:	pop    ebx
10026e6b:	mov    esp,ebp
10026e6d:	pop    ebp
10026e6e:	ret    
10026e6f:	test   BYTE PTR [esp+0x4],0x1
10026e74:	push   esi
10026e75:	mov    esi,ecx
10026e77:	mov    DWORD PTR [esi],0x100719a4
10026e7d:	je     0x10026e86
10026e7f:	push   esi
10026e80:	call   0x100430d2
10026e85:	pop    ecx
10026e86:	mov    eax,esi
10026e88:	pop    esi
10026e89:	ret    0x4
10026e8c:	push   esi
10026e8d:	mov    esi,eax
10026e8f:	call   0x10026f44
10026e94:	push   DWORD PTR [esi+0x4]
10026e97:	call   0x100430d2
10026e9c:	and    DWORD PTR [esi+0x4],0x0
10026ea0:	pop    ecx
10026ea1:	pop    esi
10026ea2:	ret    
10026ea3:	push   0x48
10026ea5:	mov    eax,0x100603a7
10026eaa:	call   0x10059c75
10026eaf:	push   DWORD PTR [ebp+0x8]
10026eb2:	mov    esi,DWORD PTR [ebp+0x10]
10026eb5:	push   DWORD PTR [esi+0x4]
10026eb8:	push   esi
10026eb9:	call   0x10026f13
10026ebe:	mov    ecx,DWORD PTR [edi+0x8]
10026ec1:	mov    edx,0x3fffffff
10026ec6:	sub    edx,ecx
10026ec8:	cmp    edx,0x1
10026ecb:	jae    0x10026eff
10026ecd:	push   0x1006fed8
10026ed2:	lea    ecx,[ebp-0x2c]
10026ed5:	call   0x100011d1
10026eda:	and    DWORD PTR [ebp-0x4],0x0
10026ede:	lea    eax,[ebp-0x2c]
10026ee1:	push   eax
10026ee2:	lea    ecx,[ebp-0x54]
10026ee5:	call   0x1000106e
10026eea:	push   0x10074ec0
10026eef:	lea    eax,[ebp-0x54]
10026ef2:	push   eax
10026ef3:	mov    DWORD PTR [ebp-0x54],0x1006b96c
10026efa:	call   0x10047c54
10026eff:	inc    ecx
10026f00:	mov    DWORD PTR [edi+0x8],ecx
10026f03:	mov    DWORD PTR [esi+0x4],eax
10026f06:	mov    ecx,DWORD PTR [eax+0x4]
10026f09:	mov    DWORD PTR [ecx],eax
10026f0b:	call   0x10059d4d
10026f10:	ret    0xc
10026f13:	push   0xc
10026f15:	call   0x100436de
10026f1a:	test   eax,eax
10026f1c:	pop    ecx
10026f1d:	je     0x10026f25
10026f1f:	mov    ecx,DWORD PTR [esp+0x4]
10026f23:	mov    DWORD PTR [eax],ecx
10026f25:	lea    ecx,[eax+0x4]
10026f28:	test   ecx,ecx
10026f2a:	je     0x10026f32
10026f2c:	mov    edx,DWORD PTR [esp+0x8]
10026f30:	mov    DWORD PTR [ecx],edx
10026f32:	lea    ecx,[eax+0x8]
10026f35:	test   ecx,ecx
10026f37:	je     0x10026f41
10026f39:	mov    edx,DWORD PTR [esp+0xc]
10026f3d:	mov    edx,DWORD PTR [edx]
10026f3f:	mov    DWORD PTR [ecx],edx
10026f41:	ret    0xc
10026f44:	mov    eax,DWORD PTR [esi+0x4]
10026f47:	mov    ecx,DWORD PTR [eax]
10026f49:	mov    DWORD PTR [eax],eax
10026f4b:	mov    eax,DWORD PTR [esi+0x4]
10026f4e:	mov    DWORD PTR [eax+0x4],eax
10026f51:	and    DWORD PTR [esi+0x8],0x0
10026f55:	cmp    ecx,DWORD PTR [esi+0x4]
10026f58:	je     0x10026f6c
10026f5a:	push   edi
10026f5b:	mov    edi,DWORD PTR [ecx]
10026f5d:	push   ecx
10026f5e:	call   0x100430d2
10026f63:	cmp    edi,DWORD PTR [esi+0x4]
10026f66:	pop    ecx
10026f67:	mov    ecx,edi
10026f69:	jne    0x10026f5b
10026f6b:	pop    edi
10026f6c:	ret    
10026f6d:	push   0x18
10026f6f:	mov    eax,0x10060ca9
10026f74:	call   0x10059ca8
10026f79:	mov    ebx,DWORD PTR [ebp+0x14]
10026f7c:	mov    esi,DWORD PTR [ebp+0x18]
10026f7f:	and    DWORD PTR [ebp-0x4],0x0
10026f83:	mov    edi,0x10080f88
10026f88:	mov    DWORD PTR [ebp-0x1c],ebx
10026f8b:	mov    DWORD PTR [ebp-0x18],esi
10026f8e:	test   ebx,ebx
10026f90:	je     0x10026f97
10026f92:	cmp    ebx,DWORD PTR [ebp+0x1c]
10026f95:	je     0x10026f9c
10026f97:	call   0x100435f0
10026f9c:	cmp    esi,DWORD PTR [ebp+0x20]
10026f9f:	je     0x1002702c
10026fa5:	test   ebx,ebx
10026fa7:	jne    0x10026fae
10026fa9:	call   0x100435f0
10026fae:	cmp    esi,DWORD PTR [ebx+0x4]
10026fb1:	jne    0x10026fb8
10026fb3:	call   0x100435f0
10026fb8:	push   DWORD PTR [ebp+0x10]
10026fbb:	add    esi,0x8
10026fbe:	push   DWORD PTR [ebp+0xc]
10026fc1:	push   esi
10026fc2:	call   0x10026ea3
10026fc7:	lea    esi,[ebp+0x14]
10026fca:	call   0x1001995f
10026fcf:	mov    esi,DWORD PTR [ebp+0x18]
10026fd2:	mov    ebx,DWORD PTR [ebp+0x14]
10026fd5:	jmp    0x10026f8e
10026fd7:	mov    edi,DWORD PTR [ebp+0x10]
10026fda:	mov    eax,DWORD PTR [ebp-0x1c]
10026fdd:	test   eax,eax
10026fdf:	je     0x10026fe6
10026fe1:	cmp    eax,DWORD PTR [ebp+0x14]
10026fe4:	je     0x10026feb
10026fe6:	call   0x100435f0
10026feb:	mov    eax,DWORD PTR [ebp-0x18]
10026fee:	cmp    eax,DWORD PTR [ebp+0x18]
10026ff1:	je     0x10027023
10026ff3:	mov    ebx,DWORD PTR [ebp+0xc]
10026ff6:	test   ebx,ebx
10026ff8:	mov    DWORD PTR [ebp+0x20],edi
10026ffb:	jne    0x10027002
10026ffd:	call   0x100435f0
10027002:	mov    esi,DWORD PTR [edi+0x4]
10027005:	cmp    esi,DWORD PTR [ebx+0x4]
10027008:	jne    0x1002700f
1002700a:	call   0x100435f0
1002700f:	push   esi
10027010:	push   ebx
10027011:	lea    ebx,[ebp-0x24]
10027014:	call   0x10027289
10027019:	lea    esi,[ebp-0x1c]
1002701c:	call   0x1001995f
10027021:	jmp    0x10026fda
10027023:	push   0x0
10027025:	push   0x0
10027027:	call   0x10047c54
1002702c:	call   0x10059d4d
10027031:	ret    0x1c
10027034:	push   0x18
10027036:	mov    eax,0x10060c8e
1002703b:	call   0x10059ca8
10027040:	mov    ebx,DWORD PTR [ebp+0x14]
10027043:	mov    esi,DWORD PTR [ebp+0x18]
10027046:	and    DWORD PTR [ebp-0x4],0x0
1002704a:	mov    edi,0x10080f7c
1002704f:	mov    DWORD PTR [ebp-0x1c],ebx
10027052:	mov    DWORD PTR [ebp-0x18],esi
10027055:	test   ebx,ebx
10027057:	je     0x1002705e
10027059:	cmp    ebx,DWORD PTR [ebp+0x1c]
1002705c:	je     0x10027063
1002705e:	call   0x100435f0
10027063:	cmp    esi,DWORD PTR [ebp+0x20]
10027066:	je     0x100270f3
1002706c:	test   ebx,ebx
1002706e:	jne    0x10027075
10027070:	call   0x100435f0
10027075:	cmp    esi,DWORD PTR [ebx+0x4]
10027078:	jne    0x1002707f
1002707a:	call   0x100435f0
1002707f:	push   DWORD PTR [ebp+0x10]
10027082:	add    esi,0x8
10027085:	push   DWORD PTR [ebp+0xc]
10027088:	push   esi
10027089:	call   0x10026ea3
1002708e:	lea    esi,[ebp+0x14]
10027091:	call   0x1001995f
10027096:	mov    esi,DWORD PTR [ebp+0x18]
10027099:	mov    ebx,DWORD PTR [ebp+0x14]
1002709c:	jmp    0x10027055
1002709e:	mov    edi,DWORD PTR [ebp+0x10]
100270a1:	mov    eax,DWORD PTR [ebp-0x1c]
100270a4:	test   eax,eax
100270a6:	je     0x100270ad
100270a8:	cmp    eax,DWORD PTR [ebp+0x14]
100270ab:	je     0x100270b2
100270ad:	call   0x100435f0
100270b2:	mov    eax,DWORD PTR [ebp-0x18]
100270b5:	cmp    eax,DWORD PTR [ebp+0x18]
100270b8:	je     0x100270ea
100270ba:	mov    ebx,DWORD PTR [ebp+0xc]
100270bd:	test   ebx,ebx
100270bf:	mov    DWORD PTR [ebp+0x20],edi
100270c2:	jne    0x100270c9
100270c4:	call   0x100435f0
100270c9:	mov    esi,DWORD PTR [edi+0x4]
100270cc:	cmp    esi,DWORD PTR [ebx+0x4]
100270cf:	jne    0x100270d6
100270d1:	call   0x100435f0
100270d6:	push   esi
100270d7:	push   ebx
100270d8:	lea    ebx,[ebp-0x24]
100270db:	call   0x100272d8
100270e0:	lea    esi,[ebp-0x1c]
100270e3:	call   0x1001995f
100270e8:	jmp    0x100270a1
100270ea:	push   0x0
100270ec:	push   0x0
100270ee:	call   0x10047c54
100270f3:	call   0x10059d4d
100270f8:	ret    0x1c
100270fb:	push   0x18
100270fd:	mov    eax,0x10060c73
10027102:	call   0x10059ca8
10027107:	mov    ebx,DWORD PTR [ebp+0x14]
1002710a:	mov    esi,DWORD PTR [ebp+0x18]
1002710d:	and    DWORD PTR [ebp-0x4],0x0
10027111:	mov    edi,0x10080f94
10027116:	mov    DWORD PTR [ebp-0x1c],ebx
10027119:	mov    DWORD PTR [ebp-0x18],esi
1002711c:	test   ebx,ebx
1002711e:	je     0x10027125
10027120:	cmp    ebx,DWORD PTR [ebp+0x1c]
10027123:	je     0x1002712a
10027125:	call   0x100435f0
1002712a:	cmp    esi,DWORD PTR [ebp+0x20]
1002712d:	je     0x100271ba
10027133:	test   ebx,ebx
10027135:	jne    0x1002713c
10027137:	call   0x100435f0
1002713c:	cmp    esi,DWORD PTR [ebx+0x4]
1002713f:	jne    0x10027146
10027141:	call   0x100435f0
10027146:	push   DWORD PTR [ebp+0x10]
10027149:	add    esi,0x8
1002714c:	push   DWORD PTR [ebp+0xc]
1002714f:	push   esi
10027150:	call   0x10026ea3
10027155:	lea    esi,[ebp+0x14]
10027158:	call   0x1001995f
1002715d:	mov    esi,DWORD PTR [ebp+0x18]
10027160:	mov    ebx,DWORD PTR [ebp+0x14]
10027163:	jmp    0x1002711c
10027165:	mov    edi,DWORD PTR [ebp+0x10]
10027168:	mov    eax,DWORD PTR [ebp-0x1c]
1002716b:	test   eax,eax
1002716d:	je     0x10027174
1002716f:	cmp    eax,DWORD PTR [ebp+0x14]
10027172:	je     0x10027179
10027174:	call   0x100435f0
10027179:	mov    eax,DWORD PTR [ebp-0x18]
1002717c:	cmp    eax,DWORD PTR [ebp+0x18]
1002717f:	je     0x100271b1
10027181:	mov    ebx,DWORD PTR [ebp+0xc]
10027184:	test   ebx,ebx
10027186:	mov    DWORD PTR [ebp+0x20],edi
10027189:	jne    0x10027190
1002718b:	call   0x100435f0
10027190:	mov    esi,DWORD PTR [edi+0x4]
10027193:	cmp    esi,DWORD PTR [ebx+0x4]
10027196:	jne    0x1002719d
10027198:	call   0x100435f0
1002719d:	push   esi
1002719e:	push   ebx
1002719f:	lea    ebx,[ebp-0x24]
100271a2:	call   0x10027327
100271a7:	lea    esi,[ebp-0x1c]
100271aa:	call   0x1001995f
100271af:	jmp    0x10027168
100271b1:	push   0x0
100271b3:	push   0x0
100271b5:	call   0x10047c54
100271ba:	call   0x10059d4d
100271bf:	ret    0x1c
100271c2:	push   0x18
100271c4:	mov    eax,0x10060c58
100271c9:	call   0x10059ca8
100271ce:	mov    ebx,DWORD PTR [ebp+0x14]
100271d1:	mov    esi,DWORD PTR [ebp+0x18]
100271d4:	and    DWORD PTR [ebp-0x4],0x0
100271d8:	mov    edi,0x10080f70
100271dd:	mov    DWORD PTR [ebp-0x1c],ebx
100271e0:	mov    DWORD PTR [ebp-0x18],esi
100271e3:	test   ebx,ebx
100271e5:	je     0x100271ec
100271e7:	cmp    ebx,DWORD PTR [ebp+0x1c]
100271ea:	je     0x100271f1
100271ec:	call   0x100435f0
100271f1:	cmp    esi,DWORD PTR [ebp+0x20]
100271f4:	je     0x10027281
100271fa:	test   ebx,ebx
100271fc:	jne    0x10027203
100271fe:	call   0x100435f0
10027203:	cmp    esi,DWORD PTR [ebx+0x4]
10027206:	jne    0x1002720d
10027208:	call   0x100435f0
1002720d:	push   DWORD PTR [ebp+0x10]
10027210:	add    esi,0x8
10027213:	push   DWORD PTR [ebp+0xc]
10027216:	push   esi
10027217:	call   0x10026ea3
1002721c:	lea    esi,[ebp+0x14]
1002721f:	call   0x1001995f
10027224:	mov    esi,DWORD PTR [ebp+0x18]
10027227:	mov    ebx,DWORD PTR [ebp+0x14]
1002722a:	jmp    0x100271e3
1002722c:	mov    edi,DWORD PTR [ebp+0x10]
1002722f:	mov    eax,DWORD PTR [ebp-0x1c]
10027232:	test   eax,eax
10027234:	je     0x1002723b
10027236:	cmp    eax,DWORD PTR [ebp+0x14]
10027239:	je     0x10027240
1002723b:	call   0x100435f0
10027240:	mov    eax,DWORD PTR [ebp-0x18]
10027243:	cmp    eax,DWORD PTR [ebp+0x18]
10027246:	je     0x10027278
10027248:	mov    ebx,DWORD PTR [ebp+0xc]
1002724b:	test   ebx,ebx
1002724d:	mov    DWORD PTR [ebp+0x20],edi
10027250:	jne    0x10027257
10027252:	call   0x100435f0
10027257:	mov    esi,DWORD PTR [edi+0x4]
1002725a:	cmp    esi,DWORD PTR [ebx+0x4]
1002725d:	jne    0x10027264
1002725f:	call   0x100435f0
10027264:	push   esi
10027265:	push   ebx
10027266:	lea    ebx,[ebp-0x24]
10027269:	call   0x10027376
1002726e:	lea    esi,[ebp-0x1c]
10027271:	call   0x1001995f
10027276:	jmp    0x1002722f
10027278:	push   0x0
1002727a:	push   0x0
1002727c:	call   0x10047c54
10027281:	call   0x10059d4d
10027286:	ret    0x1c
10027289:	push   ebp
1002728a:	mov    ebp,esp
1002728c:	push   ecx
1002728d:	push   ecx
1002728e:	mov    eax,DWORD PTR [ebp+0x8]
10027291:	push   esi
10027292:	push   edi
10027293:	mov    edi,DWORD PTR [ebp+0xc]
10027296:	lea    esi,[ebp+0x8]
10027299:	mov    DWORD PTR [ebp-0x8],eax
1002729c:	call   0x1001995f
100272a1:	cmp    edi,DWORD PTR ds:0x10080f8c
100272a7:	je     0x100272c5
100272a9:	mov    eax,DWORD PTR [edi+0x4]
100272ac:	mov    ecx,DWORD PTR [edi]
100272ae:	mov    DWORD PTR [eax],ecx
100272b0:	mov    eax,DWORD PTR [edi]
100272b2:	mov    ecx,DWORD PTR [edi+0x4]
100272b5:	push   edi
100272b6:	mov    DWORD PTR [eax+0x4],ecx
100272b9:	call   0x100430d2
100272be:	dec    DWORD PTR ds:0x10080f90
100272c4:	pop    ecx
100272c5:	mov    eax,DWORD PTR [ebp+0x8]
100272c8:	mov    DWORD PTR [ebx],eax
100272ca:	mov    eax,DWORD PTR [ebp+0xc]
100272cd:	pop    edi
100272ce:	mov    DWORD PTR [ebx+0x4],eax
100272d1:	mov    eax,ebx
100272d3:	pop    esi
100272d4:	leave  
100272d5:	ret    0x8
100272d8:	push   ebp
100272d9:	mov    ebp,esp
100272db:	push   ecx
100272dc:	push   ecx
100272dd:	mov    eax,DWORD PTR [ebp+0x8]
100272e0:	push   esi
100272e1:	push   edi
100272e2:	mov    edi,DWORD PTR [ebp+0xc]
100272e5:	lea    esi,[ebp+0x8]
100272e8:	mov    DWORD PTR [ebp-0x8],eax
100272eb:	call   0x1001995f
100272f0:	cmp    edi,DWORD PTR ds:0x10080f80
100272f6:	je     0x10027314
100272f8:	mov    eax,DWORD PTR [edi+0x4]
100272fb:	mov    ecx,DWORD PTR [edi]
100272fd:	mov    DWORD PTR [eax],ecx
100272ff:	mov    eax,DWORD PTR [edi]
10027301:	mov    ecx,DWORD PTR [edi+0x4]
10027304:	push   edi
10027305:	mov    DWORD PTR [eax+0x4],ecx
10027308:	call   0x100430d2
1002730d:	dec    DWORD PTR ds:0x10080f84
10027313:	pop    ecx
10027314:	mov    eax,DWORD PTR [ebp+0x8]
10027317:	mov    DWORD PTR [ebx],eax
10027319:	mov    eax,DWORD PTR [ebp+0xc]
1002731c:	pop    edi
1002731d:	mov    DWORD PTR [ebx+0x4],eax
10027320:	mov    eax,ebx
10027322:	pop    esi
10027323:	leave  
10027324:	ret    0x8
10027327:	push   ebp
10027328:	mov    ebp,esp
1002732a:	push   ecx
1002732b:	push   ecx
1002732c:	mov    eax,DWORD PTR [ebp+0x8]
1002732f:	push   esi
10027330:	push   edi
10027331:	mov    edi,DWORD PTR [ebp+0xc]
10027334:	lea    esi,[ebp+0x8]
10027337:	mov    DWORD PTR [ebp-0x8],eax
1002733a:	call   0x1001995f
1002733f:	cmp    edi,DWORD PTR ds:0x10080f98
10027345:	je     0x10027363
10027347:	mov    eax,DWORD PTR [edi+0x4]
1002734a:	mov    ecx,DWORD PTR [edi]
1002734c:	mov    DWORD PTR [eax],ecx
1002734e:	mov    eax,DWORD PTR [edi]
10027350:	mov    ecx,DWORD PTR [edi+0x4]
10027353:	push   edi
10027354:	mov    DWORD PTR [eax+0x4],ecx
10027357:	call   0x100430d2
1002735c:	dec    DWORD PTR ds:0x10080f9c
10027362:	pop    ecx
10027363:	mov    eax,DWORD PTR [ebp+0x8]
10027366:	mov    DWORD PTR [ebx],eax
10027368:	mov    eax,DWORD PTR [ebp+0xc]
1002736b:	pop    edi
1002736c:	mov    DWORD PTR [ebx+0x4],eax
1002736f:	mov    eax,ebx
10027371:	pop    esi
10027372:	leave  
10027373:	ret    0x8
10027376:	push   ebp
10027377:	mov    ebp,esp
10027379:	push   ecx
1002737a:	push   ecx
1002737b:	mov    eax,DWORD PTR [ebp+0x8]
1002737e:	push   esi
1002737f:	push   edi
10027380:	mov    edi,DWORD PTR [ebp+0xc]
10027383:	lea    esi,[ebp+0x8]
10027386:	mov    DWORD PTR [ebp-0x8],eax
10027389:	call   0x1001995f
1002738e:	cmp    edi,DWORD PTR ds:0x10080f74
10027394:	je     0x100273b2
10027396:	mov    eax,DWORD PTR [edi+0x4]
10027399:	mov    ecx,DWORD PTR [edi]
1002739b:	mov    DWORD PTR [eax],ecx
1002739d:	mov    eax,DWORD PTR [edi]
1002739f:	mov    ecx,DWORD PTR [edi+0x4]
100273a2:	push   edi
100273a3:	mov    DWORD PTR [eax+0x4],ecx
100273a6:	call   0x100430d2
100273ab:	dec    DWORD PTR ds:0x10080f78
100273b1:	pop    ecx
100273b2:	mov    eax,DWORD PTR [ebp+0x8]
100273b5:	mov    DWORD PTR [ebx],eax
100273b7:	mov    eax,DWORD PTR [ebp+0xc]
100273ba:	pop    edi
100273bb:	mov    DWORD PTR [ebx+0x4],eax
100273be:	mov    eax,ebx
100273c0:	pop    esi
100273c1:	leave  
100273c2:	ret    0x8
100273c5:	push   ebp
100273c6:	mov    ebp,esp
100273c8:	and    esp,0xfffffff8
100273cb:	push   0xffffffff
100273cd:	push   0x10063683
100273d2:	mov    eax,fs:0x0
100273d8:	push   eax
100273d9:	sub    esp,0x60
100273dc:	mov    eax,ds:0x1007e030
100273e1:	xor    eax,esp
100273e3:	mov    DWORD PTR [esp+0x58],eax
100273e7:	push   ebx
100273e8:	push   esi
100273e9:	push   edi
100273ea:	mov    eax,ds:0x1007e030
100273ef:	xor    eax,esp
100273f1:	push   eax
100273f2:	lea    eax,[esp+0x70]
100273f6:	mov    fs:0x0,eax
100273fc:	mov    edi,DWORD PTR [ebp+0x8]
100273ff:	push   0x4a76e41a
10027404:	push   0x10071a2c
10027409:	call   0x100042d1
1002740e:	push   0x35672c08
10027413:	push   eax
10027414:	call   0x100042d1
10027419:	push   0x51dcd124
1002741e:	push   eax
1002741f:	call   0x100042d1
10027424:	push   0x462becd4
10027429:	push   eax
1002742a:	call   0x100042d1
1002742f:	push   eax
10027430:	push   0x7
10027432:	mov    ebx,0x1006d6b8
10027437:	push   ebx
10027438:	call   0x100042e3
1002743d:	add    esp,0x2c
10027440:	push   eax
10027441:	lea    ecx,[esp+0x34]
10027445:	call   0x100011d1
1002744a:	xor    esi,esi
1002744c:	push   esi
1002744d:	lea    eax,[esp+0x34]
10027451:	push   eax
10027452:	lea    eax,[esp+0x54]
10027456:	push   eax
10027457:	mov    DWORD PTR [esp+0x84],esi
1002745e:	mov    eax,DWORD PTR [edi+0x4]
10027461:	add    eax,0x18
10027464:	call   0x100084c3
10027469:	push   esi
1002746a:	push   0x1
1002746c:	lea    ecx,[esp+0x38]
10027470:	mov    BYTE PTR [esp+0x80],0x2
10027478:	call   0x100012f4
1002747d:	push   0x1006cd08
10027482:	lea    esi,[esp+0x50]
10027486:	call   0x100065b3
1002748b:	test   al,al
1002748d:	pop    ecx
1002748e:	jne    0x1002755f
10027494:	push   0x10080d54
10027499:	mov    ecx,esi
1002749b:	call   0x1000115b
100274a0:	test   al,al
100274a2:	je     0x1002755f
100274a8:	push   DWORD PTR [edi]
100274aa:	lea    ecx,[esp+0x18]
100274ae:	call   0x10008b3e
100274b3:	cmp    DWORD PTR [eax+0x18],0x10
100274b7:	jb     0x100274be
100274b9:	mov    eax,DWORD PTR [eax+0x4]
100274bc:	jmp    0x100274c1
100274be:	add    eax,0x4
100274c1:	cmp    DWORD PTR [esp+0x64],0x10
100274c6:	mov    ecx,DWORD PTR [esp+0x50]
100274ca:	jae    0x100274d0
100274cc:	lea    ecx,[esp+0x50]
100274d0:	push   eax
100274d1:	push   ecx
100274d2:	call   0x1000205f
100274d7:	pop    ecx
100274d8:	pop    ecx
100274d9:	push   0x0
100274db:	push   0x1
100274dd:	lea    ecx,[esp+0x1c]
100274e1:	call   0x100012f4
100274e6:	push   0x73a29dd8
100274eb:	push   0x10071a64
100274f0:	call   0x100042d1
100274f5:	push   eax
100274f6:	push   0x7
100274f8:	push   ebx
100274f9:	call   0x100042e3
100274fe:	add    esp,0x14
10027501:	push   eax
10027502:	lea    ecx,[esp+0x18]
10027506:	call   0x100011d1
1002750b:	lea    eax,[esp+0x14]
1002750f:	push   eax
10027510:	mov    BYTE PTR [esp+0x7c],0x3
10027515:	mov    eax,DWORD PTR [edi+0x4]
10027518:	add    eax,0x18
1002751b:	push   eax
1002751c:	call   0x10008261
10027521:	push   0x0
10027523:	push   0x1
10027525:	lea    ecx,[esp+0x1c]
10027529:	call   0x100012f4
1002752e:	mov    bl,0x1
10027530:	push   0x0
10027532:	push   0x1
10027534:	lea    ecx,[esp+0x54]
10027538:	call   0x100012f4
1002753d:	mov    al,bl
1002753f:	mov    ecx,DWORD PTR [esp+0x70]
10027543:	mov    DWORD PTR fs:0x0,ecx
1002754a:	pop    ecx
1002754b:	pop    edi
1002754c:	pop    esi
1002754d:	pop    ebx
1002754e:	mov    ecx,DWORD PTR [esp+0x58]
10027552:	xor    ecx,esp
10027554:	call   0x100430d7
10027559:	mov    esp,ebp
1002755b:	pop    ebp
1002755c:	ret    0x4
1002755f:	xor    bl,bl
10027561:	jmp    0x10027530
10027563:	push   ebp
10027564:	mov    ebp,esp
10027566:	and    esp,0xfffffff8
10027569:	push   0xffffffff
1002756b:	push   0x10063643
10027570:	mov    eax,fs:0x0
10027576:	push   eax
10027577:	sub    esp,0x2c
1002757a:	mov    eax,ds:0x1007e030
1002757f:	xor    eax,esp
10027581:	mov    DWORD PTR [esp+0x24],eax
10027585:	push   ebx
10027586:	push   edi
10027587:	mov    eax,ds:0x1007e030
1002758c:	xor    eax,esp
1002758e:	push   eax
1002758f:	lea    eax,[esp+0x38]
10027593:	mov    fs:0x0,eax
10027599:	mov    ebx,DWORD PTR [ebp+0x8]
1002759c:	lea    eax,[esp+0x14]
100275a0:	push   eax
100275a1:	mov    DWORD PTR [esp+0x14],ecx
100275a5:	mov    edi,edx
100275a7:	call   0x10030c80
100275ac:	pop    ecx
100275ad:	and    DWORD PTR [esp+0x40],0x0
100275b2:	mov    eax,DWORD PTR [edi]
100275b4:	push   esi
100275b5:	lea    ecx,[esp+0x18]
100275b9:	push   ecx
100275ba:	push   eax
100275bb:	call   0x100353c0
100275c0:	mov    ecx,DWORD PTR [esi+0x70]
100275c3:	shr    ecx,0x2
100275c6:	test   cl,0x1
100275c9:	jne    0x100275cd
100275cb:	xor    al,al
100275cd:	test   al,al
100275cf:	je     0x10027601
100275d1:	xor    eax,eax
100275d3:	inc    eax
100275d4:	push   0x0
100275d6:	mov    DWORD PTR [ebx],eax
100275d8:	push   eax
100275d9:	lea    ecx,[esp+0x1c]
100275dd:	call   0x100012f4
100275e2:	mov    al,0x1
100275e4:	mov    ecx,DWORD PTR [esp+0x38]
100275e8:	mov    DWORD PTR fs:0x0,ecx
100275ef:	pop    ecx
100275f0:	pop    edi
100275f1:	pop    ebx
100275f2:	mov    ecx,DWORD PTR [esp+0x24]
100275f6:	xor    ecx,esp
100275f8:	call   0x100430d7
100275fd:	mov    esp,ebp
100275ff:	pop    ebp
10027600:	ret    
10027601:	mov    edi,DWORD PTR [edi]
10027603:	push   esi
10027604:	push   DWORD PTR [esp+0x14]
10027608:	push   edi
10027609:	call   0x100353c0
1002760e:	test   al,al
10027610:	je     0x1002761b
10027612:	and    DWORD PTR [ebx],0x0
10027615:	push   0x0
10027617:	push   0x1
10027619:	jmp    0x100275d9
1002761b:	push   esi
1002761c:	push   DWORD PTR [esp+0x14]
10027620:	push   0x10080e54
10027625:	call   0x10012e51
1002762a:	test   al,al
1002762c:	je     0x10027647
1002762e:	mov    DWORD PTR [ebx],0x2
10027634:	mov    bl,0x1
10027636:	push   0x0
10027638:	push   0x1
1002763a:	lea    ecx,[esp+0x1c]
1002763e:	call   0x100012f4
10027643:	mov    al,bl
10027645:	jmp    0x100275e4
10027647:	xor    bl,bl
10027649:	jmp    0x10027636
1002764b:	push   ebp
1002764c:	mov    ebp,esp
1002764e:	and    esp,0xfffffff8
10027651:	push   0xffffffff
10027653:	push   0x10063620
10027658:	mov    eax,fs:0x0
1002765e:	push   eax
1002765f:	sub    esp,0x20
10027662:	push   ebx
10027663:	mov    eax,ds:0x1007e030
10027668:	xor    eax,esp
1002766a:	push   eax
1002766b:	lea    eax,[esp+0x28]
1002766f:	mov    fs:0x0,eax
10027675:	mov    ebx,edx
10027677:	mov    eax,DWORD PTR [ebp+0x8]
1002767a:	sub    eax,0x0
1002767d:	je     0x100276c0
1002767f:	dec    eax
10027680:	je     0x10027695
10027682:	dec    eax
10027683:	jne    0x100276cc
10027685:	push   ecx
10027686:	mov    ecx,DWORD PTR [ebp+0xc]
10027689:	push   0x10080e54
1002768e:	call   0x10012eac
10027693:	jmp    0x100276cc
10027695:	lea    eax,[esp+0x8]
10027699:	push   eax
1002769a:	call   0x10030c80
1002769f:	pop    ecx
100276a0:	push   DWORD PTR [ebp+0xc]
100276a3:	and    DWORD PTR [esp+0x34],0x0
100276a8:	push   ebx
100276a9:	push   eax
100276aa:	push   DWORD PTR [esi]
100276ac:	call   0x10035210
100276b1:	push   0x0
100276b3:	push   0x1
100276b5:	lea    ecx,[esp+0x10]
100276b9:	call   0x100012f4
100276be:	jmp    0x100276cc
100276c0:	push   DWORD PTR [ebp+0xc]
100276c3:	push   ebx
100276c4:	push   ecx
100276c5:	push   DWORD PTR [esi]
100276c7:	call   0x10035210
100276cc:	mov    ecx,DWORD PTR [esp+0x28]
100276d0:	mov    DWORD PTR fs:0x0,ecx
100276d7:	pop    ecx
100276d8:	pop    ebx
100276d9:	mov    esp,ebp
100276db:	pop    ebp
100276dc:	ret    
100276dd:	push   ebp
100276de:	sub    esp,0xa4
100276e4:	lea    ebp,[esp-0x4]
100276e8:	mov    eax,ds:0x1007e030
100276ed:	xor    eax,ebp
100276ef:	mov    DWORD PTR [ebp+0xa4],eax
100276f5:	push   0x24
100276f7:	mov    eax,0x100651f6
100276fc:	call   0x10059ca8
10027701:	mov    eax,DWORD PTR [ebp+0xb0]
10027707:	xor    esi,esi
10027709:	mov    DWORD PTR [ebp-0x4],esi
1002770c:	push   DWORD PTR [eax]
1002770e:	lea    ecx,[ebp+0x88]
10027714:	mov    DWORD PTR [ebp-0x2c],eax
10027717:	call   0x10008b3e
1002771c:	lea    eax,[ebp-0x20]
1002771f:	push   esi
10027720:	push   eax
10027721:	mov    BYTE PTR [ebp-0x4],0x1
10027725:	call   0x10002892
1002772a:	pop    ecx
1002772b:	pop    ecx
1002772c:	mov    ecx,DWORD PTR [eax]
1002772e:	mov    ebx,ecx
10027730:	mov    DWORD PTR [eax],esi
10027732:	mov    DWORD PTR [ebp-0x1c],ebx
10027735:	lea    eax,[ebp-0x20]
10027738:	mov    BYTE PTR [ebp-0x4],0x2
1002773c:	call   0x100042aa
10027741:	push   ebx
10027742:	call   0x10002910
10027747:	test   al,al
10027749:	jne    0x10027759
1002774b:	lea    eax,[ebp-0x1c]
1002774e:	call   0x100042aa
10027753:	push   esi
10027754:	jmp    0x10027921
10027759:	lea    edi,[ebp+0x0]
1002775c:	call   0x10012e1c
10027761:	lea    eax,[ebp-0x20]
10027764:	push   eax
10027765:	mov    esi,edi
10027767:	mov    edx,ebx
10027769:	lea    ecx,[ebp+0x88]
1002776f:	mov    BYTE PTR [ebp-0x4],0x3
10027773:	call   0x10027563
10027778:	test   al,al
1002777a:	pop    ecx
1002777b:	je     0x1002790f
10027781:	call   0x1002fb70
10027786:	mov    edi,eax
10027788:	mov    eax,DWORD PTR [ebp+0x84]
1002778e:	cmp    eax,edx
10027790:	mov    DWORD PTR [ebp-0x28],edi
10027793:	mov    DWORD PTR [ebp-0x24],edx
10027796:	jb     0x100277ac
10027798:	ja     0x1002790f
1002779e:	mov    eax,DWORD PTR [ebp+0x80]
100277a4:	cmp    eax,edi
100277a6:	ja     0x1002790f
100277ac:	mov    eax,DWORD PTR [ebp+0x70]
100277af:	shr    eax,0xa
100277b2:	test   al,0x1
100277b4:	jne    0x1002781f
100277b6:	mov    eax,DWORD PTR [ebx]
100277b8:	push   0x5
100277ba:	push   eax
100277bb:	lea    ecx,[ebp-0x18]
100277be:	call   0x10035c50
100277c3:	mov    ecx,DWORD PTR [eax+0x4]
100277c6:	cmp    ecx,DWORD PTR [ebp-0x24]
100277c9:	jb     0x1002781f
100277cb:	ja     0x100277d3
100277cd:	mov    eax,DWORD PTR [eax]
100277cf:	cmp    eax,edi
100277d1:	jbe    0x1002781f
100277d3:	cmp    DWORD PTR [ebp+0xa0],0x10
100277da:	mov    eax,DWORD PTR [ebp+0x8c]
100277e0:	jae    0x100277e8
100277e2:	lea    eax,[ebp+0x8c]
100277e8:	push   eax
100277e9:	call   0x1000205f
100277ee:	push   0xc
100277f0:	call   0x10037b70
100277f5:	xor    bl,bl
100277f7:	pop    ecx
100277f8:	pop    ecx
100277f9:	lea    esi,[ebp+0x0]
100277fc:	call   0x10003431
10027801:	lea    eax,[ebp-0x1c]
10027804:	call   0x100042aa
10027809:	push   0x0
1002780b:	push   0x1
1002780d:	lea    ecx,[ebp+0x88]
10027813:	call   0x100012f4
10027818:	mov    al,bl
1002781a:	jmp    0x10027930
1002781f:	push   DWORD PTR [ebx]
10027821:	call   0x10035fc0
10027826:	mov    esi,0x2710
1002782b:	mov    ecx,esi
1002782d:	mul    ecx
1002782f:	add    eax,edi
10027831:	adc    edx,DWORD PTR [ebp-0x24]
10027834:	lea    ecx,[ebp-0x18]
10027837:	push   ecx
10027838:	mov    DWORD PTR [ebp-0x18],eax
1002783b:	mov    eax,DWORD PTR [ebx]
1002783d:	push   eax
1002783e:	push   0x5
10027840:	pop    ecx
10027841:	mov    DWORD PTR [ebp-0x14],edx
10027844:	call   0x10035d90
10027849:	mov    eax,DWORD PTR [ebp-0x2c]
1002784c:	push   DWORD PTR [eax]
1002784e:	call   0x1002681a
10027853:	test   al,al
10027855:	pop    ecx
10027856:	jne    0x100278e0
1002785c:	push   0x0
1002785e:	push   esi
1002785f:	push   DWORD PTR [ebp+0x7c]
10027862:	push   DWORD PTR [ebp+0x78]
10027865:	call   0x1005f740
1002786a:	push   DWORD PTR [ebx]
1002786c:	and    DWORD PTR [ebp-0x14],0x0
10027870:	mov    edi,eax
10027872:	mov    DWORD PTR [ebp-0x30],edi
10027875:	call   0x100362f0
1002787a:	lea    ecx,[ebp-0x30]
1002787d:	push   ecx
1002787e:	lea    ecx,[ebp-0x14]
10027881:	push   ecx
10027882:	mov    ecx,DWORD PTR [ebp-0x2c]
10027885:	push   eax
10027886:	push   edi
10027887:	push   DWORD PTR [ebp-0x20]
1002788a:	lea    eax,[ebp+0x88]
10027890:	push   eax
10027891:	lea    edx,[ebp+0x0]
10027894:	call   0x1002795b
10027899:	mov    eax,DWORD PTR [ebp-0x30]
1002789c:	push   0x0
1002789e:	cdq    
1002789f:	push   esi
100278a0:	push   edx
100278a1:	push   eax
100278a2:	call   0x1004f6a0
100278a7:	add    eax,DWORD PTR [ebp-0x28]
100278aa:	push   0x0
100278ac:	adc    edx,DWORD PTR [ebp-0x24]
100278af:	mov    DWORD PTR [ebp-0x28],eax
100278b2:	mov    eax,DWORD PTR [ebp-0x14]
100278b5:	mov    DWORD PTR [ebp-0x24],edx
100278b8:	cdq    
100278b9:	push   esi
100278ba:	push   edx
100278bb:	push   eax
100278bc:	call   0x1004f6a0
100278c1:	mov    DWORD PTR [ebp-0x18],eax
100278c4:	lea    eax,[ebp-0x28]
100278c7:	push   eax
100278c8:	push   DWORD PTR [ebp-0x20]
100278cb:	mov    DWORD PTR [ebp-0x14],edx
100278ce:	lea    edx,[ebp-0x18]
100278d1:	mov    esi,ebx
100278d3:	lea    ecx,[ebp+0x88]
100278d9:	call   0x1002764b
100278de:	jmp    0x10027908
100278e0:	cmp    DWORD PTR [ebp+0x50],0x10
100278e4:	mov    ecx,DWORD PTR [ebp+0x3c]
100278e7:	jae    0x100278ec
100278e9:	lea    ecx,[ebp+0x3c]
100278ec:	cmp    DWORD PTR [ebp+0xa0],0x10
100278f3:	mov    eax,DWORD PTR [ebp+0x8c]
100278f9:	jae    0x10027901
100278fb:	lea    eax,[ebp+0x8c]
10027901:	push   ecx
10027902:	push   eax
10027903:	call   0x1000205f
10027908:	mov    bl,0x1
1002790a:	jmp    0x100277f7
1002790f:	lea    esi,[ebp+0x0]
10027912:	call   0x10003431
10027917:	lea    eax,[ebp-0x1c]
1002791a:	call   0x100042aa
1002791f:	push   0x0
10027921:	push   0x1
10027923:	lea    ecx,[ebp+0x88]
10027929:	call   0x100012f4
1002792e:	xor    al,al
10027930:	mov    ecx,DWORD PTR [ebp-0xc]
10027933:	mov    DWORD PTR fs:0x0,ecx
1002793a:	pop    ecx
1002793b:	pop    edi
1002793c:	pop    esi
1002793d:	pop    ebx
1002793e:	mov    ecx,DWORD PTR [ebp+0xa4]
10027944:	xor    ecx,ebp
10027946:	call   0x100430d7
1002794b:	add    ebp,0xa8
10027951:	leave  
10027952:	ret    0x4
10027955:	mov    eax,0x1002792e
1002795a:	ret    
1002795b:	push   ebp
1002795c:	mov    ebp,esp
1002795e:	and    esp,0xfffffff8
10027961:	push   0xffffffff
10027963:	push   0x100651ad
10027968:	mov    eax,fs:0x0
1002796e:	push   eax
1002796f:	sub    esp,0x120
10027975:	mov    eax,ds:0x1007e030
1002797a:	xor    eax,esp
1002797c:	mov    DWORD PTR [esp+0x118],eax
10027983:	push   ebx
10027984:	push   esi
10027985:	push   edi
10027986:	mov    eax,ds:0x1007e030
1002798b:	xor    eax,esp
1002798d:	push   eax
1002798e:	lea    eax,[esp+0x130]
10027995:	mov    fs:0x0,eax
1002799b:	mov    eax,DWORD PTR [ebp+0x8]
1002799e:	mov    DWORD PTR [esp+0x20],eax
100279a2:	mov    eax,DWORD PTR [ebp+0x18]
100279a5:	mov    DWORD PTR [esp+0x24],eax
100279a9:	mov    eax,DWORD PTR [ebp+0x1c]
100279ac:	mov    esi,edx
100279ae:	mov    DWORD PTR [esp+0x44],eax
100279b2:	mov    edi,ecx
100279b4:	lea    eax,[esi+0x38]
100279b7:	push   eax
100279b8:	lea    ecx,[esp+0x84]
100279bf:	mov    DWORD PTR [esp+0x20],edi
100279c3:	call   0x100011ab
100279c8:	lea    eax,[esi+0x54]
100279cb:	xor    ebx,ebx
100279cd:	push   eax
100279ce:	lea    ecx,[esp+0xd8]
100279d5:	mov    DWORD PTR [esp+0x13c],ebx
100279dc:	call   0x100011ab
100279e1:	mov    BYTE PTR [esp+0x138],0x1
100279e9:	mov    eax,DWORD PTR [esi+0x70]
100279ec:	lea    edx,[esp+0x80]
100279f3:	lea    ecx,[esp+0x10c]
100279fa:	mov    DWORD PTR [esp+0x14],eax
100279fe:	call   0x10033eb0
10027a03:	push   0x1006cd08
10027a08:	lea    esi,[esp+0x110]
10027a0f:	mov    BYTE PTR [esp+0x13c],0x2
10027a17:	call   0x100065b3
10027a1c:	test   al,al
10027a1e:	pop    ecx
10027a1f:	jne    0x10027a33
10027a21:	push   0xffffffff
10027a23:	push   ebx
10027a24:	mov    eax,esi
10027a26:	push   eax
10027a27:	lea    ecx,[esp+0x8c]
10027a2e:	call   0x10001245
10027a33:	mov    eax,DWORD PTR [esp+0x14]
10027a37:	shr    eax,0x3
10027a3a:	test   al,0x1
10027a3c:	mov    esi,0x1006d6b8
10027a41:	je     0x10027b76
10027a47:	push   0x10071aa4
10027a4c:	push   0x7
10027a4e:	push   esi
10027a4f:	call   0x100042e3
10027a54:	add    esp,0xc
10027a57:	push   eax
10027a58:	lea    ecx,[esp+0xa0]
10027a5f:	call   0x100011d1
10027a64:	push   ebx
10027a65:	lea    eax,[esp+0xa0]
10027a6c:	push   eax
10027a6d:	lea    eax,[esp+0xc0]
10027a74:	push   eax
10027a75:	mov    BYTE PTR [esp+0x144],0x3
10027a7d:	mov    eax,DWORD PTR [edi]
10027a7f:	add    eax,0x18
10027a82:	call   0x100084c3
10027a87:	push   eax
10027a88:	push   DWORD PTR [esp+0x24]
10027a8c:	lea    ecx,[esp+0xf8]
10027a93:	mov    BYTE PTR [esp+0x140],0x4
10027a9b:	call   0x10028927
10027aa0:	mov    DWORD PTR [esp+0x10],eax
10027aa4:	push   0x57168eba
10027aa9:	push   0x10071ad0
10027aae:	mov    BYTE PTR [esp+0x140],0x5
10027ab6:	call   0x100042d1
10027abb:	push   0x5a22d096
10027ac0:	push   eax
10027ac1:	call   0x100042d1
10027ac6:	push   0x4618ab2
10027acb:	push   eax
10027acc:	call   0x100042d1
10027ad1:	push   eax
10027ad2:	push   0x5
10027ad4:	push   0x10071b08
10027ad9:	call   0x100042e3
10027ade:	add    esp,0x24
10027ae1:	push   eax
10027ae2:	lea    eax,[esp+0x84]
10027ae9:	push   eax
10027aea:	lea    eax,[esp+0x50]
10027aee:	push   eax
10027aef:	call   0x100064b5
10027af4:	add    esp,0xc
10027af7:	mov    BYTE PTR [esp+0x138],0x6
10027aff:	push   DWORD PTR [esp+0x10]
10027b03:	push   eax
10027b04:	lea    eax,[esp+0x30]
10027b08:	push   eax
10027b09:	call   0x100064fb
10027b0e:	add    esp,0xc
10027b11:	push   0xffffffff
10027b13:	push   ebx
10027b14:	push   eax
10027b15:	lea    ecx,[esp+0x8c]
10027b1c:	mov    BYTE PTR [esp+0x144],0x7
10027b24:	call   0x10001245
10027b29:	push   ebx
10027b2a:	push   0x1
10027b2c:	lea    ecx,[esp+0x30]
10027b30:	call   0x100012f4
10027b35:	push   ebx
10027b36:	push   0x1
10027b38:	lea    ecx,[esp+0x50]
10027b3c:	call   0x100012f4
10027b41:	push   ebx
10027b42:	push   0x1
10027b44:	lea    ecx,[esp+0xf8]
10027b4b:	call   0x100012f4
10027b50:	push   ebx
10027b51:	push   0x1
10027b53:	lea    ecx,[esp+0xc0]
10027b5a:	call   0x100012f4
10027b5f:	mov    BYTE PTR [esp+0x138],0x2
10027b67:	push   ebx
10027b68:	push   0x1
10027b6a:	lea    ecx,[esp+0xa4]
10027b71:	call   0x100012f4
10027b76:	mov    eax,DWORD PTR [esp+0x14]
10027b7a:	shr    eax,0x4
10027b7d:	test   al,0x1
10027b7f:	je     0x10027e12
10027b85:	push   ebx
10027b86:	lea    ecx,[esp+0xa0]
10027b8d:	mov    DWORD PTR [esp+0xb8],0xf
10027b98:	call   0x10001420
10027b9d:	push   ebx
10027b9e:	lea    ecx,[esp+0xf4]
10027ba5:	mov    DWORD PTR [esp+0x10c],0xf
10027bb0:	call   0x10001420
10027bb5:	push   ebx
10027bb6:	lea    ecx,[esp+0xbc]
10027bbd:	mov    DWORD PTR [esp+0x14],ebx
10027bc1:	mov    DWORD PTR [esp+0xd4],0xf
10027bcc:	call   0x10001420
10027bd1:	cmp    DWORD PTR [ebp+0xc],0x2
10027bd5:	mov    BYTE PTR [esp+0x138],0xa
10027bdd:	mov    eax,0x10071b10
10027be2:	je     0x10027be9
10027be4:	mov    eax,0x10071b14
10027be9:	push   eax
10027bea:	lea    ecx,[esp+0x2c]
10027bee:	call   0x100011d1
10027bf3:	push   0x72ec1ac
10027bf8:	push   0x10071b18
10027bfd:	mov    BYTE PTR [esp+0x140],0xb
10027c05:	call   0x100042d1
10027c0a:	push   eax
10027c0b:	push   0x7
10027c0d:	push   esi
10027c0e:	call   0x100042e3
10027c13:	add    esp,0x14
10027c16:	push   eax
10027c17:	lea    ecx,[esp+0x4c]
10027c1b:	call   0x100011d1
10027c20:	push   ebx
10027c21:	lea    eax,[esp+0x4c]
10027c25:	push   eax
10027c26:	lea    eax,[esp+0x6c]
10027c2a:	push   eax
10027c2b:	mov    BYTE PTR [esp+0x144],0xc
10027c33:	mov    eax,DWORD PTR [edi]
10027c35:	add    eax,0x18
10027c38:	call   0x100084c3
10027c3d:	push   DWORD PTR [esp+0x44]
10027c41:	mov    BYTE PTR [esp+0x13c],0xd
10027c49:	push   DWORD PTR [esp+0x28]
10027c4d:	lea    ecx,[esp+0xc0]
10027c54:	push   ecx
10027c55:	lea    ecx,[esp+0xfc]
10027c5c:	push   ecx
10027c5d:	lea    ecx,[esp+0xac]
10027c64:	push   ecx
10027c65:	lea    ecx,[esp+0x24]
10027c69:	push   ecx
10027c6a:	push   DWORD PTR [ebp+0x14]
10027c6d:	lea    ecx,[esp+0x44]
10027c71:	push   DWORD PTR [ebp+0x10]
10027c74:	mov    edx,eax
10027c76:	push   ecx
10027c77:	lea    ecx,[esp+0xf8]
10027c7e:	push   ecx
10027c7f:	lea    ecx,[esp+0xa8]
10027c86:	push   ecx
10027c87:	mov    ecx,DWORD PTR [esp+0x4c]
10027c8b:	call   0x100282ed
10027c90:	push   ebx
10027c91:	push   0x1
10027c93:	lea    ecx,[esp+0x6c]
10027c97:	mov    BYTE PTR [esp+0x23],al
10027c9b:	call   0x100012f4
10027ca0:	push   ebx
10027ca1:	push   0x1
10027ca3:	lea    ecx,[esp+0x50]
10027ca7:	call   0x100012f4
10027cac:	push   ebx
10027cad:	push   0x1
10027caf:	lea    ecx,[esp+0x30]
10027cb3:	mov    BYTE PTR [esp+0x140],0xa
10027cbb:	call   0x100012f4
10027cc0:	cmp    BYTE PTR [esp+0x1b],bl
10027cc4:	je     0x10027dd5
10027cca:	mov    eax,DWORD PTR [esp+0x10]
10027cce:	mov    ecx,eax
10027cd0:	shr    ecx,0x8
10027cd3:	test   cl,0x1
10027cd6:	je     0x10027da1
10027cdc:	push   0x24
10027cde:	call   0x100436de
10027ce3:	pop    ecx
10027ce4:	mov    DWORD PTR [esp+0x24],eax
10027ce8:	cmp    eax,ebx
10027cea:	mov    BYTE PTR [esp+0x138],0xe
10027cf2:	je     0x10027cfe
10027cf4:	push   eax
10027cf5:	call   0x10007668
10027cfa:	mov    esi,eax
10027cfc:	jmp    0x10027d00
10027cfe:	xor    esi,esi
10027d00:	mov    BYTE PTR [esp+0x138],0xa
10027d08:	mov    eax,DWORD PTR [edi+0xc]
10027d0b:	cmp    esi,eax
10027d0d:	je     0x10027d1e
10027d0f:	cmp    eax,ebx
10027d11:	je     0x10027d1e
10027d13:	mov    edi,eax
10027d15:	call   0x10009e94
10027d1a:	mov    edi,DWORD PTR [esp+0x1c]
10027d1e:	cmp    DWORD PTR [esp+0xd0],0x10
10027d26:	mov    eax,DWORD PTR [esp+0xbc]
10027d2d:	mov    DWORD PTR [edi+0xc],esi
10027d30:	jae    0x10027d39
10027d32:	lea    eax,[esp+0xbc]
10027d39:	mov    esi,DWORD PTR [esp+0x1c]
10027d3d:	mov    edi,DWORD PTR [esp+0xcc]
10027d44:	push   eax
10027d45:	mov    eax,DWORD PTR [esi+0xc]
10027d48:	call   0x100076b0
10027d4d:	mov    BYTE PTR [esi+0x14],0x1
10027d51:	xor    esi,esi
10027d53:	push   ebx
10027d54:	inc    esi
10027d55:	push   esi
10027d56:	lea    ecx,[esp+0xc0]
10027d5d:	call   0x100012f4
10027d62:	push   ebx
10027d63:	push   esi
10027d64:	lea    ecx,[esp+0xf8]
10027d6b:	call   0x100012f4
10027d70:	push   ebx
10027d71:	push   esi
10027d72:	lea    ecx,[esp+0xa4]
10027d79:	call   0x100012f4
10027d7e:	push   ebx
10027d7f:	push   esi
10027d80:	lea    ecx,[esp+0x114]
10027d87:	call   0x100012f4
10027d8c:	push   ebx
10027d8d:	push   esi
10027d8e:	lea    ecx,[esp+0xdc]
10027d95:	call   0x100012f4
10027d9a:	push   ebx
10027d9b:	push   esi
10027d9c:	jmp    0x100282b9
10027da1:	push   0xffffffff
10027da3:	mov    DWORD PTR [esp+0x18],eax
10027da7:	push   ebx
10027da8:	lea    eax,[esp+0xa4]
10027daf:	push   eax
10027db0:	lea    ecx,[esp+0x8c]
10027db7:	call   0x10001245
10027dbc:	push   0xffffffff
10027dbe:	push   ebx
10027dbf:	lea    eax,[esp+0xf8]
10027dc6:	push   eax
10027dc7:	lea    ecx,[esp+0xe0]
10027dce:	call   0x10001245
10027dd3:	jmp    0x10027ddd
10027dd5:	push   0x5
10027dd7:	call   0x10037b70
10027ddc:	pop    ecx
10027ddd:	push   ebx
10027dde:	push   0x1
10027de0:	lea    ecx,[esp+0xc0]
10027de7:	call   0x100012f4
10027dec:	push   ebx
10027ded:	push   0x1
10027def:	lea    ecx,[esp+0xf8]
10027df6:	call   0x100012f4
10027dfb:	push   ebx
10027dfc:	push   0x1
10027dfe:	lea    ecx,[esp+0xa4]
10027e05:	mov    BYTE PTR [esp+0x140],0x2
10027e0d:	call   0x100012f4
10027e12:	mov    eax,DWORD PTR [esp+0x14]
10027e16:	shr    eax,0x5
10027e19:	test   al,0x1
10027e1b:	je     0x1002819a
10027e21:	push   0x1006cd08
10027e26:	lea    esi,[esp+0x84]
10027e2d:	call   0x100065b3
10027e32:	test   al,al
10027e34:	pop    ecx
10027e35:	jne    0x10028298
10027e3b:	cmp    DWORD PTR [ebp+0xc],0x2
10027e3f:	jne    0x10027ebc
10027e41:	cmp    DWORD PTR [esp+0x98],0x10
10027e49:	mov    eax,DWORD PTR [esp+0x84]
10027e50:	jae    0x10027e59
10027e52:	lea    eax,[esp+0x84]
10027e59:	push   eax
10027e5a:	lea    ecx,[esp+0x2c]
10027e5e:	call   0x100011d1
10027e63:	push   0x1f4
10027e68:	mov    BYTE PTR [esp+0x13c],0xf
10027e70:	push   DWORD PTR ds:0x10080ee4
10027e76:	call   DWORD PTR ds:0x10066084
10027e7c:	test   eax,eax
10027e7e:	jne    0x10027ea8
10027e80:	mov    eax,ds:0x10080edc
10027e85:	mov    edi,0x10080ed8
10027e8a:	push   eax
10027e8b:	mov    ecx,edi
10027e8d:	push   ecx
10027e8e:	lea    eax,[esp+0x30]
10027e92:	push   eax
10027e93:	call   0x1001975e
10027e98:	push   DWORD PTR ds:0x10080ee4
10027e9e:	call   DWORD PTR ds:0x10066094
10027ea4:	mov    edi,DWORD PTR [esp+0x1c]
10027ea8:	push   ebx
10027ea9:	push   0x1
10027eab:	lea    ecx,[esp+0x30]
10027eaf:	mov    BYTE PTR [esp+0x140],0x2
10027eb7:	call   0x100012f4
10027ebc:	cmp    DWORD PTR [esp+0x98],0x10
10027ec4:	mov    ecx,DWORD PTR [esp+0x84]
10027ecb:	jae    0x10027ed4
10027ecd:	lea    ecx,[esp+0x84]
10027ed4:	mov    eax,DWORD PTR [esp+0x20]
10027ed8:	cmp    DWORD PTR [eax+0x18],0x10
10027edc:	jb     0x10027ee3
10027ede:	mov    eax,DWORD PTR [eax+0x4]
10027ee1:	jmp    0x10027ee6
10027ee3:	add    eax,0x4
10027ee6:	push   ecx
10027ee7:	push   eax
10027ee8:	call   0x1000205f
10027eed:	push   0x3fb2dc98
10027ef2:	push   0x10071b48
10027ef7:	call   0x100042d1
10027efc:	push   eax
10027efd:	push   0xc
10027eff:	push   0x10071b7c
10027f04:	call   0x100042e3
10027f09:	add    esp,0x1c
10027f0c:	push   eax
10027f0d:	lea    ecx,[esp+0xa0]
10027f14:	call   0x100011d1
10027f19:	push   0x10071b8c
10027f1e:	push   0x3
10027f20:	push   0x10071bc0
10027f25:	mov    BYTE PTR [esp+0x144],0x10
10027f2d:	call   0x100042e3
10027f32:	add    esp,0xc
10027f35:	push   eax
10027f36:	lea    ecx,[esp+0x4c]
10027f3a:	call   0x100011d1
10027f3f:	push   0x134fb9ac
10027f44:	push   0x10071bc4
10027f49:	mov    BYTE PTR [esp+0x140],0x11
10027f51:	call   0x100042d1
10027f56:	push   0x49fc79f6
10027f5b:	push   eax
10027f5c:	call   0x100042d1
10027f61:	push   eax
10027f62:	push   0x8
10027f64:	push   0x10071bf8
10027f69:	call   0x100042e3
10027f6e:	add    esp,0x1c
10027f71:	push   eax
10027f72:	lea    ecx,[esp+0x2c]
10027f76:	call   0x100011d1
10027f7b:	lea    eax,[esp+0x9c]
10027f82:	push   eax
10027f83:	lea    eax,[esp+0x4c]
10027f87:	mov    BYTE PTR [esp+0x13c],0x12
10027f8f:	add    edi,0x8
10027f92:	push   eax
10027f93:	lea    ecx,[esp+0x30]
10027f97:	mov    DWORD PTR [esp+0x2c],edi
10027f9b:	call   0x10009612
10027fa0:	pop    ecx
10027fa1:	pop    ecx
10027fa2:	mov    ebx,eax
10027fa4:	call   0x1002692a
10027fa9:	xor    edi,edi
10027fab:	xor    ebx,ebx
10027fad:	push   edi
10027fae:	inc    ebx
10027faf:	push   ebx
10027fb0:	lea    ecx,[esp+0x30]
10027fb4:	call   0x100012f4
10027fb9:	push   edi
10027fba:	push   ebx
10027fbb:	lea    ecx,[esp+0x50]
10027fbf:	call   0x100012f4
10027fc4:	push   edi
10027fc5:	push   ebx
10027fc6:	lea    ecx,[esp+0xa4]
10027fcd:	mov    BYTE PTR [esp+0x140],0x2
10027fd5:	call   0x100012f4
10027fda:	push   0x10071c04
10027fdf:	push   0x7
10027fe1:	push   0x1006d6b8
10027fe6:	call   0x100042e3
10027feb:	add    esp,0xc
10027fee:	push   eax
10027fef:	lea    ecx,[esp+0x2c]
10027ff3:	call   0x100011d1
10027ff8:	mov    BYTE PTR [esp+0x138],0x13
10028000:	push   edi
10028001:	lea    eax,[esp+0x2c]
10028005:	push   eax
10028006:	lea    eax,[esp+0xa4]
1002800d:	push   eax
1002800e:	mov    eax,DWORD PTR [esp+0x28]
10028012:	mov    eax,DWORD PTR [eax]
10028014:	add    eax,0x18
10028017:	call   0x100084c3
1002801c:	push   edi
1002801d:	push   ebx
1002801e:	lea    ecx,[esp+0x30]
10028022:	mov    BYTE PTR [esp+0x140],0x15
1002802a:	call   0x100012f4
1002802f:	push   0x1006cd08
10028034:	lea    esi,[esp+0xa0]
1002803b:	call   0x100065b3
10028040:	test   al,al
10028042:	pop    ecx
10028043:	jne    0x1002807d
10028045:	push   0x1006cce8
1002804a:	lea    ecx,[esp+0x4c]
1002804e:	call   0x100011d1
10028053:	push   edi
10028054:	mov    eax,esi
10028056:	push   eax
10028057:	lea    ebx,[esp+0x50]
1002805b:	mov    edi,0x10080d54
10028060:	mov    BYTE PTR [esp+0x140],0x16
10028068:	call   0x10019a00
1002806d:	push   0x0
1002806f:	push   0x1
10028071:	mov    ecx,ebx
10028073:	call   0x100012f4
10028078:	xor    ebx,ebx
1002807a:	inc    ebx
1002807b:	xor    edi,edi
1002807d:	push   edi
1002807e:	push   ebx
1002807f:	lea    ecx,[esp+0xa4]
10028086:	mov    BYTE PTR [esp+0x140],0x2
1002808e:	call   0x100012f4
10028093:	push   0x10071c28
10028098:	push   0x8
1002809a:	push   0x10071c4c
1002809f:	call   0x100042e3
100280a4:	add    esp,0xc
100280a7:	push   eax
100280a8:	lea    ecx,[esp+0x2c]
100280ac:	call   0x100011d1
100280b1:	mov    BYTE PTR [esp+0x138],0x17
100280b9:	mov    esi,DWORD PTR [esp+0x24]
100280bd:	mov    eax,DWORD PTR [esi]
100280bf:	push   edi
100280c0:	lea    ecx,[esp+0x2c]
100280c4:	push   ecx
100280c5:	lea    edx,[eax+0x20]
100280c8:	lea    ecx,[esp+0x88]
100280cf:	call   0x10007f58
100280d4:	push   edi
100280d5:	push   ebx
100280d6:	lea    ecx,[esp+0x30]
100280da:	mov    BYTE PTR [esp+0x140],0x2
100280e2:	call   0x100012f4
100280e7:	push   0x1006cd0c
100280ec:	lea    ecx,[esp+0x4c]
100280f0:	call   0x100011d1
100280f5:	push   0x10071c58
100280fa:	push   0xe
100280fc:	push   0x1006d9c0
10028101:	mov    BYTE PTR [esp+0x144],0x18
10028109:	call   0x100042e3
1002810e:	add    esp,0xc
10028111:	push   eax
10028112:	lea    ecx,[esp+0x2c]
10028116:	call   0x100011d1
1002811b:	mov    BYTE PTR [esp+0x138],0x19
10028123:	mov    eax,DWORD PTR [esi]
10028125:	push   edi
10028126:	lea    ecx,[esp+0x2c]
1002812a:	push   ecx
1002812b:	lea    edx,[eax+0x20]
1002812e:	lea    ecx,[esp+0x50]
10028132:	call   0x10007f58
10028137:	push   edi
10028138:	push   ebx
10028139:	lea    ecx,[esp+0x30]
1002813d:	call   0x100012f4
10028142:	push   edi
10028143:	push   ebx
10028144:	lea    ecx,[esp+0x50]
10028148:	mov    BYTE PTR [esp+0x140],0x2
10028150:	call   0x100012f4
10028155:	mov    eax,DWORD PTR [esp+0x1c]
10028159:	push   0x1006cd08
1002815e:	lea    esi,[esp+0xd8]
10028165:	mov    BYTE PTR [eax+0x14],bl
10028168:	call   0x100065b3
1002816d:	test   al,al
1002816f:	pop    ecx
10028170:	jne    0x10028281
10028176:	mov    eax,DWORD PTR [esp+0x14]
1002817a:	sar    eax,0x6
1002817d:	and    eax,0x3
10028180:	push   eax
10028181:	lea    eax,[esp+0x84]
10028188:	push   eax
10028189:	mov    ebx,esi
1002818b:	mov    edi,0x10080ee8
10028190:	call   0x10019a00
10028195:	jmp    0x10028281
1002819a:	mov    eax,DWORD PTR [esp+0x20]
1002819e:	cmp    DWORD PTR [eax+0x18],0x10
100281a2:	jb     0x100281a9
100281a4:	mov    eax,DWORD PTR [eax+0x4]
100281a7:	jmp    0x100281ac
100281a9:	add    eax,0x4
100281ac:	push   eax
100281ad:	call   0x1000205f
100281b2:	mov    eax,DWORD PTR [esp+0x18]
100281b6:	sar    eax,0x6
100281b9:	and    eax,0x3
100281bc:	pop    ecx
100281bd:	mov    DWORD PTR [esp+0x10],eax
100281c1:	je     0x10028283
100281c7:	push   0x10071c80
100281cc:	push   0x7
100281ce:	push   esi
100281cf:	call   0x100042e3
100281d4:	add    esp,0xc
100281d7:	push   eax
100281d8:	lea    ecx,[esp+0x2c]
100281dc:	call   0x100011d1
100281e1:	lea    eax,[esp+0x28]
100281e5:	push   eax
100281e6:	mov    BYTE PTR [esp+0x13c],0x1a
100281ee:	mov    eax,DWORD PTR [edi+0x4]
100281f1:	add    eax,0x18
100281f4:	push   eax
100281f5:	call   0x10008261
100281fa:	push   ebx
100281fb:	push   0x1
100281fd:	lea    ecx,[esp+0x30]
10028201:	mov    BYTE PTR [esp+0x140],0x2
10028209:	call   0x100012f4
1002820e:	push   DWORD PTR [esp+0x10]
10028212:	lea    ebx,[esp+0xd8]
10028219:	push   DWORD PTR [esp+0x24]
1002821d:	mov    edi,0x10080ee8
10028222:	call   0x10019a00
10028227:	cmp    DWORD PTR [esp+0x10],0x1
1002822c:	jne    0x10028281
1002822e:	push   0x10071cb4
10028233:	push   0x7
10028235:	push   0x1006d6b8
1002823a:	call   0x100042e3
1002823f:	add    esp,0xc
10028242:	push   eax
10028243:	lea    ecx,[esp+0x2c]
10028247:	call   0x100011d1
1002824c:	push   0x0
1002824e:	lea    eax,[esp+0x2c]
10028252:	push   eax
10028253:	mov    eax,DWORD PTR [esp+0x24]
10028257:	mov    BYTE PTR [esp+0x140],0x1b
1002825f:	mov    edx,DWORD PTR [eax+0x4]
10028262:	add    edx,0x18
10028265:	mov    ecx,ebx
10028267:	call   0x10007f58
1002826c:	push   0x0
1002826e:	push   0x1
10028270:	lea    ecx,[esp+0x30]
10028274:	mov    BYTE PTR [esp+0x140],0x2
1002827c:	call   0x100012f4
10028281:	xor    ebx,ebx
10028283:	mov    eax,DWORD PTR [esp+0x14]
10028287:	shr    eax,0x9
1002828a:	test   al,0x1
1002828c:	je     0x10028298
1002828e:	push   0x10080f30
10028293:	call   0x1001a7a8
10028298:	push   ebx
10028299:	push   0x1
1002829b:	lea    ecx,[esp+0x114]
100282a2:	call   0x100012f4
100282a7:	push   ebx
100282a8:	push   0x1
100282aa:	lea    ecx,[esp+0xdc]
100282b1:	call   0x100012f4
100282b6:	push   ebx
100282b7:	push   0x1
100282b9:	lea    ecx,[esp+0x88]
100282c0:	call   0x100012f4
100282c5:	mov    al,0x1
100282c7:	mov    ecx,DWORD PTR [esp+0x130]
100282ce:	mov    DWORD PTR fs:0x0,ecx
100282d5:	pop    ecx
100282d6:	pop    edi
100282d7:	pop    esi
100282d8:	pop    ebx
100282d9:	mov    ecx,DWORD PTR [esp+0x118]
100282e0:	xor    ecx,esp
100282e2:	call   0x100430d7
100282e7:	mov    esp,ebp
100282e9:	pop    ebp
100282ea:	ret    0x18
100282ed:	push   0x138
100282f2:	mov    eax,0x10064ddd
100282f7:	call   0x10059d14
100282fc:	mov    eax,DWORD PTR [ebp+0xc]
100282ff:	mov    ebx,DWORD PTR [ebp+0x8]
10028302:	and    DWORD PTR [ebp-0x4],0x0
10028306:	mov    DWORD PTR [ebp-0xc0],eax
1002830c:	mov    eax,DWORD PTR [ebp+0x10]
1002830f:	mov    DWORD PTR [ebp-0xc4],eax
10028315:	mov    eax,DWORD PTR [ebp+0x1c]
10028318:	mov    DWORD PTR [ebp-0x104],eax
1002831e:	mov    eax,DWORD PTR [ebp+0x20]
10028321:	mov    DWORD PTR [ebp-0x108],eax
10028327:	mov    eax,DWORD PTR [ebp+0x24]
1002832a:	mov    DWORD PTR [ebp-0x100],eax
10028330:	mov    eax,DWORD PTR [ebp+0x28]
10028333:	mov    DWORD PTR [ebp-0xf8],eax
10028339:	mov    eax,DWORD PTR [ebp+0x2c]
1002833c:	mov    DWORD PTR [ebp-0xf4],eax
10028342:	mov    eax,DWORD PTR [ebp+0x30]
10028345:	mov    edi,ecx
10028347:	lea    ecx,[ebp-0xb8]
1002834d:	mov    esi,edx
1002834f:	mov    DWORD PTR [ebp-0xfc],eax
10028355:	call   0x10018612
1002835a:	cmp    DWORD PTR [ebp-0xa0],0x10
10028361:	mov    ecx,DWORD PTR [ebp-0xb4]
10028367:	jae    0x1002836f
10028369:	lea    ecx,[ebp-0xb4]
1002836f:	cmp    DWORD PTR [edi+0x18],0x10
10028373:	jb     0x1002837a
10028375:	mov    eax,DWORD PTR [edi+0x4]
10028378:	jmp    0x1002837d
1002837a:	lea    eax,[edi+0x4]
1002837d:	push   ecx
1002837e:	push   eax
1002837f:	call   0x1000205f
10028384:	pop    ecx
10028385:	pop    ecx
10028386:	push   0x0
10028388:	lea    ecx,[ebp-0x9c]
1002838e:	mov    DWORD PTR [ebp-0x84],0xf
10028398:	call   0x10001420
1002839d:	push   0x25ecab76
100283a2:	push   0x10071ce4
100283a7:	mov    BYTE PTR [ebp-0x4],0x2
100283ab:	call   0x100042d1
100283b0:	pop    ecx
100283b1:	pop    ecx
100283b2:	push   0x2cb616b6
100283b7:	push   eax
100283b8:	call   0x100042d1
100283bd:	pop    ecx
100283be:	pop    ecx
100283bf:	push   eax
100283c0:	push   0x6
100283c2:	push   0x10071d24
100283c7:	call   0x100042e3
100283cc:	add    esp,0xc
100283cf:	push   eax
100283d0:	lea    eax,[ebp-0x9c]
100283d6:	push   eax
100283d7:	call   0x10004120
100283dc:	push   edi
100283dd:	lea    ecx,[ebp-0xf0]
100283e3:	call   0x10031180
100283e8:	pop    ecx
100283e9:	mov    BYTE PTR [ebp-0x4],0x3
100283ed:	cmp    DWORD PTR [eax+0x18],0x10
100283f1:	jb     0x100283f8
100283f3:	mov    eax,DWORD PTR [eax+0x4]
100283f6:	jmp    0x100283fb
100283f8:	add    eax,0x4
100283fb:	push   eax
100283fc:	lea    eax,[ebp-0x9c]
10028402:	push   eax
10028403:	call   0x10004120
10028408:	push   0x0
1002840a:	push   0x1
1002840c:	lea    ecx,[ebp-0xf0]
10028412:	mov    BYTE PTR [ebp-0x4],0x2
10028416:	call   0x100012f4
1002841b:	mov    edi,0x1006cd08
10028420:	push   edi
10028421:	call   0x100065b3
10028426:	test   al,al
10028428:	pop    ecx
10028429:	jne    0x10028498
1002842b:	push   0x7d9d1790
10028430:	push   0x10071d2c
10028435:	call   0x100042d1
1002843a:	pop    ecx
1002843b:	pop    ecx
1002843c:	push   eax
1002843d:	push   0x6
1002843f:	push   0x10071d58
10028444:	call   0x100042e3
10028449:	add    esp,0xc
1002844c:	push   eax
1002844d:	lea    eax,[ebp-0x9c]
10028453:	push   eax
10028454:	call   0x10004120
10028459:	push   esi
1002845a:	lea    ecx,[ebp-0xf0]
10028460:	call   0x10031180
10028465:	pop    ecx
10028466:	mov    BYTE PTR [ebp-0x4],0x4
1002846a:	cmp    DWORD PTR [eax+0x18],0x10
1002846e:	jb     0x10028475
10028470:	mov    eax,DWORD PTR [eax+0x4]
10028473:	jmp    0x10028478
10028475:	add    eax,0x4
10028478:	push   eax
10028479:	lea    eax,[ebp-0x9c]
1002847f:	push   eax
10028480:	call   0x10004120
10028485:	push   0x0
10028487:	push   0x1
10028489:	lea    ecx,[ebp-0xf0]
1002848f:	mov    BYTE PTR [ebp-0x4],0x2
10028493:	call   0x100012f4
10028498:	push   edi
10028499:	mov    esi,ebx
1002849b:	call   0x100065b3
100284a0:	test   al,al
100284a2:	pop    ecx
100284a3:	jne    0x10028505
100284a5:	push   0x10071d60
100284aa:	push   0x6
100284ac:	push   0x10071d90
100284b1:	call   0x100042e3
100284b6:	add    esp,0xc
100284b9:	push   eax
100284ba:	lea    eax,[ebp-0x9c]
100284c0:	push   eax
100284c1:	call   0x10004120
100284c6:	push   ebx
100284c7:	lea    ecx,[ebp-0xf0]
100284cd:	call   0x10031180
100284d2:	pop    ecx
100284d3:	mov    BYTE PTR [ebp-0x4],0x5
100284d7:	cmp    DWORD PTR [eax+0x18],0x10
100284db:	jb     0x100284e2
100284dd:	mov    eax,DWORD PTR [eax+0x4]
100284e0:	jmp    0x100284e5
100284e2:	add    eax,0x4
100284e5:	push   eax
100284e6:	lea    eax,[ebp-0x9c]
100284ec:	push   eax
100284ed:	call   0x10004120
100284f2:	push   0x0
100284f4:	push   0x1
100284f6:	lea    ecx,[ebp-0xf0]
100284fc:	mov    BYTE PTR [ebp-0x4],0x2
10028500:	call   0x100012f4
10028505:	mov    esi,DWORD PTR [ebp-0xc0]
1002850b:	push   edi
1002850c:	call   0x100065b3
10028511:	test   al,al
10028513:	pop    ecx
10028514:	jne    0x100285a1
1002851a:	push   0x3cab59c8
1002851f:	push   0x10071d98
10028524:	call   0x100042d1
10028529:	pop    ecx
1002852a:	pop    ecx
1002852b:	push   0x267c8d2e
10028530:	push   eax
10028531:	call   0x100042d1
10028536:	pop    ecx
10028537:	pop    ecx
10028538:	push   0x37a6c73a
1002853d:	push   eax
1002853e:	call   0x100042d1
10028543:	pop    ecx
10028544:	pop    ecx
10028545:	push   eax
10028546:	push   0x6
10028548:	push   0x10071dd0
1002854d:	call   0x100042e3
10028552:	add    esp,0xc
10028555:	push   eax
10028556:	lea    eax,[ebp-0x9c]
1002855c:	push   eax
1002855d:	call   0x10004120
10028562:	push   esi
10028563:	lea    ecx,[ebp-0xf0]
10028569:	call   0x10031180
1002856e:	pop    ecx
1002856f:	mov    BYTE PTR [ebp-0x4],0x6
10028573:	cmp    DWORD PTR [eax+0x18],0x10
10028577:	jb     0x1002857e
10028579:	mov    eax,DWORD PTR [eax+0x4]
1002857c:	jmp    0x10028581
1002857e:	add    eax,0x4
10028581:	push   eax
10028582:	lea    eax,[ebp-0x9c]
10028588:	push   eax
10028589:	call   0x10004120
1002858e:	push   0x0
10028590:	push   0x1
10028592:	lea    ecx,[ebp-0xf0]
10028598:	mov    BYTE PTR [ebp-0x4],0x2
1002859c:	call   0x100012f4
100285a1:	mov    esi,DWORD PTR [ebp-0xc4]
100285a7:	push   edi
100285a8:	call   0x100065b3
100285ad:	test   al,al
100285af:	pop    ecx
100285b0:	jne    0x1002864a
100285b6:	push   0x7104f20
100285bb:	push   0x10071dd8
100285c0:	call   0x100042d1
100285c5:	pop    ecx
100285c6:	pop    ecx
100285c7:	push   0xe5a066
100285cc:	push   eax
100285cd:	call   0x100042d1
100285d2:	pop    ecx
100285d3:	pop    ecx
100285d4:	push   0x5ad9a0a4
100285d9:	push   eax
100285da:	call   0x100042d1
100285df:	pop    ecx
100285e0:	pop    ecx
100285e1:	push   0x67ef19c4
100285e6:	push   eax
100285e7:	call   0x100042d1
100285ec:	pop    ecx
100285ed:	pop    ecx
100285ee:	push   eax
100285ef:	push   0x6
100285f1:	push   0x10071e14
100285f6:	call   0x100042e3
100285fb:	add    esp,0xc
100285fe:	push   eax
100285ff:	lea    eax,[ebp-0x9c]
10028605:	push   eax
10028606:	call   0x10004120
1002860b:	push   esi
1002860c:	lea    ecx,[ebp-0xf0]
10028612:	call   0x10031180
10028617:	pop    ecx
10028618:	mov    BYTE PTR [ebp-0x4],0x7
1002861c:	cmp    DWORD PTR [eax+0x18],0x10
10028620:	jb     0x10028627
10028622:	mov    eax,DWORD PTR [eax+0x4]
10028625:	jmp    0x1002862a
10028627:	add    eax,0x4
1002862a:	push   eax
1002862b:	lea    eax,[ebp-0x9c]
10028631:	push   eax
10028632:	call   0x10004120
10028637:	push   0x0
10028639:	push   0x1
1002863b:	lea    ecx,[ebp-0xf0]
10028641:	mov    BYTE PTR [ebp-0x4],0x2
10028645:	call   0x100012f4
1002864a:	push   DWORD PTR [ebp+0x18]
1002864d:	mov    esi,0x10080f30
10028652:	sub    esp,0xc
10028655:	mov    ebx,esp
10028657:	mov    DWORD PTR [ebp-0xc8],esp
1002865d:	call   0x1001a803
10028662:	lea    ecx,[ebp-0xf0]
10028668:	call   0x1001a877
1002866d:	add    esp,0x10
10028670:	push   0xffffffff
10028672:	xor    ebx,ebx
10028674:	push   ebx
10028675:	lea    esi,[ebp-0x9c]
1002867b:	mov    BYTE PTR [ebp-0x4],0x8
1002867f:	call   0x10004cc2
10028684:	push   ebx
10028685:	push   0x1
10028687:	lea    ecx,[ebp-0xf0]
1002868d:	mov    BYTE PTR [ebp-0x4],0x2
10028691:	call   0x100012f4
10028696:	push   0x5e23493c
1002869b:	push   0x10071e1c
100286a0:	call   0x100042d1
100286a5:	pop    ecx
100286a6:	pop    ecx
100286a7:	push   0x518d9760
100286ac:	push   eax
100286ad:	call   0x100042d1
100286b2:	pop    ecx
100286b3:	pop    ecx
100286b4:	push   0x3a72e438
100286b9:	push   eax
100286ba:	call   0x100042d1
100286bf:	pop    ecx
100286c0:	pop    ecx
100286c1:	push   eax
100286c2:	push   0x5
100286c4:	push   0x10071e58
100286c9:	call   0x100042e3
100286ce:	add    esp,0xc
100286d1:	push   eax
100286d2:	mov    eax,esi
100286d4:	push   eax
100286d5:	call   0x10004120
100286da:	push   0xa
100286dc:	lea    eax,[ebp-0x80]
100286df:	push   eax
100286e0:	push   DWORD PTR [ebp+0x14]
100286e3:	call   0x10045d96
100286e8:	add    esp,0xc
100286eb:	push   eax
100286ec:	mov    eax,esi
100286ee:	push   eax
100286ef:	call   0x10004120
100286f4:	cmp    DWORD PTR [ebp-0x84],0x10
100286fb:	mov    eax,DWORD PTR [ebp-0x98]
10028701:	jae    0x10028709
10028703:	lea    eax,[ebp-0x98]
10028709:	push   eax
1002870a:	lea    ecx,[ebp-0xf0]
10028710:	call   0x100011d1
10028715:	mov    BYTE PTR [ebp-0x4],0x9
10028719:	push   DWORD PTR ds:0x10080d88
1002871f:	lea    ecx,[ebp-0x144]
10028725:	call   0x100011d1
1002872a:	push   0x960
1002872f:	lea    eax,[ebp-0xc8]
10028735:	push   eax
10028736:	lea    eax,[ebp-0xf0]
1002873c:	push   eax
1002873d:	lea    eax,[ebp-0xb8]
10028743:	push   eax
10028744:	lea    eax,[ebp-0xc4]
1002874a:	push   eax
1002874b:	lea    edx,[ebp-0x144]
10028751:	mov    BYTE PTR [ebp-0x4],0xa
10028755:	call   0x10031060
1002875a:	mov    ecx,DWORD PTR [eax]
1002875c:	mov    esi,ecx
1002875e:	add    esp,0x14
10028761:	mov    DWORD PTR [ebp-0xc0],esi
10028767:	mov    DWORD PTR [eax],ebx
10028769:	mov    DWORD PTR [ebp-0x128],esi
1002876f:	push   DWORD PTR [ebp-0xc4]
10028775:	call   0x100430d2
1002877a:	pop    ecx
1002877b:	push   ebx
1002877c:	push   0x1
1002877e:	lea    ecx,[ebp-0x144]
10028784:	call   0x100012f4
10028789:	push   ebx
1002878a:	push   0x1
1002878c:	lea    ecx,[ebp-0xf0]
10028792:	mov    BYTE PTR [ebp-0x4],0xd
10028796:	call   0x100012f4
1002879b:	cmp    esi,ebx
1002879d:	jne    0x100287fc
1002879f:	call   0x10018591
100287a4:	cmp    DWORD PTR [ebp-0xa0],0x10
100287ab:	mov    eax,DWORD PTR [ebp-0xb4]
100287b1:	jae    0x100287b9
100287b3:	lea    eax,[ebp-0xb4]
100287b9:	push   eax
100287ba:	call   0x1000205f
100287bf:	pop    ecx
100287c0:	push   0x5
100287c2:	call   0x10037b70
100287c7:	pop    ecx
100287c8:	push   ebx
100287c9:	call   0x100430d2
100287ce:	mov    BYTE PTR [ebp-0xb9],bl
100287d4:	pop    ecx
100287d5:	push   ebx
100287d6:	push   0x1
100287d8:	lea    ecx,[ebp-0x9c]
100287de:	call   0x100012f4
100287e3:	push   ebx
100287e4:	push   0x1
100287e6:	lea    ecx,[ebp-0xb8]
100287ec:	call   0x100012f4
100287f1:	mov    al,BYTE PTR [ebp-0xb9]
100287f7:	jmp    0x1002891f
100287fc:	mov    eax,DWORD PTR [ebp-0xc8]
10028802:	mov    DWORD PTR [ebp-0xd0],eax
10028808:	mov    eax,DWORD PTR [ebp-0xc0]
1002880e:	lea    edi,[ebp-0x124]
10028814:	lea    esi,[ebp-0xd4]
1002881a:	mov    DWORD PTR [ebp-0xd4],ebx
10028820:	mov    DWORD PTR [ebp-0xcc],eax
10028826:	call   0x100377c0
1002882b:	cmp    DWORD PTR [eax+0x18],0x10
1002882f:	jb     0x10028836
10028831:	mov    eax,DWORD PTR [eax+0x4]
10028834:	jmp    0x10028839
10028836:	add    eax,0x4
10028839:	push   eax
1002883a:	call   0x10045f55
1002883f:	pop    ecx
10028840:	mov    ecx,DWORD PTR [ebp-0x104]
10028846:	push   ebx
10028847:	mov    DWORD PTR [ecx],eax
10028849:	push   0x1
1002884b:	lea    ecx,[ebp-0x124]
10028851:	call   0x100012f4
10028856:	lea    edi,[ebp-0x124]
1002885c:	lea    esi,[ebp-0xd4]
10028862:	call   0x100377c0
10028867:	mov    ecx,DWORD PTR [ebp-0x108]
1002886d:	push   0xffffffff
1002886f:	push   ebx
10028870:	push   eax
10028871:	mov    BYTE PTR [ebp-0x4],0xe
10028875:	call   0x10001245
1002887a:	push   ebx
1002887b:	push   0x1
1002887d:	mov    ecx,edi
1002887f:	mov    BYTE PTR [ebp-0x4],0xd
10028883:	call   0x100012f4
10028888:	lea    edi,[ebp-0x124]
1002888e:	call   0x100377c0
10028893:	mov    ecx,DWORD PTR [ebp-0x100]
10028899:	push   0xffffffff
1002889b:	push   ebx
1002889c:	push   eax
1002889d:	mov    BYTE PTR [ebp-0x4],0xf
100288a1:	call   0x10001245
100288a6:	push   ebx
100288a7:	push   0x1
100288a9:	mov    ecx,edi
100288ab:	mov    BYTE PTR [ebp-0x4],0xd
100288af:	call   0x100012f4
100288b4:	lea    edi,[ebp-0x124]
100288ba:	call   0x100377c0
100288bf:	mov    ecx,DWORD PTR [ebp-0xf8]
100288c5:	push   0xffffffff
100288c7:	push   ebx
100288c8:	push   eax
100288c9:	mov    BYTE PTR [ebp-0x4],0x10
100288cd:	call   0x10001245
100288d2:	push   ebx
100288d3:	push   0x1
100288d5:	mov    ecx,edi
100288d7:	mov    BYTE PTR [ebp-0x4],0xd
100288db:	call   0x100012f4
100288e0:	mov    eax,esi
100288e2:	push   eax
100288e3:	call   0x100379d0
100288e8:	mov    ecx,DWORD PTR [ebp-0xf4]
100288ee:	mov    DWORD PTR [ecx],eax
100288f0:	mov    eax,esi
100288f2:	push   eax
100288f3:	call   0x100379d0
100288f8:	mov    ecx,DWORD PTR [ebp-0xfc]
100288fe:	push   DWORD PTR [ebp-0xc0]
10028904:	mov    DWORD PTR [ecx],eax
10028906:	call   0x100430d2
1002890b:	mov    BYTE PTR [ebp-0xb9],0x1
10028912:	jmp    0x100287d4
10028917:	mov    eax,0x1002891d
1002891c:	ret    
1002891d:	xor    al,al
1002891f:	call   0x10059d70
10028924:	ret    0x2c
10028927:	push   0xbc
1002892c:	mov    eax,0x10063afc
10028931:	call   0x10059cde
10028936:	mov    eax,DWORD PTR [ebp+0x8]
10028939:	mov    DWORD PTR [ebp-0x50],eax
1002893c:	mov    eax,DWORD PTR [ebp+0xc]
1002893f:	mov    DWORD PTR [ebp-0x54],eax
10028942:	lea    eax,[ebp-0x74]
10028945:	mov    esi,ecx
10028947:	xor    edi,edi
10028949:	push   eax
1002894a:	mov    DWORD PTR [ebp-0x4c],esi
1002894d:	mov    DWORD PTR [ebp-0x58],edi
10028950:	call   0x10031260
10028955:	pop    ecx
10028956:	push   edi
10028957:	mov    DWORD PTR [ebp-0x4],edi
1002895a:	push   DWORD PTR ds:0x10080dc0
10028960:	lea    ecx,[ebp-0x48]
10028963:	push   ecx
10028964:	mov    ecx,eax
10028966:	call   0x10039f60
1002896b:	add    esp,0xc
1002896e:	xor    ebx,ebx
10028970:	push   edi
10028971:	inc    ebx
10028972:	push   ebx
10028973:	lea    ecx,[ebp-0x74]
10028976:	mov    BYTE PTR [ebp-0x4],0x2
1002897a:	call   0x100012f4
1002897f:	cmp    DWORD PTR [ebp-0x34],edi
10028982:	jne    0x100289a1
10028984:	push   0x1006cd08
10028989:	mov    ecx,esi
1002898b:	call   0x100011d1
10028990:	push   edi
10028991:	push   ebx
10028992:	lea    ecx,[ebp-0x48]
10028995:	call   0x100012f4
1002899a:	mov    eax,esi
1002899c:	jmp    0x10028afe
100289a1:	push   DWORD PTR [ebp-0x50]
100289a4:	lea    ecx,[ebp-0xc8]
100289aa:	call   0x10031180
100289af:	mov    esi,eax
100289b1:	mov    BYTE PTR [ebp-0x4],0x3
100289b5:	mov    DWORD PTR [esp],0x72ae47a6
100289bc:	push   0x10071e60
100289c1:	call   0x100042d1
100289c6:	push   0xc8cbef2
100289cb:	push   eax
100289cc:	call   0x100042d1
100289d1:	add    esp,0x10
100289d4:	push   esi
100289d5:	push   eax
100289d6:	push   0x3
100289d8:	push   0x10071e88
100289dd:	call   0x100042e3
100289e2:	add    esp,0xc
100289e5:	push   eax
100289e6:	lea    eax,[ebp-0x2c]
100289e9:	push   eax
100289ea:	call   0x10006546
100289ef:	add    esp,0xc
100289f2:	push   edi
100289f3:	push   ebx
100289f4:	lea    ecx,[ebp-0xc8]
100289fa:	mov    BYTE PTR [ebp-0x4],0x5
100289fe:	call   0x100012f4
10028a03:	push   DWORD PTR [ebp-0x54]
10028a06:	lea    ecx,[ebp-0xac]
10028a0c:	call   0x10031180
10028a11:	pop    ecx
10028a12:	push   eax
10028a13:	push   0x10071e8c
10028a18:	push   0x4
10028a1a:	push   0x10071ebc
10028a1f:	mov    BYTE PTR [ebp-0x4],0x6
10028a23:	call   0x100042e3
10028a28:	add    esp,0xc
10028a2b:	push   eax
10028a2c:	lea    eax,[ebp-0x74]
10028a2f:	push   eax
10028a30:	call   0x10006546
10028a35:	add    esp,0xc
10028a38:	push   0xffffffff
10028a3a:	push   edi
10028a3b:	lea    esi,[ebp-0x2c]
10028a3e:	mov    BYTE PTR [ebp-0x4],0x7
10028a42:	call   0x10004cc2
10028a47:	push   edi
10028a48:	push   ebx
10028a49:	lea    ecx,[ebp-0x74]
10028a4c:	call   0x100012f4
10028a51:	push   edi
10028a52:	push   ebx
10028a53:	lea    ecx,[ebp-0xac]
10028a59:	mov    BYTE PTR [ebp-0x4],0x5
10028a5d:	call   0x100012f4
10028a62:	push   edi
10028a63:	push   DWORD PTR ds:0x10080dbc
10028a69:	lea    eax,[ebp-0x90]
10028a6f:	push   eax
10028a70:	mov    ecx,esi
10028a72:	call   0x10039f60
10028a77:	add    esp,0xc
10028a7a:	push   0xffffffff
10028a7c:	push   edi
10028a7d:	push   eax
10028a7e:	mov    ecx,esi
10028a80:	mov    BYTE PTR [ebp-0x4],0x8
10028a84:	call   0x10001245
10028a89:	push   edi
10028a8a:	mov    BYTE PTR [ebp-0x4],0x5
10028a8e:	push   ebx
10028a8f:	lea    ecx,[ebp-0x90]
10028a95:	call   0x100012f4
10028a9a:	cmp    DWORD PTR [ebp-0x18],edi
10028a9d:	jne    0x10028aae
10028a9f:	mov    ecx,DWORD PTR [ebp-0x4c]
10028aa2:	push   0x1006cd08
10028aa7:	call   0x100011d1
10028aac:	jmp    0x10028ae7
10028aae:	push   0x10071ec4
10028ab3:	lea    eax,[ebp-0x48]
10028ab6:	push   eax
10028ab7:	lea    eax,[ebp-0x90]
10028abd:	push   eax
10028abe:	call   0x100064b5
10028ac3:	add    esp,0xc
10028ac6:	lea    ecx,[ebp-0x2c]
10028ac9:	push   ecx
10028aca:	push   eax
10028acb:	push   DWORD PTR [ebp-0x4c]
10028ace:	mov    BYTE PTR [ebp-0x4],0x9
10028ad2:	call   0x100064fb
10028ad7:	add    esp,0xc
10028ada:	push   edi
10028adb:	push   ebx
10028adc:	lea    ecx,[ebp-0x90]
10028ae2:	call   0x100012f4
10028ae7:	push   edi
10028ae8:	push   ebx
10028ae9:	lea    ecx,[ebp-0x2c]
10028aec:	call   0x100012f4
10028af1:	push   edi
10028af2:	push   ebx
10028af3:	lea    ecx,[ebp-0x48]
10028af6:	call   0x100012f4
10028afb:	mov    eax,DWORD PTR [ebp-0x4c]
10028afe:	call   0x10059d61
10028b03:	ret    0x8
10028b06:	push   ebp
10028b07:	mov    ebp,esp
10028b09:	and    esp,0xfffffff8
10028b0c:	push   0xffffffff
10028b0e:	push   0x10064498
10028b13:	mov    eax,fs:0x0
10028b19:	push   eax
10028b1a:	sub    esp,0xa0
10028b20:	mov    eax,ds:0x1007e030
10028b25:	xor    eax,esp
10028b27:	mov    DWORD PTR [esp+0x98],eax
10028b2e:	push   ebx
10028b2f:	push   esi
10028b30:	push   edi
10028b31:	mov    eax,ds:0x1007e030
10028b36:	xor    eax,esp
10028b38:	push   eax
10028b39:	lea    eax,[esp+0xb0]
10028b40:	mov    fs:0x0,eax
10028b46:	mov    edi,DWORD PTR [ebp+0x8]
10028b49:	push   0x7e898550
10028b4e:	push   0x10071ec8
10028b53:	mov    DWORD PTR [esp+0x20],edi
10028b57:	mov    BYTE PTR [esp+0x1f],0x0
10028b5c:	call   0x100042d1
10028b61:	push   0xe0e09f6
10028b66:	push   eax
10028b67:	call   0x100042d1
10028b6c:	push   0x4278c322
10028b71:	push   eax
10028b72:	call   0x100042d1
10028b77:	push   0x51730bba
10028b7c:	push   eax
10028b7d:	call   0x100042d1
10028b82:	push   eax
10028b83:	push   0x4
10028b85:	push   0x1006d420
10028b8a:	call   0x100042e3
10028b8f:	add    esp,0x2c
10028b92:	push   eax
10028b93:	lea    ecx,[esp+0x3c]
10028b97:	call   0x100011d1
10028b9c:	xor    esi,esi
10028b9e:	push   esi
10028b9f:	lea    eax,[esp+0x3c]
10028ba3:	push   eax
10028ba4:	lea    eax,[esp+0x94]
10028bab:	push   eax
10028bac:	mov    DWORD PTR [esp+0xc4],esi
10028bb3:	mov    eax,DWORD PTR [edi]
10028bb5:	add    eax,0x18
10028bb8:	call   0x100084c3
10028bbd:	push   esi
10028bbe:	push   0x1
10028bc0:	lea    ecx,[esp+0x40]
10028bc4:	mov    BYTE PTR [esp+0xc0],0x2
10028bcc:	call   0x100012f4
10028bd1:	cmp    DWORD PTR [esp+0xa0],0x4
10028bd9:	jbe    0x10028c8e
10028bdf:	push   0x594ea7c4
10028be4:	push   0x10071efc
10028be9:	call   0x100042d1
10028bee:	push   0x581547c
10028bf3:	push   eax
10028bf4:	call   0x100042d1
10028bf9:	push   0x5e8e10a
10028bfe:	push   eax
10028bff:	call   0x100042d1
10028c04:	push   0x68f3e590
10028c09:	push   eax
10028c0a:	call   0x100042d1
10028c0f:	mov    esi,DWORD PTR [esp+0xb0]
10028c16:	add    esp,0x20
10028c19:	cmp    DWORD PTR [esp+0xa4],0x10
10028c21:	mov    ebx,esi
10028c23:	jae    0x10028c2e
10028c25:	lea    ebx,[esp+0x90]
10028c2c:	mov    esi,ebx
10028c2e:	push   eax
10028c2f:	push   0x4
10028c31:	push   0x10071f20
10028c36:	call   0x100042e3
10028c3b:	add    esp,0xc
10028c3e:	push   eax
10028c3f:	push   ebx
10028c40:	call   0x10045cd0
10028c45:	cmp    eax,esi
10028c47:	pop    ecx
10028c48:	pop    ecx
10028c49:	jne    0x10028c8e
10028c4b:	push   0xffffffff
10028c4d:	push   0x4
10028c4f:	lea    eax,[esp+0x94]
10028c56:	push   eax
10028c57:	lea    eax,[esp+0x28]
10028c5b:	call   0x1000ca96
10028c60:	push   0xffffffff
10028c62:	push   0x0
10028c64:	push   eax
10028c65:	lea    ecx,[esp+0x98]
10028c6c:	mov    BYTE PTR [esp+0xc4],0x3
10028c74:	call   0x10001245
10028c79:	push   0x0
10028c7b:	push   0x1
10028c7d:	lea    ecx,[esp+0x24]
10028c81:	mov    BYTE PTR [esp+0xc0],0x2
10028c89:	call   0x100012f4
10028c8e:	cmp    DWORD PTR [esp+0xa4],0x10
10028c96:	mov    eax,DWORD PTR [esp+0x90]
10028c9d:	jae    0x10028ca6
10028c9f:	lea    eax,[esp+0x90]
10028ca6:	push   eax
10028ca7:	call   DWORD PTR ds:0x100663e0
10028cad:	cmp    eax,0xffffffff
10028cb0:	je     0x10028cc1
10028cb2:	mov    ebx,eax
10028cb4:	call   0x10017642
10028cb9:	test   al,al
10028cbb:	jne    0x10028f1d
10028cc1:	push   0x1d641c48
10028cc6:	push   0x10071f28
10028ccb:	call   0x100042d1
10028cd0:	push   0x5476e342
10028cd5:	push   eax
10028cd6:	call   0x100042d1
10028cdb:	push   eax
10028cdc:	push   0xa
10028cde:	push   0x10071f50
10028ce3:	call   0x100042e3
10028ce8:	add    esp,0x1c
10028ceb:	push   eax
10028cec:	lea    esi,[esp+0x90]
10028cf3:	call   0x100065b3
10028cf8:	test   al,al
10028cfa:	pop    ecx
10028cfb:	jne    0x10028f1d
10028d01:	push   0x6d32eb20
10028d06:	push   0x10071f5c
10028d0b:	call   0x100042d1
10028d10:	push   0x49f9db2
10028d15:	push   eax
10028d16:	call   0x100042d1
10028d1b:	push   eax
10028d1c:	push   0x9
10028d1e:	push   0x10071f88
10028d23:	call   0x100042e3
10028d28:	add    esp,0x1c
10028d2b:	push   eax
10028d2c:	call   0x100065b3
10028d31:	test   al,al
10028d33:	pop    ecx
10028d34:	jne    0x10028f1d
10028d3a:	push   0x2f9a334c
10028d3f:	push   0x10071f94
10028d44:	call   0x100042d1
10028d49:	push   0x29fb4884
10028d4e:	push   eax
10028d4f:	call   0x100042d1
10028d54:	push   0x4aaed496
10028d59:	push   eax
10028d5a:	call   0x100042d1
10028d5f:	push   0x110b50ae
10028d64:	push   eax
10028d65:	call   0x100042d1
10028d6a:	push   eax
10028d6b:	push   0x9
10028d6d:	push   0x10071fb8
10028d72:	call   0x100042e3
10028d77:	add    esp,0x2c
10028d7a:	push   eax
10028d7b:	call   0x100065b3
10028d80:	test   al,al
10028d82:	pop    ecx
10028d83:	jne    0x10028f1d
10028d89:	push   0x92e3392
10028d8e:	push   0x10071fc4
10028d93:	call   0x100042d1
10028d98:	push   eax
10028d99:	push   0x5
10028d9b:	push   0x10071fec
10028da0:	call   0x100042e3
10028da5:	add    esp,0x14
10028da8:	push   eax
10028da9:	call   0x100065b3
10028dae:	test   al,al
10028db0:	pop    ecx
10028db1:	jne    0x10028f1d
10028db7:	push   0x44888bd4
10028dbc:	push   0x10071ff4
10028dc1:	call   0x100042d1
10028dc6:	push   eax
10028dc7:	push   0x8
10028dc9:	push   0x10072018
10028dce:	call   0x100042e3
10028dd3:	add    esp,0x14
10028dd6:	push   eax
10028dd7:	call   0x100065b3
10028ddc:	test   al,al
10028dde:	pop    ecx
10028ddf:	jne    0x10028f1d
10028de5:	push   0x530eac56
10028dea:	push   0x10072024
10028def:	call   0x100042d1
10028df4:	push   0x12f9bda
10028df9:	push   eax
10028dfa:	call   0x100042d1
10028dff:	push   eax
10028e00:	push   0xd
10028e02:	push   0x10072064
10028e07:	call   0x100042e3
10028e0c:	add    esp,0x1c
10028e0f:	push   eax
10028e10:	call   0x100065b3
10028e15:	test   al,al
10028e17:	pop    ecx
10028e18:	jne    0x10028f1d
10028e1e:	push   0x10072074
10028e23:	push   0x15
10028e25:	push   0x100720a8
10028e2a:	call   0x100042e3
10028e2f:	add    esp,0xc
10028e32:	push   eax
10028e33:	call   0x100065b3
10028e38:	test   al,al
10028e3a:	pop    ecx
10028e3b:	jne    0x10028f1d
10028e41:	push   0x3b59fdbc
10028e46:	push   0x100720c0
10028e4b:	call   0x100042d1
10028e50:	push   0x45140422
10028e55:	push   eax
10028e56:	call   0x100042d1
10028e5b:	push   0x16080310
10028e60:	push   eax
10028e61:	call   0x100042d1
10028e66:	push   eax
10028e67:	push   0x1e
10028e69:	push   0x100720e8
10028e6e:	call   0x100042e3
10028e73:	add    esp,0x24
10028e76:	push   eax
10028e77:	call   0x100065b3
10028e7c:	test   al,al
10028e7e:	pop    ecx
10028e7f:	jne    0x10028f1d
10028e85:	push   0x19a9a130
10028e8a:	push   0x10072108
10028e8f:	call   0x100042d1
10028e94:	push   eax
10028e95:	push   0x1d
10028e97:	push   0x10072134
10028e9c:	call   0x100042e3
10028ea1:	add    esp,0x14
10028ea4:	push   eax
10028ea5:	call   0x100065b3
10028eaa:	test   al,al
10028eac:	pop    ecx
10028ead:	jne    0x10028f1d
10028eaf:	push   0x2e8b41ae
10028eb4:	push   0x10072154
10028eb9:	call   0x100042d1
10028ebe:	push   eax
10028ebf:	push   0x1d
10028ec1:	push   0x10072190
10028ec6:	call   0x100042e3
10028ecb:	add    esp,0x14
10028ece:	push   eax
10028ecf:	call   0x100065b3
10028ed4:	test   al,al
10028ed6:	pop    ecx
10028ed7:	jne    0x10028f1d
10028ed9:	push   0x7b4d45f0
10028ede:	push   0x100721b0
10028ee3:	call   0x100042d1
10028ee8:	push   0x5a2b6f7c
10028eed:	push   eax
10028eee:	call   0x100042d1
10028ef3:	push   0x61b61720
10028ef8:	push   eax
10028ef9:	call   0x100042d1
10028efe:	push   eax
10028eff:	push   0x15
10028f01:	push   0x100721ec
10028f06:	call   0x100042e3
10028f0b:	add    esp,0x24
10028f0e:	push   eax
10028f0f:	call   0x100065b3
10028f14:	test   al,al
10028f16:	pop    ecx
10028f17:	je     0x1002902d
10028f1d:	cmp    DWORD PTR [esp+0xa4],0x10
10028f25:	mov    eax,DWORD PTR [esp+0x90]
10028f2c:	mov    BYTE PTR [esp+0x17],0x1
10028f31:	jae    0x10028f3a
10028f33:	lea    eax,[esp+0x90]
10028f3a:	push   eax
10028f3b:	call   0x1000205f
10028f40:	mov    DWORD PTR [esp],0x2905fb78
10028f47:	push   0x10072204
10028f4c:	call   0x100042d1
10028f51:	push   eax
10028f52:	push   0x9
10028f54:	push   0x10072228
10028f59:	call   0x100042e3
10028f5e:	add    esp,0x14
10028f61:	push   eax
10028f62:	lea    ecx,[esp+0x20]
10028f66:	call   0x100011d1
10028f6b:	push   0x7354b510
10028f70:	push   0x10072234
10028f75:	mov    BYTE PTR [esp+0xc0],0x4
10028f7d:	call   0x100042d1
10028f82:	push   eax
10028f83:	push   0x3
10028f85:	push   0x10072264
10028f8a:	call   0x100042e3
10028f8f:	add    esp,0x14
10028f92:	push   eax
10028f93:	lea    ecx,[esp+0x58]
10028f97:	call   0x100011d1
10028f9c:	push   0x37cf2a5c
10028fa1:	push   0x10072268
10028fa6:	mov    BYTE PTR [esp+0xc0],0x5
10028fae:	call   0x100042d1
10028fb3:	push   0x3306f0d6
10028fb8:	push   eax
10028fb9:	call   0x100042d1
10028fbe:	push   eax
10028fbf:	push   0x8
10028fc1:	push   0x10071bf8
10028fc6:	call   0x100042e3
10028fcb:	add    esp,0x1c
10028fce:	push   eax
10028fcf:	lea    ecx,[esp+0x74]
10028fd3:	call   0x100011d1
10028fd8:	lea    eax,[esp+0x1c]
10028fdc:	push   eax
10028fdd:	lea    eax,[esp+0x58]
10028fe1:	push   eax
10028fe2:	lea    ecx,[esp+0x78]
10028fe6:	mov    BYTE PTR [esp+0xc0],0x6
10028fee:	call   0x10009612
10028ff3:	pop    ecx
10028ff4:	pop    ecx
10028ff5:	add    edi,0x8
10028ff8:	mov    ebx,eax
10028ffa:	call   0x1002692a
10028fff:	xor    esi,esi
10029001:	push   esi
10029002:	push   0x1
10029004:	lea    ecx,[esp+0x78]
10029008:	call   0x100012f4
1002900d:	push   esi
1002900e:	push   0x1
10029010:	lea    ecx,[esp+0x5c]
10029014:	call   0x100012f4
10029019:	push   esi
1002901a:	push   0x1
1002901c:	lea    ecx,[esp+0x24]
10029020:	call   0x100012f4
10029025:	mov    eax,DWORD PTR [esp+0x18]
10029029:	mov    BYTE PTR [eax+0x14],0x1
1002902d:	push   0x0
1002902f:	push   0x1
10029031:	lea    ecx,[esp+0x94]
10029038:	call   0x100012f4
1002903d:	mov    al,BYTE PTR [esp+0x17]
10029041:	mov    ecx,DWORD PTR [esp+0xb0]
10029048:	mov    DWORD PTR fs:0x0,ecx
1002904f:	pop    ecx
10029050:	pop    edi
10029051:	pop    esi
10029052:	pop    ebx
10029053:	mov    ecx,DWORD PTR [esp+0x98]
1002905a:	xor    ecx,esp
1002905c:	call   0x100430d7
10029061:	mov    esp,ebp
10029063:	pop    ebp
10029064:	ret    0x4
10029067:	push   ebp
10029068:	mov    ebp,esp
1002906a:	and    esp,0xfffffff8
1002906d:	push   0xffffffff
1002906f:	push   0x100635ea
10029074:	mov    eax,fs:0x0
1002907a:	push   eax
1002907b:	sub    esp,0x110
10029081:	mov    eax,ds:0x1007e030
10029086:	xor    eax,esp
10029088:	mov    DWORD PTR [esp+0x108],eax
1002908f:	push   ebx
10029090:	push   esi
10029091:	push   edi
10029092:	mov    eax,ds:0x1007e030
10029097:	xor    eax,esp
10029099:	push   eax
1002909a:	lea    eax,[esp+0x120]
100290a1:	mov    fs:0x0,eax
100290a7:	mov    esi,DWORD PTR [ebp+0x8]
100290aa:	push   DWORD PTR [esi]
100290ac:	lea    ecx,[esp+0x70]
100290b0:	call   0x10008b3e
100290b5:	lea    ecx,[esp+0xf8]
100290bc:	push   ecx
100290bd:	xor    ebx,ebx
100290bf:	push   0x10080ee8
100290c4:	mov    ecx,eax
100290c6:	mov    DWORD PTR [esp+0x130],ebx
100290cd:	call   0x10019ac3
100290d2:	push   ebx
100290d3:	push   0x1
100290d5:	lea    ecx,[esp+0x74]
100290d9:	mov    BYTE PTR [esp+0x130],0x2
100290e1:	call   0x100012f4
100290e6:	lea    edi,[esp+0xf8]
100290ed:	call   0x10019983
100290f2:	test   al,al
100290f4:	jne    0x10029339
100290fa:	mov    eax,DWORD PTR [esp+0xf8]
10029101:	dec    eax
10029102:	je     0x100291ca
10029108:	dec    eax
10029109:	jne    0x10029339
1002910f:	push   0x10072300
10029114:	push   0x7
10029116:	push   0x1006d6b8
1002911b:	call   0x100042e3
10029120:	add    esp,0xc
10029123:	push   eax
10029124:	lea    ecx,[esp+0x1c]
10029128:	call   0x100011d1
1002912d:	lea    eax,[esp+0x18]
10029131:	push   eax
10029132:	mov    BYTE PTR [esp+0x12c],0x7
1002913a:	mov    eax,DWORD PTR [esi+0x4]
1002913d:	add    eax,0x18
10029140:	push   eax
10029141:	call   0x10008261
10029146:	push   ebx
10029147:	push   0x1
10029149:	lea    ecx,[esp+0x20]
1002914d:	mov    BYTE PTR [esp+0x130],0x2
10029155:	call   0x100012f4
1002915a:	push   DWORD PTR [esi]
1002915c:	lea    ecx,[esp+0xa8]
10029163:	call   0x10008b3e
10029168:	cmp    DWORD PTR [eax+0x18],0x10
1002916c:	jb     0x10029173
1002916e:	mov    eax,DWORD PTR [eax+0x4]
10029171:	jmp    0x10029176
10029173:	add    eax,0x4
10029176:	push   eax
10029177:	call   0x1000205f
1002917c:	pop    ecx
1002917d:	push   ebx
1002917e:	push   0x1
10029180:	lea    ecx,[esp+0xac]
10029187:	call   0x100012f4
1002918c:	mov    BYTE PTR [esp+0x17],0x1
10029191:	push   ebx
10029192:	push   0x1
10029194:	lea    ecx,[esp+0x104]
1002919b:	call   0x100012f4
100291a0:	mov    al,BYTE PTR [esp+0x17]
100291a4:	mov    ecx,DWORD PTR [esp+0x120]
100291ab:	mov    DWORD PTR fs:0x0,ecx
100291b2:	pop    ecx
100291b3:	pop    edi
100291b4:	pop    esi
100291b5:	pop    ebx
100291b6:	mov    ecx,DWORD PTR [esp+0x108]
100291bd:	xor    ecx,esp
100291bf:	call   0x100430d7
100291c4:	mov    esp,ebp
100291c6:	pop    ebp
100291c7:	ret    0x4
100291ca:	push   0x37bd2424
100291cf:	push   0x10072298
100291d4:	call   0x100042d1
100291d9:	push   0x4b523ca2
100291de:	push   eax
100291df:	call   0x100042d1
100291e4:	push   eax
100291e5:	push   0x7
100291e7:	mov    edi,0x1006d6b8
100291ec:	push   edi
100291ed:	call   0x100042e3
100291f2:	add    esp,0x1c
100291f5:	push   eax
100291f6:	lea    ecx,[esp+0x38]
100291fa:	call   0x100011d1
100291ff:	lea    eax,[esp+0x34]
10029203:	push   eax
10029204:	mov    BYTE PTR [esp+0x12c],0x3
1002920c:	mov    eax,DWORD PTR [esi+0x4]
1002920f:	add    eax,0x18
10029212:	push   eax
10029213:	call   0x10008261
10029218:	push   ebx
10029219:	push   0x1
1002921b:	lea    ecx,[esp+0x3c]
1002921f:	mov    BYTE PTR [esp+0x130],0x2
10029227:	call   0x100012f4
1002922c:	push   0x4fd6a748
10029231:	push   0x100722d0
10029236:	call   0x100042d1
1002923b:	push   0x6c56e1f8
10029240:	push   eax
10029241:	call   0x100042d1
10029246:	push   eax
10029247:	push   0x7
10029249:	push   edi
1002924a:	call   0x100042e3
1002924f:	add    esp,0x1c
10029252:	push   eax
10029253:	lea    ecx,[esp+0x54]
10029257:	call   0x100011d1
1002925c:	lea    eax,[esp+0xdc]
10029263:	push   eax
10029264:	lea    eax,[esp+0xfc]
1002926b:	mov    BYTE PTR [esp+0x12c],0x4
10029273:	call   0x1000795e
10029278:	mov    BYTE PTR [esp+0x128],0x5
10029280:	mov    edx,DWORD PTR [esi+0x4]
10029283:	push   ebx
10029284:	lea    ecx,[esp+0x54]
10029288:	push   ecx
10029289:	add    edx,0x18
1002928c:	mov    ecx,eax
1002928e:	call   0x10007f58
10029293:	xor    edi,edi
10029295:	push   ebx
10029296:	inc    edi
10029297:	push   edi
10029298:	lea    ecx,[esp+0xe4]
1002929f:	call   0x100012f4
100292a4:	push   ebx
100292a5:	push   edi
100292a6:	lea    ecx,[esp+0x58]
100292aa:	mov    BYTE PTR [esp+0x130],0x2
100292b2:	call   0x100012f4
100292b7:	push   DWORD PTR [esi]
100292b9:	lea    ecx,[esp+0xc4]
100292c0:	call   0x10008b3e
100292c5:	mov    esi,eax
100292c7:	lea    eax,[esp+0x88]
100292ce:	push   eax
100292cf:	lea    eax,[esp+0xfc]
100292d6:	mov    BYTE PTR [esp+0x12c],0x6
100292de:	call   0x1000795e
100292e3:	cmp    DWORD PTR [esi+0x18],0x10
100292e7:	jb     0x100292ee
100292e9:	mov    esi,DWORD PTR [esi+0x4]
100292ec:	jmp    0x100292f1
100292ee:	add    esi,0x4
100292f1:	cmp    DWORD PTR [eax+0x18],0x10
100292f5:	jb     0x100292fc
100292f7:	mov    eax,DWORD PTR [eax+0x4]
100292fa:	jmp    0x100292ff
100292fc:	add    eax,0x4
100292ff:	push   esi
10029300:	push   eax
10029301:	call   0x1000205f
10029306:	pop    ecx
10029307:	pop    ecx
10029308:	push   ebx
10029309:	push   edi
1002930a:	lea    ecx,[esp+0x90]
10029311:	call   0x100012f4
10029316:	push   ebx
10029317:	push   edi
10029318:	lea    ecx,[esp+0xc8]
1002931f:	call   0x100012f4
10029324:	push   ebx
10029325:	push   edi
10029326:	lea    ecx,[esp+0x104]
1002932d:	call   0x100012f4
10029332:	mov    al,0x1
10029334:	jmp    0x100291a4
10029339:	mov    BYTE PTR [esp+0x17],bl
1002933d:	jmp    0x10029191
10029342:	push   ebp
10029343:	mov    ebp,esp
10029345:	and    esp,0xfffffff8
10029348:	push   0xffffffff
1002934a:	push   0x10064431
1002934f:	mov    eax,fs:0x0
10029355:	push   eax
10029356:	sub    esp,0x98
1002935c:	mov    eax,ds:0x1007e030
10029361:	xor    eax,esp
10029363:	mov    DWORD PTR [esp+0x90],eax
1002936a:	push   ebx
1002936b:	push   esi
1002936c:	push   edi
1002936d:	mov    eax,ds:0x1007e030
10029372:	xor    eax,esp
10029374:	push   eax
10029375:	lea    eax,[esp+0xa8]
1002937c:	mov    fs:0x0,eax
10029382:	mov    edi,DWORD PTR [ebp+0x8]
10029385:	push   DWORD PTR [edi]
10029387:	lea    ecx,[esp+0x50]
1002938b:	mov    DWORD PTR [esp+0x14],edi
1002938f:	call   0x10008b3e
10029394:	and    DWORD PTR [esp+0xb0],0x0
1002939c:	push   eax
1002939d:	lea    esi,[esp+0x88]
100293a4:	call   0x10030580
100293a9:	pop    ecx
100293aa:	push   0x0
100293ac:	push   0x1
100293ae:	lea    ecx,[esp+0x54]
100293b2:	mov    BYTE PTR [esp+0xb8],0x2
100293ba:	call   0x100012f4
100293bf:	mov    edx,esi
100293c1:	lea    ecx,[esp+0x68]
100293c5:	call   0x10033eb0
100293ca:	push   0x1006cd08
100293cf:	lea    esi,[esp+0x6c]
100293d3:	mov    BYTE PTR [esp+0xb4],0x3
100293db:	call   0x100065b3
100293e0:	test   al,al
100293e2:	pop    ecx
100293e3:	jne    0x1002962f
100293e9:	cmp    DWORD PTR [esp+0x80],0x10
100293f1:	mov    eax,DWORD PTR [esp+0x6c]
100293f5:	jae    0x100293fb
100293f7:	lea    eax,[esp+0x6c]
100293fb:	push   eax
100293fc:	call   0x1000205f
10029401:	mov    DWORD PTR [esp],0x10072340
10029408:	push   0xc
1002940a:	push   0x10071b7c
1002940f:	call   0x100042e3
10029414:	add    esp,0xc
10029417:	push   eax
10029418:	lea    ecx,[esp+0x18]
1002941c:	call   0x100011d1
10029421:	push   0x487ef5f8
10029426:	push   0x1007237c
1002942b:	mov    BYTE PTR [esp+0xb8],0x4
10029433:	call   0x100042d1
10029438:	push   0x12d6540
1002943d:	push   eax
1002943e:	call   0x100042d1
10029443:	push   0x1880ed78
10029448:	push   eax
10029449:	call   0x100042d1
1002944e:	push   eax
1002944f:	push   0x3
10029451:	push   0x10071bc0
10029456:	call   0x100042e3
1002945b:	add    esp,0x24
1002945e:	push   eax
1002945f:	lea    ecx,[esp+0x34]
10029463:	call   0x100011d1
10029468:	push   0x6998b48e
1002946d:	push   0x100723b4
10029472:	mov    BYTE PTR [esp+0xb8],0x5
1002947a:	call   0x100042d1
1002947f:	push   0x397b146a
10029484:	push   eax
10029485:	call   0x100042d1
1002948a:	push   0x160c591e
1002948f:	push   eax
10029490:	call   0x100042d1
10029495:	push   0x4b55e286
1002949a:	push   eax
1002949b:	call   0x100042d1
100294a0:	push   0x1433bbde
100294a5:	push   eax
100294a6:	call   0x100042d1
100294ab:	push   eax
100294ac:	push   0x8
100294ae:	push   0x10071bf8
100294b3:	call   0x100042e3
100294b8:	add    esp,0x34
100294bb:	push   eax
100294bc:	lea    ecx,[esp+0x50]
100294c0:	call   0x100011d1
100294c5:	lea    eax,[esp+0x14]
100294c9:	push   eax
100294ca:	lea    eax,[esp+0x34]
100294ce:	push   eax
100294cf:	lea    ecx,[esp+0x54]
100294d3:	mov    BYTE PTR [esp+0xb8],0x6
100294db:	add    edi,0x8
100294de:	call   0x10009612
100294e3:	pop    ecx
100294e4:	pop    ecx
100294e5:	mov    ebx,eax
100294e7:	call   0x1002692a
100294ec:	xor    esi,esi
100294ee:	xor    ebx,ebx
100294f0:	push   esi
100294f1:	inc    ebx
100294f2:	push   ebx
100294f3:	lea    ecx,[esp+0x54]
100294f7:	call   0x100012f4
100294fc:	push   esi
100294fd:	push   ebx
100294fe:	lea    ecx,[esp+0x38]
10029502:	call   0x100012f4
10029507:	push   esi
10029508:	mov    BYTE PTR [esp+0xb4],0x3
10029510:	push   ebx
10029511:	lea    ecx,[esp+0x1c]
10029515:	call   0x100012f4
1002951a:	push   0x26c68ef4
1002951f:	push   0x100723f0
10029524:	call   0x100042d1
10029529:	push   eax
1002952a:	push   0x8
1002952c:	push   0x10071c4c
10029531:	call   0x100042e3
10029536:	add    esp,0x14
10029539:	push   eax
1002953a:	lea    ecx,[esp+0x18]
1002953e:	call   0x100011d1
10029543:	mov    BYTE PTR [esp+0xb0],0x7
1002954b:	mov    eax,DWORD PTR [edi]
1002954d:	push   esi
1002954e:	lea    ecx,[esp+0x18]
10029552:	push   ecx
10029553:	lea    edx,[eax+0x20]
10029556:	lea    ecx,[esp+0x70]
1002955a:	call   0x10007f58
1002955f:	push   esi
10029560:	push   ebx
10029561:	lea    ecx,[esp+0x1c]
10029565:	mov    BYTE PTR [esp+0xb8],0x3
1002956d:	call   0x100012f4
10029572:	push   0x1006cd0c
10029577:	lea    ecx,[esp+0x34]
1002957b:	call   0x100011d1
10029580:	push   0x1edddeec
10029585:	push   0x10072418
1002958a:	mov    BYTE PTR [esp+0xb8],0x8
10029592:	call   0x100042d1
10029597:	push   eax
10029598:	push   0xe
1002959a:	push   0x1006d9c0
1002959f:	call   0x100042e3
100295a4:	add    esp,0x14
100295a7:	push   eax
100295a8:	lea    ecx,[esp+0x18]
100295ac:	call   0x100011d1
100295b1:	mov    BYTE PTR [esp+0xb0],0x9
100295b9:	mov    edx,DWORD PTR [edi]
100295bb:	push   esi
100295bc:	lea    eax,[esp+0x18]
100295c0:	push   eax
100295c1:	add    edx,0x20
100295c4:	lea    ecx,[esp+0x38]
100295c8:	call   0x10007f58
100295cd:	push   esi
100295ce:	push   ebx
100295cf:	lea    ecx,[esp+0x1c]
100295d3:	call   0x100012f4
100295d8:	push   esi
100295d9:	push   ebx
100295da:	lea    ecx,[esp+0x38]
100295de:	call   0x100012f4
100295e3:	mov    eax,DWORD PTR [esp+0x10]
100295e7:	mov    BYTE PTR [eax+0x14],bl
100295ea:	push   0x0
100295ec:	push   0x1
100295ee:	lea    ecx,[esp+0x70]
100295f2:	call   0x100012f4
100295f7:	push   0x0
100295f9:	push   0x1
100295fb:	lea    ecx,[esp+0x8c]
10029602:	call   0x100012f4
10029607:	mov    al,bl
10029609:	mov    ecx,DWORD PTR [esp+0xa8]
10029610:	mov    DWORD PTR fs:0x0,ecx
10029617:	pop    ecx
10029618:	pop    edi
10029619:	pop    esi
1002961a:	pop    ebx
1002961b:	mov    ecx,DWORD PTR [esp+0x90]
10029622:	xor    ecx,esp
10029624:	call   0x100430d7
10029629:	mov    esp,ebp
1002962b:	pop    ebp
1002962c:	ret    0x4
1002962f:	xor    bl,bl
10029631:	jmp    0x100295ea
10029633:	push   esi
10029634:	push   edi
10029635:	mov    edi,DWORD PTR [esp+0xc]
10029639:	mov    esi,DWORD PTR [edi+0x10]
1002963c:	call   0x10026765
10029641:	test   al,al
10029643:	je     0x1002964d
10029645:	mov    BYTE PTR [edi+0x14],0x1
10029649:	mov    al,0x1
1002964b:	jmp    0x1002964f
1002964d:	xor    al,al
1002964f:	pop    edi
10029650:	pop    esi
10029651:	ret    0x4
10029654:	push   ebp
10029655:	mov    ebp,esp
10029657:	and    esp,0xfffffff8
1002965a:	push   0xffffffff
1002965c:	push   0x100643ac
10029661:	mov    eax,fs:0x0
10029667:	push   eax
10029668:	sub    esp,0x280
1002966e:	mov    eax,ds:0x1007e030
10029673:	xor    eax,esp
10029675:	mov    DWORD PTR [esp+0x278],eax
1002967c:	push   ebx
1002967d:	push   esi
1002967e:	push   edi
1002967f:	mov    eax,ds:0x1007e030
10029684:	xor    eax,esp
10029686:	push   eax
10029687:	lea    eax,[esp+0x290]
1002968e:	mov    fs:0x0,eax
10029694:	mov    ebx,DWORD PTR [ebp+0x8]
10029697:	push   0x10072488
1002969c:	push   0x7
1002969e:	push   0x1006d6b8
100296a3:	mov    DWORD PTR [esp+0x20],ebx
100296a7:	call   0x100042e3
100296ac:	add    esp,0xc
100296af:	push   eax
100296b0:	lea    ecx,[esp+0x80]
100296b7:	call   0x100011d1
100296bc:	xor    edi,edi
100296be:	push   edi
100296bf:	lea    eax,[esp+0x80]
100296c6:	push   eax
100296c7:	lea    eax,[esp+0x28]
100296cb:	push   eax
100296cc:	mov    DWORD PTR [esp+0x2a4],edi
100296d3:	mov    eax,DWORD PTR [ebx]
100296d5:	add    eax,0x18
100296d8:	call   0x100084c3
100296dd:	mov    esi,eax
100296df:	push   0x69a6534a
100296e4:	push   0x1007243c
100296e9:	mov    BYTE PTR [esp+0x2a0],0x1
100296f1:	call   0x100042d1
100296f6:	push   0x5dee656a
100296fb:	push   eax
100296fc:	call   0x100042d1
10029701:	push   0x3b1ce76e
10029706:	push   eax
10029707:	call   0x100042d1
1002970c:	push   eax
1002970d:	push   0x10
1002970f:	push   0x10072474
10029714:	call   0x100042e3
10029719:	add    esp,0x24
1002971c:	push   eax
1002971d:	call   0x100065b3
10029722:	neg    al
10029724:	sbb    al,al
10029726:	pop    ecx
10029727:	xor    esi,esi
10029729:	push   edi
1002972a:	inc    al
1002972c:	inc    esi
1002972d:	push   esi
1002972e:	lea    ecx,[esp+0x28]
10029732:	mov    BYTE PTR [esp+0x1b],al
10029736:	call   0x100012f4
1002973b:	or     DWORD PTR [esp+0x298],0xffffffff
10029743:	push   edi
10029744:	push   esi
10029745:	lea    ecx,[esp+0x84]
1002974c:	call   0x100012f4
10029751:	cmp    BYTE PTR [esp+0x13],0x0
10029756:	je     0x1002975f
10029758:	xor    al,al
1002975a:	jmp    0x10029f9a
1002975f:	mov    eax,DWORD PTR [ebx+0x10]
10029762:	lea    ecx,[esp+0x3c]
10029766:	push   ecx
10029767:	push   0x4
10029769:	lea    ecx,[esp+0x48]
1002976d:	push   ecx
1002976e:	push   esi
1002976f:	push   0x6
10029771:	mov    DWORD PTR [esp+0x54],esi
10029775:	mov    DWORD PTR [esp+0x50],edi
10029779:	push   DWORD PTR [eax]
1002977b:	call   DWORD PTR [eax+0xa4]
10029781:	mov    esi,DWORD PTR [ebx+0x10]
10029784:	call   0x10026765
10029789:	test   al,al
1002978b:	je     0x10029892
10029791:	call   0x1000205f
10029796:	push   0x739ef278
1002979b:	push   0x100724b4
100297a0:	call   0x100042d1
100297a5:	push   0x17e373f4
100297aa:	push   eax
100297ab:	call   0x100042d1
100297b0:	push   eax
100297b1:	push   0x9
100297b3:	push   0x10072228
100297b8:	call   0x100042e3
100297bd:	add    esp,0x1c
100297c0:	push   eax
100297c1:	lea    ecx,[esp+0x24]
100297c5:	call   0x100011d1
100297ca:	push   0x4a90a78a
100297cf:	push   0x100724e0
100297d4:	mov    DWORD PTR [esp+0x2a0],0x2
100297df:	call   0x100042d1
100297e4:	push   eax
100297e5:	push   0x3
100297e7:	push   0x10072264
100297ec:	call   0x100042e3
100297f1:	add    esp,0x14
100297f4:	push   eax
100297f5:	lea    ecx,[esp+0x48]
100297f9:	call   0x100011d1
100297fe:	push   0x1556c7a2
10029803:	push   0x10072508
10029808:	mov    BYTE PTR [esp+0x2a0],0x3
10029810:	call   0x100042d1
10029815:	push   eax
10029816:	push   0x8
10029818:	push   0x10071bf8
1002981d:	call   0x100042e3
10029822:	add    esp,0x14
10029825:	push   eax
10029826:	lea    ecx,[esp+0x80]
1002982d:	call   0x100011d1
10029832:	lea    eax,[esp+0x20]
10029836:	push   eax
10029837:	lea    eax,[esp+0x48]
1002983b:	push   eax
1002983c:	lea    ecx,[esp+0x84]
10029843:	mov    BYTE PTR [esp+0x2a0],0x4
1002984b:	call   0x10009612
10029850:	pop    ecx
10029851:	lea    edi,[ebx+0x8]
10029854:	pop    ecx
10029855:	mov    ebx,eax
10029857:	call   0x1002692a
1002985c:	xor    esi,esi
1002985e:	push   esi
1002985f:	push   0x1
10029861:	lea    ecx,[esp+0x84]
10029868:	call   0x100012f4
1002986d:	push   esi
1002986e:	push   0x1
10029870:	lea    ecx,[esp+0x4c]
10029874:	call   0x100012f4
10029879:	push   esi
1002987a:	push   0x1
1002987c:	lea    ecx,[esp+0x28]
10029880:	call   0x100012f4
10029885:	mov    eax,DWORD PTR [esp+0x14]
10029889:	mov    BYTE PTR [eax+0x14],0x1
1002988d:	jmp    0x10029f98
10029892:	push   0x3a9b1ce8
10029897:	push   0x10072548
1002989c:	call   0x100042d1
100298a1:	push   0x54448c30
100298a6:	push   eax
100298a7:	call   0x100042d1
100298ac:	push   0x127188da
100298b1:	push   eax
100298b2:	call   0x100042d1
100298b7:	push   eax
100298b8:	push   0x7
100298ba:	push   0x1006d6b8
100298bf:	call   0x100042e3
100298c4:	add    esp,0x24
100298c7:	push   eax
100298c8:	lea    ecx,[esp+0x24]
100298cc:	call   0x100011d1
100298d1:	lea    eax,[esp+0x20]
100298d5:	push   eax
100298d6:	mov    DWORD PTR [esp+0x29c],0x5
100298e1:	mov    eax,DWORD PTR [ebx+0x4]
100298e4:	add    eax,0x18
100298e7:	push   eax
100298e8:	call   0x10008261
100298ed:	or     DWORD PTR [esp+0x298],0xffffffff
100298f5:	push   edi
100298f6:	push   0x1
100298f8:	lea    ecx,[esp+0x28]
100298fc:	call   0x100012f4
10029901:	lea    ecx,[esp+0x15c]
10029908:	call   0x10012ce7
1002990d:	push   0x1006cd08
10029912:	lea    esi,[esp+0x160]
10029919:	mov    DWORD PTR [esp+0x29c],0x6
10029924:	call   0x100065b3
10029929:	test   al,al
1002992b:	pop    ecx
1002992c:	jne    0x100299a6
1002992e:	push   0x19a85b94
10029933:	push   0x1007256c
10029938:	call   0x100042d1
1002993d:	push   0x7fc45e4
10029942:	push   eax
10029943:	call   0x100042d1
10029948:	push   0x1351dcbc
1002994d:	push   eax
1002994e:	call   0x100042d1
10029953:	push   0x4e42b1b4
10029958:	push   eax
10029959:	call   0x100042d1
1002995e:	push   eax
1002995f:	push   0xa
10029961:	push   0x1006d6e8
10029966:	call   0x100042e3
1002996b:	add    esp,0x2c
1002996e:	push   eax
1002996f:	lea    ecx,[esp+0x24]
10029973:	call   0x100011d1
10029978:	mov    BYTE PTR [esp+0x298],0x7
10029980:	mov    edx,DWORD PTR [ebx+0x4]
10029983:	lea    eax,[esp+0x20]
10029987:	push   eax
10029988:	add    edx,0x18
1002998b:	mov    ecx,esi
1002998d:	call   0x100083ac
10029992:	push   edi
10029993:	push   0x1
10029995:	lea    ecx,[esp+0x28]
10029999:	mov    BYTE PTR [esp+0x2a0],0x6
100299a1:	call   0x100012f4
100299a6:	push   0x1006cd08
100299ab:	lea    esi,[esp+0x1b4]
100299b2:	call   0x100065b3
100299b7:	test   al,al
100299b9:	pop    ecx
100299ba:	jne    0x10029a29
100299bc:	push   0x21d4408e
100299c1:	push   0x10072590
100299c6:	call   0x100042d1
100299cb:	push   0x5f4e4ab6
100299d0:	push   eax
100299d1:	call   0x100042d1
100299d6:	push   0x1a176af0
100299db:	push   eax
100299dc:	call   0x100042d1
100299e1:	push   eax
100299e2:	push   0xf
100299e4:	push   0x1006d758
100299e9:	call   0x100042e3
100299ee:	add    esp,0x24
100299f1:	push   eax
100299f2:	lea    ecx,[esp+0x24]
100299f6:	call   0x100011d1
100299fb:	mov    BYTE PTR [esp+0x298],0x8
10029a03:	mov    edx,DWORD PTR [ebx+0x4]
10029a06:	lea    eax,[esp+0x20]
10029a0a:	push   eax
10029a0b:	add    edx,0x18
10029a0e:	mov    ecx,esi
10029a10:	call   0x100083ac
10029a15:	push   edi
10029a16:	push   0x1
10029a18:	lea    ecx,[esp+0x28]
10029a1c:	mov    BYTE PTR [esp+0x2a0],0x6
10029a24:	call   0x100012f4
10029a29:	push   0x1006cd08
10029a2e:	lea    esi,[esp+0x17c]
10029a35:	mov    BYTE PTR [esp+0x17],0x0
10029a3a:	call   0x100065b3
10029a3f:	test   al,al
10029a41:	pop    ecx
10029a42:	jne    0x10029b21
10029a48:	push   0x10
10029a4a:	pop    esi
10029a4b:	lea    eax,[esp+0x14]
10029a4f:	push   eax
10029a50:	lea    eax,[esp+0x128]
10029a57:	push   eax
10029a58:	mov    eax,DWORD PTR [ebx+0x10]
10029a5b:	mov    DWORD PTR [esp+0x1c],esi
10029a5f:	push   DWORD PTR [eax]
10029a61:	call   DWORD PTR ds:0x100663a0
10029a67:	cmp    eax,0xffffffff
10029a6a:	je     0x10029b21
10029a70:	cmp    WORD PTR [esp+0x124],0x2
10029a79:	jne    0x10029b21
10029a7f:	push   0x7f6eea64
10029a84:	push   0x100725c4
10029a89:	call   0x100042d1
10029a8e:	push   0x537f6c1c
10029a93:	push   eax
10029a94:	call   0x100042d1
10029a99:	push   eax
10029a9a:	push   0x4
10029a9c:	push   0x1006d420
10029aa1:	call   0x100042e3
10029aa6:	add    esp,0x1c
10029aa9:	push   eax
10029aaa:	lea    ecx,[esp+0x24]
10029aae:	call   0x100011d1
10029ab3:	push   edi
10029ab4:	lea    eax,[esp+0x24]
10029ab8:	push   eax
10029ab9:	lea    eax,[esp+0x68]
10029abd:	push   eax
10029abe:	mov    BYTE PTR [esp+0x2a4],0x9
10029ac6:	mov    eax,DWORD PTR [ebx]
10029ac8:	add    eax,0x18
10029acb:	call   0x100084c3
10029ad0:	cmp    DWORD PTR [eax+0x18],esi
10029ad3:	jb     0x10029ada
10029ad5:	mov    eax,DWORD PTR [eax+0x4]
10029ad8:	jmp    0x10029add
10029ada:	add    eax,0x4
10029add:	push   eax
10029ade:	call   DWORD PTR ds:0x100663e0
10029ae4:	cmp    DWORD PTR [esp+0x128],eax
10029aeb:	push   edi
10029aec:	push   0x1
10029aee:	lea    ecx,[esp+0x68]
10029af2:	setne  BYTE PTR [esp+0x23]
10029af7:	call   0x100012f4
10029afc:	push   edi
10029afd:	push   0x1
10029aff:	lea    ecx,[esp+0x28]
10029b03:	mov    BYTE PTR [esp+0x2a0],0x6
10029b0b:	call   0x100012f4
10029b10:	cmp    BYTE PTR [esp+0x1b],0x0
10029b15:	je     0x10029b21
10029b17:	mov    BYTE PTR [esp+0x13],0x1
10029b1c:	jmp    0x10029ba4
10029b21:	push   0x1006cd08
10029b26:	lea    esi,[esp+0x17c]
10029b2d:	call   0x100065b3
10029b32:	test   al,al
10029b34:	pop    ecx
10029b35:	jne    0x10029ba4
10029b37:	push   0x9bfb31c
10029b3c:	push   0x100725ec
10029b41:	call   0x100042d1
10029b46:	push   0x7eadbe7c
10029b4b:	push   eax
10029b4c:	call   0x100042d1
10029b51:	push   0x3e43214c
10029b56:	push   eax
10029b57:	call   0x100042d1
10029b5c:	push   eax
10029b5d:	push   0x4
10029b5f:	push   0x1006d420
10029b64:	call   0x100042e3
10029b69:	add    esp,0x24
10029b6c:	push   eax
10029b6d:	lea    ecx,[esp+0x24]
10029b71:	call   0x100011d1
10029b76:	mov    BYTE PTR [esp+0x298],0xa
10029b7e:	mov    edx,DWORD PTR [ebx+0x4]
10029b81:	lea    eax,[esp+0x20]
10029b85:	push   eax
10029b86:	add    edx,0x18
10029b89:	mov    ecx,esi
10029b8b:	call   0x100083ac
10029b90:	push   edi
10029b91:	push   0x1
10029b93:	lea    ecx,[esp+0x28]
10029b97:	mov    BYTE PTR [esp+0x2a0],0x6
10029b9f:	call   0x100012f4
10029ba4:	push   0x319b6c2
10029ba9:	push   0x10072628
10029bae:	call   0x100042d1
10029bb3:	push   0x4e32cb7c
10029bb8:	push   eax
10029bb9:	call   0x100042d1
10029bbe:	push   0x598e2720
10029bc3:	push   eax
10029bc4:	call   0x100042d1
10029bc9:	push   eax
10029bca:	push   0x6
10029bcc:	mov    esi,0x1006d8a4
10029bd1:	push   esi
10029bd2:	call   0x100042e3
10029bd7:	add    esp,0x24
10029bda:	push   eax
10029bdb:	lea    ecx,[esp+0x24]
10029bdf:	call   0x100011d1
10029be4:	push   edi
10029be5:	lea    eax,[esp+0x24]
10029be9:	push   eax
10029bea:	lea    eax,[esp+0x12c]
10029bf1:	push   eax
10029bf2:	mov    BYTE PTR [esp+0x2a4],0xb
10029bfa:	mov    eax,DWORD PTR [ebx]
10029bfc:	add    eax,0x18
10029bff:	call   0x100084c3
10029c04:	push   edi
10029c05:	push   0x1
10029c07:	lea    ecx,[esp+0x28]
10029c0b:	mov    BYTE PTR [esp+0x2a0],0xd
10029c13:	call   0x100012f4
10029c18:	push   0x7edeccc8
10029c1d:	push   0x10072658
10029c22:	call   0x100042d1
10029c27:	push   0x50199c14
10029c2c:	push   eax
10029c2d:	call   0x100042d1
10029c32:	push   0x97c8120
10029c37:	push   eax
10029c38:	call   0x100042d1
10029c3d:	push   0x5b668b78
10029c42:	push   eax
10029c43:	call   0x100042d1
10029c48:	push   0x700f9618
10029c4d:	push   eax
10029c4e:	call   0x100042d1
10029c53:	push   eax
10029c54:	push   0x6
10029c56:	push   esi
10029c57:	call   0x100042e3
10029c5c:	add    esp,0x34
10029c5f:	push   eax
10029c60:	lea    ecx,[esp+0x48]
10029c64:	call   0x100011d1
10029c69:	lea    eax,[esp+0x44]
10029c6d:	push   eax
10029c6e:	mov    BYTE PTR [esp+0x29c],0xe
10029c76:	mov    eax,DWORD PTR [ebx+0x4]
10029c79:	add    eax,0x18
10029c7c:	push   eax
10029c7d:	call   0x10008261
10029c82:	push   edi
10029c83:	push   0x1
10029c85:	lea    ecx,[esp+0x4c]
10029c89:	mov    BYTE PTR [esp+0x2a0],0xd
10029c91:	call   0x100012f4
10029c96:	cmp    DWORD PTR [esp+0x138],edi
10029c9d:	mov    DWORD PTR [esp+0x1c],edi
10029ca1:	jbe    0x10029d6f
10029ca7:	push   DWORD PTR [esp+0x1c]
10029cab:	lea    eax,[esp+0x128]
10029cb2:	push   0x1006d8d4
10029cb7:	push   eax
10029cb8:	call   0x1000ca77
10029cbd:	cmp    eax,0xffffffff
10029cc0:	mov    DWORD PTR [esp+0x14],eax
10029cc4:	jne    0x10029cd1
10029cc6:	mov    eax,DWORD PTR [esp+0x138]
10029ccd:	mov    DWORD PTR [esp+0x14],eax
10029cd1:	cmp    eax,DWORD PTR [esp+0x1c]
10029cd5:	jbe    0x10029d5b
10029cdb:	push   0x10072684
10029ce0:	push   0x6
10029ce2:	push   esi
10029ce3:	call   0x100042e3
10029ce8:	add    esp,0xc
10029ceb:	push   eax
10029cec:	lea    ecx,[esp+0x48]
10029cf0:	call   0x100011d1
10029cf5:	mov    BYTE PTR [esp+0x298],0xf
10029cfd:	mov    eax,DWORD PTR [esp+0x14]
10029d01:	sub    eax,DWORD PTR [esp+0x1c]
10029d05:	push   eax
10029d06:	push   DWORD PTR [esp+0x20]
10029d0a:	lea    eax,[esp+0x12c]
10029d11:	push   eax
10029d12:	lea    eax,[esp+0x6c]
10029d16:	call   0x1000ca96
10029d1b:	mov    BYTE PTR [esp+0x298],0x10
10029d23:	mov    edx,DWORD PTR [ebx+0x4]
10029d26:	push   0x1
10029d28:	lea    ecx,[esp+0x48]
10029d2c:	push   ecx
10029d2d:	add    edx,0x18
10029d30:	mov    ecx,eax
10029d32:	call   0x10007f58
10029d37:	push   edi
10029d38:	push   0x1
10029d3a:	lea    ecx,[esp+0x68]
10029d3e:	call   0x100012f4
10029d43:	push   edi
10029d44:	push   0x1
10029d46:	lea    ecx,[esp+0x4c]
10029d4a:	mov    BYTE PTR [esp+0x2a0],0xd
10029d52:	call   0x100012f4
10029d57:	mov    eax,DWORD PTR [esp+0x14]
10029d5b:	cmp    eax,DWORD PTR [esp+0x138]
10029d62:	lea    ecx,[eax+0x1]
10029d65:	mov    DWORD PTR [esp+0x1c],ecx
10029d69:	jb     0x10029ca7
10029d6f:	push   0x1006cd08
10029d74:	lea    esi,[esp+0x198]
10029d7b:	call   0x100065b3
10029d80:	test   al,al
10029d82:	pop    ecx
10029d83:	jne    0x10029f7d
10029d89:	lea    edi,[esp+0x1ec]
10029d90:	call   0x1000bdef
10029d95:	mov    eax,esi
10029d97:	push   eax
10029d98:	lea    ecx,[esp+0x144]
10029d9f:	mov    BYTE PTR [esp+0x29c],0x11
10029da7:	call   0x100011ab
10029dac:	cmp    BYTE PTR [esp+0x13],0x0
10029db1:	mov    BYTE PTR [esp+0x298],0x12
10029db9:	je     0x10029f4b
10029dbf:	mov    eax,edi
10029dc1:	push   eax
10029dc2:	lea    ecx,[esp+0x144]
10029dc9:	call   0x10032d80
10029dce:	test   al,al
10029dd0:	pop    ecx
10029dd1:	je     0x10029f4b
10029dd7:	push   0x2ccdb578
10029ddc:	push   0x100726b0
10029de1:	call   0x100042d1
10029de6:	push   0x78bf3a64
10029deb:	push   eax
10029dec:	call   0x100042d1
10029df1:	push   eax
10029df2:	push   0x4
10029df4:	push   0x1006d420
10029df9:	call   0x100042e3
10029dfe:	add    esp,0x1c
10029e01:	push   eax
10029e02:	lea    ecx,[esp+0x64]
10029e06:	call   0x100011d1
10029e0b:	xor    edi,edi
10029e0d:	push   edi
10029e0e:	lea    eax,[esp+0x64]
10029e12:	push   eax
10029e13:	lea    eax,[esp+0x110]
10029e1a:	push   eax
10029e1b:	mov    BYTE PTR [esp+0x2a4],0x13
10029e23:	mov    eax,DWORD PTR [ebx]
10029e25:	add    eax,0x18
10029e28:	call   0x100084c3
10029e2d:	mov    esi,eax
10029e2f:	push   0x606ae9e4
10029e34:	push   0x100726f0
10029e39:	mov    BYTE PTR [esp+0x2a0],0x14
10029e41:	call   0x100042d1
10029e46:	push   0x1f90d404
10029e4b:	push   eax
10029e4c:	call   0x100042d1
10029e51:	push   0x65e77d68
10029e56:	push   eax
10029e57:	call   0x100042d1
10029e5c:	push   eax
10029e5d:	push   0x7
10029e5f:	push   0x1006d3dc
10029e64:	call   0x100042e3
10029e69:	add    esp,0x24
10029e6c:	push   eax
10029e6d:	lea    ecx,[esp+0xd4]
10029e74:	call   0x100011d1
10029e79:	push   esi
10029e7a:	push   eax
10029e7b:	lea    eax,[esp+0xbc]
10029e82:	push   eax
10029e83:	mov    BYTE PTR [esp+0x2a4],0x15
10029e8b:	call   0x100064fb
10029e90:	add    esp,0xc
10029e93:	lea    ecx,[esp+0x248]
10029e9a:	push   ecx
10029e9b:	push   eax
10029e9c:	lea    eax,[esp+0xa0]
10029ea3:	push   eax
10029ea4:	mov    BYTE PTR [esp+0x2a4],0x16
10029eac:	call   0x100064fb
10029eb1:	add    esp,0xc
10029eb4:	lea    ecx,[esp+0x264]
10029ebb:	push   ecx
10029ebc:	push   eax
10029ebd:	lea    eax,[esp+0xf4]
10029ec4:	push   eax
10029ec5:	mov    BYTE PTR [esp+0x2a4],0x17
10029ecd:	call   0x100064fb
10029ed2:	add    esp,0xc
10029ed5:	push   0xffffffff
10029ed7:	push   edi
10029ed8:	push   eax
10029ed9:	lea    ecx,[esp+0x14c]
10029ee0:	mov    BYTE PTR [esp+0x2a4],0x18
10029ee8:	call   0x10001245
10029eed:	xor    esi,esi
10029eef:	push   edi
10029ef0:	inc    esi
10029ef1:	push   esi
10029ef2:	lea    ecx,[esp+0xf4]
10029ef9:	call   0x100012f4
10029efe:	push   edi
10029eff:	push   esi
10029f00:	lea    ecx,[esp+0xa0]
10029f07:	call   0x100012f4
10029f0c:	push   edi
10029f0d:	push   esi
10029f0e:	lea    ecx,[esp+0xbc]
10029f15:	call   0x100012f4
10029f1a:	push   edi
10029f1b:	push   esi
10029f1c:	lea    ecx,[esp+0xd8]
10029f23:	call   0x100012f4
10029f28:	push   edi
10029f29:	push   esi
10029f2a:	lea    ecx,[esp+0x110]
10029f31:	call   0x100012f4
10029f36:	push   edi
10029f37:	push   esi
10029f38:	lea    ecx,[esp+0x68]
10029f3c:	mov    BYTE PTR [esp+0x2a0],0x12
10029f44:	call   0x100012f4
10029f49:	jmp    0x10029f4d
10029f4b:	xor    edi,edi
10029f4d:	lea    eax,[esp+0x140]
10029f54:	push   eax
10029f55:	mov    eax,DWORD PTR [ebx+0x4]
10029f58:	mov    esi,DWORD PTR [eax+0x4]
10029f5b:	call   0x10007979
10029f60:	push   edi
10029f61:	push   0x1
10029f63:	lea    ecx,[esp+0x148]
10029f6a:	call   0x100012f4
10029f6f:	lea    esi,[esp+0x1ec]
10029f76:	call   0x1000be1c
10029f7b:	xor    edi,edi
10029f7d:	push   edi
10029f7e:	push   0x1
10029f80:	lea    ecx,[esp+0x12c]
10029f87:	call   0x100012f4
10029f8c:	lea    esi,[esp+0x15c]
10029f93:	call   0x1000bdb4
10029f98:	mov    al,0x1
10029f9a:	mov    ecx,DWORD PTR [esp+0x290]
10029fa1:	mov    DWORD PTR fs:0x0,ecx
10029fa8:	pop    ecx
10029fa9:	pop    edi
10029faa:	pop    esi
10029fab:	pop    ebx
10029fac:	mov    ecx,DWORD PTR [esp+0x278]
10029fb3:	xor    ecx,esp
10029fb5:	call   0x100430d7
10029fba:	mov    esp,ebp
10029fbc:	pop    ebp
10029fbd:	ret    0x4
10029fc0:	push   ebp
10029fc1:	mov    ebp,esp
10029fc3:	sub    esp,0x1c
10029fc6:	push   esi
10029fc7:	mov    esi,DWORD PTR [ebp+0x8]
10029fca:	push   DWORD PTR [esi]
10029fcc:	call   0x1002681a
10029fd1:	test   al,al
10029fd3:	pop    ecx
10029fd4:	je     0x1002a00f
10029fd6:	push   DWORD PTR [esi]
10029fd8:	lea    ecx,[ebp-0x1c]
10029fdb:	call   0x10008b3e
10029fe0:	cmp    DWORD PTR [eax+0x18],0x10
10029fe4:	jb     0x10029feb
10029fe6:	mov    eax,DWORD PTR [eax+0x4]
10029fe9:	jmp    0x10029fee
10029feb:	add    eax,0x4
10029fee:	push   eax
10029fef:	mov    eax,DWORD PTR [esi+0x10]
10029ff2:	push   DWORD PTR [eax]
10029ff4:	call   0x1000205f
10029ff9:	pop    ecx
10029ffa:	pop    ecx
10029ffb:	push   0x0
10029ffd:	push   0x1
10029fff:	lea    ecx,[ebp-0x1c]
1002a002:	call   0x100012f4
1002a007:	mov    BYTE PTR [esi+0x14],0x1
1002a00b:	mov    al,0x1
1002a00d:	jmp    0x1002a011
1002a00f:	xor    al,al
1002a011:	pop    esi
1002a012:	leave  
1002a013:	ret    0x4
1002a016:	push   ebp
1002a017:	mov    ebp,esp
1002a019:	and    esp,0xfffffff8
1002a01c:	push   0xffffffff
1002a01e:	push   0x10062970
1002a023:	mov    eax,fs:0x0
1002a029:	push   eax
1002a02a:	sub    esp,0x58
1002a02d:	push   ebx
1002a02e:	push   esi
1002a02f:	push   edi
1002a030:	mov    eax,ds:0x1007e030
1002a035:	xor    eax,esp
1002a037:	push   eax
1002a038:	lea    eax,[esp+0x68]
1002a03c:	mov    fs:0x0,eax
1002a042:	mov    esi,DWORD PTR [ebp+0x8]
1002a045:	push   DWORD PTR [esi]
1002a047:	call   0x1002681a
1002a04c:	test   al,al
1002a04e:	pop    ecx
1002a04f:	je     0x1002a13f
1002a055:	push   0x5ec38b50
1002a05a:	push   0x10072714
1002a05f:	call   0x100042d1
1002a064:	push   eax
1002a065:	push   0xd
1002a067:	mov    edi,0x1007273c
1002a06c:	push   edi
1002a06d:	call   0x100042e3
1002a072:	add    esp,0x14
1002a075:	push   eax
1002a076:	lea    ecx,[esp+0x14]
1002a07a:	call   0x100011d1
1002a07f:	and    DWORD PTR [esp+0x70],0x0
1002a084:	lea    eax,[esp+0x10]
1002a088:	push   eax
1002a089:	mov    eax,DWORD PTR [esi+0x8]
1002a08c:	add    eax,0x20
1002a08f:	push   eax
1002a090:	call   0x10008261
1002a095:	or     DWORD PTR [esp+0x70],0xffffffff
1002a09a:	xor    ebx,ebx
1002a09c:	push   0x0
1002a09e:	inc    ebx
1002a09f:	push   ebx
1002a0a0:	lea    ecx,[esp+0x18]
1002a0a4:	call   0x100012f4
1002a0a9:	push   0x5f03dc56
1002a0ae:	push   0x1007274c
1002a0b3:	call   0x100042d1
1002a0b8:	push   0x52826c86
1002a0bd:	push   eax
1002a0be:	call   0x100042d1
1002a0c3:	push   eax
1002a0c4:	push   0x8
1002a0c6:	push   0x10072770
1002a0cb:	call   0x100042e3
1002a0d0:	add    esp,0x1c
1002a0d3:	push   eax
1002a0d4:	lea    ecx,[esp+0x4c]
1002a0d8:	call   0x100011d1
1002a0dd:	push   0x42dac1b8
1002a0e2:	push   0x1007277c
1002a0e7:	mov    DWORD PTR [esp+0x78],ebx
1002a0eb:	call   0x100042d1
1002a0f0:	push   eax
1002a0f1:	push   0xd
1002a0f3:	push   edi
1002a0f4:	call   0x100042e3
1002a0f9:	add    esp,0x14
1002a0fc:	push   eax
1002a0fd:	lea    ecx,[esp+0x30]
1002a101:	call   0x100011d1
1002a106:	mov    BYTE PTR [esp+0x70],0x2
1002a10b:	mov    edx,DWORD PTR [esi+0x8]
1002a10e:	xor    edi,edi
1002a110:	push   edi
1002a111:	lea    eax,[esp+0x30]
1002a115:	push   eax
1002a116:	add    edx,0x20
1002a119:	lea    ecx,[esp+0x50]
1002a11d:	call   0x10007f58
1002a122:	push   edi
1002a123:	push   ebx
1002a124:	lea    ecx,[esp+0x34]
1002a128:	call   0x100012f4
1002a12d:	push   edi
1002a12e:	push   ebx
1002a12f:	lea    ecx,[esp+0x50]
1002a133:	call   0x100012f4
1002a138:	mov    BYTE PTR [esi+0x11],bl
1002a13b:	mov    al,bl
1002a13d:	jmp    0x1002a141
1002a13f:	xor    al,al
1002a141:	mov    ecx,DWORD PTR [esp+0x68]
1002a145:	mov    DWORD PTR fs:0x0,ecx
1002a14c:	pop    ecx
1002a14d:	pop    edi
1002a14e:	pop    esi
1002a14f:	pop    ebx
1002a150:	mov    esp,ebp
1002a152:	pop    ebp
1002a153:	ret    0x4
1002a156:	push   ebp
1002a157:	mov    ebp,esp
1002a159:	and    esp,0xfffffff8
1002a15c:	push   0xffffffff
1002a15e:	push   0x10061c7b
1002a163:	mov    eax,fs:0x0
1002a169:	push   eax
1002a16a:	sub    esp,0x1f0
1002a170:	push   ebx
1002a171:	push   esi
1002a172:	push   edi
1002a173:	mov    eax,ds:0x1007e030
1002a178:	xor    eax,esp
1002a17a:	push   eax
1002a17b:	lea    eax,[esp+0x200]
1002a182:	mov    fs:0x0,eax
1002a188:	push   0x39218ad0
1002a18d:	xor    ebx,ebx
1002a18f:	push   0x100727ac
1002a194:	mov    DWORD PTR [esp+0x18],ebx
1002a198:	call   0x100042d1
1002a19d:	push   eax
1002a19e:	push   0xa
1002a1a0:	push   0x1006d6e8
1002a1a5:	call   0x100042e3
1002a1aa:	add    esp,0x14
1002a1ad:	push   eax
1002a1ae:	lea    ecx,[esp+0x78]
1002a1b2:	call   0x100011d1
1002a1b7:	mov    edi,DWORD PTR [ebp+0x8]
1002a1ba:	push   ebx
1002a1bb:	lea    eax,[esp+0x78]
1002a1bf:	push   eax
1002a1c0:	lea    eax,[esp+0xb4]
1002a1c7:	mov    DWORD PTR [esp+0x210],ebx
1002a1ce:	push   eax
1002a1cf:	mov    eax,DWORD PTR [edi]
1002a1d1:	xor    esi,esi
1002a1d3:	inc    esi
1002a1d4:	add    eax,0x18
1002a1d7:	mov    DWORD PTR [esp+0x1c],esi
1002a1db:	call   0x100084c3
1002a1e0:	mov    DWORD PTR [esp+0x208],esi
1002a1e7:	push   0x1006cd08
1002a1ec:	mov    esi,eax
1002a1ee:	mov    DWORD PTR [esp+0x14],0x3
1002a1f6:	call   0x100065b3
1002a1fb:	test   al,al
1002a1fd:	pop    ecx
1002a1fe:	jne    0x1002a287
1002a204:	push   0x37c706da
1002a209:	push   0x100727d4
1002a20e:	call   0x100042d1
1002a213:	push   eax
1002a214:	push   0x4
1002a216:	push   0x1006d420
1002a21b:	call   0x100042e3
1002a220:	add    esp,0x14
1002a223:	push   eax
1002a224:	lea    ecx,[esp+0x94]
1002a22b:	call   0x100011d1
1002a230:	push   ebx
1002a231:	lea    eax,[esp+0x94]
1002a238:	push   eax
1002a239:	lea    eax,[esp+0xec]
1002a240:	mov    DWORD PTR [esp+0x210],0x2
1002a24b:	push   eax
1002a24c:	mov    eax,DWORD PTR [edi]
1002a24e:	add    eax,0x18
1002a251:	mov    DWORD PTR [esp+0x1c],0x7
1002a259:	call   0x100084c3
1002a25e:	mov    DWORD PTR [esp+0x208],0x3
1002a269:	push   0x1006cd08
1002a26e:	mov    esi,eax
1002a270:	mov    DWORD PTR [esp+0x14],0xf
1002a278:	call   0x100065b3
1002a27d:	test   al,al
1002a27f:	pop    ecx
1002a280:	mov    BYTE PTR [esp+0x17],0x1
1002a285:	je     0x1002a28b
1002a287:	mov    BYTE PTR [esp+0x17],bl
1002a28b:	test   BYTE PTR [esp+0x10],0x8
1002a290:	je     0x1002a2a6
1002a292:	and    DWORD PTR [esp+0x10],0xfffffff7
1002a297:	push   ebx
1002a298:	push   0x1
1002a29a:	lea    ecx,[esp+0xec]
1002a2a1:	call   0x100012f4
1002a2a6:	test   BYTE PTR [esp+0x10],0x4
1002a2ab:	je     0x1002a2c1
1002a2ad:	and    DWORD PTR [esp+0x10],0xfffffffb
1002a2b2:	push   ebx
1002a2b3:	push   0x1
1002a2b5:	lea    ecx,[esp+0x98]
1002a2bc:	call   0x100012f4
1002a2c1:	test   BYTE PTR [esp+0x10],0x2
1002a2c6:	je     0x1002a2dc
1002a2c8:	and    DWORD PTR [esp+0x10],0xfffffffd
1002a2cd:	push   ebx
1002a2ce:	push   0x1
1002a2d0:	lea    ecx,[esp+0xb4]
1002a2d7:	call   0x100012f4
1002a2dc:	or     DWORD PTR [esp+0x208],0xffffffff
1002a2e4:	test   BYTE PTR [esp+0x10],0x1
1002a2e9:	je     0x1002a2f7
1002a2eb:	push   ebx
1002a2ec:	push   0x1
1002a2ee:	lea    ecx,[esp+0x7c]
1002a2f2:	call   0x100012f4
1002a2f7:	cmp    BYTE PTR [esp+0x17],bl
1002a2fb:	je     0x1002a50d
1002a301:	push   0x15dcaeb4
1002a306:	push   0x10072808
1002a30b:	call   0x100042d1
1002a310:	push   0x1881e3c6
1002a315:	push   eax
1002a316:	call   0x100042d1
1002a31b:	push   eax
1002a31c:	push   0xf
1002a31e:	push   0x1006d758
1002a323:	call   0x100042e3
1002a328:	add    esp,0x1c
1002a32b:	push   eax
1002a32c:	lea    ecx,[esp+0x24]
1002a330:	call   0x100011d1
1002a335:	push   0x4
1002a337:	pop    esi
1002a338:	push   0x5c0f96ce
1002a33d:	push   0x1007283c
1002a342:	mov    DWORD PTR [esp+0x210],esi
1002a349:	call   0x100042d1
1002a34e:	push   eax
1002a34f:	push   esi
1002a350:	push   0x1006d420
1002a355:	call   0x100042e3
1002a35a:	add    esp,0x14
1002a35d:	push   eax
1002a35e:	lea    ecx,[esp+0x5c]
1002a362:	call   0x100011d1
1002a367:	push   0x282ffbce
1002a36c:	push   0x10072870
1002a371:	mov    BYTE PTR [esp+0x210],0x5
1002a379:	call   0x100042d1
1002a37e:	push   0x4a147154
1002a383:	push   eax
1002a384:	call   0x100042d1
1002a389:	push   eax
1002a38a:	push   0xa
1002a38c:	push   0x1006d6e8
1002a391:	call   0x100042e3
1002a396:	add    esp,0x1c
1002a399:	push   eax
1002a39a:	lea    ecx,[esp+0x40]
1002a39e:	call   0x100011d1
1002a3a3:	mov    BYTE PTR [esp+0x208],0x6
1002a3ab:	mov    eax,DWORD PTR [edi]
1002a3ad:	mov    eax,DWORD PTR [eax+0x8]
1002a3b0:	lea    ecx,[esp+0x138]
1002a3b7:	push   ecx
1002a3b8:	call   0x1000795e
1002a3bd:	mov    esi,eax
1002a3bf:	push   ebx
1002a3c0:	lea    eax,[esp+0x24]
1002a3c4:	push   eax
1002a3c5:	lea    eax,[esp+0x108]
1002a3cc:	push   eax
1002a3cd:	mov    BYTE PTR [esp+0x214],0x7
1002a3d5:	mov    eax,DWORD PTR [edi]
1002a3d7:	add    eax,0x18
1002a3da:	call   0x100084c3
1002a3df:	mov    DWORD PTR [esp+0x10],eax
1002a3e3:	mov    BYTE PTR [esp+0x208],0x8
1002a3eb:	mov    eax,DWORD PTR [edi]
1002a3ed:	mov    eax,DWORD PTR [eax+0x4]
1002a3f0:	lea    ecx,[esp+0xc8]
1002a3f7:	push   ecx
1002a3f8:	call   0x1000795e
1002a3fd:	mov    DWORD PTR [esp+0x18],eax
1002a401:	push   ebx
1002a402:	lea    eax,[esp+0x5c]
1002a406:	push   eax
1002a407:	lea    eax,[esp+0x124]
1002a40e:	push   eax
1002a40f:	mov    BYTE PTR [esp+0x214],0x9
1002a417:	mov    eax,DWORD PTR [edi]
1002a419:	add    eax,0x18
1002a41c:	call   0x100084c3
1002a421:	mov    DWORD PTR [esp+0x1c],eax
1002a425:	push   ebx
1002a426:	lea    eax,[esp+0x40]
1002a42a:	push   eax
1002a42b:	lea    eax,[esp+0x15c]
1002a432:	push   eax
1002a433:	mov    BYTE PTR [esp+0x214],0xa
1002a43b:	mov    eax,DWORD PTR [edi]
1002a43d:	add    eax,0x18
1002a440:	call   0x100084c3
1002a445:	push   esi
1002a446:	mov    BYTE PTR [esp+0x20c],0xb
1002a44e:	push   DWORD PTR [esp+0x14]
1002a452:	push   DWORD PTR [esp+0x20]
1002a456:	push   DWORD PTR [esp+0x28]
1002a45a:	push   eax
1002a45b:	lea    eax,[esp+0x184]
1002a462:	push   eax
1002a463:	call   0x10012c5a
1002a468:	mov    esi,eax
1002a46a:	push   0xffffffff
1002a46c:	mov    BYTE PTR [esp+0x20c],0xc
1002a474:	push   DWORD PTR ds:0x10080dc4
1002a47a:	call   DWORD PTR ds:0x10066084
1002a480:	test   eax,eax
1002a482:	jne    0x1002a497
1002a484:	mov    eax,esi
1002a486:	call   0x10012dbb
1002a48b:	push   DWORD PTR ds:0x10080dc4
1002a491:	call   DWORD PTR ds:0x10066094
1002a497:	lea    esi,[esp+0x170]
1002a49e:	call   0x1000bdb4
1002a4a3:	xor    esi,esi
1002a4a5:	push   ebx
1002a4a6:	inc    esi
1002a4a7:	push   esi
1002a4a8:	lea    ecx,[esp+0x15c]
1002a4af:	call   0x100012f4
1002a4b4:	push   ebx
1002a4b5:	push   esi
1002a4b6:	lea    ecx,[esp+0x124]
1002a4bd:	call   0x100012f4
1002a4c2:	push   ebx
1002a4c3:	push   esi
1002a4c4:	lea    ecx,[esp+0xd0]
1002a4cb:	call   0x100012f4
1002a4d0:	push   ebx
1002a4d1:	push   esi
1002a4d2:	lea    ecx,[esp+0x108]
1002a4d9:	call   0x100012f4
1002a4de:	push   ebx
1002a4df:	push   esi
1002a4e0:	lea    ecx,[esp+0x140]
1002a4e7:	call   0x100012f4
1002a4ec:	push   ebx
1002a4ed:	push   esi
1002a4ee:	lea    ecx,[esp+0x44]
1002a4f2:	call   0x100012f4
1002a4f7:	push   ebx
1002a4f8:	push   esi
1002a4f9:	lea    ecx,[esp+0x60]
1002a4fd:	call   0x100012f4
1002a502:	push   ebx
1002a503:	push   esi
1002a504:	lea    ecx,[esp+0x28]
1002a508:	call   0x100012f4
1002a50d:	xor    al,al
1002a50f:	mov    ecx,DWORD PTR [esp+0x200]
1002a516:	mov    DWORD PTR fs:0x0,ecx
1002a51d:	pop    ecx
1002a51e:	pop    edi
1002a51f:	pop    esi
1002a520:	pop    ebx
1002a521:	mov    esp,ebp
1002a523:	pop    ebp
1002a524:	ret    0x4
1002a527:	push   0x0
1002a529:	push   0x10080da0
1002a52e:	call   DWORD PTR ds:0x100660e4
1002a534:	test   eax,eax
1002a536:	jne    0x1002a54b
1002a538:	mov    eax,DWORD PTR [esp+0x4]
1002a53c:	mov    BYTE PTR [eax+0x14],0x1
1002a540:	mov    eax,DWORD PTR [eax+0x4]
1002a543:	mov    BYTE PTR [eax+0x2c],0x1
1002a547:	mov    al,0x1
1002a549:	jmp    0x1002a54d
1002a54b:	xor    al,al
1002a54d:	ret    0x4
1002a550:	push   0x20
1002a552:	mov    eax,0x10060c3d
1002a557:	call   0x10059c75
1002a55c:	mov    edi,DWORD PTR [ebp+0x8]
1002a55f:	mov    esi,edi
1002a561:	call   0x100040e9
1002a566:	push   DWORD PTR [ebp+0xc]
1002a569:	xor    ebx,ebx
1002a56b:	mov    DWORD PTR [ebp-0x4],ebx
1002a56e:	lea    ecx,[ebp-0x28]
1002a571:	mov    DWORD PTR [edi+0x1c],ebx
1002a574:	mov    DWORD PTR [edi+0x20],ebx
1002a577:	mov    DWORD PTR [edi+0x24],ebx
1002a57a:	call   0x100011d1
1002a57f:	mov    esi,DWORD PTR [ebp+0x10]
1002a582:	lea    eax,[ebp-0x28]
1002a585:	mov    ecx,edi
1002a587:	mov    BYTE PTR [ebp-0x4],0x1
1002a58b:	call   0x1003a090
1002a590:	push   ebx
1002a591:	push   0x1
1002a593:	lea    ecx,[ebp-0x28]
1002a596:	call   0x100012f4
1002a59b:	mov    eax,edi
1002a59d:	call   0x10059d4d
1002a5a2:	ret    0xc
1002a5a5:	push   ebp
1002a5a6:	mov    ebp,esp
1002a5a8:	and    esp,0xfffffff8
1002a5ab:	push   0xffffffff
1002a5ad:	push   0x10063578
1002a5b2:	mov    eax,fs:0x0
1002a5b8:	push   eax
1002a5b9:	sub    esp,0x108
1002a5bf:	mov    eax,ds:0x1007e030
1002a5c4:	xor    eax,esp
1002a5c6:	mov    DWORD PTR [esp+0x100],eax
1002a5cd:	push   ebx
1002a5ce:	push   esi
1002a5cf:	push   edi
1002a5d0:	mov    eax,ds:0x1007e030
1002a5d5:	xor    eax,esp
1002a5d7:	push   eax
1002a5d8:	lea    eax,[esp+0x118]
1002a5df:	mov    fs:0x0,eax
1002a5e5:	mov    edi,DWORD PTR [ebp+0x8]
1002a5e8:	mov    eax,DWORD PTR [edi]
1002a5ea:	xor    ebx,ebx
1002a5ec:	cmp    BYTE PTR [eax+0x2c],bl
1002a5ef:	mov    DWORD PTR [esp+0x18],edi
1002a5f3:	je     0x1002a61d
1002a5f5:	xor    al,al
1002a5f7:	mov    ecx,DWORD PTR [esp+0x118]
1002a5fe:	mov    DWORD PTR fs:0x0,ecx
1002a605:	pop    ecx
1002a606:	pop    edi
1002a607:	pop    esi
1002a608:	pop    ebx
1002a609:	mov    ecx,DWORD PTR [esp+0x100]
1002a610:	xor    ecx,esp
1002a612:	call   0x100430d7
1002a617:	mov    esp,ebp
1002a619:	pop    ebp
1002a61a:	ret    0x4
1002a61d:	push   0x7908301c
1002a622:	push   0x1007289c
1002a627:	call   0x100042d1
1002a62c:	push   eax
1002a62d:	push   0x8
1002a62f:	push   0x10071c4c
1002a634:	call   0x100042e3
1002a639:	add    esp,0x14
1002a63c:	push   eax
1002a63d:	lea    ecx,[esp+0xd8]
1002a644:	call   0x100011d1
1002a649:	push   ebx
1002a64a:	lea    eax,[esp+0xd8]
1002a651:	push   eax
1002a652:	lea    eax,[esp+0xa4]
1002a659:	push   eax
1002a65a:	mov    DWORD PTR [esp+0x12c],ebx
1002a661:	mov    eax,DWORD PTR [edi+0x4]
1002a664:	add    eax,0x20
1002a667:	call   0x100084c3
1002a66c:	push   ebx
1002a66d:	push   0x1
1002a66f:	lea    ecx,[esp+0xdc]
1002a676:	mov    BYTE PTR [esp+0x128],0x2
1002a67e:	call   0x100012f4
1002a683:	push   0x1006cd08
1002a688:	lea    esi,[esp+0xa0]
1002a68f:	call   0x100065b3
1002a694:	test   al,al
1002a696:	pop    ecx
1002a697:	jne    0x1002ab68
1002a69d:	push   DWORD PTR [edi]
1002a69f:	lea    ecx,[esp+0xbc]
1002a6a6:	call   0x10008b3e
1002a6ab:	lea    eax,[esp+0xf0]
1002a6b2:	push   eax
1002a6b3:	push   0x10080ee8
1002a6b8:	lea    ecx,[esp+0xc0]
1002a6bf:	mov    BYTE PTR [esp+0x128],0x3
1002a6c7:	call   0x10019ac3
1002a6cc:	lea    edi,[esp+0xf0]
1002a6d3:	mov    BYTE PTR [esp+0x120],0x4
1002a6db:	call   0x10019983
1002a6e0:	test   al,al
1002a6e2:	jne    0x1002ab4a
1002a6e8:	cmp    DWORD PTR [esp+0xf0],ebx
1002a6ef:	je     0x1002ab4a
1002a6f5:	push   0x6719d596
1002a6fa:	push   0x100728cc
1002a6ff:	call   0x100042d1
1002a704:	cmp    DWORD PTR [esp+0xd8],0x10
1002a70c:	mov    esi,DWORD PTR [esp+0xc4]
1002a713:	pop    ecx
1002a714:	pop    ecx
1002a715:	mov    edi,esi
1002a717:	jae    0x1002a722
1002a719:	lea    edi,[esp+0xbc]
1002a720:	mov    esi,edi
1002a722:	push   eax
1002a723:	push   0x8
1002a725:	push   0x100728f4
1002a72a:	call   0x100042e3
1002a72f:	add    esp,0xc
1002a732:	push   eax
1002a733:	push   edi
1002a734:	call   0x10045cd0
1002a739:	cmp    eax,esi
1002a73b:	pop    ecx
1002a73c:	pop    ecx
1002a73d:	jne    0x1002a855
1002a743:	push   0x10072900
1002a748:	push   0x7
1002a74a:	push   0x10072934
1002a74f:	call   0x100042e3
1002a754:	add    esp,0xc
1002a757:	push   eax
1002a758:	lea    ecx,[esp+0xd8]
1002a75f:	call   0x100011d1
1002a764:	push   0xffffffff
1002a766:	push   ebx
1002a767:	lea    eax,[esp+0xa4]
1002a76e:	lea    esi,[esp+0xdc]
1002a775:	mov    BYTE PTR [esp+0x128],0x5
1002a77d:	call   0x10004cc2
1002a782:	push   0x564eaba8
1002a787:	push   0x1007293c
1002a78c:	call   0x100042d1
1002a791:	push   0x7b7d7052
1002a796:	push   eax
1002a797:	call   0x100042d1
1002a79c:	push   eax
1002a79d:	push   0x8
1002a79f:	push   0x10071c4c
1002a7a4:	call   0x100042e3
1002a7a9:	add    esp,0x1c
1002a7ac:	push   eax
1002a7ad:	lea    ecx,[esp+0x2c]
1002a7b1:	call   0x100011d1
1002a7b6:	mov    edi,DWORD PTR [esp+0x18]
1002a7ba:	lea    eax,[esp+0x28]
1002a7be:	push   eax
1002a7bf:	mov    BYTE PTR [esp+0x124],0x6
1002a7c7:	mov    eax,DWORD PTR [edi+0x8]
1002a7ca:	add    eax,0x20
1002a7cd:	push   eax
1002a7ce:	call   0x10008261
1002a7d3:	xor    esi,esi
1002a7d5:	push   ebx
1002a7d6:	inc    esi
1002a7d7:	push   esi
1002a7d8:	lea    ecx,[esp+0x30]
1002a7dc:	mov    BYTE PTR [esp+0x128],0x5
1002a7e4:	call   0x100012f4
1002a7e9:	push   0x1b8a9706
1002a7ee:	push   0x10072978
1002a7f3:	call   0x100042d1
1002a7f8:	push   eax
1002a7f9:	push   0x7
1002a7fb:	push   0x100729b8
1002a800:	call   0x100042e3
1002a805:	add    esp,0x14
1002a808:	push   eax
1002a809:	lea    ecx,[esp+0x2c]
1002a80d:	call   0x100011d1
1002a812:	mov    BYTE PTR [esp+0x120],0x7
1002a81a:	mov    edx,DWORD PTR [edi+0x8]
1002a81d:	push   ebx
1002a81e:	lea    eax,[esp+0x2c]
1002a822:	push   eax
1002a823:	add    edx,0x20
1002a826:	lea    ecx,[esp+0xdc]
1002a82d:	call   0x10007f58
1002a832:	push   ebx
1002a833:	push   esi
1002a834:	lea    ecx,[esp+0x30]
1002a838:	call   0x100012f4
1002a83d:	push   ebx
1002a83e:	push   esi
1002a83f:	lea    ecx,[esp+0xdc]
1002a846:	mov    BYTE PTR [esp+0x128],0x4
1002a84e:	call   0x100012f4
1002a853:	jmp    0x1002a858
1002a855:	xor    esi,esi
1002a857:	inc    esi
1002a858:	push   0x34
1002a85a:	call   0x100436de
1002a85f:	pop    ecx
1002a860:	mov    DWORD PTR [esp+0x14],eax
1002a864:	cmp    eax,ebx
1002a866:	mov    BYTE PTR [esp+0x120],0x8
1002a86e:	je     0x1002a8b2
1002a870:	push   0x43ff8bca
1002a875:	push   0x100729c0
1002a87a:	mov    DWORD PTR [esp+0x24],ebx
1002a87e:	mov    DWORD PTR [esp+0x28],ebx
1002a882:	mov    DWORD PTR [esp+0x2c],esi
1002a886:	call   0x100042d1
1002a88b:	pop    ecx
1002a88c:	pop    ecx
1002a88d:	lea    ecx,[esp+0x1c]
1002a891:	push   ecx
1002a892:	push   eax
1002a893:	push   0xd
1002a895:	push   0x10072a00
1002a89a:	call   0x100042e3
1002a89f:	add    esp,0xc
1002a8a2:	push   eax
1002a8a3:	push   DWORD PTR [esp+0x1c]
1002a8a7:	call   0x1002a550
1002a8ac:	mov    DWORD PTR [esp+0x14],eax
1002a8b0:	jmp    0x1002a8b6
1002a8b2:	mov    DWORD PTR [esp+0x14],ebx
1002a8b6:	mov    edi,DWORD PTR [esp+0x14]
1002a8ba:	mov    DWORD PTR [esp+0x44],edi
1002a8be:	mov    BYTE PTR [esp+0x120],0x9
1002a8c6:	cmp    DWORD PTR [esp+0xb4],0x10
1002a8ce:	mov    eax,DWORD PTR [esp+0xa0]
1002a8d5:	jae    0x1002a8de
1002a8d7:	lea    eax,[esp+0xa0]
1002a8de:	push   eax
1002a8df:	mov    DWORD PTR [esp+0x20],eax
1002a8e3:	call   0x10043250
1002a8e8:	pop    ecx
1002a8e9:	mov    DWORD PTR [esp+0x20],eax
1002a8ed:	lea    eax,[esp+0x1c]
1002a8f1:	push   eax
1002a8f2:	push   edi
1002a8f3:	call   0x1003a360
1002a8f8:	test   al,al
1002a8fa:	jne    0x1002aa51
1002a900:	xor    edi,edi
1002a902:	lea    eax,[esp+0x9c]
1002a909:	call   0x10011fbe
1002a90e:	cmp    BYTE PTR [eax],0x2f
1002a911:	je     0x1002a931
1002a913:	push   0x10072a10
1002a918:	call   0x10043250
1002a91d:	mov    ebx,eax
1002a91f:	pop    ecx
1002a920:	lea    eax,[esp+0x9c]
1002a927:	call   0x1002ab6e
1002a92c:	xor    esi,esi
1002a92e:	xor    ebx,ebx
1002a930:	inc    esi
1002a931:	push   0x10072a14
1002a936:	push   0x4
1002a938:	push   0x1006d420
1002a93d:	call   0x100042e3
1002a942:	add    esp,0xc
1002a945:	push   eax
1002a946:	lea    ecx,[esp+0x2c]
1002a94a:	call   0x100011d1
1002a94f:	push   ebx
1002a950:	lea    eax,[esp+0x2c]
1002a954:	push   eax
1002a955:	lea    eax,[esp+0x50]
1002a959:	push   eax
1002a95a:	mov    eax,DWORD PTR [esp+0x24]
1002a95e:	mov    BYTE PTR [esp+0x12c],0xa
1002a966:	mov    eax,DWORD PTR [eax]
1002a968:	add    eax,0x18
1002a96b:	call   0x100084c3
1002a970:	mov    edi,eax
1002a972:	push   0x3437bb3a
1002a977:	push   0x10072a44
1002a97c:	mov    BYTE PTR [esp+0x128],0xb
1002a984:	call   0x100042d1
1002a989:	push   0x3b8dc09c
1002a98e:	push   eax
1002a98f:	call   0x100042d1
1002a994:	push   0xdfd2dea
1002a999:	push   eax
1002a99a:	call   0x100042d1
1002a99f:	push   eax
1002a9a0:	push   0x7
1002a9a2:	push   0x1006d3dc
1002a9a7:	call   0x100042e3
1002a9ac:	add    esp,0x24
1002a9af:	push   eax
1002a9b0:	lea    ecx,[esp+0x68]
1002a9b4:	call   0x100011d1
1002a9b9:	push   edi
1002a9ba:	push   eax
1002a9bb:	lea    eax,[esp+0x88]
1002a9c2:	push   eax
1002a9c3:	mov    BYTE PTR [esp+0x12c],0xc
1002a9cb:	call   0x100064fb
1002a9d0:	add    esp,0xc
1002a9d3:	lea    ecx,[esp+0x9c]
1002a9da:	push   ecx
1002a9db:	push   eax
1002a9dc:	lea    eax,[esp+0xdc]
1002a9e3:	push   eax
1002a9e4:	mov    BYTE PTR [esp+0x12c],0xd
1002a9ec:	call   0x100064fb
1002a9f1:	add    esp,0xc
1002a9f4:	push   0xffffffff
1002a9f6:	push   ebx
1002a9f7:	push   eax
1002a9f8:	lea    ecx,[esp+0xa8]
1002a9ff:	mov    BYTE PTR [esp+0x12c],0xe
1002aa07:	call   0x10001245
1002aa0c:	push   ebx
1002aa0d:	push   esi
1002aa0e:	lea    ecx,[esp+0xdc]
1002aa15:	call   0x100012f4
1002aa1a:	push   ebx
1002aa1b:	push   esi
1002aa1c:	lea    ecx,[esp+0x88]
1002aa23:	call   0x100012f4
1002aa28:	push   ebx
1002aa29:	push   esi
1002aa2a:	lea    ecx,[esp+0x6c]
1002aa2e:	call   0x100012f4
1002aa33:	push   ebx
1002aa34:	push   esi
1002aa35:	lea    ecx,[esp+0x50]
1002aa39:	call   0x100012f4
1002aa3e:	mov    BYTE PTR [esp+0x120],0x9
1002aa46:	push   ebx
1002aa47:	push   esi
1002aa48:	lea    ecx,[esp+0x30]
1002aa4c:	call   0x100012f4
1002aa51:	lea    eax,[esp+0x48]
1002aa55:	push   eax
1002aa56:	lea    eax,[esp+0xf4]
1002aa5d:	call   0x1000795e
1002aa62:	mov    BYTE PTR [esp+0x120],0xf
1002aa6a:	push   DWORD PTR [esp+0xf0]
1002aa71:	lea    ecx,[esp+0xa0]
1002aa78:	push   ecx
1002aa79:	mov    ebx,eax
1002aa7b:	mov    edi,0x10080ee8
1002aa80:	call   0x10019a00
1002aa85:	xor    esi,esi
1002aa87:	xor    ebx,ebx
1002aa89:	push   esi
1002aa8a:	inc    ebx
1002aa8b:	push   ebx
1002aa8c:	lea    ecx,[esp+0x50]
1002aa90:	mov    BYTE PTR [esp+0x128],0x9
1002aa98:	call   0x100012f4
1002aa9d:	lea    eax,[esp+0x48]
1002aaa1:	push   eax
1002aaa2:	lea    eax,[esp+0xf4]
1002aaa9:	call   0x1000795e
1002aaae:	cmp    DWORD PTR [esp+0xb4],0x10
1002aab6:	mov    ecx,DWORD PTR [esp+0xa0]
1002aabd:	jae    0x1002aac6
1002aabf:	lea    ecx,[esp+0xa0]
1002aac6:	cmp    DWORD PTR [eax+0x18],0x10
1002aaca:	jb     0x1002aad1
1002aacc:	mov    eax,DWORD PTR [eax+0x4]
1002aacf:	jmp    0x1002aad4
1002aad1:	add    eax,0x4
1002aad4:	push   ecx
1002aad5:	push   eax
1002aad6:	call   0x1000205f
1002aadb:	pop    ecx
1002aadc:	pop    ecx
1002aadd:	push   esi
1002aade:	push   ebx
1002aadf:	lea    ecx,[esp+0x50]
1002aae3:	call   0x100012f4
1002aae8:	mov    eax,DWORD PTR [esp+0x18]
1002aaec:	mov    BYTE PTR [esp+0x120],0x4
1002aaf4:	cmp    DWORD PTR [esp+0x14],esi
1002aaf8:	mov    BYTE PTR [eax+0x11],bl
1002aafb:	je     0x1002ab10
1002aafd:	push   DWORD PTR [esp+0x14]
1002ab01:	call   0x1003a170
1002ab06:	push   DWORD PTR [esp+0x14]
1002ab0a:	call   0x100430d2
1002ab0f:	pop    ecx
1002ab10:	push   esi
1002ab11:	push   ebx
1002ab12:	lea    ecx,[esp+0xfc]
1002ab19:	call   0x100012f4
1002ab1e:	push   esi
1002ab1f:	push   ebx
1002ab20:	lea    ecx,[esp+0xc0]
1002ab27:	call   0x100012f4
1002ab2c:	mov    BYTE PTR [esp+0x13],bl
1002ab30:	xor    ebx,ebx
1002ab32:	push   ebx
1002ab33:	push   0x1
1002ab35:	lea    ecx,[esp+0xa4]
1002ab3c:	call   0x100012f4
1002ab41:	mov    al,BYTE PTR [esp+0x13]
1002ab45:	jmp    0x1002a5f7
1002ab4a:	push   ebx
1002ab4b:	push   0x1
1002ab4d:	lea    ecx,[esp+0xfc]
1002ab54:	call   0x100012f4
1002ab59:	push   ebx
1002ab5a:	push   0x1
1002ab5c:	lea    ecx,[esp+0xc0]
1002ab63:	call   0x100012f4
1002ab68:	mov    BYTE PTR [esp+0x13],bl
1002ab6c:	jmp    0x1002ab32
1002ab6e:	push   ebp
1002ab6f:	mov    ebp,esp
1002ab71:	push   ecx
1002ab72:	push   esi
1002ab73:	push   edi
1002ab74:	mov    esi,eax
1002ab76:	mov    edi,0x10072a10
1002ab7b:	push   edi
1002ab7c:	mov    ecx,esi
1002ab7e:	call   0x100015e6
1002ab83:	test   al,al
1002ab85:	je     0x1002aba2
1002ab87:	cmp    DWORD PTR [esi+0x18],0x10
1002ab8b:	jb     0x1002ab92
1002ab8d:	mov    eax,DWORD PTR [esi+0x4]
1002ab90:	jmp    0x1002ab95
1002ab92:	lea    eax,[esi+0x4]
1002ab95:	sub    edi,eax
1002ab97:	push   ebx
1002ab98:	push   edi
1002ab99:	mov    eax,esi
1002ab9b:	call   0x1002ac23
1002aba0:	jmp    0x1002ac1f
1002aba2:	or     eax,0xffffffff
1002aba5:	sub    eax,DWORD PTR [esi+0x14]
1002aba8:	cmp    eax,ebx
1002abaa:	ja     0x1002abb1
1002abac:	call   0x10057440
1002abb1:	test   ebx,ebx
1002abb3:	jbe    0x1002ac1d
1002abb5:	mov    eax,DWORD PTR [esi+0x14]
1002abb8:	add    eax,ebx
1002abba:	push   0x0
1002abbc:	push   eax
1002abbd:	mov    ecx,esi
1002abbf:	mov    DWORD PTR [ebp-0x4],eax
1002abc2:	call   0x1000143c
1002abc7:	test   al,al
1002abc9:	je     0x1002ac1d
1002abcb:	mov    eax,DWORD PTR [esi+0x18]
1002abce:	cmp    eax,0x10
1002abd1:	lea    edi,[esi+0x4]
1002abd4:	jb     0x1002abda
1002abd6:	mov    edx,DWORD PTR [edi]
1002abd8:	jmp    0x1002abdc
1002abda:	mov    edx,edi
1002abdc:	cmp    eax,0x10
1002abdf:	jb     0x1002abe5
1002abe1:	mov    ecx,DWORD PTR [edi]
1002abe3:	jmp    0x1002abe7
1002abe5:	mov    ecx,edi
1002abe7:	push   DWORD PTR [esi+0x14]
1002abea:	sub    eax,ebx
1002abec:	push   edx
1002abed:	push   eax
1002abee:	add    ecx,ebx
1002abf0:	push   ecx
1002abf1:	call   0x10001052
1002abf6:	mov    eax,DWORD PTR [esi+0x18]
1002abf9:	add    esp,0x10
1002abfc:	cmp    eax,0x10
1002abff:	jb     0x1002ac03
1002ac01:	mov    edi,DWORD PTR [edi]
1002ac03:	push   ebx
1002ac04:	push   0x10072a10
1002ac09:	push   eax
1002ac0a:	push   edi
1002ac0b:	call   0x10001036
1002ac10:	add    esp,0x10
1002ac13:	push   DWORD PTR [ebp-0x4]
1002ac16:	mov    ecx,esi
1002ac18:	call   0x10001420
1002ac1d:	mov    eax,esi
1002ac1f:	pop    edi
1002ac20:	pop    esi
1002ac21:	leave  
1002ac22:	ret    
1002ac23:	push   ebp
1002ac24:	mov    ebp,esp
1002ac26:	push   ecx
1002ac27:	push   ebx
1002ac28:	push   edi
1002ac29:	mov    edi,DWORD PTR [ebp+0x8]
1002ac2c:	mov    ebx,eax
1002ac2e:	cmp    DWORD PTR [ebx+0x14],edi
1002ac31:	jae    0x1002ac38
1002ac33:	call   0x1005747f
1002ac38:	mov    eax,DWORD PTR [ebx+0x14]
1002ac3b:	sub    eax,edi
1002ac3d:	cmp    eax,DWORD PTR [ebp+0xc]
1002ac40:	jae    0x1002ac45
1002ac42:	mov    DWORD PTR [ebp+0xc],eax
1002ac45:	or     eax,0xffffffff
1002ac48:	sub    eax,DWORD PTR [esi+0x14]
1002ac4b:	cmp    eax,DWORD PTR [ebp+0xc]
1002ac4e:	ja     0x1002ac55
1002ac50:	call   0x10057440
1002ac55:	cmp    DWORD PTR [ebp+0xc],0x0
1002ac59:	jbe    0x1002ad14
1002ac5f:	mov    eax,DWORD PTR [esi+0x14]
1002ac62:	add    eax,DWORD PTR [ebp+0xc]
1002ac65:	push   0x0
1002ac67:	push   eax
1002ac68:	mov    ecx,esi
1002ac6a:	mov    DWORD PTR [ebp-0x4],eax
1002ac6d:	call   0x1000143c
1002ac72:	test   al,al
1002ac74:	je     0x1002ad14
1002ac7a:	mov    eax,DWORD PTR [esi+0x18]
1002ac7d:	cmp    eax,0x10
1002ac80:	lea    edi,[esi+0x4]
1002ac83:	jb     0x1002ac89
1002ac85:	mov    edx,DWORD PTR [edi]
1002ac87:	jmp    0x1002ac8b
1002ac89:	mov    edx,edi
1002ac8b:	cmp    eax,0x10
1002ac8e:	jb     0x1002ac94
1002ac90:	mov    ecx,DWORD PTR [edi]
1002ac92:	jmp    0x1002ac96
1002ac94:	mov    ecx,edi
1002ac96:	push   DWORD PTR [esi+0x14]
1002ac99:	push   edx
1002ac9a:	mov    edx,DWORD PTR [ebp+0xc]
1002ac9d:	sub    eax,edx
1002ac9f:	push   eax
1002aca0:	add    ecx,edx
1002aca2:	push   ecx
1002aca3:	call   0x10001052
1002aca8:	add    esp,0x10
1002acab:	cmp    esi,ebx
1002acad:	jne    0x1002acdf
1002acaf:	mov    ecx,DWORD PTR [ebp+0x8]
1002acb2:	test   ecx,ecx
1002acb4:	jbe    0x1002acbb
1002acb6:	mov    eax,DWORD PTR [ebp+0xc]
1002acb9:	add    ecx,eax
1002acbb:	mov    edx,DWORD PTR [esi+0x18]
1002acbe:	cmp    edx,0x10
1002acc1:	jb     0x1002acc7
1002acc3:	mov    eax,DWORD PTR [edi]
1002acc5:	jmp    0x1002acc9
1002acc7:	mov    eax,edi
1002acc9:	cmp    edx,0x10
1002accc:	jb     0x1002acd0
1002acce:	mov    edi,DWORD PTR [edi]
1002acd0:	push   DWORD PTR [ebp+0xc]
1002acd3:	add    eax,ecx
1002acd5:	push   eax
1002acd6:	push   edx
1002acd7:	push   edi
1002acd8:	call   0x10001052
1002acdd:	jmp    0x1002ad07
1002acdf:	cmp    DWORD PTR [ebx+0x18],0x10
1002ace3:	jb     0x1002acea
1002ace5:	mov    ebx,DWORD PTR [ebx+0x4]
1002ace8:	jmp    0x1002aced
1002acea:	add    ebx,0x4
1002aced:	mov    eax,DWORD PTR [esi+0x18]
1002acf0:	cmp    eax,0x10
1002acf3:	jb     0x1002acf7
1002acf5:	mov    edi,DWORD PTR [edi]
1002acf7:	push   DWORD PTR [ebp+0xc]
1002acfa:	mov    ecx,DWORD PTR [ebp+0x8]
1002acfd:	add    ebx,ecx
1002acff:	push   ebx
1002ad00:	push   eax
1002ad01:	push   edi
1002ad02:	call   0x10001036
1002ad07:	add    esp,0x10
1002ad0a:	push   DWORD PTR [ebp-0x4]
1002ad0d:	mov    ecx,esi
1002ad0f:	call   0x10001420
1002ad14:	pop    edi
1002ad15:	mov    eax,esi
1002ad17:	pop    ebx
1002ad18:	leave  
1002ad19:	ret    0x8
1002ad1c:	push   ebp
1002ad1d:	sub    esp,0x70
1002ad20:	lea    ebp,[esp-0x4]
1002ad24:	mov    eax,ds:0x1007e030
1002ad29:	xor    eax,ebp
1002ad2b:	mov    DWORD PTR [ebp+0x70],eax
1002ad2e:	push   0x68
1002ad30:	mov    eax,0x100634bb
1002ad35:	call   0x10059ca8
1002ad3a:	mov    esi,DWORD PTR [ebp+0x7c]
1002ad3d:	mov    eax,DWORD PTR [esi]
1002ad3f:	xor    ebx,ebx
1002ad41:	cmp    BYTE PTR [eax+0x2c],bl
1002ad44:	mov    DWORD PTR [ebp-0x2c],esi
1002ad47:	jne    0x1002afd6
1002ad4d:	push   0x10072a7c
1002ad52:	push   0x8
1002ad54:	push   0x10071c4c
1002ad59:	call   0x100042e3
1002ad5e:	add    esp,0xc
1002ad61:	push   eax
1002ad62:	lea    ecx,[ebp-0x58]
1002ad65:	call   0x100011d1
1002ad6a:	push   ebx
1002ad6b:	lea    eax,[ebp-0x58]
1002ad6e:	push   eax
1002ad6f:	lea    eax,[ebp+0x54]
1002ad72:	push   eax
1002ad73:	mov    DWORD PTR [ebp-0x4],ebx
1002ad76:	mov    eax,DWORD PTR [esi+0x4]
1002ad79:	add    eax,0x20
1002ad7c:	call   0x100084c3
1002ad81:	xor    edi,edi
1002ad83:	push   ebx
1002ad84:	inc    edi
1002ad85:	push   edi
1002ad86:	lea    ecx,[ebp-0x58]
1002ad89:	mov    BYTE PTR [ebp-0x4],0x2
1002ad8d:	call   0x100012f4
1002ad92:	push   0x1006cd08
1002ad97:	lea    esi,[ebp+0x54]
1002ad9a:	call   0x100065b3
1002ad9f:	test   al,al
1002ada1:	pop    ecx
1002ada2:	je     0x1002adab
1002ada4:	push   ebx
1002ada5:	push   edi
1002ada6:	jmp    0x1002afce
1002adab:	push   0x65bba8d6
1002adb0:	push   0x10072aac
1002adb5:	call   0x100042d1
1002adba:	push   0x2bb6704e
1002adbf:	push   eax
1002adc0:	call   0x100042d1
1002adc5:	push   0x614b12ce
1002adca:	push   eax
1002adcb:	call   0x100042d1
1002add0:	push   eax
1002add1:	push   0x5
1002add3:	push   0x10072ae8
1002add8:	call   0x100042e3
1002addd:	mov    esi,eax
1002addf:	push   esi
1002ade0:	call   0x10043250
1002ade5:	add    esp,0x28
1002ade8:	push   eax
1002ade9:	push   esi
1002adea:	lea    eax,[ebp+0x54]
1002aded:	call   0x1002aff7
1002adf2:	cmp    eax,0xffffffff
1002adf5:	je     0x1002ada4
1002adf7:	add    eax,0x5
1002adfa:	push   0xffffffff
1002adfc:	push   eax
1002adfd:	lea    eax,[ebp+0x54]
1002ae00:	push   eax
1002ae01:	lea    eax,[ebp+0x1c]
1002ae04:	call   0x1000ca96
1002ae09:	lea    eax,[ebp-0x14]
1002ae0c:	push   eax
1002ae0d:	lea    eax,[ebp+0x1c]
1002ae10:	push   eax
1002ae11:	lea    eax,[ebp-0x1c]
1002ae14:	mov    BYTE PTR [ebp-0x4],0x3
1002ae18:	push   eax
1002ae19:	mov    DWORD PTR [ebp-0x14],ebx
1002ae1c:	call   0x10039db0
1002ae21:	mov    ecx,DWORD PTR [eax]
1002ae23:	mov    esi,ecx
1002ae25:	mov    DWORD PTR [ebp-0x24],esi
1002ae28:	mov    DWORD PTR [eax],ebx
1002ae2a:	mov    DWORD PTR [ebp-0x3c],esi
1002ae2d:	mov    BYTE PTR [ebp-0x4],0x4
1002ae31:	push   DWORD PTR [ebp-0x1c]
1002ae34:	call   0x100430d2
1002ae39:	add    esp,0x10
1002ae3c:	cmp    esi,ebx
1002ae3e:	push   ebx
1002ae3f:	jne    0x1002ae56
1002ae41:	call   0x100430d2
1002ae46:	pop    ecx
1002ae47:	push   ebx
1002ae48:	push   edi
1002ae49:	lea    ecx,[ebp+0x1c]
1002ae4c:	call   0x100012f4
1002ae51:	jmp    0x1002ada4
1002ae56:	push   DWORD PTR ds:0x10080dbc
1002ae5c:	lea    eax,[ebp-0x20]
1002ae5f:	push   DWORD PTR [ebp-0x14]
1002ae62:	lea    edx,[ebp-0x15]
1002ae65:	push   esi
1002ae66:	push   eax
1002ae67:	lea    ecx,[ebp-0x28]
1002ae6a:	mov    DWORD PTR [ebp-0x28],ebx
1002ae6d:	call   0x100399a0
1002ae72:	mov    ecx,DWORD PTR [eax]
1002ae74:	mov    edi,ecx
1002ae76:	mov    DWORD PTR [ebp-0x14],edi
1002ae79:	mov    DWORD PTR [eax],ebx
1002ae7b:	mov    DWORD PTR [ebp-0x1c],edi
1002ae7e:	mov    BYTE PTR [ebp-0x4],0x5
1002ae82:	push   DWORD PTR [ebp-0x20]
1002ae85:	call   0x100430d2
1002ae8a:	add    esp,0x18
1002ae8d:	cmp    edi,ebx
1002ae8f:	jne    0x1002aeb0
1002ae91:	push   ebx
1002ae92:	call   0x100430d2
1002ae97:	push   esi
1002ae98:	call   0x100430d2
1002ae9d:	pop    ecx
1002ae9e:	pop    ecx
1002ae9f:	push   ebx
1002aea0:	push   0x1
1002aea2:	lea    ecx,[ebp+0x1c]
1002aea5:	call   0x100012f4
1002aeaa:	push   ebx
1002aeab:	jmp    0x1002afcc
1002aeb0:	mov    BYTE PTR [ebp-0x4],0x6
1002aeb4:	mov    eax,DWORD PTR [ebp-0x28]
1002aeb7:	mov    DWORD PTR [ebp-0x30],edi
1002aeba:	lea    edi,[ebp+0x38]
1002aebd:	lea    esi,[ebp-0x38]
1002aec0:	mov    DWORD PTR [ebp-0x38],ebx
1002aec3:	mov    DWORD PTR [ebp-0x34],eax
1002aec6:	call   0x100377c0
1002aecb:	lea    edi,[ebp+0x0]
1002aece:	mov    BYTE PTR [ebp-0x4],0x7
1002aed2:	call   0x100377c0
1002aed7:	push   0x1
1002aed9:	lea    eax,[ebp+0x38]
1002aedc:	mov    ebx,edi
1002aede:	push   eax
1002aedf:	mov    edi,0x10080ee8
1002aee4:	mov    BYTE PTR [ebp-0x4],0x8
1002aee8:	call   0x10019a00
1002aeed:	push   0x7ea400e6
1002aef2:	push   0x10072af0
1002aef7:	call   0x100042d1
1002aefc:	pop    ecx
1002aefd:	pop    ecx
1002aefe:	push   eax
1002aeff:	push   0x8
1002af01:	push   0x10071c4c
1002af06:	call   0x100042e3
1002af0b:	add    esp,0xc
1002af0e:	push   eax
1002af0f:	lea    ecx,[ebp-0x74]
1002af12:	call   0x100011d1
1002af17:	lea    eax,[ebp-0x74]
1002af1a:	push   eax
1002af1b:	mov    eax,DWORD PTR [ebp-0x2c]
1002af1e:	mov    BYTE PTR [ebp-0x4],0x9
1002af22:	mov    edx,DWORD PTR [eax+0x8]
1002af25:	add    edx,0x20
1002af28:	lea    ecx,[ebp+0x38]
1002af2b:	call   0x100083ac
1002af30:	xor    esi,esi
1002af32:	xor    ebx,ebx
1002af34:	push   esi
1002af35:	inc    ebx
1002af36:	push   ebx
1002af37:	lea    ecx,[ebp-0x74]
1002af3a:	call   0x100012f4
1002af3f:	cmp    DWORD PTR [ebp+0x18],0x10
1002af43:	mov    ecx,DWORD PTR [ebp+0x4]
1002af46:	jae    0x1002af4b
1002af48:	lea    ecx,[ebp+0x4]
1002af4b:	cmp    DWORD PTR [ebp+0x50],0x10
1002af4f:	mov    eax,DWORD PTR [ebp+0x3c]
1002af52:	jae    0x1002af57
1002af54:	lea    eax,[ebp+0x3c]
1002af57:	push   ecx
1002af58:	push   eax
1002af59:	call   0x1000205f
1002af5e:	pop    ecx
1002af5f:	pop    ecx
1002af60:	push   esi
1002af61:	push   ebx
1002af62:	lea    ecx,[ebp+0x0]
1002af65:	call   0x100012f4
1002af6a:	push   esi
1002af6b:	push   ebx
1002af6c:	lea    ecx,[ebp+0x38]
1002af6f:	call   0x100012f4
1002af74:	push   DWORD PTR [ebp-0x14]
1002af77:	call   0x100430d2
1002af7c:	push   DWORD PTR [ebp-0x24]
1002af7f:	call   0x100430d2
1002af84:	pop    ecx
1002af85:	pop    ecx
1002af86:	push   esi
1002af87:	push   ebx
1002af88:	lea    ecx,[ebp+0x1c]
1002af8b:	call   0x100012f4
1002af90:	push   esi
1002af91:	push   ebx
1002af92:	lea    ecx,[ebp+0x54]
1002af95:	call   0x100012f4
1002af9a:	mov    al,bl
1002af9c:	jmp    0x1002afd8
1002af9e:	push   0x5
1002afa0:	call   0x10037b70
1002afa5:	pop    ecx
1002afa6:	mov    eax,0x1002afac
1002afab:	ret    
1002afac:	push   DWORD PTR [ebp-0x14]
1002afaf:	call   0x100430d2
1002afb4:	push   DWORD PTR [ebp-0x24]
1002afb7:	call   0x100430d2
1002afbc:	pop    ecx
1002afbd:	pop    ecx
1002afbe:	push   0x0
1002afc0:	push   0x1
1002afc2:	lea    ecx,[ebp+0x1c]
1002afc5:	call   0x100012f4
1002afca:	push   0x0
1002afcc:	push   0x1
1002afce:	lea    ecx,[ebp+0x54]
1002afd1:	call   0x100012f4
1002afd6:	xor    al,al
1002afd8:	mov    ecx,DWORD PTR [ebp-0xc]
1002afdb:	mov    DWORD PTR fs:0x0,ecx
1002afe2:	pop    ecx
1002afe3:	pop    edi
1002afe4:	pop    esi
1002afe5:	pop    ebx
1002afe6:	mov    ecx,DWORD PTR [ebp+0x70]
1002afe9:	xor    ecx,ebp
1002afeb:	call   0x100430d7
1002aff0:	add    ebp,0x74
1002aff3:	leave  
1002aff4:	ret    0x4
1002aff7:	push   ebp
1002aff8:	mov    ebp,esp
1002affa:	cmp    DWORD PTR [ebp+0xc],0x0
1002affe:	push   esi
1002afff:	mov    esi,eax
1002b001:	jne    0x1002b011
1002b003:	mov    esi,DWORD PTR [esi+0x14]
1002b006:	or     eax,0xffffffff
1002b009:	cmp    esi,eax
1002b00b:	ja     0x1002b079
1002b00d:	mov    eax,esi
1002b00f:	jmp    0x1002b079
1002b011:	mov    eax,DWORD PTR [esi+0x14]
1002b014:	cmp    DWORD PTR [ebp+0xc],eax
1002b017:	push   ebx
1002b018:	push   edi
1002b019:	ja     0x1002b074
1002b01b:	sub    eax,DWORD PTR [ebp+0xc]
1002b01e:	or     ecx,0xffffffff
1002b021:	cmp    eax,ecx
1002b023:	ja     0x1002b027
1002b025:	mov    ecx,eax
1002b027:	cmp    DWORD PTR [esi+0x18],0x10
1002b02b:	lea    edi,[esi+0x4]
1002b02e:	jb     0x1002b034
1002b030:	mov    eax,DWORD PTR [edi]
1002b032:	jmp    0x1002b036
1002b034:	mov    eax,edi
1002b036:	lea    ebx,[eax+ecx*1]
1002b039:	mov    cl,BYTE PTR [ebx]
1002b03b:	mov    eax,DWORD PTR [ebp+0x8]
1002b03e:	cmp    cl,BYTE PTR [eax]
1002b040:	jne    0x1002b053
1002b042:	push   DWORD PTR [ebp+0xc]
1002b045:	push   eax
1002b046:	push   ebx
1002b047:	call   0x100439bb
1002b04c:	add    esp,0xc
1002b04f:	test   eax,eax
1002b051:	je     0x1002b066
1002b053:	cmp    DWORD PTR [esi+0x18],0x10
1002b057:	jb     0x1002b05d
1002b059:	mov    eax,DWORD PTR [edi]
1002b05b:	jmp    0x1002b05f
1002b05d:	mov    eax,edi
1002b05f:	cmp    ebx,eax
1002b061:	je     0x1002b074
1002b063:	dec    ebx
1002b064:	jmp    0x1002b039
1002b066:	cmp    DWORD PTR [esi+0x18],0x10
1002b06a:	jb     0x1002b06e
1002b06c:	mov    edi,DWORD PTR [edi]
1002b06e:	mov    eax,ebx
1002b070:	sub    eax,edi
1002b072:	jmp    0x1002b077
1002b074:	or     eax,0xffffffff
1002b077:	pop    edi
1002b078:	pop    ebx
1002b079:	pop    esi
1002b07a:	pop    ebp
1002b07b:	ret    0x8
1002b07e:	push   0x10
1002b080:	push   DWORD PTR [esp+0xc]
1002b084:	push   DWORD PTR [esp+0xc]
1002b088:	call   0x100439bb
1002b08d:	add    esp,0xc
1002b090:	neg    eax
1002b092:	sbb    eax,eax
1002b094:	inc    eax
1002b095:	ret    
1002b096:	mov    eax,DWORD PTR [esi]
1002b098:	test   eax,eax
1002b09a:	je     0x1002b0ac
1002b09c:	push   eax
1002b09d:	call   DWORD PTR ds:0x100662a0
1002b0a3:	push   eax
1002b0a4:	push   DWORD PTR [esi]
1002b0a6:	call   DWORD PTR ds:0x100662a8
1002b0ac:	mov    DWORD PTR [edi],eax
1002b0ae:	cmp    DWORD PTR [esi],0x0
1002b0b1:	je     0x1002b0c1
1002b0b3:	test   eax,eax
1002b0b5:	jne    0x1002b0c1
1002b0b7:	push   0x8007000e
1002b0bc:	call   0x10001f24
1002b0c1:	mov    eax,edi
1002b0c3:	ret    
1002b0c4:	push   DWORD PTR [esp+0x4]
1002b0c8:	push   esi
1002b0c9:	call   DWORD PTR ds:0x10066280
1002b0cf:	test   eax,eax
1002b0d1:	jge    0x1002b0e1
1002b0d3:	push   eax
1002b0d4:	mov    WORD PTR [esi],0xa
1002b0d9:	mov    DWORD PTR [esi+0x8],eax
1002b0dc:	call   0x10001f24
1002b0e1:	ret    0x4
1002b0e4:	push   0x14
1002b0e6:	mov    eax,0x1005fa01
1002b0eb:	call   0x10059c75
1002b0f0:	mov    esi,ecx
1002b0f2:	cmp    WORD PTR [esi],0x9
1002b0f6:	jne    0x1002b10c
1002b0f8:	cmp    DWORD PTR [esi+0x8],0x0
1002b0fc:	je     0x1002b107
1002b0fe:	mov    eax,DWORD PTR [esi+0x8]
1002b101:	mov    ecx,DWORD PTR [eax]
1002b103:	push   eax
1002b104:	call   DWORD PTR [ecx+0x4]
1002b107:	mov    eax,DWORD PTR [esi+0x8]
1002b10a:	jmp    0x1002b144
1002b10c:	lea    eax,[ebp-0x20]
1002b10f:	push   eax
1002b110:	call   DWORD PTR ds:0x1006628c
1002b116:	and    DWORD PTR [ebp-0x4],0x0
1002b11a:	mov    ecx,esi
1002b11c:	mov    dx,0x9
1002b120:	lea    eax,[ebp-0x20]
1002b123:	call   0x10022565
1002b128:	mov    eax,DWORD PTR [ebp-0x18]
1002b12b:	test   eax,eax
1002b12d:	je     0x1002b135
1002b12f:	mov    ecx,DWORD PTR [eax]
1002b131:	push   eax
1002b132:	call   DWORD PTR [ecx+0x4]
1002b135:	mov    esi,DWORD PTR [ebp-0x18]
1002b138:	lea    eax,[ebp-0x20]
1002b13b:	push   eax
1002b13c:	call   DWORD PTR ds:0x10066294
1002b142:	mov    eax,esi
1002b144:	call   0x10059d4d
1002b149:	ret    
1002b14a:	mov    eax,DWORD PTR [esp+0x4]
1002b14e:	add    eax,0x4
1002b151:	push   eax
1002b152:	call   DWORD PTR ds:0x100660a4
1002b158:	ret    0x4
1002b15b:	push   esi
1002b15c:	mov    esi,DWORD PTR [esp+0x8]
1002b160:	push   edi
1002b161:	lea    eax,[esi+0x4]
1002b164:	push   eax
1002b165:	call   DWORD PTR ds:0x100660ac
1002b16b:	mov    edi,eax
1002b16d:	test   edi,edi
1002b16f:	jne    0x1002b178
1002b171:	push   esi
1002b172:	call   0x100430d2
1002b177:	pop    ecx
1002b178:	mov    eax,edi
1002b17a:	pop    edi
1002b17b:	pop    esi
1002b17c:	ret    0x4
1002b17f:	mov    DWORD PTR [ecx],0x10072eb0
1002b185:	ret    
1002b186:	test   BYTE PTR [esp+0x4],0x1
1002b18b:	push   esi
1002b18c:	mov    esi,ecx
1002b18e:	mov    DWORD PTR [esi],0x10072eb0
1002b194:	je     0x1002b19d
1002b196:	push   esi
1002b197:	call   0x100430d2
1002b19c:	pop    ecx
1002b19d:	mov    eax,esi
1002b19f:	pop    esi
1002b1a0:	ret    0x4
1002b1a3:	push   DWORD PTR [esp+0xc]
1002b1a7:	mov    edx,DWORD PTR [esp+0xc]
1002b1ab:	mov    eax,DWORD PTR [esp+0x8]
1002b1af:	mov    ecx,DWORD PTR [eax]
1002b1b1:	inc    edx
1002b1b2:	push   edx
1002b1b3:	push   eax
1002b1b4:	call   DWORD PTR [ecx+0x28]
1002b1b7:	ret    0xc
1002b1ba:	push   0xc
1002b1bc:	mov    eax,0x10060256
1002b1c1:	call   0x10059cde
1002b1c6:	mov    esi,ecx
1002b1c8:	and    DWORD PTR [ebp-0x4],0x0
1002b1cc:	call   DWORD PTR ds:0x1007efec
1002b1d2:	cmp    DWORD PTR [esi+0x18],0x10
1002b1d6:	mov    ebx,eax
1002b1d8:	jb     0x1002b1df
1002b1da:	mov    esi,DWORD PTR [esi+0x4]
1002b1dd:	jmp    0x1002b1e2
1002b1df:	add    esi,0x4
1002b1e2:	test   esi,esi
1002b1e4:	je     0x1002b1f8
1002b1e6:	push   esi
1002b1e7:	call   DWORD PTR ds:0x100660dc
1002b1ed:	mov    edi,eax
1002b1ef:	inc    edi
1002b1f0:	cmp    edi,0x3fffffff
1002b1f6:	jle    0x1002b1fc
1002b1f8:	xor    eax,eax
1002b1fa:	jmp    0x1002b210
1002b1fc:	lea    eax,[edi+edi*1]
1002b1ff:	call   0x1004b990
1002b204:	mov    eax,esp
1002b206:	push   ebx
1002b207:	push   edi
1002b208:	push   esi
1002b209:	mov    esi,eax
1002b20b:	call   0x10006c78
1002b210:	push   eax
1002b211:	lea    esi,[ebp-0x18]
1002b214:	call   0x1001b605
1002b219:	mov    esi,eax
1002b21b:	lea    edi,[ebp-0x14]
1002b21e:	mov    BYTE PTR [ebp-0x4],0x1
1002b222:	call   0x1002b096
1002b227:	mov    eax,edi
1002b229:	push   eax
1002b22a:	mov    eax,DWORD PTR [ebp+0x8]
1002b22d:	add    eax,0x4
1002b230:	push   eax
1002b231:	mov    BYTE PTR [ebp-0x4],0x2
1002b235:	call   0x1002d836
1002b23a:	lea    ecx,[ebp+0xc]
1002b23d:	cmp    eax,ecx
1002b23f:	je     0x1002b249
1002b241:	push   ecx
1002b242:	mov    esi,eax
1002b244:	call   0x1002b0c4
1002b249:	push   DWORD PTR [ebp-0x14]
1002b24c:	mov    esi,DWORD PTR ds:0x100662b4
1002b252:	call   esi
1002b254:	push   DWORD PTR [ebp-0x18]
1002b257:	call   esi
1002b259:	lea    eax,[ebp+0xc]
1002b25c:	push   eax
1002b25d:	call   DWORD PTR ds:0x10066294
1002b263:	lea    esp,[ebp-0x28]
1002b266:	call   0x10059d61
1002b26b:	ret    0x14
1002b26e:	push   ebp
1002b26f:	mov    ebp,esp
1002b271:	and    esp,0xfffffff8
1002b274:	push   0xffffffff
1002b276:	push   0x10060c12
1002b27b:	mov    eax,fs:0x0
1002b281:	push   eax
1002b282:	sub    esp,0x30
1002b285:	push   ebx
1002b286:	push   esi
1002b287:	push   edi
1002b288:	mov    eax,ds:0x1007e030
1002b28d:	xor    eax,esp
1002b28f:	push   eax
1002b290:	lea    eax,[esp+0x40]
1002b294:	mov    fs:0x0,eax
1002b29a:	xor    ebx,ebx
1002b29c:	cmp    DWORD PTR [ebp+0x1c],ebx
1002b29f:	jne    0x1002b2bb
1002b2a1:	mov    eax,0x80004003
1002b2a6:	mov    ecx,DWORD PTR [esp+0x40]
1002b2aa:	mov    DWORD PTR fs:0x0,ecx
1002b2b1:	pop    ecx
1002b2b2:	pop    edi
1002b2b3:	pop    esi
1002b2b4:	pop    ebx
1002b2b5:	mov    esp,ebp
1002b2b7:	pop    ebp
1002b2b8:	ret    0x18
1002b2bb:	lea    eax,[esp+0x2c]
1002b2bf:	push   eax
1002b2c0:	call   DWORD PTR ds:0x1006628c
1002b2c6:	mov    DWORD PTR [esp+0x48],ebx
1002b2ca:	cmp    WORD PTR [ebp+0xc],0x8
1002b2cf:	mov    esi,DWORD PTR ds:0x1006627c
1002b2d5:	je     0x1002b309
1002b2d7:	push   0x3
1002b2d9:	push   ebx
1002b2da:	lea    eax,[ebp+0xc]
1002b2dd:	push   eax
1002b2de:	lea    eax,[esp+0x38]
1002b2e2:	push   eax
1002b2e3:	call   esi
1002b2e5:	test   eax,eax
1002b2e7:	jl     0x1002b309
1002b2e9:	push   DWORD PTR [ebp+0x1c]
1002b2ec:	push   DWORD PTR [esp+0x38]
1002b2f0:	push   DWORD PTR [ebp+0x8]
1002b2f3:	call   0x1002d6f7
1002b2f8:	mov    edi,eax
1002b2fa:	lea    eax,[esp+0x2c]
1002b2fe:	push   eax
1002b2ff:	call   DWORD PTR ds:0x10066294
1002b305:	mov    eax,edi
1002b307:	jmp    0x1002b2a6
1002b309:	push   0x8
1002b30b:	push   ebx
1002b30c:	lea    eax,[ebp+0xc]
1002b30f:	push   eax
1002b310:	lea    eax,[esp+0x38]
1002b314:	push   eax
1002b315:	call   esi
1002b317:	cmp    eax,ebx
1002b319:	jl     0x1002b2f8
1002b31b:	push   DWORD PTR [esp+0x34]
1002b31f:	lea    esi,[esp+0x18]
1002b323:	call   0x1001b605
1002b328:	mov    esi,eax
1002b32a:	lea    edi,[esp+0x10]
1002b32e:	mov    BYTE PTR [esp+0x48],0x1
1002b333:	call   0x1002b096
1002b338:	mov    esi,DWORD PTR [ebp+0x8]
1002b33b:	mov    eax,edi
1002b33d:	push   eax
1002b33e:	lea    eax,[esp+0x28]
1002b342:	push   eax
1002b343:	add    esi,0x4
1002b346:	push   esi
1002b347:	call   0x1002d937
1002b34c:	push   DWORD PTR [esp+0x10]
1002b350:	mov    edi,DWORD PTR ds:0x100662b4
1002b356:	call   edi
1002b358:	mov    BYTE PTR [esp+0x48],bl
1002b35c:	push   DWORD PTR [esp+0x14]
1002b360:	call   edi
1002b362:	mov    eax,DWORD PTR [esi+0x4]
1002b365:	mov    DWORD PTR [esp+0x14],esi
1002b369:	lea    edi,[esp+0x14]
1002b36d:	lea    esi,[esp+0x24]
1002b371:	mov    DWORD PTR [esp+0x18],eax
1002b375:	call   0x10004b10
1002b37a:	test   al,al
1002b37c:	je     0x1002b388
1002b37e:	mov    edi,0x80004005
1002b383:	jmp    0x1002b2fa
1002b388:	lea    esi,[esp+0x24]
1002b38c:	call   0x1002d99e
1002b391:	add    eax,0x8
1002b394:	push   eax
1002b395:	lea    esi,[esp+0x18]
1002b399:	mov    WORD PTR [esp+0x18],bx
1002b39e:	call   0x1002b0c4
1002b3a3:	push   DWORD PTR [ebp+0x1c]
1002b3a6:	mov    BYTE PTR [esp+0x4c],0x2
1002b3ab:	mov    esi,DWORD PTR ds:0x10066294
1002b3b1:	call   esi
1002b3b3:	mov    edi,eax
1002b3b5:	cmp    edi,ebx
1002b3b7:	jl     0x1002b3da
1002b3b9:	push   0x10
1002b3bb:	lea    eax,[esp+0x18]
1002b3bf:	push   eax
1002b3c0:	push   0x10
1002b3c2:	push   DWORD PTR [ebp+0x1c]
1002b3c5:	call   0x10043605
1002b3ca:	push   eax
1002b3cb:	call   0x10001f3c
1002b3d0:	add    esp,0x14
1002b3d3:	mov    WORD PTR [esp+0x14],bx
1002b3d8:	xor    edi,edi
1002b3da:	lea    eax,[esp+0x14]
1002b3de:	push   eax
1002b3df:	call   esi
1002b3e1:	jmp    0x1002b2fa
1002b3e6:	mov    eax,DWORD PTR [esp+0x4]
1002b3ea:	push   esi
1002b3eb:	mov    ecx,DWORD PTR [eax]
1002b3ed:	push   edi
1002b3ee:	push   DWORD PTR [esp+0x20]
1002b3f2:	lea    esi,[esp+0x14]
1002b3f6:	sub    esp,0x10
1002b3f9:	mov    edi,esp
1002b3fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002b3fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002b3fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002b3fe:	push   eax
1002b3ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002b400:	call   DWORD PTR [ecx+0x30]
1002b403:	pop    edi
1002b404:	pop    esi
1002b405:	ret    0x18
1002b408:	push   ebp
1002b409:	mov    ebp,esp
1002b40b:	and    esp,0xfffffff8
1002b40e:	sub    esp,0x14
1002b411:	cmp    DWORD PTR [ebp+0x10],0x0
1002b415:	push   ebx
1002b416:	push   esi
1002b417:	push   edi
1002b418:	jne    0x1002b424
1002b41a:	mov    eax,0x80004003
1002b41f:	jmp    0x1002b4c5
1002b424:	cmp    DWORD PTR [ebp+0xc],0x1
1002b428:	jge    0x1002b434
1002b42a:	mov    eax,0x80070057
1002b42f:	jmp    0x1002b4c5
1002b434:	mov    ebx,DWORD PTR [ebp+0x8]
1002b437:	dec    DWORD PTR [ebp+0xc]
1002b43a:	mov    eax,DWORD PTR [ebx+0x8]
1002b43d:	mov    eax,DWORD PTR [eax]
1002b43f:	add    ebx,0x4
1002b442:	mov    DWORD PTR [esp+0xc],0x80004005
1002b44a:	mov    DWORD PTR [esp+0x10],ebx
1002b44e:	mov    DWORD PTR [esp+0x14],eax
1002b452:	mov    DWORD PTR [esp+0x18],ebx
1002b456:	mov    eax,DWORD PTR [ebx+0x4]
1002b459:	lea    edi,[esp+0x18]
1002b45d:	lea    esi,[esp+0x10]
1002b461:	mov    DWORD PTR [esp+0x1c],eax
1002b465:	call   0x10004b10
1002b46a:	test   al,al
1002b46c:	jne    0x1002b47e
1002b46e:	cmp    DWORD PTR [ebp+0xc],0x0
1002b472:	jle    0x1002b47e
1002b474:	call   0x1002df1d
1002b479:	dec    DWORD PTR [ebp+0xc]
1002b47c:	jmp    0x1002b456
1002b47e:	mov    eax,DWORD PTR [ebx+0x4]
1002b481:	lea    edi,[esp+0x18]
1002b485:	lea    esi,[esp+0x10]
1002b489:	mov    DWORD PTR [esp+0x1c],eax
1002b48d:	mov    DWORD PTR [esp+0x18],ebx
1002b491:	call   0x10004b10
1002b496:	test   al,al
1002b498:	jne    0x1002b4c1
1002b49a:	call   0x1002d99e
1002b49f:	mov    esi,eax
1002b4a1:	mov    eax,DWORD PTR [esi]
1002b4a3:	test   eax,eax
1002b4a5:	je     0x1002b4b7
1002b4a7:	push   eax
1002b4a8:	call   DWORD PTR ds:0x100662a0
1002b4ae:	push   eax
1002b4af:	push   DWORD PTR [esi]
1002b4b1:	call   DWORD PTR ds:0x100662a8
1002b4b7:	mov    ecx,DWORD PTR [ebp+0x10]
1002b4ba:	and    DWORD PTR [esp+0xc],0x0
1002b4bf:	mov    DWORD PTR [ecx],eax
1002b4c1:	mov    eax,DWORD PTR [esp+0xc]
1002b4c5:	pop    edi
1002b4c6:	pop    esi
1002b4c7:	pop    ebx
1002b4c8:	mov    esp,ebp
1002b4ca:	pop    ebp
1002b4cb:	ret    0xc
1002b4ce:	push   DWORD PTR [eax]
1002b4d0:	call   DWORD PTR ds:0x100662b4
1002b4d6:	ret    
1002b4d7:	mov    eax,DWORD PTR [esi]
1002b4d9:	test   eax,eax
1002b4db:	je     0x1002b4ea
1002b4dd:	push   DWORD PTR [esi+0x4]
1002b4e0:	push   eax
1002b4e1:	call   DWORD PTR ds:0x1006616c
1002b4e7:	and    DWORD PTR [esi],0x0
1002b4ea:	ret    
1002b4eb:	push   ebp
1002b4ec:	sub    esp,0xc4
1002b4f2:	lea    ebp,[esp-0x4]
1002b4f6:	mov    eax,ds:0x1007e030
1002b4fb:	xor    eax,ebp
1002b4fd:	mov    DWORD PTR [ebp+0xc4],eax
1002b503:	push   0x184
1002b508:	mov    eax,0x10064d18
1002b50d:	call   0x10059ca8
1002b512:	mov    eax,DWORD PTR [ebp+0xd0]
1002b518:	mov    ebx,ecx
1002b51a:	xor    edi,edi
1002b51c:	mov    DWORD PTR [ebp-0x14],ebx
1002b51f:	mov    DWORD PTR [ebp-0x34],eax
1002b522:	mov    DWORD PTR [ebp-0x68],edi
1002b525:	call   0x1000205f
1002b52a:	mov    ecx,0x10080a74
1002b52f:	lea    esi,[ebp-0x18]
1002b532:	mov    DWORD PTR [ebp-0x1c],edi
1002b535:	call   0x10002143
1002b53a:	lea    eax,[ebp-0x64]
1002b53d:	mov    DWORD PTR [ebp-0x4],edi
1002b540:	push   eax
1002b541:	mov    BYTE PTR [ebp-0x4],0x1
1002b545:	call   0x1002ec14
1002b54a:	test   eax,eax
1002b54c:	jge    0x1002b565
1002b54e:	push   ebx
1002b54f:	lea    edi,[ebp-0x1c]
1002b552:	call   0x1002be13
1002b557:	mov    esi,edi
1002b559:	call   0x1002bdfb
1002b55e:	mov    eax,ebx
1002b560:	jmp    0x1002b973
1002b565:	call   0x1000205f
1002b56a:	mov    eax,DWORD PTR [ebp-0x64]
1002b56d:	cmp    eax,edi
1002b56f:	mov    DWORD PTR [ebp-0x20],eax
1002b572:	je     0x1002b57a
1002b574:	mov    ecx,DWORD PTR [eax]
1002b576:	push   eax
1002b577:	call   DWORD PTR [ecx+0x4]
1002b57a:	lea    ecx,[ebp+0xa8]
1002b580:	mov    BYTE PTR [ebp-0x4],0x2
1002b584:	call   0x10018612
1002b589:	cmp    BYTE PTR [ebp+0xd4],0x0
1002b590:	mov    ecx,0x10072be0
1002b595:	jne    0x1002b59c
1002b597:	mov    ecx,0x10072be8
1002b59c:	cmp    DWORD PTR [ebp+0xc0],0x10
1002b5a3:	mov    eax,DWORD PTR [ebp+0xac]
1002b5a9:	jae    0x1002b5b1
1002b5ab:	lea    eax,[ebp+0xac]
1002b5b1:	push   eax
1002b5b2:	push   ecx
1002b5b3:	call   0x1000205f
1002b5b8:	pop    ecx
1002b5b9:	pop    ecx
1002b5ba:	push   edi
1002b5bb:	lea    ecx,[ebp+0x8c]
1002b5c1:	mov    DWORD PTR [ebp+0xa4],0xf
1002b5cb:	call   0x10001420
1002b5d0:	lea    edi,[ebp-0x74]
1002b5d3:	mov    ecx,0x10080ed8
1002b5d8:	mov    BYTE PTR [ebp-0x4],0x4
1002b5dc:	call   0x10019616
1002b5e1:	mov    BYTE PTR [ebp-0x4],0x5
1002b5e5:	mov    eax,DWORD PTR [ebp-0x70]
1002b5e8:	mov    edi,DWORD PTR [eax]
1002b5ea:	lea    ebx,[ebp-0x74]
1002b5ed:	mov    DWORD PTR [ebp-0x2c],edi
1002b5f0:	mov    DWORD PTR [ebp-0x30],ebx
1002b5f3:	test   ebx,ebx
1002b5f5:	mov    esi,DWORD PTR [ebp-0x70]
1002b5f8:	je     0x1002b601
1002b5fa:	lea    eax,[ebp-0x74]
1002b5fd:	cmp    ebx,eax
1002b5ff:	je     0x1002b606
1002b601:	call   0x100435f0
1002b606:	cmp    edi,esi
1002b608:	je     0x1002b6ea
1002b60e:	push   0x10072bf0
1002b613:	lea    eax,[ebp+0x8c]
1002b619:	push   eax
1002b61a:	call   0x10004120
1002b61f:	test   ebx,ebx
1002b621:	jne    0x1002b628
1002b623:	call   0x100435f0
1002b628:	cmp    edi,DWORD PTR [ebx+0x4]
1002b62b:	jne    0x1002b632
1002b62d:	call   0x100435f0
1002b632:	lea    eax,[edi+0x8]
1002b635:	push   eax
1002b636:	lea    esi,[ebp-0xb0]
1002b63c:	mov    DWORD PTR [ebp-0x24],eax
1002b63f:	call   0x10030580
1002b644:	pop    ecx
1002b645:	mov    edx,eax
1002b647:	lea    ecx,[ebp+0x70]
1002b64a:	mov    BYTE PTR [ebp-0x4],0x6
1002b64e:	call   0x10033eb0
1002b653:	push   0x0
1002b655:	push   0x1
1002b657:	mov    ecx,esi
1002b659:	mov    BYTE PTR [ebp-0x4],0x8
1002b65d:	call   0x100012f4
1002b662:	push   0x1006cd08
1002b667:	lea    esi,[ebp+0x70]
1002b66a:	call   0x100065b3
1002b66f:	test   al,al
1002b671:	pop    ecx
1002b672:	jne    0x1002b686
1002b674:	mov    eax,esi
1002b676:	push   eax
1002b677:	lea    ecx,[ebp+0x54]
1002b67a:	call   0x10031180
1002b67f:	pop    ecx
1002b680:	mov    BYTE PTR [ebp-0x4],0x9
1002b684:	jmp    0x1002b6a0
1002b686:	cmp    edi,DWORD PTR [ebx+0x4]
1002b689:	jne    0x1002b690
1002b68b:	call   0x100435f0
1002b690:	push   DWORD PTR [ebp-0x24]
1002b693:	lea    ecx,[ebp+0x54]
1002b696:	call   0x10031180
1002b69b:	pop    ecx
1002b69c:	mov    BYTE PTR [ebp-0x4],0xa
1002b6a0:	cmp    DWORD PTR [eax+0x18],0x10
1002b6a4:	jb     0x1002b6ab
1002b6a6:	mov    eax,DWORD PTR [eax+0x4]
1002b6a9:	jmp    0x1002b6ae
1002b6ab:	add    eax,0x4
1002b6ae:	push   eax
1002b6af:	lea    eax,[ebp+0x8c]
1002b6b5:	push   eax
1002b6b6:	call   0x10004120
1002b6bb:	push   0x0
1002b6bd:	push   0x1
1002b6bf:	lea    ecx,[ebp+0x54]
1002b6c2:	call   0x100012f4
1002b6c7:	push   0x0
1002b6c9:	push   0x1
1002b6cb:	lea    ecx,[ebp+0x70]
1002b6ce:	mov    BYTE PTR [ebp-0x4],0x5
1002b6d2:	call   0x100012f4
1002b6d7:	lea    esi,[ebp-0x30]
1002b6da:	call   0x1001995f
1002b6df:	mov    edi,DWORD PTR [ebp-0x2c]
1002b6e2:	mov    ebx,DWORD PTR [ebp-0x30]
1002b6e5:	jmp    0x1002b5f3
1002b6ea:	push   0x1f4
1002b6ef:	push   DWORD PTR ds:0x10080ee4
1002b6f5:	call   DWORD PTR ds:0x10066084
1002b6fb:	test   eax,eax
1002b6fd:	jne    0x1002b715
1002b6ff:	mov    esi,0x10080ed8
1002b704:	call   0x10019727
1002b709:	push   DWORD PTR ds:0x10080ee4
1002b70f:	call   DWORD PTR ds:0x10066094
1002b715:	lea    esi,[ebp-0x74]
1002b718:	mov    BYTE PTR [ebp-0x4],0x4
1002b71c:	call   0x10019727
1002b721:	push   DWORD PTR [ebp-0x70]
1002b724:	call   0x100430d2
1002b729:	pop    ecx
1002b72a:	call   DWORD PTR ds:0x1007efec
1002b730:	mov    eax,DWORD PTR [ebp-0x34]
1002b733:	mov    eax,DWORD PTR [eax]
1002b735:	sub    eax,0x10
1002b738:	call   0x10004e00
1002b73d:	add    eax,0x10
1002b740:	mov    DWORD PTR [ebp-0x28],eax
1002b743:	cmp    BYTE PTR [ebp+0xd4],0x0
1002b74a:	mov    BYTE PTR [ebp-0x4],0xb
1002b74e:	mov    ebx,0x1006cce8
1002b753:	jne    0x1002b75a
1002b755:	mov    ebx,0x1006cd0c
1002b75a:	push   DWORD PTR ds:0x10080d90
1002b760:	lea    ecx,[ebp-0xb0]
1002b766:	call   0x100011d1
1002b76b:	lea    ecx,[ebp-0x28]
1002b76e:	lea    edi,[ebp-0x120]
1002b774:	mov    BYTE PTR [ebp-0x4],0xc
1002b778:	call   0x100308a0
1002b77d:	mov    esi,eax
1002b77f:	push   0x19b28fa2
1002b784:	push   0x10072c28
1002b789:	mov    BYTE PTR [ebp-0x4],0xd
1002b78d:	call   0x100042d1
1002b792:	pop    ecx
1002b793:	pop    ecx
1002b794:	push   0x5e63734c
1002b799:	push   eax
1002b79a:	call   0x100042d1
1002b79f:	pop    ecx
1002b7a0:	pop    ecx
1002b7a1:	push   eax
1002b7a2:	push   0x2
1002b7a4:	push   0x10072c5c
1002b7a9:	call   0x100042e3
1002b7ae:	add    esp,0xc
1002b7b1:	push   eax
1002b7b2:	lea    ecx,[ebp-0x104]
1002b7b8:	call   0x100011d1
1002b7bd:	push   esi
1002b7be:	push   eax
1002b7bf:	lea    eax,[ebp-0x13c]
1002b7c5:	push   eax
1002b7c6:	mov    BYTE PTR [ebp-0x4],0xe
1002b7ca:	call   0x100064fb
1002b7cf:	add    esp,0xc
1002b7d2:	mov    esi,eax
1002b7d4:	push   0x24491d06
1002b7d9:	push   0x10072bf8
1002b7de:	mov    BYTE PTR [ebp-0x4],0xf
1002b7e2:	call   0x100042d1
1002b7e7:	pop    ecx
1002b7e8:	pop    ecx
1002b7e9:	push   eax
1002b7ea:	push   0x4
1002b7ec:	push   0x10072c20
1002b7f1:	call   0x100042e3
1002b7f6:	add    esp,0xc
1002b7f9:	push   eax
1002b7fa:	lea    eax,[ebp-0x174]
1002b800:	push   esi
1002b801:	push   eax
1002b802:	call   0x100064b5
1002b807:	add    esp,0xc
1002b80a:	push   ebx
1002b80b:	push   eax
1002b80c:	lea    eax,[ebp-0xe8]
1002b812:	push   eax
1002b813:	mov    BYTE PTR [ebp-0x4],0x10
1002b817:	call   0x100064b5
1002b81c:	add    esp,0xc
1002b81f:	mov    BYTE PTR [ebp-0x4],0x11
1002b823:	cmp    DWORD PTR [ebp+0xa4],0x10
1002b82a:	mov    ecx,DWORD PTR [ebp+0x90]
1002b830:	jae    0x1002b838
1002b832:	lea    ecx,[ebp+0x90]
1002b838:	push   ecx
1002b839:	push   eax
1002b83a:	lea    eax,[ebp-0x190]
1002b840:	push   eax
1002b841:	call   0x100064b5
1002b846:	add    esp,0xc
1002b849:	push   DWORD PTR [ebp+0xd8]
1002b84f:	lea    ecx,[ebp-0x24]
1002b852:	push   ecx
1002b853:	push   eax
1002b854:	lea    eax,[ebp+0xa8]
1002b85a:	push   eax
1002b85b:	lea    eax,[ebp-0x84]
1002b861:	push   eax
1002b862:	lea    edx,[ebp-0xb0]
1002b868:	mov    BYTE PTR [ebp-0x4],0x12
1002b86c:	call   0x10031060
1002b871:	mov    ecx,DWORD PTR [eax]
1002b873:	mov    esi,ecx
1002b875:	xor    ebx,ebx
1002b877:	add    esp,0x14
1002b87a:	mov    DWORD PTR [eax],ebx
1002b87c:	mov    DWORD PTR [ebp-0x54],esi
1002b87f:	push   DWORD PTR [ebp-0x84]
1002b885:	call   0x100430d2
1002b88a:	pop    ecx
1002b88b:	xor    edi,edi
1002b88d:	push   ebx
1002b88e:	inc    edi
1002b88f:	push   edi
1002b890:	lea    ecx,[ebp-0x190]
1002b896:	call   0x100012f4
1002b89b:	push   ebx
1002b89c:	push   edi
1002b89d:	lea    ecx,[ebp-0xe8]
1002b8a3:	call   0x100012f4
1002b8a8:	push   ebx
1002b8a9:	push   edi
1002b8aa:	lea    ecx,[ebp-0x174]
1002b8b0:	call   0x100012f4
1002b8b5:	push   ebx
1002b8b6:	push   edi
1002b8b7:	lea    ecx,[ebp-0x13c]
1002b8bd:	call   0x100012f4
1002b8c2:	push   ebx
1002b8c3:	push   edi
1002b8c4:	lea    ecx,[ebp-0x104]
1002b8ca:	call   0x100012f4
1002b8cf:	push   ebx
1002b8d0:	push   edi
1002b8d1:	lea    ecx,[ebp-0x120]
1002b8d7:	call   0x100012f4
1002b8dc:	push   ebx
1002b8dd:	push   edi
1002b8de:	lea    ecx,[ebp-0xb0]
1002b8e4:	mov    BYTE PTR [ebp-0x4],0x1a
1002b8e8:	call   0x100012f4
1002b8ed:	cmp    esi,ebx
1002b8ef:	jne    0x1002b996
1002b8f5:	call   0x10018591
1002b8fa:	cmp    DWORD PTR [ebp+0xc0],0x10
1002b901:	mov    eax,DWORD PTR [ebp+0xac]
1002b907:	jae    0x1002b90f
1002b909:	lea    eax,[ebp+0xac]
1002b90f:	push   eax
1002b910:	call   0x1000205f
1002b915:	push   0x5
1002b917:	call   0x10037b70
1002b91c:	pop    ecx
1002b91d:	pop    ecx
1002b91e:	push   DWORD PTR [ebp-0x14]
1002b921:	lea    edi,[ebp-0x1c]
1002b924:	call   0x1002be13
1002b929:	push   ebx
1002b92a:	call   0x100430d2
1002b92f:	mov    eax,DWORD PTR [ebp-0x28]
1002b932:	pop    ecx
1002b933:	add    eax,0xfffffff0
1002b936:	call   0x10002060
1002b93b:	push   ebx
1002b93c:	push   0x1
1002b93e:	lea    ecx,[ebp+0x8c]
1002b944:	call   0x100012f4
1002b949:	push   ebx
1002b94a:	push   0x1
1002b94c:	lea    ecx,[ebp+0xa8]
1002b952:	call   0x100012f4
1002b957:	mov    BYTE PTR [ebp-0x4],0x1
1002b95b:	mov    eax,DWORD PTR [ebp-0x20]
1002b95e:	cmp    eax,ebx
1002b960:	je     0x1002b968
1002b962:	mov    ecx,DWORD PTR [eax]
1002b964:	push   eax
1002b965:	call   DWORD PTR [ecx+0x8]
1002b968:	lea    esi,[ebp-0x1c]
1002b96b:	call   0x1002bdfb
1002b970:	mov    eax,DWORD PTR [ebp-0x14]
1002b973:	mov    ecx,DWORD PTR [ebp-0xc]
1002b976:	mov    DWORD PTR fs:0x0,ecx
1002b97d:	pop    ecx
1002b97e:	pop    edi
1002b97f:	pop    esi
1002b980:	pop    ebx
1002b981:	mov    ecx,DWORD PTR [ebp+0xc4]
1002b987:	xor    ecx,ebp
1002b989:	call   0x100430d7
1002b98e:	add    ebp,0xc8
1002b994:	leave  
1002b995:	ret    
1002b996:	mov    eax,DWORD PTR [ebp-0x24]
1002b999:	mov    DWORD PTR [ebp-0x3c],eax
1002b99c:	lea    eax,[ebp-0x40]
1002b99f:	push   eax
1002b9a0:	mov    DWORD PTR [ebp-0x40],ebx
1002b9a3:	mov    DWORD PTR [ebp-0x38],esi
1002b9a6:	call   0x100379d0
1002b9ab:	mov    DWORD PTR [ebp-0x80],eax
1002b9ae:	mov    DWORD PTR [ebp-0x58],ebx
1002b9b1:	mov    eax,DWORD PTR [ebp-0x58]
1002b9b4:	cmp    eax,DWORD PTR [ebp-0x80]
1002b9b7:	je     0x1002bd5d
1002b9bd:	lea    eax,[ebp-0x40]
1002b9c0:	push   eax
1002b9c1:	lea    esi,[ebp+0x70]
1002b9c4:	call   0x10037690
1002b9c9:	lea    eax,[ebp-0x40]
1002b9cc:	push   eax
1002b9cd:	mov    BYTE PTR [ebp-0x4],0x1b
1002b9d1:	call   0x100379d0
1002b9d6:	mov    DWORD PTR [ebp-0x7c],eax
1002b9d9:	lea    eax,[ebp-0x34]
1002b9dc:	push   eax
1002b9dd:	call   0x1002eb94
1002b9e2:	test   eax,eax
1002b9e4:	jge    0x1002ba03
1002b9e6:	push   DWORD PTR [ebp-0x14]
1002b9e9:	lea    edi,[ebp-0x1c]
1002b9ec:	call   0x1002be13
1002b9f1:	push   ebx
1002b9f2:	push   0x1
1002b9f4:	mov    ecx,esi
1002b9f6:	call   0x100012f4
1002b9fb:	push   DWORD PTR [ebp-0x54]
1002b9fe:	jmp    0x1002b92a
1002ba03:	mov    esi,DWORD PTR [ebp-0x34]
1002ba06:	cmp    esi,ebx
1002ba08:	mov    DWORD PTR [ebp-0x24],esi
1002ba0b:	je     0x1002ba13
1002ba0d:	mov    eax,DWORD PTR [esi]
1002ba0f:	push   esi
1002ba10:	call   DWORD PTR [eax+0x4]
1002ba13:	mov    BYTE PTR [ebp-0x4],0x1c
1002ba17:	mov    DWORD PTR [ebp-0x50],ebx
1002ba1a:	mov    eax,DWORD PTR [ebp-0x50]
1002ba1d:	cmp    eax,DWORD PTR [ebp-0x7c]
1002ba20:	jge    0x1002bd14
1002ba26:	lea    eax,[ebp-0x40]
1002ba29:	push   eax
1002ba2a:	lea    esi,[ebp-0x158]
1002ba30:	call   0x10037690
1002ba35:	lea    ecx,[ebp-0x5c]
1002ba38:	push   ecx
1002ba39:	mov    ebx,eax
1002ba3b:	mov    BYTE PTR [ebp-0x4],0x1d
1002ba3f:	call   0x100343a0
1002ba44:	pop    ecx
1002ba45:	push   0x0
1002ba47:	push   0x1
1002ba49:	mov    ecx,esi
1002ba4b:	mov    BYTE PTR [ebp-0x4],0x1f
1002ba4f:	call   0x100012f4
1002ba54:	lea    eax,[ebp-0x40]
1002ba57:	push   eax
1002ba58:	lea    esi,[ebp-0xcc]
1002ba5e:	call   0x10037690
1002ba63:	lea    ecx,[ebp-0x48]
1002ba66:	push   ecx
1002ba67:	mov    ebx,eax
1002ba69:	mov    BYTE PTR [ebp-0x4],0x20
1002ba6d:	call   0x100343a0
1002ba72:	pop    ecx
1002ba73:	push   0x0
1002ba75:	push   0x1
1002ba77:	mov    ecx,esi
1002ba79:	mov    BYTE PTR [ebp-0x4],0x22
1002ba7d:	call   0x100012f4
1002ba82:	lea    eax,[ebp-0x40]
1002ba85:	push   eax
1002ba86:	lea    esi,[ebp+0x1c]
1002ba89:	call   0x10037690
1002ba8e:	mov    edx,esi
1002ba90:	lea    esi,[ebp+0x54]
1002ba93:	mov    BYTE PTR [ebp-0x4],0x23
1002ba97:	call   0x10033a60
1002ba9c:	lea    eax,[ebp-0x60]
1002ba9f:	push   eax
1002baa0:	mov    ebx,esi
1002baa2:	mov    BYTE PTR [ebp-0x4],0x24
1002baa6:	call   0x100343a0
1002baab:	pop    ecx
1002baac:	lea    eax,[ebp-0x40]
1002baaf:	push   eax
1002bab0:	lea    esi,[ebp-0xcc]
1002bab6:	mov    BYTE PTR [ebp-0x4],0x25
1002baba:	call   0x10037690
1002babf:	lea    ecx,[ebp-0x44]
1002bac2:	push   ecx
1002bac3:	mov    ebx,eax
1002bac5:	mov    BYTE PTR [ebp-0x4],0x26
1002bac9:	call   0x100343a0
1002bace:	pop    ecx
1002bacf:	push   0x0
1002bad1:	push   0x1
1002bad3:	mov    ecx,esi
1002bad5:	mov    BYTE PTR [ebp-0x4],0x28
1002bad9:	call   0x100012f4
1002bade:	lea    eax,[ebp-0x40]
1002bae1:	push   eax
1002bae2:	lea    esi,[ebp+0x0]
1002bae5:	call   0x10037690
1002baea:	lea    eax,[ebp-0x4c]
1002baed:	mov    BYTE PTR [ebp-0x4],0x29
1002baf1:	push   eax
1002baf2:	mov    ebx,esi
1002baf4:	call   0x100343a0
1002baf9:	pop    ecx
1002bafa:	lea    eax,[ebp-0x40]
1002bafd:	push   eax
1002bafe:	lea    esi,[ebp+0x38]
1002bb01:	mov    BYTE PTR [ebp-0x4],0x2a
1002bb05:	call   0x10037690
1002bb0a:	mov    BYTE PTR [ebp-0x4],0x2b
1002bb0e:	cmp    DWORD PTR [ebp+0x50],0x10
1002bb12:	mov    eax,DWORD PTR [ebp+0x3c]
1002bb15:	jae    0x1002bb1a
1002bb17:	lea    eax,[ebp+0x3c]
1002bb1a:	push   eax
1002bb1b:	call   0x10045f55
1002bb20:	mov    DWORD PTR [ebp-0x2c],eax
1002bb23:	sar    eax,0x6
1002bb26:	pop    ecx
1002bb27:	and    eax,0x3
1002bb2a:	push   eax
1002bb2b:	lea    eax,[ebp+0x1c]
1002bb2e:	push   eax
1002bb2f:	lea    ebx,[ebp+0x0]
1002bb32:	mov    edi,0x10080ee8
1002bb37:	call   0x10019a00
1002bb3c:	lea    eax,[ebp-0x68]
1002bb3f:	push   eax
1002bb40:	call   0x1002eb0e
1002bb45:	test   eax,eax
1002bb47:	jge    0x1002bc03
1002bb4d:	push   DWORD PTR [ebp-0x14]
1002bb50:	lea    edi,[ebp-0x1c]
1002bb53:	call   0x1002be13
1002bb58:	xor    esi,esi
1002bb5a:	xor    ebx,ebx
1002bb5c:	push   esi
1002bb5d:	inc    ebx
1002bb5e:	push   ebx
1002bb5f:	lea    ecx,[ebp+0x38]
1002bb62:	call   0x100012f4
1002bb67:	lea    edi,[ebp-0x4c]
1002bb6a:	call   0x100025aa
1002bb6f:	push   esi
1002bb70:	push   ebx
1002bb71:	lea    ecx,[ebp+0x0]
1002bb74:	call   0x100012f4
1002bb79:	lea    edi,[ebp-0x44]
1002bb7c:	call   0x100025aa
1002bb81:	lea    edi,[ebp-0x60]
1002bb84:	call   0x100025aa
1002bb89:	push   esi
1002bb8a:	push   ebx
1002bb8b:	lea    ecx,[ebp+0x54]
1002bb8e:	call   0x100012f4
1002bb93:	push   esi
1002bb94:	push   ebx
1002bb95:	lea    ecx,[ebp+0x1c]
1002bb98:	call   0x100012f4
1002bb9d:	lea    edi,[ebp-0x48]
1002bba0:	call   0x100025aa
1002bba5:	lea    edi,[ebp-0x5c]
1002bba8:	call   0x100025aa
1002bbad:	mov    BYTE PTR [ebp-0x4],0x1b
1002bbb1:	mov    eax,DWORD PTR [ebp-0x24]
1002bbb4:	cmp    eax,esi
1002bbb6:	je     0x1002bbbe
1002bbb8:	mov    ecx,DWORD PTR [eax]
1002bbba:	push   eax
1002bbbb:	call   DWORD PTR [ecx+0x8]
1002bbbe:	push   esi
1002bbbf:	push   ebx
1002bbc0:	lea    ecx,[ebp+0x70]
1002bbc3:	call   0x100012f4
1002bbc8:	push   DWORD PTR [ebp-0x54]
1002bbcb:	call   0x100430d2
1002bbd0:	mov    eax,DWORD PTR [ebp-0x28]
1002bbd3:	pop    ecx
1002bbd4:	add    eax,0xfffffff0
1002bbd7:	call   0x10002060
1002bbdc:	push   esi
1002bbdd:	push   ebx
1002bbde:	lea    ecx,[ebp+0x8c]
1002bbe4:	call   0x100012f4
1002bbe9:	push   esi
1002bbea:	push   ebx
1002bbeb:	lea    ecx,[ebp+0xa8]
1002bbf1:	call   0x100012f4
1002bbf6:	mov    BYTE PTR [ebp-0x4],bl
1002bbf9:	mov    eax,DWORD PTR [ebp-0x20]
1002bbfc:	cmp    eax,esi
1002bbfe:	jmp    0x1002b960
1002bc03:	mov    edi,DWORD PTR [ebp-0x68]
1002bc06:	lea    eax,[edi+0x8]
1002bc09:	lea    esi,[ebp-0x5c]
1002bc0c:	call   0x10010fe0
1002bc11:	lea    eax,[edi+0xc]
1002bc14:	lea    esi,[ebp-0x48]
1002bc17:	call   0x10010fe0
1002bc1c:	lea    eax,[edi+0x10]
1002bc1f:	lea    esi,[ebp-0x60]
1002bc22:	call   0x10010fe0
1002bc27:	lea    eax,[edi+0x14]
1002bc2a:	lea    esi,[ebp-0x44]
1002bc2d:	call   0x10010fe0
1002bc32:	lea    eax,[edi+0x18]
1002bc35:	lea    esi,[ebp-0x4c]
1002bc38:	call   0x10010fe0
1002bc3d:	mov    eax,DWORD PTR [ebp-0x2c]
1002bc40:	mov    DWORD PTR [edi+0x1c],eax
1002bc43:	mov    eax,DWORD PTR [edi]
1002bc45:	push   edi
1002bc46:	mov    DWORD PTR [ebp-0x2c],edi
1002bc49:	call   DWORD PTR [eax+0x4]
1002bc4c:	mov    BYTE PTR [ebp-0x4],0x2c
1002bc50:	mov    WORD PTR [ebp-0x94],0x9
1002bc59:	mov    DWORD PTR [ebp-0x8c],edi
1002bc5f:	mov    eax,DWORD PTR [edi]
1002bc61:	push   edi
1002bc62:	call   DWORD PTR [eax+0x4]
1002bc65:	lea    eax,[ebp-0x94]
1002bc6b:	mov    BYTE PTR [ebp-0x4],0x2d
1002bc6f:	xor    ebx,ebx
1002bc71:	push   eax
1002bc72:	lea    esi,[ebp-0x78]
1002bc75:	mov    WORD PTR [ebp-0x78],bx
1002bc79:	call   0x1002b0c4
1002bc7e:	mov    eax,esi
1002bc80:	mov    BYTE PTR [ebp-0x4],0x2e
1002bc84:	mov    esi,DWORD PTR [ebp-0x34]
1002bc87:	push   eax
1002bc88:	add    esi,0x4
1002bc8b:	call   0x1002d5c4
1002bc90:	mov    esi,DWORD PTR ds:0x10066294
1002bc96:	lea    eax,[ebp-0x78]
1002bc99:	push   eax
1002bc9a:	call   esi
1002bc9c:	lea    eax,[ebp-0x94]
1002bca2:	push   eax
1002bca3:	call   esi
1002bca5:	mov    BYTE PTR [ebp-0x4],0x2b
1002bca9:	mov    eax,DWORD PTR [edi]
1002bcab:	push   edi
1002bcac:	call   DWORD PTR [eax+0x8]
1002bcaf:	xor    esi,esi
1002bcb1:	push   ebx
1002bcb2:	inc    esi
1002bcb3:	push   esi
1002bcb4:	lea    ecx,[ebp+0x38]
1002bcb7:	call   0x100012f4
1002bcbc:	lea    edi,[ebp-0x4c]
1002bcbf:	call   0x100025aa
1002bcc4:	push   ebx
1002bcc5:	push   esi
1002bcc6:	lea    ecx,[ebp+0x0]
1002bcc9:	call   0x100012f4
1002bcce:	lea    edi,[ebp-0x44]
1002bcd1:	call   0x100025aa
1002bcd6:	lea    edi,[ebp-0x60]
1002bcd9:	call   0x100025aa
1002bcde:	push   ebx
1002bcdf:	push   esi
1002bce0:	lea    ecx,[ebp+0x54]
1002bce3:	call   0x100012f4
1002bce8:	push   ebx
1002bce9:	push   esi
1002bcea:	lea    ecx,[ebp+0x1c]
1002bced:	call   0x100012f4
1002bcf2:	lea    edi,[ebp-0x48]
1002bcf5:	call   0x100025aa
1002bcfa:	lea    edi,[ebp-0x5c]
1002bcfd:	mov    BYTE PTR [ebp-0x4],0x1c
1002bd01:	call   0x100025aa
1002bd06:	inc    DWORD PTR [ebp-0x50]
1002bd09:	mov    esi,DWORD PTR [ebp-0x24]
1002bd0c:	xor    edi,edi
1002bd0e:	inc    edi
1002bd0f:	jmp    0x1002ba1a
1002bd14:	sub    esp,0x10
1002bd17:	cmp    esi,ebx
1002bd19:	mov    eax,esp
1002bd1b:	mov    DWORD PTR [ebp-0x2c],esp
1002bd1e:	mov    WORD PTR [eax],0x9
1002bd23:	mov    DWORD PTR [eax+0x8],esi
1002bd26:	je     0x1002bd2e
1002bd28:	mov    eax,DWORD PTR [esi]
1002bd2a:	push   esi
1002bd2b:	call   DWORD PTR [eax+0x4]
1002bd2e:	push   DWORD PTR [ebp-0x64]
1002bd31:	lea    ecx,[ebp+0x70]
1002bd34:	call   0x1002b1ba
1002bd39:	cmp    esi,ebx
1002bd3b:	mov    BYTE PTR [ebp-0x4],0x1b
1002bd3f:	je     0x1002bd47
1002bd41:	mov    eax,DWORD PTR [esi]
1002bd43:	push   esi
1002bd44:	call   DWORD PTR [eax+0x8]
1002bd47:	push   ebx
1002bd48:	push   edi
1002bd49:	lea    ecx,[ebp+0x70]
1002bd4c:	mov    BYTE PTR [ebp-0x4],0x1a
1002bd50:	call   0x100012f4
1002bd55:	inc    DWORD PTR [ebp-0x58]
1002bd58:	jmp    0x1002b9b1
1002bd5d:	lea    eax,[ebp-0x2c]
1002bd60:	push   eax
1002bd61:	lea    ecx,[ebp-0x40]
1002bd64:	call   0x10037860
1002bd69:	lea    edi,[ebp-0x18]
1002bd6c:	mov    BYTE PTR [ebp-0x4],0x2f
1002bd70:	call   0x1000413b
1002bd75:	mov    BYTE PTR [ebp-0x4],0x1a
1002bd79:	mov    eax,DWORD PTR [ebp-0x2c]
1002bd7c:	add    eax,0xfffffff0
1002bd7f:	call   0x10002060
1002bd84:	mov    esi,DWORD PTR [ebp-0x20]
1002bd87:	cmp    DWORD PTR [ebp-0x1c],esi
1002bd8a:	je     0x1002bd98
1002bd8c:	mov    edi,esi
1002bd8e:	lea    esi,[ebp-0x1c]
1002bd91:	call   0x10007617
1002bd96:	mov    esi,edi
1002bd98:	push   DWORD PTR [ebp-0x14]
1002bd9b:	lea    edi,[ebp-0x1c]
1002bd9e:	call   0x1002be13
1002bda3:	push   DWORD PTR [ebp-0x54]
1002bda6:	call   0x100430d2
1002bdab:	mov    eax,DWORD PTR [ebp-0x28]
1002bdae:	pop    ecx
1002bdaf:	add    eax,0xfffffff0
1002bdb2:	call   0x10002060
1002bdb7:	push   ebx
1002bdb8:	push   0x1
1002bdba:	lea    ecx,[ebp+0x8c]
1002bdc0:	call   0x100012f4
1002bdc5:	push   ebx
1002bdc6:	push   0x1
1002bdc8:	lea    ecx,[ebp+0xa8]
1002bdce:	call   0x100012f4
1002bdd3:	cmp    esi,ebx
1002bdd5:	mov    BYTE PTR [ebp-0x4],0x1
1002bdd9:	je     0x1002b968
1002bddf:	mov    eax,DWORD PTR [esi]
1002bde1:	push   esi
1002bde2:	call   DWORD PTR [eax+0x8]
1002bde5:	jmp    0x1002b968
1002bdea:	push   DWORD PTR [ebp-0x14]
1002bded:	lea    edi,[ebp-0x1c]
1002bdf0:	call   0x1002be13
1002bdf5:	mov    eax,0x1002b968
1002bdfa:	ret    
1002bdfb:	mov    eax,DWORD PTR [esi+0x4]
1002bdfe:	sub    eax,0x10
1002be01:	call   0x10002060
1002be06:	mov    eax,DWORD PTR [esi]
1002be08:	test   eax,eax
1002be0a:	je     0x1002be12
1002be0c:	mov    ecx,DWORD PTR [eax]
1002be0e:	push   eax
1002be0f:	call   DWORD PTR [ecx+0x8]
1002be12:	ret    
1002be13:	push   0x0
1002be15:	mov    eax,0x10060223
1002be1a:	call   0x10059c75
1002be1f:	mov    esi,DWORD PTR [ebp+0x8]
1002be22:	mov    eax,DWORD PTR [edi]
1002be24:	test   eax,eax
1002be26:	mov    DWORD PTR [esi],eax
1002be28:	je     0x1002be30
1002be2a:	mov    ecx,DWORD PTR [eax]
1002be2c:	push   eax
1002be2d:	call   DWORD PTR [ecx+0x4]
1002be30:	and    DWORD PTR [ebp-0x4],0x0
1002be34:	mov    eax,DWORD PTR [edi+0x4]
1002be37:	sub    eax,0x10
1002be3a:	call   0x10004e00
1002be3f:	add    eax,0x10
1002be42:	mov    DWORD PTR [esi+0x4],eax
1002be45:	mov    eax,esi
1002be47:	call   0x10059d4d
1002be4c:	ret    0x4
1002be4f:	push   0x0
1002be51:	mov    eax,0x10061b75
1002be56:	call   0x10059c75
1002be5b:	mov    ebx,DWORD PTR [ebp+0x8]
1002be5e:	mov    eax,DWORD PTR [ebp+0xc]
1002be61:	mov    DWORD PTR [ebx+0x8],eax
1002be64:	mov    eax,DWORD PTR [ebp+0x10]
1002be67:	mov    edi,0x10080a74
1002be6c:	mov    DWORD PTR [ebx+0x4],0x1
1002be73:	mov    DWORD PTR [ebx],0x10072f90
1002be79:	mov    DWORD PTR [ebx+0xc],eax
1002be7c:	and    DWORD PTR [ebx+0x10],0x0
1002be80:	lea    esi,[ebx+0x14]
1002be83:	mov    ecx,edi
1002be85:	call   0x10002143
1002be8a:	xor    eax,eax
1002be8c:	mov    DWORD PTR [ebx+0x1c],eax
1002be8f:	mov    DWORD PTR [ebp-0x4],eax
1002be92:	lea    esi,[ebx+0x24]
1002be95:	mov    ecx,edi
1002be97:	mov    DWORD PTR [ebx+0x20],eax
1002be9a:	call   0x10002143
1002be9f:	xor    edi,edi
1002bea1:	mov    DWORD PTR [ebx+0x2c],edi
1002bea4:	mov    eax,DWORD PTR [ebp+0x14]
1002bea7:	mov    BYTE PTR [ebp-0x4],0x1
1002beab:	mov    eax,DWORD PTR [eax]
1002bead:	sub    eax,0x10
1002beb0:	call   0x10004e00
1002beb5:	mov    esi,DWORD PTR ds:0x10066070
1002bebb:	add    eax,0x10
1002bebe:	mov    DWORD PTR [ebx+0x30],eax
1002bec1:	mov    BYTE PTR [ebx+0x18],0x0
1002bec5:	mov    BYTE PTR [ebx+0x28],0x0
1002bec9:	mov    eax,DWORD PTR [ebx+0x1c]
1002becc:	cmp    eax,edi
1002bece:	je     0x1002bed3
1002bed0:	push   eax
1002bed1:	call   esi
1002bed3:	mov    DWORD PTR [ebx+0x1c],edi
1002bed6:	mov    eax,DWORD PTR [ebx+0x2c]
1002bed9:	cmp    eax,edi
1002bedb:	je     0x1002bee0
1002bedd:	push   eax
1002bede:	call   esi
1002bee0:	lea    eax,[ebp+0xc]
1002bee3:	push   eax
1002bee4:	mov    DWORD PTR [ebx+0x2c],edi
1002bee7:	call   0x1002ec14
1002beec:	test   eax,eax
1002beee:	jl     0x1002bf21
1002bef0:	mov    edi,DWORD PTR [ebp+0xc]
1002bef3:	test   edi,edi
1002bef5:	je     0x1002befd
1002bef7:	mov    eax,DWORD PTR [edi]
1002bef9:	push   edi
1002befa:	call   DWORD PTR [eax+0x4]
1002befd:	cmp    DWORD PTR [ebx+0x10],edi
1002bf00:	je     0x1002bf0a
1002bf02:	lea    esi,[ebx+0x10]
1002bf05:	call   0x10007617
1002bf0a:	cmp    DWORD PTR [ebx+0x20],edi
1002bf0d:	je     0x1002bf17
1002bf0f:	lea    esi,[ebx+0x20]
1002bf12:	call   0x10007617
1002bf17:	test   edi,edi
1002bf19:	je     0x1002bf21
1002bf1b:	mov    eax,DWORD PTR [edi]
1002bf1d:	push   edi
1002bf1e:	call   DWORD PTR [eax+0x8]
1002bf21:	mov    eax,ebx
1002bf23:	call   0x10059d4d
1002bf28:	ret    0x10
1002bf2b:	push   DWORD PTR [esp+0x8]
1002bf2f:	push   0x1006f578
1002bf34:	call   0x1002b07e
1002bf39:	test   eax,eax
1002bf3b:	pop    ecx
1002bf3c:	pop    ecx
1002bf3d:	je     0x1002bf4d
1002bf3f:	mov    eax,DWORD PTR [esp+0x4]
1002bf43:	mov    ecx,DWORD PTR [esp+0xc]
1002bf47:	mov    DWORD PTR [ecx],eax
1002bf49:	xor    eax,eax
1002bf4b:	jmp    0x1002bf52
1002bf4d:	mov    eax,0x80004005
1002bf52:	ret    0xc
1002bf55:	push   esi
1002bf56:	mov    esi,eax
1002bf58:	mov    eax,DWORD PTR [esi+0xc]
1002bf5b:	test   eax,eax
1002bf5d:	je     0x1002bf66
1002bf5f:	push   eax
1002bf60:	call   DWORD PTR ds:0x10066070
1002bf66:	and    DWORD PTR [esi+0xc],0x0
1002bf6a:	mov    eax,DWORD PTR [esi+0x4]
1002bf6d:	sub    eax,0x10
1002bf70:	call   0x10002060
1002bf75:	mov    esi,DWORD PTR [esi]
1002bf77:	test   esi,esi
1002bf79:	je     0x1002bf81
1002bf7b:	mov    eax,DWORD PTR [esi]
1002bf7d:	push   esi
1002bf7e:	call   DWORD PTR [eax+0x8]
1002bf81:	pop    esi
1002bf82:	ret    
1002bf83:	push   0x10
1002bf85:	mov    eax,0x10064f4f
1002bf8a:	call   0x10059ca8
1002bf8f:	call   0x1000205f
1002bf94:	mov    ebx,DWORD PTR [ebp+0x8]
1002bf97:	xor    esi,esi
1002bf99:	mov    DWORD PTR [ebp-0x4],esi
1002bf9c:	mov    DWORD PTR [ebp-0x14],ebx
1002bf9f:	call   0x1000205f
1002bfa4:	push   esi
1002bfa5:	push   esi
1002bfa6:	call   DWORD PTR ds:0x10066440
1002bfac:	push   0x2710
1002bfb1:	lea    eax,[ebx+0x30]
1002bfb4:	push   esi
1002bfb5:	push   eax
1002bfb6:	lea    ecx,[ebp-0x1c]
1002bfb9:	mov    BYTE PTR [ebp-0x4],0x1
1002bfbd:	call   0x1002b4eb
1002bfc2:	add    esp,0xc
1002bfc5:	mov    BYTE PTR [ebp-0x4],0x2
1002bfc9:	mov    edi,DWORD PTR [ebp-0x1c]
1002bfcc:	lea    esi,[ebx+0x10]
1002bfcf:	cmp    DWORD PTR [esi],edi
1002bfd1:	je     0x1002bfd8
1002bfd3:	call   0x10007617
1002bfd8:	lea    edi,[ebx+0x14]
1002bfdb:	lea    eax,[ebp-0x18]
1002bfde:	call   0x1000413b
1002bfe3:	cmp    DWORD PTR [esi],0x0
1002bfe6:	je     0x1002bfec
1002bfe8:	mov    BYTE PTR [ebx+0x18],0x1
1002bfec:	lea    esi,[ebp-0x1c]
1002bfef:	call   0x1002bdfb
1002bff4:	jmp    0x1002c007
1002bff6:	push   0x4
1002bff8:	call   0x10037b70
1002bffd:	pop    ecx
1002bffe:	mov    eax,0x1002c004
1002c003:	ret    
1002c004:	mov    ebx,DWORD PTR [ebp+0x8]
1002c007:	call   DWORD PTR ds:0x10066424
1002c00d:	or     DWORD PTR [ebp-0x4],0xffffffff
1002c011:	test   ebx,ebx
1002c013:	je     0x1002c01b
1002c015:	mov    eax,DWORD PTR [ebx]
1002c017:	push   ebx
1002c018:	call   DWORD PTR [eax+0x8]
1002c01b:	xor    eax,eax
1002c01d:	call   0x10059d4d
1002c022:	ret    0x4
1002c025:	push   0x10
1002c027:	mov    eax,0x10064f24
1002c02c:	call   0x10059ca8
1002c031:	mov    ebx,DWORD PTR [ebp+0x8]
1002c034:	xor    eax,eax
1002c036:	push   eax
1002c037:	mov    DWORD PTR [ebp-0x4],eax
1002c03a:	push   eax
1002c03b:	mov    DWORD PTR [ebp-0x14],ebx
1002c03e:	call   DWORD PTR ds:0x10066440
1002c044:	push   0x186a0
1002c049:	lea    eax,[ebx+0x30]
1002c04c:	push   0x1
1002c04e:	push   eax
1002c04f:	lea    ecx,[ebp-0x1c]
1002c052:	mov    BYTE PTR [ebp-0x4],0x1
1002c056:	call   0x1002b4eb
1002c05b:	add    esp,0xc
1002c05e:	mov    BYTE PTR [ebp-0x4],0x2
1002c062:	mov    edi,DWORD PTR [ebp-0x1c]
1002c065:	lea    esi,[ebx+0x20]
1002c068:	cmp    DWORD PTR [esi],edi
1002c06a:	je     0x1002c071
1002c06c:	call   0x10007617
1002c071:	lea    edi,[ebx+0x24]
1002c074:	lea    eax,[ebp-0x18]
1002c077:	call   0x1000413b
1002c07c:	cmp    DWORD PTR [esi],0x0
1002c07f:	je     0x1002c085
1002c081:	mov    BYTE PTR [ebx+0x28],0x1
1002c085:	lea    esi,[ebp-0x1c]
1002c088:	call   0x1002bdfb
1002c08d:	jmp    0x1002c0a0
1002c08f:	push   0x4
1002c091:	call   0x10037b70
1002c096:	pop    ecx
1002c097:	mov    eax,0x1002c09d
1002c09c:	ret    
1002c09d:	mov    ebx,DWORD PTR [ebp+0x8]
1002c0a0:	call   DWORD PTR ds:0x10066424
1002c0a6:	or     DWORD PTR [ebp-0x4],0xffffffff
1002c0aa:	test   ebx,ebx
1002c0ac:	je     0x1002c0b4
1002c0ae:	mov    eax,DWORD PTR [ebx]
1002c0b0:	push   ebx
1002c0b1:	call   DWORD PTR [eax+0x8]
1002c0b4:	xor    eax,eax
1002c0b6:	call   0x10059d4d
1002c0bb:	ret    0x4
1002c0be:	push   ebp
1002c0bf:	mov    ebp,esp
1002c0c1:	and    esp,0xfffffff8
1002c0c4:	push   0xffffffff
1002c0c6:	push   0x10062937
1002c0cb:	mov    eax,fs:0x0
1002c0d1:	push   eax
1002c0d2:	sub    esp,0x8c
1002c0d8:	push   esi
1002c0d9:	push   edi
1002c0da:	mov    eax,ds:0x1007e030
1002c0df:	xor    eax,esp
1002c0e1:	push   eax
1002c0e2:	lea    eax,[esp+0x98]
1002c0e9:	mov    fs:0x0,eax
1002c0ef:	push   0x10072c60
1002c0f4:	push   0xf
1002c0f6:	mov    edi,0x10072c84
1002c0fb:	push   edi
1002c0fc:	call   0x100042e3
1002c101:	add    esp,0xc
1002c104:	push   eax
1002c105:	lea    ecx,[esp+0x44]
1002c109:	call   0x100011d1
1002c10e:	xor    esi,esi
1002c110:	push   esi
1002c111:	lea    eax,[esp+0x44]
1002c115:	push   eax
1002c116:	lea    eax,[esp+0x80]
1002c11d:	push   eax
1002c11e:	mov    DWORD PTR [esp+0xac],esi
1002c125:	mov    eax,DWORD PTR [ebx+0x4]
1002c128:	add    eax,0x18
1002c12b:	call   0x100084c3
1002c130:	push   eax
1002c131:	lea    eax,[esp+0x18]
1002c135:	push   eax
1002c136:	mov    BYTE PTR [esp+0xa8],0x1
1002c13e:	call   0x1002dae1
1002c143:	pop    ecx
1002c144:	pop    ecx
1002c145:	push   esi
1002c146:	push   0x1
1002c148:	lea    ecx,[esp+0x80]
1002c14f:	call   0x100012f4
1002c154:	push   esi
1002c155:	push   0x1
1002c157:	lea    ecx,[esp+0x48]
1002c15b:	mov    BYTE PTR [esp+0xa8],0x4
1002c163:	call   0x100012f4
1002c168:	lea    eax,[esp+0x14]
1002c16c:	mov    BYTE PTR [esp+0xf],0x0
1002c171:	mov    DWORD PTR [esp+0x10],esi
1002c175:	call   0x10004674
1002c17a:	test   eax,eax
1002c17c:	je     0x1002c27c
1002c182:	cmp    BYTE PTR [esp+0xf],0x0
1002c187:	jne    0x1002c1fb
1002c189:	push   0x2ba93130
1002c18e:	push   0x10072c94
1002c193:	call   0x100042d1
1002c198:	push   0x16c1eb62
1002c19d:	push   eax
1002c19e:	call   0x100042d1
1002c1a3:	push   0x5bea4160
1002c1a8:	push   eax
1002c1a9:	call   0x100042d1
1002c1ae:	push   eax
1002c1af:	push   0x4
1002c1b1:	push   0x1006e118
1002c1b6:	call   0x100042e3
1002c1bb:	add    esp,0x24
1002c1be:	push   eax
1002c1bf:	push   DWORD PTR [esp+0x14]
1002c1c3:	lea    esi,[esp+0x1c]
1002c1c7:	call   0x1000468a
1002c1cc:	mov    esi,eax
1002c1ce:	call   0x100065b3
1002c1d3:	test   al,al
1002c1d5:	pop    ecx
1002c1d6:	je     0x1002c1dd
1002c1d8:	mov    BYTE PTR [esp+0xf],0x1
1002c1dd:	inc    DWORD PTR [esp+0x10]
1002c1e1:	lea    eax,[esp+0x14]
1002c1e5:	call   0x10004674
1002c1ea:	cmp    DWORD PTR [esp+0x10],eax
1002c1ee:	jne    0x1002c182
1002c1f0:	cmp    BYTE PTR [esp+0xf],0x0
1002c1f5:	je     0x1002c27c
1002c1fb:	push   0x10072cb8
1002c200:	push   0x4
1002c202:	push   0x1006e118
1002c207:	call   0x100042e3
1002c20c:	add    esp,0xc
1002c20f:	push   eax
1002c210:	lea    ecx,[esp+0x28]
1002c214:	call   0x100011d1
1002c219:	push   0x1eb15e22
1002c21e:	push   0x10072cec
1002c223:	mov    BYTE PTR [esp+0xa8],0x5
1002c22b:	call   0x100042d1
1002c230:	push   0x3b16dc7c
1002c235:	push   eax
1002c236:	call   0x100042d1
1002c23b:	push   eax
1002c23c:	push   0xf
1002c23e:	push   edi
1002c23f:	call   0x100042e3
1002c244:	add    esp,0x1c
1002c247:	push   eax
1002c248:	lea    ecx,[esp+0x60]
1002c24c:	call   0x100011d1
1002c251:	mov    BYTE PTR [esp+0xa0],0x6
1002c259:	mov    edx,DWORD PTR [ebx+0x4]
1002c25c:	lea    eax,[esp+0x5c]
1002c260:	push   eax
1002c261:	add    edx,0x18
1002c264:	lea    ecx,[esp+0x28]
1002c268:	call   0x100083ac
1002c26d:	push   0x0
1002c26f:	push   0x1
1002c271:	lea    ecx,[esp+0x64]
1002c275:	call   0x100012f4
1002c27a:	jmp    0x1002c2d0
1002c27c:	push   0x792b7868
1002c281:	push   0x10072d24
1002c286:	call   0x100042d1
1002c28b:	push   0x3d249b50
1002c290:	push   eax
1002c291:	call   0x100042d1
1002c296:	push   0x6ca1664c
1002c29b:	push   eax
1002c29c:	call   0x100042d1
1002c2a1:	push   eax
1002c2a2:	push   0xf
1002c2a4:	push   edi
1002c2a5:	call   0x100042e3
1002c2aa:	add    esp,0x24
1002c2ad:	push   eax
1002c2ae:	lea    ecx,[esp+0x28]
1002c2b2:	call   0x100011d1
1002c2b7:	lea    eax,[esp+0x24]
1002c2bb:	push   eax
1002c2bc:	mov    BYTE PTR [esp+0xa4],0x7
1002c2c4:	mov    eax,DWORD PTR [ebx+0x4]
1002c2c7:	add    eax,0x18
1002c2ca:	push   eax
1002c2cb:	call   0x10008261
1002c2d0:	push   0x0
1002c2d2:	push   0x1
1002c2d4:	lea    ecx,[esp+0x2c]
1002c2d8:	call   0x100012f4
1002c2dd:	lea    esi,[esp+0x14]
1002c2e1:	call   0x1000499a
1002c2e6:	mov    ecx,DWORD PTR [esp+0x98]
1002c2ed:	mov    DWORD PTR fs:0x0,ecx
1002c2f4:	pop    ecx
1002c2f5:	pop    edi
1002c2f6:	pop    esi
1002c2f7:	mov    esp,ebp
1002c2f9:	pop    ebp
1002c2fa:	ret    
1002c2fb:	push   0x6c
1002c2fd:	mov    eax,0x10065069
1002c302:	call   0x10059d14
1002c307:	mov    esi,DWORD PTR [ebp+0x8]
1002c30a:	push   DWORD PTR [esi]
1002c30c:	lea    ecx,[ebp-0x30]
1002c30f:	mov    DWORD PTR [ebp-0x74],esi
1002c312:	call   0x10008b3e
1002c317:	xor    edi,edi
1002c319:	mov    DWORD PTR [ebp-0x4],edi
1002c31c:	mov    DWORD PTR [ebp-0x54],edi
1002c31f:	call   0x1002fb70
1002c324:	push   edi
1002c325:	lea    ecx,[ebp-0x4c]
1002c328:	mov    DWORD PTR [ebp-0x34],0xf
1002c32f:	call   0x10001420
1002c334:	xor    ebx,ebx
1002c336:	inc    ebx
1002c337:	push   ebx
1002c338:	lea    eax,[ebp-0x50]
1002c33b:	push   eax
1002c33c:	mov    BYTE PTR [ebp-0x4],0x3
1002c340:	call   0x10034bf0
1002c345:	lea    eax,[ebp-0x5c]
1002c348:	push   eax
1002c349:	lea    ecx,[ebp-0x4c]
1002c34c:	lea    edx,[ebp-0x50]
1002c34f:	mov    BYTE PTR [ebp-0x4],0x4
1002c353:	call   0x100364b0
1002c358:	test   al,al
1002c35a:	je     0x1002c392
1002c35c:	push   0x34
1002c35e:	call   0x100436de
1002c363:	pop    ecx
1002c364:	mov    DWORD PTR [ebp-0x58],eax
1002c367:	cmp    eax,edi
1002c369:	mov    BYTE PTR [ebp-0x4],0x5
1002c36d:	je     0x1002c38d
1002c36f:	mov    eax,DWORD PTR [ebp-0x5c]
1002c372:	mov    DWORD PTR [ebp-0x68],eax
1002c375:	lea    eax,[ebp-0x70]
1002c378:	push   eax
1002c379:	lea    eax,[ebp-0x4c]
1002c37c:	push   eax
1002c37d:	push   DWORD PTR [ebp-0x58]
1002c380:	mov    DWORD PTR [ebp-0x70],edi
1002c383:	mov    DWORD PTR [ebp-0x6c],edi
1002c386:	call   0x10002857
1002c38b:	jmp    0x1002c38f
1002c38d:	xor    eax,eax
1002c38f:	mov    DWORD PTR [ebp-0x54],eax
1002c392:	push   DWORD PTR [ebp-0x50]
1002c395:	call   DWORD PTR ds:0x10066070
1002c39b:	push   edi
1002c39c:	push   ebx
1002c39d:	lea    ecx,[ebp-0x4c]
1002c3a0:	call   0x100012f4
1002c3a5:	mov    DWORD PTR [ebp-0x4],ebx
1002c3a8:	cmp    DWORD PTR [ebp-0x54],edi
1002c3ab:	jne    0x1002c3c1
1002c3ad:	xor    bl,bl
1002c3af:	push   edi
1002c3b0:	push   0x1
1002c3b2:	lea    ecx,[ebp-0x30]
1002c3b5:	call   0x100012f4
1002c3ba:	mov    al,bl
1002c3bc:	jmp    0x1002c614
1002c3c1:	cmp    DWORD PTR [ebp-0x18],0x10
1002c3c5:	mov    eax,DWORD PTR [ebp-0x2c]
1002c3c8:	jae    0x1002c3cd
1002c3ca:	lea    eax,[ebp-0x2c]
1002c3cd:	push   eax
1002c3ce:	mov    DWORD PTR [ebp-0x6c],eax
1002c3d1:	call   0x10043250
1002c3d6:	pop    ecx
1002c3d7:	mov    DWORD PTR [ebp-0x68],eax
1002c3da:	lea    eax,[ebp-0x6c]
1002c3dd:	push   eax
1002c3de:	push   DWORD PTR [ebp-0x54]
1002c3e1:	call   0x1003a360
1002c3e6:	test   al,al
1002c3e8:	je     0x1002c5eb
1002c3ee:	call   DWORD PTR ds:0x10066168
1002c3f4:	mov    ebx,eax
1002c3f6:	push   ebx
1002c3f7:	mov    DWORD PTR [ebp-0x6c],ebx
1002c3fa:	call   DWORD PTR ds:0x10066170
1002c400:	mov    edi,DWORD PTR ds:0x1006616c
1002c406:	push   0x2
1002c408:	push   ebx
1002c409:	mov    DWORD PTR [ebp-0x68],eax
1002c40c:	call   edi
1002c40e:	mov    BYTE PTR [ebp-0x4],0x7
1002c412:	call   0x1002fb70
1002c417:	mov    eax,ds:0x10080a74
1002c41c:	mov    ecx,0x10080a74
1002c421:	call   DWORD PTR [eax+0xc]
1002c424:	add    eax,0x10
1002c427:	mov    DWORD PTR [ebp-0x64],eax
1002c42a:	lea    eax,[ebp-0x5c]
1002c42d:	push   eax
1002c42e:	lea    eax,[ebp-0x64]
1002c431:	push   eax
1002c432:	lea    eax,[ebp-0x30]
1002c435:	push   eax
1002c436:	mov    BYTE PTR [ebp-0x4],0x8
1002c43a:	push   DWORD PTR [esi+0x4]
1002c43d:	lea    esi,[ebp-0x58]
1002c440:	call   0x1002c61c
1002c445:	add    esp,0x10
1002c448:	test   al,al
1002c44a:	je     0x1002c5b7
1002c450:	call   0x1002fb70
1002c455:	mov    ebx,DWORD PTR [ebp-0x74]
1002c458:	call   0x1002c0be
1002c45d:	cmp    DWORD PTR [ebp-0x18],0x10
1002c461:	mov    eax,DWORD PTR [ebp-0x2c]
1002c464:	jae    0x1002c469
1002c466:	lea    eax,[ebp-0x2c]
1002c469:	push   eax
1002c46a:	call   0x1000205f
1002c46f:	push   0x34
1002c471:	call   0x100436de
1002c476:	pop    ecx
1002c477:	pop    ecx
1002c478:	mov    DWORD PTR [ebp-0x50],eax
1002c47b:	xor    ebx,ebx
1002c47d:	cmp    eax,ebx
1002c47f:	mov    BYTE PTR [ebp-0x4],0x9
1002c483:	je     0x1002c499
1002c485:	lea    ecx,[ebp-0x64]
1002c488:	push   ecx
1002c489:	push   DWORD PTR [ebp-0x5c]
1002c48c:	push   DWORD PTR [ebp-0x58]
1002c48f:	push   eax
1002c490:	call   0x1002be4f
1002c495:	mov    edi,eax
1002c497:	jmp    0x1002c49b
1002c499:	xor    edi,edi
1002c49b:	mov    DWORD PTR [ebp-0x78],edi
1002c49e:	call   0x1000205f
1002c4a3:	mov    DWORD PTR [ebp-0x50],ebx
1002c4a6:	mov    DWORD PTR [ebp-0x60],ebx
1002c4a9:	mov    BYTE PTR [ebp-0x4],0xc
1002c4ad:	mov    eax,DWORD PTR [edi+0xc]
1002c4b0:	test   al,0x2
1002c4b2:	je     0x1002c4db
1002c4b4:	test   al,0x4
1002c4b6:	jne    0x1002c4db
1002c4b8:	mov    eax,DWORD PTR [edi]
1002c4ba:	push   edi
1002c4bb:	call   DWORD PTR [eax+0x4]
1002c4be:	push   ebx
1002c4bf:	push   0x4
1002c4c1:	push   edi
1002c4c2:	push   0x1002bf83
1002c4c7:	push   ebx
1002c4c8:	push   ebx
1002c4c9:	call   DWORD PTR ds:0x10066098
1002c4cf:	push   0x2
1002c4d1:	push   eax
1002c4d2:	mov    DWORD PTR [ebp-0x50],eax
1002c4d5:	call   DWORD PTR ds:0x1006616c
1002c4db:	mov    eax,DWORD PTR [edi+0xc]
1002c4de:	test   al,0x1
1002c4e0:	je     0x1002c500
1002c4e2:	test   al,0x8
1002c4e4:	jne    0x1002c500
1002c4e6:	mov    eax,DWORD PTR [edi]
1002c4e8:	push   edi
1002c4e9:	call   DWORD PTR [eax+0x4]
1002c4ec:	push   ebx
1002c4ed:	push   0x4
1002c4ef:	push   edi
1002c4f0:	push   0x1002c025
1002c4f5:	push   ebx
1002c4f6:	push   ebx
1002c4f7:	call   DWORD PTR ds:0x10066098
1002c4fd:	mov    DWORD PTR [ebp-0x60],eax
1002c500:	mov    eax,DWORD PTR [ebp-0x50]
1002c503:	cmp    eax,ebx
1002c505:	jne    0x1002c526
1002c507:	cmp    DWORD PTR [ebp-0x60],ebx
1002c50a:	jne    0x1002c526
1002c50c:	mov    eax,DWORD PTR [ebp-0x74]
1002c50f:	mov    eax,DWORD PTR [eax+0x4]
1002c512:	lea    esi,[eax+0x38]
1002c515:	cmp    DWORD PTR [esi],edi
1002c517:	je     0x1002c51e
1002c519:	call   0x10007617
1002c51e:	mov    eax,DWORD PTR [edi]
1002c520:	push   edi
1002c521:	call   DWORD PTR [eax+0x8]
1002c524:	jmp    0x1002c57e
1002c526:	mov    ecx,DWORD PTR [ebp-0x60]
1002c529:	lea    esi,[edi+0x1c]
1002c52c:	push   eax
1002c52d:	mov    DWORD PTR [ebp-0x58],eax
1002c530:	mov    DWORD PTR [ebp-0x5c],ecx
1002c533:	mov    DWORD PTR [ebp-0x50],ebx
1002c536:	call   0x100049bf
1002c53b:	mov    eax,DWORD PTR [ebp-0x60]
1002c53e:	lea    esi,[edi+0x2c]
1002c541:	push   eax
1002c542:	mov    DWORD PTR [ebp-0x60],ebx
1002c545:	call   0x100049bf
1002c54a:	mov    eax,DWORD PTR [ebp-0x74]
1002c54d:	mov    eax,DWORD PTR [eax+0x4]
1002c550:	lea    esi,[eax+0x38]
1002c553:	cmp    DWORD PTR [esi],edi
1002c555:	je     0x1002c55c
1002c557:	call   0x10007617
1002c55c:	mov    eax,DWORD PTR [edi]
1002c55e:	push   edi
1002c55f:	call   DWORD PTR [eax+0x8]
1002c562:	cmp    DWORD PTR [ebp-0x58],ebx
1002c565:	je     0x1002c570
1002c567:	push   DWORD PTR [ebp-0x58]
1002c56a:	call   DWORD PTR ds:0x10066174
1002c570:	cmp    DWORD PTR [ebp-0x5c],ebx
1002c573:	je     0x1002c57e
1002c575:	push   DWORD PTR [ebp-0x5c]
1002c578:	call   DWORD PTR ds:0x10066174
1002c57e:	mov    eax,DWORD PTR [ebp-0x64]
1002c581:	add    eax,0xfffffff0
1002c584:	call   0x10002060
1002c589:	cmp    DWORD PTR [ebp-0x6c],ebx
1002c58c:	je     0x1002c59a
1002c58e:	push   DWORD PTR [ebp-0x68]
1002c591:	push   DWORD PTR [ebp-0x6c]
1002c594:	call   DWORD PTR ds:0x1006616c
1002c59a:	mov    BYTE PTR [ebp-0x4],bl
1002c59d:	push   DWORD PTR [ebp-0x54]
1002c5a0:	call   0x1003a170
1002c5a5:	push   DWORD PTR [ebp-0x54]
1002c5a8:	call   0x100430d2
1002c5ad:	pop    ecx
1002c5ae:	mov    bl,0x1
1002c5b0:	xor    edi,edi
1002c5b2:	jmp    0x1002c3af
1002c5b7:	call   0x1002fb70
1002c5bc:	mov    eax,DWORD PTR [ebp-0x64]
1002c5bf:	add    eax,0xfffffff0
1002c5c2:	call   0x10002060
1002c5c7:	test   ebx,ebx
1002c5c9:	je     0x1002c5d1
1002c5cb:	push   DWORD PTR [ebp-0x68]
1002c5ce:	push   ebx
1002c5cf:	call   edi
1002c5d1:	xor    edi,edi
1002c5d3:	mov    BYTE PTR [ebp-0x4],0x0
1002c5d7:	push   DWORD PTR [ebp-0x54]
1002c5da:	call   0x1003a170
1002c5df:	push   DWORD PTR [ebp-0x54]
1002c5e2:	call   0x100430d2
1002c5e7:	pop    ecx
1002c5e8:	push   edi
1002c5e9:	jmp    0x1002c608
1002c5eb:	call   0x1002fb70
1002c5f0:	jmp    0x1002c5d3
1002c5f2:	mov    eax,0x1002c606
1002c5f7:	ret    
1002c5f8:	push   0x4
1002c5fa:	call   0x10037b70
1002c5ff:	pop    ecx
1002c600:	mov    eax,0x1002c606
1002c605:	ret    
1002c606:	push   0x0
1002c608:	push   0x1
1002c60a:	lea    ecx,[ebp-0x30]
1002c60d:	call   0x100012f4
1002c612:	xor    al,al
1002c614:	call   0x10059d70
1002c619:	ret    0x4
1002c61c:	push   ebp
1002c61d:	mov    ebp,esp
1002c61f:	and    esp,0xfffffff8
1002c622:	push   ecx
1002c623:	push   edi
1002c624:	call   0x100228cd
1002c629:	mov    ecx,eax
1002c62b:	call   0x10023385
1002c630:	and    DWORD PTR [esi],0x0
1002c633:	mov    edi,eax
1002c635:	test   edi,edi
1002c637:	je     0x1002c66b
1002c639:	push   DWORD PTR [ebp+0x14]
1002c63c:	push   DWORD PTR [ebp+0x10]
1002c63f:	push   DWORD PTR [ebp+0xc]
1002c642:	push   DWORD PTR [ebp+0x8]
1002c645:	push   DWORD PTR [esi]
1002c647:	push   ecx
1002c648:	call   0x100228cd
1002c64d:	pop    ecx
1002c64e:	push   eax
1002c64f:	call   0x10022d6f
1002c654:	test   al,al
1002c656:	je     0x1002c665
1002c658:	push   DWORD PTR [ebp+0x10]
1002c65b:	call   0x10024354
1002c660:	test   al,al
1002c662:	pop    ecx
1002c663:	jne    0x1002c672
1002c665:	inc    DWORD PTR [esi]
1002c667:	cmp    DWORD PTR [esi],edi
1002c669:	jne    0x1002c639
1002c66b:	xor    al,al
1002c66d:	pop    edi
1002c66e:	mov    esp,ebp
1002c670:	pop    ebp
1002c671:	ret    
1002c672:	mov    al,0x1
1002c674:	jmp    0x1002c66d
1002c676:	push   ebx
1002c677:	mov    ebx,DWORD PTR [esp+0x8]
1002c67b:	mov    eax,DWORD PTR [ebx]
1002c67d:	cmp    BYTE PTR [eax+0x2c],0x0
1002c681:	push   esi
1002c682:	push   edi
1002c683:	je     0x1002c689
1002c685:	xor    al,al
1002c687:	jmp    0x1002c6b3
1002c689:	sub    esp,0x10
1002c68c:	mov    BYTE PTR [ebx+0x10],0x1
1002c690:	mov    edi,esp
1002c692:	mov    esi,0x1006f578
1002c697:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002c698:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002c699:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002c69a:	push   eax
1002c69b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002c69c:	call   0x1000878d
1002c6a1:	test   eax,eax
1002c6a3:	je     0x1002c6b1
1002c6a5:	mov    eax,DWORD PTR [eax+0xc]
1002c6a8:	shr    eax,1
1002c6aa:	not    al
1002c6ac:	and    al,0x1
1002c6ae:	mov    BYTE PTR [ebx+0x10],al
1002c6b1:	mov    al,0x1
1002c6b3:	pop    edi
1002c6b4:	pop    esi
1002c6b5:	pop    ebx
1002c6b6:	ret    0x4
1002c6b9:	push   0x0
1002c6bb:	mov    eax,0x1005f9de
1002c6c0:	call   0x10059c75
1002c6c5:	mov    esi,DWORD PTR [ebp+0x8]
1002c6c8:	and    DWORD PTR [ebp-0x4],0x0
1002c6cc:	mov    DWORD PTR [esi],0x10072eb8
1002c6d2:	and    DWORD PTR [esi+0x4],0x0
1002c6d6:	push   0x4
1002c6d8:	mov    BYTE PTR [ebp-0x4],0x1
1002c6dc:	call   0x100436de
1002c6e1:	test   eax,eax
1002c6e3:	pop    ecx
1002c6e4:	je     0x1002c6f0
1002c6e6:	mov    DWORD PTR [eax],0x100719c4
1002c6ec:	mov    edi,eax
1002c6ee:	jmp    0x1002c6f2
1002c6f0:	xor    edi,edi
1002c6f2:	mov    ecx,DWORD PTR [esi+0x4]
1002c6f5:	cmp    edi,ecx
1002c6f7:	je     0x1002c704
1002c6f9:	test   ecx,ecx
1002c6fb:	je     0x1002c704
1002c6fd:	mov    eax,DWORD PTR [ecx]
1002c6ff:	push   0x1
1002c701:	call   DWORD PTR [eax+0x4]
1002c704:	mov    DWORD PTR [esi+0x4],edi
1002c707:	mov    eax,esi
1002c709:	call   0x10059d4d
1002c70e:	ret    0x4
1002c711:	push   0x4
1002c713:	mov    eax,0x1005f7ee
1002c718:	call   0x10059c75
1002c71d:	mov    esi,ecx
1002c71f:	mov    DWORD PTR [ebp-0x10],esi
1002c722:	and    DWORD PTR [ebp-0x4],0x0
1002c726:	mov    ecx,DWORD PTR [esi+0x4]
1002c729:	test   ecx,ecx
1002c72b:	je     0x1002c734
1002c72d:	mov    eax,DWORD PTR [ecx]
1002c72f:	push   0x1
1002c731:	call   DWORD PTR [eax+0x4]
1002c734:	test   BYTE PTR [ebp+0x8],0x1
1002c738:	mov    DWORD PTR [esi],0x10072eb0
1002c73e:	je     0x1002c747
1002c740:	push   esi
1002c741:	call   0x100430d2
1002c746:	pop    ecx
1002c747:	mov    eax,esi
1002c749:	call   0x10059d4d
1002c74e:	ret    0x4
1002c751:	push   ebp
1002c752:	mov    ebp,esp
1002c754:	and    esp,0xfffffff8
1002c757:	push   0xffffffff
1002c759:	push   0x10064276
1002c75e:	mov    eax,fs:0x0
1002c764:	push   eax
1002c765:	sub    esp,0x5d8
1002c76b:	mov    eax,ds:0x1007e030
1002c770:	xor    eax,esp
1002c772:	mov    DWORD PTR [esp+0x5d0],eax
1002c779:	push   ebx
1002c77a:	push   esi
1002c77b:	push   edi
1002c77c:	mov    eax,ds:0x1007e030
1002c781:	xor    eax,esp
1002c783:	push   eax
1002c784:	lea    eax,[esp+0x5e8]
1002c78b:	mov    fs:0x0,eax
1002c791:	mov    ebx,DWORD PTR [ebp+0x8]
1002c794:	push   DWORD PTR [ebx]
1002c796:	mov    DWORD PTR [esp+0x40],ecx
1002c79a:	lea    ecx,[esp+0x154]
1002c7a1:	call   0x10008b3e
1002c7a6:	xor    esi,esi
1002c7a8:	mov    DWORD PTR [esp+0x5f0],esi
1002c7af:	mov    eax,DWORD PTR [ebx+0x8]
1002c7b2:	cmp    DWORD PTR [eax+0xc],esi
1002c7b5:	jne    0x1002c843
1002c7bb:	lea    eax,[esp+0x134]
1002c7c2:	push   eax
1002c7c3:	mov    eax,DWORD PTR [ebx+0x4]
1002c7c6:	mov    eax,DWORD PTR [eax+0x4]
1002c7c9:	call   0x1000795e
1002c7ce:	cmp    DWORD PTR [esp+0x168],0x10
1002c7d6:	mov    ecx,DWORD PTR [esp+0x154]
1002c7dd:	jae    0x1002c7e6
1002c7df:	lea    ecx,[esp+0x154]
1002c7e6:	cmp    DWORD PTR [eax+0x18],0x10
1002c7ea:	jb     0x1002c7f1
1002c7ec:	mov    eax,DWORD PTR [eax+0x4]
1002c7ef:	jmp    0x1002c7f4
1002c7f1:	add    eax,0x4
1002c7f4:	push   ecx
1002c7f5:	push   eax
1002c7f6:	call   0x1000205f
1002c7fb:	pop    ecx
1002c7fc:	pop    ecx
1002c7fd:	push   esi
1002c7fe:	push   0x1
1002c800:	lea    ecx,[esp+0x13c]
1002c807:	call   0x100012f4
1002c80c:	push   esi
1002c80d:	push   0x1
1002c80f:	lea    ecx,[esp+0x158]
1002c816:	call   0x100012f4
1002c81b:	xor    al,al
1002c81d:	mov    ecx,DWORD PTR [esp+0x5e8]
1002c824:	mov    DWORD PTR fs:0x0,ecx
1002c82b:	pop    ecx
1002c82c:	pop    edi
1002c82d:	pop    esi
1002c82e:	pop    ebx
1002c82f:	mov    ecx,DWORD PTR [esp+0x5d0]
1002c836:	xor    ecx,esp
1002c838:	call   0x100430d7
1002c83d:	mov    esp,ebp
1002c83f:	pop    ebp
1002c840:	ret    0x4
1002c843:	mov    eax,DWORD PTR [ebx]
1002c845:	cmp    BYTE PTR [eax+0x2c],0x0
1002c849:	jne    0x1002c80c
1002c84b:	sub    esp,0x10
1002c84e:	mov    edi,esp
1002c850:	mov    esi,0x1006f578
1002c855:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002c856:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002c857:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002c858:	push   eax
1002c859:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002c85a:	call   0x1000878d
1002c85f:	mov    esi,eax
1002c861:	xor    edi,edi
1002c863:	cmp    esi,edi
1002c865:	mov    DWORD PTR [esp+0x24],esi
1002c869:	jne    0x1002c86e
1002c86b:	push   edi
1002c86c:	jmp    0x1002c80d
1002c86e:	mov    eax,DWORD PTR [esi+0xc]
1002c871:	test   al,0x2
1002c873:	je     0x1002c86b
1002c875:	test   al,0x4
1002c877:	jne    0x1002c926
1002c87d:	mov    eax,DWORD PTR [ebx+0x4]
1002c880:	mov    edx,DWORD PTR [eax+0x10]
1002c883:	mov    ecx,DWORD PTR [ebx]
1002c885:	sub    edx,DWORD PTR [ecx+0x10]
1002c888:	mov    eax,DWORD PTR [eax+0x14]
1002c88b:	sbb    eax,DWORD PTR [ecx+0x14]
1002c88e:	push   edi
1002c88f:	push   0x2710
1002c894:	push   eax
1002c895:	push   edx
1002c896:	call   0x1005f580
1002c89b:	add    eax,eax
1002c89d:	mov    ecx,0x7d0
1002c8a2:	cmp    eax,ecx
1002c8a4:	jae    0x1002c8a8
1002c8a6:	mov    eax,ecx
1002c8a8:	mov    ecx,DWORD PTR [esi+0x1c]
1002c8ab:	push   eax
1002c8ac:	push   ecx
1002c8ad:	call   DWORD PTR ds:0x10066084
1002c8b3:	test   eax,eax
1002c8b5:	je     0x1002c8e0
1002c8b7:	cmp    DWORD PTR [esp+0x168],0x10
1002c8bf:	mov    eax,DWORD PTR [esp+0x154]
1002c8c6:	jae    0x1002c8cf
1002c8c8:	lea    eax,[esp+0x154]
1002c8cf:	push   eax
1002c8d0:	call   0x1000205f
1002c8d5:	pop    ecx
1002c8d6:	push   0x5
1002c8d8:	call   0x10037b70
1002c8dd:	pop    ecx
1002c8de:	jmp    0x1002c86b
1002c8e0:	mov    al,BYTE PTR [esi+0x18]
1002c8e3:	test   al,al
1002c8e5:	jne    0x1002c926
1002c8e7:	cmp    DWORD PTR [esp+0x168],0x10
1002c8ef:	mov    eax,DWORD PTR [esp+0x154]
1002c8f6:	jae    0x1002c8ff
1002c8f8:	lea    eax,[esp+0x154]
1002c8ff:	push   eax
1002c900:	call   0x1000205f
1002c905:	pop    ecx
1002c906:	push   0x5
1002c908:	call   0x10037b70
1002c90d:	pop    ecx
1002c90e:	xor    bl,bl
1002c910:	push   edi
1002c911:	push   0x1
1002c913:	lea    ecx,[esp+0x158]
1002c91a:	call   0x100012f4
1002c91f:	mov    al,bl
1002c921:	jmp    0x1002c81d
1002c926:	push   0x21d5086
1002c92b:	push   0x10072d54
1002c930:	call   0x100042d1
1002c935:	push   eax
1002c936:	push   0x10
1002c938:	push   0x1006ddf8
1002c93d:	call   0x100042e3
1002c942:	add    esp,0x14
1002c945:	push   eax
1002c946:	lea    ecx,[esp+0xc8]
1002c94d:	call   0x100011d1
1002c952:	push   edi
1002c953:	lea    eax,[esp+0xc8]
1002c95a:	push   eax
1002c95b:	lea    eax,[esp+0x120]
1002c962:	push   eax
1002c963:	mov    BYTE PTR [esp+0x5fc],0x1
1002c96b:	mov    eax,DWORD PTR [ebx+0x4]
1002c96e:	add    eax,0x20
1002c971:	call   0x100084c3
1002c976:	mov    BYTE PTR [esp+0x5f0],0x2
1002c97e:	cmp    DWORD PTR [eax+0x18],0x10
1002c982:	jb     0x1002c989
1002c984:	mov    eax,DWORD PTR [eax+0x4]
1002c987:	jmp    0x1002c98c
1002c989:	add    eax,0x4
1002c98c:	push   eax
1002c98d:	lea    ecx,[esp+0x100]
1002c994:	call   0x100011d1
1002c999:	lea    eax,[esp+0xfc]
1002c9a0:	push   eax
1002c9a1:	lea    esi,[esp+0x1c4]
1002c9a8:	mov    BYTE PTR [esp+0x5f4],0x3
1002c9b0:	call   0x1002fba0
1002c9b5:	pop    ecx
1002c9b6:	push   edi
1002c9b7:	push   0x1
1002c9b9:	lea    ecx,[esp+0x104]
1002c9c0:	call   0x100012f4
1002c9c5:	push   edi
1002c9c6:	push   0x1
1002c9c8:	lea    ecx,[esp+0x120]
1002c9cf:	call   0x100012f4
1002c9d4:	push   edi
1002c9d5:	push   0x1
1002c9d7:	lea    ecx,[esp+0xcc]
1002c9de:	mov    BYTE PTR [esp+0x5f8],0x7
1002c9e6:	call   0x100012f4
1002c9eb:	mov    eax,DWORD PTR [ebx+0x8]
1002c9ee:	mov    eax,DWORD PTR [eax+0xc]
1002c9f1:	lea    ecx,[esp+0x1a4]
1002c9f8:	push   ecx
1002c9f9:	call   0x1000795e
1002c9fe:	mov    esi,DWORD PTR [esp+0x24]
1002ca02:	mov    BYTE PTR [esp+0x5f0],0x8
1002ca0a:	mov    eax,DWORD PTR [esi+0x10]
1002ca0d:	push   edi
1002ca0e:	mov    DWORD PTR [esp+0x20],eax
1002ca12:	lea    eax,[esi+0x14]
1002ca15:	push   eax
1002ca16:	lea    eax,[esp+0x158]
1002ca1d:	push   eax
1002ca1e:	push   DWORD PTR [ebx+0x8]
1002ca21:	push   DWORD PTR [ebx]
1002ca23:	push   DWORD PTR [esi+0x8]
1002ca26:	call   0x100228cd
1002ca2b:	mov    ecx,DWORD PTR [esp+0x34]
1002ca2f:	push   eax
1002ca30:	call   0x100230a5
1002ca35:	test   al,al
1002ca37:	jne    0x1002ca65
1002ca39:	cmp    DWORD PTR [esp+0x168],0x10
1002ca41:	mov    eax,DWORD PTR [esp+0x154]
1002ca48:	jae    0x1002ca51
1002ca4a:	lea    eax,[esp+0x154]
1002ca51:	push   eax
1002ca52:	call   0x1000205f
1002ca57:	pop    ecx
1002ca58:	push   0x7
1002ca5a:	call   0x10037b70
1002ca5f:	pop    ecx
1002ca60:	jmp    0x1002ce28
1002ca65:	mov    eax,DWORD PTR [esi+0x10]
1002ca68:	lea    edx,[esp+0x1c]
1002ca6c:	push   edx
1002ca6d:	mov    DWORD PTR [esp+0x20],edi
1002ca71:	mov    ecx,DWORD PTR [eax]
1002ca73:	push   eax
1002ca74:	call   DWORD PTR [ecx+0x28]
1002ca77:	push   edi
1002ca78:	lea    ecx,[esp+0x170]
1002ca7f:	mov    DWORD PTR [esp+0x188],0xf
1002ca8a:	call   0x10001420
1002ca8f:	mov    BYTE PTR [esp+0x5f0],0x9
1002ca97:	cmp    DWORD PTR [esp+0x1c],edi
1002ca9b:	je     0x1002cc30
1002caa1:	mov    DWORD PTR [esp+0x18],0x1
1002caa9:	jmp    0x1002caaf
1002caab:	mov    esi,DWORD PTR [esp+0x24]
1002caaf:	lea    eax,[esp+0x4c]
1002cab3:	push   eax
1002cab4:	call   DWORD PTR ds:0x1006628c
1002caba:	mov    eax,DWORD PTR [esp+0x18]
1002cabe:	mov    WORD PTR [esp+0x5c],0x16
1002cac5:	mov    DWORD PTR [esp+0x64],eax
1002cac9:	mov    BYTE PTR [esp+0x5f0],0xb
1002cad1:	mov    eax,DWORD PTR [esi+0x10]
1002cad4:	mov    ecx,DWORD PTR [eax]
1002cad6:	lea    edx,[esp+0x4c]
1002cada:	push   edx
1002cadb:	sub    esp,0x10
1002cade:	mov    edi,esp
1002cae0:	lea    esi,[esp+0x70]
1002cae4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002cae5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002cae6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002cae7:	push   eax
1002cae8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002cae9:	call   DWORD PTR [ecx+0x20]
1002caec:	test   eax,eax
1002caee:	lea    eax,[esp+0x5c]
1002caf2:	mov    BYTE PTR [esp+0x5f0],0xa
1002cafa:	mov    esi,DWORD PTR ds:0x10066294
1002cb00:	push   eax
1002cb01:	setge  BYTE PTR [esp+0x1b]
1002cb06:	call   esi
1002cb08:	cmp    BYTE PTR [esp+0x17],0x0
1002cb0d:	je     0x1002cc0c
1002cb13:	lea    ecx,[esp+0x4c]
1002cb17:	call   0x1002b0e4
1002cb1c:	xor    edi,edi
1002cb1e:	cmp    eax,edi
1002cb20:	mov    DWORD PTR [esp+0x28],edi
1002cb24:	je     0x1002cb35
1002cb26:	mov    ecx,DWORD PTR [eax]
1002cb28:	lea    edx,[esp+0x28]
1002cb2c:	push   edx
1002cb2d:	push   0x10072b54
1002cb32:	push   eax
1002cb33:	call   DWORD PTR [ecx]
1002cb35:	mov    BYTE PTR [esp+0x5f0],0xc
1002cb3d:	mov    eax,DWORD PTR [esp+0x28]
1002cb41:	lea    edx,[esp+0x30]
1002cb45:	push   edx
1002cb46:	mov    DWORD PTR [esp+0x34],edi
1002cb4a:	mov    ecx,DWORD PTR [eax]
1002cb4c:	push   eax
1002cb4d:	call   DWORD PTR [ecx+0x24]
1002cb50:	mov    eax,DWORD PTR [esp+0x24]
1002cb54:	mov    eax,DWORD PTR [eax+0x10]
1002cb57:	mov    ecx,DWORD PTR [eax]
1002cb59:	lea    edx,[esp+0x38]
1002cb5d:	push   edx
1002cb5e:	push   DWORD PTR [esp+0x1c]
1002cb62:	push   eax
1002cb63:	call   DWORD PTR [ecx+0x24]
1002cb66:	test   eax,eax
1002cb68:	jl     0x1002cbf6
1002cb6e:	mov    ecx,DWORD PTR [esp+0x38]
1002cb72:	push   edi
1002cb73:	lea    edi,[esp+0x30]
1002cb77:	call   0x1000d94e
1002cb7c:	mov    BYTE PTR [esp+0x5f0],0xd
1002cb84:	cmp    DWORD PTR [esp+0x180],0x0
1002cb8c:	jbe    0x1002cba0
1002cb8e:	push   0x10072d90
1002cb93:	lea    eax,[esp+0x170]
1002cb9a:	push   eax
1002cb9b:	call   0x10004120
1002cba0:	lea    eax,[esp+0x2c]
1002cba4:	call   0x1000d9ae
1002cba9:	push   eax
1002cbaa:	lea    eax,[esp+0x170]
1002cbb1:	push   eax
1002cbb2:	call   0x10004120
1002cbb7:	push   0x1006dc98
1002cbbc:	lea    eax,[esp+0x170]
1002cbc3:	push   eax
1002cbc4:	call   0x10004120
1002cbc9:	push   0xa
1002cbcb:	lea    eax,[esp+0x1e0]
1002cbd2:	push   eax
1002cbd3:	push   DWORD PTR [esp+0x38]
1002cbd7:	call   0x10045d96
1002cbdc:	add    esp,0xc
1002cbdf:	push   eax
1002cbe0:	lea    eax,[esp+0x170]
1002cbe7:	push   eax
1002cbe8:	call   0x10004120
1002cbed:	lea    edi,[esp+0x2c]
1002cbf1:	call   0x100025aa
1002cbf6:	mov    BYTE PTR [esp+0x5f0],0xa
1002cbfe:	mov    eax,DWORD PTR [esp+0x28]
1002cc02:	test   eax,eax
1002cc04:	je     0x1002cc0c
1002cc06:	mov    ecx,DWORD PTR [eax]
1002cc08:	push   eax
1002cc09:	call   DWORD PTR [ecx+0x8]
1002cc0c:	lea    eax,[esp+0x4c]
1002cc10:	push   eax
1002cc11:	mov    BYTE PTR [esp+0x5f4],0x9
1002cc19:	call   esi
1002cc1b:	inc    DWORD PTR [esp+0x18]
1002cc1f:	mov    eax,DWORD PTR [esp+0x18]
1002cc23:	dec    eax
1002cc24:	cmp    eax,DWORD PTR [esp+0x1c]
1002cc28:	jne    0x1002caab
1002cc2e:	xor    edi,edi
1002cc30:	mov    eax,DWORD PTR [ebx+0x8]
1002cc33:	mov    eax,DWORD PTR [eax+0xc]
1002cc36:	lea    ecx,[esp+0x188]
1002cc3d:	push   ecx
1002cc3e:	call   0x1000795e
1002cc43:	lea    ecx,[esp+0x188]
1002cc4a:	lea    eax,[esp+0x1a4]
1002cc51:	mov    BYTE PTR [esp+0x5f0],0xe
1002cc59:	call   0x10006591
1002cc5e:	test   al,al
1002cc60:	jne    0x1002cdc9
1002cc66:	push   0x10072d94
1002cc6b:	push   0x11
1002cc6d:	push   0x1006dc5c
1002cc72:	call   0x100042e3
1002cc77:	add    esp,0xc
1002cc7a:	push   eax
1002cc7b:	lea    ecx,[esp+0xac]
1002cc82:	call   0x100011d1
1002cc87:	lea    eax,[esp+0xa8]
1002cc8e:	push   eax
1002cc8f:	mov    BYTE PTR [esp+0x5f4],0xf
1002cc97:	mov    eax,DWORD PTR [ebx+0x8]
1002cc9a:	add    eax,0x20
1002cc9d:	push   eax
1002cc9e:	call   0x10008261
1002cca3:	push   edi
1002cca4:	push   0x1
1002cca6:	lea    ecx,[esp+0xb0]
1002ccad:	mov    BYTE PTR [esp+0x5f8],0xe
1002ccb5:	call   0x100012f4
1002ccba:	push   0x4da2b9f8
1002ccbf:	push   0x10072dd4
1002ccc4:	call   0x100042d1
1002ccc9:	push   0xf2df0dc
1002ccce:	push   eax
1002cccf:	call   0x100042d1
1002ccd4:	push   0x2f67cd16
1002ccd9:	push   eax
1002ccda:	call   0x100042d1
1002ccdf:	push   eax
1002cce0:	push   0xe
1002cce2:	mov    esi,0x1006d9c0
1002cce7:	push   esi
1002cce8:	call   0x100042e3
1002cced:	add    esp,0x24
1002ccf0:	push   eax
1002ccf1:	lea    ecx,[esp+0x74]
1002ccf5:	call   0x100011d1
1002ccfa:	lea    eax,[esp+0x70]
1002ccfe:	push   eax
1002ccff:	mov    BYTE PTR [esp+0x5f4],0x10
1002cd07:	mov    eax,DWORD PTR [ebx+0x8]
1002cd0a:	add    eax,0x20
1002cd0d:	push   eax
1002cd0e:	call   0x10008261
1002cd13:	push   edi
1002cd14:	push   0x1
1002cd16:	lea    ecx,[esp+0x78]
1002cd1a:	mov    BYTE PTR [esp+0x5f8],0xe
1002cd22:	call   0x100012f4
1002cd27:	push   0xa
1002cd29:	lea    eax,[esp+0x1e0]
1002cd30:	push   eax
1002cd31:	push   DWORD PTR [esp+0x1a4]
1002cd38:	call   0x10045d96
1002cd3d:	add    esp,0xc
1002cd40:	push   eax
1002cd41:	lea    ecx,[esp+0xe4]
1002cd48:	call   0x100011d1
1002cd4d:	push   0x50d02a32
1002cd52:	push   0x10072e14
1002cd57:	mov    BYTE PTR [esp+0x5f8],0x11
1002cd5f:	call   0x100042d1
1002cd64:	push   0x40cccc82
1002cd69:	push   eax
1002cd6a:	call   0x100042d1
1002cd6f:	push   eax
1002cd70:	push   0xe
1002cd72:	push   esi
1002cd73:	call   0x100042e3
1002cd78:	add    esp,0x1c
1002cd7b:	push   eax
1002cd7c:	lea    ecx,[esp+0x90]
1002cd83:	call   0x100011d1
1002cd88:	mov    BYTE PTR [esp+0x5f0],0x12
1002cd90:	push   edi
1002cd91:	lea    eax,[esp+0x90]
1002cd98:	mov    edx,DWORD PTR [ebx+0x8]
1002cd9b:	push   eax
1002cd9c:	add    edx,0x20
1002cd9f:	lea    ecx,[esp+0xe8]
1002cda6:	call   0x10007f58
1002cdab:	push   edi
1002cdac:	push   0x1
1002cdae:	lea    ecx,[esp+0x94]
1002cdb5:	call   0x100012f4
1002cdba:	push   edi
1002cdbb:	push   0x1
1002cdbd:	lea    ecx,[esp+0xe8]
1002cdc4:	call   0x100012f4
1002cdc9:	cmp    DWORD PTR [esp+0x184],0x10
1002cdd1:	mov    ecx,DWORD PTR [esp+0x170]
1002cdd8:	jae    0x1002cde1
1002cdda:	lea    ecx,[esp+0x170]
1002cde1:	cmp    DWORD PTR [esp+0x168],0x10
1002cde9:	mov    eax,DWORD PTR [esp+0x154]
1002cdf0:	jae    0x1002cdf9
1002cdf2:	lea    eax,[esp+0x154]
1002cdf9:	push   ecx
1002cdfa:	push   eax
1002cdfb:	call   0x1000205f
1002ce00:	pop    ecx
1002ce01:	pop    ecx
1002ce02:	push   edi
1002ce03:	push   0x1
1002ce05:	lea    ecx,[esp+0x190]
1002ce0c:	call   0x100012f4
1002ce11:	push   edi
1002ce12:	push   0x1
1002ce14:	lea    ecx,[esp+0x174]
1002ce1b:	mov    BYTE PTR [esp+0x5f8],0x8
1002ce23:	call   0x100012f4
1002ce28:	push   DWORD PTR [ebx]
1002ce2a:	call   0x100087ce
1002ce2f:	mov    DWORD PTR [esp+0x20],eax
1002ce33:	mov    BYTE PTR [esp+0x5f0],0x13
1002ce3b:	push   DWORD PTR [ebx+0x8]
1002ce3e:	call   0x10009040
1002ce43:	mov    DWORD PTR [esp+0x34],eax
1002ce47:	mov    BYTE PTR [esp+0x5f0],0x14
1002ce4f:	lea    eax,[esp+0x20]
1002ce53:	mov    DWORD PTR [esp+0x40],eax
1002ce57:	lea    eax,[esp+0x34]
1002ce5b:	mov    DWORD PTR [esp+0x44],eax
1002ce5f:	mov    eax,DWORD PTR [esp+0x3c]
1002ce63:	mov    ecx,DWORD PTR [eax+0x4]
1002ce66:	lea    edx,[esp+0x40]
1002ce6a:	mov    BYTE PTR [esp+0x48],0x0
1002ce6f:	mov    eax,DWORD PTR [ecx]
1002ce71:	push   edx
1002ce72:	call   DWORD PTR [eax]
1002ce74:	lea    eax,[esp+0x34]
1002ce78:	mov    BYTE PTR [esp+0x5f0],0x13
1002ce80:	call   0x10009e51
1002ce85:	mov    BYTE PTR [esp+0x5f0],0x8
1002ce8d:	cmp    DWORD PTR [esp+0x20],edi
1002ce91:	je     0x1002ce9c
1002ce93:	push   DWORD PTR [esp+0x20]
1002ce97:	call   0x10009ece
1002ce9c:	push   edi
1002ce9d:	push   0x1
1002ce9f:	lea    ecx,[esp+0x1ac]
1002cea6:	call   0x100012f4
1002ceab:	push   edi
1002ceac:	push   0x1
1002ceae:	lea    ecx,[esp+0x1c8]
1002ceb5:	call   0x100012f4
1002ceba:	mov    bl,0x1
1002cebc:	jmp    0x1002c910
1002cec1:	push   ebp
1002cec2:	sub    esp,0x400
1002cec8:	lea    ebp,[esp-0x4]
1002cecc:	mov    eax,ds:0x1007e030
1002ced1:	xor    eax,ebp
1002ced3:	mov    DWORD PTR [ebp+0x400],eax
1002ced9:	push   0x44
1002cedb:	mov    eax,0x10060bd2
1002cee0:	call   0x10059c75
1002cee5:	xor    edi,edi
1002cee7:	mov    DWORD PTR [ebp-0x4],edi
1002ceea:	mov    DWORD PTR [ebp-0x30],edi
1002ceed:	mov    eax,DWORD PTR [ebx]
1002ceef:	lea    edx,[ebp-0x1c]
1002cef2:	mov    esi,ecx
1002cef4:	push   edx
1002cef5:	mov    DWORD PTR [ebp-0x1c],edi
1002cef8:	mov    ecx,DWORD PTR [eax]
1002cefa:	push   eax
1002cefb:	mov    DWORD PTR [ebp-0x28],esi
1002cefe:	call   DWORD PTR [ecx+0x28]
1002cf01:	call   0x100040e9
1002cf06:	xor    esi,esi
1002cf08:	mov    DWORD PTR [ebp-0x4],edi
1002cf0b:	inc    esi
1002cf0c:	cmp    DWORD PTR [ebp-0x1c],edi
1002cf0f:	mov    DWORD PTR [ebp-0x30],esi
1002cf12:	je     0x1002d044
1002cf18:	mov    DWORD PTR [ebp-0x14],esi
1002cf1b:	jmp    0x1002cf20
1002cf1d:	xor    esi,esi
1002cf1f:	inc    esi
1002cf20:	lea    eax,[ebp-0x40]
1002cf23:	push   eax
1002cf24:	call   DWORD PTR ds:0x1006628c
1002cf2a:	mov    eax,DWORD PTR [ebp-0x14]
1002cf2d:	mov    DWORD PTR [ebp-0x4],esi
1002cf30:	mov    WORD PTR [ebp-0x50],0x16
1002cf36:	mov    DWORD PTR [ebp-0x48],eax
1002cf39:	lea    edx,[ebp-0x40]
1002cf3c:	push   edx
1002cf3d:	mov    BYTE PTR [ebp-0x4],0x2
1002cf41:	mov    eax,DWORD PTR [ebx]
1002cf43:	mov    ecx,DWORD PTR [eax]
1002cf45:	sub    esp,0x10
1002cf48:	mov    edi,esp
1002cf4a:	lea    esi,[ebp-0x50]
1002cf4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002cf4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002cf4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002cf50:	push   eax
1002cf51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002cf52:	call   DWORD PTR [ecx+0x20]
1002cf55:	test   eax,eax
1002cf57:	lea    eax,[ebp-0x50]
1002cf5a:	mov    BYTE PTR [ebp-0x4],0x1
1002cf5e:	mov    esi,DWORD PTR ds:0x10066294
1002cf64:	push   eax
1002cf65:	setge  BYTE PTR [ebp-0xd]
1002cf69:	call   esi
1002cf6b:	cmp    BYTE PTR [ebp-0xd],0x0
1002cf6f:	je     0x1002d02a
1002cf75:	lea    ecx,[ebp-0x40]
1002cf78:	call   0x1002b0e4
1002cf7d:	xor    edi,edi
1002cf7f:	cmp    eax,edi
1002cf81:	mov    DWORD PTR [ebp-0x18],edi
1002cf84:	je     0x1002cf94
1002cf86:	mov    ecx,DWORD PTR [eax]
1002cf88:	lea    edx,[ebp-0x18]
1002cf8b:	push   edx
1002cf8c:	push   0x10072b54
1002cf91:	push   eax
1002cf92:	call   DWORD PTR [ecx]
1002cf94:	mov    BYTE PTR [ebp-0x4],0x3
1002cf98:	mov    eax,DWORD PTR [ebp-0x18]
1002cf9b:	lea    edx,[ebp-0x24]
1002cf9e:	push   edx
1002cf9f:	mov    DWORD PTR [ebp-0x24],edi
1002cfa2:	mov    ecx,DWORD PTR [eax]
1002cfa4:	push   eax
1002cfa5:	call   DWORD PTR [ecx+0x24]
1002cfa8:	mov    eax,DWORD PTR [ebx]
1002cfaa:	mov    ecx,DWORD PTR [eax]
1002cfac:	lea    edx,[ebp-0x2c]
1002cfaf:	push   edx
1002cfb0:	push   DWORD PTR [ebp-0x14]
1002cfb3:	push   eax
1002cfb4:	call   DWORD PTR [ecx+0x24]
1002cfb7:	test   eax,eax
1002cfb9:	jl     0x1002d019
1002cfbb:	mov    ecx,DWORD PTR [ebp-0x2c]
1002cfbe:	push   edi
1002cfbf:	lea    edi,[ebp-0x20]
1002cfc2:	call   0x1000d94e
1002cfc7:	mov    BYTE PTR [ebp-0x4],0x4
1002cfcb:	mov    edi,DWORD PTR [ebp-0x28]
1002cfce:	cmp    DWORD PTR [edi+0x14],0x0
1002cfd2:	jbe    0x1002cfdf
1002cfd4:	push   0x10072d90
1002cfd9:	push   edi
1002cfda:	call   0x10004120
1002cfdf:	lea    eax,[ebp-0x20]
1002cfe2:	call   0x1000d9ae
1002cfe7:	push   eax
1002cfe8:	push   edi
1002cfe9:	call   0x10004120
1002cfee:	push   0x1006dc98
1002cff3:	push   edi
1002cff4:	call   0x10004120
1002cff9:	push   0xa
1002cffb:	lea    eax,[ebp+0x0]
1002cffe:	push   eax
1002cfff:	push   DWORD PTR [ebp-0x24]
1002d002:	call   0x10045d96
1002d007:	add    esp,0xc
1002d00a:	push   eax
1002d00b:	push   edi
1002d00c:	call   0x10004120
1002d011:	lea    edi,[ebp-0x20]
1002d014:	call   0x100025aa
1002d019:	mov    BYTE PTR [ebp-0x4],0x1
1002d01d:	mov    eax,DWORD PTR [ebp-0x18]
1002d020:	test   eax,eax
1002d022:	je     0x1002d02a
1002d024:	mov    ecx,DWORD PTR [eax]
1002d026:	push   eax
1002d027:	call   DWORD PTR [ecx+0x8]
1002d02a:	lea    eax,[ebp-0x40]
1002d02d:	push   eax
1002d02e:	mov    BYTE PTR [ebp-0x4],0x0
1002d032:	call   esi
1002d034:	inc    DWORD PTR [ebp-0x14]
1002d037:	mov    eax,DWORD PTR [ebp-0x14]
1002d03a:	dec    eax
1002d03b:	cmp    eax,DWORD PTR [ebp-0x1c]
1002d03e:	jne    0x1002cf1d
1002d044:	mov    eax,DWORD PTR [ebp-0x28]
1002d047:	mov    ecx,DWORD PTR [ebp-0xc]
1002d04a:	mov    DWORD PTR fs:0x0,ecx
1002d051:	pop    ecx
1002d052:	pop    edi
1002d053:	pop    esi
1002d054:	pop    ebx
1002d055:	mov    ecx,DWORD PTR [ebp+0x400]
1002d05b:	xor    ecx,ebp
1002d05d:	call   0x100430d7
1002d062:	add    ebp,0x404
1002d068:	leave  
1002d069:	ret    
1002d06a:	push   ebp
1002d06b:	sub    esp,0x60
1002d06e:	lea    ebp,[esp-0x4]
1002d072:	mov    eax,ds:0x1007e030
1002d077:	xor    eax,ebp
1002d079:	mov    DWORD PTR [ebp+0x60],eax
1002d07c:	push   0x54
1002d07e:	mov    eax,0x1006418b
1002d083:	call   0x10059c75
1002d088:	mov    eax,DWORD PTR [ebp+0x6c]
1002d08b:	mov    ebx,DWORD PTR [eax]
1002d08d:	mov    DWORD PTR [ebp+0x4],ebx
1002d090:	and    DWORD PTR [ebp-0x4],0x0
1002d094:	mov    eax,DWORD PTR [eax+0x4]
1002d097:	mov    DWORD PTR [ebp+0x8],eax
1002d09a:	push   ebx
1002d09b:	lea    ecx,[ebp+0x44]
1002d09e:	mov    BYTE PTR [ebp-0x4],0x1
1002d0a2:	call   0x10008b3e
1002d0a7:	sub    esp,0x10
1002d0aa:	mov    BYTE PTR [ebp-0x4],0x2
1002d0ae:	mov    edi,esp
1002d0b0:	mov    esi,0x1006f578
1002d0b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002d0b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002d0b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002d0b8:	push   ebx
1002d0b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002d0ba:	call   0x1000873b
1002d0bf:	mov    edi,eax
1002d0c1:	xor    esi,esi
1002d0c3:	cmp    edi,esi
1002d0c5:	jne    0x1002d0e9
1002d0c7:	push   esi
1002d0c8:	push   0x1
1002d0ca:	lea    ecx,[ebp+0x44]
1002d0cd:	call   0x100012f4
1002d0d2:	lea    eax,[ebp+0x8]
1002d0d5:	mov    BYTE PTR [ebp-0x4],0x0
1002d0d9:	call   0x10009e51
1002d0de:	or     DWORD PTR [ebp-0x4],0xffffffff
1002d0e2:	cmp    ebx,esi
1002d0e4:	jmp    0x1002d2e7
1002d0e9:	mov    eax,DWORD PTR [edi+0xc]
1002d0ec:	test   al,0x1
1002d0ee:	je     0x1002d0c7
1002d0f0:	test   al,0x8
1002d0f2:	jne    0x1002d1b3
1002d0f8:	mov    eax,DWORD PTR [ebp+0x8]
1002d0fb:	mov    ecx,DWORD PTR [eax+0x10]
1002d0fe:	sub    ecx,DWORD PTR [ebx+0x10]
1002d101:	mov    eax,DWORD PTR [eax+0x14]
1002d104:	sbb    eax,DWORD PTR [ebx+0x14]
1002d107:	push   esi
1002d108:	push   0x2710
1002d10d:	push   eax
1002d10e:	push   ecx
1002d10f:	call   0x1005f580
1002d114:	add    eax,eax
1002d116:	mov    ecx,0x4e20
1002d11b:	cmp    eax,ecx
1002d11d:	jae    0x1002d121
1002d11f:	mov    eax,ecx
1002d121:	mov    ecx,DWORD PTR [edi+0x2c]
1002d124:	push   eax
1002d125:	push   ecx
1002d126:	call   DWORD PTR ds:0x10066084
1002d12c:	test   eax,eax
1002d12e:	je     0x1002d16b
1002d130:	cmp    DWORD PTR [ebp+0x5c],0x10
1002d134:	mov    eax,DWORD PTR [ebp+0x48]
1002d137:	jae    0x1002d13c
1002d139:	lea    eax,[ebp+0x48]
1002d13c:	push   eax
1002d13d:	call   0x1000205f
1002d142:	push   0x5
1002d144:	call   0x10037b70
1002d149:	pop    ecx
1002d14a:	pop    ecx
1002d14b:	push   esi
1002d14c:	push   0x1
1002d14e:	lea    ecx,[ebp+0x44]
1002d151:	call   0x100012f4
1002d156:	lea    eax,[ebp+0x8]
1002d159:	mov    BYTE PTR [ebp-0x4],0x0
1002d15d:	call   0x10009e51
1002d162:	or     DWORD PTR [ebp-0x4],0xffffffff
1002d166:	jmp    0x1002d2e9
1002d16b:	mov    al,BYTE PTR [edi+0x28]
1002d16e:	test   al,al
1002d170:	jne    0x1002d1b0
1002d172:	cmp    DWORD PTR [ebp+0x5c],0x10
1002d176:	mov    eax,DWORD PTR [ebp+0x48]
1002d179:	jae    0x1002d17e
1002d17b:	lea    eax,[ebp+0x48]
1002d17e:	push   eax
1002d17f:	call   0x1000205f
1002d184:	push   0x5
1002d186:	call   0x10037b70
1002d18b:	pop    ecx
1002d18c:	pop    ecx
1002d18d:	push   esi
1002d18e:	push   0x1
1002d190:	lea    ecx,[ebp+0x44]
1002d193:	call   0x100012f4
1002d198:	lea    eax,[ebp+0x8]
1002d19b:	mov    BYTE PTR [ebp-0x4],0x0
1002d19f:	call   0x10009e51
1002d1a4:	or     DWORD PTR [ebp-0x4],0xffffffff
1002d1a8:	push   DWORD PTR [ebp+0x4]
1002d1ab:	jmp    0x1002d2ea
1002d1b0:	mov    ebx,DWORD PTR [ebp+0x4]
1002d1b3:	push   0x10072e40
1002d1b8:	push   0x10
1002d1ba:	push   0x1006ddf8
1002d1bf:	call   0x100042e3
1002d1c4:	add    esp,0xc
1002d1c7:	push   eax
1002d1c8:	lea    ecx,[ebp-0x44]
1002d1cb:	call   0x100011d1
1002d1d0:	push   esi
1002d1d1:	lea    eax,[ebp-0x44]
1002d1d4:	push   eax
1002d1d5:	lea    eax,[ebp-0x60]
1002d1d8:	push   eax
1002d1d9:	mov    BYTE PTR [ebp-0x4],0x3
1002d1dd:	mov    eax,DWORD PTR [ebp+0x8]
1002d1e0:	add    eax,0x20
1002d1e3:	call   0x100084c3
1002d1e8:	mov    BYTE PTR [ebp-0x4],0x4
1002d1ec:	cmp    DWORD PTR [eax+0x18],0x10
1002d1f0:	jb     0x1002d1f7
1002d1f2:	mov    eax,DWORD PTR [eax+0x4]
1002d1f5:	jmp    0x1002d1fa
1002d1f7:	add    eax,0x4
1002d1fa:	push   eax
1002d1fb:	lea    ecx,[ebp-0x28]
1002d1fe:	call   0x100011d1
1002d203:	lea    eax,[ebp-0x28]
1002d206:	push   eax
1002d207:	lea    esi,[ebp+0xc]
1002d20a:	mov    BYTE PTR [ebp-0x4],0x5
1002d20e:	call   0x1002fba0
1002d213:	pop    ecx
1002d214:	xor    esi,esi
1002d216:	push   esi
1002d217:	push   0x1
1002d219:	lea    ecx,[ebp-0x28]
1002d21c:	call   0x100012f4
1002d221:	push   esi
1002d222:	push   0x1
1002d224:	lea    ecx,[ebp-0x60]
1002d227:	call   0x100012f4
1002d22c:	push   esi
1002d22d:	push   0x1
1002d22f:	lea    ecx,[ebp-0x44]
1002d232:	mov    BYTE PTR [ebp-0x4],0x9
1002d236:	call   0x100012f4
1002d23b:	lea    esi,[edi+0x20]
1002d23e:	mov    eax,DWORD PTR [esi]
1002d240:	push   0x1
1002d242:	mov    DWORD PTR [ebp+0x0],eax
1002d245:	lea    eax,[edi+0x24]
1002d248:	push   eax
1002d249:	lea    eax,[ebp+0x44]
1002d24c:	push   eax
1002d24d:	push   DWORD PTR [ebp+0x8]
1002d250:	push   ebx
1002d251:	push   DWORD PTR [edi+0x8]
1002d254:	call   0x100228cd
1002d259:	mov    ecx,DWORD PTR [ebp+0x0]
1002d25c:	push   eax
1002d25d:	call   0x100230a5
1002d262:	test   al,al
1002d264:	jne    0x1002d283
1002d266:	cmp    DWORD PTR [ebp+0x5c],0x10
1002d26a:	mov    eax,DWORD PTR [ebp+0x48]
1002d26d:	jae    0x1002d272
1002d26f:	lea    eax,[ebp+0x48]
1002d272:	push   eax
1002d273:	call   0x1000205f
1002d278:	push   0x7
1002d27a:	call   0x10037b70
1002d27f:	pop    ecx
1002d280:	pop    ecx
1002d281:	jmp    0x1002d2bd
1002d283:	mov    ebx,esi
1002d285:	lea    ecx,[ebp+0x28]
1002d288:	call   0x1002cec1
1002d28d:	cmp    DWORD PTR [ebp+0x40],0x10
1002d291:	mov    ecx,DWORD PTR [ebp+0x2c]
1002d294:	jae    0x1002d299
1002d296:	lea    ecx,[ebp+0x2c]
1002d299:	cmp    DWORD PTR [ebp+0x5c],0x10
1002d29d:	mov    eax,DWORD PTR [ebp+0x48]
1002d2a0:	jae    0x1002d2a5
1002d2a2:	lea    eax,[ebp+0x48]
1002d2a5:	push   ecx
1002d2a6:	push   eax
1002d2a7:	call   0x1000205f
1002d2ac:	pop    ecx
1002d2ad:	pop    ecx
1002d2ae:	push   0x0
1002d2b0:	push   0x1
1002d2b2:	lea    ecx,[ebp+0x28]
1002d2b5:	call   0x100012f4
1002d2ba:	mov    ebx,DWORD PTR [ebp+0x4]
1002d2bd:	push   0x0
1002d2bf:	push   0x1
1002d2c1:	lea    ecx,[ebp+0xc]
1002d2c4:	call   0x100012f4
1002d2c9:	push   0x0
1002d2cb:	push   0x1
1002d2cd:	lea    ecx,[ebp+0x44]
1002d2d0:	call   0x100012f4
1002d2d5:	lea    eax,[ebp+0x8]
1002d2d8:	mov    BYTE PTR [ebp-0x4],0x0
1002d2dc:	call   0x10009e51
1002d2e1:	or     DWORD PTR [ebp-0x4],0xffffffff
1002d2e5:	test   ebx,ebx
1002d2e7:	je     0x1002d2ef
1002d2e9:	push   ebx
1002d2ea:	call   0x10009ece
1002d2ef:	xor    eax,eax
1002d2f1:	mov    ecx,DWORD PTR [ebp-0xc]
1002d2f4:	mov    DWORD PTR fs:0x0,ecx
1002d2fb:	pop    ecx
1002d2fc:	pop    edi
1002d2fd:	pop    esi
1002d2fe:	pop    ebx
1002d2ff:	mov    ecx,DWORD PTR [ebp+0x60]
1002d302:	xor    ecx,ebp
1002d304:	call   0x100430d7
1002d309:	add    ebp,0x64
1002d30c:	leave  
1002d30d:	ret    0x4
1002d310:	push   ebx
1002d311:	push   ebp
1002d312:	mov    ebp,DWORD PTR [esp+0xc]
1002d316:	mov    eax,DWORD PTR [ebp+0x0]
1002d319:	mov    eax,DWORD PTR [eax]
1002d31b:	push   esi
1002d31c:	push   edi
1002d31d:	sub    esp,0x10
1002d320:	mov    edi,esp
1002d322:	mov    esi,0x1006f578
1002d327:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002d328:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002d329:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002d32a:	push   eax
1002d32b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002d32c:	call   0x1000873b
1002d331:	test   eax,eax
1002d333:	jne    0x1002d339
1002d335:	xor    al,al
1002d337:	jmp    0x1002d372
1002d339:	push   0x8
1002d33b:	call   0x100436de
1002d340:	pop    ecx
1002d341:	mov    ecx,DWORD PTR [ebp+0x0]
1002d344:	mov    edx,DWORD PTR [ecx]
1002d346:	xor    ebx,ebx
1002d348:	push   ebx
1002d349:	push   ebx
1002d34a:	mov    DWORD PTR [ecx],ebx
1002d34c:	push   eax
1002d34d:	mov    DWORD PTR [eax],edx
1002d34f:	mov    ecx,DWORD PTR [ebp+0x4]
1002d352:	mov    edx,DWORD PTR [ecx]
1002d354:	push   0x1002d06a
1002d359:	push   ebx
1002d35a:	mov    DWORD PTR [ecx],ebx
1002d35c:	push   ebx
1002d35d:	mov    DWORD PTR [eax+0x4],edx
1002d360:	call   DWORD PTR ds:0x10066098
1002d366:	push   ebx
1002d367:	mov    BYTE PTR [ebp+0x8],bl
1002d36a:	call   0x100430d2
1002d36f:	pop    ecx
1002d370:	mov    al,0x1
1002d372:	pop    edi
1002d373:	pop    esi
1002d374:	pop    ebp
1002d375:	pop    ebx
1002d376:	ret    0x4
1002d379:	mov    ecx,DWORD PTR [eax]
1002d37b:	test   ecx,ecx
1002d37d:	je     0x1002d386
1002d37f:	mov    eax,DWORD PTR [ecx]
1002d381:	push   0x1
1002d383:	call   DWORD PTR [eax+0x4]
1002d386:	ret    
1002d387:	push   edi
1002d388:	mov    edi,DWORD PTR [esp+0x14]
1002d38c:	mov    ecx,0x1007f9d0
1002d391:	call   0x100105fb
1002d396:	pop    edi
1002d397:	ret    0x10
1002d39a:	push   DWORD PTR [esp+0x18]
1002d39e:	mov    eax,0x1007f9d0
1002d3a3:	push   DWORD PTR [esp+0x14]
1002d3a7:	push   DWORD PTR [esp+0x14]
1002d3ab:	call   0x10010629
1002d3b0:	ret    0x18
1002d3b3:	push   ebp
1002d3b4:	mov    ebp,esp
1002d3b6:	push   DWORD PTR [ebp+0x28]
1002d3b9:	mov    eax,0x1007f9d0
1002d3be:	push   DWORD PTR [ebp+0x24]
1002d3c1:	push   DWORD PTR [ebp+0x20]
1002d3c4:	push   DWORD PTR [ebp+0x1c]
1002d3c7:	push   DWORD PTR [ebp+0x18]
1002d3ca:	push   DWORD PTR [ebp+0xc]
1002d3cd:	push   DWORD PTR [ebp+0x8]
1002d3d0:	call   0x100106cc
1002d3d5:	pop    ebp
1002d3d6:	ret    0x24
1002d3d9:	push   edi
1002d3da:	mov    edi,DWORD PTR [esp+0x14]
1002d3de:	mov    ecx,0x1007f9ec
1002d3e3:	call   0x100105fb
1002d3e8:	pop    edi
1002d3e9:	ret    0x10
1002d3ec:	push   DWORD PTR [esp+0x18]
1002d3f0:	mov    eax,0x1007f9ec
1002d3f5:	push   DWORD PTR [esp+0x14]
1002d3f9:	push   DWORD PTR [esp+0x14]
1002d3fd:	call   0x10010629
1002d402:	ret    0x18
1002d405:	push   ebp
1002d406:	mov    ebp,esp
1002d408:	push   DWORD PTR [ebp+0x28]
1002d40b:	mov    eax,0x1007f9ec
1002d410:	push   DWORD PTR [ebp+0x24]
1002d413:	push   DWORD PTR [ebp+0x20]
1002d416:	push   DWORD PTR [ebp+0x1c]
1002d419:	push   DWORD PTR [ebp+0x18]
1002d41c:	push   DWORD PTR [ebp+0xc]
1002d41f:	push   DWORD PTR [ebp+0x8]
1002d422:	call   0x100106cc
1002d427:	pop    ebp
1002d428:	ret    0x24
1002d42b:	mov    edx,DWORD PTR [esp+0x8]
1002d42f:	test   edx,edx
1002d431:	jne    0x1002d43a
1002d433:	mov    eax,0x80004003
1002d438:	jmp    0x1002d455
1002d43a:	mov    eax,DWORD PTR [esp+0x4]
1002d43e:	mov    ecx,DWORD PTR [eax+0x8]
1002d441:	test   ecx,ecx
1002d443:	jne    0x1002d449
1002d445:	xor    eax,eax
1002d447:	jmp    0x1002d451
1002d449:	mov    eax,DWORD PTR [eax+0xc]
1002d44c:	sub    eax,ecx
1002d44e:	sar    eax,0x4
1002d451:	mov    DWORD PTR [edx],eax
1002d453:	xor    eax,eax
1002d455:	ret    0x8
1002d458:	push   ebp
1002d459:	mov    ebp,esp
1002d45b:	and    esp,0xfffffff8
1002d45e:	sub    esp,0x14
1002d461:	cmp    DWORD PTR [ebp+0x10],0x0
1002d465:	push   ebx
1002d466:	push   esi
1002d467:	push   edi
1002d468:	jne    0x1002d474
1002d46a:	mov    eax,0x80004003
1002d46f:	jmp    0x1002d534
1002d474:	cmp    DWORD PTR [ebp+0xc],0x1
1002d478:	jge    0x1002d484
1002d47a:	mov    eax,0x80070057
1002d47f:	jmp    0x1002d534
1002d484:	mov    ebx,DWORD PTR [ebp+0x8]
1002d487:	mov    esi,DWORD PTR [ebx+0x8]
1002d48a:	dec    DWORD PTR [ebp+0xc]
1002d48d:	add    ebx,0x4
1002d490:	cmp    esi,DWORD PTR [ebx+0x8]
1002d493:	mov    DWORD PTR [esp+0xc],0x80004005
1002d49b:	jbe    0x1002d4a2
1002d49d:	call   0x100435f0
1002d4a2:	mov    edi,ebx
1002d4a4:	mov    DWORD PTR [esp+0x10],edi
1002d4a8:	mov    DWORD PTR [esp+0x14],esi
1002d4ac:	mov    esi,DWORD PTR [ebx+0x8]
1002d4af:	cmp    DWORD PTR [ebx+0x4],esi
1002d4b2:	jbe    0x1002d4b9
1002d4b4:	call   0x100435f0
1002d4b9:	test   edi,edi
1002d4bb:	je     0x1002d4c1
1002d4bd:	cmp    edi,ebx
1002d4bf:	je     0x1002d4c6
1002d4c1:	call   0x100435f0
1002d4c6:	cmp    DWORD PTR [esp+0x14],esi
1002d4ca:	je     0x1002d4e8
1002d4cc:	cmp    DWORD PTR [ebp+0xc],0x0
1002d4d0:	jle    0x1002d4e8
1002d4d2:	lea    edi,[esp+0x18]
1002d4d6:	lea    esi,[esp+0x10]
1002d4da:	call   0x1002dfce
1002d4df:	dec    DWORD PTR [ebp+0xc]
1002d4e2:	mov    edi,DWORD PTR [esp+0x10]
1002d4e6:	jmp    0x1002d4ac
1002d4e8:	mov    esi,DWORD PTR [ebx+0x8]
1002d4eb:	cmp    DWORD PTR [ebx+0x4],esi
1002d4ee:	jbe    0x1002d4f5
1002d4f0:	call   0x100435f0
1002d4f5:	test   edi,edi
1002d4f7:	je     0x1002d4fd
1002d4f9:	cmp    edi,ebx
1002d4fb:	je     0x1002d502
1002d4fd:	call   0x100435f0
1002d502:	mov    ebx,DWORD PTR [esp+0x14]
1002d506:	cmp    ebx,esi
1002d508:	je     0x1002d530
1002d50a:	test   edi,edi
1002d50c:	jne    0x1002d513
1002d50e:	call   0x100435f0
1002d513:	cmp    ebx,DWORD PTR [edi+0x8]
1002d516:	jb     0x1002d51d
1002d518:	call   0x100435f0
1002d51d:	mov    eax,DWORD PTR [ebp+0x10]
1002d520:	and    WORD PTR [eax],0x0
1002d524:	push   ebx
1002d525:	push   eax
1002d526:	call   DWORD PTR ds:0x10066280
1002d52c:	mov    DWORD PTR [esp+0xc],eax
1002d530:	mov    eax,DWORD PTR [esp+0xc]
1002d534:	pop    edi
1002d535:	pop    esi
1002d536:	pop    ebx
1002d537:	mov    esp,ebp
1002d539:	pop    ebp
1002d53a:	ret    0xc
1002d53d:	push   ebp
1002d53e:	mov    ebp,esp
1002d540:	push   edi
1002d541:	mov    edi,DWORD PTR [ebp+0xc]
1002d544:	test   edi,edi
1002d546:	jne    0x1002d54f
1002d548:	mov    eax,0x80004003
1002d54d:	jmp    0x1002d59a
1002d54f:	and    DWORD PTR [edi],0x0
1002d552:	push   ebx
1002d553:	push   esi
1002d554:	lea    eax,[ebp+0xc]
1002d557:	push   eax
1002d558:	call   0x1002ec9c
1002d55d:	mov    ebx,DWORD PTR [ebp+0xc]
1002d560:	mov    esi,eax
1002d562:	test   esi,esi
1002d564:	jl     0x1002d589
1002d566:	mov    eax,DWORD PTR [ebp+0x8]
1002d569:	lea    ecx,[eax+0x4]
1002d56c:	push   ecx
1002d56d:	call   0x1002e03f
1002d572:	mov    esi,eax
1002d574:	test   esi,esi
1002d576:	jne    0x1002d589
1002d578:	mov    eax,DWORD PTR [ebx]
1002d57a:	push   edi
1002d57b:	push   0x1006dd44
1002d580:	push   ebx
1002d581:	call   DWORD PTR [eax]
1002d583:	mov    esi,eax
1002d585:	test   esi,esi
1002d587:	je     0x1002d596
1002d589:	test   ebx,ebx
1002d58b:	je     0x1002d596
1002d58d:	mov    eax,DWORD PTR [ebx]
1002d58f:	push   0x1
1002d591:	mov    ecx,ebx
1002d593:	call   DWORD PTR [eax+0x1c]
1002d596:	mov    eax,esi
1002d598:	pop    esi
1002d599:	pop    ebx
1002d59a:	pop    edi
1002d59b:	pop    ebp
1002d59c:	ret    0x8
1002d59f:	mov    eax,DWORD PTR [esi+0x4]
1002d5a2:	test   eax,eax
1002d5a4:	je     0x1002d5b7
1002d5a6:	push   DWORD PTR [esi+0x8]
1002d5a9:	call   0x1002e20c
1002d5ae:	push   DWORD PTR [esi+0x4]
1002d5b1:	call   0x100430d2
1002d5b6:	pop    ecx
1002d5b7:	and    DWORD PTR [esi+0x4],0x0
1002d5bb:	and    DWORD PTR [esi+0x8],0x0
1002d5bf:	and    DWORD PTR [esi+0xc],0x0
1002d5c3:	ret    
1002d5c4:	push   ebp
1002d5c5:	mov    ebp,esp
1002d5c7:	and    esp,0xfffffff8
1002d5ca:	mov    edx,DWORD PTR [esi+0x4]
1002d5cd:	sub    esp,0xc
1002d5d0:	test   edx,edx
1002d5d2:	push   edi
1002d5d3:	jne    0x1002d5d9
1002d5d5:	xor    ecx,ecx
1002d5d7:	jmp    0x1002d5e1
1002d5d9:	mov    ecx,DWORD PTR [esi+0x8]
1002d5dc:	sub    ecx,edx
1002d5de:	sar    ecx,0x4
1002d5e1:	test   edx,edx
1002d5e3:	je     0x1002d603
1002d5e5:	mov    eax,DWORD PTR [esi+0xc]
1002d5e8:	sub    eax,edx
1002d5ea:	sar    eax,0x4
1002d5ed:	cmp    ecx,eax
1002d5ef:	jae    0x1002d603
1002d5f1:	push   DWORD PTR [ebp+0x8]
1002d5f4:	push   0x1
1002d5f6:	push   DWORD PTR [esi+0x8]
1002d5f9:	call   0x1002dcd9
1002d5fe:	mov    DWORD PTR [esi+0x8],eax
1002d601:	jmp    0x1002d620
1002d603:	mov    edi,DWORD PTR [esi+0x8]
1002d606:	cmp    edx,edi
1002d608:	jbe    0x1002d60f
1002d60a:	call   0x100435f0
1002d60f:	push   edi
1002d610:	push   esi
1002d611:	push   DWORD PTR [ebp+0x8]
1002d614:	lea    eax,[esp+0x14]
1002d618:	push   eax
1002d619:	mov    eax,esi
1002d61b:	call   0x1002dc59
1002d620:	pop    edi
1002d621:	mov    esp,ebp
1002d623:	pop    ebp
1002d624:	ret    0x4
1002d627:	push   edi
1002d628:	mov    edi,DWORD PTR [esp+0x14]
1002d62c:	mov    ecx,0x1007fa08
1002d631:	call   0x100105fb
1002d636:	pop    edi
1002d637:	ret    0x10
1002d63a:	push   DWORD PTR [esp+0x18]
1002d63e:	mov    eax,0x1007fa08
1002d643:	push   DWORD PTR [esp+0x14]
1002d647:	push   DWORD PTR [esp+0x14]
1002d64b:	call   0x10010629
1002d650:	ret    0x18
1002d653:	push   ebp
1002d654:	mov    ebp,esp
1002d656:	push   DWORD PTR [ebp+0x28]
1002d659:	mov    eax,0x1007fa08
1002d65e:	push   DWORD PTR [ebp+0x24]
1002d661:	push   DWORD PTR [ebp+0x20]
1002d664:	push   DWORD PTR [ebp+0x1c]
1002d667:	push   DWORD PTR [ebp+0x18]
1002d66a:	push   DWORD PTR [ebp+0xc]
1002d66d:	push   DWORD PTR [ebp+0x8]
1002d670:	call   0x100106cc
1002d675:	pop    ebp
1002d676:	ret    0x24
1002d679:	push   ebp
1002d67a:	mov    ebp,esp
1002d67c:	and    esp,0xfffffff8
1002d67f:	sub    esp,0xc
1002d682:	and    DWORD PTR [esp+0x4],0x0
1002d687:	push   ebx
1002d688:	push   esi
1002d689:	push   edi
1002d68a:	lea    eax,[esp+0x10]
1002d68e:	push   eax
1002d68f:	call   0x1002eefa
1002d694:	test   eax,eax
1002d696:	jl     0x1002d6d1
1002d698:	mov    esi,DWORD PTR [ebp+0x8]
1002d69b:	mov    edi,DWORD PTR [esp+0x10]
1002d69f:	add    esi,0x4
1002d6a2:	lea    ebx,[edi+0x8]
1002d6a5:	cmp    ebx,esi
1002d6a7:	je     0x1002d6c5
1002d6a9:	mov    eax,DWORD PTR [ebx+0x4]
1002d6ac:	mov    ecx,DWORD PTR [eax]
1002d6ae:	push   eax
1002d6af:	push   ebx
1002d6b0:	push   ecx
1002d6b1:	push   ebx
1002d6b2:	lea    eax,[esp+0x20]
1002d6b6:	push   eax
1002d6b7:	call   0x1002e501
1002d6bc:	mov    eax,esi
1002d6be:	mov    ecx,ebx
1002d6c0:	call   0x1002f21c
1002d6c5:	push   ebx
1002d6c6:	push   edi
1002d6c7:	mov    edi,DWORD PTR [ebp+0xc]
1002d6ca:	call   0x1002ef76
1002d6cf:	pop    ecx
1002d6d0:	pop    ecx
1002d6d1:	pop    edi
1002d6d2:	pop    esi
1002d6d3:	pop    ebx
1002d6d4:	mov    esp,ebp
1002d6d6:	pop    ebp
1002d6d7:	ret    0x8
1002d6da:	mov    eax,DWORD PTR [esp+0x8]
1002d6de:	test   eax,eax
1002d6e0:	jne    0x1002d6e9
1002d6e2:	mov    eax,0x80004003
1002d6e7:	jmp    0x1002d6f4
1002d6e9:	mov    ecx,DWORD PTR [esp+0x4]
1002d6ed:	mov    ecx,DWORD PTR [ecx+0xc]
1002d6f0:	mov    DWORD PTR [eax],ecx
1002d6f2:	xor    eax,eax
1002d6f4:	ret    0x8
1002d6f7:	push   ebp
1002d6f8:	mov    ebp,esp
1002d6fa:	and    esp,0xfffffff8
1002d6fd:	sub    esp,0x14
1002d700:	cmp    DWORD PTR [ebp+0x10],0x0
1002d704:	push   ebx
1002d705:	push   esi
1002d706:	push   edi
1002d707:	jne    0x1002d713
1002d709:	mov    eax,0x80004003
1002d70e:	jmp    0x1002d7a8
1002d713:	cmp    DWORD PTR [ebp+0xc],0x1
1002d717:	jge    0x1002d723
1002d719:	mov    eax,0x80070057
1002d71e:	jmp    0x1002d7a8
1002d723:	mov    ebx,DWORD PTR [ebp+0x8]
1002d726:	dec    DWORD PTR [ebp+0xc]
1002d729:	mov    eax,DWORD PTR [ebx+0x8]
1002d72c:	mov    eax,DWORD PTR [eax]
1002d72e:	add    ebx,0x4
1002d731:	mov    DWORD PTR [esp+0xc],0x80004005
1002d739:	mov    DWORD PTR [esp+0x10],ebx
1002d73d:	mov    DWORD PTR [esp+0x14],eax
1002d741:	mov    DWORD PTR [esp+0x18],ebx
1002d745:	mov    eax,DWORD PTR [ebx+0x4]
1002d748:	lea    edi,[esp+0x18]
1002d74c:	lea    esi,[esp+0x10]
1002d750:	mov    DWORD PTR [esp+0x1c],eax
1002d754:	call   0x10004b10
1002d759:	test   al,al
1002d75b:	jne    0x1002d76d
1002d75d:	cmp    DWORD PTR [ebp+0xc],0x0
1002d761:	jle    0x1002d76d
1002d763:	call   0x1002df1d
1002d768:	dec    DWORD PTR [ebp+0xc]
1002d76b:	jmp    0x1002d745
1002d76d:	mov    eax,DWORD PTR [ebx+0x4]
1002d770:	lea    edi,[esp+0x18]
1002d774:	lea    esi,[esp+0x10]
1002d778:	mov    DWORD PTR [esp+0x1c],eax
1002d77c:	mov    DWORD PTR [esp+0x18],ebx
1002d780:	call   0x10004b10
1002d785:	test   al,al
1002d787:	jne    0x1002d7a4
1002d789:	call   0x1002d99e
1002d78e:	mov    ecx,DWORD PTR [ebp+0x10]
1002d791:	and    WORD PTR [ecx],0x0
1002d795:	add    eax,0x8
1002d798:	push   eax
1002d799:	push   ecx
1002d79a:	call   DWORD PTR ds:0x10066280
1002d7a0:	mov    DWORD PTR [esp+0xc],eax
1002d7a4:	mov    eax,DWORD PTR [esp+0xc]
1002d7a8:	pop    edi
1002d7a9:	pop    esi
1002d7aa:	pop    ebx
1002d7ab:	mov    esp,ebp
1002d7ad:	pop    ebp
1002d7ae:	ret    0xc
1002d7b1:	push   ebp
1002d7b2:	mov    ebp,esp
1002d7b4:	push   edi
1002d7b5:	mov    edi,DWORD PTR [ebp+0xc]
1002d7b8:	test   edi,edi
1002d7ba:	jne    0x1002d7c3
1002d7bc:	mov    eax,0x80004003
1002d7c1:	jmp    0x1002d80e
1002d7c3:	and    DWORD PTR [edi],0x0
1002d7c6:	push   ebx
1002d7c7:	push   esi
1002d7c8:	lea    eax,[ebp+0xc]
1002d7cb:	push   eax
1002d7cc:	call   0x1002efd3
1002d7d1:	mov    ebx,DWORD PTR [ebp+0xc]
1002d7d4:	mov    esi,eax
1002d7d6:	test   esi,esi
1002d7d8:	jl     0x1002d7fd
1002d7da:	mov    eax,DWORD PTR [ebp+0x8]
1002d7dd:	lea    ecx,[eax+0x4]
1002d7e0:	push   ecx
1002d7e1:	call   0x1002e16d
1002d7e6:	mov    esi,eax
1002d7e8:	test   esi,esi
1002d7ea:	jne    0x1002d7fd
1002d7ec:	mov    eax,DWORD PTR [ebx]
1002d7ee:	push   edi
1002d7ef:	push   0x1006dd44
1002d7f4:	push   ebx
1002d7f5:	call   DWORD PTR [eax]
1002d7f7:	mov    esi,eax
1002d7f9:	test   esi,esi
1002d7fb:	je     0x1002d80a
1002d7fd:	test   ebx,ebx
1002d7ff:	je     0x1002d80a
1002d801:	mov    eax,DWORD PTR [ebx]
1002d803:	push   0x1
1002d805:	mov    ecx,ebx
1002d807:	call   DWORD PTR [eax+0x1c]
1002d80a:	mov    eax,esi
1002d80c:	pop    esi
1002d80d:	pop    ebx
1002d80e:	pop    edi
1002d80f:	pop    ebp
1002d810:	ret    0x8
1002d813:	call   0x1002e9f6
1002d818:	lea    ecx,[esi+0x4]
1002d81b:	mov    DWORD PTR [ecx],eax
1002d81d:	mov    BYTE PTR [eax+0x29],0x1
1002d821:	mov    eax,DWORD PTR [ecx]
1002d823:	mov    DWORD PTR [eax+0x4],eax
1002d826:	mov    eax,DWORD PTR [ecx]
1002d828:	mov    DWORD PTR [eax],eax
1002d82a:	mov    ecx,DWORD PTR [ecx]
1002d82c:	mov    DWORD PTR [ecx+0x8],ecx
1002d82f:	and    DWORD PTR [esi+0x8],0x0
1002d833:	mov    eax,esi
1002d835:	ret    
1002d836:	push   ebp
1002d837:	mov    ebp,esp
1002d839:	and    esp,0xfffffff8
1002d83c:	push   0xffffffff
1002d83e:	push   0x10060200
1002d843:	mov    eax,fs:0x0
1002d849:	push   eax
1002d84a:	sub    esp,0x40
1002d84d:	push   ebx
1002d84e:	push   esi
1002d84f:	push   edi
1002d850:	mov    eax,ds:0x1007e030
1002d855:	xor    eax,esp
1002d857:	push   eax
1002d858:	lea    eax,[esp+0x50]
1002d85c:	mov    fs:0x0,eax
1002d862:	push   DWORD PTR [ebp+0xc]
1002d865:	mov    edi,DWORD PTR [ebp+0x8]
1002d868:	lea    ebx,[esp+0x18]
1002d86c:	call   0x1002de8d
1002d871:	mov    eax,DWORD PTR [edi+0x4]
1002d874:	mov    DWORD PTR [esp+0x1c],edi
1002d878:	lea    edi,[esp+0x1c]
1002d87c:	mov    esi,ebx
1002d87e:	mov    DWORD PTR [esp+0x20],eax
1002d882:	call   0x10004b10
1002d887:	test   al,al
1002d889:	mov    ebx,DWORD PTR [esp+0x18]
1002d88d:	jne    0x1002d89e
1002d88f:	push   DWORD PTR [ebp+0xc]
1002d892:	lea    eax,[ebx+0x10]
1002d895:	call   0x1002df01
1002d89a:	test   al,al
1002d89c:	je     0x1002d916
1002d89e:	lea    eax,[esp+0x24]
1002d8a2:	push   eax
1002d8a3:	call   DWORD PTR ds:0x1006628c
1002d8a9:	mov    esi,DWORD PTR [ebp+0xc]
1002d8ac:	and    DWORD PTR [esp+0x58],0x0
1002d8b1:	lea    edi,[esp+0x34]
1002d8b5:	call   0x1002b096
1002d8ba:	lea    eax,[esp+0x24]
1002d8be:	mov    BYTE PTR [esp+0x58],0x1
1002d8c3:	and    WORD PTR [esp+0x3c],0x0
1002d8c9:	push   eax
1002d8ca:	lea    esi,[esp+0x40]
1002d8ce:	call   0x1002b0c4
1002d8d3:	push   ebx
1002d8d4:	mov    BYTE PTR [esp+0x5c],0x2
1002d8d9:	push   DWORD PTR [esp+0x18]
1002d8dd:	mov    eax,edi
1002d8df:	push   eax
1002d8e0:	lea    eax,[esp+0x28]
1002d8e4:	push   eax
1002d8e5:	mov    eax,DWORD PTR [ebp+0x8]
1002d8e8:	call   0x1002dd09
1002d8ed:	mov    ecx,DWORD PTR [eax]
1002d8ef:	mov    eax,DWORD PTR [eax+0x4]
1002d8f2:	mov    DWORD PTR [esp+0x18],eax
1002d8f6:	mov    eax,esi
1002d8f8:	mov    esi,DWORD PTR ds:0x10066294
1002d8fe:	push   eax
1002d8ff:	mov    DWORD PTR [esp+0x18],ecx
1002d903:	call   esi
1002d905:	push   DWORD PTR [esp+0x34]
1002d909:	call   DWORD PTR ds:0x100662b4
1002d90f:	lea    eax,[esp+0x24]
1002d913:	push   eax
1002d914:	call   esi
1002d916:	lea    esi,[esp+0x14]
1002d91a:	call   0x1002d99e
1002d91f:	add    eax,0x8
1002d922:	mov    ecx,DWORD PTR [esp+0x50]
1002d926:	mov    DWORD PTR fs:0x0,ecx
1002d92d:	pop    ecx
1002d92e:	pop    edi
1002d92f:	pop    esi
1002d930:	pop    ebx
1002d931:	mov    esp,ebp
1002d933:	pop    ebp
1002d934:	ret    0x8
1002d937:	push   ebp
1002d938:	mov    ebp,esp
1002d93a:	sub    esp,0x18
1002d93d:	push   ebx
1002d93e:	push   esi
1002d93f:	push   edi
1002d940:	push   DWORD PTR [ebp+0x10]
1002d943:	mov    edi,DWORD PTR [ebp+0x8]
1002d946:	lea    ebx,[ebp-0xc]
1002d949:	call   0x1002de8d
1002d94e:	mov    eax,DWORD PTR [edi+0x4]
1002d951:	mov    DWORD PTR [ebp-0x14],edi
1002d954:	lea    edi,[ebp-0x14]
1002d957:	mov    esi,ebx
1002d959:	mov    DWORD PTR [ebp-0x10],eax
1002d95c:	call   0x10004b10
1002d961:	test   al,al
1002d963:	jne    0x1002d97b
1002d965:	mov    eax,DWORD PTR [ebp-0x8]
1002d968:	push   DWORD PTR [ebp+0x10]
1002d96b:	add    eax,0x10
1002d96e:	call   0x1002df01
1002d973:	test   al,al
1002d975:	jne    0x1002d97b
1002d977:	mov    ecx,ebx
1002d979:	jmp    0x1002d98a
1002d97b:	mov    eax,DWORD PTR [ebp+0x8]
1002d97e:	mov    ecx,DWORD PTR [eax+0x4]
1002d981:	mov    DWORD PTR [ebp-0x10],ecx
1002d984:	mov    DWORD PTR [ebp-0x14],eax
1002d987:	lea    ecx,[ebp-0x14]
1002d98a:	mov    edx,DWORD PTR [ecx]
1002d98c:	mov    eax,DWORD PTR [ebp+0xc]
1002d98f:	mov    ecx,DWORD PTR [ecx+0x4]
1002d992:	pop    edi
1002d993:	pop    esi
1002d994:	mov    DWORD PTR [eax],edx
1002d996:	mov    DWORD PTR [eax+0x4],ecx
1002d999:	pop    ebx
1002d99a:	leave  
1002d99b:	ret    0xc
1002d99e:	cmp    DWORD PTR [esi],0x0
1002d9a1:	jne    0x1002d9a8
1002d9a3:	call   0x100435f0
1002d9a8:	mov    eax,DWORD PTR [esi]
1002d9aa:	mov    ecx,DWORD PTR [esi+0x4]
1002d9ad:	cmp    ecx,DWORD PTR [eax+0x4]
1002d9b0:	jne    0x1002d9b7
1002d9b2:	call   0x100435f0
1002d9b7:	mov    eax,DWORD PTR [esi+0x4]
1002d9ba:	add    eax,0x10
1002d9bd:	ret    
1002d9be:	push   esi
1002d9bf:	mov    esi,ecx
1002d9c1:	mov    DWORD PTR [esi],0x10072f28
1002d9c7:	mov    DWORD PTR [esi+0x10],0xc0000001
1002d9ce:	mov    ecx,DWORD PTR ds:0x10080c04
1002d9d4:	mov    eax,DWORD PTR [ecx]
1002d9d6:	call   DWORD PTR [eax+0x8]
1002d9d9:	lea    eax,[esi+0x4]
1002d9dc:	pop    esi
1002d9dd:	jmp    0x1002decc
1002d9e2:	mov    eax,DWORD PTR [esp+0x4]
1002d9e6:	inc    DWORD PTR [eax+0x10]
1002d9e9:	mov    eax,DWORD PTR [eax+0x10]
1002d9ec:	ret    0x4
1002d9ef:	mov    ecx,DWORD PTR [esp+0x4]
1002d9f3:	dec    DWORD PTR [ecx+0x10]
1002d9f6:	push   esi
1002d9f7:	mov    esi,DWORD PTR [ecx+0x10]
1002d9fa:	jne    0x1002da07
1002d9fc:	test   ecx,ecx
1002d9fe:	je     0x1002da07
1002da00:	mov    eax,DWORD PTR [ecx]
1002da02:	push   0x1
1002da04:	call   DWORD PTR [eax+0x34]
1002da07:	mov    eax,esi
1002da09:	pop    esi
1002da0a:	ret    0x4
1002da0d:	push   ebx
1002da0e:	push   DWORD PTR [esp+0xc]
1002da12:	mov    ebx,DWORD PTR [esp+0x14]
1002da16:	push   DWORD PTR [esp+0xc]
1002da1a:	mov    eax,0x10072bbc
1002da1f:	call   0x100104da
1002da24:	pop    ebx
1002da25:	ret    0xc
1002da28:	push   esi
1002da29:	mov    esi,ecx
1002da2b:	mov    DWORD PTR [esi],0x10072ef8
1002da31:	mov    DWORD PTR [esi+0x14],0xc0000001
1002da38:	mov    ecx,DWORD PTR ds:0x10080c04
1002da3e:	mov    eax,DWORD PTR [ecx]
1002da40:	call   DWORD PTR [eax+0x8]
1002da43:	add    esi,0x4
1002da46:	call   0x1002d59f
1002da4b:	pop    esi
1002da4c:	ret    
1002da4d:	mov    ecx,DWORD PTR [esp+0x4]
1002da51:	dec    DWORD PTR [ecx+0x14]
1002da54:	push   esi
1002da55:	mov    esi,DWORD PTR [ecx+0x14]
1002da58:	jne    0x1002da65
1002da5a:	test   ecx,ecx
1002da5c:	je     0x1002da65
1002da5e:	mov    eax,DWORD PTR [ecx]
1002da60:	push   0x1
1002da62:	call   DWORD PTR [eax+0x2c]
1002da65:	mov    eax,esi
1002da67:	pop    esi
1002da68:	ret    0x4
1002da6b:	push   ebx
1002da6c:	push   DWORD PTR [esp+0xc]
1002da70:	mov    ebx,DWORD PTR [esp+0x14]
1002da74:	push   DWORD PTR [esp+0xc]
1002da78:	mov    eax,0x10072b98
1002da7d:	call   0x100104da
1002da82:	pop    ebx
1002da83:	ret    0xc
1002da86:	push   esi
1002da87:	mov    esi,ecx
1002da89:	mov    DWORD PTR [esi],0x10072ec0
1002da8f:	mov    DWORD PTR [esi+0x4],0xc0000001
1002da96:	mov    ecx,DWORD PTR ds:0x10080c04
1002da9c:	mov    eax,DWORD PTR [ecx]
1002da9e:	call   DWORD PTR [eax+0x8]
1002daa1:	call   0x1002dc2e
1002daa6:	pop    esi
1002daa7:	ret    
1002daa8:	mov    ecx,DWORD PTR [esp+0x4]
1002daac:	dec    DWORD PTR [ecx+0x4]
1002daaf:	push   esi
1002dab0:	mov    esi,DWORD PTR [ecx+0x4]
1002dab3:	jne    0x1002dac0
1002dab5:	test   ecx,ecx
1002dab7:	je     0x1002dac0
1002dab9:	mov    eax,DWORD PTR [ecx]
1002dabb:	push   0x1
1002dabd:	call   DWORD PTR [eax+0x34]
1002dac0:	mov    eax,esi
1002dac2:	pop    esi
1002dac3:	ret    0x4
1002dac6:	push   ebx
1002dac7:	push   DWORD PTR [esp+0xc]
1002dacb:	mov    ebx,DWORD PTR [esp+0x14]
1002dacf:	push   DWORD PTR [esp+0xc]
1002dad3:	mov    eax,0x10072b74
1002dad8:	call   0x100104da
1002dadd:	pop    ebx
1002dade:	ret    0xc
1002dae1:	push   0x44
1002dae3:	mov    eax,0x10062103
1002dae8:	call   0x10059c75
1002daed:	mov    esi,DWORD PTR [ebp+0x8]
1002daf0:	xor    ebx,ebx
1002daf2:	mov    DWORD PTR [ebp-0x14],ebx
1002daf5:	mov    DWORD PTR [esi+0x4],ebx
1002daf8:	mov    DWORD PTR [esi+0x8],ebx
1002dafb:	mov    DWORD PTR [esi+0xc],ebx
1002dafe:	xor    edi,edi
1002db00:	inc    edi
1002db01:	mov    DWORD PTR [ebp-0x4],ebx
1002db04:	push   0x10072b40
1002db09:	mov    DWORD PTR [ebp-0x14],edi
1002db0c:	call   0x10043250
1002db11:	pop    ecx
1002db12:	mov    DWORD PTR [ebp-0x18],eax
1002db15:	mov    DWORD PTR [ebp-0x10],ebx
1002db18:	push   DWORD PTR [ebp-0x10]
1002db1b:	push   0x10072b40
1002db20:	push   DWORD PTR [ebp+0xc]
1002db23:	call   0x1000ca77
1002db28:	mov    ebx,eax
1002db2a:	cmp    ebx,0xffffffff
1002db2d:	jne    0x1002db35
1002db2f:	mov    eax,DWORD PTR [ebp+0xc]
1002db32:	mov    ebx,DWORD PTR [eax+0x14]
1002db35:	cmp    ebx,DWORD PTR [ebp-0x10]
1002db38:	jb     0x1002db89
1002db3a:	mov    eax,ebx
1002db3c:	sub    eax,DWORD PTR [ebp-0x10]
1002db3f:	push   eax
1002db40:	push   DWORD PTR [ebp-0x10]
1002db43:	lea    eax,[ebp-0x50]
1002db46:	push   DWORD PTR [ebp+0xc]
1002db49:	call   0x1000ca96
1002db4e:	lea    ecx,[ebp-0x34]
1002db51:	push   ecx
1002db52:	mov    ecx,eax
1002db54:	mov    DWORD PTR [ebp-0x4],edi
1002db57:	call   0x1002df6a
1002db5c:	pop    ecx
1002db5d:	push   eax
1002db5e:	mov    BYTE PTR [ebp-0x4],0x2
1002db62:	call   0x1000f97e
1002db67:	push   0x0
1002db69:	push   edi
1002db6a:	lea    ecx,[ebp-0x34]
1002db6d:	call   0x100012f4
1002db72:	push   0x0
1002db74:	push   edi
1002db75:	lea    ecx,[ebp-0x50]
1002db78:	mov    BYTE PTR [ebp-0x4],0x0
1002db7c:	call   0x100012f4
1002db81:	mov    eax,DWORD PTR [ebp-0x18]
1002db84:	add    ebx,eax
1002db86:	mov    DWORD PTR [ebp-0x10],ebx
1002db89:	mov    eax,DWORD PTR [ebp-0x10]
1002db8c:	mov    ecx,DWORD PTR [ebp+0xc]
1002db8f:	cmp    eax,DWORD PTR [ecx+0x14]
1002db92:	jb     0x1002db18
1002db94:	mov    eax,esi
1002db96:	call   0x10059d4d
1002db9b:	ret    
1002db9c:	push   esi
1002db9d:	mov    esi,DWORD PTR [eax]
1002db9f:	test   esi,esi
1002dba1:	je     0x1002dbc5
1002dba3:	mov    eax,DWORD PTR [esi+0x30]
1002dba6:	sub    eax,0x10
1002dba9:	call   0x10002060
1002dbae:	lea    eax,[esi+0x20]
1002dbb1:	call   0x1002bf55
1002dbb6:	lea    eax,[esi+0x10]
1002dbb9:	call   0x1002bf55
1002dbbe:	push   esi
1002dbbf:	call   0x100430d2
1002dbc4:	pop    ecx
1002dbc5:	pop    esi
1002dbc6:	ret    
1002dbc7:	lea    eax,[esi+0x8]
1002dbca:	push   eax
1002dbcb:	call   DWORD PTR ds:0x10066294
1002dbd1:	push   DWORD PTR [esi]
1002dbd3:	call   DWORD PTR ds:0x100662b4
1002dbd9:	ret    
1002dbda:	push   esi
1002dbdb:	mov    esi,ecx
1002dbdd:	call   0x1002d9be
1002dbe2:	test   BYTE PTR [esp+0x8],0x1
1002dbe7:	je     0x1002dbf0
1002dbe9:	push   esi
1002dbea:	call   0x100430d2
1002dbef:	pop    ecx
1002dbf0:	mov    eax,esi
1002dbf2:	pop    esi
1002dbf3:	ret    0x4
1002dbf6:	push   esi
1002dbf7:	mov    esi,ecx
1002dbf9:	call   0x1002da28
1002dbfe:	test   BYTE PTR [esp+0x8],0x1
1002dc03:	je     0x1002dc0c
1002dc05:	push   esi
1002dc06:	call   0x100430d2
1002dc0b:	pop    ecx
1002dc0c:	mov    eax,esi
1002dc0e:	pop    esi
1002dc0f:	ret    0x4
1002dc12:	push   esi
1002dc13:	mov    esi,ecx
1002dc15:	call   0x1002da86
1002dc1a:	test   BYTE PTR [esp+0x8],0x1
1002dc1f:	je     0x1002dc28
1002dc21:	push   esi
1002dc22:	call   0x100430d2
1002dc27:	pop    ecx
1002dc28:	mov    eax,esi
1002dc2a:	pop    esi
1002dc2b:	ret    0x4
1002dc2e:	push   edi
1002dc2f:	lea    edi,[esi+0x18]
1002dc32:	call   0x100025aa
1002dc37:	lea    edi,[esi+0x14]
1002dc3a:	call   0x100025aa
1002dc3f:	lea    edi,[esi+0x10]
1002dc42:	call   0x100025aa
1002dc47:	lea    edi,[esi+0xc]
1002dc4a:	call   0x100025aa
1002dc4f:	lea    edi,[esi+0x8]
1002dc52:	call   0x100025aa
1002dc57:	pop    edi
1002dc58:	ret    
1002dc59:	push   ebp
1002dc5a:	mov    ebp,esp
1002dc5c:	push   ecx
1002dc5d:	push   ebx
1002dc5e:	push   esi
1002dc5f:	mov    esi,eax
1002dc61:	mov    ebx,DWORD PTR [esi+0x4]
1002dc64:	push   edi
1002dc65:	xor    edi,edi
1002dc67:	cmp    ebx,edi
1002dc69:	je     0x1002dc97
1002dc6b:	mov    eax,DWORD PTR [esi+0x8]
1002dc6e:	mov    ecx,eax
1002dc70:	sub    ecx,ebx
1002dc72:	sar    ecx,0x4
1002dc75:	je     0x1002dc97
1002dc77:	cmp    ebx,eax
1002dc79:	jbe    0x1002dc80
1002dc7b:	call   0x100435f0
1002dc80:	cmp    DWORD PTR [ebp+0x10],edi
1002dc83:	je     0x1002dc8a
1002dc85:	cmp    DWORD PTR [ebp+0x10],esi
1002dc88:	je     0x1002dc8f
1002dc8a:	call   0x100435f0
1002dc8f:	mov    edi,DWORD PTR [ebp+0x14]
1002dc92:	sub    edi,ebx
1002dc94:	sar    edi,0x4
1002dc97:	push   DWORD PTR [ebp+0x14]
1002dc9a:	push   DWORD PTR [ebp+0x10]
1002dc9d:	push   DWORD PTR [ebp+0xc]
1002dca0:	push   esi
1002dca1:	call   0x1002e225
1002dca6:	mov    ebx,DWORD PTR [esi+0x4]
1002dca9:	cmp    ebx,DWORD PTR [esi+0x8]
1002dcac:	jbe    0x1002dcb3
1002dcae:	call   0x100435f0
1002dcb3:	shl    edi,0x4
1002dcb6:	add    edi,ebx
1002dcb8:	cmp    edi,DWORD PTR [esi+0x8]
1002dcbb:	mov    DWORD PTR [ebp+0x14],ebx
1002dcbe:	ja     0x1002dcc5
1002dcc0:	cmp    edi,DWORD PTR [esi+0x4]
1002dcc3:	jae    0x1002dcca
1002dcc5:	call   0x100435f0
1002dcca:	mov    eax,DWORD PTR [ebp+0x8]
1002dccd:	mov    DWORD PTR [eax+0x4],edi
1002dcd0:	pop    edi
1002dcd1:	mov    DWORD PTR [eax],esi
1002dcd3:	pop    esi
1002dcd4:	pop    ebx
1002dcd5:	leave  
1002dcd6:	ret    0x10
1002dcd9:	push   ebp
1002dcda:	mov    ebp,esp
1002dcdc:	push   ecx
1002dcdd:	push   edi
1002dcde:	xor    eax,eax
1002dce0:	lea    edi,[ebp-0x4]
1002dce3:	stos   BYTE PTR es:[edi],al
1002dce4:	push   DWORD PTR [ebp-0x4]
1002dce7:	push   DWORD PTR [ebp+0xc]
1002dcea:	push   DWORD PTR [ebp+0x10]
1002dced:	push   DWORD PTR [ebp+0xc]
1002dcf0:	push   DWORD PTR [ebp+0x8]
1002dcf3:	call   0x1002f2f7
1002dcf8:	mov    eax,DWORD PTR [ebp+0xc]
1002dcfb:	add    esp,0x14
1002dcfe:	shl    eax,0x4
1002dd01:	add    eax,DWORD PTR [ebp+0x8]
1002dd04:	pop    edi
1002dd05:	leave  
1002dd06:	ret    0xc
1002dd09:	push   ebp
1002dd0a:	mov    ebp,esp
1002dd0c:	sub    esp,0x14
1002dd0f:	push   ebx
1002dd10:	mov    ebx,eax
1002dd12:	xor    eax,eax
1002dd14:	cmp    DWORD PTR [ebx+0x8],eax
1002dd17:	push   esi
1002dd18:	push   edi
1002dd19:	mov    DWORD PTR [ebp-0x8],eax
1002dd1c:	mov    DWORD PTR [ebp-0x4],eax
1002dd1f:	jne    0x1002dd3b
1002dd21:	mov    ecx,DWORD PTR [ebx+0x4]
1002dd24:	push   DWORD PTR [ebp+0xc]
1002dd27:	push   0x1
1002dd29:	mov    esi,ebx
1002dd2b:	push   DWORD PTR [ebp+0x8]
1002dd2e:	call   0x1002e5ab
1002dd33:	mov    eax,DWORD PTR [ebp+0x8]
1002dd36:	jmp    0x1002de86
1002dd3b:	mov    eax,DWORD PTR [ebx+0x4]
1002dd3e:	mov    eax,DWORD PTR [eax]
1002dd40:	lea    edi,[ebp-0x10]
1002dd43:	lea    esi,[ebp+0x10]
1002dd46:	mov    DWORD PTR [ebp-0xc],eax
1002dd49:	mov    DWORD PTR [ebp-0x10],ebx
1002dd4c:	call   0x10004b10
1002dd51:	test   al,al
1002dd53:	je     0x1002dd6f
1002dd55:	mov    esi,DWORD PTR [ebp+0x14]
1002dd58:	push   DWORD PTR [ebp+0xc]
1002dd5b:	lea    eax,[esi+0x10]
1002dd5e:	call   0x1002df01
1002dd63:	test   al,al
1002dd65:	je     0x1002de6b
1002dd6b:	mov    ecx,esi
1002dd6d:	jmp    0x1002dd24
1002dd6f:	mov    eax,DWORD PTR [ebx+0x4]
1002dd72:	lea    edi,[ebp-0x10]
1002dd75:	lea    esi,[ebp+0x10]
1002dd78:	mov    DWORD PTR [ebp-0xc],eax
1002dd7b:	mov    DWORD PTR [ebp-0x10],ebx
1002dd7e:	call   0x10004b10
1002dd83:	test   al,al
1002dd85:	je     0x1002ddb1
1002dd87:	mov    eax,DWORD PTR [ebx+0x4]
1002dd8a:	mov    eax,DWORD PTR [eax+0x8]
1002dd8d:	add    eax,0x10
1002dd90:	push   eax
1002dd91:	mov    eax,DWORD PTR [ebp+0xc]
1002dd94:	call   0x1002df01
1002dd99:	test   al,al
1002dd9b:	je     0x1002de6b
1002dda1:	push   DWORD PTR [ebp+0xc]
1002dda4:	mov    eax,DWORD PTR [ebx+0x4]
1002dda7:	mov    ecx,DWORD PTR [eax+0x8]
1002ddaa:	push   0x0
1002ddac:	jmp    0x1002dd29
1002ddb1:	mov    edi,DWORD PTR [ebp+0x14]
1002ddb4:	push   DWORD PTR [ebp+0xc]
1002ddb7:	lea    eax,[edi+0x10]
1002ddba:	call   0x1002df01
1002ddbf:	test   al,al
1002ddc1:	je     0x1002de08
1002ddc3:	mov    eax,DWORD PTR [ebp+0x10]
1002ddc6:	lea    esi,[ebp-0x8]
1002ddc9:	mov    DWORD PTR [ebp-0x8],eax
1002ddcc:	mov    DWORD PTR [ebp-0x4],edi
1002ddcf:	call   0x1002e6f8
1002ddd4:	mov    eax,DWORD PTR [eax+0x4]
1002ddd7:	add    eax,0x10
1002ddda:	push   eax
1002dddb:	mov    eax,DWORD PTR [ebp+0xc]
1002ddde:	call   0x1002df01
1002dde3:	test   al,al
1002dde5:	je     0x1002de08
1002dde7:	mov    ecx,DWORD PTR [ebp-0x4]
1002ddea:	mov    eax,DWORD PTR [ecx+0x8]
1002dded:	cmp    BYTE PTR [eax+0x29],0x0
1002ddf1:	push   DWORD PTR [ebp+0xc]
1002ddf4:	mov    esi,ebx
1002ddf6:	je     0x1002ddff
1002ddf8:	push   0x0
1002ddfa:	jmp    0x1002dd2b
1002ddff:	push   0x1
1002de01:	mov    ecx,edi
1002de03:	jmp    0x1002dd2b
1002de08:	lea    eax,[edi+0x10]
1002de0b:	push   eax
1002de0c:	mov    eax,DWORD PTR [ebp+0xc]
1002de0f:	call   0x1002df01
1002de14:	test   al,al
1002de16:	je     0x1002de6b
1002de18:	mov    eax,DWORD PTR [ebp+0x10]
1002de1b:	mov    DWORD PTR [ebp-0x8],eax
1002de1e:	mov    eax,DWORD PTR [ebx+0x4]
1002de21:	lea    esi,[ebp-0x8]
1002de24:	mov    DWORD PTR [ebp-0x4],edi
1002de27:	mov    DWORD PTR [ebp-0xc],eax
1002de2a:	mov    DWORD PTR [ebp-0x10],ebx
1002de2d:	call   0x1002df1d
1002de32:	lea    edi,[ebp-0x10]
1002de35:	call   0x10004b10
1002de3a:	test   al,al
1002de3c:	jne    0x1002de50
1002de3e:	mov    eax,DWORD PTR [ebp-0x4]
1002de41:	push   DWORD PTR [ebp+0xc]
1002de44:	add    eax,0x10
1002de47:	call   0x1002df01
1002de4c:	test   al,al
1002de4e:	je     0x1002de6b
1002de50:	mov    ecx,DWORD PTR [ebp+0x14]
1002de53:	mov    eax,DWORD PTR [ecx+0x8]
1002de56:	cmp    BYTE PTR [eax+0x29],0x0
1002de5a:	push   DWORD PTR [ebp+0xc]
1002de5d:	mov    esi,ebx
1002de5f:	jne    0x1002ddf8
1002de61:	mov    ecx,DWORD PTR [ebp-0x4]
1002de64:	push   0x1
1002de66:	jmp    0x1002dd2b
1002de6b:	push   DWORD PTR [ebp+0xc]
1002de6e:	push   ebx
1002de6f:	lea    ebx,[ebp-0x14]
1002de72:	call   0x1002e43f
1002de77:	mov    edx,DWORD PTR [eax]
1002de79:	mov    ecx,DWORD PTR [ebp+0x8]
1002de7c:	mov    DWORD PTR [ecx],edx
1002de7e:	mov    eax,DWORD PTR [eax+0x4]
1002de81:	mov    DWORD PTR [ecx+0x4],eax
1002de84:	mov    eax,ecx
1002de86:	pop    edi
1002de87:	pop    esi
1002de88:	pop    ebx
1002de89:	leave  
1002de8a:	ret    0x10
1002de8d:	push   ebp
1002de8e:	mov    ebp,esp
1002de90:	push   ecx
1002de91:	mov    eax,DWORD PTR [edi+0x4]
1002de94:	push   esi
1002de95:	mov    esi,DWORD PTR [eax+0x4]
1002de98:	mov    DWORD PTR [ebp-0x4],eax
1002de9b:	jmp    0x1002deb7
1002de9d:	lea    eax,[esi+0x10]
1002dea0:	push   eax
1002dea1:	mov    eax,DWORD PTR [ebp+0x8]
1002dea4:	call   0x1002df01
1002dea9:	test   al,al
1002deab:	je     0x1002deb2
1002dead:	mov    esi,DWORD PTR [esi+0x8]
1002deb0:	jmp    0x1002deb7
1002deb2:	mov    DWORD PTR [ebp-0x4],esi
1002deb5:	mov    esi,DWORD PTR [esi]
1002deb7:	cmp    BYTE PTR [esi+0x29],0x0
1002debb:	je     0x1002de9d
1002debd:	mov    eax,DWORD PTR [ebp-0x4]
1002dec0:	mov    DWORD PTR [ebx+0x4],eax
1002dec3:	mov    DWORD PTR [ebx],edi
1002dec5:	mov    eax,ebx
1002dec7:	pop    esi
1002dec8:	leave  
1002dec9:	ret    0x4
1002decc:	push   ebp
1002decd:	mov    ebp,esp
1002decf:	and    esp,0xfffffff8
1002ded2:	sub    esp,0xc
1002ded5:	push   ebx
1002ded6:	mov    ebx,eax
1002ded8:	mov    eax,DWORD PTR [ebx+0x4]
1002dedb:	mov    ecx,DWORD PTR [eax]
1002dedd:	push   eax
1002dede:	push   ebx
1002dedf:	push   ecx
1002dee0:	push   ebx
1002dee1:	lea    eax,[esp+0x18]
1002dee5:	push   eax
1002dee6:	call   0x1002e501
1002deeb:	push   DWORD PTR [ebx+0x4]
1002deee:	call   0x100430d2
1002def3:	and    DWORD PTR [ebx+0x4],0x0
1002def7:	and    DWORD PTR [ebx+0x8],0x0
1002defb:	pop    ecx
1002defc:	pop    ebx
1002defd:	mov    esp,ebp
1002deff:	pop    ebp
1002df00:	ret    
1002df01:	push   0x0
1002df03:	push   0x400
1002df08:	push   DWORD PTR [eax]
1002df0a:	mov    eax,DWORD PTR [esp+0x10]
1002df0e:	push   DWORD PTR [eax]
1002df10:	call   0x10056d7a
1002df15:	neg    eax
1002df17:	sbb    eax,eax
1002df19:	inc    eax
1002df1a:	ret    0x4
1002df1d:	push   ebx
1002df1e:	xor    ebx,ebx
1002df20:	cmp    DWORD PTR [esi],ebx
1002df22:	jne    0x1002df29
1002df24:	call   0x100435f0
1002df29:	mov    eax,DWORD PTR [esi+0x4]
1002df2c:	cmp    BYTE PTR [eax+0x29],bl
1002df2f:	je     0x1002df38
1002df31:	call   0x100435f0
1002df36:	jmp    0x1002df66
1002df38:	mov    ecx,DWORD PTR [eax+0x8]
1002df3b:	cmp    BYTE PTR [ecx+0x29],bl
1002df3e:	jne    0x1002df5b
1002df40:	jmp    0x1002df44
1002df42:	mov    ecx,eax
1002df44:	mov    eax,DWORD PTR [ecx]
1002df46:	cmp    BYTE PTR [eax+0x29],bl
1002df49:	je     0x1002df42
1002df4b:	mov    DWORD PTR [esi+0x4],ecx
1002df4e:	jmp    0x1002df66
1002df50:	mov    ecx,DWORD PTR [esi+0x4]
1002df53:	cmp    ecx,DWORD PTR [eax+0x8]
1002df56:	jne    0x1002df63
1002df58:	mov    DWORD PTR [esi+0x4],eax
1002df5b:	mov    eax,DWORD PTR [eax+0x4]
1002df5e:	cmp    BYTE PTR [eax+0x29],bl
1002df61:	je     0x1002df50
1002df63:	mov    DWORD PTR [esi+0x4],eax
1002df66:	mov    eax,esi
1002df68:	pop    ebx
1002df69:	ret    
1002df6a:	push   0x20
1002df6c:	mov    eax,0x100601cd
1002df71:	call   0x10059c75
1002df76:	mov    ebx,ecx
1002df78:	and    DWORD PTR [ebp-0x10],0x0
1002df7c:	call   0x1000f9dd
1002df81:	mov    esi,eax
1002df83:	call   0x1000fa45
1002df88:	cmp    eax,0xffffffff
1002df8b:	jne    0x1002df93
1002df8d:	mov    eax,DWORD PTR [ebx+0x14]
1002df90:	dec    eax
1002df91:	jmp    0x1002df96
1002df93:	sub    eax,esi
1002df95:	inc    eax
1002df96:	push   eax
1002df97:	mov    eax,esi
1002df99:	inc    eax
1002df9a:	neg    eax
1002df9c:	sbb    eax,eax
1002df9e:	and    eax,esi
1002dfa0:	push   eax
1002dfa1:	push   ebx
1002dfa2:	lea    eax,[ebp-0x2c]
1002dfa5:	call   0x1000ca96
1002dfaa:	and    DWORD PTR [ebp-0x4],0x0
1002dfae:	push   eax
1002dfaf:	push   DWORD PTR [ebp+0x8]
1002dfb2:	call   0x1000fd77
1002dfb7:	pop    ecx
1002dfb8:	pop    ecx
1002dfb9:	push   0x0
1002dfbb:	push   0x1
1002dfbd:	lea    ecx,[ebp-0x2c]
1002dfc0:	call   0x100012f4
1002dfc5:	mov    eax,DWORD PTR [ebp+0x8]
1002dfc8:	call   0x10059d4d
1002dfcd:	ret    
1002dfce:	cmp    DWORD PTR [esi],0x0
1002dfd1:	mov    eax,DWORD PTR [esi]
1002dfd3:	mov    DWORD PTR [edi],eax
1002dfd5:	mov    eax,DWORD PTR [esi+0x4]
1002dfd8:	mov    DWORD PTR [edi+0x4],eax
1002dfdb:	jne    0x1002dfe2
1002dfdd:	call   0x100435f0
1002dfe2:	mov    eax,DWORD PTR [esi]
1002dfe4:	mov    ecx,DWORD PTR [esi+0x4]
1002dfe7:	cmp    ecx,DWORD PTR [eax+0x8]
1002dfea:	jb     0x1002dff1
1002dfec:	call   0x100435f0
1002dff1:	add    DWORD PTR [esi+0x4],0x10
1002dff5:	mov    eax,edi
1002dff7:	ret    
1002dff8:	mov    eax,DWORD PTR [esi]
1002dffa:	test   eax,eax
1002dffc:	je     0x1002e002
1002dffe:	cmp    eax,DWORD PTR [edi]
1002e000:	je     0x1002e007
1002e002:	call   0x100435f0
1002e007:	mov    eax,DWORD PTR [esi+0x4]
1002e00a:	xor    ecx,ecx
1002e00c:	cmp    eax,DWORD PTR [edi+0x4]
1002e00f:	setne  cl
1002e012:	mov    al,cl
1002e014:	ret    
1002e015:	push   esi
1002e016:	mov    esi,ecx
1002e018:	mov    DWORD PTR [esi],0x10072f9c
1002e01e:	mov    DWORD PTR [esi+0x14],0xc0000001
1002e025:	mov    ecx,DWORD PTR ds:0x10080c04
1002e02b:	mov    eax,DWORD PTR [ecx]
1002e02d:	call   DWORD PTR [eax+0x8]
1002e030:	mov    esi,DWORD PTR [esi+0x4]
1002e033:	test   esi,esi
1002e035:	je     0x1002e03d
1002e037:	mov    eax,DWORD PTR [esi]
1002e039:	push   esi
1002e03a:	call   DWORD PTR [eax+0x8]
1002e03d:	pop    esi
1002e03e:	ret    
1002e03f:	push   esi
1002e040:	push   edi
1002e041:	mov    edi,eax
1002e043:	lea    esi,[ebx+0x4]
1002e046:	cmp    DWORD PTR [esi],edi
1002e048:	je     0x1002e04f
1002e04a:	call   0x10007617
1002e04f:	mov    esi,DWORD PTR [esp+0xc]
1002e053:	mov    DWORD PTR [ebx+0x8],esi
1002e056:	mov    edi,DWORD PTR [esi+0x4]
1002e059:	cmp    edi,DWORD PTR [esi+0x8]
1002e05c:	jbe    0x1002e063
1002e05e:	call   0x100435f0
1002e063:	mov    DWORD PTR [ebx+0x10],edi
1002e066:	pop    edi
1002e067:	mov    DWORD PTR [ebx+0xc],esi
1002e06a:	xor    eax,eax
1002e06c:	pop    esi
1002e06d:	ret    0x4
1002e070:	push   esi
1002e071:	push   edi
1002e072:	mov    edi,DWORD PTR [esp+0xc]
1002e076:	mov    esi,DWORD PTR [edi+0x8]
1002e079:	test   esi,esi
1002e07b:	jne    0x1002e084
1002e07d:	mov    eax,0x80004005
1002e082:	jmp    0x1002e09b
1002e084:	push   ebx
1002e085:	mov    ebx,DWORD PTR [esi+0x4]
1002e088:	cmp    ebx,DWORD PTR [esi+0x8]
1002e08b:	jbe    0x1002e092
1002e08d:	call   0x100435f0
1002e092:	mov    DWORD PTR [edi+0x10],ebx
1002e095:	mov    DWORD PTR [edi+0xc],esi
1002e098:	xor    eax,eax
1002e09a:	pop    ebx
1002e09b:	pop    edi
1002e09c:	pop    esi
1002e09d:	ret    0x4
1002e0a0:	push   esi
1002e0a1:	mov    esi,ecx
1002e0a3:	mov    DWORD PTR [esi],0x10072fbc
1002e0a9:	mov    DWORD PTR [esi+0x4],0xc0000001
1002e0b0:	mov    ecx,DWORD PTR ds:0x10080c04
1002e0b6:	mov    eax,DWORD PTR [ecx]
1002e0b8:	call   DWORD PTR [eax+0x8]
1002e0bb:	lea    eax,[esi+0x8]
1002e0be:	pop    esi
1002e0bf:	jmp    0x1002decc
1002e0c4:	mov    ecx,DWORD PTR [esp+0x4]
1002e0c8:	dec    DWORD PTR [ecx+0x4]
1002e0cb:	push   esi
1002e0cc:	mov    esi,DWORD PTR [ecx+0x4]
1002e0cf:	jne    0x1002e0dc
1002e0d1:	test   ecx,ecx
1002e0d3:	je     0x1002e0dc
1002e0d5:	mov    eax,DWORD PTR [ecx]
1002e0d7:	push   0x1
1002e0d9:	call   DWORD PTR [eax+0xc]
1002e0dc:	mov    eax,esi
1002e0de:	pop    esi
1002e0df:	ret    0x4
1002e0e2:	push   ebx
1002e0e3:	push   DWORD PTR [esp+0xc]
1002e0e7:	mov    ebx,DWORD PTR [esp+0x14]
1002e0eb:	push   DWORD PTR [esp+0xc]
1002e0ef:	mov    eax,0x10072e80
1002e0f4:	call   0x100104da
1002e0f9:	pop    ebx
1002e0fa:	ret    0xc
1002e0fd:	push   esi
1002e0fe:	mov    esi,ecx
1002e100:	mov    DWORD PTR [esi],0x10072fcc
1002e106:	mov    DWORD PTR [esi+0x14],0xc0000001
1002e10d:	mov    ecx,DWORD PTR ds:0x10080c04
1002e113:	mov    eax,DWORD PTR [ecx]
1002e115:	call   DWORD PTR [eax+0x8]
1002e118:	mov    esi,DWORD PTR [esi+0x4]
1002e11b:	test   esi,esi
1002e11d:	je     0x1002e125
1002e11f:	mov    eax,DWORD PTR [esi]
1002e121:	push   esi
1002e122:	call   DWORD PTR [eax+0x8]
1002e125:	pop    esi
1002e126:	ret    
1002e127:	mov    eax,DWORD PTR [esp+0x4]
1002e12b:	inc    DWORD PTR [eax+0x14]
1002e12e:	mov    eax,DWORD PTR [eax+0x14]
1002e131:	ret    0x4
1002e134:	mov    ecx,DWORD PTR [esp+0x4]
1002e138:	dec    DWORD PTR [ecx+0x14]
1002e13b:	push   esi
1002e13c:	mov    esi,DWORD PTR [ecx+0x14]
1002e13f:	jne    0x1002e14c
1002e141:	test   ecx,ecx
1002e143:	je     0x1002e14c
1002e145:	mov    eax,DWORD PTR [ecx]
1002e147:	push   0x1
1002e149:	call   DWORD PTR [eax+0x1c]
1002e14c:	mov    eax,esi
1002e14e:	pop    esi
1002e14f:	ret    0x4
1002e152:	push   ebx
1002e153:	push   DWORD PTR [esp+0xc]
1002e157:	mov    ebx,DWORD PTR [esp+0x14]
1002e15b:	push   DWORD PTR [esp+0xc]
1002e15f:	mov    eax,0x10072e98
1002e164:	call   0x100104da
1002e169:	pop    ebx
1002e16a:	ret    0xc
1002e16d:	push   esi
1002e16e:	push   edi
1002e16f:	mov    edi,eax
1002e171:	lea    esi,[ebx+0x4]
1002e174:	cmp    DWORD PTR [esi],edi
1002e176:	je     0x1002e17d
1002e178:	call   0x10007617
1002e17d:	mov    eax,DWORD PTR [esp+0xc]
1002e181:	mov    DWORD PTR [ebx+0x8],eax
1002e184:	mov    ecx,DWORD PTR [eax+0x4]
1002e187:	mov    ecx,DWORD PTR [ecx]
1002e189:	pop    edi
1002e18a:	mov    DWORD PTR [ebx+0xc],eax
1002e18d:	mov    DWORD PTR [ebx+0x10],ecx
1002e190:	xor    eax,eax
1002e192:	pop    esi
1002e193:	ret    0x4
1002e196:	mov    ecx,DWORD PTR [esp+0x4]
1002e19a:	mov    eax,DWORD PTR [ecx+0x8]
1002e19d:	test   eax,eax
1002e19f:	jne    0x1002e1a8
1002e1a1:	mov    eax,0x80004005
1002e1a6:	jmp    0x1002e1b5
1002e1a8:	mov    edx,DWORD PTR [eax+0x4]
1002e1ab:	mov    edx,DWORD PTR [edx]
1002e1ad:	mov    DWORD PTR [ecx+0xc],eax
1002e1b0:	mov    DWORD PTR [ecx+0x10],edx
1002e1b3:	xor    eax,eax
1002e1b5:	ret    0x4
1002e1b8:	push   esi
1002e1b9:	mov    esi,ecx
1002e1bb:	call   0x1002e015
1002e1c0:	test   BYTE PTR [esp+0x8],0x1
1002e1c5:	je     0x1002e1ce
1002e1c7:	push   esi
1002e1c8:	call   0x100430d2
1002e1cd:	pop    ecx
1002e1ce:	mov    eax,esi
1002e1d0:	pop    esi
1002e1d1:	ret    0x4
1002e1d4:	push   esi
1002e1d5:	mov    esi,ecx
1002e1d7:	call   0x1002e0a0
1002e1dc:	test   BYTE PTR [esp+0x8],0x1
1002e1e1:	je     0x1002e1ea
1002e1e3:	push   esi
1002e1e4:	call   0x100430d2
1002e1e9:	pop    ecx
1002e1ea:	mov    eax,esi
1002e1ec:	pop    esi
1002e1ed:	ret    0x4
1002e1f0:	push   esi
1002e1f1:	mov    esi,ecx
1002e1f3:	call   0x1002e0fd
1002e1f8:	test   BYTE PTR [esp+0x8],0x1
1002e1fd:	je     0x1002e206
1002e1ff:	push   esi
1002e200:	call   0x100430d2
1002e205:	pop    ecx
1002e206:	mov    eax,esi
1002e208:	pop    esi
1002e209:	ret    0x4
1002e20c:	push   esi
1002e20d:	mov    esi,eax
1002e20f:	jmp    0x1002e21b
1002e211:	push   esi
1002e212:	call   DWORD PTR ds:0x10066294
1002e218:	add    esi,0x10
1002e21b:	cmp    esi,DWORD PTR [esp+0x8]
1002e21f:	jne    0x1002e211
1002e221:	pop    esi
1002e222:	ret    0x4
1002e225:	push   0x14
1002e227:	mov    eax,0x100601aa
1002e22c:	call   0x10059ca8
1002e231:	mov    edi,DWORD PTR [ebp+0x8]
1002e234:	push   DWORD PTR [ebp+0xc]
1002e237:	xor    ebx,ebx
1002e239:	lea    esi,[ebp-0x20]
1002e23c:	mov    WORD PTR [ebp-0x20],bx
1002e240:	call   0x1002b0c4
1002e245:	mov    DWORD PTR [ebp-0x4],ebx
1002e248:	mov    ecx,DWORD PTR [edi+0x4]
1002e24b:	cmp    ecx,ebx
1002e24d:	je     0x1002e257
1002e24f:	mov    ebx,DWORD PTR [edi+0xc]
1002e252:	sub    ebx,ecx
1002e254:	sar    ebx,0x4
1002e257:	test   ecx,ecx
1002e259:	jne    0x1002e25f
1002e25b:	xor    eax,eax
1002e25d:	jmp    0x1002e267
1002e25f:	mov    eax,DWORD PTR [edi+0x8]
1002e262:	sub    eax,ecx
1002e264:	sar    eax,0x4
1002e267:	mov    edx,0xfffffff
1002e26c:	mov    esi,edx
1002e26e:	sub    esi,eax
1002e270:	mov    eax,esi
1002e272:	xor    esi,esi
1002e274:	inc    esi
1002e275:	cmp    eax,esi
1002e277:	jae    0x1002e27e
1002e279:	call   0x100120ac
1002e27e:	test   ecx,ecx
1002e280:	jne    0x1002e286
1002e282:	xor    eax,eax
1002e284:	jmp    0x1002e28e
1002e286:	mov    eax,DWORD PTR [edi+0x8]
1002e289:	sub    eax,ecx
1002e28b:	sar    eax,0x4
1002e28e:	inc    eax
1002e28f:	cmp    ebx,eax
1002e291:	jae    0x1002e36a
1002e297:	mov    eax,ebx
1002e299:	shr    eax,1
1002e29b:	sub    edx,eax
1002e29d:	cmp    edx,ebx
1002e29f:	jae    0x1002e2a5
1002e2a1:	xor    ebx,ebx
1002e2a3:	jmp    0x1002e2a7
1002e2a5:	add    ebx,eax
1002e2a7:	test   ecx,ecx
1002e2a9:	jne    0x1002e2af
1002e2ab:	xor    eax,eax
1002e2ad:	jmp    0x1002e2b7
1002e2af:	mov    eax,DWORD PTR [edi+0x8]
1002e2b2:	sub    eax,ecx
1002e2b4:	sar    eax,0x4
1002e2b7:	inc    eax
1002e2b8:	cmp    ebx,eax
1002e2ba:	jae    0x1002e2cd
1002e2bc:	test   ecx,ecx
1002e2be:	jne    0x1002e2c4
1002e2c0:	xor    ebx,ebx
1002e2c2:	jmp    0x1002e2cc
1002e2c4:	mov    ebx,DWORD PTR [edi+0x8]
1002e2c7:	sub    ebx,ecx
1002e2c9:	sar    ebx,0x4
1002e2cc:	inc    ebx
1002e2cd:	mov    ecx,ebx
1002e2cf:	call   0x1000fc79
1002e2d4:	push   eax
1002e2d5:	push   DWORD PTR [ebp+0x14]
1002e2d8:	mov    BYTE PTR [ebp-0x4],0x1
1002e2dc:	mov    ecx,DWORD PTR [edi+0x4]
1002e2df:	mov    DWORD PTR [ebp+0xc],eax
1002e2e2:	mov    DWORD PTR [ebp+0x8],eax
1002e2e5:	call   0x1002f1f8
1002e2ea:	lea    ecx,[ebp-0x20]
1002e2ed:	push   ecx
1002e2ee:	push   esi
1002e2ef:	push   eax
1002e2f0:	mov    DWORD PTR [ebp+0x8],eax
1002e2f3:	call   0x1002dcd9
1002e2f8:	mov    ecx,DWORD PTR [ebp+0x14]
1002e2fb:	push   eax
1002e2fc:	push   DWORD PTR [edi+0x8]
1002e2ff:	mov    DWORD PTR [ebp+0x8],eax
1002e302:	call   0x1002f1f8
1002e307:	mov    eax,DWORD PTR [edi+0x4]
1002e30a:	test   eax,eax
1002e30c:	jne    0x1002e312
1002e30e:	xor    ecx,ecx
1002e310:	jmp    0x1002e31a
1002e312:	mov    ecx,DWORD PTR [edi+0x8]
1002e315:	sub    ecx,eax
1002e317:	sar    ecx,0x4
1002e31a:	test   eax,eax
1002e31c:	lea    esi,[ecx+0x1]
1002e31f:	je     0x1002e332
1002e321:	push   DWORD PTR [edi+0x8]
1002e324:	call   0x1002e20c
1002e329:	push   DWORD PTR [edi+0x4]
1002e32c:	call   0x100430d2
1002e331:	pop    ecx
1002e332:	mov    eax,DWORD PTR [ebp+0xc]
1002e335:	shl    ebx,0x4
1002e338:	add    ebx,eax
1002e33a:	shl    esi,0x4
1002e33d:	add    esi,eax
1002e33f:	mov    DWORD PTR [edi+0xc],ebx
1002e342:	mov    DWORD PTR [edi+0x8],esi
1002e345:	mov    DWORD PTR [edi+0x4],eax
1002e348:	jmp    0x1002e42d
1002e34d:	push   DWORD PTR [ebp+0x8]
1002e350:	mov    eax,DWORD PTR [ebp+0xc]
1002e353:	call   0x1002e20c
1002e358:	push   DWORD PTR [ebp+0xc]
1002e35b:	call   0x100430d2
1002e360:	pop    ecx
1002e361:	push   0x0
1002e363:	push   0x0
1002e365:	call   0x10047c54
1002e36a:	mov    eax,DWORD PTR [edi+0x8]
1002e36d:	mov    ebx,DWORD PTR [ebp+0x14]
1002e370:	mov    ecx,eax
1002e372:	sub    ecx,ebx
1002e374:	sar    ecx,0x4
1002e377:	cmp    ecx,esi
1002e379:	jae    0x1002e3e6
1002e37b:	lea    ecx,[ebx+0x10]
1002e37e:	push   ecx
1002e37f:	push   eax
1002e380:	mov    ecx,ebx
1002e382:	call   0x1002f1f8
1002e387:	mov    BYTE PTR [ebp-0x4],0x3
1002e38b:	mov    eax,DWORD PTR [edi+0x8]
1002e38e:	lea    ecx,[ebp-0x20]
1002e391:	push   ecx
1002e392:	mov    ecx,eax
1002e394:	sub    ecx,ebx
1002e396:	sar    ecx,0x4
1002e399:	sub    esi,ecx
1002e39b:	push   esi
1002e39c:	push   eax
1002e39d:	call   0x1002dcd9
1002e3a2:	and    DWORD PTR [ebp-0x4],0x0
1002e3a6:	add    DWORD PTR [edi+0x8],0x10
1002e3aa:	mov    edi,DWORD PTR [edi+0x8]
1002e3ad:	add    edi,0xfffffff0
1002e3b0:	cmp    ebx,edi
1002e3b2:	mov    esi,ebx
1002e3b4:	je     0x1002e42d
1002e3b6:	lea    eax,[ebp-0x20]
1002e3b9:	cmp    esi,eax
1002e3bb:	je     0x1002e3c3
1002e3bd:	push   eax
1002e3be:	call   0x1002b0c4
1002e3c3:	add    esi,0x10
1002e3c6:	cmp    esi,edi
1002e3c8:	jne    0x1002e3b6
1002e3ca:	jmp    0x1002e42d
1002e3cc:	mov    eax,DWORD PTR [ebp+0x8]
1002e3cf:	mov    eax,DWORD PTR [eax+0x8]
1002e3d2:	add    eax,0x10
1002e3d5:	push   eax
1002e3d6:	mov    eax,DWORD PTR [ebp+0x14]
1002e3d9:	add    eax,0x10
1002e3dc:	call   0x1002e20c
1002e3e1:	jmp    0x1002e361
1002e3e6:	lea    esi,[eax-0x10]
1002e3e9:	push   eax
1002e3ea:	push   eax
1002e3eb:	mov    ecx,esi
1002e3ed:	call   0x1002f1f8
1002e3f2:	mov    DWORD PTR [edi+0x8],eax
1002e3f5:	mov    edi,esi
1002e3f7:	cmp    ebx,edi
1002e3f9:	je     0x1002e412
1002e3fb:	lea    esi,[edi+0x10]
1002e3fe:	sub    edi,0x10
1002e401:	sub    esi,0x10
1002e404:	cmp    esi,edi
1002e406:	je     0x1002e40e
1002e408:	push   edi
1002e409:	call   0x1002b0c4
1002e40e:	cmp    edi,ebx
1002e410:	jne    0x1002e3fe
1002e412:	lea    edi,[ebx+0x10]
1002e415:	jmp    0x1002e429
1002e417:	lea    eax,[ebp-0x20]
1002e41a:	cmp    ebx,eax
1002e41c:	je     0x1002e426
1002e41e:	push   eax
1002e41f:	mov    esi,ebx
1002e421:	call   0x1002b0c4
1002e426:	add    ebx,0x10
1002e429:	cmp    ebx,edi
1002e42b:	jne    0x1002e417
1002e42d:	lea    eax,[ebp-0x20]
1002e430:	push   eax
1002e431:	call   DWORD PTR ds:0x10066294
1002e437:	call   0x10059d4d
1002e43c:	ret    0x10
1002e43f:	push   ebp
1002e440:	mov    ebp,esp
1002e442:	sub    esp,0x18
1002e445:	push   esi
1002e446:	mov    esi,DWORD PTR [ebp+0x8]
1002e449:	mov    eax,DWORD PTR [esi+0x4]
1002e44c:	push   edi
1002e44d:	mov    edi,DWORD PTR [eax+0x4]
1002e450:	mov    DWORD PTR [ebp-0x4],eax
1002e453:	mov    al,0x1
1002e455:	mov    BYTE PTR [ebp-0x8],al
1002e458:	jmp    0x1002e476
1002e45a:	push   DWORD PTR [ebp+0xc]
1002e45d:	lea    eax,[edi+0x10]
1002e460:	mov    DWORD PTR [ebp-0x4],edi
1002e463:	call   0x1002df01
1002e468:	test   al,al
1002e46a:	mov    BYTE PTR [ebp-0x8],al
1002e46d:	je     0x1002e473
1002e46f:	mov    edi,DWORD PTR [edi]
1002e471:	jmp    0x1002e476
1002e473:	mov    edi,DWORD PTR [edi+0x8]
1002e476:	cmp    BYTE PTR [edi+0x29],0x0
1002e47a:	je     0x1002e45a
1002e47c:	test   al,al
1002e47e:	mov    edi,DWORD PTR [ebp-0x4]
1002e481:	mov    DWORD PTR [ebp-0xc],edi
1002e484:	mov    DWORD PTR [ebp-0x10],esi
1002e487:	je     0x1002e4d5
1002e489:	mov    eax,DWORD PTR [esi+0x4]
1002e48c:	mov    eax,DWORD PTR [eax]
1002e48e:	mov    DWORD PTR [ebp-0x18],esi
1002e491:	lea    edi,[ebp-0x18]
1002e494:	lea    esi,[ebp-0x10]
1002e497:	mov    DWORD PTR [ebp-0x14],eax
1002e49a:	call   0x10004b10
1002e49f:	test   al,al
1002e4a1:	je     0x1002e4c7
1002e4a3:	push   DWORD PTR [ebp+0xc]
1002e4a6:	mov    esi,DWORD PTR [ebp+0x8]
1002e4a9:	push   0x1
1002e4ab:	mov    ecx,DWORD PTR [ebp-0x4]
1002e4ae:	lea    eax,[ebp-0x18]
1002e4b1:	push   eax
1002e4b2:	call   0x1002e5ab
1002e4b7:	mov    ecx,DWORD PTR [eax]
1002e4b9:	mov    eax,DWORD PTR [eax+0x4]
1002e4bc:	mov    DWORD PTR [ebx],ecx
1002e4be:	mov    DWORD PTR [ebx+0x4],eax
1002e4c1:	mov    BYTE PTR [ebx+0x8],0x1
1002e4c5:	jmp    0x1002e4f9
1002e4c7:	lea    esi,[ebp-0x10]
1002e4ca:	call   0x1002e6f8
1002e4cf:	mov    edi,DWORD PTR [ebp-0xc]
1002e4d2:	mov    esi,DWORD PTR [ebp+0x8]
1002e4d5:	lea    eax,[edi+0x10]
1002e4d8:	push   eax
1002e4d9:	mov    eax,DWORD PTR [ebp+0xc]
1002e4dc:	call   0x1002df01
1002e4e1:	test   al,al
1002e4e3:	je     0x1002e4ed
1002e4e5:	push   DWORD PTR [ebp+0xc]
1002e4e8:	push   DWORD PTR [ebp-0x8]
1002e4eb:	jmp    0x1002e4ab
1002e4ed:	mov    eax,DWORD PTR [ebp-0x10]
1002e4f0:	mov    DWORD PTR [ebx],eax
1002e4f2:	mov    DWORD PTR [ebx+0x4],edi
1002e4f5:	mov    BYTE PTR [ebx+0x8],0x0
1002e4f9:	pop    edi
1002e4fa:	mov    eax,ebx
1002e4fc:	pop    esi
1002e4fd:	leave  
1002e4fe:	ret    0x8
1002e501:	push   ebp
1002e502:	mov    ebp,esp
1002e504:	sub    esp,0x14
1002e507:	mov    eax,DWORD PTR [ebx+0x4]
1002e50a:	mov    eax,DWORD PTR [eax]
1002e50c:	push   esi
1002e50d:	push   edi
1002e50e:	lea    edi,[ebp-0xc]
1002e511:	lea    esi,[ebp+0xc]
1002e514:	mov    DWORD PTR [ebp-0x8],eax
1002e517:	mov    DWORD PTR [ebp-0xc],ebx
1002e51a:	call   0x10004b10
1002e51f:	test   al,al
1002e521:	je     0x1002e588
1002e523:	mov    eax,DWORD PTR [ebx+0x4]
1002e526:	lea    edi,[ebp-0xc]
1002e529:	lea    esi,[ebp+0x14]
1002e52c:	mov    DWORD PTR [ebp-0x8],eax
1002e52f:	mov    DWORD PTR [ebp-0xc],ebx
1002e532:	call   0x10004b10
1002e537:	test   al,al
1002e539:	je     0x1002e588
1002e53b:	mov    eax,DWORD PTR [ebx+0x4]
1002e53e:	push   DWORD PTR [eax+0x4]
1002e541:	mov    ecx,ebx
1002e543:	call   0x1002ea75
1002e548:	mov    eax,DWORD PTR [ebx+0x4]
1002e54b:	mov    DWORD PTR [eax+0x4],eax
1002e54e:	mov    eax,DWORD PTR [ebx+0x4]
1002e551:	and    DWORD PTR [ebx+0x8],0x0
1002e555:	mov    DWORD PTR [eax],eax
1002e557:	mov    eax,DWORD PTR [ebx+0x4]
1002e55a:	mov    DWORD PTR [eax+0x8],eax
1002e55d:	mov    eax,DWORD PTR [ebx+0x4]
1002e560:	mov    ecx,DWORD PTR [eax]
1002e562:	mov    eax,DWORD PTR [ebp+0x8]
1002e565:	mov    DWORD PTR [eax],ebx
1002e567:	jmp    0x1002e5a2
1002e569:	mov    eax,DWORD PTR [ebp+0x10]
1002e56c:	mov    edi,DWORD PTR [ebp+0xc]
1002e56f:	lea    esi,[ebp+0xc]
1002e572:	mov    DWORD PTR [ebp-0x8],eax
1002e575:	call   0x1002df1d
1002e57a:	push   DWORD PTR [ebp-0x8]
1002e57d:	lea    eax,[ebp-0x14]
1002e580:	push   edi
1002e581:	push   eax
1002e582:	push   ebx
1002e583:	call   0x1002e759
1002e588:	lea    edi,[ebp+0x14]
1002e58b:	lea    esi,[ebp+0xc]
1002e58e:	call   0x10004b10
1002e593:	test   al,al
1002e595:	je     0x1002e569
1002e597:	mov    ecx,DWORD PTR [ebp+0xc]
1002e59a:	mov    eax,DWORD PTR [ebp+0x8]
1002e59d:	mov    DWORD PTR [eax],ecx
1002e59f:	mov    ecx,DWORD PTR [ebp+0x10]
1002e5a2:	pop    edi
1002e5a3:	mov    DWORD PTR [eax+0x4],ecx
1002e5a6:	pop    esi
1002e5a7:	leave  
1002e5a8:	ret    0x14
1002e5ab:	push   0x48
1002e5ad:	mov    eax,0x100603a7
1002e5b2:	call   0x10059c75
1002e5b7:	mov    edi,ecx
1002e5b9:	cmp    DWORD PTR [esi+0x8],0xaaaaaa9
1002e5c0:	jb     0x1002e5f4
1002e5c2:	push   0x1006d04c
1002e5c7:	lea    ecx,[ebp-0x2c]
1002e5ca:	call   0x100011d1
1002e5cf:	and    DWORD PTR [ebp-0x4],0x0
1002e5d3:	lea    eax,[ebp-0x2c]
1002e5d6:	push   eax
1002e5d7:	lea    ecx,[ebp-0x54]
1002e5da:	call   0x1000106e
1002e5df:	push   0x10074ec0
1002e5e4:	lea    eax,[ebp-0x54]
1002e5e7:	push   eax
1002e5e8:	mov    DWORD PTR [ebp-0x54],0x1006b96c
1002e5ef:	call   0x10047c54
1002e5f4:	mov    eax,DWORD PTR [esi+0x4]
1002e5f7:	push   0x0
1002e5f9:	push   DWORD PTR [ebp+0x10]
1002e5fc:	push   eax
1002e5fd:	push   edi
1002e5fe:	push   eax
1002e5ff:	call   0x1002ea20
1002e604:	inc    DWORD PTR [esi+0x8]
1002e607:	mov    ebx,eax
1002e609:	mov    eax,DWORD PTR [esi+0x4]
1002e60c:	cmp    edi,eax
1002e60e:	jne    0x1002e61d
1002e610:	mov    DWORD PTR [eax+0x4],ebx
1002e613:	mov    eax,DWORD PTR [esi+0x4]
1002e616:	mov    DWORD PTR [eax],ebx
1002e618:	mov    eax,DWORD PTR [esi+0x4]
1002e61b:	jmp    0x1002e63b
1002e61d:	cmp    BYTE PTR [ebp+0xc],0x0
1002e621:	je     0x1002e630
1002e623:	mov    DWORD PTR [edi],ebx
1002e625:	mov    eax,DWORD PTR [esi+0x4]
1002e628:	cmp    edi,DWORD PTR [eax]
1002e62a:	jne    0x1002e63e
1002e62c:	mov    DWORD PTR [eax],ebx
1002e62e:	jmp    0x1002e63e
1002e630:	mov    DWORD PTR [edi+0x8],ebx
1002e633:	mov    eax,DWORD PTR [esi+0x4]
1002e636:	cmp    edi,DWORD PTR [eax+0x8]
1002e639:	jne    0x1002e63e
1002e63b:	mov    DWORD PTR [eax+0x8],ebx
1002e63e:	mov    edi,ebx
1002e640:	lea    eax,[ebx+0x4]
1002e643:	jmp    0x1002e6d2
1002e648:	mov    ecx,DWORD PTR [eax]
1002e64a:	mov    edx,DWORD PTR [ecx+0x4]
1002e64d:	cmp    ecx,DWORD PTR [edx]
1002e64f:	jne    0x1002e686
1002e651:	mov    edx,DWORD PTR [edx+0x8]
1002e654:	cmp    BYTE PTR [edx+0x28],0x0
1002e658:	je     0x1002e68e
1002e65a:	cmp    edi,DWORD PTR [ecx+0x8]
1002e65d:	jne    0x1002e667
1002e65f:	push   esi
1002e660:	mov    edi,ecx
1002e662:	call   0x100191ef
1002e667:	mov    eax,DWORD PTR [edi+0x4]
1002e66a:	mov    BYTE PTR [eax+0x28],0x1
1002e66e:	mov    eax,DWORD PTR [edi+0x4]
1002e671:	mov    eax,DWORD PTR [eax+0x4]
1002e674:	mov    BYTE PTR [eax+0x28],0x0
1002e678:	mov    eax,DWORD PTR [edi+0x4]
1002e67b:	mov    ecx,DWORD PTR [eax+0x4]
1002e67e:	push   esi
1002e67f:	call   0x1001922f
1002e684:	jmp    0x1002e6cf
1002e686:	mov    edx,DWORD PTR [edx]
1002e688:	cmp    BYTE PTR [edx+0x28],0x0
1002e68c:	jne    0x1002e6a6
1002e68e:	mov    BYTE PTR [ecx+0x28],0x1
1002e692:	mov    BYTE PTR [edx+0x28],0x1
1002e696:	mov    ecx,DWORD PTR [eax]
1002e698:	mov    ecx,DWORD PTR [ecx+0x4]
1002e69b:	mov    BYTE PTR [ecx+0x28],0x0
1002e69f:	mov    eax,DWORD PTR [eax]
1002e6a1:	mov    edi,DWORD PTR [eax+0x4]
1002e6a4:	jmp    0x1002e6cf
1002e6a6:	cmp    edi,DWORD PTR [ecx]
1002e6a8:	jne    0x1002e6b2
1002e6aa:	push   esi
1002e6ab:	mov    edi,ecx
1002e6ad:	call   0x1001922f
1002e6b2:	mov    eax,DWORD PTR [edi+0x4]
1002e6b5:	mov    BYTE PTR [eax+0x28],0x1
1002e6b9:	mov    eax,DWORD PTR [edi+0x4]
1002e6bc:	mov    eax,DWORD PTR [eax+0x4]
1002e6bf:	mov    BYTE PTR [eax+0x28],0x0
1002e6c3:	mov    eax,DWORD PTR [edi+0x4]
1002e6c6:	mov    ecx,DWORD PTR [eax+0x4]
1002e6c9:	push   esi
1002e6ca:	call   0x100191ef
1002e6cf:	lea    eax,[edi+0x4]
1002e6d2:	mov    ecx,DWORD PTR [eax]
1002e6d4:	cmp    BYTE PTR [ecx+0x28],0x0
1002e6d8:	je     0x1002e648
1002e6de:	mov    eax,DWORD PTR [esi+0x4]
1002e6e1:	mov    eax,DWORD PTR [eax+0x4]
1002e6e4:	mov    BYTE PTR [eax+0x28],0x1
1002e6e8:	mov    eax,DWORD PTR [ebp+0x8]
1002e6eb:	mov    DWORD PTR [eax+0x4],ebx
1002e6ee:	mov    DWORD PTR [eax],esi
1002e6f0:	call   0x10059d4d
1002e6f5:	ret    0xc
1002e6f8:	push   ebx
1002e6f9:	xor    ebx,ebx
1002e6fb:	cmp    DWORD PTR [esi],ebx
1002e6fd:	jne    0x1002e704
1002e6ff:	call   0x100435f0
1002e704:	mov    eax,DWORD PTR [esi+0x4]
1002e707:	cmp    BYTE PTR [eax+0x29],bl
1002e70a:	je     0x1002e719
1002e70c:	mov    eax,DWORD PTR [eax+0x8]
1002e70f:	mov    DWORD PTR [esi+0x4],eax
1002e712:	cmp    BYTE PTR [eax+0x29],bl
1002e715:	je     0x1002e755
1002e717:	jmp    0x1002e74b
1002e719:	mov    ecx,DWORD PTR [eax]
1002e71b:	cmp    BYTE PTR [ecx+0x29],bl
1002e71e:	jne    0x1002e73b
1002e720:	jmp    0x1002e724
1002e722:	mov    ecx,eax
1002e724:	mov    eax,DWORD PTR [ecx+0x8]
1002e727:	cmp    BYTE PTR [eax+0x29],bl
1002e72a:	je     0x1002e722
1002e72c:	mov    DWORD PTR [esi+0x4],ecx
1002e72f:	jmp    0x1002e755
1002e731:	mov    ecx,DWORD PTR [esi+0x4]
1002e734:	cmp    ecx,DWORD PTR [eax]
1002e736:	jne    0x1002e743
1002e738:	mov    DWORD PTR [esi+0x4],eax
1002e73b:	mov    eax,DWORD PTR [eax+0x4]
1002e73e:	cmp    BYTE PTR [eax+0x29],bl
1002e741:	je     0x1002e731
1002e743:	mov    ecx,DWORD PTR [esi+0x4]
1002e746:	cmp    BYTE PTR [ecx+0x29],bl
1002e749:	je     0x1002e752
1002e74b:	call   0x100435f0
1002e750:	jmp    0x1002e755
1002e752:	mov    DWORD PTR [esi+0x4],eax
1002e755:	mov    eax,esi
1002e757:	pop    ebx
1002e758:	ret    
1002e759:	push   0x44
1002e75b:	mov    eax,0x10060338
1002e760:	call   0x10059c75
1002e765:	mov    edi,DWORD PTR [ebp+0x14]
1002e768:	cmp    BYTE PTR [edi+0x29],0x0
1002e76c:	je     0x1002e7a0
1002e76e:	push   0x1006ccec
1002e773:	lea    ecx,[ebp-0x28]
1002e776:	call   0x100011d1
1002e77b:	and    DWORD PTR [ebp-0x4],0x0
1002e77f:	lea    eax,[ebp-0x28]
1002e782:	push   eax
1002e783:	lea    ecx,[ebp-0x50]
1002e786:	call   0x1000106e
1002e78b:	push   0x10074de0
1002e790:	lea    eax,[ebp-0x50]
1002e793:	push   eax
1002e794:	mov    DWORD PTR [ebp-0x50],0x1006b978
1002e79b:	call   0x10047c54
1002e7a0:	lea    esi,[ebp+0x10]
1002e7a3:	call   0x1002df1d
1002e7a8:	mov    ecx,DWORD PTR [edi]
1002e7aa:	cmp    BYTE PTR [ecx+0x29],0x0
1002e7ae:	je     0x1002e7b5
1002e7b0:	mov    ebx,DWORD PTR [edi+0x8]
1002e7b3:	jmp    0x1002e7cc
1002e7b5:	mov    eax,DWORD PTR [edi+0x8]
1002e7b8:	cmp    BYTE PTR [eax+0x29],0x0
1002e7bc:	je     0x1002e7c2
1002e7be:	mov    ebx,ecx
1002e7c0:	jmp    0x1002e7cc
1002e7c2:	mov    eax,DWORD PTR [ebp+0x14]
1002e7c5:	cmp    eax,edi
1002e7c7:	mov    ebx,DWORD PTR [eax+0x8]
1002e7ca:	jne    0x1002e842
1002e7cc:	cmp    BYTE PTR [ebx+0x29],0x0
1002e7d0:	mov    esi,DWORD PTR [edi+0x4]
1002e7d3:	jne    0x1002e7d8
1002e7d5:	mov    DWORD PTR [ebx+0x4],esi
1002e7d8:	mov    ecx,DWORD PTR [ebp+0x8]
1002e7db:	mov    eax,DWORD PTR [ecx+0x4]
1002e7de:	cmp    DWORD PTR [eax+0x4],edi
1002e7e1:	jne    0x1002e7e8
1002e7e3:	mov    DWORD PTR [eax+0x4],ebx
1002e7e6:	jmp    0x1002e7f3
1002e7e8:	cmp    DWORD PTR [esi],edi
1002e7ea:	jne    0x1002e7f0
1002e7ec:	mov    DWORD PTR [esi],ebx
1002e7ee:	jmp    0x1002e7f3
1002e7f0:	mov    DWORD PTR [esi+0x8],ebx
1002e7f3:	mov    edx,DWORD PTR [ecx+0x4]
1002e7f6:	cmp    DWORD PTR [edx],edi
1002e7f8:	jne    0x1002e816
1002e7fa:	cmp    BYTE PTR [ebx+0x29],0x0
1002e7fe:	je     0x1002e804
1002e800:	mov    ecx,esi
1002e802:	jmp    0x1002e814
1002e804:	mov    eax,DWORD PTR [ebx]
1002e806:	mov    ecx,ebx
1002e808:	jmp    0x1002e80e
1002e80a:	mov    ecx,eax
1002e80c:	mov    eax,DWORD PTR [ecx]
1002e80e:	cmp    BYTE PTR [eax+0x29],0x0
1002e812:	je     0x1002e80a
1002e814:	mov    DWORD PTR [edx],ecx
1002e816:	mov    eax,DWORD PTR [ebp+0x8]
1002e819:	mov    edx,DWORD PTR [eax+0x4]
1002e81c:	cmp    DWORD PTR [edx+0x8],edi
1002e81f:	jne    0x1002e89c
1002e821:	cmp    BYTE PTR [ebx+0x29],0x0
1002e825:	je     0x1002e82b
1002e827:	mov    ecx,esi
1002e829:	jmp    0x1002e83d
1002e82b:	mov    eax,DWORD PTR [ebx+0x8]
1002e82e:	mov    ecx,ebx
1002e830:	jmp    0x1002e837
1002e832:	mov    ecx,eax
1002e834:	mov    eax,DWORD PTR [ecx+0x8]
1002e837:	cmp    BYTE PTR [eax+0x29],0x0
1002e83b:	je     0x1002e832
1002e83d:	mov    DWORD PTR [edx+0x8],ecx
1002e840:	jmp    0x1002e89c
1002e842:	mov    DWORD PTR [ecx+0x4],eax
1002e845:	mov    ecx,DWORD PTR [edi]
1002e847:	mov    DWORD PTR [eax],ecx
1002e849:	cmp    eax,DWORD PTR [edi+0x8]
1002e84c:	jne    0x1002e852
1002e84e:	mov    esi,eax
1002e850:	jmp    0x1002e86c
1002e852:	cmp    BYTE PTR [ebx+0x29],0x0
1002e856:	mov    esi,DWORD PTR [eax+0x4]
1002e859:	jne    0x1002e85e
1002e85b:	mov    DWORD PTR [ebx+0x4],esi
1002e85e:	mov    DWORD PTR [esi],ebx
1002e860:	mov    ecx,DWORD PTR [edi+0x8]
1002e863:	mov    DWORD PTR [eax+0x8],ecx
1002e866:	mov    ecx,DWORD PTR [edi+0x8]
1002e869:	mov    DWORD PTR [ecx+0x4],eax
1002e86c:	mov    ecx,DWORD PTR [ebp+0x8]
1002e86f:	mov    ecx,DWORD PTR [ecx+0x4]
1002e872:	cmp    DWORD PTR [ecx+0x4],edi
1002e875:	jne    0x1002e87c
1002e877:	mov    DWORD PTR [ecx+0x4],eax
1002e87a:	jmp    0x1002e88a
1002e87c:	mov    ecx,DWORD PTR [edi+0x4]
1002e87f:	cmp    DWORD PTR [ecx],edi
1002e881:	jne    0x1002e887
1002e883:	mov    DWORD PTR [ecx],eax
1002e885:	jmp    0x1002e88a
1002e887:	mov    DWORD PTR [ecx+0x8],eax
1002e88a:	mov    ecx,DWORD PTR [edi+0x4]
1002e88d:	mov    DWORD PTR [eax+0x4],ecx
1002e890:	mov    dl,BYTE PTR [edi+0x28]
1002e893:	mov    cl,BYTE PTR [eax+0x28]
1002e896:	mov    BYTE PTR [eax+0x28],dl
1002e899:	mov    BYTE PTR [edi+0x28],cl
1002e89c:	cmp    BYTE PTR [edi+0x28],0x1
1002e8a0:	jne    0x1002e9b8
1002e8a6:	jmp    0x1002e96c
1002e8ab:	cmp    BYTE PTR [ebx+0x28],0x1
1002e8af:	jne    0x1002e9b4
1002e8b5:	mov    ecx,DWORD PTR [esi]
1002e8b7:	cmp    ebx,ecx
1002e8b9:	jne    0x1002e932
1002e8bb:	mov    ecx,DWORD PTR [esi+0x8]
1002e8be:	cmp    BYTE PTR [ecx+0x28],0x0
1002e8c2:	jne    0x1002e8d9
1002e8c4:	push   DWORD PTR [ebp+0x8]
1002e8c7:	mov    BYTE PTR [ecx+0x28],0x1
1002e8cb:	mov    ecx,esi
1002e8cd:	mov    BYTE PTR [esi+0x28],0x0
1002e8d1:	call   0x100191ef
1002e8d6:	mov    ecx,DWORD PTR [esi+0x8]
1002e8d9:	cmp    BYTE PTR [ecx+0x29],0x0
1002e8dd:	jne    0x1002e967
1002e8e3:	mov    eax,DWORD PTR [ecx]
1002e8e5:	cmp    BYTE PTR [eax+0x28],0x1
1002e8e9:	jne    0x1002e8f4
1002e8eb:	mov    eax,DWORD PTR [ecx+0x8]
1002e8ee:	cmp    BYTE PTR [eax+0x28],0x1
1002e8f2:	je     0x1002e963
1002e8f4:	mov    eax,DWORD PTR [ecx+0x8]
1002e8f7:	cmp    BYTE PTR [eax+0x28],0x1
1002e8fb:	jne    0x1002e912
1002e8fd:	mov    eax,DWORD PTR [ecx]
1002e8ff:	push   DWORD PTR [ebp+0x8]
1002e902:	mov    BYTE PTR [eax+0x28],0x1
1002e906:	mov    BYTE PTR [ecx+0x28],0x0
1002e90a:	call   0x1001922f
1002e90f:	mov    ecx,DWORD PTR [esi+0x8]
1002e912:	mov    al,BYTE PTR [esi+0x28]
1002e915:	push   DWORD PTR [ebp+0x8]
1002e918:	mov    BYTE PTR [ecx+0x28],al
1002e91b:	mov    BYTE PTR [esi+0x28],0x1
1002e91f:	mov    eax,DWORD PTR [ecx+0x8]
1002e922:	mov    ecx,esi
1002e924:	mov    BYTE PTR [eax+0x28],0x1
1002e928:	call   0x100191ef
1002e92d:	jmp    0x1002e9b4
1002e932:	cmp    BYTE PTR [ecx+0x28],0x0
1002e936:	jne    0x1002e94c
1002e938:	push   DWORD PTR [ebp+0x8]
1002e93b:	mov    BYTE PTR [ecx+0x28],0x1
1002e93f:	mov    ecx,esi
1002e941:	mov    BYTE PTR [esi+0x28],0x0
1002e945:	call   0x1001922f
1002e94a:	mov    ecx,DWORD PTR [esi]
1002e94c:	cmp    BYTE PTR [ecx+0x29],0x0
1002e950:	jne    0x1002e967
1002e952:	mov    eax,DWORD PTR [ecx+0x8]
1002e955:	cmp    BYTE PTR [eax+0x28],0x1
1002e959:	jne    0x1002e97d
1002e95b:	mov    eax,DWORD PTR [ecx]
1002e95d:	cmp    BYTE PTR [eax+0x28],0x1
1002e961:	jne    0x1002e97d
1002e963:	mov    BYTE PTR [ecx+0x28],0x0
1002e967:	mov    ebx,esi
1002e969:	mov    esi,DWORD PTR [esi+0x4]
1002e96c:	mov    eax,DWORD PTR [ebp+0x8]
1002e96f:	mov    eax,DWORD PTR [eax+0x4]
1002e972:	cmp    ebx,DWORD PTR [eax+0x4]
1002e975:	jne    0x1002e8ab
1002e97b:	jmp    0x1002e9b4
1002e97d:	mov    eax,DWORD PTR [ecx]
1002e97f:	cmp    BYTE PTR [eax+0x28],0x1
1002e983:	jne    0x1002e99a
1002e985:	mov    eax,DWORD PTR [ecx+0x8]
1002e988:	push   DWORD PTR [ebp+0x8]
1002e98b:	mov    BYTE PTR [eax+0x28],0x1
1002e98f:	mov    BYTE PTR [ecx+0x28],0x0
1002e993:	call   0x100191ef
1002e998:	mov    ecx,DWORD PTR [esi]
1002e99a:	mov    al,BYTE PTR [esi+0x28]
1002e99d:	push   DWORD PTR [ebp+0x8]
1002e9a0:	mov    BYTE PTR [ecx+0x28],al
1002e9a3:	mov    BYTE PTR [esi+0x28],0x1
1002e9a7:	mov    eax,DWORD PTR [ecx]
1002e9a9:	mov    ecx,esi
1002e9ab:	mov    BYTE PTR [eax+0x28],0x1
1002e9af:	call   0x1001922f
1002e9b4:	mov    BYTE PTR [ebx+0x28],0x1
1002e9b8:	lea    eax,[edi+0x18]
1002e9bb:	push   eax
1002e9bc:	call   DWORD PTR ds:0x10066294
1002e9c2:	push   DWORD PTR [edi+0x10]
1002e9c5:	call   DWORD PTR ds:0x100662b4
1002e9cb:	push   edi
1002e9cc:	call   0x100430d2
1002e9d1:	pop    ecx
1002e9d2:	mov    ecx,DWORD PTR [ebp+0x8]
1002e9d5:	mov    eax,DWORD PTR [ecx+0x8]
1002e9d8:	test   eax,eax
1002e9da:	jbe    0x1002e9e0
1002e9dc:	dec    eax
1002e9dd:	mov    DWORD PTR [ecx+0x8],eax
1002e9e0:	mov    ecx,DWORD PTR [ebp+0x10]
1002e9e3:	mov    eax,DWORD PTR [ebp+0xc]
1002e9e6:	mov    DWORD PTR [eax],ecx
1002e9e8:	mov    ecx,DWORD PTR [ebp+0x14]
1002e9eb:	mov    DWORD PTR [eax+0x4],ecx
1002e9ee:	call   0x10059d4d
1002e9f3:	ret    0x10
1002e9f6:	push   0x30
1002e9f8:	call   0x100436de
1002e9fd:	xor    edx,edx
1002e9ff:	cmp    eax,edx
1002ea01:	pop    ecx
1002ea02:	je     0x1002ea06
1002ea04:	mov    DWORD PTR [eax],edx
1002ea06:	lea    ecx,[eax+0x4]
1002ea09:	cmp    ecx,edx
1002ea0b:	je     0x1002ea0f
1002ea0d:	mov    DWORD PTR [ecx],edx
1002ea0f:	lea    ecx,[eax+0x8]
1002ea12:	cmp    ecx,edx
1002ea14:	je     0x1002ea18
1002ea16:	mov    DWORD PTR [ecx],edx
1002ea18:	mov    BYTE PTR [eax+0x28],0x1
1002ea1c:	mov    BYTE PTR [eax+0x29],dl
1002ea1f:	ret    
1002ea20:	push   0x8
1002ea22:	mov    eax,0x10060187
1002ea27:	call   0x10059ca8
1002ea2c:	push   0x30
1002ea2e:	call   0x100436de
1002ea33:	mov    ebx,eax
1002ea35:	pop    ecx
1002ea36:	mov    DWORD PTR [ebp-0x14],ebx
1002ea39:	test   ebx,ebx
1002ea3b:	mov    DWORD PTR [ebp-0x4],0x1
1002ea42:	je     0x1002ea58
1002ea44:	push   DWORD PTR [ebp+0x18]
1002ea47:	mov    ecx,DWORD PTR [ebp+0x14]
1002ea4a:	push   DWORD PTR [ebp+0x10]
1002ea4d:	push   DWORD PTR [ebp+0xc]
1002ea50:	push   DWORD PTR [ebp+0x8]
1002ea53:	call   0x1002eaba
1002ea58:	mov    eax,ebx
1002ea5a:	call   0x10059d4d
1002ea5f:	ret    0x14
1002ea62:	push   DWORD PTR [ebp-0x14]
1002ea65:	call   0x100430d2
1002ea6a:	pop    ecx
1002ea6b:	push   0x0
1002ea6d:	push   0x0
1002ea6f:	call   0x10047c54
1002ea74:	int3   
1002ea75:	push   ebx
1002ea76:	push   esi
1002ea77:	push   edi
1002ea78:	mov    edi,DWORD PTR [esp+0x10]
1002ea7c:	cmp    BYTE PTR [edi+0x29],0x0
1002ea80:	mov    ebx,ecx
1002ea82:	mov    esi,edi
1002ea84:	jne    0x1002eab4
1002ea86:	push   DWORD PTR [esi+0x8]
1002ea89:	mov    ecx,ebx
1002ea8b:	call   0x1002ea75
1002ea90:	mov    esi,DWORD PTR [esi]
1002ea92:	lea    eax,[edi+0x18]
1002ea95:	push   eax
1002ea96:	call   DWORD PTR ds:0x10066294
1002ea9c:	push   DWORD PTR [edi+0x10]
1002ea9f:	call   DWORD PTR ds:0x100662b4
1002eaa5:	push   edi
1002eaa6:	call   0x100430d2
1002eaab:	cmp    BYTE PTR [esi+0x29],0x0
1002eaaf:	pop    ecx
1002eab0:	mov    edi,esi
1002eab2:	je     0x1002ea86
1002eab4:	pop    edi
1002eab5:	pop    esi
1002eab6:	pop    ebx
1002eab7:	ret    0x4
1002eaba:	push   0x0
1002eabc:	mov    eax,0x10060167
1002eac1:	call   0x10059c75
1002eac6:	mov    esi,ecx
1002eac8:	mov    eax,DWORD PTR [ebp+0x8]
1002eacb:	mov    DWORD PTR [ebx],eax
1002eacd:	mov    eax,DWORD PTR [ebp+0xc]
1002ead0:	mov    DWORD PTR [ebx+0x4],eax
1002ead3:	mov    eax,DWORD PTR [ebp+0x10]
1002ead6:	lea    edi,[ebx+0x10]
1002ead9:	mov    DWORD PTR [ebx+0x8],eax
1002eadc:	mov    DWORD PTR [ebp+0x8],edi
1002eadf:	call   0x1002b096
1002eae4:	and    DWORD PTR [ebp-0x4],0x0
1002eae8:	add    esi,0x8
1002eaeb:	lea    eax,[edi+0x8]
1002eaee:	and    WORD PTR [eax],0x0
1002eaf2:	push   esi
1002eaf3:	mov    esi,eax
1002eaf5:	call   0x1002b0c4
1002eafa:	mov    al,BYTE PTR [ebp+0x14]
1002eafd:	mov    BYTE PTR [ebx+0x28],al
1002eb00:	mov    BYTE PTR [ebx+0x29],0x0
1002eb04:	mov    eax,ebx
1002eb06:	call   0x10059d4d
1002eb0b:	ret    0x10
1002eb0e:	push   0xc
1002eb10:	mov    eax,0x1005fbf0
1002eb15:	call   0x10059ca8
1002eb1a:	mov    ebx,DWORD PTR [ebp+0x8]
1002eb1d:	xor    edi,edi
1002eb1f:	cmp    ebx,edi
1002eb21:	jne    0x1002eb2a
1002eb23:	mov    eax,0x80004003
1002eb28:	jmp    0x1002eb8c
1002eb2a:	push   0x20
1002eb2c:	mov    DWORD PTR [ebx],edi
1002eb2e:	mov    DWORD PTR [ebp-0x14],0x8007000e
1002eb35:	mov    DWORD PTR [ebp-0x4],edi
1002eb38:	call   0x100436de
1002eb3d:	mov    esi,eax
1002eb3f:	cmp    esi,edi
1002eb41:	pop    ecx
1002eb42:	je     0x1002eb69
1002eb44:	mov    DWORD PTR [esi+0x4],edi
1002eb47:	mov    DWORD PTR [esi+0x8],edi
1002eb4a:	mov    DWORD PTR [esi+0xc],edi
1002eb4d:	mov    DWORD PTR [esi+0x10],edi
1002eb50:	mov    DWORD PTR [esi+0x14],edi
1002eb53:	mov    DWORD PTR [esi+0x18],edi
1002eb56:	mov    DWORD PTR [esi],0x10072ec0
1002eb5c:	mov    ecx,DWORD PTR ds:0x10080c04
1002eb62:	mov    eax,DWORD PTR [ecx]
1002eb64:	call   DWORD PTR [eax+0x4]
1002eb67:	jmp    0x1002eb7a
1002eb69:	xor    esi,esi
1002eb6b:	jmp    0x1002eb7a
1002eb6d:	mov    eax,0x1002eb73
1002eb72:	ret    
1002eb73:	mov    ebx,DWORD PTR [ebp+0x8]
1002eb76:	xor    edi,edi
1002eb78:	mov    esi,edi
1002eb7a:	cmp    esi,edi
1002eb7c:	je     0x1002eb87
1002eb7e:	inc    DWORD PTR [esi+0x4]
1002eb81:	dec    DWORD PTR [esi+0x4]
1002eb84:	mov    DWORD PTR [ebp-0x14],edi
1002eb87:	mov    eax,DWORD PTR [ebp-0x14]
1002eb8a:	mov    DWORD PTR [ebx],esi
1002eb8c:	call   0x10059d4d
1002eb91:	ret    0x4
1002eb94:	push   0xc
1002eb96:	mov    eax,0x10060b7e
1002eb9b:	call   0x10059ca8
1002eba0:	mov    ebx,DWORD PTR [ebp+0x8]
1002eba3:	xor    edi,edi
1002eba5:	cmp    ebx,edi
1002eba7:	jne    0x1002ebb0
1002eba9:	mov    eax,0x80004003
1002ebae:	jmp    0x1002ec0c
1002ebb0:	push   0x18
1002ebb2:	mov    DWORD PTR [ebx],edi
1002ebb4:	mov    DWORD PTR [ebp-0x14],0x8007000e
1002ebbb:	mov    DWORD PTR [ebp-0x4],edi
1002ebbe:	call   0x100436de
1002ebc3:	mov    esi,eax
1002ebc5:	cmp    esi,edi
1002ebc7:	pop    ecx
1002ebc8:	je     0x1002ebe9
1002ebca:	mov    DWORD PTR [esi+0x14],edi
1002ebcd:	mov    DWORD PTR [esi+0x8],edi
1002ebd0:	mov    DWORD PTR [esi+0xc],edi
1002ebd3:	mov    DWORD PTR [esi+0x10],edi
1002ebd6:	mov    DWORD PTR [esi],0x10072ef8
1002ebdc:	mov    ecx,DWORD PTR ds:0x10080c04
1002ebe2:	mov    eax,DWORD PTR [ecx]
1002ebe4:	call   DWORD PTR [eax+0x4]
1002ebe7:	jmp    0x1002ebfa
1002ebe9:	xor    esi,esi
1002ebeb:	jmp    0x1002ebfa
1002ebed:	mov    eax,0x1002ebf3
1002ebf2:	ret    
1002ebf3:	mov    ebx,DWORD PTR [ebp+0x8]
1002ebf6:	xor    edi,edi
1002ebf8:	mov    esi,edi
1002ebfa:	cmp    esi,edi
1002ebfc:	je     0x1002ec07
1002ebfe:	inc    DWORD PTR [esi+0x14]
1002ec01:	dec    DWORD PTR [esi+0x14]
1002ec04:	mov    DWORD PTR [ebp-0x14],edi
1002ec07:	mov    eax,DWORD PTR [ebp-0x14]
1002ec0a:	mov    DWORD PTR [ebx],esi
1002ec0c:	call   0x10059d4d
1002ec11:	ret    0x4
1002ec14:	push   0xc
1002ec16:	mov    eax,0x10061b44
1002ec1b:	call   0x10059ca8
1002ec20:	mov    ebx,DWORD PTR [ebp+0x8]
1002ec23:	xor    esi,esi
1002ec25:	cmp    ebx,esi
1002ec27:	jne    0x1002ec30
1002ec29:	mov    eax,0x80004003
1002ec2e:	jmp    0x1002ec94
1002ec30:	push   0x14
1002ec32:	mov    DWORD PTR [ebx],esi
1002ec34:	mov    DWORD PTR [ebp-0x14],0x8007000e
1002ec3b:	mov    DWORD PTR [ebp-0x18],esi
1002ec3e:	mov    DWORD PTR [ebp-0x4],esi
1002ec41:	call   0x100436de
1002ec46:	mov    edi,eax
1002ec48:	cmp    edi,esi
1002ec4a:	pop    ecx
1002ec4b:	je     0x1002ec71
1002ec4d:	mov    DWORD PTR [edi+0x10],esi
1002ec50:	lea    esi,[edi+0x4]
1002ec53:	mov    DWORD PTR [edi],0x10072f60
1002ec59:	call   0x1002d813
1002ec5e:	mov    DWORD PTR [edi],0x10072f28
1002ec64:	mov    ecx,DWORD PTR ds:0x10080c04
1002ec6a:	mov    eax,DWORD PTR [ecx]
1002ec6c:	call   DWORD PTR [eax+0x4]
1002ec6f:	jmp    0x1002ec81
1002ec71:	xor    edi,edi
1002ec73:	jmp    0x1002ec81
1002ec75:	mov    eax,0x1002ec7b
1002ec7a:	ret    
1002ec7b:	mov    ebx,DWORD PTR [ebp+0x8]
1002ec7e:	mov    edi,DWORD PTR [ebp-0x18]
1002ec81:	test   edi,edi
1002ec83:	je     0x1002ec8f
1002ec85:	inc    DWORD PTR [edi+0x10]
1002ec88:	and    DWORD PTR [ebp-0x14],0x0
1002ec8c:	dec    DWORD PTR [edi+0x10]
1002ec8f:	mov    eax,DWORD PTR [ebp-0x14]
1002ec92:	mov    DWORD PTR [ebx],edi
1002ec94:	call   0x10059d4d
1002ec99:	ret    0x4
1002ec9c:	push   0xc
1002ec9e:	mov    eax,0x1005fbd5
1002eca3:	call   0x10059ca8
1002eca8:	mov    ebx,DWORD PTR [ebp+0x8]
1002ecab:	xor    edi,edi
1002ecad:	cmp    ebx,edi
1002ecaf:	jne    0x1002ecb8
1002ecb1:	mov    eax,0x80004003
1002ecb6:	jmp    0x1002ed0e
1002ecb8:	push   0x18
1002ecba:	mov    DWORD PTR [ebx],edi
1002ecbc:	mov    DWORD PTR [ebp-0x14],0x8007000e
1002ecc3:	mov    DWORD PTR [ebp-0x4],edi
1002ecc6:	call   0x100436de
1002eccb:	mov    esi,eax
1002eccd:	cmp    esi,edi
1002eccf:	pop    ecx
1002ecd0:	je     0x1002ecf1
1002ecd2:	mov    DWORD PTR [esi+0x4],edi
1002ecd5:	mov    DWORD PTR [esi+0xc],edi
1002ecd8:	mov    DWORD PTR [esi+0x10],edi
1002ecdb:	mov    DWORD PTR [esi+0x14],edi
1002ecde:	mov    DWORD PTR [esi],0x10072f9c
1002ece4:	mov    ecx,DWORD PTR ds:0x10080c04
1002ecea:	mov    eax,DWORD PTR [ecx]
1002ecec:	call   DWORD PTR [eax+0x4]
1002ecef:	jmp    0x1002ed02
1002ecf1:	xor    esi,esi
1002ecf3:	jmp    0x1002ed02
1002ecf5:	mov    eax,0x1002ecfb
1002ecfa:	ret    
1002ecfb:	mov    ebx,DWORD PTR [ebp+0x8]
1002ecfe:	xor    edi,edi
1002ed00:	mov    esi,edi
1002ed02:	cmp    esi,edi
1002ed04:	je     0x1002ed09
1002ed06:	mov    DWORD PTR [ebp-0x14],edi
1002ed09:	mov    eax,DWORD PTR [ebp-0x14]
1002ed0c:	mov    DWORD PTR [ebx],esi
1002ed0e:	call   0x10059d4d
1002ed13:	ret    0x4
1002ed16:	push   ebp
1002ed17:	mov    ebp,esp
1002ed19:	mov    edx,DWORD PTR [ebp+0x10]
1002ed1c:	xor    ecx,ecx
1002ed1e:	sub    esp,0x1c
1002ed21:	cmp    edx,ecx
1002ed23:	je     0x1002ee16
1002ed29:	cmp    DWORD PTR [ebp+0xc],0x1
1002ed2d:	je     0x1002ed38
1002ed2f:	cmp    DWORD PTR [ebp+0x14],ecx
1002ed32:	je     0x1002ee16
1002ed38:	mov    eax,DWORD PTR [ebp+0x14]
1002ed3b:	cmp    eax,ecx
1002ed3d:	je     0x1002ed41
1002ed3f:	mov    DWORD PTR [eax],ecx
1002ed41:	mov    eax,DWORD PTR [ebp+0x8]
1002ed44:	cmp    DWORD PTR [eax+0x8],ecx
1002ed47:	jne    0x1002ed53
1002ed49:	mov    eax,0x80004005
1002ed4e:	jmp    0x1002ee1b
1002ed53:	push   ebx
1002ed54:	push   esi
1002ed55:	push   edi
1002ed56:	mov    DWORD PTR [ebp-0x4],ecx
1002ed59:	mov    DWORD PTR [ebp-0x8],ecx
1002ed5c:	mov    DWORD PTR [ebp-0xc],edx
1002ed5f:	lea    esi,[eax+0xc]
1002ed62:	jmp    0x1002ed67
1002ed64:	mov    eax,DWORD PTR [ebp+0x8]
1002ed67:	mov    edi,DWORD PTR [eax+0x8]
1002ed6a:	mov    ebx,DWORD PTR [edi+0x8]
1002ed6d:	cmp    DWORD PTR [edi+0x4],ebx
1002ed70:	jbe    0x1002ed77
1002ed72:	call   0x100435f0
1002ed77:	mov    DWORD PTR [ebp-0x14],edi
1002ed7a:	lea    edi,[ebp-0x14]
1002ed7d:	mov    DWORD PTR [ebp-0x10],ebx
1002ed80:	call   0x1002dff8
1002ed85:	test   al,al
1002ed87:	je     0x1002edd9
1002ed89:	mov    eax,DWORD PTR [ebp-0x4]
1002ed8c:	cmp    eax,DWORD PTR [ebp+0xc]
1002ed8f:	jae    0x1002edd9
1002ed91:	xor    ebx,ebx
1002ed93:	cmp    DWORD PTR [esi],ebx
1002ed95:	jne    0x1002ed9c
1002ed97:	call   0x100435f0
1002ed9c:	mov    eax,DWORD PTR [esi]
1002ed9e:	mov    ecx,DWORD PTR [esi+0x4]
1002eda1:	cmp    ecx,DWORD PTR [eax+0x8]
1002eda4:	jb     0x1002edab
1002eda6:	call   0x100435f0
1002edab:	mov    eax,DWORD PTR [esi+0x4]
1002edae:	mov    edi,DWORD PTR [ebp-0xc]
1002edb1:	push   eax
1002edb2:	push   edi
1002edb3:	mov    WORD PTR [edi],bx
1002edb6:	call   DWORD PTR ds:0x10066280
1002edbc:	cmp    eax,ebx
1002edbe:	mov    DWORD PTR [ebp-0x8],eax
1002edc1:	jl     0x1002ee0c
1002edc3:	add    edi,0x10
1002edc6:	mov    DWORD PTR [ebp-0xc],edi
1002edc9:	lea    edi,[ebp-0x1c]
1002edcc:	call   0x1002dfce
1002edd1:	inc    DWORD PTR [ebp-0x4]
1002edd4:	cmp    DWORD PTR [ebp-0x8],ebx
1002edd7:	jge    0x1002ed64
1002edd9:	cmp    DWORD PTR [ebp-0x8],0x0
1002eddd:	pop    edi
1002edde:	pop    esi
1002eddf:	pop    ebx
1002ede0:	jl     0x1002edfa
1002ede2:	mov    eax,DWORD PTR [ebp+0x14]
1002ede5:	test   eax,eax
1002ede7:	mov    ecx,DWORD PTR [ebp-0x4]
1002edea:	je     0x1002edee
1002edec:	mov    DWORD PTR [eax],ecx
1002edee:	cmp    ecx,DWORD PTR [ebp+0xc]
1002edf1:	jae    0x1002edfa
1002edf3:	mov    DWORD PTR [ebp-0x8],0x1
1002edfa:	mov    eax,DWORD PTR [ebp-0x8]
1002edfd:	jmp    0x1002ee1b
1002edff:	push   DWORD PTR [ebp+0x10]
1002ee02:	call   DWORD PTR ds:0x10066294
1002ee08:	add    DWORD PTR [ebp+0x10],0x10
1002ee0c:	cmp    DWORD PTR [ebp+0x10],edi
1002ee0f:	jb     0x1002edff
1002ee11:	mov    DWORD PTR [ebp-0x4],ebx
1002ee14:	jmp    0x1002edd4
1002ee16:	mov    eax,0x80004003
1002ee1b:	leave  
1002ee1c:	ret    0x10
1002ee1f:	push   ebp
1002ee20:	mov    ebp,esp
1002ee22:	sub    esp,0x14
1002ee25:	and    DWORD PTR [ebp-0x4],0x0
1002ee29:	cmp    DWORD PTR [ebp+0xc],0x0
1002ee2d:	je     0x1002ee7a
1002ee2f:	push   ebx
1002ee30:	mov    ebx,DWORD PTR [ebp+0x8]
1002ee33:	push   esi
1002ee34:	push   edi
1002ee35:	mov    edi,DWORD PTR [ebx+0x8]
1002ee38:	mov    esi,DWORD PTR [edi+0x8]
1002ee3b:	dec    DWORD PTR [ebp+0xc]
1002ee3e:	cmp    DWORD PTR [edi+0x4],esi
1002ee41:	jbe    0x1002ee48
1002ee43:	call   0x100435f0
1002ee48:	mov    DWORD PTR [ebp-0xc],edi
1002ee4b:	mov    DWORD PTR [ebp-0x8],esi
1002ee4e:	lea    edi,[ebp-0xc]
1002ee51:	lea    esi,[ebx+0xc]
1002ee54:	call   0x1002dff8
1002ee59:	test   al,al
1002ee5b:	je     0x1002ee70
1002ee5d:	lea    edi,[ebp-0x14]
1002ee60:	lea    esi,[ebx+0xc]
1002ee63:	call   0x1002dfce
1002ee68:	cmp    DWORD PTR [ebp+0xc],0x0
1002ee6c:	jne    0x1002ee35
1002ee6e:	jmp    0x1002ee77
1002ee70:	mov    DWORD PTR [ebp-0x4],0x1
1002ee77:	pop    edi
1002ee78:	pop    esi
1002ee79:	pop    ebx
1002ee7a:	mov    eax,DWORD PTR [ebp-0x4]
1002ee7d:	leave  
1002ee7e:	ret    0x8
1002ee81:	push   ebp
1002ee82:	mov    ebp,esp
1002ee84:	push   ecx
1002ee85:	mov    eax,DWORD PTR [ebp+0xc]
1002ee88:	test   eax,eax
1002ee8a:	push   ebx
1002ee8b:	mov    ebx,0x80004003
1002ee90:	je     0x1002eef3
1002ee92:	and    DWORD PTR [eax],0x0
1002ee95:	lea    eax,[ebp-0x4]
1002ee98:	push   eax
1002ee99:	call   0x1002ec9c
1002ee9e:	mov    ebx,eax
1002eea0:	test   ebx,ebx
1002eea2:	jl     0x1002eef3
1002eea4:	push   esi
1002eea5:	mov    esi,DWORD PTR [ebp+0x8]
1002eea8:	mov    eax,DWORD PTR [esi+0x4]
1002eeab:	push   edi
1002eeac:	mov    edi,DWORD PTR [ebp-0x4]
1002eeaf:	push   DWORD PTR [esi+0x8]
1002eeb2:	mov    ebx,edi
1002eeb4:	call   0x1002e03f
1002eeb9:	mov    ebx,eax
1002eebb:	test   ebx,ebx
1002eebd:	jl     0x1002eee4
1002eebf:	mov    eax,DWORD PTR [esi+0xc]
1002eec2:	mov    ebx,DWORD PTR [ebp+0xc]
1002eec5:	mov    DWORD PTR [edi+0xc],eax
1002eec8:	mov    eax,DWORD PTR [esi+0x10]
1002eecb:	push   0x10072b30
1002eed0:	mov    DWORD PTR [edi+0x10],eax
1002eed3:	push   edi
1002eed4:	mov    eax,0x10072e98
1002eed9:	call   0x100104da
1002eede:	mov    ebx,eax
1002eee0:	test   ebx,ebx
1002eee2:	jge    0x1002eef1
1002eee4:	test   edi,edi
1002eee6:	je     0x1002eef1
1002eee8:	mov    eax,DWORD PTR [edi]
1002eeea:	push   0x1
1002eeec:	mov    ecx,edi
1002eeee:	call   DWORD PTR [eax+0x1c]
1002eef1:	pop    edi
1002eef2:	pop    esi
1002eef3:	mov    eax,ebx
1002eef5:	pop    ebx
1002eef6:	leave  
1002eef7:	ret    0x8
1002eefa:	push   0xc
1002eefc:	mov    eax,0x10061b29
1002ef01:	call   0x10059ca8
1002ef06:	mov    ebx,DWORD PTR [ebp+0x8]
1002ef09:	xor    esi,esi
1002ef0b:	cmp    ebx,esi
1002ef0d:	jne    0x1002ef16
1002ef0f:	mov    eax,0x80004003
1002ef14:	jmp    0x1002ef6e
1002ef16:	push   0x14
1002ef18:	mov    DWORD PTR [ebx],esi
1002ef1a:	mov    DWORD PTR [ebp-0x14],0x8007000e
1002ef21:	mov    DWORD PTR [ebp-0x18],esi
1002ef24:	mov    DWORD PTR [ebp-0x4],esi
1002ef27:	call   0x100436de
1002ef2c:	mov    edi,eax
1002ef2e:	cmp    edi,esi
1002ef30:	pop    ecx
1002ef31:	je     0x1002ef51
1002ef33:	mov    DWORD PTR [edi+0x4],esi
1002ef36:	lea    esi,[edi+0x8]
1002ef39:	call   0x1002d813
1002ef3e:	mov    DWORD PTR [edi],0x10072fbc
1002ef44:	mov    ecx,DWORD PTR ds:0x10080c04
1002ef4a:	mov    eax,DWORD PTR [ecx]
1002ef4c:	call   DWORD PTR [eax+0x4]
1002ef4f:	jmp    0x1002ef61
1002ef51:	xor    edi,edi
1002ef53:	jmp    0x1002ef61
1002ef55:	mov    eax,0x1002ef5b
1002ef5a:	ret    
1002ef5b:	mov    ebx,DWORD PTR [ebp+0x8]
1002ef5e:	mov    edi,DWORD PTR [ebp-0x18]
1002ef61:	test   edi,edi
1002ef63:	je     0x1002ef69
1002ef65:	and    DWORD PTR [ebp-0x14],0x0
1002ef69:	mov    eax,DWORD PTR [ebp-0x14]
1002ef6c:	mov    DWORD PTR [ebx],edi
1002ef6e:	call   0x10059d4d
1002ef73:	ret    0x4
1002ef76:	push   ebp
1002ef77:	mov    ebp,esp
1002ef79:	push   ecx
1002ef7a:	test   edi,edi
1002ef7c:	jne    0x1002ef85
1002ef7e:	mov    eax,0x80004003
1002ef83:	leave  
1002ef84:	ret    
1002ef85:	and    DWORD PTR [edi],0x0
1002ef88:	and    DWORD PTR [ebp-0x4],0x0
1002ef8c:	lea    eax,[ebp-0x4]
1002ef8f:	push   eax
1002ef90:	call   0x1002efd3
1002ef95:	test   eax,eax
1002ef97:	jl     0x1002efd1
1002ef99:	mov    eax,DWORD PTR [ebp+0x8]
1002ef9c:	push   ebx
1002ef9d:	mov    ebx,DWORD PTR [ebp-0x4]
1002efa0:	push   esi
1002efa1:	push   DWORD PTR [ebp+0xc]
1002efa4:	call   0x1002e16d
1002efa9:	mov    esi,eax
1002efab:	test   esi,esi
1002efad:	jl     0x1002efc0
1002efaf:	mov    eax,DWORD PTR [ebx]
1002efb1:	push   edi
1002efb2:	push   0x1006dd44
1002efb7:	push   ebx
1002efb8:	call   DWORD PTR [eax]
1002efba:	mov    esi,eax
1002efbc:	test   esi,esi
1002efbe:	jge    0x1002efcd
1002efc0:	test   ebx,ebx
1002efc2:	je     0x1002efcd
1002efc4:	mov    eax,DWORD PTR [ebx]
1002efc6:	push   0x1
1002efc8:	mov    ecx,ebx
1002efca:	call   DWORD PTR [eax+0x1c]
1002efcd:	mov    eax,esi
1002efcf:	pop    esi
1002efd0:	pop    ebx
1002efd1:	leave  
1002efd2:	ret    
1002efd3:	push   0xc
1002efd5:	mov    eax,0x1005fbba
1002efda:	call   0x10059ca8
1002efdf:	mov    ebx,DWORD PTR [ebp+0x8]
1002efe2:	xor    edi,edi
1002efe4:	cmp    ebx,edi
1002efe6:	jne    0x1002efef
1002efe8:	mov    eax,0x80004003
1002efed:	jmp    0x1002f045
1002efef:	push   0x18
1002eff1:	mov    DWORD PTR [ebx],edi
1002eff3:	mov    DWORD PTR [ebp-0x14],0x8007000e
1002effa:	mov    DWORD PTR [ebp-0x4],edi
1002effd:	call   0x100436de
1002f002:	mov    esi,eax
1002f004:	cmp    esi,edi
1002f006:	pop    ecx
1002f007:	je     0x1002f028
1002f009:	mov    DWORD PTR [esi+0x4],edi
1002f00c:	mov    DWORD PTR [esi+0xc],edi
1002f00f:	mov    DWORD PTR [esi+0x10],edi
1002f012:	mov    DWORD PTR [esi+0x14],edi
1002f015:	mov    DWORD PTR [esi],0x10072fcc
1002f01b:	mov    ecx,DWORD PTR ds:0x10080c04
1002f021:	mov    eax,DWORD PTR [ecx]
1002f023:	call   DWORD PTR [eax+0x4]
1002f026:	jmp    0x1002f039
1002f028:	xor    esi,esi
1002f02a:	jmp    0x1002f039
1002f02c:	mov    eax,0x1002f032
1002f031:	ret    
1002f032:	mov    ebx,DWORD PTR [ebp+0x8]
1002f035:	xor    edi,edi
1002f037:	mov    esi,edi
1002f039:	cmp    esi,edi
1002f03b:	je     0x1002f040
1002f03d:	mov    DWORD PTR [ebp-0x14],edi
1002f040:	mov    eax,DWORD PTR [ebp-0x14]
1002f043:	mov    DWORD PTR [ebx],esi
1002f045:	call   0x10059d4d
1002f04a:	ret    0x4
1002f04d:	push   ebp
1002f04e:	mov    ebp,esp
1002f050:	sub    esp,0x10
1002f053:	push   ebx
1002f054:	mov    ebx,DWORD PTR [ebp+0x10]
1002f057:	xor    ecx,ecx
1002f059:	cmp    ebx,ecx
1002f05b:	je     0x1002f123
1002f061:	cmp    DWORD PTR [ebp+0xc],0x1
1002f065:	je     0x1002f070
1002f067:	cmp    DWORD PTR [ebp+0x14],ecx
1002f06a:	je     0x1002f123
1002f070:	mov    eax,DWORD PTR [ebp+0x14]
1002f073:	cmp    eax,ecx
1002f075:	je     0x1002f079
1002f077:	mov    DWORD PTR [eax],ecx
1002f079:	mov    eax,DWORD PTR [ebp+0x8]
1002f07c:	cmp    DWORD PTR [eax+0x8],ecx
1002f07f:	jne    0x1002f08b
1002f081:	mov    eax,0x80004005
1002f086:	jmp    0x1002f128
1002f08b:	push   esi
1002f08c:	push   edi
1002f08d:	mov    DWORD PTR [ebp-0x4],ecx
1002f090:	mov    DWORD PTR [ebp-0x8],ecx
1002f093:	lea    esi,[eax+0xc]
1002f096:	jmp    0x1002f09b
1002f098:	mov    eax,DWORD PTR [ebp+0x8]
1002f09b:	mov    eax,DWORD PTR [eax+0x8]
1002f09e:	mov    ecx,DWORD PTR [eax+0x4]
1002f0a1:	lea    edi,[ebp-0x10]
1002f0a4:	mov    DWORD PTR [ebp-0xc],ecx
1002f0a7:	mov    DWORD PTR [ebp-0x10],eax
1002f0aa:	call   0x10004b10
1002f0af:	test   al,al
1002f0b1:	jne    0x1002f0e7
1002f0b3:	mov    eax,DWORD PTR [ebp-0x4]
1002f0b6:	cmp    eax,DWORD PTR [ebp+0xc]
1002f0b9:	jae    0x1002f0e7
1002f0bb:	call   0x1002d99e
1002f0c0:	add    eax,0x8
1002f0c3:	push   eax
1002f0c4:	xor    edi,edi
1002f0c6:	push   ebx
1002f0c7:	mov    WORD PTR [ebx],di
1002f0ca:	call   DWORD PTR ds:0x10066280
1002f0d0:	cmp    eax,edi
1002f0d2:	mov    DWORD PTR [ebp-0x8],eax
1002f0d5:	jl     0x1002f119
1002f0d7:	add    ebx,0x10
1002f0da:	call   0x1002df1d
1002f0df:	inc    DWORD PTR [ebp-0x4]
1002f0e2:	cmp    DWORD PTR [ebp-0x8],edi
1002f0e5:	jge    0x1002f098
1002f0e7:	cmp    DWORD PTR [ebp-0x8],0x0
1002f0eb:	pop    edi
1002f0ec:	pop    esi
1002f0ed:	jl     0x1002f107
1002f0ef:	mov    eax,DWORD PTR [ebp+0x14]
1002f0f2:	test   eax,eax
1002f0f4:	mov    ecx,DWORD PTR [ebp-0x4]
1002f0f7:	je     0x1002f0fb
1002f0f9:	mov    DWORD PTR [eax],ecx
1002f0fb:	cmp    ecx,DWORD PTR [ebp+0xc]
1002f0fe:	jae    0x1002f107
1002f100:	mov    DWORD PTR [ebp-0x8],0x1
1002f107:	mov    eax,DWORD PTR [ebp-0x8]
1002f10a:	jmp    0x1002f128
1002f10c:	push   DWORD PTR [ebp+0x10]
1002f10f:	call   DWORD PTR ds:0x10066294
1002f115:	add    DWORD PTR [ebp+0x10],0x10
1002f119:	cmp    DWORD PTR [ebp+0x10],ebx
1002f11c:	jb     0x1002f10c
1002f11e:	mov    DWORD PTR [ebp-0x4],edi
1002f121:	jmp    0x1002f0e2
1002f123:	mov    eax,0x80004003
1002f128:	pop    ebx
1002f129:	leave  
1002f12a:	ret    0x10
1002f12d:	push   ebp
1002f12e:	mov    ebp,esp
1002f130:	sub    esp,0xc
1002f133:	and    DWORD PTR [ebp-0x4],0x0
1002f137:	cmp    DWORD PTR [ebp+0xc],0x0
1002f13b:	je     0x1002f178
1002f13d:	push   ebx
1002f13e:	mov    ebx,DWORD PTR [ebp+0x8]
1002f141:	push   esi
1002f142:	lea    esi,[ebx+0xc]
1002f145:	push   edi
1002f146:	mov    eax,DWORD PTR [ebx+0x8]
1002f149:	mov    ecx,DWORD PTR [eax+0x4]
1002f14c:	dec    DWORD PTR [ebp+0xc]
1002f14f:	lea    edi,[ebp-0xc]
1002f152:	mov    DWORD PTR [ebp-0x8],ecx
1002f155:	mov    DWORD PTR [ebp-0xc],eax
1002f158:	call   0x10004b10
1002f15d:	test   al,al
1002f15f:	jne    0x1002f16e
1002f161:	call   0x1002df1d
1002f166:	cmp    DWORD PTR [ebp+0xc],0x0
1002f16a:	jne    0x1002f146
1002f16c:	jmp    0x1002f175
1002f16e:	mov    DWORD PTR [ebp-0x4],0x1
1002f175:	pop    edi
1002f176:	pop    esi
1002f177:	pop    ebx
1002f178:	mov    eax,DWORD PTR [ebp-0x4]
1002f17b:	leave  
1002f17c:	ret    0x8
1002f17f:	push   ebp
1002f180:	mov    ebp,esp
1002f182:	push   ecx
1002f183:	mov    eax,DWORD PTR [ebp+0xc]
1002f186:	test   eax,eax
1002f188:	push   ebx
1002f189:	mov    ebx,0x80004003
1002f18e:	je     0x1002f1f1
1002f190:	and    DWORD PTR [eax],0x0
1002f193:	lea    eax,[ebp-0x4]
1002f196:	push   eax
1002f197:	call   0x1002efd3
1002f19c:	mov    ebx,eax
1002f19e:	test   ebx,ebx
1002f1a0:	jl     0x1002f1f1
1002f1a2:	push   esi
1002f1a3:	mov    esi,DWORD PTR [ebp+0x8]
1002f1a6:	mov    eax,DWORD PTR [esi+0x4]
1002f1a9:	push   edi
1002f1aa:	mov    edi,DWORD PTR [ebp-0x4]
1002f1ad:	push   DWORD PTR [esi+0x8]
1002f1b0:	mov    ebx,edi
1002f1b2:	call   0x1002e16d
1002f1b7:	mov    ebx,eax
1002f1b9:	test   ebx,ebx
1002f1bb:	jl     0x1002f1e2
1002f1bd:	mov    eax,DWORD PTR [esi+0xc]
1002f1c0:	mov    ebx,DWORD PTR [ebp+0xc]
1002f1c3:	mov    DWORD PTR [edi+0xc],eax
1002f1c6:	mov    eax,DWORD PTR [esi+0x10]
1002f1c9:	push   0x10072b30
1002f1ce:	mov    DWORD PTR [edi+0x10],eax
1002f1d1:	push   edi
1002f1d2:	mov    eax,0x10072e98
1002f1d7:	call   0x100104da
1002f1dc:	mov    ebx,eax
1002f1de:	test   ebx,ebx
1002f1e0:	jge    0x1002f1ef
1002f1e2:	test   edi,edi
1002f1e4:	je     0x1002f1ef
1002f1e6:	mov    eax,DWORD PTR [edi]
1002f1e8:	push   0x1
1002f1ea:	mov    ecx,edi
1002f1ec:	call   DWORD PTR [eax+0x1c]
1002f1ef:	pop    edi
1002f1f0:	pop    esi
1002f1f1:	mov    eax,ebx
1002f1f3:	pop    ebx
1002f1f4:	leave  
1002f1f5:	ret    0x8
1002f1f8:	push   ebp
1002f1f9:	mov    ebp,esp
1002f1fb:	push   ecx
1002f1fc:	push   edi
1002f1fd:	xor    eax,eax
1002f1ff:	lea    edi,[ebp-0x4]
1002f202:	stos   BYTE PTR es:[edi],al
1002f203:	push   DWORD PTR [ebp-0x4]
1002f206:	push   DWORD PTR [ebp+0xc]
1002f209:	push   DWORD PTR [ebp+0xc]
1002f20c:	push   DWORD PTR [ebp+0x8]
1002f20f:	call   0x1002f374
1002f214:	add    esp,0x10
1002f217:	pop    edi
1002f218:	leave  
1002f219:	ret    0x8
1002f21c:	push   ebx
1002f21d:	push   esi
1002f21e:	push   edi
1002f21f:	mov    ebx,eax
1002f221:	mov    eax,DWORD PTR [ebx+0x4]
1002f224:	mov    esi,ecx
1002f226:	mov    edi,DWORD PTR [esi+0x4]
1002f229:	add    eax,0x4
1002f22c:	push   edi
1002f22d:	push   DWORD PTR [eax]
1002f22f:	call   0x1002f278
1002f234:	mov    DWORD PTR [edi+0x4],eax
1002f237:	mov    eax,DWORD PTR [ebx+0x8]
1002f23a:	mov    DWORD PTR [esi+0x8],eax
1002f23d:	mov    eax,DWORD PTR [esi+0x4]
1002f240:	mov    ecx,DWORD PTR [eax+0x4]
1002f243:	xor    bl,bl
1002f245:	cmp    BYTE PTR [ecx+0x29],bl
1002f248:	je     0x1002f258
1002f24a:	mov    DWORD PTR [eax],eax
1002f24c:	mov    esi,DWORD PTR [esi+0x4]
1002f24f:	mov    DWORD PTR [esi+0x8],esi
1002f252:	pop    edi
1002f253:	pop    esi
1002f254:	pop    ebx
1002f255:	ret    
1002f256:	mov    ecx,edx
1002f258:	mov    edx,DWORD PTR [ecx]
1002f25a:	cmp    BYTE PTR [edx+0x29],bl
1002f25d:	je     0x1002f256
1002f25f:	mov    DWORD PTR [eax],ecx
1002f261:	mov    esi,DWORD PTR [esi+0x4]
1002f264:	mov    ecx,DWORD PTR [esi+0x4]
1002f267:	jmp    0x1002f26b
1002f269:	mov    ecx,eax
1002f26b:	mov    eax,DWORD PTR [ecx+0x8]
1002f26e:	cmp    BYTE PTR [eax+0x29],bl
1002f271:	je     0x1002f269
1002f273:	mov    DWORD PTR [esi+0x8],ecx
1002f276:	jmp    0x1002f252
1002f278:	push   0xc
1002f27a:	mov    eax,0x10060b63
1002f27f:	call   0x10059ca8
1002f284:	mov    edi,ecx
1002f286:	mov    DWORD PTR [ebp-0x18],edi
1002f289:	mov    esi,DWORD PTR [ebp+0x8]
1002f28c:	cmp    BYTE PTR [esi+0x29],0x0
1002f290:	mov    eax,DWORD PTR [edi+0x4]
1002f293:	mov    DWORD PTR [ebp-0x14],eax
1002f296:	jne    0x1002f2d7
1002f298:	movzx  ecx,BYTE PTR [esi+0x28]
1002f29c:	push   ecx
1002f29d:	lea    ecx,[esi+0x10]
1002f2a0:	push   ecx
1002f2a1:	push   eax
1002f2a2:	push   DWORD PTR [ebp+0xc]
1002f2a5:	push   eax
1002f2a6:	call   0x1002ea20
1002f2ab:	mov    ebx,eax
1002f2ad:	mov    eax,DWORD PTR [ebp-0x14]
1002f2b0:	cmp    BYTE PTR [eax+0x29],0x0
1002f2b4:	je     0x1002f2b9
1002f2b6:	mov    DWORD PTR [ebp-0x14],ebx
1002f2b9:	and    DWORD PTR [ebp-0x4],0x0
1002f2bd:	push   ebx
1002f2be:	push   DWORD PTR [esi]
1002f2c0:	mov    ecx,edi
1002f2c2:	call   0x1002f278
1002f2c7:	push   ebx
1002f2c8:	mov    DWORD PTR [ebx],eax
1002f2ca:	push   DWORD PTR [esi+0x8]
1002f2cd:	mov    ecx,edi
1002f2cf:	call   0x1002f278
1002f2d4:	mov    DWORD PTR [ebx+0x8],eax
1002f2d7:	mov    eax,DWORD PTR [ebp-0x14]
1002f2da:	call   0x10059d4d
1002f2df:	ret    0x8
1002f2e2:	push   DWORD PTR [ebp-0x14]
1002f2e5:	mov    ecx,DWORD PTR [ebp-0x18]
1002f2e8:	call   0x1002ea75
1002f2ed:	push   0x0
1002f2ef:	push   0x0
1002f2f1:	call   0x10047c54
1002f2f6:	int3   
1002f2f7:	push   0x8
1002f2f9:	mov    eax,0x1005fb9f
1002f2fe:	call   0x10059ca8
1002f303:	mov    eax,DWORD PTR [ebp+0x8]
1002f306:	and    DWORD PTR [ebp-0x4],0x0
1002f30a:	mov    DWORD PTR [ebp-0x14],eax
1002f30d:	cmp    DWORD PTR [ebp+0xc],0x0
1002f311:	jbe    0x1002f344
1002f313:	push   DWORD PTR [ebp+0x10]
1002f316:	mov    ecx,DWORD PTR [ebp+0x8]
1002f319:	call   0x1002f34a
1002f31e:	dec    DWORD PTR [ebp+0xc]
1002f321:	add    DWORD PTR [ebp+0x8],0x10
1002f325:	jmp    0x1002f30d
1002f327:	mov    esi,DWORD PTR [ebp-0x14]
1002f32a:	jmp    0x1002f336
1002f32c:	push   esi
1002f32d:	call   DWORD PTR ds:0x10066294
1002f333:	add    esi,0x10
1002f336:	cmp    esi,DWORD PTR [ebp+0x8]
1002f339:	jne    0x1002f32c
1002f33b:	push   0x0
1002f33d:	push   0x0
1002f33f:	call   0x10047c54
1002f344:	call   0x10059d4d
1002f349:	ret    
1002f34a:	push   0x0
1002f34c:	mov    eax,0x1005fb84
1002f351:	call   0x10059c75
1002f356:	mov    esi,ecx
1002f358:	and    DWORD PTR [ebp-0x4],0x0
1002f35c:	test   esi,esi
1002f35e:	je     0x1002f36c
1002f360:	push   DWORD PTR [ebp+0x8]
1002f363:	and    WORD PTR [esi],0x0
1002f367:	call   0x1002b0c4
1002f36c:	call   0x10059d4d
1002f371:	ret    0x4
1002f374:	push   0x8
1002f376:	mov    eax,0x10060144
1002f37b:	call   0x10059ca8
1002f380:	mov    esi,ecx
1002f382:	mov    eax,DWORD PTR [ebp+0xc]
1002f385:	and    DWORD PTR [ebp-0x4],0x0
1002f389:	mov    DWORD PTR [ebp-0x14],eax
1002f38c:	cmp    esi,DWORD PTR [ebp+0x8]
1002f38f:	je     0x1002f3c0
1002f391:	mov    ecx,DWORD PTR [ebp+0xc]
1002f394:	push   esi
1002f395:	call   0x1002f34a
1002f39a:	add    DWORD PTR [ebp+0xc],0x10
1002f39e:	add    esi,0x10
1002f3a1:	jmp    0x1002f38c
1002f3a3:	mov    esi,DWORD PTR [ebp-0x14]
1002f3a6:	jmp    0x1002f3b2
1002f3a8:	push   esi
1002f3a9:	call   DWORD PTR ds:0x10066294
1002f3af:	add    esi,0x10
1002f3b2:	cmp    esi,DWORD PTR [ebp+0xc]
1002f3b5:	jne    0x1002f3a8
1002f3b7:	push   0x0
1002f3b9:	push   0x0
1002f3bb:	call   0x10047c54
1002f3c0:	mov    eax,DWORD PTR [ebp+0xc]
1002f3c3:	call   0x10059d4d
1002f3c8:	ret    
1002f3c9:	int3   
1002f3ca:	int3   
1002f3cb:	int3   
1002f3cc:	int3   
1002f3cd:	int3   
1002f3ce:	int3   
1002f3cf:	int3   
1002f3d0:	push   eax
1002f3d1:	push   ecx
1002f3d2:	call   0x1005870c
1002f3d7:	add    esp,0x8
1002f3da:	cmp    eax,0x50
1002f3dd:	ja     0x1002f401
1002f3df:	movzx  edx,BYTE PTR [eax+0x1002f41c]
1002f3e6:	jmp    DWORD PTR [edx*4+0x1002f40c]
1002f3ed:	push   0x8007000e
1002f3f2:	call   0x10001f24
1002f3f7:	push   0x80070057
1002f3fc:	call   0x10001f24
1002f401:	push   0x80004005
1002f406:	call   0x10001f24
1002f40b:	ret    
1002f40c:	or     esi,esp
1002f40e:	add    dl,BYTE PTR [eax]
1002f410:	in     eax,dx
1002f411:	repz add dl,BYTE PTR [eax]
1002f414:	div    ebx
1002f416:	add    dl,BYTE PTR [eax]
1002f418:	add    esp,esi
1002f41a:	add    dl,BYTE PTR [eax]
1002f41c:	add    BYTE PTR [ebx],al
1002f41e:	add    eax,DWORD PTR [ebx]
1002f420:	add    eax,DWORD PTR [ebx]
1002f422:	add    eax,DWORD PTR [ebx]
1002f424:	add    eax,DWORD PTR [ebx]
1002f426:	add    eax,DWORD PTR [ebx]
1002f428:	add    DWORD PTR [ebx],eax
1002f42a:	add    eax,DWORD PTR [ebx]
1002f42c:	add    eax,DWORD PTR [ebx]
1002f42e:	add    eax,DWORD PTR [ebx]
1002f430:	add    eax,DWORD PTR [ebx]
1002f432:	add    al,BYTE PTR [ebx]
1002f434:	add    eax,DWORD PTR [ebx]
1002f436:	add    eax,DWORD PTR [ebx]
1002f438:	add    eax,DWORD PTR [ebx]
1002f43a:	add    eax,DWORD PTR [ebx]
1002f43c:	add    eax,DWORD PTR [ebx]
1002f43e:	add    al,BYTE PTR [ebx]
1002f440:	add    eax,DWORD PTR [ebx]
1002f442:	add    eax,DWORD PTR [ebx]
1002f444:	add    eax,DWORD PTR [ebx]
1002f446:	add    eax,DWORD PTR [ebx]
1002f448:	add    eax,DWORD PTR [ebx]
1002f44a:	add    eax,DWORD PTR [ebx]
1002f44c:	add    eax,DWORD PTR [ebx]
1002f44e:	add    eax,DWORD PTR [ebx]
1002f450:	add    eax,DWORD PTR [ebx]
1002f452:	add    eax,DWORD PTR [ebx]
1002f454:	add    eax,DWORD PTR [ebx]
1002f456:	add    eax,DWORD PTR [ebx]
1002f458:	add    eax,DWORD PTR [ebx]
1002f45a:	add    eax,DWORD PTR [ebx]
1002f45c:	add    eax,DWORD PTR [ebx]
1002f45e:	add    eax,DWORD PTR [ebx]
1002f460:	add    eax,DWORD PTR [ebx]
1002f462:	add    eax,DWORD PTR [ebx]
1002f464:	add    eax,DWORD PTR [ebx]
1002f466:	add    eax,DWORD PTR [ebx]
1002f468:	add    eax,DWORD PTR [ebx]
1002f46a:	add    eax,DWORD PTR [ebx]
1002f46c:	add    ah,cl
1002f46e:	int3   
1002f46f:	int3   
1002f470:	mov    eax,esi
1002f472:	mov    edx,0xe3
1002f477:	push   edi
1002f478:	mov    ecx,DWORD PTR [eax+0x4]
1002f47b:	mov    edi,DWORD PTR [eax]
1002f47d:	xor    edi,ecx
1002f47f:	and    edi,0x7ffffffe
1002f485:	xor    edi,DWORD PTR [eax]
1002f487:	and    cl,0x1
1002f48a:	shr    edi,1
1002f48c:	sub    edx,0x1
1002f48f:	neg    cl
1002f491:	sbb    ecx,ecx
1002f493:	and    ecx,0x9908b0df
1002f499:	xor    edi,ecx
1002f49b:	xor    edi,DWORD PTR [eax+0x634]
1002f4a1:	add    eax,0x4
1002f4a4:	test   edx,edx
1002f4a6:	mov    DWORD PTR [eax-0x4],edi
1002f4a9:	jne    0x1002f478
1002f4ab:	mov    edx,0x18c
1002f4b0:	mov    ecx,DWORD PTR [eax+0x4]
1002f4b3:	mov    edi,DWORD PTR [eax]
1002f4b5:	xor    edi,ecx
1002f4b7:	and    edi,0x7ffffffe
1002f4bd:	xor    edi,DWORD PTR [eax]
1002f4bf:	and    cl,0x1
1002f4c2:	shr    edi,1
1002f4c4:	neg    cl
1002f4c6:	sbb    ecx,ecx
1002f4c8:	and    ecx,0x9908b0df
1002f4ce:	xor    edi,ecx
1002f4d0:	xor    edi,DWORD PTR [eax-0x38c]
1002f4d6:	add    eax,0x4
1002f4d9:	sub    edx,0x1
1002f4dc:	mov    DWORD PTR [eax-0x4],edi
1002f4df:	jne    0x1002f4b0
1002f4e1:	mov    ecx,DWORD PTR [esi]
1002f4e3:	mov    edx,DWORD PTR [eax]
1002f4e5:	xor    edx,ecx
1002f4e7:	and    edx,0x7ffffffe
1002f4ed:	xor    edx,DWORD PTR [eax]
1002f4ef:	and    cl,0x1
1002f4f2:	shr    edx,1
1002f4f4:	neg    cl
1002f4f6:	pop    edi
1002f4f7:	sbb    ecx,ecx
1002f4f9:	and    ecx,0x9908b0df
1002f4ff:	xor    edx,ecx
1002f501:	xor    edx,DWORD PTR [eax-0x38c]
1002f507:	mov    DWORD PTR [eax],edx
1002f509:	mov    DWORD PTR [esi+0x9c4],0x270
1002f513:	mov    DWORD PTR [esi+0x9c0],esi
1002f519:	ret    
1002f51a:	int3   
1002f51b:	int3   
1002f51c:	int3   
1002f51d:	int3   
1002f51e:	int3   
1002f51f:	int3   
1002f520:	push   esi
1002f521:	mov    esi,eax
1002f523:	push   edi
1002f524:	mov    ecx,0x1
1002f529:	mov    DWORD PTR [esi],edx
1002f52b:	jmp    0x1002f530
1002f52d:	lea    ecx,[ecx+0x0]
1002f530:	mov    edx,DWORD PTR [eax]
1002f532:	mov    edi,edx
1002f534:	shr    edi,0x1e
1002f537:	xor    edi,edx
1002f539:	imul   edi,edi,0x6c078965
1002f53f:	add    edi,ecx
1002f541:	mov    DWORD PTR [eax+0x4],edi
1002f544:	add    ecx,0x1
1002f547:	add    eax,0x4
1002f54a:	cmp    ecx,0x270
1002f550:	jl     0x1002f530
1002f552:	call   0x1002f470
1002f557:	pop    edi
1002f558:	pop    esi
1002f559:	ret    
1002f55a:	int3   
1002f55b:	int3   
1002f55c:	int3   
1002f55d:	int3   
1002f55e:	int3   
1002f55f:	int3   
1002f560:	push   esi
1002f561:	mov    esi,eax
1002f563:	cmp    DWORD PTR [esi+0x9c4],0x0
1002f56a:	jne    0x1002f571
1002f56c:	call   0x1002f470
1002f571:	mov    eax,DWORD PTR [esi+0x9c0]
1002f577:	add    DWORD PTR [esi+0x9c4],0xffffffff
1002f57e:	mov    ecx,DWORD PTR [eax]
1002f580:	add    eax,0x4
1002f583:	mov    DWORD PTR [esi+0x9c0],eax
1002f589:	mov    eax,ecx
1002f58b:	shr    eax,0xb
1002f58e:	xor    ecx,eax
1002f590:	mov    edx,ecx
1002f592:	and    edx,0xff3a58ad
1002f598:	shl    edx,0x7
1002f59b:	xor    ecx,edx
1002f59d:	mov    eax,ecx
1002f59f:	and    eax,0xffffdf8c
1002f5a4:	shl    eax,0xf
1002f5a7:	xor    ecx,eax
1002f5a9:	mov    eax,ecx
1002f5ab:	shr    eax,0x12
1002f5ae:	xor    eax,ecx
1002f5b0:	and    eax,0x3f
1002f5b3:	cmp    eax,0x23
1002f5b6:	ja     0x1002f563
1002f5b8:	pop    esi
1002f5b9:	ret    
1002f5ba:	int3   
1002f5bb:	int3   
1002f5bc:	int3   
1002f5bd:	int3   
1002f5be:	int3   
1002f5bf:	int3   
1002f5c0:	sub    esp,0x9cc
1002f5c6:	push   esi
1002f5c7:	push   edi
1002f5c8:	add    edx,0x20
1002f5cb:	lea    eax,[esp+0x8]
1002f5cf:	call   0x1002f520
1002f5d4:	mov    eax,ds:0x1007fa44
1002f5d9:	mov    WORD PTR [ebx],0x0
1002f5de:	mov    edx,eax
1002f5e0:	mov    cx,WORD PTR [eax]
1002f5e3:	add    eax,0x2
1002f5e6:	test   cx,cx
1002f5e9:	jne    0x1002f5e0
1002f5eb:	mov    edi,ebx
1002f5ed:	sub    eax,edx
1002f5ef:	add    edi,0xfffffffe
1002f5f2:	mov    cx,WORD PTR [edi+0x2]
1002f5f6:	add    edi,0x2
1002f5f9:	test   cx,cx
1002f5fc:	jne    0x1002f5f2
1002f5fe:	mov    ecx,eax
1002f600:	shr    ecx,0x2
1002f603:	mov    esi,edx
1002f605:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002f607:	mov    ecx,eax
1002f609:	and    ecx,0x3
1002f60c:	mov    eax,ebx
1002f60e:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
1002f610:	lea    edx,[eax+0x2]
1002f613:	mov    cx,WORD PTR [eax]
1002f616:	add    eax,0x2
1002f619:	test   cx,cx
1002f61c:	jne    0x1002f613
1002f61e:	sub    eax,edx
1002f620:	sar    eax,1
1002f622:	mov    esi,eax
1002f624:	mov    edi,0x5
1002f629:	lea    esp,[esp+0x0]
1002f630:	lea    eax,[esp+0x8]
1002f634:	call   0x1002f560
1002f639:	cmp    eax,0xa
1002f63c:	jae    0x1002f643
1002f63e:	add    eax,0x30
1002f641:	jmp    0x1002f646
1002f643:	add    eax,0x57
1002f646:	movzx  eax,ax
1002f649:	mov    WORD PTR [ebx+esi*2],ax
1002f64d:	add    esi,0x1
1002f650:	sub    edi,0x1
1002f653:	mov    WORD PTR [ebx+esi*2],0x0
1002f659:	jne    0x1002f630
1002f65b:	pop    edi
1002f65c:	pop    esi
1002f65d:	add    esp,0x9cc
1002f663:	ret    
1002f664:	int3   
1002f665:	int3   
1002f666:	int3   
1002f667:	int3   
1002f668:	int3   
1002f669:	int3   
1002f66a:	int3   
1002f66b:	int3   
1002f66c:	int3   
1002f66d:	int3   
1002f66e:	int3   
1002f66f:	int3   
1002f670:	push   ebp
1002f671:	mov    ebp,esp
1002f673:	and    esp,0xfffffff8
1002f676:	push   0xffffffff
1002f678:	push   0x1005f9b0
1002f67d:	mov    eax,fs:0x0
1002f683:	push   eax
1002f684:	sub    esp,0x50
1002f687:	push   ebx
1002f688:	push   esi
1002f689:	push   edi
1002f68a:	mov    eax,ds:0x1007e030
1002f68f:	xor    eax,esp
1002f691:	push   eax
1002f692:	lea    eax,[esp+0x60]
1002f696:	mov    fs:0x0,eax
1002f69c:	xor    ebx,ebx
1002f69e:	push   0x4000
1002f6a3:	mov    DWORD PTR [esp+0x18],ebx
1002f6a7:	call   0x100439b6
1002f6ac:	mov    edi,eax
1002f6ae:	push   0x38
1002f6b0:	mov    DWORD PTR [esp+0x70],ebx
1002f6b4:	push   0x10073024
1002f6b9:	lea    eax,[esp+0x30]
1002f6bd:	push   0x2f
1002f6bf:	push   eax
1002f6c0:	mov    DWORD PTR [esp+0x58],ebx
1002f6c4:	mov    DWORD PTR [esp+0x5c],ebx
1002f6c8:	mov    DWORD PTR [esp+0x60],ebx
1002f6cc:	mov    DWORD PTR [esp+0x3c],ebx
1002f6d0:	mov    DWORD PTR [esp+0x38],ebx
1002f6d4:	call   0x10052b70
1002f6d9:	add    esp,0x14
1002f6dc:	test   eax,eax
1002f6de:	je     0x1002f70d
1002f6e0:	mov    esi,DWORD PTR [ebp+0x8]
1002f6e3:	push   ebx
1002f6e4:	mov    DWORD PTR [esp+0x1c],ebx
1002f6e8:	mov    DWORD PTR [esi],ebx
1002f6ea:	call   0x100430d2
1002f6ef:	push   edi
1002f6f0:	call   0x100430d2
1002f6f5:	add    esp,0x8
1002f6f8:	mov    eax,esi
1002f6fa:	mov    ecx,DWORD PTR [esp+0x60]
1002f6fe:	mov    DWORD PTR fs:0x0,ecx
1002f705:	pop    ecx
1002f706:	pop    edi
1002f707:	pop    esi
1002f708:	pop    ebx
1002f709:	mov    esp,ebp
1002f70b:	pop    ebp
1002f70c:	ret    
1002f70d:	mov    ecx,DWORD PTR [ebp+0x10]
1002f710:	mov    edx,DWORD PTR [ebp+0xc]
1002f713:	mov    DWORD PTR [esp+0x28],ecx
1002f717:	mov    DWORD PTR [esp+0x24],edx
1002f71b:	jmp    0x1002f720
1002f71d:	lea    ecx,[ecx+0x0]
1002f720:	lea    ecx,[esp+0x24]
1002f724:	lea    eax,[ebx+edi*1]
1002f727:	push   0x4
1002f729:	push   ecx
1002f72a:	mov    DWORD PTR [esp+0x3c],0x4000
1002f732:	mov    DWORD PTR [esp+0x38],eax
1002f736:	call   0x10052d50
1002f73b:	mov    esi,eax
1002f73d:	add    esp,0x8
1002f740:	cmp    esi,0xfffffffc
1002f743:	mov    DWORD PTR [esp+0x18],esi
1002f747:	jl     0x1002f75b
1002f749:	cmp    esi,0xfffffffd
1002f74c:	jle    0x1002f7f2
1002f752:	cmp    esi,0x2
1002f755:	je     0x1002f7f2
1002f75b:	mov    ecx,DWORD PTR [esp+0x34]
1002f75f:	mov    eax,0x4000
1002f764:	sub    eax,ecx
1002f766:	add    ebx,eax
1002f768:	test   ecx,ecx
1002f76a:	mov    DWORD PTR [esp+0x14],ebx
1002f76e:	jne    0x1002f7d9
1002f770:	mov    esi,edi
1002f772:	mov    DWORD PTR [esp+0x1c],ecx
1002f776:	mov    DWORD PTR [esp+0x20],esi
1002f77a:	add    ebx,0x4000
1002f780:	push   ebx
1002f781:	mov    BYTE PTR [esp+0x6c],0x1
1002f786:	call   0x100439b6
1002f78b:	mov    edi,eax
1002f78d:	add    esp,0x4
1002f790:	test   edi,edi
1002f792:	mov    DWORD PTR [esp+0x10],0x0
1002f79a:	je     0x1002f7a6
1002f79c:	push   0x0
1002f79e:	call   0x100430d2
1002f7a3:	add    esp,0x4
1002f7a6:	mov    edx,DWORD PTR [esp+0x10]
1002f7aa:	push   edx
1002f7ab:	call   0x100430d2
1002f7b0:	mov    ebx,DWORD PTR [esp+0x18]
1002f7b4:	push   ebx
1002f7b5:	push   esi
1002f7b6:	push   edi
1002f7b7:	call   0x10045420
1002f7bc:	push   esi
1002f7bd:	mov    BYTE PTR [esp+0x7c],0x0
1002f7c2:	call   0x100430d2
1002f7c7:	add    esp,0x14
1002f7ca:	cmp    DWORD PTR [esp+0x34],0x0
1002f7cf:	je     0x1002f720
1002f7d5:	mov    esi,DWORD PTR [esp+0x18]
1002f7d9:	lea    ecx,[esp+0x24]
1002f7dd:	push   ecx
1002f7de:	call   0x10054340
1002f7e3:	add    esp,0x4
1002f7e6:	cmp    esi,0x1
1002f7e9:	jne    0x1002f832
1002f7eb:	mov    edx,DWORD PTR [ebp+0x14]
1002f7ee:	mov    DWORD PTR [edx],ebx
1002f7f0:	jmp    0x1002f856
1002f7f2:	lea    eax,[esp+0x24]
1002f7f6:	push   eax
1002f7f7:	call   0x10054340
1002f7fc:	mov    esi,DWORD PTR [ebp+0x8]
1002f7ff:	push   0x0
1002f801:	mov    DWORD PTR [esp+0x28],0x0
1002f809:	mov    DWORD PTR [esi],0x0
1002f80f:	call   0x100430d2
1002f814:	push   edi
1002f815:	call   0x100430d2
1002f81a:	add    esp,0xc
1002f81d:	mov    eax,esi
1002f81f:	mov    ecx,DWORD PTR [esp+0x60]
1002f823:	mov    DWORD PTR fs:0x0,ecx
1002f82a:	pop    ecx
1002f82b:	pop    edi
1002f82c:	pop    esi
1002f82d:	pop    ebx
1002f82e:	mov    esp,ebp
1002f830:	pop    ebp
1002f831:	ret    
1002f832:	test   edi,edi
1002f834:	mov    DWORD PTR [esp+0x18],0x0
1002f83c:	je     0x1002f847
1002f83e:	push   edi
1002f83f:	call   0x100430d2
1002f844:	add    esp,0x4
1002f847:	mov    eax,DWORD PTR [esp+0x18]
1002f84b:	push   eax
1002f84c:	xor    edi,edi
1002f84e:	call   0x100430d2
1002f853:	add    esp,0x4
1002f856:	mov    esi,DWORD PTR [ebp+0x8]
1002f859:	push   0x0
1002f85b:	mov    DWORD PTR [esi],edi
1002f85d:	call   0x100430d2
1002f862:	add    esp,0x4
1002f865:	mov    eax,esi
1002f867:	mov    ecx,DWORD PTR [esp+0x60]
1002f86b:	mov    DWORD PTR fs:0x0,ecx
1002f872:	pop    ecx
1002f873:	pop    edi
1002f874:	pop    esi
1002f875:	pop    ebx
1002f876:	mov    esp,ebp
1002f878:	pop    ebp
1002f879:	ret    
1002f87a:	int3   
1002f87b:	int3   
1002f87c:	int3   
1002f87d:	int3   
1002f87e:	int3   
1002f87f:	int3   
1002f880:	push   0xffffffff
1002f882:	push   0x1005f980
1002f887:	mov    eax,fs:0x0
1002f88d:	push   eax
1002f88e:	sub    esp,0x48
1002f891:	push   ebx
1002f892:	push   ebp
1002f893:	push   esi
1002f894:	push   edi
1002f895:	mov    eax,ds:0x1007e030
1002f89a:	xor    eax,esp
1002f89c:	push   eax
1002f89d:	lea    eax,[esp+0x5c]
1002f8a1:	mov    fs:0x0,eax
1002f8a7:	mov    eax,DWORD PTR [esp+0x74]
1002f8ab:	xor    ebx,ebx
1002f8ad:	mov    ebp,0x4000
1002f8b2:	cmp    eax,ebp
1002f8b4:	mov    DWORD PTR [esp+0x18],ebx
1002f8b8:	jae    0x1002f8c6
1002f8ba:	cmp    eax,0x20
1002f8bd:	mov    ebp,eax
1002f8bf:	jge    0x1002f8c6
1002f8c1:	mov    ebp,0x20
1002f8c6:	push   ebp
1002f8c7:	call   0x100439b6
1002f8cc:	mov    edi,eax
1002f8ce:	mov    eax,DWORD PTR [esp+0x80]
1002f8d5:	push   0x38
1002f8d7:	push   0x10073024
1002f8dc:	push   ebx
1002f8dd:	push   0x8
1002f8df:	push   eax
1002f8e0:	mov    DWORD PTR [esp+0x7c],ebx
1002f8e4:	push   0x8
1002f8e6:	lea    ecx,[esp+0x3c]
1002f8ea:	push   0x9
1002f8ec:	push   ecx
1002f8ed:	xor    esi,esi
1002f8ef:	mov    DWORD PTR [esp+0x64],ebx
1002f8f3:	mov    DWORD PTR [esp+0x68],ebx
1002f8f7:	mov    DWORD PTR [esp+0x6c],ebx
1002f8fb:	mov    DWORD PTR [esp+0x48],ebx
1002f8ff:	mov    DWORD PTR [esp+0x44],ebx
1002f903:	call   0x100528f0
1002f908:	add    esp,0x24
1002f90b:	test   eax,eax
1002f90d:	je     0x1002f92d
1002f90f:	mov    esi,DWORD PTR [esp+0x6c]
1002f913:	push   ebx
1002f914:	mov    DWORD PTR [esp+0x78],ebx
1002f918:	mov    DWORD PTR [esi],ebx
1002f91a:	call   0x100430d2
1002f91f:	push   edi
1002f920:	call   0x100430d2
1002f925:	add    esp,0x8
1002f928:	jmp    0x1002fa22
1002f92d:	mov    edx,DWORD PTR [esp+0x74]
1002f931:	mov    eax,DWORD PTR [esp+0x70]
1002f935:	mov    DWORD PTR [esp+0x24],edx
1002f939:	mov    DWORD PTR [esp+0x20],eax
1002f93d:	lea    ecx,[ecx+0x0]
1002f940:	lea    edx,[esp+0x20]
1002f944:	lea    ecx,[esi+edi*1]
1002f947:	push   0x4
1002f949:	push   edx
1002f94a:	mov    DWORD PTR [esp+0x38],ebp
1002f94e:	mov    DWORD PTR [esp+0x34],ecx
1002f952:	call   0x10051320
1002f957:	mov    ecx,DWORD PTR [esp+0x38]
1002f95b:	mov    DWORD PTR [esp+0x20],eax
1002f95f:	mov    eax,ebp
1002f961:	sub    eax,ecx
1002f963:	add    esp,0x8
1002f966:	add    esi,eax
1002f968:	cmp    ecx,ebx
1002f96a:	jne    0x1002f9d7
1002f96c:	mov    ebx,edi
1002f96e:	mov    DWORD PTR [esp+0x14],0x0
1002f976:	mov    DWORD PTR [esp+0x1c],ebx
1002f97a:	lea    eax,[esi+ebp*1]
1002f97d:	push   eax
1002f97e:	mov    BYTE PTR [esp+0x68],0x1
1002f983:	call   0x100439b6
1002f988:	mov    edi,eax
1002f98a:	add    esp,0x4
1002f98d:	test   edi,edi
1002f98f:	mov    DWORD PTR [esp+0x14],edi
1002f993:	mov    DWORD PTR [esp+0x74],0x0
1002f99b:	je     0x1002f9a7
1002f99d:	push   0x0
1002f99f:	call   0x100430d2
1002f9a4:	add    esp,0x4
1002f9a7:	mov    ecx,DWORD PTR [esp+0x74]
1002f9ab:	push   ecx
1002f9ac:	call   0x100430d2
1002f9b1:	mov    edx,DWORD PTR [esp+0x18]
1002f9b5:	push   esi
1002f9b6:	push   ebx
1002f9b7:	push   edx
1002f9b8:	call   0x10045420
1002f9bd:	push   ebx
1002f9be:	mov    BYTE PTR [esp+0x78],0x0
1002f9c3:	call   0x100430d2
1002f9c8:	xor    ebx,ebx
1002f9ca:	add    esp,0x14
1002f9cd:	cmp    DWORD PTR [esp+0x30],ebx
1002f9d1:	je     0x1002f940
1002f9d7:	lea    eax,[esp+0x20]
1002f9db:	push   eax
1002f9dc:	call   0x10051b00
1002f9e1:	add    esp,0x4
1002f9e4:	cmp    DWORD PTR [esp+0x18],0x1
1002f9e9:	jne    0x1002f9f3
1002f9eb:	mov    ecx,DWORD PTR [esp+0x78]
1002f9ef:	mov    DWORD PTR [ecx],esi
1002f9f1:	jmp    0x1002fa13
1002f9f3:	cmp    edi,ebx
1002f9f5:	mov    DWORD PTR [esp+0x74],ebx
1002f9f9:	je     0x1002fa04
1002f9fb:	push   edi
1002f9fc:	call   0x100430d2
1002fa01:	add    esp,0x4
1002fa04:	mov    edx,DWORD PTR [esp+0x74]
1002fa08:	push   edx
1002fa09:	xor    edi,edi
1002fa0b:	call   0x100430d2
1002fa10:	add    esp,0x4
1002fa13:	mov    esi,DWORD PTR [esp+0x6c]
1002fa17:	push   ebx
1002fa18:	mov    DWORD PTR [esi],edi
1002fa1a:	call   0x100430d2
1002fa1f:	add    esp,0x4
1002fa22:	mov    eax,esi
1002fa24:	mov    ecx,DWORD PTR [esp+0x5c]
1002fa28:	mov    DWORD PTR fs:0x0,ecx
1002fa2f:	pop    ecx
1002fa30:	pop    edi
1002fa31:	pop    esi
1002fa32:	pop    ebp
1002fa33:	pop    ebx
1002fa34:	add    esp,0x54
1002fa37:	ret    
1002fa38:	int3   
1002fa39:	int3   
1002fa3a:	int3   
1002fa3b:	int3   
1002fa3c:	int3   
1002fa3d:	int3   
1002fa3e:	int3   
1002fa3f:	int3   
1002fa40:	push   ecx
1002fa41:	push   0xf
1002fa43:	push   eax
1002fa44:	push   ecx
1002fa45:	push   edx
1002fa46:	lea    eax,[esp+0x10]
1002fa4a:	push   eax
1002fa4b:	mov    DWORD PTR [esp+0x14],0x0
1002fa53:	call   0x1002f880
1002fa58:	mov    ecx,DWORD PTR [eax]
1002fa5a:	mov    DWORD PTR [eax],0x0
1002fa60:	mov    DWORD PTR [esi],ecx
1002fa62:	mov    ecx,DWORD PTR [esp+0x14]
1002fa66:	add    esp,0x14
1002fa69:	push   ecx
1002fa6a:	call   0x100430d2
1002fa6f:	mov    eax,esi
1002fa71:	add    esp,0x8
1002fa74:	ret    
1002fa75:	int3   
1002fa76:	int3   
1002fa77:	int3   
1002fa78:	int3   
1002fa79:	int3   
1002fa7a:	int3   
1002fa7b:	int3   
1002fa7c:	int3   
1002fa7d:	int3   
1002fa7e:	int3   
1002fa7f:	int3   
1002fa80:	push   ecx
1002fa81:	push   0x1f
1002fa83:	push   eax
1002fa84:	push   ecx
1002fa85:	push   edx
1002fa86:	lea    eax,[esp+0x10]
1002fa8a:	push   eax
1002fa8b:	mov    DWORD PTR [esp+0x14],0x0
1002fa93:	call   0x1002f880
1002fa98:	mov    ecx,DWORD PTR [eax]
1002fa9a:	mov    DWORD PTR [eax],0x0
1002faa0:	mov    DWORD PTR [esi],ecx
1002faa2:	mov    ecx,DWORD PTR [esp+0x14]
1002faa6:	add    esp,0x14
1002faa9:	push   ecx
1002faaa:	call   0x100430d2
1002faaf:	mov    eax,esi
1002fab1:	add    esp,0x8
1002fab4:	ret    
1002fab5:	int3   
1002fab6:	int3   
1002fab7:	int3   
1002fab8:	int3   
1002fab9:	int3   
1002faba:	int3   
1002fabb:	int3   
1002fabc:	int3   
1002fabd:	int3   
1002fabe:	int3   
1002fabf:	int3   
1002fac0:	push   ebp
1002fac1:	mov    ebp,esp
1002fac3:	sub    esp,0x8
1002fac6:	mov    eax,ds:0x1007e030
1002facb:	xor    eax,ebp
1002facd:	mov    DWORD PTR [ebp-0x4],eax
1002fad0:	push   esi
1002fad1:	xor    esi,esi
1002fad3:	push   edi
1002fad4:	mov    DWORD PTR [ebp-0x8],esi
1002fad7:	call   DWORD PTR ds:0x1007efec
1002fadd:	push   0x1007302c
1002fae2:	mov    DWORD PTR [ebp-0x8],eax
1002fae5:	call   DWORD PTR ds:0x100660c4
1002faeb:	add    eax,0x1
1002faee:	cmp    eax,0x3fffffff
1002faf3:	jg     0x1002fb2d
1002faf5:	lea    esi,[eax+eax*1]
1002faf8:	mov    eax,esi
1002fafa:	call   0x1004b990
1002faff:	mov    edi,esp
1002fb01:	test   edi,edi
1002fb03:	je     0x1002fb2b
1002fb05:	mov    eax,DWORD PTR [ebp-0x8]
1002fb08:	push   0x0
1002fb0a:	push   0x0
1002fb0c:	push   esi
1002fb0d:	push   edi
1002fb0e:	push   0xffffffff
1002fb10:	push   0x1007302c
1002fb15:	push   0x0
1002fb17:	push   eax
1002fb18:	mov    BYTE PTR [edi],0x0
1002fb1b:	call   DWORD PTR ds:0x100660b8
1002fb21:	mov    esi,eax
1002fb23:	neg    esi
1002fb25:	sbb    esi,esi
1002fb27:	and    esi,edi
1002fb29:	jmp    0x1002fb2d
1002fb2b:	xor    esi,esi
1002fb2d:	mov    DWORD PTR [ebx+0x18],0xf
1002fb34:	mov    DWORD PTR [ebx+0x14],0x0
1002fb3b:	push   esi
1002fb3c:	mov    BYTE PTR [ebx+0x4],0x0
1002fb40:	call   0x10043250
1002fb45:	add    esp,0x4
1002fb48:	push   eax
1002fb49:	push   esi
1002fb4a:	mov    ecx,ebx
1002fb4c:	call   0x1000133f
1002fb51:	mov    eax,ebx
1002fb53:	lea    esp,[ebp-0x10]
1002fb56:	pop    edi
1002fb57:	pop    esi
1002fb58:	mov    ecx,DWORD PTR [ebp-0x4]
1002fb5b:	xor    ecx,ebp
1002fb5d:	call   0x100430d7
1002fb62:	mov    esp,ebp
1002fb64:	pop    ebp
1002fb65:	ret    
1002fb66:	int3   
1002fb67:	int3   
1002fb68:	int3   
1002fb69:	int3   
1002fb6a:	int3   
1002fb6b:	int3   
1002fb6c:	int3   
1002fb6d:	int3   
1002fb6e:	int3   
1002fb6f:	int3   
1002fb70:	sub    esp,0x1c
1002fb73:	lea    eax,[esp+0x8]
1002fb77:	push   eax
1002fb78:	call   DWORD PTR ds:0x10066140
1002fb7e:	lea    ecx,[esp]
1002fb81:	push   ecx
1002fb82:	lea    edx,[esp+0xc]
1002fb86:	push   edx
1002fb87:	call   DWORD PTR ds:0x10066104
1002fb8d:	mov    edx,DWORD PTR [esp+0x4]
1002fb91:	mov    eax,DWORD PTR [esp]
1002fb94:	add    esp,0x1c
1002fb97:	ret    
1002fb98:	int3   
1002fb99:	int3   
1002fb9a:	int3   
1002fb9b:	int3   
1002fb9c:	int3   
1002fb9d:	int3   
1002fb9e:	int3   
1002fb9f:	int3   
1002fba0:	push   ebp
1002fba1:	mov    ebp,esp
1002fba3:	and    esp,0xfffffff8
1002fba6:	sub    esp,0x8
1002fba9:	mov    eax,DWORD PTR [ebp+0x8]
1002fbac:	push   ebx
1002fbad:	push   edi
1002fbae:	xor    ecx,ecx
1002fbb0:	push   0xffffffff
1002fbb2:	mov    DWORD PTR [esi+0x14],ecx
1002fbb5:	push   ecx
1002fbb6:	mov    DWORD PTR [esi+0x18],0xf
1002fbbd:	lea    edi,[esi+0x4]
1002fbc0:	mov    DWORD PTR [esp+0x10],ecx
1002fbc4:	mov    BYTE PTR [edi],cl
1002fbc6:	push   eax
1002fbc7:	mov    ecx,esi
1002fbc9:	call   0x10001245
1002fbce:	mov    eax,DWORD PTR [esi+0x18]
1002fbd1:	cmp    eax,0x10
1002fbd4:	jb     0x1002fbda
1002fbd6:	mov    ebx,DWORD PTR [edi]
1002fbd8:	jmp    0x1002fbdc
1002fbda:	mov    ebx,edi
1002fbdc:	test   ebx,ebx
1002fbde:	je     0x1002fc03
1002fbe0:	cmp    eax,0x10
1002fbe3:	jb     0x1002fbe9
1002fbe5:	mov    ecx,DWORD PTR [edi]
1002fbe7:	jmp    0x1002fbeb
1002fbe9:	mov    ecx,edi
1002fbeb:	cmp    ecx,ebx
1002fbed:	ja     0x1002fc03
1002fbef:	cmp    eax,0x10
1002fbf2:	jb     0x1002fbf8
1002fbf4:	mov    eax,DWORD PTR [edi]
1002fbf6:	jmp    0x1002fbfa
1002fbf8:	mov    eax,edi
1002fbfa:	mov    ecx,DWORD PTR [esi+0x14]
1002fbfd:	add    ecx,eax
1002fbff:	cmp    ebx,ecx
1002fc01:	jbe    0x1002fc08
1002fc03:	call   0x100435f0
1002fc08:	mov    edx,DWORD PTR [esi+0x18]
1002fc0b:	cmp    edx,0x10
1002fc0e:	mov    DWORD PTR [esp+0xc],ebx
1002fc12:	jb     0x1002fc18
1002fc14:	mov    eax,DWORD PTR [edi]
1002fc16:	jmp    0x1002fc1a
1002fc18:	mov    eax,edi
1002fc1a:	mov    ecx,DWORD PTR [esi+0x14]
1002fc1d:	lea    ebx,[ecx+eax*1]
1002fc20:	test   ebx,ebx
1002fc22:	je     0x1002fc44
1002fc24:	cmp    edx,0x10
1002fc27:	jb     0x1002fc2d
1002fc29:	mov    eax,DWORD PTR [edi]
1002fc2b:	jmp    0x1002fc2f
1002fc2d:	mov    eax,edi
1002fc2f:	cmp    eax,ebx
1002fc31:	ja     0x1002fc44
1002fc33:	cmp    edx,0x10
1002fc36:	jb     0x1002fc3c
1002fc38:	mov    eax,DWORD PTR [edi]
1002fc3a:	jmp    0x1002fc3e
1002fc3c:	mov    eax,edi
1002fc3e:	add    ecx,eax
1002fc40:	cmp    ebx,ecx
1002fc42:	jbe    0x1002fc49
1002fc44:	call   0x100435f0
1002fc49:	mov    ecx,DWORD PTR [esp+0xc]
1002fc4d:	cmp    ecx,ebx
1002fc4f:	je     0x1002fccb
1002fc51:	cmp    esi,0xfffffffe
1002fc54:	je     0x1002fc92
1002fc56:	cmp    DWORD PTR [esi+0x18],0x10
1002fc5a:	jb     0x1002fc60
1002fc5c:	mov    eax,DWORD PTR [edi]
1002fc5e:	jmp    0x1002fc62
1002fc60:	mov    eax,edi
1002fc62:	mov    edx,DWORD PTR [esi+0x14]
1002fc65:	add    edx,eax
1002fc67:	cmp    ecx,edx
1002fc69:	jb     0x1002fc74
1002fc6b:	call   0x100435f0
1002fc70:	mov    ecx,DWORD PTR [esp+0xc]
1002fc74:	cmp    DWORD PTR [esi+0x18],0x10
1002fc78:	jb     0x1002fc7e
1002fc7a:	mov    eax,DWORD PTR [edi]
1002fc7c:	jmp    0x1002fc80
1002fc7e:	mov    eax,edi
1002fc80:	mov    edx,DWORD PTR [esi+0x14]
1002fc83:	add    edx,eax
1002fc85:	cmp    ecx,edx
1002fc87:	jb     0x1002fc92
1002fc89:	call   0x100435f0
1002fc8e:	mov    ecx,DWORD PTR [esp+0xc]
1002fc92:	movsx  eax,BYTE PTR [ecx]
1002fc95:	push   eax
1002fc96:	call   0x10046071
1002fc9b:	mov    ebx,DWORD PTR [esp+0x10]
1002fc9f:	add    esp,0x4
1002fca2:	cmp    esi,0xfffffffe
1002fca5:	mov    BYTE PTR [ebx],al
1002fca7:	je     0x1002fcc3
1002fca9:	cmp    DWORD PTR [esi+0x18],0x10
1002fcad:	jb     0x1002fcb3
1002fcaf:	mov    eax,DWORD PTR [edi]
1002fcb1:	jmp    0x1002fcb5
1002fcb3:	mov    eax,edi
1002fcb5:	mov    ecx,DWORD PTR [esi+0x14]
1002fcb8:	add    ecx,eax
1002fcba:	cmp    ebx,ecx
1002fcbc:	jb     0x1002fcc3
1002fcbe:	call   0x100435f0
1002fcc3:	add    ebx,0x1
1002fcc6:	jmp    0x1002fc08
1002fccb:	pop    edi
1002fccc:	mov    eax,esi
1002fcce:	pop    ebx
1002fccf:	mov    esp,ebp
1002fcd1:	pop    ebp
1002fcd2:	ret    
1002fcd3:	int3   
1002fcd4:	int3   
1002fcd5:	int3   
1002fcd6:	int3   
1002fcd7:	int3   
1002fcd8:	int3   
1002fcd9:	int3   
1002fcda:	int3   
1002fcdb:	int3   
1002fcdc:	int3   
1002fcdd:	int3   
1002fcde:	int3   
1002fcdf:	int3   
1002fce0:	push   0xffffffff
1002fce2:	push   0x10060b35
1002fce7:	mov    eax,fs:0x0
1002fced:	push   eax
1002fcee:	sub    esp,0xa0
1002fcf4:	mov    eax,ds:0x1007e030
1002fcf9:	xor    eax,esp
1002fcfb:	mov    DWORD PTR [esp+0x9c],eax
1002fd02:	push   ebx
1002fd03:	push   ebp
1002fd04:	push   esi
1002fd05:	push   edi
1002fd06:	mov    eax,ds:0x1007e030
1002fd0b:	xor    eax,esp
1002fd0d:	push   eax
1002fd0e:	lea    eax,[esp+0xb4]
1002fd15:	mov    fs:0x0,eax
1002fd1b:	mov    ebp,DWORD PTR [esp+0xc4]
1002fd22:	xor    ebx,ebx
1002fd24:	mov    DWORD PTR [esp+0x34],ebx
1002fd28:	mov    eax,ds:0x10080a74
1002fd2d:	mov    edx,DWORD PTR [eax+0xc]
1002fd30:	mov    edi,ecx
1002fd32:	mov    ecx,0x10080a74
1002fd37:	mov    DWORD PTR [esp+0x2c],ebp
1002fd3b:	mov    DWORD PTR [esp+0x1c],edi
1002fd3f:	call   edx
1002fd41:	lea    esi,[eax+0x10]
1002fd44:	mov    DWORD PTR [esp+0x20],esi
1002fd48:	mov    DWORD PTR [esp+0xbc],ebx
1002fd4f:	mov    eax,DWORD PTR [edi+0x14]
1002fd52:	cmp    eax,ebx
1002fd54:	mov    DWORD PTR [esp+0x28],ebx
1002fd58:	jbe    0x100300e8
1002fd5e:	mov    edi,edi
1002fd60:	cmp    DWORD PTR [esp+0x28],0x0
1002fd65:	jle    0x1002ff4d
1002fd6b:	sub    DWORD PTR [esp+0x28],0x1
1002fd70:	cmp    ebx,eax
1002fd72:	jbe    0x1002fd79
1002fd74:	call   0x100435f0
1002fd79:	mov    ebp,DWORD PTR [esp+0x1c]
1002fd7d:	cmp    DWORD PTR [ebp+0x18],0x10
1002fd81:	lea    edi,[ebp+0x4]
1002fd84:	mov    DWORD PTR [esp+0x24],edi
1002fd88:	jb     0x1002fd8e
1002fd8a:	mov    eax,DWORD PTR [edi]
1002fd8c:	jmp    0x1002fd90
1002fd8e:	mov    eax,edi
1002fd90:	movzx  eax,BYTE PTR [eax+ebx*1]
1002fd94:	push   eax
1002fd95:	call   0x1004f57c
1002fd9a:	add    esp,0x4
1002fd9d:	test   eax,eax
1002fd9f:	je     0x1002ff40
1002fda5:	cmp    ebx,DWORD PTR [ebp+0x14]
1002fda8:	jbe    0x1002fdaf
1002fdaa:	call   0x100435f0
1002fdaf:	cmp    DWORD PTR [ebp+0x18],0x10
1002fdb3:	jb     0x1002fdb9
1002fdb5:	mov    eax,DWORD PTR [edi]
1002fdb7:	jmp    0x1002fdbb
1002fdb9:	mov    eax,edi
1002fdbb:	mov    cl,BYTE PTR [eax+ebx*1]
1002fdbe:	mov    ebp,DWORD PTR [esi-0xc]
1002fdc1:	mov    eax,DWORD PTR [esi-0x8]
1002fdc4:	mov    BYTE PTR [esp+0x14],cl
1002fdc8:	mov    ecx,0x1
1002fdcd:	sub    ecx,DWORD PTR [esi-0x4]
1002fdd0:	lea    edi,[ebp+0x1]
1002fdd3:	sub    eax,edi
1002fdd5:	or     eax,ecx
1002fdd7:	jge    0x1002fde8
1002fdd9:	mov    ecx,edi
1002fddb:	lea    eax,[esp+0x20]
1002fddf:	call   0x100348f0
1002fde4:	mov    esi,DWORD PTR [esp+0x20]
1002fde8:	test   edi,edi
1002fdea:	mov    dl,BYTE PTR [esp+0x14]
1002fdee:	mov    BYTE PTR [esi+ebp*1],dl
1002fdf1:	jl     0x100301f6
1002fdf7:	cmp    edi,DWORD PTR [esi-0x8]
1002fdfa:	jg     0x100301f6
1002fe00:	mov    eax,DWORD PTR [esp+0x1c]
1002fe04:	shl    BYTE PTR [esp+0x1b],0x4
1002fe09:	mov    DWORD PTR [esi-0xc],edi
1002fe0c:	mov    BYTE PTR [edi+esi*1],0x0
1002fe10:	cmp    ebx,DWORD PTR [eax+0x14]
1002fe13:	jbe    0x1002fe1e
1002fe15:	call   0x100435f0
1002fe1a:	mov    eax,DWORD PTR [esp+0x1c]
1002fe1e:	cmp    DWORD PTR [eax+0x18],0x10
1002fe22:	mov    ecx,DWORD PTR [esp+0x24]
1002fe26:	jb     0x1002fe2c
1002fe28:	mov    edx,DWORD PTR [ecx]
1002fe2a:	jmp    0x1002fe2e
1002fe2c:	mov    edx,ecx
1002fe2e:	cmp    BYTE PTR [edx+ebx*1],0x30
1002fe32:	jl     0x1002fe86
1002fe34:	cmp    ebx,DWORD PTR [eax+0x14]
1002fe37:	jbe    0x1002fe46
1002fe39:	call   0x100435f0
1002fe3e:	mov    ecx,DWORD PTR [esp+0x24]
1002fe42:	mov    eax,DWORD PTR [esp+0x1c]
1002fe46:	cmp    DWORD PTR [eax+0x18],0x10
1002fe4a:	jb     0x1002fe50
1002fe4c:	mov    edx,DWORD PTR [ecx]
1002fe4e:	jmp    0x1002fe52
1002fe50:	mov    edx,ecx
1002fe52:	cmp    BYTE PTR [edx+ebx*1],0x39
1002fe56:	jg     0x1002fe86
1002fe58:	cmp    ebx,DWORD PTR [eax+0x14]
1002fe5b:	jbe    0x1002fe6a
1002fe5d:	call   0x100435f0
1002fe62:	mov    ecx,DWORD PTR [esp+0x24]
1002fe66:	mov    eax,DWORD PTR [esp+0x1c]
1002fe6a:	cmp    DWORD PTR [eax+0x18],0x10
1002fe6e:	jb     0x1002fe7b
1002fe70:	mov    eax,DWORD PTR [ecx]
1002fe72:	movsx  eax,BYTE PTR [eax+ebx*1]
1002fe76:	sub    eax,0x30
1002fe79:	jmp    0x1002feb4
1002fe7b:	mov    eax,ecx
1002fe7d:	movsx  eax,BYTE PTR [eax+ebx*1]
1002fe81:	sub    eax,0x30
1002fe84:	jmp    0x1002feb4
1002fe86:	cmp    ebx,DWORD PTR [eax+0x14]
1002fe89:	jbe    0x1002fe98
1002fe8b:	call   0x100435f0
1002fe90:	mov    ecx,DWORD PTR [esp+0x24]
1002fe94:	mov    eax,DWORD PTR [esp+0x1c]
1002fe98:	cmp    DWORD PTR [eax+0x18],0x10
1002fe9c:	jb     0x1002fea2
1002fe9e:	mov    eax,DWORD PTR [ecx]
1002fea0:	jmp    0x1002fea4
1002fea2:	mov    eax,ecx
1002fea4:	movsx  eax,BYTE PTR [eax+ebx*1]
1002fea8:	push   eax
1002fea9:	call   0x10059007
1002feae:	add    esp,0x4
1002feb1:	sub    eax,0x37
1002feb4:	add    BYTE PTR [esp+0x1b],al
1002feb8:	cmp    DWORD PTR [esp+0x28],0x0
1002febd:	jne    0x100300d0
1002fec3:	cmp    BYTE PTR [esp+0x1b],0x80
1002fec8:	jb     0x100300d0
1002fece:	mov    edi,DWORD PTR [esi-0xc]
1002fed1:	mov    eax,DWORD PTR [esi-0x8]
1002fed4:	add    edi,0xfffffffd
1002fed7:	mov    ecx,0x1
1002fedc:	sub    ecx,DWORD PTR [esi-0x4]
1002fedf:	sub    eax,edi
1002fee1:	or     eax,ecx
1002fee3:	jge    0x1002fef4
1002fee5:	mov    ecx,edi
1002fee7:	lea    eax,[esp+0x20]
1002feeb:	call   0x100348f0
1002fef0:	mov    esi,DWORD PTR [esp+0x20]
1002fef4:	test   edi,edi
1002fef6:	jl     0x100301f6
1002fefc:	cmp    edi,DWORD PTR [esi-0x8]
1002feff:	jg     0x100301f6
1002ff05:	test   edi,edi
1002ff07:	mov    DWORD PTR [esi-0xc],edi
1002ff0a:	mov    BYTE PTR [edi+esi*1],0x0
1002ff0e:	je     0x1002ff2c
1002ff10:	add    edi,0xffffffff
1002ff13:	js     0x100301f6
1002ff19:	cmp    edi,DWORD PTR [esi-0xc]
1002ff1c:	jg     0x100301f6
1002ff22:	cmp    BYTE PTR [edi+esi*1],0x80
1002ff26:	je     0x100300d0
1002ff2c:	push   0xffffff80
1002ff2e:	lea    edi,[esp+0x24]
1002ff32:	call   0x100345e0
1002ff37:	mov    esi,DWORD PTR [esp+0x20]
1002ff3b:	jmp    0x100300d0
1002ff40:	mov    DWORD PTR [esp+0x28],0x0
1002ff48:	jmp    0x100300d3
1002ff4d:	cmp    ebx,eax
1002ff4f:	jbe    0x1002ff56
1002ff51:	call   0x100435f0
1002ff56:	mov    edi,DWORD PTR [esp+0x1c]
1002ff5a:	cmp    DWORD PTR [edi+0x18],0x10
1002ff5e:	lea    ebp,[edi+0x4]
1002ff61:	jb     0x1002ff68
1002ff63:	mov    eax,DWORD PTR [ebp+0x0]
1002ff66:	jmp    0x1002ff6a
1002ff68:	mov    eax,ebp
1002ff6a:	cmp    BYTE PTR [eax+ebx*1],0x80
1002ff6e:	jb     0x1002ffe5
1002ff70:	mov    eax,DWORD PTR [edi+0x14]
1002ff73:	add    ebx,0x1
1002ff76:	cmp    ebx,eax
1002ff78:	jae    0x1002ff9e
1002ff7a:	jbe    0x1002ff81
1002ff7c:	call   0x100435f0
1002ff81:	cmp    DWORD PTR [edi+0x18],0x10
1002ff85:	jb     0x1002ff8c
1002ff87:	mov    eax,DWORD PTR [ebp+0x0]
1002ff8a:	jmp    0x1002ff8e
1002ff8c:	mov    eax,ebp
1002ff8e:	cmp    BYTE PTR [eax+ebx*1],0x80
1002ff92:	jb     0x1002ff9e
1002ff94:	mov    eax,DWORD PTR [edi+0x14]
1002ff97:	add    ebx,0x1
1002ff9a:	cmp    ebx,eax
1002ff9c:	jb     0x1002ff81
1002ff9e:	mov    ebp,DWORD PTR [esi-0xc]
1002ffa1:	mov    eax,DWORD PTR [esi-0x8]
1002ffa4:	mov    ecx,0x1
1002ffa9:	sub    ecx,DWORD PTR [esi-0x4]
1002ffac:	lea    edi,[ebp+0x1]
1002ffaf:	sub    eax,edi
1002ffb1:	or     eax,ecx
1002ffb3:	jge    0x1002ffc4
1002ffb5:	mov    ecx,edi
1002ffb7:	lea    eax,[esp+0x20]
1002ffbb:	call   0x100348f0
1002ffc0:	mov    esi,DWORD PTR [esp+0x20]
1002ffc4:	test   edi,edi
1002ffc6:	mov    BYTE PTR [esi+ebp*1],0x80
1002ffca:	jl     0x100301f6
1002ffd0:	cmp    edi,DWORD PTR [esi-0x8]
1002ffd3:	jg     0x100301f6
1002ffd9:	mov    DWORD PTR [esi-0xc],edi
1002ffdc:	mov    BYTE PTR [edi+esi*1],0x0
1002ffe0:	jmp    0x100300d3
1002ffe5:	cmp    ebx,DWORD PTR [edi+0x14]
1002ffe8:	jbe    0x1002ffef
1002ffea:	call   0x100435f0
1002ffef:	cmp    DWORD PTR [edi+0x18],0x10
1002fff3:	jb     0x1002fffa
1002fff5:	mov    eax,DWORD PTR [ebp+0x0]
1002fff8:	jmp    0x1002fffc
1002fffa:	mov    eax,ebp
1002fffc:	cmp    BYTE PTR [eax+ebx*1],0x25
10030000:	jne    0x1003006d
10030002:	cmp    ebx,DWORD PTR [edi+0x14]
10030005:	jbe    0x1003000c
10030007:	call   0x100435f0
1003000c:	cmp    DWORD PTR [edi+0x18],0x10
10030010:	jb     0x10030017
10030012:	mov    eax,DWORD PTR [ebp+0x0]
10030015:	jmp    0x10030019
10030017:	mov    eax,ebp
10030019:	mov    cl,BYTE PTR [eax+ebx*1]
1003001c:	mov    ebp,DWORD PTR [esi-0xc]
1003001f:	mov    eax,DWORD PTR [esi-0x8]
10030022:	mov    BYTE PTR [esp+0x14],cl
10030026:	mov    ecx,0x1
1003002b:	sub    ecx,DWORD PTR [esi-0x4]
1003002e:	lea    edi,[ebp+0x1]
10030031:	sub    eax,edi
10030033:	or     eax,ecx
10030035:	jge    0x10030046
10030037:	mov    ecx,edi
10030039:	lea    eax,[esp+0x20]
1003003d:	call   0x100348f0
10030042:	mov    esi,DWORD PTR [esp+0x20]
10030046:	test   edi,edi
10030048:	mov    dl,BYTE PTR [esp+0x14]
1003004c:	mov    BYTE PTR [esi+ebp*1],dl
1003004f:	jl     0x100301f6
10030055:	cmp    edi,DWORD PTR [esi-0x8]
10030058:	jg     0x100301f6
1003005e:	mov    BYTE PTR [esp+0x1b],0x0
10030063:	mov    DWORD PTR [esp+0x28],0x2
1003006b:	jmp    0x100300c9
1003006d:	cmp    ebx,DWORD PTR [edi+0x14]
10030070:	jbe    0x10030077
10030072:	call   0x100435f0
10030077:	cmp    DWORD PTR [edi+0x18],0x10
1003007b:	jb     0x10030082
1003007d:	mov    eax,DWORD PTR [ebp+0x0]
10030080:	jmp    0x10030084
10030082:	mov    eax,ebp
10030084:	mov    al,BYTE PTR [eax+ebx*1]
10030087:	mov    ebp,DWORD PTR [esi-0xc]
1003008a:	mov    BYTE PTR [esp+0x14],al
1003008e:	mov    eax,DWORD PTR [esi-0x8]
10030091:	mov    ecx,0x1
10030096:	sub    ecx,DWORD PTR [esi-0x4]
10030099:	lea    edi,[ebp+0x1]
1003009c:	sub    eax,edi
1003009e:	or     eax,ecx
100300a0:	jge    0x100300b1
100300a2:	mov    ecx,edi
100300a4:	lea    eax,[esp+0x20]
100300a8:	call   0x100348f0
100300ad:	mov    esi,DWORD PTR [esp+0x20]
100300b1:	test   edi,edi
100300b3:	mov    cl,BYTE PTR [esp+0x14]
100300b7:	mov    BYTE PTR [esi+ebp*1],cl
100300ba:	jl     0x100301f6
100300c0:	cmp    edi,DWORD PTR [esi-0x8]
100300c3:	jg     0x100301f6
100300c9:	mov    DWORD PTR [esi-0xc],edi
100300cc:	mov    BYTE PTR [edi+esi*1],0x0
100300d0:	add    ebx,0x1
100300d3:	mov    edx,DWORD PTR [esp+0x1c]
100300d7:	mov    eax,DWORD PTR [edx+0x14]
100300da:	cmp    ebx,eax
100300dc:	jb     0x1002fd60
100300e2:	mov    ebp,DWORD PTR [esp+0x2c]
100300e6:	xor    ebx,ebx
100300e8:	mov    eax,ds:0x10080a74
100300ed:	mov    edx,DWORD PTR [eax+0xc]
100300f0:	mov    ecx,0x10080a74
100300f5:	call   edx
100300f7:	lea    edi,[eax+0x10]
100300fa:	mov    DWORD PTR [esp+0x28],edi
100300fe:	mov    BYTE PTR [esp+0xbc],0x1
10030106:	mov    eax,DWORD PTR [esp+0x1c]
1003010a:	mov    eax,DWORD PTR [eax+0x14]
1003010d:	lea    ecx,[eax+eax*1]
10030110:	mov    DWORD PTR [esp+0x34],ecx
10030114:	mov    eax,DWORD PTR [edi-0x8]
10030117:	mov    edx,0x1
1003011c:	sub    edx,DWORD PTR [edi-0x4]
1003011f:	sub    eax,ecx
10030121:	or     eax,edx
10030123:	jge    0x10030132
10030125:	lea    eax,[esp+0x28]
10030129:	call   0x100348f0
1003012e:	mov    edi,DWORD PTR [esp+0x28]
10030132:	cmp    DWORD PTR [esi-0x4],0x1
10030136:	jle    0x1003014a
10030138:	mov    ecx,DWORD PTR [esi-0xc]
1003013b:	push   ecx
1003013c:	lea    edx,[esp+0x24]
10030140:	push   edx
10030141:	call   0x10034770
10030146:	mov    esi,DWORD PTR [esp+0x20]
1003014a:	push   0x2000000
1003014f:	lea    eax,[esp+0x38]
10030153:	push   eax
10030154:	push   edi
10030155:	push   esi
10030156:	call   DWORD PTR ds:0x10066378
1003015c:	test   eax,eax
1003015e:	jne    0x10030200
10030164:	mov    ecx,DWORD PTR [esp+0x1c]
10030168:	push   0xffffffff
1003016a:	push   ebx
1003016b:	push   ecx
1003016c:	mov    DWORD PTR [ebp+0x18],0xf
10030173:	mov    DWORD PTR [ebp+0x14],ebx
10030176:	mov    ecx,ebp
10030178:	mov    BYTE PTR [ebp+0x4],0x0
1003017c:	call   0x10001245
10030181:	add    edi,0xfffffff0
10030184:	or     eax,0xffffffff
10030187:	lea    edx,[edi+0xc]
1003018a:	mov    BYTE PTR [esp+0xbc],0x0
10030192:	lock xadd DWORD PTR [edx],eax
10030196:	dec    eax
10030197:	test   eax,eax
10030199:	jg     0x100301a5
1003019b:	mov    ecx,DWORD PTR [edi]
1003019d:	mov    edx,DWORD PTR [ecx]
1003019f:	mov    eax,DWORD PTR [edx+0x4]
100301a2:	push   edi
100301a3:	call   eax
100301a5:	add    esi,0xfffffff0
100301a8:	mov    DWORD PTR [esp+0xbc],0xffffffff
100301b3:	lea    ecx,[esi+0xc]
100301b6:	or     edx,0xffffffff
100301b9:	lock xadd DWORD PTR [ecx],edx
100301bd:	dec    edx
100301be:	test   edx,edx
100301c0:	jg     0x100301cc
100301c2:	mov    ecx,DWORD PTR [esi]
100301c4:	mov    eax,DWORD PTR [ecx]
100301c6:	mov    edx,DWORD PTR [eax+0x4]
100301c9:	push   esi
100301ca:	call   edx
100301cc:	mov    eax,ebp
100301ce:	mov    ecx,DWORD PTR [esp+0xb4]
100301d5:	mov    DWORD PTR fs:0x0,ecx
100301dc:	pop    ecx
100301dd:	pop    edi
100301de:	pop    esi
100301df:	pop    ebp
100301e0:	pop    ebx
100301e1:	mov    ecx,DWORD PTR [esp+0x9c]
100301e8:	xor    ecx,esp
100301ea:	call   0x100430d7
100301ef:	add    esp,0xac
100301f5:	ret    
100301f6:	push   0x80070057
100301fb:	call   0x10001f24
10030200:	cmp    edi,ebx
10030202:	jne    0x10030208
10030204:	xor    eax,eax
10030206:	jmp    0x1003021d
10030208:	mov    eax,edi
1003020a:	lea    edx,[eax+0x1]
1003020d:	lea    ecx,[ecx+0x0]
10030210:	mov    cl,BYTE PTR [eax]
10030212:	add    eax,0x1
10030215:	test   cl,cl
10030217:	jne    0x10030210
10030219:	sub    eax,edx
1003021b:	js     0x100301f6
1003021d:	cmp    eax,DWORD PTR [edi-0x8]
10030220:	jg     0x100301f6
10030222:	mov    DWORD PTR [edi-0xc],eax
10030225:	push   0x38
10030227:	mov    BYTE PTR [eax+edi*1],0x0
1003022b:	lea    eax,[esp+0x40]
1003022f:	push   ebx
10030230:	push   eax
10030231:	call   0x10045ea0
10030236:	mov    eax,0x1
1003023b:	add    esp,0xc
1003023e:	mov    DWORD PTR [esp+0x38],0x3c
10030246:	mov    DWORD PTR [esp+0x40],eax
1003024a:	mov    DWORD PTR [esp+0x4c],eax
1003024e:	mov    DWORD PTR [esp+0x58],eax
10030252:	mov    DWORD PTR [esp+0x60],eax
10030256:	mov    DWORD PTR [esp+0x68],eax
1003025a:	mov    DWORD PTR [esp+0x70],eax
1003025e:	cmp    DWORD PTR [edi-0x4],eax
10030261:	jle    0x10030275
10030263:	mov    ecx,DWORD PTR [edi-0xc]
10030266:	push   ecx
10030267:	lea    edx,[esp+0x2c]
1003026b:	push   edx
1003026c:	call   0x10034770
10030271:	mov    edi,DWORD PTR [esp+0x28]
10030275:	lea    eax,[esp+0x38]
10030279:	push   eax
1003027a:	push   ebx
1003027b:	push   ebx
1003027c:	push   edi
1003027d:	call   DWORD PTR ds:0x1006637c
10030283:	test   eax,eax
10030285:	je     0x10030164
1003028b:	mov    DWORD PTR [esp+0x8c],0xf
10030296:	mov    DWORD PTR [esp+0x88],ebx
1003029d:	mov    BYTE PTR [esp+0x78],0x0
100302a2:	mov    BYTE PTR [esp+0xbc],0x2
100302aa:	mov    eax,DWORD PTR [esp+0x3c]
100302ae:	cmp    eax,ebx
100302b0:	je     0x10030524
100302b6:	cmp    DWORD PTR [esp+0x48],ebx
100302ba:	je     0x10030524
100302c0:	cmp    DWORD PTR [esp+0x58],ebx
100302c4:	jne    0x10030524
100302ca:	cmp    DWORD PTR [esp+0x60],ebx
100302ce:	jne    0x10030524
100302d4:	mov    esi,DWORD PTR [esp+0x40]
100302d8:	mov    ebx,eax
100302da:	lea    edi,[esp+0x24]
100302de:	call   0x10034520
100302e3:	mov    BYTE PTR [esp+0xbc],0x3
100302eb:	call   0x10034640
100302f0:	mov    eax,edi
100302f2:	push   eax
100302f3:	mov    ecx,0x1006d1e4
100302f8:	call   0x100346c0
100302fd:	add    esp,0x4
10030300:	test   al,al
10030302:	je     0x10030371
10030304:	mov    ecx,edi
10030306:	push   ecx
10030307:	mov    ecx,0x10073040
1003030c:	call   0x100346c0
10030311:	add    esp,0x4
10030314:	test   al,al
10030316:	je     0x10030371
10030318:	mov    edx,DWORD PTR [esp+0x1c]
1003031c:	push   edx
1003031d:	mov    ecx,ebp
1003031f:	call   0x100011ab
10030324:	mov    eax,edi
10030326:	call   0x10034580
1003032b:	cmp    DWORD PTR [esp+0x8c],0x10
10030333:	jb     0x10030342
10030335:	mov    eax,DWORD PTR [esp+0x78]
10030339:	push   eax
1003033a:	call   0x100430d2
1003033f:	add    esp,0x4
10030342:	xor    eax,eax
10030344:	mov    DWORD PTR [esp+0x88],eax
1003034b:	mov    BYTE PTR [esp+0x78],al
1003034f:	lea    eax,[esp+0x28]
10030353:	mov    DWORD PTR [esp+0x8c],0xf
1003035e:	call   0x10034580
10030363:	lea    eax,[esp+0x20]
10030367:	call   0x10034580
1003036c:	jmp    0x100301cc
10030371:	mov    ecx,DWORD PTR [esp+0x24]
10030375:	push   ecx
10030376:	lea    edx,[esp+0x78]
1003037a:	push   edx
1003037b:	call   0x10004120
10030380:	push   0x10073048
10030385:	lea    eax,[esp+0x78]
10030389:	push   eax
1003038a:	call   0x10004120
1003038f:	mov    esi,DWORD PTR [esp+0x4c]
10030393:	mov    ebx,DWORD PTR [esp+0x48]
10030397:	lea    edi,[esp+0x2c]
1003039b:	call   0x10034520
100303a0:	mov    BYTE PTR [esp+0xbc],0x4
100303a8:	call   0x10034640
100303ad:	mov    ecx,DWORD PTR [esp+0x2c]
100303b1:	push   ecx
100303b2:	lea    edx,[esp+0x78]
100303b6:	push   edx
100303b7:	call   0x10004120
100303bc:	lea    eax,[esp+0x24]
100303c0:	push   eax
100303c1:	mov    ecx,0x1006d1e4
100303c6:	call   0x10034690
100303cb:	add    esp,0x4
100303ce:	test   al,al
100303d0:	je     0x100303da
100303d2:	cmp    WORD PTR [esp+0x50],0x50
100303d8:	jne    0x100303f9
100303da:	lea    ecx,[esp+0x24]
100303de:	push   ecx
100303df:	mov    ecx,0x10073040
100303e4:	call   0x10034690
100303e9:	add    esp,0x4
100303ec:	test   al,al
100303ee:	je     0x1003042b
100303f0:	cmp    WORD PTR [esp+0x50],0x1bb
100303f7:	je     0x1003042b
100303f9:	push   0x1006dc98
100303fe:	lea    edx,[esp+0x78]
10030402:	push   edx
10030403:	call   0x10004120
10030408:	movzx  ecx,WORD PTR [esp+0x50]
1003040d:	push   0xa
1003040f:	lea    eax,[esp+0x94]
10030416:	push   eax
10030417:	push   ecx
10030418:	call   0x10045d96
1003041d:	add    esp,0xc
10030420:	push   eax
10030421:	lea    edx,[esp+0x78]
10030425:	push   edx
10030426:	call   0x10004120
1003042b:	lea    esi,[esp+0x1c]
1003042f:	call   0x10034500
10030434:	mov    BYTE PTR [esp+0xbc],0x5
1003043c:	mov    ebx,DWORD PTR [esp+0x64]
10030440:	test   ebx,ebx
10030442:	je     0x10030471
10030444:	mov    esi,DWORD PTR [esp+0x68]
10030448:	lea    edi,[esp+0x30]
1003044c:	call   0x10034520
10030451:	lea    ebx,[esp+0x1c]
10030455:	mov    BYTE PTR [esp+0xbc],0x6
1003045d:	call   0x10034710
10030462:	mov    eax,edi
10030464:	mov    BYTE PTR [esp+0xbc],0x5
1003046c:	call   0x10034580
10030471:	mov    eax,DWORD PTR [esp+0x1c]
10030475:	cmp    DWORD PTR [eax-0xc],0x0
10030479:	jne    0x10030489
1003047b:	mov    edx,0x10072a10
10030480:	lea    ebx,[esp+0x1c]
10030484:	call   0x100345a0
10030489:	mov    ecx,DWORD PTR [esp+0x1c]
1003048d:	push   ecx
1003048e:	lea    edx,[esp+0x78]
10030492:	push   edx
10030493:	call   0x10004120
10030498:	mov    ebx,DWORD PTR [esp+0x6c]
1003049c:	test   ebx,ebx
1003049e:	je     0x100304d1
100304a0:	mov    esi,DWORD PTR [esp+0x70]
100304a4:	lea    edi,[esp+0x30]
100304a8:	call   0x10034520
100304ad:	mov    BYTE PTR [esp+0xbc],0x7
100304b5:	mov    eax,DWORD PTR [eax]
100304b7:	push   eax
100304b8:	lea    eax,[esp+0x78]
100304bc:	push   eax
100304bd:	call   0x10004120
100304c2:	mov    eax,edi
100304c4:	mov    BYTE PTR [esp+0xbc],0x5
100304cc:	call   0x10034580
100304d1:	lea    ecx,[esp+0x74]
100304d5:	push   ecx
100304d6:	mov    ecx,ebp
100304d8:	call   0x100011ab
100304dd:	lea    eax,[esp+0x1c]
100304e1:	call   0x10034580
100304e6:	lea    eax,[esp+0x2c]
100304ea:	call   0x10034580
100304ef:	lea    eax,[esp+0x24]
100304f3:	call   0x10034580
100304f8:	cmp    DWORD PTR [esp+0x8c],0x10
10030500:	jb     0x1003050f
10030502:	mov    edx,DWORD PTR [esp+0x78]
10030506:	push   edx
10030507:	call   0x100430d2
1003050c:	add    esp,0x4
1003050f:	mov    DWORD PTR [esp+0x88],0x0
1003051a:	mov    BYTE PTR [esp+0x78],0x0
1003051f:	jmp    0x1003034f
10030524:	mov    eax,DWORD PTR [esp+0x1c]
10030528:	push   0xffffffff
1003052a:	push   ebx
1003052b:	mov    DWORD PTR [ebp+0x18],0xf
10030532:	mov    DWORD PTR [ebp+0x14],ebx
10030535:	push   eax
10030536:	mov    ecx,ebp
10030538:	mov    BYTE PTR [ebp+0x4],0x0
1003053c:	call   0x10001245
10030541:	cmp    DWORD PTR [esp+0x8c],0x10
10030549:	jb     0x10030558
1003054b:	mov    ecx,DWORD PTR [esp+0x78]
1003054f:	push   ecx
10030550:	call   0x100430d2
10030555:	add    esp,0x4
10030558:	mov    DWORD PTR [esp+0x8c],0xf
10030563:	mov    DWORD PTR [esp+0x88],ebx
1003056a:	mov    BYTE PTR [esp+0x78],0x0
1003056f:	jmp    0x10030181
10030574:	int3   
10030575:	int3   
10030576:	int3   
10030577:	int3   
10030578:	int3   
10030579:	int3   
1003057a:	int3   
1003057b:	int3   
1003057c:	int3   
1003057d:	int3   
1003057e:	int3   
1003057f:	int3   
10030580:	push   0xffffffff
10030582:	push   0x10060129
10030587:	mov    eax,fs:0x0
1003058d:	push   eax
1003058e:	sub    esp,0xc
10030591:	push   ebx
10030592:	push   ebp
10030593:	push   edi
10030594:	mov    eax,ds:0x1007e030
10030599:	xor    eax,esp
1003059b:	push   eax
1003059c:	lea    eax,[esp+0x1c]
100305a0:	mov    fs:0x0,eax
100305a6:	mov    eax,DWORD PTR [esp+0x2c]
100305aa:	xor    ecx,ecx
100305ac:	mov    DWORD PTR [esp+0x14],ecx
100305b0:	mov    DWORD PTR [esi+0x18],0xf
100305b7:	mov    DWORD PTR [esi+0x14],ecx
100305ba:	mov    DWORD PTR [esp+0x18],esi
100305be:	mov    BYTE PTR [esi+0x4],cl
100305c1:	mov    DWORD PTR [esp+0x24],ecx
100305c5:	cmp    DWORD PTR [eax+0x18],0x10
100305c9:	mov    DWORD PTR [esp+0x14],0x1
100305d1:	jb     0x100305d8
100305d3:	mov    ebp,DWORD PTR [eax+0x4]
100305d6:	jmp    0x100305db
100305d8:	lea    ebp,[eax+0x4]
100305db:	mov    al,BYTE PTR [ebp+0x0]
100305de:	test   al,al
100305e0:	je     0x100307f4
100305e6:	mov    cl,BYTE PTR [ebp+0x1]
100305e9:	test   cl,cl
100305eb:	je     0x10030764
100305f1:	cmp    al,0x25
100305f3:	jne    0x10030764
100305f9:	movzx  eax,cl
100305fc:	push   eax
100305fd:	call   0x1004f57c
10030602:	add    esp,0x4
10030605:	test   eax,eax
10030607:	je     0x10030764
1003060d:	movzx  ecx,BYTE PTR [ebp+0x2]
10030611:	push   ecx
10030612:	call   0x1004f57c
10030617:	add    esp,0x4
1003061a:	test   eax,eax
1003061c:	je     0x10030764
10030622:	mov    al,BYTE PTR [ebp+0x1]
10030625:	cmp    al,0x30
10030627:	jl     0x10030635
10030629:	cmp    al,0x39
1003062b:	jg     0x10030635
1003062d:	movsx  edi,al
10030630:	sub    edi,0x30
10030633:	jmp    0x10030646
10030635:	movsx  edx,al
10030638:	push   edx
10030639:	call   0x10059007
1003063e:	mov    edi,eax
10030640:	add    esp,0x4
10030643:	sub    edi,0x37
10030646:	mov    al,BYTE PTR [ebp+0x2]
10030649:	cmp    al,0x30
1003064b:	jl     0x10030659
1003064d:	cmp    al,0x39
1003064f:	jg     0x10030659
10030651:	movsx  eax,al
10030654:	sub    eax,0x30
10030657:	jmp    0x10030668
10030659:	movsx  eax,al
1003065c:	push   eax
1003065d:	call   0x10059007
10030662:	add    esp,0x4
10030665:	sub    eax,0x37
10030668:	shl    edi,0x4
1003066b:	add    edi,eax
1003066d:	cmp    edi,0x7f
10030670:	jg     0x10030764
10030676:	mov    al,BYTE PTR [ebp+0x1]
10030679:	cmp    al,0x30
1003067b:	jl     0x10030689
1003067d:	cmp    al,0x39
1003067f:	jg     0x10030689
10030681:	movsx  ebx,al
10030684:	sub    ebx,0x30
10030687:	jmp    0x1003069a
10030689:	movsx  ecx,al
1003068c:	push   ecx
1003068d:	call   0x10059007
10030692:	mov    ebx,eax
10030694:	add    esp,0x4
10030697:	sub    ebx,0x37
1003069a:	mov    al,BYTE PTR [ebp+0x2]
1003069d:	cmp    al,0x30
1003069f:	jl     0x100306ad
100306a1:	cmp    al,0x39
100306a3:	jg     0x100306ad
100306a5:	movsx  eax,al
100306a8:	sub    eax,0x30
100306ab:	jmp    0x100306bc
100306ad:	movsx  edx,al
100306b0:	push   edx
100306b1:	call   0x10059007
100306b6:	add    esp,0x4
100306b9:	sub    eax,0x37
100306bc:	mov    DWORD PTR [esp+0x10],eax
100306c0:	or     eax,0xffffffff
100306c3:	sub    eax,DWORD PTR [esi+0x14]
100306c6:	cmp    eax,0x1
100306c9:	ja     0x100306d0
100306cb:	call   0x10057440
100306d0:	mov    edi,DWORD PTR [esi+0x14]
100306d3:	add    edi,0x1
100306d6:	cmp    edi,0xfffffffe
100306d9:	jbe    0x100306e0
100306db:	call   0x10057440
100306e0:	mov    eax,DWORD PTR [esi+0x18]
100306e3:	cmp    eax,edi
100306e5:	jae    0x10030710
100306e7:	mov    ecx,DWORD PTR [esi+0x14]
100306ea:	push   ecx
100306eb:	push   edi
100306ec:	mov    ecx,esi
100306ee:	call   0x10001504
100306f3:	test   edi,edi
100306f5:	jbe    0x1003075c
100306f7:	mov    ecx,DWORD PTR [esi+0x14]
100306fa:	shl    bl,0x4
100306fd:	add    bl,BYTE PTR [esp+0x10]
10030701:	mov    edx,0x10
10030706:	cmp    DWORD PTR [esi+0x18],edx
10030709:	jb     0x10030738
1003070b:	mov    eax,DWORD PTR [esi+0x4]
1003070e:	jmp    0x1003073b
10030710:	test   edi,edi
10030712:	jne    0x100306f5
10030714:	cmp    eax,0x10
10030717:	mov    DWORD PTR [esi+0x14],edi
1003071a:	jb     0x1003072a
1003071c:	mov    eax,DWORD PTR [esi+0x4]
1003071f:	mov    BYTE PTR [eax],0x0
10030722:	add    ebp,0x2
10030725:	jmp    0x100307e6
1003072a:	lea    eax,[esi+0x4]
1003072d:	mov    BYTE PTR [eax],0x0
10030730:	add    ebp,0x2
10030733:	jmp    0x100307e6
10030738:	lea    eax,[esi+0x4]
1003073b:	mov    BYTE PTR [eax+ecx*1],bl
1003073e:	cmp    DWORD PTR [esi+0x18],edx
10030741:	mov    DWORD PTR [esi+0x14],edi
10030744:	jb     0x10030755
10030746:	mov    eax,DWORD PTR [esi+0x4]
10030749:	mov    BYTE PTR [eax+edi*1],0x0
1003074d:	add    ebp,0x2
10030750:	jmp    0x100307e6
10030755:	lea    eax,[esi+0x4]
10030758:	mov    BYTE PTR [eax+edi*1],0x0
1003075c:	add    ebp,0x2
1003075f:	jmp    0x100307e6
10030764:	mov    bl,BYTE PTR [ebp+0x0]
10030767:	or     edx,0xffffffff
1003076a:	sub    edx,DWORD PTR [esi+0x14]
1003076d:	cmp    edx,0x1
10030770:	ja     0x10030777
10030772:	call   0x10057440
10030777:	mov    edi,DWORD PTR [esi+0x14]
1003077a:	add    edi,0x1
1003077d:	cmp    edi,0xfffffffe
10030780:	jbe    0x10030787
10030782:	call   0x10057440
10030787:	mov    eax,DWORD PTR [esi+0x18]
1003078a:	cmp    eax,edi
1003078c:	jae    0x100307b0
1003078e:	mov    eax,DWORD PTR [esi+0x14]
10030791:	push   eax
10030792:	push   edi
10030793:	mov    ecx,esi
10030795:	call   0x10001504
1003079a:	test   edi,edi
1003079c:	jbe    0x100307e6
1003079e:	mov    ecx,DWORD PTR [esi+0x14]
100307a1:	mov    edx,0x10
100307a6:	cmp    DWORD PTR [esi+0x18],edx
100307a9:	jb     0x100307cc
100307ab:	mov    eax,DWORD PTR [esi+0x4]
100307ae:	jmp    0x100307cf
100307b0:	test   edi,edi
100307b2:	jne    0x1003079c
100307b4:	cmp    eax,0x10
100307b7:	mov    DWORD PTR [esi+0x14],edi
100307ba:	jb     0x100307c4
100307bc:	mov    eax,DWORD PTR [esi+0x4]
100307bf:	mov    BYTE PTR [eax],0x0
100307c2:	jmp    0x100307e6
100307c4:	lea    eax,[esi+0x4]
100307c7:	mov    BYTE PTR [eax],0x0
100307ca:	jmp    0x100307e6
100307cc:	lea    eax,[esi+0x4]
100307cf:	mov    BYTE PTR [eax+ecx*1],bl
100307d2:	cmp    DWORD PTR [esi+0x18],edx
100307d5:	mov    DWORD PTR [esi+0x14],edi
100307d8:	jb     0x100307df
100307da:	mov    eax,DWORD PTR [esi+0x4]
100307dd:	jmp    0x100307e2
100307df:	lea    eax,[esi+0x4]
100307e2:	mov    BYTE PTR [eax+edi*1],0x0
100307e6:	mov    al,BYTE PTR [ebp+0x1]
100307e9:	add    ebp,0x1
100307ec:	test   al,al
100307ee:	jne    0x100305e6
100307f4:	mov    eax,esi
100307f6:	mov    ecx,DWORD PTR [esp+0x1c]
100307fa:	mov    DWORD PTR fs:0x0,ecx
10030801:	pop    ecx
10030802:	pop    edi
10030803:	pop    ebp
10030804:	pop    ebx
10030805:	add    esp,0x18
10030808:	ret    
10030809:	int3   
1003080a:	int3   
1003080b:	int3   
1003080c:	int3   
1003080d:	int3   
1003080e:	int3   
1003080f:	int3   
10030810:	sub    esp,0x14
10030813:	mov    eax,ds:0x1007e030
10030818:	xor    eax,esp
1003081a:	mov    DWORD PTR [esp+0x10],eax
1003081e:	movzx  eax,BYTE PTR [esp+0x18]
10030823:	push   eax
10030824:	push   0x30cbf5c8
10030829:	push   0x1007304c
1003082e:	mov    DWORD PTR [esp+0xc],0x0
10030836:	call   0x100042d1
1003083b:	push   eax
1003083c:	push   0x6
1003083e:	push   0x10073080
10030843:	call   0x100042e3
10030848:	add    esp,0x14
1003084b:	push   eax
1003084c:	lea    ecx,[esp+0xc]
10030850:	push   ecx
10030851:	call   0x1005871f
10030856:	lea    edx,[esp+0x10]
1003085a:	mov    DWORD PTR [esi+0x18],0xf
10030861:	mov    DWORD PTR [esi+0x14],0x0
10030868:	push   edx
10030869:	mov    BYTE PTR [esi+0x4],0x0
1003086d:	call   0x10043250
10030872:	add    esp,0x10
10030875:	push   eax
10030876:	lea    eax,[esp+0x8]
1003087a:	push   eax
1003087b:	mov    ecx,esi
1003087d:	call   0x1000133f
10030882:	mov    ecx,DWORD PTR [esp+0x10]
10030886:	xor    ecx,esp
10030888:	mov    eax,esi
1003088a:	call   0x100430d7
1003088f:	add    esp,0x14
10030892:	ret    
10030893:	int3   
10030894:	int3   
10030895:	int3   
10030896:	int3   
10030897:	int3   
10030898:	int3   
10030899:	int3   
1003089a:	int3   
1003089b:	int3   
1003089c:	int3   
1003089d:	int3   
1003089e:	int3   
1003089f:	int3   
100308a0:	push   0xffffffff
100308a2:	push   0x100628e9
100308a7:	mov    eax,fs:0x0
100308ad:	push   eax
100308ae:	sub    esp,0x28
100308b1:	push   ebx
100308b2:	push   ebp
100308b3:	push   esi
100308b4:	mov    eax,ds:0x1007e030
100308b9:	xor    eax,esp
100308bb:	push   eax
100308bc:	lea    eax,[esp+0x38]
100308c0:	mov    fs:0x0,eax
100308c6:	xor    eax,eax
100308c8:	mov    DWORD PTR [esp+0x30],eax
100308cc:	mov    DWORD PTR [edi+0x18],0xf
100308d3:	mov    DWORD PTR [edi+0x14],eax
100308d6:	mov    DWORD PTR [esp+0x34],edi
100308da:	mov    esi,ecx
100308dc:	mov    BYTE PTR [edi+0x4],al
100308df:	mov    DWORD PTR [esp+0x40],eax
100308e3:	mov    eax,DWORD PTR [esi]
100308e5:	mov    ebp,0x10
100308ea:	mov    ecx,0x1
100308ef:	sub    eax,ebp
100308f1:	cmp    DWORD PTR [eax+0xc],ecx
100308f4:	mov    DWORD PTR [esp+0x30],ecx
100308f8:	jle    0x10030904
100308fa:	mov    eax,DWORD PTR [eax+0x4]
100308fd:	push   eax
100308fe:	push   esi
100308ff:	call   0x10002293
10030904:	mov    ebx,DWORD PTR [esi]
10030906:	movzx  eax,WORD PTR [ebx]
10030909:	test   ax,ax
1003090c:	mov    DWORD PTR [esp+0x10],ebx
10030910:	je     0x10030c62
10030916:	jmp    0x10030924
10030918:	jmp    0x10030920
1003091a:	lea    ebx,[ebx+0x0]
10030920:	mov    ebx,DWORD PTR [esp+0x10]
10030924:	cmp    ax,0x41
10030928:	jb     0x10030934
1003092a:	cmp    ax,0x5a
1003092e:	jbe    0x10030bc9
10030934:	cmp    ax,0x61
10030938:	jb     0x10030944
1003093a:	cmp    ax,0x7a
1003093e:	jbe    0x10030bc9
10030944:	cmp    ax,0x30
10030948:	jb     0x10030954
1003094a:	cmp    ax,0x39
1003094e:	jbe    0x10030bc9
10030954:	cmp    ax,0x20
10030958:	jne    0x100309c6
1003095a:	or     ecx,0xffffffff
1003095d:	sub    ecx,DWORD PTR [edi+0x14]
10030960:	cmp    ecx,0x1
10030963:	ja     0x1003096a
10030965:	call   0x10057440
1003096a:	mov    esi,DWORD PTR [edi+0x14]
1003096d:	add    esi,0x1
10030970:	cmp    esi,0xfffffffe
10030973:	jbe    0x1003097a
10030975:	call   0x10057440
1003097a:	mov    eax,DWORD PTR [edi+0x18]
1003097d:	cmp    eax,esi
1003097f:	jae    0x100309a4
10030981:	mov    edx,DWORD PTR [edi+0x14]
10030984:	push   edx
10030985:	push   esi
10030986:	mov    ecx,edi
10030988:	call   0x10001504
1003098d:	test   esi,esi
1003098f:	jbe    0x10030c4b
10030995:	cmp    DWORD PTR [edi+0x18],ebp
10030998:	mov    ecx,DWORD PTR [edi+0x14]
1003099b:	lea    edx,[edi+0x4]
1003099e:	jb     0x100309ad
100309a0:	mov    eax,DWORD PTR [edx]
100309a2:	jmp    0x100309af
100309a4:	test   esi,esi
100309a6:	jne    0x1003098f
100309a8:	jmp    0x10030c19
100309ad:	mov    eax,edx
100309af:	mov    BYTE PTR [eax+ecx*1],0x2b
100309b3:	cmp    DWORD PTR [edi+0x18],ebp
100309b6:	mov    DWORD PTR [edi+0x14],esi
100309b9:	jb     0x10030c45
100309bf:	mov    eax,DWORD PTR [edx]
100309c1:	jmp    0x10030c47
100309c6:	cmp    ax,0x2d
100309ca:	je     0x10030bc9
100309d0:	cmp    ax,0x5f
100309d4:	je     0x10030bc9
100309da:	cmp    ax,0x2e
100309de:	je     0x10030bc9
100309e4:	cmp    ax,0x21
100309e8:	je     0x10030bc9
100309ee:	cmp    ax,0x7e
100309f2:	je     0x10030bc9
100309f8:	cmp    ax,0x2a
100309fc:	je     0x10030bc9
10030a02:	cmp    ax,0x27
10030a06:	je     0x10030bc9
10030a0c:	cmp    ax,0x28
10030a10:	je     0x10030bc9
10030a16:	cmp    ax,0x29
10030a1a:	je     0x10030bc9
10030a20:	cmp    ax,0x7f
10030a24:	lea    esi,[esp+0x14]
10030a28:	ja     0x10030a6a
10030a2a:	movzx  eax,BYTE PTR [ebx]
10030a2d:	push   eax
10030a2e:	call   0x10030810
10030a33:	add    esp,0x4
10030a36:	push   0xffffffff
10030a38:	push   0x0
10030a3a:	mov    esi,edi
10030a3c:	mov    DWORD PTR [esp+0x48],0x1
10030a44:	call   0x10004cc2
10030a49:	mov    BYTE PTR [esp+0x40],0x0
10030a4e:	cmp    DWORD PTR [esp+0x2c],ebp
10030a52:	jb     0x10030c4b
10030a58:	mov    ecx,DWORD PTR [esp+0x18]
10030a5c:	push   ecx
10030a5d:	call   0x100430d2
10030a62:	add    esp,0x4
10030a65:	jmp    0x10030c4b
10030a6a:	cmp    ax,0x7ff
10030a6e:	ja     0x10030afa
10030a74:	shr    eax,0x6
10030a77:	or     eax,0xffffffc0
10030a7a:	push   eax
10030a7b:	call   0x10030810
10030a80:	add    esp,0x4
10030a83:	push   0xffffffff
10030a85:	push   0x0
10030a87:	mov    esi,edi
10030a89:	mov    DWORD PTR [esp+0x48],0x2
10030a91:	call   0x10004cc2
10030a96:	mov    BYTE PTR [esp+0x40],0x0
10030a9b:	cmp    DWORD PTR [esp+0x2c],ebp
10030a9f:	jb     0x10030aae
10030aa1:	mov    edx,DWORD PTR [esp+0x18]
10030aa5:	push   edx
10030aa6:	call   0x100430d2
10030aab:	add    esp,0x4
10030aae:	movzx  eax,BYTE PTR [ebx]
10030ab1:	and    eax,0xffffff3f
10030ab6:	or     eax,0xffffff80
10030ab9:	push   eax
10030aba:	lea    esi,[esp+0x18]
10030abe:	call   0x10030810
10030ac3:	add    esp,0x4
10030ac6:	push   0xffffffff
10030ac8:	push   0x0
10030aca:	mov    esi,edi
10030acc:	mov    DWORD PTR [esp+0x48],0x3
10030ad4:	call   0x10004cc2
10030ad9:	mov    BYTE PTR [esp+0x40],0x0
10030ade:	cmp    DWORD PTR [esp+0x2c],ebp
10030ae2:	jb     0x10030c4b
10030ae8:	mov    ecx,DWORD PTR [esp+0x18]
10030aec:	push   ecx
10030aed:	call   0x100430d2
10030af2:	add    esp,0x4
10030af5:	jmp    0x10030c4b
10030afa:	shr    ax,0xc
10030afe:	or     eax,0xffffffe0
10030b01:	push   eax
10030b02:	call   0x10030810
10030b07:	add    esp,0x4
10030b0a:	push   0xffffffff
10030b0c:	push   0x0
10030b0e:	mov    esi,edi
10030b10:	mov    DWORD PTR [esp+0x48],0x4
10030b18:	call   0x10004cc2
10030b1d:	mov    BYTE PTR [esp+0x40],0x0
10030b22:	cmp    DWORD PTR [esp+0x2c],ebp
10030b26:	jb     0x10030b35
10030b28:	mov    edx,DWORD PTR [esp+0x18]
10030b2c:	push   edx
10030b2d:	call   0x100430d2
10030b32:	add    esp,0x4
10030b35:	movzx  eax,WORD PTR [ebx]
10030b38:	shr    ax,0x6
10030b3c:	lea    esi,[esp+0x14]
10030b40:	and    eax,0xffffff3f
10030b45:	or     eax,0xffffff80
10030b48:	push   eax
10030b49:	call   0x10030810
10030b4e:	add    esp,0x4
10030b51:	push   0xffffffff
10030b53:	push   0x0
10030b55:	mov    esi,edi
10030b57:	mov    DWORD PTR [esp+0x48],0x5
10030b5f:	call   0x10004cc2
10030b64:	mov    BYTE PTR [esp+0x40],0x0
10030b69:	cmp    DWORD PTR [esp+0x2c],ebp
10030b6d:	jb     0x10030b7c
10030b6f:	mov    ecx,DWORD PTR [esp+0x18]
10030b73:	push   ecx
10030b74:	call   0x100430d2
10030b79:	add    esp,0x4
10030b7c:	movzx  edx,BYTE PTR [ebx]
10030b7f:	and    edx,0xffffff3f
10030b85:	or     edx,0xffffff80
10030b88:	push   edx
10030b89:	lea    esi,[esp+0x18]
10030b8d:	call   0x10030810
10030b92:	add    esp,0x4
10030b95:	push   0xffffffff
10030b97:	push   0x0
10030b99:	mov    esi,edi
10030b9b:	mov    DWORD PTR [esp+0x48],0x6
10030ba3:	call   0x10004cc2
10030ba8:	mov    BYTE PTR [esp+0x40],0x0
10030bad:	cmp    DWORD PTR [esp+0x2c],ebp
10030bb1:	jb     0x10030c4b
10030bb7:	mov    eax,DWORD PTR [esp+0x18]
10030bbb:	push   eax
10030bbc:	call   0x100430d2
10030bc1:	add    esp,0x4
10030bc4:	jmp    0x10030c4b
10030bc9:	mov    ecx,DWORD PTR [esp+0x10]
10030bcd:	mov    bl,BYTE PTR [ecx]
10030bcf:	or     edx,0xffffffff
10030bd2:	sub    edx,DWORD PTR [edi+0x14]
10030bd5:	cmp    edx,0x1
10030bd8:	ja     0x10030bdf
10030bda:	call   0x10057440
10030bdf:	mov    esi,DWORD PTR [edi+0x14]
10030be2:	add    esi,0x1
10030be5:	cmp    esi,0xfffffffe
10030be8:	jbe    0x10030bef
10030bea:	call   0x10057440
10030bef:	mov    eax,DWORD PTR [edi+0x18]
10030bf2:	cmp    eax,esi
10030bf4:	jae    0x10030c15
10030bf6:	mov    eax,DWORD PTR [edi+0x14]
10030bf9:	push   eax
10030bfa:	push   esi
10030bfb:	mov    ecx,edi
10030bfd:	call   0x10001504
10030c02:	test   esi,esi
10030c04:	jbe    0x10030c4b
10030c06:	cmp    DWORD PTR [edi+0x18],ebp
10030c09:	mov    ecx,DWORD PTR [edi+0x14]
10030c0c:	lea    edx,[edi+0x4]
10030c0f:	jb     0x10030c34
10030c11:	mov    eax,DWORD PTR [edx]
10030c13:	jmp    0x10030c36
10030c15:	test   esi,esi
10030c17:	jne    0x10030c04
10030c19:	cmp    eax,ebp
10030c1b:	mov    DWORD PTR [edi+0x14],0x0
10030c22:	jb     0x10030c2c
10030c24:	mov    eax,DWORD PTR [edi+0x4]
10030c27:	mov    BYTE PTR [eax],0x0
10030c2a:	jmp    0x10030c4b
10030c2c:	lea    eax,[edi+0x4]
10030c2f:	mov    BYTE PTR [eax],0x0
10030c32:	jmp    0x10030c4b
10030c34:	mov    eax,edx
10030c36:	mov    BYTE PTR [eax+ecx*1],bl
10030c39:	cmp    DWORD PTR [edi+0x18],ebp
10030c3c:	mov    DWORD PTR [edi+0x14],esi
10030c3f:	jb     0x10030c45
10030c41:	mov    eax,DWORD PTR [edx]
10030c43:	jmp    0x10030c47
10030c45:	mov    eax,edx
10030c47:	mov    BYTE PTR [eax+esi*1],0x0
10030c4b:	mov    eax,DWORD PTR [esp+0x10]
10030c4f:	add    eax,0x2
10030c52:	mov    DWORD PTR [esp+0x10],eax
10030c56:	movzx  eax,WORD PTR [eax]
10030c59:	test   ax,ax
10030c5c:	jne    0x10030920
10030c62:	mov    eax,edi
10030c64:	mov    ecx,DWORD PTR [esp+0x38]
10030c68:	mov    DWORD PTR fs:0x0,ecx
10030c6f:	pop    ecx
10030c70:	pop    esi
10030c71:	pop    ebp
10030c72:	pop    ebx
10030c73:	add    esp,0x34
10030c76:	ret    
10030c77:	int3   
10030c78:	int3   
10030c79:	int3   
10030c7a:	int3   
10030c7b:	int3   
10030c7c:	int3   
10030c7d:	int3   
10030c7e:	int3   
10030c7f:	int3   
10030c80:	push   0xffffffff
10030c82:	push   0x100600e8
10030c87:	mov    eax,fs:0x0
10030c8d:	push   eax
10030c8e:	sub    esp,0x40
10030c91:	push   ebx
10030c92:	push   ebp
10030c93:	push   esi
10030c94:	push   edi
10030c95:	mov    eax,ds:0x1007e030
10030c9a:	xor    eax,esp
10030c9c:	push   eax
10030c9d:	lea    eax,[esp+0x54]
10030ca1:	mov    fs:0x0,eax
10030ca7:	mov    esi,ecx
10030ca9:	mov    ebp,DWORD PTR [esp+0x64]
10030cad:	xor    ebx,ebx
10030caf:	push   0x38
10030cb1:	lea    eax,[esp+0x20]
10030cb5:	push   ebx
10030cb6:	push   eax
10030cb7:	mov    DWORD PTR [esp+0x20],ebx
10030cbb:	call   0x10045ea0
10030cc0:	add    esp,0xc
10030cc3:	cmp    DWORD PTR [esi+0x18],0x10
10030cc7:	mov    DWORD PTR [esp+0x18],0x3c
10030ccf:	mov    DWORD PTR [esp+0x2c],0x1
10030cd7:	jb     0x10030cde
10030cd9:	mov    esi,DWORD PTR [esi+0x4]
10030cdc:	jmp    0x10030ce1
10030cde:	add    esi,0x4
10030ce1:	lea    ecx,[esp+0x18]
10030ce5:	push   ecx
10030ce6:	push   ebx
10030ce7:	push   ebx
10030ce8:	push   esi
10030ce9:	call   DWORD PTR ds:0x1006637c
10030cef:	test   eax,eax
10030cf1:	jne    0x10030d1c
10030cf3:	mov    DWORD PTR [ebp+0x18],0xf
10030cfa:	mov    DWORD PTR [ebp+0x14],ebx
10030cfd:	push   0x1006cd08
10030d02:	mov    BYTE PTR [ebp+0x4],bl
10030d05:	call   0x10043250
10030d0a:	add    esp,0x4
10030d0d:	push   eax
10030d0e:	push   0x1006cd08
10030d13:	mov    ecx,ebp
10030d15:	call   0x1000133f
10030d1a:	jmp    0x10030d90
10030d1c:	mov    esi,DWORD PTR [esp+0x2c]
10030d20:	mov    ebx,DWORD PTR [esp+0x28]
10030d24:	lea    edi,[esp+0x14]
10030d28:	call   0x10034520
10030d2d:	xor    ebx,ebx
10030d2f:	mov    DWORD PTR [esp+0x5c],ebx
10030d33:	mov    esi,DWORD PTR [esp+0x14]
10030d37:	cmp    DWORD PTR [esi-0x4],0x1
10030d3b:	jle    0x10030d4d
10030d3d:	mov    edx,DWORD PTR [esi-0xc]
10030d40:	push   edx
10030d41:	mov    eax,edi
10030d43:	push   eax
10030d44:	call   0x10034770
10030d49:	mov    esi,DWORD PTR [esp+0x14]
10030d4d:	mov    DWORD PTR [ebp+0x18],0xf
10030d54:	mov    DWORD PTR [ebp+0x14],ebx
10030d57:	push   esi
10030d58:	mov    BYTE PTR [ebp+0x4],bl
10030d5b:	call   0x10043250
10030d60:	add    esp,0x4
10030d63:	push   eax
10030d64:	push   esi
10030d65:	mov    ecx,ebp
10030d67:	call   0x1000133f
10030d6c:	lea    eax,[esi-0x10]
10030d6f:	mov    DWORD PTR [esp+0x5c],0xffffffff
10030d77:	lea    ecx,[eax+0xc]
10030d7a:	or     edx,0xffffffff
10030d7d:	lock xadd DWORD PTR [ecx],edx
10030d81:	dec    edx
10030d82:	test   edx,edx
10030d84:	jg     0x10030d90
10030d86:	mov    ecx,DWORD PTR [eax]
10030d88:	mov    edx,DWORD PTR [ecx]
10030d8a:	push   eax
10030d8b:	mov    eax,DWORD PTR [edx+0x4]
10030d8e:	call   eax
10030d90:	mov    eax,ebp
10030d92:	mov    ecx,DWORD PTR [esp+0x54]
10030d96:	mov    DWORD PTR fs:0x0,ecx
10030d9d:	pop    ecx
10030d9e:	pop    edi
10030d9f:	pop    esi
10030da0:	pop    ebp
10030da1:	pop    ebx
10030da2:	add    esp,0x4c
10030da5:	ret    
10030da6:	int3   
10030da7:	int3   
10030da8:	int3   
10030da9:	int3   
10030daa:	int3   
10030dab:	int3   
10030dac:	int3   
10030dad:	int3   
10030dae:	int3   
10030daf:	int3   
10030db0:	push   ebp
10030db1:	lea    ebp,[esp-0x78]
10030db5:	sub    esp,0xd0
10030dbb:	mov    eax,ds:0x1007e030
10030dc0:	xor    eax,ebp
10030dc2:	mov    DWORD PTR [ebp+0x74],eax
10030dc5:	push   esi
10030dc6:	push   edi
10030dc7:	push   0x64
10030dc9:	lea    eax,[ebp-0x54]
10030dcc:	push   eax
10030dcd:	xor    esi,esi
10030dcf:	push   0x59
10030dd1:	mov    DWORD PTR [ebp-0x58],esi
10030dd4:	call   DWORD PTR ds:0x10066238
10030dda:	push   eax
10030ddb:	call   DWORD PTR ds:0x10066240
10030de1:	call   DWORD PTR ds:0x1007efec
10030de7:	lea    ecx,[ebp-0x54]
10030dea:	push   ecx
10030deb:	mov    DWORD PTR [ebp-0x58],eax
10030dee:	call   DWORD PTR ds:0x100660c4
10030df4:	add    eax,0x1
10030df7:	cmp    eax,0x3fffffff
10030dfc:	jg     0x10030e35
10030dfe:	lea    esi,[eax+eax*1]
10030e01:	mov    eax,esi
10030e03:	call   0x1004b990
10030e08:	mov    edi,esp
10030e0a:	test   edi,edi
10030e0c:	je     0x10030e33
10030e0e:	mov    eax,DWORD PTR [ebp-0x58]
10030e11:	push   0x0
10030e13:	push   0x0
10030e15:	push   esi
10030e16:	push   edi
10030e17:	push   0xffffffff
10030e19:	lea    edx,[ebp-0x54]
10030e1c:	push   edx
10030e1d:	push   0x0
10030e1f:	push   eax
10030e20:	mov    BYTE PTR [edi],0x0
10030e23:	call   DWORD PTR ds:0x100660b8
10030e29:	mov    esi,eax
10030e2b:	neg    esi
10030e2d:	sbb    esi,esi
10030e2f:	and    esi,edi
10030e31:	jmp    0x10030e35
10030e33:	xor    esi,esi
10030e35:	mov    DWORD PTR [ebx+0x18],0xf
10030e3c:	mov    DWORD PTR [ebx+0x14],0x0
10030e43:	push   esi
10030e44:	mov    BYTE PTR [ebx+0x4],0x0
10030e48:	call   0x10043250
10030e4d:	add    esp,0x4
10030e50:	push   eax
10030e51:	push   esi
10030e52:	mov    ecx,ebx
10030e54:	call   0x1000133f
10030e59:	mov    eax,ebx
10030e5b:	lea    esp,[ebp-0x60]
10030e5e:	pop    edi
10030e5f:	pop    esi
10030e60:	mov    ecx,DWORD PTR [ebp+0x74]
10030e63:	xor    ecx,ebp
10030e65:	call   0x100430d7
10030e6a:	add    ebp,0x78
10030e6d:	mov    esp,ebp
10030e6f:	pop    ebp
10030e70:	ret    
10030e71:	int3   
10030e72:	int3   
10030e73:	int3   
10030e74:	int3   
10030e75:	int3   
10030e76:	int3   
10030e77:	int3   
10030e78:	int3   
10030e79:	int3   
10030e7a:	int3   
10030e7b:	int3   
10030e7c:	int3   
10030e7d:	int3   
10030e7e:	int3   
10030e7f:	int3   
10030e80:	sub    esp,0x74
10030e83:	mov    eax,ds:0x1007e030
10030e88:	xor    eax,esp
10030e8a:	mov    DWORD PTR [esp+0x70],eax
10030e8e:	mov    eax,DWORD PTR [esp+0x78]
10030e92:	movzx  ecx,BYTE PTR [eax+0xf]
10030e96:	movzx  edx,BYTE PTR [eax+0xe]
10030e9a:	push   ecx
10030e9b:	movzx  ecx,BYTE PTR [eax+0xd]
10030e9f:	push   edx
10030ea0:	movzx  edx,BYTE PTR [eax+0xc]
10030ea4:	push   ecx
10030ea5:	movzx  ecx,BYTE PTR [eax+0xb]
10030ea9:	push   edx
10030eaa:	movzx  edx,BYTE PTR [eax+0xa]
10030eae:	push   ecx
10030eaf:	movzx  ecx,BYTE PTR [eax+0x9]
10030eb3:	push   edx
10030eb4:	movzx  edx,BYTE PTR [eax+0x8]
10030eb8:	push   ecx
10030eb9:	movzx  ecx,WORD PTR [eax+0x6]
10030ebd:	push   edx
10030ebe:	movzx  edx,WORD PTR [eax+0x4]
10030ec2:	mov    eax,DWORD PTR [eax]
10030ec4:	push   ecx
10030ec5:	push   edx
10030ec6:	push   eax
10030ec7:	push   0x63908760
10030ecc:	push   0x106baf98
10030ed1:	push   0x10073088
10030ed6:	mov    DWORD PTR [esp+0x38],0x0
10030ede:	call   0x100042d1
10030ee3:	add    esp,0x8
10030ee6:	push   eax
10030ee7:	call   0x100042d1
10030eec:	push   eax
10030eed:	push   0x32
10030eef:	push   0x100730bc
10030ef4:	call   0x100042e3
10030ef9:	add    esp,0x14
10030efc:	push   eax
10030efd:	lea    ecx,[esp+0x34]
10030f01:	push   ecx
10030f02:	call   0x1005871f
10030f07:	lea    edx,[esp+0x38]
10030f0b:	mov    DWORD PTR [esi+0x18],0xf
10030f12:	mov    DWORD PTR [esi+0x14],0x0
10030f19:	push   edx
10030f1a:	mov    BYTE PTR [esi+0x4],0x0
10030f1e:	call   0x10043250
10030f23:	add    esp,0x38
10030f26:	push   eax
10030f27:	lea    eax,[esp+0x8]
10030f2b:	push   eax
10030f2c:	mov    ecx,esi
10030f2e:	call   0x1000133f
10030f33:	mov    ecx,DWORD PTR [esp+0x70]
10030f37:	xor    ecx,esp
10030f39:	mov    eax,esi
10030f3b:	call   0x100430d7
10030f40:	add    esp,0x74
10030f43:	ret    
10030f44:	int3   
10030f45:	int3   
10030f46:	int3   
10030f47:	int3   
10030f48:	int3   
10030f49:	int3   
10030f4a:	int3   
10030f4b:	int3   
10030f4c:	int3   
10030f4d:	int3   
10030f4e:	int3   
10030f4f:	int3   
10030f50:	push   esi
10030f51:	push   edi
10030f52:	push   0x10080d4c
10030f57:	call   DWORD PTR ds:0x100660a4
10030f5d:	mov    eax,DWORD PTR [esp+0xc]
10030f61:	mov    esi,DWORD PTR [eax]
10030f63:	mov    edi,DWORD PTR [eax+0x4]
10030f66:	push   eax
10030f67:	call   0x100430d2
10030f6c:	mov    eax,ds:0x10080fa0
10030f71:	add    esp,0x4
10030f74:	push   edi
10030f75:	push   eax
10030f76:	call   DWORD PTR ds:0x10066084
10030f7c:	push   esi
10030f7d:	call   DWORD PTR ds:0x10066380
10030f83:	push   0x10080d4c
10030f88:	call   DWORD PTR ds:0x100660ac
10030f8e:	pop    edi
10030f8f:	xor    eax,eax
10030f91:	pop    esi
10030f92:	ret    0x4
10030f95:	int3   
10030f96:	int3   
10030f97:	int3   
10030f98:	int3   
10030f99:	int3   
10030f9a:	int3   
10030f9b:	int3   
10030f9c:	int3   
10030f9d:	int3   
10030f9e:	int3   
10030f9f:	int3   
10030fa0:	push   0xffffffff
10030fa2:	push   0x10064138
10030fa7:	mov    eax,fs:0x0
10030fad:	push   eax
10030fae:	sub    esp,0x20
10030fb1:	push   ebx
10030fb2:	mov    eax,ds:0x1007e030
10030fb7:	xor    eax,esp
10030fb9:	push   eax
10030fba:	lea    eax,[esp+0x28]
10030fbe:	mov    fs:0x0,eax
10030fc4:	xor    ebx,ebx
10030fc6:	mov    DWORD PTR [esp+0x8],ebx
10030fca:	push   0x1006cd08
10030fcf:	mov    DWORD PTR [esp+0x28],0xf
10030fd7:	mov    DWORD PTR [esp+0x24],ebx
10030fdb:	mov    BYTE PTR [esp+0x14],bl
10030fdf:	call   0x10043250
10030fe4:	add    esp,0x4
10030fe7:	push   eax
10030fe8:	push   0x1006cd08
10030fed:	lea    ecx,[esp+0x14]
10030ff1:	call   0x1000133f
10030ff6:	mov    eax,DWORD PTR [esp+0x44]
10030ffa:	mov    ecx,DWORD PTR [esp+0x40]
10030ffe:	push   eax
10030fff:	mov    eax,DWORD PTR [esp+0x3c]
10031003:	push   ecx
10031004:	lea    edx,[esp+0x14]
10031008:	push   edx
10031009:	mov    edx,DWORD PTR [esp+0x48]
1003100d:	push   eax
1003100e:	lea    ecx,[esp+0x18]
10031012:	push   ecx
10031013:	mov    DWORD PTR [esp+0x44],ebx
10031017:	call   0x10031060
1003101c:	mov    ecx,DWORD PTR [eax]
1003101e:	mov    DWORD PTR [eax],ebx
10031020:	mov    edx,DWORD PTR [esp+0x1c]
10031024:	push   edx
10031025:	mov    DWORD PTR [esi],ecx
10031027:	call   0x100430d2
1003102c:	add    esp,0x18
1003102f:	cmp    DWORD PTR [esp+0x24],0x10
10031034:	jb     0x10031043
10031036:	mov    eax,DWORD PTR [esp+0x10]
1003103a:	push   eax
1003103b:	call   0x100430d2
10031040:	add    esp,0x4
10031043:	mov    eax,esi
10031045:	mov    ecx,DWORD PTR [esp+0x28]
10031049:	mov    DWORD PTR fs:0x0,ecx
10031050:	pop    ecx
10031051:	pop    ebx
10031052:	add    esp,0x2c
10031055:	ret    
10031056:	int3   
10031057:	int3   
10031058:	int3   
10031059:	int3   
1003105a:	int3   
1003105b:	int3   
1003105c:	int3   
1003105d:	int3   
1003105e:	int3   
1003105f:	int3   
10031060:	push   0xffffffff
10031062:	push   0x10064110
10031067:	mov    eax,fs:0x0
1003106d:	push   eax
1003106e:	sub    esp,0x18
10031071:	push   ebx
10031072:	push   ebp
10031073:	push   esi
10031074:	push   edi
10031075:	mov    eax,ds:0x1007e030
1003107a:	xor    eax,esp
1003107c:	push   eax
1003107d:	lea    eax,[esp+0x2c]
10031081:	mov    fs:0x0,eax
10031087:	mov    ebp,DWORD PTR [esp+0x3c]
1003108b:	xor    ebx,ebx
1003108d:	mov    DWORD PTR [esp+0x20],ebx
10031091:	mov    DWORD PTR [esp+0x24],ebx
10031095:	mov    eax,DWORD PTR [esp+0x4c]
10031099:	push   eax
1003109a:	lea    ecx,[esp+0x1c]
1003109e:	push   ecx
1003109f:	mov    ecx,DWORD PTR [esp+0x48]
100310a3:	push   edx
100310a4:	mov    edx,DWORD PTR [esp+0x50]
100310a8:	lea    eax,[esp+0x28]
100310ac:	mov    DWORD PTR [esp+0x40],ebx
100310b0:	push   eax
100310b1:	mov    DWORD PTR [esp+0x28],ebx
100310b5:	call   0x10031d50
100310ba:	mov    ecx,DWORD PTR [eax]
100310bc:	mov    esi,ecx
100310be:	mov    DWORD PTR [eax],ebx
100310c0:	mov    DWORD PTR [esp+0x38],esi
100310c4:	mov    BYTE PTR [esp+0x44],0x1
100310c9:	mov    edx,DWORD PTR [esp+0x2c]
100310cd:	push   edx
100310ce:	call   0x100430d2
100310d3:	add    esp,0x14
100310d6:	cmp    esi,ebx
100310d8:	jne    0x100310e0
100310da:	mov    DWORD PTR [ebp+0x0],ebx
100310dd:	push   ebx
100310de:	jmp    0x1003114d
100310e0:	mov    ecx,DWORD PTR [esp+0x18]
100310e4:	mov    eax,DWORD PTR [esi+ecx*1-0x4]
100310e8:	sub    eax,0x4
100310eb:	lea    edx,[eax+0x4]
100310ee:	cmp    edx,ecx
100310f0:	jbe    0x100310f7
100310f2:	mov    DWORD PTR [ebp+0x0],ebx
100310f5:	jmp    0x1003114c
100310f7:	mov    edx,DWORD PTR ds:0x10080dbc
100310fd:	push   ebx
100310fe:	push   edx
100310ff:	push   eax
10031100:	mov    edx,esi
10031102:	sub    edx,eax
10031104:	lea    eax,[edx+ecx*1-0x4]
10031108:	push   eax
10031109:	lea    ecx,[esp+0x30]
1003110d:	push   ecx
1003110e:	mov    ecx,DWORD PTR [esp+0x5c]
10031112:	lea    edx,[esp+0x2b]
10031116:	call   0x100399a0
1003111b:	mov    edi,DWORD PTR [eax]
1003111d:	add    esp,0x14
10031120:	cmp    edi,ebx
10031122:	mov    DWORD PTR [eax],ebx
10031124:	je     0x1003112f
10031126:	push   ebx
10031127:	call   0x100430d2
1003112c:	add    esp,0x4
1003112f:	mov    edx,DWORD PTR [esp+0x20]
10031133:	push   edx
10031134:	call   0x100430d2
10031139:	add    esp,0x4
1003113c:	cmp    BYTE PTR [esp+0x17],bl
10031140:	je     0x10031149
10031142:	mov    BYTE PTR ds:0x10080d48,0x1
10031149:	mov    DWORD PTR [ebp+0x0],edi
1003114c:	push   esi
1003114d:	call   0x100430d2
10031152:	add    esp,0x4
10031155:	push   ebx
10031156:	call   0x100430d2
1003115b:	add    esp,0x4
1003115e:	mov    eax,ebp
10031160:	mov    ecx,DWORD PTR [esp+0x2c]
10031164:	mov    DWORD PTR fs:0x0,ecx
1003116b:	pop    ecx
1003116c:	pop    edi
1003116d:	pop    esi
1003116e:	pop    ebp
1003116f:	pop    ebx
10031170:	add    esp,0x24
10031173:	ret    
10031174:	int3   
10031175:	int3   
10031176:	int3   
10031177:	int3   
10031178:	int3   
10031179:	int3   
1003117a:	int3   
1003117b:	int3   
1003117c:	int3   
1003117d:	int3   
1003117e:	int3   
1003117f:	int3   
10031180:	push   0xffffffff
10031182:	push   0x10063460
10031187:	mov    eax,fs:0x0
1003118d:	push   eax
1003118e:	push   esi
1003118f:	push   edi
10031190:	mov    eax,ds:0x1007e030
10031195:	xor    eax,esp
10031197:	push   eax
10031198:	lea    eax,[esp+0xc]
1003119c:	mov    fs:0x0,eax
100311a2:	mov    eax,DWORD PTR [esp+0x1c]
100311a6:	mov    edi,ecx
100311a8:	mov    DWORD PTR [esp+0x1c],0x0
100311b0:	cmp    DWORD PTR [eax+0x18],0x10
100311b4:	jb     0x100311bb
100311b6:	mov    esi,DWORD PTR [eax+0x4]
100311b9:	jmp    0x100311be
100311bb:	lea    esi,[eax+0x4]
100311be:	mov    eax,ds:0x10080a74
100311c3:	mov    edx,DWORD PTR [eax+0xc]
100311c6:	mov    ecx,0x10080a74
100311cb:	call   edx
100311cd:	add    eax,0x10
100311d0:	mov    DWORD PTR [esp+0x1c],eax
100311d4:	test   esi,esi
100311d6:	mov    DWORD PTR [esp+0x14],0x0
100311de:	je     0x10031206
100311e0:	test   esi,0xffff0000
100311e6:	jne    0x10031206
100311e8:	movzx  esi,si
100311eb:	push   esi
100311ec:	call   0x10001ffc
100311f1:	add    esp,0x4
100311f4:	test   eax,eax
100311f6:	je     0x10031211
100311f8:	push   esi
100311f9:	push   eax
100311fa:	lea    eax,[esp+0x24]
100311fe:	push   eax
100311ff:	call   0x100021c4
10031204:	jmp    0x10031211
10031206:	push   esi
10031207:	lea    ecx,[esp+0x20]
1003120b:	push   ecx
1003120c:	call   0x100020aa
10031211:	lea    ecx,[esp+0x1c]
10031215:	mov    DWORD PTR [esp+0x14],0x1
1003121d:	call   0x100308a0
10031222:	mov    DWORD PTR [esp+0x14],0xffffffff
1003122a:	mov    eax,DWORD PTR [esp+0x1c]
1003122e:	add    eax,0xfffffff0
10031231:	lea    edx,[eax+0xc]
10031234:	or     ecx,0xffffffff
10031237:	lock xadd DWORD PTR [edx],ecx
1003123b:	dec    ecx
1003123c:	test   ecx,ecx
1003123e:	jg     0x1003124a
10031240:	mov    ecx,DWORD PTR [eax]
10031242:	mov    edx,DWORD PTR [ecx]
10031244:	push   eax
10031245:	mov    eax,DWORD PTR [edx+0x4]
10031248:	call   eax
1003124a:	mov    eax,edi
1003124c:	mov    ecx,DWORD PTR [esp+0xc]
10031250:	mov    DWORD PTR fs:0x0,ecx
10031257:	pop    ecx
10031258:	pop    edi
10031259:	pop    esi
1003125a:	add    esp,0xc
1003125d:	ret    
1003125e:	int3   
1003125f:	int3   
10031260:	push   ebp
10031261:	mov    ebp,esp
10031263:	push   0xffffffff
10031265:	push   0x10063a88
1003126a:	mov    eax,fs:0x0
10031270:	push   eax
10031271:	sub    esp,0xd0
10031277:	mov    eax,ds:0x1007e030
1003127c:	xor    eax,ebp
1003127e:	mov    DWORD PTR [ebp-0x18],eax
10031281:	push   ebx
10031282:	push   esi
10031283:	push   edi
10031284:	push   eax
10031285:	lea    eax,[ebp-0xc]
10031288:	mov    fs:0x0,eax
1003128e:	mov    DWORD PTR [ebp-0x10],esp
10031291:	mov    eax,DWORD PTR [ebp+0x8]
10031294:	xor    ebx,ebx
10031296:	mov    DWORD PTR [ebp-0xb8],ebx
1003129c:	mov    DWORD PTR [ebp-0x4],ebx
1003129f:	mov    edi,0xf
100312a4:	mov    DWORD PTR [ebp-0xbc],eax
100312aa:	mov    DWORD PTR [ebp-0x8c],edi
100312b0:	mov    DWORD PTR [ebp-0x90],ebx
100312b6:	mov    BYTE PTR [ebp-0xa0],bl
100312bc:	mov    DWORD PTR [ebp-0x70],edi
100312bf:	mov    DWORD PTR [ebp-0x74],ebx
100312c2:	mov    BYTE PTR [ebp-0x84],bl
100312c8:	push   0x1
100312ca:	lea    ecx,[ebp-0xb8]
100312d0:	push   ecx
100312d1:	mov    BYTE PTR [ebp-0x4],0x2
100312d5:	call   0x10034bf0
100312da:	mov    DWORD PTR [ebp-0x1c],edi
100312dd:	mov    DWORD PTR [ebp-0x20],ebx
100312e0:	mov    BYTE PTR [ebp-0x30],bl
100312e3:	mov    DWORD PTR [ebp-0x38],edi
100312e6:	mov    DWORD PTR [ebp-0x3c],ebx
100312e9:	mov    BYTE PTR [ebp-0x4c],bl
100312ec:	lea    edx,[ebp-0x88]
100312f2:	push   edx
100312f3:	lea    eax,[ebp-0xa4]
100312f9:	push   eax
100312fa:	lea    ecx,[ebp-0xb4]
10031300:	push   ecx
10031301:	lea    edx,[ebp-0xb8]
10031307:	push   edx
10031308:	lea    edx,[ebp-0x50]
1003130b:	lea    ecx,[ebp-0x34]
1003130e:	mov    BYTE PTR [ebp-0x4],0x5
10031312:	call   0x10036750
10031317:	mov    esi,0x10
1003131c:	cmp    DWORD PTR [ebp-0x38],esi
1003131f:	jb     0x1003132d
10031321:	mov    eax,DWORD PTR [ebp-0x4c]
10031324:	push   eax
10031325:	call   0x100430d2
1003132a:	add    esp,0x4
1003132d:	cmp    DWORD PTR [ebp-0x1c],esi
10031330:	mov    DWORD PTR [ebp-0x38],edi
10031333:	mov    DWORD PTR [ebp-0x3c],ebx
10031336:	mov    BYTE PTR [ebp-0x4c],bl
10031339:	jb     0x10031347
1003133b:	mov    ecx,DWORD PTR [ebp-0x30]
1003133e:	push   ecx
1003133f:	call   0x100430d2
10031344:	add    esp,0x4
10031347:	mov    BYTE PTR [ebp-0x4],0x2
1003134b:	mov    edx,DWORD PTR [ebp-0xb8]
10031351:	push   edx
10031352:	mov    DWORD PTR [ebp-0x1c],edi
10031355:	mov    DWORD PTR [ebp-0x20],ebx
10031358:	mov    BYTE PTR [ebp-0x30],bl
1003135b:	call   DWORD PTR ds:0x10066070
10031361:	push   0x100730f0
10031366:	push   0x2
10031368:	push   0x1007312c
1003136d:	call   0x100042e3
10031372:	mov    esi,eax
10031374:	add    esp,0xc
10031377:	push   esi
10031378:	mov    DWORD PTR [ebp-0x54],edi
1003137b:	mov    DWORD PTR [ebp-0x58],ebx
1003137e:	mov    BYTE PTR [ebp-0x68],bl
10031381:	call   0x10043250
10031386:	add    esp,0x4
10031389:	push   eax
1003138a:	push   esi
1003138b:	lea    ecx,[ebp-0x6c]
1003138e:	call   0x1000133f
10031393:	lea    ebx,[ebp-0x50]
10031396:	mov    BYTE PTR [ebp-0x4],0x6
1003139a:	call   0x10030db0
1003139f:	push   eax
100313a0:	lea    ecx,[ebp-0x34]
100313a3:	mov    BYTE PTR [ebp-0x4],0x7
100313a7:	call   0x10031180
100313ac:	add    esp,0x4
100313af:	push   0xffffffff
100313b1:	xor    ebx,ebx
100313b3:	push   ebx
100313b4:	lea    esi,[ebp-0x6c]
100313b7:	mov    BYTE PTR [ebp-0x4],0x8
100313bb:	call   0x10004cc2
100313c0:	mov    esi,0x10
100313c5:	cmp    DWORD PTR [ebp-0x1c],esi
100313c8:	jb     0x100313d6
100313ca:	mov    eax,DWORD PTR [ebp-0x30]
100313cd:	push   eax
100313ce:	call   0x100430d2
100313d3:	add    esp,0x4
100313d6:	mov    BYTE PTR [ebp-0x4],0x6
100313da:	cmp    DWORD PTR [ebp-0x38],esi
100313dd:	mov    DWORD PTR [ebp-0x1c],0xf
100313e4:	mov    DWORD PTR [ebp-0x20],ebx
100313e7:	mov    BYTE PTR [ebp-0x30],bl
100313ea:	jb     0x100313f8
100313ec:	mov    ecx,DWORD PTR [ebp-0x4c]
100313ef:	push   ecx
100313f0:	call   0x100430d2
100313f5:	add    esp,0x4
100313f8:	lea    edx,[ebp-0xb4]
100313fe:	push   edx
100313ff:	lea    esi,[ebp-0xd8]
10031405:	call   0x10030e80
1003140a:	add    esp,0x4
1003140d:	mov    edi,eax
1003140f:	push   0x49018bb4
10031414:	push   0x10073130
10031419:	mov    BYTE PTR [ebp-0x4],0x9
1003141d:	call   0x100042d1
10031422:	add    esp,0x8
10031425:	push   0x58a17ea8
1003142a:	push   eax
1003142b:	call   0x100042d1
10031430:	add    esp,0x8
10031433:	push   eax
10031434:	push   0x3
10031436:	push   0x10073154
1003143b:	call   0x100042e3
10031440:	mov    esi,eax
10031442:	add    esp,0xc
10031445:	push   esi
10031446:	mov    DWORD PTR [ebp-0x38],0xf
1003144d:	mov    DWORD PTR [ebp-0x3c],ebx
10031450:	mov    BYTE PTR [ebp-0x4c],bl
10031453:	call   0x10043250
10031458:	add    esp,0x4
1003145b:	push   eax
1003145c:	push   esi
1003145d:	lea    ecx,[ebp-0x50]
10031460:	call   0x1000133f
10031465:	push   edi
10031466:	lea    eax,[ebp-0x50]
10031469:	push   eax
1003146a:	lea    ecx,[ebp-0x34]
1003146d:	push   ecx
1003146e:	mov    BYTE PTR [ebp-0x4],0xa
10031472:	call   0x100064fb
10031477:	add    esp,0xc
1003147a:	push   0xffffffff
1003147c:	push   ebx
1003147d:	lea    esi,[ebp-0x6c]
10031480:	mov    BYTE PTR [ebp-0x4],0xb
10031484:	call   0x10004cc2
10031489:	mov    edi,0x10
1003148e:	cmp    DWORD PTR [ebp-0x1c],edi
10031491:	jb     0x1003149f
10031493:	mov    edx,DWORD PTR [ebp-0x30]
10031496:	push   edx
10031497:	call   0x100430d2
1003149c:	add    esp,0x4
1003149f:	cmp    DWORD PTR [ebp-0x38],edi
100314a2:	mov    esi,0xf
100314a7:	mov    DWORD PTR [ebp-0x1c],esi
100314aa:	mov    DWORD PTR [ebp-0x20],ebx
100314ad:	mov    BYTE PTR [ebp-0x30],bl
100314b0:	jb     0x100314be
100314b2:	mov    eax,DWORD PTR [ebp-0x4c]
100314b5:	push   eax
100314b6:	call   0x100430d2
100314bb:	add    esp,0x4
100314be:	mov    BYTE PTR [ebp-0x4],0x6
100314c2:	cmp    DWORD PTR [ebp-0xc0],edi
100314c8:	mov    DWORD PTR [ebp-0x38],esi
100314cb:	mov    DWORD PTR [ebp-0x3c],ebx
100314ce:	mov    BYTE PTR [ebp-0x4c],bl
100314d1:	jb     0x100314e2
100314d3:	mov    ecx,DWORD PTR [ebp-0xd4]
100314d9:	push   ecx
100314da:	call   0x100430d2
100314df:	add    esp,0x4
100314e2:	lea    edx,[ebp-0xa4]
100314e8:	push   edx
100314e9:	lea    ecx,[ebp-0xd8]
100314ef:	call   0x10031180
100314f4:	add    esp,0x4
100314f7:	mov    esi,eax
100314f9:	push   0x311d5bcc
100314fe:	push   0x10073158
10031503:	mov    BYTE PTR [ebp-0x4],0xc
10031507:	call   0x100042d1
1003150c:	add    esp,0x8
1003150f:	push   0x42f336ba
10031514:	push   eax
10031515:	call   0x100042d1
1003151a:	add    esp,0x8
1003151d:	push   0x10fd5ab6
10031522:	push   eax
10031523:	call   0x100042d1
10031528:	add    esp,0x8
1003152b:	push   0x7030aae0
10031530:	push   eax
10031531:	call   0x100042d1
10031536:	add    esp,0x8
10031539:	push   eax
1003153a:	push   0x3
1003153c:	push   0x10073184
10031541:	call   0x100042e3
10031546:	add    esp,0xc
10031549:	push   esi
1003154a:	push   eax
1003154b:	lea    eax,[ebp-0x34]
1003154e:	push   eax
1003154f:	call   0x10006546
10031554:	add    esp,0xc
10031557:	push   0xffffffff
10031559:	push   ebx
1003155a:	lea    esi,[ebp-0x6c]
1003155d:	mov    BYTE PTR [ebp-0x4],0xd
10031561:	call   0x10004cc2
10031566:	cmp    DWORD PTR [ebp-0x1c],edi
10031569:	jb     0x10031577
1003156b:	mov    ecx,DWORD PTR [ebp-0x30]
1003156e:	push   ecx
1003156f:	call   0x100430d2
10031574:	add    esp,0x4
10031577:	mov    BYTE PTR [ebp-0x4],0x6
1003157b:	cmp    DWORD PTR [ebp-0xc0],edi
10031581:	mov    DWORD PTR [ebp-0x1c],0xf
10031588:	mov    DWORD PTR [ebp-0x20],ebx
1003158b:	mov    BYTE PTR [ebp-0x30],bl
1003158e:	jb     0x1003159f
10031590:	mov    edx,DWORD PTR [ebp-0xd4]
10031596:	push   edx
10031597:	call   0x100430d2
1003159c:	add    esp,0x4
1003159f:	lea    ebx,[ebp-0xd8]
100315a5:	call   0x1002fac0
100315aa:	push   eax
100315ab:	lea    ecx,[ebp-0x50]
100315ae:	mov    BYTE PTR [ebp-0x4],0xe
100315b2:	call   0x10031180
100315b7:	add    esp,0x4
100315ba:	mov    esi,eax
100315bc:	push   0x10073188
100315c1:	push   0x4
100315c3:	push   0x100731b0
100315c8:	mov    BYTE PTR [ebp-0x4],0xf
100315cc:	call   0x100042e3
100315d1:	add    esp,0xc
100315d4:	push   esi
100315d5:	push   eax
100315d6:	lea    eax,[ebp-0x34]
100315d9:	push   eax
100315da:	call   0x10006546
100315df:	add    esp,0xc
100315e2:	push   0xffffffff
100315e4:	xor    ebx,ebx
100315e6:	push   ebx
100315e7:	lea    esi,[ebp-0x6c]
100315ea:	mov    BYTE PTR [ebp-0x4],0x10
100315ee:	call   0x10004cc2
100315f3:	mov    esi,0x10
100315f8:	cmp    DWORD PTR [ebp-0x1c],esi
100315fb:	jb     0x10031609
100315fd:	mov    ecx,DWORD PTR [ebp-0x30]
10031600:	push   ecx
10031601:	call   0x100430d2
10031606:	add    esp,0x4
10031609:	cmp    DWORD PTR [ebp-0x38],esi
1003160c:	mov    edi,0xf
10031611:	mov    DWORD PTR [ebp-0x1c],edi
10031614:	mov    DWORD PTR [ebp-0x20],ebx
10031617:	mov    BYTE PTR [ebp-0x30],bl
1003161a:	jb     0x10031628
1003161c:	mov    edx,DWORD PTR [ebp-0x4c]
1003161f:	push   edx
10031620:	call   0x100430d2
10031625:	add    esp,0x4
10031628:	mov    BYTE PTR [ebp-0x4],0x6
1003162c:	cmp    DWORD PTR [ebp-0xc0],esi
10031632:	mov    DWORD PTR [ebp-0x38],edi
10031635:	mov    DWORD PTR [ebp-0x3c],ebx
10031638:	mov    BYTE PTR [ebp-0x4c],bl
1003163b:	jb     0x1003164c
1003163d:	mov    eax,DWORD PTR [ebp-0xd4]
10031643:	push   eax
10031644:	call   0x100430d2
10031649:	add    esp,0x4
1003164c:	lea    ecx,[ebp-0x88]
10031652:	push   ecx
10031653:	lea    ecx,[ebp-0xd8]
10031659:	call   0x10031180
1003165e:	add    esp,0x4
10031661:	mov    esi,eax
10031663:	push   0xa8045c8
10031668:	push   0x100731b8
1003166d:	mov    BYTE PTR [ebp-0x4],0x11
10031671:	call   0x100042d1
10031676:	add    esp,0x8
10031679:	push   0x775d9068
1003167e:	push   eax
1003167f:	call   0x100042d1
10031684:	add    esp,0x8
10031687:	push   eax
10031688:	push   0x3
1003168a:	push   0x100731f8
1003168f:	call   0x100042e3
10031694:	add    esp,0xc
10031697:	push   esi
10031698:	push   eax
10031699:	lea    edx,[ebp-0x34]
1003169c:	push   edx
1003169d:	call   0x10006546
100316a2:	add    esp,0xc
100316a5:	push   0xffffffff
100316a7:	push   ebx
100316a8:	lea    esi,[ebp-0x6c]
100316ab:	mov    BYTE PTR [ebp-0x4],0x12
100316af:	call   0x10004cc2
100316b4:	mov    esi,0x10
100316b9:	cmp    DWORD PTR [ebp-0x1c],esi
100316bc:	jb     0x100316ca
100316be:	mov    eax,DWORD PTR [ebp-0x30]
100316c1:	push   eax
100316c2:	call   0x100430d2
100316c7:	add    esp,0x4
100316ca:	mov    BYTE PTR [ebp-0x4],0x6
100316ce:	cmp    DWORD PTR [ebp-0xc0],esi
100316d4:	mov    DWORD PTR [ebp-0x1c],edi
100316d7:	mov    DWORD PTR [ebp-0x20],ebx
100316da:	mov    BYTE PTR [ebp-0x30],bl
100316dd:	jb     0x100316ee
100316df:	mov    ecx,DWORD PTR [ebp-0xd4]
100316e5:	push   ecx
100316e6:	call   0x100430d2
100316eb:	add    esp,0x4
100316ee:	lea    edx,[ebp-0xd8]
100316f4:	push   edx
100316f5:	call   0x10037c00
100316fa:	add    esp,0x4
100316fd:	mov    esi,eax
100316ff:	push   0x100731fc
10031704:	push   0x5
10031706:	push   0x10073228
1003170b:	mov    BYTE PTR [ebp-0x4],0x13
1003170f:	call   0x100042e3
10031714:	add    esp,0xc
10031717:	push   esi
10031718:	push   eax
10031719:	lea    eax,[ebp-0x34]
1003171c:	push   eax
1003171d:	call   0x10006546
10031722:	add    esp,0xc
10031725:	push   0xffffffff
10031727:	push   ebx
10031728:	lea    esi,[ebp-0x6c]
1003172b:	mov    BYTE PTR [ebp-0x4],0x14
1003172f:	call   0x10004cc2
10031734:	mov    esi,0x10
10031739:	cmp    DWORD PTR [ebp-0x1c],esi
1003173c:	jb     0x1003174a
1003173e:	mov    ecx,DWORD PTR [ebp-0x30]
10031741:	push   ecx
10031742:	call   0x100430d2
10031747:	add    esp,0x4
1003174a:	mov    BYTE PTR [ebp-0x4],0x6
1003174e:	cmp    DWORD PTR [ebp-0xc0],esi
10031754:	mov    DWORD PTR [ebp-0x1c],edi
10031757:	mov    DWORD PTR [ebp-0x20],ebx
1003175a:	mov    BYTE PTR [ebp-0x30],bl
1003175d:	jb     0x1003176e
1003175f:	mov    edx,DWORD PTR [ebp-0xd4]
10031765:	push   edx
10031766:	call   0x100430d2
1003176b:	add    esp,0x4
1003176e:	mov    esi,DWORD PTR [ebp-0xbc]
10031774:	push   0xffffffff
10031776:	push   ebx
10031777:	lea    eax,[ebp-0x6c]
1003177a:	mov    DWORD PTR [esi+0x18],edi
1003177d:	mov    DWORD PTR [esi+0x14],ebx
10031780:	push   eax
10031781:	mov    ecx,esi
10031783:	mov    BYTE PTR [esi+0x4],bl
10031786:	call   0x10001245
1003178b:	cmp    DWORD PTR [ebp-0x54],0x10
1003178f:	jb     0x1003179d
10031791:	mov    ecx,DWORD PTR [ebp-0x68]
10031794:	push   ecx
10031795:	call   0x100430d2
1003179a:	add    esp,0x4
1003179d:	cmp    DWORD PTR [ebp-0x70],0x10
100317a1:	mov    DWORD PTR [ebp-0x54],edi
100317a4:	mov    DWORD PTR [ebp-0x58],ebx
100317a7:	mov    BYTE PTR [ebp-0x68],bl
100317aa:	jb     0x100317bb
100317ac:	mov    edx,DWORD PTR [ebp-0x84]
100317b2:	push   edx
100317b3:	call   0x100430d2
100317b8:	add    esp,0x4
100317bb:	cmp    DWORD PTR [ebp-0x8c],0x10
100317c2:	mov    DWORD PTR [ebp-0x70],edi
100317c5:	mov    DWORD PTR [ebp-0x74],ebx
100317c8:	mov    BYTE PTR [ebp-0x84],bl
100317ce:	jb     0x100317f9
100317d0:	mov    eax,DWORD PTR [ebp-0xa0]
100317d6:	push   eax
100317d7:	call   0x100430d2
100317dc:	add    esp,0x4
100317df:	jmp    0x100317f9
100317e1:	mov    eax,0x100317e7
100317e6:	ret    
100317e7:	mov    esi,DWORD PTR [ebp-0xbc]
100317ed:	push   0x1006cd08
100317f2:	mov    ecx,esi
100317f4:	call   0x100011d1
100317f9:	mov    eax,esi
100317fb:	mov    ecx,DWORD PTR [ebp-0xc]
100317fe:	mov    DWORD PTR fs:0x0,ecx
10031805:	pop    ecx
10031806:	pop    edi
10031807:	pop    esi
10031808:	pop    ebx
10031809:	mov    ecx,DWORD PTR [ebp-0x18]
1003180c:	xor    ecx,ebp
1003180e:	call   0x100430d7
10031813:	mov    esp,ebp
10031815:	pop    ebp
10031816:	ret    
10031817:	int3   
10031818:	int3   
10031819:	int3   
1003181a:	int3   
1003181b:	int3   
1003181c:	int3   
1003181d:	int3   
1003181e:	int3   
1003181f:	int3   
10031820:	push   0xffffffff
10031822:	push   0x10061b01
10031827:	mov    eax,fs:0x0
1003182d:	push   eax
1003182e:	sub    esp,0x64
10031831:	mov    eax,ds:0x1007e030
10031836:	xor    eax,esp
10031838:	mov    DWORD PTR [esp+0x60],eax
1003183c:	push   ebx
1003183d:	push   ebp
1003183e:	push   esi
1003183f:	push   edi
10031840:	mov    eax,ds:0x1007e030
10031845:	xor    eax,esp
10031847:	push   eax
10031848:	lea    eax,[esp+0x78]
1003184c:	mov    fs:0x0,eax
10031852:	xor    ebp,ebp
10031854:	mov    DWORD PTR [esp+0x80],ebp
1003185b:	mov    ebx,ecx
1003185d:	mov    DWORD PTR [esp+0x30],ebp
10031861:	mov    edi,0xf
10031866:	mov    DWORD PTR [ebx+0x18],edi
10031869:	mov    DWORD PTR [ebx+0x14],ebp
1003186c:	push   0x1006cd08
10031871:	mov    DWORD PTR [esp+0x30],ebx
10031875:	mov    esi,edx
10031877:	mov    BYTE PTR [ebx+0x4],0x0
1003187b:	call   0x10043250
10031880:	add    esp,0x4
10031883:	push   eax
10031884:	push   0x1006cd08
10031889:	mov    ecx,ebx
1003188b:	call   0x1000133f
10031890:	mov    eax,0x1
10031895:	mov    DWORD PTR [esp+0x30],eax
10031899:	mov    DWORD PTR [esp+0x20],ebp
1003189d:	mov    DWORD PTR [esp+0x24],ebp
100318a1:	mov    DWORD PTR [esp+0x28],ebp
100318a5:	push   0xffffffff
100318a7:	mov    DWORD PTR [esp+0x84],eax
100318ae:	push   ebp
100318af:	push   esi
100318b0:	lea    ecx,[esp+0x48]
100318b4:	mov    DWORD PTR [esp+0x60],edi
100318b8:	mov    DWORD PTR [esp+0x5c],ebp
100318bc:	mov    BYTE PTR [esp+0x4c],0x0
100318c1:	call   0x10001245
100318c6:	mov    BYTE PTR [esp+0x80],0x2
100318ce:	mov    eax,DWORD PTR [esp+0x50]
100318d2:	cmp    eax,ebp
100318d4:	jbe    0x10031a09
100318da:	lea    ebx,[ebx+0x0]
100318e0:	cmp    eax,0xfa0
100318e5:	mov    DWORD PTR [esp+0x14],eax
100318e9:	jbe    0x100318f3
100318eb:	mov    DWORD PTR [esp+0x14],0xfa0
100318f3:	mov    eax,DWORD PTR [esp+0x14]
100318f7:	push   eax
100318f8:	push   ebp
100318f9:	lea    ecx,[esp+0x44]
100318fd:	push   ecx
100318fe:	lea    eax,[esp+0x64]
10031902:	call   0x1000ca96
10031907:	mov    ebx,eax
10031909:	mov    BYTE PTR [esp+0x80],0x3
10031911:	mov    edi,DWORD PTR [esp+0x20]
10031915:	cmp    edi,ebp
10031917:	mov    ebp,DWORD PTR [esp+0x24]
1003191b:	je     0x10031977
1003191d:	mov    esi,DWORD PTR [esp+0x28]
10031921:	mov    ecx,ebp
10031923:	sub    ecx,edi
10031925:	mov    eax,0x92492493
1003192a:	imul   ecx
1003192c:	add    edx,ecx
1003192e:	sar    edx,0x4
10031931:	mov    ecx,edx
10031933:	shr    ecx,0x1f
10031936:	add    ecx,edx
10031938:	sub    esi,edi
1003193a:	mov    eax,0x92492493
1003193f:	imul   esi
10031941:	add    edx,esi
10031943:	sar    edx,0x4
10031946:	mov    eax,edx
10031948:	shr    eax,0x1f
1003194b:	add    eax,edx
1003194d:	cmp    ecx,eax
1003194f:	jae    0x10031977
10031951:	mov    eax,DWORD PTR [esp+0x2c]
10031955:	mov    BYTE PTR [esp+0x18],0x0
1003195a:	mov    edx,DWORD PTR [esp+0x18]
1003195e:	push   edx
1003195f:	push   eax
10031960:	push   ebx
10031961:	push   0x1
10031963:	push   ebp
10031964:	mov    esi,ebp
10031966:	call   0x10010076
1003196b:	add    esp,0x14
1003196e:	add    esi,0x1c
10031971:	mov    DWORD PTR [esp+0x24],esi
10031975:	jmp    0x10031991
10031977:	cmp    edi,ebp
10031979:	jbe    0x10031980
1003197b:	call   0x100435f0
10031980:	push   ebp
10031981:	lea    eax,[esp+0x20]
10031985:	push   eax
10031986:	push   ebx
10031987:	lea    ecx,[esp+0x40]
1003198b:	push   ecx
1003198c:	call   0x1000fcc3
10031991:	mov    esi,0x10
10031996:	mov    BYTE PTR [esp+0x80],0x2
1003199e:	cmp    DWORD PTR [esp+0x70],esi
100319a2:	jb     0x100319b1
100319a4:	mov    edx,DWORD PTR [esp+0x5c]
100319a8:	push   edx
100319a9:	call   0x100430d2
100319ae:	add    esp,0x4
100319b1:	mov    eax,DWORD PTR [esp+0x14]
100319b5:	push   0xffffffff
100319b7:	push   eax
100319b8:	lea    ecx,[esp+0x44]
100319bc:	push   ecx
100319bd:	lea    eax,[esp+0x64]
100319c1:	call   0x1000ca96
100319c6:	push   0xffffffff
100319c8:	push   0x0
100319ca:	push   eax
100319cb:	lea    ecx,[esp+0x48]
100319cf:	mov    BYTE PTR [esp+0x8c],0x4
100319d7:	call   0x10001245
100319dc:	mov    BYTE PTR [esp+0x80],0x2
100319e4:	cmp    DWORD PTR [esp+0x70],esi
100319e8:	jb     0x100319f7
100319ea:	mov    edx,DWORD PTR [esp+0x5c]
100319ee:	push   edx
100319ef:	call   0x100430d2
100319f4:	add    esp,0x4
100319f7:	mov    eax,DWORD PTR [esp+0x50]
100319fb:	xor    ebp,ebp
100319fd:	test   eax,eax
100319ff:	ja     0x100318e0
10031a05:	mov    ebx,DWORD PTR [esp+0x2c]
10031a09:	mov    BYTE PTR [esp+0x80],0x1
10031a11:	cmp    DWORD PTR [esp+0x54],0x10
10031a16:	jb     0x10031a25
10031a18:	mov    eax,DWORD PTR [esp+0x40]
10031a1c:	push   eax
10031a1d:	call   0x100430d2
10031a22:	add    esp,0x4
10031a25:	push   0x10073230
10031a2a:	push   0x8
10031a2c:	push   0x10073264
10031a31:	call   0x100042e3
10031a36:	mov    esi,eax
10031a38:	add    esp,0xc
10031a3b:	push   esi
10031a3c:	call   0x10043250
10031a41:	add    esp,0x4
10031a44:	push   eax
10031a45:	push   esi
10031a46:	mov    eax,ebx
10031a48:	call   0x10004d66
10031a4d:	xor    edi,edi
10031a4f:	mov    DWORD PTR [esp+0x18],ebp
10031a53:	mov    eax,DWORD PTR [esp+0x20]
10031a57:	cmp    eax,ebp
10031a59:	mov    DWORD PTR [esp+0x14],edi
10031a5d:	jne    0x10031a63
10031a5f:	xor    eax,eax
10031a61:	jmp    0x10031a7c
10031a63:	mov    ecx,DWORD PTR [esp+0x24]
10031a67:	sub    ecx,eax
10031a69:	mov    eax,0x92492493
10031a6e:	imul   ecx
10031a70:	add    edx,ecx
10031a72:	sar    edx,0x4
10031a75:	mov    eax,edx
10031a77:	shr    eax,0x1f
10031a7a:	add    eax,edx
10031a7c:	cmp    edi,eax
10031a7e:	je     0x10031cc9
10031a84:	push   0x10073270
10031a89:	mov    DWORD PTR [esp+0x58],0xf
10031a91:	mov    DWORD PTR [esp+0x54],ebp
10031a95:	mov    BYTE PTR [esp+0x44],0x0
10031a9a:	call   0x10043250
10031a9f:	mov    ecx,DWORD PTR [esp+0x44]
10031aa3:	mov    esi,eax
10031aa5:	mov    eax,DWORD PTR [esp+0x58]
10031aa9:	add    esp,0x4
10031aac:	cmp    eax,0x10
10031aaf:	mov    edx,ecx
10031ab1:	jae    0x10031ab7
10031ab3:	lea    edx,[esp+0x40]
10031ab7:	cmp    edx,0x10073270
10031abd:	ja     0x10031b02
10031abf:	cmp    eax,0x10
10031ac2:	mov    edx,ecx
10031ac4:	jae    0x10031aca
10031ac6:	lea    edx,[esp+0x40]
10031aca:	mov    edi,DWORD PTR [esp+0x50]
10031ace:	add    edx,edi
10031ad0:	cmp    edx,0x10073270
10031ad6:	jbe    0x10031afe
10031ad8:	cmp    eax,0x10
10031adb:	mov    eax,ecx
10031add:	jae    0x10031ae3
10031adf:	lea    eax,[esp+0x40]
10031ae3:	push   esi
10031ae4:	mov    ecx,0x10073270
10031ae9:	sub    ecx,eax
10031aeb:	push   ecx
10031aec:	lea    edx,[esp+0x44]
10031af0:	push   edx
10031af1:	mov    ecx,edx
10031af3:	call   0x10001245
10031af8:	mov    edi,DWORD PTR [esp+0x14]
10031afc:	jmp    0x10031b67
10031afe:	mov    edi,DWORD PTR [esp+0x14]
10031b02:	cmp    esi,0xfffffffe
10031b05:	jbe    0x10031b14
10031b07:	call   0x10057440
10031b0c:	mov    eax,DWORD PTR [esp+0x54]
10031b10:	mov    ecx,DWORD PTR [esp+0x40]
10031b14:	cmp    eax,esi
10031b16:	jae    0x10031caa
10031b1c:	mov    eax,DWORD PTR [esp+0x50]
10031b20:	push   eax
10031b21:	push   esi
10031b22:	lea    ecx,[esp+0x44]
10031b26:	call   0x10001504
10031b2b:	mov    eax,DWORD PTR [esp+0x54]
10031b2f:	mov    ecx,DWORD PTR [esp+0x40]
10031b33:	cmp    esi,ebp
10031b35:	jbe    0x10031b67
10031b37:	cmp    eax,0x10
10031b3a:	jae    0x10031b40
10031b3c:	lea    ecx,[esp+0x40]
10031b40:	push   esi
10031b41:	push   0x10073270
10031b46:	push   eax
10031b47:	push   ecx
10031b48:	call   0x10043605
10031b4d:	mov    eax,DWORD PTR [esp+0x50]
10031b51:	add    esp,0x10
10031b54:	cmp    DWORD PTR [esp+0x54],0x10
10031b59:	mov    DWORD PTR [esp+0x50],esi
10031b5d:	jae    0x10031b63
10031b5f:	lea    eax,[esp+0x40]
10031b63:	mov    BYTE PTR [eax+esi*1],0x0
10031b67:	cmp    edi,ebp
10031b69:	mov    BYTE PTR [esp+0x80],0x5
10031b71:	jbe    0x10031b99
10031b73:	push   0xa
10031b75:	lea    ecx,[esp+0x5c]
10031b79:	push   ecx
10031b7a:	push   edi
10031b7b:	call   0x10045d96
10031b80:	mov    esi,eax
10031b82:	add    esp,0xc
10031b85:	push   esi
10031b86:	call   0x10043250
10031b8b:	add    esp,0x4
10031b8e:	push   eax
10031b8f:	push   esi
10031b90:	lea    eax,[esp+0x44]
10031b94:	call   0x10004d66
10031b99:	push   0x1006e148
10031b9e:	call   0x10043250
10031ba3:	add    esp,0x4
10031ba6:	push   eax
10031ba7:	push   0x1006e148
10031bac:	lea    eax,[esp+0x44]
10031bb0:	call   0x10004d66
10031bb5:	mov    esi,DWORD PTR [esp+0x20]
10031bb9:	cmp    esi,ebp
10031bbb:	je     0x10031bda
10031bbd:	mov    ecx,DWORD PTR [esp+0x24]
10031bc1:	sub    ecx,esi
10031bc3:	mov    eax,0x92492493
10031bc8:	imul   ecx
10031bca:	add    edx,ecx
10031bcc:	sar    edx,0x4
10031bcf:	mov    eax,edx
10031bd1:	shr    eax,0x1f
10031bd4:	add    eax,edx
10031bd6:	cmp    edi,eax
10031bd8:	jb     0x10031be3
10031bda:	call   0x100435f0
10031bdf:	mov    esi,DWORD PTR [esp+0x20]
10031be3:	mov    edx,DWORD PTR [esp+0x18]
10031be7:	push   0xffffffff
10031be9:	lea    eax,[esi+edx*1]
10031bec:	push   ebp
10031bed:	lea    esi,[esp+0x44]
10031bf1:	call   0x10004cc2
10031bf6:	cmp    edi,ebp
10031bf8:	je     0x10031c73
10031bfa:	push   0xea55cc0
10031bff:	push   0x336babcf
10031c04:	push   0xe3b6b0c
10031c09:	push   0x38ab77b
10031c0e:	push   0x452a87e7
10031c13:	push   0x4412ee15
10031c18:	push   0x10073274
10031c1d:	call   0x100042d1
10031c22:	add    esp,0x8
10031c25:	push   eax
10031c26:	call   0x100042d1
10031c2b:	add    esp,0x8
10031c2e:	push   eax
10031c2f:	call   0x100042d1
10031c34:	add    esp,0x8
10031c37:	push   eax
10031c38:	call   0x100042d1
10031c3d:	add    esp,0x8
10031c40:	push   eax
10031c41:	call   0x100042d1
10031c46:	add    esp,0x8
10031c49:	push   eax
10031c4a:	call   0x100042d1
10031c4f:	push   eax
10031c50:	push   0x1
10031c52:	push   0x1006d8d4
10031c57:	call   0x100042e3
10031c5c:	mov    esi,eax
10031c5e:	add    esp,0x14
10031c61:	push   esi
10031c62:	call   0x10043250
10031c67:	add    esp,0x4
10031c6a:	push   eax
10031c6b:	push   esi
10031c6c:	mov    eax,ebx
10031c6e:	call   0x10004d66
10031c73:	push   0xffffffff
10031c75:	push   ebp
10031c76:	lea    eax,[esp+0x44]
10031c7a:	mov    esi,ebx
10031c7c:	call   0x10004cc2
10031c81:	mov    BYTE PTR [esp+0x80],0x1
10031c89:	cmp    DWORD PTR [esp+0x54],0x10
10031c8e:	jb     0x10031c9d
10031c90:	mov    eax,DWORD PTR [esp+0x40]
10031c94:	push   eax
10031c95:	call   0x100430d2
10031c9a:	add    esp,0x4
10031c9d:	add    edi,0x1
10031ca0:	add    DWORD PTR [esp+0x18],0x1c
10031ca5:	jmp    0x10031a53
10031caa:	cmp    esi,ebp
10031cac:	jne    0x10031b35
10031cb2:	cmp    eax,0x10
10031cb5:	mov    DWORD PTR [esp+0x50],ebp
10031cb9:	mov    eax,ecx
10031cbb:	jae    0x10031cc1
10031cbd:	lea    eax,[esp+0x40]
10031cc1:	mov    BYTE PTR [eax],0x0
10031cc4:	jmp    0x10031b67
10031cc9:	push   0x1006d3a4
10031cce:	call   0x10043250
10031cd3:	add    esp,0x4
10031cd6:	push   eax
10031cd7:	push   0x1006d3a4
10031cdc:	mov    eax,ebx
10031cde:	call   0x10004d66
10031ce3:	mov    esi,DWORD PTR [esp+0x20]
10031ce7:	cmp    esi,ebp
10031ce9:	je     0x10031d2b
10031ceb:	mov    edi,DWORD PTR [esp+0x24]
10031cef:	cmp    esi,edi
10031cf1:	je     0x10031d22
10031cf3:	add    esi,0x18
10031cf6:	cmp    DWORD PTR [esi],0x10
10031cf9:	jb     0x10031d07
10031cfb:	mov    eax,DWORD PTR [esi-0x14]
10031cfe:	push   eax
10031cff:	call   0x100430d2
10031d04:	add    esp,0x4
10031d07:	mov    DWORD PTR [esi],0xf
10031d0d:	mov    DWORD PTR [esi-0x4],ebp
10031d10:	mov    BYTE PTR [esi-0x14],0x0
10031d14:	add    esi,0x1c
10031d17:	lea    ecx,[esi-0x18]
10031d1a:	cmp    ecx,edi
10031d1c:	jne    0x10031cf6
10031d1e:	mov    esi,DWORD PTR [esp+0x20]
10031d22:	push   esi
10031d23:	call   0x100430d2
10031d28:	add    esp,0x4
10031d2b:	mov    eax,ebx
10031d2d:	mov    ecx,DWORD PTR [esp+0x78]
10031d31:	mov    DWORD PTR fs:0x0,ecx
10031d38:	pop    ecx
10031d39:	pop    edi
10031d3a:	pop    esi
10031d3b:	pop    ebp
10031d3c:	pop    ebx
10031d3d:	mov    ecx,DWORD PTR [esp+0x60]
10031d41:	xor    ecx,esp
10031d43:	call   0x100430d7
10031d48:	add    esp,0x70
10031d4b:	ret    
10031d4c:	int3   
10031d4d:	int3   
10031d4e:	int3   
10031d4f:	int3   
10031d50:	push   ebp
10031d51:	mov    ebp,esp
10031d53:	and    esp,0xfffffff8
10031d56:	push   0xffffffff
10031d58:	push   0x100640cc
10031d5d:	mov    eax,fs:0x0
10031d63:	push   eax
10031d64:	sub    esp,0x1f0
10031d6a:	mov    eax,ds:0x1007e030
10031d6f:	xor    eax,esp
10031d71:	mov    DWORD PTR [esp+0x1e8],eax
10031d78:	push   ebx
10031d79:	push   esi
10031d7a:	push   edi
10031d7b:	mov    eax,ds:0x1007e030
10031d80:	xor    eax,esp
10031d82:	push   eax
10031d83:	lea    eax,[esp+0x200]
10031d8a:	mov    fs:0x0,eax
10031d90:	mov    eax,DWORD PTR [ebp+0x8]
10031d93:	mov    esi,DWORD PTR [ebp+0xc]
10031d96:	mov    DWORD PTR [esp+0x1c],ecx
10031d9a:	mov    DWORD PTR [esp+0x14],eax
10031d9e:	mov    eax,DWORD PTR [ebp+0x10]
10031da1:	lea    ecx,[esp+0x60]
10031da5:	xor    ebx,ebx
10031da7:	push   ecx
10031da8:	mov    DWORD PTR [esp+0x1c],edx
10031dac:	mov    DWORD PTR [esp+0x24],eax
10031db0:	mov    DWORD PTR [esp+0x28],ebx
10031db4:	call   0x10031260
10031db9:	add    esp,0x4
10031dbc:	mov    edi,eax
10031dbe:	push   esi
10031dbf:	lea    ecx,[esp+0x48]
10031dc3:	mov    DWORD PTR [esp+0x20c],ebx
10031dca:	call   0x10031180
10031dcf:	add    esp,0x4
10031dd2:	mov    DWORD PTR [esp+0x10],eax
10031dd6:	push   0x5ad7d4ae
10031ddb:	push   0x100732b0
10031de0:	mov    BYTE PTR [esp+0x210],0x1
10031de8:	call   0x100042d1
10031ded:	push   0x7d9d5c2a
10031df2:	push   eax
10031df3:	call   0x100042d1
10031df8:	push   0x38d031b8
10031dfd:	push   eax
10031dfe:	call   0x100042d1
10031e03:	push   0x284acdf8
10031e08:	push   eax
10031e09:	call   0x100042d1
10031e0e:	push   0x1fc7b9e2
10031e13:	push   eax
10031e14:	call   0x100042d1
10031e19:	push   eax
10031e1a:	push   0x4
10031e1c:	push   0x100732dc
10031e21:	call   0x100042e3
10031e26:	mov    esi,eax
10031e28:	add    esp,0x34
10031e2b:	push   esi
10031e2c:	mov    DWORD PTR [esp+0x44],0xf
10031e34:	mov    DWORD PTR [esp+0x40],ebx
10031e38:	mov    BYTE PTR [esp+0x30],bl
10031e3c:	call   0x10043250
10031e41:	add    esp,0x4
10031e44:	push   eax
10031e45:	push   esi
10031e46:	lea    ecx,[esp+0x30]
10031e4a:	call   0x1000133f
10031e4f:	mov    BYTE PTR [esp+0x208],0x2
10031e57:	mov    edx,DWORD PTR [esp+0x10]
10031e5b:	push   edx
10031e5c:	lea    eax,[esp+0x2c]
10031e60:	push   eax
10031e61:	lea    ecx,[esp+0xbc]
10031e68:	push   ecx
10031e69:	call   0x100064fb
10031e6e:	add    esp,0xc
10031e71:	push   0x100732ac
10031e76:	push   eax
10031e77:	lea    edx,[esp+0xa0]
10031e7e:	push   edx
10031e7f:	mov    BYTE PTR [esp+0x214],0x3
10031e87:	call   0x100064b5
10031e8c:	add    esp,0xc
10031e8f:	push   edi
10031e90:	push   eax
10031e91:	lea    eax,[esp+0x1e4]
10031e98:	push   eax
10031e99:	mov    BYTE PTR [esp+0x214],0x4
10031ea1:	call   0x100064fb
10031ea6:	add    esp,0xc
10031ea9:	mov    edi,0x10
10031eae:	cmp    DWORD PTR [esp+0xb0],edi
10031eb5:	jb     0x10031ec7
10031eb7:	mov    ecx,DWORD PTR [esp+0x9c]
10031ebe:	push   ecx
10031ebf:	call   0x100430d2
10031ec4:	add    esp,0x4
10031ec7:	mov    esi,0xf
10031ecc:	mov    DWORD PTR [esp+0xb0],esi
10031ed3:	mov    DWORD PTR [esp+0xac],ebx
10031eda:	mov    BYTE PTR [esp+0x9c],bl
10031ee1:	cmp    DWORD PTR [esp+0xcc],edi
10031ee8:	jb     0x10031efa
10031eea:	mov    edx,DWORD PTR [esp+0xb8]
10031ef1:	push   edx
10031ef2:	call   0x100430d2
10031ef7:	add    esp,0x4
10031efa:	mov    DWORD PTR [esp+0xcc],esi
10031f01:	mov    DWORD PTR [esp+0xc8],ebx
10031f08:	mov    BYTE PTR [esp+0xb8],bl
10031f0f:	cmp    DWORD PTR [esp+0x40],edi
10031f13:	jb     0x10031f22
10031f15:	mov    eax,DWORD PTR [esp+0x2c]
10031f19:	push   eax
10031f1a:	call   0x100430d2
10031f1f:	add    esp,0x4
10031f22:	mov    DWORD PTR [esp+0x40],esi
10031f26:	mov    DWORD PTR [esp+0x3c],ebx
10031f2a:	mov    BYTE PTR [esp+0x2c],bl
10031f2e:	cmp    DWORD PTR [esp+0x5c],edi
10031f32:	jb     0x10031f41
10031f34:	mov    ecx,DWORD PTR [esp+0x48]
10031f38:	push   ecx
10031f39:	call   0x100430d2
10031f3e:	add    esp,0x4
10031f41:	mov    DWORD PTR [esp+0x5c],esi
10031f45:	mov    DWORD PTR [esp+0x58],ebx
10031f49:	mov    BYTE PTR [esp+0x48],bl
10031f4d:	mov    BYTE PTR [esp+0x208],0xa
10031f55:	cmp    DWORD PTR [esp+0x78],edi
10031f59:	jb     0x10031f68
10031f5b:	mov    edx,DWORD PTR [esp+0x64]
10031f5f:	push   edx
10031f60:	call   0x100430d2
10031f65:	add    esp,0x4
10031f68:	mov    eax,ds:0x10080dc0
10031f6d:	push   ebx
10031f6e:	push   eax
10031f6f:	lea    ecx,[esp+0x1c8]
10031f76:	push   ecx
10031f77:	lea    ecx,[esp+0x1e8]
10031f7e:	mov    DWORD PTR [esp+0x84],esi
10031f85:	mov    DWORD PTR [esp+0x80],ebx
10031f8c:	mov    BYTE PTR [esp+0x70],bl
10031f90:	call   0x10039f60
10031f95:	add    esp,0xc
10031f98:	mov    BYTE PTR [esp+0x208],0xb
10031fa0:	push   0x10071ec4
10031fa5:	mov    DWORD PTR [esp+0x124],esi
10031fac:	mov    DWORD PTR [esp+0x120],ebx
10031fb3:	mov    BYTE PTR [esp+0x110],bl
10031fba:	call   0x10043250
10031fbf:	add    esp,0x4
10031fc2:	push   eax
10031fc3:	push   0x10071ec4
10031fc8:	lea    ecx,[esp+0x110]
10031fcf:	call   0x1000133f
10031fd4:	push   0x1006cd08
10031fd9:	mov    BYTE PTR [esp+0x20c],0xc
10031fe1:	call   0x10043250
10031fe6:	mov    edi,DWORD PTR [esp+0x1c]
10031fea:	mov    esi,DWORD PTR [edi+0x14]
10031fed:	add    esp,0x4
10031ff0:	cmp    esi,eax
10031ff2:	mov    DWORD PTR [esp+0x10],eax
10031ff6:	mov    ecx,esi
10031ff8:	jae    0x10031ffc
10031ffa:	mov    eax,esi
10031ffc:	cmp    DWORD PTR [edi+0x18],0x10
10032000:	jb     0x10032007
10032002:	mov    ecx,DWORD PTR [edi+0x4]
10032005:	jmp    0x1003200a
10032007:	lea    ecx,[edi+0x4]
1003200a:	push   eax
1003200b:	push   0x1006cd08
10032010:	push   ecx
10032011:	call   0x100439bb
10032016:	add    esp,0xc
10032019:	cmp    eax,ebx
1003201b:	jne    0x10032032
1003201d:	mov    eax,DWORD PTR [esp+0x10]
10032021:	cmp    esi,eax
10032023:	jb     0x10032032
10032025:	xor    edx,edx
10032027:	cmp    esi,eax
10032029:	setne  dl
1003202c:	mov    eax,edx
1003202e:	cmp    eax,ebx
10032030:	je     0x10032084
10032032:	movzx  eax,BYTE PTR ds:0x10080d48
10032039:	mov    ecx,DWORD PTR ds:0x10080dbc
1003203f:	push   eax
10032040:	push   ecx
10032041:	lea    edx,[esp+0x84]
10032048:	push   edx
10032049:	mov    ecx,edi
1003204b:	call   0x10039f60
10032050:	add    esp,0xc
10032053:	push   0xffffffff
10032055:	push   ebx
10032056:	lea    esi,[esp+0x110]
1003205d:	mov    BYTE PTR [esp+0x210],0xd
10032065:	call   0x10004cc2
1003206a:	cmp    DWORD PTR [esp+0x94],0x10
10032072:	jb     0x10032084
10032074:	mov    eax,DWORD PTR [esp+0x80]
1003207b:	push   eax
1003207c:	call   0x100430d2
10032081:	add    esp,0x4
10032084:	mov    DWORD PTR [esp+0x10],ebx
10032088:	mov    ecx,DWORD PTR [esp+0x1c]
1003208c:	push   0x100732e4
10032091:	push   ecx
10032092:	lea    edx,[esp+0x84]
10032099:	push   edx
1003209a:	mov    BYTE PTR [esp+0x214],0xe
100320a2:	call   0x100064b5
100320a7:	add    esp,0xc
100320aa:	lea    ecx,[esp+0x1dc]
100320b1:	push   ecx
100320b2:	push   eax
100320b3:	lea    edx,[esp+0x4c]
100320b7:	push   edx
100320b8:	mov    BYTE PTR [esp+0x214],0xf
100320c0:	call   0x100064fb
100320c5:	add    esp,0xc
100320c8:	push   edi
100320c9:	push   eax
100320ca:	lea    eax,[esp+0x68]
100320ce:	push   eax
100320cf:	mov    BYTE PTR [esp+0x214],0x10
100320d7:	call   0x100064fb
100320dc:	mov    esi,0x10
100320e1:	add    esp,0xc
100320e4:	cmp    DWORD PTR [eax+0x18],esi
100320e7:	jb     0x100320ee
100320e9:	mov    eax,DWORD PTR [eax+0x4]
100320ec:	jmp    0x100320f1
100320ee:	add    eax,0x4
100320f1:	push   eax
100320f2:	call   0x1000205f
100320f7:	add    esp,0x4
100320fa:	cmp    DWORD PTR [esp+0x78],esi
100320fe:	jb     0x1003210d
10032100:	mov    ecx,DWORD PTR [esp+0x64]
10032104:	push   ecx
10032105:	call   0x100430d2
1003210a:	add    esp,0x4
1003210d:	cmp    DWORD PTR [esp+0x5c],esi
10032111:	mov    edi,0xf
10032116:	mov    DWORD PTR [esp+0x78],edi
1003211a:	mov    DWORD PTR [esp+0x74],ebx
1003211e:	mov    BYTE PTR [esp+0x64],bl
10032122:	jb     0x10032131
10032124:	mov    edx,DWORD PTR [esp+0x48]
10032128:	push   edx
10032129:	call   0x100430d2
1003212e:	add    esp,0x4
10032131:	cmp    DWORD PTR [esp+0x94],esi
10032138:	mov    DWORD PTR [esp+0x5c],edi
1003213c:	mov    DWORD PTR [esp+0x58],ebx
10032140:	mov    BYTE PTR [esp+0x48],bl
10032144:	jb     0x10032156
10032146:	mov    eax,DWORD PTR [esp+0x80]
1003214d:	push   eax
1003214e:	call   0x100430d2
10032153:	add    esp,0x4
10032156:	mov    DWORD PTR [esp+0x140],edi
1003215d:	mov    DWORD PTR [esp+0x13c],ebx
10032164:	mov    BYTE PTR [esp+0x12c],bl
1003216b:	mov    DWORD PTR [esp+0x160],edi
10032172:	mov    DWORD PTR [esp+0x15c],ebx
10032179:	mov    BYTE PTR [esp+0x14c],bl
10032180:	mov    DWORD PTR [esp+0x17c],edi
10032187:	mov    DWORD PTR [esp+0x178],ebx
1003218e:	mov    BYTE PTR [esp+0x168],bl
10032195:	mov    DWORD PTR [esp+0x198],edi
1003219c:	mov    DWORD PTR [esp+0x194],ebx
100321a3:	mov    BYTE PTR [esp+0x184],bl
100321aa:	mov    DWORD PTR [esp+0x1b4],edi
100321b1:	mov    DWORD PTR [esp+0x1b0],ebx
100321b8:	mov    BYTE PTR [esp+0x1a0],bl
100321bf:	lea    ecx,[esp+0x124]
100321c6:	push   ecx
100321c7:	mov    ecx,DWORD PTR [esp+0x20]
100321cb:	mov    BYTE PTR [esp+0x20c],0x11
100321d3:	call   0x10032d80
100321d8:	add    esp,0x4
100321db:	test   al,al
100321dd:	jne    0x1003234e
100321e3:	cmp    DWORD PTR [esp+0x1b4],esi
100321ea:	mov    edx,DWORD PTR [esp+0x14]
100321ee:	mov    DWORD PTR [edx],ebx
100321f0:	jb     0x10032202
100321f2:	mov    eax,DWORD PTR [esp+0x1a0]
100321f9:	push   eax
100321fa:	call   0x100430d2
100321ff:	add    esp,0x4
10032202:	cmp    DWORD PTR [esp+0x198],esi
10032209:	mov    DWORD PTR [esp+0x1b4],edi
10032210:	mov    DWORD PTR [esp+0x1b0],ebx
10032217:	mov    BYTE PTR [esp+0x1a0],bl
1003221e:	jb     0x10032230
10032220:	mov    ecx,DWORD PTR [esp+0x184]
10032227:	push   ecx
10032228:	call   0x100430d2
1003222d:	add    esp,0x4
10032230:	cmp    DWORD PTR [esp+0x17c],esi
10032237:	mov    DWORD PTR [esp+0x198],edi
1003223e:	mov    DWORD PTR [esp+0x194],ebx
10032245:	mov    BYTE PTR [esp+0x184],bl
1003224c:	jb     0x1003225e
1003224e:	mov    edx,DWORD PTR [esp+0x168]
10032255:	push   edx
10032256:	call   0x100430d2
1003225b:	add    esp,0x4
1003225e:	cmp    DWORD PTR [esp+0x160],esi
10032265:	mov    DWORD PTR [esp+0x17c],edi
1003226c:	mov    DWORD PTR [esp+0x178],ebx
10032273:	mov    BYTE PTR [esp+0x168],bl
1003227a:	jb     0x1003228c
1003227c:	mov    eax,DWORD PTR [esp+0x14c]
10032283:	push   eax
10032284:	call   0x100430d2
10032289:	add    esp,0x4
1003228c:	cmp    DWORD PTR [esp+0x140],esi
10032293:	mov    DWORD PTR [esp+0x160],edi
1003229a:	mov    DWORD PTR [esp+0x15c],ebx
100322a1:	mov    BYTE PTR [esp+0x14c],bl
100322a8:	jb     0x100322ba
100322aa:	mov    ecx,DWORD PTR [esp+0x12c]
100322b1:	push   ecx
100322b2:	call   0x100430d2
100322b7:	add    esp,0x4
100322ba:	push   ebx
100322bb:	mov    DWORD PTR [esp+0x144],edi
100322c2:	mov    DWORD PTR [esp+0x140],ebx
100322c9:	mov    BYTE PTR [esp+0x130],bl
100322d0:	call   0x100430d2
100322d5:	add    esp,0x4
100322d8:	cmp    DWORD PTR [esp+0x120],esi
100322df:	jb     0x100322f1
100322e1:	mov    edx,DWORD PTR [esp+0x10c]
100322e8:	push   edx
100322e9:	call   0x100430d2
100322ee:	add    esp,0x4
100322f1:	cmp    DWORD PTR [esp+0x1d8],esi
100322f8:	mov    DWORD PTR [esp+0x120],edi
100322ff:	mov    DWORD PTR [esp+0x11c],ebx
10032306:	mov    BYTE PTR [esp+0x10c],bl
1003230d:	jb     0x1003231f
1003230f:	mov    eax,DWORD PTR [esp+0x1c4]
10032316:	push   eax
10032317:	call   0x100430d2
1003231c:	add    esp,0x4
1003231f:	cmp    DWORD PTR [esp+0x1f4],esi
10032326:	mov    DWORD PTR [esp+0x1d8],edi
1003232d:	mov    DWORD PTR [esp+0x1d4],ebx
10032334:	mov    BYTE PTR [esp+0x1c4],bl
1003233b:	jb     0x1003286f
10032341:	mov    ecx,DWORD PTR [esp+0x1e0]
10032348:	push   ecx
10032349:	jmp    0x10032867
1003234e:	push   0x10072a10
10032353:	mov    DWORD PTR [esp+0xb4],edi
1003235a:	mov    DWORD PTR [esp+0xb0],ebx
10032361:	mov    BYTE PTR [esp+0xa0],bl
10032368:	call   0x10043250
1003236d:	add    esp,0x4
10032370:	push   eax
10032371:	push   0x10072a10
10032376:	lea    ecx,[esp+0xa0]
1003237d:	call   0x1000133f
10032382:	lea    edx,[esp+0x1dc]
10032389:	push   edx
1003238a:	lea    edi,[esp+0x80]
10032391:	mov    BYTE PTR [esp+0x20c],0x12
10032399:	call   0x10034ad0
1003239e:	add    esp,0x4
100323a1:	mov    ecx,DWORD PTR [esp+0x18]
100323a5:	push   ecx
100323a6:	push   eax
100323a7:	lea    edx,[esp+0xd8]
100323ae:	push   edx
100323af:	mov    BYTE PTR [esp+0x214],0x13
100323b7:	call   0x100064fb
100323bc:	add    esp,0xc
100323bf:	lea    eax,[esp+0x108]
100323c6:	push   eax
100323c7:	lea    ecx,[esp+0x1c4]
100323ce:	push   ecx
100323cf:	lea    edx,[esp+0xbc]
100323d6:	push   edx
100323d7:	mov    BYTE PTR [esp+0x214],0x14
100323df:	call   0x100064fb
100323e4:	add    esp,0xc
100323e7:	mov    edx,eax
100323e9:	lea    ecx,[esp+0x44]
100323ed:	mov    BYTE PTR [esp+0x208],0x15
100323f5:	call   0x10031820
100323fa:	mov    edi,eax
100323fc:	push   0x78b93000
10032401:	push   0x100732e8
10032406:	mov    BYTE PTR [esp+0x210],0x16
1003240e:	call   0x100042d1
10032413:	push   eax
10032414:	push   0x1b
10032416:	push   0x10073328
1003241b:	call   0x100042e3
10032420:	mov    esi,eax
10032422:	add    esp,0x14
10032425:	push   esi
10032426:	mov    DWORD PTR [esp+0x44],0xf
1003242e:	mov    DWORD PTR [esp+0x40],ebx
10032432:	mov    BYTE PTR [esp+0x30],bl
10032436:	call   0x10043250
1003243b:	add    esp,0x4
1003243e:	push   eax
1003243f:	push   esi
10032440:	lea    ecx,[esp+0x30]
10032444:	call   0x1000133f
10032449:	push   edi
1003244a:	lea    eax,[esp+0x2c]
1003244e:	push   eax
1003244f:	lea    ecx,[esp+0x68]
10032453:	push   ecx
10032454:	mov    BYTE PTR [esp+0x214],0x17
1003245c:	call   0x100064fb
10032461:	add    esp,0xc
10032464:	mov    edx,DWORD PTR [ebp+0x14]
10032467:	mov    ecx,DWORD PTR [esp+0x20]
1003246b:	push   edx
1003246c:	push   ecx
1003246d:	push   ebx
1003246e:	push   ebx
1003246f:	mov    BYTE PTR [esp+0x218],0x18
10032477:	push   eax
10032478:	mov    eax,DWORD PTR [esp+0x158]
1003247f:	lea    edx,[esp+0xac]
10032486:	push   edx
10032487:	push   eax
10032488:	lea    ecx,[esp+0x144]
1003248f:	push   ecx
10032490:	lea    edx,[esp+0x44]
10032494:	push   edx
10032495:	call   0x1000c915
1003249a:	mov    ecx,DWORD PTR [eax]
1003249c:	mov    edi,ecx
1003249e:	add    esp,0x24
100324a1:	cmp    edi,ebx
100324a3:	mov    DWORD PTR [eax],ebx
100324a5:	je     0x100324b0
100324a7:	push   ebx
100324a8:	call   0x100430d2
100324ad:	add    esp,0x4
100324b0:	mov    edx,DWORD PTR [esp+0x24]
100324b4:	push   edx
100324b5:	mov    DWORD PTR [esp+0x14],edi
100324b9:	call   0x100430d2
100324be:	mov    esi,0x10
100324c3:	add    esp,0x4
100324c6:	cmp    DWORD PTR [esp+0x78],esi
100324ca:	jb     0x100324d9
100324cc:	mov    eax,DWORD PTR [esp+0x64]
100324d0:	push   eax
100324d1:	call   0x100430d2
100324d6:	add    esp,0x4
100324d9:	cmp    DWORD PTR [esp+0x40],esi
100324dd:	mov    DWORD PTR [esp+0x78],0xf
100324e5:	mov    DWORD PTR [esp+0x74],ebx
100324e9:	mov    BYTE PTR [esp+0x64],bl
100324ed:	jb     0x100324fc
100324ef:	mov    ecx,DWORD PTR [esp+0x2c]
100324f3:	push   ecx
100324f4:	call   0x100430d2
100324f9:	add    esp,0x4
100324fc:	cmp    DWORD PTR [esp+0x5c],esi
10032500:	mov    DWORD PTR [esp+0x40],0xf
10032508:	mov    DWORD PTR [esp+0x3c],ebx
1003250c:	mov    BYTE PTR [esp+0x2c],bl
10032510:	jb     0x1003251f
10032512:	mov    edx,DWORD PTR [esp+0x48]
10032516:	push   edx
10032517:	call   0x100430d2
1003251c:	add    esp,0x4
1003251f:	cmp    DWORD PTR [esp+0xcc],esi
10032526:	mov    DWORD PTR [esp+0x5c],0xf
1003252e:	mov    DWORD PTR [esp+0x58],ebx
10032532:	mov    BYTE PTR [esp+0x48],bl
10032536:	jb     0x10032548
10032538:	mov    eax,DWORD PTR [esp+0xb8]
1003253f:	push   eax
10032540:	call   0x100430d2
10032545:	add    esp,0x4
10032548:	cmp    DWORD PTR [esp+0xe8],esi
1003254f:	mov    DWORD PTR [esp+0xcc],0xf
1003255a:	mov    DWORD PTR [esp+0xc8],ebx
10032561:	mov    BYTE PTR [esp+0xb8],bl
10032568:	jb     0x1003257a
1003256a:	mov    ecx,DWORD PTR [esp+0xd4]
10032571:	push   ecx
10032572:	call   0x100430d2
10032577:	add    esp,0x4
1003257a:	cmp    DWORD PTR [esp+0x94],esi
10032581:	mov    DWORD PTR [esp+0xe8],0xf
1003258c:	mov    DWORD PTR [esp+0xe4],ebx
10032593:	mov    BYTE PTR [esp+0xd4],bl
1003259a:	jb     0x100325ac
1003259c:	mov    edx,DWORD PTR [esp+0x80]
100325a3:	push   edx
100325a4:	call   0x100430d2
100325a9:	add    esp,0x4
100325ac:	mov    BYTE PTR [esp+0x208],0x11
100325b4:	cmp    DWORD PTR [esp+0xb0],esi
100325bb:	mov    DWORD PTR [esp+0x94],0xf
100325c6:	mov    DWORD PTR [esp+0x90],ebx
100325cd:	mov    BYTE PTR [esp+0x80],bl
100325d4:	jb     0x100325e6
100325d6:	mov    eax,DWORD PTR [esp+0x9c]
100325dd:	push   eax
100325de:	call   0x100430d2
100325e3:	add    esp,0x4
100325e6:	cmp    edi,ebx
100325e8:	jne    0x100326ec
100325ee:	mov    ecx,DWORD PTR [esp+0x1c]
100325f2:	push   0x100732e4
100325f7:	push   ecx
100325f8:	lea    edx,[esp+0xf4]
100325ff:	push   edx
10032600:	call   0x100064b5
10032605:	add    esp,0xc
10032608:	lea    ecx,[esp+0x1dc]
1003260f:	push   ecx
10032610:	push   eax
10032611:	lea    edx,[esp+0xd8]
10032618:	push   edx
10032619:	mov    BYTE PTR [esp+0x214],0x19
10032621:	call   0x100064fb
10032626:	add    esp,0xc
10032629:	mov    ecx,DWORD PTR [esp+0x18]
1003262d:	push   ecx
1003262e:	push   eax
1003262f:	lea    edx,[esp+0x84]
10032636:	push   edx
10032637:	mov    BYTE PTR [esp+0x214],0x1a
1003263f:	call   0x100064fb
10032644:	add    esp,0xc
10032647:	cmp    DWORD PTR [eax+0x18],esi
1003264a:	jb     0x10032651
1003264c:	mov    eax,DWORD PTR [eax+0x4]
1003264f:	jmp    0x10032654
10032651:	add    eax,0x4
10032654:	push   eax
10032655:	call   0x1000205f
1003265a:	add    esp,0x4
1003265d:	cmp    DWORD PTR [esp+0x94],esi
10032664:	jb     0x10032676
10032666:	mov    eax,DWORD PTR [esp+0x80]
1003266d:	push   eax
1003266e:	call   0x100430d2
10032673:	add    esp,0x4
10032676:	cmp    DWORD PTR [esp+0xe8],esi
1003267d:	mov    DWORD PTR [esp+0x94],0xf
10032688:	mov    DWORD PTR [esp+0x90],ebx
1003268f:	mov    BYTE PTR [esp+0x80],bl
10032696:	jb     0x100326a8
10032698:	mov    ecx,DWORD PTR [esp+0xd4]
1003269f:	push   ecx
100326a0:	call   0x100430d2
100326a5:	add    esp,0x4
100326a8:	mov    BYTE PTR [esp+0x208],0x11
100326b0:	cmp    DWORD PTR [esp+0x104],esi
100326b7:	mov    DWORD PTR [esp+0xe8],0xf
100326c2:	mov    DWORD PTR [esp+0xe4],ebx
100326c9:	mov    BYTE PTR [esp+0xd4],bl
100326d0:	jb     0x100326e2
100326d2:	mov    edx,DWORD PTR [esp+0xf0]
100326d9:	push   edx
100326da:	call   0x100430d2
100326df:	add    esp,0x4
100326e2:	push   0x5
100326e4:	call   0x10037b70
100326e9:	add    esp,0x4
100326ec:	cmp    DWORD PTR [esp+0x1b4],esi
100326f3:	mov    eax,DWORD PTR [esp+0x14]
100326f7:	mov    DWORD PTR [eax],edi
100326f9:	jb     0x1003270b
100326fb:	mov    ecx,DWORD PTR [esp+0x1a0]
10032702:	push   ecx
10032703:	call   0x100430d2
10032708:	add    esp,0x4
1003270b:	cmp    DWORD PTR [esp+0x198],esi
10032712:	mov    DWORD PTR [esp+0x1b4],0xf
1003271d:	mov    DWORD PTR [esp+0x1b0],ebx
10032724:	mov    BYTE PTR [esp+0x1a0],bl
1003272b:	jb     0x1003273d
1003272d:	mov    edx,DWORD PTR [esp+0x184]
10032734:	push   edx
10032735:	call   0x100430d2
1003273a:	add    esp,0x4
1003273d:	cmp    DWORD PTR [esp+0x17c],esi
10032744:	mov    DWORD PTR [esp+0x198],0xf
1003274f:	mov    DWORD PTR [esp+0x194],ebx
10032756:	mov    BYTE PTR [esp+0x184],bl
1003275d:	jb     0x1003276f
1003275f:	mov    eax,DWORD PTR [esp+0x168]
10032766:	push   eax
10032767:	call   0x100430d2
1003276c:	add    esp,0x4
1003276f:	cmp    DWORD PTR [esp+0x160],esi
10032776:	mov    DWORD PTR [esp+0x17c],0xf
10032781:	mov    DWORD PTR [esp+0x178],ebx
10032788:	mov    BYTE PTR [esp+0x168],bl
1003278f:	jb     0x100327a1
10032791:	mov    ecx,DWORD PTR [esp+0x14c]
10032798:	push   ecx
10032799:	call   0x100430d2
1003279e:	add    esp,0x4
100327a1:	cmp    DWORD PTR [esp+0x140],esi
100327a8:	mov    DWORD PTR [esp+0x160],0xf
100327b3:	mov    DWORD PTR [esp+0x15c],ebx
100327ba:	mov    BYTE PTR [esp+0x14c],bl
100327c1:	jb     0x100327d3
100327c3:	mov    edx,DWORD PTR [esp+0x12c]
100327ca:	push   edx
100327cb:	call   0x100430d2
100327d0:	add    esp,0x4
100327d3:	push   ebx
100327d4:	mov    DWORD PTR [esp+0x144],0xf
100327df:	mov    DWORD PTR [esp+0x140],ebx
100327e6:	mov    BYTE PTR [esp+0x130],bl
100327ed:	call   0x100430d2
100327f2:	add    esp,0x4
100327f5:	cmp    DWORD PTR [esp+0x120],esi
100327fc:	jb     0x1003280e
100327fe:	mov    eax,DWORD PTR [esp+0x10c]
10032805:	push   eax
10032806:	call   0x100430d2
1003280b:	add    esp,0x4
1003280e:	cmp    DWORD PTR [esp+0x1d8],esi
10032815:	mov    edi,0xf
1003281a:	mov    DWORD PTR [esp+0x120],edi
10032821:	mov    DWORD PTR [esp+0x11c],ebx
10032828:	mov    BYTE PTR [esp+0x10c],bl
1003282f:	jb     0x10032841
10032831:	mov    ecx,DWORD PTR [esp+0x1c4]
10032838:	push   ecx
10032839:	call   0x100430d2
1003283e:	add    esp,0x4
10032841:	cmp    DWORD PTR [esp+0x1f4],esi
10032848:	mov    DWORD PTR [esp+0x1d8],edi
1003284f:	mov    DWORD PTR [esp+0x1d4],ebx
10032856:	mov    BYTE PTR [esp+0x1c4],bl
1003285d:	jb     0x1003286f
1003285f:	mov    edx,DWORD PTR [esp+0x1e0]
10032866:	push   edx
10032867:	call   0x100430d2
1003286c:	add    esp,0x4
1003286f:	mov    eax,DWORD PTR [esp+0x14]
10032873:	mov    ecx,DWORD PTR [esp+0x200]
1003287a:	mov    DWORD PTR fs:0x0,ecx
10032881:	pop    ecx
10032882:	pop    edi
10032883:	pop    esi
10032884:	pop    ebx
10032885:	mov    ecx,DWORD PTR [esp+0x1e8]
1003288c:	xor    ecx,esp
1003288e:	call   0x100430d7
10032893:	mov    esp,ebp
10032895:	pop    ebp
10032896:	ret    
10032897:	int3   
10032898:	int3   
10032899:	int3   
1003289a:	int3   
1003289b:	int3   
1003289c:	int3   
1003289d:	int3   
1003289e:	int3   
1003289f:	int3   
100328a0:	push   ebp
100328a1:	mov    ebp,esp
100328a3:	push   0xffffffff
100328a5:	push   0x10060ab8
100328aa:	mov    eax,fs:0x0
100328b0:	push   eax
100328b1:	sub    esp,0x54
100328b4:	mov    eax,ds:0x1007e030
100328b9:	xor    eax,ebp
100328bb:	mov    DWORD PTR [ebp-0x10],eax
100328be:	push   ebx
100328bf:	push   esi
100328c0:	push   edi
100328c1:	push   eax
100328c2:	lea    eax,[ebp-0xc]
100328c5:	mov    fs:0x0,eax
100328cb:	mov    eax,DWORD PTR [ebp+0x14]
100328ce:	mov    edi,DWORD PTR [ebp+0x8]
100328d1:	mov    ecx,DWORD PTR [ebp+0x18]
100328d4:	mov    edx,DWORD PTR [ebp+0x1c]
100328d7:	mov    esi,DWORD PTR [ebp+0xc]
100328da:	xor    ebx,ebx
100328dc:	mov    DWORD PTR [ebp-0x34],eax
100328df:	mov    eax,DWORD PTR [ebp+0x24]
100328e2:	mov    DWORD PTR [ebp-0x40],ebx
100328e5:	mov    DWORD PTR [ebp-0x38],edi
100328e8:	mov    DWORD PTR [ebp-0x48],ecx
100328eb:	mov    DWORD PTR [ebp-0x44],edx
100328ee:	mov    DWORD PTR [ebp-0x4c],eax
100328f1:	mov    DWORD PTR [ebp-0x60],ebx
100328f4:	mov    DWORD PTR [ebp-0x4],ebx
100328f7:	call   DWORD PTR ds:0x1007efec
100328fd:	push   0x2b5f962c
10032902:	push   0x10073344
10032907:	mov    DWORD PTR [ebp-0x30],eax
1003290a:	call   0x100042d1
1003290f:	add    esp,0x8
10032912:	push   ebx
10032913:	push   ebx
10032914:	push   ebx
10032915:	push   ebx
10032916:	push   eax
10032917:	push   0x1a
10032919:	push   0x1007337c
1003291e:	call   0x100044a2
10032923:	add    esp,0xc
10032926:	push   eax
10032927:	call   DWORD PTR ds:0x10066374
1003292d:	mov    ebx,eax
1003292f:	mov    DWORD PTR [ebp-0x3c],ebx
10032932:	test   ebx,ebx
10032934:	mov    BYTE PTR [ebp-0x4],0x1
10032938:	jne    0x10032949
1003293a:	push   eax
1003293b:	mov    DWORD PTR [edi],eax
1003293d:	call   0x100430d2
10032942:	mov    eax,edi
10032944:	jmp    0x10032d50
10032949:	mov    edi,DWORD PTR [ebp+0x28]
1003294c:	cmp    edi,0xffffffff
1003294f:	je     0x1003299e
10032951:	push   0x8
10032953:	call   0x100436de
10032958:	add    esp,0x4
1003295b:	test   eax,eax
1003295d:	je     0x10032966
1003295f:	mov    DWORD PTR [eax],ebx
10032961:	mov    DWORD PTR [eax+0x4],edi
10032964:	jmp    0x10032968
10032966:	xor    eax,eax
10032968:	push   0x0
1003296a:	push   0x0
1003296c:	push   eax
1003296d:	push   0x10030f50
10032972:	push   0x0
10032974:	push   0x0
10032976:	call   DWORD PTR ds:0x10066098
1003297c:	test   eax,eax
1003297e:	jne    0x1003299e
10032980:	mov    esi,DWORD PTR [ebp-0x38]
10032983:	push   ebx
10032984:	mov    DWORD PTR [esi],0x0
1003298a:	call   DWORD PTR ds:0x10066380
10032990:	push   0x0
10032992:	call   0x100430d2
10032997:	mov    eax,esi
10032999:	jmp    0x10032d50
1003299e:	call   0x1000205f
100329a3:	cmp    DWORD PTR [esi+0x18],0x10
100329a7:	jb     0x100329ae
100329a9:	mov    esi,DWORD PTR [esi+0x4]
100329ac:	jmp    0x100329b1
100329ae:	add    esi,0x4
100329b1:	test   esi,esi
100329b3:	jne    0x100329b9
100329b5:	xor    eax,eax
100329b7:	jmp    0x100329e8
100329b9:	push   esi
100329ba:	call   DWORD PTR ds:0x100660dc
100329c0:	mov    edi,eax
100329c2:	add    edi,0x1
100329c5:	cmp    edi,0x3fffffff
100329cb:	jle    0x100329d1
100329cd:	xor    eax,eax
100329cf:	jmp    0x100329e8
100329d1:	lea    eax,[edi+edi*1]
100329d4:	call   0x1004b990
100329d9:	mov    ecx,DWORD PTR [ebp-0x30]
100329dc:	mov    eax,esp
100329de:	push   ecx
100329df:	push   edi
100329e0:	push   esi
100329e1:	mov    esi,eax
100329e3:	call   0x10006c78
100329e8:	mov    edx,DWORD PTR [ebp+0x10]
100329eb:	push   0x0
100329ed:	push   0x20000000
100329f2:	push   0x3
100329f4:	push   0x0
100329f6:	push   0x0
100329f8:	push   edx
100329f9:	push   eax
100329fa:	push   ebx
100329fb:	call   DWORD PTR ds:0x10066398
10032a01:	mov    ebx,eax
10032a03:	mov    DWORD PTR [ebp-0x3c],ebx
10032a06:	test   ebx,ebx
10032a08:	mov    BYTE PTR [ebp-0x4],0x2
10032a0c:	jne    0x10032a20
10032a0e:	mov    esi,DWORD PTR [ebp-0x38]
10032a11:	push   eax
10032a12:	mov    DWORD PTR [esi],eax
10032a14:	call   0x100430d2
10032a19:	mov    eax,esi
10032a1b:	jmp    0x10032d50
10032a20:	push   0x1b7ad566
10032a25:	push   0x100733b4
10032a2a:	call   0x100042d1
10032a2f:	push   0x64e4ce4e
10032a34:	push   eax
10032a35:	call   0x100042d1
10032a3a:	push   eax
10032a3b:	push   0x9
10032a3d:	push   0x100733e0
10032a42:	call   0x100044a2
10032a47:	push   0x100733f4
10032a4c:	push   0xb
10032a4e:	push   0x1007342c
10032a53:	mov    DWORD PTR [ebp-0x5c],eax
10032a56:	call   0x100044a2
10032a5b:	push   0x10073444
10032a60:	push   0xd
10032a62:	push   0x10073468
10032a67:	mov    DWORD PTR [ebp-0x58],eax
10032a6a:	call   0x100044a2
10032a6f:	add    esp,0x34
10032a72:	mov    DWORD PTR [ebp-0x54],eax
10032a75:	mov    DWORD PTR [ebp-0x50],0x0
10032a7c:	call   0x1000205f
10032a81:	mov    esi,DWORD PTR [ebp-0x34]
10032a84:	cmp    DWORD PTR [esi+0x18],0x10
10032a88:	jb     0x10032a8f
10032a8a:	mov    esi,DWORD PTR [esi+0x4]
10032a8d:	jmp    0x10032a92
10032a8f:	add    esi,0x4
10032a92:	test   esi,esi
10032a94:	jne    0x10032a9a
10032a96:	xor    eax,eax
10032a98:	jmp    0x10032ac9
10032a9a:	push   esi
10032a9b:	call   DWORD PTR ds:0x100660dc
10032aa1:	mov    edi,eax
10032aa3:	add    edi,0x1
10032aa6:	cmp    edi,0x3fffffff
10032aac:	jle    0x10032ab2
10032aae:	xor    eax,eax
10032ab0:	jmp    0x10032ac9
10032ab2:	lea    eax,[edi+edi*1]
10032ab5:	call   0x1004b990
10032aba:	mov    ecx,DWORD PTR [ebp-0x30]
10032abd:	mov    eax,esp
10032abf:	push   ecx
10032ac0:	push   edi
10032ac1:	push   esi
10032ac2:	mov    esi,eax
10032ac4:	call   0x10006c78
10032ac9:	push   0x0
10032acb:	push   0x4080200
10032ad0:	lea    edx,[ebp-0x5c]
10032ad3:	push   edx
10032ad4:	push   0x0
10032ad6:	push   0x0
10032ad8:	push   eax
10032ad9:	push   0x10073484
10032ade:	push   0x3
10032ae0:	push   0x100734c0
10032ae5:	call   0x100044a2
10032aea:	add    esp,0xc
10032aed:	push   eax
10032aee:	push   ebx
10032aef:	call   DWORD PTR ds:0x10066384
10032af5:	mov    DWORD PTR [ebp-0x34],eax
10032af8:	test   eax,eax
10032afa:	mov    BYTE PTR [ebp-0x4],0x3
10032afe:	je     0x10032980
10032b04:	push   0x1006cd08
10032b09:	call   0x10043250
10032b0e:	mov    edi,DWORD PTR [ebp-0x48]
10032b11:	mov    esi,DWORD PTR [edi+0x14]
10032b14:	mov    ebx,eax
10032b16:	add    esp,0x4
10032b19:	cmp    esi,ebx
10032b1b:	mov    eax,esi
10032b1d:	mov    ecx,esi
10032b1f:	jb     0x10032b23
10032b21:	mov    ecx,ebx
10032b23:	cmp    DWORD PTR [edi+0x18],0x10
10032b27:	jb     0x10032b31
10032b29:	mov    eax,DWORD PTR [edi+0x4]
10032b2c:	add    edi,0x4
10032b2f:	jmp    0x10032b36
10032b31:	add    edi,0x4
10032b34:	mov    eax,edi
10032b36:	push   ecx
10032b37:	push   0x1006cd08
10032b3c:	push   eax
10032b3d:	call   0x100439bb
10032b42:	add    esp,0xc
10032b45:	test   eax,eax
10032b47:	jne    0x10032b5a
10032b49:	cmp    esi,ebx
10032b4b:	jb     0x10032b5a
10032b4d:	cmp    esi,ebx
10032b4f:	setne  al
10032b52:	test   eax,eax
10032b54:	je     0x10032c23
10032b5a:	mov    esi,DWORD PTR [ebp-0x48]
10032b5d:	push   esi
10032b5e:	lea    ecx,[ebp-0x2c]
10032b61:	call   0x100011ab
10032b66:	cmp    DWORD PTR [esi+0x18],0x10
10032b6a:	jb     0x10032b70
10032b6c:	mov    esi,DWORD PTR [edi]
10032b6e:	jmp    0x10032b72
10032b70:	mov    esi,edi
10032b72:	test   esi,esi
10032b74:	jne    0x10032b7a
10032b76:	xor    eax,eax
10032b78:	jmp    0x10032ba9
10032b7a:	push   esi
10032b7b:	call   DWORD PTR ds:0x100660dc
10032b81:	mov    edi,eax
10032b83:	add    edi,0x1
10032b86:	cmp    edi,0x3fffffff
10032b8c:	jle    0x10032b92
10032b8e:	xor    eax,eax
10032b90:	jmp    0x10032ba9
10032b92:	lea    eax,[edi+edi*1]
10032b95:	call   0x1004b990
10032b9a:	mov    ecx,DWORD PTR [ebp-0x30]
10032b9d:	mov    eax,esp
10032b9f:	push   ecx
10032ba0:	push   edi
10032ba1:	push   esi
10032ba2:	mov    esi,eax
10032ba4:	call   0x10006c78
10032ba9:	mov    ebx,DWORD PTR [ebp-0x34]
10032bac:	push   0x1000000
10032bb1:	push   0xffffffff
10032bb3:	push   eax
10032bb4:	push   ebx
10032bb5:	call   DWORD PTR ds:0x10066388
10032bbb:	test   eax,eax
10032bbd:	jne    0x10032c0f
10032bbf:	call   DWORD PTR ds:0x100660cc
10032bc5:	cmp    DWORD PTR [ebp-0x14],0x10
10032bc9:	mov    edi,DWORD PTR [ebp-0x38]
10032bcc:	mov    DWORD PTR [edi],0x0
10032bd2:	jb     0x10032be0
10032bd4:	mov    edx,DWORD PTR [ebp-0x28]
10032bd7:	push   edx
10032bd8:	call   0x100430d2
10032bdd:	add    esp,0x4
10032be0:	mov    esi,DWORD PTR ds:0x10066380
10032be6:	push   ebx
10032be7:	mov    DWORD PTR [ebp-0x14],0xf
10032bee:	mov    DWORD PTR [ebp-0x18],0x0
10032bf5:	mov    BYTE PTR [ebp-0x28],0x0
10032bf9:	call   esi
10032bfb:	mov    eax,DWORD PTR [ebp-0x3c]
10032bfe:	push   eax
10032bff:	call   esi
10032c01:	push   0x0
10032c03:	call   0x100430d2
10032c08:	mov    eax,edi
10032c0a:	jmp    0x10032d50
10032c0f:	cmp    DWORD PTR [ebp-0x14],0x10
10032c13:	jb     0x10032c26
10032c15:	mov    ecx,DWORD PTR [ebp-0x28]
10032c18:	push   ecx
10032c19:	call   0x100430d2
10032c1e:	add    esp,0x4
10032c21:	jmp    0x10032c26
10032c23:	mov    ebx,DWORD PTR [ebp-0x34]
10032c26:	mov    edx,DWORD PTR [ebp+0x20]
10032c29:	mov    eax,DWORD PTR [ebp-0x44]
10032c2c:	push   edx
10032c2d:	push   eax
10032c2e:	push   0x0
10032c30:	push   0x0
10032c32:	push   ebx
10032c33:	call   DWORD PTR ds:0x1006638c
10032c39:	test   eax,eax
10032c3b:	jne    0x10032c69
10032c3d:	call   DWORD PTR ds:0x100660cc
10032c43:	mov    edi,DWORD PTR [ebp-0x38]
10032c46:	mov    esi,DWORD PTR ds:0x10066380
10032c4c:	push   ebx
10032c4d:	mov    DWORD PTR [edi],0x0
10032c53:	call   esi
10032c55:	mov    ecx,DWORD PTR [ebp-0x3c]
10032c58:	push   ecx
10032c59:	call   esi
10032c5b:	push   0x0
10032c5d:	call   0x100430d2
10032c62:	mov    eax,edi
10032c64:	jmp    0x10032d50
10032c69:	push   0x400
10032c6e:	mov    DWORD PTR [ebp-0x30],0x400
10032c75:	xor    esi,esi
10032c77:	call   0x100439b6
10032c7c:	mov    edi,eax
10032c7e:	add    esp,0x4
10032c81:	mov    DWORD PTR [ebp-0x44],edi
10032c84:	lea    edx,[ebp-0x40]
10032c87:	push   edx
10032c88:	push   0x400
10032c8d:	push   edi
10032c8e:	mov    BYTE PTR [ebp-0x4],0x4
10032c92:	push   ebx
10032c93:	mov    DWORD PTR [ebp-0x40],esi
10032c96:	call   DWORD PTR ds:0x10066394
10032c9c:	test   eax,eax
10032c9e:	je     0x10032d07
10032ca0:	mov    eax,DWORD PTR [ebp-0x40]
10032ca3:	test   eax,eax
10032ca5:	je     0x10032d13
10032ca7:	add    esi,eax
10032ca9:	lea    eax,[esi-0x401]
10032caf:	cmp    eax,0x1ffbfe
10032cb4:	ja     0x10032cb9
10032cb6:	mov    DWORD PTR [ebp-0x30],esi
10032cb9:	mov    ecx,DWORD PTR [ebp-0x30]
10032cbc:	lea    edx,[esi+ecx*1]
10032cbf:	push   edx
10032cc0:	call   0x100439b6
10032cc5:	push   esi
10032cc6:	mov    ebx,eax
10032cc8:	push   edi
10032cc9:	push   ebx
10032cca:	call   0x10045420
10032ccf:	add    esp,0x10
10032cd2:	cmp    ebx,edi
10032cd4:	je     0x10032cdf
10032cd6:	push   edi
10032cd7:	call   0x100430d2
10032cdc:	add    esp,0x4
10032cdf:	mov    edi,ebx
10032ce1:	push   0x0
10032ce3:	mov    DWORD PTR [ebp-0x44],edi
10032ce6:	call   0x100430d2
10032ceb:	mov    ecx,DWORD PTR [ebp-0x30]
10032cee:	mov    edx,DWORD PTR [ebp-0x34]
10032cf1:	add    esp,0x4
10032cf4:	lea    eax,[ebp-0x40]
10032cf7:	push   eax
10032cf8:	push   ecx
10032cf9:	add    ebx,esi
10032cfb:	push   ebx
10032cfc:	push   edx
10032cfd:	call   DWORD PTR ds:0x10066394
10032d03:	test   eax,eax
10032d05:	jne    0x10032ca0
10032d07:	mov    ebx,DWORD PTR [ebp-0x38]
10032d0a:	mov    DWORD PTR [ebx],0x0
10032d10:	push   edi
10032d11:	jmp    0x10032d2d
10032d13:	test   edi,edi
10032d15:	je     0x10032d21
10032d17:	push   0x0
10032d19:	call   0x100430d2
10032d1e:	add    esp,0x4
10032d21:	mov    edx,DWORD PTR [ebp-0x4c]
10032d24:	mov    ebx,DWORD PTR [ebp-0x38]
10032d27:	mov    DWORD PTR [edx],esi
10032d29:	mov    DWORD PTR [ebx],edi
10032d2b:	push   0x0
10032d2d:	call   0x100430d2
10032d32:	mov    eax,DWORD PTR [ebp-0x34]
10032d35:	mov    esi,DWORD PTR ds:0x10066380
10032d3b:	add    esp,0x4
10032d3e:	push   eax
10032d3f:	call   esi
10032d41:	mov    ecx,DWORD PTR [ebp-0x3c]
10032d44:	push   ecx
10032d45:	call   esi
10032d47:	push   0x0
10032d49:	call   0x100430d2
10032d4e:	mov    eax,ebx
10032d50:	add    esp,0x4
10032d53:	lea    esp,[ebp-0x70]
10032d56:	mov    ecx,DWORD PTR [ebp-0xc]
10032d59:	mov    DWORD PTR fs:0x0,ecx
10032d60:	pop    ecx
10032d61:	pop    edi
10032d62:	pop    esi
10032d63:	pop    ebx
10032d64:	mov    ecx,DWORD PTR [ebp-0x10]
10032d67:	xor    ecx,ebp
10032d69:	call   0x100430d7
10032d6e:	mov    esp,ebp
10032d70:	pop    ebp
10032d71:	ret    
10032d72:	int3   
10032d73:	int3   
10032d74:	int3   
10032d75:	int3   
10032d76:	int3   
10032d77:	int3   
10032d78:	int3   
10032d79:	int3   
10032d7a:	int3   
10032d7b:	int3   
10032d7c:	int3   
10032d7d:	int3   
10032d7e:	int3   
10032d7f:	int3   
10032d80:	push   ebp
10032d81:	lea    ebp,[esp-0x98]
10032d88:	sub    esp,0x98
10032d8e:	push   0xffffffff
10032d90:	push   0x10060a60
10032d95:	mov    eax,fs:0x0
10032d9b:	push   eax
10032d9c:	sub    esp,0x50
10032d9f:	mov    eax,ds:0x1007e030
10032da4:	xor    eax,ebp
10032da6:	mov    DWORD PTR [ebp+0x94],eax
10032dac:	push   ebx
10032dad:	push   esi
10032dae:	push   edi
10032daf:	push   eax
10032db0:	lea    eax,[ebp-0xc]
10032db3:	mov    fs:0x0,eax
10032db9:	mov    eax,DWORD PTR [ebp+0xa0]
10032dbf:	xor    ebx,ebx
10032dc1:	mov    edi,0xf
10032dc6:	mov    esi,ecx
10032dc8:	mov    DWORD PTR [ebp-0x20],eax
10032dcb:	mov    DWORD PTR [ebp+0x1c],edi
10032dce:	mov    DWORD PTR [ebp+0x18],ebx
10032dd1:	mov    BYTE PTR [ebp+0x8],bl
10032dd4:	mov    DWORD PTR [ebp+0x3c],edi
10032dd7:	mov    DWORD PTR [ebp+0x38],ebx
10032dda:	mov    BYTE PTR [ebp+0x28],bl
10032ddd:	mov    DWORD PTR [ebp+0x58],edi
10032de0:	mov    DWORD PTR [ebp+0x54],ebx
10032de3:	mov    BYTE PTR [ebp+0x44],bl
10032de6:	mov    DWORD PTR [ebp+0x74],edi
10032de9:	mov    DWORD PTR [ebp+0x70],ebx
10032dec:	mov    BYTE PTR [ebp+0x60],bl
10032def:	mov    DWORD PTR [ebp+0x90],edi
10032df5:	mov    DWORD PTR [ebp+0x8c],ebx
10032dfb:	mov    BYTE PTR [ebp+0x7c],bl
10032dfe:	push   0x38
10032e00:	lea    ecx,[ebp-0x58]
10032e03:	push   ebx
10032e04:	push   ecx
10032e05:	mov    DWORD PTR [ebp-0x4],ebx
10032e08:	call   0x10045ea0
10032e0d:	mov    eax,0x1
10032e12:	add    esp,0xc
10032e15:	mov    DWORD PTR [ebp-0x5c],0x3c
10032e1c:	mov    DWORD PTR [ebp-0x54],eax
10032e1f:	mov    DWORD PTR [ebp-0x48],eax
10032e22:	mov    DWORD PTR [ebp-0x3c],eax
10032e25:	mov    DWORD PTR [ebp-0x34],eax
10032e28:	mov    DWORD PTR [ebp-0x2c],eax
10032e2b:	mov    DWORD PTR [ebp-0x24],eax
10032e2e:	call   DWORD PTR ds:0x1007efec
10032e34:	mov    DWORD PTR [ebp-0x18],eax
10032e37:	mov    eax,DWORD PTR [esi+0x14]
10032e3a:	xor    ecx,ecx
10032e3c:	add    eax,0x1
10032e3f:	mov    edx,0x2
10032e44:	mul    edx
10032e46:	seto   cl
10032e49:	neg    ecx
10032e4b:	or     ecx,eax
10032e4d:	push   ecx
10032e4e:	call   0x100439b6
10032e53:	add    esp,0x4
10032e56:	mov    DWORD PTR [ebp-0x10],eax
10032e59:	mov    BYTE PTR [ebp-0x4],0x1
10032e5d:	cmp    DWORD PTR [esi+0x18],0x10
10032e61:	jb     0x10032e68
10032e63:	mov    eax,DWORD PTR [esi+0x4]
10032e66:	jmp    0x10032e6b
10032e68:	lea    eax,[esi+0x4]
10032e6b:	cmp    eax,ebx
10032e6d:	mov    DWORD PTR [ebp-0x14],eax
10032e70:	je     0x10032ebe
10032e72:	push   eax
10032e73:	call   DWORD PTR ds:0x100660dc
10032e79:	add    eax,0x1
10032e7c:	cmp    eax,0x3fffffff
10032e81:	mov    DWORD PTR [ebp-0x1c],eax
10032e84:	jg     0x10032ebe
10032e86:	add    eax,eax
10032e88:	call   0x1004b990
10032e8d:	mov    edi,esp
10032e8f:	cmp    edi,ebx
10032e91:	je     0x10032eb9
10032e93:	mov    ecx,DWORD PTR [ebp-0x1c]
10032e96:	mov    edx,DWORD PTR [ebp-0x14]
10032e99:	mov    eax,DWORD PTR [ebp-0x18]
10032e9c:	push   ecx
10032e9d:	push   edi
10032e9e:	push   0xffffffff
10032ea0:	push   edx
10032ea1:	push   ebx
10032ea2:	push   eax
10032ea3:	mov    WORD PTR [edi],bx
10032ea6:	call   DWORD PTR ds:0x1006608c
10032eac:	neg    eax
10032eae:	sbb    eax,eax
10032eb0:	and    eax,edi
10032eb2:	mov    edi,0xf
10032eb7:	jmp    0x10032ec0
10032eb9:	mov    edi,0xf
10032ebe:	xor    eax,eax
10032ec0:	mov    edx,DWORD PTR [ebp-0x10]
10032ec3:	movzx  ecx,WORD PTR [eax]
10032ec6:	mov    WORD PTR [edx],cx
10032ec9:	add    eax,0x2
10032ecc:	add    edx,0x2
10032ecf:	cmp    cx,bx
10032ed2:	jne    0x10032ec3
10032ed4:	mov    esi,DWORD PTR [esi+0x14]
10032ed7:	lea    ecx,[ebp-0x5c]
10032eda:	push   ecx
10032edb:	push   ebx
10032edc:	push   esi
10032edd:	mov    esi,DWORD PTR [ebp-0x10]
10032ee0:	push   esi
10032ee1:	call   DWORD PTR ds:0x10066390
10032ee7:	test   eax,eax
10032ee9:	jne    0x10032f86
10032eef:	push   esi
10032ef0:	call   0x100430d2
10032ef5:	mov    esi,0x10
10032efa:	add    esp,0x4
10032efd:	cmp    DWORD PTR [ebp+0x90],esi
10032f03:	jb     0x10032f11
10032f05:	mov    edx,DWORD PTR [ebp+0x7c]
10032f08:	push   edx
10032f09:	call   0x100430d2
10032f0e:	add    esp,0x4
10032f11:	cmp    DWORD PTR [ebp+0x74],esi
10032f14:	mov    DWORD PTR [ebp+0x90],edi
10032f1a:	mov    DWORD PTR [ebp+0x8c],ebx
10032f20:	mov    BYTE PTR [ebp+0x7c],bl
10032f23:	jb     0x10032f31
10032f25:	mov    eax,DWORD PTR [ebp+0x60]
10032f28:	push   eax
10032f29:	call   0x100430d2
10032f2e:	add    esp,0x4
10032f31:	cmp    DWORD PTR [ebp+0x58],esi
10032f34:	mov    DWORD PTR [ebp+0x74],edi
10032f37:	mov    DWORD PTR [ebp+0x70],ebx
10032f3a:	mov    BYTE PTR [ebp+0x60],bl
10032f3d:	jb     0x10032f4b
10032f3f:	mov    ecx,DWORD PTR [ebp+0x44]
10032f42:	push   ecx
10032f43:	call   0x100430d2
10032f48:	add    esp,0x4
10032f4b:	cmp    DWORD PTR [ebp+0x3c],esi
10032f4e:	mov    DWORD PTR [ebp+0x58],edi
10032f51:	mov    DWORD PTR [ebp+0x54],ebx
10032f54:	mov    BYTE PTR [ebp+0x44],bl
10032f57:	jb     0x10032f65
10032f59:	mov    edx,DWORD PTR [ebp+0x28]
10032f5c:	push   edx
10032f5d:	call   0x100430d2
10032f62:	add    esp,0x4
10032f65:	cmp    DWORD PTR [ebp+0x1c],esi
10032f68:	mov    DWORD PTR [ebp+0x3c],edi
10032f6b:	mov    DWORD PTR [ebp+0x38],ebx
10032f6e:	mov    BYTE PTR [ebp+0x28],bl
10032f71:	jb     0x10032f7f
10032f73:	mov    eax,DWORD PTR [ebp+0x8]
10032f76:	push   eax
10032f77:	call   0x100430d2
10032f7c:	add    esp,0x4
10032f7f:	xor    al,al
10032f81:	jmp    0x10033087
10032f86:	mov    ecx,DWORD PTR [ebp-0x50]
10032f89:	mov    eax,DWORD PTR [ebp-0x48]
10032f8c:	mov    dx,WORD PTR [ebp-0x44]
10032f90:	mov    DWORD PTR [ebp+0x0],ecx
10032f93:	push   eax
10032f94:	lea    ecx,[ebp+0x4]
10032f97:	push   ecx
10032f98:	mov    ecx,DWORD PTR [ebp-0x4c]
10032f9b:	mov    WORD PTR [ebp+0x20],dx
10032f9f:	call   0x100330b0
10032fa4:	mov    edx,DWORD PTR [ebp-0x3c]
10032fa7:	mov    ecx,DWORD PTR [ebp-0x40]
10032faa:	push   edx
10032fab:	lea    eax,[ebp+0x24]
10032fae:	push   eax
10032faf:	call   0x100330b0
10032fb4:	mov    ecx,DWORD PTR [ebp-0x34]
10032fb7:	push   ecx
10032fb8:	mov    ecx,DWORD PTR [ebp-0x38]
10032fbb:	lea    edx,[ebp+0x40]
10032fbe:	push   edx
10032fbf:	call   0x100330b0
10032fc4:	mov    eax,DWORD PTR [ebp-0x2c]
10032fc7:	push   eax
10032fc8:	lea    ecx,[ebp+0x5c]
10032fcb:	push   ecx
10032fcc:	mov    ecx,DWORD PTR [ebp-0x30]
10032fcf:	call   0x100330b0
10032fd4:	mov    edx,DWORD PTR [ebp-0x24]
10032fd7:	mov    ecx,DWORD PTR [ebp-0x28]
10032fda:	push   edx
10032fdb:	lea    eax,[ebp+0x78]
10032fde:	push   eax
10032fdf:	call   0x100330b0
10032fe4:	mov    esi,DWORD PTR [ebp-0x20]
10032fe7:	add    esp,0x28
10032fea:	lea    eax,[ebp+0x0]
10032fed:	call   0x10033260
10032ff2:	mov    ecx,DWORD PTR [ebp-0x10]
10032ff5:	push   ecx
10032ff6:	call   0x100430d2
10032ffb:	mov    esi,0x10
10033000:	add    esp,0x4
10033003:	cmp    DWORD PTR [ebp+0x90],esi
10033009:	jb     0x10033017
1003300b:	mov    edx,DWORD PTR [ebp+0x7c]
1003300e:	push   edx
1003300f:	call   0x100430d2
10033014:	add    esp,0x4
10033017:	cmp    DWORD PTR [ebp+0x74],esi
1003301a:	mov    DWORD PTR [ebp+0x90],edi
10033020:	mov    DWORD PTR [ebp+0x8c],ebx
10033026:	mov    BYTE PTR [ebp+0x7c],bl
10033029:	jb     0x10033037
1003302b:	mov    eax,DWORD PTR [ebp+0x60]
1003302e:	push   eax
1003302f:	call   0x100430d2
10033034:	add    esp,0x4
10033037:	cmp    DWORD PTR [ebp+0x58],esi
1003303a:	mov    DWORD PTR [ebp+0x74],edi
1003303d:	mov    DWORD PTR [ebp+0x70],ebx
10033040:	mov    BYTE PTR [ebp+0x60],bl
10033043:	jb     0x10033051
10033045:	mov    ecx,DWORD PTR [ebp+0x44]
10033048:	push   ecx
10033049:	call   0x100430d2
1003304e:	add    esp,0x4
10033051:	cmp    DWORD PTR [ebp+0x3c],esi
10033054:	mov    DWORD PTR [ebp+0x58],edi
10033057:	mov    DWORD PTR [ebp+0x54],ebx
1003305a:	mov    BYTE PTR [ebp+0x44],bl
1003305d:	jb     0x1003306b
1003305f:	mov    edx,DWORD PTR [ebp+0x28]
10033062:	push   edx
10033063:	call   0x100430d2
10033068:	add    esp,0x4
1003306b:	cmp    DWORD PTR [ebp+0x1c],esi
1003306e:	mov    DWORD PTR [ebp+0x3c],edi
10033071:	mov    DWORD PTR [ebp+0x38],ebx
10033074:	mov    BYTE PTR [ebp+0x28],bl
10033077:	jb     0x10033085
10033079:	mov    eax,DWORD PTR [ebp+0x8]
1003307c:	push   eax
1003307d:	call   0x100430d2
10033082:	add    esp,0x4
10033085:	mov    al,0x1
10033087:	lea    esp,[ebp-0x6c]
1003308a:	mov    ecx,DWORD PTR [ebp-0xc]
1003308d:	mov    DWORD PTR fs:0x0,ecx
10033094:	pop    ecx
10033095:	pop    edi
10033096:	pop    esi
10033097:	pop    ebx
10033098:	mov    ecx,DWORD PTR [ebp+0x94]
1003309e:	xor    ecx,ebp
100330a0:	call   0x100430d7
100330a5:	add    ebp,0x98
100330ab:	mov    esp,ebp
100330ad:	pop    ebp
100330ae:	ret    
100330af:	int3   
100330b0:	push   ebp
100330b1:	mov    ebp,esp
100330b3:	push   0xffffffff
100330b5:	push   0x10060a2a
100330ba:	mov    eax,fs:0x0
100330c0:	push   eax
100330c1:	sub    esp,0x4c
100330c4:	mov    eax,ds:0x1007e030
100330c9:	xor    eax,ebp
100330cb:	mov    DWORD PTR [ebp-0x10],eax
100330ce:	push   ebx
100330cf:	push   esi
100330d0:	push   edi
100330d1:	push   eax
100330d2:	lea    eax,[ebp-0xc]
100330d5:	mov    fs:0x0,eax
100330db:	mov    ebx,ecx
100330dd:	xor    esi,esi
100330df:	mov    DWORD PTR [ebp-0x1c],esi
100330e2:	call   DWORD PTR ds:0x1007efec
100330e8:	xor    edi,edi
100330ea:	mov    DWORD PTR [ebp-0x18],eax
100330ed:	mov    DWORD PTR [ebp-0x14],edi
100330f0:	cmp    DWORD PTR [ebp+0xc],esi
100330f3:	mov    DWORD PTR [ebp-0x4],esi
100330f6:	je     0x10033194
100330fc:	cmp    ebx,esi
100330fe:	je     0x10033194
10033104:	push   ebx
10033105:	call   DWORD PTR ds:0x100660c4
1003310b:	push   esi
1003310c:	add    eax,0x1
1003310f:	cdq    
10033110:	push   0x2
10033112:	push   edx
10033113:	push   eax
10033114:	call   0x1004f6a0
10033119:	mov    edi,eax
1003311b:	add    eax,0x80000000
10033120:	adc    edx,esi
10033122:	mov    DWORD PTR [ebp-0x1c],edx
10033125:	jne    0x1003312c
10033127:	cmp    eax,0xffffffff
1003312a:	jbe    0x10033130
1003312c:	xor    eax,eax
1003312e:	jmp    0x10033168
10033130:	cmp    edi,0x400
10033136:	jg     0x10033150
10033138:	push   edi
10033139:	call   0x10006c03
1003313e:	add    esp,0x4
10033141:	test   al,al
10033143:	je     0x10033150
10033145:	mov    eax,edi
10033147:	call   0x1004b990
1003314c:	mov    eax,esp
1003314e:	jmp    0x10033159
10033150:	push   edi
10033151:	lea    esi,[ebp-0x14]
10033154:	call   0x10007592
10033159:	mov    ecx,DWORD PTR [ebp-0x18]
1003315c:	push   ecx
1003315d:	push   edi
1003315e:	push   ebx
1003315f:	mov    esi,eax
10033161:	call   0x1000241c
10033166:	xor    esi,esi
10033168:	mov    edx,DWORD PTR [ebp+0xc]
1003316b:	push   edx
1003316c:	push   eax
1003316d:	lea    ecx,[ebp-0x58]
10033170:	mov    DWORD PTR [ebp-0x40],0xf
10033177:	mov    DWORD PTR [ebp-0x44],esi
1003317a:	mov    BYTE PTR [ebp-0x54],0x0
1003317e:	call   0x1000133f
10033183:	mov    BYTE PTR [ebp-0x4],0x1
10033187:	mov    edi,DWORD PTR [ebp-0x14]
1003318a:	lea    eax,[ebp-0x58]
1003318d:	mov    ebx,0x1
10033192:	jmp    0x100331c8
10033194:	push   0x1006cd08
10033199:	mov    DWORD PTR [ebp-0x24],0xf
100331a0:	mov    DWORD PTR [ebp-0x28],esi
100331a3:	mov    BYTE PTR [ebp-0x38],0x0
100331a7:	call   0x10043250
100331ac:	add    esp,0x4
100331af:	push   eax
100331b0:	push   0x1006cd08
100331b5:	lea    ecx,[ebp-0x3c]
100331b8:	call   0x1000133f
100331bd:	mov    ebx,0x2
100331c2:	lea    eax,[ebp-0x3c]
100331c5:	mov    DWORD PTR [ebp-0x4],ebx
100331c8:	mov    ecx,DWORD PTR [ebp+0x8]
100331cb:	push   0xffffffff
100331cd:	push   esi
100331ce:	push   eax
100331cf:	mov    DWORD PTR [ebp-0x1c],ebx
100331d2:	call   0x10001245
100331d7:	test   bl,0x2
100331da:	je     0x100331ff
100331dc:	and    ebx,0xfffffffd
100331df:	cmp    DWORD PTR [ebp-0x24],0x10
100331e3:	jb     0x100331f1
100331e5:	mov    eax,DWORD PTR [ebp-0x38]
100331e8:	push   eax
100331e9:	call   0x100430d2
100331ee:	add    esp,0x4
100331f1:	mov    DWORD PTR [ebp-0x24],0xf
100331f8:	mov    DWORD PTR [ebp-0x28],esi
100331fb:	mov    BYTE PTR [ebp-0x38],0x0
100331ff:	test   bl,0x1
10033202:	je     0x10033216
10033204:	cmp    DWORD PTR [ebp-0x40],0x10
10033208:	jb     0x10033216
1003320a:	mov    ecx,DWORD PTR [ebp-0x54]
1003320d:	push   ecx
1003320e:	call   0x100430d2
10033213:	add    esp,0x4
10033216:	cmp    edi,esi
10033218:	je     0x10033237
1003321a:	jmp    0x10033223
1003321c:	lea    esp,[esp+0x0]
10033220:	mov    edi,DWORD PTR [ebp-0x14]
10033223:	mov    eax,edi
10033225:	mov    edi,DWORD PTR [edi]
10033227:	push   eax
10033228:	mov    DWORD PTR [ebp-0x14],edi
1003322b:	call   0x10043748
10033230:	add    esp,0x4
10033233:	cmp    edi,esi
10033235:	jne    0x10033220
10033237:	lea    esp,[ebp-0x68]
1003323a:	mov    ecx,DWORD PTR [ebp-0xc]
1003323d:	mov    DWORD PTR fs:0x0,ecx
10033244:	pop    ecx
10033245:	pop    edi
10033246:	pop    esi
10033247:	pop    ebx
10033248:	mov    ecx,DWORD PTR [ebp-0x10]
1003324b:	xor    ecx,ebp
1003324d:	call   0x100430d7
10033252:	mov    esp,ebp
10033254:	pop    ebp
10033255:	ret    
10033256:	int3   
10033257:	int3   
10033258:	int3   
10033259:	int3   
1003325a:	int3   
1003325b:	int3   
1003325c:	int3   
1003325d:	int3   
1003325e:	int3   
1003325f:	int3   
10033260:	push   edi
10033261:	mov    edi,eax
10033263:	mov    eax,DWORD PTR [edi]
10033265:	push   0xffffffff
10033267:	push   0x0
10033269:	lea    ecx,[edi+0x4]
1003326c:	push   ecx
1003326d:	lea    ecx,[esi+0x4]
10033270:	mov    DWORD PTR [esi],eax
10033272:	call   0x10001245
10033277:	mov    dx,WORD PTR [edi+0x20]
1003327b:	push   0xffffffff
1003327d:	push   0x0
1003327f:	lea    eax,[edi+0x24]
10033282:	push   eax
10033283:	lea    ecx,[esi+0x24]
10033286:	mov    WORD PTR [esi+0x20],dx
1003328a:	call   0x10001245
1003328f:	push   0xffffffff
10033291:	push   0x0
10033293:	lea    ecx,[edi+0x40]
10033296:	push   ecx
10033297:	lea    ecx,[esi+0x40]
1003329a:	call   0x10001245
1003329f:	push   0xffffffff
100332a1:	push   0x0
100332a3:	lea    edx,[edi+0x5c]
100332a6:	push   edx
100332a7:	lea    ecx,[esi+0x5c]
100332aa:	call   0x10001245
100332af:	push   0xffffffff
100332b1:	push   0x0
100332b3:	add    edi,0x78
100332b6:	push   edi
100332b7:	lea    ecx,[esi+0x78]
100332ba:	call   0x10001245
100332bf:	mov    eax,esi
100332c1:	pop    edi
100332c2:	ret    
100332c3:	int3   
100332c4:	int3   
100332c5:	int3   
100332c6:	int3   
100332c7:	int3   
100332c8:	int3   
100332c9:	int3   
100332ca:	int3   
100332cb:	int3   
100332cc:	int3   
100332cd:	int3   
100332ce:	int3   
100332cf:	int3   
100332d0:	push   0xffffffff
100332d2:	push   0x10061a99
100332d7:	mov    eax,fs:0x0
100332dd:	push   eax
100332de:	sub    esp,0x4c
100332e1:	push   ebx
100332e2:	push   esi
100332e3:	push   edi
100332e4:	mov    eax,ds:0x1007e030
100332e9:	xor    eax,esp
100332eb:	push   eax
100332ec:	lea    eax,[esp+0x5c]
100332f0:	mov    fs:0x0,eax
100332f6:	mov    edi,DWORD PTR [esp+0x6c]
100332fa:	xor    ebx,ebx
100332fc:	mov    DWORD PTR [esp+0x64],ebx
10033300:	mov    DWORD PTR [esp+0x10],ebx
10033304:	mov    eax,ds:0x10080a74
10033309:	mov    edx,DWORD PTR [eax+0xc]
1003330c:	mov    ecx,0x10080a74
10033311:	call   edx
10033313:	add    eax,0x10
10033316:	mov    DWORD PTR [edi],eax
10033318:	mov    DWORD PTR [esp+0x64],ebx
1003331c:	mov    ecx,0x1
10033321:	sub    ecx,DWORD PTR [eax-0x4]
10033324:	mov    eax,DWORD PTR [eax-0x8]
10033327:	sub    eax,0x800
1003332c:	or     eax,ecx
1003332e:	mov    DWORD PTR [esp+0x10],0x1
10033336:	jge    0x10033344
10033338:	mov    eax,0x800
1003333d:	mov    ecx,edi
1003333f:	call   0x1000224a
10033344:	mov    eax,DWORD PTR [edi]
10033346:	push   0x800
1003334b:	push   eax
1003334c:	call   DWORD PTR ds:0x10066258
10033352:	test   eax,eax
10033354:	jne    0x1003340d
1003335a:	push   0x7abb473a
1003335f:	push   0x100734c8
10033364:	call   0x100042d1
10033369:	push   0x5ec1287c
1003336e:	push   eax
1003336f:	call   0x100042d1
10033374:	push   0x47349690
10033379:	push   eax
1003337a:	call   0x100042d1
1003337f:	push   0x3defe456
10033384:	push   eax
10033385:	call   0x100042d1
1003338a:	push   eax
1003338b:	push   0x1c
1003338d:	push   0x100734f4
10033392:	call   0x100042e3
10033397:	mov    esi,eax
10033399:	mov    edi,0xf
1003339e:	push   esi
1003339f:	mov    DWORD PTR [esp+0x5c],edi
100333a3:	mov    DWORD PTR [esp+0x58],ebx
100333a7:	mov    BYTE PTR [esp+0x48],bl
100333ab:	call   0x10043250
100333b0:	add    esp,0x30
100333b3:	push   eax
100333b4:	push   esi
100333b5:	lea    ecx,[esp+0x1c]
100333b9:	call   0x1000133f
100333be:	lea    ecx,[esp+0x30]
100333c2:	mov    DWORD PTR [esp+0x64],0x1
100333ca:	call   0x10043141
100333cf:	push   0xffffffff
100333d1:	mov    BYTE PTR [esp+0x68],0x2
100333d6:	push   ebx
100333d7:	lea    eax,[esp+0x1c]
100333db:	push   eax
100333dc:	lea    ecx,[esp+0x48]
100333e0:	mov    DWORD PTR [esp+0x3c],0x10073674
100333e8:	mov    DWORD PTR [esp+0x60],edi
100333ec:	mov    DWORD PTR [esp+0x5c],ebx
100333f0:	mov    BYTE PTR [esp+0x4c],bl
100333f4:	call   0x10001245
100333f9:	push   0x10074e84
100333fe:	lea    ecx,[esp+0x34]
10033402:	push   ecx
10033403:	mov    BYTE PTR [esp+0x6c],0x1
10033408:	call   0x10047c54
1003340d:	mov    eax,DWORD PTR [edi]
1003340f:	cmp    eax,ebx
10033411:	jne    0x10033417
10033413:	xor    eax,eax
10033415:	jmp    0x10033424
10033417:	push   eax
10033418:	call   0x10043933
1003341d:	add    esp,0x4
10033420:	cmp    eax,ebx
10033422:	jl     0x10033468
10033424:	mov    ecx,DWORD PTR [edi]
10033426:	cmp    eax,DWORD PTR [ecx-0x8]
10033429:	jg     0x10033468
1003342b:	mov    DWORD PTR [ecx-0xc],eax
1003342e:	mov    edx,DWORD PTR [edi]
10033430:	mov    WORD PTR [edx+eax*2],bx
10033434:	mov    ecx,DWORD PTR [edi]
10033436:	mov    edx,DWORD PTR [ecx-0xc]
10033439:	lea    eax,[edx-0x1]
1003343c:	cmp    eax,ebx
1003343e:	jl     0x10033468
10033440:	cmp    eax,edx
10033442:	jg     0x10033468
10033444:	movzx  eax,WORD PTR [ecx+eax*2]
10033448:	cmp    ax,0x5c
1003344c:	je     0x10033453
1003344e:	call   0x100347f0
10033453:	mov    eax,edi
10033455:	mov    ecx,DWORD PTR [esp+0x5c]
10033459:	mov    DWORD PTR fs:0x0,ecx
10033460:	pop    ecx
10033461:	pop    edi
10033462:	pop    esi
10033463:	pop    ebx
10033464:	add    esp,0x58
10033467:	ret    
10033468:	push   0x80070057
1003346d:	call   0x10001f24
10033472:	int3   
10033473:	int3   
10033474:	int3   
10033475:	int3   
10033476:	int3   
10033477:	int3   
10033478:	int3   
10033479:	int3   
1003347a:	int3   
1003347b:	int3   
1003347c:	int3   
1003347d:	int3   
1003347e:	int3   
1003347f:	int3   
10033480:	push   0xffffffff
10033482:	push   0x10062879
10033487:	mov    eax,fs:0x0
1003348d:	push   eax
1003348e:	sub    esp,0x50
10033491:	push   ebx
10033492:	push   ebp
10033493:	push   esi
10033494:	push   edi
10033495:	mov    eax,ds:0x1007e030
1003349a:	xor    eax,esp
1003349c:	push   eax
1003349d:	lea    eax,[esp+0x64]
100334a1:	mov    fs:0x0,eax
100334a7:	mov    esi,DWORD PTR [esp+0x74]
100334ab:	xor    ebx,ebx
100334ad:	mov    DWORD PTR [esp+0x6c],ebx
100334b1:	push   esi
100334b2:	mov    DWORD PTR [esp+0x1c],ebx
100334b6:	call   0x100332d0
100334bb:	add    esp,0x4
100334be:	mov    DWORD PTR [esp+0x6c],ebx
100334c2:	mov    eax,DWORD PTR [esi]
100334c4:	mov    ebp,0x1
100334c9:	sub    eax,0x10
100334cc:	cmp    DWORD PTR [eax+0xc],ebp
100334cf:	mov    DWORD PTR [esp+0x18],ebp
100334d3:	jle    0x100334df
100334d5:	mov    eax,DWORD PTR [eax+0x4]
100334d8:	push   eax
100334d9:	push   esi
100334da:	call   0x10002293
100334df:	mov    eax,DWORD PTR [esi]
100334e1:	push   0x5c
100334e3:	push   eax
100334e4:	call   0x100585e7
100334e9:	mov    edi,eax
100334eb:	add    esp,0x8
100334ee:	cmp    edi,ebx
100334f0:	jne    0x1003357c
100334f6:	push   0x10073514
100334fb:	push   0x18
100334fd:	push   0x1007354c
10033502:	call   0x100042e3
10033507:	mov    esi,eax
10033509:	add    esp,0xc
1003350c:	mov    edi,0xf
10033511:	push   esi
10033512:	mov    DWORD PTR [esp+0x38],edi
10033516:	mov    DWORD PTR [esp+0x34],ebx
1003351a:	mov    BYTE PTR [esp+0x24],bl
1003351e:	call   0x10043250
10033523:	add    esp,0x4
10033526:	push   eax
10033527:	push   esi
10033528:	lea    ecx,[esp+0x24]
1003352c:	call   0x1000133f
10033531:	lea    ecx,[esp+0x38]
10033535:	mov    DWORD PTR [esp+0x6c],ebp
10033539:	call   0x10043141
1003353e:	push   0xffffffff
10033540:	mov    BYTE PTR [esp+0x70],0x2
10033545:	push   ebx
10033546:	lea    ecx,[esp+0x24]
1003354a:	push   ecx
1003354b:	lea    ecx,[esp+0x50]
1003354f:	mov    DWORD PTR [esp+0x44],0x10073674
10033557:	mov    DWORD PTR [esp+0x68],edi
1003355b:	mov    DWORD PTR [esp+0x64],ebx
1003355f:	mov    BYTE PTR [esp+0x54],bl
10033563:	call   0x10001245
10033568:	push   0x10074e84
1003356d:	lea    edx,[esp+0x3c]
10033571:	push   edx
10033572:	mov    BYTE PTR [esp+0x74],0x1
10033577:	call   0x10047c54
1003357c:	mov    eax,DWORD PTR [esi]
1003357e:	sub    eax,0x10
10033581:	cmp    DWORD PTR [eax+0xc],ebp
10033584:	jle    0x10033590
10033586:	mov    eax,DWORD PTR [eax+0x4]
10033589:	push   eax
1003358a:	push   esi
1003358b:	call   0x10002293
10033590:	mov    eax,DWORD PTR [esi]
10033592:	sub    edi,eax
10033594:	sar    edi,1
10033596:	add    edi,ebp
10033598:	cmp    eax,ebx
1003359a:	jne    0x100335a0
1003359c:	xor    eax,eax
1003359e:	jmp    0x100335ad
100335a0:	push   eax
100335a1:	call   0x10043933
100335a6:	add    esp,0x4
100335a9:	cmp    eax,ebx
100335ab:	jl     0x10033603
100335ad:	mov    ecx,DWORD PTR [esi]
100335af:	cmp    eax,DWORD PTR [ecx-0x8]
100335b2:	jg     0x10033603
100335b4:	mov    DWORD PTR [ecx-0xc],eax
100335b7:	mov    ecx,DWORD PTR [esi]
100335b9:	mov    WORD PTR [ecx+eax*2],bx
100335bd:	mov    eax,DWORD PTR [esi]
100335bf:	sub    eax,0x10
100335c2:	mov    ecx,ebp
100335c4:	sub    ecx,DWORD PTR [eax+0xc]
100335c7:	mov    eax,DWORD PTR [eax+0x8]
100335ca:	sub    eax,edi
100335cc:	or     eax,ecx
100335ce:	jge    0x100335d9
100335d0:	mov    eax,edi
100335d2:	mov    ecx,esi
100335d4:	call   0x1000224a
100335d9:	cmp    edi,ebx
100335db:	jl     0x10033603
100335dd:	mov    eax,DWORD PTR [esi]
100335df:	cmp    edi,DWORD PTR [eax-0x8]
100335e2:	jg     0x10033603
100335e4:	mov    DWORD PTR [eax-0xc],edi
100335e7:	mov    edx,DWORD PTR [esi]
100335e9:	mov    WORD PTR [edx+edi*2],bx
100335ed:	mov    eax,esi
100335ef:	mov    ecx,DWORD PTR [esp+0x64]
100335f3:	mov    DWORD PTR fs:0x0,ecx
100335fa:	pop    ecx
100335fb:	pop    edi
100335fc:	pop    esi
100335fd:	pop    ebp
100335fe:	pop    ebx
100335ff:	add    esp,0x5c
10033602:	ret    
10033603:	push   0x80070057
10033608:	call   0x10001f24
1003360d:	int3   
1003360e:	int3   
1003360f:	int3   
10033610:	push   ebp
10033611:	mov    ebp,esp
10033613:	push   0xffffffff
10033615:	push   0x1006341a
1003361a:	mov    eax,fs:0x0
10033620:	push   eax
10033621:	sub    esp,0x134
10033627:	mov    eax,ds:0x1007e030
1003362c:	xor    eax,ebp
1003362e:	mov    DWORD PTR [ebp-0x10],eax
10033631:	push   ebx
10033632:	push   esi
10033633:	push   edi
10033634:	push   eax
10033635:	lea    eax,[ebp-0xc]
10033638:	mov    fs:0x0,eax
1003363e:	call   DWORD PTR ds:0x1007efec
10033644:	mov    DWORD PTR [ebp-0x84],eax
1003364a:	lea    eax,[ebp-0x7c]
1003364d:	push   eax
1003364e:	call   0x10033480
10033653:	add    esp,0x4
10033656:	xor    ebx,ebx
10033658:	push   ebx
10033659:	push   ebx
1003365a:	lea    ecx,[ebp-0x8c]
10033660:	push   ecx
10033661:	lea    edx,[ebp-0x88]
10033667:	push   edx
10033668:	lea    eax,[ebp-0x80]
1003366b:	push   eax
1003366c:	push   ebx
1003366d:	mov    DWORD PTR [ebp-0x4],ebx
10033670:	mov    ecx,DWORD PTR [ebp-0x7c]
10033673:	push   ebx
10033674:	push   ecx
10033675:	call   DWORD PTR ds:0x1006625c
1003367b:	test   eax,eax
1003367d:	jne    0x1003382c
10033683:	call   DWORD PTR ds:0x100660cc
10033689:	push   0xa
1003368b:	lea    edx,[ebp-0x78]
1003368e:	push   edx
1003368f:	push   eax
10033690:	call   0x10045dbe
10033695:	mov    eax,DWORD PTR [ebp-0x7c]
10033698:	add    esp,0xc
1003369b:	cmp    eax,ebx
1003369d:	mov    esi,eax
1003369f:	jne    0x100336a5
100336a1:	xor    edi,edi
100336a3:	jmp    0x100336d8
100336a5:	push   eax
100336a6:	call   DWORD PTR ds:0x100660c4
100336ac:	add    eax,0x1
100336af:	cmp    eax,0x3fffffff
100336b4:	jle    0x100336ba
100336b6:	xor    edi,edi
100336b8:	jmp    0x100336d8
100336ba:	lea    edi,[eax+eax*1]
100336bd:	mov    eax,edi
100336bf:	call   0x1004b990
100336c4:	mov    ecx,DWORD PTR [ebp-0x84]
100336ca:	mov    eax,esp
100336cc:	push   ecx
100336cd:	push   edi
100336ce:	push   esi
100336cf:	mov    esi,eax
100336d1:	call   0x1000241c
100336d6:	mov    edi,eax
100336d8:	push   0x367836a0
100336dd:	push   0x100735a0
100336e2:	call   0x100042d1
100336e7:	push   0x4931bdc0
100336ec:	push   eax
100336ed:	call   0x100042d1
100336f2:	push   eax
100336f3:	push   0x21
100336f5:	push   0x100735e0
100336fa:	call   0x100042e3
100336ff:	mov    esi,eax
10033701:	add    esp,0x1c
10033704:	push   esi
10033705:	mov    DWORD PTR [ebp-0x90],0xf
1003370f:	mov    DWORD PTR [ebp-0x94],ebx
10033715:	mov    BYTE PTR [ebp-0xa4],bl
1003371b:	call   0x10043250
10033720:	add    esp,0x4
10033723:	push   eax
10033724:	push   esi
10033725:	lea    ecx,[ebp-0xa8]
1003372b:	call   0x1000133f
10033730:	push   edi
10033731:	lea    edx,[ebp-0xa8]
10033737:	push   edx
10033738:	lea    eax,[ebp-0x140]
1003373e:	push   eax
1003373f:	mov    BYTE PTR [ebp-0x4],0x1
10033743:	call   0x100064b5
10033748:	add    esp,0xc
1003374b:	mov    esi,eax
1003374d:	push   0xb44df3c
10033752:	push   0x1007356c
10033757:	mov    BYTE PTR [ebp-0x4],0x2
1003375b:	call   0x100042d1
10033760:	push   0x23943aea
10033765:	push   eax
10033766:	call   0x100042d1
1003376b:	push   0x34981b8e
10033770:	push   eax
10033771:	call   0x100042d1
10033776:	push   0x66b34f74
1003377b:	push   eax
1003377c:	call   0x100042d1
10033781:	push   eax
10033782:	push   0x7
10033784:	push   0x10073594
10033789:	call   0x100042e3
1003378e:	add    esp,0x2c
10033791:	push   eax
10033792:	lea    ecx,[ebp-0x124]
10033798:	push   esi
10033799:	push   ecx
1003379a:	call   0x100064b5
1003379f:	add    esp,0xc
100337a2:	lea    edx,[ebp-0x78]
100337a5:	push   edx
100337a6:	push   eax
100337a7:	lea    eax,[ebp-0x108]
100337ad:	push   eax
100337ae:	mov    BYTE PTR [ebp-0x4],0x3
100337b2:	call   0x100064b5
100337b7:	add    esp,0xc
100337ba:	push   0x10073568
100337bf:	push   eax
100337c0:	lea    ecx,[ebp-0xec]
100337c6:	push   ecx
100337c7:	mov    BYTE PTR [ebp-0x4],0x4
100337cb:	call   0x100064b5
100337d0:	add    esp,0xc
100337d3:	mov    esi,eax
100337d5:	lea    ecx,[ebp-0xd0]
100337db:	mov    BYTE PTR [ebp-0x4],0x5
100337df:	call   0x10043141
100337e4:	mov    BYTE PTR [ebp-0x4],0x6
100337e8:	push   0xffffffff
100337ea:	push   ebx
100337eb:	push   esi
100337ec:	lea    ecx,[ebp-0xc4]
100337f2:	mov    DWORD PTR [ebp-0xd0],0x10073674
100337fc:	mov    DWORD PTR [ebp-0xac],0xf
10033806:	mov    DWORD PTR [ebp-0xb0],ebx
1003380c:	mov    BYTE PTR [ebp-0xc0],bl
10033812:	call   0x10001245
10033817:	push   0x10074e84
1003381c:	lea    edx,[ebp-0xd0]
10033822:	push   edx
10033823:	mov    BYTE PTR [ebp-0x4],0x5
10033827:	call   0x10047c54
1003382c:	mov    esi,DWORD PTR [ebp-0x80]
1003382f:	mov    DWORD PTR [ebp-0x4],0xffffffff
10033836:	mov    eax,DWORD PTR [ebp-0x7c]
10033839:	add    eax,0xfffffff0
1003383c:	lea    ecx,[eax+0xc]
1003383f:	or     edx,0xffffffff
10033842:	lock xadd DWORD PTR [ecx],edx
10033846:	dec    edx
10033847:	test   edx,edx
10033849:	jg     0x10033855
1003384b:	mov    ecx,DWORD PTR [eax]
1003384d:	mov    edx,DWORD PTR [ecx]
1003384f:	push   eax
10033850:	mov    eax,DWORD PTR [edx+0x4]
10033853:	call   eax
10033855:	mov    eax,esi
10033857:	lea    esp,[ebp-0x150]
1003385d:	mov    ecx,DWORD PTR [ebp-0xc]
10033860:	mov    DWORD PTR fs:0x0,ecx
10033867:	pop    ecx
10033868:	pop    edi
10033869:	pop    esi
1003386a:	pop    ebx
1003386b:	mov    ecx,DWORD PTR [ebp-0x10]
1003386e:	xor    ecx,ebp
10033870:	call   0x100430d7
10033875:	mov    esp,ebp
10033877:	pop    ebp
10033878:	ret    
10033879:	int3   
1003387a:	int3   
1003387b:	int3   
1003387c:	int3   
1003387d:	int3   
1003387e:	int3   
1003387f:	int3   
10033880:	push   ebp
10033881:	mov    ebp,esp
10033883:	sub    esp,0x50
10033886:	mov    eax,ds:0x1007e030
1003388b:	xor    eax,ebp
1003388d:	mov    DWORD PTR [ebp-0x4],eax
10033890:	push   ebx
10033891:	push   esi
10033892:	mov    DWORD PTR [ebp-0x4c],0x0
10033899:	call   0x10033610
1003389e:	lea    ebx,[ebp-0x48]
100338a1:	mov    edx,eax
100338a3:	call   0x1002f5c0
100338a8:	call   DWORD PTR ds:0x1007efec
100338ae:	mov    DWORD PTR [ebp-0x4c],eax
100338b1:	mov    eax,ebx
100338b3:	push   eax
100338b4:	call   DWORD PTR ds:0x100660c4
100338ba:	add    eax,0x1
100338bd:	cmp    eax,0x3fffffff
100338c2:	jg     0x100338f9
100338c4:	lea    esi,[eax+eax*1]
100338c7:	mov    eax,esi
100338c9:	call   0x1004b990
100338ce:	mov    ebx,esp
100338d0:	test   ebx,ebx
100338d2:	je     0x100338f9
100338d4:	mov    edx,DWORD PTR [ebp-0x4c]
100338d7:	push   0x0
100338d9:	push   0x0
100338db:	push   esi
100338dc:	push   ebx
100338dd:	push   0xffffffff
100338df:	lea    ecx,[ebp-0x48]
100338e2:	push   ecx
100338e3:	push   0x0
100338e5:	push   edx
100338e6:	mov    BYTE PTR [ebx],0x0
100338e9:	call   DWORD PTR ds:0x100660b8
100338ef:	mov    esi,eax
100338f1:	neg    esi
100338f3:	sbb    esi,esi
100338f5:	and    esi,ebx
100338f7:	jmp    0x100338fb
100338f9:	xor    esi,esi
100338fb:	xor    eax,eax
100338fd:	mov    DWORD PTR [edi+0x18],0xf
10033904:	mov    DWORD PTR [edi+0x14],eax
10033907:	push   esi
10033908:	mov    BYTE PTR [edi+0x4],al
1003390b:	call   0x10043250
10033910:	add    esp,0x4
10033913:	push   eax
10033914:	push   esi
10033915:	mov    ecx,edi
10033917:	call   0x1000133f
1003391c:	mov    eax,edi
1003391e:	lea    esp,[ebp-0x58]
10033921:	pop    esi
10033922:	pop    ebx
10033923:	mov    ecx,DWORD PTR [ebp-0x4]
10033926:	xor    ecx,ebp
10033928:	call   0x100430d7
1003392d:	mov    esp,ebp
1003392f:	pop    ebp
10033930:	ret    
10033931:	int3   
10033932:	int3   
10033933:	int3   
10033934:	int3   
10033935:	int3   
10033936:	int3   
10033937:	int3   
10033938:	int3   
10033939:	int3   
1003393a:	int3   
1003393b:	int3   
1003393c:	int3   
1003393d:	int3   
1003393e:	int3   
1003393f:	int3   
10033940:	push   esi
10033941:	push   edi
10033942:	push   ebx
10033943:	call   DWORD PTR ds:0x10066080
10033949:	mov    esi,eax
1003394b:	test   esi,esi
1003394d:	jne    0x10033951
1003394f:	pop    esi
10033950:	ret    
10033951:	push   edi
10033952:	push   ebx
10033953:	call   DWORD PTR ds:0x10066088
10033959:	mov    ecx,DWORD PTR [esp+0x8]
1003395d:	push   esi
1003395e:	mov    DWORD PTR [ecx],eax
10033960:	call   DWORD PTR ds:0x10066090
10033966:	pop    esi
10033967:	ret    
10033968:	int3   
10033969:	int3   
1003396a:	int3   
1003396b:	int3   
1003396c:	int3   
1003396d:	int3   
1003396e:	int3   
1003396f:	int3   
10033970:	cmp    BYTE PTR ds:0x10080fe0,0x0
10033977:	jne    0x100339d6
10033979:	xor    eax,eax
1003397b:	mov    cl,0x61
1003397d:	lea    ecx,[ecx+0x0]
10033980:	mov    BYTE PTR [eax+0x100813e8],cl
10033986:	add    cl,0x1
10033989:	add    eax,0x1
1003398c:	cmp    cl,0x7a
1003398f:	jle    0x10033980
10033991:	mov    cl,0x41
10033993:	mov    BYTE PTR [eax+0x100813e8],cl
10033999:	add    cl,0x1
1003399c:	add    eax,0x1
1003399f:	cmp    cl,0x5a
100339a2:	jle    0x10033993
100339a4:	mov    cl,0x30
100339a6:	jmp    0x100339b0
100339a8:	lea    esp,[esp+0x0]
100339af:	nop
100339b0:	mov    BYTE PTR [eax+0x100813e8],cl
100339b6:	add    cl,0x1
100339b9:	add    eax,0x1
100339bc:	cmp    cl,0x39
100339bf:	jle    0x100339b0
100339c1:	mov    BYTE PTR [eax+0x100813e8],0x5f
100339c8:	mov    BYTE PTR [eax+0x100813e9],0x2d
100339cf:	mov    BYTE PTR ds:0x10080fe0,0x1
100339d6:	mov    eax,0x100813e8
100339db:	ret    
100339dc:	int3   
100339dd:	int3   
100339de:	int3   
100339df:	int3   
100339e0:	cmp    BYTE PTR ds:0x10080fe1,0x0
100339e7:	jne    0x10033a58
100339e9:	push   edi
100339ea:	or     eax,0xffffffff
100339ed:	mov    ecx,0x100
100339f2:	mov    edi,0x10080fe8
100339f7:	rep stos DWORD PTR es:[edi],eax
100339f9:	xor    eax,eax
100339fb:	mov    ecx,0x1008116c
10033a00:	mov    edx,0x1a
10033a05:	pop    edi
10033a06:	mov    DWORD PTR [ecx],eax
10033a08:	add    eax,0x1
10033a0b:	add    ecx,0x4
10033a0e:	sub    edx,0x1
10033a11:	jne    0x10033a06
10033a13:	mov    ecx,0x100810ec
10033a18:	mov    edx,0x1a
10033a1d:	lea    ecx,[ecx+0x0]
10033a20:	mov    DWORD PTR [ecx],eax
10033a22:	add    eax,0x1
10033a25:	add    ecx,0x4
10033a28:	sub    edx,0x1
10033a2b:	jne    0x10033a20
10033a2d:	mov    ecx,0x100810a8
10033a32:	mov    edx,0xa
10033a37:	mov    DWORD PTR [ecx],eax
10033a39:	add    eax,0x1
10033a3c:	add    ecx,0x4
10033a3f:	sub    edx,0x1
10033a42:	jne    0x10033a37
10033a44:	mov    ds:0x10081164,eax
10033a49:	add    eax,0x1
10033a4c:	mov    ds:0x1008109c,eax
10033a51:	mov    BYTE PTR ds:0x10080fe1,0x1
10033a58:	mov    eax,0x10080fe8
10033a5d:	ret    
10033a5e:	int3   
10033a5f:	int3   
10033a60:	push   0xffffffff
10033a62:	push   0x10061a49
10033a67:	mov    eax,fs:0x0
10033a6d:	push   eax
10033a6e:	sub    esp,0x1c
10033a71:	push   ebx
10033a72:	push   ebp
10033a73:	push   edi
10033a74:	mov    eax,ds:0x1007e030
10033a79:	xor    eax,esp
10033a7b:	push   eax
10033a7c:	lea    eax,[esp+0x2c]
10033a80:	mov    fs:0x0,eax
10033a86:	xor    edi,edi
10033a88:	mov    DWORD PTR [esp+0x24],edi
10033a8c:	mov    DWORD PTR [esi+0x18],0xf
10033a93:	mov    DWORD PTR [esi+0x14],edi
10033a96:	mov    DWORD PTR [esp+0x28],esi
10033a9a:	mov    DWORD PTR [esp+0x20],edx
10033a9e:	mov    BYTE PTR [esi+0x4],0x0
10033aa2:	mov    DWORD PTR [esp+0x34],edi
10033aa6:	mov    DWORD PTR [esp+0x24],0x1
10033aae:	call   0x10033970
10033ab3:	mov    edx,DWORD PTR [edx+0x14]
10033ab6:	cmp    dx,di
10033ab9:	mov    DWORD PTR [esp+0x14],eax
10033abd:	mov    DWORD PTR [esp+0x1c],edx
10033ac1:	mov    DWORD PTR [esp+0x18],edi
10033ac5:	je     0x10033c22
10033acb:	mov    DWORD PTR [esp+0x10],edi
10033acf:	mov    ebx,DWORD PTR [esp+0x10]
10033ad3:	mov    edi,DWORD PTR [esp+0x20]
10033ad7:	cmp    ebx,DWORD PTR [edi+0x14]
10033ada:	jbe    0x10033ae1
10033adc:	call   0x100435f0
10033ae1:	cmp    DWORD PTR [edi+0x18],0x10
10033ae5:	lea    eax,[edi+0x4]
10033ae8:	jb     0x10033aec
10033aea:	mov    eax,DWORD PTR [eax]
10033aec:	mov    al,BYTE PTR [ebx+eax*1]
10033aef:	xor    al,BYTE PTR [esp+0x18]
10033af3:	mov    ecx,DWORD PTR [esp+0x14]
10033af7:	movzx  ebp,al
10033afa:	or     edx,0xffffffff
10033afd:	sub    edx,DWORD PTR [esi+0x14]
10033b00:	mov    eax,ebp
10033b02:	and    eax,0x3f
10033b05:	cmp    edx,0x1
10033b08:	mov    bl,BYTE PTR [eax+ecx*1]
10033b0b:	ja     0x10033b12
10033b0d:	call   0x10057440
10033b12:	mov    edi,DWORD PTR [esi+0x14]
10033b15:	add    edi,0x1
10033b18:	cmp    edi,0xfffffffe
10033b1b:	jbe    0x10033b22
10033b1d:	call   0x10057440
10033b22:	mov    eax,DWORD PTR [esi+0x18]
10033b25:	cmp    eax,edi
10033b27:	jae    0x10033b49
10033b29:	mov    eax,DWORD PTR [esi+0x14]
10033b2c:	push   eax
10033b2d:	push   edi
10033b2e:	mov    ecx,esi
10033b30:	call   0x10001504
10033b35:	test   edi,edi
10033b37:	jbe    0x10033b7d
10033b39:	cmp    DWORD PTR [esi+0x18],0x10
10033b3d:	mov    ecx,DWORD PTR [esi+0x14]
10033b40:	lea    edx,[esi+0x4]
10033b43:	jb     0x10033b65
10033b45:	mov    eax,DWORD PTR [edx]
10033b47:	jmp    0x10033b67
10033b49:	test   edi,edi
10033b4b:	jne    0x10033b37
10033b4d:	cmp    eax,0x10
10033b50:	mov    DWORD PTR [esi+0x14],edi
10033b53:	jb     0x10033b5d
10033b55:	mov    eax,DWORD PTR [esi+0x4]
10033b58:	mov    BYTE PTR [eax],0x0
10033b5b:	jmp    0x10033b7d
10033b5d:	lea    eax,[esi+0x4]
10033b60:	mov    BYTE PTR [eax],0x0
10033b63:	jmp    0x10033b7d
10033b65:	mov    eax,edx
10033b67:	mov    BYTE PTR [eax+ecx*1],bl
10033b6a:	cmp    DWORD PTR [esi+0x18],0x10
10033b6e:	mov    DWORD PTR [esi+0x14],edi
10033b71:	jb     0x10033b77
10033b73:	mov    eax,DWORD PTR [edx]
10033b75:	jmp    0x10033b79
10033b77:	mov    eax,edx
10033b79:	mov    BYTE PTR [eax+edi*1],0x0
10033b7d:	mov    ecx,DWORD PTR [esp+0x14]
10033b81:	or     edx,0xffffffff
10033b84:	sub    edx,DWORD PTR [esi+0x14]
10033b87:	shr    ebp,0x6
10033b8a:	cmp    edx,0x1
10033b8d:	mov    bl,BYTE PTR [ecx+ebp*1]
10033b90:	ja     0x10033b97
10033b92:	call   0x10057440
10033b97:	mov    edi,DWORD PTR [esi+0x14]
10033b9a:	add    edi,0x1
10033b9d:	cmp    edi,0xfffffffe
10033ba0:	jbe    0x10033ba7
10033ba2:	call   0x10057440
10033ba7:	mov    eax,DWORD PTR [esi+0x18]
10033baa:	cmp    eax,edi
10033bac:	jae    0x10033bd3
10033bae:	mov    eax,DWORD PTR [esi+0x14]
10033bb1:	push   eax
10033bb2:	push   edi
10033bb3:	mov    ecx,esi
10033bb5:	call   0x10001504
10033bba:	test   edi,edi
10033bbc:	jbe    0x10033c07
10033bbe:	mov    ecx,DWORD PTR [esi+0x14]
10033bc1:	mov    edx,0x10
10033bc6:	cmp    DWORD PTR [esi+0x18],edx
10033bc9:	lea    ebp,[esi+0x4]
10033bcc:	jb     0x10033bef
10033bce:	mov    eax,DWORD PTR [ebp+0x0]
10033bd1:	jmp    0x10033bf1
10033bd3:	test   edi,edi
10033bd5:	jne    0x10033bbc
10033bd7:	cmp    eax,0x10
10033bda:	mov    DWORD PTR [esi+0x14],edi
10033bdd:	jb     0x10033be7
10033bdf:	mov    eax,DWORD PTR [esi+0x4]
10033be2:	mov    BYTE PTR [eax],0x0
10033be5:	jmp    0x10033c07
10033be7:	lea    eax,[esi+0x4]
10033bea:	mov    BYTE PTR [eax],0x0
10033bed:	jmp    0x10033c07
10033bef:	mov    eax,ebp
10033bf1:	mov    BYTE PTR [eax+ecx*1],bl
10033bf4:	cmp    DWORD PTR [esi+0x18],edx
10033bf7:	mov    DWORD PTR [esi+0x14],edi
10033bfa:	jb     0x10033c01
10033bfc:	mov    eax,DWORD PTR [ebp+0x0]
10033bff:	jmp    0x10033c03
10033c01:	mov    eax,ebp
10033c03:	mov    BYTE PTR [eax+edi*1],0x0
10033c07:	mov    eax,DWORD PTR [esp+0x18]
10033c0b:	add    DWORD PTR [esp+0x10],0x1
10033c10:	add    eax,0x1
10033c13:	cmp    ax,WORD PTR [esp+0x1c]
10033c18:	mov    DWORD PTR [esp+0x18],eax
10033c1c:	jne    0x10033acf
10033c22:	movzx  ebp,WORD PTR [esp+0x1c]
10033c27:	mov    edx,DWORD PTR [esp+0x14]
10033c2b:	or     eax,0xffffffff
10033c2e:	sub    eax,DWORD PTR [esi+0x14]
10033c31:	mov    ecx,ebp
10033c33:	and    ecx,0xf
10033c36:	cmp    eax,0x1
10033c39:	mov    bl,BYTE PTR [ecx+edx*1]
10033c3c:	mov    DWORD PTR [esp+0x10],ebp
10033c40:	ja     0x10033c47
10033c42:	call   0x10057440
10033c47:	mov    edi,DWORD PTR [esi+0x14]
10033c4a:	add    edi,0x1
10033c4d:	cmp    edi,0xfffffffe
10033c50:	jbe    0x10033c57
10033c52:	call   0x10057440
10033c57:	mov    eax,DWORD PTR [esi+0x18]
10033c5a:	cmp    eax,edi
10033c5c:	jae    0x10033c82
10033c5e:	mov    ecx,DWORD PTR [esi+0x14]
10033c61:	push   ecx
10033c62:	push   edi
10033c63:	mov    ecx,esi
10033c65:	call   0x10001504
10033c6a:	test   edi,edi
10033c6c:	jbe    0x10033cb5
10033c6e:	mov    ebp,DWORD PTR [esi+0x14]
10033c71:	mov    edx,0x10
10033c76:	cmp    DWORD PTR [esi+0x18],edx
10033c79:	lea    eax,[esi+0x4]
10033c7c:	jb     0x10033c9e
10033c7e:	mov    ecx,DWORD PTR [eax]
10033c80:	jmp    0x10033ca0
10033c82:	test   edi,edi
10033c84:	jne    0x10033c6c
10033c86:	cmp    eax,0x10
10033c89:	mov    DWORD PTR [esi+0x14],edi
10033c8c:	jb     0x10033c96
10033c8e:	mov    eax,DWORD PTR [esi+0x4]
10033c91:	mov    BYTE PTR [eax],0x0
10033c94:	jmp    0x10033cb5
10033c96:	lea    eax,[esi+0x4]
10033c99:	mov    BYTE PTR [eax],0x0
10033c9c:	jmp    0x10033cb5
10033c9e:	mov    ecx,eax
10033ca0:	mov    BYTE PTR [ecx+ebp*1],bl
10033ca3:	cmp    DWORD PTR [esi+0x18],edx
10033ca6:	mov    DWORD PTR [esi+0x14],edi
10033ca9:	jb     0x10033cad
10033cab:	mov    eax,DWORD PTR [eax]
10033cad:	mov    ebp,DWORD PTR [esp+0x10]
10033cb1:	mov    BYTE PTR [eax+edi*1],0x0
10033cb5:	mov    eax,DWORD PTR [esp+0x14]
10033cb9:	or     ecx,0xffffffff
10033cbc:	sub    ecx,DWORD PTR [esi+0x14]
10033cbf:	mov    edx,ebp
10033cc1:	shr    edx,0x4
10033cc4:	and    edx,0xf
10033cc7:	cmp    ecx,0x1
10033cca:	mov    bl,BYTE PTR [edx+eax*1]
10033ccd:	ja     0x10033cd4
10033ccf:	call   0x10057440
10033cd4:	mov    edi,DWORD PTR [esi+0x14]
10033cd7:	add    edi,0x1
10033cda:	cmp    edi,0xfffffffe
10033cdd:	jbe    0x10033ce4
10033cdf:	call   0x10057440
10033ce4:	mov    eax,DWORD PTR [esi+0x18]
10033ce7:	cmp    eax,edi
10033ce9:	jae    0x10033d0f
10033ceb:	mov    edx,DWORD PTR [esi+0x14]
10033cee:	push   edx
10033cef:	push   edi
10033cf0:	mov    ecx,esi
10033cf2:	call   0x10001504
10033cf7:	test   edi,edi
10033cf9:	jbe    0x10033d42
10033cfb:	mov    ebp,DWORD PTR [esi+0x14]
10033cfe:	mov    edx,0x10
10033d03:	cmp    DWORD PTR [esi+0x18],edx
10033d06:	lea    eax,[esi+0x4]
10033d09:	jb     0x10033d2b
10033d0b:	mov    ecx,DWORD PTR [eax]
10033d0d:	jmp    0x10033d2d
10033d0f:	test   edi,edi
10033d11:	jne    0x10033cf9
10033d13:	cmp    eax,0x10
10033d16:	mov    DWORD PTR [esi+0x14],edi
10033d19:	jb     0x10033d23
10033d1b:	mov    eax,DWORD PTR [esi+0x4]
10033d1e:	mov    BYTE PTR [eax],0x0
10033d21:	jmp    0x10033d42
10033d23:	lea    eax,[esi+0x4]
10033d26:	mov    BYTE PTR [eax],0x0
10033d29:	jmp    0x10033d42
10033d2b:	mov    ecx,eax
10033d2d:	mov    BYTE PTR [ecx+ebp*1],bl
10033d30:	cmp    DWORD PTR [esi+0x18],edx
10033d33:	mov    DWORD PTR [esi+0x14],edi
10033d36:	jb     0x10033d3a
10033d38:	mov    eax,DWORD PTR [eax]
10033d3a:	mov    ebp,DWORD PTR [esp+0x10]
10033d3e:	mov    BYTE PTR [eax+edi*1],0x0
10033d42:	mov    ecx,DWORD PTR [esp+0x14]
10033d46:	or     edx,0xffffffff
10033d49:	sub    edx,DWORD PTR [esi+0x14]
10033d4c:	mov    eax,ebp
10033d4e:	shr    eax,0x8
10033d51:	and    eax,0xf
10033d54:	cmp    edx,0x1
10033d57:	mov    bl,BYTE PTR [eax+ecx*1]
10033d5a:	ja     0x10033d61
10033d5c:	call   0x10057440
10033d61:	mov    edi,DWORD PTR [esi+0x14]
10033d64:	add    edi,0x1
10033d67:	cmp    edi,0xfffffffe
10033d6a:	jbe    0x10033d71
10033d6c:	call   0x10057440
10033d71:	mov    eax,DWORD PTR [esi+0x18]
10033d74:	cmp    eax,edi
10033d76:	jae    0x10033d9c
10033d78:	mov    eax,DWORD PTR [esi+0x14]
10033d7b:	push   eax
10033d7c:	push   edi
10033d7d:	mov    ecx,esi
10033d7f:	call   0x10001504
10033d84:	test   edi,edi
10033d86:	jbe    0x10033dcf
10033d88:	mov    ebp,DWORD PTR [esi+0x14]
10033d8b:	mov    edx,0x10
10033d90:	cmp    DWORD PTR [esi+0x18],edx
10033d93:	lea    eax,[esi+0x4]
10033d96:	jb     0x10033db8
10033d98:	mov    ecx,DWORD PTR [eax]
10033d9a:	jmp    0x10033dba
10033d9c:	test   edi,edi
10033d9e:	jne    0x10033d86
10033da0:	cmp    eax,0x10
10033da3:	mov    DWORD PTR [esi+0x14],edi
10033da6:	jb     0x10033db0
10033da8:	mov    eax,DWORD PTR [esi+0x4]
10033dab:	mov    BYTE PTR [eax],0x0
10033dae:	jmp    0x10033dcf
10033db0:	lea    eax,[esi+0x4]
10033db3:	mov    BYTE PTR [eax],0x0
10033db6:	jmp    0x10033dcf
10033db8:	mov    ecx,eax
10033dba:	mov    BYTE PTR [ecx+ebp*1],bl
10033dbd:	cmp    DWORD PTR [esi+0x18],edx
10033dc0:	mov    DWORD PTR [esi+0x14],edi
10033dc3:	jb     0x10033dc7
10033dc5:	mov    eax,DWORD PTR [eax]
10033dc7:	mov    ebp,DWORD PTR [esp+0x10]
10033dcb:	mov    BYTE PTR [eax+edi*1],0x0
10033dcf:	mov    ecx,DWORD PTR [esp+0x14]
10033dd3:	or     edx,0xffffffff
10033dd6:	sub    edx,DWORD PTR [esi+0x14]
10033dd9:	shr    ebp,0xc
10033ddc:	cmp    edx,0x1
10033ddf:	mov    bl,BYTE PTR [ecx+ebp*1]
10033de2:	ja     0x10033de9
10033de4:	call   0x10057440
10033de9:	mov    edi,DWORD PTR [esi+0x14]
10033dec:	add    edi,0x1
10033def:	cmp    edi,0xfffffffe
10033df2:	jbe    0x10033df9
10033df4:	call   0x10057440
10033df9:	mov    eax,DWORD PTR [esi+0x18]
10033dfc:	cmp    eax,edi
10033dfe:	jae    0x10033e24
10033e00:	mov    eax,DWORD PTR [esi+0x14]
10033e03:	push   eax
10033e04:	push   edi
10033e05:	mov    ecx,esi
10033e07:	call   0x10001504
10033e0c:	test   edi,edi
10033e0e:	jbe    0x10033e53
10033e10:	mov    ebp,DWORD PTR [esi+0x14]
10033e13:	mov    edx,0x10
10033e18:	cmp    DWORD PTR [esi+0x18],edx
10033e1b:	lea    eax,[esi+0x4]
10033e1e:	jb     0x10033e40
10033e20:	mov    ecx,DWORD PTR [eax]
10033e22:	jmp    0x10033e42
10033e24:	test   edi,edi
10033e26:	jne    0x10033e0e
10033e28:	cmp    eax,0x10
10033e2b:	mov    DWORD PTR [esi+0x14],edi
10033e2e:	jb     0x10033e38
10033e30:	mov    eax,DWORD PTR [esi+0x4]
10033e33:	mov    BYTE PTR [eax],0x0
10033e36:	jmp    0x10033e53
10033e38:	lea    eax,[esi+0x4]
10033e3b:	mov    BYTE PTR [eax],0x0
10033e3e:	jmp    0x10033e53
10033e40:	mov    ecx,eax
10033e42:	mov    BYTE PTR [ecx+ebp*1],bl
10033e45:	cmp    DWORD PTR [esi+0x18],edx
10033e48:	mov    DWORD PTR [esi+0x14],edi
10033e4b:	jb     0x10033e4f
10033e4d:	mov    eax,DWORD PTR [eax]
10033e4f:	mov    BYTE PTR [eax+edi*1],0x0
10033e53:	push   0x62150942
10033e58:	push   0x10073604
10033e5d:	call   0x100042d1
10033e62:	push   0x77067628
10033e67:	push   eax
10033e68:	call   0x100042d1
10033e6d:	push   eax
10033e6e:	push   0x7
10033e70:	push   0x10073630
10033e75:	call   0x100042e3
10033e7a:	mov    edi,eax
10033e7c:	push   edi
10033e7d:	call   0x10043250
10033e82:	add    esp,0x20
10033e85:	push   eax
10033e86:	push   edi
10033e87:	mov    eax,esi
10033e89:	call   0x10004d66
10033e8e:	mov    eax,esi
10033e90:	mov    ecx,DWORD PTR [esp+0x2c]
10033e94:	mov    DWORD PTR fs:0x0,ecx
10033e9b:	pop    ecx
10033e9c:	pop    edi
10033e9d:	pop    ebp
10033e9e:	pop    ebx
10033e9f:	add    esp,0x28
10033ea2:	ret    
10033ea3:	int3   
10033ea4:	int3   
10033ea5:	int3   
10033ea6:	int3   
10033ea7:	int3   
10033ea8:	int3   
10033ea9:	int3   
10033eaa:	int3   
10033eab:	int3   
10033eac:	int3   
10033ead:	int3   
10033eae:	int3   
10033eaf:	int3   
10033eb0:	push   ebp
10033eb1:	mov    ebp,esp
10033eb3:	push   0xffffffff
10033eb5:	push   0x10061a00
10033eba:	mov    eax,fs:0x0
10033ec0:	push   eax
10033ec1:	sub    esp,0x9c
10033ec7:	mov    eax,ds:0x1007e030
10033ecc:	xor    eax,ebp
10033ece:	mov    DWORD PTR [ebp-0x14],eax
10033ed1:	push   ebx
10033ed2:	push   esi
10033ed3:	push   edi
10033ed4:	push   eax
10033ed5:	lea    eax,[ebp-0xc]
10033ed8:	mov    fs:0x0,eax
10033ede:	mov    DWORD PTR [ebp-0x10],esp
10033ee1:	xor    ebx,ebx
10033ee3:	mov    DWORD PTR [ebp-0x4],ebx
10033ee6:	mov    edi,ecx
10033ee8:	mov    DWORD PTR [ebp-0x58],edi
10033eeb:	mov    esi,edx
10033eed:	mov    DWORD PTR [ebp-0x60],ebx
10033ef0:	mov    DWORD PTR [ebp-0x34],0xf
10033ef7:	mov    DWORD PTR [ebp-0x38],ebx
10033efa:	mov    BYTE PTR [ebp-0x48],bl
10033efd:	mov    BYTE PTR [ebp-0x4],0x1
10033f01:	call   0x100339e0
10033f06:	cmp    DWORD PTR [esi+0x14],0xb
10033f0a:	mov    DWORD PTR [ebp-0x50],eax
10033f0d:	jae    0x10033f4f
10033f0f:	mov    DWORD PTR [edi+0x18],0xf
10033f16:	mov    DWORD PTR [edi+0x14],ebx
10033f19:	push   0x1006cd08
10033f1e:	mov    BYTE PTR [edi+0x4],bl
10033f21:	call   0x10043250
10033f26:	add    esp,0x4
10033f29:	push   eax
10033f2a:	push   0x1006cd08
10033f2f:	mov    ecx,edi
10033f31:	call   0x1000133f
10033f36:	cmp    DWORD PTR [ebp-0x34],0x10
10033f3a:	jb     0x10033f48
10033f3c:	mov    eax,DWORD PTR [ebp-0x48]
10033f3f:	push   eax
10033f40:	call   0x100430d2
10033f45:	add    esp,0x4
10033f48:	mov    eax,edi
10033f4a:	jmp    0x10034380
10033f4f:	push   0x7164a8a2
10033f54:	push   0x10073638
10033f59:	call   0x100042d1
10033f5e:	add    esp,0x8
10033f61:	push   0x57f92fd6
10033f66:	push   eax
10033f67:	call   0x100042d1
10033f6c:	add    esp,0x8
10033f6f:	push   0x796f0836
10033f74:	push   eax
10033f75:	call   0x100042d1
10033f7a:	add    esp,0x8
10033f7d:	push   0x69936d6e
10033f82:	push   eax
10033f83:	call   0x100042d1
10033f88:	add    esp,0x8
10033f8b:	push   eax
10033f8c:	push   0x7
10033f8e:	push   0x10073630
10033f93:	call   0x100042e3
10033f98:	mov    ebx,eax
10033f9a:	add    esp,0xc
10033f9d:	push   ebx
10033f9e:	call   0x10043250
10033fa3:	add    esp,0x4
10033fa6:	push   eax
10033fa7:	push   ebx
10033fa8:	push   esi
10033fa9:	xor    eax,eax
10033fab:	call   0x1000d182
10033fb0:	cmp    eax,0xffffffff
10033fb3:	jne    0x10033ffe
10033fb5:	mov    DWORD PTR [edi+0x18],0xf
10033fbc:	mov    DWORD PTR [edi+0x14],0x0
10033fc3:	push   0x1006cd08
10033fc8:	mov    BYTE PTR [edi+0x4],0x0
10033fcc:	call   0x10043250
10033fd1:	add    esp,0x4
10033fd4:	push   eax
10033fd5:	push   0x1006cd08
10033fda:	mov    ecx,edi
10033fdc:	call   0x1000133f
10033fe1:	cmp    DWORD PTR [ebp-0x34],0x10
10033fe5:	jb     0x10033f48
10033feb:	mov    ecx,DWORD PTR [ebp-0x48]
10033fee:	push   ecx
10033fef:	call   0x100430d2
10033ff4:	add    esp,0x4
10033ff7:	mov    eax,edi
10033ff9:	jmp    0x10034380
10033ffe:	push   eax
10033fff:	push   0x0
10034001:	push   esi
10034002:	lea    eax,[ebp-0x30]
10034005:	call   0x1000ca96
1003400a:	mov    BYTE PTR [ebp-0x4],0x2
1003400e:	mov    ecx,DWORD PTR [ebp-0x1c]
10034011:	lea    esi,[ecx-0x4]
10034014:	cmp    esi,ecx
10034016:	jbe    0x10034020
10034018:	call   0x100435f0
1003401d:	mov    ecx,DWORD PTR [ebp-0x1c]
10034020:	mov    eax,DWORD PTR [ebp-0x2c]
10034023:	mov    ebx,0x10
10034028:	cmp    DWORD PTR [ebp-0x18],ebx
1003402b:	jae    0x10034030
1003402d:	lea    eax,[ebp-0x2c]
10034030:	movsx  edx,BYTE PTR [eax+esi*1]
10034034:	mov    edi,DWORD PTR [ebp-0x50]
10034037:	mov    al,BYTE PTR [edi+edx*4]
1003403a:	cmp    al,0xf
1003403c:	ja     0x10034354
10034042:	movsx  eax,al
10034045:	lea    esi,[ecx-0x3]
10034048:	cmp    esi,ecx
1003404a:	mov    DWORD PTR [ebp-0x54],eax
1003404d:	jbe    0x10034057
1003404f:	call   0x100435f0
10034054:	mov    ecx,DWORD PTR [ebp-0x1c]
10034057:	cmp    DWORD PTR [ebp-0x18],ebx
1003405a:	mov    eax,DWORD PTR [ebp-0x2c]
1003405d:	jae    0x10034062
1003405f:	lea    eax,[ebp-0x2c]
10034062:	movsx  edx,BYTE PTR [eax+esi*1]
10034066:	mov    al,BYTE PTR [edi+edx*4]
10034069:	cmp    al,0xf
1003406b:	ja     0x10034338
10034071:	lea    esi,[ecx-0x2]
10034074:	cmp    esi,ecx
10034076:	movsx  edi,al
10034079:	jbe    0x10034083
1003407b:	call   0x100435f0
10034080:	mov    ecx,DWORD PTR [ebp-0x1c]
10034083:	cmp    DWORD PTR [ebp-0x18],ebx
10034086:	mov    eax,DWORD PTR [ebp-0x2c]
10034089:	jae    0x1003408e
1003408b:	lea    eax,[ebp-0x2c]
1003408e:	movsx  eax,BYTE PTR [eax+esi*1]
10034092:	mov    edx,DWORD PTR [ebp-0x50]
10034095:	mov    al,BYTE PTR [edx+eax*4]
10034098:	cmp    al,0xf
1003409a:	ja     0x1003431c
100340a0:	lea    esi,[ecx-0x1]
100340a3:	cmp    esi,ecx
100340a5:	movsx  ebx,al
100340a8:	jbe    0x100340b2
100340aa:	call   0x100435f0
100340af:	mov    ecx,DWORD PTR [ebp-0x1c]
100340b2:	cmp    DWORD PTR [ebp-0x18],0x10
100340b6:	mov    eax,DWORD PTR [ebp-0x2c]
100340b9:	jae    0x100340be
100340bb:	lea    eax,[ebp-0x2c]
100340be:	movsx  eax,BYTE PTR [eax+esi*1]
100340c2:	mov    edx,DWORD PTR [ebp-0x50]
100340c5:	mov    al,BYTE PTR [edx+eax*4]
100340c8:	cmp    al,0xf
100340ca:	ja     0x10034300
100340d0:	movsx  eax,al
100340d3:	shl    eax,0x4
100340d6:	or     eax,ebx
100340d8:	shl    eax,0x4
100340db:	or     eax,edi
100340dd:	shl    eax,0x4
100340e0:	or     eax,DWORD PTR [ebp-0x54]
100340e3:	lea    ebx,[ecx-0x4]
100340e6:	cmp    ebx,ecx
100340e8:	mov    DWORD PTR [ebp-0x54],eax
100340eb:	ja     0x100340fa
100340ed:	push   0xffffffff
100340ef:	push   ebx
100340f0:	lea    ecx,[ebp-0x30]
100340f3:	call   0x100013b1
100340f8:	jmp    0x10034106
100340fa:	push   0x0
100340fc:	sub    ebx,ecx
100340fe:	lea    esi,[ebp-0x30]
10034101:	call   0x1000d10e
10034106:	mov    eax,DWORD PTR [ebp-0x54]
10034109:	mov    ecx,DWORD PTR [ebp-0x1c]
1003410c:	add    eax,eax
1003410e:	cmp    ecx,eax
10034110:	jae    0x1003417b
10034112:	mov    esi,DWORD PTR [ebp-0x58]
10034115:	xor    edi,edi
10034117:	mov    DWORD PTR [esi+0x18],0xf
1003411e:	mov    DWORD PTR [esi+0x14],edi
10034121:	push   0x1006cd08
10034126:	mov    BYTE PTR [esi+0x4],0x0
1003412a:	call   0x10043250
1003412f:	add    esp,0x4
10034132:	push   eax
10034133:	push   0x1006cd08
10034138:	mov    ecx,esi
1003413a:	call   0x1000133f
1003413f:	mov    ebx,0x10
10034144:	cmp    DWORD PTR [ebp-0x18],ebx
10034147:	jb     0x10034155
10034149:	mov    eax,DWORD PTR [ebp-0x2c]
1003414c:	push   eax
1003414d:	call   0x100430d2
10034152:	add    esp,0x4
10034155:	mov    DWORD PTR [ebp-0x18],0xf
1003415c:	mov    DWORD PTR [ebp-0x1c],edi
1003415f:	cmp    DWORD PTR [ebp-0x34],ebx
10034162:	mov    BYTE PTR [ebp-0x2c],0x0
10034166:	jb     0x10034174
10034168:	mov    ecx,DWORD PTR [ebp-0x48]
1003416b:	push   ecx
1003416c:	call   0x100430d2
10034171:	add    esp,0x4
10034174:	mov    eax,esi
10034176:	jmp    0x10034380
1003417b:	mov    edi,ecx
1003417d:	sub    edi,eax
1003417f:	xor    eax,eax
10034181:	mov    DWORD PTR [ebp-0x5c],eax
10034184:	cmp    eax,DWORD PTR [ebp-0x54]
10034187:	mov    ebx,DWORD PTR [ebp-0x50]
1003418a:	je     0x100342b6
10034190:	lea    esi,[edi+eax*2]
10034193:	cmp    esi,ecx
10034195:	jbe    0x1003419c
10034197:	call   0x100435f0
1003419c:	cmp    DWORD PTR [ebp-0x18],0x10
100341a0:	mov    eax,DWORD PTR [ebp-0x2c]
100341a3:	jae    0x100341a8
100341a5:	lea    eax,[ebp-0x2c]
100341a8:	movsx  edx,BYTE PTR [eax+esi*1]
100341ac:	mov    al,BYTE PTR [ebx+edx*4]
100341af:	cmp    al,0x3f
100341b1:	ja     0x100342a0
100341b7:	movsx  eax,al
100341ba:	add    esi,0x1
100341bd:	cmp    esi,DWORD PTR [ebp-0x1c]
100341c0:	mov    DWORD PTR [ebp-0x60],eax
100341c3:	jbe    0x100341ca
100341c5:	call   0x100435f0
100341ca:	cmp    DWORD PTR [ebp-0x18],0x10
100341ce:	mov    eax,DWORD PTR [ebp-0x2c]
100341d1:	jae    0x100341d6
100341d3:	lea    eax,[ebp-0x2c]
100341d6:	movsx  ecx,BYTE PTR [eax+esi*1]
100341da:	mov    al,BYTE PTR [ebx+ecx*4]
100341dd:	cmp    al,0x3
100341df:	ja     0x10034284
100341e5:	or     edx,0xffffffff
100341e8:	sub    edx,DWORD PTR [ebp-0x38]
100341eb:	movsx  ebx,al
100341ee:	cmp    edx,0x1
100341f1:	ja     0x100341f8
100341f3:	call   0x10057440
100341f8:	mov    esi,DWORD PTR [ebp-0x38]
100341fb:	add    esi,0x1
100341fe:	cmp    esi,0xfffffffe
10034201:	jbe    0x10034208
10034203:	call   0x10057440
10034208:	mov    eax,DWORD PTR [ebp-0x34]
1003420b:	cmp    eax,esi
1003420d:	jae    0x10034260
1003420f:	mov    eax,DWORD PTR [ebp-0x38]
10034212:	push   eax
10034213:	push   esi
10034214:	lea    ecx,[ebp-0x4c]
10034217:	call   0x10001504
1003421c:	test   esi,esi
1003421e:	jbe    0x10034251
10034220:	mov    eax,DWORD PTR [ebp-0x48]
10034223:	shl    bl,0x6
10034226:	add    bl,BYTE PTR [ebp-0x60]
10034229:	mov    ecx,0x10
1003422e:	xor    bl,BYTE PTR [ebp-0x5c]
10034231:	cmp    DWORD PTR [ebp-0x34],ecx
10034234:	jae    0x10034239
10034236:	lea    eax,[ebp-0x48]
10034239:	mov    edx,DWORD PTR [ebp-0x38]
1003423c:	mov    BYTE PTR [eax+edx*1],bl
1003423f:	cmp    DWORD PTR [ebp-0x34],ecx
10034242:	mov    eax,DWORD PTR [ebp-0x48]
10034245:	mov    DWORD PTR [ebp-0x38],esi
10034248:	jae    0x1003424d
1003424a:	lea    eax,[ebp-0x48]
1003424d:	mov    BYTE PTR [eax+esi*1],0x0
10034251:	add    DWORD PTR [ebp-0x5c],0x1
10034255:	mov    eax,DWORD PTR [ebp-0x5c]
10034258:	mov    ecx,DWORD PTR [ebp-0x1c]
1003425b:	jmp    0x10034184
10034260:	test   esi,esi
10034262:	jne    0x1003421e
10034264:	cmp    eax,0x10
10034267:	mov    eax,DWORD PTR [ebp-0x48]
1003426a:	mov    DWORD PTR [ebp-0x38],esi
1003426d:	jae    0x10034272
1003426f:	lea    eax,[ebp-0x48]
10034272:	add    DWORD PTR [ebp-0x5c],0x1
10034276:	mov    BYTE PTR [eax],0x0
10034279:	mov    eax,DWORD PTR [ebp-0x5c]
1003427c:	mov    ecx,DWORD PTR [ebp-0x1c]
1003427f:	jmp    0x10034184
10034284:	lea    ecx,[ebp-0x90]
1003428a:	call   0x10043141
1003428f:	push   0x10074ed8
10034294:	lea    eax,[ebp-0x90]
1003429a:	push   eax
1003429b:	call   0x10047c54
100342a0:	lea    ecx,[ebp-0x6c]
100342a3:	call   0x10043141
100342a8:	push   0x10074ed8
100342ad:	lea    ecx,[ebp-0x6c]
100342b0:	push   ecx
100342b1:	call   0x10047c54
100342b6:	mov    esi,DWORD PTR [ebp-0x58]
100342b9:	push   0xffffffff
100342bb:	push   0x0
100342bd:	lea    edx,[ebp-0x4c]
100342c0:	mov    edi,0xf
100342c5:	mov    DWORD PTR [esi+0x18],edi
100342c8:	mov    DWORD PTR [esi+0x14],0x0
100342cf:	push   edx
100342d0:	mov    ecx,esi
100342d2:	mov    BYTE PTR [esi+0x4],0x0
100342d6:	call   0x10001245
100342db:	mov    ebx,0x10
100342e0:	cmp    DWORD PTR [ebp-0x18],ebx
100342e3:	jb     0x100342f1
100342e5:	mov    eax,DWORD PTR [ebp-0x2c]
100342e8:	push   eax
100342e9:	call   0x100430d2
100342ee:	add    esp,0x4
100342f1:	mov    DWORD PTR [ebp-0x18],edi
100342f4:	mov    DWORD PTR [ebp-0x1c],0x0
100342fb:	jmp    0x1003415f
10034300:	lea    ecx,[ebp-0xa8]
10034306:	call   0x10043141
1003430b:	push   0x10074ed8
10034310:	lea    edx,[ebp-0xa8]
10034316:	push   edx
10034317:	call   0x10047c54
1003431c:	lea    ecx,[ebp-0x84]
10034322:	call   0x10043141
10034327:	push   0x10074ed8
1003432c:	lea    eax,[ebp-0x84]
10034332:	push   eax
10034333:	call   0x10047c54
10034338:	lea    ecx,[ebp-0x9c]
1003433e:	call   0x10043141
10034343:	push   0x10074ed8
10034348:	lea    ecx,[ebp-0x9c]
1003434e:	push   ecx
1003434f:	call   0x10047c54
10034354:	lea    ecx,[ebp-0x78]
10034357:	call   0x10043141
1003435c:	push   0x10074ed8
10034361:	lea    edx,[ebp-0x78]
10034364:	push   edx
10034365:	call   0x10047c54
1003436a:	mov    ecx,DWORD PTR [ebp-0x58]
1003436d:	push   0x1006cd08
10034372:	call   0x100011d1
10034377:	mov    eax,0x1003437d
1003437c:	ret    
1003437d:	mov    eax,DWORD PTR [ebp-0x58]
10034380:	mov    ecx,DWORD PTR [ebp-0xc]
10034383:	mov    DWORD PTR fs:0x0,ecx
1003438a:	pop    ecx
1003438b:	pop    edi
1003438c:	pop    esi
1003438d:	pop    ebx
1003438e:	mov    ecx,DWORD PTR [ebp-0x14]
10034391:	xor    ecx,ebp
10034393:	call   0x100430d7
10034398:	mov    esp,ebp
1003439a:	pop    ebp
1003439b:	ret    
1003439c:	int3   
1003439d:	int3   
1003439e:	int3   
1003439f:	int3   
100343a0:	push   ebp
100343a1:	mov    ebp,esp
100343a3:	and    esp,0xfffffff8
100343a6:	push   0xffffffff
100343a8:	push   0x10062828
100343ad:	mov    eax,fs:0x0
100343b3:	push   eax
100343b4:	sub    esp,0x54
100343b7:	push   esi
100343b8:	push   edi
100343b9:	mov    eax,ds:0x1007e030
100343be:	xor    eax,esp
100343c0:	push   eax
100343c1:	lea    eax,[esp+0x60]
100343c5:	mov    fs:0x0,eax
100343cb:	xor    esi,esi
100343cd:	cmp    DWORD PTR [ebx+0x18],0x10
100343d1:	lea    eax,[ebx+0x4]
100343d4:	mov    DWORD PTR [esp+0x10],esi
100343d8:	mov    DWORD PTR [esp+0x10],eax
100343dc:	jb     0x100343e0
100343de:	mov    eax,DWORD PTR [eax]
100343e0:	push   esi
100343e1:	push   esi
100343e2:	push   0xffffffff
100343e4:	push   eax
100343e5:	push   esi
100343e6:	push   0xfde9
100343eb:	call   DWORD PTR ds:0x1006608c
100343f1:	cmp    eax,esi
100343f3:	jne    0x10034482
100343f9:	call   0x1000205f
100343fe:	push   0x11
10034400:	call   0x10037b70
10034405:	add    esp,0x4
10034408:	mov    edi,0xf
1003440d:	push   0x1006cd08
10034412:	mov    DWORD PTR [esp+0x34],edi
10034416:	mov    DWORD PTR [esp+0x30],esi
1003441a:	mov    BYTE PTR [esp+0x20],0x0
1003441f:	call   0x10043250
10034424:	add    esp,0x4
10034427:	push   eax
10034428:	push   0x1006cd08
1003442d:	lea    ecx,[esp+0x20]
10034431:	call   0x1000133f
10034436:	lea    ecx,[esp+0x34]
1003443a:	mov    DWORD PTR [esp+0x68],esi
1003443e:	call   0x10043141
10034443:	push   0xffffffff
10034445:	mov    BYTE PTR [esp+0x6c],0x1
1003444a:	push   esi
1003444b:	lea    eax,[esp+0x20]
1003444f:	push   eax
10034450:	lea    ecx,[esp+0x4c]
10034454:	mov    DWORD PTR [esp+0x40],0x10073674
1003445c:	mov    DWORD PTR [esp+0x64],edi
10034460:	mov    DWORD PTR [esp+0x60],esi
10034464:	mov    BYTE PTR [esp+0x50],0x0
10034469:	call   0x10001245
1003446e:	push   0x10074e84
10034473:	lea    ecx,[esp+0x38]
10034477:	push   ecx
10034478:	mov    BYTE PTR [esp+0x70],0x0
1003447d:	call   0x10047c54
10034482:	lea    edi,[eax+0x1]
10034485:	xor    ecx,ecx
10034487:	mov    eax,edi
10034489:	mov    edx,0x2
1003448e:	mul    edx
10034490:	seto   cl
10034493:	neg    ecx
10034495:	or     ecx,eax
10034497:	push   ecx
10034498:	call   0x100439b6
1003449d:	mov    esi,eax
1003449f:	add    esp,0x4
100344a2:	mov    DWORD PTR [esp+0x14],esi
100344a6:	mov    eax,DWORD PTR [esp+0x10]
100344aa:	mov    DWORD PTR [esp+0x68],0x2
100344b2:	cmp    DWORD PTR [ebx+0x18],0x10
100344b6:	jb     0x100344ba
100344b8:	mov    eax,DWORD PTR [eax]
100344ba:	push   edi
100344bb:	push   esi
100344bc:	push   0xffffffff
100344be:	push   eax
100344bf:	push   0x0
100344c1:	push   0xfde9
100344c6:	call   DWORD PTR ds:0x1006608c
100344cc:	mov    edi,DWORD PTR [ebp+0x8]
100344cf:	push   esi
100344d0:	mov    WORD PTR [esi+eax*2],0x0
100344d6:	call   0x100024a7
100344db:	push   esi
100344dc:	call   0x100430d2
100344e1:	add    esp,0x4
100344e4:	mov    eax,edi
100344e6:	mov    ecx,DWORD PTR [esp+0x60]
100344ea:	mov    DWORD PTR fs:0x0,ecx
100344f1:	pop    ecx
100344f2:	pop    edi
100344f3:	pop    esi
100344f4:	mov    esp,ebp
100344f6:	pop    ebp
100344f7:	ret    
100344f8:	int3   
100344f9:	int3   
100344fa:	int3   
100344fb:	int3   
100344fc:	int3   
100344fd:	int3   
100344fe:	int3   
100344ff:	int3   
10034500:	mov    eax,ds:0x10080a74
10034505:	mov    edx,DWORD PTR [eax+0xc]
10034508:	mov    ecx,0x10080a74
1003450d:	call   edx
1003450f:	add    eax,0x10
10034512:	mov    DWORD PTR [esi],eax
10034514:	mov    eax,esi
10034516:	ret    
10034517:	int3   
10034518:	int3   
10034519:	int3   
1003451a:	int3   
1003451b:	int3   
1003451c:	int3   
1003451d:	int3   
1003451e:	int3   
1003451f:	int3   
10034520:	test   ebx,ebx
10034522:	jne    0x10034532
10034524:	test   esi,esi
10034526:	je     0x10034532
10034528:	push   0x80070057
1003452d:	call   0x10001f24
10034532:	mov    eax,ds:0x10080a74
10034537:	mov    edx,DWORD PTR [eax]
10034539:	push   0x1
1003453b:	push   esi
1003453c:	mov    ecx,0x10080a74
10034541:	call   edx
10034543:	test   eax,eax
10034545:	jne    0x1003454c
10034547:	jmp    0x100348e0
1003454c:	add    eax,0x10
1003454f:	test   esi,esi
10034551:	mov    DWORD PTR [edi],eax
10034553:	jl     0x10034528
10034555:	cmp    esi,DWORD PTR [eax-0x8]
10034558:	jg     0x10034528
1003455a:	mov    DWORD PTR [eax-0xc],esi
1003455d:	mov    eax,DWORD PTR [edi]
1003455f:	push   esi
10034560:	push   ebx
10034561:	mov    BYTE PTR [esi+eax*1],0x0
10034565:	mov    ecx,DWORD PTR [edi]
10034567:	push   esi
10034568:	push   ecx
10034569:	call   0x10043605
1003456e:	add    esp,0x10
10034571:	mov    eax,edi
10034573:	ret    
10034574:	int3   
10034575:	int3   
10034576:	int3   
10034577:	int3   
10034578:	int3   
10034579:	int3   
1003457a:	int3   
1003457b:	int3   
1003457c:	int3   
1003457d:	int3   
1003457e:	int3   
1003457f:	int3   
10034580:	mov    eax,DWORD PTR [eax]
10034582:	sub    eax,0x10
10034585:	lea    ecx,[eax+0xc]
10034588:	or     edx,0xffffffff
1003458b:	lock xadd DWORD PTR [ecx],edx
1003458f:	dec    edx
10034590:	test   edx,edx
10034592:	jg     0x1003459e
10034594:	mov    ecx,DWORD PTR [eax]
10034596:	mov    edx,DWORD PTR [ecx]
10034598:	push   eax
10034599:	mov    eax,DWORD PTR [edx+0x4]
1003459c:	call   eax
1003459e:	ret    
1003459f:	int3   
100345a0:	test   edx,edx
100345a2:	jne    0x100345b5
100345a4:	xor    eax,eax
100345a6:	push   edi
100345a7:	mov    edi,eax
100345a9:	push   edx
100345aa:	mov    eax,ebx
100345ac:	call   0x10034850
100345b1:	mov    eax,ebx
100345b3:	pop    edi
100345b4:	ret    
100345b5:	mov    eax,edx
100345b7:	push   esi
100345b8:	lea    esi,[eax+0x1]
100345bb:	jmp    0x100345c0
100345bd:	lea    ecx,[ecx+0x0]
100345c0:	mov    cl,BYTE PTR [eax]
100345c2:	add    eax,0x1
100345c5:	test   cl,cl
100345c7:	jne    0x100345c0
100345c9:	sub    eax,esi
100345cb:	pop    esi
100345cc:	push   edi
100345cd:	mov    edi,eax
100345cf:	push   edx
100345d0:	mov    eax,ebx
100345d2:	call   0x10034850
100345d7:	mov    eax,ebx
100345d9:	pop    edi
100345da:	ret    
100345db:	int3   
100345dc:	int3   
100345dd:	int3   
100345de:	int3   
100345df:	int3   
100345e0:	mov    eax,DWORD PTR [edi]
100345e2:	mov    edx,DWORD PTR [eax-0x8]
100345e5:	push   ebx
100345e6:	mov    ebx,DWORD PTR [eax-0xc]
100345e9:	push   esi
100345ea:	mov    ecx,0x1
100345ef:	sub    ecx,DWORD PTR [eax-0x4]
100345f2:	lea    esi,[ebx+0x1]
100345f5:	sub    edx,esi
100345f7:	or     ecx,edx
100345f9:	jge    0x10034604
100345fb:	mov    ecx,esi
100345fd:	mov    eax,edi
100345ff:	call   0x100348f0
10034604:	test   esi,esi
10034606:	mov    eax,DWORD PTR [edi]
10034608:	mov    cl,BYTE PTR [esp+0xc]
1003460c:	mov    BYTE PTR [ebx+eax*1],cl
1003460f:	jl     0x10034628
10034611:	mov    eax,DWORD PTR [edi]
10034613:	cmp    esi,DWORD PTR [eax-0x8]
10034616:	jg     0x10034628
10034618:	mov    DWORD PTR [eax-0xc],esi
1003461b:	mov    edx,DWORD PTR [edi]
1003461d:	mov    BYTE PTR [esi+edx*1],0x0
10034621:	pop    esi
10034622:	mov    eax,edi
10034624:	pop    ebx
10034625:	ret    0x4
10034628:	push   0x80070057
1003462d:	call   0x10001f24
10034632:	int3   
10034633:	int3   
10034634:	int3   
10034635:	int3   
10034636:	int3   
10034637:	int3   
10034638:	int3   
10034639:	int3   
1003463a:	int3   
1003463b:	int3   
1003463c:	int3   
1003463d:	int3   
1003463e:	int3   
1003463f:	int3   
10034640:	mov    eax,DWORD PTR [edi]
10034642:	mov    edx,DWORD PTR [eax-0x8]
10034645:	push   esi
10034646:	mov    esi,DWORD PTR [eax-0xc]
10034649:	mov    ecx,0x1
1003464e:	sub    ecx,DWORD PTR [eax-0x4]
10034651:	sub    edx,esi
10034653:	or     ecx,edx
10034655:	jge    0x10034660
10034657:	mov    ecx,esi
10034659:	mov    eax,edi
1003465b:	call   0x100348f0
10034660:	mov    ecx,DWORD PTR [edi]
10034662:	lea    eax,[esi+0x1]
10034665:	call   0x1002f3d0
1003466a:	test   esi,esi
1003466c:	jl     0x10034682
1003466e:	mov    eax,DWORD PTR [edi]
10034670:	cmp    esi,DWORD PTR [eax-0x8]
10034673:	jg     0x10034682
10034675:	mov    DWORD PTR [eax-0xc],esi
10034678:	mov    eax,DWORD PTR [edi]
1003467a:	mov    BYTE PTR [esi+eax*1],0x0
1003467e:	mov    eax,edi
10034680:	pop    esi
10034681:	ret    
10034682:	push   0x80070057
10034687:	call   0x10001f24
1003468c:	int3   
1003468d:	int3   
1003468e:	int3   
1003468f:	int3   
10034690:	test   ecx,ecx
10034692:	jne    0x1003469e
10034694:	push   0x80004005
10034699:	call   0x10001f24
1003469e:	mov    eax,DWORD PTR [esp+0x4]
100346a2:	mov    eax,DWORD PTR [eax]
100346a4:	push   ecx
100346a5:	push   eax
100346a6:	call   0x100591bc
100346ab:	add    esp,0x8
100346ae:	neg    eax
100346b0:	sbb    eax,eax
100346b2:	add    eax,0x1
100346b5:	ret    
100346b6:	int3   
100346b7:	int3   
100346b8:	int3   
100346b9:	int3   
100346ba:	int3   
100346bb:	int3   
100346bc:	int3   
100346bd:	int3   
100346be:	int3   
100346bf:	int3   
100346c0:	test   ecx,ecx
100346c2:	jne    0x100346ce
100346c4:	push   0x80004005
100346c9:	call   0x10001f24
100346ce:	mov    eax,DWORD PTR [esp+0x4]
100346d2:	mov    eax,DWORD PTR [eax]
100346d4:	push   ecx
100346d5:	push   eax
100346d6:	call   0x100591bc
100346db:	add    esp,0x8
100346de:	neg    eax
100346e0:	sbb    eax,eax
100346e2:	neg    eax
100346e4:	ret    
100346e5:	int3   
100346e6:	int3   
100346e7:	int3   
100346e8:	int3   
100346e9:	int3   
100346ea:	int3   
100346eb:	int3   
100346ec:	int3   
100346ed:	int3   
100346ee:	int3   
100346ef:	int3   
100346f0:	mov    eax,DWORD PTR [esi]
100346f2:	test   eax,eax
100346f4:	je     0x100346fd
100346f6:	push   eax
100346f7:	call   DWORD PTR ds:0x10066380
100346fd:	mov    DWORD PTR [esi],0x0
10034703:	ret    
10034704:	int3   
10034705:	int3   
10034706:	int3   
10034707:	int3   
10034708:	int3   
10034709:	int3   
1003470a:	int3   
1003470b:	int3   
1003470c:	int3   
1003470d:	int3   
1003470e:	int3   
1003470f:	int3   
10034710:	mov    ecx,DWORD PTR [eax]
10034712:	push   esi
10034713:	mov    esi,DWORD PTR [ebx]
10034715:	lea    eax,[ecx-0x10]
10034718:	sub    esi,0x10
1003471b:	cmp    eax,esi
1003471d:	je     0x10034768
1003471f:	cmp    DWORD PTR [esi+0xc],0x0
10034723:	push   edi
10034724:	lea    edi,[esi+0xc]
10034727:	jl     0x10034758
10034729:	mov    edx,DWORD PTR [eax]
1003472b:	cmp    edx,DWORD PTR [esi]
1003472d:	jne    0x10034758
1003472f:	push   ebp
10034730:	call   0x10034940
10034735:	mov    ebp,eax
10034737:	or     eax,0xffffffff
1003473a:	lock xadd DWORD PTR [edi],eax
1003473e:	dec    eax
1003473f:	test   eax,eax
10034741:	jg     0x1003474d
10034743:	mov    ecx,DWORD PTR [esi]
10034745:	mov    edx,DWORD PTR [ecx]
10034747:	mov    eax,DWORD PTR [edx+0x4]
1003474a:	push   esi
1003474b:	call   eax
1003474d:	add    ebp,0x10
10034750:	mov    DWORD PTR [ebx],ebp
10034752:	pop    ebp
10034753:	pop    edi
10034754:	mov    eax,ebx
10034756:	pop    esi
10034757:	ret    
10034758:	mov    edi,DWORD PTR [ecx-0xc]
1003475b:	push   ecx
1003475c:	mov    eax,ebx
1003475e:	call   0x10034850
10034763:	pop    edi
10034764:	mov    eax,ebx
10034766:	pop    esi
10034767:	ret    
10034768:	mov    eax,ebx
1003476a:	pop    esi
1003476b:	ret    
1003476c:	int3   
1003476d:	int3   
1003476e:	int3   
1003476f:	int3   
10034770:	mov    eax,DWORD PTR [esp+0x4]
10034774:	push   ebx
10034775:	push   ebp
10034776:	mov    ebp,DWORD PTR [esp+0x10]
1003477a:	push   esi
1003477b:	mov    esi,DWORD PTR [eax]
1003477d:	mov    ecx,DWORD PTR [esi-0x10]
10034780:	mov    edx,DWORD PTR [ecx]
10034782:	mov    eax,DWORD PTR [edx+0x10]
10034785:	mov    ebx,DWORD PTR [esi-0xc]
10034788:	sub    esi,0x10
1003478b:	push   edi
1003478c:	call   eax
1003478e:	mov    edx,DWORD PTR [eax]
10034790:	push   0x1
10034792:	mov    ecx,eax
10034794:	mov    eax,DWORD PTR [edx]
10034796:	push   ebp
10034797:	call   eax
10034799:	mov    edi,eax
1003479b:	test   edi,edi
1003479d:	jne    0x100347a4
1003479f:	call   0x100348e0
100347a4:	cmp    ebx,ebp
100347a6:	jge    0x100347aa
100347a8:	mov    ebp,ebx
100347aa:	lea    eax,[ebp+0x1]
100347ad:	push   eax
100347ae:	lea    ecx,[esi+0x10]
100347b1:	push   ecx
100347b2:	push   eax
100347b3:	lea    ebp,[edi+0x10]
100347b6:	push   ebp
100347b7:	call   0x10043605
100347bc:	add    esp,0x10
100347bf:	mov    DWORD PTR [edi+0x4],ebx
100347c2:	lea    edx,[esi+0xc]
100347c5:	or     eax,0xffffffff
100347c8:	lock xadd DWORD PTR [edx],eax
100347cc:	dec    eax
100347cd:	test   eax,eax
100347cf:	jg     0x100347db
100347d1:	mov    ecx,DWORD PTR [esi]
100347d3:	mov    edx,DWORD PTR [ecx]
100347d5:	mov    eax,DWORD PTR [edx+0x4]
100347d8:	push   esi
100347d9:	call   eax
100347db:	mov    ecx,DWORD PTR [esp+0x14]
100347df:	pop    edi
100347e0:	pop    esi
100347e1:	mov    DWORD PTR [ecx],ebp
100347e3:	pop    ebp
100347e4:	pop    ebx
100347e5:	ret    0x8
100347e8:	int3   
100347e9:	int3   
100347ea:	int3   
100347eb:	int3   
100347ec:	int3   
100347ed:	int3   
100347ee:	int3   
100347ef:	int3   
100347f0:	mov    eax,DWORD PTR [edi]
100347f2:	mov    edx,DWORD PTR [eax-0x8]
100347f5:	push   ebx
100347f6:	mov    ebx,DWORD PTR [eax-0xc]
100347f9:	push   esi
100347fa:	mov    ecx,0x1
100347ff:	sub    ecx,DWORD PTR [eax-0x4]
10034802:	lea    esi,[ebx+0x1]
10034805:	sub    edx,esi
10034807:	or     ecx,edx
10034809:	jge    0x10034814
1003480b:	mov    eax,esi
1003480d:	mov    ecx,edi
1003480f:	call   0x1000224a
10034814:	test   esi,esi
10034816:	mov    eax,DWORD PTR [edi]
10034818:	mov    WORD PTR [eax+ebx*2],0x5c
1003481e:	jl     0x10034837
10034820:	mov    eax,DWORD PTR [edi]
10034822:	cmp    esi,DWORD PTR [eax-0x8]
10034825:	jg     0x10034837
10034827:	mov    DWORD PTR [eax-0xc],esi
1003482a:	mov    ecx,DWORD PTR [edi]
1003482c:	mov    WORD PTR [ecx+esi*2],0x0
10034832:	pop    esi
10034833:	mov    eax,edi
10034835:	pop    ebx
10034836:	ret    
10034837:	push   0x80070057
1003483c:	call   0x10001f24
10034841:	int3   
10034842:	int3   
10034843:	int3   
10034844:	int3   
10034845:	int3   
10034846:	int3   
10034847:	int3   
10034848:	int3   
10034849:	int3   
1003484a:	int3   
1003484b:	int3   
1003484c:	int3   
1003484d:	int3   
1003484e:	int3   
1003484f:	int3   
10034850:	test   edi,edi
10034852:	push   esi
10034853:	mov    esi,eax
10034855:	jne    0x10034860
10034857:	call   0x10034a40
1003485c:	pop    esi
1003485d:	ret    0x4
10034860:	mov    ecx,DWORD PTR [esp+0x8]
10034864:	test   ecx,ecx
10034866:	jne    0x10034872
10034868:	push   0x80070057
1003486d:	call   0x10001f24
10034872:	mov    eax,DWORD PTR [esi]
10034874:	push   ebx
10034875:	mov    ebx,ecx
10034877:	sub    ebx,eax
10034879:	mov    edx,0x1
1003487e:	sub    edx,DWORD PTR [eax-0x4]
10034881:	push   ebp
10034882:	mov    ebp,DWORD PTR [eax-0xc]
10034885:	mov    eax,DWORD PTR [eax-0x8]
10034888:	sub    eax,edi
1003488a:	or     edx,eax
1003488c:	jge    0x1003489b
1003488e:	mov    ecx,edi
10034890:	mov    eax,esi
10034892:	call   0x100348f0
10034897:	mov    ecx,DWORD PTR [esp+0x10]
1003489b:	cmp    ebx,ebp
1003489d:	mov    eax,DWORD PTR [esi]
1003489f:	push   edi
100348a0:	ja     0x100348af
100348a2:	lea    ecx,[eax+ebx*1]
100348a5:	push   ecx
100348a6:	push   edi
100348a7:	push   eax
100348a8:	call   0x100430e6
100348ad:	jmp    0x100348b7
100348af:	push   ecx
100348b0:	push   edi
100348b1:	push   eax
100348b2:	call   0x10043605
100348b7:	add    esp,0x10
100348ba:	test   edi,edi
100348bc:	pop    ebp
100348bd:	pop    ebx
100348be:	jl     0x10034868
100348c0:	mov    eax,DWORD PTR [esi]
100348c2:	cmp    edi,DWORD PTR [eax-0x8]
100348c5:	jg     0x10034868
100348c7:	mov    DWORD PTR [eax-0xc],edi
100348ca:	mov    edx,DWORD PTR [esi]
100348cc:	mov    BYTE PTR [edi+edx*1],0x0
100348d0:	pop    esi
100348d1:	ret    0x4
100348d4:	int3   
100348d5:	int3   
100348d6:	int3   
100348d7:	int3   
100348d8:	int3   
100348d9:	int3   
100348da:	int3   
100348db:	int3   
100348dc:	int3   
100348dd:	int3   
100348de:	int3   
100348df:	int3   
100348e0:	push   0x8007000e
100348e5:	call   0x10001f24
100348ea:	int3   
100348eb:	int3   
100348ec:	int3   
100348ed:	int3   
100348ee:	int3   
100348ef:	int3   
100348f0:	push   esi
100348f1:	mov    esi,eax
100348f3:	mov    eax,DWORD PTR [esi]
100348f5:	mov    edx,DWORD PTR [eax-0xc]
100348f8:	sub    eax,0x10
100348fb:	cmp    edx,ecx
100348fd:	jle    0x10034901
100348ff:	mov    ecx,edx
10034901:	cmp    DWORD PTR [eax+0xc],0x1
10034905:	jle    0x10034910
10034907:	push   ecx
10034908:	push   esi
10034909:	call   0x10034770
1003490e:	pop    esi
1003490f:	ret    
10034910:	mov    eax,DWORD PTR [eax+0x8]
10034913:	cmp    eax,ecx
10034915:	jge    0x10034936
10034917:	mov    edx,eax
10034919:	cmp    edx,0x400
1003491f:	jle    0x10034929
10034921:	add    edx,0x400
10034927:	jmp    0x1003492b
10034929:	add    edx,edx
1003492b:	cmp    edx,ecx
1003492d:	jge    0x10034931
1003492f:	mov    edx,ecx
10034931:	call   0x10034aa0
10034936:	pop    esi
10034937:	ret    
10034938:	int3   
10034939:	int3   
1003493a:	int3   
1003493b:	int3   
1003493c:	int3   
1003493d:	int3   
1003493e:	int3   
1003493f:	int3   
10034940:	push   esi
10034941:	mov    esi,eax
10034943:	mov    ecx,DWORD PTR [esi]
10034945:	mov    eax,DWORD PTR [ecx]
10034947:	mov    edx,DWORD PTR [eax+0x10]
1003494a:	push   edi
1003494b:	call   edx
1003494d:	cmp    DWORD PTR [esi+0xc],0x0
10034951:	lea    ecx,[esi+0xc]
10034954:	jl     0x1003496a
10034956:	cmp    eax,DWORD PTR [esi]
10034958:	jne    0x1003496a
1003495a:	mov    edi,esi
1003495c:	mov    eax,0x1
10034961:	lock xadd DWORD PTR [ecx],eax
10034965:	mov    eax,edi
10034967:	pop    edi
10034968:	pop    esi
10034969:	ret    
1003496a:	mov    ecx,DWORD PTR [esi+0x4]
1003496d:	mov    edx,DWORD PTR [eax]
1003496f:	mov    edx,DWORD PTR [edx]
10034971:	push   0x1
10034973:	push   ecx
10034974:	mov    ecx,eax
10034976:	call   edx
10034978:	mov    edi,eax
1003497a:	test   edi,edi
1003497c:	jne    0x10034983
1003497e:	jmp    0x100348e0
10034983:	mov    eax,DWORD PTR [esi+0x4]
10034986:	mov    DWORD PTR [edi+0x4],eax
10034989:	mov    eax,DWORD PTR [esi+0x4]
1003498c:	add    eax,0x1
1003498f:	push   eax
10034990:	add    esi,0x10
10034993:	push   esi
10034994:	push   eax
10034995:	lea    ecx,[edi+0x10]
10034998:	push   ecx
10034999:	call   0x10043605
1003499e:	add    esp,0x10
100349a1:	mov    eax,edi
100349a3:	pop    edi
100349a4:	pop    esi
100349a5:	ret    
100349a6:	int3   
100349a7:	int3   
100349a8:	int3   
100349a9:	int3   
100349aa:	int3   
100349ab:	int3   
100349ac:	int3   
100349ad:	int3   
100349ae:	int3   
100349af:	int3   
100349b0:	mov    ecx,DWORD PTR [esp+0xc]
100349b4:	push   ebx
100349b5:	push   ebp
100349b6:	mov    ebp,DWORD PTR [esp+0xc]
100349ba:	mov    eax,DWORD PTR [ebp+0x0]
100349bd:	mov    ebx,DWORD PTR [eax-0xc]
100349c0:	push   esi
100349c1:	push   edi
100349c2:	mov    edi,DWORD PTR [esp+0x18]
100349c6:	sub    edi,eax
100349c8:	mov    edx,0x1
100349cd:	sub    edx,DWORD PTR [eax-0x4]
100349d0:	mov    eax,DWORD PTR [eax-0x8]
100349d3:	lea    esi,[ebx+ecx*1]
100349d6:	sub    eax,esi
100349d8:	or     edx,eax
100349da:	jge    0x100349e9
100349dc:	mov    ecx,esi
100349de:	mov    eax,ebp
100349e0:	call   0x100348f0
100349e5:	mov    ecx,DWORD PTR [esp+0x1c]
100349e9:	cmp    edi,ebx
100349eb:	mov    eax,DWORD PTR [ebp+0x0]
100349ee:	ja     0x100349f7
100349f0:	lea    edx,[eax+edi*1]
100349f3:	mov    DWORD PTR [esp+0x18],edx
100349f7:	mov    edx,DWORD PTR [esp+0x18]
100349fb:	push   ecx
100349fc:	push   edx
100349fd:	push   ecx
100349fe:	add    eax,ebx
10034a00:	push   eax
10034a01:	call   0x10043605
10034a06:	add    esp,0x10
10034a09:	test   esi,esi
10034a0b:	jl     0x10034a26
10034a0d:	mov    eax,DWORD PTR [ebp+0x0]
10034a10:	cmp    esi,DWORD PTR [eax-0x8]
10034a13:	jg     0x10034a26
10034a15:	mov    DWORD PTR [eax-0xc],esi
10034a18:	mov    eax,DWORD PTR [ebp+0x0]
10034a1b:	pop    edi
10034a1c:	mov    BYTE PTR [esi+eax*1],0x0
10034a20:	pop    esi
10034a21:	pop    ebp
10034a22:	pop    ebx
10034a23:	ret    0xc
10034a26:	push   0x80070057
10034a2b:	call   0x10001f24
10034a30:	int3   
10034a31:	int3   
10034a32:	int3   
10034a33:	int3   
10034a34:	int3   
10034a35:	int3   
10034a36:	int3   
10034a37:	int3   
10034a38:	int3   
10034a39:	int3   
10034a3a:	int3   
10034a3b:	int3   
10034a3c:	int3   
10034a3d:	int3   
10034a3e:	int3   
10034a3f:	int3   
10034a40:	mov    ecx,DWORD PTR [esi]
10034a42:	cmp    DWORD PTR [ecx-0xc],0x0
10034a46:	lea    eax,[ecx-0x10]
10034a49:	push   edi
10034a4a:	mov    edi,DWORD PTR [eax]
10034a4c:	je     0x10034a99
10034a4e:	cmp    DWORD PTR [eax+0xc],0x0
10034a52:	lea    edx,[eax+0xc]
10034a55:	jge    0x10034a75
10034a57:	cmp    DWORD PTR [ecx-0x8],0x0
10034a5b:	jge    0x10034a67
10034a5d:	push   0x80070057
10034a62:	call   0x10001f24
10034a67:	mov    DWORD PTR [ecx-0xc],0x0
10034a6e:	mov    eax,DWORD PTR [esi]
10034a70:	mov    BYTE PTR [eax],0x0
10034a73:	pop    edi
10034a74:	ret    
10034a75:	or     ecx,0xffffffff
10034a78:	lock xadd DWORD PTR [edx],ecx
10034a7c:	dec    ecx
10034a7d:	test   ecx,ecx
10034a7f:	jg     0x10034a8b
10034a81:	mov    ecx,DWORD PTR [eax]
10034a83:	mov    edx,DWORD PTR [ecx]
10034a85:	push   eax
10034a86:	mov    eax,DWORD PTR [edx+0x4]
10034a89:	call   eax
10034a8b:	mov    edx,DWORD PTR [edi]
10034a8d:	mov    eax,DWORD PTR [edx+0xc]
10034a90:	mov    ecx,edi
10034a92:	call   eax
10034a94:	add    eax,0x10
10034a97:	mov    DWORD PTR [esi],eax
10034a99:	pop    edi
10034a9a:	ret    
10034a9b:	int3   
10034a9c:	int3   
10034a9d:	int3   
10034a9e:	int3   
10034a9f:	int3   
10034aa0:	mov    eax,DWORD PTR [esi]
10034aa2:	mov    ecx,DWORD PTR [eax-0x10]
10034aa5:	sub    eax,0x10
10034aa8:	cmp    DWORD PTR [eax+0x8],edx
10034aab:	jge    0x10034ac2
10034aad:	test   edx,edx
10034aaf:	jle    0x10034ac2
10034ab1:	push   edi
10034ab2:	mov    edi,DWORD PTR [ecx]
10034ab4:	push   0x1
10034ab6:	push   edx
10034ab7:	push   eax
10034ab8:	mov    eax,DWORD PTR [edi+0x8]
10034abb:	call   eax
10034abd:	test   eax,eax
10034abf:	pop    edi
10034ac0:	jne    0x10034ac7
10034ac2:	jmp    0x100348e0
10034ac7:	add    eax,0x10
10034aca:	mov    DWORD PTR [esi],eax
10034acc:	ret    
10034acd:	int3   
10034ace:	int3   
10034acf:	int3   
10034ad0:	push   0xffffffff
10034ad2:	push   0x100600b8
10034ad7:	mov    eax,fs:0x0
10034add:	push   eax
10034ade:	sub    esp,0x20
10034ae1:	push   ebx
10034ae2:	push   esi
10034ae3:	mov    eax,ds:0x1007e030
10034ae8:	xor    eax,esp
10034aea:	push   eax
10034aeb:	lea    eax,[esp+0x2c]
10034aef:	mov    fs:0x0,eax
10034af5:	mov    eax,DWORD PTR [esp+0x3c]
10034af9:	xor    ebx,ebx
10034afb:	push   0xffffffff
10034afd:	push   ebx
10034afe:	push   eax
10034aff:	lea    ecx,[esp+0x1c]
10034b03:	mov    DWORD PTR [esp+0x18],ebx
10034b07:	mov    DWORD PTR [esp+0x34],0xf
10034b0f:	mov    DWORD PTR [esp+0x30],ebx
10034b13:	mov    BYTE PTR [esp+0x20],bl
10034b17:	call   0x10001245
10034b1c:	or     ecx,0xffffffff
10034b1f:	mov    DWORD PTR [esp+0x34],ebx
10034b23:	sub    ecx,DWORD PTR [esp+0x24]
10034b27:	cmp    ecx,0x1
10034b2a:	ja     0x10034b31
10034b2c:	call   0x10057440
10034b31:	mov    esi,DWORD PTR [esp+0x24]
10034b35:	add    esi,0x1
10034b38:	cmp    esi,0xfffffffe
10034b3b:	jbe    0x10034b42
10034b3d:	call   0x10057440
10034b42:	mov    eax,DWORD PTR [esp+0x28]
10034b46:	cmp    eax,esi
10034b48:	jae    0x10034bd4
10034b4e:	mov    edx,DWORD PTR [esp+0x24]
10034b52:	push   edx
10034b53:	push   esi
10034b54:	lea    ecx,[esp+0x18]
10034b58:	call   0x10001504
10034b5d:	mov    eax,DWORD PTR [esp+0x28]
10034b61:	cmp    esi,ebx
10034b63:	jbe    0x10034b90
10034b65:	cmp    eax,0x10
10034b68:	mov    eax,DWORD PTR [esp+0x14]
10034b6c:	jae    0x10034b72
10034b6e:	lea    eax,[esp+0x14]
10034b72:	mov    ecx,DWORD PTR [esp+0x24]
10034b76:	mov    BYTE PTR [eax+ecx*1],0x26
10034b7a:	cmp    DWORD PTR [esp+0x28],0x10
10034b7f:	mov    eax,DWORD PTR [esp+0x14]
10034b83:	mov    DWORD PTR [esp+0x24],esi
10034b87:	jae    0x10034b8d
10034b89:	lea    eax,[esp+0x14]
10034b8d:	mov    BYTE PTR [eax+esi*1],bl
10034b90:	push   0xffffffff
10034b92:	push   ebx
10034b93:	lea    edx,[esp+0x18]
10034b97:	mov    DWORD PTR [edi+0x18],0xf
10034b9e:	mov    DWORD PTR [edi+0x14],ebx
10034ba1:	push   edx
10034ba2:	mov    ecx,edi
10034ba4:	mov    BYTE PTR [edi+0x4],bl
10034ba7:	call   0x10001245
10034bac:	cmp    DWORD PTR [esp+0x28],0x10
10034bb1:	jb     0x10034bc0
10034bb3:	mov    eax,DWORD PTR [esp+0x14]
10034bb7:	push   eax
10034bb8:	call   0x100430d2
10034bbd:	add    esp,0x4
10034bc0:	mov    eax,edi
10034bc2:	mov    ecx,DWORD PTR [esp+0x2c]
10034bc6:	mov    DWORD PTR fs:0x0,ecx
10034bcd:	pop    ecx
10034bce:	pop    esi
10034bcf:	pop    ebx
10034bd0:	add    esp,0x2c
10034bd3:	ret    
10034bd4:	cmp    esi,ebx
10034bd6:	jne    0x10034b63
10034bd8:	cmp    eax,0x10
10034bdb:	mov    eax,DWORD PTR [esp+0x14]
10034bdf:	mov    DWORD PTR [esp+0x24],ebx
10034be3:	jae    0x10034be9
10034be5:	lea    eax,[esp+0x14]
10034be9:	mov    BYTE PTR [eax],bl
10034beb:	jmp    0x10034b90
10034bed:	int3   
10034bee:	int3   
10034bef:	int3   
10034bf0:	push   ebp
10034bf1:	mov    ebp,esp
10034bf3:	and    esp,0xfffffff8
10034bf6:	push   0xffffffff
10034bf8:	push   0x100619b6
10034bfd:	mov    eax,fs:0x0
10034c03:	push   eax
10034c04:	sub    esp,0x898
10034c0a:	mov    eax,ds:0x1007e030
10034c0f:	xor    eax,esp
10034c11:	mov    DWORD PTR [esp+0x890],eax
10034c18:	push   ebx
10034c19:	push   esi
10034c1a:	push   edi
10034c1b:	mov    eax,ds:0x1007e030
10034c20:	xor    eax,esp
10034c22:	push   eax
10034c23:	lea    eax,[esp+0x8a8]
10034c2a:	mov    fs:0x0,eax
10034c30:	mov    eax,DWORD PTR [ebp+0x8]
10034c33:	mov    DWORD PTR [esp+0x10],eax
10034c37:	call   DWORD PTR ds:0x10066264
10034c3d:	and    eax,0xff
10034c42:	cmp    eax,0x5
10034c45:	jb     0x10034c77
10034c47:	push   0x1007367c
10034c4c:	push   0xb
10034c4e:	push   0x100736b8
10034c53:	call   0x100044a2
10034c58:	add    esp,0xc
10034c5b:	lea    edx,[esp+0x94]
10034c62:	xor    ebx,ebx
10034c64:	movzx  ecx,WORD PTR [eax]
10034c67:	mov    WORD PTR [edx],cx
10034c6a:	add    eax,0x2
10034c6d:	add    edx,0x2
10034c70:	cmp    cx,bx
10034c73:	jne    0x10034c64
10034c75:	jmp    0x10034ca5
10034c77:	push   0x100736d0
10034c7c:	push   0x4
10034c7e:	push   0x10073708
10034c83:	call   0x100044a2
10034c88:	add    esp,0xc
10034c8b:	lea    edx,[esp+0x94]
10034c92:	xor    ebx,ebx
10034c94:	movzx  ecx,WORD PTR [eax]
10034c97:	mov    WORD PTR [edx],cx
10034c9a:	add    eax,0x2
10034c9d:	add    edx,0x2
10034ca0:	cmp    cx,bx
10034ca3:	jne    0x10034c94
10034ca5:	lea    eax,[esp+0x94]
10034cac:	add    eax,0xfffffffe
10034caf:	nop
10034cb0:	mov    cx,WORD PTR [eax+0x2]
10034cb4:	add    eax,0x2
10034cb7:	cmp    cx,bx
10034cba:	jne    0x10034cb0
10034cbc:	mov    ecx,DWORD PTR ds:0x10073714
10034cc2:	mov    edx,DWORD PTR ds:0x10073718
10034cc8:	mov    esi,DWORD PTR ds:0x10066140
10034cce:	mov    DWORD PTR [eax],ecx
10034cd0:	mov    ecx,DWORD PTR ds:0x1007371c
10034cd6:	mov    DWORD PTR [eax+0x4],edx
10034cd9:	mov    edx,DWORD PTR ds:0x10073720
10034cdf:	mov    DWORD PTR [eax+0x8],ecx
10034ce2:	mov    DWORD PTR [eax+0xc],edx
10034ce5:	lea    eax,[esp+0x3c]
10034ce9:	push   eax
10034cea:	call   esi
10034cec:	mov    edi,DWORD PTR ds:0x10066104
10034cf2:	lea    ecx,[esp+0x14]
10034cf6:	push   ecx
10034cf7:	lea    edx,[esp+0x40]
10034cfb:	push   edx
10034cfc:	call   edi
10034cfe:	push   ebx
10034cff:	push   0x80
10034d04:	push   0x3
10034d06:	push   ebx
10034d07:	push   ebx
10034d08:	push   0xc0000000
10034d0d:	lea    eax,[esp+0xac]
10034d14:	push   eax
10034d15:	call   DWORD PTR ds:0x100660c0
10034d1b:	cmp    eax,0xffffffff
10034d1e:	jne    0x10034ded
10034d24:	cmp    BYTE PTR [ebp+0xc],bl
10034d27:	je     0x10034e1b
10034d2d:	call   DWORD PTR ds:0x100660cc
10034d33:	cmp    eax,0x20
10034d36:	jne    0x10034e1b
10034d3c:	lea    ecx,[esp+0x50]
10034d40:	push   ecx
10034d41:	call   esi
10034d43:	lea    edx,[esp+0x24]
10034d47:	push   edx
10034d48:	lea    eax,[esp+0x54]
10034d4c:	push   eax
10034d4d:	call   edi
10034d4f:	mov    ecx,DWORD PTR [esp+0x24]
10034d53:	mov    eax,DWORD PTR [esp+0x28]
10034d57:	mov    DWORD PTR [esp+0x34],ecx
10034d5b:	mov    ecx,eax
10034d5d:	and    eax,0x7fffffff
10034d62:	mov    DWORD PTR [esp+0x38],eax
10034d66:	mov    eax,DWORD PTR [esp+0x14]
10034d6a:	fild   QWORD PTR [esp+0x34]
10034d6e:	and    ecx,0x80000000
10034d74:	mov    DWORD PTR [esp+0x30],ecx
10034d78:	mov    DWORD PTR [esp+0x1c],eax
10034d7c:	mov    eax,DWORD PTR [esp+0x18]
10034d80:	mov    DWORD PTR [esp+0x2c],ebx
10034d84:	fild   QWORD PTR [esp+0x2c]
10034d88:	mov    ecx,eax
10034d8a:	and    eax,0x7fffffff
10034d8f:	mov    DWORD PTR [esp+0x20],eax
10034d93:	fchs   
10034d95:	and    ecx,0x80000000
10034d9b:	faddp  st(1),st
10034d9d:	mov    DWORD PTR [esp+0x40],ecx
10034da1:	fild   QWORD PTR [esp+0x1c]
10034da5:	mov    DWORD PTR [esp+0x3c],ebx
10034da9:	fild   QWORD PTR [esp+0x3c]
10034dad:	fchs   
10034daf:	faddp  st(1),st
10034db1:	fadd   QWORD PTR ds:0x10074288
10034db7:	fcompp 
10034db9:	fnstsw ax
10034dbb:	test   ah,0x5
10034dbe:	jnp    0x10034e1b
10034dc0:	push   ebx
10034dc1:	call   DWORD PTR ds:0x100660bc
10034dc7:	push   ebx
10034dc8:	push   0x80
10034dcd:	push   0x3
10034dcf:	push   ebx
10034dd0:	push   ebx
10034dd1:	push   0xc0000000
10034dd6:	lea    ecx,[esp+0xac]
10034ddd:	push   ecx
10034dde:	call   DWORD PTR ds:0x100660c0
10034de4:	cmp    eax,0xffffffff
10034de7:	je     0x10034d24
10034ded:	mov    ecx,DWORD PTR [esp+0x10]
10034df1:	mov    DWORD PTR [ecx],eax
10034df3:	mov    eax,ecx
10034df5:	mov    ecx,DWORD PTR [esp+0x8a8]
10034dfc:	mov    DWORD PTR fs:0x0,ecx
10034e03:	pop    ecx
10034e04:	pop    edi
10034e05:	pop    esi
10034e06:	pop    ebx
10034e07:	mov    ecx,DWORD PTR [esp+0x890]
10034e0e:	xor    ecx,esp
10034e10:	call   0x100430d7
10034e15:	mov    esp,ebp
10034e17:	pop    ebp
10034e18:	ret    0x8
10034e1b:	call   DWORD PTR ds:0x100660cc
10034e21:	push   0x10073724
10034e26:	push   0x12
10034e28:	push   0x10073750
10034e2d:	call   0x100042e3
10034e32:	mov    esi,eax
10034e34:	add    esp,0xc
10034e37:	mov    edi,0xf
10034e3c:	push   esi
10034e3d:	mov    DWORD PTR [esp+0x6c],edi
10034e41:	mov    DWORD PTR [esp+0x68],ebx
10034e45:	mov    BYTE PTR [esp+0x58],bl
10034e49:	call   0x10043250
10034e4e:	add    esp,0x4
10034e51:	push   eax
10034e52:	push   esi
10034e53:	lea    ecx,[esp+0x58]
10034e57:	call   0x1000133f
10034e5c:	lea    ecx,[esp+0x6c]
10034e60:	mov    DWORD PTR [esp+0x8b0],ebx
10034e67:	call   0x10043141
10034e6c:	push   0xffffffff
10034e6e:	mov    BYTE PTR [esp+0x8b4],0x1
10034e76:	push   ebx
10034e77:	lea    edx,[esp+0x58]
10034e7b:	push   edx
10034e7c:	lea    ecx,[esp+0x84]
10034e83:	mov    DWORD PTR [esp+0x78],0x10073674
10034e8b:	mov    DWORD PTR [esp+0x9c],edi
10034e92:	mov    DWORD PTR [esp+0x98],ebx
10034e99:	mov    BYTE PTR [esp+0x88],bl
10034ea0:	call   0x10001245
10034ea5:	push   0x10074e84
10034eaa:	lea    eax,[esp+0x70]
10034eae:	push   eax
10034eaf:	mov    BYTE PTR [esp+0x8b8],bl
10034eb6:	call   0x10047c54
10034ebb:	int3   
10034ebc:	int3   
10034ebd:	int3   
10034ebe:	int3   
10034ebf:	int3   
10034ec0:	mov    ecx,DWORD PTR [eax]
10034ec2:	push   ecx
10034ec3:	call   DWORD PTR ds:0x10066070
10034ec9:	ret    
10034eca:	int3   
10034ecb:	int3   
10034ecc:	int3   
10034ecd:	int3   
10034ece:	int3   
10034ecf:	int3   
10034ed0:	push   0xffffffff
10034ed2:	push   0x10061820
10034ed7:	mov    eax,fs:0x0
10034edd:	push   eax
10034ede:	sub    esp,0x4c
10034ee1:	push   ebx
10034ee2:	push   esi
10034ee3:	mov    eax,ds:0x1007e030
10034ee8:	xor    eax,esp
10034eea:	push   eax
10034eeb:	lea    eax,[esp+0x58]
10034eef:	mov    fs:0x0,eax
10034ef5:	mov    edx,DWORD PTR [ecx]
10034ef7:	xor    ebx,ebx
10034ef9:	push   ebx
10034efa:	lea    eax,[esp+0x14]
10034efe:	push   eax
10034eff:	push   ebx
10034f00:	push   ebx
10034f01:	push   ebx
10034f02:	push   ebx
10034f03:	push   0x22c028
10034f08:	push   edx
10034f09:	call   DWORD PTR ds:0x10066260
10034f0f:	test   eax,eax
10034f11:	jne    0x10034fc8
10034f17:	push   0x1eb847c
10034f1c:	push   0x10073764
10034f21:	call   0x100042d1
10034f26:	push   0x210da774
10034f2b:	push   eax
10034f2c:	call   0x100042d1
10034f31:	push   0x6847be38
10034f36:	push   eax
10034f37:	call   0x100042d1
10034f3c:	push   0x3d9986b0
10034f41:	push   eax
10034f42:	call   0x100042d1
10034f47:	push   eax
10034f48:	push   0x1a
10034f4a:	push   0x10073798
10034f4f:	call   0x100042e3
10034f54:	mov    esi,eax
10034f56:	push   esi
10034f57:	mov    DWORD PTR [esp+0x5c],0xf
10034f5f:	mov    DWORD PTR [esp+0x58],ebx
10034f63:	mov    BYTE PTR [esp+0x48],bl
10034f67:	call   0x10043250
10034f6c:	add    esp,0x30
10034f6f:	push   eax
10034f70:	push   esi
10034f71:	lea    ecx,[esp+0x1c]
10034f75:	call   0x1000133f
10034f7a:	lea    ecx,[esp+0x30]
10034f7e:	mov    DWORD PTR [esp+0x60],ebx
10034f82:	call   0x10043141
10034f87:	push   0xffffffff
10034f89:	mov    BYTE PTR [esp+0x64],0x1
10034f8e:	push   ebx
10034f8f:	lea    eax,[esp+0x1c]
10034f93:	push   eax
10034f94:	lea    ecx,[esp+0x48]
10034f98:	mov    DWORD PTR [esp+0x3c],0x10073674
10034fa0:	mov    DWORD PTR [esp+0x60],0xf
10034fa8:	mov    DWORD PTR [esp+0x5c],ebx
10034fac:	mov    BYTE PTR [esp+0x4c],bl
10034fb0:	call   0x10001245
10034fb5:	push   0x10074e84
10034fba:	lea    ecx,[esp+0x34]
10034fbe:	push   ecx
10034fbf:	mov    BYTE PTR [esp+0x68],bl
10034fc3:	call   0x10047c54
10034fc8:	mov    ecx,DWORD PTR [esp+0x58]
10034fcc:	mov    DWORD PTR fs:0x0,ecx
10034fd3:	pop    ecx
10034fd4:	pop    esi
10034fd5:	pop    ebx
10034fd6:	add    esp,0x58
10034fd9:	ret    
10034fda:	int3   
10034fdb:	int3   
10034fdc:	int3   
10034fdd:	int3   
10034fde:	int3   
10034fdf:	int3   
10034fe0:	push   0xffffffff
10034fe2:	push   0x10061978
10034fe7:	mov    eax,fs:0x0
10034fed:	push   eax
10034fee:	sub    esp,0x4c
10034ff1:	push   ebx
10034ff2:	push   ebp
10034ff3:	push   esi
10034ff4:	push   edi
10034ff5:	mov    eax,ds:0x1007e030
10034ffa:	xor    eax,esp
10034ffc:	push   eax
10034ffd:	lea    eax,[esp+0x60]
10035001:	mov    fs:0x0,eax
10035007:	mov    esi,ecx
10035009:	xor    ebx,ebx
1003500b:	mov    DWORD PTR [esp+0x14],ebx
1003500f:	mov    eax,DWORD PTR [esp+0x74]
10035013:	mov    DWORD PTR [esp+0x68],ebx
10035017:	mov    edx,DWORD PTR [esi+0x4c]
1003501a:	mov    edi,DWORD PTR [esi+0x68]
1003501d:	mov    eax,DWORD PTR [eax+0x14]
10035020:	mov    ecx,DWORD PTR [esi+0x30]
10035023:	add    edi,edx
10035025:	add    edi,eax
10035027:	lea    ebp,[edi+ecx*1+0x4]
1003502b:	lea    eax,[ebp+0x20]
1003502e:	push   eax
1003502f:	mov    DWORD PTR [esp+0x78],eax
10035033:	call   0x100439b6
10035038:	mov    edi,eax
1003503a:	add    esp,0x4
1003503d:	cmp    edi,ebx
1003503f:	je     0x1003504a
10035041:	push   ebx
10035042:	call   0x100430d2
10035047:	add    esp,0x4
1003504a:	mov    ecx,DWORD PTR [esp+0x74]
1003504e:	push   ecx
1003504f:	push   ebx
10035050:	push   edi
10035051:	mov    DWORD PTR [esp+0x20],edi
10035055:	call   0x10045ea0
1003505a:	mov    DWORD PTR [edi],ebp
1003505c:	mov    eax,DWORD PTR [esi+0x70]
1003505f:	mov    DWORD PTR [edi+0xc],eax
10035062:	mov    edx,DWORD PTR [esi+0x78]
10035065:	mov    DWORD PTR [edi+0x10],edx
10035068:	mov    eax,DWORD PTR [esi+0x7c]
1003506b:	mov    DWORD PTR [edi+0x14],eax
1003506e:	mov    ecx,DWORD PTR [esi+0x80]
10035074:	mov    DWORD PTR [edi+0x18],ecx
10035077:	mov    edx,DWORD PTR [esi+0x84]
1003507d:	mov    DWORD PTR [edi+0x1c],edx
10035080:	add    esp,0xc
10035083:	mov    DWORD PTR [edi+0x4],0x7
1003508a:	cmp    DWORD PTR [esi+0x18],0x10
1003508e:	jb     0x10035095
10035090:	mov    ecx,DWORD PTR [esi+0x4]
10035093:	jmp    0x10035098
10035095:	lea    ecx,[esi+0x4]
10035098:	lea    edx,[edi+0x20]
1003509b:	jmp    0x100350a0
1003509d:	lea    ecx,[ecx+0x0]
100350a0:	mov    al,BYTE PTR [ecx]
100350a2:	mov    BYTE PTR [edx],al
100350a4:	add    ecx,0x1
100350a7:	add    edx,0x1
100350aa:	cmp    al,bl
100350ac:	jne    0x100350a0
100350ae:	cmp    DWORD PTR [esi+0x34],0x10
100350b2:	mov    ebp,DWORD PTR [esi+0x14]
100350b5:	jb     0x100350bc
100350b7:	mov    edx,DWORD PTR [esi+0x20]
100350ba:	jmp    0x100350bf
100350bc:	lea    edx,[esi+0x20]
100350bf:	lea    ecx,[edi+ebp*1+0x21]
100350c3:	mov    al,BYTE PTR [edx]
100350c5:	mov    BYTE PTR [ecx],al
100350c7:	add    edx,0x1
100350ca:	add    ecx,0x1
100350cd:	cmp    al,bl
100350cf:	jne    0x100350c3
100350d1:	cmp    DWORD PTR [esi+0x50],0x10
100350d5:	mov    eax,DWORD PTR [esi+0x30]
100350d8:	lea    ebp,[eax+ebp*1+0x2]
100350dc:	jb     0x100350e3
100350de:	mov    edx,DWORD PTR [esi+0x3c]
100350e1:	jmp    0x100350e6
100350e3:	lea    edx,[esi+0x3c]
100350e6:	lea    ecx,[edi+ebp*1+0x20]
100350ea:	lea    ebx,[ebx+0x0]
100350f0:	mov    al,BYTE PTR [edx]
100350f2:	mov    BYTE PTR [ecx],al
100350f4:	add    edx,0x1
100350f7:	add    ecx,0x1
100350fa:	cmp    al,bl
100350fc:	jne    0x100350f0
100350fe:	cmp    DWORD PTR [esi+0x6c],0x10
10035102:	mov    eax,DWORD PTR [esi+0x4c]
10035105:	lea    eax,[eax+ebp*1+0x1]
10035109:	jb     0x10035110
1003510b:	mov    esi,DWORD PTR [esi+0x58]
1003510e:	jmp    0x10035113
10035110:	add    esi,0x58
10035113:	lea    ecx,[eax+edi*1+0x20]
10035117:	mov    al,BYTE PTR [esi]
10035119:	mov    BYTE PTR [ecx],al
1003511b:	add    esi,0x1
1003511e:	add    ecx,0x1
10035121:	cmp    al,bl
10035123:	jne    0x10035117
10035125:	mov    ecx,DWORD PTR [esp+0x74]
10035129:	mov    edx,DWORD PTR [esp+0x70]
1003512d:	push   ebx
1003512e:	lea    eax,[esp+0x1c]
10035132:	push   eax
10035133:	mov    eax,DWORD PTR [edx]
10035135:	push   ebx
10035136:	push   ebx
10035137:	push   ecx
10035138:	push   edi
10035139:	push   0x22c02c
1003513e:	push   eax
1003513f:	call   DWORD PTR ds:0x10066260
10035145:	test   eax,eax
10035147:	jne    0x100351e7
1003514d:	push   0x13bd3df6
10035152:	push   0x100737b4
10035157:	call   0x100042d1
1003515c:	push   0x3582a7f6
10035161:	push   eax
10035162:	call   0x100042d1
10035167:	push   eax
10035168:	push   0x1e
1003516a:	push   0x100737d8
1003516f:	call   0x100042e3
10035174:	mov    esi,eax
10035176:	mov    edi,0xf
1003517b:	push   esi
1003517c:	mov    DWORD PTR [esp+0x54],edi
10035180:	mov    DWORD PTR [esp+0x50],ebx
10035184:	mov    BYTE PTR [esp+0x40],bl
10035188:	call   0x10043250
1003518d:	add    esp,0x20
10035190:	push   eax
10035191:	push   esi
10035192:	lea    ecx,[esp+0x24]
10035196:	call   0x1000133f
1003519b:	lea    ecx,[esp+0x38]
1003519f:	mov    BYTE PTR [esp+0x68],0x1
100351a4:	call   0x10043141
100351a9:	push   0xffffffff
100351ab:	mov    BYTE PTR [esp+0x6c],0x2
100351b0:	push   ebx
100351b1:	lea    ecx,[esp+0x24]
100351b5:	push   ecx
100351b6:	lea    ecx,[esp+0x50]
100351ba:	mov    DWORD PTR [esp+0x44],0x10073674
100351c2:	mov    DWORD PTR [esp+0x68],edi
100351c6:	mov    DWORD PTR [esp+0x64],ebx
100351ca:	mov    BYTE PTR [esp+0x54],bl
100351ce:	call   0x10001245
100351d3:	push   0x10074e84
100351d8:	lea    edx,[esp+0x3c]
100351dc:	push   edx
100351dd:	mov    BYTE PTR [esp+0x70],0x1
100351e2:	call   0x10047c54
100351e7:	push   edi
100351e8:	call   0x100430d2
100351ed:	add    esp,0x4
100351f0:	mov    ecx,DWORD PTR [esp+0x60]
100351f4:	mov    DWORD PTR fs:0x0,ecx
100351fb:	pop    ecx
100351fc:	pop    edi
100351fd:	pop    esi
100351fe:	pop    ebp
100351ff:	pop    ebx
10035200:	add    esp,0x58
10035203:	ret    0x8
10035206:	int3   
10035207:	int3   
10035208:	int3   
10035209:	int3   
1003520a:	int3   
1003520b:	int3   
1003520c:	int3   
1003520d:	int3   
1003520e:	int3   
1003520f:	int3   
10035210:	push   0xffffffff
10035212:	push   0x10061978
10035217:	mov    eax,fs:0x0
1003521d:	push   eax
1003521e:	sub    esp,0x4c
10035221:	push   ebx
10035222:	push   ebp
10035223:	push   esi
10035224:	push   edi
10035225:	mov    eax,ds:0x1007e030
1003522a:	xor    eax,esp
1003522c:	push   eax
1003522d:	lea    eax,[esp+0x60]
10035231:	mov    fs:0x0,eax
10035237:	xor    ebx,ebx
10035239:	mov    DWORD PTR [esp+0x14],ebx
1003523d:	mov    eax,DWORD PTR [esp+0x74]
10035241:	mov    DWORD PTR [esp+0x68],ebx
10035245:	mov    eax,DWORD PTR [eax+0x14]
10035248:	lea    edi,[eax+0x1]
1003524b:	lea    ebp,[edi+0x20]
1003524e:	push   ebp
1003524f:	call   0x100439b6
10035254:	mov    esi,eax
10035256:	add    esp,0x4
10035259:	cmp    esi,ebx
1003525b:	je     0x10035266
1003525d:	push   ebx
1003525e:	call   0x100430d2
10035263:	add    esp,0x4
10035266:	push   ebp
10035267:	push   ebx
10035268:	push   esi
10035269:	mov    DWORD PTR [esp+0x20],esi
1003526d:	call   0x10045ea0
10035272:	mov    eax,DWORD PTR [esp+0x84]
10035279:	add    esp,0xc
1003527c:	cmp    eax,ebx
1003527e:	mov    DWORD PTR [esi],edi
10035280:	je     0x10035291
10035282:	mov    ecx,DWORD PTR [eax]
10035284:	mov    DWORD PTR [esi+0x10],ecx
10035287:	mov    edx,DWORD PTR [eax+0x4]
1003528a:	mov    DWORD PTR [esi+0x14],edx
1003528d:	or     DWORD PTR [esi+0x4],0x2
10035291:	mov    eax,DWORD PTR [esp+0x7c]
10035295:	cmp    eax,ebx
10035297:	mov    edx,0x10
1003529c:	je     0x100352af
1003529e:	mov    ecx,DWORD PTR [eax]
100352a0:	mov    DWORD PTR [esi+0x18],ecx
100352a3:	mov    eax,DWORD PTR [eax+0x4]
100352a6:	mov    DWORD PTR [esi+0x1c],eax
100352a9:	or     DWORD PTR [esi+0x4],0x4
100352ad:	jmp    0x100352b2
100352af:	or     DWORD PTR [esi+0x4],edx
100352b2:	mov    ecx,DWORD PTR [esp+0x74]
100352b6:	cmp    DWORD PTR [ecx+0x18],edx
100352b9:	jb     0x100352c0
100352bb:	mov    ecx,DWORD PTR [ecx+0x4]
100352be:	jmp    0x100352c3
100352c0:	add    ecx,0x4
100352c3:	lea    edx,[esi+0x20]
100352c6:	mov    al,BYTE PTR [ecx]
100352c8:	mov    BYTE PTR [edx],al
100352ca:	add    ecx,0x1
100352cd:	add    edx,0x1
100352d0:	cmp    al,bl
100352d2:	jne    0x100352c6
100352d4:	mov    edx,DWORD PTR [esp+0x70]
100352d8:	mov    eax,DWORD PTR [edx]
100352da:	push   ebx
100352db:	lea    ecx,[esp+0x1c]
100352df:	push   ecx
100352e0:	push   ebx
100352e1:	push   ebx
100352e2:	push   ebp
100352e3:	push   esi
100352e4:	push   0x22c02c
100352e9:	push   eax
100352ea:	call   DWORD PTR ds:0x10066260
100352f0:	test   eax,eax
100352f2:	jne    0x10035392
100352f8:	push   0x19986198
100352fd:	push   0x100737f8
10035302:	call   0x100042d1
10035307:	push   0x7025f1ae
1003530c:	push   eax
1003530d:	call   0x100042d1
10035312:	push   eax
10035313:	push   0x1e
10035315:	push   0x100737d8
1003531a:	call   0x100042e3
1003531f:	mov    esi,eax
10035321:	mov    edi,0xf
10035326:	push   esi
10035327:	mov    DWORD PTR [esp+0x54],edi
1003532b:	mov    DWORD PTR [esp+0x50],ebx
1003532f:	mov    BYTE PTR [esp+0x40],bl
10035333:	call   0x10043250
10035338:	add    esp,0x20
1003533b:	push   eax
1003533c:	push   esi
1003533d:	lea    ecx,[esp+0x24]
10035341:	call   0x1000133f
10035346:	lea    ecx,[esp+0x38]
1003534a:	mov    BYTE PTR [esp+0x68],0x1
1003534f:	call   0x10043141
10035354:	push   0xffffffff
10035356:	mov    BYTE PTR [esp+0x6c],0x2
1003535b:	push   ebx
1003535c:	lea    ecx,[esp+0x24]
10035360:	push   ecx
10035361:	lea    ecx,[esp+0x50]
10035365:	mov    DWORD PTR [esp+0x44],0x10073674
1003536d:	mov    DWORD PTR [esp+0x68],edi
10035371:	mov    DWORD PTR [esp+0x64],ebx
10035375:	mov    BYTE PTR [esp+0x54],bl
10035379:	call   0x10001245
1003537e:	push   0x10074e84
10035383:	lea    edx,[esp+0x3c]
10035387:	push   edx
10035388:	mov    BYTE PTR [esp+0x70],0x1
1003538d:	call   0x10047c54
10035392:	push   esi
10035393:	call   0x100430d2
10035398:	add    esp,0x4
1003539b:	mov    ecx,DWORD PTR [esp+0x60]
1003539f:	mov    DWORD PTR fs:0x0,ecx
100353a6:	pop    ecx
100353a7:	pop    edi
100353a8:	pop    esi
100353a9:	pop    ebp
100353aa:	pop    ebx
100353ab:	add    esp,0x58
100353ae:	ret    0x10
100353b1:	int3   
100353b2:	int3   
100353b3:	int3   
100353b4:	int3   
100353b5:	int3   
100353b6:	int3   
100353b7:	int3   
100353b8:	int3   
100353b9:	int3   
100353ba:	int3   
100353bb:	int3   
100353bc:	int3   
100353bd:	int3   
100353be:	int3   
100353bf:	int3   
100353c0:	push   0xffffffff
100353c2:	push   0x10061940
100353c7:	mov    eax,fs:0x0
100353cd:	push   eax
100353ce:	sub    esp,0x50
100353d1:	push   ebx
100353d2:	push   ebp
100353d3:	push   esi
100353d4:	push   edi
100353d5:	mov    eax,ds:0x1007e030
100353da:	xor    eax,esp
100353dc:	push   eax
100353dd:	lea    eax,[esp+0x64]
100353e1:	mov    fs:0x0,eax
100353e7:	mov    ebp,DWORD PTR [esp+0x78]
100353eb:	mov    eax,DWORD PTR [ebp+0x14]
100353ee:	lea    esi,[eax+0x1]
100353f1:	lea    eax,[esi+0xe8]
100353f7:	push   eax
100353f8:	call   0x100439b6
100353fd:	mov    edi,eax
100353ff:	add    esp,0x4
10035402:	mov    DWORD PTR [esp+0x14],edi
10035406:	xor    ebx,ebx
10035408:	mov    DWORD PTR [esp+0x6c],ebx
1003540c:	mov    DWORD PTR [edi],esi
1003540e:	mov    DWORD PTR [edi+0x4],ebx
10035411:	cmp    DWORD PTR [ebp+0x18],0x10
10035415:	jb     0x1003541c
10035417:	mov    ecx,DWORD PTR [ebp+0x4]
1003541a:	jmp    0x1003541f
1003541c:	lea    ecx,[ebp+0x4]
1003541f:	lea    edx,[edi+0x20]
10035422:	mov    al,BYTE PTR [ecx]
10035424:	mov    BYTE PTR [edx],al
10035426:	add    ecx,0x1
10035429:	add    edx,0x1
1003542c:	cmp    al,bl
1003542e:	jne    0x10035422
10035430:	mov    eax,DWORD PTR [edi]
10035432:	mov    edx,DWORD PTR [esp+0x74]
10035436:	push   ebx
10035437:	add    eax,0x20
1003543a:	lea    ecx,[esp+0x1c]
1003543e:	push   ecx
1003543f:	push   eax
10035440:	push   edi
10035441:	push   eax
10035442:	mov    eax,DWORD PTR [edx]
10035444:	push   edi
10035445:	push   0x22c030
1003544a:	push   eax
1003544b:	call   DWORD PTR ds:0x10066260
10035451:	test   eax,eax
10035453:	jne    0x100354e8
10035459:	push   0xb784362
1003545e:	push   0x1007381c
10035463:	call   0x100042d1
10035468:	push   eax
10035469:	push   0x1e
1003546b:	push   0x10073848
10035470:	call   0x100042e3
10035475:	mov    esi,eax
10035477:	mov    edi,0xf
1003547c:	push   esi
1003547d:	mov    DWORD PTR [esp+0x4c],edi
10035481:	mov    DWORD PTR [esp+0x48],ebx
10035485:	mov    BYTE PTR [esp+0x38],bl
10035489:	call   0x10043250
1003548e:	add    esp,0x18
10035491:	push   eax
10035492:	push   esi
10035493:	lea    ecx,[esp+0x24]
10035497:	call   0x1000133f
1003549c:	lea    ecx,[esp+0x38]
100354a0:	mov    BYTE PTR [esp+0x6c],0x1
100354a5:	call   0x10043141
100354aa:	push   0xffffffff
100354ac:	mov    BYTE PTR [esp+0x70],0x2
100354b1:	push   ebx
100354b2:	lea    ecx,[esp+0x24]
100354b6:	push   ecx
100354b7:	lea    ecx,[esp+0x50]
100354bb:	mov    DWORD PTR [esp+0x44],0x10073674
100354c3:	mov    DWORD PTR [esp+0x68],edi
100354c7:	mov    DWORD PTR [esp+0x64],ebx
100354cb:	mov    BYTE PTR [esp+0x54],bl
100354cf:	call   0x10001245
100354d4:	push   0x10074e84
100354d9:	lea    edx,[esp+0x3c]
100354dd:	push   edx
100354de:	mov    BYTE PTR [esp+0x74],0x1
100354e3:	call   0x10047c54
100354e8:	cmp    DWORD PTR [edi+0x8],0x2
100354ec:	je     0x10035514
100354ee:	cmp    DWORD PTR [edi+0x8],0x1
100354f2:	jne    0x10035622
100354f8:	push   edi
100354f9:	call   0x100430d2
100354fe:	add    esp,0x4
10035501:	xor    al,al
10035503:	jmp    0x10035775
10035508:	jmp    0x10035510
1003550a:	lea    ebx,[ebx+0x0]
10035510:	mov    ebp,DWORD PTR [esp+0x78]
10035514:	mov    eax,DWORD PTR [ebp+0x14]
10035517:	mov    ebp,DWORD PTR [edi]
10035519:	lea    ecx,[eax+0x1]
1003551c:	cmp    ebp,ecx
1003551e:	ja     0x10035523
10035520:	lea    ebp,[eax+0x1]
10035523:	lea    edx,[ebp+0x20]
10035526:	push   edx
10035527:	call   0x100439b6
1003552c:	mov    esi,eax
1003552e:	add    esp,0x4
10035531:	cmp    esi,edi
10035533:	je     0x1003553e
10035535:	push   edi
10035536:	call   0x100430d2
1003553b:	add    esp,0x4
1003553e:	mov    ecx,DWORD PTR [esp+0x78]
10035542:	mov    edi,esi
10035544:	mov    DWORD PTR [esi],ebp
10035546:	mov    DWORD PTR [esp+0x14],edi
1003554a:	mov    DWORD PTR [esi+0x4],ebx
1003554d:	call   0x100011f3
10035552:	lea    edx,[esi+0x20]
10035555:	mov    cl,BYTE PTR [eax]
10035557:	mov    BYTE PTR [edx],cl
10035559:	add    eax,0x1
1003555c:	add    edx,0x1
1003555f:	cmp    cl,bl
10035561:	jne    0x10035555
10035563:	mov    eax,DWORD PTR [esi]
10035565:	mov    edx,DWORD PTR [esp+0x74]
10035569:	push   ebx
1003556a:	add    eax,0x20
1003556d:	lea    ecx,[esp+0x1c]
10035571:	push   ecx
10035572:	push   eax
10035573:	push   esi
10035574:	push   eax
10035575:	mov    eax,DWORD PTR [edx]
10035577:	push   esi
10035578:	push   0x22c030
1003557d:	push   eax
1003557e:	call   DWORD PTR ds:0x10066260
10035584:	test   eax,eax
10035586:	je     0x10035593
10035588:	cmp    DWORD PTR [esi+0x8],0x2
1003558c:	je     0x10035510
1003558e:	jmp    0x100354ee
10035593:	push   0x4e7288f4
10035598:	push   0x10073868
1003559d:	call   0x100042d1
100355a2:	push   eax
100355a3:	push   0x1e
100355a5:	push   0x10073848
100355aa:	call   0x100042e3
100355af:	mov    esi,eax
100355b1:	mov    edi,0xf
100355b6:	push   esi
100355b7:	mov    DWORD PTR [esp+0x4c],edi
100355bb:	mov    DWORD PTR [esp+0x48],ebx
100355bf:	mov    BYTE PTR [esp+0x38],bl
100355c3:	call   0x10043250
100355c8:	add    esp,0x18
100355cb:	push   eax
100355cc:	push   esi
100355cd:	lea    ecx,[esp+0x24]
100355d1:	call   0x1000133f
100355d6:	lea    ecx,[esp+0x38]
100355da:	mov    BYTE PTR [esp+0x6c],0x3
100355df:	call   0x10043141
100355e4:	push   0xffffffff
100355e6:	mov    BYTE PTR [esp+0x70],0x4
100355eb:	push   ebx
100355ec:	lea    ecx,[esp+0x24]
100355f0:	push   ecx
100355f1:	lea    ecx,[esp+0x50]
100355f5:	mov    DWORD PTR [esp+0x44],0x10073674
100355fd:	mov    DWORD PTR [esp+0x68],edi
10035601:	mov    DWORD PTR [esp+0x64],ebx
10035605:	mov    BYTE PTR [esp+0x54],bl
10035609:	call   0x10001245
1003560e:	push   0x10074e84
10035613:	lea    edx,[esp+0x3c]
10035617:	push   edx
10035618:	mov    BYTE PTR [esp+0x74],0x3
1003561d:	call   0x10047c54
10035622:	lea    eax,[edi+0x20]
10035625:	lea    edx,[eax+0x1]
10035628:	mov    cl,BYTE PTR [eax]
1003562a:	add    eax,0x1
1003562d:	cmp    cl,bl
1003562f:	jne    0x10035628
10035631:	sub    eax,edx
10035633:	mov    esi,eax
10035635:	lea    ebp,[esi+edi*1+0x21]
10035639:	push   ebp
1003563a:	mov    DWORD PTR [esp+0x38],0xf
10035642:	mov    DWORD PTR [esp+0x34],ebx
10035646:	mov    BYTE PTR [esp+0x24],bl
1003564a:	call   0x10043250
1003564f:	add    esp,0x4
10035652:	push   eax
10035653:	push   ebp
10035654:	lea    ecx,[esp+0x24]
10035658:	call   0x1000133f
1003565d:	mov    ebp,DWORD PTR [esp+0x7c]
10035661:	push   0xffffffff
10035663:	push   ebx
10035664:	lea    eax,[esp+0x24]
10035668:	push   eax
10035669:	lea    ecx,[ebp+0x1c]
1003566c:	mov    BYTE PTR [esp+0x78],0x5
10035671:	call   0x10001245
10035676:	mov    BYTE PTR [esp+0x6c],bl
1003567a:	cmp    DWORD PTR [esp+0x34],0x10
1003567f:	jb     0x1003568e
10035681:	mov    ecx,DWORD PTR [esp+0x20]
10035685:	push   ecx
10035686:	call   0x100430d2
1003568b:	add    esp,0x4
1003568e:	mov    eax,DWORD PTR [ebp+0x30]
10035691:	lea    esi,[esi+eax*1+0x2]
10035695:	lea    ebp,[esi+edi*1+0x20]
10035699:	push   ebp
1003569a:	mov    DWORD PTR [esp+0x38],0xf
100356a2:	mov    DWORD PTR [esp+0x34],ebx
100356a6:	mov    BYTE PTR [esp+0x24],bl
100356aa:	call   0x10043250
100356af:	add    esp,0x4
100356b2:	push   eax
100356b3:	push   ebp
100356b4:	lea    ecx,[esp+0x24]
100356b8:	call   0x1000133f
100356bd:	mov    ebp,DWORD PTR [esp+0x7c]
100356c1:	push   0xffffffff
100356c3:	push   ebx
100356c4:	lea    edx,[esp+0x24]
100356c8:	push   edx
100356c9:	lea    ecx,[ebp+0x38]
100356cc:	mov    BYTE PTR [esp+0x78],0x6
100356d1:	call   0x10001245
100356d6:	mov    BYTE PTR [esp+0x6c],bl
100356da:	cmp    DWORD PTR [esp+0x34],0x10
100356df:	jb     0x100356ee
100356e1:	mov    eax,DWORD PTR [esp+0x20]
100356e5:	push   eax
100356e6:	call   0x100430d2
100356eb:	add    esp,0x4
100356ee:	mov    eax,DWORD PTR [ebp+0x4c]
100356f1:	lea    esi,[esi+eax*1+0x1]
100356f5:	lea    esi,[esi+edi*1+0x20]
100356f9:	push   esi
100356fa:	mov    DWORD PTR [esp+0x38],0xf
10035702:	mov    DWORD PTR [esp+0x34],ebx
10035706:	mov    BYTE PTR [esp+0x24],bl
1003570a:	call   0x10043250
1003570f:	add    esp,0x4
10035712:	push   eax
10035713:	push   esi
10035714:	lea    ecx,[esp+0x24]
10035718:	call   0x1000133f
1003571d:	push   0xffffffff
1003571f:	push   ebx
10035720:	lea    ecx,[esp+0x24]
10035724:	push   ecx
10035725:	lea    ecx,[ebp+0x54]
10035728:	mov    BYTE PTR [esp+0x78],0x7
1003572d:	call   0x10001245
10035732:	cmp    DWORD PTR [esp+0x34],0x10
10035737:	jb     0x10035746
10035739:	mov    edx,DWORD PTR [esp+0x20]
1003573d:	push   edx
1003573e:	call   0x100430d2
10035743:	add    esp,0x4
10035746:	mov    eax,DWORD PTR [edi+0xc]
10035749:	mov    DWORD PTR [ebp+0x70],eax
1003574c:	mov    ecx,DWORD PTR [edi+0x10]
1003574f:	mov    DWORD PTR [ebp+0x78],ecx
10035752:	mov    edx,DWORD PTR [edi+0x14]
10035755:	mov    DWORD PTR [ebp+0x7c],edx
10035758:	mov    eax,DWORD PTR [edi+0x18]
1003575b:	mov    DWORD PTR [ebp+0x80],eax
10035761:	mov    ecx,DWORD PTR [edi+0x1c]
10035764:	push   edi
10035765:	mov    DWORD PTR [ebp+0x84],ecx
1003576b:	call   0x100430d2
10035770:	add    esp,0x4
10035773:	mov    al,0x1
10035775:	mov    ecx,DWORD PTR [esp+0x64]
10035779:	mov    DWORD PTR fs:0x0,ecx
10035780:	pop    ecx
10035781:	pop    edi
10035782:	pop    esi
10035783:	pop    ebp
10035784:	pop    ebx
10035785:	add    esp,0x5c
10035788:	ret    0xc
1003578b:	int3   
1003578c:	int3   
1003578d:	int3   
1003578e:	int3   
1003578f:	int3   
10035790:	push   ebp
10035791:	mov    ebp,esp
10035793:	and    esp,0xfffffff8
10035796:	push   0xffffffff
10035798:	push   0x100618d8
1003579d:	mov    eax,fs:0x0
100357a3:	push   eax
100357a4:	sub    esp,0x58
100357a7:	push   ebx
100357a8:	push   esi
100357a9:	push   edi
100357aa:	mov    eax,ds:0x1007e030
100357af:	xor    eax,esp
100357b1:	push   eax
100357b2:	lea    eax,[esp+0x68]
100357b6:	mov    fs:0x0,eax
100357bc:	mov    ebx,ecx
100357be:	xor    eax,eax
100357c0:	mov    DWORD PTR [esp+0x18],eax
100357c4:	mov    ecx,DWORD PTR [ebp+0xc]
100357c7:	mov    DWORD PTR [esp+0x70],eax
100357cb:	mov    eax,DWORD PTR [ebx+0x14]
100357ce:	mov    ecx,DWORD PTR [ecx+0x14]
100357d1:	lea    edi,[eax+ecx*1+0x4]
100357d5:	lea    eax,[edi+0xc]
100357d8:	push   eax
100357d9:	mov    DWORD PTR [esp+0x18],eax
100357dd:	call   0x100439b6
100357e2:	mov    esi,eax
100357e4:	add    esp,0x4
100357e7:	test   esi,esi
100357e9:	je     0x100357f5
100357eb:	push   0x0
100357ed:	call   0x100430d2
100357f2:	add    esp,0x4
100357f5:	mov    edx,DWORD PTR [esp+0x14]
100357f9:	push   edx
100357fa:	push   0x0
100357fc:	push   esi
100357fd:	mov    DWORD PTR [esp+0x24],esi
10035801:	call   0x10045ea0
10035806:	mov    DWORD PTR [esi],edi
10035808:	mov    edi,0x10
1003580d:	add    esp,0xc
10035810:	cmp    DWORD PTR [ebx+0x18],edi
10035813:	jb     0x1003581a
10035815:	mov    ecx,DWORD PTR [ebx+0x4]
10035818:	jmp    0x1003581d
1003581a:	lea    ecx,[ebx+0x4]
1003581d:	lea    edx,[esi+0xc]
10035820:	mov    al,BYTE PTR [ecx]
10035822:	mov    BYTE PTR [edx],al
10035824:	add    ecx,0x1
10035827:	add    edx,0x1
1003582a:	test   al,al
1003582c:	jne    0x10035820
1003582e:	mov    edx,DWORD PTR [ebp+0xc]
10035831:	cmp    DWORD PTR [edx+0x18],edi
10035834:	mov    ebx,DWORD PTR [ebx+0x14]
10035837:	jb     0x1003583e
10035839:	mov    edx,DWORD PTR [edx+0x4]
1003583c:	jmp    0x10035841
1003583e:	add    edx,0x4
10035841:	lea    ecx,[ebx+esi*1+0xd]
10035845:	mov    al,BYTE PTR [edx]
10035847:	mov    BYTE PTR [ecx],al
10035849:	add    edx,0x1
1003584c:	add    ecx,0x1
1003584f:	test   al,al
10035851:	jne    0x10035845
10035853:	mov    ecx,DWORD PTR [esp+0x14]
10035857:	mov    edx,DWORD PTR [ebp+0x8]
1003585a:	xor    ebx,ebx
1003585c:	push   ebx
1003585d:	lea    eax,[esp+0x20]
10035861:	push   eax
10035862:	mov    eax,DWORD PTR [edx]
10035864:	push   ebx
10035865:	push   ebx
10035866:	push   ecx
10035867:	push   esi
10035868:	push   0x22c084
1003586d:	push   eax
1003586e:	call   DWORD PTR ds:0x10066260
10035874:	test   eax,eax
10035876:	jne    0x10035916
1003587c:	push   0x7e891aec
10035881:	push   0x10073894
10035886:	call   0x100042d1
1003588b:	push   0xcf81ece
10035890:	push   eax
10035891:	call   0x100042d1
10035896:	push   eax
10035897:	push   0x16
10035899:	push   0x100738b8
1003589e:	call   0x100042e3
100358a3:	mov    esi,eax
100358a5:	mov    edi,0xf
100358aa:	push   esi
100358ab:	mov    DWORD PTR [esp+0x58],edi
100358af:	mov    DWORD PTR [esp+0x54],ebx
100358b3:	mov    BYTE PTR [esp+0x44],bl
100358b7:	call   0x10043250
100358bc:	add    esp,0x20
100358bf:	push   eax
100358c0:	push   esi
100358c1:	lea    ecx,[esp+0x28]
100358c5:	call   0x1000133f
100358ca:	lea    ecx,[esp+0x3c]
100358ce:	mov    BYTE PTR [esp+0x70],0x1
100358d3:	call   0x10043141
100358d8:	push   0xffffffff
100358da:	mov    BYTE PTR [esp+0x74],0x2
100358df:	push   ebx
100358e0:	lea    ecx,[esp+0x28]
100358e4:	push   ecx
100358e5:	lea    ecx,[esp+0x54]
100358e9:	mov    DWORD PTR [esp+0x48],0x10073674
100358f1:	mov    DWORD PTR [esp+0x6c],edi
100358f5:	mov    DWORD PTR [esp+0x68],ebx
100358f9:	mov    BYTE PTR [esp+0x58],bl
100358fd:	call   0x10001245
10035902:	push   0x10074e84
10035907:	lea    edx,[esp+0x40]
1003590b:	push   edx
1003590c:	mov    BYTE PTR [esp+0x78],0x1
10035911:	call   0x10047c54
10035916:	push   esi
10035917:	call   0x100430d2
1003591c:	add    esp,0x4
1003591f:	mov    ecx,DWORD PTR [esp+0x68]
10035923:	mov    DWORD PTR fs:0x0,ecx
1003592a:	pop    ecx
1003592b:	pop    edi
1003592c:	pop    esi
1003592d:	pop    ebx
1003592e:	mov    esp,ebp
10035930:	pop    ebp
10035931:	ret    0x8
10035934:	int3   
10035935:	int3   
10035936:	int3   
10035937:	int3   
10035938:	int3   
10035939:	int3   
1003593a:	int3   
1003593b:	int3   
1003593c:	int3   
1003593d:	int3   
1003593e:	int3   
1003593f:	int3   
10035940:	push   ebp
10035941:	mov    ebp,esp
10035943:	and    esp,0xfffffff8
10035946:	push   0xffffffff
10035948:	push   0x10061898
1003594d:	mov    eax,fs:0x0
10035953:	push   eax
10035954:	sub    esp,0x50
10035957:	push   ebx
10035958:	push   esi
10035959:	push   edi
1003595a:	mov    eax,ds:0x1007e030
1003595f:	xor    eax,esp
10035961:	push   eax
10035962:	lea    eax,[esp+0x60]
10035966:	mov    fs:0x0,eax
1003596c:	mov    ebx,DWORD PTR [ebp+0x10]
1003596f:	mov    DWORD PTR [esp+0x14],0x0
10035977:	mov    esi,DWORD PTR [ebx+0x14]
1003597a:	lea    eax,[esi+0x40d]
10035980:	push   eax
10035981:	call   0x100439b6
10035986:	mov    edi,eax
10035988:	add    esp,0x4
1003598b:	mov    DWORD PTR [esp+0x10],edi
1003598f:	add    esi,0x401
10035995:	mov    DWORD PTR [esp+0x68],0x0
1003599d:	mov    DWORD PTR [edi],esi
1003599f:	cmp    DWORD PTR [ebx+0x18],0x10
100359a3:	jb     0x100359aa
100359a5:	mov    ecx,DWORD PTR [ebx+0x4]
100359a8:	jmp    0x100359ad
100359aa:	lea    ecx,[ebx+0x4]
100359ad:	lea    edx,[edi+0xc]
100359b0:	mov    al,BYTE PTR [ecx]
100359b2:	mov    BYTE PTR [edx],al
100359b4:	add    ecx,0x1
100359b7:	add    edx,0x1
100359ba:	test   al,al
100359bc:	jne    0x100359b0
100359be:	mov    eax,DWORD PTR [edi]
100359c0:	mov    edx,DWORD PTR [ebp+0x8]
100359c3:	push   0x0
100359c5:	add    eax,0xc
100359c8:	lea    ecx,[esp+0x18]
100359cc:	push   ecx
100359cd:	push   eax
100359ce:	push   edi
100359cf:	push   eax
100359d0:	mov    eax,DWORD PTR [edx]
100359d2:	push   edi
100359d3:	push   0x22c088
100359d8:	push   eax
100359d9:	call   DWORD PTR ds:0x10066260
100359df:	test   eax,eax
100359e1:	jne    0x10035a78
100359e7:	push   0x4fe37068
100359ec:	push   0x100738d0
100359f1:	call   0x100042d1
100359f6:	push   eax
100359f7:	push   0x1b
100359f9:	push   0x10073900
100359fe:	call   0x100042e3
10035a03:	mov    esi,eax
10035a05:	xor    ebx,ebx
10035a07:	mov    edi,0xf
10035a0c:	push   esi
10035a0d:	mov    DWORD PTR [esp+0x48],edi
10035a11:	mov    DWORD PTR [esp+0x44],ebx
10035a15:	mov    BYTE PTR [esp+0x34],bl
10035a19:	call   0x10043250
10035a1e:	add    esp,0x18
10035a21:	push   eax
10035a22:	push   esi
10035a23:	lea    ecx,[esp+0x20]
10035a27:	call   0x1000133f
10035a2c:	lea    ecx,[esp+0x34]
10035a30:	mov    BYTE PTR [esp+0x68],0x1
10035a35:	call   0x10043141
10035a3a:	push   0xffffffff
10035a3c:	mov    BYTE PTR [esp+0x6c],0x2
10035a41:	push   ebx
10035a42:	lea    ecx,[esp+0x20]
10035a46:	push   ecx
10035a47:	lea    ecx,[esp+0x4c]
10035a4b:	mov    DWORD PTR [esp+0x40],0x10073674
10035a53:	mov    DWORD PTR [esp+0x64],edi
10035a57:	mov    DWORD PTR [esp+0x60],ebx
10035a5b:	mov    BYTE PTR [esp+0x50],bl
10035a5f:	call   0x10001245
10035a64:	push   0x10074e84
10035a69:	lea    edx,[esp+0x38]
10035a6d:	push   edx
10035a6e:	mov    BYTE PTR [esp+0x70],0x1
10035a73:	call   0x10047c54
10035a78:	cmp    DWORD PTR [edi+0x8],0x2
10035a7c:	je     0x10035ab8
10035a7e:	cmp    DWORD PTR [edi+0x8],0x0
10035a82:	je     0x10035be3
10035a88:	mov    esi,DWORD PTR [ebp+0xc]
10035a8b:	mov    DWORD PTR [esi+0x18],0xf
10035a92:	mov    DWORD PTR [esi+0x14],0x0
10035a99:	push   0x1006cd08
10035a9e:	mov    BYTE PTR [esi+0x4],0x0
10035aa2:	call   0x10043250
10035aa7:	add    esp,0x4
10035aaa:	push   eax
10035aab:	push   0x1006cd08
10035ab0:	jmp    0x10035c1e
10035ab5:	mov    ebx,DWORD PTR [ebp+0x10]
10035ab8:	mov    eax,DWORD PTR [ebx+0x14]
10035abb:	mov    ebx,DWORD PTR [edi]
10035abd:	lea    ecx,[eax+0x1]
10035ac0:	cmp    ebx,ecx
10035ac2:	ja     0x10035ac7
10035ac4:	lea    ebx,[eax+0x1]
10035ac7:	lea    edx,[ebx+0xc]
10035aca:	push   edx
10035acb:	call   0x100439b6
10035ad0:	mov    esi,eax
10035ad2:	add    esp,0x4
10035ad5:	cmp    esi,edi
10035ad7:	je     0x10035ae2
10035ad9:	push   edi
10035ada:	call   0x100430d2
10035adf:	add    esp,0x4
10035ae2:	mov    ecx,DWORD PTR [ebp+0x10]
10035ae5:	mov    edi,esi
10035ae7:	mov    DWORD PTR [esp+0x10],edi
10035aeb:	mov    DWORD PTR [esi],ebx
10035aed:	call   0x100011f3
10035af2:	lea    edx,[esi+0xc]
10035af5:	mov    cl,BYTE PTR [eax]
10035af7:	mov    BYTE PTR [edx],cl
10035af9:	add    eax,0x1
10035afc:	add    edx,0x1
10035aff:	test   cl,cl
10035b01:	jne    0x10035af5
10035b03:	mov    eax,DWORD PTR [esi]
10035b05:	mov    edx,DWORD PTR [ebp+0x8]
10035b08:	push   0x0
10035b0a:	add    eax,0xc
10035b0d:	lea    ecx,[esp+0x18]
10035b11:	push   ecx
10035b12:	push   eax
10035b13:	push   esi
10035b14:	push   eax
10035b15:	mov    eax,DWORD PTR [edx]
10035b17:	push   esi
10035b18:	push   0x22c088
10035b1d:	push   eax
10035b1e:	call   DWORD PTR ds:0x10066260
10035b24:	test   eax,eax
10035b26:	je     0x10035b33
10035b28:	cmp    DWORD PTR [esi+0x8],0x2
10035b2c:	je     0x10035ab5
10035b2e:	jmp    0x10035a7e
10035b33:	push   0x1166bfa8
10035b38:	push   0x1007391c
10035b3d:	call   0x100042d1
10035b42:	push   0x14990ae4
10035b47:	push   eax
10035b48:	call   0x100042d1
10035b4d:	push   0x50427720
10035b52:	push   eax
10035b53:	call   0x100042d1
10035b58:	push   eax
10035b59:	push   0x16
10035b5b:	push   0x10073944
10035b60:	call   0x100042e3
10035b65:	mov    esi,eax
10035b67:	mov    edi,0xf
10035b6c:	push   esi
10035b6d:	mov    DWORD PTR [esp+0x58],edi
10035b71:	mov    DWORD PTR [esp+0x54],0x0
10035b79:	mov    BYTE PTR [esp+0x44],0x0
10035b7e:	call   0x10043250
10035b83:	add    esp,0x28
10035b86:	push   eax
10035b87:	push   esi
10035b88:	lea    ecx,[esp+0x20]
10035b8c:	call   0x1000133f
10035b91:	mov    bl,0x3
10035b93:	lea    ecx,[esp+0x34]
10035b97:	mov    BYTE PTR [esp+0x68],bl
10035b9b:	call   0x10043141
10035ba0:	push   0xffffffff
10035ba2:	mov    BYTE PTR [esp+0x6c],0x4
10035ba7:	push   0x0
10035ba9:	lea    ecx,[esp+0x20]
10035bad:	push   ecx
10035bae:	lea    ecx,[esp+0x4c]
10035bb2:	mov    DWORD PTR [esp+0x40],0x10073674
10035bba:	mov    DWORD PTR [esp+0x64],edi
10035bbe:	mov    DWORD PTR [esp+0x60],0x0
10035bc6:	mov    BYTE PTR [esp+0x50],0x0
10035bcb:	call   0x10001245
10035bd0:	push   0x10074e84
10035bd5:	lea    edx,[esp+0x38]
10035bd9:	push   edx
10035bda:	mov    BYTE PTR [esp+0x70],bl
10035bde:	call   0x10047c54
10035be3:	lea    eax,[edi+0xc]
10035be6:	lea    edx,[eax+0x1]
10035be9:	lea    esp,[esp+0x0]
10035bf0:	mov    cl,BYTE PTR [eax]
10035bf2:	add    eax,0x1
10035bf5:	test   cl,cl
10035bf7:	jne    0x10035bf0
10035bf9:	mov    esi,DWORD PTR [ebp+0xc]
10035bfc:	sub    eax,edx
10035bfe:	lea    ebx,[eax+edi*1+0xd]
10035c02:	mov    DWORD PTR [esi+0x18],0xf
10035c09:	mov    DWORD PTR [esi+0x14],0x0
10035c10:	push   ebx
10035c11:	mov    BYTE PTR [esi+0x4],cl
10035c14:	call   0x10043250
10035c19:	add    esp,0x4
10035c1c:	push   eax
10035c1d:	push   ebx
10035c1e:	mov    ecx,esi
10035c20:	call   0x1000133f
10035c25:	push   edi
10035c26:	call   0x100430d2
10035c2b:	mov    eax,esi
10035c2d:	add    esp,0x4
10035c30:	mov    ecx,DWORD PTR [esp+0x60]
10035c34:	mov    DWORD PTR fs:0x0,ecx
10035c3b:	pop    ecx
10035c3c:	pop    edi
10035c3d:	pop    esi
10035c3e:	pop    ebx
10035c3f:	mov    esp,ebp
10035c41:	pop    ebp
10035c42:	ret    0xc
10035c45:	int3   
10035c46:	int3   
10035c47:	int3   
10035c48:	int3   
10035c49:	int3   
10035c4a:	int3   
10035c4b:	int3   
10035c4c:	int3   
10035c4d:	int3   
10035c4e:	int3   
10035c4f:	int3   
10035c50:	push   ebp
10035c51:	mov    ebp,esp
10035c53:	and    esp,0xfffffff8
10035c56:	push   0xffffffff
10035c58:	push   0x10061850
10035c5d:	mov    eax,fs:0x0
10035c63:	push   eax
10035c64:	sub    esp,0x64
10035c67:	push   ebx
10035c68:	push   esi
10035c69:	mov    eax,ds:0x1007e030
10035c6e:	xor    eax,esp
10035c70:	push   eax
10035c71:	lea    eax,[esp+0x70]
10035c75:	mov    fs:0x0,eax
10035c7b:	mov    esi,ecx
10035c7d:	mov    eax,DWORD PTR [ebp+0xc]
10035c80:	xor    ebx,ebx
10035c82:	push   ebx
10035c83:	lea    ecx,[esp+0x14]
10035c87:	push   ecx
10035c88:	mov    ecx,DWORD PTR [ebp+0x8]
10035c8b:	push   0x10
10035c8d:	lea    edx,[esp+0x20]
10035c91:	push   edx
10035c92:	push   0x10
10035c94:	mov    DWORD PTR [esp+0x28],eax
10035c98:	mov    eax,edx
10035c9a:	mov    edx,DWORD PTR [ecx]
10035c9c:	push   eax
10035c9d:	push   0x22c020
10035ca2:	push   edx
10035ca3:	call   DWORD PTR ds:0x10066260
10035ca9:	test   eax,eax
10035cab:	jne    0x10035d65
10035cb1:	push   0x23ecfeae
10035cb6:	push   0x1007395c
10035cbb:	call   0x100042d1
10035cc0:	push   0x2e4dacec
10035cc5:	push   eax
10035cc6:	call   0x100042d1
10035ccb:	push   0x2e7d1516
10035cd0:	push   eax
10035cd1:	call   0x100042d1
10035cd6:	push   0x4d0b22c6
10035cdb:	push   eax
10035cdc:	call   0x100042d1
10035ce1:	push   eax
10035ce2:	push   0x1e
10035ce4:	push   0x10073980
10035ce9:	call   0x100042e3
10035cee:	mov    esi,eax
10035cf0:	push   esi
10035cf1:	mov    DWORD PTR [esp+0x70],0xf
10035cf9:	mov    DWORD PTR [esp+0x6c],ebx
10035cfd:	mov    BYTE PTR [esp+0x5c],bl
10035d01:	call   0x10043250
10035d06:	add    esp,0x30
10035d09:	push   eax
10035d0a:	push   esi
10035d0b:	lea    ecx,[esp+0x30]
10035d0f:	call   0x1000133f
10035d14:	lea    ecx,[esp+0x44]
10035d18:	mov    DWORD PTR [esp+0x78],ebx
10035d1c:	call   0x10043141
10035d21:	push   0xffffffff
10035d23:	mov    BYTE PTR [esp+0x7c],0x1
10035d28:	push   ebx
10035d29:	lea    eax,[esp+0x30]
10035d2d:	push   eax
10035d2e:	lea    ecx,[esp+0x5c]
10035d32:	mov    DWORD PTR [esp+0x50],0x10073674
10035d3a:	mov    DWORD PTR [esp+0x74],0xf
10035d42:	mov    DWORD PTR [esp+0x70],ebx
10035d46:	mov    BYTE PTR [esp+0x60],bl
10035d4a:	call   0x10001245
10035d4f:	push   0x10074e84
10035d54:	lea    ecx,[esp+0x48]
10035d58:	push   ecx
10035d59:	mov    BYTE PTR [esp+0x80],bl
10035d60:	call   0x10047c54
10035d65:	mov    eax,DWORD PTR [esp+0x20]
10035d69:	mov    edx,DWORD PTR [esp+0x1c]
10035d6d:	mov    DWORD PTR [esi+0x4],eax
10035d70:	mov    DWORD PTR [esi],edx
10035d72:	mov    eax,esi
10035d74:	mov    ecx,DWORD PTR [esp+0x70]
10035d78:	mov    DWORD PTR fs:0x0,ecx
10035d7f:	pop    ecx
10035d80:	pop    esi
10035d81:	pop    ebx
10035d82:	mov    esp,ebp
10035d84:	pop    ebp
10035d85:	ret    0x8
10035d88:	int3   
10035d89:	int3   
10035d8a:	int3   
10035d8b:	int3   
10035d8c:	int3   
10035d8d:	int3   
10035d8e:	int3   
10035d8f:	int3   
10035d90:	push   ebp
10035d91:	mov    ebp,esp
10035d93:	and    esp,0xfffffff8
10035d96:	push   0xffffffff
10035d98:	push   0x10061850
10035d9d:	mov    eax,fs:0x0
10035da3:	push   eax
10035da4:	sub    esp,0x64
10035da7:	push   ebx
10035da8:	push   esi
10035da9:	mov    eax,ds:0x1007e030
10035dae:	xor    eax,esp
10035db0:	push   eax
10035db1:	lea    eax,[esp+0x70]
10035db5:	mov    fs:0x0,eax
10035dbb:	mov    eax,DWORD PTR [ebp+0xc]
10035dbe:	mov    edx,DWORD PTR [eax]
10035dc0:	mov    eax,DWORD PTR [eax+0x4]
10035dc3:	mov    DWORD PTR [esp+0x14],ecx
10035dc7:	xor    ebx,ebx
10035dc9:	push   ebx
10035dca:	lea    ecx,[esp+0x14]
10035dce:	push   ecx
10035dcf:	mov    ecx,DWORD PTR [ebp+0x8]
10035dd2:	push   0x10
10035dd4:	mov    DWORD PTR [esp+0x28],edx
10035dd8:	lea    edx,[esp+0x20]
10035ddc:	push   edx
10035ddd:	push   0x10
10035ddf:	mov    DWORD PTR [esp+0x34],eax
10035de3:	mov    eax,edx
10035de5:	mov    edx,DWORD PTR [ecx]
10035de7:	push   eax
10035de8:	push   0x22c024
10035ded:	push   edx
10035dee:	call   DWORD PTR ds:0x10066260
10035df4:	test   eax,eax
10035df6:	jne    0x10035ea5
10035dfc:	push   0x30ed277a
10035e01:	push   0x100739a0
10035e06:	call   0x100042d1
10035e0b:	push   0x51583a26
10035e10:	push   eax
10035e11:	call   0x100042d1
10035e16:	push   0x743962a0
10035e1b:	push   eax
10035e1c:	call   0x100042d1
10035e21:	push   eax
10035e22:	push   0x1e
10035e24:	push   0x100739c4
10035e29:	call   0x100042e3
10035e2e:	mov    esi,eax
10035e30:	push   esi
10035e31:	mov    DWORD PTR [esp+0x68],0xf
10035e39:	mov    DWORD PTR [esp+0x64],ebx
10035e3d:	mov    BYTE PTR [esp+0x54],bl
10035e41:	call   0x10043250
10035e46:	add    esp,0x28
10035e49:	push   eax
10035e4a:	push   esi
10035e4b:	lea    ecx,[esp+0x30]
10035e4f:	call   0x1000133f
10035e54:	lea    ecx,[esp+0x44]
10035e58:	mov    DWORD PTR [esp+0x78],ebx
10035e5c:	call   0x10043141
10035e61:	push   0xffffffff
10035e63:	mov    BYTE PTR [esp+0x7c],0x1
10035e68:	push   ebx
10035e69:	lea    eax,[esp+0x30]
10035e6d:	push   eax
10035e6e:	lea    ecx,[esp+0x5c]
10035e72:	mov    DWORD PTR [esp+0x50],0x10073674
10035e7a:	mov    DWORD PTR [esp+0x74],0xf
10035e82:	mov    DWORD PTR [esp+0x70],ebx
10035e86:	mov    BYTE PTR [esp+0x60],bl
10035e8a:	call   0x10001245
10035e8f:	push   0x10074e84
10035e94:	lea    ecx,[esp+0x48]
10035e98:	push   ecx
10035e99:	mov    BYTE PTR [esp+0x80],bl
10035ea0:	call   0x10047c54
10035ea5:	mov    ecx,DWORD PTR [esp+0x70]
10035ea9:	mov    DWORD PTR fs:0x0,ecx
10035eb0:	pop    ecx
10035eb1:	pop    esi
10035eb2:	pop    ebx
10035eb3:	mov    esp,ebp
10035eb5:	pop    ebp
10035eb6:	ret    0x8
10035eb9:	int3   
10035eba:	int3   
10035ebb:	int3   
10035ebc:	int3   
10035ebd:	int3   
10035ebe:	int3   
10035ebf:	int3   
10035ec0:	push   0xffffffff
10035ec2:	push   0x10061820
10035ec7:	mov    eax,fs:0x0
10035ecd:	push   eax
10035ece:	sub    esp,0x4c
10035ed1:	push   ebx
10035ed2:	push   esi
10035ed3:	mov    eax,ds:0x1007e030
10035ed8:	xor    eax,esp
10035eda:	push   eax
10035edb:	lea    eax,[esp+0x58]
10035edf:	mov    fs:0x0,eax
10035ee5:	mov    eax,DWORD PTR [esp+0x6c]
10035ee9:	xor    ebx,ebx
10035eeb:	push   ebx
10035eec:	lea    edx,[esp+0x70]
10035ef0:	push   edx
10035ef1:	mov    edx,DWORD PTR [esp+0x70]
10035ef5:	push   0x8
10035ef7:	mov    DWORD PTR [esp+0x18],eax
10035efb:	lea    eax,[esp+0x18]
10035eff:	push   eax
10035f00:	push   0x8
10035f02:	mov    DWORD PTR [esp+0x24],ecx
10035f06:	mov    ecx,eax
10035f08:	mov    eax,DWORD PTR [edx]
10035f0a:	push   ecx
10035f0b:	push   0x22c05c
10035f10:	push   eax
10035f11:	call   DWORD PTR ds:0x10066260
10035f17:	test   eax,eax
10035f19:	jne    0x10035fa4
10035f1f:	push   0x100739e4
10035f24:	push   0x1b
10035f26:	push   0x10073a1c
10035f2b:	call   0x100042e3
10035f30:	mov    esi,eax
10035f32:	push   esi
10035f33:	mov    DWORD PTR [esp+0x3c],0xf
10035f3b:	mov    DWORD PTR [esp+0x38],ebx
10035f3f:	mov    BYTE PTR [esp+0x28],bl
10035f43:	call   0x10043250
10035f48:	add    esp,0x10
10035f4b:	push   eax
10035f4c:	push   esi
10035f4d:	lea    ecx,[esp+0x1c]
10035f51:	call   0x1000133f
10035f56:	lea    ecx,[esp+0x30]
10035f5a:	mov    DWORD PTR [esp+0x60],ebx
10035f5e:	call   0x10043141
10035f63:	push   0xffffffff
10035f65:	mov    BYTE PTR [esp+0x64],0x1
10035f6a:	push   ebx
10035f6b:	lea    ecx,[esp+0x1c]
10035f6f:	push   ecx
10035f70:	lea    ecx,[esp+0x48]
10035f74:	mov    DWORD PTR [esp+0x3c],0x10073674
10035f7c:	mov    DWORD PTR [esp+0x60],0xf
10035f84:	mov    DWORD PTR [esp+0x5c],ebx
10035f88:	mov    BYTE PTR [esp+0x4c],bl
10035f8c:	call   0x10001245
10035f91:	push   0x10074e84
10035f96:	lea    edx,[esp+0x34]
10035f9a:	push   edx
10035f9b:	mov    BYTE PTR [esp+0x68],bl
10035f9f:	call   0x10047c54
10035fa4:	mov    ecx,DWORD PTR [esp+0x58]
10035fa8:	mov    DWORD PTR fs:0x0,ecx
10035faf:	pop    ecx
10035fb0:	pop    esi
10035fb1:	pop    ebx
10035fb2:	add    esp,0x58
10035fb5:	ret    0x8
10035fb8:	int3   
10035fb9:	int3   
10035fba:	int3   
10035fbb:	int3   
10035fbc:	int3   
10035fbd:	int3   
10035fbe:	int3   
10035fbf:	int3   
10035fc0:	push   ebp
10035fc1:	mov    ebp,esp
10035fc3:	and    esp,0xfffffff8
10035fc6:	push   0xffffffff
10035fc8:	push   0x100617c0
10035fcd:	mov    eax,fs:0x0
10035fd3:	push   eax
10035fd4:	sub    esp,0x54
10035fd7:	push   ebx
10035fd8:	push   esi
10035fd9:	mov    eax,ds:0x1007e030
10035fde:	xor    eax,esp
10035fe0:	push   eax
10035fe1:	lea    eax,[esp+0x60]
10035fe5:	mov    fs:0x0,eax
10035feb:	xor    ebx,ebx
10035fed:	push   ebx
10035fee:	lea    eax,[esp+0x10]
10035ff2:	push   eax
10035ff3:	mov    eax,DWORD PTR [ebp+0x8]
10035ff6:	push   0x8
10035ff8:	lea    ecx,[esp+0x1c]
10035ffc:	push   ecx
10035ffd:	push   0x8
10035fff:	mov    edx,ecx
10036001:	mov    ecx,DWORD PTR [eax]
10036003:	push   edx
10036004:	push   0x22c060
10036009:	push   ecx
1003600a:	mov    DWORD PTR [esp+0x30],ebx
1003600e:	mov    DWORD PTR [esp+0x34],ebx
10036012:	call   DWORD PTR ds:0x10066260
10036018:	test   eax,eax
1003601a:	jne    0x100360b0
10036020:	push   0x161b4cc0
10036025:	push   0x10073a38
1003602a:	call   0x100042d1
1003602f:	push   eax
10036030:	push   0x1b
10036032:	push   0x10073a1c
10036037:	call   0x100042e3
1003603c:	mov    esi,eax
1003603e:	push   esi
1003603f:	mov    DWORD PTR [esp+0x48],0xf
10036047:	mov    DWORD PTR [esp+0x44],ebx
1003604b:	mov    BYTE PTR [esp+0x34],bl
1003604f:	call   0x10043250
10036054:	add    esp,0x18
10036057:	push   eax
10036058:	push   esi
10036059:	lea    ecx,[esp+0x20]
1003605d:	call   0x1000133f
10036062:	lea    ecx,[esp+0x34]
10036066:	mov    DWORD PTR [esp+0x68],ebx
1003606a:	call   0x10043141
1003606f:	push   0xffffffff
10036071:	mov    BYTE PTR [esp+0x6c],0x1
10036076:	push   ebx
10036077:	lea    edx,[esp+0x20]
1003607b:	push   edx
1003607c:	lea    ecx,[esp+0x4c]
10036080:	mov    DWORD PTR [esp+0x40],0x10073674
10036088:	mov    DWORD PTR [esp+0x64],0xf
10036090:	mov    DWORD PTR [esp+0x60],ebx
10036094:	mov    BYTE PTR [esp+0x50],bl
10036098:	call   0x10001245
1003609d:	push   0x10074e84
100360a2:	lea    eax,[esp+0x38]
100360a6:	push   eax
100360a7:	mov    BYTE PTR [esp+0x70],bl
100360ab:	call   0x10047c54
100360b0:	mov    eax,DWORD PTR [esp+0x14]
100360b4:	mov    ecx,DWORD PTR [esp+0x60]
100360b8:	mov    DWORD PTR fs:0x0,ecx
100360bf:	pop    ecx
100360c0:	pop    esi
100360c1:	pop    ebx
100360c2:	mov    esp,ebp
100360c4:	pop    ebp
100360c5:	ret    0x4
100360c8:	int3   
100360c9:	int3   
100360ca:	int3   
100360cb:	int3   
100360cc:	int3   
100360cd:	int3   
100360ce:	int3   
100360cf:	int3   
100360d0:	push   0xffffffff
100360d2:	push   0x10061820
100360d7:	mov    eax,fs:0x0
100360dd:	push   eax
100360de:	sub    esp,0x4c
100360e1:	push   ebx
100360e2:	push   esi
100360e3:	mov    eax,ds:0x1007e030
100360e8:	xor    eax,esp
100360ea:	push   eax
100360eb:	lea    eax,[esp+0x58]
100360ef:	mov    fs:0x0,eax
100360f5:	mov    eax,DWORD PTR [esp+0x6c]
100360f9:	xor    ebx,ebx
100360fb:	push   ebx
100360fc:	lea    edx,[esp+0x70]
10036100:	push   edx
10036101:	mov    edx,DWORD PTR [esp+0x70]
10036105:	push   0x8
10036107:	mov    DWORD PTR [esp+0x18],eax
1003610b:	lea    eax,[esp+0x18]
1003610f:	push   eax
10036110:	push   0x8
10036112:	mov    DWORD PTR [esp+0x24],ecx
10036116:	mov    ecx,eax
10036118:	mov    eax,DWORD PTR [edx]
1003611a:	push   ecx
1003611b:	push   0x22c07c
10036120:	push   eax
10036121:	call   DWORD PTR ds:0x10066260
10036127:	test   eax,eax
10036129:	jne    0x100361bf
1003612f:	push   0x6404be4e
10036134:	push   0x10073a6c
10036139:	call   0x100042d1
1003613e:	push   eax
1003613f:	push   0x1b
10036141:	push   0x10073a1c
10036146:	call   0x100042e3
1003614b:	mov    esi,eax
1003614d:	push   esi
1003614e:	mov    DWORD PTR [esp+0x44],0xf
10036156:	mov    DWORD PTR [esp+0x40],ebx
1003615a:	mov    BYTE PTR [esp+0x30],bl
1003615e:	call   0x10043250
10036163:	add    esp,0x18
10036166:	push   eax
10036167:	push   esi
10036168:	lea    ecx,[esp+0x1c]
1003616c:	call   0x1000133f
10036171:	lea    ecx,[esp+0x30]
10036175:	mov    DWORD PTR [esp+0x60],ebx
10036179:	call   0x10043141
1003617e:	push   0xffffffff
10036180:	mov    BYTE PTR [esp+0x64],0x1
10036185:	push   ebx
10036186:	lea    ecx,[esp+0x1c]
1003618a:	push   ecx
1003618b:	lea    ecx,[esp+0x48]
1003618f:	mov    DWORD PTR [esp+0x3c],0x10073674
10036197:	mov    DWORD PTR [esp+0x60],0xf
1003619f:	mov    DWORD PTR [esp+0x5c],ebx
100361a3:	mov    BYTE PTR [esp+0x4c],bl
100361a7:	call   0x10001245
100361ac:	push   0x10074e84
100361b1:	lea    edx,[esp+0x34]
100361b5:	push   edx
100361b6:	mov    BYTE PTR [esp+0x68],bl
100361ba:	call   0x10047c54
100361bf:	mov    ecx,DWORD PTR [esp+0x58]
100361c3:	mov    DWORD PTR fs:0x0,ecx
100361ca:	pop    ecx
100361cb:	pop    esi
100361cc:	pop    ebx
100361cd:	add    esp,0x58
100361d0:	ret    0x8
100361d3:	int3   
100361d4:	int3   
100361d5:	int3   
100361d6:	int3   
100361d7:	int3   
100361d8:	int3   
100361d9:	int3   
100361da:	int3   
100361db:	int3   
100361dc:	int3   
100361dd:	int3   
100361de:	int3   
100361df:	int3   
100361e0:	push   0xffffffff
100361e2:	push   0x100617f0
100361e7:	mov    eax,fs:0x0
100361ed:	push   eax
100361ee:	sub    esp,0x50
100361f1:	push   ebx
100361f2:	push   esi
100361f3:	mov    eax,ds:0x1007e030
100361f8:	xor    eax,esp
100361fa:	push   eax
100361fb:	lea    eax,[esp+0x5c]
100361ff:	mov    fs:0x0,eax
10036205:	xor    ebx,ebx
10036207:	push   ebx
10036208:	lea    eax,[esp+0x70]
1003620c:	push   eax
1003620d:	mov    eax,DWORD PTR [esp+0x74]
10036211:	push   0x8
10036213:	lea    ecx,[esp+0x18]
10036217:	push   ecx
10036218:	push   0x8
1003621a:	mov    edx,ecx
1003621c:	mov    ecx,DWORD PTR [eax]
1003621e:	push   edx
1003621f:	push   0x22c080
10036224:	push   ecx
10036225:	mov    DWORD PTR [esp+0x2c],ebx
10036229:	mov    DWORD PTR [esp+0x30],ebx
1003622d:	call   DWORD PTR ds:0x10066260
10036233:	test   eax,eax
10036235:	jne    0x100362c0
1003623b:	push   0x10073aa4
10036240:	push   0x1b
10036242:	push   0x10073a1c
10036247:	call   0x100042e3
1003624c:	mov    esi,eax
1003624e:	push   esi
1003624f:	mov    DWORD PTR [esp+0x3c],0xf
10036257:	mov    DWORD PTR [esp+0x38],ebx
1003625b:	mov    BYTE PTR [esp+0x28],bl
1003625f:	call   0x10043250
10036264:	add    esp,0x10
10036267:	push   eax
10036268:	push   esi
10036269:	lea    ecx,[esp+0x1c]
1003626d:	call   0x1000133f
10036272:	lea    ecx,[esp+0x30]
10036276:	mov    DWORD PTR [esp+0x64],ebx
1003627a:	call   0x10043141
1003627f:	push   0xffffffff
10036281:	mov    BYTE PTR [esp+0x68],0x1
10036286:	push   ebx
10036287:	lea    edx,[esp+0x1c]
1003628b:	push   edx
1003628c:	lea    ecx,[esp+0x48]
10036290:	mov    DWORD PTR [esp+0x3c],0x10073674
10036298:	mov    DWORD PTR [esp+0x60],0xf
100362a0:	mov    DWORD PTR [esp+0x5c],ebx
100362a4:	mov    BYTE PTR [esp+0x4c],bl
100362a8:	call   0x10001245
100362ad:	push   0x10074e84
100362b2:	lea    eax,[esp+0x34]
100362b6:	push   eax
100362b7:	mov    BYTE PTR [esp+0x6c],bl
100362bb:	call   0x10047c54
100362c0:	mov    eax,DWORD PTR [esp+0xc]
100362c4:	xor    ecx,ecx
100362c6:	cmp    eax,ebx
100362c8:	setl   cl
100362cb:	sub    ecx,0x1
100362ce:	and    eax,ecx
100362d0:	mov    ecx,DWORD PTR [esp+0x5c]
100362d4:	mov    DWORD PTR fs:0x0,ecx
100362db:	pop    ecx
100362dc:	pop    esi
100362dd:	pop    ebx
100362de:	add    esp,0x5c
100362e1:	ret    0x4
100362e4:	int3   
100362e5:	int3   
100362e6:	int3   
100362e7:	int3   
100362e8:	int3   
100362e9:	int3   
100362ea:	int3   
100362eb:	int3   
100362ec:	int3   
100362ed:	int3   
100362ee:	int3   
100362ef:	int3   
100362f0:	push   ebp
100362f1:	mov    ebp,esp
100362f3:	and    esp,0xfffffff8
100362f6:	push   0xffffffff
100362f8:	push   0x100617c0
100362fd:	mov    eax,fs:0x0
10036303:	push   eax
10036304:	sub    esp,0x54
10036307:	push   ebx
10036308:	push   esi
10036309:	mov    eax,ds:0x1007e030
1003630e:	xor    eax,esp
10036310:	push   eax
10036311:	lea    eax,[esp+0x60]
10036315:	mov    fs:0x0,eax
1003631b:	xor    ebx,ebx
1003631d:	push   ebx
1003631e:	lea    eax,[esp+0x10]
10036322:	push   eax
10036323:	mov    eax,DWORD PTR [ebp+0x8]
10036326:	push   0x8
10036328:	lea    ecx,[esp+0x1c]
1003632c:	push   ecx
1003632d:	push   0x8
1003632f:	mov    edx,ecx
10036331:	mov    ecx,DWORD PTR [eax]
10036333:	push   edx
10036334:	push   0x22c080
10036339:	push   ecx
1003633a:	mov    DWORD PTR [esp+0x30],ebx
1003633e:	mov    DWORD PTR [esp+0x34],ebx
10036342:	call   DWORD PTR ds:0x10066260
10036348:	test   eax,eax
1003634a:	jne    0x100363eb
10036350:	push   0x7bca0f0
10036355:	push   0x10073ae0
1003635a:	call   0x100042d1
1003635f:	push   0x1f1a0b02
10036364:	push   eax
10036365:	call   0x100042d1
1003636a:	push   eax
1003636b:	push   0x1b
1003636d:	push   0x10073a1c
10036372:	call   0x100042e3
10036377:	mov    esi,eax
10036379:	push   esi
1003637a:	mov    DWORD PTR [esp+0x50],0xf
10036382:	mov    DWORD PTR [esp+0x4c],ebx
10036386:	mov    BYTE PTR [esp+0x3c],bl
1003638a:	call   0x10043250
1003638f:	add    esp,0x20
10036392:	push   eax
10036393:	push   esi
10036394:	lea    ecx,[esp+0x20]
10036398:	call   0x1000133f
1003639d:	lea    ecx,[esp+0x34]
100363a1:	mov    DWORD PTR [esp+0x68],ebx
100363a5:	call   0x10043141
100363aa:	push   0xffffffff
100363ac:	mov    BYTE PTR [esp+0x6c],0x1
100363b1:	push   ebx
100363b2:	lea    edx,[esp+0x20]
100363b6:	push   edx
100363b7:	lea    ecx,[esp+0x4c]
100363bb:	mov    DWORD PTR [esp+0x40],0x10073674
100363c3:	mov    DWORD PTR [esp+0x64],0xf
100363cb:	mov    DWORD PTR [esp+0x60],ebx
100363cf:	mov    BYTE PTR [esp+0x50],bl
100363d3:	call   0x10001245
100363d8:	push   0x10074e84
100363dd:	lea    eax,[esp+0x38]
100363e1:	push   eax
100363e2:	mov    BYTE PTR [esp+0x70],bl
100363e6:	call   0x10047c54
100363eb:	mov    eax,DWORD PTR [esp+0x14]
100363ef:	mov    ecx,DWORD PTR [esp+0x60]
100363f3:	mov    DWORD PTR fs:0x0,ecx
100363fa:	pop    ecx
100363fb:	pop    esi
100363fc:	pop    ebx
100363fd:	mov    esp,ebp
100363ff:	pop    ebp
10036400:	ret    0x4
10036403:	int3   
10036404:	int3   
10036405:	int3   
10036406:	int3   
10036407:	int3   
10036408:	int3   
10036409:	int3   
1003640a:	int3   
1003640b:	int3   
1003640c:	int3   
1003640d:	int3   
1003640e:	int3   
1003640f:	int3   
10036410:	push   0xffffffff
10036412:	push   0x10061788
10036417:	mov    eax,fs:0x0
1003641d:	push   eax
1003641e:	push   ecx
1003641f:	push   ebx
10036420:	push   esi
10036421:	push   edi
10036422:	mov    eax,ds:0x1007e030
10036427:	xor    eax,esp
10036429:	push   eax
1003642a:	lea    eax,[esp+0x14]
1003642e:	mov    fs:0x0,eax
10036434:	mov    edi,ecx
10036436:	mov    eax,DWORD PTR [edi+0x14]
10036439:	lea    ebx,[eax+0x5]
1003643c:	push   ebx
1003643d:	call   0x100439b6
10036442:	mov    esi,eax
10036444:	add    esp,0x4
10036447:	mov    DWORD PTR [esp+0x10],esi
1003644b:	mov    DWORD PTR [esp+0x1c],0x0
10036453:	mov    eax,DWORD PTR [esp+0x28]
10036457:	mov    DWORD PTR [esi],eax
10036459:	cmp    DWORD PTR [edi+0x18],0x10
1003645d:	mov    eax,DWORD PTR [edi+0x14]
10036460:	jb     0x10036467
10036462:	mov    edi,DWORD PTR [edi+0x4]
10036465:	jmp    0x1003646a
10036467:	add    edi,0x4
1003646a:	add    eax,0x1
1003646d:	push   eax
1003646e:	lea    ecx,[esi+0x4]
10036471:	push   edi
10036472:	push   ecx
10036473:	call   0x10045420
10036478:	mov    edx,DWORD PTR [esp+0x30]
1003647c:	add    esp,0xc
1003647f:	push   esi
10036480:	push   0x5
10036482:	push   edx
10036483:	mov    ecx,ebx
10036485:	call   0x10036b70
1003648a:	push   esi
1003648b:	call   0x100430d2
10036490:	add    esp,0x4
10036493:	mov    ecx,DWORD PTR [esp+0x14]
10036497:	mov    DWORD PTR fs:0x0,ecx
1003649e:	pop    ecx
1003649f:	pop    edi
100364a0:	pop    esi
100364a1:	pop    ebx
100364a2:	add    esp,0x10
100364a5:	ret    0x8
100364a8:	int3   
100364a9:	int3   
100364aa:	int3   
100364ab:	int3   
100364ac:	int3   
100364ad:	int3   
100364ae:	int3   
100364af:	int3   
100364b0:	push   ebp
100364b1:	mov    ebp,esp
100364b3:	push   0xffffffff
100364b5:	push   0x100627f0
100364ba:	mov    eax,fs:0x0
100364c0:	push   eax
100364c1:	sub    esp,0x38
100364c4:	push   ebx
100364c5:	push   esi
100364c6:	push   edi
100364c7:	mov    eax,ds:0x1007e030
100364cc:	xor    eax,ebp
100364ce:	push   eax
100364cf:	lea    eax,[ebp-0xc]
100364d2:	mov    fs:0x0,eax
100364d8:	mov    DWORD PTR [ebp-0x10],esp
100364db:	mov    ebx,ecx
100364dd:	lea    eax,[ebp-0x14]
100364e0:	push   eax
100364e1:	push   0x5
100364e3:	lea    ecx,[ebp-0x18]
100364e6:	xor    esi,esi
100364e8:	push   ecx
100364e9:	mov    DWORD PTR [ebp-0x4],esi
100364ec:	push   edx
100364ed:	mov    DWORD PTR [ebp-0x14],esi
100364f0:	call   0x10036cc0
100364f5:	mov    ecx,DWORD PTR [eax]
100364f7:	mov    edi,ecx
100364f9:	mov    DWORD PTR [eax],esi
100364fb:	mov    DWORD PTR [ebp-0x1c],edi
100364fe:	mov    BYTE PTR [ebp-0x4],0x1
10036502:	mov    edx,DWORD PTR [ebp-0x18]
10036505:	push   edx
10036506:	call   0x100430d2
1003650b:	mov    eax,DWORD PTR [ebp-0x14]
1003650e:	add    esp,0x4
10036511:	cmp    eax,esi
10036513:	jne    0x10036534
10036515:	push   edi
10036516:	call   0x100430d2
1003651b:	add    esp,0x4
1003651e:	xor    al,al
10036520:	mov    ecx,DWORD PTR [ebp-0xc]
10036523:	mov    DWORD PTR fs:0x0,ecx
1003652a:	pop    ecx
1003652b:	pop    edi
1003652c:	pop    esi
1003652d:	pop    ebx
1003652e:	mov    esp,ebp
10036530:	pop    ebp
10036531:	ret    0x4
10036534:	mov    DWORD PTR [ebp-0x24],eax
10036537:	lea    eax,[ebp-0x28]
1003653a:	push   eax
1003653b:	mov    DWORD PTR [ebp-0x28],esi
1003653e:	mov    DWORD PTR [ebp-0x20],edi
10036541:	call   0x100379d0
10036546:	mov    ecx,DWORD PTR [ebp+0x8]
10036549:	lea    edx,[ebp-0x28]
1003654c:	push   edx
1003654d:	lea    esi,[ebp-0x44]
10036550:	mov    DWORD PTR [ecx],eax
10036552:	call   0x10037690
10036557:	push   0xffffffff
10036559:	push   0x0
1003655b:	push   eax
1003655c:	mov    ecx,ebx
1003655e:	mov    BYTE PTR [ebp-0x4],0x2
10036562:	call   0x10001245
10036567:	cmp    DWORD PTR [ebp-0x2c],0x10
1003656b:	jb     0x10036579
1003656d:	mov    eax,DWORD PTR [ebp-0x40]
10036570:	push   eax
10036571:	call   0x100430d2
10036576:	add    esp,0x4
10036579:	push   edi
1003657a:	call   0x100430d2
1003657f:	push   0x1006cd08
10036584:	call   0x10043250
10036589:	mov    esi,DWORD PTR [ebx+0x14]
1003658c:	mov    edi,eax
1003658e:	add    esp,0x8
10036591:	cmp    esi,edi
10036593:	mov    eax,esi
10036595:	jb     0x10036599
10036597:	mov    eax,edi
10036599:	cmp    DWORD PTR [ebx+0x18],0x10
1003659d:	jb     0x100365a4
1003659f:	mov    ebx,DWORD PTR [ebx+0x4]
100365a2:	jmp    0x100365a7
100365a4:	add    ebx,0x4
100365a7:	push   eax
100365a8:	push   0x1006cd08
100365ad:	push   ebx
100365ae:	call   0x100439bb
100365b3:	add    esp,0xc
100365b6:	test   eax,eax
100365b8:	jne    0x100365e5
100365ba:	cmp    esi,edi
100365bc:	jae    0x100365de
100365be:	or     eax,0xffffffff
100365c1:	xor    ecx,ecx
100365c3:	test   eax,eax
100365c5:	setne  cl
100365c8:	mov    al,cl
100365ca:	mov    ecx,DWORD PTR [ebp-0xc]
100365cd:	mov    DWORD PTR fs:0x0,ecx
100365d4:	pop    ecx
100365d5:	pop    edi
100365d6:	pop    esi
100365d7:	pop    ebx
100365d8:	mov    esp,ebp
100365da:	pop    ebp
100365db:	ret    0x4
100365de:	xor    eax,eax
100365e0:	cmp    esi,edi
100365e2:	setne  al
100365e5:	xor    ecx,ecx
100365e7:	test   eax,eax
100365e9:	setne  cl
100365ec:	mov    al,cl
100365ee:	mov    ecx,DWORD PTR [ebp-0xc]
100365f1:	mov    DWORD PTR fs:0x0,ecx
100365f8:	pop    ecx
100365f9:	pop    edi
100365fa:	pop    esi
100365fb:	pop    ebx
100365fc:	mov    esp,ebp
100365fe:	pop    ebp
100365ff:	ret    0x4
10036602:	mov    eax,0x1003651e
10036607:	ret    
10036608:	int3   
10036609:	int3   
1003660a:	int3   
1003660b:	int3   
1003660c:	int3   
1003660d:	int3   
1003660e:	int3   
1003660f:	int3   
10036610:	push   0xffffffff
10036612:	push   0x10061750
10036617:	mov    eax,fs:0x0
1003661d:	push   eax
1003661e:	sub    esp,0x74
10036621:	mov    eax,ds:0x1007e030
10036626:	xor    eax,esp
10036628:	mov    DWORD PTR [esp+0x70],eax
1003662c:	push   ebx
1003662d:	push   esi
1003662e:	push   edi
1003662f:	mov    eax,ds:0x1007e030
10036634:	xor    eax,esp
10036636:	push   eax
10036637:	lea    eax,[esp+0x84]
1003663e:	mov    fs:0x0,eax
10036644:	mov    eax,DWORD PTR [esp+0x94]
1003664b:	xor    ebx,ebx
1003664d:	mov    esi,0xf
10036652:	mov    DWORD PTR [esp+0x7c],esi
10036656:	mov    DWORD PTR [esp+0x78],ebx
1003665a:	mov    BYTE PTR [esp+0x68],bl
1003665e:	mov    DWORD PTR [esp+0x8c],ebx
10036665:	mov    DWORD PTR [esp+0x44],esi
10036669:	mov    DWORD PTR [esp+0x40],ebx
1003666d:	mov    BYTE PTR [esp+0x30],bl
10036671:	mov    DWORD PTR [esp+0x28],esi
10036675:	mov    DWORD PTR [esp+0x24],ebx
10036679:	mov    BYTE PTR [esp+0x14],bl
1003667d:	mov    DWORD PTR [esp+0x60],esi
10036681:	mov    DWORD PTR [esp+0x5c],ebx
10036685:	mov    BYTE PTR [esp+0x4c],bl
10036689:	lea    edx,[esp+0x48]
1003668d:	push   edx
1003668e:	lea    edx,[esp+0x68]
10036692:	push   edx
10036693:	push   ecx
10036694:	push   eax
10036695:	lea    edx,[esp+0x20]
10036699:	lea    ecx,[esp+0x3c]
1003669d:	mov    BYTE PTR [esp+0x9c],0x3
100366a5:	call   0x10036750
100366aa:	mov    edi,0x10
100366af:	cmp    DWORD PTR [esp+0x60],edi
100366b3:	jb     0x100366c2
100366b5:	mov    eax,DWORD PTR [esp+0x4c]
100366b9:	push   eax
100366ba:	call   0x100430d2
100366bf:	add    esp,0x4
100366c2:	cmp    DWORD PTR [esp+0x28],edi
100366c6:	mov    DWORD PTR [esp+0x60],esi
100366ca:	mov    DWORD PTR [esp+0x5c],ebx
100366ce:	mov    BYTE PTR [esp+0x4c],bl
100366d2:	jb     0x100366e1
100366d4:	mov    ecx,DWORD PTR [esp+0x14]
100366d8:	push   ecx
100366d9:	call   0x100430d2
100366de:	add    esp,0x4
100366e1:	cmp    DWORD PTR [esp+0x44],edi
100366e5:	mov    DWORD PTR [esp+0x28],esi
100366e9:	mov    DWORD PTR [esp+0x24],ebx
100366ed:	mov    BYTE PTR [esp+0x14],bl
100366f1:	jb     0x10036700
100366f3:	mov    edx,DWORD PTR [esp+0x30]
100366f7:	push   edx
100366f8:	call   0x100430d2
100366fd:	add    esp,0x4
10036700:	cmp    DWORD PTR [esp+0x7c],edi
10036704:	mov    DWORD PTR [esp+0x44],esi
10036708:	mov    DWORD PTR [esp+0x40],ebx
1003670c:	mov    BYTE PTR [esp+0x30],bl
10036710:	jb     0x1003671f
10036712:	mov    eax,DWORD PTR [esp+0x68]
10036716:	push   eax
10036717:	call   0x100430d2
1003671c:	add    esp,0x4
1003671f:	mov    ecx,DWORD PTR [esp+0x84]
10036726:	mov    DWORD PTR fs:0x0,ecx
1003672d:	pop    ecx
1003672e:	pop    edi
1003672f:	pop    esi
10036730:	pop    ebx
10036731:	mov    ecx,DWORD PTR [esp+0x70]
10036735:	xor    ecx,esp
10036737:	call   0x100430d7
1003673c:	add    esp,0x80
10036742:	ret    0x4
10036745:	int3   
10036746:	int3   
10036747:	int3   
10036748:	int3   
10036749:	int3   
1003674a:	int3   
1003674b:	int3   
1003674c:	int3   
1003674d:	int3   
1003674e:	int3   
1003674f:	int3   
10036750:	push   ebp
10036751:	mov    ebp,esp
10036753:	push   0xffffffff
10036755:	push   0x10061702
1003675a:	mov    eax,fs:0x0
10036760:	push   eax
10036761:	sub    esp,0x18c
10036767:	mov    eax,ds:0x1007e030
1003676c:	xor    eax,ebp
1003676e:	mov    DWORD PTR [ebp-0x10],eax
10036771:	push   ebx
10036772:	push   esi
10036773:	push   edi
10036774:	push   eax
10036775:	lea    eax,[ebp-0xc]
10036778:	mov    fs:0x0,eax
1003677e:	mov    eax,DWORD PTR [ebp+0x8]
10036781:	mov    eax,DWORD PTR [eax]
10036783:	mov    esi,DWORD PTR [ebp+0xc]
10036786:	mov    edi,DWORD PTR [ebp+0x10]
10036789:	mov    DWORD PTR [ebp-0x144],edx
1003678f:	mov    DWORD PTR [ebp-0x148],ecx
10036795:	mov    ecx,DWORD PTR [ebp+0x14]
10036798:	xor    ebx,ebx
1003679a:	push   ebx
1003679b:	lea    edx,[ebp-0x150]
100367a1:	push   edx
100367a2:	push   0x110
100367a7:	mov    DWORD PTR [ebp-0x14c],ecx
100367ad:	lea    ecx,[ebp-0x120]
100367b3:	push   ecx
100367b4:	push   0x110
100367b9:	mov    edx,ecx
100367bb:	push   edx
100367bc:	push   0x22c03c
100367c1:	push   eax
100367c2:	call   DWORD PTR ds:0x10066260
100367c8:	test   eax,eax
100367ca:	jne    0x10036893
100367d0:	push   0x7113eeaa
100367d5:	push   0x10073b08
100367da:	call   0x100042d1
100367df:	push   0x40a05c48
100367e4:	push   eax
100367e5:	call   0x100042d1
100367ea:	push   0x12283bd0
100367ef:	push   eax
100367f0:	call   0x100042d1
100367f5:	push   0xdfc80fa
100367fa:	push   eax
100367fb:	call   0x100042d1
10036800:	push   eax
10036801:	push   0x1f
10036803:	push   0x10073b34
10036808:	call   0x100042e3
1003680d:	mov    esi,eax
1003680f:	mov    edi,0xf
10036814:	push   esi
10036815:	mov    DWORD PTR [ebp-0x128],edi
1003681b:	mov    DWORD PTR [ebp-0x12c],ebx
10036821:	mov    BYTE PTR [ebp-0x13c],bl
10036827:	call   0x10043250
1003682c:	add    esp,0x30
1003682f:	push   eax
10036830:	push   esi
10036831:	lea    ecx,[ebp-0x140]
10036837:	call   0x1000133f
1003683c:	lea    ecx,[ebp-0x194]
10036842:	mov    DWORD PTR [ebp-0x4],ebx
10036845:	call   0x10043141
1003684a:	push   0xffffffff
1003684c:	mov    BYTE PTR [ebp-0x4],0x1
10036850:	push   ebx
10036851:	lea    ecx,[ebp-0x140]
10036857:	push   ecx
10036858:	lea    ecx,[ebp-0x188]
1003685e:	mov    DWORD PTR [ebp-0x194],0x10073674
10036868:	mov    DWORD PTR [ebp-0x170],edi
1003686e:	mov    DWORD PTR [ebp-0x174],ebx
10036874:	mov    BYTE PTR [ebp-0x184],bl
1003687a:	call   0x10001245
1003687f:	push   0x10074e84
10036884:	lea    edx,[ebp-0x194]
1003688a:	push   edx
1003688b:	mov    BYTE PTR [ebp-0x4],bl
1003688e:	call   0x10047c54
10036893:	call   DWORD PTR ds:0x1007efec
10036899:	mov    ecx,DWORD PTR [ebp-0xdc]
1003689f:	mov    edx,DWORD PTR [ebp-0xd8]
100368a5:	mov    DWORD PTR [ebp-0x124],eax
100368ab:	mov    eax,DWORD PTR [ebp-0xe0]
100368b1:	mov    DWORD PTR [esi],eax
100368b3:	mov    eax,DWORD PTR [ebp-0xd4]
100368b9:	mov    DWORD PTR [esi+0x4],ecx
100368bc:	lea    ecx,[ebp-0x120]
100368c2:	mov    DWORD PTR [esi+0x8],edx
100368c5:	push   ecx
100368c6:	mov    DWORD PTR [esi+0xc],eax
100368c9:	call   DWORD PTR ds:0x100660c4
100368cf:	add    eax,0x1
100368d2:	cmp    eax,0x3fffffff
100368d7:	jle    0x100368dd
100368d9:	xor    esi,esi
100368db:	jmp    0x10036901
100368dd:	lea    esi,[eax+eax*1]
100368e0:	mov    eax,esi
100368e2:	call   0x1004b990
100368e7:	mov    edx,DWORD PTR [ebp-0x124]
100368ed:	mov    eax,esp
100368ef:	push   edx
100368f0:	push   esi
100368f1:	lea    ecx,[ebp-0x120]
100368f7:	push   ecx
100368f8:	mov    esi,eax
100368fa:	call   0x1000241c
100368ff:	mov    esi,eax
10036901:	push   esi
10036902:	mov    DWORD PTR [ebp-0x128],0xf
1003690c:	mov    DWORD PTR [ebp-0x12c],ebx
10036912:	mov    BYTE PTR [ebp-0x13c],bl
10036918:	call   0x10043250
1003691d:	add    esp,0x4
10036920:	push   eax
10036921:	push   esi
10036922:	lea    ecx,[ebp-0x140]
10036928:	call   0x1000133f
1003692d:	push   0xffffffff
1003692f:	push   ebx
10036930:	lea    edx,[ebp-0x140]
10036936:	push   edx
10036937:	mov    ecx,edi
10036939:	mov    DWORD PTR [ebp-0x4],0x2
10036940:	call   0x10001245
10036945:	mov    DWORD PTR [ebp-0x4],0xffffffff
1003694c:	cmp    DWORD PTR [ebp-0x128],0x10
10036953:	jb     0x10036964
10036955:	mov    eax,DWORD PTR [ebp-0x13c]
1003695b:	push   eax
1003695c:	call   0x100430d2
10036961:	add    esp,0x4
10036964:	lea    ecx,[ebp-0xd0]
1003696a:	push   ecx
1003696b:	call   DWORD PTR ds:0x100660c4
10036971:	add    eax,0x1
10036974:	cmp    eax,0x3fffffff
10036979:	jle    0x10036985
1003697b:	mov    edi,DWORD PTR [ebp-0x124]
10036981:	xor    esi,esi
10036983:	jmp    0x100369a9
10036985:	lea    esi,[eax+eax*1]
10036988:	mov    eax,esi
1003698a:	call   0x1004b990
1003698f:	mov    edi,DWORD PTR [ebp-0x124]
10036995:	mov    eax,esp
10036997:	push   edi
10036998:	push   esi
10036999:	lea    edx,[ebp-0xd0]
1003699f:	push   edx
100369a0:	mov    esi,eax
100369a2:	call   0x1000241c
100369a7:	mov    esi,eax
100369a9:	push   esi
100369aa:	mov    DWORD PTR [ebp-0x128],0xf
100369b4:	mov    DWORD PTR [ebp-0x12c],ebx
100369ba:	mov    BYTE PTR [ebp-0x13c],bl
100369c0:	call   0x10043250
100369c5:	add    esp,0x4
100369c8:	push   eax
100369c9:	push   esi
100369ca:	lea    ecx,[ebp-0x140]
100369d0:	call   0x1000133f
100369d5:	mov    ecx,DWORD PTR [ebp-0x148]
100369db:	push   0xffffffff
100369dd:	push   ebx
100369de:	lea    eax,[ebp-0x140]
100369e4:	push   eax
100369e5:	mov    DWORD PTR [ebp-0x4],0x3
100369ec:	call   0x10001245
100369f1:	mov    DWORD PTR [ebp-0x4],0xffffffff
100369f8:	cmp    DWORD PTR [ebp-0x128],0x10
100369ff:	jb     0x10036a10
10036a01:	mov    ecx,DWORD PTR [ebp-0x13c]
10036a07:	push   ecx
10036a08:	call   0x100430d2
10036a0d:	add    esp,0x4
10036a10:	lea    edx,[ebp-0x90]
10036a16:	push   edx
10036a17:	call   DWORD PTR ds:0x100660c4
10036a1d:	add    eax,0x1
10036a20:	cmp    eax,0x3fffffff
10036a25:	jle    0x10036a2b
10036a27:	xor    esi,esi
10036a29:	jmp    0x10036a49
10036a2b:	lea    esi,[eax+eax*1]
10036a2e:	mov    eax,esi
10036a30:	call   0x1004b990
10036a35:	mov    eax,esp
10036a37:	push   edi
10036a38:	push   esi
10036a39:	lea    ecx,[ebp-0x90]
10036a3f:	push   ecx
10036a40:	mov    esi,eax
10036a42:	call   0x1000241c
10036a47:	mov    esi,eax
10036a49:	push   esi
10036a4a:	mov    DWORD PTR [ebp-0x128],0xf
10036a54:	mov    DWORD PTR [ebp-0x12c],ebx
10036a5a:	mov    BYTE PTR [ebp-0x13c],bl
10036a60:	call   0x10043250
10036a65:	add    esp,0x4
10036a68:	push   eax
10036a69:	push   esi
10036a6a:	lea    ecx,[ebp-0x140]
10036a70:	call   0x1000133f
10036a75:	mov    ecx,DWORD PTR [ebp-0x144]
10036a7b:	push   0xffffffff
10036a7d:	push   ebx
10036a7e:	lea    edx,[ebp-0x140]
10036a84:	push   edx
10036a85:	mov    DWORD PTR [ebp-0x4],0x4
10036a8c:	call   0x10001245
10036a91:	mov    DWORD PTR [ebp-0x4],0xffffffff
10036a98:	cmp    DWORD PTR [ebp-0x128],0x10
10036a9f:	jb     0x10036ab0
10036aa1:	mov    eax,DWORD PTR [ebp-0x13c]
10036aa7:	push   eax
10036aa8:	call   0x100430d2
10036aad:	add    esp,0x4
10036ab0:	lea    ecx,[ebp-0x50]
10036ab3:	push   ecx
10036ab4:	call   DWORD PTR ds:0x100660c4
10036aba:	add    eax,0x1
10036abd:	cmp    eax,0x3fffffff
10036ac2:	jle    0x10036ac8
10036ac4:	xor    esi,esi
10036ac6:	jmp    0x10036ae3
10036ac8:	lea    esi,[eax+eax*1]
10036acb:	mov    eax,esi
10036acd:	call   0x1004b990
10036ad2:	mov    eax,esp
10036ad4:	push   edi
10036ad5:	push   esi
10036ad6:	lea    edx,[ebp-0x50]
10036ad9:	push   edx
10036ada:	mov    esi,eax
10036adc:	call   0x1000241c
10036ae1:	mov    esi,eax
10036ae3:	push   esi
10036ae4:	mov    DWORD PTR [ebp-0x154],0xf
10036aee:	mov    DWORD PTR [ebp-0x158],ebx
10036af4:	mov    BYTE PTR [ebp-0x168],bl
10036afa:	call   0x10043250
10036aff:	add    esp,0x4
10036b02:	push   eax
10036b03:	push   esi
10036b04:	lea    ecx,[ebp-0x16c]
10036b0a:	call   0x1000133f
10036b0f:	mov    ecx,DWORD PTR [ebp-0x14c]
10036b15:	push   0xffffffff
10036b17:	push   ebx
10036b18:	lea    eax,[ebp-0x16c]
10036b1e:	push   eax
10036b1f:	mov    DWORD PTR [ebp-0x4],0x5
10036b26:	call   0x10001245
10036b2b:	cmp    DWORD PTR [ebp-0x154],0x10
10036b32:	jb     0x10036b43
10036b34:	mov    ecx,DWORD PTR [ebp-0x168]
10036b3a:	push   ecx
10036b3b:	call   0x100430d2
10036b40:	add    esp,0x4
10036b43:	lea    esp,[ebp-0x1a8]
10036b49:	mov    ecx,DWORD PTR [ebp-0xc]
10036b4c:	mov    DWORD PTR fs:0x0,ecx
10036b53:	pop    ecx
10036b54:	pop    edi
10036b55:	pop    esi
10036b56:	pop    ebx
10036b57:	mov    ecx,DWORD PTR [ebp-0x10]
10036b5a:	xor    ecx,ebp
10036b5c:	call   0x100430d7
10036b61:	mov    esp,ebp
10036b63:	pop    ebp
10036b64:	ret    0x10
10036b67:	int3   
10036b68:	int3   
10036b69:	int3   
10036b6a:	int3   
10036b6b:	int3   
10036b6c:	int3   
10036b6d:	int3   
10036b6e:	int3   
10036b6f:	int3   
10036b70:	push   ebp
10036b71:	mov    ebp,esp
10036b73:	and    esp,0xfffffff8
10036b76:	push   0xffffffff
10036b78:	push   0x10061698
10036b7d:	mov    eax,fs:0x0
10036b83:	push   eax
10036b84:	sub    esp,0x50
10036b87:	push   ebx
10036b88:	push   esi
10036b89:	push   edi
10036b8a:	mov    eax,ds:0x1007e030
10036b8f:	xor    eax,esp
10036b91:	push   eax
10036b92:	lea    eax,[esp+0x60]
10036b96:	mov    fs:0x0,eax
10036b9c:	mov    edi,ecx
10036b9e:	xor    eax,eax
10036ba0:	mov    DWORD PTR [esp+0x10],eax
10036ba4:	lea    ebx,[edi+0xc]
10036ba7:	push   ebx
10036ba8:	mov    DWORD PTR [esp+0x6c],eax
10036bac:	call   0x100439b6
10036bb1:	mov    esi,eax
10036bb3:	add    esp,0x4
10036bb6:	test   esi,esi
10036bb8:	je     0x10036bc4
10036bba:	push   0x0
10036bbc:	call   0x100430d2
10036bc1:	add    esp,0x4
10036bc4:	mov    ecx,DWORD PTR [ebp+0x10]
10036bc7:	mov    eax,DWORD PTR [ebp+0xc]
10036bca:	push   edi
10036bcb:	push   ecx
10036bcc:	lea    edx,[esi+0xc]
10036bcf:	mov    DWORD PTR [esi],edi
10036bd1:	push   edx
10036bd2:	mov    DWORD PTR [esp+0x1c],esi
10036bd6:	mov    DWORD PTR [esi+0x4],eax
10036bd9:	call   0x10045420
10036bde:	mov    ecx,DWORD PTR [ebp+0x8]
10036be1:	mov    edx,DWORD PTR [ecx]
10036be3:	add    esp,0xc
10036be6:	xor    edi,edi
10036be8:	push   edi
10036be9:	lea    eax,[esp+0x18]
10036bed:	push   eax
10036bee:	push   edi
10036bef:	push   edi
10036bf0:	push   ebx
10036bf1:	push   esi
10036bf2:	push   0x22c034
10036bf7:	push   edx
10036bf8:	call   DWORD PTR ds:0x10066260
10036bfe:	test   eax,eax
10036c00:	jne    0x10036c9a
10036c06:	push   0x3d127140
10036c0b:	push   0x10073b54
10036c10:	call   0x100042d1
10036c15:	push   eax
10036c16:	push   0x19
10036c18:	push   0x10073b7c
10036c1d:	call   0x100042e3
10036c22:	mov    esi,eax
10036c24:	push   esi
10036c25:	mov    DWORD PTR [esp+0x48],0xf
10036c2d:	mov    DWORD PTR [esp+0x44],edi
10036c31:	mov    BYTE PTR [esp+0x34],0x0
10036c36:	call   0x10043250
10036c3b:	add    esp,0x18
10036c3e:	push   eax
10036c3f:	push   esi
10036c40:	lea    ecx,[esp+0x20]
10036c44:	call   0x1000133f
10036c49:	mov    bl,0x1
10036c4b:	lea    ecx,[esp+0x34]
10036c4f:	mov    BYTE PTR [esp+0x68],bl
10036c53:	call   0x10043141
10036c58:	push   0xffffffff
10036c5a:	mov    BYTE PTR [esp+0x6c],0x2
10036c5f:	push   edi
10036c60:	lea    eax,[esp+0x20]
10036c64:	push   eax
10036c65:	lea    ecx,[esp+0x4c]
10036c69:	mov    DWORD PTR [esp+0x40],0x10073674
10036c71:	mov    DWORD PTR [esp+0x64],0xf
10036c79:	mov    DWORD PTR [esp+0x60],edi
10036c7d:	mov    BYTE PTR [esp+0x50],0x0
10036c82:	call   0x10001245
10036c87:	push   0x10074e84
10036c8c:	lea    ecx,[esp+0x38]
10036c90:	push   ecx
10036c91:	mov    BYTE PTR [esp+0x70],bl
10036c95:	call   0x10047c54
10036c9a:	push   esi
10036c9b:	call   0x100430d2
10036ca0:	add    esp,0x4
10036ca3:	mov    ecx,DWORD PTR [esp+0x60]
10036ca7:	mov    DWORD PTR fs:0x0,ecx
10036cae:	pop    ecx
10036caf:	pop    edi
10036cb0:	pop    esi
10036cb1:	pop    ebx
10036cb2:	mov    esp,ebp
10036cb4:	pop    ebp
10036cb5:	ret    0xc
10036cb8:	int3   
10036cb9:	int3   
10036cba:	int3   
10036cbb:	int3   
10036cbc:	int3   
10036cbd:	int3   
10036cbe:	int3   
10036cbf:	int3   
10036cc0:	push   ebp
10036cc1:	mov    ebp,esp
10036cc3:	and    esp,0xfffffff8
10036cc6:	push   0xffffffff
10036cc8:	push   0x10061658
10036ccd:	mov    eax,fs:0x0
10036cd3:	push   eax
10036cd4:	sub    esp,0x58
10036cd7:	push   ebx
10036cd8:	push   esi
10036cd9:	push   edi
10036cda:	mov    eax,ds:0x1007e030
10036cdf:	xor    eax,esp
10036ce1:	push   eax
10036ce2:	lea    eax,[esp+0x68]
10036ce6:	mov    fs:0x0,eax
10036cec:	xor    ebx,ebx
10036cee:	mov    DWORD PTR [esp+0x18],ebx
10036cf2:	mov    DWORD PTR [esp+0x1c],ebx
10036cf6:	push   0xd
10036cf8:	mov    DWORD PTR [esp+0x74],ebx
10036cfc:	call   0x100439b6
10036d01:	mov    esi,eax
10036d03:	add    esp,0x4
10036d06:	mov    DWORD PTR [esp+0x10],esi
10036d0a:	mov    eax,DWORD PTR [ebp+0x10]
10036d0d:	mov    edx,DWORD PTR [ebp+0x8]
10036d10:	mov    BYTE PTR [esp+0x70],0x1
10036d15:	mov    DWORD PTR [esi],0x1
10036d1b:	push   ebx
10036d1c:	mov    DWORD PTR [esi+0x8],0x4
10036d23:	mov    DWORD PTR [esi+0x4],eax
10036d26:	mov    eax,DWORD PTR [esi]
10036d28:	add    eax,0xc
10036d2b:	lea    ecx,[esp+0x1c]
10036d2f:	push   ecx
10036d30:	push   eax
10036d31:	push   esi
10036d32:	push   eax
10036d33:	mov    eax,DWORD PTR [edx]
10036d35:	push   esi
10036d36:	push   0x22c038
10036d3b:	push   eax
10036d3c:	call   DWORD PTR ds:0x10066260
10036d42:	test   eax,eax
10036d44:	jne    0x10036e10
10036d4a:	push   0x594e02ce
10036d4f:	push   0x10073b98
10036d54:	call   0x100042d1
10036d59:	push   0x581b6c66
10036d5e:	push   eax
10036d5f:	call   0x100042d1
10036d64:	push   0x189ad4a0
10036d69:	push   eax
10036d6a:	call   0x100042d1
10036d6f:	push   0x59de6796
10036d74:	push   eax
10036d75:	call   0x100042d1
10036d7a:	push   0x3edcdd8c
10036d7f:	push   eax
10036d80:	call   0x100042d1
10036d85:	push   0x3ef69cbc
10036d8a:	push   eax
10036d8b:	call   0x100042d1
10036d90:	push   eax
10036d91:	push   0x1e
10036d93:	push   0x10073848
10036d98:	call   0x100042e3
10036d9d:	mov    esi,eax
10036d9f:	mov    edi,0xf
10036da4:	push   esi
10036da5:	mov    DWORD PTR [esp+0x78],edi
10036da9:	mov    DWORD PTR [esp+0x74],ebx
10036dad:	mov    BYTE PTR [esp+0x64],bl
10036db1:	call   0x10043250
10036db6:	add    esp,0x40
10036db9:	push   eax
10036dba:	push   esi
10036dbb:	lea    ecx,[esp+0x28]
10036dbf:	call   0x1000133f
10036dc4:	lea    ecx,[esp+0x3c]
10036dc8:	mov    BYTE PTR [esp+0x70],0x2
10036dcd:	call   0x10043141
10036dd2:	push   0xffffffff
10036dd4:	mov    BYTE PTR [esp+0x74],0x3
10036dd9:	push   ebx
10036dda:	lea    ecx,[esp+0x28]
10036dde:	push   ecx
10036ddf:	lea    ecx,[esp+0x54]
10036de3:	mov    DWORD PTR [esp+0x48],0x10073674
10036deb:	mov    DWORD PTR [esp+0x6c],edi
10036def:	mov    DWORD PTR [esp+0x68],ebx
10036df3:	mov    BYTE PTR [esp+0x58],bl
10036df7:	call   0x10001245
10036dfc:	push   0x10074e84
10036e01:	lea    edx,[esp+0x40]
10036e05:	push   edx
10036e06:	mov    BYTE PTR [esp+0x78],0x2
10036e0b:	call   0x10047c54
10036e10:	cmp    DWORD PTR [esi+0x8],0x2
10036e14:	jne    0x10036e73
10036e16:	mov    eax,DWORD PTR [esi]
10036e18:	mov    DWORD PTR [esp+0x14],eax
10036e1c:	add    eax,0xc
10036e1f:	push   eax
10036e20:	call   0x100439b6
10036e25:	mov    edi,eax
10036e27:	add    esp,0x4
10036e2a:	cmp    edi,esi
10036e2c:	je     0x10036e37
10036e2e:	push   esi
10036e2f:	call   0x100430d2
10036e34:	add    esp,0x4
10036e37:	mov    eax,DWORD PTR [esp+0x14]
10036e3b:	mov    ecx,DWORD PTR [ebp+0x10]
10036e3e:	mov    DWORD PTR [edi],eax
10036e40:	push   ebx
10036e41:	mov    DWORD PTR [edi+0x4],ecx
10036e44:	mov    eax,DWORD PTR [edi]
10036e46:	add    eax,0xc
10036e49:	lea    edx,[esp+0x1c]
10036e4d:	push   edx
10036e4e:	push   eax
10036e4f:	push   edi
10036e50:	push   eax
10036e51:	mov    eax,DWORD PTR [ebp+0x8]
10036e54:	mov    ecx,DWORD PTR [eax]
10036e56:	push   edi
10036e57:	push   0x22c038
10036e5c:	mov    esi,edi
10036e5e:	push   ecx
10036e5f:	mov    DWORD PTR [esp+0x30],esi
10036e63:	call   DWORD PTR ds:0x10066260
10036e69:	test   eax,eax
10036e6b:	je     0x10036eaa
10036e6d:	cmp    DWORD PTR [edi+0x8],0x2
10036e71:	je     0x10036e16
10036e73:	mov    eax,DWORD PTR [esi+0x8]
10036e76:	cmp    eax,0x1
10036e79:	jne    0x10036f39
10036e7f:	mov    edi,DWORD PTR [ebp+0xc]
10036e82:	push   esi
10036e83:	mov    DWORD PTR [edi],ebx
10036e85:	call   0x100430d2
10036e8a:	push   ebx
10036e8b:	call   0x100430d2
10036e90:	add    esp,0x8
10036e93:	mov    eax,edi
10036e95:	mov    ecx,DWORD PTR [esp+0x68]
10036e99:	mov    DWORD PTR fs:0x0,ecx
10036ea0:	pop    ecx
10036ea1:	pop    edi
10036ea2:	pop    esi
10036ea3:	pop    ebx
10036ea4:	mov    esp,ebp
10036ea6:	pop    ebp
10036ea7:	ret    0x10
10036eaa:	push   0x6a3cb10a
10036eaf:	push   0x10073bc4
10036eb4:	call   0x100042d1
10036eb9:	push   eax
10036eba:	push   0x1e
10036ebc:	push   0x10073848
10036ec1:	call   0x100042e3
10036ec6:	mov    esi,eax
10036ec8:	mov    edi,0xf
10036ecd:	push   esi
10036ece:	mov    DWORD PTR [esp+0x50],edi
10036ed2:	mov    DWORD PTR [esp+0x4c],ebx
10036ed6:	mov    BYTE PTR [esp+0x3c],bl
10036eda:	call   0x10043250
10036edf:	add    esp,0x18
10036ee2:	push   eax
10036ee3:	push   esi
10036ee4:	lea    ecx,[esp+0x28]
10036ee8:	call   0x1000133f
10036eed:	lea    ecx,[esp+0x3c]
10036ef1:	mov    BYTE PTR [esp+0x70],0x4
10036ef6:	call   0x10043141
10036efb:	push   0xffffffff
10036efd:	mov    BYTE PTR [esp+0x74],0x5
10036f02:	push   ebx
10036f03:	lea    edx,[esp+0x28]
10036f07:	push   edx
10036f08:	lea    ecx,[esp+0x54]
10036f0c:	mov    DWORD PTR [esp+0x48],0x10073674
10036f14:	mov    DWORD PTR [esp+0x6c],edi
10036f18:	mov    DWORD PTR [esp+0x68],ebx
10036f1c:	mov    BYTE PTR [esp+0x58],bl
10036f20:	call   0x10001245
10036f25:	push   0x10074e84
10036f2a:	lea    eax,[esp+0x40]
10036f2e:	push   eax
10036f2f:	mov    BYTE PTR [esp+0x78],0x4
10036f34:	call   0x10047c54
10036f39:	cmp    eax,ebx
10036f3b:	je     0x10036f9f
10036f3d:	push   0x7f33891a
10036f42:	push   0x10073bfc
10036f47:	call   0x100042d1
10036f4c:	push   0x57ff8450
10036f51:	push   eax
10036f52:	call   0x100042d1
10036f57:	push   0x3c87fa10
10036f5c:	push   eax
10036f5d:	call   0x100042d1
10036f62:	push   eax
10036f63:	push   0x1e
10036f65:	push   0x10073848
10036f6a:	call   0x100042e3
10036f6f:	add    esp,0x24
10036f72:	push   eax
10036f73:	lea    ecx,[esp+0x24]
10036f77:	call   0x100011d1
10036f7c:	lea    ecx,[esp+0x20]
10036f80:	push   ecx
10036f81:	lea    edx,[esp+0x40]
10036f85:	push   edx
10036f86:	mov    BYTE PTR [esp+0x78],0x6
10036f8b:	call   0x100026e6
10036f90:	push   0x10074e84
10036f95:	lea    eax,[esp+0x40]
10036f99:	push   eax
10036f9a:	call   0x10047c54
10036f9f:	mov    eax,DWORD PTR [esi]
10036fa1:	mov    ecx,DWORD PTR [ebp+0x14]
10036fa4:	push   eax
10036fa5:	mov    DWORD PTR [ecx],eax
10036fa7:	call   0x100439b6
10036fac:	mov    edi,eax
10036fae:	add    esp,0x4
10036fb1:	cmp    edi,ebx
10036fb3:	je     0x10036fbe
10036fb5:	push   ebx
10036fb6:	call   0x100430d2
10036fbb:	add    esp,0x4
10036fbe:	mov    edx,DWORD PTR [ebp+0x14]
10036fc1:	mov    eax,DWORD PTR [edx]
10036fc3:	push   eax
10036fc4:	lea    ecx,[esi+0xc]
10036fc7:	push   ecx
10036fc8:	push   edi
10036fc9:	call   0x10045420
10036fce:	mov    edx,DWORD PTR [ebp+0xc]
10036fd1:	push   esi
10036fd2:	mov    DWORD PTR [edx],edi
10036fd4:	call   0x100430d2
10036fd9:	push   ebx
10036fda:	call   0x100430d2
10036fdf:	mov    eax,DWORD PTR [ebp+0xc]
10036fe2:	add    esp,0x14
10036fe5:	mov    ecx,DWORD PTR [esp+0x68]
10036fe9:	mov    DWORD PTR fs:0x0,ecx
10036ff0:	pop    ecx
10036ff1:	pop    edi
10036ff2:	pop    esi
10036ff3:	pop    ebx
10036ff4:	mov    esp,ebp
10036ff6:	pop    ebp
10036ff7:	ret    0x10
10036ffa:	int3   
10036ffb:	int3   
10036ffc:	int3   
10036ffd:	int3   
10036ffe:	int3   
10036fff:	int3   
10037000:	push   0xffffffff
10037002:	push   0x100615e7
10037007:	mov    eax,fs:0x0
1003700d:	push   eax
1003700e:	sub    esp,0x198
10037014:	mov    eax,ds:0x1007e030
10037019:	xor    eax,esp
1003701b:	mov    DWORD PTR [esp+0x194],eax
10037022:	push   ebx
10037023:	push   esi
10037024:	push   edi
10037025:	mov    eax,ds:0x1007e030
1003702a:	xor    eax,esp
1003702c:	push   eax
1003702d:	lea    eax,[esp+0x1a8]
10037034:	mov    fs:0x0,eax
1003703a:	mov    esi,ecx
1003703c:	mov    eax,esi
1003703e:	mov    edi,edx
10037040:	lea    edx,[eax+0x2]
10037043:	xor    ebx,ebx
10037045:	mov    cx,WORD PTR [eax]
10037048:	add    eax,0x2
1003704b:	cmp    cx,bx
1003704e:	jne    0x10037045
10037050:	sub    eax,edx
10037052:	sar    eax,1
10037054:	add    eax,0x1
10037057:	cmp    eax,0x80
1003705c:	jbe    0x10037109
10037062:	push   0x489b5af8
10037067:	push   0x10073c24
1003706c:	call   0x100042d1
10037071:	push   0x3f62bec4
10037076:	push   eax
10037077:	call   0x100042d1
1003707c:	push   eax
1003707d:	push   0x1e
1003707f:	push   0x10073c48
10037084:	call   0x100042e3
10037089:	mov    esi,eax
1003708b:	mov    edi,0xf
10037090:	push   esi
10037091:	mov    DWORD PTR [esp+0x70],edi
10037095:	mov    DWORD PTR [esp+0x6c],ebx
10037099:	mov    BYTE PTR [esp+0x5c],bl
1003709d:	call   0x10043250
100370a2:	add    esp,0x20
100370a5:	push   eax
100370a6:	push   esi
100370a7:	lea    ecx,[esp+0x40]
100370ab:	call   0x1000133f
100370b0:	lea    ecx,[esp+0x54]
100370b4:	mov    DWORD PTR [esp+0x1b0],ebx
100370bb:	call   0x10043141
100370c0:	push   0xffffffff
100370c2:	mov    BYTE PTR [esp+0x1b4],0x1
100370ca:	push   ebx
100370cb:	lea    eax,[esp+0x40]
100370cf:	push   eax
100370d0:	lea    ecx,[esp+0x6c]
100370d4:	mov    DWORD PTR [esp+0x60],0x10073674
100370dc:	mov    DWORD PTR [esp+0x84],edi
100370e3:	mov    DWORD PTR [esp+0x80],ebx
100370ea:	mov    BYTE PTR [esp+0x70],bl
100370ee:	call   0x10001245
100370f3:	push   0x10074e84
100370f8:	lea    ecx,[esp+0x58]
100370fc:	push   ecx
100370fd:	mov    BYTE PTR [esp+0x1b8],bl
10037104:	call   0x10047c54
10037109:	call   DWORD PTR ds:0x1007efec
1003710f:	lea    edx,[esp+0xa4]
10037116:	mov    eax,esi
10037118:	sub    edx,esi
1003711a:	lea    ebx,[ebx+0x0]
10037120:	movzx  ecx,WORD PTR [eax]
10037123:	mov    WORD PTR [edx+eax*1],cx
10037127:	add    eax,0x2
1003712a:	cmp    cx,bx
1003712d:	jne    0x10037120
1003712f:	push   0x1
10037131:	call   0x100439b6
10037136:	mov    esi,eax
10037138:	add    esp,0x4
1003713b:	mov    DWORD PTR [esp+0x14],esi
1003713f:	push   ebx
10037140:	lea    edx,[esp+0x1c]
10037144:	push   edx
10037145:	push   0x100
1003714a:	lea    eax,[esp+0xb0]
10037151:	push   eax
10037152:	push   0x100
10037157:	mov    ecx,eax
10037159:	push   ecx
1003715a:	mov    DWORD PTR [esp+0x1c8],0x2
10037165:	mov    edx,DWORD PTR [edi]
10037167:	push   0x22c070
1003716c:	push   edx
1003716d:	call   DWORD PTR ds:0x10066260
10037173:	test   eax,eax
10037175:	jne    0x1003723b
1003717b:	push   0x23cc97a0
10037180:	push   0x10073c68
10037185:	call   0x100042d1
1003718a:	push   0x4709da96
1003718f:	push   eax
10037190:	call   0x100042d1
10037195:	push   0x41f27b90
1003719a:	push   eax
1003719b:	call   0x100042d1
100371a0:	push   eax
100371a1:	push   0x1a
100371a3:	push   0x10073c8c
100371a8:	call   0x100042e3
100371ad:	mov    esi,eax
100371af:	mov    edi,0xf
100371b4:	push   esi
100371b5:	mov    DWORD PTR [esp+0x5c],edi
100371b9:	mov    DWORD PTR [esp+0x58],ebx
100371bd:	mov    BYTE PTR [esp+0x48],bl
100371c1:	call   0x10043250
100371c6:	add    esp,0x28
100371c9:	push   eax
100371ca:	push   esi
100371cb:	lea    ecx,[esp+0x24]
100371cf:	call   0x1000133f
100371d4:	lea    ecx,[esp+0x7c]
100371d8:	mov    BYTE PTR [esp+0x1b0],0x3
100371e0:	call   0x10043141
100371e5:	push   0xffffffff
100371e7:	mov    BYTE PTR [esp+0x1b4],0x4
100371ef:	push   ebx
100371f0:	lea    eax,[esp+0x24]
100371f4:	push   eax
100371f5:	lea    ecx,[esp+0x94]
100371fc:	mov    DWORD PTR [esp+0x88],0x10073674
10037207:	mov    DWORD PTR [esp+0xac],edi
1003720e:	mov    DWORD PTR [esp+0xa8],ebx
10037215:	mov    BYTE PTR [esp+0x98],bl
1003721c:	call   0x10001245
10037221:	push   0x10074e84
10037226:	lea    ecx,[esp+0x80]
1003722d:	push   ecx
1003722e:	mov    BYTE PTR [esp+0x1b8],0x3
10037236:	call   0x10047c54
1003723b:	push   esi
1003723c:	call   0x100430d2
10037241:	add    esp,0x4
10037244:	mov    ecx,DWORD PTR [esp+0x1a8]
1003724b:	mov    DWORD PTR fs:0x0,ecx
10037252:	pop    ecx
10037253:	pop    edi
10037254:	pop    esi
10037255:	pop    ebx
10037256:	mov    ecx,DWORD PTR [esp+0x194]
1003725d:	xor    ecx,esp
1003725f:	call   0x100430d7
10037264:	add    esp,0x1a4
1003726a:	ret    
1003726b:	int3   
1003726c:	int3   
1003726d:	int3   
1003726e:	int3   
1003726f:	int3   
10037270:	push   ecx
10037271:	push   esi
10037272:	push   0x1fe
10037277:	call   0x100436de
1003727c:	mov    esi,eax
1003727e:	add    esp,0x4
10037281:	test   esi,esi
10037283:	je     0x10037297
10037285:	push   0x1fe
1003728a:	push   0x0
1003728c:	push   esi
1003728d:	call   0x10045ea0
10037292:	add    esp,0xc
10037295:	jmp    0x10037299
10037297:	xor    esi,esi
10037299:	mov    edx,esi
1003729b:	mov    eax,edi
1003729d:	sub    edx,edi
1003729f:	nop
100372a0:	movzx  ecx,WORD PTR [eax]
100372a3:	mov    WORD PTR [edx+eax*1],cx
100372a7:	add    eax,0x2
100372aa:	test   cx,cx
100372ad:	jne    0x100372a0
100372af:	mov    ecx,DWORD PTR [esp+0xc]
100372b3:	mov    edx,DWORD PTR [ecx]
100372b5:	push   0x0
100372b7:	lea    eax,[esp+0x8]
100372bb:	push   eax
100372bc:	push   0x1fe
100372c1:	push   esi
100372c2:	push   0x1fe
100372c7:	push   esi
100372c8:	push   0x22c064
100372cd:	push   edx
100372ce:	call   DWORD PTR ds:0x10066260
100372d4:	push   esi
100372d5:	call   0x100430d2
100372da:	add    esp,0x4
100372dd:	pop    esi
100372de:	pop    ecx
100372df:	ret    0x4
100372e2:	int3   
100372e3:	int3   
100372e4:	int3   
100372e5:	int3   
100372e6:	int3   
100372e7:	int3   
100372e8:	int3   
100372e9:	int3   
100372ea:	int3   
100372eb:	int3   
100372ec:	int3   
100372ed:	int3   
100372ee:	int3   
100372ef:	int3   
100372f0:	push   0xffffffff
100372f2:	push   0x100609c8
100372f7:	mov    eax,fs:0x0
100372fd:	push   eax
100372fe:	push   ecx
100372ff:	push   ebx
10037300:	push   ebp
10037301:	push   esi
10037302:	push   edi
10037303:	mov    eax,ds:0x1007e030
10037308:	xor    eax,esp
1003730a:	push   eax
1003730b:	lea    eax,[esp+0x18]
1003730f:	mov    fs:0x0,eax
10037315:	mov    ebp,DWORD PTR [esp+0x30]
10037319:	push   0x440
1003731e:	call   0x100436de
10037323:	mov    ebx,eax
10037325:	add    esp,0x4
10037328:	test   ebx,ebx
1003732a:	je     0x1003733e
1003732c:	push   0x440
10037331:	push   0x0
10037333:	push   ebx
10037334:	call   0x10045ea0
10037339:	add    esp,0xc
1003733c:	jmp    0x10037340
1003733e:	xor    ebx,ebx
10037340:	mov    DWORD PTR [esp+0x30],ebx
10037344:	push   0x7b5f99a0
10037349:	push   0x5ef2cad8
1003734e:	push   0x3eb58e6
10037353:	mov    DWORD PTR [esp+0x2c],0x0
1003735b:	push   0x10073ca8
10037360:	mov    WORD PTR [ebx],0x0
10037365:	call   0x100042d1
1003736a:	add    esp,0x8
1003736d:	push   eax
1003736e:	call   0x100042d1
10037373:	add    esp,0x8
10037376:	push   eax
10037377:	call   0x100042d1
1003737c:	push   eax
1003737d:	push   0x4
1003737f:	push   0x10073ce8
10037384:	call   0x100044a2
10037389:	add    esp,0x14
1003738c:	mov    edx,eax
1003738e:	mov    edi,edi
10037390:	mov    cx,WORD PTR [eax]
10037393:	add    eax,0x2
10037396:	test   cx,cx
10037399:	jne    0x10037390
1003739b:	mov    edi,ebx
1003739d:	sub    eax,edx
1003739f:	add    edi,0xfffffffe
100373a2:	mov    cx,WORD PTR [edi+0x2]
100373a6:	add    edi,0x2
100373a9:	test   cx,cx
100373ac:	jne    0x100373a2
100373ae:	mov    ecx,eax
100373b0:	shr    ecx,0x2
100373b3:	mov    esi,edx
100373b5:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
100373b7:	mov    ecx,eax
100373b9:	mov    eax,DWORD PTR [esp+0x2c]
100373bd:	and    ecx,0x3
100373c0:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
100373c2:	mov    ecx,eax
100373c4:	mov    dx,WORD PTR [eax]
100373c7:	add    eax,0x2
100373ca:	test   dx,dx
100373cd:	jne    0x100373c4
100373cf:	mov    edi,ebx
100373d1:	sub    eax,ecx
100373d3:	mov    esi,ecx
100373d5:	add    edi,0xfffffffe
100373d8:	jmp    0x100373e0
100373da:	lea    ebx,[ebx+0x0]
100373e0:	mov    cx,WORD PTR [edi+0x2]
100373e4:	add    edi,0x2
100373e7:	test   cx,cx
100373ea:	jne    0x100373e0
100373ec:	mov    ecx,eax
100373ee:	shr    ecx,0x2
100373f1:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
100373f3:	mov    ecx,eax
100373f5:	and    ecx,0x3
100373f8:	lea    edx,[ebx+0x400]
100373fe:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
10037400:	mov    eax,ebp
10037402:	sub    edx,ebp
10037404:	movzx  ecx,WORD PTR [eax]
10037407:	mov    WORD PTR [edx+eax*1],cx
1003740b:	add    eax,0x2
1003740e:	test   cx,cx
10037411:	jne    0x10037404
10037413:	mov    ecx,DWORD PTR [esp+0x28]
10037417:	mov    edx,DWORD PTR [ecx]
10037419:	push   0x0
1003741b:	lea    eax,[esp+0x18]
1003741f:	push   eax
10037420:	push   0x440
10037425:	push   ebx
10037426:	push   0x440
1003742b:	push   ebx
1003742c:	push   0x22c078
10037431:	push   edx
10037432:	call   DWORD PTR ds:0x10066260
10037438:	push   ebx
10037439:	call   0x100430d2
1003743e:	add    esp,0x4
10037441:	mov    ecx,DWORD PTR [esp+0x18]
10037445:	mov    DWORD PTR fs:0x0,ecx
1003744c:	pop    ecx
1003744d:	pop    edi
1003744e:	pop    esi
1003744f:	pop    ebp
10037450:	pop    ebx
10037451:	add    esp,0x10
10037454:	ret    0xc
10037457:	int3   
10037458:	int3   
10037459:	int3   
1003745a:	int3   
1003745b:	int3   
1003745c:	int3   
1003745d:	int3   
1003745e:	int3   
1003745f:	int3   
10037460:	mov    ecx,DWORD PTR [eax]
10037462:	push   ecx
10037463:	call   0x100430d2
10037468:	pop    ecx
10037469:	ret    
1003746a:	int3   
1003746b:	int3   
1003746c:	int3   
1003746d:	int3   
1003746e:	int3   
1003746f:	int3   
10037470:	push   ebp
10037471:	mov    ebp,esp
10037473:	and    esp,0xfffffff8
10037476:	mov    ecx,DWORD PTR [eax]
10037478:	sub    esp,0x28
1003747b:	cmp    ecx,DWORD PTR [eax+0x4]
1003747e:	jbe    0x10037498
10037480:	lea    eax,[esp]
10037483:	push   eax
10037484:	call   0x100375c0
10037489:	push   0x10074f0c
1003748e:	lea    ecx,[esp+0x4]
10037492:	push   ecx
10037493:	call   0x10047c54
10037498:	mov    edx,DWORD PTR [eax+0x8]
1003749b:	mov    al,BYTE PTR [ecx+edx*1]
1003749e:	mov    esp,ebp
100374a0:	pop    ebp
100374a1:	ret    
100374a2:	int3   
100374a3:	int3   
100374a4:	int3   
100374a5:	int3   
100374a6:	int3   
100374a7:	int3   
100374a8:	int3   
100374a9:	int3   
100374aa:	int3   
100374ab:	int3   
100374ac:	int3   
100374ad:	int3   
100374ae:	int3   
100374af:	int3   
100374b0:	push   esi
100374b1:	mov    esi,ecx
100374b3:	mov    DWORD PTR [esi],0x10073674
100374b9:	cmp    DWORD PTR [esi+0x24],0x10
100374bd:	jb     0x100374cb
100374bf:	mov    eax,DWORD PTR [esi+0x10]
100374c2:	push   eax
100374c3:	call   0x100430d2
100374c8:	add    esp,0x4
100374cb:	xor    eax,eax
100374cd:	mov    DWORD PTR [esi+0x24],0xf
100374d4:	mov    DWORD PTR [esi+0x20],eax
100374d7:	mov    BYTE PTR [esi+0x10],al
100374da:	mov    ecx,esi
100374dc:	pop    esi
100374dd:	jmp    0x10043210
100374e2:	int3   
100374e3:	int3   
100374e4:	int3   
100374e5:	int3   
100374e6:	int3   
100374e7:	int3   
100374e8:	int3   
100374e9:	int3   
100374ea:	int3   
100374eb:	int3   
100374ec:	int3   
100374ed:	int3   
100374ee:	int3   
100374ef:	int3   
100374f0:	push   0xffffffff
100374f2:	push   0x10060088
100374f7:	mov    eax,fs:0x0
100374fd:	push   eax
100374fe:	push   ecx
100374ff:	push   esi
10037500:	push   edi
10037501:	mov    eax,ds:0x1007e030
10037506:	xor    eax,esp
10037508:	push   eax
10037509:	lea    eax,[esp+0x10]
1003750d:	mov    fs:0x0,eax
10037513:	mov    esi,ecx
10037515:	mov    DWORD PTR [esp+0xc],esi
10037519:	mov    edi,DWORD PTR [esp+0x20]
1003751d:	push   edi
1003751e:	call   0x100431b8
10037523:	xor    eax,eax
10037525:	mov    DWORD PTR [esp+0x18],eax
10037529:	push   0xffffffff
1003752b:	lea    ecx,[esi+0xc]
1003752e:	mov    DWORD PTR [esi],0x10073674
10037534:	push   eax
10037535:	add    edi,0xc
10037538:	mov    DWORD PTR [ecx+0x18],0xf
1003753f:	mov    DWORD PTR [ecx+0x14],eax
10037542:	push   edi
10037543:	mov    BYTE PTR [ecx+0x4],al
10037546:	call   0x10001245
1003754b:	mov    DWORD PTR [esi],0x10073d44
10037551:	mov    eax,esi
10037553:	mov    ecx,DWORD PTR [esp+0x10]
10037557:	mov    DWORD PTR fs:0x0,ecx
1003755e:	pop    ecx
1003755f:	pop    edi
10037560:	pop    esi
10037561:	add    esp,0x10
10037564:	ret    0x4
10037567:	int3   
10037568:	int3   
10037569:	int3   
1003756a:	int3   
1003756b:	int3   
1003756c:	int3   
1003756d:	int3   
1003756e:	int3   
1003756f:	int3   
10037570:	push   esi
10037571:	mov    esi,ecx
10037573:	mov    DWORD PTR [esi],0x10073674
10037579:	cmp    DWORD PTR [esi+0x24],0x10
1003757d:	jb     0x1003758b
1003757f:	mov    eax,DWORD PTR [esi+0x10]
10037582:	push   eax
10037583:	call   0x100430d2
10037588:	add    esp,0x4
1003758b:	xor    eax,eax
1003758d:	mov    DWORD PTR [esi+0x24],0xf
10037594:	mov    DWORD PTR [esi+0x20],eax
10037597:	mov    ecx,esi
10037599:	mov    BYTE PTR [esi+0x10],al
1003759c:	call   0x10043210
100375a1:	test   BYTE PTR [esp+0x8],0x1
100375a6:	je     0x100375b1
100375a8:	push   esi
100375a9:	call   0x100430d2
100375ae:	add    esp,0x4
100375b1:	mov    eax,esi
100375b3:	pop    esi
100375b4:	ret    0x4
100375b7:	int3   
100375b8:	int3   
100375b9:	int3   
100375ba:	int3   
100375bb:	int3   
100375bc:	int3   
100375bd:	int3   
100375be:	int3   
100375bf:	int3   
100375c0:	push   0xffffffff
100375c2:	push   0x10061590
100375c7:	mov    eax,fs:0x0
100375cd:	push   eax
100375ce:	sub    esp,0x1c
100375d1:	push   ebx
100375d2:	push   esi
100375d3:	push   edi
100375d4:	mov    eax,ds:0x1007e030
100375d9:	xor    eax,esp
100375db:	push   eax
100375dc:	lea    eax,[esp+0x2c]
100375e0:	mov    fs:0x0,eax
100375e6:	mov    esi,DWORD PTR [esp+0x3c]
100375ea:	push   0x10073cf4
100375ef:	push   0xd
100375f1:	push   0x10073d30
100375f6:	call   0x100042e3
100375fb:	mov    edi,eax
100375fd:	xor    ebx,ebx
100375ff:	push   edi
10037600:	mov    DWORD PTR [esp+0x38],0xf
10037608:	mov    DWORD PTR [esp+0x34],ebx
1003760c:	mov    BYTE PTR [esp+0x24],bl
10037610:	call   0x10043250
10037615:	add    esp,0x10
10037618:	push   eax
10037619:	push   edi
1003761a:	lea    ecx,[esp+0x18]
1003761e:	call   0x1000133f
10037623:	mov    ecx,esi
10037625:	mov    DWORD PTR [esp+0x34],ebx
10037629:	call   0x10043141
1003762e:	mov    BYTE PTR [esp+0x34],0x1
10037633:	push   0xffffffff
10037635:	lea    ecx,[esi+0xc]
10037638:	mov    DWORD PTR [esi],0x10073674
1003763e:	push   ebx
1003763f:	lea    eax,[esp+0x18]
10037643:	mov    DWORD PTR [ecx+0x18],0xf
1003764a:	mov    DWORD PTR [ecx+0x14],ebx
1003764d:	push   eax
1003764e:	mov    BYTE PTR [ecx+0x4],bl
10037651:	call   0x10001245
10037656:	cmp    DWORD PTR [esp+0x28],0x10
1003765b:	jb     0x1003766a
1003765d:	mov    ecx,DWORD PTR [esp+0x14]
10037661:	push   ecx
10037662:	call   0x100430d2
10037667:	add    esp,0x4
1003766a:	mov    eax,esi
1003766c:	mov    DWORD PTR [esi],0x10073d44
10037672:	mov    ecx,DWORD PTR [esp+0x2c]
10037676:	mov    DWORD PTR fs:0x0,ecx
1003767d:	pop    ecx
1003767e:	pop    edi
1003767f:	pop    esi
10037680:	pop    ebx
10037681:	add    esp,0x28
10037684:	ret    0x4
10037687:	int3   
10037688:	int3   
10037689:	int3   
1003768a:	int3   
1003768b:	int3   
1003768c:	int3   
1003768d:	int3   
1003768e:	int3   
1003768f:	int3   
10037690:	push   0xffffffff
10037692:	push   0x100627c1
10037697:	mov    eax,fs:0x0
1003769d:	push   eax
1003769e:	sub    esp,0x10
100376a1:	push   ebx
100376a2:	push   ebp
100376a3:	push   edi
100376a4:	mov    eax,ds:0x1007e030
100376a9:	xor    eax,esp
100376ab:	push   eax
100376ac:	lea    eax,[esp+0x20]
100376b0:	mov    fs:0x0,eax
100376b6:	mov    ebp,DWORD PTR [esp+0x30]
100376ba:	xor    eax,eax
100376bc:	mov    DWORD PTR [esp+0x10],eax
100376c0:	mov    ecx,DWORD PTR [ebp+0x0]
100376c3:	mov    DWORD PTR [esp+0x14],esi
100376c7:	mov    DWORD PTR [esp+0x18],ebp
100376cb:	mov    DWORD PTR [esp+0x1c],ecx
100376cf:	mov    edi,0x1
100376d4:	mov    DWORD PTR [esp+0x28],edi
100376d8:	mov    DWORD PTR [esi+0x18],0xf
100376df:	mov    DWORD PTR [esi+0x14],eax
100376e2:	mov    BYTE PTR [esi+0x4],al
100376e5:	mov    eax,ebp
100376e7:	mov    DWORD PTR [esp+0x10],edi
100376eb:	call   0x10037470
100376f0:	test   al,al
100376f2:	je     0x10037799
100376f8:	mov    eax,ebp
100376fa:	call   0x10037470
100376ff:	or     edx,0xffffffff
10037702:	sub    edx,DWORD PTR [esi+0x14]
10037705:	mov    bl,al
10037707:	cmp    edx,0x1
1003770a:	ja     0x10037711
1003770c:	call   0x10057440
10037711:	mov    edi,DWORD PTR [esi+0x14]
10037714:	add    edi,0x1
10037717:	cmp    edi,0xfffffffe
1003771a:	jbe    0x10037721
1003771c:	call   0x10057440
10037721:	mov    eax,DWORD PTR [esi+0x18]
10037724:	cmp    eax,edi
10037726:	jae    0x1003774a
10037728:	mov    eax,DWORD PTR [esi+0x14]
1003772b:	push   eax
1003772c:	push   edi
1003772d:	mov    ecx,esi
1003772f:	call   0x10001504
10037734:	test   edi,edi
10037736:	jbe    0x10037780
10037738:	mov    ecx,DWORD PTR [esi+0x14]
1003773b:	mov    edx,0x10
10037740:	cmp    DWORD PTR [esi+0x18],edx
10037743:	jb     0x10037766
10037745:	mov    eax,DWORD PTR [esi+0x4]
10037748:	jmp    0x10037769
1003774a:	test   edi,edi
1003774c:	jne    0x10037736
1003774e:	cmp    eax,0x10
10037751:	mov    DWORD PTR [esi+0x14],edi
10037754:	jb     0x1003775e
10037756:	mov    eax,DWORD PTR [esi+0x4]
10037759:	mov    BYTE PTR [eax],0x0
1003775c:	jmp    0x10037780
1003775e:	lea    eax,[esi+0x4]
10037761:	mov    BYTE PTR [eax],0x0
10037764:	jmp    0x10037780
10037766:	lea    eax,[esi+0x4]
10037769:	mov    BYTE PTR [eax+ecx*1],bl
1003776c:	cmp    DWORD PTR [esi+0x18],edx
1003776f:	mov    DWORD PTR [esi+0x14],edi
10037772:	jb     0x10037779
10037774:	mov    eax,DWORD PTR [esi+0x4]
10037777:	jmp    0x1003777c
10037779:	lea    eax,[esi+0x4]
1003777c:	mov    BYTE PTR [eax+edi*1],0x0
10037780:	add    DWORD PTR [ebp+0x0],0x1
10037784:	mov    eax,ebp
10037786:	call   0x10037470
1003778b:	test   al,al
1003778d:	jne    0x100376f8
10037793:	add    DWORD PTR [ebp+0x0],0x1
10037797:	jmp    0x1003779c
10037799:	add    DWORD PTR [ebp+0x0],edi
1003779c:	mov    eax,esi
1003779e:	mov    ecx,DWORD PTR [esp+0x20]
100377a2:	mov    DWORD PTR fs:0x0,ecx
100377a9:	pop    ecx
100377aa:	pop    edi
100377ab:	pop    ebp
100377ac:	pop    ebx
100377ad:	add    esp,0x1c
100377b0:	ret    0x4
100377b3:	int3   
100377b4:	int3   
100377b5:	int3   
100377b6:	int3   
100377b7:	int3   
100377b8:	int3   
100377b9:	int3   
100377ba:	int3   
100377bb:	int3   
100377bc:	int3   
100377bd:	int3   
100377be:	int3   
100377bf:	int3   
100377c0:	push   ebp
100377c1:	mov    ebp,esp
100377c3:	and    esp,0xfffffff8
100377c6:	push   0xffffffff
100377c8:	push   0x100633a8
100377cd:	mov    eax,fs:0x0
100377d3:	push   eax
100377d4:	sub    esp,0x38
100377d7:	push   ebx
100377d8:	mov    eax,ds:0x1007e030
100377dd:	xor    eax,esp
100377df:	push   eax
100377e0:	lea    eax,[esp+0x40]
100377e4:	mov    fs:0x0,eax
100377ea:	xor    eax,eax
100377ec:	mov    DWORD PTR [esp+0xc],eax
100377f0:	mov    ecx,DWORD PTR [esi]
100377f2:	mov    DWORD PTR [esp+0xc],esi
100377f6:	mov    DWORD PTR [esp+0x10],ecx
100377fa:	push   esi
100377fb:	mov    DWORD PTR [esp+0x4c],eax
100377ff:	call   0x100379d0
10037804:	mov    ecx,DWORD PTR [esi]
10037806:	mov    edx,DWORD PTR [esi+0x4]
10037809:	mov    ebx,eax
1003780b:	sub    edx,ecx
1003780d:	cmp    ebx,edx
1003780f:	jbe    0x1003782a
10037811:	lea    eax,[esp+0x14]
10037815:	push   eax
10037816:	call   0x100375c0
1003781b:	push   0x10074f0c
10037820:	lea    ecx,[esp+0x18]
10037824:	push   ecx
10037825:	call   0x10047c54
1003782a:	mov    eax,DWORD PTR [esi+0x8]
1003782d:	add    eax,ecx
1003782f:	push   ebx
10037830:	mov    DWORD PTR [edi+0x18],0xf
10037837:	mov    DWORD PTR [edi+0x14],0x0
1003783e:	push   eax
1003783f:	mov    ecx,edi
10037841:	mov    BYTE PTR [edi+0x4],0x0
10037845:	call   0x1000133f
1003784a:	add    DWORD PTR [esi],ebx
1003784c:	mov    eax,edi
1003784e:	mov    ecx,DWORD PTR [esp+0x40]
10037852:	mov    DWORD PTR fs:0x0,ecx
10037859:	pop    ecx
1003785a:	pop    ebx
1003785b:	mov    esp,ebp
1003785d:	pop    ebp
1003785e:	ret    
1003785f:	int3   
10037860:	push   0xffffffff
10037862:	push   0x10063999
10037867:	mov    eax,fs:0x0
1003786d:	push   eax
1003786e:	sub    esp,0x28
10037871:	mov    eax,ds:0x1007e030
10037876:	xor    eax,esp
10037878:	mov    DWORD PTR [esp+0x24],eax
1003787c:	push   ebp
1003787d:	push   esi
1003787e:	push   edi
1003787f:	mov    eax,ds:0x1007e030
10037884:	xor    eax,esp
10037886:	push   eax
10037887:	lea    eax,[esp+0x38]
1003788b:	mov    fs:0x0,eax
10037891:	mov    ebp,DWORD PTR [esp+0x48]
10037895:	xor    eax,eax
10037897:	mov    DWORD PTR [esp+0x40],eax
1003789b:	mov    esi,ecx
1003789d:	lea    edi,[esp+0x18]
100378a1:	mov    DWORD PTR [esp+0x14],ebp
100378a5:	mov    DWORD PTR [esp+0x10],eax
100378a9:	call   0x100377c0
100378ae:	mov    DWORD PTR [esp+0x40],0x1
100378b6:	mov    eax,ds:0x10080a74
100378bb:	mov    edx,DWORD PTR [eax+0xc]
100378be:	mov    ecx,0x10080a74
100378c3:	call   edx
100378c5:	add    eax,0x10
100378c8:	mov    DWORD PTR [ebp+0x0],eax
100378cb:	mov    eax,0x1006cd08
100378d0:	test   eax,0xffff0000
100378d5:	mov    BYTE PTR [esp+0x40],0x2
100378da:	jne    0x100378f8
100378dc:	mov    ecx,eax
100378de:	movzx  esi,cx
100378e1:	push   esi
100378e2:	call   0x10001ffc
100378e7:	add    esp,0x4
100378ea:	test   eax,eax
100378ec:	je     0x10037903
100378ee:	push   esi
100378ef:	push   eax
100378f0:	push   ebp
100378f1:	call   0x100021c4
100378f6:	jmp    0x10037903
100378f8:	push   0x1006cd08
100378fd:	push   ebp
100378fe:	call   0x100020aa
10037903:	mov    BYTE PTR [esp+0x40],0x1
10037908:	mov    eax,DWORD PTR [ebp+0x0]
1003790b:	mov    esi,DWORD PTR [esp+0x2c]
1003790f:	mov    edi,0x10
10037914:	sub    eax,edi
10037916:	mov    ecx,0x1
1003791b:	sub    ecx,DWORD PTR [eax+0xc]
1003791e:	mov    eax,DWORD PTR [eax+0x8]
10037921:	add    esi,esi
10037923:	sub    eax,esi
10037925:	or     eax,ecx
10037927:	mov    DWORD PTR [esp+0x10],0x1
1003792f:	jge    0x1003793a
10037931:	mov    eax,esi
10037933:	mov    ecx,ebp
10037935:	call   0x1000224a
1003793a:	cmp    DWORD PTR [esp+0x30],edi
1003793e:	mov    ecx,DWORD PTR [ebp+0x0]
10037941:	mov    eax,DWORD PTR [esp+0x1c]
10037945:	jae    0x1003794b
10037947:	lea    eax,[esp+0x1c]
1003794b:	push   esi
1003794c:	push   ecx
1003794d:	push   0xffffffff
1003794f:	push   eax
10037950:	push   0x0
10037952:	push   0xfde9
10037957:	call   DWORD PTR ds:0x1006608c
1003795d:	mov    eax,DWORD PTR [ebp+0x0]
10037960:	test   eax,eax
10037962:	je     0x10037971
10037964:	push   eax
10037965:	call   0x10043933
1003796a:	add    esp,0x4
1003796d:	test   eax,eax
1003796f:	jl     0x100379ba
10037971:	mov    ecx,DWORD PTR [ebp+0x0]
10037974:	cmp    eax,DWORD PTR [ecx-0x8]
10037977:	jg     0x100379ba
10037979:	mov    DWORD PTR [ecx-0xc],eax
1003797c:	mov    edx,DWORD PTR [ebp+0x0]
1003797f:	mov    WORD PTR [edx+eax*2],0x0
10037985:	cmp    DWORD PTR [esp+0x30],edi
10037989:	jb     0x10037998
1003798b:	mov    eax,DWORD PTR [esp+0x1c]
1003798f:	push   eax
10037990:	call   0x100430d2
10037995:	add    esp,0x4
10037998:	mov    eax,ebp
1003799a:	mov    ecx,DWORD PTR [esp+0x38]
1003799e:	mov    DWORD PTR fs:0x0,ecx
100379a5:	pop    ecx
100379a6:	pop    edi
100379a7:	pop    esi
100379a8:	pop    ebp
100379a9:	mov    ecx,DWORD PTR [esp+0x24]
100379ad:	xor    ecx,esp
100379af:	call   0x100430d7
100379b4:	add    esp,0x34
100379b7:	ret    0x4
100379ba:	push   0x80070057
100379bf:	call   0x10001f24
100379c4:	int3   
100379c5:	int3   
100379c6:	int3   
100379c7:	int3   
100379c8:	int3   
100379c9:	int3   
100379ca:	int3   
100379cb:	int3   
100379cc:	int3   
100379cd:	int3   
100379ce:	int3   
100379cf:	int3   
100379d0:	push   ebp
100379d1:	mov    ebp,esp
100379d3:	and    esp,0xfffffff8
100379d6:	push   0xffffffff
100379d8:	push   0x10062778
100379dd:	mov    eax,fs:0x0
100379e3:	push   eax
100379e4:	sub    esp,0x3c
100379e7:	push   esi
100379e8:	push   edi
100379e9:	mov    eax,ds:0x1007e030
100379ee:	xor    eax,esp
100379f0:	push   eax
100379f1:	lea    eax,[esp+0x48]
100379f5:	mov    fs:0x0,eax
100379fb:	mov    eax,DWORD PTR [ebp+0x8]
100379fe:	mov    ecx,DWORD PTR [eax]
10037a00:	mov    DWORD PTR [esp+0x14],eax
10037a04:	mov    DWORD PTR [esp+0x18],ecx
10037a08:	mov    DWORD PTR [esp+0x50],0x0
10037a10:	mov    edi,DWORD PTR [eax+0x4]
10037a13:	cmp    ecx,edi
10037a15:	jbe    0x10037a30
10037a17:	lea    eax,[esp+0x1c]
10037a1b:	push   eax
10037a1c:	call   0x100375c0
10037a21:	push   0x10074f0c
10037a26:	lea    ecx,[esp+0x20]
10037a2a:	push   ecx
10037a2b:	call   0x10047c54
10037a30:	mov    esi,DWORD PTR [eax+0x8]
10037a33:	mov    dl,BYTE PTR [esi+ecx*1]
10037a36:	add    ecx,0x1
10037a39:	cmp    ecx,edi
10037a3b:	mov    BYTE PTR [esp+0x10],dl
10037a3f:	mov    DWORD PTR [eax],ecx
10037a41:	jbe    0x10037a5c
10037a43:	lea    eax,[esp+0x1c]
10037a47:	push   eax
10037a48:	call   0x100375c0
10037a4d:	push   0x10074f0c
10037a52:	lea    ecx,[esp+0x20]
10037a56:	push   ecx
10037a57:	call   0x10047c54
10037a5c:	mov    dl,BYTE PTR [ecx+esi*1]
10037a5f:	add    ecx,0x1
10037a62:	cmp    ecx,edi
10037a64:	mov    BYTE PTR [esp+0x11],dl
10037a68:	mov    DWORD PTR [eax],ecx
10037a6a:	jbe    0x10037a85
10037a6c:	lea    eax,[esp+0x1c]
10037a70:	push   eax
10037a71:	call   0x100375c0
10037a76:	push   0x10074f0c
10037a7b:	lea    ecx,[esp+0x20]
10037a7f:	push   ecx
10037a80:	call   0x10047c54
10037a85:	mov    dl,BYTE PTR [ecx+esi*1]
10037a88:	add    ecx,0x1
10037a8b:	cmp    ecx,edi
10037a8d:	mov    BYTE PTR [esp+0x12],dl
10037a91:	mov    DWORD PTR [eax],ecx
10037a93:	jbe    0x10037aae
10037a95:	lea    eax,[esp+0x1c]
10037a99:	push   eax
10037a9a:	call   0x100375c0
10037a9f:	push   0x10074f0c
10037aa4:	lea    ecx,[esp+0x20]
10037aa8:	push   ecx
10037aa9:	call   0x10047c54
10037aae:	mov    dl,BYTE PTR [ecx+esi*1]
10037ab1:	add    ecx,0x1
10037ab4:	mov    BYTE PTR [esp+0x13],dl
10037ab8:	mov    DWORD PTR [eax],ecx
10037aba:	mov    eax,DWORD PTR [esp+0x10]
10037abe:	mov    ecx,DWORD PTR [esp+0x48]
10037ac2:	mov    DWORD PTR fs:0x0,ecx
10037ac9:	pop    ecx
10037aca:	pop    edi
10037acb:	pop    esi
10037acc:	mov    esp,ebp
10037ace:	pop    ebp
10037acf:	ret    0x4
10037ad2:	int3   
10037ad3:	int3   
10037ad4:	int3   
10037ad5:	int3   
10037ad6:	int3   
10037ad7:	int3   
10037ad8:	int3   
10037ad9:	int3   
10037ada:	int3   
10037adb:	int3   
10037adc:	int3   
10037add:	int3   
10037ade:	int3   
10037adf:	int3   
10037ae0:	mov    eax,DWORD PTR [esi]
10037ae2:	lea    ecx,[eax+edi*1]
10037ae5:	sub    esp,0x28
10037ae8:	cmp    ecx,DWORD PTR [esi+0x4]
10037aeb:	jbe    0x10037b05
10037aed:	lea    edx,[esp]
10037af0:	push   edx
10037af1:	call   0x100375c0
10037af6:	push   0x10074f0c
10037afb:	lea    eax,[esp+0x4]
10037aff:	push   eax
10037b00:	call   0x10047c54
10037b05:	mov    ecx,DWORD PTR [esi+0x8]
10037b08:	mov    edx,DWORD PTR [esp+0x2c]
10037b0c:	push   edi
10037b0d:	add    ecx,eax
10037b0f:	push   ecx
10037b10:	push   edx
10037b11:	call   0x10045420
10037b16:	add    esp,0xc
10037b19:	add    DWORD PTR [esi],edi
10037b1b:	add    esp,0x28
10037b1e:	ret    0x4
10037b21:	int3   
10037b22:	int3   
10037b23:	int3   
10037b24:	int3   
10037b25:	int3   
10037b26:	int3   
10037b27:	int3   
10037b28:	int3   
10037b29:	int3   
10037b2a:	int3   
10037b2b:	int3   
10037b2c:	int3   
10037b2d:	int3   
10037b2e:	int3   
10037b2f:	int3   
10037b30:	mov    eax,DWORD PTR [ecx]
10037b32:	test   eax,eax
10037b34:	je     0x10037b3b
10037b36:	mov    ecx,DWORD PTR [ecx+0x4]
10037b39:	mov    DWORD PTR [eax],ecx
10037b3b:	ret    
10037b3c:	int3   
10037b3d:	int3   
10037b3e:	int3   
10037b3f:	int3   
10037b40:	push   0x10080d4c
10037b45:	call   DWORD PTR ds:0x100660a4
10037b4b:	mov    eax,DWORD PTR [esp+0x4]
10037b4f:	ret    0x4
10037b52:	int3   
10037b53:	int3   
10037b54:	int3   
10037b55:	int3   
10037b56:	int3   
10037b57:	int3   
10037b58:	int3   
10037b59:	int3   
10037b5a:	int3   
10037b5b:	int3   
10037b5c:	int3   
10037b5d:	int3   
10037b5e:	int3   
10037b5f:	int3   
10037b60:	push   0x10080d4c
10037b65:	call   DWORD PTR ds:0x100660ac
10037b6b:	ret    
10037b6c:	int3   
10037b6d:	int3   
10037b6e:	int3   
10037b6f:	int3   
10037b70:	push   ebp
10037b71:	mov    ebp,esp
10037b73:	push   0xffffffff
10037b75:	push   0x10062750
10037b7a:	mov    eax,fs:0x0
10037b80:	push   eax
10037b81:	sub    esp,0x10
10037b84:	push   ebx
10037b85:	push   esi
10037b86:	push   edi
10037b87:	mov    eax,ds:0x1007e030
10037b8c:	xor    eax,ebp
10037b8e:	push   eax
10037b8f:	lea    eax,[ebp-0xc]
10037b92:	mov    fs:0x0,eax
10037b98:	mov    DWORD PTR [ebp-0x10],esp
10037b9b:	push   0x1
10037b9d:	lea    eax,[ebp-0x18]
10037ba0:	push   eax
10037ba1:	mov    DWORD PTR [ebp-0x4],0x0
10037ba8:	call   0x10034bf0
10037bad:	mov    ecx,DWORD PTR [ebp+0x8]
10037bb0:	mov    esi,DWORD PTR [ebp-0x18]
10037bb3:	push   0x0
10037bb5:	lea    edx,[ebp-0x1c]
10037bb8:	push   edx
10037bb9:	push   0x4
10037bbb:	lea    eax,[ebp-0x14]
10037bbe:	push   eax
10037bbf:	push   0x4
10037bc1:	mov    DWORD PTR [ebp-0x14],ecx
10037bc4:	mov    ecx,eax
10037bc6:	push   ecx
10037bc7:	push   0x22c068
10037bcc:	push   esi
10037bcd:	call   DWORD PTR ds:0x10066260
10037bd3:	push   esi
10037bd4:	call   DWORD PTR ds:0x10066070
10037bda:	mov    ecx,DWORD PTR [ebp-0xc]
10037bdd:	mov    DWORD PTR fs:0x0,ecx
10037be4:	pop    ecx
10037be5:	pop    edi
10037be6:	pop    esi
10037be7:	pop    ebx
10037be8:	mov    esp,ebp
10037bea:	pop    ebp
10037beb:	ret    
10037bec:	mov    eax,0x10037bda
10037bf1:	ret    
10037bf2:	int3   
10037bf3:	int3   
10037bf4:	int3   
10037bf5:	int3   
10037bf6:	int3   
10037bf7:	int3   
10037bf8:	int3   
10037bf9:	int3   
10037bfa:	int3   
10037bfb:	int3   
10037bfc:	int3   
10037bfd:	int3   
10037bfe:	int3   
10037bff:	int3   
10037c00:	push   ebp
10037c01:	mov    ebp,esp
10037c03:	push   0xffffffff
10037c05:	push   0x10062728
10037c0a:	mov    eax,fs:0x0
10037c10:	push   eax
10037c11:	sub    esp,0x1c
10037c14:	push   ebx
10037c15:	push   esi
10037c16:	push   edi
10037c17:	mov    eax,ds:0x1007e030
10037c1c:	xor    eax,ebp
10037c1e:	push   eax
10037c1f:	lea    eax,[ebp-0xc]
10037c22:	mov    fs:0x0,eax
10037c28:	mov    DWORD PTR [ebp-0x10],esp
10037c2b:	xor    esi,esi
10037c2d:	mov    DWORD PTR [ebp-0x24],esi
10037c30:	mov    eax,ds:0x10080a74
10037c35:	mov    edx,DWORD PTR [eax+0xc]
10037c38:	mov    ecx,0x10080a74
10037c3d:	call   edx
10037c3f:	lea    edi,[eax+0x10]
10037c42:	mov    DWORD PTR [ebp-0x14],edi
10037c45:	push   0x1
10037c47:	lea    eax,[ebp-0x24]
10037c4a:	mov    DWORD PTR [ebp-0x4],esi
10037c4d:	push   eax
10037c4e:	mov    BYTE PTR [ebp-0x4],0x1
10037c52:	call   0x10034bf0
10037c57:	mov    BYTE PTR [ebp-0x4],0x2
10037c5b:	mov    DWORD PTR [ebp-0x20],esi
10037c5e:	mov    edi,edi
10037c60:	cmp    esi,0x12
10037c63:	je     0x10037d61
10037c69:	mov    edx,DWORD PTR ds:0x10080a74
10037c6f:	mov    eax,DWORD PTR [edx+0xc]
10037c72:	mov    ecx,0x10080a74
10037c77:	call   eax
10037c79:	add    eax,0x10
10037c7c:	mov    DWORD PTR [ebp-0x1c],eax
10037c7f:	push   0x0
10037c81:	lea    ecx,[ebp-0x28]
10037c84:	push   ecx
10037c85:	push   0x4
10037c87:	lea    edx,[ebp-0x18]
10037c8a:	push   edx
10037c8b:	push   0x4
10037c8d:	mov    eax,edx
10037c8f:	push   eax
10037c90:	mov    BYTE PTR [ebp-0x4],0x3
10037c94:	mov    ecx,DWORD PTR [ebp-0x24]
10037c97:	push   0x22c06c
10037c9c:	push   ecx
10037c9d:	mov    DWORD PTR [ebp-0x18],esi
10037ca0:	call   DWORD PTR ds:0x10066260
10037ca6:	mov    esi,DWORD PTR [ebp-0x18]
10037ca9:	test   esi,esi
10037cab:	je     0x10037cf0
10037cad:	push   0x12b5f856
10037cb2:	push   0x10073d4c
10037cb7:	call   0x100042d1
10037cbc:	add    esp,0x8
10037cbf:	push   eax
10037cc0:	push   0x2
10037cc2:	push   0x10073d70
10037cc7:	call   0x100042e3
10037ccc:	add    esp,0xc
10037ccf:	push   esi
10037cd0:	push   eax
10037cd1:	lea    edi,[ebp-0x1c]
10037cd4:	call   0x10037f20
10037cd9:	mov    eax,DWORD PTR [ebp-0x1c]
10037cdc:	mov    ecx,DWORD PTR [eax-0xc]
10037cdf:	add    esp,0x8
10037ce2:	push   ecx
10037ce3:	push   eax
10037ce4:	lea    edx,[ebp-0x14]
10037ce7:	push   edx
10037ce8:	call   0x100349b0
10037ced:	mov    edi,DWORD PTR [ebp-0x14]
10037cf0:	mov    ebx,DWORD PTR [edi-0xc]
10037cf3:	mov    eax,DWORD PTR [edi-0x8]
10037cf6:	mov    ecx,0x1
10037cfb:	sub    ecx,DWORD PTR [edi-0x4]
10037cfe:	lea    esi,[ebx+0x1]
10037d01:	sub    eax,esi
10037d03:	or     eax,ecx
10037d05:	jge    0x10037d14
10037d07:	mov    ecx,esi
10037d09:	lea    eax,[ebp-0x14]
10037d0c:	call   0x100348f0
10037d11:	mov    edi,DWORD PTR [ebp-0x14]
10037d14:	test   esi,esi
10037d16:	mov    BYTE PTR [ebx+edi*1],0x2c
10037d1a:	jl     0x10037d57
10037d1c:	cmp    esi,DWORD PTR [edi-0x8]
10037d1f:	jg     0x10037d57
10037d21:	mov    BYTE PTR [ebp-0x4],0x2
10037d25:	mov    eax,DWORD PTR [ebp-0x1c]
10037d28:	add    eax,0xfffffff0
10037d2b:	mov    DWORD PTR [edi-0xc],esi
10037d2e:	mov    BYTE PTR [esi+edi*1],0x0
10037d32:	lea    ecx,[eax+0xc]
10037d35:	or     edx,0xffffffff
10037d38:	lock xadd DWORD PTR [ecx],edx
10037d3c:	dec    edx
10037d3d:	test   edx,edx
10037d3f:	jg     0x10037d4b
10037d41:	mov    ecx,DWORD PTR [eax]
10037d43:	mov    edx,DWORD PTR [ecx]
10037d45:	push   eax
10037d46:	mov    eax,DWORD PTR [edx+0x4]
10037d49:	call   eax
10037d4b:	add    DWORD PTR [ebp-0x20],0x1
10037d4f:	mov    esi,DWORD PTR [ebp-0x20]
10037d52:	jmp    0x10037c60
10037d57:	push   0x80070057
10037d5c:	call   0x10001f24
10037d61:	lea    edi,[ebp-0x14]
10037d64:	call   0x10037ea0
10037d69:	mov    ecx,DWORD PTR [ebp-0x24]
10037d6c:	push   ecx
10037d6d:	call   DWORD PTR ds:0x10066070
10037d73:	mov    DWORD PTR [ebp-0x4],0x0
10037d7a:	mov    eax,DWORD PTR [ebp-0x14]
10037d7d:	cmp    DWORD PTR [eax-0x4],0x1
10037d81:	jle    0x10037d93
10037d83:	mov    edx,DWORD PTR [eax-0xc]
10037d86:	push   edx
10037d87:	lea    eax,[ebp-0x14]
10037d8a:	push   eax
10037d8b:	call   0x10034770
10037d90:	mov    eax,DWORD PTR [ebp-0x14]
10037d93:	mov    esi,DWORD PTR [ebp+0x8]
10037d96:	mov    DWORD PTR [esi+0x18],0xf
10037d9d:	mov    DWORD PTR [esi+0x14],0x0
10037da4:	lea    edi,[esi+0x4]
10037da7:	push   eax
10037da8:	mov    BYTE PTR [edi],0x0
10037dab:	call   0x10043250
10037db0:	mov    ebx,eax
10037db2:	mov    eax,DWORD PTR [esi+0x18]
10037db5:	add    esp,0x4
10037db8:	cmp    eax,0x10
10037dbb:	jb     0x10037dc7
10037dbd:	mov    ecx,DWORD PTR [edi]
10037dbf:	jmp    0x10037dc9
10037dc1:	mov    eax,0x10037d7a
10037dc6:	ret    
10037dc7:	mov    ecx,edi
10037dc9:	cmp    DWORD PTR [ebp-0x14],ecx
10037dcc:	jb     0x10037dfa
10037dce:	cmp    eax,0x10
10037dd1:	jb     0x10037dd7
10037dd3:	mov    ecx,DWORD PTR [edi]
10037dd5:	jmp    0x10037dd9
10037dd7:	mov    ecx,edi
10037dd9:	mov    edx,DWORD PTR [esi+0x14]
10037ddc:	add    edx,ecx
10037dde:	mov    ecx,DWORD PTR [ebp-0x14]
10037de1:	cmp    edx,ecx
10037de3:	jbe    0x10037dfa
10037de5:	cmp    eax,0x10
10037de8:	jb     0x10037dec
10037dea:	mov    edi,DWORD PTR [edi]
10037dec:	push   ebx
10037ded:	sub    ecx,edi
10037def:	push   ecx
10037df0:	push   esi
10037df1:	mov    ecx,esi
10037df3:	call   0x10001245
10037df8:	jmp    0x10037e5a
10037dfa:	cmp    ebx,0xfffffffe
10037dfd:	jbe    0x10037e04
10037dff:	call   0x10057440
10037e04:	mov    eax,DWORD PTR [esi+0x18]
10037e07:	cmp    eax,ebx
10037e09:	jae    0x10037e27
10037e0b:	mov    eax,DWORD PTR [esi+0x14]
10037e0e:	push   eax
10037e0f:	push   ebx
10037e10:	mov    ecx,esi
10037e12:	call   0x10001504
10037e17:	test   ebx,ebx
10037e19:	jbe    0x10037e5a
10037e1b:	mov    ecx,DWORD PTR [esi+0x18]
10037e1e:	cmp    ecx,0x10
10037e21:	jb     0x10037e3a
10037e23:	mov    eax,DWORD PTR [edi]
10037e25:	jmp    0x10037e3c
10037e27:	test   ebx,ebx
10037e29:	jne    0x10037e19
10037e2b:	cmp    eax,0x10
10037e2e:	mov    DWORD PTR [esi+0x14],ebx
10037e31:	jb     0x10037e35
10037e33:	mov    edi,DWORD PTR [edi]
10037e35:	mov    BYTE PTR [edi],0x0
10037e38:	jmp    0x10037e5a
10037e3a:	mov    eax,edi
10037e3c:	mov    edx,DWORD PTR [ebp-0x14]
10037e3f:	push   ebx
10037e40:	push   edx
10037e41:	push   ecx
10037e42:	push   eax
10037e43:	call   0x10043605
10037e48:	add    esp,0x10
10037e4b:	cmp    DWORD PTR [esi+0x18],0x10
10037e4f:	mov    DWORD PTR [esi+0x14],ebx
10037e52:	jb     0x10037e56
10037e54:	mov    edi,DWORD PTR [edi]
10037e56:	mov    BYTE PTR [edi+ebx*1],0x0
10037e5a:	mov    DWORD PTR [ebp-0x4],0xffffffff
10037e61:	mov    eax,DWORD PTR [ebp-0x14]
10037e64:	add    eax,0xfffffff0
10037e67:	lea    ecx,[eax+0xc]
10037e6a:	or     edx,0xffffffff
10037e6d:	lock xadd DWORD PTR [ecx],edx
10037e71:	dec    edx
10037e72:	test   edx,edx
10037e74:	jg     0x10037e80
10037e76:	mov    ecx,DWORD PTR [eax]
10037e78:	mov    edx,DWORD PTR [ecx]
10037e7a:	push   eax
10037e7b:	mov    eax,DWORD PTR [edx+0x4]
10037e7e:	call   eax
10037e80:	mov    eax,esi
10037e82:	mov    ecx,DWORD PTR [ebp-0xc]
10037e85:	mov    DWORD PTR fs:0x0,ecx
10037e8c:	pop    ecx
10037e8d:	pop    edi
10037e8e:	pop    esi
10037e8f:	pop    ebx
10037e90:	mov    esp,ebp
10037e92:	pop    ebp
10037e93:	ret    
10037e94:	int3   
10037e95:	int3   
10037e96:	int3   
10037e97:	int3   
10037e98:	int3   
10037e99:	int3   
10037e9a:	int3   
10037e9b:	int3   
10037e9c:	int3   
10037e9d:	int3   
10037e9e:	int3   
10037e9f:	int3   
10037ea0:	mov    eax,DWORD PTR [edi]
10037ea2:	mov    cl,BYTE PTR [eax]
10037ea4:	push   esi
10037ea5:	xor    esi,esi
10037ea7:	test   cl,cl
10037ea9:	je     0x10037f04
10037eab:	jmp    0x10037eb0
10037ead:	lea    ecx,[ecx+0x0]
10037eb0:	cmp    cl,0x2c
10037eb3:	jne    0x10037ebd
10037eb5:	test   esi,esi
10037eb7:	jne    0x10037ebf
10037eb9:	mov    esi,eax
10037ebb:	jmp    0x10037ebf
10037ebd:	xor    esi,esi
10037ebf:	push   eax
10037ec0:	call   0x1005933a
10037ec5:	mov    cl,BYTE PTR [eax]
10037ec7:	add    esp,0x4
10037eca:	test   cl,cl
10037ecc:	jne    0x10037eb0
10037ece:	test   esi,esi
10037ed0:	je     0x10037f04
10037ed2:	mov    eax,DWORD PTR [edi]
10037ed4:	mov    edx,DWORD PTR [eax-0x8]
10037ed7:	sub    esi,eax
10037ed9:	mov    ecx,0x1
10037ede:	sub    ecx,DWORD PTR [eax-0x4]
10037ee1:	sub    edx,esi
10037ee3:	or     ecx,edx
10037ee5:	jge    0x10037ef0
10037ee7:	mov    ecx,esi
10037ee9:	mov    eax,edi
10037eeb:	call   0x100348f0
10037ef0:	test   esi,esi
10037ef2:	jl     0x10037f08
10037ef4:	mov    eax,DWORD PTR [edi]
10037ef6:	cmp    esi,DWORD PTR [eax-0x8]
10037ef9:	jg     0x10037f08
10037efb:	mov    DWORD PTR [eax-0xc],esi
10037efe:	mov    eax,DWORD PTR [edi]
10037f00:	mov    BYTE PTR [esi+eax*1],0x0
10037f04:	mov    eax,edi
10037f06:	pop    esi
10037f07:	ret    
10037f08:	push   0x80070057
10037f0d:	call   0x10001f24
10037f12:	int3   
10037f13:	int3   
10037f14:	int3   
10037f15:	int3   
10037f16:	int3   
10037f17:	int3   
10037f18:	int3   
10037f19:	int3   
10037f1a:	int3   
10037f1b:	int3   
10037f1c:	int3   
10037f1d:	int3   
10037f1e:	int3   
10037f1f:	int3   
10037f20:	push   ebx
10037f21:	mov    ebx,DWORD PTR [esp+0x8]
10037f25:	lea    eax,[esp+0xc]
10037f29:	push   eax
10037f2a:	call   0x10037f40
10037f2f:	pop    ebx
10037f30:	ret    
10037f31:	int3   
10037f32:	int3   
10037f33:	int3   
10037f34:	int3   
10037f35:	int3   
10037f36:	int3   
10037f37:	int3   
10037f38:	int3   
10037f39:	int3   
10037f3a:	int3   
10037f3b:	int3   
10037f3c:	int3   
10037f3d:	int3   
10037f3e:	int3   
10037f3f:	int3   
10037f40:	test   ebx,ebx
10037f42:	push   ebp
10037f43:	mov    ebp,DWORD PTR [esp+0x8]
10037f47:	jne    0x10037f53
10037f49:	push   0x80070057
10037f4e:	call   0x10001f24
10037f53:	push   esi
10037f54:	push   ebp
10037f55:	push   ebx
10037f56:	call   0x1005937b
10037f5b:	mov    esi,eax
10037f5d:	mov    eax,DWORD PTR [edi]
10037f5f:	mov    edx,DWORD PTR [eax-0x8]
10037f62:	sub    eax,0x10
10037f65:	mov    ecx,0x1
10037f6a:	sub    ecx,DWORD PTR [eax+0xc]
10037f6d:	sub    edx,esi
10037f6f:	add    esp,0x8
10037f72:	or     ecx,edx
10037f74:	jge    0x10037f7f
10037f76:	mov    ecx,esi
10037f78:	mov    eax,edi
10037f7a:	call   0x100348f0
10037f7f:	mov    ecx,DWORD PTR [edi]
10037f81:	push   ebp
10037f82:	push   ebx
10037f83:	lea    eax,[esi+0x1]
10037f86:	push   eax
10037f87:	push   ecx
10037f88:	call   0x1005931f
10037f8d:	add    esp,0x10
10037f90:	test   esi,esi
10037f92:	jl     0x10037fa9
10037f94:	mov    eax,DWORD PTR [edi]
10037f96:	cmp    esi,DWORD PTR [eax-0x8]
10037f99:	jg     0x10037fa9
10037f9b:	mov    DWORD PTR [eax-0xc],esi
10037f9e:	mov    edx,DWORD PTR [edi]
10037fa0:	mov    BYTE PTR [esi+edx*1],0x0
10037fa4:	pop    esi
10037fa5:	pop    ebp
10037fa6:	ret    0x4
10037fa9:	push   0x80070057
10037fae:	call   0x10001f24
10037fb3:	int3   
10037fb4:	int3   
10037fb5:	int3   
10037fb6:	int3   
10037fb7:	int3   
10037fb8:	int3   
10037fb9:	int3   
10037fba:	int3   
10037fbb:	int3   
10037fbc:	int3   
10037fbd:	int3   
10037fbe:	int3   
10037fbf:	int3   
10037fc0:	push   ecx
10037fc1:	mov    eax,DWORD PTR [edi]
10037fc3:	lea    ecx,[esp]
10037fc6:	push   ecx
10037fc7:	mov    ecx,DWORD PTR [esp+0xc]
10037fcb:	push   esi
10037fcc:	add    eax,eax
10037fce:	lea    edx,[esp+0x14]
10037fd2:	push   edx
10037fd3:	mov    DWORD PTR [esp+0xc],eax
10037fd7:	mov    eax,DWORD PTR [esp+0x18]
10037fdb:	push   0x0
10037fdd:	mov    DWORD PTR [edi],0x0
10037fe3:	mov    edx,DWORD PTR [ecx]
10037fe5:	push   eax
10037fe6:	push   edx
10037fe7:	call   DWORD PTR ds:0x10066000
10037fed:	test   eax,eax
10037fef:	jne    0x1003802e
10037ff1:	mov    eax,DWORD PTR [esp+0xc]
10037ff5:	cmp    eax,0x1
10037ff8:	je     0x10037fff
10037ffa:	cmp    eax,0x2
10037ffd:	jne    0x1003801a
10037fff:	test   esi,esi
10038001:	mov    eax,DWORD PTR [esp]
10038004:	je     0x10038028
10038006:	test   eax,eax
10038008:	je     0x10038023
1003800a:	test   al,0x1
1003800c:	jne    0x1003801a
1003800e:	mov    ecx,eax
10038010:	shr    ecx,1
10038012:	cmp    WORD PTR [esi+ecx*2-0x2],0x0
10038018:	je     0x10038028
1003801a:	mov    eax,0xd
1003801f:	pop    ecx
10038020:	ret    0x8
10038023:	mov    WORD PTR [esi],0x0
10038028:	shr    eax,1
1003802a:	mov    DWORD PTR [edi],eax
1003802c:	xor    eax,eax
1003802e:	pop    ecx
1003802f:	ret    0x8
10038032:	int3   
10038033:	int3   
10038034:	int3   
10038035:	int3   
10038036:	int3   
10038037:	int3   
10038038:	int3   
10038039:	int3   
1003803a:	int3   
1003803b:	int3   
1003803c:	int3   
1003803d:	int3   
1003803e:	int3   
1003803f:	int3   
10038040:	push   0xffffffff
10038042:	push   0x10061560
10038047:	mov    eax,fs:0x0
1003804d:	push   eax
1003804e:	sub    esp,0x34
10038051:	push   ebx
10038052:	push   ebp
10038053:	push   esi
10038054:	push   edi
10038055:	mov    eax,ds:0x1007e030
1003805a:	xor    eax,esp
1003805c:	push   eax
1003805d:	lea    eax,[esp+0x48]
10038061:	mov    fs:0x0,eax
10038067:	mov    ebp,DWORD PTR [esp+0x58]
1003806b:	xor    edi,edi
1003806d:	mov    DWORD PTR [esp+0x38],edi
10038071:	mov    DWORD PTR [esp+0x24],edi
10038075:	push   0x43957d30
1003807a:	push   0x10073d74
1003807f:	mov    DWORD PTR [esp+0x58],edi
10038083:	call   0x100042d1
10038088:	push   0x2df1be98
1003808d:	push   eax
1003808e:	call   0x100042d1
10038093:	push   0x6b0a09ea
10038098:	push   eax
10038099:	call   0x100042d1
1003809e:	push   0x7078f49a
100380a3:	push   eax
100380a4:	call   0x100042d1
100380a9:	push   eax
100380aa:	push   0x3d
100380ac:	push   0x10073db0
100380b1:	call   0x100044a2
100380b6:	add    esp,0x2c
100380b9:	lea    ecx,[esp+0x1c]
100380bd:	push   ecx
100380be:	push   0x20019
100380c3:	push   edi
100380c4:	push   eax
100380c5:	push   0x80000002
100380ca:	mov    DWORD PTR [esp+0x30],edi
100380ce:	call   DWORD PTR ds:0x10066020
100380d4:	cmp    eax,edi
100380d6:	jne    0x100384e3
100380dc:	mov    edx,DWORD PTR [esp+0x1c]
100380e0:	mov    DWORD PTR [esp+0x24],edx
100380e4:	mov    DWORD PTR [esp+0x20],0x1
100380ec:	lea    esp,[esp+0x0]
100380f0:	mov    eax,ds:0x10080a74
100380f5:	mov    edx,DWORD PTR [eax+0xc]
100380f8:	mov    ecx,0x10080a74
100380fd:	call   edx
100380ff:	add    eax,0x10
10038102:	mov    DWORD PTR [esp+0x14],eax
10038106:	mov    BYTE PTR [esp+0x50],0x1
1003810b:	mov    eax,ds:0x10080a74
10038110:	mov    edx,DWORD PTR [eax+0xc]
10038113:	mov    ecx,0x10080a74
10038118:	call   edx
1003811a:	lea    ebx,[eax+0x10]
1003811d:	mov    DWORD PTR [esp+0x28],ebx
10038121:	mov    eax,DWORD PTR [esp+0x20]
10038125:	push   eax
10038126:	push   0x724def08
1003812b:	push   0x58f2de1f
10038130:	push   0x14b5ed5a
10038135:	push   0x1f54eff2
1003813a:	push   0x10073e2c
1003813f:	mov    BYTE PTR [esp+0x68],0x2
10038144:	call   0x100042d1
10038149:	add    esp,0x8
1003814c:	push   eax
1003814d:	call   0x100042d1
10038152:	add    esp,0x8
10038155:	push   eax
10038156:	call   0x100042d1
1003815b:	add    esp,0x8
1003815e:	push   eax
1003815f:	call   0x100042d1
10038164:	push   eax
10038165:	push   0x12
10038167:	push   0x10073e5c
1003816c:	call   0x100044a2
10038171:	add    esp,0x14
10038174:	push   eax
10038175:	lea    eax,[esp+0x1c]
10038179:	call   0x1000646a
1003817e:	mov    esi,DWORD PTR [esp+0x1c]
10038182:	mov    eax,DWORD PTR [esp+0x24]
10038186:	add    esp,0x8
10038189:	lea    ecx,[esp+0x18]
1003818d:	push   ecx
1003818e:	push   edi
1003818f:	lea    edx,[esp+0x38]
10038193:	push   edx
10038194:	push   edi
10038195:	push   esi
10038196:	push   eax
10038197:	mov    DWORD PTR [esp+0x30],0x2
1003819f:	call   DWORD PTR ds:0x10066000
100381a5:	cmp    eax,edi
100381a7:	jne    0x100384a1
100381ad:	mov    eax,DWORD PTR [esp+0x30]
100381b1:	cmp    eax,0x1
100381b4:	je     0x100381bf
100381b6:	cmp    eax,0x2
100381b9:	jne    0x100384a1
100381bf:	mov    eax,DWORD PTR [esp+0x18]
100381c3:	shr    eax,1
100381c5:	je     0x100384a1
100381cb:	mov    ecx,DWORD PTR [ebx-0x8]
100381ce:	add    eax,0x1
100381d1:	mov    edx,0x1
100381d6:	sub    edx,DWORD PTR [ebx-0x4]
100381d9:	sub    ecx,eax
100381db:	or     ecx,edx
100381dd:	mov    DWORD PTR [esp+0x2c],eax
100381e1:	jge    0x100381f0
100381e3:	lea    ecx,[esp+0x28]
100381e7:	call   0x1000224a
100381ec:	mov    ebx,DWORD PTR [esp+0x28]
100381f0:	mov    ebp,DWORD PTR [esp+0x14]
100381f4:	push   ebp
100381f5:	lea    ecx,[esp+0x28]
100381f9:	push   ecx
100381fa:	lea    edi,[esp+0x34]
100381fe:	mov    esi,ebx
10038200:	call   0x10037fc0
10038205:	test   eax,eax
10038207:	je     0x10038237
10038209:	add    ebx,0xfffffff0
1003820c:	mov    BYTE PTR [esp+0x50],0x1
10038211:	lea    edx,[ebx+0xc]
10038214:	or     eax,0xffffffff
10038217:	lock xadd DWORD PTR [edx],eax
1003821b:	dec    eax
1003821c:	test   eax,eax
1003821e:	jg     0x1003822a
10038220:	mov    ecx,DWORD PTR [ebx]
10038222:	mov    edx,DWORD PTR [ecx]
10038224:	mov    eax,DWORD PTR [edx+0x4]
10038227:	push   ebx
10038228:	call   eax
1003822a:	mov    BYTE PTR [esp+0x50],0x0
1003822f:	lea    eax,[ebp-0x10]
10038232:	jmp    0x10038478
10038237:	mov    edx,DWORD PTR ds:0x10080a74
1003823d:	mov    eax,DWORD PTR [edx+0xc]
10038240:	mov    ecx,0x10080a74
10038245:	call   eax
10038247:	lea    edi,[eax+0x10]
1003824a:	mov    DWORD PTR [esp+0x18],edi
1003824e:	mov    BYTE PTR [esp+0x50],0x3
10038253:	mov    eax,DWORD PTR [edi-0x8]
10038256:	mov    ecx,0x1
1003825b:	sub    ecx,DWORD PTR [edi-0x4]
1003825e:	sub    eax,0x1
10038261:	or     eax,ecx
10038263:	jge    0x10038277
10038265:	mov    eax,0x1
1003826a:	lea    ecx,[esp+0x18]
1003826e:	call   0x1000224a
10038273:	mov    edi,DWORD PTR [esp+0x18]
10038277:	mov    ebp,DWORD PTR ds:0x1006626c
1003827d:	lea    ecx,[esp+0x34]
10038281:	push   ecx
10038282:	push   edi
10038283:	push   0x0
10038285:	push   0x0
10038287:	push   ebx
10038288:	push   0x0
1003828a:	call   ebp
1003828c:	mov    esi,eax
1003828e:	mov    eax,DWORD PTR [edi-0x8]
10038291:	add    esi,0x1
10038294:	mov    ecx,0x1
10038299:	sub    ecx,DWORD PTR [edi-0x4]
1003829c:	sub    eax,esi
1003829e:	or     eax,ecx
100382a0:	jge    0x100382b1
100382a2:	mov    eax,esi
100382a4:	lea    ecx,[esp+0x18]
100382a8:	call   0x1000224a
100382ad:	mov    edi,DWORD PTR [esp+0x18]
100382b1:	lea    edx,[esp+0x34]
100382b5:	push   edx
100382b6:	push   edi
100382b7:	push   esi
100382b8:	push   0x0
100382ba:	push   ebx
100382bb:	push   0x0
100382bd:	call   ebp
100382bf:	cmp    eax,esi
100382c1:	jbe    0x1003830e
100382c3:	add    edi,0xfffffff0
100382c6:	mov    BYTE PTR [esp+0x50],0x2
100382cb:	lea    eax,[edi+0xc]
100382ce:	or     ecx,0xffffffff
100382d1:	lock xadd DWORD PTR [eax],ecx
100382d5:	dec    ecx
100382d6:	test   ecx,ecx
100382d8:	jg     0x100382e4
100382da:	mov    ecx,DWORD PTR [edi]
100382dc:	mov    edx,DWORD PTR [ecx]
100382de:	mov    eax,DWORD PTR [edx+0x4]
100382e1:	push   edi
100382e2:	call   eax
100382e4:	add    ebx,0xfffffff0
100382e7:	mov    BYTE PTR [esp+0x50],0x1
100382ec:	lea    ecx,[ebx+0xc]
100382ef:	or     edx,0xffffffff
100382f2:	lock xadd DWORD PTR [ecx],edx
100382f6:	dec    edx
100382f7:	test   edx,edx
100382f9:	jg     0x1003846c
100382ff:	mov    ecx,DWORD PTR [ebx]
10038301:	mov    eax,DWORD PTR [ecx]
10038303:	mov    edx,DWORD PTR [eax+0x4]
10038306:	push   ebx
10038307:	call   edx
10038309:	jmp    0x1003846c
1003830e:	test   edi,edi
10038310:	jne    0x10038316
10038312:	xor    eax,eax
10038314:	jmp    0x10038327
10038316:	push   edi
10038317:	call   0x10043933
1003831c:	add    esp,0x4
1003831f:	test   eax,eax
10038321:	jl     0x10038669
10038327:	cmp    eax,DWORD PTR [edi-0x8]
1003832a:	jg     0x10038669
10038330:	xor    ebp,ebp
10038332:	mov    DWORD PTR [edi-0xc],eax
10038335:	mov    WORD PTR [edi+eax*2],0x0
1003833b:	mov    DWORD PTR [esp+0x2c],ebp
1003833f:	push   ebp
10038340:	push   0x80
10038345:	push   0x3
10038347:	push   ebp
10038348:	push   0x3
1003834a:	push   0x80000000
1003834f:	push   edi
10038350:	mov    BYTE PTR [esp+0x6c],0x4
10038355:	call   DWORD PTR ds:0x100660c0
1003835b:	cmp    eax,0xffffffff
1003835e:	jne    0x100383b0
10038360:	call   0x1000667c
10038365:	test   eax,eax
10038367:	jl     0x1003842a
1003836d:	lea    ecx,[esp+0x44]
10038371:	push   ecx
10038372:	push   ebp
10038373:	call   DWORD PTR ds:0x10066268
10038379:	cmp    eax,0xffffffff
1003837c:	mov    DWORD PTR [esp+0x40],eax
10038380:	jne    0x100383bc
10038382:	call   0x1000667c
10038387:	test   eax,eax
10038389:	jge    0x100383b8
1003838b:	test   ebp,ebp
1003838d:	je     0x10038396
1003838f:	push   ebp
10038390:	call   DWORD PTR ds:0x10066070
10038396:	add    edi,0xfffffff0
10038399:	mov    BYTE PTR [esp+0x50],0x2
1003839e:	lea    edx,[edi+0xc]
100383a1:	or     eax,0xffffffff
100383a4:	lock xadd DWORD PTR [edx],eax
100383a8:	dec    eax
100383a9:	test   eax,eax
100383ab:	jmp    0x100382d8
100383b0:	mov    ebp,eax
100383b2:	mov    DWORD PTR [esp+0x2c],ebp
100383b6:	jmp    0x1003836d
100383b8:	mov    eax,DWORD PTR [esp+0x40]
100383bc:	cmp    eax,0x4c00
100383c1:	jne    0x1003841f
100383c3:	cmp    DWORD PTR [esp+0x44],0x0
100383c8:	jne    0x1003841f
100383ca:	test   ebp,ebp
100383cc:	je     0x100383db
100383ce:	push   ebp
100383cf:	call   DWORD PTR ds:0x10066070
100383d5:	xor    ebp,ebp
100383d7:	mov    DWORD PTR [esp+0x2c],ebp
100383db:	cmp    DWORD PTR [edi-0x4],0x1
100383df:	jle    0x100383f3
100383e1:	mov    ecx,DWORD PTR [edi-0xc]
100383e4:	push   ecx
100383e5:	lea    edx,[esp+0x1c]
100383e9:	push   edx
100383ea:	call   0x10002293
100383ef:	mov    edi,DWORD PTR [esp+0x18]
100383f3:	lea    eax,[esp+0x38]
100383f7:	push   eax
100383f8:	lea    ecx,[esp+0x40]
100383fc:	push   ecx
100383fd:	push   edi
100383fe:	call   DWORD PTR ds:0x100663fc
10038404:	test   eax,eax
10038406:	jne    0x1003838b
10038408:	lea    esi,[esp+0x18]
1003840c:	call   0x1000421f
10038411:	cmp    DWORD PTR [esp+0x38],0x6673
10038419:	je     0x10038532
1003841f:	test   ebp,ebp
10038421:	je     0x1003842a
10038423:	push   ebp
10038424:	call   DWORD PTR ds:0x10066070
1003842a:	add    edi,0xfffffff0
1003842d:	mov    BYTE PTR [esp+0x50],0x2
10038432:	lea    ecx,[edi+0xc]
10038435:	or     edx,0xffffffff
10038438:	lock xadd DWORD PTR [ecx],edx
1003843c:	dec    edx
1003843d:	test   edx,edx
1003843f:	jg     0x1003844b
10038441:	mov    ecx,DWORD PTR [edi]
10038443:	mov    eax,DWORD PTR [ecx]
10038445:	mov    edx,DWORD PTR [eax+0x4]
10038448:	push   edi
10038449:	call   edx
1003844b:	add    ebx,0xfffffff0
1003844e:	mov    BYTE PTR [esp+0x50],0x1
10038453:	lea    eax,[ebx+0xc]
10038456:	or     ecx,0xffffffff
10038459:	lock xadd DWORD PTR [eax],ecx
1003845d:	dec    ecx
1003845e:	test   ecx,ecx
10038460:	jg     0x1003846c
10038462:	mov    ecx,DWORD PTR [ebx]
10038464:	mov    edx,DWORD PTR [ecx]
10038466:	mov    eax,DWORD PTR [edx+0x4]
10038469:	push   ebx
1003846a:	call   eax
1003846c:	mov    BYTE PTR [esp+0x50],0x0
10038471:	mov    eax,DWORD PTR [esp+0x14]
10038475:	add    eax,0xfffffff0
10038478:	lea    ecx,[eax+0xc]
1003847b:	or     edx,0xffffffff
1003847e:	lock xadd DWORD PTR [ecx],edx
10038482:	dec    edx
10038483:	test   edx,edx
10038485:	jg     0x10038491
10038487:	mov    ecx,DWORD PTR [eax]
10038489:	mov    edx,DWORD PTR [ecx]
1003848b:	push   eax
1003848c:	mov    eax,DWORD PTR [edx+0x4]
1003848f:	call   eax
10038491:	add    DWORD PTR [esp+0x20],0x1
10038496:	mov    ebp,DWORD PTR [esp+0x58]
1003849a:	xor    edi,edi
1003849c:	jmp    0x100380f0
100384a1:	add    ebx,0xfffffff0
100384a4:	or     edx,0xffffffff
100384a7:	lea    ecx,[ebx+0xc]
100384aa:	mov    BYTE PTR [esp+0x50],0x1
100384af:	lock xadd DWORD PTR [ecx],edx
100384b3:	dec    edx
100384b4:	test   edx,edx
100384b6:	jg     0x100384c2
100384b8:	mov    ecx,DWORD PTR [ebx]
100384ba:	mov    eax,DWORD PTR [ecx]
100384bc:	mov    edx,DWORD PTR [eax+0x4]
100384bf:	push   ebx
100384c0:	call   edx
100384c2:	lea    eax,[esi-0x10]
100384c5:	mov    BYTE PTR [esp+0x50],0x0
100384ca:	lea    ecx,[eax+0xc]
100384cd:	or     edx,0xffffffff
100384d0:	lock xadd DWORD PTR [ecx],edx
100384d4:	dec    edx
100384d5:	test   edx,edx
100384d7:	jg     0x100384e3
100384d9:	mov    ecx,DWORD PTR [eax]
100384db:	mov    edx,DWORD PTR [ecx]
100384dd:	push   eax
100384de:	mov    eax,DWORD PTR [edx+0x4]
100384e1:	call   eax
100384e3:	mov    edx,DWORD PTR ds:0x10080a74
100384e9:	mov    eax,DWORD PTR [edx+0xc]
100384ec:	mov    ecx,0x10080a74
100384f1:	call   eax
100384f3:	add    eax,0x10
100384f6:	mov    DWORD PTR [ebp+0x0],eax
100384f9:	mov    ecx,0x1006cd08
100384fe:	test   ecx,0xffff0000
10038504:	mov    BYTE PTR [esp+0x50],0x5
10038509:	jne    0x100385d9
1003850f:	mov    edx,ecx
10038511:	movzx  esi,dx
10038514:	push   esi
10038515:	call   0x10001ffc
1003851a:	add    esp,0x4
1003851d:	cmp    eax,edi
1003851f:	je     0x100386a9
10038525:	push   esi
10038526:	push   eax
10038527:	push   ebp
10038528:	call   0x100021c4
1003852d:	jmp    0x100386a9
10038532:	add    edi,0xfffffff0
10038535:	mov    eax,edi
10038537:	call   0x10004e00
1003853c:	mov    esi,DWORD PTR [esp+0x58]
10038540:	add    eax,0x10
10038543:	test   ebp,ebp
10038545:	mov    DWORD PTR [esi],eax
10038547:	je     0x10038550
10038549:	push   ebp
1003854a:	call   DWORD PTR ds:0x10066070
10038550:	mov    BYTE PTR [esp+0x50],0x2
10038555:	lea    ecx,[edi+0xc]
10038558:	or     edx,0xffffffff
1003855b:	lock xadd DWORD PTR [ecx],edx
1003855f:	dec    edx
10038560:	test   edx,edx
10038562:	jg     0x1003856e
10038564:	mov    ecx,DWORD PTR [edi]
10038566:	mov    eax,DWORD PTR [ecx]
10038568:	mov    edx,DWORD PTR [eax+0x4]
1003856b:	push   edi
1003856c:	call   edx
1003856e:	add    ebx,0xfffffff0
10038571:	mov    BYTE PTR [esp+0x50],0x1
10038576:	lea    eax,[ebx+0xc]
10038579:	or     ecx,0xffffffff
1003857c:	lock xadd DWORD PTR [eax],ecx
10038580:	dec    ecx
10038581:	test   ecx,ecx
10038583:	jg     0x1003858f
10038585:	mov    ecx,DWORD PTR [ebx]
10038587:	mov    edx,DWORD PTR [ecx]
10038589:	mov    eax,DWORD PTR [edx+0x4]
1003858c:	push   ebx
1003858d:	call   eax
1003858f:	mov    BYTE PTR [esp+0x50],0x0
10038594:	mov    eax,DWORD PTR [esp+0x14]
10038598:	add    eax,0xfffffff0
1003859b:	lea    ecx,[eax+0xc]
1003859e:	or     edx,0xffffffff
100385a1:	lock xadd DWORD PTR [ecx],edx
100385a5:	dec    edx
100385a6:	test   edx,edx
100385a8:	jg     0x100385b4
100385aa:	mov    ecx,DWORD PTR [eax]
100385ac:	mov    edx,DWORD PTR [ecx]
100385ae:	push   eax
100385af:	mov    eax,DWORD PTR [edx+0x4]
100385b2:	call   eax
100385b4:	mov    eax,DWORD PTR [esp+0x1c]
100385b8:	test   eax,eax
100385ba:	je     0x100385c3
100385bc:	push   eax
100385bd:	call   DWORD PTR ds:0x10066018
100385c3:	mov    eax,esi
100385c5:	mov    ecx,DWORD PTR [esp+0x48]
100385c9:	mov    DWORD PTR fs:0x0,ecx
100385d0:	pop    ecx
100385d1:	pop    edi
100385d2:	pop    esi
100385d3:	pop    ebp
100385d4:	pop    ebx
100385d5:	add    esp,0x40
100385d8:	ret    
100385d9:	call   DWORD PTR ds:0x1007efec
100385df:	mov    edi,DWORD PTR ds:0x1006608c
100385e5:	push   0x0
100385e7:	push   0x0
100385e9:	push   0xffffffff
100385eb:	push   0x1006cd08
100385f0:	push   0x0
100385f2:	push   eax
100385f3:	call   edi
100385f5:	mov    esi,eax
100385f7:	sub    esi,0x1
100385fa:	test   esi,esi
100385fc:	jle    0x1003864b
100385fe:	mov    eax,DWORD PTR [ebp+0x0]
10038601:	mov    edx,DWORD PTR [eax-0x8]
10038604:	sub    eax,0x10
10038607:	mov    ecx,0x1
1003860c:	sub    ecx,DWORD PTR [eax+0xc]
1003860f:	sub    edx,esi
10038611:	or     ecx,edx
10038613:	jge    0x1003861e
10038615:	mov    eax,esi
10038617:	mov    ecx,ebp
10038619:	call   0x1000224a
1003861e:	mov    eax,DWORD PTR [ebp+0x0]
10038621:	push   esi
10038622:	push   eax
10038623:	push   0xffffffff
10038625:	push   0x1006cd08
1003862a:	push   0x0
1003862c:	call   DWORD PTR ds:0x1007efec
10038632:	push   eax
10038633:	call   edi
10038635:	mov    eax,DWORD PTR [ebp+0x0]
10038638:	cmp    esi,DWORD PTR [eax-0x8]
1003863b:	jg     0x10038669
1003863d:	mov    DWORD PTR [eax-0xc],esi
10038640:	mov    eax,DWORD PTR [ebp+0x0]
10038643:	mov    WORD PTR [eax+esi*2],0x0
10038649:	jmp    0x100386a9
1003864b:	mov    ecx,DWORD PTR [ebp+0x0]
1003864e:	cmp    DWORD PTR [ecx-0xc],0x0
10038652:	mov    esi,DWORD PTR [ecx-0x10]
10038655:	lea    eax,[ecx-0x10]
10038658:	je     0x100386a9
1003865a:	cmp    DWORD PTR [eax+0xc],0x0
1003865e:	lea    edx,[eax+0xc]
10038661:	jge    0x10038684
10038663:	cmp    DWORD PTR [ecx-0x8],0x0
10038667:	jge    0x10038673
10038669:	push   0x80070057
1003866e:	call   0x10001f24
10038673:	mov    DWORD PTR [ecx-0xc],0x0
1003867a:	mov    ecx,DWORD PTR [ebp+0x0]
1003867d:	mov    WORD PTR [ecx],0x0
10038682:	jmp    0x100386a9
10038684:	or     ecx,0xffffffff
10038687:	lock xadd DWORD PTR [edx],ecx
1003868b:	dec    ecx
1003868c:	test   ecx,ecx
1003868e:	jg     0x1003869a
10038690:	mov    ecx,DWORD PTR [eax]
10038692:	mov    edx,DWORD PTR [ecx]
10038694:	push   eax
10038695:	mov    eax,DWORD PTR [edx+0x4]
10038698:	call   eax
1003869a:	mov    edx,DWORD PTR [esi]
1003869c:	mov    eax,DWORD PTR [edx+0xc]
1003869f:	mov    ecx,esi
100386a1:	call   eax
100386a3:	add    eax,0x10
100386a6:	mov    DWORD PTR [ebp+0x0],eax
100386a9:	mov    eax,DWORD PTR [esp+0x24]
100386ad:	test   eax,eax
100386af:	je     0x100386b8
100386b1:	push   eax
100386b2:	call   DWORD PTR ds:0x10066018
100386b8:	mov    eax,ebp
100386ba:	mov    ecx,DWORD PTR [esp+0x48]
100386be:	mov    DWORD PTR fs:0x0,ecx
100386c5:	pop    ecx
100386c6:	pop    edi
100386c7:	pop    esi
100386c8:	pop    ebp
100386c9:	pop    ebx
100386ca:	add    esp,0x40
100386cd:	ret    
100386ce:	int3   
100386cf:	int3   
100386d0:	push   0xffffffff
100386d2:	push   0x1005f949
100386d7:	mov    eax,fs:0x0
100386dd:	push   eax
100386de:	push   ecx
100386df:	push   ebx
100386e0:	mov    eax,ds:0x1007e030
100386e5:	xor    eax,esp
100386e7:	push   eax
100386e8:	lea    eax,[esp+0xc]
100386ec:	mov    fs:0x0,eax
100386f2:	mov    ebx,DWORD PTR [esp+0x20]
100386f6:	mov    eax,DWORD PTR [esp+0x1c]
100386fa:	mov    DWORD PTR [esp+0x8],0x0
10038702:	mov    eax,DWORD PTR [eax]
10038704:	test   eax,eax
10038706:	mov    DWORD PTR [ebx],eax
10038708:	je     0x10038714
1003870a:	add    eax,0x8
1003870d:	push   eax
1003870e:	call   DWORD PTR ds:0x100660a4
10038714:	mov    ecx,DWORD PTR [esp+0x24]
10038718:	mov    DWORD PTR [esp+0x14],0x0
10038720:	push   ecx
10038721:	mov    DWORD PTR [esp+0xc],0x1
10038729:	call   0x100024f7
1003872e:	mov    eax,ebx
10038730:	mov    ecx,DWORD PTR [esp+0xc]
10038734:	mov    DWORD PTR fs:0x0,ecx
1003873b:	pop    ecx
1003873c:	pop    ebx
1003873d:	add    esp,0x10
10038740:	ret    0xc
10038743:	int3   
10038744:	int3   
10038745:	int3   
10038746:	int3   
10038747:	int3   
10038748:	int3   
10038749:	int3   
1003874a:	int3   
1003874b:	int3   
1003874c:	int3   
1003874d:	int3   
1003874e:	int3   
1003874f:	int3   
10038750:	push   0xffffffff
10038752:	push   0x1005f908
10038757:	mov    eax,fs:0x0
1003875d:	push   eax
1003875e:	sub    esp,0x14
10038761:	mov    eax,ds:0x1007e030
10038766:	xor    eax,esp
10038768:	push   eax
10038769:	lea    eax,[esp+0x18]
1003876d:	mov    fs:0x0,eax
10038773:	cmp    WORD PTR [esi],0x8
10038777:	jne    0x10038796
10038779:	mov    eax,DWORD PTR [esi+0x8]
1003877c:	push   eax
1003877d:	mov    ecx,edi
1003877f:	call   0x10011002
10038784:	mov    eax,edi
10038786:	mov    ecx,DWORD PTR [esp+0x18]
1003878a:	mov    DWORD PTR fs:0x0,ecx
10038791:	pop    ecx
10038792:	add    esp,0x20
10038795:	ret    
10038796:	lea    ecx,[esp+0x4]
1003879a:	push   ecx
1003879b:	call   DWORD PTR ds:0x1006628c
100387a1:	lea    edx,[esp+0x4]
100387a5:	cmp    edx,esi
100387a7:	mov    DWORD PTR [esp+0x20],0x0
100387af:	jne    0x100387b9
100387b1:	cmp    WORD PTR [esp+0x4],0x8
100387b7:	je     0x100387d3
100387b9:	push   0x8
100387bb:	push   0x0
100387bd:	push   esi
100387be:	lea    eax,[esp+0x10]
100387c2:	push   eax
100387c3:	call   DWORD PTR ds:0x1006627c
100387c9:	test   eax,eax
100387cb:	jge    0x100387d3
100387cd:	push   eax
100387ce:	call   0x10050e30
100387d3:	mov    ecx,DWORD PTR [esp+0xc]
100387d7:	push   ecx
100387d8:	mov    ecx,edi
100387da:	call   0x10011002
100387df:	lea    edx,[esp+0x4]
100387e3:	push   edx
100387e4:	call   DWORD PTR ds:0x10066294
100387ea:	mov    eax,edi
100387ec:	mov    ecx,DWORD PTR [esp+0x18]
100387f0:	mov    DWORD PTR fs:0x0,ecx
100387f7:	pop    ecx
100387f8:	add    esp,0x20
100387fb:	ret    
100387fc:	int3   
100387fd:	int3   
100387fe:	int3   
100387ff:	int3   
10038800:	sub    esp,0x8
10038803:	test   eax,eax
10038805:	mov    BYTE PTR [edi],0x0
10038808:	jle    0x1003895e
1003880e:	push   ebx
1003880f:	push   ebp
10038810:	push   esi
10038811:	xor    esi,esi
10038813:	add    eax,ecx
10038815:	mov    BYTE PTR [esp+0xf],0x0
1003881a:	mov    BYTE PTR [edi],0x0
1003881d:	mov    DWORD PTR [esp+0x10],eax
10038821:	mov    ebp,eax
10038823:	mov    al,BYTE PTR [ebp+0x0]
10038826:	test   al,al
10038828:	je     0x100388d4
1003882e:	movsx  edx,al
10038831:	push   edx
10038832:	call   0x10046071
10038837:	mov    bl,al
10038839:	movsx  eax,bl
1003883c:	push   eax
1003883d:	call   0x1004f5f6
10038842:	add    esp,0x8
10038845:	test   eax,eax
10038847:	je     0x1003884b
10038849:	mov    bl,0x30
1003884b:	shl    BYTE PTR [esi+edi*1],0x4
1003884f:	add    BYTE PTR [esp+0xf],0x1
10038854:	mov    cl,BYTE PTR [esi+edi*1]
10038857:	mov    al,bl
10038859:	sub    al,0x30
1003885b:	cmp    al,0x9
1003885d:	ja     0x10038866
1003885f:	or     al,cl
10038861:	mov    BYTE PTR [esi+edi*1],al
10038864:	jmp    0x10038878
10038866:	mov    dl,bl
10038868:	sub    dl,0x61
1003886b:	cmp    dl,0x5
1003886e:	ja     0x100388aa
10038870:	sub    bl,0x57
10038873:	or     bl,cl
10038875:	mov    BYTE PTR [esi+edi*1],bl
10038878:	cmp    BYTE PTR [esp+0xf],0x2
1003887d:	jne    0x100388a2
1003887f:	mov    al,BYTE PTR [esi+edi*1]
10038882:	test   al,al
10038884:	je     0x10038896
10038886:	movsx  eax,al
10038889:	push   eax
1003888a:	call   0x1004f673
1003888f:	add    esp,0x4
10038892:	test   eax,eax
10038894:	je     0x100388aa
10038896:	add    esi,0x1
10038899:	mov    BYTE PTR [esp+0xf],0x0
1003889e:	mov    BYTE PTR [esi+edi*1],0x0
100388a2:	add    ebp,0x1
100388a5:	jmp    0x10038823
100388aa:	mov    ebp,DWORD PTR [esp+0x10]
100388ae:	xor    esi,esi
100388b0:	mov    bl,BYTE PTR [ebp+0x0]
100388b3:	test   bl,bl
100388b5:	je     0x100388d4
100388b7:	movsx  ecx,bl
100388ba:	push   ecx
100388bb:	call   0x1004f673
100388c0:	add    esp,0x4
100388c3:	test   eax,eax
100388c5:	je     0x100388d2
100388c7:	mov    BYTE PTR [esi+edi*1],bl
100388ca:	add    esi,0x1
100388cd:	add    ebp,0x1
100388d0:	jmp    0x100388b0
100388d2:	xor    esi,esi
100388d4:	cmp    DWORD PTR [esp+0x18],0x0
100388d9:	mov    BYTE PTR [esi+edi*1],0x0
100388dd:	je     0x10038902
100388df:	test   esi,esi
100388e1:	jle    0x10038902
100388e3:	add    esi,0xffffffff
100388e6:	shr    esi,1
100388e8:	lea    eax,[edi+0x1]
100388eb:	add    esi,0x1
100388ee:	mov    edi,edi
100388f0:	mov    cl,BYTE PTR [eax-0x1]
100388f3:	mov    dl,BYTE PTR [eax]
100388f5:	mov    BYTE PTR [eax-0x1],dl
100388f8:	mov    BYTE PTR [eax],cl
100388fa:	add    eax,0x2
100388fd:	sub    esi,0x1
10038900:	jne    0x100388f0
10038902:	or     ebx,0xffffffff
10038905:	or     ebp,0xffffffff
10038908:	xor    esi,esi
1003890a:	cmp    BYTE PTR [edi],0x0
1003890d:	je     0x1003895b
1003890f:	nop
10038910:	movsx  eax,BYTE PTR [esi+edi*1]
10038914:	push   eax
10038915:	call   0x1004f5f6
1003891a:	add    esp,0x4
1003891d:	test   eax,eax
1003891f:	jne    0x10038929
10038921:	test   ebp,ebp
10038923:	jge    0x10038927
10038925:	mov    ebp,esi
10038927:	mov    ebx,esi
10038929:	add    esi,0x1
1003892c:	cmp    BYTE PTR [esi+edi*1],0x0
10038930:	jne    0x10038910
10038932:	test   ebp,ebp
10038934:	jl     0x1003895b
10038936:	test   ebx,ebx
10038938:	jl     0x1003895b
1003893a:	cmp    ebp,ebx
1003893c:	mov    eax,ebp
1003893e:	jg     0x10038955
10038940:	mov    edx,edi
10038942:	sub    edx,ebp
10038944:	mov    cl,BYTE PTR [eax+edi*1]
10038947:	test   cl,cl
10038949:	je     0x10038955
1003894b:	mov    BYTE PTR [edx+eax*1],cl
1003894e:	add    eax,0x1
10038951:	cmp    eax,ebx
10038953:	jle    0x10038944
10038955:	sub    eax,ebp
10038957:	mov    BYTE PTR [eax+edi*1],0x0
1003895b:	pop    esi
1003895c:	pop    ebp
1003895d:	pop    ebx
1003895e:	mov    eax,edi
10038960:	add    esp,0x8
10038963:	ret    
10038964:	int3   
10038965:	int3   
10038966:	int3   
10038967:	int3   
10038968:	int3   
10038969:	int3   
1003896a:	int3   
1003896b:	int3   
1003896c:	int3   
1003896d:	int3   
1003896e:	int3   
1003896f:	int3   
10038970:	push   ebp
10038971:	mov    ebp,esp
10038973:	and    esp,0xfffffff8
10038976:	mov    eax,0x2f30
1003897b:	call   0x1004a080
10038980:	mov    eax,ds:0x1007e030
10038985:	xor    eax,esp
10038987:	mov    DWORD PTR [esp+0x2f2c],eax
1003898e:	mov    eax,DWORD PTR [ebp+0x8]
10038991:	push   esi
10038992:	push   edi
10038993:	xor    edi,edi
10038995:	push   edi
10038996:	push   edi
10038997:	push   0x3
10038999:	push   edi
1003899a:	push   0x3
1003899c:	push   edi
1003899d:	push   0x420a2d2e
100389a2:	push   0x3e1aa77a
100389a7:	push   0x10073e84
100389ac:	mov    DWORD PTR [esp+0x34],eax
100389b0:	mov    DWORD PTR [esp+0x38],ecx
100389b4:	mov    BYTE PTR [esp+0x2f],0x0
100389b9:	call   0x100042d1
100389be:	add    esp,0x8
100389c1:	push   eax
100389c2:	call   0x100042d1
100389c7:	push   eax
100389c8:	push   0x12
100389ca:	push   0x10073ea8
100389cf:	call   0x100044a2
100389d4:	add    esp,0x14
100389d7:	push   eax
100389d8:	call   DWORD PTR ds:0x100660c0
100389de:	mov    esi,eax
100389e0:	cmp    esi,0xffffffff
100389e3:	jne    0x100389fb
100389e5:	xor    al,al
100389e7:	pop    edi
100389e8:	pop    esi
100389e9:	mov    ecx,DWORD PTR [esp+0x2f2c]
100389f0:	xor    ecx,esp
100389f2:	call   0x100430d7
100389f7:	mov    esp,ebp
100389f9:	pop    ebp
100389fa:	ret    
100389fb:	xor    eax,eax
100389fd:	push   0x2710
10038a02:	lea    edx,[esp+0x824]
10038a09:	push   edi
10038a0a:	mov    DWORD PTR [esp+0x24],eax
10038a0e:	mov    DWORD PTR [esp+0x28],eax
10038a12:	push   edx
10038a13:	mov    DWORD PTR [esp+0x18],edi
10038a17:	mov    DWORD PTR [esp+0x30],eax
10038a1b:	mov    DWORD PTR [esp+0x28],edi
10038a1f:	mov    DWORD PTR [esp+0x2c],edi
10038a23:	call   0x10045ea0
10038a28:	add    esp,0xc
10038a2b:	push   edi
10038a2c:	lea    eax,[esp+0x10]
10038a30:	push   eax
10038a31:	push   0x2710
10038a36:	lea    ecx,[esp+0x82c]
10038a3d:	push   ecx
10038a3e:	push   0xc
10038a40:	lea    edx,[esp+0x30]
10038a44:	push   edx
10038a45:	push   0x2d1400
10038a4a:	push   esi
10038a4b:	call   DWORD PTR ds:0x10066260
10038a51:	test   eax,eax
10038a53:	je     0x10038aca
10038a55:	mov    eax,DWORD PTR [esp+0x830]
10038a5c:	push   edi
10038a5d:	lea    edi,[esp+0x43c]
10038a64:	lea    ecx,[esp+0x824]
10038a6b:	call   0x10038800
10038a70:	mov    eax,DWORD PTR [esp+0x83c]
10038a77:	push   0x1
10038a79:	lea    edi,[esp+0x58]
10038a7d:	lea    ecx,[esp+0x828]
10038a84:	call   0x10038800
10038a89:	mov    eax,edi
10038a8b:	push   eax
10038a8c:	call   0x10043250
10038a91:	add    esp,0xc
10038a94:	push   eax
10038a95:	mov    ecx,edi
10038a97:	push   ecx
10038a98:	mov    ecx,DWORD PTR [esp+0x18]
10038a9c:	call   0x1000133f
10038aa1:	lea    edx,[esp+0x438]
10038aa8:	push   edx
10038aa9:	call   0x10043250
10038aae:	mov    ecx,DWORD PTR [esp+0x18]
10038ab2:	add    esp,0x4
10038ab5:	push   eax
10038ab6:	lea    eax,[esp+0x43c]
10038abd:	push   eax
10038abe:	call   0x1000133f
10038ac3:	mov    BYTE PTR [esp+0xb],0x1
10038ac8:	xor    edi,edi
10038aca:	push   edi
10038acb:	lea    ecx,[esp+0x1c]
10038acf:	push   ecx
10038ad0:	push   0x28
10038ad2:	lea    edx,[esp+0x34]
10038ad6:	push   edx
10038ad7:	xor    eax,eax
10038ad9:	push   edi
10038ada:	push   edi
10038adb:	push   0x700a0
10038ae0:	push   esi
10038ae1:	mov    DWORD PTR [esp+0x48],edi
10038ae5:	mov    DWORD PTR [esp+0x4c],eax
10038ae9:	mov    DWORD PTR [esp+0x50],eax
10038aed:	mov    DWORD PTR [esp+0x54],eax
10038af1:	mov    DWORD PTR [esp+0x58],eax
10038af5:	mov    DWORD PTR [esp+0x5c],eax
10038af9:	mov    DWORD PTR [esp+0x60],eax
10038afd:	mov    DWORD PTR [esp+0x64],eax
10038b01:	mov    DWORD PTR [esp+0x68],eax
10038b05:	mov    DWORD PTR [esp+0x6c],eax
10038b09:	mov    DWORD PTR [ebx],edi
10038b0b:	mov    DWORD PTR [ebx+0x4],edi
10038b0e:	call   DWORD PTR ds:0x10066260
10038b14:	test   eax,eax
10038b16:	je     0x10038b25
10038b18:	mov    eax,DWORD PTR [esp+0x40]
10038b1c:	mov    ecx,DWORD PTR [esp+0x44]
10038b20:	mov    DWORD PTR [ebx],eax
10038b22:	mov    DWORD PTR [ebx+0x4],ecx
10038b25:	push   esi
10038b26:	call   DWORD PTR ds:0x10066070
10038b2c:	mov    ecx,DWORD PTR [esp+0x2f34]
10038b33:	mov    al,BYTE PTR [esp+0xb]
10038b37:	pop    edi
10038b38:	pop    esi
10038b39:	xor    ecx,esp
10038b3b:	call   0x100430d7
10038b40:	mov    esp,ebp
10038b42:	pop    ebp
10038b43:	ret    
10038b44:	int3   
10038b45:	int3   
10038b46:	int3   
10038b47:	int3   
10038b48:	int3   
10038b49:	int3   
10038b4a:	int3   
10038b4b:	int3   
10038b4c:	int3   
10038b4d:	int3   
10038b4e:	int3   
10038b4f:	int3   
10038b50:	push   ebp
10038b51:	lea    ebp,[esp-0x1954]
10038b58:	mov    eax,0x1954
10038b5d:	call   0x1004a080
10038b62:	push   0xffffffff
10038b64:	push   0x10061500
10038b69:	mov    eax,fs:0x0
10038b6f:	push   eax
10038b70:	sub    esp,0x38
10038b73:	mov    eax,ds:0x1007e030
10038b78:	xor    eax,ebp
10038b7a:	mov    DWORD PTR [ebp+0x1950],eax
10038b80:	push   ebx
10038b81:	push   esi
10038b82:	push   edi
10038b83:	push   eax
10038b84:	lea    eax,[ebp-0xc]
10038b87:	mov    fs:0x0,eax
10038b8d:	mov    eax,DWORD PTR [ebp+0x195c]
10038b93:	lea    ecx,[ebp-0x3c]
10038b96:	push   ecx
10038b97:	lea    edx,[ebp+0x0]
10038b9a:	push   edx
10038b9b:	mov    DWORD PTR [ebp-0x10],eax
10038b9e:	mov    DWORD PTR [ebp-0x3c],0x1950
10038ba5:	call   0x10056d6e
10038baa:	lea    esi,[ebp+0x0]
10038bad:	call   DWORD PTR ds:0x1007efec
10038bb3:	mov    ebx,eax
10038bb5:	mov    eax,ds:0x10080a74
10038bba:	mov    edx,DWORD PTR [eax+0xc]
10038bbd:	mov    ecx,0x10080a74
10038bc2:	call   edx
10038bc4:	add    eax,0x10
10038bc7:	mov    DWORD PTR [ebp-0x14],eax
10038bca:	mov    DWORD PTR [ebp-0x4],0x0
10038bd1:	movzx  eax,BYTE PTR [esi+0x199]
10038bd8:	movzx  ecx,BYTE PTR [esi+0x198]
10038bdf:	movzx  edx,BYTE PTR [esi+0x197]
10038be6:	push   eax
10038be7:	movzx  eax,BYTE PTR [esi+0x196]
10038bee:	push   ecx
10038bef:	movzx  ecx,BYTE PTR [esi+0x195]
10038bf6:	push   edx
10038bf7:	movzx  edx,BYTE PTR [esi+0x194]
10038bfe:	push   eax
10038bff:	push   ecx
10038c00:	push   edx
10038c01:	push   0x3fe889bf
10038c06:	push   0x533a1277
10038c0b:	push   0xb057a8b
10038c10:	push   0x511e2ad2
10038c15:	push   0x4ad027a0
10038c1a:	push   0x756fde37
10038c1f:	push   0x7e56d4c5
10038c24:	push   0x10073ed0
10038c29:	call   0x100042d1
10038c2e:	add    esp,0x8
10038c31:	push   eax
10038c32:	call   0x100042d1
10038c37:	add    esp,0x8
10038c3a:	push   eax
10038c3b:	call   0x100042d1
10038c40:	add    esp,0x8
10038c43:	push   eax
10038c44:	call   0x100042d1
10038c49:	add    esp,0x8
10038c4c:	push   eax
10038c4d:	call   0x100042d1
10038c52:	add    esp,0x8
10038c55:	push   eax
10038c56:	call   0x100042d1
10038c5b:	add    esp,0x8
10038c5e:	push   eax
10038c5f:	call   0x100042d1
10038c64:	push   eax
10038c65:	push   0x18
10038c67:	push   0x10073f0c
10038c6c:	call   0x100044a2
10038c71:	add    esp,0x14
10038c74:	push   eax
10038c75:	lea    eax,[ebp-0x14]
10038c78:	call   0x1000646a
10038c7d:	mov    eax,DWORD PTR [ebp-0x14]
10038c80:	add    esp,0x1c
10038c83:	cmp    DWORD PTR [eax-0x4],0x1
10038c87:	jle    0x10038c99
10038c89:	mov    eax,DWORD PTR [eax-0xc]
10038c8c:	push   eax
10038c8d:	lea    ecx,[ebp-0x14]
10038c90:	push   ecx
10038c91:	call   0x10002293
10038c96:	mov    eax,DWORD PTR [ebp-0x14]
10038c99:	test   eax,eax
10038c9b:	jne    0x10038ca1
10038c9d:	xor    ebx,ebx
10038c9f:	jmp    0x10038ce9
10038ca1:	push   eax
10038ca2:	call   DWORD PTR ds:0x100660c4
10038ca8:	add    eax,0x1
10038cab:	cmp    eax,0x3fffffff
10038cb0:	jg     0x10038ce5
10038cb2:	add    eax,eax
10038cb4:	mov    DWORD PTR [ebp-0x38],eax
10038cb7:	call   0x1004b990
10038cbc:	mov    edi,esp
10038cbe:	test   edi,edi
10038cc0:	je     0x10038ce5
10038cc2:	mov    edx,DWORD PTR [ebp-0x38]
10038cc5:	mov    eax,DWORD PTR [ebp-0x14]
10038cc8:	push   0x0
10038cca:	push   0x0
10038ccc:	push   edx
10038ccd:	push   edi
10038cce:	push   0xffffffff
10038cd0:	push   eax
10038cd1:	push   0x0
10038cd3:	push   ebx
10038cd4:	mov    BYTE PTR [edi],0x0
10038cd7:	call   DWORD PTR ds:0x100660b8
10038cdd:	neg    eax
10038cdf:	sbb    eax,eax
10038ce1:	and    eax,edi
10038ce3:	jmp    0x10038ce7
10038ce5:	xor    eax,eax
10038ce7:	mov    ebx,eax
10038ce9:	push   ebx
10038cea:	mov    DWORD PTR [ebp-0x18],0xf
10038cf1:	mov    DWORD PTR [ebp-0x1c],0x0
10038cf8:	mov    BYTE PTR [ebp-0x2c],0x0
10038cfc:	call   0x10043250
10038d01:	mov    edx,DWORD PTR [ebp-0x2c]
10038d04:	mov    edi,eax
10038d06:	mov    eax,DWORD PTR [ebp-0x18]
10038d09:	add    esp,0x4
10038d0c:	cmp    eax,0x10
10038d0f:	mov    ecx,edx
10038d11:	jae    0x10038d16
10038d13:	lea    ecx,[ebp-0x2c]
10038d16:	cmp    ebx,ecx
10038d18:	jb     0x10038d49
10038d1a:	cmp    eax,0x10
10038d1d:	mov    ecx,edx
10038d1f:	jae    0x10038d24
10038d21:	lea    ecx,[ebp-0x2c]
10038d24:	mov    edx,DWORD PTR [ebp-0x1c]
10038d27:	add    ecx,edx
10038d29:	cmp    ecx,ebx
10038d2b:	jbe    0x10038d49
10038d2d:	cmp    eax,0x10
10038d30:	mov    eax,DWORD PTR [ebp-0x2c]
10038d33:	jae    0x10038d38
10038d35:	lea    eax,[ebp-0x2c]
10038d38:	push   edi
10038d39:	sub    ebx,eax
10038d3b:	lea    eax,[ebp-0x30]
10038d3e:	push   ebx
10038d3f:	push   eax
10038d40:	mov    ecx,eax
10038d42:	call   0x10001245
10038d47:	jmp    0x10038d98
10038d49:	cmp    edi,0xfffffffe
10038d4c:	jbe    0x10038d56
10038d4e:	call   0x10057440
10038d53:	mov    eax,DWORD PTR [ebp-0x18]
10038d56:	cmp    eax,edi
10038d58:	jae    0x10038daa
10038d5a:	mov    ecx,DWORD PTR [ebp-0x1c]
10038d5d:	push   ecx
10038d5e:	push   edi
10038d5f:	lea    ecx,[ebp-0x30]
10038d62:	call   0x10001504
10038d67:	mov    eax,DWORD PTR [ebp-0x18]
10038d6a:	test   edi,edi
10038d6c:	jbe    0x10038d98
10038d6e:	cmp    eax,0x10
10038d71:	mov    ecx,DWORD PTR [ebp-0x2c]
10038d74:	jae    0x10038d79
10038d76:	lea    ecx,[ebp-0x2c]
10038d79:	push   edi
10038d7a:	push   ebx
10038d7b:	push   eax
10038d7c:	push   ecx
10038d7d:	call   0x10043605
10038d82:	mov    eax,DWORD PTR [ebp-0x2c]
10038d85:	add    esp,0x10
10038d88:	cmp    DWORD PTR [ebp-0x18],0x10
10038d8c:	mov    DWORD PTR [ebp-0x1c],edi
10038d8f:	jae    0x10038d94
10038d91:	lea    eax,[ebp-0x2c]
10038d94:	mov    BYTE PTR [eax+edi*1],0x0
10038d98:	mov    edx,DWORD PTR [ebp-0x10]
10038d9b:	mov    BYTE PTR [ebp-0x4],0x1
10038d9f:	mov    ebx,DWORD PTR [edx+0x4]
10038da2:	test   ebx,ebx
10038da4:	jne    0x10038dc1
10038da6:	xor    edi,edi
10038da8:	jmp    0x10038ddb
10038daa:	test   edi,edi
10038dac:	jne    0x10038d6c
10038dae:	cmp    eax,0x10
10038db1:	mov    eax,DWORD PTR [ebp-0x2c]
10038db4:	mov    DWORD PTR [ebp-0x1c],edi
10038db7:	jae    0x10038dbc
10038db9:	lea    eax,[ebp-0x2c]
10038dbc:	mov    BYTE PTR [eax],0x0
10038dbf:	jmp    0x10038d98
10038dc1:	mov    eax,edx
10038dc3:	mov    ecx,DWORD PTR [eax+0x8]
10038dc6:	sub    ecx,ebx
10038dc8:	mov    eax,0x92492493
10038dcd:	imul   ecx
10038dcf:	add    edx,ecx
10038dd1:	sar    edx,0x4
10038dd4:	mov    edi,edx
10038dd6:	shr    edi,0x1f
10038dd9:	add    edi,edx
10038ddb:	test   ebx,ebx
10038ddd:	je     0x10038e27
10038ddf:	mov    ecx,DWORD PTR [ebp-0x10]
10038de2:	mov    ecx,DWORD PTR [ecx+0xc]
10038de5:	sub    ecx,ebx
10038de7:	mov    eax,0x92492493
10038dec:	imul   ecx
10038dee:	add    edx,ecx
10038df0:	sar    edx,0x4
10038df3:	mov    eax,edx
10038df5:	shr    eax,0x1f
10038df8:	add    eax,edx
10038dfa:	cmp    edi,eax
10038dfc:	jae    0x10038e27
10038dfe:	mov    ebx,DWORD PTR [ebp-0x10]
10038e01:	mov    edi,DWORD PTR [ebx+0x8]
10038e04:	mov    BYTE PTR [ebp-0x34],0x0
10038e08:	mov    edx,DWORD PTR [ebp-0x34]
10038e0b:	mov    eax,DWORD PTR [ebp-0x34]
10038e0e:	push   edx
10038e0f:	push   eax
10038e10:	lea    ecx,[ebp-0x30]
10038e13:	push   ecx
10038e14:	push   0x1
10038e16:	push   edi
10038e17:	call   0x10010076
10038e1c:	add    esp,0x14
10038e1f:	add    edi,0x1c
10038e22:	mov    DWORD PTR [ebx+0x8],edi
10038e25:	jmp    0x10038e48
10038e27:	mov    eax,DWORD PTR [ebp-0x10]
10038e2a:	mov    edi,DWORD PTR [eax+0x8]
10038e2d:	cmp    ebx,edi
10038e2f:	jbe    0x10038e39
10038e31:	call   0x100435f0
10038e36:	mov    eax,DWORD PTR [ebp-0x10]
10038e39:	push   edi
10038e3a:	push   eax
10038e3b:	lea    edx,[ebp-0x30]
10038e3e:	push   edx
10038e3f:	lea    ecx,[ebp-0x44]
10038e42:	push   ecx
10038e43:	call   0x1000fcc3
10038e48:	cmp    DWORD PTR [ebp-0x18],0x10
10038e4c:	jb     0x10038e5a
10038e4e:	mov    edx,DWORD PTR [ebp-0x2c]
10038e51:	push   edx
10038e52:	call   0x100430d2
10038e57:	add    esp,0x4
10038e5a:	mov    esi,DWORD PTR [esi]
10038e5c:	mov    DWORD PTR [ebp-0x4],0xffffffff
10038e63:	mov    eax,DWORD PTR [ebp-0x14]
10038e66:	add    eax,0xfffffff0
10038e69:	mov    DWORD PTR [ebp-0x18],0xf
10038e70:	mov    DWORD PTR [ebp-0x1c],0x0
10038e77:	mov    BYTE PTR [ebp-0x2c],0x0
10038e7b:	lea    ecx,[eax+0xc]
10038e7e:	or     edx,0xffffffff
10038e81:	lock xadd DWORD PTR [ecx],edx
10038e85:	dec    edx
10038e86:	test   edx,edx
10038e88:	jg     0x10038e94
10038e8a:	mov    ecx,DWORD PTR [eax]
10038e8c:	mov    edx,DWORD PTR [ecx]
10038e8e:	push   eax
10038e8f:	mov    eax,DWORD PTR [edx+0x4]
10038e92:	call   eax
10038e94:	test   esi,esi
10038e96:	jne    0x10038bad
10038e9c:	lea    esp,[ebp-0x54]
10038e9f:	mov    ecx,DWORD PTR [ebp-0xc]
10038ea2:	mov    DWORD PTR fs:0x0,ecx
10038ea9:	pop    ecx
10038eaa:	pop    edi
10038eab:	pop    esi
10038eac:	pop    ebx
10038ead:	mov    ecx,DWORD PTR [ebp+0x1950]
10038eb3:	xor    ecx,ebp
10038eb5:	call   0x100430d7
10038eba:	add    ebp,0x1954
10038ec0:	mov    esp,ebp
10038ec2:	pop    ebp
10038ec3:	ret    
10038ec4:	int3   
10038ec5:	int3   
10038ec6:	int3   
10038ec7:	int3   
10038ec8:	int3   
10038ec9:	int3   
10038eca:	int3   
10038ecb:	int3   
10038ecc:	int3   
10038ecd:	int3   
10038ece:	int3   
10038ecf:	int3   
10038ed0:	push   ebp
10038ed1:	mov    ebp,esp
10038ed3:	and    esp,0xfffffff8
10038ed6:	push   0xffffffff
10038ed8:	push   0x100614d0
10038edd:	mov    eax,fs:0x0
10038ee3:	push   eax
10038ee4:	sub    esp,0x50
10038ee7:	push   ebx
10038ee8:	push   esi
10038ee9:	push   edi
10038eea:	mov    eax,ds:0x1007e030
10038eef:	xor    eax,esp
10038ef1:	push   eax
10038ef2:	lea    eax,[esp+0x60]
10038ef6:	mov    fs:0x0,eax
10038efc:	xor    ebx,ebx
10038efe:	mov    DWORD PTR [esp+0x38],ebx
10038f02:	mov    DWORD PTR [esp+0x30],ebx
10038f06:	push   ebx
10038f07:	push   ebx
10038f08:	mov    DWORD PTR [esp+0x70],ebx
10038f0c:	call   DWORD PTR ds:0x10066440
10038f12:	test   eax,eax
10038f14:	jl     0x10039017
10038f1a:	lea    eax,[esp+0x18]
10038f1e:	push   eax
10038f1f:	push   0x1006b6a8
10038f24:	push   0x1
10038f26:	push   ebx
10038f27:	push   0x1006b778
10038f2c:	mov    DWORD PTR [esp+0x2c],ebx
10038f30:	call   DWORD PTR ds:0x1006643c
10038f36:	cmp    eax,ebx
10038f38:	jl     0x10039011
10038f3e:	push   0x2e8d00ba
10038f43:	push   0x10073f40
10038f48:	mov    DWORD PTR [esp+0x1c],ebx
10038f4c:	call   0x100042d1
10038f51:	push   eax
10038f52:	push   0xa
10038f54:	push   0x10073f78
10038f59:	call   0x100044a2
10038f5e:	add    esp,0x14
10038f61:	push   eax
10038f62:	lea    edi,[esp+0x2c]
10038f66:	call   0x100024a7
10038f6b:	mov    BYTE PTR [esp+0x68],0x1
10038f70:	mov    eax,DWORD PTR [eax]
10038f72:	cmp    eax,ebx
10038f74:	je     0x10038f7a
10038f76:	mov    ecx,DWORD PTR [eax]
10038f78:	jmp    0x10038f7c
10038f7a:	xor    ecx,ecx
10038f7c:	mov    eax,DWORD PTR [esp+0x18]
10038f80:	mov    edx,DWORD PTR [eax]
10038f82:	lea    esi,[esp+0x14]
10038f86:	push   esi
10038f87:	push   ebx
10038f88:	push   ebx
10038f89:	push   ebx
10038f8a:	push   ebx
10038f8b:	push   ebx
10038f8c:	push   ebx
10038f8d:	push   ecx
10038f8e:	push   eax
10038f8f:	mov    eax,DWORD PTR [edx+0xc]
10038f92:	call   eax
10038f94:	mov    edi,eax
10038f96:	mov    BYTE PTR [esp+0x68],bl
10038f9a:	mov    eax,DWORD PTR [esp+0x28]
10038f9e:	cmp    eax,ebx
10038fa0:	je     0x10038fdc
10038fa2:	mov    esi,eax
10038fa4:	add    eax,0x8
10038fa7:	push   eax
10038fa8:	call   DWORD PTR ds:0x100660ac
10038fae:	cmp    eax,ebx
10038fb0:	jne    0x10038fdc
10038fb2:	cmp    esi,ebx
10038fb4:	je     0x10038fdc
10038fb6:	mov    eax,DWORD PTR [esi]
10038fb8:	cmp    eax,ebx
10038fba:	je     0x10038fc3
10038fbc:	push   eax
10038fbd:	call   DWORD PTR ds:0x100662b4
10038fc3:	mov    eax,DWORD PTR [esi+0x4]
10038fc6:	cmp    eax,ebx
10038fc8:	je     0x10038fd3
10038fca:	push   eax
10038fcb:	call   0x10043600
10038fd0:	add    esp,0x4
10038fd3:	push   esi
10038fd4:	call   0x100430d2
10038fd9:	add    esp,0x4
10038fdc:	cmp    edi,ebx
10038fde:	jl     0x10039005
10038fe0:	mov    eax,DWORD PTR [esp+0x14]
10038fe4:	push   ebx
10038fe5:	push   ebx
10038fe6:	push   0x3
10038fe8:	push   0x3
10038fea:	push   ebx
10038feb:	push   ebx
10038fec:	push   0xa
10038fee:	push   eax
10038fef:	call   DWORD PTR ds:0x10066444
10038ff5:	cmp    eax,ebx
10038ff7:	jge    0x1003902f
10038ff9:	mov    eax,DWORD PTR [esp+0x14]
10038ffd:	mov    ecx,DWORD PTR [eax]
10038fff:	mov    edx,DWORD PTR [ecx+0x8]
10039002:	push   eax
10039003:	call   edx
10039005:	mov    eax,DWORD PTR [esp+0x18]
10039009:	mov    ecx,DWORD PTR [eax]
1003900b:	mov    edx,DWORD PTR [ecx+0x8]
1003900e:	push   eax
1003900f:	call   edx
10039011:	call   DWORD PTR ds:0x10066424
10039017:	mov    eax,DWORD PTR [ebp+0x8]
1003901a:	mov    DWORD PTR [eax],ebx
1003901c:	mov    ecx,DWORD PTR [esp+0x60]
10039020:	mov    DWORD PTR fs:0x0,ecx
10039027:	pop    ecx
10039028:	pop    edi
10039029:	pop    esi
1003902a:	pop    ebx
1003902b:	mov    esp,ebp
1003902d:	pop    ebp
1003902e:	ret    
1003902f:	push   0x10073f90
10039034:	push   0xe
10039036:	push   0x10073fc4
1003903b:	mov    DWORD PTR [esp+0x28],ebx
1003903f:	call   0x100042e3
10039044:	add    esp,0xc
10039047:	push   eax
10039048:	lea    edi,[esp+0x38]
1003904c:	call   0x1000244f
10039051:	mov    ecx,DWORD PTR [ebp+0xc]
10039054:	push   ecx
10039055:	lea    edx,[esp+0x2c]
10039059:	push   edx
1003905a:	push   eax
1003905b:	mov    BYTE PTR [esp+0x74],0x2
10039060:	call   0x100386d0
10039065:	mov    esi,eax
10039067:	push   0x1082dd66
1003906c:	push   0x10073fd4
10039071:	mov    BYTE PTR [esp+0x70],0x3
10039076:	call   0x100042d1
1003907b:	push   0x34e2efee
10039080:	push   eax
10039081:	call   0x100042d1
10039086:	push   0x3065ad98
1003908b:	push   eax
1003908c:	call   0x100042d1
10039091:	push   eax
10039092:	push   0x3
10039094:	push   0x10074014
10039099:	call   0x100042e3
1003909e:	add    esp,0x24
100390a1:	push   eax
100390a2:	lea    edi,[esp+0x28]
100390a6:	call   0x1000244f
100390ab:	mov    BYTE PTR [esp+0x68],0x4
100390b0:	mov    ecx,DWORD PTR [esi]
100390b2:	cmp    ecx,ebx
100390b4:	je     0x100390ba
100390b6:	mov    ecx,DWORD PTR [ecx]
100390b8:	jmp    0x100390bc
100390ba:	xor    ecx,ecx
100390bc:	mov    eax,DWORD PTR [eax]
100390be:	cmp    eax,ebx
100390c0:	je     0x100390c6
100390c2:	mov    edx,DWORD PTR [eax]
100390c4:	jmp    0x100390c8
100390c6:	xor    edx,edx
100390c8:	mov    eax,DWORD PTR [esp+0x14]
100390cc:	mov    esi,DWORD PTR [eax]
100390ce:	lea    edi,[esp+0x1c]
100390d2:	push   edi
100390d3:	push   ebx
100390d4:	push   0x30
100390d6:	push   ecx
100390d7:	push   edx
100390d8:	push   eax
100390d9:	mov    eax,DWORD PTR [esi+0x50]
100390dc:	call   eax
100390de:	mov    edi,DWORD PTR ds:0x100660ac
100390e4:	mov    DWORD PTR [esp+0x38],eax
100390e8:	mov    eax,DWORD PTR [esp+0x24]
100390ec:	cmp    eax,ebx
100390ee:	je     0x1003912a
100390f0:	mov    esi,eax
100390f2:	add    eax,0x8
100390f5:	push   eax
100390f6:	call   edi
100390f8:	cmp    eax,ebx
100390fa:	jne    0x10039126
100390fc:	cmp    esi,ebx
100390fe:	je     0x10039126
10039100:	mov    eax,DWORD PTR [esi]
10039102:	cmp    eax,ebx
10039104:	je     0x1003910d
10039106:	push   eax
10039107:	call   DWORD PTR ds:0x100662b4
1003910d:	mov    eax,DWORD PTR [esi+0x4]
10039110:	cmp    eax,ebx
10039112:	je     0x1003911d
10039114:	push   eax
10039115:	call   0x10043600
1003911a:	add    esp,0x4
1003911d:	push   esi
1003911e:	call   0x100430d2
10039123:	add    esp,0x4
10039126:	mov    DWORD PTR [esp+0x24],ebx
1003912a:	mov    esi,DWORD PTR [esp+0x28]
1003912e:	cmp    esi,ebx
10039130:	je     0x1003916a
10039132:	lea    ecx,[esi+0x8]
10039135:	push   ecx
10039136:	call   edi
10039138:	cmp    eax,ebx
1003913a:	jne    0x10039166
1003913c:	cmp    esi,ebx
1003913e:	je     0x10039166
10039140:	mov    eax,DWORD PTR [esi]
10039142:	cmp    eax,ebx
10039144:	je     0x1003914d
10039146:	push   eax
10039147:	call   DWORD PTR ds:0x100662b4
1003914d:	mov    eax,DWORD PTR [esi+0x4]
10039150:	cmp    eax,ebx
10039152:	je     0x1003915d
10039154:	push   eax
10039155:	call   0x10043600
1003915a:	add    esp,0x4
1003915d:	push   esi
1003915e:	call   0x100430d2
10039163:	add    esp,0x4
10039166:	mov    DWORD PTR [esp+0x28],ebx
1003916a:	mov    BYTE PTR [esp+0x68],bl
1003916e:	mov    esi,DWORD PTR [esp+0x34]
10039172:	cmp    esi,ebx
10039174:	je     0x100391aa
10039176:	lea    edx,[esi+0x8]
10039179:	push   edx
1003917a:	call   edi
1003917c:	cmp    eax,ebx
1003917e:	jne    0x100391aa
10039180:	cmp    esi,ebx
10039182:	je     0x100391aa
10039184:	mov    eax,DWORD PTR [esi]
10039186:	cmp    eax,ebx
10039188:	je     0x10039191
1003918a:	push   eax
1003918b:	call   DWORD PTR ds:0x100662b4
10039191:	mov    eax,DWORD PTR [esi+0x4]
10039194:	cmp    eax,ebx
10039196:	je     0x100391a1
10039198:	push   eax
10039199:	call   0x10043600
1003919e:	add    esp,0x4
100391a1:	push   esi
100391a2:	call   0x100430d2
100391a7:	add    esp,0x4
100391aa:	cmp    DWORD PTR [esp+0x38],ebx
100391ae:	jl     0x10038ff9
100391b4:	mov    eax,DWORD PTR [esp+0x1c]
100391b8:	cmp    eax,ebx
100391ba:	mov    DWORD PTR [esp+0x2c],ebx
100391be:	je     0x10039272
100391c4:	mov    ecx,DWORD PTR [eax]
100391c6:	lea    edx,[esp+0x2c]
100391ca:	push   edx
100391cb:	lea    edx,[esp+0x24]
100391cf:	push   edx
100391d0:	push   0x1
100391d2:	push   0xffffffff
100391d4:	push   eax
100391d5:	mov    eax,DWORD PTR [ecx+0x10]
100391d8:	call   eax
100391da:	cmp    DWORD PTR [esp+0x2c],ebx
100391de:	je     0x10039272
100391e4:	mov    esi,DWORD PTR [esp+0x20]
100391e8:	mov    eax,DWORD PTR [ebp+0x10]
100391eb:	mov    edi,DWORD PTR [esi]
100391ed:	push   ebx
100391ee:	push   ebx
100391ef:	lea    ecx,[esp+0x44]
100391f3:	push   ecx
100391f4:	push   ebx
100391f5:	call   0x10002587
100391fa:	mov    edx,DWORD PTR [edi+0x10]
100391fd:	push   eax
100391fe:	push   esi
100391ff:	call   edx
10039201:	cmp    eax,ebx
10039203:	jl     0x1003920d
10039205:	cmp    WORD PTR [esp+0x3c],0x8
1003920b:	je     0x1003922e
1003920d:	lea    eax,[esp+0x3c]
10039211:	push   eax
10039212:	call   DWORD PTR ds:0x10066294
10039218:	mov    eax,DWORD PTR [esp+0x20]
1003921c:	mov    ecx,DWORD PTR [eax]
1003921e:	mov    edx,DWORD PTR [ecx+0x8]
10039221:	push   eax
10039222:	call   edx
10039224:	mov    eax,DWORD PTR [esp+0x1c]
10039228:	cmp    eax,ebx
1003922a:	jne    0x100391c4
1003922c:	jmp    0x10039272
1003922e:	lea    eax,[esp+0x4c]
10039232:	push   eax
10039233:	call   DWORD PTR ds:0x1006628c
10039239:	lea    ecx,[esp+0x3c]
1003923d:	push   ecx
1003923e:	lea    edx,[esp+0x50]
10039242:	push   edx
10039243:	call   DWORD PTR ds:0x10066280
10039249:	cmp    eax,ebx
1003924b:	jge    0x10039253
1003924d:	push   eax
1003924e:	call   0x10050e30
10039253:	lea    esi,[esp+0x4c]
10039257:	lea    edi,[esp+0x30]
1003925b:	mov    BYTE PTR [esp+0x68],0x5
10039260:	call   0x10038750
10039265:	mov    eax,esi
10039267:	push   eax
10039268:	mov    BYTE PTR [esp+0x6c],bl
1003926c:	call   DWORD PTR ds:0x10066294
10039272:	mov    eax,DWORD PTR [esp+0x14]
10039276:	mov    ecx,DWORD PTR [eax]
10039278:	mov    edx,DWORD PTR [ecx+0x8]
1003927b:	push   eax
1003927c:	call   edx
1003927e:	mov    eax,DWORD PTR [esp+0x18]
10039282:	mov    ecx,DWORD PTR [eax]
10039284:	mov    edx,DWORD PTR [ecx+0x8]
10039287:	push   eax
10039288:	call   edx
1003928a:	mov    eax,DWORD PTR [esp+0x1c]
1003928e:	mov    ecx,DWORD PTR [eax]
10039290:	mov    edx,DWORD PTR [ecx+0x8]
10039293:	push   eax
10039294:	call   edx
10039296:	mov    eax,DWORD PTR [esp+0x20]
1003929a:	mov    ecx,DWORD PTR [eax]
1003929c:	mov    edx,DWORD PTR [ecx+0x8]
1003929f:	push   eax
100392a0:	call   edx
100392a2:	call   DWORD PTR ds:0x10066424
100392a8:	mov    edi,DWORD PTR [esp+0x30]
100392ac:	cmp    edi,ebx
100392ae:	mov    eax,DWORD PTR [ebp+0x8]
100392b1:	mov    DWORD PTR [eax],edi
100392b3:	je     0x100392f0
100392b5:	lea    esi,[edi+0x8]
100392b8:	push   esi
100392b9:	call   DWORD PTR ds:0x100660a4
100392bf:	push   esi
100392c0:	call   DWORD PTR ds:0x100660ac
100392c6:	test   eax,eax
100392c8:	jne    0x100392f0
100392ca:	mov    eax,DWORD PTR [edi]
100392cc:	cmp    eax,ebx
100392ce:	je     0x100392d7
100392d0:	push   eax
100392d1:	call   DWORD PTR ds:0x100662b4
100392d7:	mov    eax,DWORD PTR [edi+0x4]
100392da:	cmp    eax,ebx
100392dc:	je     0x100392e7
100392de:	push   eax
100392df:	call   0x10043600
100392e4:	add    esp,0x4
100392e7:	push   edi
100392e8:	call   0x100430d2
100392ed:	add    esp,0x4
100392f0:	mov    eax,DWORD PTR [ebp+0x8]
100392f3:	mov    ecx,DWORD PTR [esp+0x60]
100392f7:	mov    DWORD PTR fs:0x0,ecx
100392fe:	pop    ecx
100392ff:	pop    edi
10039300:	pop    esi
10039301:	pop    ebx
10039302:	mov    esp,ebp
10039304:	pop    ebp
10039305:	ret    
10039306:	int3   
10039307:	int3   
10039308:	int3   
10039309:	int3   
1003930a:	int3   
1003930b:	int3   
1003930c:	int3   
1003930d:	int3   
1003930e:	int3   
1003930f:	int3   
10039310:	push   ebp
10039311:	mov    ebp,esp
10039313:	push   0xffffffff
10039315:	push   0x100626de
1003931a:	mov    eax,fs:0x0
10039320:	push   eax
10039321:	sub    esp,0x1c
10039324:	mov    eax,ds:0x1007e030
10039329:	xor    eax,ebp
1003932b:	mov    DWORD PTR [ebp-0x10],eax
1003932e:	push   ebx
1003932f:	push   esi
10039330:	push   edi
10039331:	push   eax
10039332:	lea    eax,[ebp-0xc]
10039335:	mov    fs:0x0,eax
1003933b:	mov    eax,DWORD PTR [ebp+0x8]
1003933e:	xor    ebx,ebx
10039340:	mov    DWORD PTR [ebp-0x20],eax
10039343:	mov    DWORD PTR [ebp-0x24],ebx
10039346:	call   DWORD PTR ds:0x1007efec
1003934c:	push   0x59de14c4
10039351:	push   0x10074018
10039356:	mov    DWORD PTR [ebp-0x24],eax
10039359:	call   0x100042d1
1003935e:	push   0x1dee04e
10039363:	push   eax
10039364:	call   0x100042d1
10039369:	push   0x453d712
1003936e:	push   eax
1003936f:	call   0x100042d1
10039374:	push   0x3691f9c2
10039379:	push   eax
1003937a:	call   0x100042d1
1003937f:	push   0x1f104e40
10039384:	push   eax
10039385:	call   0x100042d1
1003938a:	push   0x609602a8
1003938f:	push   eax
10039390:	call   0x100042d1
10039395:	push   eax
10039396:	push   0xc
10039398:	push   0x1007403c
1003939d:	call   0x100044a2
100393a2:	push   0xc
100393a4:	mov    edi,eax
100393a6:	call   0x100436de
100393ab:	mov    esi,eax
100393ad:	add    esp,0x40
100393b0:	mov    DWORD PTR [ebp-0x18],esi
100393b3:	cmp    esi,ebx
100393b5:	mov    DWORD PTR [ebp-0x4],ebx
100393b8:	je     0x100393e4
100393ba:	push   edi
100393bb:	mov    DWORD PTR [esi+0x4],ebx
100393be:	mov    DWORD PTR [esi+0x8],0x1
100393c5:	call   DWORD PTR ds:0x100662b0
100393cb:	cmp    eax,ebx
100393cd:	mov    DWORD PTR [esi],eax
100393cf:	jne    0x100393df
100393d1:	cmp    edi,ebx
100393d3:	je     0x100393df
100393d5:	push   0x8007000e
100393da:	call   0x10050e30
100393df:	mov    DWORD PTR [ebp-0x1c],esi
100393e2:	jmp    0x100393e9
100393e4:	mov    DWORD PTR [ebp-0x1c],ebx
100393e7:	mov    esi,ebx
100393e9:	cmp    esi,ebx
100393eb:	mov    DWORD PTR [ebp-0x4],0xffffffff
100393f2:	mov    DWORD PTR [ebp-0x28],esi
100393f5:	jne    0x10039401
100393f7:	push   0x8007000e
100393fc:	call   0x10050e30
10039401:	push   0x75601bb6
10039406:	push   0x10074058
1003940b:	mov    DWORD PTR [ebp-0x4],0x1
10039412:	call   0x100042d1
10039417:	push   eax
10039418:	push   0x15
1003941a:	push   0x10074098
1003941f:	call   0x100044a2
10039424:	push   0xc
10039426:	mov    esi,eax
10039428:	call   0x100436de
1003942d:	mov    edi,eax
1003942f:	add    esp,0x18
10039432:	mov    DWORD PTR [ebp-0x18],edi
10039435:	cmp    edi,ebx
10039437:	mov    BYTE PTR [ebp-0x4],0x2
1003943b:	je     0x10039464
1003943d:	push   esi
1003943e:	mov    DWORD PTR [edi+0x4],ebx
10039441:	mov    DWORD PTR [edi+0x8],0x1
10039448:	call   DWORD PTR ds:0x100662b0
1003944e:	cmp    eax,ebx
10039450:	mov    DWORD PTR [edi],eax
10039452:	jne    0x10039466
10039454:	cmp    esi,ebx
10039456:	je     0x10039466
10039458:	push   0x8007000e
1003945d:	call   0x10050e30
10039462:	jmp    0x10039466
10039464:	xor    edi,edi
10039466:	cmp    edi,ebx
10039468:	mov    BYTE PTR [ebp-0x4],0x1
1003946c:	mov    DWORD PTR [ebp-0x18],edi
1003946f:	jne    0x1003947b
10039471:	push   0x8007000e
10039476:	call   0x10050e30
1003947b:	lea    ecx,[ebp-0x28]
1003947e:	push   ecx
1003947f:	lea    edx,[ebp-0x18]
10039482:	push   edx
10039483:	lea    eax,[ebp-0x14]
10039486:	push   eax
10039487:	mov    BYTE PTR [ebp-0x4],0x3
1003948b:	call   0x10038ed0
10039490:	add    esp,0xc
10039493:	cmp    edi,ebx
10039495:	je     0x100394cb
10039497:	lea    ecx,[edi+0x8]
1003949a:	push   ecx
1003949b:	call   DWORD PTR ds:0x100660ac
100394a1:	cmp    eax,ebx
100394a3:	jne    0x100394cb
100394a5:	mov    eax,DWORD PTR [edi]
100394a7:	cmp    eax,ebx
100394a9:	je     0x100394b2
100394ab:	push   eax
100394ac:	call   DWORD PTR ds:0x100662b4
100394b2:	mov    eax,DWORD PTR [edi+0x4]
100394b5:	cmp    eax,ebx
100394b7:	je     0x100394c2
100394b9:	push   eax
100394ba:	call   0x10043600
100394bf:	add    esp,0x4
100394c2:	push   edi
100394c3:	call   0x100430d2
100394c8:	add    esp,0x4
100394cb:	mov    esi,DWORD PTR [ebp-0x1c]
100394ce:	cmp    esi,ebx
100394d0:	mov    BYTE PTR [ebp-0x4],0x6
100394d4:	je     0x1003950a
100394d6:	lea    edx,[esi+0x8]
100394d9:	push   edx
100394da:	call   DWORD PTR ds:0x100660ac
100394e0:	cmp    eax,ebx
100394e2:	jne    0x1003950a
100394e4:	mov    eax,DWORD PTR [esi]
100394e6:	cmp    eax,ebx
100394e8:	je     0x100394f1
100394ea:	push   eax
100394eb:	call   DWORD PTR ds:0x100662b4
100394f1:	mov    eax,DWORD PTR [esi+0x4]
100394f4:	cmp    eax,ebx
100394f6:	je     0x10039501
100394f8:	push   eax
100394f9:	call   0x10043600
100394fe:	add    esp,0x4
10039501:	push   esi
10039502:	call   0x100430d2
10039507:	add    esp,0x4
1003950a:	mov    edi,DWORD PTR [ebp-0x14]
1003950d:	cmp    edi,ebx
1003950f:	je     0x10039517
10039511:	mov    ebx,DWORD PTR [edi]
10039513:	test   ebx,ebx
10039515:	jne    0x1003951b
10039517:	xor    esi,esi
10039519:	jmp    0x10039568
1003951b:	push   ebx
1003951c:	call   DWORD PTR ds:0x100660c4
10039522:	add    eax,0x1
10039525:	cmp    eax,0x3fffffff
1003952a:	jg     0x10039562
1003952c:	lea    edi,[eax+eax*1]
1003952f:	mov    eax,edi
10039531:	call   0x1004b990
10039536:	mov    esi,esp
10039538:	test   esi,esi
1003953a:	je     0x1003955f
1003953c:	mov    eax,DWORD PTR [ebp-0x24]
1003953f:	push   0x0
10039541:	push   0x0
10039543:	push   edi
10039544:	push   esi
10039545:	push   0xffffffff
10039547:	push   ebx
10039548:	push   0x0
1003954a:	push   eax
1003954b:	mov    BYTE PTR [esi],0x0
1003954e:	call   DWORD PTR ds:0x100660b8
10039554:	mov    edi,DWORD PTR [ebp-0x14]
10039557:	neg    eax
10039559:	sbb    eax,eax
1003955b:	and    eax,esi
1003955d:	jmp    0x10039564
1003955f:	mov    edi,DWORD PTR [ebp-0x14]
10039562:	xor    eax,eax
10039564:	mov    esi,eax
10039566:	xor    ebx,ebx
10039568:	mov    eax,DWORD PTR [ebp-0x20]
1003956b:	mov    DWORD PTR [eax+0x18],0xf
10039572:	mov    DWORD PTR [eax+0x14],ebx
10039575:	push   esi
10039576:	mov    BYTE PTR [eax+0x4],0x0
1003957a:	call   0x10043250
1003957f:	add    esp,0x4
10039582:	push   eax
10039583:	push   esi
10039584:	mov    esi,DWORD PTR [ebp-0x20]
10039587:	mov    ecx,esi
10039589:	call   0x1000133f
1003958e:	cmp    edi,ebx
10039590:	je     0x100395c6
10039592:	lea    ecx,[edi+0x8]
10039595:	push   ecx
10039596:	call   DWORD PTR ds:0x100660ac
1003959c:	test   eax,eax
1003959e:	jne    0x100395c6
100395a0:	mov    eax,DWORD PTR [edi]
100395a2:	cmp    eax,ebx
100395a4:	je     0x100395ad
100395a6:	push   eax
100395a7:	call   DWORD PTR ds:0x100662b4
100395ad:	mov    eax,DWORD PTR [edi+0x4]
100395b0:	cmp    eax,ebx
100395b2:	je     0x100395bd
100395b4:	push   eax
100395b5:	call   0x10043600
100395ba:	add    esp,0x4
100395bd:	push   edi
100395be:	call   0x100430d2
100395c3:	add    esp,0x4
100395c6:	mov    eax,esi
100395c8:	lea    esp,[ebp-0x38]
100395cb:	mov    ecx,DWORD PTR [ebp-0xc]
100395ce:	mov    DWORD PTR fs:0x0,ecx
100395d5:	pop    ecx
100395d6:	pop    edi
100395d7:	pop    esi
100395d8:	pop    ebx
100395d9:	mov    ecx,DWORD PTR [ebp-0x10]
100395dc:	xor    ecx,ebp
100395de:	call   0x100430d7
100395e3:	mov    esp,ebp
100395e5:	pop    ebp
100395e6:	ret    
100395e7:	int3   
100395e8:	int3   
100395e9:	int3   
100395ea:	int3   
100395eb:	int3   
100395ec:	int3   
100395ed:	int3   
100395ee:	int3   
100395ef:	int3   
100395f0:	sub    esp,0xc
100395f3:	push   ebx
100395f4:	push   ebp
100395f5:	push   esi
100395f6:	mov    esi,DWORD PTR [ecx]
100395f8:	push   edi
100395f9:	mov    edi,DWORD PTR [esp+0x20]
100395fd:	xor    ebx,ebx
100395ff:	cmp    edi,0x1
10039602:	jle    0x100396ee
10039608:	mov    eax,0x34
1003960d:	cdq    
1003960e:	idiv   edi
10039610:	mov    esi,DWORD PTR [ecx+edi*4-0x4]
10039614:	add    eax,0x6
10039617:	test   eax,eax
10039619:	jle    0x100396e4
1003961f:	nop
10039620:	sub    eax,0x1
10039623:	mov    DWORD PTR [esp+0x18],eax
10039627:	sub    ebx,0x61c88647
1003962d:	mov    eax,ebx
1003962f:	shr    eax,0x2
10039632:	and    eax,0x3
10039635:	mov    DWORD PTR [esp+0x10],eax
10039639:	lea    eax,[edi-0x1]
1003963c:	xor    edx,edx
1003963e:	test   eax,eax
10039640:	mov    DWORD PTR [esp+0x14],ebx
10039644:	jle    0x10039699
10039646:	mov    edi,DWORD PTR [ecx+edx*4+0x4]
1003964a:	mov    ebx,esi
1003964c:	shl    ebx,0x4
1003964f:	mov    eax,edi
10039651:	shr    eax,0x3
10039654:	xor    eax,ebx
10039656:	mov    ebx,esi
10039658:	shr    ebx,0x5
1003965b:	lea    ebp,[edi*4+0x0]
10039662:	xor    ebx,ebp
10039664:	mov    ebp,DWORD PTR [esp+0x24]
10039668:	add    eax,ebx
1003966a:	mov    ebx,edx
1003966c:	and    ebx,0x3
1003966f:	xor    ebx,DWORD PTR [esp+0x10]
10039673:	add    edx,0x1
10039676:	mov    ebx,DWORD PTR [ebp+ebx*4+0x0]
1003967a:	xor    ebx,esi
1003967c:	mov    esi,DWORD PTR [esp+0x14]
10039680:	xor    esi,edi
10039682:	mov    edi,DWORD PTR [esp+0x20]
10039686:	add    ebx,esi
10039688:	xor    eax,ebx
1003968a:	add    DWORD PTR [ecx+edx*4-0x4],eax
1003968e:	mov    esi,DWORD PTR [ecx+edx*4-0x4]
10039692:	lea    eax,[edi-0x1]
10039695:	cmp    edx,eax
10039697:	jl     0x10039646
10039699:	mov    eax,DWORD PTR [ecx]
1003969b:	mov    ebp,eax
1003969d:	shr    ebp,0x3
100396a0:	mov    ebx,esi
100396a2:	shl    ebx,0x4
100396a5:	xor    ebp,ebx
100396a7:	add    eax,eax
100396a9:	add    eax,eax
100396ab:	mov    ebx,esi
100396ad:	and    edx,0x3
100396b0:	xor    edx,DWORD PTR [esp+0x10]
100396b4:	shr    ebx,0x5
100396b7:	xor    ebx,eax
100396b9:	mov    eax,DWORD PTR [esp+0x24]
100396bd:	mov    edx,DWORD PTR [eax+edx*4]
100396c0:	add    ebp,ebx
100396c2:	mov    ebx,DWORD PTR [esp+0x14]
100396c6:	mov    eax,ebx
100396c8:	xor    eax,DWORD PTR [ecx]
100396ca:	xor    edx,esi
100396cc:	add    edx,eax
100396ce:	mov    eax,DWORD PTR [esp+0x18]
100396d2:	xor    ebp,edx
100396d4:	add    DWORD PTR [ecx+edi*4-0x4],ebp
100396d8:	test   eax,eax
100396da:	mov    esi,DWORD PTR [ecx+edi*4-0x4]
100396de:	jg     0x10039620
100396e4:	pop    edi
100396e5:	pop    esi
100396e6:	pop    ebp
100396e7:	xor    eax,eax
100396e9:	pop    ebx
100396ea:	add    esp,0xc
100396ed:	ret    
100396ee:	cmp    edi,0xffffffff
100396f1:	jge    0x100397de
100396f7:	mov    eax,0x34
100396fc:	cdq    
100396fd:	neg    edi
100396ff:	idiv   edi
10039701:	mov    DWORD PTR [esp+0x20],edi
10039705:	add    eax,0x6
10039708:	imul   eax,eax,0x9e3779b9
1003970e:	test   eax,eax
10039710:	mov    DWORD PTR [esp+0x14],eax
10039714:	je     0x100397d4
1003971a:	lea    ebx,[ebx+0x0]
10039720:	mov    edx,eax
10039722:	shr    edx,0x2
10039725:	and    edx,0x3
10039728:	mov    DWORD PTR [esp+0x10],edx
1003972c:	lea    edx,[edi-0x1]
1003972f:	test   edx,edx
10039731:	jle    0x10039785
10039733:	mov    edi,DWORD PTR [ecx+edx*4-0x4]
10039737:	mov    eax,edi
10039739:	shl    eax,0x4
1003973c:	mov    ebx,esi
1003973e:	shr    ebx,0x3
10039741:	xor    ebx,eax
10039743:	mov    eax,edi
10039745:	shr    eax,0x5
10039748:	lea    ebp,[esi*4+0x0]
1003974f:	xor    eax,ebp
10039751:	mov    ebp,DWORD PTR [esp+0x24]
10039755:	add    ebx,eax
10039757:	mov    eax,edx
10039759:	and    eax,0x3
1003975c:	xor    eax,DWORD PTR [esp+0x10]
10039760:	sub    edx,0x1
10039763:	mov    ebp,DWORD PTR [ebp+eax*4+0x0]
10039767:	mov    eax,DWORD PTR [esp+0x14]
1003976b:	xor    ebp,edi
1003976d:	mov    edi,eax
1003976f:	xor    edi,esi
10039771:	add    ebp,edi
10039773:	xor    ebx,ebp
10039775:	sub    DWORD PTR [ecx+edx*4+0x4],ebx
10039779:	test   edx,edx
1003977b:	mov    esi,DWORD PTR [ecx+edx*4+0x4]
1003977f:	jg     0x10039733
10039781:	mov    edi,DWORD PTR [esp+0x20]
10039785:	mov    edi,DWORD PTR [ecx+edi*4-0x4]
10039789:	mov    ebp,edi
1003978b:	shl    ebp,0x4
1003978e:	mov    ebx,esi
10039790:	shr    ebx,0x3
10039793:	xor    ebx,ebp
10039795:	shr    edi,0x5
10039798:	lea    ebp,[esi*4+0x0]
1003979f:	xor    edi,ebp
100397a1:	and    edx,0x3
100397a4:	xor    edx,DWORD PTR [esp+0x10]
100397a8:	add    ebx,edi
100397aa:	mov    edi,DWORD PTR [esp+0x24]
100397ae:	mov    edx,DWORD PTR [edi+edx*4]
100397b1:	mov    edi,DWORD PTR [esp+0x20]
100397b5:	xor    edx,DWORD PTR [ecx+edi*4-0x4]
100397b9:	mov    ebp,eax
100397bb:	xor    ebp,esi
100397bd:	add    edx,ebp
100397bf:	xor    ebx,edx
100397c1:	sub    DWORD PTR [ecx],ebx
100397c3:	mov    esi,DWORD PTR [ecx]
100397c5:	add    eax,0x61c88647
100397ca:	mov    DWORD PTR [esp+0x14],eax
100397ce:	jne    0x10039720
100397d4:	pop    edi
100397d5:	pop    esi
100397d6:	pop    ebp
100397d7:	xor    eax,eax
100397d9:	pop    ebx
100397da:	add    esp,0xc
100397dd:	ret    
100397de:	pop    edi
100397df:	pop    esi
100397e0:	pop    ebp
100397e1:	mov    eax,0x1
100397e6:	pop    ebx
100397e7:	add    esp,0xc
100397ea:	ret    
100397eb:	int3   
100397ec:	int3   
100397ed:	int3   
100397ee:	int3   
100397ef:	int3   
100397f0:	push   0xffffffff
100397f2:	push   0x10060058
100397f7:	mov    eax,fs:0x0
100397fd:	push   eax
100397fe:	sub    esp,0x2c
10039801:	mov    eax,ds:0x1007e030
10039806:	xor    eax,esp
10039808:	mov    DWORD PTR [esp+0x24],eax
1003980c:	push   ebx
1003980d:	push   ebp
1003980e:	push   esi
1003980f:	mov    eax,ds:0x1007e030
10039814:	xor    eax,esp
10039816:	push   eax
10039817:	lea    eax,[esp+0x3c]
1003981b:	mov    fs:0x0,eax
10039821:	mov    bl,cl
10039823:	mov    esi,DWORD PTR [esp+0x4c]
10039827:	mov    ebp,DWORD PTR [esp+0x54]
1003982b:	xor    eax,eax
1003982d:	mov    DWORD PTR [esp+0x14],eax
10039831:	mov    DWORD PTR [esp+0x1c],edx
10039835:	mov    DWORD PTR [esp+0x20],ebp
10039839:	mov    DWORD PTR [esp+0x14],eax
1003983d:	test   bl,bl
1003983f:	mov    DWORD PTR [esp+0x44],eax
10039843:	je     0x10039889
10039845:	mov    DWORD PTR [esp+0x18],eax
10039849:	mov    ecx,esi
1003984b:	lea    eax,[esp+0x18]
1003984f:	lea    esi,[esp+0x1c]
10039853:	call   0x1002fa40
10039858:	mov    ecx,DWORD PTR [eax]
1003985a:	mov    esi,ecx
1003985c:	test   esi,esi
1003985e:	mov    DWORD PTR [eax],0x0
10039864:	je     0x10039870
10039866:	push   0x0
10039868:	call   0x100430d2
1003986d:	add    esp,0x4
10039870:	mov    edx,DWORD PTR [esp+0x1c]
10039874:	push   edx
10039875:	mov    DWORD PTR [esp+0x18],esi
10039879:	call   0x100430d2
1003987e:	mov    DWORD PTR [esp+0x20],esi
10039882:	mov    esi,DWORD PTR [esp+0x1c]
10039886:	add    esp,0x4
10039889:	lea    eax,[esi+0x3]
1003988c:	and    eax,0xfffffffc
1003988f:	add    eax,0x8
10039892:	mov    DWORD PTR [esp+0x18],eax
10039896:	add    eax,0x10
10039899:	push   eax
1003989a:	mov    DWORD PTR [ebp+0x0],eax
1003989d:	call   0x100439b6
100398a2:	add    esp,0x4
100398a5:	mov    DWORD PTR [edi],eax
100398a7:	call   DWORD PTR ds:0x10066118
100398ad:	push   eax
100398ae:	call   0x100466aa
100398b3:	add    esp,0x4
100398b6:	xor    ebp,ebp
100398b8:	call   0x100466b7
100398bd:	cdq    
100398be:	mov    ecx,0xff
100398c3:	idiv   ecx
100398c5:	add    ebp,0x1
100398c8:	cmp    ebp,0x10
100398cb:	mov    BYTE PTR [esp+ebp*1+0x23],dl
100398cf:	jne    0x100398b8
100398d1:	mov    eax,DWORD PTR [edi]
100398d3:	mov    edx,DWORD PTR [esp+0x24]
100398d7:	mov    ecx,DWORD PTR [esp+0x28]
100398db:	mov    DWORD PTR [eax],edx
100398dd:	mov    edx,DWORD PTR [esp+0x2c]
100398e1:	mov    DWORD PTR [eax+0x4],ecx
100398e4:	mov    ecx,DWORD PTR [esp+0x30]
100398e8:	mov    DWORD PTR [eax+0x8],edx
100398eb:	mov    edx,DWORD PTR [esp+0x1c]
100398ef:	mov    DWORD PTR [eax+0xc],ecx
100398f2:	add    eax,ebp
100398f4:	neg    bl
100398f6:	push   esi
100398f7:	push   edx
100398f8:	sbb    ebx,ebx
100398fa:	and    ebx,0xfffffbff
10039900:	add    ebx,0x4b4f5444
10039906:	mov    DWORD PTR [eax],ebx
10039908:	add    eax,0x4
1003990b:	push   eax
1003990c:	call   0x10045420
10039911:	mov    ecx,DWORD PTR [esp+0x2c]
10039915:	mov    edx,DWORD PTR [ecx]
10039917:	mov    eax,DWORD PTR [edi]
10039919:	lea    eax,[edx+eax*1-0x4]
1003991d:	mov    DWORD PTR [eax],esi
1003991f:	add    esp,0xc
10039922:	xor    eax,eax
10039924:	xor    ecx,ecx
10039926:	jmp    0x10039930
10039928:	lea    esp,[esp+0x0]
1003992f:	nop
10039930:	mov    edx,DWORD PTR [esp+0x50]
10039934:	mov    dl,BYTE PTR [ecx+edx*1]
10039937:	xor    BYTE PTR [esp+eax*1+0x24],dl
1003993b:	add    ecx,0x1
1003993e:	add    eax,0x1
10039941:	and    ecx,0xf
10039944:	cmp    eax,0x10
10039947:	jne    0x10039930
10039949:	mov    ecx,DWORD PTR [edi]
1003994b:	lea    eax,[esp+0x24]
1003994f:	push   eax
10039950:	mov    eax,DWORD PTR [esp+0x1c]
10039954:	cdq    
10039955:	and    edx,0x3
10039958:	add    eax,edx
1003995a:	sar    eax,0x2
1003995d:	push   eax
1003995e:	add    ecx,0x10
10039961:	call   0x100395f0
10039966:	mov    ecx,DWORD PTR [esp+0x1c]
1003996a:	push   ecx
1003996b:	call   0x100430d2
10039970:	add    esp,0xc
10039973:	mov    eax,edi
10039975:	mov    ecx,DWORD PTR [esp+0x3c]
10039979:	mov    DWORD PTR fs:0x0,ecx
10039980:	pop    ecx
10039981:	pop    esi
10039982:	pop    ebp
10039983:	pop    ebx
10039984:	mov    ecx,DWORD PTR [esp+0x24]
10039988:	xor    ecx,esp
1003998a:	call   0x100430d7
1003998f:	add    esp,0x38
10039992:	ret    
10039993:	int3   
10039994:	int3   
10039995:	int3   
10039996:	int3   
10039997:	int3   
10039998:	int3   
10039999:	int3   
1003999a:	int3   
1003999b:	int3   
1003999c:	int3   
1003999d:	int3   
1003999e:	int3   
1003999f:	int3   
100399a0:	push   0xffffffff
100399a2:	push   0x10063370
100399a7:	mov    eax,fs:0x0
100399ad:	push   eax
100399ae:	sub    esp,0x30
100399b1:	mov    eax,ds:0x1007e030
100399b6:	xor    eax,esp
100399b8:	mov    DWORD PTR [esp+0x28],eax
100399bc:	push   ebx
100399bd:	push   ebp
100399be:	push   esi
100399bf:	push   edi
100399c0:	mov    eax,ds:0x1007e030
100399c5:	xor    eax,esp
100399c7:	push   eax
100399c8:	lea    eax,[esp+0x44]
100399cc:	mov    fs:0x0,eax
100399d2:	mov    edi,DWORD PTR [esp+0x60]
100399d6:	mov    eax,DWORD PTR [esp+0x5c]
100399da:	mov    ebx,DWORD PTR [esp+0x54]
100399de:	mov    esi,DWORD PTR [esp+0x58]
100399e2:	xor    ebp,ebp
100399e4:	mov    DWORD PTR [esp+0x20],ebp
100399e8:	mov    DWORD PTR [esp+0x18],ebx
100399ec:	mov    DWORD PTR [esp+0x1c],ecx
100399f0:	mov    DWORD PTR [esp+0x14],edx
100399f4:	mov    DWORD PTR [esp+0x24],ebp
100399f8:	cmp    eax,0x18
100399fb:	mov    DWORD PTR [esp+0x4c],ebp
100399ff:	jae    0x10039a1f
10039a01:	call   0x1000205f
10039a06:	push   0x6
10039a08:	call   0x10037b70
10039a0d:	add    esp,0x4
10039a10:	push   ebp
10039a11:	mov    DWORD PTR [ebx],ebp
10039a13:	call   0x100430d2
10039a18:	mov    eax,ebx
10039a1a:	jmp    0x10039cbb
10039a1f:	lea    ebx,[eax-0x10]
10039a22:	push   ebx
10039a23:	call   0x100439b6
10039a28:	mov    ebp,eax
10039a2a:	add    esp,0x4
10039a2d:	mov    DWORD PTR [esp+0x28],ebp
10039a31:	push   ebx
10039a32:	lea    eax,[esi+0x10]
10039a35:	push   eax
10039a36:	push   ebp
10039a37:	mov    BYTE PTR [esp+0x58],0x1
10039a3c:	call   0x10045420
10039a41:	mov    ecx,DWORD PTR [esi]
10039a43:	mov    eax,DWORD PTR [esi+0x8]
10039a46:	mov    edx,DWORD PTR [esi+0x4]
10039a49:	mov    DWORD PTR [esp+0x38],ecx
10039a4d:	mov    ecx,DWORD PTR [esi+0xc]
10039a50:	mov    DWORD PTR [esp+0x40],eax
10039a54:	add    esp,0xc
10039a57:	mov    DWORD PTR [esp+0x38],ecx
10039a5b:	xor    eax,eax
10039a5d:	mov    DWORD PTR [esp+0x30],edx
10039a61:	xor    ecx,ecx
10039a63:	mov    dl,BYTE PTR [ecx+edi*1]
10039a66:	xor    BYTE PTR [esp+eax*1+0x2c],dl
10039a6a:	add    ecx,0x1
10039a6d:	add    eax,0x1
10039a70:	and    ecx,0xf
10039a73:	cmp    eax,0x10
10039a76:	jne    0x10039a63
10039a78:	lea    eax,[esp+0x2c]
10039a7c:	push   eax
10039a7d:	mov    eax,ebx
10039a7f:	cdq    
10039a80:	and    edx,0x3
10039a83:	add    eax,edx
10039a85:	sar    eax,0x2
10039a88:	neg    eax
10039a8a:	push   eax
10039a8b:	mov    ecx,ebp
10039a8d:	call   0x100395f0
10039a92:	mov    ecx,DWORD PTR [esp+0x1c]
10039a96:	mov    BYTE PTR [ecx],0x0
10039a99:	add    esp,0x8
10039a9c:	mov    eax,0x4
10039aa1:	mov    ecx,0x1007f52c
10039aa6:	mov    edx,ebp
10039aa8:	mov    esi,DWORD PTR [edx]
10039aaa:	cmp    esi,DWORD PTR [ecx]
10039aac:	jne    0x10039ac0
10039aae:	sub    eax,0x4
10039ab1:	add    ecx,0x4
10039ab4:	add    edx,0x4
10039ab7:	cmp    eax,0x4
10039aba:	jae    0x10039aa8
10039abc:	test   eax,eax
10039abe:	je     0x10039b1d
10039ac0:	movzx  edi,BYTE PTR [ecx]
10039ac3:	movzx  esi,BYTE PTR [edx]
10039ac6:	sub    esi,edi
10039ac8:	jne    0x10039b0f
10039aca:	sub    eax,0x1
10039acd:	add    ecx,0x1
10039ad0:	add    edx,0x1
10039ad3:	test   eax,eax
10039ad5:	je     0x10039b1d
10039ad7:	movzx  edi,BYTE PTR [ecx]
10039ada:	movzx  esi,BYTE PTR [edx]
10039add:	sub    esi,edi
10039adf:	jne    0x10039b0f
10039ae1:	sub    eax,0x1
10039ae4:	add    ecx,0x1
10039ae7:	add    edx,0x1
10039aea:	test   eax,eax
10039aec:	je     0x10039b1d
10039aee:	movzx  edi,BYTE PTR [ecx]
10039af1:	movzx  esi,BYTE PTR [edx]
10039af4:	sub    esi,edi
10039af6:	jne    0x10039b0f
10039af8:	sub    eax,0x1
10039afb:	add    ecx,0x1
10039afe:	add    edx,0x1
10039b01:	test   eax,eax
10039b03:	je     0x10039b1d
10039b05:	movzx  eax,BYTE PTR [ecx]
10039b08:	movzx  esi,BYTE PTR [edx]
10039b0b:	sub    esi,eax
10039b0d:	je     0x10039b1d
10039b0f:	test   esi,esi
10039b11:	mov    eax,0x1
10039b16:	jg     0x10039b1f
10039b18:	or     eax,0xffffffff
10039b1b:	jmp    0x10039b1f
10039b1d:	xor    eax,eax
10039b1f:	test   eax,eax
10039b21:	jne    0x10039b2f
10039b23:	mov    ecx,DWORD PTR [esp+0x14]
10039b27:	mov    BYTE PTR [ecx],0x1
10039b2a:	jmp    0x10039bbf
10039b2f:	mov    eax,0x4
10039b34:	mov    ecx,0x1007f528
10039b39:	mov    edx,ebp
10039b3b:	jmp    0x10039b40
10039b3d:	lea    ecx,[ecx+0x0]
10039b40:	mov    esi,DWORD PTR [edx]
10039b42:	cmp    esi,DWORD PTR [ecx]
10039b44:	jne    0x10039b58
10039b46:	sub    eax,0x4
10039b49:	add    ecx,0x4
10039b4c:	add    edx,0x4
10039b4f:	cmp    eax,0x4
10039b52:	jae    0x10039b40
10039b54:	test   eax,eax
10039b56:	je     0x10039bb5
10039b58:	movzx  esi,BYTE PTR [edx]
10039b5b:	movzx  edi,BYTE PTR [ecx]
10039b5e:	sub    esi,edi
10039b60:	jne    0x10039ba7
10039b62:	sub    eax,0x1
10039b65:	add    ecx,0x1
10039b68:	add    edx,0x1
10039b6b:	test   eax,eax
10039b6d:	je     0x10039bb5
10039b6f:	movzx  esi,BYTE PTR [edx]
10039b72:	movzx  edi,BYTE PTR [ecx]
10039b75:	sub    esi,edi
10039b77:	jne    0x10039ba7
10039b79:	sub    eax,0x1
10039b7c:	add    ecx,0x1
10039b7f:	add    edx,0x1
10039b82:	test   eax,eax
10039b84:	je     0x10039bb5
10039b86:	movzx  esi,BYTE PTR [edx]
10039b89:	movzx  edi,BYTE PTR [ecx]
10039b8c:	sub    esi,edi
10039b8e:	jne    0x10039ba7
10039b90:	sub    eax,0x1
10039b93:	add    ecx,0x1
10039b96:	add    edx,0x1
10039b99:	test   eax,eax
10039b9b:	je     0x10039bb5
10039b9d:	movzx  esi,BYTE PTR [edx]
10039ba0:	movzx  edx,BYTE PTR [ecx]
10039ba3:	sub    esi,edx
10039ba5:	je     0x10039bb5
10039ba7:	test   esi,esi
10039ba9:	mov    eax,0x1
10039bae:	jg     0x10039bb7
10039bb0:	or     eax,0xffffffff
10039bb3:	jmp    0x10039bb7
10039bb5:	xor    eax,eax
10039bb7:	test   eax,eax
10039bb9:	jne    0x10039c90
10039bbf:	cmp    BYTE PTR [esp+0x64],0x0
10039bc4:	mov    eax,DWORD PTR [ebx+ebp*1-0x4]
10039bc8:	mov    edi,DWORD PTR [esp+0x1c]
10039bcc:	mov    DWORD PTR [edi],eax
10039bce:	jne    0x10039bd5
10039bd0:	add    eax,0xfffffffc
10039bd3:	mov    DWORD PTR [edi],eax
10039bd5:	mov    eax,DWORD PTR [edi]
10039bd7:	lea    ecx,[ebx-0x8]
10039bda:	cmp    eax,ecx
10039bdc:	ja     0x10039c90
10039be2:	add    ebx,0xfffffff5
10039be5:	cmp    eax,ebx
10039be7:	jb     0x10039c90
10039bed:	push   eax
10039bee:	call   0x100439b6
10039bf3:	mov    esi,eax
10039bf5:	add    esp,0x4
10039bf8:	test   esi,esi
10039bfa:	je     0x10039c06
10039bfc:	push   0x0
10039bfe:	call   0x100430d2
10039c03:	add    esp,0x4
10039c06:	mov    edx,DWORD PTR [edi]
10039c08:	push   edx
10039c09:	lea    eax,[ebp+0x4]
10039c0c:	push   eax
10039c0d:	push   esi
10039c0e:	mov    DWORD PTR [esp+0x30],esi
10039c12:	call   0x10045420
10039c17:	mov    ecx,DWORD PTR [esp+0x20]
10039c1b:	add    esp,0xc
10039c1e:	cmp    BYTE PTR [ecx],0x0
10039c21:	je     0x10039c76
10039c23:	mov    eax,DWORD PTR [edi]
10039c25:	lea    edx,[esp+0x14]
10039c29:	push   edx
10039c2a:	push   eax
10039c2b:	lea    ecx,[esp+0x28]
10039c2f:	push   esi
10039c30:	push   ecx
10039c31:	mov    DWORD PTR [esp+0x24],0x0
10039c39:	call   0x1002f670
10039c3e:	mov    edi,DWORD PTR [eax]
10039c40:	mov    DWORD PTR [eax],0x0
10039c46:	mov    edx,DWORD PTR [esp+0x30]
10039c4a:	push   edx
10039c4b:	call   0x100430d2
10039c50:	add    esp,0x14
10039c53:	cmp    edi,esi
10039c55:	je     0x10039c60
10039c57:	push   esi
10039c58:	call   0x100430d2
10039c5d:	add    esp,0x4
10039c60:	mov    eax,DWORD PTR [esp+0x14]
10039c64:	mov    ecx,DWORD PTR [esp+0x1c]
10039c68:	push   0x0
10039c6a:	mov    esi,edi
10039c6c:	mov    DWORD PTR [ecx],eax
10039c6e:	call   0x100430d2
10039c73:	add    esp,0x4
10039c76:	mov    edi,DWORD PTR [esp+0x18]
10039c7a:	push   ebp
10039c7b:	mov    DWORD PTR [edi],esi
10039c7d:	call   0x100430d2
10039c82:	add    esp,0x4
10039c85:	push   0x0
10039c87:	call   0x100430d2
10039c8c:	mov    eax,edi
10039c8e:	jmp    0x10039cbb
10039c90:	call   0x1000205f
10039c95:	push   0x6
10039c97:	call   0x10037b70
10039c9c:	mov    esi,DWORD PTR [esp+0x1c]
10039ca0:	add    esp,0x4
10039ca3:	push   ebp
10039ca4:	mov    DWORD PTR [esi],0x0
10039caa:	call   0x100430d2
10039caf:	add    esp,0x4
10039cb2:	push   0x0
10039cb4:	call   0x100430d2
10039cb9:	mov    eax,esi
10039cbb:	add    esp,0x4
10039cbe:	mov    ecx,DWORD PTR [esp+0x44]
10039cc2:	mov    DWORD PTR fs:0x0,ecx
10039cc9:	pop    ecx
10039cca:	pop    edi
10039ccb:	pop    esi
10039ccc:	pop    ebp
10039ccd:	pop    ebx
10039cce:	mov    ecx,DWORD PTR [esp+0x28]
10039cd2:	xor    ecx,esp
10039cd4:	call   0x100430d7
10039cd9:	add    esp,0x3c
10039cdc:	ret    
10039cdd:	int3   
10039cde:	int3   
10039cdf:	int3   
10039ce0:	push   0xffffffff
10039ce2:	push   0x10061469
10039ce7:	mov    eax,fs:0x0
10039ced:	push   eax
10039cee:	sub    esp,0x18
10039cf1:	mov    eax,ds:0x1007e030
10039cf6:	xor    eax,esp
10039cf8:	mov    DWORD PTR [esp+0x14],eax
10039cfc:	push   ebp
10039cfd:	push   esi
10039cfe:	mov    eax,ds:0x1007e030
10039d03:	xor    eax,esp
10039d05:	push   eax
10039d06:	lea    eax,[esp+0x24]
10039d0a:	mov    fs:0x0,eax
10039d10:	mov    ebp,DWORD PTR [esp+0x34]
10039d14:	xor    eax,eax
10039d16:	mov    DWORD PTR [esp+0xc],eax
10039d1a:	mov    DWORD PTR [edi+0x18],0xf
10039d21:	mov    DWORD PTR [edi+0x14],eax
10039d24:	mov    DWORD PTR [esp+0x10],edi
10039d28:	mov    BYTE PTR [edi+0x4],al
10039d2b:	xor    esi,esi
10039d2d:	cmp    ebx,eax
10039d2f:	mov    DWORD PTR [esp+0x2c],eax
10039d33:	mov    DWORD PTR [esp+0xc],0x1
10039d3b:	je     0x10039d90
10039d3d:	lea    ecx,[ecx+0x0]
10039d40:	movzx  eax,BYTE PTR [esi+ebp*1]
10039d44:	push   eax
10039d45:	push   0x3362b71e
10039d4a:	push   0x100740c4
10039d4f:	call   0x100042d1
10039d54:	push   eax
10039d55:	push   0x4
10039d57:	push   0x10074100
10039d5c:	call   0x100042e3
10039d61:	add    esp,0x14
10039d64:	push   eax
10039d65:	lea    ecx,[esp+0x1c]
10039d69:	push   ecx
10039d6a:	call   0x1005871f
10039d6f:	lea    edx,[esp+0x20]
10039d73:	push   edx
10039d74:	call   0x10043250
10039d79:	add    esp,0x10
10039d7c:	push   eax
10039d7d:	lea    eax,[esp+0x18]
10039d81:	push   eax
10039d82:	mov    eax,edi
10039d84:	call   0x10004d66
10039d89:	add    esi,0x1
10039d8c:	cmp    esi,ebx
10039d8e:	jne    0x10039d40
10039d90:	mov    eax,edi
10039d92:	mov    ecx,DWORD PTR [esp+0x24]
10039d96:	mov    DWORD PTR fs:0x0,ecx
10039d9d:	pop    ecx
10039d9e:	pop    esi
10039d9f:	pop    ebp
10039da0:	mov    ecx,DWORD PTR [esp+0x14]
10039da4:	xor    ecx,esp
10039da6:	call   0x100430d7
10039dab:	add    esp,0x24
10039dae:	ret    
10039daf:	int3   
10039db0:	push   0xffffffff
10039db2:	push   0x1005f8d8
10039db7:	mov    eax,fs:0x0
10039dbd:	push   eax
10039dbe:	sub    esp,0xc
10039dc1:	push   ebx
10039dc2:	push   ebp
10039dc3:	push   esi
10039dc4:	push   edi
10039dc5:	mov    eax,ds:0x1007e030
10039dca:	xor    eax,esp
10039dcc:	push   eax
10039dcd:	lea    eax,[esp+0x20]
10039dd1:	mov    fs:0x0,eax
10039dd7:	mov    ebx,DWORD PTR [esp+0x38]
10039ddb:	xor    edi,edi
10039ddd:	mov    DWORD PTR [esp+0x1c],edi
10039de1:	mov    DWORD PTR [ebx],edi
10039de3:	mov    DWORD PTR [esp+0x1c],edi
10039de7:	mov    esi,DWORD PTR [esp+0x34]
10039deb:	mov    DWORD PTR [esp+0x28],edi
10039def:	mov    eax,DWORD PTR [esi+0x14]
10039df2:	test   al,0x1
10039df4:	je     0x10039dfe
10039df6:	mov    esi,DWORD PTR [esp+0x30]
10039dfa:	mov    DWORD PTR [esi],edi
10039dfc:	jmp    0x10039e32
10039dfe:	shr    eax,1
10039e00:	mov    DWORD PTR [ebx],eax
10039e02:	je     0x10039df6
10039e04:	push   eax
10039e05:	call   0x100439b6
10039e0a:	add    esp,0x4
10039e0d:	cmp    eax,edi
10039e0f:	mov    DWORD PTR [esp+0x1c],eax
10039e13:	je     0x10039e1e
10039e15:	push   edi
10039e16:	call   0x100430d2
10039e1b:	add    esp,0x4
10039e1e:	xor    ebp,ebp
10039e20:	cmp    DWORD PTR [ebx],edi
10039e22:	mov    DWORD PTR [esp+0x18],edi
10039e26:	jne    0x10039e59
10039e28:	mov    esi,DWORD PTR [esp+0x30]
10039e2c:	mov    eax,DWORD PTR [esp+0x1c]
10039e30:	mov    DWORD PTR [esi],eax
10039e32:	push   edi
10039e33:	call   0x100430d2
10039e38:	mov    eax,esi
10039e3a:	add    esp,0x4
10039e3d:	mov    ecx,DWORD PTR [esp+0x20]
10039e41:	mov    DWORD PTR fs:0x0,ecx
10039e48:	pop    ecx
10039e49:	pop    edi
10039e4a:	pop    esi
10039e4b:	pop    ebp
10039e4c:	pop    ebx
10039e4d:	add    esp,0x18
10039e50:	ret    
10039e51:	mov    esi,DWORD PTR [esp+0x34]
10039e55:	mov    edi,DWORD PTR [esp+0x18]
10039e59:	cmp    edi,DWORD PTR [esi+0x14]
10039e5c:	jbe    0x10039e63
10039e5e:	call   0x100435f0
10039e63:	cmp    DWORD PTR [esi+0x18],0x10
10039e67:	jb     0x10039e71
10039e69:	mov    eax,DWORD PTR [esi+0x4]
10039e6c:	add    esi,0x4
10039e6f:	jmp    0x10039e76
10039e71:	add    esi,0x4
10039e74:	mov    eax,esi
10039e76:	mov    bl,BYTE PTR [eax+edi*1]
10039e79:	mov    eax,DWORD PTR [esp+0x34]
10039e7d:	add    edi,0x1
10039e80:	cmp    edi,DWORD PTR [eax+0x14]
10039e83:	jbe    0x10039e8a
10039e85:	call   0x100435f0
10039e8a:	mov    ecx,DWORD PTR [esp+0x34]
10039e8e:	cmp    DWORD PTR [ecx+0x18],0x10
10039e92:	jb     0x10039e96
10039e94:	mov    esi,DWORD PTR [esi]
10039e96:	mov    dl,BYTE PTR [edi+esi*1]
10039e99:	movzx  eax,bl
10039e9c:	push   eax
10039e9d:	mov    BYTE PTR [esp+0x1b],dl
10039ea1:	call   0x1004f57c
10039ea6:	add    esp,0x4
10039ea9:	test   eax,eax
10039eab:	je     0x10039f32
10039eb1:	movzx  ecx,BYTE PTR [esp+0x17]
10039eb6:	push   ecx
10039eb7:	call   0x1004f57c
10039ebc:	add    esp,0x4
10039ebf:	test   eax,eax
10039ec1:	je     0x10039f32
10039ec3:	mov    dl,bl
10039ec5:	sub    dl,0x30
10039ec8:	cmp    dl,0x9
10039ecb:	ja     0x10039ed5
10039ecd:	movsx  ebx,bl
10039ed0:	sub    ebx,0x30
10039ed3:	jmp    0x10039ee6
10039ed5:	movsx  eax,bl
10039ed8:	push   eax
10039ed9:	call   0x10059007
10039ede:	mov    ebx,eax
10039ee0:	add    esp,0x4
10039ee3:	sub    ebx,0x37
10039ee6:	mov    al,BYTE PTR [esp+0x17]
10039eea:	mov    cl,al
10039eec:	sub    cl,0x30
10039eef:	cmp    cl,0x9
10039ef2:	ja     0x10039efc
10039ef4:	movsx  eax,al
10039ef7:	sub    eax,0x30
10039efa:	jmp    0x10039f0b
10039efc:	movsx  edx,al
10039eff:	push   edx
10039f00:	call   0x10059007
10039f05:	add    esp,0x4
10039f08:	sub    eax,0x37
10039f0b:	mov    ecx,DWORD PTR [esp+0x38]
10039f0f:	add    DWORD PTR [esp+0x18],0x2
10039f14:	shl    bl,0x4
10039f17:	add    bl,al
10039f19:	mov    eax,DWORD PTR [esp+0x1c]
10039f1d:	mov    BYTE PTR [eax+ebp*1],bl
10039f20:	add    ebp,0x1
10039f23:	cmp    ebp,DWORD PTR [ecx]
10039f25:	jne    0x10039e51
10039f2b:	xor    edi,edi
10039f2d:	jmp    0x10039e28
10039f32:	mov    eax,DWORD PTR [esp+0x1c]
10039f36:	test   eax,eax
10039f38:	mov    edx,DWORD PTR [esp+0x38]
10039f3c:	mov    DWORD PTR [edx],0x0
10039f42:	je     0x10039f4d
10039f44:	push   eax
10039f45:	call   0x100430d2
10039f4a:	add    esp,0x4
10039f4d:	mov    esi,DWORD PTR [esp+0x30]
10039f51:	mov    DWORD PTR [esi],0x0
10039f57:	push   0x0
10039f59:	jmp    0x10039e33
10039f5e:	int3   
10039f5f:	int3   
10039f60:	push   0xffffffff
10039f62:	push   0x10062690
10039f67:	mov    eax,fs:0x0
10039f6d:	push   eax
10039f6e:	sub    esp,0x10
10039f71:	push   ebx
10039f72:	push   ebp
10039f73:	push   esi
10039f74:	push   edi
10039f75:	mov    eax,ds:0x1007e030
10039f7a:	xor    eax,esp
10039f7c:	push   eax
10039f7d:	lea    eax,[esp+0x24]
10039f81:	mov    fs:0x0,eax
10039f87:	mov    ebx,ecx
10039f89:	mov    DWORD PTR [esp+0x18],0x0
10039f91:	mov    edi,DWORD PTR [ebx+0x14]
10039f94:	lea    ebp,[edi+0x4]
10039f97:	push   ebp
10039f98:	call   0x100439b6
10039f9d:	mov    esi,eax
10039f9f:	add    esp,0x4
10039fa2:	mov    DWORD PTR [esp+0x1c],esi
10039fa6:	mov    DWORD PTR [esp+0x2c],0x0
10039fae:	mov    DWORD PTR [esi],edi
10039fb0:	cmp    DWORD PTR [ebx+0x18],0x10
10039fb4:	jb     0x10039fbb
10039fb6:	mov    ebx,DWORD PTR [ebx+0x4]
10039fb9:	jmp    0x10039fbe
10039fbb:	add    ebx,0x4
10039fbe:	push   edi
10039fbf:	lea    eax,[esi+0x4]
10039fc2:	push   ebx
10039fc3:	push   eax
10039fc4:	call   0x10045420
10039fc9:	mov    edx,DWORD PTR [esp+0x44]
10039fcd:	add    esp,0xc
10039fd0:	lea    ecx,[esp+0x18]
10039fd4:	push   ecx
10039fd5:	mov    cl,BYTE PTR [esp+0x40]
10039fd9:	push   edx
10039fda:	push   ebp
10039fdb:	mov    edx,esi
10039fdd:	lea    edi,[esp+0x20]
10039fe1:	call   0x100397f0
10039fe6:	mov    ecx,DWORD PTR [eax]
10039fe8:	mov    ebp,ecx
10039fea:	add    esp,0xc
10039fed:	mov    DWORD PTR [eax],0x0
10039ff3:	mov    DWORD PTR [esp+0x20],ebp
10039ff7:	mov    BYTE PTR [esp+0x2c],0x1
10039ffc:	mov    edx,DWORD PTR [esp+0x14]
1003a000:	push   edx
1003a001:	call   0x100430d2
1003a006:	mov    edi,DWORD PTR [esp+0x38]
1003a00a:	add    esp,0x4
1003a00d:	test   ebp,ebp
1003a00f:	jne    0x1003a03c
1003a011:	mov    DWORD PTR [edi+0x18],0xf
1003a018:	mov    DWORD PTR [edi+0x14],ebp
1003a01b:	push   0x1006cd08
1003a020:	mov    BYTE PTR [edi+0x4],0x0
1003a024:	call   0x10043250
1003a029:	add    esp,0x4
1003a02c:	push   eax
1003a02d:	push   0x1006cd08
1003a032:	mov    ecx,edi
1003a034:	call   0x1000133f
1003a039:	push   ebp
1003a03a:	jmp    0x1003a04a
1003a03c:	mov    ebx,DWORD PTR [esp+0x18]
1003a040:	push   ebp
1003a041:	call   0x10039ce0
1003a046:	add    esp,0x4
1003a049:	push   ebp
1003a04a:	call   0x100430d2
1003a04f:	add    esp,0x4
1003a052:	push   esi
1003a053:	call   0x100430d2
1003a058:	mov    eax,edi
1003a05a:	add    esp,0x4
1003a05d:	mov    ecx,DWORD PTR [esp+0x24]
1003a061:	mov    DWORD PTR fs:0x0,ecx
1003a068:	pop    ecx
1003a069:	pop    edi
1003a06a:	pop    esi
1003a06b:	pop    ebp
1003a06c:	pop    ebx
1003a06d:	add    esp,0x1c
1003a070:	ret    
1003a071:	int3   
1003a072:	int3   
1003a073:	int3   
1003a074:	int3   
1003a075:	int3   
1003a076:	int3   
1003a077:	int3   
1003a078:	int3   
1003a079:	int3   
1003a07a:	int3   
1003a07b:	int3   
1003a07c:	int3   
1003a07d:	int3   
1003a07e:	int3   
1003a07f:	int3   
1003a080:	mov    ecx,DWORD PTR [eax]
1003a082:	push   ecx
1003a083:	call   DWORD PTR ds:0x100660ec
1003a089:	ret    
1003a08a:	int3   
1003a08b:	int3   
1003a08c:	int3   
1003a08d:	int3   
1003a08e:	int3   
1003a08f:	int3   
1003a090:	push   edi
1003a091:	push   0xffffffff
1003a093:	push   0x0
1003a095:	push   eax
1003a096:	mov    edi,ecx
1003a098:	call   0x10001245
1003a09d:	test   esi,esi
1003a09f:	jne    0x1003a0ba
1003a0a1:	mov    ecx,DWORD PTR ds:0x10080fa4
1003a0a7:	mov    DWORD PTR [edi+0x1c],ecx
1003a0aa:	mov    edx,DWORD PTR ds:0x10080fa8
1003a0b0:	mov    DWORD PTR [edi+0x20],edx
1003a0b3:	mov    eax,ds:0x10080fac
1003a0b8:	jmp    0x1003a0c8
1003a0ba:	mov    ecx,DWORD PTR [esi]
1003a0bc:	mov    DWORD PTR [edi+0x1c],ecx
1003a0bf:	mov    edx,DWORD PTR [esi+0x4]
1003a0c2:	mov    DWORD PTR [edi+0x20],edx
1003a0c5:	mov    eax,DWORD PTR [esi+0x8]
1003a0c8:	push   0x0
1003a0ca:	mov    DWORD PTR [edi+0x24],eax
1003a0cd:	mov    DWORD PTR [edi+0x30],0x1007f704
1003a0d4:	mov    DWORD PTR [edi+0x28],0x0
1003a0db:	mov    DWORD PTR [edi+0x2c],0x0
1003a0e2:	call   0x1003a1e0
1003a0e7:	test   eax,eax
1003a0e9:	mov    DWORD PTR [edi+0x2c],eax
1003a0ec:	je     0x1003a0f8
1003a0ee:	push   0x2
1003a0f0:	call   0x1003a1e0
1003a0f5:	mov    DWORD PTR [edi+0x28],eax
1003a0f8:	pop    edi
1003a0f9:	ret    
1003a0fa:	int3   
1003a0fb:	int3   
1003a0fc:	int3   
1003a0fd:	int3   
1003a0fe:	int3   
1003a0ff:	int3   
1003a100:	push   esi
1003a101:	mov    esi,eax
1003a103:	mov    eax,DWORD PTR [esi+0x28]
1003a106:	test   eax,eax
1003a108:	je     0x1003a114
1003a10a:	push   eax
1003a10b:	call   DWORD PTR ds:0x1007f4fc
1003a111:	add    esp,0x4
1003a114:	mov    eax,DWORD PTR [esi+0x2c]
1003a117:	test   eax,eax
1003a119:	je     0x1003a125
1003a11b:	push   eax
1003a11c:	call   DWORD PTR ds:0x1007f4fc
1003a122:	add    esp,0x4
1003a125:	mov    esi,DWORD PTR [esi+0x30]
1003a128:	cmp    esi,0x1007f704
1003a12e:	je     0x1003a161
1003a130:	test   esi,esi
1003a132:	je     0x1003a161
1003a134:	cmp    DWORD PTR [esi+0x18],0x10
1003a138:	jb     0x1003a146
1003a13a:	mov    eax,DWORD PTR [esi+0x4]
1003a13d:	push   eax
1003a13e:	call   0x100430d2
1003a143:	add    esp,0x4
1003a146:	mov    DWORD PTR [esi+0x18],0xf
1003a14d:	mov    DWORD PTR [esi+0x14],0x0
1003a154:	push   esi
1003a155:	mov    BYTE PTR [esi+0x4],0x0
1003a159:	call   0x100430d2
1003a15e:	add    esp,0x4
1003a161:	pop    esi
1003a162:	ret    
1003a163:	int3   
1003a164:	int3   
1003a165:	int3   
1003a166:	int3   
1003a167:	int3   
1003a168:	int3   
1003a169:	int3   
1003a16a:	int3   
1003a16b:	int3   
1003a16c:	int3   
1003a16d:	int3   
1003a16e:	int3   
1003a16f:	int3   
1003a170:	push   0xffffffff
1003a172:	push   0x10060028
1003a177:	mov    eax,fs:0x0
1003a17d:	push   eax
1003a17e:	push   esi
1003a17f:	mov    eax,ds:0x1007e030
1003a184:	xor    eax,esp
1003a186:	push   eax
1003a187:	lea    eax,[esp+0x8]
1003a18b:	mov    fs:0x0,eax
1003a191:	mov    esi,DWORD PTR [esp+0x18]
1003a195:	mov    eax,esi
1003a197:	mov    DWORD PTR [esp+0x10],0x0
1003a19f:	call   0x1003a100
1003a1a4:	cmp    DWORD PTR [esi+0x18],0x10
1003a1a8:	jb     0x1003a1b6
1003a1aa:	mov    eax,DWORD PTR [esi+0x4]
1003a1ad:	push   eax
1003a1ae:	call   0x100430d2
1003a1b3:	add    esp,0x4
1003a1b6:	mov    DWORD PTR [esi+0x18],0xf
1003a1bd:	mov    DWORD PTR [esi+0x14],0x0
1003a1c4:	mov    BYTE PTR [esi+0x4],0x0
1003a1c8:	mov    ecx,DWORD PTR [esp+0x8]
1003a1cc:	mov    DWORD PTR fs:0x0,ecx
1003a1d3:	pop    ecx
1003a1d4:	pop    esi
1003a1d5:	add    esp,0xc
1003a1d8:	ret    0x4
1003a1db:	int3   
1003a1dc:	int3   
1003a1dd:	int3   
1003a1de:	int3   
1003a1df:	int3   
1003a1e0:	push   0xffffffff
1003a1e2:	push   0x10060993
1003a1e7:	mov    eax,fs:0x0
1003a1ed:	push   eax
1003a1ee:	sub    esp,0x2c
1003a1f1:	mov    eax,ds:0x1007e030
1003a1f6:	xor    eax,esp
1003a1f8:	mov    DWORD PTR [esp+0x28],eax
1003a1fc:	push   ebx
1003a1fd:	push   ebp
1003a1fe:	push   esi
1003a1ff:	mov    eax,ds:0x1007e030
1003a204:	xor    eax,esp
1003a206:	push   eax
1003a207:	lea    eax,[esp+0x3c]
1003a20b:	mov    fs:0x0,eax
1003a211:	mov    ebp,DWORD PTR [edi+0x24]
1003a214:	xor    ebx,ebx
1003a216:	cmp    DWORD PTR [esp+0x4c],0x2
1003a21b:	je     0x1003a244
1003a21d:	cmp    DWORD PTR [edi+0x18],0x10
1003a221:	jb     0x1003a228
1003a223:	mov    edx,DWORD PTR [edi+0x4]
1003a226:	jmp    0x1003a22b
1003a228:	lea    edx,[edi+0x4]
1003a22b:	lea    eax,[esp+0x14]
1003a22f:	push   eax
1003a230:	push   ebp
1003a231:	lea    ecx,[esp+0x20]
1003a235:	call   0x100426a0
1003a23a:	add    esp,0x8
1003a23d:	mov    ebp,eax
1003a23f:	jmp    0x1003a2de
1003a244:	push   0x10074224
1003a249:	mov    DWORD PTR [esp+0x38],0xf
1003a251:	mov    DWORD PTR [esp+0x34],ebx
1003a255:	mov    BYTE PTR [esp+0x24],bl
1003a259:	call   0x10043250
1003a25e:	add    esp,0x4
1003a261:	push   eax
1003a262:	push   0x10074224
1003a267:	lea    ecx,[esp+0x24]
1003a26b:	call   0x1000133f
1003a270:	push   0xffffffff
1003a272:	push   ebx
1003a273:	mov    eax,edi
1003a275:	lea    esi,[esp+0x24]
1003a279:	mov    DWORD PTR [esp+0x4c],ebx
1003a27d:	call   0x10004cc2
1003a282:	push   0x10074228
1003a287:	call   0x10043250
1003a28c:	add    esp,0x4
1003a28f:	push   eax
1003a290:	push   0x10074228
1003a295:	mov    eax,esi
1003a297:	call   0x10004d66
1003a29c:	mov    edx,DWORD PTR [esp+0x20]
1003a2a0:	mov    esi,0x10
1003a2a5:	cmp    DWORD PTR [esp+0x34],esi
1003a2a9:	jae    0x1003a2af
1003a2ab:	lea    edx,[esp+0x20]
1003a2af:	lea    ecx,[esp+0x14]
1003a2b3:	push   ecx
1003a2b4:	push   ebp
1003a2b5:	lea    ecx,[esp+0x20]
1003a2b9:	call   0x100426a0
1003a2be:	add    esp,0x8
1003a2c1:	mov    DWORD PTR [esp+0x44],0xffffffff
1003a2c9:	cmp    DWORD PTR [esp+0x34],esi
1003a2cd:	mov    ebp,eax
1003a2cf:	jb     0x1003a2de
1003a2d1:	mov    edx,DWORD PTR [esp+0x20]
1003a2d5:	push   edx
1003a2d6:	call   0x100430d2
1003a2db:	add    esp,0x4
1003a2de:	cmp    ebp,ebx
1003a2e0:	jne    0x1003a331
1003a2e2:	cmp    DWORD PTR [edi+0x30],0x1007f704
1003a2e9:	jne    0x1003a331
1003a2eb:	push   0x1c
1003a2ed:	call   0x100436de
1003a2f2:	mov    esi,eax
1003a2f4:	add    esp,0x4
1003a2f7:	mov    DWORD PTR [esp+0x14],esi
1003a2fb:	cmp    esi,ebx
1003a2fd:	mov    DWORD PTR [esp+0x44],0x1
1003a305:	je     0x1003a32c
1003a307:	mov    DWORD PTR [esi+0x14],ebx
1003a30a:	mov    DWORD PTR [esi+0x18],0xf
1003a311:	mov    BYTE PTR [esi+0x4],bl
1003a314:	mov    ebx,DWORD PTR [esp+0x18]
1003a318:	push   ebx
1003a319:	call   0x10043250
1003a31e:	add    esp,0x4
1003a321:	push   eax
1003a322:	push   ebx
1003a323:	mov    ecx,esi
1003a325:	call   0x1000133f
1003a32a:	jmp    0x1003a32e
1003a32c:	xor    esi,esi
1003a32e:	mov    DWORD PTR [edi+0x30],esi
1003a331:	mov    eax,ebp
1003a333:	mov    ecx,DWORD PTR [esp+0x3c]
1003a337:	mov    DWORD PTR fs:0x0,ecx
1003a33e:	pop    ecx
1003a33f:	pop    esi
1003a340:	pop    ebp
1003a341:	pop    ebx
1003a342:	mov    ecx,DWORD PTR [esp+0x28]
1003a346:	xor    ecx,esp
1003a348:	call   0x100430d7
1003a34d:	add    esp,0x38
1003a350:	ret    0x4
1003a353:	int3   
1003a354:	int3   
1003a355:	int3   
1003a356:	int3   
1003a357:	int3   
1003a358:	int3   
1003a359:	int3   
1003a35a:	int3   
1003a35b:	int3   
1003a35c:	int3   
1003a35d:	int3   
1003a35e:	int3   
1003a35f:	int3   
1003a360:	sub    esp,0x11c
1003a366:	lea    eax,[esp+0x48]
1003a36a:	push   eax
1003a36b:	mov    eax,DWORD PTR [esp+0x128]
1003a372:	push   0x0
1003a374:	lea    ecx,[esp+0x10]
1003a378:	push   ecx
1003a379:	lea    edx,[esp+0x10]
1003a37d:	push   edx
1003a37e:	push   eax
1003a37f:	mov    eax,DWORD PTR [esp+0x134]
1003a386:	call   0x1003a440
1003a38b:	add    esp,0x11c
1003a391:	ret    0x8
1003a394:	int3   
1003a395:	int3   
1003a396:	int3   
1003a397:	int3   
1003a398:	int3   
1003a399:	int3   
1003a39a:	int3   
1003a39b:	int3   
1003a39c:	int3   
1003a39d:	int3   
1003a39e:	int3   
1003a39f:	int3   
1003a3a0:	push   ebp
1003a3a1:	mov    ebp,esp
1003a3a3:	and    esp,0xfffffff8
1003a3a6:	sub    esp,0x18
1003a3a9:	push   esi
1003a3aa:	mov    esi,DWORD PTR [eax+0x2c]
1003a3ad:	push   edi
1003a3ae:	xor    edi,edi
1003a3b0:	cmp    esi,edi
1003a3b2:	jne    0x1003a3be
1003a3b4:	xor    eax,eax
1003a3b6:	pop    edi
1003a3b7:	pop    esi
1003a3b8:	mov    esp,ebp
1003a3ba:	pop    ebp
1003a3bb:	ret    0x4
1003a3be:	mov    ecx,DWORD PTR [eax+0x1c]
1003a3c1:	cmp    ecx,edi
1003a3c3:	mov    DWORD PTR [esp+0x8],edi
1003a3c7:	mov    DWORD PTR [esp+0xc],edi
1003a3cb:	mov    DWORD PTR [esp+0x10],edi
1003a3cf:	mov    DWORD PTR [esp+0x14],edi
1003a3d3:	mov    DWORD PTR [esp+0x18],edi
1003a3d7:	mov    DWORD PTR [esp+0x1c],edi
1003a3db:	jle    0x1003a3e9
1003a3dd:	mov    DWORD PTR [esp+0x8],0x2
1003a3e5:	mov    DWORD PTR [esp+0x10],ecx
1003a3e9:	mov    eax,DWORD PTR [eax+0x20]
1003a3ec:	cmp    eax,edi
1003a3ee:	jle    0x1003a3f9
1003a3f0:	or     DWORD PTR [esp+0x8],0x10
1003a3f5:	mov    DWORD PTR [esp+0x1c],eax
1003a3f9:	mov    edx,DWORD PTR [ebx]
1003a3fb:	cmp    edx,edi
1003a3fd:	jne    0x1003a404
1003a3ff:	mov    edx,0x1006cd08
1003a404:	mov    ecx,DWORD PTR [ebp+0x8]
1003a407:	mov    eax,DWORD PTR [ebx+0x4]
1003a40a:	push   ecx
1003a40b:	push   eax
1003a40c:	lea    eax,[esp+0x10]
1003a410:	push   eax
1003a411:	push   esi
1003a412:	xor    ecx,ecx
1003a414:	call   0x1003d410
1003a419:	add    esp,0x10
1003a41c:	cmp    eax,0xffffffff
1003a41f:	je     0x1003a3b4
1003a421:	cmp    eax,edi
1003a423:	jl     0x1003a3b4
1003a425:	jne    0x1003a42c
1003a427:	mov    eax,0x19
1003a42c:	pop    edi
1003a42d:	pop    esi
1003a42e:	mov    esp,ebp
1003a430:	pop    ebp
1003a431:	ret    0x4
1003a434:	int3   
1003a435:	int3   
1003a436:	int3   
1003a437:	int3   
1003a438:	int3   
1003a439:	int3   
1003a43a:	int3   
1003a43b:	int3   
1003a43c:	int3   
1003a43d:	int3   
1003a43e:	int3   
1003a43f:	int3   
1003a440:	push   ebx
1003a441:	mov    ebx,DWORD PTR [esp+0x8]
1003a445:	push   ebp
1003a446:	mov    ebp,DWORD PTR [esp+0x1c]
1003a44a:	push   esi
1003a44b:	push   edi
1003a44c:	push   ebp
1003a44d:	mov    esi,eax
1003a44f:	call   0x1003a3a0
1003a454:	test   eax,eax
1003a456:	jne    0x1003a461
1003a458:	xor    al,al
1003a45a:	pop    edi
1003a45b:	pop    esi
1003a45c:	pop    ebp
1003a45d:	pop    ebx
1003a45e:	ret    0x14
1003a461:	mov    ebx,DWORD PTR [esp+0x20]
1003a465:	test   ebx,ebx
1003a467:	mov    eax,DWORD PTR [ebp+0x4]
1003a46a:	mov    ecx,DWORD PTR [esp+0x18]
1003a46e:	mov    DWORD PTR [ecx],eax
1003a470:	je     0x1003a4d2
1003a472:	cmp    DWORD PTR [esp+0x1c],0x0
1003a477:	je     0x1003a4d2
1003a479:	mov    edx,DWORD PTR [esi+0x2c]
1003a47c:	test   edx,edx
1003a47e:	jne    0x1003a485
1003a480:	or     eax,0xffffffff
1003a483:	jmp    0x1003a492
1003a485:	lea    esi,[esp+0x24]
1003a489:	call   0x10042d50
1003a48e:	mov    eax,DWORD PTR [esp+0x24]
1003a492:	cmp    eax,ebx
1003a494:	jl     0x1003a458
1003a496:	xor    edi,edi
1003a498:	test   ebx,ebx
1003a49a:	jle    0x1003a4d2
1003a49c:	lea    esi,[ebp+0xc]
1003a49f:	mov    edx,DWORD PTR [esp+0x14]
1003a4a3:	mov    ebx,DWORD PTR [edx]
1003a4a5:	mov    edx,DWORD PTR [esp+0x1c]
1003a4a9:	mov    edx,DWORD PTR [edx+edi*4]
1003a4ac:	mov    ecx,DWORD PTR [esi-0x4]
1003a4af:	mov    eax,DWORD PTR [esi]
1003a4b1:	mov    ebp,DWORD PTR [edx]
1003a4b3:	sub    eax,ecx
1003a4b5:	push   ebp
1003a4b6:	push   eax
1003a4b7:	mov    eax,DWORD PTR [edx+0x4]
1003a4ba:	add    ebx,ecx
1003a4bc:	push   ebx
1003a4bd:	call   eax
1003a4bf:	add    esp,0xc
1003a4c2:	test   al,al
1003a4c4:	je     0x1003a458
1003a4c6:	add    edi,0x1
1003a4c9:	add    esi,0x8
1003a4cc:	cmp    edi,DWORD PTR [esp+0x20]
1003a4d0:	jl     0x1003a49f
1003a4d2:	pop    edi
1003a4d3:	pop    esi
1003a4d4:	pop    ebp
1003a4d5:	mov    al,0x1
1003a4d7:	pop    ebx
1003a4d8:	ret    0x14
1003a4db:	int3   
1003a4dc:	int3   
1003a4dd:	int3   
1003a4de:	int3   
1003a4df:	int3   
1003a4e0:	xor    eax,eax
1003a4e2:	cmp    DWORD PTR [esp+0xc],eax
1003a4e6:	sete   al
1003a4e9:	ret    
1003a4ea:	int3   
1003a4eb:	int3   
1003a4ec:	int3   
1003a4ed:	int3   
1003a4ee:	int3   
1003a4ef:	int3   
1003a4f0:	push   esi
1003a4f1:	mov    esi,eax
1003a4f3:	mov    eax,DWORD PTR [ecx+0xc]
1003a4f6:	mov    eax,DWORD PTR [eax+edx*4]
1003a4f9:	mov    edx,DWORD PTR [ecx+0x5c]
1003a4fc:	add    eax,DWORD PTR [ecx+0x58]
1003a4ff:	push   edi
1003a500:	mov    edi,DWORD PTR [esp+0xc]
1003a504:	sub    edx,edi
1003a506:	cmp    esi,edx
1003a508:	jle    0x1003a50f
1003a50a:	pop    edi
1003a50b:	xor    eax,eax
1003a50d:	pop    esi
1003a50e:	ret    
1003a50f:	test   BYTE PTR [esp+0x10],0x1
1003a514:	push   ebx
1003a515:	je     0x1003a544
1003a517:	test   esi,esi
1003a519:	jle    0x1003a53b
1003a51b:	mov    ecx,DWORD PTR [ecx+0x24]
1003a51e:	mov    edi,edi
1003a520:	movzx  edx,BYTE PTR [edi]
1003a523:	movzx  ebx,BYTE PTR [eax]
1003a526:	mov    dl,BYTE PTR [edx+ecx*1]
1003a529:	sub    esi,0x1
1003a52c:	add    edi,0x1
1003a52f:	add    eax,0x1
1003a532:	cmp    BYTE PTR [ebx+ecx*1],dl
1003a535:	jne    0x1003a566
1003a537:	test   esi,esi
1003a539:	jg     0x1003a520
1003a53b:	pop    ebx
1003a53c:	pop    edi
1003a53d:	mov    eax,0x1
1003a542:	pop    esi
1003a543:	ret    
1003a544:	test   esi,esi
1003a546:	jle    0x1003a53b
1003a548:	mov    cl,BYTE PTR [eax]
1003a54a:	mov    dl,BYTE PTR [edi]
1003a54c:	sub    esi,0x1
1003a54f:	add    edi,0x1
1003a552:	add    eax,0x1
1003a555:	cmp    cl,dl
1003a557:	jne    0x1003a566
1003a559:	test   esi,esi
1003a55b:	jg     0x1003a548
1003a55d:	pop    ebx
1003a55e:	pop    edi
1003a55f:	mov    eax,0x1
1003a564:	pop    esi
1003a565:	ret    
1003a566:	pop    ebx
1003a567:	pop    edi
1003a568:	xor    eax,eax
1003a56a:	pop    esi
1003a56b:	ret    
1003a56c:	int3   
1003a56d:	int3   
1003a56e:	int3   
1003a56f:	int3   
1003a570:	sub    esp,0xe8
1003a576:	push   ebx
1003a577:	push   ebp
1003a578:	push   esi
1003a579:	push   edi
1003a57a:	mov    edi,DWORD PTR [esp+0x10c]
1003a581:	mov    eax,DWORD PTR [edi]
1003a583:	cmp    eax,DWORD PTR [edi+0x4]
1003a586:	jae    0x1003c4d6
1003a58c:	mov    ebx,DWORD PTR [esp+0x100]
1003a593:	mov    ebp,DWORD PTR [esp+0xfc]
1003a59a:	mov    ecx,DWORD PTR [esp+0x11c]
1003a5a1:	add    DWORD PTR [edi],0x1
1003a5a4:	cmp    ecx,DWORD PTR [edi+0x8]
1003a5a7:	jae    0x1003c4e9
1003a5ad:	test   BYTE PTR [esp+0x118],0x2
1003a5b5:	mov    edx,DWORD PTR [esp+0x110]
1003a5bc:	mov    DWORD PTR [esp+0x28],edx
1003a5c0:	je     0x1003a5dc
1003a5c2:	mov    eax,DWORD PTR [esp+0x114]
1003a5c9:	lea    ecx,[esp+0x48]
1003a5cd:	mov    DWORD PTR [esp+0x4c],ebp
1003a5d1:	mov    DWORD PTR [esp+0x48],eax
1003a5d5:	mov    DWORD PTR [esp+0x114],ecx
1003a5dc:	movzx  eax,BYTE PTR [ebx]
1003a5df:	xor    edx,edx
1003a5e1:	cmp    DWORD PTR [edi+0x48],edx
1003a5e4:	mov    DWORD PTR [esp+0x1c],edx
1003a5e8:	mov    DWORD PTR [esp+0x20],edx
1003a5ec:	mov    DWORD PTR [esp+0x24],eax
1003a5f0:	je     0x1003a60b
1003a5f2:	cmp    ebp,DWORD PTR [edi+0x5c]
1003a5f5:	jb     0x1003a60b
1003a5f7:	mov    esi,DWORD PTR [esp+0x104]
1003a5fe:	cmp    ebp,esi
1003a600:	jbe    0x1003a612
1003a602:	mov    DWORD PTR [edi+0x4c],0x1
1003a609:	jmp    0x1003a612
1003a60b:	mov    esi,DWORD PTR [esp+0x104]
1003a612:	cmp    eax,0x6f
1003a615:	ja     0x1003d071
1003a61b:	movzx  eax,BYTE PTR [eax+0x1003d19c]
1003a622:	jmp    DWORD PTR [eax*4+0x1003d084]
1003a629:	mov    cl,BYTE PTR [ebx+0x3]
1003a62c:	cmp    cl,0x65
1003a62f:	lea    eax,[ebx+0x3]
1003a632:	jne    0x1003a65c
1003a634:	mov    eax,DWORD PTR [edi+0x7c]
1003a637:	xor    ecx,ecx
1003a639:	test   eax,eax
1003a63b:	mov    ch,BYTE PTR [ebx+0x4]
1003a63e:	mov    cl,BYTE PTR [ebx+0x5]
1003a641:	je     0x1003a67d
1003a643:	cmp    ecx,0xffff
1003a649:	je     0x1003a650
1003a64b:	cmp    ecx,DWORD PTR [eax+0x4]
1003a64e:	jne    0x1003a67d
1003a650:	mov    ecx,0x1
1003a655:	mov    eax,0x3
1003a65a:	jmp    0x1003a687
1003a65c:	cmp    cl,0x64
1003a65f:	jne    0x1003a6a2
1003a661:	xor    eax,eax
1003a663:	mov    ah,BYTE PTR [ebx+0x4]
1003a666:	mov    al,BYTE PTR [ebx+0x5]
1003a669:	add    eax,eax
1003a66b:	cmp    eax,DWORD PTR [esp+0x108]
1003a672:	jge    0x1003a67d
1003a674:	mov    ecx,DWORD PTR [edi+0xc]
1003a677:	cmp    DWORD PTR [ecx+eax*4],0x0
1003a67b:	jge    0x1003a650
1003a67d:	xor    ecx,ecx
1003a67f:	xor    eax,eax
1003a681:	mov    ah,BYTE PTR [ebx+0x1]
1003a684:	mov    al,BYTE PTR [ebx+0x2]
1003a687:	add    ebx,eax
1003a689:	test   ecx,ecx
1003a68b:	jne    0x1003c266
1003a691:	cmp    BYTE PTR [ebx],0x54
1003a694:	je     0x1003c266
1003a69a:	add    ebx,0x3
1003a69d:	jmp    0x1003a5dc
1003a6a2:	cmp    cl,0x66
1003a6a5:	jne    0x1003a6b3
1003a6a7:	xor    edx,edx
1003a6a9:	mov    dh,BYTE PTR [ebx+0x1]
1003a6ac:	mov    dl,BYTE PTR [ebx+0x2]
1003a6af:	add    ebx,edx
1003a6b1:	jmp    0x1003a691
1003a6b3:	mov    ecx,DWORD PTR [esp+0x11c]
1003a6ba:	mov    edx,DWORD PTR [esp+0x110]
1003a6c1:	add    ecx,0x1
1003a6c4:	push   ecx
1003a6c5:	mov    ecx,DWORD PTR [esp+0x10c]
1003a6cc:	push   0x1
1003a6ce:	push   0x0
1003a6d0:	push   edx
1003a6d1:	push   edi
1003a6d2:	push   ecx
1003a6d3:	push   esi
1003a6d4:	push   eax
1003a6d5:	push   ebp
1003a6d6:	call   0x1003a570
1003a6db:	add    esp,0x24
1003a6de:	cmp    eax,0x1
1003a6e1:	je     0x1003c244
1003a6e7:	test   eax,eax
1003a6e9:	je     0x1003a6f6
1003a6eb:	cmp    eax,0xfffffc1c
1003a6f0:	jne    0x1003d076
1003a6f6:	xor    edx,edx
1003a6f8:	mov    dh,BYTE PTR [ebx+0x1]
1003a6fb:	mov    dl,BYTE PTR [ebx+0x2]
1003a6fe:	add    ebx,edx
1003a700:	jmp    0x1003a691
1003a702:	mov    ebx,DWORD PTR [edi+0x7c]
1003a705:	test   ebx,ebx
1003a707:	je     0x1003c7aa
1003a70d:	cmp    DWORD PTR [ebx+0x4],0x0
1003a711:	jne    0x1003c7aa
1003a717:	mov    eax,DWORD PTR [ebx]
1003a719:	mov    DWORD PTR [edi+0x7c],eax
1003a71c:	mov    ecx,DWORD PTR [ebx+0x14]
1003a71f:	mov    edx,DWORD PTR [ebx+0x10]
1003a722:	mov    eax,DWORD PTR [edi+0xc]
1003a725:	add    ecx,ecx
1003a727:	add    ecx,ecx
1003a729:	push   ecx
1003a72a:	push   edx
1003a72b:	push   eax
1003a72c:	call   0x10045960
1003a731:	mov    ecx,DWORD PTR [ebx+0xc]
1003a734:	mov    edx,DWORD PTR [esp+0x34]
1003a738:	mov    ebx,DWORD PTR [ebx+0x8]
1003a73b:	add    esp,0xc
1003a73e:	mov    DWORD PTR [esp+0x104],ecx
1003a745:	mov    DWORD PTR [esp+0x110],edx
1003a74c:	jmp    0x1003a5dc
1003a751:	movzx  eax,BYTE PTR [ebx+0x1]
1003a755:	mov    DWORD PTR [esp+0x110],eax
1003a75c:	add    ebx,0x2
1003a75f:	jmp    0x1003a5dc
1003a764:	mov    esi,DWORD PTR [esp+0x11c]
1003a76b:	add    esi,0x1
1003a76e:	mov    ecx,DWORD PTR [esp+0x110]
1003a775:	mov    edx,DWORD PTR [esp+0x108]
1003a77c:	mov    eax,DWORD PTR [esp+0x104]
1003a783:	push   esi
1003a784:	push   0x0
1003a786:	push   0x0
1003a788:	push   ecx
1003a789:	push   edi
1003a78a:	push   edx
1003a78b:	push   eax
1003a78c:	lea    ecx,[ebx+0x3]
1003a78f:	push   ecx
1003a790:	push   ebp
1003a791:	call   0x1003a570
1003a796:	add    esp,0x24
1003a799:	cmp    eax,0x1
1003a79c:	je     0x1003a7bc
1003a79e:	test   eax,eax
1003a7a0:	je     0x1003a7ad
1003a7a2:	cmp    eax,0xfffffc1c
1003a7a7:	jne    0x1003d076
1003a7ad:	xor    edx,edx
1003a7af:	mov    dh,BYTE PTR [ebx+0x1]
1003a7b2:	mov    dl,BYTE PTR [ebx+0x2]
1003a7b5:	add    ebx,edx
1003a7b7:	cmp    BYTE PTR [ebx],0x54
1003a7ba:	je     0x1003a76e
1003a7bc:	cmp    BYTE PTR [ebx],0x55
1003a7bf:	je     0x1003c74f
1003a7c5:	test   BYTE PTR [esp+0x118],0x1
1003a7cd:	jne    0x1003c7c4
1003a7d3:	xor    eax,eax
1003a7d5:	mov    ah,BYTE PTR [ebx+0x1]
1003a7d8:	mov    al,BYTE PTR [ebx+0x2]
1003a7db:	add    ebx,eax
1003a7dd:	cmp    BYTE PTR [ebx],0x54
1003a7e0:	je     0x1003a7d3
1003a7e2:	mov    ecx,DWORD PTR [edi+0x68]
1003a7e5:	add    ebx,0x3
1003a7e8:	mov    DWORD PTR [esp+0x108],ecx
1003a7ef:	jmp    0x1003a5dc
1003a7f4:	mov    esi,DWORD PTR [esp+0x11c]
1003a7fb:	add    esi,0x1
1003a7fe:	mov    edx,DWORD PTR [esp+0x110]
1003a805:	mov    eax,DWORD PTR [esp+0x108]
1003a80c:	mov    ecx,DWORD PTR [esp+0x104]
1003a813:	push   esi
1003a814:	push   0x0
1003a816:	push   0x0
1003a818:	push   edx
1003a819:	push   edi
1003a81a:	push   eax
1003a81b:	push   ecx
1003a81c:	lea    edx,[ebx+0x3]
1003a81f:	push   edx
1003a820:	push   ebp
1003a821:	call   0x1003a570
1003a826:	add    esp,0x24
1003a829:	cmp    eax,0x1
1003a82c:	je     0x1003c74f
1003a832:	test   eax,eax
1003a834:	je     0x1003a841
1003a836:	cmp    eax,0xfffffc1c
1003a83b:	jne    0x1003d076
1003a841:	xor    eax,eax
1003a843:	mov    ah,BYTE PTR [ebx+0x1]
1003a846:	mov    al,BYTE PTR [ebx+0x2]
1003a849:	add    ebx,eax
1003a84b:	cmp    BYTE PTR [ebx],0x54
1003a84e:	je     0x1003a7fe
1003a850:	test   BYTE PTR [esp+0x118],0x1
1003a858:	jne    0x1003c7c4
1003a85e:	add    ebx,0x3
1003a861:	jmp    0x1003a5dc
1003a866:	xor    ecx,ecx
1003a868:	mov    ch,BYTE PTR [ebx+0x1]
1003a86b:	mov    cl,BYTE PTR [ebx+0x2]
1003a86e:	sub    ebp,ecx
1003a870:	cmp    ebp,DWORD PTR [edi+0x58]
1003a873:	jb     0x1003c74f
1003a879:	add    ebx,0x3
1003a87c:	jmp    0x1003a5dc
1003a881:	mov    ecx,DWORD PTR ds:0x10080d50
1003a887:	test   ecx,ecx
1003a889:	je     0x1003a915
1003a88f:	movzx  edx,BYTE PTR [ebx+0x1]
1003a893:	mov    eax,DWORD PTR [edi+0xc]
1003a896:	mov    DWORD PTR [esp+0x58],eax
1003a89a:	mov    eax,DWORD PTR [edi+0x58]
1003a89d:	mov    DWORD PTR [esp+0x54],edx
1003a8a1:	mov    edx,DWORD PTR [edi+0x5c]
1003a8a4:	sub    edx,eax
1003a8a6:	mov    DWORD PTR [esp+0x60],edx
1003a8aa:	sub    esi,eax
1003a8ac:	mov    DWORD PTR [esp+0x5c],eax
1003a8b0:	mov    edx,ebp
1003a8b2:	sub    edx,eax
1003a8b4:	xor    eax,eax
1003a8b6:	mov    ah,BYTE PTR [ebx+0x2]
1003a8b9:	mov    DWORD PTR [esp+0x68],edx
1003a8bd:	xor    edx,edx
1003a8bf:	mov    dh,BYTE PTR [ebx+0x4]
1003a8c2:	mov    DWORD PTR [esp+0x50],0x1
1003a8ca:	mov    DWORD PTR [esp+0x64],esi
1003a8ce:	mov    al,BYTE PTR [ebx+0x3]
1003a8d1:	mov    dl,BYTE PTR [ebx+0x5]
1003a8d4:	mov    DWORD PTR [esp+0x78],eax
1003a8d8:	mov    eax,DWORD PTR [esp+0x108]
1003a8df:	mov    DWORD PTR [esp+0x7c],edx
1003a8e3:	cdq    
1003a8e4:	sub    eax,edx
1003a8e6:	mov    edx,DWORD PTR [edi+0x80]
1003a8ec:	sar    eax,1
1003a8ee:	mov    DWORD PTR [esp+0x6c],eax
1003a8f2:	mov    eax,DWORD PTR [edi+0x6c]
1003a8f5:	mov    DWORD PTR [esp+0x70],eax
1003a8f9:	lea    eax,[esp+0x50]
1003a8fd:	push   eax
1003a8fe:	mov    DWORD PTR [esp+0x78],edx
1003a902:	call   ecx
1003a904:	add    esp,0x4
1003a907:	test   eax,eax
1003a909:	jg     0x1003c74f
1003a90f:	jl     0x1003d076
1003a915:	add    ebx,0x6
1003a918:	jmp    0x1003a5dc
1003a91d:	mov    esi,DWORD PTR [esp+0x11c]
1003a924:	mov    DWORD PTR [esp+0x1c],ebx
1003a928:	mov    DWORD PTR [esp+0x24],ebp
1003a92c:	add    esi,0x1
1003a92f:	mov    ecx,DWORD PTR [esp+0x114]
1003a936:	mov    edx,DWORD PTR [esp+0x110]
1003a93d:	mov    eax,DWORD PTR [esp+0x108]
1003a944:	push   esi
1003a945:	push   0x0
1003a947:	push   ecx
1003a948:	mov    ecx,DWORD PTR [esp+0x110]
1003a94f:	push   edx
1003a950:	push   edi
1003a951:	push   eax
1003a952:	push   ecx
1003a953:	lea    edx,[ebx+0x3]
1003a956:	push   edx
1003a957:	push   ebp
1003a958:	call   0x1003a570
1003a95d:	add    esp,0x24
1003a960:	cmp    eax,0x1
1003a963:	je     0x1003a983
1003a965:	test   eax,eax
1003a967:	je     0x1003a974
1003a969:	cmp    eax,0xfffffc1c
1003a96e:	jne    0x1003d076
1003a974:	xor    eax,eax
1003a976:	mov    ah,BYTE PTR [ebx+0x1]
1003a979:	mov    al,BYTE PTR [ebx+0x2]
1003a97c:	add    ebx,eax
1003a97e:	cmp    BYTE PTR [ebx],0x54
1003a981:	je     0x1003a92f
1003a983:	mov    al,BYTE PTR [ebx]
1003a985:	cmp    al,0x5d
1003a987:	je     0x1003a991
1003a989:	cmp    al,0x54
1003a98b:	jne    0x1003c74f
1003a991:	xor    ecx,ecx
1003a993:	mov    ch,BYTE PTR [ebx+0x1]
1003a996:	mov    cl,BYTE PTR [ebx+0x2]
1003a999:	add    ebx,ecx
1003a99b:	cmp    BYTE PTR [ebx],0x54
1003a99e:	je     0x1003a991
1003a9a0:	cmp    BYTE PTR [ebx],0x55
1003a9a3:	mov    ecx,DWORD PTR [edi+0x68]
1003a9a6:	mov    ebp,DWORD PTR [edi+0x64]
1003a9a9:	mov    DWORD PTR [esp+0x108],ecx
1003a9b0:	je     0x1003a9bc
1003a9b2:	cmp    ebp,DWORD PTR [esp+0x24]
1003a9b6:	jne    0x1003c381
1003a9bc:	add    ebx,0x3
1003a9bf:	jmp    0x1003a5dc
1003a9c4:	xor    edx,edx
1003a9c6:	mov    dh,BYTE PTR [ebx+0x1]
1003a9c9:	mov    dl,BYTE PTR [ebx+0x2]
1003a9cc:	add    ebx,edx
1003a9ce:	cmp    BYTE PTR [ebx],0x54
1003a9d1:	je     0x1003a9c4
1003a9d3:	jmp    0x1003a5dc
1003a9d8:	mov    eax,DWORD PTR [esp+0x11c]
1003a9df:	mov    ecx,DWORD PTR [esp+0x114]
1003a9e6:	mov    edx,DWORD PTR [esp+0x110]
1003a9ed:	add    eax,0x1
1003a9f0:	push   eax
1003a9f1:	mov    eax,DWORD PTR [esp+0x10c]
1003a9f8:	push   0x0
1003a9fa:	push   ecx
1003a9fb:	push   edx
1003a9fc:	push   edi
1003a9fd:	push   eax
1003a9fe:	push   esi
1003a9ff:	add    ebx,0x1
1003aa02:	push   ebx
1003aa03:	push   ebp
1003aa04:	call   0x1003a570
1003aa09:	add    esp,0x24
1003aa0c:	test   eax,eax
1003aa0e:	jne    0x1003d076
1003aa14:	xor    ecx,ecx
1003aa16:	mov    ch,BYTE PTR [ebx+0x1]
1003aa19:	mov    cl,BYTE PTR [ebx+0x2]
1003aa1c:	add    ebx,ecx
1003aa1e:	cmp    BYTE PTR [ebx],0x54
1003aa21:	je     0x1003aa14
1003aa23:	add    ebx,0x3
1003aa26:	jmp    0x1003a5dc
1003aa2b:	add    ebx,0x1
1003aa2e:	mov    eax,ebx
1003aa30:	xor    edx,edx
1003aa32:	mov    dh,BYTE PTR [eax+0x1]
1003aa35:	mov    dl,BYTE PTR [eax+0x2]
1003aa38:	add    eax,edx
1003aa3a:	cmp    BYTE PTR [eax],0x54
1003aa3d:	je     0x1003aa30
1003aa3f:	mov    ecx,DWORD PTR [esp+0x11c]
1003aa46:	mov    edx,DWORD PTR [esp+0x114]
1003aa4d:	add    ecx,0x1
1003aa50:	push   ecx
1003aa51:	mov    ecx,DWORD PTR [esp+0x114]
1003aa58:	push   0x0
1003aa5a:	push   edx
1003aa5b:	mov    edx,DWORD PTR [esp+0x114]
1003aa62:	push   ecx
1003aa63:	push   edi
1003aa64:	push   edx
1003aa65:	push   esi
1003aa66:	add    eax,0x3
1003aa69:	push   eax
1003aa6a:	push   ebp
1003aa6b:	call   0x1003a570
1003aa70:	add    esp,0x24
1003aa73:	test   eax,eax
1003aa75:	jne    0x1003d076
1003aa7b:	jmp    0x1003a5dc
1003aa80:	add    ebx,0x1
1003aa83:	xor    eax,eax
1003aa85:	mov    ah,BYTE PTR [ebx+0x1]
1003aa88:	mov    al,BYTE PTR [ebx+0x2]
1003aa8b:	add    ebx,eax
1003aa8d:	cmp    BYTE PTR [ebx],0x54
1003aa90:	je     0x1003aa83
1003aa92:	add    ebx,0x3
1003aa95:	jmp    0x1003a5dc
1003aa9a:	xor    edx,edx
1003aa9c:	mov    dh,BYTE PTR [ebx+0x1]
1003aa9f:	mov    ecx,ebx
1003aaa1:	mov    dl,BYTE PTR [ebx+0x2]
1003aaa4:	sub    ecx,edx
1003aaa6:	mov    al,BYTE PTR [ecx]
1003aaa8:	cmp    al,0x61
1003aaaa:	mov    DWORD PTR [esp+0x1c],ecx
1003aaae:	jb     0x1003aac5
1003aab0:	mov    esi,DWORD PTR [esp+0x114]
1003aab7:	mov    edx,DWORD PTR [esi+0x4]
1003aaba:	mov    esi,DWORD PTR [esi]
1003aabc:	mov    DWORD PTR [esp+0x114],esi
1003aac3:	jmp    0x1003aac7
1003aac5:	xor    edx,edx
1003aac7:	cmp    al,0x58
1003aac9:	je     0x1003c9b2
1003aacf:	cmp    al,0x59
1003aad1:	je     0x1003c9b2
1003aad7:	cmp    al,0x5a
1003aad9:	je     0x1003c9b2
1003aadf:	cmp    al,0x5b
1003aae1:	je     0x1003c9b2
1003aae7:	cmp    al,0x5d
1003aae9:	je     0x1003c9b2
1003aaef:	cmp    al,0x5f
1003aaf1:	je     0x1003aafb
1003aaf3:	cmp    al,0x62
1003aaf5:	jne    0x1003ab96
1003aafb:	xor    eax,eax
1003aafd:	mov    ah,BYTE PTR [ecx+0x3]
1003ab00:	mov    al,BYTE PTR [ecx+0x4]
1003ab03:	mov    ecx,eax
1003ab05:	lea    eax,[ecx+ecx*1]
1003ab08:	cmp    eax,DWORD PTR [edi+0x14]
1003ab0b:	mov    DWORD PTR [esp+0x20],ecx
1003ab0f:	mov    DWORD PTR [edi+0x6c],ecx
1003ab12:	jl     0x1003ab1d
1003ab14:	mov    DWORD PTR [edi+0x2c],0x1
1003ab1b:	jmp    0x1003ab50
1003ab1d:	mov    esi,DWORD PTR [edi+0x10]
1003ab20:	mov    ecx,DWORD PTR [edi+0xc]
1003ab23:	sub    esi,DWORD PTR [esp+0x20]
1003ab27:	mov    esi,DWORD PTR [ecx+esi*4]
1003ab2a:	mov    DWORD PTR [ecx+eax*4],esi
1003ab2d:	mov    esi,DWORD PTR [edi+0xc]
1003ab30:	mov    ecx,ebp
1003ab32:	sub    ecx,DWORD PTR [edi+0x58]
1003ab35:	cmp    DWORD PTR [esp+0x108],eax
1003ab3c:	mov    DWORD PTR [esi+eax*4+0x4],ecx
1003ab40:	mov    ecx,DWORD PTR [esp+0x20]
1003ab44:	jg     0x1003ab50
1003ab46:	add    eax,0x2
1003ab49:	mov    DWORD PTR [esp+0x108],eax
1003ab50:	mov    esi,DWORD PTR [edi+0x7c]
1003ab53:	test   esi,esi
1003ab55:	je     0x1003ab96
1003ab57:	cmp    DWORD PTR [esi+0x4],ecx
1003ab5a:	jne    0x1003ab96
1003ab5c:	mov    edx,DWORD PTR [esi]
1003ab5e:	mov    DWORD PTR [edi+0x7c],edx
1003ab61:	mov    ecx,DWORD PTR [esi+0x14]
1003ab64:	mov    eax,DWORD PTR [esi+0xc]
1003ab67:	mov    edx,DWORD PTR [esi+0x10]
1003ab6a:	add    ecx,ecx
1003ab6c:	add    ecx,ecx
1003ab6e:	push   ecx
1003ab6f:	mov    DWORD PTR [esp+0x108],eax
1003ab76:	mov    eax,DWORD PTR [edi+0xc]
1003ab79:	push   edx
1003ab7a:	push   eax
1003ab7b:	call   0x10045420
1003ab80:	mov    ecx,DWORD PTR [esp+0x34]
1003ab84:	mov    ebx,DWORD PTR [esi+0x8]
1003ab87:	add    esp,0xc
1003ab8a:	mov    DWORD PTR [esp+0x110],ecx
1003ab91:	jmp    0x1003a5dc
1003ab96:	cmp    BYTE PTR [ebx],0x55
1003ab99:	mov    esi,DWORD PTR [esp+0x28]
1003ab9d:	mov    DWORD PTR [esp+0x110],esi
1003aba4:	je     0x1003abae
1003aba6:	cmp    ebp,edx
1003aba8:	jne    0x1003c415
1003abae:	add    ebx,0x3
1003abb1:	jmp    0x1003a5dc
1003abb6:	cmp    DWORD PTR [edi+0x30],0x0
1003abba:	je     0x1003abc5
1003abbc:	cmp    ebp,DWORD PTR [edi+0x58]
1003abbf:	je     0x1003c74f
1003abc5:	test   BYTE PTR [esp+0x110],0x2
1003abcd:	je     0x1003ac46
1003abcf:	mov    eax,DWORD PTR [edi+0x58]
1003abd2:	cmp    ebp,eax
1003abd4:	je     0x1003ac3e
1003abd6:	cmp    ebp,DWORD PTR [edi+0x5c]
1003abd9:	je     0x1003c74f
1003abdf:	mov    ecx,DWORD PTR [edi+0x18]
1003abe2:	test   ecx,ecx
1003abe4:	je     0x1003ac10
1003abe6:	cmp    ebp,eax
1003abe8:	jbe    0x1003c74f
1003abee:	push   0x0
1003abf0:	push   ecx
1003abf1:	lea    edx,[edi+0x1c]
1003abf4:	mov    esi,eax
1003abf6:	mov    ecx,ebp
1003abf8:	call   0x10042ea0
1003abfd:	add    esp,0x8
1003ac00:	test   eax,eax
1003ac02:	je     0x1003c74f
1003ac08:	add    ebx,0x1
1003ac0b:	jmp    0x1003a5dc
1003ac10:	mov    ecx,DWORD PTR [edi+0x1c]
1003ac13:	lea    edx,[ecx+eax*1]
1003ac16:	cmp    ebp,edx
1003ac18:	jb     0x1003c74f
1003ac1e:	mov    esi,ebp
1003ac20:	sub    esi,ecx
1003ac22:	mov    al,BYTE PTR [esi]
1003ac24:	cmp    al,BYTE PTR [edi+0x20]
1003ac27:	jne    0x1003c74f
1003ac2d:	cmp    ecx,0x1
1003ac30:	je     0x1003ac3e
1003ac32:	mov    cl,BYTE PTR [esi+0x1]
1003ac35:	cmp    cl,BYTE PTR [edi+0x21]
1003ac38:	jne    0x1003c74f
1003ac3e:	add    ebx,0x1
1003ac41:	jmp    0x1003a5dc
1003ac46:	cmp    ebp,DWORD PTR [edi+0x58]
1003ac49:	jne    0x1003c74f
1003ac4f:	add    ebx,0x1
1003ac52:	jmp    0x1003a5dc
1003ac57:	mov    edx,DWORD PTR [edi+0x70]
1003ac5a:	add    edx,DWORD PTR [edi+0x58]
1003ac5d:	cmp    ebp,edx
1003ac5f:	jne    0x1003c74f
1003ac65:	add    ebx,0x1
1003ac68:	jmp    0x1003a5dc
1003ac6d:	mov    DWORD PTR [esp+0x104],ebp
1003ac74:	add    ebx,0x1
1003ac77:	jmp    0x1003a5dc
1003ac7c:	test   BYTE PTR [esp+0x110],0x2
1003ac84:	je     0x1003acfa
1003ac86:	mov    eax,DWORD PTR [edi+0x5c]
1003ac89:	cmp    ebp,eax
1003ac8b:	jae    0x1003ace8
1003ac8d:	mov    ecx,DWORD PTR [edi+0x18]
1003ac90:	test   ecx,ecx
1003ac92:	je     0x1003acc2
1003ac94:	mov    edi,DWORD PTR [esp+0x10c]
1003ac9b:	push   ecx
1003ac9c:	add    edi,0x1c
1003ac9f:	xor    edx,edx
1003aca1:	mov    ecx,ebp
1003aca3:	call   0x10042de0
1003aca8:	add    esp,0x4
1003acab:	test   eax,eax
1003acad:	je     0x1003c74f
1003acb3:	mov    edi,DWORD PTR [esp+0x10c]
1003acba:	add    ebx,0x1
1003acbd:	jmp    0x1003a5dc
1003acc2:	mov    ecx,DWORD PTR [edi+0x1c]
1003acc5:	sub    eax,ecx
1003acc7:	cmp    ebp,eax
1003acc9:	ja     0x1003c74f
1003accf:	mov    al,BYTE PTR [ebp+0x0]
1003acd2:	cmp    al,BYTE PTR [edi+0x20]
1003acd5:	jne    0x1003c74f
1003acdb:	cmp    ecx,0x1
1003acde:	je     0x1003acf2
1003ace0:	mov    cl,BYTE PTR [ebp+0x1]
1003ace3:	cmp    cl,BYTE PTR [edi+0x21]
1003ace6:	jmp    0x1003acec
1003ace8:	cmp    DWORD PTR [edi+0x34],0x0
1003acec:	jne    0x1003c74f
1003acf2:	add    ebx,0x1
1003acf5:	jmp    0x1003a5dc
1003acfa:	cmp    DWORD PTR [edi+0x34],0x0
1003acfe:	jne    0x1003c74f
1003ad04:	cmp    DWORD PTR [edi+0x40],0x0
1003ad08:	jne    0x1003ad90
1003ad0e:	mov    eax,DWORD PTR [edi+0x5c]
1003ad11:	cmp    ebp,eax
1003ad13:	je     0x1003ad88
1003ad15:	mov    ecx,DWORD PTR [edi+0x18]
1003ad18:	test   ecx,ecx
1003ad1a:	je     0x1003ad4e
1003ad1c:	cmp    ebp,eax
1003ad1e:	jae    0x1003c74f
1003ad24:	mov    esi,DWORD PTR [esp+0x10c]
1003ad2b:	add    esi,0x1c
1003ad2e:	push   ecx
1003ad2f:	xor    edx,edx
1003ad31:	mov    edi,esi
1003ad33:	mov    ecx,ebp
1003ad35:	call   0x10042de0
1003ad3a:	add    esp,0x4
1003ad3d:	test   eax,eax
1003ad3f:	je     0x1003c74f
1003ad45:	mov    edi,DWORD PTR [esp+0x10c]
1003ad4c:	jmp    0x1003ad7b
1003ad4e:	mov    ecx,DWORD PTR [edi+0x1c]
1003ad51:	lea    esi,[edi+0x1c]
1003ad54:	sub    eax,ecx
1003ad56:	cmp    ebp,eax
1003ad58:	ja     0x1003c74f
1003ad5e:	mov    dl,BYTE PTR [ebp+0x0]
1003ad61:	cmp    dl,BYTE PTR [edi+0x20]
1003ad64:	jne    0x1003c74f
1003ad6a:	cmp    ecx,0x1
1003ad6d:	je     0x1003ad7b
1003ad6f:	mov    al,BYTE PTR [ebp+0x1]
1003ad72:	cmp    al,BYTE PTR [edi+0x21]
1003ad75:	jne    0x1003c74f
1003ad7b:	mov    ecx,DWORD PTR [edi+0x5c]
1003ad7e:	sub    ecx,DWORD PTR [esi]
1003ad80:	cmp    ebp,ecx
1003ad82:	jne    0x1003c74f
1003ad88:	add    ebx,0x1
1003ad8b:	jmp    0x1003a5dc
1003ad90:	cmp    ebp,DWORD PTR [edi+0x5c]
1003ad93:	jb     0x1003c74f
1003ad99:	add    ebx,0x1
1003ad9c:	jmp    0x1003a5dc
1003ada1:	cmp    ebp,DWORD PTR [edi+0x58]
1003ada4:	je     0x1003adba
1003ada6:	movzx  edx,BYTE PTR [ebp-0x1]
1003adaa:	mov    eax,DWORD PTR [edi+0x28]
1003adad:	test   BYTE PTR [edx+eax*1],0x10
1003adb1:	je     0x1003adba
1003adb3:	mov    esi,0x1
1003adb8:	jmp    0x1003adbc
1003adba:	xor    esi,esi
1003adbc:	cmp    ebp,DWORD PTR [edi+0x5c]
1003adbf:	jae    0x1003add5
1003adc1:	movzx  ecx,BYTE PTR [ebp+0x0]
1003adc5:	mov    edx,DWORD PTR [edi+0x28]
1003adc8:	test   BYTE PTR [ecx+edx*1],0x10
1003adcc:	je     0x1003add5
1003adce:	mov    eax,0x1
1003add3:	jmp    0x1003add7
1003add5:	xor    eax,eax
1003add7:	mov    cl,BYTE PTR [ebx]
1003add9:	add    ebx,0x1
1003addc:	cmp    cl,0x5
1003addf:	jne    0x1003adec
1003ade1:	xor    edx,edx
1003ade3:	cmp    eax,esi
1003ade5:	sete   dl
1003ade8:	mov    eax,edx
1003adea:	jmp    0x1003adf5
1003adec:	xor    ecx,ecx
1003adee:	cmp    eax,esi
1003adf0:	setne  cl
1003adf3:	mov    eax,ecx
1003adf5:	test   eax,eax
1003adf7:	je     0x1003a5dc
1003adfd:	xor    eax,eax
1003adff:	pop    edi
1003ae00:	pop    esi
1003ae01:	pop    ebp
1003ae02:	pop    ebx
1003ae03:	add    esp,0xe8
1003ae09:	ret    
1003ae0a:	mov    ecx,DWORD PTR [edi+0x18]
1003ae0d:	test   ecx,ecx
1003ae0f:	je     0x1003ae40
1003ae11:	mov    eax,DWORD PTR [edi+0x5c]
1003ae14:	cmp    ebp,eax
1003ae16:	jae    0x1003ae69
1003ae18:	mov    edi,DWORD PTR [esp+0x10c]
1003ae1f:	push   ecx
1003ae20:	add    edi,0x1c
1003ae23:	xor    edx,edx
1003ae25:	mov    ecx,ebp
1003ae27:	call   0x10042de0
1003ae2c:	add    esp,0x4
1003ae2f:	test   eax,eax
1003ae31:	jne    0x1003c74f
1003ae37:	mov    edi,DWORD PTR [esp+0x10c]
1003ae3e:	jmp    0x1003ae69
1003ae40:	mov    eax,DWORD PTR [edi+0x1c]
1003ae43:	mov    edx,DWORD PTR [edi+0x5c]
1003ae46:	sub    edx,eax
1003ae48:	cmp    ebp,edx
1003ae4a:	ja     0x1003ae69
1003ae4c:	mov    cl,BYTE PTR [ebp+0x0]
1003ae4f:	cmp    cl,BYTE PTR [edi+0x20]
1003ae52:	jne    0x1003ae69
1003ae54:	cmp    eax,0x1
1003ae57:	je     0x1003c74f
1003ae5d:	mov    dl,BYTE PTR [ebp+0x1]
1003ae60:	cmp    dl,BYTE PTR [edi+0x21]
1003ae63:	je     0x1003c74f
1003ae69:	mov    eax,ebp
1003ae6b:	add    ebp,0x1
1003ae6e:	cmp    eax,DWORD PTR [edi+0x5c]
1003ae71:	jae    0x1003c74f
1003ae77:	add    ebx,0x1
1003ae7a:	jmp    0x1003a5dc
1003ae7f:	mov    ecx,ebp
1003ae81:	add    ebp,0x1
1003ae84:	cmp    ecx,DWORD PTR [edi+0x5c]
1003ae87:	jae    0x1003c74f
1003ae8d:	add    ebx,0x1
1003ae90:	jmp    0x1003a5dc
1003ae95:	cmp    ebp,DWORD PTR [edi+0x5c]
1003ae98:	jae    0x1003c74f
1003ae9e:	movzx  eax,BYTE PTR [ebp+0x0]
1003aea2:	mov    edx,DWORD PTR [edi+0x28]
1003aea5:	add    ebp,0x1
1003aea8:	test   BYTE PTR [eax+edx*1],0x4
1003aeac:	jne    0x1003c74f
1003aeb2:	add    ebx,0x1
1003aeb5:	jmp    0x1003a5dc
1003aeba:	cmp    ebp,DWORD PTR [edi+0x5c]
1003aebd:	jae    0x1003c74f
1003aec3:	movzx  eax,BYTE PTR [ebp+0x0]
1003aec7:	mov    ecx,DWORD PTR [edi+0x28]
1003aeca:	add    ebp,0x1
1003aecd:	test   BYTE PTR [eax+ecx*1],0x4
1003aed1:	je     0x1003c74f
1003aed7:	add    ebx,0x1
1003aeda:	jmp    0x1003a5dc
1003aedf:	cmp    ebp,DWORD PTR [edi+0x5c]
1003aee2:	jae    0x1003c74f
1003aee8:	movzx  eax,BYTE PTR [ebp+0x0]
1003aeec:	mov    edx,DWORD PTR [edi+0x28]
1003aeef:	add    ebp,0x1
1003aef2:	test   BYTE PTR [eax+edx*1],0x1
1003aef6:	jne    0x1003c74f
1003aefc:	add    ebx,0x1
1003aeff:	jmp    0x1003a5dc
1003af04:	cmp    ebp,DWORD PTR [edi+0x5c]
1003af07:	jae    0x1003c74f
1003af0d:	movzx  eax,BYTE PTR [ebp+0x0]
1003af11:	mov    ecx,DWORD PTR [edi+0x28]
1003af14:	add    ebp,0x1
1003af17:	test   BYTE PTR [eax+ecx*1],0x1
1003af1b:	je     0x1003c74f
1003af21:	add    ebx,0x1
1003af24:	jmp    0x1003a5dc
1003af29:	cmp    ebp,DWORD PTR [edi+0x5c]
1003af2c:	jae    0x1003c74f
1003af32:	movzx  eax,BYTE PTR [ebp+0x0]
1003af36:	mov    edx,DWORD PTR [edi+0x28]
1003af39:	add    ebp,0x1
1003af3c:	test   BYTE PTR [eax+edx*1],0x10
1003af40:	jne    0x1003c74f
1003af46:	add    ebx,0x1
1003af49:	jmp    0x1003a5dc
1003af4e:	cmp    ebp,DWORD PTR [edi+0x5c]
1003af51:	jae    0x1003c74f
1003af57:	movzx  eax,BYTE PTR [ebp+0x0]
1003af5b:	mov    ecx,DWORD PTR [edi+0x28]
1003af5e:	add    ebp,0x1
1003af61:	test   BYTE PTR [eax+ecx*1],0x10
1003af65:	je     0x1003c74f
1003af6b:	add    ebx,0x1
1003af6e:	jmp    0x1003a5dc
1003af73:	mov    ecx,DWORD PTR [edi+0x5c]
1003af76:	cmp    ebp,ecx
1003af78:	jae    0x1003c74f
1003af7e:	movzx  eax,BYTE PTR [ebp+0x0]
1003af82:	add    ebp,0x1
1003af85:	cmp    eax,0xd
1003af88:	ja     0x1003afb1
1003af8a:	je     0x1003af9c
1003af8c:	cmp    eax,0xa
1003af8f:	je     0x1003afd8
1003af91:	jbe    0x1003c74f
1003af97:	cmp    eax,0xc
1003af9a:	jmp    0x1003afc8
1003af9c:	cmp    ebp,ecx
1003af9e:	jae    0x1003afd8
1003afa0:	cmp    BYTE PTR [ebp+0x0],0xa
1003afa4:	jne    0x1003afd8
1003afa6:	add    ebp,0x1
1003afa9:	add    ebx,0x1
1003afac:	jmp    0x1003a5dc
1003afb1:	cmp    eax,0x85
1003afb6:	je     0x1003afce
1003afb8:	cmp    eax,0x2027
1003afbd:	jbe    0x1003c74f
1003afc3:	cmp    eax,0x2029
1003afc8:	ja     0x1003c74f
1003afce:	cmp    DWORD PTR [edi+0x50],0x0
1003afd2:	jne    0x1003c74f
1003afd8:	add    ebx,0x1
1003afdb:	jmp    0x1003a5dc
1003afe0:	cmp    ebp,DWORD PTR [edi+0x5c]
1003afe3:	jae    0x1003c74f
1003afe9:	movzx  eax,BYTE PTR [ebp+0x0]
1003afed:	add    ebp,0x1
1003aff0:	cmp    eax,0x180e
1003aff5:	ja     0x1003b01f
1003aff7:	je     0x1003c74f
1003affd:	cmp    eax,0xa0
1003b002:	ja     0x1003b018
1003b004:	je     0x1003c74f
1003b00a:	cmp    eax,0x9
1003b00d:	je     0x1003c74f
1003b013:	cmp    eax,0x20
1003b016:	jmp    0x1003b04a
1003b018:	cmp    eax,0x1680
1003b01d:	jmp    0x1003b04a
1003b01f:	cmp    eax,0x205f
1003b024:	ja     0x1003b045
1003b026:	je     0x1003c74f
1003b02c:	cmp    eax,0x2000
1003b031:	jb     0x1003b050
1003b033:	cmp    eax,0x200a
1003b038:	jbe    0x1003c74f
1003b03e:	cmp    eax,0x202f
1003b043:	jmp    0x1003b04a
1003b045:	cmp    eax,0x3000
1003b04a:	je     0x1003c74f
1003b050:	add    ebx,0x1
1003b053:	jmp    0x1003a5dc
1003b058:	cmp    ebp,DWORD PTR [edi+0x5c]
1003b05b:	jae    0x1003c74f
1003b061:	movzx  eax,BYTE PTR [ebp+0x0]
1003b065:	add    ebp,0x1
1003b068:	cmp    eax,0x180e
1003b06d:	ja     0x1003b08b
1003b06f:	je     0x1003b0b8
1003b071:	cmp    eax,0xa0
1003b076:	ja     0x1003b084
1003b078:	je     0x1003b0b8
1003b07a:	cmp    eax,0x9
1003b07d:	je     0x1003b0b8
1003b07f:	cmp    eax,0x20
1003b082:	jmp    0x1003b0b2
1003b084:	cmp    eax,0x1680
1003b089:	jmp    0x1003b0b2
1003b08b:	cmp    eax,0x205f
1003b090:	ja     0x1003b0ad
1003b092:	je     0x1003b0b8
1003b094:	cmp    eax,0x2000
1003b099:	jb     0x1003c74f
1003b09f:	cmp    eax,0x200a
1003b0a4:	jbe    0x1003b0b8
1003b0a6:	cmp    eax,0x202f
1003b0ab:	jmp    0x1003b0b2
1003b0ad:	cmp    eax,0x3000
1003b0b2:	jne    0x1003c74f
1003b0b8:	add    ebx,0x1
1003b0bb:	jmp    0x1003a5dc
1003b0c0:	cmp    ebp,DWORD PTR [edi+0x5c]
1003b0c3:	jae    0x1003c74f
1003b0c9:	movzx  eax,BYTE PTR [ebp+0x0]
1003b0cd:	add    ebp,0x1
1003b0d0:	cmp    eax,0x85
1003b0d5:	ja     0x1003b0e7
1003b0d7:	je     0x1003c74f
1003b0dd:	cmp    eax,0xa
1003b0e0:	jb     0x1003b0f9
1003b0e2:	cmp    eax,0xd
1003b0e5:	jmp    0x1003b0f3
1003b0e7:	cmp    eax,0x2028
1003b0ec:	jb     0x1003b0f9
1003b0ee:	cmp    eax,0x2029
1003b0f3:	jbe    0x1003c74f
1003b0f9:	add    ebx,0x1
1003b0fc:	jmp    0x1003a5dc
1003b101:	cmp    ebp,DWORD PTR [edi+0x5c]
1003b104:	jae    0x1003c74f
1003b10a:	movzx  eax,BYTE PTR [ebp+0x0]
1003b10e:	add    ebp,0x1
1003b111:	cmp    eax,0x85
1003b116:	ja     0x1003b128
1003b118:	je     0x1003b13e
1003b11a:	cmp    eax,0xa
1003b11d:	jb     0x1003c74f
1003b123:	cmp    eax,0xd
1003b126:	jmp    0x1003b138
1003b128:	cmp    eax,0x2028
1003b12d:	jb     0x1003c74f
1003b133:	cmp    eax,0x2029
1003b138:	ja     0x1003c74f
1003b13e:	add    ebx,0x1
1003b141:	jmp    0x1003a5dc
1003b146:	xor    eax,eax
1003b148:	mov    ah,BYTE PTR [ebx+0x1]
1003b14b:	add    ebx,0x3
1003b14e:	mov    al,BYTE PTR [ebx-0x1]
1003b151:	add    eax,eax
1003b153:	cmp    eax,DWORD PTR [esp+0x108]
1003b15a:	mov    DWORD PTR [esp+0x24],eax
1003b15e:	jge    0x1003b174
1003b160:	mov    edx,DWORD PTR [edi+0xc]
1003b163:	mov    ecx,DWORD PTR [edx+eax*4]
1003b166:	test   ecx,ecx
1003b168:	lea    eax,[edx+eax*4]
1003b16b:	jl     0x1003b174
1003b16d:	mov    esi,DWORD PTR [eax+0x4]
1003b170:	sub    esi,ecx
1003b172:	jmp    0x1003b186
1003b174:	cmp    DWORD PTR [edi+0x3c],0x0
1003b178:	je     0x1003b17e
1003b17a:	xor    esi,esi
1003b17c:	jmp    0x1003b186
1003b17e:	mov    esi,DWORD PTR [edi+0x5c]
1003b181:	sub    esi,ebp
1003b183:	add    esi,0x1
1003b186:	mov    cl,BYTE PTR [ebx]
1003b188:	movzx  eax,cl
1003b18b:	lea    edx,[eax-0x46]
1003b18e:	cmp    edx,0x7
1003b191:	ja     0x1003b337
1003b197:	movzx  edx,BYTE PTR [edx+0x1003d214]
1003b19e:	jmp    DWORD PTR [edx*4+0x1003d20c]
1003b1a5:	add    eax,0xffffffba
1003b1a8:	mov    ecx,eax
1003b1aa:	and    ecx,0x1
1003b1ad:	mov    DWORD PTR [esp+0x20],ecx
1003b1b1:	movsx  ecx,BYTE PTR [eax+0x1006f568]
1003b1b8:	movsx  eax,BYTE PTR [eax+0x1006f570]
1003b1bf:	add    ebx,0x1
1003b1c2:	test   eax,eax
1003b1c4:	mov    DWORD PTR [esp+0x1c],ecx
1003b1c8:	mov    DWORD PTR [esp+0x14],eax
1003b1cc:	jne    0x1003b20b
1003b1ce:	mov    DWORD PTR [esp+0x14],0x7fffffff
1003b1d6:	jmp    0x1003b20b
1003b1d8:	xor    edx,edx
1003b1da:	cmp    cl,0x4d
1003b1dd:	sete   dl
1003b1e0:	xor    eax,eax
1003b1e2:	mov    ah,BYTE PTR [ebx+0x1]
1003b1e5:	mov    DWORD PTR [esp+0x20],edx
1003b1e9:	mov    al,BYTE PTR [ebx+0x2]
1003b1ec:	mov    DWORD PTR [esp+0x1c],eax
1003b1f0:	xor    eax,eax
1003b1f2:	mov    ah,BYTE PTR [ebx+0x3]
1003b1f5:	mov    al,BYTE PTR [ebx+0x4]
1003b1f8:	test   eax,eax
1003b1fa:	mov    DWORD PTR [esp+0x14],eax
1003b1fe:	jne    0x1003b208
1003b200:	mov    DWORD PTR [esp+0x14],0x7fffffff
1003b208:	add    ebx,0x5
1003b20b:	test   esi,esi
1003b20d:	je     0x1003a5dc
1003b213:	mov    eax,0x1
1003b218:	cmp    DWORD PTR [esp+0x1c],eax
1003b21c:	mov    DWORD PTR [esp+0x18],eax
1003b220:	jl     0x1003b256
1003b222:	mov    ecx,DWORD PTR [esp+0x110]
1003b229:	mov    edx,DWORD PTR [esp+0x24]
1003b22d:	push   ecx
1003b22e:	push   ebp
1003b22f:	mov    ecx,edi
1003b231:	mov    eax,esi
1003b233:	call   0x1003a4f0
1003b238:	add    esp,0x8
1003b23b:	test   eax,eax
1003b23d:	je     0x1003c74f
1003b243:	mov    eax,DWORD PTR [esp+0x18]
1003b247:	add    eax,0x1
1003b24a:	add    ebp,esi
1003b24c:	cmp    eax,DWORD PTR [esp+0x1c]
1003b250:	mov    DWORD PTR [esp+0x18],eax
1003b254:	jle    0x1003b222
1003b256:	mov    eax,DWORD PTR [esp+0x1c]
1003b25a:	mov    ecx,DWORD PTR [esp+0x14]
1003b25e:	cmp    eax,ecx
1003b260:	je     0x1003a5dc
1003b266:	cmp    DWORD PTR [esp+0x20],0x0
1003b26b:	je     0x1003c9cf
1003b271:	mov    ecx,DWORD PTR [esp+0x110]
1003b278:	mov    edx,eax
1003b27a:	mov    eax,DWORD PTR [esp+0x11c]
1003b281:	add    eax,0x1
1003b284:	push   eax
1003b285:	push   0x0
1003b287:	mov    DWORD PTR [esp+0x24],eax
1003b28b:	mov    eax,DWORD PTR [esp+0x11c]
1003b292:	push   eax
1003b293:	mov    eax,DWORD PTR [esp+0x110]
1003b29a:	push   ecx
1003b29b:	push   edi
1003b29c:	mov    DWORD PTR [esp+0x2c],edx
1003b2a0:	mov    edx,DWORD PTR [esp+0x11c]
1003b2a7:	push   edx
1003b2a8:	push   eax
1003b2a9:	push   ebx
1003b2aa:	push   ebp
1003b2ab:	call   0x1003a570
1003b2b0:	add    esp,0x24
1003b2b3:	test   eax,eax
1003b2b5:	jne    0x1003d076
1003b2bb:	jmp    0x1003b2c0
1003b2bd:	lea    ecx,[ecx+0x0]
1003b2c0:	mov    ecx,DWORD PTR [esp+0x14]
1003b2c4:	cmp    DWORD PTR [esp+0x18],ecx
1003b2c8:	jge    0x1003c74f
1003b2ce:	mov    edx,DWORD PTR [esp+0x110]
1003b2d5:	push   edx
1003b2d6:	mov    edx,DWORD PTR [esp+0x28]
1003b2da:	push   ebp
1003b2db:	mov    ecx,edi
1003b2dd:	mov    eax,esi
1003b2df:	call   0x1003a4f0
1003b2e4:	add    esp,0x8
1003b2e7:	test   eax,eax
1003b2e9:	je     0x1003c74f
1003b2ef:	mov    eax,DWORD PTR [esp+0x1c]
1003b2f3:	mov    ecx,DWORD PTR [esp+0x114]
1003b2fa:	mov    edx,DWORD PTR [esp+0x110]
1003b301:	add    DWORD PTR [esp+0x18],0x1
1003b306:	push   eax
1003b307:	mov    eax,DWORD PTR [esp+0x10c]
1003b30e:	push   0x0
1003b310:	push   ecx
1003b311:	mov    ecx,DWORD PTR [esp+0x110]
1003b318:	push   edx
1003b319:	push   edi
1003b31a:	push   eax
1003b31b:	push   ecx
1003b31c:	add    ebp,esi
1003b31e:	push   ebx
1003b31f:	push   ebp
1003b320:	call   0x1003a570
1003b325:	add    esp,0x24
1003b328:	test   eax,eax
1003b32a:	je     0x1003b2c0
1003b32c:	pop    edi
1003b32d:	pop    esi
1003b32e:	pop    ebp
1003b32f:	pop    ebx
1003b330:	add    esp,0xe8
1003b336:	ret    
1003b337:	mov    edx,DWORD PTR [esp+0x110]
1003b33e:	push   edx
1003b33f:	mov    edx,DWORD PTR [esp+0x28]
1003b343:	push   ebp
1003b344:	mov    ecx,edi
1003b346:	mov    eax,esi
1003b348:	call   0x1003a4f0
1003b34d:	add    esp,0x8
1003b350:	test   eax,eax
1003b352:	je     0x1003c74f
1003b358:	add    ebp,esi
1003b35a:	jmp    0x1003a5dc
1003b35f:	mov    cl,BYTE PTR [ebx+0x21]
1003b362:	lea    eax,[ebx+0x1]
1003b365:	add    ebx,0x21
1003b368:	mov    DWORD PTR [esp+0x24],eax
1003b36c:	movzx  eax,cl
1003b36f:	lea    esi,[eax-0x46]
1003b372:	cmp    esi,0x7
1003b375:	ja     0x1003b3e9
1003b37b:	movzx  esi,BYTE PTR [esi+0x1003d224]
1003b382:	jmp    DWORD PTR [esi*4+0x1003d21c]
1003b389:	movsx  esi,BYTE PTR [eax+0x1006f52a]
1003b390:	movsx  ecx,BYTE PTR [eax+0x1006f522]
1003b397:	add    eax,0xffffffba
1003b39a:	mov    edx,eax
1003b39c:	add    ebx,0x1
1003b39f:	and    edx,0x1
1003b3a2:	test   esi,esi
1003b3a4:	mov    DWORD PTR [esp+0x1c],ecx
1003b3a8:	mov    DWORD PTR [esp+0x14],esi
1003b3ac:	jne    0x1003b3f6
1003b3ae:	mov    esi,0x7fffffff
1003b3b3:	jmp    0x1003b3f2
1003b3b5:	xor    edx,edx
1003b3b7:	cmp    cl,0x4d
1003b3ba:	sete   dl
1003b3bd:	xor    ecx,ecx
1003b3bf:	mov    ch,BYTE PTR [ebx+0x3]
1003b3c2:	xor    eax,eax
1003b3c4:	mov    ah,BYTE PTR [ebx+0x1]
1003b3c7:	mov    cl,BYTE PTR [ebx+0x4]
1003b3ca:	mov    al,BYTE PTR [ebx+0x2]
1003b3cd:	mov    esi,ecx
1003b3cf:	test   esi,esi
1003b3d1:	mov    DWORD PTR [esp+0x1c],eax
1003b3d5:	mov    DWORD PTR [esp+0x14],ecx
1003b3d9:	jne    0x1003b3e4
1003b3db:	mov    esi,0x7fffffff
1003b3e0:	mov    DWORD PTR [esp+0x14],esi
1003b3e4:	add    ebx,0x5
1003b3e7:	jmp    0x1003b3f6
1003b3e9:	mov    esi,0x1
1003b3ee:	mov    DWORD PTR [esp+0x1c],esi
1003b3f2:	mov    DWORD PTR [esp+0x14],esi
1003b3f6:	mov    eax,0x1
1003b3fb:	cmp    DWORD PTR [esp+0x1c],eax
1003b3ff:	mov    DWORD PTR [esp+0x18],eax
1003b403:	jl     0x1003b448
1003b405:	cmp    ebp,DWORD PTR [edi+0x5c]
1003b408:	jae    0x1003c74f
1003b40e:	movzx  esi,BYTE PTR [ebp+0x0]
1003b412:	mov    ecx,esi
1003b414:	and    ecx,0x7
1003b417:	mov    eax,0x1
1003b41c:	shl    eax,cl
1003b41e:	mov    ecx,DWORD PTR [esp+0x24]
1003b422:	shr    esi,0x3
1003b425:	mov    cl,BYTE PTR [esi+ecx*1]
1003b428:	add    ebp,0x1
1003b42b:	test   cl,al
1003b42d:	je     0x1003c74f
1003b433:	mov    eax,DWORD PTR [esp+0x18]
1003b437:	add    eax,0x1
1003b43a:	cmp    eax,DWORD PTR [esp+0x1c]
1003b43e:	mov    DWORD PTR [esp+0x18],eax
1003b442:	jle    0x1003b405
1003b444:	mov    esi,DWORD PTR [esp+0x14]
1003b448:	mov    eax,DWORD PTR [esp+0x1c]
1003b44c:	cmp    eax,esi
1003b44e:	je     0x1003a5dc
1003b454:	test   edx,edx
1003b456:	mov    DWORD PTR [esp+0x18],eax
1003b45a:	je     0x1003ca6e
1003b460:	mov    eax,DWORD PTR [esp+0x11c]
1003b467:	mov    ecx,DWORD PTR [esp+0x110]
1003b46e:	mov    edx,DWORD PTR [esp+0x108]
1003b475:	add    eax,0x1
1003b478:	push   eax
1003b479:	push   0x0
1003b47b:	mov    DWORD PTR [esp+0x24],eax
1003b47f:	mov    eax,DWORD PTR [esp+0x11c]
1003b486:	push   eax
1003b487:	mov    eax,DWORD PTR [esp+0x110]
1003b48e:	push   ecx
1003b48f:	push   edi
1003b490:	push   edx
1003b491:	push   eax
1003b492:	push   ebx
1003b493:	push   ebp
1003b494:	call   0x1003a570
1003b499:	add    esp,0x24
1003b49c:	test   eax,eax
1003b49e:	jne    0x1003d076
1003b4a4:	cmp    DWORD PTR [esp+0x18],esi
1003b4a8:	jge    0x1003c74f
1003b4ae:	cmp    ebp,DWORD PTR [edi+0x5c]
1003b4b1:	jae    0x1003c74f
1003b4b7:	movzx  eax,BYTE PTR [ebp+0x0]
1003b4bb:	mov    ecx,eax
1003b4bd:	and    ecx,0x7
1003b4c0:	mov    edx,0x1
1003b4c5:	shl    edx,cl
1003b4c7:	mov    ecx,DWORD PTR [esp+0x24]
1003b4cb:	shr    eax,0x3
1003b4ce:	mov    al,BYTE PTR [eax+ecx*1]
1003b4d1:	add    ebp,0x1
1003b4d4:	test   al,dl
1003b4d6:	je     0x1003c74f
1003b4dc:	mov    ecx,DWORD PTR [esp+0x1c]
1003b4e0:	mov    edx,DWORD PTR [esp+0x114]
1003b4e7:	mov    eax,DWORD PTR [esp+0x110]
1003b4ee:	add    DWORD PTR [esp+0x18],0x1
1003b4f3:	push   ecx
1003b4f4:	mov    ecx,DWORD PTR [esp+0x10c]
1003b4fb:	push   0x0
1003b4fd:	push   edx
1003b4fe:	mov    edx,DWORD PTR [esp+0x110]
1003b505:	push   eax
1003b506:	push   edi
1003b507:	push   ecx
1003b508:	push   edx
1003b509:	push   ebx
1003b50a:	push   ebp
1003b50b:	call   0x1003a570
1003b510:	add    esp,0x24
1003b513:	test   eax,eax
1003b515:	je     0x1003b4a4
1003b517:	pop    edi
1003b518:	pop    esi
1003b519:	pop    ebp
1003b51a:	pop    ebx
1003b51b:	add    esp,0xe8
1003b521:	ret    
1003b522:	mov    edx,DWORD PTR [edi+0x5c]
1003b525:	sub    edx,ebp
1003b527:	cmp    edx,0x1
1003b52a:	jl     0x1003c74f
1003b530:	mov    al,BYTE PTR [ebp+0x0]
1003b533:	add    ebp,0x1
1003b536:	cmp    BYTE PTR [ebx+0x1],al
1003b539:	jne    0x1003c74f
1003b53f:	add    ebx,0x2
1003b542:	jmp    0x1003a5dc
1003b547:	mov    ecx,DWORD PTR [edi+0x5c]
1003b54a:	sub    ecx,ebp
1003b54c:	cmp    ecx,0x1
1003b54f:	jl     0x1003c74f
1003b555:	movzx  ecx,BYTE PTR [ebp+0x0]
1003b559:	mov    eax,DWORD PTR [edi+0x24]
1003b55c:	movzx  edx,BYTE PTR [ebx+0x1]
1003b560:	mov    cl,BYTE PTR [ecx+eax*1]
1003b563:	add    ebp,0x1
1003b566:	cmp    BYTE PTR [edx+eax*1],cl
1003b569:	jne    0x1003c74f
1003b56f:	add    ebx,0x2
1003b572:	jmp    0x1003a5dc
1003b577:	xor    eax,eax
1003b579:	mov    ah,BYTE PTR [ebx+0x1]
1003b57c:	add    ebx,0x3
1003b57f:	mov    al,BYTE PTR [ebx-0x1]
1003b582:	mov    esi,eax
1003b584:	jmp    0x1003b602
1003b589:	mov    DWORD PTR [esp+0x1c],0x1
1003b591:	xor    ecx,ecx
1003b593:	mov    ch,BYTE PTR [ebx+0x1]
1003b596:	xor    edx,edx
1003b598:	xor    eax,eax
1003b59a:	cmp    BYTE PTR [ebx],0x26
1003b59d:	sete   dl
1003b5a0:	add    ebx,0x3
1003b5a3:	mov    cl,BYTE PTR [ebx-0x1]
1003b5a6:	mov    DWORD PTR [esp+0x20],edx
1003b5aa:	mov    esi,ecx
1003b5ac:	jmp    0x1003b602
1003b5ae:	xor    eax,eax
1003b5b0:	mov    DWORD PTR [esp+0x1c],0x1
1003b5b8:	add    ebx,0x1
1003b5bb:	jmp    0x1003b5fd
1003b5bd:	mov    eax,0x1
1003b5c2:	mov    DWORD PTR [esp+0x1c],eax
1003b5c6:	add    ebx,eax
1003b5c8:	jmp    0x1003b5fd
1003b5ca:	mov    esi,0x1
1003b5cf:	xor    eax,eax
1003b5d1:	mov    DWORD PTR [esp+0x1c],esi
1003b5d5:	add    ebx,esi
1003b5d7:	jmp    0x1003b602
1003b5d9:	movzx  ecx,BYTE PTR [ebx]
1003b5dc:	movsx  esi,BYTE PTR [ecx+0x1006f551]
1003b5e3:	movsx  eax,BYTE PTR [ecx+0x1006f549]
1003b5ea:	sub    ecx,0x1f
1003b5ed:	mov    edx,ecx
1003b5ef:	and    edx,0x1
1003b5f2:	add    ebx,0x1
1003b5f5:	test   esi,esi
1003b5f7:	mov    DWORD PTR [esp+0x20],edx
1003b5fb:	jne    0x1003b602
1003b5fd:	mov    esi,0x7fffffff
1003b602:	mov    ecx,DWORD PTR [edi+0x5c]
1003b605:	sub    ecx,ebp
1003b607:	cmp    eax,ecx
1003b609:	jg     0x1003c74f
1003b60f:	movzx  ecx,BYTE PTR [ebx]
1003b612:	add    ebx,0x1
1003b615:	test   BYTE PTR [esp+0x110],0x1
1003b61d:	mov    DWORD PTR [esp+0x14],ecx
1003b621:	mov    DWORD PTR [esp+0x18],0x1
1003b629:	je     0x1003b70c
1003b62f:	cmp    eax,0x1
1003b632:	mov    edx,DWORD PTR [esp+0x14]
1003b636:	mov    ecx,DWORD PTR [edi+0x24]
1003b639:	movzx  ecx,BYTE PTR [ecx+edx*1]
1003b63d:	mov    DWORD PTR [esp+0x14],ecx
1003b641:	jl     0x1003b66a
1003b643:	movzx  edx,BYTE PTR [ebp+0x0]
1003b647:	mov    ecx,DWORD PTR [edi+0x24]
1003b64a:	movzx  ecx,BYTE PTR [edx+ecx*1]
1003b64e:	add    ebp,0x1
1003b651:	cmp    DWORD PTR [esp+0x14],ecx
1003b655:	jne    0x1003c74f
1003b65b:	mov    ecx,DWORD PTR [esp+0x18]
1003b65f:	add    ecx,0x1
1003b662:	cmp    ecx,eax
1003b664:	mov    DWORD PTR [esp+0x18],ecx
1003b668:	jle    0x1003b643
1003b66a:	cmp    eax,esi
1003b66c:	je     0x1003a5dc
1003b672:	cmp    DWORD PTR [esp+0x20],0x0
1003b677:	jne    0x1003cb07
1003b67d:	cmp    eax,esi
1003b67f:	mov    DWORD PTR [esp+0x20],ebp
1003b683:	jge    0x1003b6a5
1003b685:	cmp    ebp,DWORD PTR [edi+0x5c]
1003b688:	jae    0x1003b6a5
1003b68a:	movzx  edx,BYTE PTR [ebp+0x0]
1003b68e:	mov    ecx,DWORD PTR [edi+0x24]
1003b691:	movzx  ecx,BYTE PTR [edx+ecx*1]
1003b695:	cmp    DWORD PTR [esp+0x14],ecx
1003b699:	jne    0x1003b6a5
1003b69b:	add    eax,0x1
1003b69e:	add    ebp,0x1
1003b6a1:	cmp    eax,esi
1003b6a3:	jl     0x1003b685
1003b6a5:	cmp    DWORD PTR [esp+0x1c],0x0
1003b6aa:	jne    0x1003a5dc
1003b6b0:	cmp    ebp,DWORD PTR [esp+0x20]
1003b6b4:	jb     0x1003b6ff
1003b6b6:	mov    esi,DWORD PTR [esp+0x11c]
1003b6bd:	add    esi,0x1
1003b6c0:	mov    edx,DWORD PTR [esp+0x114]
1003b6c7:	mov    eax,DWORD PTR [esp+0x110]
1003b6ce:	mov    ecx,DWORD PTR [esp+0x108]
1003b6d5:	push   esi
1003b6d6:	push   0x0
1003b6d8:	push   edx
1003b6d9:	mov    edx,DWORD PTR [esp+0x110]
1003b6e0:	push   eax
1003b6e1:	push   edi
1003b6e2:	push   ecx
1003b6e3:	push   edx
1003b6e4:	push   ebx
1003b6e5:	push   ebp
1003b6e6:	call   0x1003a570
1003b6eb:	add    esp,0x24
1003b6ee:	sub    ebp,0x1
1003b6f1:	test   eax,eax
1003b6f3:	jne    0x1003d076
1003b6f9:	cmp    ebp,DWORD PTR [esp+0x20]
1003b6fd:	jae    0x1003b6c0
1003b6ff:	xor    eax,eax
1003b701:	pop    edi
1003b702:	pop    esi
1003b703:	pop    ebp
1003b704:	pop    ebx
1003b705:	add    esp,0xe8
1003b70b:	ret    
1003b70c:	cmp    eax,0x1
1003b70f:	jl     0x1003b737
1003b711:	mov    edx,DWORD PTR [esp+0x14]
1003b715:	movzx  ecx,BYTE PTR [ebp+0x0]
1003b719:	add    ebp,0x1
1003b71c:	cmp    edx,ecx
1003b71e:	jne    0x1003c74f
1003b724:	mov    ecx,DWORD PTR [esp+0x18]
1003b728:	add    ecx,0x1
1003b72b:	cmp    ecx,eax
1003b72d:	mov    DWORD PTR [esp+0x18],ecx
1003b731:	jle    0x1003b715
1003b733:	mov    edx,DWORD PTR [esp+0x20]
1003b737:	cmp    eax,esi
1003b739:	je     0x1003a5dc
1003b73f:	test   edx,edx
1003b741:	jne    0x1003cbc1
1003b747:	cmp    eax,esi
1003b749:	mov    ecx,ebp
1003b74b:	mov    DWORD PTR [esp+0x20],ecx
1003b74f:	jge    0x1003b76a
1003b751:	cmp    ebp,DWORD PTR [edi+0x5c]
1003b754:	jae    0x1003b76a
1003b756:	movzx  edx,BYTE PTR [ebp+0x0]
1003b75a:	cmp    DWORD PTR [esp+0x14],edx
1003b75e:	jne    0x1003b76a
1003b760:	add    eax,0x1
1003b763:	add    ebp,0x1
1003b766:	cmp    eax,esi
1003b768:	jl     0x1003b751
1003b76a:	cmp    DWORD PTR [esp+0x1c],0x0
1003b76f:	jne    0x1003a5dc
1003b775:	cmp    ebp,ecx
1003b777:	jb     0x1003b7c2
1003b779:	mov    esi,DWORD PTR [esp+0x11c]
1003b780:	add    esi,0x1
1003b783:	mov    ecx,DWORD PTR [esp+0x114]
1003b78a:	mov    edx,DWORD PTR [esp+0x110]
1003b791:	mov    eax,DWORD PTR [esp+0x108]
1003b798:	push   esi
1003b799:	push   0x0
1003b79b:	push   ecx
1003b79c:	mov    ecx,DWORD PTR [esp+0x110]
1003b7a3:	push   edx
1003b7a4:	push   edi
1003b7a5:	push   eax
1003b7a6:	push   ecx
1003b7a7:	push   ebx
1003b7a8:	push   ebp
1003b7a9:	call   0x1003a570
1003b7ae:	add    esp,0x24
1003b7b1:	sub    ebp,0x1
1003b7b4:	test   eax,eax
1003b7b6:	jne    0x1003d076
1003b7bc:	cmp    ebp,DWORD PTR [esp+0x20]
1003b7c0:	jae    0x1003b783
1003b7c2:	xor    eax,eax
1003b7c4:	pop    edi
1003b7c5:	pop    esi
1003b7c6:	pop    ebp
1003b7c7:	pop    ebx
1003b7c8:	add    esp,0xe8
1003b7ce:	ret    
1003b7cf:	cmp    ebp,DWORD PTR [edi+0x5c]
1003b7d2:	jae    0x1003c74f
1003b7d8:	movzx  esi,BYTE PTR [ebp+0x0]
1003b7dc:	add    ebx,0x1
1003b7df:	add    ebp,0x1
1003b7e2:	test   BYTE PTR [esp+0x110],0x1
1003b7ea:	je     0x1003b80e
1003b7ec:	mov    eax,DWORD PTR [edi+0x24]
1003b7ef:	movzx  ecx,BYTE PTR [ebx]
1003b7f2:	mov    dl,BYTE PTR [eax+esi*1]
1003b7f5:	add    ebx,0x1
1003b7f8:	cmp    BYTE PTR [ecx+eax*1],dl
1003b7fb:	jne    0x1003a5dc
1003b801:	xor    eax,eax
1003b803:	pop    edi
1003b804:	pop    esi
1003b805:	pop    ebp
1003b806:	pop    ebx
1003b807:	add    esp,0xe8
1003b80d:	ret    
1003b80e:	movzx  eax,BYTE PTR [ebx]
1003b811:	add    ebx,0x1
1003b814:	cmp    eax,esi
1003b816:	jne    0x1003a5dc
1003b81c:	xor    eax,eax
1003b81e:	pop    edi
1003b81f:	pop    esi
1003b820:	pop    ebp
1003b821:	pop    ebx
1003b822:	add    esp,0xe8
1003b828:	ret    
1003b829:	xor    ecx,ecx
1003b82b:	mov    ch,BYTE PTR [ebx+0x1]
1003b82e:	add    ebx,0x3
1003b831:	mov    cl,BYTE PTR [ebx-0x1]
1003b834:	mov    esi,ecx
1003b836:	mov    eax,esi
1003b838:	jmp    0x1003b8ca
1003b83d:	xor    edx,edx
1003b83f:	mov    dh,BYTE PTR [ebx+0x1]
1003b842:	xor    eax,eax
1003b844:	mov    dl,BYTE PTR [ebx+0x2]
1003b847:	mov    esi,edx
1003b849:	xor    edx,edx
1003b84b:	cmp    BYTE PTR [ebx],0x33
1003b84e:	sete   dl
1003b851:	add    ebx,0x3
1003b854:	mov    DWORD PTR [esp+0x20],edx
1003b858:	jmp    0x1003b8ca
1003b85d:	xor    eax,eax
1003b85f:	mov    DWORD PTR [esp+0x1c],0x1
1003b867:	add    ebx,0x1
1003b86a:	jmp    0x1003b8c5
1003b86c:	mov    eax,0x1
1003b871:	mov    DWORD PTR [esp+0x1c],eax
1003b875:	add    ebx,eax
1003b877:	jmp    0x1003b8c5
1003b879:	mov    esi,0x1
1003b87e:	xor    eax,eax
1003b880:	mov    DWORD PTR [esp+0x1c],esi
1003b884:	add    ebx,esi
1003b886:	jmp    0x1003b8ca
1003b888:	xor    ecx,ecx
1003b88a:	mov    ch,BYTE PTR [ebx+0x1]
1003b88d:	xor    eax,eax
1003b88f:	mov    DWORD PTR [esp+0x1c],0x1
1003b897:	add    ebx,0x3
1003b89a:	mov    cl,BYTE PTR [ebx-0x1]
1003b89d:	mov    esi,ecx
1003b89f:	jmp    0x1003b8ca
1003b8a1:	movzx  ecx,BYTE PTR [ebx]
1003b8a4:	movsx  esi,BYTE PTR [ecx+0x1006f544]
1003b8ab:	movsx  eax,BYTE PTR [ecx+0x1006f53c]
1003b8b2:	sub    ecx,0x2c
1003b8b5:	mov    edx,ecx
1003b8b7:	and    edx,0x1
1003b8ba:	add    ebx,0x1
1003b8bd:	test   esi,esi
1003b8bf:	mov    DWORD PTR [esp+0x20],edx
1003b8c3:	jne    0x1003b8ca
1003b8c5:	mov    esi,0x7fffffff
1003b8ca:	mov    ecx,DWORD PTR [edi+0x5c]
1003b8cd:	sub    ecx,ebp
1003b8cf:	cmp    eax,ecx
1003b8d1:	jg     0x1003c74f
1003b8d7:	movzx  ecx,BYTE PTR [ebx]
1003b8da:	add    ebx,0x1
1003b8dd:	test   BYTE PTR [esp+0x110],0x1
1003b8e5:	mov    DWORD PTR [esp+0x14],ecx
1003b8e9:	mov    DWORD PTR [esp+0x18],0x1
1003b8f1:	je     0x1003b9d9
1003b8f7:	cmp    eax,0x1
1003b8fa:	mov    edx,DWORD PTR [esp+0x14]
1003b8fe:	mov    ecx,DWORD PTR [edi+0x24]
1003b901:	movzx  ecx,BYTE PTR [ecx+edx*1]
1003b905:	mov    DWORD PTR [esp+0x14],ecx
1003b909:	jl     0x1003b937
1003b90b:	jmp    0x1003b910
1003b90d:	lea    ecx,[ecx+0x0]
1003b910:	movzx  edx,BYTE PTR [ebp+0x0]
1003b914:	mov    ecx,DWORD PTR [edi+0x24]
1003b917:	movzx  ecx,BYTE PTR [edx+ecx*1]
1003b91b:	add    ebp,0x1
1003b91e:	cmp    DWORD PTR [esp+0x14],ecx
1003b922:	je     0x1003c74f
1003b928:	mov    ecx,DWORD PTR [esp+0x18]
1003b92c:	add    ecx,0x1
1003b92f:	cmp    ecx,eax
1003b931:	mov    DWORD PTR [esp+0x18],ecx
1003b935:	jle    0x1003b910
1003b937:	cmp    eax,esi
1003b939:	je     0x1003a5dc
1003b93f:	cmp    DWORD PTR [esp+0x20],0x0
1003b944:	jne    0x1003cc7a
1003b94a:	cmp    eax,esi
1003b94c:	mov    DWORD PTR [esp+0x20],ebp
1003b950:	jge    0x1003b972
1003b952:	cmp    ebp,DWORD PTR [edi+0x5c]
1003b955:	jae    0x1003b972
1003b957:	movzx  edx,BYTE PTR [ebp+0x0]
1003b95b:	mov    ecx,DWORD PTR [edi+0x24]
1003b95e:	movzx  ecx,BYTE PTR [edx+ecx*1]
1003b962:	cmp    DWORD PTR [esp+0x14],ecx
1003b966:	je     0x1003b972
1003b968:	add    eax,0x1
1003b96b:	add    ebp,0x1
1003b96e:	cmp    eax,esi
1003b970:	jl     0x1003b952
1003b972:	cmp    DWORD PTR [esp+0x1c],0x0
1003b977:	jne    0x1003a5dc
1003b97d:	cmp    ebp,DWORD PTR [esp+0x20]
1003b981:	jb     0x1003b9cc
1003b983:	mov    esi,DWORD PTR [esp+0x11c]
1003b98a:	add    esi,0x1
1003b98d:	mov    edx,DWORD PTR [esp+0x114]
1003b994:	mov    eax,DWORD PTR [esp+0x110]
1003b99b:	mov    ecx,DWORD PTR [esp+0x108]
1003b9a2:	push   esi
1003b9a3:	push   0x0
1003b9a5:	push   edx
1003b9a6:	mov    edx,DWORD PTR [esp+0x110]
1003b9ad:	push   eax
1003b9ae:	push   edi
1003b9af:	push   ecx
1003b9b0:	push   edx
1003b9b1:	push   ebx
1003b9b2:	push   ebp
1003b9b3:	call   0x1003a570
1003b9b8:	add    esp,0x24
1003b9bb:	test   eax,eax
1003b9bd:	jne    0x1003d076
1003b9c3:	sub    ebp,0x1
1003b9c6:	cmp    ebp,DWORD PTR [esp+0x20]
1003b9ca:	jae    0x1003b98d
1003b9cc:	xor    eax,eax
1003b9ce:	pop    edi
1003b9cf:	pop    esi
1003b9d0:	pop    ebp
1003b9d1:	pop    ebx
1003b9d2:	add    esp,0xe8
1003b9d8:	ret    
1003b9d9:	cmp    eax,0x1
1003b9dc:	jl     0x1003ba04
1003b9de:	mov    edx,DWORD PTR [esp+0x14]
1003b9e2:	movzx  ecx,BYTE PTR [ebp+0x0]
1003b9e6:	add    ebp,0x1
1003b9e9:	cmp    edx,ecx
1003b9eb:	je     0x1003c74f
1003b9f1:	mov    ecx,DWORD PTR [esp+0x18]
1003b9f5:	add    ecx,0x1
1003b9f8:	cmp    ecx,eax
1003b9fa:	mov    DWORD PTR [esp+0x18],ecx
1003b9fe:	jle    0x1003b9e2
1003ba00:	mov    edx,DWORD PTR [esp+0x20]
1003ba04:	cmp    eax,esi
1003ba06:	je     0x1003a5dc
1003ba0c:	test   edx,edx
1003ba0e:	jne    0x1003cd33
1003ba14:	cmp    eax,esi
1003ba16:	mov    ecx,ebp
1003ba18:	mov    DWORD PTR [esp+0x20],ecx
1003ba1c:	jge    0x1003ba37
1003ba1e:	cmp    ebp,DWORD PTR [edi+0x5c]
1003ba21:	jae    0x1003ba37
1003ba23:	movzx  edx,BYTE PTR [ebp+0x0]
1003ba27:	cmp    DWORD PTR [esp+0x14],edx
1003ba2b:	je     0x1003ba37
1003ba2d:	add    eax,0x1
1003ba30:	add    ebp,0x1
1003ba33:	cmp    eax,esi
1003ba35:	jl     0x1003ba1e
1003ba37:	cmp    DWORD PTR [esp+0x1c],0x0
1003ba3c:	jne    0x1003a5dc
1003ba42:	cmp    ebp,ecx
1003ba44:	jb     0x1003ba8f
1003ba46:	mov    esi,DWORD PTR [esp+0x11c]
1003ba4d:	add    esi,0x1
1003ba50:	mov    ecx,DWORD PTR [esp+0x114]
1003ba57:	mov    edx,DWORD PTR [esp+0x110]
1003ba5e:	mov    eax,DWORD PTR [esp+0x108]
1003ba65:	push   esi
1003ba66:	push   0x0
1003ba68:	push   ecx
1003ba69:	mov    ecx,DWORD PTR [esp+0x110]
1003ba70:	push   edx
1003ba71:	push   edi
1003ba72:	push   eax
1003ba73:	push   ecx
1003ba74:	push   ebx
1003ba75:	push   ebp
1003ba76:	call   0x1003a570
1003ba7b:	add    esp,0x24
1003ba7e:	test   eax,eax
1003ba80:	jne    0x1003d076
1003ba86:	sub    ebp,0x1
1003ba89:	cmp    ebp,DWORD PTR [esp+0x20]
1003ba8d:	jae    0x1003ba50
1003ba8f:	xor    eax,eax
1003ba91:	pop    edi
1003ba92:	pop    esi
1003ba93:	pop    ebp
1003ba94:	pop    ebx
1003ba95:	add    esp,0xe8
1003ba9b:	ret    
1003ba9c:	xor    eax,eax
1003ba9e:	mov    ah,BYTE PTR [ebx+0x1]
1003baa1:	mov    DWORD PTR [esp+0x20],0x1
1003baa9:	add    ebx,0x3
1003baac:	mov    al,BYTE PTR [ebx-0x1]
1003baaf:	mov    esi,eax
1003bab1:	mov    DWORD PTR [esp+0x14],esi
1003bab5:	jmp    0x1003bb59
1003baba:	xor    ecx,ecx
1003babc:	mov    ch,BYTE PTR [ebx+0x1]
1003babf:	xor    edx,edx
1003bac1:	xor    esi,esi
1003bac3:	cmp    BYTE PTR [ebx],0x40
1003bac6:	sete   dl
1003bac9:	add    ebx,0x3
1003bacc:	mov    cl,BYTE PTR [ebx-0x1]
1003bacf:	mov    DWORD PTR [esp+0x20],edx
1003bad3:	mov    DWORD PTR [esp+0x14],ecx
1003bad7:	jmp    0x1003bb59
1003badc:	xor    esi,esi
1003bade:	mov    DWORD PTR [esp+0x1c],0x1
1003bae6:	add    ebx,0x1
1003bae9:	jmp    0x1003bb51
1003baee:	mov    esi,0x1
1003baf3:	mov    DWORD PTR [esp+0x1c],esi
1003baf7:	add    ebx,esi
1003baf9:	jmp    0x1003bb51
1003bafb:	mov    eax,0x1
1003bb00:	xor    esi,esi
1003bb02:	mov    DWORD PTR [esp+0x1c],eax
1003bb06:	mov    DWORD PTR [esp+0x14],eax
1003bb0a:	add    ebx,eax
1003bb0c:	jmp    0x1003bb59
1003bb0e:	xor    eax,eax
1003bb10:	mov    ah,BYTE PTR [ebx+0x1]
1003bb13:	xor    esi,esi
1003bb15:	mov    DWORD PTR [esp+0x1c],0x1
1003bb1d:	add    ebx,0x3
1003bb20:	mov    al,BYTE PTR [ebx-0x1]
1003bb23:	mov    DWORD PTR [esp+0x14],eax
1003bb27:	jmp    0x1003bb59
1003bb29:	movzx  eax,BYTE PTR [ebx]
1003bb2c:	movsx  esi,BYTE PTR [eax+0x1006f52f]
1003bb33:	sub    eax,0x39
1003bb36:	mov    ecx,eax
1003bb38:	movsx  eax,BYTE PTR [eax+0x1006f570]
1003bb3f:	and    ecx,0x1
1003bb42:	add    ebx,0x1
1003bb45:	test   eax,eax
1003bb47:	mov    DWORD PTR [esp+0x20],ecx
1003bb4b:	mov    DWORD PTR [esp+0x14],eax
1003bb4f:	jne    0x1003bb59
1003bb51:	mov    DWORD PTR [esp+0x14],0x7fffffff
1003bb59:	mov    edx,DWORD PTR [edi+0x5c]
1003bb5c:	movzx  eax,BYTE PTR [ebx]
1003bb5f:	mov    ecx,edx
1003bb61:	sub    ecx,ebp
1003bb63:	add    ebx,0x1
1003bb66:	cmp    esi,ecx
1003bb68:	mov    DWORD PTR [esp+0x24],eax
1003bb6c:	jg     0x1003c74f
1003bb72:	test   esi,esi
1003bb74:	jle    0x1003beac
1003bb7a:	add    eax,0xfffffffa
1003bb7d:	cmp    eax,0xf
1003bb80:	ja     0x1003cdea
1003bb86:	jmp    DWORD PTR [eax*4+0x1003d22c]
1003bb8d:	cmp    esi,0x1
1003bb90:	mov    DWORD PTR [esp+0x18],0x1
1003bb98:	jl     0x1003beac
1003bb9e:	mov    edi,edi
1003bba0:	mov    ecx,DWORD PTR [edi+0x18]
1003bba3:	test   ecx,ecx
1003bba5:	je     0x1003bbd6
1003bba7:	mov    eax,DWORD PTR [edi+0x5c]
1003bbaa:	cmp    ebp,eax
1003bbac:	jae    0x1003bbff
1003bbae:	mov    edi,DWORD PTR [esp+0x10c]
1003bbb5:	push   ecx
1003bbb6:	add    edi,0x1c
1003bbb9:	xor    edx,edx
1003bbbb:	mov    ecx,ebp
1003bbbd:	call   0x10042de0
1003bbc2:	add    esp,0x4
1003bbc5:	test   eax,eax
1003bbc7:	jne    0x1003c74f
1003bbcd:	mov    edi,DWORD PTR [esp+0x10c]
1003bbd4:	jmp    0x1003bbff
1003bbd6:	mov    eax,DWORD PTR [edi+0x1c]
1003bbd9:	mov    edx,DWORD PTR [edi+0x5c]
1003bbdc:	sub    edx,eax
1003bbde:	cmp    ebp,edx
1003bbe0:	ja     0x1003bbff
1003bbe2:	mov    cl,BYTE PTR [ebp+0x0]
1003bbe5:	cmp    cl,BYTE PTR [edi+0x20]
1003bbe8:	jne    0x1003bbff
1003bbea:	cmp    eax,0x1
1003bbed:	je     0x1003c74f
1003bbf3:	mov    dl,BYTE PTR [ebp+0x1]
1003bbf6:	cmp    dl,BYTE PTR [edi+0x21]
1003bbf9:	je     0x1003c74f
1003bbff:	mov    eax,DWORD PTR [esp+0x18]
1003bc03:	add    eax,0x1
1003bc06:	add    ebp,0x1
1003bc09:	cmp    eax,esi
1003bc0b:	mov    DWORD PTR [esp+0x18],eax
1003bc0f:	jle    0x1003bba0
1003bc11:	jmp    0x1003beac
1003bc16:	add    ebp,esi
1003bc18:	jmp    0x1003beac
1003bc1d:	mov    ecx,0x1
1003bc22:	cmp    esi,ecx
1003bc24:	jl     0x1003beac
1003bc2a:	lea    ebx,[ebx+0x0]
1003bc30:	cmp    ebp,edx
1003bc32:	jae    0x1003c74f
1003bc38:	movzx  eax,BYTE PTR [ebp+0x0]
1003bc3c:	sub    eax,0xa
1003bc3f:	add    ebp,0x1
1003bc42:	cmp    eax,0x7b
1003bc45:	ja     0x1003c74f
1003bc4b:	movzx  eax,BYTE PTR [eax+0x1003d27c]
1003bc52:	jmp    DWORD PTR [eax*4+0x1003d26c]
1003bc59:	cmp    ebp,edx
1003bc5b:	jae    0x1003bc72
1003bc5d:	cmp    BYTE PTR [ebp+0x0],0xa
1003bc61:	jne    0x1003bc72
1003bc63:	add    ebp,0x1
1003bc66:	jmp    0x1003bc72
1003bc68:	cmp    DWORD PTR [edi+0x50],0x0
1003bc6c:	jne    0x1003c74f
1003bc72:	add    ecx,0x1
1003bc75:	cmp    ecx,esi
1003bc77:	jle    0x1003bc30
1003bc79:	jmp    0x1003beac
1003bc7e:	mov    ecx,0x1
1003bc83:	cmp    esi,ecx
1003bc85:	jl     0x1003beac
1003bc8b:	jmp    0x1003bc90
1003bc8d:	lea    ecx,[ecx+0x0]
1003bc90:	cmp    ebp,edx
1003bc92:	jae    0x1003c74f
1003bc98:	movzx  eax,BYTE PTR [ebp+0x0]
1003bc9c:	add    ebp,0x1
1003bc9f:	cmp    eax,0x9
1003bca2:	je     0x1003c74f
1003bca8:	cmp    eax,0x20
1003bcab:	je     0x1003c74f
1003bcb1:	cmp    eax,0xa0
1003bcb6:	je     0x1003c74f
1003bcbc:	add    ecx,0x1
1003bcbf:	cmp    ecx,esi
1003bcc1:	jle    0x1003bc90
1003bcc3:	jmp    0x1003beac
1003bcc8:	mov    ecx,0x1
1003bccd:	cmp    esi,ecx
1003bccf:	jl     0x1003beac
1003bcd5:	cmp    ebp,edx
1003bcd7:	jae    0x1003c74f
1003bcdd:	movzx  eax,BYTE PTR [ebp+0x0]
1003bce1:	add    ebp,0x1
1003bce4:	cmp    eax,0x9
1003bce7:	je     0x1003bcf9
1003bce9:	cmp    eax,0x20
1003bcec:	je     0x1003bcf9
1003bcee:	cmp    eax,0xa0
1003bcf3:	jne    0x1003c74f
1003bcf9:	add    ecx,0x1
1003bcfc:	cmp    ecx,esi
1003bcfe:	jle    0x1003bcd5
1003bd00:	jmp    0x1003beac
1003bd05:	mov    ecx,0x1
1003bd0a:	cmp    esi,ecx
1003bd0c:	jl     0x1003beac
1003bd12:	cmp    ebp,edx
1003bd14:	jae    0x1003c74f
1003bd1a:	movzx  eax,BYTE PTR [ebp+0x0]
1003bd1e:	add    ebp,0x1
1003bd21:	cmp    eax,0xa
1003bd24:	jl     0x1003bd3a
1003bd26:	cmp    eax,0xd
1003bd29:	jle    0x1003c74f
1003bd2f:	cmp    eax,0x85
1003bd34:	je     0x1003c74f
1003bd3a:	add    ecx,0x1
1003bd3d:	cmp    ecx,esi
1003bd3f:	jle    0x1003bd12
1003bd41:	jmp    0x1003beac
1003bd46:	mov    ecx,0x1
1003bd4b:	cmp    esi,ecx
1003bd4d:	jl     0x1003beac
1003bd53:	cmp    ebp,edx
1003bd55:	jae    0x1003c74f
1003bd5b:	movzx  eax,BYTE PTR [ebp+0x0]
1003bd5f:	add    ebp,0x1
1003bd62:	cmp    eax,0xa
1003bd65:	jl     0x1003c74f
1003bd6b:	cmp    eax,0xd
1003bd6e:	jle    0x1003bd7b
1003bd70:	cmp    eax,0x85
1003bd75:	jne    0x1003c74f
1003bd7b:	add    ecx,0x1
1003bd7e:	cmp    ecx,esi
1003bd80:	jle    0x1003bd53
1003bd82:	jmp    0x1003beac
1003bd87:	mov    eax,0x1
1003bd8c:	cmp    esi,eax
1003bd8e:	jl     0x1003beac
1003bd94:	mov    ecx,DWORD PTR [edi+0x28]
1003bd97:	jmp    0x1003bda0
1003bd99:	lea    esp,[esp+0x0]
1003bda0:	movzx  edx,BYTE PTR [ebp+0x0]
1003bda4:	mov    dl,BYTE PTR [edx+ecx*1]
1003bda7:	and    dl,0x4
1003bdaa:	add    ebp,0x1
1003bdad:	test   dl,dl
1003bdaf:	jne    0x1003c74f
1003bdb5:	add    eax,0x1
1003bdb8:	cmp    eax,esi
1003bdba:	jle    0x1003bda0
1003bdbc:	jmp    0x1003beac
1003bdc1:	mov    eax,0x1
1003bdc6:	cmp    esi,eax
1003bdc8:	jl     0x1003beac
1003bdce:	mov    ecx,DWORD PTR [edi+0x28]
1003bdd1:	movzx  edx,BYTE PTR [ebp+0x0]
1003bdd5:	mov    dl,BYTE PTR [edx+ecx*1]
1003bdd8:	and    dl,0x4
1003bddb:	add    ebp,0x1
1003bdde:	test   dl,dl
1003bde0:	je     0x1003c74f
1003bde6:	add    eax,0x1
1003bde9:	cmp    eax,esi
1003bdeb:	jle    0x1003bdd1
1003bded:	jmp    0x1003beac
1003bdf2:	mov    eax,0x1
1003bdf7:	cmp    esi,eax
1003bdf9:	jl     0x1003beac
1003bdff:	mov    ecx,DWORD PTR [edi+0x28]
1003be02:	movzx  edx,BYTE PTR [ebp+0x0]
1003be06:	mov    dl,BYTE PTR [edx+ecx*1]
1003be09:	and    dl,0x1
1003be0c:	add    ebp,0x1
1003be0f:	test   dl,dl
1003be11:	jne    0x1003c74f
1003be17:	add    eax,0x1
1003be1a:	cmp    eax,esi
1003be1c:	jle    0x1003be02
1003be1e:	jmp    0x1003beac
1003be23:	mov    eax,0x1
1003be28:	cmp    esi,eax
1003be2a:	jl     0x1003beac
1003be30:	mov    ecx,DWORD PTR [edi+0x28]
1003be33:	movzx  edx,BYTE PTR [ebp+0x0]
1003be37:	mov    dl,BYTE PTR [edx+ecx*1]
1003be3a:	and    dl,0x1
1003be3d:	add    ebp,0x1
1003be40:	test   dl,dl
1003be42:	je     0x1003c74f
1003be48:	add    eax,0x1
1003be4b:	cmp    eax,esi
1003be4d:	jle    0x1003be33
1003be4f:	jmp    0x1003beac
1003be51:	mov    eax,0x1
1003be56:	cmp    esi,eax
1003be58:	jl     0x1003beac
1003be5a:	mov    ecx,DWORD PTR [edi+0x28]
1003be5d:	lea    ecx,[ecx+0x0]
1003be60:	movzx  edx,BYTE PTR [ebp+0x0]
1003be64:	mov    dl,BYTE PTR [edx+ecx*1]
1003be67:	and    dl,0x10
1003be6a:	add    ebp,0x1
1003be6d:	test   dl,dl
1003be6f:	jne    0x1003c74f
1003be75:	add    eax,0x1
1003be78:	cmp    eax,esi
1003be7a:	jle    0x1003be60
1003be7c:	jmp    0x1003beac
1003be7e:	mov    eax,0x1
1003be83:	cmp    esi,eax
1003be85:	jl     0x1003beac
1003be87:	mov    ecx,DWORD PTR [edi+0x28]
1003be8a:	lea    ebx,[ebx+0x0]
1003be90:	movzx  edx,BYTE PTR [ebp+0x0]
1003be94:	mov    dl,BYTE PTR [edx+ecx*1]
1003be97:	and    dl,0x10
1003be9a:	add    ebp,0x1
1003be9d:	test   dl,dl
1003be9f:	je     0x1003c74f
1003bea5:	add    eax,0x1
1003bea8:	cmp    eax,esi
1003beaa:	jle    0x1003be90
1003beac:	cmp    esi,DWORD PTR [esp+0x14]
1003beb0:	je     0x1003a5dc
1003beb6:	cmp    DWORD PTR [esp+0x20],0x0
1003bebb:	jne    0x1003cdfa
1003bec1:	mov    eax,DWORD PTR [esp+0x24]
1003bec5:	add    eax,0xfffffffa
1003bec8:	cmp    eax,0xf
1003becb:	mov    DWORD PTR [esp+0x20],ebp
1003becf:	ja     0x1003cdea
1003bed5:	jmp    DWORD PTR [eax*4+0x1003d2f8]
1003bedc:	cmp    esi,DWORD PTR [esp+0x14]
1003bee0:	jge    0x1003c22d
1003bee6:	mov    eax,DWORD PTR [edi+0x5c]
1003bee9:	cmp    ebp,eax
1003beeb:	jae    0x1003c22d
1003bef1:	mov    ecx,DWORD PTR [edi+0x18]
1003bef4:	test   ecx,ecx
1003bef6:	je     0x1003bf20
1003bef8:	mov    edi,DWORD PTR [esp+0x10c]
1003beff:	push   ecx
1003bf00:	add    edi,0x1c
1003bf03:	xor    edx,edx
1003bf05:	mov    ecx,ebp
1003bf07:	call   0x10042de0
1003bf0c:	add    esp,0x4
1003bf0f:	test   eax,eax
1003bf11:	jne    0x1003c22d
1003bf17:	mov    edi,DWORD PTR [esp+0x10c]
1003bf1e:	jmp    0x1003bf46
1003bf20:	mov    ecx,DWORD PTR [edi+0x1c]
1003bf23:	sub    eax,ecx
1003bf25:	cmp    ebp,eax
1003bf27:	ja     0x1003bf46
1003bf29:	mov    al,BYTE PTR [ebp+0x0]
1003bf2c:	cmp    al,BYTE PTR [edi+0x20]
1003bf2f:	jne    0x1003bf46
1003bf31:	cmp    ecx,0x1
1003bf34:	je     0x1003c22d
1003bf3a:	mov    cl,BYTE PTR [ebp+0x1]
1003bf3d:	cmp    cl,BYTE PTR [edi+0x21]
1003bf40:	je     0x1003c22d
1003bf46:	add    esi,0x1
1003bf49:	add    ebp,0x1
1003bf4c:	cmp    esi,DWORD PTR [esp+0x14]
1003bf50:	jl     0x1003bee6
1003bf52:	jmp    0x1003c22d
1003bf57:	mov    eax,DWORD PTR [esp+0x14]
1003bf5b:	mov    edi,DWORD PTR [edi+0x5c]
1003bf5e:	sub    eax,esi
1003bf60:	sub    edi,ebp
1003bf62:	cmp    eax,edi
1003bf64:	jbe    0x1003bf68
1003bf66:	mov    eax,edi
1003bf68:	add    ebp,eax
1003bf6a:	jmp    0x1003c22d
1003bf6f:	cmp    esi,DWORD PTR [esp+0x14]
1003bf73:	jge    0x1003c22d
1003bf79:	mov    ecx,DWORD PTR [edi+0x5c]
1003bf7c:	cmp    ebp,ecx
1003bf7e:	jae    0x1003c22d
1003bf84:	movzx  eax,BYTE PTR [ebp+0x0]
1003bf88:	cmp    eax,0xd
1003bf8b:	jne    0x1003bfa0
1003bf8d:	add    ebp,0x1
1003bf90:	cmp    ebp,ecx
1003bf92:	jae    0x1003c22d
1003bf98:	cmp    BYTE PTR [ebp+0x0],0xa
1003bf9c:	jne    0x1003bfc7
1003bf9e:	jmp    0x1003bfc4
1003bfa0:	cmp    eax,0xa
1003bfa3:	je     0x1003bfc4
1003bfa5:	cmp    DWORD PTR [edi+0x50],0x0
1003bfa9:	jne    0x1003c22d
1003bfaf:	cmp    eax,0xb
1003bfb2:	je     0x1003bfc4
1003bfb4:	cmp    eax,0xc
1003bfb7:	je     0x1003bfc4
1003bfb9:	cmp    eax,0x85
1003bfbe:	jne    0x1003c22d
1003bfc4:	add    ebp,0x1
1003bfc7:	add    esi,0x1
1003bfca:	cmp    esi,DWORD PTR [esp+0x14]
1003bfce:	jl     0x1003bf7c
1003bfd0:	jmp    0x1003c22d
1003bfd5:	cmp    esi,DWORD PTR [esp+0x14]
1003bfd9:	jge    0x1003c22d
1003bfdf:	mov    edi,DWORD PTR [edi+0x5c]
1003bfe2:	cmp    ebp,edi
1003bfe4:	jae    0x1003c22d
1003bfea:	movzx  eax,BYTE PTR [ebp+0x0]
1003bfee:	cmp    eax,0x9
1003bff1:	je     0x1003c22d
1003bff7:	cmp    eax,0x20
1003bffa:	je     0x1003c22d
1003c000:	cmp    eax,0xa0
1003c005:	je     0x1003c22d
1003c00b:	add    esi,0x1
1003c00e:	add    ebp,0x1
1003c011:	cmp    esi,DWORD PTR [esp+0x14]
1003c015:	jl     0x1003bfe2
1003c017:	jmp    0x1003c22d
1003c01c:	cmp    esi,DWORD PTR [esp+0x14]
1003c020:	jge    0x1003c22d
1003c026:	mov    edi,DWORD PTR [edi+0x5c]
1003c029:	cmp    ebp,edi
1003c02b:	jae    0x1003c22d
1003c031:	movzx  eax,BYTE PTR [ebp+0x0]
1003c035:	cmp    eax,0x9
1003c038:	je     0x1003c04a
1003c03a:	cmp    eax,0x20
1003c03d:	je     0x1003c04a
1003c03f:	cmp    eax,0xa0
1003c044:	jne    0x1003c22d
1003c04a:	add    esi,0x1
1003c04d:	add    ebp,0x1
1003c050:	cmp    esi,DWORD PTR [esp+0x14]
1003c054:	jl     0x1003c029
1003c056:	jmp    0x1003c22d
1003c05b:	cmp    esi,DWORD PTR [esp+0x14]
1003c05f:	jge    0x1003c22d
1003c065:	mov    edi,DWORD PTR [edi+0x5c]
1003c068:	cmp    ebp,edi
1003c06a:	jae    0x1003c22d
1003c070:	movzx  eax,BYTE PTR [ebp+0x0]
1003c074:	cmp    eax,0xa
1003c077:	je     0x1003c22d
1003c07d:	cmp    eax,0xb
1003c080:	je     0x1003c22d
1003c086:	cmp    eax,0xc
1003c089:	je     0x1003c22d
1003c08f:	cmp    eax,0xd
1003c092:	je     0x1003c22d
1003c098:	cmp    eax,0x85
1003c09d:	je     0x1003c22d
1003c0a3:	add    esi,0x1
1003c0a6:	add    ebp,0x1
1003c0a9:	cmp    esi,DWORD PTR [esp+0x14]
1003c0ad:	jl     0x1003c068
1003c0af:	jmp    0x1003c22d
1003c0b4:	cmp    esi,DWORD PTR [esp+0x14]
1003c0b8:	jge    0x1003c22d
1003c0be:	mov    edi,DWORD PTR [edi+0x5c]
1003c0c1:	cmp    ebp,edi
1003c0c3:	jae    0x1003c22d
1003c0c9:	movzx  eax,BYTE PTR [ebp+0x0]
1003c0cd:	cmp    eax,0xa
1003c0d0:	je     0x1003c0ec
1003c0d2:	cmp    eax,0xb
1003c0d5:	je     0x1003c0ec
1003c0d7:	cmp    eax,0xc
1003c0da:	je     0x1003c0ec
1003c0dc:	cmp    eax,0xd
1003c0df:	je     0x1003c0ec
1003c0e1:	cmp    eax,0x85
1003c0e6:	jne    0x1003c22d
1003c0ec:	add    esi,0x1
1003c0ef:	add    ebp,0x1
1003c0f2:	cmp    esi,DWORD PTR [esp+0x14]
1003c0f6:	jl     0x1003c0c1
1003c0f8:	jmp    0x1003c22d
1003c0fd:	cmp    esi,DWORD PTR [esp+0x14]
1003c101:	jge    0x1003c22d
1003c107:	mov    eax,DWORD PTR [edi+0x5c]
1003c10a:	lea    ebx,[ebx+0x0]
1003c110:	cmp    ebp,eax
1003c112:	jae    0x1003c22d
1003c118:	movzx  edx,BYTE PTR [ebp+0x0]
1003c11c:	mov    ecx,DWORD PTR [edi+0x28]
1003c11f:	test   BYTE PTR [edx+ecx*1],0x4
1003c123:	jne    0x1003c22d
1003c129:	add    esi,0x1
1003c12c:	add    ebp,0x1
1003c12f:	cmp    esi,DWORD PTR [esp+0x14]
1003c133:	jl     0x1003c110
1003c135:	jmp    0x1003c22d
1003c13a:	cmp    esi,DWORD PTR [esp+0x14]
1003c13e:	jge    0x1003c22d
1003c144:	mov    eax,DWORD PTR [edi+0x5c]
1003c147:	cmp    ebp,eax
1003c149:	jae    0x1003c22d
1003c14f:	movzx  edx,BYTE PTR [ebp+0x0]
1003c153:	mov    ecx,DWORD PTR [edi+0x28]
1003c156:	test   BYTE PTR [edx+ecx*1],0x4
1003c15a:	je     0x1003c22d
1003c160:	add    esi,0x1
1003c163:	add    ebp,0x1
1003c166:	cmp    esi,DWORD PTR [esp+0x14]
1003c16a:	jl     0x1003c147
1003c16c:	jmp    0x1003c22d
1003c171:	cmp    esi,DWORD PTR [esp+0x14]
1003c175:	jge    0x1003c22d
1003c17b:	mov    eax,DWORD PTR [edi+0x5c]
1003c17e:	mov    edi,edi
1003c180:	cmp    ebp,eax
1003c182:	jae    0x1003c22d
1003c188:	movzx  edx,BYTE PTR [ebp+0x0]
1003c18c:	mov    ecx,DWORD PTR [edi+0x28]
1003c18f:	test   BYTE PTR [edx+ecx*1],0x1
1003c193:	jne    0x1003c22d
1003c199:	add    esi,0x1
1003c19c:	add    ebp,0x1
1003c19f:	cmp    esi,DWORD PTR [esp+0x14]
1003c1a3:	jl     0x1003c180
1003c1a5:	jmp    0x1003c22d
1003c1aa:	cmp    esi,DWORD PTR [esp+0x14]
1003c1ae:	jge    0x1003c22d
1003c1b4:	mov    eax,DWORD PTR [edi+0x5c]
1003c1b7:	cmp    ebp,eax
1003c1b9:	jae    0x1003c22d
1003c1bf:	movzx  edx,BYTE PTR [ebp+0x0]
1003c1c3:	mov    ecx,DWORD PTR [edi+0x28]
1003c1c6:	test   BYTE PTR [edx+ecx*1],0x1
1003c1ca:	je     0x1003c22d
1003c1cc:	add    esi,0x1
1003c1cf:	add    ebp,0x1
1003c1d2:	cmp    esi,DWORD PTR [esp+0x14]
1003c1d6:	jl     0x1003c1b7
1003c1d8:	jmp    0x1003c22d
1003c1da:	cmp    esi,DWORD PTR [esp+0x14]
1003c1de:	jge    0x1003c22d
1003c1e0:	mov    eax,DWORD PTR [edi+0x5c]
1003c1e3:	cmp    ebp,eax
1003c1e5:	jae    0x1003c22d
1003c1e7:	movzx  edx,BYTE PTR [ebp+0x0]
1003c1eb:	mov    ecx,DWORD PTR [edi+0x28]
1003c1ee:	test   BYTE PTR [edx+ecx*1],0x10
1003c1f2:	jne    0x1003c22d
1003c1f4:	add    esi,0x1
1003c1f7:	add    ebp,0x1
1003c1fa:	cmp    esi,DWORD PTR [esp+0x14]
1003c1fe:	jl     0x1003c1e3
1003c200:	jmp    0x1003c22d
1003c202:	cmp    esi,DWORD PTR [esp+0x14]
1003c206:	jge    0x1003c22d
1003c208:	mov    eax,DWORD PTR [edi+0x5c]
1003c20b:	jmp    0x1003c210
1003c20d:	lea    ecx,[ecx+0x0]
1003c210:	cmp    ebp,eax
1003c212:	jae    0x1003c22d
1003c214:	movzx  edx,BYTE PTR [ebp+0x0]
1003c218:	mov    ecx,DWORD PTR [edi+0x28]
1003c21b:	test   BYTE PTR [edx+ecx*1],0x10
1003c21f:	je     0x1003c22d
1003c221:	add    esi,0x1
1003c224:	add    ebp,0x1
1003c227:	cmp    esi,DWORD PTR [esp+0x14]
1003c22b:	jl     0x1003c210
1003c22d:	cmp    DWORD PTR [esp+0x1c],0x0
1003c232:	je     0x1003d012
1003c238:	mov    edi,DWORD PTR [esp+0x10c]
1003c23f:	jmp    0x1003a5dc
1003c244:	xor    edx,edx
1003c246:	mov    dh,BYTE PTR [ebx+0x4]
1003c249:	mov    dl,BYTE PTR [ebx+0x5]
1003c24c:	cmp    BYTE PTR [ebx+edx*1+0x3],0x54
1003c251:	lea    ebx,[ebx+edx*1+0x3]
1003c255:	jne    0x1003c266
1003c257:	xor    eax,eax
1003c259:	mov    ah,BYTE PTR [ebx+0x1]
1003c25c:	mov    al,BYTE PTR [ebx+0x2]
1003c25f:	add    ebx,eax
1003c261:	cmp    BYTE PTR [ebx],0x54
1003c264:	je     0x1003c257
1003c266:	add    ebx,0x3
1003c269:	cmp    DWORD PTR [esp+0x24],0x63
1003c26e:	jne    0x1003c4c0
1003c274:	mov    edx,DWORD PTR [esp+0x11c]
1003c27b:	mov    eax,DWORD PTR [esp+0x114]
1003c282:	mov    ecx,DWORD PTR [esp+0x110]
1003c289:	add    edx,0x1
1003c28c:	push   edx
1003c28d:	mov    edx,DWORD PTR [esp+0x10c]
1003c294:	push   0x2
1003c296:	push   eax
1003c297:	push   ecx
1003c298:	push   edi
1003c299:	push   edx
1003c29a:	push   esi
1003c29b:	push   ebx
1003c29c:	push   ebp
1003c29d:	call   0x1003a570
1003c2a2:	add    esp,0x24
1003c2a5:	pop    edi
1003c2a6:	pop    esi
1003c2a7:	pop    ebp
1003c2a8:	pop    ebx
1003c2a9:	add    esp,0xe8
1003c2af:	ret    
1003c2b0:	xor    eax,eax
1003c2b2:	mov    ah,BYTE PTR [ebx+0x3]
1003c2b5:	mov    al,BYTE PTR [ebx+0x4]
1003c2b8:	lea    esi,[eax+eax*1]
1003c2bb:	cmp    esi,DWORD PTR [edi+0x14]
1003c2be:	mov    DWORD PTR [esp+0x20],eax
1003c2c2:	jl     0x1003c668
1003c2c8:	xor    eax,eax
1003c2ca:	cmp    DWORD PTR [esp+0x24],0x61
1003c2cf:	setl   al
1003c2d2:	xor    ecx,ecx
1003c2d4:	mov    ch,BYTE PTR [ebx+0x1]
1003c2d7:	sub    eax,0x1
1003c2da:	and    eax,0x2
1003c2dd:	mov    cl,BYTE PTR [ebx+0x2]
1003c2e0:	mov    DWORD PTR [esp+0x118],eax
1003c2e7:	cmp    BYTE PTR [ecx+ebx*1],0x54
1003c2eb:	jne    0x1003c368
1003c2f1:	mov    esi,DWORD PTR [esp+0x11c]
1003c2f8:	add    esi,0x1
1003c2fb:	jmp    0x1003c300
1003c2fd:	lea    ecx,[ecx+0x0]
1003c300:	mov    edx,DWORD PTR [esp+0x114]
1003c307:	mov    ecx,DWORD PTR [esp+0x108]
1003c30e:	push   esi
1003c30f:	push   eax
1003c310:	mov    eax,DWORD PTR [esp+0x118]
1003c317:	push   edx
1003c318:	mov    edx,DWORD PTR [esp+0x110]
1003c31f:	push   eax
1003c320:	movzx  eax,BYTE PTR [ebx]
1003c323:	push   edi
1003c324:	push   ecx
1003c325:	movzx  ecx,BYTE PTR [eax+0x1006e478]
1003c32c:	push   edx
1003c32d:	add    ecx,ebx
1003c32f:	push   ecx
1003c330:	push   ebp
1003c331:	call   0x1003a570
1003c336:	add    esp,0x24
1003c339:	test   eax,eax
1003c33b:	je     0x1003c348
1003c33d:	cmp    eax,0xfffffc1c
1003c342:	jne    0x1003d076
1003c348:	xor    edx,edx
1003c34a:	mov    dh,BYTE PTR [ebx+0x1]
1003c34d:	xor    eax,eax
1003c34f:	mov    dl,BYTE PTR [ebx+0x2]
1003c352:	mov    ah,BYTE PTR [ebx+edx*1+0x1]
1003c356:	add    ebx,edx
1003c358:	mov    al,BYTE PTR [ebx+0x2]
1003c35b:	cmp    BYTE PTR [eax+ebx*1],0x54
1003c35f:	mov    eax,DWORD PTR [esp+0x118]
1003c366:	je     0x1003c300
1003c368:	test   eax,eax
1003c36a:	jne    0x1003c75c
1003c370:	movzx  ecx,BYTE PTR [ebx]
1003c373:	movzx  edx,BYTE PTR [ecx+0x1006e478]
1003c37a:	add    ebx,edx
1003c37c:	jmp    0x1003c4cb
1003c381:	cmp    BYTE PTR [ebx+0x3],0x19
1003c385:	lea    esi,[ebx+0x3]
1003c388:	jne    0x1003c3a3
1003c38a:	mov    edx,DWORD PTR [esp+0x110]
1003c391:	movzx  eax,BYTE PTR [ebx+0x4]
1003c395:	and    edx,0xfffffff8
1003c398:	or     eax,edx
1003c39a:	mov    DWORD PTR [esp+0x110],eax
1003c3a1:	jmp    0x1003c3aa
1003c3a3:	mov    eax,DWORD PTR [esp+0x110]
1003c3aa:	mov    edx,DWORD PTR [esp+0x11c]
1003c3b1:	add    edx,0x1
1003c3b4:	cmp    BYTE PTR [ebx],0x57
1003c3b7:	push   edx
1003c3b8:	mov    edx,DWORD PTR [esp+0x118]
1003c3bf:	jne    0x1003c3ea
1003c3c1:	push   0x0
1003c3c3:	push   edx
1003c3c4:	push   eax
1003c3c5:	mov    eax,DWORD PTR [esp+0x114]
1003c3cc:	push   edi
1003c3cd:	push   ecx
1003c3ce:	push   eax
1003c3cf:	push   esi
1003c3d0:	push   ebp
1003c3d1:	call   0x1003a570
1003c3d6:	add    esp,0x24
1003c3d9:	test   eax,eax
1003c3db:	jne    0x1003d076
1003c3e1:	mov    ebx,DWORD PTR [esp+0x1c]
1003c3e5:	jmp    0x1003c4c0
1003c3ea:	push   0x2
1003c3ec:	push   edx
1003c3ed:	push   eax
1003c3ee:	mov    eax,DWORD PTR [esp+0x114]
1003c3f5:	push   edi
1003c3f6:	push   ecx
1003c3f7:	mov    ecx,DWORD PTR [esp+0x34]
1003c3fb:	push   eax
1003c3fc:	push   ecx
1003c3fd:	push   ebp
1003c3fe:	call   0x1003a570
1003c403:	add    esp,0x24
1003c406:	test   eax,eax
1003c408:	jne    0x1003d076
1003c40e:	mov    ebx,esi
1003c410:	jmp    0x1003c4c0
1003c415:	mov    edx,DWORD PTR [esp+0x1c]
1003c419:	cmp    BYTE PTR [edx],0x61
1003c41c:	sbb    eax,eax
1003c41e:	and    eax,0xfffffffe
1003c421:	add    eax,0x2
1003c424:	cmp    BYTE PTR [ebx],0x57
1003c427:	mov    DWORD PTR [esp+0x118],eax
1003c42e:	jne    0x1003c481
1003c430:	mov    eax,DWORD PTR [esp+0x11c]
1003c437:	mov    ecx,DWORD PTR [esp+0x114]
1003c43e:	mov    edx,DWORD PTR [esp+0x108]
1003c445:	add    eax,0x1
1003c448:	push   eax
1003c449:	mov    eax,DWORD PTR [esp+0x108]
1003c450:	push   0x0
1003c452:	push   ecx
1003c453:	push   esi
1003c454:	push   edi
1003c455:	push   edx
1003c456:	push   eax
1003c457:	add    ebx,0x3
1003c45a:	push   ebx
1003c45b:	push   ebp
1003c45c:	call   0x1003a570
1003c461:	add    esp,0x24
1003c464:	test   eax,eax
1003c466:	jne    0x1003d076
1003c46c:	mov    eax,DWORD PTR [esp+0x118]
1003c473:	test   eax,eax
1003c475:	jne    0x1003c973
1003c47b:	mov    ebx,DWORD PTR [esp+0x1c]
1003c47f:	jmp    0x1003c4cb
1003c481:	mov    ecx,DWORD PTR [esp+0x11c]
1003c488:	mov    edx,DWORD PTR [esp+0x114]
1003c48f:	add    ecx,0x1
1003c492:	push   ecx
1003c493:	mov    ecx,DWORD PTR [esp+0x108]
1003c49a:	push   eax
1003c49b:	mov    eax,DWORD PTR [esp+0x110]
1003c4a2:	push   edx
1003c4a3:	mov    edx,DWORD PTR [esp+0x28]
1003c4a7:	push   esi
1003c4a8:	push   edi
1003c4a9:	push   eax
1003c4aa:	push   ecx
1003c4ab:	push   edx
1003c4ac:	push   ebp
1003c4ad:	call   0x1003a570
1003c4b2:	add    esp,0x24
1003c4b5:	test   eax,eax
1003c4b7:	jne    0x1003d076
1003c4bd:	add    ebx,0x3
1003c4c0:	mov    DWORD PTR [esp+0x118],0x0
1003c4cb:	mov    eax,DWORD PTR [edi]
1003c4cd:	cmp    eax,DWORD PTR [edi+0x4]
1003c4d0:	jb     0x1003a59a
1003c4d6:	add    DWORD PTR [edi],0x1
1003c4d9:	mov    eax,0xfffffff8
1003c4de:	pop    edi
1003c4df:	pop    esi
1003c4e0:	pop    ebp
1003c4e1:	pop    ebx
1003c4e2:	add    esp,0xe8
1003c4e8:	ret    
1003c4e9:	mov    eax,0xffffffeb
1003c4ee:	pop    edi
1003c4ef:	pop    esi
1003c4f0:	pop    ebp
1003c4f1:	pop    ebx
1003c4f2:	add    esp,0xe8
1003c4f8:	ret    
1003c4f9:	mov    ecx,DWORD PTR [esp+0x11c]
1003c500:	mov    edx,DWORD PTR [esp+0x118]
1003c507:	mov    eax,DWORD PTR [esp+0x114]
1003c50e:	add    ecx,0x1
1003c511:	push   ecx
1003c512:	mov    ecx,DWORD PTR [esp+0x114]
1003c519:	push   edx
1003c51a:	mov    edx,DWORD PTR [esp+0x110]
1003c521:	push   eax
1003c522:	movzx  eax,BYTE PTR [ebx]
1003c525:	push   ecx
1003c526:	movzx  ecx,BYTE PTR [eax+0x1006e478]
1003c52d:	push   edi
1003c52e:	push   edx
1003c52f:	push   esi
1003c530:	add    ecx,ebx
1003c532:	push   ecx
1003c533:	push   ebp
1003c534:	call   0x1003a570
1003c539:	add    esp,0x24
1003c53c:	test   eax,eax
1003c53e:	jne    0x1003d076
1003c544:	mov    eax,0xfffffc1a
1003c549:	pop    edi
1003c54a:	pop    esi
1003c54b:	pop    ebp
1003c54c:	pop    ebx
1003c54d:	add    esp,0xe8
1003c553:	ret    
1003c554:	mov    edx,DWORD PTR [esp+0x11c]
1003c55b:	mov    eax,DWORD PTR [esp+0x118]
1003c562:	mov    ecx,DWORD PTR [esp+0x114]
1003c569:	add    edx,0x1
1003c56c:	push   edx
1003c56d:	mov    edx,DWORD PTR [esp+0x114]
1003c574:	push   eax
1003c575:	mov    eax,DWORD PTR [esp+0x110]
1003c57c:	push   ecx
1003c57d:	movzx  ecx,BYTE PTR [ebx]
1003c580:	push   edx
1003c581:	movzx  edx,BYTE PTR [ecx+0x1006e478]
1003c588:	push   edi
1003c589:	push   eax
1003c58a:	push   esi
1003c58b:	add    edx,ebx
1003c58d:	push   edx
1003c58e:	push   ebp
1003c58f:	call   0x1003a570
1003c594:	add    esp,0x24
1003c597:	test   eax,eax
1003c599:	jne    0x1003d076
1003c59f:	mov    eax,0xfffffc19
1003c5a4:	pop    edi
1003c5a5:	pop    esi
1003c5a6:	pop    ebp
1003c5a7:	pop    ebx
1003c5a8:	add    esp,0xe8
1003c5ae:	ret    
1003c5af:	mov    eax,DWORD PTR [esp+0x11c]
1003c5b6:	mov    ecx,DWORD PTR [esp+0x118]
1003c5bd:	mov    edx,DWORD PTR [esp+0x114]
1003c5c4:	add    eax,0x1
1003c5c7:	push   eax
1003c5c8:	mov    eax,DWORD PTR [esp+0x114]
1003c5cf:	push   ecx
1003c5d0:	mov    ecx,DWORD PTR [esp+0x110]
1003c5d7:	push   edx
1003c5d8:	movzx  edx,BYTE PTR [ebx]
1003c5db:	push   eax
1003c5dc:	movzx  eax,BYTE PTR [edx+0x1006e478]
1003c5e3:	push   edi
1003c5e4:	push   ecx
1003c5e5:	push   esi
1003c5e6:	add    eax,ebx
1003c5e8:	push   eax
1003c5e9:	push   ebp
1003c5ea:	call   0x1003a570
1003c5ef:	add    esp,0x24
1003c5f2:	test   eax,eax
1003c5f4:	jne    0x1003d076
1003c5fa:	mov    DWORD PTR [edi+0x60],ebp
1003c5fd:	mov    eax,0xfffffc1b
1003c602:	pop    edi
1003c603:	pop    esi
1003c604:	pop    ebp
1003c605:	pop    ebx
1003c606:	add    esp,0xe8
1003c60c:	ret    
1003c60d:	mov    ecx,DWORD PTR [esp+0x11c]
1003c614:	mov    edx,DWORD PTR [esp+0x118]
1003c61b:	mov    eax,DWORD PTR [esp+0x114]
1003c622:	add    ecx,0x1
1003c625:	push   ecx
1003c626:	mov    ecx,DWORD PTR [esp+0x114]
1003c62d:	push   edx
1003c62e:	mov    edx,DWORD PTR [esp+0x110]
1003c635:	push   eax
1003c636:	movzx  eax,BYTE PTR [ebx]
1003c639:	push   ecx
1003c63a:	movzx  ecx,BYTE PTR [eax+0x1006e478]
1003c641:	push   edi
1003c642:	push   edx
1003c643:	push   esi
1003c644:	add    ecx,ebx
1003c646:	push   ecx
1003c647:	push   ebp
1003c648:	call   0x1003a570
1003c64d:	add    esp,0x24
1003c650:	test   eax,eax
1003c652:	jne    0x1003d076
1003c658:	mov    eax,0xfffffc1c
1003c65d:	pop    edi
1003c65e:	pop    esi
1003c65f:	pop    ebp
1003c660:	pop    ebx
1003c661:	add    esp,0xe8
1003c667:	ret    
1003c668:	mov    eax,DWORD PTR [edi+0xc]
1003c66b:	mov    edx,DWORD PTR [eax+esi*4]
1003c66e:	mov    ecx,DWORD PTR [eax+esi*4+0x4]
1003c672:	mov    DWORD PTR [esp+0x14],edx
1003c676:	mov    edx,DWORD PTR [edi+0x10]
1003c679:	sub    edx,DWORD PTR [esp+0x20]
1003c67d:	mov    DWORD PTR [esp+0x18],ecx
1003c681:	mov    ecx,DWORD PTR [eax+edx*4]
1003c684:	lea    eax,[eax+edx*4]
1003c687:	mov    edx,DWORD PTR [edi+0x6c]
1003c68a:	mov    DWORD PTR [esp+0x44],ecx
1003c68e:	mov    DWORD PTR [esp+0x28],edx
1003c692:	xor    edx,edx
1003c694:	mov    ecx,ebp
1003c696:	sub    ecx,DWORD PTR [edi+0x58]
1003c699:	cmp    DWORD PTR [esp+0x24],0x62
1003c69e:	mov    DWORD PTR [eax],ecx
1003c6a0:	mov    eax,DWORD PTR [esp+0x11c]
1003c6a7:	setne  dl
1003c6aa:	sub    edx,0x1
1003c6ad:	and    edx,0x2
1003c6b0:	add    eax,0x1
1003c6b3:	mov    DWORD PTR [esp+0x118],edx
1003c6ba:	mov    DWORD PTR [esp+0x1c],eax
1003c6be:	mov    edi,edi
1003c6c0:	mov    ecx,DWORD PTR [esp+0x1c]
1003c6c4:	mov    edx,DWORD PTR [esp+0x118]
1003c6cb:	mov    eax,DWORD PTR [esp+0x114]
1003c6d2:	push   ecx
1003c6d3:	mov    ecx,DWORD PTR [esp+0x114]
1003c6da:	push   edx
1003c6db:	mov    edx,DWORD PTR [esp+0x110]
1003c6e2:	push   eax
1003c6e3:	mov    eax,DWORD PTR [esp+0x110]
1003c6ea:	push   ecx
1003c6eb:	movzx  ecx,BYTE PTR [ebx]
1003c6ee:	push   edi
1003c6ef:	push   edx
1003c6f0:	movzx  edx,BYTE PTR [ecx+0x1006e478]
1003c6f7:	push   eax
1003c6f8:	add    edx,ebx
1003c6fa:	push   edx
1003c6fb:	push   ebp
1003c6fc:	call   0x1003a570
1003c701:	add    esp,0x24
1003c704:	test   eax,eax
1003c706:	je     0x1003c713
1003c708:	cmp    eax,0xfffffc1c
1003c70d:	jne    0x1003d076
1003c713:	mov    eax,DWORD PTR [esp+0x28]
1003c717:	xor    ecx,ecx
1003c719:	mov    DWORD PTR [edi+0x6c],eax
1003c71c:	mov    ch,BYTE PTR [ebx+0x1]
1003c71f:	mov    cl,BYTE PTR [ebx+0x2]
1003c722:	add    ebx,ecx
1003c724:	cmp    BYTE PTR [ebx],0x54
1003c727:	je     0x1003c6c0
1003c729:	mov    edx,DWORD PTR [edi+0xc]
1003c72c:	mov    eax,DWORD PTR [esp+0x14]
1003c730:	mov    DWORD PTR [edx+esi*4],eax
1003c733:	mov    ecx,DWORD PTR [edi+0xc]
1003c736:	mov    edx,DWORD PTR [esp+0x18]
1003c73a:	mov    DWORD PTR [ecx+esi*4+0x4],edx
1003c73e:	mov    eax,DWORD PTR [edi+0x10]
1003c741:	sub    eax,DWORD PTR [esp+0x20]
1003c745:	mov    ecx,DWORD PTR [edi+0xc]
1003c748:	mov    edx,DWORD PTR [esp+0x44]
1003c74c:	mov    DWORD PTR [ecx+eax*4],edx
1003c74f:	xor    eax,eax
1003c751:	pop    edi
1003c752:	pop    esi
1003c753:	pop    ebp
1003c754:	pop    ebx
1003c755:	add    esp,0xe8
1003c75b:	ret    
1003c75c:	mov    ecx,DWORD PTR [esp+0x11c]
1003c763:	mov    edx,DWORD PTR [esp+0x114]
1003c76a:	add    ecx,0x1
1003c76d:	push   ecx
1003c76e:	mov    ecx,DWORD PTR [esp+0x10c]
1003c775:	push   eax
1003c776:	mov    eax,DWORD PTR [esp+0x118]
1003c77d:	push   edx
1003c77e:	mov    edx,DWORD PTR [esp+0x110]
1003c785:	push   eax
1003c786:	movzx  eax,BYTE PTR [ebx]
1003c789:	push   edi
1003c78a:	push   ecx
1003c78b:	movzx  ecx,BYTE PTR [eax+0x1006e478]
1003c792:	push   edx
1003c793:	add    ecx,ebx
1003c795:	push   ecx
1003c796:	push   ebp
1003c797:	call   0x1003a570
1003c79c:	add    esp,0x24
1003c79f:	pop    edi
1003c7a0:	pop    esi
1003c7a1:	pop    ebp
1003c7a2:	pop    ebx
1003c7a3:	add    esp,0xe8
1003c7a9:	ret    
1003c7aa:	cmp    DWORD PTR [edi+0x44],0x0
1003c7ae:	je     0x1003c7b4
1003c7b0:	cmp    ebp,esi
1003c7b2:	je     0x1003c74f
1003c7b4:	mov    eax,DWORD PTR [esp+0x108]
1003c7bb:	mov    DWORD PTR [edi+0x64],ebp
1003c7be:	mov    DWORD PTR [edi+0x68],eax
1003c7c1:	mov    DWORD PTR [edi+0x60],esi
1003c7c4:	mov    eax,0x1
1003c7c9:	pop    edi
1003c7ca:	pop    esi
1003c7cb:	pop    ebp
1003c7cc:	pop    ebx
1003c7cd:	add    esp,0xe8
1003c7d3:	ret    
1003c7d4:	mov    eax,DWORD PTR [edi+0x54]
1003c7d7:	xor    ecx,ecx
1003c7d9:	mov    ch,BYTE PTR [ebx+0x1]
1003c7dc:	mov    cl,BYTE PTR [ebx+0x2]
1003c7df:	add    ecx,eax
1003c7e1:	mov    esi,ecx
1003c7e3:	cmp    esi,eax
1003c7e5:	jne    0x1003c7f1
1003c7e7:	mov    DWORD PTR [esp+0x30],0x0
1003c7ef:	jmp    0x1003c7fd
1003c7f1:	xor    edx,edx
1003c7f3:	mov    dh,BYTE PTR [esi+0x3]
1003c7f6:	mov    dl,BYTE PTR [esi+0x4]
1003c7f9:	mov    DWORD PTR [esp+0x30],edx
1003c7fd:	mov    eax,DWORD PTR [edi+0x7c]
1003c800:	lea    ecx,[esp+0x2c]
1003c804:	mov    DWORD PTR [edi+0x7c],ecx
1003c807:	mov    ecx,DWORD PTR [edi+0x10]
1003c80a:	add    ebx,0x3
1003c80d:	cmp    ecx,0x1e
1003c810:	mov    DWORD PTR [esp+0x2c],eax
1003c814:	mov    DWORD PTR [esp+0x34],ebx
1003c818:	mov    DWORD PTR [esp+0x40],ecx
1003c81c:	jg     0x1003c82b
1003c81e:	lea    eax,[esp+0x80]
1003c825:	mov    DWORD PTR [esp+0x3c],eax
1003c829:	jmp    0x1003c858
1003c82b:	lea    edx,[ecx*4+0x0]
1003c832:	push   edx
1003c833:	call   DWORD PTR ds:0x1007f4f8
1003c839:	add    esp,0x4
1003c83c:	test   eax,eax
1003c83e:	mov    DWORD PTR [esp+0x3c],eax
1003c842:	jne    0x1003c854
1003c844:	mov    eax,0xfffffffa
1003c849:	pop    edi
1003c84a:	pop    esi
1003c84b:	pop    ebp
1003c84c:	pop    ebx
1003c84d:	add    esp,0xe8
1003c853:	ret    
1003c854:	mov    ecx,DWORD PTR [esp+0x40]
1003c858:	mov    edx,DWORD PTR [edi+0xc]
1003c85b:	add    ecx,ecx
1003c85d:	add    ecx,ecx
1003c85f:	push   ecx
1003c860:	push   edx
1003c861:	push   eax
1003c862:	call   0x10045420
1003c867:	mov    eax,DWORD PTR [esp+0x110]
1003c86e:	mov    ecx,DWORD PTR [esp+0x128]
1003c875:	mov    DWORD PTR [esp+0x44],eax
1003c879:	mov    al,BYTE PTR [esi]
1003c87b:	add    esp,0xc
1003c87e:	cmp    al,0x61
1003c880:	sbb    ebx,ebx
1003c882:	and    ebx,0xfffffffe
1003c885:	add    ebx,0x2
1003c888:	add    ecx,0x1
1003c88b:	mov    DWORD PTR [esp+0x1c],ecx
1003c88f:	nop
1003c890:	mov    edx,DWORD PTR [esp+0x1c]
1003c894:	mov    ecx,DWORD PTR [esp+0x114]
1003c89b:	push   edx
1003c89c:	mov    edx,DWORD PTR [esp+0x114]
1003c8a3:	push   ebx
1003c8a4:	push   ecx
1003c8a5:	mov    ecx,DWORD PTR [esp+0x114]
1003c8ac:	push   edx
1003c8ad:	movzx  edx,al
1003c8b0:	movzx  eax,BYTE PTR [edx+0x1006e478]
1003c8b7:	push   edi
1003c8b8:	push   ecx
1003c8b9:	push   ebp
1003c8ba:	add    eax,esi
1003c8bc:	push   eax
1003c8bd:	push   ebp
1003c8be:	call   0x1003a570
1003c8c3:	add    esp,0x24
1003c8c6:	cmp    eax,0x1
1003c8c9:	je     0x1003c943
1003c8cf:	test   eax,eax
1003c8d1:	je     0x1003c8de
1003c8d3:	cmp    eax,0xfffffc1c
1003c8d8:	jne    0x1003d076
1003c8de:	mov    edx,DWORD PTR [esp+0x40]
1003c8e2:	lea    ecx,[esp+0x2c]
1003c8e6:	lea    eax,[edx*4+0x0]
1003c8ed:	mov    edx,DWORD PTR [edi+0xc]
1003c8f0:	mov    DWORD PTR [edi+0x7c],ecx
1003c8f3:	mov    ecx,DWORD PTR [esp+0x3c]
1003c8f7:	push   eax
1003c8f8:	push   ecx
1003c8f9:	push   edx
1003c8fa:	call   0x10045420
1003c8ff:	xor    eax,eax
1003c901:	mov    ah,BYTE PTR [esi+0x1]
1003c904:	add    esp,0xc
1003c907:	mov    al,BYTE PTR [esi+0x2]
1003c90a:	add    esi,eax
1003c90c:	mov    al,BYTE PTR [esi]
1003c90e:	cmp    al,0x54
1003c910:	je     0x1003c890
1003c916:	mov    eax,DWORD PTR [esp+0x2c]
1003c91a:	mov    DWORD PTR [edi+0x7c],eax
1003c91d:	mov    eax,DWORD PTR [esp+0x3c]
1003c921:	lea    ecx,[esp+0x80]
1003c928:	cmp    eax,ecx
1003c92a:	je     0x1003c936
1003c92c:	push   eax
1003c92d:	call   DWORD PTR ds:0x1007f4fc
1003c933:	add    esp,0x4
1003c936:	xor    eax,eax
1003c938:	pop    edi
1003c939:	pop    esi
1003c93a:	pop    ebp
1003c93b:	pop    ebx
1003c93c:	add    esp,0xe8
1003c942:	ret    
1003c943:	mov    eax,DWORD PTR [esp+0x3c]
1003c947:	mov    ecx,DWORD PTR [esp+0x2c]
1003c94b:	lea    edx,[esp+0x80]
1003c952:	cmp    eax,edx
1003c954:	mov    DWORD PTR [edi+0x7c],ecx
1003c957:	je     0x1003c963
1003c959:	push   eax
1003c95a:	call   DWORD PTR ds:0x1007f4fc
1003c960:	add    esp,0x4
1003c963:	mov    eax,0x1
1003c968:	pop    edi
1003c969:	pop    esi
1003c96a:	pop    ebp
1003c96b:	pop    ebx
1003c96c:	add    esp,0xe8
1003c972:	ret    
1003c973:	mov    edx,DWORD PTR [esp+0x11c]
1003c97a:	mov    ecx,DWORD PTR [esp+0x108]
1003c981:	add    edx,0x1
1003c984:	push   edx
1003c985:	mov    edx,DWORD PTR [esp+0x108]
1003c98c:	push   eax
1003c98d:	mov    eax,DWORD PTR [esp+0x11c]
1003c994:	push   eax
1003c995:	mov    eax,DWORD PTR [esp+0x28]
1003c999:	push   esi
1003c99a:	push   edi
1003c99b:	push   ecx
1003c99c:	push   edx
1003c99d:	push   eax
1003c99e:	push   ebp
1003c99f:	call   0x1003a570
1003c9a4:	add    esp,0x24
1003c9a7:	pop    edi
1003c9a8:	pop    esi
1003c9a9:	pop    ebp
1003c9aa:	pop    ebx
1003c9ab:	add    esp,0xe8
1003c9b1:	ret    
1003c9b2:	mov    ecx,DWORD PTR [esp+0x108]
1003c9b9:	mov    DWORD PTR [edi+0x64],ebp
1003c9bc:	mov    DWORD PTR [edi+0x68],ecx
1003c9bf:	mov    eax,0x1
1003c9c4:	pop    edi
1003c9c5:	pop    esi
1003c9c6:	pop    ebp
1003c9c7:	pop    ebx
1003c9c8:	add    esp,0xe8
1003c9ce:	ret    
1003c9cf:	cmp    eax,ecx
1003c9d1:	mov    DWORD PTR [esp+0x20],ebp
1003c9d5:	mov    DWORD PTR [esp+0x18],eax
1003c9d9:	jge    0x1003ca11
1003c9db:	mov    edx,DWORD PTR [esp+0x110]
1003c9e2:	push   edx
1003c9e3:	mov    edx,DWORD PTR [esp+0x28]
1003c9e7:	push   ebp
1003c9e8:	mov    ecx,edi
1003c9ea:	mov    eax,esi
1003c9ec:	call   0x1003a4f0
1003c9f1:	add    esp,0x8
1003c9f4:	test   eax,eax
1003c9f6:	je     0x1003ca0b
1003c9f8:	mov    eax,DWORD PTR [esp+0x18]
1003c9fc:	add    eax,0x1
1003c9ff:	add    ebp,esi
1003ca01:	cmp    eax,DWORD PTR [esp+0x14]
1003ca05:	mov    DWORD PTR [esp+0x18],eax
1003ca09:	jl     0x1003c9db
1003ca0b:	cmp    ebp,DWORD PTR [esp+0x20]
1003ca0f:	jb     0x1003ca61
1003ca11:	mov    eax,DWORD PTR [esp+0x11c]
1003ca18:	add    eax,0x1
1003ca1b:	mov    DWORD PTR [esp+0x1c],eax
1003ca1f:	mov    ecx,DWORD PTR [esp+0x1c]
1003ca23:	mov    edx,DWORD PTR [esp+0x114]
1003ca2a:	mov    eax,DWORD PTR [esp+0x110]
1003ca31:	push   ecx
1003ca32:	mov    ecx,DWORD PTR [esp+0x10c]
1003ca39:	push   0x0
1003ca3b:	push   edx
1003ca3c:	mov    edx,DWORD PTR [esp+0x110]
1003ca43:	push   eax
1003ca44:	push   edi
1003ca45:	push   ecx
1003ca46:	push   edx
1003ca47:	push   ebx
1003ca48:	push   ebp
1003ca49:	call   0x1003a570
1003ca4e:	add    esp,0x24
1003ca51:	test   eax,eax
1003ca53:	jne    0x1003d076
1003ca59:	sub    ebp,esi
1003ca5b:	cmp    ebp,DWORD PTR [esp+0x20]
1003ca5f:	jae    0x1003ca1f
1003ca61:	xor    eax,eax
1003ca63:	pop    edi
1003ca64:	pop    esi
1003ca65:	pop    ebp
1003ca66:	pop    ebx
1003ca67:	add    esp,0xe8
1003ca6d:	ret    
1003ca6e:	cmp    eax,esi
1003ca70:	mov    DWORD PTR [esp+0x20],ebp
1003ca74:	jge    0x1003cab1
1003ca76:	cmp    ebp,DWORD PTR [edi+0x5c]
1003ca79:	jae    0x1003caab
1003ca7b:	movzx  eax,BYTE PTR [ebp+0x0]
1003ca7f:	mov    ecx,eax
1003ca81:	and    ecx,0x7
1003ca84:	mov    edx,0x1
1003ca89:	shl    edx,cl
1003ca8b:	mov    ecx,DWORD PTR [esp+0x24]
1003ca8f:	shr    eax,0x3
1003ca92:	mov    al,BYTE PTR [eax+ecx*1]
1003ca95:	test   al,dl
1003ca97:	je     0x1003caab
1003ca99:	mov    eax,DWORD PTR [esp+0x18]
1003ca9d:	add    eax,0x1
1003caa0:	add    ebp,0x1
1003caa3:	cmp    eax,esi
1003caa5:	mov    DWORD PTR [esp+0x18],eax
1003caa9:	jl     0x1003ca76
1003caab:	cmp    ebp,DWORD PTR [esp+0x20]
1003caaf:	jb     0x1003cafa
1003cab1:	mov    esi,DWORD PTR [esp+0x11c]
1003cab8:	add    esi,0x1
1003cabb:	mov    ecx,DWORD PTR [esp+0x114]
1003cac2:	mov    edx,DWORD PTR [esp+0x110]
1003cac9:	mov    eax,DWORD PTR [esp+0x108]
1003cad0:	push   esi
1003cad1:	push   0x0
1003cad3:	push   ecx
1003cad4:	mov    ecx,DWORD PTR [esp+0x110]
1003cadb:	push   edx
1003cadc:	push   edi
1003cadd:	push   eax
1003cade:	push   ecx
1003cadf:	push   ebx
1003cae0:	push   ebp
1003cae1:	call   0x1003a570
1003cae6:	add    esp,0x24
1003cae9:	test   eax,eax
1003caeb:	jne    0x1003d076
1003caf1:	sub    ebp,0x1
1003caf4:	cmp    ebp,DWORD PTR [esp+0x20]
1003caf8:	jae    0x1003cabb
1003cafa:	xor    eax,eax
1003cafc:	pop    edi
1003cafd:	pop    esi
1003cafe:	pop    ebp
1003caff:	pop    ebx
1003cb00:	add    esp,0xe8
1003cb06:	ret    
1003cb07:	mov    edx,DWORD PTR [esp+0x114]
1003cb0e:	mov    ecx,DWORD PTR [esp+0x108]
1003cb15:	mov    DWORD PTR [esp+0x18],eax
1003cb19:	mov    eax,DWORD PTR [esp+0x11c]
1003cb20:	add    eax,0x1
1003cb23:	push   eax
1003cb24:	push   0x0
1003cb26:	push   edx
1003cb27:	mov    edx,DWORD PTR [esp+0x110]
1003cb2e:	mov    DWORD PTR [esp+0x28],eax
1003cb32:	mov    eax,DWORD PTR [esp+0x11c]
1003cb39:	push   eax
1003cb3a:	push   edi
1003cb3b:	push   ecx
1003cb3c:	push   edx
1003cb3d:	push   ebx
1003cb3e:	push   ebp
1003cb3f:	call   0x1003a570
1003cb44:	add    esp,0x24
1003cb47:	test   eax,eax
1003cb49:	jne    0x1003d076
1003cb4f:	nop
1003cb50:	cmp    DWORD PTR [esp+0x18],esi
1003cb54:	jge    0x1003c74f
1003cb5a:	cmp    ebp,DWORD PTR [edi+0x5c]
1003cb5d:	jae    0x1003c74f
1003cb63:	movzx  eax,BYTE PTR [ebp+0x0]
1003cb67:	mov    ecx,DWORD PTR [edi+0x24]
1003cb6a:	movzx  edx,BYTE PTR [eax+ecx*1]
1003cb6e:	add    ebp,0x1
1003cb71:	cmp    DWORD PTR [esp+0x14],edx
1003cb75:	jne    0x1003c74f
1003cb7b:	mov    eax,DWORD PTR [esp+0x1c]
1003cb7f:	mov    ecx,DWORD PTR [esp+0x114]
1003cb86:	mov    edx,DWORD PTR [esp+0x110]
1003cb8d:	add    DWORD PTR [esp+0x18],0x1
1003cb92:	push   eax
1003cb93:	mov    eax,DWORD PTR [esp+0x10c]
1003cb9a:	push   0x0
1003cb9c:	push   ecx
1003cb9d:	mov    ecx,DWORD PTR [esp+0x110]
1003cba4:	push   edx
1003cba5:	push   edi
1003cba6:	push   eax
1003cba7:	push   ecx
1003cba8:	push   ebx
1003cba9:	push   ebp
1003cbaa:	call   0x1003a570
1003cbaf:	add    esp,0x24
1003cbb2:	test   eax,eax
1003cbb4:	je     0x1003cb50
1003cbb6:	pop    edi
1003cbb7:	pop    esi
1003cbb8:	pop    ebp
1003cbb9:	pop    ebx
1003cbba:	add    esp,0xe8
1003cbc0:	ret    
1003cbc1:	mov    ecx,DWORD PTR [esp+0x110]
1003cbc8:	mov    edx,DWORD PTR [esp+0x108]
1003cbcf:	mov    DWORD PTR [esp+0x18],eax
1003cbd3:	mov    eax,DWORD PTR [esp+0x11c]
1003cbda:	add    eax,0x1
1003cbdd:	push   eax
1003cbde:	push   0x0
1003cbe0:	mov    DWORD PTR [esp+0x24],eax
1003cbe4:	mov    eax,DWORD PTR [esp+0x11c]
1003cbeb:	push   eax
1003cbec:	mov    eax,DWORD PTR [esp+0x110]
1003cbf3:	push   ecx
1003cbf4:	push   edi
1003cbf5:	push   edx
1003cbf6:	push   eax
1003cbf7:	push   ebx
1003cbf8:	push   ebp
1003cbf9:	call   0x1003a570
1003cbfe:	add    esp,0x24
1003cc01:	test   eax,eax
1003cc03:	jne    0x1003d076
1003cc09:	lea    esp,[esp+0x0]
1003cc10:	cmp    DWORD PTR [esp+0x18],esi
1003cc14:	jge    0x1003c74f
1003cc1a:	cmp    ebp,DWORD PTR [edi+0x5c]
1003cc1d:	jae    0x1003c74f
1003cc23:	movzx  ecx,BYTE PTR [ebp+0x0]
1003cc27:	add    ebp,0x1
1003cc2a:	cmp    DWORD PTR [esp+0x14],ecx
1003cc2e:	jne    0x1003c74f
1003cc34:	mov    edx,DWORD PTR [esp+0x1c]
1003cc38:	mov    eax,DWORD PTR [esp+0x114]
1003cc3f:	mov    ecx,DWORD PTR [esp+0x110]
1003cc46:	add    DWORD PTR [esp+0x18],0x1
1003cc4b:	push   edx
1003cc4c:	mov    edx,DWORD PTR [esp+0x10c]
1003cc53:	push   0x0
1003cc55:	push   eax
1003cc56:	mov    eax,DWORD PTR [esp+0x110]
1003cc5d:	push   ecx
1003cc5e:	push   edi
1003cc5f:	push   edx
1003cc60:	push   eax
1003cc61:	push   ebx
1003cc62:	push   ebp
1003cc63:	call   0x1003a570
1003cc68:	add    esp,0x24
1003cc6b:	test   eax,eax
1003cc6d:	je     0x1003cc10
1003cc6f:	pop    edi
1003cc70:	pop    esi
1003cc71:	pop    ebp
1003cc72:	pop    ebx
1003cc73:	add    esp,0xe8
1003cc79:	ret    
1003cc7a:	mov    edx,DWORD PTR [esp+0x114]
1003cc81:	mov    ecx,DWORD PTR [esp+0x108]
1003cc88:	mov    DWORD PTR [esp+0x18],eax
1003cc8c:	mov    eax,DWORD PTR [esp+0x11c]
1003cc93:	add    eax,0x1
1003cc96:	push   eax
1003cc97:	push   0x0
1003cc99:	push   edx
1003cc9a:	mov    edx,DWORD PTR [esp+0x110]
1003cca1:	mov    DWORD PTR [esp+0x28],eax
1003cca5:	mov    eax,DWORD PTR [esp+0x11c]
1003ccac:	push   eax
1003ccad:	push   edi
1003ccae:	push   ecx
1003ccaf:	push   edx
1003ccb0:	push   ebx
1003ccb1:	push   ebp
1003ccb2:	call   0x1003a570
1003ccb7:	add    esp,0x24
1003ccba:	test   eax,eax
1003ccbc:	jne    0x1003d076
1003ccc2:	cmp    DWORD PTR [esp+0x18],esi
1003ccc6:	jge    0x1003c74f
1003cccc:	cmp    ebp,DWORD PTR [edi+0x5c]
1003cccf:	jae    0x1003c74f
1003ccd5:	movzx  eax,BYTE PTR [ebp+0x0]
1003ccd9:	mov    ecx,DWORD PTR [edi+0x24]
1003ccdc:	movzx  edx,BYTE PTR [eax+ecx*1]
1003cce0:	add    ebp,0x1
1003cce3:	cmp    DWORD PTR [esp+0x14],edx
1003cce7:	je     0x1003c74f
1003cced:	mov    eax,DWORD PTR [esp+0x1c]
1003ccf1:	mov    ecx,DWORD PTR [esp+0x114]
1003ccf8:	mov    edx,DWORD PTR [esp+0x110]
1003ccff:	add    DWORD PTR [esp+0x18],0x1
1003cd04:	push   eax
1003cd05:	mov    eax,DWORD PTR [esp+0x10c]
1003cd0c:	push   0x0
1003cd0e:	push   ecx
1003cd0f:	mov    ecx,DWORD PTR [esp+0x110]
1003cd16:	push   edx
1003cd17:	push   edi
1003cd18:	push   eax
1003cd19:	push   ecx
1003cd1a:	push   ebx
1003cd1b:	push   ebp
1003cd1c:	call   0x1003a570
1003cd21:	add    esp,0x24
1003cd24:	test   eax,eax
1003cd26:	je     0x1003ccc2
1003cd28:	pop    edi
1003cd29:	pop    esi
1003cd2a:	pop    ebp
1003cd2b:	pop    ebx
1003cd2c:	add    esp,0xe8
1003cd32:	ret    
1003cd33:	mov    ecx,DWORD PTR [esp+0x110]
1003cd3a:	mov    edx,DWORD PTR [esp+0x108]
1003cd41:	mov    DWORD PTR [esp+0x18],eax
1003cd45:	mov    eax,DWORD PTR [esp+0x11c]
1003cd4c:	add    eax,0x1
1003cd4f:	push   eax
1003cd50:	push   0x0
1003cd52:	mov    DWORD PTR [esp+0x24],eax
1003cd56:	mov    eax,DWORD PTR [esp+0x11c]
1003cd5d:	push   eax
1003cd5e:	mov    eax,DWORD PTR [esp+0x110]
1003cd65:	push   ecx
1003cd66:	push   edi
1003cd67:	push   edx
1003cd68:	push   eax
1003cd69:	push   ebx
1003cd6a:	push   ebp
1003cd6b:	call   0x1003a570
1003cd70:	add    esp,0x24
1003cd73:	test   eax,eax
1003cd75:	jne    0x1003d076
1003cd7b:	jmp    0x1003cd80
1003cd7d:	lea    ecx,[ecx+0x0]
1003cd80:	cmp    DWORD PTR [esp+0x18],esi
1003cd84:	jge    0x1003c74f
1003cd8a:	cmp    ebp,DWORD PTR [edi+0x5c]
1003cd8d:	jae    0x1003c74f
1003cd93:	movzx  ecx,BYTE PTR [ebp+0x0]
1003cd97:	add    ebp,0x1
1003cd9a:	cmp    DWORD PTR [esp+0x14],ecx
1003cd9e:	je     0x1003c74f
1003cda4:	mov    edx,DWORD PTR [esp+0x1c]
1003cda8:	mov    eax,DWORD PTR [esp+0x114]
1003cdaf:	mov    ecx,DWORD PTR [esp+0x110]
1003cdb6:	add    DWORD PTR [esp+0x18],0x1
1003cdbb:	push   edx
1003cdbc:	mov    edx,DWORD PTR [esp+0x10c]
1003cdc3:	push   0x0
1003cdc5:	push   eax
1003cdc6:	mov    eax,DWORD PTR [esp+0x110]
1003cdcd:	push   ecx
1003cdce:	push   edi
1003cdcf:	push   edx
1003cdd0:	push   eax
1003cdd1:	push   ebx
1003cdd2:	push   ebp
1003cdd3:	call   0x1003a570
1003cdd8:	add    esp,0x24
1003cddb:	test   eax,eax
1003cddd:	je     0x1003cd80
1003cddf:	pop    edi
1003cde0:	pop    esi
1003cde1:	pop    ebp
1003cde2:	pop    ebx
1003cde3:	add    esp,0xe8
1003cde9:	ret    
1003cdea:	mov    eax,0xfffffff2
1003cdef:	pop    edi
1003cdf0:	pop    esi
1003cdf1:	pop    ebp
1003cdf2:	pop    ebx
1003cdf3:	add    esp,0xe8
1003cdf9:	ret    
1003cdfa:	mov    edx,DWORD PTR [esp+0x114]
1003ce01:	mov    eax,DWORD PTR [esp+0x110]
1003ce08:	mov    ecx,DWORD PTR [esp+0x108]
1003ce0f:	mov    DWORD PTR [esp+0x18],esi
1003ce13:	mov    esi,DWORD PTR [esp+0x11c]
1003ce1a:	add    esi,0x1
1003ce1d:	push   esi
1003ce1e:	push   0x0
1003ce20:	push   edx
1003ce21:	mov    edx,DWORD PTR [esp+0x110]
1003ce28:	push   eax
1003ce29:	push   edi
1003ce2a:	push   ecx
1003ce2b:	push   edx
1003ce2c:	push   ebx
1003ce2d:	push   ebp
1003ce2e:	call   0x1003a570
1003ce33:	add    esp,0x24
1003ce36:	test   eax,eax
1003ce38:	jne    0x1003d076
1003ce3e:	mov    eax,DWORD PTR [esp+0x18]
1003ce42:	cmp    eax,DWORD PTR [esp+0x14]
1003ce46:	jge    0x1003c74f
1003ce4c:	mov    eax,DWORD PTR [edi+0x5c]
1003ce4f:	cmp    ebp,eax
1003ce51:	jae    0x1003c74f
1003ce57:	cmp    DWORD PTR [esp+0x24],0xc
1003ce5c:	jne    0x1003ceb3
1003ce5e:	mov    ecx,DWORD PTR [edi+0x18]
1003ce61:	test   ecx,ecx
1003ce63:	je     0x1003ce8d
1003ce65:	mov    edi,DWORD PTR [esp+0x10c]
1003ce6c:	push   ecx
1003ce6d:	add    edi,0x1c
1003ce70:	xor    edx,edx
1003ce72:	mov    ecx,ebp
1003ce74:	call   0x10042de0
1003ce79:	add    esp,0x4
1003ce7c:	test   eax,eax
1003ce7e:	jne    0x1003c74f
1003ce84:	mov    edi,DWORD PTR [esp+0x10c]
1003ce8b:	jmp    0x1003ceb3
1003ce8d:	mov    ecx,DWORD PTR [edi+0x1c]
1003ce90:	sub    eax,ecx
1003ce92:	cmp    ebp,eax
1003ce94:	ja     0x1003ceb3
1003ce96:	mov    dl,BYTE PTR [ebp+0x0]
1003ce99:	cmp    dl,BYTE PTR [edi+0x20]
1003ce9c:	jne    0x1003ceb3
1003ce9e:	cmp    ecx,0x1
1003cea1:	je     0x1003c74f
1003cea7:	mov    al,BYTE PTR [ebp+0x1]
1003ceaa:	cmp    al,BYTE PTR [edi+0x21]
1003cead:	je     0x1003c74f
1003ceb3:	mov    ecx,DWORD PTR [esp+0x24]
1003ceb7:	movzx  eax,BYTE PTR [ebp+0x0]
1003cebb:	add    ecx,0xfffffffa
1003cebe:	add    ebp,0x1
1003cec1:	cmp    ecx,0xf
1003cec4:	ja     0x1003cdea
1003ceca:	jmp    DWORD PTR [ecx*4+0x1003d338]
1003ced1:	add    eax,0xfffffff6
1003ced4:	cmp    eax,0x7b
1003ced7:	ja     0x1003c74f
1003cedd:	movzx  ecx,BYTE PTR [eax+0x1003d388]
1003cee4:	jmp    DWORD PTR [ecx*4+0x1003d378]
1003ceeb:	cmp    ebp,DWORD PTR [edi+0x5c]
1003ceee:	jae    0x1003cfcc
1003cef4:	cmp    BYTE PTR [ebp+0x0],0xa
1003cef8:	jne    0x1003cfcc
1003cefe:	add    ebp,0x1
1003cf01:	jmp    0x1003cfcc
1003cf06:	cmp    DWORD PTR [edi+0x50],0x0
1003cf0a:	jne    0x1003c74f
1003cf10:	jmp    0x1003cfcc
1003cf15:	cmp    eax,0x9
1003cf18:	je     0x1003c74f
1003cf1e:	cmp    eax,0x20
1003cf21:	je     0x1003c74f
1003cf27:	cmp    eax,0xa0
1003cf2c:	jmp    0x1003cfc6
1003cf31:	cmp    eax,0x9
1003cf34:	je     0x1003cfcc
1003cf3a:	cmp    eax,0x20
1003cf3d:	je     0x1003cfcc
1003cf43:	cmp    eax,0xa0
1003cf48:	jne    0x1003c74f
1003cf4e:	jmp    0x1003cfcc
1003cf50:	cmp    eax,0xa
1003cf53:	jb     0x1003cfcc
1003cf55:	cmp    eax,0xd
1003cf58:	jbe    0x1003c74f
1003cf5e:	cmp    eax,0x85
1003cf63:	jmp    0x1003cfc6
1003cf65:	cmp    eax,0xa
1003cf68:	jb     0x1003c74f
1003cf6e:	cmp    eax,0xd
1003cf71:	jbe    0x1003cfcc
1003cf73:	cmp    eax,0x85
1003cf78:	jne    0x1003c74f
1003cf7e:	jmp    0x1003cfcc
1003cf80:	mov    edx,DWORD PTR [edi+0x28]
1003cf83:	test   BYTE PTR [eax+edx*1],0x4
1003cf87:	jne    0x1003c74f
1003cf8d:	jmp    0x1003cfcc
1003cf8f:	mov    ecx,DWORD PTR [edi+0x28]
1003cf92:	test   BYTE PTR [eax+ecx*1],0x4
1003cf96:	jmp    0x1003cfc6
1003cf98:	mov    edx,DWORD PTR [edi+0x28]
1003cf9b:	test   BYTE PTR [eax+edx*1],0x1
1003cf9f:	jne    0x1003c74f
1003cfa5:	jmp    0x1003cfcc
1003cfa7:	mov    ecx,DWORD PTR [edi+0x28]
1003cfaa:	test   BYTE PTR [eax+ecx*1],0x1
1003cfae:	jmp    0x1003cfc6
1003cfb0:	mov    edx,DWORD PTR [edi+0x28]
1003cfb3:	test   BYTE PTR [eax+edx*1],0x10
1003cfb7:	jne    0x1003c74f
1003cfbd:	jmp    0x1003cfcc
1003cfbf:	mov    ecx,DWORD PTR [edi+0x28]
1003cfc2:	test   BYTE PTR [eax+ecx*1],0x10
1003cfc6:	je     0x1003c74f
1003cfcc:	mov    edx,DWORD PTR [esp+0x114]
1003cfd3:	mov    eax,DWORD PTR [esp+0x110]
1003cfda:	mov    ecx,DWORD PTR [esp+0x108]
1003cfe1:	add    DWORD PTR [esp+0x18],0x1
1003cfe6:	push   esi
1003cfe7:	push   0x0
1003cfe9:	push   edx
1003cfea:	mov    edx,DWORD PTR [esp+0x110]
1003cff1:	push   eax
1003cff2:	push   edi
1003cff3:	push   ecx
1003cff4:	push   edx
1003cff5:	push   ebx
1003cff6:	push   ebp
1003cff7:	call   0x1003a570
1003cffc:	add    esp,0x24
1003cfff:	test   eax,eax
1003d001:	je     0x1003ce3e
1003d007:	pop    edi
1003d008:	pop    esi
1003d009:	pop    ebp
1003d00a:	pop    ebx
1003d00b:	add    esp,0xe8
1003d011:	ret    
1003d012:	cmp    ebp,DWORD PTR [esp+0x20]
1003d016:	jb     0x1003d064
1003d018:	mov    esi,DWORD PTR [esp+0x11c]
1003d01f:	mov    edi,DWORD PTR [esp+0x104]
1003d026:	add    esi,0x1
1003d029:	mov    eax,DWORD PTR [esp+0x114]
1003d030:	mov    ecx,DWORD PTR [esp+0x110]
1003d037:	mov    edx,DWORD PTR [esp+0x10c]
1003d03e:	push   esi
1003d03f:	push   0x0
1003d041:	push   eax
1003d042:	mov    eax,DWORD PTR [esp+0x114]
1003d049:	push   ecx
1003d04a:	push   edx
1003d04b:	push   eax
1003d04c:	push   edi
1003d04d:	push   ebx
1003d04e:	push   ebp
1003d04f:	call   0x1003a570
1003d054:	add    esp,0x24
1003d057:	sub    ebp,0x1
1003d05a:	test   eax,eax
1003d05c:	jne    0x1003d076
1003d05e:	cmp    ebp,DWORD PTR [esp+0x20]
1003d062:	jae    0x1003d029
1003d064:	xor    eax,eax
1003d066:	pop    edi
1003d067:	pop    esi
1003d068:	pop    ebp
1003d069:	pop    ebx
1003d06a:	add    esp,0xe8
1003d070:	ret    
1003d071:	mov    eax,0xfffffffb
1003d076:	pop    edi
1003d077:	pop    esi
1003d078:	pop    ebp
1003d079:	pop    ebx
1003d07a:	add    esp,0xe8
1003d080:	ret    
1003d081:	lea    ecx,[ecx+0x0]
1003d084:	add    ah,BYTE PTR [edi-0x53b9effd]
1003d08a:	add    edx,DWORD PTR [eax]
1003d08c:	push   edi
1003d08d:	lods   al,BYTE PTR ds:[esi]
1003d08e:	add    edx,DWORD PTR [eax]
1003d090:	ins    DWORD PTR es:[edi],dx
1003d091:	lods   al,BYTE PTR ds:[esi]
1003d092:	add    edx,DWORD PTR [eax]
1003d094:	mov    eax,ds:0x951003ad
1003d099:	scas   al,BYTE PTR es:[edi]
1003d09a:	add    edx,DWORD PTR [eax]
1003d09c:	mov    edx,0xdf1003ae
1003d0a1:	scas   al,BYTE PTR es:[edi]
1003d0a2:	add    edx,DWORD PTR [eax]
1003d0a4:	add    al,0xaf
1003d0a6:	add    edx,DWORD PTR [eax]
1003d0a8:	sub    DWORD PTR [edi-0x50b1effd],ebp
1003d0ae:	add    edx,DWORD PTR [eax]
1003d0b0:	or     ch,BYTE PTR [esi-0x5196effd]
1003d0b6:	add    edx,DWORD PTR [eax]
1003d0b8:	jg     0x1003d068
1003d0ba:	add    edx,DWORD PTR [eax]
1003d0bc:	jae    0x1003d06d
1003d0be:	add    edx,DWORD PTR [eax]
1003d0c0:	loopne 0x1003d071
1003d0c2:	add    edx,DWORD PTR [eax]
1003d0c4:	pop    eax
1003d0c5:	mov    al,0x3
1003d0c7:	adc    al,al
1003d0c9:	mov    al,0x3
1003d0cb:	adc    BYTE PTR [ecx],al
1003d0cd:	mov    cl,0x3
1003d0cf:	adc    BYTE PTR [esi],cl
1003d0d1:	lods   eax,DWORD PTR ds:[esi]
1003d0d2:	add    edx,DWORD PTR [eax]
1003d0d4:	nop
1003d0d5:	lods   eax,DWORD PTR ds:[esi]
1003d0d6:	add    edx,DWORD PTR [eax]
1003d0d8:	push   ecx
1003d0d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
1003d0da:	add    edx,DWORD PTR [eax]
1003d0dc:	mov    dh,0xab
1003d0de:	add    edx,DWORD PTR [eax]
1003d0e0:	jl     0x1003d08e
1003d0e2:	add    edx,DWORD PTR [eax]
1003d0e4:	and    dh,BYTE PTR [ebp-0x4ab8effd]
1003d0ea:	add    edx,DWORD PTR [eax]
1003d0ec:	iret   
1003d0ed:	mov    bh,0x3
1003d0ef:	adc    cl,bl
1003d0f1:	mov    ch,0x3
1003d0f3:	adc    BYTE PTR [ecx+0x771003b5],dl
1003d0f9:	mov    ch,0x3
1003d0fb:	adc    BYTE PTR [esi-0x42effc4b],ch
1003d101:	mov    ch,0x3
1003d103:	adc    dl,cl
1003d105:	mov    ch,0x3
1003d107:	adc    BYTE PTR [ecx-0x5eeffc4b],cl
1003d10d:	mov    eax,0xb83d1003
1003d112:	add    edx,DWORD PTR [eax]
1003d114:	sub    DWORD PTR [eax-0x47a2effd],edi
1003d11a:	add    edx,DWORD PTR [eax]
1003d11c:	ins    BYTE PTR es:[edi],dx
1003d11d:	mov    eax,0xb8791003
1003d122:	add    edx,DWORD PTR [eax]
1003d124:	mov    BYTE PTR [eax-0x44d6effd],bh
1003d12a:	add    edx,DWORD PTR [eax]
1003d12c:	mov    edx,0x9c1003ba
1003d131:	mov    edx,0xbadc1003
1003d136:	add    edx,DWORD PTR [eax]
1003d138:	out    dx,al
1003d139:	mov    edx,0xbafb1003
1003d13e:	add    edx,DWORD PTR [eax]
1003d140:	push   cs
1003d141:	mov    ebx,0xb35f1003
1003d146:	add    edx,DWORD PTR [eax]
1003d148:	inc    esi
1003d149:	mov    cl,0x3
1003d14b:	adc    ah,dl
1003d14d:	mov    DWORD PTR [ebx],0x3a88110
1003d153:	adc    ah,al
1003d155:	test   eax,0xaa9a1003
1003d15a:	add    edx,DWORD PTR [eax]
1003d15c:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
1003d15e:	add    edx,DWORD PTR [eax]
1003d160:	hlt    
1003d161:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
1003d162:	add    edx,DWORD PTR [eax]
1003d164:	data16 test al,0x3
1003d167:	adc    BYTE PTR ds:0xc81003a9,bl
1003d16d:	ret    0x1003
1003d170:	mov    al,0xc2
1003d172:	add    edx,DWORD PTR [eax]
1003d174:	sub    DWORD PTR [esi-0x5627effd],esp
1003d17a:	add    edx,DWORD PTR [eax]
1003d17c:	sub    ebp,DWORD PTR [edx-0x3b06effd]
1003d182:	add    edx,DWORD PTR [eax]
1003d184:	scas   eax,DWORD PTR es:[edi]
1003d185:	lds    eax,FWORD PTR [ebx]
1003d187:	adc    BYTE PTR ds:0x541003c6,cl
1003d18d:	lds    eax,FWORD PTR [ebx]
1003d18f:	adc    BYTE PTR [edi-0x39],cl
1003d192:	add    edx,DWORD PTR [eax]
1003d194:	sub    BYTE PTR [edx-0x2f8eeffd],0x3
1003d19b:	adc    BYTE PTR [eax],al
1003d19d:	add    DWORD PTR [edx],eax
1003d19f:	add    eax,DWORD PTR [esp+eax*1]
1003d1a2:	add    eax,0x9080706
1003d1a7:	or     cl,BYTE PTR [ebx]
1003d1a9:	or     al,0xd
1003d1ab:	inc    ebp
1003d1ac:	inc    ebp
1003d1ad:	push   cs
1003d1ae:	movups xmm2,XMMWORD PTR [ecx]
1003d1b1:	adc    al,BYTE PTR [ebp+0x13]
1003d1b4:	adc    al,0x15
1003d1b6:	push   ss
1003d1b7:	pop    ss
1003d1b8:	sbb    BYTE PTR [ecx],bl
1003d1ba:	sbb    bl,BYTE PTR [ebx]
1003d1bc:	sbb    ebx,DWORD PTR [ebx]
1003d1be:	sbb    ebx,DWORD PTR [ebx]
1003d1c0:	sbb    ebx,DWORD PTR [esp+ebx*1]
1003d1c3:	sbb    eax,0x21201f1e
1003d1c8:	and    ah,BYTE PTR [edx]
1003d1ca:	and    ah,BYTE PTR [edx]
1003d1cc:	and    ah,BYTE PTR [edx]
1003d1ce:	and    esp,DWORD PTR [ebx]
1003d1d0:	and    al,0x25
1003d1d2:	es daa 
1003d1d4:	sub    BYTE PTR [ecx],ch
1003d1d6:	sub    DWORD PTR [ecx],ebp
1003d1d8:	sub    DWORD PTR [ecx],ebp
1003d1da:	sub    DWORD PTR [edx],ebp
1003d1dc:	sub    ch,BYTE PTR [ebx]
1003d1de:	sub    al,0x2d
1003d1e0:	cs das 
1003d1e2:	inc    ebp
1003d1e3:	inc    ebp
1003d1e4:	inc    ebp
1003d1e5:	inc    ebp
1003d1e6:	inc    ebp
1003d1e7:	inc    ebp
1003d1e8:	inc    ebp
1003d1e9:	inc    ebp
1003d1ea:	xor    BYTE PTR [eax],dh
1003d1ec:	inc    ebp
1003d1ed:	xor    DWORD PTR [edx],esi
1003d1ef:	xor    esi,DWORD PTR [esi*1+0x37363535]
1003d1f6:	ss aaa 
1003d1f8:	cmp    BYTE PTR [ecx],bh
1003d1fa:	cmp    bh,BYTE PTR [ebx]
1003d1fc:	cmp    al,0x3a
1003d1fe:	cmp    edi,DWORD PTR [eax*2+0x3e3d4545]
1003d205:	aas    
1003d206:	inc    eax
1003d207:	inc    ecx
1003d208:	inc    edx
1003d209:	inc    ebx
1003d20a:	add    BYTE PTR [ebp+eiz*4-0x4f],al
1003d20e:	add    edx,DWORD PTR [eax]
1003d210:	fdiv   DWORD PTR [ecx+0x1003]
1003d216:	add    BYTE PTR [eax],al
1003d218:	add    BYTE PTR [eax],al
1003d21a:	add    DWORD PTR [ecx],eax
1003d21c:	mov    DWORD PTR [ebx-0x4c4aeffd],esi
1003d222:	add    edx,DWORD PTR [eax]
1003d224:	add    BYTE PTR [eax],al
1003d226:	add    BYTE PTR [eax],al
1003d228:	add    BYTE PTR [eax],al
1003d22a:	add    DWORD PTR [ecx],eax
1003d22c:	xchg   DWORD PTR [ebp-0x423eeffd],edi
1003d232:	add    edx,DWORD PTR [eax]
1003d234:	repnz mov ebp,0xbe231003
1003d23a:	add    edx,DWORD PTR [eax]
1003d23c:	push   ecx
1003d23d:	mov    esi,0xbe7e1003
1003d242:	add    edx,DWORD PTR [eax]
1003d244:	lea    edi,[ebx-0x43e9effd]
1003d24a:	add    edx,DWORD PTR [eax]
1003d24c:	push   ss
1003d24d:	mov    esp,0xcdea1003
1003d252:	add    edx,DWORD PTR [eax]
1003d254:	jmp    0x3bc:0x1d1003cd
1003d25b:	adc    BYTE PTR [esi-0x44],bh
1003d25e:	add    edx,DWORD PTR [eax]
1003d260:	enter  0x3bc,0x10
1003d264:	add    eax,0x461003bd
1003d269:	mov    ebp,0xbc721003
1003d26e:	add    edx,DWORD PTR [eax]
1003d270:	push   0x591003bc
1003d275:	mov    esp,0xc74f1003
1003d27a:	add    edx,DWORD PTR [eax]
1003d27c:	add    BYTE PTR [ecx],al
1003d27e:	add    DWORD PTR [edx],eax
1003d280:	add    eax,DWORD PTR [ebx]
1003d282:	add    eax,DWORD PTR [ebx]
1003d284:	add    eax,DWORD PTR [ebx]
1003d286:	add    eax,DWORD PTR [ebx]
1003d288:	add    eax,DWORD PTR [ebx]
1003d28a:	add    eax,DWORD PTR [ebx]
1003d28c:	add    eax,DWORD PTR [ebx]
1003d28e:	add    eax,DWORD PTR [ebx]
1003d290:	add    eax,DWORD PTR [ebx]
1003d292:	add    eax,DWORD PTR [ebx]
1003d294:	add    eax,DWORD PTR [ebx]
1003d296:	add    eax,DWORD PTR [ebx]
1003d298:	add    eax,DWORD PTR [ebx]
1003d29a:	add    eax,DWORD PTR [ebx]
1003d29c:	add    eax,DWORD PTR [ebx]
1003d29e:	add    eax,DWORD PTR [ebx]
1003d2a0:	add    eax,DWORD PTR [ebx]
1003d2a2:	add    eax,DWORD PTR [ebx]
1003d2a4:	add    eax,DWORD PTR [ebx]
1003d2a6:	add    eax,DWORD PTR [ebx]
1003d2a8:	add    eax,DWORD PTR [ebx]
1003d2aa:	add    eax,DWORD PTR [ebx]
1003d2ac:	add    eax,DWORD PTR [ebx]
1003d2ae:	add    eax,DWORD PTR [ebx]
1003d2b0:	add    eax,DWORD PTR [ebx]
1003d2b2:	add    eax,DWORD PTR [ebx]
1003d2b4:	add    eax,DWORD PTR [ebx]
1003d2b6:	add    eax,DWORD PTR [ebx]
1003d2b8:	add    eax,DWORD PTR [ebx]
1003d2ba:	add    eax,DWORD PTR [ebx]
1003d2bc:	add    eax,DWORD PTR [ebx]
1003d2be:	add    eax,DWORD PTR [ebx]
1003d2c0:	add    eax,DWORD PTR [ebx]
1003d2c2:	add    eax,DWORD PTR [ebx]
1003d2c4:	add    eax,DWORD PTR [ebx]
1003d2c6:	add    eax,DWORD PTR [ebx]
1003d2c8:	add    eax,DWORD PTR [ebx]
1003d2ca:	add    eax,DWORD PTR [ebx]
1003d2cc:	add    eax,DWORD PTR [ebx]
1003d2ce:	add    eax,DWORD PTR [ebx]
1003d2d0:	add    eax,DWORD PTR [ebx]
1003d2d2:	add    eax,DWORD PTR [ebx]
1003d2d4:	add    eax,DWORD PTR [ebx]
1003d2d6:	add    eax,DWORD PTR [ebx]
1003d2d8:	add    eax,DWORD PTR [ebx]
1003d2da:	add    eax,DWORD PTR [ebx]
1003d2dc:	add    eax,DWORD PTR [ebx]
1003d2de:	add    eax,DWORD PTR [ebx]
1003d2e0:	add    eax,DWORD PTR [ebx]
1003d2e2:	add    eax,DWORD PTR [ebx]
1003d2e4:	add    eax,DWORD PTR [ebx]
1003d2e6:	add    eax,DWORD PTR [ebx]
1003d2e8:	add    eax,DWORD PTR [ebx]
1003d2ea:	add    eax,DWORD PTR [ebx]
1003d2ec:	add    eax,DWORD PTR [ebx]
1003d2ee:	add    eax,DWORD PTR [ebx]
1003d2f0:	add    eax,DWORD PTR [ebx]
1003d2f2:	add    eax,DWORD PTR [ebx]
1003d2f4:	add    eax,DWORD PTR [ebx]
1003d2f6:	add    eax,DWORD PTR [ecx]
1003d2f8:	std    
1003d2f9:	rol    BYTE PTR [ebx],0x10
1003d2fc:	cmp    al,cl
1003d2fe:	add    edx,DWORD PTR [eax]
1003d300:	jno    0x1003d2c3
1003d302:	add    edx,DWORD PTR [eax]
1003d304:	stos   BYTE PTR es:[edi],al
1003d305:	rol    DWORD PTR [ebx],0x10
1003d308:	fcmovb st,st(1)
1003d30a:	add    edx,DWORD PTR [eax]
1003d30c:	add    al,dl
1003d30e:	add    edx,DWORD PTR [eax]
1003d310:	fdivr  QWORD PTR [esi-0x40a8effd]
1003d316:	add    edx,DWORD PTR [eax]
1003d318:	push   edi
1003d319:	mov    edi,0xcdea1003
1003d31e:	add    edx,DWORD PTR [eax]
1003d320:	jmp    0x3bf:0x6f1003cd
1003d327:	adc    ch,dl
1003d329:	mov    edi,0xc01c1003
1003d32e:	add    edx,DWORD PTR [eax]
1003d330:	pop    ebx
1003d331:	rol    BYTE PTR [ebx],0x10
1003d334:	mov    ah,0xc0
1003d336:	add    edx,DWORD PTR [eax]
1003d338:	or     bh,0x3
1003d33b:	adc    BYTE PTR [edi-0x67effc31],cl
1003d341:	iret   
1003d342:	add    edx,DWORD PTR [eax]
1003d344:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
1003d345:	iret   
1003d346:	add    edx,DWORD PTR [eax]
1003d348:	mov    al,0xcf
1003d34a:	add    edx,DWORD PTR [eax]
1003d34c:	mov    edi,0xcc1003cf
1003d351:	iret   
1003d352:	add    edx,DWORD PTR [eax]
1003d354:	int3   
1003d355:	iret   
1003d356:	add    edx,DWORD PTR [eax]
1003d358:	int3   
1003d359:	iret   
1003d35a:	add    edx,DWORD PTR [eax]
1003d35c:	jmp    0x3cd:0xea1003cd
1003d363:	adc    cl,dl
1003d365:	into   
1003d366:	add    edx,DWORD PTR [eax]
1003d368:	adc    eax,0x311003cf
1003d36d:	iret   
1003d36e:	add    edx,DWORD PTR [eax]
1003d370:	push   eax
1003d371:	iret   
1003d372:	add    edx,DWORD PTR [eax]
1003d374:	gs iret 
1003d376:	add    edx,DWORD PTR [eax]
1003d378:	int3   
1003d379:	iret   
1003d37a:	add    edx,DWORD PTR [eax]
1003d37c:	push   es
1003d37d:	iret   
1003d37e:	add    edx,DWORD PTR [eax]
1003d380:	jmp    0x1003d350
1003d382:	add    edx,DWORD PTR [eax]
1003d384:	dec    edi
1003d385:	mov    DWORD PTR [ebx],0x1010010
1003d38b:	add    al,BYTE PTR [ebx]
1003d38d:	add    eax,DWORD PTR [ebx]
1003d38f:	add    eax,DWORD PTR [ebx]
1003d391:	add    eax,DWORD PTR [ebx]
1003d393:	add    eax,DWORD PTR [ebx]
1003d395:	add    eax,DWORD PTR [ebx]
1003d397:	add    eax,DWORD PTR [ebx]
1003d399:	add    eax,DWORD PTR [ebx]
1003d39b:	add    eax,DWORD PTR [ebx]
1003d39d:	add    eax,DWORD PTR [ebx]
1003d39f:	add    eax,DWORD PTR [ebx]
1003d3a1:	add    eax,DWORD PTR [ebx]
1003d3a3:	add    eax,DWORD PTR [ebx]
1003d3a5:	add    eax,DWORD PTR [ebx]
1003d3a7:	add    eax,DWORD PTR [ebx]
1003d3a9:	add    eax,DWORD PTR [ebx]
1003d3ab:	add    eax,DWORD PTR [ebx]
1003d3ad:	add    eax,DWORD PTR [ebx]
1003d3af:	add    eax,DWORD PTR [ebx]
1003d3b1:	add    eax,DWORD PTR [ebx]
1003d3b3:	add    eax,DWORD PTR [ebx]
1003d3b5:	add    eax,DWORD PTR [ebx]
1003d3b7:	add    eax,DWORD PTR [ebx]
1003d3b9:	add    eax,DWORD PTR [ebx]
1003d3bb:	add    eax,DWORD PTR [ebx]
1003d3bd:	add    eax,DWORD PTR [ebx]
1003d3bf:	add    eax,DWORD PTR [ebx]
1003d3c1:	add    eax,DWORD PTR [ebx]
1003d3c3:	add    eax,DWORD PTR [ebx]
1003d3c5:	add    eax,DWORD PTR [ebx]
1003d3c7:	add    eax,DWORD PTR [ebx]
1003d3c9:	add    eax,DWORD PTR [ebx]
1003d3cb:	add    eax,DWORD PTR [ebx]
1003d3cd:	add    eax,DWORD PTR [ebx]
1003d3cf:	add    eax,DWORD PTR [ebx]
1003d3d1:	add    eax,DWORD PTR [ebx]
1003d3d3:	add    eax,DWORD PTR [ebx]
1003d3d5:	add    eax,DWORD PTR [ebx]
1003d3d7:	add    eax,DWORD PTR [ebx]
1003d3d9:	add    eax,DWORD PTR [ebx]
1003d3db:	add    eax,DWORD PTR [ebx]
1003d3dd:	add    eax,DWORD PTR [ebx]
1003d3df:	add    eax,DWORD PTR [ebx]
1003d3e1:	add    eax,DWORD PTR [ebx]
1003d3e3:	add    eax,DWORD PTR [ebx]
1003d3e5:	add    eax,DWORD PTR [ebx]
1003d3e7:	add    eax,DWORD PTR [ebx]
1003d3e9:	add    eax,DWORD PTR [ebx]
1003d3eb:	add    eax,DWORD PTR [ebx]
1003d3ed:	add    eax,DWORD PTR [ebx]
1003d3ef:	add    eax,DWORD PTR [ebx]
1003d3f1:	add    eax,DWORD PTR [ebx]
1003d3f3:	add    eax,DWORD PTR [ebx]
1003d3f5:	add    eax,DWORD PTR [ebx]
1003d3f7:	add    eax,DWORD PTR [ebx]
1003d3f9:	add    eax,DWORD PTR [ebx]
1003d3fb:	add    eax,DWORD PTR [ebx]
1003d3fd:	add    eax,DWORD PTR [ebx]
1003d3ff:	add    eax,DWORD PTR [ebx]
1003d401:	add    eax,DWORD PTR [ebx]
1003d403:	add    esp,ecx
1003d405:	int3   
1003d406:	int3   
1003d407:	int3   
1003d408:	int3   
1003d409:	int3   
1003d40a:	int3   
1003d40b:	int3   
1003d40c:	int3   
1003d40d:	int3   
1003d40e:	int3   
1003d40f:	int3   
1003d410:	sub    esp,0x134
1003d416:	mov    eax,ds:0x1007e030
1003d41b:	xor    eax,esp
1003d41d:	mov    DWORD PTR [esp+0x12c],eax
1003d424:	mov    eax,DWORD PTR [esp+0x13c]
1003d42b:	push   ebx
1003d42c:	mov    ebx,DWORD PTR [esp+0x148]
1003d433:	push   ebp
1003d434:	mov    ebp,DWORD PTR [esp+0x140]
1003d43b:	push   esi
1003d43c:	mov    esi,ecx
1003d43e:	or     ecx,0xffffffff
1003d441:	push   edi
1003d442:	mov    edi,edx
1003d444:	xor    edx,edx
1003d446:	test   esi,0xfe0f5a6f
1003d44c:	mov    DWORD PTR [esp+0x1c],ecx
1003d450:	mov    DWORD PTR [esp+0x44],ecx
1003d454:	mov    DWORD PTR [esp+0x50],ecx
1003d458:	lea    ecx,[edi-0x1]
1003d45b:	mov    DWORD PTR [esp+0x28],ebx
1003d45f:	mov    DWORD PTR [esp+0x2c],edx
1003d463:	mov    DWORD PTR [esp+0x4c],edx
1003d467:	mov    DWORD PTR [esp+0x54],edx
1003d46b:	mov    DWORD PTR [esp+0x3c],edx
1003d46f:	mov    DWORD PTR [esp+0x58],edi
1003d473:	mov    DWORD PTR [esp+0x34],ecx
1003d477:	mov    DWORD PTR [esp+0x20],ebp
1003d47b:	je     0x1003d487
1003d47d:	mov    eax,0xfffffffd
1003d482:	jmp    0x1003dd7c
1003d487:	cmp    ebp,edx
1003d489:	je     0x1003dd77
1003d48f:	cmp    edi,edx
1003d491:	je     0x1003dd77
1003d497:	cmp    ebx,edx
1003d499:	je     0x1003dd77
1003d49f:	cmp    eax,edx
1003d4a1:	mov    ecx,0x989680
1003d4a6:	mov    DWORD PTR [esp+0x8c],ecx
1003d4ad:	mov    DWORD PTR [esp+0x90],ecx
1003d4b4:	mov    ecx,DWORD PTR [ebp+0x20]
1003d4b7:	mov    DWORD PTR [esp+0x14],edx
1003d4bb:	mov    DWORD PTR [esp+0x108],edx
1003d4c2:	mov    DWORD PTR [esp+0x18],ecx
1003d4c6:	je     0x1003d50f
1003d4c8:	mov    ecx,DWORD PTR [eax]
1003d4ca:	test   cl,0x1
1003d4cd:	je     0x1003d4d6
1003d4cf:	mov    ebx,DWORD PTR [eax+0x4]
1003d4d2:	mov    DWORD PTR [esp+0x14],ebx
1003d4d6:	test   cl,0x2
1003d4d9:	je     0x1003d4e5
1003d4db:	mov    ebx,DWORD PTR [eax+0x8]
1003d4de:	mov    DWORD PTR [esp+0x8c],ebx
1003d4e5:	test   cl,0x10
1003d4e8:	je     0x1003d4f4
1003d4ea:	mov    ebx,DWORD PTR [eax+0x14]
1003d4ed:	mov    DWORD PTR [esp+0x90],ebx
1003d4f4:	test   cl,0x4
1003d4f7:	je     0x1003d503
1003d4f9:	mov    ebx,DWORD PTR [eax+0xc]
1003d4fc:	mov    DWORD PTR [esp+0x108],ebx
1003d503:	test   cl,0x8
1003d506:	je     0x1003d50f
1003d508:	mov    eax,DWORD PTR [eax+0x10]
1003d50b:	mov    DWORD PTR [esp+0x18],eax
1003d50f:	cmp    DWORD PTR [esp+0x18],edx
1003d513:	jne    0x1003d51d
1003d515:	mov    DWORD PTR [esp+0x18],0x1006e4e8
1003d51d:	cmp    DWORD PTR [ebp+0x0],0x50435245
1003d524:	je     0x1003d56c
1003d526:	mov    ebx,DWORD PTR [esp+0x14]
1003d52a:	lea    ecx,[esp+0x114]
1003d531:	push   ecx
1003d532:	lea    edx,[esp+0x64]
1003d536:	push   edx
1003d537:	mov    edx,ebp
1003d539:	call   0x10042f60
1003d53e:	add    esp,0x8
1003d541:	test   eax,eax
1003d543:	mov    DWORD PTR [esp+0x20],eax
1003d547:	jne    0x1003d553
1003d549:	mov    eax,0xfffffffc
1003d54e:	jmp    0x1003dd7c
1003d553:	mov    ebx,DWORD PTR [esp+0x20]
1003d557:	xor    edx,edx
1003d559:	cmp    DWORD PTR [esp+0x14],edx
1003d55d:	je     0x1003d570
1003d55f:	lea    eax,[esp+0x114]
1003d566:	mov    DWORD PTR [esp+0x14],eax
1003d56a:	jmp    0x1003d570
1003d56c:	xor    edx,edx
1003d56e:	mov    ebx,ebp
1003d570:	mov    eax,DWORD PTR [ebx+0x8]
1003d573:	mov    ecx,eax
1003d575:	shr    eax,0x12
1003d578:	and    eax,0x1
1003d57b:	or     ecx,esi
1003d57d:	mov    DWORD PTR [esp+0x38],eax
1003d581:	movzx  eax,WORD PTR [ebx+0x1a]
1003d585:	shr    ecx,0x4
1003d588:	and    ecx,0x1
1003d58b:	mov    DWORD PTR [esp+0x40],ecx
1003d58f:	movzx  ecx,BYTE PTR [ebx+0xc]
1003d593:	shr    ecx,0x3
1003d596:	and    ecx,0x1
1003d599:	mov    DWORD PTR [esp+0x48],ecx
1003d59d:	movzx  ecx,WORD PTR [ebx+0x1c]
1003d5a1:	imul   ecx,eax
1003d5a4:	movzx  eax,WORD PTR [ebx+0x18]
1003d5a8:	add    ecx,ebp
1003d5aa:	add    eax,ecx
1003d5ac:	mov    ecx,DWORD PTR [esp+0x150]
1003d5b3:	mov    DWORD PTR [esp+0xdc],eax
1003d5ba:	mov    DWORD PTR [esp+0xe0],edi
1003d5c1:	add    edi,ecx
1003d5c3:	mov    DWORD PTR [esp+0xe4],edi
1003d5ca:	mov    ecx,0x1
1003d5cf:	mov    DWORD PTR [esp+0xf8],edx
1003d5d6:	mov    eax,DWORD PTR [ebx+0x8]
1003d5d9:	shr    eax,0x5
1003d5dc:	and    eax,ecx
1003d5de:	mov    DWORD PTR [esp+0xc8],eax
1003d5e5:	mov    eax,DWORD PTR [ebx+0x8]
1003d5e8:	shr    eax,0xb
1003d5eb:	and    eax,ecx
1003d5ed:	mov    DWORD PTR [esp+0xc0],eax
1003d5f4:	mov    DWORD PTR [esp+0x24],eax
1003d5f8:	mov    eax,DWORD PTR [ebx+0x8]
1003d5fb:	shr    eax,0x19
1003d5fe:	and    eax,ecx
1003d600:	mov    ebp,DWORD PTR [esp+0x18]
1003d604:	mov    DWORD PTR [esp+0xc4],eax
1003d60b:	mov    eax,esi
1003d60d:	shr    eax,0x7
1003d610:	and    eax,ecx
1003d612:	mov    DWORD PTR [esp+0xb8],eax
1003d619:	mov    eax,esi
1003d61b:	shr    eax,0x8
1003d61e:	and    eax,ecx
1003d620:	mov    DWORD PTR [esp+0xbc],eax
1003d627:	mov    eax,esi
1003d629:	shr    eax,0xa
1003d62c:	and    eax,ecx
1003d62e:	mov    DWORD PTR [esp+0x30],edi
1003d632:	mov    DWORD PTR [esp+0xcc],eax
1003d639:	lea    eax,[ebp+0x340]
1003d63f:	mov    edi,esi
1003d641:	shr    edi,0xf
1003d644:	mov    DWORD PTR [esp+0xb0],eax
1003d64b:	and    edi,ecx
1003d64d:	mov    eax,esi
1003d64f:	and    eax,0x1800000
1003d654:	mov    DWORD PTR [esp+0xd0],edi
1003d65b:	mov    DWORD PTR [esp+0xd4],edx
1003d662:	mov    DWORD PTR [esp+0x104],edx
1003d669:	mov    DWORD PTR [esp+0xac],ebp
1003d670:	je     0x1003d693
1003d672:	cmp    eax,0x800000
1003d677:	je     0x1003d68a
1003d679:	cmp    eax,0x1000000
1003d67e:	je     0x1003d6ab
1003d680:	mov    eax,0xffffffe9
1003d685:	jmp    0x1003dd7c
1003d68a:	mov    DWORD PTR [esp+0xd8],ecx
1003d691:	jmp    0x1003d6b2
1003d693:	mov    eax,DWORD PTR [ebx+0x8]
1003d696:	test   eax,0x1800000
1003d69b:	je     0x1003d6ab
1003d69d:	shr    eax,0x17
1003d6a0:	and    eax,ecx
1003d6a2:	mov    DWORD PTR [esp+0xd8],eax
1003d6a9:	jmp    0x1003d6b2
1003d6ab:	mov    DWORD PTR [esp+0xd8],edx
1003d6b2:	test   esi,0x700000
1003d6b8:	jne    0x1003d6bd
1003d6ba:	mov    esi,DWORD PTR [ebx+0x8]
1003d6bd:	and    esi,0x700000
1003d6c3:	cmp    esi,0x300000
1003d6c9:	ja     0x1003d722
1003d6cb:	je     0x1003d71b
1003d6cd:	cmp    esi,edx
1003d6cf:	je     0x1003d6e1
1003d6d1:	cmp    esi,0x100000
1003d6d7:	je     0x1003d714
1003d6d9:	cmp    esi,0x200000
1003d6df:	jne    0x1003d680
1003d6e1:	mov    eax,0xa
1003d6e6:	cmp    eax,0xff
1003d6eb:	mov    DWORD PTR [esp+0xa0],edx
1003d6f2:	jle    0x1003d74c
1003d6f4:	mov    ecx,eax
1003d6f6:	sar    ecx,0x8
1003d6f9:	mov    DWORD PTR [esp+0xa4],0x2
1003d704:	mov    BYTE PTR [esp+0xa8],cl
1003d70b:	mov    BYTE PTR [esp+0xa9],al
1003d712:	jmp    0x1003d75a
1003d714:	mov    eax,0xd
1003d719:	jmp    0x1003d6e6
1003d71b:	mov    eax,0xd0a
1003d720:	jmp    0x1003d6e6
1003d722:	cmp    esi,0x400000
1003d728:	je     0x1003d743
1003d72a:	cmp    esi,0x500000
1003d730:	jne    0x1003d680
1003d736:	mov    DWORD PTR [esp+0xa0],0x2
1003d741:	jmp    0x1003d75a
1003d743:	mov    DWORD PTR [esp+0xa0],ecx
1003d74a:	jmp    0x1003d75a
1003d74c:	mov    DWORD PTR [esp+0xa4],ecx
1003d753:	mov    BYTE PTR [esp+0xa8],al
1003d75a:	cmp    edi,edx
1003d75c:	je     0x1003d76e
1003d75e:	test   BYTE PTR [ebx+0xc],0x1
1003d762:	je     0x1003d76e
1003d764:	mov    eax,0xfffffff3
1003d769:	jmp    0x1003dd7c
1003d76e:	mov    eax,DWORD PTR [ebx+0x8]
1003d771:	and    eax,0x7
1003d774:	mov    DWORD PTR [esp+0x5c],eax
1003d778:	movzx  eax,WORD PTR [ebx+0x12]
1003d77c:	cmp    ax,dx
1003d77f:	mov    esi,0x33
1003d784:	jbe    0x1003d7c4
1003d786:	movzx  eax,ax
1003d789:	cmp    eax,0x11
1003d78c:	jl     0x1003d7c4
1003d78e:	lea    esi,[eax+eax*2+0x3]
1003d792:	lea    ecx,[esi*4+0x0]
1003d799:	push   ecx
1003d79a:	call   DWORD PTR ds:0x1007f4f8
1003d7a0:	mov    edi,eax
1003d7a2:	add    esp,0x4
1003d7a5:	test   edi,edi
1003d7a7:	mov    DWORD PTR [esp+0x94],edi
1003d7ae:	jne    0x1003d7ba
1003d7b0:	mov    eax,0xfffffffa
1003d7b5:	jmp    0x1003dd7c
1003d7ba:	mov    DWORD PTR [esp+0x2c],0x1
1003d7c2:	jmp    0x1003d7cf
1003d7c4:	mov    edi,DWORD PTR [esp+0x28]
1003d7c8:	mov    DWORD PTR [esp+0x94],edi
1003d7cf:	lea    ecx,[esi+esi*1]
1003d7d2:	mov    eax,0x55555556
1003d7d7:	imul   ecx
1003d7d9:	mov    eax,edx
1003d7db:	shr    eax,0x1f
1003d7de:	add    eax,edx
1003d7e0:	mov    DWORD PTR [esp+0x9c],eax
1003d7e7:	mov    DWORD PTR [esp+0x98],esi
1003d7ee:	mov    DWORD PTR [esp+0xb4],0x0
1003d7f9:	mov    DWORD PTR [esp+0xf4],0xffffffff
1003d804:	movzx  eax,WORD PTR [ebx+0x10]
1003d808:	lea    eax,[eax+eax*1+0x2]
1003d80c:	cmp    eax,0x33
1003d80f:	mov    DWORD PTR [esp+0x18],eax
1003d813:	jle    0x1003d81b
1003d815:	mov    eax,esi
1003d817:	mov    DWORD PTR [esp+0x18],esi
1003d81b:	test   edi,edi
1003d81d:	je     0x1003d84d
1003d81f:	cdq    
1003d820:	sub    eax,edx
1003d822:	sar    eax,1
1003d824:	mov    edx,0x1
1003d829:	lea    ecx,[edi+esi*4]
1003d82c:	sub    edx,eax
1003d82e:	lea    eax,[ecx+edx*4]
1003d831:	sub    ecx,0x4
1003d834:	cmp    ecx,eax
1003d836:	jb     0x1003d84d
1003d838:	jmp    0x1003d840
1003d83a:	lea    ebx,[ebx+0x0]
1003d840:	mov    DWORD PTR [ecx],0xffffffff
1003d846:	sub    ecx,0x4
1003d849:	cmp    ecx,eax
1003d84b:	jae    0x1003d840
1003d84d:	cmp    DWORD PTR [esp+0x40],0x0
1003d852:	jne    0x1003d8a3
1003d854:	test   BYTE PTR [ebx+0xc],0x2
1003d858:	je     0x1003d887
1003d85a:	movzx  eax,WORD PTR [ebx+0x14]
1003d85e:	mov    ecx,eax
1003d860:	and    ecx,0xff
1003d866:	shr    eax,0x8
1003d869:	and    eax,0x1
1003d86c:	mov    DWORD PTR [esp+0x1c],ecx
1003d870:	mov    DWORD PTR [esp+0x4c],eax
1003d874:	je     0x1003d8a3
1003d876:	mov    eax,DWORD PTR [esp+0xac]
1003d87d:	movzx  ecx,BYTE PTR [eax+ecx*1]
1003d881:	mov    DWORD PTR [esp+0x1c],ecx
1003d885:	jmp    0x1003d8a3
1003d887:	cmp    DWORD PTR [esp+0x48],0x0
1003d88c:	jne    0x1003d8a3
1003d88e:	mov    eax,DWORD PTR [esp+0x14]
1003d892:	test   eax,eax
1003d894:	je     0x1003d8a3
1003d896:	test   BYTE PTR [eax+0x4],0x1
1003d89a:	je     0x1003d8a3
1003d89c:	add    eax,0x8
1003d89f:	mov    DWORD PTR [esp+0x3c],eax
1003d8a3:	test   BYTE PTR [ebx+0xc],0x4
1003d8a7:	je     0x1003d8cf
1003d8a9:	movzx  eax,WORD PTR [ebx+0x16]
1003d8ad:	mov    ecx,eax
1003d8af:	and    ecx,0xff
1003d8b5:	movzx  edx,BYTE PTR [ecx+ebp*1+0x100]
1003d8bd:	shr    eax,0x8
1003d8c0:	and    eax,0x1
1003d8c3:	mov    DWORD PTR [esp+0x44],ecx
1003d8c7:	mov    DWORD PTR [esp+0x54],eax
1003d8cb:	mov    DWORD PTR [esp+0x50],edx
1003d8cf:	mov    ebp,DWORD PTR [esp+0x58]
1003d8d3:	mov    edi,DWORD PTR [esp+0x94]
1003d8da:	test   edi,edi
1003d8dc:	mov    ebx,DWORD PTR [esp+0x30]
1003d8e0:	mov    DWORD PTR [esp+0x14],ebx
1003d8e4:	je     0x1003d901
1003d8e6:	mov    eax,DWORD PTR [esp+0x18]
1003d8ea:	lea    ecx,[edi+eax*4]
1003d8ed:	cmp    edi,ecx
1003d8ef:	jae    0x1003d901
1003d8f1:	sub    ecx,edi
1003d8f3:	sub    ecx,0x1
1003d8f6:	shr    ecx,0x2
1003d8f9:	add    ecx,0x1
1003d8fc:	or     eax,0xffffffff
1003d8ff:	rep stos DWORD PTR es:[edi],eax
1003d901:	cmp    DWORD PTR [esp+0x38],0x0
1003d906:	mov    eax,DWORD PTR [esp+0xe4]
1003d90d:	je     0x1003d97d
1003d90f:	cmp    ebp,eax
1003d911:	mov    ecx,ebp
1003d913:	jae    0x1003d97b
1003d915:	mov    esi,DWORD PTR [esp+0x24]
1003d919:	cmp    DWORD PTR [esp+0xa0],0x0
1003d921:	je     0x1003d949
1003d923:	mov    edx,DWORD PTR [esp+0xa0]
1003d92a:	push   edx
1003d92b:	mov    edx,esi
1003d92d:	lea    edi,[esp+0xa8]
1003d934:	call   0x10042de0
1003d939:	add    esp,0x4
1003d93c:	test   eax,eax
1003d93e:	jne    0x1003d97b
1003d940:	mov    eax,DWORD PTR [esp+0xe4]
1003d947:	jmp    0x1003d974
1003d949:	mov    edi,DWORD PTR [esp+0xa4]
1003d950:	mov    edx,eax
1003d952:	sub    edx,edi
1003d954:	cmp    ecx,edx
1003d956:	ja     0x1003d974
1003d958:	mov    dl,BYTE PTR [ecx]
1003d95a:	cmp    dl,BYTE PTR [esp+0xa8]
1003d961:	jne    0x1003d974
1003d963:	cmp    edi,0x1
1003d966:	je     0x1003d97b
1003d968:	mov    dl,BYTE PTR [ecx+0x1]
1003d96b:	cmp    dl,BYTE PTR [esp+0xa9]
1003d972:	je     0x1003d97b
1003d974:	add    ecx,0x1
1003d977:	cmp    ecx,eax
1003d979:	jb     0x1003d919
1003d97b:	mov    ebx,ecx
1003d97d:	cmp    DWORD PTR [esp+0x1c],0x0
1003d982:	jl     0x1003d9ea
1003d984:	cmp    DWORD PTR [esp+0x4c],0x0
1003d989:	je     0x1003d9be
1003d98b:	cmp    ebp,ebx
1003d98d:	jae    0x1003dad1
1003d993:	mov    eax,DWORD PTR [esp+0xac]
1003d99a:	lea    ebx,[ebx+0x0]
1003d9a0:	movzx  ecx,BYTE PTR [ebp+0x0]
1003d9a4:	movzx  edx,BYTE PTR [ecx+eax*1]
1003d9a8:	cmp    edx,DWORD PTR [esp+0x1c]
1003d9ac:	je     0x1003dad1
1003d9b2:	add    ebp,0x1
1003d9b5:	cmp    ebp,ebx
1003d9b7:	jb     0x1003d9a0
1003d9b9:	jmp    0x1003dad1
1003d9be:	cmp    ebp,ebx
1003d9c0:	jae    0x1003dad1
1003d9c6:	jmp    0x1003d9d0
1003d9c8:	lea    esp,[esp+0x0]
1003d9cf:	nop
1003d9d0:	movzx  eax,BYTE PTR [ebp+0x0]
1003d9d4:	cmp    eax,DWORD PTR [esp+0x1c]
1003d9d8:	je     0x1003dad1
1003d9de:	add    ebp,0x1
1003d9e1:	cmp    ebp,ebx
1003d9e3:	jb     0x1003d9d0
1003d9e5:	jmp    0x1003dad1
1003d9ea:	cmp    DWORD PTR [esp+0x48],0x0
1003d9ef:	je     0x1003daa3
1003d9f5:	mov    esi,DWORD PTR [esp+0xe0]
1003d9fc:	cmp    ebp,esi
1003d9fe:	jbe    0x1003dad1
1003da04:	cmp    ebp,ebx
1003da06:	jae    0x1003da7d
1003da08:	mov    edi,DWORD PTR [esp+0x24]
1003da0c:	mov    ecx,DWORD PTR [esp+0xa4]
1003da13:	cmp    DWORD PTR [esp+0xa0],0x0
1003da1b:	je     0x1003da4f
1003da1d:	cmp    ebp,esi
1003da1f:	jbe    0x1003da76
1003da21:	mov    ecx,DWORD PTR [esp+0xa0]
1003da28:	push   edi
1003da29:	push   ecx
1003da2a:	lea    edx,[esp+0xac]
1003da31:	mov    ecx,ebp
1003da33:	call   0x10042ea0
1003da38:	add    esp,0x8
1003da3b:	test   eax,eax
1003da3d:	jne    0x1003da7d
1003da3f:	mov    esi,DWORD PTR [esp+0xe0]
1003da46:	mov    ecx,DWORD PTR [esp+0xa4]
1003da4d:	jmp    0x1003da76
1003da4f:	lea    edx,[ecx+esi*1]
1003da52:	cmp    ebp,edx
1003da54:	jb     0x1003da76
1003da56:	mov    dl,BYTE PTR [esp+0xa8]
1003da5d:	mov    eax,ebp
1003da5f:	sub    eax,ecx
1003da61:	cmp    BYTE PTR [eax],dl
1003da63:	jne    0x1003da76
1003da65:	cmp    ecx,0x1
1003da68:	je     0x1003da7d
1003da6a:	mov    dl,BYTE PTR [esp+0xa9]
1003da71:	cmp    BYTE PTR [eax+0x1],dl
1003da74:	je     0x1003da7d
1003da76:	add    ebp,0x1
1003da79:	cmp    ebp,ebx
1003da7b:	jb     0x1003da13
1003da7d:	cmp    BYTE PTR [ebp-0x1],0xd
1003da81:	jne    0x1003dad1
1003da83:	mov    eax,DWORD PTR [esp+0xa0]
1003da8a:	cmp    eax,0x1
1003da8d:	je     0x1003da94
1003da8f:	cmp    eax,0x2
1003da92:	jne    0x1003dad1
1003da94:	cmp    ebp,ebx
1003da96:	jae    0x1003dad1
1003da98:	cmp    BYTE PTR [ebp+0x0],0xa
1003da9c:	jne    0x1003dad1
1003da9e:	add    ebp,0x1
1003daa1:	jmp    0x1003dad1
1003daa3:	mov    esi,DWORD PTR [esp+0x3c]
1003daa7:	test   esi,esi
1003daa9:	je     0x1003dad1
1003daab:	cmp    ebp,ebx
1003daad:	jae    0x1003dad1
1003daaf:	nop
1003dab0:	movzx  eax,BYTE PTR [ebp+0x0]
1003dab4:	mov    ecx,eax
1003dab6:	and    ecx,0x7
1003dab9:	mov    edx,0x1
1003dabe:	shl    edx,cl
1003dac0:	shr    eax,0x3
1003dac3:	mov    al,BYTE PTR [eax+esi*1]
1003dac6:	test   al,dl
1003dac8:	jne    0x1003dad1
1003daca:	add    ebp,0x1
1003dacd:	cmp    ebp,ebx
1003dacf:	jb     0x1003dab0
1003dad1:	mov    edx,DWORD PTR [esp+0x44]
1003dad5:	test   edx,edx
1003dad7:	mov    ebx,DWORD PTR [esp+0x14]
1003dadb:	mov    DWORD PTR [esp+0x30],ebx
1003dadf:	jl     0x1003db7d
1003dae5:	mov    ecx,ebx
1003dae7:	sub    ecx,ebp
1003dae9:	cmp    ecx,0x3e8
1003daef:	jge    0x1003db7d
1003daf5:	cmp    DWORD PTR [esp+0xd0],0x0
1003dafd:	jne    0x1003db7d
1003db03:	xor    eax,eax
1003db05:	cmp    DWORD PTR [esp+0x1c],eax
1003db09:	setge  al
1003db0c:	add    eax,ebp
1003db0e:	cmp    eax,DWORD PTR [esp+0x34]
1003db12:	jbe    0x1003db7d
1003db14:	cmp    DWORD PTR [esp+0x54],0x0
1003db19:	je     0x1003db5e
1003db1b:	cmp    eax,ebx
1003db1d:	jae    0x1003db35
1003db1f:	mov    esi,DWORD PTR [esp+0x50]
1003db23:	movzx  ecx,BYTE PTR [eax]
1003db26:	add    eax,0x1
1003db29:	cmp    ecx,edx
1003db2b:	je     0x1003db72
1003db2d:	cmp    ecx,esi
1003db2f:	je     0x1003db72
1003db31:	cmp    eax,ebx
1003db33:	jb     0x1003db23
1003db35:	xor    esi,esi
1003db37:	cmp    DWORD PTR [esp+0x2c],0x0
1003db3c:	je     0x1003db4f
1003db3e:	mov    eax,DWORD PTR [esp+0x94]
1003db45:	push   eax
1003db46:	call   DWORD PTR ds:0x1007f4fc
1003db4c:	add    esp,0x4
1003db4f:	test   esi,esi
1003db51:	je     0x1003dd57
1003db57:	mov    eax,esi
1003db59:	jmp    0x1003dd7c
1003db5e:	cmp    eax,ebx
1003db60:	jae    0x1003db35
1003db62:	movzx  ecx,BYTE PTR [eax]
1003db65:	add    eax,0x1
1003db68:	cmp    ecx,edx
1003db6a:	je     0x1003db72
1003db6c:	cmp    eax,ebx
1003db6e:	jb     0x1003db62
1003db70:	jmp    0x1003db35
1003db72:	sub    eax,0x1
1003db75:	cmp    eax,ebx
1003db77:	jae    0x1003db35
1003db79:	mov    DWORD PTR [esp+0x34],eax
1003db7d:	mov    edx,DWORD PTR [esp+0x5c]
1003db81:	mov    ecx,DWORD PTR [esp+0xdc]
1003db88:	push   0x0
1003db8a:	push   0x0
1003db8c:	push   0x0
1003db8e:	push   edx
1003db8f:	lea    eax,[esp+0x98]
1003db96:	push   eax
1003db97:	push   0x2
1003db99:	push   ebp
1003db9a:	push   ecx
1003db9b:	push   ebp
1003db9c:	mov    DWORD PTR [esp+0x10c],ebp
1003dba3:	mov    DWORD PTR [esp+0xac],0x0
1003dbae:	call   0x1003a570
1003dbb3:	mov    esi,eax
1003dbb5:	add    esp,0x24
1003dbb8:	test   esi,esi
1003dbba:	jg     0x1003dcce
1003dbc0:	je     0x1003dbe1
1003dbc2:	lea    eax,[esi+0x3e7]
1003dbc8:	cmp    eax,0x3
1003dbcb:	ja     0x1003dcce
1003dbd1:	jmp    DWORD PTR [eax*4+0x1003dd98]
1003dbd8:	mov    ebx,DWORD PTR [esp+0xe8]
1003dbdf:	jmp    0x1003dbe4
1003dbe1:	lea    ebx,[ebp+0x1]
1003dbe4:	xor    esi,esi
1003dbe6:	cmp    DWORD PTR [esp+0x38],esi
1003dbea:	je     0x1003dc65
1003dbec:	cmp    DWORD PTR [esp+0xa0],esi
1003dbf3:	je     0x1003dc2c
1003dbf5:	cmp    ebp,DWORD PTR [esp+0xe4]
1003dbfc:	jae    0x1003dc65
1003dbfe:	mov    edx,DWORD PTR [esp+0xa0]
1003dc05:	mov    eax,DWORD PTR [esp+0xe4]
1003dc0c:	push   edx
1003dc0d:	mov    edx,DWORD PTR [esp+0x28]
1003dc11:	lea    edi,[esp+0xa8]
1003dc18:	mov    ecx,ebp
1003dc1a:	call   0x10042de0
1003dc1f:	add    esp,0x4
1003dc22:	test   eax,eax
1003dc24:	jne    0x1003db37
1003dc2a:	jmp    0x1003dc65
1003dc2c:	mov    ecx,DWORD PTR [esp+0xe4]
1003dc33:	mov    eax,DWORD PTR [esp+0xa4]
1003dc3a:	sub    ecx,eax
1003dc3c:	cmp    ebp,ecx
1003dc3e:	ja     0x1003dc65
1003dc40:	mov    dl,BYTE PTR [esp+0xa8]
1003dc47:	cmp    BYTE PTR [ebp+0x0],dl
1003dc4a:	jne    0x1003dc65
1003dc4c:	cmp    eax,0x1
1003dc4f:	je     0x1003db37
1003dc55:	mov    al,BYTE PTR [esp+0xa9]
1003dc5c:	cmp    BYTE PTR [ebp+0x1],al
1003dc5f:	je     0x1003db37
1003dc65:	cmp    DWORD PTR [esp+0x40],0x0
1003dc6a:	mov    ebp,ebx
1003dc6c:	jne    0x1003db37
1003dc72:	mov    eax,DWORD PTR [esp+0x14]
1003dc76:	cmp    ebx,eax
1003dc78:	ja     0x1003db37
1003dc7e:	cmp    BYTE PTR [ebx-0x1],0xd
1003dc82:	jne    0x1003d8d3
1003dc88:	cmp    ebx,eax
1003dc8a:	jae    0x1003d8d3
1003dc90:	cmp    BYTE PTR [ebx],0xa
1003dc93:	jne    0x1003d8d3
1003dc99:	mov    ecx,DWORD PTR [esp+0x20]
1003dc9d:	test   BYTE PTR [ecx+0xc],0x20
1003dca1:	jne    0x1003d8d3
1003dca7:	mov    eax,DWORD PTR [esp+0xa0]
1003dcae:	cmp    eax,0x1
1003dcb1:	je     0x1003dcc6
1003dcb3:	cmp    eax,0x2
1003dcb6:	je     0x1003dcc6
1003dcb8:	cmp    DWORD PTR [esp+0xa4],0x2
1003dcc0:	jne    0x1003d8d3
1003dcc6:	lea    ebp,[ebx+0x1]
1003dcc9:	jmp    0x1003d8d3
1003dcce:	cmp    esi,0x1
1003dcd1:	jne    0x1003db37
1003dcd7:	cmp    DWORD PTR [esp+0x2c],0x0
1003dcdc:	mov    esi,DWORD PTR [esp+0x28]
1003dce0:	je     0x1003dd1d
1003dce2:	mov    edi,DWORD PTR [esp+0x94]
1003dce9:	push   0xc4
1003dcee:	lea    edx,[edi+0x8]
1003dcf1:	push   edx
1003dcf2:	lea    eax,[esi+0x8]
1003dcf5:	push   eax
1003dcf6:	call   0x10045420
1003dcfb:	add    esp,0xc
1003dcfe:	cmp    DWORD PTR [esp+0xf0],0x33
1003dd06:	jle    0x1003dd13
1003dd08:	mov    DWORD PTR [esp+0xb4],0x1
1003dd13:	push   edi
1003dd14:	call   DWORD PTR ds:0x1007f4fc
1003dd1a:	add    esp,0x4
1003dd1d:	cmp    DWORD PTR [esp+0xb4],0x0
1003dd25:	je     0x1003dd2b
1003dd27:	xor    eax,eax
1003dd29:	jmp    0x1003dd37
1003dd2b:	mov    eax,DWORD PTR [esp+0xf0]
1003dd32:	cdq    
1003dd33:	sub    eax,edx
1003dd35:	sar    eax,1
1003dd37:	mov    ecx,DWORD PTR [esp+0xe0]
1003dd3e:	mov    edx,DWORD PTR [esp+0xe8]
1003dd45:	sub    edx,ecx
1003dd47:	mov    DWORD PTR [esi],edx
1003dd49:	mov    edx,DWORD PTR [esp+0xec]
1003dd50:	sub    edx,ecx
1003dd52:	mov    DWORD PTR [esi+0x4],edx
1003dd55:	jmp    0x1003dd7c
1003dd57:	cmp    DWORD PTR [esp+0xd0],0x0
1003dd5f:	je     0x1003dd72
1003dd61:	cmp    DWORD PTR [esp+0xd4],0x0
1003dd69:	je     0x1003dd72
1003dd6b:	mov    eax,0xfffffff4
1003dd70:	jmp    0x1003dd7c
1003dd72:	or     eax,0xffffffff
1003dd75:	jmp    0x1003dd7c
1003dd77:	mov    eax,0xfffffffe
1003dd7c:	mov    ecx,DWORD PTR [esp+0x13c]
1003dd83:	pop    edi
1003dd84:	pop    esi
1003dd85:	pop    ebp
1003dd86:	pop    ebx
1003dd87:	xor    ecx,esp
1003dd89:	call   0x100430d7
1003dd8e:	add    esp,0x134
1003dd94:	ret    
1003dd95:	lea    ecx,[ecx+0x0]
1003dd98:	xor    eax,0xe11003db
1003dd9d:	fild   DWORD PTR [ebx]
1003dd9f:	adc    al,bl
1003dda1:	fild   DWORD PTR [ebx]
1003dda3:	adc    cl,ah
1003dda5:	fild   DWORD PTR [ebx]
1003dda7:	adc    ah,cl
1003dda9:	int3   
1003ddaa:	int3   
1003ddab:	int3   
1003ddac:	int3   
1003ddad:	int3   
1003ddae:	int3   
1003ddaf:	int3   
1003ddb0:	push   ecx
1003ddb1:	push   ebx
1003ddb2:	mov    ebx,eax
1003ddb4:	mov    eax,DWORD PTR [esp+0xc]
1003ddb8:	mov    ecx,DWORD PTR [eax]
1003ddba:	movzx  eax,BYTE PTR [ecx+0x1]
1003ddbe:	push   ebp
1003ddbf:	add    ecx,0x1
1003ddc2:	mov    ebp,ebx
1003ddc4:	shr    ebp,0xb
1003ddc7:	and    ebp,0x1
1003ddca:	test   eax,eax
1003ddcc:	jne    0x1003dde2
1003ddce:	mov    edx,DWORD PTR [esp+0x14]
1003ddd2:	mov    DWORD PTR [edx],0x1
1003ddd8:	mov    edx,DWORD PTR [esp+0x10]
1003dddc:	pop    ebp
1003dddd:	mov    DWORD PTR [edx],ecx
1003dddf:	pop    ebx
1003dde0:	pop    ecx
1003dde1:	ret    
1003dde2:	lea    edx,[eax-0x30]
1003dde5:	cmp    edx,0x4a
1003dde8:	ja     0x1003e168
1003ddee:	push   edi
1003ddef:	movsx  edi,WORD PTR [edx*2+0x1006e928]
1003ddf7:	test   edi,edi
1003ddf9:	mov    DWORD PTR [esp+0xc],edi
1003ddfd:	je     0x1003de0c
1003ddff:	mov    edx,DWORD PTR [esp+0x14]
1003de03:	mov    eax,edi
1003de05:	pop    edi
1003de06:	pop    ebp
1003de07:	mov    DWORD PTR [edx],ecx
1003de09:	pop    ebx
1003de0a:	pop    ecx
1003de0b:	ret    
1003de0c:	cmp    edx,0x48
1003de0f:	push   esi
1003de10:	ja     0x1003e157
1003de16:	movzx  esi,BYTE PTR [edx+0x1003e190]
1003de1d:	jmp    DWORD PTR [esi*4+0x1003e174]
1003de24:	mov    edx,DWORD PTR [esp+0x1c]
1003de28:	pop    esi
1003de29:	pop    edi
1003de2a:	mov    DWORD PTR [edx],0x25
1003de30:	mov    edx,DWORD PTR [esp+0x10]
1003de34:	pop    ebp
1003de35:	mov    DWORD PTR [edx],ecx
1003de37:	pop    ebx
1003de38:	pop    ecx
1003de39:	ret    
1003de3a:	mov    al,BYTE PTR [ecx+0x1]
1003de3d:	cmp    al,0x3c
1003de3f:	je     0x1003df5f
1003de45:	cmp    al,0x27
1003de47:	je     0x1003df5f
1003de4d:	cmp    al,0x7b
1003de4f:	mov    bl,0x4
1003de51:	jne    0x1003dea2
1003de53:	mov    al,BYTE PTR [ecx+0x2]
1003de56:	test   al,al
1003de58:	lea    edx,[ecx+0x2]
1003de5b:	je     0x1003de7d
1003de5d:	lea    ecx,[ecx+0x0]
1003de60:	cmp    al,0x7d
1003de62:	je     0x1003de86
1003de64:	cmp    al,0x2d
1003de66:	je     0x1003de73
1003de68:	movzx  eax,al
1003de6b:	test   BYTE PTR [eax+0x1006f468],bl
1003de71:	je     0x1003de86
1003de73:	mov    al,BYTE PTR [edx+0x1]
1003de76:	add    edx,0x1
1003de79:	test   al,al
1003de7b:	jne    0x1003de60
1003de7d:	mov    esi,0x1
1003de82:	add    ecx,esi
1003de84:	jmp    0x1003dea4
1003de86:	mov    dl,BYTE PTR [edx]
1003de88:	test   dl,dl
1003de8a:	je     0x1003de7d
1003de8c:	cmp    dl,0x7d
1003de8f:	je     0x1003de7d
1003de91:	mov    edx,DWORD PTR [esp+0x18]
1003de95:	pop    esi
1003de96:	pop    edi
1003de97:	pop    ebp
1003de98:	mov    eax,0xffffffe4
1003de9d:	mov    DWORD PTR [edx],ecx
1003de9f:	pop    ebx
1003dea0:	pop    ecx
1003dea1:	ret    
1003dea2:	xor    esi,esi
1003dea4:	cmp    BYTE PTR [ecx+0x1],0x2d
1003dea8:	jne    0x1003deb3
1003deaa:	mov    edx,0x1
1003deaf:	add    ecx,edx
1003deb1:	jmp    0x1003deb5
1003deb3:	xor    edx,edx
1003deb5:	movzx  edi,BYTE PTR [ecx+0x1]
1003deb9:	xor    eax,eax
1003debb:	test   BYTE PTR [edi+0x1006f468],bl
1003dec1:	je     0x1003dee5
1003dec3:	movzx  edi,BYTE PTR [ecx+0x1]
1003dec7:	add    ecx,0x1
1003deca:	lea    eax,[eax+eax*4]
1003decd:	lea    eax,[edi+eax*2-0x30]
1003ded1:	movzx  edi,BYTE PTR [ecx+0x1]
1003ded5:	test   BYTE PTR [edi+0x1006f468],bl
1003dedb:	jne    0x1003dec3
1003dedd:	test   eax,eax
1003dedf:	jl     0x1003dfae
1003dee5:	test   esi,esi
1003dee7:	je     0x1003df07
1003dee9:	add    ecx,0x1
1003deec:	cmp    BYTE PTR [ecx],0x7d
1003deef:	je     0x1003df07
1003def1:	mov    edx,DWORD PTR [esp+0x1c]
1003def5:	pop    esi
1003def6:	pop    edi
1003def7:	mov    DWORD PTR [edx],0x39
1003defd:	mov    edx,DWORD PTR [esp+0x10]
1003df01:	pop    ebp
1003df02:	mov    DWORD PTR [edx],ecx
1003df04:	pop    ebx
1003df05:	pop    ecx
1003df06:	ret    
1003df07:	test   eax,eax
1003df09:	jne    0x1003df21
1003df0b:	mov    edx,DWORD PTR [esp+0x1c]
1003df0f:	pop    esi
1003df10:	pop    edi
1003df11:	mov    DWORD PTR [edx],0x3a
1003df17:	mov    edx,DWORD PTR [esp+0x10]
1003df1b:	pop    ebp
1003df1c:	mov    DWORD PTR [edx],ecx
1003df1e:	pop    ebx
1003df1f:	pop    ecx
1003df20:	ret    
1003df21:	test   edx,edx
1003df23:	je     0x1003df4a
1003df25:	mov    edx,DWORD PTR [esp+0x20]
1003df29:	cmp    eax,edx
1003df2b:	jle    0x1003df43
1003df2d:	mov    edx,DWORD PTR [esp+0x1c]
1003df31:	pop    esi
1003df32:	pop    edi
1003df33:	mov    DWORD PTR [edx],0xf
1003df39:	mov    edx,DWORD PTR [esp+0x10]
1003df3d:	pop    ebp
1003df3e:	mov    DWORD PTR [edx],ecx
1003df40:	pop    ebx
1003df41:	pop    ecx
1003df42:	ret    
1003df43:	sub    edx,eax
1003df45:	add    edx,0x1
1003df48:	mov    eax,edx
1003df4a:	pop    esi
1003df4b:	mov    edx,0xffffffe3
1003df50:	sub    edx,eax
1003df52:	pop    edi
1003df53:	mov    eax,edx
1003df55:	mov    edx,DWORD PTR [esp+0x10]
1003df59:	pop    ebp
1003df5a:	mov    DWORD PTR [edx],ecx
1003df5c:	pop    ebx
1003df5d:	pop    ecx
1003df5e:	ret    
1003df5f:	mov    edx,DWORD PTR [esp+0x18]
1003df63:	pop    esi
1003df64:	pop    edi
1003df65:	pop    ebp
1003df66:	mov    eax,0xffffffe5
1003df6b:	mov    DWORD PTR [edx],ecx
1003df6d:	pop    ebx
1003df6e:	pop    ecx
1003df6f:	ret    
1003df70:	cmp    DWORD PTR [esp+0x24],0x0
1003df75:	jne    0x1003dfd5
1003df77:	mov    eax,edx
1003df79:	movzx  edx,BYTE PTR [ecx+0x1]
1003df7d:	mov    bl,0x4
1003df7f:	test   BYTE PTR [edx+0x1006f468],bl
1003df85:	mov    esi,ecx
1003df87:	je     0x1003dfaa
1003df89:	lea    esp,[esp+0x0]
1003df90:	movzx  edx,BYTE PTR [ecx+0x1]
1003df94:	add    ecx,0x1
1003df97:	lea    eax,[eax+eax*4]
1003df9a:	lea    eax,[edx+eax*2-0x30]
1003df9e:	movzx  edx,BYTE PTR [ecx+0x1]
1003dfa2:	test   BYTE PTR [edx+0x1006f468],bl
1003dfa8:	jne    0x1003df90
1003dfaa:	test   eax,eax
1003dfac:	jge    0x1003dfc4
1003dfae:	mov    edx,DWORD PTR [esp+0x1c]
1003dfb2:	pop    esi
1003dfb3:	pop    edi
1003dfb4:	mov    DWORD PTR [edx],0x3d
1003dfba:	mov    edx,DWORD PTR [esp+0x10]
1003dfbe:	pop    ebp
1003dfbf:	mov    DWORD PTR [edx],ecx
1003dfc1:	pop    ebx
1003dfc2:	pop    ecx
1003dfc3:	ret    
1003dfc4:	cmp    eax,0xa
1003dfc7:	jl     0x1003df4a
1003dfc9:	cmp    eax,DWORD PTR [esp+0x20]
1003dfcd:	jle    0x1003df4a
1003dfd3:	mov    ecx,esi
1003dfd5:	movzx  eax,BYTE PTR [ecx]
1003dfd8:	cmp    eax,0x38
1003dfdb:	jl     0x1003dfee
1003dfdd:	mov    edx,DWORD PTR [esp+0x18]
1003dfe1:	pop    esi
1003dfe2:	pop    edi
1003dfe3:	sub    ecx,0x1
1003dfe6:	pop    ebp
1003dfe7:	xor    eax,eax
1003dfe9:	mov    DWORD PTR [edx],ecx
1003dfeb:	pop    ebx
1003dfec:	pop    ecx
1003dfed:	ret    
1003dfee:	sub    eax,0x30
1003dff1:	mov    dl,BYTE PTR [ecx+0x1]
1003dff4:	add    edi,0x1
1003dff7:	cmp    dl,0x30
1003dffa:	jb     0x1003e011
1003dffc:	cmp    dl,0x37
1003dfff:	ja     0x1003e011
1003e001:	movzx  edx,BYTE PTR [ecx+0x1]
1003e005:	add    ecx,0x1
1003e008:	cmp    edi,0x2
1003e00b:	lea    eax,[edx+eax*8-0x30]
1003e00f:	jl     0x1003dff1
1003e011:	test   ebp,ebp
1003e013:	jne    0x1003e166
1003e019:	cmp    eax,0xff
1003e01e:	jle    0x1003e166
1003e024:	mov    edx,DWORD PTR [esp+0x1c]
1003e028:	pop    esi
1003e029:	pop    edi
1003e02a:	mov    DWORD PTR [edx],0x33
1003e030:	mov    edx,DWORD PTR [esp+0x10]
1003e034:	pop    ebp
1003e035:	mov    DWORD PTR [edx],ecx
1003e037:	pop    ebx
1003e038:	pop    ecx
1003e039:	ret    
1003e03a:	cmp    BYTE PTR [ecx+0x1],0x7b
1003e03e:	mov    bl,0x8
1003e040:	jne    0x1003e0cf
1003e046:	movzx  esi,BYTE PTR [ecx+0x2]
1003e04a:	lea    edi,[ecx+0x2]
1003e04d:	xor    edx,edx
1003e04f:	xor    eax,eax
1003e051:	test   BYTE PTR [esi+0x1006f468],bl
1003e057:	je     0x1003e09c
1003e059:	lea    esp,[esp+0x0]
1003e060:	add    edi,0x1
1003e063:	test   eax,eax
1003e065:	jne    0x1003e06c
1003e067:	cmp    esi,0x30
1003e06a:	je     0x1003e091
1003e06c:	add    edx,0x1
1003e06f:	cmp    esi,0x61
1003e072:	jl     0x1003e077
1003e074:	sub    esi,0x20
1003e077:	xor    ebx,ebx
1003e079:	cmp    esi,0x41
1003e07c:	setge  bl
1003e07f:	shl    eax,0x4
1003e082:	sub    ebx,0x1
1003e085:	and    ebx,0xfffffff9
1003e088:	add    ebx,0x37
1003e08b:	sub    eax,ebx
1003e08d:	add    eax,esi
1003e08f:	mov    bl,0x8
1003e091:	movzx  esi,BYTE PTR [edi]
1003e094:	test   BYTE PTR [esi+0x1006f468],bl
1003e09a:	jne    0x1003e060
1003e09c:	cmp    BYTE PTR [edi],0x7d
1003e09f:	jne    0x1003e0cb
1003e0a1:	test   eax,eax
1003e0a3:	jl     0x1003e0b3
1003e0a5:	neg    ebp
1003e0a7:	sbb    ebp,ebp
1003e0a9:	and    ebp,0x6
1003e0ac:	add    ebp,0x2
1003e0af:	cmp    edx,ebp
1003e0b1:	jle    0x1003e0bd
1003e0b3:	mov    ecx,DWORD PTR [esp+0x1c]
1003e0b7:	mov    DWORD PTR [ecx],0x22
1003e0bd:	mov    edx,DWORD PTR [esp+0x18]
1003e0c1:	pop    esi
1003e0c2:	mov    ecx,edi
1003e0c4:	pop    edi
1003e0c5:	pop    ebp
1003e0c6:	mov    DWORD PTR [edx],ecx
1003e0c8:	pop    ebx
1003e0c9:	pop    ecx
1003e0ca:	ret    
1003e0cb:	mov    edi,DWORD PTR [esp+0x10]
1003e0cf:	xor    eax,eax
1003e0d1:	movzx  edx,BYTE PTR [ecx+0x1]
1003e0d5:	add    edi,0x1
1003e0d8:	test   BYTE PTR [edx+0x1006f468],bl
1003e0de:	je     0x1003e166
1003e0e4:	movzx  esi,BYTE PTR [ecx+0x1]
1003e0e8:	add    ecx,0x1
1003e0eb:	cmp    esi,0x61
1003e0ee:	jl     0x1003e0f3
1003e0f0:	sub    esi,0x20
1003e0f3:	xor    edx,edx
1003e0f5:	cmp    esi,0x41
1003e0f8:	setge  dl
1003e0fb:	shl    eax,0x4
1003e0fe:	sub    edx,0x1
1003e101:	and    edx,0xfffffff9
1003e104:	add    edx,0x37
1003e107:	sub    eax,edx
1003e109:	add    eax,esi
1003e10b:	cmp    edi,0x2
1003e10e:	jl     0x1003e0d1
1003e110:	mov    edx,DWORD PTR [esp+0x18]
1003e114:	pop    esi
1003e115:	pop    edi
1003e116:	pop    ebp
1003e117:	mov    DWORD PTR [edx],ecx
1003e119:	pop    ebx
1003e11a:	pop    ecx
1003e11b:	ret    
1003e11c:	movzx  eax,BYTE PTR [ecx+0x1]
1003e120:	add    ecx,0x1
1003e123:	test   eax,eax
1003e125:	jne    0x1003e13d
1003e127:	mov    edx,DWORD PTR [esp+0x1c]
1003e12b:	pop    esi
1003e12c:	pop    edi
1003e12d:	mov    DWORD PTR [edx],0x2
1003e133:	mov    edx,DWORD PTR [esp+0x10]
1003e137:	pop    ebp
1003e138:	mov    DWORD PTR [edx],ecx
1003e13a:	pop    ebx
1003e13b:	pop    ecx
1003e13c:	ret    
1003e13d:	lea    edx,[eax-0x61]
1003e140:	cmp    edx,0x19
1003e143:	ja     0x1003e148
1003e145:	sub    eax,0x20
1003e148:	mov    edx,DWORD PTR [esp+0x18]
1003e14c:	pop    esi
1003e14d:	pop    edi
1003e14e:	pop    ebp
1003e14f:	xor    eax,0x40
1003e152:	mov    DWORD PTR [edx],ecx
1003e154:	pop    ebx
1003e155:	pop    ecx
1003e156:	ret    
1003e157:	test   bl,0x40
1003e15a:	je     0x1003e166
1003e15c:	mov    edx,DWORD PTR [esp+0x1c]
1003e160:	mov    DWORD PTR [edx],0x3
1003e166:	pop    esi
1003e167:	pop    edi
1003e168:	mov    edx,DWORD PTR [esp+0x10]
1003e16c:	pop    ebp
1003e16d:	mov    DWORD PTR [edx],ecx
1003e16f:	pop    ebx
1003e170:	pop    ecx
1003e171:	ret    
1003e172:	mov    edi,edi
1003e174:	out    dx,al
1003e175:	fild   WORD PTR [ebx]
1003e177:	adc    BYTE PTR [eax-0x21],dh
1003e17a:	add    edx,DWORD PTR [eax]
1003e17c:	and    al,0xde
1003e17e:	add    edx,DWORD PTR [eax]
1003e180:	sbb    al,0xe1
1003e182:	add    edx,DWORD PTR [eax]
1003e184:	cmp    bl,dh
1003e186:	add    edx,DWORD PTR [eax]
1003e188:	cmp    ah,al
1003e18a:	add    edx,DWORD PTR [eax]
1003e18c:	push   edi
1003e18d:	loope  0x1003e192
1003e18f:	adc    BYTE PTR [eax],al
1003e191:	add    DWORD PTR [ecx],eax
1003e193:	add    DWORD PTR [ecx],eax
1003e195:	add    DWORD PTR [ecx],eax
1003e197:	add    DWORD PTR [ecx],eax
1003e199:	add    DWORD PTR [esi],eax
1003e19b:	push   es
1003e19c:	push   es
1003e19d:	push   es
1003e19e:	push   es
1003e19f:	push   es
1003e1a0:	push   es
1003e1a1:	push   es
1003e1a2:	push   es
1003e1a3:	push   es
1003e1a4:	push   es
1003e1a5:	push   es
1003e1a6:	push   es
1003e1a7:	push   es
1003e1a8:	push   es
1003e1a9:	push   es
1003e1aa:	push   es
1003e1ab:	push   es
1003e1ac:	add    al,BYTE PTR [esi]
1003e1ae:	add    al,BYTE PTR [esi]
1003e1b0:	push   es
1003e1b1:	push   es
1003e1b2:	push   es
1003e1b3:	push   es
1003e1b4:	push   es
1003e1b5:	add    al,BYTE PTR [esi]
1003e1b7:	push   es
1003e1b8:	push   es
1003e1b9:	push   es
1003e1ba:	push   es
1003e1bb:	push   es
1003e1bc:	push   es
1003e1bd:	push   es
1003e1be:	push   es
1003e1bf:	push   es
1003e1c0:	push   es
1003e1c1:	push   es
1003e1c2:	push   es
1003e1c3:	add    eax,DWORD PTR [esi]
1003e1c5:	push   es
1003e1c6:	push   es
1003e1c7:	add    al,0x6
1003e1c9:	push   es
1003e1ca:	push   es
1003e1cb:	push   es
1003e1cc:	add    al,BYTE PTR [esi]
1003e1ce:	push   es
1003e1cf:	push   es
1003e1d0:	push   es
1003e1d1:	push   es
1003e1d2:	push   es
1003e1d3:	push   es
1003e1d4:	push   es
1003e1d5:	add    al,BYTE PTR [esi]
1003e1d7:	push   es
1003e1d8:	add    eax,0xcccccccc
1003e1dd:	int3   
1003e1de:	int3   
1003e1df:	int3   
1003e1e0:	movzx  ecx,BYTE PTR [eax]
1003e1e3:	mov    cl,BYTE PTR [ecx+0x1006f468]
1003e1e9:	mov    dl,0x4
1003e1eb:	and    cl,dl
1003e1ed:	add    eax,0x1
1003e1f0:	test   cl,cl
1003e1f2:	jne    0x1003e1f7
1003e1f4:	xor    eax,eax
1003e1f6:	ret    
1003e1f7:	movzx  ecx,BYTE PTR [eax]
1003e1fa:	test   BYTE PTR [ecx+0x1006f468],dl
1003e200:	je     0x1003e211
1003e202:	movzx  ecx,BYTE PTR [eax+0x1]
1003e206:	add    eax,0x1
1003e209:	test   BYTE PTR [ecx+0x1006f468],dl
1003e20f:	jne    0x1003e202
1003e211:	mov    cl,BYTE PTR [eax]
1003e213:	cmp    cl,0x7d
1003e216:	jne    0x1003e21e
1003e218:	mov    eax,0x1
1003e21d:	ret    
1003e21e:	add    eax,0x1
1003e221:	cmp    cl,0x2c
1003e224:	jne    0x1003e1f4
1003e226:	mov    cl,BYTE PTR [eax]
1003e228:	cmp    cl,0x7d
1003e22b:	je     0x1003e218
1003e22d:	movzx  ecx,cl
1003e230:	mov    cl,BYTE PTR [ecx+0x1006f468]
1003e236:	and    cl,dl
1003e238:	add    eax,0x1
1003e23b:	test   cl,cl
1003e23d:	je     0x1003e1f4
1003e23f:	movzx  ecx,BYTE PTR [eax]
1003e242:	test   BYTE PTR [ecx+0x1006f468],dl
1003e248:	je     0x1003e25f
1003e24a:	lea    ebx,[ebx+0x0]
1003e250:	movzx  ecx,BYTE PTR [eax+0x1]
1003e254:	add    eax,0x1
1003e257:	test   BYTE PTR [ecx+0x1006f468],dl
1003e25d:	jne    0x1003e250
1003e25f:	xor    edx,edx
1003e261:	cmp    BYTE PTR [eax],0x7d
1003e264:	sete   dl
1003e267:	mov    eax,edx
1003e269:	ret    
1003e26a:	int3   
1003e26b:	int3   
1003e26c:	int3   
1003e26d:	int3   
1003e26e:	int3   
1003e26f:	int3   
1003e270:	movzx  ecx,BYTE PTR [eax]
1003e273:	push   ebx
1003e274:	push   esi
1003e275:	mov    ebx,0x4
1003e27a:	xor    esi,esi
1003e27c:	or     edx,0xffffffff
1003e27f:	test   BYTE PTR [ecx+0x1006f468],bl
1003e285:	je     0x1003e2b1
1003e287:	jmp    0x1003e290
1003e289:	lea    esp,[esp+0x0]
1003e290:	lea    esi,[esi+esi*4]
1003e293:	add    eax,0x1
1003e296:	lea    esi,[ecx+esi*2-0x30]
1003e29a:	movzx  ecx,BYTE PTR [eax]
1003e29d:	test   BYTE PTR [ecx+0x1006f468],bl
1003e2a3:	jne    0x1003e290
1003e2a5:	test   esi,esi
1003e2a7:	jl     0x1003e30a
1003e2a9:	cmp    esi,0xffff
1003e2af:	jg     0x1003e30a
1003e2b1:	cmp    BYTE PTR [eax],0x7d
1003e2b4:	jne    0x1003e2c7
1003e2b6:	mov    edx,esi
1003e2b8:	mov    ecx,DWORD PTR [esp+0xc]
1003e2bc:	mov    DWORD PTR [ecx],esi
1003e2be:	mov    ecx,DWORD PTR [esp+0x10]
1003e2c2:	pop    esi
1003e2c3:	mov    DWORD PTR [ecx],edx
1003e2c5:	pop    ebx
1003e2c6:	ret    
1003e2c7:	mov    cl,BYTE PTR [eax+0x1]
1003e2ca:	add    eax,0x1
1003e2cd:	cmp    cl,0x7d
1003e2d0:	je     0x1003e2b8
1003e2d2:	movzx  ecx,cl
1003e2d5:	xor    edx,edx
1003e2d7:	test   BYTE PTR [ecx+0x1006f468],bl
1003e2dd:	je     0x1003e301
1003e2df:	nop
1003e2e0:	lea    edx,[edx+edx*4]
1003e2e3:	add    eax,0x1
1003e2e6:	lea    edx,[ecx+edx*2-0x30]
1003e2ea:	movzx  ecx,BYTE PTR [eax]
1003e2ed:	test   BYTE PTR [ecx+0x1006f468],bl
1003e2f3:	jne    0x1003e2e0
1003e2f5:	test   edx,edx
1003e2f7:	jl     0x1003e30a
1003e2f9:	cmp    edx,0xffff
1003e2ff:	jg     0x1003e30a
1003e301:	cmp    edx,esi
1003e303:	jge    0x1003e2b8
1003e305:	pop    esi
1003e306:	mov    DWORD PTR [edi],ebx
1003e308:	pop    ebx
1003e309:	ret    
1003e30a:	pop    esi
1003e30b:	mov    DWORD PTR [edi],0x5
1003e311:	pop    ebx
1003e312:	ret    
1003e313:	int3   
1003e314:	int3   
1003e315:	int3   
1003e316:	int3   
1003e317:	int3   
1003e318:	int3   
1003e319:	int3   
1003e31a:	int3   
1003e31b:	int3   
1003e31c:	int3   
1003e31d:	int3   
1003e31e:	int3   
1003e31f:	int3   
1003e320:	push   ebp
1003e321:	push   esi
1003e322:	mov    esi,eax
1003e324:	mov    eax,DWORD PTR [esp+0xc]
1003e328:	mov    ebp,DWORD PTR [eax+0x30]
1003e32b:	mov    al,BYTE PTR [esi]
1003e32d:	test   al,al
1003e32f:	push   edi
1003e330:	je     0x1003e44a
1003e336:	cmp    al,0x5c
1003e338:	jne    0x1003e377
1003e33a:	mov    al,BYTE PTR [esi+0x1]
1003e33d:	add    esi,0x1
1003e340:	test   al,al
1003e342:	je     0x1003e44a
1003e348:	cmp    al,0x51
1003e34a:	jne    0x1003e4ec
1003e350:	mov    al,BYTE PTR [esi+0x1]
1003e353:	add    esi,0x1
1003e356:	test   al,al
1003e358:	je     0x1003e44a
1003e35e:	cmp    al,0x5c
1003e360:	jne    0x1003e350
1003e362:	test   al,al
1003e364:	je     0x1003e44a
1003e36a:	add    esi,0x1
1003e36d:	cmp    BYTE PTR [esi],0x45
1003e370:	jne    0x1003e350
1003e372:	jmp    0x1003e4ec
1003e377:	cmp    al,0x5b
1003e379:	jne    0x1003e429
1003e37f:	xor    edi,edi
1003e381:	movzx  eax,BYTE PTR [esi+0x1]
1003e385:	add    esi,0x1
1003e388:	cmp    eax,0x5c
1003e38b:	jne    0x1003e3b3
1003e38d:	cmp    BYTE PTR [esi+0x1],0x45
1003e391:	lea    eax,[esi+0x1]
1003e394:	jne    0x1003e39a
1003e396:	mov    esi,eax
1003e398:	jmp    0x1003e381
1003e39a:	push   0x3
1003e39c:	push   0x1007422c
1003e3a1:	push   eax
1003e3a2:	call   0x1004f3a6
1003e3a7:	add    esp,0xc
1003e3aa:	test   eax,eax
1003e3ac:	jne    0x1003e3c3
1003e3ae:	add    esi,0x3
1003e3b1:	jmp    0x1003e381
1003e3b3:	test   edi,edi
1003e3b5:	jne    0x1003e3c3
1003e3b7:	cmp    eax,0x5e
1003e3ba:	jne    0x1003e3c3
1003e3bc:	mov    edi,0x1
1003e3c1:	jmp    0x1003e381
1003e3c3:	cmp    BYTE PTR [esi+0x1],0x5d
1003e3c7:	jne    0x1003e3d9
1003e3c9:	mov    ecx,DWORD PTR [esp+0x10]
1003e3cd:	test   DWORD PTR [ecx+0x40],0x2000000
1003e3d4:	jne    0x1003e3d9
1003e3d6:	add    esi,0x1
1003e3d9:	mov    al,BYTE PTR [esi+0x1]
1003e3dc:	add    esi,0x1
1003e3df:	cmp    al,0x5d
1003e3e1:	je     0x1003e4ec
1003e3e7:	test   al,al
1003e3e9:	je     0x1003e44a
1003e3eb:	cmp    al,0x5c
1003e3ed:	jne    0x1003e41a
1003e3ef:	mov    al,BYTE PTR [esi+0x1]
1003e3f2:	add    esi,0x1
1003e3f5:	test   al,al
1003e3f7:	je     0x1003e44a
1003e3f9:	cmp    al,0x51
1003e3fb:	jne    0x1003e41a
1003e3fd:	lea    ecx,[ecx+0x0]
1003e400:	mov    al,BYTE PTR [esi+0x1]
1003e403:	add    esi,0x1
1003e406:	test   al,al
1003e408:	je     0x1003e44a
1003e40a:	cmp    al,0x5c
1003e40c:	jne    0x1003e400
1003e40e:	test   al,al
1003e410:	je     0x1003e44a
1003e412:	add    esi,0x1
1003e415:	cmp    BYTE PTR [esi],0x45
1003e418:	jne    0x1003e400
1003e41a:	mov    al,BYTE PTR [esi+0x1]
1003e41d:	add    esi,0x1
1003e420:	cmp    al,0x5d
1003e422:	jne    0x1003e3e7
1003e424:	jmp    0x1003e4ec
1003e429:	cmp    DWORD PTR [esp+0x18],0x0
1003e42e:	je     0x1003e451
1003e430:	cmp    al,0x23
1003e432:	jne    0x1003e451
1003e434:	mov    al,BYTE PTR [esi+0x1]
1003e437:	add    esi,0x1
1003e43a:	test   al,al
1003e43c:	je     0x1003e44a
1003e43e:	cmp    al,0xa
1003e440:	jne    0x1003e434
1003e442:	test   al,al
1003e444:	jne    0x1003e4ec
1003e44a:	pop    edi
1003e44b:	pop    esi
1003e44c:	or     eax,0xffffffff
1003e44f:	pop    ebp
1003e450:	ret    
1003e451:	cmp    al,0x28
1003e453:	jne    0x1003e4ec
1003e459:	mov    al,BYTE PTR [esi+0x1]
1003e45c:	cmp    al,0x3f
1003e45e:	je     0x1003e475
1003e460:	cmp    al,0x2a
1003e462:	je     0x1003e475
1003e464:	add    ebp,0x1
1003e467:	test   ebx,ebx
1003e469:	jne    0x1003e4ec
1003e46f:	cmp    ebp,DWORD PTR [esp+0x14]
1003e473:	jmp    0x1003e4ea
1003e475:	add    esi,0x2
1003e478:	cmp    BYTE PTR [esi],0x50
1003e47b:	jne    0x1003e480
1003e47d:	add    esi,0x1
1003e480:	mov    cl,BYTE PTR [esi]
1003e482:	cmp    cl,0x3c
1003e485:	jne    0x1003e492
1003e487:	mov    al,BYTE PTR [esi+0x1]
1003e48a:	cmp    al,0x21
1003e48c:	je     0x1003e492
1003e48e:	cmp    al,0x3d
1003e490:	jne    0x1003e497
1003e492:	cmp    cl,0x27
1003e495:	jne    0x1003e4ec
1003e497:	add    ebp,0x1
1003e49a:	test   ebx,ebx
1003e49c:	jne    0x1003e4a4
1003e49e:	cmp    ebp,DWORD PTR [esp+0x14]
1003e4a2:	je     0x1003e501
1003e4a4:	movzx  eax,cl
1003e4a7:	add    esi,0x1
1003e4aa:	cmp    eax,0x3c
1003e4ad:	jne    0x1003e4b4
1003e4af:	mov    eax,0x3e
1003e4b4:	movzx  edx,BYTE PTR [esi]
1003e4b7:	cmp    edx,eax
1003e4b9:	mov    ecx,esi
1003e4bb:	je     0x1003e4cb
1003e4bd:	lea    ecx,[ecx+0x0]
1003e4c0:	movzx  edx,BYTE PTR [esi+0x1]
1003e4c4:	add    esi,0x1
1003e4c7:	cmp    edx,eax
1003e4c9:	jne    0x1003e4c0
1003e4cb:	test   ebx,ebx
1003e4cd:	je     0x1003e4ec
1003e4cf:	mov    eax,esi
1003e4d1:	sub    eax,ecx
1003e4d3:	cmp    DWORD PTR [esp+0x14],eax
1003e4d7:	jne    0x1003e4ec
1003e4d9:	mov    edx,DWORD PTR [esp+0x14]
1003e4dd:	push   edx
1003e4de:	push   ecx
1003e4df:	push   ebx
1003e4e0:	call   0x1004f3a6
1003e4e5:	add    esp,0xc
1003e4e8:	test   eax,eax
1003e4ea:	je     0x1003e501
1003e4ec:	mov    al,BYTE PTR [esi+0x1]
1003e4ef:	add    esi,0x1
1003e4f2:	test   al,al
1003e4f4:	jne    0x1003e336
1003e4fa:	pop    edi
1003e4fb:	pop    esi
1003e4fc:	or     eax,0xffffffff
1003e4ff:	pop    ebp
1003e500:	ret    
1003e501:	pop    edi
1003e502:	pop    esi
1003e503:	mov    eax,ebp
1003e505:	pop    ebp
1003e506:	ret    
1003e507:	int3   
1003e508:	int3   
1003e509:	int3   
1003e50a:	int3   
1003e50b:	int3   
1003e50c:	int3   
1003e50d:	int3   
1003e50e:	int3   
1003e50f:	int3   
1003e510:	movzx  edx,BYTE PTR [eax]
1003e513:	mov    ecx,edx
1003e515:	sub    ecx,0x4
1003e518:	cmp    ecx,0x62
1003e51b:	push   ebp
1003e51c:	ja     0x1003e587
1003e51e:	mov    edi,edi
1003e520:	movzx  ecx,BYTE PTR [ecx+0x1003e5a0]
1003e527:	jmp    DWORD PTR [ecx*4+0x1003e58c]
1003e52e:	test   esi,esi
1003e530:	jle    0x1003e544
1003e532:	movzx  ecx,BYTE PTR [eax+0x1]
1003e536:	mov    edx,DWORD PTR [edi]
1003e538:	mov    ebp,ecx
1003e53a:	and    edx,esi
1003e53c:	and    ebp,esi
1003e53e:	cmp    ebp,edx
1003e540:	je     0x1003e544
1003e542:	mov    DWORD PTR [edi],ecx
1003e544:	add    eax,0x2
1003e547:	jmp    0x1003e57a
1003e549:	test   ebx,ebx
1003e54b:	je     0x1003e587
1003e54d:	lea    ecx,[ecx+0x0]
1003e550:	xor    ecx,ecx
1003e552:	mov    ch,BYTE PTR [eax+0x1]
1003e555:	mov    cl,BYTE PTR [eax+0x2]
1003e558:	add    eax,ecx
1003e55a:	cmp    BYTE PTR [eax],0x54
1003e55d:	je     0x1003e550
1003e55f:	movzx  edx,BYTE PTR [eax]
1003e562:	movzx  ecx,BYTE PTR [edx+0x1006e478]
1003e569:	add    eax,ecx
1003e56b:	jmp    0x1003e57a
1003e56d:	test   ebx,ebx
1003e56f:	je     0x1003e587
1003e571:	movzx  edx,BYTE PTR [edx+0x1006e478]
1003e578:	add    eax,edx
1003e57a:	movzx  edx,BYTE PTR [eax]
1003e57d:	mov    ecx,edx
1003e57f:	sub    ecx,0x4
1003e582:	cmp    ecx,0x62
1003e585:	jbe    0x1003e520
1003e587:	pop    ebp
1003e588:	ret    
1003e589:	lea    ecx,[ecx+0x0]
1003e58c:	ins    DWORD PTR es:[edi],dx
1003e58d:	in     eax,0x3
1003e58f:	adc    BYTE PTR [esi],ch
1003e591:	in     eax,0x3
1003e593:	adc    BYTE PTR [ecx-0x1b],dh
1003e596:	add    edx,DWORD PTR [eax]
1003e598:	dec    ecx
1003e599:	in     eax,0x3
1003e59b:	adc    BYTE PTR [edi+0x1003e5],al
1003e5a1:	add    BYTE PTR [esp+eax*1],al
1003e5a4:	add    al,0x4
1003e5a6:	add    al,0x4
1003e5a8:	add    al,0x4
1003e5aa:	add    al,0x4
1003e5ac:	add    al,0x4
1003e5ae:	add    al,0x4
1003e5b0:	add    al,0x4
1003e5b2:	add    al,0x4
1003e5b4:	add    al,0x1
1003e5b6:	add    al,0x4
1003e5b8:	add    al,0x4
1003e5ba:	add    al,0x4
1003e5bc:	add    al,0x4
1003e5be:	add    al,0x4
1003e5c0:	add    al,0x4
1003e5c2:	add    al,0x4
1003e5c4:	add    al,0x4
1003e5c6:	add    al,0x4
1003e5c8:	add    al,0x4
1003e5ca:	add    al,0x4
1003e5cc:	add    al,0x4
1003e5ce:	add    al,0x4
1003e5d0:	add    al,0x4
1003e5d2:	add    al,0x4
1003e5d4:	add    al,0x4
1003e5d6:	add    al,0x4
1003e5d8:	add    al,0x4
1003e5da:	add    al,0x4
1003e5dc:	add    al,0x4
1003e5de:	add    al,0x4
1003e5e0:	add    al,0x4
1003e5e2:	add    al,0x4
1003e5e4:	add    al,0x4
1003e5e6:	add    al,0x4
1003e5e8:	add    al,0x4
1003e5ea:	add    al,0x4
1003e5ec:	add    al,0x4
1003e5ee:	add    al,0x2
1003e5f0:	add    al,0x4
1003e5f2:	add    al,0x4
1003e5f4:	add    al,0x3
1003e5f6:	add    eax,DWORD PTR [ebx]
1003e5f8:	add    al,0x4
1003e5fa:	add    al,0x4
1003e5fc:	add    al,0x4
1003e5fe:	add    al,0x4
1003e600:	add    al,BYTE PTR [edx]
1003e602:	add    cl,ah
1003e604:	int3   
1003e605:	int3   
1003e606:	int3   
1003e607:	int3   
1003e608:	int3   
1003e609:	int3   
1003e60a:	int3   
1003e60b:	int3   
1003e60c:	int3   
1003e60d:	int3   
1003e60e:	int3   
1003e60f:	int3   
1003e610:	push   ebx
1003e611:	push   ebp
1003e612:	push   esi
1003e613:	mov    esi,DWORD PTR [esp+0x10]
1003e617:	mov    cl,BYTE PTR [esi+0x3]
1003e61a:	add    esi,0x3
1003e61d:	movzx  eax,cl
1003e620:	push   edi
1003e621:	or     ebx,0xffffffff
1003e624:	xor    edi,edi
1003e626:	cmp    eax,0x66
1003e629:	ja     0x1003e758
1003e62f:	mov    ebp,DWORD PTR [esp+0x18]
1003e633:	jmp    0x1003e640
1003e635:	lea    esp,[esp+0x0]
1003e63c:	lea    esp,[esp+0x0]
1003e640:	movzx  edx,BYTE PTR [eax+0x1003e7a4]
1003e647:	jmp    DWORD PTR [edx*4+0x1003e774]
1003e64e:	xor    ecx,ecx
1003e650:	cmp    eax,0x5f
1003e653:	setne  cl
1003e656:	push   ebp
1003e657:	sub    ecx,0x1
1003e65a:	and    ecx,0x2
1003e65d:	add    ecx,esi
1003e65f:	push   ecx
1003e660:	call   0x1003e610
1003e665:	add    esp,0x8
1003e668:	test   eax,eax
1003e66a:	jl     0x1003e75b
1003e670:	add    edi,eax
1003e672:	xor    edx,edx
1003e674:	mov    dh,BYTE PTR [esi+0x1]
1003e677:	mov    dl,BYTE PTR [esi+0x2]
1003e67a:	add    esi,edx
1003e67c:	cmp    BYTE PTR [esi],0x54
1003e67f:	je     0x1003e672
1003e681:	add    esi,0x3
1003e684:	jmp    0x1003e74a
1003e689:	test   ebx,ebx
1003e68b:	jge    0x1003e691
1003e68d:	mov    ebx,edi
1003e68f:	jmp    0x1003e699
1003e691:	cmp    ebx,edi
1003e693:	jne    0x1003e758
1003e699:	cmp    cl,0x54
1003e69c:	jne    0x1003e760
1003e6a2:	add    esi,0x3
1003e6a5:	xor    edi,edi
1003e6a7:	jmp    0x1003e74a
1003e6ac:	lea    esp,[esp+0x0]
1003e6b0:	xor    eax,eax
1003e6b2:	mov    ah,BYTE PTR [esi+0x1]
1003e6b5:	mov    al,BYTE PTR [esi+0x2]
1003e6b8:	add    esi,eax
1003e6ba:	cmp    BYTE PTR [esi],0x54
1003e6bd:	je     0x1003e6b0
1003e6bf:	movzx  ecx,BYTE PTR [esi]
1003e6c2:	movzx  edx,BYTE PTR [ecx+0x1006e478]
1003e6c9:	add    esi,edx
1003e6cb:	jmp    0x1003e74a
1003e6cd:	add    edi,0x1
1003e6d0:	add    esi,0x2
1003e6d3:	jmp    0x1003e74a
1003e6d5:	xor    eax,eax
1003e6d7:	mov    ah,BYTE PTR [esi+0x1]
1003e6da:	mov    al,BYTE PTR [esi+0x2]
1003e6dd:	add    edi,eax
1003e6df:	add    esi,0x4
1003e6e2:	jmp    0x1003e74a
1003e6e4:	mov    al,BYTE PTR [esi+0x3]
1003e6e7:	xor    ecx,ecx
1003e6e9:	mov    ch,BYTE PTR [esi+0x1]
1003e6ec:	mov    cl,BYTE PTR [esi+0x2]
1003e6ef:	add    edi,ecx
1003e6f1:	cmp    al,0x10
1003e6f3:	je     0x1003e6f9
1003e6f5:	cmp    al,0xf
1003e6f7:	jne    0x1003e6fc
1003e6f9:	add    esi,0x2
1003e6fc:	add    esi,0x4
1003e6ff:	jmp    0x1003e74a
1003e701:	add    esi,0x2
1003e704:	add    edi,0x1
1003e707:	add    esi,0x1
1003e70a:	jmp    0x1003e74a
1003e70c:	movzx  eax,BYTE PTR [esi+0x21]
1003e710:	add    esi,0x21
1003e713:	add    eax,0xffffffba
1003e716:	cmp    eax,0x7
1003e719:	ja     0x1003e747
1003e71b:	movzx  edx,BYTE PTR [eax+0x1003e818]
1003e722:	jmp    DWORD PTR [edx*4+0x1003e80c]
1003e729:	movzx  ecx,BYTE PTR [esi+0x2]
1003e72d:	xor    edx,edx
1003e72f:	mov    dh,BYTE PTR [esi+0x3]
1003e732:	xor    eax,eax
1003e734:	mov    ah,BYTE PTR [esi+0x1]
1003e737:	mov    dl,BYTE PTR [esi+0x4]
1003e73a:	or     eax,ecx
1003e73c:	cmp    eax,edx
1003e73e:	jne    0x1003e758
1003e740:	add    edi,eax
1003e742:	add    esi,0x5
1003e745:	jmp    0x1003e74a
1003e747:	add    edi,0x1
1003e74a:	mov    cl,BYTE PTR [esi]
1003e74c:	movzx  eax,cl
1003e74f:	cmp    eax,0x66
1003e752:	jbe    0x1003e640
1003e758:	or     eax,0xffffffff
1003e75b:	pop    edi
1003e75c:	pop    esi
1003e75d:	pop    ebp
1003e75e:	pop    ebx
1003e75f:	ret    
1003e760:	pop    edi
1003e761:	pop    esi
1003e762:	pop    ebp
1003e763:	mov    eax,ebx
1003e765:	pop    ebx
1003e766:	ret    
1003e767:	pop    edi
1003e768:	pop    esi
1003e769:	pop    ebp
1003e76a:	mov    eax,0xfffffffe
1003e76f:	pop    ebx
1003e770:	ret    
1003e771:	lea    ecx,[ecx+0x0]
1003e774:	mov    esi,esp
1003e776:	add    edx,DWORD PTR [eax]
1003e778:	mov    edi,0x41003e6
1003e77d:	out    0x3,eax
1003e77f:	adc    BYTE PTR [edi-0x19],ah
1003e782:	add    edx,DWORD PTR [eax]
1003e784:	add    edi,esp
1003e786:	add    edx,DWORD PTR [eax]
1003e788:	int    0xe6
1003e78a:	add    edx,DWORD PTR [eax]
1003e78c:	aad    0xe6
1003e78e:	add    edx,DWORD PTR [eax]
1003e790:	in     al,0xe6
1003e792:	add    edx,DWORD PTR [eax]
1003e794:	or     al,0xe7
1003e796:	add    edx,DWORD PTR [eax]
1003e798:	mov    al,0xe6
1003e79a:	add    edx,DWORD PTR [eax]
1003e79c:	dec    esi
1003e79d:	out    0x3,al
1003e79f:	adc    BYTE PTR [eax-0x19],bl
1003e7a2:	add    edx,DWORD PTR [eax]
1003e7a4:	add    BYTE PTR [ecx],al
1003e7a6:	add    DWORD PTR [ebx],ecx
1003e7a8:	add    DWORD PTR [ecx],eax
1003e7aa:	add    al,BYTE PTR [edx]
1003e7ac:	add    al,BYTE PTR [edx]
1003e7ae:	add    al,BYTE PTR [edx]
1003e7b0:	add    al,BYTE PTR [edx]
1003e7b2:	add    eax,DWORD PTR [esp+eax*1]
1003e7b5:	or     ecx,DWORD PTR [ebx]
1003e7b7:	or     ecx,DWORD PTR [ebx]
1003e7b9:	or     ecx,DWORD PTR [ebx]
1003e7bb:	add    DWORD PTR [ecx],eax
1003e7bd:	add    DWORD PTR [ecx],eax
1003e7bf:	add    DWORD PTR ds:0xb0b0505,eax
1003e7c5:	or     ecx,DWORD PTR [ebx]
1003e7c7:	or     ecx,DWORD PTR [ebx]
1003e7c9:	or     ecx,DWORD PTR [ebx]
1003e7cb:	push   es
1003e7cc:	or     ecx,DWORD PTR [ebx]
1003e7ce:	or     ecx,DWORD PTR [ebx]
1003e7d0:	or     ecx,DWORD PTR [ebx]
1003e7d2:	or     ecx,DWORD PTR [ebx]
1003e7d4:	or     ecx,DWORD PTR [ebx]
1003e7d6:	or     ecx,DWORD PTR [ebx]
1003e7d8:	or     ecx,DWORD PTR [ebx]
1003e7da:	or     ecx,DWORD PTR [ebx]
1003e7dc:	or     ecx,DWORD PTR [ebx]
1003e7de:	or     ecx,DWORD PTR [ebx]
1003e7e0:	or     ecx,DWORD PTR [ebx]
1003e7e2:	or     ecx,DWORD PTR [ebx]
1003e7e4:	or     eax,DWORD PTR [edi]
1003e7e6:	or     ecx,DWORD PTR [ebx]
1003e7e8:	or     ecx,DWORD PTR [ebx]
1003e7ea:	or     ecx,DWORD PTR [ebx]
1003e7ec:	or     ecx,DWORD PTR [ebx]
1003e7ee:	or     ecx,DWORD PTR [ebx]
1003e7f0:	or     ecx,DWORD PTR [ebx]
1003e7f2:	or     BYTE PTR [eax],cl
1003e7f4:	or     ecx,DWORD PTR [ebx]
1003e7f6:	or     eax,DWORD PTR [ecx]
1003e7f8:	add    BYTE PTR [eax],al
1003e7fa:	add    BYTE PTR [eax],al
1003e7fc:	or     DWORD PTR [ecx],ecx
1003e7fe:	or     DWORD PTR [ecx],ecx
1003e800:	add    DWORD PTR [edx],ecx
1003e802:	or     cl,BYTE PTR [edx]
1003e804:	or     cl,BYTE PTR [ebx]
1003e806:	or     ecx,DWORD PTR [ebx]
1003e808:	add    DWORD PTR [ecx],eax
1003e80a:	add    DWORD PTR [eax+0x1003e758],edx
1003e810:	sub    edi,esp
1003e812:	add    edx,DWORD PTR [eax]
1003e814:	inc    edi
1003e815:	out    0x3,eax
1003e817:	adc    BYTE PTR [eax],al
1003e819:	add    BYTE PTR [edx],al
1003e81b:	add    al,BYTE PTR [eax]
1003e81d:	add    BYTE PTR [ecx],al
1003e81f:	add    DWORD PTR [edi],ecx
1003e821:	mov    dh,0x8
1003e823:	test   ecx,ecx
1003e825:	je     0x1003e887
1003e827:	cmp    ecx,0x50
1003e82a:	jne    0x1003e836
1003e82c:	xor    ecx,ecx
1003e82e:	mov    ch,BYTE PTR [eax+0x1]
1003e831:	mov    cl,BYTE PTR [eax+0x2]
1003e834:	jmp    0x1003e87e
1003e836:	cmp    ecx,0x5f
1003e839:	jne    0x1003e84c
1003e83b:	xor    edx,edx
1003e83d:	mov    dh,BYTE PTR [eax+0x3]
1003e840:	mov    dl,BYTE PTR [eax+0x4]
1003e843:	cmp    edx,esi
1003e845:	je     0x1003e889
1003e847:	add    eax,0x5
1003e84a:	jmp    0x1003e880
1003e84c:	lea    edx,[ecx-0x39]
1003e84f:	cmp    edx,0xc
1003e852:	ja     0x1003e877
1003e854:	movzx  edx,BYTE PTR [edx+0x1003e894]
1003e85b:	jmp    DWORD PTR [edx*4+0x1003e88c]
1003e862:	mov    dl,BYTE PTR [eax+0x1]
1003e865:	jmp    0x1003e86a
1003e867:	mov    dl,BYTE PTR [eax+0x3]
1003e86a:	cmp    dl,0x10
1003e86d:	je     0x1003e874
1003e86f:	cmp    dl,0xf
1003e872:	jne    0x1003e877
1003e874:	add    eax,0x2
1003e877:	movzx  ecx,BYTE PTR [ecx+0x1006e478]
1003e87e:	add    eax,ecx
1003e880:	movzx  ecx,BYTE PTR [eax]
1003e883:	test   ecx,ecx
1003e885:	jne    0x1003e827
1003e887:	xor    eax,eax
1003e889:	ret    
1003e88a:	mov    edi,edi
1003e88c:	(bad)  
1003e88d:	call   0xf86af895
1003e892:	add    edx,DWORD PTR [eax]
1003e894:	add    BYTE PTR [eax],al
1003e896:	add    BYTE PTR [eax],al
1003e898:	add    BYTE PTR [eax],al
1003e89a:	add    DWORD PTR [ecx],eax
1003e89c:	add    DWORD PTR [eax],eax
1003e89e:	add    BYTE PTR [eax],al
1003e8a0:	add    esp,ecx
1003e8a2:	int3   
1003e8a3:	int3   
1003e8a4:	int3   
1003e8a5:	int3   
1003e8a6:	int3   
1003e8a7:	int3   
1003e8a8:	int3   
1003e8a9:	int3   
1003e8aa:	int3   
1003e8ab:	int3   
1003e8ac:	int3   
1003e8ad:	int3   
1003e8ae:	int3   
1003e8af:	int3   
1003e8b0:	movzx  ecx,BYTE PTR [eax]
1003e8b3:	test   ecx,ecx
1003e8b5:	je     0x1003e906
1003e8b7:	cmp    ecx,0x52
1003e8ba:	je     0x1003e908
1003e8bc:	cmp    ecx,0x50
1003e8bf:	jne    0x1003e8cb
1003e8c1:	xor    ecx,ecx
1003e8c3:	mov    ch,BYTE PTR [eax+0x1]
1003e8c6:	mov    cl,BYTE PTR [eax+0x2]
1003e8c9:	jmp    0x1003e8fd
1003e8cb:	lea    edx,[ecx-0x39]
1003e8ce:	cmp    edx,0xc
1003e8d1:	ja     0x1003e8f6
1003e8d3:	movzx  edx,BYTE PTR [edx+0x1003e914]
1003e8da:	jmp    DWORD PTR [edx*4+0x1003e90c]
1003e8e1:	mov    dl,BYTE PTR [eax+0x1]
1003e8e4:	jmp    0x1003e8e9
1003e8e6:	mov    dl,BYTE PTR [eax+0x3]
1003e8e9:	cmp    dl,0x10
1003e8ec:	je     0x1003e8f3
1003e8ee:	cmp    dl,0xf
1003e8f1:	jne    0x1003e8f6
1003e8f3:	add    eax,0x2
1003e8f6:	movzx  ecx,BYTE PTR [ecx+0x1006e478]
1003e8fd:	add    eax,ecx
1003e8ff:	movzx  ecx,BYTE PTR [eax]
1003e902:	test   ecx,ecx
1003e904:	jne    0x1003e8b7
1003e906:	xor    eax,eax
1003e908:	ret    
1003e909:	lea    ecx,[ecx+0x0]
1003e90c:	loope  0x1003e8f6
1003e90e:	add    edx,DWORD PTR [eax]
1003e910:	out    0xe8,al
1003e912:	add    edx,DWORD PTR [eax]
1003e914:	add    BYTE PTR [eax],al
1003e916:	add    BYTE PTR [eax],al
1003e918:	add    BYTE PTR [eax],al
1003e91a:	add    DWORD PTR [ecx],eax
1003e91c:	add    DWORD PTR [eax],eax
1003e91e:	add    BYTE PTR [eax],al
1003e920:	add    esp,ecx
1003e922:	int3   
1003e923:	int3   
1003e924:	int3   
1003e925:	int3   
1003e926:	int3   
1003e927:	int3   
1003e928:	int3   
1003e929:	int3   
1003e92a:	int3   
1003e92b:	int3   
1003e92c:	int3   
1003e92d:	int3   
1003e92e:	int3   
1003e92f:	int3   
1003e930:	mov    ecx,DWORD PTR [esp+0x4]
1003e934:	movzx  eax,BYTE PTR [ecx]
1003e937:	movzx  eax,BYTE PTR [eax+0x1006e478]
1003e93e:	push   ebx
1003e93f:	push   ebp
1003e940:	push   esi
1003e941:	push   edi
1003e942:	add    eax,ecx
1003e944:	mov    ebx,0x1
1003e949:	xor    esi,esi
1003e94b:	xor    edi,edi
1003e94d:	call   0x1003e510
1003e952:	mov    ebp,DWORD PTR [esp+0x18]
1003e956:	mov    esi,eax
1003e958:	cmp    esi,ebp
1003e95a:	jae    0x1003ea84
1003e960:	movzx  eax,BYTE PTR [esi]
1003e963:	cmp    eax,0x58
1003e966:	jne    0x1003e97c
1003e968:	xor    ecx,ecx
1003e96a:	mov    ch,BYTE PTR [esi+0x1]
1003e96d:	mov    cl,BYTE PTR [esi+0x2]
1003e970:	add    esi,ecx
1003e972:	cmp    BYTE PTR [esi],0x54
1003e975:	je     0x1003e968
1003e977:	jmp    0x1003ea60
1003e97c:	cmp    eax,0x67
1003e97f:	je     0x1003ea48
1003e985:	cmp    eax,0x68
1003e988:	je     0x1003ea48
1003e98e:	cmp    eax,0x6f
1003e991:	je     0x1003ea48
1003e997:	cmp    eax,0x5e
1003e99a:	je     0x1003ea09
1003e99c:	cmp    eax,0x5f
1003e99f:	je     0x1003ea09
1003e9a1:	cmp    eax,0x5d
1003e9a4:	je     0x1003ea09
1003e9a6:	cmp    eax,0x60
1003e9a9:	je     0x1003ea09
1003e9ab:	lea    ecx,[eax-0x6]
1003e9ae:	cmp    ecx,0x51
1003e9b1:	ja     0x1003ea63
1003e9b7:	movzx  edx,BYTE PTR [ecx+0x1003eaa8]
1003e9be:	jmp    DWORD PTR [edx*4+0x1003ea90]
1003e9c5:	movzx  ecx,BYTE PTR [esi+0x21]
1003e9c9:	add    ecx,0xffffffba
1003e9cc:	cmp    ecx,0x7
1003e9cf:	ja     0x1003e9eb
1003e9d1:	movzx  ecx,BYTE PTR [ecx+0x1003eb08]
1003e9d8:	jmp    DWORD PTR [ecx*4+0x1003eafc]
1003e9df:	xor    edx,edx
1003e9e1:	mov    dh,BYTE PTR [esi+0x22]
1003e9e4:	mov    dl,BYTE PTR [esi+0x23]
1003e9e7:	test   edx,edx
1003e9e9:	jle    0x1003ea63
1003e9eb:	pop    edi
1003e9ec:	pop    esi
1003e9ed:	pop    ebp
1003e9ee:	xor    eax,eax
1003e9f0:	pop    ebx
1003e9f1:	ret    
1003e9f2:	mov    cl,BYTE PTR [esi+0x1]
1003e9f5:	jmp    0x1003e9fa
1003e9f7:	mov    cl,BYTE PTR [esi+0x3]
1003e9fa:	cmp    cl,0x10
1003e9fd:	je     0x1003ea04
1003e9ff:	cmp    cl,0xf
1003ea02:	jne    0x1003ea63
1003ea04:	add    esi,0x2
1003ea07:	jmp    0x1003ea63
1003ea09:	xor    eax,eax
1003ea0b:	mov    ah,BYTE PTR [esi+0x1]
1003ea0e:	mov    al,BYTE PTR [esi+0x2]
1003ea11:	test   eax,eax
1003ea13:	je     0x1003ea84
1003ea15:	xor    edi,edi
1003ea17:	test   edi,edi
1003ea19:	jne    0x1003ea33
1003ea1b:	mov    ecx,DWORD PTR [esp+0x1c]
1003ea1f:	push   ecx
1003ea20:	push   ebp
1003ea21:	push   esi
1003ea22:	call   0x1003e930
1003ea27:	add    esp,0xc
1003ea2a:	test   eax,eax
1003ea2c:	je     0x1003ea33
1003ea2e:	mov    edi,0x1
1003ea33:	xor    edx,edx
1003ea35:	mov    dh,BYTE PTR [esi+0x1]
1003ea38:	mov    dl,BYTE PTR [esi+0x2]
1003ea3b:	add    esi,edx
1003ea3d:	cmp    BYTE PTR [esi],0x54
1003ea40:	je     0x1003ea17
1003ea42:	test   edi,edi
1003ea44:	je     0x1003e9eb
1003ea46:	jmp    0x1003ea60
1003ea48:	movzx  eax,BYTE PTR [eax+0x1006e478]
1003ea4f:	add    esi,eax
1003ea51:	xor    ecx,ecx
1003ea53:	mov    ch,BYTE PTR [esi+0x1]
1003ea56:	mov    cl,BYTE PTR [esi+0x2]
1003ea59:	add    esi,ecx
1003ea5b:	cmp    BYTE PTR [esi],0x54
1003ea5e:	je     0x1003ea51
1003ea60:	movzx  eax,BYTE PTR [esi]
1003ea63:	movzx  eax,BYTE PTR [eax+0x1006e478]
1003ea6a:	add    eax,esi
1003ea6c:	mov    ebx,0x1
1003ea71:	xor    esi,esi
1003ea73:	xor    edi,edi
1003ea75:	call   0x1003e510
1003ea7a:	mov    esi,eax
1003ea7c:	cmp    esi,ebp
1003ea7e:	jb     0x1003e960
1003ea84:	pop    edi
1003ea85:	pop    esi
1003ea86:	pop    ebp
1003ea87:	mov    eax,0x1
1003ea8c:	pop    ebx
1003ea8d:	ret    
1003ea8e:	mov    edi,edi
1003ea90:	jmp    0x1003ea7b
1003ea92:	add    edx,DWORD PTR [eax]
1003ea94:	bnd jmp 0xf9fafa9d
1003ea9a:	add    edx,DWORD PTR [eax]
1003ea9c:	(bad)
1003ea9f:	adc    BYTE PTR [edx+ebp*8-0x159ceffd],al
1003eaa6:	add    edx,DWORD PTR [eax]
	...
1003eab0:	add    BYTE PTR [eax],al
1003eab2:	add    BYTE PTR ds:0x5050505,al
1003eab8:	add    BYTE PTR ds:0x5050505,al
1003eabe:	add    BYTE PTR [eax],al
1003eac0:	add    BYTE PTR ds:0x5000005,al
1003eac6:	add    eax,0x5000505
1003eacb:	add    BYTE PTR ds:0x50505,al
1003ead1:	add    BYTE PTR ds:0x50505,al
1003ead7:	add    eax,0x1050500
1003eadc:	add    DWORD PTR [eax],eax
1003eade:	add    BYTE PTR [ecx],al
1003eae0:	add    DWORD PTR [edx],eax
1003eae2:	add    al,BYTE PTR [eax]
1003eae4:	add    DWORD PTR [eax],eax
1003eae6:	add    DWORD PTR [edx],eax
1003eae8:	add    eax,0x5050505
1003eaed:	add    eax,0x3030505
1003eaf2:	add    eax,0x4050505
1003eaf7:	add    al,0x4
1003eaf9:	add    al,0x8b
1003eafb:	jmp    DWORD PTR [ebx-0x16]
1003eafe:	add    edx,DWORD PTR [eax]
1003eb00:	fucomip st,st(1)
1003eb02:	add    edx,DWORD PTR [eax]
1003eb04:	jmp    0x1003eaef
1003eb06:	add    edx,DWORD PTR [eax]
1003eb08:	add    BYTE PTR [eax],al
1003eb0a:	add    al,BYTE PTR [edx]
1003eb0c:	add    BYTE PTR [eax],al
1003eb0e:	add    DWORD PTR [ecx],eax
1003eb10:	movzx  edx,BYTE PTR [eax+0x1]
1003eb14:	add    eax,0x1
1003eb17:	mov    cl,BYTE PTR [eax+0x1]
1003eb1a:	add    eax,0x1
1003eb1d:	test   cl,cl
1003eb1f:	push   ebx
1003eb20:	je     0x1003eb4d
1003eb22:	mov    bl,0x5d
1003eb24:	cmp    cl,0x5c
1003eb27:	jne    0x1003eb33
1003eb29:	cmp    BYTE PTR [eax+0x1],bl
1003eb2c:	jne    0x1003eb33
1003eb2e:	add    eax,0x1
1003eb31:	jmp    0x1003eb43
1003eb33:	cmp    cl,bl
1003eb35:	je     0x1003eb4d
1003eb37:	movzx  ecx,cl
1003eb3a:	cmp    ecx,edx
1003eb3c:	jne    0x1003eb43
1003eb3e:	cmp    BYTE PTR [eax+0x1],bl
1003eb41:	je     0x1003eb51
1003eb43:	mov    cl,BYTE PTR [eax+0x1]
1003eb46:	add    eax,0x1
1003eb49:	test   cl,cl
1003eb4b:	jne    0x1003eb24
1003eb4d:	xor    eax,eax
1003eb4f:	pop    ebx
1003eb50:	ret    
1003eb51:	mov    edx,DWORD PTR [esp+0x8]
1003eb55:	mov    DWORD PTR [edx],eax
1003eb57:	mov    eax,0x1
1003eb5c:	pop    ebx
1003eb5d:	ret    
1003eb5e:	int3   
1003eb5f:	int3   
1003eb60:	push   ebp
1003eb61:	mov    ebp,DWORD PTR [esp+0x8]
1003eb65:	push   esi
1003eb66:	push   edi
1003eb67:	mov    edi,0x1006ea28
1003eb6c:	xor    esi,esi
1003eb6e:	mov    edi,edi
1003eb70:	movzx  eax,BYTE PTR [esi+0x1006ea7c]
1003eb77:	cmp    ebx,eax
1003eb79:	jne    0x1003eb8a
1003eb7b:	push   ebx
1003eb7c:	push   edi
1003eb7d:	push   ebp
1003eb7e:	call   0x1004f3a6
1003eb83:	add    esp,0xc
1003eb86:	test   eax,eax
1003eb88:	je     0x1003eba8
1003eb8a:	movzx  ecx,BYTE PTR [esi+0x1006ea7c]
1003eb91:	add    esi,0x1
1003eb94:	cmp    BYTE PTR [esi+0x1006ea7c],0x0
1003eb9b:	lea    edi,[edi+ecx*1+0x1]
1003eb9f:	jne    0x1003eb70
1003eba1:	pop    edi
1003eba2:	pop    esi
1003eba3:	or     eax,0xffffffff
1003eba6:	pop    ebp
1003eba7:	ret    
1003eba8:	pop    edi
1003eba9:	mov    eax,esi
1003ebab:	pop    esi
1003ebac:	pop    ebp
1003ebad:	ret    
1003ebae:	int3   
1003ebaf:	int3   
1003ebb0:	mov    eax,DWORD PTR [esp+0x4]
1003ebb4:	push   ebx
1003ebb5:	mov    ebx,DWORD PTR [esp+0xc]
1003ebb9:	push   esi
1003ebba:	push   edi
1003ebbb:	mov    edi,DWORD PTR [esp+0x18]
1003ebbf:	call   0x1003e8b0
1003ebc4:	mov    esi,eax
1003ebc6:	test   esi,esi
1003ebc8:	je     0x1003ec4a
1003ebce:	push   ebp
1003ebcf:	nop
1003ebd0:	mov    ecx,DWORD PTR [esp+0x20]
1003ebd4:	mov    ebp,DWORD PTR [edi+0x20]
1003ebd7:	cmp    ecx,ebp
1003ebd9:	jae    0x1003ec13
1003ebdb:	mov    eax,DWORD PTR [edi+0x14]
1003ebde:	lea    edi,[esi+0x1]
1003ebe1:	xor    edx,edx
1003ebe3:	mov    dh,BYTE PTR [ecx]
1003ebe5:	mov    dl,BYTE PTR [ecx+0x1]
1003ebe8:	lea    ebx,[eax+edx*1]
1003ebeb:	cmp    ebx,edi
1003ebed:	je     0x1003ebfc
1003ebef:	add    ecx,0x2
1003ebf2:	cmp    ecx,ebp
1003ebf4:	jb     0x1003ebe1
1003ebf6:	mov    ebx,DWORD PTR [esp+0x18]
1003ebfa:	jmp    0x1003ec0f
1003ebfc:	mov    ebx,DWORD PTR [esp+0x18]
1003ec00:	lea    eax,[edx+ebx*1]
1003ec03:	sar    eax,0x8
1003ec06:	mov    BYTE PTR [ecx],al
1003ec08:	mov    al,bl
1003ec0a:	add    al,dl
1003ec0c:	mov    BYTE PTR [ecx+0x1],al
1003ec0f:	mov    edi,DWORD PTR [esp+0x1c]
1003ec13:	cmp    ecx,DWORD PTR [edi+0x20]
1003ec16:	jb     0x1003ec3b
1003ec18:	mov    ecx,DWORD PTR [edi+0x14]
1003ec1b:	xor    eax,eax
1003ec1d:	mov    ah,BYTE PTR [esi+0x1]
1003ec20:	mov    al,BYTE PTR [esi+0x2]
1003ec23:	add    ecx,eax
1003ec25:	cmp    ecx,DWORD PTR [esp+0x14]
1003ec29:	jb     0x1003ec3b
1003ec2b:	lea    edx,[eax+ebx*1]
1003ec2e:	sar    edx,0x8
1003ec31:	mov    cl,bl
1003ec33:	add    cl,al
1003ec35:	mov    BYTE PTR [esi+0x1],dl
1003ec38:	mov    BYTE PTR [esi+0x2],cl
1003ec3b:	lea    eax,[esi+0x3]
1003ec3e:	call   0x1003e8b0
1003ec43:	mov    esi,eax
1003ec45:	test   esi,esi
1003ec47:	jne    0x1003ebd0
1003ec49:	pop    ebp
1003ec4a:	pop    edi
1003ec4b:	pop    esi
1003ec4c:	pop    ebx
1003ec4d:	ret    
1003ec4e:	int3   
1003ec4f:	int3   
1003ec50:	push   ecx
1003ec51:	mov    ecx,DWORD PTR [esp+0x10]
1003ec55:	push   ebx
1003ec56:	mov    ebx,DWORD PTR [esp+0x18]
1003ec5a:	and    ebx,0x8
1003ec5d:	push   ebp
1003ec5e:	push   edi
1003ec5f:	je     0x1003ecef
1003ec65:	movzx  edx,BYTE PTR [ecx]
1003ec68:	mov    eax,DWORD PTR [esi+0xc]
1003ec6b:	test   BYTE PTR [edx+eax*1],0x1
1003ec6f:	je     0x1003ec82
1003ec71:	movzx  edx,BYTE PTR [ecx+0x1]
1003ec75:	add    ecx,0x1
1003ec78:	test   BYTE PTR [edx+eax*1],0x1
1003ec7c:	jne    0x1003ec71
1003ec7e:	mov    DWORD PTR [esp+0x1c],ecx
1003ec82:	cmp    BYTE PTR [ecx],0x23
1003ec85:	jne    0x1003ecef
1003ec87:	mov    al,BYTE PTR [ecx+0x1]
1003ec8a:	add    ecx,0x1
1003ec8d:	test   al,al
1003ec8f:	mov    DWORD PTR [esp+0x1c],ecx
1003ec93:	je     0x1003ec65
1003ec95:	mov    edx,DWORD PTR [esi+0x50]
1003ec98:	test   edx,edx
1003ec9a:	je     0x1003ecbe
1003ec9c:	mov    eax,DWORD PTR [esi+0x1c]
1003ec9f:	cmp    ecx,eax
1003eca1:	jae    0x1003ecdc
1003eca3:	push   edx
1003eca4:	lea    edi,[esi+0x54]
1003eca7:	xor    edx,edx
1003eca9:	call   0x10042de0
1003ecae:	add    esp,0x4
1003ecb1:	test   eax,eax
1003ecb3:	je     0x1003ecdc
1003ecb5:	add    ecx,DWORD PTR [esi+0x54]
1003ecb8:	mov    DWORD PTR [esp+0x1c],ecx
1003ecbc:	jmp    0x1003ec65
1003ecbe:	mov    edx,DWORD PTR [esi+0x54]
1003ecc1:	mov    edi,DWORD PTR [esi+0x1c]
1003ecc4:	sub    edi,edx
1003ecc6:	cmp    ecx,edi
1003ecc8:	ja     0x1003ecdc
1003ecca:	cmp    al,BYTE PTR [esi+0x58]
1003eccd:	jne    0x1003ecdc
1003eccf:	cmp    edx,0x1
1003ecd2:	je     0x1003ecb5
1003ecd4:	mov    al,BYTE PTR [ecx+0x1]
1003ecd7:	cmp    al,BYTE PTR [esi+0x59]
1003ecda:	je     0x1003ecb5
1003ecdc:	mov    al,BYTE PTR [ecx+0x1]
1003ecdf:	add    ecx,0x1
1003ece2:	test   al,al
1003ece4:	mov    DWORD PTR [esp+0x1c],ecx
1003ece8:	jne    0x1003ec95
1003ecea:	jmp    0x1003ec65
1003ecef:	mov    al,BYTE PTR [ecx]
1003ecf1:	cmp    al,0x5c
1003ecf3:	jne    0x1003ed2c
1003ecf5:	mov    ecx,DWORD PTR [esi+0x30]
1003ecf8:	push   0x0
1003ecfa:	push   ecx
1003ecfb:	lea    edx,[esp+0x14]
1003ecff:	push   edx
1003ed00:	lea    eax,[esp+0x28]
1003ed04:	push   eax
1003ed05:	mov    eax,DWORD PTR [esp+0x30]
1003ed09:	mov    DWORD PTR [esp+0x1c],0x0
1003ed11:	call   0x1003ddb0
1003ed16:	add    esp,0x10
1003ed19:	cmp    DWORD PTR [esp+0xc],0x0
1003ed1e:	mov    ebp,eax
1003ed20:	jne    0x1003f1e1
1003ed26:	mov    ecx,DWORD PTR [esp+0x1c]
1003ed2a:	jmp    0x1003ed3c
1003ed2c:	mov    edx,DWORD PTR [esi+0xc]
1003ed2f:	movzx  ebp,al
1003ed32:	test   BYTE PTR [edx+ebp*1],0x80
1003ed36:	jne    0x1003f1e1
1003ed3c:	add    ecx,0x1
1003ed3f:	test   ebx,ebx
1003ed41:	je     0x1003edcf
1003ed47:	jmp    0x1003ed50
1003ed49:	lea    esp,[esp+0x0]
1003ed50:	movzx  edx,BYTE PTR [ecx]
1003ed53:	mov    eax,DWORD PTR [esi+0xc]
1003ed56:	test   BYTE PTR [edx+eax*1],0x1
1003ed5a:	je     0x1003ed6d
1003ed5c:	lea    esp,[esp+0x0]
1003ed60:	movzx  edx,BYTE PTR [ecx+0x1]
1003ed64:	add    ecx,0x1
1003ed67:	test   BYTE PTR [edx+eax*1],0x1
1003ed6b:	jne    0x1003ed60
1003ed6d:	cmp    BYTE PTR [ecx],0x23
1003ed70:	jne    0x1003edcf
1003ed72:	mov    al,BYTE PTR [ecx+0x1]
1003ed75:	add    ecx,0x1
1003ed78:	test   al,al
1003ed7a:	je     0x1003ed50
1003ed7c:	lea    esp,[esp+0x0]
1003ed80:	mov    edx,DWORD PTR [esi+0x50]
1003ed83:	test   edx,edx
1003ed85:	je     0x1003eda5
1003ed87:	mov    eax,DWORD PTR [esi+0x1c]
1003ed8a:	cmp    ecx,eax
1003ed8c:	jae    0x1003edc3
1003ed8e:	push   edx
1003ed8f:	lea    edi,[esi+0x54]
1003ed92:	xor    edx,edx
1003ed94:	call   0x10042de0
1003ed99:	add    esp,0x4
1003ed9c:	test   eax,eax
1003ed9e:	je     0x1003edc3
1003eda0:	add    ecx,DWORD PTR [esi+0x54]
1003eda3:	jmp    0x1003ed50
1003eda5:	mov    edx,DWORD PTR [esi+0x54]
1003eda8:	mov    edi,DWORD PTR [esi+0x1c]
1003edab:	sub    edi,edx
1003edad:	cmp    ecx,edi
1003edaf:	ja     0x1003edc3
1003edb1:	cmp    al,BYTE PTR [esi+0x58]
1003edb4:	jne    0x1003edc3
1003edb6:	cmp    edx,0x1
1003edb9:	je     0x1003eda0
1003edbb:	mov    al,BYTE PTR [ecx+0x1]
1003edbe:	cmp    al,BYTE PTR [esi+0x59]
1003edc1:	je     0x1003eda0
1003edc3:	mov    al,BYTE PTR [ecx+0x1]
1003edc6:	add    ecx,0x1
1003edc9:	test   al,al
1003edcb:	jne    0x1003ed80
1003edcd:	jmp    0x1003ed50
1003edcf:	mov    al,BYTE PTR [ecx]
1003edd1:	cmp    al,0x2a
1003edd3:	je     0x1003f1e1
1003edd9:	cmp    al,0x3f
1003eddb:	je     0x1003f1e1
1003ede1:	push   0x3
1003ede3:	push   0x10074230
1003ede8:	push   ecx
1003ede9:	call   0x1004f3a6
1003edee:	add    esp,0xc
1003edf1:	test   eax,eax
1003edf3:	je     0x1003f1e1
1003edf9:	test   ebp,ebp
1003edfb:	jl     0x1003efb1
1003ee01:	mov    ecx,DWORD PTR [esp+0x14]
1003ee05:	lea    eax,[ecx-0x6]
1003ee08:	cmp    eax,0x18
1003ee0b:	ja     0x1003f1e1
1003ee11:	movzx  edx,BYTE PTR [eax+0x1003f218]
1003ee18:	jmp    DWORD PTR [edx*4+0x1003f1e8]
1003ee1f:	xor    eax,eax
1003ee21:	cmp    DWORD PTR [esp+0x18],ebp
1003ee25:	pop    edi
1003ee26:	pop    ebp
1003ee27:	setne  al
1003ee2a:	pop    ebx
1003ee2b:	pop    ecx
1003ee2c:	ret    
1003ee2d:	mov    eax,DWORD PTR [esp+0x18]
1003ee31:	cmp    eax,ebp
1003ee33:	je     0x1003f1e1
1003ee39:	mov    ecx,DWORD PTR [esi+0x4]
1003ee3c:	movzx  edx,BYTE PTR [ecx+ebp*1]
1003ee40:	xor    ecx,ecx
1003ee42:	cmp    eax,edx
1003ee44:	setne  cl
1003ee47:	pop    edi
1003ee48:	pop    ebp
1003ee49:	pop    ebx
1003ee4a:	mov    eax,ecx
1003ee4c:	pop    ecx
1003ee4d:	ret    
1003ee4e:	mov    eax,DWORD PTR [esp+0x18]
1003ee52:	cmp    eax,ebp
1003ee54:	je     0x1003ee9d
1003ee56:	test   BYTE PTR [esp+0x20],0x1
1003ee5b:	je     0x1003f1e1
1003ee61:	mov    edx,DWORD PTR [esi+0x4]
1003ee64:	movzx  ecx,BYTE PTR [edx+ebp*1]
1003ee68:	xor    edx,edx
1003ee6a:	cmp    eax,ecx
1003ee6c:	sete   dl
1003ee6f:	pop    edi
1003ee70:	pop    ebp
1003ee71:	pop    ebx
1003ee72:	mov    eax,edx
1003ee74:	pop    ecx
1003ee75:	ret    
1003ee76:	cmp    ebp,0x7f
1003ee79:	jg     0x1003ee9d
1003ee7b:	mov    eax,DWORD PTR [esi+0xc]
1003ee7e:	test   BYTE PTR [eax+ebp*1],0x4
1003ee82:	jmp    0x1003f1db
1003ee87:	cmp    ebp,0x7f
1003ee8a:	jg     0x1003f1e1
1003ee90:	mov    ecx,DWORD PTR [esi+0xc]
1003ee93:	test   BYTE PTR [ecx+ebp*1],0x4
1003ee97:	je     0x1003f1e1
1003ee9d:	pop    edi
1003ee9e:	pop    ebp
1003ee9f:	mov    eax,0x1
1003eea4:	pop    ebx
1003eea5:	pop    ecx
1003eea6:	ret    
1003eea7:	cmp    ebp,0x7f
1003eeaa:	jg     0x1003ee9d
1003eeac:	mov    edx,DWORD PTR [esi+0xc]
1003eeaf:	test   BYTE PTR [edx+ebp*1],0x1
1003eeb3:	jmp    0x1003f1db
1003eeb8:	cmp    ebp,0x7f
1003eebb:	jg     0x1003f1e1
1003eec1:	mov    eax,DWORD PTR [esi+0xc]
1003eec4:	test   BYTE PTR [eax+ebp*1],0x1
1003eec8:	je     0x1003f1e1
1003eece:	pop    edi
1003eecf:	pop    ebp
1003eed0:	mov    eax,0x1
1003eed5:	pop    ebx
1003eed6:	pop    ecx
1003eed7:	ret    
1003eed8:	cmp    ebp,0x7f
1003eedb:	jg     0x1003ee9d
1003eedd:	mov    ecx,DWORD PTR [esi+0xc]
1003eee0:	test   BYTE PTR [ecx+ebp*1],0x10
1003eee4:	jmp    0x1003f1db
1003eee9:	cmp    ebp,0x7f
1003eeec:	jg     0x1003f1e1
1003eef2:	mov    edx,DWORD PTR [esi+0xc]
1003eef5:	test   BYTE PTR [edx+ebp*1],0x10
1003eef9:	je     0x1003f1e1
1003eeff:	pop    edi
1003ef00:	pop    ebp
1003ef01:	mov    eax,0x1
1003ef06:	pop    ebx
1003ef07:	pop    ecx
1003ef08:	ret    
1003ef09:	cmp    ebp,0x180e
1003ef0f:	jg     0x1003ef2f
1003ef11:	je     0x1003ef66
1003ef13:	cmp    ebp,0xa0
1003ef19:	jg     0x1003ef27
1003ef1b:	je     0x1003ef66
1003ef1d:	cmp    ebp,0x9
1003ef20:	je     0x1003ef66
1003ef22:	cmp    ebp,0x20
1003ef25:	jmp    0x1003ef57
1003ef27:	cmp    ebp,0x1680
1003ef2d:	jmp    0x1003ef57
1003ef2f:	cmp    ebp,0x205f
1003ef35:	jg     0x1003ef51
1003ef37:	je     0x1003ef66
1003ef39:	cmp    ebp,0x2000
1003ef3f:	jl     0x1003ef59
1003ef41:	cmp    ebp,0x200a
1003ef47:	jle    0x1003ef66
1003ef49:	cmp    ebp,0x202f
1003ef4f:	jmp    0x1003ef57
1003ef51:	cmp    ebp,0x3000
1003ef57:	je     0x1003ef66
1003ef59:	pop    edi
1003ef5a:	xor    eax,eax
1003ef5c:	cmp    ecx,0x13
1003ef5f:	pop    ebp
1003ef60:	sete   al
1003ef63:	pop    ebx
1003ef64:	pop    ecx
1003ef65:	ret    
1003ef66:	pop    edi
1003ef67:	xor    eax,eax
1003ef69:	cmp    ecx,0x13
1003ef6c:	pop    ebp
1003ef6d:	setne  al
1003ef70:	pop    ebx
1003ef71:	pop    ecx
1003ef72:	ret    
1003ef73:	cmp    ebp,0x85
1003ef79:	jg     0x1003ef94
1003ef7b:	je     0x1003efa4
1003ef7d:	cmp    ebp,0xa
1003ef80:	jl     0x1003ef87
1003ef82:	cmp    ebp,0xd
1003ef85:	jle    0x1003efa4
1003ef87:	pop    edi
1003ef88:	xor    eax,eax
1003ef8a:	cmp    ecx,0x15
1003ef8d:	pop    ebp
1003ef8e:	sete   al
1003ef91:	pop    ebx
1003ef92:	pop    ecx
1003ef93:	ret    
1003ef94:	cmp    ebp,0x2028
1003ef9a:	jl     0x1003ef87
1003ef9c:	cmp    ebp,0x2029
1003efa2:	jg     0x1003ef87
1003efa4:	pop    edi
1003efa5:	xor    eax,eax
1003efa7:	cmp    ecx,0x15
1003efaa:	pop    ebp
1003efab:	setne  al
1003efae:	pop    ebx
1003efaf:	pop    ecx
1003efb0:	ret    
1003efb1:	mov    eax,DWORD PTR [esp+0x14]
1003efb5:	add    eax,0xfffffffa
1003efb8:	cmp    eax,0x17
1003efbb:	ja     0x1003f1e1
1003efc1:	movzx  eax,BYTE PTR [eax+0x1003f264]
1003efc8:	jmp    DWORD PTR [eax*4+0x1003f234]
1003efcf:	neg    ebp
1003efd1:	lea    eax,[ebp-0x6]
1003efd4:	cmp    eax,0xf
1003efd7:	ja     0x1003f1e1
1003efdd:	movzx  ecx,BYTE PTR [eax+0x1003f2a0]
1003efe4:	jmp    DWORD PTR [ecx*4+0x1003f27c]
1003efeb:	mov    eax,DWORD PTR [esp+0x18]
1003efef:	cmp    eax,0x7f
1003eff2:	jg     0x1003ee9d
1003eff8:	mov    edx,DWORD PTR [esi+0xc]
1003effb:	test   BYTE PTR [eax+edx*1],0x4
1003efff:	jmp    0x1003f1db
1003f004:	mov    eax,DWORD PTR [esp+0x18]
1003f008:	cmp    eax,0x7f
1003f00b:	jg     0x1003f1e1
1003f011:	mov    ecx,DWORD PTR [esi+0xc]
1003f014:	test   BYTE PTR [eax+ecx*1],0x4
1003f018:	je     0x1003f1e1
1003f01e:	pop    edi
1003f01f:	pop    ebp
1003f020:	mov    eax,0x1
1003f025:	pop    ebx
1003f026:	pop    ecx
1003f027:	ret    
1003f028:	mov    eax,DWORD PTR [esp+0x18]
1003f02c:	cmp    eax,0x7f
1003f02f:	jg     0x1003ee9d
1003f035:	mov    edx,DWORD PTR [esi+0xc]
1003f038:	test   BYTE PTR [eax+edx*1],0x1
1003f03c:	jmp    0x1003f1db
1003f041:	mov    eax,DWORD PTR [esp+0x18]
1003f045:	cmp    eax,0x7f
1003f048:	jg     0x1003f1e1
1003f04e:	mov    ecx,DWORD PTR [esi+0xc]
1003f051:	test   BYTE PTR [eax+ecx*1],0x1
1003f055:	je     0x1003f1e1
1003f05b:	pop    edi
1003f05c:	pop    ebp
1003f05d:	mov    eax,0x1
1003f062:	pop    ebx
1003f063:	pop    ecx
1003f064:	ret    
1003f065:	mov    eax,DWORD PTR [esp+0x18]
1003f069:	cmp    eax,0x7f
1003f06c:	jg     0x1003ee9d
1003f072:	mov    edx,DWORD PTR [esi+0xc]
1003f075:	test   BYTE PTR [eax+edx*1],0x10
1003f079:	jmp    0x1003f1db
1003f07e:	mov    eax,DWORD PTR [esp+0x18]
1003f082:	cmp    eax,0x7f
1003f085:	jg     0x1003f1e1
1003f08b:	mov    ecx,DWORD PTR [esi+0xc]
1003f08e:	test   BYTE PTR [eax+ecx*1],0x10
1003f092:	je     0x1003f1e1
1003f098:	pop    edi
1003f099:	pop    ebp
1003f09a:	mov    eax,0x1
1003f09f:	pop    ebx
1003f0a0:	pop    ecx
1003f0a1:	ret    
1003f0a2:	mov    eax,DWORD PTR [esp+0x18]
1003f0a6:	cmp    eax,0x180e
1003f0ab:	jg     0x1003f0c9
1003f0ad:	je     0x1003f0fb
1003f0af:	cmp    eax,0xa0
1003f0b4:	jg     0x1003f0c2
1003f0b6:	je     0x1003f0fb
1003f0b8:	cmp    eax,0x9
1003f0bb:	je     0x1003f0fb
1003f0bd:	cmp    eax,0x20
1003f0c0:	jmp    0x1003f0ec
1003f0c2:	cmp    eax,0x1680
1003f0c7:	jmp    0x1003f0ec
1003f0c9:	cmp    eax,0x205f
1003f0ce:	jg     0x1003f0e7
1003f0d0:	je     0x1003f0fb
1003f0d2:	cmp    eax,0x2000
1003f0d7:	jl     0x1003f0ee
1003f0d9:	cmp    eax,0x200a
1003f0de:	jle    0x1003f0fb
1003f0e0:	cmp    eax,0x202f
1003f0e5:	jmp    0x1003f0ec
1003f0e7:	cmp    eax,0x3000
1003f0ec:	je     0x1003f0fb
1003f0ee:	xor    eax,eax
1003f0f0:	pop    edi
1003f0f1:	cmp    ebp,0x13
1003f0f4:	pop    ebp
1003f0f5:	sete   al
1003f0f8:	pop    ebx
1003f0f9:	pop    ecx
1003f0fa:	ret    
1003f0fb:	xor    eax,eax
1003f0fd:	pop    edi
1003f0fe:	cmp    ebp,0x13
1003f101:	pop    ebp
1003f102:	setne  al
1003f105:	pop    ebx
1003f106:	pop    ecx
1003f107:	ret    
1003f108:	mov    eax,DWORD PTR [esp+0x18]
1003f10c:	cmp    eax,0x85
1003f111:	jg     0x1003f12c
1003f113:	je     0x1003f13a
1003f115:	cmp    eax,0xa
1003f118:	jl     0x1003f11f
1003f11a:	cmp    eax,0xd
1003f11d:	jle    0x1003f13a
1003f11f:	xor    eax,eax
1003f121:	pop    edi
1003f122:	cmp    ebp,0x15
1003f125:	pop    ebp
1003f126:	sete   al
1003f129:	pop    ebx
1003f12a:	pop    ecx
1003f12b:	ret    
1003f12c:	cmp    eax,0x2028
1003f131:	jl     0x1003f11f
1003f133:	cmp    eax,0x2029
1003f138:	jg     0x1003f11f
1003f13a:	xor    eax,eax
1003f13c:	pop    edi
1003f13d:	cmp    ebp,0x15
1003f140:	pop    ebp
1003f141:	setne  al
1003f144:	pop    ebx
1003f145:	pop    ecx
1003f146:	ret    
1003f147:	cmp    ebp,0xfffffffa
1003f14a:	je     0x1003ee9d
1003f150:	cmp    ebp,0xfffffff7
1003f153:	je     0x1003ee9d
1003f159:	cmp    ebp,0xfffffff6
1003f15c:	je     0x1003ee9d
1003f162:	cmp    ebp,0xffffffed
1003f165:	je     0x1003ee9d
1003f16b:	cmp    ebp,0xffffffeb
1003f16e:	jmp    0x1003f1db
1003f170:	xor    eax,eax
1003f172:	pop    edi
1003f173:	cmp    ebp,0xfffffff9
1003f176:	pop    ebp
1003f177:	sete   al
1003f17a:	pop    ebx
1003f17b:	pop    ecx
1003f17c:	ret    
1003f17d:	cmp    ebp,0xfffffff8
1003f180:	jmp    0x1003f18e
1003f182:	cmp    ebp,0xfffffff8
1003f185:	je     0x1003ee9d
1003f18b:	cmp    ebp,0xffffffee
1003f18e:	je     0x1003ee9d
1003f194:	cmp    ebp,0xfffffff9
1003f197:	je     0x1003ee9d
1003f19d:	cmp    ebp,0xfffffff5
1003f1a0:	jmp    0x1003f1db
1003f1a2:	xor    eax,eax
1003f1a4:	pop    edi
1003f1a5:	cmp    ebp,0xffffffed
1003f1a8:	pop    ebp
1003f1a9:	sete   al
1003f1ac:	pop    ebx
1003f1ad:	pop    ecx
1003f1ae:	ret    
1003f1af:	cmp    ebp,0xffffffec
1003f1b2:	jmp    0x1003f18e
1003f1b4:	xor    eax,eax
1003f1b6:	pop    edi
1003f1b7:	cmp    ebp,0xffffffeb
1003f1ba:	pop    ebp
1003f1bb:	sete   al
1003f1be:	pop    ebx
1003f1bf:	pop    ecx
1003f1c0:	ret    
1003f1c1:	cmp    ebp,0xfffffff6
1003f1c4:	je     0x1003ee9d
1003f1ca:	cmp    ebp,0xfffffff7
1003f1cd:	jmp    0x1003f15c
1003f1cf:	cmp    ebp,0xfffffff5
1003f1d2:	je     0x1003ee9d
1003f1d8:	cmp    ebp,0xfffffff9
1003f1db:	je     0x1003ee9d
1003f1e1:	pop    edi
1003f1e2:	pop    ebp
1003f1e3:	xor    eax,eax
1003f1e5:	pop    ebx
1003f1e6:	pop    ecx
1003f1e7:	ret    
1003f1e8:	xchg   esi,ebp
1003f1ea:	add    edx,DWORD PTR [eax]
1003f1ec:	jbe    0x1003f1dc
1003f1ee:	add    edx,DWORD PTR [eax]
1003f1f0:	mov    eax,0xa71003ee
1003f1f5:	out    dx,al
1003f1f6:	add    edx,DWORD PTR [eax]
1003f1f8:	jmp    0xe813f5eb
1003f1fd:	out    dx,al
1003f1fe:	add    edx,DWORD PTR [eax]
1003f200:	or     edi,ebp
1003f202:	add    edx,DWORD PTR [eax]
1003f204:	jae    0x1003f1f5
1003f206:	add    edx,DWORD PTR [eax]
1003f208:	pop    ds
1003f209:	out    dx,al
1003f20a:	add    edx,DWORD PTR [eax]
1003f20c:	sub    eax,0x4e1003ee
1003f211:	out    dx,al
1003f212:	add    edx,DWORD PTR [eax]
1003f214:	loope  0x1003f207
1003f216:	add    edx,DWORD PTR [eax]
1003f218:	add    BYTE PTR [ecx],al
1003f21a:	add    al,BYTE PTR [ebx]
1003f21c:	add    al,0x5
1003f21e:	or     ecx,DWORD PTR [ebx]
1003f220:	or     ecx,DWORD PTR [ebx]
1003f222:	or     ecx,DWORD PTR [ebx]
1003f224:	push   es
1003f225:	push   es
1003f226:	pop    es
1003f227:	pop    es
1003f228:	or     ecx,DWORD PTR [ebx]
1003f22a:	or     ecx,DWORD PTR [ebx]
1003f22c:	or     ecx,DWORD PTR [ebx]
1003f22e:	or     BYTE PTR [ecx],cl
1003f230:	or     cl,BYTE PTR [ebp-0xe8fffb7]
1003f236:	add    edx,DWORD PTR [eax]
1003f238:	inc    edi
1003f239:	icebp  
1003f23a:	add    edx,DWORD PTR [eax]
1003f23c:	retf   0x3f1
1003f23f:	adc    BYTE PTR [ebp-0xf],bh
1003f242:	add    edx,DWORD PTR [eax]
1003f244:	iret   
1003f245:	icebp  
1003f246:	add    edx,DWORD PTR [eax]
1003f248:	shl    ecx,0x3
1003f24b:	adc    BYTE PTR [edx-0x7deffc0f],ah
1003f251:	icebp  
1003f252:	add    edx,DWORD PTR [eax]
1003f254:	mov    ah,0xf1
1003f256:	add    edx,DWORD PTR [eax]
1003f258:	scas   eax,DWORD PTR es:[edi]
1003f259:	icebp  
1003f25a:	add    edx,DWORD PTR [eax]
1003f25c:	iret   
1003f25d:	out    dx,eax
1003f25e:	add    edx,DWORD PTR [eax]
1003f260:	loope  0x1003f253
1003f262:	add    edx,DWORD PTR [eax]
1003f264:	add    BYTE PTR [ecx],al
1003f266:	add    al,BYTE PTR [ebx]
1003f268:	add    al,0x5
1003f26a:	or     ecx,DWORD PTR [ebx]
1003f26c:	or     ecx,DWORD PTR [ebx]
1003f26e:	or     ecx,DWORD PTR [ebx]
1003f270:	push   es
1003f271:	pop    es
1003f272:	or     BYTE PTR [ecx],cl
1003f274:	or     ecx,DWORD PTR [ebx]
1003f276:	or     ecx,DWORD PTR [ebx]
1003f278:	or     ecx,DWORD PTR [ebx]
1003f27a:	or     cl,BYTE PTR [edx]
1003f27c:	add    al,0xf0
1003f27e:	add    edx,DWORD PTR [eax]
1003f280:	jmp    0x1003f271
1003f282:	add    edx,DWORD PTR [eax]
1003f284:	inc    ecx
1003f285:	lock add edx,DWORD PTR [eax]
1003f288:	sub    al,dh
1003f28a:	add    edx,DWORD PTR [eax]
1003f28c:	jle    0x1003f27e
1003f28e:	add    edx,DWORD PTR [eax]
1003f290:	lock add edx,DWORD PTR gs:[eax]
1003f294:	mov    ds:0x81003f0,al
1003f299:	icebp  
1003f29a:	add    edx,DWORD PTR [eax]
1003f29c:	loope  0x1003f28f
1003f29e:	add    edx,DWORD PTR [eax]
1003f2a0:	add    BYTE PTR [ecx],al
1003f2a2:	add    al,BYTE PTR [ebx]
1003f2a4:	add    al,0x5
1003f2a6:	or     BYTE PTR [eax],cl
1003f2a8:	or     BYTE PTR [eax],cl
1003f2aa:	or     BYTE PTR [eax],cl
1003f2ac:	push   es
1003f2ad:	push   es
1003f2ae:	pop    es
1003f2af:	pop    es
1003f2b0:	sub    esp,0xf0
1003f2b6:	mov    eax,ds:0x1007e030
1003f2bb:	xor    eax,esp
1003f2bd:	mov    DWORD PTR [esp+0xec],eax
1003f2c4:	push   ebx
1003f2c5:	push   ebp
1003f2c6:	push   esi
1003f2c7:	push   edi
1003f2c8:	mov    eax,DWORD PTR [esp+0x104]
1003f2cf:	mov    DWORD PTR [esp+0xa8],eax
1003f2d6:	mov    eax,DWORD PTR [eax]
1003f2d8:	mov    DWORD PTR [esp+0x34],eax
1003f2dc:	mov    DWORD PTR [esp+0x20],ecx
1003f2e0:	mov    ecx,DWORD PTR [esp+0x10c]
1003f2e7:	shr    eax,0x9
1003f2ea:	and    eax,0x1
1003f2ed:	mov    DWORD PTR [esp+0xb4],ecx
1003f2f4:	mov    ecx,DWORD PTR [esp+0x110]
1003f2fb:	mov    DWORD PTR [esp+0xa4],eax
1003f302:	xor    eax,0x1
1003f305:	mov    DWORD PTR [esp+0xac],ecx
1003f30c:	mov    ecx,DWORD PTR [esp+0x114]
1003f313:	mov    DWORD PTR [esp+0xa0],eax
1003f31a:	mov    eax,0xfffffffe
1003f31f:	mov    DWORD PTR [esp+0x98],ecx
1003f326:	mov    ecx,DWORD PTR [esp+0x118]
1003f32d:	mov    DWORD PTR [esp+0x68],eax
1003f331:	mov    DWORD PTR [esp+0x5c],eax
1003f335:	mov    DWORD PTR [esp+0x4c],eax
1003f339:	mov    DWORD PTR [esp+0x30],eax
1003f33d:	mov    eax,DWORD PTR [esp+0x34]
1003f341:	mov    esi,DWORD PTR [esp+0x108]
1003f348:	mov    DWORD PTR [esp+0x18],ecx
1003f34c:	mov    ecx,DWORD PTR [esp+0x11c]
1003f353:	mov    DWORD PTR [esp+0xb0],edx
1003f35a:	mov    edx,DWORD PTR [edx]
1003f35c:	xor    edi,edi
1003f35e:	xor    ebp,ebp
1003f360:	and    eax,0x1
1003f363:	mov    DWORD PTR [esp+0x38],ecx
1003f367:	mov    ecx,edx
1003f369:	mov    ebx,edx
1003f36b:	shl    eax,0x8
1003f36e:	mov    DWORD PTR [esp+0x9c],esi
1003f375:	mov    esi,DWORD PTR [esi]
1003f377:	mov    DWORD PTR [esp+0x48],edi
1003f37b:	mov    DWORD PTR [esp+0x40],edi
1003f37f:	mov    DWORD PTR [esp+0x94],edi
1003f386:	mov    DWORD PTR [esp+0x6c],edi
1003f38a:	mov    DWORD PTR [esp+0x14],edx
1003f38e:	mov    DWORD PTR [esp+0x80],ecx
1003f395:	mov    DWORD PTR [esp+0xb8],ebx
1003f39c:	mov    DWORD PTR [esp+0x50],edi
1003f3a0:	mov    DWORD PTR [esp+0x88],edi
1003f3a7:	mov    DWORD PTR [esp+0x2c],ebp
1003f3ab:	mov    DWORD PTR [esp+0x74],edi
1003f3af:	mov    DWORD PTR [esp+0x64],edi
1003f3b3:	mov    DWORD PTR [esp+0x84],eax
1003f3ba:	cmp    DWORD PTR [esp+0x38],0x0
1003f3bf:	mov    DWORD PTR [esp+0x10],esi
1003f3c3:	movzx  eax,BYTE PTR [esi]
1003f3c6:	mov    DWORD PTR [esp+0x1c],eax
1003f3ca:	mov    eax,DWORD PTR [esp+0x18]
1003f3ce:	je     0x1003f45f
1003f3d4:	mov    eax,DWORD PTR [eax+0x10]
1003f3d7:	add    eax,0x1000
1003f3dc:	cmp    edx,eax
1003f3de:	ja     0x10041b69
1003f3e4:	cmp    edx,ecx
1003f3e6:	jae    0x1003f3ee
1003f3e8:	mov    DWORD PTR [esp+0x14],ecx
1003f3ec:	mov    edx,ecx
1003f3ee:	mov    eax,DWORD PTR [esp+0x38]
1003f3f2:	mov    eax,DWORD PTR [eax]
1003f3f4:	sub    edx,ecx
1003f3f6:	mov    ecx,0x7fffffeb
1003f3fb:	sub    ecx,eax
1003f3fd:	cmp    ecx,edx
1003f3ff:	jl     0x10041b78
1003f405:	sub    eax,DWORD PTR [esp+0x80]
1003f40c:	mov    edx,DWORD PTR [esp+0x14]
1003f410:	mov    ecx,DWORD PTR [esp+0x38]
1003f414:	add    eax,edx
1003f416:	test   ebp,ebp
1003f418:	mov    DWORD PTR [ecx],eax
1003f41a:	je     0x1003f450
1003f41c:	cmp    ebp,ebx
1003f41e:	jbe    0x1003f456
1003f420:	mov    esi,edx
1003f422:	sub    edx,ebp
1003f424:	push   edx
1003f425:	push   ebp
1003f426:	push   ebx
1003f427:	call   0x10045960
1003f42c:	mov    eax,ebx
1003f42e:	sub    eax,ebp
1003f430:	add    esp,0xc
1003f433:	add    esi,eax
1003f435:	mov    DWORD PTR [esp+0x14],esi
1003f439:	mov    edx,DWORD PTR [esp+0x14]
1003f43d:	mov    esi,DWORD PTR [esp+0x10]
1003f441:	mov    ebp,ebx
1003f443:	mov    DWORD PTR [esp+0x2c],ebp
1003f447:	mov    DWORD PTR [esp+0x80],edx
1003f44e:	jmp    0x1003f471
1003f450:	mov    DWORD PTR [esp+0x14],ebx
1003f454:	mov    edx,ebx
1003f456:	mov    DWORD PTR [esp+0x80],edx
1003f45d:	jmp    0x1003f471
1003f45f:	mov    ecx,DWORD PTR [eax+0x10]
1003f462:	add    ecx,0x1000
1003f468:	cmp    DWORD PTR [eax+0x20],ecx
1003f46b:	ja     0x10041b87
1003f471:	cmp    DWORD PTR [esp+0x50],0x0
1003f476:	mov    ecx,DWORD PTR [esp+0x1c]
1003f47a:	je     0x1003f557
1003f480:	test   ecx,ecx
1003f482:	je     0x1003f557
1003f488:	cmp    ecx,0x5c
1003f48b:	jne    0x1003f4a3
1003f48d:	cmp    BYTE PTR [esi+0x1],0x45
1003f491:	jne    0x1003f4a3
1003f493:	mov    DWORD PTR [esp+0x50],0x0
1003f49b:	add    esi,0x1
1003f49e:	jmp    0x10041b47
1003f4a3:	test   edi,edi
1003f4a5:	je     0x1003f4d8
1003f4a7:	cmp    DWORD PTR [esp+0x38],0x0
1003f4ac:	jne    0x1003f4d0
1003f4ae:	xor    ebx,ebx
1003f4b0:	mov    bh,BYTE PTR [edi+0x2]
1003f4b3:	mov    eax,esi
1003f4b5:	mov    esi,DWORD PTR [esp+0x18]
1003f4b9:	mov    bl,BYTE PTR [edi+0x3]
1003f4bc:	sub    eax,ebx
1003f4be:	sub    eax,DWORD PTR [esi+0x18]
1003f4c1:	mov    ebx,eax
1003f4c3:	sar    ebx,0x8
1003f4c6:	mov    BYTE PTR [edi+0x4],bl
1003f4c9:	mov    BYTE PTR [edi+0x5],al
1003f4cc:	mov    esi,DWORD PTR [esp+0x10]
1003f4d0:	mov    DWORD PTR [esp+0x74],0x0
1003f4d8:	test   DWORD PTR [esp+0x34],0x4000
1003f4e0:	je     0x1003f51c
1003f4e2:	mov    BYTE PTR [edx],0x53
1003f4e5:	mov    BYTE PTR [edx+0x1],0xff
1003f4e9:	mov    ecx,esi
1003f4eb:	mov    esi,DWORD PTR [esp+0x18]
1003f4ef:	lea    eax,[edx+0x1]
1003f4f2:	mov    DWORD PTR [esp+0x74],edx
1003f4f6:	mov    edx,ecx
1003f4f8:	sub    edx,DWORD PTR [esi+0x18]
1003f4fb:	add    eax,0x1
1003f4fe:	sar    edx,0x8
1003f501:	mov    BYTE PTR [eax],dl
1003f503:	sub    cl,BYTE PTR [esi+0x18]
1003f506:	mov    BYTE PTR [eax+0x2],0x0
1003f50a:	mov    BYTE PTR [eax+0x1],cl
1003f50d:	mov    ecx,DWORD PTR [esp+0x1c]
1003f511:	mov    BYTE PTR [eax+0x3],0x0
1003f515:	add    eax,0x4
1003f518:	mov    DWORD PTR [esp+0x14],eax
1003f51c:	mov    al,cl
1003f51e:	mov    dl,BYTE PTR [esp+0x34]
1003f522:	mov    ecx,DWORD PTR [esp+0x14]
1003f526:	and    dl,0x1
1003f529:	or     dl,0x1c
1003f52c:	mov    BYTE PTR [ecx],dl
1003f52e:	mov    DWORD PTR [esp+0x2c],ecx
1003f532:	add    ecx,0x1
1003f535:	mov    BYTE PTR [ecx],al
1003f537:	add    ecx,0x1
1003f53a:	cmp    al,0xd
1003f53c:	mov    DWORD PTR [esp+0x14],ecx
1003f540:	je     0x1003f54a
1003f542:	cmp    al,0xa
1003f544:	jne    0x10041af8
1003f54a:	mov    edx,DWORD PTR [esp+0x18]
1003f54e:	or     DWORD PTR [edx+0x44],0x20
1003f552:	jmp    0x10041afc
1003f557:	cmp    ecx,0x2a
1003f55a:	je     0x1003f5d1
1003f55c:	cmp    ecx,0x2b
1003f55f:	je     0x1003f5d1
1003f561:	cmp    ecx,0x3f
1003f564:	je     0x1003f5d1
1003f566:	cmp    ecx,0x7b
1003f569:	jne    0x1003f57b
1003f56b:	lea    eax,[esi+0x1]
1003f56e:	call   0x1003e1e0
1003f573:	test   eax,eax
1003f575:	mov    ecx,DWORD PTR [esp+0x1c]
1003f579:	jne    0x1003f5d1
1003f57b:	test   edi,edi
1003f57d:	mov    DWORD PTR [esp+0x28],0x0
1003f585:	je     0x1003f5d9
1003f587:	mov    eax,DWORD PTR [esp+0x94]
1003f58e:	mov    edx,eax
1003f590:	sub    eax,0x1
1003f593:	test   edx,edx
1003f595:	mov    DWORD PTR [esp+0x94],eax
1003f59c:	jg     0x1003f5d9
1003f59e:	cmp    DWORD PTR [esp+0x38],0x0
1003f5a3:	mov    ebx,DWORD PTR [esp+0x18]
1003f5a7:	jne    0x1003f5c7
1003f5a9:	xor    edx,edx
1003f5ab:	mov    dh,BYTE PTR [edi+0x2]
1003f5ae:	mov    eax,esi
1003f5b0:	mov    dl,BYTE PTR [edi+0x3]
1003f5b3:	sub    eax,edx
1003f5b5:	sub    eax,DWORD PTR [ebx+0x18]
1003f5b8:	mov    edx,eax
1003f5ba:	sar    edx,0x8
1003f5bd:	mov    BYTE PTR [edi+0x4],dl
1003f5c0:	mov    BYTE PTR [edi+0x5],al
1003f5c3:	mov    esi,DWORD PTR [esp+0x10]
1003f5c7:	mov    DWORD PTR [esp+0x74],0x0
1003f5cf:	jmp    0x1003f5dd
1003f5d1:	mov    DWORD PTR [esp+0x28],0x1
1003f5d9:	mov    ebx,DWORD PTR [esp+0x18]
1003f5dd:	test   BYTE PTR [esp+0x34],0x8
1003f5e2:	je     0x1003f662
1003f5e4:	mov    eax,DWORD PTR [ebx+0xc]
1003f5e7:	test   BYTE PTR [ecx+eax*1],0x1
1003f5eb:	jne    0x10041b47
1003f5f1:	cmp    ecx,0x23
1003f5f4:	mov    ebx,DWORD PTR [esp+0x18]
1003f5f8:	jne    0x1003f65e
1003f5fa:	add    esi,0x1
1003f5fd:	mov    DWORD PTR [esp+0x10],esi
1003f601:	mov    al,BYTE PTR [esi]
1003f603:	test   al,al
1003f605:	je     0x1003f652
1003f607:	jmp    0x1003f610
1003f609:	lea    esp,[esp+0x0]
1003f610:	mov    ecx,DWORD PTR [ebx+0x50]
1003f613:	test   ecx,ecx
1003f615:	je     0x1003f6c8
1003f61b:	mov    eax,DWORD PTR [ebx+0x1c]
1003f61e:	cmp    esi,eax
1003f620:	jae    0x1003f6ee
1003f626:	push   ecx
1003f627:	lea    edi,[ebx+0x54]
1003f62a:	xor    edx,edx
1003f62c:	mov    ecx,esi
1003f62e:	call   0x10042de0
1003f633:	add    esp,0x4
1003f636:	test   eax,eax
1003f638:	je     0x1003f6ee
1003f63e:	mov    ecx,DWORD PTR [ebx+0x54]
1003f641:	lea    esi,[esi+ecx*1-0x1]
1003f645:	mov    DWORD PTR [esp+0x10],esi
1003f649:	cmp    BYTE PTR [esi],0x0
1003f64c:	jne    0x10041b47
1003f652:	mov    DWORD PTR [esp+0x1c],0x0
1003f65a:	mov    ecx,DWORD PTR [esp+0x1c]
1003f65e:	mov    ebp,DWORD PTR [esp+0x2c]
1003f662:	test   DWORD PTR [esp+0x34],0x4000
1003f66a:	je     0x1003f6b1
1003f66c:	cmp    DWORD PTR [esp+0x28],0x0
1003f671:	jne    0x1003f6b1
1003f673:	mov    eax,DWORD PTR [esp+0x14]
1003f677:	mov    BYTE PTR [eax],0x53
1003f67a:	mov    BYTE PTR [eax+0x1],0xff
1003f67e:	mov    ecx,esi
1003f680:	mov    DWORD PTR [esp+0x74],eax
1003f684:	add    eax,0x1
1003f687:	mov    edx,ecx
1003f689:	sub    edx,DWORD PTR [ebx+0x18]
1003f68c:	add    eax,0x1
1003f68f:	sar    edx,0x8
1003f692:	mov    BYTE PTR [eax],dl
1003f694:	sub    cl,BYTE PTR [ebx+0x18]
1003f697:	mov    BYTE PTR [eax+0x2],0x0
1003f69b:	mov    BYTE PTR [eax+0x1],cl
1003f69e:	mov    ecx,DWORD PTR [esp+0x1c]
1003f6a2:	mov    BYTE PTR [eax+0x3],0x0
1003f6a6:	mov    esi,DWORD PTR [esp+0x10]
1003f6aa:	add    eax,0x4
1003f6ad:	mov    DWORD PTR [esp+0x14],eax
1003f6b1:	cmp    ecx,0x7c
1003f6b4:	ja     0x1003f51c
1003f6ba:	movzx  eax,BYTE PTR [ecx+0x10041e40]
1003f6c1:	jmp    DWORD PTR [eax*4+0x10041e0c]
1003f6c8:	mov    ecx,DWORD PTR [ebx+0x54]
1003f6cb:	mov    edx,DWORD PTR [ebx+0x1c]
1003f6ce:	sub    edx,ecx
1003f6d0:	cmp    esi,edx
1003f6d2:	ja     0x1003f6ee
1003f6d4:	cmp    al,BYTE PTR [ebx+0x58]
1003f6d7:	jne    0x1003f6ee
1003f6d9:	cmp    ecx,0x1
1003f6dc:	je     0x1003f63e
1003f6e2:	mov    al,BYTE PTR [esi+0x1]
1003f6e5:	cmp    al,BYTE PTR [ebx+0x59]
1003f6e8:	je     0x1003f63e
1003f6ee:	add    esi,0x1
1003f6f1:	mov    DWORD PTR [esp+0x10],esi
1003f6f5:	mov    al,BYTE PTR [esi]
1003f6f7:	test   al,al
1003f6f9:	jne    0x1003f610
1003f6ff:	jmp    0x1003f652
1003f704:	test   BYTE PTR [esp+0x34],0x2
1003f709:	je     0x1003f71a
1003f70b:	cmp    DWORD PTR [esp+0x30],0xfffffffe
1003f710:	jne    0x1003f71a
1003f712:	mov    DWORD PTR [esp+0x30],0xffffffff
1003f71a:	mov    eax,DWORD PTR [esp+0x14]
1003f71e:	mov    BYTE PTR [eax],0x1a
1003f721:	add    eax,0x1
1003f724:	mov    DWORD PTR [esp+0x2c],0x0
1003f72c:	mov    DWORD PTR [esp+0x14],eax
1003f730:	jmp    0x10041b43
1003f735:	mov    eax,DWORD PTR [esp+0x14]
1003f739:	mov    BYTE PTR [eax],0x1b
1003f73c:	add    eax,0x1
1003f73f:	mov    DWORD PTR [esp+0x2c],0x0
1003f747:	mov    DWORD PTR [esp+0x14],eax
1003f74b:	jmp    0x10041b43
1003f750:	mov    eax,DWORD PTR [esp+0x30]
1003f754:	cmp    eax,0xfffffffe
1003f757:	jne    0x1003f760
1003f759:	or     eax,0xffffffff
1003f75c:	mov    DWORD PTR [esp+0x30],eax
1003f760:	mov    edx,DWORD PTR [esp+0x34]
1003f764:	mov    ecx,DWORD PTR [esp+0x4c]
1003f768:	shr    edx,0x2
1003f76b:	and    dl,0x1
1003f76e:	mov    DWORD PTR [esp+0x5c],eax
1003f772:	mov    eax,DWORD PTR [esp+0x14]
1003f776:	or     dl,0xc
1003f779:	mov    DWORD PTR [esp+0x2c],eax
1003f77d:	mov    BYTE PTR [eax],dl
1003f77f:	add    eax,0x1
1003f782:	mov    DWORD PTR [esp+0x68],ecx
1003f786:	mov    DWORD PTR [esp+0x14],eax
1003f78a:	jmp    0x10041b43
1003f78f:	mov    eax,DWORD PTR [esp+0x18]
1003f793:	test   DWORD PTR [eax+0x40],0x2000000
1003f79a:	je     0x1003f51c
1003f7a0:	mov    ecx,DWORD PTR [esp+0x20]
1003f7a4:	mov    DWORD PTR [ecx],0x40
1003f7aa:	jmp    0x10040abd
1003f7af:	mov    al,BYTE PTR [esi+0x1]
1003f7b2:	cmp    al,0x3a
1003f7b4:	mov    ebx,DWORD PTR [esp+0x14]
1003f7b8:	mov    DWORD PTR [esp+0x2c],ebx
1003f7bc:	je     0x1003f7c6
1003f7be:	cmp    al,0x2e
1003f7c0:	je     0x1003f7c6
1003f7c2:	cmp    al,0x3d
1003f7c4:	jne    0x1003f7dd
1003f7c6:	lea    ecx,[esp+0x7c]
1003f7ca:	push   ecx
1003f7cb:	mov    eax,esi
1003f7cd:	call   0x1003eb10
1003f7d2:	add    esp,0x4
1003f7d5:	test   eax,eax
1003f7d7:	jne    0x10041bf6
1003f7dd:	mov    DWORD PTR [esp+0x1c],0x0
1003f7e5:	mov    ebp,0x1
1003f7ea:	lea    ebx,[ebx+0x0]
1003f7f0:	add    esi,ebp
1003f7f2:	mov    DWORD PTR [esp+0x10],esi
1003f7f6:	movzx  edi,BYTE PTR [esi]
1003f7f9:	cmp    edi,0x5c
1003f7fc:	jne    0x1003f822
1003f7fe:	add    esi,ebp
1003f800:	cmp    BYTE PTR [esi],0x45
1003f803:	je     0x1003f7f0
1003f805:	push   0x3
1003f807:	push   0x1007422c
1003f80c:	push   esi
1003f80d:	call   0x1004f3a6
1003f812:	mov    esi,DWORD PTR [esp+0x1c]
1003f816:	add    esp,0xc
1003f819:	test   eax,eax
1003f81b:	jne    0x1003f870
1003f81d:	add    esi,0x3
1003f820:	jmp    0x1003f7f0
1003f822:	mov    eax,DWORD PTR [esp+0x1c]
1003f826:	test   eax,eax
1003f828:	jne    0x1003f835
1003f82a:	cmp    edi,0x5e
1003f82d:	jne    0x1003f835
1003f82f:	mov    DWORD PTR [esp+0x1c],ebp
1003f833:	jmp    0x1003f7f0
1003f835:	cmp    edi,0x5d
1003f838:	jne    0x1003f870
1003f83a:	mov    edx,DWORD PTR [esp+0x18]
1003f83e:	test   DWORD PTR [edx+0x40],0x2000000
1003f845:	je     0x1003f870
1003f847:	neg    eax
1003f849:	sbb    al,al
1003f84b:	and    al,0xa0
1003f84d:	add    al,0x6d
1003f84f:	mov    BYTE PTR [ebx],al
1003f851:	mov    eax,DWORD PTR [esp+0x30]
1003f855:	add    ebx,ebp
1003f857:	cmp    eax,0xfffffffe
1003f85a:	mov    DWORD PTR [esp+0x14],ebx
1003f85e:	jne    0x1003f867
1003f860:	or     eax,0xffffffff
1003f863:	mov    DWORD PTR [esp+0x30],eax
1003f867:	mov    DWORD PTR [esp+0x5c],eax
1003f86b:	jmp    0x10041b43
1003f870:	xor    eax,eax
1003f872:	cmp    edi,eax
1003f874:	mov    DWORD PTR [esp+0x3c],eax
1003f878:	mov    DWORD PTR [esp+0x24],eax
1003f87c:	mov    DWORD PTR [esp+0x28],0xffffffff
1003f884:	mov    DWORD PTR [esp+0xbc],eax
1003f88b:	mov    DWORD PTR [esp+0xc0],eax
1003f892:	mov    DWORD PTR [esp+0xc4],eax
1003f899:	mov    DWORD PTR [esp+0xc8],eax
1003f8a0:	mov    DWORD PTR [esp+0xcc],eax
1003f8a7:	mov    DWORD PTR [esp+0xd0],eax
1003f8ae:	mov    DWORD PTR [esp+0xd4],eax
1003f8b5:	mov    DWORD PTR [esp+0xd8],eax
1003f8bc:	je     0x10041c49
1003f8c2:	cmp    DWORD PTR [esp+0x50],0x0
1003f8c7:	je     0x1003f8ec
1003f8c9:	cmp    edi,0x5c
1003f8cc:	jne    0x1003fdb8
1003f8d2:	cmp    BYTE PTR [esi+0x1],0x45
1003f8d6:	jne    0x1003fdb8
1003f8dc:	mov    DWORD PTR [esp+0x50],0x0
1003f8e4:	add    esi,0x1
1003f8e7:	jmp    0x1003fb49
1003f8ec:	cmp    edi,0x5b
1003f8ef:	jne    0x1003fa6a
1003f8f5:	mov    bl,BYTE PTR [esi+0x1]
1003f8f8:	cmp    bl,0x3a
1003f8fb:	je     0x1003f90b
1003f8fd:	cmp    bl,0x2e
1003f900:	je     0x1003f90b
1003f902:	cmp    bl,0x3d
1003f905:	jne    0x1003fdb8
1003f90b:	lea    eax,[esp+0x7c]
1003f90f:	push   eax
1003f910:	mov    eax,esi
1003f912:	call   0x1003eb10
1003f917:	add    esp,0x4
1003f91a:	test   eax,eax
1003f91c:	je     0x1003fdb8
1003f922:	cmp    bl,0x3a
1003f925:	mov    ecx,DWORD PTR [esp+0x18]
1003f929:	mov    ebp,DWORD PTR [ecx+0x8]
1003f92c:	mov    DWORD PTR [esp+0x58],0x0
1003f934:	jne    0x10041c11
1003f93a:	add    esi,0x2
1003f93d:	mov    DWORD PTR [esp+0x10],esi
1003f941:	cmp    BYTE PTR [esi],0x5e
1003f944:	jne    0x1003f959
1003f946:	mov    eax,0x1
1003f94b:	add    esi,eax
1003f94d:	mov    DWORD PTR [esp+0x58],eax
1003f951:	mov    DWORD PTR [esp+0x3c],eax
1003f955:	mov    DWORD PTR [esp+0x10],esi
1003f959:	mov    ebx,DWORD PTR [esp+0x7c]
1003f95d:	sub    ebx,esi
1003f95f:	push   esi
1003f960:	call   0x1003eb60
1003f965:	add    esp,0x4
1003f968:	test   eax,eax
1003f96a:	jl     0x10041c20
1003f970:	test   BYTE PTR [esp+0x34],0x1
1003f975:	je     0x1003f97e
1003f977:	cmp    eax,0x2
1003f97a:	jg     0x1003f97e
1003f97c:	xor    eax,eax
1003f97e:	lea    eax,[eax+eax*2]
1003f981:	mov    esi,DWORD PTR [eax*4+0x1006ea90]
1003f988:	add    esi,ebp
1003f98a:	mov    ecx,0x8
1003f98f:	lea    edi,[esp+0xdc]
1003f996:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1003f998:	mov    ecx,DWORD PTR [eax*4+0x1006ea94]
1003f99f:	test   ecx,ecx
1003f9a1:	mov    esi,DWORD PTR [eax*4+0x1006ea98]
1003f9a8:	jl     0x1003f9e4
1003f9aa:	xor    eax,eax
1003f9ac:	add    ecx,ebp
1003f9ae:	test   esi,esi
1003f9b0:	jl     0x1003f9d0
1003f9b2:	mov    dl,BYTE PTR [ecx+eax*1]
1003f9b5:	or     BYTE PTR [esp+eax*1+0xdc],dl
1003f9bc:	add    eax,0x1
1003f9bf:	cmp    eax,0x20
1003f9c2:	jl     0x1003f9b2
1003f9c4:	jmp    0x1003f9e4
1003f9c6:	jmp    0x1003f9d0
1003f9c8:	lea    esp,[esp+0x0]
1003f9cf:	nop
1003f9d0:	mov    dl,BYTE PTR [ecx+eax*1]
1003f9d3:	not    dl
1003f9d5:	and    BYTE PTR [esp+eax*1+0xdc],dl
1003f9dc:	add    eax,0x1
1003f9df:	cmp    eax,0x20
1003f9e2:	jl     0x1003f9d0
1003f9e4:	test   esi,esi
1003f9e6:	jge    0x1003f9ea
1003f9e8:	neg    esi
1003f9ea:	cmp    esi,0x1
1003f9ed:	jne    0x1003f9f9
1003f9ef:	and    BYTE PTR [esp+0xdd],0xc3
1003f9f7:	jmp    0x1003fa06
1003f9f9:	cmp    esi,0x2
1003f9fc:	jne    0x1003fa06
1003f9fe:	and    BYTE PTR [esp+0xe7],0x7f
1003fa06:	xor    eax,eax
1003fa08:	cmp    DWORD PTR [esp+0x58],eax
1003fa0c:	je     0x1003fa40
1003fa0e:	mov    edi,edi
1003fa10:	mov    cl,BYTE PTR [esp+eax*1+0xdc]
1003fa17:	not    cl
1003fa19:	or     BYTE PTR [esp+eax*1+0xbc],cl
1003fa20:	add    eax,0x1
1003fa23:	cmp    eax,0x20
1003fa26:	jl     0x1003fa10
1003fa28:	mov    esi,DWORD PTR [esp+0x7c]
1003fa2c:	add    esi,0x1
1003fa2f:	mov    DWORD PTR [esp+0x24],0xa
1003fa37:	jmp    0x1003fb49
1003fa3c:	lea    esp,[esp+0x0]
1003fa40:	mov    dl,BYTE PTR [esp+eax*1+0xdc]
1003fa47:	or     BYTE PTR [esp+eax*1+0xbc],dl
1003fa4e:	add    eax,0x1
1003fa51:	cmp    eax,0x20
1003fa54:	jl     0x1003fa40
1003fa56:	mov    esi,DWORD PTR [esp+0x7c]
1003fa5a:	add    esi,0x1
1003fa5d:	mov    DWORD PTR [esp+0x24],0xa
1003fa65:	jmp    0x1003fb49
1003fa6a:	cmp    edi,0x5c
1003fa6d:	jne    0x1003fdb8
1003fa73:	mov    ebp,DWORD PTR [esp+0x18]
1003fa77:	mov    eax,DWORD PTR [ebp+0x30]
1003fa7a:	mov    esi,DWORD PTR [esp+0x20]
1003fa7e:	mov    ebx,DWORD PTR [esp+0x34]
1003fa82:	push   0x1
1003fa84:	push   eax
1003fa85:	lea    ecx,[esp+0x18]
1003fa89:	push   esi
1003fa8a:	push   ecx
1003fa8b:	mov    eax,ebx
1003fa8d:	call   0x1003ddb0
1003fa92:	add    esp,0x10
1003fa95:	cmp    DWORD PTR [esi],0x0
1003fa98:	mov    edi,eax
1003fa9a:	jne    0x10040ab9
1003faa0:	mov    ecx,edi
1003faa2:	neg    ecx
1003faa4:	cmp    ecx,0x5
1003faa7:	jne    0x1003fab7
1003faa9:	mov    edi,0x8
1003faae:	mov    esi,DWORD PTR [esp+0x10]
1003fab2:	jmp    0x1003fdbc
1003fab7:	cmp    ecx,0x16
1003faba:	jne    0x1003faca
1003fabc:	mov    esi,DWORD PTR [esp+0x10]
1003fac0:	mov    edi,0x58
1003fac5:	jmp    0x1003fdbc
1003faca:	cmp    ecx,0x11
1003facd:	jne    0x1003fadd
1003facf:	mov    esi,DWORD PTR [esp+0x10]
1003fad3:	mov    edi,0x52
1003fad8:	jmp    0x1003fdbc
1003fadd:	cmp    ecx,0x1a
1003fae0:	jne    0x1003fb01
1003fae2:	mov    esi,DWORD PTR [esp+0x10]
1003fae6:	cmp    BYTE PTR [esi+0x1],0x5c
1003faea:	jne    0x1003faf7
1003faec:	cmp    BYTE PTR [esi+0x2],0x45
1003faf0:	jne    0x1003faf7
1003faf2:	add    esi,0x2
1003faf5:	jmp    0x1003fb49
1003faf7:	mov    DWORD PTR [esp+0x50],0x1
1003faff:	jmp    0x1003fb49
1003fb01:	cmp    ecx,0x19
1003fb04:	je     0x1003fb45
1003fb06:	test   edi,edi
1003fb08:	jge    0x1003faae
1003fb0a:	add    DWORD PTR [esp+0x24],0x2
1003fb0f:	cmp    DWORD PTR [esp+0x38],0x0
1003fb14:	mov    eax,DWORD PTR [ebp+0x8]
1003fb17:	jne    0x1003fcb3
1003fb1d:	lea    edx,[ecx-0x6]
1003fb20:	cmp    edx,0x5
1003fb23:	ja     0x1003fce9
1003fb29:	jmp    DWORD PTR [edx*4+0x10041ec0]
1003fb30:	xor    ecx,ecx
1003fb32:	mov    dl,BYTE PTR [eax+ecx*1+0x40]
1003fb36:	or     BYTE PTR [esp+ecx*1+0xbc],dl
1003fb3d:	add    ecx,0x1
1003fb40:	cmp    ecx,0x20
1003fb43:	jl     0x1003fb32
1003fb45:	mov    esi,DWORD PTR [esp+0x10]
1003fb49:	add    esi,0x1
1003fb4c:	mov    DWORD PTR [esp+0x10],esi
1003fb50:	movzx  edi,BYTE PTR [esi]
1003fb53:	test   edi,edi
1003fb55:	je     0x10041c49
1003fb5b:	cmp    edi,0x5d
1003fb5e:	jne    0x1003f8c2
1003fb64:	cmp    DWORD PTR [esp+0x50],0x0
1003fb69:	jne    0x1003f8c9
1003fb6f:	cmp    DWORD PTR [esp+0x24],0x1
1003fb74:	jne    0x1003fff4
1003fb7a:	cmp    DWORD PTR [esp+0x1c],0x0
1003fb7f:	mov    eax,DWORD PTR [esp+0x4c]
1003fb83:	mov    DWORD PTR [esp+0x68],eax
1003fb87:	je     0x1003ffeb
1003fb8d:	mov    eax,DWORD PTR [esp+0x30]
1003fb91:	cmp    eax,0xfffffffe
1003fb94:	jne    0x1003fb9d
1003fb96:	or     eax,0xffffffff
1003fb99:	mov    DWORD PTR [esp+0x30],eax
1003fb9d:	mov    cl,BYTE PTR [esp+0x28]
1003fba1:	mov    DWORD PTR [esp+0x5c],eax
1003fba5:	mov    eax,DWORD PTR [esp+0x14]
1003fba9:	mov    BYTE PTR [eax],0x1e
1003fbac:	add    eax,0x1
1003fbaf:	mov    BYTE PTR [eax],cl
1003fbb1:	add    eax,0x1
1003fbb4:	mov    DWORD PTR [esp+0x14],eax
1003fbb8:	jmp    0x10041b43
1003fbbd:	mov    DWORD PTR [esp+0x3c],0x1
1003fbc5:	xor    ecx,ecx
1003fbc7:	jmp    0x1003fbd0
1003fbc9:	lea    esp,[esp+0x0]
1003fbd0:	mov    dl,BYTE PTR [eax+ecx*1+0x40]
1003fbd4:	not    dl
1003fbd6:	or     BYTE PTR [esp+ecx*1+0xbc],dl
1003fbdd:	add    ecx,0x1
1003fbe0:	cmp    ecx,0x20
1003fbe3:	jl     0x1003fbd0
1003fbe5:	jmp    0x1003fb45
1003fbea:	xor    ecx,ecx
1003fbec:	lea    esp,[esp+0x0]
1003fbf0:	mov    dl,BYTE PTR [eax+ecx*1+0xa0]
1003fbf7:	or     BYTE PTR [esp+ecx*1+0xbc],dl
1003fbfe:	add    ecx,0x1
1003fc01:	cmp    ecx,0x20
1003fc04:	jl     0x1003fbf0
1003fc06:	jmp    0x1003fb45
1003fc0b:	mov    DWORD PTR [esp+0x3c],0x1
1003fc13:	xor    ecx,ecx
1003fc15:	jmp    0x1003fc20
1003fc17:	lea    esp,[esp+0x0]
1003fc1e:	mov    edi,edi
1003fc20:	mov    dl,BYTE PTR [eax+ecx*1+0xa0]
1003fc27:	not    dl
1003fc29:	or     BYTE PTR [esp+ecx*1+0xbc],dl
1003fc30:	add    ecx,0x1
1003fc33:	cmp    ecx,0x20
1003fc36:	jl     0x1003fc20
1003fc38:	jmp    0x1003fb45
1003fc3d:	mov    esi,eax
1003fc3f:	lea    eax,[esp+0xbc]
1003fc46:	xor    edx,edx
1003fc48:	sub    esi,eax
1003fc4a:	lea    ebx,[ebx+0x0]
1003fc50:	lea    ecx,[esp+edx*1+0xbc]
1003fc57:	mov    al,BYTE PTR [esi+ecx*1]
1003fc5a:	or     BYTE PTR [ecx],al
1003fc5c:	add    edx,0x1
1003fc5f:	cmp    edx,0x20
1003fc62:	jl     0x1003fc50
1003fc64:	and    BYTE PTR [esp+0xbd],0xf7
1003fc6c:	jmp    0x1003fb45
1003fc71:	mov    esi,eax
1003fc73:	lea    ecx,[esp+0xbc]
1003fc7a:	xor    edx,edx
1003fc7c:	mov    DWORD PTR [esp+0x3c],0x1
1003fc84:	sub    esi,ecx
1003fc86:	jmp    0x1003fc90
1003fc88:	lea    esp,[esp+0x0]
1003fc8f:	nop
1003fc90:	lea    ecx,[esp+edx*1+0xbc]
1003fc97:	mov    al,BYTE PTR [esi+ecx*1]
1003fc9a:	not    al
1003fc9c:	or     BYTE PTR [ecx],al
1003fc9e:	add    edx,0x1
1003fca1:	cmp    edx,0x20
1003fca4:	jl     0x1003fc90
1003fca6:	or     BYTE PTR [esp+0xbd],0x8
1003fcae:	jmp    0x1003fb45
1003fcb3:	cmp    edi,0xfffffff9
1003fcb6:	je     0x1003fb45
1003fcbc:	cmp    edi,0xfffffffa
1003fcbf:	je     0x1003fb45
1003fcc5:	cmp    edi,0xfffffff5
1003fcc8:	je     0x1003fb45
1003fcce:	cmp    edi,0xfffffff6
1003fcd1:	je     0x1003fb45
1003fcd7:	cmp    edi,0xfffffff7
1003fcda:	je     0x1003fb45
1003fce0:	cmp    edi,0xfffffff8
1003fce3:	je     0x1003fb45
1003fce9:	cmp    ecx,0x13
1003fcec:	jne    0x1003fd0b
1003fcee:	or     BYTE PTR [esp+0xbd],0x2
1003fcf6:	or     BYTE PTR [esp+0xc0],0x1
1003fcfe:	or     BYTE PTR [esp+0xd0],0x1
1003fd06:	jmp    0x1003fb45
1003fd0b:	cmp    ecx,0x12
1003fd0e:	jne    0x1003fd48
1003fd10:	xor    eax,eax
1003fd12:	mov    ecx,eax
1003fd14:	sub    ecx,0x1
1003fd17:	mov    edx,0xff
1003fd1c:	je     0x1003fd2f
1003fd1e:	sub    ecx,0x3
1003fd21:	je     0x1003fd28
1003fd23:	sub    ecx,0x10
1003fd26:	jne    0x1003fd34
1003fd28:	mov    edx,0xfe
1003fd2d:	jmp    0x1003fd34
1003fd2f:	mov    edx,0xfd
1003fd34:	or     BYTE PTR [esp+eax*1+0xbc],dl
1003fd3b:	add    eax,0x1
1003fd3e:	cmp    eax,0x20
1003fd41:	jl     0x1003fd12
1003fd43:	jmp    0x1003fb45
1003fd48:	cmp    ecx,0x15
1003fd4b:	jne    0x1003fd62
1003fd4d:	or     BYTE PTR [esp+0xbd],0x3c
1003fd55:	or     BYTE PTR [esp+0xcc],0x20
1003fd5d:	jmp    0x1003fb45
1003fd62:	cmp    ecx,0x14
1003fd65:	jne    0x1003fda1
1003fd67:	xor    eax,eax
1003fd69:	lea    esp,[esp+0x0]
1003fd70:	mov    ecx,eax
1003fd72:	sub    ecx,0x1
1003fd75:	mov    edx,0xff
1003fd7a:	je     0x1003fd88
1003fd7c:	sub    ecx,0xf
1003fd7f:	jne    0x1003fd8d
1003fd81:	mov    edx,0xdf
1003fd86:	jmp    0x1003fd8d
1003fd88:	mov    edx,0xc3
1003fd8d:	or     BYTE PTR [esp+eax*1+0xbc],dl
1003fd94:	add    eax,0x1
1003fd97:	cmp    eax,0x20
1003fd9a:	jl     0x1003fd70
1003fd9c:	jmp    0x1003fb45
1003fda1:	test   bl,0x40
1003fda4:	jne    0x10041c2f
1003fdaa:	mov    esi,DWORD PTR [esp+0x10]
1003fdae:	sub    DWORD PTR [esp+0x24],0x2
1003fdb3:	movzx  edi,BYTE PTR [esi]
1003fdb6:	jmp    0x1003fdbc
1003fdb8:	mov    ebp,DWORD PTR [esp+0x18]
1003fdbc:	cmp    BYTE PTR [esi+0x1],0x5c
1003fdc0:	mov    eax,DWORD PTR [esp+0x50]
1003fdc4:	jne    0x1003fddf
1003fdc6:	cmp    BYTE PTR [esi+0x2],0x45
1003fdca:	jne    0x1003fddb
1003fdcc:	add    esi,0x2
1003fdcf:	xor    eax,eax
1003fdd1:	mov    DWORD PTR [esp+0x10],esi
1003fdd5:	cmp    BYTE PTR [esi+0x1],0x5c
1003fdd9:	je     0x1003fdc6
1003fddb:	mov    DWORD PTR [esp+0x50],eax
1003fddf:	cmp    edi,0xd
1003fde2:	mov    DWORD PTR [esp+0x58],esi
1003fde6:	je     0x1003fded
1003fde8:	cmp    edi,0xa
1003fdeb:	jne    0x1003fdf1
1003fded:	or     DWORD PTR [ebp+0x44],0x20
1003fdf1:	test   eax,eax
1003fdf3:	jne    0x1003ff91
1003fdf9:	cmp    BYTE PTR [esi+0x1],0x2d
1003fdfd:	jne    0x1003ff91
1003fe03:	add    esi,0x2
1003fe06:	mov    DWORD PTR [esp+0x10],esi
1003fe0a:	cmp    BYTE PTR [esi],0x5c
1003fe0d:	jne    0x1003fe5e
1003fe0f:	nop
1003fe10:	cmp    BYTE PTR [esi+0x1],0x45
1003fe14:	jne    0x1003fe24
1003fe16:	add    esi,0x2
1003fe19:	mov    DWORD PTR [esp+0x10],esi
1003fe1d:	cmp    BYTE PTR [esi],0x5c
1003fe20:	je     0x1003fe10
1003fe22:	jmp    0x1003fe5e
1003fe24:	cmp    BYTE PTR [esi],0x5c
1003fe27:	jne    0x1003fe5e
1003fe29:	lea    esp,[esp+0x0]
1003fe30:	cmp    BYTE PTR [esi+0x1],0x51
1003fe34:	jne    0x1003fe5e
1003fe36:	add    esi,0x2
1003fe39:	mov    DWORD PTR [esp+0x10],esi
1003fe3d:	cmp    BYTE PTR [esi],0x5c
1003fe40:	jne    0x1003fe56
1003fe42:	cmp    BYTE PTR [esi+0x1],0x45
1003fe46:	jne    0x1003fe56
1003fe48:	add    esi,0x2
1003fe4b:	mov    DWORD PTR [esp+0x10],esi
1003fe4f:	cmp    BYTE PTR [esi],0x5c
1003fe52:	je     0x1003fe30
1003fe54:	jmp    0x1003fe5e
1003fe56:	mov    DWORD PTR [esp+0x50],0x1
1003fe5e:	mov    al,BYTE PTR [esi]
1003fe60:	test   al,al
1003fe62:	je     0x1003ff89
1003fe68:	cmp    DWORD PTR [esp+0x50],0x0
1003fe6d:	jne    0x1003fe77
1003fe6f:	cmp    al,0x5d
1003fe71:	je     0x1003ff89
1003fe77:	cmp    DWORD PTR [esp+0x50],0x0
1003fe7c:	movzx  ebx,al
1003fe7f:	jne    0x1003fedf
1003fe81:	cmp    ebx,0x5c
1003fe84:	jne    0x1003fedf
1003fe86:	mov    ecx,DWORD PTR [esp+0x18]
1003fe8a:	mov    edx,DWORD PTR [ecx+0x30]
1003fe8d:	mov    esi,DWORD PTR [esp+0x20]
1003fe91:	push   0x1
1003fe93:	push   edx
1003fe94:	lea    eax,[esp+0x18]
1003fe98:	push   esi
1003fe99:	push   eax
1003fe9a:	mov    eax,DWORD PTR [esp+0x44]
1003fe9e:	call   0x1003ddb0
1003fea3:	add    esp,0x10
1003fea6:	cmp    DWORD PTR [esi],0x0
1003fea9:	mov    ebx,eax
1003feab:	jne    0x10040ab9
1003feb1:	test   ebx,ebx
1003feb3:	jge    0x1003fedb
1003feb5:	cmp    ebx,0xfffffffb
1003feb8:	jne    0x1003fec1
1003feba:	mov    ebx,0x8
1003febf:	jmp    0x1003fedb
1003fec1:	cmp    ebx,0xffffffea
1003fec4:	jne    0x1003fecd
1003fec6:	mov    ebx,0x58
1003fecb:	jmp    0x1003fedb
1003fecd:	cmp    ebx,0xffffffef
1003fed0:	jne    0x1003ff89
1003fed6:	mov    ebx,0x52
1003fedb:	mov    esi,DWORD PTR [esp+0x10]
1003fedf:	cmp    ebx,edi
1003fee1:	jl     0x10041c3a
1003fee7:	je     0x1003ff91
1003feed:	cmp    ebx,0xd
1003fef0:	je     0x1003fef7
1003fef2:	cmp    ebx,0xa
1003fef5:	jne    0x1003feff
1003fef7:	mov    eax,DWORD PTR [esp+0x18]
1003fefb:	or     DWORD PTR [eax+0x44],0x20
1003feff:	mov    edx,DWORD PTR [esp+0x24]
1003ff03:	mov    ecx,ebx
1003ff05:	sub    ecx,edi
1003ff07:	cmp    DWORD PTR [esp+0x38],0x0
1003ff0c:	lea    eax,[edx+ecx*1+0x1]
1003ff10:	mov    DWORD PTR [esp+0x24],eax
1003ff14:	mov    DWORD PTR [esp+0x28],ebx
1003ff18:	jne    0x1003fb49
1003ff1e:	cmp    edi,ebx
1003ff20:	jg     0x1003fb49
1003ff26:	mov    eax,DWORD PTR [esp+0x34]
1003ff2a:	and    eax,0x1
1003ff2d:	mov    DWORD PTR [esp+0x60],eax
1003ff31:	mov    eax,edi
1003ff33:	cdq    
1003ff34:	and    edx,0x7
1003ff37:	add    eax,edx
1003ff39:	mov    ecx,edi
1003ff3b:	and    ecx,0x7
1003ff3e:	mov    dl,0x1
1003ff40:	shl    dl,cl
1003ff42:	sar    eax,0x3
1003ff45:	lea    ebp,[esp+eax*1+0xbc]
1003ff4c:	or     BYTE PTR [ebp+0x0],dl
1003ff4f:	cmp    DWORD PTR [esp+0x60],0x0
1003ff54:	je     0x1003ff7d
1003ff56:	mov    eax,DWORD PTR [esp+0x18]
1003ff5a:	mov    ecx,DWORD PTR [eax+0x4]
1003ff5d:	movzx  ecx,BYTE PTR [ecx+edi*1]
1003ff61:	mov    eax,ecx
1003ff63:	cdq    
1003ff64:	and    edx,0x7
1003ff67:	add    eax,edx
1003ff69:	and    ecx,0x7
1003ff6c:	mov    dl,0x1
1003ff6e:	sar    eax,0x3
1003ff71:	shl    dl,cl
1003ff73:	lea    ebp,[esp+eax*1+0xbc]
1003ff7a:	or     BYTE PTR [ebp+0x0],dl
1003ff7d:	add    edi,0x1
1003ff80:	cmp    edi,ebx
1003ff82:	jle    0x1003ff31
1003ff84:	jmp    0x1003fb49
1003ff89:	mov    esi,DWORD PTR [esp+0x58]
1003ff8d:	mov    DWORD PTR [esp+0x10],esi
1003ff91:	mov    eax,edi
1003ff93:	cdq    
1003ff94:	and    edx,0x7
1003ff97:	add    eax,edx
1003ff99:	mov    ecx,edi
1003ff9b:	and    ecx,0x7
1003ff9e:	mov    dl,0x1
1003ffa0:	shl    dl,cl
1003ffa2:	sar    eax,0x3
1003ffa5:	lea    eax,[esp+eax*1+0xbc]
1003ffac:	or     BYTE PTR [eax],dl
1003ffae:	test   BYTE PTR [esp+0x34],0x1
1003ffb3:	je     0x1003ffdd
1003ffb5:	mov    eax,DWORD PTR [esp+0x18]
1003ffb9:	mov    ecx,DWORD PTR [eax+0x4]
1003ffbc:	movzx  edi,BYTE PTR [ecx+edi*1]
1003ffc0:	mov    eax,edi
1003ffc2:	cdq    
1003ffc3:	and    edx,0x7
1003ffc6:	add    eax,edx
1003ffc8:	mov    ecx,edi
1003ffca:	and    ecx,0x7
1003ffcd:	mov    dl,0x1
1003ffcf:	sar    eax,0x3
1003ffd2:	shl    dl,cl
1003ffd4:	lea    eax,[esp+eax*1+0xbc]
1003ffdb:	or     BYTE PTR [eax],dl
1003ffdd:	add    DWORD PTR [esp+0x24],0x1
1003ffe2:	mov    DWORD PTR [esp+0x28],edi
1003ffe6:	jmp    0x1003fb49
1003ffeb:	mov    al,BYTE PTR [esp+0x28]
1003ffef:	jmp    0x1003f51e
1003fff4:	mov    eax,DWORD PTR [esp+0x30]
1003fff8:	cmp    eax,0xfffffffe
1003fffb:	jne    0x10040004
1003fffd:	or     eax,0xffffffff
10040000:	mov    DWORD PTR [esp+0x30],eax
10040004:	mov    ebp,DWORD PTR [esp+0x14]
10040008:	mov    edx,DWORD PTR [esp+0x4c]
1004000c:	mov    DWORD PTR [esp+0x5c],eax
10040010:	mov    eax,DWORD PTR [esp+0x1c]
10040014:	cmp    eax,DWORD PTR [esp+0x3c]
10040018:	mov    DWORD PTR [esp+0x68],edx
1004001c:	setne  cl
1004001f:	add    cl,0x4e
10040022:	mov    BYTE PTR [ebp+0x0],cl
10040025:	add    ebp,0x1
10040028:	test   eax,eax
1004002a:	je     0x1004005e
1004002c:	cmp    DWORD PTR [esp+0x38],0x0
10040031:	jne    0x1004006e
10040033:	lea    ecx,[esp+0xbc]
1004003a:	mov    eax,ebp
1004003c:	sub    ecx,ebp
1004003e:	mov    esi,0x20
10040043:	mov    dl,BYTE PTR [ecx+eax*1]
10040046:	not    dl
10040048:	mov    BYTE PTR [eax],dl
1004004a:	add    eax,0x1
1004004d:	sub    esi,0x1
10040050:	jne    0x10040043
10040052:	add    ebp,0x20
10040055:	mov    DWORD PTR [esp+0x14],ebp
10040059:	jmp    0x10041b43
1004005e:	mov    ecx,0x8
10040063:	lea    esi,[esp+0xbc]
1004006a:	mov    edi,ebp
1004006c:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1004006e:	add    ebp,0x20
10040071:	mov    DWORD PTR [esp+0x14],ebp
10040075:	jmp    0x10041b43
1004007a:	cmp    DWORD PTR [esp+0x28],0x0
1004007f:	je     0x1003f51c
10040085:	mov    edi,DWORD PTR [esp+0x20]
10040089:	lea    eax,[esp+0x40]
1004008d:	push   eax
1004008e:	lea    ecx,[esp+0x4c]
10040092:	push   ecx
10040093:	lea    eax,[esi+0x1]
10040096:	call   0x1003e270
1004009b:	add    esp,0x8
1004009e:	cmp    DWORD PTR [edi],0x0
100400a1:	mov    esi,eax
100400a3:	mov    DWORD PTR [esp+0x10],esi
100400a7:	jne    0x10040abd
100400ad:	mov    eax,DWORD PTR [esp+0x48]
100400b1:	jmp    0x100400da
100400b3:	mov    DWORD PTR [esp+0x40],0xffffffff
100400bb:	jmp    0x100400d4
100400bd:	mov    eax,0x1
100400c2:	mov    DWORD PTR [esp+0x40],0xffffffff
100400ca:	jmp    0x100400d6
100400cc:	mov    DWORD PTR [esp+0x40],0x1
100400d4:	xor    eax,eax
100400d6:	mov    DWORD PTR [esp+0x48],eax
100400da:	xor    edx,edx
100400dc:	cmp    ebp,edx
100400de:	je     0x10041c58
100400e4:	cmp    eax,edx
100400e6:	jne    0x100400f8
100400e8:	mov    ecx,DWORD PTR [esp+0x5c]
100400ec:	mov    DWORD PTR [esp+0x30],ecx
100400f0:	mov    ecx,DWORD PTR [esp+0x68]
100400f4:	mov    DWORD PTR [esp+0x4c],ecx
100400f8:	sub    eax,DWORD PTR [esp+0x40]
100400fc:	mov    ecx,ebp
100400fe:	neg    eax
10040100:	sbb    eax,eax
10040102:	and    eax,0x200
10040107:	mov    DWORD PTR [esp+0x8c],eax
1004010e:	mov    DWORD PTR [esp+0x44],ecx
10040112:	mov    al,BYTE PTR [esi+0x1]
10040115:	cmp    al,0x2b
10040117:	mov    DWORD PTR [esp+0x54],edx
1004011b:	mov    DWORD PTR [esp+0x3c],edx
1004011f:	jne    0x10040134
10040121:	mov    edx,0x1
10040126:	xor    ebx,ebx
10040128:	add    esi,edx
1004012a:	mov    DWORD PTR [esp+0x3c],edx
1004012e:	mov    DWORD PTR [esp+0x10],esi
10040132:	jmp    0x1004014f
10040134:	cmp    al,0x3f
10040136:	jne    0x10040148
10040138:	mov    ebx,DWORD PTR [esp+0xa0]
1004013f:	add    esi,0x1
10040142:	mov    DWORD PTR [esp+0x10],esi
10040146:	jmp    0x1004014f
10040148:	mov    ebx,DWORD PTR [esp+0xa4]
1004014f:	mov    al,BYTE PTR [ebp+0x0]
10040152:	cmp    al,0x1c
10040154:	je     0x100406da
1004015a:	cmp    al,0x1d
1004015c:	je     0x100406da
10040162:	cmp    al,0x1e
10040164:	jne    0x1004019b
10040166:	test   edx,edx
10040168:	movzx  eax,BYTE PTR [ebp+0x1]
1004016c:	mov    DWORD PTR [esp+0x54],0xd
10040174:	mov    DWORD PTR [esp+0x1c],eax
10040178:	jne    0x1004073b
1004017e:	cmp    DWORD PTR [esp+0x40],edx
10040182:	jge    0x1004073b
10040188:	mov    ecx,DWORD PTR [esp+0x34]
1004018c:	push   ecx
1004018d:	add    esi,0x1
10040190:	push   esi
10040191:	mov    edx,eax
10040193:	push   edx
10040194:	push   0x1e
10040196:	jmp    0x1004071d
1004019b:	cmp    al,0x17
1004019d:	jae    0x100401d1
1004019f:	test   edx,edx
100401a1:	movzx  eax,al
100401a4:	mov    DWORD PTR [esp+0x54],0x1a
100401ac:	mov    DWORD PTR [esp+0x1c],eax
100401b0:	jne    0x1004073b
100401b6:	cmp    DWORD PTR [esp+0x40],edx
100401ba:	jge    0x1004073b
100401c0:	mov    ecx,DWORD PTR [esp+0x34]
100401c4:	push   ecx
100401c5:	add    esi,0x1
100401c8:	push   esi
100401c9:	push   edx
100401ca:	mov    edx,eax
100401cc:	jmp    0x1004071c
100401d1:	cmp    al,0x4e
100401d3:	je     0x1004063c
100401d9:	cmp    al,0x4f
100401db:	je     0x1004063c
100401e1:	cmp    al,0x51
100401e3:	je     0x1004063c
100401e9:	cmp    al,0x5e
100401eb:	je     0x10040210
100401ed:	cmp    al,0x5f
100401ef:	je     0x10040210
100401f1:	cmp    al,0x5d
100401f3:	je     0x10040210
100401f5:	cmp    al,0x60
100401f7:	je     0x10040210
100401f9:	cmp    al,0x6d
100401fb:	je     0x100409e3
10040201:	mov    eax,DWORD PTR [esp+0x20]
10040205:	mov    DWORD PTR [eax],0xb
1004020b:	jmp    0x10040abd
10040210:	mov    edi,DWORD PTR [esp+0x14]
10040214:	mov    edx,edi
10040216:	sub    edx,ebp
10040218:	cmp    al,0x60
1004021a:	mov    DWORD PTR [esp+0x28],0x0
10040222:	mov    DWORD PTR [esp+0x1c],edx
10040226:	mov    DWORD PTR [esp+0x24],0x0
1004022e:	jne    0x1004023a
10040230:	cmp    BYTE PTR [ebp+0x3],0x66
10040234:	je     0x10041c67
1004023a:	mov    edx,DWORD PTR [esp+0x40]
1004023e:	cmp    edx,0xffffffff
10040241:	jne    0x10040262
10040243:	mov    edi,ebp
10040245:	xor    eax,eax
10040247:	mov    ah,BYTE PTR [edi+0x1]
1004024a:	mov    al,BYTE PTR [edi+0x2]
1004024d:	add    edi,eax
1004024f:	cmp    BYTE PTR [edi],0x55
10040252:	jne    0x10040245
10040254:	mov    eax,DWORD PTR [esp+0x14]
10040258:	sub    eax,edi
1004025a:	mov    edi,DWORD PTR [esp+0x14]
1004025e:	mov    DWORD PTR [esp+0x28],eax
10040262:	mov    eax,DWORD PTR [esp+0x48]
10040266:	test   eax,eax
10040268:	jne    0x10040327
1004026e:	cmp    edx,0x1
10040271:	mov    BYTE PTR [edi],al
10040273:	jg     0x100402be
10040275:	mov    ecx,DWORD PTR [esp+0x64]
10040279:	mov    edx,DWORD PTR [esp+0x18]
1004027d:	push   ecx
1004027e:	push   edx
1004027f:	push   0x1
10040281:	push   ebp
10040282:	call   0x1003ebb0
10040287:	mov    eax,DWORD PTR [esp+0x2c]
1004028b:	push   eax
1004028c:	lea    esi,[ebp+0x1]
1004028f:	push   ebp
10040290:	push   esi
10040291:	call   0x10045960
10040296:	add    edi,0x1
10040299:	add    esp,0x1c
1004029c:	cmp    DWORD PTR [esp+0x40],0x0
100402a1:	mov    DWORD PTR [esp+0x14],edi
100402a5:	jne    0x100402b0
100402a7:	mov    BYTE PTR [ebp+0x0],0x6f
100402ab:	jmp    0x100409df
100402b0:	mov    cl,bl
100402b2:	add    cl,0x67
100402b5:	mov    BYTE PTR [ebp+0x0],cl
100402b8:	mov    DWORD PTR [esp+0x2c],esi
100402bc:	jmp    0x1004030d
100402be:	mov    edx,DWORD PTR [esp+0x64]
100402c2:	mov    eax,DWORD PTR [esp+0x18]
100402c6:	push   edx
100402c7:	push   eax
100402c8:	push   0x4
100402ca:	push   ebp
100402cb:	call   0x1003ebb0
100402d0:	mov    ecx,DWORD PTR [esp+0x2c]
100402d4:	push   ecx
100402d5:	lea    edx,[ebp+0x4]
100402d8:	push   ebp
100402d9:	push   edx
100402da:	call   0x10045960
100402df:	mov    al,bl
100402e1:	add    al,0x67
100402e3:	mov    BYTE PTR [ebp+0x0],al
100402e6:	add    ebp,0x1
100402e9:	mov    BYTE PTR [ebp+0x0],0x5e
100402ed:	add    ebp,0x1
100402f0:	add    edi,0x4
100402f3:	add    esp,0x1c
100402f6:	mov    DWORD PTR [esp+0x24],ebp
100402fa:	mov    BYTE PTR [ebp+0x0],0x0
100402fe:	mov    BYTE PTR [ebp+0x1],0x0
10040302:	add    ebp,0x2
10040305:	mov    DWORD PTR [esp+0x14],edi
10040309:	mov    DWORD PTR [esp+0x2c],ebp
1004030d:	sub    DWORD PTR [esp+0x40],0x1
10040312:	mov    esi,DWORD PTR [esp+0x10]
10040316:	mov    ecx,DWORD PTR [esp+0x44]
1004031a:	mov    edx,DWORD PTR [esp+0x40]
1004031e:	mov    edi,DWORD PTR [esp+0x38]
10040322:	jmp    0x1004043b
10040327:	cmp    eax,0x1
1004032a:	mov    edi,DWORD PTR [esp+0x38]
1004032e:	jle    0x1004042b
10040334:	test   edi,edi
10040336:	je     0x1004037d
10040338:	mov    eax,DWORD PTR [esp+0x48]
1004033c:	add    eax,0xffffffff
1004033f:	mov    DWORD PTR [esp+0x60],eax
10040343:	imul   eax,DWORD PTR [esp+0x6c]
10040348:	fild   DWORD PTR [esp+0x60]
1004034c:	fimul  DWORD PTR [esp+0x6c]
10040350:	mov    edx,eax
10040352:	fcomp  QWORD PTR ds:0x10074280
10040358:	fnstsw ax
1004035a:	test   ah,0x41
1004035d:	je     0x10041c76
10040363:	mov    eax,DWORD PTR [edi]
10040365:	mov    ebp,0x7fffffeb
1004036a:	sub    ebp,eax
1004036c:	cmp    ebp,edx
1004036e:	jl     0x10041c76
10040374:	add    eax,edx
10040376:	mov    DWORD PTR [edi],eax
10040378:	jmp    0x1004042b
1004037d:	cmp    DWORD PTR [esp+0x88],0x0
10040385:	je     0x10040396
10040387:	cmp    DWORD PTR [esp+0x4c],0x0
1004038c:	jge    0x10040396
1004038e:	mov    edx,DWORD PTR [esp+0x30]
10040392:	mov    DWORD PTR [esp+0x4c],edx
10040396:	cmp    DWORD PTR [esp+0x48],0x1
1004039b:	jle    0x1004042b
100403a1:	mov    eax,DWORD PTR [esp+0x48]
100403a5:	add    eax,0xffffffff
100403a8:	mov    DWORD PTR [esp+0x58],eax
100403ac:	lea    esp,[esp+0x0]
100403b0:	mov    edx,DWORD PTR [esp+0x1c]
100403b4:	mov    eax,DWORD PTR [esp+0x14]
100403b8:	mov    ecx,DWORD PTR [esp+0x18]
100403bc:	mov    edi,DWORD PTR [ecx+0x20]
100403bf:	push   edx
100403c0:	push   ebp
100403c1:	push   eax
100403c2:	call   0x10045420
100403c7:	mov    esi,DWORD PTR [esp+0x70]
100403cb:	mov    eax,DWORD PTR [esp+0x28]
100403cf:	add    esp,0xc
100403d2:	cmp    esi,edi
100403d4:	jae    0x10040410
100403d6:	mov    ecx,DWORD PTR [esp+0x18]
100403da:	lea    ebx,[ebx+0x0]
100403e0:	mov    ecx,DWORD PTR [ecx+0x20]
100403e3:	xor    edx,edx
100403e5:	mov    dh,BYTE PTR [esi]
100403e7:	add    esi,0x2
100403ea:	mov    dl,BYTE PTR [esi-0x1]
100403ed:	add    edx,eax
100403ef:	sar    edx,0x8
100403f2:	mov    BYTE PTR [ecx],dl
100403f4:	movzx  edx,BYTE PTR [esi-0x1]
100403f8:	mov    ecx,DWORD PTR [esp+0x18]
100403fc:	mov    ecx,DWORD PTR [ecx+0x20]
100403ff:	add    dl,al
10040401:	mov    BYTE PTR [ecx+0x1],dl
10040404:	mov    ecx,DWORD PTR [esp+0x18]
10040408:	add    DWORD PTR [ecx+0x20],0x2
1004040c:	cmp    esi,edi
1004040e:	jb     0x100403e0
10040410:	add    DWORD PTR [esp+0x14],eax
10040414:	sub    DWORD PTR [esp+0x58],0x1
10040419:	mov    DWORD PTR [esp+0x64],edi
1004041d:	jne    0x100403b0
1004041f:	mov    esi,DWORD PTR [esp+0x10]
10040423:	mov    ecx,DWORD PTR [esp+0x44]
10040427:	mov    edi,DWORD PTR [esp+0x38]
1004042b:	mov    edx,DWORD PTR [esp+0x40]
1004042f:	test   edx,edx
10040431:	jle    0x1004043d
10040433:	sub    edx,DWORD PTR [esp+0x48]
10040437:	mov    DWORD PTR [esp+0x40],edx
1004043b:	test   edx,edx
1004043d:	jl     0x100405e0
10040443:	test   edi,edi
10040445:	je     0x10040491
10040447:	test   edx,edx
10040449:	jle    0x10040491
1004044b:	mov    eax,DWORD PTR [esp+0x6c]
1004044f:	add    eax,0x7
10040452:	mov    DWORD PTR [esp+0x60],eax
10040456:	imul   eax,edx
10040459:	fild   DWORD PTR [esp+0x60]
1004045d:	fimul  DWORD PTR [esp+0x40]
10040461:	sub    eax,0x6
10040464:	mov    edx,eax
10040466:	fcomp  QWORD PTR ds:0x10074280
1004046c:	fnstsw ax
1004046e:	test   ah,0x41
10040471:	je     0x10041b78
10040477:	mov    eax,DWORD PTR [edi]
10040479:	mov    ebx,0x7fffffeb
1004047e:	sub    ebx,eax
10040480:	cmp    ebx,edx
10040482:	jl     0x10041b78
10040488:	add    eax,edx
1004048a:	mov    DWORD PTR [edi],eax
1004048c:	jmp    0x10040585
10040491:	add    edx,0xffffffff
10040494:	mov    DWORD PTR [esp+0x28],edx
10040498:	js     0x10040585
1004049e:	mov    esi,DWORD PTR [esp+0x14]
100404a2:	mov    edi,DWORD PTR [esp+0x18]
100404a6:	add    bl,0x67
100404a9:	mov    BYTE PTR [esp+0x73],bl
100404ad:	jmp    0x100404b4
100404af:	nop
100404b0:	mov    bl,BYTE PTR [esp+0x73]
100404b4:	mov    ebp,DWORD PTR [edi+0x20]
100404b7:	mov    BYTE PTR [esi],bl
100404b9:	add    esi,0x1
100404bc:	cmp    DWORD PTR [esp+0x28],0x0
100404c1:	mov    DWORD PTR [esp+0x60],ebp
100404c5:	mov    DWORD PTR [esp+0x14],esi
100404c9:	je     0x100404f6
100404cb:	mov    ecx,DWORD PTR [esp+0x24]
100404cf:	mov    BYTE PTR [esi],0x5e
100404d2:	add    esi,0x1
100404d5:	test   ecx,ecx
100404d7:	jne    0x100404dd
100404d9:	xor    eax,eax
100404db:	jmp    0x100404e1
100404dd:	mov    eax,esi
100404df:	sub    eax,ecx
100404e1:	mov    edx,eax
100404e3:	sar    edx,0x8
100404e6:	mov    DWORD PTR [esp+0x24],esi
100404ea:	mov    BYTE PTR [esi],dl
100404ec:	mov    BYTE PTR [esi+0x1],al
100404ef:	add    esi,0x2
100404f2:	mov    DWORD PTR [esp+0x14],esi
100404f6:	mov    ebx,DWORD PTR [esp+0x1c]
100404fa:	mov    eax,DWORD PTR [esp+0x2c]
100404fe:	push   ebx
100404ff:	push   eax
10040500:	push   esi
10040501:	call   0x10045420
10040506:	mov    eax,DWORD PTR [esp+0x70]
1004050a:	add    esp,0xc
1004050d:	cmp    eax,ebp
1004050f:	jae    0x10040568
10040511:	mov    ecx,DWORD PTR [esp+0x28]
10040515:	mov    esi,ecx
10040517:	neg    esi
10040519:	sbb    esi,esi
1004051b:	and    esi,0x3
1004051e:	add    esi,0x1
10040521:	neg    ecx
10040523:	sbb    cl,cl
10040525:	and    cl,0x3
10040528:	add    cl,0x1
1004052b:	jmp    0x10040530
1004052d:	lea    ecx,[ecx+0x0]
10040530:	xor    edx,edx
10040532:	mov    dh,BYTE PTR [eax]
10040534:	add    eax,0x2
10040537:	mov    dl,BYTE PTR [eax-0x1]
1004053a:	add    edx,esi
1004053c:	add    edx,ebx
1004053e:	mov    ebx,DWORD PTR [edi+0x20]
10040541:	sar    edx,0x8
10040544:	mov    BYTE PTR [ebx],dl
10040546:	movzx  edx,BYTE PTR [eax-0x1]
1004054a:	mov    ebx,DWORD PTR [esp+0x1c]
1004054e:	mov    ebp,DWORD PTR [edi+0x20]
10040551:	add    dl,cl
10040553:	add    dl,bl
10040555:	mov    BYTE PTR [ebp+0x1],dl
10040558:	mov    ebp,DWORD PTR [esp+0x60]
1004055c:	add    DWORD PTR [edi+0x20],0x2
10040560:	cmp    eax,ebp
10040562:	jb     0x10040530
10040564:	mov    esi,DWORD PTR [esp+0x14]
10040568:	add    esi,ebx
1004056a:	sub    DWORD PTR [esp+0x28],0x1
1004056f:	mov    DWORD PTR [esp+0x64],ebp
10040573:	mov    DWORD PTR [esp+0x14],esi
10040577:	jns    0x100404b0
1004057d:	mov    esi,DWORD PTR [esp+0x10]
10040581:	mov    ecx,DWORD PTR [esp+0x44]
10040585:	xor    edi,edi
10040587:	cmp    DWORD PTR [esp+0x24],edi
1004058b:	je     0x100408e3
10040591:	mov    esi,DWORD PTR [esp+0x14]
10040595:	mov    eax,esi
10040597:	sub    eax,DWORD PTR [esp+0x24]
1004059b:	mov    ecx,esi
1004059d:	add    eax,0x1
100405a0:	sub    ecx,eax
100405a2:	xor    edx,edx
100405a4:	mov    dh,BYTE PTR [ecx+0x1]
100405a7:	mov    dl,BYTE PTR [ecx+0x2]
100405aa:	cmp    edx,edi
100405ac:	jne    0x100405b4
100405ae:	mov    DWORD PTR [esp+0x24],edi
100405b2:	jmp    0x100405b8
100405b4:	sub    DWORD PTR [esp+0x24],edx
100405b8:	mov    BYTE PTR [esi],0x55
100405bb:	add    esi,0x1
100405be:	mov    edx,eax
100405c0:	sar    edx,0x8
100405c3:	mov    BYTE PTR [esi],dl
100405c5:	mov    BYTE PTR [esi+0x1],al
100405c8:	add    esi,0x2
100405cb:	cmp    DWORD PTR [esp+0x24],edi
100405cf:	mov    BYTE PTR [ecx+0x1],dl
100405d2:	mov    BYTE PTR [ecx+0x2],al
100405d5:	jne    0x10040595
100405d7:	mov    DWORD PTR [esp+0x14],esi
100405db:	jmp    0x100408db
100405e0:	mov    esi,DWORD PTR [esp+0x14]
100405e4:	sub    esi,DWORD PTR [esp+0x28]
100405e8:	xor    eax,eax
100405ea:	mov    ah,BYTE PTR [esi+0x1]
100405ed:	mov    edi,esi
100405ef:	add    bl,0x56
100405f2:	mov    BYTE PTR [esi],bl
100405f4:	mov    al,BYTE PTR [esi+0x2]
100405f7:	sub    edi,eax
100405f9:	cmp    DWORD PTR [esp+0x38],0x0
100405fe:	jne    0x100408db
10040604:	cmp    BYTE PTR [edi],0x5d
10040607:	je     0x100408db
1004060d:	mov    ebx,edi
1004060f:	nop
10040610:	push   0x0
10040612:	push   esi
10040613:	push   ebx
10040614:	call   0x1003e930
10040619:	add    esp,0xc
1004061c:	test   eax,eax
1004061e:	jne    0x10040634
10040620:	xor    ecx,ecx
10040622:	mov    ch,BYTE PTR [ebx+0x1]
10040625:	mov    cl,BYTE PTR [ebx+0x2]
10040628:	add    ebx,ecx
1004062a:	cmp    BYTE PTR [ebx],0x54
1004062d:	je     0x10040610
1004062f:	jmp    0x100408db
10040634:	add    BYTE PTR [edi],0x3
10040637:	jmp    0x100408db
1004063c:	mov    eax,DWORD PTR [esp+0x40]
10040640:	test   eax,eax
10040642:	jne    0x1004064d
10040644:	mov    DWORD PTR [esp+0x14],ebp
10040648:	jmp    0x100409e3
1004064d:	cmp    eax,0x1
10040650:	je     0x1004065a
10040652:	mov    ecx,DWORD PTR [esp+0x18]
10040656:	or     DWORD PTR [ecx+0x44],0x1
1004065a:	mov    ecx,DWORD PTR [esp+0x48]
1004065e:	test   ecx,ecx
10040660:	jne    0x10040675
10040662:	cmp    eax,0xffffffff
10040665:	jne    0x1004068d
10040667:	mov    eax,DWORD PTR [esp+0x14]
1004066b:	add    bl,0x46
1004066e:	mov    BYTE PTR [eax],bl
10040670:	jmp    0x100408d4
10040675:	cmp    ecx,0x1
10040678:	jne    0x100406a0
1004067a:	cmp    eax,0xffffffff
1004067d:	jne    0x100406a0
1004067f:	mov    eax,DWORD PTR [esp+0x14]
10040683:	add    bl,0x48
10040686:	mov    BYTE PTR [eax],bl
10040688:	jmp    0x100408d4
1004068d:	cmp    eax,0x1
10040690:	jne    0x100406a0
10040692:	mov    eax,DWORD PTR [esp+0x14]
10040696:	add    bl,0x4a
10040699:	mov    BYTE PTR [eax],bl
1004069b:	jmp    0x100408d4
100406a0:	mov    esi,DWORD PTR [esp+0x14]
100406a4:	add    bl,0x4c
100406a7:	mov    BYTE PTR [esi],bl
100406a9:	add    esi,0x1
100406ac:	mov    edx,ecx
100406ae:	sar    edx,0x8
100406b1:	mov    BYTE PTR [esi],dl
100406b3:	mov    BYTE PTR [esi+0x1],cl
100406b6:	add    esi,0x2
100406b9:	cmp    eax,0xffffffff
100406bc:	jne    0x100406c4
100406be:	xor    eax,eax
100406c0:	mov    DWORD PTR [esp+0x40],eax
100406c4:	mov    ecx,eax
100406c6:	sar    ecx,0x8
100406c9:	mov    BYTE PTR [esi],cl
100406cb:	mov    BYTE PTR [esi+0x1],al
100406ce:	add    esi,0x2
100406d1:	mov    DWORD PTR [esp+0x14],esi
100406d5:	jmp    0x100408db
100406da:	cmp    DWORD PTR [esp+0x48],0x1
100406df:	mov    ecx,DWORD PTR [esp+0x14]
100406e3:	movzx  edi,BYTE PTR [ecx-0x1]
100406e7:	mov    DWORD PTR [esp+0x1c],edi
100406eb:	jle    0x10040701
100406ed:	mov    ecx,DWORD PTR [esp+0x18]
100406f1:	mov    ecx,DWORD PTR [ecx+0x48]
100406f4:	or     ecx,edi
100406f6:	or     ecx,DWORD PTR [esp+0x84]
100406fd:	mov    DWORD PTR [esp+0x4c],ecx
10040701:	test   edx,edx
10040703:	jne    0x1004073b
10040705:	cmp    DWORD PTR [esp+0x40],edx
10040709:	jge    0x1004073b
1004070b:	mov    edx,DWORD PTR [esp+0x34]
1004070f:	mov    ecx,DWORD PTR [esp+0x1c]
10040713:	push   edx
10040714:	add    esi,0x1
10040717:	push   esi
10040718:	push   ecx
10040719:	movzx  edx,al
1004071c:	push   edx
1004071d:	mov    esi,DWORD PTR [esp+0x28]
10040721:	call   0x1003ec50
10040726:	add    esp,0x10
10040729:	test   eax,eax
1004072b:	je     0x10040737
1004072d:	mov    DWORD PTR [esp+0x3c],0x1
10040735:	xor    ebx,ebx
10040737:	mov    esi,DWORD PTR [esp+0x10]
1004073b:	mov    al,BYTE PTR [ebp+0x0]
1004073e:	cmp    al,0x10
10040740:	je     0x1004074f
10040742:	cmp    al,0xf
10040744:	je     0x1004074f
10040746:	or     eax,0xffffffff
10040749:	mov    DWORD PTR [esp+0x24],eax
1004074d:	jmp    0x1004075b
1004074f:	movzx  ecx,BYTE PTR [ebp+0x2]
10040753:	movzx  eax,BYTE PTR [ebp+0x1]
10040757:	mov    DWORD PTR [esp+0x24],ecx
1004075b:	mov    edi,DWORD PTR [esp+0x14]
1004075f:	mov    DWORD PTR [esp+0x28],eax
10040763:	mov    eax,DWORD PTR [esp+0x40]
10040767:	test   eax,eax
10040769:	mov    DWORD PTR [esp+0x14],ebp
1004076d:	je     0x100409e3
10040773:	cmp    eax,0x1
10040776:	je     0x10040780
10040778:	mov    ecx,DWORD PTR [esp+0x18]
1004077c:	or     DWORD PTR [ecx+0x44],0x1
10040780:	mov    ecx,DWORD PTR [esp+0x54]
10040784:	add    ebx,ecx
10040786:	cmp    DWORD PTR [esp+0x48],0x0
1004078b:	jne    0x100407da
1004078d:	cmp    eax,0xffffffff
10040790:	jne    0x100407a4
10040792:	add    bl,0x1f
10040795:	mov    BYTE PTR [ebp+0x0],bl
10040798:	add    ebp,0x1
1004079b:	mov    DWORD PTR [esp+0x14],ebp
1004079f:	jmp    0x100408ca
100407a4:	cmp    eax,0x1
100407a7:	jne    0x100407bb
100407a9:	add    bl,0x23
100407ac:	mov    BYTE PTR [ebp+0x0],bl
100407af:	add    ebp,0x1
100407b2:	mov    DWORD PTR [esp+0x14],ebp
100407b6:	jmp    0x100408ca
100407bb:	add    bl,0x25
100407be:	lea    ecx,[ebp+0x1]
100407c1:	mov    edx,eax
100407c3:	sar    edx,0x8
100407c6:	mov    BYTE PTR [ebp+0x0],bl
100407c9:	mov    BYTE PTR [ecx],dl
100407cb:	mov    BYTE PTR [ecx+0x1],al
100407ce:	add    ecx,0x2
100407d1:	mov    DWORD PTR [esp+0x14],ecx
100407d5:	jmp    0x100408ca
100407da:	cmp    DWORD PTR [esp+0x48],0x1
100407df:	jne    0x10040826
100407e1:	cmp    eax,0xffffffff
100407e4:	jne    0x100407f8
100407e6:	add    bl,0x21
100407e9:	mov    BYTE PTR [ebp+0x0],bl
100407ec:	add    ebp,0x1
100407ef:	mov    DWORD PTR [esp+0x14],ebp
100407f3:	jmp    0x100408ca
100407f8:	cmp    eax,0x1
100407fb:	mov    DWORD PTR [esp+0x14],edi
100407ff:	je     0x100409e3
10040805:	lea    edx,[eax-0x1]
10040808:	add    bl,0x25
1004080b:	lea    ecx,[edi+0x1]
1004080e:	sar    edx,0x8
10040811:	sub    al,0x1
10040813:	mov    BYTE PTR [edi],bl
10040815:	mov    BYTE PTR [ecx],dl
10040817:	mov    BYTE PTR [ecx+0x1],al
1004081a:	add    ecx,0x2
1004081d:	mov    DWORD PTR [esp+0x14],ecx
10040821:	jmp    0x100408ca
10040826:	add    cl,0x27
10040829:	mov    BYTE PTR [ebp+0x0],cl
1004082c:	mov    ecx,DWORD PTR [esp+0x48]
10040830:	lea    esi,[ebp+0x1]
10040833:	mov    edx,ecx
10040835:	sar    edx,0x8
10040838:	mov    BYTE PTR [esi],dl
1004083a:	mov    BYTE PTR [esi+0x1],cl
1004083d:	add    esi,0x2
10040840:	test   eax,eax
10040842:	mov    DWORD PTR [esp+0x14],esi
10040846:	jge    0x10040871
10040848:	mov    al,BYTE PTR [esp+0x1c]
1004084c:	mov    BYTE PTR [esi],al
1004084e:	mov    eax,DWORD PTR [esp+0x28]
10040852:	add    esi,0x1
10040855:	test   eax,eax
10040857:	jl     0x10040867
10040859:	mov    cl,BYTE PTR [esp+0x24]
1004085d:	mov    BYTE PTR [esi],al
1004085f:	add    esi,0x1
10040862:	mov    BYTE PTR [esi],cl
10040864:	add    esi,0x1
10040867:	add    bl,0x1f
1004086a:	mov    BYTE PTR [esi],bl
1004086c:	add    esi,0x1
1004086f:	jmp    0x100408c6
10040871:	cmp    eax,ecx
10040873:	je     0x100408ca
10040875:	mov    esi,DWORD PTR [esp+0x14]
10040879:	mov    dl,BYTE PTR [esp+0x1c]
1004087d:	mov    BYTE PTR [esi],dl
1004087f:	add    esi,0x1
10040882:	cmp    DWORD PTR [esp+0x28],0x0
10040887:	jl     0x1004089d
10040889:	movzx  edx,BYTE PTR [esp+0x28]
1004088e:	mov    BYTE PTR [esi],dl
10040890:	movzx  edx,BYTE PTR [esp+0x24]
10040895:	add    esi,0x1
10040898:	mov    BYTE PTR [esi],dl
1004089a:	add    esi,0x1
1004089d:	sub    eax,ecx
1004089f:	cmp    eax,0x1
100408a2:	mov    DWORD PTR [esp+0x40],eax
100408a6:	jne    0x100408b1
100408a8:	add    bl,0x23
100408ab:	mov    BYTE PTR [esi],bl
100408ad:	add    esi,eax
100408af:	jmp    0x100408c6
100408b1:	add    bl,0x25
100408b4:	mov    BYTE PTR [esi],bl
100408b6:	add    esi,0x1
100408b9:	mov    ecx,eax
100408bb:	sar    ecx,0x8
100408be:	mov    BYTE PTR [esi],cl
100408c0:	mov    BYTE PTR [esi+0x1],al
100408c3:	add    esi,0x2
100408c6:	mov    DWORD PTR [esp+0x14],esi
100408ca:	mov    dl,BYTE PTR [esp+0x1c]
100408ce:	mov    eax,DWORD PTR [esp+0x14]
100408d2:	mov    BYTE PTR [eax],dl
100408d4:	add    eax,0x1
100408d7:	mov    DWORD PTR [esp+0x14],eax
100408db:	mov    ecx,DWORD PTR [esp+0x44]
100408df:	mov    esi,DWORD PTR [esp+0x10]
100408e3:	cmp    DWORD PTR [esp+0x3c],0x0
100408e8:	je     0x100409e3
100408ee:	mov    al,BYTE PTR [ecx]
100408f0:	cmp    al,0x27
100408f2:	je     0x100408fc
100408f4:	cmp    al,0x41
100408f6:	je     0x10040900
100408f8:	cmp    al,0x34
100408fa:	jne    0x10040928
100408fc:	cmp    al,0x41
100408fe:	jne    0x10040914
10040900:	mov    dl,BYTE PTR [ecx+0x3]
10040903:	cmp    dl,0x10
10040906:	je     0x1004090d
10040908:	cmp    dl,0xf
1004090b:	jne    0x10040914
1004090d:	mov    edx,0x2
10040912:	jmp    0x10040916
10040914:	xor    edx,edx
10040916:	movzx  eax,al
10040919:	movzx  eax,BYTE PTR [eax+0x1006e478]
10040920:	add    eax,edx
10040922:	add    ecx,eax
10040924:	mov    DWORD PTR [esp+0x44],ecx
10040928:	mov    ebx,DWORD PTR [esp+0x14]
1004092c:	sub    ebx,ecx
1004092e:	test   ebx,ebx
10040930:	jle    0x100409e3
10040936:	movzx  eax,BYTE PTR [ecx]
10040939:	add    eax,0xffffffe1
1004093c:	cmp    eax,0x20
1004093f:	ja     0x1004099a
10040941:	movzx  edx,BYTE PTR [eax+0x10041f0c]
10040948:	jmp    DWORD PTR [edx*4+0x10041ed8]
1004094f:	mov    BYTE PTR [ecx],0x28
10040952:	jmp    0x100409df
10040957:	mov    BYTE PTR [ecx],0x29
1004095a:	jmp    0x100409df
1004095f:	mov    BYTE PTR [ecx],0x2a
10040962:	jmp    0x100409df
10040967:	mov    BYTE PTR [ecx],0x2b
1004096a:	jmp    0x100409df
1004096f:	mov    BYTE PTR [ecx],0x42
10040972:	jmp    0x100409df
10040977:	mov    BYTE PTR [ecx],0x43
1004097a:	jmp    0x100409df
1004097c:	mov    BYTE PTR [ecx],0x44
1004097f:	jmp    0x100409df
10040981:	mov    BYTE PTR [ecx],0x45
10040984:	jmp    0x100409df
10040986:	mov    BYTE PTR [ecx],0x35
10040989:	jmp    0x100409df
1004098b:	mov    BYTE PTR [ecx],0x36
1004098e:	jmp    0x100409df
10040990:	mov    BYTE PTR [ecx],0x37
10040993:	jmp    0x100409df
10040995:	mov    BYTE PTR [ecx],0x38
10040998:	jmp    0x100409df
1004099a:	push   ebx
1004099b:	push   ecx
1004099c:	add    ecx,0x3
1004099f:	push   ecx
100409a0:	call   0x10045960
100409a5:	mov    ecx,DWORD PTR [esp+0x50]
100409a9:	mov    eax,DWORD PTR [esp+0x20]
100409ad:	mov    BYTE PTR [ecx],0x5d
100409b0:	mov    BYTE PTR [eax+0x3],0x55
100409b4:	add    ebx,0x3
100409b7:	add    eax,0x3
100409ba:	add    eax,0x1
100409bd:	mov    ecx,ebx
100409bf:	sar    ecx,0x8
100409c2:	mov    BYTE PTR [eax],cl
100409c4:	mov    BYTE PTR [eax+0x1],bl
100409c7:	mov    edx,DWORD PTR [esp+0x50]
100409cb:	add    esp,0xc
100409ce:	add    eax,0x2
100409d1:	mov    BYTE PTR [edx+0x1],cl
100409d4:	mov    DWORD PTR [esp+0x14],eax
100409d8:	mov    eax,DWORD PTR [esp+0x44]
100409dc:	mov    BYTE PTR [eax+0x2],bl
100409df:	mov    esi,DWORD PTR [esp+0x10]
100409e3:	mov    eax,DWORD PTR [esp+0x18]
100409e7:	mov    ecx,DWORD PTR [esp+0x8c]
100409ee:	or     DWORD PTR [eax+0x48],ecx
100409f1:	mov    DWORD PTR [esp+0x2c],0x0
100409f9:	jmp    0x10041b47
100409fe:	mov    edi,DWORD PTR [esp+0x18]
10040a02:	mov    eax,DWORD PTR [edi+0x20]
10040a05:	mov    edx,DWORD PTR [esp+0x34]
10040a09:	mov    ebx,0x1
10040a0e:	add    esi,ebx
10040a10:	xor    ebp,ebp
10040a12:	mov    DWORD PTR [esp+0x64],eax
10040a16:	mov    DWORD PTR [esp+0x10],esi
10040a1a:	mov    al,BYTE PTR [esi]
10040a1c:	cmp    al,0x2a
10040a1e:	mov    DWORD PTR [esp+0x60],edx
10040a22:	mov    DWORD PTR [esp+0x28],ebp
10040a26:	mov    DWORD PTR [esp+0x24],0x5f
10040a2e:	mov    DWORD PTR [esp+0x58],ebp
10040a32:	jne    0x10040b10
10040a38:	movzx  ebp,BYTE PTR [esi+0x1]
10040a3c:	mov    ecx,DWORD PTR [edi+0xc]
10040a3f:	test   BYTE PTR [ecx+ebp*1],0x2
10040a43:	je     0x10040b0e
10040a49:	add    esi,0x1
10040a4c:	xor    edi,edi
10040a4e:	mov    ebx,0x1006e9c0
10040a53:	mov    ebp,esi
10040a55:	mov    DWORD PTR [esp+0x2c],edi
10040a59:	lea    esp,[esp+0x0]
10040a60:	add    esi,0x1
10040a63:	mov    DWORD PTR [esp+0x10],esi
10040a67:	movzx  edx,BYTE PTR [esi]
10040a6a:	test   BYTE PTR [edx+ecx*1],0x2
10040a6e:	jne    0x10040a60
10040a70:	mov    al,BYTE PTR [esi]
10040a72:	cmp    al,0x3a
10040a74:	je     0x10041c85
10040a7a:	cmp    al,0x29
10040a7c:	jne    0x10041c94
10040a82:	sub    esi,ebp
10040a84:	cmp    esi,DWORD PTR [edi*8+0x1006e9e8]
10040a8b:	jne    0x10040a9c
10040a8d:	push   esi
10040a8e:	push   ebx
10040a8f:	push   ebp
10040a90:	call   0x1004f3a6
10040a95:	add    esp,0xc
10040a98:	test   eax,eax
10040a9a:	je     0x10040ae1
10040a9c:	mov    eax,DWORD PTR [edi*8+0x1006e9e8]
10040aa3:	add    edi,0x1
10040aa6:	cmp    edi,0x7
10040aa9:	lea    ebx,[ebx+eax*1+0x1]
10040aad:	jl     0x10040a84
10040aaf:	mov    eax,DWORD PTR [esp+0x20]
10040ab3:	mov    DWORD PTR [eax],0x3c
10040ab9:	mov    esi,DWORD PTR [esp+0x10]
10040abd:	mov    edx,DWORD PTR [esp+0x9c]
10040ac4:	mov    DWORD PTR [edx],esi
10040ac6:	xor    eax,eax
10040ac8:	mov    ecx,DWORD PTR [esp+0xfc]
10040acf:	pop    edi
10040ad0:	pop    esi
10040ad1:	pop    ebp
10040ad2:	pop    ebx
10040ad3:	xor    ecx,esp
10040ad5:	call   0x100430d7
10040ada:	add    esp,0xf0
10040ae0:	ret    
10040ae1:	mov    ecx,DWORD PTR [esp+0x14]
10040ae5:	mov    al,BYTE PTR [edi*8+0x1006e9ec]
10040aec:	mov    BYTE PTR [ecx],al
10040aee:	add    ecx,0x1
10040af1:	cmp    al,0x6e
10040af3:	mov    DWORD PTR [esp+0x14],ecx
10040af7:	jne    0x10040b04
10040af9:	mov    ecx,DWORD PTR [esp+0x18]
10040afd:	mov    DWORD PTR [ecx+0x4c],0x1
10040b04:	cmp    edi,0x7
10040b07:	jge    0x10040aaf
10040b09:	jmp    0x10041b43
10040b0e:	xor    ebp,ebp
10040b10:	cmp    al,0x3f
10040b12:	jne    0x10041200
10040b18:	add    esi,ebx
10040b1a:	mov    DWORD PTR [esp+0x10],esi
10040b1e:	mov    al,BYTE PTR [esi]
10040b20:	movzx  ecx,al
10040b23:	add    ecx,0xffffffdf
10040b26:	cmp    ecx,0x5b
10040b29:	ja     0x1004145b
10040b2f:	movzx  edx,BYTE PTR [ecx+0x10041f6c]
10040b36:	jmp    DWORD PTR [edx*4+0x10041f30]
10040b3d:	add    esi,ebx
10040b3f:	mov    DWORD PTR [esp+0x10],esi
10040b43:	mov    al,BYTE PTR [esi]
10040b45:	test   al,al
10040b47:	je     0x10040b60
10040b49:	lea    esp,[esp+0x0]
10040b50:	cmp    al,0x29
10040b52:	je     0x10040b6f
10040b54:	add    esi,ebx
10040b56:	mov    DWORD PTR [esp+0x10],esi
10040b5a:	mov    al,BYTE PTR [esi]
10040b5c:	test   al,al
10040b5e:	jne    0x10040b50
10040b60:	mov    ecx,DWORD PTR [esp+0x20]
10040b64:	mov    DWORD PTR [ecx],0x12
10040b6a:	jmp    0x10040abd
10040b6f:	cmp    BYTE PTR [esi],0x0
10040b72:	je     0x10040b60
10040b74:	jmp    0x10041b47
10040b79:	mov    DWORD PTR [esp+0x58],ebx
10040b7d:	add    esi,ebx
10040b7f:	jmp    0x10041593
10040b84:	cmp    BYTE PTR [esi+0x1],0x3f
10040b88:	mov    DWORD PTR [esp+0x24],0x60
10040b90:	jne    0x10040bad
10040b92:	mov    al,BYTE PTR [esi+0x2]
10040b95:	cmp    al,0x3d
10040b97:	je     0x1004159f
10040b9d:	cmp    al,0x21
10040b9f:	je     0x1004159f
10040ba5:	cmp    al,0x3c
10040ba7:	je     0x1004159f
10040bad:	mov    edx,DWORD PTR [esp+0x14]
10040bb1:	mov    BYTE PTR [edx+0x3],0x64
10040bb5:	mov    esi,DWORD PTR [esp+0x10]
10040bb9:	mov    al,BYTE PTR [esi+0x1]
10040bbc:	or     ebp,0xffffffff
10040bbf:	cmp    al,0x52
10040bc1:	mov    DWORD PTR [esp+0x28],0x3
10040bc9:	mov    ebx,ebp
10040bcb:	jne    0x10040be8
10040bcd:	cmp    BYTE PTR [esi+0x2],0x26
10040bd1:	lea    ecx,[esi+0x2]
10040bd4:	jne    0x10040be8
10040bd6:	mov    DWORD PTR [esp+0x10],ecx
10040bda:	mov    BYTE PTR [edx+0x3],0x65
10040bde:	mov    esi,DWORD PTR [esp+0x10]
10040be2:	mov    DWORD PTR [esp+0x54],ebp
10040be6:	jmp    0x10040c2c
10040be8:	cmp    al,0x3c
10040bea:	jne    0x10040bfd
10040bec:	add    esi,0x1
10040bef:	mov    DWORD PTR [esp+0x54],0x3e
10040bf7:	mov    DWORD PTR [esp+0x10],esi
10040bfb:	jmp    0x10040c2c
10040bfd:	cmp    al,0x27
10040bff:	jne    0x10040c12
10040c01:	add    esi,0x1
10040c04:	mov    DWORD PTR [esp+0x54],0x27
10040c0c:	mov    DWORD PTR [esp+0x10],esi
10040c10:	jmp    0x10040c2c
10040c12:	cmp    al,0x2d
10040c14:	mov    DWORD PTR [esp+0x54],0x0
10040c1c:	je     0x10040c22
10040c1e:	cmp    al,0x2b
10040c20:	jne    0x10040c2c
10040c22:	add    esi,0x1
10040c25:	mov    DWORD PTR [esp+0x10],esi
10040c29:	movzx  ebx,BYTE PTR [esi]
10040c2c:	movzx  eax,BYTE PTR [esi+0x1]
10040c30:	mov    edx,DWORD PTR [edi+0xc]
10040c33:	add    esi,0x1
10040c36:	test   BYTE PTR [eax+edx*1],0x10
10040c3a:	je     0x10041ca3
10040c40:	mov    DWORD PTR [esp+0x10],esi
10040c44:	movzx  eax,BYTE PTR [esi]
10040c47:	xor    ecx,ecx
10040c49:	test   BYTE PTR [eax+edx*1],0x10
10040c4d:	mov    edi,esi
10040c4f:	mov    DWORD PTR [esp+0x1c],ecx
10040c53:	mov    DWORD PTR [esp+0x2c],edi
10040c57:	je     0x10040c92
10040c59:	mov    edx,DWORD PTR [esp+0x18]
10040c5d:	mov    edx,DWORD PTR [edx+0xc]
10040c60:	test   ecx,ecx
10040c62:	jl     0x10040c82
10040c64:	test   BYTE PTR [eax+0x1006f468],0x4
10040c6b:	je     0x10040c7a
10040c6d:	lea    ecx,[ecx+ecx*4]
10040c70:	lea    eax,[eax+ecx*2-0x30]
10040c74:	mov    DWORD PTR [esp+0x1c],eax
10040c78:	jmp    0x10040c7e
10040c7a:	mov    DWORD PTR [esp+0x1c],ebp
10040c7e:	mov    ecx,DWORD PTR [esp+0x1c]
10040c82:	add    esi,0x1
10040c85:	mov    DWORD PTR [esp+0x10],esi
10040c89:	movzx  eax,BYTE PTR [esi]
10040c8c:	test   BYTE PTR [eax+edx*1],0x10
10040c90:	jne    0x10040c60
10040c92:	mov    eax,DWORD PTR [esp+0x54]
10040c96:	mov    ebp,esi
10040c98:	sub    ebp,edi
10040c9a:	test   eax,eax
10040c9c:	jle    0x10040cb0
10040c9e:	movzx  edx,BYTE PTR [esi]
10040ca1:	add    esi,0x1
10040ca4:	cmp    edx,eax
10040ca6:	mov    DWORD PTR [esp+0x10],esi
10040caa:	jne    0x10041cb2
10040cb0:	mov    al,BYTE PTR [esi]
10040cb2:	add    esi,0x1
10040cb5:	cmp    al,0x29
10040cb7:	mov    DWORD PTR [esp+0x10],esi
10040cbb:	jne    0x10041cb2
10040cc1:	cmp    DWORD PTR [esp+0x38],0x0
10040cc6:	jne    0x1004159f
10040ccc:	test   ebx,ebx
10040cce:	jle    0x10040d19
10040cd0:	test   ecx,ecx
10040cd2:	jle    0x10041cc4
10040cd8:	cmp    ebx,0x2d
10040cdb:	mov    eax,DWORD PTR [esp+0x18]
10040cdf:	jne    0x10040cf1
10040ce1:	mov    edx,DWORD PTR [eax+0x30]
10040ce4:	sub    edx,ecx
10040ce6:	add    edx,0x1
10040ce9:	mov    DWORD PTR [esp+0x1c],edx
10040ced:	mov    ecx,edx
10040cef:	jmp    0x10040cf4
10040cf1:	add    ecx,DWORD PTR [eax+0x30]
10040cf4:	test   ecx,ecx
10040cf6:	jle    0x10041cd3
10040cfc:	cmp    ecx,DWORD PTR [eax+0x34]
10040cff:	jg     0x10041cd3
10040d05:	mov    eax,DWORD PTR [esp+0x14]
10040d09:	mov    edx,ecx
10040d0b:	sar    edx,0x8
10040d0e:	mov    BYTE PTR [eax+0x4],dl
10040d11:	mov    BYTE PTR [eax+0x5],cl
10040d14:	jmp    0x1004159f
10040d19:	mov    ebx,DWORD PTR [esp+0x18]
10040d1d:	cmp    DWORD PTR [ebx+0x28],0x0
10040d21:	mov    edi,DWORD PTR [ebx+0x24]
10040d24:	mov    DWORD PTR [esp+0x3c],0x0
10040d2c:	jle    0x10040d5b
10040d2e:	mov    esi,DWORD PTR [esp+0x3c]
10040d32:	mov    ecx,DWORD PTR [esp+0x2c]
10040d36:	push   ebp
10040d37:	lea    eax,[edi+0x2]
10040d3a:	push   eax
10040d3b:	push   ecx
10040d3c:	call   0x1004f3a6
10040d41:	add    esp,0xc
10040d44:	test   eax,eax
10040d46:	je     0x10040d57
10040d48:	add    edi,DWORD PTR [ebx+0x2c]
10040d4b:	add    esi,0x1
10040d4e:	cmp    esi,DWORD PTR [ebx+0x28]
10040d51:	mov    DWORD PTR [esp+0x3c],esi
10040d55:	jl     0x10040d32
10040d57:	mov    esi,DWORD PTR [esp+0x10]
10040d5b:	mov    edx,DWORD PTR [esp+0x3c]
10040d5f:	cmp    edx,DWORD PTR [ebx+0x28]
10040d62:	jge    0x10040d7e
10040d64:	movzx  ecx,BYTE PTR [edi+0x1]
10040d68:	mov    ch,BYTE PTR [edi]
10040d6a:	mov    eax,DWORD PTR [esp+0x14]
10040d6e:	mov    BYTE PTR [eax+0x5],cl
10040d71:	mov    edx,ecx
10040d73:	sar    edx,0x8
10040d76:	mov    BYTE PTR [eax+0x4],dl
10040d79:	jmp    0x1004159f
10040d7e:	mov    eax,DWORD PTR [esp+0x34]
10040d82:	shr    eax,0x3
10040d85:	and    eax,0x1
10040d88:	push   eax
10040d89:	mov    edi,ebx
10040d8b:	mov    ebx,DWORD PTR [esp+0x30]
10040d8f:	push   ebp
10040d90:	push   edi
10040d91:	mov    eax,esi
10040d93:	call   0x1003e320
10040d98:	add    esp,0xc
10040d9b:	test   eax,eax
10040d9d:	jle    0x10040db3
10040d9f:	mov    ecx,DWORD PTR [esp+0x14]
10040da3:	mov    edx,eax
10040da5:	sar    edx,0x8
10040da8:	mov    BYTE PTR [ecx+0x4],dl
10040dab:	mov    BYTE PTR [ecx+0x5],al
10040dae:	jmp    0x1004159f
10040db3:	cmp    DWORD PTR [esp+0x54],0x0
10040db8:	jne    0x10041ce2
10040dbe:	cmp    BYTE PTR [ebx],0x52
10040dc1:	jne    0x10040e10
10040dc3:	mov    eax,0x1
10040dc8:	xor    ecx,ecx
10040dca:	cmp    ebp,eax
10040dcc:	jle    0x10040df3
10040dce:	mov    edi,edi
10040dd0:	movzx  edx,BYTE PTR [eax+ebx*1]
10040dd4:	test   BYTE PTR [edx+0x1006f468],0x4
10040ddb:	je     0x10041cf1
10040de1:	add    eax,0x1
10040de4:	cmp    eax,ebp
10040de6:	lea    ecx,[ecx+ecx*4]
10040de9:	lea    ecx,[edx+ecx*2-0x30]
10040ded:	jl     0x10040dd0
10040def:	test   ecx,ecx
10040df1:	jne    0x10040df8
10040df3:	mov    ecx,0xffff
10040df8:	mov    eax,DWORD PTR [esp+0x14]
10040dfc:	mov    edx,ecx
10040dfe:	sar    edx,0x8
10040e01:	mov    BYTE PTR [eax+0x3],0x65
10040e05:	mov    BYTE PTR [eax+0x4],dl
10040e08:	mov    BYTE PTR [eax+0x5],cl
10040e0b:	jmp    0x1004159f
10040e10:	cmp    ebp,0x6
10040e13:	jne    0x10040e3d
10040e15:	push   ebp
10040e16:	push   0x10074234
10040e1b:	push   ebx
10040e1c:	call   0x1004f3a6
10040e21:	add    esp,0xc
10040e24:	test   eax,eax
10040e26:	jne    0x10040e3d
10040e28:	mov    eax,DWORD PTR [esp+0x14]
10040e2c:	mov    BYTE PTR [eax+0x3],0x66
10040e30:	mov    DWORD PTR [esp+0x28],0x1
10040e38:	jmp    0x1004159f
10040e3d:	mov    eax,DWORD PTR [esp+0x1c]
10040e41:	test   eax,eax
10040e43:	jle    0x10041d00
10040e49:	cmp    eax,DWORD PTR [edi+0x34]
10040e4c:	jg     0x10041d00
10040e52:	mov    ecx,DWORD PTR [esp+0x14]
10040e56:	mov    edx,eax
10040e58:	sar    edx,0x8
10040e5b:	mov    BYTE PTR [ecx+0x4],dl
10040e5e:	mov    BYTE PTR [ecx+0x5],al
10040e61:	jmp    0x1004159f
10040e66:	mov    DWORD PTR [esp+0x24],0x58
10040e6e:	add    esi,ebx
10040e70:	jmp    0x1004159b
10040e75:	add    esi,ebx
10040e77:	mov    DWORD PTR [esp+0x10],esi
10040e7b:	cmp    BYTE PTR [esi],0x29
10040e7e:	jne    0x10040e96
10040e80:	mov    eax,DWORD PTR [esp+0x14]
10040e84:	mov    BYTE PTR [eax],0x6d
10040e87:	add    eax,ebx
10040e89:	mov    DWORD PTR [esp+0x14],eax
10040e8d:	mov    DWORD PTR [esp+0x2c],ebp
10040e91:	jmp    0x10041b43
10040e96:	mov    DWORD PTR [esp+0x24],0x59
10040e9e:	jmp    0x1004159f
10040ea3:	mov    cl,BYTE PTR [esi+0x1]
10040ea6:	cmp    cl,0x21
10040ea9:	je     0x10040f65
10040eaf:	cmp    cl,0x3d
10040eb2:	je     0x10040f55
10040eb8:	mov    edx,DWORD PTR [edi+0xc]
10040ebb:	movzx  ecx,cl
10040ebe:	test   BYTE PTR [ecx+edx*1],0x10
10040ec2:	je     0x10041d15
10040ec8:	mov    ebp,DWORD PTR [edi+0xc]
10040ecb:	sub    al,0x3c
10040ecd:	neg    al
10040ecf:	sbb    eax,eax
10040ed1:	add    esi,ebx
10040ed3:	mov    DWORD PTR [esp+0x10],esi
10040ed7:	movzx  ecx,BYTE PTR [esi]
10040eda:	and    eax,0xffffffe9
10040edd:	add    eax,0x3e
10040ee0:	test   BYTE PTR [ecx+ebp*1],0x10
10040ee4:	mov    edx,esi
10040ee6:	mov    DWORD PTR [esp+0x2c],edx
10040eea:	je     0x10040eff
10040eec:	mov    ecx,ebp
10040eee:	mov    edi,edi
10040ef0:	add    esi,ebx
10040ef2:	mov    DWORD PTR [esp+0x10],esi
10040ef6:	movzx  edi,BYTE PTR [esi]
10040ef9:	test   BYTE PTR [edi+ecx*1],0x10
10040efd:	jne    0x10040ef0
10040eff:	mov    edi,esi
10040f01:	sub    edi,edx
10040f03:	cmp    DWORD PTR [esp+0x38],0x0
10040f08:	mov    DWORD PTR [esp+0x28],edi
10040f0c:	je     0x10041059
10040f12:	movzx  edx,BYTE PTR [esi]
10040f15:	cmp    edx,eax
10040f17:	jne    0x10041d44
10040f1d:	mov    ecx,DWORD PTR [esp+0x18]
10040f21:	cmp    DWORD PTR [ecx+0x28],0x2710
10040f28:	jge    0x10041d53
10040f2e:	lea    eax,[edi+0x3]
10040f31:	cmp    eax,DWORD PTR [ecx+0x2c]
10040f34:	jle    0x100411ad
10040f3a:	cmp    edi,0x20
10040f3d:	mov    DWORD PTR [ecx+0x2c],eax
10040f40:	jle    0x100411ad
10040f46:	mov    eax,DWORD PTR [esp+0x20]
10040f4a:	mov    DWORD PTR [eax],0x30
10040f50:	jmp    0x10040abd
10040f55:	mov    DWORD PTR [esp+0x24],0x5a
10040f5d:	add    esi,0x2
10040f60:	jmp    0x1004159b
10040f65:	mov    DWORD PTR [esp+0x24],0x5b
10040f6d:	add    esi,0x2
10040f70:	jmp    0x1004159b
10040f75:	mov    DWORD PTR [esp+0x24],0x5d
10040f7d:	add    esi,ebx
10040f7f:	jmp    0x1004159b
10040f84:	mov    edi,DWORD PTR [esp+0x14]
10040f88:	mov    BYTE PTR [edi],0x53
10040f8b:	mov    esi,DWORD PTR [esp+0x10]
10040f8f:	add    esi,ebx
10040f91:	mov    DWORD PTR [esp+0x10],esi
10040f95:	movzx  ecx,BYTE PTR [esi]
10040f98:	mov    DWORD PTR [esp+0x74],edi
10040f9c:	mov    edx,0x4
10040fa1:	add    edi,ebx
10040fa3:	xor    eax,eax
10040fa5:	test   BYTE PTR [ecx+0x1006f468],dl
10040fab:	mov    DWORD PTR [esp+0x94],ebx
10040fb2:	je     0x10040fcc
10040fb4:	add    esi,ebx
10040fb6:	lea    eax,[eax+eax*4]
10040fb9:	lea    eax,[ecx+eax*2-0x30]
10040fbd:	mov    DWORD PTR [esp+0x10],esi
10040fc1:	movzx  ecx,BYTE PTR [esi]
10040fc4:	test   BYTE PTR [ecx+0x1006f468],dl
10040fca:	jne    0x10040fb4
10040fcc:	cmp    BYTE PTR [esi],0x29
10040fcf:	jne    0x10041d26
10040fd5:	cmp    eax,0xff
10040fda:	jg     0x10041d35
10040fe0:	mov    BYTE PTR [edi],al
10040fe2:	mov    ecx,DWORD PTR [esp+0x10]
10040fe6:	mov    eax,DWORD PTR [esp+0x18]
10040fea:	sub    ecx,DWORD PTR [eax+0x18]
10040fed:	add    edi,ebx
10040fef:	add    ecx,ebx
10040ff1:	sar    ecx,0x8
10040ff4:	mov    BYTE PTR [edi],cl
10040ff6:	mov    cl,BYTE PTR [esp+0x10]
10040ffa:	sub    cl,BYTE PTR [eax+0x18]
10040ffd:	mov    BYTE PTR [edi+0x2],0x0
10041001:	add    cl,bl
10041003:	mov    BYTE PTR [edi+0x1],cl
10041006:	mov    BYTE PTR [edi+0x3],0x0
1004100a:	add    edi,edx
1004100c:	mov    DWORD PTR [esp+0x14],edi
10041010:	mov    DWORD PTR [esp+0x2c],0x0
10041018:	jmp    0x10041b43
1004101d:	add    esi,ebx
1004101f:	mov    DWORD PTR [esp+0x10],esi
10041023:	mov    al,BYTE PTR [esi]
10041025:	cmp    al,0x3d
10041027:	je     0x10041044
10041029:	cmp    al,0x3e
1004102b:	je     0x10041044
1004102d:	cmp    al,0x3c
1004102f:	je     0x10040ec8
10041035:	mov    eax,DWORD PTR [esp+0x20]
10041039:	mov    DWORD PTR [eax],0x29
1004103f:	jmp    0x10040abd
10041044:	xor    edx,edx
10041046:	cmp    al,0x3e
10041048:	sete   dl
1004104b:	mov    ebp,0x29
10041050:	mov    DWORD PTR [esp+0x28],edx
10041054:	jmp    0x10041825
10041059:	mov    eax,DWORD PTR [esp+0x18]
1004105d:	mov    ebx,DWORD PTR [eax+0x24]
10041060:	mov    eax,DWORD PTR [eax+0x28]
10041063:	test   eax,eax
10041065:	mov    DWORD PTR [esp+0x3c],0x0
1004106d:	mov    DWORD PTR [esp+0x8c],eax
10041074:	jle    0x10041177
1004107a:	lea    ebx,[ebx+0x0]
10041080:	cmp    edi,0x4
10041083:	mov    edx,DWORD PTR [esp+0x2c]
10041087:	mov    eax,edi
10041089:	lea    ecx,[ebx+0x2]
1004108c:	jb     0x100410a4
1004108e:	mov    edi,edi
10041090:	mov    ebp,DWORD PTR [edx]
10041092:	cmp    ebp,DWORD PTR [ecx]
10041094:	jne    0x100410ac
10041096:	sub    eax,0x4
10041099:	add    ecx,0x4
1004109c:	add    edx,0x4
1004109f:	cmp    eax,0x4
100410a2:	jae    0x10041090
100410a4:	test   eax,eax
100410a6:	je     0x10041111
100410ac:	movzx  edi,BYTE PTR [edx]
100410af:	movzx  ebp,BYTE PTR [ecx]
100410b2:	sub    edi,ebp
100410b4:	jne    0x100410fb
100410b6:	sub    eax,0x1
100410b9:	add    ecx,0x1
100410bc:	add    edx,0x1
100410bf:	test   eax,eax
100410c1:	je     0x1004110d
100410c3:	movzx  edi,BYTE PTR [edx]
100410c6:	movzx  ebp,BYTE PTR [ecx]
100410c9:	sub    edi,ebp
100410cb:	jne    0x100410fb
100410cd:	sub    eax,0x1
100410d0:	add    ecx,0x1
100410d3:	add    edx,0x1
100410d6:	test   eax,eax
100410d8:	je     0x1004110d
100410da:	movzx  edi,BYTE PTR [edx]
100410dd:	movzx  ebp,BYTE PTR [ecx]
100410e0:	sub    edi,ebp
100410e2:	jne    0x100410fb
100410e4:	sub    eax,0x1
100410e7:	add    ecx,0x1
100410ea:	add    edx,0x1
100410ed:	test   eax,eax
100410ef:	je     0x1004110d
100410f1:	movzx  edi,BYTE PTR [edx]
100410f4:	movzx  eax,BYTE PTR [ecx]
100410f7:	sub    edi,eax
100410f9:	je     0x1004110d
100410fb:	test   edi,edi
100410fd:	mov    edi,DWORD PTR [esp+0x28]
10041101:	mov    eax,0x1
10041106:	jg     0x10041113
10041108:	or     eax,0xffffffff
1004110b:	jmp    0x10041113
1004110d:	mov    edi,DWORD PTR [esp+0x28]
10041111:	xor    eax,eax
10041113:	test   eax,eax
10041115:	jne    0x10041136
10041117:	cmp    BYTE PTR [ebx+edi*1+0x2],al
1004111b:	jne    0x10041155
1004111d:	test   DWORD PTR [esp+0x34],0x80000
10041125:	jne    0x10041138
10041127:	mov    ecx,DWORD PTR [esp+0x20]
1004112b:	mov    DWORD PTR [ecx],0x2b
10041131:	jmp    0x10040abd
10041136:	jl     0x10041155
10041138:	mov    eax,DWORD PTR [esp+0x3c]
1004113c:	mov    ecx,DWORD PTR [esp+0x18]
10041140:	add    ebx,DWORD PTR [ecx+0x2c]
10041143:	add    eax,0x1
10041146:	cmp    eax,DWORD PTR [ecx+0x28]
10041149:	mov    DWORD PTR [esp+0x3c],eax
1004114d:	jl     0x10041080
10041153:	jmp    0x10041177
10041155:	mov    ecx,DWORD PTR [esp+0x18]
10041159:	mov    eax,DWORD PTR [ecx+0x2c]
1004115c:	mov    ecx,DWORD PTR [esp+0x8c]
10041163:	sub    ecx,DWORD PTR [esp+0x3c]
10041167:	imul   ecx,eax
1004116a:	push   ecx
1004116b:	add    eax,ebx
1004116d:	push   ebx
1004116e:	push   eax
1004116f:	call   0x10045960
10041174:	add    esp,0xc
10041177:	mov    eax,DWORD PTR [esp+0x18]
1004117b:	mov    edx,DWORD PTR [eax+0x30]
1004117e:	mov    ecx,DWORD PTR [esp+0x2c]
10041182:	add    edx,0x1
10041185:	sar    edx,0x8
10041188:	mov    BYTE PTR [ebx],dl
1004118a:	mov    al,BYTE PTR [eax+0x30]
1004118d:	push   edi
1004118e:	push   ecx
1004118f:	lea    edx,[ebx+0x2]
10041192:	add    al,0x1
10041194:	push   edx
10041195:	mov    BYTE PTR [ebx+0x1],al
10041198:	call   0x10045420
1004119d:	mov    ecx,DWORD PTR [esp+0x24]
100411a1:	mov    BYTE PTR [ebx+edi*1+0x2],0x0
100411a6:	mov    esi,DWORD PTR [esp+0x1c]
100411aa:	add    esp,0xc
100411ad:	mov    edi,DWORD PTR [esp+0x18]
100411b1:	add    esi,0x1
100411b4:	add    DWORD PTR [ecx+0x28],0x1
100411b8:	mov    DWORD PTR [esp+0x10],esi
100411bc:	add    DWORD PTR [edi+0x30],0x1
100411c0:	mov    ecx,DWORD PTR [edi+0x30]
100411c3:	mov    eax,DWORD PTR [esp+0x14]
100411c7:	sar    ecx,0x8
100411ca:	mov    BYTE PTR [eax+0x3],cl
100411cd:	mov    dl,BYTE PTR [edi+0x30]
100411d0:	mov    BYTE PTR [eax+0x4],dl
100411d3:	mov    DWORD PTR [esp+0x28],0x2
100411db:	jmp    0x1004159f
100411e0:	mov    ebp,0x29
100411e5:	mov    DWORD PTR [esp+0x28],ebx
100411e9:	jmp    0x10041825
100411ee:	add    esi,ebx
100411f0:	mov    DWORD PTR [esp+0x10],esi
100411f4:	mov    ebp,0x29
100411f9:	mov    ebx,edi
100411fb:	jmp    0x1004138b
10041200:	test   edx,0x1000
10041206:	je     0x100411bc
10041208:	mov    DWORD PTR [esp+0x24],0x5e
10041210:	jmp    0x1004159f
10041215:	mov    ebx,DWORD PTR [esp+0x20]
10041219:	mov    DWORD PTR [esp+0x7c],esi
1004121d:	mov    esi,DWORD PTR [esp+0x18]
10041221:	mov    eax,DWORD PTR [esi+0x30]
10041224:	xor    edi,edi
10041226:	push   edi
10041227:	push   eax
10041228:	mov    eax,DWORD PTR [esp+0x3c]
1004122c:	lea    ecx,[esp+0x18]
10041230:	push   ebx
10041231:	push   ecx
10041232:	call   0x1003ddb0
10041237:	add    esp,0x10
1004123a:	cmp    DWORD PTR [ebx],edi
1004123c:	jne    0x10040ab9
10041242:	cmp    eax,edi
10041244:	jge    0x1003f51e
1004124a:	mov    ecx,eax
1004124c:	neg    ecx
1004124e:	cmp    ecx,0x1a
10041251:	jne    0x10041278
10041253:	mov    esi,DWORD PTR [esp+0x10]
10041257:	cmp    BYTE PTR [esi+0x1],0x5c
1004125b:	jne    0x1004126b
1004125d:	cmp    BYTE PTR [esi+0x2],0x45
10041261:	jne    0x1004126b
10041263:	add    esi,0x2
10041266:	jmp    0x10041b47
1004126b:	mov    DWORD PTR [esp+0x50],0x1
10041273:	jmp    0x10041b47
10041278:	cmp    ecx,0x19
1004127b:	je     0x10041b43
10041281:	mov    edx,DWORD PTR [esp+0x30]
10041285:	cmp    edx,0xfffffffe
10041288:	jne    0x1004129b
1004128a:	cmp    ecx,0x5
1004128d:	jle    0x1004129b
1004128f:	cmp    ecx,0x17
10041292:	jge    0x1004129b
10041294:	or     edx,0xffffffff
10041297:	mov    DWORD PTR [esp+0x30],edx
1004129b:	cmp    ecx,0x1b
1004129e:	mov    DWORD PTR [esp+0x5c],edx
100412a2:	mov    edx,DWORD PTR [esp+0x4c]
100412a6:	mov    DWORD PTR [esp+0x68],edx
100412aa:	jne    0x100417d8
100412b0:	mov    eax,DWORD PTR [esi+0x20]
100412b3:	mov    esi,DWORD PTR [esp+0x10]
100412b7:	add    esi,0x1
100412ba:	mov    DWORD PTR [esp+0x10],esi
100412be:	mov    cl,BYTE PTR [esi]
100412c0:	sub    cl,0x3c
100412c3:	neg    cl
100412c5:	lea    edx,[esi+0x1]
100412c8:	mov    DWORD PTR [esp+0x64],eax
100412cc:	mov    al,BYTE PTR [edx]
100412ce:	mov    DWORD PTR [esp+0x28],edi
100412d2:	mov    DWORD PTR [esp+0x58],edi
100412d6:	sbb    ecx,ecx
100412d8:	and    ecx,0xffffffe9
100412db:	add    ecx,0x3e
100412de:	cmp    al,0x2b
100412e0:	mov    ebp,ecx
100412e2:	je     0x10041345
100412e4:	cmp    al,0x2d
100412e6:	je     0x10041345
100412e8:	mov    ecx,edx
100412ea:	mov    al,BYTE PTR [ecx]
100412ec:	test   al,al
100412ee:	mov    edi,0x1
100412f3:	je     0x1004131a
100412f5:	movzx  eax,al
100412f8:	cmp    eax,ebp
100412fa:	je     0x1004131a
100412fc:	mov    ebx,DWORD PTR [esp+0x18]
10041300:	mov    ebx,DWORD PTR [ebx+0xc]
10041303:	mov    al,BYTE PTR [eax+ebx*1]
10041306:	test   al,0x4
10041308:	jne    0x1004130c
1004130a:	xor    edi,edi
1004130c:	test   al,0x10
1004130e:	je     0x1004131a
10041310:	mov    al,BYTE PTR [ecx+0x1]
10041313:	add    ecx,0x1
10041316:	test   al,al
10041318:	jne    0x100412f5
1004131a:	movzx  eax,BYTE PTR [ecx]
1004131d:	cmp    eax,ebp
1004131f:	mov    ebx,DWORD PTR [esp+0x18]
10041323:	je     0x10041334
10041325:	mov    ecx,DWORD PTR [esp+0x20]
10041329:	mov    DWORD PTR [ecx],0x39
1004132f:	jmp    0x10041b47
10041334:	test   edi,edi
10041336:	jne    0x10041385
10041338:	mov    DWORD PTR [esp+0x28],0x1
10041340:	jmp    0x10041821
10041345:	movzx  edi,BYTE PTR [esi+0x2]
10041349:	lea    eax,[esi+0x2]
1004134c:	mov    cl,0x4
1004134e:	test   BYTE PTR [edi+0x1006f468],cl
10041354:	je     0x1004136f
10041356:	jmp    0x10041360
10041358:	lea    esp,[esp+0x0]
1004135f:	nop
10041360:	movzx  edi,BYTE PTR [eax+0x1]
10041364:	add    eax,0x1
10041367:	test   BYTE PTR [edi+0x1006f468],cl
1004136d:	jne    0x10041360
1004136f:	movzx  eax,BYTE PTR [eax]
10041372:	cmp    eax,ebp
10041374:	je     0x10041381
10041376:	mov    DWORD PTR [ebx],0x39
1004137c:	jmp    0x10041b47
10041381:	mov    ebx,DWORD PTR [esp+0x18]
10041385:	mov    esi,edx
10041387:	mov    DWORD PTR [esp+0x10],esi
1004138b:	mov    al,BYTE PTR [esi]
1004138d:	movzx  edx,al
10041390:	cmp    edx,0x2b
10041393:	jne    0x100413b7
10041395:	add    esi,0x1
10041398:	mov    DWORD PTR [esp+0x10],esi
1004139c:	movzx  ecx,BYTE PTR [esi]
1004139f:	test   BYTE PTR [ecx+0x1006f468],0x4
100413a6:	jne    0x100413d4
100413a8:	mov    edx,DWORD PTR [esp+0x20]
100413ac:	mov    DWORD PTR [edx],0x3f
100413b2:	jmp    0x10040abd
100413b7:	cmp    edx,0x2d
100413ba:	jne    0x100413d4
100413bc:	movzx  ecx,BYTE PTR [esi+0x1]
100413c0:	test   BYTE PTR [ecx+0x1006f468],0x4
100413c7:	je     0x1004145d
100413cd:	add    esi,0x1
100413d0:	mov    DWORD PTR [esp+0x10],esi
100413d4:	movzx  eax,BYTE PTR [esi]
100413d7:	test   BYTE PTR [eax+0x1006f468],0x4
100413de:	mov    DWORD PTR [esp+0x1c],0x0
100413e6:	je     0x10041412
100413e8:	jmp    0x100413f0
100413ea:	lea    ebx,[ebx+0x0]
100413f0:	mov    ecx,DWORD PTR [esp+0x1c]
100413f4:	lea    ecx,[ecx+ecx*4]
100413f7:	add    esi,0x1
100413fa:	lea    eax,[eax+ecx*2-0x30]
100413fe:	mov    DWORD PTR [esp+0x1c],eax
10041402:	mov    DWORD PTR [esp+0x10],esi
10041406:	movzx  eax,BYTE PTR [esi]
10041409:	test   BYTE PTR [eax+0x1006f468],0x4
10041410:	jne    0x100413f0
10041412:	movzx  ecx,BYTE PTR [esi]
10041415:	cmp    ecx,ebp
10041417:	jne    0x10041da4
1004141d:	cmp    edx,0x2d
10041420:	jne    0x100417b3
10041426:	mov    eax,DWORD PTR [esp+0x1c]
1004142a:	test   eax,eax
1004142c:	je     0x10041db3
10041432:	mov    edx,DWORD PTR [esp+0x18]
10041436:	mov    ecx,DWORD PTR [edx+0x30]
10041439:	sub    ecx,eax
1004143b:	add    ecx,0x1
1004143e:	mov    eax,ecx
10041440:	test   eax,eax
10041442:	mov    DWORD PTR [esp+0x1c],eax
10041446:	jg     0x10041912
1004144c:	mov    eax,DWORD PTR [esp+0x20]
10041450:	mov    DWORD PTR [eax],0xf
10041456:	jmp    0x10040abd
1004145b:	mov    ebx,edi
1004145d:	xor    edi,edi
1004145f:	xor    edx,edx
10041461:	cmp    al,0x29
10041463:	mov    DWORD PTR [esp+0x3c],edi
10041467:	mov    DWORD PTR [esp+0x54],edx
1004146b:	lea    ecx,[esp+0x54]
1004146f:	je     0x100414dc
10041471:	mov    edx,0x10
10041476:	cmp    al,0x3a
10041478:	je     0x100414d4
1004147a:	movzx  eax,al
1004147d:	add    esi,0x1
10041480:	sub    eax,0x2d
10041483:	cmp    eax,0x4b
10041486:	mov    DWORD PTR [esp+0x10],esi
1004148a:	ja     0x10041d62
10041490:	movzx  eax,BYTE PTR [eax+0x10041fec]
10041497:	jmp    DWORD PTR [eax*4+0x10041fc8]
1004149e:	lea    ecx,[esp+0x3c]
100414a2:	jmp    0x100414ce
100414a4:	or     DWORD PTR [ecx],0x80000
100414aa:	or     DWORD PTR [ebx+0x44],edx
100414ad:	jmp    0x100414ce
100414af:	or     DWORD PTR [ecx],0x1
100414b2:	jmp    0x100414ce
100414b4:	or     DWORD PTR [ecx],0x2
100414b7:	jmp    0x100414ce
100414b9:	or     DWORD PTR [ecx],0x4
100414bc:	jmp    0x100414ce
100414be:	or     DWORD PTR [ecx],0x8
100414c1:	jmp    0x100414ce
100414c3:	or     DWORD PTR [ecx],0x200
100414c9:	jmp    0x100414ce
100414cb:	or     DWORD PTR [ecx],0x40
100414ce:	mov    al,BYTE PTR [esi]
100414d0:	cmp    al,0x29
100414d2:	jne    0x10041476
100414d4:	mov    edx,DWORD PTR [esp+0x54]
100414d8:	mov    edi,DWORD PTR [esp+0x3c]
100414dc:	mov    ebp,DWORD PTR [esp+0x34]
100414e0:	or     edx,ebp
100414e2:	not    edi
100414e4:	and    edx,edi
100414e6:	cmp    BYTE PTR [esi],0x29
100414e9:	mov    eax,edx
100414eb:	mov    DWORD PTR [esp+0x60],eax
100414ef:	jne    0x10041590
100414f5:	mov    edx,DWORD PTR [ebx+0x14]
100414f8:	mov    ecx,DWORD PTR [esp+0x14]
100414fc:	add    edx,0x3
100414ff:	cmp    ecx,edx
10041501:	jne    0x1004152d
10041503:	mov    edx,DWORD PTR [esp+0x38]
10041507:	test   edx,edx
10041509:	je     0x10041510
1004150b:	cmp    DWORD PTR [edx],0x6
1004150e:	jne    0x1004152d
10041510:	mov    ecx,DWORD PTR [esp+0xa8]
10041517:	mov    DWORD PTR [ebx+0x40],eax
1004151a:	mov    DWORD PTR [esp+0x34],eax
1004151e:	mov    DWORD PTR [ecx],eax
10041520:	mov    DWORD PTR [esp+0x2c],0x0
10041528:	jmp    0x10041b47
1004152d:	mov    edx,eax
1004152f:	xor    edx,ebp
10041531:	test   dl,0x7
10041534:	je     0x1004154e
10041536:	mov    BYTE PTR [ecx],0x19
10041539:	mov    dl,al
1004153b:	add    ecx,0x1
1004153e:	and    dl,0x7
10041541:	mov    BYTE PTR [ecx],dl
10041543:	mov    esi,DWORD PTR [esp+0x10]
10041547:	add    ecx,0x1
1004154a:	mov    DWORD PTR [esp+0x14],ecx
1004154e:	mov    ecx,eax
10041550:	shr    ecx,0x9
10041553:	and    ecx,0x1
10041556:	mov    DWORD PTR [esp+0xa4],ecx
1004155d:	xor    ecx,0x1
10041560:	mov    DWORD PTR [esp+0xa0],ecx
10041567:	mov    ecx,eax
10041569:	and    ecx,0x1
1004156c:	shl    ecx,0x8
1004156f:	mov    DWORD PTR [esp+0x84],ecx
10041576:	mov    ecx,DWORD PTR [esp+0xa8]
1004157d:	mov    DWORD PTR [esp+0x34],eax
10041581:	mov    DWORD PTR [ecx],eax
10041583:	mov    DWORD PTR [esp+0x2c],0x0
1004158b:	jmp    0x10041b47
10041590:	add    esi,0x1
10041593:	mov    DWORD PTR [esp+0x24],0x5e
1004159b:	mov    DWORD PTR [esp+0x10],esi
1004159f:	mov    eax,DWORD PTR [esp+0x24]
100415a3:	mov    ebx,DWORD PTR [esp+0x14]
100415a7:	mov    ecx,DWORD PTR [esp+0x18]
100415ab:	xor    edx,edx
100415ad:	cmp    eax,0x5d
100415b0:	setl   dl
100415b3:	mov    BYTE PTR [ebx],al
100415b5:	mov    edi,DWORD PTR [ecx+0x48]
100415b8:	mov    DWORD PTR [esp+0x44],ebx
100415bc:	mov    DWORD PTR [esp+0x6c],0x0
100415c4:	sub    edx,0x1
100415c7:	and    edx,ebx
100415c9:	cmp    eax,0x5a
100415cc:	mov    DWORD PTR [esp+0x2c],edx
100415d0:	je     0x100415db
100415d2:	cmp    eax,0x5b
100415d5:	je     0x100415db
100415d7:	xor    eax,eax
100415d9:	jmp    0x100415e0
100415db:	mov    eax,0x1
100415e0:	mov    esi,DWORD PTR [esp+0x38]
100415e4:	mov    ebp,DWORD PTR [esp+0x20]
100415e8:	mov    edx,esi
100415ea:	neg    edx
100415ec:	sbb    edx,edx
100415ee:	lea    ecx,[esp+0x6c]
100415f2:	and    edx,ecx
100415f4:	mov    ecx,DWORD PTR [esp+0x98]
100415fb:	push   edx
100415fc:	mov    edx,DWORD PTR [esp+0x1c]
10041600:	push   edx
10041601:	push   ecx
10041602:	lea    edx,[esp+0x84]
10041609:	push   edx
1004160a:	mov    edx,DWORD PTR [esp+0x38]
1004160e:	lea    ecx,[esp+0xa0]
10041615:	push   ecx
10041616:	mov    ecx,DWORD PTR [esp+0x6c]
1004161a:	push   edx
1004161b:	push   ecx
1004161c:	mov    ecx,DWORD PTR [esp+0x50]
10041620:	push   eax
10041621:	push   ebp
10041622:	lea    edx,[esp+0x34]
10041626:	push   edx
10041627:	mov    edx,DWORD PTR [esp+0x88]
1004162e:	lea    eax,[esp+0x6c]
10041632:	push   eax
10041633:	and    ecx,0x7
10041636:	push   ecx
10041637:	push   edx
10041638:	call   0x10042040
1004163d:	add    esp,0x34
10041640:	test   eax,eax
10041642:	je     0x10040ab9
10041648:	cmp    DWORD PTR [esp+0x24],0x60
1004164d:	jne    0x10041680
1004164f:	test   esi,esi
10041651:	jne    0x10041680
10041653:	mov    eax,ebx
10041655:	xor    ecx,ecx
10041657:	xor    edx,edx
10041659:	mov    dh,BYTE PTR [eax+0x1]
1004165c:	add    ecx,0x1
1004165f:	mov    dl,BYTE PTR [eax+0x2]
10041662:	add    eax,edx
10041664:	cmp    BYTE PTR [eax],0x55
10041667:	jne    0x10041657
10041669:	cmp    BYTE PTR [ebx+0x3],0x66
1004166d:	jne    0x100416eb
1004166f:	cmp    ecx,0x1
10041672:	jg     0x10041d74
10041678:	mov    DWORD PTR [esp+0x24],0x66
10041680:	mov    eax,DWORD PTR [esp+0x90]
10041687:	mov    ecx,DWORD PTR [esp+0x78]
1004168b:	mov    esi,DWORD PTR [esp+0x10]
1004168f:	cmp    BYTE PTR [esi],0x29
10041692:	jne    0x10041d8c
10041698:	mov    edx,DWORD PTR [esp+0x38]
1004169c:	test   edx,edx
1004169e:	je     0x1004170f
100416a0:	mov    eax,DWORD PTR [edx]
100416a2:	mov    ecx,DWORD PTR [esp+0x6c]
100416a6:	mov    edx,0x7fffffeb
100416ab:	sub    edx,eax
100416ad:	lea    edi,[ecx-0x6]
100416b0:	cmp    edx,edi
100416b2:	jl     0x10041d98
100416b8:	lea    eax,[eax+ecx*1-0x6]
100416bc:	mov    ecx,DWORD PTR [esp+0x38]
100416c0:	mov    DWORD PTR [ecx],eax
100416c2:	mov    BYTE PTR [ebx],0x5e
100416c5:	add    ebx,0x1
100416c8:	mov    BYTE PTR [ebx],0x0
100416cb:	mov    BYTE PTR [ebx+0x1],0x3
100416cf:	add    ebx,0x2
100416d2:	mov    BYTE PTR [ebx],0x55
100416d5:	add    ebx,0x1
100416d8:	mov    BYTE PTR [ebx],0x0
100416db:	mov    BYTE PTR [ebx+0x1],0x3
100416df:	add    ebx,0x2
100416e2:	mov    DWORD PTR [esp+0x14],ebx
100416e6:	jmp    0x10041b43
100416eb:	cmp    ecx,0x2
100416ee:	jg     0x10041d80
100416f4:	cmp    ecx,0x1
100416f7:	jne    0x10041680
100416f9:	or     ecx,0xffffffff
100416fc:	or     eax,0xffffffff
100416ff:	mov    DWORD PTR [esp+0x78],ecx
10041703:	mov    DWORD PTR [esp+0x90],eax
1004170a:	jmp    0x1004168b
1004170f:	mov    edx,DWORD PTR [esp+0x44]
10041713:	mov    DWORD PTR [esp+0x14],edx
10041717:	mov    edx,DWORD PTR [esp+0x24]
1004171b:	cmp    edx,0x66
1004171e:	je     0x10041b47
10041724:	cmp    edx,0x5d
10041727:	mov    ebx,DWORD PTR [esp+0x4c]
1004172b:	mov    ebp,DWORD PTR [esp+0x30]
1004172f:	mov    DWORD PTR [esp+0x68],ebx
10041733:	mov    DWORD PTR [esp+0x5c],ebp
10041737:	mov    DWORD PTR [esp+0x88],0x0
10041742:	jl     0x10041799
10041744:	cmp    ebp,0xfffffffe
10041747:	jne    0x10041778
10041749:	test   eax,eax
1004174b:	jl     0x10041766
1004174d:	mov    DWORD PTR [esp+0x30],eax
10041751:	mov    DWORD PTR [esp+0x88],0x1
1004175c:	mov    DWORD PTR [esp+0x5c],0xffffffff
10041764:	jmp    0x10041788
10041766:	mov    DWORD PTR [esp+0x30],0xffffffff
1004176e:	mov    DWORD PTR [esp+0x5c],0xffffffff
10041776:	jmp    0x10041788
10041778:	test   eax,eax
1004177a:	jl     0x10041788
1004177c:	test   ecx,ecx
1004177e:	jge    0x10041790
10041780:	or     eax,edi
10041782:	mov    ecx,eax
10041784:	mov    DWORD PTR [esp+0x78],ecx
10041788:	test   ecx,ecx
1004178a:	jl     0x10041b47
10041790:	mov    DWORD PTR [esp+0x4c],ecx
10041794:	jmp    0x10041b47
10041799:	cmp    edx,0x58
1004179c:	jne    0x10041b47
100417a2:	test   ecx,ecx
100417a4:	jl     0x10041b47
100417aa:	mov    DWORD PTR [esp+0x4c],ecx
100417ae:	jmp    0x10041b47
100417b3:	cmp    edx,0x2b
100417b6:	jne    0x10041912
100417bc:	mov    eax,DWORD PTR [esp+0x1c]
100417c0:	test   eax,eax
100417c2:	je     0x10041cc4
100417c8:	mov    edx,DWORD PTR [esp+0x18]
100417cc:	add    eax,DWORD PTR [edx+0x30]
100417cf:	mov    DWORD PTR [esp+0x1c],eax
100417d3:	jmp    0x10041912
100417d8:	cmp    ecx,0x1c
100417db:	mov    esi,DWORD PTR [esp+0x10]
100417df:	jne    0x10041a45
100417e5:	mov    dl,BYTE PTR [esi+0x1]
100417e8:	cmp    dl,0x3c
100417eb:	je     0x100417fb
100417ed:	cmp    dl,0x27
100417f0:	je     0x100417fb
100417f2:	cmp    dl,0x7b
100417f5:	jne    0x10041a45
100417fb:	add    esi,0x1
100417fe:	mov    DWORD PTR [esp+0x10],esi
10041802:	mov    al,BYTE PTR [esi]
10041804:	cmp    al,0x3c
10041806:	mov    DWORD PTR [esp+0x28],edi
1004180a:	jne    0x10041813
1004180c:	mov    ebp,0x3e
10041811:	jmp    0x10041821
10041813:	sub    al,0x27
10041815:	neg    al
10041817:	sbb    eax,eax
10041819:	and    eax,0x56
1004181c:	add    eax,0x27
1004181f:	mov    ebp,eax
10041821:	mov    edi,DWORD PTR [esp+0x18]
10041825:	mov    edx,DWORD PTR [edi+0xc]
10041828:	add    esi,0x1
1004182b:	mov    DWORD PTR [esp+0x10],esi
1004182f:	movzx  eax,BYTE PTR [esi]
10041832:	test   BYTE PTR [eax+edx*1],0x10
10041836:	mov    ecx,esi
10041838:	mov    DWORD PTR [esp+0x2c],ecx
1004183c:	je     0x10041850
1004183e:	mov    eax,edx
10041840:	add    esi,0x1
10041843:	mov    DWORD PTR [esp+0x10],esi
10041847:	movzx  edx,BYTE PTR [esi]
1004184a:	test   BYTE PTR [edx+eax*1],0x10
1004184e:	jne    0x10041840
10041850:	mov    ebx,esi
10041852:	sub    ebx,ecx
10041854:	cmp    DWORD PTR [esp+0x38],0x0
10041859:	je     0x10041888
1004185b:	test   ebx,ebx
1004185d:	je     0x10041dc2
10041863:	movzx  eax,BYTE PTR [esi]
10041866:	cmp    eax,ebp
10041868:	jne    0x10041dd1
1004186e:	cmp    ebx,0x20
10041871:	jg     0x10041de0
10041877:	mov    edi,DWORD PTR [esp+0x18]
1004187b:	mov    DWORD PTR [esp+0x1c],0x0
10041883:	jmp    0x10041903
10041888:	mov    eax,DWORD PTR [esp+0x18]
1004188c:	mov    edi,DWORD PTR [eax+0x24]
1004188f:	xor    ebp,ebp
10041891:	cmp    DWORD PTR [eax+0x28],ebp
10041894:	jle    0x100418c3
10041896:	mov    esi,eax
10041898:	mov    edx,DWORD PTR [esp+0x2c]
1004189c:	push   ebx
1004189d:	lea    ecx,[edi+0x2]
100418a0:	push   ecx
100418a1:	push   edx
100418a2:	call   0x1004f3a6
100418a7:	add    esp,0xc
100418aa:	test   eax,eax
100418ac:	jne    0x100418b4
100418ae:	cmp    BYTE PTR [edi+ebx*1+0x2],al
100418b2:	je     0x100418bf
100418b4:	add    edi,DWORD PTR [esi+0x2c]
100418b7:	add    ebp,0x1
100418ba:	cmp    ebp,DWORD PTR [esi+0x28]
100418bd:	jl     0x10041898
100418bf:	mov    esi,DWORD PTR [esp+0x10]
100418c3:	mov    eax,DWORD PTR [esp+0x18]
100418c7:	cmp    ebp,DWORD PTR [eax+0x28]
100418ca:	jge    0x100418da
100418cc:	movzx  ecx,BYTE PTR [edi+0x1]
100418d0:	mov    ch,BYTE PTR [edi]
100418d2:	mov    edi,eax
100418d4:	mov    DWORD PTR [esp+0x1c],ecx
100418d8:	jmp    0x10041903
100418da:	mov    edx,DWORD PTR [esp+0x34]
100418de:	shr    edx,0x3
100418e1:	and    edx,0x1
100418e4:	push   edx
100418e5:	mov    edi,eax
100418e7:	push   ebx
100418e8:	mov    ebx,DWORD PTR [esp+0x34]
100418ec:	push   edi
100418ed:	mov    eax,esi
100418ef:	call   0x1003e320
100418f4:	add    esp,0xc
100418f7:	test   eax,eax
100418f9:	mov    DWORD PTR [esp+0x1c],eax
100418fd:	jle    0x10041def
10041903:	cmp    DWORD PTR [esp+0x28],0x0
10041908:	mov    eax,DWORD PTR [esp+0x14]
1004190c:	je     0x10041a5b
10041912:	cmp    DWORD PTR [esp+0x38],0x0
10041917:	mov    edi,DWORD PTR [esp+0x14]
1004191b:	mov    ebp,DWORD PTR [esp+0x18]
1004191f:	mov    ebx,DWORD PTR [ebp+0x14]
10041922:	mov    DWORD PTR [esp+0x2c],edi
10041926:	jne    0x100419a2
1004192c:	cmp    DWORD PTR [esp+0x1c],0x0
10041931:	mov    BYTE PTR [edi],0x0
10041934:	je     0x10041944
10041936:	mov    esi,DWORD PTR [esp+0x1c]
1004193a:	mov    eax,DWORD PTR [ebp+0x14]
1004193d:	call   0x1003e820
10041942:	mov    ebx,eax
10041944:	test   ebx,ebx
10041946:	jne    0x100419fe
1004194c:	mov    eax,DWORD PTR [esp+0x34]
10041950:	mov    ecx,DWORD PTR [esp+0x1c]
10041954:	shr    eax,0x3
10041957:	and    eax,0x1
1004195a:	push   eax
1004195b:	mov    eax,DWORD PTR [esp+0x14]
1004195f:	push   ecx
10041960:	push   ebp
10041961:	call   0x1003e320
10041966:	add    esp,0xc
10041969:	test   eax,eax
1004196b:	jl     0x10041ce2
10041971:	mov    eax,DWORD PTR [ebp+0x14]
10041974:	mov    edx,DWORD PTR [esp+0x1c]
10041978:	mov    ecx,DWORD PTR [esp+0x14]
1004197c:	mov    edi,DWORD PTR [esp+0x14]
10041980:	lea    ebx,[eax+edx*1]
10041983:	mov    edx,ecx
10041985:	sub    edx,eax
10041987:	mov    eax,DWORD PTR [ebp+0x20]
1004198a:	add    edx,0x4
1004198d:	sar    edx,0x8
10041990:	mov    BYTE PTR [eax],dl
10041992:	sub    cl,BYTE PTR [ebp+0x14]
10041995:	mov    edx,DWORD PTR [ebp+0x20]
10041998:	add    cl,0x4
1004199b:	mov    BYTE PTR [edx+0x1],cl
1004199e:	add    DWORD PTR [ebp+0x20],0x2
100419a2:	mov    BYTE PTR [edi],0x5d
100419a5:	mov    BYTE PTR [edi+0x1],0x0
100419a9:	add    edi,0x3
100419ac:	mov    al,0x6
100419ae:	mov    BYTE PTR [edi-0x1],al
100419b1:	mov    BYTE PTR [edi],0x52
100419b4:	mov    ecx,ebx
100419b6:	sub    ecx,DWORD PTR [ebp+0x14]
100419b9:	add    edi,0x3
100419bc:	sar    ecx,0x8
100419bf:	mov    BYTE PTR [edi-0x2],cl
100419c2:	sub    bl,BYTE PTR [ebp+0x14]
100419c5:	add    edi,0x3
100419c8:	cmp    DWORD PTR [esp+0x30],0xfffffffe
100419cd:	mov    BYTE PTR [edi-0x4],bl
100419d0:	mov    BYTE PTR [edi-0x3],0x55
100419d4:	mov    BYTE PTR [edi-0x2],0x0
100419d8:	mov    BYTE PTR [edi-0x1],al
100419db:	mov    esi,DWORD PTR [esp+0x10]
100419df:	mov    DWORD PTR [esp+0x14],edi
100419e3:	mov    DWORD PTR [esp+0x6c],0x9
100419eb:	jne    0x10041b47
100419f1:	mov    DWORD PTR [esp+0x30],0xffffffff
100419f9:	jmp    0x10041b47
100419fe:	xor    eax,eax
10041a00:	mov    ah,BYTE PTR [ebx+0x1]
10041a03:	mov    al,BYTE PTR [ebx+0x2]
10041a06:	test   eax,eax
10041a08:	jne    0x100419a2
10041a0a:	mov    esi,DWORD PTR [esp+0x98]
10041a11:	test   esi,esi
10041a13:	je     0x10041a36
10041a15:	mov    eax,DWORD PTR [esi+0x4]
10041a18:	cmp    eax,ebx
10041a1a:	jb     0x10041a36
10041a1c:	push   0x0
10041a1e:	push   edi
10041a1f:	push   eax
10041a20:	call   0x1003e930
10041a25:	add    esp,0xc
10041a28:	test   eax,eax
10041a2a:	je     0x100419a2
10041a30:	mov    esi,DWORD PTR [esi]
10041a32:	test   esi,esi
10041a34:	jne    0x10041a15
10041a36:	mov    ecx,DWORD PTR [esp+0x20]
10041a3a:	mov    DWORD PTR [ecx],0x28
10041a40:	jmp    0x10040ab9
10041a45:	cmp    ecx,0x1d
10041a48:	jl     0x10041aa9
10041a4a:	mov    edi,DWORD PTR [esp+0x18]
10041a4e:	mov    ecx,0xffffffe3
10041a53:	sub    ecx,eax
10041a55:	mov    eax,DWORD PTR [esp+0x14]
10041a59:	jmp    0x10041a5f
10041a5b:	mov    ecx,DWORD PTR [esp+0x1c]
10041a5f:	cmp    DWORD PTR [esp+0x30],0xfffffffe
10041a64:	jne    0x10041a6e
10041a66:	mov    DWORD PTR [esp+0x30],0xffffffff
10041a6e:	mov    BYTE PTR [eax],0x51
10041a71:	mov    DWORD PTR [esp+0x2c],eax
10041a75:	add    eax,0x1
10041a78:	mov    edx,ecx
10041a7a:	sar    edx,0x8
10041a7d:	mov    BYTE PTR [eax],dl
10041a7f:	mov    BYTE PTR [eax+0x1],cl
10041a82:	add    eax,0x2
10041a85:	cmp    ecx,0x20
10041a88:	mov    DWORD PTR [esp+0x14],eax
10041a8c:	mov    eax,0x1
10041a91:	jge    0x10041a95
10041a93:	shl    eax,cl
10041a95:	or     DWORD PTR [edi+0x3c],eax
10041a98:	cmp    ecx,DWORD PTR [edi+0x38]
10041a9b:	jle    0x10041b43
10041aa1:	mov    DWORD PTR [edi+0x38],ecx
10041aa4:	jmp    0x10041b43
10041aa9:	cmp    ecx,0x16
10041aac:	je     0x10041dfe
10041ab2:	cmp    ecx,0xf
10041ab5:	je     0x10041dfe
10041abb:	cmp    ecx,0x10
10041abe:	je     0x10041dfe
10041ac4:	cmp    ecx,0x5
10041ac7:	jle    0x10041ae3
10041ac9:	cmp    ecx,0x17
10041acc:	jge    0x10041ae3
10041ace:	mov    ecx,DWORD PTR [esp+0x14]
10041ad2:	neg    al
10041ad4:	mov    DWORD PTR [esp+0x2c],ecx
10041ad8:	mov    BYTE PTR [ecx],al
10041ada:	add    ecx,0x1
10041add:	mov    DWORD PTR [esp+0x14],ecx
10041ae1:	jmp    0x10041b43
10041ae3:	mov    ecx,DWORD PTR [esp+0x14]
10041ae7:	neg    al
10041ae9:	mov    BYTE PTR [ecx],al
10041aeb:	add    ecx,0x1
10041aee:	mov    DWORD PTR [esp+0x2c],edi
10041af2:	mov    DWORD PTR [esp+0x14],ecx
10041af6:	jmp    0x10041b43
10041af8:	mov    edx,DWORD PTR [esp+0x18]
10041afc:	mov    esi,DWORD PTR [esp+0x30]
10041b00:	cmp    esi,0xfffffffe
10041b03:	jne    0x10041b25
10041b05:	mov    ecx,DWORD PTR [esp+0x4c]
10041b09:	movzx  eax,al
10041b0c:	or     eax,DWORD PTR [esp+0x84]
10041b13:	mov    DWORD PTR [esp+0x5c],0xffffffff
10041b1b:	mov    DWORD PTR [esp+0x68],ecx
10041b1f:	mov    DWORD PTR [esp+0x30],eax
10041b23:	jmp    0x10041b43
10041b25:	movzx  ecx,BYTE PTR [ecx-0x1]
10041b29:	or     ecx,DWORD PTR [edx+0x48]
10041b2c:	mov    eax,DWORD PTR [esp+0x4c]
10041b30:	or     ecx,DWORD PTR [esp+0x84]
10041b37:	mov    DWORD PTR [esp+0x5c],esi
10041b3b:	mov    DWORD PTR [esp+0x68],eax
10041b3f:	mov    DWORD PTR [esp+0x4c],ecx
10041b43:	mov    esi,DWORD PTR [esp+0x10]
10041b47:	mov    edi,DWORD PTR [esp+0x74]
10041b4b:	mov    ebx,DWORD PTR [esp+0xb8]
10041b52:	mov    ebp,DWORD PTR [esp+0x2c]
10041b56:	mov    edx,DWORD PTR [esp+0x14]
10041b5a:	mov    ecx,DWORD PTR [esp+0x80]
10041b61:	add    esi,0x1
10041b64:	jmp    0x1003f3ba
10041b69:	mov    edx,DWORD PTR [esp+0x20]
10041b6d:	mov    DWORD PTR [edx],0x34
10041b73:	jmp    0x10040abd
10041b78:	mov    eax,DWORD PTR [esp+0x20]
10041b7c:	mov    DWORD PTR [eax],0x14
10041b82:	jmp    0x10040abd
10041b87:	mov    ecx,DWORD PTR [esp+0x20]
10041b8b:	mov    DWORD PTR [ecx],0x34
10041b91:	jmp    0x10040abd
10041b96:	mov    edx,DWORD PTR [esp+0x30]
10041b9a:	mov    eax,DWORD PTR [esp+0xb4]
10041ba1:	mov    ecx,DWORD PTR [esp+0x4c]
10041ba5:	mov    DWORD PTR [eax],edx
10041ba7:	mov    edx,DWORD PTR [esp+0xac]
10041bae:	mov    eax,DWORD PTR [esp+0xb0]
10041bb5:	mov    DWORD PTR [edx],ecx
10041bb7:	mov    ecx,DWORD PTR [esp+0x14]
10041bbb:	mov    edx,DWORD PTR [esp+0x9c]
10041bc2:	mov    DWORD PTR [eax],ecx
10041bc4:	mov    DWORD PTR [edx],esi
10041bc6:	mov    edx,DWORD PTR [esp+0x38]
10041bca:	test   edx,edx
10041bcc:	je     0x10041bec
10041bce:	mov    eax,DWORD PTR [edx]
10041bd0:	mov    edi,DWORD PTR [esp+0x80]
10041bd7:	mov    ebx,ecx
10041bd9:	mov    ebp,0x7fffffeb
10041bde:	sub    ebx,edi
10041be0:	sub    ebp,eax
10041be2:	cmp    ebp,ebx
10041be4:	jl     0x10041b78
10041be6:	sub    eax,edi
10041be8:	add    eax,ecx
10041bea:	mov    DWORD PTR [edx],eax
10041bec:	mov    eax,0x1
10041bf1:	jmp    0x10040ac8
10041bf6:	mov    dl,BYTE PTR [esi+0x1]
10041bf9:	mov    eax,DWORD PTR [esp+0x20]
10041bfd:	sub    dl,0x3a
10041c00:	neg    dl
10041c02:	sbb    edx,edx
10041c04:	and    edx,0x12
10041c07:	add    edx,0xd
10041c0a:	mov    DWORD PTR [eax],edx
10041c0c:	jmp    0x10040abd
10041c11:	mov    ecx,DWORD PTR [esp+0x20]
10041c15:	mov    DWORD PTR [ecx],0x1f
10041c1b:	jmp    0x10040abd
10041c20:	mov    edx,DWORD PTR [esp+0x20]
10041c24:	mov    DWORD PTR [edx],0x1e
10041c2a:	jmp    0x10040ab9
10041c2f:	mov    DWORD PTR [esi],0x7
10041c35:	jmp    0x10040ab9
10041c3a:	mov    eax,DWORD PTR [esp+0x20]
10041c3e:	mov    DWORD PTR [eax],0x8
10041c44:	jmp    0x10040abd
10041c49:	mov    ecx,DWORD PTR [esp+0x20]
10041c4d:	mov    DWORD PTR [ecx],0x6
10041c53:	jmp    0x10040abd
10041c58:	mov    edx,DWORD PTR [esp+0x20]
10041c5c:	mov    DWORD PTR [edx],0x9
10041c62:	jmp    0x10040abd
10041c67:	mov    ecx,DWORD PTR [esp+0x20]
10041c6b:	mov    DWORD PTR [ecx],0x37
10041c71:	jmp    0x10040abd
10041c76:	mov    edx,DWORD PTR [esp+0x20]
10041c7a:	mov    DWORD PTR [edx],0x14
10041c80:	jmp    0x10040abd
10041c85:	mov    ecx,DWORD PTR [esp+0x20]
10041c89:	mov    DWORD PTR [ecx],0x3b
10041c8f:	jmp    0x10040abd
10041c94:	mov    edx,DWORD PTR [esp+0x20]
10041c98:	mov    DWORD PTR [edx],0x3c
10041c9e:	jmp    0x10040abd
10041ca3:	mov    edx,DWORD PTR [esp+0x20]
10041ca7:	mov    DWORD PTR [edx],0x1c
10041cad:	jmp    0x10040abd
10041cb2:	mov    eax,DWORD PTR [esp+0x20]
10041cb6:	sub    esi,0x1
10041cb9:	mov    DWORD PTR [eax],0x1a
10041cbf:	jmp    0x10040abd
10041cc4:	mov    ecx,DWORD PTR [esp+0x20]
10041cc8:	mov    DWORD PTR [ecx],0x3a
10041cce:	jmp    0x10040abd
10041cd3:	mov    edx,DWORD PTR [esp+0x20]
10041cd7:	mov    DWORD PTR [edx],0xf
10041cdd:	jmp    0x10040abd
10041ce2:	mov    eax,DWORD PTR [esp+0x20]
10041ce6:	mov    DWORD PTR [eax],0xf
10041cec:	jmp    0x10040ab9
10041cf1:	mov    ecx,DWORD PTR [esp+0x20]
10041cf5:	mov    DWORD PTR [ecx],0xf
10041cfb:	jmp    0x10040ab9
10041d00:	mov    edx,DWORD PTR [esp+0x20]
10041d04:	neg    eax
10041d06:	sbb    eax,eax
10041d08:	and    eax,0xffffffec
10041d0b:	add    eax,0x23
10041d0e:	mov    DWORD PTR [edx],eax
10041d10:	jmp    0x10040ab9
10041d15:	mov    eax,DWORD PTR [esp+0x20]
10041d19:	add    esi,ebx
10041d1b:	mov    DWORD PTR [eax],0x18
10041d21:	jmp    0x10040abd
10041d26:	mov    ecx,DWORD PTR [esp+0x20]
10041d2a:	mov    DWORD PTR [ecx],0x27
10041d30:	jmp    0x10040abd
10041d35:	mov    edx,DWORD PTR [esp+0x20]
10041d39:	mov    DWORD PTR [edx],0x26
10041d3f:	jmp    0x10040abd
10041d44:	mov    ecx,DWORD PTR [esp+0x20]
10041d48:	mov    DWORD PTR [ecx],0x2a
10041d4e:	jmp    0x10040abd
10041d53:	mov    edx,DWORD PTR [esp+0x20]
10041d57:	mov    DWORD PTR [edx],0x31
10041d5d:	jmp    0x10040abd
10041d62:	mov    eax,DWORD PTR [esp+0x20]
10041d66:	mov    DWORD PTR [eax],0xc
10041d6c:	sub    esi,0x1
10041d6f:	jmp    0x10040abd
10041d74:	mov    DWORD PTR [ebp+0x0],0x36
10041d7b:	jmp    0x10040ab9
10041d80:	mov    DWORD PTR [ebp+0x0],0x1b
10041d87:	jmp    0x10040ab9
10041d8c:	mov    DWORD PTR [ebp+0x0],0xe
10041d93:	jmp    0x10040abd
10041d98:	mov    DWORD PTR [ebp+0x0],0x14
10041d9f:	jmp    0x10040abd
10041da4:	mov    ecx,DWORD PTR [esp+0x20]
10041da8:	mov    DWORD PTR [ecx],0x1d
10041dae:	jmp    0x10040abd
10041db3:	mov    edx,DWORD PTR [esp+0x20]
10041db7:	mov    DWORD PTR [edx],0x3a
10041dbd:	jmp    0x10040abd
10041dc2:	mov    edx,DWORD PTR [esp+0x20]
10041dc6:	mov    DWORD PTR [edx],0x3e
10041dcc:	jmp    0x10040abd
10041dd1:	mov    eax,DWORD PTR [esp+0x20]
10041dd5:	mov    DWORD PTR [eax],0x2a
10041ddb:	jmp    0x10040abd
10041de0:	mov    ecx,DWORD PTR [esp+0x20]
10041de4:	mov    DWORD PTR [ecx],0x30
10041dea:	jmp    0x10040abd
10041def:	mov    edx,DWORD PTR [esp+0x20]
10041df3:	mov    DWORD PTR [edx],0xf
10041df9:	jmp    0x10040ab9
10041dfe:	mov    DWORD PTR [ebx],0x2d
10041e04:	jmp    0x10040abd
10041e09:	lea    ecx,[ecx+0x0]
10041e0c:	xchg   esi,eax
10041e0d:	sbb    eax,DWORD PTR [eax+edx*1]
10041e10:	xor    eax,0xfe1003f7
10041e15:	or     DWORD PTR [eax+edx*1],eax
10041e18:	mov    bl,0x0
10041e1a:	add    al,0x10
10041e1c:	mov    ebp,0x50100400
10041e21:	test   DWORD PTR [ebx],0x400cc10
10041e27:	adc    BYTE PTR [edi+0x151003f7],ch
10041e2d:	adc    al,BYTE PTR [eax+edx*1]
10041e30:	(bad)  
10041e31:	test   DWORD PTR [ebx],0x3f70410
10041e37:	adc    BYTE PTR [edx+0x0],bh
10041e3a:	add    al,0x10
10041e3c:	sbb    al,0xf5
10041e3e:	add    edx,DWORD PTR [eax]
10041e40:	add    BYTE PTR [esp+ecx*1],cl
10041e43:	or     al,0xc
10041e45:	or     al,0xc
10041e47:	or     al,0xc
10041e49:	or     al,0xc
10041e4b:	or     al,0xc
10041e4d:	or     al,0xc
10041e4f:	or     al,0xc
10041e51:	or     al,0xc
10041e53:	or     al,0xc
10041e55:	or     al,0xc
10041e57:	or     al,0xc
10041e59:	or     al,0xc
10041e5b:	or     al,0xc
10041e5d:	or     al,0xc
10041e5f:	or     al,0xc
10041e61:	or     al,0xc
10041e63:	or     al,0x1
10041e65:	or     al,0xc
10041e67:	or     al,0x2
10041e69:	add    BYTE PTR [ebx],al
10041e6b:	add    al,0xc
10041e6d:	or     al,0x5
10041e6f:	or     al,0xc
10041e71:	or     al,0xc
10041e73:	or     al,0xc
10041e75:	or     al,0xc
10041e77:	or     al,0xc
10041e79:	or     al,0xc
10041e7b:	or     al,0xc
10041e7d:	or     al,0xc
10041e7f:	push   es
10041e80:	or     al,0xc
10041e82:	or     al,0xc
10041e84:	or     al,0xc
10041e86:	or     al,0xc
10041e88:	or     al,0xc
10041e8a:	or     al,0xc
10041e8c:	or     al,0xc
10041e8e:	or     al,0xc
10041e90:	or     al,0xc
10041e92:	or     al,0xc
10041e94:	or     al,0xc
10041e96:	or     al,0xc
10041e98:	or     al,0xc
10041e9a:	or     al,0x7
10041e9c:	or     BYTE PTR [ecx],cl
10041e9e:	or     cl,BYTE PTR [esp+ecx*1]
10041ea1:	or     al,0xc
10041ea3:	or     al,0xc
10041ea5:	or     al,0xc
10041ea7:	or     al,0xc
10041ea9:	or     al,0xc
10041eab:	or     al,0xc
10041ead:	or     al,0xc
10041eaf:	or     al,0xc
10041eb1:	or     al,0xc
10041eb3:	or     al,0xc
10041eb5:	or     al,0xc
10041eb7:	or     al,0xc
10041eb9:	or     al,0xc
10041ebb:	or     eax,DWORD PTR [eax]
10041ebd:	lea    ecx,[ecx+0x0]
10041ec0:	mov    ebp,0x301003fb
10041ec5:	sti    
10041ec6:	add    edx,DWORD PTR [eax]
10041ec8:	jno    0x10041ec6
10041eca:	add    edx,DWORD PTR [eax]
10041ecc:	cmp    eax,0xb1003fc
10041ed1:	cld    
10041ed2:	add    edx,DWORD PTR [eax]
10041ed4:	jmp    0x409:0x4f1003fb
10041edb:	adc    BYTE PTR [edi+0x9],dl
10041ede:	add    al,0x10
10041ee0:	pop    edi
10041ee1:	or     DWORD PTR [eax+edx*1],eax
10041ee4:	or     DWORD PTR [si],eax
10041ee7:	adc    BYTE PTR [esi-0x74effbf7],al
10041eed:	or     DWORD PTR [eax+edx*1],eax
10041ef0:	nop
10041ef1:	or     DWORD PTR [eax+edx*1],eax
10041ef4:	xchg   ebp,eax
10041ef5:	or     DWORD PTR [eax+edx*1],eax
10041ef8:	outs   dx,DWORD PTR ds:[esi]
10041ef9:	or     DWORD PTR [eax+edx*1],eax
10041efc:	ja     0x10041f07
10041efe:	add    al,0x10
10041f00:	jl     0x10041f0b
10041f02:	add    al,0x10
10041f04:	or     DWORD PTR [ecx],0x99a1004
10041f0a:	add    al,0x10
10041f0c:	add    BYTE PTR [ecx+eax*1],cl
10041f0f:	or     al,0x2
10041f11:	or     al,0x3
10041f13:	or     al,0xc
10041f15:	or     al,0xc
10041f17:	or     al,0xc
10041f19:	add    al,0xc
10041f1b:	add    eax,0x70c060c
10041f20:	or     al,0xc
10041f22:	or     al,0xc
10041f24:	or     al,0xc
10041f26:	or     BYTE PTR [ecx+ecx*1],cl
10041f29:	or     al,0xa
10041f2b:	or     al,0xb
10041f2d:	lea    ecx,[ecx+0x0]
10041f30:	jne    0x10041f40
10041f32:	add    al,0x10
10041f34:	cmp    eax,0xe010040b
10041f39:	adc    DWORD PTR [eax+edx*1],eax
10041f3c:	enter  0x40e,0x10
10041f40:	test   BYTE PTR [ebx],cl
10041f42:	add    al,0x10
10041f44:	hlt    
10041f45:	adc    DWORD PTR [eax+edx*1],eax
10041f48:	jge    0x10041f55
10041f4a:	add    al,0x10
10041f4c:	mov    ds:0x6610040e,eax
10041f51:	push   cs
10041f52:	add    al,0x10
10041f54:	jne    0x10041f65
10041f56:	add    al,0x10
10041f58:	test   BYTE PTR [edi],cl
10041f5a:	add    al,0x10
10041f5c:	sbb    eax,0xee100410
10041f61:	adc    DWORD PTR [eax+edx*1],eax
10041f64:	jns    0x10041f71
10041f66:	add    al,0x10
10041f68:	pop    ebx
10041f69:	adc    al,0x4
10041f6b:	adc    BYTE PTR [eax],al
10041f6d:	push   cs
10041f6e:	add    DWORD PTR [esi],ecx
10041f70:	push   cs
10041f71:	add    al,BYTE PTR [ebx]
10041f73:	add    al,0xe
10041f75:	push   cs
10041f76:	add    eax,0xe0e050e
10041f7b:	add    eax,0x5050505
10041f80:	add    eax,0x5050505
10041f85:	push   es
10041f86:	push   cs
10041f87:	pop    es
10041f88:	or     BYTE PTR [ecx],cl
10041f8a:	push   cs
10041f8b:	push   cs
10041f8c:	push   cs
10041f8d:	push   cs
10041f8e:	or     cl,BYTE PTR [esi]
10041f90:	push   cs
10041f91:	push   cs
10041f92:	push   cs
10041f93:	push   cs
10041f94:	push   cs
10041f95:	push   cs
10041f96:	push   cs
10041f97:	push   cs
10041f98:	push   cs
10041f99:	push   cs
10041f9a:	push   cs
10041f9b:	or     ecx,DWORD PTR [esi]
10041f9d:	or     al,0xe
10041f9f:	push   cs
10041fa0:	push   cs
10041fa1:	push   cs
10041fa2:	push   cs
10041fa3:	push   cs
10041fa4:	push   cs
10041fa5:	push   cs
10041fa6:	push   cs
10041fa7:	push   cs
10041fa8:	push   cs
10041fa9:	push   cs
10041faa:	push   cs
10041fab:	push   cs
10041fac:	push   cs
10041fad:	push   cs
10041fae:	push   cs
10041faf:	push   cs
10041fb0:	push   cs
10041fb1:	push   cs
10041fb2:	push   cs
10041fb3:	push   cs
10041fb4:	push   cs
10041fb5:	push   cs
10041fb6:	push   cs
10041fb7:	push   cs
10041fb8:	push   cs
10041fb9:	push   cs
10041fba:	push   cs
10041fbb:	push   cs
10041fbc:	push   cs
10041fbd:	push   cs
10041fbe:	push   cs
10041fbf:	push   cs
10041fc0:	push   cs
10041fc1:	push   cs
10041fc2:	push   cs
10041fc3:	push   cs
10041fc4:	push   cs
10041fc5:	push   cs
10041fc6:	push   cs
10041fc7:	or     eax,0x1004149e
10041fcc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
10041fcd:	adc    al,0x4
10041fcf:	adc    bl,al
10041fd1:	adc    al,0x4
10041fd3:	adc    bl,cl
10041fd5:	adc    al,0x4
10041fd7:	adc    BYTE PTR [edi-0x4beffbec],ch
10041fdd:	adc    al,0x4
10041fdf:	adc    BYTE PTR [ecx-0x41effbec],bh
10041fe5:	adc    al,0x4
10041fe7:	adc    BYTE PTR [edx+0x1d],ah
10041fea:	add    al,0x10
10041fec:	add    BYTE PTR [eax],cl
10041fee:	or     BYTE PTR [eax],cl
10041ff0:	or     BYTE PTR [eax],cl
10041ff2:	or     BYTE PTR [eax],cl
10041ff4:	or     BYTE PTR [eax],cl
10041ff6:	or     BYTE PTR [eax],cl
10041ff8:	or     BYTE PTR [eax],cl
10041ffa:	or     BYTE PTR [eax],cl
10041ffc:	or     BYTE PTR [eax],cl
10041ffe:	or     BYTE PTR [eax],cl
10042000:	or     BYTE PTR [eax],cl
10042002:	or     BYTE PTR [eax],cl
10042004:	or     BYTE PTR [eax],cl
10042006:	or     BYTE PTR [eax],cl
10042008:	or     BYTE PTR [ecx],al
1004200a:	or     BYTE PTR [eax],cl
1004200c:	or     BYTE PTR [eax],cl
1004200e:	or     BYTE PTR [eax],cl
10042010:	or     BYTE PTR [eax],cl
10042012:	or     BYTE PTR [eax],cl
10042014:	add    cl,BYTE PTR [eax]
10042016:	or     BYTE PTR [ebx],al
10042018:	or     BYTE PTR [eax],cl
1004201a:	or     BYTE PTR [eax],cl
1004201c:	or     BYTE PTR [eax],cl
1004201e:	or     BYTE PTR [eax],cl
10042020:	or     BYTE PTR [eax],cl
10042022:	or     BYTE PTR [eax],cl
10042024:	or     BYTE PTR [eax],cl
10042026:	or     BYTE PTR [eax],cl
10042028:	add    al,0x8
1004202a:	or     BYTE PTR [eax],cl
1004202c:	add    eax,0x8080808
10042031:	or     BYTE PTR [esi],al
10042033:	or     BYTE PTR [eax],cl
10042035:	or     BYTE PTR [eax],cl
10042037:	pop    es
10042038:	int3   
10042039:	int3   
1004203a:	int3   
1004203b:	int3   
1004203c:	int3   
1004203d:	int3   
1004203e:	int3   
1004203f:	int3   
10042040:	push   ebp
10042041:	mov    ebp,esp
10042043:	and    esp,0xfffffff8
10042046:	sub    esp,0x3c
10042049:	mov    eax,DWORD PTR [ebp+0x14]
1004204c:	mov    ecx,DWORD PTR [eax]
1004204e:	mov    eax,DWORD PTR [ebp+0x30]
10042051:	mov    edx,DWORD PTR [ebp+0x10]
10042054:	mov    DWORD PTR [esp+0x34],eax
10042058:	mov    eax,0xfffffffe
1004205d:	push   ebx
1004205e:	mov    ebx,DWORD PTR [edx]
10042060:	mov    DWORD PTR [esp+0xc],eax
10042064:	mov    DWORD PTR [esp+0x20],eax
10042068:	mov    eax,DWORD PTR [ebp+0x24]
1004206b:	push   esi
1004206c:	mov    esi,DWORD PTR [ebp+0x38]
1004206f:	mov    DWORD PTR [esp+0x18],ecx
10042073:	lea    ecx,[eax+0x6]
10042076:	mov    DWORD PTR [esp+0x40],ebx
1004207a:	mov    DWORD PTR [esp+0xc],ecx
1004207e:	mov    BYTE PTR [ebx+0x1],0x0
10042082:	push   edi
10042083:	mov    edi,DWORD PTR [ebp+0x34]
10042086:	mov    BYTE PTR [ebx+0x2],0x0
1004208a:	neg    esi
1004208c:	mov    DWORD PTR [esp+0x24],ebx
10042090:	mov    DWORD PTR [esp+0x3c],ebx
10042094:	lea    ebx,[ebx+eax*1+0x3]
10042098:	mov    eax,DWORD PTR [edi+0x30]
1004209b:	sbb    esi,esi
1004209d:	lea    edx,[esp+0x10]
100420a1:	mov    DWORD PTR [esp+0x34],0x0
100420a9:	mov    DWORD PTR [esp+0x2c],eax
100420ad:	mov    DWORD PTR [esp+0x38],eax
100420b1:	and    esi,edx
100420b3:	cmp    DWORD PTR [ebp+0x20],0x0
100420b7:	mov    DWORD PTR [esp+0x18],ebx
100420bb:	je     0x100420c4
100420bd:	mov    eax,DWORD PTR [esp+0x38]
100420c1:	mov    DWORD PTR [edi+0x30],eax
100420c4:	mov    eax,DWORD PTR [ebp+0x8]
100420c7:	mov    ecx,eax
100420c9:	and    ecx,0x7
100420cc:	cmp    ecx,DWORD PTR [ebp+0xc]
100420cf:	je     0x100420e7
100420d1:	mov    BYTE PTR [ebx],0x19
100420d4:	add    ebx,0x1
100420d7:	and    al,0x7
100420d9:	mov    BYTE PTR [ebx],al
100420db:	add    ebx,0x1
100420de:	add    DWORD PTR [esp+0x10],0x2
100420e3:	mov    DWORD PTR [esp+0x18],ebx
100420e7:	cmp    DWORD PTR [ebp+0x1c],0x0
100420eb:	je     0x1004210a
100420ed:	mov    BYTE PTR [ebx],0x5c
100420f0:	add    ebx,0x1
100420f3:	mov    BYTE PTR [ebx],0x0
100420f6:	mov    BYTE PTR [ebx+0x1],0x0
100420fa:	mov    DWORD PTR [esp+0x34],ebx
100420fe:	add    ebx,0x2
10042101:	add    DWORD PTR [esp+0x10],0x3
10042106:	mov    DWORD PTR [esp+0x18],ebx
1004210a:	push   esi
1004210b:	push   edi
1004210c:	lea    edx,[esp+0x48]
10042110:	push   edx
10042111:	lea    eax,[esp+0x2c]
10042115:	push   eax
10042116:	lea    ecx,[esp+0x40]
1004211a:	push   ecx
1004211b:	mov    ecx,DWORD PTR [ebp+0x18]
1004211e:	lea    edx,[esp+0x30]
10042122:	push   edx
10042123:	lea    eax,[ebp+0x8]
10042126:	push   eax
10042127:	lea    edx,[esp+0x34]
1004212b:	call   0x1003f2b0
10042130:	add    esp,0x1c
10042133:	test   eax,eax
10042135:	je     0x10042255
1004213b:	mov    eax,DWORD PTR [edi+0x30]
1004213e:	cmp    eax,DWORD PTR [esp+0x2c]
10042142:	jle    0x10042148
10042144:	mov    DWORD PTR [esp+0x2c],eax
10042148:	cmp    DWORD PTR [ebp+0x38],0x0
1004214c:	mov    ebx,DWORD PTR [esp+0x18]
10042150:	mov    ecx,DWORD PTR [esp+0x24]
10042154:	jne    0x100421f4
1004215a:	cmp    BYTE PTR [ecx],0x54
1004215d:	mov    edx,DWORD PTR [esp+0x30]
10042161:	je     0x10042171
10042163:	mov    eax,DWORD PTR [esp+0x20]
10042167:	mov    DWORD PTR [esp+0x28],edx
1004216b:	mov    DWORD PTR [esp+0x14],eax
1004216f:	jmp    0x100421c4
10042171:	mov    eax,DWORD PTR [esp+0x28]
10042175:	test   eax,eax
10042177:	jl     0x10042190
10042179:	cmp    eax,edx
1004217b:	je     0x100421a4
1004217d:	cmp    DWORD PTR [esp+0x14],0x0
10042182:	jge    0x10042188
10042184:	mov    DWORD PTR [esp+0x14],eax
10042188:	mov    DWORD PTR [esp+0x28],0xffffffff
10042190:	test   edx,edx
10042192:	jl     0x100421a4
10042194:	mov    eax,DWORD PTR [esp+0x20]
10042198:	test   eax,eax
1004219a:	jge    0x100421a8
1004219c:	mov    eax,edx
1004219e:	mov    DWORD PTR [esp+0x20],eax
100421a2:	jmp    0x100421a8
100421a4:	mov    eax,DWORD PTR [esp+0x20]
100421a8:	mov    edx,eax
100421aa:	xor    edx,DWORD PTR [esp+0x14]
100421ae:	test   edx,0xfffffdff
100421b4:	je     0x100421c0
100421b6:	mov    DWORD PTR [esp+0x14],0xffffffff
100421be:	jmp    0x100421c4
100421c0:	or     DWORD PTR [esp+0x14],eax
100421c4:	cmp    DWORD PTR [ebp+0x1c],0x0
100421c8:	je     0x100421f4
100421ca:	mov    eax,DWORD PTR [ebp+0x8]
100421cd:	push   eax
100421ce:	push   ecx
100421cf:	mov    BYTE PTR [ebx],0x0
100421d2:	call   0x1003e610
100421d7:	add    esp,0x8
100421da:	test   eax,eax
100421dc:	jl     0x10042267
100421e2:	mov    edi,DWORD PTR [esp+0x34]
100421e6:	mov    ecx,eax
100421e8:	sar    ecx,0x8
100421eb:	mov    BYTE PTR [edi],cl
100421ed:	mov    ecx,DWORD PTR [esp+0x24]
100421f1:	mov    BYTE PTR [edi+0x1],al
100421f4:	mov    edi,DWORD PTR [esp+0x1c]
100421f8:	cmp    BYTE PTR [edi],0x7c
100421fb:	jne    0x1004228b
10042201:	cmp    DWORD PTR [ebp+0x38],0x0
10042205:	je     0x10042227
10042207:	mov    edx,DWORD PTR [ebp+0x10]
1004220a:	add    DWORD PTR [esp+0x10],0x3
1004220f:	mov    eax,DWORD PTR [edx]
10042211:	mov    ecx,DWORD PTR [ebp+0x24]
10042214:	add    edi,0x1
10042217:	mov    DWORD PTR [esp+0x1c],edi
1004221b:	mov    edi,DWORD PTR [ebp+0x34]
1004221e:	lea    ebx,[eax+ecx*1+0x3]
10042222:	jmp    0x100420b3
10042227:	mov    edx,ebx
10042229:	sub    edx,ecx
1004222b:	mov    BYTE PTR [ebx],0x54
1004222e:	mov    al,bl
10042230:	sar    edx,0x8
10042233:	mov    BYTE PTR [ebx+0x1],dl
10042236:	sub    al,cl
10042238:	mov    BYTE PTR [ebx+0x2],al
1004223b:	mov    DWORD PTR [esp+0x24],ebx
1004223f:	mov    DWORD PTR [esp+0x44],ebx
10042243:	add    ebx,0x3
10042246:	add    edi,0x1
10042249:	mov    DWORD PTR [esp+0x1c],edi
1004224d:	mov    edi,DWORD PTR [ebp+0x34]
10042250:	jmp    0x100420b3
10042255:	mov    ecx,DWORD PTR [esp+0x1c]
10042259:	mov    edx,DWORD PTR [ebp+0x14]
1004225c:	mov    DWORD PTR [edx],ecx
1004225e:	xor    eax,eax
10042260:	pop    edi
10042261:	pop    esi
10042262:	pop    ebx
10042263:	mov    esp,ebp
10042265:	pop    ebp
10042266:	ret    
10042267:	mov    ecx,DWORD PTR [ebp+0x18]
1004226a:	mov    edx,DWORD PTR [esp+0x1c]
1004226e:	sub    eax,0xfffffffe
10042271:	neg    eax
10042273:	sbb    eax,eax
10042275:	and    eax,0xfffffff5
10042278:	add    eax,0x24
1004227b:	mov    DWORD PTR [ecx],eax
1004227d:	mov    eax,DWORD PTR [ebp+0x14]
10042280:	mov    DWORD PTR [eax],edx
10042282:	xor    eax,eax
10042284:	pop    edi
10042285:	pop    esi
10042286:	pop    ebx
10042287:	mov    esp,ebp
10042289:	pop    ebp
1004228a:	ret    
1004228b:	mov    esi,DWORD PTR [ebp+0x38]
1004228e:	test   esi,esi
10042290:	jne    0x100422b6
10042292:	mov    eax,ebx
10042294:	sub    eax,ecx
10042296:	xor    edx,edx
10042298:	mov    dh,BYTE PTR [ecx+0x1]
1004229b:	mov    dl,BYTE PTR [ecx+0x2]
1004229e:	mov    BYTE PTR [ecx+0x2],al
100422a1:	mov    esi,edx
100422a3:	mov    edx,eax
100422a5:	sar    edx,0x8
100422a8:	mov    BYTE PTR [ecx+0x1],dl
100422ab:	sub    ecx,esi
100422ad:	test   esi,esi
100422af:	mov    eax,esi
100422b1:	jg     0x10042296
100422b3:	mov    esi,DWORD PTR [ebp+0x38]
100422b6:	mov    eax,DWORD PTR [esp+0x3c]
100422ba:	mov    ecx,ebx
100422bc:	sub    ecx,eax
100422be:	mov    dl,bl
100422c0:	sub    dl,al
100422c2:	mov    eax,DWORD PTR [ebp+0x8]
100422c5:	sar    ecx,0x8
100422c8:	mov    BYTE PTR [ebx],0x55
100422cb:	mov    BYTE PTR [ebx+0x1],cl
100422ce:	mov    ecx,DWORD PTR [ebp+0xc]
100422d1:	mov    BYTE PTR [ebx+0x2],dl
100422d4:	and    eax,0x7
100422d7:	add    ebx,0x3
100422da:	cmp    eax,ecx
100422dc:	je     0x100422f7
100422de:	cmp    BYTE PTR [edi],0x29
100422e1:	jne    0x100422f7
100422e3:	mov    BYTE PTR [ebx],0x19
100422e6:	add    ebx,0x1
100422e9:	mov    BYTE PTR [ebx],cl
100422eb:	mov    ecx,DWORD PTR [esp+0x10]
100422ef:	add    ebx,0x1
100422f2:	add    ecx,0x2
100422f5:	jmp    0x100422fb
100422f7:	mov    ecx,DWORD PTR [esp+0x10]
100422fb:	test   esi,esi
100422fd:	mov    eax,DWORD PTR [esp+0x2c]
10042301:	mov    edx,DWORD PTR [ebp+0x34]
10042304:	mov    DWORD PTR [edx+0x30],eax
10042307:	mov    eax,DWORD PTR [ebp+0x10]
1004230a:	mov    edx,DWORD PTR [ebp+0x14]
1004230d:	mov    DWORD PTR [eax],ebx
1004230f:	mov    eax,DWORD PTR [ebp+0x28]
10042312:	mov    DWORD PTR [edx],edi
10042314:	mov    edx,DWORD PTR [esp+0x28]
10042318:	mov    DWORD PTR [eax],edx
1004231a:	mov    eax,DWORD PTR [ebp+0x2c]
1004231d:	mov    edx,DWORD PTR [esp+0x14]
10042321:	mov    DWORD PTR [eax],edx
10042323:	je     0x10042348
10042325:	mov    eax,DWORD PTR [esi]
10042327:	mov    edx,0x7fffffeb
1004232c:	sub    edx,eax
1004232e:	cmp    edx,ecx
10042330:	jge    0x10042344
10042332:	mov    eax,DWORD PTR [ebp+0x18]
10042335:	mov    DWORD PTR [eax],0x14
1004233b:	xor    eax,eax
1004233d:	pop    edi
1004233e:	pop    esi
1004233f:	pop    ebx
10042340:	mov    esp,ebp
10042342:	pop    ebp
10042343:	ret    
10042344:	add    eax,ecx
10042346:	mov    DWORD PTR [esi],eax
10042348:	pop    edi
10042349:	pop    esi
1004234a:	mov    eax,0x1
1004234f:	pop    ebx
10042350:	mov    esp,ebp
10042352:	pop    ebp
10042353:	ret    
10042354:	int3   
10042355:	int3   
10042356:	int3   
10042357:	int3   
10042358:	int3   
10042359:	int3   
1004235a:	int3   
1004235b:	int3   
1004235c:	int3   
1004235d:	int3   
1004235e:	int3   
1004235f:	int3   
10042360:	push   ebx
10042361:	push   ebp
10042362:	mov    ebp,DWORD PTR [esp+0xc]
10042366:	push   esi
10042367:	push   edi
10042368:	mov    edi,DWORD PTR [esp+0x18]
1004236c:	lea    esp,[esp+0x0]
10042370:	movzx  eax,BYTE PTR [ebp+0x0]
10042374:	movzx  eax,BYTE PTR [eax+0x1006e478]
1004237b:	add    eax,ebp
1004237d:	xor    ebx,ebx
1004237f:	mov    esi,0x2
10042384:	call   0x1003e510
10042389:	movzx  ecx,BYTE PTR [eax]
1004238c:	cmp    ecx,0x5e
1004238f:	je     0x100423fa
10042391:	cmp    ecx,0x5f
10042394:	jne    0x100423b0
10042396:	xor    ecx,ecx
10042398:	mov    ch,BYTE PTR [eax+0x3]
1004239b:	mov    edx,0x1
100423a0:	mov    cl,BYTE PTR [eax+0x4]
100423a3:	cmp    ecx,0x20
100423a6:	jge    0x100423aa
100423a8:	shl    edx,cl
100423aa:	or     edx,DWORD PTR [esp+0x1c]
100423ae:	jmp    0x100423fe
100423b0:	cmp    ecx,0x58
100423b3:	je     0x100423fa
100423b5:	cmp    ecx,0x5d
100423b8:	je     0x100423fa
100423ba:	cmp    ecx,0x60
100423bd:	je     0x100423fa
100423bf:	cmp    ecx,0x39
100423c2:	je     0x100423e8
100423c4:	cmp    ecx,0x3a
100423c7:	je     0x100423e8
100423c9:	cmp    ecx,0x42
100423cc:	je     0x100423e8
100423ce:	cmp    ecx,0x1
100423d1:	je     0x10042412
100423d3:	cmp    ecx,esi
100423d5:	je     0x10042412
100423d7:	test   BYTE PTR [edi],0x2
100423da:	jne    0x100423e1
100423dc:	cmp    ecx,0x1a
100423df:	je     0x10042412
100423e1:	pop    edi
100423e2:	pop    esi
100423e3:	pop    ebp
100423e4:	xor    eax,eax
100423e6:	pop    ebx
100423e7:	ret    
100423e8:	cmp    BYTE PTR [eax+0x1],0xd
100423ec:	jne    0x100423e1
100423ee:	mov    edx,DWORD PTR [esp+0x20]
100423f2:	test   DWORD PTR [esp+0x1c],edx
100423f6:	jne    0x100423e1
100423f8:	jmp    0x10042412
100423fa:	mov    edx,DWORD PTR [esp+0x1c]
100423fe:	mov    ecx,DWORD PTR [esp+0x20]
10042402:	push   ecx
10042403:	push   edx
10042404:	push   edi
10042405:	push   eax
10042406:	call   0x10042360
1004240b:	add    esp,0x10
1004240e:	test   eax,eax
10042410:	je     0x100423e1
10042412:	xor    eax,eax
10042414:	mov    ah,BYTE PTR [ebp+0x1]
10042417:	mov    al,BYTE PTR [ebp+0x2]
1004241a:	add    ebp,eax
1004241c:	cmp    BYTE PTR [ebp+0x0],0x54
10042420:	je     0x10042370
10042426:	pop    edi
10042427:	pop    esi
10042428:	pop    ebp
10042429:	mov    eax,0x1
1004242e:	pop    ebx
1004242f:	ret    
10042430:	push   ebp
10042431:	mov    ebp,DWORD PTR [esp+0xc]
10042435:	push   esi
10042436:	mov    esi,DWORD PTR [esp+0xc]
1004243a:	push   edi
1004243b:	mov    edi,DWORD PTR [esp+0x18]
1004243f:	nop
10042440:	movzx  eax,BYTE PTR [esi]
10042443:	movzx  eax,BYTE PTR [eax+0x1006e478]
1004244a:	movzx  edx,BYTE PTR [eax+esi*1]
1004244e:	add    eax,esi
10042450:	mov    ecx,edx
10042452:	sub    ecx,0x4
10042455:	cmp    ecx,0x62
10042458:	ja     0x10042489
1004245a:	lea    ebx,[ebx+0x0]
10042460:	movzx  ecx,BYTE PTR [ecx+0x10042520]
10042467:	jmp    DWORD PTR [ecx*4+0x10042510]
1004246e:	add    eax,0x2
10042471:	jmp    0x1004247c
10042473:	movzx  edx,BYTE PTR [edx+0x1006e478]
1004247a:	add    eax,edx
1004247c:	movzx  edx,BYTE PTR [eax]
1004247f:	mov    ecx,edx
10042481:	sub    ecx,0x4
10042484:	cmp    ecx,0x62
10042487:	jbe    0x10042460
10042489:	movzx  ecx,BYTE PTR [eax]
1004248c:	cmp    ecx,0x5e
1004248f:	je     0x100424e5
10042491:	cmp    ecx,0x5f
10042494:	jne    0x100424b0
10042496:	xor    ecx,ecx
10042498:	mov    ch,BYTE PTR [eax+0x3]
1004249b:	mov    edx,0x1
100424a0:	mov    cl,BYTE PTR [eax+0x4]
100424a3:	cmp    ecx,0x20
100424a6:	jge    0x100424aa
100424a8:	shl    edx,cl
100424aa:	push   edi
100424ab:	or     edx,ebp
100424ad:	push   edx
100424ae:	jmp    0x100424e7
100424b0:	cmp    ecx,0x58
100424b3:	je     0x100424e5
100424b5:	cmp    ecx,0x5d
100424b8:	je     0x100424e5
100424ba:	cmp    ecx,0x60
100424bd:	je     0x100424e5
100424bf:	cmp    ecx,0x39
100424c2:	je     0x100424d9
100424c4:	cmp    ecx,0x3a
100424c7:	je     0x100424d9
100424c9:	cmp    ecx,0x42
100424cc:	je     0x100424d9
100424ce:	cmp    ecx,0x1a
100424d1:	je     0x100424f4
100424d3:	pop    edi
100424d4:	pop    esi
100424d5:	xor    eax,eax
100424d7:	pop    ebp
100424d8:	ret    
100424d9:	cmp    BYTE PTR [eax+0x1],0xc
100424dd:	jne    0x100424d3
100424df:	test   edi,ebp
100424e1:	jne    0x100424d3
100424e3:	jmp    0x100424f4
100424e5:	push   edi
100424e6:	push   ebp
100424e7:	push   eax
100424e8:	call   0x10042430
100424ed:	add    esp,0xc
100424f0:	test   eax,eax
100424f2:	je     0x100424d3
100424f4:	xor    eax,eax
100424f6:	mov    ah,BYTE PTR [esi+0x1]
100424f9:	mov    al,BYTE PTR [esi+0x2]
100424fc:	add    esi,eax
100424fe:	cmp    BYTE PTR [esi],0x54
10042501:	je     0x10042440
10042507:	pop    edi
10042508:	pop    esi
10042509:	mov    eax,0x1
1004250e:	pop    ebp
1004250f:	ret    
10042510:	mov    DWORD PTR [esp+eax*1],esp
10042513:	adc    BYTE PTR [esi+0x24],ch
10042516:	add    al,0x10
10042518:	jae    0x1004253e
1004251a:	add    al,0x10
1004251c:	mov    DWORD PTR [esp+eax*1],esp
1004251f:	adc    BYTE PTR [eax],al
10042521:	add    BYTE PTR [ebx],al
10042523:	add    eax,DWORD PTR [ebx]
10042525:	add    eax,DWORD PTR [ebx]
10042527:	add    eax,DWORD PTR [ebx]
10042529:	add    eax,DWORD PTR [ebx]
1004252b:	add    eax,DWORD PTR [ebx]
1004252d:	add    eax,DWORD PTR [ebx]
1004252f:	add    eax,DWORD PTR [ebx]
10042531:	add    eax,DWORD PTR [ebx]
10042533:	add    eax,DWORD PTR [ebx]
10042535:	add    DWORD PTR [ebx],eax
10042537:	add    eax,DWORD PTR [ebx]
10042539:	add    eax,DWORD PTR [ebx]
1004253b:	add    eax,DWORD PTR [ebx]
1004253d:	add    eax,DWORD PTR [ebx]
1004253f:	add    eax,DWORD PTR [ebx]
10042541:	add    eax,DWORD PTR [ebx]
10042543:	add    eax,DWORD PTR [ebx]
10042545:	add    eax,DWORD PTR [ebx]
10042547:	add    eax,DWORD PTR [ebx]
10042549:	add    eax,DWORD PTR [ebx]
1004254b:	add    eax,DWORD PTR [ebx]
1004254d:	add    eax,DWORD PTR [ebx]
1004254f:	add    eax,DWORD PTR [ebx]
10042551:	add    eax,DWORD PTR [ebx]
10042553:	add    eax,DWORD PTR [ebx]
10042555:	add    eax,DWORD PTR [ebx]
10042557:	add    eax,DWORD PTR [ebx]
10042559:	add    eax,DWORD PTR [ebx]
1004255b:	add    eax,DWORD PTR [ebx]
1004255d:	add    eax,DWORD PTR [ebx]
1004255f:	add    eax,DWORD PTR [ebx]
10042561:	add    eax,DWORD PTR [ebx]
10042563:	add    eax,DWORD PTR [ebx]
10042565:	add    eax,DWORD PTR [ebx]
10042567:	add    eax,DWORD PTR [ebx]
10042569:	add    eax,DWORD PTR [ebx]
1004256b:	add    eax,DWORD PTR [ebx]
1004256d:	add    eax,DWORD PTR [ebx]
1004256f:	add    al,BYTE PTR [ebx]
10042571:	add    eax,DWORD PTR [ebx]
10042573:	add    eax,DWORD PTR [ebx]
10042575:	add    BYTE PTR [eax],al
10042577:	add    BYTE PTR [ebx],al
10042579:	add    eax,DWORD PTR [ebx]
1004257b:	add    eax,DWORD PTR [ebx]
1004257d:	add    eax,DWORD PTR [ebx]
1004257f:	add    eax,DWORD PTR [edx]
10042581:	add    al,BYTE PTR [edx]
10042583:	int3   
10042584:	int3   
10042585:	int3   
10042586:	int3   
10042587:	int3   
10042588:	int3   
10042589:	int3   
1004258a:	int3   
1004258b:	int3   
1004258c:	int3   
1004258d:	int3   
1004258e:	int3   
1004258f:	int3   
10042590:	push   ebx
10042591:	push   ebp
10042592:	push   esi
10042593:	push   edi
10042594:	mov    edi,DWORD PTR [esp+0x18]
10042598:	or     ebp,0xffffffff
1004259b:	jmp    0x100425a0
1004259d:	lea    ecx,[ecx+0x0]
100425a0:	mov    eax,DWORD PTR [esp+0x14]
100425a4:	mov    ebx,0x1
100425a9:	add    eax,0x3
100425ac:	mov    esi,ebx
100425ae:	call   0x1003e510
100425b3:	movzx  ecx,BYTE PTR [eax]
100425b6:	lea    edx,[ecx-0x1c]
100425b9:	cmp    edx,0x44
100425bc:	ja     0x10042633
100425be:	movzx  edx,BYTE PTR [edx+0x1004264c]
100425c5:	jmp    DWORD PTR [edx*4+0x1004263c]
100425cc:	xor    edx,edx
100425ce:	cmp    ecx,0x58
100425d1:	sete   dl
100425d4:	push   edx
100425d5:	push   edi
100425d6:	push   eax
100425d7:	call   0x10042590
100425dc:	add    esp,0xc
100425df:	test   eax,eax
100425e1:	jl     0x10042633
100425e3:	test   ebp,ebp
100425e5:	jge    0x1004260d
100425e7:	mov    ebp,eax
100425e9:	jmp    0x10042611
100425eb:	add    eax,0x2
100425ee:	cmp    DWORD PTR [esp+0x1c],0x0
100425f3:	je     0x10042633
100425f5:	test   ebp,ebp
100425f7:	jge    0x10042609
100425f9:	test   BYTE PTR [edi],bl
100425fb:	movzx  ebp,BYTE PTR [eax+0x1]
100425ff:	je     0x10042611
10042601:	or     ebp,0x100
10042607:	jmp    0x10042611
10042609:	movzx  eax,BYTE PTR [eax+0x1]
1004260d:	cmp    ebp,eax
1004260f:	jne    0x10042633
10042611:	mov    eax,DWORD PTR [esp+0x14]
10042615:	xor    ecx,ecx
10042617:	mov    ch,BYTE PTR [eax+0x1]
1004261a:	mov    cl,BYTE PTR [eax+0x2]
1004261d:	add    eax,ecx
1004261f:	cmp    BYTE PTR [eax],0x54
10042622:	mov    DWORD PTR [esp+0x14],eax
10042626:	je     0x100425a0
1004262c:	pop    edi
1004262d:	pop    esi
1004262e:	mov    eax,ebp
10042630:	pop    ebp
10042631:	pop    ebx
10042632:	ret    
10042633:	pop    edi
10042634:	pop    esi
10042635:	pop    ebp
10042636:	or     eax,0xffffffff
10042639:	pop    ebx
1004263a:	ret    
1004263b:	nop
1004263c:	out    dx,al
1004263d:	and    eax,0x25eb1004
10042642:	add    al,0x10
10042644:	int3   
10042645:	and    eax,0x26331004
1004264a:	add    al,0x10
1004264c:	add    BYTE PTR [eax],al
1004264e:	add    eax,DWORD PTR [ebx]
10042650:	add    eax,DWORD PTR [eax]
10042652:	add    BYTE PTR [ebx],al
10042654:	add    eax,DWORD PTR [ebx]
10042656:	add    eax,DWORD PTR [ecx]
10042658:	add    eax,DWORD PTR [eax]
1004265a:	add    eax,DWORD PTR [ebx]
1004265c:	add    eax,DWORD PTR [ebx]
1004265e:	add    eax,DWORD PTR [ebx]
10042660:	add    eax,DWORD PTR [ebx]
10042662:	add    eax,DWORD PTR [ebx]
10042664:	add    eax,DWORD PTR [ebx]
10042666:	add    eax,DWORD PTR [ebx]
10042668:	add    eax,DWORD PTR [ebx]
1004266a:	add    eax,DWORD PTR [ebx]
1004266c:	add    eax,DWORD PTR [ebx]
1004266e:	add    eax,DWORD PTR [ebx]
10042670:	add    eax,DWORD PTR [ebx]
10042672:	add    eax,DWORD PTR [ebx]
10042674:	add    eax,DWORD PTR [ebx]
10042676:	add    eax,DWORD PTR [ebx]
10042678:	add    eax,DWORD PTR [ebx]
1004267a:	add    eax,DWORD PTR [ebx]
1004267c:	add    eax,DWORD PTR [ebx]
1004267e:	add    eax,DWORD PTR [ebx]
10042680:	add    eax,DWORD PTR [ebx]
10042682:	add    eax,DWORD PTR [ebx]
10042684:	add    eax,DWORD PTR [ebx]
10042686:	add    eax,DWORD PTR [ebx]
10042688:	add    al,BYTE PTR [ebx]
1004268a:	add    eax,DWORD PTR [ebx]
1004268c:	add    eax,DWORD PTR [edx]
1004268e:	add    al,BYTE PTR [edx]
10042690:	add    cl,ah
10042692:	int3   
10042693:	int3   
10042694:	int3   
10042695:	int3   
10042696:	int3   
10042697:	int3   
10042698:	int3   
10042699:	int3   
1004269a:	int3   
1004269b:	int3   
1004269c:	int3   
1004269d:	int3   
1004269e:	int3   
1004269f:	int3   
100426a0:	push   ebp
100426a1:	mov    ebp,esp
100426a3:	and    esp,0xfffffff8
100426a6:	mov    eax,0x108c
100426ab:	call   0x1004a080
100426b0:	mov    eax,ds:0x1007e030
100426b5:	xor    eax,esp
100426b7:	mov    DWORD PTR [esp+0x1088],eax
100426be:	mov    eax,DWORD PTR [ebp+0xc]
100426c1:	push   ebx
100426c2:	push   esi
100426c3:	push   edi
100426c4:	xor    edi,edi
100426c6:	mov    esi,edx
100426c8:	xor    ebx,ebx
100426ca:	cmp    ecx,edi
100426cc:	mov    DWORD PTR [esp+0x18],esi
100426d0:	mov    DWORD PTR [esp+0x2c],ecx
100426d4:	mov    DWORD PTR [esp+0x28],eax
100426d8:	mov    DWORD PTR [esp+0x14],0x1
100426e0:	mov    DWORD PTR [esp+0xc],edi
100426e4:	mov    DWORD PTR [esp+0x10],esi
100426e8:	je     0x10042c52
100426ee:	cmp    eax,edi
100426f0:	mov    DWORD PTR [ecx],edi
100426f2:	jne    0x100426fe
100426f4:	mov    eax,0x10
100426f9:	jmp    0x10042c34
100426fe:	mov    DWORD PTR [eax],edi
10042700:	mov    eax,DWORD PTR [ebp+0x8]
10042703:	test   eax,0x800
10042708:	je     0x10042714
1004270a:	mov    eax,0x20
1004270f:	jmp    0x10042c22
10042714:	test   eax,0xfc038580
10042719:	je     0x10042725
1004271b:	mov    eax,0x11
10042720:	jmp    0x10042c22
10042725:	mov    DWORD PTR [esp+0x30],0x1006e4e8
1004272d:	mov    DWORD PTR [esp+0x34],0x1006e5e8
10042735:	mov    DWORD PTR [esp+0x38],0x1006e6e8
1004273d:	mov    DWORD PTR [esp+0x3c],0x1006e828
10042745:	cmp    BYTE PTR [esi],0x28
10042748:	jne    0x1004287c
1004274e:	jmp    0x10042752
10042750:	xor    edi,edi
10042752:	cmp    BYTE PTR [esi+ebx*1+0x1],0x2a
10042757:	jne    0x1004287c
1004275d:	push   0x3
1004275f:	lea    edi,[esi+ebx*1+0x2]
10042763:	push   0x1007423c
10042768:	push   edi
10042769:	call   0x1004f3a6
1004276e:	add    esp,0xc
10042771:	test   eax,eax
10042773:	jne    0x10042790
10042775:	mov    ecx,DWORD PTR [ebp+0x8]
10042778:	mov    eax,0x100000
1004277d:	and    ecx,0xff8fffff
10042783:	add    ebx,0x5
10042786:	or     ecx,eax
10042788:	mov    DWORD PTR [ebp+0x8],ecx
1004278b:	jmp    0x10042870
10042790:	push   0x3
10042792:	push   0x10074240
10042797:	push   edi
10042798:	call   0x1004f3a6
1004279d:	add    esp,0xc
100427a0:	test   eax,eax
100427a2:	jne    0x100427bf
100427a4:	mov    ecx,DWORD PTR [ebp+0x8]
100427a7:	mov    eax,0x200000
100427ac:	and    ecx,0xff8fffff
100427b2:	add    ebx,0x5
100427b5:	or     ecx,eax
100427b7:	mov    DWORD PTR [ebp+0x8],ecx
100427ba:	jmp    0x10042870
100427bf:	push   0x5
100427c1:	push   0x10074244
100427c6:	push   edi
100427c7:	call   0x1004f3a6
100427cc:	add    esp,0xc
100427cf:	test   eax,eax
100427d1:	jne    0x100427ee
100427d3:	mov    ecx,DWORD PTR [ebp+0x8]
100427d6:	mov    eax,0x300000
100427db:	and    ecx,0xff8fffff
100427e1:	add    ebx,0x7
100427e4:	or     ecx,eax
100427e6:	mov    DWORD PTR [ebp+0x8],ecx
100427e9:	jmp    0x10042870
100427ee:	push   0x4
100427f0:	push   0x1007424c
100427f5:	push   edi
100427f6:	call   0x1004f3a6
100427fb:	add    esp,0xc
100427fe:	test   eax,eax
10042800:	jne    0x1004281a
10042802:	mov    ecx,DWORD PTR [ebp+0x8]
10042805:	mov    eax,0x400000
1004280a:	and    ecx,0xff8fffff
10042810:	add    ebx,0x6
10042813:	or     ecx,eax
10042815:	mov    DWORD PTR [ebp+0x8],ecx
10042818:	jmp    0x10042870
1004281a:	push   0x8
1004281c:	push   0x10074254
10042821:	push   edi
10042822:	call   0x1004f3a6
10042827:	add    esp,0xc
1004282a:	test   eax,eax
1004282c:	jne    0x10042846
1004282e:	mov    ecx,DWORD PTR [ebp+0x8]
10042831:	mov    eax,0x500000
10042836:	and    ecx,0xff8fffff
1004283c:	add    ebx,0xa
1004283f:	or     ecx,eax
10042841:	mov    DWORD PTR [ebp+0x8],ecx
10042844:	jmp    0x10042870
10042846:	push   0xc
10042848:	push   0x10074260
1004284d:	push   edi
1004284e:	call   0x1004f3a6
10042853:	add    esp,0xc
10042856:	test   eax,eax
10042858:	jne    0x100428a0
1004285a:	add    ebx,0xe
1004285d:	mov    eax,0x800000
10042862:	mov    edx,DWORD PTR [ebp+0x8]
10042865:	and    edx,0xfe7fffff
1004286b:	or     edx,eax
1004286d:	mov    DWORD PTR [ebp+0x8],edx
10042870:	cmp    BYTE PTR [esi+ebx*1],0x28
10042874:	je     0x10042750
1004287a:	xor    edi,edi
1004287c:	mov    ecx,DWORD PTR [ebp+0x8]
1004287f:	mov    eax,ecx
10042881:	and    eax,0x1800000
10042886:	je     0x100428be
10042888:	cmp    eax,0x800000
1004288d:	je     0x100428be
1004288f:	cmp    eax,0x1000000
10042894:	je     0x100428be
10042896:	mov    eax,0x38
1004289b:	jmp    0x10042c22
100428a0:	push   0xc
100428a2:	push   0x10074270
100428a7:	push   edi
100428a8:	call   0x1004f3a6
100428ad:	add    esp,0xc
100428b0:	test   eax,eax
100428b2:	jne    0x1004287a
100428b4:	add    ebx,0xe
100428b7:	mov    eax,0x1000000
100428bc:	jmp    0x10042862
100428be:	mov    eax,ecx
100428c0:	and    eax,0x700000
100428c5:	cmp    eax,0x300000
100428ca:	mov    ecx,0x2
100428cf:	jg     0x10042922
100428d1:	je     0x1004291b
100428d3:	cmp    eax,edi
100428d5:	je     0x100428e5
100428d7:	cmp    eax,0x100000
100428dc:	je     0x10042914
100428de:	cmp    eax,0x200000
100428e3:	jne    0x10042930
100428e5:	mov    eax,0xa
100428ea:	cmp    eax,0xff
100428ef:	mov    DWORD PTR [esp+0x80],edi
100428f6:	jle    0x10042950
100428f8:	mov    DWORD PTR [esp+0x84],ecx
100428ff:	mov    ecx,eax
10042901:	sar    ecx,0x8
10042904:	mov    BYTE PTR [esp+0x88],cl
1004290b:	mov    BYTE PTR [esp+0x89],al
10042912:	jmp    0x10042962
10042914:	mov    eax,0xd
10042919:	jmp    0x100428ea
1004291b:	mov    eax,0xd0a
10042920:	jmp    0x100428ea
10042922:	cmp    eax,0x400000
10042927:	je     0x10042943
10042929:	cmp    eax,0x500000
1004292e:	je     0x1004293a
10042930:	mov    eax,0x38
10042935:	jmp    0x10042c22
1004293a:	mov    DWORD PTR [esp+0x80],ecx
10042941:	jmp    0x10042962
10042943:	mov    DWORD PTR [esp+0x80],0x1
1004294e:	jmp    0x10042962
10042950:	mov    DWORD PTR [esp+0x84],0x1
1004295b:	mov    BYTE PTR [esp+0x88],al
10042962:	lea    edx,[esp+0x90]
10042969:	mov    eax,edx
1004296b:	mov    DWORD PTR [esp+0x44],eax
1004296f:	mov    ecx,edx
10042971:	mov    eax,esi
10042973:	mov    DWORD PTR [esp+0x40],edx
10042977:	mov    DWORD PTR [esp+0x68],edi
1004297b:	mov    DWORD PTR [esp+0x6c],edi
1004297f:	mov    DWORD PTR [esp+0x64],edi
10042983:	mov    DWORD PTR [esp+0x60],edi
10042987:	mov    DWORD PTR [esp+0x58],edi
1004298b:	mov    DWORD PTR [esp+0x5c],edi
1004298f:	mov    DWORD PTR [esp+0x54],edi
10042993:	mov    DWORD PTR [esp+0x50],ecx
10042997:	mov    DWORD PTR [esp+0x48],esi
1004299b:	lea    edx,[eax+0x1]
1004299e:	mov    edi,edi
100429a0:	mov    cl,BYTE PTR [eax]
100429a2:	add    eax,0x1
100429a5:	test   cl,cl
100429a7:	jne    0x100429a0
100429a9:	sub    eax,edx
100429ab:	lea    edx,[esp+0x90]
100429b2:	mov    DWORD PTR [esp+0x1c],edx
100429b6:	xor    edi,edi
100429b8:	lea    ecx,[esp+0x14]
100429bc:	push   ecx
100429bd:	lea    edx,[esp+0x34]
100429c1:	push   edx
100429c2:	push   edi
100429c3:	lea    ecx,[esp+0x2c]
100429c7:	push   ecx
100429c8:	lea    edx,[esp+0x34]
100429cc:	push   edx
100429cd:	push   edi
100429ce:	push   edi
100429cf:	push   edi
100429d0:	add    eax,esi
100429d2:	lea    ecx,[esp+0x2c]
100429d6:	push   ecx
100429d7:	mov    DWORD PTR [esp+0x70],eax
100429db:	mov    eax,DWORD PTR [ebp+0x8]
100429de:	lea    edx,[esp+0x34]
100429e2:	push   edx
100429e3:	lea    ecx,[esp+0x44]
100429e7:	mov    edx,eax
100429e9:	push   ecx
100429ea:	and    edx,0x7
100429ed:	push   edx
100429ee:	add    esi,ebx
100429f0:	push   eax
100429f1:	mov    DWORD PTR [esp+0xac],edi
100429f8:	mov    DWORD PTR [esp+0xa4],eax
100429ff:	mov    DWORD PTR [esp+0xa8],edi
10042a06:	mov    DWORD PTR [esp+0x44],esi
10042a0a:	mov    BYTE PTR [esp+0xc4],0x5e
10042a12:	call   0x10042040
10042a17:	mov    eax,DWORD PTR [esp+0x40]
10042a1b:	add    esp,0x34
10042a1e:	cmp    eax,edi
10042a20:	jne    0x10042c22
10042a26:	cmp    DWORD PTR [esp+0x14],0x10000
10042a2e:	jle    0x10042a3a
10042a30:	mov    eax,0x14
10042a35:	jmp    0x10042c22
10042a3a:	mov    eax,DWORD PTR [esp+0x5c]
10042a3e:	mov    ecx,DWORD PTR [esp+0x14]
10042a42:	add    eax,0x3
10042a45:	imul   eax,DWORD PTR [esp+0x58]
10042a4a:	lea    ebx,[eax+ecx*1+0x28]
10042a4e:	push   ebx
10042a4f:	call   DWORD PTR ds:0x1007f4f8
10042a55:	mov    edi,eax
10042a57:	add    esp,0x4
10042a5a:	test   edi,edi
10042a5c:	jne    0x10042a68
10042a5e:	mov    eax,0x15
10042a63:	jmp    0x10042c22
10042a68:	mov    DWORD PTR [edi+0x4],ebx
10042a6b:	mov    DWORD PTR [edi],0x50435245
10042a71:	mov    edx,DWORD PTR [esp+0x70]
10042a75:	mov    DWORD PTR [edi+0x8],edx
10042a78:	movzx  eax,WORD PTR [esp+0x74]
10042a7d:	xor    ecx,ecx
10042a7f:	mov    WORD PTR [edi+0xc],ax
10042a83:	mov    WORD PTR [edi+0xe],cx
10042a87:	mov    WORD PTR [edi+0x14],cx
10042a8b:	mov    WORD PTR [edi+0x16],cx
10042a8f:	mov    WORD PTR [edi+0x18],0x28
10042a95:	movzx  edx,WORD PTR [esp+0x5c]
10042a9a:	mov    WORD PTR [edi+0x1a],dx
10042a9e:	movzx  eax,WORD PTR [esp+0x58]
10042aa3:	mov    WORD PTR [edi+0x1c],ax
10042aa7:	mov    WORD PTR [edi+0x1e],cx
10042aab:	mov    DWORD PTR [edi+0x20],ecx
10042aae:	mov    DWORD PTR [edi+0x24],ecx
10042ab1:	mov    edx,DWORD PTR [esp+0x60]
10042ab5:	mov    DWORD PTR [esp+0x64],edx
10042ab9:	mov    DWORD PTR [esp+0x60],ecx
10042abd:	mov    DWORD PTR [esp+0x58],ecx
10042ac1:	movzx  eax,WORD PTR [edi+0x18]
10042ac5:	push   ecx
10042ac6:	add    eax,edi
10042ac8:	mov    DWORD PTR [esp+0x58],eax
10042acc:	movzx  edx,WORD PTR [edi+0x1a]
10042ad0:	movzx  ebx,WORD PTR [edi+0x1c]
10042ad4:	imul   ebx,edx
10042ad7:	lea    edx,[esp+0x34]
10042adb:	push   edx
10042adc:	push   ecx
10042add:	lea    edx,[esp+0x2c]
10042ae1:	push   edx
10042ae2:	lea    edx,[esp+0x34]
10042ae6:	push   edx
10042ae7:	push   ecx
10042ae8:	push   ecx
10042ae9:	push   ecx
10042aea:	add    ebx,eax
10042aec:	mov    DWORD PTR [esp+0x98],ecx
10042af3:	mov    DWORD PTR [esp+0x9c],ecx
10042afa:	lea    eax,[esp+0xb0]
10042b01:	mov    DWORD PTR [esp+0x64],ebx
10042b05:	mov    DWORD PTR [esp+0x70],eax
10042b09:	lea    ecx,[esp+0x2c]
10042b0d:	push   ecx
10042b0e:	mov    BYTE PTR [ebx],0x5e
10042b11:	mov    eax,DWORD PTR [edi+0x8]
10042b14:	lea    edx,[esp+0x34]
10042b18:	push   edx
10042b19:	lea    ecx,[esp+0x44]
10042b1d:	mov    edx,eax
10042b1f:	push   ecx
10042b20:	and    edx,0x7
10042b23:	push   edx
10042b24:	push   eax
10042b25:	mov    DWORD PTR [esp+0x44],esi
10042b29:	mov    DWORD PTR [esp+0x50],ebx
10042b2d:	call   0x10042040
10042b32:	movzx  eax,WORD PTR [esp+0x94]
10042b3a:	mov    WORD PTR [edi+0x10],ax
10042b3e:	mov    cx,WORD PTR [esp+0x9c]
10042b46:	mov    WORD PTR [edi+0x12],cx
10042b4a:	movzx  edx,WORD PTR [esp+0xa8]
10042b52:	add    esp,0x34
10042b55:	mov    WORD PTR [edi+0xc],dx
10042b59:	cmp    DWORD PTR [esp+0x7c],0x0
10042b5e:	je     0x10042b68
10042b60:	mov    DWORD PTR [esp+0x20],0xffffffff
10042b68:	cmp    DWORD PTR [esp+0xc],0x0
10042b6d:	jne    0x10042b80
10042b6f:	mov    eax,DWORD PTR [esp+0x10]
10042b73:	cmp    BYTE PTR [eax],0x0
10042b76:	je     0x10042b80
10042b78:	mov    DWORD PTR [esp+0xc],0x16
10042b80:	mov    eax,DWORD PTR [esp+0x1c]
10042b84:	mov    BYTE PTR [eax],0x0
10042b87:	add    eax,0x1
10042b8a:	sub    eax,ebx
10042b8c:	cmp    eax,DWORD PTR [esp+0x14]
10042b90:	jle    0x10042b9c
10042b92:	mov    DWORD PTR [esp+0xc],0x17
10042b9a:	jmp    0x10042c14
10042b9c:	cmp    DWORD PTR [esp+0xc],0x0
10042ba1:	jne    0x10042c14
10042ba3:	mov    eax,DWORD PTR [esp+0x50]
10042ba7:	lea    ecx,[esp+0x90]
10042bae:	cmp    eax,ecx
10042bb0:	jbe    0x10042c02
10042bb2:	sub    eax,0x2
10042bb5:	mov    DWORD PTR [esp+0x50],eax
10042bb9:	movzx  edx,BYTE PTR [eax+0x1]
10042bbd:	mov    dh,BYTE PTR [eax]
10042bbf:	xor    ecx,ecx
10042bc1:	mov    eax,edx
10042bc3:	mov    ch,BYTE PTR [eax+ebx*1]
10042bc6:	mov    DWORD PTR [esp+0x14],eax
10042bca:	mov    cl,BYTE PTR [eax+ebx*1+0x1]
10042bce:	mov    eax,ebx
10042bd0:	mov    esi,ecx
10042bd2:	call   0x1003e820
10042bd7:	test   eax,eax
10042bd9:	je     0x10042bf8
10042bdb:	mov    esi,DWORD PTR [esp+0x14]
10042bdf:	mov    edx,eax
10042be1:	sub    edx,ebx
10042be3:	sar    edx,0x8
10042be6:	sub    al,bl
10042be8:	mov    BYTE PTR [esi+ebx*1],dl
10042beb:	mov    BYTE PTR [esi+ebx*1+0x1],al
10042bef:	cmp    DWORD PTR [esp+0xc],0x0
10042bf4:	je     0x10042ba3
10042bf6:	jmp    0x10042c14
10042bf8:	mov    DWORD PTR [esp+0xc],0x35
10042c00:	jmp    0x10042c14
10042c02:	mov    ax,WORD PTR [edi+0x12]
10042c06:	cmp    ax,WORD PTR [edi+0x10]
10042c0a:	jbe    0x10042c69
10042c0c:	mov    DWORD PTR [esp+0xc],0xf
10042c14:	push   edi
10042c15:	call   DWORD PTR ds:0x1007f4fc
10042c1b:	mov    eax,DWORD PTR [esp+0x10]
10042c1f:	add    esp,0x4
10042c22:	mov    ecx,DWORD PTR [esp+0x10]
10042c26:	sub    ecx,DWORD PTR [esp+0x18]
10042c2a:	mov    edx,DWORD PTR [esp+0x28]
10042c2e:	mov    DWORD PTR [edx],ecx
10042c30:	mov    ecx,DWORD PTR [esp+0x2c]
10042c34:	test   eax,eax
10042c36:	mov    edi,0x1006eb38
10042c3b:	jle    0x10042c50
10042c3d:	lea    ecx,[ecx+0x0]
10042c40:	mov    dl,BYTE PTR [edi]
10042c42:	add    edi,0x1
10042c45:	test   dl,dl
10042c47:	jne    0x10042c40
10042c49:	sub    eax,0x1
10042c4c:	test   eax,eax
10042c4e:	jg     0x10042c40
10042c50:	mov    DWORD PTR [ecx],edi
10042c52:	xor    eax,eax
10042c54:	pop    edi
10042c55:	pop    esi
10042c56:	pop    ebx
10042c57:	mov    ecx,DWORD PTR [esp+0x1088]
10042c5e:	xor    ecx,esp
10042c60:	call   0x100430d7
10042c65:	mov    esp,ebp
10042c67:	pop    ebp
10042c68:	ret    
10042c69:	mov    eax,DWORD PTR [edi+0x8]
10042c6c:	test   al,0x10
10042c6e:	jne    0x10042cf4
10042c74:	mov    DWORD PTR [esp+0x18],eax
10042c78:	mov    eax,DWORD PTR [esp+0x6c]
10042c7c:	push   eax
10042c7d:	push   0x0
10042c7f:	lea    ecx,[esp+0x20]
10042c83:	push   ecx
10042c84:	push   ebx
10042c85:	call   0x10042360
10042c8a:	add    esp,0x10
10042c8d:	test   eax,eax
10042c8f:	je     0x10042c97
10042c91:	or     DWORD PTR [edi+0x8],0x10
10042c95:	jmp    0x10042cf4
10042c97:	mov    eax,DWORD PTR [esp+0x24]
10042c9b:	test   eax,eax
10042c9d:	jge    0x10042cb3
10042c9f:	push   0x0
10042ca1:	lea    edx,[esp+0x1c]
10042ca5:	push   edx
10042ca6:	push   ebx
10042ca7:	call   0x10042590
10042cac:	add    esp,0xc
10042caf:	test   eax,eax
10042cb1:	jl     0x10042cdb
10042cb3:	mov    ecx,eax
10042cb5:	and    ecx,0xff
10042cbb:	test   eax,0x100
10042cc0:	je     0x10042cd0
10042cc2:	mov    edx,DWORD PTR [esp+0x34]
10042cc6:	movzx  edx,BYTE PTR [edx+ecx*1]
10042cca:	cmp    edx,ecx
10042ccc:	jne    0x10042cd0
10042cce:	mov    eax,ecx
10042cd0:	or     WORD PTR [edi+0xc],0x2
10042cd5:	mov    WORD PTR [edi+0x14],ax
10042cd9:	jmp    0x10042cf4
10042cdb:	mov    eax,DWORD PTR [esp+0x6c]
10042cdf:	push   eax
10042ce0:	push   0x0
10042ce2:	push   ebx
10042ce3:	call   0x10042430
10042ce8:	add    esp,0xc
10042ceb:	test   eax,eax
10042ced:	je     0x10042cf4
10042cef:	or     WORD PTR [edi+0xc],0x8
10042cf4:	mov    eax,DWORD PTR [esp+0x20]
10042cf8:	test   eax,eax
10042cfa:	jl     0x10042d32
10042cfc:	test   BYTE PTR [edi+0x8],0x10
10042d00:	je     0x10042d09
10042d02:	test   eax,0x200
10042d07:	je     0x10042d32
10042d09:	mov    ecx,eax
10042d0b:	and    ecx,0xff
10042d11:	test   eax,0x100
10042d16:	je     0x10042d29
10042d18:	mov    edx,DWORD PTR [esp+0x34]
10042d1c:	movzx  edx,BYTE PTR [edx+ecx*1]
10042d20:	cmp    edx,ecx
10042d22:	jne    0x10042d29
10042d24:	and    eax,0xfffffeff
10042d29:	or     WORD PTR [edi+0xc],0x4
10042d2e:	mov    WORD PTR [edi+0x16],ax
10042d32:	mov    ecx,DWORD PTR [esp+0x1094]
10042d39:	mov    eax,edi
10042d3b:	pop    edi
10042d3c:	pop    esi
10042d3d:	pop    ebx
10042d3e:	xor    ecx,esp
10042d40:	call   0x100430d7
10042d45:	mov    esp,ebp
10042d47:	pop    ebp
10042d48:	ret    
10042d49:	int3   
10042d4a:	int3   
10042d4b:	int3   
10042d4c:	int3   
10042d4d:	int3   
10042d4e:	int3   
10042d4f:	int3   
10042d50:	push   ebp
10042d51:	mov    ebp,esp
10042d53:	and    esp,0xfffffff8
10042d56:	sub    esp,0x54
10042d59:	mov    eax,ds:0x1007e030
10042d5e:	xor    eax,esp
10042d60:	mov    DWORD PTR [esp+0x50],eax
10042d64:	test   edx,edx
10042d66:	push   ebx
10042d67:	mov    eax,edx
10042d69:	je     0x10042dbc
10042d6b:	test   esi,esi
10042d6d:	je     0x10042dbc
10042d6f:	cmp    DWORD PTR [edx],0x50435245
10042d75:	je     0x10042da4
10042d77:	lea    eax,[esp+0x2c]
10042d7b:	push   eax
10042d7c:	lea    ecx,[esp+0x8]
10042d80:	push   ecx
10042d81:	xor    ebx,ebx
10042d83:	call   0x10042f60
10042d88:	add    esp,0x8
10042d8b:	test   eax,eax
10042d8d:	jne    0x10042da4
10042d8f:	mov    eax,0xfffffffc
10042d94:	pop    ebx
10042d95:	mov    ecx,DWORD PTR [esp+0x50]
10042d99:	xor    ecx,esp
10042d9b:	call   0x100430d7
10042da0:	mov    esp,ebp
10042da2:	pop    ebp
10042da3:	ret    
10042da4:	movzx  edx,WORD PTR [eax+0x10]
10042da8:	mov    DWORD PTR [esi],edx
10042daa:	xor    eax,eax
10042dac:	pop    ebx
10042dad:	mov    ecx,DWORD PTR [esp+0x50]
10042db1:	xor    ecx,esp
10042db3:	call   0x100430d7
10042db8:	mov    esp,ebp
10042dba:	pop    ebp
10042dbb:	ret    
10042dbc:	mov    ecx,DWORD PTR [esp+0x54]
10042dc0:	pop    ebx
10042dc1:	xor    ecx,esp
10042dc3:	mov    eax,0xfffffffe
10042dc8:	call   0x100430d7
10042dcd:	mov    esp,ebp
10042dcf:	pop    ebp
10042dd0:	ret    
10042dd1:	int3   
10042dd2:	int3   
10042dd3:	int3   
10042dd4:	int3   
10042dd5:	int3   
10042dd6:	int3   
10042dd7:	int3   
10042dd8:	int3   
10042dd9:	int3   
10042dda:	int3   
10042ddb:	int3   
10042ddc:	int3   
10042ddd:	int3   
10042dde:	int3   
10042ddf:	int3   
10042de0:	cmp    DWORD PTR [esp+0x4],0x2
10042de5:	push   esi
10042de6:	mov    esi,eax
10042de8:	movzx  eax,BYTE PTR [ecx]
10042deb:	jne    0x10042e28
10042ded:	cmp    eax,0xa
10042df0:	je     0x10042e1b
10042df2:	cmp    eax,0xd
10042df5:	jne    0x10042e8e
10042dfb:	add    esi,0xffffffff
10042dfe:	cmp    ecx,esi
10042e00:	jae    0x10042e0d
10042e02:	cmp    BYTE PTR [ecx+0x1],0xa
10042e06:	mov    eax,0x2
10042e0b:	je     0x10042e12
10042e0d:	mov    eax,0x1
10042e12:	mov    DWORD PTR [edi],eax
10042e14:	mov    eax,0x1
10042e19:	pop    esi
10042e1a:	ret    
10042e1b:	mov    DWORD PTR [edi],0x1
10042e21:	mov    eax,0x1
10042e26:	pop    esi
10042e27:	ret    
10042e28:	cmp    eax,0x85
10042e2d:	jg     0x10042e73
10042e2f:	je     0x10042e60
10042e31:	cmp    eax,0xa
10042e34:	jl     0x10042e8e
10042e36:	cmp    eax,0xc
10042e39:	jle    0x10042e1b
10042e3b:	cmp    eax,0xd
10042e3e:	jne    0x10042e8e
10042e40:	add    esi,0xffffffff
10042e43:	cmp    ecx,esi
10042e45:	jae    0x10042e52
10042e47:	cmp    BYTE PTR [ecx+0x1],0xa
10042e4b:	mov    eax,0x2
10042e50:	je     0x10042e57
10042e52:	mov    eax,0x1
10042e57:	mov    DWORD PTR [edi],eax
10042e59:	mov    eax,0x1
10042e5e:	pop    esi
10042e5f:	ret    
10042e60:	xor    eax,eax
10042e62:	test   edx,edx
10042e64:	setne  al
10042e67:	pop    esi
10042e68:	add    eax,0x1
10042e6b:	mov    DWORD PTR [edi],eax
10042e6d:	mov    eax,0x1
10042e72:	ret    
10042e73:	cmp    eax,0x2028
10042e78:	jl     0x10042e8e
10042e7a:	cmp    eax,0x2029
10042e7f:	jg     0x10042e8e
10042e81:	mov    DWORD PTR [edi],0x3
10042e87:	mov    eax,0x1
10042e8c:	pop    esi
10042e8d:	ret    
10042e8e:	xor    eax,eax
10042e90:	pop    esi
10042e91:	ret    
10042e92:	int3   
10042e93:	int3   
10042e94:	int3   
10042e95:	int3   
10042e96:	int3   
10042e97:	int3   
10042e98:	int3   
10042e99:	int3   
10042e9a:	int3   
10042e9b:	int3   
10042e9c:	int3   
10042e9d:	int3   
10042e9e:	int3   
10042e9f:	int3   
10042ea0:	movzx  eax,BYTE PTR [ecx-0x1]
10042ea4:	sub    ecx,0x1
10042ea7:	cmp    DWORD PTR [esp+0x4],0x2
10042eac:	jne    0x10042ee4
10042eae:	cmp    eax,0xa
10042eb1:	je     0x10042ec8
10042eb3:	cmp    eax,0xd
10042eb6:	jne    0x10042f4f
10042ebc:	mov    DWORD PTR [edx],0x1
10042ec2:	mov    eax,0x1
10042ec7:	ret    
10042ec8:	cmp    ecx,esi
10042eca:	jbe    0x10042ed7
10042ecc:	cmp    BYTE PTR [ecx-0x1],0xd
10042ed0:	mov    eax,0x2
10042ed5:	je     0x10042edc
10042ed7:	mov    eax,0x1
10042edc:	mov    DWORD PTR [edx],eax
10042ede:	mov    eax,0x1
10042ee3:	ret    
10042ee4:	cmp    eax,0x85
10042ee9:	jg     0x10042f35
10042eeb:	je     0x10042f21
10042eed:	cmp    eax,0xa
10042ef0:	je     0x10042f05
10042ef2:	jle    0x10042f4f
10042ef4:	cmp    eax,0xd
10042ef7:	jg     0x10042f4f
10042ef9:	mov    DWORD PTR [edx],0x1
10042eff:	mov    eax,0x1
10042f04:	ret    
10042f05:	cmp    ecx,esi
10042f07:	jbe    0x10042f14
10042f09:	cmp    BYTE PTR [ecx-0x1],0xd
10042f0d:	mov    eax,0x2
10042f12:	je     0x10042f19
10042f14:	mov    eax,0x1
10042f19:	mov    DWORD PTR [edx],eax
10042f1b:	mov    eax,0x1
10042f20:	ret    
10042f21:	xor    eax,eax
10042f23:	cmp    DWORD PTR [esp+0x8],eax
10042f27:	setne  al
10042f2a:	add    eax,0x1
10042f2d:	mov    DWORD PTR [edx],eax
10042f2f:	mov    eax,0x1
10042f34:	ret    
10042f35:	cmp    eax,0x2028
10042f3a:	jl     0x10042f4f
10042f3c:	cmp    eax,0x2029
10042f41:	jg     0x10042f4f
10042f43:	mov    DWORD PTR [edx],0x3
10042f49:	mov    eax,0x1
10042f4e:	ret    
10042f4f:	xor    eax,eax
10042f51:	ret    
10042f52:	int3   
10042f53:	int3   
10042f54:	int3   
10042f55:	int3   
10042f56:	int3   
10042f57:	int3   
10042f58:	int3   
10042f59:	int3   
10042f5a:	int3   
10042f5b:	int3   
10042f5c:	int3   
10042f5d:	int3   
10042f5e:	int3   
10042f5f:	int3   
10042f60:	mov    eax,DWORD PTR [edx]
10042f62:	push   ebp
10042f63:	mov    ebp,DWORD PTR [esp+0x8]
10042f67:	push   esi
10042f68:	mov    ecx,eax
10042f6a:	and    ecx,0xff0000
10042f70:	mov    esi,eax
10042f72:	shr    esi,0x10
10042f75:	or     ecx,esi
10042f77:	mov    esi,eax
10042f79:	and    esi,0xff00
10042f7f:	shl    eax,0x10
10042f82:	or     esi,eax
10042f84:	shr    ecx,0x8
10042f87:	shl    esi,0x8
10042f8a:	or     ecx,esi
10042f8c:	cmp    ecx,0x50435245
10042f92:	je     0x10042f99
10042f94:	pop    esi
10042f95:	xor    eax,eax
10042f97:	pop    ebp
10042f98:	ret    
10042f99:	push   edi
10042f9a:	mov    esi,edx
10042f9c:	mov    ecx,0xa
10042fa1:	mov    edi,ebp
10042fa3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10042fa5:	mov    eax,DWORD PTR [edx+0x4]
10042fa8:	mov    ecx,eax
10042faa:	and    ecx,0xff0000
10042fb0:	mov    esi,eax
10042fb2:	shr    esi,0x10
10042fb5:	or     ecx,esi
10042fb7:	shr    ecx,0x8
10042fba:	mov    esi,eax
10042fbc:	shl    eax,0x10
10042fbf:	and    esi,0xff00
10042fc5:	or     esi,eax
10042fc7:	shl    esi,0x8
10042fca:	or     ecx,esi
10042fcc:	mov    DWORD PTR [ebp+0x4],ecx
10042fcf:	mov    eax,DWORD PTR [edx+0x8]
10042fd2:	mov    ecx,eax
10042fd4:	and    ecx,0xff0000
10042fda:	mov    esi,eax
10042fdc:	shr    esi,0x10
10042fdf:	or     ecx,esi
10042fe1:	shr    ecx,0x8
10042fe4:	mov    esi,eax
10042fe6:	shl    eax,0x10
10042fe9:	and    esi,0xff00
10042fef:	or     esi,eax
10042ff1:	shl    esi,0x8
10042ff4:	or     ecx,esi
10042ff6:	test   ebx,ebx
10042ff8:	mov    DWORD PTR [ebp+0x8],ecx
10042ffb:	movzx  eax,WORD PTR [edx+0xc]
10042fff:	movzx  cx,ah
10043003:	mov    ch,al
10043005:	mov    WORD PTR [ebp+0xc],cx
10043009:	movzx  eax,WORD PTR [edx+0x10]
1004300d:	movzx  cx,ah
10043011:	mov    ch,al
10043013:	mov    WORD PTR [ebp+0x10],cx
10043017:	movzx  eax,WORD PTR [edx+0x12]
1004301b:	movzx  cx,ah
1004301f:	mov    ch,al
10043021:	mov    WORD PTR [ebp+0x12],cx
10043025:	movzx  eax,WORD PTR [edx+0x14]
10043029:	movzx  cx,ah
1004302d:	mov    ch,al
1004302f:	mov    WORD PTR [ebp+0x14],cx
10043033:	movzx  eax,WORD PTR [edx+0x16]
10043037:	movzx  cx,ah
1004303b:	mov    ch,al
1004303d:	mov    WORD PTR [ebp+0x16],cx
10043041:	movzx  eax,WORD PTR [edx+0x18]
10043045:	movzx  cx,ah
10043049:	mov    ch,al
1004304b:	mov    WORD PTR [ebp+0x18],cx
1004304f:	movzx  eax,WORD PTR [edx+0x1a]
10043053:	movzx  cx,ah
10043057:	mov    ch,al
10043059:	mov    WORD PTR [ebp+0x1a],cx
1004305d:	movzx  eax,WORD PTR [edx+0x1c]
10043061:	movzx  dx,ah
10043065:	mov    dh,al
10043067:	mov    WORD PTR [ebp+0x1c],dx
1004306b:	je     0x100430cc
1004306d:	mov    edx,DWORD PTR [esp+0x14]
10043071:	mov    ecx,0xa
10043076:	mov    esi,ebx
10043078:	mov    edi,edx
1004307a:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1004307c:	mov    eax,DWORD PTR [ebx]
1004307e:	mov    ecx,eax
10043080:	and    ecx,0xff0000
10043086:	mov    esi,eax
10043088:	shr    esi,0x10
1004308b:	or     ecx,esi
1004308d:	mov    esi,eax
1004308f:	shl    esi,0x10
10043092:	and    eax,0xff00
10043097:	or     esi,eax
10043099:	shl    esi,0x8
1004309c:	shr    ecx,0x8
1004309f:	or     ecx,esi
100430a1:	mov    DWORD PTR [edx],ecx
100430a3:	mov    eax,DWORD PTR [ebx+0x4]
100430a6:	mov    ecx,eax
100430a8:	mov    esi,eax
100430aa:	shr    esi,0x10
100430ad:	and    ecx,0xff0000
100430b3:	or     ecx,esi
100430b5:	mov    esi,eax
100430b7:	shl    esi,0x10
100430ba:	and    eax,0xff00
100430bf:	or     esi,eax
100430c1:	shr    ecx,0x8
100430c4:	shl    esi,0x8
100430c7:	or     ecx,esi
100430c9:	mov    DWORD PTR [edx+0x4],ecx
100430cc:	pop    edi
100430cd:	pop    esi
100430ce:	mov    eax,ebp
100430d0:	pop    ebp
100430d1:	ret    
100430d2:	jmp    0x10043748
100430d7:	cmp    ecx,DWORD PTR ds:0x1007e030
100430dd:	jne    0x100430e1
100430df:	repz ret 
100430e1:	jmp    0x10046cb6
100430e6:	push   ebp
100430e7:	mov    ebp,esp
100430e9:	mov    eax,DWORD PTR [ebp+0x14]
100430ec:	push   esi
100430ed:	push   edi
100430ee:	xor    edi,edi
100430f0:	cmp    eax,edi
100430f2:	je     0x1004313b
100430f4:	cmp    DWORD PTR [ebp+0x8],edi
100430f7:	jne    0x10043114
100430f9:	call   0x10046df5
100430fe:	push   0x16
10043100:	pop    esi
10043101:	mov    DWORD PTR [eax],esi
10043103:	push   edi
10043104:	push   edi
10043105:	push   edi
10043106:	push   edi
10043107:	push   edi
10043108:	call   0x100435cc
1004310d:	add    esp,0x14
10043110:	mov    eax,esi
10043112:	jmp    0x1004313d
10043114:	cmp    DWORD PTR [ebp+0x10],edi
10043117:	je     0x100430f9
10043119:	cmp    DWORD PTR [ebp+0xc],eax
1004311c:	jae    0x1004312c
1004311e:	call   0x10046df5
10043123:	push   0x22
10043125:	pop    ecx
10043126:	mov    DWORD PTR [eax],ecx
10043128:	mov    esi,ecx
1004312a:	jmp    0x10043103
1004312c:	push   eax
1004312d:	push   DWORD PTR [ebp+0x10]
10043130:	push   DWORD PTR [ebp+0x8]
10043133:	call   0x10045960
10043138:	add    esp,0xc
1004313b:	xor    eax,eax
1004313d:	pop    edi
1004313e:	pop    esi
1004313f:	pop    ebp
10043140:	ret    
10043141:	mov    eax,ecx
10043143:	and    DWORD PTR [eax+0x4],0x0
10043147:	and    DWORD PTR [eax+0x8],0x0
1004314b:	mov    DWORD PTR [eax],0x100665a0
10043151:	ret    
10043152:	push   ebx
10043153:	mov    ebx,DWORD PTR [esp+0x8]
10043157:	push   esi
10043158:	push   edi
10043159:	mov    edi,ecx
1004315b:	mov    DWORD PTR [edi],0x100665a0
10043161:	mov    eax,DWORD PTR [ebx]
10043163:	test   eax,eax
10043165:	je     0x1004318d
10043167:	push   eax
10043168:	call   0x10043250
1004316d:	mov    esi,eax
1004316f:	inc    esi
10043170:	push   esi
10043171:	call   0x10045222
10043176:	test   eax,eax
10043178:	pop    ecx
10043179:	pop    ecx
1004317a:	mov    DWORD PTR [edi+0x4],eax
1004317d:	je     0x10043191
1004317f:	push   DWORD PTR [ebx]
10043181:	push   esi
10043182:	push   eax
10043183:	call   0x10046e39
10043188:	add    esp,0xc
1004318b:	jmp    0x10043191
1004318d:	and    DWORD PTR [edi+0x4],0x0
10043191:	mov    DWORD PTR [edi+0x8],0x1
10043198:	mov    eax,edi
1004319a:	pop    edi
1004319b:	pop    esi
1004319c:	pop    ebx
1004319d:	ret    0x4
100431a0:	mov    eax,ecx
100431a2:	mov    ecx,DWORD PTR [esp+0x4]
100431a6:	mov    DWORD PTR [eax],0x100665a0
100431ac:	mov    ecx,DWORD PTR [ecx]
100431ae:	and    DWORD PTR [eax+0x8],0x0
100431b2:	mov    DWORD PTR [eax+0x4],ecx
100431b5:	ret    0x8
100431b8:	push   ebx
100431b9:	mov    ebx,DWORD PTR [esp+0x8]
100431bd:	push   esi
100431be:	mov    esi,ecx
100431c0:	mov    DWORD PTR [esi],0x100665a0
100431c6:	mov    eax,DWORD PTR [ebx+0x8]
100431c9:	mov    DWORD PTR [esi+0x8],eax
100431cc:	test   eax,eax
100431ce:	mov    eax,DWORD PTR [ebx+0x4]
100431d1:	push   edi
100431d2:	je     0x10043205
100431d4:	test   eax,eax
100431d6:	je     0x100431ff
100431d8:	push   eax
100431d9:	call   0x10043250
100431de:	mov    edi,eax
100431e0:	inc    edi
100431e1:	push   edi
100431e2:	call   0x10045222
100431e7:	test   eax,eax
100431e9:	pop    ecx
100431ea:	pop    ecx
100431eb:	mov    DWORD PTR [esi+0x4],eax
100431ee:	je     0x10043208
100431f0:	push   DWORD PTR [ebx+0x4]
100431f3:	push   edi
100431f4:	push   eax
100431f5:	call   0x10046e39
100431fa:	add    esp,0xc
100431fd:	jmp    0x10043208
100431ff:	and    DWORD PTR [esi+0x4],0x0
10043203:	jmp    0x10043208
10043205:	mov    DWORD PTR [esi+0x4],eax
10043208:	pop    edi
10043209:	mov    eax,esi
1004320b:	pop    esi
1004320c:	pop    ebx
1004320d:	ret    0x4
10043210:	cmp    DWORD PTR [ecx+0x8],0x0
10043214:	mov    DWORD PTR [ecx],0x100665a0
1004321a:	je     0x10043225
1004321c:	push   DWORD PTR [ecx+0x4]
1004321f:	call   0x10043748
10043224:	pop    ecx
10043225:	ret    
10043226:	mov    eax,DWORD PTR [ecx+0x4]
10043229:	test   eax,eax
1004322b:	jne    0x10043232
1004322d:	mov    eax,0x100665a8
10043232:	ret    
10043233:	push   esi
10043234:	mov    esi,ecx
10043236:	call   0x10043210
1004323b:	test   BYTE PTR [esp+0x8],0x1
10043240:	je     0x10043249
10043242:	push   esi
10043243:	call   0x100430d2
10043248:	pop    ecx
10043249:	mov    eax,esi
1004324b:	pop    esi
1004324c:	ret    0x4
1004324f:	int3   
10043250:	mov    ecx,DWORD PTR [esp+0x4]
10043254:	test   ecx,0x3
1004325a:	je     0x10043280
1004325c:	mov    al,BYTE PTR [ecx]
1004325e:	add    ecx,0x1
10043261:	test   al,al
10043263:	je     0x100432b3
10043265:	test   ecx,0x3
1004326b:	jne    0x1004325c
1004326d:	add    eax,0x0
10043272:	lea    esp,[esp+0x0]
10043279:	lea    esp,[esp+0x0]
10043280:	mov    eax,DWORD PTR [ecx]
10043282:	mov    edx,0x7efefeff
10043287:	add    edx,eax
10043289:	xor    eax,0xffffffff
1004328c:	xor    eax,edx
1004328e:	add    ecx,0x4
10043291:	test   eax,0x81010100
10043296:	je     0x10043280
10043298:	mov    eax,DWORD PTR [ecx-0x4]
1004329b:	test   al,al
1004329d:	je     0x100432d1
1004329f:	test   ah,ah
100432a1:	je     0x100432c7
100432a3:	test   eax,0xff0000
100432a8:	je     0x100432bd
100432aa:	test   eax,0xff000000
100432af:	je     0x100432b3
100432b1:	jmp    0x10043280
100432b3:	lea    eax,[ecx-0x1]
100432b6:	mov    ecx,DWORD PTR [esp+0x4]
100432ba:	sub    eax,ecx
100432bc:	ret    
100432bd:	lea    eax,[ecx-0x2]
100432c0:	mov    ecx,DWORD PTR [esp+0x4]
100432c4:	sub    eax,ecx
100432c6:	ret    
100432c7:	lea    eax,[ecx-0x3]
100432ca:	mov    ecx,DWORD PTR [esp+0x4]
100432ce:	sub    eax,ecx
100432d0:	ret    
100432d1:	lea    eax,[ecx-0x4]
100432d4:	mov    ecx,DWORD PTR [esp+0x4]
100432d8:	sub    eax,ecx
100432da:	ret    
100432db:	push   0x14
100432dd:	push   0x10074640
100432e2:	call   0x10046f34
100432e7:	and    DWORD PTR [ebp-0x4],0x0
100432eb:	dec    DWORD PTR [ebp+0x10]
100432ee:	js     0x1004332a
100432f0:	mov    ecx,DWORD PTR [ebp+0x8]
100432f3:	sub    ecx,DWORD PTR [ebp+0xc]
100432f6:	mov    DWORD PTR [ebp+0x8],ecx
100432f9:	call   DWORD PTR [ebp+0x14]
100432fc:	jmp    0x100432eb
100432fe:	mov    eax,DWORD PTR [ebp-0x14]
10043301:	mov    DWORD PTR [ebp-0x1c],eax
10043304:	mov    eax,DWORD PTR [ebp-0x1c]
10043307:	mov    eax,DWORD PTR [eax]
10043309:	mov    DWORD PTR [ebp-0x20],eax
1004330c:	mov    eax,DWORD PTR [ebp-0x20]
1004330f:	cmp    DWORD PTR [eax],0xe06d7363
10043315:	je     0x10043322
10043317:	mov    DWORD PTR [ebp-0x24],0x0
1004331e:	mov    eax,DWORD PTR [ebp-0x24]
10043321:	ret    
10043322:	call   0x10046e9e
10043327:	mov    esp,DWORD PTR [ebp-0x18]
1004332a:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10043331:	call   0x10046f79
10043336:	ret    0x10
10043339:	push   0xc
1004333b:	push   0x10074660
10043340:	call   0x10046f34
10043345:	and    DWORD PTR [ebp-0x1c],0x0
10043349:	mov    esi,DWORD PTR [ebp+0xc]
1004334c:	mov    eax,esi
1004334e:	imul   eax,DWORD PTR [ebp+0x10]
10043352:	add    DWORD PTR [ebp+0x8],eax
10043355:	and    DWORD PTR [ebp-0x4],0x0
10043359:	dec    DWORD PTR [ebp+0x10]
1004335c:	js     0x10043369
1004335e:	sub    DWORD PTR [ebp+0x8],esi
10043361:	mov    ecx,DWORD PTR [ebp+0x8]
10043364:	call   DWORD PTR [ebp+0x14]
10043367:	jmp    0x10043359
10043369:	mov    DWORD PTR [ebp-0x1c],0x1
10043370:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10043377:	call   0x10043384
1004337c:	call   0x10046f79
10043381:	ret    0x10
10043384:	cmp    DWORD PTR [ebp-0x1c],0x0
10043388:	jne    0x1004339b
1004338a:	push   DWORD PTR [ebp+0x14]
1004338d:	push   DWORD PTR [ebp+0x10]
10043390:	push   DWORD PTR [ebp+0xc]
10043393:	push   DWORD PTR [ebp+0x8]
10043396:	call   0x100432db
1004339b:	ret    
1004339c:	push   ecx
1004339d:	push   ebx
1004339e:	push   ebp
1004339f:	push   esi
100433a0:	push   edi
100433a1:	push   DWORD PTR ds:0x100825b0
100433a7:	call   0x10047192
100433ac:	push   DWORD PTR ds:0x100825ac
100433b2:	mov    esi,eax
100433b4:	mov    DWORD PTR [esp+0x18],esi
100433b8:	call   0x10047192
100433bd:	mov    edi,eax
100433bf:	cmp    edi,esi
100433c1:	pop    ecx
100433c2:	pop    ecx
100433c3:	jb     0x10043441
100433c5:	mov    ebx,edi
100433c7:	sub    ebx,esi
100433c9:	lea    ebp,[ebx+0x4]
100433cc:	cmp    ebp,0x4
100433cf:	jb     0x10043441
100433d1:	push   esi
100433d2:	call   0x10047795
100433d7:	mov    esi,eax
100433d9:	cmp    esi,ebp
100433db:	pop    ecx
100433dc:	jae    0x10043428
100433de:	mov    eax,0x800
100433e3:	cmp    esi,eax
100433e5:	jae    0x100433e9
100433e7:	mov    eax,esi
100433e9:	add    eax,esi
100433eb:	cmp    eax,esi
100433ed:	jb     0x100433ff
100433ef:	push   eax
100433f0:	push   DWORD PTR [esp+0x14]
100433f4:	call   0x1004774a
100433f9:	test   eax,eax
100433fb:	pop    ecx
100433fc:	pop    ecx
100433fd:	jne    0x10043416
100433ff:	lea    eax,[esi+0x10]
10043402:	cmp    eax,esi
10043404:	jb     0x10043441
10043406:	push   eax
10043407:	push   DWORD PTR [esp+0x14]
1004340b:	call   0x1004774a
10043410:	test   eax,eax
10043412:	pop    ecx
10043413:	pop    ecx
10043414:	je     0x10043441
10043416:	sar    ebx,0x2
10043419:	push   eax
1004341a:	lea    edi,[eax+ebx*4]
1004341d:	call   0x10047126
10043422:	pop    ecx
10043423:	mov    ds:0x100825b0,eax
10043428:	mov    esi,DWORD PTR [esp+0x18]
1004342c:	mov    DWORD PTR [edi],esi
1004342e:	add    edi,0x4
10043431:	push   edi
10043432:	call   0x10047126
10043437:	mov    ds:0x100825ac,eax
1004343c:	pop    ecx
1004343d:	mov    eax,esi
1004343f:	jmp    0x10043443
10043441:	xor    eax,eax
10043443:	pop    edi
10043444:	pop    esi
10043445:	pop    ebp
10043446:	pop    ebx
10043447:	pop    ecx
10043448:	ret    
10043449:	push   esi
1004344a:	push   0x4
1004344c:	push   0x20
1004344e:	call   0x10047702
10043453:	mov    esi,eax
10043455:	push   esi
10043456:	call   0x10047126
1004345b:	add    esp,0xc
1004345e:	test   esi,esi
10043460:	mov    ds:0x100825b0,eax
10043465:	mov    ds:0x100825ac,eax
1004346a:	jne    0x10043471
1004346c:	push   0x18
1004346e:	pop    eax
1004346f:	pop    esi
10043470:	ret    
10043471:	and    DWORD PTR [esi],0x0
10043474:	xor    eax,eax
10043476:	pop    esi
10043477:	ret    
10043478:	push   0xc
1004347a:	push   0x10074680
1004347f:	call   0x10046f34
10043484:	call   0x10047897
10043489:	and    DWORD PTR [ebp-0x4],0x0
1004348d:	push   DWORD PTR [ebp+0x8]
10043490:	call   0x1004339c
10043495:	pop    ecx
10043496:	mov    DWORD PTR [ebp-0x1c],eax
10043499:	mov    DWORD PTR [ebp-0x4],0xfffffffe
100434a0:	call   0x100434ae
100434a5:	mov    eax,DWORD PTR [ebp-0x1c]
100434a8:	call   0x10046f79
100434ad:	ret    
100434ae:	call   0x100478a0
100434b3:	ret    
100434b4:	push   DWORD PTR [esp+0x4]
100434b8:	call   0x10043478
100434bd:	neg    eax
100434bf:	sbb    eax,eax
100434c1:	neg    eax
100434c3:	pop    ecx
100434c4:	dec    eax
100434c5:	ret    
100434c6:	mov    eax,DWORD PTR [esp+0x4]
100434ca:	mov    ds:0x1007fa80,eax
100434cf:	ret    
100434d0:	push   ebp
100434d1:	lea    ebp,[esp-0x2a8]
100434d8:	sub    esp,0x328
100434de:	mov    eax,ds:0x1007e030
100434e3:	xor    eax,ebp
100434e5:	mov    DWORD PTR [ebp+0x2a4],eax
100434eb:	push   esi
100434ec:	mov    DWORD PTR [ebp+0x88],eax
100434f2:	mov    DWORD PTR [ebp+0x84],ecx
100434f8:	mov    DWORD PTR [ebp+0x80],edx
100434fe:	mov    DWORD PTR [ebp+0x7c],ebx
10043501:	mov    DWORD PTR [ebp+0x78],esi
10043504:	mov    DWORD PTR [ebp+0x74],edi
10043507:	data16 mov WORD PTR [ebp+0xa0],ss
1004350e:	data16 mov WORD PTR [ebp+0x94],cs
10043515:	data16 mov WORD PTR [ebp+0x70],ds
10043519:	data16 mov WORD PTR [ebp+0x6c],es
1004351d:	data16 mov WORD PTR [ebp+0x68],fs
10043521:	data16 mov WORD PTR [ebp+0x64],gs
10043525:	pushf  
10043526:	pop    DWORD PTR [ebp+0x98]
1004352c:	mov    esi,DWORD PTR [ebp+0x2ac]
10043532:	lea    eax,[ebp+0x2ac]
10043538:	mov    DWORD PTR [ebp+0x9c],eax
1004353e:	mov    DWORD PTR [ebp-0x28],0x10001
10043545:	mov    DWORD PTR [ebp+0x90],esi
1004354b:	mov    eax,DWORD PTR [eax-0x4]
1004354e:	push   0x50
10043550:	mov    DWORD PTR [ebp+0x8c],eax
10043556:	lea    eax,[ebp-0x80]
10043559:	push   0x0
1004355b:	push   eax
1004355c:	call   0x10045ea0
10043561:	lea    eax,[ebp-0x80]
10043564:	mov    DWORD PTR [ebp-0x30],eax
10043567:	lea    eax,[ebp-0x28]
1004356a:	add    esp,0xc
1004356d:	mov    DWORD PTR [ebp-0x80],0xc000000d
10043574:	mov    DWORD PTR [ebp-0x74],esi
10043577:	mov    DWORD PTR [ebp-0x2c],eax
1004357a:	call   DWORD PTR ds:0x10066184
10043580:	push   0x0
10043582:	mov    esi,eax
10043584:	call   DWORD PTR ds:0x10066180
1004358a:	lea    eax,[ebp-0x30]
1004358d:	push   eax
1004358e:	call   DWORD PTR ds:0x1006617c
10043594:	test   eax,eax
10043596:	jne    0x100435a4
10043598:	test   esi,esi
1004359a:	jne    0x100435a4
1004359c:	push   0x2
1004359e:	call   0x10047b20
100435a3:	pop    ecx
100435a4:	push   0xc000000d
100435a9:	call   DWORD PTR ds:0x10066108
100435af:	push   eax
100435b0:	call   DWORD PTR ds:0x10066178
100435b6:	mov    ecx,DWORD PTR [ebp+0x2a4]
100435bc:	xor    ecx,ebp
100435be:	pop    esi
100435bf:	call   0x100430d7
100435c4:	add    ebp,0x2a8
100435ca:	leave  
100435cb:	ret    
100435cc:	push   ebp
100435cd:	mov    ebp,esp
100435cf:	push   DWORD PTR ds:0x1007fa80
100435d5:	call   0x10047192
100435da:	test   eax,eax
100435dc:	pop    ecx
100435dd:	je     0x100435e2
100435df:	pop    ebp
100435e0:	jmp    eax
100435e2:	push   0x2
100435e4:	call   0x10047b20
100435e9:	pop    ecx
100435ea:	pop    ebp
100435eb:	jmp    0x100434d0
100435f0:	xor    eax,eax
100435f2:	push   eax
100435f3:	push   eax
100435f4:	push   eax
100435f5:	push   eax
100435f6:	push   eax
100435f7:	call   0x100435cc
100435fc:	add    esp,0x14
100435ff:	ret    
10043600:	jmp    0x100430d2
10043605:	push   ebp
10043606:	mov    ebp,esp
10043608:	push   esi
10043609:	mov    esi,DWORD PTR [ebp+0x14]
1004360c:	push   edi
1004360d:	xor    edi,edi
1004360f:	cmp    esi,edi
10043611:	jne    0x10043617
10043613:	xor    eax,eax
10043615:	jmp    0x1004367c
10043617:	cmp    DWORD PTR [ebp+0x8],edi
1004361a:	jne    0x10043637
1004361c:	call   0x10046df5
10043621:	push   0x16
10043623:	pop    esi
10043624:	mov    DWORD PTR [eax],esi
10043626:	push   edi
10043627:	push   edi
10043628:	push   edi
10043629:	push   edi
1004362a:	push   edi
1004362b:	call   0x100435cc
10043630:	add    esp,0x14
10043633:	mov    eax,esi
10043635:	jmp    0x1004367c
10043637:	cmp    DWORD PTR [ebp+0x10],edi
1004363a:	je     0x10043652
1004363c:	cmp    DWORD PTR [ebp+0xc],esi
1004363f:	jb     0x10043652
10043641:	push   esi
10043642:	push   DWORD PTR [ebp+0x10]
10043645:	push   DWORD PTR [ebp+0x8]
10043648:	call   0x10045420
1004364d:	add    esp,0xc
10043650:	jmp    0x10043613
10043652:	push   DWORD PTR [ebp+0xc]
10043655:	push   edi
10043656:	push   DWORD PTR [ebp+0x8]
10043659:	call   0x10045ea0
1004365e:	add    esp,0xc
10043661:	cmp    DWORD PTR [ebp+0x10],edi
10043664:	je     0x1004361c
10043666:	cmp    DWORD PTR [ebp+0xc],esi
10043669:	jae    0x10043679
1004366b:	call   0x10046df5
10043670:	push   0x22
10043672:	pop    ecx
10043673:	mov    DWORD PTR [eax],ecx
10043675:	mov    esi,ecx
10043677:	jmp    0x10043626
10043679:	push   0x16
1004367b:	pop    eax
1004367c:	pop    edi
1004367d:	pop    esi
1004367e:	pop    ebp
1004367f:	ret    
10043680:	push   ecx
10043681:	mov    DWORD PTR [ecx],0x100665c0
10043687:	call   0x10047b28
1004368c:	pop    ecx
1004368d:	ret    
1004368e:	push   esi
1004368f:	mov    esi,ecx
10043691:	call   0x10043680
10043696:	test   BYTE PTR [esp+0x8],0x1
1004369b:	je     0x100436a4
1004369d:	push   esi
1004369e:	call   0x100430d2
100436a3:	pop    ecx
100436a4:	mov    eax,esi
100436a6:	pop    esi
100436a7:	ret    0x4
100436aa:	mov    eax,DWORD PTR [esp+0x4]
100436ae:	add    ecx,0x9
100436b1:	push   ecx
100436b2:	add    eax,0x9
100436b5:	push   eax
100436b6:	call   0x10047ba0
100436bb:	neg    eax
100436bd:	pop    ecx
100436be:	sbb    eax,eax
100436c0:	pop    ecx
100436c1:	inc    eax
100436c2:	ret    0x4
100436c5:	push   esi
100436c6:	push   0x1
100436c8:	push   0x1007e02c
100436cd:	mov    esi,ecx
100436cf:	call   0x100431a0
100436d4:	mov    DWORD PTR [esi],0x100665c8
100436da:	mov    eax,esi
100436dc:	pop    esi
100436dd:	ret    
100436de:	push   ebp
100436df:	mov    ebp,esp
100436e1:	sub    esp,0xc
100436e4:	jmp    0x100436f3
100436e6:	push   DWORD PTR [ebp+0x8]
100436e9:	call   0x10047c32
100436ee:	test   eax,eax
100436f0:	pop    ecx
100436f1:	je     0x10043702
100436f3:	push   DWORD PTR [ebp+0x8]
100436f6:	call   0x10045222
100436fb:	test   eax,eax
100436fd:	pop    ecx
100436fe:	je     0x100436e6
10043700:	leave  
10043701:	ret    
10043702:	test   BYTE PTR ds:0x1007fa90,0x1
10043709:	mov    esi,0x1007fa84
1004370e:	jne    0x10043729
10043710:	or     DWORD PTR ds:0x1007fa90,0x1
10043717:	mov    ecx,esi
10043719:	call   0x100436c5
1004371e:	push   0x10065bbe
10043723:	call   0x100434b4
10043728:	pop    ecx
10043729:	push   esi
1004372a:	lea    ecx,[ebp-0xc]
1004372d:	call   0x100431b8
10043732:	push   0x10074e18
10043737:	lea    eax,[ebp-0xc]
1004373a:	push   eax
1004373b:	mov    DWORD PTR [ebp-0xc],0x100665c8
10043742:	call   0x10047c54
10043747:	int3   
10043748:	push   0xc
1004374a:	push   0x100746a0
1004374f:	call   0x10046f34
10043754:	mov    esi,DWORD PTR [ebp+0x8]
10043757:	test   esi,esi
10043759:	je     0x100437d0
1004375b:	cmp    DWORD PTR ds:0x100825a0,0x3
10043762:	jne    0x100437a7
10043764:	push   0x4
10043766:	call   0x10047f3d
1004376b:	pop    ecx
1004376c:	and    DWORD PTR [ebp-0x4],0x0
10043770:	push   esi
10043771:	call   0x10047fb6
10043776:	pop    ecx
10043777:	mov    DWORD PTR [ebp-0x1c],eax
1004377a:	test   eax,eax
1004377c:	je     0x10043787
1004377e:	push   esi
1004377f:	push   eax
10043780:	call   0x10047fe1
10043785:	pop    ecx
10043786:	pop    ecx
10043787:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1004378e:	call   0x1004379e
10043793:	cmp    DWORD PTR [ebp-0x1c],0x0
10043797:	jne    0x100437d0
10043799:	push   DWORD PTR [ebp+0x8]
1004379c:	jmp    0x100437a8
1004379e:	push   0x4
100437a0:	call   0x10047e65
100437a5:	pop    ecx
100437a6:	ret    
100437a7:	push   esi
100437a8:	push   0x0
100437aa:	push   DWORD PTR ds:0x1007fe38
100437b0:	call   DWORD PTR ds:0x10066188
100437b6:	test   eax,eax
100437b8:	jne    0x100437d0
100437ba:	call   0x10046df5
100437bf:	mov    esi,eax
100437c1:	call   DWORD PTR ds:0x100660cc
100437c7:	push   eax
100437c8:	call   0x10046dba
100437cd:	mov    DWORD PTR [esi],eax
100437cf:	pop    ecx
100437d0:	call   0x10046f79
100437d5:	ret    
100437d6:	push   0xc
100437d8:	push   0x100746c0
100437dd:	call   0x10046f34
100437e2:	mov    ecx,DWORD PTR [ebp+0x8]
100437e5:	xor    edi,edi
100437e7:	cmp    ecx,edi
100437e9:	jbe    0x10043819
100437eb:	push   0xffffffe0
100437ed:	pop    eax
100437ee:	xor    edx,edx
100437f0:	div    ecx
100437f2:	cmp    eax,DWORD PTR [ebp+0xc]
100437f5:	sbb    eax,eax
100437f7:	inc    eax
100437f8:	jne    0x10043819
100437fa:	call   0x10046df5
100437ff:	mov    DWORD PTR [eax],0xc
10043805:	push   edi
10043806:	push   edi
10043807:	push   edi
10043808:	push   edi
10043809:	push   edi
1004380a:	call   0x100435cc
1004380f:	add    esp,0x14
10043812:	xor    eax,eax
10043814:	jmp    0x100438ee
10043819:	imul   ecx,DWORD PTR [ebp+0xc]
1004381d:	mov    esi,ecx
1004381f:	mov    DWORD PTR [ebp+0x8],esi
10043822:	cmp    esi,edi
10043824:	jne    0x10043829
10043826:	xor    esi,esi
10043828:	inc    esi
10043829:	xor    ebx,ebx
1004382b:	mov    DWORD PTR [ebp-0x1c],ebx
1004382e:	cmp    esi,0xffffffe0
10043831:	ja     0x1004389c
10043833:	cmp    DWORD PTR ds:0x100825a0,0x3
1004383a:	jne    0x10043887
1004383c:	add    esi,0xf
1004383f:	and    esi,0xfffffff0
10043842:	mov    DWORD PTR [ebp+0xc],esi
10043845:	mov    eax,DWORD PTR [ebp+0x8]
10043848:	cmp    eax,DWORD PTR ds:0x10082590
1004384e:	ja     0x10043887
10043850:	push   0x4
10043852:	call   0x10047f3d
10043857:	pop    ecx
10043858:	mov    DWORD PTR [ebp-0x4],edi
1004385b:	push   DWORD PTR [ebp+0x8]
1004385e:	call   0x1004878a
10043863:	pop    ecx
10043864:	mov    DWORD PTR [ebp-0x1c],eax
10043867:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1004386e:	call   0x100438d2
10043873:	mov    ebx,DWORD PTR [ebp-0x1c]
10043876:	cmp    ebx,edi
10043878:	je     0x1004388b
1004387a:	push   DWORD PTR [ebp+0x8]
1004387d:	push   edi
1004387e:	push   ebx
1004387f:	call   0x10045ea0
10043884:	add    esp,0xc
10043887:	cmp    ebx,edi
10043889:	jne    0x100438ec
1004388b:	push   esi
1004388c:	push   0x8
1004388e:	push   DWORD PTR ds:0x1007fe38
10043894:	call   DWORD PTR ds:0x1006618c
1004389a:	mov    ebx,eax
1004389c:	cmp    ebx,edi
1004389e:	jne    0x100438ec
100438a0:	cmp    DWORD PTR ds:0x1007ff94,edi
100438a6:	je     0x100438db
100438a8:	push   esi
100438a9:	call   0x10047c32
100438ae:	pop    ecx
100438af:	test   eax,eax
100438b1:	jne    0x10043829
100438b7:	mov    eax,DWORD PTR [ebp+0x10]
100438ba:	cmp    eax,edi
100438bc:	je     0x10043812
100438c2:	mov    DWORD PTR [eax],0xc
100438c8:	jmp    0x10043812
100438cd:	xor    edi,edi
100438cf:	mov    esi,DWORD PTR [ebp+0xc]
100438d2:	push   0x4
100438d4:	call   0x10047e65
100438d9:	pop    ecx
100438da:	ret    
100438db:	cmp    ebx,edi
100438dd:	jne    0x100438ec
100438df:	mov    eax,DWORD PTR [ebp+0x10]
100438e2:	cmp    eax,edi
100438e4:	je     0x100438ec
100438e6:	mov    DWORD PTR [eax],0xc
100438ec:	mov    eax,ebx
100438ee:	call   0x10046f79
100438f3:	ret    
100438f4:	push   ebp
100438f5:	mov    ebp,esp
100438f7:	push   ecx
100438f8:	and    DWORD PTR [ebp-0x4],0x0
100438fc:	push   edi
100438fd:	lea    eax,[ebp-0x4]
10043900:	push   eax
10043901:	push   DWORD PTR [ebp+0xc]
10043904:	push   DWORD PTR [ebp+0x8]
10043907:	call   0x100437d6
1004390c:	mov    edi,eax
1004390e:	add    esp,0xc
10043911:	test   edi,edi
10043913:	jne    0x1004392e
10043915:	push   esi
10043916:	mov    esi,DWORD PTR [ebp-0x4]
10043919:	test   esi,esi
1004391b:	je     0x1004392d
1004391d:	call   0x10046df5
10043922:	test   eax,eax
10043924:	je     0x1004392d
10043926:	call   0x10046df5
1004392b:	mov    DWORD PTR [eax],esi
1004392d:	pop    esi
1004392e:	mov    eax,edi
10043930:	pop    edi
10043931:	leave  
10043932:	ret    
10043933:	mov    eax,DWORD PTR [esp+0x4]
10043937:	mov    cx,WORD PTR [eax]
1004393a:	inc    eax
1004393b:	inc    eax
1004393c:	test   cx,cx
1004393f:	jne    0x10043937
10043941:	sub    eax,DWORD PTR [esp+0x4]
10043945:	sar    eax,1
10043947:	dec    eax
10043948:	ret    
10043949:	push   ebp
1004394a:	mov    ebp,esp
1004394c:	sub    esp,0x20
1004394f:	push   esi
10043950:	xor    esi,esi
10043952:	cmp    DWORD PTR [ebp+0xc],esi
10043955:	jne    0x10043974
10043957:	call   0x10046df5
1004395c:	push   esi
1004395d:	push   esi
1004395e:	push   esi
1004395f:	push   esi
10043960:	push   esi
10043961:	mov    DWORD PTR [eax],0x16
10043967:	call   0x100435cc
1004396c:	add    esp,0x14
1004396f:	or     eax,0xffffffff
10043972:	jmp    0x1004399b
10043974:	push   DWORD PTR [ebp+0x14]
10043977:	lea    eax,[ebp-0x20]
1004397a:	push   DWORD PTR [ebp+0x10]
1004397d:	mov    DWORD PTR [ebp-0x1c],0x7fffffff
10043984:	push   DWORD PTR [ebp+0xc]
10043987:	mov    DWORD PTR [ebp-0x14],0x42
1004398e:	push   eax
1004398f:	mov    DWORD PTR [ebp-0x18],esi
10043992:	mov    DWORD PTR [ebp-0x20],esi
10043995:	call   DWORD PTR [ebp+0x8]
10043998:	add    esp,0x10
1004399b:	pop    esi
1004399c:	leave  
1004399d:	ret    
1004399e:	push   DWORD PTR [esp+0x8]
100439a2:	push   0x0
100439a4:	push   DWORD PTR [esp+0xc]
100439a8:	push   0x10048bf2
100439ad:	call   0x10043949
100439b2:	add    esp,0x10
100439b5:	ret    
100439b6:	jmp    0x100436de
100439bb:	push   ebp
100439bc:	mov    ebp,esp
100439be:	push   esi
100439bf:	push   edi
100439c0:	mov    edi,DWORD PTR [ebp+0x10]
100439c3:	mov    eax,edi
100439c5:	sub    eax,0x0
100439c8:	je     0x10044fb3
100439ce:	dec    eax
100439cf:	je     0x10044fa2
100439d5:	dec    eax
100439d6:	je     0x10044f74
100439dc:	dec    eax
100439dd:	je     0x10044f2c
100439e3:	dec    eax
100439e4:	je     0x10044ea3
100439ea:	mov    ecx,DWORD PTR [ebp+0xc]
100439ed:	mov    eax,DWORD PTR [ebp+0x8]
100439f0:	push   ebx
100439f1:	push   0x20
100439f3:	pop    edx
100439f4:	jmp    0x10043e6b
100439f9:	mov    esi,DWORD PTR [eax]
100439fb:	cmp    esi,DWORD PTR [ecx]
100439fd:	je     0x10043a7b
100439ff:	movzx  esi,BYTE PTR [eax]
10043a02:	movzx  ebx,BYTE PTR [ecx]
10043a05:	sub    esi,ebx
10043a07:	je     0x10043a1e
10043a09:	xor    ebx,ebx
10043a0b:	test   esi,esi
10043a0d:	setg   bl
10043a10:	lea    ebx,[ebx+ebx*1-0x1]
10043a14:	mov    esi,ebx
10043a16:	test   esi,esi
10043a18:	jne    0x10043e87
10043a1e:	movzx  esi,BYTE PTR [eax+0x1]
10043a22:	movzx  ebx,BYTE PTR [ecx+0x1]
10043a26:	sub    esi,ebx
10043a28:	je     0x10043a3f
10043a2a:	xor    ebx,ebx
10043a2c:	test   esi,esi
10043a2e:	setg   bl
10043a31:	lea    ebx,[ebx+ebx*1-0x1]
10043a35:	mov    esi,ebx
10043a37:	test   esi,esi
10043a39:	jne    0x10043e87
10043a3f:	movzx  esi,BYTE PTR [eax+0x2]
10043a43:	movzx  ebx,BYTE PTR [ecx+0x2]
10043a47:	sub    esi,ebx
10043a49:	je     0x10043a60
10043a4b:	xor    ebx,ebx
10043a4d:	test   esi,esi
10043a4f:	setg   bl
10043a52:	lea    ebx,[ebx+ebx*1-0x1]
10043a56:	mov    esi,ebx
10043a58:	test   esi,esi
10043a5a:	jne    0x10043e87
10043a60:	movzx  esi,BYTE PTR [eax+0x3]
10043a64:	movzx  ebx,BYTE PTR [ecx+0x3]
10043a68:	sub    esi,ebx
10043a6a:	je     0x10043a7d
10043a6c:	xor    ebx,ebx
10043a6e:	test   esi,esi
10043a70:	setg   bl
10043a73:	lea    ebx,[ebx+ebx*1-0x1]
10043a77:	mov    esi,ebx
10043a79:	jmp    0x10043a7d
10043a7b:	xor    esi,esi
10043a7d:	test   esi,esi
10043a7f:	jne    0x10043e87
10043a85:	mov    esi,DWORD PTR [eax+0x4]
10043a88:	cmp    esi,DWORD PTR [ecx+0x4]
10043a8b:	je     0x10043b0b
10043a8d:	movzx  esi,BYTE PTR [eax+0x4]
10043a91:	movzx  ebx,BYTE PTR [ecx+0x4]
10043a95:	sub    esi,ebx
10043a97:	je     0x10043aae
10043a99:	xor    ebx,ebx
10043a9b:	test   esi,esi
10043a9d:	setg   bl
10043aa0:	lea    ebx,[ebx+ebx*1-0x1]
10043aa4:	mov    esi,ebx
10043aa6:	test   esi,esi
10043aa8:	jne    0x10043e87
10043aae:	movzx  esi,BYTE PTR [eax+0x5]
10043ab2:	movzx  ebx,BYTE PTR [ecx+0x5]
10043ab6:	sub    esi,ebx
10043ab8:	je     0x10043acf
10043aba:	xor    ebx,ebx
10043abc:	test   esi,esi
10043abe:	setg   bl
10043ac1:	lea    ebx,[ebx+ebx*1-0x1]
10043ac5:	mov    esi,ebx
10043ac7:	test   esi,esi
10043ac9:	jne    0x10043e87
10043acf:	movzx  esi,BYTE PTR [eax+0x6]
10043ad3:	movzx  ebx,BYTE PTR [ecx+0x6]
10043ad7:	sub    esi,ebx
10043ad9:	je     0x10043af0
10043adb:	xor    ebx,ebx
10043add:	test   esi,esi
10043adf:	setg   bl
10043ae2:	lea    ebx,[ebx+ebx*1-0x1]
10043ae6:	mov    esi,ebx
10043ae8:	test   esi,esi
10043aea:	jne    0x10043e87
10043af0:	movzx  esi,BYTE PTR [eax+0x7]
10043af4:	movzx  ebx,BYTE PTR [ecx+0x7]
10043af8:	sub    esi,ebx
10043afa:	je     0x10043b0d
10043afc:	xor    ebx,ebx
10043afe:	test   esi,esi
10043b00:	setg   bl
10043b03:	lea    ebx,[ebx+ebx*1-0x1]
10043b07:	mov    esi,ebx
10043b09:	jmp    0x10043b0d
10043b0b:	xor    esi,esi
10043b0d:	test   esi,esi
10043b0f:	jne    0x10043e87
10043b15:	mov    esi,DWORD PTR [eax+0x8]
10043b18:	cmp    esi,DWORD PTR [ecx+0x8]
10043b1b:	je     0x10043b9b
10043b1d:	movzx  esi,BYTE PTR [eax+0x8]
10043b21:	movzx  ebx,BYTE PTR [ecx+0x8]
10043b25:	sub    esi,ebx
10043b27:	je     0x10043b3e
10043b29:	xor    ebx,ebx
10043b2b:	test   esi,esi
10043b2d:	setg   bl
10043b30:	lea    ebx,[ebx+ebx*1-0x1]
10043b34:	mov    esi,ebx
10043b36:	test   esi,esi
10043b38:	jne    0x10043e87
10043b3e:	movzx  esi,BYTE PTR [eax+0x9]
10043b42:	movzx  ebx,BYTE PTR [ecx+0x9]
10043b46:	sub    esi,ebx
10043b48:	je     0x10043b5f
10043b4a:	xor    ebx,ebx
10043b4c:	test   esi,esi
10043b4e:	setg   bl
10043b51:	lea    ebx,[ebx+ebx*1-0x1]
10043b55:	mov    esi,ebx
10043b57:	test   esi,esi
10043b59:	jne    0x10043e87
10043b5f:	movzx  esi,BYTE PTR [eax+0xa]
10043b63:	movzx  ebx,BYTE PTR [ecx+0xa]
10043b67:	sub    esi,ebx
10043b69:	je     0x10043b80
10043b6b:	xor    ebx,ebx
10043b6d:	test   esi,esi
10043b6f:	setg   bl
10043b72:	lea    ebx,[ebx+ebx*1-0x1]
10043b76:	mov    esi,ebx
10043b78:	test   esi,esi
10043b7a:	jne    0x10043e87
10043b80:	movzx  esi,BYTE PTR [eax+0xb]
10043b84:	movzx  ebx,BYTE PTR [ecx+0xb]
10043b88:	sub    esi,ebx
10043b8a:	je     0x10043b9d
10043b8c:	xor    ebx,ebx
10043b8e:	test   esi,esi
10043b90:	setg   bl
10043b93:	lea    ebx,[ebx+ebx*1-0x1]
10043b97:	mov    esi,ebx
10043b99:	jmp    0x10043b9d
10043b9b:	xor    esi,esi
10043b9d:	test   esi,esi
10043b9f:	jne    0x10043e87
10043ba5:	mov    esi,DWORD PTR [eax+0xc]
10043ba8:	cmp    esi,DWORD PTR [ecx+0xc]
10043bab:	je     0x10043c2b
10043bad:	movzx  esi,BYTE PTR [eax+0xc]
10043bb1:	movzx  ebx,BYTE PTR [ecx+0xc]
10043bb5:	sub    esi,ebx
10043bb7:	je     0x10043bce
10043bb9:	xor    ebx,ebx
10043bbb:	test   esi,esi
10043bbd:	setg   bl
10043bc0:	lea    ebx,[ebx+ebx*1-0x1]
10043bc4:	mov    esi,ebx
10043bc6:	test   esi,esi
10043bc8:	jne    0x10043e87
10043bce:	movzx  esi,BYTE PTR [eax+0xd]
10043bd2:	movzx  ebx,BYTE PTR [ecx+0xd]
10043bd6:	sub    esi,ebx
10043bd8:	je     0x10043bef
10043bda:	xor    ebx,ebx
10043bdc:	test   esi,esi
10043bde:	setg   bl
10043be1:	lea    ebx,[ebx+ebx*1-0x1]
10043be5:	mov    esi,ebx
10043be7:	test   esi,esi
10043be9:	jne    0x10043e87
10043bef:	movzx  esi,BYTE PTR [eax+0xe]
10043bf3:	movzx  ebx,BYTE PTR [ecx+0xe]
10043bf7:	sub    esi,ebx
10043bf9:	je     0x10043c10
10043bfb:	xor    ebx,ebx
10043bfd:	test   esi,esi
10043bff:	setg   bl
10043c02:	lea    ebx,[ebx+ebx*1-0x1]
10043c06:	mov    esi,ebx
10043c08:	test   esi,esi
10043c0a:	jne    0x10043e87
10043c10:	movzx  esi,BYTE PTR [eax+0xf]
10043c14:	movzx  ebx,BYTE PTR [ecx+0xf]
10043c18:	sub    esi,ebx
10043c1a:	je     0x10043c2d
10043c1c:	xor    ebx,ebx
10043c1e:	test   esi,esi
10043c20:	setg   bl
10043c23:	lea    ebx,[ebx+ebx*1-0x1]
10043c27:	mov    esi,ebx
10043c29:	jmp    0x10043c2d
10043c2b:	xor    esi,esi
10043c2d:	test   esi,esi
10043c2f:	jne    0x10043e87
10043c35:	mov    esi,DWORD PTR [eax+0x10]
10043c38:	cmp    esi,DWORD PTR [ecx+0x10]
10043c3b:	je     0x10043cbb
10043c3d:	movzx  ebx,BYTE PTR [ecx+0x10]
10043c41:	movzx  esi,BYTE PTR [eax+0x10]
10043c45:	sub    esi,ebx
10043c47:	je     0x10043c5e
10043c49:	xor    ebx,ebx
10043c4b:	test   esi,esi
10043c4d:	setg   bl
10043c50:	lea    ebx,[ebx+ebx*1-0x1]
10043c54:	mov    esi,ebx
10043c56:	test   esi,esi
10043c58:	jne    0x10043e87
10043c5e:	movzx  esi,BYTE PTR [eax+0x11]
10043c62:	movzx  ebx,BYTE PTR [ecx+0x11]
10043c66:	sub    esi,ebx
10043c68:	je     0x10043c7f
10043c6a:	xor    ebx,ebx
10043c6c:	test   esi,esi
10043c6e:	setg   bl
10043c71:	lea    ebx,[ebx+ebx*1-0x1]
10043c75:	mov    esi,ebx
10043c77:	test   esi,esi
10043c79:	jne    0x10043e87
10043c7f:	movzx  esi,BYTE PTR [eax+0x12]
10043c83:	movzx  ebx,BYTE PTR [ecx+0x12]
10043c87:	sub    esi,ebx
10043c89:	je     0x10043ca0
10043c8b:	xor    ebx,ebx
10043c8d:	test   esi,esi
10043c8f:	setg   bl
10043c92:	lea    ebx,[ebx+ebx*1-0x1]
10043c96:	mov    esi,ebx
10043c98:	test   esi,esi
10043c9a:	jne    0x10043e87
10043ca0:	movzx  esi,BYTE PTR [eax+0x13]
10043ca4:	movzx  ebx,BYTE PTR [ecx+0x13]
10043ca8:	sub    esi,ebx
10043caa:	je     0x10043cbd
10043cac:	xor    ebx,ebx
10043cae:	test   esi,esi
10043cb0:	setg   bl
10043cb3:	lea    ebx,[ebx+ebx*1-0x1]
10043cb7:	mov    esi,ebx
10043cb9:	jmp    0x10043cbd
10043cbb:	xor    esi,esi
10043cbd:	test   esi,esi
10043cbf:	jne    0x10043e87
10043cc5:	mov    esi,DWORD PTR [eax+0x14]
10043cc8:	cmp    esi,DWORD PTR [ecx+0x14]
10043ccb:	je     0x10043d4b
10043ccd:	movzx  esi,BYTE PTR [eax+0x14]
10043cd1:	movzx  ebx,BYTE PTR [ecx+0x14]
10043cd5:	sub    esi,ebx
10043cd7:	je     0x10043cee
10043cd9:	xor    ebx,ebx
10043cdb:	test   esi,esi
10043cdd:	setg   bl
10043ce0:	lea    ebx,[ebx+ebx*1-0x1]
10043ce4:	mov    esi,ebx
10043ce6:	test   esi,esi
10043ce8:	jne    0x10043e87
10043cee:	movzx  esi,BYTE PTR [eax+0x15]
10043cf2:	movzx  ebx,BYTE PTR [ecx+0x15]
10043cf6:	sub    esi,ebx
10043cf8:	je     0x10043d0f
10043cfa:	xor    ebx,ebx
10043cfc:	test   esi,esi
10043cfe:	setg   bl
10043d01:	lea    ebx,[ebx+ebx*1-0x1]
10043d05:	mov    esi,ebx
10043d07:	test   esi,esi
10043d09:	jne    0x10043e87
10043d0f:	movzx  esi,BYTE PTR [eax+0x16]
10043d13:	movzx  ebx,BYTE PTR [ecx+0x16]
10043d17:	sub    esi,ebx
10043d19:	je     0x10043d30
10043d1b:	xor    ebx,ebx
10043d1d:	test   esi,esi
10043d1f:	setg   bl
10043d22:	lea    ebx,[ebx+ebx*1-0x1]
10043d26:	mov    esi,ebx
10043d28:	test   esi,esi
10043d2a:	jne    0x10043e87
10043d30:	movzx  esi,BYTE PTR [eax+0x17]
10043d34:	movzx  ebx,BYTE PTR [ecx+0x17]
10043d38:	sub    esi,ebx
10043d3a:	je     0x10043d4d
10043d3c:	xor    ebx,ebx
10043d3e:	test   esi,esi
10043d40:	setg   bl
10043d43:	lea    ebx,[ebx+ebx*1-0x1]
10043d47:	mov    esi,ebx
10043d49:	jmp    0x10043d4d
10043d4b:	xor    esi,esi
10043d4d:	test   esi,esi
10043d4f:	jne    0x10043e87
10043d55:	mov    esi,DWORD PTR [eax+0x18]
10043d58:	cmp    esi,DWORD PTR [ecx+0x18]
10043d5b:	je     0x10043ddb
10043d5d:	movzx  esi,BYTE PTR [eax+0x18]
10043d61:	movzx  ebx,BYTE PTR [ecx+0x18]
10043d65:	sub    esi,ebx
10043d67:	je     0x10043d7e
10043d69:	xor    ebx,ebx
10043d6b:	test   esi,esi
10043d6d:	setg   bl
10043d70:	lea    ebx,[ebx+ebx*1-0x1]
10043d74:	mov    esi,ebx
10043d76:	test   esi,esi
10043d78:	jne    0x10043e87
10043d7e:	movzx  esi,BYTE PTR [eax+0x19]
10043d82:	movzx  ebx,BYTE PTR [ecx+0x19]
10043d86:	sub    esi,ebx
10043d88:	je     0x10043d9f
10043d8a:	xor    ebx,ebx
10043d8c:	test   esi,esi
10043d8e:	setg   bl
10043d91:	lea    ebx,[ebx+ebx*1-0x1]
10043d95:	mov    esi,ebx
10043d97:	test   esi,esi
10043d99:	jne    0x10043e87
10043d9f:	movzx  esi,BYTE PTR [eax+0x1a]
10043da3:	movzx  ebx,BYTE PTR [ecx+0x1a]
10043da7:	sub    esi,ebx
10043da9:	je     0x10043dc0
10043dab:	xor    ebx,ebx
10043dad:	test   esi,esi
10043daf:	setg   bl
10043db2:	lea    ebx,[ebx+ebx*1-0x1]
10043db6:	mov    esi,ebx
10043db8:	test   esi,esi
10043dba:	jne    0x10043e87
10043dc0:	movzx  esi,BYTE PTR [eax+0x1b]
10043dc4:	movzx  ebx,BYTE PTR [ecx+0x1b]
10043dc8:	sub    esi,ebx
10043dca:	je     0x10043ddd
10043dcc:	xor    ebx,ebx
10043dce:	test   esi,esi
10043dd0:	setg   bl
10043dd3:	lea    ebx,[ebx+ebx*1-0x1]
10043dd7:	mov    esi,ebx
10043dd9:	jmp    0x10043ddd
10043ddb:	xor    esi,esi
10043ddd:	test   esi,esi
10043ddf:	jne    0x10043e87
10043de5:	mov    esi,DWORD PTR [eax+0x1c]
10043de8:	cmp    esi,DWORD PTR [ecx+0x1c]
10043deb:	je     0x10043e5f
10043ded:	movzx  esi,BYTE PTR [eax+0x1c]
10043df1:	movzx  ebx,BYTE PTR [ecx+0x1c]
10043df5:	sub    esi,ebx
10043df7:	je     0x10043e0a
10043df9:	xor    ebx,ebx
10043dfb:	test   esi,esi
10043dfd:	setg   bl
10043e00:	lea    ebx,[ebx+ebx*1-0x1]
10043e04:	mov    esi,ebx
10043e06:	test   esi,esi
10043e08:	jne    0x10043e87
10043e0a:	movzx  esi,BYTE PTR [eax+0x1d]
10043e0e:	movzx  ebx,BYTE PTR [ecx+0x1d]
10043e12:	sub    esi,ebx
10043e14:	je     0x10043e27
10043e16:	xor    ebx,ebx
10043e18:	test   esi,esi
10043e1a:	setg   bl
10043e1d:	lea    ebx,[ebx+ebx*1-0x1]
10043e21:	mov    esi,ebx
10043e23:	test   esi,esi
10043e25:	jne    0x10043e87
10043e27:	movzx  esi,BYTE PTR [eax+0x1e]
10043e2b:	movzx  ebx,BYTE PTR [ecx+0x1e]
10043e2f:	sub    esi,ebx
10043e31:	je     0x10043e44
10043e33:	xor    ebx,ebx
10043e35:	test   esi,esi
10043e37:	setg   bl
10043e3a:	lea    ebx,[ebx+ebx*1-0x1]
10043e3e:	mov    esi,ebx
10043e40:	test   esi,esi
10043e42:	jne    0x10043e87
10043e44:	movzx  esi,BYTE PTR [eax+0x1f]
10043e48:	movzx  ebx,BYTE PTR [ecx+0x1f]
10043e4c:	sub    esi,ebx
10043e4e:	je     0x10043e61
10043e50:	xor    ebx,ebx
10043e52:	test   esi,esi
10043e54:	setg   bl
10043e57:	lea    ebx,[ebx+ebx*1-0x1]
10043e5b:	mov    esi,ebx
10043e5d:	jmp    0x10043e61
10043e5f:	xor    esi,esi
10043e61:	test   esi,esi
10043e63:	jne    0x10043e87
10043e65:	add    eax,edx
10043e67:	add    ecx,edx
10043e69:	sub    edi,edx
10043e6b:	cmp    edi,edx
10043e6d:	jae    0x100439f9
10043e73:	add    eax,edi
10043e75:	add    ecx,edi
10043e77:	cmp    edi,0x1f
10043e7a:	ja     0x1004425a
10043e80:	jmp    DWORD PTR [edi*4+0x10044fbb]
10043e87:	mov    eax,esi
10043e89:	jmp    0x1004425c
10043e8e:	mov    edx,DWORD PTR [eax-0x1c]
10043e91:	cmp    edx,DWORD PTR [ecx-0x1c]
10043e94:	je     0x10043f07
10043e96:	movzx  esi,dl
10043e99:	movzx  edx,BYTE PTR [ecx-0x1c]
10043e9d:	sub    esi,edx
10043e9f:	je     0x10043eb2
10043ea1:	xor    edx,edx
10043ea3:	test   esi,esi
10043ea5:	setg   dl
10043ea8:	lea    edx,[edx+edx*1-0x1]
10043eac:	mov    esi,edx
10043eae:	test   esi,esi
10043eb0:	jne    0x10043e87
10043eb2:	movzx  esi,BYTE PTR [eax-0x1b]
10043eb6:	movzx  edx,BYTE PTR [ecx-0x1b]
10043eba:	sub    esi,edx
10043ebc:	je     0x10043ecf
10043ebe:	xor    edx,edx
10043ec0:	test   esi,esi
10043ec2:	setg   dl
10043ec5:	lea    edx,[edx+edx*1-0x1]
10043ec9:	mov    esi,edx
10043ecb:	test   esi,esi
10043ecd:	jne    0x10043e87
10043ecf:	movzx  esi,BYTE PTR [eax-0x1a]
10043ed3:	movzx  edx,BYTE PTR [ecx-0x1a]
10043ed7:	sub    esi,edx
10043ed9:	je     0x10043eec
10043edb:	xor    edx,edx
10043edd:	test   esi,esi
10043edf:	setg   dl
10043ee2:	lea    edx,[edx+edx*1-0x1]
10043ee6:	mov    esi,edx
10043ee8:	test   esi,esi
10043eea:	jne    0x10043e87
10043eec:	movzx  esi,BYTE PTR [eax-0x19]
10043ef0:	movzx  edx,BYTE PTR [ecx-0x19]
10043ef4:	sub    esi,edx
10043ef6:	je     0x10043f09
10043ef8:	xor    edx,edx
10043efa:	test   esi,esi
10043efc:	setg   dl
10043eff:	lea    edx,[edx+edx*1-0x1]
10043f03:	mov    esi,edx
10043f05:	jmp    0x10043f09
10043f07:	xor    esi,esi
10043f09:	test   esi,esi
10043f0b:	jne    0x10043e87
10043f11:	mov    edx,DWORD PTR [eax-0x18]
10043f14:	cmp    edx,DWORD PTR [ecx-0x18]
10043f17:	je     0x10043f96
10043f19:	movzx  esi,dl
10043f1c:	movzx  edx,BYTE PTR [ecx-0x18]
10043f20:	sub    esi,edx
10043f22:	je     0x10043f39
10043f24:	xor    edx,edx
10043f26:	test   esi,esi
10043f28:	setg   dl
10043f2b:	lea    edx,[edx+edx*1-0x1]
10043f2f:	mov    esi,edx
10043f31:	test   esi,esi
10043f33:	jne    0x10043e87
10043f39:	movzx  esi,BYTE PTR [eax-0x17]
10043f3d:	movzx  edx,BYTE PTR [ecx-0x17]
10043f41:	sub    esi,edx
10043f43:	je     0x10043f5a
10043f45:	xor    edx,edx
10043f47:	test   esi,esi
10043f49:	setg   dl
10043f4c:	lea    edx,[edx+edx*1-0x1]
10043f50:	mov    esi,edx
10043f52:	test   esi,esi
10043f54:	jne    0x10043e87
10043f5a:	movzx  esi,BYTE PTR [eax-0x16]
10043f5e:	movzx  edx,BYTE PTR [ecx-0x16]
10043f62:	sub    esi,edx
10043f64:	je     0x10043f7b
10043f66:	xor    edx,edx
10043f68:	test   esi,esi
10043f6a:	setg   dl
10043f6d:	lea    edx,[edx+edx*1-0x1]
10043f71:	mov    esi,edx
10043f73:	test   esi,esi
10043f75:	jne    0x10043e87
10043f7b:	movzx  esi,BYTE PTR [eax-0x15]
10043f7f:	movzx  edx,BYTE PTR [ecx-0x15]
10043f83:	sub    esi,edx
10043f85:	je     0x10043f98
10043f87:	xor    edx,edx
10043f89:	test   esi,esi
10043f8b:	setg   dl
10043f8e:	lea    edx,[edx+edx*1-0x1]
10043f92:	mov    esi,edx
10043f94:	jmp    0x10043f98
10043f96:	xor    esi,esi
10043f98:	test   esi,esi
10043f9a:	jne    0x10043e87
10043fa0:	mov    edx,DWORD PTR [eax-0x14]
10043fa3:	cmp    edx,DWORD PTR [ecx-0x14]
10043fa6:	je     0x10044025
10043fa8:	movzx  esi,dl
10043fab:	movzx  edx,BYTE PTR [ecx-0x14]
10043faf:	sub    esi,edx
10043fb1:	je     0x10043fc8
10043fb3:	xor    edx,edx
10043fb5:	test   esi,esi
10043fb7:	setg   dl
10043fba:	lea    edx,[edx+edx*1-0x1]
10043fbe:	mov    esi,edx
10043fc0:	test   esi,esi
10043fc2:	jne    0x10043e87
10043fc8:	movzx  esi,BYTE PTR [eax-0x13]
10043fcc:	movzx  edx,BYTE PTR [ecx-0x13]
10043fd0:	sub    esi,edx
10043fd2:	je     0x10043fe9
10043fd4:	xor    edx,edx
10043fd6:	test   esi,esi
10043fd8:	setg   dl
10043fdb:	lea    edx,[edx+edx*1-0x1]
10043fdf:	mov    esi,edx
10043fe1:	test   esi,esi
10043fe3:	jne    0x10043e87
10043fe9:	movzx  esi,BYTE PTR [eax-0x12]
10043fed:	movzx  edx,BYTE PTR [ecx-0x12]
10043ff1:	sub    esi,edx
10043ff3:	je     0x1004400a
10043ff5:	xor    edx,edx
10043ff7:	test   esi,esi
10043ff9:	setg   dl
10043ffc:	lea    edx,[edx+edx*1-0x1]
10044000:	mov    esi,edx
10044002:	test   esi,esi
10044004:	jne    0x10043e87
1004400a:	movzx  esi,BYTE PTR [eax-0x11]
1004400e:	movzx  edx,BYTE PTR [ecx-0x11]
10044012:	sub    esi,edx
10044014:	je     0x10044027
10044016:	xor    edx,edx
10044018:	test   esi,esi
1004401a:	setg   dl
1004401d:	lea    edx,[edx+edx*1-0x1]
10044021:	mov    esi,edx
10044023:	jmp    0x10044027
10044025:	xor    esi,esi
10044027:	test   esi,esi
10044029:	jne    0x10043e87
1004402f:	mov    edx,DWORD PTR [eax-0x10]
10044032:	cmp    edx,DWORD PTR [ecx-0x10]
10044035:	je     0x100440b4
10044037:	movzx  esi,dl
1004403a:	movzx  edx,BYTE PTR [ecx-0x10]
1004403e:	sub    esi,edx
10044040:	je     0x10044057
10044042:	xor    edx,edx
10044044:	test   esi,esi
10044046:	setg   dl
10044049:	lea    edx,[edx+edx*1-0x1]
1004404d:	mov    esi,edx
1004404f:	test   esi,esi
10044051:	jne    0x10043e87
10044057:	movzx  esi,BYTE PTR [eax-0xf]
1004405b:	movzx  edx,BYTE PTR [ecx-0xf]
1004405f:	sub    esi,edx
10044061:	je     0x10044078
10044063:	xor    edx,edx
10044065:	test   esi,esi
10044067:	setg   dl
1004406a:	lea    edx,[edx+edx*1-0x1]
1004406e:	mov    esi,edx
10044070:	test   esi,esi
10044072:	jne    0x10043e87
10044078:	movzx  esi,BYTE PTR [eax-0xe]
1004407c:	movzx  edx,BYTE PTR [ecx-0xe]
10044080:	sub    esi,edx
10044082:	je     0x10044099
10044084:	xor    edx,edx
10044086:	test   esi,esi
10044088:	setg   dl
1004408b:	lea    edx,[edx+edx*1-0x1]
1004408f:	mov    esi,edx
10044091:	test   esi,esi
10044093:	jne    0x10043e87
10044099:	movzx  esi,BYTE PTR [eax-0xd]
1004409d:	movzx  edx,BYTE PTR [ecx-0xd]
100440a1:	sub    esi,edx
100440a3:	je     0x100440b6
100440a5:	xor    edx,edx
100440a7:	test   esi,esi
100440a9:	setg   dl
100440ac:	lea    edx,[edx+edx*1-0x1]
100440b0:	mov    esi,edx
100440b2:	jmp    0x100440b6
100440b4:	xor    esi,esi
100440b6:	test   esi,esi
100440b8:	jne    0x10043e87
100440be:	mov    edx,DWORD PTR [eax-0xc]
100440c1:	cmp    edx,DWORD PTR [ecx-0xc]
100440c4:	je     0x10044144
100440c6:	movzx  edx,BYTE PTR [ecx-0xc]
100440ca:	movzx  esi,BYTE PTR [eax-0xc]
100440ce:	sub    esi,edx
100440d0:	je     0x100440e7
100440d2:	xor    edx,edx
100440d4:	test   esi,esi
100440d6:	setg   dl
100440d9:	lea    edx,[edx+edx*1-0x1]
100440dd:	mov    esi,edx
100440df:	test   esi,esi
100440e1:	jne    0x10043e87
100440e7:	movzx  esi,BYTE PTR [eax-0xb]
100440eb:	movzx  edx,BYTE PTR [ecx-0xb]
100440ef:	sub    esi,edx
100440f1:	je     0x10044108
100440f3:	xor    edx,edx
100440f5:	test   esi,esi
100440f7:	setg   dl
100440fa:	lea    edx,[edx+edx*1-0x1]
100440fe:	mov    esi,edx
10044100:	test   esi,esi
10044102:	jne    0x10043e87
10044108:	movzx  esi,BYTE PTR [eax-0xa]
1004410c:	movzx  edx,BYTE PTR [ecx-0xa]
10044110:	sub    esi,edx
10044112:	je     0x10044129
10044114:	xor    edx,edx
10044116:	test   esi,esi
10044118:	setg   dl
1004411b:	lea    edx,[edx+edx*1-0x1]
1004411f:	mov    esi,edx
10044121:	test   esi,esi
10044123:	jne    0x10043e87
10044129:	movzx  esi,BYTE PTR [eax-0x9]
1004412d:	movzx  edx,BYTE PTR [ecx-0x9]
10044131:	sub    esi,edx
10044133:	je     0x10044146
10044135:	xor    edx,edx
10044137:	test   esi,esi
10044139:	setg   dl
1004413c:	lea    edx,[edx+edx*1-0x1]
10044140:	mov    esi,edx
10044142:	jmp    0x10044146
10044144:	xor    esi,esi
10044146:	test   esi,esi
10044148:	jne    0x10043e87
1004414e:	mov    edx,DWORD PTR [eax-0x8]
10044151:	cmp    edx,DWORD PTR [ecx-0x8]
10044154:	je     0x100441d3
10044156:	movzx  esi,dl
10044159:	movzx  edx,BYTE PTR [ecx-0x8]
1004415d:	sub    esi,edx
1004415f:	je     0x10044176
10044161:	xor    edx,edx
10044163:	test   esi,esi
10044165:	setg   dl
10044168:	lea    edx,[edx+edx*1-0x1]
1004416c:	mov    esi,edx
1004416e:	test   esi,esi
10044170:	jne    0x10043e87
10044176:	movzx  esi,BYTE PTR [eax-0x7]
1004417a:	movzx  edx,BYTE PTR [ecx-0x7]
1004417e:	sub    esi,edx
10044180:	je     0x10044197
10044182:	xor    edx,edx
10044184:	test   esi,esi
10044186:	setg   dl
10044189:	lea    edx,[edx+edx*1-0x1]
1004418d:	mov    esi,edx
1004418f:	test   esi,esi
10044191:	jne    0x10043e87
10044197:	movzx  esi,BYTE PTR [eax-0x6]
1004419b:	movzx  edx,BYTE PTR [ecx-0x6]
1004419f:	sub    esi,edx
100441a1:	je     0x100441b8
100441a3:	xor    edx,edx
100441a5:	test   esi,esi
100441a7:	setg   dl
100441aa:	lea    edx,[edx+edx*1-0x1]
100441ae:	mov    esi,edx
100441b0:	test   esi,esi
100441b2:	jne    0x10043e87
100441b8:	movzx  esi,BYTE PTR [eax-0x5]
100441bc:	movzx  edx,BYTE PTR [ecx-0x5]
100441c0:	sub    esi,edx
100441c2:	je     0x100441d5
100441c4:	xor    edx,edx
100441c6:	test   esi,esi
100441c8:	setg   dl
100441cb:	lea    edx,[edx+edx*1-0x1]
100441cf:	mov    esi,edx
100441d1:	jmp    0x100441d5
100441d3:	xor    esi,esi
100441d5:	test   esi,esi
100441d7:	jne    0x10043e87
100441dd:	mov    edx,DWORD PTR [eax-0x4]
100441e0:	cmp    edx,DWORD PTR [ecx-0x4]
100441e3:	je     0x10044254
100441e5:	movzx  esi,dl
100441e8:	movzx  edx,BYTE PTR [ecx-0x4]
100441ec:	sub    esi,edx
100441ee:	je     0x100441ff
100441f0:	xor    edx,edx
100441f2:	test   esi,esi
100441f4:	setg   dl
100441f7:	lea    edx,[edx+edx*1-0x1]
100441fb:	test   edx,edx
100441fd:	jne    0x10044235
100441ff:	movzx  esi,BYTE PTR [eax-0x3]
10044203:	movzx  edx,BYTE PTR [ecx-0x3]
10044207:	sub    esi,edx
10044209:	je     0x1004421a
1004420b:	xor    edx,edx
1004420d:	test   esi,esi
1004420f:	setg   dl
10044212:	lea    edx,[edx+edx*1-0x1]
10044216:	test   edx,edx
10044218:	jne    0x10044235
1004421a:	movzx  esi,BYTE PTR [eax-0x2]
1004421e:	movzx  edx,BYTE PTR [ecx-0x2]
10044222:	sub    esi,edx
10044224:	je     0x10044239
10044226:	xor    edx,edx
10044228:	test   esi,esi
1004422a:	setg   dl
1004422d:	lea    edx,[edx+edx*1-0x1]
10044231:	test   edx,edx
10044233:	je     0x10044239
10044235:	mov    eax,edx
10044237:	jmp    0x10044256
10044239:	movzx  eax,BYTE PTR [eax-0x1]
1004423d:	movzx  ecx,BYTE PTR [ecx-0x1]
10044241:	sub    eax,ecx
10044243:	je     0x10044256
10044245:	xor    ecx,ecx
10044247:	test   eax,eax
10044249:	setg   cl
1004424c:	lea    ecx,[ecx+ecx*1-0x1]
10044250:	mov    eax,ecx
10044252:	jmp    0x10044256
10044254:	xor    eax,eax
10044256:	test   eax,eax
10044258:	jne    0x1004425c
1004425a:	xor    eax,eax
1004425c:	pop    ebx
1004425d:	jmp    0x10044fb5
10044262:	mov    edx,DWORD PTR [eax-0x1d]
10044265:	cmp    edx,DWORD PTR [ecx-0x1d]
10044268:	je     0x100442e7
1004426a:	movzx  esi,dl
1004426d:	movzx  edx,BYTE PTR [ecx-0x1d]
10044271:	sub    esi,edx
10044273:	je     0x1004428a
10044275:	xor    edx,edx
10044277:	test   esi,esi
10044279:	setg   dl
1004427c:	lea    edx,[edx+edx*1-0x1]
10044280:	mov    esi,edx
10044282:	test   esi,esi
10044284:	jne    0x10043e87
1004428a:	movzx  esi,BYTE PTR [eax-0x1c]
1004428e:	movzx  edx,BYTE PTR [ecx-0x1c]
10044292:	sub    esi,edx
10044294:	je     0x100442ab
10044296:	xor    edx,edx
10044298:	test   esi,esi
1004429a:	setg   dl
1004429d:	lea    edx,[edx+edx*1-0x1]
100442a1:	mov    esi,edx
100442a3:	test   esi,esi
100442a5:	jne    0x10043e87
100442ab:	movzx  esi,BYTE PTR [eax-0x1b]
100442af:	movzx  edx,BYTE PTR [ecx-0x1b]
100442b3:	sub    esi,edx
100442b5:	je     0x100442cc
100442b7:	xor    edx,edx
100442b9:	test   esi,esi
100442bb:	setg   dl
100442be:	lea    edx,[edx+edx*1-0x1]
100442c2:	mov    esi,edx
100442c4:	test   esi,esi
100442c6:	jne    0x10043e87
100442cc:	movzx  esi,BYTE PTR [eax-0x1a]
100442d0:	movzx  edx,BYTE PTR [ecx-0x1a]
100442d4:	sub    esi,edx
100442d6:	je     0x100442e9
100442d8:	xor    edx,edx
100442da:	test   esi,esi
100442dc:	setg   dl
100442df:	lea    edx,[edx+edx*1-0x1]
100442e3:	mov    esi,edx
100442e5:	jmp    0x100442e9
100442e7:	xor    esi,esi
100442e9:	test   esi,esi
100442eb:	jne    0x10043e87
100442f1:	mov    edx,DWORD PTR [eax-0x19]
100442f4:	cmp    edx,DWORD PTR [ecx-0x19]
100442f7:	je     0x10044376
100442f9:	movzx  esi,dl
100442fc:	movzx  edx,BYTE PTR [ecx-0x19]
10044300:	sub    esi,edx
10044302:	je     0x10044319
10044304:	xor    edx,edx
10044306:	test   esi,esi
10044308:	setg   dl
1004430b:	lea    edx,[edx+edx*1-0x1]
1004430f:	mov    esi,edx
10044311:	test   esi,esi
10044313:	jne    0x10043e87
10044319:	movzx  esi,BYTE PTR [eax-0x18]
1004431d:	movzx  edx,BYTE PTR [ecx-0x18]
10044321:	sub    esi,edx
10044323:	je     0x1004433a
10044325:	xor    edx,edx
10044327:	test   esi,esi
10044329:	setg   dl
1004432c:	lea    edx,[edx+edx*1-0x1]
10044330:	mov    esi,edx
10044332:	test   esi,esi
10044334:	jne    0x10043e87
1004433a:	movzx  esi,BYTE PTR [eax-0x17]
1004433e:	movzx  edx,BYTE PTR [ecx-0x17]
10044342:	sub    esi,edx
10044344:	je     0x1004435b
10044346:	xor    edx,edx
10044348:	test   esi,esi
1004434a:	setg   dl
1004434d:	lea    edx,[edx+edx*1-0x1]
10044351:	mov    esi,edx
10044353:	test   esi,esi
10044355:	jne    0x10043e87
1004435b:	movzx  esi,BYTE PTR [eax-0x16]
1004435f:	movzx  edx,BYTE PTR [ecx-0x16]
10044363:	sub    esi,edx
10044365:	je     0x10044378
10044367:	xor    edx,edx
10044369:	test   esi,esi
1004436b:	setg   dl
1004436e:	lea    edx,[edx+edx*1-0x1]
10044372:	mov    esi,edx
10044374:	jmp    0x10044378
10044376:	xor    esi,esi
10044378:	test   esi,esi
1004437a:	jne    0x10043e87
10044380:	mov    edx,DWORD PTR [eax-0x15]
10044383:	cmp    edx,DWORD PTR [ecx-0x15]
10044386:	je     0x10044405
10044388:	movzx  esi,dl
1004438b:	movzx  edx,BYTE PTR [ecx-0x15]
1004438f:	sub    esi,edx
10044391:	je     0x100443a8
10044393:	xor    edx,edx
10044395:	test   esi,esi
10044397:	setg   dl
1004439a:	lea    edx,[edx+edx*1-0x1]
1004439e:	mov    esi,edx
100443a0:	test   esi,esi
100443a2:	jne    0x10043e87
100443a8:	movzx  esi,BYTE PTR [eax-0x14]
100443ac:	movzx  edx,BYTE PTR [ecx-0x14]
100443b0:	sub    esi,edx
100443b2:	je     0x100443c9
100443b4:	xor    edx,edx
100443b6:	test   esi,esi
100443b8:	setg   dl
100443bb:	lea    edx,[edx+edx*1-0x1]
100443bf:	mov    esi,edx
100443c1:	test   esi,esi
100443c3:	jne    0x10043e87
100443c9:	movzx  esi,BYTE PTR [eax-0x13]
100443cd:	movzx  edx,BYTE PTR [ecx-0x13]
100443d1:	sub    esi,edx
100443d3:	je     0x100443ea
100443d5:	xor    edx,edx
100443d7:	test   esi,esi
100443d9:	setg   dl
100443dc:	lea    edx,[edx+edx*1-0x1]
100443e0:	mov    esi,edx
100443e2:	test   esi,esi
100443e4:	jne    0x10043e87
100443ea:	movzx  esi,BYTE PTR [eax-0x12]
100443ee:	movzx  edx,BYTE PTR [ecx-0x12]
100443f2:	sub    esi,edx
100443f4:	je     0x10044407
100443f6:	xor    edx,edx
100443f8:	test   esi,esi
100443fa:	setg   dl
100443fd:	lea    edx,[edx+edx*1-0x1]
10044401:	mov    esi,edx
10044403:	jmp    0x10044407
10044405:	xor    esi,esi
10044407:	test   esi,esi
10044409:	jne    0x10043e87
1004440f:	mov    edx,DWORD PTR [eax-0x11]
10044412:	cmp    edx,DWORD PTR [ecx-0x11]
10044415:	je     0x10044494
10044417:	movzx  esi,dl
1004441a:	movzx  edx,BYTE PTR [ecx-0x11]
1004441e:	sub    esi,edx
10044420:	je     0x10044437
10044422:	xor    edx,edx
10044424:	test   esi,esi
10044426:	setg   dl
10044429:	lea    edx,[edx+edx*1-0x1]
1004442d:	mov    esi,edx
1004442f:	test   esi,esi
10044431:	jne    0x10043e87
10044437:	movzx  esi,BYTE PTR [eax-0x10]
1004443b:	movzx  edx,BYTE PTR [ecx-0x10]
1004443f:	sub    esi,edx
10044441:	je     0x10044458
10044443:	xor    edx,edx
10044445:	test   esi,esi
10044447:	setg   dl
1004444a:	lea    edx,[edx+edx*1-0x1]
1004444e:	mov    esi,edx
10044450:	test   esi,esi
10044452:	jne    0x10043e87
10044458:	movzx  esi,BYTE PTR [eax-0xf]
1004445c:	movzx  edx,BYTE PTR [ecx-0xf]
10044460:	sub    esi,edx
10044462:	je     0x10044479
10044464:	xor    edx,edx
10044466:	test   esi,esi
10044468:	setg   dl
1004446b:	lea    edx,[edx+edx*1-0x1]
1004446f:	mov    esi,edx
10044471:	test   esi,esi
10044473:	jne    0x10043e87
10044479:	movzx  esi,BYTE PTR [eax-0xe]
1004447d:	movzx  edx,BYTE PTR [ecx-0xe]
10044481:	sub    esi,edx
10044483:	je     0x10044496
10044485:	xor    edx,edx
10044487:	test   esi,esi
10044489:	setg   dl
1004448c:	lea    edx,[edx+edx*1-0x1]
10044490:	mov    esi,edx
10044492:	jmp    0x10044496
10044494:	xor    esi,esi
10044496:	test   esi,esi
10044498:	jne    0x10043e87
1004449e:	mov    edx,DWORD PTR [eax-0xd]
100444a1:	cmp    edx,DWORD PTR [ecx-0xd]
100444a4:	je     0x10044523
100444a6:	movzx  esi,dl
100444a9:	movzx  edx,BYTE PTR [ecx-0xd]
100444ad:	sub    esi,edx
100444af:	je     0x100444c6
100444b1:	xor    edx,edx
100444b3:	test   esi,esi
100444b5:	setg   dl
100444b8:	lea    edx,[edx+edx*1-0x1]
100444bc:	mov    esi,edx
100444be:	test   esi,esi
100444c0:	jne    0x10043e87
100444c6:	movzx  esi,BYTE PTR [eax-0xc]
100444ca:	movzx  edx,BYTE PTR [ecx-0xc]
100444ce:	sub    esi,edx
100444d0:	je     0x100444e7
100444d2:	xor    edx,edx
100444d4:	test   esi,esi
100444d6:	setg   dl
100444d9:	lea    edx,[edx+edx*1-0x1]
100444dd:	mov    esi,edx
100444df:	test   esi,esi
100444e1:	jne    0x10043e87
100444e7:	movzx  esi,BYTE PTR [eax-0xb]
100444eb:	movzx  edx,BYTE PTR [ecx-0xb]
100444ef:	sub    esi,edx
100444f1:	je     0x10044508
100444f3:	xor    edx,edx
100444f5:	test   esi,esi
100444f7:	setg   dl
100444fa:	lea    edx,[edx+edx*1-0x1]
100444fe:	mov    esi,edx
10044500:	test   esi,esi
10044502:	jne    0x10043e87
10044508:	movzx  esi,BYTE PTR [eax-0xa]
1004450c:	movzx  edx,BYTE PTR [ecx-0xa]
10044510:	sub    esi,edx
10044512:	je     0x10044525
10044514:	xor    edx,edx
10044516:	test   esi,esi
10044518:	setg   dl
1004451b:	lea    edx,[edx+edx*1-0x1]
1004451f:	mov    esi,edx
10044521:	jmp    0x10044525
10044523:	xor    esi,esi
10044525:	test   esi,esi
10044527:	jne    0x10043e87
1004452d:	mov    edx,DWORD PTR [eax-0x9]
10044530:	cmp    edx,DWORD PTR [ecx-0x9]
10044533:	je     0x100445b3
10044535:	movzx  edx,BYTE PTR [ecx-0x9]
10044539:	movzx  esi,BYTE PTR [eax-0x9]
1004453d:	sub    esi,edx
1004453f:	je     0x10044556
10044541:	xor    edx,edx
10044543:	test   esi,esi
10044545:	setg   dl
10044548:	lea    edx,[edx+edx*1-0x1]
1004454c:	mov    esi,edx
1004454e:	test   esi,esi
10044550:	jne    0x10043e87
10044556:	movzx  esi,BYTE PTR [eax-0x8]
1004455a:	movzx  edx,BYTE PTR [ecx-0x8]
1004455e:	sub    esi,edx
10044560:	je     0x10044577
10044562:	xor    edx,edx
10044564:	test   esi,esi
10044566:	setg   dl
10044569:	lea    edx,[edx+edx*1-0x1]
1004456d:	mov    esi,edx
1004456f:	test   esi,esi
10044571:	jne    0x10043e87
10044577:	movzx  esi,BYTE PTR [eax-0x7]
1004457b:	movzx  edx,BYTE PTR [ecx-0x7]
1004457f:	sub    esi,edx
10044581:	je     0x10044598
10044583:	xor    edx,edx
10044585:	test   esi,esi
10044587:	setg   dl
1004458a:	lea    edx,[edx+edx*1-0x1]
1004458e:	mov    esi,edx
10044590:	test   esi,esi
10044592:	jne    0x10043e87
10044598:	movzx  esi,BYTE PTR [eax-0x6]
1004459c:	movzx  edx,BYTE PTR [ecx-0x6]
100445a0:	sub    esi,edx
100445a2:	je     0x100445b5
100445a4:	xor    edx,edx
100445a6:	test   esi,esi
100445a8:	setg   dl
100445ab:	lea    edx,[edx+edx*1-0x1]
100445af:	mov    esi,edx
100445b1:	jmp    0x100445b5
100445b3:	xor    esi,esi
100445b5:	test   esi,esi
100445b7:	jne    0x10043e87
100445bd:	mov    edx,DWORD PTR [eax-0x5]
100445c0:	cmp    edx,DWORD PTR [ecx-0x5]
100445c3:	je     0x10044642
100445c5:	movzx  esi,dl
100445c8:	movzx  edx,BYTE PTR [ecx-0x5]
100445cc:	sub    esi,edx
100445ce:	je     0x100445e5
100445d0:	xor    edx,edx
100445d2:	test   esi,esi
100445d4:	setg   dl
100445d7:	lea    edx,[edx+edx*1-0x1]
100445db:	mov    esi,edx
100445dd:	test   esi,esi
100445df:	jne    0x10043e87
100445e5:	movzx  esi,BYTE PTR [eax-0x4]
100445e9:	movzx  edx,BYTE PTR [ecx-0x4]
100445ed:	sub    esi,edx
100445ef:	je     0x10044606
100445f1:	xor    edx,edx
100445f3:	test   esi,esi
100445f5:	setg   dl
100445f8:	lea    edx,[edx+edx*1-0x1]
100445fc:	mov    esi,edx
100445fe:	test   esi,esi
10044600:	jne    0x10043e87
10044606:	movzx  esi,BYTE PTR [eax-0x3]
1004460a:	movzx  edx,BYTE PTR [ecx-0x3]
1004460e:	sub    esi,edx
10044610:	je     0x10044627
10044612:	xor    edx,edx
10044614:	test   esi,esi
10044616:	setg   dl
10044619:	lea    edx,[edx+edx*1-0x1]
1004461d:	mov    esi,edx
1004461f:	test   esi,esi
10044621:	jne    0x10043e87
10044627:	movzx  esi,BYTE PTR [eax-0x2]
1004462b:	movzx  edx,BYTE PTR [ecx-0x2]
1004462f:	sub    esi,edx
10044631:	je     0x10044644
10044633:	xor    edx,edx
10044635:	test   esi,esi
10044637:	setg   dl
1004463a:	lea    edx,[edx+edx*1-0x1]
1004463e:	mov    esi,edx
10044640:	jmp    0x10044644
10044642:	xor    esi,esi
10044644:	test   esi,esi
10044646:	jne    0x10043e87
1004464c:	movzx  ecx,BYTE PTR [ecx-0x1]
10044650:	movzx  eax,BYTE PTR [eax-0x1]
10044654:	sub    eax,ecx
10044656:	je     0x1004425c
1004465c:	xor    ecx,ecx
1004465e:	test   eax,eax
10044660:	setg   cl
10044663:	lea    ecx,[ecx+ecx*1-0x1]
10044667:	mov    eax,ecx
10044669:	jmp    0x1004425c
1004466e:	mov    edx,DWORD PTR [eax-0x1e]
10044671:	cmp    edx,DWORD PTR [ecx-0x1e]
10044674:	je     0x100446f3
10044676:	movzx  esi,dl
10044679:	movzx  edx,BYTE PTR [ecx-0x1e]
1004467d:	sub    esi,edx
1004467f:	je     0x10044696
10044681:	xor    edx,edx
10044683:	test   esi,esi
10044685:	setg   dl
10044688:	lea    edx,[edx+edx*1-0x1]
1004468c:	mov    esi,edx
1004468e:	test   esi,esi
10044690:	jne    0x10043e87
10044696:	movzx  esi,BYTE PTR [eax-0x1d]
1004469a:	movzx  edx,BYTE PTR [ecx-0x1d]
1004469e:	sub    esi,edx
100446a0:	je     0x100446b7
100446a2:	xor    edx,edx
100446a4:	test   esi,esi
100446a6:	setg   dl
100446a9:	lea    edx,[edx+edx*1-0x1]
100446ad:	mov    esi,edx
100446af:	test   esi,esi
100446b1:	jne    0x10043e87
100446b7:	movzx  esi,BYTE PTR [eax-0x1c]
100446bb:	movzx  edx,BYTE PTR [ecx-0x1c]
100446bf:	sub    esi,edx
100446c1:	je     0x100446d8
100446c3:	xor    edx,edx
100446c5:	test   esi,esi
100446c7:	setg   dl
100446ca:	lea    edx,[edx+edx*1-0x1]
100446ce:	mov    esi,edx
100446d0:	test   esi,esi
100446d2:	jne    0x10043e87
100446d8:	movzx  esi,BYTE PTR [eax-0x1b]
100446dc:	movzx  edx,BYTE PTR [ecx-0x1b]
100446e0:	sub    esi,edx
100446e2:	je     0x100446f5
100446e4:	xor    edx,edx
100446e6:	test   esi,esi
100446e8:	setg   dl
100446eb:	lea    edx,[edx+edx*1-0x1]
100446ef:	mov    esi,edx
100446f1:	jmp    0x100446f5
100446f3:	xor    esi,esi
100446f5:	test   esi,esi
100446f7:	jne    0x10043e87
100446fd:	mov    edx,DWORD PTR [eax-0x1a]
10044700:	cmp    edx,DWORD PTR [ecx-0x1a]
10044703:	je     0x10044782
10044705:	movzx  esi,dl
10044708:	movzx  edx,BYTE PTR [ecx-0x1a]
1004470c:	sub    esi,edx
1004470e:	je     0x10044725
10044710:	xor    edx,edx
10044712:	test   esi,esi
10044714:	setg   dl
10044717:	lea    edx,[edx+edx*1-0x1]
1004471b:	mov    esi,edx
1004471d:	test   esi,esi
1004471f:	jne    0x10043e87
10044725:	movzx  esi,BYTE PTR [eax-0x19]
10044729:	movzx  edx,BYTE PTR [ecx-0x19]
1004472d:	sub    esi,edx
1004472f:	je     0x10044746
10044731:	xor    edx,edx
10044733:	test   esi,esi
10044735:	setg   dl
10044738:	lea    edx,[edx+edx*1-0x1]
1004473c:	mov    esi,edx
1004473e:	test   esi,esi
10044740:	jne    0x10043e87
10044746:	movzx  esi,BYTE PTR [eax-0x18]
1004474a:	movzx  edx,BYTE PTR [ecx-0x18]
1004474e:	sub    esi,edx
10044750:	je     0x10044767
10044752:	xor    edx,edx
10044754:	test   esi,esi
10044756:	setg   dl
10044759:	lea    edx,[edx+edx*1-0x1]
1004475d:	mov    esi,edx
1004475f:	test   esi,esi
10044761:	jne    0x10043e87
10044767:	movzx  esi,BYTE PTR [eax-0x17]
1004476b:	movzx  edx,BYTE PTR [ecx-0x17]
1004476f:	sub    esi,edx
10044771:	je     0x10044784
10044773:	xor    edx,edx
10044775:	test   esi,esi
10044777:	setg   dl
1004477a:	lea    edx,[edx+edx*1-0x1]
1004477e:	mov    esi,edx
10044780:	jmp    0x10044784
10044782:	xor    esi,esi
10044784:	test   esi,esi
10044786:	jne    0x10043e87
1004478c:	mov    edx,DWORD PTR [eax-0x16]
1004478f:	cmp    edx,DWORD PTR [ecx-0x16]
10044792:	je     0x10044811
10044794:	movzx  esi,dl
10044797:	movzx  edx,BYTE PTR [ecx-0x16]
1004479b:	sub    esi,edx
1004479d:	je     0x100447b4
1004479f:	xor    edx,edx
100447a1:	test   esi,esi
100447a3:	setg   dl
100447a6:	lea    edx,[edx+edx*1-0x1]
100447aa:	mov    esi,edx
100447ac:	test   esi,esi
100447ae:	jne    0x10043e87
100447b4:	movzx  esi,BYTE PTR [eax-0x15]
100447b8:	movzx  edx,BYTE PTR [ecx-0x15]
100447bc:	sub    esi,edx
100447be:	je     0x100447d5
100447c0:	xor    edx,edx
100447c2:	test   esi,esi
100447c4:	setg   dl
100447c7:	lea    edx,[edx+edx*1-0x1]
100447cb:	mov    esi,edx
100447cd:	test   esi,esi
100447cf:	jne    0x10043e87
100447d5:	movzx  esi,BYTE PTR [eax-0x14]
100447d9:	movzx  edx,BYTE PTR [ecx-0x14]
100447dd:	sub    esi,edx
100447df:	je     0x100447f6
100447e1:	xor    edx,edx
100447e3:	test   esi,esi
100447e5:	setg   dl
100447e8:	lea    edx,[edx+edx*1-0x1]
100447ec:	mov    esi,edx
100447ee:	test   esi,esi
100447f0:	jne    0x10043e87
100447f6:	movzx  esi,BYTE PTR [eax-0x13]
100447fa:	movzx  edx,BYTE PTR [ecx-0x13]
100447fe:	sub    esi,edx
10044800:	je     0x10044813
10044802:	xor    edx,edx
10044804:	test   esi,esi
10044806:	setg   dl
10044809:	lea    edx,[edx+edx*1-0x1]
1004480d:	mov    esi,edx
1004480f:	jmp    0x10044813
10044811:	xor    esi,esi
10044813:	test   esi,esi
10044815:	jne    0x10043e87
1004481b:	mov    edx,DWORD PTR [eax-0x12]
1004481e:	cmp    edx,DWORD PTR [ecx-0x12]
10044821:	je     0x100448a0
10044823:	movzx  esi,dl
10044826:	movzx  edx,BYTE PTR [ecx-0x12]
1004482a:	sub    esi,edx
1004482c:	je     0x10044843
1004482e:	xor    edx,edx
10044830:	test   esi,esi
10044832:	setg   dl
10044835:	lea    edx,[edx+edx*1-0x1]
10044839:	mov    esi,edx
1004483b:	test   esi,esi
1004483d:	jne    0x10043e87
10044843:	movzx  esi,BYTE PTR [eax-0x11]
10044847:	movzx  edx,BYTE PTR [ecx-0x11]
1004484b:	sub    esi,edx
1004484d:	je     0x10044864
1004484f:	xor    edx,edx
10044851:	test   esi,esi
10044853:	setg   dl
10044856:	lea    edx,[edx+edx*1-0x1]
1004485a:	mov    esi,edx
1004485c:	test   esi,esi
1004485e:	jne    0x10043e87
10044864:	movzx  esi,BYTE PTR [eax-0x10]
10044868:	movzx  edx,BYTE PTR [ecx-0x10]
1004486c:	sub    esi,edx
1004486e:	je     0x10044885
10044870:	xor    edx,edx
10044872:	test   esi,esi
10044874:	setg   dl
10044877:	lea    edx,[edx+edx*1-0x1]
1004487b:	mov    esi,edx
1004487d:	test   esi,esi
1004487f:	jne    0x10043e87
10044885:	movzx  esi,BYTE PTR [eax-0xf]
10044889:	movzx  edx,BYTE PTR [ecx-0xf]
1004488d:	sub    esi,edx
1004488f:	je     0x100448a2
10044891:	xor    edx,edx
10044893:	test   esi,esi
10044895:	setg   dl
10044898:	lea    edx,[edx+edx*1-0x1]
1004489c:	mov    esi,edx
1004489e:	jmp    0x100448a2
100448a0:	xor    esi,esi
100448a2:	test   esi,esi
100448a4:	jne    0x10043e87
100448aa:	mov    edx,DWORD PTR [eax-0xe]
100448ad:	cmp    edx,DWORD PTR [ecx-0xe]
100448b0:	je     0x1004492f
100448b2:	movzx  esi,dl
100448b5:	movzx  edx,BYTE PTR [ecx-0xe]
100448b9:	sub    esi,edx
100448bb:	je     0x100448d2
100448bd:	xor    edx,edx
100448bf:	test   esi,esi
100448c1:	setg   dl
100448c4:	lea    edx,[edx+edx*1-0x1]
100448c8:	mov    esi,edx
100448ca:	test   esi,esi
100448cc:	jne    0x10043e87
100448d2:	movzx  esi,BYTE PTR [eax-0xd]
100448d6:	movzx  edx,BYTE PTR [ecx-0xd]
100448da:	sub    esi,edx
100448dc:	je     0x100448f3
100448de:	xor    edx,edx
100448e0:	test   esi,esi
100448e2:	setg   dl
100448e5:	lea    edx,[edx+edx*1-0x1]
100448e9:	mov    esi,edx
100448eb:	test   esi,esi
100448ed:	jne    0x10043e87
100448f3:	movzx  esi,BYTE PTR [eax-0xc]
100448f7:	movzx  edx,BYTE PTR [ecx-0xc]
100448fb:	sub    esi,edx
100448fd:	je     0x10044914
100448ff:	xor    edx,edx
10044901:	test   esi,esi
10044903:	setg   dl
10044906:	lea    edx,[edx+edx*1-0x1]
1004490a:	mov    esi,edx
1004490c:	test   esi,esi
1004490e:	jne    0x10043e87
10044914:	movzx  esi,BYTE PTR [eax-0xb]
10044918:	movzx  edx,BYTE PTR [ecx-0xb]
1004491c:	sub    esi,edx
1004491e:	je     0x10044931
10044920:	xor    edx,edx
10044922:	test   esi,esi
10044924:	setg   dl
10044927:	lea    edx,[edx+edx*1-0x1]
1004492b:	mov    esi,edx
1004492d:	jmp    0x10044931
1004492f:	xor    esi,esi
10044931:	test   esi,esi
10044933:	jne    0x10043e87
10044939:	mov    edx,DWORD PTR [eax-0xa]
1004493c:	cmp    edx,DWORD PTR [ecx-0xa]
1004493f:	je     0x100449bf
10044941:	movzx  edx,BYTE PTR [ecx-0xa]
10044945:	movzx  esi,BYTE PTR [eax-0xa]
10044949:	sub    esi,edx
1004494b:	je     0x10044962
1004494d:	xor    edx,edx
1004494f:	test   esi,esi
10044951:	setg   dl
10044954:	lea    edx,[edx+edx*1-0x1]
10044958:	mov    esi,edx
1004495a:	test   esi,esi
1004495c:	jne    0x10043e87
10044962:	movzx  edx,BYTE PTR [ecx-0x9]
10044966:	movzx  esi,BYTE PTR [eax-0x9]
1004496a:	sub    esi,edx
1004496c:	je     0x10044983
1004496e:	xor    edx,edx
10044970:	test   esi,esi
10044972:	setg   dl
10044975:	lea    edx,[edx+edx*1-0x1]
10044979:	mov    esi,edx
1004497b:	test   esi,esi
1004497d:	jne    0x10043e87
10044983:	movzx  edx,BYTE PTR [ecx-0x8]
10044987:	movzx  esi,BYTE PTR [eax-0x8]
1004498b:	sub    esi,edx
1004498d:	je     0x100449a4
1004498f:	xor    edx,edx
10044991:	test   esi,esi
10044993:	setg   dl
10044996:	lea    edx,[edx+edx*1-0x1]
1004499a:	mov    esi,edx
1004499c:	test   esi,esi
1004499e:	jne    0x10043e87
100449a4:	movzx  edx,BYTE PTR [ecx-0x7]
100449a8:	movzx  esi,BYTE PTR [eax-0x7]
100449ac:	sub    esi,edx
100449ae:	je     0x100449c1
100449b0:	xor    edx,edx
100449b2:	test   esi,esi
100449b4:	setg   dl
100449b7:	lea    edx,[edx+edx*1-0x1]
100449bb:	mov    esi,edx
100449bd:	jmp    0x100449c1
100449bf:	xor    esi,esi
100449c1:	test   esi,esi
100449c3:	jne    0x10043e87
100449c9:	mov    edx,DWORD PTR [eax-0x6]
100449cc:	cmp    edx,DWORD PTR [ecx-0x6]
100449cf:	je     0x10044a4e
100449d1:	movzx  esi,dl
100449d4:	movzx  edx,BYTE PTR [ecx-0x6]
100449d8:	sub    esi,edx
100449da:	je     0x100449f1
100449dc:	xor    edx,edx
100449de:	test   esi,esi
100449e0:	setg   dl
100449e3:	lea    edx,[edx+edx*1-0x1]
100449e7:	mov    esi,edx
100449e9:	test   esi,esi
100449eb:	jne    0x10043e87
100449f1:	movzx  esi,BYTE PTR [eax-0x5]
100449f5:	movzx  edx,BYTE PTR [ecx-0x5]
100449f9:	sub    esi,edx
100449fb:	je     0x10044a12
100449fd:	xor    edx,edx
100449ff:	test   esi,esi
10044a01:	setg   dl
10044a04:	lea    edx,[edx+edx*1-0x1]
10044a08:	mov    esi,edx
10044a0a:	test   esi,esi
10044a0c:	jne    0x10043e87
10044a12:	movzx  esi,BYTE PTR [eax-0x4]
10044a16:	movzx  edx,BYTE PTR [ecx-0x4]
10044a1a:	sub    esi,edx
10044a1c:	je     0x10044a33
10044a1e:	xor    edx,edx
10044a20:	test   esi,esi
10044a22:	setg   dl
10044a25:	lea    edx,[edx+edx*1-0x1]
10044a29:	mov    esi,edx
10044a2b:	test   esi,esi
10044a2d:	jne    0x10043e87
10044a33:	movzx  esi,BYTE PTR [eax-0x3]
10044a37:	movzx  edx,BYTE PTR [ecx-0x3]
10044a3b:	sub    esi,edx
10044a3d:	je     0x10044a50
10044a3f:	xor    edx,edx
10044a41:	test   esi,esi
10044a43:	setg   dl
10044a46:	lea    edx,[edx+edx*1-0x1]
10044a4a:	mov    esi,edx
10044a4c:	jmp    0x10044a50
10044a4e:	xor    esi,esi
10044a50:	test   esi,esi
10044a52:	jne    0x10043e87
10044a58:	mov    dx,WORD PTR [eax-0x2]
10044a5c:	cmp    dx,WORD PTR [ecx-0x2]
10044a60:	je     0x1004425a
10044a66:	movzx  edx,BYTE PTR [ecx-0x2]
10044a6a:	movzx  esi,BYTE PTR [eax-0x2]
10044a6e:	sub    esi,edx
10044a70:	je     0x1004464c
10044a76:	xor    edx,edx
10044a78:	test   esi,esi
10044a7a:	setg   dl
10044a7d:	lea    edx,[edx+edx*1-0x1]
10044a81:	test   edx,edx
10044a83:	jne    0x10044e9c
10044a89:	jmp    0x1004464c
10044a8e:	mov    edx,DWORD PTR [eax-0x1f]
10044a91:	cmp    edx,DWORD PTR [ecx-0x1f]
10044a94:	je     0x10044b14
10044a96:	movzx  edx,BYTE PTR [ecx-0x1f]
10044a9a:	movzx  esi,BYTE PTR [eax-0x1f]
10044a9e:	sub    esi,edx
10044aa0:	je     0x10044ab7
10044aa2:	xor    edx,edx
10044aa4:	test   esi,esi
10044aa6:	setg   dl
10044aa9:	lea    edx,[edx+edx*1-0x1]
10044aad:	mov    esi,edx
10044aaf:	test   esi,esi
10044ab1:	jne    0x10043e87
10044ab7:	movzx  esi,BYTE PTR [eax-0x1e]
10044abb:	movzx  edx,BYTE PTR [ecx-0x1e]
10044abf:	sub    esi,edx
10044ac1:	je     0x10044ad8
10044ac3:	xor    edx,edx
10044ac5:	test   esi,esi
10044ac7:	setg   dl
10044aca:	lea    edx,[edx+edx*1-0x1]
10044ace:	mov    esi,edx
10044ad0:	test   esi,esi
10044ad2:	jne    0x10043e87
10044ad8:	movzx  esi,BYTE PTR [eax-0x1d]
10044adc:	movzx  edx,BYTE PTR [ecx-0x1d]
10044ae0:	sub    esi,edx
10044ae2:	je     0x10044af9
10044ae4:	xor    edx,edx
10044ae6:	test   esi,esi
10044ae8:	setg   dl
10044aeb:	lea    edx,[edx+edx*1-0x1]
10044aef:	mov    esi,edx
10044af1:	test   esi,esi
10044af3:	jne    0x10043e87
10044af9:	movzx  esi,BYTE PTR [eax-0x1c]
10044afd:	movzx  edx,BYTE PTR [ecx-0x1c]
10044b01:	sub    esi,edx
10044b03:	je     0x10044b16
10044b05:	xor    edx,edx
10044b07:	test   esi,esi
10044b09:	setg   dl
10044b0c:	lea    edx,[edx+edx*1-0x1]
10044b10:	mov    esi,edx
10044b12:	jmp    0x10044b16
10044b14:	xor    esi,esi
10044b16:	test   esi,esi
10044b18:	jne    0x10043e87
10044b1e:	mov    edx,DWORD PTR [eax-0x1b]
10044b21:	cmp    edx,DWORD PTR [ecx-0x1b]
10044b24:	je     0x10044ba3
10044b26:	movzx  esi,dl
10044b29:	movzx  edx,BYTE PTR [ecx-0x1b]
10044b2d:	sub    esi,edx
10044b2f:	je     0x10044b46
10044b31:	xor    edx,edx
10044b33:	test   esi,esi
10044b35:	setg   dl
10044b38:	lea    edx,[edx+edx*1-0x1]
10044b3c:	mov    esi,edx
10044b3e:	test   esi,esi
10044b40:	jne    0x10043e87
10044b46:	movzx  esi,BYTE PTR [eax-0x1a]
10044b4a:	movzx  edx,BYTE PTR [ecx-0x1a]
10044b4e:	sub    esi,edx
10044b50:	je     0x10044b67
10044b52:	xor    edx,edx
10044b54:	test   esi,esi
10044b56:	setg   dl
10044b59:	lea    edx,[edx+edx*1-0x1]
10044b5d:	mov    esi,edx
10044b5f:	test   esi,esi
10044b61:	jne    0x10043e87
10044b67:	movzx  esi,BYTE PTR [eax-0x19]
10044b6b:	movzx  edx,BYTE PTR [ecx-0x19]
10044b6f:	sub    esi,edx
10044b71:	je     0x10044b88
10044b73:	xor    edx,edx
10044b75:	test   esi,esi
10044b77:	setg   dl
10044b7a:	lea    edx,[edx+edx*1-0x1]
10044b7e:	mov    esi,edx
10044b80:	test   esi,esi
10044b82:	jne    0x10043e87
10044b88:	movzx  esi,BYTE PTR [eax-0x18]
10044b8c:	movzx  edx,BYTE PTR [ecx-0x18]
10044b90:	sub    esi,edx
10044b92:	je     0x10044ba5
10044b94:	xor    edx,edx
10044b96:	test   esi,esi
10044b98:	setg   dl
10044b9b:	lea    edx,[edx+edx*1-0x1]
10044b9f:	mov    esi,edx
10044ba1:	jmp    0x10044ba5
10044ba3:	xor    esi,esi
10044ba5:	test   esi,esi
10044ba7:	jne    0x10043e87
10044bad:	mov    edx,DWORD PTR [eax-0x17]
10044bb0:	cmp    edx,DWORD PTR [ecx-0x17]
10044bb3:	je     0x10044c32
10044bb5:	movzx  esi,dl
10044bb8:	movzx  edx,BYTE PTR [ecx-0x17]
10044bbc:	sub    esi,edx
10044bbe:	je     0x10044bd5
10044bc0:	xor    edx,edx
10044bc2:	test   esi,esi
10044bc4:	setg   dl
10044bc7:	lea    edx,[edx+edx*1-0x1]
10044bcb:	mov    esi,edx
10044bcd:	test   esi,esi
10044bcf:	jne    0x10043e87
10044bd5:	movzx  esi,BYTE PTR [eax-0x16]
10044bd9:	movzx  edx,BYTE PTR [ecx-0x16]
10044bdd:	sub    esi,edx
10044bdf:	je     0x10044bf6
10044be1:	xor    edx,edx
10044be3:	test   esi,esi
10044be5:	setg   dl
10044be8:	lea    edx,[edx+edx*1-0x1]
10044bec:	mov    esi,edx
10044bee:	test   esi,esi
10044bf0:	jne    0x10043e87
10044bf6:	movzx  esi,BYTE PTR [eax-0x15]
10044bfa:	movzx  edx,BYTE PTR [ecx-0x15]
10044bfe:	sub    esi,edx
10044c00:	je     0x10044c17
10044c02:	xor    edx,edx
10044c04:	test   esi,esi
10044c06:	setg   dl
10044c09:	lea    edx,[edx+edx*1-0x1]
10044c0d:	mov    esi,edx
10044c0f:	test   esi,esi
10044c11:	jne    0x10043e87
10044c17:	movzx  esi,BYTE PTR [eax-0x14]
10044c1b:	movzx  edx,BYTE PTR [ecx-0x14]
10044c1f:	sub    esi,edx
10044c21:	je     0x10044c34
10044c23:	xor    edx,edx
10044c25:	test   esi,esi
10044c27:	setg   dl
10044c2a:	lea    edx,[edx+edx*1-0x1]
10044c2e:	mov    esi,edx
10044c30:	jmp    0x10044c34
10044c32:	xor    esi,esi
10044c34:	test   esi,esi
10044c36:	jne    0x10043e87
10044c3c:	mov    edx,DWORD PTR [eax-0x13]
10044c3f:	cmp    edx,DWORD PTR [ecx-0x13]
10044c42:	je     0x10044cc1
10044c44:	movzx  esi,dl
10044c47:	movzx  edx,BYTE PTR [ecx-0x13]
10044c4b:	sub    esi,edx
10044c4d:	je     0x10044c64
10044c4f:	xor    edx,edx
10044c51:	test   esi,esi
10044c53:	setg   dl
10044c56:	lea    edx,[edx+edx*1-0x1]
10044c5a:	mov    esi,edx
10044c5c:	test   esi,esi
10044c5e:	jne    0x10043e87
10044c64:	movzx  esi,BYTE PTR [eax-0x12]
10044c68:	movzx  edx,BYTE PTR [ecx-0x12]
10044c6c:	sub    esi,edx
10044c6e:	je     0x10044c85
10044c70:	xor    edx,edx
10044c72:	test   esi,esi
10044c74:	setg   dl
10044c77:	lea    edx,[edx+edx*1-0x1]
10044c7b:	mov    esi,edx
10044c7d:	test   esi,esi
10044c7f:	jne    0x10043e87
10044c85:	movzx  esi,BYTE PTR [eax-0x11]
10044c89:	movzx  edx,BYTE PTR [ecx-0x11]
10044c8d:	sub    esi,edx
10044c8f:	je     0x10044ca6
10044c91:	xor    edx,edx
10044c93:	test   esi,esi
10044c95:	setg   dl
10044c98:	lea    edx,[edx+edx*1-0x1]
10044c9c:	mov    esi,edx
10044c9e:	test   esi,esi
10044ca0:	jne    0x10043e87
10044ca6:	movzx  esi,BYTE PTR [eax-0x10]
10044caa:	movzx  edx,BYTE PTR [ecx-0x10]
10044cae:	sub    esi,edx
10044cb0:	je     0x10044cc3
10044cb2:	xor    edx,edx
10044cb4:	test   esi,esi
10044cb6:	setg   dl
10044cb9:	lea    edx,[edx+edx*1-0x1]
10044cbd:	mov    esi,edx
10044cbf:	jmp    0x10044cc3
10044cc1:	xor    esi,esi
10044cc3:	test   esi,esi
10044cc5:	jne    0x10043e87
10044ccb:	mov    edx,DWORD PTR [eax-0xf]
10044cce:	cmp    edx,DWORD PTR [ecx-0xf]
10044cd1:	je     0x10044d51
10044cd3:	movzx  edx,BYTE PTR [ecx-0xf]
10044cd7:	movzx  esi,BYTE PTR [eax-0xf]
10044cdb:	sub    esi,edx
10044cdd:	je     0x10044cf4
10044cdf:	xor    edx,edx
10044ce1:	test   esi,esi
10044ce3:	setg   dl
10044ce6:	lea    edx,[edx+edx*1-0x1]
10044cea:	mov    esi,edx
10044cec:	test   esi,esi
10044cee:	jne    0x10043e87
10044cf4:	movzx  esi,BYTE PTR [eax-0xe]
10044cf8:	movzx  edx,BYTE PTR [ecx-0xe]
10044cfc:	sub    esi,edx
10044cfe:	je     0x10044d15
10044d00:	xor    edx,edx
10044d02:	test   esi,esi
10044d04:	setg   dl
10044d07:	lea    edx,[edx+edx*1-0x1]
10044d0b:	mov    esi,edx
10044d0d:	test   esi,esi
10044d0f:	jne    0x10043e87
10044d15:	movzx  esi,BYTE PTR [eax-0xd]
10044d19:	movzx  edx,BYTE PTR [ecx-0xd]
10044d1d:	sub    esi,edx
10044d1f:	je     0x10044d36
10044d21:	xor    edx,edx
10044d23:	test   esi,esi
10044d25:	setg   dl
10044d28:	lea    edx,[edx+edx*1-0x1]
10044d2c:	mov    esi,edx
10044d2e:	test   esi,esi
10044d30:	jne    0x10043e87
10044d36:	movzx  esi,BYTE PTR [eax-0xc]
10044d3a:	movzx  edx,BYTE PTR [ecx-0xc]
10044d3e:	sub    esi,edx
10044d40:	je     0x10044d53
10044d42:	xor    edx,edx
10044d44:	test   esi,esi
10044d46:	setg   dl
10044d49:	lea    edx,[edx+edx*1-0x1]
10044d4d:	mov    esi,edx
10044d4f:	jmp    0x10044d53
10044d51:	xor    esi,esi
10044d53:	test   esi,esi
10044d55:	jne    0x10043e87
10044d5b:	mov    edx,DWORD PTR [eax-0xb]
10044d5e:	cmp    edx,DWORD PTR [ecx-0xb]
10044d61:	je     0x10044de0
10044d63:	movzx  esi,dl
10044d66:	movzx  edx,BYTE PTR [ecx-0xb]
10044d6a:	sub    esi,edx
10044d6c:	je     0x10044d83
10044d6e:	xor    edx,edx
10044d70:	test   esi,esi
10044d72:	setg   dl
10044d75:	lea    edx,[edx+edx*1-0x1]
10044d79:	mov    esi,edx
10044d7b:	test   esi,esi
10044d7d:	jne    0x10043e87
10044d83:	movzx  esi,BYTE PTR [eax-0xa]
10044d87:	movzx  edx,BYTE PTR [ecx-0xa]
10044d8b:	sub    esi,edx
10044d8d:	je     0x10044da4
10044d8f:	xor    edx,edx
10044d91:	test   esi,esi
10044d93:	setg   dl
10044d96:	lea    edx,[edx+edx*1-0x1]
10044d9a:	mov    esi,edx
10044d9c:	test   esi,esi
10044d9e:	jne    0x10043e87
10044da4:	movzx  esi,BYTE PTR [eax-0x9]
10044da8:	movzx  edx,BYTE PTR [ecx-0x9]
10044dac:	sub    esi,edx
10044dae:	je     0x10044dc5
10044db0:	xor    edx,edx
10044db2:	test   esi,esi
10044db4:	setg   dl
10044db7:	lea    edx,[edx+edx*1-0x1]
10044dbb:	mov    esi,edx
10044dbd:	test   esi,esi
10044dbf:	jne    0x10043e87
10044dc5:	movzx  esi,BYTE PTR [eax-0x8]
10044dc9:	movzx  edx,BYTE PTR [ecx-0x8]
10044dcd:	sub    esi,edx
10044dcf:	je     0x10044de2
10044dd1:	xor    edx,edx
10044dd3:	test   esi,esi
10044dd5:	setg   dl
10044dd8:	lea    edx,[edx+edx*1-0x1]
10044ddc:	mov    esi,edx
10044dde:	jmp    0x10044de2
10044de0:	xor    esi,esi
10044de2:	test   esi,esi
10044de4:	jne    0x10043e87
10044dea:	mov    edx,DWORD PTR [eax-0x7]
10044ded:	cmp    edx,DWORD PTR [ecx-0x7]
10044df0:	je     0x10044e6f
10044df2:	movzx  esi,dl
10044df5:	movzx  edx,BYTE PTR [ecx-0x7]
10044df9:	sub    esi,edx
10044dfb:	je     0x10044e12
10044dfd:	xor    edx,edx
10044dff:	test   esi,esi
10044e01:	setg   dl
10044e04:	lea    edx,[edx+edx*1-0x1]
10044e08:	mov    esi,edx
10044e0a:	test   esi,esi
10044e0c:	jne    0x10043e87
10044e12:	movzx  esi,BYTE PTR [eax-0x6]
10044e16:	movzx  edx,BYTE PTR [ecx-0x6]
10044e1a:	sub    esi,edx
10044e1c:	je     0x10044e33
10044e1e:	xor    edx,edx
10044e20:	test   esi,esi
10044e22:	setg   dl
10044e25:	lea    edx,[edx+edx*1-0x1]
10044e29:	mov    esi,edx
10044e2b:	test   esi,esi
10044e2d:	jne    0x10043e87
10044e33:	movzx  esi,BYTE PTR [eax-0x5]
10044e37:	movzx  edx,BYTE PTR [ecx-0x5]
10044e3b:	sub    esi,edx
10044e3d:	je     0x10044e54
10044e3f:	xor    edx,edx
10044e41:	test   esi,esi
10044e43:	setg   dl
10044e46:	lea    edx,[edx+edx*1-0x1]
10044e4a:	mov    esi,edx
10044e4c:	test   esi,esi
10044e4e:	jne    0x10043e87
10044e54:	movzx  esi,BYTE PTR [eax-0x4]
10044e58:	movzx  edx,BYTE PTR [ecx-0x4]
10044e5c:	sub    esi,edx
10044e5e:	je     0x10044e71
10044e60:	xor    edx,edx
10044e62:	test   esi,esi
10044e64:	setg   dl
10044e67:	lea    edx,[edx+edx*1-0x1]
10044e6b:	mov    esi,edx
10044e6d:	jmp    0x10044e71
10044e6f:	xor    esi,esi
10044e71:	test   esi,esi
10044e73:	jne    0x10043e87
10044e79:	movzx  esi,BYTE PTR [eax-0x3]
10044e7d:	movzx  edx,BYTE PTR [ecx-0x3]
10044e81:	sub    esi,edx
10044e83:	je     0x10044a66
10044e89:	xor    edx,edx
10044e8b:	test   esi,esi
10044e8d:	setg   dl
10044e90:	lea    edx,[edx+edx*1-0x1]
10044e94:	test   edx,edx
10044e96:	je     0x10044a66
10044e9c:	mov    eax,edx
10044e9e:	jmp    0x1004425c
10044ea3:	mov    ecx,DWORD PTR [ebp+0x8]
10044ea6:	mov    esi,DWORD PTR [ebp+0xc]
10044ea9:	movzx  eax,BYTE PTR [ecx]
10044eac:	movzx  edx,BYTE PTR [esi]
10044eaf:	sub    eax,edx
10044eb1:	je     0x10044ec8
10044eb3:	xor    edx,edx
10044eb5:	test   eax,eax
10044eb7:	setg   dl
10044eba:	lea    edx,[edx+edx*1-0x1]
10044ebe:	mov    eax,edx
10044ec0:	test   eax,eax
10044ec2:	jne    0x10044fb5
10044ec8:	movzx  eax,BYTE PTR [ecx+0x1]
10044ecc:	movzx  edx,BYTE PTR [esi+0x1]
10044ed0:	sub    eax,edx
10044ed2:	je     0x10044ee9
10044ed4:	xor    edx,edx
10044ed6:	test   eax,eax
10044ed8:	setg   dl
10044edb:	lea    edx,[edx+edx*1-0x1]
10044edf:	mov    eax,edx
10044ee1:	test   eax,eax
10044ee3:	jne    0x10044fb5
10044ee9:	movzx  eax,BYTE PTR [ecx+0x2]
10044eed:	movzx  edx,BYTE PTR [esi+0x2]
10044ef1:	sub    eax,edx
10044ef3:	je     0x10044f0a
10044ef5:	xor    edx,edx
10044ef7:	test   eax,eax
10044ef9:	setg   dl
10044efc:	lea    edx,[edx+edx*1-0x1]
10044f00:	mov    eax,edx
10044f02:	test   eax,eax
10044f04:	jne    0x10044fb5
10044f0a:	movzx  eax,BYTE PTR [ecx+0x3]
10044f0e:	movzx  ecx,BYTE PTR [esi+0x3]
10044f12:	sub    eax,ecx
10044f14:	je     0x10044fb5
10044f1a:	xor    ecx,ecx
10044f1c:	test   eax,eax
10044f1e:	setg   cl
10044f21:	lea    ecx,[ecx+ecx*1-0x1]
10044f25:	mov    eax,ecx
10044f27:	jmp    0x10044fb5
10044f2c:	mov    ecx,DWORD PTR [ebp+0x8]
10044f2f:	mov    esi,DWORD PTR [ebp+0xc]
10044f32:	movzx  eax,BYTE PTR [ecx]
10044f35:	movzx  edx,BYTE PTR [esi]
10044f38:	sub    eax,edx
10044f3a:	je     0x10044f4d
10044f3c:	xor    edx,edx
10044f3e:	test   eax,eax
10044f40:	setg   dl
10044f43:	lea    edx,[edx+edx*1-0x1]
10044f47:	mov    eax,edx
10044f49:	test   eax,eax
10044f4b:	jne    0x10044fb5
10044f4d:	movzx  eax,BYTE PTR [ecx+0x1]
10044f51:	movzx  edx,BYTE PTR [esi+0x1]
10044f55:	sub    eax,edx
10044f57:	je     0x10044f6a
10044f59:	xor    edx,edx
10044f5b:	test   eax,eax
10044f5d:	setg   dl
10044f60:	lea    edx,[edx+edx*1-0x1]
10044f64:	mov    eax,edx
10044f66:	test   eax,eax
10044f68:	jne    0x10044fb5
10044f6a:	movzx  eax,BYTE PTR [ecx+0x2]
10044f6e:	movzx  ecx,BYTE PTR [esi+0x2]
10044f72:	jmp    0x10044f12
10044f74:	mov    ecx,DWORD PTR [ebp+0x8]
10044f77:	mov    esi,DWORD PTR [ebp+0xc]
10044f7a:	movzx  eax,BYTE PTR [ecx]
10044f7d:	movzx  edx,BYTE PTR [esi]
10044f80:	sub    eax,edx
10044f82:	je     0x10044f95
10044f84:	xor    edx,edx
10044f86:	test   eax,eax
10044f88:	setg   dl
10044f8b:	lea    edx,[edx+edx*1-0x1]
10044f8f:	mov    eax,edx
10044f91:	test   eax,eax
10044f93:	jne    0x10044fb5
10044f95:	movzx  eax,BYTE PTR [ecx+0x1]
10044f99:	movzx  ecx,BYTE PTR [esi+0x1]
10044f9d:	jmp    0x10044f12
10044fa2:	mov    eax,DWORD PTR [ebp+0x8]
10044fa5:	mov    ecx,DWORD PTR [ebp+0xc]
10044fa8:	movzx  eax,BYTE PTR [eax]
10044fab:	movzx  ecx,BYTE PTR [ecx]
10044fae:	jmp    0x10044f12
10044fb3:	xor    eax,eax
10044fb5:	pop    edi
10044fb6:	pop    esi
10044fb7:	pop    ebp
10044fb8:	ret    
10044fb9:	mov    edi,edi
10044fbb:	pop    edx
10044fbc:	inc    edx
10044fbd:	add    al,0x10
10044fbf:	dec    esp
10044fc0:	inc    esi
10044fc1:	add    al,0x10
10044fc3:	pop    eax
10044fc4:	dec    edx
10044fc5:	add    al,0x10
10044fc7:	jns    0x10045017
10044fc9:	add    al,0x10
10044fcb:	fld    QWORD PTR [ecx+0x4]
10044fce:	adc    BYTE PTR [ebp-0x36effbbb],bh
10044fd4:	dec    ecx
10044fd5:	add    al,0x10
10044fd7:	jmp    0x441:0x4e10044d
10044fde:	adc    BYTE PTR ds:0x39100445,ch
10044fe4:	dec    ecx
10044fe5:	add    al,0x10
10044fe7:	pop    ebx
10044fe8:	dec    ebp
10044fe9:	add    al,0x10
10044feb:	mov    esi,0x9e100440
10044ff0:	inc    esp
10044ff1:	add    al,0x10
10044ff3:	stos   BYTE PTR es:[edi],al
10044ff4:	dec    eax
10044ff5:	add    al,0x10
10044ff7:	retf   
10044ff8:	dec    esp
10044ff9:	add    al,0x10
10044ffb:	das    
10044ffc:	inc    eax
10044ffd:	add    al,0x10
10044fff:	cmove  eax,DWORD PTR [eax+edx*1]
10045003:	sbb    ecx,DWORD PTR [eax+0x4]
10045006:	adc    BYTE PTR [esp+ecx*2],bh
10045009:	add    al,0x10
1004500b:	mov    al,ds:0x8010043f
10045010:	inc    ebx
10045011:	add    al,0x10
10045013:	mov    WORD PTR [edi+0x4],es
10045016:	adc    BYTE PTR [ebp+0x1110044b],ch
1004501c:	aas    
1004501d:	add    al,0x10
1004501f:	icebp  
10045020:	inc    edx
10045021:	add    al,0x10
10045023:	std    
10045024:	inc    esi
10045025:	add    al,0x10
10045027:	push   ds
10045028:	dec    ebx
10045029:	add    al,0x10
1004502b:	mov    ?,WORD PTR [esi]
1004502d:	add    al,0x10
1004502f:	bound  eax,QWORD PTR [edx+0x4]
10045032:	adc    BYTE PTR [esi+0x46],ch
10045035:	add    al,0x10
10045037:	mov    cs,WORD PTR [edx+0x4]
1004503a:	adc    BYTE PTR [ebp-0x75],dl
1004503d:	in     al,dx
1004503e:	sub    esp,0x20
10045041:	push   ebx
10045042:	xor    ebx,ebx
10045044:	cmp    DWORD PTR [ebp+0x14],ebx
10045047:	jne    0x10045069
10045049:	call   0x10046df5
1004504e:	push   ebx
1004504f:	push   ebx
10045050:	push   ebx
10045051:	push   ebx
10045052:	push   ebx
10045053:	mov    DWORD PTR [eax],0x16
10045059:	call   0x100435cc
1004505e:	add    esp,0x14
10045061:	or     eax,0xffffffff
10045064:	jmp    0x1004512e
10045069:	push   esi
1004506a:	mov    esi,DWORD PTR [ebp+0xc]
1004506d:	push   edi
1004506e:	mov    edi,DWORD PTR [ebp+0x10]
10045071:	cmp    edi,ebx
10045073:	je     0x10045099
10045075:	cmp    esi,ebx
10045077:	jne    0x10045099
10045079:	call   0x10046df5
1004507e:	push   ebx
1004507f:	push   ebx
10045080:	push   ebx
10045081:	push   ebx
10045082:	push   ebx
10045083:	mov    DWORD PTR [eax],0x16
10045089:	call   0x100435cc
1004508e:	add    esp,0x14
10045091:	or     eax,0xffffffff
10045094:	jmp    0x1004512c
10045099:	cmp    edi,0x3fffffff
1004509f:	mov    DWORD PTR [ebp-0x14],0x42
100450a6:	mov    DWORD PTR [ebp-0x18],esi
100450a9:	mov    DWORD PTR [ebp-0x20],esi
100450ac:	jbe    0x100450b7
100450ae:	mov    DWORD PTR [ebp-0x1c],0x7fffffff
100450b5:	jmp    0x100450bd
100450b7:	lea    eax,[edi+edi*1]
100450ba:	mov    DWORD PTR [ebp-0x1c],eax
100450bd:	push   DWORD PTR [ebp+0x1c]
100450c0:	lea    eax,[ebp-0x20]
100450c3:	push   DWORD PTR [ebp+0x18]
100450c6:	push   DWORD PTR [ebp+0x14]
100450c9:	push   eax
100450ca:	call   DWORD PTR [ebp+0x8]
100450cd:	add    esp,0x10
100450d0:	cmp    esi,ebx
100450d2:	mov    DWORD PTR [ebp+0x14],eax
100450d5:	je     0x1004512c
100450d7:	cmp    eax,ebx
100450d9:	jl     0x1004511d
100450db:	dec    DWORD PTR [ebp-0x1c]
100450de:	js     0x100450ea
100450e0:	mov    eax,DWORD PTR [ebp-0x20]
100450e3:	mov    BYTE PTR [eax],bl
100450e5:	inc    DWORD PTR [ebp-0x20]
100450e8:	jmp    0x100450fb
100450ea:	lea    eax,[ebp-0x20]
100450ed:	push   eax
100450ee:	push   ebx
100450ef:	call   0x10048a6d
100450f4:	cmp    eax,0xffffffff
100450f7:	pop    ecx
100450f8:	pop    ecx
100450f9:	je     0x1004511d
100450fb:	dec    DWORD PTR [ebp-0x1c]
100450fe:	js     0x10045107
10045100:	mov    eax,DWORD PTR [ebp-0x20]
10045103:	mov    BYTE PTR [eax],bl
10045105:	jmp    0x10045118
10045107:	lea    eax,[ebp-0x20]
1004510a:	push   eax
1004510b:	push   ebx
1004510c:	call   0x10048a6d
10045111:	cmp    eax,0xffffffff
10045114:	pop    ecx
10045115:	pop    ecx
10045116:	je     0x1004511d
10045118:	mov    eax,DWORD PTR [ebp+0x14]
1004511b:	jmp    0x1004512c
1004511d:	xor    eax,eax
1004511f:	cmp    DWORD PTR [ebp-0x1c],ebx
10045122:	mov    WORD PTR [esi+edi*2-0x2],bx
10045127:	setge  al
1004512a:	dec    eax
1004512b:	dec    eax
1004512c:	pop    edi
1004512d:	pop    esi
1004512e:	pop    ebx
1004512f:	leave  
10045130:	ret    
10045131:	push   ebp
10045132:	mov    ebp,esp
10045134:	push   esi
10045135:	xor    esi,esi
10045137:	cmp    DWORD PTR [ebp+0x10],esi
1004513a:	jne    0x10045159
1004513c:	call   0x10046df5
10045141:	push   esi
10045142:	push   esi
10045143:	push   esi
10045144:	push   esi
10045145:	push   esi
10045146:	mov    DWORD PTR [eax],0x16
1004514c:	call   0x100435cc
10045151:	add    esp,0x14
10045154:	or     eax,0xffffffff
10045157:	jmp    0x100451b5
10045159:	push   edi
1004515a:	mov    edi,DWORD PTR [ebp+0x8]
1004515d:	cmp    edi,esi
1004515f:	je     0x10045166
10045161:	cmp    DWORD PTR [ebp+0xc],esi
10045164:	ja     0x10045173
10045166:	call   0x10046df5
1004516b:	mov    DWORD PTR [eax],0x16
10045171:	jmp    0x100451a4
10045173:	push   DWORD PTR [ebp+0x18]
10045176:	push   DWORD PTR [ebp+0x14]
10045179:	push   DWORD PTR [ebp+0x10]
1004517c:	push   DWORD PTR [ebp+0xc]
1004517f:	push   edi
10045180:	push   0x1004957a
10045185:	call   0x1004503b
1004518a:	add    esp,0x18
1004518d:	cmp    eax,esi
1004518f:	jge    0x10045194
10045191:	mov    WORD PTR [edi],si
10045194:	cmp    eax,0xfffffffe
10045197:	jne    0x100451b4
10045199:	call   0x10046df5
1004519e:	mov    DWORD PTR [eax],0x22
100451a4:	push   esi
100451a5:	push   esi
100451a6:	push   esi
100451a7:	push   esi
100451a8:	push   esi
100451a9:	call   0x100435cc
100451ae:	add    esp,0x14
100451b1:	or     eax,0xffffffff
100451b4:	pop    edi
100451b5:	pop    esi
100451b6:	pop    ebp
100451b7:	ret    
100451b8:	push   DWORD PTR [esp+0x10]
100451bc:	push   0x0
100451be:	push   DWORD PTR [esp+0x14]
100451c2:	push   DWORD PTR [esp+0x14]
100451c6:	push   DWORD PTR [esp+0x14]
100451ca:	call   0x10045131
100451cf:	add    esp,0x14
100451d2:	ret    
100451d3:	push   0xc
100451d5:	push   0x100746e0
100451da:	call   0x10046f34
100451df:	and    DWORD PTR [ebp-0x1c],0x0
100451e3:	mov    esi,DWORD PTR [ebp+0x8]
100451e6:	cmp    esi,DWORD PTR ds:0x10082590
100451ec:	ja     0x10045210
100451ee:	push   0x4
100451f0:	call   0x10047f3d
100451f5:	pop    ecx
100451f6:	and    DWORD PTR [ebp-0x4],0x0
100451fa:	push   esi
100451fb:	call   0x1004878a
10045200:	pop    ecx
10045201:	mov    DWORD PTR [ebp-0x1c],eax
10045204:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1004520b:	call   0x10045219
10045210:	mov    eax,DWORD PTR [ebp-0x1c]
10045213:	call   0x10046f79
10045218:	ret    
10045219:	push   0x4
1004521b:	call   0x10047e65
10045220:	pop    ecx
10045221:	ret    
10045222:	push   ebp
10045223:	mov    ebp,DWORD PTR [esp+0x8]
10045227:	cmp    ebp,0xffffffe0
1004522a:	ja     0x100452cf
10045230:	push   ebx
10045231:	mov    ebx,DWORD PTR ds:0x1006618c
10045237:	push   esi
10045238:	push   edi
10045239:	xor    esi,esi
1004523b:	cmp    DWORD PTR ds:0x1007fe38,esi
10045241:	mov    edi,ebp
10045243:	jne    0x1004525d
10045245:	call   0x1004a03a
1004524a:	push   0x1e
1004524c:	call   0x10049e9a
10045251:	push   0xff
10045256:	call   0x10047882
1004525b:	pop    ecx
1004525c:	pop    ecx
1004525d:	mov    eax,ds:0x100825a0
10045262:	cmp    eax,0x1
10045265:	jne    0x10045275
10045267:	cmp    ebp,esi
10045269:	je     0x1004526f
1004526b:	mov    eax,ebp
1004526d:	jmp    0x10045272
1004526f:	xor    eax,eax
10045271:	inc    eax
10045272:	push   eax
10045273:	jmp    0x10045293
10045275:	cmp    eax,0x3
10045278:	jne    0x10045285
1004527a:	push   ebp
1004527b:	call   0x100451d3
10045280:	cmp    eax,esi
10045282:	pop    ecx
10045283:	jne    0x1004529c
10045285:	cmp    ebp,esi
10045287:	jne    0x1004528c
10045289:	xor    edi,edi
1004528b:	inc    edi
1004528c:	add    edi,0xf
1004528f:	and    edi,0xfffffff0
10045292:	push   edi
10045293:	push   esi
10045294:	push   DWORD PTR ds:0x1007fe38
1004529a:	call   ebx
1004529c:	mov    esi,eax
1004529e:	test   esi,esi
100452a0:	jne    0x100452c8
100452a2:	cmp    DWORD PTR ds:0x1007ff94,eax
100452a8:	push   0xc
100452aa:	pop    edi
100452ab:	je     0x100452ba
100452ad:	push   ebp
100452ae:	call   0x10047c32
100452b3:	test   eax,eax
100452b5:	pop    ecx
100452b6:	jne    0x10045239
100452b8:	jmp    0x100452c1
100452ba:	call   0x10046df5
100452bf:	mov    DWORD PTR [eax],edi
100452c1:	call   0x10046df5
100452c6:	mov    DWORD PTR [eax],edi
100452c8:	pop    edi
100452c9:	mov    eax,esi
100452cb:	pop    esi
100452cc:	pop    ebx
100452cd:	pop    ebp
100452ce:	ret    
100452cf:	push   ebp
100452d0:	call   0x10047c32
100452d5:	pop    ecx
100452d6:	call   0x10046df5
100452db:	mov    DWORD PTR [eax],0xc
100452e1:	xor    eax,eax
100452e3:	pop    ebp
100452e4:	ret    
100452e5:	push   ebp
100452e6:	mov    ebp,esp
100452e8:	sub    esp,0x5c
100452eb:	mov    eax,ds:0x1007e030
100452f0:	xor    eax,ebp
100452f2:	mov    DWORD PTR [ebp-0x4],eax
100452f5:	push   ebx
100452f6:	push   esi
100452f7:	push   edi
100452f8:	push   0x4
100452fa:	xor    edi,edi
100452fc:	pop    eax
100452fd:	mov    DWORD PTR [ebp-0x8],edi
10045300:	call   0x1004a080
10045305:	mov    DWORD PTR [ebp-0x10],esp
10045308:	push   0x1c
1004530a:	lea    eax,[ebp-0x38]
1004530d:	push   eax
1004530e:	push   DWORD PTR [ebp-0x10]
10045311:	call   DWORD PTR ds:0x100660f4
10045317:	test   eax,eax
10045319:	je     0x100453fd
1004531f:	mov    eax,DWORD PTR [ebp-0x34]
10045322:	mov    DWORD PTR [ebp-0x18],eax
10045325:	lea    eax,[ebp-0x5c]
10045328:	push   eax
10045329:	call   DWORD PTR ds:0x1006619c
1004532f:	mov    esi,DWORD PTR [ebp-0x58]
10045332:	lea    eax,[ebp-0x8]
10045335:	push   eax
10045336:	mov    DWORD PTR [ebp-0x14],esi
10045339:	xor    ebx,ebx
1004533b:	call   0x100478e1
10045340:	test   eax,eax
10045342:	pop    ecx
10045343:	je     0x10045352
10045345:	push   edi
10045346:	push   edi
10045347:	push   edi
10045348:	push   edi
10045349:	push   edi
1004534a:	call   0x100434d0
1004534f:	add    esp,0x14
10045352:	cmp    DWORD PTR [ebp-0x8],0x2
10045356:	jne    0x1004538e
10045358:	push   0x1006f884
1004535d:	call   DWORD PTR ds:0x10066198
10045363:	cmp    eax,edi
10045365:	je     0x1004538e
10045367:	push   0x100665d0
1004536c:	push   eax
1004536d:	call   DWORD PTR ds:0x1006612c
10045373:	cmp    eax,edi
10045375:	je     0x1004538e
10045377:	lea    ecx,[ebp-0xc]
1004537a:	push   ecx
1004537b:	mov    DWORD PTR [ebp-0xc],edi
1004537e:	call   eax
10045380:	cmp    eax,0x1
10045383:	pop    ecx
10045384:	jne    0x1004538e
10045386:	cmp    DWORD PTR [ebp-0xc],edi
10045389:	jbe    0x1004538e
1004538b:	mov    ebx,DWORD PTR [ebp-0xc]
1004538e:	mov    edi,DWORD PTR [ebp-0x8]
10045391:	dec    edi
10045392:	neg    edi
10045394:	sbb    edi,edi
10045396:	and    edi,0x103
1004539c:	lea    eax,[esi-0x1]
1004539f:	lea    ebx,[ebx+esi*1-0x1]
100453a3:	not    eax
100453a5:	inc    edi
100453a6:	and    ebx,eax
100453a8:	je     0x100453ac
100453aa:	add    ebx,esi
100453ac:	lea    eax,[esi+esi*1]
100453af:	cmp    ebx,eax
100453b1:	jae    0x100453b5
100453b3:	mov    ebx,eax
100453b5:	dec    esi
100453b6:	not    esi
100453b8:	and    esi,DWORD PTR [ebp-0x10]
100453bb:	sub    esi,ebx
100453bd:	cmp    DWORD PTR [ebp-0x8],0x1
100453c1:	jne    0x100453c8
100453c3:	push   0x11
100453c5:	pop    eax
100453c6:	jmp    0x100453cb
100453c8:	mov    eax,DWORD PTR [ebp-0x14]
100453cb:	mov    ecx,DWORD PTR [ebp-0x18]
100453ce:	add    eax,ecx
100453d0:	cmp    esi,eax
100453d2:	jb     0x100453fd
100453d4:	push   0x4
100453d6:	push   0x1000
100453db:	push   ebx
100453dc:	push   esi
100453dd:	call   DWORD PTR ds:0x10066194
100453e3:	test   eax,eax
100453e5:	je     0x100453fd
100453e7:	lea    eax,[ebp-0x1c]
100453ea:	push   eax
100453eb:	push   edi
100453ec:	push   ebx
100453ed:	push   esi
100453ee:	call   DWORD PTR ds:0x10066190
100453f4:	test   eax,eax
100453f6:	je     0x100453fd
100453f8:	xor    eax,eax
100453fa:	inc    eax
100453fb:	jmp    0x100453ff
100453fd:	xor    eax,eax
100453ff:	lea    esp,[ebp-0x68]
10045402:	pop    edi
10045403:	pop    esi
10045404:	pop    ebx
10045405:	mov    ecx,DWORD PTR [ebp-0x4]
10045408:	xor    ecx,ebp
1004540a:	call   0x100430d7
1004540f:	leave  
10045410:	ret    
10045411:	int3   
10045412:	int3   
10045413:	int3   
10045414:	int3   
10045415:	int3   
10045416:	int3   
10045417:	int3   
10045418:	int3   
10045419:	int3   
1004541a:	int3   
1004541b:	int3   
1004541c:	int3   
1004541d:	int3   
1004541e:	int3   
1004541f:	int3   
10045420:	push   ebp
10045421:	mov    ebp,esp
10045423:	push   edi
10045424:	push   esi
10045425:	mov    esi,DWORD PTR [ebp+0xc]
10045428:	mov    ecx,DWORD PTR [ebp+0x10]
1004542b:	mov    edi,DWORD PTR [ebp+0x8]
1004542e:	mov    eax,ecx
10045430:	mov    edx,ecx
10045432:	add    eax,esi
10045434:	cmp    edi,esi
10045436:	jbe    0x10045440
10045438:	cmp    edi,eax
1004543a:	jb     0x100455e4
10045440:	cmp    ecx,0x100
10045446:	jb     0x10045467
10045448:	cmp    DWORD PTR ds:0x10082584,0x0
1004544f:	je     0x10045467
10045451:	push   edi
10045452:	push   esi
10045453:	and    edi,0xf
10045456:	and    esi,0xf
10045459:	cmp    edi,esi
1004545b:	pop    esi
1004545c:	pop    edi
1004545d:	jne    0x10045467
1004545f:	pop    esi
10045460:	pop    edi
10045461:	pop    ebp
10045462:	jmp    0x1004a132
10045467:	test   edi,0x3
1004546d:	jne    0x10045484
1004546f:	shr    ecx,0x2
10045472:	and    edx,0x3
10045475:	cmp    ecx,0x8
10045478:	jb     0x100454a4
1004547a:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1004547c:	jmp    DWORD PTR [edx*4+0x10045594]
10045483:	nop
10045484:	mov    eax,edi
10045486:	mov    edx,0x3
1004548b:	sub    ecx,0x4
1004548e:	jb     0x1004549c
10045490:	and    eax,0x3
10045493:	add    ecx,eax
10045495:	jmp    DWORD PTR [eax*4+0x100454a8]
1004549c:	jmp    DWORD PTR [ecx*4+0x100455a4]
100454a3:	nop
100454a4:	jmp    DWORD PTR [ecx*4+0x10045528]
100454ab:	nop
100454ac:	mov    eax,0xe4100454
100454b1:	push   esp
100454b2:	add    al,0x10
100454b4:	or     BYTE PTR [ebp+0x4],dl
100454b7:	adc    BYTE PTR [ebx],ah
100454b9:	ror    DWORD PTR [edx-0x75f877fa],1
100454bf:	inc    esi
100454c0:	add    DWORD PTR [eax+0x468a0147],ecx
100454c6:	add    al,cl
100454c8:	jmp    0x124bdccf
100454cd:	add    esi,0x3
100454d0:	add    edi,0x3
100454d3:	cmp    ecx,0x8
100454d6:	jb     0x100454a4
100454d8:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
100454da:	jmp    DWORD PTR [edx*4+0x10045594]
100454e1:	lea    ecx,[ecx+0x0]
100454e4:	and    edx,ecx
100454e6:	mov    al,BYTE PTR [esi]
100454e8:	mov    BYTE PTR [edi],al
100454ea:	mov    al,BYTE PTR [esi+0x1]
100454ed:	shr    ecx,0x2
100454f0:	mov    BYTE PTR [edi+0x1],al
100454f3:	add    esi,0x2
100454f6:	add    edi,0x2
100454f9:	cmp    ecx,0x8
100454fc:	jb     0x100454a4
100454fe:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10045500:	jmp    DWORD PTR [edx*4+0x10045594]
10045507:	nop
10045508:	and    edx,ecx
1004550a:	mov    al,BYTE PTR [esi]
1004550c:	mov    BYTE PTR [edi],al
1004550e:	add    esi,0x1
10045511:	shr    ecx,0x2
10045514:	add    edi,0x1
10045517:	cmp    ecx,0x8
1004551a:	jb     0x100454a4
1004551c:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1004551e:	jmp    DWORD PTR [edx*4+0x10045594]
10045525:	lea    ecx,[ecx+0x0]
10045528:	mov    edx,DWORD PTR [ebp+0x4]
1004552b:	adc    BYTE PTR [eax+0x55],bh
1004552e:	add    al,0x10
10045530:	jo     0x10045587
10045532:	add    al,0x10
10045534:	push   0x60100455
10045539:	push   ebp
1004553a:	add    al,0x10
1004553c:	pop    eax
1004553d:	push   ebp
1004553e:	add    al,0x10
10045540:	push   eax
10045541:	push   ebp
10045542:	add    al,0x10
10045544:	dec    eax
10045545:	push   ebp
10045546:	add    al,0x10
10045548:	mov    eax,DWORD PTR [esi+ecx*4-0x1c]
1004554c:	mov    DWORD PTR [edi+ecx*4-0x1c],eax
10045550:	mov    eax,DWORD PTR [esi+ecx*4-0x18]
10045554:	mov    DWORD PTR [edi+ecx*4-0x18],eax
10045558:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
1004555c:	mov    DWORD PTR [edi+ecx*4-0x14],eax
10045560:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
10045564:	mov    DWORD PTR [edi+ecx*4-0x10],eax
10045568:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
1004556c:	mov    DWORD PTR [edi+ecx*4-0xc],eax
10045570:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
10045574:	mov    DWORD PTR [edi+ecx*4-0x8],eax
10045578:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
1004557c:	mov    DWORD PTR [edi+ecx*4-0x4],eax
10045580:	lea    eax,[ecx*4+0x0]
10045587:	add    esi,eax
10045589:	add    edi,eax
1004558b:	jmp    DWORD PTR [edx*4+0x10045594]
10045592:	mov    edi,edi
10045594:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
10045595:	push   ebp
10045596:	add    al,0x10
10045598:	lods   al,BYTE PTR ds:[esi]
10045599:	push   ebp
1004559a:	add    al,0x10
1004559c:	mov    eax,0xcc100455
100455a1:	push   ebp
100455a2:	add    al,0x10
100455a4:	mov    eax,DWORD PTR [ebp+0x8]
100455a7:	pop    esi
100455a8:	pop    edi
100455a9:	leave  
100455aa:	ret    
100455ab:	nop
100455ac:	mov    al,BYTE PTR [esi]
100455ae:	mov    BYTE PTR [edi],al
100455b0:	mov    eax,DWORD PTR [ebp+0x8]
100455b3:	pop    esi
100455b4:	pop    edi
100455b5:	leave  
100455b6:	ret    
100455b7:	nop
100455b8:	mov    al,BYTE PTR [esi]
100455ba:	mov    BYTE PTR [edi],al
100455bc:	mov    al,BYTE PTR [esi+0x1]
100455bf:	mov    BYTE PTR [edi+0x1],al
100455c2:	mov    eax,DWORD PTR [ebp+0x8]
100455c5:	pop    esi
100455c6:	pop    edi
100455c7:	leave  
100455c8:	ret    
100455c9:	lea    ecx,[ecx+0x0]
100455cc:	mov    al,BYTE PTR [esi]
100455ce:	mov    BYTE PTR [edi],al
100455d0:	mov    al,BYTE PTR [esi+0x1]
100455d3:	mov    BYTE PTR [edi+0x1],al
100455d6:	mov    al,BYTE PTR [esi+0x2]
100455d9:	mov    BYTE PTR [edi+0x2],al
100455dc:	mov    eax,DWORD PTR [ebp+0x8]
100455df:	pop    esi
100455e0:	pop    edi
100455e1:	leave  
100455e2:	ret    
100455e3:	nop
100455e4:	lea    esi,[ecx+esi*1-0x4]
100455e8:	lea    edi,[ecx+edi*1-0x4]
100455ec:	test   edi,0x3
100455f2:	jne    0x10045618
100455f4:	shr    ecx,0x2
100455f7:	and    edx,0x3
100455fa:	cmp    ecx,0x8
100455fd:	jb     0x1004560c
100455ff:	std    
10045600:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10045602:	cld    
10045603:	jmp    DWORD PTR [edx*4+0x10045730]
1004560a:	mov    edi,edi
1004560c:	neg    ecx
1004560e:	jmp    DWORD PTR [ecx*4+0x100456e0]
10045615:	lea    ecx,[ecx+0x0]
10045618:	mov    eax,edi
1004561a:	mov    edx,0x3
1004561f:	cmp    ecx,0x4
10045622:	jb     0x10045630
10045624:	and    eax,0x3
10045627:	sub    ecx,eax
10045629:	jmp    DWORD PTR [eax*4+0x10045634]
10045630:	jmp    DWORD PTR [ecx*4+0x10045730]
10045637:	nop
10045638:	inc    esp
10045639:	push   esi
1004563a:	add    al,0x10
1004563c:	push   0x90100456
10045641:	push   esi
10045642:	add    al,0x10
10045644:	mov    al,BYTE PTR [esi+0x3]
10045647:	and    edx,ecx
10045649:	mov    BYTE PTR [edi+0x3],al
1004564c:	sub    esi,0x1
1004564f:	shr    ecx,0x2
10045652:	sub    edi,0x1
10045655:	cmp    ecx,0x8
10045658:	jb     0x1004560c
1004565a:	std    
1004565b:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1004565d:	cld    
1004565e:	jmp    DWORD PTR [edx*4+0x10045730]
10045665:	lea    ecx,[ecx+0x0]
10045668:	mov    al,BYTE PTR [esi+0x3]
1004566b:	and    edx,ecx
1004566d:	mov    BYTE PTR [edi+0x3],al
10045670:	mov    al,BYTE PTR [esi+0x2]
10045673:	shr    ecx,0x2
10045676:	mov    BYTE PTR [edi+0x2],al
10045679:	sub    esi,0x2
1004567c:	sub    edi,0x2
1004567f:	cmp    ecx,0x8
10045682:	jb     0x1004560c
10045684:	std    
10045685:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10045687:	cld    
10045688:	jmp    DWORD PTR [edx*4+0x10045730]
1004568f:	nop
10045690:	mov    al,BYTE PTR [esi+0x3]
10045693:	and    edx,ecx
10045695:	mov    BYTE PTR [edi+0x3],al
10045698:	mov    al,BYTE PTR [esi+0x2]
1004569b:	mov    BYTE PTR [edi+0x2],al
1004569e:	mov    al,BYTE PTR [esi+0x1]
100456a1:	shr    ecx,0x2
100456a4:	mov    BYTE PTR [edi+0x1],al
100456a7:	sub    esi,0x3
100456aa:	sub    edi,0x3
100456ad:	cmp    ecx,0x8
100456b0:	jb     0x1004560c
100456b6:	std    
100456b7:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
100456b9:	cld    
100456ba:	jmp    DWORD PTR [edx*4+0x10045730]
100456c1:	lea    ecx,[ecx+0x0]
100456c4:	in     al,0x56
100456c6:	add    al,0x10
100456c8:	in     al,dx
100456c9:	push   esi
100456ca:	add    al,0x10
100456cc:	hlt    
100456cd:	push   esi
100456ce:	add    al,0x10
100456d0:	cld    
100456d1:	push   esi
100456d2:	add    al,0x10
100456d4:	add    al,0x57
100456d6:	add    al,0x10
100456d8:	or     al,0x57
100456da:	add    al,0x10
100456dc:	adc    al,0x57
100456de:	add    al,0x10
100456e0:	daa    
100456e1:	push   edi
100456e2:	add    al,0x10
100456e4:	mov    eax,DWORD PTR [esi+ecx*4+0x1c]
100456e8:	mov    DWORD PTR [edi+ecx*4+0x1c],eax
100456ec:	mov    eax,DWORD PTR [esi+ecx*4+0x18]
100456f0:	mov    DWORD PTR [edi+ecx*4+0x18],eax
100456f4:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
100456f8:	mov    DWORD PTR [edi+ecx*4+0x14],eax
100456fc:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
10045700:	mov    DWORD PTR [edi+ecx*4+0x10],eax
10045704:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
10045708:	mov    DWORD PTR [edi+ecx*4+0xc],eax
1004570c:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
10045710:	mov    DWORD PTR [edi+ecx*4+0x8],eax
10045714:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
10045718:	mov    DWORD PTR [edi+ecx*4+0x4],eax
1004571c:	lea    eax,[ecx*4+0x0]
10045723:	add    esi,eax
10045725:	add    edi,eax
10045727:	jmp    DWORD PTR [edx*4+0x10045730]
1004572e:	mov    edi,edi
10045730:	inc    eax
10045731:	push   edi
10045732:	add    al,0x10
10045734:	dec    eax
10045735:	push   edi
10045736:	add    al,0x10
10045738:	pop    eax
10045739:	push   edi
1004573a:	add    al,0x10
1004573c:	ins    BYTE PTR es:[edi],dx
1004573d:	push   edi
1004573e:	add    al,0x10
10045740:	mov    eax,DWORD PTR [ebp+0x8]
10045743:	pop    esi
10045744:	pop    edi
10045745:	leave  
10045746:	ret    
10045747:	nop
10045748:	mov    al,BYTE PTR [esi+0x3]
1004574b:	mov    BYTE PTR [edi+0x3],al
1004574e:	mov    eax,DWORD PTR [ebp+0x8]
10045751:	pop    esi
10045752:	pop    edi
10045753:	leave  
10045754:	ret    
10045755:	lea    ecx,[ecx+0x0]
10045758:	mov    al,BYTE PTR [esi+0x3]
1004575b:	mov    BYTE PTR [edi+0x3],al
1004575e:	mov    al,BYTE PTR [esi+0x2]
10045761:	mov    BYTE PTR [edi+0x2],al
10045764:	mov    eax,DWORD PTR [ebp+0x8]
10045767:	pop    esi
10045768:	pop    edi
10045769:	leave  
1004576a:	ret    
1004576b:	nop
1004576c:	mov    al,BYTE PTR [esi+0x3]
1004576f:	mov    BYTE PTR [edi+0x3],al
10045772:	mov    al,BYTE PTR [esi+0x2]
10045775:	mov    BYTE PTR [edi+0x2],al
10045778:	mov    al,BYTE PTR [esi+0x1]
1004577b:	mov    BYTE PTR [edi+0x1],al
1004577e:	mov    eax,DWORD PTR [ebp+0x8]
10045781:	pop    esi
10045782:	pop    edi
10045783:	leave  
10045784:	ret    
10045785:	mov    eax,DWORD PTR [esp+0x4]
10045789:	test   eax,eax
1004578b:	push   esi
1004578c:	mov    esi,ecx
1004578e:	mov    BYTE PTR [esi+0xc],0x0
10045792:	jne    0x100457f7
10045794:	call   0x1004739c
10045799:	mov    DWORD PTR [esi+0x8],eax
1004579c:	mov    ecx,DWORD PTR [eax+0x6c]
1004579f:	mov    DWORD PTR [esi],ecx
100457a1:	mov    ecx,DWORD PTR [eax+0x68]
100457a4:	mov    DWORD PTR [esi+0x4],ecx
100457a7:	mov    ecx,DWORD PTR [esi]
100457a9:	cmp    ecx,DWORD PTR ds:0x1007e9a8
100457af:	je     0x100457c3
100457b1:	mov    ecx,DWORD PTR ds:0x1007e8c4
100457b7:	test   DWORD PTR [eax+0x70],ecx
100457ba:	jne    0x100457c3
100457bc:	call   0x1004ab48
100457c1:	mov    DWORD PTR [esi],eax
100457c3:	mov    eax,DWORD PTR [esi+0x4]
100457c6:	cmp    eax,DWORD PTR ds:0x1007e7c8
100457cc:	je     0x100457e4
100457ce:	mov    eax,DWORD PTR [esi+0x8]
100457d1:	mov    ecx,DWORD PTR ds:0x1007e8c4
100457d7:	test   DWORD PTR [eax+0x70],ecx
100457da:	jne    0x100457e4
100457dc:	call   0x1004a437
100457e1:	mov    DWORD PTR [esi+0x4],eax
100457e4:	mov    eax,DWORD PTR [esi+0x8]
100457e7:	test   BYTE PTR [eax+0x70],0x2
100457eb:	jne    0x10045801
100457ed:	or     DWORD PTR [eax+0x70],0x2
100457f1:	mov    BYTE PTR [esi+0xc],0x1
100457f5:	jmp    0x10045801
100457f7:	mov    ecx,DWORD PTR [eax]
100457f9:	mov    DWORD PTR [esi],ecx
100457fb:	mov    eax,DWORD PTR [eax+0x4]
100457fe:	mov    DWORD PTR [esi+0x4],eax
10045801:	mov    eax,esi
10045803:	pop    esi
10045804:	ret    0x4
10045807:	mov    edx,DWORD PTR [esp+0x8]
1004580b:	push   esi
1004580c:	mov    esi,DWORD PTR [esp+0x8]
10045810:	push   edi
10045811:	movzx  eax,BYTE PTR [esi]
10045814:	lea    ecx,[eax-0x41]
10045817:	inc    esi
10045818:	cmp    ecx,0x19
1004581b:	ja     0x10045820
1004581d:	add    eax,0x20
10045820:	movzx  ecx,BYTE PTR [edx]
10045823:	lea    edi,[ecx-0x41]
10045826:	inc    edx
10045827:	cmp    edi,0x19
1004582a:	ja     0x1004582f
1004582c:	add    ecx,0x20
1004582f:	test   eax,eax
10045831:	je     0x10045837
10045833:	cmp    eax,ecx
10045835:	je     0x10045811
10045837:	pop    edi
10045838:	sub    eax,ecx
1004583a:	pop    esi
1004583b:	ret    
1004583c:	push   ebp
1004583d:	mov    ebp,esp
1004583f:	sub    esp,0x10
10045842:	push   ebx
10045843:	push   DWORD PTR [ebp+0x10]
10045846:	lea    ecx,[ebp-0x10]
10045849:	call   0x10045785
1004584e:	xor    ebx,ebx
10045850:	cmp    DWORD PTR [ebp+0x8],ebx
10045853:	jne    0x10045883
10045855:	call   0x10046df5
1004585a:	push   ebx
1004585b:	push   ebx
1004585c:	push   ebx
1004585d:	push   ebx
1004585e:	push   ebx
1004585f:	mov    DWORD PTR [eax],0x16
10045865:	call   0x100435cc
1004586a:	add    esp,0x14
1004586d:	cmp    BYTE PTR [ebp-0x4],bl
10045870:	je     0x10045879
10045872:	mov    eax,DWORD PTR [ebp-0x8]
10045875:	and    DWORD PTR [eax+0x70],0xfffffffd
10045879:	mov    eax,0x7fffffff
1004587e:	jmp    0x1004590c
10045883:	push   edi
10045884:	mov    edi,DWORD PTR [ebp+0xc]
10045887:	cmp    edi,ebx
10045889:	jne    0x100458b6
1004588b:	call   0x10046df5
10045890:	push   ebx
10045891:	push   ebx
10045892:	push   ebx
10045893:	push   ebx
10045894:	push   ebx
10045895:	mov    DWORD PTR [eax],0x16
1004589b:	call   0x100435cc
100458a0:	add    esp,0x14
100458a3:	cmp    BYTE PTR [ebp-0x4],bl
100458a6:	je     0x100458af
100458a8:	mov    eax,DWORD PTR [ebp-0x8]
100458ab:	and    DWORD PTR [eax+0x70],0xfffffffd
100458af:	mov    eax,0x7fffffff
100458b4:	jmp    0x1004590b
100458b6:	mov    eax,DWORD PTR [ebp-0x10]
100458b9:	cmp    DWORD PTR [eax+0x14],ebx
100458bc:	jne    0x100458cb
100458be:	push   edi
100458bf:	push   DWORD PTR [ebp+0x8]
100458c2:	call   0x10045807
100458c7:	pop    ecx
100458c8:	pop    ecx
100458c9:	jmp    0x100458ff
100458cb:	push   esi
100458cc:	mov    eax,DWORD PTR [ebp+0x8]
100458cf:	movzx  eax,BYTE PTR [eax]
100458d2:	lea    ecx,[ebp-0x10]
100458d5:	push   ecx
100458d6:	push   eax
100458d7:	call   0x10045f5a
100458dc:	inc    DWORD PTR [ebp+0x8]
100458df:	mov    esi,eax
100458e1:	movzx  eax,BYTE PTR [edi]
100458e4:	lea    ecx,[ebp-0x10]
100458e7:	push   ecx
100458e8:	push   eax
100458e9:	call   0x10045f5a
100458ee:	add    esp,0x10
100458f1:	inc    edi
100458f2:	cmp    esi,ebx
100458f4:	je     0x100458fa
100458f6:	cmp    esi,eax
100458f8:	je     0x100458cc
100458fa:	sub    esi,eax
100458fc:	mov    eax,esi
100458fe:	pop    esi
100458ff:	cmp    BYTE PTR [ebp-0x4],bl
10045902:	je     0x1004590b
10045904:	mov    ecx,DWORD PTR [ebp-0x8]
10045907:	and    DWORD PTR [ecx+0x70],0xfffffffd
1004590b:	pop    edi
1004590c:	pop    ebx
1004590d:	leave  
1004590e:	ret    
1004590f:	push   ebp
10045910:	mov    ebp,esp
10045912:	push   esi
10045913:	xor    esi,esi
10045915:	cmp    DWORD PTR ds:0x100802c8,esi
1004591b:	jne    0x1004594d
1004591d:	cmp    DWORD PTR [ebp+0x8],esi
10045920:	jne    0x10045941
10045922:	call   0x10046df5
10045927:	push   esi
10045928:	push   esi
10045929:	push   esi
1004592a:	push   esi
1004592b:	push   esi
1004592c:	mov    DWORD PTR [eax],0x16
10045932:	call   0x100435cc
10045937:	add    esp,0x14
1004593a:	mov    eax,0x7fffffff
1004593f:	jmp    0x1004595c
10045941:	cmp    DWORD PTR [ebp+0xc],esi
10045944:	je     0x10045922
10045946:	pop    esi
10045947:	pop    ebp
10045948:	jmp    0x10045807
1004594d:	push   esi
1004594e:	push   DWORD PTR [ebp+0xc]
10045951:	push   DWORD PTR [ebp+0x8]
10045954:	call   0x1004583c
10045959:	add    esp,0xc
1004595c:	pop    esi
1004595d:	pop    ebp
1004595e:	ret    
1004595f:	int3   
10045960:	push   ebp
10045961:	mov    ebp,esp
10045963:	push   edi
10045964:	push   esi
10045965:	mov    esi,DWORD PTR [ebp+0xc]
10045968:	mov    ecx,DWORD PTR [ebp+0x10]
1004596b:	mov    edi,DWORD PTR [ebp+0x8]
1004596e:	mov    eax,ecx
10045970:	mov    edx,ecx
10045972:	add    eax,esi
10045974:	cmp    edi,esi
10045976:	jbe    0x10045980
10045978:	cmp    edi,eax
1004597a:	jb     0x10045b24
10045980:	cmp    ecx,0x100
10045986:	jb     0x100459a7
10045988:	cmp    DWORD PTR ds:0x10082584,0x0
1004598f:	je     0x100459a7
10045991:	push   edi
10045992:	push   esi
10045993:	and    edi,0xf
10045996:	and    esi,0xf
10045999:	cmp    edi,esi
1004599b:	pop    esi
1004599c:	pop    edi
1004599d:	jne    0x100459a7
1004599f:	pop    esi
100459a0:	pop    edi
100459a1:	pop    ebp
100459a2:	jmp    0x1004a132
100459a7:	test   edi,0x3
100459ad:	jne    0x100459c4
100459af:	shr    ecx,0x2
100459b2:	and    edx,0x3
100459b5:	cmp    ecx,0x8
100459b8:	jb     0x100459e4
100459ba:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
100459bc:	jmp    DWORD PTR [edx*4+0x10045ad4]
100459c3:	nop
100459c4:	mov    eax,edi
100459c6:	mov    edx,0x3
100459cb:	sub    ecx,0x4
100459ce:	jb     0x100459dc
100459d0:	and    eax,0x3
100459d3:	add    ecx,eax
100459d5:	jmp    DWORD PTR [eax*4+0x100459e8]
100459dc:	jmp    DWORD PTR [ecx*4+0x10045ae4]
100459e3:	nop
100459e4:	jmp    DWORD PTR [ecx*4+0x10045a68]
100459eb:	nop
100459ec:	clc    
100459ed:	pop    ecx
100459ee:	add    al,0x10
100459f0:	and    al,0x5a
100459f2:	add    al,0x10
100459f4:	dec    eax
100459f5:	pop    edx
100459f6:	add    al,0x10
100459f8:	and    edx,ecx
100459fa:	mov    al,BYTE PTR [esi]
100459fc:	mov    BYTE PTR [edi],al
100459fe:	mov    al,BYTE PTR [esi+0x1]
10045a01:	mov    BYTE PTR [edi+0x1],al
10045a04:	mov    al,BYTE PTR [esi+0x2]
10045a07:	shr    ecx,0x2
10045a0a:	mov    BYTE PTR [edi+0x2],al
10045a0d:	add    esi,0x3
10045a10:	add    edi,0x3
10045a13:	cmp    ecx,0x8
10045a16:	jb     0x100459e4
10045a18:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10045a1a:	jmp    DWORD PTR [edx*4+0x10045ad4]
10045a21:	lea    ecx,[ecx+0x0]
10045a24:	and    edx,ecx
10045a26:	mov    al,BYTE PTR [esi]
10045a28:	mov    BYTE PTR [edi],al
10045a2a:	mov    al,BYTE PTR [esi+0x1]
10045a2d:	shr    ecx,0x2
10045a30:	mov    BYTE PTR [edi+0x1],al
10045a33:	add    esi,0x2
10045a36:	add    edi,0x2
10045a39:	cmp    ecx,0x8
10045a3c:	jb     0x100459e4
10045a3e:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10045a40:	jmp    DWORD PTR [edx*4+0x10045ad4]
10045a47:	nop
10045a48:	and    edx,ecx
10045a4a:	mov    al,BYTE PTR [esi]
10045a4c:	mov    BYTE PTR [edi],al
10045a4e:	add    esi,0x1
10045a51:	shr    ecx,0x2
10045a54:	add    edi,0x1
10045a57:	cmp    ecx,0x8
10045a5a:	jb     0x100459e4
10045a5c:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10045a5e:	jmp    DWORD PTR [edx*4+0x10045ad4]
10045a65:	lea    ecx,[ecx+0x0]
10045a68:	retf   
10045a69:	pop    edx
10045a6a:	add    al,0x10
10045a6c:	mov    eax,0xb010045a
10045a71:	pop    edx
10045a72:	add    al,0x10
10045a74:	test   al,0x5a
10045a76:	add    al,0x10
10045a78:	mov    al,ds:0x9810045a
10045a7d:	pop    edx
10045a7e:	add    al,0x10
10045a80:	nop
10045a81:	pop    edx
10045a82:	add    al,0x10
10045a84:	mov    BYTE PTR [edx+0x4],bl
10045a87:	adc    BYTE PTR [ebx-0x761b71bc],cl
10045a8d:	inc    esp
10045a8e:	(bad)  
10045a8f:	in     al,0x8b
10045a91:	inc    esp
10045a92:	mov    gs,eax
10045a94:	mov    DWORD PTR [edi+ecx*4-0x18],eax
10045a98:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
10045a9c:	mov    DWORD PTR [edi+ecx*4-0x14],eax
10045aa0:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
10045aa4:	mov    DWORD PTR [edi+ecx*4-0x10],eax
10045aa8:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
10045aac:	mov    DWORD PTR [edi+ecx*4-0xc],eax
10045ab0:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
10045ab4:	mov    DWORD PTR [edi+ecx*4-0x8],eax
10045ab8:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
10045abc:	mov    DWORD PTR [edi+ecx*4-0x4],eax
10045ac0:	lea    eax,[ecx*4+0x0]
10045ac7:	add    esi,eax
10045ac9:	add    edi,eax
10045acb:	jmp    DWORD PTR [edx*4+0x10045ad4]
10045ad2:	mov    edi,edi
10045ad4:	in     al,0x5a
10045ad6:	add    al,0x10
10045ad8:	in     al,dx
10045ad9:	pop    edx
10045ada:	add    al,0x10
10045adc:	clc    
10045add:	pop    edx
10045ade:	add    al,0x10
10045ae0:	or     al,0x5b
10045ae2:	add    al,0x10
10045ae4:	mov    eax,DWORD PTR [ebp+0x8]
10045ae7:	pop    esi
10045ae8:	pop    edi
10045ae9:	leave  
10045aea:	ret    
10045aeb:	nop
10045aec:	mov    al,BYTE PTR [esi]
10045aee:	mov    BYTE PTR [edi],al
10045af0:	mov    eax,DWORD PTR [ebp+0x8]
10045af3:	pop    esi
10045af4:	pop    edi
10045af5:	leave  
10045af6:	ret    
10045af7:	nop
10045af8:	mov    al,BYTE PTR [esi]
10045afa:	mov    BYTE PTR [edi],al
10045afc:	mov    al,BYTE PTR [esi+0x1]
10045aff:	mov    BYTE PTR [edi+0x1],al
10045b02:	mov    eax,DWORD PTR [ebp+0x8]
10045b05:	pop    esi
10045b06:	pop    edi
10045b07:	leave  
10045b08:	ret    
10045b09:	lea    ecx,[ecx+0x0]
10045b0c:	mov    al,BYTE PTR [esi]
10045b0e:	mov    BYTE PTR [edi],al
10045b10:	mov    al,BYTE PTR [esi+0x1]
10045b13:	mov    BYTE PTR [edi+0x1],al
10045b16:	mov    al,BYTE PTR [esi+0x2]
10045b19:	mov    BYTE PTR [edi+0x2],al
10045b1c:	mov    eax,DWORD PTR [ebp+0x8]
10045b1f:	pop    esi
10045b20:	pop    edi
10045b21:	leave  
10045b22:	ret    
10045b23:	nop
10045b24:	lea    esi,[ecx+esi*1-0x4]
10045b28:	lea    edi,[ecx+edi*1-0x4]
10045b2c:	test   edi,0x3
10045b32:	jne    0x10045b58
10045b34:	shr    ecx,0x2
10045b37:	and    edx,0x3
10045b3a:	cmp    ecx,0x8
10045b3d:	jb     0x10045b4c
10045b3f:	std    
10045b40:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10045b42:	cld    
10045b43:	jmp    DWORD PTR [edx*4+0x10045c70]
10045b4a:	mov    edi,edi
10045b4c:	neg    ecx
10045b4e:	jmp    DWORD PTR [ecx*4+0x10045c20]
10045b55:	lea    ecx,[ecx+0x0]
10045b58:	mov    eax,edi
10045b5a:	mov    edx,0x3
10045b5f:	cmp    ecx,0x4
10045b62:	jb     0x10045b70
10045b64:	and    eax,0x3
10045b67:	sub    ecx,eax
10045b69:	jmp    DWORD PTR [eax*4+0x10045b74]
10045b70:	jmp    DWORD PTR [ecx*4+0x10045c70]
10045b77:	nop
10045b78:	test   BYTE PTR [ebx+0x4],bl
10045b7b:	adc    BYTE PTR [eax-0x2feffba5],ch
10045b81:	pop    ebx
10045b82:	add    al,0x10
10045b84:	mov    al,BYTE PTR [esi+0x3]
10045b87:	and    edx,ecx
10045b89:	mov    BYTE PTR [edi+0x3],al
10045b8c:	sub    esi,0x1
10045b8f:	shr    ecx,0x2
10045b92:	sub    edi,0x1
10045b95:	cmp    ecx,0x8
10045b98:	jb     0x10045b4c
10045b9a:	std    
10045b9b:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10045b9d:	cld    
10045b9e:	jmp    DWORD PTR [edx*4+0x10045c70]
10045ba5:	lea    ecx,[ecx+0x0]
10045ba8:	mov    al,BYTE PTR [esi+0x3]
10045bab:	and    edx,ecx
10045bad:	mov    BYTE PTR [edi+0x3],al
10045bb0:	mov    al,BYTE PTR [esi+0x2]
10045bb3:	shr    ecx,0x2
10045bb6:	mov    BYTE PTR [edi+0x2],al
10045bb9:	sub    esi,0x2
10045bbc:	sub    edi,0x2
10045bbf:	cmp    ecx,0x8
10045bc2:	jb     0x10045b4c
10045bc4:	std    
10045bc5:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10045bc7:	cld    
10045bc8:	jmp    DWORD PTR [edx*4+0x10045c70]
10045bcf:	nop
10045bd0:	mov    al,BYTE PTR [esi+0x3]
10045bd3:	and    edx,ecx
10045bd5:	mov    BYTE PTR [edi+0x3],al
10045bd8:	mov    al,BYTE PTR [esi+0x2]
10045bdb:	mov    BYTE PTR [edi+0x2],al
10045bde:	mov    al,BYTE PTR [esi+0x1]
10045be1:	shr    ecx,0x2
10045be4:	mov    BYTE PTR [edi+0x1],al
10045be7:	sub    esi,0x3
10045bea:	sub    edi,0x3
10045bed:	cmp    ecx,0x8
10045bf0:	jb     0x10045b4c
10045bf6:	std    
10045bf7:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10045bf9:	cld    
10045bfa:	jmp    DWORD PTR [edx*4+0x10045c70]
10045c01:	lea    ecx,[ecx+0x0]
10045c04:	and    al,0x5c
10045c06:	add    al,0x10
10045c08:	sub    al,0x5c
10045c0a:	add    al,0x10
10045c0c:	xor    al,0x5c
10045c0e:	add    al,0x10
10045c10:	cmp    al,0x5c
10045c12:	add    al,0x10
10045c14:	inc    esp
10045c15:	pop    esp
10045c16:	add    al,0x10
10045c18:	dec    esp
10045c19:	pop    esp
10045c1a:	add    al,0x10
10045c1c:	push   esp
10045c1d:	pop    esp
10045c1e:	add    al,0x10
10045c20:	addr16 pop esp
10045c22:	add    al,0x10
10045c24:	mov    eax,DWORD PTR [esi+ecx*4+0x1c]
10045c28:	mov    DWORD PTR [edi+ecx*4+0x1c],eax
10045c2c:	mov    eax,DWORD PTR [esi+ecx*4+0x18]
10045c30:	mov    DWORD PTR [edi+ecx*4+0x18],eax
10045c34:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
10045c38:	mov    DWORD PTR [edi+ecx*4+0x14],eax
10045c3c:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
10045c40:	mov    DWORD PTR [edi+ecx*4+0x10],eax
10045c44:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
10045c48:	mov    DWORD PTR [edi+ecx*4+0xc],eax
10045c4c:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
10045c50:	mov    DWORD PTR [edi+ecx*4+0x8],eax
10045c54:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
10045c58:	mov    DWORD PTR [edi+ecx*4+0x4],eax
10045c5c:	lea    eax,[ecx*4+0x0]
10045c63:	add    esi,eax
10045c65:	add    edi,eax
10045c67:	jmp    DWORD PTR [edx*4+0x10045c70]
10045c6e:	mov    edi,edi
10045c70:	sbb    BYTE PTR [esp+eax*1+0x10],0x88
10045c75:	pop    esp
10045c76:	add    al,0x10
10045c78:	cwde   
10045c79:	pop    esp
10045c7a:	add    al,0x10
10045c7c:	lods   al,BYTE PTR ds:[esi]
10045c7d:	pop    esp
10045c7e:	add    al,0x10
10045c80:	mov    eax,DWORD PTR [ebp+0x8]
10045c83:	pop    esi
10045c84:	pop    edi
10045c85:	leave  
10045c86:	ret    
10045c87:	nop
10045c88:	mov    al,BYTE PTR [esi+0x3]
10045c8b:	mov    BYTE PTR [edi+0x3],al
10045c8e:	mov    eax,DWORD PTR [ebp+0x8]
10045c91:	pop    esi
10045c92:	pop    edi
10045c93:	leave  
10045c94:	ret    
10045c95:	lea    ecx,[ecx+0x0]
10045c98:	mov    al,BYTE PTR [esi+0x3]
10045c9b:	mov    BYTE PTR [edi+0x3],al
10045c9e:	mov    al,BYTE PTR [esi+0x2]
10045ca1:	mov    BYTE PTR [edi+0x2],al
10045ca4:	mov    eax,DWORD PTR [ebp+0x8]
10045ca7:	pop    esi
10045ca8:	pop    edi
10045ca9:	leave  
10045caa:	ret    
10045cab:	nop
10045cac:	mov    al,BYTE PTR [esi+0x3]
10045caf:	mov    BYTE PTR [edi+0x3],al
10045cb2:	mov    al,BYTE PTR [esi+0x2]
10045cb5:	mov    BYTE PTR [edi+0x2],al
10045cb8:	mov    al,BYTE PTR [esi+0x1]
10045cbb:	mov    BYTE PTR [edi+0x1],al
10045cbe:	mov    eax,DWORD PTR [ebp+0x8]
10045cc1:	pop    esi
10045cc2:	pop    edi
10045cc3:	leave  
10045cc4:	ret    
10045cc5:	int3   
10045cc6:	int3   
10045cc7:	int3   
10045cc8:	int3   
10045cc9:	int3   
10045cca:	int3   
10045ccb:	int3   
10045ccc:	int3   
10045ccd:	int3   
10045cce:	int3   
10045ccf:	int3   
10045cd0:	mov    ecx,DWORD PTR [esp+0x8]
10045cd4:	push   edi
10045cd5:	push   ebx
10045cd6:	push   esi
10045cd7:	mov    dl,BYTE PTR [ecx]
10045cd9:	mov    edi,DWORD PTR [esp+0x10]
10045cdd:	test   dl,dl
10045cdf:	je     0x10045d50
10045ce1:	mov    dh,BYTE PTR [ecx+0x1]
10045ce4:	test   dh,dh
10045ce6:	je     0x10045d3d
10045ce8:	mov    esi,edi
10045cea:	mov    ecx,DWORD PTR [esp+0x14]
10045cee:	mov    al,BYTE PTR [edi]
10045cf0:	add    esi,0x1
10045cf3:	cmp    al,dl
10045cf5:	je     0x10045d0e
10045cf7:	test   al,al
10045cf9:	je     0x10045d08
10045cfb:	mov    al,BYTE PTR [esi]
10045cfd:	add    esi,0x1
10045d00:	cmp    al,dl
10045d02:	je     0x10045d0e
10045d04:	test   al,al
10045d06:	jne    0x10045cfb
10045d08:	pop    esi
10045d09:	pop    ebx
10045d0a:	pop    edi
10045d0b:	xor    eax,eax
10045d0d:	ret    
10045d0e:	mov    al,BYTE PTR [esi]
10045d10:	add    esi,0x1
10045d13:	cmp    al,dh
10045d15:	jne    0x10045d00
10045d17:	lea    edi,[esi-0x1]
10045d1a:	mov    ah,BYTE PTR [ecx+0x2]
10045d1d:	test   ah,ah
10045d1f:	je     0x10045d49
10045d21:	mov    al,BYTE PTR [esi]
10045d23:	add    esi,0x2
10045d26:	cmp    al,ah
10045d28:	jne    0x10045ce8
10045d2a:	mov    al,BYTE PTR [ecx+0x3]
10045d2d:	test   al,al
10045d2f:	je     0x10045d49
10045d31:	mov    ah,BYTE PTR [esi-0x1]
10045d34:	add    ecx,0x2
10045d37:	cmp    al,ah
10045d39:	je     0x10045d1a
10045d3b:	jmp    0x10045ce8
10045d3d:	xor    eax,eax
10045d3f:	pop    esi
10045d40:	pop    ebx
10045d41:	pop    edi
10045d42:	mov    al,dl
10045d44:	jmp    0x1004abd6
10045d49:	lea    eax,[edi-0x1]
10045d4c:	pop    esi
10045d4d:	pop    ebx
10045d4e:	pop    edi
10045d4f:	ret    
10045d50:	mov    eax,edi
10045d52:	pop    esi
10045d53:	pop    ebx
10045d54:	pop    edi
10045d55:	ret    
10045d56:	cmp    DWORD PTR [esp+0x8],0x0
10045d5b:	je     0x10045d63
10045d5d:	mov    BYTE PTR [ecx],0x2d
10045d60:	inc    ecx
10045d61:	neg    eax
10045d63:	push   esi
10045d64:	mov    esi,ecx
10045d66:	xor    edx,edx
10045d68:	div    DWORD PTR [esp+0x8]
10045d6c:	cmp    edx,0x9
10045d6f:	jbe    0x10045d76
10045d71:	add    dl,0x57
10045d74:	jmp    0x10045d79
10045d76:	add    dl,0x30
10045d79:	mov    BYTE PTR [ecx],dl
10045d7b:	inc    ecx
10045d7c:	test   eax,eax
10045d7e:	ja     0x10045d66
10045d80:	mov    BYTE PTR [ecx],0x0
10045d83:	dec    ecx
10045d84:	mov    dl,BYTE PTR [esi]
10045d86:	mov    al,BYTE PTR [ecx]
10045d88:	mov    BYTE PTR [ecx],dl
10045d8a:	dec    ecx
10045d8b:	mov    BYTE PTR [esi],al
10045d8d:	inc    esi
10045d8e:	cmp    esi,ecx
10045d90:	jb     0x10045d84
10045d92:	pop    esi
10045d93:	ret    0x8
10045d96:	push   ebp
10045d97:	mov    ebp,esp
10045d99:	cmp    DWORD PTR [ebp+0x10],0xa
10045d9d:	mov    eax,DWORD PTR [ebp+0x8]
10045da0:	jne    0x10045dac
10045da2:	test   eax,eax
10045da4:	jge    0x10045dac
10045da6:	push   0x1
10045da8:	push   0xa
10045daa:	jmp    0x10045db1
10045dac:	push   0x0
10045dae:	push   DWORD PTR [ebp+0x10]
10045db1:	mov    ecx,DWORD PTR [ebp+0xc]
10045db4:	call   0x10045d56
10045db9:	mov    eax,DWORD PTR [ebp+0xc]
10045dbc:	pop    ebp
10045dbd:	ret    
10045dbe:	push   ebp
10045dbf:	mov    ebp,esp
10045dc1:	xor    eax,eax
10045dc3:	cmp    DWORD PTR [ebp+0x10],0xa
10045dc7:	jne    0x10045dcf
10045dc9:	cmp    DWORD PTR [ebp+0x8],eax
10045dcc:	jge    0x10045dcf
10045dce:	inc    eax
10045dcf:	mov    ecx,DWORD PTR [ebp+0xc]
10045dd2:	push   eax
10045dd3:	push   DWORD PTR [ebp+0x10]
10045dd6:	mov    eax,DWORD PTR [ebp+0x8]
10045dd9:	call   0x10045d56
10045dde:	mov    eax,DWORD PTR [ebp+0xc]
10045de1:	pop    ebp
10045de2:	ret    
10045de3:	int3   
10045de4:	int3   
10045de5:	int3   
10045de6:	int3   
10045de7:	int3   
10045de8:	int3   
10045de9:	int3   
10045dea:	int3   
10045deb:	int3   
10045dec:	int3   
10045ded:	int3   
10045dee:	int3   
10045def:	int3   
10045df0:	mov    eax,DWORD PTR [esp+0xc]
10045df4:	push   ebx
10045df5:	test   eax,eax
10045df7:	je     0x10045e4b
10045df9:	mov    edx,DWORD PTR [esp+0x8]
10045dfd:	xor    ebx,ebx
10045dff:	mov    bl,BYTE PTR [esp+0xc]
10045e03:	test   edx,0x3
10045e09:	je     0x10045e21
10045e0b:	mov    cl,BYTE PTR [edx]
10045e0d:	add    edx,0x1
10045e10:	xor    cl,bl
10045e12:	je     0x10045e86
10045e14:	sub    eax,0x1
10045e17:	je     0x10045e4b
10045e19:	test   edx,0x3
10045e1f:	jne    0x10045e0b
10045e21:	sub    eax,0x4
10045e24:	jb     0x10045e38
10045e26:	push   edi
10045e27:	mov    edi,ebx
10045e29:	shl    ebx,0x8
10045e2c:	add    ebx,edi
10045e2e:	mov    edi,ebx
10045e30:	shl    ebx,0x10
10045e33:	add    ebx,edi
10045e35:	jmp    0x10045e52
10045e37:	pop    edi
10045e38:	add    eax,0x4
10045e3b:	je     0x10045e4b
10045e3d:	mov    cl,BYTE PTR [edx]
10045e3f:	add    edx,0x1
10045e42:	xor    cl,bl
10045e44:	je     0x10045e86
10045e46:	sub    eax,0x1
10045e49:	jne    0x10045e3d
10045e4b:	pop    ebx
10045e4c:	ret    
10045e4d:	sub    eax,0x4
10045e50:	jb     0x10045e37
10045e52:	mov    ecx,DWORD PTR [edx]
10045e54:	xor    ecx,ebx
10045e56:	mov    edi,0x7efefeff
10045e5b:	add    edi,ecx
10045e5d:	xor    ecx,0xffffffff
10045e60:	xor    ecx,edi
10045e62:	add    edx,0x4
10045e65:	and    ecx,0x81010100
10045e6b:	je     0x10045e4d
10045e6d:	mov    ecx,DWORD PTR [edx-0x4]
10045e70:	xor    cl,bl
10045e72:	je     0x10045e97
10045e74:	xor    ch,bl
10045e76:	je     0x10045e91
10045e78:	shr    ecx,0x10
10045e7b:	xor    cl,bl
10045e7d:	je     0x10045e8b
10045e7f:	xor    ch,bl
10045e81:	je     0x10045e85
10045e83:	jmp    0x10045e4d
10045e85:	pop    edi
10045e86:	lea    eax,[edx-0x1]
10045e89:	pop    ebx
10045e8a:	ret    
10045e8b:	lea    eax,[edx-0x2]
10045e8e:	pop    edi
10045e8f:	pop    ebx
10045e90:	ret    
10045e91:	lea    eax,[edx-0x3]
10045e94:	pop    edi
10045e95:	pop    ebx
10045e96:	ret    
10045e97:	lea    eax,[edx-0x4]
10045e9a:	pop    edi
10045e9b:	pop    ebx
10045e9c:	ret    
10045e9d:	int3   
10045e9e:	int3   
10045e9f:	int3   
10045ea0:	mov    edx,DWORD PTR [esp+0xc]
10045ea4:	mov    ecx,DWORD PTR [esp+0x4]
10045ea8:	test   edx,edx
10045eaa:	je     0x10045f15
10045eac:	xor    eax,eax
10045eae:	mov    al,BYTE PTR [esp+0x8]
10045eb2:	test   al,al
10045eb4:	jne    0x10045ecc
10045eb6:	cmp    edx,0x100
10045ebc:	jb     0x10045ecc
10045ebe:	cmp    DWORD PTR ds:0x10082584,0x0
10045ec5:	je     0x10045ecc
10045ec7:	jmp    0x1004ad7c
10045ecc:	push   edi
10045ecd:	mov    edi,ecx
10045ecf:	cmp    edx,0x4
10045ed2:	jb     0x10045f05
10045ed4:	neg    ecx
10045ed6:	and    ecx,0x3
10045ed9:	je     0x10045ee7
10045edb:	sub    edx,ecx
10045edd:	mov    BYTE PTR [edi],al
10045edf:	add    edi,0x1
10045ee2:	sub    ecx,0x1
10045ee5:	jne    0x10045edd
10045ee7:	mov    ecx,eax
10045ee9:	shl    eax,0x8
10045eec:	add    eax,ecx
10045eee:	mov    ecx,eax
10045ef0:	shl    eax,0x10
10045ef3:	add    eax,ecx
10045ef5:	mov    ecx,edx
10045ef7:	and    edx,0x3
10045efa:	shr    ecx,0x2
10045efd:	je     0x10045f05
10045eff:	rep stos DWORD PTR es:[edi],eax
10045f01:	test   edx,edx
10045f03:	je     0x10045f0f
10045f05:	mov    BYTE PTR [edi],al
10045f07:	add    edi,0x1
10045f0a:	sub    edx,0x1
10045f0d:	jne    0x10045f05
10045f0f:	mov    eax,DWORD PTR [esp+0x8]
10045f13:	pop    edi
10045f14:	ret    
10045f15:	mov    eax,DWORD PTR [esp+0x4]
10045f19:	ret    
10045f1a:	push   DWORD PTR ds:0x100802f4
10045f20:	call   0x10047192
10045f25:	test   eax,eax
10045f27:	pop    ecx
10045f28:	je     0x10045f2c
10045f2a:	call   eax
10045f2c:	push   0x19
10045f2e:	call   0x10049e9a
10045f33:	push   0x1
10045f35:	push   0x0
10045f37:	call   0x1004aefe
10045f3c:	add    esp,0xc
10045f3f:	jmp    0x1004ae0b
10045f44:	push   0xa
10045f46:	push   0x0
10045f48:	push   DWORD PTR [esp+0xc]
10045f4c:	call   0x1004b151
10045f51:	add    esp,0xc
10045f54:	ret    
10045f55:	jmp    0x10045f44
10045f5a:	push   ebp
10045f5b:	mov    ebp,esp
10045f5d:	sub    esp,0x18
10045f60:	push   ebx
10045f61:	push   esi
10045f62:	push   DWORD PTR [ebp+0xc]
10045f65:	lea    ecx,[ebp-0x18]
10045f68:	call   0x10045785
10045f6d:	mov    ebx,DWORD PTR [ebp+0x8]
10045f70:	mov    esi,0x100
10045f75:	cmp    ebx,esi
10045f77:	jae    0x10045fcd
10045f79:	mov    ecx,DWORD PTR [ebp-0x18]
10045f7c:	cmp    DWORD PTR [ecx+0xac],0x1
10045f83:	jle    0x10045f99
10045f85:	lea    eax,[ebp-0x18]
10045f88:	push   eax
10045f89:	push   0x1
10045f8b:	push   ebx
10045f8c:	call   0x1004b5a3
10045f91:	mov    ecx,DWORD PTR [ebp-0x18]
10045f94:	add    esp,0xc
10045f97:	jmp    0x10045fa6
10045f99:	mov    eax,DWORD PTR [ecx+0xc8]
10045f9f:	movzx  eax,BYTE PTR [eax+ebx*2]
10045fa3:	and    eax,0x1
10045fa6:	test   eax,eax
10045fa8:	je     0x10045fb9
10045faa:	mov    eax,DWORD PTR [ecx+0xcc]
10045fb0:	movzx  eax,BYTE PTR [eax+ebx*1]
10045fb4:	jmp    0x10046060
10045fb9:	cmp    BYTE PTR [ebp-0xc],0x0
10045fbd:	je     0x10045fc6
10045fbf:	mov    eax,DWORD PTR [ebp-0x10]
10045fc2:	and    DWORD PTR [eax+0x70],0xfffffffd
10045fc6:	mov    eax,ebx
10045fc8:	jmp    0x1004606d
10045fcd:	mov    eax,DWORD PTR [ebp-0x18]
10045fd0:	cmp    DWORD PTR [eax+0xac],0x1
10045fd7:	jle    0x1004600a
10045fd9:	mov    DWORD PTR [ebp+0x8],ebx
10045fdc:	sar    DWORD PTR [ebp+0x8],0x8
10045fe0:	lea    eax,[ebp-0x18]
10045fe3:	push   eax
10045fe4:	mov    eax,DWORD PTR [ebp+0x8]
10045fe7:	and    eax,0xff
10045fec:	push   eax
10045fed:	call   0x1004b55f
10045ff2:	test   eax,eax
10045ff4:	pop    ecx
10045ff5:	pop    ecx
10045ff6:	je     0x1004600a
10045ff8:	mov    al,BYTE PTR [ebp+0x8]
10045ffb:	push   0x2
10045ffd:	mov    BYTE PTR [ebp-0x4],al
10046000:	mov    BYTE PTR [ebp-0x3],bl
10046003:	mov    BYTE PTR [ebp-0x2],0x0
10046007:	pop    ecx
10046008:	jmp    0x1004601f
1004600a:	call   0x10046df5
1004600f:	mov    DWORD PTR [eax],0x2a
10046015:	xor    ecx,ecx
10046017:	mov    BYTE PTR [ebp-0x4],bl
1004601a:	mov    BYTE PTR [ebp-0x3],0x0
1004601e:	inc    ecx
1004601f:	mov    eax,DWORD PTR [ebp-0x18]
10046022:	push   0x1
10046024:	push   DWORD PTR [eax+0x4]
10046027:	lea    edx,[ebp-0x8]
1004602a:	push   0x3
1004602c:	push   edx
1004602d:	push   ecx
1004602e:	lea    ecx,[ebp-0x4]
10046031:	push   ecx
10046032:	push   esi
10046033:	push   DWORD PTR [eax+0x14]
10046036:	lea    eax,[ebp-0x18]
10046039:	push   eax
1004603a:	call   0x1004b51c
1004603f:	add    esp,0x24
10046042:	test   eax,eax
10046044:	je     0x10045fb9
1004604a:	cmp    eax,0x1
1004604d:	jne    0x10046055
1004604f:	movzx  eax,BYTE PTR [ebp-0x8]
10046053:	jmp    0x10046060
10046055:	movzx  ecx,BYTE PTR [ebp-0x7]
10046059:	xor    eax,eax
1004605b:	mov    ah,BYTE PTR [ebp-0x8]
1004605e:	or     eax,ecx
10046060:	cmp    BYTE PTR [ebp-0xc],0x0
10046064:	je     0x1004606d
10046066:	mov    ecx,DWORD PTR [ebp-0x10]
10046069:	and    DWORD PTR [ecx+0x70],0xfffffffd
1004606d:	pop    esi
1004606e:	pop    ebx
1004606f:	leave  
10046070:	ret    
10046071:	cmp    DWORD PTR ds:0x100802c8,0x0
10046078:	jne    0x1004608a
1004607a:	mov    eax,DWORD PTR [esp+0x4]
1004607e:	lea    ecx,[eax-0x41]
10046081:	cmp    ecx,0x19
10046084:	ja     0x10046097
10046086:	add    eax,0x20
10046089:	ret    
1004608a:	push   0x0
1004608c:	push   DWORD PTR [esp+0x8]
10046090:	call   0x10045f5a
10046095:	pop    ecx
10046096:	pop    ecx
10046097:	ret    
10046098:	push   0x10
1004609a:	push   0x10074700
1004609f:	call   0x10046f34
100460a4:	xor    eax,eax
100460a6:	mov    DWORD PTR [ebp-0x20],eax
100460a9:	mov    DWORD PTR [ebp-0x4],eax
100460ac:	mov    DWORD PTR [ebp-0x1c],eax
100460af:	mov    eax,DWORD PTR [ebp-0x1c]
100460b2:	cmp    eax,DWORD PTR [ebp+0x10]
100460b5:	jge    0x100460ca
100460b7:	mov    esi,DWORD PTR [ebp+0x8]
100460ba:	mov    ecx,esi
100460bc:	call   DWORD PTR [ebp+0x14]
100460bf:	add    esi,DWORD PTR [ebp+0xc]
100460c2:	mov    DWORD PTR [ebp+0x8],esi
100460c5:	inc    DWORD PTR [ebp-0x1c]
100460c8:	jmp    0x100460af
100460ca:	mov    DWORD PTR [ebp-0x20],0x1
100460d1:	mov    DWORD PTR [ebp-0x4],0xfffffffe
100460d8:	call   0x100460e5
100460dd:	call   0x10046f79
100460e2:	ret    0x14
100460e5:	cmp    DWORD PTR [ebp-0x20],0x0
100460e9:	jne    0x100460fc
100460eb:	push   DWORD PTR [ebp+0x18]
100460ee:	push   DWORD PTR [ebp-0x1c]
100460f1:	push   DWORD PTR [ebp+0xc]
100460f4:	push   DWORD PTR [ebp+0x8]
100460f7:	call   0x100432db
100460fc:	ret    
100460fd:	push   ebp
100460fe:	mov    ebp,esp
10046100:	push   ebx
10046101:	push   esi
10046102:	mov    esi,DWORD PTR [ebp+0x8]
10046105:	push   edi
10046106:	xor    edi,edi
10046108:	cmp    DWORD PTR [ebp+0x14],edi
1004610b:	jne    0x1004611d
1004610d:	cmp    esi,edi
1004610f:	jne    0x10046121
10046111:	cmp    DWORD PTR [ebp+0xc],edi
10046114:	jne    0x10046128
10046116:	xor    eax,eax
10046118:	pop    edi
10046119:	pop    esi
1004611a:	pop    ebx
1004611b:	pop    ebp
1004611c:	ret    
1004611d:	cmp    esi,edi
1004611f:	je     0x10046128
10046121:	mov    ebx,DWORD PTR [ebp+0xc]
10046124:	cmp    ebx,edi
10046126:	ja     0x10046143
10046128:	call   0x10046df5
1004612d:	push   0x16
1004612f:	pop    esi
10046130:	mov    DWORD PTR [eax],esi
10046132:	push   edi
10046133:	push   edi
10046134:	push   edi
10046135:	push   edi
10046136:	push   edi
10046137:	call   0x100435cc
1004613c:	add    esp,0x14
1004613f:	mov    eax,esi
10046141:	jmp    0x10046118
10046143:	cmp    DWORD PTR [ebp+0x14],edi
10046146:	jne    0x1004614d
10046148:	mov    WORD PTR [esi],di
1004614b:	jmp    0x10046116
1004614d:	mov    edx,DWORD PTR [ebp+0x10]
10046150:	cmp    edx,edi
10046152:	jne    0x10046159
10046154:	mov    WORD PTR [esi],di
10046157:	jmp    0x10046128
10046159:	cmp    DWORD PTR [ebp+0x14],0xffffffff
1004615d:	mov    eax,esi
1004615f:	jne    0x10046175
10046161:	movzx  ecx,WORD PTR [edx]
10046164:	mov    WORD PTR [eax],cx
10046167:	inc    eax
10046168:	inc    eax
10046169:	inc    edx
1004616a:	inc    edx
1004616b:	cmp    cx,di
1004616e:	je     0x10046194
10046170:	dec    ebx
10046171:	jne    0x10046161
10046173:	jmp    0x10046194
10046175:	movzx  ecx,WORD PTR [edx]
10046178:	mov    WORD PTR [eax],cx
1004617b:	inc    eax
1004617c:	inc    eax
1004617d:	inc    edx
1004617e:	inc    edx
1004617f:	cmp    cx,di
10046182:	je     0x1004618c
10046184:	dec    ebx
10046185:	je     0x1004618c
10046187:	dec    DWORD PTR [ebp+0x14]
1004618a:	jne    0x10046175
1004618c:	cmp    DWORD PTR [ebp+0x14],edi
1004618f:	jne    0x10046194
10046191:	mov    WORD PTR [eax],di
10046194:	cmp    ebx,edi
10046196:	jne    0x10046116
1004619c:	cmp    DWORD PTR [ebp+0x14],0xffffffff
100461a0:	jne    0x100461b2
100461a2:	mov    eax,DWORD PTR [ebp+0xc]
100461a5:	push   0x50
100461a7:	mov    WORD PTR [esi+eax*2-0x2],di
100461ac:	pop    eax
100461ad:	jmp    0x10046118
100461b2:	mov    WORD PTR [esi],di
100461b5:	call   0x10046df5
100461ba:	push   0x22
100461bc:	pop    ecx
100461bd:	mov    DWORD PTR [eax],ecx
100461bf:	mov    esi,ecx
100461c1:	jmp    0x10046132
100461c6:	push   ebp
100461c7:	mov    ebp,esp
100461c9:	sub    esp,0xc
100461cc:	mov    eax,ds:0x1007e030
100461d1:	xor    eax,ebp
100461d3:	mov    DWORD PTR [ebp-0x4],eax
100461d6:	push   esi
100461d7:	xor    esi,esi
100461d9:	cmp    ebx,esi
100461db:	push   edi
100461dc:	jne    0x100461fc
100461de:	call   0x10046df5
100461e3:	push   0x16
100461e5:	pop    edi
100461e6:	push   esi
100461e7:	push   esi
100461e8:	push   esi
100461e9:	push   esi
100461ea:	push   esi
100461eb:	mov    DWORD PTR [eax],edi
100461ed:	call   0x100435cc
100461f2:	add    esp,0x14
100461f5:	mov    eax,edi
100461f7:	jmp    0x1004633c
100461fc:	push   DWORD PTR [ebp+0x8]
100461ff:	push   ebx
10046200:	call   0x1004b966
10046205:	cmp    eax,DWORD PTR [ebp+0x8]
10046208:	pop    ecx
10046209:	pop    ecx
1004620a:	jb     0x10046211
1004620c:	mov    WORD PTR [ebx],si
1004620f:	jmp    0x100461de
10046211:	mov    edx,DWORD PTR [ebp+0xc]
10046214:	mov    eax,DWORD PTR [edx]
10046216:	mov    ecx,DWORD PTR [eax+0x14]
10046219:	cmp    ecx,esi
1004621b:	jne    0x10046247
1004621d:	cmp    WORD PTR [ebx],si
10046220:	mov    eax,ebx
10046222:	je     0x10046240
10046224:	movzx  ecx,WORD PTR [eax]
10046227:	cmp    cx,0x41
1004622b:	jb     0x10046239
1004622d:	cmp    cx,0x5a
10046231:	ja     0x10046239
10046233:	add    ecx,0x20
10046236:	mov    WORD PTR [eax],cx
10046239:	inc    eax
1004623a:	inc    eax
1004623b:	cmp    WORD PTR [eax],si
1004623e:	jne    0x10046224
10046240:	xor    eax,eax
10046242:	jmp    0x1004633c
10046247:	push   DWORD PTR [eax+0x4]
1004624a:	mov    edi,0x100
1004624f:	push   esi
10046250:	push   esi
10046251:	push   0xffffffff
10046253:	push   ebx
10046254:	push   edi
10046255:	push   ecx
10046256:	push   edx
10046257:	call   0x1004b926
1004625c:	mov    ecx,eax
1004625e:	add    esp,0x20
10046261:	cmp    ecx,esi
10046263:	mov    DWORD PTR [ebp-0xc],ecx
10046266:	jne    0x1004627f
10046268:	call   0x10046df5
1004626d:	mov    DWORD PTR [eax],0x2a
10046273:	call   0x10046df5
10046278:	mov    eax,DWORD PTR [eax]
1004627a:	jmp    0x1004633c
1004627f:	cmp    DWORD PTR [ebp+0x8],ecx
10046282:	jae    0x10046293
10046284:	mov    WORD PTR [ebx],si
10046287:	call   0x10046df5
1004628c:	push   0x22
1004628e:	jmp    0x100461e5
10046293:	cmp    ecx,esi
10046295:	jle    0x100462dd
10046297:	push   0xffffffe0
10046299:	xor    edx,edx
1004629b:	pop    eax
1004629c:	div    ecx
1004629e:	cmp    eax,0x2
100462a1:	jb     0x100462dd
100462a3:	lea    eax,[ecx+ecx*1+0x8]
100462a7:	cmp    eax,0x400
100462ac:	ja     0x100462c1
100462ae:	call   0x1004b990
100462b3:	mov    eax,esp
100462b5:	cmp    eax,esi
100462b7:	je     0x100462d5
100462b9:	mov    DWORD PTR [eax],0xcccc
100462bf:	jmp    0x100462d2
100462c1:	push   eax
100462c2:	call   0x10045222
100462c7:	cmp    eax,esi
100462c9:	pop    ecx
100462ca:	je     0x100462d5
100462cc:	mov    DWORD PTR [eax],0xdddd
100462d2:	add    eax,0x8
100462d5:	mov    ecx,DWORD PTR [ebp-0xc]
100462d8:	mov    DWORD PTR [ebp-0x8],eax
100462db:	jmp    0x100462e0
100462dd:	mov    DWORD PTR [ebp-0x8],esi
100462e0:	cmp    DWORD PTR [ebp-0x8],esi
100462e3:	jne    0x100462f2
100462e5:	call   0x10046df5
100462ea:	mov    DWORD PTR [eax],0xc
100462f0:	jmp    0x10046273
100462f2:	mov    edx,DWORD PTR [ebp+0xc]
100462f5:	mov    eax,DWORD PTR [edx]
100462f7:	push   DWORD PTR [eax+0x4]
100462fa:	push   ecx
100462fb:	push   DWORD PTR [ebp-0x8]
100462fe:	push   0xffffffff
10046300:	push   ebx
10046301:	push   edi
10046302:	push   DWORD PTR [eax+0x14]
10046305:	push   edx
10046306:	call   0x1004b926
1004630b:	add    esp,0x20
1004630e:	test   eax,eax
10046310:	je     0x10046325
10046312:	push   DWORD PTR [ebp-0x8]
10046315:	push   DWORD PTR [ebp+0x8]
10046318:	push   ebx
10046319:	call   0x1004b659
1004631e:	add    esp,0xc
10046321:	mov    esi,eax
10046323:	jmp    0x10046331
10046325:	call   0x10046df5
1004632a:	push   0x2a
1004632c:	pop    ecx
1004632d:	mov    DWORD PTR [eax],ecx
1004632f:	mov    esi,ecx
10046331:	push   DWORD PTR [ebp-0x8]
10046334:	call   0x1001b5ea
10046339:	pop    ecx
1004633a:	mov    eax,esi
1004633c:	lea    esp,[ebp-0x14]
1004633f:	pop    edi
10046340:	pop    esi
10046341:	mov    ecx,DWORD PTR [ebp-0x4]
10046344:	xor    ecx,ebp
10046346:	call   0x100430d7
1004634b:	leave  
1004634c:	ret    
1004634d:	push   ebp
1004634e:	mov    ebp,esp
10046350:	sub    esp,0x10
10046353:	push   ebx
10046354:	push   DWORD PTR [ebp+0x10]
10046357:	lea    ecx,[ebp-0x10]
1004635a:	call   0x10045785
1004635f:	mov    ebx,DWORD PTR [ebp+0x8]
10046362:	lea    eax,[ebp-0x10]
10046365:	push   eax
10046366:	push   DWORD PTR [ebp+0xc]
10046369:	call   0x100461c6
1004636e:	cmp    BYTE PTR [ebp-0x4],0x0
10046372:	pop    ecx
10046373:	pop    ecx
10046374:	pop    ebx
10046375:	je     0x1004637e
10046377:	mov    ecx,DWORD PTR [ebp-0x8]
1004637a:	and    DWORD PTR [ecx+0x70],0xfffffffd
1004637e:	leave  
1004637f:	ret    
10046380:	push   esi
10046381:	xor    esi,esi
10046383:	cmp    DWORD PTR ds:0x100802c8,esi
10046389:	jne    0x100463d4
1004638b:	mov    eax,DWORD PTR [esp+0x8]
1004638f:	cmp    eax,esi
10046391:	jne    0x100463af
10046393:	call   0x10046df5
10046398:	push   esi
10046399:	push   esi
1004639a:	push   esi
1004639b:	push   esi
1004639c:	push   esi
1004639d:	mov    DWORD PTR [eax],0x16
100463a3:	call   0x100435cc
100463a8:	add    esp,0x14
100463ab:	xor    eax,eax
100463ad:	pop    esi
100463ae:	ret    
100463af:	cmp    WORD PTR [eax],si
100463b2:	mov    ecx,eax
100463b4:	je     0x100463e7
100463b6:	movzx  edx,WORD PTR [ecx]
100463b9:	cmp    dx,0x41
100463bd:	jb     0x100463cb
100463bf:	cmp    dx,0x5a
100463c3:	ja     0x100463cb
100463c5:	add    edx,0x20
100463c8:	mov    WORD PTR [ecx],dx
100463cb:	inc    ecx
100463cc:	inc    ecx
100463cd:	cmp    WORD PTR [ecx],si
100463d0:	jne    0x100463b6
100463d2:	pop    esi
100463d3:	ret    
100463d4:	push   esi
100463d5:	push   0xffffffff
100463d7:	push   DWORD PTR [esp+0x10]
100463db:	call   0x1004634d
100463e0:	mov    eax,DWORD PTR [esp+0x14]
100463e4:	add    esp,0xc
100463e7:	pop    esi
100463e8:	ret    
100463e9:	mov    eax,DWORD PTR [esp+0x4]
100463ed:	push   ebx
100463ee:	mov    ebx,DWORD PTR [esp+0xc]
100463f2:	cmp    WORD PTR [ebx],0x0
100463f6:	push   edi
100463f7:	mov    edi,eax
100463f9:	je     0x10046441
100463fb:	movzx  ecx,WORD PTR [eax]
100463fe:	test   cx,cx
10046401:	je     0x1004643f
10046403:	movzx  edx,cx
10046406:	sub    eax,ebx
10046408:	test   dx,dx
1004640b:	mov    ecx,DWORD PTR [esp+0x10]
1004640f:	je     0x1004642d
10046411:	movzx  edx,WORD PTR [ecx]
10046414:	test   dx,dx
10046417:	je     0x10046444
10046419:	movzx  ebx,WORD PTR [eax+ecx*1]
1004641d:	movzx  edx,dx
10046420:	sub    ebx,edx
10046422:	jne    0x1004642d
10046424:	inc    ecx
10046425:	inc    ecx
10046426:	cmp    WORD PTR [eax+ecx*1],0x0
1004642b:	jne    0x10046411
1004642d:	cmp    WORD PTR [ecx],0x0
10046431:	je     0x10046444
10046433:	inc    edi
10046434:	inc    edi
10046435:	movzx  edx,WORD PTR [edi]
10046438:	inc    eax
10046439:	inc    eax
1004643a:	test   dx,dx
1004643d:	jne    0x10046408
1004643f:	xor    eax,eax
10046441:	pop    edi
10046442:	pop    ebx
10046443:	ret    
10046444:	mov    eax,edi
10046446:	jmp    0x10046441
10046448:	push   0x10
1004644a:	push   0x10074720
1004644f:	call   0x10046f34
10046454:	mov    ebx,DWORD PTR [ebp+0x8]
10046457:	test   ebx,ebx
10046459:	jne    0x10046469
1004645b:	push   DWORD PTR [ebp+0xc]
1004645e:	call   0x10045222
10046463:	pop    ecx
10046464:	jmp    0x10046635
10046469:	mov    esi,DWORD PTR [ebp+0xc]
1004646c:	test   esi,esi
1004646e:	jne    0x1004647c
10046470:	push   ebx
10046471:	call   0x10043748
10046476:	pop    ecx
10046477:	jmp    0x10046633
1004647c:	cmp    DWORD PTR ds:0x100825a0,0x3
10046483:	jne    0x1004661c
10046489:	xor    edi,edi
1004648b:	mov    DWORD PTR [ebp-0x1c],edi
1004648e:	cmp    esi,0xffffffe0
10046491:	ja     0x10046621
10046497:	push   0x4
10046499:	call   0x10047f3d
1004649e:	pop    ecx
1004649f:	mov    DWORD PTR [ebp-0x4],edi
100464a2:	push   ebx
100464a3:	call   0x10047fb6
100464a8:	pop    ecx
100464a9:	mov    DWORD PTR [ebp-0x20],eax
100464ac:	cmp    eax,edi
100464ae:	je     0x10046552
100464b4:	cmp    esi,DWORD PTR ds:0x10082590
100464ba:	ja     0x10046505
100464bc:	push   esi
100464bd:	push   ebx
100464be:	push   eax
100464bf:	call   0x100484ab
100464c4:	add    esp,0xc
100464c7:	test   eax,eax
100464c9:	je     0x100464d0
100464cb:	mov    DWORD PTR [ebp-0x1c],ebx
100464ce:	jmp    0x10046505
100464d0:	push   esi
100464d1:	call   0x1004878a
100464d6:	pop    ecx
100464d7:	mov    DWORD PTR [ebp-0x1c],eax
100464da:	cmp    eax,edi
100464dc:	je     0x10046505
100464de:	mov    eax,DWORD PTR [ebx-0x4]
100464e1:	dec    eax
100464e2:	cmp    eax,esi
100464e4:	jb     0x100464e8
100464e6:	mov    eax,esi
100464e8:	push   eax
100464e9:	push   ebx
100464ea:	push   DWORD PTR [ebp-0x1c]
100464ed:	call   0x10045420
100464f2:	push   ebx
100464f3:	call   0x10047fb6
100464f8:	mov    DWORD PTR [ebp-0x20],eax
100464fb:	push   ebx
100464fc:	push   eax
100464fd:	call   0x10047fe1
10046502:	add    esp,0x18
10046505:	cmp    DWORD PTR [ebp-0x1c],edi
10046508:	jne    0x10046552
1004650a:	cmp    esi,edi
1004650c:	jne    0x10046514
1004650e:	xor    esi,esi
10046510:	inc    esi
10046511:	mov    DWORD PTR [ebp+0xc],esi
10046514:	add    esi,0xf
10046517:	and    esi,0xfffffff0
1004651a:	mov    DWORD PTR [ebp+0xc],esi
1004651d:	push   esi
1004651e:	push   edi
1004651f:	push   DWORD PTR ds:0x1007fe38
10046525:	call   DWORD PTR ds:0x1006618c
1004652b:	mov    DWORD PTR [ebp-0x1c],eax
1004652e:	cmp    eax,edi
10046530:	je     0x10046552
10046532:	mov    eax,DWORD PTR [ebx-0x4]
10046535:	dec    eax
10046536:	cmp    eax,esi
10046538:	jb     0x1004653c
1004653a:	mov    eax,esi
1004653c:	push   eax
1004653d:	push   ebx
1004653e:	push   DWORD PTR [ebp-0x1c]
10046541:	call   0x10045420
10046546:	push   ebx
10046547:	push   DWORD PTR [ebp-0x20]
1004654a:	call   0x10047fe1
1004654f:	add    esp,0x14
10046552:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10046559:	call   0x1004658c
1004655e:	cmp    DWORD PTR [ebp-0x20],0x0
10046562:	jne    0x10046595
10046564:	test   esi,esi
10046566:	jne    0x10046569
10046568:	inc    esi
10046569:	add    esi,0xf
1004656c:	and    esi,0xfffffff0
1004656f:	mov    DWORD PTR [ebp+0xc],esi
10046572:	push   esi
10046573:	push   ebx
10046574:	push   0x0
10046576:	push   DWORD PTR ds:0x1007fe38
1004657c:	call   DWORD PTR ds:0x100661a0
10046582:	mov    edi,eax
10046584:	jmp    0x10046598
10046586:	mov    esi,DWORD PTR [ebp+0xc]
10046589:	mov    ebx,DWORD PTR [ebp+0x8]
1004658c:	push   0x4
1004658e:	call   0x10047e65
10046593:	pop    ecx
10046594:	ret    
10046595:	mov    edi,DWORD PTR [ebp-0x1c]
10046598:	test   edi,edi
1004659a:	jne    0x1004665f
100465a0:	cmp    DWORD PTR ds:0x1007ff94,edi
100465a6:	je     0x100465d4
100465a8:	push   esi
100465a9:	call   0x10047c32
100465ae:	pop    ecx
100465af:	test   eax,eax
100465b1:	jne    0x10046489
100465b7:	call   0x10046df5
100465bc:	cmp    DWORD PTR [ebp-0x20],edi
100465bf:	jne    0x1004662d
100465c1:	mov    esi,eax
100465c3:	call   DWORD PTR ds:0x100660cc
100465c9:	push   eax
100465ca:	call   0x10046dba
100465cf:	pop    ecx
100465d0:	mov    DWORD PTR [esi],eax
100465d2:	jmp    0x10046633
100465d4:	test   edi,edi
100465d6:	jne    0x1004665f
100465dc:	call   0x10046df5
100465e1:	cmp    DWORD PTR [ebp-0x20],edi
100465e4:	je     0x1004664e
100465e6:	mov    DWORD PTR [eax],0xc
100465ec:	jmp    0x1004665f
100465ee:	test   esi,esi
100465f0:	jne    0x100465f3
100465f2:	inc    esi
100465f3:	push   esi
100465f4:	push   ebx
100465f5:	push   0x0
100465f7:	push   DWORD PTR ds:0x1007fe38
100465fd:	call   DWORD PTR ds:0x100661a0
10046603:	mov    edi,eax
10046605:	test   edi,edi
10046607:	jne    0x1004665f
10046609:	cmp    DWORD PTR ds:0x1007ff94,eax
1004660f:	je     0x10046645
10046611:	push   esi
10046612:	call   0x10047c32
10046617:	pop    ecx
10046618:	test   eax,eax
1004661a:	je     0x1004663b
1004661c:	cmp    esi,0xffffffe0
1004661f:	jbe    0x100465ee
10046621:	push   esi
10046622:	call   0x10047c32
10046627:	pop    ecx
10046628:	call   0x10046df5
1004662d:	mov    DWORD PTR [eax],0xc
10046633:	xor    eax,eax
10046635:	call   0x10046f79
1004663a:	ret    
1004663b:	call   0x10046df5
10046640:	jmp    0x100465c1
10046645:	test   edi,edi
10046647:	jne    0x1004665f
10046649:	call   0x10046df5
1004664e:	mov    esi,eax
10046650:	call   DWORD PTR ds:0x100660cc
10046656:	push   eax
10046657:	call   0x10046dba
1004665c:	mov    DWORD PTR [esi],eax
1004665e:	pop    ecx
1004665f:	mov    eax,edi
10046661:	jmp    0x10046635
10046663:	mov    ecx,DWORD PTR [esp+0x8]
10046667:	push   esi
10046668:	xor    esi,esi
1004666a:	cmp    ecx,esi
1004666c:	jbe    0x10046697
1004666e:	push   0xffffffe0
10046670:	xor    edx,edx
10046672:	pop    eax
10046673:	div    ecx
10046675:	cmp    eax,DWORD PTR [esp+0x10]
10046679:	jae    0x10046697
1004667b:	call   0x10046df5
10046680:	push   esi
10046681:	push   esi
10046682:	push   esi
10046683:	push   esi
10046684:	push   esi
10046685:	mov    DWORD PTR [eax],0xc
1004668b:	call   0x100435cc
10046690:	add    esp,0x14
10046693:	xor    eax,eax
10046695:	pop    esi
10046696:	ret    
10046697:	imul   ecx,DWORD PTR [esp+0x10]
1004669c:	push   ecx
1004669d:	push   DWORD PTR [esp+0xc]
100466a1:	call   0x10046448
100466a6:	pop    ecx
100466a7:	pop    ecx
100466a8:	pop    esi
100466a9:	ret    
100466aa:	call   0x1004739c
100466af:	mov    ecx,DWORD PTR [esp+0x4]
100466b3:	mov    DWORD PTR [eax+0x14],ecx
100466b6:	ret    
100466b7:	call   0x1004739c
100466bc:	mov    ecx,DWORD PTR [eax+0x14]
100466bf:	imul   ecx,ecx,0x343fd
100466c5:	add    ecx,0x269ec3
100466cb:	mov    DWORD PTR [eax+0x14],ecx
100466ce:	mov    eax,ecx
100466d0:	shr    eax,0x10
100466d3:	and    eax,0x7fff
100466d8:	ret    
100466d9:	int3   
100466da:	int3   
100466db:	int3   
100466dc:	int3   
100466dd:	int3   
100466de:	int3   
100466df:	int3   
100466e0:	push   edi
100466e1:	mov    edi,DWORD PTR [esp+0x8]
100466e5:	jmp    0x10046755
100466e7:	lea    esp,[esp+0x0]
100466ee:	mov    edi,edi
100466f0:	mov    ecx,DWORD PTR [esp+0x4]
100466f4:	push   edi
100466f5:	test   ecx,0x3
100466fb:	je     0x10046710
100466fd:	mov    al,BYTE PTR [ecx]
100466ff:	add    ecx,0x1
10046702:	test   al,al
10046704:	je     0x10046743
10046706:	test   ecx,0x3
1004670c:	jne    0x100466fd
1004670e:	mov    edi,edi
10046710:	mov    eax,DWORD PTR [ecx]
10046712:	mov    edx,0x7efefeff
10046717:	add    edx,eax
10046719:	xor    eax,0xffffffff
1004671c:	xor    eax,edx
1004671e:	add    ecx,0x4
10046721:	test   eax,0x81010100
10046726:	je     0x10046710
10046728:	mov    eax,DWORD PTR [ecx-0x4]
1004672b:	test   al,al
1004672d:	je     0x10046752
1004672f:	test   ah,ah
10046731:	je     0x1004674d
10046733:	test   eax,0xff0000
10046738:	je     0x10046748
1004673a:	test   eax,0xff000000
1004673f:	je     0x10046743
10046741:	jmp    0x10046710
10046743:	lea    edi,[ecx-0x1]
10046746:	jmp    0x10046755
10046748:	lea    edi,[ecx-0x2]
1004674b:	jmp    0x10046755
1004674d:	lea    edi,[ecx-0x3]
10046750:	jmp    0x10046755
10046752:	lea    edi,[ecx-0x4]
10046755:	mov    ecx,DWORD PTR [esp+0xc]
10046759:	test   ecx,0x3
1004675f:	je     0x1004677e
10046761:	mov    dl,BYTE PTR [ecx]
10046763:	add    ecx,0x1
10046766:	test   dl,dl
10046768:	je     0x100467d0
1004676a:	mov    BYTE PTR [edi],dl
1004676c:	add    edi,0x1
1004676f:	test   ecx,0x3
10046775:	jne    0x10046761
10046777:	jmp    0x1004677e
10046779:	mov    DWORD PTR [edi],edx
1004677b:	add    edi,0x4
1004677e:	mov    edx,0x7efefeff
10046783:	mov    eax,DWORD PTR [ecx]
10046785:	add    edx,eax
10046787:	xor    eax,0xffffffff
1004678a:	xor    eax,edx
1004678c:	mov    edx,DWORD PTR [ecx]
1004678e:	add    ecx,0x4
10046791:	test   eax,0x81010100
10046796:	je     0x10046779
10046798:	test   dl,dl
1004679a:	je     0x100467d0
1004679c:	test   dh,dh
1004679e:	je     0x100467c7
100467a0:	test   edx,0xff0000
100467a6:	je     0x100467ba
100467a8:	test   edx,0xff000000
100467ae:	je     0x100467b2
100467b0:	jmp    0x10046779
100467b2:	mov    DWORD PTR [edi],edx
100467b4:	mov    eax,DWORD PTR [esp+0x8]
100467b8:	pop    edi
100467b9:	ret    
100467ba:	mov    WORD PTR [edi],dx
100467bd:	mov    eax,DWORD PTR [esp+0x8]
100467c1:	mov    BYTE PTR [edi+0x2],0x0
100467c5:	pop    edi
100467c6:	ret    
100467c7:	mov    WORD PTR [edi],dx
100467ca:	mov    eax,DWORD PTR [esp+0x8]
100467ce:	pop    edi
100467cf:	ret    
100467d0:	mov    BYTE PTR [edi],dl
100467d2:	mov    eax,DWORD PTR [esp+0x8]
100467d6:	pop    edi
100467d7:	ret    
100467d8:	lea    eax,[esp+0x10]
100467dc:	push   eax
100467dd:	push   0x0
100467df:	push   DWORD PTR [esp+0x14]
100467e3:	push   DWORD PTR [esp+0x14]
100467e7:	push   DWORD PTR [esp+0x14]
100467eb:	call   0x10045131
100467f0:	add    esp,0x14
100467f3:	ret    
100467f4:	push   ebp
100467f5:	mov    ebp,esp
100467f7:	sub    esp,0x10
100467fa:	push   ebx
100467fb:	push   esi
100467fc:	push   DWORD PTR [ebp+0x10]
100467ff:	lea    ecx,[ebp-0x10]
10046802:	call   0x10045785
10046807:	mov    ebx,DWORD PTR [ebp+0x8]
1004680a:	xor    esi,esi
1004680c:	cmp    ebx,esi
1004680e:	jne    0x1004683f
10046810:	call   0x10046df5
10046815:	push   esi
10046816:	push   esi
10046817:	push   esi
10046818:	push   esi
10046819:	push   esi
1004681a:	mov    DWORD PTR [eax],0x16
10046820:	call   0x100435cc
10046825:	add    esp,0x14
10046828:	cmp    BYTE PTR [ebp-0x4],0x0
1004682c:	je     0x10046835
1004682e:	mov    eax,DWORD PTR [ebp-0x8]
10046831:	and    DWORD PTR [eax+0x70],0xfffffffd
10046835:	mov    eax,0x7fffffff
1004683a:	jmp    0x100468ff
1004683f:	push   edi
10046840:	mov    edi,DWORD PTR [ebp+0xc]
10046843:	cmp    edi,esi
10046845:	jne    0x10046876
10046847:	call   0x10046df5
1004684c:	push   esi
1004684d:	push   esi
1004684e:	push   esi
1004684f:	push   esi
10046850:	push   esi
10046851:	mov    DWORD PTR [eax],0x16
10046857:	call   0x100435cc
1004685c:	add    esp,0x14
1004685f:	cmp    BYTE PTR [ebp-0x4],0x0
10046863:	je     0x1004686c
10046865:	mov    eax,DWORD PTR [ebp-0x8]
10046868:	and    DWORD PTR [eax+0x70],0xfffffffd
1004686c:	mov    eax,0x7fffffff
10046871:	jmp    0x100468fe
10046876:	mov    eax,DWORD PTR [ebp-0x10]
10046879:	cmp    DWORD PTR [eax+0x14],esi
1004687c:	jne    0x100468b8
1004687e:	movzx  eax,WORD PTR [ebx]
10046881:	cmp    ax,0x41
10046885:	jb     0x10046890
10046887:	cmp    ax,0x5a
1004688b:	ja     0x10046890
1004688d:	add    eax,0x20
10046890:	movzx  esi,ax
10046893:	movzx  eax,WORD PTR [edi]
10046896:	cmp    ax,0x41
1004689a:	jb     0x100468a5
1004689c:	cmp    ax,0x5a
100468a0:	ja     0x100468a5
100468a2:	add    eax,0x20
100468a5:	inc    ebx
100468a6:	inc    ebx
100468a7:	inc    edi
100468a8:	inc    edi
100468a9:	test   si,si
100468ac:	movzx  eax,ax
100468af:	je     0x100468e9
100468b1:	cmp    si,ax
100468b4:	je     0x1004687e
100468b6:	jmp    0x100468e9
100468b8:	movzx  eax,WORD PTR [ebx]
100468bb:	lea    ecx,[ebp-0x10]
100468be:	push   ecx
100468bf:	push   eax
100468c0:	call   0x1004b9bc
100468c5:	movzx  esi,ax
100468c8:	movzx  eax,WORD PTR [edi]
100468cb:	lea    ecx,[ebp-0x10]
100468ce:	push   ecx
100468cf:	inc    ebx
100468d0:	push   eax
100468d1:	inc    ebx
100468d2:	call   0x1004b9bc
100468d7:	add    esp,0x10
100468da:	inc    edi
100468db:	inc    edi
100468dc:	test   si,si
100468df:	movzx  eax,ax
100468e2:	je     0x100468e9
100468e4:	cmp    si,ax
100468e7:	je     0x100468b8
100468e9:	movzx  ecx,ax
100468ec:	movzx  eax,si
100468ef:	sub    eax,ecx
100468f1:	cmp    BYTE PTR [ebp-0x4],0x0
100468f5:	je     0x100468fe
100468f7:	mov    ecx,DWORD PTR [ebp-0x8]
100468fa:	and    DWORD PTR [ecx+0x70],0xfffffffd
100468fe:	pop    edi
100468ff:	pop    esi
10046900:	pop    ebx
10046901:	leave  
10046902:	ret    
10046903:	push   esi
10046904:	xor    esi,esi
10046906:	cmp    DWORD PTR ds:0x100802c8,esi
1004690c:	push   edi
1004690d:	jne    0x10046980
1004690f:	mov    edi,DWORD PTR [esp+0xc]
10046913:	cmp    edi,esi
10046915:	jne    0x10046936
10046917:	call   0x10046df5
1004691c:	push   esi
1004691d:	push   esi
1004691e:	push   esi
1004691f:	push   esi
10046920:	push   esi
10046921:	mov    DWORD PTR [eax],0x16
10046927:	call   0x100435cc
1004692c:	add    esp,0x14
1004692f:	mov    eax,0x7fffffff
10046934:	jmp    0x10046991
10046936:	mov    edx,DWORD PTR [esp+0x10]
1004693a:	cmp    edx,esi
1004693c:	je     0x10046917
1004693e:	movzx  eax,WORD PTR [edi]
10046941:	cmp    ax,0x41
10046945:	jb     0x10046950
10046947:	cmp    ax,0x5a
1004694b:	ja     0x10046950
1004694d:	add    eax,0x20
10046950:	movzx  ecx,ax
10046953:	movzx  eax,WORD PTR [edx]
10046956:	cmp    ax,0x41
1004695a:	jb     0x10046965
1004695c:	cmp    ax,0x5a
10046960:	ja     0x10046965
10046962:	add    eax,0x20
10046965:	inc    edi
10046966:	inc    edi
10046967:	inc    edx
10046968:	inc    edx
10046969:	cmp    cx,si
1004696c:	movzx  eax,ax
1004696f:	je     0x10046976
10046971:	cmp    cx,ax
10046974:	je     0x1004693e
10046976:	movzx  edx,ax
10046979:	movzx  eax,cx
1004697c:	sub    eax,edx
1004697e:	jmp    0x10046991
10046980:	push   esi
10046981:	push   DWORD PTR [esp+0x14]
10046985:	push   DWORD PTR [esp+0x14]
10046989:	call   0x100467f4
1004698e:	add    esp,0xc
10046991:	pop    edi
10046992:	pop    esi
10046993:	ret    
10046994:	mov    edx,DWORD PTR [esp+0x4]
10046998:	push   esi
10046999:	mov    esi,DWORD PTR [esp+0xc]
1004699d:	push   edi
1004699e:	jmp    0x100469a9
100469a0:	test   cx,cx
100469a3:	je     0x100469b6
100469a5:	inc    edx
100469a6:	inc    edx
100469a7:	inc    esi
100469a8:	inc    esi
100469a9:	movzx  ecx,WORD PTR [esi]
100469ac:	movzx  eax,WORD PTR [edx]
100469af:	movzx  edi,cx
100469b2:	sub    eax,edi
100469b4:	je     0x100469a0
100469b6:	test   eax,eax
100469b8:	pop    edi
100469b9:	pop    esi
100469ba:	jge    0x100469c0
100469bc:	or     eax,0xffffffff
100469bf:	ret    
100469c0:	jle    0x100469c5
100469c2:	xor    eax,eax
100469c4:	inc    eax
100469c5:	ret    
100469c6:	push   ebp
100469c7:	mov    ebp,esp
100469c9:	push   ecx
100469ca:	mov    eax,DWORD PTR [ebp+0xc]
100469cd:	cmp    eax,0x1
100469d0:	push   ebx
100469d1:	push   esi
100469d2:	push   edi
100469d3:	jne    0x10046af0
100469d9:	mov    ebx,DWORD PTR ds:0x100661ac
100469df:	mov    edi,0x94
100469e4:	push   edi
100469e5:	push   0x0
100469e7:	call   ebx
100469e9:	push   eax
100469ea:	call   DWORD PTR ds:0x1006618c
100469f0:	mov    esi,eax
100469f2:	test   esi,esi
100469f4:	jne    0x100469fd
100469f6:	xor    eax,eax
100469f8:	jmp    0x10046b98
100469fd:	push   esi
100469fe:	mov    DWORD PTR [esi],edi
10046a00:	call   DWORD PTR ds:0x100661a8
10046a06:	test   eax,eax
10046a08:	push   esi
10046a09:	push   0x0
10046a0b:	jne    0x10046a18
10046a0d:	call   ebx
10046a0f:	push   eax
10046a10:	call   DWORD PTR ds:0x10066188
10046a16:	jmp    0x100469f6
10046a18:	mov    eax,DWORD PTR [esi+0x10]
10046a1b:	mov    edi,DWORD PTR [esi+0xc]
10046a1e:	mov    DWORD PTR [ebp+0xc],eax
10046a21:	mov    eax,DWORD PTR [esi+0x4]
10046a24:	mov    DWORD PTR [ebp+0x10],eax
10046a27:	mov    eax,DWORD PTR [esi+0x8]
10046a2a:	mov    DWORD PTR [ebp-0x4],eax
10046a2d:	and    edi,0x7fff
10046a33:	call   ebx
10046a35:	push   eax
10046a36:	call   DWORD PTR ds:0x10066188
10046a3c:	mov    eax,DWORD PTR [ebp+0xc]
10046a3f:	cmp    eax,0x2
10046a42:	je     0x10046a4a
10046a44:	or     edi,0x8000
10046a4a:	mov    ecx,DWORD PTR [ebp-0x4]
10046a4d:	mov    ds:0x1007fde8,eax
10046a52:	mov    eax,DWORD PTR [ebp+0x10]
10046a55:	mov    edx,eax
10046a57:	shl    edx,0x8
10046a5a:	add    edx,ecx
10046a5c:	push   0x1
10046a5e:	mov    DWORD PTR ds:0x1007fdf0,edx
10046a64:	mov    ds:0x1007fdf4,eax
10046a69:	mov    DWORD PTR ds:0x1007fdf8,ecx
10046a6f:	mov    DWORD PTR ds:0x1007fdec,edi
10046a75:	call   0x10047cf9
10046a7a:	test   eax,eax
10046a7c:	pop    ecx
10046a7d:	je     0x100469f6
10046a83:	call   0x1004753e
10046a88:	test   eax,eax
10046a8a:	jne    0x10046a96
10046a8c:	call   0x10047d53
10046a91:	jmp    0x100469f6
10046a96:	call   0x1004c156
10046a9b:	call   DWORD PTR ds:0x100661a4
10046aa1:	mov    ds:0x100825bc,eax
10046aa6:	call   0x1004c021
10046aab:	mov    ds:0x1007fa98,eax
10046ab0:	call   0x1004ba69
10046ab5:	test   eax,eax
10046ab7:	jge    0x10046ac0
10046ab9:	call   0x10047228
10046abe:	jmp    0x10046a8c
10046ac0:	call   0x1004bf68
10046ac5:	test   eax,eax
10046ac7:	jl     0x10046ae9
10046ac9:	call   0x1004bcf5
10046ace:	test   eax,eax
10046ad0:	jl     0x10046ae9
10046ad2:	push   0x0
10046ad4:	call   0x10047954
10046ad9:	test   eax,eax
10046adb:	pop    ecx
10046adc:	jne    0x10046ae9
10046ade:	inc    DWORD PTR ds:0x1007fa94
10046ae4:	jmp    0x10046b95
10046ae9:	call   0x1004bca9
10046aee:	jmp    0x10046ab9
10046af0:	xor    edi,edi
10046af2:	cmp    eax,edi
10046af4:	jne    0x10046b2b
10046af6:	cmp    DWORD PTR ds:0x1007fa94,edi
10046afc:	jle    0x100469f6
10046b02:	dec    DWORD PTR ds:0x1007fa94
10046b08:	cmp    DWORD PTR ds:0x1007fe24,edi
10046b0e:	jne    0x10046b15
10046b10:	call   0x10047ac5
10046b15:	cmp    DWORD PTR [ebp+0x10],edi
10046b18:	jne    0x10046b95
10046b1a:	call   0x1004bca9
10046b1f:	call   0x10047228
10046b24:	call   0x10047d53
10046b29:	jmp    0x10046b95
10046b2b:	cmp    eax,0x2
10046b2e:	jne    0x10046b89
10046b30:	call   0x100471fe
10046b35:	push   0x214
10046b3a:	push   0x1
10046b3c:	call   0x10047702
10046b41:	mov    esi,eax
10046b43:	cmp    esi,edi
10046b45:	pop    ecx
10046b46:	pop    ecx
10046b47:	je     0x100469f6
10046b4d:	push   esi
10046b4e:	push   DWORD PTR ds:0x1007e1a8
10046b54:	push   DWORD PTR ds:0x1007fdd8
10046b5a:	call   0x10047192
10046b5f:	pop    ecx
10046b60:	call   eax
10046b62:	test   eax,eax
10046b64:	je     0x10046b7d
10046b66:	push   edi
10046b67:	push   esi
10046b68:	call   0x10047265
10046b6d:	pop    ecx
10046b6e:	pop    ecx
10046b6f:	call   DWORD PTR ds:0x10066160
10046b75:	or     DWORD PTR [esi+0x4],0xffffffff
10046b79:	mov    DWORD PTR [esi],eax
10046b7b:	jmp    0x10046b95
10046b7d:	push   esi
10046b7e:	call   0x10043748
10046b83:	pop    ecx
10046b84:	jmp    0x100469f6
10046b89:	cmp    eax,0x3
10046b8c:	jne    0x10046b95
10046b8e:	push   edi
10046b8f:	call   0x100474d5
10046b94:	pop    ecx
10046b95:	xor    eax,eax
10046b97:	inc    eax
10046b98:	pop    edi
10046b99:	pop    esi
10046b9a:	pop    ebx
10046b9b:	leave  
10046b9c:	ret    0xc
10046b9f:	push   0xc
10046ba1:	push   0x10074740
10046ba6:	call   0x10046f34
10046bab:	mov    edi,ecx
10046bad:	mov    esi,edx
10046baf:	mov    ebx,DWORD PTR [ebp+0x8]
10046bb2:	xor    eax,eax
10046bb4:	inc    eax
10046bb5:	mov    DWORD PTR [ebp-0x1c],eax
10046bb8:	test   esi,esi
10046bba:	jne    0x10046bc8
10046bbc:	cmp    DWORD PTR ds:0x1007fa94,edx
10046bc2:	je     0x10046c8d
10046bc8:	and    DWORD PTR [ebp-0x4],0x0
10046bcc:	cmp    esi,eax
10046bce:	je     0x10046bd5
10046bd0:	cmp    esi,0x2
10046bd3:	jne    0x10046c03
10046bd5:	mov    eax,ds:0x100665e8
10046bda:	test   eax,eax
10046bdc:	je     0x10046be6
10046bde:	push   edi
10046bdf:	push   esi
10046be0:	push   ebx
10046be1:	call   eax
10046be3:	mov    DWORD PTR [ebp-0x1c],eax
10046be6:	cmp    DWORD PTR [ebp-0x1c],0x0
10046bea:	je     0x10046c86
10046bf0:	push   edi
10046bf1:	push   esi
10046bf2:	push   ebx
10046bf3:	call   0x100469c6
10046bf8:	mov    DWORD PTR [ebp-0x1c],eax
10046bfb:	test   eax,eax
10046bfd:	je     0x10046c86
10046c03:	push   edi
10046c04:	push   esi
10046c05:	push   ebx
10046c06:	call   0x10016608
10046c0b:	mov    DWORD PTR [ebp-0x1c],eax
10046c0e:	cmp    esi,0x1
10046c11:	jne    0x10046c37
10046c13:	test   eax,eax
10046c15:	jne    0x10046c37
10046c17:	push   edi
10046c18:	push   eax
10046c19:	push   ebx
10046c1a:	call   0x10016608
10046c1f:	push   edi
10046c20:	push   0x0
10046c22:	push   ebx
10046c23:	call   0x100469c6
10046c28:	mov    eax,ds:0x100665e8
10046c2d:	test   eax,eax
10046c2f:	je     0x10046c37
10046c31:	push   edi
10046c32:	push   0x0
10046c34:	push   ebx
10046c35:	call   eax
10046c37:	test   esi,esi
10046c39:	je     0x10046c40
10046c3b:	cmp    esi,0x3
10046c3e:	jne    0x10046c66
10046c40:	push   edi
10046c41:	push   esi
10046c42:	push   ebx
10046c43:	call   0x100469c6
10046c48:	test   eax,eax
10046c4a:	jne    0x10046c4f
10046c4c:	and    DWORD PTR [ebp-0x1c],eax
10046c4f:	cmp    DWORD PTR [ebp-0x1c],0x0
10046c53:	je     0x10046c66
10046c55:	mov    eax,ds:0x100665e8
10046c5a:	test   eax,eax
10046c5c:	je     0x10046c66
10046c5e:	push   edi
10046c5f:	push   esi
10046c60:	push   ebx
10046c61:	call   eax
10046c63:	mov    DWORD PTR [ebp-0x1c],eax
10046c66:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10046c6d:	mov    eax,DWORD PTR [ebp-0x1c]
10046c70:	jmp    0x10046c8f
10046c72:	mov    eax,DWORD PTR [ebp-0x14]
10046c75:	mov    ecx,DWORD PTR [eax]
10046c77:	mov    ecx,DWORD PTR [ecx]
10046c79:	push   eax
10046c7a:	push   ecx
10046c7b:	call   0x1004c30d
10046c80:	pop    ecx
10046c81:	pop    ecx
10046c82:	ret    
10046c83:	mov    esp,DWORD PTR [ebp-0x18]
10046c86:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10046c8d:	xor    eax,eax
10046c8f:	call   0x10046f79
10046c94:	ret    
10046c95:	cmp    DWORD PTR [esp+0x8],0x1
10046c9a:	jne    0x10046ca1
10046c9c:	call   0x1004c328
10046ca1:	push   DWORD PTR [esp+0x4]
10046ca5:	mov    ecx,DWORD PTR [esp+0x10]
10046ca9:	mov    edx,DWORD PTR [esp+0xc]
10046cad:	call   0x10046b9f
10046cb2:	pop    ecx
10046cb3:	ret    0xc
10046cb6:	push   ebp
10046cb7:	mov    ebp,esp
10046cb9:	sub    esp,0x328
10046cbf:	mov    ds:0x1007fbb0,eax
10046cc4:	mov    DWORD PTR ds:0x1007fbac,ecx
10046cca:	mov    DWORD PTR ds:0x1007fba8,edx
10046cd0:	mov    DWORD PTR ds:0x1007fba4,ebx
10046cd6:	mov    DWORD PTR ds:0x1007fba0,esi
10046cdc:	mov    DWORD PTR ds:0x1007fb9c,edi
10046ce2:	data16 mov WORD PTR ds:0x1007fbc8,ss
10046ce9:	data16 mov WORD PTR ds:0x1007fbbc,cs
10046cf0:	data16 mov WORD PTR ds:0x1007fb98,ds
10046cf7:	data16 mov WORD PTR ds:0x1007fb94,es
10046cfe:	data16 mov WORD PTR ds:0x1007fb90,fs
10046d05:	data16 mov WORD PTR ds:0x1007fb8c,gs
10046d0c:	pushf  
10046d0d:	pop    DWORD PTR ds:0x1007fbc0
10046d13:	mov    eax,DWORD PTR [ebp+0x0]
10046d16:	mov    ds:0x1007fbb4,eax
10046d1b:	mov    eax,DWORD PTR [ebp+0x4]
10046d1e:	mov    ds:0x1007fbb8,eax
10046d23:	lea    eax,[ebp+0x8]
10046d26:	mov    ds:0x1007fbc4,eax
10046d2b:	mov    eax,DWORD PTR [ebp-0x320]
10046d31:	mov    DWORD PTR ds:0x1007fb00,0x10001
10046d3b:	mov    eax,ds:0x1007fbb8
10046d40:	mov    ds:0x1007fab4,eax
10046d45:	mov    DWORD PTR ds:0x1007faa8,0xc0000409
10046d4f:	mov    DWORD PTR ds:0x1007faac,0x1
10046d59:	mov    eax,ds:0x1007e030
10046d5e:	mov    DWORD PTR [ebp-0x328],eax
10046d64:	mov    eax,ds:0x1007e034
10046d69:	mov    DWORD PTR [ebp-0x324],eax
10046d6f:	call   DWORD PTR ds:0x10066184
10046d75:	mov    ds:0x1007faf8,eax
10046d7a:	push   0x1
10046d7c:	call   0x10047b20
10046d81:	pop    ecx
10046d82:	push   0x0
10046d84:	call   DWORD PTR ds:0x10066180
10046d8a:	push   0x100665ec
10046d8f:	call   DWORD PTR ds:0x1006617c
10046d95:	cmp    DWORD PTR ds:0x1007faf8,0x0
10046d9c:	jne    0x10046da6
10046d9e:	push   0x1
10046da0:	call   0x10047b20
10046da5:	pop    ecx
10046da6:	push   0xc0000409
10046dab:	call   DWORD PTR ds:0x10066108
10046db1:	push   eax
10046db2:	call   DWORD PTR ds:0x10066178
10046db8:	leave  
10046db9:	ret    
10046dba:	mov    eax,DWORD PTR [esp+0x4]
10046dbe:	xor    ecx,ecx
10046dc0:	cmp    eax,DWORD PTR [ecx*8+0x1007e038]
10046dc7:	je     0x10046ddb
10046dc9:	inc    ecx
10046dca:	cmp    ecx,0x2d
10046dcd:	jl     0x10046dc0
10046dcf:	lea    ecx,[eax-0x13]
10046dd2:	cmp    ecx,0x11
10046dd5:	ja     0x10046de3
10046dd7:	push   0xd
10046dd9:	pop    eax
10046dda:	ret    
10046ddb:	mov    eax,DWORD PTR [ecx*8+0x1007e03c]
10046de2:	ret    
10046de3:	add    eax,0xffffff44
10046de8:	push   0xe
10046dea:	pop    ecx
10046deb:	cmp    ecx,eax
10046ded:	sbb    eax,eax
10046def:	and    eax,ecx
10046df1:	add    eax,0x8
10046df4:	ret    
10046df5:	call   0x10047319
10046dfa:	test   eax,eax
10046dfc:	jne    0x10046e04
10046dfe:	mov    eax,0x1007e1a0
10046e03:	ret    
10046e04:	add    eax,0x8
10046e07:	ret    
10046e08:	call   0x10047319
10046e0d:	test   eax,eax
10046e0f:	jne    0x10046e17
10046e11:	mov    eax,0x1007e1a4
10046e16:	ret    
10046e17:	add    eax,0xc
10046e1a:	ret    
10046e1b:	push   esi
10046e1c:	call   0x10046e08
10046e21:	mov    ecx,DWORD PTR [esp+0x8]
10046e25:	push   ecx
10046e26:	mov    DWORD PTR [eax],ecx
10046e28:	call   0x10046dba
10046e2d:	pop    ecx
10046e2e:	mov    esi,eax
10046e30:	call   0x10046df5
10046e35:	mov    DWORD PTR [eax],esi
10046e37:	pop    esi
10046e38:	ret    
10046e39:	mov    ecx,DWORD PTR [esp+0x4]
10046e3d:	push   ebx
10046e3e:	xor    ebx,ebx
10046e40:	cmp    ecx,ebx
10046e42:	push   esi
10046e43:	push   edi
10046e44:	je     0x10046e4e
10046e46:	mov    edi,DWORD PTR [esp+0x14]
10046e4a:	cmp    edi,ebx
10046e4c:	ja     0x10046e69
10046e4e:	call   0x10046df5
10046e53:	push   0x16
10046e55:	pop    esi
10046e56:	mov    DWORD PTR [eax],esi
10046e58:	push   ebx
10046e59:	push   ebx
10046e5a:	push   ebx
10046e5b:	push   ebx
10046e5c:	push   ebx
10046e5d:	call   0x100435cc
10046e62:	add    esp,0x14
10046e65:	mov    eax,esi
10046e67:	jmp    0x10046e9a
10046e69:	mov    esi,DWORD PTR [esp+0x18]
10046e6d:	cmp    esi,ebx
10046e6f:	jne    0x10046e75
10046e71:	mov    BYTE PTR [ecx],bl
10046e73:	jmp    0x10046e4e
10046e75:	mov    edx,ecx
10046e77:	mov    al,BYTE PTR [esi]
10046e79:	mov    BYTE PTR [edx],al
10046e7b:	inc    edx
10046e7c:	inc    esi
10046e7d:	cmp    al,bl
10046e7f:	je     0x10046e84
10046e81:	dec    edi
10046e82:	jne    0x10046e77
10046e84:	cmp    edi,ebx
10046e86:	jne    0x10046e98
10046e88:	mov    BYTE PTR [ecx],bl
10046e8a:	call   0x10046df5
10046e8f:	push   0x22
10046e91:	pop    ecx
10046e92:	mov    DWORD PTR [eax],ecx
10046e94:	mov    esi,ecx
10046e96:	jmp    0x10046e58
10046e98:	xor    eax,eax
10046e9a:	pop    edi
10046e9b:	pop    esi
10046e9c:	pop    ebx
10046e9d:	ret    
10046e9e:	push   0x8
10046ea0:	push   0x10074760
10046ea5:	call   0x10046f34
10046eaa:	call   0x1004739c
10046eaf:	mov    eax,DWORD PTR [eax+0x78]
10046eb2:	test   eax,eax
10046eb4:	je     0x10046ecc
10046eb6:	and    DWORD PTR [ebp-0x4],0x0
10046eba:	call   eax
10046ebc:	jmp    0x10046ec5
10046ebe:	xor    eax,eax
10046ec0:	inc    eax
10046ec1:	ret    
10046ec2:	mov    esp,DWORD PTR [ebp-0x18]
10046ec5:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10046ecc:	call   0x1004ae0b
10046ed1:	call   0x10046f79
10046ed6:	ret    
10046ed7:	call   0x1004739c
10046edc:	mov    eax,DWORD PTR [eax+0x7c]
10046edf:	test   eax,eax
10046ee1:	je     0x10046ee5
10046ee3:	call   eax
10046ee5:	jmp    0x10046e9e
10046eea:	push   0x8
10046eec:	push   0x10074780
10046ef1:	call   0x10046f34
10046ef6:	push   DWORD PTR ds:0x1007fdcc
10046efc:	call   0x10047192
10046f01:	pop    ecx
10046f02:	test   eax,eax
10046f04:	je     0x10046f1c
10046f06:	and    DWORD PTR [ebp-0x4],0x0
10046f0a:	call   eax
10046f0c:	jmp    0x10046f15
10046f0e:	xor    eax,eax
10046f10:	inc    eax
10046f11:	ret    
10046f12:	mov    esp,DWORD PTR [ebp-0x18]
10046f15:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10046f1c:	jmp    0x10046e9e
10046f21:	push   0x10046e9e
10046f26:	call   0x10047126
10046f2b:	pop    ecx
10046f2c:	mov    ds:0x1007fdcc,eax
10046f31:	ret    
10046f32:	int3   
10046f33:	int3   
10046f34:	push   0x10046f90
10046f39:	push   DWORD PTR fs:0x0
10046f40:	mov    eax,DWORD PTR [esp+0x10]
10046f44:	mov    DWORD PTR [esp+0x10],ebp
10046f48:	lea    ebp,[esp+0x10]
10046f4c:	sub    esp,eax
10046f4e:	push   ebx
10046f4f:	push   esi
10046f50:	push   edi
10046f51:	mov    eax,ds:0x1007e030
10046f56:	xor    DWORD PTR [ebp-0x4],eax
10046f59:	xor    eax,ebp
10046f5b:	push   eax
10046f5c:	mov    DWORD PTR [ebp-0x18],esp
10046f5f:	push   DWORD PTR [ebp-0x8]
10046f62:	mov    eax,DWORD PTR [ebp-0x4]
10046f65:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10046f6c:	mov    DWORD PTR [ebp-0x8],eax
10046f6f:	lea    eax,[ebp-0x10]
10046f72:	mov    fs:0x0,eax
10046f78:	ret    
10046f79:	mov    ecx,DWORD PTR [ebp-0x10]
10046f7c:	mov    DWORD PTR fs:0x0,ecx
10046f83:	pop    ecx
10046f84:	pop    edi
10046f85:	pop    edi
10046f86:	pop    esi
10046f87:	pop    ebx
10046f88:	mov    esp,ebp
10046f8a:	pop    ebp
10046f8b:	push   ecx
10046f8c:	ret    
10046f8d:	int3   
10046f8e:	int3   
10046f8f:	int3   
10046f90:	sub    esp,0x14
10046f93:	push   ebx
10046f94:	mov    ebx,DWORD PTR [esp+0x20]
10046f98:	push   ebp
10046f99:	push   esi
10046f9a:	mov    esi,DWORD PTR [ebx+0x8]
10046f9d:	xor    esi,DWORD PTR ds:0x1007e030
10046fa3:	push   edi
10046fa4:	mov    eax,DWORD PTR [esi]
10046fa6:	cmp    eax,0xfffffffe
10046fa9:	mov    BYTE PTR [esp+0x13],0x0
10046fae:	mov    DWORD PTR [esp+0x18],0x1
10046fb6:	lea    edi,[ebx+0x10]
10046fb9:	je     0x10046fc8
10046fbb:	mov    ecx,DWORD PTR [esi+0x4]
10046fbe:	add    ecx,edi
10046fc0:	xor    ecx,DWORD PTR [eax+edi*1]
10046fc3:	call   0x100430d7
10046fc8:	mov    ecx,DWORD PTR [esi+0xc]
10046fcb:	mov    eax,DWORD PTR [esi+0x8]
10046fce:	add    ecx,edi
10046fd0:	xor    ecx,DWORD PTR [eax+edi*1]
10046fd3:	call   0x100430d7
10046fd8:	mov    eax,DWORD PTR [esp+0x28]
10046fdc:	test   BYTE PTR [eax+0x4],0x66
10046fe0:	jne    0x10047105
10046fe6:	mov    ebp,DWORD PTR [ebx+0xc]
10046fe9:	cmp    ebp,0xfffffffe
10046fec:	mov    ecx,DWORD PTR [esp+0x30]
10046ff0:	lea    edx,[esp+0x1c]
10046ff4:	mov    DWORD PTR [esp+0x1c],eax
10046ff8:	mov    DWORD PTR [esp+0x20],ecx
10046ffc:	mov    DWORD PTR [ebx-0x4],edx
10046fff:	je     0x1004705f
10047001:	lea    eax,[ebp+ebp*2+0x0]
10047005:	mov    ecx,DWORD PTR [esi+eax*4+0x14]
10047009:	test   ecx,ecx
1004700b:	lea    ebx,[esi+eax*4+0x10]
1004700f:	mov    eax,DWORD PTR [ebx]
10047011:	mov    DWORD PTR [esp+0x14],eax
10047015:	je     0x1004702d
10047017:	mov    edx,edi
10047019:	call   0x1004c4ae
1004701e:	test   eax,eax
10047020:	mov    BYTE PTR [esp+0x13],0x1
10047025:	jl     0x1004706b
10047027:	jg     0x10047075
10047029:	mov    eax,DWORD PTR [esp+0x14]
1004702d:	cmp    eax,0xfffffffe
10047030:	mov    ebp,eax
10047032:	jne    0x10047001
10047034:	cmp    BYTE PTR [esp+0x13],0x0
10047039:	je     0x1004705f
1004703b:	mov    eax,DWORD PTR [esi]
1004703d:	cmp    eax,0xfffffffe
10047040:	je     0x1004704f
10047042:	mov    ecx,DWORD PTR [esi+0x4]
10047045:	add    ecx,edi
10047047:	xor    ecx,DWORD PTR [eax+edi*1]
1004704a:	call   0x100430d7
1004704f:	mov    ecx,DWORD PTR [esi+0xc]
10047052:	mov    eax,DWORD PTR [esi+0x8]
10047055:	add    ecx,edi
10047057:	xor    ecx,DWORD PTR [eax+edi*1]
1004705a:	call   0x100430d7
1004705f:	mov    eax,DWORD PTR [esp+0x18]
10047063:	pop    edi
10047064:	pop    esi
10047065:	pop    ebp
10047066:	pop    ebx
10047067:	add    esp,0x14
1004706a:	ret    
1004706b:	mov    DWORD PTR [esp+0x18],0x0
10047073:	jmp    0x1004703b
10047075:	mov    ecx,DWORD PTR [esp+0x28]
10047079:	cmp    DWORD PTR [ecx],0xe06d7363
1004707f:	jne    0x100470ab
10047081:	cmp    DWORD PTR ds:0x1006cae8,0x0
10047088:	je     0x100470ab
1004708a:	push   0x1006cae8
1004708f:	call   0x1004c582
10047094:	add    esp,0x4
10047097:	test   eax,eax
10047099:	je     0x100470ab
1004709b:	mov    edx,DWORD PTR [esp+0x28]
1004709f:	push   0x1
100470a1:	push   edx
100470a2:	call   DWORD PTR ds:0x1006cae8
100470a8:	add    esp,0x8
100470ab:	mov    ecx,DWORD PTR [esp+0x2c]
100470af:	call   0x1004c4de
100470b4:	mov    eax,DWORD PTR [esp+0x2c]
100470b8:	cmp    DWORD PTR [eax+0xc],ebp
100470bb:	je     0x100470d0
100470bd:	push   0x1007e030
100470c2:	push   edi
100470c3:	mov    edx,ebp
100470c5:	mov    ecx,eax
100470c7:	call   0x1004c4f8
100470cc:	mov    eax,DWORD PTR [esp+0x2c]
100470d0:	mov    ecx,DWORD PTR [esp+0x14]
100470d4:	mov    DWORD PTR [eax+0xc],ecx
100470d7:	mov    eax,DWORD PTR [esi]
100470d9:	cmp    eax,0xfffffffe
100470dc:	je     0x100470eb
100470de:	mov    ecx,DWORD PTR [esi+0x4]
100470e1:	add    ecx,edi
100470e3:	xor    ecx,DWORD PTR [eax+edi*1]
100470e6:	call   0x100430d7
100470eb:	mov    ecx,DWORD PTR [esi+0xc]
100470ee:	mov    edx,DWORD PTR [esi+0x8]
100470f1:	add    ecx,edi
100470f3:	xor    ecx,DWORD PTR [edx+edi*1]
100470f6:	call   0x100430d7
100470fb:	mov    ecx,DWORD PTR [ebx+0x8]
100470fe:	mov    edx,edi
10047100:	jmp    0x1004c4c5
10047105:	cmp    DWORD PTR [ebx+0xc],0xfffffffe
10047109:	je     0x1004705f
1004710f:	push   0x1007e030
10047114:	push   edi
10047115:	mov    ecx,ebx
10047117:	mov    edx,0xfffffffe
1004711c:	call   0x1004c4f8
10047121:	jmp    0x1004703b
10047126:	push   esi
10047127:	push   DWORD PTR ds:0x1007e1ac
1004712d:	mov    esi,DWORD PTR ds:0x100661b0
10047133:	call   esi
10047135:	test   eax,eax
10047137:	je     0x1004715a
10047139:	mov    eax,ds:0x1007e1a8
1004713e:	cmp    eax,0xffffffff
10047141:	je     0x1004715a
10047143:	push   eax
10047144:	push   DWORD PTR ds:0x1007e1ac
1004714a:	call   esi
1004714c:	call   eax
1004714e:	test   eax,eax
10047150:	je     0x1004715a
10047152:	mov    eax,DWORD PTR [eax+0x1f8]
10047158:	jmp    0x10047175
1004715a:	push   0x10066604
1004715f:	call   DWORD PTR ds:0x10066198
10047165:	test   eax,eax
10047167:	je     0x10047183
10047169:	push   0x100665f4
1004716e:	push   eax
1004716f:	call   DWORD PTR ds:0x1006612c
10047175:	test   eax,eax
10047177:	je     0x10047183
10047179:	push   DWORD PTR [esp+0x8]
1004717d:	call   eax
1004717f:	mov    DWORD PTR [esp+0x8],eax
10047183:	mov    eax,DWORD PTR [esp+0x8]
10047187:	pop    esi
10047188:	ret    
10047189:	push   0x0
1004718b:	call   0x10047126
10047190:	pop    ecx
10047191:	ret    
10047192:	push   esi
10047193:	push   DWORD PTR ds:0x1007e1ac
10047199:	mov    esi,DWORD PTR ds:0x100661b0
1004719f:	call   esi
100471a1:	test   eax,eax
100471a3:	je     0x100471c6
100471a5:	mov    eax,ds:0x1007e1a8
100471aa:	cmp    eax,0xffffffff
100471ad:	je     0x100471c6
100471af:	push   eax
100471b0:	push   DWORD PTR ds:0x1007e1ac
100471b6:	call   esi
100471b8:	call   eax
100471ba:	test   eax,eax
100471bc:	je     0x100471c6
100471be:	mov    eax,DWORD PTR [eax+0x1fc]
100471c4:	jmp    0x100471e1
100471c6:	push   0x10066604
100471cb:	call   DWORD PTR ds:0x10066198
100471d1:	test   eax,eax
100471d3:	je     0x100471ef
100471d5:	push   0x10066614
100471da:	push   eax
100471db:	call   DWORD PTR ds:0x1006612c
100471e1:	test   eax,eax
100471e3:	je     0x100471ef
100471e5:	push   DWORD PTR [esp+0x8]
100471e9:	call   eax
100471eb:	mov    DWORD PTR [esp+0x8],eax
100471ef:	mov    eax,DWORD PTR [esp+0x8]
100471f3:	pop    esi
100471f4:	ret    
100471f5:	call   DWORD PTR ds:0x100661b4
100471fb:	ret    0x4
100471fe:	push   DWORD PTR ds:0x1007e1ac
10047204:	call   DWORD PTR ds:0x100661b0
1004720a:	test   eax,eax
1004720c:	jne    0x10047227
1004720e:	push   DWORD PTR ds:0x1007fdd4
10047214:	call   0x10047192
10047219:	pop    ecx
1004721a:	push   eax
1004721b:	push   DWORD PTR ds:0x1007e1ac
10047221:	call   DWORD PTR ds:0x100661b8
10047227:	ret    
10047228:	mov    eax,ds:0x1007e1a8
1004722d:	cmp    eax,0xffffffff
10047230:	je     0x10047248
10047232:	push   eax
10047233:	push   DWORD PTR ds:0x1007fddc
10047239:	call   0x10047192
1004723e:	pop    ecx
1004723f:	call   eax
10047241:	or     DWORD PTR ds:0x1007e1a8,0xffffffff
10047248:	mov    eax,ds:0x1007e1ac
1004724d:	cmp    eax,0xffffffff
10047250:	je     0x10047260
10047252:	push   eax
10047253:	call   DWORD PTR ds:0x100661bc
10047259:	or     DWORD PTR ds:0x1007e1ac,0xffffffff
10047260:	jmp    0x10047e10
10047265:	push   0xc
10047267:	push   0x100747a0
1004726c:	call   0x10046f34
10047271:	push   0x10066604
10047276:	call   DWORD PTR ds:0x10066198
1004727c:	mov    DWORD PTR [ebp-0x1c],eax
1004727f:	mov    esi,DWORD PTR [ebp+0x8]
10047282:	mov    DWORD PTR [esi+0x5c],0x1007e9f8
10047289:	xor    edi,edi
1004728b:	inc    edi
1004728c:	mov    DWORD PTR [esi+0x14],edi
1004728f:	test   eax,eax
10047291:	je     0x100472b7
10047293:	push   0x100665f4
10047298:	push   eax
10047299:	mov    ebx,DWORD PTR ds:0x1006612c
1004729f:	call   ebx
100472a1:	mov    DWORD PTR [esi+0x1f8],eax
100472a7:	push   0x10066614
100472ac:	push   DWORD PTR [ebp-0x1c]
100472af:	call   ebx
100472b1:	mov    DWORD PTR [esi+0x1fc],eax
100472b7:	mov    DWORD PTR [esi+0x70],edi
100472ba:	mov    BYTE PTR [esi+0xc8],0x43
100472c1:	mov    BYTE PTR [esi+0x14b],0x43
100472c8:	mov    eax,0x1007e3a0
100472cd:	mov    DWORD PTR [esi+0x68],eax
100472d0:	push   eax
100472d1:	call   DWORD PTR ds:0x100660a4
100472d7:	push   0xc
100472d9:	call   0x10047f3d
100472de:	pop    ecx
100472df:	and    DWORD PTR [ebp-0x4],0x0
100472e3:	mov    eax,DWORD PTR [ebp+0xc]
100472e6:	mov    DWORD PTR [esi+0x6c],eax
100472e9:	test   eax,eax
100472eb:	jne    0x100472f5
100472ed:	mov    eax,ds:0x1007e9a8
100472f2:	mov    DWORD PTR [esi+0x6c],eax
100472f5:	push   DWORD PTR [esi+0x6c]
100472f8:	call   0x1004a9f8
100472fd:	pop    ecx
100472fe:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10047305:	call   0x10047310
1004730a:	call   0x10046f79
1004730f:	ret    
10047310:	push   0xc
10047312:	call   0x10047e65
10047317:	pop    ecx
10047318:	ret    
10047319:	push   esi
1004731a:	push   edi
1004731b:	call   DWORD PTR ds:0x100660cc
10047321:	mov    edi,eax
10047323:	call   0x100471fe
10047328:	push   DWORD PTR ds:0x1007e1a8
1004732e:	push   DWORD PTR ds:0x1007e1ac
10047334:	call   DWORD PTR ds:0x100661b0
1004733a:	call   eax
1004733c:	mov    esi,eax
1004733e:	test   esi,esi
10047340:	jne    0x10047390
10047342:	push   0x214
10047347:	push   0x1
10047349:	call   0x10047702
1004734e:	mov    esi,eax
10047350:	test   esi,esi
10047352:	pop    ecx
10047353:	pop    ecx
10047354:	je     0x10047390
10047356:	push   esi
10047357:	push   DWORD PTR ds:0x1007e1a8
1004735d:	push   DWORD PTR ds:0x1007fdd8
10047363:	call   0x10047192
10047368:	pop    ecx
10047369:	call   eax
1004736b:	test   eax,eax
1004736d:	je     0x10047387
1004736f:	push   0x0
10047371:	push   esi
10047372:	call   0x10047265
10047377:	pop    ecx
10047378:	pop    ecx
10047379:	call   DWORD PTR ds:0x10066160
1004737f:	or     DWORD PTR [esi+0x4],0xffffffff
10047383:	mov    DWORD PTR [esi],eax
10047385:	jmp    0x10047390
10047387:	push   esi
10047388:	call   0x10043748
1004738d:	pop    ecx
1004738e:	xor    esi,esi
10047390:	push   edi
10047391:	call   DWORD PTR ds:0x1006615c
10047397:	pop    edi
10047398:	mov    eax,esi
1004739a:	pop    esi
1004739b:	ret    
1004739c:	push   esi
1004739d:	call   0x10047319
100473a2:	mov    esi,eax
100473a4:	test   esi,esi
100473a6:	jne    0x100473b0
100473a8:	push   0x10
100473aa:	call   0x10047838
100473af:	pop    ecx
100473b0:	mov    eax,esi
100473b2:	pop    esi
100473b3:	ret    
100473b4:	push   0x8
100473b6:	push   0x100747c0
100473bb:	call   0x10046f34
100473c0:	mov    esi,DWORD PTR [ebp+0x8]
100473c3:	test   esi,esi
100473c5:	je     0x100474b5
100473cb:	mov    eax,DWORD PTR [esi+0x24]
100473ce:	test   eax,eax
100473d0:	je     0x100473d9
100473d2:	push   eax
100473d3:	call   0x10043748
100473d8:	pop    ecx
100473d9:	mov    eax,DWORD PTR [esi+0x2c]
100473dc:	test   eax,eax
100473de:	je     0x100473e7
100473e0:	push   eax
100473e1:	call   0x10043748
100473e6:	pop    ecx
100473e7:	mov    eax,DWORD PTR [esi+0x34]
100473ea:	test   eax,eax
100473ec:	je     0x100473f5
100473ee:	push   eax
100473ef:	call   0x10043748
100473f4:	pop    ecx
100473f5:	mov    eax,DWORD PTR [esi+0x3c]
100473f8:	test   eax,eax
100473fa:	je     0x10047403
100473fc:	push   eax
100473fd:	call   0x10043748
10047402:	pop    ecx
10047403:	mov    eax,DWORD PTR [esi+0x44]
10047406:	test   eax,eax
10047408:	je     0x10047411
1004740a:	push   eax
1004740b:	call   0x10043748
10047410:	pop    ecx
10047411:	mov    eax,DWORD PTR [esi+0x48]
10047414:	test   eax,eax
10047416:	je     0x1004741f
10047418:	push   eax
10047419:	call   0x10043748
1004741e:	pop    ecx
1004741f:	mov    eax,DWORD PTR [esi+0x5c]
10047422:	cmp    eax,0x1007e9f8
10047427:	je     0x10047430
10047429:	push   eax
1004742a:	call   0x10043748
1004742f:	pop    ecx
10047430:	push   0xd
10047432:	call   0x10047f3d
10047437:	pop    ecx
10047438:	and    DWORD PTR [ebp-0x4],0x0
1004743c:	mov    edi,DWORD PTR [esi+0x68]
1004743f:	test   edi,edi
10047441:	je     0x1004745d
10047443:	push   edi
10047444:	call   DWORD PTR ds:0x100660ac
1004744a:	test   eax,eax
1004744c:	jne    0x1004745d
1004744e:	cmp    edi,0x1007e3a0
10047454:	je     0x1004745d
10047456:	push   edi
10047457:	call   0x10043748
1004745c:	pop    ecx
1004745d:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10047464:	call   0x100474c0
10047469:	push   0xc
1004746b:	call   0x10047f3d
10047470:	pop    ecx
10047471:	mov    DWORD PTR [ebp-0x4],0x1
10047478:	mov    edi,DWORD PTR [esi+0x6c]
1004747b:	test   edi,edi
1004747d:	je     0x100474a2
1004747f:	push   edi
10047480:	call   0x1004aa7e
10047485:	pop    ecx
10047486:	cmp    edi,DWORD PTR ds:0x1007e9a8
1004748c:	je     0x100474a2
1004748e:	cmp    edi,0x1007e8d0
10047494:	je     0x100474a2
10047496:	cmp    DWORD PTR [edi],0x0
10047499:	jne    0x100474a2
1004749b:	push   edi
1004749c:	call   0x1004a8b8
100474a1:	pop    ecx
100474a2:	mov    DWORD PTR [ebp-0x4],0xfffffffe
100474a9:	call   0x100474cc
100474ae:	push   esi
100474af:	call   0x10043748
100474b4:	pop    ecx
100474b5:	call   0x10046f79
100474ba:	ret    0x4
100474bd:	mov    esi,DWORD PTR [ebp+0x8]
100474c0:	push   0xd
100474c2:	call   0x10047e65
100474c7:	pop    ecx
100474c8:	ret    
100474c9:	mov    esi,DWORD PTR [ebp+0x8]
100474cc:	push   0xc
100474ce:	call   0x10047e65
100474d3:	pop    ecx
100474d4:	ret    
100474d5:	cmp    DWORD PTR ds:0x1007e1a8,0xffffffff
100474dc:	je     0x1004752a
100474de:	push   edi
100474df:	mov    edi,DWORD PTR [esp+0x8]
100474e3:	test   edi,edi
100474e5:	jne    0x1004750d
100474e7:	push   esi
100474e8:	push   DWORD PTR ds:0x1007e1ac
100474ee:	mov    esi,DWORD PTR ds:0x100661b0
100474f4:	call   esi
100474f6:	test   eax,eax
100474f8:	je     0x1004750c
100474fa:	push   DWORD PTR ds:0x1007e1a8
10047500:	push   DWORD PTR ds:0x1007e1ac
10047506:	call   esi
10047508:	call   eax
1004750a:	mov    edi,eax
1004750c:	pop    esi
1004750d:	push   0x0
1004750f:	push   DWORD PTR ds:0x1007e1a8
10047515:	push   DWORD PTR ds:0x1007fdd8
1004751b:	call   0x10047192
10047520:	pop    ecx
10047521:	call   eax
10047523:	push   edi
10047524:	call   0x100473b4
10047529:	pop    edi
1004752a:	mov    eax,ds:0x1007e1ac
1004752f:	cmp    eax,0xffffffff
10047532:	je     0x1004753d
10047534:	push   0x0
10047536:	push   eax
10047537:	call   DWORD PTR ds:0x100661b8
1004753d:	ret    
1004753e:	push   edi
1004753f:	push   0x10066604
10047544:	call   DWORD PTR ds:0x10066198
1004754a:	mov    edi,eax
1004754c:	test   edi,edi
1004754e:	jne    0x10047559
10047550:	call   0x10047228
10047555:	xor    eax,eax
10047557:	pop    edi
10047558:	ret    
10047559:	push   esi
1004755a:	mov    esi,DWORD PTR ds:0x1006612c
10047560:	push   0x10066644
10047565:	push   edi
10047566:	call   esi
10047568:	push   0x10066638
1004756d:	push   edi
1004756e:	mov    ds:0x1007fdd0,eax
10047573:	call   esi
10047575:	push   0x1006662c
1004757a:	push   edi
1004757b:	mov    ds:0x1007fdd4,eax
10047580:	call   esi
10047582:	push   0x10066624
10047587:	push   edi
10047588:	mov    ds:0x1007fdd8,eax
1004758d:	call   esi
1004758f:	cmp    DWORD PTR ds:0x1007fdd0,0x0
10047596:	mov    esi,DWORD PTR ds:0x100661b8
1004759c:	mov    ds:0x1007fddc,eax
100475a1:	je     0x100475b9
100475a3:	cmp    DWORD PTR ds:0x1007fdd4,0x0
100475aa:	je     0x100475b9
100475ac:	cmp    DWORD PTR ds:0x1007fdd8,0x0
100475b3:	je     0x100475b9
100475b5:	test   eax,eax
100475b7:	jne    0x100475dd
100475b9:	mov    eax,ds:0x100661b0
100475be:	mov    ds:0x1007fdd4,eax
100475c3:	mov    eax,ds:0x100661bc
100475c8:	mov    DWORD PTR ds:0x1007fdd0,0x100471f5
100475d2:	mov    DWORD PTR ds:0x1007fdd8,esi
100475d8:	mov    ds:0x1007fddc,eax
100475dd:	call   DWORD PTR ds:0x100661b4
100475e3:	cmp    eax,0xffffffff
100475e6:	mov    ds:0x1007e1ac,eax
100475eb:	je     0x100476bd
100475f1:	push   DWORD PTR ds:0x1007fdd4
100475f7:	push   eax
100475f8:	call   esi
100475fa:	test   eax,eax
100475fc:	je     0x100476bd
10047602:	call   0x10047ad4
10047607:	push   DWORD PTR ds:0x1007fdd0
1004760d:	call   0x10047126
10047612:	push   DWORD PTR ds:0x1007fdd4
10047618:	mov    ds:0x1007fdd0,eax
1004761d:	call   0x10047126
10047622:	push   DWORD PTR ds:0x1007fdd8
10047628:	mov    ds:0x1007fdd4,eax
1004762d:	call   0x10047126
10047632:	push   DWORD PTR ds:0x1007fddc
10047638:	mov    ds:0x1007fdd8,eax
1004763d:	call   0x10047126
10047642:	add    esp,0x10
10047645:	mov    ds:0x1007fddc,eax
1004764a:	call   0x10047dc7
1004764f:	test   eax,eax
10047651:	je     0x100476b8
10047653:	push   0x100473b4
10047658:	push   DWORD PTR ds:0x1007fdd0
1004765e:	call   0x10047192
10047663:	pop    ecx
10047664:	call   eax
10047666:	cmp    eax,0xffffffff
10047669:	mov    ds:0x1007e1a8,eax
1004766e:	je     0x100476b8
10047670:	push   0x214
10047675:	push   0x1
10047677:	call   0x10047702
1004767c:	mov    esi,eax
1004767e:	test   esi,esi
10047680:	pop    ecx
10047681:	pop    ecx
10047682:	je     0x100476b8
10047684:	push   esi
10047685:	push   DWORD PTR ds:0x1007e1a8
1004768b:	push   DWORD PTR ds:0x1007fdd8
10047691:	call   0x10047192
10047696:	pop    ecx
10047697:	call   eax
10047699:	test   eax,eax
1004769b:	je     0x100476b8
1004769d:	push   0x0
1004769f:	push   esi
100476a0:	call   0x10047265
100476a5:	pop    ecx
100476a6:	pop    ecx
100476a7:	call   DWORD PTR ds:0x10066160
100476ad:	or     DWORD PTR [esi+0x4],0xffffffff
100476b1:	mov    DWORD PTR [esi],eax
100476b3:	xor    eax,eax
100476b5:	inc    eax
100476b6:	jmp    0x100476bf
100476b8:	call   0x10047228
100476bd:	xor    eax,eax
100476bf:	pop    esi
100476c0:	pop    edi
100476c1:	ret    
100476c2:	push   esi
100476c3:	push   edi
100476c4:	xor    esi,esi
100476c6:	push   DWORD PTR [esp+0xc]
100476ca:	call   0x10045222
100476cf:	mov    edi,eax
100476d1:	test   edi,edi
100476d3:	pop    ecx
100476d4:	jne    0x100476fd
100476d6:	cmp    DWORD PTR ds:0x1007fde0,eax
100476dc:	jbe    0x100476fd
100476de:	push   esi
100476df:	call   DWORD PTR ds:0x100660bc
100476e5:	lea    eax,[esi+0x3e8]
100476eb:	cmp    eax,DWORD PTR ds:0x1007fde0
100476f1:	jbe    0x100476f6
100476f3:	or     eax,0xffffffff
100476f6:	cmp    eax,0xffffffff
100476f9:	mov    esi,eax
100476fb:	jne    0x100476c6
100476fd:	mov    eax,edi
100476ff:	pop    edi
10047700:	pop    esi
10047701:	ret    
10047702:	push   esi
10047703:	push   edi
10047704:	xor    esi,esi
10047706:	push   0x0
10047708:	push   DWORD PTR [esp+0x14]
1004770c:	push   DWORD PTR [esp+0x14]
10047710:	call   0x100437d6
10047715:	mov    edi,eax
10047717:	add    esp,0xc
1004771a:	test   edi,edi
1004771c:	jne    0x10047745
1004771e:	cmp    DWORD PTR ds:0x1007fde0,eax
10047724:	jbe    0x10047745
10047726:	push   esi
10047727:	call   DWORD PTR ds:0x100660bc
1004772d:	lea    eax,[esi+0x3e8]
10047733:	cmp    eax,DWORD PTR ds:0x1007fde0
10047739:	jbe    0x1004773e
1004773b:	or     eax,0xffffffff
1004773e:	cmp    eax,0xffffffff
10047741:	mov    esi,eax
10047743:	jne    0x10047706
10047745:	mov    eax,edi
10047747:	pop    edi
10047748:	pop    esi
10047749:	ret    
1004774a:	push   esi
1004774b:	push   edi
1004774c:	xor    esi,esi
1004774e:	push   DWORD PTR [esp+0x10]
10047752:	push   DWORD PTR [esp+0x10]
10047756:	call   0x10046448
1004775b:	mov    edi,eax
1004775d:	test   edi,edi
1004775f:	pop    ecx
10047760:	pop    ecx
10047761:	jne    0x10047790
10047763:	cmp    DWORD PTR [esp+0x10],eax
10047767:	je     0x10047790
10047769:	cmp    DWORD PTR ds:0x1007fde0,eax
1004776f:	jbe    0x10047790
10047771:	push   esi
10047772:	call   DWORD PTR ds:0x100660bc
10047778:	lea    eax,[esi+0x3e8]
1004777e:	cmp    eax,DWORD PTR ds:0x1007fde0
10047784:	jbe    0x10047789
10047786:	or     eax,0xffffffff
10047789:	cmp    eax,0xffffffff
1004778c:	mov    esi,eax
1004778e:	jne    0x1004774e
10047790:	mov    eax,edi
10047792:	pop    edi
10047793:	pop    esi
10047794:	ret    
10047795:	push   0x10
10047797:	push   0x100747e8
1004779c:	call   0x10046f34
100477a1:	xor    eax,eax
100477a3:	mov    ebx,DWORD PTR [ebp+0x8]
100477a6:	xor    edi,edi
100477a8:	cmp    ebx,edi
100477aa:	setne  al
100477ad:	cmp    eax,edi
100477af:	jne    0x100477ce
100477b1:	call   0x10046df5
100477b6:	mov    DWORD PTR [eax],0x16
100477bc:	push   edi
100477bd:	push   edi
100477be:	push   edi
100477bf:	push   edi
100477c0:	push   edi
100477c1:	call   0x100435cc
100477c6:	add    esp,0x14
100477c9:	or     eax,0xffffffff
100477cc:	jmp    0x10047821
100477ce:	cmp    DWORD PTR ds:0x100825a0,0x3
100477d5:	jne    0x1004780f
100477d7:	push   0x4
100477d9:	call   0x10047f3d
100477de:	pop    ecx
100477df:	mov    DWORD PTR [ebp-0x4],edi
100477e2:	push   ebx
100477e3:	call   0x10047fb6
100477e8:	pop    ecx
100477e9:	mov    DWORD PTR [ebp-0x20],eax
100477ec:	cmp    eax,edi
100477ee:	je     0x100477fb
100477f0:	mov    esi,DWORD PTR [ebx-0x4]
100477f3:	sub    esi,0x9
100477f6:	mov    DWORD PTR [ebp-0x1c],esi
100477f9:	jmp    0x100477fe
100477fb:	mov    esi,DWORD PTR [ebp-0x1c]
100477fe:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10047805:	call   0x1004782f
1004780a:	cmp    DWORD PTR [ebp-0x20],edi
1004780d:	jne    0x1004781f
1004780f:	push   ebx
10047810:	push   edi
10047811:	push   DWORD PTR ds:0x1007fe38
10047817:	call   DWORD PTR ds:0x100661c0
1004781d:	mov    esi,eax
1004781f:	mov    eax,esi
10047821:	call   0x10046f79
10047826:	ret    
10047827:	xor    edi,edi
10047829:	mov    ebx,DWORD PTR [ebp+0x8]
1004782c:	mov    esi,DWORD PTR [ebp-0x1c]
1004782f:	push   0x4
10047831:	call   0x10047e65
10047836:	pop    ecx
10047837:	ret    
10047838:	call   0x1004a03a
1004783d:	push   DWORD PTR [esp+0x4]
10047841:	call   0x10049e9a
10047846:	push   DWORD PTR ds:0x1007e1b0
1004784c:	call   0x10047192
10047851:	push   0xff
10047856:	call   eax
10047858:	add    esp,0xc
1004785b:	ret    
1004785c:	push   0x10066660
10047861:	call   DWORD PTR ds:0x10066198
10047867:	test   eax,eax
10047869:	je     0x10047881
1004786b:	push   0x10066650
10047870:	push   eax
10047871:	call   DWORD PTR ds:0x1006612c
10047877:	test   eax,eax
10047879:	je     0x10047881
1004787b:	push   DWORD PTR [esp+0x4]
1004787f:	call   eax
10047881:	ret    
10047882:	push   DWORD PTR [esp+0x4]
10047886:	call   0x1004785c
1004788b:	pop    ecx
1004788c:	push   DWORD PTR [esp+0x4]
10047890:	call   DWORD PTR ds:0x100661c4
10047896:	int3   
10047897:	push   0x8
10047899:	call   0x10047f3d
1004789e:	pop    ecx
1004789f:	ret    
100478a0:	push   0x8
100478a2:	call   0x10047e65
100478a7:	pop    ecx
100478a8:	ret    
100478a9:	push   esi
100478aa:	mov    esi,eax
100478ac:	jmp    0x100478b9
100478ae:	mov    eax,DWORD PTR [esi]
100478b0:	test   eax,eax
100478b2:	je     0x100478b6
100478b4:	call   eax
100478b6:	add    esi,0x4
100478b9:	cmp    esi,DWORD PTR [esp+0x8]
100478bd:	jb     0x100478ae
100478bf:	pop    esi
100478c0:	ret    
100478c1:	push   esi
100478c2:	mov    esi,DWORD PTR [esp+0x8]
100478c6:	xor    eax,eax
100478c8:	jmp    0x100478d9
100478ca:	test   eax,eax
100478cc:	jne    0x100478df
100478ce:	mov    ecx,DWORD PTR [esi]
100478d0:	test   ecx,ecx
100478d2:	je     0x100478d6
100478d4:	call   ecx
100478d6:	add    esi,0x4
100478d9:	cmp    esi,DWORD PTR [esp+0xc]
100478dd:	jb     0x100478ca
100478df:	pop    esi
100478e0:	ret    
100478e1:	mov    ecx,DWORD PTR [esp+0x4]
100478e5:	push   esi
100478e6:	xor    esi,esi
100478e8:	cmp    ecx,esi
100478ea:	jne    0x10047909
100478ec:	call   0x10046df5
100478f1:	push   esi
100478f2:	push   esi
100478f3:	push   esi
100478f4:	push   esi
100478f5:	push   esi
100478f6:	mov    DWORD PTR [eax],0x16
100478fc:	call   0x100435cc
10047901:	add    esp,0x14
10047904:	push   0x16
10047906:	pop    eax
10047907:	pop    esi
10047908:	ret    
10047909:	mov    eax,ds:0x1007fde8
1004790e:	cmp    eax,esi
10047910:	je     0x100478ec
10047912:	mov    DWORD PTR [ecx],eax
10047914:	xor    eax,eax
10047916:	pop    esi
10047917:	ret    
10047918:	mov    eax,DWORD PTR [esp+0x4]
1004791c:	push   esi
1004791d:	xor    esi,esi
1004791f:	cmp    eax,esi
10047921:	jne    0x10047940
10047923:	call   0x10046df5
10047928:	push   esi
10047929:	push   esi
1004792a:	push   esi
1004792b:	push   esi
1004792c:	push   esi
1004792d:	mov    DWORD PTR [eax],0x16
10047933:	call   0x100435cc
10047938:	add    esp,0x14
1004793b:	push   0x16
1004793d:	pop    eax
1004793e:	pop    esi
1004793f:	ret    
10047940:	cmp    DWORD PTR ds:0x1007fde8,esi
10047946:	je     0x10047923
10047948:	mov    ecx,DWORD PTR ds:0x1007fdf4
1004794e:	mov    DWORD PTR [eax],ecx
10047950:	xor    eax,eax
10047952:	pop    esi
10047953:	ret    
10047954:	cmp    DWORD PTR ds:0x1006cab8,0x0
1004795b:	je     0x10047977
1004795d:	push   0x1006cab8
10047962:	call   0x1004c582
10047967:	test   eax,eax
10047969:	pop    ecx
1004796a:	je     0x10047977
1004796c:	push   DWORD PTR [esp+0x4]
10047970:	call   DWORD PTR ds:0x1006cab8
10047976:	pop    ecx
10047977:	call   0x1004c5ee
1004797c:	push   0x1006655c
10047981:	push   0x10066540
10047986:	call   0x100478c1
1004798b:	test   eax,eax
1004798d:	pop    ecx
1004798e:	pop    ecx
1004798f:	jne    0x100479e5
10047991:	push   esi
10047992:	push   edi
10047993:	push   0x1004c17a
10047998:	call   0x100434b4
1004799d:	mov    esi,0x10066450
100479a2:	mov    eax,esi
100479a4:	mov    edi,0x1006653c
100479a9:	cmp    eax,edi
100479ab:	pop    ecx
100479ac:	jae    0x100479bd
100479ae:	mov    eax,DWORD PTR [esi]
100479b0:	test   eax,eax
100479b2:	je     0x100479b6
100479b4:	call   eax
100479b6:	add    esi,0x4
100479b9:	cmp    esi,edi
100479bb:	jb     0x100479ae
100479bd:	cmp    DWORD PTR ds:0x100825b8,0x0
100479c4:	pop    edi
100479c5:	pop    esi
100479c6:	je     0x100479e3
100479c8:	push   0x100825b8
100479cd:	call   0x1004c582
100479d2:	test   eax,eax
100479d4:	pop    ecx
100479d5:	je     0x100479e3
100479d7:	push   0x0
100479d9:	push   0x2
100479db:	push   0x0
100479dd:	call   DWORD PTR ds:0x100825b8
100479e3:	xor    eax,eax
100479e5:	ret    
100479e6:	push   0xc
100479e8:	push   0x10074808
100479ed:	call   0x10046f34
100479f2:	push   0x8
100479f4:	call   0x10047f3d
100479f9:	pop    ecx
100479fa:	and    DWORD PTR [ebp-0x4],0x0
100479fe:	xor    esi,esi
10047a00:	inc    esi
10047a01:	cmp    DWORD PTR ds:0x1007fe28,esi
10047a07:	je     0x10047a74
10047a09:	mov    DWORD PTR ds:0x1007fe24,esi
10047a0f:	mov    al,BYTE PTR [ebp+0x10]
10047a12:	mov    ds:0x1007fe20,al
10047a17:	cmp    DWORD PTR [ebp+0xc],0x0
10047a1b:	jne    0x10047a64
10047a1d:	push   DWORD PTR ds:0x100825b0
10047a23:	call   0x10047192
10047a28:	mov    edi,eax
10047a2a:	push   DWORD PTR ds:0x100825ac
10047a30:	call   0x10047192
10047a35:	pop    ecx
10047a36:	pop    ecx
10047a37:	mov    DWORD PTR [ebp-0x1c],eax
10047a3a:	test   edi,edi
10047a3c:	je     0x10047a54
10047a3e:	sub    DWORD PTR [ebp-0x1c],0x4
10047a42:	cmp    DWORD PTR [ebp-0x1c],edi
10047a45:	jb     0x10047a54
10047a47:	mov    eax,DWORD PTR [ebp-0x1c]
10047a4a:	mov    eax,DWORD PTR [eax]
10047a4c:	test   eax,eax
10047a4e:	je     0x10047a3e
10047a50:	call   eax
10047a52:	jmp    0x10047a3e
10047a54:	push   0x1006656c
10047a59:	mov    eax,0x10066560
10047a5e:	call   0x100478a9
10047a63:	pop    ecx
10047a64:	push   0x10066578
10047a69:	mov    eax,0x10066570
10047a6e:	call   0x100478a9
10047a73:	pop    ecx
10047a74:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10047a7b:	call   0x10047a9f
10047a80:	cmp    DWORD PTR [ebp+0x10],0x0
10047a84:	jne    0x10047aae
10047a86:	mov    DWORD PTR ds:0x1007fe28,esi
10047a8c:	push   0x8
10047a8e:	call   0x10047e65
10047a93:	pop    ecx
10047a94:	push   DWORD PTR [ebp+0x8]
10047a97:	call   0x10047882
10047a9c:	xor    esi,esi
10047a9e:	inc    esi
10047a9f:	cmp    DWORD PTR [ebp+0x10],0x0
10047aa3:	je     0x10047aad
10047aa5:	push   0x8
10047aa7:	call   0x10047e65
10047aac:	pop    ecx
10047aad:	ret    
10047aae:	call   0x10046f79
10047ab3:	ret    
10047ab4:	push   0x0
10047ab6:	push   0x1
10047ab8:	push   DWORD PTR [esp+0xc]
10047abc:	call   0x100479e6
10047ac1:	add    esp,0xc
10047ac4:	ret    
10047ac5:	push   0x1
10047ac7:	push   0x0
10047ac9:	push   0x0
10047acb:	call   0x100479e6
10047ad0:	add    esp,0xc
10047ad3:	ret    
10047ad4:	push   esi
10047ad5:	call   0x10047189
10047ada:	mov    esi,eax
10047adc:	push   esi
10047add:	call   0x10047c28
10047ae2:	push   esi
10047ae3:	call   0x1004c821
10047ae8:	push   esi
10047ae9:	call   0x100434c6
10047aee:	push   esi
10047aef:	call   0x1004af1c
10047af4:	push   esi
10047af5:	call   0x1004c817
10047afa:	push   esi
10047afb:	call   0x1004c60d
10047b00:	push   esi
10047b01:	call   0x1005975a
10047b06:	push   esi
10047b07:	call   0x10046f21
10047b0c:	push   0x10047ab4
10047b11:	call   0x10047126
10047b16:	add    esp,0x24
10047b19:	mov    ds:0x1007e1b0,eax
10047b1e:	pop    esi
10047b1f:	ret    
10047b20:	and    DWORD PTR ds:0x100825a4,0x0
10047b27:	ret    
10047b28:	push   0xc
10047b2a:	push   0x10074828
10047b2f:	call   0x10046f34
10047b34:	push   0xe
10047b36:	call   0x10047f3d
10047b3b:	pop    ecx
10047b3c:	and    DWORD PTR [ebp-0x4],0x0
10047b40:	mov    esi,DWORD PTR [ebp+0x8]
10047b43:	mov    ecx,DWORD PTR [esi+0x4]
10047b46:	test   ecx,ecx
10047b48:	je     0x10047b79
10047b4a:	mov    eax,ds:0x1007fe30
10047b4f:	mov    edx,0x1007fe2c
10047b54:	mov    DWORD PTR [ebp-0x1c],eax
10047b57:	test   eax,eax
10047b59:	je     0x10047b6c
10047b5b:	cmp    DWORD PTR [eax],ecx
10047b5d:	jne    0x10047b8b
10047b5f:	mov    ecx,DWORD PTR [eax+0x4]
10047b62:	mov    DWORD PTR [edx+0x4],ecx
10047b65:	push   eax
10047b66:	call   0x10043748
10047b6b:	pop    ecx
10047b6c:	push   DWORD PTR [esi+0x4]
10047b6f:	call   0x10043748
10047b74:	pop    ecx
10047b75:	and    DWORD PTR [esi+0x4],0x0
10047b79:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10047b80:	call   0x10047b8f
10047b85:	call   0x10046f79
10047b8a:	ret    
10047b8b:	mov    edx,eax
10047b8d:	jmp    0x10047b54
10047b8f:	push   0xe
10047b91:	call   0x10047e65
10047b96:	pop    ecx
10047b97:	ret    
10047b98:	int3   
10047b99:	int3   
10047b9a:	int3   
10047b9b:	int3   
10047b9c:	int3   
10047b9d:	int3   
10047b9e:	int3   
10047b9f:	int3   
10047ba0:	mov    edx,DWORD PTR [esp+0x4]
10047ba4:	mov    ecx,DWORD PTR [esp+0x8]
10047ba8:	test   edx,0x3
10047bae:	jne    0x10047bec
10047bb0:	mov    eax,DWORD PTR [edx]
10047bb2:	cmp    al,BYTE PTR [ecx]
10047bb4:	jne    0x10047be4
10047bb6:	or     al,al
10047bb8:	je     0x10047be0
10047bba:	cmp    ah,BYTE PTR [ecx+0x1]
10047bbd:	jne    0x10047be4
10047bbf:	or     ah,ah
10047bc1:	je     0x10047be0
10047bc3:	shr    eax,0x10
10047bc6:	cmp    al,BYTE PTR [ecx+0x2]
10047bc9:	jne    0x10047be4
10047bcb:	or     al,al
10047bcd:	je     0x10047be0
10047bcf:	cmp    ah,BYTE PTR [ecx+0x3]
10047bd2:	jne    0x10047be4
10047bd4:	add    ecx,0x4
10047bd7:	add    edx,0x4
10047bda:	or     ah,ah
10047bdc:	jne    0x10047bb0
10047bde:	mov    edi,edi
10047be0:	xor    eax,eax
10047be2:	ret    
10047be3:	nop
10047be4:	sbb    eax,eax
10047be6:	shl    eax,1
10047be8:	add    eax,0x1
10047beb:	ret    
10047bec:	test   edx,0x1
10047bf2:	je     0x10047c0c
10047bf4:	mov    al,BYTE PTR [edx]
10047bf6:	add    edx,0x1
10047bf9:	cmp    al,BYTE PTR [ecx]
10047bfb:	jne    0x10047be4
10047bfd:	add    ecx,0x1
10047c00:	or     al,al
10047c02:	je     0x10047be0
10047c04:	test   edx,0x2
10047c0a:	je     0x10047bb0
10047c0c:	mov    ax,WORD PTR [edx]
10047c0f:	add    edx,0x2
10047c12:	cmp    al,BYTE PTR [ecx]
10047c14:	jne    0x10047be4
10047c16:	or     al,al
10047c18:	je     0x10047be0
10047c1a:	cmp    ah,BYTE PTR [ecx+0x1]
10047c1d:	jne    0x10047be4
10047c1f:	or     ah,ah
10047c21:	je     0x10047be0
10047c23:	add    ecx,0x2
10047c26:	jmp    0x10047bb0
10047c28:	mov    eax,DWORD PTR [esp+0x4]
10047c2c:	mov    ds:0x1007fe34,eax
10047c31:	ret    
10047c32:	push   DWORD PTR ds:0x1007fe34
10047c38:	call   0x10047192
10047c3d:	test   eax,eax
10047c3f:	pop    ecx
10047c40:	je     0x10047c51
10047c42:	push   DWORD PTR [esp+0x4]
10047c46:	call   eax
10047c48:	test   eax,eax
10047c4a:	pop    ecx
10047c4b:	je     0x10047c51
10047c4d:	xor    eax,eax
10047c4f:	inc    eax
10047c50:	ret    
10047c51:	xor    eax,eax
10047c53:	ret    
10047c54:	push   ebp
10047c55:	mov    ebp,esp
10047c57:	sub    esp,0x20
10047c5a:	mov    eax,DWORD PTR [ebp+0x8]
10047c5d:	push   esi
10047c5e:	push   edi
10047c5f:	push   0x8
10047c61:	pop    ecx
10047c62:	mov    esi,0x1006666c
10047c67:	lea    edi,[ebp-0x20]
10047c6a:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10047c6c:	mov    DWORD PTR [ebp-0x8],eax
10047c6f:	mov    eax,DWORD PTR [ebp+0xc]
10047c72:	test   eax,eax
10047c74:	pop    edi
10047c75:	mov    DWORD PTR [ebp-0x4],eax
10047c78:	pop    esi
10047c79:	je     0x10047c87
10047c7b:	test   BYTE PTR [eax],0x8
10047c7e:	je     0x10047c87
10047c80:	mov    DWORD PTR [ebp-0xc],0x1994000
10047c87:	lea    eax,[ebp-0xc]
10047c8a:	push   eax
10047c8b:	push   DWORD PTR [ebp-0x10]
10047c8e:	push   DWORD PTR [ebp-0x1c]
10047c91:	push   DWORD PTR [ebp-0x20]
10047c94:	call   DWORD PTR ds:0x10066128
10047c9a:	leave  
10047c9b:	ret    0x8
10047c9e:	push   ebp
10047c9f:	mov    ebp,esp
10047ca1:	push   ecx
10047ca2:	push   ecx
10047ca3:	push   esi
10047ca4:	lea    eax,[ebp-0x4]
10047ca7:	xor    esi,esi
10047ca9:	push   eax
10047caa:	mov    DWORD PTR [ebp-0x4],esi
10047cad:	mov    DWORD PTR [ebp-0x8],esi
10047cb0:	call   0x100478e1
10047cb5:	test   eax,eax
10047cb7:	pop    ecx
10047cb8:	je     0x10047cc7
10047cba:	push   esi
10047cbb:	push   esi
10047cbc:	push   esi
10047cbd:	push   esi
10047cbe:	push   esi
10047cbf:	call   0x100434d0
10047cc4:	add    esp,0x14
10047cc7:	lea    eax,[ebp-0x8]
10047cca:	push   eax
10047ccb:	call   0x10047918
10047cd0:	test   eax,eax
10047cd2:	pop    ecx
10047cd3:	je     0x10047ce2
10047cd5:	push   esi
10047cd6:	push   esi
10047cd7:	push   esi
10047cd8:	push   esi
10047cd9:	push   esi
10047cda:	call   0x100434d0
10047cdf:	add    esp,0x14
10047ce2:	cmp    DWORD PTR [ebp-0x4],0x2
10047ce6:	pop    esi
10047ce7:	jne    0x10047cf4
10047ce9:	cmp    DWORD PTR [ebp-0x8],0x5
10047ced:	jb     0x10047cf4
10047cef:	xor    eax,eax
10047cf1:	inc    eax
10047cf2:	leave  
10047cf3:	ret    
10047cf4:	push   0x3
10047cf6:	pop    eax
10047cf7:	leave  
10047cf8:	ret    
10047cf9:	xor    eax,eax
10047cfb:	cmp    DWORD PTR [esp+0x4],eax
10047cff:	push   0x0
10047d01:	sete   al
10047d04:	push   0x1000
10047d09:	push   eax
10047d0a:	call   DWORD PTR ds:0x100661cc
10047d10:	test   eax,eax
10047d12:	mov    ds:0x1007fe38,eax
10047d17:	jne    0x10047d1c
10047d19:	xor    eax,eax
10047d1b:	ret    
10047d1c:	call   0x10047c9e
10047d21:	cmp    eax,0x3
10047d24:	mov    ds:0x100825a0,eax
10047d29:	jne    0x10047d4f
10047d2b:	push   0x3f8
10047d30:	call   0x10047f6e
10047d35:	test   eax,eax
10047d37:	pop    ecx
10047d38:	jne    0x10047d4f
10047d3a:	push   DWORD PTR ds:0x1007fe38
10047d40:	call   DWORD PTR ds:0x100661c8
10047d46:	and    DWORD PTR ds:0x1007fe38,0x0
10047d4d:	jmp    0x10047d19
10047d4f:	xor    eax,eax
10047d51:	inc    eax
10047d52:	ret    
10047d53:	push   ebp
10047d54:	xor    ebp,ebp
10047d56:	cmp    DWORD PTR ds:0x100825a0,0x3
10047d5d:	jne    0x10047db3
10047d5f:	push   ebx
10047d60:	mov    ebx,DWORD PTR ds:0x10066188
10047d66:	push   edi
10047d67:	xor    edi,edi
10047d69:	cmp    DWORD PTR ds:0x10082588,ebp
10047d6f:	jle    0x10047da2
10047d71:	push   esi
10047d72:	mov    esi,DWORD PTR ds:0x1008258c
10047d78:	add    esi,0x10
10047d7b:	push   0x8000
10047d80:	push   ebp
10047d81:	push   DWORD PTR [esi-0x4]
10047d84:	call   DWORD PTR ds:0x100661d0
10047d8a:	push   DWORD PTR [esi]
10047d8c:	push   ebp
10047d8d:	push   DWORD PTR ds:0x1007fe38
10047d93:	call   ebx
10047d95:	add    esi,0x14
10047d98:	inc    edi
10047d99:	cmp    edi,DWORD PTR ds:0x10082588
10047d9f:	jl     0x10047d7b
10047da1:	pop    esi
10047da2:	push   DWORD PTR ds:0x1008258c
10047da8:	push   ebp
10047da9:	push   DWORD PTR ds:0x1007fe38
10047daf:	call   ebx
10047db1:	pop    edi
10047db2:	pop    ebx
10047db3:	push   DWORD PTR ds:0x1007fe38
10047db9:	call   DWORD PTR ds:0x100661c8
10047dbf:	mov    DWORD PTR ds:0x1007fe38,ebp
10047dc5:	pop    ebp
10047dc6:	ret    
10047dc7:	push   esi
10047dc8:	push   edi
10047dc9:	xor    esi,esi
10047dcb:	mov    edi,0x1007fe40
10047dd0:	cmp    DWORD PTR [esi*8+0x1007e1cc],0x1
10047dd8:	jne    0x10047df8
10047dda:	lea    eax,[esi*8+0x1007e1c8]
10047de1:	mov    DWORD PTR [eax],edi
10047de3:	push   0xfa0
10047de8:	push   DWORD PTR [eax]
10047dea:	add    edi,0x18
10047ded:	call   0x1004c83b
10047df2:	test   eax,eax
10047df4:	pop    ecx
10047df5:	pop    ecx
10047df6:	je     0x10047e04
10047df8:	inc    esi
10047df9:	cmp    esi,0x24
10047dfc:	jl     0x10047dd0
10047dfe:	xor    eax,eax
10047e00:	inc    eax
10047e01:	pop    edi
10047e02:	pop    esi
10047e03:	ret    
10047e04:	and    DWORD PTR [esi*8+0x1007e1c8],0x0
10047e0c:	xor    eax,eax
10047e0e:	jmp    0x10047e01
10047e10:	push   ebx
10047e11:	mov    ebx,DWORD PTR ds:0x10066138
10047e17:	push   esi
10047e18:	mov    esi,0x1007e1c8
10047e1d:	push   edi
10047e1e:	mov    edi,DWORD PTR [esi]
10047e20:	test   edi,edi
10047e22:	je     0x10047e37
10047e24:	cmp    DWORD PTR [esi+0x4],0x1
10047e28:	je     0x10047e37
10047e2a:	push   edi
10047e2b:	call   ebx
10047e2d:	push   edi
10047e2e:	call   0x10043748
10047e33:	and    DWORD PTR [esi],0x0
10047e36:	pop    ecx
10047e37:	add    esi,0x8
10047e3a:	cmp    esi,0x1007e2e8
10047e40:	jl     0x10047e1e
10047e42:	mov    esi,0x1007e1c8
10047e47:	pop    edi
10047e48:	mov    eax,DWORD PTR [esi]
10047e4a:	test   eax,eax
10047e4c:	je     0x10047e57
10047e4e:	cmp    DWORD PTR [esi+0x4],0x1
10047e52:	jne    0x10047e57
10047e54:	push   eax
10047e55:	call   ebx
10047e57:	add    esi,0x8
10047e5a:	cmp    esi,0x1007e2e8
10047e60:	jl     0x10047e48
10047e62:	pop    esi
10047e63:	pop    ebx
10047e64:	ret    
10047e65:	push   ebp
10047e66:	mov    ebp,esp
10047e68:	mov    eax,DWORD PTR [ebp+0x8]
10047e6b:	push   DWORD PTR [eax*8+0x1007e1c8]
10047e72:	call   DWORD PTR ds:0x100660ec
10047e78:	pop    ebp
10047e79:	ret    
10047e7a:	push   0xc
10047e7c:	push   0x10074848
10047e81:	call   0x10046f34
10047e86:	xor    edi,edi
10047e88:	inc    edi
10047e89:	mov    DWORD PTR [ebp-0x1c],edi
10047e8c:	xor    ebx,ebx
10047e8e:	cmp    DWORD PTR ds:0x1007fe38,ebx
10047e94:	jne    0x10047eae
10047e96:	call   0x1004a03a
10047e9b:	push   0x1e
10047e9d:	call   0x10049e9a
10047ea2:	push   0xff
10047ea7:	call   0x10047882
10047eac:	pop    ecx
10047ead:	pop    ecx
10047eae:	mov    esi,DWORD PTR [ebp+0x8]
10047eb1:	lea    esi,[esi*8+0x1007e1c8]
10047eb8:	cmp    DWORD PTR [esi],ebx
10047eba:	je     0x10047ec0
10047ebc:	mov    eax,edi
10047ebe:	jmp    0x10047f2e
10047ec0:	push   0x18
10047ec2:	call   0x100476c2
10047ec7:	pop    ecx
10047ec8:	mov    edi,eax
10047eca:	cmp    edi,ebx
10047ecc:	jne    0x10047edd
10047ece:	call   0x10046df5
10047ed3:	mov    DWORD PTR [eax],0xc
10047ed9:	xor    eax,eax
10047edb:	jmp    0x10047f2e
10047edd:	push   0xa
10047edf:	call   0x10047f3d
10047ee4:	pop    ecx
10047ee5:	mov    DWORD PTR [ebp-0x4],ebx
10047ee8:	cmp    DWORD PTR [esi],ebx
10047eea:	jne    0x10047f18
10047eec:	push   0xfa0
10047ef1:	push   edi
10047ef2:	call   0x1004c83b
10047ef7:	pop    ecx
10047ef8:	pop    ecx
10047ef9:	test   eax,eax
10047efb:	jne    0x10047f14
10047efd:	push   edi
10047efe:	call   0x10043748
10047f03:	pop    ecx
10047f04:	call   0x10046df5
10047f09:	mov    DWORD PTR [eax],0xc
10047f0f:	mov    DWORD PTR [ebp-0x1c],ebx
10047f12:	jmp    0x10047f1f
10047f14:	mov    DWORD PTR [esi],edi
10047f16:	jmp    0x10047f1f
10047f18:	push   edi
10047f19:	call   0x10043748
10047f1e:	pop    ecx
10047f1f:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10047f26:	call   0x10047f34
10047f2b:	mov    eax,DWORD PTR [ebp-0x1c]
10047f2e:	call   0x10046f79
10047f33:	ret    
10047f34:	push   0xa
10047f36:	call   0x10047e65
10047f3b:	pop    ecx
10047f3c:	ret    
10047f3d:	push   ebp
10047f3e:	mov    ebp,esp
10047f40:	mov    eax,DWORD PTR [ebp+0x8]
10047f43:	push   esi
10047f44:	lea    esi,[eax*8+0x1007e1c8]
10047f4b:	cmp    DWORD PTR [esi],0x0
10047f4e:	jne    0x10047f63
10047f50:	push   eax
10047f51:	call   0x10047e7a
10047f56:	test   eax,eax
10047f58:	pop    ecx
10047f59:	jne    0x10047f63
10047f5b:	push   0x11
10047f5d:	call   0x10047838
10047f62:	pop    ecx
10047f63:	push   DWORD PTR [esi]
10047f65:	call   DWORD PTR ds:0x100660f0
10047f6b:	pop    esi
10047f6c:	pop    ebp
10047f6d:	ret    
10047f6e:	push   0x140
10047f73:	push   0x0
10047f75:	push   DWORD PTR ds:0x1007fe38
10047f7b:	call   DWORD PTR ds:0x1006618c
10047f81:	test   eax,eax
10047f83:	mov    ds:0x1008258c,eax
10047f88:	jne    0x10047f8b
10047f8a:	ret    
10047f8b:	mov    ecx,DWORD PTR [esp+0x4]
10047f8f:	and    DWORD PTR ds:0x1007ff90,0x0
10047f96:	and    DWORD PTR ds:0x10082588,0x0
10047f9d:	mov    ds:0x10082594,eax
10047fa2:	xor    eax,eax
10047fa4:	mov    DWORD PTR ds:0x10082590,ecx
10047faa:	mov    DWORD PTR ds:0x10082598,0x10
10047fb4:	inc    eax
10047fb5:	ret    
10047fb6:	mov    ecx,DWORD PTR ds:0x10082588
10047fbc:	mov    eax,ds:0x1008258c
10047fc1:	imul   ecx,ecx,0x14
10047fc4:	add    ecx,eax
10047fc6:	jmp    0x10047fda
10047fc8:	mov    edx,DWORD PTR [esp+0x4]
10047fcc:	sub    edx,DWORD PTR [eax+0xc]
10047fcf:	cmp    edx,0x100000
10047fd5:	jb     0x10047fe0
10047fd7:	add    eax,0x14
10047fda:	cmp    eax,ecx
10047fdc:	jb     0x10047fc8
10047fde:	xor    eax,eax
10047fe0:	ret    
10047fe1:	push   ebp
10047fe2:	mov    ebp,esp
10047fe4:	sub    esp,0x10
10047fe7:	mov    ecx,DWORD PTR [ebp+0x8]
10047fea:	mov    eax,DWORD PTR [ecx+0x10]
10047fed:	push   esi
10047fee:	mov    esi,DWORD PTR [ebp+0xc]
10047ff1:	push   edi
10047ff2:	mov    edi,esi
10047ff4:	sub    edi,DWORD PTR [ecx+0xc]
10047ff7:	add    esi,0xfffffffc
10047ffa:	shr    edi,0xf
10047ffd:	mov    ecx,edi
10047fff:	imul   ecx,ecx,0x204
10048005:	lea    ecx,[ecx+eax*1+0x144]
1004800c:	mov    DWORD PTR [ebp-0x10],ecx
1004800f:	mov    ecx,DWORD PTR [esi]
10048011:	dec    ecx
10048012:	test   cl,0x1
10048015:	mov    DWORD PTR [ebp-0x4],ecx
10048018:	jne    0x100482f1
1004801e:	push   ebx
1004801f:	lea    ebx,[ecx+esi*1]
10048022:	mov    edx,DWORD PTR [ebx]
10048024:	mov    DWORD PTR [ebp-0xc],edx
10048027:	mov    edx,DWORD PTR [esi-0x4]
1004802a:	mov    DWORD PTR [ebp-0x8],edx
1004802d:	mov    edx,DWORD PTR [ebp-0xc]
10048030:	test   dl,0x1
10048033:	mov    DWORD PTR [ebp+0xc],ebx
10048036:	jne    0x100480ac
10048038:	sar    edx,0x4
1004803b:	dec    edx
1004803c:	cmp    edx,0x3f
1004803f:	jbe    0x10048044
10048041:	push   0x3f
10048043:	pop    edx
10048044:	mov    ecx,DWORD PTR [ebx+0x4]
10048047:	cmp    ecx,DWORD PTR [ebx+0x8]
1004804a:	jne    0x1004808e
1004804c:	cmp    edx,0x20
1004804f:	mov    ebx,0x80000000
10048054:	jae    0x1004806f
10048056:	mov    ecx,edx
10048058:	shr    ebx,cl
1004805a:	lea    ecx,[edx+eax*1+0x4]
1004805e:	not    ebx
10048060:	and    DWORD PTR [eax+edi*4+0x44],ebx
10048064:	dec    BYTE PTR [ecx]
10048066:	jne    0x1004808b
10048068:	mov    ecx,DWORD PTR [ebp+0x8]
1004806b:	and    DWORD PTR [ecx],ebx
1004806d:	jmp    0x1004808b
1004806f:	lea    ecx,[edx-0x20]
10048072:	shr    ebx,cl
10048074:	lea    ecx,[edx+eax*1+0x4]
10048078:	not    ebx
1004807a:	and    DWORD PTR [eax+edi*4+0xc4],ebx
10048081:	dec    BYTE PTR [ecx]
10048083:	jne    0x1004808b
10048085:	mov    ecx,DWORD PTR [ebp+0x8]
10048088:	and    DWORD PTR [ecx+0x4],ebx
1004808b:	mov    ebx,DWORD PTR [ebp+0xc]
1004808e:	mov    edx,DWORD PTR [ebx+0x8]
10048091:	mov    ebx,DWORD PTR [ebx+0x4]
10048094:	mov    ecx,DWORD PTR [ebp-0x4]
10048097:	add    ecx,DWORD PTR [ebp-0xc]
1004809a:	mov    DWORD PTR [edx+0x4],ebx
1004809d:	mov    edx,DWORD PTR [ebp+0xc]
100480a0:	mov    ebx,DWORD PTR [edx+0x4]
100480a3:	mov    edx,DWORD PTR [edx+0x8]
100480a6:	mov    DWORD PTR [ebx+0x8],edx
100480a9:	mov    DWORD PTR [ebp-0x4],ecx
100480ac:	mov    edx,ecx
100480ae:	sar    edx,0x4
100480b1:	dec    edx
100480b2:	cmp    edx,0x3f
100480b5:	jbe    0x100480ba
100480b7:	push   0x3f
100480b9:	pop    edx
100480ba:	mov    ebx,DWORD PTR [ebp-0x8]
100480bd:	and    ebx,0x1
100480c0:	mov    DWORD PTR [ebp-0xc],ebx
100480c3:	jne    0x10048158
100480c9:	sub    esi,DWORD PTR [ebp-0x8]
100480cc:	mov    ebx,DWORD PTR [ebp-0x8]
100480cf:	sar    ebx,0x4
100480d2:	push   0x3f
100480d4:	mov    DWORD PTR [ebp+0xc],esi
100480d7:	dec    ebx
100480d8:	pop    esi
100480d9:	cmp    ebx,esi
100480db:	jbe    0x100480df
100480dd:	mov    ebx,esi
100480df:	add    ecx,DWORD PTR [ebp-0x8]
100480e2:	mov    edx,ecx
100480e4:	sar    edx,0x4
100480e7:	dec    edx
100480e8:	cmp    edx,esi
100480ea:	mov    DWORD PTR [ebp-0x4],ecx
100480ed:	jbe    0x100480f1
100480ef:	mov    edx,esi
100480f1:	cmp    ebx,edx
100480f3:	je     0x10048153
100480f5:	mov    ecx,DWORD PTR [ebp+0xc]
100480f8:	mov    esi,DWORD PTR [ecx+0x4]
100480fb:	cmp    esi,DWORD PTR [ecx+0x8]
100480fe:	jne    0x1004813b
10048100:	cmp    ebx,0x20
10048103:	mov    esi,0x80000000
10048108:	jae    0x10048121
1004810a:	mov    ecx,ebx
1004810c:	shr    esi,cl
1004810e:	not    esi
10048110:	and    DWORD PTR [eax+edi*4+0x44],esi
10048114:	dec    BYTE PTR [ebx+eax*1+0x4]
10048118:	jne    0x1004813b
1004811a:	mov    ecx,DWORD PTR [ebp+0x8]
1004811d:	and    DWORD PTR [ecx],esi
1004811f:	jmp    0x1004813b
10048121:	lea    ecx,[ebx-0x20]
10048124:	shr    esi,cl
10048126:	not    esi
10048128:	and    DWORD PTR [eax+edi*4+0xc4],esi
1004812f:	dec    BYTE PTR [ebx+eax*1+0x4]
10048133:	jne    0x1004813b
10048135:	mov    ecx,DWORD PTR [ebp+0x8]
10048138:	and    DWORD PTR [ecx+0x4],esi
1004813b:	mov    ecx,DWORD PTR [ebp+0xc]
1004813e:	mov    esi,DWORD PTR [ecx+0x8]
10048141:	mov    ecx,DWORD PTR [ecx+0x4]
10048144:	mov    DWORD PTR [esi+0x4],ecx
10048147:	mov    ecx,DWORD PTR [ebp+0xc]
1004814a:	mov    esi,DWORD PTR [ecx+0x4]
1004814d:	mov    ecx,DWORD PTR [ecx+0x8]
10048150:	mov    DWORD PTR [esi+0x8],ecx
10048153:	mov    esi,DWORD PTR [ebp+0xc]
10048156:	jmp    0x1004815b
10048158:	mov    ebx,DWORD PTR [ebp+0x8]
1004815b:	cmp    DWORD PTR [ebp-0xc],0x0
1004815f:	jne    0x10048169
10048161:	cmp    ebx,edx
10048163:	je     0x100481e9
10048169:	mov    ecx,DWORD PTR [ebp-0x10]
1004816c:	lea    ecx,[ecx+edx*8]
1004816f:	mov    ebx,DWORD PTR [ecx+0x4]
10048172:	mov    DWORD PTR [esi+0x8],ecx
10048175:	mov    DWORD PTR [esi+0x4],ebx
10048178:	mov    DWORD PTR [ecx+0x4],esi
1004817b:	mov    ecx,DWORD PTR [esi+0x4]
1004817e:	mov    DWORD PTR [ecx+0x8],esi
10048181:	mov    ecx,DWORD PTR [esi+0x4]
10048184:	cmp    ecx,DWORD PTR [esi+0x8]
10048187:	jne    0x100481e9
10048189:	mov    cl,BYTE PTR [edx+eax*1+0x4]
1004818d:	mov    BYTE PTR [ebp+0xf],cl
10048190:	inc    cl
10048192:	cmp    edx,0x20
10048195:	mov    BYTE PTR [edx+eax*1+0x4],cl
10048199:	jae    0x100481c0
1004819b:	cmp    BYTE PTR [ebp+0xf],0x0
1004819f:	jne    0x100481af
100481a1:	mov    ecx,edx
100481a3:	mov    ebx,0x80000000
100481a8:	shr    ebx,cl
100481aa:	mov    ecx,DWORD PTR [ebp+0x8]
100481ad:	or     DWORD PTR [ecx],ebx
100481af:	mov    ebx,0x80000000
100481b4:	mov    ecx,edx
100481b6:	shr    ebx,cl
100481b8:	lea    eax,[eax+edi*4+0x44]
100481bc:	or     DWORD PTR [eax],ebx
100481be:	jmp    0x100481e9
100481c0:	cmp    BYTE PTR [ebp+0xf],0x0
100481c4:	jne    0x100481d6
100481c6:	lea    ecx,[edx-0x20]
100481c9:	mov    ebx,0x80000000
100481ce:	shr    ebx,cl
100481d0:	mov    ecx,DWORD PTR [ebp+0x8]
100481d3:	or     DWORD PTR [ecx+0x4],ebx
100481d6:	lea    ecx,[edx-0x20]
100481d9:	mov    edx,0x80000000
100481de:	shr    edx,cl
100481e0:	lea    eax,[eax+edi*4+0xc4]
100481e7:	or     DWORD PTR [eax],edx
100481e9:	mov    eax,DWORD PTR [ebp-0x4]
100481ec:	mov    DWORD PTR [esi],eax
100481ee:	mov    DWORD PTR [eax+esi*1-0x4],eax
100481f2:	mov    eax,DWORD PTR [ebp-0x10]
100481f5:	dec    DWORD PTR [eax]
100481f7:	jne    0x100482f0
100481fd:	mov    eax,ds:0x1007ff90
10048202:	test   eax,eax
10048204:	je     0x100482e2
1004820a:	mov    ecx,DWORD PTR ds:0x1008259c
10048210:	mov    esi,DWORD PTR ds:0x100661d0
10048216:	push   0x4000
1004821b:	shl    ecx,0xf
1004821e:	add    ecx,DWORD PTR [eax+0xc]
10048221:	mov    ebx,0x8000
10048226:	push   ebx
10048227:	push   ecx
10048228:	call   esi
1004822a:	mov    ecx,DWORD PTR ds:0x1008259c
10048230:	mov    eax,ds:0x1007ff90
10048235:	mov    edx,0x80000000
1004823a:	shr    edx,cl
1004823c:	or     DWORD PTR [eax+0x8],edx
1004823f:	mov    eax,ds:0x1007ff90
10048244:	mov    eax,DWORD PTR [eax+0x10]
10048247:	mov    ecx,DWORD PTR ds:0x1008259c
1004824d:	and    DWORD PTR [eax+ecx*4+0xc4],0x0
10048255:	mov    eax,ds:0x1007ff90
1004825a:	mov    eax,DWORD PTR [eax+0x10]
1004825d:	dec    BYTE PTR [eax+0x43]
10048260:	mov    eax,ds:0x1007ff90
10048265:	mov    ecx,DWORD PTR [eax+0x10]
10048268:	cmp    BYTE PTR [ecx+0x43],0x0
1004826c:	jne    0x10048277
1004826e:	and    DWORD PTR [eax+0x4],0xfffffffe
10048272:	mov    eax,ds:0x1007ff90
10048277:	cmp    DWORD PTR [eax+0x8],0xffffffff
1004827b:	jne    0x100482e2
1004827d:	push   ebx
1004827e:	push   0x0
10048280:	push   DWORD PTR [eax+0xc]
10048283:	call   esi
10048285:	mov    eax,ds:0x1007ff90
1004828a:	push   DWORD PTR [eax+0x10]
1004828d:	push   0x0
1004828f:	push   DWORD PTR ds:0x1007fe38
10048295:	call   DWORD PTR ds:0x10066188
1004829b:	mov    ecx,DWORD PTR ds:0x10082588
100482a1:	mov    eax,ds:0x1007ff90
100482a6:	imul   ecx,ecx,0x14
100482a9:	mov    edx,DWORD PTR ds:0x1008258c
100482af:	sub    ecx,eax
100482b1:	lea    ecx,[ecx+edx*1-0x14]
100482b5:	push   ecx
100482b6:	lea    ecx,[eax+0x14]
100482b9:	push   ecx
100482ba:	push   eax
100482bb:	call   0x10045960
100482c0:	mov    eax,DWORD PTR [ebp+0x8]
100482c3:	add    esp,0xc
100482c6:	dec    DWORD PTR ds:0x10082588
100482cc:	cmp    eax,DWORD PTR ds:0x1007ff90
100482d2:	jbe    0x100482d8
100482d4:	sub    DWORD PTR [ebp+0x8],0x14
100482d8:	mov    eax,ds:0x1008258c
100482dd:	mov    ds:0x10082594,eax
100482e2:	mov    eax,DWORD PTR [ebp+0x8]
100482e5:	mov    ds:0x1007ff90,eax
100482ea:	mov    DWORD PTR ds:0x1008259c,edi
100482f0:	pop    ebx
100482f1:	pop    edi
100482f2:	pop    esi
100482f3:	leave  
100482f4:	ret    
100482f5:	mov    eax,ds:0x10082598
100482fa:	push   esi
100482fb:	mov    esi,DWORD PTR ds:0x10082588
10048301:	push   edi
10048302:	xor    edi,edi
10048304:	cmp    esi,eax
10048306:	jne    0x1004833c
10048308:	add    eax,0x10
1004830b:	imul   eax,eax,0x14
1004830e:	push   eax
1004830f:	push   DWORD PTR ds:0x1008258c
10048315:	push   edi
10048316:	push   DWORD PTR ds:0x1007fe38
1004831c:	call   DWORD PTR ds:0x100661a0
10048322:	cmp    eax,edi
10048324:	jne    0x1004832a
10048326:	xor    eax,eax
10048328:	jmp    0x100483a2
1004832a:	add    DWORD PTR ds:0x10082598,0x10
10048331:	mov    esi,DWORD PTR ds:0x10082588
10048337:	mov    ds:0x1008258c,eax
1004833c:	imul   esi,esi,0x14
1004833f:	add    esi,DWORD PTR ds:0x1008258c
10048345:	push   0x41c4
1004834a:	push   0x8
1004834c:	push   DWORD PTR ds:0x1007fe38
10048352:	call   DWORD PTR ds:0x1006618c
10048358:	cmp    eax,edi
1004835a:	mov    DWORD PTR [esi+0x10],eax
1004835d:	je     0x10048326
1004835f:	push   0x4
10048361:	push   0x2000
10048366:	push   0x100000
1004836b:	push   edi
1004836c:	call   DWORD PTR ds:0x10066194
10048372:	cmp    eax,edi
10048374:	mov    DWORD PTR [esi+0xc],eax
10048377:	jne    0x1004838b
10048379:	push   DWORD PTR [esi+0x10]
1004837c:	push   edi
1004837d:	push   DWORD PTR ds:0x1007fe38
10048383:	call   DWORD PTR ds:0x10066188
10048389:	jmp    0x10048326
1004838b:	or     DWORD PTR [esi+0x8],0xffffffff
1004838f:	mov    DWORD PTR [esi],edi
10048391:	mov    DWORD PTR [esi+0x4],edi
10048394:	inc    DWORD PTR ds:0x10082588
1004839a:	mov    eax,DWORD PTR [esi+0x10]
1004839d:	or     DWORD PTR [eax],0xffffffff
100483a0:	mov    eax,esi
100483a2:	pop    edi
100483a3:	pop    esi
100483a4:	ret    
100483a5:	push   ebp
100483a6:	mov    ebp,esp
100483a8:	push   ecx
100483a9:	push   ecx
100483aa:	mov    ecx,DWORD PTR [ebp+0x8]
100483ad:	mov    eax,DWORD PTR [ecx+0x8]
100483b0:	push   ebx
100483b1:	push   esi
100483b2:	mov    esi,DWORD PTR [ecx+0x10]
100483b5:	push   edi
100483b6:	xor    ebx,ebx
100483b8:	jmp    0x100483bd
100483ba:	add    eax,eax
100483bc:	inc    ebx
100483bd:	test   eax,eax
100483bf:	jge    0x100483ba
100483c1:	mov    eax,ebx
100483c3:	imul   eax,eax,0x204
100483c9:	lea    eax,[eax+esi*1+0x144]
100483d0:	push   0x3f
100483d2:	mov    DWORD PTR [ebp-0x8],eax
100483d5:	pop    edx
100483d6:	mov    DWORD PTR [eax+0x8],eax
100483d9:	mov    DWORD PTR [eax+0x4],eax
100483dc:	add    eax,0x8
100483df:	dec    edx
100483e0:	jne    0x100483d6
100483e2:	push   0x4
100483e4:	mov    edi,ebx
100483e6:	push   0x1000
100483eb:	shl    edi,0xf
100483ee:	add    edi,DWORD PTR [ecx+0xc]
100483f1:	push   0x8000
100483f6:	push   edi
100483f7:	call   DWORD PTR ds:0x10066194
100483fd:	test   eax,eax
100483ff:	jne    0x10048409
10048401:	or     eax,0xffffffff
10048404:	jmp    0x100484a6
10048409:	lea    edx,[edi+0x7000]
1004840f:	cmp    edi,edx
10048411:	mov    DWORD PTR [ebp-0x4],edx
10048414:	ja     0x10048459
10048416:	mov    ecx,edx
10048418:	sub    ecx,edi
1004841a:	shr    ecx,0xc
1004841d:	lea    eax,[edi+0x10]
10048420:	inc    ecx
10048421:	or     DWORD PTR [eax-0x8],0xffffffff
10048425:	or     DWORD PTR [eax+0xfec],0xffffffff
1004842c:	lea    edx,[eax+0xffc]
10048432:	mov    DWORD PTR [eax],edx
10048434:	lea    edx,[eax-0x1004]
1004843a:	mov    DWORD PTR [eax-0x4],0xff0
10048441:	mov    DWORD PTR [eax+0x4],edx
10048444:	mov    DWORD PTR [eax+0xfe8],0xff0
1004844e:	add    eax,0x1000
10048453:	dec    ecx
10048454:	jne    0x10048421
10048456:	mov    edx,DWORD PTR [ebp-0x4]
10048459:	mov    eax,DWORD PTR [ebp-0x8]
1004845c:	add    eax,0x1f8
10048461:	lea    ecx,[edi+0xc]
10048464:	mov    DWORD PTR [eax+0x4],ecx
10048467:	mov    DWORD PTR [ecx+0x8],eax
1004846a:	lea    ecx,[edx+0xc]
1004846d:	mov    DWORD PTR [eax+0x8],ecx
10048470:	mov    DWORD PTR [ecx+0x4],eax
10048473:	and    DWORD PTR [esi+ebx*4+0x44],0x0
10048478:	xor    edi,edi
1004847a:	inc    edi
1004847b:	mov    DWORD PTR [esi+ebx*4+0xc4],edi
10048482:	mov    al,BYTE PTR [esi+0x43]
10048485:	mov    cl,al
10048487:	inc    cl
10048489:	test   al,al
1004848b:	mov    eax,DWORD PTR [ebp+0x8]
1004848e:	mov    BYTE PTR [esi+0x43],cl
10048491:	jne    0x10048496
10048493:	or     DWORD PTR [eax+0x4],edi
10048496:	mov    edx,0x80000000
1004849b:	mov    ecx,ebx
1004849d:	shr    edx,cl
1004849f:	not    edx
100484a1:	and    DWORD PTR [eax+0x8],edx
100484a4:	mov    eax,ebx
100484a6:	pop    edi
100484a7:	pop    esi
100484a8:	pop    ebx
100484a9:	leave  
100484aa:	ret    
100484ab:	push   ebp
100484ac:	mov    ebp,esp
100484ae:	sub    esp,0xc
100484b1:	mov    ecx,DWORD PTR [ebp+0x8]
100484b4:	mov    eax,DWORD PTR [ecx+0x10]
100484b7:	push   ebx
100484b8:	push   esi
100484b9:	mov    esi,DWORD PTR [ebp+0x10]
100484bc:	push   edi
100484bd:	mov    edi,DWORD PTR [ebp+0xc]
100484c0:	mov    edx,edi
100484c2:	sub    edx,DWORD PTR [ecx+0xc]
100484c5:	add    esi,0x17
100484c8:	shr    edx,0xf
100484cb:	mov    ecx,edx
100484cd:	imul   ecx,ecx,0x204
100484d3:	lea    ecx,[ecx+eax*1+0x144]
100484da:	mov    DWORD PTR [ebp-0xc],ecx
100484dd:	mov    ecx,DWORD PTR [edi-0x4]
100484e0:	and    esi,0xfffffff0
100484e3:	dec    ecx
100484e4:	cmp    esi,ecx
100484e6:	lea    edi,[ecx+edi*1-0x4]
100484ea:	mov    ebx,DWORD PTR [edi]
100484ec:	mov    DWORD PTR [ebp+0x10],ecx
100484ef:	mov    DWORD PTR [ebp-0x4],ebx
100484f2:	jle    0x1004864d
100484f8:	test   bl,0x1
100484fb:	jne    0x10048646
10048501:	add    ebx,ecx
10048503:	cmp    esi,ebx
10048505:	jg     0x10048646
1004850b:	mov    ecx,DWORD PTR [ebp-0x4]
1004850e:	sar    ecx,0x4
10048511:	dec    ecx
10048512:	cmp    ecx,0x3f
10048515:	mov    DWORD PTR [ebp-0x8],ecx
10048518:	jbe    0x10048520
1004851a:	push   0x3f
1004851c:	pop    ecx
1004851d:	mov    DWORD PTR [ebp-0x8],ecx
10048520:	mov    ebx,DWORD PTR [edi+0x4]
10048523:	cmp    ebx,DWORD PTR [edi+0x8]
10048526:	jne    0x1004856b
10048528:	cmp    ecx,0x20
1004852b:	mov    ebx,0x80000000
10048530:	jae    0x1004854c
10048532:	shr    ebx,cl
10048534:	mov    ecx,DWORD PTR [ebp-0x8]
10048537:	lea    ecx,[ecx+eax*1+0x4]
1004853b:	not    ebx
1004853d:	and    DWORD PTR [eax+edx*4+0x44],ebx
10048541:	dec    BYTE PTR [ecx]
10048543:	jne    0x1004856b
10048545:	mov    ecx,DWORD PTR [ebp+0x8]
10048548:	and    DWORD PTR [ecx],ebx
1004854a:	jmp    0x1004856b
1004854c:	add    ecx,0xffffffe0
1004854f:	shr    ebx,cl
10048551:	mov    ecx,DWORD PTR [ebp-0x8]
10048554:	lea    ecx,[ecx+eax*1+0x4]
10048558:	not    ebx
1004855a:	and    DWORD PTR [eax+edx*4+0xc4],ebx
10048561:	dec    BYTE PTR [ecx]
10048563:	jne    0x1004856b
10048565:	mov    ecx,DWORD PTR [ebp+0x8]
10048568:	and    DWORD PTR [ecx+0x4],ebx
1004856b:	mov    ecx,DWORD PTR [edi+0x8]
1004856e:	mov    ebx,DWORD PTR [edi+0x4]
10048571:	mov    DWORD PTR [ecx+0x4],ebx
10048574:	mov    ecx,DWORD PTR [edi+0x4]
10048577:	mov    edi,DWORD PTR [edi+0x8]
1004857a:	mov    DWORD PTR [ecx+0x8],edi
1004857d:	mov    ecx,DWORD PTR [ebp+0x10]
10048580:	sub    ecx,esi
10048582:	add    DWORD PTR [ebp-0x4],ecx
10048585:	cmp    DWORD PTR [ebp-0x4],0x0
10048589:	jle    0x10048634
1004858f:	mov    edi,DWORD PTR [ebp-0x4]
10048592:	mov    ecx,DWORD PTR [ebp+0xc]
10048595:	sar    edi,0x4
10048598:	dec    edi
10048599:	cmp    edi,0x3f
1004859c:	lea    ecx,[ecx+esi*1-0x4]
100485a0:	jbe    0x100485a5
100485a2:	push   0x3f
100485a4:	pop    edi
100485a5:	mov    ebx,DWORD PTR [ebp-0xc]
100485a8:	lea    ebx,[ebx+edi*8]
100485ab:	mov    DWORD PTR [ebp+0x10],ebx
100485ae:	mov    ebx,DWORD PTR [ebx+0x4]
100485b1:	mov    DWORD PTR [ecx+0x4],ebx
100485b4:	mov    ebx,DWORD PTR [ebp+0x10]
100485b7:	mov    DWORD PTR [ecx+0x8],ebx
100485ba:	mov    DWORD PTR [ebx+0x4],ecx
100485bd:	mov    ebx,DWORD PTR [ecx+0x4]
100485c0:	mov    DWORD PTR [ebx+0x8],ecx
100485c3:	mov    ebx,DWORD PTR [ecx+0x4]
100485c6:	cmp    ebx,DWORD PTR [ecx+0x8]
100485c9:	jne    0x10048622
100485cb:	mov    cl,BYTE PTR [edi+eax*1+0x4]
100485cf:	mov    BYTE PTR [ebp+0x13],cl
100485d2:	inc    cl
100485d4:	cmp    edi,0x20
100485d7:	mov    BYTE PTR [edi+eax*1+0x4],cl
100485db:	jae    0x100485f9
100485dd:	cmp    BYTE PTR [ebp+0x13],0x0
100485e1:	jne    0x100485f1
100485e3:	mov    ecx,edi
100485e5:	mov    ebx,0x80000000
100485ea:	shr    ebx,cl
100485ec:	mov    ecx,DWORD PTR [ebp+0x8]
100485ef:	or     DWORD PTR [ecx],ebx
100485f1:	lea    eax,[eax+edx*4+0x44]
100485f5:	mov    ecx,edi
100485f7:	jmp    0x10048619
100485f9:	cmp    BYTE PTR [ebp+0x13],0x0
100485fd:	jne    0x1004860f
100485ff:	lea    ecx,[edi-0x20]
10048602:	mov    ebx,0x80000000
10048607:	shr    ebx,cl
10048609:	mov    ecx,DWORD PTR [ebp+0x8]
1004860c:	or     DWORD PTR [ecx+0x4],ebx
1004860f:	lea    eax,[eax+edx*4+0xc4]
10048616:	lea    ecx,[edi-0x20]
10048619:	mov    edx,0x80000000
1004861e:	shr    edx,cl
10048620:	or     DWORD PTR [eax],edx
10048622:	mov    edx,DWORD PTR [ebp+0xc]
10048625:	mov    ecx,DWORD PTR [ebp-0x4]
10048628:	lea    eax,[edx+esi*1-0x4]
1004862c:	mov    DWORD PTR [eax],ecx
1004862e:	mov    DWORD PTR [ecx+eax*1-0x4],ecx
10048632:	jmp    0x10048637
10048634:	mov    edx,DWORD PTR [ebp+0xc]
10048637:	lea    eax,[esi+0x1]
1004863a:	mov    DWORD PTR [edx-0x4],eax
1004863d:	mov    DWORD PTR [edx+esi*1-0x8],eax
10048641:	jmp    0x10048782
10048646:	xor    eax,eax
10048648:	jmp    0x10048785
1004864d:	jge    0x10048782
10048653:	mov    ebx,DWORD PTR [ebp+0xc]
10048656:	sub    DWORD PTR [ebp+0x10],esi
10048659:	lea    ecx,[esi+0x1]
1004865c:	mov    DWORD PTR [ebx-0x4],ecx
1004865f:	lea    ebx,[ebx+esi*1-0x4]
10048663:	mov    esi,DWORD PTR [ebp+0x10]
10048666:	sar    esi,0x4
10048669:	dec    esi
1004866a:	cmp    esi,0x3f
1004866d:	mov    DWORD PTR [ebp+0xc],ebx
10048670:	mov    DWORD PTR [ebx-0x4],ecx
10048673:	jbe    0x10048678
10048675:	push   0x3f
10048677:	pop    esi
10048678:	test   BYTE PTR [ebp-0x4],0x1
1004867c:	jne    0x10048702
10048682:	mov    esi,DWORD PTR [ebp-0x4]
10048685:	sar    esi,0x4
10048688:	dec    esi
10048689:	cmp    esi,0x3f
1004868c:	jbe    0x10048691
1004868e:	push   0x3f
10048690:	pop    esi
10048691:	mov    ecx,DWORD PTR [edi+0x4]
10048694:	cmp    ecx,DWORD PTR [edi+0x8]
10048697:	jne    0x100486db
10048699:	cmp    esi,0x20
1004869c:	mov    ebx,0x80000000
100486a1:	jae    0x100486bc
100486a3:	mov    ecx,esi
100486a5:	shr    ebx,cl
100486a7:	lea    esi,[esi+eax*1+0x4]
100486ab:	not    ebx
100486ad:	and    DWORD PTR [eax+edx*4+0x44],ebx
100486b1:	dec    BYTE PTR [esi]
100486b3:	jne    0x100486d8
100486b5:	mov    ecx,DWORD PTR [ebp+0x8]
100486b8:	and    DWORD PTR [ecx],ebx
100486ba:	jmp    0x100486d8
100486bc:	lea    ecx,[esi-0x20]
100486bf:	shr    ebx,cl
100486c1:	lea    ecx,[esi+eax*1+0x4]
100486c5:	not    ebx
100486c7:	and    DWORD PTR [eax+edx*4+0xc4],ebx
100486ce:	dec    BYTE PTR [ecx]
100486d0:	jne    0x100486d8
100486d2:	mov    ecx,DWORD PTR [ebp+0x8]
100486d5:	and    DWORD PTR [ecx+0x4],ebx
100486d8:	mov    ebx,DWORD PTR [ebp+0xc]
100486db:	mov    ecx,DWORD PTR [edi+0x8]
100486de:	mov    esi,DWORD PTR [edi+0x4]
100486e1:	mov    DWORD PTR [ecx+0x4],esi
100486e4:	mov    esi,DWORD PTR [edi+0x8]
100486e7:	mov    ecx,DWORD PTR [edi+0x4]
100486ea:	mov    DWORD PTR [ecx+0x8],esi
100486ed:	mov    esi,DWORD PTR [ebp+0x10]
100486f0:	add    esi,DWORD PTR [ebp-0x4]
100486f3:	mov    DWORD PTR [ebp+0x10],esi
100486f6:	sar    esi,0x4
100486f9:	dec    esi
100486fa:	cmp    esi,0x3f
100486fd:	jbe    0x10048702
100486ff:	push   0x3f
10048701:	pop    esi
10048702:	mov    ecx,DWORD PTR [ebp-0xc]
10048705:	lea    ecx,[ecx+esi*8]
10048708:	mov    edi,DWORD PTR [ecx+0x4]
1004870b:	mov    DWORD PTR [ebx+0x8],ecx
1004870e:	mov    DWORD PTR [ebx+0x4],edi
10048711:	mov    DWORD PTR [ecx+0x4],ebx
10048714:	mov    ecx,DWORD PTR [ebx+0x4]
10048717:	mov    DWORD PTR [ecx+0x8],ebx
1004871a:	mov    ecx,DWORD PTR [ebx+0x4]
1004871d:	cmp    ecx,DWORD PTR [ebx+0x8]
10048720:	jne    0x10048779
10048722:	mov    cl,BYTE PTR [esi+eax*1+0x4]
10048726:	mov    BYTE PTR [ebp+0xf],cl
10048729:	inc    cl
1004872b:	cmp    esi,0x20
1004872e:	mov    BYTE PTR [esi+eax*1+0x4],cl
10048732:	jae    0x10048750
10048734:	cmp    BYTE PTR [ebp+0xf],0x0
10048738:	jne    0x10048748
1004873a:	mov    ecx,esi
1004873c:	mov    edi,0x80000000
10048741:	shr    edi,cl
10048743:	mov    ecx,DWORD PTR [ebp+0x8]
10048746:	or     DWORD PTR [ecx],edi
10048748:	lea    eax,[eax+edx*4+0x44]
1004874c:	mov    ecx,esi
1004874e:	jmp    0x10048770
10048750:	cmp    BYTE PTR [ebp+0xf],0x0
10048754:	jne    0x10048766
10048756:	lea    ecx,[esi-0x20]
10048759:	mov    edi,0x80000000
1004875e:	shr    edi,cl
10048760:	mov    ecx,DWORD PTR [ebp+0x8]
10048763:	or     DWORD PTR [ecx+0x4],edi
10048766:	lea    eax,[eax+edx*4+0xc4]
1004876d:	lea    ecx,[esi-0x20]
10048770:	mov    edx,0x80000000
10048775:	shr    edx,cl
10048777:	or     DWORD PTR [eax],edx
10048779:	mov    eax,DWORD PTR [ebp+0x10]
1004877c:	mov    DWORD PTR [ebx],eax
1004877e:	mov    DWORD PTR [eax+ebx*1-0x4],eax
10048782:	xor    eax,eax
10048784:	inc    eax
10048785:	pop    edi
10048786:	pop    esi
10048787:	pop    ebx
10048788:	leave  
10048789:	ret    
1004878a:	push   ebp
1004878b:	mov    ebp,esp
1004878d:	sub    esp,0x14
10048790:	mov    eax,ds:0x10082588
10048795:	mov    ecx,DWORD PTR [ebp+0x8]
10048798:	imul   eax,eax,0x14
1004879b:	add    eax,DWORD PTR ds:0x1008258c
100487a1:	add    ecx,0x17
100487a4:	and    ecx,0xfffffff0
100487a7:	mov    DWORD PTR [ebp-0x10],ecx
100487aa:	sar    ecx,0x4
100487ad:	push   ebx
100487ae:	dec    ecx
100487af:	cmp    ecx,0x20
100487b2:	push   esi
100487b3:	push   edi
100487b4:	jge    0x100487c1
100487b6:	or     esi,0xffffffff
100487b9:	shr    esi,cl
100487bb:	or     DWORD PTR [ebp-0x8],0xffffffff
100487bf:	jmp    0x100487ce
100487c1:	add    ecx,0xffffffe0
100487c4:	or     edx,0xffffffff
100487c7:	xor    esi,esi
100487c9:	shr    edx,cl
100487cb:	mov    DWORD PTR [ebp-0x8],edx
100487ce:	mov    ecx,DWORD PTR ds:0x10082594
100487d4:	mov    ebx,ecx
100487d6:	jmp    0x100487e9
100487d8:	mov    edx,DWORD PTR [ebx+0x4]
100487db:	mov    edi,DWORD PTR [ebx]
100487dd:	and    edx,DWORD PTR [ebp-0x8]
100487e0:	and    edi,esi
100487e2:	or     edx,edi
100487e4:	jne    0x100487f0
100487e6:	add    ebx,0x14
100487e9:	cmp    ebx,eax
100487eb:	mov    DWORD PTR [ebp+0x8],ebx
100487ee:	jb     0x100487d8
100487f0:	cmp    ebx,eax
100487f2:	jne    0x10048873
100487f4:	mov    ebx,DWORD PTR ds:0x1008258c
100487fa:	jmp    0x1004880d
100487fc:	mov    edx,DWORD PTR [ebx+0x4]
100487ff:	mov    edi,DWORD PTR [ebx]
10048801:	and    edx,DWORD PTR [ebp-0x8]
10048804:	and    edi,esi
10048806:	or     edx,edi
10048808:	jne    0x10048814
1004880a:	add    ebx,0x14
1004880d:	cmp    ebx,ecx
1004880f:	mov    DWORD PTR [ebp+0x8],ebx
10048812:	jb     0x100487fc
10048814:	cmp    ebx,ecx
10048816:	jne    0x10048873
10048818:	jmp    0x10048826
1004881a:	cmp    DWORD PTR [ebx+0x8],0x0
1004881e:	jne    0x1004882a
10048820:	add    ebx,0x14
10048823:	mov    DWORD PTR [ebp+0x8],ebx
10048826:	cmp    ebx,eax
10048828:	jb     0x1004881a
1004882a:	cmp    ebx,eax
1004882c:	jne    0x1004885f
1004882e:	mov    ebx,DWORD PTR ds:0x1008258c
10048834:	jmp    0x1004883f
10048836:	cmp    DWORD PTR [ebx+0x8],0x0
1004883a:	jne    0x10048846
1004883c:	add    ebx,0x14
1004883f:	cmp    ebx,ecx
10048841:	mov    DWORD PTR [ebp+0x8],ebx
10048844:	jb     0x10048836
10048846:	cmp    ebx,ecx
10048848:	jne    0x1004885f
1004884a:	call   0x100482f5
1004884f:	mov    ebx,eax
10048851:	test   ebx,ebx
10048853:	mov    DWORD PTR [ebp+0x8],ebx
10048856:	jne    0x1004885f
10048858:	xor    eax,eax
1004885a:	jmp    0x10048a68
1004885f:	push   ebx
10048860:	call   0x100483a5
10048865:	pop    ecx
10048866:	mov    ecx,DWORD PTR [ebx+0x10]
10048869:	mov    DWORD PTR [ecx],eax
1004886b:	mov    eax,DWORD PTR [ebx+0x10]
1004886e:	cmp    DWORD PTR [eax],0xffffffff
10048871:	je     0x10048858
10048873:	mov    DWORD PTR ds:0x10082594,ebx
10048879:	mov    eax,DWORD PTR [ebx+0x10]
1004887c:	mov    edx,DWORD PTR [eax]
1004887e:	cmp    edx,0xffffffff
10048881:	mov    DWORD PTR [ebp-0x4],edx
10048884:	je     0x1004889a
10048886:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
1004888d:	mov    edi,DWORD PTR [eax+edx*4+0x44]
10048891:	and    ecx,DWORD PTR [ebp-0x8]
10048894:	and    edi,esi
10048896:	or     ecx,edi
10048898:	jne    0x100488c3
1004889a:	and    DWORD PTR [ebp-0x4],0x0
1004889e:	mov    edx,DWORD PTR [eax+0xc4]
100488a4:	lea    ecx,[eax+0x44]
100488a7:	mov    edi,DWORD PTR [ecx]
100488a9:	and    edx,DWORD PTR [ebp-0x8]
100488ac:	and    edi,esi
100488ae:	or     edx,edi
100488b0:	jne    0x100488c0
100488b2:	inc    DWORD PTR [ebp-0x4]
100488b5:	mov    edx,DWORD PTR [ecx+0x84]
100488bb:	add    ecx,0x4
100488be:	jmp    0x100488a7
100488c0:	mov    edx,DWORD PTR [ebp-0x4]
100488c3:	mov    ecx,edx
100488c5:	imul   ecx,ecx,0x204
100488cb:	lea    ecx,[ecx+eax*1+0x144]
100488d2:	mov    DWORD PTR [ebp-0xc],ecx
100488d5:	mov    ecx,DWORD PTR [eax+edx*4+0x44]
100488d9:	xor    edi,edi
100488db:	and    ecx,esi
100488dd:	jne    0x100488f1
100488df:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
100488e6:	and    ecx,DWORD PTR [ebp-0x8]
100488e9:	push   0x20
100488eb:	pop    edi
100488ec:	jmp    0x100488f1
100488ee:	add    ecx,ecx
100488f0:	inc    edi
100488f1:	test   ecx,ecx
100488f3:	jge    0x100488ee
100488f5:	mov    ecx,DWORD PTR [ebp-0xc]
100488f8:	mov    edx,DWORD PTR [ecx+edi*8+0x4]
100488fc:	mov    ecx,DWORD PTR [edx]
100488fe:	sub    ecx,DWORD PTR [ebp-0x10]
10048901:	mov    esi,ecx
10048903:	sar    esi,0x4
10048906:	dec    esi
10048907:	cmp    esi,0x3f
1004890a:	mov    DWORD PTR [ebp-0x8],ecx
1004890d:	jle    0x10048912
1004890f:	push   0x3f
10048911:	pop    esi
10048912:	cmp    esi,edi
10048914:	je     0x10048a1b
1004891a:	mov    ecx,DWORD PTR [edx+0x4]
1004891d:	cmp    ecx,DWORD PTR [edx+0x8]
10048920:	jne    0x1004897e
10048922:	cmp    edi,0x20
10048925:	mov    ebx,0x80000000
1004892a:	jge    0x10048952
1004892c:	mov    ecx,edi
1004892e:	shr    ebx,cl
10048930:	mov    ecx,DWORD PTR [ebp-0x4]
10048933:	lea    edi,[eax+edi*1+0x4]
10048937:	not    ebx
10048939:	mov    DWORD PTR [ebp-0x14],ebx
1004893c:	and    ebx,DWORD PTR [eax+ecx*4+0x44]
10048940:	mov    DWORD PTR [eax+ecx*4+0x44],ebx
10048944:	dec    BYTE PTR [edi]
10048946:	jne    0x1004897b
10048948:	mov    ecx,DWORD PTR [ebp-0x14]
1004894b:	mov    ebx,DWORD PTR [ebp+0x8]
1004894e:	and    DWORD PTR [ebx],ecx
10048950:	jmp    0x1004897e
10048952:	lea    ecx,[edi-0x20]
10048955:	shr    ebx,cl
10048957:	mov    ecx,DWORD PTR [ebp-0x4]
1004895a:	lea    ecx,[eax+ecx*4+0xc4]
10048961:	lea    edi,[eax+edi*1+0x4]
10048965:	not    ebx
10048967:	and    DWORD PTR [ecx],ebx
10048969:	dec    BYTE PTR [edi]
1004896b:	mov    DWORD PTR [ebp-0x14],ebx
1004896e:	jne    0x1004897b
10048970:	mov    ebx,DWORD PTR [ebp+0x8]
10048973:	mov    ecx,DWORD PTR [ebp-0x14]
10048976:	and    DWORD PTR [ebx+0x4],ecx
10048979:	jmp    0x1004897e
1004897b:	mov    ebx,DWORD PTR [ebp+0x8]
1004897e:	cmp    DWORD PTR [ebp-0x8],0x0
10048982:	mov    ecx,DWORD PTR [edx+0x8]
10048985:	mov    edi,DWORD PTR [edx+0x4]
10048988:	mov    DWORD PTR [ecx+0x4],edi
1004898b:	mov    ecx,DWORD PTR [edx+0x4]
1004898e:	mov    edi,DWORD PTR [edx+0x8]
10048991:	mov    DWORD PTR [ecx+0x8],edi
10048994:	je     0x10048a27
1004899a:	mov    ecx,DWORD PTR [ebp-0xc]
1004899d:	lea    ecx,[ecx+esi*8]
100489a0:	mov    edi,DWORD PTR [ecx+0x4]
100489a3:	mov    DWORD PTR [edx+0x8],ecx
100489a6:	mov    DWORD PTR [edx+0x4],edi
100489a9:	mov    DWORD PTR [ecx+0x4],edx
100489ac:	mov    ecx,DWORD PTR [edx+0x4]
100489af:	mov    DWORD PTR [ecx+0x8],edx
100489b2:	mov    ecx,DWORD PTR [edx+0x4]
100489b5:	cmp    ecx,DWORD PTR [edx+0x8]
100489b8:	jne    0x10048a18
100489ba:	mov    cl,BYTE PTR [esi+eax*1+0x4]
100489be:	mov    BYTE PTR [ebp+0xb],cl
100489c1:	inc    cl
100489c3:	cmp    esi,0x20
100489c6:	mov    BYTE PTR [esi+eax*1+0x4],cl
100489ca:	jge    0x100489ef
100489cc:	cmp    BYTE PTR [ebp+0xb],0x0
100489d0:	jne    0x100489dd
100489d2:	mov    edi,0x80000000
100489d7:	mov    ecx,esi
100489d9:	shr    edi,cl
100489db:	or     DWORD PTR [ebx],edi
100489dd:	mov    ecx,esi
100489df:	mov    edi,0x80000000
100489e4:	shr    edi,cl
100489e6:	mov    ecx,DWORD PTR [ebp-0x4]
100489e9:	or     DWORD PTR [eax+ecx*4+0x44],edi
100489ed:	jmp    0x10048a18
100489ef:	cmp    BYTE PTR [ebp+0xb],0x0
100489f3:	jne    0x10048a02
100489f5:	lea    ecx,[esi-0x20]
100489f8:	mov    edi,0x80000000
100489fd:	shr    edi,cl
100489ff:	or     DWORD PTR [ebx+0x4],edi
10048a02:	mov    ecx,DWORD PTR [ebp-0x4]
10048a05:	lea    edi,[eax+ecx*4+0xc4]
10048a0c:	lea    ecx,[esi-0x20]
10048a0f:	mov    esi,0x80000000
10048a14:	shr    esi,cl
10048a16:	or     DWORD PTR [edi],esi
10048a18:	mov    ecx,DWORD PTR [ebp-0x8]
10048a1b:	test   ecx,ecx
10048a1d:	je     0x10048a2a
10048a1f:	mov    DWORD PTR [edx],ecx
10048a21:	mov    DWORD PTR [ecx+edx*1-0x4],ecx
10048a25:	jmp    0x10048a2a
10048a27:	mov    ecx,DWORD PTR [ebp-0x8]
10048a2a:	mov    esi,DWORD PTR [ebp-0x10]
10048a2d:	add    edx,ecx
10048a2f:	lea    ecx,[esi+0x1]
10048a32:	mov    DWORD PTR [edx],ecx
10048a34:	mov    DWORD PTR [edx+esi*1-0x4],ecx
10048a38:	mov    esi,DWORD PTR [ebp-0xc]
10048a3b:	mov    ecx,DWORD PTR [esi]
10048a3d:	test   ecx,ecx
10048a3f:	lea    edi,[ecx+0x1]
10048a42:	mov    DWORD PTR [esi],edi
10048a44:	jne    0x10048a60
10048a46:	cmp    ebx,DWORD PTR ds:0x1007ff90
10048a4c:	jne    0x10048a60
10048a4e:	mov    ecx,DWORD PTR [ebp-0x4]
10048a51:	cmp    ecx,DWORD PTR ds:0x1008259c
10048a57:	jne    0x10048a60
10048a59:	and    DWORD PTR ds:0x1007ff90,0x0
10048a60:	mov    ecx,DWORD PTR [ebp-0x4]
10048a63:	mov    DWORD PTR [eax],ecx
10048a65:	lea    eax,[edx+0x4]
10048a68:	pop    edi
10048a69:	pop    esi
10048a6a:	pop    ebx
10048a6b:	leave  
10048a6c:	ret    
10048a6d:	push   ebp
10048a6e:	mov    ebp,esp
10048a70:	push   ecx
10048a71:	push   esi
10048a72:	mov    esi,DWORD PTR [ebp+0xc]
10048a75:	push   esi
10048a76:	call   0x1004d40c
10048a7b:	mov    DWORD PTR [ebp+0xc],eax
10048a7e:	mov    eax,DWORD PTR [esi+0xc]
10048a81:	test   al,0x82
10048a83:	pop    ecx
10048a84:	jne    0x10048a9d
10048a86:	call   0x10046df5
10048a8b:	mov    DWORD PTR [eax],0x9
10048a91:	or     DWORD PTR [esi+0xc],0x20
10048a95:	or     eax,0xffffffff
10048a98:	jmp    0x10048bca
10048a9d:	test   al,0x40
10048a9f:	je     0x10048aae
10048aa1:	call   0x10046df5
10048aa6:	mov    DWORD PTR [eax],0x22
10048aac:	jmp    0x10048a91
10048aae:	push   ebx
10048aaf:	xor    ebx,ebx
10048ab1:	test   al,0x1
10048ab3:	je     0x10048acb
10048ab5:	test   al,0x10
10048ab7:	mov    DWORD PTR [esi+0x4],ebx
10048aba:	je     0x10048b45
10048ac0:	mov    ecx,DWORD PTR [esi+0x8]
10048ac3:	and    eax,0xfffffffe
10048ac6:	mov    DWORD PTR [esi],ecx
10048ac8:	mov    DWORD PTR [esi+0xc],eax
10048acb:	mov    eax,DWORD PTR [esi+0xc]
10048ace:	and    eax,0xffffffef
10048ad1:	or     eax,0x2
10048ad4:	test   ax,0x10c
10048ad8:	mov    DWORD PTR [esi+0xc],eax
10048adb:	mov    DWORD PTR [esi+0x4],ebx
10048ade:	mov    DWORD PTR [ebp-0x4],ebx
10048ae1:	jne    0x10048b0f
10048ae3:	call   0x1004d291
10048ae8:	add    eax,0x20
10048aeb:	cmp    esi,eax
10048aed:	je     0x10048afb
10048aef:	call   0x1004d291
10048af4:	add    eax,0x40
10048af7:	cmp    esi,eax
10048af9:	jne    0x10048b08
10048afb:	push   DWORD PTR [ebp+0xc]
10048afe:	call   0x1004d233
10048b03:	test   eax,eax
10048b05:	pop    ecx
10048b06:	jne    0x10048b0f
10048b08:	push   esi
10048b09:	call   0x1004d1ef
10048b0e:	pop    ecx
10048b0f:	test   WORD PTR [esi+0xc],0x108
10048b15:	push   edi
10048b16:	je     0x10048b9c
10048b1c:	mov    eax,DWORD PTR [esi+0x8]
10048b1f:	mov    edi,DWORD PTR [esi]
10048b21:	lea    ecx,[eax+0x1]
10048b24:	mov    DWORD PTR [esi],ecx
10048b26:	mov    ecx,DWORD PTR [esi+0x18]
10048b29:	sub    edi,eax
10048b2b:	dec    ecx
10048b2c:	cmp    edi,ebx
10048b2e:	mov    DWORD PTR [esi+0x4],ecx
10048b31:	jle    0x10048b50
10048b33:	push   edi
10048b34:	push   eax
10048b35:	push   DWORD PTR [ebp+0xc]
10048b38:	call   0x1004d113
10048b3d:	add    esp,0xc
10048b40:	mov    DWORD PTR [ebp-0x4],eax
10048b43:	jmp    0x10048b92
10048b45:	or     eax,0x20
10048b48:	mov    DWORD PTR [esi+0xc],eax
10048b4b:	or     eax,0xffffffff
10048b4e:	jmp    0x10048bc9
10048b50:	mov    ecx,DWORD PTR [ebp+0xc]
10048b53:	cmp    ecx,0xffffffff
10048b56:	je     0x10048b73
10048b58:	cmp    ecx,0xfffffffe
10048b5b:	je     0x10048b73
10048b5d:	mov    eax,ecx
10048b5f:	and    eax,0x1f
10048b62:	imul   eax,eax,0x28
10048b65:	mov    edx,ecx
10048b67:	sar    edx,0x5
10048b6a:	add    eax,DWORD PTR [edx*4+0x10082480]
10048b71:	jmp    0x10048b78
10048b73:	mov    eax,0x1007e9d0
10048b78:	test   BYTE PTR [eax+0x4],0x20
10048b7c:	je     0x10048b92
10048b7e:	push   0x2
10048b80:	push   ebx
10048b81:	push   ebx
10048b82:	push   ecx
10048b83:	call   0x1004ca34
10048b88:	and    eax,edx
10048b8a:	add    esp,0x10
10048b8d:	cmp    eax,0xffffffff
10048b90:	je     0x10048bb7
10048b92:	mov    eax,DWORD PTR [esi+0x8]
10048b95:	mov    cl,BYTE PTR [ebp+0x8]
10048b98:	mov    BYTE PTR [eax],cl
10048b9a:	jmp    0x10048bb2
10048b9c:	xor    edi,edi
10048b9e:	inc    edi
10048b9f:	push   edi
10048ba0:	lea    eax,[ebp+0x8]
10048ba3:	push   eax
10048ba4:	push   DWORD PTR [ebp+0xc]
10048ba7:	call   0x1004d113
10048bac:	add    esp,0xc
10048baf:	mov    DWORD PTR [ebp-0x4],eax
10048bb2:	cmp    DWORD PTR [ebp-0x4],edi
10048bb5:	je     0x10048bc0
10048bb7:	or     DWORD PTR [esi+0xc],0x20
10048bbb:	or     eax,0xffffffff
10048bbe:	jmp    0x10048bc8
10048bc0:	mov    eax,DWORD PTR [ebp+0x8]
10048bc3:	and    eax,0xff
10048bc8:	pop    edi
10048bc9:	pop    ebx
10048bca:	pop    esi
10048bcb:	leave  
10048bcc:	ret    
10048bcd:	push   ebp
10048bce:	mov    ebp,esp
10048bd0:	push   esi
10048bd1:	mov    esi,eax
10048bd3:	jmp    0x10048be9
10048bd5:	push   DWORD PTR [ebp+0x8]
10048bd8:	mov    eax,DWORD PTR [ebp+0x10]
10048bdb:	dec    DWORD PTR [ebp+0xc]
10048bde:	call   0x10049506
10048be3:	cmp    DWORD PTR [esi],0xffffffff
10048be6:	pop    ecx
10048be7:	je     0x10048bef
10048be9:	cmp    DWORD PTR [ebp+0xc],0x0
10048bed:	jg     0x10048bd5
10048bef:	pop    esi
10048bf0:	pop    ebp
10048bf1:	ret    
10048bf2:	push   ebp
10048bf3:	lea    ebp,[esp-0x3f4]
10048bfa:	sub    esp,0x474
10048c00:	mov    eax,ds:0x1007e030
10048c05:	xor    eax,ebp
10048c07:	mov    DWORD PTR [ebp+0x3f0],eax
10048c0d:	mov    eax,DWORD PTR [ebp+0x3fc]
10048c13:	push   ebx
10048c14:	mov    ebx,DWORD PTR [ebp+0x408]
10048c1a:	push   esi
10048c1b:	mov    esi,DWORD PTR [ebp+0x400]
10048c21:	push   edi
10048c22:	push   DWORD PTR [ebp+0x404]
10048c28:	xor    edi,edi
10048c2a:	lea    ecx,[ebp-0x64]
10048c2d:	mov    DWORD PTR [ebp-0x3c],eax
10048c30:	mov    DWORD PTR [ebp-0x28],ebx
10048c33:	mov    DWORD PTR [ebp-0x54],edi
10048c36:	mov    DWORD PTR [ebp-0x14],edi
10048c39:	mov    DWORD PTR [ebp-0x38],edi
10048c3c:	mov    DWORD PTR [ebp-0x18],edi
10048c3f:	mov    DWORD PTR [ebp-0x30],edi
10048c42:	mov    DWORD PTR [ebp-0x48],edi
10048c45:	mov    DWORD PTR [ebp-0x34],edi
10048c48:	call   0x10045785
10048c4d:	cmp    DWORD PTR [ebp-0x3c],edi
10048c50:	jne    0x10048c7f
10048c52:	call   0x10046df5
10048c57:	push   edi
10048c58:	push   edi
10048c59:	push   edi
10048c5a:	push   edi
10048c5b:	mov    DWORD PTR [eax],0x16
10048c61:	push   edi
10048c62:	call   0x100435cc
10048c67:	add    esp,0x14
10048c6a:	cmp    BYTE PTR [ebp-0x58],0x0
10048c6e:	je     0x10048c77
10048c70:	mov    eax,DWORD PTR [ebp-0x5c]
10048c73:	and    DWORD PTR [eax+0x70],0xfffffffd
10048c77:	or     eax,0xffffffff
10048c7a:	jmp    0x100494cb
10048c7f:	cmp    esi,edi
10048c81:	je     0x10048c52
10048c83:	movzx  edx,WORD PTR [esi]
10048c86:	xor    ecx,ecx
10048c88:	cmp    dx,di
10048c8b:	mov    DWORD PTR [ebp-0x2c],edi
10048c8e:	mov    DWORD PTR [ebp-0x20],edi
10048c91:	mov    DWORD PTR [ebp-0x50],edi
10048c94:	mov    DWORD PTR [ebp-0x24],edx
10048c97:	je     0x100494bb
10048c9d:	push   0x2
10048c9f:	pop    edi
10048ca0:	add    esi,edi
10048ca2:	cmp    DWORD PTR [ebp-0x2c],0x0
10048ca6:	mov    DWORD PTR [ebp-0x4c],esi
10048ca9:	jl     0x100494bb
10048caf:	lea    eax,[edx-0x20]
10048cb2:	cmp    ax,0x58
10048cb6:	ja     0x10048cc7
10048cb8:	movzx  eax,dx
10048cbb:	movzx  eax,BYTE PTR [eax+0x100673f8]
10048cc2:	and    eax,0xf
10048cc5:	jmp    0x10048cc9
10048cc7:	xor    eax,eax
10048cc9:	movsx  eax,BYTE PTR [ecx+eax*8+0x10067418]
10048cd1:	push   0x7
10048cd3:	sar    eax,0x4
10048cd6:	pop    ecx
10048cd7:	cmp    eax,ecx
10048cd9:	mov    DWORD PTR [ebp-0x68],eax
10048cdc:	ja     0x10049489
10048ce2:	jmp    DWORD PTR [eax*4+0x100494e6]
10048ce9:	xor    eax,eax
10048ceb:	or     DWORD PTR [ebp-0x18],0xffffffff
10048cef:	mov    DWORD PTR [ebp-0x6c],eax
10048cf2:	mov    DWORD PTR [ebp-0x48],eax
10048cf5:	mov    DWORD PTR [ebp-0x38],eax
10048cf8:	mov    DWORD PTR [ebp-0x30],eax
10048cfb:	mov    DWORD PTR [ebp-0x14],eax
10048cfe:	mov    DWORD PTR [ebp-0x34],eax
10048d01:	jmp    0x10049489
10048d06:	movzx  eax,dx
10048d09:	sub    eax,0x20
10048d0c:	je     0x10048d4c
10048d0e:	sub    eax,0x3
10048d11:	je     0x10048d40
10048d13:	sub    eax,0x8
10048d16:	je     0x10048d37
10048d18:	sub    eax,edi
10048d1a:	je     0x10048d2e
10048d1c:	sub    eax,0x3
10048d1f:	jne    0x10049489
10048d25:	or     DWORD PTR [ebp-0x14],0x8
10048d29:	jmp    0x10049489
10048d2e:	or     DWORD PTR [ebp-0x14],0x4
10048d32:	jmp    0x10049489
10048d37:	or     DWORD PTR [ebp-0x14],0x1
10048d3b:	jmp    0x10049489
10048d40:	or     DWORD PTR [ebp-0x14],0x80
10048d47:	jmp    0x10049489
10048d4c:	or     DWORD PTR [ebp-0x14],edi
10048d4f:	jmp    0x10049489
10048d54:	cmp    dx,0x2a
10048d58:	jne    0x10048d7a
10048d5a:	add    ebx,0x4
10048d5d:	mov    DWORD PTR [ebp-0x28],ebx
10048d60:	mov    ebx,DWORD PTR [ebx-0x4]
10048d63:	test   ebx,ebx
10048d65:	mov    DWORD PTR [ebp-0x38],ebx
10048d68:	jge    0x10049489
10048d6e:	or     DWORD PTR [ebp-0x14],0x4
10048d72:	neg    DWORD PTR [ebp-0x38]
10048d75:	jmp    0x10049489
10048d7a:	mov    eax,DWORD PTR [ebp-0x38]
10048d7d:	imul   eax,eax,0xa
10048d80:	movzx  ecx,dx
10048d83:	lea    eax,[eax+ecx*1-0x30]
10048d87:	mov    DWORD PTR [ebp-0x38],eax
10048d8a:	jmp    0x10049489
10048d8f:	and    DWORD PTR [ebp-0x18],0x0
10048d93:	jmp    0x10049489
10048d98:	cmp    dx,0x2a
10048d9c:	jne    0x10048dbb
10048d9e:	add    ebx,0x4
10048da1:	mov    DWORD PTR [ebp-0x28],ebx
10048da4:	mov    ebx,DWORD PTR [ebx-0x4]
10048da7:	test   ebx,ebx
10048da9:	mov    DWORD PTR [ebp-0x18],ebx
10048dac:	jge    0x10049489
10048db2:	or     DWORD PTR [ebp-0x18],0xffffffff
10048db6:	jmp    0x10049489
10048dbb:	mov    eax,DWORD PTR [ebp-0x18]
10048dbe:	imul   eax,eax,0xa
10048dc1:	movzx  ecx,dx
10048dc4:	lea    eax,[eax+ecx*1-0x30]
10048dc8:	mov    DWORD PTR [ebp-0x18],eax
10048dcb:	jmp    0x10049489
10048dd0:	movzx  eax,dx
10048dd3:	cmp    eax,0x49
10048dd6:	je     0x10048e20
10048dd8:	cmp    eax,0x68
10048ddb:	je     0x10048e17
10048ddd:	cmp    eax,0x6c
10048de0:	je     0x10048df7
10048de2:	cmp    eax,0x77
10048de5:	jne    0x10049489
10048deb:	or     DWORD PTR [ebp-0x14],0x800
10048df2:	jmp    0x10049489
10048df7:	cmp    WORD PTR [esi],0x6c
10048dfb:	jne    0x10048e0e
10048dfd:	add    esi,edi
10048dff:	or     DWORD PTR [ebp-0x14],0x1000
10048e06:	mov    DWORD PTR [ebp-0x4c],esi
10048e09:	jmp    0x10049489
10048e0e:	or     DWORD PTR [ebp-0x14],0x10
10048e12:	jmp    0x10049489
10048e17:	or     DWORD PTR [ebp-0x14],0x20
10048e1b:	jmp    0x10049489
10048e20:	movzx  eax,WORD PTR [esi]
10048e23:	cmp    ax,0x36
10048e27:	jne    0x10048e42
10048e29:	cmp    WORD PTR [esi+0x2],0x34
10048e2e:	jne    0x10048e42
10048e30:	add    esi,0x4
10048e33:	or     DWORD PTR [ebp-0x14],0x8000
10048e3a:	mov    DWORD PTR [ebp-0x4c],esi
10048e3d:	jmp    0x10049489
10048e42:	cmp    ax,0x33
10048e46:	jne    0x10048e61
10048e48:	cmp    WORD PTR [esi+0x2],0x32
10048e4d:	jne    0x10048e61
10048e4f:	add    esi,0x4
10048e52:	and    DWORD PTR [ebp-0x14],0xffff7fff
10048e59:	mov    DWORD PTR [ebp-0x4c],esi
10048e5c:	jmp    0x10049489
10048e61:	cmp    ax,0x64
10048e65:	je     0x10049489
10048e6b:	cmp    ax,0x69
10048e6f:	je     0x10049489
10048e75:	cmp    ax,0x6f
10048e79:	je     0x10049489
10048e7f:	cmp    ax,0x75
10048e83:	je     0x10049489
10048e89:	cmp    ax,0x78
10048e8d:	je     0x10049489
10048e93:	cmp    ax,0x58
10048e97:	je     0x10049489
10048e9d:	and    DWORD PTR [ebp-0x68],0x0
10048ea1:	mov    eax,DWORD PTR [ebp-0x3c]
10048ea4:	push   edx
10048ea5:	lea    esi,[ebp-0x2c]
10048ea8:	mov    DWORD PTR [ebp-0x34],0x1
10048eaf:	call   0x10049506
10048eb4:	jmp    0x10049488
10048eb9:	movzx  eax,dx
10048ebc:	cmp    eax,0x64
10048ebf:	jg     0x1004906c
10048ec5:	je     0x100490eb
10048ecb:	cmp    eax,0x53
10048ece:	jg     0x10048fab
10048ed4:	je     0x10048f35
10048ed6:	sub    eax,0x41
10048ed9:	je     0x10048eeb
10048edb:	sub    eax,edi
10048edd:	je     0x10048f20
10048edf:	sub    eax,edi
10048ee1:	je     0x10048eeb
10048ee3:	sub    eax,edi
10048ee5:	jne    0x1004936d
10048eeb:	add    edx,0x20
10048eee:	mov    DWORD PTR [ebp-0x6c],0x1
10048ef5:	mov    DWORD PTR [ebp-0x24],edx
10048ef8:	or     DWORD PTR [ebp-0x14],0x40
10048efc:	cmp    DWORD PTR [ebp-0x18],0x0
10048f00:	lea    esi,[ebp-0x10]
10048f03:	mov    eax,0x200
10048f08:	mov    DWORD PTR [ebp-0x1c],esi
10048f0b:	mov    DWORD PTR [ebp-0x20],eax
10048f0e:	jge    0x1004910f
10048f14:	mov    DWORD PTR [ebp-0x18],0x6
10048f1b:	jmp    0x1004915c
10048f20:	test   WORD PTR [ebp-0x14],0x830
10048f26:	jne    0x10048fc8
10048f2c:	or     DWORD PTR [ebp-0x14],0x20
10048f30:	jmp    0x10048fc8
10048f35:	test   WORD PTR [ebp-0x14],0x830
10048f3b:	jne    0x10048f41
10048f3d:	or     DWORD PTR [ebp-0x14],0x20
10048f41:	mov    edi,DWORD PTR [ebp-0x18]
10048f44:	cmp    edi,0xffffffff
10048f47:	jne    0x10048f4e
10048f49:	mov    edi,0x7fffffff
10048f4e:	add    ebx,0x4
10048f51:	test   BYTE PTR [ebp-0x14],0x20
10048f55:	mov    DWORD PTR [ebp-0x28],ebx
10048f58:	mov    ebx,DWORD PTR [ebx-0x4]
10048f5b:	mov    DWORD PTR [ebp-0x1c],ebx
10048f5e:	je     0x10049340
10048f64:	test   ebx,ebx
10048f66:	jne    0x10048f70
10048f68:	mov    eax,ds:0x1007ed28
10048f6d:	mov    DWORD PTR [ebp-0x1c],eax
10048f70:	and    DWORD PTR [ebp-0x20],0x0
10048f74:	test   edi,edi
10048f76:	mov    esi,DWORD PTR [ebp-0x1c]
10048f79:	jle    0x1004936d
10048f7f:	mov    al,BYTE PTR [esi]
10048f81:	test   al,al
10048f83:	je     0x1004936d
10048f89:	lea    ecx,[ebp-0x64]
10048f8c:	movzx  eax,al
10048f8f:	push   ecx
10048f90:	push   eax
10048f91:	call   0x1004b55f
10048f96:	test   eax,eax
10048f98:	pop    ecx
10048f99:	pop    ecx
10048f9a:	je     0x10048f9d
10048f9c:	inc    esi
10048f9d:	inc    esi
10048f9e:	inc    DWORD PTR [ebp-0x20]
10048fa1:	cmp    DWORD PTR [ebp-0x20],edi
10048fa4:	jl     0x10048f7f
10048fa6:	jmp    0x1004936d
10048fab:	sub    eax,0x58
10048fae:	je     0x100491f7
10048fb4:	sub    eax,edi
10048fb6:	je     0x1004901f
10048fb8:	sub    eax,ecx
10048fba:	je     0x10048ef8
10048fc0:	sub    eax,edi
10048fc2:	jne    0x1004936d
10048fc8:	movzx  eax,WORD PTR [ebx]
10048fcb:	add    ebx,0x4
10048fce:	xor    esi,esi
10048fd0:	inc    esi
10048fd1:	test   BYTE PTR [ebp-0x14],0x20
10048fd5:	mov    DWORD PTR [ebp-0x34],esi
10048fd8:	mov    DWORD PTR [ebp-0x28],ebx
10048fdb:	mov    DWORD PTR [ebp-0x70],eax
10048fde:	je     0x1004900d
10048fe0:	mov    BYTE PTR [ebp-0x40],al
10048fe3:	lea    eax,[ebp-0x64]
10048fe6:	push   eax
10048fe7:	mov    eax,DWORD PTR [ebp-0x64]
10048fea:	mov    BYTE PTR [ebp-0x3f],0x0
10048fee:	push   DWORD PTR [eax+0xac]
10048ff4:	lea    eax,[ebp-0x40]
10048ff7:	push   eax
10048ff8:	lea    eax,[ebp-0x10]
10048ffb:	push   eax
10048ffc:	call   0x1004e066
10049001:	add    esp,0x10
10049004:	test   eax,eax
10049006:	jge    0x10049011
10049008:	mov    DWORD PTR [ebp-0x48],esi
1004900b:	jmp    0x10049011
1004900d:	mov    WORD PTR [ebp-0x10],ax
10049011:	lea    eax,[ebp-0x10]
10049014:	mov    DWORD PTR [ebp-0x1c],eax
10049017:	mov    DWORD PTR [ebp-0x20],esi
1004901a:	jmp    0x1004936d
1004901f:	mov    eax,DWORD PTR [ebx]
10049021:	add    ebx,0x4
10049024:	test   eax,eax
10049026:	mov    DWORD PTR [ebp-0x28],ebx
10049029:	je     0x10049058
1004902b:	mov    ecx,DWORD PTR [eax+0x4]
1004902e:	test   ecx,ecx
10049030:	je     0x10049058
10049032:	test   WORD PTR [ebp-0x14],0x800
10049038:	movsx  eax,WORD PTR [eax]
1004903b:	mov    DWORD PTR [ebp-0x1c],ecx
1004903e:	je     0x1004904f
10049040:	cdq    
10049041:	sub    eax,edx
10049043:	mov    DWORD PTR [ebp-0x34],0x1
1004904a:	jmp    0x10049368
1004904f:	and    DWORD PTR [ebp-0x34],0x0
10049053:	jmp    0x1004936a
10049058:	mov    eax,ds:0x1007ed28
1004905d:	mov    DWORD PTR [ebp-0x1c],eax
10049060:	push   eax
10049061:	call   0x10043250
10049066:	pop    ecx
10049067:	jmp    0x1004936a
1004906c:	cmp    eax,0x70
1004906f:	jg     0x100491fc
10049075:	je     0x100491f0
1004907b:	cmp    eax,0x65
1004907e:	jl     0x1004936d
10049084:	cmp    eax,0x67
10049087:	jle    0x10048ef8
1004908d:	cmp    eax,0x69
10049090:	je     0x100490eb
10049092:	cmp    eax,0x6e
10049095:	je     0x100490b6
10049097:	cmp    eax,0x6f
1004909a:	jne    0x1004936d
100490a0:	test   BYTE PTR [ebp-0x14],0x80
100490a4:	mov    DWORD PTR [ebp-0x24],0x8
100490ab:	je     0x100490f6
100490ad:	or     DWORD PTR [ebp-0x14],0x200
100490b4:	jmp    0x100490f6
100490b6:	mov    esi,DWORD PTR [ebx]
100490b8:	add    ebx,0x4
100490bb:	mov    DWORD PTR [ebp-0x28],ebx
100490be:	call   0x1004e050
100490c3:	test   eax,eax
100490c5:	je     0x100494a4
100490cb:	test   BYTE PTR [ebp-0x14],0x20
100490cf:	je     0x100490da
100490d1:	mov    ax,WORD PTR [ebp-0x2c]
100490d5:	mov    WORD PTR [esi],ax
100490d8:	jmp    0x100490df
100490da:	mov    eax,DWORD PTR [ebp-0x2c]
100490dd:	mov    DWORD PTR [esi],eax
100490df:	mov    DWORD PTR [ebp-0x48],0x1
100490e6:	jmp    0x10049476
100490eb:	or     DWORD PTR [ebp-0x14],0x40
100490ef:	mov    DWORD PTR [ebp-0x24],0xa
100490f6:	test   WORD PTR [ebp-0x14],0x8000
100490fc:	je     0x10049246
10049102:	mov    eax,DWORD PTR [ebx]
10049104:	mov    edx,DWORD PTR [ebx+0x4]
10049107:	add    ebx,0x8
1004910a:	jmp    0x1004927f
1004910f:	jne    0x10049120
10049111:	cmp    dx,0x67
10049115:	jne    0x1004915c
10049117:	mov    DWORD PTR [ebp-0x18],0x1
1004911e:	jmp    0x1004915c
10049120:	cmp    DWORD PTR [ebp-0x18],eax
10049123:	jle    0x10049128
10049125:	mov    DWORD PTR [ebp-0x18],eax
10049128:	cmp    DWORD PTR [ebp-0x18],0xa3
1004912f:	jle    0x1004915c
10049131:	mov    edi,DWORD PTR [ebp-0x18]
10049134:	add    edi,0x15d
1004913a:	push   edi
1004913b:	call   0x100476c2
10049140:	test   eax,eax
10049142:	mov    edx,DWORD PTR [ebp-0x24]
10049145:	pop    ecx
10049146:	mov    DWORD PTR [ebp-0x50],eax
10049149:	je     0x10049155
1004914b:	mov    DWORD PTR [ebp-0x1c],eax
1004914e:	mov    DWORD PTR [ebp-0x20],edi
10049151:	mov    esi,eax
10049153:	jmp    0x1004915c
10049155:	mov    DWORD PTR [ebp-0x18],0xa3
1004915c:	mov    eax,DWORD PTR [ebx]
1004915e:	add    ebx,0x8
10049161:	mov    DWORD PTR [ebp-0x78],eax
10049164:	mov    eax,DWORD PTR [ebx-0x4]
10049167:	mov    DWORD PTR [ebp-0x74],eax
1004916a:	lea    eax,[ebp-0x64]
1004916d:	push   eax
1004916e:	push   DWORD PTR [ebp-0x6c]
10049171:	movsx  eax,dl
10049174:	push   DWORD PTR [ebp-0x18]
10049177:	mov    DWORD PTR [ebp-0x28],ebx
1004917a:	push   eax
1004917b:	push   DWORD PTR [ebp-0x20]
1004917e:	lea    eax,[ebp-0x78]
10049181:	push   esi
10049182:	push   eax
10049183:	push   DWORD PTR ds:0x1007ea98
10049189:	call   0x10047192
1004918e:	pop    ecx
1004918f:	call   eax
10049191:	mov    ebx,DWORD PTR [ebp-0x14]
10049194:	add    esp,0x1c
10049197:	and    ebx,0x80
1004919d:	je     0x100491ba
1004919f:	cmp    DWORD PTR [ebp-0x18],0x0
100491a3:	jne    0x100491ba
100491a5:	lea    eax,[ebp-0x64]
100491a8:	push   eax
100491a9:	push   esi
100491aa:	push   DWORD PTR ds:0x1007eaa4
100491b0:	call   0x10047192
100491b5:	pop    ecx
100491b6:	call   eax
100491b8:	pop    ecx
100491b9:	pop    ecx
100491ba:	cmp    WORD PTR [ebp-0x24],0x67
100491bf:	jne    0x100491da
100491c1:	test   ebx,ebx
100491c3:	jne    0x100491da
100491c5:	lea    eax,[ebp-0x64]
100491c8:	push   eax
100491c9:	push   esi
100491ca:	push   DWORD PTR ds:0x1007eaa0
100491d0:	call   0x10047192
100491d5:	pop    ecx
100491d6:	call   eax
100491d8:	pop    ecx
100491d9:	pop    ecx
100491da:	cmp    BYTE PTR [esi],0x2d
100491dd:	jne    0x100491ea
100491df:	or     DWORD PTR [ebp-0x14],0x100
100491e6:	inc    esi
100491e7:	mov    DWORD PTR [ebp-0x1c],esi
100491ea:	push   esi
100491eb:	jmp    0x10049061
100491f0:	mov    DWORD PTR [ebp-0x18],0x8
100491f7:	mov    DWORD PTR [ebp-0x54],ecx
100491fa:	jmp    0x1004921d
100491fc:	sub    eax,0x73
100491ff:	je     0x10048f41
10049205:	sub    eax,edi
10049207:	je     0x100490ef
1004920d:	sub    eax,0x3
10049210:	jne    0x1004936d
10049216:	mov    DWORD PTR [ebp-0x54],0x27
1004921d:	test   BYTE PTR [ebp-0x14],0x80
10049221:	mov    DWORD PTR [ebp-0x24],0x10
10049228:	je     0x100490f6
1004922e:	mov    eax,DWORD PTR [ebp-0x54]
10049231:	add    eax,0x51
10049234:	mov    WORD PTR [ebp-0x44],0x30
1004923a:	mov    WORD PTR [ebp-0x42],ax
1004923e:	mov    DWORD PTR [ebp-0x30],edi
10049241:	jmp    0x100490f6
10049246:	test   WORD PTR [ebp-0x14],0x1000
1004924c:	jne    0x10049102
10049252:	add    ebx,0x4
10049255:	test   BYTE PTR [ebp-0x14],0x20
10049259:	je     0x10049271
1004925b:	test   BYTE PTR [ebp-0x14],0x40
1004925f:	mov    DWORD PTR [ebp-0x28],ebx
10049262:	je     0x1004926a
10049264:	movsx  eax,WORD PTR [ebx-0x4]
10049268:	jmp    0x1004926e
1004926a:	movzx  eax,WORD PTR [ebx-0x4]
1004926e:	cdq    
1004926f:	jmp    0x10049282
10049271:	test   BYTE PTR [ebp-0x14],0x40
10049275:	mov    eax,DWORD PTR [ebx-0x4]
10049278:	je     0x1004927d
1004927a:	cdq    
1004927b:	jmp    0x1004927f
1004927d:	xor    edx,edx
1004927f:	mov    DWORD PTR [ebp-0x28],ebx
10049282:	test   BYTE PTR [ebp-0x14],0x40
10049286:	je     0x100492a0
10049288:	test   edx,edx
1004928a:	jg     0x100492a0
1004928c:	jl     0x10049292
1004928e:	test   eax,eax
10049290:	jae    0x100492a0
10049292:	neg    eax
10049294:	adc    edx,0x0
10049297:	neg    edx
10049299:	or     DWORD PTR [ebp-0x14],0x100
100492a0:	test   WORD PTR [ebp-0x14],0x9000
100492a6:	mov    ebx,edx
100492a8:	mov    edi,eax
100492aa:	jne    0x100492ae
100492ac:	xor    ebx,ebx
100492ae:	cmp    DWORD PTR [ebp-0x18],0x0
100492b2:	jge    0x100492bd
100492b4:	mov    DWORD PTR [ebp-0x18],0x1
100492bb:	jmp    0x100492ce
100492bd:	and    DWORD PTR [ebp-0x14],0xfffffff7
100492c1:	mov    eax,0x200
100492c6:	cmp    DWORD PTR [ebp-0x18],eax
100492c9:	jle    0x100492ce
100492cb:	mov    DWORD PTR [ebp-0x18],eax
100492ce:	mov    eax,edi
100492d0:	or     eax,ebx
100492d2:	jne    0x100492d8
100492d4:	and    DWORD PTR [ebp-0x30],0x0
100492d8:	lea    esi,[ebp+0x1ef]
100492de:	mov    eax,DWORD PTR [ebp-0x18]
100492e1:	dec    DWORD PTR [ebp-0x18]
100492e4:	test   eax,eax
100492e6:	jg     0x100492ee
100492e8:	mov    eax,edi
100492ea:	or     eax,ebx
100492ec:	je     0x10049312
100492ee:	mov    eax,DWORD PTR [ebp-0x24]
100492f1:	cdq    
100492f2:	push   edx
100492f3:	push   eax
100492f4:	push   ebx
100492f5:	push   edi
100492f6:	call   0x1004ac90
100492fb:	add    ecx,0x30
100492fe:	cmp    ecx,0x39
10049301:	mov    DWORD PTR [ebp-0x7c],ebx
10049304:	mov    edi,eax
10049306:	mov    ebx,edx
10049308:	jle    0x1004930d
1004930a:	add    ecx,DWORD PTR [ebp-0x54]
1004930d:	mov    BYTE PTR [esi],cl
1004930f:	dec    esi
10049310:	jmp    0x100492de
10049312:	lea    eax,[ebp+0x1ef]
10049318:	sub    eax,esi
1004931a:	inc    esi
1004931b:	test   WORD PTR [ebp-0x14],0x200
10049321:	mov    DWORD PTR [ebp-0x20],eax
10049324:	mov    DWORD PTR [ebp-0x1c],esi
10049327:	je     0x1004936d
10049329:	test   eax,eax
1004932b:	je     0x10049334
1004932d:	mov    ecx,esi
1004932f:	cmp    BYTE PTR [ecx],0x30
10049332:	je     0x1004936d
10049334:	dec    DWORD PTR [ebp-0x1c]
10049337:	mov    ecx,DWORD PTR [ebp-0x1c]
1004933a:	mov    BYTE PTR [ecx],0x30
1004933d:	inc    eax
1004933e:	jmp    0x1004936a
10049340:	test   ebx,ebx
10049342:	jne    0x1004934c
10049344:	mov    eax,ds:0x1007ed2c
10049349:	mov    DWORD PTR [ebp-0x1c],eax
1004934c:	mov    eax,DWORD PTR [ebp-0x1c]
1004934f:	mov    DWORD PTR [ebp-0x34],0x1
10049356:	jmp    0x10049361
10049358:	dec    edi
10049359:	cmp    WORD PTR [eax],0x0
1004935d:	je     0x10049365
1004935f:	inc    eax
10049360:	inc    eax
10049361:	test   edi,edi
10049363:	jne    0x10049358
10049365:	sub    eax,DWORD PTR [ebp-0x1c]
10049368:	sar    eax,1
1004936a:	mov    DWORD PTR [ebp-0x20],eax
1004936d:	cmp    DWORD PTR [ebp-0x48],0x0
10049371:	jne    0x10049476
10049377:	mov    eax,DWORD PTR [ebp-0x14]
1004937a:	test   al,0x40
1004937c:	je     0x100493a9
1004937e:	test   ax,0x100
10049382:	je     0x1004938c
10049384:	mov    WORD PTR [ebp-0x44],0x2d
1004938a:	jmp    0x100493a2
1004938c:	test   al,0x1
1004938e:	je     0x10049398
10049390:	mov    WORD PTR [ebp-0x44],0x2b
10049396:	jmp    0x100493a2
10049398:	test   al,0x2
1004939a:	je     0x100493a9
1004939c:	mov    WORD PTR [ebp-0x44],0x20
100493a2:	mov    DWORD PTR [ebp-0x30],0x1
100493a9:	mov    ebx,DWORD PTR [ebp-0x38]
100493ac:	mov    esi,DWORD PTR [ebp-0x20]
100493af:	sub    ebx,esi
100493b1:	sub    ebx,DWORD PTR [ebp-0x30]
100493b4:	test   BYTE PTR [ebp-0x14],0xc
100493b8:	jne    0x100493cb
100493ba:	push   DWORD PTR [ebp-0x3c]
100493bd:	lea    eax,[ebp-0x2c]
100493c0:	push   ebx
100493c1:	push   0x20
100493c3:	call   0x10048bcd
100493c8:	add    esp,0xc
100493cb:	push   DWORD PTR [ebp-0x30]
100493ce:	mov    edi,DWORD PTR [ebp-0x3c]
100493d1:	lea    eax,[ebp-0x2c]
100493d4:	lea    ecx,[ebp-0x44]
100493d7:	call   0x1004952b
100493dc:	test   BYTE PTR [ebp-0x14],0x8
100493e0:	pop    ecx
100493e1:	je     0x100493f8
100493e3:	test   BYTE PTR [ebp-0x14],0x4
100493e7:	jne    0x100493f8
100493e9:	push   edi
100493ea:	push   ebx
100493eb:	push   0x30
100493ed:	lea    eax,[ebp-0x2c]
100493f0:	call   0x10048bcd
100493f5:	add    esp,0xc
100493f8:	cmp    DWORD PTR [ebp-0x34],0x0
100493fc:	jne    0x1004944c
100493fe:	test   esi,esi
10049400:	jle    0x1004944c
10049402:	mov    edi,DWORD PTR [ebp-0x1c]
10049405:	mov    DWORD PTR [ebp-0x24],esi
10049408:	dec    DWORD PTR [ebp-0x24]
1004940b:	lea    eax,[ebp-0x64]
1004940e:	push   eax
1004940f:	mov    eax,DWORD PTR [ebp-0x64]
10049412:	push   DWORD PTR [eax+0xac]
10049418:	lea    eax,[ebp-0x70]
1004941b:	push   edi
1004941c:	push   eax
1004941d:	call   0x1004e066
10049422:	add    esp,0x10
10049425:	test   eax,eax
10049427:	mov    DWORD PTR [ebp-0x7c],eax
1004942a:	jle    0x10049446
1004942c:	push   DWORD PTR [ebp-0x70]
1004942f:	mov    eax,DWORD PTR [ebp-0x3c]
10049432:	lea    esi,[ebp-0x2c]
10049435:	call   0x10049506
1004943a:	add    edi,DWORD PTR [ebp-0x7c]
1004943d:	cmp    DWORD PTR [ebp-0x24],0x0
10049441:	pop    ecx
10049442:	jg     0x10049408
10049444:	jmp    0x10049459
10049446:	or     DWORD PTR [ebp-0x2c],0xffffffff
1004944a:	jmp    0x10049459
1004944c:	mov    ecx,DWORD PTR [ebp-0x1c]
1004944f:	push   esi
10049450:	lea    eax,[ebp-0x2c]
10049453:	call   0x1004952b
10049458:	pop    ecx
10049459:	cmp    DWORD PTR [ebp-0x2c],0x0
1004945d:	jl     0x10049476
1004945f:	test   BYTE PTR [ebp-0x14],0x4
10049463:	je     0x10049476
10049465:	push   DWORD PTR [ebp-0x3c]
10049468:	lea    eax,[ebp-0x2c]
1004946b:	push   ebx
1004946c:	push   0x20
1004946e:	call   0x10048bcd
10049473:	add    esp,0xc
10049476:	cmp    DWORD PTR [ebp-0x50],0x0
1004947a:	je     0x10049489
1004947c:	push   DWORD PTR [ebp-0x50]
1004947f:	call   0x10043748
10049484:	and    DWORD PTR [ebp-0x50],0x0
10049488:	pop    ecx
10049489:	mov    esi,DWORD PTR [ebp-0x4c]
1004948c:	movzx  eax,WORD PTR [esi]
1004948f:	test   ax,ax
10049492:	mov    DWORD PTR [ebp-0x24],eax
10049495:	je     0x100494bb
10049497:	mov    ecx,DWORD PTR [ebp-0x68]
1004949a:	mov    ebx,DWORD PTR [ebp-0x28]
1004949d:	mov    edx,eax
1004949f:	jmp    0x10048c9d
100494a4:	call   0x10046df5
100494a9:	mov    DWORD PTR [eax],0x16
100494af:	xor    eax,eax
100494b1:	push   eax
100494b2:	push   eax
100494b3:	push   eax
100494b4:	push   eax
100494b5:	push   eax
100494b6:	jmp    0x10048c62
100494bb:	cmp    BYTE PTR [ebp-0x58],0x0
100494bf:	je     0x100494c8
100494c1:	mov    eax,DWORD PTR [ebp-0x5c]
100494c4:	and    DWORD PTR [eax+0x70],0xfffffffd
100494c8:	mov    eax,DWORD PTR [ebp-0x2c]
100494cb:	mov    ecx,DWORD PTR [ebp+0x3f0]
100494d1:	pop    edi
100494d2:	pop    esi
100494d3:	xor    ecx,ebp
100494d5:	pop    ebx
100494d6:	call   0x100430d7
100494db:	add    ebp,0x3f4
100494e1:	leave  
100494e2:	ret    
100494e3:	lea    ecx,[ecx+0x0]
100494e6:	mov    eax,ds:0xe910048e
100494eb:	mov    WORD PTR [eax+edx*1],es
100494ee:	push   es
100494ef:	lea    eax,[eax+edx*1]
100494f2:	push   esp
100494f3:	lea    eax,[eax+edx*1]
100494f6:	(bad)  
100494f7:	lea    eax,[eax+edx*1]
100494fa:	cwde   
100494fb:	lea    eax,[eax+edx*1]
100494fe:	ror    BYTE PTR [ebp-0x7146effc],1
10049504:	add    al,0x10
10049506:	test   BYTE PTR [eax+0xc],0x40
1004950a:	je     0x10049512
1004950c:	cmp    DWORD PTR [eax+0x8],0x0
10049510:	je     0x10049528
10049512:	push   eax
10049513:	push   DWORD PTR [esp+0x8]
10049517:	call   0x1004d439
1004951c:	cmp    ax,0xffff
10049520:	pop    ecx
10049521:	pop    ecx
10049522:	jne    0x10049528
10049524:	or     DWORD PTR [esi],0xffffffff
10049527:	ret    
10049528:	inc    DWORD PTR [esi]
1004952a:	ret    
1004952b:	test   BYTE PTR [edi+0xc],0x40
1004952f:	push   ebx
10049530:	push   esi
10049531:	mov    esi,eax
10049533:	mov    ebx,ecx
10049535:	je     0x10049570
10049537:	cmp    DWORD PTR [edi+0x8],0x0
1004953b:	jne    0x10049570
1004953d:	mov    eax,DWORD PTR [esp+0xc]
10049541:	add    DWORD PTR [esi],eax
10049543:	jmp    0x10049577
10049545:	movzx  eax,WORD PTR [ebx]
10049548:	dec    DWORD PTR [esp+0xc]
1004954c:	push   eax
1004954d:	mov    eax,edi
1004954f:	call   0x10049506
10049554:	inc    ebx
10049555:	inc    ebx
10049556:	cmp    DWORD PTR [esi],0xffffffff
10049559:	pop    ecx
1004955a:	jne    0x10049570
1004955c:	call   0x10046df5
10049561:	cmp    DWORD PTR [eax],0x2a
10049564:	jne    0x10049577
10049566:	push   0x3f
10049568:	mov    eax,edi
1004956a:	call   0x10049506
1004956f:	pop    ecx
10049570:	cmp    DWORD PTR [esp+0xc],0x0
10049575:	jg     0x10049545
10049577:	pop    esi
10049578:	pop    ebx
10049579:	ret    
1004957a:	push   ebp
1004957b:	lea    ebp,[esp-0x3f4]
10049582:	sub    esp,0x474
10049588:	mov    eax,ds:0x1007e030
1004958d:	xor    eax,ebp
1004958f:	mov    DWORD PTR [ebp+0x3f0],eax
10049595:	push   ebx
10049596:	mov    ebx,DWORD PTR [ebp+0x408]
1004959c:	push   esi
1004959d:	mov    esi,DWORD PTR [ebp+0x3fc]
100495a3:	xor    eax,eax
100495a5:	push   edi
100495a6:	push   DWORD PTR [ebp+0x404]
100495ac:	mov    edi,DWORD PTR [ebp+0x400]
100495b2:	lea    ecx,[ebp-0x58]
100495b5:	mov    DWORD PTR [ebp-0x48],esi
100495b8:	mov    DWORD PTR [ebp-0x24],ebx
100495bb:	mov    DWORD PTR [ebp-0x60],eax
100495be:	mov    DWORD PTR [ebp-0x14],eax
100495c1:	mov    DWORD PTR [ebp-0x38],eax
100495c4:	mov    DWORD PTR [ebp-0x18],eax
100495c7:	mov    DWORD PTR [ebp-0x30],eax
100495ca:	mov    DWORD PTR [ebp-0x5c],eax
100495cd:	mov    DWORD PTR [ebp-0x34],eax
100495d0:	call   0x10045785
100495d5:	test   esi,esi
100495d7:	jne    0x10049608
100495d9:	call   0x10046df5
100495de:	mov    DWORD PTR [eax],0x16
100495e4:	xor    eax,eax
100495e6:	push   eax
100495e7:	push   eax
100495e8:	push   eax
100495e9:	push   eax
100495ea:	push   eax
100495eb:	call   0x100435cc
100495f0:	add    esp,0x14
100495f3:	cmp    BYTE PTR [ebp-0x4c],0x0
100495f7:	je     0x10049600
100495f9:	mov    eax,DWORD PTR [ebp-0x50]
100495fc:	and    DWORD PTR [eax+0x70],0xfffffffd
10049600:	or     eax,0xffffffff
10049603:	jmp    0x10049e5f
10049608:	xor    esi,esi
1004960a:	cmp    edi,esi
1004960c:	jne    0x10049620
1004960e:	call   0x10046df5
10049613:	push   esi
10049614:	push   esi
10049615:	push   esi
10049616:	push   esi
10049617:	mov    DWORD PTR [eax],0x16
1004961d:	push   esi
1004961e:	jmp    0x100495eb
10049620:	movzx  ecx,WORD PTR [edi]
10049623:	cmp    cx,si
10049626:	mov    DWORD PTR [ebp-0x2c],esi
10049629:	mov    DWORD PTR [ebp-0x20],esi
1004962c:	mov    DWORD PTR [ebp-0x40],esi
1004962f:	mov    DWORD PTR [ebp-0x64],esi
10049632:	mov    DWORD PTR [ebp-0x28],ecx
10049635:	je     0x10049e4f
1004963b:	push   0x2
1004963d:	pop    esi
1004963e:	add    edi,esi
10049640:	xor    eax,eax
10049642:	cmp    DWORD PTR [ebp-0x2c],eax
10049645:	mov    DWORD PTR [ebp-0x6c],edi
10049648:	jl     0x10049e3f
1004964e:	lea    edx,[ecx-0x20]
10049651:	cmp    dx,0x58
10049655:	ja     0x10049664
10049657:	movzx  eax,cx
1004965a:	movzx  eax,BYTE PTR [eax+0x10067458]
10049661:	and    eax,0xf
10049664:	mov    edx,DWORD PTR [ebp-0x40]
10049667:	imul   eax,eax,0x9
1004966a:	movzx  eax,BYTE PTR [eax+edx*1+0x10067478]
10049672:	push   0x8
10049674:	shr    eax,0x4
10049677:	pop    edx
10049678:	cmp    eax,edx
1004967a:	mov    DWORD PTR [ebp-0x40],eax
1004967d:	je     0x100495d9
10049683:	cmp    eax,0x7
10049686:	ja     0x10049e27
1004968c:	jmp    DWORD PTR [eax*4+0x10049e7a]
10049693:	xor    eax,eax
10049695:	or     DWORD PTR [ebp-0x18],0xffffffff
10049699:	mov    DWORD PTR [ebp-0x68],eax
1004969c:	mov    DWORD PTR [ebp-0x5c],eax
1004969f:	mov    DWORD PTR [ebp-0x38],eax
100496a2:	mov    DWORD PTR [ebp-0x30],eax
100496a5:	mov    DWORD PTR [ebp-0x14],eax
100496a8:	mov    DWORD PTR [ebp-0x34],eax
100496ab:	jmp    0x10049e2d
100496b0:	movzx  eax,cx
100496b3:	sub    eax,0x20
100496b6:	je     0x100496f4
100496b8:	sub    eax,0x3
100496bb:	je     0x100496e8
100496bd:	sub    eax,edx
100496bf:	je     0x100496df
100496c1:	sub    eax,esi
100496c3:	je     0x100496d6
100496c5:	sub    eax,0x3
100496c8:	jne    0x10049e27
100496ce:	or     DWORD PTR [ebp-0x14],edx
100496d1:	jmp    0x10049e2d
100496d6:	or     DWORD PTR [ebp-0x14],0x4
100496da:	jmp    0x10049e2d
100496df:	or     DWORD PTR [ebp-0x14],0x1
100496e3:	jmp    0x10049e2d
100496e8:	or     DWORD PTR [ebp-0x14],0x80
100496ef:	jmp    0x10049e2d
100496f4:	or     DWORD PTR [ebp-0x14],esi
100496f7:	jmp    0x10049e2d
100496fc:	cmp    cx,0x2a
10049700:	jne    0x10049721
10049702:	mov    eax,DWORD PTR [ebx]
10049704:	add    ebx,0x4
10049707:	test   eax,eax
10049709:	mov    DWORD PTR [ebp-0x24],ebx
1004970c:	mov    DWORD PTR [ebp-0x38],eax
1004970f:	jge    0x10049e2d
10049715:	or     DWORD PTR [ebp-0x14],0x4
10049719:	neg    DWORD PTR [ebp-0x38]
1004971c:	jmp    0x10049e2d
10049721:	mov    eax,DWORD PTR [ebp-0x38]
10049724:	imul   eax,eax,0xa
10049727:	movzx  ecx,cx
1004972a:	lea    eax,[eax+ecx*1-0x30]
1004972e:	mov    DWORD PTR [ebp-0x38],eax
10049731:	jmp    0x10049e2d
10049736:	and    DWORD PTR [ebp-0x18],0x0
1004973a:	jmp    0x10049e2d
1004973f:	cmp    cx,0x2a
10049743:	jne    0x10049761
10049745:	mov    eax,DWORD PTR [ebx]
10049747:	add    ebx,0x4
1004974a:	test   eax,eax
1004974c:	mov    DWORD PTR [ebp-0x24],ebx
1004974f:	mov    DWORD PTR [ebp-0x18],eax
10049752:	jge    0x10049e2d
10049758:	or     DWORD PTR [ebp-0x18],0xffffffff
1004975c:	jmp    0x10049e2d
10049761:	mov    eax,DWORD PTR [ebp-0x18]
10049764:	imul   eax,eax,0xa
10049767:	movzx  ecx,cx
1004976a:	lea    eax,[eax+ecx*1-0x30]
1004976e:	mov    DWORD PTR [ebp-0x18],eax
10049771:	jmp    0x10049e2d
10049776:	movzx  eax,cx
10049779:	cmp    eax,0x49
1004977c:	je     0x100497c3
1004977e:	cmp    eax,0x68
10049781:	je     0x100497ba
10049783:	cmp    eax,0x6c
10049786:	je     0x1004979d
10049788:	cmp    eax,0x77
1004978b:	jne    0x10049e2d
10049791:	or     DWORD PTR [ebp-0x14],0x800
10049798:	jmp    0x10049e2d
1004979d:	cmp    WORD PTR [edi],0x6c
100497a1:	jne    0x100497b1
100497a3:	add    edi,esi
100497a5:	or     DWORD PTR [ebp-0x14],0x1000
100497ac:	jmp    0x10049e2d
100497b1:	or     DWORD PTR [ebp-0x14],0x10
100497b5:	jmp    0x10049e2d
100497ba:	or     DWORD PTR [ebp-0x14],0x20
100497be:	jmp    0x10049e2d
100497c3:	movzx  eax,WORD PTR [edi]
100497c6:	cmp    ax,0x36
100497ca:	jne    0x100497e2
100497cc:	cmp    WORD PTR [edi+0x2],0x34
100497d1:	jne    0x100497e2
100497d3:	add    edi,0x4
100497d6:	or     DWORD PTR [ebp-0x14],0x8000
100497dd:	jmp    0x10049e2d
100497e2:	cmp    ax,0x33
100497e6:	jne    0x100497fe
100497e8:	cmp    WORD PTR [edi+0x2],0x32
100497ed:	jne    0x100497fe
100497ef:	add    edi,0x4
100497f2:	and    DWORD PTR [ebp-0x14],0xffff7fff
100497f9:	jmp    0x10049e2d
100497fe:	cmp    ax,0x64
10049802:	je     0x10049e2d
10049808:	cmp    ax,0x69
1004980c:	je     0x10049e2d
10049812:	cmp    ax,0x6f
10049816:	je     0x10049e2d
1004981c:	cmp    ax,0x75
10049820:	je     0x10049e2d
10049826:	cmp    ax,0x78
1004982a:	je     0x10049e2d
10049830:	cmp    ax,0x58
10049834:	je     0x10049e2d
1004983a:	and    DWORD PTR [ebp-0x40],0x0
1004983e:	mov    eax,DWORD PTR [ebp-0x48]
10049841:	push   ecx
10049842:	lea    esi,[ebp-0x2c]
10049845:	mov    DWORD PTR [ebp-0x34],0x1
1004984c:	call   0x10049506
10049851:	pop    ecx
10049852:	jmp    0x10049e2d
10049857:	movzx  eax,cx
1004985a:	cmp    eax,0x64
1004985d:	jg     0x10049a0b
10049863:	je     0x10049a86
10049869:	cmp    eax,0x53
1004986c:	jg     0x10049949
10049872:	je     0x100498d3
10049874:	sub    eax,0x41
10049877:	je     0x10049889
10049879:	sub    eax,esi
1004987b:	je     0x100498be
1004987d:	sub    eax,esi
1004987f:	je     0x10049889
10049881:	sub    eax,esi
10049883:	jne    0x10049d0b
10049889:	add    ecx,0x20
1004988c:	mov    DWORD PTR [ebp-0x68],0x1
10049893:	mov    DWORD PTR [ebp-0x28],ecx
10049896:	or     DWORD PTR [ebp-0x14],0x40
1004989a:	cmp    DWORD PTR [ebp-0x18],0x0
1004989e:	lea    esi,[ebp-0x10]
100498a1:	mov    eax,0x200
100498a6:	mov    DWORD PTR [ebp-0x1c],esi
100498a9:	mov    DWORD PTR [ebp-0x20],eax
100498ac:	jge    0x10049aaa
100498b2:	mov    DWORD PTR [ebp-0x18],0x6
100498b9:	jmp    0x10049afa
100498be:	test   WORD PTR [ebp-0x14],0x830
100498c4:	jne    0x10049967
100498ca:	or     DWORD PTR [ebp-0x14],0x20
100498ce:	jmp    0x10049967
100498d3:	test   WORD PTR [ebp-0x14],0x830
100498d9:	jne    0x100498df
100498db:	or     DWORD PTR [ebp-0x14],0x20
100498df:	mov    edi,DWORD PTR [ebp-0x18]
100498e2:	cmp    edi,0xffffffff
100498e5:	jne    0x100498ec
100498e7:	mov    edi,0x7fffffff
100498ec:	add    ebx,0x4
100498ef:	test   BYTE PTR [ebp-0x14],0x20
100498f3:	mov    DWORD PTR [ebp-0x24],ebx
100498f6:	mov    ebx,DWORD PTR [ebx-0x4]
100498f9:	mov    DWORD PTR [ebp-0x1c],ebx
100498fc:	je     0x10049cde
10049902:	test   ebx,ebx
10049904:	jne    0x1004990e
10049906:	mov    eax,ds:0x1007ed28
1004990b:	mov    DWORD PTR [ebp-0x1c],eax
1004990e:	and    DWORD PTR [ebp-0x20],0x0
10049912:	test   edi,edi
10049914:	mov    esi,DWORD PTR [ebp-0x1c]
10049917:	jle    0x10049d0b
1004991d:	mov    al,BYTE PTR [esi]
1004991f:	test   al,al
10049921:	je     0x10049d0b
10049927:	lea    ecx,[ebp-0x58]
1004992a:	movzx  eax,al
1004992d:	push   ecx
1004992e:	push   eax
1004992f:	call   0x1004b55f
10049934:	test   eax,eax
10049936:	pop    ecx
10049937:	pop    ecx
10049938:	je     0x1004993b
1004993a:	inc    esi
1004993b:	inc    esi
1004993c:	inc    DWORD PTR [ebp-0x20]
1004993f:	cmp    DWORD PTR [ebp-0x20],edi
10049942:	jl     0x1004991d
10049944:	jmp    0x10049d0b
10049949:	sub    eax,0x58
1004994c:	je     0x10049b91
10049952:	sub    eax,esi
10049954:	je     0x100499be
10049956:	sub    eax,0x7
10049959:	je     0x10049896
1004995f:	sub    eax,esi
10049961:	jne    0x10049d0b
10049967:	movzx  eax,WORD PTR [ebx]
1004996a:	add    ebx,0x4
1004996d:	xor    esi,esi
1004996f:	inc    esi
10049970:	test   BYTE PTR [ebp-0x14],0x20
10049974:	mov    DWORD PTR [ebp-0x34],esi
10049977:	mov    DWORD PTR [ebp-0x24],ebx
1004997a:	mov    DWORD PTR [ebp-0x70],eax
1004997d:	je     0x100499ac
1004997f:	mov    BYTE PTR [ebp-0x44],al
10049982:	lea    eax,[ebp-0x58]
10049985:	push   eax
10049986:	mov    eax,DWORD PTR [ebp-0x58]
10049989:	mov    BYTE PTR [ebp-0x43],0x0
1004998d:	push   DWORD PTR [eax+0xac]
10049993:	lea    eax,[ebp-0x44]
10049996:	push   eax
10049997:	lea    eax,[ebp-0x10]
1004999a:	push   eax
1004999b:	call   0x1004e066
100499a0:	add    esp,0x10
100499a3:	test   eax,eax
100499a5:	jge    0x100499b0
100499a7:	mov    DWORD PTR [ebp-0x5c],esi
100499aa:	jmp    0x100499b0
100499ac:	mov    WORD PTR [ebp-0x10],ax
100499b0:	lea    eax,[ebp-0x10]
100499b3:	mov    DWORD PTR [ebp-0x1c],eax
100499b6:	mov    DWORD PTR [ebp-0x20],esi
100499b9:	jmp    0x10049d0b
100499be:	mov    eax,DWORD PTR [ebx]
100499c0:	add    ebx,0x4
100499c3:	test   eax,eax
100499c5:	mov    DWORD PTR [ebp-0x24],ebx
100499c8:	je     0x100499f7
100499ca:	mov    ecx,DWORD PTR [eax+0x4]
100499cd:	test   ecx,ecx
100499cf:	je     0x100499f7
100499d1:	test   WORD PTR [ebp-0x14],0x800
100499d7:	movsx  eax,WORD PTR [eax]
100499da:	mov    DWORD PTR [ebp-0x1c],ecx
100499dd:	je     0x100499ee
100499df:	cdq    
100499e0:	sub    eax,edx
100499e2:	mov    DWORD PTR [ebp-0x34],0x1
100499e9:	jmp    0x10049d06
100499ee:	and    DWORD PTR [ebp-0x34],0x0
100499f2:	jmp    0x10049d08
100499f7:	mov    eax,ds:0x1007ed28
100499fc:	mov    DWORD PTR [ebp-0x1c],eax
100499ff:	push   eax
10049a00:	call   0x10043250
10049a05:	pop    ecx
10049a06:	jmp    0x10049d08
10049a0b:	cmp    eax,0x70
10049a0e:	jg     0x10049b9a
10049a14:	je     0x10049b8e
10049a1a:	cmp    eax,0x65
10049a1d:	jl     0x10049d0b
10049a23:	cmp    eax,0x67
10049a26:	jle    0x10049896
10049a2c:	cmp    eax,0x69
10049a2f:	je     0x10049a86
10049a31:	cmp    eax,0x6e
10049a34:	je     0x10049a51
10049a36:	cmp    eax,0x6f
10049a39:	jne    0x10049d0b
10049a3f:	test   BYTE PTR [ebp-0x14],0x80
10049a43:	mov    DWORD PTR [ebp-0x28],edx
10049a46:	je     0x10049a91
10049a48:	or     DWORD PTR [ebp-0x14],0x200
10049a4f:	jmp    0x10049a91
10049a51:	mov    esi,DWORD PTR [ebx]
10049a53:	add    ebx,0x4
10049a56:	mov    DWORD PTR [ebp-0x24],ebx
10049a59:	call   0x1004e050
10049a5e:	test   eax,eax
10049a60:	je     0x100495d9
10049a66:	test   BYTE PTR [ebp-0x14],0x20
10049a6a:	je     0x10049a75
10049a6c:	mov    ax,WORD PTR [ebp-0x2c]
10049a70:	mov    WORD PTR [esi],ax
10049a73:	jmp    0x10049a7a
10049a75:	mov    eax,DWORD PTR [ebp-0x2c]
10049a78:	mov    DWORD PTR [esi],eax
10049a7a:	mov    DWORD PTR [ebp-0x5c],0x1
10049a81:	jmp    0x10049e14
10049a86:	or     DWORD PTR [ebp-0x14],0x40
10049a8a:	mov    DWORD PTR [ebp-0x28],0xa
10049a91:	test   WORD PTR [ebp-0x14],0x8000
10049a97:	je     0x10049be4
10049a9d:	add    ebx,edx
10049a9f:	mov    eax,DWORD PTR [ebx-0x8]
10049aa2:	mov    edx,DWORD PTR [ebx-0x4]
10049aa5:	jmp    0x10049c1d
10049aaa:	jne    0x10049abb
10049aac:	cmp    cx,0x67
10049ab0:	jne    0x10049afa
10049ab2:	mov    DWORD PTR [ebp-0x18],0x1
10049ab9:	jmp    0x10049afa
10049abb:	cmp    DWORD PTR [ebp-0x18],eax
10049abe:	jle    0x10049ac3
10049ac0:	mov    DWORD PTR [ebp-0x18],eax
10049ac3:	cmp    DWORD PTR [ebp-0x18],0xa3
10049aca:	jle    0x10049afa
10049acc:	mov    edi,DWORD PTR [ebp-0x18]
10049acf:	add    edi,0x15d
10049ad5:	push   edi
10049ad6:	call   0x100476c2
10049adb:	test   eax,eax
10049add:	pop    ecx
10049ade:	mov    ecx,DWORD PTR [ebp-0x28]
10049ae1:	push   0x8
10049ae3:	mov    DWORD PTR [ebp-0x64],eax
10049ae6:	pop    edx
10049ae7:	je     0x10049af3
10049ae9:	mov    DWORD PTR [ebp-0x1c],eax
10049aec:	mov    DWORD PTR [ebp-0x20],edi
10049aef:	mov    esi,eax
10049af1:	jmp    0x10049afa
10049af3:	mov    DWORD PTR [ebp-0x18],0xa3
10049afa:	add    ebx,edx
10049afc:	mov    eax,DWORD PTR [ebx-0x8]
10049aff:	mov    DWORD PTR [ebp-0x78],eax
10049b02:	mov    eax,DWORD PTR [ebx-0x4]
10049b05:	mov    DWORD PTR [ebp-0x74],eax
10049b08:	lea    eax,[ebp-0x58]
10049b0b:	push   eax
10049b0c:	push   DWORD PTR [ebp-0x68]
10049b0f:	movsx  eax,cl
10049b12:	push   DWORD PTR [ebp-0x18]
10049b15:	mov    DWORD PTR [ebp-0x24],ebx
10049b18:	push   eax
10049b19:	push   DWORD PTR [ebp-0x20]
10049b1c:	lea    eax,[ebp-0x78]
10049b1f:	push   esi
10049b20:	push   eax
10049b21:	push   DWORD PTR ds:0x1007ea98
10049b27:	call   0x10047192
10049b2c:	pop    ecx
10049b2d:	call   eax
10049b2f:	mov    ebx,DWORD PTR [ebp-0x14]
10049b32:	add    esp,0x1c
10049b35:	and    ebx,0x80
10049b3b:	je     0x10049b58
10049b3d:	cmp    DWORD PTR [ebp-0x18],0x0
10049b41:	jne    0x10049b58
10049b43:	lea    eax,[ebp-0x58]
10049b46:	push   eax
10049b47:	push   esi
10049b48:	push   DWORD PTR ds:0x1007eaa4
10049b4e:	call   0x10047192
10049b53:	pop    ecx
10049b54:	call   eax
10049b56:	pop    ecx
10049b57:	pop    ecx
10049b58:	cmp    WORD PTR [ebp-0x28],0x67
10049b5d:	jne    0x10049b78
10049b5f:	test   ebx,ebx
10049b61:	jne    0x10049b78
10049b63:	lea    eax,[ebp-0x58]
10049b66:	push   eax
10049b67:	push   esi
10049b68:	push   DWORD PTR ds:0x1007eaa0
10049b6e:	call   0x10047192
10049b73:	pop    ecx
10049b74:	call   eax
10049b76:	pop    ecx
10049b77:	pop    ecx
10049b78:	cmp    BYTE PTR [esi],0x2d
10049b7b:	jne    0x10049b88
10049b7d:	or     DWORD PTR [ebp-0x14],0x100
10049b84:	inc    esi
10049b85:	mov    DWORD PTR [ebp-0x1c],esi
10049b88:	push   esi
10049b89:	jmp    0x10049a00
10049b8e:	mov    DWORD PTR [ebp-0x18],edx
10049b91:	mov    DWORD PTR [ebp-0x60],0x7
10049b98:	jmp    0x10049bbb
10049b9a:	sub    eax,0x73
10049b9d:	je     0x100498df
10049ba3:	sub    eax,esi
10049ba5:	je     0x10049a8a
10049bab:	sub    eax,0x3
10049bae:	jne    0x10049d0b
10049bb4:	mov    DWORD PTR [ebp-0x60],0x27
10049bbb:	test   BYTE PTR [ebp-0x14],0x80
10049bbf:	mov    DWORD PTR [ebp-0x28],0x10
10049bc6:	je     0x10049a91
10049bcc:	mov    eax,DWORD PTR [ebp-0x60]
10049bcf:	add    eax,0x51
10049bd2:	mov    WORD PTR [ebp-0x3c],0x30
10049bd8:	mov    WORD PTR [ebp-0x3a],ax
10049bdc:	mov    DWORD PTR [ebp-0x30],esi
10049bdf:	jmp    0x10049a91
10049be4:	test   WORD PTR [ebp-0x14],0x1000
10049bea:	jne    0x10049a9d
10049bf0:	add    ebx,0x4
10049bf3:	test   BYTE PTR [ebp-0x14],0x20
10049bf7:	je     0x10049c0f
10049bf9:	test   BYTE PTR [ebp-0x14],0x40
10049bfd:	mov    DWORD PTR [ebp-0x24],ebx
10049c00:	je     0x10049c08
10049c02:	movsx  eax,WORD PTR [ebx-0x4]
10049c06:	jmp    0x10049c0c
10049c08:	movzx  eax,WORD PTR [ebx-0x4]
10049c0c:	cdq    
10049c0d:	jmp    0x10049c20
10049c0f:	test   BYTE PTR [ebp-0x14],0x40
10049c13:	mov    eax,DWORD PTR [ebx-0x4]
10049c16:	je     0x10049c1b
10049c18:	cdq    
10049c19:	jmp    0x10049c1d
10049c1b:	xor    edx,edx
10049c1d:	mov    DWORD PTR [ebp-0x24],ebx
10049c20:	test   BYTE PTR [ebp-0x14],0x40
10049c24:	je     0x10049c3e
10049c26:	test   edx,edx
10049c28:	jg     0x10049c3e
10049c2a:	jl     0x10049c30
10049c2c:	test   eax,eax
10049c2e:	jae    0x10049c3e
10049c30:	neg    eax
10049c32:	adc    edx,0x0
10049c35:	neg    edx
10049c37:	or     DWORD PTR [ebp-0x14],0x100
10049c3e:	test   WORD PTR [ebp-0x14],0x9000
10049c44:	mov    ebx,edx
10049c46:	mov    edi,eax
10049c48:	jne    0x10049c4c
10049c4a:	xor    ebx,ebx
10049c4c:	cmp    DWORD PTR [ebp-0x18],0x0
10049c50:	jge    0x10049c5b
10049c52:	mov    DWORD PTR [ebp-0x18],0x1
10049c59:	jmp    0x10049c6c
10049c5b:	and    DWORD PTR [ebp-0x14],0xfffffff7
10049c5f:	mov    eax,0x200
10049c64:	cmp    DWORD PTR [ebp-0x18],eax
10049c67:	jle    0x10049c6c
10049c69:	mov    DWORD PTR [ebp-0x18],eax
10049c6c:	mov    eax,edi
10049c6e:	or     eax,ebx
10049c70:	jne    0x10049c76
10049c72:	and    DWORD PTR [ebp-0x30],0x0
10049c76:	lea    esi,[ebp+0x1ef]
10049c7c:	mov    eax,DWORD PTR [ebp-0x18]
10049c7f:	dec    DWORD PTR [ebp-0x18]
10049c82:	test   eax,eax
10049c84:	jg     0x10049c8c
10049c86:	mov    eax,edi
10049c88:	or     eax,ebx
10049c8a:	je     0x10049cb0
10049c8c:	mov    eax,DWORD PTR [ebp-0x28]
10049c8f:	cdq    
10049c90:	push   edx
10049c91:	push   eax
10049c92:	push   ebx
10049c93:	push   edi
10049c94:	call   0x1004ac90
10049c99:	add    ecx,0x30
10049c9c:	cmp    ecx,0x39
10049c9f:	mov    DWORD PTR [ebp-0x7c],ebx
10049ca2:	mov    edi,eax
10049ca4:	mov    ebx,edx
10049ca6:	jle    0x10049cab
10049ca8:	add    ecx,DWORD PTR [ebp-0x60]
10049cab:	mov    BYTE PTR [esi],cl
10049cad:	dec    esi
10049cae:	jmp    0x10049c7c
10049cb0:	lea    eax,[ebp+0x1ef]
10049cb6:	sub    eax,esi
10049cb8:	inc    esi
10049cb9:	test   WORD PTR [ebp-0x14],0x200
10049cbf:	mov    DWORD PTR [ebp-0x20],eax
10049cc2:	mov    DWORD PTR [ebp-0x1c],esi
10049cc5:	je     0x10049d0b
10049cc7:	test   eax,eax
10049cc9:	je     0x10049cd2
10049ccb:	mov    ecx,esi
10049ccd:	cmp    BYTE PTR [ecx],0x30
10049cd0:	je     0x10049d0b
10049cd2:	dec    DWORD PTR [ebp-0x1c]
10049cd5:	mov    ecx,DWORD PTR [ebp-0x1c]
10049cd8:	mov    BYTE PTR [ecx],0x30
10049cdb:	inc    eax
10049cdc:	jmp    0x10049d08
10049cde:	test   ebx,ebx
10049ce0:	jne    0x10049cea
10049ce2:	mov    eax,ds:0x1007ed2c
10049ce7:	mov    DWORD PTR [ebp-0x1c],eax
10049cea:	mov    eax,DWORD PTR [ebp-0x1c]
10049ced:	mov    DWORD PTR [ebp-0x34],0x1
10049cf4:	jmp    0x10049cff
10049cf6:	dec    edi
10049cf7:	cmp    WORD PTR [eax],0x0
10049cfb:	je     0x10049d03
10049cfd:	add    eax,esi
10049cff:	test   edi,edi
10049d01:	jne    0x10049cf6
10049d03:	sub    eax,DWORD PTR [ebp-0x1c]
10049d06:	sar    eax,1
10049d08:	mov    DWORD PTR [ebp-0x20],eax
10049d0b:	cmp    DWORD PTR [ebp-0x5c],0x0
10049d0f:	jne    0x10049e14
10049d15:	mov    eax,DWORD PTR [ebp-0x14]
10049d18:	test   al,0x40
10049d1a:	je     0x10049d47
10049d1c:	test   ax,0x100
10049d20:	je     0x10049d2a
10049d22:	mov    WORD PTR [ebp-0x3c],0x2d
10049d28:	jmp    0x10049d40
10049d2a:	test   al,0x1
10049d2c:	je     0x10049d36
10049d2e:	mov    WORD PTR [ebp-0x3c],0x2b
10049d34:	jmp    0x10049d40
10049d36:	test   al,0x2
10049d38:	je     0x10049d47
10049d3a:	mov    WORD PTR [ebp-0x3c],0x20
10049d40:	mov    DWORD PTR [ebp-0x30],0x1
10049d47:	mov    ebx,DWORD PTR [ebp-0x38]
10049d4a:	mov    esi,DWORD PTR [ebp-0x20]
10049d4d:	sub    ebx,esi
10049d4f:	sub    ebx,DWORD PTR [ebp-0x30]
10049d52:	test   BYTE PTR [ebp-0x14],0xc
10049d56:	jne    0x10049d69
10049d58:	push   DWORD PTR [ebp-0x48]
10049d5b:	lea    eax,[ebp-0x2c]
10049d5e:	push   ebx
10049d5f:	push   0x20
10049d61:	call   0x10048bcd
10049d66:	add    esp,0xc
10049d69:	push   DWORD PTR [ebp-0x30]
10049d6c:	mov    edi,DWORD PTR [ebp-0x48]
10049d6f:	lea    eax,[ebp-0x2c]
10049d72:	lea    ecx,[ebp-0x3c]
10049d75:	call   0x1004952b
10049d7a:	test   BYTE PTR [ebp-0x14],0x8
10049d7e:	pop    ecx
10049d7f:	je     0x10049d96
10049d81:	test   BYTE PTR [ebp-0x14],0x4
10049d85:	jne    0x10049d96
10049d87:	push   edi
10049d88:	push   ebx
10049d89:	push   0x30
10049d8b:	lea    eax,[ebp-0x2c]
10049d8e:	call   0x10048bcd
10049d93:	add    esp,0xc
10049d96:	cmp    DWORD PTR [ebp-0x34],0x0
10049d9a:	jne    0x10049dea
10049d9c:	test   esi,esi
10049d9e:	jle    0x10049dea
10049da0:	mov    edi,DWORD PTR [ebp-0x1c]
10049da3:	mov    DWORD PTR [ebp-0x28],esi
10049da6:	dec    DWORD PTR [ebp-0x28]
10049da9:	lea    eax,[ebp-0x58]
10049dac:	push   eax
10049dad:	mov    eax,DWORD PTR [ebp-0x58]
10049db0:	push   DWORD PTR [eax+0xac]
10049db6:	lea    eax,[ebp-0x70]
10049db9:	push   edi
10049dba:	push   eax
10049dbb:	call   0x1004e066
10049dc0:	add    esp,0x10
10049dc3:	test   eax,eax
10049dc5:	mov    DWORD PTR [ebp-0x7c],eax
10049dc8:	jle    0x10049de4
10049dca:	push   DWORD PTR [ebp-0x70]
10049dcd:	mov    eax,DWORD PTR [ebp-0x48]
10049dd0:	lea    esi,[ebp-0x2c]
10049dd3:	call   0x10049506
10049dd8:	add    edi,DWORD PTR [ebp-0x7c]
10049ddb:	cmp    DWORD PTR [ebp-0x28],0x0
10049ddf:	pop    ecx
10049de0:	jg     0x10049da6
10049de2:	jmp    0x10049df7
10049de4:	or     DWORD PTR [ebp-0x2c],0xffffffff
10049de8:	jmp    0x10049df7
10049dea:	mov    ecx,DWORD PTR [ebp-0x1c]
10049ded:	push   esi
10049dee:	lea    eax,[ebp-0x2c]
10049df1:	call   0x1004952b
10049df6:	pop    ecx
10049df7:	cmp    DWORD PTR [ebp-0x2c],0x0
10049dfb:	jl     0x10049e14
10049dfd:	test   BYTE PTR [ebp-0x14],0x4
10049e01:	je     0x10049e14
10049e03:	push   DWORD PTR [ebp-0x48]
10049e06:	lea    eax,[ebp-0x2c]
10049e09:	push   ebx
10049e0a:	push   0x20
10049e0c:	call   0x10048bcd
10049e11:	add    esp,0xc
10049e14:	cmp    DWORD PTR [ebp-0x64],0x0
10049e18:	je     0x10049e27
10049e1a:	push   DWORD PTR [ebp-0x64]
10049e1d:	call   0x10043748
10049e22:	and    DWORD PTR [ebp-0x64],0x0
10049e26:	pop    ecx
10049e27:	mov    edi,DWORD PTR [ebp-0x6c]
10049e2a:	mov    ebx,DWORD PTR [ebp-0x24]
10049e2d:	movzx  eax,WORD PTR [edi]
10049e30:	test   ax,ax
10049e33:	mov    DWORD PTR [ebp-0x28],eax
10049e36:	je     0x10049e3f
10049e38:	mov    ecx,eax
10049e3a:	jmp    0x1004963b
10049e3f:	cmp    DWORD PTR [ebp-0x40],0x0
10049e43:	je     0x10049e4f
10049e45:	cmp    DWORD PTR [ebp-0x40],0x7
10049e49:	jne    0x100495d9
10049e4f:	cmp    BYTE PTR [ebp-0x4c],0x0
10049e53:	je     0x10049e5c
10049e55:	mov    eax,DWORD PTR [ebp-0x50]
10049e58:	and    DWORD PTR [eax+0x70],0xfffffffd
10049e5c:	mov    eax,DWORD PTR [ebp-0x2c]
10049e5f:	mov    ecx,DWORD PTR [ebp+0x3f0]
10049e65:	pop    edi
10049e66:	pop    esi
10049e67:	xor    ecx,ebp
10049e69:	pop    ebx
10049e6a:	call   0x100430d7
10049e6f:	add    ebp,0x3f4
10049e75:	leave  
10049e76:	ret    
10049e77:	lea    ecx,[ecx+0x0]
10049e7a:	ds cwde 
10049e7c:	add    al,0x10
10049e7e:	xchg   ebx,eax
10049e7f:	xchg   esi,eax
10049e80:	add    al,0x10
10049e82:	mov    al,0x96
10049e84:	add    al,0x10
10049e86:	cld    
10049e87:	xchg   esi,eax
10049e88:	add    al,0x10
10049e8a:	ss xchg edi,eax
10049e8c:	add    al,0x10
10049e8e:	aas    
10049e8f:	xchg   edi,eax
10049e90:	add    al,0x10
10049e92:	jbe    0x10049e2b
10049e94:	add    al,0x10
10049e96:	push   edi
10049e97:	cwde   
10049e98:	add    al,0x10
10049e9a:	push   ecx
10049e9b:	push   ebx
10049e9c:	mov    ebx,DWORD PTR [esp+0xc]
10049ea0:	push   esi
10049ea1:	push   edi
10049ea2:	xor    esi,esi
10049ea4:	xor    edi,edi
10049ea6:	cmp    ebx,DWORD PTR [edi*8+0x1007e2e8]
10049ead:	je     0x10049eb5
10049eaf:	inc    edi
10049eb0:	cmp    edi,0x17
10049eb3:	jl     0x10049ea6
10049eb5:	cmp    edi,0x17
10049eb8:	jae    0x1004a035
10049ebe:	push   ebp
10049ebf:	push   0x3
10049ec1:	call   0x1004ee02
10049ec6:	cmp    eax,0x1
10049ec9:	pop    ecx
10049eca:	je     0x1004a001
10049ed0:	push   0x3
10049ed2:	call   0x1004ee02
10049ed7:	test   eax,eax
10049ed9:	pop    ecx
10049eda:	jne    0x10049ee9
10049edc:	cmp    DWORD PTR ds:0x1007faa4,0x1
10049ee3:	je     0x1004a001
10049ee9:	cmp    ebx,0xfc
10049eef:	je     0x1004a034
10049ef5:	push   0x10066c28
10049efa:	mov    ebx,0x314
10049eff:	push   ebx
10049f00:	mov    ebp,0x1007ff98
10049f05:	push   ebp
10049f06:	call   0x10046e39
10049f0b:	add    esp,0xc
10049f0e:	test   eax,eax
10049f10:	je     0x10049f1f
10049f12:	push   esi
10049f13:	push   esi
10049f14:	push   esi
10049f15:	push   esi
10049f16:	push   esi
10049f17:	call   0x100434d0
10049f1c:	add    esp,0x14
10049f1f:	push   0x104
10049f24:	mov    esi,0x1007ffb1
10049f29:	push   esi
10049f2a:	push   0x0
10049f2c:	mov    BYTE PTR ds:0x100800b5,0x0
10049f33:	call   DWORD PTR ds:0x100661d8
10049f39:	test   eax,eax
10049f3b:	jne    0x10049f63
10049f3d:	push   0x10066c10
10049f42:	push   0x2fb
10049f47:	push   esi
10049f48:	call   0x10046e39
10049f4d:	add    esp,0xc
10049f50:	test   eax,eax
10049f52:	je     0x10049f63
10049f54:	xor    eax,eax
10049f56:	push   eax
10049f57:	push   eax
10049f58:	push   eax
10049f59:	push   eax
10049f5a:	push   eax
10049f5b:	call   0x100434d0
10049f60:	add    esp,0x14
10049f63:	push   esi
10049f64:	call   0x10043250
10049f69:	inc    eax
10049f6a:	cmp    eax,0x3c
10049f6d:	pop    ecx
10049f6e:	jbe    0x10049fa8
10049f70:	push   esi
10049f71:	call   0x10043250
10049f76:	sub    esi,0x3b
10049f79:	add    eax,esi
10049f7b:	push   0x3
10049f7d:	mov    ecx,0x100802ac
10049f82:	push   0x10066c0c
10049f87:	sub    ecx,eax
10049f89:	push   ecx
10049f8a:	push   eax
10049f8b:	call   0x1004ed4f
10049f90:	add    esp,0x14
10049f93:	test   eax,eax
10049f95:	je     0x10049fa8
10049f97:	xor    esi,esi
10049f99:	push   esi
10049f9a:	push   esi
10049f9b:	push   esi
10049f9c:	push   esi
10049f9d:	push   esi
10049f9e:	call   0x100434d0
10049fa3:	add    esp,0x14
10049fa6:	jmp    0x10049faa
10049fa8:	xor    esi,esi
10049faa:	push   0x10066c08
10049faf:	push   ebx
10049fb0:	push   ebp
10049fb1:	call   0x1004ecde
10049fb6:	add    esp,0xc
10049fb9:	test   eax,eax
10049fbb:	je     0x10049fca
10049fbd:	push   esi
10049fbe:	push   esi
10049fbf:	push   esi
10049fc0:	push   esi
10049fc1:	push   esi
10049fc2:	call   0x100434d0
10049fc7:	add    esp,0x14
10049fca:	push   DWORD PTR [edi*8+0x1007e2ec]
10049fd1:	push   ebx
10049fd2:	push   ebp
10049fd3:	call   0x1004ecde
10049fd8:	add    esp,0xc
10049fdb:	test   eax,eax
10049fdd:	je     0x10049fec
10049fdf:	push   esi
10049fe0:	push   esi
10049fe1:	push   esi
10049fe2:	push   esi
10049fe3:	push   esi
10049fe4:	call   0x100434d0
10049fe9:	add    esp,0x14
10049fec:	push   0x12010
10049ff1:	push   0x10066be0
10049ff6:	push   ebp
10049ff7:	call   0x1004eb40
10049ffc:	add    esp,0xc
10049fff:	jmp    0x1004a034
1004a001:	push   0xfffffff4
1004a003:	call   DWORD PTR ds:0x100661d4
1004a009:	mov    ebp,eax
1004a00b:	cmp    ebp,esi
1004a00d:	je     0x1004a034
1004a00f:	cmp    ebp,0xffffffff
1004a012:	je     0x1004a034
1004a014:	push   0x0
1004a016:	lea    eax,[esp+0x14]
1004a01a:	push   eax
1004a01b:	lea    esi,[edi*8+0x1007e2ec]
1004a022:	push   DWORD PTR [esi]
1004a024:	call   0x10043250
1004a029:	pop    ecx
1004a02a:	push   eax
1004a02b:	push   DWORD PTR [esi]
1004a02d:	push   ebp
1004a02e:	call   DWORD PTR ds:0x100660b4
1004a034:	pop    ebp
1004a035:	pop    edi
1004a036:	pop    esi
1004a037:	pop    ebx
1004a038:	pop    ecx
1004a039:	ret    
1004a03a:	push   0x3
1004a03c:	call   0x1004ee02
1004a041:	cmp    eax,0x1
1004a044:	pop    ecx
1004a045:	je     0x1004a05c
1004a047:	push   0x3
1004a049:	call   0x1004ee02
1004a04e:	test   eax,eax
1004a050:	pop    ecx
1004a051:	jne    0x1004a072
1004a053:	cmp    DWORD PTR ds:0x1007faa4,0x1
1004a05a:	jne    0x1004a072
1004a05c:	push   0xfc
1004a061:	call   0x10049e9a
1004a066:	push   0xff
1004a06b:	call   0x10049e9a
1004a070:	pop    ecx
1004a071:	pop    ecx
1004a072:	ret    
1004a073:	int3   
1004a074:	int3   
1004a075:	int3   
1004a076:	int3   
1004a077:	int3   
1004a078:	int3   
1004a079:	int3   
1004a07a:	int3   
1004a07b:	int3   
1004a07c:	int3   
1004a07d:	int3   
1004a07e:	int3   
1004a07f:	int3   
1004a080:	push   ecx
1004a081:	lea    ecx,[esp+0x4]
1004a085:	sub    ecx,eax
1004a087:	sbb    eax,eax
1004a089:	not    eax
1004a08b:	and    ecx,eax
1004a08d:	mov    eax,esp
1004a08f:	and    eax,0xfffff000
1004a094:	cmp    ecx,eax
1004a096:	jb     0x1004a0a2
1004a098:	mov    eax,ecx
1004a09a:	pop    ecx
1004a09b:	xchg   esp,eax
1004a09c:	mov    eax,DWORD PTR [eax]
1004a09e:	mov    DWORD PTR [esp],eax
1004a0a1:	ret    
1004a0a2:	sub    eax,0x1000
1004a0a7:	test   DWORD PTR [eax],eax
1004a0a9:	jmp    0x1004a094
1004a0ab:	push   ebp
1004a0ac:	mov    ebp,esp
1004a0ae:	sub    esp,0x8
1004a0b1:	mov    DWORD PTR [ebp-0x4],edi
1004a0b4:	mov    DWORD PTR [ebp-0x8],esi
1004a0b7:	mov    esi,DWORD PTR [ebp+0xc]
1004a0ba:	mov    edi,DWORD PTR [ebp+0x8]
1004a0bd:	mov    ecx,DWORD PTR [ebp+0x10]
1004a0c0:	shr    ecx,0x7
1004a0c3:	jmp    0x1004a0cb
1004a0c5:	lea    ebx,[ebx+0x0]
1004a0cb:	movdqa xmm0,XMMWORD PTR [esi]
1004a0cf:	movdqa xmm1,XMMWORD PTR [esi+0x10]
1004a0d4:	movdqa xmm2,XMMWORD PTR [esi+0x20]
1004a0d9:	movdqa xmm3,XMMWORD PTR [esi+0x30]
1004a0de:	movdqa XMMWORD PTR [edi],xmm0
1004a0e2:	movdqa XMMWORD PTR [edi+0x10],xmm1
1004a0e7:	movdqa XMMWORD PTR [edi+0x20],xmm2
1004a0ec:	movdqa XMMWORD PTR [edi+0x30],xmm3
1004a0f1:	movdqa xmm4,XMMWORD PTR [esi+0x40]
1004a0f6:	movdqa xmm5,XMMWORD PTR [esi+0x50]
1004a0fb:	movdqa xmm6,XMMWORD PTR [esi+0x60]
1004a100:	movdqa xmm7,XMMWORD PTR [esi+0x70]
1004a105:	movdqa XMMWORD PTR [edi+0x40],xmm4
1004a10a:	movdqa XMMWORD PTR [edi+0x50],xmm5
1004a10f:	movdqa XMMWORD PTR [edi+0x60],xmm6
1004a114:	movdqa XMMWORD PTR [edi+0x70],xmm7
1004a119:	lea    esi,[esi+0x80]
1004a11f:	lea    edi,[edi+0x80]
1004a125:	dec    ecx
1004a126:	jne    0x1004a0cb
1004a128:	mov    esi,DWORD PTR [ebp-0x8]
1004a12b:	mov    edi,DWORD PTR [ebp-0x4]
1004a12e:	mov    esp,ebp
1004a130:	pop    ebp
1004a131:	ret    
1004a132:	push   ebp
1004a133:	mov    ebp,esp
1004a135:	sub    esp,0x1c
1004a138:	mov    DWORD PTR [ebp-0xc],edi
1004a13b:	mov    DWORD PTR [ebp-0x8],esi
1004a13e:	mov    DWORD PTR [ebp-0x4],ebx
1004a141:	mov    ebx,DWORD PTR [ebp+0xc]
1004a144:	mov    eax,ebx
1004a146:	cdq    
1004a147:	mov    ecx,eax
1004a149:	mov    eax,DWORD PTR [ebp+0x8]
1004a14c:	xor    ecx,edx
1004a14e:	sub    ecx,edx
1004a150:	and    ecx,0xf
1004a153:	xor    ecx,edx
1004a155:	sub    ecx,edx
1004a157:	cdq    
1004a158:	mov    edi,eax
1004a15a:	xor    edi,edx
1004a15c:	sub    edi,edx
1004a15e:	and    edi,0xf
1004a161:	xor    edi,edx
1004a163:	sub    edi,edx
1004a165:	mov    edx,ecx
1004a167:	or     edx,edi
1004a169:	jne    0x1004a1b5
1004a16b:	mov    esi,DWORD PTR [ebp+0x10]
1004a16e:	mov    ecx,esi
1004a170:	and    ecx,0x7f
1004a173:	mov    DWORD PTR [ebp-0x18],ecx
1004a176:	cmp    esi,ecx
1004a178:	je     0x1004a18d
1004a17a:	sub    esi,ecx
1004a17c:	push   esi
1004a17d:	push   ebx
1004a17e:	push   eax
1004a17f:	call   0x1004a0ab
1004a184:	add    esp,0xc
1004a187:	mov    eax,DWORD PTR [ebp+0x8]
1004a18a:	mov    ecx,DWORD PTR [ebp-0x18]
1004a18d:	test   ecx,ecx
1004a18f:	je     0x1004a208
1004a191:	mov    ebx,DWORD PTR [ebp+0x10]
1004a194:	mov    edx,DWORD PTR [ebp+0xc]
1004a197:	add    edx,ebx
1004a199:	sub    edx,ecx
1004a19b:	mov    DWORD PTR [ebp-0x14],edx
1004a19e:	add    ebx,eax
1004a1a0:	sub    ebx,ecx
1004a1a2:	mov    DWORD PTR [ebp-0x10],ebx
1004a1a5:	mov    esi,DWORD PTR [ebp-0x14]
1004a1a8:	mov    edi,DWORD PTR [ebp-0x10]
1004a1ab:	mov    ecx,DWORD PTR [ebp-0x18]
1004a1ae:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
1004a1b0:	mov    eax,DWORD PTR [ebp+0x8]
1004a1b3:	jmp    0x1004a208
1004a1b5:	cmp    ecx,edi
1004a1b7:	jne    0x1004a1ee
1004a1b9:	neg    ecx
1004a1bb:	add    ecx,0x10
1004a1be:	mov    DWORD PTR [ebp-0x1c],ecx
1004a1c1:	mov    esi,DWORD PTR [ebp+0xc]
1004a1c4:	mov    edi,DWORD PTR [ebp+0x8]
1004a1c7:	mov    ecx,DWORD PTR [ebp-0x1c]
1004a1ca:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
1004a1cc:	mov    ecx,DWORD PTR [ebp+0x8]
1004a1cf:	add    ecx,DWORD PTR [ebp-0x1c]
1004a1d2:	mov    edx,DWORD PTR [ebp+0xc]
1004a1d5:	add    edx,DWORD PTR [ebp-0x1c]
1004a1d8:	mov    eax,DWORD PTR [ebp+0x10]
1004a1db:	sub    eax,DWORD PTR [ebp-0x1c]
1004a1de:	push   eax
1004a1df:	push   edx
1004a1e0:	push   ecx
1004a1e1:	call   0x1004a132
1004a1e6:	add    esp,0xc
1004a1e9:	mov    eax,DWORD PTR [ebp+0x8]
1004a1ec:	jmp    0x1004a208
1004a1ee:	mov    esi,DWORD PTR [ebp+0xc]
1004a1f1:	mov    edi,DWORD PTR [ebp+0x8]
1004a1f4:	mov    ecx,DWORD PTR [ebp+0x10]
1004a1f7:	mov    edx,ecx
1004a1f9:	shr    ecx,0x2
1004a1fc:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1004a1fe:	mov    ecx,edx
1004a200:	and    ecx,0x3
1004a203:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
1004a205:	mov    eax,DWORD PTR [ebp+0x8]
1004a208:	mov    ebx,DWORD PTR [ebp-0x4]
1004a20b:	mov    esi,DWORD PTR [ebp-0x8]
1004a20e:	mov    edi,DWORD PTR [ebp-0xc]
1004a211:	mov    esp,ebp
1004a213:	pop    ebp
1004a214:	ret    
1004a215:	and    DWORD PTR ds:0x10082580,0x0
1004a21c:	call   0x1004ee98
1004a221:	mov    ds:0x10082580,eax
1004a226:	xor    eax,eax
1004a228:	ret    
1004a229:	sub    eax,0x3a4
1004a22e:	je     0x1004a252
1004a230:	sub    eax,0x4
1004a233:	je     0x1004a24c
1004a235:	sub    eax,0xd
1004a238:	je     0x1004a246
1004a23a:	dec    eax
1004a23b:	je     0x1004a240
1004a23d:	xor    eax,eax
1004a23f:	ret    
1004a240:	mov    eax,0x404
1004a245:	ret    
1004a246:	mov    eax,0x412
1004a24b:	ret    
1004a24c:	mov    eax,0x804
1004a251:	ret    
1004a252:	mov    eax,0x411
1004a257:	ret    
1004a258:	push   ebx
1004a259:	push   ebp
1004a25a:	push   esi
1004a25b:	push   edi
1004a25c:	mov    ebp,0x101
1004a261:	mov    esi,eax
1004a263:	push   ebp
1004a264:	xor    edi,edi
1004a266:	lea    ebx,[esi+0x1c]
1004a269:	push   edi
1004a26a:	push   ebx
1004a26b:	call   0x10045ea0
1004a270:	mov    DWORD PTR [esi+0x4],edi
1004a273:	mov    DWORD PTR [esi+0x8],edi
1004a276:	mov    DWORD PTR [esi+0xc],edi
1004a279:	xor    eax,eax
1004a27b:	lea    edi,[esi+0x10]
1004a27e:	stos   DWORD PTR es:[edi],eax
1004a27f:	stos   DWORD PTR es:[edi],eax
1004a280:	stos   DWORD PTR es:[edi],eax
1004a281:	mov    eax,0x1007e3a0
1004a286:	add    esp,0xc
1004a289:	sub    eax,esi
1004a28b:	mov    cl,BYTE PTR [eax+ebx*1]
1004a28e:	mov    BYTE PTR [ebx],cl
1004a290:	inc    ebx
1004a291:	dec    ebp
1004a292:	jne    0x1004a28b
1004a294:	lea    ecx,[esi+0x11d]
1004a29a:	mov    esi,0x100
1004a29f:	mov    dl,BYTE PTR [ecx+eax*1]
1004a2a2:	mov    BYTE PTR [ecx],dl
1004a2a4:	inc    ecx
1004a2a5:	dec    esi
1004a2a6:	jne    0x1004a29f
1004a2a8:	pop    edi
1004a2a9:	pop    esi
1004a2aa:	pop    ebp
1004a2ab:	pop    ebx
1004a2ac:	ret    
1004a2ad:	push   ebp
1004a2ae:	lea    ebp,[esp-0x49c]
1004a2b5:	sub    esp,0x51c
1004a2bb:	mov    eax,ds:0x1007e030
1004a2c0:	xor    eax,ebp
1004a2c2:	mov    DWORD PTR [ebp+0x498],eax
1004a2c8:	push   ebx
1004a2c9:	push   edi
1004a2ca:	lea    eax,[ebp-0x7c]
1004a2cd:	push   eax
1004a2ce:	push   DWORD PTR [esi+0x4]
1004a2d1:	call   DWORD PTR ds:0x100661dc
1004a2d7:	test   eax,eax
1004a2d9:	mov    edi,0x100
1004a2de:	je     0x1004a3d3
1004a2e4:	xor    eax,eax
1004a2e6:	mov    BYTE PTR [ebp+eax*1+0x398],al
1004a2ed:	inc    eax
1004a2ee:	cmp    eax,edi
1004a2f0:	jb     0x1004a2e6
1004a2f2:	mov    al,BYTE PTR [ebp-0x76]
1004a2f5:	test   al,al
1004a2f7:	mov    BYTE PTR [ebp+0x398],0x20
1004a2fe:	je     0x1004a32b
1004a300:	lea    ebx,[ebp-0x75]
1004a303:	movzx  ecx,al
1004a306:	movzx  eax,BYTE PTR [ebx]
1004a309:	cmp    ecx,eax
1004a30b:	ja     0x1004a323
1004a30d:	sub    eax,ecx
1004a30f:	inc    eax
1004a310:	push   eax
1004a311:	lea    edx,[ebp+ecx*1+0x398]
1004a318:	push   0x20
1004a31a:	push   edx
1004a31b:	call   0x10045ea0
1004a320:	add    esp,0xc
1004a323:	inc    ebx
1004a324:	mov    al,BYTE PTR [ebx]
1004a326:	inc    ebx
1004a327:	test   al,al
1004a329:	jne    0x1004a303
1004a32b:	push   0x0
1004a32d:	push   DWORD PTR [esi+0xc]
1004a330:	lea    eax,[ebp-0x68]
1004a333:	push   DWORD PTR [esi+0x4]
1004a336:	push   eax
1004a337:	push   edi
1004a338:	lea    eax,[ebp+0x398]
1004a33e:	push   eax
1004a33f:	push   0x1
1004a341:	push   0x0
1004a343:	call   0x1004f0bd
1004a348:	xor    ebx,ebx
1004a34a:	push   ebx
1004a34b:	push   DWORD PTR [esi+0x4]
1004a34e:	lea    eax,[ebp+0x298]
1004a354:	push   edi
1004a355:	push   eax
1004a356:	push   edi
1004a357:	lea    eax,[ebp+0x398]
1004a35d:	push   eax
1004a35e:	push   edi
1004a35f:	push   DWORD PTR [esi+0xc]
1004a362:	push   ebx
1004a363:	call   0x1004b51c
1004a368:	add    esp,0x44
1004a36b:	push   ebx
1004a36c:	push   DWORD PTR [esi+0x4]
1004a36f:	lea    eax,[ebp+0x198]
1004a375:	push   edi
1004a376:	push   eax
1004a377:	push   edi
1004a378:	lea    eax,[ebp+0x398]
1004a37e:	push   eax
1004a37f:	push   0x200
1004a384:	push   DWORD PTR [esi+0xc]
1004a387:	push   ebx
1004a388:	call   0x1004b51c
1004a38d:	add    esp,0x24
1004a390:	xor    eax,eax
1004a392:	movzx  ecx,WORD PTR [ebp+eax*2-0x68]
1004a397:	test   cl,0x1
1004a39a:	je     0x1004a3aa
1004a39c:	or     BYTE PTR [esi+eax*1+0x1d],0x10
1004a3a1:	mov    cl,BYTE PTR [ebp+eax*1+0x298]
1004a3a8:	jmp    0x1004a3bb
1004a3aa:	test   cl,0x2
1004a3ad:	je     0x1004a3c4
1004a3af:	or     BYTE PTR [esi+eax*1+0x1d],0x20
1004a3b4:	mov    cl,BYTE PTR [ebp+eax*1+0x198]
1004a3bb:	mov    BYTE PTR [esi+eax*1+0x11d],cl
1004a3c2:	jmp    0x1004a3cc
1004a3c4:	mov    BYTE PTR [esi+eax*1+0x11d],0x0
1004a3cc:	inc    eax
1004a3cd:	cmp    eax,edi
1004a3cf:	jb     0x1004a392
1004a3d1:	jmp    0x1004a420
1004a3d3:	lea    eax,[esi+0x11d]
1004a3d9:	mov    DWORD PTR [ebp-0x80],0xffffff9f
1004a3e0:	xor    ecx,ecx
1004a3e2:	sub    DWORD PTR [ebp-0x80],eax
1004a3e5:	mov    edx,DWORD PTR [ebp-0x80]
1004a3e8:	lea    eax,[esi+ecx*1+0x11d]
1004a3ef:	add    edx,eax
1004a3f1:	lea    ebx,[edx+0x20]
1004a3f4:	cmp    ebx,0x19
1004a3f7:	ja     0x1004a405
1004a3f9:	or     BYTE PTR [esi+ecx*1+0x1d],0x10
1004a3fe:	mov    dl,cl
1004a400:	add    dl,0x20
1004a403:	jmp    0x1004a414
1004a405:	cmp    edx,0x19
1004a408:	ja     0x1004a418
1004a40a:	or     BYTE PTR [esi+ecx*1+0x1d],0x20
1004a40f:	mov    dl,cl
1004a411:	sub    dl,0x20
1004a414:	mov    BYTE PTR [eax],dl
1004a416:	jmp    0x1004a41b
1004a418:	mov    BYTE PTR [eax],0x0
1004a41b:	inc    ecx
1004a41c:	cmp    ecx,edi
1004a41e:	jb     0x1004a3e5
1004a420:	mov    ecx,DWORD PTR [ebp+0x498]
1004a426:	pop    edi
1004a427:	xor    ecx,ebp
1004a429:	pop    ebx
1004a42a:	call   0x100430d7
1004a42f:	add    ebp,0x49c
1004a435:	leave  
1004a436:	ret    
1004a437:	push   0xc
1004a439:	push   0x10074868
1004a43e:	call   0x10046f34
1004a443:	call   0x1004739c
1004a448:	mov    edi,eax
1004a44a:	mov    eax,ds:0x1007e8c4
1004a44f:	test   DWORD PTR [edi+0x70],eax
1004a452:	je     0x1004a471
1004a454:	cmp    DWORD PTR [edi+0x6c],0x0
1004a458:	je     0x1004a471
1004a45a:	mov    esi,DWORD PTR [edi+0x68]
1004a45d:	test   esi,esi
1004a45f:	jne    0x1004a469
1004a461:	push   0x20
1004a463:	call   0x10047838
1004a468:	pop    ecx
1004a469:	mov    eax,esi
1004a46b:	call   0x10046f79
1004a470:	ret    
1004a471:	push   0xd
1004a473:	call   0x10047f3d
1004a478:	pop    ecx
1004a479:	and    DWORD PTR [ebp-0x4],0x0
1004a47d:	mov    esi,DWORD PTR [edi+0x68]
1004a480:	mov    DWORD PTR [ebp-0x1c],esi
1004a483:	cmp    esi,DWORD PTR ds:0x1007e7c8
1004a489:	je     0x1004a4c1
1004a48b:	test   esi,esi
1004a48d:	je     0x1004a4a9
1004a48f:	push   esi
1004a490:	call   DWORD PTR ds:0x100660ac
1004a496:	test   eax,eax
1004a498:	jne    0x1004a4a9
1004a49a:	cmp    esi,0x1007e3a0
1004a4a0:	je     0x1004a4a9
1004a4a2:	push   esi
1004a4a3:	call   0x10043748
1004a4a8:	pop    ecx
1004a4a9:	mov    eax,ds:0x1007e7c8
1004a4ae:	mov    DWORD PTR [edi+0x68],eax
1004a4b1:	mov    esi,DWORD PTR ds:0x1007e7c8
1004a4b7:	mov    DWORD PTR [ebp-0x1c],esi
1004a4ba:	push   esi
1004a4bb:	call   DWORD PTR ds:0x100660a4
1004a4c1:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1004a4c8:	call   0x1004a4d2
1004a4cd:	jmp    0x1004a45d
1004a4cf:	mov    esi,DWORD PTR [ebp-0x1c]
1004a4d2:	push   0xd
1004a4d4:	call   0x10047e65
1004a4d9:	pop    ecx
1004a4da:	ret    
1004a4db:	push   ebp
1004a4dc:	mov    ebp,esp
1004a4de:	sub    esp,0x10
1004a4e1:	push   ebx
1004a4e2:	xor    ebx,ebx
1004a4e4:	push   ebx
1004a4e5:	lea    ecx,[ebp-0x10]
1004a4e8:	call   0x10045785
1004a4ed:	cmp    esi,0xfffffffe
1004a4f0:	mov    DWORD PTR ds:0x100802ac,ebx
1004a4f6:	jne    0x1004a516
1004a4f8:	mov    DWORD PTR ds:0x100802ac,0x1
1004a502:	call   DWORD PTR ds:0x100661e4
1004a508:	cmp    BYTE PTR [ebp-0x4],bl
1004a50b:	je     0x1004a552
1004a50d:	mov    ecx,DWORD PTR [ebp-0x8]
1004a510:	and    DWORD PTR [ecx+0x70],0xfffffffd
1004a514:	jmp    0x1004a552
1004a516:	cmp    esi,0xfffffffd
1004a519:	jne    0x1004a52d
1004a51b:	mov    DWORD PTR ds:0x100802ac,0x1
1004a525:	call   DWORD PTR ds:0x100661e0
1004a52b:	jmp    0x1004a508
1004a52d:	cmp    esi,0xfffffffc
1004a530:	jne    0x1004a544
1004a532:	mov    eax,DWORD PTR [ebp-0x10]
1004a535:	mov    eax,DWORD PTR [eax+0x4]
1004a538:	mov    DWORD PTR ds:0x100802ac,0x1
1004a542:	jmp    0x1004a508
1004a544:	cmp    BYTE PTR [ebp-0x4],bl
1004a547:	je     0x1004a550
1004a549:	mov    eax,DWORD PTR [ebp-0x8]
1004a54c:	and    DWORD PTR [eax+0x70],0xfffffffd
1004a550:	mov    eax,esi
1004a552:	pop    ebx
1004a553:	leave  
1004a554:	ret    
1004a555:	push   ebp
1004a556:	mov    ebp,esp
1004a558:	sub    esp,0x20
1004a55b:	mov    eax,ds:0x1007e030
1004a560:	xor    eax,ebp
1004a562:	mov    DWORD PTR [ebp-0x4],eax
1004a565:	push   ebx
1004a566:	mov    ebx,DWORD PTR [ebp+0xc]
1004a569:	push   esi
1004a56a:	mov    esi,DWORD PTR [ebp+0x8]
1004a56d:	push   edi
1004a56e:	call   0x1004a4db
1004a573:	mov    edi,eax
1004a575:	xor    esi,esi
1004a577:	cmp    edi,esi
1004a579:	mov    DWORD PTR [ebp+0x8],edi
1004a57c:	jne    0x1004a58c
1004a57e:	mov    eax,ebx
1004a580:	call   0x1004a258
1004a585:	xor    eax,eax
1004a587:	jmp    0x1004a6f1
1004a58c:	mov    DWORD PTR [ebp-0x1c],esi
1004a58f:	xor    eax,eax
1004a591:	cmp    DWORD PTR [eax+0x1007e7d0],edi
1004a597:	je     0x1004a600
1004a599:	inc    DWORD PTR [ebp-0x1c]
1004a59c:	add    eax,0x30
1004a59f:	cmp    eax,0xf0
1004a5a4:	jb     0x1004a591
1004a5a6:	lea    eax,[ebp-0x18]
1004a5a9:	push   eax
1004a5aa:	push   edi
1004a5ab:	call   DWORD PTR ds:0x100661dc
1004a5b1:	test   eax,eax
1004a5b3:	je     0x1004a6e2
1004a5b9:	push   0x101
1004a5be:	lea    eax,[ebx+0x1c]
1004a5c1:	push   esi
1004a5c2:	push   eax
1004a5c3:	call   0x10045ea0
1004a5c8:	xor    edx,edx
1004a5ca:	inc    edx
1004a5cb:	add    esp,0xc
1004a5ce:	cmp    DWORD PTR [ebp-0x18],edx
1004a5d1:	mov    DWORD PTR [ebx+0x4],edi
1004a5d4:	mov    DWORD PTR [ebx+0xc],esi
1004a5d7:	jbe    0x1004a6d5
1004a5dd:	cmp    BYTE PTR [ebp-0x12],0x0
1004a5e1:	je     0x1004a6b6
1004a5e7:	lea    esi,[ebp-0x11]
1004a5ea:	mov    cl,BYTE PTR [esi]
1004a5ec:	test   cl,cl
1004a5ee:	je     0x1004a6b6
1004a5f4:	movzx  eax,BYTE PTR [esi-0x1]
1004a5f8:	movzx  ecx,cl
1004a5fb:	jmp    0x1004a6a6
1004a600:	push   0x101
1004a605:	lea    eax,[ebx+0x1c]
1004a608:	push   esi
1004a609:	push   eax
1004a60a:	call   0x10045ea0
1004a60f:	mov    ecx,DWORD PTR [ebp-0x1c]
1004a612:	add    esp,0xc
1004a615:	imul   ecx,ecx,0x30
1004a618:	mov    DWORD PTR [ebp-0x20],esi
1004a61b:	lea    esi,[ecx+0x1007e7e0]
1004a621:	mov    DWORD PTR [ebp-0x1c],esi
1004a624:	jmp    0x1004a650
1004a626:	mov    al,BYTE PTR [esi+0x1]
1004a629:	test   al,al
1004a62b:	je     0x1004a655
1004a62d:	movzx  edi,BYTE PTR [esi]
1004a630:	movzx  eax,al
1004a633:	jmp    0x1004a647
1004a635:	mov    eax,DWORD PTR [ebp-0x20]
1004a638:	mov    al,BYTE PTR [eax+0x1007e7cc]
1004a63e:	or     BYTE PTR [ebx+edi*1+0x1d],al
1004a642:	movzx  eax,BYTE PTR [esi+0x1]
1004a646:	inc    edi
1004a647:	cmp    edi,eax
1004a649:	jbe    0x1004a635
1004a64b:	mov    edi,DWORD PTR [ebp+0x8]
1004a64e:	inc    esi
1004a64f:	inc    esi
1004a650:	cmp    BYTE PTR [esi],0x0
1004a653:	jne    0x1004a626
1004a655:	mov    esi,DWORD PTR [ebp-0x1c]
1004a658:	inc    DWORD PTR [ebp-0x20]
1004a65b:	add    esi,0x8
1004a65e:	cmp    DWORD PTR [ebp-0x20],0x4
1004a662:	mov    DWORD PTR [ebp-0x1c],esi
1004a665:	jb     0x1004a650
1004a667:	mov    eax,edi
1004a669:	mov    DWORD PTR [ebx+0x4],edi
1004a66c:	mov    DWORD PTR [ebx+0x8],0x1
1004a673:	call   0x1004a229
1004a678:	push   0x6
1004a67a:	mov    DWORD PTR [ebx+0xc],eax
1004a67d:	lea    eax,[ebx+0x10]
1004a680:	lea    ecx,[ecx+0x1007e7d4]
1004a686:	pop    edx
1004a687:	mov    si,WORD PTR [ecx]
1004a68a:	inc    ecx
1004a68b:	mov    WORD PTR [eax],si
1004a68e:	inc    ecx
1004a68f:	inc    eax
1004a690:	inc    eax
1004a691:	dec    edx
1004a692:	jne    0x1004a687
1004a694:	mov    esi,ebx
1004a696:	call   0x1004a2ad
1004a69b:	jmp    0x1004a585
1004a6a0:	or     BYTE PTR [ebx+eax*1+0x1d],0x4
1004a6a5:	inc    eax
1004a6a6:	cmp    eax,ecx
1004a6a8:	jbe    0x1004a6a0
1004a6aa:	inc    esi
1004a6ab:	inc    esi
1004a6ac:	cmp    BYTE PTR [esi-0x1],0x0
1004a6b0:	jne    0x1004a5ea
1004a6b6:	lea    eax,[ebx+0x1e]
1004a6b9:	mov    ecx,0xfe
1004a6be:	or     BYTE PTR [eax],0x8
1004a6c1:	inc    eax
1004a6c2:	dec    ecx
1004a6c3:	jne    0x1004a6be
1004a6c5:	mov    eax,DWORD PTR [ebx+0x4]
1004a6c8:	call   0x1004a229
1004a6cd:	mov    DWORD PTR [ebx+0xc],eax
1004a6d0:	mov    DWORD PTR [ebx+0x8],edx
1004a6d3:	jmp    0x1004a6d8
1004a6d5:	mov    DWORD PTR [ebx+0x8],esi
1004a6d8:	xor    eax,eax
1004a6da:	lea    edi,[ebx+0x10]
1004a6dd:	stos   DWORD PTR es:[edi],eax
1004a6de:	stos   DWORD PTR es:[edi],eax
1004a6df:	stos   DWORD PTR es:[edi],eax
1004a6e0:	jmp    0x1004a694
1004a6e2:	cmp    DWORD PTR ds:0x100802ac,esi
1004a6e8:	jne    0x1004a57e
1004a6ee:	or     eax,0xffffffff
1004a6f1:	mov    ecx,DWORD PTR [ebp-0x4]
1004a6f4:	pop    edi
1004a6f5:	pop    esi
1004a6f6:	xor    ecx,ebp
1004a6f8:	pop    ebx
1004a6f9:	call   0x100430d7
1004a6fe:	leave  
1004a6ff:	ret    
1004a700:	push   0x14
1004a702:	push   0x10074888
1004a707:	call   0x10046f34
1004a70c:	or     DWORD PTR [ebp-0x20],0xffffffff
1004a710:	call   0x1004739c
1004a715:	mov    edi,eax
1004a717:	mov    DWORD PTR [ebp-0x24],edi
1004a71a:	call   0x1004a437
1004a71f:	mov    ebx,DWORD PTR [edi+0x68]
1004a722:	mov    esi,DWORD PTR [ebp+0x8]
1004a725:	call   0x1004a4db
1004a72a:	mov    DWORD PTR [ebp+0x8],eax
1004a72d:	cmp    eax,DWORD PTR [ebx+0x4]
1004a730:	je     0x1004a88d
1004a736:	push   0x220
1004a73b:	call   0x100476c2
1004a740:	pop    ecx
1004a741:	mov    ebx,eax
1004a743:	test   ebx,ebx
1004a745:	je     0x1004a891
1004a74b:	mov    ecx,0x88
1004a750:	mov    esi,DWORD PTR [edi+0x68]
1004a753:	mov    edi,ebx
1004a755:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1004a757:	and    DWORD PTR [ebx],0x0
1004a75a:	push   ebx
1004a75b:	push   DWORD PTR [ebp+0x8]
1004a75e:	call   0x1004a555
1004a763:	pop    ecx
1004a764:	pop    ecx
1004a765:	mov    DWORD PTR [ebp-0x20],eax
1004a768:	test   eax,eax
1004a76a:	jne    0x1004a86c
1004a770:	mov    esi,DWORD PTR [ebp-0x24]
1004a773:	push   DWORD PTR [esi+0x68]
1004a776:	call   DWORD PTR ds:0x100660ac
1004a77c:	test   eax,eax
1004a77e:	jne    0x1004a791
1004a780:	mov    eax,DWORD PTR [esi+0x68]
1004a783:	cmp    eax,0x1007e3a0
1004a788:	je     0x1004a791
1004a78a:	push   eax
1004a78b:	call   0x10043748
1004a790:	pop    ecx
1004a791:	mov    DWORD PTR [esi+0x68],ebx
1004a794:	push   ebx
1004a795:	mov    edi,DWORD PTR ds:0x100660a4
1004a79b:	call   edi
1004a79d:	test   BYTE PTR [esi+0x70],0x2
1004a7a1:	jne    0x1004a891
1004a7a7:	test   BYTE PTR ds:0x1007e8c4,0x1
1004a7ae:	jne    0x1004a891
1004a7b4:	push   0xd
1004a7b6:	call   0x10047f3d
1004a7bb:	pop    ecx
1004a7bc:	and    DWORD PTR [ebp-0x4],0x0
1004a7c0:	mov    eax,DWORD PTR [ebx+0x4]
1004a7c3:	mov    ds:0x100802bc,eax
1004a7c8:	mov    eax,DWORD PTR [ebx+0x8]
1004a7cb:	mov    ds:0x100802c0,eax
1004a7d0:	mov    eax,DWORD PTR [ebx+0xc]
1004a7d3:	mov    ds:0x100802c4,eax
1004a7d8:	xor    eax,eax
1004a7da:	mov    DWORD PTR [ebp-0x1c],eax
1004a7dd:	cmp    eax,0x5
1004a7e0:	jge    0x1004a7f2
1004a7e2:	mov    cx,WORD PTR [ebx+eax*2+0x10]
1004a7e7:	mov    WORD PTR [eax*2+0x100802b0],cx
1004a7ef:	inc    eax
1004a7f0:	jmp    0x1004a7da
1004a7f2:	xor    eax,eax
1004a7f4:	mov    DWORD PTR [ebp-0x1c],eax
1004a7f7:	cmp    eax,0x101
1004a7fc:	jge    0x1004a80b
1004a7fe:	mov    cl,BYTE PTR [eax+ebx*1+0x1c]
1004a802:	mov    BYTE PTR [eax+0x1007e5c0],cl
1004a808:	inc    eax
1004a809:	jmp    0x1004a7f4
1004a80b:	xor    eax,eax
1004a80d:	mov    DWORD PTR [ebp-0x1c],eax
1004a810:	cmp    eax,0x100
1004a815:	jge    0x1004a827
1004a817:	mov    cl,BYTE PTR [eax+ebx*1+0x11d]
1004a81e:	mov    BYTE PTR [eax+0x1007e6c8],cl
1004a824:	inc    eax
1004a825:	jmp    0x1004a80d
1004a827:	push   DWORD PTR ds:0x1007e7c8
1004a82d:	call   DWORD PTR ds:0x100660ac
1004a833:	test   eax,eax
1004a835:	jne    0x1004a84a
1004a837:	mov    eax,ds:0x1007e7c8
1004a83c:	cmp    eax,0x1007e3a0
1004a841:	je     0x1004a84a
1004a843:	push   eax
1004a844:	call   0x10043748
1004a849:	pop    ecx
1004a84a:	mov    DWORD PTR ds:0x1007e7c8,ebx
1004a850:	push   ebx
1004a851:	call   edi
1004a853:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1004a85a:	call   0x1004a861
1004a85f:	jmp    0x1004a891
1004a861:	push   0xd
1004a863:	call   0x10047e65
1004a868:	pop    ecx
1004a869:	ret    
1004a86a:	jmp    0x1004a891
1004a86c:	cmp    eax,0xffffffff
1004a86f:	jne    0x1004a891
1004a871:	cmp    ebx,0x1007e3a0
1004a877:	je     0x1004a880
1004a879:	push   ebx
1004a87a:	call   0x10043748
1004a87f:	pop    ecx
1004a880:	call   0x10046df5
1004a885:	mov    DWORD PTR [eax],0x16
1004a88b:	jmp    0x1004a891
1004a88d:	and    DWORD PTR [ebp-0x20],0x0
1004a891:	mov    eax,DWORD PTR [ebp-0x20]
1004a894:	call   0x10046f79
1004a899:	ret    
1004a89a:	cmp    DWORD PTR ds:0x100825b4,0x0
1004a8a1:	jne    0x1004a8b5
1004a8a3:	push   0xfffffffd
1004a8a5:	call   0x1004a700
1004a8aa:	pop    ecx
1004a8ab:	mov    DWORD PTR ds:0x100825b4,0x1
1004a8b5:	xor    eax,eax
1004a8b7:	ret    
1004a8b8:	push   ebx
1004a8b9:	push   ebp
1004a8ba:	push   esi
1004a8bb:	mov    esi,DWORD PTR [esp+0x10]
1004a8bf:	mov    eax,DWORD PTR [esi+0xbc]
1004a8c5:	xor    ebp,ebp
1004a8c7:	cmp    eax,ebp
1004a8c9:	push   edi
1004a8ca:	je     0x1004a93b
1004a8cc:	cmp    eax,0x1007edf8
1004a8d1:	je     0x1004a93b
1004a8d3:	mov    eax,DWORD PTR [esi+0xb0]
1004a8d9:	cmp    eax,ebp
1004a8db:	je     0x1004a93b
1004a8dd:	cmp    DWORD PTR [eax],ebp
1004a8df:	jne    0x1004a93b
1004a8e1:	mov    eax,DWORD PTR [esi+0xb8]
1004a8e7:	cmp    eax,ebp
1004a8e9:	je     0x1004a902
1004a8eb:	cmp    DWORD PTR [eax],ebp
1004a8ed:	jne    0x1004a902
1004a8ef:	push   eax
1004a8f0:	call   0x10043748
1004a8f5:	push   DWORD PTR [esi+0xbc]
1004a8fb:	call   0x1004f2cd
1004a900:	pop    ecx
1004a901:	pop    ecx
1004a902:	mov    eax,DWORD PTR [esi+0xb4]
1004a908:	cmp    eax,ebp
1004a90a:	je     0x1004a923
1004a90c:	cmp    DWORD PTR [eax],ebp
1004a90e:	jne    0x1004a923
1004a910:	push   eax
1004a911:	call   0x10043748
1004a916:	push   DWORD PTR [esi+0xbc]
1004a91c:	call   0x1004f28d
1004a921:	pop    ecx
1004a922:	pop    ecx
1004a923:	push   DWORD PTR [esi+0xb0]
1004a929:	call   0x10043748
1004a92e:	push   DWORD PTR [esi+0xbc]
1004a934:	call   0x10043748
1004a939:	pop    ecx
1004a93a:	pop    ecx
1004a93b:	mov    eax,DWORD PTR [esi+0xc0]
1004a941:	cmp    eax,ebp
1004a943:	je     0x1004a989
1004a945:	cmp    DWORD PTR [eax],ebp
1004a947:	jne    0x1004a989
1004a949:	mov    eax,DWORD PTR [esi+0xc4]
1004a94f:	sub    eax,0xfe
1004a954:	push   eax
1004a955:	call   0x10043748
1004a95a:	mov    eax,DWORD PTR [esi+0xcc]
1004a960:	mov    edi,0x80
1004a965:	sub    eax,edi
1004a967:	push   eax
1004a968:	call   0x10043748
1004a96d:	mov    eax,DWORD PTR [esi+0xd0]
1004a973:	sub    eax,edi
1004a975:	push   eax
1004a976:	call   0x10043748
1004a97b:	push   DWORD PTR [esi+0xc0]
1004a981:	call   0x10043748
1004a986:	add    esp,0x10
1004a989:	lea    edi,[esi+0xd4]
1004a98f:	mov    eax,DWORD PTR [edi]
1004a991:	cmp    eax,0x1007ed38
1004a996:	je     0x1004a9af
1004a998:	cmp    DWORD PTR [eax+0xb4],ebp
1004a99e:	jne    0x1004a9af
1004a9a0:	push   eax
1004a9a1:	call   0x1004f0fd
1004a9a6:	push   DWORD PTR [edi]
1004a9a8:	call   0x10043748
1004a9ad:	pop    ecx
1004a9ae:	pop    ecx
1004a9af:	push   0x6
1004a9b1:	lea    edi,[esi+0x50]
1004a9b4:	pop    ebx
1004a9b5:	cmp    DWORD PTR [edi-0x8],0x1007e8c8
1004a9bc:	je     0x1004a9cf
1004a9be:	mov    eax,DWORD PTR [edi]
1004a9c0:	cmp    eax,ebp
1004a9c2:	je     0x1004a9cf
1004a9c4:	cmp    DWORD PTR [eax],ebp
1004a9c6:	jne    0x1004a9cf
1004a9c8:	push   eax
1004a9c9:	call   0x10043748
1004a9ce:	pop    ecx
1004a9cf:	cmp    DWORD PTR [edi-0x4],ebp
1004a9d2:	je     0x1004a9e6
1004a9d4:	mov    eax,DWORD PTR [edi+0x4]
1004a9d7:	cmp    eax,ebp
1004a9d9:	je     0x1004a9e6
1004a9db:	cmp    DWORD PTR [eax],ebp
1004a9dd:	jne    0x1004a9e6
1004a9df:	push   eax
1004a9e0:	call   0x10043748
1004a9e5:	pop    ecx
1004a9e6:	add    edi,0x10
1004a9e9:	dec    ebx
1004a9ea:	jne    0x1004a9b5
1004a9ec:	push   esi
1004a9ed:	call   0x10043748
1004a9f2:	pop    ecx
1004a9f3:	pop    edi
1004a9f4:	pop    esi
1004a9f5:	pop    ebp
1004a9f6:	pop    ebx
1004a9f7:	ret    
1004a9f8:	push   ebx
1004a9f9:	push   ebp
1004a9fa:	push   esi
1004a9fb:	mov    esi,DWORD PTR [esp+0x10]
1004a9ff:	push   edi
1004aa00:	mov    edi,DWORD PTR ds:0x100660a4
1004aa06:	push   esi
1004aa07:	call   edi
1004aa09:	mov    eax,DWORD PTR [esi+0xb0]
1004aa0f:	test   eax,eax
1004aa11:	je     0x1004aa16
1004aa13:	push   eax
1004aa14:	call   edi
1004aa16:	mov    eax,DWORD PTR [esi+0xb8]
1004aa1c:	test   eax,eax
1004aa1e:	je     0x1004aa23
1004aa20:	push   eax
1004aa21:	call   edi
1004aa23:	mov    eax,DWORD PTR [esi+0xb4]
1004aa29:	test   eax,eax
1004aa2b:	je     0x1004aa30
1004aa2d:	push   eax
1004aa2e:	call   edi
1004aa30:	mov    eax,DWORD PTR [esi+0xc0]
1004aa36:	test   eax,eax
1004aa38:	je     0x1004aa3d
1004aa3a:	push   eax
1004aa3b:	call   edi
1004aa3d:	push   0x6
1004aa3f:	lea    ebx,[esi+0x50]
1004aa42:	pop    ebp
1004aa43:	cmp    DWORD PTR [ebx-0x8],0x1007e8c8
1004aa4a:	je     0x1004aa55
1004aa4c:	mov    eax,DWORD PTR [ebx]
1004aa4e:	test   eax,eax
1004aa50:	je     0x1004aa55
1004aa52:	push   eax
1004aa53:	call   edi
1004aa55:	cmp    DWORD PTR [ebx-0x4],0x0
1004aa59:	je     0x1004aa65
1004aa5b:	mov    eax,DWORD PTR [ebx+0x4]
1004aa5e:	test   eax,eax
1004aa60:	je     0x1004aa65
1004aa62:	push   eax
1004aa63:	call   edi
1004aa65:	add    ebx,0x10
1004aa68:	dec    ebp
1004aa69:	jne    0x1004aa43
1004aa6b:	mov    eax,DWORD PTR [esi+0xd4]
1004aa71:	add    eax,0xb4
1004aa76:	push   eax
1004aa77:	call   edi
1004aa79:	pop    edi
1004aa7a:	pop    esi
1004aa7b:	pop    ebp
1004aa7c:	pop    ebx
1004aa7d:	ret    
1004aa7e:	push   esi
1004aa7f:	mov    esi,DWORD PTR [esp+0x8]
1004aa83:	test   esi,esi
1004aa85:	je     0x1004ab06
1004aa87:	push   ebx
1004aa88:	push   ebp
1004aa89:	push   edi
1004aa8a:	mov    edi,DWORD PTR ds:0x100660ac
1004aa90:	push   esi
1004aa91:	call   edi
1004aa93:	mov    eax,DWORD PTR [esi+0xb0]
1004aa99:	test   eax,eax
1004aa9b:	je     0x1004aaa0
1004aa9d:	push   eax
1004aa9e:	call   edi
1004aaa0:	mov    eax,DWORD PTR [esi+0xb8]
1004aaa6:	test   eax,eax
1004aaa8:	je     0x1004aaad
1004aaaa:	push   eax
1004aaab:	call   edi
1004aaad:	mov    eax,DWORD PTR [esi+0xb4]
1004aab3:	test   eax,eax
1004aab5:	je     0x1004aaba
1004aab7:	push   eax
1004aab8:	call   edi
1004aaba:	mov    eax,DWORD PTR [esi+0xc0]
1004aac0:	test   eax,eax
1004aac2:	je     0x1004aac7
1004aac4:	push   eax
1004aac5:	call   edi
1004aac7:	push   0x6
1004aac9:	lea    ebx,[esi+0x50]
1004aacc:	pop    ebp
1004aacd:	cmp    DWORD PTR [ebx-0x8],0x1007e8c8
1004aad4:	je     0x1004aadf
1004aad6:	mov    eax,DWORD PTR [ebx]
1004aad8:	test   eax,eax
1004aada:	je     0x1004aadf
1004aadc:	push   eax
1004aadd:	call   edi
1004aadf:	cmp    DWORD PTR [ebx-0x4],0x0
1004aae3:	je     0x1004aaef
1004aae5:	mov    eax,DWORD PTR [ebx+0x4]
1004aae8:	test   eax,eax
1004aaea:	je     0x1004aaef
1004aaec:	push   eax
1004aaed:	call   edi
1004aaef:	add    ebx,0x10
1004aaf2:	dec    ebp
1004aaf3:	jne    0x1004aacd
1004aaf5:	mov    eax,DWORD PTR [esi+0xd4]
1004aafb:	add    eax,0xb4
1004ab00:	push   eax
1004ab01:	call   edi
1004ab03:	pop    edi
1004ab04:	pop    ebp
1004ab05:	pop    ebx
1004ab06:	mov    eax,esi
1004ab08:	pop    esi
1004ab09:	ret    
1004ab0a:	test   edi,edi
1004ab0c:	je     0x1004ab45
1004ab0e:	test   eax,eax
1004ab10:	je     0x1004ab45
1004ab12:	push   esi
1004ab13:	mov    esi,DWORD PTR [eax]
1004ab15:	cmp    esi,edi
1004ab17:	je     0x1004ab41
1004ab19:	push   edi
1004ab1a:	mov    DWORD PTR [eax],edi
1004ab1c:	call   0x1004a9f8
1004ab21:	test   esi,esi
1004ab23:	pop    ecx
1004ab24:	je     0x1004ab41
1004ab26:	push   esi
1004ab27:	call   0x1004aa7e
1004ab2c:	cmp    DWORD PTR [esi],0x0
1004ab2f:	pop    ecx
1004ab30:	jne    0x1004ab41
1004ab32:	cmp    esi,0x1007e8d0
1004ab38:	je     0x1004ab41
1004ab3a:	push   esi
1004ab3b:	call   0x1004a8b8
1004ab40:	pop    ecx
1004ab41:	mov    eax,edi
1004ab43:	pop    esi
1004ab44:	ret    
1004ab45:	xor    eax,eax
1004ab47:	ret    
1004ab48:	push   0xc
1004ab4a:	push   0x100748a8
1004ab4f:	call   0x10046f34
1004ab54:	call   0x1004739c
1004ab59:	mov    esi,eax
1004ab5b:	mov    eax,ds:0x1007e8c4
1004ab60:	test   DWORD PTR [esi+0x70],eax
1004ab63:	je     0x1004ab87
1004ab65:	cmp    DWORD PTR [esi+0x6c],0x0
1004ab69:	je     0x1004ab87
1004ab6b:	call   0x1004739c
1004ab70:	mov    esi,DWORD PTR [eax+0x6c]
1004ab73:	test   esi,esi
1004ab75:	jne    0x1004ab7f
1004ab77:	push   0x20
1004ab79:	call   0x10047838
1004ab7e:	pop    ecx
1004ab7f:	mov    eax,esi
1004ab81:	call   0x10046f79
1004ab86:	ret    
1004ab87:	push   0xc
1004ab89:	call   0x10047f3d
1004ab8e:	pop    ecx
1004ab8f:	and    DWORD PTR [ebp-0x4],0x0
1004ab93:	lea    eax,[esi+0x6c]
1004ab96:	mov    edi,DWORD PTR ds:0x1007e9a8
1004ab9c:	call   0x1004ab0a
1004aba1:	mov    DWORD PTR [ebp-0x1c],eax
1004aba4:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1004abab:	call   0x1004abb2
1004abb0:	jmp    0x1004ab73
1004abb2:	push   0xc
1004abb4:	call   0x10047e65
1004abb9:	pop    ecx
1004abba:	mov    esi,DWORD PTR [ebp-0x1c]
1004abbd:	ret    
1004abbe:	int3   
1004abbf:	int3   
1004abc0:	lea    eax,[edx-0x1]
1004abc3:	pop    ebx
1004abc4:	ret    
1004abc5:	lea    esp,[esp+0x0]
1004abcc:	lea    esp,[esp+0x0]
1004abd0:	xor    eax,eax
1004abd2:	mov    al,BYTE PTR [esp+0x8]
1004abd6:	push   ebx
1004abd7:	mov    ebx,eax
1004abd9:	shl    eax,0x8
1004abdc:	mov    edx,DWORD PTR [esp+0x8]
1004abe0:	test   edx,0x3
1004abe6:	je     0x1004abfd
1004abe8:	mov    cl,BYTE PTR [edx]
1004abea:	add    edx,0x1
1004abed:	cmp    cl,bl
1004abef:	je     0x1004abc0
1004abf1:	test   cl,cl
1004abf3:	je     0x1004ac46
1004abf5:	test   edx,0x3
1004abfb:	jne    0x1004abe8
1004abfd:	or     ebx,eax
1004abff:	push   edi
1004ac00:	mov    eax,ebx
1004ac02:	shl    ebx,0x10
1004ac05:	push   esi
1004ac06:	or     ebx,eax
1004ac08:	mov    ecx,DWORD PTR [edx]
1004ac0a:	mov    edi,0x7efefeff
1004ac0f:	mov    eax,ecx
1004ac11:	mov    esi,edi
1004ac13:	xor    ecx,ebx
1004ac15:	add    esi,eax
1004ac17:	add    edi,ecx
1004ac19:	xor    ecx,0xffffffff
1004ac1c:	xor    eax,0xffffffff
1004ac1f:	xor    ecx,edi
1004ac21:	xor    eax,esi
1004ac23:	add    edx,0x4
1004ac26:	and    ecx,0x81010100
1004ac2c:	jne    0x1004ac4a
1004ac2e:	and    eax,0x81010100
1004ac33:	je     0x1004ac08
1004ac35:	and    eax,0x1010100
1004ac3a:	jne    0x1004ac44
1004ac3c:	and    esi,0x80000000
1004ac42:	jne    0x1004ac08
1004ac44:	pop    esi
1004ac45:	pop    edi
1004ac46:	pop    ebx
1004ac47:	xor    eax,eax
1004ac49:	ret    
1004ac4a:	mov    eax,DWORD PTR [edx-0x4]
1004ac4d:	cmp    al,bl
1004ac4f:	je     0x1004ac87
1004ac51:	test   al,al
1004ac53:	je     0x1004ac44
1004ac55:	cmp    ah,bl
1004ac57:	je     0x1004ac80
1004ac59:	test   ah,ah
1004ac5b:	je     0x1004ac44
1004ac5d:	shr    eax,0x10
1004ac60:	cmp    al,bl
1004ac62:	je     0x1004ac79
1004ac64:	test   al,al
1004ac66:	je     0x1004ac44
1004ac68:	cmp    ah,bl
1004ac6a:	je     0x1004ac72
1004ac6c:	test   ah,ah
1004ac6e:	je     0x1004ac44
1004ac70:	jmp    0x1004ac08
1004ac72:	pop    esi
1004ac73:	pop    edi
1004ac74:	lea    eax,[edx-0x1]
1004ac77:	pop    ebx
1004ac78:	ret    
1004ac79:	lea    eax,[edx-0x2]
1004ac7c:	pop    esi
1004ac7d:	pop    edi
1004ac7e:	pop    ebx
1004ac7f:	ret    
1004ac80:	lea    eax,[edx-0x3]
1004ac83:	pop    esi
1004ac84:	pop    edi
1004ac85:	pop    ebx
1004ac86:	ret    
1004ac87:	lea    eax,[edx-0x4]
1004ac8a:	pop    esi
1004ac8b:	pop    edi
1004ac8c:	pop    ebx
1004ac8d:	ret    
1004ac8e:	int3   
1004ac8f:	int3   
1004ac90:	push   esi
1004ac91:	mov    eax,DWORD PTR [esp+0x14]
1004ac95:	or     eax,eax
1004ac97:	jne    0x1004acc1
1004ac99:	mov    ecx,DWORD PTR [esp+0x10]
1004ac9d:	mov    eax,DWORD PTR [esp+0xc]
1004aca1:	xor    edx,edx
1004aca3:	div    ecx
1004aca5:	mov    ebx,eax
1004aca7:	mov    eax,DWORD PTR [esp+0x8]
1004acab:	div    ecx
1004acad:	mov    esi,eax
1004acaf:	mov    eax,ebx
1004acb1:	mul    DWORD PTR [esp+0x10]
1004acb5:	mov    ecx,eax
1004acb7:	mov    eax,esi
1004acb9:	mul    DWORD PTR [esp+0x10]
1004acbd:	add    edx,ecx
1004acbf:	jmp    0x1004ad08
1004acc1:	mov    ecx,eax
1004acc3:	mov    ebx,DWORD PTR [esp+0x10]
1004acc7:	mov    edx,DWORD PTR [esp+0xc]
1004accb:	mov    eax,DWORD PTR [esp+0x8]
1004accf:	shr    ecx,1
1004acd1:	rcr    ebx,1
1004acd3:	shr    edx,1
1004acd5:	rcr    eax,1
1004acd7:	or     ecx,ecx
1004acd9:	jne    0x1004accf
1004acdb:	div    ebx
1004acdd:	mov    esi,eax
1004acdf:	mul    DWORD PTR [esp+0x14]
1004ace3:	mov    ecx,eax
1004ace5:	mov    eax,DWORD PTR [esp+0x10]
1004ace9:	mul    esi
1004aceb:	add    edx,ecx
1004aced:	jb     0x1004acfd
1004acef:	cmp    edx,DWORD PTR [esp+0xc]
1004acf3:	ja     0x1004acfd
1004acf5:	jb     0x1004ad06
1004acf7:	cmp    eax,DWORD PTR [esp+0x8]
1004acfb:	jbe    0x1004ad06
1004acfd:	dec    esi
1004acfe:	sub    eax,DWORD PTR [esp+0x10]
1004ad02:	sbb    edx,DWORD PTR [esp+0x14]
1004ad06:	xor    ebx,ebx
1004ad08:	sub    eax,DWORD PTR [esp+0x8]
1004ad0c:	sbb    edx,DWORD PTR [esp+0xc]
1004ad10:	neg    edx
1004ad12:	neg    eax
1004ad14:	sbb    edx,0x0
1004ad17:	mov    ecx,edx
1004ad19:	mov    edx,ebx
1004ad1b:	mov    ebx,ecx
1004ad1d:	mov    ecx,eax
1004ad1f:	mov    eax,esi
1004ad21:	pop    esi
1004ad22:	ret    0x10
1004ad25:	push   ebp
1004ad26:	mov    ebp,esp
1004ad28:	sub    esp,0x4
1004ad2b:	mov    DWORD PTR [ebp-0x4],edi
1004ad2e:	mov    edi,DWORD PTR [ebp+0x8]
1004ad31:	mov    ecx,DWORD PTR [ebp+0xc]
1004ad34:	shr    ecx,0x7
1004ad37:	pxor   xmm0,xmm0
1004ad3b:	jmp    0x1004ad45
1004ad3d:	lea    esp,[esp+0x0]
1004ad44:	nop
1004ad45:	movdqa XMMWORD PTR [edi],xmm0
1004ad49:	movdqa XMMWORD PTR [edi+0x10],xmm0
1004ad4e:	movdqa XMMWORD PTR [edi+0x20],xmm0
1004ad53:	movdqa XMMWORD PTR [edi+0x30],xmm0
1004ad58:	movdqa XMMWORD PTR [edi+0x40],xmm0
1004ad5d:	movdqa XMMWORD PTR [edi+0x50],xmm0
1004ad62:	movdqa XMMWORD PTR [edi+0x60],xmm0
1004ad67:	movdqa XMMWORD PTR [edi+0x70],xmm0
1004ad6c:	lea    edi,[edi+0x80]
1004ad72:	dec    ecx
1004ad73:	jne    0x1004ad45
1004ad75:	mov    edi,DWORD PTR [ebp-0x4]
1004ad78:	mov    esp,ebp
1004ad7a:	pop    ebp
1004ad7b:	ret    
1004ad7c:	push   ebp
1004ad7d:	mov    ebp,esp
1004ad7f:	sub    esp,0x10
1004ad82:	mov    DWORD PTR [ebp-0x4],edi
1004ad85:	mov    eax,DWORD PTR [ebp+0x8]
1004ad88:	cdq    
1004ad89:	mov    edi,eax
1004ad8b:	xor    edi,edx
1004ad8d:	sub    edi,edx
1004ad8f:	and    edi,0xf
1004ad92:	xor    edi,edx
1004ad94:	sub    edi,edx
1004ad96:	test   edi,edi
1004ad98:	jne    0x1004add6
1004ad9a:	mov    ecx,DWORD PTR [ebp+0x10]
1004ad9d:	mov    edx,ecx
1004ad9f:	and    edx,0x7f
1004ada2:	mov    DWORD PTR [ebp-0xc],edx
1004ada5:	cmp    ecx,edx
1004ada7:	je     0x1004adbb
1004ada9:	sub    ecx,edx
1004adab:	push   ecx
1004adac:	push   eax
1004adad:	call   0x1004ad25
1004adb2:	add    esp,0x8
1004adb5:	mov    eax,DWORD PTR [ebp+0x8]
1004adb8:	mov    edx,DWORD PTR [ebp-0xc]
1004adbb:	test   edx,edx
1004adbd:	je     0x1004ae04
1004adbf:	add    eax,DWORD PTR [ebp+0x10]
1004adc2:	sub    eax,edx
1004adc4:	mov    DWORD PTR [ebp-0x8],eax
1004adc7:	xor    eax,eax
1004adc9:	mov    edi,DWORD PTR [ebp-0x8]
1004adcc:	mov    ecx,DWORD PTR [ebp-0xc]
1004adcf:	rep stos BYTE PTR es:[edi],al
1004add1:	mov    eax,DWORD PTR [ebp+0x8]
1004add4:	jmp    0x1004ae04
1004add6:	neg    edi
1004add8:	add    edi,0x10
1004addb:	mov    DWORD PTR [ebp-0x10],edi
1004adde:	xor    eax,eax
1004ade0:	mov    edi,DWORD PTR [ebp+0x8]
1004ade3:	mov    ecx,DWORD PTR [ebp-0x10]
1004ade6:	rep stos BYTE PTR es:[edi],al
1004ade8:	mov    eax,DWORD PTR [ebp-0x10]
1004adeb:	mov    ecx,DWORD PTR [ebp+0x8]
1004adee:	mov    edx,DWORD PTR [ebp+0x10]
1004adf1:	add    ecx,eax
1004adf3:	sub    edx,eax
1004adf5:	push   edx
1004adf6:	push   0x0
1004adf8:	push   ecx
1004adf9:	call   0x1004ad7c
1004adfe:	add    esp,0xc
1004ae01:	mov    eax,DWORD PTR [ebp+0x8]
1004ae04:	mov    edi,DWORD PTR [ebp-0x4]
1004ae07:	mov    esp,ebp
1004ae09:	pop    ebp
1004ae0a:	ret    
1004ae0b:	push   ebp
1004ae0c:	lea    ebp,[esp-0x2a8]
1004ae13:	sub    esp,0x328
1004ae19:	mov    eax,ds:0x1007e030
1004ae1e:	xor    eax,ebp
1004ae20:	mov    DWORD PTR [ebp+0x2a4],eax
1004ae26:	test   BYTE PTR ds:0x1007e9c0,0x1
1004ae2d:	push   esi
1004ae2e:	je     0x1004ae38
1004ae30:	push   0xa
1004ae32:	call   0x10049e9a
1004ae37:	pop    ecx
1004ae38:	call   0x1004c65a
1004ae3d:	test   eax,eax
1004ae3f:	je     0x1004ae49
1004ae41:	push   0x16
1004ae43:	call   0x1004c667
1004ae48:	pop    ecx
1004ae49:	test   BYTE PTR ds:0x1007e9c0,0x2
1004ae50:	je     0x1004aef6
1004ae56:	mov    DWORD PTR [ebp+0x88],eax
1004ae5c:	mov    DWORD PTR [ebp+0x84],ecx
1004ae62:	mov    DWORD PTR [ebp+0x80],edx
1004ae68:	mov    DWORD PTR [ebp+0x7c],ebx
1004ae6b:	mov    DWORD PTR [ebp+0x78],esi
1004ae6e:	mov    DWORD PTR [ebp+0x74],edi
1004ae71:	data16 mov WORD PTR [ebp+0xa0],ss
1004ae78:	data16 mov WORD PTR [ebp+0x94],cs
1004ae7f:	data16 mov WORD PTR [ebp+0x70],ds
1004ae83:	data16 mov WORD PTR [ebp+0x6c],es
1004ae87:	data16 mov WORD PTR [ebp+0x68],fs
1004ae8b:	data16 mov WORD PTR [ebp+0x64],gs
1004ae8f:	pushf  
1004ae90:	pop    DWORD PTR [ebp+0x98]
1004ae96:	mov    esi,DWORD PTR [ebp+0x2ac]
1004ae9c:	lea    eax,[ebp+0x2ac]
1004aea2:	mov    DWORD PTR [ebp+0x9c],eax
1004aea8:	mov    DWORD PTR [ebp-0x28],0x10001
1004aeaf:	mov    DWORD PTR [ebp+0x90],esi
1004aeb5:	mov    eax,DWORD PTR [eax-0x4]
1004aeb8:	push   0x50
1004aeba:	mov    DWORD PTR [ebp+0x8c],eax
1004aec0:	lea    eax,[ebp-0x80]
1004aec3:	push   0x0
1004aec5:	push   eax
1004aec6:	call   0x10045ea0
1004aecb:	lea    eax,[ebp-0x80]
1004aece:	add    esp,0xc
1004aed1:	mov    DWORD PTR [ebp-0x30],eax
1004aed4:	lea    eax,[ebp-0x28]
1004aed7:	push   0x0
1004aed9:	mov    DWORD PTR [ebp-0x80],0x40000015
1004aee0:	mov    DWORD PTR [ebp-0x74],esi
1004aee3:	mov    DWORD PTR [ebp-0x2c],eax
1004aee6:	call   DWORD PTR ds:0x10066180
1004aeec:	lea    eax,[ebp-0x30]
1004aeef:	push   eax
1004aef0:	call   DWORD PTR ds:0x1006617c
1004aef6:	push   0x3
1004aef8:	call   0x10047ab4
1004aefd:	int3   
1004aefe:	mov    ecx,DWORD PTR [esp+0x8]
1004af02:	mov    eax,ds:0x1007e9c0
1004af07:	mov    edx,DWORD PTR [esp+0x4]
1004af0b:	and    edx,DWORD PTR [esp+0x8]
1004af0f:	not    ecx
1004af11:	and    ecx,eax
1004af13:	or     ecx,edx
1004af15:	mov    DWORD PTR ds:0x1007e9c0,ecx
1004af1b:	ret    
1004af1c:	mov    eax,DWORD PTR [esp+0x4]
1004af20:	mov    ds:0x100802f4,eax
1004af25:	ret    
1004af26:	push   ebp
1004af27:	mov    ebp,esp
1004af29:	sub    esp,0x14
1004af2c:	push   esi
1004af2d:	push   edi
1004af2e:	push   DWORD PTR [ebp+0x8]
1004af31:	lea    ecx,[ebp-0x14]
1004af34:	call   0x10045785
1004af39:	mov    eax,DWORD PTR [ebp+0x10]
1004af3c:	mov    esi,DWORD PTR [ebp+0xc]
1004af3f:	xor    edi,edi
1004af41:	cmp    eax,edi
1004af43:	je     0x1004af47
1004af45:	mov    DWORD PTR [eax],esi
1004af47:	cmp    esi,edi
1004af49:	jne    0x1004af77
1004af4b:	call   0x10046df5
1004af50:	push   edi
1004af51:	push   edi
1004af52:	push   edi
1004af53:	push   edi
1004af54:	push   edi
1004af55:	mov    DWORD PTR [eax],0x16
1004af5b:	call   0x100435cc
1004af60:	add    esp,0x14
1004af63:	cmp    BYTE PTR [ebp-0x8],0x0
1004af67:	je     0x1004af70
1004af69:	mov    eax,DWORD PTR [ebp-0xc]
1004af6c:	and    DWORD PTR [eax+0x70],0xfffffffd
1004af70:	xor    eax,eax
1004af72:	jmp    0x1004b14d
1004af77:	cmp    DWORD PTR [ebp+0x14],edi
1004af7a:	je     0x1004af88
1004af7c:	cmp    DWORD PTR [ebp+0x14],0x2
1004af80:	jl     0x1004af4b
1004af82:	cmp    DWORD PTR [ebp+0x14],0x24
1004af86:	jg     0x1004af4b
1004af88:	mov    ecx,DWORD PTR [ebp-0x14]
1004af8b:	push   ebx
1004af8c:	mov    bl,BYTE PTR [esi]
1004af8e:	mov    DWORD PTR [ebp-0x4],edi
1004af91:	lea    edi,[esi+0x1]
1004af94:	cmp    DWORD PTR [ecx+0xac],0x1
1004af9b:	jle    0x1004afb4
1004af9d:	lea    eax,[ebp-0x14]
1004afa0:	push   eax
1004afa1:	movzx  eax,bl
1004afa4:	push   0x8
1004afa6:	push   eax
1004afa7:	call   0x1004b5a3
1004afac:	mov    ecx,DWORD PTR [ebp-0x14]
1004afaf:	add    esp,0xc
1004afb2:	jmp    0x1004afc4
1004afb4:	mov    edx,DWORD PTR [ecx+0xc8]
1004afba:	movzx  eax,bl
1004afbd:	movzx  eax,BYTE PTR [edx+eax*2]
1004afc1:	and    eax,0x8
1004afc4:	test   eax,eax
1004afc6:	je     0x1004afcd
1004afc8:	mov    bl,BYTE PTR [edi]
1004afca:	inc    edi
1004afcb:	jmp    0x1004af94
1004afcd:	cmp    bl,0x2d
1004afd0:	jne    0x1004afd8
1004afd2:	or     DWORD PTR [ebp+0x18],0x2
1004afd6:	jmp    0x1004afdd
1004afd8:	cmp    bl,0x2b
1004afdb:	jne    0x1004afe0
1004afdd:	mov    bl,BYTE PTR [edi]
1004afdf:	inc    edi
1004afe0:	mov    eax,DWORD PTR [ebp+0x14]
1004afe3:	test   eax,eax
1004afe5:	jl     0x1004b134
1004afeb:	cmp    eax,0x1
1004afee:	je     0x1004b134
1004aff4:	cmp    eax,0x24
1004aff7:	jg     0x1004b134
1004affd:	test   eax,eax
1004afff:	jne    0x1004b02b
1004b001:	cmp    bl,0x30
1004b004:	je     0x1004b00f
1004b006:	mov    DWORD PTR [ebp+0x14],0xa
1004b00d:	jmp    0x1004b043
1004b00f:	mov    al,BYTE PTR [edi]
1004b011:	cmp    al,0x78
1004b013:	je     0x1004b022
1004b015:	cmp    al,0x58
1004b017:	je     0x1004b022
1004b019:	mov    DWORD PTR [ebp+0x14],0x8
1004b020:	jmp    0x1004b043
1004b022:	mov    DWORD PTR [ebp+0x14],0x10
1004b029:	jmp    0x1004b035
1004b02b:	cmp    eax,0x10
1004b02e:	jne    0x1004b043
1004b030:	cmp    bl,0x30
1004b033:	jne    0x1004b043
1004b035:	mov    al,BYTE PTR [edi]
1004b037:	cmp    al,0x78
1004b039:	je     0x1004b03f
1004b03b:	cmp    al,0x58
1004b03d:	jne    0x1004b043
1004b03f:	inc    edi
1004b040:	mov    bl,BYTE PTR [edi]
1004b042:	inc    edi
1004b043:	mov    esi,DWORD PTR [ecx+0xc8]
1004b049:	or     eax,0xffffffff
1004b04c:	xor    edx,edx
1004b04e:	div    DWORD PTR [ebp+0x14]
1004b051:	movzx  ecx,bl
1004b054:	movzx  ecx,WORD PTR [esi+ecx*2]
1004b058:	test   cl,0x4
1004b05b:	je     0x1004b065
1004b05d:	movsx  ecx,bl
1004b060:	sub    ecx,0x30
1004b063:	jmp    0x1004b07f
1004b065:	test   cx,0x103
1004b06a:	je     0x1004b09d
1004b06c:	mov    cl,bl
1004b06e:	sub    cl,0x61
1004b071:	cmp    cl,0x19
1004b074:	movsx  ecx,bl
1004b077:	ja     0x1004b07c
1004b079:	sub    ecx,0x20
1004b07c:	add    ecx,0xffffffc9
1004b07f:	cmp    ecx,DWORD PTR [ebp+0x14]
1004b082:	jae    0x1004b09d
1004b084:	or     DWORD PTR [ebp+0x18],0x8
1004b088:	cmp    DWORD PTR [ebp-0x4],eax
1004b08b:	jb     0x1004b0b4
1004b08d:	jne    0x1004b093
1004b08f:	cmp    ecx,edx
1004b091:	jbe    0x1004b0b4
1004b093:	or     DWORD PTR [ebp+0x18],0x4
1004b097:	cmp    DWORD PTR [ebp+0x10],0x0
1004b09b:	jne    0x1004b0c0
1004b09d:	mov    eax,DWORD PTR [ebp+0x18]
1004b0a0:	dec    edi
1004b0a1:	test   al,0x8
1004b0a3:	jne    0x1004b0c5
1004b0a5:	cmp    DWORD PTR [ebp+0x10],0x0
1004b0a9:	je     0x1004b0ae
1004b0ab:	mov    edi,DWORD PTR [ebp+0xc]
1004b0ae:	and    DWORD PTR [ebp-0x4],0x0
1004b0b2:	jmp    0x1004b110
1004b0b4:	mov    ebx,DWORD PTR [ebp-0x4]
1004b0b7:	imul   ebx,DWORD PTR [ebp+0x14]
1004b0bb:	add    ebx,ecx
1004b0bd:	mov    DWORD PTR [ebp-0x4],ebx
1004b0c0:	mov    bl,BYTE PTR [edi]
1004b0c2:	inc    edi
1004b0c3:	jmp    0x1004b051
1004b0c5:	test   al,0x4
1004b0c7:	mov    esi,0x7fffffff
1004b0cc:	jne    0x1004b0e9
1004b0ce:	test   al,0x1
1004b0d0:	jne    0x1004b110
1004b0d2:	and    eax,0x2
1004b0d5:	je     0x1004b0e0
1004b0d7:	cmp    DWORD PTR [ebp-0x4],0x80000000
1004b0de:	ja     0x1004b0e9
1004b0e0:	test   eax,eax
1004b0e2:	jne    0x1004b110
1004b0e4:	cmp    DWORD PTR [ebp-0x4],esi
1004b0e7:	jbe    0x1004b110
1004b0e9:	call   0x10046df5
1004b0ee:	test   BYTE PTR [ebp+0x18],0x1
1004b0f2:	mov    DWORD PTR [eax],0x22
1004b0f8:	je     0x1004b100
1004b0fa:	or     DWORD PTR [ebp-0x4],0xffffffff
1004b0fe:	jmp    0x1004b110
1004b100:	mov    al,BYTE PTR [ebp+0x18]
1004b103:	and    al,0x2
1004b105:	neg    al
1004b107:	sbb    eax,eax
1004b109:	neg    eax
1004b10b:	add    eax,esi
1004b10d:	mov    DWORD PTR [ebp-0x4],eax
1004b110:	mov    eax,DWORD PTR [ebp+0x10]
1004b113:	test   eax,eax
1004b115:	je     0x1004b119
1004b117:	mov    DWORD PTR [eax],edi
1004b119:	test   BYTE PTR [ebp+0x18],0x2
1004b11d:	je     0x1004b122
1004b11f:	neg    DWORD PTR [ebp-0x4]
1004b122:	cmp    BYTE PTR [ebp-0x8],0x0
1004b126:	je     0x1004b12f
1004b128:	mov    eax,DWORD PTR [ebp-0xc]
1004b12b:	and    DWORD PTR [eax+0x70],0xfffffffd
1004b12f:	mov    eax,DWORD PTR [ebp-0x4]
1004b132:	jmp    0x1004b14c
1004b134:	mov    eax,DWORD PTR [ebp+0x10]
1004b137:	test   eax,eax
1004b139:	je     0x1004b13d
1004b13b:	mov    DWORD PTR [eax],esi
1004b13d:	cmp    BYTE PTR [ebp-0x8],0x0
1004b141:	je     0x1004b14a
1004b143:	mov    eax,DWORD PTR [ebp-0xc]
1004b146:	and    DWORD PTR [eax+0x70],0xfffffffd
1004b14a:	xor    eax,eax
1004b14c:	pop    ebx
1004b14d:	pop    edi
1004b14e:	pop    esi
1004b14f:	leave  
1004b150:	ret    
1004b151:	push   ebp
1004b152:	mov    ebp,esp
1004b154:	xor    eax,eax
1004b156:	cmp    DWORD PTR ds:0x100802c8,eax
1004b15c:	push   eax
1004b15d:	push   DWORD PTR [ebp+0x10]
1004b160:	push   DWORD PTR [ebp+0xc]
1004b163:	push   DWORD PTR [ebp+0x8]
1004b166:	jne    0x1004b16f
1004b168:	push   0x1007e9b0
1004b16d:	jmp    0x1004b170
1004b16f:	push   eax
1004b170:	call   0x1004af26
1004b175:	add    esp,0x14
1004b178:	pop    ebp
1004b179:	ret    
1004b17a:	push   ebp
1004b17b:	mov    ebp,esp
1004b17d:	sub    esp,0x14
1004b180:	mov    eax,ds:0x1007e030
1004b185:	xor    eax,ebp
1004b187:	mov    DWORD PTR [ebp-0x4],eax
1004b18a:	push   ebx
1004b18b:	push   esi
1004b18c:	xor    ebx,ebx
1004b18e:	cmp    DWORD PTR ds:0x100802f8,ebx
1004b194:	push   edi
1004b195:	mov    esi,ecx
1004b197:	jne    0x1004b1d1
1004b199:	push   ebx
1004b19a:	push   ebx
1004b19b:	xor    edi,edi
1004b19d:	inc    edi
1004b19e:	push   edi
1004b19f:	push   0x10066cc8
1004b1a4:	push   0x100
1004b1a9:	push   ebx
1004b1aa:	call   DWORD PTR ds:0x100661ec
1004b1b0:	test   eax,eax
1004b1b2:	je     0x1004b1bc
1004b1b4:	mov    DWORD PTR ds:0x100802f8,edi
1004b1ba:	jmp    0x1004b1d1
1004b1bc:	call   DWORD PTR ds:0x100660cc
1004b1c2:	cmp    eax,0x78
1004b1c5:	jne    0x1004b1d1
1004b1c7:	mov    DWORD PTR ds:0x100802f8,0x2
1004b1d1:	cmp    DWORD PTR [ebp+0x14],ebx
1004b1d4:	jle    0x1004b1f8
1004b1d6:	mov    ecx,DWORD PTR [ebp+0x14]
1004b1d9:	mov    eax,DWORD PTR [ebp+0x10]
1004b1dc:	dec    ecx
1004b1dd:	cmp    BYTE PTR [eax],bl
1004b1df:	je     0x1004b1e9
1004b1e1:	inc    eax
1004b1e2:	cmp    ecx,ebx
1004b1e4:	jne    0x1004b1dc
1004b1e6:	or     ecx,0xffffffff
1004b1e9:	mov    eax,DWORD PTR [ebp+0x14]
1004b1ec:	sub    eax,ecx
1004b1ee:	dec    eax
1004b1ef:	cmp    eax,DWORD PTR [ebp+0x14]
1004b1f2:	jge    0x1004b1f5
1004b1f4:	inc    eax
1004b1f5:	mov    DWORD PTR [ebp+0x14],eax
1004b1f8:	mov    eax,ds:0x100802f8
1004b1fd:	cmp    eax,0x2
1004b200:	je     0x1004b3b1
1004b206:	cmp    eax,ebx
1004b208:	je     0x1004b3b1
1004b20e:	cmp    eax,0x1
1004b211:	jne    0x1004b3e2
1004b217:	cmp    DWORD PTR [ebp+0x20],ebx
1004b21a:	mov    DWORD PTR [ebp-0x8],ebx
1004b21d:	jne    0x1004b227
1004b21f:	mov    eax,DWORD PTR [esi]
1004b221:	mov    eax,DWORD PTR [eax+0x4]
1004b224:	mov    DWORD PTR [ebp+0x20],eax
1004b227:	mov    esi,DWORD PTR ds:0x1006608c
1004b22d:	xor    eax,eax
1004b22f:	cmp    DWORD PTR [ebp+0x24],ebx
1004b232:	push   ebx
1004b233:	push   ebx
1004b234:	push   DWORD PTR [ebp+0x14]
1004b237:	setne  al
1004b23a:	push   DWORD PTR [ebp+0x10]
1004b23d:	lea    eax,[eax*8+0x1]
1004b244:	push   eax
1004b245:	push   DWORD PTR [ebp+0x20]
1004b248:	call   esi
1004b24a:	mov    edi,eax
1004b24c:	cmp    edi,ebx
1004b24e:	je     0x1004b3e2
1004b254:	jle    0x1004b299
1004b256:	push   0xffffffe0
1004b258:	xor    edx,edx
1004b25a:	pop    eax
1004b25b:	div    edi
1004b25d:	cmp    eax,0x2
1004b260:	jb     0x1004b299
1004b262:	lea    eax,[edi+edi*1+0x8]
1004b266:	cmp    eax,0x400
1004b26b:	ja     0x1004b280
1004b26d:	call   0x1004b990
1004b272:	mov    eax,esp
1004b274:	cmp    eax,ebx
1004b276:	je     0x1004b294
1004b278:	mov    DWORD PTR [eax],0xcccc
1004b27e:	jmp    0x1004b291
1004b280:	push   eax
1004b281:	call   0x10045222
1004b286:	cmp    eax,ebx
1004b288:	pop    ecx
1004b289:	je     0x1004b294
1004b28b:	mov    DWORD PTR [eax],0xdddd
1004b291:	add    eax,0x8
1004b294:	mov    DWORD PTR [ebp-0xc],eax
1004b297:	jmp    0x1004b29c
1004b299:	mov    DWORD PTR [ebp-0xc],ebx
1004b29c:	cmp    DWORD PTR [ebp-0xc],ebx
1004b29f:	je     0x1004b3e2
1004b2a5:	push   edi
1004b2a6:	push   DWORD PTR [ebp-0xc]
1004b2a9:	push   DWORD PTR [ebp+0x14]
1004b2ac:	push   DWORD PTR [ebp+0x10]
1004b2af:	push   0x1
1004b2b1:	push   DWORD PTR [ebp+0x20]
1004b2b4:	call   esi
1004b2b6:	test   eax,eax
1004b2b8:	je     0x1004b3a0
1004b2be:	mov    esi,DWORD PTR ds:0x100661ec
1004b2c4:	push   ebx
1004b2c5:	push   ebx
1004b2c6:	push   edi
1004b2c7:	push   DWORD PTR [ebp-0xc]
1004b2ca:	push   DWORD PTR [ebp+0xc]
1004b2cd:	push   DWORD PTR [ebp+0x8]
1004b2d0:	call   esi
1004b2d2:	mov    ecx,eax
1004b2d4:	cmp    ecx,ebx
1004b2d6:	mov    DWORD PTR [ebp-0x8],ecx
1004b2d9:	je     0x1004b3a0
1004b2df:	test   WORD PTR [ebp+0xc],0x400
1004b2e5:	je     0x1004b310
1004b2e7:	cmp    DWORD PTR [ebp+0x1c],ebx
1004b2ea:	je     0x1004b3a0
1004b2f0:	cmp    ecx,DWORD PTR [ebp+0x1c]
1004b2f3:	jg     0x1004b3a0
1004b2f9:	push   DWORD PTR [ebp+0x1c]
1004b2fc:	push   DWORD PTR [ebp+0x18]
1004b2ff:	push   edi
1004b300:	push   DWORD PTR [ebp-0xc]
1004b303:	push   DWORD PTR [ebp+0xc]
1004b306:	push   DWORD PTR [ebp+0x8]
1004b309:	call   esi
1004b30b:	jmp    0x1004b3a0
1004b310:	cmp    ecx,ebx
1004b312:	jle    0x1004b359
1004b314:	push   0xffffffe0
1004b316:	xor    edx,edx
1004b318:	pop    eax
1004b319:	div    ecx
1004b31b:	cmp    eax,0x2
1004b31e:	jb     0x1004b359
1004b320:	lea    eax,[ecx+ecx*1+0x8]
1004b324:	cmp    eax,0x400
1004b329:	ja     0x1004b341
1004b32b:	call   0x1004b990
1004b330:	mov    esi,esp
1004b332:	cmp    esi,ebx
1004b334:	je     0x1004b3a0
1004b336:	mov    DWORD PTR [esi],0xcccc
1004b33c:	add    esi,0x8
1004b33f:	jmp    0x1004b35b
1004b341:	push   eax
1004b342:	call   0x10045222
1004b347:	cmp    eax,ebx
1004b349:	pop    ecx
1004b34a:	je     0x1004b355
1004b34c:	mov    DWORD PTR [eax],0xdddd
1004b352:	add    eax,0x8
1004b355:	mov    esi,eax
1004b357:	jmp    0x1004b35b
1004b359:	xor    esi,esi
1004b35b:	cmp    esi,ebx
1004b35d:	je     0x1004b3a0
1004b35f:	push   DWORD PTR [ebp-0x8]
1004b362:	push   esi
1004b363:	push   edi
1004b364:	push   DWORD PTR [ebp-0xc]
1004b367:	push   DWORD PTR [ebp+0xc]
1004b36a:	push   DWORD PTR [ebp+0x8]
1004b36d:	call   DWORD PTR ds:0x100661ec
1004b373:	test   eax,eax
1004b375:	je     0x1004b399
1004b377:	cmp    DWORD PTR [ebp+0x1c],ebx
1004b37a:	push   ebx
1004b37b:	push   ebx
1004b37c:	jne    0x1004b382
1004b37e:	push   ebx
1004b37f:	push   ebx
1004b380:	jmp    0x1004b388
1004b382:	push   DWORD PTR [ebp+0x1c]
1004b385:	push   DWORD PTR [ebp+0x18]
1004b388:	push   DWORD PTR [ebp-0x8]
1004b38b:	push   esi
1004b38c:	push   ebx
1004b38d:	push   DWORD PTR [ebp+0x20]
1004b390:	call   DWORD PTR ds:0x100660b8
1004b396:	mov    DWORD PTR [ebp-0x8],eax
1004b399:	push   esi
1004b39a:	call   0x1001b5ea
1004b39f:	pop    ecx
1004b3a0:	push   DWORD PTR [ebp-0xc]
1004b3a3:	call   0x1001b5ea
1004b3a8:	mov    eax,DWORD PTR [ebp-0x8]
1004b3ab:	pop    ecx
1004b3ac:	jmp    0x1004b50a
1004b3b1:	cmp    DWORD PTR [ebp+0x8],ebx
1004b3b4:	mov    DWORD PTR [ebp-0xc],ebx
1004b3b7:	mov    DWORD PTR [ebp-0x10],ebx
1004b3ba:	jne    0x1004b3c4
1004b3bc:	mov    eax,DWORD PTR [esi]
1004b3be:	mov    eax,DWORD PTR [eax+0x14]
1004b3c1:	mov    DWORD PTR [ebp+0x8],eax
1004b3c4:	cmp    DWORD PTR [ebp+0x20],ebx
1004b3c7:	jne    0x1004b3d1
1004b3c9:	mov    eax,DWORD PTR [esi]
1004b3cb:	mov    eax,DWORD PTR [eax+0x4]
1004b3ce:	mov    DWORD PTR [ebp+0x20],eax
1004b3d1:	push   DWORD PTR [ebp+0x8]
1004b3d4:	call   0x1004f6d4
1004b3d9:	cmp    eax,0xffffffff
1004b3dc:	pop    ecx
1004b3dd:	mov    DWORD PTR [ebp-0x14],eax
1004b3e0:	jne    0x1004b3e9
1004b3e2:	xor    eax,eax
1004b3e4:	jmp    0x1004b50a
1004b3e9:	cmp    eax,DWORD PTR [ebp+0x20]
1004b3ec:	je     0x1004b4cd
1004b3f2:	push   ebx
1004b3f3:	push   ebx
1004b3f4:	lea    ecx,[ebp+0x14]
1004b3f7:	push   ecx
1004b3f8:	push   DWORD PTR [ebp+0x10]
1004b3fb:	push   eax
1004b3fc:	push   DWORD PTR [ebp+0x20]
1004b3ff:	call   0x1004f71b
1004b404:	add    esp,0x18
1004b407:	cmp    eax,ebx
1004b409:	mov    DWORD PTR [ebp-0xc],eax
1004b40c:	je     0x1004b3e2
1004b40e:	mov    esi,DWORD PTR ds:0x100661e8
1004b414:	push   ebx
1004b415:	push   ebx
1004b416:	push   DWORD PTR [ebp+0x14]
1004b419:	push   eax
1004b41a:	push   DWORD PTR [ebp+0xc]
1004b41d:	push   DWORD PTR [ebp+0x8]
1004b420:	call   esi
1004b422:	cmp    eax,ebx
1004b424:	mov    DWORD PTR [ebp-0x8],eax
1004b427:	jne    0x1004b430
1004b429:	xor    esi,esi
1004b42b:	jmp    0x1004b4e7
1004b430:	jle    0x1004b46f
1004b432:	cmp    eax,0xffffffe0
1004b435:	ja     0x1004b46f
1004b437:	add    eax,0x8
1004b43a:	cmp    eax,0x400
1004b43f:	ja     0x1004b457
1004b441:	call   0x1004b990
1004b446:	mov    edi,esp
1004b448:	cmp    edi,ebx
1004b44a:	je     0x1004b429
1004b44c:	mov    DWORD PTR [edi],0xcccc
1004b452:	add    edi,0x8
1004b455:	jmp    0x1004b471
1004b457:	push   eax
1004b458:	call   0x10045222
1004b45d:	cmp    eax,ebx
1004b45f:	pop    ecx
1004b460:	je     0x1004b46b
1004b462:	mov    DWORD PTR [eax],0xdddd
1004b468:	add    eax,0x8
1004b46b:	mov    edi,eax
1004b46d:	jmp    0x1004b471
1004b46f:	xor    edi,edi
1004b471:	cmp    edi,ebx
1004b473:	je     0x1004b429
1004b475:	push   DWORD PTR [ebp-0x8]
1004b478:	push   ebx
1004b479:	push   edi
1004b47a:	call   0x10045ea0
1004b47f:	add    esp,0xc
1004b482:	push   DWORD PTR [ebp-0x8]
1004b485:	push   edi
1004b486:	push   DWORD PTR [ebp+0x14]
1004b489:	push   DWORD PTR [ebp-0xc]
1004b48c:	push   DWORD PTR [ebp+0xc]
1004b48f:	push   DWORD PTR [ebp+0x8]
1004b492:	call   esi
1004b494:	cmp    eax,ebx
1004b496:	mov    DWORD PTR [ebp-0x8],eax
1004b499:	jne    0x1004b49f
1004b49b:	xor    esi,esi
1004b49d:	jmp    0x1004b4c4
1004b49f:	push   DWORD PTR [ebp+0x1c]
1004b4a2:	lea    eax,[ebp-0x8]
1004b4a5:	push   DWORD PTR [ebp+0x18]
1004b4a8:	push   eax
1004b4a9:	push   edi
1004b4aa:	push   DWORD PTR [ebp+0x20]
1004b4ad:	push   DWORD PTR [ebp-0x14]
1004b4b0:	call   0x1004f71b
1004b4b5:	mov    esi,eax
1004b4b7:	mov    DWORD PTR [ebp-0x10],esi
1004b4ba:	add    esp,0x18
1004b4bd:	neg    esi
1004b4bf:	sbb    esi,esi
1004b4c1:	and    esi,DWORD PTR [ebp-0x8]
1004b4c4:	push   edi
1004b4c5:	call   0x1001b5ea
1004b4ca:	pop    ecx
1004b4cb:	jmp    0x1004b4e7
1004b4cd:	push   DWORD PTR [ebp+0x1c]
1004b4d0:	push   DWORD PTR [ebp+0x18]
1004b4d3:	push   DWORD PTR [ebp+0x14]
1004b4d6:	push   DWORD PTR [ebp+0x10]
1004b4d9:	push   DWORD PTR [ebp+0xc]
1004b4dc:	push   DWORD PTR [ebp+0x8]
1004b4df:	call   DWORD PTR ds:0x100661e8
1004b4e5:	mov    esi,eax
1004b4e7:	cmp    DWORD PTR [ebp-0xc],ebx
1004b4ea:	je     0x1004b4f5
1004b4ec:	push   DWORD PTR [ebp-0xc]
1004b4ef:	call   0x10043748
1004b4f4:	pop    ecx
1004b4f5:	mov    eax,DWORD PTR [ebp-0x10]
1004b4f8:	cmp    eax,ebx
1004b4fa:	je     0x1004b508
1004b4fc:	cmp    DWORD PTR [ebp+0x18],eax
1004b4ff:	je     0x1004b508
1004b501:	push   eax
1004b502:	call   0x10043748
1004b507:	pop    ecx
1004b508:	mov    eax,esi
1004b50a:	lea    esp,[ebp-0x20]
1004b50d:	pop    edi
1004b50e:	pop    esi
1004b50f:	pop    ebx
1004b510:	mov    ecx,DWORD PTR [ebp-0x4]
1004b513:	xor    ecx,ebp
1004b515:	call   0x100430d7
1004b51a:	leave  
1004b51b:	ret    
1004b51c:	push   ebp
1004b51d:	mov    ebp,esp
1004b51f:	sub    esp,0x10
1004b522:	push   DWORD PTR [ebp+0x8]
1004b525:	lea    ecx,[ebp-0x10]
1004b528:	call   0x10045785
1004b52d:	push   DWORD PTR [ebp+0x28]
1004b530:	lea    ecx,[ebp-0x10]
1004b533:	push   DWORD PTR [ebp+0x24]
1004b536:	push   DWORD PTR [ebp+0x20]
1004b539:	push   DWORD PTR [ebp+0x1c]
1004b53c:	push   DWORD PTR [ebp+0x18]
1004b53f:	push   DWORD PTR [ebp+0x14]
1004b542:	push   DWORD PTR [ebp+0x10]
1004b545:	push   DWORD PTR [ebp+0xc]
1004b548:	call   0x1004b17a
1004b54d:	add    esp,0x20
1004b550:	cmp    BYTE PTR [ebp-0x4],0x0
1004b554:	je     0x1004b55d
1004b556:	mov    ecx,DWORD PTR [ebp-0x8]
1004b559:	and    DWORD PTR [ecx+0x70],0xfffffffd
1004b55d:	leave  
1004b55e:	ret    
1004b55f:	push   ebp
1004b560:	mov    ebp,esp
1004b562:	sub    esp,0x10
1004b565:	push   DWORD PTR [ebp+0xc]
1004b568:	lea    ecx,[ebp-0x10]
1004b56b:	call   0x10045785
1004b570:	movzx  eax,BYTE PTR [ebp+0x8]
1004b574:	mov    ecx,DWORD PTR [ebp-0x10]
1004b577:	mov    ecx,DWORD PTR [ecx+0xc8]
1004b57d:	movzx  eax,WORD PTR [ecx+eax*2]
1004b581:	and    eax,0x8000
1004b586:	cmp    BYTE PTR [ebp-0x4],0x0
1004b58a:	je     0x1004b593
1004b58c:	mov    ecx,DWORD PTR [ebp-0x8]
1004b58f:	and    DWORD PTR [ecx+0x70],0xfffffffd
1004b593:	leave  
1004b594:	ret    
1004b595:	push   0x0
1004b597:	push   DWORD PTR [esp+0x8]
1004b59b:	call   0x1004b55f
1004b5a0:	pop    ecx
1004b5a1:	pop    ecx
1004b5a2:	ret    
1004b5a3:	push   ebp
1004b5a4:	mov    ebp,esp
1004b5a6:	sub    esp,0x18
1004b5a9:	push   ebx
1004b5aa:	push   DWORD PTR [ebp+0x10]
1004b5ad:	lea    ecx,[ebp-0x18]
1004b5b0:	call   0x10045785
1004b5b5:	mov    ebx,DWORD PTR [ebp+0x8]
1004b5b8:	lea    eax,[ebx+0x1]
1004b5bb:	cmp    eax,0x100
1004b5c0:	ja     0x1004b5d1
1004b5c2:	mov    eax,DWORD PTR [ebp-0x18]
1004b5c5:	mov    eax,DWORD PTR [eax+0xc8]
1004b5cb:	movzx  eax,WORD PTR [eax+ebx*2]
1004b5cf:	jmp    0x1004b646
1004b5d1:	mov    DWORD PTR [ebp+0x8],ebx
1004b5d4:	sar    DWORD PTR [ebp+0x8],0x8
1004b5d8:	lea    eax,[ebp-0x18]
1004b5db:	push   eax
1004b5dc:	mov    eax,DWORD PTR [ebp+0x8]
1004b5df:	and    eax,0xff
1004b5e4:	push   eax
1004b5e5:	call   0x1004b55f
1004b5ea:	test   eax,eax
1004b5ec:	pop    ecx
1004b5ed:	pop    ecx
1004b5ee:	je     0x1004b602
1004b5f0:	mov    al,BYTE PTR [ebp+0x8]
1004b5f3:	push   0x2
1004b5f5:	mov    BYTE PTR [ebp-0x8],al
1004b5f8:	mov    BYTE PTR [ebp-0x7],bl
1004b5fb:	mov    BYTE PTR [ebp-0x6],0x0
1004b5ff:	pop    ecx
1004b600:	jmp    0x1004b60c
1004b602:	xor    ecx,ecx
1004b604:	mov    BYTE PTR [ebp-0x8],bl
1004b607:	mov    BYTE PTR [ebp-0x7],0x0
1004b60b:	inc    ecx
1004b60c:	mov    eax,DWORD PTR [ebp-0x18]
1004b60f:	push   0x1
1004b611:	push   DWORD PTR [eax+0x14]
1004b614:	push   DWORD PTR [eax+0x4]
1004b617:	lea    eax,[ebp-0x4]
1004b61a:	push   eax
1004b61b:	push   ecx
1004b61c:	lea    eax,[ebp-0x8]
1004b61f:	push   eax
1004b620:	lea    eax,[ebp-0x18]
1004b623:	push   0x1
1004b625:	push   eax
1004b626:	call   0x1004f0bd
1004b62b:	add    esp,0x20
1004b62e:	test   eax,eax
1004b630:	jne    0x1004b642
1004b632:	cmp    BYTE PTR [ebp-0xc],al
1004b635:	je     0x1004b63e
1004b637:	mov    eax,DWORD PTR [ebp-0x10]
1004b63a:	and    DWORD PTR [eax+0x70],0xfffffffd
1004b63e:	xor    eax,eax
1004b640:	jmp    0x1004b656
1004b642:	movzx  eax,WORD PTR [ebp-0x4]
1004b646:	and    eax,DWORD PTR [ebp+0xc]
1004b649:	cmp    BYTE PTR [ebp-0xc],0x0
1004b64d:	je     0x1004b656
1004b64f:	mov    ecx,DWORD PTR [ebp-0x10]
1004b652:	and    DWORD PTR [ecx+0x70],0xfffffffd
1004b656:	pop    ebx
1004b657:	leave  
1004b658:	ret    
1004b659:	mov    ecx,DWORD PTR [esp+0x4]
1004b65d:	push   ebx
1004b65e:	push   esi
1004b65f:	push   edi
1004b660:	xor    edi,edi
1004b662:	cmp    ecx,edi
1004b664:	je     0x1004b66e
1004b666:	mov    ebx,DWORD PTR [esp+0x14]
1004b66a:	cmp    ebx,edi
1004b66c:	ja     0x1004b689
1004b66e:	call   0x10046df5
1004b673:	push   0x16
1004b675:	pop    esi
1004b676:	mov    DWORD PTR [eax],esi
1004b678:	push   edi
1004b679:	push   edi
1004b67a:	push   edi
1004b67b:	push   edi
1004b67c:	push   edi
1004b67d:	call   0x100435cc
1004b682:	add    esp,0x14
1004b685:	mov    eax,esi
1004b687:	jmp    0x1004b6c1
1004b689:	mov    esi,DWORD PTR [esp+0x18]
1004b68d:	cmp    esi,edi
1004b68f:	jne    0x1004b696
1004b691:	mov    WORD PTR [ecx],di
1004b694:	jmp    0x1004b66e
1004b696:	mov    edx,ecx
1004b698:	movzx  eax,WORD PTR [esi]
1004b69b:	mov    WORD PTR [edx],ax
1004b69e:	inc    edx
1004b69f:	inc    edx
1004b6a0:	inc    esi
1004b6a1:	inc    esi
1004b6a2:	cmp    ax,di
1004b6a5:	je     0x1004b6aa
1004b6a7:	dec    ebx
1004b6a8:	jne    0x1004b698
1004b6aa:	cmp    ebx,edi
1004b6ac:	jne    0x1004b6bf
1004b6ae:	mov    WORD PTR [ecx],di
1004b6b1:	call   0x10046df5
1004b6b6:	push   0x22
1004b6b8:	pop    ecx
1004b6b9:	mov    DWORD PTR [eax],ecx
1004b6bb:	mov    esi,ecx
1004b6bd:	jmp    0x1004b678
1004b6bf:	xor    eax,eax
1004b6c1:	pop    edi
1004b6c2:	pop    esi
1004b6c3:	pop    ebx
1004b6c4:	ret    
1004b6c5:	push   ebp
1004b6c6:	mov    ebp,esp
1004b6c8:	sub    esp,0x10
1004b6cb:	mov    eax,ds:0x1007e030
1004b6d0:	xor    eax,ebp
1004b6d2:	mov    DWORD PTR [ebp-0x4],eax
1004b6d5:	push   ebx
1004b6d6:	push   esi
1004b6d7:	mov    esi,DWORD PTR ds:0x100661ec
1004b6dd:	xor    ebx,ebx
1004b6df:	cmp    DWORD PTR ds:0x100802fc,ebx
1004b6e5:	push   edi
1004b6e6:	mov    edi,ecx
1004b6e8:	jne    0x1004b720
1004b6ea:	push   ebx
1004b6eb:	push   ebx
1004b6ec:	push   0x1
1004b6ee:	push   0x10066cc8
1004b6f3:	push   0x100
1004b6f8:	push   ebx
1004b6f9:	call   esi
1004b6fb:	test   eax,eax
1004b6fd:	je     0x1004b70b
1004b6ff:	mov    DWORD PTR ds:0x100802fc,0x1
1004b709:	jmp    0x1004b720
1004b70b:	call   DWORD PTR ds:0x100660cc
1004b711:	cmp    eax,0x78
1004b714:	jne    0x1004b720
1004b716:	mov    DWORD PTR ds:0x100802fc,0x2
1004b720:	cmp    DWORD PTR [ebp+0x14],ebx
1004b723:	jle    0x1004b742
1004b725:	mov    ecx,DWORD PTR [ebp+0x14]
1004b728:	mov    eax,DWORD PTR [ebp+0x10]
1004b72b:	dec    ecx
1004b72c:	cmp    WORD PTR [eax],bx
1004b72f:	je     0x1004b73a
1004b731:	inc    eax
1004b732:	inc    eax
1004b733:	cmp    ecx,ebx
1004b735:	jne    0x1004b72b
1004b737:	or     ecx,0xffffffff
1004b73a:	or     eax,0xffffffff
1004b73d:	sub    eax,ecx
1004b73f:	add    DWORD PTR [ebp+0x14],eax
1004b742:	mov    eax,ds:0x100802fc
1004b747:	cmp    eax,0x1
1004b74a:	jne    0x1004b765
1004b74c:	push   DWORD PTR [ebp+0x1c]
1004b74f:	push   DWORD PTR [ebp+0x18]
1004b752:	push   DWORD PTR [ebp+0x14]
1004b755:	push   DWORD PTR [ebp+0x10]
1004b758:	push   DWORD PTR [ebp+0xc]
1004b75b:	push   DWORD PTR [ebp+0x8]
1004b75e:	call   esi
1004b760:	jmp    0x1004b914
1004b765:	cmp    eax,0x2
1004b768:	je     0x1004b76e
1004b76a:	cmp    eax,ebx
1004b76c:	jne    0x1004b7c0
1004b76e:	cmp    DWORD PTR [ebp+0x8],ebx
1004b771:	mov    DWORD PTR [ebp-0xc],ebx
1004b774:	jne    0x1004b77e
1004b776:	mov    eax,DWORD PTR [edi]
1004b778:	mov    eax,DWORD PTR [eax+0x14]
1004b77b:	mov    DWORD PTR [ebp+0x8],eax
1004b77e:	cmp    DWORD PTR [ebp+0x20],ebx
1004b781:	jne    0x1004b78b
1004b783:	mov    eax,DWORD PTR [edi]
1004b785:	mov    eax,DWORD PTR [eax+0x4]
1004b788:	mov    DWORD PTR [ebp+0x20],eax
1004b78b:	push   DWORD PTR [ebp+0x8]
1004b78e:	call   0x1004f6d4
1004b793:	cmp    DWORD PTR [ebp+0x20],eax
1004b796:	pop    ecx
1004b797:	je     0x1004b7a1
1004b799:	cmp    eax,0xffffffff
1004b79c:	je     0x1004b7a1
1004b79e:	mov    DWORD PTR [ebp+0x20],eax
1004b7a1:	mov    esi,DWORD PTR ds:0x100660b8
1004b7a7:	push   ebx
1004b7a8:	push   ebx
1004b7a9:	push   ebx
1004b7aa:	push   ebx
1004b7ab:	push   DWORD PTR [ebp+0x14]
1004b7ae:	push   DWORD PTR [ebp+0x10]
1004b7b1:	push   ebx
1004b7b2:	push   DWORD PTR [ebp+0x20]
1004b7b5:	call   esi
1004b7b7:	mov    edi,eax
1004b7b9:	cmp    edi,ebx
1004b7bb:	mov    DWORD PTR [ebp-0x10],edi
1004b7be:	jne    0x1004b7c7
1004b7c0:	xor    eax,eax
1004b7c2:	jmp    0x1004b914
1004b7c7:	jle    0x1004b80b
1004b7c9:	push   0xffffffe0
1004b7cb:	xor    edx,edx
1004b7cd:	pop    eax
1004b7ce:	div    edi
1004b7d0:	cmp    eax,0x1
1004b7d3:	jb     0x1004b80b
1004b7d5:	lea    eax,[edi+0x8]
1004b7d8:	cmp    eax,0x400
1004b7dd:	ja     0x1004b7f2
1004b7df:	call   0x1004b990
1004b7e4:	mov    eax,esp
1004b7e6:	cmp    eax,ebx
1004b7e8:	je     0x1004b806
1004b7ea:	mov    DWORD PTR [eax],0xcccc
1004b7f0:	jmp    0x1004b803
1004b7f2:	push   eax
1004b7f3:	call   0x10045222
1004b7f8:	cmp    eax,ebx
1004b7fa:	pop    ecx
1004b7fb:	je     0x1004b806
1004b7fd:	mov    DWORD PTR [eax],0xdddd
1004b803:	add    eax,0x8
1004b806:	mov    DWORD PTR [ebp-0x8],eax
1004b809:	jmp    0x1004b80e
1004b80b:	mov    DWORD PTR [ebp-0x8],ebx
1004b80e:	cmp    DWORD PTR [ebp-0x8],ebx
1004b811:	je     0x1004b7c0
1004b813:	push   ebx
1004b814:	push   ebx
1004b815:	push   edi
1004b816:	push   DWORD PTR [ebp-0x8]
1004b819:	push   DWORD PTR [ebp+0x14]
1004b81c:	push   DWORD PTR [ebp+0x10]
1004b81f:	push   ebx
1004b820:	push   DWORD PTR [ebp+0x20]
1004b823:	call   esi
1004b825:	test   eax,eax
1004b827:	je     0x1004b908
1004b82d:	push   ebx
1004b82e:	push   ebx
1004b82f:	push   edi
1004b830:	push   DWORD PTR [ebp-0x8]
1004b833:	mov    edi,DWORD PTR ds:0x100661e8
1004b839:	push   DWORD PTR [ebp+0xc]
1004b83c:	push   DWORD PTR [ebp+0x8]
1004b83f:	call   edi
1004b841:	mov    esi,eax
1004b843:	cmp    esi,ebx
1004b845:	je     0x1004b908
1004b84b:	jle    0x1004b88c
1004b84d:	push   0xffffffe0
1004b84f:	xor    edx,edx
1004b851:	pop    eax
1004b852:	div    esi
1004b854:	cmp    eax,0x1
1004b857:	jb     0x1004b88c
1004b859:	lea    eax,[esi+0x8]
1004b85c:	cmp    eax,0x400
1004b861:	ja     0x1004b876
1004b863:	call   0x1004b990
1004b868:	mov    eax,esp
1004b86a:	cmp    eax,ebx
1004b86c:	je     0x1004b88a
1004b86e:	mov    DWORD PTR [eax],0xcccc
1004b874:	jmp    0x1004b887
1004b876:	push   eax
1004b877:	call   0x10045222
1004b87c:	cmp    eax,ebx
1004b87e:	pop    ecx
1004b87f:	je     0x1004b88a
1004b881:	mov    DWORD PTR [eax],0xdddd
1004b887:	add    eax,0x8
1004b88a:	mov    ebx,eax
1004b88c:	test   ebx,ebx
1004b88e:	je     0x1004b908
1004b890:	push   esi
1004b891:	push   ebx
1004b892:	push   DWORD PTR [ebp-0x10]
1004b895:	push   DWORD PTR [ebp-0x8]
1004b898:	push   DWORD PTR [ebp+0xc]
1004b89b:	push   DWORD PTR [ebp+0x8]
1004b89e:	call   edi
1004b8a0:	test   eax,eax
1004b8a2:	je     0x1004b901
1004b8a4:	test   WORD PTR [ebp+0xc],0x400
1004b8aa:	je     0x1004b8e0
1004b8ac:	mov    eax,DWORD PTR [ebp+0x1c]
1004b8af:	xor    edi,edi
1004b8b1:	cmp    eax,edi
1004b8b3:	mov    DWORD PTR [ebp-0xc],esi
1004b8b6:	je     0x1004b901
1004b8b8:	cmp    eax,esi
1004b8ba:	jg     0x1004b8bf
1004b8bc:	lea    esi,[eax-0x1]
1004b8bf:	push   esi
1004b8c0:	push   ebx
1004b8c1:	push   eax
1004b8c2:	push   DWORD PTR [ebp+0x18]
1004b8c5:	call   0x1004ed4f
1004b8ca:	add    esp,0x10
1004b8cd:	test   eax,eax
1004b8cf:	je     0x1004b901
1004b8d1:	push   edi
1004b8d2:	push   edi
1004b8d3:	push   edi
1004b8d4:	push   edi
1004b8d5:	push   edi
1004b8d6:	call   0x100434d0
1004b8db:	add    esp,0x14
1004b8de:	jmp    0x1004b901
1004b8e0:	xor    eax,eax
1004b8e2:	cmp    DWORD PTR [ebp+0x1c],eax
1004b8e5:	jne    0x1004b8eb
1004b8e7:	push   eax
1004b8e8:	push   eax
1004b8e9:	jmp    0x1004b8f1
1004b8eb:	push   DWORD PTR [ebp+0x1c]
1004b8ee:	push   DWORD PTR [ebp+0x18]
1004b8f1:	push   esi
1004b8f2:	push   ebx
1004b8f3:	push   0x1
1004b8f5:	push   DWORD PTR [ebp+0x20]
1004b8f8:	call   DWORD PTR ds:0x1006608c
1004b8fe:	mov    DWORD PTR [ebp-0xc],eax
1004b901:	push   ebx
1004b902:	call   0x1001b5ea
1004b907:	pop    ecx
1004b908:	push   DWORD PTR [ebp-0x8]
1004b90b:	call   0x1001b5ea
1004b910:	mov    eax,DWORD PTR [ebp-0xc]
1004b913:	pop    ecx
1004b914:	lea    esp,[ebp-0x1c]
1004b917:	pop    edi
1004b918:	pop    esi
1004b919:	pop    ebx
1004b91a:	mov    ecx,DWORD PTR [ebp-0x4]
1004b91d:	xor    ecx,ebp
1004b91f:	call   0x100430d7
1004b924:	leave  
1004b925:	ret    
1004b926:	push   ebp
1004b927:	mov    ebp,esp
1004b929:	sub    esp,0x10
1004b92c:	push   DWORD PTR [ebp+0x8]
1004b92f:	lea    ecx,[ebp-0x10]
1004b932:	call   0x10045785
1004b937:	push   DWORD PTR [ebp+0x24]
1004b93a:	lea    ecx,[ebp-0x10]
1004b93d:	push   DWORD PTR [ebp+0x20]
1004b940:	push   DWORD PTR [ebp+0x1c]
1004b943:	push   DWORD PTR [ebp+0x18]
1004b946:	push   DWORD PTR [ebp+0x14]
1004b949:	push   DWORD PTR [ebp+0x10]
1004b94c:	push   DWORD PTR [ebp+0xc]
1004b94f:	call   0x1004b6c5
1004b954:	add    esp,0x1c
1004b957:	cmp    BYTE PTR [ebp-0x4],0x0
1004b95b:	je     0x1004b964
1004b95d:	mov    ecx,DWORD PTR [ebp-0x8]
1004b960:	and    DWORD PTR [ecx+0x70],0xfffffffd
1004b964:	leave  
1004b965:	ret    
1004b966:	xor    eax,eax
1004b968:	cmp    DWORD PTR [esp+0x8],eax
1004b96c:	jbe    0x1004b981
1004b96e:	mov    ecx,DWORD PTR [esp+0x4]
1004b972:	cmp    WORD PTR [ecx],0x0
1004b976:	je     0x1004b981
1004b978:	inc    eax
1004b979:	inc    ecx
1004b97a:	inc    ecx
1004b97b:	cmp    eax,DWORD PTR [esp+0x8]
1004b97f:	jb     0x1004b972
1004b981:	ret    
1004b982:	int3   
1004b983:	int3   
1004b984:	int3   
1004b985:	int3   
1004b986:	int3   
1004b987:	int3   
1004b988:	int3   
1004b989:	int3   
1004b98a:	int3   
1004b98b:	int3   
1004b98c:	int3   
1004b98d:	int3   
1004b98e:	int3   
1004b98f:	int3   
1004b990:	push   ecx
1004b991:	lea    ecx,[esp+0x8]
1004b995:	sub    ecx,eax
1004b997:	and    ecx,0xf
1004b99a:	add    eax,ecx
1004b99c:	sbb    ecx,ecx
1004b99e:	or     eax,ecx
1004b9a0:	pop    ecx
1004b9a1:	jmp    0x1004a080
1004b9a6:	push   ecx
1004b9a7:	lea    ecx,[esp+0x8]
1004b9ab:	sub    ecx,eax
1004b9ad:	and    ecx,0x7
1004b9b0:	add    eax,ecx
1004b9b2:	sbb    ecx,ecx
1004b9b4:	or     eax,ecx
1004b9b6:	pop    ecx
1004b9b7:	jmp    0x1004a080
1004b9bc:	push   ebp
1004b9bd:	mov    ebp,esp
1004b9bf:	mov    eax,0xffff
1004b9c4:	sub    esp,0x14
1004b9c7:	cmp    WORD PTR [ebp+0x8],ax
1004b9cb:	je     0x1004ba67
1004b9d1:	push   ebx
1004b9d2:	push   DWORD PTR [ebp+0xc]
1004b9d5:	lea    ecx,[ebp-0x14]
1004b9d8:	call   0x10045785
1004b9dd:	mov    ecx,DWORD PTR [ebp-0x14]
1004b9e0:	mov    edx,DWORD PTR [ecx+0x14]
1004b9e3:	xor    ebx,ebx
1004b9e5:	cmp    edx,ebx
1004b9e7:	jne    0x1004b9fd
1004b9e9:	mov    eax,DWORD PTR [ebp+0x8]
1004b9ec:	lea    ecx,[eax-0x41]
1004b9ef:	cmp    cx,0x19
1004b9f3:	ja     0x1004b9f8
1004b9f5:	add    eax,0x20
1004b9f8:	movzx  eax,ax
1004b9fb:	jmp    0x1004ba5a
1004b9fd:	mov    eax,0x100
1004ba02:	cmp    WORD PTR [ebp+0x8],ax
1004ba06:	jae    0x1004ba31
1004ba08:	lea    eax,[ebp-0x14]
1004ba0b:	push   eax
1004ba0c:	push   0x1
1004ba0e:	push   DWORD PTR [ebp+0x8]
1004ba11:	call   0x1004f8cd
1004ba16:	add    esp,0xc
1004ba19:	test   eax,eax
1004ba1b:	movzx  eax,WORD PTR [ebp+0x8]
1004ba1f:	je     0x1004ba5a
1004ba21:	mov    ecx,DWORD PTR [ebp-0x14]
1004ba24:	mov    ecx,DWORD PTR [ecx+0xcc]
1004ba2a:	movzx  ax,BYTE PTR [ecx+eax*1]
1004ba2f:	jmp    0x1004b9f8
1004ba31:	push   DWORD PTR [ecx+0x4]
1004ba34:	lea    ecx,[ebp-0x4]
1004ba37:	push   0x1
1004ba39:	push   ecx
1004ba3a:	push   0x1
1004ba3c:	lea    ecx,[ebp+0x8]
1004ba3f:	push   ecx
1004ba40:	push   eax
1004ba41:	push   edx
1004ba42:	lea    eax,[ebp-0x14]
1004ba45:	push   eax
1004ba46:	call   0x1004b926
1004ba4b:	add    esp,0x20
1004ba4e:	test   eax,eax
1004ba50:	movzx  eax,WORD PTR [ebp+0x8]
1004ba54:	je     0x1004ba5a
1004ba56:	movzx  eax,WORD PTR [ebp-0x4]
1004ba5a:	cmp    BYTE PTR [ebp-0x8],bl
1004ba5d:	je     0x1004ba66
1004ba5f:	mov    ecx,DWORD PTR [ebp-0xc]
1004ba62:	and    DWORD PTR [ecx+0x70],0xfffffffd
1004ba66:	pop    ebx
1004ba67:	leave  
1004ba68:	ret    
1004ba69:	push   0x54
1004ba6b:	push   0x100748c8
1004ba70:	call   0x10046f34
1004ba75:	xor    edi,edi
1004ba77:	mov    DWORD PTR [ebp-0x4],edi
1004ba7a:	lea    eax,[ebp-0x64]
1004ba7d:	push   eax
1004ba7e:	call   DWORD PTR ds:0x100661f8
1004ba84:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1004ba8b:	push   0x28
1004ba8d:	push   0x20
1004ba8f:	pop    esi
1004ba90:	push   esi
1004ba91:	call   0x10047702
1004ba96:	pop    ecx
1004ba97:	pop    ecx
1004ba98:	cmp    eax,edi
1004ba9a:	je     0x1004bca0
1004baa0:	mov    ds:0x10082480,eax
1004baa5:	mov    DWORD PTR ds:0x10082464,esi
1004baab:	lea    ecx,[eax+0x500]
1004bab1:	jmp    0x1004badc
1004bab3:	mov    BYTE PTR [eax+0x4],0x0
1004bab7:	or     DWORD PTR [eax],0xffffffff
1004baba:	mov    BYTE PTR [eax+0x5],0xa
1004babe:	mov    DWORD PTR [eax+0x8],edi
1004bac1:	mov    BYTE PTR [eax+0x24],0x0
1004bac5:	mov    BYTE PTR [eax+0x25],0xa
1004bac9:	mov    BYTE PTR [eax+0x26],0xa
1004bacd:	add    eax,0x28
1004bad0:	mov    ecx,DWORD PTR ds:0x10082480
1004bad6:	add    ecx,0x500
1004badc:	cmp    eax,ecx
1004bade:	jb     0x1004bab3
1004bae0:	cmp    WORD PTR [ebp-0x32],di
1004bae4:	je     0x1004bbe7
1004baea:	mov    eax,DWORD PTR [ebp-0x30]
1004baed:	cmp    eax,edi
1004baef:	je     0x1004bbe7
1004baf5:	mov    edi,DWORD PTR [eax]
1004baf7:	lea    ebx,[eax+0x4]
1004bafa:	lea    eax,[ebx+edi*1]
1004bafd:	mov    DWORD PTR [ebp-0x1c],eax
1004bb00:	mov    eax,0x800
1004bb05:	cmp    edi,eax
1004bb07:	jl     0x1004bb0b
1004bb09:	mov    edi,eax
1004bb0b:	xor    esi,esi
1004bb0d:	inc    esi
1004bb0e:	jmp    0x1004bb62
1004bb10:	push   0x28
1004bb12:	push   0x20
1004bb14:	call   0x10047702
1004bb19:	pop    ecx
1004bb1a:	pop    ecx
1004bb1b:	test   eax,eax
1004bb1d:	je     0x1004bb6c
1004bb1f:	lea    ecx,[esi*4+0x10082480]
1004bb26:	mov    DWORD PTR [ecx],eax
1004bb28:	add    DWORD PTR ds:0x10082464,0x20
1004bb2f:	lea    edx,[eax+0x500]
1004bb35:	jmp    0x1004bb5d
1004bb37:	mov    BYTE PTR [eax+0x4],0x0
1004bb3b:	or     DWORD PTR [eax],0xffffffff
1004bb3e:	mov    BYTE PTR [eax+0x5],0xa
1004bb42:	and    DWORD PTR [eax+0x8],0x0
1004bb46:	and    BYTE PTR [eax+0x24],0x80
1004bb4a:	mov    BYTE PTR [eax+0x25],0xa
1004bb4e:	mov    BYTE PTR [eax+0x26],0xa
1004bb52:	add    eax,0x28
1004bb55:	mov    edx,DWORD PTR [ecx]
1004bb57:	add    edx,0x500
1004bb5d:	cmp    eax,edx
1004bb5f:	jb     0x1004bb37
1004bb61:	inc    esi
1004bb62:	cmp    DWORD PTR ds:0x10082464,edi
1004bb68:	jl     0x1004bb10
1004bb6a:	jmp    0x1004bb72
1004bb6c:	mov    edi,DWORD PTR ds:0x10082464
1004bb72:	and    DWORD PTR [ebp-0x20],0x0
1004bb76:	test   edi,edi
1004bb78:	jle    0x1004bbe7
1004bb7a:	mov    eax,DWORD PTR [ebp-0x1c]
1004bb7d:	mov    ecx,DWORD PTR [eax]
1004bb7f:	cmp    ecx,0xffffffff
1004bb82:	je     0x1004bbda
1004bb84:	cmp    ecx,0xfffffffe
1004bb87:	je     0x1004bbda
1004bb89:	mov    al,BYTE PTR [ebx]
1004bb8b:	test   al,0x1
1004bb8d:	je     0x1004bbda
1004bb8f:	test   al,0x8
1004bb91:	jne    0x1004bb9e
1004bb93:	push   ecx
1004bb94:	call   DWORD PTR ds:0x100661f4
1004bb9a:	test   eax,eax
1004bb9c:	je     0x1004bbda
1004bb9e:	mov    esi,DWORD PTR [ebp-0x20]
1004bba1:	mov    eax,esi
1004bba3:	sar    eax,0x5
1004bba6:	and    esi,0x1f
1004bba9:	imul   esi,esi,0x28
1004bbac:	add    esi,DWORD PTR [eax*4+0x10082480]
1004bbb3:	mov    eax,DWORD PTR [ebp-0x1c]
1004bbb6:	mov    eax,DWORD PTR [eax]
1004bbb8:	mov    DWORD PTR [esi],eax
1004bbba:	mov    al,BYTE PTR [ebx]
1004bbbc:	mov    BYTE PTR [esi+0x4],al
1004bbbf:	push   0xfa0
1004bbc4:	lea    eax,[esi+0xc]
1004bbc7:	push   eax
1004bbc8:	call   0x1004c83b
1004bbcd:	pop    ecx
1004bbce:	pop    ecx
1004bbcf:	test   eax,eax
1004bbd1:	je     0x1004bca0
1004bbd7:	inc    DWORD PTR [esi+0x8]
1004bbda:	inc    DWORD PTR [ebp-0x20]
1004bbdd:	inc    ebx
1004bbde:	add    DWORD PTR [ebp-0x1c],0x4
1004bbe2:	cmp    DWORD PTR [ebp-0x20],edi
1004bbe5:	jl     0x1004bb7a
1004bbe7:	xor    ebx,ebx
1004bbe9:	mov    esi,ebx
1004bbeb:	imul   esi,esi,0x28
1004bbee:	add    esi,DWORD PTR ds:0x10082480
1004bbf4:	mov    eax,DWORD PTR [esi]
1004bbf6:	cmp    eax,0xffffffff
1004bbf9:	je     0x1004bc06
1004bbfb:	cmp    eax,0xfffffffe
1004bbfe:	je     0x1004bc06
1004bc00:	or     BYTE PTR [esi+0x4],0x80
1004bc04:	jmp    0x1004bc78
1004bc06:	mov    BYTE PTR [esi+0x4],0x81
1004bc0a:	test   ebx,ebx
1004bc0c:	jne    0x1004bc13
1004bc0e:	push   0xfffffff6
1004bc10:	pop    eax
1004bc11:	jmp    0x1004bc1d
1004bc13:	mov    eax,ebx
1004bc15:	dec    eax
1004bc16:	neg    eax
1004bc18:	sbb    eax,eax
1004bc1a:	add    eax,0xfffffff5
1004bc1d:	push   eax
1004bc1e:	call   DWORD PTR ds:0x100661d4
1004bc24:	mov    edi,eax
1004bc26:	cmp    edi,0xffffffff
1004bc29:	je     0x1004bc6e
1004bc2b:	test   edi,edi
1004bc2d:	je     0x1004bc6e
1004bc2f:	push   edi
1004bc30:	call   DWORD PTR ds:0x100661f4
1004bc36:	test   eax,eax
1004bc38:	je     0x1004bc6e
1004bc3a:	mov    DWORD PTR [esi],edi
1004bc3c:	and    eax,0xff
1004bc41:	cmp    eax,0x2
1004bc44:	jne    0x1004bc4c
1004bc46:	or     BYTE PTR [esi+0x4],0x40
1004bc4a:	jmp    0x1004bc55
1004bc4c:	cmp    eax,0x3
1004bc4f:	jne    0x1004bc55
1004bc51:	or     BYTE PTR [esi+0x4],0x8
1004bc55:	push   0xfa0
1004bc5a:	lea    eax,[esi+0xc]
1004bc5d:	push   eax
1004bc5e:	call   0x1004c83b
1004bc63:	pop    ecx
1004bc64:	pop    ecx
1004bc65:	test   eax,eax
1004bc67:	je     0x1004bca0
1004bc69:	inc    DWORD PTR [esi+0x8]
1004bc6c:	jmp    0x1004bc78
1004bc6e:	or     BYTE PTR [esi+0x4],0x40
1004bc72:	mov    DWORD PTR [esi],0xfffffffe
1004bc78:	inc    ebx
1004bc79:	cmp    ebx,0x3
1004bc7c:	jl     0x1004bbe9
1004bc82:	push   DWORD PTR ds:0x10082464
1004bc88:	call   DWORD PTR ds:0x100661f0
1004bc8e:	xor    eax,eax
1004bc90:	jmp    0x1004bca3
1004bc92:	xor    eax,eax
1004bc94:	inc    eax
1004bc95:	ret    
1004bc96:	mov    esp,DWORD PTR [ebp-0x18]
1004bc99:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1004bca0:	or     eax,0xffffffff
1004bca3:	call   0x10046f79
1004bca8:	ret    
1004bca9:	push   esi
1004bcaa:	push   edi
1004bcab:	mov    esi,0x10082480
1004bcb0:	mov    edi,DWORD PTR [esi]
1004bcb2:	test   edi,edi
1004bcb4:	je     0x1004bce7
1004bcb6:	lea    eax,[edi+0x500]
1004bcbc:	jmp    0x1004bcd8
1004bcbe:	cmp    DWORD PTR [edi+0x8],0x0
1004bcc2:	je     0x1004bcce
1004bcc4:	lea    eax,[edi+0xc]
1004bcc7:	push   eax
1004bcc8:	call   DWORD PTR ds:0x10066138
1004bcce:	mov    eax,DWORD PTR [esi]
1004bcd0:	add    edi,0x28
1004bcd3:	add    eax,0x500
1004bcd8:	cmp    edi,eax
1004bcda:	jb     0x1004bcbe
1004bcdc:	push   DWORD PTR [esi]
1004bcde:	call   0x10043748
1004bce3:	and    DWORD PTR [esi],0x0
1004bce6:	pop    ecx
1004bce7:	add    esi,0x4
1004bcea:	cmp    esi,0x10082580
1004bcf0:	jl     0x1004bcb0
1004bcf2:	pop    edi
1004bcf3:	pop    esi
1004bcf4:	ret    
1004bcf5:	push   ebx
1004bcf6:	xor    ebx,ebx
1004bcf8:	cmp    DWORD PTR ds:0x100825b4,ebx
1004bcfe:	push   esi
1004bcff:	push   edi
1004bd00:	jne    0x1004bd07
1004bd02:	call   0x1004a89a
1004bd07:	mov    esi,DWORD PTR ds:0x1007fa98
1004bd0d:	xor    edi,edi
1004bd0f:	cmp    esi,ebx
1004bd11:	jne    0x1004bd2b
1004bd13:	or     eax,0xffffffff
1004bd16:	jmp    0x1004bdb6
1004bd1b:	cmp    al,0x3d
1004bd1d:	je     0x1004bd20
1004bd1f:	inc    edi
1004bd20:	push   esi
1004bd21:	call   0x10043250
1004bd26:	pop    ecx
1004bd27:	lea    esi,[esi+eax*1+0x1]
1004bd2b:	mov    al,BYTE PTR [esi]
1004bd2d:	cmp    al,bl
1004bd2f:	jne    0x1004bd1b
1004bd31:	push   0x4
1004bd33:	inc    edi
1004bd34:	push   edi
1004bd35:	call   0x10047702
1004bd3a:	mov    edi,eax
1004bd3c:	cmp    edi,ebx
1004bd3e:	pop    ecx
1004bd3f:	pop    ecx
1004bd40:	mov    DWORD PTR ds:0x1007fe08,edi
1004bd46:	je     0x1004bd13
1004bd48:	mov    esi,DWORD PTR ds:0x1007fa98
1004bd4e:	push   ebp
1004bd4f:	jmp    0x1004bd91
1004bd51:	push   esi
1004bd52:	call   0x10043250
1004bd57:	mov    ebp,eax
1004bd59:	inc    ebp
1004bd5a:	cmp    BYTE PTR [esi],0x3d
1004bd5d:	pop    ecx
1004bd5e:	je     0x1004bd8f
1004bd60:	push   0x1
1004bd62:	push   ebp
1004bd63:	call   0x10047702
1004bd68:	cmp    eax,ebx
1004bd6a:	pop    ecx
1004bd6b:	pop    ecx
1004bd6c:	mov    DWORD PTR [edi],eax
1004bd6e:	je     0x1004bdba
1004bd70:	push   esi
1004bd71:	push   ebp
1004bd72:	push   eax
1004bd73:	call   0x10046e39
1004bd78:	add    esp,0xc
1004bd7b:	test   eax,eax
1004bd7d:	je     0x1004bd8c
1004bd7f:	push   ebx
1004bd80:	push   ebx
1004bd81:	push   ebx
1004bd82:	push   ebx
1004bd83:	push   ebx
1004bd84:	call   0x100434d0
1004bd89:	add    esp,0x14
1004bd8c:	add    edi,0x4
1004bd8f:	add    esi,ebp
1004bd91:	cmp    BYTE PTR [esi],bl
1004bd93:	jne    0x1004bd51
1004bd95:	push   DWORD PTR ds:0x1007fa98
1004bd9b:	call   0x10043748
1004bda0:	mov    DWORD PTR ds:0x1007fa98,ebx
1004bda6:	mov    DWORD PTR [edi],ebx
1004bda8:	mov    DWORD PTR ds:0x100825a8,0x1
1004bdb2:	xor    eax,eax
1004bdb4:	pop    ecx
1004bdb5:	pop    ebp
1004bdb6:	pop    edi
1004bdb7:	pop    esi
1004bdb8:	pop    ebx
1004bdb9:	ret    
1004bdba:	push   DWORD PTR ds:0x1007fe08
1004bdc0:	call   0x10043748
1004bdc5:	mov    DWORD PTR ds:0x1007fe08,ebx
1004bdcb:	or     eax,0xffffffff
1004bdce:	jmp    0x1004bdb4
1004bdd0:	push   ebp
1004bdd1:	mov    ebp,esp
1004bdd3:	push   ecx
1004bdd4:	mov    ecx,DWORD PTR [ebp+0x10]
1004bdd7:	push   ebx
1004bdd8:	xor    eax,eax
1004bdda:	cmp    DWORD PTR [ebp+0x8],eax
1004bddd:	push   esi
1004bdde:	mov    DWORD PTR [edi],eax
1004bde0:	mov    esi,edx
1004bde2:	mov    edx,DWORD PTR [ebp+0xc]
1004bde5:	mov    DWORD PTR [ecx],0x1
1004bdeb:	je     0x1004bdf6
1004bded:	mov    ebx,DWORD PTR [ebp+0x8]
1004bdf0:	add    DWORD PTR [ebp+0x8],0x4
1004bdf4:	mov    DWORD PTR [ebx],edx
1004bdf6:	mov    DWORD PTR [ebp-0x4],eax
1004bdf9:	cmp    BYTE PTR [esi],0x22
1004bdfc:	jne    0x1004be0e
1004bdfe:	xor    eax,eax
1004be00:	cmp    DWORD PTR [ebp-0x4],eax
1004be03:	mov    bl,0x22
1004be05:	sete   al
1004be08:	inc    esi
1004be09:	mov    DWORD PTR [ebp-0x4],eax
1004be0c:	jmp    0x1004be4a
1004be0e:	inc    DWORD PTR [edi]
1004be10:	test   edx,edx
1004be12:	je     0x1004be1c
1004be14:	mov    al,BYTE PTR [esi]
1004be16:	mov    BYTE PTR [edx],al
1004be18:	inc    edx
1004be19:	mov    DWORD PTR [ebp+0xc],edx
1004be1c:	mov    bl,BYTE PTR [esi]
1004be1e:	movzx  eax,bl
1004be21:	push   eax
1004be22:	inc    esi
1004be23:	call   0x1004f9a0
1004be28:	test   eax,eax
1004be2a:	pop    ecx
1004be2b:	je     0x1004be40
1004be2d:	inc    DWORD PTR [edi]
1004be2f:	cmp    DWORD PTR [ebp+0xc],0x0
1004be33:	je     0x1004be3f
1004be35:	mov    ecx,DWORD PTR [ebp+0xc]
1004be38:	mov    al,BYTE PTR [esi]
1004be3a:	inc    DWORD PTR [ebp+0xc]
1004be3d:	mov    BYTE PTR [ecx],al
1004be3f:	inc    esi
1004be40:	test   bl,bl
1004be42:	mov    edx,DWORD PTR [ebp+0xc]
1004be45:	mov    ecx,DWORD PTR [ebp+0x10]
1004be48:	je     0x1004be7c
1004be4a:	cmp    DWORD PTR [ebp-0x4],0x0
1004be4e:	jne    0x1004bdf9
1004be50:	cmp    bl,0x20
1004be53:	je     0x1004be5a
1004be55:	cmp    bl,0x9
1004be58:	jne    0x1004bdf9
1004be5a:	test   edx,edx
1004be5c:	je     0x1004be62
1004be5e:	mov    BYTE PTR [edx-0x1],0x0
1004be62:	and    DWORD PTR [ebp-0x4],0x0
1004be66:	cmp    BYTE PTR [esi],0x0
1004be69:	je     0x1004bf58
1004be6f:	mov    al,BYTE PTR [esi]
1004be71:	cmp    al,0x20
1004be73:	je     0x1004be79
1004be75:	cmp    al,0x9
1004be77:	jne    0x1004be7f
1004be79:	inc    esi
1004be7a:	jmp    0x1004be6f
1004be7c:	dec    esi
1004be7d:	jmp    0x1004be62
1004be7f:	cmp    BYTE PTR [esi],0x0
1004be82:	je     0x1004bf58
1004be88:	cmp    DWORD PTR [ebp+0x8],0x0
1004be8c:	je     0x1004be97
1004be8e:	mov    eax,DWORD PTR [ebp+0x8]
1004be91:	add    DWORD PTR [ebp+0x8],0x4
1004be95:	mov    DWORD PTR [eax],edx
1004be97:	inc    DWORD PTR [ecx]
1004be99:	xor    ebx,ebx
1004be9b:	inc    ebx
1004be9c:	xor    ecx,ecx
1004be9e:	jmp    0x1004bea2
1004bea0:	inc    esi
1004bea1:	inc    ecx
1004bea2:	cmp    BYTE PTR [esi],0x5c
1004bea5:	je     0x1004bea0
1004bea7:	cmp    BYTE PTR [esi],0x22
1004beaa:	jne    0x1004bed2
1004beac:	test   cl,0x1
1004beaf:	jne    0x1004bed0
1004beb1:	cmp    DWORD PTR [ebp-0x4],0x0
1004beb5:	je     0x1004bec3
1004beb7:	lea    eax,[esi+0x1]
1004beba:	cmp    BYTE PTR [eax],0x22
1004bebd:	jne    0x1004bec3
1004bebf:	mov    esi,eax
1004bec1:	jmp    0x1004bed0
1004bec3:	xor    eax,eax
1004bec5:	xor    ebx,ebx
1004bec7:	cmp    DWORD PTR [ebp-0x4],eax
1004beca:	sete   al
1004becd:	mov    DWORD PTR [ebp-0x4],eax
1004bed0:	shr    ecx,1
1004bed2:	test   ecx,ecx
1004bed4:	je     0x1004bee8
1004bed6:	dec    ecx
1004bed7:	test   edx,edx
1004bed9:	je     0x1004bedf
1004bedb:	mov    BYTE PTR [edx],0x5c
1004bede:	inc    edx
1004bedf:	inc    DWORD PTR [edi]
1004bee1:	test   ecx,ecx
1004bee3:	jne    0x1004bed6
1004bee5:	mov    DWORD PTR [ebp+0xc],edx
1004bee8:	mov    al,BYTE PTR [esi]
1004beea:	test   al,al
1004beec:	je     0x1004bf43
1004beee:	cmp    DWORD PTR [ebp-0x4],0x0
1004bef2:	jne    0x1004befc
1004bef4:	cmp    al,0x20
1004bef6:	je     0x1004bf43
1004bef8:	cmp    al,0x9
1004befa:	je     0x1004bf43
1004befc:	test   ebx,ebx
1004befe:	je     0x1004bf3d
1004bf00:	test   edx,edx
1004bf02:	movsx  eax,al
1004bf05:	push   eax
1004bf06:	je     0x1004bf2b
1004bf08:	call   0x1004f9a0
1004bf0d:	test   eax,eax
1004bf0f:	pop    ecx
1004bf10:	je     0x1004bf1f
1004bf12:	mov    al,BYTE PTR [esi]
1004bf14:	mov    ecx,DWORD PTR [ebp+0xc]
1004bf17:	inc    DWORD PTR [ebp+0xc]
1004bf1a:	mov    BYTE PTR [ecx],al
1004bf1c:	inc    esi
1004bf1d:	inc    DWORD PTR [edi]
1004bf1f:	mov    ecx,DWORD PTR [ebp+0xc]
1004bf22:	mov    al,BYTE PTR [esi]
1004bf24:	inc    DWORD PTR [ebp+0xc]
1004bf27:	mov    BYTE PTR [ecx],al
1004bf29:	jmp    0x1004bf38
1004bf2b:	call   0x1004f9a0
1004bf30:	test   eax,eax
1004bf32:	pop    ecx
1004bf33:	je     0x1004bf38
1004bf35:	inc    esi
1004bf36:	inc    DWORD PTR [edi]
1004bf38:	inc    DWORD PTR [edi]
1004bf3a:	mov    edx,DWORD PTR [ebp+0xc]
1004bf3d:	inc    esi
1004bf3e:	jmp    0x1004be99
1004bf43:	test   edx,edx
1004bf45:	je     0x1004bf4e
1004bf47:	mov    BYTE PTR [edx],0x0
1004bf4a:	inc    edx
1004bf4b:	mov    DWORD PTR [ebp+0xc],edx
1004bf4e:	inc    DWORD PTR [edi]
1004bf50:	mov    ecx,DWORD PTR [ebp+0x10]
1004bf53:	jmp    0x1004be66
1004bf58:	mov    eax,DWORD PTR [ebp+0x8]
1004bf5b:	test   eax,eax
1004bf5d:	pop    esi
1004bf5e:	pop    ebx
1004bf5f:	je     0x1004bf64
1004bf61:	and    DWORD PTR [eax],0x0
1004bf64:	inc    DWORD PTR [ecx]
1004bf66:	leave  
1004bf67:	ret    
1004bf68:	push   ebp
1004bf69:	mov    ebp,esp
1004bf6b:	sub    esp,0xc
1004bf6e:	push   ebx
1004bf6f:	xor    ebx,ebx
1004bf71:	cmp    DWORD PTR ds:0x100825b4,ebx
1004bf77:	push   esi
1004bf78:	push   edi
1004bf79:	jne    0x1004bf80
1004bf7b:	call   0x1004a89a
1004bf80:	push   0x104
1004bf85:	mov    esi,0x10080300
1004bf8a:	push   esi
1004bf8b:	push   ebx
1004bf8c:	mov    BYTE PTR ds:0x10080404,bl
1004bf92:	call   DWORD PTR ds:0x100661d8
1004bf98:	mov    eax,ds:0x100825bc
1004bf9d:	cmp    eax,ebx
1004bf9f:	mov    DWORD PTR ds:0x1007fe18,esi
1004bfa5:	je     0x1004bfae
1004bfa7:	cmp    BYTE PTR [eax],bl
1004bfa9:	mov    DWORD PTR [ebp-0x4],eax
1004bfac:	jne    0x1004bfb1
1004bfae:	mov    DWORD PTR [ebp-0x4],esi
1004bfb1:	mov    edx,DWORD PTR [ebp-0x4]
1004bfb4:	lea    eax,[ebp-0x8]
1004bfb7:	push   eax
1004bfb8:	push   ebx
1004bfb9:	push   ebx
1004bfba:	lea    edi,[ebp-0xc]
1004bfbd:	call   0x1004bdd0
1004bfc2:	mov    eax,DWORD PTR [ebp-0x8]
1004bfc5:	add    esp,0xc
1004bfc8:	cmp    eax,0x3fffffff
1004bfcd:	jae    0x1004c019
1004bfcf:	mov    ecx,DWORD PTR [ebp-0xc]
1004bfd2:	cmp    ecx,0xffffffff
1004bfd5:	jae    0x1004c019
1004bfd7:	mov    edi,eax
1004bfd9:	shl    edi,0x2
1004bfdc:	lea    eax,[edi+ecx*1]
1004bfdf:	cmp    eax,ecx
1004bfe1:	jb     0x1004c019
1004bfe3:	push   eax
1004bfe4:	call   0x100476c2
1004bfe9:	mov    esi,eax
1004bfeb:	cmp    esi,ebx
1004bfed:	pop    ecx
1004bfee:	je     0x1004c019
1004bff0:	mov    edx,DWORD PTR [ebp-0x4]
1004bff3:	lea    eax,[ebp-0x8]
1004bff6:	push   eax
1004bff7:	add    edi,esi
1004bff9:	push   edi
1004bffa:	push   esi
1004bffb:	lea    edi,[ebp-0xc]
1004bffe:	call   0x1004bdd0
1004c003:	mov    eax,DWORD PTR [ebp-0x8]
1004c006:	add    esp,0xc
1004c009:	dec    eax
1004c00a:	mov    ds:0x1007fdfc,eax
1004c00f:	mov    DWORD PTR ds:0x1007fe00,esi
1004c015:	xor    eax,eax
1004c017:	jmp    0x1004c01c
1004c019:	or     eax,0xffffffff
1004c01c:	pop    edi
1004c01d:	pop    esi
1004c01e:	pop    ebx
1004c01f:	leave  
1004c020:	ret    
1004c021:	push   ecx
1004c022:	push   ecx
1004c023:	mov    eax,ds:0x10080408
1004c028:	push   ebx
1004c029:	push   ebp
1004c02a:	push   esi
1004c02b:	push   edi
1004c02c:	mov    edi,DWORD PTR ds:0x10066208
1004c032:	xor    ebx,ebx
1004c034:	xor    esi,esi
1004c036:	cmp    eax,ebx
1004c038:	push   0x2
1004c03a:	pop    ebp
1004c03b:	jne    0x1004c06a
1004c03d:	call   edi
1004c03f:	mov    esi,eax
1004c041:	cmp    esi,ebx
1004c043:	je     0x1004c051
1004c045:	mov    DWORD PTR ds:0x10080408,0x1
1004c04f:	jmp    0x1004c073
1004c051:	call   DWORD PTR ds:0x100660cc
1004c057:	cmp    eax,0x78
1004c05a:	jne    0x1004c065
1004c05c:	mov    eax,ebp
1004c05e:	mov    ds:0x10080408,eax
1004c063:	jmp    0x1004c06a
1004c065:	mov    eax,ds:0x10080408
1004c06a:	cmp    eax,0x1
1004c06d:	jne    0x1004c0f7
1004c073:	cmp    esi,ebx
1004c075:	jne    0x1004c086
1004c077:	call   edi
1004c079:	mov    esi,eax
1004c07b:	cmp    esi,ebx
1004c07d:	jne    0x1004c086
1004c07f:	xor    eax,eax
1004c081:	jmp    0x1004c14f
1004c086:	cmp    WORD PTR [esi],bx
1004c089:	mov    eax,esi
1004c08b:	je     0x1004c09b
1004c08d:	add    eax,ebp
1004c08f:	cmp    WORD PTR [eax],bx
1004c092:	jne    0x1004c08d
1004c094:	add    eax,ebp
1004c096:	cmp    WORD PTR [eax],bx
1004c099:	jne    0x1004c08d
1004c09b:	mov    edi,DWORD PTR ds:0x100660b8
1004c0a1:	push   ebx
1004c0a2:	push   ebx
1004c0a3:	push   ebx
1004c0a4:	sub    eax,esi
1004c0a6:	push   ebx
1004c0a7:	sar    eax,1
1004c0a9:	inc    eax
1004c0aa:	push   eax
1004c0ab:	push   esi
1004c0ac:	push   ebx
1004c0ad:	push   ebx
1004c0ae:	mov    DWORD PTR [esp+0x34],eax
1004c0b2:	call   edi
1004c0b4:	mov    ebp,eax
1004c0b6:	cmp    ebp,ebx
1004c0b8:	je     0x1004c0ec
1004c0ba:	push   ebp
1004c0bb:	call   0x100476c2
1004c0c0:	cmp    eax,ebx
1004c0c2:	pop    ecx
1004c0c3:	mov    DWORD PTR [esp+0x10],eax
1004c0c7:	je     0x1004c0ec
1004c0c9:	push   ebx
1004c0ca:	push   ebx
1004c0cb:	push   ebp
1004c0cc:	push   eax
1004c0cd:	push   DWORD PTR [esp+0x24]
1004c0d1:	push   esi
1004c0d2:	push   ebx
1004c0d3:	push   ebx
1004c0d4:	call   edi
1004c0d6:	test   eax,eax
1004c0d8:	jne    0x1004c0e8
1004c0da:	push   DWORD PTR [esp+0x10]
1004c0de:	call   0x10043748
1004c0e3:	pop    ecx
1004c0e4:	mov    DWORD PTR [esp+0x10],ebx
1004c0e8:	mov    ebx,DWORD PTR [esp+0x10]
1004c0ec:	push   esi
1004c0ed:	call   DWORD PTR ds:0x10066204
1004c0f3:	mov    eax,ebx
1004c0f5:	jmp    0x1004c14f
1004c0f7:	cmp    eax,ebp
1004c0f9:	je     0x1004c0ff
1004c0fb:	cmp    eax,ebx
1004c0fd:	jne    0x1004c07f
1004c0ff:	call   DWORD PTR ds:0x10066200
1004c105:	mov    esi,eax
1004c107:	cmp    esi,ebx
1004c109:	je     0x1004c07f
1004c10f:	cmp    BYTE PTR [esi],bl
1004c111:	je     0x1004c11d
1004c113:	inc    eax
1004c114:	cmp    BYTE PTR [eax],bl
1004c116:	jne    0x1004c113
1004c118:	inc    eax
1004c119:	cmp    BYTE PTR [eax],bl
1004c11b:	jne    0x1004c113
1004c11d:	sub    eax,esi
1004c11f:	inc    eax
1004c120:	mov    ebp,eax
1004c122:	push   ebp
1004c123:	call   0x100476c2
1004c128:	mov    edi,eax
1004c12a:	cmp    edi,ebx
1004c12c:	pop    ecx
1004c12d:	jne    0x1004c13b
1004c12f:	push   esi
1004c130:	call   DWORD PTR ds:0x100661fc
1004c136:	jmp    0x1004c07f
1004c13b:	push   ebp
1004c13c:	push   esi
1004c13d:	push   edi
1004c13e:	call   0x10045420
1004c143:	add    esp,0xc
1004c146:	push   esi
1004c147:	call   DWORD PTR ds:0x100661fc
1004c14d:	mov    eax,edi
1004c14f:	pop    edi
1004c150:	pop    esi
1004c151:	pop    ebp
1004c152:	pop    ebx
1004c153:	pop    ecx
1004c154:	pop    ecx
1004c155:	ret    
1004c156:	push   esi
1004c157:	push   edi
1004c158:	mov    eax,0x10074634
1004c15d:	mov    edi,0x10074634
1004c162:	cmp    eax,edi
1004c164:	mov    esi,eax
1004c166:	jae    0x1004c177
1004c168:	mov    eax,DWORD PTR [esi]
1004c16a:	test   eax,eax
1004c16c:	je     0x1004c170
1004c16e:	call   eax
1004c170:	add    esi,0x4
1004c173:	cmp    esi,edi
1004c175:	jb     0x1004c168
1004c177:	pop    edi
1004c178:	pop    esi
1004c179:	ret    
1004c17a:	push   esi
1004c17b:	push   edi
1004c17c:	mov    eax,0x1007463c
1004c181:	mov    edi,0x1007463c
1004c186:	cmp    eax,edi
1004c188:	mov    esi,eax
1004c18a:	jae    0x1004c19b
1004c18c:	mov    eax,DWORD PTR [esi]
1004c18e:	test   eax,eax
1004c190:	je     0x1004c194
1004c192:	call   eax
1004c194:	add    esi,0x4
1004c197:	cmp    esi,edi
1004c199:	jb     0x1004c18c
1004c19b:	pop    edi
1004c19c:	pop    esi
1004c19d:	ret    
1004c19e:	push   ebp
1004c19f:	mov    ebp,esp
1004c1a1:	push   ecx
1004c1a2:	push   ecx
1004c1a3:	push   esi
1004c1a4:	call   0x10047319
1004c1a9:	mov    esi,eax
1004c1ab:	test   esi,esi
1004c1ad:	jne    0x1004c1bd
1004c1af:	push   DWORD PTR [ebp+0xc]
1004c1b2:	call   DWORD PTR ds:0x1006617c
1004c1b8:	jmp    0x1004c30a
1004c1bd:	mov    edx,DWORD PTR [esi+0x5c]
1004c1c0:	mov    eax,ds:0x1007ea7c
1004c1c5:	push   edi
1004c1c6:	mov    edi,DWORD PTR [ebp+0x8]
1004c1c9:	mov    ecx,edx
1004c1cb:	push   ebx
1004c1cc:	cmp    DWORD PTR [ecx],edi
1004c1ce:	je     0x1004c1de
1004c1d0:	mov    ebx,eax
1004c1d2:	imul   ebx,ebx,0xc
1004c1d5:	add    ecx,0xc
1004c1d8:	add    ebx,edx
1004c1da:	cmp    ecx,ebx
1004c1dc:	jb     0x1004c1cc
1004c1de:	imul   eax,eax,0xc
1004c1e1:	add    eax,edx
1004c1e3:	cmp    ecx,eax
1004c1e5:	jae    0x1004c1ef
1004c1e7:	cmp    DWORD PTR [ecx],edi
1004c1e9:	jne    0x1004c1ef
1004c1eb:	mov    eax,ecx
1004c1ed:	jmp    0x1004c1f1
1004c1ef:	xor    eax,eax
1004c1f1:	test   eax,eax
1004c1f3:	je     0x1004c1ff
1004c1f5:	mov    ebx,DWORD PTR [eax+0x8]
1004c1f8:	test   ebx,ebx
1004c1fa:	mov    DWORD PTR [ebp-0x4],ebx
1004c1fd:	jne    0x1004c20d
1004c1ff:	push   DWORD PTR [ebp+0xc]
1004c202:	call   DWORD PTR ds:0x1006617c
1004c208:	jmp    0x1004c308
1004c20d:	cmp    ebx,0x5
1004c210:	jne    0x1004c21e
1004c212:	and    DWORD PTR [eax+0x8],0x0
1004c216:	xor    eax,eax
1004c218:	inc    eax
1004c219:	jmp    0x1004c308
1004c21e:	cmp    ebx,0x1
1004c221:	je     0x1004c305
1004c227:	mov    ecx,DWORD PTR [esi+0x60]
1004c22a:	mov    DWORD PTR [ebp-0x8],ecx
1004c22d:	mov    ecx,DWORD PTR [ebp+0xc]
1004c230:	mov    DWORD PTR [esi+0x60],ecx
1004c233:	mov    ecx,DWORD PTR [eax+0x4]
1004c236:	cmp    ecx,0x8
1004c239:	jne    0x1004c2f7
1004c23f:	mov    ecx,DWORD PTR ds:0x1007ea70
1004c245:	mov    edi,DWORD PTR ds:0x1007ea74
1004c24b:	mov    edx,ecx
1004c24d:	add    edi,ecx
1004c24f:	cmp    edx,edi
1004c251:	jge    0x1004c277
1004c253:	imul   ecx,ecx,0xc
1004c256:	mov    edi,DWORD PTR [esi+0x5c]
1004c259:	and    DWORD PTR [ecx+edi*1+0x8],0x0
1004c25e:	mov    edi,DWORD PTR ds:0x1007ea70
1004c264:	mov    ebx,DWORD PTR ds:0x1007ea74
1004c26a:	inc    edx
1004c26b:	add    ebx,edi
1004c26d:	add    ecx,0xc
1004c270:	cmp    edx,ebx
1004c272:	jl     0x1004c256
1004c274:	mov    ebx,DWORD PTR [ebp-0x4]
1004c277:	mov    eax,DWORD PTR [eax]
1004c279:	cmp    eax,0xc000008e
1004c27e:	mov    edi,DWORD PTR [esi+0x64]
1004c281:	jne    0x1004c28c
1004c283:	mov    DWORD PTR [esi+0x64],0x83
1004c28a:	jmp    0x1004c2ea
1004c28c:	cmp    eax,0xc0000090
1004c291:	jne    0x1004c29c
1004c293:	mov    DWORD PTR [esi+0x64],0x81
1004c29a:	jmp    0x1004c2ea
1004c29c:	cmp    eax,0xc0000091
1004c2a1:	jne    0x1004c2ac
1004c2a3:	mov    DWORD PTR [esi+0x64],0x84
1004c2aa:	jmp    0x1004c2ea
1004c2ac:	cmp    eax,0xc0000093
1004c2b1:	jne    0x1004c2bc
1004c2b3:	mov    DWORD PTR [esi+0x64],0x85
1004c2ba:	jmp    0x1004c2ea
1004c2bc:	cmp    eax,0xc000008d
1004c2c1:	jne    0x1004c2cc
1004c2c3:	mov    DWORD PTR [esi+0x64],0x82
1004c2ca:	jmp    0x1004c2ea
1004c2cc:	cmp    eax,0xc000008f
1004c2d1:	jne    0x1004c2dc
1004c2d3:	mov    DWORD PTR [esi+0x64],0x86
1004c2da:	jmp    0x1004c2ea
1004c2dc:	cmp    eax,0xc0000092
1004c2e1:	jne    0x1004c2ea
1004c2e3:	mov    DWORD PTR [esi+0x64],0x8a
1004c2ea:	push   DWORD PTR [esi+0x64]
1004c2ed:	push   0x8
1004c2ef:	call   ebx
1004c2f1:	pop    ecx
1004c2f2:	mov    DWORD PTR [esi+0x64],edi
1004c2f5:	jmp    0x1004c2fe
1004c2f7:	and    DWORD PTR [eax+0x8],0x0
1004c2fb:	push   ecx
1004c2fc:	call   ebx
1004c2fe:	mov    eax,DWORD PTR [ebp-0x8]
1004c301:	pop    ecx
1004c302:	mov    DWORD PTR [esi+0x60],eax
1004c305:	or     eax,0xffffffff
1004c308:	pop    ebx
1004c309:	pop    edi
1004c30a:	pop    esi
1004c30b:	leave  
1004c30c:	ret    
1004c30d:	mov    eax,0xe06d7363
1004c312:	cmp    DWORD PTR [esp+0x4],eax
1004c316:	jne    0x1004c325
1004c318:	push   DWORD PTR [esp+0x8]
1004c31c:	push   eax
1004c31d:	call   0x1004c19e
1004c322:	pop    ecx
1004c323:	pop    ecx
1004c324:	ret    
1004c325:	xor    eax,eax
1004c327:	ret    
1004c328:	push   ebp
1004c329:	mov    ebp,esp
1004c32b:	sub    esp,0x10
1004c32e:	mov    eax,ds:0x1007e030
1004c333:	and    DWORD PTR [ebp-0x8],0x0
1004c337:	and    DWORD PTR [ebp-0x4],0x0
1004c33b:	push   ebx
1004c33c:	push   edi
1004c33d:	mov    edi,0xbb40e64e
1004c342:	cmp    eax,edi
1004c344:	mov    ebx,0xffff0000
1004c349:	je     0x1004c358
1004c34b:	test   ebx,eax
1004c34d:	je     0x1004c358
1004c34f:	not    eax
1004c351:	mov    ds:0x1007e034,eax
1004c356:	jmp    0x1004c3b8
1004c358:	push   esi
1004c359:	lea    eax,[ebp-0x8]
1004c35c:	push   eax
1004c35d:	call   DWORD PTR ds:0x10066214
1004c363:	mov    esi,DWORD PTR [ebp-0x4]
1004c366:	xor    esi,DWORD PTR [ebp-0x8]
1004c369:	call   DWORD PTR ds:0x10066210
1004c36f:	xor    esi,eax
1004c371:	call   DWORD PTR ds:0x10066160
1004c377:	xor    esi,eax
1004c379:	call   DWORD PTR ds:0x10066118
1004c37f:	xor    esi,eax
1004c381:	lea    eax,[ebp-0x10]
1004c384:	push   eax
1004c385:	call   DWORD PTR ds:0x1006620c
1004c38b:	mov    eax,DWORD PTR [ebp-0xc]
1004c38e:	xor    eax,DWORD PTR [ebp-0x10]
1004c391:	xor    esi,eax
1004c393:	cmp    esi,edi
1004c395:	jne    0x1004c39e
1004c397:	mov    esi,0xbb40e64f
1004c39c:	jmp    0x1004c3a9
1004c39e:	test   ebx,esi
1004c3a0:	jne    0x1004c3a9
1004c3a2:	mov    eax,esi
1004c3a4:	shl    eax,0x10
1004c3a7:	or     esi,eax
1004c3a9:	mov    DWORD PTR ds:0x1007e030,esi
1004c3af:	not    esi
1004c3b1:	mov    DWORD PTR ds:0x1007e034,esi
1004c3b7:	pop    esi
1004c3b8:	pop    edi
1004c3b9:	pop    ebx
1004c3ba:	leave  
1004c3bb:	ret    
1004c3bc:	push   ebx
1004c3bd:	push   esi
1004c3be:	push   edi
1004c3bf:	mov    edx,DWORD PTR [esp+0x10]
1004c3c3:	mov    eax,DWORD PTR [esp+0x14]
1004c3c7:	mov    ecx,DWORD PTR [esp+0x18]
1004c3cb:	push   ebp
1004c3cc:	push   edx
1004c3cd:	push   eax
1004c3ce:	push   ecx
1004c3cf:	push   ecx
1004c3d0:	push   0x1004c44c
1004c3d5:	push   DWORD PTR fs:0x0
1004c3dc:	mov    eax,ds:0x1007e030
1004c3e1:	xor    eax,esp
1004c3e3:	mov    DWORD PTR [esp+0x8],eax
1004c3e7:	mov    DWORD PTR fs:0x0,esp
1004c3ee:	mov    eax,DWORD PTR [esp+0x30]
1004c3f2:	mov    ebx,DWORD PTR [eax+0x8]
1004c3f5:	mov    ecx,DWORD PTR [esp+0x2c]
1004c3f9:	xor    ebx,DWORD PTR [ecx]
1004c3fb:	mov    esi,DWORD PTR [eax+0xc]
1004c3fe:	cmp    esi,0xfffffffe
1004c401:	je     0x1004c43e
1004c403:	mov    edx,DWORD PTR [esp+0x34]
1004c407:	cmp    edx,0xfffffffe
1004c40a:	je     0x1004c410
1004c40c:	cmp    esi,edx
1004c40e:	jbe    0x1004c43e
1004c410:	lea    esi,[esi+esi*2]
1004c413:	lea    ebx,[ebx+esi*4+0x10]
1004c417:	mov    ecx,DWORD PTR [ebx]
1004c419:	mov    DWORD PTR [eax+0xc],ecx
1004c41c:	cmp    DWORD PTR [ebx+0x4],0x0
1004c420:	jne    0x1004c3ee
1004c422:	push   0x101
1004c427:	mov    eax,DWORD PTR [ebx+0x8]
1004c42a:	call   0x1004fac9
1004c42f:	mov    ecx,0x1
1004c434:	mov    eax,DWORD PTR [ebx+0x8]
1004c437:	call   0x1004fae8
1004c43c:	jmp    0x1004c3ee
1004c43e:	pop    DWORD PTR fs:0x0
1004c445:	add    esp,0x18
1004c448:	pop    edi
1004c449:	pop    esi
1004c44a:	pop    ebx
1004c44b:	ret    
1004c44c:	mov    ecx,DWORD PTR [esp+0x4]
1004c450:	test   DWORD PTR [ecx+0x4],0x6
1004c457:	mov    eax,0x1
1004c45c:	je     0x1004c491
1004c45e:	mov    eax,DWORD PTR [esp+0x8]
1004c462:	mov    ecx,DWORD PTR [eax+0x8]
1004c465:	xor    ecx,eax
1004c467:	call   0x100430d7
1004c46c:	push   ebp
1004c46d:	mov    ebp,DWORD PTR [eax+0x18]
1004c470:	push   DWORD PTR [eax+0xc]
1004c473:	push   DWORD PTR [eax+0x10]
1004c476:	push   DWORD PTR [eax+0x14]
1004c479:	call   0x1004c3bc
1004c47e:	add    esp,0xc
1004c481:	pop    ebp
1004c482:	mov    eax,DWORD PTR [esp+0x8]
1004c486:	mov    edx,DWORD PTR [esp+0x10]
1004c48a:	mov    DWORD PTR [edx],eax
1004c48c:	mov    eax,0x3
1004c491:	ret    
1004c492:	push   ebp
1004c493:	mov    ecx,DWORD PTR [esp+0x8]
1004c497:	mov    ebp,DWORD PTR [ecx]
1004c499:	push   DWORD PTR [ecx+0x1c]
1004c49c:	push   DWORD PTR [ecx+0x18]
1004c49f:	push   DWORD PTR [ecx+0x28]
1004c4a2:	call   0x1004c3bc
1004c4a7:	add    esp,0xc
1004c4aa:	pop    ebp
1004c4ab:	ret    0x4
1004c4ae:	push   ebp
1004c4af:	push   esi
1004c4b0:	push   edi
1004c4b1:	push   ebx
1004c4b2:	mov    ebp,edx
1004c4b4:	xor    eax,eax
1004c4b6:	xor    ebx,ebx
1004c4b8:	xor    edx,edx
1004c4ba:	xor    esi,esi
1004c4bc:	xor    edi,edi
1004c4be:	call   ecx
1004c4c0:	pop    ebx
1004c4c1:	pop    edi
1004c4c2:	pop    esi
1004c4c3:	pop    ebp
1004c4c4:	ret    
1004c4c5:	mov    ebp,edx
1004c4c7:	mov    esi,ecx
1004c4c9:	mov    eax,ecx
1004c4cb:	push   0x1
1004c4cd:	call   0x1004fac9
1004c4d2:	xor    eax,eax
1004c4d4:	xor    ebx,ebx
1004c4d6:	xor    ecx,ecx
1004c4d8:	xor    edx,edx
1004c4da:	xor    edi,edi
1004c4dc:	jmp    esi
1004c4de:	push   ebp
1004c4df:	mov    ebp,esp
1004c4e1:	push   ebx
1004c4e2:	push   esi
1004c4e3:	push   edi
1004c4e4:	push   0x0
1004c4e6:	push   0x0
1004c4e8:	push   0x1004c4f3
1004c4ed:	push   ecx
1004c4ee:	call   0x10056d74
1004c4f3:	pop    edi
1004c4f4:	pop    esi
1004c4f5:	pop    ebx
1004c4f6:	pop    ebp
1004c4f7:	ret    
1004c4f8:	push   ebp
1004c4f9:	mov    ebp,DWORD PTR [esp+0x8]
1004c4fd:	push   edx
1004c4fe:	push   ecx
1004c4ff:	push   DWORD PTR [esp+0x14]
1004c503:	call   0x1004c3bc
1004c508:	add    esp,0xc
1004c50b:	pop    ebp
1004c50c:	ret    0x8
1004c50f:	int3   
1004c510:	mov    ecx,DWORD PTR [esp+0x4]
1004c514:	cmp    WORD PTR [ecx],0x5a4d
1004c519:	je     0x1004c51e
1004c51b:	xor    eax,eax
1004c51d:	ret    
1004c51e:	mov    eax,DWORD PTR [ecx+0x3c]
1004c521:	add    eax,ecx
1004c523:	cmp    DWORD PTR [eax],0x4550
1004c529:	jne    0x1004c51b
1004c52b:	xor    ecx,ecx
1004c52d:	cmp    WORD PTR [eax+0x18],0x10b
1004c533:	sete   cl
1004c536:	mov    eax,ecx
1004c538:	ret    
1004c539:	int3   
1004c53a:	int3   
1004c53b:	int3   
1004c53c:	int3   
1004c53d:	int3   
1004c53e:	int3   
1004c53f:	int3   
1004c540:	mov    eax,DWORD PTR [esp+0x4]
1004c544:	mov    ecx,DWORD PTR [eax+0x3c]
1004c547:	add    ecx,eax
1004c549:	movzx  eax,WORD PTR [ecx+0x14]
1004c54d:	push   ebx
1004c54e:	push   esi
1004c54f:	movzx  esi,WORD PTR [ecx+0x6]
1004c553:	xor    edx,edx
1004c555:	test   esi,esi
1004c557:	push   edi
1004c558:	lea    eax,[eax+ecx*1+0x18]
1004c55c:	jbe    0x1004c57c
1004c55e:	mov    edi,DWORD PTR [esp+0x14]
1004c562:	mov    ecx,DWORD PTR [eax+0xc]
1004c565:	cmp    edi,ecx
1004c567:	jb     0x1004c572
1004c569:	mov    ebx,DWORD PTR [eax+0x8]
1004c56c:	add    ebx,ecx
1004c56e:	cmp    edi,ebx
1004c570:	jb     0x1004c57e
1004c572:	add    edx,0x1
1004c575:	add    eax,0x28
1004c578:	cmp    edx,esi
1004c57a:	jb     0x1004c562
1004c57c:	xor    eax,eax
1004c57e:	pop    edi
1004c57f:	pop    esi
1004c580:	pop    ebx
1004c581:	ret    
1004c582:	push   0x8
1004c584:	push   0x100748e8
1004c589:	call   0x10046f34
1004c58e:	and    DWORD PTR [ebp-0x4],0x0
1004c592:	mov    edx,0x10000000
1004c597:	push   edx
1004c598:	call   0x1004c510
1004c59d:	pop    ecx
1004c59e:	test   eax,eax
1004c5a0:	je     0x1004c5df
1004c5a2:	mov    eax,DWORD PTR [ebp+0x8]
1004c5a5:	sub    eax,edx
1004c5a7:	push   eax
1004c5a8:	push   edx
1004c5a9:	call   0x1004c540
1004c5ae:	pop    ecx
1004c5af:	pop    ecx
1004c5b0:	test   eax,eax
1004c5b2:	je     0x1004c5df
1004c5b4:	mov    eax,DWORD PTR [eax+0x24]
1004c5b7:	shr    eax,0x1f
1004c5ba:	not    eax
1004c5bc:	and    eax,0x1
1004c5bf:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1004c5c6:	jmp    0x1004c5e8
1004c5c8:	mov    eax,DWORD PTR [ebp-0x14]
1004c5cb:	mov    eax,DWORD PTR [eax]
1004c5cd:	mov    eax,DWORD PTR [eax]
1004c5cf:	xor    ecx,ecx
1004c5d1:	cmp    eax,0xc0000005
1004c5d6:	sete   cl
1004c5d9:	mov    eax,ecx
1004c5db:	ret    
1004c5dc:	mov    esp,DWORD PTR [ebp-0x18]
1004c5df:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1004c5e6:	xor    eax,eax
1004c5e8:	call   0x10046f79
1004c5ed:	ret    
1004c5ee:	push   esi
1004c5ef:	push   edi
1004c5f0:	xor    edi,edi
1004c5f2:	lea    esi,[edi+0x1007ea80]
1004c5f8:	push   DWORD PTR [esi]
1004c5fa:	call   0x10047126
1004c5ff:	add    edi,0x4
1004c602:	cmp    edi,0x28
1004c605:	pop    ecx
1004c606:	mov    DWORD PTR [esi],eax
1004c608:	jb     0x1004c5f2
1004c60a:	pop    edi
1004c60b:	pop    esi
1004c60c:	ret    
1004c60d:	mov    eax,DWORD PTR [esp+0x4]
1004c611:	mov    ds:0x1008040c,eax
1004c616:	mov    ds:0x10080410,eax
1004c61b:	mov    ds:0x10080414,eax
1004c620:	mov    ds:0x10080418,eax
1004c625:	ret    
1004c626:	mov    eax,DWORD PTR [esp+0x4]
1004c62a:	mov    ecx,DWORD PTR ds:0x1007ea7c
1004c630:	push   esi
1004c631:	cmp    DWORD PTR [eax+0x4],edx
1004c634:	je     0x1004c646
1004c636:	mov    esi,ecx
1004c638:	imul   esi,esi,0xc
1004c63b:	add    esi,DWORD PTR [esp+0x8]
1004c63f:	add    eax,0xc
1004c642:	cmp    eax,esi
1004c644:	jb     0x1004c631
1004c646:	imul   ecx,ecx,0xc
1004c649:	add    ecx,DWORD PTR [esp+0x8]
1004c64d:	pop    esi
1004c64e:	cmp    eax,ecx
1004c650:	jae    0x1004c657
1004c652:	cmp    DWORD PTR [eax+0x4],edx
1004c655:	je     0x1004c659
1004c657:	xor    eax,eax
1004c659:	ret    
1004c65a:	push   DWORD PTR ds:0x10080414
1004c660:	call   0x10047192
1004c665:	pop    ecx
1004c666:	ret    
1004c667:	push   0x20
1004c669:	push   0x10074908
1004c66e:	call   0x10046f34
1004c673:	xor    edi,edi
1004c675:	mov    DWORD PTR [ebp-0x1c],edi
1004c678:	mov    DWORD PTR [ebp-0x28],edi
1004c67b:	mov    ebx,DWORD PTR [ebp+0x8]
1004c67e:	cmp    ebx,0xb
1004c681:	jg     0x1004c6cf
1004c683:	je     0x1004c69a
1004c685:	mov    eax,ebx
1004c687:	push   0x2
1004c689:	pop    ecx
1004c68a:	sub    eax,ecx
1004c68c:	je     0x1004c6b0
1004c68e:	sub    eax,ecx
1004c690:	je     0x1004c69a
1004c692:	sub    eax,ecx
1004c694:	je     0x1004c6fa
1004c696:	sub    eax,ecx
1004c698:	jne    0x1004c6de
1004c69a:	call   0x10047319
1004c69f:	mov    edi,eax
1004c6a1:	mov    DWORD PTR [ebp-0x28],edi
1004c6a4:	test   edi,edi
1004c6a6:	jne    0x1004c6bc
1004c6a8:	or     eax,0xffffffff
1004c6ab:	jmp    0x1004c811
1004c6b0:	mov    esi,0x1008040c
1004c6b5:	mov    eax,ds:0x1008040c
1004c6ba:	jmp    0x1004c71c
1004c6bc:	push   DWORD PTR [edi+0x5c]
1004c6bf:	mov    edx,ebx
1004c6c1:	call   0x1004c626
1004c6c6:	mov    esi,eax
1004c6c8:	add    esi,0x8
1004c6cb:	mov    eax,DWORD PTR [esi]
1004c6cd:	jmp    0x1004c729
1004c6cf:	mov    eax,ebx
1004c6d1:	sub    eax,0xf
1004c6d4:	je     0x1004c712
1004c6d6:	sub    eax,0x6
1004c6d9:	je     0x1004c706
1004c6db:	dec    eax
1004c6dc:	je     0x1004c6fa
1004c6de:	call   0x10046df5
1004c6e3:	mov    DWORD PTR [eax],0x16
1004c6e9:	xor    eax,eax
1004c6eb:	push   eax
1004c6ec:	push   eax
1004c6ed:	push   eax
1004c6ee:	push   eax
1004c6ef:	push   eax
1004c6f0:	call   0x100435cc
1004c6f5:	add    esp,0x14
1004c6f8:	jmp    0x1004c6a8
1004c6fa:	mov    esi,0x10080414
1004c6ff:	mov    eax,ds:0x10080414
1004c704:	jmp    0x1004c71c
1004c706:	mov    esi,0x10080410
1004c70b:	mov    eax,ds:0x10080410
1004c710:	jmp    0x1004c71c
1004c712:	mov    esi,0x10080418
1004c717:	mov    eax,ds:0x10080418
1004c71c:	mov    DWORD PTR [ebp-0x1c],0x1
1004c723:	push   eax
1004c724:	call   0x10047192
1004c729:	mov    DWORD PTR [ebp-0x20],eax
1004c72c:	pop    ecx
1004c72d:	xor    eax,eax
1004c72f:	cmp    DWORD PTR [ebp-0x20],0x1
1004c733:	je     0x1004c811
1004c739:	cmp    DWORD PTR [ebp-0x20],eax
1004c73c:	jne    0x1004c745
1004c73e:	push   0x3
1004c740:	call   0x10047ab4
1004c745:	cmp    DWORD PTR [ebp-0x1c],eax
1004c748:	je     0x1004c751
1004c74a:	push   eax
1004c74b:	call   0x10047f3d
1004c750:	pop    ecx
1004c751:	xor    eax,eax
1004c753:	mov    DWORD PTR [ebp-0x4],eax
1004c756:	cmp    ebx,0x8
1004c759:	je     0x1004c765
1004c75b:	cmp    ebx,0xb
1004c75e:	je     0x1004c765
1004c760:	cmp    ebx,0x4
1004c763:	jne    0x1004c780
1004c765:	mov    ecx,DWORD PTR [edi+0x60]
1004c768:	mov    DWORD PTR [ebp-0x2c],ecx
1004c76b:	mov    DWORD PTR [edi+0x60],eax
1004c76e:	cmp    ebx,0x8
1004c771:	jne    0x1004c7b3
1004c773:	mov    ecx,DWORD PTR [edi+0x64]
1004c776:	mov    DWORD PTR [ebp-0x30],ecx
1004c779:	mov    DWORD PTR [edi+0x64],0x8c
1004c780:	cmp    ebx,0x8
1004c783:	jne    0x1004c7b3
1004c785:	mov    ecx,DWORD PTR ds:0x1007ea70
1004c78b:	mov    DWORD PTR [ebp-0x24],ecx
1004c78e:	mov    ecx,DWORD PTR ds:0x1007ea74
1004c794:	mov    edx,DWORD PTR ds:0x1007ea70
1004c79a:	add    ecx,edx
1004c79c:	cmp    DWORD PTR [ebp-0x24],ecx
1004c79f:	jge    0x1004c7ba
1004c7a1:	mov    ecx,DWORD PTR [ebp-0x24]
1004c7a4:	imul   ecx,ecx,0xc
1004c7a7:	mov    edx,DWORD PTR [edi+0x5c]
1004c7aa:	mov    DWORD PTR [ecx+edx*1+0x8],eax
1004c7ae:	inc    DWORD PTR [ebp-0x24]
1004c7b1:	jmp    0x1004c78e
1004c7b3:	call   0x10047189
1004c7b8:	mov    DWORD PTR [esi],eax
1004c7ba:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1004c7c1:	call   0x1004c7db
1004c7c6:	cmp    ebx,0x8
1004c7c9:	jne    0x1004c7ea
1004c7cb:	push   DWORD PTR [edi+0x64]
1004c7ce:	push   ebx
1004c7cf:	call   DWORD PTR [ebp-0x20]
1004c7d2:	pop    ecx
1004c7d3:	jmp    0x1004c7ee
1004c7d5:	mov    ebx,DWORD PTR [ebp+0x8]
1004c7d8:	mov    edi,DWORD PTR [ebp-0x28]
1004c7db:	cmp    DWORD PTR [ebp-0x1c],0x0
1004c7df:	je     0x1004c7e9
1004c7e1:	push   0x0
1004c7e3:	call   0x10047e65
1004c7e8:	pop    ecx
1004c7e9:	ret    
1004c7ea:	push   ebx
1004c7eb:	call   DWORD PTR [ebp-0x20]
1004c7ee:	pop    ecx
1004c7ef:	cmp    ebx,0x8
1004c7f2:	je     0x1004c7fe
1004c7f4:	cmp    ebx,0xb
1004c7f7:	je     0x1004c7fe
1004c7f9:	cmp    ebx,0x4
1004c7fc:	jne    0x1004c80f
1004c7fe:	mov    eax,DWORD PTR [ebp-0x2c]
1004c801:	mov    DWORD PTR [edi+0x60],eax
1004c804:	cmp    ebx,0x8
1004c807:	jne    0x1004c80f
1004c809:	mov    eax,DWORD PTR [ebp-0x30]
1004c80c:	mov    DWORD PTR [edi+0x64],eax
1004c80f:	xor    eax,eax
1004c811:	call   0x10046f79
1004c816:	ret    
1004c817:	mov    eax,DWORD PTR [esp+0x4]
1004c81b:	mov    ds:0x10080420,eax
1004c820:	ret    
1004c821:	mov    eax,DWORD PTR [esp+0x4]
1004c825:	mov    ds:0x10080424,eax
1004c82a:	ret    
1004c82b:	push   DWORD PTR [esp+0x4]
1004c82f:	call   DWORD PTR ds:0x1006611c
1004c835:	xor    eax,eax
1004c837:	inc    eax
1004c838:	ret    0x8
1004c83b:	push   0x14
1004c83d:	push   0x10074928
1004c842:	call   0x10046f34
1004c847:	xor    edi,edi
1004c849:	mov    DWORD PTR [ebp-0x1c],edi
1004c84c:	push   DWORD PTR ds:0x10080424
1004c852:	call   0x10047192
1004c857:	pop    ecx
1004c858:	mov    esi,eax
1004c85a:	cmp    esi,edi
1004c85c:	jne    0x1004c8b1
1004c85e:	lea    eax,[ebp-0x1c]
1004c861:	push   eax
1004c862:	call   0x100478e1
1004c867:	pop    ecx
1004c868:	cmp    eax,edi
1004c86a:	je     0x1004c879
1004c86c:	push   edi
1004c86d:	push   edi
1004c86e:	push   edi
1004c86f:	push   edi
1004c870:	push   edi
1004c871:	call   0x100434d0
1004c876:	add    esp,0x14
1004c879:	cmp    DWORD PTR [ebp-0x1c],0x1
1004c87d:	je     0x1004c8a0
1004c87f:	push   0x1006f884
1004c884:	call   DWORD PTR ds:0x10066198
1004c88a:	cmp    eax,edi
1004c88c:	je     0x1004c8a0
1004c88e:	push   0x10066ccc
1004c893:	push   eax
1004c894:	call   DWORD PTR ds:0x1006612c
1004c89a:	mov    esi,eax
1004c89c:	cmp    esi,edi
1004c89e:	jne    0x1004c8a5
1004c8a0:	mov    esi,0x1004c82b
1004c8a5:	push   esi
1004c8a6:	call   0x10047126
1004c8ab:	pop    ecx
1004c8ac:	mov    ds:0x10080424,eax
1004c8b1:	mov    DWORD PTR [ebp-0x4],edi
1004c8b4:	push   DWORD PTR [ebp+0xc]
1004c8b7:	push   DWORD PTR [ebp+0x8]
1004c8ba:	call   esi
1004c8bc:	mov    DWORD PTR [ebp-0x20],eax
1004c8bf:	jmp    0x1004c8f0
1004c8c1:	mov    eax,DWORD PTR [ebp-0x14]
1004c8c4:	mov    eax,DWORD PTR [eax]
1004c8c6:	mov    eax,DWORD PTR [eax]
1004c8c8:	mov    DWORD PTR [ebp-0x24],eax
1004c8cb:	xor    ecx,ecx
1004c8cd:	cmp    eax,0xc0000017
1004c8d2:	sete   cl
1004c8d5:	mov    eax,ecx
1004c8d7:	ret    
1004c8d8:	mov    esp,DWORD PTR [ebp-0x18]
1004c8db:	cmp    DWORD PTR [ebp-0x24],0xc0000017
1004c8e2:	jne    0x1004c8ec
1004c8e4:	push   0x8
1004c8e6:	call   DWORD PTR ds:0x1006615c
1004c8ec:	and    DWORD PTR [ebp-0x20],0x0
1004c8f0:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1004c8f7:	mov    eax,DWORD PTR [ebp-0x20]
1004c8fa:	call   0x10046f79
1004c8ff:	ret    
1004c900:	push   edi
1004c901:	mov    edi,DWORD PTR [esp+0x8]
1004c905:	mov    eax,DWORD PTR [edi]
1004c907:	cmp    DWORD PTR [eax],0xe06d7363
1004c90d:	jne    0x1004c939
1004c90f:	cmp    DWORD PTR [eax+0x10],0x3
1004c913:	jne    0x1004c939
1004c915:	mov    eax,DWORD PTR [eax+0x14]
1004c918:	cmp    eax,0x19930520
1004c91d:	je     0x1004c934
1004c91f:	cmp    eax,0x19930521
1004c924:	je     0x1004c934
1004c926:	cmp    eax,0x19930522
1004c92b:	je     0x1004c934
1004c92d:	cmp    eax,0x1994000
1004c932:	jne    0x1004c939
1004c934:	call   0x10046e9e
1004c939:	cmp    BYTE PTR ds:0x10080468,0x0
1004c940:	push   esi
1004c941:	je     0x1004c965
1004c943:	push   DWORD PTR ds:0x10080464
1004c949:	call   0x10047192
1004c94e:	mov    esi,eax
1004c950:	test   esi,esi
1004c952:	pop    ecx
1004c953:	je     0x1004c965
1004c955:	push   esi
1004c956:	call   0x1004faf4
1004c95b:	test   eax,eax
1004c95d:	pop    ecx
1004c95e:	je     0x1004c965
1004c960:	push   edi
1004c961:	call   esi
1004c963:	jmp    0x1004c967
1004c965:	xor    eax,eax
1004c967:	pop    esi
1004c968:	pop    edi
1004c969:	ret    0x4
1004c96c:	push   0x1004c900
1004c971:	call   DWORD PTR ds:0x10066180
1004c977:	push   eax
1004c978:	call   0x10047126
1004c97d:	mov    ds:0x10080464,eax
1004c982:	pop    ecx
1004c983:	mov    BYTE PTR ds:0x10080468,0x1
1004c98a:	xor    eax,eax
1004c98c:	ret    
1004c98d:	cmp    BYTE PTR ds:0x10080468,0x0
1004c994:	je     0x1004c9b0
1004c996:	push   DWORD PTR ds:0x10080464
1004c99c:	call   0x10047192
1004c9a1:	pop    ecx
1004c9a2:	push   eax
1004c9a3:	call   DWORD PTR ds:0x10066180
1004c9a9:	mov    BYTE PTR ds:0x10080468,0x0
1004c9b0:	ret    
1004c9b1:	push   ebp
1004c9b2:	mov    ebp,esp
1004c9b4:	push   ecx
1004c9b5:	push   ecx
1004c9b6:	mov    eax,DWORD PTR [ebp+0xc]
1004c9b9:	push   esi
1004c9ba:	mov    esi,DWORD PTR [ebp+0x8]
1004c9bd:	mov    DWORD PTR [ebp-0x8],eax
1004c9c0:	mov    eax,DWORD PTR [ebp+0x10]
1004c9c3:	push   edi
1004c9c4:	push   esi
1004c9c5:	mov    DWORD PTR [ebp-0x4],eax
1004c9c8:	call   0x1004fbff
1004c9cd:	or     edi,0xffffffff
1004c9d0:	cmp    eax,edi
1004c9d2:	pop    ecx
1004c9d3:	jne    0x1004c9e6
1004c9d5:	call   0x10046df5
1004c9da:	mov    DWORD PTR [eax],0x9
1004c9e0:	mov    eax,edi
1004c9e2:	mov    edx,edi
1004c9e4:	jmp    0x1004ca30
1004c9e6:	push   DWORD PTR [ebp+0x14]
1004c9e9:	lea    ecx,[ebp-0x4]
1004c9ec:	push   ecx
1004c9ed:	push   DWORD PTR [ebp-0x8]
1004c9f0:	push   eax
1004c9f1:	call   DWORD PTR ds:0x10066224
1004c9f7:	cmp    eax,edi
1004c9f9:	mov    DWORD PTR [ebp-0x8],eax
1004c9fc:	jne    0x1004ca11
1004c9fe:	call   DWORD PTR ds:0x100660cc
1004ca04:	test   eax,eax
1004ca06:	je     0x1004ca11
1004ca08:	push   eax
1004ca09:	call   0x10046e1b
1004ca0e:	pop    ecx
1004ca0f:	jmp    0x1004c9e0
1004ca11:	mov    eax,esi
1004ca13:	and    esi,0x1f
1004ca16:	imul   esi,esi,0x28
1004ca19:	sar    eax,0x5
1004ca1c:	mov    eax,DWORD PTR [eax*4+0x10082480]
1004ca23:	lea    eax,[eax+esi*1+0x4]
1004ca27:	and    BYTE PTR [eax],0xfd
1004ca2a:	mov    eax,DWORD PTR [ebp-0x8]
1004ca2d:	mov    edx,DWORD PTR [ebp-0x4]
1004ca30:	pop    edi
1004ca31:	pop    esi
1004ca32:	leave  
1004ca33:	ret    
1004ca34:	push   0x14
1004ca36:	push   0x10074948
1004ca3b:	call   0x10046f34
1004ca40:	or     esi,0xffffffff
1004ca43:	mov    DWORD PTR [ebp-0x24],esi
1004ca46:	mov    DWORD PTR [ebp-0x20],esi
1004ca49:	mov    eax,DWORD PTR [ebp+0x8]
1004ca4c:	cmp    eax,0xfffffffe
1004ca4f:	jne    0x1004ca6d
1004ca51:	call   0x10046e08
1004ca56:	and    DWORD PTR [eax],0x0
1004ca59:	call   0x10046df5
1004ca5e:	mov    DWORD PTR [eax],0x9
1004ca64:	mov    eax,esi
1004ca66:	mov    edx,esi
1004ca68:	jmp    0x1004cb3d
1004ca6d:	xor    edi,edi
1004ca6f:	cmp    eax,edi
1004ca71:	jl     0x1004ca7b
1004ca73:	cmp    eax,DWORD PTR ds:0x10082464
1004ca79:	jb     0x1004ca9c
1004ca7b:	call   0x10046e08
1004ca80:	mov    DWORD PTR [eax],edi
1004ca82:	call   0x10046df5
1004ca87:	mov    DWORD PTR [eax],0x9
1004ca8d:	push   edi
1004ca8e:	push   edi
1004ca8f:	push   edi
1004ca90:	push   edi
1004ca91:	push   edi
1004ca92:	call   0x100435cc
1004ca97:	add    esp,0x14
1004ca9a:	jmp    0x1004ca64
1004ca9c:	mov    ecx,eax
1004ca9e:	sar    ecx,0x5
1004caa1:	lea    ebx,[ecx*4+0x10082480]
1004caa8:	mov    esi,eax
1004caaa:	and    esi,0x1f
1004caad:	imul   esi,esi,0x28
1004cab0:	mov    ecx,DWORD PTR [ebx]
1004cab2:	movzx  ecx,BYTE PTR [ecx+esi*1+0x4]
1004cab7:	and    ecx,0x1
1004caba:	jne    0x1004cae2
1004cabc:	call   0x10046e08
1004cac1:	mov    DWORD PTR [eax],edi
1004cac3:	call   0x10046df5
1004cac8:	mov    DWORD PTR [eax],0x9
1004cace:	push   edi
1004cacf:	push   edi
1004cad0:	push   edi
1004cad1:	push   edi
1004cad2:	push   edi
1004cad3:	call   0x100435cc
1004cad8:	add    esp,0x14
1004cadb:	or     edx,0xffffffff
1004cade:	mov    eax,edx
1004cae0:	jmp    0x1004cb3d
1004cae2:	push   eax
1004cae3:	call   0x1004fc70
1004cae8:	pop    ecx
1004cae9:	mov    DWORD PTR [ebp-0x4],edi
1004caec:	mov    eax,DWORD PTR [ebx]
1004caee:	test   BYTE PTR [eax+esi*1+0x4],0x1
1004caf3:	je     0x1004cb11
1004caf5:	push   DWORD PTR [ebp+0x14]
1004caf8:	push   DWORD PTR [ebp+0x10]
1004cafb:	push   DWORD PTR [ebp+0xc]
1004cafe:	push   DWORD PTR [ebp+0x8]
1004cb01:	call   0x1004c9b1
1004cb06:	add    esp,0x10
1004cb09:	mov    DWORD PTR [ebp-0x24],eax
1004cb0c:	mov    DWORD PTR [ebp-0x20],edx
1004cb0f:	jmp    0x1004cb2b
1004cb11:	call   0x10046df5
1004cb16:	mov    DWORD PTR [eax],0x9
1004cb1c:	call   0x10046e08
1004cb21:	mov    DWORD PTR [eax],edi
1004cb23:	or     DWORD PTR [ebp-0x24],0xffffffff
1004cb27:	or     DWORD PTR [ebp-0x20],0xffffffff
1004cb2b:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1004cb32:	call   0x1004cb43
1004cb37:	mov    eax,DWORD PTR [ebp-0x24]
1004cb3a:	mov    edx,DWORD PTR [ebp-0x20]
1004cb3d:	call   0x10046f79
1004cb42:	ret    
1004cb43:	push   DWORD PTR [ebp+0x8]
1004cb46:	call   0x1004fd10
1004cb4b:	pop    ecx
1004cb4c:	ret    
1004cb4d:	push   ebp
1004cb4e:	lea    ebp,[esp-0x518]
1004cb55:	sub    esp,0x594
1004cb5b:	mov    eax,ds:0x1007e030
1004cb60:	xor    eax,ebp
1004cb62:	mov    DWORD PTR [ebp+0x514],eax
1004cb68:	mov    eax,DWORD PTR [ebp+0x524]
1004cb6e:	push   esi
1004cb6f:	xor    esi,esi
1004cb71:	cmp    DWORD PTR [ebp+0x528],esi
1004cb77:	mov    DWORD PTR [ebp-0x64],eax
1004cb7a:	mov    DWORD PTR [ebp-0x60],esi
1004cb7d:	mov    DWORD PTR [ebp-0x68],esi
1004cb80:	jne    0x1004cb89
1004cb82:	xor    eax,eax
1004cb84:	jmp    0x1004d0fd
1004cb89:	cmp    eax,esi
1004cb8b:	jne    0x1004cbb4
1004cb8d:	call   0x10046e08
1004cb92:	mov    DWORD PTR [eax],esi
1004cb94:	call   0x10046df5
1004cb99:	push   esi
1004cb9a:	push   esi
1004cb9b:	push   esi
1004cb9c:	push   esi
1004cb9d:	push   esi
1004cb9e:	mov    DWORD PTR [eax],0x16
1004cba4:	call   0x100435cc
1004cba9:	add    esp,0x14
1004cbac:	or     eax,0xffffffff
1004cbaf:	jmp    0x1004d0fd
1004cbb4:	mov    esi,DWORD PTR [ebp+0x520]
1004cbba:	push   ebx
1004cbbb:	mov    ebx,esi
1004cbbd:	and    ebx,0x1f
1004cbc0:	imul   ebx,ebx,0x28
1004cbc3:	mov    eax,esi
1004cbc5:	sar    eax,0x5
1004cbc8:	push   edi
1004cbc9:	lea    edi,[eax*4+0x10082480]
1004cbd0:	mov    eax,DWORD PTR [edi]
1004cbd2:	add    eax,ebx
1004cbd4:	mov    cl,BYTE PTR [eax+0x24]
1004cbd7:	add    cl,cl
1004cbd9:	sar    cl,1
1004cbdb:	cmp    cl,0x2
1004cbde:	mov    DWORD PTR [ebp-0x70],edi
1004cbe1:	mov    BYTE PTR [ebp-0x55],cl
1004cbe4:	je     0x1004cbeb
1004cbe6:	cmp    cl,0x1
1004cbe9:	jne    0x1004cc1e
1004cbeb:	mov    ecx,DWORD PTR [ebp+0x528]
1004cbf1:	not    ecx
1004cbf3:	test   cl,0x1
1004cbf6:	jne    0x1004cc1e
1004cbf8:	call   0x10046e08
1004cbfd:	xor    esi,esi
1004cbff:	mov    DWORD PTR [eax],esi
1004cc01:	call   0x10046df5
1004cc06:	push   esi
1004cc07:	push   esi
1004cc08:	push   esi
1004cc09:	push   esi
1004cc0a:	push   esi
1004cc0b:	mov    DWORD PTR [eax],0x16
1004cc11:	call   0x100435cc
1004cc16:	add    esp,0x14
1004cc19:	jmp    0x1004d0f3
1004cc1e:	test   BYTE PTR [eax+0x4],0x20
1004cc22:	je     0x1004cc33
1004cc24:	push   0x2
1004cc26:	push   0x0
1004cc28:	push   0x0
1004cc2a:	push   esi
1004cc2b:	call   0x1004c9b1
1004cc30:	add    esp,0x10
1004cc33:	push   esi
1004cc34:	call   0x1004d233
1004cc39:	test   eax,eax
1004cc3b:	pop    ecx
1004cc3c:	je     0x1004ce38
1004cc42:	mov    eax,DWORD PTR [edi]
1004cc44:	test   BYTE PTR [ebx+eax*1+0x4],0x80
1004cc49:	je     0x1004ce38
1004cc4f:	call   0x1004739c
1004cc54:	mov    eax,DWORD PTR [eax+0x6c]
1004cc57:	xor    ecx,ecx
1004cc59:	cmp    DWORD PTR [eax+0x14],ecx
1004cc5c:	lea    eax,[ebp-0x7c]
1004cc5f:	sete   cl
1004cc62:	push   eax
1004cc63:	mov    eax,DWORD PTR [edi]
1004cc65:	push   DWORD PTR [ebx+eax*1]
1004cc68:	mov    esi,ecx
1004cc6a:	call   DWORD PTR ds:0x10066270
1004cc70:	test   eax,eax
1004cc72:	je     0x1004ce38
1004cc78:	test   esi,esi
1004cc7a:	je     0x1004cc86
1004cc7c:	cmp    BYTE PTR [ebp-0x55],0x0
1004cc80:	je     0x1004ce38
1004cc86:	call   DWORD PTR ds:0x10066228
1004cc8c:	and    DWORD PTR [ebp-0x50],0x0
1004cc90:	cmp    DWORD PTR [ebp+0x528],0x0
1004cc97:	mov    esi,DWORD PTR [ebp-0x64]
1004cc9a:	mov    DWORD PTR [ebp-0x7c],eax
1004cc9d:	mov    DWORD PTR [ebp-0x74],esi
1004cca0:	jbe    0x1004d0a5
1004cca6:	and    DWORD PTR [ebp-0x5c],0x0
1004ccaa:	jmp    0x1004ccaf
1004ccac:	mov    esi,DWORD PTR [ebp-0x74]
1004ccaf:	mov    al,BYTE PTR [ebp-0x55]
1004ccb2:	test   al,al
1004ccb4:	jne    0x1004cdc0
1004ccba:	mov    al,BYTE PTR [esi]
1004ccbc:	xor    ecx,ecx
1004ccbe:	cmp    al,0xa
1004ccc0:	sete   cl
1004ccc3:	movsx  eax,al
1004ccc6:	push   eax
1004ccc7:	mov    DWORD PTR [ebp-0x78],ecx
1004ccca:	call   0x1004b595
1004cccf:	test   eax,eax
1004ccd1:	pop    ecx
1004ccd2:	jne    0x1004ccee
1004ccd4:	push   0x1
1004ccd6:	lea    eax,[ebp-0x54]
1004ccd9:	push   esi
1004ccda:	push   eax
1004ccdb:	call   0x1004e179
1004cce0:	add    esp,0xc
1004cce3:	cmp    eax,0xffffffff
1004cce6:	je     0x1004d09b
1004ccec:	jmp    0x1004cd1e
1004ccee:	mov    eax,DWORD PTR [ebp-0x64]
1004ccf1:	sub    eax,esi
1004ccf3:	add    eax,DWORD PTR [ebp+0x528]
1004ccf9:	cmp    eax,0x1
1004ccfc:	jbe    0x1004d09b
1004cd02:	push   0x2
1004cd04:	lea    eax,[ebp-0x54]
1004cd07:	push   esi
1004cd08:	push   eax
1004cd09:	call   0x1004e179
1004cd0e:	add    esp,0xc
1004cd11:	cmp    eax,0xffffffff
1004cd14:	je     0x1004d09b
1004cd1a:	inc    esi
1004cd1b:	inc    DWORD PTR [ebp-0x5c]
1004cd1e:	xor    eax,eax
1004cd20:	push   eax
1004cd21:	push   eax
1004cd22:	push   0x5
1004cd24:	lea    ecx,[ebp+0x50c]
1004cd2a:	push   ecx
1004cd2b:	push   0x1
1004cd2d:	lea    ecx,[ebp-0x54]
1004cd30:	push   ecx
1004cd31:	push   eax
1004cd32:	push   DWORD PTR [ebp-0x7c]
1004cd35:	inc    esi
1004cd36:	inc    DWORD PTR [ebp-0x5c]
1004cd39:	mov    DWORD PTR [ebp-0x74],esi
1004cd3c:	call   DWORD PTR ds:0x100660b8
1004cd42:	mov    esi,eax
1004cd44:	test   esi,esi
1004cd46:	je     0x1004d09b
1004cd4c:	push   0x0
1004cd4e:	lea    eax,[ebp-0x50]
1004cd51:	push   eax
1004cd52:	push   esi
1004cd53:	lea    eax,[ebp+0x50c]
1004cd59:	push   eax
1004cd5a:	mov    eax,DWORD PTR [edi]
1004cd5c:	push   DWORD PTR [ebx+eax*1]
1004cd5f:	call   DWORD PTR ds:0x100660b4
1004cd65:	test   eax,eax
1004cd67:	je     0x1004d092
1004cd6d:	mov    eax,DWORD PTR [ebp-0x50]
1004cd70:	add    DWORD PTR [ebp-0x60],eax
1004cd73:	cmp    eax,esi
1004cd75:	jl     0x1004d09b
1004cd7b:	cmp    DWORD PTR [ebp-0x78],0x0
1004cd7f:	je     0x1004ce24
1004cd85:	push   0x0
1004cd87:	lea    eax,[ebp-0x50]
1004cd8a:	push   eax
1004cd8b:	push   0x1
1004cd8d:	lea    eax,[ebp+0x50c]
1004cd93:	push   eax
1004cd94:	mov    eax,DWORD PTR [edi]
1004cd96:	mov    BYTE PTR [ebp+0x50c],0xd
1004cd9d:	push   DWORD PTR [ebx+eax*1]
1004cda0:	call   DWORD PTR ds:0x100660b4
1004cda6:	test   eax,eax
1004cda8:	je     0x1004d092
1004cdae:	cmp    DWORD PTR [ebp-0x50],0x1
1004cdb2:	jl     0x1004d09b
1004cdb8:	inc    DWORD PTR [ebp-0x68]
1004cdbb:	inc    DWORD PTR [ebp-0x60]
1004cdbe:	jmp    0x1004ce24
1004cdc0:	cmp    al,0x1
1004cdc2:	je     0x1004cdc8
1004cdc4:	cmp    al,0x2
1004cdc6:	jne    0x1004cde3
1004cdc8:	movzx  ecx,WORD PTR [esi]
1004cdcb:	xor    edx,edx
1004cdcd:	cmp    cx,0xa
1004cdd1:	sete   dl
1004cdd4:	inc    esi
1004cdd5:	inc    esi
1004cdd6:	add    DWORD PTR [ebp-0x5c],0x2
1004cdda:	mov    DWORD PTR [ebp-0x54],ecx
1004cddd:	mov    DWORD PTR [ebp-0x74],esi
1004cde0:	mov    DWORD PTR [ebp-0x78],edx
1004cde3:	cmp    al,0x1
1004cde5:	je     0x1004cdeb
1004cde7:	cmp    al,0x2
1004cde9:	jne    0x1004ce24
1004cdeb:	push   DWORD PTR [ebp-0x54]
1004cdee:	call   0x1004fed1
1004cdf3:	cmp    ax,WORD PTR [ebp-0x54]
1004cdf7:	pop    ecx
1004cdf8:	jne    0x1004d092
1004cdfe:	inc    DWORD PTR [ebp-0x60]
1004ce01:	cmp    DWORD PTR [ebp-0x78],0x0
1004ce05:	je     0x1004ce24
1004ce07:	push   0xd
1004ce09:	pop    eax
1004ce0a:	push   eax
1004ce0b:	mov    DWORD PTR [ebp-0x54],eax
1004ce0e:	call   0x1004fed1
1004ce13:	cmp    ax,WORD PTR [ebp-0x54]
1004ce17:	pop    ecx
1004ce18:	jne    0x1004d092
1004ce1e:	inc    DWORD PTR [ebp-0x60]
1004ce21:	inc    DWORD PTR [ebp-0x68]
1004ce24:	mov    eax,DWORD PTR [ebp+0x528]
1004ce2a:	cmp    DWORD PTR [ebp-0x5c],eax
1004ce2d:	jb     0x1004ccac
1004ce33:	jmp    0x1004d09b
1004ce38:	mov    eax,DWORD PTR [edi]
1004ce3a:	add    eax,ebx
1004ce3c:	test   BYTE PTR [eax+0x4],0x80
1004ce40:	je     0x1004d06b
1004ce46:	mov    eax,DWORD PTR [ebp-0x64]
1004ce49:	xor    esi,esi
1004ce4b:	cmp    BYTE PTR [ebp-0x55],0x0
1004ce4f:	mov    DWORD PTR [ebp-0x54],esi
1004ce52:	jne    0x1004cee9
1004ce58:	cmp    DWORD PTR [ebp+0x528],esi
1004ce5e:	mov    DWORD PTR [ebp-0x50],eax
1004ce61:	jbe    0x1004d0cc
1004ce67:	mov    ecx,DWORD PTR [ebp-0x50]
1004ce6a:	and    DWORD PTR [ebp-0x5c],0x0
1004ce6e:	sub    ecx,DWORD PTR [ebp-0x64]
1004ce71:	lea    eax,[ebp-0x4c]
1004ce74:	cmp    ecx,DWORD PTR [ebp+0x528]
1004ce7a:	jae    0x1004cea3
1004ce7c:	mov    edx,DWORD PTR [ebp-0x50]
1004ce7f:	inc    DWORD PTR [ebp-0x50]
1004ce82:	mov    dl,BYTE PTR [edx]
1004ce84:	inc    ecx
1004ce85:	cmp    dl,0xa
1004ce88:	jne    0x1004ce94
1004ce8a:	inc    DWORD PTR [ebp-0x68]
1004ce8d:	mov    BYTE PTR [eax],0xd
1004ce90:	inc    eax
1004ce91:	inc    DWORD PTR [ebp-0x5c]
1004ce94:	mov    BYTE PTR [eax],dl
1004ce96:	inc    eax
1004ce97:	inc    DWORD PTR [ebp-0x5c]
1004ce9a:	cmp    DWORD PTR [ebp-0x5c],0x400
1004cea1:	jb     0x1004ce74
1004cea3:	mov    esi,eax
1004cea5:	lea    eax,[ebp-0x4c]
1004cea8:	sub    esi,eax
1004ceaa:	push   0x0
1004ceac:	lea    eax,[ebp-0x6c]
1004ceaf:	push   eax
1004ceb0:	push   esi
1004ceb1:	lea    eax,[ebp-0x4c]
1004ceb4:	push   eax
1004ceb5:	mov    eax,DWORD PTR [edi]
1004ceb7:	push   DWORD PTR [ebx+eax*1]
1004ceba:	call   DWORD PTR ds:0x100660b4
1004cec0:	test   eax,eax
1004cec2:	je     0x1004d092
1004cec8:	mov    eax,DWORD PTR [ebp-0x6c]
1004cecb:	add    DWORD PTR [ebp-0x60],eax
1004cece:	cmp    eax,esi
1004ced0:	jl     0x1004d09b
1004ced6:	mov    eax,DWORD PTR [ebp-0x50]
1004ced9:	sub    eax,DWORD PTR [ebp-0x64]
1004cedc:	cmp    eax,DWORD PTR [ebp+0x528]
1004cee2:	jb     0x1004ce67
1004cee4:	jmp    0x1004d09b
1004cee9:	cmp    BYTE PTR [ebp-0x55],0x2
1004ceed:	jne    0x1004cf90
1004cef3:	cmp    DWORD PTR [ebp+0x528],esi
1004cef9:	mov    DWORD PTR [ebp-0x50],eax
1004cefc:	jbe    0x1004d0cc
1004cf02:	mov    ecx,DWORD PTR [ebp-0x50]
1004cf05:	xor    esi,esi
1004cf07:	sub    ecx,DWORD PTR [ebp-0x64]
1004cf0a:	lea    eax,[ebp-0x4c]
1004cf0d:	cmp    ecx,DWORD PTR [ebp+0x528]
1004cf13:	jae    0x1004cf46
1004cf15:	mov    edx,DWORD PTR [ebp-0x50]
1004cf18:	add    DWORD PTR [ebp-0x50],0x2
1004cf1c:	movzx  edx,WORD PTR [edx]
1004cf1f:	inc    ecx
1004cf20:	inc    ecx
1004cf21:	cmp    dx,0xa
1004cf25:	jne    0x1004cf34
1004cf27:	add    DWORD PTR [ebp-0x68],0x2
1004cf2b:	mov    WORD PTR [eax],0xd
1004cf30:	inc    eax
1004cf31:	inc    eax
1004cf32:	inc    esi
1004cf33:	inc    esi
1004cf34:	mov    edi,DWORD PTR [ebp-0x70]
1004cf37:	mov    WORD PTR [eax],dx
1004cf3a:	inc    eax
1004cf3b:	inc    eax
1004cf3c:	inc    esi
1004cf3d:	inc    esi
1004cf3e:	cmp    esi,0x3ff
1004cf44:	jb     0x1004cf0d
1004cf46:	mov    esi,eax
1004cf48:	lea    eax,[ebp-0x4c]
1004cf4b:	sub    esi,eax
1004cf4d:	push   0x0
1004cf4f:	lea    eax,[ebp-0x6c]
1004cf52:	push   eax
1004cf53:	push   esi
1004cf54:	lea    eax,[ebp-0x4c]
1004cf57:	push   eax
1004cf58:	mov    eax,DWORD PTR [edi]
1004cf5a:	push   DWORD PTR [ebx+eax*1]
1004cf5d:	call   DWORD PTR ds:0x100660b4
1004cf63:	test   eax,eax
1004cf65:	je     0x1004d092
1004cf6b:	mov    eax,DWORD PTR [ebp-0x6c]
1004cf6e:	add    DWORD PTR [ebp-0x60],eax
1004cf71:	cmp    eax,esi
1004cf73:	jl     0x1004d09b
1004cf79:	mov    eax,DWORD PTR [ebp-0x50]
1004cf7c:	sub    eax,DWORD PTR [ebp-0x64]
1004cf7f:	cmp    eax,DWORD PTR [ebp+0x528]
1004cf85:	jb     0x1004cf02
1004cf8b:	jmp    0x1004d09b
1004cf90:	cmp    DWORD PTR [ebp+0x528],esi
1004cf96:	mov    DWORD PTR [ebp-0x5c],eax
1004cf99:	jbe    0x1004d0cc
1004cf9f:	mov    ecx,DWORD PTR [ebp-0x5c]
1004cfa2:	and    DWORD PTR [ebp-0x50],0x0
1004cfa6:	sub    ecx,DWORD PTR [ebp-0x64]
1004cfa9:	push   0x2
1004cfab:	lea    eax,[ebp+0x3b8]
1004cfb1:	pop    esi
1004cfb2:	cmp    ecx,DWORD PTR [ebp+0x528]
1004cfb8:	jae    0x1004cfe6
1004cfba:	mov    edx,DWORD PTR [ebp-0x5c]
1004cfbd:	movzx  edx,WORD PTR [edx]
1004cfc0:	add    DWORD PTR [ebp-0x5c],esi
1004cfc3:	add    ecx,esi
1004cfc5:	cmp    dx,0xa
1004cfc9:	jne    0x1004cfd5
1004cfcb:	mov    WORD PTR [eax],0xd
1004cfd0:	add    eax,esi
1004cfd2:	add    DWORD PTR [ebp-0x50],esi
1004cfd5:	add    DWORD PTR [ebp-0x50],esi
1004cfd8:	mov    WORD PTR [eax],dx
1004cfdb:	add    eax,esi
1004cfdd:	cmp    DWORD PTR [ebp-0x50],0x152
1004cfe4:	jb     0x1004cfb2
1004cfe6:	xor    esi,esi
1004cfe8:	push   esi
1004cfe9:	push   esi
1004cfea:	push   0x2ab
1004cfef:	lea    ecx,[ebp+0x108]
1004cff5:	push   ecx
1004cff6:	lea    ecx,[ebp+0x3b8]
1004cffc:	sub    eax,ecx
1004cffe:	cdq    
1004cfff:	sub    eax,edx
1004d001:	sar    eax,1
1004d003:	push   eax
1004d004:	mov    eax,ecx
1004d006:	push   eax
1004d007:	push   esi
1004d008:	push   0xfde9
1004d00d:	call   DWORD PTR ds:0x100660b8
1004d013:	mov    edi,eax
1004d015:	cmp    edi,esi
1004d017:	je     0x1004d092
1004d019:	push   0x0
1004d01b:	lea    eax,[ebp-0x6c]
1004d01e:	push   eax
1004d01f:	mov    eax,edi
1004d021:	sub    eax,esi
1004d023:	push   eax
1004d024:	lea    eax,[ebp+esi*1+0x108]
1004d02b:	push   eax
1004d02c:	mov    eax,DWORD PTR [ebp-0x70]
1004d02f:	mov    eax,DWORD PTR [eax]
1004d031:	push   DWORD PTR [ebx+eax*1]
1004d034:	call   DWORD PTR ds:0x100660b4
1004d03a:	test   eax,eax
1004d03c:	je     0x1004d047
1004d03e:	add    esi,DWORD PTR [ebp-0x6c]
1004d041:	cmp    edi,esi
1004d043:	jg     0x1004d019
1004d045:	jmp    0x1004d050
1004d047:	call   DWORD PTR ds:0x100660cc
1004d04d:	mov    DWORD PTR [ebp-0x54],eax
1004d050:	cmp    edi,esi
1004d052:	jg     0x1004d09b
1004d054:	mov    eax,DWORD PTR [ebp-0x5c]
1004d057:	sub    eax,DWORD PTR [ebp-0x64]
1004d05a:	cmp    eax,DWORD PTR [ebp+0x528]
1004d060:	mov    DWORD PTR [ebp-0x60],eax
1004d063:	jb     0x1004cf9f
1004d069:	jmp    0x1004d09b
1004d06b:	push   0x0
1004d06d:	lea    ecx,[ebp-0x6c]
1004d070:	push   ecx
1004d071:	push   DWORD PTR [ebp+0x528]
1004d077:	push   DWORD PTR [ebp-0x64]
1004d07a:	push   DWORD PTR [eax]
1004d07c:	call   DWORD PTR ds:0x100660b4
1004d082:	test   eax,eax
1004d084:	je     0x1004d092
1004d086:	mov    eax,DWORD PTR [ebp-0x6c]
1004d089:	and    DWORD PTR [ebp-0x54],0x0
1004d08d:	mov    DWORD PTR [ebp-0x60],eax
1004d090:	jmp    0x1004d09b
1004d092:	call   DWORD PTR ds:0x100660cc
1004d098:	mov    DWORD PTR [ebp-0x54],eax
1004d09b:	mov    eax,DWORD PTR [ebp-0x60]
1004d09e:	test   eax,eax
1004d0a0:	jne    0x1004d0f8
1004d0a2:	mov    edi,DWORD PTR [ebp-0x70]
1004d0a5:	xor    esi,esi
1004d0a7:	cmp    DWORD PTR [ebp-0x54],esi
1004d0aa:	je     0x1004d0cc
1004d0ac:	push   0x5
1004d0ae:	pop    esi
1004d0af:	cmp    DWORD PTR [ebp-0x54],esi
1004d0b2:	jne    0x1004d0c1
1004d0b4:	call   0x10046df5
1004d0b9:	mov    DWORD PTR [eax],0x9
1004d0bf:	jmp    0x1004d0ec
1004d0c1:	push   DWORD PTR [ebp-0x54]
1004d0c4:	call   0x10046e1b
1004d0c9:	pop    ecx
1004d0ca:	jmp    0x1004d0f3
1004d0cc:	mov    eax,DWORD PTR [edi]
1004d0ce:	test   BYTE PTR [ebx+eax*1+0x4],0x40
1004d0d3:	je     0x1004d0e1
1004d0d5:	mov    eax,DWORD PTR [ebp-0x64]
1004d0d8:	cmp    BYTE PTR [eax],0x1a
1004d0db:	jne    0x1004d0e1
1004d0dd:	xor    eax,eax
1004d0df:	jmp    0x1004d0fb
1004d0e1:	call   0x10046df5
1004d0e6:	mov    DWORD PTR [eax],0x1c
1004d0ec:	call   0x10046e08
1004d0f1:	mov    DWORD PTR [eax],esi
1004d0f3:	or     eax,0xffffffff
1004d0f6:	jmp    0x1004d0fb
1004d0f8:	sub    eax,DWORD PTR [ebp-0x68]
1004d0fb:	pop    edi
1004d0fc:	pop    ebx
1004d0fd:	mov    ecx,DWORD PTR [ebp+0x514]
1004d103:	xor    ecx,ebp
1004d105:	pop    esi
1004d106:	call   0x100430d7
1004d10b:	add    ebp,0x518
1004d111:	leave  
1004d112:	ret    
1004d113:	push   0x10
1004d115:	push   0x10074968
1004d11a:	call   0x10046f34
1004d11f:	mov    eax,DWORD PTR [ebp+0x8]
1004d122:	cmp    eax,0xfffffffe
1004d125:	jne    0x1004d142
1004d127:	call   0x10046e08
1004d12c:	and    DWORD PTR [eax],0x0
1004d12f:	call   0x10046df5
1004d134:	mov    DWORD PTR [eax],0x9
1004d13a:	or     eax,0xffffffff
1004d13d:	jmp    0x1004d1df
1004d142:	xor    edi,edi
1004d144:	cmp    eax,edi
1004d146:	jl     0x1004d150
1004d148:	cmp    eax,DWORD PTR ds:0x10082464
1004d14e:	jb     0x1004d171
1004d150:	call   0x10046e08
1004d155:	mov    DWORD PTR [eax],edi
1004d157:	call   0x10046df5
1004d15c:	mov    DWORD PTR [eax],0x9
1004d162:	push   edi
1004d163:	push   edi
1004d164:	push   edi
1004d165:	push   edi
1004d166:	push   edi
1004d167:	call   0x100435cc
1004d16c:	add    esp,0x14
1004d16f:	jmp    0x1004d13a
1004d171:	mov    ecx,eax
1004d173:	sar    ecx,0x5
1004d176:	lea    ebx,[ecx*4+0x10082480]
1004d17d:	mov    esi,eax
1004d17f:	and    esi,0x1f
1004d182:	imul   esi,esi,0x28
1004d185:	mov    ecx,DWORD PTR [ebx]
1004d187:	movzx  ecx,BYTE PTR [ecx+esi*1+0x4]
1004d18c:	and    ecx,0x1
1004d18f:	je     0x1004d150
1004d191:	push   eax
1004d192:	call   0x1004fc70
1004d197:	pop    ecx
1004d198:	mov    DWORD PTR [ebp-0x4],edi
1004d19b:	mov    eax,DWORD PTR [ebx]
1004d19d:	test   BYTE PTR [eax+esi*1+0x4],0x1
1004d1a2:	je     0x1004d1ba
1004d1a4:	push   DWORD PTR [ebp+0x10]
1004d1a7:	push   DWORD PTR [ebp+0xc]
1004d1aa:	push   DWORD PTR [ebp+0x8]
1004d1ad:	call   0x1004cb4d
1004d1b2:	add    esp,0xc
1004d1b5:	mov    DWORD PTR [ebp-0x1c],eax
1004d1b8:	jmp    0x1004d1d0
1004d1ba:	call   0x10046df5
1004d1bf:	mov    DWORD PTR [eax],0x9
1004d1c5:	call   0x10046e08
1004d1ca:	mov    DWORD PTR [eax],edi
1004d1cc:	or     DWORD PTR [ebp-0x1c],0xffffffff
1004d1d0:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1004d1d7:	call   0x1004d1e5
1004d1dc:	mov    eax,DWORD PTR [ebp-0x1c]
1004d1df:	call   0x10046f79
1004d1e4:	ret    
1004d1e5:	push   DWORD PTR [ebp+0x8]
1004d1e8:	call   0x1004fd10
1004d1ed:	pop    ecx
1004d1ee:	ret    
1004d1ef:	inc    DWORD PTR ds:0x1008046c
1004d1f5:	push   0x1000
1004d1fa:	call   0x100476c2
1004d1ff:	test   eax,eax
1004d201:	pop    ecx
1004d202:	mov    ecx,DWORD PTR [esp+0x4]
1004d206:	mov    DWORD PTR [ecx+0x8],eax
1004d209:	je     0x1004d218
1004d20b:	or     DWORD PTR [ecx+0xc],0x8
1004d20f:	mov    DWORD PTR [ecx+0x18],0x1000
1004d216:	jmp    0x1004d229
1004d218:	or     DWORD PTR [ecx+0xc],0x4
1004d21c:	lea    eax,[ecx+0x14]
1004d21f:	mov    DWORD PTR [ecx+0x8],eax
1004d222:	mov    DWORD PTR [ecx+0x18],0x2
1004d229:	mov    eax,DWORD PTR [ecx+0x8]
1004d22c:	and    DWORD PTR [ecx+0x4],0x0
1004d230:	mov    DWORD PTR [ecx],eax
1004d232:	ret    
1004d233:	mov    eax,DWORD PTR [esp+0x4]
1004d237:	cmp    eax,0xfffffffe
1004d23a:	jne    0x1004d24a
1004d23c:	call   0x10046df5
1004d241:	mov    DWORD PTR [eax],0x9
1004d247:	xor    eax,eax
1004d249:	ret    
1004d24a:	push   esi
1004d24b:	xor    esi,esi
1004d24d:	cmp    eax,esi
1004d24f:	jl     0x1004d259
1004d251:	cmp    eax,DWORD PTR ds:0x10082464
1004d257:	jb     0x1004d275
1004d259:	call   0x10046df5
1004d25e:	push   esi
1004d25f:	push   esi
1004d260:	push   esi
1004d261:	push   esi
1004d262:	push   esi
1004d263:	mov    DWORD PTR [eax],0x9
1004d269:	call   0x100435cc
1004d26e:	add    esp,0x14
1004d271:	xor    eax,eax
1004d273:	pop    esi
1004d274:	ret    
1004d275:	mov    ecx,eax
1004d277:	and    eax,0x1f
1004d27a:	imul   eax,eax,0x28
1004d27d:	sar    ecx,0x5
1004d280:	mov    ecx,DWORD PTR [ecx*4+0x10082480]
1004d287:	movzx  eax,BYTE PTR [ecx+eax*1+0x4]
1004d28c:	and    eax,0x40
1004d28f:	pop    esi
1004d290:	ret    
1004d291:	mov    eax,0x1007eaa8
1004d296:	ret    
1004d297:	mov    eax,ds:0x10082460
1004d29c:	test   eax,eax
1004d29e:	push   esi
1004d29f:	push   0x14
1004d2a1:	pop    esi
1004d2a2:	jne    0x1004d2ab
1004d2a4:	mov    eax,0x200
1004d2a9:	jmp    0x1004d2b1
1004d2ab:	cmp    eax,esi
1004d2ad:	jge    0x1004d2b6
1004d2af:	mov    eax,esi
1004d2b1:	mov    ds:0x10082460,eax
1004d2b6:	push   0x4
1004d2b8:	push   eax
1004d2b9:	call   0x10047702
1004d2be:	test   eax,eax
1004d2c0:	pop    ecx
1004d2c1:	pop    ecx
1004d2c2:	mov    ds:0x10081440,eax
1004d2c7:	jne    0x1004d2e7
1004d2c9:	push   0x4
1004d2cb:	push   esi
1004d2cc:	mov    DWORD PTR ds:0x10082460,esi
1004d2d2:	call   0x10047702
1004d2d7:	test   eax,eax
1004d2d9:	pop    ecx
1004d2da:	pop    ecx
1004d2db:	mov    ds:0x10081440,eax
1004d2e0:	jne    0x1004d2e7
1004d2e2:	push   0x1a
1004d2e4:	pop    eax
1004d2e5:	pop    esi
1004d2e6:	ret    
1004d2e7:	xor    edx,edx
1004d2e9:	mov    ecx,0x1007eaa8
1004d2ee:	jmp    0x1004d2f5
1004d2f0:	mov    eax,ds:0x10081440
1004d2f5:	mov    DWORD PTR [edx+eax*1],ecx
1004d2f8:	add    ecx,0x20
1004d2fb:	add    edx,0x4
1004d2fe:	cmp    ecx,0x1007ed28
1004d304:	jl     0x1004d2f0
1004d306:	push   0xfffffffe
1004d308:	pop    esi
1004d309:	xor    edx,edx
1004d30b:	mov    ecx,0x1007eab8
1004d310:	push   edi
1004d311:	mov    edi,edx
1004d313:	and    edi,0x1f
1004d316:	imul   edi,edi,0x28
1004d319:	mov    eax,edx
1004d31b:	sar    eax,0x5
1004d31e:	mov    eax,DWORD PTR [eax*4+0x10082480]
1004d325:	mov    eax,DWORD PTR [edi+eax*1]
1004d328:	cmp    eax,0xffffffff
1004d32b:	je     0x1004d335
1004d32d:	cmp    eax,esi
1004d32f:	je     0x1004d335
1004d331:	test   eax,eax
1004d333:	jne    0x1004d337
1004d335:	mov    DWORD PTR [ecx],esi
1004d337:	add    ecx,0x20
1004d33a:	inc    edx
1004d33b:	cmp    ecx,0x1007eb18
1004d341:	jl     0x1004d311
1004d343:	pop    edi
1004d344:	xor    eax,eax
1004d346:	pop    esi
1004d347:	ret    
1004d348:	call   0x100501b0
1004d34d:	cmp    BYTE PTR ds:0x1007fe20,0x0
1004d354:	je     0x1004d35b
1004d356:	call   0x1004ff93
1004d35b:	push   DWORD PTR ds:0x10081440
1004d361:	call   0x10043748
1004d366:	pop    ecx
1004d367:	ret    
1004d368:	mov    eax,DWORD PTR [esp+0x4]
1004d36c:	mov    ecx,0x1007eaa8
1004d371:	cmp    eax,ecx
1004d373:	jb     0x1004d38c
1004d375:	cmp    eax,0x1007ed08
1004d37a:	ja     0x1004d38c
1004d37c:	sub    eax,ecx
1004d37e:	sar    eax,0x5
1004d381:	add    eax,0x10
1004d384:	push   eax
1004d385:	call   0x10047f3d
1004d38a:	pop    ecx
1004d38b:	ret    
1004d38c:	add    eax,0x20
1004d38f:	push   eax
1004d390:	call   DWORD PTR ds:0x100660f0
1004d396:	ret    
1004d397:	mov    eax,DWORD PTR [esp+0x4]
1004d39b:	cmp    eax,0x14
1004d39e:	jge    0x1004d3ab
1004d3a0:	add    eax,0x10
1004d3a3:	push   eax
1004d3a4:	call   0x10047f3d
1004d3a9:	pop    ecx
1004d3aa:	ret    
1004d3ab:	mov    eax,DWORD PTR [esp+0x8]
1004d3af:	add    eax,0x20
1004d3b2:	push   eax
1004d3b3:	call   DWORD PTR ds:0x100660f0
1004d3b9:	ret    
1004d3ba:	mov    eax,DWORD PTR [esp+0x4]
1004d3be:	mov    ecx,0x1007eaa8
1004d3c3:	cmp    eax,ecx
1004d3c5:	jb     0x1004d3de
1004d3c7:	cmp    eax,0x1007ed08
1004d3cc:	ja     0x1004d3de
1004d3ce:	sub    eax,ecx
1004d3d0:	sar    eax,0x5
1004d3d3:	add    eax,0x10
1004d3d6:	push   eax
1004d3d7:	call   0x10047e65
1004d3dc:	pop    ecx
1004d3dd:	ret    
1004d3de:	add    eax,0x20
1004d3e1:	push   eax
1004d3e2:	call   DWORD PTR ds:0x100660ec
1004d3e8:	ret    
1004d3e9:	mov    eax,DWORD PTR [esp+0x4]
1004d3ed:	cmp    eax,0x14
1004d3f0:	jge    0x1004d3fd
1004d3f2:	add    eax,0x10
1004d3f5:	push   eax
1004d3f6:	call   0x10047e65
1004d3fb:	pop    ecx
1004d3fc:	ret    
1004d3fd:	mov    eax,DWORD PTR [esp+0x8]
1004d401:	add    eax,0x20
1004d404:	push   eax
1004d405:	call   DWORD PTR ds:0x100660ec
1004d40b:	ret    
1004d40c:	mov    eax,DWORD PTR [esp+0x4]
1004d410:	push   esi
1004d411:	xor    esi,esi
1004d413:	cmp    eax,esi
1004d415:	jne    0x1004d434
1004d417:	call   0x10046df5
1004d41c:	push   esi
1004d41d:	push   esi
1004d41e:	push   esi
1004d41f:	push   esi
1004d420:	push   esi
1004d421:	mov    DWORD PTR [eax],0x16
1004d427:	call   0x100435cc
1004d42c:	add    esp,0x14
1004d42f:	or     eax,0xffffffff
1004d432:	pop    esi
1004d433:	ret    
1004d434:	mov    eax,DWORD PTR [eax+0x10]
1004d437:	pop    esi
1004d438:	ret    
1004d439:	push   ebp
1004d43a:	mov    ebp,esp
1004d43c:	sub    esp,0x10
1004d43f:	mov    eax,ds:0x1007e030
1004d444:	xor    eax,ebp
1004d446:	mov    DWORD PTR [ebp-0x4],eax
1004d449:	push   ebx
1004d44a:	push   esi
1004d44b:	mov    esi,DWORD PTR [ebp+0xc]
1004d44e:	test   BYTE PTR [esi+0xc],0x40
1004d452:	push   edi
1004d453:	jne    0x1004d5e8
1004d459:	push   esi
1004d45a:	call   0x1004d40c
1004d45f:	cmp    eax,0xffffffff
1004d462:	pop    ecx
1004d463:	mov    edi,0x1007e9d0
1004d468:	je     0x1004d498
1004d46a:	push   esi
1004d46b:	call   0x1004d40c
1004d470:	cmp    eax,0xfffffffe
1004d473:	pop    ecx
1004d474:	je     0x1004d498
1004d476:	push   esi
1004d477:	call   0x1004d40c
1004d47c:	sar    eax,0x5
1004d47f:	push   esi
1004d480:	lea    ebx,[eax*4+0x10082480]
1004d487:	call   0x1004d40c
1004d48c:	and    eax,0x1f
1004d48f:	imul   eax,eax,0x28
1004d492:	add    eax,DWORD PTR [ebx]
1004d494:	pop    ecx
1004d495:	pop    ecx
1004d496:	jmp    0x1004d49a
1004d498:	mov    eax,edi
1004d49a:	mov    al,BYTE PTR [eax+0x24]
1004d49d:	and    al,0x7f
1004d49f:	cmp    al,0x2
1004d4a1:	je     0x1004d5e8
1004d4a7:	push   esi
1004d4a8:	call   0x1004d40c
1004d4ad:	cmp    eax,0xffffffff
1004d4b0:	pop    ecx
1004d4b1:	je     0x1004d4e1
1004d4b3:	push   esi
1004d4b4:	call   0x1004d40c
1004d4b9:	cmp    eax,0xfffffffe
1004d4bc:	pop    ecx
1004d4bd:	je     0x1004d4e1
1004d4bf:	push   esi
1004d4c0:	call   0x1004d40c
1004d4c5:	sar    eax,0x5
1004d4c8:	push   esi
1004d4c9:	lea    ebx,[eax*4+0x10082480]
1004d4d0:	call   0x1004d40c
1004d4d5:	and    eax,0x1f
1004d4d8:	imul   eax,eax,0x28
1004d4db:	add    eax,DWORD PTR [ebx]
1004d4dd:	pop    ecx
1004d4de:	pop    ecx
1004d4df:	jmp    0x1004d4e3
1004d4e1:	mov    eax,edi
1004d4e3:	mov    al,BYTE PTR [eax+0x24]
1004d4e6:	and    al,0x7f
1004d4e8:	cmp    al,0x1
1004d4ea:	jne    0x1004d548
1004d4ec:	dec    DWORD PTR [esi+0x4]
1004d4ef:	mov    ebx,DWORD PTR [ebp+0x8]
1004d4f2:	js     0x1004d502
1004d4f4:	mov    eax,DWORD PTR [esi]
1004d4f6:	mov    BYTE PTR [eax],bl
1004d4f8:	mov    ecx,DWORD PTR [esi]
1004d4fa:	movzx  eax,BYTE PTR [ecx]
1004d4fd:	inc    ecx
1004d4fe:	mov    DWORD PTR [esi],ecx
1004d500:	jmp    0x1004d50e
1004d502:	movsx  eax,bl
1004d505:	push   esi
1004d506:	push   eax
1004d507:	call   0x10048a6d
1004d50c:	pop    ecx
1004d50d:	pop    ecx
1004d50e:	cmp    eax,0xffffffff
1004d511:	jne    0x1004d51c
1004d513:	or     ax,0xffff
1004d517:	jmp    0x1004d608
1004d51c:	dec    DWORD PTR [esi+0x4]
1004d51f:	js     0x1004d52f
1004d521:	mov    eax,DWORD PTR [esi]
1004d523:	mov    BYTE PTR [eax],bh
1004d525:	mov    ecx,DWORD PTR [esi]
1004d527:	movzx  eax,BYTE PTR [ecx]
1004d52a:	inc    ecx
1004d52b:	mov    DWORD PTR [esi],ecx
1004d52d:	jmp    0x1004d53b
1004d52f:	movsx  eax,bh
1004d532:	push   esi
1004d533:	push   eax
1004d534:	call   0x10048a6d
1004d539:	pop    ecx
1004d53a:	pop    ecx
1004d53b:	cmp    eax,0xffffffff
1004d53e:	je     0x1004d513
1004d540:	mov    ax,bx
1004d543:	jmp    0x1004d608
1004d548:	push   esi
1004d549:	call   0x1004d40c
1004d54e:	cmp    eax,0xffffffff
1004d551:	pop    ecx
1004d552:	je     0x1004d582
1004d554:	push   esi
1004d555:	call   0x1004d40c
1004d55a:	cmp    eax,0xfffffffe
1004d55d:	pop    ecx
1004d55e:	je     0x1004d582
1004d560:	push   esi
1004d561:	call   0x1004d40c
1004d566:	sar    eax,0x5
1004d569:	push   esi
1004d56a:	lea    ebx,[eax*4+0x10082480]
1004d571:	call   0x1004d40c
1004d576:	and    eax,0x1f
1004d579:	imul   eax,eax,0x28
1004d57c:	add    eax,DWORD PTR [ebx]
1004d57e:	pop    ecx
1004d57f:	pop    ecx
1004d580:	jmp    0x1004d584
1004d582:	mov    eax,edi
1004d584:	test   BYTE PTR [eax+0x4],0x80
1004d588:	je     0x1004d5e8
1004d58a:	push   DWORD PTR [ebp+0x8]
1004d58d:	lea    eax,[ebp-0xc]
1004d590:	push   0x5
1004d592:	push   eax
1004d593:	lea    eax,[ebp-0x10]
1004d596:	push   eax
1004d597:	call   0x10050488
1004d59c:	add    esp,0x10
1004d59f:	test   eax,eax
1004d5a1:	jne    0x1004d513
1004d5a7:	xor    ebx,ebx
1004d5a9:	cmp    DWORD PTR [ebp-0x10],ebx
1004d5ac:	jle    0x1004d5e2
1004d5ae:	dec    DWORD PTR [esi+0x4]
1004d5b1:	js     0x1004d5c5
1004d5b3:	mov    eax,DWORD PTR [esi]
1004d5b5:	mov    cl,BYTE PTR [ebp+ebx*1-0xc]
1004d5b9:	mov    BYTE PTR [eax],cl
1004d5bb:	mov    ecx,DWORD PTR [esi]
1004d5bd:	movzx  eax,BYTE PTR [ecx]
1004d5c0:	inc    ecx
1004d5c1:	mov    DWORD PTR [esi],ecx
1004d5c3:	jmp    0x1004d5d3
1004d5c5:	movsx  eax,BYTE PTR [ebp+ebx*1-0xc]
1004d5ca:	push   esi
1004d5cb:	push   eax
1004d5cc:	call   0x10048a6d
1004d5d1:	pop    ecx
1004d5d2:	pop    ecx
1004d5d3:	cmp    eax,0xffffffff
1004d5d6:	je     0x1004d513
1004d5dc:	inc    ebx
1004d5dd:	cmp    ebx,DWORD PTR [ebp-0x10]
1004d5e0:	jl     0x1004d5ae
1004d5e2:	mov    ax,WORD PTR [ebp+0x8]
1004d5e6:	jmp    0x1004d608
1004d5e8:	add    DWORD PTR [esi+0x4],0xfffffffe
1004d5ec:	js     0x1004d5fb
1004d5ee:	mov    ecx,DWORD PTR [esi]
1004d5f0:	mov    eax,DWORD PTR [ebp+0x8]
1004d5f3:	mov    WORD PTR [ecx],ax
1004d5f6:	add    DWORD PTR [esi],0x2
1004d5f9:	jmp    0x1004d608
1004d5fb:	movzx  eax,WORD PTR [ebp+0x8]
1004d5ff:	push   esi
1004d600:	push   eax
1004d601:	call   0x100501b9
1004d606:	pop    ecx
1004d607:	pop    ecx
1004d608:	mov    ecx,DWORD PTR [ebp-0x4]
1004d60b:	pop    edi
1004d60c:	pop    esi
1004d60d:	xor    ecx,ebp
1004d60f:	pop    ebx
1004d610:	call   0x100430d7
1004d615:	leave  
1004d616:	ret    
1004d617:	test   BYTE PTR [ecx+0xc],0x40
1004d61b:	je     0x1004d623
1004d61d:	cmp    DWORD PTR [ecx+0x8],0x0
1004d621:	je     0x1004d647
1004d623:	dec    DWORD PTR [ecx+0x4]
1004d626:	js     0x1004d633
1004d628:	mov    edx,DWORD PTR [ecx]
1004d62a:	mov    BYTE PTR [edx],al
1004d62c:	inc    DWORD PTR [ecx]
1004d62e:	movzx  eax,al
1004d631:	jmp    0x1004d63f
1004d633:	movsx  eax,al
1004d636:	push   ecx
1004d637:	push   eax
1004d638:	call   0x10048a6d
1004d63d:	pop    ecx
1004d63e:	pop    ecx
1004d63f:	cmp    eax,0xffffffff
1004d642:	jne    0x1004d647
1004d644:	or     DWORD PTR [esi],eax
1004d646:	ret    
1004d647:	inc    DWORD PTR [esi]
1004d649:	ret    
1004d64a:	push   ebp
1004d64b:	mov    ebp,esp
1004d64d:	push   esi
1004d64e:	mov    esi,eax
1004d650:	jmp    0x1004d665
1004d652:	mov    ecx,DWORD PTR [ebp+0x10]
1004d655:	mov    al,BYTE PTR [ebp+0x8]
1004d658:	dec    DWORD PTR [ebp+0xc]
1004d65b:	call   0x1004d617
1004d660:	cmp    DWORD PTR [esi],0xffffffff
1004d663:	je     0x1004d66b
1004d665:	cmp    DWORD PTR [ebp+0xc],0x0
1004d669:	jg     0x1004d652
1004d66b:	pop    esi
1004d66c:	pop    ebp
1004d66d:	ret    
1004d66e:	test   BYTE PTR [edi+0xc],0x40
1004d672:	push   ebx
1004d673:	push   esi
1004d674:	mov    esi,eax
1004d676:	mov    ebx,ecx
1004d678:	je     0x1004d6ae
1004d67a:	cmp    DWORD PTR [edi+0x8],0x0
1004d67e:	jne    0x1004d6ae
1004d680:	mov    eax,DWORD PTR [esp+0xc]
1004d684:	add    DWORD PTR [esi],eax
1004d686:	jmp    0x1004d6b5
1004d688:	mov    al,BYTE PTR [ebx]
1004d68a:	dec    DWORD PTR [esp+0xc]
1004d68e:	mov    ecx,edi
1004d690:	call   0x1004d617
1004d695:	inc    ebx
1004d696:	cmp    DWORD PTR [esi],0xffffffff
1004d699:	jne    0x1004d6ae
1004d69b:	call   0x10046df5
1004d6a0:	cmp    DWORD PTR [eax],0x2a
1004d6a3:	jne    0x1004d6b5
1004d6a5:	mov    ecx,edi
1004d6a7:	mov    al,0x3f
1004d6a9:	call   0x1004d617
1004d6ae:	cmp    DWORD PTR [esp+0xc],0x0
1004d6b3:	jg     0x1004d688
1004d6b5:	pop    esi
1004d6b6:	pop    ebx
1004d6b7:	ret    
1004d6b8:	push   ebp
1004d6b9:	lea    ebp,[esp-0x1f8]
1004d6c0:	sub    esp,0x278
1004d6c6:	mov    eax,ds:0x1007e030
1004d6cb:	xor    eax,ebp
1004d6cd:	mov    DWORD PTR [ebp+0x1f4],eax
1004d6d3:	mov    eax,DWORD PTR [ebp+0x200]
1004d6d9:	push   ebx
1004d6da:	mov    ebx,DWORD PTR [ebp+0x204]
1004d6e0:	push   esi
1004d6e1:	xor    esi,esi
1004d6e3:	push   edi
1004d6e4:	mov    edi,DWORD PTR [ebp+0x20c]
1004d6ea:	push   DWORD PTR [ebp+0x208]
1004d6f0:	lea    ecx,[ebp-0x64]
1004d6f3:	mov    DWORD PTR [ebp-0x30],eax
1004d6f6:	mov    DWORD PTR [ebp-0x2c],edi
1004d6f9:	mov    DWORD PTR [ebp-0x4c],esi
1004d6fc:	mov    DWORD PTR [ebp-0x18],esi
1004d6ff:	mov    DWORD PTR [ebp-0x40],esi
1004d702:	mov    DWORD PTR [ebp-0x20],esi
1004d705:	mov    DWORD PTR [ebp-0x3c],esi
1004d708:	mov    DWORD PTR [ebp-0x50],esi
1004d70b:	mov    DWORD PTR [ebp-0x44],esi
1004d70e:	call   0x10045785
1004d713:	cmp    DWORD PTR [ebp-0x30],esi
1004d716:	jne    0x1004d745
1004d718:	call   0x10046df5
1004d71d:	push   esi
1004d71e:	push   esi
1004d71f:	push   esi
1004d720:	push   esi
1004d721:	mov    DWORD PTR [eax],0x16
1004d727:	push   esi
1004d728:	call   0x100435cc
1004d72d:	add    esp,0x14
1004d730:	cmp    BYTE PTR [ebp-0x58],0x0
1004d734:	je     0x1004d73d
1004d736:	mov    eax,DWORD PTR [ebp-0x5c]
1004d739:	and    DWORD PTR [eax+0x70],0xfffffffd
1004d73d:	or     eax,0xffffffff
1004d740:	jmp    0x1004e015
1004d745:	mov    eax,DWORD PTR [ebp-0x30]
1004d748:	test   BYTE PTR [eax+0xc],0x40
1004d74c:	jne    0x1004d7f6
1004d752:	push   eax
1004d753:	call   0x1004d40c
1004d758:	cmp    eax,0xffffffff
1004d75b:	pop    ecx
1004d75c:	je     0x1004d794
1004d75e:	push   DWORD PTR [ebp-0x30]
1004d761:	call   0x1004d40c
1004d766:	cmp    eax,0xfffffffe
1004d769:	pop    ecx
1004d76a:	je     0x1004d794
1004d76c:	push   DWORD PTR [ebp-0x30]
1004d76f:	call   0x1004d40c
1004d774:	push   DWORD PTR [ebp-0x30]
1004d777:	sar    eax,0x5
1004d77a:	lea    esi,[eax*4+0x10082480]
1004d781:	call   0x1004d40c
1004d786:	and    eax,0x1f
1004d789:	imul   eax,eax,0x28
1004d78c:	add    eax,DWORD PTR [esi]
1004d78e:	pop    ecx
1004d78f:	pop    ecx
1004d790:	xor    esi,esi
1004d792:	jmp    0x1004d799
1004d794:	mov    eax,0x1007e9d0
1004d799:	test   BYTE PTR [eax+0x24],0x7f
1004d79d:	jne    0x1004d718
1004d7a3:	push   DWORD PTR [ebp-0x30]
1004d7a6:	call   0x1004d40c
1004d7ab:	cmp    eax,0xffffffff
1004d7ae:	pop    ecx
1004d7af:	je     0x1004d7e7
1004d7b1:	push   DWORD PTR [ebp-0x30]
1004d7b4:	call   0x1004d40c
1004d7b9:	cmp    eax,0xfffffffe
1004d7bc:	pop    ecx
1004d7bd:	je     0x1004d7e7
1004d7bf:	push   DWORD PTR [ebp-0x30]
1004d7c2:	call   0x1004d40c
1004d7c7:	push   DWORD PTR [ebp-0x30]
1004d7ca:	sar    eax,0x5
1004d7cd:	lea    esi,[eax*4+0x10082480]
1004d7d4:	call   0x1004d40c
1004d7d9:	and    eax,0x1f
1004d7dc:	imul   eax,eax,0x28
1004d7df:	add    eax,DWORD PTR [esi]
1004d7e1:	pop    ecx
1004d7e2:	pop    ecx
1004d7e3:	xor    esi,esi
1004d7e5:	jmp    0x1004d7ec
1004d7e7:	mov    eax,0x1007e9d0
1004d7ec:	test   BYTE PTR [eax+0x24],0x80
1004d7f0:	jne    0x1004d718
1004d7f6:	cmp    ebx,esi
1004d7f8:	je     0x1004d718
1004d7fe:	mov    dl,BYTE PTR [ebx]
1004d800:	xor    ecx,ecx
1004d802:	test   dl,dl
1004d804:	mov    DWORD PTR [ebp-0x34],esi
1004d807:	mov    DWORD PTR [ebp-0x28],esi
1004d80a:	mov    DWORD PTR [ebp-0x54],esi
1004d80d:	mov    BYTE PTR [ebp-0x19],dl
1004d810:	je     0x1004e005
1004d816:	inc    ebx
1004d817:	cmp    DWORD PTR [ebp-0x34],0x0
1004d81b:	mov    DWORD PTR [ebp-0x48],ebx
1004d81e:	jl     0x1004e005
1004d824:	mov    al,dl
1004d826:	sub    al,0x20
1004d828:	cmp    al,0x58
1004d82a:	ja     0x1004d83d
1004d82c:	movsx  eax,dl
1004d82f:	movzx  eax,BYTE PTR [eax+0x100673f8]
1004d836:	and    eax,0xf
1004d839:	xor    esi,esi
1004d83b:	jmp    0x1004d841
1004d83d:	xor    esi,esi
1004d83f:	xor    eax,eax
1004d841:	movsx  eax,BYTE PTR [ecx+eax*8+0x10067418]
1004d849:	push   0x7
1004d84b:	sar    eax,0x4
1004d84e:	pop    ecx
1004d84f:	cmp    eax,ecx
1004d851:	mov    DWORD PTR [ebp-0x74],eax
1004d854:	ja     0x1004dfd5
1004d85a:	jmp    DWORD PTR [eax*4+0x1004e030]
1004d861:	or     DWORD PTR [ebp-0x20],0xffffffff
1004d865:	mov    DWORD PTR [ebp-0x78],esi
1004d868:	mov    DWORD PTR [ebp-0x50],esi
1004d86b:	mov    DWORD PTR [ebp-0x40],esi
1004d86e:	mov    DWORD PTR [ebp-0x3c],esi
1004d871:	mov    DWORD PTR [ebp-0x18],esi
1004d874:	mov    DWORD PTR [ebp-0x44],esi
1004d877:	jmp    0x1004dfd5
1004d87c:	movsx  eax,dl
1004d87f:	sub    eax,0x20
1004d882:	je     0x1004d8c2
1004d884:	sub    eax,0x3
1004d887:	je     0x1004d8b6
1004d889:	sub    eax,0x8
1004d88c:	je     0x1004d8ad
1004d88e:	dec    eax
1004d88f:	dec    eax
1004d890:	je     0x1004d8a4
1004d892:	sub    eax,0x3
1004d895:	jne    0x1004dfd5
1004d89b:	or     DWORD PTR [ebp-0x18],0x8
1004d89f:	jmp    0x1004dfd5
1004d8a4:	or     DWORD PTR [ebp-0x18],0x4
1004d8a8:	jmp    0x1004dfd5
1004d8ad:	or     DWORD PTR [ebp-0x18],0x1
1004d8b1:	jmp    0x1004dfd5
1004d8b6:	or     DWORD PTR [ebp-0x18],0x80
1004d8bd:	jmp    0x1004dfd5
1004d8c2:	or     DWORD PTR [ebp-0x18],0x2
1004d8c6:	jmp    0x1004dfd5
1004d8cb:	cmp    dl,0x2a
1004d8ce:	jne    0x1004d8f0
1004d8d0:	add    edi,0x4
1004d8d3:	mov    DWORD PTR [ebp-0x2c],edi
1004d8d6:	mov    edi,DWORD PTR [edi-0x4]
1004d8d9:	cmp    edi,esi
1004d8db:	mov    DWORD PTR [ebp-0x40],edi
1004d8de:	jge    0x1004dfd5
1004d8e4:	or     DWORD PTR [ebp-0x18],0x4
1004d8e8:	neg    DWORD PTR [ebp-0x40]
1004d8eb:	jmp    0x1004dfd5
1004d8f0:	mov    eax,DWORD PTR [ebp-0x40]
1004d8f3:	imul   eax,eax,0xa
1004d8f6:	movsx  ecx,dl
1004d8f9:	lea    eax,[eax+ecx*1-0x30]
1004d8fd:	mov    DWORD PTR [ebp-0x40],eax
1004d900:	jmp    0x1004dfd5
1004d905:	mov    DWORD PTR [ebp-0x20],esi
1004d908:	jmp    0x1004dfd5
1004d90d:	cmp    dl,0x2a
1004d910:	jne    0x1004d92f
1004d912:	add    edi,0x4
1004d915:	mov    DWORD PTR [ebp-0x2c],edi
1004d918:	mov    edi,DWORD PTR [edi-0x4]
1004d91b:	cmp    edi,esi
1004d91d:	mov    DWORD PTR [ebp-0x20],edi
1004d920:	jge    0x1004dfd5
1004d926:	or     DWORD PTR [ebp-0x20],0xffffffff
1004d92a:	jmp    0x1004dfd5
1004d92f:	mov    eax,DWORD PTR [ebp-0x20]
1004d932:	imul   eax,eax,0xa
1004d935:	movsx  ecx,dl
1004d938:	lea    eax,[eax+ecx*1-0x30]
1004d93c:	mov    DWORD PTR [ebp-0x20],eax
1004d93f:	jmp    0x1004dfd5
1004d944:	cmp    dl,0x49
1004d947:	je     0x1004d98f
1004d949:	cmp    dl,0x68
1004d94c:	je     0x1004d986
1004d94e:	cmp    dl,0x6c
1004d951:	je     0x1004d968
1004d953:	cmp    dl,0x77
1004d956:	jne    0x1004dfd5
1004d95c:	or     DWORD PTR [ebp-0x18],0x800
1004d963:	jmp    0x1004dfd5
1004d968:	cmp    BYTE PTR [ebx],0x6c
1004d96b:	jne    0x1004d97d
1004d96d:	inc    ebx
1004d96e:	or     DWORD PTR [ebp-0x18],0x1000
1004d975:	mov    DWORD PTR [ebp-0x48],ebx
1004d978:	jmp    0x1004dfd5
1004d97d:	or     DWORD PTR [ebp-0x18],0x10
1004d981:	jmp    0x1004dfd5
1004d986:	or     DWORD PTR [ebp-0x18],0x20
1004d98a:	jmp    0x1004dfd5
1004d98f:	mov    al,BYTE PTR [ebx]
1004d991:	cmp    al,0x36
1004d993:	jne    0x1004d9ac
1004d995:	cmp    BYTE PTR [ebx+0x1],0x34
1004d999:	jne    0x1004d9ac
1004d99b:	inc    ebx
1004d99c:	inc    ebx
1004d99d:	or     DWORD PTR [ebp-0x18],0x8000
1004d9a4:	mov    DWORD PTR [ebp-0x48],ebx
1004d9a7:	jmp    0x1004dfd5
1004d9ac:	cmp    al,0x33
1004d9ae:	jne    0x1004d9c7
1004d9b0:	cmp    BYTE PTR [ebx+0x1],0x32
1004d9b4:	jne    0x1004d9c7
1004d9b6:	inc    ebx
1004d9b7:	inc    ebx
1004d9b8:	and    DWORD PTR [ebp-0x18],0xffff7fff
1004d9bf:	mov    DWORD PTR [ebp-0x48],ebx
1004d9c2:	jmp    0x1004dfd5
1004d9c7:	cmp    al,0x64
1004d9c9:	je     0x1004dfd5
1004d9cf:	cmp    al,0x69
1004d9d1:	je     0x1004dfd5
1004d9d7:	cmp    al,0x6f
1004d9d9:	je     0x1004dfd5
1004d9df:	cmp    al,0x75
1004d9e1:	je     0x1004dfd5
1004d9e7:	cmp    al,0x78
1004d9e9:	je     0x1004dfd5
1004d9ef:	cmp    al,0x58
1004d9f1:	je     0x1004dfd5
1004d9f7:	mov    DWORD PTR [ebp-0x74],esi
1004d9fa:	lea    eax,[ebp-0x64]
1004d9fd:	push   eax
1004d9fe:	movzx  eax,dl
1004da01:	push   eax
1004da02:	mov    DWORD PTR [ebp-0x44],esi
1004da05:	call   0x1004b55f
1004da0a:	pop    ecx
1004da0b:	test   eax,eax
1004da0d:	mov    al,BYTE PTR [ebp-0x19]
1004da10:	pop    ecx
1004da11:	je     0x1004da2c
1004da13:	mov    ecx,DWORD PTR [ebp-0x30]
1004da16:	lea    esi,[ebp-0x34]
1004da19:	call   0x1004d617
1004da1e:	mov    al,BYTE PTR [ebx]
1004da20:	inc    ebx
1004da21:	test   al,al
1004da23:	mov    DWORD PTR [ebp-0x48],ebx
1004da26:	je     0x1004dfee
1004da2c:	mov    ecx,DWORD PTR [ebp-0x30]
1004da2f:	lea    esi,[ebp-0x34]
1004da32:	call   0x1004d617
1004da37:	jmp    0x1004dfd5
1004da3c:	movsx  eax,dl
1004da3f:	cmp    eax,0x64
1004da42:	jg     0x1004dbba
1004da48:	je     0x1004dc39
1004da4e:	cmp    eax,0x53
1004da51:	jg     0x1004db02
1004da57:	je     0x1004dab3
1004da59:	sub    eax,0x41
1004da5c:	je     0x1004da6e
1004da5e:	dec    eax
1004da5f:	dec    eax
1004da60:	je     0x1004daa2
1004da62:	dec    eax
1004da63:	dec    eax
1004da64:	je     0x1004da6e
1004da66:	dec    eax
1004da67:	dec    eax
1004da68:	jne    0x1004debd
1004da6e:	add    dl,0x20
1004da71:	mov    DWORD PTR [ebp-0x78],0x1
1004da78:	mov    BYTE PTR [ebp-0x19],dl
1004da7b:	or     DWORD PTR [ebp-0x18],0x40
1004da7f:	cmp    DWORD PTR [ebp-0x20],esi
1004da82:	lea    ebx,[ebp-0x14]
1004da85:	mov    eax,0x200
1004da8a:	mov    DWORD PTR [ebp-0x24],ebx
1004da8d:	mov    DWORD PTR [ebp-0x68],eax
1004da90:	jge    0x1004dc5d
1004da96:	mov    DWORD PTR [ebp-0x20],0x6
1004da9d:	jmp    0x1004dcab
1004daa2:	test   WORD PTR [ebp-0x18],0x830
1004daa8:	jne    0x1004db1f
1004daaa:	or     DWORD PTR [ebp-0x18],0x800
1004dab1:	jmp    0x1004db1f
1004dab3:	test   WORD PTR [ebp-0x18],0x830
1004dab9:	jne    0x1004dac2
1004dabb:	or     DWORD PTR [ebp-0x18],0x800
1004dac2:	mov    ecx,DWORD PTR [ebp-0x20]
1004dac5:	cmp    ecx,0xffffffff
1004dac8:	jne    0x1004dacf
1004daca:	mov    ecx,0x7fffffff
1004dacf:	add    edi,0x4
1004dad2:	test   WORD PTR [ebp-0x18],0x810
1004dad8:	mov    DWORD PTR [ebp-0x2c],edi
1004dadb:	mov    edi,DWORD PTR [edi-0x4]
1004dade:	mov    DWORD PTR [ebp-0x24],edi
1004dae1:	je     0x1004de9b
1004dae7:	cmp    edi,esi
1004dae9:	jne    0x1004daf3
1004daeb:	mov    eax,ds:0x1007ed2c
1004daf0:	mov    DWORD PTR [ebp-0x24],eax
1004daf3:	mov    eax,DWORD PTR [ebp-0x24]
1004daf6:	mov    DWORD PTR [ebp-0x44],0x1
1004dafd:	jmp    0x1004de90
1004db02:	sub    eax,0x58
1004db05:	je     0x1004dd44
1004db0b:	dec    eax
1004db0c:	dec    eax
1004db0d:	je     0x1004db6c
1004db0f:	sub    eax,ecx
1004db11:	je     0x1004da7b
1004db17:	dec    eax
1004db18:	dec    eax
1004db19:	jne    0x1004debd
1004db1f:	add    edi,0x4
1004db22:	test   WORD PTR [ebp-0x18],0x810
1004db28:	mov    DWORD PTR [ebp-0x2c],edi
1004db2b:	je     0x1004db54
1004db2d:	movzx  eax,WORD PTR [edi-0x4]
1004db31:	push   eax
1004db32:	push   0x200
1004db37:	lea    eax,[ebp-0x14]
1004db3a:	push   eax
1004db3b:	lea    eax,[ebp-0x28]
1004db3e:	push   eax
1004db3f:	call   0x10050488
1004db44:	add    esp,0x10
1004db47:	test   eax,eax
1004db49:	je     0x1004db61
1004db4b:	mov    DWORD PTR [ebp-0x50],0x1
1004db52:	jmp    0x1004db61
1004db54:	mov    al,BYTE PTR [edi-0x4]
1004db57:	mov    BYTE PTR [ebp-0x14],al
1004db5a:	mov    DWORD PTR [ebp-0x28],0x1
1004db61:	lea    eax,[ebp-0x14]
1004db64:	mov    DWORD PTR [ebp-0x24],eax
1004db67:	jmp    0x1004debd
1004db6c:	mov    eax,DWORD PTR [edi]
1004db6e:	add    edi,0x4
1004db71:	cmp    eax,esi
1004db73:	mov    DWORD PTR [ebp-0x2c],edi
1004db76:	je     0x1004dba6
1004db78:	mov    ecx,DWORD PTR [eax+0x4]
1004db7b:	cmp    ecx,esi
1004db7d:	je     0x1004dba6
1004db7f:	test   WORD PTR [ebp-0x18],0x800
1004db85:	movsx  eax,WORD PTR [eax]
1004db88:	mov    DWORD PTR [ebp-0x24],ecx
1004db8b:	je     0x1004db9e
1004db8d:	cdq    
1004db8e:	sub    eax,edx
1004db90:	sar    eax,1
1004db92:	mov    DWORD PTR [ebp-0x44],0x1
1004db99:	jmp    0x1004deba
1004db9e:	mov    DWORD PTR [ebp-0x44],esi
1004dba1:	jmp    0x1004deba
1004dba6:	mov    eax,ds:0x1007ed28
1004dbab:	mov    DWORD PTR [ebp-0x24],eax
1004dbae:	push   eax
1004dbaf:	call   0x10043250
1004dbb4:	pop    ecx
1004dbb5:	jmp    0x1004deba
1004dbba:	cmp    eax,0x70
1004dbbd:	jg     0x1004dd49
1004dbc3:	je     0x1004dd3d
1004dbc9:	cmp    eax,0x65
1004dbcc:	jl     0x1004debd
1004dbd2:	cmp    eax,0x67
1004dbd5:	jle    0x1004da7b
1004dbdb:	cmp    eax,0x69
1004dbde:	je     0x1004dc39
1004dbe0:	cmp    eax,0x6e
1004dbe3:	je     0x1004dc04
1004dbe5:	cmp    eax,0x6f
1004dbe8:	jne    0x1004debd
1004dbee:	test   BYTE PTR [ebp-0x18],0x80
1004dbf2:	mov    DWORD PTR [ebp-0x28],0x8
1004dbf9:	je     0x1004dc44
1004dbfb:	or     DWORD PTR [ebp-0x18],0x200
1004dc02:	jmp    0x1004dc44
1004dc04:	mov    esi,DWORD PTR [edi]
1004dc06:	add    edi,0x4
1004dc09:	mov    DWORD PTR [ebp-0x2c],edi
1004dc0c:	call   0x1004e050
1004dc11:	test   eax,eax
1004dc13:	je     0x1004dfee
1004dc19:	test   BYTE PTR [ebp-0x18],0x20
1004dc1d:	je     0x1004dc28
1004dc1f:	mov    ax,WORD PTR [ebp-0x34]
1004dc23:	mov    WORD PTR [esi],ax
1004dc26:	jmp    0x1004dc2d
1004dc28:	mov    eax,DWORD PTR [ebp-0x34]
1004dc2b:	mov    DWORD PTR [esi],eax
1004dc2d:	mov    DWORD PTR [ebp-0x50],0x1
1004dc34:	jmp    0x1004dfc2
1004dc39:	or     DWORD PTR [ebp-0x18],0x40
1004dc3d:	mov    DWORD PTR [ebp-0x28],0xa
1004dc44:	mov    ecx,DWORD PTR [ebp-0x18]
1004dc47:	test   cx,cx
1004dc4a:	jns    0x1004dd93
1004dc50:	mov    eax,DWORD PTR [edi]
1004dc52:	mov    edx,DWORD PTR [edi+0x4]
1004dc55:	add    edi,0x8
1004dc58:	jmp    0x1004ddc8
1004dc5d:	jne    0x1004dc6d
1004dc5f:	cmp    dl,0x67
1004dc62:	jne    0x1004dcab
1004dc64:	mov    DWORD PTR [ebp-0x20],0x1
1004dc6b:	jmp    0x1004dcab
1004dc6d:	cmp    DWORD PTR [ebp-0x20],eax
1004dc70:	jle    0x1004dc75
1004dc72:	mov    DWORD PTR [ebp-0x20],eax
1004dc75:	cmp    DWORD PTR [ebp-0x20],0xa3
1004dc7c:	jle    0x1004dcab
1004dc7e:	mov    esi,DWORD PTR [ebp-0x20]
1004dc81:	add    esi,0x15d
1004dc87:	push   esi
1004dc88:	call   0x100476c2
1004dc8d:	test   eax,eax
1004dc8f:	mov    dl,BYTE PTR [ebp-0x19]
1004dc92:	pop    ecx
1004dc93:	mov    DWORD PTR [ebp-0x54],eax
1004dc96:	je     0x1004dca2
1004dc98:	mov    DWORD PTR [ebp-0x24],eax
1004dc9b:	mov    DWORD PTR [ebp-0x68],esi
1004dc9e:	mov    ebx,eax
1004dca0:	jmp    0x1004dca9
1004dca2:	mov    DWORD PTR [ebp-0x20],0xa3
1004dca9:	xor    esi,esi
1004dcab:	mov    eax,DWORD PTR [edi]
1004dcad:	add    edi,0x8
1004dcb0:	mov    DWORD PTR [ebp-0x80],eax
1004dcb3:	mov    eax,DWORD PTR [edi-0x4]
1004dcb6:	mov    DWORD PTR [ebp-0x7c],eax
1004dcb9:	lea    eax,[ebp-0x64]
1004dcbc:	push   eax
1004dcbd:	push   DWORD PTR [ebp-0x78]
1004dcc0:	movsx  eax,dl
1004dcc3:	push   DWORD PTR [ebp-0x20]
1004dcc6:	mov    DWORD PTR [ebp-0x2c],edi
1004dcc9:	push   eax
1004dcca:	push   DWORD PTR [ebp-0x68]
1004dccd:	lea    eax,[ebp-0x80]
1004dcd0:	push   ebx
1004dcd1:	push   eax
1004dcd2:	push   DWORD PTR ds:0x1007ea98
1004dcd8:	call   0x10047192
1004dcdd:	pop    ecx
1004dcde:	call   eax
1004dce0:	mov    edi,DWORD PTR [ebp-0x18]
1004dce3:	add    esp,0x1c
1004dce6:	and    edi,0x80
1004dcec:	je     0x1004dd08
1004dcee:	cmp    DWORD PTR [ebp-0x20],esi
1004dcf1:	jne    0x1004dd08
1004dcf3:	lea    eax,[ebp-0x64]
1004dcf6:	push   eax
1004dcf7:	push   ebx
1004dcf8:	push   DWORD PTR ds:0x1007eaa4
1004dcfe:	call   0x10047192
1004dd03:	pop    ecx
1004dd04:	call   eax
1004dd06:	pop    ecx
1004dd07:	pop    ecx
1004dd08:	cmp    BYTE PTR [ebp-0x19],0x67
1004dd0c:	jne    0x1004dd27
1004dd0e:	cmp    edi,esi
1004dd10:	jne    0x1004dd27
1004dd12:	lea    eax,[ebp-0x64]
1004dd15:	push   eax
1004dd16:	push   ebx
1004dd17:	push   DWORD PTR ds:0x1007eaa0
1004dd1d:	call   0x10047192
1004dd22:	pop    ecx
1004dd23:	call   eax
1004dd25:	pop    ecx
1004dd26:	pop    ecx
1004dd27:	cmp    BYTE PTR [ebx],0x2d
1004dd2a:	jne    0x1004dd37
1004dd2c:	or     DWORD PTR [ebp-0x18],0x100
1004dd33:	inc    ebx
1004dd34:	mov    DWORD PTR [ebp-0x24],ebx
1004dd37:	push   ebx
1004dd38:	jmp    0x1004dbaf
1004dd3d:	mov    DWORD PTR [ebp-0x20],0x8
1004dd44:	mov    DWORD PTR [ebp-0x4c],ecx
1004dd47:	jmp    0x1004dd6a
1004dd49:	sub    eax,0x73
1004dd4c:	je     0x1004dac2
1004dd52:	dec    eax
1004dd53:	dec    eax
1004dd54:	je     0x1004dc3d
1004dd5a:	sub    eax,0x3
1004dd5d:	jne    0x1004debd
1004dd63:	mov    DWORD PTR [ebp-0x4c],0x27
1004dd6a:	test   BYTE PTR [ebp-0x18],0x80
1004dd6e:	mov    DWORD PTR [ebp-0x28],0x10
1004dd75:	je     0x1004dc44
1004dd7b:	mov    al,BYTE PTR [ebp-0x4c]
1004dd7e:	add    al,0x51
1004dd80:	mov    BYTE PTR [ebp-0x38],0x30
1004dd84:	mov    BYTE PTR [ebp-0x37],al
1004dd87:	mov    DWORD PTR [ebp-0x3c],0x2
1004dd8e:	jmp    0x1004dc44
1004dd93:	test   cx,0x1000
1004dd98:	jne    0x1004dc50
1004dd9e:	add    edi,0x4
1004dda1:	test   cl,0x20
1004dda4:	je     0x1004ddbb
1004dda6:	test   cl,0x40
1004dda9:	mov    DWORD PTR [ebp-0x2c],edi
1004ddac:	je     0x1004ddb4
1004ddae:	movsx  eax,WORD PTR [edi-0x4]
1004ddb2:	jmp    0x1004ddb8
1004ddb4:	movzx  eax,WORD PTR [edi-0x4]
1004ddb8:	cdq    
1004ddb9:	jmp    0x1004ddcb
1004ddbb:	test   cl,0x40
1004ddbe:	mov    eax,DWORD PTR [edi-0x4]
1004ddc1:	je     0x1004ddc6
1004ddc3:	cdq    
1004ddc4:	jmp    0x1004ddc8
1004ddc6:	xor    edx,edx
1004ddc8:	mov    DWORD PTR [ebp-0x2c],edi
1004ddcb:	test   cl,0x40
1004ddce:	je     0x1004dde8
1004ddd0:	cmp    edx,esi
1004ddd2:	jg     0x1004dde8
1004ddd4:	jl     0x1004ddda
1004ddd6:	cmp    eax,esi
1004ddd8:	jae    0x1004dde8
1004ddda:	neg    eax
1004dddc:	adc    edx,0x0
1004dddf:	neg    edx
1004dde1:	or     DWORD PTR [ebp-0x18],0x100
1004dde8:	test   WORD PTR [ebp-0x18],0x9000
1004ddee:	mov    ebx,edx
1004ddf0:	mov    edi,eax
1004ddf2:	jne    0x1004ddf6
1004ddf4:	xor    ebx,ebx
1004ddf6:	cmp    DWORD PTR [ebp-0x20],0x0
1004ddfa:	jge    0x1004de05
1004ddfc:	mov    DWORD PTR [ebp-0x20],0x1
1004de03:	jmp    0x1004de16
1004de05:	and    DWORD PTR [ebp-0x18],0xfffffff7
1004de09:	mov    eax,0x200
1004de0e:	cmp    DWORD PTR [ebp-0x20],eax
1004de11:	jle    0x1004de16
1004de13:	mov    DWORD PTR [ebp-0x20],eax
1004de16:	mov    eax,edi
1004de18:	or     eax,ebx
1004de1a:	jne    0x1004de20
1004de1c:	and    DWORD PTR [ebp-0x3c],0x0
1004de20:	lea    esi,[ebp+0x1eb]
1004de26:	mov    eax,DWORD PTR [ebp-0x20]
1004de29:	dec    DWORD PTR [ebp-0x20]
1004de2c:	test   eax,eax
1004de2e:	jg     0x1004de36
1004de30:	mov    eax,edi
1004de32:	or     eax,ebx
1004de34:	je     0x1004de5a
1004de36:	mov    eax,DWORD PTR [ebp-0x28]
1004de39:	cdq    
1004de3a:	push   edx
1004de3b:	push   eax
1004de3c:	push   ebx
1004de3d:	push   edi
1004de3e:	call   0x1004ac90
1004de43:	add    ecx,0x30
1004de46:	cmp    ecx,0x39
1004de49:	mov    DWORD PTR [ebp-0x68],ebx
1004de4c:	mov    edi,eax
1004de4e:	mov    ebx,edx
1004de50:	jle    0x1004de55
1004de52:	add    ecx,DWORD PTR [ebp-0x4c]
1004de55:	mov    BYTE PTR [esi],cl
1004de57:	dec    esi
1004de58:	jmp    0x1004de26
1004de5a:	lea    eax,[ebp+0x1eb]
1004de60:	sub    eax,esi
1004de62:	inc    esi
1004de63:	test   WORD PTR [ebp-0x18],0x200
1004de69:	mov    DWORD PTR [ebp-0x28],eax
1004de6c:	mov    DWORD PTR [ebp-0x24],esi
1004de6f:	je     0x1004debd
1004de71:	test   eax,eax
1004de73:	je     0x1004de7c
1004de75:	mov    ecx,esi
1004de77:	cmp    BYTE PTR [ecx],0x30
1004de7a:	je     0x1004debd
1004de7c:	dec    DWORD PTR [ebp-0x24]
1004de7f:	mov    ecx,DWORD PTR [ebp-0x24]
1004de82:	mov    BYTE PTR [ecx],0x30
1004de85:	inc    eax
1004de86:	jmp    0x1004deba
1004de88:	dec    ecx
1004de89:	cmp    WORD PTR [eax],si
1004de8c:	je     0x1004de94
1004de8e:	inc    eax
1004de8f:	inc    eax
1004de90:	cmp    ecx,esi
1004de92:	jne    0x1004de88
1004de94:	sub    eax,DWORD PTR [ebp-0x24]
1004de97:	sar    eax,1
1004de99:	jmp    0x1004deba
1004de9b:	cmp    edi,esi
1004de9d:	jne    0x1004dea7
1004de9f:	mov    eax,ds:0x1007ed28
1004dea4:	mov    DWORD PTR [ebp-0x24],eax
1004dea7:	mov    eax,DWORD PTR [ebp-0x24]
1004deaa:	jmp    0x1004deb3
1004deac:	dec    ecx
1004dead:	cmp    BYTE PTR [eax],0x0
1004deb0:	je     0x1004deb7
1004deb2:	inc    eax
1004deb3:	cmp    ecx,esi
1004deb5:	jne    0x1004deac
1004deb7:	sub    eax,DWORD PTR [ebp-0x24]
1004deba:	mov    DWORD PTR [ebp-0x28],eax
1004debd:	cmp    DWORD PTR [ebp-0x50],0x0
1004dec1:	jne    0x1004dfc2
1004dec7:	mov    eax,DWORD PTR [ebp-0x18]
1004deca:	test   al,0x40
1004decc:	je     0x1004def3
1004dece:	test   ax,0x100
1004ded2:	je     0x1004deda
1004ded4:	mov    BYTE PTR [ebp-0x38],0x2d
1004ded8:	jmp    0x1004deec
1004deda:	test   al,0x1
1004dedc:	je     0x1004dee4
1004dede:	mov    BYTE PTR [ebp-0x38],0x2b
1004dee2:	jmp    0x1004deec
1004dee4:	test   al,0x2
1004dee6:	je     0x1004def3
1004dee8:	mov    BYTE PTR [ebp-0x38],0x20
1004deec:	mov    DWORD PTR [ebp-0x3c],0x1
1004def3:	mov    ebx,DWORD PTR [ebp-0x40]
1004def6:	sub    ebx,DWORD PTR [ebp-0x28]
1004def9:	sub    ebx,DWORD PTR [ebp-0x3c]
1004defc:	test   BYTE PTR [ebp-0x18],0xc
1004df00:	jne    0x1004df13
1004df02:	push   DWORD PTR [ebp-0x30]
1004df05:	lea    eax,[ebp-0x34]
1004df08:	push   ebx
1004df09:	push   0x20
1004df0b:	call   0x1004d64a
1004df10:	add    esp,0xc
1004df13:	push   DWORD PTR [ebp-0x3c]
1004df16:	mov    edi,DWORD PTR [ebp-0x30]
1004df19:	lea    eax,[ebp-0x34]
1004df1c:	lea    ecx,[ebp-0x38]
1004df1f:	call   0x1004d66e
1004df24:	test   BYTE PTR [ebp-0x18],0x8
1004df28:	pop    ecx
1004df29:	je     0x1004df40
1004df2b:	test   BYTE PTR [ebp-0x18],0x4
1004df2f:	jne    0x1004df40
1004df31:	push   edi
1004df32:	push   ebx
1004df33:	push   0x30
1004df35:	lea    eax,[ebp-0x34]
1004df38:	call   0x1004d64a
1004df3d:	add    esp,0xc
1004df40:	cmp    DWORD PTR [ebp-0x44],0x0
1004df44:	mov    eax,DWORD PTR [ebp-0x28]
1004df47:	je     0x1004df9a
1004df49:	test   eax,eax
1004df4b:	jle    0x1004df9a
1004df4d:	mov    esi,DWORD PTR [ebp-0x24]
1004df50:	mov    DWORD PTR [ebp-0x68],eax
1004df53:	movzx  eax,WORD PTR [esi]
1004df56:	dec    DWORD PTR [ebp-0x68]
1004df59:	push   eax
1004df5a:	push   0x6
1004df5c:	lea    eax,[ebp+0x1ec]
1004df62:	push   eax
1004df63:	lea    eax,[ebp-0x70]
1004df66:	inc    esi
1004df67:	push   eax
1004df68:	inc    esi
1004df69:	call   0x10050488
1004df6e:	add    esp,0x10
1004df71:	test   eax,eax
1004df73:	jne    0x1004df94
1004df75:	cmp    DWORD PTR [ebp-0x70],eax
1004df78:	je     0x1004df94
1004df7a:	push   DWORD PTR [ebp-0x70]
1004df7d:	lea    eax,[ebp-0x34]
1004df80:	lea    ecx,[ebp+0x1ec]
1004df86:	call   0x1004d66e
1004df8b:	cmp    DWORD PTR [ebp-0x68],0x0
1004df8f:	pop    ecx
1004df90:	jne    0x1004df53
1004df92:	jmp    0x1004dfa7
1004df94:	or     DWORD PTR [ebp-0x34],0xffffffff
1004df98:	jmp    0x1004dfa7
1004df9a:	mov    ecx,DWORD PTR [ebp-0x24]
1004df9d:	push   eax
1004df9e:	lea    eax,[ebp-0x34]
1004dfa1:	call   0x1004d66e
1004dfa6:	pop    ecx
1004dfa7:	cmp    DWORD PTR [ebp-0x34],0x0
1004dfab:	jl     0x1004dfc2
1004dfad:	test   BYTE PTR [ebp-0x18],0x4
1004dfb1:	je     0x1004dfc2
1004dfb3:	push   edi
1004dfb4:	push   ebx
1004dfb5:	push   0x20
1004dfb7:	lea    eax,[ebp-0x34]
1004dfba:	call   0x1004d64a
1004dfbf:	add    esp,0xc
1004dfc2:	cmp    DWORD PTR [ebp-0x54],0x0
1004dfc6:	je     0x1004dfd5
1004dfc8:	push   DWORD PTR [ebp-0x54]
1004dfcb:	call   0x10043748
1004dfd0:	and    DWORD PTR [ebp-0x54],0x0
1004dfd4:	pop    ecx
1004dfd5:	mov    ebx,DWORD PTR [ebp-0x48]
1004dfd8:	mov    al,BYTE PTR [ebx]
1004dfda:	test   al,al
1004dfdc:	mov    BYTE PTR [ebp-0x19],al
1004dfdf:	je     0x1004e005
1004dfe1:	mov    ecx,DWORD PTR [ebp-0x74]
1004dfe4:	mov    edi,DWORD PTR [ebp-0x2c]
1004dfe7:	mov    dl,al
1004dfe9:	jmp    0x1004d816
1004dfee:	call   0x10046df5
1004dff3:	mov    DWORD PTR [eax],0x16
1004dff9:	xor    eax,eax
1004dffb:	push   eax
1004dffc:	push   eax
1004dffd:	push   eax
1004dffe:	push   eax
1004dfff:	push   eax
1004e000:	jmp    0x1004d728
1004e005:	cmp    BYTE PTR [ebp-0x58],0x0
1004e009:	je     0x1004e012
1004e00b:	mov    eax,DWORD PTR [ebp-0x5c]
1004e00e:	and    DWORD PTR [eax+0x70],0xfffffffd
1004e012:	mov    eax,DWORD PTR [ebp-0x34]
1004e015:	mov    ecx,DWORD PTR [ebp+0x1f4]
1004e01b:	pop    edi
1004e01c:	pop    esi
1004e01d:	xor    ecx,ebp
1004e01f:	pop    ebx
1004e020:	call   0x100430d7
1004e025:	add    ebp,0x1f8
1004e02b:	leave  
1004e02c:	ret    
1004e02d:	lea    ecx,[ecx+0x0]
1004e030:	cli    
1004e031:	fld    DWORD PTR [eax+edx*1]
1004e034:	popa   
1004e035:	fadd   DWORD PTR [eax+edx*1]
1004e038:	jl     0x1004e012
1004e03a:	add    al,0x10
1004e03c:	retf   
1004e03d:	fadd   DWORD PTR [eax+edx*1]
1004e040:	add    eax,0xd1004d9
1004e045:	fld    DWORD PTR [eax+edx*1]
1004e048:	inc    esp
1004e049:	fld    DWORD PTR [eax+edx*1]
1004e04c:	cmp    al,0xda
1004e04e:	add    al,0x10
1004e050:	mov    eax,ds:0x1007e030
1004e055:	or     eax,0x1
1004e058:	xor    ecx,ecx
1004e05a:	cmp    DWORD PTR ds:0x10080470,eax
1004e060:	sete   cl
1004e063:	mov    eax,ecx
1004e065:	ret    
1004e066:	push   ebp
1004e067:	mov    ebp,esp
1004e069:	sub    esp,0x10
1004e06c:	push   ebx
1004e06d:	push   esi
1004e06e:	mov    esi,DWORD PTR [ebp+0xc]
1004e071:	xor    ebx,ebx
1004e073:	cmp    esi,ebx
1004e075:	je     0x1004e08a
1004e077:	cmp    DWORD PTR [ebp+0x10],ebx
1004e07a:	je     0x1004e08a
1004e07c:	cmp    BYTE PTR [esi],bl
1004e07e:	jne    0x1004e090
1004e080:	mov    eax,DWORD PTR [ebp+0x8]
1004e083:	cmp    eax,ebx
1004e085:	je     0x1004e08a
1004e087:	mov    WORD PTR [eax],bx
1004e08a:	xor    eax,eax
1004e08c:	pop    esi
1004e08d:	pop    ebx
1004e08e:	leave  
1004e08f:	ret    
1004e090:	push   DWORD PTR [ebp+0x14]
1004e093:	lea    ecx,[ebp-0x10]
1004e096:	call   0x10045785
1004e09b:	mov    eax,DWORD PTR [ebp-0x10]
1004e09e:	cmp    DWORD PTR [eax+0x14],ebx
1004e0a1:	jne    0x1004e0c2
1004e0a3:	mov    eax,DWORD PTR [ebp+0x8]
1004e0a6:	cmp    eax,ebx
1004e0a8:	je     0x1004e0b1
1004e0aa:	movzx  cx,BYTE PTR [esi]
1004e0ae:	mov    WORD PTR [eax],cx
1004e0b1:	cmp    BYTE PTR [ebp-0x4],bl
1004e0b4:	je     0x1004e0bd
1004e0b6:	mov    eax,DWORD PTR [ebp-0x8]
1004e0b9:	and    DWORD PTR [eax+0x70],0xfffffffd
1004e0bd:	xor    eax,eax
1004e0bf:	inc    eax
1004e0c0:	jmp    0x1004e08c
1004e0c2:	lea    eax,[ebp-0x10]
1004e0c5:	push   eax
1004e0c6:	movzx  eax,BYTE PTR [esi]
1004e0c9:	push   eax
1004e0ca:	call   0x1004b55f
1004e0cf:	test   eax,eax
1004e0d1:	pop    ecx
1004e0d2:	pop    ecx
1004e0d3:	je     0x1004e152
1004e0d5:	mov    eax,DWORD PTR [ebp-0x10]
1004e0d8:	mov    ecx,DWORD PTR [eax+0xac]
1004e0de:	cmp    ecx,0x1
1004e0e1:	jle    0x1004e108
1004e0e3:	cmp    DWORD PTR [ebp+0x10],ecx
1004e0e6:	jl     0x1004e108
1004e0e8:	xor    edx,edx
1004e0ea:	cmp    DWORD PTR [ebp+0x8],ebx
1004e0ed:	setne  dl
1004e0f0:	push   edx
1004e0f1:	push   DWORD PTR [ebp+0x8]
1004e0f4:	push   ecx
1004e0f5:	push   esi
1004e0f6:	push   0x9
1004e0f8:	push   DWORD PTR [eax+0x4]
1004e0fb:	call   DWORD PTR ds:0x1006608c
1004e101:	test   eax,eax
1004e103:	mov    eax,DWORD PTR [ebp-0x10]
1004e106:	jne    0x1004e118
1004e108:	mov    ecx,DWORD PTR [ebp+0x10]
1004e10b:	cmp    ecx,DWORD PTR [eax+0xac]
1004e111:	jb     0x1004e133
1004e113:	cmp    BYTE PTR [esi+0x1],bl
1004e116:	je     0x1004e133
1004e118:	cmp    BYTE PTR [ebp-0x4],bl
1004e11b:	mov    eax,DWORD PTR [eax+0xac]
1004e121:	je     0x1004e08c
1004e127:	mov    ecx,DWORD PTR [ebp-0x8]
1004e12a:	and    DWORD PTR [ecx+0x70],0xfffffffd
1004e12e:	jmp    0x1004e08c
1004e133:	call   0x10046df5
1004e138:	mov    DWORD PTR [eax],0x2a
1004e13e:	cmp    BYTE PTR [ebp-0x4],bl
1004e141:	je     0x1004e14a
1004e143:	mov    eax,DWORD PTR [ebp-0x8]
1004e146:	and    DWORD PTR [eax+0x70],0xfffffffd
1004e14a:	or     eax,0xffffffff
1004e14d:	jmp    0x1004e08c
1004e152:	xor    eax,eax
1004e154:	cmp    DWORD PTR [ebp+0x8],ebx
1004e157:	setne  al
1004e15a:	push   eax
1004e15b:	push   DWORD PTR [ebp+0x8]
1004e15e:	mov    eax,DWORD PTR [ebp-0x10]
1004e161:	push   0x1
1004e163:	push   esi
1004e164:	push   0x9
1004e166:	push   DWORD PTR [eax+0x4]
1004e169:	call   DWORD PTR ds:0x1006608c
1004e16f:	test   eax,eax
1004e171:	jne    0x1004e0b1
1004e177:	jmp    0x1004e133
1004e179:	push   0x0
1004e17b:	push   DWORD PTR [esp+0x10]
1004e17f:	push   DWORD PTR [esp+0x10]
1004e183:	push   DWORD PTR [esp+0x10]
1004e187:	call   0x1004e066
1004e18c:	add    esp,0x10
1004e18f:	ret    
1004e190:	push   ebp
1004e191:	lea    ebp,[esp-0x1f8]
1004e198:	sub    esp,0x278
1004e19e:	mov    eax,ds:0x1007e030
1004e1a3:	xor    eax,ebp
1004e1a5:	mov    DWORD PTR [ebp+0x1f4],eax
1004e1ab:	mov    eax,DWORD PTR [ebp+0x200]
1004e1b1:	push   ebx
1004e1b2:	mov    ebx,DWORD PTR [ebp+0x204]
1004e1b8:	push   esi
1004e1b9:	xor    esi,esi
1004e1bb:	push   edi
1004e1bc:	mov    edi,DWORD PTR [ebp+0x20c]
1004e1c2:	push   DWORD PTR [ebp+0x208]
1004e1c8:	lea    ecx,[ebp-0x5c]
1004e1cb:	mov    DWORD PTR [ebp-0x30],eax
1004e1ce:	mov    DWORD PTR [ebp-0x2c],edi
1004e1d1:	mov    DWORD PTR [ebp-0x64],esi
1004e1d4:	mov    DWORD PTR [ebp-0x18],esi
1004e1d7:	mov    DWORD PTR [ebp-0x40],esi
1004e1da:	mov    DWORD PTR [ebp-0x20],esi
1004e1dd:	mov    DWORD PTR [ebp-0x3c],esi
1004e1e0:	mov    DWORD PTR [ebp-0x68],esi
1004e1e3:	mov    DWORD PTR [ebp-0x44],esi
1004e1e6:	call   0x10045785
1004e1eb:	cmp    DWORD PTR [ebp-0x30],esi
1004e1ee:	jne    0x1004e21d
1004e1f0:	call   0x10046df5
1004e1f5:	push   esi
1004e1f6:	push   esi
1004e1f7:	push   esi
1004e1f8:	push   esi
1004e1f9:	mov    DWORD PTR [eax],0x16
1004e1ff:	push   esi
1004e200:	call   0x100435cc
1004e205:	add    esp,0x14
1004e208:	cmp    BYTE PTR [ebp-0x50],0x0
1004e20c:	je     0x1004e215
1004e20e:	mov    eax,DWORD PTR [ebp-0x54]
1004e211:	and    DWORD PTR [eax+0x70],0xfffffffd
1004e215:	or     eax,0xffffffff
1004e218:	jmp    0x1004eb08
1004e21d:	mov    eax,DWORD PTR [ebp-0x30]
1004e220:	test   BYTE PTR [eax+0xc],0x40
1004e224:	jne    0x1004e2ce
1004e22a:	push   eax
1004e22b:	call   0x1004d40c
1004e230:	cmp    eax,0xffffffff
1004e233:	pop    ecx
1004e234:	je     0x1004e26c
1004e236:	push   DWORD PTR [ebp-0x30]
1004e239:	call   0x1004d40c
1004e23e:	cmp    eax,0xfffffffe
1004e241:	pop    ecx
1004e242:	je     0x1004e26c
1004e244:	push   DWORD PTR [ebp-0x30]
1004e247:	call   0x1004d40c
1004e24c:	push   DWORD PTR [ebp-0x30]
1004e24f:	sar    eax,0x5
1004e252:	lea    esi,[eax*4+0x10082480]
1004e259:	call   0x1004d40c
1004e25e:	and    eax,0x1f
1004e261:	imul   eax,eax,0x28
1004e264:	add    eax,DWORD PTR [esi]
1004e266:	pop    ecx
1004e267:	pop    ecx
1004e268:	xor    esi,esi
1004e26a:	jmp    0x1004e271
1004e26c:	mov    eax,0x1007e9d0
1004e271:	test   BYTE PTR [eax+0x24],0x7f
1004e275:	jne    0x1004e1f0
1004e27b:	push   DWORD PTR [ebp-0x30]
1004e27e:	call   0x1004d40c
1004e283:	cmp    eax,0xffffffff
1004e286:	pop    ecx
1004e287:	je     0x1004e2bf
1004e289:	push   DWORD PTR [ebp-0x30]
1004e28c:	call   0x1004d40c
1004e291:	cmp    eax,0xfffffffe
1004e294:	pop    ecx
1004e295:	je     0x1004e2bf
1004e297:	push   DWORD PTR [ebp-0x30]
1004e29a:	call   0x1004d40c
1004e29f:	push   DWORD PTR [ebp-0x30]
1004e2a2:	sar    eax,0x5
1004e2a5:	lea    esi,[eax*4+0x10082480]
1004e2ac:	call   0x1004d40c
1004e2b1:	and    eax,0x1f
1004e2b4:	imul   eax,eax,0x28
1004e2b7:	add    eax,DWORD PTR [esi]
1004e2b9:	pop    ecx
1004e2ba:	pop    ecx
1004e2bb:	xor    esi,esi
1004e2bd:	jmp    0x1004e2c4
1004e2bf:	mov    eax,0x1007e9d0
1004e2c4:	test   BYTE PTR [eax+0x24],0x80
1004e2c8:	jne    0x1004e1f0
1004e2ce:	cmp    ebx,esi
1004e2d0:	je     0x1004e1f0
1004e2d6:	mov    dl,BYTE PTR [ebx]
1004e2d8:	test   dl,dl
1004e2da:	mov    DWORD PTR [ebp-0x34],esi
1004e2dd:	mov    DWORD PTR [ebp-0x28],esi
1004e2e0:	mov    DWORD PTR [ebp-0x48],esi
1004e2e3:	mov    DWORD PTR [ebp-0x60],esi
1004e2e6:	mov    BYTE PTR [ebp-0x19],dl
1004e2e9:	je     0x1004eaf8
1004e2ef:	inc    ebx
1004e2f0:	xor    eax,eax
1004e2f2:	cmp    DWORD PTR [ebp-0x34],eax
1004e2f5:	mov    DWORD PTR [ebp-0x4c],ebx
1004e2f8:	jl     0x1004eae7
1004e2fe:	mov    cl,dl
1004e300:	sub    cl,0x20
1004e303:	cmp    cl,0x58
1004e306:	ja     0x1004e315
1004e308:	movsx  eax,dl
1004e30b:	movzx  eax,BYTE PTR [eax+0x10067458]
1004e312:	and    eax,0xf
1004e315:	mov    ecx,DWORD PTR [ebp-0x48]
1004e318:	imul   eax,eax,0x9
1004e31b:	movzx  eax,BYTE PTR [eax+ecx*1+0x10067478]
1004e323:	push   0x8
1004e325:	shr    eax,0x4
1004e328:	pop    esi
1004e329:	cmp    eax,esi
1004e32b:	mov    DWORD PTR [ebp-0x48],eax
1004e32e:	je     0x1004ead0
1004e334:	push   0x7
1004e336:	pop    ecx
1004e337:	cmp    eax,ecx
1004e339:	ja     0x1004eaba
1004e33f:	jmp    DWORD PTR [eax*4+0x1004eb20]
1004e346:	xor    eax,eax
1004e348:	or     DWORD PTR [ebp-0x20],0xffffffff
1004e34c:	mov    DWORD PTR [ebp-0x74],eax
1004e34f:	mov    DWORD PTR [ebp-0x68],eax
1004e352:	mov    DWORD PTR [ebp-0x40],eax
1004e355:	mov    DWORD PTR [ebp-0x3c],eax
1004e358:	mov    DWORD PTR [ebp-0x18],eax
1004e35b:	mov    DWORD PTR [ebp-0x44],eax
1004e35e:	jmp    0x1004eaba
1004e363:	movsx  eax,dl
1004e366:	sub    eax,0x20
1004e369:	je     0x1004e3a7
1004e36b:	sub    eax,0x3
1004e36e:	je     0x1004e39b
1004e370:	sub    eax,esi
1004e372:	je     0x1004e392
1004e374:	dec    eax
1004e375:	dec    eax
1004e376:	je     0x1004e389
1004e378:	sub    eax,0x3
1004e37b:	jne    0x1004eaba
1004e381:	or     DWORD PTR [ebp-0x18],esi
1004e384:	jmp    0x1004eaba
1004e389:	or     DWORD PTR [ebp-0x18],0x4
1004e38d:	jmp    0x1004eaba
1004e392:	or     DWORD PTR [ebp-0x18],0x1
1004e396:	jmp    0x1004eaba
1004e39b:	or     DWORD PTR [ebp-0x18],0x80
1004e3a2:	jmp    0x1004eaba
1004e3a7:	or     DWORD PTR [ebp-0x18],0x2
1004e3ab:	jmp    0x1004eaba
1004e3b0:	cmp    dl,0x2a
1004e3b3:	jne    0x1004e3d5
1004e3b5:	add    edi,0x4
1004e3b8:	mov    DWORD PTR [ebp-0x2c],edi
1004e3bb:	mov    edi,DWORD PTR [edi-0x4]
1004e3be:	test   edi,edi
1004e3c0:	mov    DWORD PTR [ebp-0x40],edi
1004e3c3:	jge    0x1004eaba
1004e3c9:	or     DWORD PTR [ebp-0x18],0x4
1004e3cd:	neg    DWORD PTR [ebp-0x40]
1004e3d0:	jmp    0x1004eaba
1004e3d5:	mov    eax,DWORD PTR [ebp-0x40]
1004e3d8:	imul   eax,eax,0xa
1004e3db:	movsx  ecx,dl
1004e3de:	lea    eax,[eax+ecx*1-0x30]
1004e3e2:	mov    DWORD PTR [ebp-0x40],eax
1004e3e5:	jmp    0x1004eaba
1004e3ea:	and    DWORD PTR [ebp-0x20],0x0
1004e3ee:	jmp    0x1004eaba
1004e3f3:	cmp    dl,0x2a
1004e3f6:	jne    0x1004e415
1004e3f8:	add    edi,0x4
1004e3fb:	mov    DWORD PTR [ebp-0x2c],edi
1004e3fe:	mov    edi,DWORD PTR [edi-0x4]
1004e401:	test   edi,edi
1004e403:	mov    DWORD PTR [ebp-0x20],edi
1004e406:	jge    0x1004eaba
1004e40c:	or     DWORD PTR [ebp-0x20],0xffffffff
1004e410:	jmp    0x1004eaba
1004e415:	mov    eax,DWORD PTR [ebp-0x20]
1004e418:	imul   eax,eax,0xa
1004e41b:	movsx  ecx,dl
1004e41e:	lea    eax,[eax+ecx*1-0x30]
1004e422:	mov    DWORD PTR [ebp-0x20],eax
1004e425:	jmp    0x1004eaba
1004e42a:	cmp    dl,0x49
1004e42d:	je     0x1004e475
1004e42f:	cmp    dl,0x68
1004e432:	je     0x1004e46c
1004e434:	cmp    dl,0x6c
1004e437:	je     0x1004e44e
1004e439:	cmp    dl,0x77
1004e43c:	jne    0x1004eaba
1004e442:	or     DWORD PTR [ebp-0x18],0x800
1004e449:	jmp    0x1004eaba
1004e44e:	cmp    BYTE PTR [ebx],0x6c
1004e451:	jne    0x1004e463
1004e453:	inc    ebx
1004e454:	or     DWORD PTR [ebp-0x18],0x1000
1004e45b:	mov    DWORD PTR [ebp-0x4c],ebx
1004e45e:	jmp    0x1004eaba
1004e463:	or     DWORD PTR [ebp-0x18],0x10
1004e467:	jmp    0x1004eaba
1004e46c:	or     DWORD PTR [ebp-0x18],0x20
1004e470:	jmp    0x1004eaba
1004e475:	mov    al,BYTE PTR [ebx]
1004e477:	cmp    al,0x36
1004e479:	jne    0x1004e492
1004e47b:	cmp    BYTE PTR [ebx+0x1],0x34
1004e47f:	jne    0x1004e492
1004e481:	inc    ebx
1004e482:	inc    ebx
1004e483:	or     DWORD PTR [ebp-0x18],0x8000
1004e48a:	mov    DWORD PTR [ebp-0x4c],ebx
1004e48d:	jmp    0x1004eaba
1004e492:	cmp    al,0x33
1004e494:	jne    0x1004e4ad
1004e496:	cmp    BYTE PTR [ebx+0x1],0x32
1004e49a:	jne    0x1004e4ad
1004e49c:	inc    ebx
1004e49d:	inc    ebx
1004e49e:	and    DWORD PTR [ebp-0x18],0xffff7fff
1004e4a5:	mov    DWORD PTR [ebp-0x4c],ebx
1004e4a8:	jmp    0x1004eaba
1004e4ad:	cmp    al,0x64
1004e4af:	je     0x1004eaba
1004e4b5:	cmp    al,0x69
1004e4b7:	je     0x1004eaba
1004e4bd:	cmp    al,0x6f
1004e4bf:	je     0x1004eaba
1004e4c5:	cmp    al,0x75
1004e4c7:	je     0x1004eaba
1004e4cd:	cmp    al,0x78
1004e4cf:	je     0x1004eaba
1004e4d5:	cmp    al,0x58
1004e4d7:	je     0x1004eaba
1004e4dd:	and    DWORD PTR [ebp-0x48],0x0
1004e4e1:	and    DWORD PTR [ebp-0x44],0x0
1004e4e5:	lea    eax,[ebp-0x5c]
1004e4e8:	push   eax
1004e4e9:	movzx  eax,dl
1004e4ec:	push   eax
1004e4ed:	call   0x1004b55f
1004e4f2:	pop    ecx
1004e4f3:	test   eax,eax
1004e4f5:	mov    al,BYTE PTR [ebp-0x19]
1004e4f8:	pop    ecx
1004e4f9:	je     0x1004e514
1004e4fb:	mov    ecx,DWORD PTR [ebp-0x30]
1004e4fe:	lea    esi,[ebp-0x34]
1004e501:	call   0x1004d617
1004e506:	mov    al,BYTE PTR [ebx]
1004e508:	inc    ebx
1004e509:	test   al,al
1004e50b:	mov    DWORD PTR [ebp-0x4c],ebx
1004e50e:	je     0x1004ead0
1004e514:	mov    ecx,DWORD PTR [ebp-0x30]
1004e517:	lea    esi,[ebp-0x34]
1004e51a:	call   0x1004d617
1004e51f:	jmp    0x1004eaba
1004e524:	movsx  eax,dl
1004e527:	cmp    eax,0x64
1004e52a:	jg     0x1004e6a4
1004e530:	je     0x1004e71f
1004e536:	cmp    eax,0x53
1004e539:	jg     0x1004e5eb
1004e53f:	je     0x1004e59c
1004e541:	sub    eax,0x41
1004e544:	je     0x1004e556
1004e546:	dec    eax
1004e547:	dec    eax
1004e548:	je     0x1004e58b
1004e54a:	dec    eax
1004e54b:	dec    eax
1004e54c:	je     0x1004e556
1004e54e:	dec    eax
1004e54f:	dec    eax
1004e550:	jne    0x1004e9a2
1004e556:	add    dl,0x20
1004e559:	mov    DWORD PTR [ebp-0x74],0x1
1004e560:	mov    BYTE PTR [ebp-0x19],dl
1004e563:	or     DWORD PTR [ebp-0x18],0x40
1004e567:	cmp    DWORD PTR [ebp-0x20],0x0
1004e56b:	lea    ebx,[ebp-0x14]
1004e56e:	mov    eax,0x200
1004e573:	mov    DWORD PTR [ebp-0x24],ebx
1004e576:	mov    DWORD PTR [ebp-0x6c],eax
1004e579:	jge    0x1004e743
1004e57f:	mov    DWORD PTR [ebp-0x20],0x6
1004e586:	jmp    0x1004e792
1004e58b:	test   WORD PTR [ebp-0x18],0x830
1004e591:	jne    0x1004e608
1004e593:	or     DWORD PTR [ebp-0x18],0x800
1004e59a:	jmp    0x1004e608
1004e59c:	test   WORD PTR [ebp-0x18],0x830
1004e5a2:	jne    0x1004e5ab
1004e5a4:	or     DWORD PTR [ebp-0x18],0x800
1004e5ab:	mov    ecx,DWORD PTR [ebp-0x20]
1004e5ae:	cmp    ecx,0xffffffff
1004e5b1:	jne    0x1004e5b8
1004e5b3:	mov    ecx,0x7fffffff
1004e5b8:	add    edi,0x4
1004e5bb:	test   WORD PTR [ebp-0x18],0x810
1004e5c1:	mov    DWORD PTR [ebp-0x2c],edi
1004e5c4:	mov    edi,DWORD PTR [edi-0x4]
1004e5c7:	mov    DWORD PTR [ebp-0x24],edi
1004e5ca:	je     0x1004e980
1004e5d0:	test   edi,edi
1004e5d2:	jne    0x1004e5dc
1004e5d4:	mov    eax,ds:0x1007ed2c
1004e5d9:	mov    DWORD PTR [ebp-0x24],eax
1004e5dc:	mov    eax,DWORD PTR [ebp-0x24]
1004e5df:	mov    DWORD PTR [ebp-0x44],0x1
1004e5e6:	jmp    0x1004e975
1004e5eb:	sub    eax,0x58
1004e5ee:	je     0x1004e828
1004e5f4:	dec    eax
1004e5f5:	dec    eax
1004e5f6:	je     0x1004e655
1004e5f8:	sub    eax,ecx
1004e5fa:	je     0x1004e563
1004e600:	dec    eax
1004e601:	dec    eax
1004e602:	jne    0x1004e9a2
1004e608:	add    edi,0x4
1004e60b:	test   WORD PTR [ebp-0x18],0x810
1004e611:	mov    DWORD PTR [ebp-0x2c],edi
1004e614:	je     0x1004e63d
1004e616:	movzx  eax,WORD PTR [edi-0x4]
1004e61a:	push   eax
1004e61b:	push   0x200
1004e620:	lea    eax,[ebp-0x14]
1004e623:	push   eax
1004e624:	lea    eax,[ebp-0x28]
1004e627:	push   eax
1004e628:	call   0x10050488
1004e62d:	add    esp,0x10
1004e630:	test   eax,eax
1004e632:	je     0x1004e64a
1004e634:	mov    DWORD PTR [ebp-0x68],0x1
1004e63b:	jmp    0x1004e64a
1004e63d:	mov    al,BYTE PTR [edi-0x4]
1004e640:	mov    BYTE PTR [ebp-0x14],al
1004e643:	mov    DWORD PTR [ebp-0x28],0x1
1004e64a:	lea    eax,[ebp-0x14]
1004e64d:	mov    DWORD PTR [ebp-0x24],eax
1004e650:	jmp    0x1004e9a2
1004e655:	mov    eax,DWORD PTR [edi]
1004e657:	add    edi,0x4
1004e65a:	test   eax,eax
1004e65c:	mov    DWORD PTR [ebp-0x2c],edi
1004e65f:	je     0x1004e690
1004e661:	mov    ecx,DWORD PTR [eax+0x4]
1004e664:	test   ecx,ecx
1004e666:	je     0x1004e690
1004e668:	test   WORD PTR [ebp-0x18],0x800
1004e66e:	movsx  eax,WORD PTR [eax]
1004e671:	mov    DWORD PTR [ebp-0x24],ecx
1004e674:	je     0x1004e687
1004e676:	cdq    
1004e677:	sub    eax,edx
1004e679:	sar    eax,1
1004e67b:	mov    DWORD PTR [ebp-0x44],0x1
1004e682:	jmp    0x1004e99f
1004e687:	and    DWORD PTR [ebp-0x44],0x0
1004e68b:	jmp    0x1004e99f
1004e690:	mov    eax,ds:0x1007ed28
1004e695:	mov    DWORD PTR [ebp-0x24],eax
1004e698:	push   eax
1004e699:	call   0x10043250
1004e69e:	pop    ecx
1004e69f:	jmp    0x1004e99f
1004e6a4:	cmp    eax,0x70
1004e6a7:	jg     0x1004e82d
1004e6ad:	je     0x1004e825
1004e6b3:	cmp    eax,0x65
1004e6b6:	jl     0x1004e9a2
1004e6bc:	cmp    eax,0x67
1004e6bf:	jle    0x1004e563
1004e6c5:	cmp    eax,0x69
1004e6c8:	je     0x1004e71f
1004e6ca:	cmp    eax,0x6e
1004e6cd:	je     0x1004e6ea
1004e6cf:	cmp    eax,0x6f
1004e6d2:	jne    0x1004e9a2
1004e6d8:	test   BYTE PTR [ebp-0x18],0x80
1004e6dc:	mov    DWORD PTR [ebp-0x28],esi
1004e6df:	je     0x1004e72a
1004e6e1:	or     DWORD PTR [ebp-0x18],0x200
1004e6e8:	jmp    0x1004e72a
1004e6ea:	mov    esi,DWORD PTR [edi]
1004e6ec:	add    edi,0x4
1004e6ef:	mov    DWORD PTR [ebp-0x2c],edi
1004e6f2:	call   0x1004e050
1004e6f7:	test   eax,eax
1004e6f9:	je     0x1004ead0
1004e6ff:	test   BYTE PTR [ebp-0x18],0x20
1004e703:	je     0x1004e70e
1004e705:	mov    ax,WORD PTR [ebp-0x34]
1004e709:	mov    WORD PTR [esi],ax
1004e70c:	jmp    0x1004e713
1004e70e:	mov    eax,DWORD PTR [ebp-0x34]
1004e711:	mov    DWORD PTR [esi],eax
1004e713:	mov    DWORD PTR [ebp-0x68],0x1
1004e71a:	jmp    0x1004eaa7
1004e71f:	or     DWORD PTR [ebp-0x18],0x40
1004e723:	mov    DWORD PTR [ebp-0x28],0xa
1004e72a:	mov    ecx,DWORD PTR [ebp-0x18]
1004e72d:	test   cx,cx
1004e730:	jns    0x1004e877
1004e736:	add    edi,esi
1004e738:	mov    eax,DWORD PTR [edi-0x8]
1004e73b:	mov    edx,DWORD PTR [edi-0x4]
1004e73e:	jmp    0x1004e8ac
1004e743:	jne    0x1004e753
1004e745:	cmp    dl,0x67
1004e748:	jne    0x1004e792
1004e74a:	mov    DWORD PTR [ebp-0x20],0x1
1004e751:	jmp    0x1004e792
1004e753:	cmp    DWORD PTR [ebp-0x20],eax
1004e756:	jle    0x1004e75b
1004e758:	mov    DWORD PTR [ebp-0x20],eax
1004e75b:	cmp    DWORD PTR [ebp-0x20],0xa3
1004e762:	jle    0x1004e792
1004e764:	mov    esi,DWORD PTR [ebp-0x20]
1004e767:	add    esi,0x15d
1004e76d:	push   esi
1004e76e:	call   0x100476c2
1004e773:	test   eax,eax
1004e775:	mov    dl,BYTE PTR [ebp-0x19]
1004e778:	pop    ecx
1004e779:	mov    DWORD PTR [ebp-0x60],eax
1004e77c:	push   0x8
1004e77e:	je     0x1004e78a
1004e780:	mov    DWORD PTR [ebp-0x24],eax
1004e783:	mov    DWORD PTR [ebp-0x6c],esi
1004e786:	mov    ebx,eax
1004e788:	jmp    0x1004e791
1004e78a:	mov    DWORD PTR [ebp-0x20],0xa3
1004e791:	pop    esi
1004e792:	add    edi,esi
1004e794:	mov    eax,DWORD PTR [edi-0x8]
1004e797:	mov    DWORD PTR [ebp-0x80],eax
1004e79a:	mov    eax,DWORD PTR [edi-0x4]
1004e79d:	mov    DWORD PTR [ebp-0x7c],eax
1004e7a0:	lea    eax,[ebp-0x5c]
1004e7a3:	push   eax
1004e7a4:	push   DWORD PTR [ebp-0x74]
1004e7a7:	movsx  eax,dl
1004e7aa:	push   DWORD PTR [ebp-0x20]
1004e7ad:	mov    DWORD PTR [ebp-0x2c],edi
1004e7b0:	push   eax
1004e7b1:	push   DWORD PTR [ebp-0x6c]
1004e7b4:	lea    eax,[ebp-0x80]
1004e7b7:	push   ebx
1004e7b8:	push   eax
1004e7b9:	push   DWORD PTR ds:0x1007ea98
1004e7bf:	call   0x10047192
1004e7c4:	pop    ecx
1004e7c5:	call   eax
1004e7c7:	mov    edi,DWORD PTR [ebp-0x18]
1004e7ca:	add    esp,0x1c
1004e7cd:	and    edi,0x80
1004e7d3:	je     0x1004e7f0
1004e7d5:	cmp    DWORD PTR [ebp-0x20],0x0
1004e7d9:	jne    0x1004e7f0
1004e7db:	lea    eax,[ebp-0x5c]
1004e7de:	push   eax
1004e7df:	push   ebx
1004e7e0:	push   DWORD PTR ds:0x1007eaa4
1004e7e6:	call   0x10047192
1004e7eb:	pop    ecx
1004e7ec:	call   eax
1004e7ee:	pop    ecx
1004e7ef:	pop    ecx
1004e7f0:	cmp    BYTE PTR [ebp-0x19],0x67
1004e7f4:	jne    0x1004e80f
1004e7f6:	test   edi,edi
1004e7f8:	jne    0x1004e80f
1004e7fa:	lea    eax,[ebp-0x5c]
1004e7fd:	push   eax
1004e7fe:	push   ebx
1004e7ff:	push   DWORD PTR ds:0x1007eaa0
1004e805:	call   0x10047192
1004e80a:	pop    ecx
1004e80b:	call   eax
1004e80d:	pop    ecx
1004e80e:	pop    ecx
1004e80f:	cmp    BYTE PTR [ebx],0x2d
1004e812:	jne    0x1004e81f
1004e814:	or     DWORD PTR [ebp-0x18],0x100
1004e81b:	inc    ebx
1004e81c:	mov    DWORD PTR [ebp-0x24],ebx
1004e81f:	push   ebx
1004e820:	jmp    0x1004e699
1004e825:	mov    DWORD PTR [ebp-0x20],esi
1004e828:	mov    DWORD PTR [ebp-0x64],ecx
1004e82b:	jmp    0x1004e84e
1004e82d:	sub    eax,0x73
1004e830:	je     0x1004e5ab
1004e836:	dec    eax
1004e837:	dec    eax
1004e838:	je     0x1004e723
1004e83e:	sub    eax,0x3
1004e841:	jne    0x1004e9a2
1004e847:	mov    DWORD PTR [ebp-0x64],0x27
1004e84e:	test   BYTE PTR [ebp-0x18],0x80
1004e852:	mov    DWORD PTR [ebp-0x28],0x10
1004e859:	je     0x1004e72a
1004e85f:	mov    al,BYTE PTR [ebp-0x64]
1004e862:	add    al,0x51
1004e864:	mov    BYTE PTR [ebp-0x38],0x30
1004e868:	mov    BYTE PTR [ebp-0x37],al
1004e86b:	mov    DWORD PTR [ebp-0x3c],0x2
1004e872:	jmp    0x1004e72a
1004e877:	test   cx,0x1000
1004e87c:	jne    0x1004e736
1004e882:	add    edi,0x4
1004e885:	test   cl,0x20
1004e888:	je     0x1004e89f
1004e88a:	test   cl,0x40
1004e88d:	mov    DWORD PTR [ebp-0x2c],edi
1004e890:	je     0x1004e898
1004e892:	movsx  eax,WORD PTR [edi-0x4]
1004e896:	jmp    0x1004e89c
1004e898:	movzx  eax,WORD PTR [edi-0x4]
1004e89c:	cdq    
1004e89d:	jmp    0x1004e8af
1004e89f:	test   cl,0x40
1004e8a2:	mov    eax,DWORD PTR [edi-0x4]
1004e8a5:	je     0x1004e8aa
1004e8a7:	cdq    
1004e8a8:	jmp    0x1004e8ac
1004e8aa:	xor    edx,edx
1004e8ac:	mov    DWORD PTR [ebp-0x2c],edi
1004e8af:	test   cl,0x40
1004e8b2:	je     0x1004e8cc
1004e8b4:	test   edx,edx
1004e8b6:	jg     0x1004e8cc
1004e8b8:	jl     0x1004e8be
1004e8ba:	test   eax,eax
1004e8bc:	jae    0x1004e8cc
1004e8be:	neg    eax
1004e8c0:	adc    edx,0x0
1004e8c3:	neg    edx
1004e8c5:	or     DWORD PTR [ebp-0x18],0x100
1004e8cc:	test   WORD PTR [ebp-0x18],0x9000
1004e8d2:	mov    ebx,edx
1004e8d4:	mov    edi,eax
1004e8d6:	jne    0x1004e8da
1004e8d8:	xor    ebx,ebx
1004e8da:	cmp    DWORD PTR [ebp-0x20],0x0
1004e8de:	jge    0x1004e8e9
1004e8e0:	mov    DWORD PTR [ebp-0x20],0x1
1004e8e7:	jmp    0x1004e8fa
1004e8e9:	and    DWORD PTR [ebp-0x18],0xfffffff7
1004e8ed:	mov    eax,0x200
1004e8f2:	cmp    DWORD PTR [ebp-0x20],eax
1004e8f5:	jle    0x1004e8fa
1004e8f7:	mov    DWORD PTR [ebp-0x20],eax
1004e8fa:	mov    eax,edi
1004e8fc:	or     eax,ebx
1004e8fe:	jne    0x1004e904
1004e900:	and    DWORD PTR [ebp-0x3c],0x0
1004e904:	lea    esi,[ebp+0x1eb]
1004e90a:	mov    eax,DWORD PTR [ebp-0x20]
1004e90d:	dec    DWORD PTR [ebp-0x20]
1004e910:	test   eax,eax
1004e912:	jg     0x1004e91a
1004e914:	mov    eax,edi
1004e916:	or     eax,ebx
1004e918:	je     0x1004e93e
1004e91a:	mov    eax,DWORD PTR [ebp-0x28]
1004e91d:	cdq    
1004e91e:	push   edx
1004e91f:	push   eax
1004e920:	push   ebx
1004e921:	push   edi
1004e922:	call   0x1004ac90
1004e927:	add    ecx,0x30
1004e92a:	cmp    ecx,0x39
1004e92d:	mov    DWORD PTR [ebp-0x6c],ebx
1004e930:	mov    edi,eax
1004e932:	mov    ebx,edx
1004e934:	jle    0x1004e939
1004e936:	add    ecx,DWORD PTR [ebp-0x64]
1004e939:	mov    BYTE PTR [esi],cl
1004e93b:	dec    esi
1004e93c:	jmp    0x1004e90a
1004e93e:	lea    eax,[ebp+0x1eb]
1004e944:	sub    eax,esi
1004e946:	inc    esi
1004e947:	test   WORD PTR [ebp-0x18],0x200
1004e94d:	mov    DWORD PTR [ebp-0x28],eax
1004e950:	mov    DWORD PTR [ebp-0x24],esi
1004e953:	je     0x1004e9a2
1004e955:	test   eax,eax
1004e957:	je     0x1004e960
1004e959:	mov    ecx,esi
1004e95b:	cmp    BYTE PTR [ecx],0x30
1004e95e:	je     0x1004e9a2
1004e960:	dec    DWORD PTR [ebp-0x24]
1004e963:	mov    ecx,DWORD PTR [ebp-0x24]
1004e966:	mov    BYTE PTR [ecx],0x30
1004e969:	inc    eax
1004e96a:	jmp    0x1004e99f
1004e96c:	dec    ecx
1004e96d:	cmp    WORD PTR [eax],0x0
1004e971:	je     0x1004e979
1004e973:	inc    eax
1004e974:	inc    eax
1004e975:	test   ecx,ecx
1004e977:	jne    0x1004e96c
1004e979:	sub    eax,DWORD PTR [ebp-0x24]
1004e97c:	sar    eax,1
1004e97e:	jmp    0x1004e99f
1004e980:	test   edi,edi
1004e982:	jne    0x1004e98c
1004e984:	mov    eax,ds:0x1007ed28
1004e989:	mov    DWORD PTR [ebp-0x24],eax
1004e98c:	mov    eax,DWORD PTR [ebp-0x24]
1004e98f:	jmp    0x1004e998
1004e991:	dec    ecx
1004e992:	cmp    BYTE PTR [eax],0x0
1004e995:	je     0x1004e99c
1004e997:	inc    eax
1004e998:	test   ecx,ecx
1004e99a:	jne    0x1004e991
1004e99c:	sub    eax,DWORD PTR [ebp-0x24]
1004e99f:	mov    DWORD PTR [ebp-0x28],eax
1004e9a2:	cmp    DWORD PTR [ebp-0x68],0x0
1004e9a6:	jne    0x1004eaa7
1004e9ac:	mov    eax,DWORD PTR [ebp-0x18]
1004e9af:	test   al,0x40
1004e9b1:	je     0x1004e9d8
1004e9b3:	test   ax,0x100
1004e9b7:	je     0x1004e9bf
1004e9b9:	mov    BYTE PTR [ebp-0x38],0x2d
1004e9bd:	jmp    0x1004e9d1
1004e9bf:	test   al,0x1
1004e9c1:	je     0x1004e9c9
1004e9c3:	mov    BYTE PTR [ebp-0x38],0x2b
1004e9c7:	jmp    0x1004e9d1
1004e9c9:	test   al,0x2
1004e9cb:	je     0x1004e9d8
1004e9cd:	mov    BYTE PTR [ebp-0x38],0x20
1004e9d1:	mov    DWORD PTR [ebp-0x3c],0x1
1004e9d8:	mov    ebx,DWORD PTR [ebp-0x40]
1004e9db:	sub    ebx,DWORD PTR [ebp-0x28]
1004e9de:	sub    ebx,DWORD PTR [ebp-0x3c]
1004e9e1:	test   BYTE PTR [ebp-0x18],0xc
1004e9e5:	jne    0x1004e9f8
1004e9e7:	push   DWORD PTR [ebp-0x30]
1004e9ea:	lea    eax,[ebp-0x34]
1004e9ed:	push   ebx
1004e9ee:	push   0x20
1004e9f0:	call   0x1004d64a
1004e9f5:	add    esp,0xc
1004e9f8:	push   DWORD PTR [ebp-0x3c]
1004e9fb:	mov    edi,DWORD PTR [ebp-0x30]
1004e9fe:	lea    eax,[ebp-0x34]
1004ea01:	lea    ecx,[ebp-0x38]
1004ea04:	call   0x1004d66e
1004ea09:	test   BYTE PTR [ebp-0x18],0x8
1004ea0d:	pop    ecx
1004ea0e:	je     0x1004ea25
1004ea10:	test   BYTE PTR [ebp-0x18],0x4
1004ea14:	jne    0x1004ea25
1004ea16:	push   edi
1004ea17:	push   ebx
1004ea18:	push   0x30
1004ea1a:	lea    eax,[ebp-0x34]
1004ea1d:	call   0x1004d64a
1004ea22:	add    esp,0xc
1004ea25:	cmp    DWORD PTR [ebp-0x44],0x0
1004ea29:	mov    eax,DWORD PTR [ebp-0x28]
1004ea2c:	je     0x1004ea7f
1004ea2e:	test   eax,eax
1004ea30:	jle    0x1004ea7f
1004ea32:	mov    esi,DWORD PTR [ebp-0x24]
1004ea35:	mov    DWORD PTR [ebp-0x6c],eax
1004ea38:	movzx  eax,WORD PTR [esi]
1004ea3b:	dec    DWORD PTR [ebp-0x6c]
1004ea3e:	push   eax
1004ea3f:	push   0x6
1004ea41:	lea    eax,[ebp+0x1ec]
1004ea47:	push   eax
1004ea48:	lea    eax,[ebp-0x78]
1004ea4b:	inc    esi
1004ea4c:	push   eax
1004ea4d:	inc    esi
1004ea4e:	call   0x10050488
1004ea53:	add    esp,0x10
1004ea56:	test   eax,eax
1004ea58:	jne    0x1004ea79
1004ea5a:	cmp    DWORD PTR [ebp-0x78],eax
1004ea5d:	je     0x1004ea79
1004ea5f:	push   DWORD PTR [ebp-0x78]
1004ea62:	lea    eax,[ebp-0x34]
1004ea65:	lea    ecx,[ebp+0x1ec]
1004ea6b:	call   0x1004d66e
1004ea70:	cmp    DWORD PTR [ebp-0x6c],0x0
1004ea74:	pop    ecx
1004ea75:	jne    0x1004ea38
1004ea77:	jmp    0x1004ea8c
1004ea79:	or     DWORD PTR [ebp-0x34],0xffffffff
1004ea7d:	jmp    0x1004ea8c
1004ea7f:	mov    ecx,DWORD PTR [ebp-0x24]
1004ea82:	push   eax
1004ea83:	lea    eax,[ebp-0x34]
1004ea86:	call   0x1004d66e
1004ea8b:	pop    ecx
1004ea8c:	cmp    DWORD PTR [ebp-0x34],0x0
1004ea90:	jl     0x1004eaa7
1004ea92:	test   BYTE PTR [ebp-0x18],0x4
1004ea96:	je     0x1004eaa7
1004ea98:	push   edi
1004ea99:	push   ebx
1004ea9a:	push   0x20
1004ea9c:	lea    eax,[ebp-0x34]
1004ea9f:	call   0x1004d64a
1004eaa4:	add    esp,0xc
1004eaa7:	cmp    DWORD PTR [ebp-0x60],0x0
1004eaab:	je     0x1004eaba
1004eaad:	push   DWORD PTR [ebp-0x60]
1004eab0:	call   0x10043748
1004eab5:	and    DWORD PTR [ebp-0x60],0x0
1004eab9:	pop    ecx
1004eaba:	mov    ebx,DWORD PTR [ebp-0x4c]
1004eabd:	mov    al,BYTE PTR [ebx]
1004eabf:	test   al,al
1004eac1:	mov    BYTE PTR [ebp-0x19],al
1004eac4:	je     0x1004eae7
1004eac6:	mov    edi,DWORD PTR [ebp-0x2c]
1004eac9:	mov    dl,al
1004eacb:	jmp    0x1004e2ef
1004ead0:	call   0x10046df5
1004ead5:	mov    DWORD PTR [eax],0x16
1004eadb:	xor    eax,eax
1004eadd:	push   eax
1004eade:	push   eax
1004eadf:	push   eax
1004eae0:	push   eax
1004eae1:	push   eax
1004eae2:	jmp    0x1004e200
1004eae7:	xor    esi,esi
1004eae9:	cmp    DWORD PTR [ebp-0x48],esi
1004eaec:	je     0x1004eaf8
1004eaee:	cmp    DWORD PTR [ebp-0x48],0x7
1004eaf2:	jne    0x1004e1f0
1004eaf8:	cmp    BYTE PTR [ebp-0x50],0x0
1004eafc:	je     0x1004eb05
1004eafe:	mov    eax,DWORD PTR [ebp-0x54]
1004eb01:	and    DWORD PTR [eax+0x70],0xfffffffd
1004eb05:	mov    eax,DWORD PTR [ebp-0x34]
1004eb08:	mov    ecx,DWORD PTR [ebp+0x1f4]
1004eb0e:	pop    edi
1004eb0f:	pop    esi
1004eb10:	xor    ecx,ebp
1004eb12:	pop    ebx
1004eb13:	call   0x100430d7
1004eb18:	add    ebp,0x1f8
1004eb1e:	leave  
1004eb1f:	ret    
1004eb20:	loope  0x1004eb06
1004eb22:	add    al,0x10
1004eb24:	inc    esi
1004eb25:	jecxz  0x1004eb2b
1004eb27:	adc    BYTE PTR [ebx-0x1d],ah
1004eb2a:	add    al,0x10
1004eb2c:	mov    al,0xe3
1004eb2e:	add    al,0x10
1004eb30:	jmp    0x4e3:0xf31004e3
1004eb37:	adc    BYTE PTR [edx],ch
1004eb39:	in     al,0x4
1004eb3b:	adc    BYTE PTR [eiz*8-0x74aaeffc],ah
1004eb42:	in     al,dx
1004eb43:	sub    esp,0x20
1004eb46:	push   ebx
1004eb47:	push   esi
1004eb48:	push   edi
1004eb49:	call   0x10047189
1004eb4e:	xor    ebx,ebx
1004eb50:	cmp    DWORD PTR ds:0x10080474,ebx
1004eb56:	mov    DWORD PTR [ebp-0x10],eax
1004eb59:	mov    DWORD PTR [ebp-0x4],ebx
1004eb5c:	mov    DWORD PTR [ebp-0x8],ebx
1004eb5f:	mov    DWORD PTR [ebp-0xc],ebx
1004eb62:	jne    0x1004ec15
1004eb68:	push   0x10067538
1004eb6d:	call   DWORD PTR ds:0x10066220
1004eb73:	mov    edi,eax
1004eb75:	cmp    edi,ebx
1004eb77:	jne    0x1004eb80
1004eb79:	xor    eax,eax
1004eb7b:	jmp    0x1004ecd9
1004eb80:	mov    esi,DWORD PTR ds:0x1006612c
1004eb86:	push   0x1006752c
1004eb8b:	push   edi
1004eb8c:	call   esi
1004eb8e:	cmp    eax,ebx
1004eb90:	je     0x1004eb79
1004eb92:	push   eax
1004eb93:	call   0x10047126
1004eb98:	mov    DWORD PTR [esp],0x1006751c
1004eb9f:	push   edi
1004eba0:	mov    ds:0x10080474,eax
1004eba5:	call   esi
1004eba7:	push   eax
1004eba8:	call   0x10047126
1004ebad:	mov    DWORD PTR [esp],0x10067508
1004ebb4:	push   edi
1004ebb5:	mov    ds:0x10080478,eax
1004ebba:	call   esi
1004ebbc:	push   eax
1004ebbd:	call   0x10047126
1004ebc2:	mov    ds:0x1008047c,eax
1004ebc7:	lea    eax,[ebp-0x8]
1004ebca:	push   eax
1004ebcb:	call   0x100478e1
1004ebd0:	test   eax,eax
1004ebd2:	pop    ecx
1004ebd3:	pop    ecx
1004ebd4:	je     0x1004ebe3
1004ebd6:	push   ebx
1004ebd7:	push   ebx
1004ebd8:	push   ebx
1004ebd9:	push   ebx
1004ebda:	push   ebx
1004ebdb:	call   0x100434d0
1004ebe0:	add    esp,0x14
1004ebe3:	cmp    DWORD PTR [ebp-0x8],0x2
1004ebe7:	jne    0x1004ec15
1004ebe9:	push   0x100674ec
1004ebee:	push   edi
1004ebef:	call   esi
1004ebf1:	push   eax
1004ebf2:	call   0x10047126
1004ebf7:	cmp    eax,ebx
1004ebf9:	pop    ecx
1004ebfa:	mov    ds:0x10080484,eax
1004ebff:	je     0x1004ec15
1004ec01:	push   0x100674d4
1004ec06:	push   edi
1004ec07:	call   esi
1004ec09:	push   eax
1004ec0a:	call   0x10047126
1004ec0f:	pop    ecx
1004ec10:	mov    ds:0x10080480,eax
1004ec15:	mov    eax,ds:0x10080480
1004ec1a:	mov    esi,DWORD PTR [ebp-0x10]
1004ec1d:	cmp    eax,esi
1004ec1f:	je     0x1004ec8e
1004ec21:	cmp    DWORD PTR ds:0x10080484,esi
1004ec27:	je     0x1004ec8e
1004ec29:	push   eax
1004ec2a:	call   0x10047192
1004ec2f:	pop    ecx
1004ec30:	call   eax
1004ec32:	cmp    eax,ebx
1004ec34:	je     0x1004ec5b
1004ec36:	lea    ecx,[ebp-0x14]
1004ec39:	push   ecx
1004ec3a:	push   0xc
1004ec3c:	lea    ecx,[ebp-0x20]
1004ec3f:	push   ecx
1004ec40:	push   0x1
1004ec42:	push   eax
1004ec43:	push   DWORD PTR ds:0x10080484
1004ec49:	call   0x10047192
1004ec4e:	pop    ecx
1004ec4f:	call   eax
1004ec51:	test   eax,eax
1004ec53:	je     0x1004ec5b
1004ec55:	test   BYTE PTR [ebp-0x18],0x1
1004ec59:	jne    0x1004ec8e
1004ec5b:	lea    eax,[ebp-0xc]
1004ec5e:	push   eax
1004ec5f:	call   0x10047918
1004ec64:	test   eax,eax
1004ec66:	pop    ecx
1004ec67:	je     0x1004ec76
1004ec69:	push   ebx
1004ec6a:	push   ebx
1004ec6b:	push   ebx
1004ec6c:	push   ebx
1004ec6d:	push   ebx
1004ec6e:	call   0x100434d0
1004ec73:	add    esp,0x14
1004ec76:	cmp    DWORD PTR [ebp-0xc],0x4
1004ec7a:	jb     0x1004ec85
1004ec7c:	or     DWORD PTR [ebp+0x10],0x200000
1004ec83:	jmp    0x1004ecbf
1004ec85:	or     DWORD PTR [ebp+0x10],0x40000
1004ec8c:	jmp    0x1004ecbf
1004ec8e:	mov    eax,ds:0x10080478
1004ec93:	cmp    eax,esi
1004ec95:	je     0x1004ecbf
1004ec97:	push   eax
1004ec98:	call   0x10047192
1004ec9d:	pop    ecx
1004ec9e:	call   eax
1004eca0:	cmp    eax,ebx
1004eca2:	mov    DWORD PTR [ebp-0x4],eax
1004eca5:	je     0x1004ecbf
1004eca7:	mov    eax,ds:0x1008047c
1004ecac:	cmp    eax,esi
1004ecae:	je     0x1004ecbf
1004ecb0:	push   DWORD PTR [ebp-0x4]
1004ecb3:	push   eax
1004ecb4:	call   0x10047192
1004ecb9:	pop    ecx
1004ecba:	call   eax
1004ecbc:	mov    DWORD PTR [ebp-0x4],eax
1004ecbf:	push   DWORD PTR [ebp+0x10]
1004ecc2:	push   DWORD PTR [ebp+0xc]
1004ecc5:	push   DWORD PTR [ebp+0x8]
1004ecc8:	push   DWORD PTR [ebp-0x4]
1004eccb:	push   DWORD PTR ds:0x10080474
1004ecd1:	call   0x10047192
1004ecd6:	pop    ecx
1004ecd7:	call   eax
1004ecd9:	pop    edi
1004ecda:	pop    esi
1004ecdb:	pop    ebx
1004ecdc:	leave  
1004ecdd:	ret    
1004ecde:	mov    eax,DWORD PTR [esp+0x4]
1004ece2:	push   ebx
1004ece3:	xor    ebx,ebx
1004ece5:	cmp    eax,ebx
1004ece7:	push   esi
1004ece8:	push   edi
1004ece9:	je     0x1004ecf3
1004eceb:	mov    edi,DWORD PTR [esp+0x14]
1004ecef:	cmp    edi,ebx
1004ecf1:	ja     0x1004ed0e
1004ecf3:	call   0x10046df5
1004ecf8:	push   0x16
1004ecfa:	pop    esi
1004ecfb:	mov    DWORD PTR [eax],esi
1004ecfd:	push   ebx
1004ecfe:	push   ebx
1004ecff:	push   ebx
1004ed00:	push   ebx
1004ed01:	push   ebx
1004ed02:	call   0x100435cc
1004ed07:	add    esp,0x14
1004ed0a:	mov    eax,esi
1004ed0c:	jmp    0x1004ed4b
1004ed0e:	mov    esi,DWORD PTR [esp+0x18]
1004ed12:	cmp    esi,ebx
1004ed14:	jne    0x1004ed1a
1004ed16:	mov    BYTE PTR [eax],bl
1004ed18:	jmp    0x1004ecf3
1004ed1a:	mov    edx,eax
1004ed1c:	cmp    BYTE PTR [edx],bl
1004ed1e:	je     0x1004ed24
1004ed20:	inc    edx
1004ed21:	dec    edi
1004ed22:	jne    0x1004ed1c
1004ed24:	cmp    edi,ebx
1004ed26:	je     0x1004ed16
1004ed28:	mov    cl,BYTE PTR [esi]
1004ed2a:	mov    BYTE PTR [edx],cl
1004ed2c:	inc    edx
1004ed2d:	inc    esi
1004ed2e:	cmp    cl,bl
1004ed30:	je     0x1004ed35
1004ed32:	dec    edi
1004ed33:	jne    0x1004ed28
1004ed35:	cmp    edi,ebx
1004ed37:	jne    0x1004ed49
1004ed39:	mov    BYTE PTR [eax],bl
1004ed3b:	call   0x10046df5
1004ed40:	push   0x22
1004ed42:	pop    ecx
1004ed43:	mov    DWORD PTR [eax],ecx
1004ed45:	mov    esi,ecx
1004ed47:	jmp    0x1004ecfd
1004ed49:	xor    eax,eax
1004ed4b:	pop    edi
1004ed4c:	pop    esi
1004ed4d:	pop    ebx
1004ed4e:	ret    
1004ed4f:	push   ebp
1004ed50:	mov    ebp,esp
1004ed52:	push   ebx
1004ed53:	push   esi
1004ed54:	mov    esi,DWORD PTR [ebp+0x8]
1004ed57:	xor    ebx,ebx
1004ed59:	cmp    DWORD PTR [ebp+0x14],ebx
1004ed5c:	push   edi
1004ed5d:	jne    0x1004ed6f
1004ed5f:	cmp    esi,ebx
1004ed61:	jne    0x1004ed73
1004ed63:	cmp    DWORD PTR [ebp+0xc],ebx
1004ed66:	jne    0x1004ed7a
1004ed68:	xor    eax,eax
1004ed6a:	pop    edi
1004ed6b:	pop    esi
1004ed6c:	pop    ebx
1004ed6d:	pop    ebp
1004ed6e:	ret    
1004ed6f:	cmp    esi,ebx
1004ed71:	je     0x1004ed7a
1004ed73:	mov    edi,DWORD PTR [ebp+0xc]
1004ed76:	cmp    edi,ebx
1004ed78:	ja     0x1004ed95
1004ed7a:	call   0x10046df5
1004ed7f:	push   0x16
1004ed81:	pop    esi
1004ed82:	mov    DWORD PTR [eax],esi
1004ed84:	push   ebx
1004ed85:	push   ebx
1004ed86:	push   ebx
1004ed87:	push   ebx
1004ed88:	push   ebx
1004ed89:	call   0x100435cc
1004ed8e:	add    esp,0x14
1004ed91:	mov    eax,esi
1004ed93:	jmp    0x1004ed6a
1004ed95:	cmp    DWORD PTR [ebp+0x14],ebx
1004ed98:	jne    0x1004ed9e
1004ed9a:	mov    BYTE PTR [esi],bl
1004ed9c:	jmp    0x1004ed68
1004ed9e:	mov    edx,DWORD PTR [ebp+0x10]
1004eda1:	cmp    edx,ebx
1004eda3:	jne    0x1004eda9
1004eda5:	mov    BYTE PTR [esi],bl
1004eda7:	jmp    0x1004ed7a
1004eda9:	cmp    DWORD PTR [ebp+0x14],0xffffffff
1004edad:	mov    eax,esi
1004edaf:	jne    0x1004edc0
1004edb1:	mov    cl,BYTE PTR [edx]
1004edb3:	mov    BYTE PTR [eax],cl
1004edb5:	inc    eax
1004edb6:	inc    edx
1004edb7:	cmp    cl,bl
1004edb9:	je     0x1004edd9
1004edbb:	dec    edi
1004edbc:	jne    0x1004edb1
1004edbe:	jmp    0x1004edd9
1004edc0:	mov    cl,BYTE PTR [edx]
1004edc2:	mov    BYTE PTR [eax],cl
1004edc4:	inc    eax
1004edc5:	inc    edx
1004edc6:	cmp    cl,bl
1004edc8:	je     0x1004edd2
1004edca:	dec    edi
1004edcb:	je     0x1004edd2
1004edcd:	dec    DWORD PTR [ebp+0x14]
1004edd0:	jne    0x1004edc0
1004edd2:	cmp    DWORD PTR [ebp+0x14],ebx
1004edd5:	jne    0x1004edd9
1004edd7:	mov    BYTE PTR [eax],bl
1004edd9:	cmp    edi,ebx
1004eddb:	jne    0x1004ed68
1004eddd:	cmp    DWORD PTR [ebp+0x14],0xffffffff
1004ede1:	jne    0x1004edf2
1004ede3:	mov    eax,DWORD PTR [ebp+0xc]
1004ede6:	push   0x50
1004ede8:	mov    BYTE PTR [esi+eax*1-0x1],bl
1004edec:	pop    eax
1004eded:	jmp    0x1004ed6a
1004edf2:	mov    BYTE PTR [esi],bl
1004edf4:	call   0x10046df5
1004edf9:	push   0x22
1004edfb:	pop    ecx
1004edfc:	mov    DWORD PTR [eax],ecx
1004edfe:	mov    esi,ecx
1004ee00:	jmp    0x1004ed84
1004ee02:	mov    ecx,DWORD PTR [esp+0x4]
1004ee06:	push   esi
1004ee07:	xor    esi,esi
1004ee09:	cmp    ecx,esi
1004ee0b:	jl     0x1004ee2b
1004ee0d:	cmp    ecx,0x2
1004ee10:	jle    0x1004ee1e
1004ee12:	cmp    ecx,0x3
1004ee15:	jne    0x1004ee2b
1004ee17:	mov    eax,ds:0x1007faa0
1004ee1c:	pop    esi
1004ee1d:	ret    
1004ee1e:	mov    eax,ds:0x1007faa0
1004ee23:	mov    DWORD PTR ds:0x1007faa0,ecx
1004ee29:	pop    esi
1004ee2a:	ret    
1004ee2b:	call   0x10046df5
1004ee30:	push   esi
1004ee31:	push   esi
1004ee32:	push   esi
1004ee33:	push   esi
1004ee34:	push   esi
1004ee35:	mov    DWORD PTR [eax],0x16
1004ee3b:	call   0x100435cc
1004ee40:	add    esp,0x14
1004ee43:	or     eax,0xffffffff
1004ee46:	pop    esi
1004ee47:	ret    
1004ee48:	push   0xc
1004ee4a:	push   0x10074988
1004ee4f:	call   0x10046f34
1004ee54:	and    DWORD PTR [ebp-0x4],0x0
1004ee58:	movapd xmm0,xmm1
1004ee5c:	mov    DWORD PTR [ebp-0x1c],0x1
1004ee63:	jmp    0x1004ee88
1004ee65:	mov    eax,DWORD PTR [ebp-0x14]
1004ee68:	mov    eax,DWORD PTR [eax]
1004ee6a:	mov    eax,DWORD PTR [eax]
1004ee6c:	cmp    eax,0xc0000005
1004ee71:	je     0x1004ee7d
1004ee73:	cmp    eax,0xc000001d
1004ee78:	je     0x1004ee7d
1004ee7a:	xor    eax,eax
1004ee7c:	ret    
1004ee7d:	xor    eax,eax
1004ee7f:	inc    eax
1004ee80:	ret    
1004ee81:	mov    esp,DWORD PTR [ebp-0x18]
1004ee84:	and    DWORD PTR [ebp-0x1c],0x0
1004ee88:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1004ee8f:	mov    eax,DWORD PTR [ebp-0x1c]
1004ee92:	call   0x10046f79
1004ee97:	ret    
1004ee98:	push   ebp
1004ee99:	mov    ebp,esp
1004ee9b:	sub    esp,0x18
1004ee9e:	xor    eax,eax
1004eea0:	push   ebx
1004eea1:	mov    DWORD PTR [ebp-0x4],eax
1004eea4:	mov    DWORD PTR [ebp-0xc],eax
1004eea7:	mov    DWORD PTR [ebp-0x8],eax
1004eeaa:	push   ebx
1004eeab:	pushf  
1004eeac:	pop    eax
1004eead:	mov    ecx,eax
1004eeaf:	xor    eax,0x200000
1004eeb4:	push   eax
1004eeb5:	popf   
1004eeb6:	pushf  
1004eeb7:	pop    edx
1004eeb8:	sub    edx,ecx
1004eeba:	je     0x1004eedb
1004eebc:	push   ecx
1004eebd:	popf   
1004eebe:	xor    eax,eax
1004eec0:	cpuid  
1004eec2:	mov    DWORD PTR [ebp-0xc],eax
1004eec5:	mov    DWORD PTR [ebp-0x18],ebx
1004eec8:	mov    DWORD PTR [ebp-0x14],edx
1004eecb:	mov    DWORD PTR [ebp-0x10],ecx
1004eece:	mov    eax,0x1
1004eed3:	cpuid  
1004eed5:	mov    DWORD PTR [ebp-0x4],edx
1004eed8:	mov    DWORD PTR [ebp-0x8],eax
1004eedb:	pop    ebx
1004eedc:	test   DWORD PTR [ebp-0x4],0x4000000
1004eee3:	je     0x1004eef3
1004eee5:	call   0x1004ee48
1004eeea:	test   eax,eax
1004eeec:	je     0x1004eef3
1004eeee:	xor    eax,eax
1004eef0:	inc    eax
1004eef1:	jmp    0x1004eef5
1004eef3:	xor    eax,eax
1004eef5:	pop    ebx
1004eef6:	leave  
1004eef7:	ret    
1004eef8:	call   0x1004ee98
1004eefd:	mov    ds:0x10082584,eax
1004ef02:	xor    eax,eax
1004ef04:	ret    
1004ef05:	push   ebp
1004ef06:	mov    ebp,esp
1004ef08:	push   ecx
1004ef09:	push   ecx
1004ef0a:	mov    eax,ds:0x1007e030
1004ef0f:	xor    eax,ebp
1004ef11:	mov    DWORD PTR [ebp-0x4],eax
1004ef14:	mov    eax,ds:0x10080488
1004ef19:	push   ebx
1004ef1a:	push   esi
1004ef1b:	xor    ebx,ebx
1004ef1d:	cmp    eax,ebx
1004ef1f:	push   edi
1004ef20:	mov    edi,ecx
1004ef22:	jne    0x1004ef5e
1004ef24:	lea    eax,[ebp-0x8]
1004ef27:	push   eax
1004ef28:	xor    esi,esi
1004ef2a:	inc    esi
1004ef2b:	push   esi
1004ef2c:	push   0x10066cc8
1004ef31:	push   esi
1004ef32:	call   DWORD PTR ds:0x10066234
1004ef38:	test   eax,eax
1004ef3a:	je     0x1004ef44
1004ef3c:	mov    DWORD PTR ds:0x10080488,esi
1004ef42:	jmp    0x1004ef78
1004ef44:	call   DWORD PTR ds:0x100660cc
1004ef4a:	cmp    eax,0x78
1004ef4d:	jne    0x1004ef59
1004ef4f:	push   0x2
1004ef51:	pop    eax
1004ef52:	mov    ds:0x10080488,eax
1004ef57:	jmp    0x1004ef5e
1004ef59:	mov    eax,ds:0x10080488
1004ef5e:	cmp    eax,0x2
1004ef61:	je     0x1004f036
1004ef67:	cmp    eax,ebx
1004ef69:	je     0x1004f036
1004ef6f:	cmp    eax,0x1
1004ef72:	jne    0x1004f060
1004ef78:	cmp    DWORD PTR [ebp+0x18],ebx
1004ef7b:	mov    DWORD PTR [ebp-0x8],ebx
1004ef7e:	jne    0x1004ef88
1004ef80:	mov    eax,DWORD PTR [edi]
1004ef82:	mov    eax,DWORD PTR [eax+0x4]
1004ef85:	mov    DWORD PTR [ebp+0x18],eax
1004ef88:	mov    esi,DWORD PTR ds:0x1006608c
1004ef8e:	xor    eax,eax
1004ef90:	cmp    DWORD PTR [ebp+0x20],ebx
1004ef93:	push   ebx
1004ef94:	push   ebx
1004ef95:	push   DWORD PTR [ebp+0x10]
1004ef98:	setne  al
1004ef9b:	push   DWORD PTR [ebp+0xc]
1004ef9e:	lea    eax,[eax*8+0x1]
1004efa5:	push   eax
1004efa6:	push   DWORD PTR [ebp+0x18]
1004efa9:	call   esi
1004efab:	mov    edi,eax
1004efad:	cmp    edi,ebx
1004efaf:	je     0x1004f060
1004efb5:	jle    0x1004eff3
1004efb7:	cmp    edi,0x7ffffff0
1004efbd:	ja     0x1004eff3
1004efbf:	lea    eax,[edi+edi*1+0x8]
1004efc3:	cmp    eax,0x400
1004efc8:	ja     0x1004efdd
1004efca:	call   0x1004b990
1004efcf:	mov    eax,esp
1004efd1:	cmp    eax,ebx
1004efd3:	je     0x1004eff1
1004efd5:	mov    DWORD PTR [eax],0xcccc
1004efdb:	jmp    0x1004efee
1004efdd:	push   eax
1004efde:	call   0x10045222
1004efe3:	cmp    eax,ebx
1004efe5:	pop    ecx
1004efe6:	je     0x1004eff1
1004efe8:	mov    DWORD PTR [eax],0xdddd
1004efee:	add    eax,0x8
1004eff1:	mov    ebx,eax
1004eff3:	test   ebx,ebx
1004eff5:	je     0x1004f060
1004eff7:	lea    eax,[edi+edi*1]
1004effa:	push   eax
1004effb:	push   0x0
1004effd:	push   ebx
1004effe:	call   0x10045ea0
1004f003:	add    esp,0xc
1004f006:	push   edi
1004f007:	push   ebx
1004f008:	push   DWORD PTR [ebp+0x10]
1004f00b:	push   DWORD PTR [ebp+0xc]
1004f00e:	push   0x1
1004f010:	push   DWORD PTR [ebp+0x18]
1004f013:	call   esi
1004f015:	test   eax,eax
1004f017:	je     0x1004f02a
1004f019:	push   DWORD PTR [ebp+0x14]
1004f01c:	push   eax
1004f01d:	push   ebx
1004f01e:	push   DWORD PTR [ebp+0x8]
1004f021:	call   DWORD PTR ds:0x10066234
1004f027:	mov    DWORD PTR [ebp-0x8],eax
1004f02a:	push   ebx
1004f02b:	call   0x1001b5ea
1004f030:	mov    eax,DWORD PTR [ebp-0x8]
1004f033:	pop    ecx
1004f034:	jmp    0x1004f0ab
1004f036:	xor    esi,esi
1004f038:	cmp    DWORD PTR [ebp+0x1c],ebx
1004f03b:	jne    0x1004f045
1004f03d:	mov    eax,DWORD PTR [edi]
1004f03f:	mov    eax,DWORD PTR [eax+0x14]
1004f042:	mov    DWORD PTR [ebp+0x1c],eax
1004f045:	cmp    DWORD PTR [ebp+0x18],ebx
1004f048:	jne    0x1004f052
1004f04a:	mov    eax,DWORD PTR [edi]
1004f04c:	mov    eax,DWORD PTR [eax+0x4]
1004f04f:	mov    DWORD PTR [ebp+0x18],eax
1004f052:	push   DWORD PTR [ebp+0x1c]
1004f055:	call   0x1004f6d4
1004f05a:	cmp    eax,0xffffffff
1004f05d:	pop    ecx
1004f05e:	jne    0x1004f064
1004f060:	xor    eax,eax
1004f062:	jmp    0x1004f0ab
1004f064:	cmp    eax,DWORD PTR [ebp+0x18]
1004f067:	je     0x1004f087
1004f069:	push   ebx
1004f06a:	push   ebx
1004f06b:	lea    ecx,[ebp+0x10]
1004f06e:	push   ecx
1004f06f:	push   DWORD PTR [ebp+0xc]
1004f072:	push   eax
1004f073:	push   DWORD PTR [ebp+0x18]
1004f076:	call   0x1004f71b
1004f07b:	mov    esi,eax
1004f07d:	add    esp,0x18
1004f080:	cmp    esi,ebx
1004f082:	je     0x1004f060
1004f084:	mov    DWORD PTR [ebp+0xc],esi
1004f087:	push   DWORD PTR [ebp+0x14]
1004f08a:	push   DWORD PTR [ebp+0x10]
1004f08d:	push   DWORD PTR [ebp+0xc]
1004f090:	push   DWORD PTR [ebp+0x8]
1004f093:	push   DWORD PTR [ebp+0x1c]
1004f096:	call   DWORD PTR ds:0x10066230
1004f09c:	cmp    esi,ebx
1004f09e:	mov    edi,eax
1004f0a0:	je     0x1004f0a9
1004f0a2:	push   esi
1004f0a3:	call   0x10043748
1004f0a8:	pop    ecx
1004f0a9:	mov    eax,edi
1004f0ab:	lea    esp,[ebp-0x14]
1004f0ae:	pop    edi
1004f0af:	pop    esi
1004f0b0:	pop    ebx
1004f0b1:	mov    ecx,DWORD PTR [ebp-0x4]
1004f0b4:	xor    ecx,ebp
1004f0b6:	call   0x100430d7
1004f0bb:	leave  
1004f0bc:	ret    
1004f0bd:	push   ebp
1004f0be:	mov    ebp,esp
1004f0c0:	sub    esp,0x10
1004f0c3:	push   DWORD PTR [ebp+0x8]
1004f0c6:	lea    ecx,[ebp-0x10]
1004f0c9:	call   0x10045785
1004f0ce:	push   DWORD PTR [ebp+0x24]
1004f0d1:	lea    ecx,[ebp-0x10]
1004f0d4:	push   DWORD PTR [ebp+0x20]
1004f0d7:	push   DWORD PTR [ebp+0x1c]
1004f0da:	push   DWORD PTR [ebp+0x18]
1004f0dd:	push   DWORD PTR [ebp+0x14]
1004f0e0:	push   DWORD PTR [ebp+0x10]
1004f0e3:	push   DWORD PTR [ebp+0xc]
1004f0e6:	call   0x1004ef05
1004f0eb:	add    esp,0x1c
1004f0ee:	cmp    BYTE PTR [ebp-0x4],0x0
1004f0f2:	je     0x1004f0fb
1004f0f4:	mov    ecx,DWORD PTR [ebp-0x8]
1004f0f7:	and    DWORD PTR [ecx+0x70],0xfffffffd
1004f0fb:	leave  
1004f0fc:	ret    
1004f0fd:	push   esi
1004f0fe:	mov    esi,DWORD PTR [esp+0x8]
1004f102:	test   esi,esi
1004f104:	je     0x1004f28b
1004f10a:	push   DWORD PTR [esi+0x4]
1004f10d:	call   0x10043748
1004f112:	push   DWORD PTR [esi+0x8]
1004f115:	call   0x10043748
1004f11a:	push   DWORD PTR [esi+0xc]
1004f11d:	call   0x10043748
1004f122:	push   DWORD PTR [esi+0x10]
1004f125:	call   0x10043748
1004f12a:	push   DWORD PTR [esi+0x14]
1004f12d:	call   0x10043748
1004f132:	push   DWORD PTR [esi+0x18]
1004f135:	call   0x10043748
1004f13a:	push   DWORD PTR [esi]
1004f13c:	call   0x10043748
1004f141:	push   DWORD PTR [esi+0x20]
1004f144:	call   0x10043748
1004f149:	push   DWORD PTR [esi+0x24]
1004f14c:	call   0x10043748
1004f151:	push   DWORD PTR [esi+0x28]
1004f154:	call   0x10043748
1004f159:	push   DWORD PTR [esi+0x2c]
1004f15c:	call   0x10043748
1004f161:	push   DWORD PTR [esi+0x30]
1004f164:	call   0x10043748
1004f169:	push   DWORD PTR [esi+0x34]
1004f16c:	call   0x10043748
1004f171:	push   DWORD PTR [esi+0x1c]
1004f174:	call   0x10043748
1004f179:	push   DWORD PTR [esi+0x38]
1004f17c:	call   0x10043748
1004f181:	push   DWORD PTR [esi+0x3c]
1004f184:	call   0x10043748
1004f189:	add    esp,0x40
1004f18c:	push   DWORD PTR [esi+0x40]
1004f18f:	call   0x10043748
1004f194:	push   DWORD PTR [esi+0x44]
1004f197:	call   0x10043748
1004f19c:	push   DWORD PTR [esi+0x48]
1004f19f:	call   0x10043748
1004f1a4:	push   DWORD PTR [esi+0x4c]
1004f1a7:	call   0x10043748
1004f1ac:	push   DWORD PTR [esi+0x50]
1004f1af:	call   0x10043748
1004f1b4:	push   DWORD PTR [esi+0x54]
1004f1b7:	call   0x10043748
1004f1bc:	push   DWORD PTR [esi+0x58]
1004f1bf:	call   0x10043748
1004f1c4:	push   DWORD PTR [esi+0x5c]
1004f1c7:	call   0x10043748
1004f1cc:	push   DWORD PTR [esi+0x60]
1004f1cf:	call   0x10043748
1004f1d4:	push   DWORD PTR [esi+0x64]
1004f1d7:	call   0x10043748
1004f1dc:	push   DWORD PTR [esi+0x68]
1004f1df:	call   0x10043748
1004f1e4:	push   DWORD PTR [esi+0x6c]
1004f1e7:	call   0x10043748
1004f1ec:	push   DWORD PTR [esi+0x70]
1004f1ef:	call   0x10043748
1004f1f4:	push   DWORD PTR [esi+0x74]
1004f1f7:	call   0x10043748
1004f1fc:	push   DWORD PTR [esi+0x78]
1004f1ff:	call   0x10043748
1004f204:	push   DWORD PTR [esi+0x7c]
1004f207:	call   0x10043748
1004f20c:	add    esp,0x40
1004f20f:	push   DWORD PTR [esi+0x80]
1004f215:	call   0x10043748
1004f21a:	push   DWORD PTR [esi+0x84]
1004f220:	call   0x10043748
1004f225:	push   DWORD PTR [esi+0x88]
1004f22b:	call   0x10043748
1004f230:	push   DWORD PTR [esi+0x8c]
1004f236:	call   0x10043748
1004f23b:	push   DWORD PTR [esi+0x90]
1004f241:	call   0x10043748
1004f246:	push   DWORD PTR [esi+0x94]
1004f24c:	call   0x10043748
1004f251:	push   DWORD PTR [esi+0x98]
1004f257:	call   0x10043748
1004f25c:	push   DWORD PTR [esi+0x9c]
1004f262:	call   0x10043748
1004f267:	push   DWORD PTR [esi+0xa0]
1004f26d:	call   0x10043748
1004f272:	push   DWORD PTR [esi+0xa4]
1004f278:	call   0x10043748
1004f27d:	push   DWORD PTR [esi+0xa8]
1004f283:	call   0x10043748
1004f288:	add    esp,0x2c
1004f28b:	pop    esi
1004f28c:	ret    
1004f28d:	push   esi
1004f28e:	mov    esi,DWORD PTR [esp+0x8]
1004f292:	test   esi,esi
1004f294:	je     0x1004f2cb
1004f296:	mov    eax,DWORD PTR [esi]
1004f298:	cmp    eax,DWORD PTR ds:0x1007edf8
1004f29e:	je     0x1004f2a7
1004f2a0:	push   eax
1004f2a1:	call   0x10043748
1004f2a6:	pop    ecx
1004f2a7:	mov    eax,DWORD PTR [esi+0x4]
1004f2aa:	cmp    eax,DWORD PTR ds:0x1007edfc
1004f2b0:	je     0x1004f2b9
1004f2b2:	push   eax
1004f2b3:	call   0x10043748
1004f2b8:	pop    ecx
1004f2b9:	mov    esi,DWORD PTR [esi+0x8]
1004f2bc:	cmp    esi,DWORD PTR ds:0x1007ee00
1004f2c2:	je     0x1004f2cb
1004f2c4:	push   esi
1004f2c5:	call   0x10043748
1004f2ca:	pop    ecx
1004f2cb:	pop    esi
1004f2cc:	ret    
1004f2cd:	push   esi
1004f2ce:	mov    esi,DWORD PTR [esp+0x8]
1004f2d2:	test   esi,esi
1004f2d4:	je     0x1004f354
1004f2d6:	mov    eax,DWORD PTR [esi+0xc]
1004f2d9:	cmp    eax,DWORD PTR ds:0x1007ee04
1004f2df:	je     0x1004f2e8
1004f2e1:	push   eax
1004f2e2:	call   0x10043748
1004f2e7:	pop    ecx
1004f2e8:	mov    eax,DWORD PTR [esi+0x10]
1004f2eb:	cmp    eax,DWORD PTR ds:0x1007ee08
1004f2f1:	je     0x1004f2fa
1004f2f3:	push   eax
1004f2f4:	call   0x10043748
1004f2f9:	pop    ecx
1004f2fa:	mov    eax,DWORD PTR [esi+0x14]
1004f2fd:	cmp    eax,DWORD PTR ds:0x1007ee0c
1004f303:	je     0x1004f30c
1004f305:	push   eax
1004f306:	call   0x10043748
1004f30b:	pop    ecx
1004f30c:	mov    eax,DWORD PTR [esi+0x18]
1004f30f:	cmp    eax,DWORD PTR ds:0x1007ee10
1004f315:	je     0x1004f31e
1004f317:	push   eax
1004f318:	call   0x10043748
1004f31d:	pop    ecx
1004f31e:	mov    eax,DWORD PTR [esi+0x1c]
1004f321:	cmp    eax,DWORD PTR ds:0x1007ee14
1004f327:	je     0x1004f330
1004f329:	push   eax
1004f32a:	call   0x10043748
1004f32f:	pop    ecx
1004f330:	mov    eax,DWORD PTR [esi+0x20]
1004f333:	cmp    eax,DWORD PTR ds:0x1007ee18
1004f339:	je     0x1004f342
1004f33b:	push   eax
1004f33c:	call   0x10043748
1004f341:	pop    ecx
1004f342:	mov    esi,DWORD PTR [esi+0x24]
1004f345:	cmp    esi,DWORD PTR ds:0x1007ee1c
1004f34b:	je     0x1004f354
1004f34d:	push   esi
1004f34e:	call   0x10043748
1004f353:	pop    ecx
1004f354:	pop    esi
1004f355:	ret    
1004f356:	int3   
1004f357:	int3   
1004f358:	int3   
1004f359:	int3   
1004f35a:	int3   
1004f35b:	int3   
1004f35c:	int3   
1004f35d:	int3   
1004f35e:	int3   
1004f35f:	int3   
1004f360:	push   ebp
1004f361:	mov    ebp,esp
1004f363:	push   esi
1004f364:	xor    eax,eax
1004f366:	push   eax
1004f367:	push   eax
1004f368:	push   eax
1004f369:	push   eax
1004f36a:	push   eax
1004f36b:	push   eax
1004f36c:	push   eax
1004f36d:	push   eax
1004f36e:	mov    edx,DWORD PTR [ebp+0xc]
1004f371:	lea    ecx,[ecx+0x0]
1004f374:	mov    al,BYTE PTR [edx]
1004f376:	or     al,al
1004f378:	je     0x1004f383
1004f37a:	add    edx,0x1
1004f37d:	bts    DWORD PTR [esp],eax
1004f381:	jmp    0x1004f374
1004f383:	mov    esi,DWORD PTR [ebp+0x8]
1004f386:	or     ecx,0xffffffff
1004f389:	lea    ecx,[ecx+0x0]
1004f38c:	add    ecx,0x1
1004f38f:	mov    al,BYTE PTR [esi]
1004f391:	or     al,al
1004f393:	je     0x1004f39e
1004f395:	add    esi,0x1
1004f398:	bt     DWORD PTR [esp],eax
1004f39c:	jae    0x1004f38c
1004f39e:	mov    eax,ecx
1004f3a0:	add    esp,0x20
1004f3a3:	pop    esi
1004f3a4:	leave  
1004f3a5:	ret    
1004f3a6:	push   ebp
1004f3a7:	mov    ebp,esp
1004f3a9:	push   ecx
1004f3aa:	and    DWORD PTR [ebp-0x4],0x0
1004f3ae:	push   ebx
1004f3af:	mov    ebx,DWORD PTR [ebp+0x10]
1004f3b2:	test   ebx,ebx
1004f3b4:	jne    0x1004f3bd
1004f3b6:	xor    eax,eax
1004f3b8:	jmp    0x1004f457
1004f3bd:	cmp    ebx,0x4
1004f3c0:	push   edi
1004f3c1:	jb     0x1004f438
1004f3c3:	lea    edi,[ebx-0x4]
1004f3c6:	test   edi,edi
1004f3c8:	jbe    0x1004f438
1004f3ca:	mov    ecx,DWORD PTR [ebp+0xc]
1004f3cd:	mov    eax,DWORD PTR [ebp+0x8]
1004f3d0:	mov    dl,BYTE PTR [eax]
1004f3d2:	add    eax,0x4
1004f3d5:	add    ecx,0x4
1004f3d8:	test   dl,dl
1004f3da:	je     0x1004f42e
1004f3dc:	cmp    dl,BYTE PTR [ecx-0x4]
1004f3df:	jne    0x1004f42e
1004f3e1:	mov    dl,BYTE PTR [eax-0x3]
1004f3e4:	test   dl,dl
1004f3e6:	je     0x1004f424
1004f3e8:	cmp    dl,BYTE PTR [ecx-0x3]
1004f3eb:	jne    0x1004f424
1004f3ed:	mov    dl,BYTE PTR [eax-0x2]
1004f3f0:	test   dl,dl
1004f3f2:	je     0x1004f41a
1004f3f4:	cmp    dl,BYTE PTR [ecx-0x2]
1004f3f7:	jne    0x1004f41a
1004f3f9:	mov    dl,BYTE PTR [eax-0x1]
1004f3fc:	test   dl,dl
1004f3fe:	je     0x1004f410
1004f400:	cmp    dl,BYTE PTR [ecx-0x1]
1004f403:	jne    0x1004f410
1004f405:	add    DWORD PTR [ebp-0x4],0x4
1004f409:	cmp    DWORD PTR [ebp-0x4],edi
1004f40c:	jb     0x1004f3d0
1004f40e:	jmp    0x1004f44f
1004f410:	movzx  eax,BYTE PTR [eax-0x1]
1004f414:	movzx  ecx,BYTE PTR [ecx-0x1]
1004f418:	jmp    0x1004f460
1004f41a:	movzx  eax,BYTE PTR [eax-0x2]
1004f41e:	movzx  ecx,BYTE PTR [ecx-0x2]
1004f422:	jmp    0x1004f460
1004f424:	movzx  eax,BYTE PTR [eax-0x3]
1004f428:	movzx  ecx,BYTE PTR [ecx-0x3]
1004f42c:	jmp    0x1004f460
1004f42e:	movzx  eax,BYTE PTR [eax-0x4]
1004f432:	movzx  ecx,BYTE PTR [ecx-0x4]
1004f436:	jmp    0x1004f460
1004f438:	mov    ecx,DWORD PTR [ebp+0xc]
1004f43b:	mov    eax,DWORD PTR [ebp+0x8]
1004f43e:	jmp    0x1004f44f
1004f440:	mov    dl,BYTE PTR [eax]
1004f442:	test   dl,dl
1004f444:	je     0x1004f45a
1004f446:	cmp    dl,BYTE PTR [ecx]
1004f448:	jne    0x1004f45a
1004f44a:	inc    eax
1004f44b:	inc    ecx
1004f44c:	inc    DWORD PTR [ebp-0x4]
1004f44f:	cmp    DWORD PTR [ebp-0x4],ebx
1004f452:	jb     0x1004f440
1004f454:	xor    eax,eax
1004f456:	pop    edi
1004f457:	pop    ebx
1004f458:	leave  
1004f459:	ret    
1004f45a:	movzx  eax,BYTE PTR [eax]
1004f45d:	movzx  ecx,BYTE PTR [ecx]
1004f460:	sub    eax,ecx
1004f462:	jmp    0x1004f456
1004f464:	int3   
1004f465:	int3   
1004f466:	int3   
1004f467:	int3   
1004f468:	int3   
1004f469:	int3   
1004f46a:	int3   
1004f46b:	int3   
1004f46c:	int3   
1004f46d:	int3   
1004f46e:	int3   
1004f46f:	int3   
1004f470:	push   ebp
1004f471:	mov    ebp,esp
1004f473:	push   esi
1004f474:	xor    eax,eax
1004f476:	push   eax
1004f477:	push   eax
1004f478:	push   eax
1004f479:	push   eax
1004f47a:	push   eax
1004f47b:	push   eax
1004f47c:	push   eax
1004f47d:	push   eax
1004f47e:	mov    edx,DWORD PTR [ebp+0xc]
1004f481:	lea    ecx,[ecx+0x0]
1004f484:	mov    al,BYTE PTR [edx]
1004f486:	or     al,al
1004f488:	je     0x1004f493
1004f48a:	add    edx,0x1
1004f48d:	bts    DWORD PTR [esp],eax
1004f491:	jmp    0x1004f484
1004f493:	mov    esi,DWORD PTR [ebp+0x8]
1004f496:	mov    edi,edi
1004f498:	mov    al,BYTE PTR [esi]
1004f49a:	or     al,al
1004f49c:	je     0x1004f4aa
1004f49e:	add    esi,0x1
1004f4a1:	bt     DWORD PTR [esp],eax
1004f4a5:	jae    0x1004f498
1004f4a7:	lea    eax,[esi-0x1]
1004f4aa:	add    esp,0x20
1004f4ad:	pop    esi
1004f4ae:	leave  
1004f4af:	ret    
1004f4b0:	push   ebp
1004f4b1:	mov    ebp,esp
1004f4b3:	sub    esp,0x10
1004f4b6:	push   DWORD PTR [ebp+0xc]
1004f4b9:	lea    ecx,[ebp-0x10]
1004f4bc:	call   0x10045785
1004f4c1:	mov    eax,DWORD PTR [ebp-0x10]
1004f4c4:	cmp    DWORD PTR [eax+0xac],0x1
1004f4cb:	jle    0x1004f4e0
1004f4cd:	lea    eax,[ebp-0x10]
1004f4d0:	push   eax
1004f4d1:	push   0x4
1004f4d3:	push   DWORD PTR [ebp+0x8]
1004f4d6:	call   0x1004b5a3
1004f4db:	add    esp,0xc
1004f4de:	jmp    0x1004f4f0
1004f4e0:	mov    eax,DWORD PTR [eax+0xc8]
1004f4e6:	mov    ecx,DWORD PTR [ebp+0x8]
1004f4e9:	movzx  eax,BYTE PTR [eax+ecx*2]
1004f4ed:	and    eax,0x4
1004f4f0:	cmp    BYTE PTR [ebp-0x4],0x0
1004f4f4:	je     0x1004f4fd
1004f4f6:	mov    ecx,DWORD PTR [ebp-0x8]
1004f4f9:	and    DWORD PTR [ecx+0x70],0xfffffffd
1004f4fd:	leave  
1004f4fe:	ret    
1004f4ff:	cmp    DWORD PTR ds:0x100802c8,0x0
1004f506:	jne    0x1004f51a
1004f508:	mov    eax,DWORD PTR [esp+0x4]
1004f50c:	mov    ecx,DWORD PTR ds:0x1007e998
1004f512:	movzx  eax,BYTE PTR [ecx+eax*2]
1004f516:	and    eax,0x4
1004f519:	ret    
1004f51a:	push   0x0
1004f51c:	push   DWORD PTR [esp+0x8]
1004f520:	call   0x1004f4b0
1004f525:	pop    ecx
1004f526:	pop    ecx
1004f527:	ret    
1004f528:	push   ebp
1004f529:	mov    ebp,esp
1004f52b:	sub    esp,0x10
1004f52e:	push   DWORD PTR [ebp+0xc]
1004f531:	lea    ecx,[ebp-0x10]
1004f534:	call   0x10045785
1004f539:	mov    eax,DWORD PTR [ebp-0x10]
1004f53c:	cmp    DWORD PTR [eax+0xac],0x1
1004f543:	jle    0x1004f55b
1004f545:	lea    eax,[ebp-0x10]
1004f548:	push   eax
1004f549:	push   0x80
1004f54e:	push   DWORD PTR [ebp+0x8]
1004f551:	call   0x1004b5a3
1004f556:	add    esp,0xc
1004f559:	jmp    0x1004f56d
1004f55b:	mov    eax,DWORD PTR [eax+0xc8]
1004f561:	mov    ecx,DWORD PTR [ebp+0x8]
1004f564:	movzx  eax,BYTE PTR [eax+ecx*2]
1004f568:	and    eax,0x80
1004f56d:	cmp    BYTE PTR [ebp-0x4],0x0
1004f571:	je     0x1004f57a
1004f573:	mov    ecx,DWORD PTR [ebp-0x8]
1004f576:	and    DWORD PTR [ecx+0x70],0xfffffffd
1004f57a:	leave  
1004f57b:	ret    
1004f57c:	cmp    DWORD PTR ds:0x100802c8,0x0
1004f583:	jne    0x1004f599
1004f585:	mov    eax,DWORD PTR [esp+0x4]
1004f589:	mov    ecx,DWORD PTR ds:0x1007e998
1004f58f:	movzx  eax,BYTE PTR [ecx+eax*2]
1004f593:	and    eax,0x80
1004f598:	ret    
1004f599:	push   0x0
1004f59b:	push   DWORD PTR [esp+0x8]
1004f59f:	call   0x1004f528
1004f5a4:	pop    ecx
1004f5a5:	pop    ecx
1004f5a6:	ret    
1004f5a7:	push   ebp
1004f5a8:	mov    ebp,esp
1004f5aa:	sub    esp,0x10
1004f5ad:	push   DWORD PTR [ebp+0xc]
1004f5b0:	lea    ecx,[ebp-0x10]
1004f5b3:	call   0x10045785
1004f5b8:	mov    eax,DWORD PTR [ebp-0x10]
1004f5bb:	cmp    DWORD PTR [eax+0xac],0x1
1004f5c2:	jle    0x1004f5d7
1004f5c4:	lea    eax,[ebp-0x10]
1004f5c7:	push   eax
1004f5c8:	push   0x8
1004f5ca:	push   DWORD PTR [ebp+0x8]
1004f5cd:	call   0x1004b5a3
1004f5d2:	add    esp,0xc
1004f5d5:	jmp    0x1004f5e7
1004f5d7:	mov    eax,DWORD PTR [eax+0xc8]
1004f5dd:	mov    ecx,DWORD PTR [ebp+0x8]
1004f5e0:	movzx  eax,BYTE PTR [eax+ecx*2]
1004f5e4:	and    eax,0x8
1004f5e7:	cmp    BYTE PTR [ebp-0x4],0x0
1004f5eb:	je     0x1004f5f4
1004f5ed:	mov    ecx,DWORD PTR [ebp-0x8]
1004f5f0:	and    DWORD PTR [ecx+0x70],0xfffffffd
1004f5f4:	leave  
1004f5f5:	ret    
1004f5f6:	cmp    DWORD PTR ds:0x100802c8,0x0
1004f5fd:	jne    0x1004f611
1004f5ff:	mov    eax,DWORD PTR [esp+0x4]
1004f603:	mov    ecx,DWORD PTR ds:0x1007e998
1004f609:	movzx  eax,BYTE PTR [ecx+eax*2]
1004f60d:	and    eax,0x8
1004f610:	ret    
1004f611:	push   0x0
1004f613:	push   DWORD PTR [esp+0x8]
1004f617:	call   0x1004f5a7
1004f61c:	pop    ecx
1004f61d:	pop    ecx
1004f61e:	ret    
1004f61f:	push   ebp
1004f620:	mov    ebp,esp
1004f622:	sub    esp,0x10
1004f625:	push   DWORD PTR [ebp+0xc]
1004f628:	lea    ecx,[ebp-0x10]
1004f62b:	call   0x10045785
1004f630:	mov    eax,DWORD PTR [ebp-0x10]
1004f633:	cmp    DWORD PTR [eax+0xac],0x1
1004f63a:	jle    0x1004f652
1004f63c:	lea    eax,[ebp-0x10]
1004f63f:	push   eax
1004f640:	push   0x157
1004f645:	push   DWORD PTR [ebp+0x8]
1004f648:	call   0x1004b5a3
1004f64d:	add    esp,0xc
1004f650:	jmp    0x1004f664
1004f652:	mov    eax,DWORD PTR [eax+0xc8]
1004f658:	mov    ecx,DWORD PTR [ebp+0x8]
1004f65b:	movzx  eax,WORD PTR [eax+ecx*2]
1004f65f:	and    eax,0x157
1004f664:	cmp    BYTE PTR [ebp-0x4],0x0
1004f668:	je     0x1004f671
1004f66a:	mov    ecx,DWORD PTR [ebp-0x8]
1004f66d:	and    DWORD PTR [ecx+0x70],0xfffffffd
1004f671:	leave  
1004f672:	ret    
1004f673:	cmp    DWORD PTR ds:0x100802c8,0x0
1004f67a:	jne    0x1004f690
1004f67c:	mov    eax,DWORD PTR [esp+0x4]
1004f680:	mov    ecx,DWORD PTR ds:0x1007e998
1004f686:	movzx  eax,WORD PTR [ecx+eax*2]
1004f68a:	and    eax,0x157
1004f68f:	ret    
1004f690:	push   0x0
1004f692:	push   DWORD PTR [esp+0x8]
1004f696:	call   0x1004f61f
1004f69b:	pop    ecx
1004f69c:	pop    ecx
1004f69d:	ret    
1004f69e:	int3   
1004f69f:	int3   
1004f6a0:	mov    eax,DWORD PTR [esp+0x8]
1004f6a4:	mov    ecx,DWORD PTR [esp+0x10]
1004f6a8:	or     ecx,eax
1004f6aa:	mov    ecx,DWORD PTR [esp+0xc]
1004f6ae:	jne    0x1004f6b9
1004f6b0:	mov    eax,DWORD PTR [esp+0x4]
1004f6b4:	mul    ecx
1004f6b6:	ret    0x10
1004f6b9:	push   ebx
1004f6ba:	mul    ecx
1004f6bc:	mov    ebx,eax
1004f6be:	mov    eax,DWORD PTR [esp+0x8]
1004f6c2:	mul    DWORD PTR [esp+0x14]
1004f6c6:	add    ebx,eax
1004f6c8:	mov    eax,DWORD PTR [esp+0x8]
1004f6cc:	mul    ecx
1004f6ce:	add    edx,ebx
1004f6d0:	pop    ebx
1004f6d1:	ret    0x10
1004f6d4:	push   ebp
1004f6d5:	mov    ebp,esp
1004f6d7:	sub    esp,0xc
1004f6da:	mov    eax,ds:0x1007e030
1004f6df:	xor    eax,ebp
1004f6e1:	mov    DWORD PTR [ebp-0x4],eax
1004f6e4:	push   0x6
1004f6e6:	lea    eax,[ebp-0xc]
1004f6e9:	push   eax
1004f6ea:	push   0x1004
1004f6ef:	push   DWORD PTR [ebp+0x8]
1004f6f2:	mov    BYTE PTR [ebp-0x6],0x0
1004f6f6:	call   DWORD PTR ds:0x1006623c
1004f6fc:	test   eax,eax
1004f6fe:	jne    0x1004f705
1004f700:	or     eax,0xffffffff
1004f703:	jmp    0x1004f70f
1004f705:	lea    eax,[ebp-0xc]
1004f708:	push   eax
1004f709:	call   0x10045f44
1004f70e:	pop    ecx
1004f70f:	mov    ecx,DWORD PTR [ebp-0x4]
1004f712:	xor    ecx,ebp
1004f714:	call   0x100430d7
1004f719:	leave  
1004f71a:	ret    
1004f71b:	push   ebp
1004f71c:	mov    ebp,esp
1004f71e:	sub    esp,0x34
1004f721:	mov    eax,ds:0x1007e030
1004f726:	xor    eax,ebp
1004f728:	mov    DWORD PTR [ebp-0x4],eax
1004f72b:	mov    eax,DWORD PTR [ebp+0x10]
1004f72e:	mov    ecx,DWORD PTR [ebp+0x18]
1004f731:	mov    DWORD PTR [ebp-0x28],eax
1004f734:	mov    eax,DWORD PTR [ebp+0x14]
1004f737:	push   ebx
1004f738:	mov    DWORD PTR [ebp-0x30],eax
1004f73b:	mov    eax,DWORD PTR [eax]
1004f73d:	push   esi
1004f73e:	mov    DWORD PTR [ebp-0x24],eax
1004f741:	mov    eax,DWORD PTR [ebp+0x8]
1004f744:	push   edi
1004f745:	xor    edi,edi
1004f747:	cmp    eax,DWORD PTR [ebp+0xc]
1004f74a:	mov    DWORD PTR [ebp-0x34],ecx
1004f74d:	mov    DWORD PTR [ebp-0x20],edi
1004f750:	mov    DWORD PTR [ebp-0x2c],edi
1004f753:	je     0x1004f8b8
1004f759:	mov    esi,DWORD PTR ds:0x100661dc
1004f75f:	lea    ecx,[ebp-0x18]
1004f762:	push   ecx
1004f763:	push   eax
1004f764:	call   esi
1004f766:	test   eax,eax
1004f768:	mov    ebx,DWORD PTR ds:0x1006608c
1004f76e:	je     0x1004f7ce
1004f770:	cmp    DWORD PTR [ebp-0x18],0x1
1004f774:	jne    0x1004f7ce
1004f776:	lea    eax,[ebp-0x18]
1004f779:	push   eax
1004f77a:	push   DWORD PTR [ebp+0xc]
1004f77d:	call   esi
1004f77f:	test   eax,eax
1004f781:	je     0x1004f7ce
1004f783:	cmp    DWORD PTR [ebp-0x18],0x1
1004f787:	jne    0x1004f7ce
1004f789:	mov    esi,DWORD PTR [ebp-0x24]
1004f78c:	cmp    esi,0xffffffff
1004f78f:	mov    DWORD PTR [ebp-0x2c],0x1
1004f796:	jne    0x1004f7a4
1004f798:	push   DWORD PTR [ebp-0x28]
1004f79b:	call   0x10043250
1004f7a0:	mov    esi,eax
1004f7a2:	pop    ecx
1004f7a3:	inc    esi
1004f7a4:	cmp    esi,edi
1004f7a6:	jle    0x1004f803
1004f7a8:	cmp    esi,0x7ffffff0
1004f7ae:	ja     0x1004f803
1004f7b0:	lea    eax,[esi+esi*1+0x8]
1004f7b4:	cmp    eax,0x400
1004f7b9:	ja     0x1004f7ea
1004f7bb:	call   0x1004b990
1004f7c0:	mov    eax,esp
1004f7c2:	cmp    eax,edi
1004f7c4:	je     0x1004f7fe
1004f7c6:	mov    DWORD PTR [eax],0xcccc
1004f7cc:	jmp    0x1004f7fb
1004f7ce:	push   edi
1004f7cf:	push   edi
1004f7d0:	push   DWORD PTR [ebp-0x24]
1004f7d3:	push   DWORD PTR [ebp-0x28]
1004f7d6:	push   0x1
1004f7d8:	push   DWORD PTR [ebp+0x8]
1004f7db:	call   ebx
1004f7dd:	mov    esi,eax
1004f7df:	cmp    esi,edi
1004f7e1:	jne    0x1004f7a6
1004f7e3:	xor    eax,eax
1004f7e5:	jmp    0x1004f8bb
1004f7ea:	push   eax
1004f7eb:	call   0x10045222
1004f7f0:	cmp    eax,edi
1004f7f2:	pop    ecx
1004f7f3:	je     0x1004f7fe
1004f7f5:	mov    DWORD PTR [eax],0xdddd
1004f7fb:	add    eax,0x8
1004f7fe:	mov    DWORD PTR [ebp-0x1c],eax
1004f801:	jmp    0x1004f806
1004f803:	mov    DWORD PTR [ebp-0x1c],edi
1004f806:	cmp    DWORD PTR [ebp-0x1c],edi
1004f809:	je     0x1004f7e3
1004f80b:	lea    eax,[esi+esi*1]
1004f80e:	push   eax
1004f80f:	push   edi
1004f810:	push   DWORD PTR [ebp-0x1c]
1004f813:	call   0x10045ea0
1004f818:	add    esp,0xc
1004f81b:	push   esi
1004f81c:	push   DWORD PTR [ebp-0x1c]
1004f81f:	push   DWORD PTR [ebp-0x24]
1004f822:	push   DWORD PTR [ebp-0x28]
1004f825:	push   0x1
1004f827:	push   DWORD PTR [ebp+0x8]
1004f82a:	call   ebx
1004f82c:	test   eax,eax
1004f82e:	je     0x1004f8af
1004f830:	mov    ebx,DWORD PTR [ebp-0x34]
1004f833:	cmp    ebx,edi
1004f835:	je     0x1004f854
1004f837:	push   edi
1004f838:	push   edi
1004f839:	push   DWORD PTR [ebp+0x1c]
1004f83c:	push   ebx
1004f83d:	push   esi
1004f83e:	push   DWORD PTR [ebp-0x1c]
1004f841:	push   edi
1004f842:	push   DWORD PTR [ebp+0xc]
1004f845:	call   DWORD PTR ds:0x100660b8
1004f84b:	test   eax,eax
1004f84d:	je     0x1004f8af
1004f84f:	mov    DWORD PTR [ebp-0x20],ebx
1004f852:	jmp    0x1004f8af
1004f854:	cmp    DWORD PTR [ebp-0x2c],edi
1004f857:	mov    ebx,DWORD PTR ds:0x100660b8
1004f85d:	jne    0x1004f873
1004f85f:	push   edi
1004f860:	push   edi
1004f861:	push   edi
1004f862:	push   edi
1004f863:	push   esi
1004f864:	push   DWORD PTR [ebp-0x1c]
1004f867:	push   edi
1004f868:	push   DWORD PTR [ebp+0xc]
1004f86b:	call   ebx
1004f86d:	mov    esi,eax
1004f86f:	cmp    esi,edi
1004f871:	je     0x1004f8af
1004f873:	push   esi
1004f874:	push   0x1
1004f876:	call   0x10047702
1004f87b:	cmp    eax,edi
1004f87d:	pop    ecx
1004f87e:	pop    ecx
1004f87f:	mov    DWORD PTR [ebp-0x20],eax
1004f882:	je     0x1004f8af
1004f884:	push   edi
1004f885:	push   edi
1004f886:	push   esi
1004f887:	push   eax
1004f888:	push   esi
1004f889:	push   DWORD PTR [ebp-0x1c]
1004f88c:	push   edi
1004f88d:	push   DWORD PTR [ebp+0xc]
1004f890:	call   ebx
1004f892:	cmp    eax,edi
1004f894:	jne    0x1004f8a4
1004f896:	push   DWORD PTR [ebp-0x20]
1004f899:	call   0x10043748
1004f89e:	pop    ecx
1004f89f:	mov    DWORD PTR [ebp-0x20],edi
1004f8a2:	jmp    0x1004f8af
1004f8a4:	cmp    DWORD PTR [ebp-0x24],0xffffffff
1004f8a8:	je     0x1004f8af
1004f8aa:	mov    ecx,DWORD PTR [ebp-0x30]
1004f8ad:	mov    DWORD PTR [ecx],eax
1004f8af:	push   DWORD PTR [ebp-0x1c]
1004f8b2:	call   0x1001b5ea
1004f8b7:	pop    ecx
1004f8b8:	mov    eax,DWORD PTR [ebp-0x20]
1004f8bb:	lea    esp,[ebp-0x40]
1004f8be:	pop    edi
1004f8bf:	pop    esi
1004f8c0:	pop    ebx
1004f8c1:	mov    ecx,DWORD PTR [ebp-0x4]
1004f8c4:	xor    ecx,ebp
1004f8c6:	call   0x100430d7
1004f8cb:	leave  
1004f8cc:	ret    
1004f8cd:	push   ebp
1004f8ce:	mov    ebp,esp
1004f8d0:	sub    esp,0x14
1004f8d3:	cmp    WORD PTR [ebp+0x8],0xffff
1004f8d9:	jne    0x1004f8e1
1004f8db:	and    DWORD PTR [ebp-0x4],0x0
1004f8df:	jmp    0x1004f943
1004f8e1:	cmp    WORD PTR [ebp+0x8],0x100
1004f8e7:	jae    0x1004f903
1004f8e9:	movzx  eax,WORD PTR [ebp+0x8]
1004f8ed:	mov    ecx,DWORD PTR ds:0x1007ed34
1004f8f3:	mov    ax,WORD PTR [ecx+eax*2]
1004f8f7:	and    ax,WORD PTR [ebp+0xc]
1004f8fb:	movzx  eax,ax
1004f8fe:	mov    DWORD PTR [ebp-0x4],eax
1004f901:	jmp    0x1004f943
1004f903:	push   DWORD PTR [ebp+0x10]
1004f906:	lea    ecx,[ebp-0x14]
1004f909:	call   0x10045785
1004f90e:	mov    eax,DWORD PTR [ebp-0x14]
1004f911:	push   DWORD PTR [eax+0x14]
1004f914:	push   DWORD PTR [eax+0x4]
1004f917:	lea    eax,[ebp-0x4]
1004f91a:	push   eax
1004f91b:	push   0x1
1004f91d:	lea    eax,[ebp+0x8]
1004f920:	push   eax
1004f921:	lea    eax,[ebp-0x14]
1004f924:	push   0x1
1004f926:	push   eax
1004f927:	call   0x100506c7
1004f92c:	add    esp,0x1c
1004f92f:	test   eax,eax
1004f931:	jne    0x1004f936
1004f933:	and    DWORD PTR [ebp-0x4],eax
1004f936:	cmp    BYTE PTR [ebp-0x8],0x0
1004f93a:	je     0x1004f943
1004f93c:	mov    eax,DWORD PTR [ebp-0xc]
1004f93f:	and    DWORD PTR [eax+0x70],0xfffffffd
1004f943:	movzx  eax,WORD PTR [ebp-0x4]
1004f947:	movzx  ecx,WORD PTR [ebp+0xc]
1004f94b:	and    eax,ecx
1004f94d:	leave  
1004f94e:	ret    
1004f94f:	push   ebp
1004f950:	mov    ebp,esp
1004f952:	sub    esp,0x10
1004f955:	push   DWORD PTR [ebp+0x8]
1004f958:	lea    ecx,[ebp-0x10]
1004f95b:	call   0x10045785
1004f960:	movzx  eax,BYTE PTR [ebp+0xc]
1004f964:	mov    ecx,DWORD PTR [ebp-0xc]
1004f967:	mov    dl,BYTE PTR [ebp+0x14]
1004f96a:	test   BYTE PTR [ecx+eax*1+0x1d],dl
1004f96e:	jne    0x1004f98e
1004f970:	cmp    DWORD PTR [ebp+0x10],0x0
1004f974:	je     0x1004f988
1004f976:	mov    ecx,DWORD PTR [ebp-0x10]
1004f979:	mov    ecx,DWORD PTR [ecx+0xc8]
1004f97f:	movzx  eax,WORD PTR [ecx+eax*2]
1004f983:	and    eax,DWORD PTR [ebp+0x10]
1004f986:	jmp    0x1004f98a
1004f988:	xor    eax,eax
1004f98a:	test   eax,eax
1004f98c:	je     0x1004f991
1004f98e:	xor    eax,eax
1004f990:	inc    eax
1004f991:	cmp    BYTE PTR [ebp-0x4],0x0
1004f995:	je     0x1004f99e
1004f997:	mov    ecx,DWORD PTR [ebp-0x8]
1004f99a:	and    DWORD PTR [ecx+0x70],0xfffffffd
1004f99e:	leave  
1004f99f:	ret    
1004f9a0:	push   0x4
1004f9a2:	push   0x0
1004f9a4:	push   DWORD PTR [esp+0xc]
1004f9a8:	push   0x0
1004f9aa:	call   0x1004f94f
1004f9af:	add    esp,0x10
1004f9b2:	ret    
1004f9b3:	int3   
1004f9b4:	push   ebp
1004f9b5:	mov    ebp,esp
1004f9b7:	push   ebx
1004f9b8:	push   esi
1004f9b9:	push   edi
1004f9ba:	push   ebp
1004f9bb:	push   0x0
1004f9bd:	push   0x0
1004f9bf:	push   0x1004f9cc
1004f9c4:	push   DWORD PTR [ebp+0x8]
1004f9c7:	call   0x10056d74
1004f9cc:	pop    ebp
1004f9cd:	pop    edi
1004f9ce:	pop    esi
1004f9cf:	pop    ebx
1004f9d0:	mov    esp,ebp
1004f9d2:	pop    ebp
1004f9d3:	ret    
1004f9d4:	mov    ecx,DWORD PTR [esp+0x4]
1004f9d8:	test   DWORD PTR [ecx+0x4],0x6
1004f9df:	mov    eax,0x1
1004f9e4:	je     0x1004fa18
1004f9e6:	mov    eax,DWORD PTR [esp+0x14]
1004f9ea:	mov    ecx,DWORD PTR [eax-0x4]
1004f9ed:	xor    ecx,eax
1004f9ef:	call   0x100430d7
1004f9f4:	push   ebp
1004f9f5:	mov    ebp,DWORD PTR [eax+0x10]
1004f9f8:	mov    edx,DWORD PTR [eax+0x28]
1004f9fb:	push   edx
1004f9fc:	mov    edx,DWORD PTR [eax+0x24]
1004f9ff:	push   edx
1004fa00:	call   0x1004fa19
1004fa05:	add    esp,0x8
1004fa08:	pop    ebp
1004fa09:	mov    eax,DWORD PTR [esp+0x8]
1004fa0d:	mov    edx,DWORD PTR [esp+0x10]
1004fa11:	mov    DWORD PTR [edx],eax
1004fa13:	mov    eax,0x3
1004fa18:	ret    
1004fa19:	push   ebx
1004fa1a:	push   esi
1004fa1b:	push   edi
1004fa1c:	mov    eax,DWORD PTR [esp+0x10]
1004fa20:	push   ebp
1004fa21:	push   eax
1004fa22:	push   0xfffffffe
1004fa24:	push   0x1004f9d4
1004fa29:	push   DWORD PTR fs:0x0
1004fa30:	mov    eax,ds:0x1007e030
1004fa35:	xor    eax,esp
1004fa37:	push   eax
1004fa38:	lea    eax,[esp+0x4]
1004fa3c:	mov    fs:0x0,eax
1004fa42:	mov    eax,DWORD PTR [esp+0x28]
1004fa46:	mov    ebx,DWORD PTR [eax+0x8]
1004fa49:	mov    esi,DWORD PTR [eax+0xc]
1004fa4c:	cmp    esi,0xffffffff
1004fa4f:	je     0x1004fa8b
1004fa51:	cmp    DWORD PTR [esp+0x2c],0xffffffff
1004fa56:	je     0x1004fa5e
1004fa58:	cmp    esi,DWORD PTR [esp+0x2c]
1004fa5c:	jbe    0x1004fa8b
1004fa5e:	lea    esi,[esi+esi*2]
1004fa61:	mov    ecx,DWORD PTR [ebx+esi*4]
1004fa64:	mov    DWORD PTR [esp+0xc],ecx
1004fa68:	mov    DWORD PTR [eax+0xc],ecx
1004fa6b:	cmp    DWORD PTR [ebx+esi*4+0x4],0x0
1004fa70:	jne    0x1004fa89
1004fa72:	push   0x101
1004fa77:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
1004fa7b:	call   0x1004fac9
1004fa80:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
1004fa84:	call   0x1004fae8
1004fa89:	jmp    0x1004fa42
1004fa8b:	mov    ecx,DWORD PTR [esp+0x4]
1004fa8f:	mov    DWORD PTR fs:0x0,ecx
1004fa96:	add    esp,0x18
1004fa99:	pop    edi
1004fa9a:	pop    esi
1004fa9b:	pop    ebx
1004fa9c:	ret    
1004fa9d:	xor    eax,eax
1004fa9f:	mov    ecx,DWORD PTR fs:0x0
1004faa6:	cmp    DWORD PTR [ecx+0x4],0x1004f9d4
1004faad:	jne    0x1004fabf
1004faaf:	mov    edx,DWORD PTR [ecx+0xc]
1004fab2:	mov    edx,DWORD PTR [edx+0xc]
1004fab5:	cmp    DWORD PTR [ecx+0x8],edx
1004fab8:	jne    0x1004fabf
1004faba:	mov    eax,0x1
1004fabf:	ret    
1004fac0:	push   ebx
1004fac1:	push   ecx
1004fac2:	mov    ebx,0x1007ee40
1004fac7:	jmp    0x1004fad4
1004fac9:	push   ebx
1004faca:	push   ecx
1004facb:	mov    ebx,0x1007ee40
1004fad0:	mov    ecx,DWORD PTR [esp+0xc]
1004fad4:	mov    DWORD PTR [ebx+0x8],ecx
1004fad7:	mov    DWORD PTR [ebx+0x4],eax
1004fada:	mov    DWORD PTR [ebx+0xc],ebp
1004fadd:	push   ebp
1004fade:	push   ecx
1004fadf:	push   eax
1004fae0:	pop    eax
1004fae1:	pop    ecx
1004fae2:	pop    ebp
1004fae3:	pop    ecx
1004fae4:	pop    ebx
1004fae5:	ret    0x4
1004fae8:	call   eax
1004faea:	ret    
1004faeb:	push   0x2
1004faed:	call   0x10047838
1004faf2:	pop    ecx
1004faf3:	ret    
1004faf4:	xor    eax,eax
1004faf6:	inc    eax
1004faf7:	cmp    DWORD PTR [esp+0x4],0x0
1004fafc:	jne    0x1004fb00
1004fafe:	xor    eax,eax
1004fb00:	ret    
1004fb01:	mov    eax,DWORD PTR [esp+0x4]
1004fb05:	test   eax,eax
1004fb07:	push   esi
1004fb08:	push   edi
1004fb09:	jl     0x1004fb65
1004fb0b:	cmp    eax,DWORD PTR ds:0x10082464
1004fb11:	jae    0x1004fb65
1004fb13:	mov    esi,eax
1004fb15:	and    esi,0x1f
1004fb18:	imul   esi,esi,0x28
1004fb1b:	mov    ecx,eax
1004fb1d:	sar    ecx,0x5
1004fb20:	lea    edi,[ecx*4+0x10082480]
1004fb27:	mov    ecx,DWORD PTR [edi]
1004fb29:	cmp    DWORD PTR [esi+ecx*1],0xffffffff
1004fb2d:	jne    0x1004fb65
1004fb2f:	cmp    DWORD PTR ds:0x1007faa4,0x1
1004fb36:	push   ebx
1004fb37:	mov    ebx,DWORD PTR [esp+0x14]
1004fb3b:	jne    0x1004fb5b
1004fb3d:	sub    eax,0x0
1004fb40:	je     0x1004fb52
1004fb42:	dec    eax
1004fb43:	je     0x1004fb4d
1004fb45:	dec    eax
1004fb46:	jne    0x1004fb5b
1004fb48:	push   ebx
1004fb49:	push   0xfffffff4
1004fb4b:	jmp    0x1004fb55
1004fb4d:	push   ebx
1004fb4e:	push   0xfffffff5
1004fb50:	jmp    0x1004fb55
1004fb52:	push   ebx
1004fb53:	push   0xfffffff6
1004fb55:	call   DWORD PTR ds:0x10066244
1004fb5b:	mov    eax,DWORD PTR [edi]
1004fb5d:	mov    DWORD PTR [esi+eax*1],ebx
1004fb60:	xor    eax,eax
1004fb62:	pop    ebx
1004fb63:	jmp    0x1004fb7b
1004fb65:	call   0x10046df5
1004fb6a:	mov    DWORD PTR [eax],0x9
1004fb70:	call   0x10046e08
1004fb75:	and    DWORD PTR [eax],0x0
1004fb78:	or     eax,0xffffffff
1004fb7b:	pop    edi
1004fb7c:	pop    esi
1004fb7d:	ret    
1004fb7e:	mov    ecx,DWORD PTR [esp+0x4]
1004fb82:	push   ebx
1004fb83:	xor    ebx,ebx
1004fb85:	cmp    ecx,ebx
1004fb87:	push   esi
1004fb88:	push   edi
1004fb89:	jl     0x1004fbe6
1004fb8b:	cmp    ecx,DWORD PTR ds:0x10082464
1004fb91:	jae    0x1004fbe6
1004fb93:	mov    esi,ecx
1004fb95:	and    esi,0x1f
1004fb98:	imul   esi,esi,0x28
1004fb9b:	mov    eax,ecx
1004fb9d:	sar    eax,0x5
1004fba0:	lea    edi,[eax*4+0x10082480]
1004fba7:	mov    eax,DWORD PTR [edi]
1004fba9:	add    eax,esi
1004fbab:	test   BYTE PTR [eax+0x4],0x1
1004fbaf:	je     0x1004fbe6
1004fbb1:	cmp    DWORD PTR [eax],0xffffffff
1004fbb4:	je     0x1004fbe6
1004fbb6:	cmp    DWORD PTR ds:0x1007faa4,0x1
1004fbbd:	jne    0x1004fbdc
1004fbbf:	sub    ecx,ebx
1004fbc1:	je     0x1004fbd3
1004fbc3:	dec    ecx
1004fbc4:	je     0x1004fbce
1004fbc6:	dec    ecx
1004fbc7:	jne    0x1004fbdc
1004fbc9:	push   ebx
1004fbca:	push   0xfffffff4
1004fbcc:	jmp    0x1004fbd6
1004fbce:	push   ebx
1004fbcf:	push   0xfffffff5
1004fbd1:	jmp    0x1004fbd6
1004fbd3:	push   ebx
1004fbd4:	push   0xfffffff6
1004fbd6:	call   DWORD PTR ds:0x10066244
1004fbdc:	mov    eax,DWORD PTR [edi]
1004fbde:	or     DWORD PTR [esi+eax*1],0xffffffff
1004fbe2:	xor    eax,eax
1004fbe4:	jmp    0x1004fbfb
1004fbe6:	call   0x10046df5
1004fbeb:	mov    DWORD PTR [eax],0x9
1004fbf1:	call   0x10046e08
1004fbf6:	mov    DWORD PTR [eax],ebx
1004fbf8:	or     eax,0xffffffff
1004fbfb:	pop    edi
1004fbfc:	pop    esi
1004fbfd:	pop    ebx
1004fbfe:	ret    
1004fbff:	mov    eax,DWORD PTR [esp+0x4]
1004fc03:	cmp    eax,0xfffffffe
1004fc06:	jne    0x1004fc1f
1004fc08:	call   0x10046e08
1004fc0d:	and    DWORD PTR [eax],0x0
1004fc10:	call   0x10046df5
1004fc15:	mov    DWORD PTR [eax],0x9
1004fc1b:	or     eax,0xffffffff
1004fc1e:	ret    
1004fc1f:	push   esi
1004fc20:	xor    esi,esi
1004fc22:	cmp    eax,esi
1004fc24:	jl     0x1004fc48
1004fc26:	cmp    eax,DWORD PTR ds:0x10082464
1004fc2c:	jae    0x1004fc48
1004fc2e:	mov    ecx,eax
1004fc30:	and    eax,0x1f
1004fc33:	imul   eax,eax,0x28
1004fc36:	sar    ecx,0x5
1004fc39:	mov    ecx,DWORD PTR [ecx*4+0x10082480]
1004fc40:	add    eax,ecx
1004fc42:	test   BYTE PTR [eax+0x4],0x1
1004fc46:	jne    0x1004fc6c
1004fc48:	call   0x10046e08
1004fc4d:	mov    DWORD PTR [eax],esi
1004fc4f:	call   0x10046df5
1004fc54:	push   esi
1004fc55:	push   esi
1004fc56:	push   esi
1004fc57:	push   esi
1004fc58:	push   esi
1004fc59:	mov    DWORD PTR [eax],0x9
1004fc5f:	call   0x100435cc
1004fc64:	add    esp,0x14
1004fc67:	or     eax,0xffffffff
1004fc6a:	pop    esi
1004fc6b:	ret    
1004fc6c:	mov    eax,DWORD PTR [eax]
1004fc6e:	pop    esi
1004fc6f:	ret    
1004fc70:	push   0xc
1004fc72:	push   0x100749a8
1004fc77:	call   0x10046f34
1004fc7c:	mov    edi,DWORD PTR [ebp+0x8]
1004fc7f:	mov    eax,edi
1004fc81:	sar    eax,0x5
1004fc84:	mov    esi,edi
1004fc86:	and    esi,0x1f
1004fc89:	imul   esi,esi,0x28
1004fc8c:	add    esi,DWORD PTR [eax*4+0x10082480]
1004fc93:	mov    DWORD PTR [ebp-0x1c],0x1
1004fc9a:	xor    ebx,ebx
1004fc9c:	cmp    DWORD PTR [esi+0x8],ebx
1004fc9f:	jne    0x1004fcd7
1004fca1:	push   0xa
1004fca3:	call   0x10047f3d
1004fca8:	pop    ecx
1004fca9:	mov    DWORD PTR [ebp-0x4],ebx
1004fcac:	cmp    DWORD PTR [esi+0x8],ebx
1004fcaf:	jne    0x1004fccb
1004fcb1:	push   0xfa0
1004fcb6:	lea    eax,[esi+0xc]
1004fcb9:	push   eax
1004fcba:	call   0x1004c83b
1004fcbf:	pop    ecx
1004fcc0:	pop    ecx
1004fcc1:	test   eax,eax
1004fcc3:	jne    0x1004fcc8
1004fcc5:	mov    DWORD PTR [ebp-0x1c],ebx
1004fcc8:	inc    DWORD PTR [esi+0x8]
1004fccb:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1004fcd2:	call   0x1004fd07
1004fcd7:	cmp    DWORD PTR [ebp-0x1c],ebx
1004fcda:	je     0x1004fcf9
1004fcdc:	mov    eax,edi
1004fcde:	sar    eax,0x5
1004fce1:	and    edi,0x1f
1004fce4:	imul   edi,edi,0x28
1004fce7:	mov    eax,DWORD PTR [eax*4+0x10082480]
1004fcee:	lea    eax,[eax+edi*1+0xc]
1004fcf2:	push   eax
1004fcf3:	call   DWORD PTR ds:0x100660f0
1004fcf9:	mov    eax,DWORD PTR [ebp-0x1c]
1004fcfc:	call   0x10046f79
1004fd01:	ret    
1004fd02:	xor    ebx,ebx
1004fd04:	mov    edi,DWORD PTR [ebp+0x8]
1004fd07:	push   0xa
1004fd09:	call   0x10047e65
1004fd0e:	pop    ecx
1004fd0f:	ret    
1004fd10:	mov    eax,DWORD PTR [esp+0x4]
1004fd14:	mov    ecx,eax
1004fd16:	and    eax,0x1f
1004fd19:	imul   eax,eax,0x28
1004fd1c:	sar    ecx,0x5
1004fd1f:	mov    ecx,DWORD PTR [ecx*4+0x10082480]
1004fd26:	lea    eax,[ecx+eax*1+0xc]
1004fd2a:	push   eax
1004fd2b:	call   DWORD PTR ds:0x100660ec
1004fd31:	ret    
1004fd32:	push   0x18
1004fd34:	push   0x100749c8
1004fd39:	call   0x10046f34
1004fd3e:	or     DWORD PTR [ebp-0x1c],0xffffffff
1004fd42:	xor    edi,edi
1004fd44:	mov    DWORD PTR [ebp-0x24],edi
1004fd47:	push   0xb
1004fd49:	call   0x10047e7a
1004fd4e:	pop    ecx
1004fd4f:	test   eax,eax
1004fd51:	jne    0x1004fd5b
1004fd53:	or     eax,0xffffffff
1004fd56:	jmp    0x1004fec2
1004fd5b:	push   0xb
1004fd5d:	call   0x10047f3d
1004fd62:	pop    ecx
1004fd63:	mov    DWORD PTR [ebp-0x4],edi
1004fd66:	mov    DWORD PTR [ebp-0x28],edi
1004fd69:	cmp    edi,0x40
1004fd6c:	jge    0x1004feb3
1004fd72:	mov    esi,DWORD PTR [edi*4+0x10082480]
1004fd79:	test   esi,esi
1004fd7b:	je     0x1004fe40
1004fd81:	mov    DWORD PTR [ebp-0x20],esi
1004fd84:	mov    eax,DWORD PTR [edi*4+0x10082480]
1004fd8b:	add    eax,0x500
1004fd90:	cmp    esi,eax
1004fd92:	jae    0x1004fe34
1004fd98:	test   BYTE PTR [esi+0x4],0x1
1004fd9c:	jne    0x1004fdfa
1004fd9e:	cmp    DWORD PTR [esi+0x8],0x0
1004fda2:	jne    0x1004fddd
1004fda4:	push   0xa
1004fda6:	call   0x10047f3d
1004fdab:	pop    ecx
1004fdac:	xor    ebx,ebx
1004fdae:	inc    ebx
1004fdaf:	mov    DWORD PTR [ebp-0x4],ebx
1004fdb2:	cmp    DWORD PTR [esi+0x8],0x0
1004fdb6:	jne    0x1004fdd4
1004fdb8:	push   0xfa0
1004fdbd:	lea    eax,[esi+0xc]
1004fdc0:	push   eax
1004fdc1:	call   0x1004c83b
1004fdc6:	pop    ecx
1004fdc7:	pop    ecx
1004fdc8:	test   eax,eax
1004fdca:	jne    0x1004fdd1
1004fdcc:	mov    DWORD PTR [ebp-0x24],ebx
1004fdcf:	jmp    0x1004fdd4
1004fdd1:	inc    DWORD PTR [esi+0x8]
1004fdd4:	and    DWORD PTR [ebp-0x4],0x0
1004fdd8:	call   0x1004fe05
1004fddd:	cmp    DWORD PTR [ebp-0x24],0x0
1004fde1:	jne    0x1004fdfa
1004fde3:	lea    ebx,[esi+0xc]
1004fde6:	push   ebx
1004fde7:	call   DWORD PTR ds:0x100660f0
1004fded:	test   BYTE PTR [esi+0x4],0x1
1004fdf1:	je     0x1004fe0e
1004fdf3:	push   ebx
1004fdf4:	call   DWORD PTR ds:0x100660ec
1004fdfa:	add    esi,0x28
1004fdfd:	jmp    0x1004fd81
1004fdff:	mov    edi,DWORD PTR [ebp-0x28]
1004fe02:	mov    esi,DWORD PTR [ebp-0x20]
1004fe05:	push   0xa
1004fe07:	call   0x10047e65
1004fe0c:	pop    ecx
1004fe0d:	ret    
1004fe0e:	cmp    DWORD PTR [ebp-0x24],0x0
1004fe12:	jne    0x1004fdfa
1004fe14:	mov    BYTE PTR [esi+0x4],0x1
1004fe18:	or     DWORD PTR [esi],0xffffffff
1004fe1b:	mov    eax,esi
1004fe1d:	sub    eax,DWORD PTR [edi*4+0x10082480]
1004fe24:	cdq    
1004fe25:	push   0x28
1004fe27:	pop    ecx
1004fe28:	idiv   ecx
1004fe2a:	mov    ecx,edi
1004fe2c:	shl    ecx,0x5
1004fe2f:	add    eax,ecx
1004fe31:	mov    DWORD PTR [ebp-0x1c],eax
1004fe34:	cmp    DWORD PTR [ebp-0x1c],0xffffffff
1004fe38:	jne    0x1004feb3
1004fe3a:	inc    edi
1004fe3b:	jmp    0x1004fd66
1004fe40:	push   0x28
1004fe42:	push   0x20
1004fe44:	call   0x10047702
1004fe49:	pop    ecx
1004fe4a:	pop    ecx
1004fe4b:	mov    DWORD PTR [ebp-0x20],eax
1004fe4e:	test   eax,eax
1004fe50:	je     0x1004feb3
1004fe52:	lea    ecx,[edi*4+0x10082480]
1004fe59:	mov    DWORD PTR [ecx],eax
1004fe5b:	add    DWORD PTR ds:0x10082464,0x20
1004fe62:	mov    edx,DWORD PTR [ecx]
1004fe64:	add    edx,0x500
1004fe6a:	cmp    eax,edx
1004fe6c:	jae    0x1004fe85
1004fe6e:	mov    BYTE PTR [eax+0x4],0x0
1004fe72:	or     DWORD PTR [eax],0xffffffff
1004fe75:	mov    BYTE PTR [eax+0x5],0xa
1004fe79:	and    DWORD PTR [eax+0x8],0x0
1004fe7d:	add    eax,0x28
1004fe80:	mov    DWORD PTR [ebp-0x20],eax
1004fe83:	jmp    0x1004fe62
1004fe85:	shl    edi,0x5
1004fe88:	mov    DWORD PTR [ebp-0x1c],edi
1004fe8b:	mov    eax,edi
1004fe8d:	sar    eax,0x5
1004fe90:	mov    ecx,edi
1004fe92:	and    ecx,0x1f
1004fe95:	imul   ecx,ecx,0x28
1004fe98:	mov    eax,DWORD PTR [eax*4+0x10082480]
1004fe9f:	mov    BYTE PTR [eax+ecx*1+0x4],0x1
1004fea4:	push   edi
1004fea5:	call   0x1004fc70
1004feaa:	pop    ecx
1004feab:	test   eax,eax
1004fead:	jne    0x1004feb3
1004feaf:	or     DWORD PTR [ebp-0x1c],0xffffffff
1004feb3:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1004feba:	call   0x1004fec8
1004febf:	mov    eax,DWORD PTR [ebp-0x1c]
1004fec2:	call   0x10046f79
1004fec7:	ret    
1004fec8:	push   0xb
1004feca:	call   0x10047e65
1004fecf:	pop    ecx
1004fed0:	ret    
1004fed1:	push   ebp
1004fed2:	mov    ebp,esp
1004fed4:	sub    esp,0x10
1004fed7:	mov    eax,ds:0x1007e030
1004fedc:	xor    eax,ebp
1004fede:	mov    DWORD PTR [ebp-0x4],eax
1004fee1:	push   esi
1004fee2:	xor    esi,esi
1004fee4:	cmp    DWORD PTR ds:0x1007ee50,esi
1004feea:	je     0x1004ff3a
1004feec:	cmp    DWORD PTR ds:0x1007ef74,0xfffffffe
1004fef3:	jne    0x1004fefa
1004fef5:	call   0x10050705
1004fefa:	mov    eax,ds:0x1007ef74
1004feff:	cmp    eax,0xffffffff
1004ff02:	jne    0x1004ff0a
1004ff04:	or     ax,0xffff
1004ff08:	jmp    0x1004ff7a
1004ff0a:	push   esi
1004ff0b:	lea    ecx,[ebp-0x10]
1004ff0e:	push   ecx
1004ff0f:	push   0x1
1004ff11:	lea    ecx,[ebp+0x8]
1004ff14:	push   ecx
1004ff15:	push   eax
1004ff16:	call   DWORD PTR ds:0x10066250
1004ff1c:	test   eax,eax
1004ff1e:	jne    0x1004ff87
1004ff20:	cmp    DWORD PTR ds:0x1007ee50,0x2
1004ff27:	jne    0x1004ff04
1004ff29:	call   DWORD PTR ds:0x100660cc
1004ff2f:	cmp    eax,0x78
1004ff32:	jne    0x1004ff04
1004ff34:	mov    DWORD PTR ds:0x1007ee50,esi
1004ff3a:	push   esi
1004ff3b:	push   esi
1004ff3c:	push   0x5
1004ff3e:	lea    eax,[ebp-0xc]
1004ff41:	push   eax
1004ff42:	push   0x1
1004ff44:	lea    eax,[ebp+0x8]
1004ff47:	push   eax
1004ff48:	push   esi
1004ff49:	call   DWORD PTR ds:0x1006624c
1004ff4f:	push   eax
1004ff50:	call   DWORD PTR ds:0x100660b8
1004ff56:	mov    ecx,DWORD PTR ds:0x1007ef74
1004ff5c:	cmp    ecx,0xffffffff
1004ff5f:	je     0x1004ff04
1004ff61:	push   esi
1004ff62:	lea    edx,[ebp-0x10]
1004ff65:	push   edx
1004ff66:	push   eax
1004ff67:	lea    eax,[ebp-0xc]
1004ff6a:	push   eax
1004ff6b:	push   ecx
1004ff6c:	call   DWORD PTR ds:0x10066248
1004ff72:	test   eax,eax
1004ff74:	je     0x1004ff04
1004ff76:	mov    ax,WORD PTR [ebp+0x8]
1004ff7a:	mov    ecx,DWORD PTR [ebp-0x4]
1004ff7d:	xor    ecx,ebp
1004ff7f:	pop    esi
1004ff80:	call   0x100430d7
1004ff85:	leave  
1004ff86:	ret    
1004ff87:	mov    DWORD PTR ds:0x1007ee50,0x1
1004ff91:	jmp    0x1004ff76
1004ff93:	push   0x10
1004ff95:	push   0x100749f0
1004ff9a:	call   0x10046f34
1004ff9f:	xor    ebx,ebx
1004ffa1:	mov    DWORD PTR [ebp-0x1c],ebx
1004ffa4:	push   0x1
1004ffa6:	call   0x10047f3d
1004ffab:	pop    ecx
1004ffac:	mov    DWORD PTR [ebp-0x4],ebx
1004ffaf:	push   0x3
1004ffb1:	pop    edi
1004ffb2:	mov    DWORD PTR [ebp-0x20],edi
1004ffb5:	cmp    edi,DWORD PTR ds:0x10082460
1004ffbb:	jge    0x10050014
1004ffbd:	mov    esi,edi
1004ffbf:	shl    esi,0x2
1004ffc2:	mov    eax,ds:0x10081440
1004ffc7:	add    eax,esi
1004ffc9:	cmp    DWORD PTR [eax],ebx
1004ffcb:	je     0x10050011
1004ffcd:	mov    eax,DWORD PTR [eax]
1004ffcf:	test   BYTE PTR [eax+0xc],0x83
1004ffd3:	je     0x1004ffe4
1004ffd5:	push   eax
1004ffd6:	call   0x100507c4
1004ffdb:	pop    ecx
1004ffdc:	cmp    eax,0xffffffff
1004ffdf:	je     0x1004ffe4
1004ffe1:	inc    DWORD PTR [ebp-0x1c]
1004ffe4:	cmp    edi,0x14
1004ffe7:	jl     0x10050011
1004ffe9:	mov    eax,ds:0x10081440
1004ffee:	mov    eax,DWORD PTR [esi+eax*1]
1004fff1:	add    eax,0x20
1004fff4:	push   eax
1004fff5:	call   DWORD PTR ds:0x10066138
1004fffb:	mov    eax,ds:0x10081440
10050000:	push   DWORD PTR [esi+eax*1]
10050003:	call   0x10043748
10050008:	pop    ecx
10050009:	mov    eax,ds:0x10081440
1005000e:	mov    DWORD PTR [esi+eax*1],ebx
10050011:	inc    edi
10050012:	jmp    0x1004ffb2
10050014:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1005001b:	call   0x10050029
10050020:	mov    eax,DWORD PTR [ebp-0x1c]
10050023:	call   0x10046f79
10050028:	ret    
10050029:	push   0x1
1005002b:	call   0x10047e65
10050030:	pop    ecx
10050031:	ret    
10050032:	push   ebx
10050033:	push   esi
10050034:	mov    esi,DWORD PTR [esp+0xc]
10050038:	mov    eax,DWORD PTR [esi+0xc]
1005003b:	mov    ecx,eax
1005003d:	and    cl,0x3
10050040:	xor    ebx,ebx
10050042:	cmp    cl,0x2
10050045:	jne    0x10050086
10050047:	test   ax,0x108
1005004b:	je     0x10050086
1005004d:	mov    eax,DWORD PTR [esi+0x8]
10050050:	push   edi
10050051:	mov    edi,DWORD PTR [esi]
10050053:	sub    edi,eax
10050055:	test   edi,edi
10050057:	jle    0x10050085
10050059:	push   edi
1005005a:	push   eax
1005005b:	push   esi
1005005c:	call   0x1004d40c
10050061:	pop    ecx
10050062:	push   eax
10050063:	call   0x1004d113
10050068:	add    esp,0xc
1005006b:	cmp    eax,edi
1005006d:	jne    0x1005007e
1005006f:	mov    eax,DWORD PTR [esi+0xc]
10050072:	test   al,al
10050074:	jns    0x10050085
10050076:	and    eax,0xfffffffd
10050079:	mov    DWORD PTR [esi+0xc],eax
1005007c:	jmp    0x10050085
1005007e:	or     DWORD PTR [esi+0xc],0x20
10050082:	or     ebx,0xffffffff
10050085:	pop    edi
10050086:	mov    eax,DWORD PTR [esi+0x8]
10050089:	and    DWORD PTR [esi+0x4],0x0
1005008d:	mov    DWORD PTR [esi],eax
1005008f:	pop    esi
10050090:	mov    eax,ebx
10050092:	pop    ebx
10050093:	ret    
10050094:	push   esi
10050095:	mov    esi,DWORD PTR [esp+0x8]
10050099:	test   esi,esi
1005009b:	jne    0x100500a6
1005009d:	push   esi
1005009e:	call   0x100500d6
100500a3:	pop    ecx
100500a4:	pop    esi
100500a5:	ret    
100500a6:	push   esi
100500a7:	call   0x10050032
100500ac:	test   eax,eax
100500ae:	pop    ecx
100500af:	je     0x100500b6
100500b1:	or     eax,0xffffffff
100500b4:	pop    esi
100500b5:	ret    
100500b6:	test   WORD PTR [esi+0xc],0x4000
100500bc:	je     0x100500d2
100500be:	push   esi
100500bf:	call   0x1004d40c
100500c4:	push   eax
100500c5:	call   0x10050840
100500ca:	pop    ecx
100500cb:	pop    ecx
100500cc:	neg    eax
100500ce:	sbb    eax,eax
100500d0:	pop    esi
100500d1:	ret    
100500d2:	xor    eax,eax
100500d4:	pop    esi
100500d5:	ret    
100500d6:	push   0x14
100500d8:	push   0x10074a10
100500dd:	call   0x10046f34
100500e2:	xor    edi,edi
100500e4:	mov    DWORD PTR [ebp-0x1c],edi
100500e7:	mov    DWORD PTR [ebp-0x24],edi
100500ea:	push   0x1
100500ec:	call   0x10047f3d
100500f1:	pop    ecx
100500f2:	mov    DWORD PTR [ebp-0x4],edi
100500f5:	xor    esi,esi
100500f7:	mov    DWORD PTR [ebp-0x20],esi
100500fa:	cmp    esi,DWORD PTR ds:0x10082460
10050100:	jge    0x10050189
10050106:	mov    eax,ds:0x10081440
1005010b:	lea    eax,[eax+esi*4]
1005010e:	cmp    DWORD PTR [eax],edi
10050110:	je     0x10050170
10050112:	mov    eax,DWORD PTR [eax]
10050114:	test   BYTE PTR [eax+0xc],0x83
10050118:	je     0x10050170
1005011a:	push   eax
1005011b:	push   esi
1005011c:	call   0x1004d397
10050121:	pop    ecx
10050122:	pop    ecx
10050123:	xor    edx,edx
10050125:	inc    edx
10050126:	mov    DWORD PTR [ebp-0x4],edx
10050129:	mov    eax,ds:0x10081440
1005012e:	mov    eax,DWORD PTR [eax+esi*4]
10050131:	mov    ecx,DWORD PTR [eax+0xc]
10050134:	test   cl,0x83
10050137:	je     0x10050168
10050139:	cmp    DWORD PTR [ebp+0x8],edx
1005013c:	jne    0x1005014f
1005013e:	push   eax
1005013f:	call   0x10050094
10050144:	pop    ecx
10050145:	cmp    eax,0xffffffff
10050148:	je     0x10050168
1005014a:	inc    DWORD PTR [ebp-0x1c]
1005014d:	jmp    0x10050168
1005014f:	cmp    DWORD PTR [ebp+0x8],edi
10050152:	jne    0x10050168
10050154:	test   cl,0x2
10050157:	je     0x10050168
10050159:	push   eax
1005015a:	call   0x10050094
1005015f:	pop    ecx
10050160:	cmp    eax,0xffffffff
10050163:	jne    0x10050168
10050165:	or     DWORD PTR [ebp-0x24],eax
10050168:	mov    DWORD PTR [ebp-0x4],edi
1005016b:	call   0x10050178
10050170:	inc    esi
10050171:	jmp    0x100500f7
10050173:	xor    edi,edi
10050175:	mov    esi,DWORD PTR [ebp-0x20]
10050178:	mov    eax,ds:0x10081440
1005017d:	push   DWORD PTR [eax+esi*4]
10050180:	push   esi
10050181:	call   0x1004d3e9
10050186:	pop    ecx
10050187:	pop    ecx
10050188:	ret    
10050189:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10050190:	call   0x100501a7
10050195:	cmp    DWORD PTR [ebp+0x8],0x1
10050199:	mov    eax,DWORD PTR [ebp-0x1c]
1005019c:	je     0x100501a1
1005019e:	mov    eax,DWORD PTR [ebp-0x24]
100501a1:	call   0x10046f79
100501a6:	ret    
100501a7:	push   0x1
100501a9:	call   0x10047e65
100501ae:	pop    ecx
100501af:	ret    
100501b0:	push   0x1
100501b2:	call   0x100500d6
100501b7:	pop    ecx
100501b8:	ret    
100501b9:	push   ebp
100501ba:	mov    ebp,esp
100501bc:	push   ecx
100501bd:	push   esi
100501be:	mov    esi,DWORD PTR [ebp+0xc]
100501c1:	push   esi
100501c2:	call   0x1004d40c
100501c7:	mov    DWORD PTR [ebp+0xc],eax
100501ca:	mov    eax,DWORD PTR [esi+0xc]
100501cd:	test   al,0x82
100501cf:	pop    ecx
100501d0:	jne    0x100501eb
100501d2:	call   0x10046df5
100501d7:	mov    DWORD PTR [eax],0x9
100501dd:	or     DWORD PTR [esi+0xc],0x20
100501e1:	mov    eax,0xffff
100501e6:	jmp    0x10050326
100501eb:	test   al,0x40
100501ed:	je     0x100501fc
100501ef:	call   0x10046df5
100501f4:	mov    DWORD PTR [eax],0x22
100501fa:	jmp    0x100501dd
100501fc:	test   al,0x1
100501fe:	je     0x10050217
10050200:	and    DWORD PTR [esi+0x4],0x0
10050204:	test   al,0x10
10050206:	je     0x10050297
1005020c:	mov    ecx,DWORD PTR [esi+0x8]
1005020f:	and    eax,0xfffffffe
10050212:	mov    DWORD PTR [esi],ecx
10050214:	mov    DWORD PTR [esi+0xc],eax
10050217:	mov    eax,DWORD PTR [esi+0xc]
1005021a:	and    DWORD PTR [esi+0x4],0x0
1005021e:	and    DWORD PTR [ebp-0x4],0x0
10050222:	push   ebx
10050223:	push   0x2
10050225:	and    eax,0xffffffef
10050228:	pop    ebx
10050229:	or     eax,ebx
1005022b:	test   ax,0x10c
1005022f:	mov    DWORD PTR [esi+0xc],eax
10050232:	jne    0x10050260
10050234:	call   0x1004d291
10050239:	add    eax,0x20
1005023c:	cmp    esi,eax
1005023e:	je     0x1005024c
10050240:	call   0x1004d291
10050245:	add    eax,0x40
10050248:	cmp    esi,eax
1005024a:	jne    0x10050259
1005024c:	push   DWORD PTR [ebp+0xc]
1005024f:	call   0x1004d233
10050254:	test   eax,eax
10050256:	pop    ecx
10050257:	jne    0x10050260
10050259:	push   esi
1005025a:	call   0x1004d1ef
1005025f:	pop    ecx
10050260:	test   WORD PTR [esi+0xc],0x108
10050266:	push   edi
10050267:	je     0x100502f0
1005026d:	mov    eax,DWORD PTR [esi+0x8]
10050270:	mov    edi,DWORD PTR [esi]
10050272:	lea    ecx,[eax+0x2]
10050275:	mov    DWORD PTR [esi],ecx
10050277:	mov    ecx,DWORD PTR [esi+0x18]
1005027a:	sub    edi,eax
1005027c:	sub    ecx,ebx
1005027e:	test   edi,edi
10050280:	mov    DWORD PTR [esi+0x4],ecx
10050283:	jle    0x100502a2
10050285:	push   edi
10050286:	push   eax
10050287:	push   DWORD PTR [ebp+0xc]
1005028a:	call   0x1004d113
1005028f:	add    esp,0xc
10050292:	mov    DWORD PTR [ebp-0x4],eax
10050295:	jmp    0x100502e5
10050297:	or     eax,0x20
1005029a:	mov    DWORD PTR [esi+0xc],eax
1005029d:	jmp    0x100501e1
100502a2:	mov    ecx,DWORD PTR [ebp+0xc]
100502a5:	cmp    ecx,0xffffffff
100502a8:	je     0x100502c5
100502aa:	cmp    ecx,0xfffffffe
100502ad:	je     0x100502c5
100502af:	mov    eax,ecx
100502b1:	and    eax,0x1f
100502b4:	imul   eax,eax,0x28
100502b7:	mov    edx,ecx
100502b9:	sar    edx,0x5
100502bc:	add    eax,DWORD PTR [edx*4+0x10082480]
100502c3:	jmp    0x100502ca
100502c5:	mov    eax,0x1007e9d0
100502ca:	test   BYTE PTR [eax+0x4],0x20
100502ce:	je     0x100502e5
100502d0:	push   ebx
100502d1:	push   0x0
100502d3:	push   0x0
100502d5:	push   ecx
100502d6:	call   0x1004ca34
100502db:	and    eax,edx
100502dd:	add    esp,0x10
100502e0:	cmp    eax,0xffffffff
100502e3:	je     0x10050312
100502e5:	mov    eax,DWORD PTR [esi+0x8]
100502e8:	mov    ebx,DWORD PTR [ebp+0x8]
100502eb:	mov    WORD PTR [eax],bx
100502ee:	jmp    0x1005030d
100502f0:	push   0x2
100502f2:	lea    eax,[ebp-0x4]
100502f5:	push   eax
100502f6:	push   DWORD PTR [ebp+0xc]
100502f9:	mov    edi,ebx
100502fb:	mov    ebx,DWORD PTR [ebp+0x8]
100502fe:	mov    WORD PTR [ebp-0x4],bx
10050302:	call   0x1004d113
10050307:	add    esp,0xc
1005030a:	mov    DWORD PTR [ebp-0x4],eax
1005030d:	cmp    DWORD PTR [ebp-0x4],edi
10050310:	je     0x1005031d
10050312:	or     DWORD PTR [esi+0xc],0x20
10050316:	mov    eax,0xffff
1005031b:	jmp    0x10050324
1005031d:	mov    eax,ebx
1005031f:	and    eax,0xffff
10050324:	pop    edi
10050325:	pop    ebx
10050326:	pop    esi
10050327:	leave  
10050328:	ret    
10050329:	push   ebp
1005032a:	mov    ebp,esp
1005032c:	sub    esp,0x10
1005032f:	push   ebx
10050330:	push   esi
10050331:	mov    esi,DWORD PTR [ebp+0xc]
10050334:	xor    ebx,ebx
10050336:	cmp    esi,ebx
10050338:	push   edi
10050339:	mov    edi,DWORD PTR [ebp+0x10]
1005033c:	jne    0x1005034f
1005033e:	cmp    edi,ebx
10050340:	jbe    0x1005034f
10050342:	mov    eax,DWORD PTR [ebp+0x8]
10050345:	cmp    eax,ebx
10050347:	je     0x1005034b
10050349:	mov    DWORD PTR [eax],ebx
1005034b:	xor    eax,eax
1005034d:	jmp    0x100503ce
1005034f:	mov    eax,DWORD PTR [ebp+0x8]
10050352:	cmp    eax,ebx
10050354:	je     0x10050359
10050356:	or     DWORD PTR [eax],0xffffffff
10050359:	cmp    edi,0x7fffffff
1005035f:	jbe    0x1005037c
10050361:	call   0x10046df5
10050366:	push   0x16
10050368:	pop    esi
10050369:	push   ebx
1005036a:	push   ebx
1005036b:	push   ebx
1005036c:	push   ebx
1005036d:	push   ebx
1005036e:	mov    DWORD PTR [eax],esi
10050370:	call   0x100435cc
10050375:	add    esp,0x14
10050378:	mov    eax,esi
1005037a:	jmp    0x100503ce
1005037c:	push   DWORD PTR [ebp+0x18]
1005037f:	lea    ecx,[ebp-0x10]
10050382:	call   0x10045785
10050387:	mov    eax,DWORD PTR [ebp-0x10]
1005038a:	cmp    DWORD PTR [eax+0x14],ebx
1005038d:	jne    0x10050427
10050393:	mov    ax,WORD PTR [ebp+0x14]
10050397:	cmp    ax,0xff
1005039b:	jbe    0x100503d3
1005039d:	cmp    esi,ebx
1005039f:	je     0x100503b0
100503a1:	cmp    edi,ebx
100503a3:	jbe    0x100503b0
100503a5:	push   edi
100503a6:	push   ebx
100503a7:	push   esi
100503a8:	call   0x10045ea0
100503ad:	add    esp,0xc
100503b0:	call   0x10046df5
100503b5:	mov    DWORD PTR [eax],0x2a
100503bb:	call   0x10046df5
100503c0:	cmp    BYTE PTR [ebp-0x4],bl
100503c3:	mov    eax,DWORD PTR [eax]
100503c5:	je     0x100503ce
100503c7:	mov    ecx,DWORD PTR [ebp-0x8]
100503ca:	and    DWORD PTR [ecx+0x70],0xfffffffd
100503ce:	pop    edi
100503cf:	pop    esi
100503d0:	pop    ebx
100503d1:	leave  
100503d2:	ret    
100503d3:	cmp    esi,ebx
100503d5:	je     0x10050405
100503d7:	cmp    edi,ebx
100503d9:	ja     0x10050403
100503db:	call   0x10046df5
100503e0:	push   0x22
100503e2:	pop    esi
100503e3:	push   ebx
100503e4:	push   ebx
100503e5:	push   ebx
100503e6:	push   ebx
100503e7:	push   ebx
100503e8:	mov    DWORD PTR [eax],esi
100503ea:	call   0x100435cc
100503ef:	add    esp,0x14
100503f2:	cmp    BYTE PTR [ebp-0x4],bl
100503f5:	je     0x10050378
100503f7:	mov    eax,DWORD PTR [ebp-0x8]
100503fa:	and    DWORD PTR [eax+0x70],0xfffffffd
100503fe:	jmp    0x10050378
10050403:	mov    BYTE PTR [esi],al
10050405:	mov    eax,DWORD PTR [ebp+0x8]
10050408:	cmp    eax,ebx
1005040a:	je     0x10050412
1005040c:	mov    DWORD PTR [eax],0x1
10050412:	cmp    BYTE PTR [ebp-0x4],bl
10050415:	je     0x1005034b
1005041b:	mov    eax,DWORD PTR [ebp-0x8]
1005041e:	and    DWORD PTR [eax+0x70],0xfffffffd
10050422:	jmp    0x1005034b
10050427:	lea    ecx,[ebp+0xc]
1005042a:	push   ecx
1005042b:	push   ebx
1005042c:	push   edi
1005042d:	push   esi
1005042e:	push   0x1
10050430:	lea    ecx,[ebp+0x14]
10050433:	push   ecx
10050434:	push   ebx
10050435:	mov    DWORD PTR [ebp+0xc],ebx
10050438:	push   DWORD PTR [eax+0x4]
1005043b:	call   DWORD PTR ds:0x100660b8
10050441:	cmp    eax,ebx
10050443:	je     0x10050459
10050445:	cmp    DWORD PTR [ebp+0xc],ebx
10050448:	jne    0x100503b0
1005044e:	mov    ecx,DWORD PTR [ebp+0x8]
10050451:	cmp    ecx,ebx
10050453:	je     0x10050412
10050455:	mov    DWORD PTR [ecx],eax
10050457:	jmp    0x10050412
10050459:	call   DWORD PTR ds:0x100660cc
1005045f:	cmp    eax,0x7a
10050462:	jne    0x100503b0
10050468:	cmp    esi,ebx
1005046a:	je     0x100503db
10050470:	cmp    edi,ebx
10050472:	jbe    0x100503db
10050478:	push   edi
10050479:	push   ebx
1005047a:	push   esi
1005047b:	call   0x10045ea0
10050480:	add    esp,0xc
10050483:	jmp    0x100503db
10050488:	push   0x0
1005048a:	push   DWORD PTR [esp+0x14]
1005048e:	push   DWORD PTR [esp+0x14]
10050492:	push   DWORD PTR [esp+0x14]
10050496:	push   DWORD PTR [esp+0x14]
1005049a:	call   0x10050329
1005049f:	add    esp,0x14
100504a2:	ret    
100504a3:	push   ebp
100504a4:	mov    ebp,esp
100504a6:	sub    esp,0x10
100504a9:	mov    eax,ds:0x1007e030
100504ae:	xor    eax,ebp
100504b0:	mov    DWORD PTR [ebp-0x4],eax
100504b3:	cmp    DWORD PTR [ebp+0x14],0xffffffff
100504b7:	push   ebx
100504b8:	push   esi
100504b9:	push   edi
100504ba:	jge    0x100504c3
100504bc:	xor    eax,eax
100504be:	jmp    0x100506b5
100504c3:	mov    eax,ds:0x10080550
100504c8:	mov    esi,DWORD PTR ds:0x10066234
100504ce:	xor    ebx,ebx
100504d0:	xor    edi,edi
100504d2:	inc    ebx
100504d3:	cmp    eax,edi
100504d5:	jne    0x1005050a
100504d7:	lea    eax,[ebp-0x8]
100504da:	push   eax
100504db:	push   ebx
100504dc:	push   0x10066cc8
100504e1:	push   ebx
100504e2:	call   esi
100504e4:	test   eax,eax
100504e6:	je     0x100504f0
100504e8:	mov    DWORD PTR ds:0x10080550,ebx
100504ee:	jmp    0x1005050e
100504f0:	call   DWORD PTR ds:0x100660cc
100504f6:	cmp    eax,0x78
100504f9:	jne    0x10050505
100504fb:	push   0x2
100504fd:	pop    eax
100504fe:	mov    ds:0x10080550,eax
10050503:	jmp    0x1005050a
10050505:	mov    eax,ds:0x10080550
1005050a:	cmp    eax,ebx
1005050c:	jne    0x10050521
1005050e:	push   DWORD PTR [ebp+0x18]
10050511:	push   DWORD PTR [ebp+0x14]
10050514:	push   DWORD PTR [ebp+0x10]
10050517:	push   DWORD PTR [ebp+0xc]
1005051a:	call   esi
1005051c:	jmp    0x100506b5
10050521:	cmp    eax,0x2
10050524:	je     0x1005052a
10050526:	cmp    eax,edi
10050528:	jne    0x100504bc
1005052a:	cmp    DWORD PTR [ebp+0x20],edi
1005052d:	mov    DWORD PTR [ebp-0xc],edi
10050530:	jne    0x1005053d
10050532:	mov    eax,DWORD PTR [ebp+0x8]
10050535:	mov    eax,DWORD PTR [eax]
10050537:	mov    eax,DWORD PTR [eax+0x14]
1005053a:	mov    DWORD PTR [ebp+0x20],eax
1005053d:	cmp    DWORD PTR [ebp+0x1c],edi
10050540:	jne    0x1005054d
10050542:	mov    eax,DWORD PTR [ebp+0x8]
10050545:	mov    eax,DWORD PTR [eax]
10050547:	mov    eax,DWORD PTR [eax+0x4]
1005054a:	mov    DWORD PTR [ebp+0x1c],eax
1005054d:	push   DWORD PTR [ebp+0x20]
10050550:	call   0x1004f6d4
10050555:	cmp    DWORD PTR [ebp+0x1c],eax
10050558:	pop    ecx
10050559:	je     0x10050563
1005055b:	cmp    eax,0xffffffff
1005055e:	je     0x10050563
10050560:	mov    DWORD PTR [ebp+0x1c],eax
10050563:	mov    ebx,DWORD PTR ds:0x100660b8
10050569:	push   edi
1005056a:	push   edi
1005056b:	push   edi
1005056c:	push   edi
1005056d:	push   DWORD PTR [ebp+0x14]
10050570:	push   DWORD PTR [ebp+0x10]
10050573:	push   edi
10050574:	push   DWORD PTR [ebp+0x1c]
10050577:	call   ebx
10050579:	mov    esi,eax
1005057b:	cmp    esi,edi
1005057d:	mov    DWORD PTR [ebp-0x10],esi
10050580:	je     0x100504bc
10050586:	jle    0x100505c3
10050588:	cmp    esi,0xffffffe0
1005058b:	ja     0x100505c3
1005058d:	lea    eax,[esi+0x8]
10050590:	cmp    eax,0x400
10050595:	ja     0x100505aa
10050597:	call   0x1004b990
1005059c:	mov    eax,esp
1005059e:	cmp    eax,edi
100505a0:	je     0x100505be
100505a2:	mov    DWORD PTR [eax],0xcccc
100505a8:	jmp    0x100505bb
100505aa:	push   eax
100505ab:	call   0x10045222
100505b0:	cmp    eax,edi
100505b2:	pop    ecx
100505b3:	je     0x100505be
100505b5:	mov    DWORD PTR [eax],0xdddd
100505bb:	add    eax,0x8
100505be:	mov    DWORD PTR [ebp-0x8],eax
100505c1:	jmp    0x100505c6
100505c3:	mov    DWORD PTR [ebp-0x8],edi
100505c6:	cmp    DWORD PTR [ebp-0x8],edi
100505c9:	je     0x100504bc
100505cf:	push   esi
100505d0:	push   edi
100505d1:	push   DWORD PTR [ebp-0x8]
100505d4:	call   0x10045ea0
100505d9:	add    esp,0xc
100505dc:	push   edi
100505dd:	push   edi
100505de:	push   esi
100505df:	push   DWORD PTR [ebp-0x8]
100505e2:	push   DWORD PTR [ebp+0x14]
100505e5:	push   DWORD PTR [ebp+0x10]
100505e8:	push   edi
100505e9:	push   DWORD PTR [ebp+0x1c]
100505ec:	call   ebx
100505ee:	test   eax,eax
100505f0:	je     0x100506a9
100505f6:	lea    eax,[esi+0x1]
100505f9:	cmp    eax,edi
100505fb:	jle    0x10050641
100505fd:	cmp    eax,0x7ffffff0
10050602:	ja     0x10050641
10050604:	lea    eax,[esi+esi*1+0xa]
10050608:	cmp    eax,0x400
1005060d:	ja     0x10050629
1005060f:	call   0x1004b990
10050614:	mov    ebx,esp
10050616:	cmp    ebx,edi
10050618:	je     0x100506a9
1005061e:	mov    DWORD PTR [ebx],0xcccc
10050624:	add    ebx,0x8
10050627:	jmp    0x10050643
10050629:	push   eax
1005062a:	call   0x10045222
1005062f:	cmp    eax,edi
10050631:	pop    ecx
10050632:	je     0x1005063d
10050634:	mov    DWORD PTR [eax],0xdddd
1005063a:	add    eax,0x8
1005063d:	mov    ebx,eax
1005063f:	jmp    0x10050643
10050641:	xor    ebx,ebx
10050643:	cmp    ebx,edi
10050645:	je     0x100506a9
10050647:	cmp    DWORD PTR [ebp+0x20],edi
1005064a:	jne    0x10050657
1005064c:	mov    eax,DWORD PTR [ebp+0x8]
1005064f:	mov    eax,DWORD PTR [eax]
10050651:	mov    eax,DWORD PTR [eax+0x14]
10050654:	mov    DWORD PTR [ebp+0x20],eax
10050657:	mov    edi,DWORD PTR [ebp+0x14]
1005065a:	push   ebx
1005065b:	push   DWORD PTR [ebp-0x10]
1005065e:	add    edi,edi
10050660:	push   DWORD PTR [ebp-0x8]
10050663:	lea    esi,[edi+ebx*1]
10050666:	push   DWORD PTR [ebp+0xc]
10050669:	or     WORD PTR [esi],0xffff
1005066e:	push   DWORD PTR [ebp+0x20]
10050671:	or     WORD PTR [esi-0x2],0xffff
10050677:	call   DWORD PTR ds:0x10066230
1005067d:	cmp    WORD PTR [esi-0x2],0xffff
10050683:	mov    DWORD PTR [ebp-0xc],eax
10050686:	je     0x1005069e
10050688:	cmp    WORD PTR [esi],0xffff
1005068d:	jne    0x1005069e
1005068f:	push   edi
10050690:	push   ebx
10050691:	push   DWORD PTR [ebp+0x18]
10050694:	call   0x10045960
10050699:	add    esp,0xc
1005069c:	jmp    0x100506a2
1005069e:	and    DWORD PTR [ebp-0xc],0x0
100506a2:	push   ebx
100506a3:	call   0x1001b5ea
100506a8:	pop    ecx
100506a9:	push   DWORD PTR [ebp-0x8]
100506ac:	call   0x1001b5ea
100506b1:	mov    eax,DWORD PTR [ebp-0xc]
100506b4:	pop    ecx
100506b5:	lea    esp,[ebp-0x1c]
100506b8:	pop    edi
100506b9:	pop    esi
100506ba:	pop    ebx
100506bb:	mov    ecx,DWORD PTR [ebp-0x4]
100506be:	xor    ecx,ebp
100506c0:	call   0x100430d7
100506c5:	leave  
100506c6:	ret    
100506c7:	push   ebp
100506c8:	mov    ebp,esp
100506ca:	sub    esp,0x10
100506cd:	push   DWORD PTR [ebp+0x8]
100506d0:	lea    ecx,[ebp-0x10]
100506d3:	call   0x10045785
100506d8:	push   DWORD PTR [ebp+0x20]
100506db:	lea    eax,[ebp-0x10]
100506de:	push   DWORD PTR [ebp+0x1c]
100506e1:	push   DWORD PTR [ebp+0x18]
100506e4:	push   DWORD PTR [ebp+0x14]
100506e7:	push   DWORD PTR [ebp+0x10]
100506ea:	push   DWORD PTR [ebp+0xc]
100506ed:	push   eax
100506ee:	call   0x100504a3
100506f3:	add    esp,0x1c
100506f6:	cmp    BYTE PTR [ebp-0x4],0x0
100506fa:	je     0x10050703
100506fc:	mov    ecx,DWORD PTR [ebp-0x8]
100506ff:	and    DWORD PTR [ecx+0x70],0xfffffffd
10050703:	leave  
10050704:	ret    
10050705:	xor    eax,eax
10050707:	push   eax
10050708:	push   eax
10050709:	push   0x3
1005070b:	push   eax
1005070c:	push   0x3
1005070e:	push   0x40000000
10050713:	push   0x10067ebc
10050718:	call   DWORD PTR ds:0x10066254
1005071e:	mov    ds:0x1007ef74,eax
10050723:	ret    
10050724:	mov    eax,ds:0x1007ef74
10050729:	cmp    eax,0xffffffff
1005072c:	push   esi
1005072d:	mov    esi,DWORD PTR ds:0x10066070
10050733:	je     0x1005073d
10050735:	cmp    eax,0xfffffffe
10050738:	je     0x1005073d
1005073a:	push   eax
1005073b:	call   esi
1005073d:	mov    eax,ds:0x1007ef70
10050742:	cmp    eax,0xffffffff
10050745:	je     0x1005074f
10050747:	cmp    eax,0xfffffffe
1005074a:	je     0x1005074f
1005074c:	push   eax
1005074d:	call   esi
1005074f:	pop    esi
10050750:	ret    
10050751:	push   ebx
10050752:	push   esi
10050753:	mov    esi,DWORD PTR [esp+0xc]
10050757:	push   edi
10050758:	xor    edi,edi
1005075a:	or     ebx,0xffffffff
1005075d:	cmp    esi,edi
1005075f:	jne    0x1005077e
10050761:	call   0x10046df5
10050766:	push   edi
10050767:	push   edi
10050768:	push   edi
10050769:	push   edi
1005076a:	push   edi
1005076b:	mov    DWORD PTR [eax],0x16
10050771:	call   0x100435cc
10050776:	add    esp,0x14
10050779:	or     eax,0xffffffff
1005077c:	jmp    0x100507c0
1005077e:	test   BYTE PTR [esi+0xc],0x83
10050782:	je     0x100507bb
10050784:	push   esi
10050785:	call   0x10050032
1005078a:	push   esi
1005078b:	mov    ebx,eax
1005078d:	call   0x10050af2
10050792:	push   esi
10050793:	call   0x1004d40c
10050798:	push   eax
10050799:	call   0x10050a25
1005079e:	add    esp,0x10
100507a1:	test   eax,eax
100507a3:	jge    0x100507aa
100507a5:	or     ebx,0xffffffff
100507a8:	jmp    0x100507bb
100507aa:	mov    eax,DWORD PTR [esi+0x1c]
100507ad:	cmp    eax,edi
100507af:	je     0x100507bb
100507b1:	push   eax
100507b2:	call   0x10043748
100507b7:	pop    ecx
100507b8:	mov    DWORD PTR [esi+0x1c],edi
100507bb:	mov    DWORD PTR [esi+0xc],edi
100507be:	mov    eax,ebx
100507c0:	pop    edi
100507c1:	pop    esi
100507c2:	pop    ebx
100507c3:	ret    
100507c4:	push   0xc
100507c6:	push   0x10074a38
100507cb:	call   0x10046f34
100507d0:	or     DWORD PTR [ebp-0x1c],0xffffffff
100507d4:	xor    eax,eax
100507d6:	mov    esi,DWORD PTR [ebp+0x8]
100507d9:	xor    edi,edi
100507db:	cmp    esi,edi
100507dd:	setne  al
100507e0:	cmp    eax,edi
100507e2:	jne    0x10050801
100507e4:	call   0x10046df5
100507e9:	mov    DWORD PTR [eax],0x16
100507ef:	push   edi
100507f0:	push   edi
100507f1:	push   edi
100507f2:	push   edi
100507f3:	push   edi
100507f4:	call   0x100435cc
100507f9:	add    esp,0x14
100507fc:	or     eax,0xffffffff
100507ff:	jmp    0x1005080d
10050801:	test   BYTE PTR [esi+0xc],0x40
10050805:	je     0x10050813
10050807:	mov    DWORD PTR [esi+0xc],edi
1005080a:	mov    eax,DWORD PTR [ebp-0x1c]
1005080d:	call   0x10046f79
10050812:	ret    
10050813:	push   esi
10050814:	call   0x1004d368
10050819:	pop    ecx
1005081a:	mov    DWORD PTR [ebp-0x4],edi
1005081d:	push   esi
1005081e:	call   0x10050751
10050823:	pop    ecx
10050824:	mov    DWORD PTR [ebp-0x1c],eax
10050827:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1005082e:	call   0x10050838
10050833:	jmp    0x1005080a
10050835:	mov    esi,DWORD PTR [ebp+0x8]
10050838:	push   esi
10050839:	call   0x1004d3ba
1005083e:	pop    ecx
1005083f:	ret    
10050840:	push   0x10
10050842:	push   0x10074a58
10050847:	call   0x10046f34
1005084c:	mov    eax,DWORD PTR [ebp+0x8]
1005084f:	cmp    eax,0xfffffffe
10050852:	jne    0x10050867
10050854:	call   0x10046df5
10050859:	mov    DWORD PTR [eax],0x9
1005085f:	or     eax,0xffffffff
10050862:	jmp    0x10050911
10050867:	xor    ebx,ebx
10050869:	cmp    eax,ebx
1005086b:	jl     0x10050875
1005086d:	cmp    eax,DWORD PTR ds:0x10082464
10050873:	jb     0x1005088f
10050875:	call   0x10046df5
1005087a:	mov    DWORD PTR [eax],0x9
10050880:	push   ebx
10050881:	push   ebx
10050882:	push   ebx
10050883:	push   ebx
10050884:	push   ebx
10050885:	call   0x100435cc
1005088a:	add    esp,0x14
1005088d:	jmp    0x1005085f
1005088f:	mov    ecx,eax
10050891:	sar    ecx,0x5
10050894:	lea    edi,[ecx*4+0x10082480]
1005089b:	mov    esi,eax
1005089d:	and    esi,0x1f
100508a0:	imul   esi,esi,0x28
100508a3:	mov    ecx,DWORD PTR [edi]
100508a5:	movzx  ecx,BYTE PTR [esi+ecx*1+0x4]
100508aa:	and    ecx,0x1
100508ad:	je     0x10050875
100508af:	push   eax
100508b0:	call   0x1004fc70
100508b5:	pop    ecx
100508b6:	mov    DWORD PTR [ebp-0x4],ebx
100508b9:	mov    eax,DWORD PTR [edi]
100508bb:	test   BYTE PTR [esi+eax*1+0x4],0x1
100508c0:	je     0x100508f3
100508c2:	push   DWORD PTR [ebp+0x8]
100508c5:	call   0x1004fbff
100508ca:	pop    ecx
100508cb:	push   eax
100508cc:	call   DWORD PTR ds:0x100660d8
100508d2:	test   eax,eax
100508d4:	jne    0x100508e1
100508d6:	call   DWORD PTR ds:0x100660cc
100508dc:	mov    DWORD PTR [ebp-0x1c],eax
100508df:	jmp    0x100508e4
100508e1:	mov    DWORD PTR [ebp-0x1c],ebx
100508e4:	cmp    DWORD PTR [ebp-0x1c],ebx
100508e7:	je     0x10050902
100508e9:	call   0x10046e08
100508ee:	mov    ecx,DWORD PTR [ebp-0x1c]
100508f1:	mov    DWORD PTR [eax],ecx
100508f3:	call   0x10046df5
100508f8:	mov    DWORD PTR [eax],0x9
100508fe:	or     DWORD PTR [ebp-0x1c],0xffffffff
10050902:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10050909:	call   0x10050917
1005090e:	mov    eax,DWORD PTR [ebp-0x1c]
10050911:	call   0x10046f79
10050916:	ret    
10050917:	push   DWORD PTR [ebp+0x8]
1005091a:	call   0x1004fd10
1005091f:	pop    ecx
10050920:	ret    
10050921:	int3   
10050922:	int3   
10050923:	int3   
10050924:	int3   
10050925:	int3   
10050926:	int3   
10050927:	int3   
10050928:	int3   
10050929:	int3   
1005092a:	int3   
1005092b:	int3   
1005092c:	int3   
1005092d:	int3   
1005092e:	int3   
1005092f:	int3   
10050930:	push   ebp
10050931:	mov    ebp,esp
10050933:	push   edi
10050934:	push   esi
10050935:	push   ebx
10050936:	mov    ecx,DWORD PTR [ebp+0x10]
10050939:	or     ecx,ecx
1005093b:	je     0x1005098a
1005093d:	mov    esi,DWORD PTR [ebp+0x8]
10050940:	mov    edi,DWORD PTR [ebp+0xc]
10050943:	mov    bh,0x41
10050945:	mov    bl,0x5a
10050947:	mov    dh,0x20
10050949:	lea    ecx,[ecx+0x0]
1005094c:	mov    ah,BYTE PTR [esi]
1005094e:	or     ah,ah
10050950:	mov    al,BYTE PTR [edi]
10050952:	je     0x1005097b
10050954:	or     al,al
10050956:	je     0x1005097b
10050958:	add    esi,0x1
1005095b:	add    edi,0x1
1005095e:	cmp    ah,bh
10050960:	jb     0x10050968
10050962:	cmp    ah,bl
10050964:	ja     0x10050968
10050966:	add    ah,dh
10050968:	cmp    al,bh
1005096a:	jb     0x10050972
1005096c:	cmp    al,bl
1005096e:	ja     0x10050972
10050970:	add    al,dh
10050972:	cmp    ah,al
10050974:	jne    0x10050981
10050976:	sub    ecx,0x1
10050979:	jne    0x1005094c
1005097b:	xor    ecx,ecx
1005097d:	cmp    ah,al
1005097f:	je     0x1005098a
10050981:	mov    ecx,0xffffffff
10050986:	jb     0x1005098a
10050988:	neg    ecx
1005098a:	mov    eax,ecx
1005098c:	pop    ebx
1005098d:	pop    esi
1005098e:	pop    edi
1005098f:	leave  
10050990:	ret    
10050991:	push   esi
10050992:	mov    esi,DWORD PTR [esp+0x8]
10050996:	push   edi
10050997:	push   esi
10050998:	call   0x1004fbff
1005099d:	cmp    eax,0xffffffff
100509a0:	pop    ecx
100509a1:	je     0x100509f0
100509a3:	cmp    esi,0x1
100509a6:	mov    eax,ds:0x10082480
100509ab:	jne    0x100509b3
100509ad:	test   BYTE PTR [eax+0x54],0x1
100509b1:	jne    0x100509be
100509b3:	cmp    esi,0x2
100509b6:	jne    0x100509d4
100509b8:	test   BYTE PTR [eax+0x2c],0x1
100509bc:	je     0x100509d4
100509be:	push   0x2
100509c0:	call   0x1004fbff
100509c5:	push   0x1
100509c7:	mov    edi,eax
100509c9:	call   0x1004fbff
100509ce:	cmp    eax,edi
100509d0:	pop    ecx
100509d1:	pop    ecx
100509d2:	je     0x100509f0
100509d4:	push   esi
100509d5:	call   0x1004fbff
100509da:	pop    ecx
100509db:	push   eax
100509dc:	call   DWORD PTR ds:0x10066070
100509e2:	test   eax,eax
100509e4:	jne    0x100509f0
100509e6:	call   DWORD PTR ds:0x100660cc
100509ec:	mov    edi,eax
100509ee:	jmp    0x100509f2
100509f0:	xor    edi,edi
100509f2:	push   esi
100509f3:	call   0x1004fb7e
100509f8:	mov    eax,esi
100509fa:	and    esi,0x1f
100509fd:	imul   esi,esi,0x28
10050a00:	sar    eax,0x5
10050a03:	test   edi,edi
10050a05:	mov    eax,DWORD PTR [eax*4+0x10082480]
10050a0c:	pop    ecx
10050a0d:	mov    BYTE PTR [eax+esi*1+0x4],0x0
10050a12:	je     0x10050a20
10050a14:	push   edi
10050a15:	call   0x10046e1b
10050a1a:	pop    ecx
10050a1b:	or     eax,0xffffffff
10050a1e:	jmp    0x10050a22
10050a20:	xor    eax,eax
10050a22:	pop    edi
10050a23:	pop    esi
10050a24:	ret    
10050a25:	push   0x10
10050a27:	push   0x10074a78
10050a2c:	call   0x10046f34
10050a31:	mov    eax,DWORD PTR [ebp+0x8]
10050a34:	cmp    eax,0xfffffffe
10050a37:	jne    0x10050a54
10050a39:	call   0x10046e08
10050a3e:	and    DWORD PTR [eax],0x0
10050a41:	call   0x10046df5
10050a46:	mov    DWORD PTR [eax],0x9
10050a4c:	or     eax,0xffffffff
10050a4f:	jmp    0x10050ae2
10050a54:	xor    edi,edi
10050a56:	cmp    eax,edi
10050a58:	jl     0x10050a62
10050a5a:	cmp    eax,DWORD PTR ds:0x10082464
10050a60:	jb     0x10050a83
10050a62:	call   0x10046e08
10050a67:	mov    DWORD PTR [eax],edi
10050a69:	call   0x10046df5
10050a6e:	mov    DWORD PTR [eax],0x9
10050a74:	push   edi
10050a75:	push   edi
10050a76:	push   edi
10050a77:	push   edi
10050a78:	push   edi
10050a79:	call   0x100435cc
10050a7e:	add    esp,0x14
10050a81:	jmp    0x10050a4c
10050a83:	mov    ecx,eax
10050a85:	sar    ecx,0x5
10050a88:	lea    ebx,[ecx*4+0x10082480]
10050a8f:	mov    esi,eax
10050a91:	and    esi,0x1f
10050a94:	imul   esi,esi,0x28
10050a97:	mov    ecx,DWORD PTR [ebx]
10050a99:	movzx  ecx,BYTE PTR [ecx+esi*1+0x4]
10050a9e:	and    ecx,0x1
10050aa1:	je     0x10050a62
10050aa3:	push   eax
10050aa4:	call   0x1004fc70
10050aa9:	pop    ecx
10050aaa:	mov    DWORD PTR [ebp-0x4],edi
10050aad:	mov    eax,DWORD PTR [ebx]
10050aaf:	test   BYTE PTR [eax+esi*1+0x4],0x1
10050ab4:	je     0x10050ac4
10050ab6:	push   DWORD PTR [ebp+0x8]
10050ab9:	call   0x10050991
10050abe:	pop    ecx
10050abf:	mov    DWORD PTR [ebp-0x1c],eax
10050ac2:	jmp    0x10050ad3
10050ac4:	call   0x10046df5
10050ac9:	mov    DWORD PTR [eax],0x9
10050acf:	or     DWORD PTR [ebp-0x1c],0xffffffff
10050ad3:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10050ada:	call   0x10050ae8
10050adf:	mov    eax,DWORD PTR [ebp-0x1c]
10050ae2:	call   0x10046f79
10050ae7:	ret    
10050ae8:	push   DWORD PTR [ebp+0x8]
10050aeb:	call   0x1004fd10
10050af0:	pop    ecx
10050af1:	ret    
10050af2:	push   esi
10050af3:	mov    esi,DWORD PTR [esp+0x8]
10050af7:	mov    eax,DWORD PTR [esi+0xc]
10050afa:	test   al,0x83
10050afc:	je     0x10050b1c
10050afe:	test   al,0x8
10050b00:	je     0x10050b1c
10050b02:	push   DWORD PTR [esi+0x8]
10050b05:	call   0x10043748
10050b0a:	and    DWORD PTR [esi+0xc],0xfffffbf7
10050b11:	xor    eax,eax
10050b13:	pop    ecx
10050b14:	mov    DWORD PTR [esi],eax
10050b16:	mov    DWORD PTR [esi+0x8],eax
10050b19:	mov    DWORD PTR [esi+0x4],eax
10050b1c:	pop    esi
10050b1d:	ret    
10050b1e:	xor    eax,eax
10050b20:	cmp    DWORD PTR [esp+0x8],eax
10050b24:	jbe    0x10050b37
10050b26:	mov    ecx,DWORD PTR [esp+0x4]
10050b2a:	cmp    BYTE PTR [ecx],0x0
10050b2d:	je     0x10050b37
10050b2f:	inc    eax
10050b30:	inc    ecx
10050b31:	cmp    eax,DWORD PTR [esp+0x8]
10050b35:	jb     0x10050b2a
10050b37:	ret    
10050b38:	int3   
10050b39:	int3   
10050b3a:	int3   
10050b3b:	int3   
10050b3c:	int3   
10050b3d:	int3   
10050b3e:	int3   
10050b3f:	int3   
10050b40:	push   ebp
10050b41:	mov    ebp,esp
10050b43:	push   0xfffffffe
10050b45:	push   0x10074a98
10050b4a:	push   0x10046f90
10050b4f:	mov    eax,fs:0x0
10050b55:	push   eax
10050b56:	sub    esp,0x18
10050b59:	mov    eax,ds:0x1007e030
10050b5e:	xor    DWORD PTR [ebp-0x8],eax
10050b61:	xor    eax,ebp
10050b63:	mov    DWORD PTR [ebp-0x1c],eax
10050b66:	push   ebx
10050b67:	push   esi
10050b68:	push   edi
10050b69:	push   eax
10050b6a:	lea    eax,[ebp-0x10]
10050b6d:	mov    fs:0x0,eax
10050b73:	mov    DWORD PTR [ebp-0x18],esp
10050b76:	mov    esi,DWORD PTR [ebp+0x8]
10050b79:	test   esi,esi
10050b7b:	je     0x10050bd2
10050b7d:	push   esi
10050b7e:	call   DWORD PTR ds:0x100660dc
10050b84:	mov    edi,eax
10050b86:	add    edi,0x1
10050b89:	mov    DWORD PTR [ebp-0x20],edi
10050b8c:	push   0x0
10050b8e:	push   0x0
10050b90:	push   edi
10050b91:	push   esi
10050b92:	push   0x0
10050b94:	push   0x0
10050b96:	call   DWORD PTR ds:0x1006608c
10050b9c:	mov    esi,eax
10050b9e:	mov    DWORD PTR [ebp-0x28],esi
10050ba1:	test   esi,esi
10050ba3:	jne    0x10050bd9
10050ba5:	mov    esi,DWORD PTR ds:0x100660cc
10050bab:	call   esi
10050bad:	test   eax,eax
10050baf:	jg     0x10050bc0
10050bb1:	call   esi
10050bb3:	push   eax
10050bb4:	call   0x10050e30
10050bb9:	xor    eax,eax
10050bbb:	jmp    0x10050ca0
10050bc0:	call   esi
10050bc2:	and    eax,0xffff
10050bc7:	or     eax,0x80070000
10050bcc:	push   eax
10050bcd:	call   0x10050e30
10050bd2:	xor    eax,eax
10050bd4:	jmp    0x10050ca0
10050bd9:	mov    DWORD PTR [ebp-0x4],0x0
10050be0:	lea    eax,[esi+esi*1]
10050be3:	cmp    esi,0x1000
10050be9:	jge    0x10050c03
10050beb:	call   0x1004b990
10050bf0:	mov    DWORD PTR [ebp-0x18],esp
10050bf3:	mov    eax,esp
10050bf5:	mov    ebx,eax
10050bf7:	mov    DWORD PTR [ebp-0x24],ebx
10050bfa:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10050c01:	jmp    0x10050c35
10050c03:	push   eax
10050c04:	call   0x10045222
10050c09:	add    esp,0x4
10050c0c:	mov    ebx,eax
10050c0e:	mov    DWORD PTR [ebp-0x24],ebx
10050c11:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10050c18:	jmp    0x10050c35
10050c1a:	mov    eax,0x1
10050c1f:	ret    
10050c20:	mov    esp,DWORD PTR [ebp-0x18]
10050c23:	xor    ebx,ebx
10050c25:	mov    DWORD PTR [ebp-0x24],ebx
10050c28:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10050c2f:	mov    edi,DWORD PTR [ebp-0x20]
10050c32:	mov    esi,DWORD PTR [ebp-0x28]
10050c35:	test   ebx,ebx
10050c37:	jne    0x10050c47
10050c39:	push   0x8007000e
10050c3e:	call   0x10050e30
10050c43:	xor    eax,eax
10050c45:	jmp    0x10050ca0
10050c47:	push   esi
10050c48:	push   ebx
10050c49:	push   edi
10050c4a:	mov    ecx,DWORD PTR [ebp+0x8]
10050c4d:	push   ecx
10050c4e:	push   0x0
10050c50:	push   0x0
10050c52:	call   DWORD PTR ds:0x1006608c
10050c58:	test   eax,eax
10050c5a:	jne    0x10050c76
10050c5c:	cmp    esi,0x1000
10050c62:	jl     0x10050ba5
10050c68:	push   ebx
10050c69:	call   0x10043748
10050c6e:	add    esp,0x4
10050c71:	jmp    0x10050ba5
10050c76:	push   ebx
10050c77:	call   DWORD PTR ds:0x100662b0
10050c7d:	mov    edi,eax
10050c7f:	cmp    esi,0x1000
10050c85:	jl     0x10050c90
10050c87:	push   ebx
10050c88:	call   0x10043748
10050c8d:	add    esp,0x4
10050c90:	test   edi,edi
10050c92:	jne    0x10050c9e
10050c94:	push   0x8007000e
10050c99:	call   0x10050e30
10050c9e:	mov    eax,edi
10050ca0:	lea    esp,[ebp-0x38]
10050ca3:	mov    ecx,DWORD PTR [ebp-0x10]
10050ca6:	mov    DWORD PTR fs:0x0,ecx
10050cad:	pop    ecx
10050cae:	pop    edi
10050caf:	pop    esi
10050cb0:	pop    ebx
10050cb1:	mov    ecx,DWORD PTR [ebp-0x1c]
10050cb4:	xor    ecx,ebp
10050cb6:	call   0x100430d7
10050cbb:	mov    esp,ebp
10050cbd:	pop    ebp
10050cbe:	ret    0x4
10050cc1:	int3   
10050cc2:	int3   
10050cc3:	int3   
10050cc4:	int3   
10050cc5:	int3   
10050cc6:	int3   
10050cc7:	int3   
10050cc8:	int3   
10050cc9:	int3   
10050cca:	int3   
10050ccb:	int3   
10050ccc:	int3   
10050ccd:	int3   
10050cce:	int3   
10050ccf:	int3   
10050cd0:	push   ebp
10050cd1:	mov    ebp,esp
10050cd3:	push   0xffffffff
10050cd5:	push   0x1005f7b0
10050cda:	mov    eax,fs:0x0
10050ce0:	push   eax
10050ce1:	push   ecx
10050ce2:	push   ebx
10050ce3:	push   esi
10050ce4:	push   edi
10050ce5:	mov    eax,ds:0x1007e030
10050cea:	xor    eax,ebp
10050cec:	push   eax
10050ced:	lea    eax,[ebp-0xc]
10050cf0:	mov    fs:0x0,eax
10050cf6:	mov    DWORD PTR [ebp-0x10],esp
10050cf9:	mov    edx,DWORD PTR [ebp+0x8]
10050cfc:	test   edx,edx
10050cfe:	je     0x10050d6d
10050d00:	mov    eax,edx
10050d02:	lea    esi,[eax+0x2]
10050d05:	mov    cx,WORD PTR [eax]
10050d08:	add    eax,0x2
10050d0b:	test   cx,cx
10050d0e:	jne    0x10050d05
10050d10:	push   0x0
10050d12:	push   0x0
10050d14:	push   0x0
10050d16:	sub    eax,esi
10050d18:	push   0x0
10050d1a:	sar    eax,1
10050d1c:	lea    edi,[eax+0x1]
10050d1f:	push   edi
10050d20:	push   edx
10050d21:	push   0x0
10050d23:	push   0x0
10050d25:	call   DWORD PTR ds:0x100660b8
10050d2b:	mov    esi,eax
10050d2d:	test   esi,esi
10050d2f:	jne    0x10050d83
10050d31:	mov    esi,DWORD PTR ds:0x100660cc
10050d37:	call   esi
10050d39:	test   eax,eax
10050d3b:	jg     0x10050d5b
10050d3d:	call   esi
10050d3f:	push   eax
10050d40:	call   0x10050e30
10050d45:	xor    eax,eax
10050d47:	mov    ecx,DWORD PTR [ebp-0xc]
10050d4a:	mov    DWORD PTR fs:0x0,ecx
10050d51:	pop    ecx
10050d52:	pop    edi
10050d53:	pop    esi
10050d54:	pop    ebx
10050d55:	mov    esp,ebp
10050d57:	pop    ebp
10050d58:	ret    0x4
10050d5b:	call   esi
10050d5d:	and    eax,0xffff
10050d62:	or     eax,0x80070000
10050d67:	push   eax
10050d68:	call   0x10050e30
10050d6d:	xor    eax,eax
10050d6f:	mov    ecx,DWORD PTR [ebp-0xc]
10050d72:	mov    DWORD PTR fs:0x0,ecx
10050d79:	pop    ecx
10050d7a:	pop    edi
10050d7b:	pop    esi
10050d7c:	pop    ebx
10050d7d:	mov    esp,ebp
10050d7f:	pop    ebp
10050d80:	ret    0x4
10050d83:	push   esi
10050d84:	mov    DWORD PTR [ebp-0x4],0x0
10050d8b:	call   0x100436de
10050d90:	mov    ebx,eax
10050d92:	add    esp,0x4
10050d95:	test   ebx,ebx
10050d97:	mov    DWORD PTR [ebp-0x4],0xffffffff
10050d9e:	jne    0x10050dc6
10050da0:	push   0x8007000e
10050da5:	call   0x10050e30
10050daa:	xor    eax,eax
10050dac:	mov    ecx,DWORD PTR [ebp-0xc]
10050daf:	mov    DWORD PTR fs:0x0,ecx
10050db6:	pop    ecx
10050db7:	pop    edi
10050db8:	pop    esi
10050db9:	pop    ebx
10050dba:	mov    esp,ebp
10050dbc:	pop    ebp
10050dbd:	ret    0x4
10050dc0:	mov    eax,0x10050da0
10050dc5:	ret    
10050dc6:	mov    eax,DWORD PTR [ebp+0x8]
10050dc9:	push   0x0
10050dcb:	push   0x0
10050dcd:	push   esi
10050dce:	push   ebx
10050dcf:	push   edi
10050dd0:	push   eax
10050dd1:	push   0x0
10050dd3:	push   0x0
10050dd5:	call   DWORD PTR ds:0x100660b8
10050ddb:	test   eax,eax
10050ddd:	jne    0x10050e0c
10050ddf:	push   ebx
10050de0:	call   0x100430d2
10050de5:	mov    esi,DWORD PTR ds:0x100660cc
10050deb:	add    esp,0x4
10050dee:	xor    ebx,ebx
10050df0:	call   esi
10050df2:	test   eax,eax
10050df4:	jg     0x10050dfa
10050df6:	call   esi
10050df8:	jmp    0x10050e06
10050dfa:	call   esi
10050dfc:	and    eax,0xffff
10050e01:	or     eax,0x80070000
10050e06:	push   eax
10050e07:	call   0x10050e30
10050e0c:	mov    eax,ebx
10050e0e:	mov    ecx,DWORD PTR [ebp-0xc]
10050e11:	mov    DWORD PTR fs:0x0,ecx
10050e18:	pop    ecx
10050e19:	pop    edi
10050e1a:	pop    esi
10050e1b:	pop    ebx
10050e1c:	mov    esp,ebp
10050e1e:	pop    ebp
10050e1f:	ret    0x4
10050e22:	int3   
10050e23:	int3   
10050e24:	int3   
10050e25:	int3   
10050e26:	int3   
10050e27:	int3   
10050e28:	int3   
10050e29:	int3   
10050e2a:	int3   
10050e2b:	int3   
10050e2c:	int3   
10050e2d:	int3   
10050e2e:	int3   
10050e2f:	int3   
10050e30:	mov    eax,DWORD PTR [esp+0x4]
10050e34:	push   0x0
10050e36:	push   eax
10050e37:	call   DWORD PTR ds:0x1007ef90
10050e3d:	ret    0x4
10050e40:	push   esi
10050e41:	mov    esi,ecx
10050e43:	mov    eax,DWORD PTR [esi+0x8]
10050e46:	test   eax,eax
10050e48:	mov    DWORD PTR [esi],0x10067ec8
10050e4e:	je     0x10050e58
10050e50:	mov    ecx,DWORD PTR [eax]
10050e52:	mov    edx,DWORD PTR [ecx+0x8]
10050e55:	push   eax
10050e56:	call   edx
10050e58:	mov    esi,DWORD PTR [esi+0xc]
10050e5b:	test   esi,esi
10050e5d:	je     0x10050e66
10050e5f:	push   esi
10050e60:	call   DWORD PTR ds:0x1006622c
10050e66:	pop    esi
10050e67:	ret    
10050e68:	int3   
10050e69:	int3   
10050e6a:	int3   
10050e6b:	int3   
10050e6c:	int3   
10050e6d:	int3   
10050e6e:	int3   
10050e6f:	int3   
10050e70:	sub    esp,0x10
10050e73:	mov    eax,DWORD PTR [esp+0x14]
10050e77:	mov    ecx,DWORD PTR [esp+0x18]
10050e7b:	push   0x10074b0c
10050e80:	lea    edx,[esp+0x4]
10050e84:	push   edx
10050e85:	mov    DWORD PTR [esp+0x8],0x10067ec8
10050e8d:	mov    DWORD PTR [esp+0xc],eax
10050e91:	mov    DWORD PTR [esp+0x10],ecx
10050e95:	mov    DWORD PTR [esp+0x14],0x0
10050e9d:	call   0x10047c54
10050ea2:	int3   
10050ea3:	int3   
10050ea4:	int3   
10050ea5:	int3   
10050ea6:	int3   
10050ea7:	int3   
10050ea8:	int3   
10050ea9:	int3   
10050eaa:	int3   
10050eab:	int3   
10050eac:	int3   
10050ead:	int3   
10050eae:	int3   
10050eaf:	int3   
10050eb0:	mov    eax,DWORD PTR [esp+0x4]
10050eb4:	push   esi
10050eb5:	mov    esi,ecx
10050eb7:	mov    DWORD PTR [esi],0x10067ec8
10050ebd:	mov    ecx,DWORD PTR [eax+0x4]
10050ec0:	mov    DWORD PTR [esi+0x4],ecx
10050ec3:	mov    edx,DWORD PTR [eax+0x8]
10050ec6:	mov    eax,edx
10050ec8:	test   eax,eax
10050eca:	mov    DWORD PTR [esi+0x8],edx
10050ecd:	mov    DWORD PTR [esi+0xc],0x0
10050ed4:	je     0x10050ede
10050ed6:	mov    ecx,DWORD PTR [eax]
10050ed8:	mov    edx,DWORD PTR [ecx+0x4]
10050edb:	push   eax
10050edc:	call   edx
10050ede:	mov    eax,esi
10050ee0:	pop    esi
10050ee1:	ret    0x4
10050ee4:	int3   
10050ee5:	int3   
10050ee6:	int3   
10050ee7:	int3   
10050ee8:	int3   
10050ee9:	int3   
10050eea:	int3   
10050eeb:	int3   
10050eec:	int3   
10050eed:	int3   
10050eee:	int3   
10050eef:	int3   
10050ef0:	push   esi
10050ef1:	mov    esi,ecx
10050ef3:	mov    eax,DWORD PTR [esi+0x8]
10050ef6:	test   eax,eax
10050ef8:	mov    DWORD PTR [esi],0x10067ec8
10050efe:	je     0x10050f08
10050f00:	mov    ecx,DWORD PTR [eax]
10050f02:	mov    edx,DWORD PTR [ecx+0x8]
10050f05:	push   eax
10050f06:	call   edx
10050f08:	mov    eax,DWORD PTR [esi+0xc]
10050f0b:	test   eax,eax
10050f0d:	je     0x10050f16
10050f0f:	push   eax
10050f10:	call   DWORD PTR ds:0x1006622c
10050f16:	test   BYTE PTR [esp+0x8],0x1
10050f1b:	je     0x10050f26
10050f1d:	push   esi
10050f1e:	call   0x100430d2
10050f23:	add    esp,0x4
10050f26:	mov    eax,esi
10050f28:	pop    esi
10050f29:	ret    0x4
10050f2c:	jmp    DWORD PTR ds:0x100663d0
10050f32:	mov    eax,DWORD PTR [esp+0x4]
10050f36:	test   eax,eax
10050f38:	mov    DWORD PTR ds:0x10080558,0x1
10050f42:	mov    DWORD PTR ds:0x1008055c,0x98
10050f4c:	jne    0x10050f53
10050f4e:	mov    eax,0x10067ecc
10050f53:	push   eax
10050f54:	call   0x100511ab
10050f59:	test   eax,eax
10050f5b:	pop    ecx
10050f5c:	jne    0x10050f64
10050f5e:	mov    eax,0x80004005
10050f63:	ret    
10050f64:	push   ebx
10050f65:	push   esi
10050f66:	push   edi
10050f67:	push   0x0
10050f69:	mov    esi,0x10080558
10050f6e:	push   esi
10050f6f:	call   eax
10050f71:	mov    ebx,eax
10050f73:	mov    edi,0x80000000
10050f78:	test   edi,ebx
10050f7a:	pop    ecx
10050f7b:	pop    ecx
10050f7c:	je     0x10050f87
10050f7e:	call   0x1005116b
10050f83:	mov    eax,ebx
10050f85:	jmp    0x10050fa6
10050f87:	call   0x10051111
10050f8c:	mov    ebx,eax
10050f8e:	test   edi,ebx
10050f90:	je     0x10050fa4
10050f92:	push   0x98
10050f97:	push   0x0
10050f99:	push   esi
10050f9a:	call   0x10045ea0
10050f9f:	add    esp,0xc
10050fa2:	jmp    0x10050f7e
10050fa4:	xor    eax,eax
10050fa6:	pop    edi
10050fa7:	pop    esi
10050fa8:	pop    ebx
10050fa9:	ret    
10050faa:	push   ebp
10050fab:	mov    ebp,esp
10050fad:	sub    esp,0x800
10050fb3:	push   edi
10050fb4:	push   DWORD PTR [ebp+0x8]
10050fb7:	lea    eax,[ebp-0x400]
10050fbd:	push   0x10067ee4
10050fc2:	push   eax
10050fc3:	call   0x1005871f
10050fc8:	lea    eax,[ebp-0x400]
10050fce:	push   0x10067ee0
10050fd3:	push   eax
10050fd4:	call   0x10058edc
10050fd9:	mov    edi,eax
10050fdb:	add    esp,0x14
10050fde:	test   edi,edi
10050fe0:	je     0x10051059
10050fe2:	push   esi
10050fe3:	mov    esi,0x400
10050fe8:	jmp    0x1005103c
10050fea:	lea    eax,[ebp-0x400]
10050ff0:	push   eax
10050ff1:	call   0x10043250
10050ff6:	test   eax,eax
10050ff8:	pop    ecx
10050ff9:	je     0x1005103c
10050ffb:	cmp    BYTE PTR [ebp-0x400],0x23
10051002:	je     0x1005103c
10051004:	lea    eax,[ebp+eax*1-0x401]
1005100b:	cmp    BYTE PTR [eax],0xa
1005100e:	jne    0x10051013
10051010:	mov    BYTE PTR [eax],0x0
10051013:	lea    eax,[ebp-0x400]
10051019:	push   eax
1005101a:	push   DWORD PTR [ebp+0x8]
1005101d:	lea    eax,[ebp-0x800]
10051023:	push   0x10067ed8
10051028:	push   esi
10051029:	push   eax
1005102a:	call   0x10059960
1005102f:	lea    eax,[ebp-0x800]
10051035:	push   eax
10051036:	call   DWORD PTR [ebp+0xc]
10051039:	add    esp,0x18
1005103c:	push   edi
1005103d:	lea    eax,[ebp-0x400]
10051043:	push   esi
10051044:	push   eax
10051045:	call   0x100597d9
1005104a:	add    esp,0xc
1005104d:	test   eax,eax
1005104f:	jne    0x10050fea
10051051:	push   edi
10051052:	call   0x100507c4
10051057:	pop    ecx
10051058:	pop    esi
10051059:	pop    edi
1005105a:	leave  
1005105b:	ret    
1005105c:	mov    eax,ds:0x1008056c
10051061:	test   eax,eax
10051063:	jne    0x1005106b
10051065:	mov    eax,0xc1f30001
1005106a:	ret    
1005106b:	jmp    eax
1005106d:	mov    eax,ds:0x10080588
10051072:	test   eax,eax
10051074:	jne    0x1005107c
10051076:	mov    eax,0xc1f30001
1005107b:	ret    
1005107c:	jmp    eax
1005107e:	mov    eax,ds:0x10080590
10051083:	test   eax,eax
10051085:	jne    0x1005108d
10051087:	mov    eax,0xc1f30001
1005108c:	ret    
1005108d:	jmp    eax
1005108f:	mov    eax,ds:0x10080594
10051094:	test   eax,eax
10051096:	je     0x1005109a
10051098:	jmp    eax
1005109a:	ret    
1005109b:	mov    eax,ds:0x10080598
100510a0:	test   eax,eax
100510a2:	jne    0x100510ae
100510a4:	mov    eax,DWORD PTR [esp+0x8]
100510a8:	and    DWORD PTR [eax],0x0
100510ab:	xor    eax,eax
100510ad:	ret    
100510ae:	jmp    eax
100510b0:	mov    eax,ds:0x1008059c
100510b5:	test   eax,eax
100510b7:	jne    0x100510bf
100510b9:	mov    eax,0xc1f30001
100510be:	ret    
100510bf:	jmp    eax
100510c1:	mov    eax,ds:0x100805a8
100510c6:	test   eax,eax
100510c8:	jne    0x100510d0
100510ca:	mov    eax,0xc1f30001
100510cf:	ret    
100510d0:	jmp    eax
100510d2:	mov    eax,ds:0x100805ac
100510d7:	test   eax,eax
100510d9:	je     0x100510dd
100510db:	jmp    eax
100510dd:	ret    
100510de:	mov    eax,ds:0x100805b0
100510e3:	test   eax,eax
100510e5:	jne    0x100510f1
100510e7:	mov    eax,DWORD PTR [esp+0x8]
100510eb:	and    DWORD PTR [eax],0x0
100510ee:	xor    eax,eax
100510f0:	ret    
100510f1:	jmp    eax
100510f3:	mov    eax,ds:0x100805b4
100510f8:	test   eax,eax
100510fa:	jne    0x10051102
100510fc:	mov    eax,0xc1f30001
10051101:	ret    
10051102:	jmp    eax
10051104:	mov    eax,DWORD PTR [ecx]
10051106:	test   eax,eax
10051108:	je     0x10051110
1005110a:	mov    ecx,DWORD PTR [eax]
1005110c:	push   eax
1005110d:	call   DWORD PTR [ecx+0x8]
10051110:	ret    
10051111:	push   0x100805f0
10051116:	call   0x1005106d
1005111b:	mov    eax,ds:0x100805f0
10051120:	neg    eax
10051122:	sbb    eax,eax
10051124:	and    eax,0x7fffbffb
10051129:	pop    ecx
1005112a:	add    eax,0x80004005
1005112f:	ret    
10051130:	push   0x8
10051132:	call   0x100436de
10051137:	test   eax,eax
10051139:	pop    ecx
1005113a:	je     0x10051150
1005113c:	mov    ecx,DWORD PTR ds:0x100805f8
10051142:	mov    DWORD PTR [eax+0x4],ecx
10051145:	mov    ecx,DWORD PTR [esp+0x4]
10051149:	mov    DWORD PTR [eax],ecx
1005114b:	mov    ds:0x100805f8,eax
10051150:	ret    
10051151:	push   0x8
10051153:	push   0x0
10051155:	push   DWORD PTR [esp+0xc]
10051159:	call   DWORD PTR ds:0x10066060
1005115f:	test   eax,eax
10051161:	je     0x1005116a
10051163:	push   eax
10051164:	call   0x10051130
10051169:	pop    ecx
1005116a:	ret    
1005116b:	push   esi
1005116c:	mov    esi,DWORD PTR ds:0x100660fc
10051172:	jmp    0x1005118d
10051174:	push   DWORD PTR [eax]
10051176:	call   esi
10051178:	mov    eax,ds:0x100805f8
1005117d:	mov    ecx,DWORD PTR [eax+0x4]
10051180:	push   eax
10051181:	mov    DWORD PTR ds:0x100805f8,ecx
10051187:	call   0x100430d2
1005118c:	pop    ecx
1005118d:	mov    eax,ds:0x100805f8
10051192:	test   eax,eax
10051194:	jne    0x10051174
10051196:	mov    eax,ds:0x100805f4
1005119b:	test   eax,eax
1005119d:	je     0x100511a9
1005119f:	push   eax
100511a0:	call   esi
100511a2:	and    DWORD PTR ds:0x100805f4,0x0
100511a9:	pop    esi
100511aa:	ret    
100511ab:	push   ebp
100511ac:	mov    ebp,esp
100511ae:	sub    esp,0x404
100511b4:	mov    eax,DWORD PTR [ebp+0x8]
100511b7:	cmp    BYTE PTR [eax],0x2e
100511ba:	push   ebx
100511bb:	mov    ebx,DWORD PTR ds:0x10066060
100511c1:	push   esi
100511c2:	jne    0x100511d6
100511c4:	cmp    BYTE PTR [eax+0x1],0x0
100511c8:	jne    0x100511d6
100511ca:	mov    DWORD PTR [ebp+0x8],0x10067ecc
100511d1:	jmp    0x1005126b
100511d6:	push   edi
100511d7:	mov    esi,0x400
100511dc:	push   esi
100511dd:	push   eax
100511de:	lea    eax,[ebp-0x404]
100511e4:	push   eax
100511e5:	call   0x10059b6d
100511ea:	mov    dl,BYTE PTR [ebp-0x404]
100511f0:	add    esp,0xc
100511f3:	xor    edi,edi
100511f5:	test   dl,dl
100511f7:	lea    eax,[ebp-0x404]
100511fd:	je     0x1005126a
100511ff:	mov    DWORD PTR [ebp-0x4],0x10067f20
10051206:	mov    cl,0x2f
10051208:	cmp    cl,dl
1005120a:	jne    0x1005120e
1005120c:	mov    edi,eax
1005120e:	inc    DWORD PTR [ebp-0x4]
10051211:	mov    ecx,DWORD PTR [ebp-0x4]
10051214:	mov    cl,BYTE PTR [ecx]
10051216:	test   cl,cl
10051218:	jne    0x10051208
1005121a:	inc    eax
1005121b:	mov    dl,BYTE PTR [eax]
1005121d:	test   dl,dl
1005121f:	jne    0x100511ff
10051221:	test   edi,edi
10051223:	je     0x1005126a
10051225:	lea    eax,[ebp-0x404]
1005122b:	push   0x10051151
10051230:	push   eax
10051231:	mov    BYTE PTR [edi],dl
10051233:	call   0x10050faa
10051238:	pop    ecx
10051239:	pop    ecx
1005123a:	lea    eax,[ebp-0x404]
10051240:	push   0x10067f14
10051245:	push   eax
10051246:	call   0x10043250
1005124b:	pop    ecx
1005124c:	sub    esi,eax
1005124e:	push   esi
1005124f:	push   edi
10051250:	call   0x10059960
10051255:	add    esp,0xc
10051258:	push   0x8
1005125a:	push   0x0
1005125c:	lea    eax,[ebp-0x404]
10051262:	push   eax
10051263:	call   ebx
10051265:	mov    ds:0x100805f4,eax
1005126a:	pop    edi
1005126b:	push   0x8
1005126d:	push   0x0
1005126f:	push   DWORD PTR [ebp+0x8]
10051272:	call   ebx
10051274:	mov    esi,eax
10051276:	test   esi,esi
10051278:	je     0x1005129b
1005127a:	push   esi
1005127b:	call   0x10051130
10051280:	mov    DWORD PTR [esp],0x10067efc
10051287:	push   esi
10051288:	call   DWORD PTR ds:0x1006612c
1005128e:	mov    esi,eax
10051290:	test   esi,esi
10051292:	jne    0x10051299
10051294:	call   0x1005116b
10051299:	mov    eax,esi
1005129b:	pop    esi
1005129c:	pop    ebx
1005129d:	leave  
1005129e:	ret    
1005129f:	int3   
100512a0:	push   esi
100512a1:	mov    esi,DWORD PTR [eax+0x8]
100512a4:	push   edi
100512a5:	mov    edi,DWORD PTR [eax+0x14]
100512a8:	mov    edx,ecx
100512aa:	shr    edx,0x8
100512ad:	mov    BYTE PTR [esi+edi*1],dl
100512b0:	mov    edi,DWORD PTR [eax+0x8]
100512b3:	mov    esi,0x1
100512b8:	add    DWORD PTR [eax+0x14],esi
100512bb:	mov    edx,DWORD PTR [eax+0x14]
100512be:	mov    BYTE PTR [edx+edi*1],cl
100512c1:	add    DWORD PTR [eax+0x14],esi
100512c4:	pop    edi
100512c5:	pop    esi
100512c6:	ret    
100512c7:	int3   
100512c8:	int3   
100512c9:	int3   
100512ca:	int3   
100512cb:	int3   
100512cc:	int3   
100512cd:	int3   
100512ce:	int3   
100512cf:	int3   
100512d0:	push   esi
100512d1:	mov    esi,eax
100512d3:	mov    eax,DWORD PTR [esi+0x1c]
100512d6:	mov    ecx,DWORD PTR [esi+0x10]
100512d9:	push   edi
100512da:	mov    edi,DWORD PTR [eax+0x14]
100512dd:	cmp    edi,ecx
100512df:	jbe    0x100512e3
100512e1:	mov    edi,ecx
100512e3:	test   edi,edi
100512e5:	je     0x1005131c
100512e7:	mov    eax,DWORD PTR [eax+0x10]
100512ea:	mov    ecx,DWORD PTR [esi+0xc]
100512ed:	push   edi
100512ee:	push   eax
100512ef:	push   ecx
100512f0:	call   0x10045420
100512f5:	mov    eax,DWORD PTR [esi+0x1c]
100512f8:	add    DWORD PTR [esi+0xc],edi
100512fb:	add    DWORD PTR [eax+0x10],edi
100512fe:	add    DWORD PTR [esi+0x14],edi
10051301:	sub    DWORD PTR [esi+0x10],edi
10051304:	mov    eax,DWORD PTR [esi+0x1c]
10051307:	sub    DWORD PTR [eax+0x14],edi
1005130a:	mov    esi,DWORD PTR [esi+0x1c]
1005130d:	add    esp,0xc
10051310:	cmp    DWORD PTR [esi+0x14],0x0
10051314:	jne    0x1005131c
10051316:	mov    edx,DWORD PTR [esi+0x8]
10051319:	mov    DWORD PTR [esi+0x10],edx
1005131c:	pop    edi
1005131d:	pop    esi
1005131e:	ret    
1005131f:	int3   
10051320:	push   esi
10051321:	push   edi
10051322:	mov    edi,DWORD PTR [esp+0xc]
10051326:	test   edi,edi
10051328:	je     0x10051af6
1005132e:	mov    esi,DWORD PTR [edi+0x1c]
10051331:	test   esi,esi
10051333:	je     0x10051af6
10051339:	mov    ecx,DWORD PTR [esp+0x10]
1005133d:	cmp    ecx,0x4
10051340:	ja     0x10051af6
10051346:	cmp    DWORD PTR [edi+0xc],0x0
1005134a:	je     0x10051aee
10051350:	cmp    DWORD PTR [edi],0x0
10051353:	jne    0x1005135f
10051355:	cmp    DWORD PTR [edi+0x4],0x0
10051359:	jne    0x10051aee
1005135f:	mov    eax,DWORD PTR [esi+0x4]
10051362:	cmp    eax,0x29a
10051367:	jne    0x10051372
10051369:	cmp    ecx,0x4
1005136c:	jne    0x10051aee
10051372:	cmp    DWORD PTR [edi+0x10],0x0
10051376:	jne    0x10051388
10051378:	mov    eax,ds:0x1006b51c
1005137d:	mov    DWORD PTR [edi+0x18],eax
10051380:	pop    edi
10051381:	mov    eax,0xfffffffb
10051386:	pop    esi
10051387:	ret    
10051388:	cmp    eax,0x2a
1005138b:	mov    edx,DWORD PTR [esi+0x28]
1005138e:	push   ebx
1005138f:	push   ebp
10051390:	mov    DWORD PTR [esi],edi
10051392:	mov    DWORD PTR [esp+0x14],edx
10051396:	mov    DWORD PTR [esi+0x28],ecx
10051399:	mov    ebx,0x1
1005139e:	jne    0x10051648
100513a4:	mov    eax,0x2
100513a9:	cmp    DWORD PTR [esi+0x18],eax
100513ac:	jne    0x100515b2
100513b2:	push   0x0
100513b4:	push   0x0
100513b6:	push   0x0
100513b8:	call   0x10056370
100513bd:	mov    DWORD PTR [edi+0x30],eax
100513c0:	mov    ecx,DWORD PTR [esi+0x14]
100513c3:	mov    eax,DWORD PTR [esi+0x8]
100513c6:	mov    BYTE PTR [eax+ecx*1],0x1f
100513ca:	add    DWORD PTR [esi+0x14],ebx
100513cd:	mov    eax,DWORD PTR [esi+0x14]
100513d0:	mov    edx,DWORD PTR [esi+0x8]
100513d3:	mov    BYTE PTR [eax+edx*1],0x8b
100513d7:	add    DWORD PTR [esi+0x14],ebx
100513da:	mov    eax,DWORD PTR [esi+0x14]
100513dd:	mov    ecx,DWORD PTR [esi+0x8]
100513e0:	mov    BYTE PTR [eax+ecx*1],0x8
100513e4:	add    DWORD PTR [esi+0x14],ebx
100513e7:	mov    eax,DWORD PTR [esi+0x1c]
100513ea:	mov    ebp,DWORD PTR [esi+0x14]
100513ed:	add    esp,0xc
100513f0:	test   eax,eax
100513f2:	jne    0x10051483
100513f8:	mov    edx,DWORD PTR [esi+0x8]
100513fb:	mov    BYTE PTR [edx+ebp*1],al
100513fe:	add    DWORD PTR [esi+0x14],ebx
10051401:	mov    eax,DWORD PTR [esi+0x14]
10051404:	mov    ecx,DWORD PTR [esi+0x8]
10051407:	mov    BYTE PTR [eax+ecx*1],0x0
1005140b:	add    DWORD PTR [esi+0x14],ebx
1005140e:	mov    eax,DWORD PTR [esi+0x14]
10051411:	mov    edx,DWORD PTR [esi+0x8]
10051414:	mov    BYTE PTR [eax+edx*1],0x0
10051418:	add    DWORD PTR [esi+0x14],ebx
1005141b:	mov    eax,DWORD PTR [esi+0x14]
1005141e:	mov    ecx,DWORD PTR [esi+0x8]
10051421:	mov    BYTE PTR [eax+ecx*1],0x0
10051425:	add    DWORD PTR [esi+0x14],ebx
10051428:	mov    eax,DWORD PTR [esi+0x14]
1005142b:	mov    edx,DWORD PTR [esi+0x8]
1005142e:	mov    BYTE PTR [eax+edx*1],0x0
10051432:	add    DWORD PTR [esi+0x14],ebx
10051435:	mov    eax,DWORD PTR [esi+0x84]
1005143b:	cmp    eax,0x9
1005143e:	mov    ecx,DWORD PTR [esi+0x14]
10051441:	jne    0x1005144a
10051443:	mov    eax,0x2
10051448:	jmp    0x10051461
1005144a:	cmp    DWORD PTR [esi+0x88],0x2
10051451:	jge    0x1005145c
10051453:	cmp    eax,0x2
10051456:	jl     0x1005145c
10051458:	xor    eax,eax
1005145a:	jmp    0x10051461
1005145c:	mov    eax,0x4
10051461:	mov    edx,DWORD PTR [esi+0x8]
10051464:	mov    BYTE PTR [ecx+edx*1],al
10051467:	add    DWORD PTR [esi+0x14],ebx
1005146a:	mov    eax,DWORD PTR [esi+0x14]
1005146d:	mov    ecx,DWORD PTR [esi+0x8]
10051470:	mov    BYTE PTR [eax+ecx*1],0xb
10051474:	add    DWORD PTR [esi+0x14],ebx
10051477:	mov    DWORD PTR [esi+0x4],0x71
1005147e:	jmp    0x10051648
10051483:	mov    edx,DWORD PTR [eax+0x24]
10051486:	mov    ecx,DWORD PTR [eax+0x2c]
10051489:	neg    edx
1005148b:	sbb    dl,dl
1005148d:	and    edx,0x10
10051490:	neg    ecx
10051492:	sbb    cl,cl
10051494:	and    ecx,0x2
10051497:	add    dl,cl
10051499:	mov    ecx,DWORD PTR [eax+0x1c]
1005149c:	neg    ecx
1005149e:	sbb    cl,cl
100514a0:	and    ecx,0x8
100514a3:	add    dl,cl
100514a5:	mov    ecx,DWORD PTR [eax+0x10]
100514a8:	neg    ecx
100514aa:	sbb    cl,cl
100514ac:	and    ecx,0x4
100514af:	add    dl,cl
100514b1:	cmp    DWORD PTR [eax],0x0
100514b4:	mov    ecx,DWORD PTR [esi+0x8]
100514b7:	setne  al
100514ba:	add    dl,al
100514bc:	mov    BYTE PTR [ecx+ebp*1],dl
100514bf:	add    DWORD PTR [esi+0x14],ebx
100514c2:	mov    eax,DWORD PTR [esi+0x14]
100514c5:	mov    edx,DWORD PTR [esi+0x1c]
100514c8:	movzx  edx,BYTE PTR [edx+0x4]
100514cc:	mov    ecx,DWORD PTR [esi+0x8]
100514cf:	mov    BYTE PTR [eax+ecx*1],dl
100514d2:	add    DWORD PTR [esi+0x14],ebx
100514d5:	mov    ecx,DWORD PTR [esi+0x1c]
100514d8:	movzx  ecx,BYTE PTR [ecx+0x5]
100514dc:	mov    eax,DWORD PTR [esi+0x14]
100514df:	mov    edx,DWORD PTR [esi+0x8]
100514e2:	mov    BYTE PTR [eax+edx*1],cl
100514e5:	add    DWORD PTR [esi+0x14],ebx
100514e8:	mov    edx,DWORD PTR [esi+0x1c]
100514eb:	movzx  edx,BYTE PTR [edx+0x6]
100514ef:	mov    eax,DWORD PTR [esi+0x14]
100514f2:	mov    ecx,DWORD PTR [esi+0x8]
100514f5:	mov    BYTE PTR [eax+ecx*1],dl
100514f8:	add    DWORD PTR [esi+0x14],ebx
100514fb:	mov    ecx,DWORD PTR [esi+0x1c]
100514fe:	movzx  ecx,BYTE PTR [ecx+0x7]
10051502:	mov    eax,DWORD PTR [esi+0x14]
10051505:	mov    edx,DWORD PTR [esi+0x8]
10051508:	mov    BYTE PTR [eax+edx*1],cl
1005150b:	add    DWORD PTR [esi+0x14],ebx
1005150e:	mov    eax,DWORD PTR [esi+0x84]
10051514:	cmp    eax,0x9
10051517:	mov    ecx,DWORD PTR [esi+0x14]
1005151a:	jne    0x10051523
1005151c:	mov    eax,0x2
10051521:	jmp    0x1005153a
10051523:	cmp    DWORD PTR [esi+0x88],0x2
1005152a:	jge    0x10051535
1005152c:	cmp    eax,0x2
1005152f:	jl     0x10051535
10051531:	xor    eax,eax
10051533:	jmp    0x1005153a
10051535:	mov    eax,0x4
1005153a:	mov    edx,DWORD PTR [esi+0x8]
1005153d:	mov    BYTE PTR [ecx+edx*1],al
10051540:	add    DWORD PTR [esi+0x14],ebx
10051543:	mov    ecx,DWORD PTR [esi+0x1c]
10051546:	mov    eax,DWORD PTR [esi+0x14]
10051549:	mov    cl,BYTE PTR [ecx+0xc]
1005154c:	mov    edx,DWORD PTR [esi+0x8]
1005154f:	mov    BYTE PTR [eax+edx*1],cl
10051552:	add    DWORD PTR [esi+0x14],ebx
10051555:	mov    eax,DWORD PTR [esi+0x1c]
10051558:	cmp    DWORD PTR [eax+0x10],0x0
1005155c:	mov    ecx,DWORD PTR [esi+0x14]
1005155f:	je     0x10051582
10051561:	mov    al,BYTE PTR [eax+0x14]
10051564:	mov    edx,DWORD PTR [esi+0x8]
10051567:	mov    BYTE PTR [ecx+edx*1],al
1005156a:	add    DWORD PTR [esi+0x14],ebx
1005156d:	mov    ecx,DWORD PTR [esi+0x1c]
10051570:	mov    cl,BYTE PTR [ecx+0x15]
10051573:	mov    eax,DWORD PTR [esi+0x14]
10051576:	mov    edx,DWORD PTR [esi+0x8]
10051579:	mov    BYTE PTR [eax+edx*1],cl
1005157c:	add    DWORD PTR [esi+0x14],ebx
1005157f:	mov    ecx,DWORD PTR [esi+0x14]
10051582:	mov    edx,DWORD PTR [esi+0x1c]
10051585:	cmp    DWORD PTR [edx+0x2c],0x0
10051589:	je     0x1005159f
1005158b:	mov    eax,DWORD PTR [esi+0x8]
1005158e:	push   ecx
1005158f:	mov    ecx,DWORD PTR [edi+0x30]
10051592:	push   eax
10051593:	push   ecx
10051594:	call   0x10056370
10051599:	add    esp,0xc
1005159c:	mov    DWORD PTR [edi+0x30],eax
1005159f:	mov    DWORD PTR [esi+0x20],0x0
100515a6:	mov    DWORD PTR [esi+0x4],0x45
100515ad:	jmp    0x10051648
100515b2:	mov    ecx,DWORD PTR [esi+0x30]
100515b5:	sub    ecx,0x8
100515b8:	shl    ecx,0xc
100515bb:	add    ecx,0x800
100515c1:	cmp    DWORD PTR [esi+0x88],eax
100515c7:	jge    0x100515e8
100515c9:	mov    ebp,DWORD PTR [esi+0x84]
100515cf:	cmp    ebp,eax
100515d1:	jl     0x100515e8
100515d3:	cmp    ebp,0x6
100515d6:	jge    0x100515dc
100515d8:	mov    eax,ebx
100515da:	jmp    0x100515ea
100515dc:	xor    edx,edx
100515de:	cmp    ebp,0x6
100515e1:	setne  dl
100515e4:	add    eax,edx
100515e6:	jmp    0x100515ea
100515e8:	xor    eax,eax
100515ea:	shl    eax,0x6
100515ed:	or     ecx,eax
100515ef:	cmp    DWORD PTR [esi+0x6c],0x0
100515f3:	je     0x100515f8
100515f5:	or     ecx,0x20
100515f8:	mov    eax,0x8421085
100515fd:	mul    ecx
100515ff:	sub    ecx,edx
10051601:	shr    ecx,1
10051603:	add    ecx,edx
10051605:	shr    ecx,0x4
10051608:	add    ecx,ebx
1005160a:	mov    eax,ecx
1005160c:	shl    ecx,0x5
1005160f:	sub    ecx,eax
10051611:	mov    eax,esi
10051613:	mov    DWORD PTR [esi+0x4],0x71
1005161a:	call   0x100512a0
1005161f:	cmp    DWORD PTR [esi+0x6c],0x0
10051623:	je     0x10051637
10051625:	movzx  ecx,WORD PTR [edi+0x32]
10051629:	call   0x100512a0
1005162e:	movzx  ecx,WORD PTR [edi+0x30]
10051632:	call   0x100512a0
10051637:	push   0x0
10051639:	push   0x0
1005163b:	push   0x0
1005163d:	call   0x10054390
10051642:	add    esp,0xc
10051645:	mov    DWORD PTR [edi+0x30],eax
10051648:	cmp    DWORD PTR [esi+0x4],0x45
1005164c:	jne    0x10051718
10051652:	mov    eax,DWORD PTR [esi+0x1c]
10051655:	cmp    DWORD PTR [eax+0x10],0x0
10051659:	je     0x10051711
1005165f:	movzx  eax,WORD PTR [eax+0x14]
10051663:	cmp    DWORD PTR [esi+0x20],eax
10051666:	mov    ecx,DWORD PTR [esi+0x14]
10051669:	jae    0x100516d7
1005166b:	jmp    0x10051670
1005166d:	lea    ecx,[ecx+0x0]
10051670:	mov    eax,DWORD PTR [esi+0x14]
10051673:	cmp    eax,DWORD PTR [esi+0xc]
10051676:	jne    0x100516ae
10051678:	mov    edx,DWORD PTR [esi+0x1c]
1005167b:	cmp    DWORD PTR [edx+0x2c],0x0
1005167f:	je     0x1005169d
10051681:	cmp    eax,ecx
10051683:	jbe    0x1005169d
10051685:	sub    eax,ecx
10051687:	push   eax
10051688:	mov    eax,DWORD PTR [esi+0x8]
1005168b:	add    eax,ecx
1005168d:	mov    ecx,DWORD PTR [edi+0x30]
10051690:	push   eax
10051691:	push   ecx
10051692:	call   0x10056370
10051697:	add    esp,0xc
1005169a:	mov    DWORD PTR [edi+0x30],eax
1005169d:	mov    eax,edi
1005169f:	call   0x100512d0
100516a4:	mov    eax,DWORD PTR [esi+0x14]
100516a7:	cmp    eax,DWORD PTR [esi+0xc]
100516aa:	mov    ecx,eax
100516ac:	je     0x100516d7
100516ae:	mov    edx,DWORD PTR [esi+0x1c]
100516b1:	mov    edx,DWORD PTR [edx+0x10]
100516b4:	mov    ebx,DWORD PTR [esi+0x20]
100516b7:	mov    dl,BYTE PTR [edx+ebx*1]
100516ba:	mov    ebp,DWORD PTR [esi+0x8]
100516bd:	mov    BYTE PTR [eax+ebp*1],dl
100516c0:	mov    eax,0x1
100516c5:	add    DWORD PTR [esi+0x14],eax
100516c8:	add    DWORD PTR [esi+0x20],eax
100516cb:	mov    eax,DWORD PTR [esi+0x1c]
100516ce:	movzx  edx,WORD PTR [eax+0x14]
100516d2:	cmp    DWORD PTR [esi+0x20],edx
100516d5:	jb     0x10051670
100516d7:	mov    eax,DWORD PTR [esi+0x1c]
100516da:	cmp    DWORD PTR [eax+0x2c],0x0
100516de:	je     0x100516ff
100516e0:	mov    eax,DWORD PTR [esi+0x14]
100516e3:	cmp    eax,ecx
100516e5:	jbe    0x100516ff
100516e7:	mov    edx,DWORD PTR [esi+0x8]
100516ea:	sub    eax,ecx
100516ec:	push   eax
100516ed:	mov    eax,DWORD PTR [edi+0x30]
100516f0:	add    edx,ecx
100516f2:	push   edx
100516f3:	push   eax
100516f4:	call   0x10056370
100516f9:	add    esp,0xc
100516fc:	mov    DWORD PTR [edi+0x30],eax
100516ff:	mov    ecx,DWORD PTR [esi+0x1c]
10051702:	mov    edx,DWORD PTR [esi+0x20]
10051705:	cmp    edx,DWORD PTR [ecx+0x14]
10051708:	jne    0x10051718
1005170a:	mov    DWORD PTR [esi+0x20],0x0
10051711:	mov    DWORD PTR [esi+0x4],0x49
10051718:	cmp    DWORD PTR [esi+0x4],0x49
1005171c:	mov    ebp,0x1
10051721:	jne    0x100517ce
10051727:	mov    eax,DWORD PTR [esi+0x1c]
1005172a:	cmp    DWORD PTR [eax+0x1c],0x0
1005172e:	je     0x100517c7
10051734:	mov    edx,DWORD PTR [esi+0x14]
10051737:	mov    eax,DWORD PTR [esi+0x14]
1005173a:	cmp    eax,DWORD PTR [esi+0xc]
1005173d:	jne    0x10051775
1005173f:	mov    ecx,DWORD PTR [esi+0x1c]
10051742:	cmp    DWORD PTR [ecx+0x2c],0x0
10051746:	je     0x10051764
10051748:	cmp    eax,edx
1005174a:	jbe    0x10051764
1005174c:	mov    ecx,DWORD PTR [edi+0x30]
1005174f:	sub    eax,edx
10051751:	push   eax
10051752:	mov    eax,DWORD PTR [esi+0x8]
10051755:	add    eax,edx
10051757:	push   eax
10051758:	push   ecx
10051759:	call   0x10056370
1005175e:	add    esp,0xc
10051761:	mov    DWORD PTR [edi+0x30],eax
10051764:	mov    eax,edi
10051766:	call   0x100512d0
1005176b:	mov    eax,DWORD PTR [esi+0x14]
1005176e:	cmp    eax,DWORD PTR [esi+0xc]
10051771:	mov    edx,eax
10051773:	je     0x10051796
10051775:	mov    ecx,DWORD PTR [esi+0x20]
10051778:	mov    ebx,DWORD PTR [esi+0x1c]
1005177b:	mov    ebx,DWORD PTR [ebx+0x1c]
1005177e:	movzx  ebx,BYTE PTR [ebx+ecx*1]
10051782:	add    ecx,ebp
10051784:	mov    DWORD PTR [esi+0x20],ecx
10051787:	mov    ecx,DWORD PTR [esi+0x8]
1005178a:	mov    BYTE PTR [eax+ecx*1],bl
1005178d:	add    DWORD PTR [esi+0x14],ebp
10051790:	test   ebx,ebx
10051792:	jne    0x10051737
10051794:	jmp    0x10051798
10051796:	mov    ebx,ebp
10051798:	mov    eax,DWORD PTR [esi+0x1c]
1005179b:	cmp    DWORD PTR [eax+0x2c],0x0
1005179f:	je     0x100517c0
100517a1:	mov    eax,DWORD PTR [esi+0x14]
100517a4:	cmp    eax,edx
100517a6:	jbe    0x100517c0
100517a8:	mov    ecx,DWORD PTR [esi+0x8]
100517ab:	sub    eax,edx
100517ad:	push   eax
100517ae:	add    ecx,edx
100517b0:	mov    edx,DWORD PTR [edi+0x30]
100517b3:	push   ecx
100517b4:	push   edx
100517b5:	call   0x10056370
100517ba:	add    esp,0xc
100517bd:	mov    DWORD PTR [edi+0x30],eax
100517c0:	test   ebx,ebx
100517c2:	jne    0x100517ce
100517c4:	mov    DWORD PTR [esi+0x20],ebx
100517c7:	mov    DWORD PTR [esi+0x4],0x5b
100517ce:	cmp    DWORD PTR [esi+0x4],0x5b
100517d2:	jne    0x1005187d
100517d8:	mov    eax,DWORD PTR [esi+0x1c]
100517db:	cmp    DWORD PTR [eax+0x24],0x0
100517df:	je     0x10051876
100517e5:	mov    edx,DWORD PTR [esi+0x14]
100517e8:	mov    eax,DWORD PTR [esi+0x14]
100517eb:	cmp    eax,DWORD PTR [esi+0xc]
100517ee:	jne    0x10051826
100517f0:	mov    ecx,DWORD PTR [esi+0x1c]
100517f3:	cmp    DWORD PTR [ecx+0x2c],0x0
100517f7:	je     0x10051815
100517f9:	cmp    eax,edx
100517fb:	jbe    0x10051815
100517fd:	mov    ecx,DWORD PTR [edi+0x30]
10051800:	sub    eax,edx
10051802:	push   eax
10051803:	mov    eax,DWORD PTR [esi+0x8]
10051806:	add    eax,edx
10051808:	push   eax
10051809:	push   ecx
1005180a:	call   0x10056370
1005180f:	add    esp,0xc
10051812:	mov    DWORD PTR [edi+0x30],eax
10051815:	mov    eax,edi
10051817:	call   0x100512d0
1005181c:	mov    eax,DWORD PTR [esi+0x14]
1005181f:	cmp    eax,DWORD PTR [esi+0xc]
10051822:	mov    edx,eax
10051824:	je     0x10051848
10051826:	mov    ecx,DWORD PTR [esi+0x20]
10051829:	mov    ebx,DWORD PTR [esi+0x1c]
1005182c:	mov    ebx,DWORD PTR [ebx+0x24]
1005182f:	movzx  ebx,BYTE PTR [ebx+ecx*1]
10051833:	add    ecx,0x1
10051836:	mov    DWORD PTR [esi+0x20],ecx
10051839:	mov    ecx,DWORD PTR [esi+0x8]
1005183c:	mov    BYTE PTR [eax+ecx*1],bl
1005183f:	add    DWORD PTR [esi+0x14],ebp
10051842:	test   ebx,ebx
10051844:	jne    0x100517e8
10051846:	jmp    0x1005184a
10051848:	mov    ebx,ebp
1005184a:	mov    eax,DWORD PTR [esi+0x1c]
1005184d:	cmp    DWORD PTR [eax+0x2c],0x0
10051851:	je     0x10051872
10051853:	mov    eax,DWORD PTR [esi+0x14]
10051856:	cmp    eax,edx
10051858:	jbe    0x10051872
1005185a:	mov    ecx,DWORD PTR [esi+0x8]
1005185d:	sub    eax,edx
1005185f:	push   eax
10051860:	add    ecx,edx
10051862:	mov    edx,DWORD PTR [edi+0x30]
10051865:	push   ecx
10051866:	push   edx
10051867:	call   0x10056370
1005186c:	add    esp,0xc
1005186f:	mov    DWORD PTR [edi+0x30],eax
10051872:	test   ebx,ebx
10051874:	jne    0x1005187d
10051876:	mov    DWORD PTR [esi+0x4],0x67
1005187d:	cmp    DWORD PTR [esi+0x4],0x67
10051881:	jne    0x100518de
10051883:	mov    eax,DWORD PTR [esi+0x1c]
10051886:	cmp    DWORD PTR [eax+0x2c],0x0
1005188a:	je     0x100518d7
1005188c:	mov    ecx,DWORD PTR [esi+0x14]
1005188f:	add    ecx,0x2
10051892:	cmp    ecx,DWORD PTR [esi+0xc]
10051895:	jbe    0x1005189e
10051897:	mov    eax,edi
10051899:	call   0x100512d0
1005189e:	mov    eax,DWORD PTR [esi+0x14]
100518a1:	lea    edx,[eax+0x2]
100518a4:	cmp    edx,DWORD PTR [esi+0xc]
100518a7:	ja     0x100518de
100518a9:	movzx  edx,BYTE PTR [edi+0x30]
100518ad:	mov    ecx,DWORD PTR [esi+0x8]
100518b0:	mov    BYTE PTR [eax+ecx*1],dl
100518b3:	add    DWORD PTR [esi+0x14],ebp
100518b6:	movzx  edx,BYTE PTR [edi+0x31]
100518ba:	mov    eax,DWORD PTR [esi+0x14]
100518bd:	mov    ecx,DWORD PTR [esi+0x8]
100518c0:	push   0x0
100518c2:	push   0x0
100518c4:	mov    BYTE PTR [eax+ecx*1],dl
100518c7:	add    DWORD PTR [esi+0x14],ebp
100518ca:	push   0x0
100518cc:	call   0x10056370
100518d1:	add    esp,0xc
100518d4:	mov    DWORD PTR [edi+0x30],eax
100518d7:	mov    DWORD PTR [esi+0x4],0x71
100518de:	cmp    DWORD PTR [esi+0x14],0x0
100518e2:	je     0x100518ff
100518e4:	mov    eax,edi
100518e6:	call   0x100512d0
100518eb:	cmp    DWORD PTR [edi+0x10],0x0
100518ef:	jne    0x10051926
100518f1:	mov    DWORD PTR [esi+0x28],0xffffffff
100518f8:	pop    ebp
100518f9:	pop    ebx
100518fa:	pop    edi
100518fb:	xor    eax,eax
100518fd:	pop    esi
100518fe:	ret    
100518ff:	cmp    DWORD PTR [edi+0x4],0x0
10051903:	mov    ebx,DWORD PTR [esp+0x18]
10051907:	jne    0x1005192a
10051909:	cmp    ebx,DWORD PTR [esp+0x14]
1005190d:	jg     0x1005192a
1005190f:	cmp    ebx,0x4
10051912:	je     0x1005192a
10051914:	mov    eax,ds:0x1006b51c
10051919:	pop    ebp
1005191a:	pop    ebx
1005191b:	mov    DWORD PTR [edi+0x18],eax
1005191e:	pop    edi
1005191f:	mov    eax,0xfffffffb
10051924:	pop    esi
10051925:	ret    
10051926:	mov    ebx,DWORD PTR [esp+0x18]
1005192a:	mov    eax,DWORD PTR [esi+0x4]
1005192d:	cmp    eax,0x29a
10051932:	jne    0x1005194d
10051934:	cmp    DWORD PTR [edi+0x4],0x0
10051938:	je     0x10051953
1005193a:	mov    ecx,DWORD PTR ds:0x1006b51c
10051940:	pop    ebp
10051941:	pop    ebx
10051942:	mov    DWORD PTR [edi+0x18],ecx
10051945:	pop    edi
10051946:	mov    eax,0xfffffffb
1005194b:	pop    esi
1005194c:	ret    
1005194d:	cmp    DWORD PTR [edi+0x4],0x0
10051951:	jne    0x1005196c
10051953:	cmp    DWORD PTR [esi+0x74],0x0
10051957:	jne    0x1005196c
10051959:	test   ebx,ebx
1005195b:	je     0x10051a00
10051961:	cmp    eax,0x29a
10051966:	je     0x10051a00
1005196c:	mov    eax,DWORD PTR [esi+0x84]
10051972:	lea    edx,[eax+eax*2]
10051975:	mov    eax,DWORD PTR [edx*4+0x10067f68]
1005197c:	push   ebx
1005197d:	push   esi
1005197e:	call   eax
10051980:	add    esp,0x8
10051983:	cmp    eax,0x2
10051986:	je     0x1005198d
10051988:	cmp    eax,0x3
1005198b:	jne    0x10051994
1005198d:	mov    DWORD PTR [esi+0x4],0x29a
10051994:	test   eax,eax
10051996:	je     0x10051ad6
1005199c:	cmp    eax,0x2
1005199f:	je     0x10051ad6
100519a5:	cmp    eax,ebp
100519a7:	jne    0x10051a00
100519a9:	cmp    ebx,ebp
100519ab:	jne    0x100519b8
100519ad:	push   esi
100519ae:	call   0x10055cd0
100519b3:	add    esp,0x4
100519b6:	jmp    0x100519ef
100519b8:	push   0x0
100519ba:	push   0x0
100519bc:	push   0x0
100519be:	push   esi
100519bf:	call   0x10055c30
100519c4:	add    esp,0x10
100519c7:	cmp    ebx,0x3
100519ca:	jne    0x100519ef
100519cc:	mov    ecx,DWORD PTR [esi+0x4c]
100519cf:	mov    edx,DWORD PTR [esi+0x44]
100519d2:	mov    WORD PTR [edx+ecx*2-0x2],0x0
100519d9:	mov    eax,DWORD PTR [esi+0x4c]
100519dc:	mov    edx,DWORD PTR [esi+0x44]
100519df:	lea    ecx,[eax+eax*1-0x2]
100519e3:	push   ecx
100519e4:	push   0x0
100519e6:	push   edx
100519e7:	call   0x10045ea0
100519ec:	add    esp,0xc
100519ef:	mov    eax,edi
100519f1:	call   0x100512d0
100519f6:	cmp    DWORD PTR [edi+0x10],0x0
100519fa:	je     0x100518f1
10051a00:	cmp    ebx,0x4
10051a03:	jne    0x100518f8
10051a09:	mov    eax,DWORD PTR [esi+0x18]
10051a0c:	test   eax,eax
10051a0e:	jg     0x10051a17
10051a10:	mov    eax,ebp
10051a12:	pop    ebp
10051a13:	pop    ebx
10051a14:	pop    edi
10051a15:	pop    esi
10051a16:	ret    
10051a17:	cmp    eax,0x2
10051a1a:	jne    0x10051aa2
10051a20:	movzx  edx,BYTE PTR [edi+0x30]
10051a24:	mov    ecx,DWORD PTR [esi+0x14]
10051a27:	mov    eax,DWORD PTR [esi+0x8]
10051a2a:	mov    BYTE PTR [eax+ecx*1],dl
10051a2d:	add    DWORD PTR [esi+0x14],ebp
10051a30:	movzx  edx,BYTE PTR [edi+0x31]
10051a34:	mov    eax,DWORD PTR [esi+0x14]
10051a37:	mov    ecx,DWORD PTR [esi+0x8]
10051a3a:	mov    BYTE PTR [eax+ecx*1],dl
10051a3d:	add    DWORD PTR [esi+0x14],ebp
10051a40:	movzx  edx,BYTE PTR [edi+0x32]
10051a44:	mov    eax,DWORD PTR [esi+0x14]
10051a47:	mov    ecx,DWORD PTR [esi+0x8]
10051a4a:	mov    BYTE PTR [eax+ecx*1],dl
10051a4d:	add    DWORD PTR [esi+0x14],ebp
10051a50:	movzx  edx,BYTE PTR [edi+0x33]
10051a54:	mov    eax,DWORD PTR [esi+0x14]
10051a57:	mov    ecx,DWORD PTR [esi+0x8]
10051a5a:	mov    BYTE PTR [eax+ecx*1],dl
10051a5d:	add    DWORD PTR [esi+0x14],ebp
10051a60:	movzx  edx,BYTE PTR [edi+0x8]
10051a64:	mov    eax,DWORD PTR [esi+0x14]
10051a67:	mov    ecx,DWORD PTR [esi+0x8]
10051a6a:	mov    BYTE PTR [eax+ecx*1],dl
10051a6d:	add    DWORD PTR [esi+0x14],ebp
10051a70:	movzx  edx,BYTE PTR [edi+0x9]
10051a74:	mov    eax,DWORD PTR [esi+0x14]
10051a77:	mov    ecx,DWORD PTR [esi+0x8]
10051a7a:	mov    BYTE PTR [eax+ecx*1],dl
10051a7d:	add    DWORD PTR [esi+0x14],ebp
10051a80:	movzx  edx,BYTE PTR [edi+0xa]
10051a84:	mov    eax,DWORD PTR [esi+0x14]
10051a87:	mov    ecx,DWORD PTR [esi+0x8]
10051a8a:	mov    BYTE PTR [eax+ecx*1],dl
10051a8d:	add    DWORD PTR [esi+0x14],ebp
10051a90:	movzx  edx,BYTE PTR [edi+0xb]
10051a94:	mov    eax,DWORD PTR [esi+0x14]
10051a97:	mov    ecx,DWORD PTR [esi+0x8]
10051a9a:	mov    BYTE PTR [eax+ecx*1],dl
10051a9d:	add    DWORD PTR [esi+0x14],ebp
10051aa0:	jmp    0x10051ab6
10051aa2:	movzx  ecx,WORD PTR [edi+0x32]
10051aa6:	mov    eax,esi
10051aa8:	call   0x100512a0
10051aad:	movzx  ecx,WORD PTR [edi+0x30]
10051ab1:	call   0x100512a0
10051ab6:	mov    eax,edi
10051ab8:	call   0x100512d0
10051abd:	mov    eax,DWORD PTR [esi+0x18]
10051ac0:	test   eax,eax
10051ac2:	jle    0x10051ac9
10051ac4:	neg    eax
10051ac6:	mov    DWORD PTR [esi+0x18],eax
10051ac9:	pop    ebp
10051aca:	xor    eax,eax
10051acc:	cmp    DWORD PTR [esi+0x14],eax
10051acf:	pop    ebx
10051ad0:	pop    edi
10051ad1:	sete   al
10051ad4:	pop    esi
10051ad5:	ret    
10051ad6:	cmp    DWORD PTR [edi+0x10],0x0
10051ada:	jne    0x100518f8
10051ae0:	pop    ebp
10051ae1:	pop    ebx
10051ae2:	pop    edi
10051ae3:	mov    DWORD PTR [esi+0x28],0xffffffff
10051aea:	xor    eax,eax
10051aec:	pop    esi
10051aed:	ret    
10051aee:	mov    eax,ds:0x1006b510
10051af3:	mov    DWORD PTR [edi+0x18],eax
10051af6:	pop    edi
10051af7:	mov    eax,0xfffffffe
10051afc:	pop    esi
10051afd:	ret    
10051afe:	int3   
10051aff:	int3   
10051b00:	push   esi
10051b01:	mov    esi,DWORD PTR [esp+0x8]
10051b05:	test   esi,esi
10051b07:	je     0x10051bcb
10051b0d:	mov    eax,DWORD PTR [esi+0x1c]
10051b10:	test   eax,eax
10051b12:	je     0x10051bcb
10051b18:	push   edi
10051b19:	mov    edi,DWORD PTR [eax+0x4]
10051b1c:	cmp    edi,0x2a
10051b1f:	je     0x10051b4a
10051b21:	cmp    edi,0x45
10051b24:	je     0x10051b4a
10051b26:	cmp    edi,0x49
10051b29:	je     0x10051b4a
10051b2b:	cmp    edi,0x5b
10051b2e:	je     0x10051b4a
10051b30:	cmp    edi,0x67
10051b33:	je     0x10051b4a
10051b35:	cmp    edi,0x71
10051b38:	je     0x10051b4a
10051b3a:	cmp    edi,0x29a
10051b40:	je     0x10051b4a
10051b42:	pop    edi
10051b43:	mov    eax,0xfffffffe
10051b48:	pop    esi
10051b49:	ret    
10051b4a:	mov    eax,DWORD PTR [eax+0x8]
10051b4d:	test   eax,eax
10051b4f:	je     0x10051b5e
10051b51:	mov    ecx,DWORD PTR [esi+0x24]
10051b54:	push   eax
10051b55:	mov    eax,DWORD PTR [esi+0x28]
10051b58:	push   eax
10051b59:	call   ecx
10051b5b:	add    esp,0x8
10051b5e:	mov    edx,DWORD PTR [esi+0x1c]
10051b61:	mov    eax,DWORD PTR [edx+0x44]
10051b64:	test   eax,eax
10051b66:	je     0x10051b75
10051b68:	mov    ecx,DWORD PTR [esi+0x24]
10051b6b:	push   eax
10051b6c:	mov    eax,DWORD PTR [esi+0x28]
10051b6f:	push   eax
10051b70:	call   ecx
10051b72:	add    esp,0x8
10051b75:	mov    edx,DWORD PTR [esi+0x1c]
10051b78:	mov    eax,DWORD PTR [edx+0x40]
10051b7b:	test   eax,eax
10051b7d:	je     0x10051b8c
10051b7f:	mov    ecx,DWORD PTR [esi+0x24]
10051b82:	push   eax
10051b83:	mov    eax,DWORD PTR [esi+0x28]
10051b86:	push   eax
10051b87:	call   ecx
10051b89:	add    esp,0x8
10051b8c:	mov    edx,DWORD PTR [esi+0x1c]
10051b8f:	mov    eax,DWORD PTR [edx+0x38]
10051b92:	test   eax,eax
10051b94:	je     0x10051ba3
10051b96:	mov    ecx,DWORD PTR [esi+0x24]
10051b99:	push   eax
10051b9a:	mov    eax,DWORD PTR [esi+0x28]
10051b9d:	push   eax
10051b9e:	call   ecx
10051ba0:	add    esp,0x8
10051ba3:	mov    edx,DWORD PTR [esi+0x1c]
10051ba6:	mov    eax,DWORD PTR [esi+0x28]
10051ba9:	mov    ecx,DWORD PTR [esi+0x24]
10051bac:	push   edx
10051bad:	push   eax
10051bae:	call   ecx
10051bb0:	add    esp,0x8
10051bb3:	xor    eax,eax
10051bb5:	cmp    edi,0x71
10051bb8:	setne  al
10051bbb:	pop    edi
10051bbc:	mov    DWORD PTR [esi+0x1c],0x0
10051bc3:	pop    esi
10051bc4:	sub    eax,0x1
10051bc7:	and    eax,0xfffffffd
10051bca:	ret    
10051bcb:	mov    eax,0xfffffffe
10051bd0:	pop    esi
10051bd1:	ret    
10051bd2:	int3   
10051bd3:	int3   
10051bd4:	int3   
10051bd5:	int3   
10051bd6:	int3   
10051bd7:	int3   
10051bd8:	int3   
10051bd9:	int3   
10051bda:	int3   
10051bdb:	int3   
10051bdc:	int3   
10051bdd:	int3   
10051bde:	int3   
10051bdf:	int3   
10051be0:	mov    eax,DWORD PTR [esi+0x4]
10051be3:	push   edi
10051be4:	mov    edi,eax
10051be6:	cmp    edi,ecx
10051be8:	jbe    0x10051bec
10051bea:	mov    edi,ecx
10051bec:	test   edi,edi
10051bee:	jne    0x10051bf4
10051bf0:	xor    eax,eax
10051bf2:	pop    edi
10051bf3:	ret    
10051bf4:	sub    eax,edi
10051bf6:	mov    DWORD PTR [esi+0x4],eax
10051bf9:	mov    eax,DWORD PTR [esi+0x1c]
10051bfc:	mov    eax,DWORD PTR [eax+0x18]
10051bff:	cmp    eax,0x1
10051c02:	jne    0x10051c13
10051c04:	mov    ecx,DWORD PTR [esi]
10051c06:	mov    edx,DWORD PTR [esi+0x30]
10051c09:	push   edi
10051c0a:	push   ecx
10051c0b:	push   edx
10051c0c:	call   0x10054390
10051c11:	jmp    0x10051c25
10051c13:	cmp    eax,0x2
10051c16:	jne    0x10051c2b
10051c18:	mov    eax,DWORD PTR [esi]
10051c1a:	mov    ecx,DWORD PTR [esi+0x30]
10051c1d:	push   edi
10051c1e:	push   eax
10051c1f:	push   ecx
10051c20:	call   0x10056370
10051c25:	mov    DWORD PTR [esi+0x30],eax
10051c28:	add    esp,0xc
10051c2b:	mov    edx,DWORD PTR [esi]
10051c2d:	mov    eax,DWORD PTR [esp+0x8]
10051c31:	push   edi
10051c32:	push   edx
10051c33:	push   eax
10051c34:	call   0x10045420
10051c39:	add    DWORD PTR [esi],edi
10051c3b:	add    DWORD PTR [esi+0x8],edi
10051c3e:	add    esp,0xc
10051c41:	mov    eax,edi
10051c43:	pop    edi
10051c44:	ret    
10051c45:	int3   
10051c46:	int3   
10051c47:	int3   
10051c48:	int3   
10051c49:	int3   
10051c4a:	int3   
10051c4b:	int3   
10051c4c:	int3   
10051c4d:	int3   
10051c4e:	int3   
10051c4f:	int3   
10051c50:	mov    eax,DWORD PTR [esi+0x2c]
10051c53:	mov    ecx,DWORD PTR [esi+0x4c]
10051c56:	mov    edx,DWORD PTR [esi+0x44]
10051c59:	push   edi
10051c5a:	add    eax,eax
10051c5c:	mov    DWORD PTR [esi+0x3c],eax
10051c5f:	xor    edi,edi
10051c61:	mov    WORD PTR [edx+ecx*2-0x2],di
10051c66:	mov    eax,DWORD PTR [esi+0x4c]
10051c69:	mov    edx,DWORD PTR [esi+0x44]
10051c6c:	lea    ecx,[eax+eax*1-0x2]
10051c70:	push   ecx
10051c71:	push   edi
10051c72:	push   edx
10051c73:	call   0x10045ea0
10051c78:	mov    eax,DWORD PTR [esi+0x84]
10051c7e:	lea    eax,[eax+eax*2]
10051c81:	add    eax,eax
10051c83:	movzx  ecx,WORD PTR [eax+eax*1+0x10067f62]
10051c8b:	add    eax,eax
10051c8d:	mov    DWORD PTR [esi+0x80],ecx
10051c93:	movzx  edx,WORD PTR [eax+0x10067f60]
10051c9a:	mov    DWORD PTR [esi+0x8c],edx
10051ca0:	movzx  ecx,WORD PTR [eax+0x10067f64]
10051ca7:	mov    DWORD PTR [esi+0x90],ecx
10051cad:	movzx  edx,WORD PTR [eax+0x10067f66]
10051cb4:	mov    eax,0x2
10051cb9:	add    esp,0xc
10051cbc:	mov    DWORD PTR [esi+0x6c],edi
10051cbf:	mov    DWORD PTR [esi+0x5c],edi
10051cc2:	mov    DWORD PTR [esi+0x74],edi
10051cc5:	mov    DWORD PTR [esi+0x68],edi
10051cc8:	mov    DWORD PTR [esi+0x48],edi
10051ccb:	mov    DWORD PTR [esi+0x7c],edx
10051cce:	mov    DWORD PTR [esi+0x78],eax
10051cd1:	mov    DWORD PTR [esi+0x60],eax
10051cd4:	pop    edi
10051cd5:	ret    
10051cd6:	int3   
10051cd7:	int3   
10051cd8:	int3   
10051cd9:	int3   
10051cda:	int3   
10051cdb:	int3   
10051cdc:	int3   
10051cdd:	int3   
10051cde:	int3   
10051cdf:	int3   
10051ce0:	sub    esp,0x14
10051ce3:	mov    ecx,DWORD PTR [edi+0x7c]
10051ce6:	mov    edx,DWORD PTR [edi+0x6c]
10051ce9:	push   ebx
10051cea:	push   ebp
10051ceb:	mov    ebp,DWORD PTR [edi+0x78]
10051cee:	push   esi
10051cef:	mov    esi,DWORD PTR [edi+0x90]
10051cf5:	mov    DWORD PTR [esp+0x10],ecx
10051cf9:	mov    ecx,DWORD PTR [edi+0x38]
10051cfc:	mov    DWORD PTR [esp+0x14],esi
10051d00:	mov    esi,DWORD PTR [edi+0x2c]
10051d03:	lea    ebx,[esi-0x106]
10051d09:	add    ecx,edx
10051d0b:	cmp    edx,ebx
10051d0d:	jbe    0x10051d1d
10051d0f:	sub    edx,esi
10051d11:	add    edx,0x106
10051d17:	mov    DWORD PTR [esp+0x18],edx
10051d1b:	jmp    0x10051d25
10051d1d:	mov    DWORD PTR [esp+0x18],0x0
10051d25:	cmp    ebp,DWORD PTR [edi+0x8c]
10051d2b:	movzx  edx,BYTE PTR [ecx+ebp*1-0x1]
10051d30:	mov    BYTE PTR [esp+0xe],dl
10051d34:	movzx  edx,BYTE PTR [ecx+ebp*1]
10051d38:	lea    esi,[ecx+0x102]
10051d3e:	mov    BYTE PTR [esp+0xf],dl
10051d42:	jb     0x10051d49
10051d44:	shr    DWORD PTR [esp+0x10],0x2
10051d49:	mov    edx,DWORD PTR [edi+0x74]
10051d4c:	cmp    DWORD PTR [esp+0x14],edx
10051d50:	jbe    0x10051d56
10051d52:	mov    DWORD PTR [esp+0x14],edx
10051d56:	mov    edx,DWORD PTR [edi+0x38]
10051d59:	mov    bl,BYTE PTR [esp+0xf]
10051d5d:	add    edx,eax
10051d5f:	cmp    BYTE PTR [edx+ebp*1],bl
10051d62:	jne    0x10051e2f
10051d68:	mov    bl,BYTE PTR [esp+0xe]
10051d6c:	cmp    BYTE PTR [edx+ebp*1-0x1],bl
10051d70:	jne    0x10051e2f
10051d76:	mov    bl,BYTE PTR [edx]
10051d78:	cmp    bl,BYTE PTR [ecx]
10051d7a:	jne    0x10051e2f
10051d80:	mov    bl,BYTE PTR [edx+0x1]
10051d83:	add    edx,0x1
10051d86:	cmp    bl,BYTE PTR [ecx+0x1]
10051d89:	jne    0x10051e2f
10051d8f:	add    ecx,0x2
10051d92:	add    edx,0x1
10051d95:	mov    bl,BYTE PTR [ecx+0x1]
10051d98:	add    ecx,0x1
10051d9b:	add    edx,0x1
10051d9e:	cmp    bl,BYTE PTR [edx]
10051da0:	jne    0x10051e01
10051da2:	mov    bl,BYTE PTR [ecx+0x1]
10051da5:	add    ecx,0x1
10051da8:	add    edx,0x1
10051dab:	cmp    bl,BYTE PTR [edx]
10051dad:	jne    0x10051e01
10051daf:	mov    bl,BYTE PTR [ecx+0x1]
10051db2:	add    ecx,0x1
10051db5:	add    edx,0x1
10051db8:	cmp    bl,BYTE PTR [edx]
10051dba:	jne    0x10051e01
10051dbc:	mov    bl,BYTE PTR [ecx+0x1]
10051dbf:	add    ecx,0x1
10051dc2:	add    edx,0x1
10051dc5:	cmp    bl,BYTE PTR [edx]
10051dc7:	jne    0x10051e01
10051dc9:	mov    bl,BYTE PTR [ecx+0x1]
10051dcc:	add    ecx,0x1
10051dcf:	add    edx,0x1
10051dd2:	cmp    bl,BYTE PTR [edx]
10051dd4:	jne    0x10051e01
10051dd6:	mov    bl,BYTE PTR [ecx+0x1]
10051dd9:	add    ecx,0x1
10051ddc:	add    edx,0x1
10051ddf:	cmp    bl,BYTE PTR [edx]
10051de1:	jne    0x10051e01
10051de3:	mov    bl,BYTE PTR [ecx+0x1]
10051de6:	add    ecx,0x1
10051de9:	add    edx,0x1
10051dec:	cmp    bl,BYTE PTR [edx]
10051dee:	jne    0x10051e01
10051df0:	mov    bl,BYTE PTR [ecx+0x1]
10051df3:	add    ecx,0x1
10051df6:	add    edx,0x1
10051df9:	cmp    bl,BYTE PTR [edx]
10051dfb:	jne    0x10051e01
10051dfd:	cmp    ecx,esi
10051dff:	jb     0x10051d95
10051e01:	mov    edx,ecx
10051e03:	sub    edx,esi
10051e05:	add    edx,0x102
10051e0b:	cmp    edx,ebp
10051e0d:	lea    ecx,[esi-0x102]
10051e13:	jle    0x10051e2f
10051e15:	cmp    edx,DWORD PTR [esp+0x14]
10051e19:	mov    DWORD PTR [edi+0x70],eax
10051e1c:	mov    ebp,edx
10051e1e:	jge    0x10051e4c
10051e20:	mov    bl,BYTE PTR [edx+ecx*1-0x1]
10051e24:	mov    dl,BYTE PTR [edx+ecx*1]
10051e27:	mov    BYTE PTR [esp+0xe],bl
10051e2b:	mov    BYTE PTR [esp+0xf],dl
10051e2f:	mov    edx,DWORD PTR [edi+0x34]
10051e32:	and    edx,eax
10051e34:	mov    eax,DWORD PTR [edi+0x40]
10051e37:	movzx  eax,WORD PTR [eax+edx*2]
10051e3b:	cmp    eax,DWORD PTR [esp+0x18]
10051e3f:	jbe    0x10051e4c
10051e41:	sub    DWORD PTR [esp+0x10],0x1
10051e46:	jne    0x10051d56
10051e4c:	mov    eax,DWORD PTR [edi+0x74]
10051e4f:	cmp    ebp,eax
10051e51:	ja     0x10051e55
10051e53:	mov    eax,ebp
10051e55:	pop    esi
10051e56:	pop    ebp
10051e57:	pop    ebx
10051e58:	add    esp,0x14
10051e5b:	ret    
10051e5c:	int3   
10051e5d:	int3   
10051e5e:	int3   
10051e5f:	int3   
10051e60:	mov    ecx,DWORD PTR [esi+0x38]
10051e63:	mov    eax,DWORD PTR [esi+0x6c]
10051e66:	push   ebp
10051e67:	mov    ebp,DWORD PTR [esp+0x8]
10051e6b:	mov    dl,BYTE PTR [ecx+ebp*1]
10051e6e:	add    eax,ecx
10051e70:	add    ecx,ebp
10051e72:	cmp    dl,BYTE PTR [eax]
10051e74:	push   edi
10051e75:	lea    edi,[eax+0x102]
10051e7b:	jne    0x10051f1a
10051e81:	mov    dl,BYTE PTR [ecx+0x1]
10051e84:	cmp    dl,BYTE PTR [eax+0x1]
10051e87:	jne    0x10051f1a
10051e8d:	add    eax,0x2
10051e90:	add    ecx,0x2
10051e93:	mov    dl,BYTE PTR [eax+0x1]
10051e96:	add    eax,0x1
10051e99:	add    ecx,0x1
10051e9c:	cmp    dl,BYTE PTR [ecx]
10051e9e:	jne    0x10051eff
10051ea0:	mov    dl,BYTE PTR [eax+0x1]
10051ea3:	add    eax,0x1
10051ea6:	add    ecx,0x1
10051ea9:	cmp    dl,BYTE PTR [ecx]
10051eab:	jne    0x10051eff
10051ead:	mov    dl,BYTE PTR [eax+0x1]
10051eb0:	add    eax,0x1
10051eb3:	add    ecx,0x1
10051eb6:	cmp    dl,BYTE PTR [ecx]
10051eb8:	jne    0x10051eff
10051eba:	mov    dl,BYTE PTR [eax+0x1]
10051ebd:	add    eax,0x1
10051ec0:	add    ecx,0x1
10051ec3:	cmp    dl,BYTE PTR [ecx]
10051ec5:	jne    0x10051eff
10051ec7:	mov    dl,BYTE PTR [eax+0x1]
10051eca:	add    eax,0x1
10051ecd:	add    ecx,0x1
10051ed0:	cmp    dl,BYTE PTR [ecx]
10051ed2:	jne    0x10051eff
10051ed4:	mov    dl,BYTE PTR [eax+0x1]
10051ed7:	add    eax,0x1
10051eda:	add    ecx,0x1
10051edd:	cmp    dl,BYTE PTR [ecx]
10051edf:	jne    0x10051eff
10051ee1:	mov    dl,BYTE PTR [eax+0x1]
10051ee4:	add    eax,0x1
10051ee7:	add    ecx,0x1
10051eea:	cmp    dl,BYTE PTR [ecx]
10051eec:	jne    0x10051eff
10051eee:	mov    dl,BYTE PTR [eax+0x1]
10051ef1:	add    eax,0x1
10051ef4:	add    ecx,0x1
10051ef7:	cmp    dl,BYTE PTR [ecx]
10051ef9:	jne    0x10051eff
10051efb:	cmp    eax,edi
10051efd:	jb     0x10051e93
10051eff:	sub    eax,edi
10051f01:	add    eax,0x102
10051f06:	cmp    eax,0x3
10051f09:	jl     0x10051f1a
10051f0b:	mov    ecx,DWORD PTR [esi+0x74]
10051f0e:	cmp    eax,ecx
10051f10:	mov    DWORD PTR [esi+0x70],ebp
10051f13:	jbe    0x10051f1f
10051f15:	pop    edi
10051f16:	mov    eax,ecx
10051f18:	pop    ebp
10051f19:	ret    
10051f1a:	mov    eax,0x2
10051f1f:	pop    edi
10051f20:	pop    ebp
10051f21:	ret    
10051f22:	int3   
10051f23:	int3   
10051f24:	int3   
10051f25:	int3   
10051f26:	int3   
10051f27:	int3   
10051f28:	int3   
10051f29:	int3   
10051f2a:	int3   
10051f2b:	int3   
10051f2c:	int3   
10051f2d:	int3   
10051f2e:	int3   
10051f2f:	int3   
10051f30:	push   ebx
10051f31:	mov    ebx,DWORD PTR [edi+0x2c]
10051f34:	push   ebp
10051f35:	push   esi
10051f36:	mov    ebp,DWORD PTR [edi+0x3c]
10051f39:	sub    ebp,DWORD PTR [edi+0x74]
10051f3c:	mov    eax,DWORD PTR [edi+0x6c]
10051f3f:	mov    ecx,DWORD PTR [edi+0x2c]
10051f42:	lea    edx,[ebx+ecx*1-0x106]
10051f49:	sub    ebp,eax
10051f4b:	cmp    eax,edx
10051f4d:	jb     0x10051fae
10051f4f:	mov    eax,DWORD PTR [edi+0x38]
10051f52:	push   ebx
10051f53:	lea    ecx,[eax+ebx*1]
10051f56:	push   ecx
10051f57:	push   eax
10051f58:	call   0x10045420
10051f5d:	mov    edx,DWORD PTR [edi+0x4c]
10051f60:	mov    eax,DWORD PTR [edi+0x44]
10051f63:	sub    DWORD PTR [edi+0x70],ebx
10051f66:	sub    DWORD PTR [edi+0x6c],ebx
10051f69:	add    esp,0xc
10051f6c:	sub    DWORD PTR [edi+0x5c],ebx
10051f6f:	lea    ecx,[eax+edx*2]
10051f72:	movzx  eax,WORD PTR [ecx-0x2]
10051f76:	sub    ecx,0x2
10051f79:	cmp    eax,ebx
10051f7b:	jb     0x10051f81
10051f7d:	sub    eax,ebx
10051f7f:	jmp    0x10051f83
10051f81:	xor    eax,eax
10051f83:	sub    edx,0x1
10051f86:	mov    WORD PTR [ecx],ax
10051f89:	jne    0x10051f72
10051f8b:	mov    ecx,DWORD PTR [edi+0x40]
10051f8e:	mov    edx,ebx
10051f90:	lea    ecx,[ecx+ebx*2]
10051f93:	movzx  eax,WORD PTR [ecx-0x2]
10051f97:	sub    ecx,0x2
10051f9a:	cmp    eax,ebx
10051f9c:	jb     0x10051fa2
10051f9e:	sub    eax,ebx
10051fa0:	jmp    0x10051fa4
10051fa2:	xor    eax,eax
10051fa4:	sub    edx,0x1
10051fa7:	mov    WORD PTR [ecx],ax
10051faa:	jne    0x10051f93
10051fac:	add    ebp,ebx
10051fae:	mov    esi,DWORD PTR [edi]
10051fb0:	cmp    DWORD PTR [esi+0x4],0x0
10051fb4:	je     0x10052009
10051fb6:	mov    edx,DWORD PTR [edi+0x74]
10051fb9:	add    edx,DWORD PTR [edi+0x6c]
10051fbc:	mov    ecx,ebp
10051fbe:	add    edx,DWORD PTR [edi+0x38]
10051fc1:	push   edx
10051fc2:	call   0x10051be0
10051fc7:	add    DWORD PTR [edi+0x74],eax
10051fca:	mov    edx,DWORD PTR [edi+0x74]
10051fcd:	add    esp,0x4
10051fd0:	cmp    edx,0x3
10051fd3:	jb     0x10051ff5
10051fd5:	mov    eax,DWORD PTR [edi+0x6c]
10051fd8:	mov    ecx,DWORD PTR [edi+0x38]
10051fdb:	lea    esi,[eax+ecx*1]
10051fde:	movzx  eax,BYTE PTR [esi]
10051fe1:	mov    ecx,DWORD PTR [edi+0x58]
10051fe4:	mov    DWORD PTR [edi+0x48],eax
10051fe7:	shl    eax,cl
10051fe9:	movzx  ecx,BYTE PTR [esi+0x1]
10051fed:	xor    eax,ecx
10051fef:	and    eax,DWORD PTR [edi+0x54]
10051ff2:	mov    DWORD PTR [edi+0x48],eax
10051ff5:	cmp    edx,0x106
10051ffb:	jae    0x10052009
10051ffd:	mov    edx,DWORD PTR [edi]
10051fff:	cmp    DWORD PTR [edx+0x4],0x0
10052003:	jne    0x10051f36
10052009:	pop    esi
1005200a:	pop    ebp
1005200b:	pop    ebx
1005200c:	ret    
1005200d:	int3   
1005200e:	int3   
1005200f:	int3   
10052010:	push   esi
10052011:	push   edi
10052012:	mov    edi,DWORD PTR [esp+0xc]
10052016:	mov    eax,DWORD PTR [edi+0xc]
10052019:	mov    esi,0xffff
1005201e:	add    eax,0xfffffffb
10052021:	cmp    eax,esi
10052023:	jae    0x10052027
10052025:	mov    esi,eax
10052027:	mov    eax,DWORD PTR [edi+0x74]
1005202a:	cmp    eax,0x1
1005202d:	ja     0x1005203f
1005202f:	call   0x10051f30
10052034:	mov    eax,DWORD PTR [edi+0x74]
10052037:	test   eax,eax
10052039:	je     0x100520dd
1005203f:	add    DWORD PTR [edi+0x6c],eax
10052042:	mov    ecx,DWORD PTR [edi+0x5c]
10052045:	mov    edx,DWORD PTR [edi+0x6c]
10052048:	mov    DWORD PTR [edi+0x74],0x0
1005204f:	lea    eax,[ecx+esi*1]
10052052:	je     0x10052058
10052054:	cmp    edx,eax
10052056:	jb     0x10052091
10052058:	sub    edx,eax
1005205a:	test   ecx,ecx
1005205c:	mov    DWORD PTR [edi+0x74],edx
1005205f:	mov    DWORD PTR [edi+0x6c],eax
10052062:	jl     0x1005206b
10052064:	mov    edx,DWORD PTR [edi+0x38]
10052067:	add    edx,ecx
10052069:	jmp    0x1005206d
1005206b:	xor    edx,edx
1005206d:	push   0x0
1005206f:	sub    eax,ecx
10052071:	push   eax
10052072:	push   edx
10052073:	push   edi
10052074:	call   0x10055ec0
10052079:	mov    eax,DWORD PTR [edi+0x6c]
1005207c:	mov    DWORD PTR [edi+0x5c],eax
1005207f:	mov    eax,DWORD PTR [edi]
10052081:	add    esp,0x10
10052084:	call   0x100512d0
10052089:	mov    ecx,DWORD PTR [edi]
1005208b:	cmp    DWORD PTR [ecx+0x10],0x0
1005208f:	je     0x100520d8
10052091:	mov    ecx,DWORD PTR [edi+0x5c]
10052094:	mov    edx,DWORD PTR [edi+0x6c]
10052097:	mov    eax,DWORD PTR [edi+0x2c]
1005209a:	sub    edx,ecx
1005209c:	sub    eax,0x106
100520a1:	cmp    edx,eax
100520a3:	jb     0x10052027
100520a5:	test   ecx,ecx
100520a7:	jl     0x100520b0
100520a9:	mov    eax,DWORD PTR [edi+0x38]
100520ac:	add    eax,ecx
100520ae:	jmp    0x100520b2
100520b0:	xor    eax,eax
100520b2:	push   0x0
100520b4:	push   edx
100520b5:	push   eax
100520b6:	push   edi
100520b7:	call   0x10055ec0
100520bc:	mov    ecx,DWORD PTR [edi+0x6c]
100520bf:	mov    eax,DWORD PTR [edi]
100520c1:	add    esp,0x10
100520c4:	mov    DWORD PTR [edi+0x5c],ecx
100520c7:	call   0x100512d0
100520cc:	mov    edx,DWORD PTR [edi]
100520ce:	cmp    DWORD PTR [edx+0x10],0x0
100520d2:	jne    0x10052027
100520d8:	pop    edi
100520d9:	xor    eax,eax
100520db:	pop    esi
100520dc:	ret    
100520dd:	mov    esi,DWORD PTR [esp+0x10]
100520e1:	test   esi,esi
100520e3:	je     0x100520d8
100520e5:	mov    ecx,DWORD PTR [edi+0x5c]
100520e8:	test   ecx,ecx
100520ea:	jl     0x100520f3
100520ec:	mov    eax,DWORD PTR [edi+0x38]
100520ef:	add    eax,ecx
100520f1:	jmp    0x100520f5
100520f3:	xor    eax,eax
100520f5:	xor    edx,edx
100520f7:	cmp    esi,0x4
100520fa:	sete   dl
100520fd:	push   edx
100520fe:	mov    edx,DWORD PTR [edi+0x6c]
10052101:	sub    edx,ecx
10052103:	push   edx
10052104:	push   eax
10052105:	push   edi
10052106:	call   0x10055ec0
1005210b:	mov    eax,DWORD PTR [edi+0x6c]
1005210e:	mov    DWORD PTR [edi+0x5c],eax
10052111:	mov    eax,DWORD PTR [edi]
10052113:	add    esp,0x10
10052116:	call   0x100512d0
1005211b:	mov    ecx,DWORD PTR [edi]
1005211d:	xor    eax,eax
1005211f:	cmp    DWORD PTR [ecx+0x10],eax
10052122:	jne    0x10052133
10052124:	cmp    esi,0x4
10052127:	setne  al
1005212a:	pop    edi
1005212b:	pop    esi
1005212c:	sub    eax,0x1
1005212f:	and    eax,0x2
10052132:	ret    
10052133:	cmp    esi,0x4
10052136:	sete   al
10052139:	pop    edi
1005213a:	pop    esi
1005213b:	lea    eax,[eax+eax*1+0x1]
1005213f:	ret    
10052140:	push   ebx
10052141:	push   ebp
10052142:	push   esi
10052143:	push   edi
10052144:	mov    edi,DWORD PTR [esp+0x14]
10052148:	xor    ebp,ebp
1005214a:	mov    ebx,0x1
1005214f:	nop
10052150:	mov    eax,DWORD PTR [edi+0x74]
10052153:	cmp    eax,0x106
10052158:	jae    0x1005217d
1005215a:	call   0x10051f30
1005215f:	mov    eax,DWORD PTR [edi+0x74]
10052162:	cmp    eax,0x106
10052167:	mov    esi,DWORD PTR [esp+0x18]
1005216b:	jae    0x10052175
1005216d:	test   esi,esi
1005216f:	je     0x100523f4
10052175:	test   eax,eax
10052177:	je     0x100523fb
1005217d:	cmp    eax,0x3
10052180:	jb     0x100521cb
10052182:	mov    eax,DWORD PTR [edi+0x48]
10052185:	mov    ecx,DWORD PTR [edi+0x58]
10052188:	mov    edx,DWORD PTR [edi+0x6c]
1005218b:	mov    esi,DWORD PTR [edi+0x34]
1005218e:	shl    eax,cl
10052190:	mov    ecx,DWORD PTR [edi+0x38]
10052193:	movzx  ecx,BYTE PTR [ecx+edx*1+0x2]
10052198:	xor    eax,ecx
1005219a:	and    eax,DWORD PTR [edi+0x54]
1005219d:	mov    ecx,DWORD PTR [edi+0x44]
100521a0:	mov    DWORD PTR [edi+0x48],eax
100521a3:	mov    ax,WORD PTR [ecx+eax*2]
100521a7:	and    esi,edx
100521a9:	mov    edx,DWORD PTR [edi+0x40]
100521ac:	mov    WORD PTR [edx+esi*2],ax
100521b0:	mov    ecx,DWORD PTR [edi+0x6c]
100521b3:	and    ecx,DWORD PTR [edi+0x34]
100521b6:	mov    edx,DWORD PTR [edi+0x40]
100521b9:	movzx  ebp,WORD PTR [edx+ecx*2]
100521bd:	mov    eax,DWORD PTR [edi+0x48]
100521c0:	mov    ecx,DWORD PTR [edi+0x44]
100521c3:	mov    dx,WORD PTR [edi+0x6c]
100521c7:	mov    WORD PTR [ecx+eax*2],dx
100521cb:	test   ebp,ebp
100521cd:	je     0x10052211
100521cf:	mov    eax,DWORD PTR [edi+0x6c]
100521d2:	mov    ecx,DWORD PTR [edi+0x2c]
100521d5:	sub    eax,ebp
100521d7:	sub    ecx,0x106
100521dd:	cmp    eax,ecx
100521df:	ja     0x10052211
100521e1:	mov    ecx,DWORD PTR [edi+0x88]
100521e7:	cmp    ecx,0x2
100521ea:	je     0x100521fa
100521ec:	cmp    ecx,0x3
100521ef:	je     0x100521ff
100521f1:	mov    eax,ebp
100521f3:	call   0x10051ce0
100521f8:	jmp    0x1005220e
100521fa:	cmp    ecx,0x3
100521fd:	jne    0x10052211
100521ff:	cmp    eax,ebx
10052201:	jne    0x10052211
10052203:	push   ebp
10052204:	mov    esi,edi
10052206:	call   0x10051e60
1005220b:	add    esp,0x4
1005220e:	mov    DWORD PTR [edi+0x60],eax
10052211:	cmp    DWORD PTR [edi+0x60],0x3
10052215:	jb     0x10052353
1005221b:	mov    dx,WORD PTR [edi+0x6c]
1005221f:	sub    dx,WORD PTR [edi+0x70]
10052223:	mov    al,BYTE PTR [edi+0x60]
10052226:	mov    esi,DWORD PTR [edi+0x16a4]
1005222c:	movzx  ecx,dx
1005222f:	mov    edx,DWORD PTR [edi+0x16a0]
10052235:	mov    WORD PTR [esi+edx*2],cx
10052239:	mov    edx,DWORD PTR [edi+0x1698]
1005223f:	mov    esi,DWORD PTR [edi+0x16a0]
10052245:	sub    al,0x3
10052247:	mov    BYTE PTR [edx+esi*1],al
1005224a:	add    DWORD PTR [edi+0x16a0],ebx
10052250:	movzx  eax,al
10052253:	movzx  edx,BYTE PTR [eax+0x10069290]
1005225a:	add    WORD PTR [edi+edx*4+0x498],bx
10052262:	lea    eax,[edi+edx*4+0x498]
10052269:	add    ecx,0xffff
1005226f:	cmp    cx,0x100
10052274:	jae    0x10052282
10052276:	movzx  eax,cx
10052279:	movzx  eax,BYTE PTR [eax+0x10069090]
10052280:	jmp    0x1005228f
10052282:	movzx  ecx,cx
10052285:	shr    ecx,0x7
10052288:	movzx  eax,BYTE PTR [ecx+0x10069190]
1005228f:	add    WORD PTR [edi+eax*4+0x988],bx
10052297:	mov    edx,DWORD PTR [edi+0x169c]
1005229d:	xor    eax,eax
1005229f:	sub    edx,ebx
100522a1:	cmp    DWORD PTR [edi+0x16a0],edx
100522a7:	sete   al
100522aa:	mov    esi,eax
100522ac:	mov    eax,DWORD PTR [edi+0x60]
100522af:	sub    DWORD PTR [edi+0x74],eax
100522b2:	cmp    eax,DWORD PTR [edi+0x80]
100522b8:	mov    ecx,DWORD PTR [edi+0x74]
100522bb:	ja     0x10052327
100522bd:	cmp    ecx,0x3
100522c0:	jb     0x10052327
100522c2:	add    eax,0xffffffff
100522c5:	mov    DWORD PTR [edi+0x60],eax
100522c8:	jmp    0x100522d0
100522ca:	lea    ebx,[ebx+0x0]
100522d0:	add    DWORD PTR [edi+0x6c],ebx
100522d3:	mov    edx,DWORD PTR [edi+0x6c]
100522d6:	mov    ecx,DWORD PTR [edi+0x38]
100522d9:	movzx  eax,BYTE PTR [edx+ecx*1+0x2]
100522de:	mov    ebp,DWORD PTR [edi+0x48]
100522e1:	mov    ecx,DWORD PTR [edi+0x58]
100522e4:	shl    ebp,cl
100522e6:	mov    ecx,DWORD PTR [edi+0x44]
100522e9:	xor    eax,ebp
100522eb:	and    eax,DWORD PTR [edi+0x54]
100522ee:	mov    ebp,DWORD PTR [edi+0x34]
100522f1:	and    ebp,edx
100522f3:	mov    edx,DWORD PTR [edi+0x40]
100522f6:	mov    DWORD PTR [edi+0x48],eax
100522f9:	mov    ax,WORD PTR [ecx+eax*2]
100522fd:	mov    WORD PTR [edx+ebp*2],ax
10052301:	mov    ecx,DWORD PTR [edi+0x6c]
10052304:	and    ecx,DWORD PTR [edi+0x34]
10052307:	mov    edx,DWORD PTR [edi+0x40]
1005230a:	movzx  ebp,WORD PTR [edx+ecx*2]
1005230e:	mov    eax,DWORD PTR [edi+0x48]
10052311:	mov    ecx,DWORD PTR [edi+0x44]
10052314:	mov    dx,WORD PTR [edi+0x6c]
10052318:	mov    WORD PTR [ecx+eax*2],dx
1005231c:	add    DWORD PTR [edi+0x60],0xffffffff
10052320:	jne    0x100522d0
10052322:	jmp    0x100523ae
10052327:	add    DWORD PTR [edi+0x6c],eax
1005232a:	mov    eax,DWORD PTR [edi+0x6c]
1005232d:	mov    ecx,DWORD PTR [edi+0x38]
10052330:	lea    edx,[eax+ecx*1]
10052333:	mov    ecx,DWORD PTR [edi+0x58]
10052336:	mov    DWORD PTR [edi+0x60],0x0
1005233d:	movzx  eax,BYTE PTR [edx]
10052340:	mov    DWORD PTR [edi+0x48],eax
10052343:	movzx  edx,BYTE PTR [edx+0x1]
10052347:	shl    eax,cl
10052349:	xor    eax,edx
1005234b:	and    eax,DWORD PTR [edi+0x54]
1005234e:	mov    DWORD PTR [edi+0x48],eax
10052351:	jmp    0x100523b1
10052353:	mov    eax,DWORD PTR [edi+0x6c]
10052356:	mov    ecx,DWORD PTR [edi+0x38]
10052359:	mov    al,BYTE PTR [eax+ecx*1]
1005235c:	mov    edx,DWORD PTR [edi+0x16a0]
10052362:	mov    ecx,DWORD PTR [edi+0x16a4]
10052368:	mov    WORD PTR [ecx+edx*2],0x0
1005236e:	mov    ecx,DWORD PTR [edi+0x16a0]
10052374:	mov    edx,DWORD PTR [edi+0x1698]
1005237a:	mov    BYTE PTR [edx+ecx*1],al
1005237d:	add    DWORD PTR [edi+0x16a0],ebx
10052383:	movzx  edx,al
10052386:	add    WORD PTR [edi+edx*4+0x94],bx
1005238e:	lea    eax,[edi+edx*4+0x94]
10052395:	mov    eax,DWORD PTR [edi+0x169c]
1005239b:	xor    ecx,ecx
1005239d:	sub    eax,ebx
1005239f:	cmp    DWORD PTR [edi+0x16a0],eax
100523a5:	sete   cl
100523a8:	add    DWORD PTR [edi+0x74],0xffffffff
100523ac:	mov    esi,ecx
100523ae:	add    DWORD PTR [edi+0x6c],ebx
100523b1:	test   esi,esi
100523b3:	je     0x10052150
100523b9:	mov    ecx,DWORD PTR [edi+0x5c]
100523bc:	test   ecx,ecx
100523be:	jl     0x100523c7
100523c0:	mov    eax,DWORD PTR [edi+0x38]
100523c3:	add    eax,ecx
100523c5:	jmp    0x100523c9
100523c7:	xor    eax,eax
100523c9:	mov    edx,DWORD PTR [edi+0x6c]
100523cc:	push   0x0
100523ce:	sub    edx,ecx
100523d0:	push   edx
100523d1:	push   eax
100523d2:	push   edi
100523d3:	call   0x10055ec0
100523d8:	mov    eax,DWORD PTR [edi+0x6c]
100523db:	mov    DWORD PTR [edi+0x5c],eax
100523de:	mov    eax,DWORD PTR [edi]
100523e0:	add    esp,0x10
100523e3:	call   0x100512d0
100523e8:	mov    ecx,DWORD PTR [edi]
100523ea:	cmp    DWORD PTR [ecx+0x10],0x0
100523ee:	jne    0x10052150
100523f4:	pop    edi
100523f5:	pop    esi
100523f6:	pop    ebp
100523f7:	xor    eax,eax
100523f9:	pop    ebx
100523fa:	ret    
100523fb:	mov    ecx,DWORD PTR [edi+0x5c]
100523fe:	test   ecx,ecx
10052400:	jl     0x10052409
10052402:	mov    eax,DWORD PTR [edi+0x38]
10052405:	add    eax,ecx
10052407:	jmp    0x1005240b
10052409:	xor    eax,eax
1005240b:	xor    edx,edx
1005240d:	cmp    esi,0x4
10052410:	sete   dl
10052413:	push   edx
10052414:	mov    edx,DWORD PTR [edi+0x6c]
10052417:	sub    edx,ecx
10052419:	push   edx
1005241a:	push   eax
1005241b:	push   edi
1005241c:	call   0x10055ec0
10052421:	mov    eax,DWORD PTR [edi+0x6c]
10052424:	mov    DWORD PTR [edi+0x5c],eax
10052427:	mov    eax,DWORD PTR [edi]
10052429:	add    esp,0x10
1005242c:	call   0x100512d0
10052431:	mov    ecx,DWORD PTR [edi]
10052433:	xor    eax,eax
10052435:	cmp    DWORD PTR [ecx+0x10],eax
10052438:	jne    0x1005244b
1005243a:	cmp    esi,0x4
1005243d:	setne  al
10052440:	pop    edi
10052441:	pop    esi
10052442:	pop    ebp
10052443:	pop    ebx
10052444:	sub    eax,0x1
10052447:	and    eax,0x2
1005244a:	ret    
1005244b:	cmp    esi,0x4
1005244e:	sete   al
10052451:	pop    edi
10052452:	pop    esi
10052453:	pop    ebp
10052454:	pop    ebx
10052455:	lea    eax,[eax+eax*1+0x1]
10052459:	ret    
1005245a:	int3   
1005245b:	int3   
1005245c:	int3   
1005245d:	int3   
1005245e:	int3   
1005245f:	int3   
10052460:	push   ecx
10052461:	push   ebx
10052462:	push   ebp
10052463:	push   esi
10052464:	push   edi
10052465:	mov    edi,DWORD PTR [esp+0x18]
10052469:	mov    DWORD PTR [esp+0x10],0x0
10052471:	mov    ebp,0x1
10052476:	mov    eax,DWORD PTR [edi+0x74]
10052479:	cmp    eax,0x106
1005247e:	jae    0x100524a3
10052480:	call   0x10051f30
10052485:	mov    eax,DWORD PTR [edi+0x74]
10052488:	cmp    eax,0x106
1005248d:	mov    esi,DWORD PTR [esp+0x1c]
10052491:	jae    0x1005249b
10052493:	test   esi,esi
10052495:	je     0x100526f6
1005249b:	test   eax,eax
1005249d:	je     0x100527ab
100524a3:	cmp    eax,0x3
100524a6:	jb     0x100524f5
100524a8:	mov    eax,DWORD PTR [edi+0x48]
100524ab:	mov    ecx,DWORD PTR [edi+0x58]
100524ae:	mov    edx,DWORD PTR [edi+0x6c]
100524b1:	mov    esi,DWORD PTR [edi+0x34]
100524b4:	shl    eax,cl
100524b6:	mov    ecx,DWORD PTR [edi+0x38]
100524b9:	movzx  ecx,BYTE PTR [ecx+edx*1+0x2]
100524be:	xor    eax,ecx
100524c0:	and    eax,DWORD PTR [edi+0x54]
100524c3:	mov    ecx,DWORD PTR [edi+0x44]
100524c6:	mov    DWORD PTR [edi+0x48],eax
100524c9:	movzx  eax,WORD PTR [ecx+eax*2]
100524cd:	and    esi,edx
100524cf:	mov    edx,DWORD PTR [edi+0x40]
100524d2:	mov    WORD PTR [edx+esi*2],ax
100524d6:	mov    ecx,DWORD PTR [edi+0x6c]
100524d9:	and    ecx,DWORD PTR [edi+0x34]
100524dc:	mov    edx,DWORD PTR [edi+0x40]
100524df:	movzx  eax,WORD PTR [edx+ecx*2]
100524e3:	mov    ecx,DWORD PTR [edi+0x48]
100524e6:	mov    edx,DWORD PTR [edi+0x44]
100524e9:	mov    DWORD PTR [esp+0x10],eax
100524ed:	movzx  eax,WORD PTR [edi+0x6c]
100524f1:	mov    WORD PTR [edx+ecx*2],ax
100524f5:	mov    edx,DWORD PTR [edi+0x70]
100524f8:	mov    ecx,DWORD PTR [edi+0x60]
100524fb:	mov    DWORD PTR [edi+0x64],edx
100524fe:	mov    edx,DWORD PTR [esp+0x10]
10052502:	test   edx,edx
10052504:	mov    ebx,0x2
10052509:	mov    DWORD PTR [edi+0x78],ecx
1005250c:	mov    DWORD PTR [edi+0x60],ebx
1005250f:	je     0x10052582
10052511:	mov    eax,ecx
10052513:	cmp    eax,DWORD PTR [edi+0x80]
10052519:	jae    0x10052582
1005251b:	mov    eax,DWORD PTR [edi+0x6c]
1005251e:	mov    ecx,DWORD PTR [edi+0x2c]
10052521:	sub    eax,edx
10052523:	sub    ecx,0x106
10052529:	cmp    eax,ecx
1005252b:	ja     0x10052582
1005252d:	mov    ecx,DWORD PTR [edi+0x88]
10052533:	cmp    ecx,ebx
10052535:	je     0x10052545
10052537:	cmp    ecx,0x3
1005253a:	je     0x1005254a
1005253c:	mov    eax,edx
1005253e:	call   0x10051ce0
10052543:	jmp    0x10052559
10052545:	cmp    ecx,0x3
10052548:	jne    0x1005255c
1005254a:	cmp    eax,ebp
1005254c:	jne    0x1005255c
1005254e:	push   edx
1005254f:	mov    esi,edi
10052551:	call   0x10051e60
10052556:	add    esp,0x4
10052559:	mov    DWORD PTR [edi+0x60],eax
1005255c:	mov    eax,DWORD PTR [edi+0x60]
1005255f:	cmp    eax,0x5
10052562:	ja     0x10052582
10052564:	cmp    DWORD PTR [edi+0x88],ebp
1005256a:	je     0x1005257f
1005256c:	cmp    eax,0x3
1005256f:	jne    0x10052582
10052571:	mov    edx,DWORD PTR [edi+0x6c]
10052574:	sub    edx,DWORD PTR [edi+0x70]
10052577:	cmp    edx,0x1000
1005257d:	jbe    0x10052582
1005257f:	mov    DWORD PTR [edi+0x60],ebx
10052582:	mov    eax,DWORD PTR [edi+0x78]
10052585:	cmp    eax,0x3
10052588:	jb     0x100526fe
1005258e:	cmp    DWORD PTR [edi+0x60],eax
10052591:	ja     0x100526fe
10052597:	mov    dx,WORD PTR [edi+0x6c]
1005259b:	sub    dx,WORD PTR [edi+0x64]
1005259f:	mov    eax,DWORD PTR [edi+0x6c]
100525a2:	mov    ecx,DWORD PTR [edi+0x74]
100525a5:	mov    ebx,DWORD PTR [edi+0x16a4]
100525ab:	lea    esi,[eax+ecx*1-0x3]
100525af:	mov    al,BYTE PTR [edi+0x78]
100525b2:	sub    dx,bp
100525b5:	movzx  ecx,dx
100525b8:	mov    edx,DWORD PTR [edi+0x16a0]
100525be:	mov    WORD PTR [ebx+edx*2],cx
100525c2:	mov    edx,DWORD PTR [edi+0x1698]
100525c8:	mov    ebx,DWORD PTR [edi+0x16a0]
100525ce:	sub    al,0x3
100525d0:	mov    BYTE PTR [edx+ebx*1],al
100525d3:	add    DWORD PTR [edi+0x16a0],ebp
100525d9:	movzx  eax,al
100525dc:	movzx  edx,BYTE PTR [eax+0x10069290]
100525e3:	add    WORD PTR [edi+edx*4+0x498],bp
100525eb:	lea    eax,[edi+edx*4+0x498]
100525f2:	add    ecx,0xffff
100525f8:	cmp    cx,0x100
100525fd:	jae    0x1005260b
100525ff:	movzx  eax,cx
10052602:	movzx  eax,BYTE PTR [eax+0x10069090]
10052609:	jmp    0x10052618
1005260b:	movzx  ecx,cx
1005260e:	shr    ecx,0x7
10052611:	movzx  eax,BYTE PTR [ecx+0x10069190]
10052618:	add    WORD PTR [edi+eax*4+0x988],bp
10052620:	mov    edx,DWORD PTR [edi+0x169c]
10052626:	mov    eax,DWORD PTR [edi+0x78]
10052629:	sub    edx,ebp
1005262b:	xor    ebx,ebx
1005262d:	cmp    DWORD PTR [edi+0x16a0],edx
10052633:	mov    ecx,ebp
10052635:	sete   bl
10052638:	sub    ecx,eax
1005263a:	add    DWORD PTR [edi+0x74],ecx
1005263d:	add    eax,0xfffffffe
10052640:	mov    DWORD PTR [edi+0x78],eax
10052643:	add    DWORD PTR [edi+0x6c],ebp
10052646:	mov    edx,DWORD PTR [edi+0x6c]
10052649:	cmp    edx,esi
1005264b:	ja     0x1005269c
1005264d:	mov    eax,DWORD PTR [edi+0x48]
10052650:	mov    ecx,DWORD PTR [edi+0x58]
10052653:	mov    ebp,DWORD PTR [edi+0x34]
10052656:	shl    eax,cl
10052658:	mov    ecx,DWORD PTR [edi+0x38]
1005265b:	movzx  ecx,BYTE PTR [ecx+edx*1+0x2]
10052660:	xor    eax,ecx
10052662:	and    eax,DWORD PTR [edi+0x54]
10052665:	mov    ecx,DWORD PTR [edi+0x44]
10052668:	mov    DWORD PTR [edi+0x48],eax
1005266b:	movzx  eax,WORD PTR [ecx+eax*2]
1005266f:	and    ebp,edx
10052671:	mov    edx,DWORD PTR [edi+0x40]
10052674:	mov    WORD PTR [edx+ebp*2],ax
10052678:	mov    ecx,DWORD PTR [edi+0x6c]
1005267b:	and    ecx,DWORD PTR [edi+0x34]
1005267e:	mov    edx,DWORD PTR [edi+0x40]
10052681:	movzx  eax,WORD PTR [edx+ecx*2]
10052685:	mov    ecx,DWORD PTR [edi+0x48]
10052688:	mov    edx,DWORD PTR [edi+0x44]
1005268b:	mov    DWORD PTR [esp+0x10],eax
1005268f:	movzx  eax,WORD PTR [edi+0x6c]
10052693:	mov    WORD PTR [edx+ecx*2],ax
10052697:	mov    ebp,0x1
1005269c:	add    DWORD PTR [edi+0x78],0xffffffff
100526a0:	jne    0x10052643
100526a2:	add    DWORD PTR [edi+0x6c],ebp
100526a5:	test   ebx,ebx
100526a7:	mov    eax,DWORD PTR [edi+0x6c]
100526aa:	mov    DWORD PTR [edi+0x68],0x0
100526b1:	mov    DWORD PTR [edi+0x60],0x2
100526b8:	je     0x10052476
100526be:	mov    edx,DWORD PTR [edi+0x5c]
100526c1:	test   edx,edx
100526c3:	jl     0x100526cc
100526c5:	mov    ecx,DWORD PTR [edi+0x38]
100526c8:	add    ecx,edx
100526ca:	jmp    0x100526ce
100526cc:	xor    ecx,ecx
100526ce:	push   0x0
100526d0:	sub    eax,edx
100526d2:	push   eax
100526d3:	push   ecx
100526d4:	push   edi
100526d5:	call   0x10055ec0
100526da:	mov    ecx,DWORD PTR [edi+0x6c]
100526dd:	mov    eax,DWORD PTR [edi]
100526df:	add    esp,0x10
100526e2:	mov    DWORD PTR [edi+0x5c],ecx
100526e5:	call   0x100512d0
100526ea:	mov    edx,DWORD PTR [edi]
100526ec:	cmp    DWORD PTR [edx+0x10],0x0
100526f0:	jne    0x10052476
100526f6:	pop    edi
100526f7:	pop    esi
100526f8:	pop    ebp
100526f9:	xor    eax,eax
100526fb:	pop    ebx
100526fc:	pop    ecx
100526fd:	ret    
100526fe:	cmp    DWORD PTR [edi+0x68],0x0
10052702:	je     0x1005279c
10052708:	mov    eax,DWORD PTR [edi+0x6c]
1005270b:	mov    ecx,DWORD PTR [edi+0x38]
1005270e:	mov    al,BYTE PTR [eax+ecx*1-0x1]
10052712:	mov    edx,DWORD PTR [edi+0x16a0]
10052718:	mov    ecx,DWORD PTR [edi+0x16a4]
1005271e:	mov    WORD PTR [ecx+edx*2],0x0
10052724:	mov    edx,DWORD PTR [edi+0x1698]
1005272a:	mov    ecx,DWORD PTR [edi+0x16a0]
10052730:	mov    BYTE PTR [edx+ecx*1],al
10052733:	add    DWORD PTR [edi+0x16a0],ebp
10052739:	movzx  edx,al
1005273c:	add    WORD PTR [edi+edx*4+0x94],bp
10052744:	lea    eax,[edi+edx*4+0x94]
1005274b:	mov    eax,DWORD PTR [edi+0x169c]
10052751:	sub    eax,ebp
10052753:	cmp    DWORD PTR [edi+0x16a0],eax
10052759:	jne    0x1005278a
1005275b:	mov    ecx,DWORD PTR [edi+0x5c]
1005275e:	test   ecx,ecx
10052760:	jl     0x10052769
10052762:	mov    eax,DWORD PTR [edi+0x38]
10052765:	add    eax,ecx
10052767:	jmp    0x1005276b
10052769:	xor    eax,eax
1005276b:	mov    edx,DWORD PTR [edi+0x6c]
1005276e:	push   0x0
10052770:	sub    edx,ecx
10052772:	push   edx
10052773:	push   eax
10052774:	push   edi
10052775:	call   0x10055ec0
1005277a:	mov    eax,DWORD PTR [edi+0x6c]
1005277d:	mov    DWORD PTR [edi+0x5c],eax
10052780:	mov    eax,DWORD PTR [edi]
10052782:	add    esp,0x10
10052785:	call   0x100512d0
1005278a:	mov    ecx,DWORD PTR [edi]
1005278c:	add    DWORD PTR [edi+0x6c],ebp
1005278f:	add    DWORD PTR [edi+0x74],0xffffffff
10052793:	cmp    DWORD PTR [ecx+0x10],0x0
10052797:	jmp    0x100526f0
1005279c:	add    DWORD PTR [edi+0x6c],ebp
1005279f:	add    DWORD PTR [edi+0x74],0xffffffff
100527a3:	mov    DWORD PTR [edi+0x68],ebp
100527a6:	jmp    0x10052476
100527ab:	cmp    DWORD PTR [edi+0x68],0x0
100527af:	je     0x100527fb
100527b1:	mov    edx,DWORD PTR [edi+0x6c]
100527b4:	mov    eax,DWORD PTR [edi+0x38]
100527b7:	mov    al,BYTE PTR [edx+eax*1-0x1]
100527bb:	mov    ecx,DWORD PTR [edi+0x16a0]
100527c1:	mov    edx,DWORD PTR [edi+0x16a4]
100527c7:	mov    WORD PTR [edx+ecx*2],0x0
100527cd:	mov    edx,DWORD PTR [edi+0x16a0]
100527d3:	mov    ecx,DWORD PTR [edi+0x1698]
100527d9:	mov    BYTE PTR [ecx+edx*1],al
100527dc:	add    DWORD PTR [edi+0x16a0],ebp
100527e2:	movzx  eax,al
100527e5:	add    WORD PTR [edi+eax*4+0x94],bp
100527ed:	lea    eax,[edi+eax*4+0x94]
100527f4:	mov    DWORD PTR [edi+0x68],0x0
100527fb:	mov    ecx,DWORD PTR [edi+0x5c]
100527fe:	test   ecx,ecx
10052800:	jl     0x10052809
10052802:	mov    eax,DWORD PTR [edi+0x38]
10052805:	add    eax,ecx
10052807:	jmp    0x1005280b
10052809:	xor    eax,eax
1005280b:	xor    edx,edx
1005280d:	cmp    esi,0x4
10052810:	sete   dl
10052813:	push   edx
10052814:	mov    edx,DWORD PTR [edi+0x6c]
10052817:	sub    edx,ecx
10052819:	push   edx
1005281a:	push   eax
1005281b:	push   edi
1005281c:	call   0x10055ec0
10052821:	mov    eax,DWORD PTR [edi+0x6c]
10052824:	mov    DWORD PTR [edi+0x5c],eax
10052827:	mov    eax,DWORD PTR [edi]
10052829:	add    esp,0x10
1005282c:	call   0x100512d0
10052831:	mov    ecx,DWORD PTR [edi]
10052833:	xor    eax,eax
10052835:	cmp    DWORD PTR [ecx+0x10],eax
10052838:	jne    0x1005284c
1005283a:	cmp    esi,0x4
1005283d:	setne  al
10052840:	pop    edi
10052841:	pop    esi
10052842:	pop    ebp
10052843:	pop    ebx
10052844:	sub    eax,0x1
10052847:	and    eax,0x2
1005284a:	pop    ecx
1005284b:	ret    
1005284c:	cmp    esi,0x4
1005284f:	sete   al
10052852:	pop    edi
10052853:	pop    esi
10052854:	pop    ebp
10052855:	pop    ebx
10052856:	lea    eax,[eax+eax*1+0x1]
1005285a:	pop    ecx
1005285b:	ret    
1005285c:	int3   
1005285d:	int3   
1005285e:	int3   
1005285f:	int3   
10052860:	push   ebx
10052861:	push   esi
10052862:	push   edi
10052863:	mov    edi,DWORD PTR [esp+0x10]
10052867:	xor    ebx,ebx
10052869:	cmp    edi,ebx
1005286b:	je     0x100528e6
1005286d:	mov    esi,DWORD PTR [edi+0x1c]
10052870:	cmp    esi,ebx
10052872:	je     0x100528e6
10052874:	cmp    DWORD PTR [edi+0x20],ebx
10052877:	je     0x100528e6
10052879:	cmp    DWORD PTR [edi+0x24],ebx
1005287c:	je     0x100528e6
1005287e:	mov    DWORD PTR [edi+0x14],ebx
10052881:	mov    DWORD PTR [edi+0x8],ebx
10052884:	mov    DWORD PTR [edi+0x18],ebx
10052887:	mov    DWORD PTR [edi+0x2c],0x2
1005288e:	mov    eax,DWORD PTR [esi+0x8]
10052891:	mov    DWORD PTR [esi+0x10],eax
10052894:	mov    eax,DWORD PTR [esi+0x18]
10052897:	cmp    eax,ebx
10052899:	mov    DWORD PTR [esi+0x14],ebx
1005289c:	jge    0x100528a3
1005289e:	neg    eax
100528a0:	mov    DWORD PTR [esi+0x18],eax
100528a3:	mov    eax,DWORD PTR [esi+0x18]
100528a6:	mov    ecx,eax
100528a8:	neg    ecx
100528aa:	sbb    ecx,ecx
100528ac:	and    ecx,0xffffffb9
100528af:	push   ebx
100528b0:	add    ecx,0x71
100528b3:	cmp    eax,0x2
100528b6:	push   ebx
100528b7:	mov    DWORD PTR [esi+0x4],ecx
100528ba:	push   ebx
100528bb:	jne    0x100528c4
100528bd:	call   0x10056370
100528c2:	jmp    0x100528c9
100528c4:	call   0x10054390
100528c9:	add    esp,0xc
100528cc:	mov    DWORD PTR [edi+0x30],eax
100528cf:	push   esi
100528d0:	mov    DWORD PTR [esi+0x28],ebx
100528d3:	call   0x10055870
100528d8:	add    esp,0x4
100528db:	call   0x10051c50
100528e0:	pop    edi
100528e1:	pop    esi
100528e2:	xor    eax,eax
100528e4:	pop    ebx
100528e5:	ret    
100528e6:	pop    edi
100528e7:	pop    esi
100528e8:	mov    eax,0xfffffffe
100528ed:	pop    ebx
100528ee:	ret    
100528ef:	int3   
100528f0:	mov    eax,DWORD PTR [esp+0x1c]
100528f4:	xor    ecx,ecx
100528f6:	cmp    eax,ecx
100528f8:	push   ebp
100528f9:	mov    ebp,0x1
100528fe:	je     0x10052b08
10052904:	cmp    BYTE PTR [eax],0x31
10052907:	jne    0x10052b08
1005290d:	cmp    DWORD PTR [esp+0x24],0x38
10052912:	jne    0x10052b08
10052918:	push   edi
10052919:	mov    edi,DWORD PTR [esp+0xc]
1005291d:	cmp    edi,ecx
1005291f:	jne    0x10052929
10052921:	pop    edi
10052922:	mov    eax,0xfffffffe
10052927:	pop    ebp
10052928:	ret    
10052929:	cmp    DWORD PTR [edi+0x20],ecx
1005292c:	mov    DWORD PTR [edi+0x18],ecx
1005292f:	jne    0x1005293b
10052931:	mov    DWORD PTR [edi+0x20],0x10056390
10052938:	mov    DWORD PTR [edi+0x28],ecx
1005293b:	cmp    DWORD PTR [edi+0x24],ecx
1005293e:	jne    0x10052947
10052940:	mov    DWORD PTR [edi+0x24],0x100563b0
10052947:	cmp    DWORD PTR [esp+0x10],0xffffffff
1005294c:	jne    0x10052956
1005294e:	mov    DWORD PTR [esp+0x10],0x6
10052956:	push   ebx
10052957:	mov    ebx,DWORD PTR [esp+0x1c]
1005295b:	cmp    ebx,ecx
1005295d:	jge    0x10052965
1005295f:	xor    ebp,ebp
10052961:	neg    ebx
10052963:	jmp    0x10052972
10052965:	cmp    ebx,0xf
10052968:	jle    0x10052972
1005296a:	mov    ebp,0x2
1005296f:	sub    ebx,0x10
10052972:	mov    eax,DWORD PTR [esp+0x20]
10052976:	add    eax,0xffffffff
10052979:	cmp    eax,0x8
1005297c:	ja     0x10052aff
10052982:	cmp    DWORD PTR [esp+0x18],0x8
10052987:	jne    0x10052aff
1005298d:	lea    ecx,[ebx-0x8]
10052990:	cmp    ecx,0x7
10052993:	ja     0x10052aff
10052999:	cmp    DWORD PTR [esp+0x14],0x9
1005299e:	ja     0x10052aff
100529a4:	cmp    DWORD PTR [esp+0x24],0x4
100529a9:	ja     0x10052aff
100529af:	cmp    ebx,0x8
100529b2:	jne    0x100529b9
100529b4:	mov    ebx,0x9
100529b9:	mov    edx,DWORD PTR [edi+0x28]
100529bc:	mov    eax,DWORD PTR [edi+0x20]
100529bf:	push   esi
100529c0:	push   0x16c0
100529c5:	push   0x1
100529c7:	push   edx
100529c8:	call   eax
100529ca:	mov    esi,eax
100529cc:	add    esp,0xc
100529cf:	test   esi,esi
100529d1:	je     0x10052af5
100529d7:	mov    DWORD PTR [edi+0x1c],esi
100529da:	mov    DWORD PTR [esi+0x18],ebp
100529dd:	mov    ecx,ebx
100529df:	mov    ebp,0x1
100529e4:	shl    ebp,cl
100529e6:	mov    DWORD PTR [esi+0x30],ebx
100529e9:	mov    ebx,DWORD PTR [esp+0x24]
100529ed:	mov    eax,0x1
100529f2:	lea    ecx,[ebp-0x1]
100529f5:	mov    DWORD PTR [esi+0x34],ecx
100529f8:	lea    ecx,[ebx+0x7]
100529fb:	shl    eax,cl
100529fd:	mov    DWORD PTR [esi+0x50],ecx
10052a00:	add    ecx,0x2
10052a03:	mov    DWORD PTR [esi],edi
10052a05:	mov    DWORD PTR [esi+0x4c],eax
10052a08:	add    eax,0xffffffff
10052a0b:	mov    DWORD PTR [esi+0x54],eax
10052a0e:	mov    eax,0xaaaaaaab
10052a13:	mul    ecx
10052a15:	shr    edx,1
10052a17:	mov    DWORD PTR [esi+0x1c],0x0
10052a1e:	mov    DWORD PTR [esi+0x2c],ebp
10052a21:	mov    DWORD PTR [esi+0x58],edx
10052a24:	mov    edx,DWORD PTR [edi+0x28]
10052a27:	mov    eax,DWORD PTR [edi+0x20]
10052a2a:	push   0x2
10052a2c:	push   ebp
10052a2d:	push   edx
10052a2e:	call   eax
10052a30:	mov    ecx,DWORD PTR [esi+0x2c]
10052a33:	mov    DWORD PTR [esi+0x38],eax
10052a36:	mov    edx,DWORD PTR [edi+0x28]
10052a39:	mov    eax,DWORD PTR [edi+0x20]
10052a3c:	push   0x2
10052a3e:	push   ecx
10052a3f:	push   edx
10052a40:	call   eax
10052a42:	mov    ecx,DWORD PTR [esi+0x4c]
10052a45:	mov    DWORD PTR [esi+0x40],eax
10052a48:	mov    edx,DWORD PTR [edi+0x28]
10052a4b:	mov    eax,DWORD PTR [edi+0x20]
10052a4e:	push   0x2
10052a50:	push   ecx
10052a51:	push   edx
10052a52:	call   eax
10052a54:	mov    DWORD PTR [esi+0x44],eax
10052a57:	lea    ecx,[ebx+0x6]
10052a5a:	mov    eax,0x1
10052a5f:	shl    eax,cl
10052a61:	push   0x4
10052a63:	mov    DWORD PTR [esi+0x169c],eax
10052a69:	mov    ecx,DWORD PTR [edi+0x28]
10052a6c:	mov    edx,DWORD PTR [edi+0x20]
10052a6f:	push   eax
10052a70:	push   ecx
10052a71:	call   edx
10052a73:	mov    ecx,DWORD PTR [esi+0x169c]
10052a79:	add    esp,0x30
10052a7c:	cmp    DWORD PTR [esi+0x38],0x0
10052a80:	lea    edx,[ecx*4+0x0]
10052a87:	mov    DWORD PTR [esi+0x8],eax
10052a8a:	mov    DWORD PTR [esi+0xc],edx
10052a8d:	je     0x10052add
10052a8f:	cmp    DWORD PTR [esi+0x40],0x0
10052a93:	je     0x10052add
10052a95:	cmp    DWORD PTR [esi+0x44],0x0
10052a99:	je     0x10052add
10052a9b:	test   eax,eax
10052a9d:	je     0x10052add
10052a9f:	mov    edx,ecx
10052aa1:	shr    edx,1
10052aa3:	lea    edx,[eax+edx*2]
10052aa6:	lea    eax,[eax+ecx*2]
10052aa9:	add    eax,ecx
10052aab:	mov    ecx,DWORD PTR [esp+0x18]
10052aaf:	mov    DWORD PTR [esi+0x16a4],edx
10052ab5:	mov    edx,DWORD PTR [esp+0x28]
10052ab9:	push   edi
10052aba:	mov    DWORD PTR [esi+0x1698],eax
10052ac0:	mov    DWORD PTR [esi+0x84],ecx
10052ac6:	mov    DWORD PTR [esi+0x88],edx
10052acc:	mov    BYTE PTR [esi+0x24],0x8
10052ad0:	call   0x10052860
10052ad5:	add    esp,0x4
10052ad8:	pop    esi
10052ad9:	pop    ebx
10052ada:	pop    edi
10052adb:	pop    ebp
10052adc:	ret    
10052add:	mov    DWORD PTR [esi+0x4],0x29a
10052ae4:	mov    eax,ds:0x1006b518
10052ae9:	push   edi
10052aea:	mov    DWORD PTR [edi+0x18],eax
10052aed:	call   0x10051b00
10052af2:	add    esp,0x4
10052af5:	pop    esi
10052af6:	pop    ebx
10052af7:	pop    edi
10052af8:	mov    eax,0xfffffffc
10052afd:	pop    ebp
10052afe:	ret    
10052aff:	pop    ebx
10052b00:	pop    edi
10052b01:	mov    eax,0xfffffffe
10052b06:	pop    ebp
10052b07:	ret    
10052b08:	mov    eax,0xfffffffa
10052b0d:	pop    ebp
10052b0e:	ret    
10052b0f:	int3   
10052b10:	mov    edx,DWORD PTR [esp+0x4]
10052b14:	xor    ecx,ecx
10052b16:	cmp    edx,ecx
10052b18:	je     0x10052b67
10052b1a:	mov    eax,DWORD PTR [edx+0x1c]
10052b1d:	cmp    eax,ecx
10052b1f:	je     0x10052b67
10052b21:	mov    DWORD PTR [eax+0x1c],ecx
10052b24:	mov    DWORD PTR [edx+0x14],ecx
10052b27:	mov    DWORD PTR [edx+0x8],ecx
10052b2a:	mov    DWORD PTR [edx+0x18],ecx
10052b2d:	mov    DWORD PTR [edx+0x30],0x1
10052b34:	mov    DWORD PTR [eax],ecx
10052b36:	mov    DWORD PTR [eax+0x4],ecx
10052b39:	mov    DWORD PTR [eax+0xc],ecx
10052b3c:	mov    DWORD PTR [eax+0x20],ecx
10052b3f:	mov    DWORD PTR [eax+0x28],ecx
10052b42:	mov    DWORD PTR [eax+0x2c],ecx
10052b45:	mov    DWORD PTR [eax+0x30],ecx
10052b48:	mov    DWORD PTR [eax+0x38],ecx
10052b4b:	mov    DWORD PTR [eax+0x3c],ecx
10052b4e:	lea    ecx,[eax+0x530]
10052b54:	mov    DWORD PTR [eax+0x14],0x8000
10052b5b:	mov    DWORD PTR [eax+0x6c],ecx
10052b5e:	mov    DWORD PTR [eax+0x50],ecx
10052b61:	mov    DWORD PTR [eax+0x4c],ecx
10052b64:	xor    eax,eax
10052b66:	ret    
10052b67:	mov    eax,0xfffffffe
10052b6c:	ret    
10052b6d:	int3   
10052b6e:	int3   
10052b6f:	int3   
10052b70:	mov    eax,DWORD PTR [esp+0xc]
10052b74:	push   edi
10052b75:	xor    edi,edi
10052b77:	cmp    eax,edi
10052b79:	je     0x10052c34
10052b7f:	cmp    BYTE PTR [eax],0x31
10052b82:	jne    0x10052c34
10052b88:	cmp    DWORD PTR [esp+0x14],0x38
10052b8d:	jne    0x10052c34
10052b93:	push   esi
10052b94:	mov    esi,DWORD PTR [esp+0xc]
10052b98:	cmp    esi,edi
10052b9a:	je     0x10052c2c
10052ba0:	cmp    DWORD PTR [esi+0x20],edi
10052ba3:	mov    DWORD PTR [esi+0x18],edi
10052ba6:	jne    0x10052bb2
10052ba8:	mov    DWORD PTR [esi+0x20],0x10056390
10052baf:	mov    DWORD PTR [esi+0x28],edi
10052bb2:	cmp    DWORD PTR [esi+0x24],edi
10052bb5:	jne    0x10052bbe
10052bb7:	mov    DWORD PTR [esi+0x24],0x100563b0
10052bbe:	mov    eax,DWORD PTR [esi+0x28]
10052bc1:	mov    ecx,DWORD PTR [esi+0x20]
10052bc4:	push   0x2530
10052bc9:	push   0x1
10052bcb:	push   eax
10052bcc:	call   ecx
10052bce:	add    esp,0xc
10052bd1:	cmp    eax,edi
10052bd3:	jne    0x10052bdd
10052bd5:	pop    esi
10052bd6:	mov    eax,0xfffffffc
10052bdb:	pop    edi
10052bdc:	ret    
10052bdd:	mov    ecx,DWORD PTR [esp+0x10]
10052be1:	cmp    ecx,edi
10052be3:	mov    DWORD PTR [esi+0x1c],eax
10052be6:	jge    0x10052bef
10052be8:	mov    DWORD PTR [eax+0x8],edi
10052beb:	neg    ecx
10052bed:	jmp    0x10052c02
10052bef:	mov    edx,ecx
10052bf1:	sar    edx,0x4
10052bf4:	add    edx,0x1
10052bf7:	cmp    ecx,0x30
10052bfa:	mov    DWORD PTR [eax+0x8],edx
10052bfd:	jge    0x10052c02
10052bff:	and    ecx,0xf
10052c02:	lea    edx,[ecx-0x8]
10052c05:	cmp    edx,0x7
10052c08:	ja     0x10052c1c
10052c0a:	push   esi
10052c0b:	mov    DWORD PTR [eax+0x24],ecx
10052c0e:	mov    DWORD PTR [eax+0x34],edi
10052c11:	call   0x10052b10
10052c16:	add    esp,0x4
10052c19:	pop    esi
10052c1a:	pop    edi
10052c1b:	ret    
10052c1c:	mov    ecx,DWORD PTR [esi+0x24]
10052c1f:	push   eax
10052c20:	mov    eax,DWORD PTR [esi+0x28]
10052c23:	push   eax
10052c24:	call   ecx
10052c26:	add    esp,0x8
10052c29:	mov    DWORD PTR [esi+0x1c],edi
10052c2c:	pop    esi
10052c2d:	mov    eax,0xfffffffe
10052c32:	pop    edi
10052c33:	ret    
10052c34:	mov    eax,0xfffffffa
10052c39:	pop    edi
10052c3a:	ret    
10052c3b:	int3   
10052c3c:	int3   
10052c3d:	int3   
10052c3e:	int3   
10052c3f:	int3   
10052c40:	mov    DWORD PTR [eax+0x4c],0x10067fe0
10052c47:	mov    DWORD PTR [eax+0x54],0x9
10052c4e:	mov    DWORD PTR [eax+0x50],0x100687e0
10052c55:	mov    DWORD PTR [eax+0x58],0x5
10052c5c:	ret    
10052c5d:	int3   
10052c5e:	int3   
10052c5f:	int3   
10052c60:	push   ebp
10052c61:	push   esi
10052c62:	mov    esi,DWORD PTR [ebx+0x1c]
10052c65:	xor    ebp,ebp
10052c67:	cmp    DWORD PTR [esi+0x34],ebp
10052c6a:	push   edi
10052c6b:	mov    edi,eax
10052c6d:	jne    0x10052c98
10052c6f:	mov    ecx,DWORD PTR [esi+0x24]
10052c72:	mov    edx,DWORD PTR [ebx+0x20]
10052c75:	mov    eax,0x1
10052c7a:	shl    eax,cl
10052c7c:	mov    ecx,DWORD PTR [ebx+0x28]
10052c7f:	push   0x1
10052c81:	push   eax
10052c82:	push   ecx
10052c83:	call   edx
10052c85:	add    esp,0xc
10052c88:	cmp    eax,ebp
10052c8a:	mov    DWORD PTR [esi+0x34],eax
10052c8d:	jne    0x10052c98
10052c8f:	pop    edi
10052c90:	pop    esi
10052c91:	mov    eax,0x1
10052c96:	pop    ebp
10052c97:	ret    
10052c98:	cmp    DWORD PTR [esi+0x28],ebp
10052c9b:	jne    0x10052cb0
10052c9d:	mov    ecx,DWORD PTR [esi+0x24]
10052ca0:	mov    eax,0x1
10052ca5:	shl    eax,cl
10052ca7:	mov    DWORD PTR [esi+0x30],ebp
10052caa:	mov    DWORD PTR [esi+0x2c],ebp
10052cad:	mov    DWORD PTR [esi+0x28],eax
10052cb0:	sub    edi,DWORD PTR [ebx+0x10]
10052cb3:	mov    eax,DWORD PTR [esi+0x28]
10052cb6:	cmp    edi,eax
10052cb8:	jb     0x10052cdc
10052cba:	mov    ecx,DWORD PTR [ebx+0xc]
10052cbd:	mov    edx,DWORD PTR [esi+0x34]
10052cc0:	push   eax
10052cc1:	sub    ecx,eax
10052cc3:	push   ecx
10052cc4:	push   edx
10052cc5:	call   0x10045420
10052cca:	mov    eax,DWORD PTR [esi+0x28]
10052ccd:	add    esp,0xc
10052cd0:	pop    edi
10052cd1:	mov    DWORD PTR [esi+0x30],ebp
10052cd4:	mov    DWORD PTR [esi+0x2c],eax
10052cd7:	pop    esi
10052cd8:	xor    eax,eax
10052cda:	pop    ebp
10052cdb:	ret    
10052cdc:	sub    eax,DWORD PTR [esi+0x30]
10052cdf:	mov    ebp,eax
10052ce1:	cmp    ebp,edi
10052ce3:	jbe    0x10052ce7
10052ce5:	mov    ebp,edi
10052ce7:	mov    ecx,DWORD PTR [ebx+0xc]
10052cea:	mov    edx,DWORD PTR [esi+0x34]
10052ced:	add    edx,DWORD PTR [esi+0x30]
10052cf0:	push   ebp
10052cf1:	sub    ecx,edi
10052cf3:	push   ecx
10052cf4:	push   edx
10052cf5:	call   0x10045420
10052cfa:	add    esp,0xc
10052cfd:	sub    edi,ebp
10052cff:	je     0x10052d23
10052d01:	mov    eax,DWORD PTR [ebx+0xc]
10052d04:	mov    ecx,DWORD PTR [esi+0x34]
10052d07:	push   edi
10052d08:	sub    eax,edi
10052d0a:	push   eax
10052d0b:	push   ecx
10052d0c:	call   0x10045420
10052d11:	mov    edx,DWORD PTR [esi+0x28]
10052d14:	add    esp,0xc
10052d17:	mov    DWORD PTR [esi+0x30],edi
10052d1a:	pop    edi
10052d1b:	mov    DWORD PTR [esi+0x2c],edx
10052d1e:	pop    esi
10052d1f:	xor    eax,eax
10052d21:	pop    ebp
10052d22:	ret    
10052d23:	add    DWORD PTR [esi+0x30],ebp
10052d26:	mov    ecx,DWORD PTR [esi+0x30]
10052d29:	mov    eax,DWORD PTR [esi+0x28]
10052d2c:	cmp    ecx,eax
10052d2e:	jne    0x10052d37
10052d30:	mov    DWORD PTR [esi+0x30],0x0
10052d37:	mov    ecx,DWORD PTR [esi+0x2c]
10052d3a:	cmp    ecx,eax
10052d3c:	jae    0x10052d43
10052d3e:	add    ecx,ebp
10052d40:	mov    DWORD PTR [esi+0x2c],ecx
10052d43:	pop    edi
10052d44:	pop    esi
10052d45:	xor    eax,eax
10052d47:	pop    ebp
10052d48:	ret    
10052d49:	int3   
10052d4a:	int3   
10052d4b:	int3   
10052d4c:	int3   
10052d4d:	int3   
10052d4e:	int3   
10052d4f:	int3   
10052d50:	mov    eax,DWORD PTR [esp+0x4]
10052d54:	sub    esp,0x2c
10052d57:	test   eax,eax
10052d59:	push   edi
10052d5a:	je     0x100542ac
10052d60:	mov    edi,DWORD PTR [eax+0x1c]
10052d63:	test   edi,edi
10052d65:	je     0x100542ac
10052d6b:	cmp    DWORD PTR [eax+0xc],0x0
10052d6f:	je     0x100542ac
10052d75:	cmp    DWORD PTR [eax],0x0
10052d78:	jne    0x10052d84
10052d7a:	cmp    DWORD PTR [eax+0x4],0x0
10052d7e:	jne    0x100542ac
10052d84:	cmp    DWORD PTR [edi],0xb
10052d87:	jne    0x10052d8f
10052d89:	mov    DWORD PTR [edi],0xc
10052d8f:	mov    ecx,DWORD PTR [eax+0xc]
10052d92:	mov    edx,DWORD PTR [eax+0x4]
10052d95:	push   ebx
10052d96:	mov    ebx,DWORD PTR [edi+0x38]
10052d99:	push   ebp
10052d9a:	mov    ebp,DWORD PTR [eax]
10052d9c:	mov    DWORD PTR [esp+0x24],ecx
10052da0:	mov    ecx,DWORD PTR [eax+0x10]
10052da3:	mov    eax,DWORD PTR [edi]
10052da5:	cmp    eax,0x1c
10052da8:	push   esi
10052da9:	mov    esi,DWORD PTR [edi+0x3c]
10052dac:	mov    DWORD PTR [esp+0x1c],ecx
10052db0:	mov    DWORD PTR [esp+0x10],edx
10052db4:	mov    DWORD PTR [esp+0x18],ebx
10052db8:	mov    DWORD PTR [esp+0x38],edx
10052dbc:	mov    DWORD PTR [esp+0x2c],ecx
10052dc0:	mov    DWORD PTR [esp+0x30],0x0
10052dc8:	ja     0x10054159
10052dce:	mov    edi,edi
10052dd0:	jmp    DWORD PTR [eax*4+0x100542b8]
10052dd7:	cmp    DWORD PTR [edi+0x8],0x0
10052ddb:	jne    0x10052de8
10052ddd:	mov    DWORD PTR [edi],0xc
10052de3:	jmp    0x1005414e
10052de8:	cmp    esi,0x10
10052deb:	jae    0x10052e18
10052ded:	lea    ecx,[ecx+0x0]
10052df0:	test   edx,edx
10052df2:	je     0x100541ac
10052df8:	movzx  eax,BYTE PTR [ebp+0x0]
10052dfc:	mov    ecx,esi
10052dfe:	shl    eax,cl
10052e00:	sub    edx,0x1
10052e03:	add    esi,0x8
10052e06:	add    ebp,0x1
10052e09:	add    ebx,eax
10052e0b:	cmp    esi,0x10
10052e0e:	mov    DWORD PTR [esp+0x10],edx
10052e12:	mov    DWORD PTR [esp+0x18],ebx
10052e16:	jb     0x10052df0
10052e18:	test   BYTE PTR [edi+0x8],0x2
10052e1c:	je     0x10052e6b
10052e1e:	cmp    ebx,0x8b1f
10052e24:	jne    0x10052e6b
10052e26:	push   0x0
10052e28:	push   0x0
10052e2a:	push   0x0
10052e2c:	call   0x10056370
10052e31:	mov    DWORD PTR [edi+0x18],eax
10052e34:	push   0x2
10052e36:	lea    ecx,[esp+0x30]
10052e3a:	mov    BYTE PTR [esp+0x30],0x1f
10052e3f:	mov    BYTE PTR [esp+0x31],0x8b
10052e44:	mov    edx,DWORD PTR [edi+0x18]
10052e47:	push   ecx
10052e48:	push   edx
10052e49:	call   0x10056370
10052e4e:	mov    edx,DWORD PTR [esp+0x28]
10052e52:	xor    ebx,ebx
10052e54:	add    esp,0x18
10052e57:	mov    DWORD PTR [edi+0x18],eax
10052e5a:	mov    DWORD PTR [esp+0x18],ebx
10052e5e:	xor    esi,esi
10052e60:	mov    DWORD PTR [edi],0x1
10052e66:	jmp    0x1005414e
10052e6b:	mov    eax,DWORD PTR [edi+0x20]
10052e6e:	test   eax,eax
10052e70:	mov    DWORD PTR [edi+0x10],0x0
10052e77:	je     0x10052e80
10052e79:	mov    DWORD PTR [eax+0x30],0xffffffff
10052e80:	test   BYTE PTR [edi+0x8],0x1
10052e84:	je     0x10052f31
10052e8a:	movzx  eax,bl
10052e8d:	shl    eax,0x8
10052e90:	mov    ecx,ebx
10052e92:	shr    ecx,0x8
10052e95:	add    eax,ecx
10052e97:	xor    edx,edx
10052e99:	mov    ecx,0x1f
10052e9e:	div    ecx
10052ea0:	test   edx,edx
10052ea2:	jne    0x10052f31
10052ea8:	mov    edx,ebx
10052eaa:	and    dl,0xf
10052ead:	cmp    dl,0x8
10052eb0:	je     0x10052ec6
10052eb2:	mov    eax,DWORD PTR [esp+0x40]
10052eb6:	mov    edx,DWORD PTR [esp+0x10]
10052eba:	mov    DWORD PTR [eax+0x18],0x10068a2c
10052ec1:	jmp    0x10054148
10052ec6:	shr    ebx,0x4
10052ec9:	mov    ecx,ebx
10052ecb:	and    ecx,0xf
10052ece:	add    ecx,0x8
10052ed1:	sub    esi,0x4
10052ed4:	cmp    ecx,DWORD PTR [edi+0x24]
10052ed7:	mov    DWORD PTR [esp+0x18],ebx
10052edb:	jbe    0x10052ef1
10052edd:	mov    ecx,DWORD PTR [esp+0x40]
10052ee1:	mov    edx,DWORD PTR [esp+0x10]
10052ee5:	mov    DWORD PTR [ecx+0x18],0x10068a18
10052eec:	jmp    0x10054148
10052ef1:	mov    edx,0x1
10052ef6:	shl    edx,cl
10052ef8:	push   0x0
10052efa:	push   0x0
10052efc:	push   0x0
10052efe:	mov    DWORD PTR [edi+0x14],edx
10052f01:	call   0x10054390
10052f06:	mov    ecx,DWORD PTR [esp+0x4c]
10052f0a:	mov    edx,DWORD PTR [esp+0x1c]
10052f0e:	shr    ebx,0x8
10052f11:	not    ebx
10052f13:	and    ebx,0x2
10052f16:	or     ebx,0x9
10052f19:	mov    DWORD PTR [edi+0x18],eax
10052f1c:	mov    DWORD PTR [ecx+0x30],eax
10052f1f:	mov    DWORD PTR [edi],ebx
10052f21:	xor    ebx,ebx
10052f23:	add    esp,0xc
10052f26:	mov    DWORD PTR [esp+0x18],ebx
10052f2a:	xor    esi,esi
10052f2c:	jmp    0x1005414e
10052f31:	mov    edx,DWORD PTR [esp+0x40]
10052f35:	mov    DWORD PTR [edx+0x18],0x10068a00
10052f3c:	mov    edx,DWORD PTR [esp+0x10]
10052f40:	jmp    0x10054148
10052f45:	cmp    esi,0x10
10052f48:	jae    0x10052f78
10052f4a:	lea    ebx,[ebx+0x0]
10052f50:	test   edx,edx
10052f52:	je     0x100541ac
10052f58:	movzx  eax,BYTE PTR [ebp+0x0]
10052f5c:	mov    ecx,esi
10052f5e:	shl    eax,cl
10052f60:	sub    edx,0x1
10052f63:	add    esi,0x8
10052f66:	add    ebp,0x1
10052f69:	add    ebx,eax
10052f6b:	cmp    esi,0x10
10052f6e:	mov    DWORD PTR [esp+0x10],edx
10052f72:	mov    DWORD PTR [esp+0x18],ebx
10052f76:	jb     0x10052f50
10052f78:	cmp    bl,0x8
10052f7b:	mov    DWORD PTR [edi+0x10],ebx
10052f7e:	je     0x10052f90
10052f80:	mov    ecx,DWORD PTR [esp+0x40]
10052f84:	mov    DWORD PTR [ecx+0x18],0x10068a2c
10052f8b:	jmp    0x10054148
10052f90:	test   ebx,0xe000
10052f96:	je     0x10052fa8
10052f98:	mov    eax,DWORD PTR [esp+0x40]
10052f9c:	mov    DWORD PTR [eax+0x18],0x100689e4
10052fa3:	jmp    0x10054148
10052fa8:	mov    eax,DWORD PTR [edi+0x20]
10052fab:	test   eax,eax
10052fad:	je     0x10052fb9
10052faf:	mov    ecx,ebx
10052fb1:	shr    ecx,0x8
10052fb4:	and    ecx,0x1
10052fb7:	mov    DWORD PTR [eax],ecx
10052fb9:	test   DWORD PTR [edi+0x10],0x200
10052fc0:	je     0x10052fe7
10052fc2:	mov    BYTE PTR [esp+0x20],bl
10052fc6:	shr    ebx,0x8
10052fc9:	push   0x2
10052fcb:	lea    edx,[esp+0x24]
10052fcf:	mov    BYTE PTR [esp+0x25],bl
10052fd3:	mov    eax,DWORD PTR [edi+0x18]
10052fd6:	push   edx
10052fd7:	push   eax
10052fd8:	call   0x10056370
10052fdd:	mov    edx,DWORD PTR [esp+0x1c]
10052fe1:	add    esp,0xc
10052fe4:	mov    DWORD PTR [edi+0x18],eax
10052fe7:	xor    ebx,ebx
10052fe9:	xor    esi,esi
10052feb:	mov    DWORD PTR [edi],0x2
10052ff1:	jmp    0x10052ff8
10052ff3:	cmp    esi,0x20
10052ff6:	jae    0x1005301c
10052ff8:	test   edx,edx
10052ffa:	je     0x100541ac
10053000:	movzx  eax,BYTE PTR [ebp+0x0]
10053004:	mov    ecx,esi
10053006:	shl    eax,cl
10053008:	sub    edx,0x1
1005300b:	add    esi,0x8
1005300e:	add    ebp,0x1
10053011:	add    ebx,eax
10053013:	cmp    esi,0x20
10053016:	mov    DWORD PTR [esp+0x10],edx
1005301a:	jb     0x10052ff8
1005301c:	mov    eax,DWORD PTR [edi+0x20]
1005301f:	test   eax,eax
10053021:	je     0x10053026
10053023:	mov    DWORD PTR [eax+0x4],ebx
10053026:	test   DWORD PTR [edi+0x10],0x200
1005302d:	je     0x10053066
1005302f:	mov    BYTE PTR [esp+0x20],bl
10053033:	mov    ecx,ebx
10053035:	mov    edx,ebx
10053037:	shr    ecx,0x8
1005303a:	shr    edx,0x10
1005303d:	shr    ebx,0x18
10053040:	push   0x4
10053042:	lea    eax,[esp+0x24]
10053046:	mov    BYTE PTR [esp+0x25],cl
1005304a:	mov    BYTE PTR [esp+0x26],dl
1005304e:	mov    BYTE PTR [esp+0x27],bl
10053052:	mov    ecx,DWORD PTR [edi+0x18]
10053055:	push   eax
10053056:	push   ecx
10053057:	call   0x10056370
1005305c:	mov    edx,DWORD PTR [esp+0x1c]
10053060:	add    esp,0xc
10053063:	mov    DWORD PTR [edi+0x18],eax
10053066:	xor    ebx,ebx
10053068:	xor    esi,esi
1005306a:	mov    DWORD PTR [edi],0x3
10053070:	jmp    0x10053077
10053072:	cmp    esi,0x10
10053075:	jae    0x1005309b
10053077:	test   edx,edx
10053079:	je     0x100541ac
1005307f:	movzx  eax,BYTE PTR [ebp+0x0]
10053083:	mov    ecx,esi
10053085:	shl    eax,cl
10053087:	sub    edx,0x1
1005308a:	add    esi,0x8
1005308d:	add    ebp,0x1
10053090:	add    ebx,eax
10053092:	cmp    esi,0x10
10053095:	mov    DWORD PTR [esp+0x10],edx
10053099:	jb     0x10053077
1005309b:	mov    eax,DWORD PTR [edi+0x20]
1005309e:	test   eax,eax
100530a0:	je     0x100530b8
100530a2:	mov    ecx,ebx
100530a4:	and    ecx,0xff
100530aa:	mov    DWORD PTR [eax+0x8],ecx
100530ad:	mov    ecx,DWORD PTR [edi+0x20]
100530b0:	mov    eax,ebx
100530b2:	shr    eax,0x8
100530b5:	mov    DWORD PTR [ecx+0xc],eax
100530b8:	test   DWORD PTR [edi+0x10],0x200
100530bf:	je     0x100530e6
100530c1:	mov    BYTE PTR [esp+0x20],bl
100530c5:	shr    ebx,0x8
100530c8:	push   0x2
100530ca:	lea    edx,[esp+0x24]
100530ce:	mov    BYTE PTR [esp+0x25],bl
100530d2:	mov    eax,DWORD PTR [edi+0x18]
100530d5:	push   edx
100530d6:	push   eax
100530d7:	call   0x10056370
100530dc:	mov    edx,DWORD PTR [esp+0x1c]
100530e0:	add    esp,0xc
100530e3:	mov    DWORD PTR [edi+0x18],eax
100530e6:	xor    ebx,ebx
100530e8:	mov    DWORD PTR [esp+0x18],ebx
100530ec:	xor    esi,esi
100530ee:	mov    DWORD PTR [edi],0x4
100530f4:	test   DWORD PTR [edi+0x10],0x400
100530fb:	je     0x1005316b
100530fd:	cmp    esi,0x10
10053100:	jae    0x10053126
10053102:	test   edx,edx
10053104:	je     0x100541ac
1005310a:	movzx  eax,BYTE PTR [ebp+0x0]
1005310e:	mov    ecx,esi
10053110:	shl    eax,cl
10053112:	sub    edx,0x1
10053115:	add    esi,0x8
10053118:	add    ebp,0x1
1005311b:	add    ebx,eax
1005311d:	cmp    esi,0x10
10053120:	mov    DWORD PTR [esp+0x10],edx
10053124:	jb     0x10053102
10053126:	mov    eax,DWORD PTR [edi+0x20]
10053129:	test   eax,eax
1005312b:	mov    DWORD PTR [edi+0x40],ebx
1005312e:	je     0x10053133
10053130:	mov    DWORD PTR [eax+0x14],ebx
10053133:	test   DWORD PTR [edi+0x10],0x200
1005313a:	je     0x10053161
1005313c:	mov    BYTE PTR [esp+0x20],bl
10053140:	shr    ebx,0x8
10053143:	push   0x2
10053145:	lea    ecx,[esp+0x24]
10053149:	mov    BYTE PTR [esp+0x25],bl
1005314d:	mov    edx,DWORD PTR [edi+0x18]
10053150:	push   ecx
10053151:	push   edx
10053152:	call   0x10056370
10053157:	mov    edx,DWORD PTR [esp+0x1c]
1005315b:	add    esp,0xc
1005315e:	mov    DWORD PTR [edi+0x18],eax
10053161:	xor    ebx,ebx
10053163:	mov    DWORD PTR [esp+0x18],ebx
10053167:	xor    esi,esi
10053169:	jmp    0x10053179
1005316b:	mov    eax,DWORD PTR [edi+0x20]
1005316e:	test   eax,eax
10053170:	je     0x10053179
10053172:	mov    DWORD PTR [eax+0x10],0x0
10053179:	mov    DWORD PTR [edi],0x5
1005317f:	test   DWORD PTR [edi+0x10],0x400
10053186:	je     0x1005322e
1005318c:	mov    eax,DWORD PTR [edi+0x40]
1005318f:	cmp    eax,edx
10053191:	mov    DWORD PTR [esp+0x14],eax
10053195:	jbe    0x1005319d
10053197:	mov    eax,edx
10053199:	mov    DWORD PTR [esp+0x14],edx
1005319d:	test   eax,eax
1005319f:	je     0x10053224
100531a5:	mov    ecx,DWORD PTR [edi+0x20]
100531a8:	test   ecx,ecx
100531aa:	je     0x100531f3
100531ac:	mov    ecx,DWORD PTR [ecx+0x10]
100531af:	test   ecx,ecx
100531b1:	mov    DWORD PTR [esp+0x34],ecx
100531b5:	je     0x100531f3
100531b7:	mov    ecx,DWORD PTR [edi+0x20]
100531ba:	mov    ecx,DWORD PTR [ecx+0x14]
100531bd:	sub    ecx,DWORD PTR [edi+0x40]
100531c0:	mov    edx,DWORD PTR [edi+0x20]
100531c3:	mov    edx,DWORD PTR [edx+0x18]
100531c6:	mov    DWORD PTR [esp+0x24],ecx
100531ca:	add    ecx,eax
100531cc:	cmp    ecx,edx
100531ce:	jbe    0x100531d6
100531d0:	sub    edx,DWORD PTR [esp+0x24]
100531d4:	mov    eax,edx
100531d6:	mov    edx,DWORD PTR [esp+0x34]
100531da:	push   eax
100531db:	mov    eax,DWORD PTR [esp+0x28]
100531df:	add    edx,eax
100531e1:	push   ebp
100531e2:	push   edx
100531e3:	call   0x10045420
100531e8:	mov    eax,DWORD PTR [esp+0x20]
100531ec:	mov    edx,DWORD PTR [esp+0x1c]
100531f0:	add    esp,0xc
100531f3:	test   DWORD PTR [edi+0x10],0x200
100531fa:	je     0x10053219
100531fc:	mov    ecx,DWORD PTR [esp+0x14]
10053200:	mov    edx,DWORD PTR [edi+0x18]
10053203:	push   ecx
10053204:	push   ebp
10053205:	push   edx
10053206:	call   0x10056370
1005320b:	mov    edx,DWORD PTR [esp+0x1c]
1005320f:	mov    DWORD PTR [edi+0x18],eax
10053212:	mov    eax,DWORD PTR [esp+0x20]
10053216:	add    esp,0xc
10053219:	sub    edx,eax
1005321b:	add    ebp,eax
1005321d:	sub    DWORD PTR [edi+0x40],eax
10053220:	mov    DWORD PTR [esp+0x10],edx
10053224:	cmp    DWORD PTR [edi+0x40],0x0
10053228:	jne    0x100541ac
1005322e:	mov    DWORD PTR [edi+0x40],0x0
10053235:	mov    DWORD PTR [edi],0x6
1005323b:	test   DWORD PTR [edi+0x10],0x800
10053242:	je     0x100532d8
10053248:	test   edx,edx
1005324a:	je     0x100541ac
10053250:	xor    eax,eax
10053252:	movzx  ecx,BYTE PTR [eax+ebp*1]
10053256:	add    eax,0x1
10053259:	mov    DWORD PTR [esp+0x14],eax
1005325d:	mov    eax,DWORD PTR [edi+0x20]
10053260:	test   eax,eax
10053262:	mov    DWORD PTR [esp+0x24],ecx
10053266:	je     0x1005328e
10053268:	mov    ecx,DWORD PTR [eax+0x1c]
1005326b:	test   ecx,ecx
1005326d:	mov    DWORD PTR [esp+0x34],ecx
10053271:	je     0x1005328e
10053273:	mov    ecx,DWORD PTR [edi+0x40]
10053276:	cmp    ecx,DWORD PTR [eax+0x20]
10053279:	jae    0x1005328e
1005327b:	mov    edx,DWORD PTR [esp+0x34]
1005327f:	mov    al,BYTE PTR [esp+0x24]
10053283:	mov    BYTE PTR [edx+ecx*1],al
10053286:	add    DWORD PTR [edi+0x40],0x1
1005328a:	mov    edx,DWORD PTR [esp+0x10]
1005328e:	cmp    DWORD PTR [esp+0x24],0x0
10053293:	je     0x1005329d
10053295:	mov    eax,DWORD PTR [esp+0x14]
10053299:	cmp    eax,edx
1005329b:	jb     0x10053252
1005329d:	test   DWORD PTR [edi+0x10],0x200
100532a4:	je     0x100532bf
100532a6:	mov    ecx,DWORD PTR [esp+0x14]
100532aa:	mov    edx,DWORD PTR [edi+0x18]
100532ad:	push   ecx
100532ae:	push   ebp
100532af:	push   edx
100532b0:	call   0x10056370
100532b5:	mov    edx,DWORD PTR [esp+0x1c]
100532b9:	add    esp,0xc
100532bc:	mov    DWORD PTR [edi+0x18],eax
100532bf:	mov    eax,DWORD PTR [esp+0x14]
100532c3:	sub    edx,eax
100532c5:	add    ebp,eax
100532c7:	cmp    DWORD PTR [esp+0x24],0x0
100532cc:	mov    DWORD PTR [esp+0x10],edx
100532d0:	jne    0x100541ac
100532d6:	jmp    0x100532e6
100532d8:	mov    eax,DWORD PTR [edi+0x20]
100532db:	test   eax,eax
100532dd:	je     0x100532e6
100532df:	mov    DWORD PTR [eax+0x1c],0x0
100532e6:	mov    DWORD PTR [edi+0x40],0x0
100532ed:	mov    DWORD PTR [edi],0x7
100532f3:	test   DWORD PTR [edi+0x10],0x1000
100532fa:	je     0x10053396
10053300:	test   edx,edx
10053302:	je     0x100541ac
10053308:	xor    eax,eax
1005330a:	lea    ebx,[ebx+0x0]
10053310:	movzx  ecx,BYTE PTR [eax+ebp*1]
10053314:	add    eax,0x1
10053317:	mov    DWORD PTR [esp+0x14],eax
1005331b:	mov    eax,DWORD PTR [edi+0x20]
1005331e:	test   eax,eax
10053320:	mov    DWORD PTR [esp+0x24],ecx
10053324:	je     0x1005334c
10053326:	mov    ecx,DWORD PTR [eax+0x24]
10053329:	test   ecx,ecx
1005332b:	mov    DWORD PTR [esp+0x34],ecx
1005332f:	je     0x1005334c
10053331:	mov    ecx,DWORD PTR [edi+0x40]
10053334:	cmp    ecx,DWORD PTR [eax+0x28]
10053337:	jae    0x1005334c
10053339:	mov    edx,DWORD PTR [esp+0x34]
1005333d:	mov    al,BYTE PTR [esp+0x24]
10053341:	mov    BYTE PTR [edx+ecx*1],al
10053344:	add    DWORD PTR [edi+0x40],0x1
10053348:	mov    edx,DWORD PTR [esp+0x10]
1005334c:	cmp    DWORD PTR [esp+0x24],0x0
10053351:	je     0x1005335b
10053353:	mov    eax,DWORD PTR [esp+0x14]
10053357:	cmp    eax,edx
10053359:	jb     0x10053310
1005335b:	test   DWORD PTR [edi+0x10],0x200
10053362:	je     0x1005337d
10053364:	mov    ecx,DWORD PTR [esp+0x14]
10053368:	mov    edx,DWORD PTR [edi+0x18]
1005336b:	push   ecx
1005336c:	push   ebp
1005336d:	push   edx
1005336e:	call   0x10056370
10053373:	mov    edx,DWORD PTR [esp+0x1c]
10053377:	add    esp,0xc
1005337a:	mov    DWORD PTR [edi+0x18],eax
1005337d:	mov    eax,DWORD PTR [esp+0x14]
10053381:	sub    edx,eax
10053383:	add    ebp,eax
10053385:	cmp    DWORD PTR [esp+0x24],0x0
1005338a:	mov    DWORD PTR [esp+0x10],edx
1005338e:	jne    0x100541ac
10053394:	jmp    0x100533a4
10053396:	mov    eax,DWORD PTR [edi+0x20]
10053399:	test   eax,eax
1005339b:	je     0x100533a4
1005339d:	mov    DWORD PTR [eax+0x24],0x0
100533a4:	mov    DWORD PTR [edi],0x8
100533aa:	test   DWORD PTR [edi+0x10],0x200
100533b1:	je     0x10053400
100533b3:	cmp    esi,0x10
100533b6:	jae    0x100533e0
100533b8:	test   edx,edx
100533ba:	je     0x100541ac
100533c0:	movzx  eax,BYTE PTR [ebp+0x0]
100533c4:	mov    ecx,esi
100533c6:	shl    eax,cl
100533c8:	sub    edx,0x1
100533cb:	add    esi,0x8
100533ce:	add    ebp,0x1
100533d1:	add    ebx,eax
100533d3:	cmp    esi,0x10
100533d6:	mov    DWORD PTR [esp+0x10],edx
100533da:	mov    DWORD PTR [esp+0x18],ebx
100533de:	jb     0x100533b8
100533e0:	movzx  ecx,WORD PTR [edi+0x18]
100533e4:	cmp    ebx,ecx
100533e6:	je     0x100533f8
100533e8:	mov    eax,DWORD PTR [esp+0x40]
100533ec:	mov    DWORD PTR [eax+0x18],0x100689d0
100533f3:	jmp    0x10054148
100533f8:	xor    ebx,ebx
100533fa:	mov    DWORD PTR [esp+0x18],ebx
100533fe:	xor    esi,esi
10053400:	mov    eax,DWORD PTR [edi+0x20]
10053403:	test   eax,eax
10053405:	je     0x1005341d
10053407:	mov    ecx,DWORD PTR [edi+0x10]
1005340a:	sar    ecx,0x9
1005340d:	and    ecx,0x1
10053410:	mov    DWORD PTR [eax+0x2c],ecx
10053413:	mov    edx,DWORD PTR [edi+0x20]
10053416:	mov    DWORD PTR [edx+0x30],0x1
1005341d:	push   0x0
1005341f:	push   0x0
10053421:	push   0x0
10053423:	call   0x10056370
10053428:	mov    ecx,DWORD PTR [esp+0x4c]
1005342c:	mov    edx,DWORD PTR [esp+0x1c]
10053430:	mov    DWORD PTR [edi+0x18],eax
10053433:	mov    DWORD PTR [ecx+0x30],eax
10053436:	add    esp,0xc
10053439:	mov    DWORD PTR [edi],0xb
1005343f:	jmp    0x1005414e
10053444:	cmp    esi,0x20
10053447:	jae    0x10053478
10053449:	lea    esp,[esp+0x0]
10053450:	test   edx,edx
10053452:	je     0x100541ac
10053458:	movzx  eax,BYTE PTR [ebp+0x0]
1005345c:	mov    ecx,esi
1005345e:	shl    eax,cl
10053460:	sub    edx,0x1
10053463:	add    esi,0x8
10053466:	add    ebp,0x1
10053469:	add    ebx,eax
1005346b:	cmp    esi,0x20
1005346e:	mov    DWORD PTR [esp+0x10],edx
10053472:	mov    DWORD PTR [esp+0x18],ebx
10053476:	jb     0x10053450
10053478:	mov    ecx,ebx
1005347a:	and    ecx,0xff00
10053480:	mov    eax,ebx
10053482:	shl    eax,0x10
10053485:	add    ecx,eax
10053487:	xor    eax,eax
10053489:	mov    ah,BYTE PTR [esp+0x1a]
1005348d:	shl    ecx,0x8
10053490:	shr    ebx,0x18
10053493:	add    ecx,eax
10053495:	lea    eax,[ecx+ebx*1]
10053498:	mov    ecx,DWORD PTR [esp+0x40]
1005349c:	mov    DWORD PTR [edi+0x18],eax
1005349f:	mov    DWORD PTR [ecx+0x30],eax
100534a2:	xor    ebx,ebx
100534a4:	xor    esi,esi
100534a6:	mov    DWORD PTR [edi],0xa
100534ac:	cmp    DWORD PTR [edi+0xc],0x0
100534b0:	je     0x10054166
100534b6:	push   0x0
100534b8:	push   0x0
100534ba:	push   0x0
100534bc:	call   0x10054390
100534c1:	mov    edx,DWORD PTR [esp+0x4c]
100534c5:	mov    DWORD PTR [edi+0x18],eax
100534c8:	mov    DWORD PTR [edx+0x30],eax
100534cb:	mov    edx,DWORD PTR [esp+0x1c]
100534cf:	add    esp,0xc
100534d2:	mov    DWORD PTR [edi],0xb
100534d8:	cmp    DWORD PTR [esp+0x44],0x5
100534dd:	je     0x100541ac
100534e3:	cmp    DWORD PTR [edi+0x4],0x0
100534e7:	je     0x10053501
100534e9:	mov    ecx,esi
100534eb:	and    ecx,0x7
100534ee:	shr    ebx,cl
100534f0:	sub    esi,ecx
100534f2:	mov    DWORD PTR [edi],0x18
100534f8:	mov    DWORD PTR [esp+0x18],ebx
100534fc:	jmp    0x1005414e
10053501:	cmp    esi,0x3
10053504:	jae    0x1005352a
10053506:	test   edx,edx
10053508:	je     0x100541ac
1005350e:	movzx  eax,BYTE PTR [ebp+0x0]
10053512:	mov    ecx,esi
10053514:	shl    eax,cl
10053516:	sub    edx,0x1
10053519:	add    esi,0x8
1005351c:	add    ebp,0x1
1005351f:	add    ebx,eax
10053521:	cmp    esi,0x3
10053524:	mov    DWORD PTR [esp+0x10],edx
10053528:	jb     0x10053506
1005352a:	mov    ecx,ebx
1005352c:	shr    ebx,1
1005352e:	mov    eax,ebx
10053530:	and    ecx,0x1
10053533:	and    eax,0x3
10053536:	sub    esi,0x1
10053539:	cmp    eax,0x3
1005353c:	mov    DWORD PTR [edi+0x4],ecx
1005353f:	ja     0x1005359f
10053541:	jmp    DWORD PTR [eax*4+0x1005432c]
10053548:	shr    ebx,0x2
1005354b:	mov    DWORD PTR [edi],0xd
10053551:	mov    DWORD PTR [esp+0x18],ebx
10053555:	sub    esi,0x2
10053558:	jmp    0x1005414e
1005355d:	mov    eax,edi
1005355f:	call   0x10052c40
10053564:	shr    ebx,0x2
10053567:	mov    DWORD PTR [edi],0x12
1005356d:	mov    DWORD PTR [esp+0x18],ebx
10053571:	sub    esi,0x2
10053574:	jmp    0x1005414e
10053579:	shr    ebx,0x2
1005357c:	mov    DWORD PTR [edi],0xf
10053582:	mov    DWORD PTR [esp+0x18],ebx
10053586:	sub    esi,0x2
10053589:	jmp    0x1005414e
1005358e:	mov    eax,DWORD PTR [esp+0x40]
10053592:	mov    DWORD PTR [eax+0x18],0x100689bc
10053599:	mov    DWORD PTR [edi],0x1b
1005359f:	shr    ebx,0x2
100535a2:	mov    DWORD PTR [esp+0x18],ebx
100535a6:	sub    esi,0x2
100535a9:	jmp    0x1005414e
100535ae:	mov    ecx,esi
100535b0:	and    ecx,0x7
100535b3:	shr    ebx,cl
100535b5:	sub    esi,ecx
100535b7:	cmp    esi,0x20
100535ba:	mov    DWORD PTR [esp+0x18],ebx
100535be:	jae    0x100535e8
100535c0:	test   edx,edx
100535c2:	je     0x100541ac
100535c8:	movzx  eax,BYTE PTR [ebp+0x0]
100535cc:	mov    ecx,esi
100535ce:	shl    eax,cl
100535d0:	sub    edx,0x1
100535d3:	add    esi,0x8
100535d6:	add    ebp,0x1
100535d9:	add    ebx,eax
100535db:	cmp    esi,0x20
100535de:	mov    DWORD PTR [esp+0x10],edx
100535e2:	mov    DWORD PTR [esp+0x18],ebx
100535e6:	jb     0x100535c0
100535e8:	mov    ecx,ebx
100535ea:	mov    eax,ebx
100535ec:	not    ecx
100535ee:	and    eax,0xffff
100535f3:	shr    ecx,0x10
100535f6:	cmp    eax,ecx
100535f8:	je     0x1005360a
100535fa:	mov    eax,DWORD PTR [esp+0x40]
100535fe:	mov    DWORD PTR [eax+0x18],0x1006899c
10053605:	jmp    0x10054148
1005360a:	xor    ebx,ebx
1005360c:	mov    DWORD PTR [edi+0x40],eax
1005360f:	mov    DWORD PTR [esp+0x18],ebx
10053613:	xor    esi,esi
10053615:	mov    DWORD PTR [edi],0xe
1005361b:	mov    eax,DWORD PTR [edi+0x40]
1005361e:	test   eax,eax
10053620:	mov    DWORD PTR [esp+0x14],eax
10053624:	je     0x10053cdc
1005362a:	cmp    eax,edx
1005362c:	jbe    0x10053634
1005362e:	mov    eax,edx
10053630:	mov    DWORD PTR [esp+0x14],edx
10053634:	mov    ecx,DWORD PTR [esp+0x1c]
10053638:	cmp    eax,ecx
1005363a:	jbe    0x10053642
1005363c:	mov    eax,ecx
1005363e:	mov    DWORD PTR [esp+0x14],eax
10053642:	test   eax,eax
10053644:	je     0x100541ac
1005364a:	mov    ecx,DWORD PTR [esp+0x14]
1005364e:	mov    edx,DWORD PTR [esp+0x28]
10053652:	push   ecx
10053653:	push   ebp
10053654:	push   edx
10053655:	call   0x10045420
1005365a:	mov    eax,DWORD PTR [esp+0x20]
1005365e:	sub    DWORD PTR [esp+0x1c],eax
10053662:	sub    DWORD PTR [esp+0x28],eax
10053666:	add    DWORD PTR [esp+0x34],eax
1005366a:	mov    edx,DWORD PTR [esp+0x1c]
1005366e:	add    esp,0xc
10053671:	add    ebp,eax
10053673:	sub    DWORD PTR [edi+0x40],eax
10053676:	jmp    0x1005414e
1005367b:	cmp    esi,0xe
1005367e:	jae    0x100536a4
10053680:	test   edx,edx
10053682:	je     0x100541ac
10053688:	movzx  eax,BYTE PTR [ebp+0x0]
1005368c:	mov    ecx,esi
1005368e:	shl    eax,cl
10053690:	sub    edx,0x1
10053693:	add    esi,0x8
10053696:	add    ebp,0x1
10053699:	add    ebx,eax
1005369b:	cmp    esi,0xe
1005369e:	mov    DWORD PTR [esp+0x10],edx
100536a2:	jb     0x10053680
100536a4:	mov    ecx,ebx
100536a6:	and    ecx,0x1f
100536a9:	shr    ebx,0x5
100536ac:	add    ecx,0x101
100536b2:	mov    eax,ebx
100536b4:	mov    DWORD PTR [edi+0x60],ecx
100536b7:	shr    ebx,0x5
100536ba:	mov    ecx,ebx
100536bc:	and    eax,0x1f
100536bf:	and    ecx,0xf
100536c2:	add    eax,0x1
100536c5:	add    ecx,0x4
100536c8:	shr    ebx,0x4
100536cb:	sub    esi,0xe
100536ce:	cmp    DWORD PTR [edi+0x60],0x11e
100536d5:	mov    DWORD PTR [edi+0x64],eax
100536d8:	mov    DWORD PTR [edi+0x5c],ecx
100536db:	mov    DWORD PTR [esp+0x18],ebx
100536df:	ja     0x100537d5
100536e5:	cmp    eax,0x1e
100536e8:	ja     0x100537d5
100536ee:	mov    DWORD PTR [edi+0x68],0x0
100536f5:	mov    DWORD PTR [edi],0x10
100536fb:	mov    ecx,DWORD PTR [edi+0x68]
100536fe:	cmp    ecx,DWORD PTR [edi+0x5c]
10053701:	jae    0x10053758
10053703:	cmp    esi,0x3
10053706:	jae    0x1005372c
10053708:	test   edx,edx
1005370a:	je     0x100541ac
10053710:	movzx  eax,BYTE PTR [ebp+0x0]
10053714:	mov    ecx,esi
10053716:	shl    eax,cl
10053718:	sub    edx,0x1
1005371b:	add    esi,0x8
1005371e:	add    ebp,0x1
10053721:	add    ebx,eax
10053723:	cmp    esi,0x3
10053726:	mov    DWORD PTR [esp+0x10],edx
1005372a:	jb     0x10053708
1005372c:	mov    eax,DWORD PTR [edi+0x68]
1005372f:	movzx  eax,WORD PTR [eax*2+0x10068860]
10053737:	movzx  ecx,bl
1005373a:	and    ecx,0x7
1005373d:	mov    WORD PTR [edi+eax*2+0x70],cx
10053742:	add    DWORD PTR [edi+0x68],0x1
10053746:	mov    ecx,DWORD PTR [edi+0x68]
10053749:	shr    ebx,0x3
1005374c:	sub    esi,0x3
1005374f:	cmp    ecx,DWORD PTR [edi+0x5c]
10053752:	mov    DWORD PTR [esp+0x18],ebx
10053756:	jb     0x10053703
10053758:	cmp    DWORD PTR [edi+0x68],0x13
1005375c:	jae    0x10053789
1005375e:	mov    ecx,0x1
10053763:	xor    eax,eax
10053765:	jmp    0x10053770
10053767:	lea    esp,[esp+0x0]
1005376e:	mov    edi,edi
10053770:	mov    edx,DWORD PTR [edi+0x68]
10053773:	movzx  edx,WORD PTR [edx*2+0x10068860]
1005377b:	mov    WORD PTR [edi+edx*2+0x70],ax
10053780:	add    DWORD PTR [edi+0x68],ecx
10053783:	cmp    DWORD PTR [edi+0x68],0x13
10053787:	jb     0x10053770
10053789:	lea    eax,[edi+0x530]
1005378f:	lea    ecx,[edi+0x6c]
10053792:	mov    DWORD PTR [ecx],eax
10053794:	mov    DWORD PTR [edi+0x4c],eax
10053797:	lea    edx,[edi+0x2f0]
1005379d:	push   edx
1005379e:	lea    eax,[edi+0x54]
100537a1:	push   eax
100537a2:	push   ecx
100537a3:	mov    DWORD PTR [eax],0x7
100537a9:	push   0x13
100537ab:	lea    eax,[edi+0x70]
100537ae:	push   eax
100537af:	push   0x0
100537b1:	call   0x10056880
100537b6:	mov    edx,DWORD PTR [esp+0x28]
100537ba:	add    esp,0x18
100537bd:	test   eax,eax
100537bf:	mov    DWORD PTR [esp+0x30],eax
100537c3:	je     0x100537e5
100537c5:	mov    ecx,DWORD PTR [esp+0x40]
100537c9:	mov    DWORD PTR [ecx+0x18],0x10068980
100537d0:	jmp    0x10054148
100537d5:	mov    eax,DWORD PTR [esp+0x40]
100537d9:	mov    DWORD PTR [eax+0x18],0x1006895c
100537e0:	jmp    0x10054148
100537e5:	mov    DWORD PTR [edi+0x68],0x0
100537ec:	mov    DWORD PTR [edi],0x11
100537f2:	mov    eax,DWORD PTR [edi+0x64]
100537f5:	add    eax,DWORD PTR [edi+0x60]
100537f8:	cmp    DWORD PTR [edi+0x68],eax
100537fb:	jae    0x10053a39
10053801:	mov    ecx,DWORD PTR [edi+0x54]
10053804:	mov    eax,0x1
10053809:	shl    eax,cl
1005380b:	mov    ecx,DWORD PTR [edi+0x4c]
1005380e:	sub    eax,0x1
10053811:	and    eax,ebx
10053813:	mov    eax,DWORD PTR [ecx+eax*4]
10053816:	mov    ecx,eax
10053818:	shr    ecx,0x8
1005381b:	movzx  ecx,cl
1005381e:	cmp    ecx,esi
10053820:	mov    DWORD PTR [esp+0x14],eax
10053824:	jbe    0x1005386a
10053826:	test   edx,edx
10053828:	je     0x100541ac
1005382e:	movzx  eax,BYTE PTR [ebp+0x0]
10053832:	mov    ecx,esi
10053834:	shl    eax,cl
10053836:	mov    ecx,DWORD PTR [edi+0x54]
10053839:	sub    edx,0x1
1005383c:	add    esi,0x8
1005383f:	add    ebx,eax
10053841:	mov    eax,0x1
10053846:	shl    eax,cl
10053848:	mov    ecx,DWORD PTR [edi+0x4c]
1005384b:	add    ebp,0x1
1005384e:	mov    DWORD PTR [esp+0x10],edx
10053852:	sub    eax,0x1
10053855:	and    eax,ebx
10053857:	mov    eax,DWORD PTR [ecx+eax*4]
1005385a:	mov    ecx,eax
1005385c:	shr    ecx,0x8
1005385f:	movzx  ecx,cl
10053862:	cmp    ecx,esi
10053864:	mov    DWORD PTR [esp+0x14],eax
10053868:	ja     0x10053826
1005386a:	mov    ecx,eax
1005386c:	shr    ecx,0x10
1005386f:	cmp    ecx,0x10
10053872:	jae    0x100538cb
10053874:	mov    ecx,eax
10053876:	shr    ecx,0x8
10053879:	movzx  ecx,cl
1005387c:	cmp    esi,ecx
1005387e:	jae    0x100538aa
10053880:	test   edx,edx
10053882:	je     0x100541ac
10053888:	movzx  eax,BYTE PTR [ebp+0x0]
1005388c:	mov    ecx,esi
1005388e:	shl    eax,cl
10053890:	sub    edx,0x1
10053893:	add    esi,0x8
10053896:	add    ebp,0x1
10053899:	add    ebx,eax
1005389b:	mov    eax,DWORD PTR [esp+0x14]
1005389f:	movzx  ecx,ah
100538a2:	cmp    esi,ecx
100538a4:	mov    DWORD PTR [esp+0x10],edx
100538a8:	jb     0x10053880
100538aa:	movzx  ecx,ah
100538ad:	mov    eax,DWORD PTR [edi+0x68]
100538b0:	shr    ebx,cl
100538b2:	sub    esi,ecx
100538b4:	mov    cx,WORD PTR [esp+0x16]
100538b9:	mov    WORD PTR [edi+eax*2+0x70],cx
100538be:	add    DWORD PTR [edi+0x68],0x1
100538c2:	mov    DWORD PTR [esp+0x18],ebx
100538c6:	jmp    0x10053a2a
100538cb:	mov    cx,WORD PTR [esp+0x16]
100538d0:	cmp    cx,0x10
100538d4:	jne    0x10053941
100538d6:	movzx  ecx,ah
100538d9:	lea    eax,[ecx+0x2]
100538dc:	cmp    esi,eax
100538de:	mov    DWORD PTR [esp+0x24],ecx
100538e2:	jae    0x1005390e
100538e4:	test   edx,edx
100538e6:	je     0x100541ac
100538ec:	movzx  eax,BYTE PTR [ebp+0x0]
100538f0:	mov    ecx,esi
100538f2:	shl    eax,cl
100538f4:	mov    ecx,DWORD PTR [esp+0x24]
100538f8:	sub    edx,0x1
100538fb:	add    esi,0x8
100538fe:	add    ebx,eax
10053900:	lea    eax,[ecx+0x2]
10053903:	add    ebp,0x1
10053906:	cmp    esi,eax
10053908:	mov    DWORD PTR [esp+0x10],edx
1005390c:	jb     0x100538e4
1005390e:	mov    eax,DWORD PTR [edi+0x68]
10053911:	shr    ebx,cl
10053913:	sub    esi,ecx
10053915:	test   eax,eax
10053917:	mov    DWORD PTR [esp+0x18],ebx
1005391b:	je     0x10053a90
10053921:	movzx  ecx,WORD PTR [edi+eax*2+0x6e]
10053926:	mov    eax,ebx
10053928:	and    eax,0x3
1005392b:	add    eax,0x3
1005392e:	shr    ebx,0x2
10053931:	mov    DWORD PTR [esp+0x24],ecx
10053935:	mov    DWORD PTR [esp+0x14],eax
10053939:	sub    esi,0x2
1005393c:	jmp    0x100539f0
10053941:	cmp    cx,0x11
10053945:	movzx  ecx,ah
10053948:	mov    DWORD PTR [esp+0x24],ecx
1005394c:	jne    0x10053997
1005394e:	lea    eax,[ecx+0x3]
10053951:	cmp    esi,eax
10053953:	jae    0x1005397f
10053955:	test   edx,edx
10053957:	je     0x100541ac
1005395d:	movzx  eax,BYTE PTR [ebp+0x0]
10053961:	mov    ecx,esi
10053963:	shl    eax,cl
10053965:	mov    ecx,DWORD PTR [esp+0x24]
10053969:	sub    edx,0x1
1005396c:	add    esi,0x8
1005396f:	add    ebx,eax
10053971:	lea    eax,[ecx+0x3]
10053974:	add    ebp,0x1
10053977:	cmp    esi,eax
10053979:	mov    DWORD PTR [esp+0x10],edx
1005397d:	jb     0x10053955
1005397f:	shr    ebx,cl
10053981:	mov    eax,ebx
10053983:	and    eax,0x7
10053986:	add    eax,0x3
10053989:	mov    DWORD PTR [esp+0x14],eax
1005398d:	shr    ebx,0x3
10053990:	mov    eax,0xfffffffd
10053995:	jmp    0x100539e0
10053997:	lea    eax,[ecx+0x7]
1005399a:	cmp    esi,eax
1005399c:	jae    0x100539ca
1005399e:	mov    edi,edi
100539a0:	test   edx,edx
100539a2:	je     0x100541ac
100539a8:	movzx  eax,BYTE PTR [ebp+0x0]
100539ac:	mov    ecx,esi
100539ae:	shl    eax,cl
100539b0:	mov    ecx,DWORD PTR [esp+0x24]
100539b4:	sub    edx,0x1
100539b7:	add    esi,0x8
100539ba:	add    ebx,eax
100539bc:	lea    eax,[ecx+0x7]
100539bf:	add    ebp,0x1
100539c2:	cmp    esi,eax
100539c4:	mov    DWORD PTR [esp+0x10],edx
100539c8:	jb     0x100539a0
100539ca:	shr    ebx,cl
100539cc:	mov    eax,ebx
100539ce:	and    eax,0x7f
100539d1:	add    eax,0xb
100539d4:	mov    DWORD PTR [esp+0x14],eax
100539d8:	shr    ebx,0x7
100539db:	mov    eax,0xfffffff9
100539e0:	sub    eax,ecx
100539e2:	add    esi,eax
100539e4:	mov    eax,DWORD PTR [esp+0x14]
100539e8:	mov    DWORD PTR [esp+0x24],0x0
100539f0:	mov    ecx,DWORD PTR [edi+0x68]
100539f3:	add    ecx,eax
100539f5:	mov    eax,DWORD PTR [edi+0x64]
100539f8:	add    eax,DWORD PTR [edi+0x60]
100539fb:	mov    DWORD PTR [esp+0x18],ebx
100539ff:	cmp    ecx,eax
10053a01:	ja     0x10053aa0
10053a07:	cmp    DWORD PTR [esp+0x14],0x0
10053a0c:	je     0x10053a2a
10053a0e:	mov    eax,DWORD PTR [esp+0x24]
10053a12:	mov    ecx,DWORD PTR [edi+0x68]
10053a15:	sub    DWORD PTR [esp+0x14],0x1
10053a1a:	mov    WORD PTR [edi+ecx*2+0x70],ax
10053a1f:	add    DWORD PTR [edi+0x68],0x1
10053a23:	cmp    DWORD PTR [esp+0x14],0x0
10053a28:	jne    0x10053a12
10053a2a:	mov    eax,DWORD PTR [edi+0x64]
10053a2d:	add    eax,DWORD PTR [edi+0x60]
10053a30:	cmp    DWORD PTR [edi+0x68],eax
10053a33:	jb     0x10053801
10053a39:	cmp    DWORD PTR [edi],0x1b
10053a3c:	je     0x1005414e
10053a42:	lea    eax,[edi+0x530]
10053a48:	lea    ecx,[edi+0x6c]
10053a4b:	mov    DWORD PTR [ecx],eax
10053a4d:	lea    edx,[edi+0x2f0]
10053a53:	push   edx
10053a54:	mov    DWORD PTR [edi+0x4c],eax
10053a57:	lea    eax,[edi+0x54]
10053a5a:	push   eax
10053a5b:	push   ecx
10053a5c:	mov    ecx,DWORD PTR [edi+0x60]
10053a5f:	push   ecx
10053a60:	lea    edx,[edi+0x70]
10053a63:	push   edx
10053a64:	push   0x1
10053a66:	mov    DWORD PTR [eax],0x9
10053a6c:	call   0x10056880
10053a71:	add    esp,0x18
10053a74:	test   eax,eax
10053a76:	mov    DWORD PTR [esp+0x30],eax
10053a7a:	je     0x10053ab0
10053a7c:	mov    eax,DWORD PTR [esp+0x40]
10053a80:	mov    edx,DWORD PTR [esp+0x10]
10053a84:	mov    DWORD PTR [eax+0x18],0x10068940
10053a8b:	jmp    0x10054148
10053a90:	mov    ecx,DWORD PTR [esp+0x40]
10053a94:	mov    DWORD PTR [ecx+0x18],0x10068924
10053a9b:	jmp    0x10054148
10053aa0:	mov    eax,DWORD PTR [esp+0x40]
10053aa4:	mov    DWORD PTR [eax+0x18],0x10068924
10053aab:	jmp    0x10054148
10053ab0:	mov    edx,DWORD PTR [edi+0x6c]
10053ab3:	lea    ecx,[edi+0x6c]
10053ab6:	mov    DWORD PTR [edi+0x50],edx
10053ab9:	lea    edx,[edi+0x2f0]
10053abf:	push   edx
10053ac0:	lea    eax,[edi+0x58]
10053ac3:	push   eax
10053ac4:	push   ecx
10053ac5:	mov    ecx,DWORD PTR [edi+0x60]
10053ac8:	mov    DWORD PTR [eax],0x6
10053ace:	mov    eax,DWORD PTR [edi+0x64]
10053ad1:	push   eax
10053ad2:	lea    edx,[edi+ecx*2+0x70]
10053ad6:	push   edx
10053ad7:	push   0x2
10053ad9:	call   0x10056880
10053ade:	mov    edx,DWORD PTR [esp+0x28]
10053ae2:	add    esp,0x18
10053ae5:	test   eax,eax
10053ae7:	mov    DWORD PTR [esp+0x30],eax
10053aeb:	je     0x10053afd
10053aed:	mov    eax,DWORD PTR [esp+0x40]
10053af1:	mov    DWORD PTR [eax+0x18],0x1006890c
10053af8:	jmp    0x10054148
10053afd:	mov    DWORD PTR [edi],0x12
10053b03:	cmp    edx,0x6
10053b06:	jb     0x10053b71
10053b0c:	cmp    DWORD PTR [esp+0x1c],0x102
10053b14:	jb     0x10053b71
10053b16:	mov    eax,DWORD PTR [esp+0x40]
10053b1a:	mov    edx,DWORD PTR [esp+0x1c]
10053b1e:	mov    ecx,DWORD PTR [esp+0x28]
10053b22:	mov    DWORD PTR [eax+0x10],edx
10053b25:	mov    edx,DWORD PTR [esp+0x2c]
10053b29:	mov    DWORD PTR [eax+0xc],ecx
10053b2c:	mov    ecx,DWORD PTR [esp+0x10]
10053b30:	push   edx
10053b31:	mov    DWORD PTR [eax],ebp
10053b33:	mov    DWORD PTR [eax+0x4],ecx
10053b36:	push   eax
10053b37:	mov    DWORD PTR [edi+0x38],ebx
10053b3a:	mov    DWORD PTR [edi+0x3c],esi
10053b3d:	call   0x100563c0
10053b42:	mov    eax,DWORD PTR [esp+0x48]
10053b46:	mov    edx,DWORD PTR [eax+0x10]
10053b49:	mov    ecx,DWORD PTR [eax+0xc]
10053b4c:	mov    ebp,DWORD PTR [eax]
10053b4e:	mov    eax,DWORD PTR [eax+0x4]
10053b51:	mov    ebx,DWORD PTR [edi+0x38]
10053b54:	mov    esi,DWORD PTR [edi+0x3c]
10053b57:	mov    DWORD PTR [esp+0x24],edx
10053b5b:	add    esp,0x8
10053b5e:	mov    DWORD PTR [esp+0x28],ecx
10053b62:	mov    DWORD PTR [esp+0x10],eax
10053b66:	mov    DWORD PTR [esp+0x18],ebx
10053b6a:	mov    edx,eax
10053b6c:	jmp    0x1005414e
10053b71:	mov    ecx,DWORD PTR [edi+0x54]
10053b74:	mov    eax,0x1
10053b79:	shl    eax,cl
10053b7b:	sub    eax,0x1
10053b7e:	and    eax,ebx
10053b80:	mov    ecx,eax
10053b82:	mov    eax,DWORD PTR [edi+0x4c]
10053b85:	mov    eax,DWORD PTR [eax+ecx*4]
10053b88:	mov    ecx,eax
10053b8a:	shr    ecx,0x8
10053b8d:	movzx  ecx,cl
10053b90:	cmp    ecx,esi
10053b92:	mov    DWORD PTR [esp+0x14],eax
10053b96:	jbe    0x10053bdc
10053b98:	test   edx,edx
10053b9a:	je     0x100541ac
10053ba0:	movzx  eax,BYTE PTR [ebp+0x0]
10053ba4:	mov    ecx,esi
10053ba6:	shl    eax,cl
10053ba8:	mov    ecx,DWORD PTR [edi+0x54]
10053bab:	sub    edx,0x1
10053bae:	add    esi,0x8
10053bb1:	add    ebx,eax
10053bb3:	mov    eax,0x1
10053bb8:	shl    eax,cl
10053bba:	mov    ecx,DWORD PTR [edi+0x4c]
10053bbd:	add    ebp,0x1
10053bc0:	mov    DWORD PTR [esp+0x10],edx
10053bc4:	sub    eax,0x1
10053bc7:	and    eax,ebx
10053bc9:	mov    eax,DWORD PTR [ecx+eax*4]
10053bcc:	mov    ecx,eax
10053bce:	shr    ecx,0x8
10053bd1:	movzx  ecx,cl
10053bd4:	cmp    ecx,esi
10053bd6:	mov    DWORD PTR [esp+0x14],eax
10053bda:	ja     0x10053b98
10053bdc:	test   al,al
10053bde:	je     0x10053cad
10053be4:	test   al,0xf0
10053be6:	jne    0x10053cad
10053bec:	mov    ecx,eax
10053bee:	shr    ecx,0x8
10053bf1:	mov    DWORD PTR [esp+0x34],ecx
10053bf5:	movzx  ecx,cl
10053bf8:	mov    DWORD PTR [esp+0x24],ecx
10053bfc:	movzx  ecx,al
10053bff:	add    ecx,DWORD PTR [esp+0x24]
10053c03:	mov    DWORD PTR [esp+0x18],eax
10053c07:	mov    eax,0x1
10053c0c:	shl    eax,cl
10053c0e:	mov    ecx,DWORD PTR [esp+0x24]
10053c12:	sub    eax,0x1
10053c15:	and    eax,ebx
10053c17:	shr    eax,cl
10053c19:	mov    ecx,DWORD PTR [esp+0x14]
10053c1d:	shr    ecx,0x10
10053c20:	add    eax,ecx
10053c22:	mov    ecx,eax
10053c24:	mov    eax,DWORD PTR [edi+0x4c]
10053c27:	mov    eax,DWORD PTR [eax+ecx*4]
10053c2a:	movzx  ecx,BYTE PTR [esp+0x34]
10053c2f:	mov    DWORD PTR [esp+0x14],eax
10053c33:	shr    eax,0x8
10053c36:	movzx  eax,al
10053c39:	add    eax,ecx
10053c3b:	cmp    eax,esi
10053c3d:	jbe    0x10053ca0
10053c43:	test   edx,edx
10053c45:	je     0x100541ac
10053c4b:	movzx  eax,BYTE PTR [ebp+0x0]
10053c4f:	mov    ecx,esi
10053c51:	shl    eax,cl
10053c53:	mov    ecx,DWORD PTR [esp+0x18]
10053c57:	sub    edx,0x1
10053c5a:	add    esi,0x8
10053c5d:	add    ebx,eax
10053c5f:	movzx  eax,ch
10053c62:	add    ecx,eax
10053c64:	mov    DWORD PTR [esp+0x24],eax
10053c68:	mov    eax,0x1
10053c6d:	shl    eax,cl
10053c6f:	mov    ecx,DWORD PTR [esp+0x24]
10053c73:	add    ebp,0x1
10053c76:	mov    DWORD PTR [esp+0x10],edx
10053c7a:	sub    eax,0x1
10053c7d:	and    eax,ebx
10053c7f:	shr    eax,cl
10053c81:	movzx  ecx,WORD PTR [esp+0x1a]
10053c86:	add    eax,ecx
10053c88:	mov    ecx,DWORD PTR [edi+0x4c]
10053c8b:	mov    eax,DWORD PTR [ecx+eax*4]
10053c8e:	mov    DWORD PTR [esp+0x14],eax
10053c92:	shr    eax,0x8
10053c95:	movzx  eax,al
10053c98:	add    eax,DWORD PTR [esp+0x24]
10053c9c:	cmp    eax,esi
10053c9e:	ja     0x10053c43
10053ca0:	movzx  ecx,BYTE PTR [esp+0x19]
10053ca5:	mov    eax,DWORD PTR [esp+0x14]
10053ca9:	shr    ebx,cl
10053cab:	sub    esi,ecx
10053cad:	mov    ecx,eax
10053caf:	shr    ecx,0x8
10053cb2:	movzx  ecx,cl
10053cb5:	shr    ebx,cl
10053cb7:	sub    esi,ecx
10053cb9:	mov    DWORD PTR [esp+0x24],ecx
10053cbd:	mov    ecx,eax
10053cbf:	shr    ecx,0x10
10053cc2:	test   al,al
10053cc4:	mov    DWORD PTR [esp+0x18],ebx
10053cc8:	mov    DWORD PTR [edi+0x40],ecx
10053ccb:	jne    0x10053cd8
10053ccd:	mov    DWORD PTR [edi],0x17
10053cd3:	jmp    0x1005414e
10053cd8:	test   al,0x20
10053cda:	je     0x10053ce7
10053cdc:	mov    DWORD PTR [edi],0xb
10053ce2:	jmp    0x1005414e
10053ce7:	test   al,0x40
10053ce9:	je     0x10053cfb
10053ceb:	mov    eax,DWORD PTR [esp+0x40]
10053cef:	mov    DWORD PTR [eax+0x18],0x100688f0
10053cf6:	jmp    0x10054148
10053cfb:	and    eax,0xf
10053cfe:	mov    DWORD PTR [edi+0x48],eax
10053d01:	mov    DWORD PTR [edi],0x13
10053d07:	mov    eax,DWORD PTR [edi+0x48]
10053d0a:	test   eax,eax
10053d0c:	je     0x10053d4c
10053d0e:	cmp    esi,eax
10053d10:	jae    0x10053d36
10053d12:	test   edx,edx
10053d14:	je     0x100541ac
10053d1a:	movzx  eax,BYTE PTR [ebp+0x0]
10053d1e:	mov    ecx,esi
10053d20:	shl    eax,cl
10053d22:	sub    edx,0x1
10053d25:	add    esi,0x8
10053d28:	add    ebp,0x1
10053d2b:	add    ebx,eax
10053d2d:	cmp    esi,DWORD PTR [edi+0x48]
10053d30:	mov    DWORD PTR [esp+0x10],edx
10053d34:	jb     0x10053d12
10053d36:	mov    ecx,DWORD PTR [edi+0x48]
10053d39:	mov    eax,0x1
10053d3e:	shl    eax,cl
10053d40:	sub    eax,0x1
10053d43:	and    eax,ebx
10053d45:	add    DWORD PTR [edi+0x40],eax
10053d48:	shr    ebx,cl
10053d4a:	sub    esi,ecx
10053d4c:	mov    DWORD PTR [edi],0x14
10053d52:	mov    ecx,DWORD PTR [edi+0x58]
10053d55:	mov    eax,0x1
10053d5a:	shl    eax,cl
10053d5c:	sub    eax,0x1
10053d5f:	and    eax,ebx
10053d61:	mov    ecx,eax
10053d63:	mov    eax,DWORD PTR [edi+0x50]
10053d66:	mov    eax,DWORD PTR [eax+ecx*4]
10053d69:	mov    ecx,eax
10053d6b:	shr    ecx,0x8
10053d6e:	movzx  ecx,cl
10053d71:	cmp    ecx,esi
10053d73:	mov    DWORD PTR [esp+0x14],eax
10053d77:	jbe    0x10053dc4
10053d79:	lea    esp,[esp+0x0]
10053d80:	test   edx,edx
10053d82:	je     0x100541ac
10053d88:	movzx  eax,BYTE PTR [ebp+0x0]
10053d8c:	mov    ecx,esi
10053d8e:	shl    eax,cl
10053d90:	mov    ecx,DWORD PTR [edi+0x58]
10053d93:	sub    edx,0x1
10053d96:	add    esi,0x8
10053d99:	add    ebx,eax
10053d9b:	mov    eax,0x1
10053da0:	shl    eax,cl
10053da2:	mov    ecx,DWORD PTR [edi+0x50]
10053da5:	add    ebp,0x1
10053da8:	mov    DWORD PTR [esp+0x10],edx
10053dac:	sub    eax,0x1
10053daf:	and    eax,ebx
10053db1:	mov    eax,DWORD PTR [ecx+eax*4]
10053db4:	mov    ecx,eax
10053db6:	shr    ecx,0x8
10053db9:	movzx  ecx,cl
10053dbc:	cmp    ecx,esi
10053dbe:	mov    DWORD PTR [esp+0x14],eax
10053dc2:	ja     0x10053d80
10053dc4:	test   al,0xf0
10053dc6:	jne    0x10053e8d
10053dcc:	mov    ecx,eax
10053dce:	shr    ecx,0x8
10053dd1:	mov    DWORD PTR [esp+0x34],ecx
10053dd5:	movzx  ecx,cl
10053dd8:	mov    DWORD PTR [esp+0x24],ecx
10053ddc:	movzx  ecx,al
10053ddf:	add    ecx,DWORD PTR [esp+0x24]
10053de3:	mov    DWORD PTR [esp+0x18],eax
10053de7:	mov    eax,0x1
10053dec:	shl    eax,cl
10053dee:	mov    ecx,DWORD PTR [esp+0x24]
10053df2:	sub    eax,0x1
10053df5:	and    eax,ebx
10053df7:	shr    eax,cl
10053df9:	mov    ecx,DWORD PTR [esp+0x14]
10053dfd:	shr    ecx,0x10
10053e00:	add    eax,ecx
10053e02:	mov    ecx,eax
10053e04:	mov    eax,DWORD PTR [edi+0x50]
10053e07:	mov    eax,DWORD PTR [eax+ecx*4]
10053e0a:	movzx  ecx,BYTE PTR [esp+0x34]
10053e0f:	mov    DWORD PTR [esp+0x14],eax
10053e13:	shr    eax,0x8
10053e16:	movzx  eax,al
10053e19:	add    eax,ecx
10053e1b:	cmp    eax,esi
10053e1d:	jbe    0x10053e80
10053e23:	test   edx,edx
10053e25:	je     0x100541ac
10053e2b:	movzx  eax,BYTE PTR [ebp+0x0]
10053e2f:	mov    ecx,esi
10053e31:	shl    eax,cl
10053e33:	mov    ecx,DWORD PTR [esp+0x18]
10053e37:	sub    edx,0x1
10053e3a:	add    esi,0x8
10053e3d:	add    ebx,eax
10053e3f:	movzx  eax,ch
10053e42:	add    ecx,eax
10053e44:	mov    DWORD PTR [esp+0x24],eax
10053e48:	mov    eax,0x1
10053e4d:	shl    eax,cl
10053e4f:	mov    ecx,DWORD PTR [esp+0x24]
10053e53:	add    ebp,0x1
10053e56:	mov    DWORD PTR [esp+0x10],edx
10053e5a:	sub    eax,0x1
10053e5d:	and    eax,ebx
10053e5f:	shr    eax,cl
10053e61:	movzx  ecx,WORD PTR [esp+0x1a]
10053e66:	add    eax,ecx
10053e68:	mov    ecx,DWORD PTR [edi+0x50]
10053e6b:	mov    eax,DWORD PTR [ecx+eax*4]
10053e6e:	mov    DWORD PTR [esp+0x14],eax
10053e72:	shr    eax,0x8
10053e75:	movzx  eax,al
10053e78:	add    eax,DWORD PTR [esp+0x24]
10053e7c:	cmp    eax,esi
10053e7e:	ja     0x10053e23
10053e80:	movzx  ecx,BYTE PTR [esp+0x19]
10053e85:	mov    eax,DWORD PTR [esp+0x14]
10053e89:	shr    ebx,cl
10053e8b:	sub    esi,ecx
10053e8d:	mov    ecx,eax
10053e8f:	shr    ecx,0x8
10053e92:	movzx  ecx,cl
10053e95:	shr    ebx,cl
10053e97:	sub    esi,ecx
10053e99:	test   al,0x40
10053e9b:	mov    DWORD PTR [esp+0x24],ecx
10053e9f:	mov    DWORD PTR [esp+0x18],ebx
10053ea3:	je     0x10053eb5
10053ea5:	mov    eax,DWORD PTR [esp+0x40]
10053ea9:	mov    DWORD PTR [eax+0x18],0x100688d8
10053eb0:	jmp    0x10054148
10053eb5:	mov    ecx,eax
10053eb7:	shr    ecx,0x10
10053eba:	and    eax,0xf
10053ebd:	mov    DWORD PTR [edi+0x44],ecx
10053ec0:	mov    DWORD PTR [edi+0x48],eax
10053ec3:	mov    DWORD PTR [edi],0x15
10053ec9:	mov    eax,DWORD PTR [edi+0x48]
10053ecc:	test   eax,eax
10053ece:	je     0x10053f12
10053ed0:	cmp    esi,eax
10053ed2:	jae    0x10053ef8
10053ed4:	test   edx,edx
10053ed6:	je     0x100541ac
10053edc:	movzx  eax,BYTE PTR [ebp+0x0]
10053ee0:	mov    ecx,esi
10053ee2:	shl    eax,cl
10053ee4:	sub    edx,0x1
10053ee7:	add    esi,0x8
10053eea:	add    ebp,0x1
10053eed:	add    ebx,eax
10053eef:	cmp    esi,DWORD PTR [edi+0x48]
10053ef2:	mov    DWORD PTR [esp+0x10],edx
10053ef6:	jb     0x10053ed4
10053ef8:	mov    ecx,DWORD PTR [edi+0x48]
10053efb:	mov    eax,0x1
10053f00:	shl    eax,cl
10053f02:	sub    eax,0x1
10053f05:	and    eax,ebx
10053f07:	add    DWORD PTR [edi+0x44],eax
10053f0a:	shr    ebx,cl
10053f0c:	sub    esi,ecx
10053f0e:	mov    DWORD PTR [esp+0x18],ebx
10053f12:	mov    ecx,DWORD PTR [edi+0x2c]
10053f15:	sub    ecx,DWORD PTR [esp+0x1c]
10053f19:	add    ecx,DWORD PTR [esp+0x2c]
10053f1d:	cmp    DWORD PTR [edi+0x44],ecx
10053f20:	jbe    0x10053f32
10053f22:	mov    eax,DWORD PTR [esp+0x40]
10053f26:	mov    DWORD PTR [eax+0x18],0x100688b8
10053f2d:	jmp    0x10054148
10053f32:	mov    DWORD PTR [edi],0x16
10053f38:	cmp    DWORD PTR [esp+0x1c],0x0
10053f3d:	je     0x100541ac
10053f43:	mov    ecx,DWORD PTR [esp+0x2c]
10053f47:	sub    ecx,DWORD PTR [esp+0x1c]
10053f4b:	mov    eax,DWORD PTR [edi+0x44]
10053f4e:	cmp    eax,ecx
10053f50:	jbe    0x10053f8e
10053f52:	sub    eax,ecx
10053f54:	mov    ecx,DWORD PTR [edi+0x30]
10053f57:	cmp    eax,ecx
10053f59:	mov    DWORD PTR [esp+0x14],eax
10053f5d:	jbe    0x10053f6f
10053f5f:	sub    eax,ecx
10053f61:	mov    ecx,DWORD PTR [edi+0x34]
10053f64:	add    ecx,DWORD PTR [edi+0x28]
10053f67:	mov    DWORD PTR [esp+0x14],eax
10053f6b:	sub    ecx,eax
10053f6d:	jmp    0x10053f7b
10053f6f:	mov    ecx,DWORD PTR [edi+0x34]
10053f72:	sub    ecx,eax
10053f74:	add    ecx,DWORD PTR [edi+0x30]
10053f77:	mov    eax,DWORD PTR [esp+0x14]
10053f7b:	mov    DWORD PTR [esp+0x24],ecx
10053f7f:	mov    ecx,DWORD PTR [edi+0x40]
10053f82:	cmp    eax,ecx
10053f84:	mov    DWORD PTR [esp+0x34],ecx
10053f88:	jbe    0x10053fa3
10053f8a:	mov    eax,ecx
10053f8c:	jmp    0x10053f9f
10053f8e:	mov    ecx,DWORD PTR [esp+0x28]
10053f92:	sub    ecx,eax
10053f94:	mov    eax,DWORD PTR [edi+0x40]
10053f97:	mov    DWORD PTR [esp+0x24],ecx
10053f9b:	mov    DWORD PTR [esp+0x34],eax
10053f9f:	mov    DWORD PTR [esp+0x14],eax
10053fa3:	mov    ecx,DWORD PTR [esp+0x1c]
10053fa7:	cmp    eax,ecx
10053fa9:	jbe    0x10053fb1
10053fab:	mov    eax,ecx
10053fad:	mov    DWORD PTR [esp+0x14],eax
10053fb1:	sub    ecx,eax
10053fb3:	mov    DWORD PTR [esp+0x1c],ecx
10053fb7:	mov    ecx,DWORD PTR [esp+0x34]
10053fbb:	sub    ecx,eax
10053fbd:	mov    eax,DWORD PTR [esp+0x28]
10053fc1:	mov    DWORD PTR [edi+0x40],ecx
10053fc4:	mov    ecx,DWORD PTR [esp+0x24]
10053fc8:	mov    cl,BYTE PTR [ecx]
10053fca:	add    DWORD PTR [esp+0x24],0x1
10053fcf:	mov    BYTE PTR [eax],cl
10053fd1:	add    eax,0x1
10053fd4:	sub    DWORD PTR [esp+0x14],0x1
10053fd9:	jne    0x10053fc4
10053fdb:	cmp    DWORD PTR [edi+0x40],0x0
10053fdf:	mov    DWORD PTR [esp+0x28],eax
10053fe3:	jne    0x1005414e
10053fe9:	mov    DWORD PTR [edi],0x12
10053fef:	jmp    0x1005414e
10053ff4:	cmp    DWORD PTR [esp+0x1c],0x0
10053ff9:	je     0x100541ac
10053fff:	mov    eax,DWORD PTR [esp+0x28]
10054003:	mov    cl,BYTE PTR [edi+0x40]
10054006:	mov    BYTE PTR [eax],cl
10054008:	add    eax,0x1
1005400b:	sub    DWORD PTR [esp+0x1c],0x1
10054010:	mov    DWORD PTR [esp+0x28],eax
10054014:	mov    DWORD PTR [edi],0x12
1005401a:	jmp    0x1005414e
1005401f:	cmp    DWORD PTR [edi+0x8],0x0
10054023:	je     0x100540ec
10054029:	cmp    esi,0x20
1005402c:	jae    0x10054058
1005402e:	mov    edi,edi
10054030:	test   edx,edx
10054032:	je     0x100541ac
10054038:	movzx  eax,BYTE PTR [ebp+0x0]
1005403c:	mov    ecx,esi
1005403e:	shl    eax,cl
10054040:	sub    edx,0x1
10054043:	add    esi,0x8
10054046:	add    ebp,0x1
10054049:	add    ebx,eax
1005404b:	cmp    esi,0x20
1005404e:	mov    DWORD PTR [esp+0x10],edx
10054052:	mov    DWORD PTR [esp+0x18],ebx
10054056:	jb     0x10054030
10054058:	mov    eax,DWORD PTR [esp+0x2c]
1005405c:	sub    eax,DWORD PTR [esp+0x1c]
10054060:	mov    ecx,DWORD PTR [esp+0x40]
10054064:	add    DWORD PTR [ecx+0x14],eax
10054067:	add    DWORD PTR [edi+0x1c],eax
1005406a:	test   eax,eax
1005406c:	mov    DWORD PTR [esp+0x2c],eax
10054070:	je     0x100540a1
10054072:	mov    ecx,DWORD PTR [esp+0x28]
10054076:	mov    edx,DWORD PTR [edi+0x18]
10054079:	push   eax
1005407a:	sub    ecx,eax
1005407c:	cmp    DWORD PTR [edi+0x10],0x0
10054080:	push   ecx
10054081:	push   edx
10054082:	je     0x1005408b
10054084:	call   0x10056370
10054089:	jmp    0x10054090
1005408b:	call   0x10054390
10054090:	mov    ecx,DWORD PTR [esp+0x4c]
10054094:	mov    edx,DWORD PTR [esp+0x1c]
10054098:	mov    DWORD PTR [edi+0x18],eax
1005409b:	add    esp,0xc
1005409e:	mov    DWORD PTR [ecx+0x30],eax
100540a1:	cmp    DWORD PTR [edi+0x10],0x0
100540a5:	mov    eax,DWORD PTR [esp+0x1c]
100540a9:	mov    DWORD PTR [esp+0x2c],eax
100540ad:	mov    eax,ebx
100540af:	jne    0x100540cf
100540b1:	and    eax,0xff00
100540b6:	mov    ecx,ebx
100540b8:	shl    ecx,0x10
100540bb:	add    eax,ecx
100540bd:	xor    ecx,ecx
100540bf:	mov    ch,BYTE PTR [esp+0x1a]
100540c3:	shl    eax,0x8
100540c6:	add    eax,ecx
100540c8:	mov    ecx,ebx
100540ca:	shr    ecx,0x18
100540cd:	add    eax,ecx
100540cf:	cmp    eax,DWORD PTR [edi+0x18]
100540d2:	je     0x100540e4
100540d4:	mov    eax,DWORD PTR [esp+0x40]
100540d8:	mov    DWORD PTR [eax+0x18],0x100688a0
100540df:	jmp    0x10054148
100540e4:	xor    ebx,ebx
100540e6:	mov    DWORD PTR [esp+0x18],ebx
100540ea:	xor    esi,esi
100540ec:	mov    DWORD PTR [edi],0x19
100540f2:	cmp    DWORD PTR [edi+0x8],0x0
100540f6:	je     0x10054194
100540fc:	cmp    DWORD PTR [edi+0x10],0x0
10054100:	je     0x10054194
10054106:	cmp    esi,0x20
10054109:	jae    0x10054138
1005410b:	jmp    0x10054110
1005410d:	lea    ecx,[ecx+0x0]
10054110:	test   edx,edx
10054112:	je     0x100541ac
10054118:	movzx  eax,BYTE PTR [ebp+0x0]
1005411c:	mov    ecx,esi
1005411e:	shl    eax,cl
10054120:	sub    edx,0x1
10054123:	add    esi,0x8
10054126:	add    ebp,0x1
10054129:	add    ebx,eax
1005412b:	cmp    esi,0x20
1005412e:	mov    DWORD PTR [esp+0x10],edx
10054132:	mov    DWORD PTR [esp+0x18],ebx
10054136:	jb     0x10054110
10054138:	cmp    ebx,DWORD PTR [edi+0x1c]
1005413b:	je     0x10054190
1005413d:	mov    ecx,DWORD PTR [esp+0x40]
10054141:	mov    DWORD PTR [ecx+0x18],0x10068888
10054148:	mov    DWORD PTR [edi],0x1b
1005414e:	mov    eax,DWORD PTR [edi]
10054150:	cmp    eax,0x1c
10054153:	jbe    0x10052dd0
10054159:	mov    eax,0xfffffffe
1005415e:	pop    esi
1005415f:	pop    ebp
10054160:	pop    ebx
10054161:	pop    edi
10054162:	add    esp,0x2c
10054165:	ret    
10054166:	mov    eax,DWORD PTR [esp+0x40]
1005416a:	mov    ecx,DWORD PTR [esp+0x28]
1005416e:	mov    DWORD PTR [eax+0xc],ecx
10054171:	mov    ecx,DWORD PTR [esp+0x1c]
10054175:	mov    DWORD PTR [eax],ebp
10054177:	mov    DWORD PTR [eax+0x10],ecx
1005417a:	mov    DWORD PTR [eax+0x4],edx
1005417d:	mov    DWORD PTR [edi+0x3c],esi
10054180:	pop    esi
10054181:	pop    ebp
10054182:	mov    DWORD PTR [edi+0x38],ebx
10054185:	pop    ebx
10054186:	mov    eax,0x2
1005418b:	pop    edi
1005418c:	add    esp,0x2c
1005418f:	ret    
10054190:	xor    ebx,ebx
10054192:	xor    esi,esi
10054194:	mov    DWORD PTR [edi],0x1a
1005419a:	mov    DWORD PTR [esp+0x30],0x1
100541a2:	jmp    0x100541ac
100541a4:	mov    DWORD PTR [esp+0x30],0xfffffffd
100541ac:	mov    eax,DWORD PTR [esp+0x40]
100541b0:	mov    ecx,DWORD PTR [esp+0x28]
100541b4:	mov    DWORD PTR [eax+0xc],ecx
100541b7:	mov    ecx,DWORD PTR [esp+0x1c]
100541bb:	mov    DWORD PTR [eax+0x10],ecx
100541be:	mov    DWORD PTR [eax],ebp
100541c0:	mov    DWORD PTR [eax+0x4],edx
100541c3:	cmp    DWORD PTR [edi+0x28],0x0
100541c7:	mov    DWORD PTR [edi+0x38],ebx
100541ca:	mov    DWORD PTR [edi+0x3c],esi
100541cd:	jne    0x100541dd
100541cf:	cmp    DWORD PTR [edi],0x18
100541d2:	jge    0x10054201
100541d4:	mov    edx,DWORD PTR [esp+0x2c]
100541d8:	cmp    edx,DWORD PTR [eax+0x10]
100541db:	je     0x10054201
100541dd:	mov    eax,DWORD PTR [esp+0x2c]
100541e1:	mov    ebx,DWORD PTR [esp+0x40]
100541e5:	call   0x10052c60
100541ea:	test   eax,eax
100541ec:	je     0x10054201
100541ee:	mov    DWORD PTR [edi],0x1c
100541f4:	pop    esi
100541f5:	pop    ebp
100541f6:	pop    ebx
100541f7:	mov    eax,0xfffffffc
100541fc:	pop    edi
100541fd:	add    esp,0x2c
10054200:	ret    
10054201:	mov    esi,DWORD PTR [esp+0x40]
10054205:	mov    ebp,DWORD PTR [esp+0x38]
10054209:	sub    ebp,DWORD PTR [esi+0x4]
1005420c:	mov    ebx,DWORD PTR [esp+0x2c]
10054210:	sub    ebx,DWORD PTR [esi+0x10]
10054213:	add    DWORD PTR [esi+0x8],ebp
10054216:	add    DWORD PTR [esi+0x14],ebx
10054219:	add    DWORD PTR [edi+0x1c],ebx
1005421c:	cmp    DWORD PTR [edi+0x8],0x0
10054220:	je     0x10054256
10054222:	test   ebx,ebx
10054224:	je     0x10054256
10054226:	cmp    DWORD PTR [edi+0x10],0x0
1005422a:	push   ebx
1005422b:	je     0x1005423e
1005422d:	mov    ecx,DWORD PTR [esi+0xc]
10054230:	mov    edx,DWORD PTR [edi+0x18]
10054233:	sub    ecx,ebx
10054235:	push   ecx
10054236:	push   edx
10054237:	call   0x10056370
1005423c:	jmp    0x1005424d
1005423e:	mov    eax,DWORD PTR [esi+0xc]
10054241:	mov    ecx,DWORD PTR [edi+0x18]
10054244:	sub    eax,ebx
10054246:	push   eax
10054247:	push   ecx
10054248:	call   0x10054390
1005424d:	mov    DWORD PTR [edi+0x18],eax
10054250:	add    esp,0xc
10054253:	mov    DWORD PTR [esi+0x30],eax
10054256:	mov    edx,DWORD PTR [edi+0x4]
10054259:	neg    edx
1005425b:	sbb    edx,edx
1005425d:	and    edx,0x40
10054260:	xor    eax,eax
10054262:	cmp    DWORD PTR [edi],0xb
10054265:	setne  al
10054268:	sub    eax,0x1
1005426b:	and    eax,0x80
10054270:	add    edx,eax
10054272:	add    edx,DWORD PTR [edi+0x3c]
10054275:	test   ebp,ebp
10054277:	mov    DWORD PTR [esi+0x2c],edx
1005427a:	jne    0x10054280
1005427c:	test   ebx,ebx
1005427e:	je     0x10054287
10054280:	cmp    DWORD PTR [esp+0x44],0x4
10054285:	jne    0x100542a0
10054287:	mov    eax,DWORD PTR [esp+0x30]
1005428b:	test   eax,eax
1005428d:	jne    0x1005415e
10054293:	pop    esi
10054294:	pop    ebp
10054295:	pop    ebx
10054296:	mov    eax,0xfffffffb
1005429b:	pop    edi
1005429c:	add    esp,0x2c
1005429f:	ret    
100542a0:	mov    eax,DWORD PTR [esp+0x30]
100542a4:	pop    esi
100542a5:	pop    ebp
100542a6:	pop    ebx
100542a7:	pop    edi
100542a8:	add    esp,0x2c
100542ab:	ret    
100542ac:	mov    eax,0xfffffffe
100542b1:	pop    edi
100542b2:	add    esp,0x2c
100542b5:	ret    
100542b6:	mov    edi,edi
100542b8:	xlat   BYTE PTR ds:[ebx]
100542b9:	sub    eax,0x2f451005
100542be:	add    eax,0x52ff310
100542c3:	adc    BYTE PTR [edx+0x30],dh
100542c6:	add    eax,0x530f410
100542cb:	adc    BYTE PTR [edi+0x31],bh
100542ce:	add    eax,0x5323b10
100542d3:	adc    bl,dh
100542d5:	xor    al,BYTE PTR ds:0x533aa10
100542db:	adc    BYTE PTR [esp+esi*1+0x5],al
100542df:	adc    BYTE PTR [esp+esi*1+0x34d81005],ch
100542e6:	add    eax,0x534e310
100542eb:	adc    BYTE PTR [esi+0x1b100535],ch
100542f1:	ss add eax,0x5367b10
100542f7:	adc    bl,bh
100542f9:	ss add eax,0x537f210
100542ff:	adc    BYTE PTR [ebx],al
10054301:	cmp    eax,DWORD PTR ds:0x53d0710
10054307:	adc    BYTE PTR [edx+0x3d],dl
1005430a:	add    eax,0x53ec910
1005430f:	adc    BYTE PTR [eax],bh
10054311:	aas    
10054312:	add    eax,0x53ff410
10054317:	adc    BYTE PTR [edi],bl
10054319:	inc    eax
1005431a:	add    eax,0x540f210
1005431f:	adc    BYTE PTR [edx-0x5beffabf],bl
10054325:	inc    ecx
10054326:	add    eax,0x541f410
1005432b:	adc    BYTE PTR [eax+0x35],cl
1005432e:	add    eax,0x5355d10
10054333:	adc    BYTE PTR [ecx+0x35],bh
10054336:	add    eax,0x5358e10
1005433b:	adc    ah,cl
1005433d:	int3   
1005433e:	int3   
1005433f:	int3   
10054340:	push   esi
10054341:	mov    esi,DWORD PTR [esp+0x8]
10054345:	test   esi,esi
10054347:	je     0x10054383
10054349:	mov    eax,DWORD PTR [esi+0x1c]
1005434c:	test   eax,eax
1005434e:	je     0x10054383
10054350:	mov    ecx,DWORD PTR [esi+0x24]
10054353:	test   ecx,ecx
10054355:	je     0x10054383
10054357:	mov    eax,DWORD PTR [eax+0x34]
1005435a:	test   eax,eax
1005435c:	je     0x10054368
1005435e:	push   eax
1005435f:	mov    eax,DWORD PTR [esi+0x28]
10054362:	push   eax
10054363:	call   ecx
10054365:	add    esp,0x8
10054368:	mov    ecx,DWORD PTR [esi+0x1c]
1005436b:	mov    edx,DWORD PTR [esi+0x28]
1005436e:	mov    eax,DWORD PTR [esi+0x24]
10054371:	push   ecx
10054372:	push   edx
10054373:	call   eax
10054375:	add    esp,0x8
10054378:	mov    DWORD PTR [esi+0x1c],0x0
1005437f:	xor    eax,eax
10054381:	pop    esi
10054382:	ret    
10054383:	mov    eax,0xfffffffe
10054388:	pop    esi
10054389:	ret    
1005438a:	int3   
1005438b:	int3   
1005438c:	int3   
1005438d:	int3   
1005438e:	int3   
1005438f:	int3   
10054390:	mov    ecx,DWORD PTR [esp+0x4]
10054394:	push   ebx
10054395:	mov    ebx,DWORD PTR [esp+0x10]
10054399:	push   edi
1005439a:	mov    edi,ecx
1005439c:	shr    edi,0x10
1005439f:	and    ecx,0xffff
100543a5:	cmp    ebx,0x1
100543a8:	jne    0x100543db
100543aa:	mov    eax,DWORD PTR [esp+0x10]
100543ae:	movzx  edx,BYTE PTR [eax]
100543b1:	add    ecx,edx
100543b3:	cmp    ecx,0xfff1
100543b9:	jb     0x100543c1
100543bb:	sub    ecx,0xfff1
100543c1:	add    edi,ecx
100543c3:	cmp    edi,0xfff1
100543c9:	jb     0x100543d1
100543cb:	sub    edi,0xfff1
100543d1:	mov    eax,edi
100543d3:	shl    eax,0x10
100543d6:	pop    edi
100543d7:	or     eax,ecx
100543d9:	pop    ebx
100543da:	ret    
100543db:	push   esi
100543dc:	mov    esi,DWORD PTR [esp+0x14]
100543e0:	test   esi,esi
100543e2:	jne    0x100543ed
100543e4:	pop    esi
100543e5:	pop    edi
100543e6:	mov    eax,0x1
100543eb:	pop    ebx
100543ec:	ret    
100543ed:	cmp    ebx,0x10
100543f0:	jae    0x10054431
100543f2:	test   ebx,ebx
100543f4:	je     0x10054407
100543f6:	movzx  eax,BYTE PTR [esi]
100543f9:	add    ecx,eax
100543fb:	sub    ebx,0x1
100543fe:	add    esi,0x1
10054401:	add    edi,ecx
10054403:	test   ebx,ebx
10054405:	jne    0x100543f6
10054407:	cmp    ecx,0xfff1
1005440d:	jb     0x10054415
1005440f:	sub    ecx,0xfff1
10054415:	mov    eax,0x80078071
1005441a:	mul    edi
1005441c:	shr    edx,0xf
1005441f:	mov    eax,edx
10054421:	shl    eax,0x4
10054424:	sub    eax,edx
10054426:	add    eax,edi
10054428:	pop    esi
10054429:	shl    eax,0x10
1005442c:	pop    edi
1005442d:	or     eax,ecx
1005442f:	pop    ebx
10054430:	ret    
10054431:	cmp    ebx,0x15b0
10054437:	jb     0x10054519
1005443d:	mov    eax,0x5e6ea9af
10054442:	mul    ebx
10054444:	push   ebp
10054445:	mov    ebp,edx
10054447:	shr    ebp,0xb
1005444a:	lea    ebx,[ebx+0x0]
10054450:	sub    ebx,0x15b0
10054456:	mov    eax,0x15b
1005445b:	jmp    0x10054460
1005445d:	lea    ecx,[ecx+0x0]
10054460:	movzx  edx,BYTE PTR [esi]
10054463:	add    ecx,edx
10054465:	movzx  edx,BYTE PTR [esi+0x1]
10054469:	add    edi,ecx
1005446b:	add    ecx,edx
1005446d:	movzx  edx,BYTE PTR [esi+0x2]
10054471:	add    edi,ecx
10054473:	add    ecx,edx
10054475:	movzx  edx,BYTE PTR [esi+0x3]
10054479:	add    edi,ecx
1005447b:	add    ecx,edx
1005447d:	movzx  edx,BYTE PTR [esi+0x4]
10054481:	add    edi,ecx
10054483:	add    ecx,edx
10054485:	movzx  edx,BYTE PTR [esi+0x5]
10054489:	add    edi,ecx
1005448b:	add    ecx,edx
1005448d:	movzx  edx,BYTE PTR [esi+0x6]
10054491:	add    edi,ecx
10054493:	add    ecx,edx
10054495:	movzx  edx,BYTE PTR [esi+0x7]
10054499:	add    edi,ecx
1005449b:	add    ecx,edx
1005449d:	movzx  edx,BYTE PTR [esi+0x8]
100544a1:	add    edi,ecx
100544a3:	add    ecx,edx
100544a5:	movzx  edx,BYTE PTR [esi+0x9]
100544a9:	add    edi,ecx
100544ab:	add    ecx,edx
100544ad:	movzx  edx,BYTE PTR [esi+0xa]
100544b1:	add    edi,ecx
100544b3:	add    ecx,edx
100544b5:	movzx  edx,BYTE PTR [esi+0xb]
100544b9:	add    edi,ecx
100544bb:	add    ecx,edx
100544bd:	movzx  edx,BYTE PTR [esi+0xc]
100544c1:	add    edi,ecx
100544c3:	add    ecx,edx
100544c5:	movzx  edx,BYTE PTR [esi+0xd]
100544c9:	add    edi,ecx
100544cb:	add    ecx,edx
100544cd:	movzx  edx,BYTE PTR [esi+0xe]
100544d1:	add    edi,ecx
100544d3:	add    ecx,edx
100544d5:	movzx  edx,BYTE PTR [esi+0xf]
100544d9:	add    edi,ecx
100544db:	add    ecx,edx
100544dd:	add    edi,ecx
100544df:	add    esi,0x10
100544e2:	sub    eax,0x1
100544e5:	jne    0x10054460
100544eb:	mov    eax,0x80078071
100544f0:	mul    ecx
100544f2:	shr    edx,0xf
100544f5:	imul   edx,edx,0xffff000f
100544fb:	add    ecx,edx
100544fd:	mov    eax,0x80078071
10054502:	mul    edi
10054504:	shr    edx,0xf
10054507:	imul   edx,edx,0xffff000f
1005450d:	add    edi,edx
1005450f:	sub    ebp,0x1
10054512:	jne    0x10054450
10054518:	pop    ebp
10054519:	test   ebx,ebx
1005451b:	je     0x100545f7
10054521:	cmp    ebx,0x10
10054524:	jb     0x100545be
1005452a:	mov    eax,ebx
1005452c:	shr    eax,0x4
1005452f:	nop
10054530:	movzx  edx,BYTE PTR [esi]
10054533:	add    ecx,edx
10054535:	movzx  edx,BYTE PTR [esi+0x1]
10054539:	add    edi,ecx
1005453b:	add    ecx,edx
1005453d:	movzx  edx,BYTE PTR [esi+0x2]
10054541:	add    edi,ecx
10054543:	add    ecx,edx
10054545:	movzx  edx,BYTE PTR [esi+0x3]
10054549:	add    edi,ecx
1005454b:	add    ecx,edx
1005454d:	movzx  edx,BYTE PTR [esi+0x4]
10054551:	add    edi,ecx
10054553:	add    ecx,edx
10054555:	movzx  edx,BYTE PTR [esi+0x5]
10054559:	add    edi,ecx
1005455b:	add    ecx,edx
1005455d:	movzx  edx,BYTE PTR [esi+0x6]
10054561:	add    edi,ecx
10054563:	add    ecx,edx
10054565:	movzx  edx,BYTE PTR [esi+0x7]
10054569:	add    edi,ecx
1005456b:	add    ecx,edx
1005456d:	movzx  edx,BYTE PTR [esi+0x8]
10054571:	add    edi,ecx
10054573:	add    ecx,edx
10054575:	movzx  edx,BYTE PTR [esi+0x9]
10054579:	add    edi,ecx
1005457b:	add    ecx,edx
1005457d:	movzx  edx,BYTE PTR [esi+0xa]
10054581:	add    edi,ecx
10054583:	add    ecx,edx
10054585:	movzx  edx,BYTE PTR [esi+0xb]
10054589:	add    edi,ecx
1005458b:	add    ecx,edx
1005458d:	movzx  edx,BYTE PTR [esi+0xc]
10054591:	add    edi,ecx
10054593:	add    ecx,edx
10054595:	movzx  edx,BYTE PTR [esi+0xd]
10054599:	add    edi,ecx
1005459b:	add    ecx,edx
1005459d:	movzx  edx,BYTE PTR [esi+0xe]
100545a1:	add    edi,ecx
100545a3:	add    ecx,edx
100545a5:	movzx  edx,BYTE PTR [esi+0xf]
100545a9:	add    edi,ecx
100545ab:	add    ecx,edx
100545ad:	sub    ebx,0x10
100545b0:	add    edi,ecx
100545b2:	add    esi,0x10
100545b5:	sub    eax,0x1
100545b8:	jne    0x10054530
100545be:	test   ebx,ebx
100545c0:	je     0x100545d3
100545c2:	movzx  eax,BYTE PTR [esi]
100545c5:	add    ecx,eax
100545c7:	sub    ebx,0x1
100545ca:	add    esi,0x1
100545cd:	add    edi,ecx
100545cf:	test   ebx,ebx
100545d1:	jne    0x100545c2
100545d3:	mov    eax,0x80078071
100545d8:	mul    ecx
100545da:	shr    edx,0xf
100545dd:	imul   edx,edx,0xffff000f
100545e3:	add    ecx,edx
100545e5:	mov    eax,0x80078071
100545ea:	mul    edi
100545ec:	shr    edx,0xf
100545ef:	imul   edx,edx,0xffff000f
100545f5:	add    edi,edx
100545f7:	mov    eax,edi
100545f9:	pop    esi
100545fa:	shl    eax,0x10
100545fd:	pop    edi
100545fe:	or     eax,ecx
10054600:	pop    ebx
10054601:	ret    
10054602:	int3   
10054603:	int3   
10054604:	int3   
10054605:	int3   
10054606:	int3   
10054607:	int3   
10054608:	int3   
10054609:	int3   
1005460a:	int3   
1005460b:	int3   
1005460c:	int3   
1005460d:	int3   
1005460e:	int3   
1005460f:	int3   
10054610:	push   esi
10054611:	lea    eax,[edx+0x94]
10054617:	mov    ecx,0x11e
1005461c:	xor    esi,esi
1005461e:	mov    edi,edi
10054620:	mov    WORD PTR [eax],si
10054623:	add    eax,0x4
10054626:	sub    ecx,0x1
10054629:	jne    0x10054620
1005462b:	lea    eax,[edx+0x988]
10054631:	mov    ecx,0x1e
10054636:	mov    WORD PTR [eax],si
10054639:	add    eax,0x4
1005463c:	sub    ecx,0x1
1005463f:	jne    0x10054636
10054641:	lea    eax,[edx+0xa7c]
10054647:	mov    ecx,0x13
1005464c:	lea    esp,[esp+0x0]
10054650:	mov    WORD PTR [eax],si
10054653:	add    eax,0x4
10054656:	sub    ecx,0x1
10054659:	jne    0x10054650
1005465b:	mov    DWORD PTR [edx+0x16ac],esi
10054661:	mov    DWORD PTR [edx+0x16a8],esi
10054667:	mov    DWORD PTR [edx+0x16b0],esi
1005466d:	mov    DWORD PTR [edx+0x16a0],esi
10054673:	mov    WORD PTR [edx+0x494],0x1
1005467c:	pop    esi
1005467d:	ret    
1005467e:	int3   
1005467f:	int3   
10054680:	push   ecx
10054681:	mov    edx,DWORD PTR [eax+0x1450]
10054687:	push   ebp
10054688:	push   esi
10054689:	mov    esi,DWORD PTR [esp+0x10]
1005468d:	mov    ebp,DWORD PTR [eax+esi*4+0xb5c]
10054694:	lea    ecx,[esi+esi*1]
10054697:	cmp    ecx,edx
10054699:	mov    DWORD PTR [esp+0x8],ebp
1005469d:	jg     0x1005473b
100546a3:	push   ebx
100546a4:	jge    0x100546da
100546a6:	mov    esi,DWORD PTR [eax+ecx*4+0xb60]
100546ad:	mov    ebp,DWORD PTR [eax+ecx*4+0xb5c]
100546b4:	movzx  edx,WORD PTR [edi+esi*4]
100546b8:	movzx  ebx,WORD PTR [edi+ebp*4]
100546bc:	cmp    dx,bx
100546bf:	jb     0x100546d3
100546c1:	jne    0x100546d6
100546c3:	mov    dl,BYTE PTR [esi+eax*1+0x1458]
100546ca:	cmp    dl,BYTE PTR [eax+ebp*1+0x1458]
100546d1:	ja     0x100546d6
100546d3:	add    ecx,0x1
100546d6:	mov    ebp,DWORD PTR [esp+0xc]
100546da:	mov    esi,DWORD PTR [eax+ecx*4+0xb5c]
100546e1:	movzx  edx,WORD PTR [edi+ebp*4]
100546e5:	movzx  ebx,WORD PTR [edi+esi*4]
100546e9:	cmp    dx,bx
100546ec:	jb     0x1005471b
100546ee:	jne    0x10054700
100546f0:	mov    dl,BYTE PTR [eax+ebp*1+0x1458]
100546f7:	cmp    dl,BYTE PTR [esi+eax*1+0x1458]
100546fe:	jbe    0x1005472b
10054700:	mov    edx,DWORD PTR [esp+0x14]
10054704:	mov    DWORD PTR [eax+edx*4+0xb5c],esi
1005470b:	mov    edx,DWORD PTR [eax+0x1450]
10054711:	mov    DWORD PTR [esp+0x14],ecx
10054715:	add    ecx,ecx
10054717:	cmp    ecx,edx
10054719:	jle    0x100546a4
1005471b:	mov    ecx,DWORD PTR [esp+0x14]
1005471f:	pop    ebx
10054720:	pop    esi
10054721:	mov    DWORD PTR [eax+ecx*4+0xb5c],ebp
10054728:	pop    ebp
10054729:	pop    ecx
1005472a:	ret    
1005472b:	mov    edx,DWORD PTR [esp+0x14]
1005472f:	pop    ebx
10054730:	pop    esi
10054731:	mov    DWORD PTR [eax+edx*4+0xb5c],ebp
10054738:	pop    ebp
10054739:	pop    ecx
1005473a:	ret    
1005473b:	mov    DWORD PTR [eax+esi*4+0xb5c],ebp
10054742:	pop    esi
10054743:	pop    ebp
10054744:	pop    ecx
10054745:	ret    
10054746:	int3   
10054747:	int3   
10054748:	int3   
10054749:	int3   
1005474a:	int3   
1005474b:	int3   
1005474c:	int3   
1005474d:	int3   
1005474e:	int3   
1005474f:	int3   
10054750:	sub    esp,0x20
10054753:	mov    edx,DWORD PTR [ecx+0x4]
10054756:	push   ebx
10054757:	mov    ebx,DWORD PTR [ecx]
10054759:	mov    ecx,DWORD PTR [ecx+0x8]
1005475c:	mov    DWORD PTR [esp+0x18],edx
10054760:	mov    edx,DWORD PTR [ecx+0x4]
10054763:	push   ebp
10054764:	mov    ebp,DWORD PTR [ecx]
10054766:	mov    DWORD PTR [esp+0x24],edx
1005476a:	mov    edx,DWORD PTR [ecx+0x8]
1005476d:	push   esi
1005476e:	mov    esi,DWORD PTR [ecx+0x10]
10054771:	xor    ecx,ecx
10054773:	mov    DWORD PTR [eax+0xb3c],ecx
10054779:	mov    DWORD PTR [eax+0xb40],ecx
1005477f:	mov    DWORD PTR [eax+0xb44],ecx
10054785:	mov    DWORD PTR [eax+0xb48],ecx
1005478b:	mov    DWORD PTR [eax+0xb4c],ecx
10054791:	mov    DWORD PTR [eax+0xb50],ecx
10054797:	mov    DWORD PTR [eax+0xb54],ecx
1005479d:	mov    DWORD PTR [eax+0xb58],ecx
100547a3:	mov    DWORD PTR [esp+0x24],edx
100547a7:	mov    edx,DWORD PTR [eax+0x1454]
100547ad:	mov    edx,DWORD PTR [eax+edx*4+0xb5c]
100547b4:	push   edi
100547b5:	mov    WORD PTR [ebx+edx*4+0x2],cx
100547ba:	mov    edi,DWORD PTR [eax+0x1454]
100547c0:	add    edi,0x1
100547c3:	cmp    edi,0x23d
100547c9:	mov    DWORD PTR [esp+0x1c],esi
100547cd:	mov    DWORD PTR [esp+0x18],ecx
100547d1:	jge    0x1005495f
100547d7:	lea    ecx,[eax+edi*4+0xb5c]
100547de:	mov    DWORD PTR [esp+0x14],ecx
100547e2:	mov    ecx,0x23d
100547e7:	sub    ecx,edi
100547e9:	add    edi,ecx
100547eb:	mov    DWORD PTR [esp+0x20],ecx
100547ef:	mov    DWORD PTR [esp+0x10],edi
100547f3:	jmp    0x100547f9
100547f5:	mov    esi,DWORD PTR [esp+0x1c]
100547f9:	mov    edx,DWORD PTR [esp+0x14]
100547fd:	mov    edx,DWORD PTR [edx]
100547ff:	movzx  ecx,WORD PTR [ebx+edx*4+0x2]
10054804:	movzx  ecx,WORD PTR [ebx+ecx*4+0x2]
10054809:	add    ecx,0x1
1005480c:	cmp    ecx,esi
1005480e:	jle    0x10054817
10054810:	add    DWORD PTR [esp+0x18],0x1
10054815:	mov    ecx,esi
10054817:	cmp    edx,DWORD PTR [esp+0x24]
1005481b:	mov    WORD PTR [ebx+edx*4+0x2],cx
10054820:	jg     0x1005486a
10054822:	mov    edi,DWORD PTR [esp+0x28]
10054826:	add    WORD PTR [eax+ecx*2+0xb3c],0x1
1005482f:	xor    esi,esi
10054831:	cmp    edx,edi
10054833:	jl     0x10054840
10054835:	mov    esi,edx
10054837:	sub    esi,edi
10054839:	mov    edi,DWORD PTR [esp+0x2c]
1005483d:	mov    esi,DWORD PTR [edi+esi*4]
10054840:	movzx  edi,WORD PTR [ebx+edx*4]
10054844:	movzx  edi,di
10054847:	add    ecx,esi
10054849:	imul   ecx,edi
1005484c:	add    DWORD PTR [eax+0x16a8],ecx
10054852:	test   ebp,ebp
10054854:	je     0x10054866
10054856:	movzx  edx,WORD PTR [ebp+edx*4+0x2]
1005485b:	add    edx,esi
1005485d:	imul   edx,edi
10054860:	add    DWORD PTR [eax+0x16ac],edx
10054866:	mov    edi,DWORD PTR [esp+0x10]
1005486a:	add    DWORD PTR [esp+0x14],0x4
1005486f:	sub    DWORD PTR [esp+0x20],0x1
10054874:	jne    0x100547f5
1005487a:	mov    ebp,DWORD PTR [esp+0x18]
1005487e:	test   ebp,ebp
10054880:	je     0x1005495f
10054886:	mov    ecx,DWORD PTR [esp+0x1c]
1005488a:	lea    edx,[ecx-0x1]
1005488d:	mov    DWORD PTR [esp+0x2c],edx
10054891:	lea    esi,[eax+ecx*2+0xb3c]
10054898:	jmp    0x100548a0
1005489a:	lea    ebx,[ebx+0x0]
100548a0:	mov    ecx,DWORD PTR [esp+0x2c]
100548a4:	cmp    WORD PTR [eax+ecx*2+0xb3c],0x0
100548ad:	lea    edx,[eax+ecx*2+0xb3c]
100548b4:	jne    0x100548c2
100548b6:	sub    edx,0x2
100548b9:	sub    ecx,0x1
100548bc:	cmp    WORD PTR [edx],0x0
100548c0:	je     0x100548b6
100548c2:	add    WORD PTR [eax+ecx*2+0xb3c],0xffff
100548cc:	add    WORD PTR [eax+ecx*2+0xb3e],0x2
100548d5:	add    WORD PTR [esi],0xffff
100548da:	sub    ebp,0x2
100548dd:	test   ebp,ebp
100548df:	jg     0x100548a0
100548e1:	mov    edx,DWORD PTR [esp+0x1c]
100548e5:	test   edx,edx
100548e7:	je     0x1005495f
100548e9:	mov    DWORD PTR [esp+0x20],esi
100548ed:	lea    ecx,[ecx+0x0]
100548f0:	movzx  esi,WORD PTR [esi]
100548f3:	test   esi,esi
100548f5:	mov    DWORD PTR [esp+0x1c],esi
100548f9:	je     0x1005494d
100548fb:	lea    ebp,[eax+edi*4+0xb5c]
10054902:	mov    ecx,DWORD PTR [ebp-0x4]
10054905:	sub    DWORD PTR [esp+0x10],0x1
1005490a:	sub    ebp,0x4
1005490d:	cmp    ecx,DWORD PTR [esp+0x24]
10054911:	mov    DWORD PTR [esp+0x2c],ebp
10054915:	jg     0x10054945
10054917:	movzx  edi,WORD PTR [ebx+ecx*4+0x2]
1005491c:	cmp    edi,edx
1005491e:	lea    esi,[ebx+ecx*4+0x2]
10054922:	je     0x1005493c
10054924:	movzx  ecx,WORD PTR [ebx+ecx*4]
10054928:	mov    ebp,edx
1005492a:	sub    ebp,edi
1005492c:	imul   ebp,ecx
1005492f:	add    DWORD PTR [eax+0x16a8],ebp
10054935:	mov    ebp,DWORD PTR [esp+0x2c]
10054939:	mov    WORD PTR [esi],dx
1005493c:	sub    DWORD PTR [esp+0x1c],0x1
10054941:	mov    esi,DWORD PTR [esp+0x1c]
10054945:	test   esi,esi
10054947:	jne    0x10054902
10054949:	mov    edi,DWORD PTR [esp+0x10]
1005494d:	mov    esi,DWORD PTR [esp+0x20]
10054951:	sub    edx,0x1
10054954:	sub    esi,0x2
10054957:	test   edx,edx
10054959:	mov    DWORD PTR [esp+0x20],esi
1005495d:	jne    0x100548f0
1005495f:	pop    edi
10054960:	pop    esi
10054961:	pop    ebp
10054962:	pop    ebx
10054963:	add    esp,0x20
10054966:	ret    
10054967:	int3   
10054968:	int3   
10054969:	int3   
1005496a:	int3   
1005496b:	int3   
1005496c:	int3   
1005496d:	int3   
1005496e:	int3   
1005496f:	int3   
10054970:	sub    esp,0xc
10054973:	push   ebx
10054974:	push   ebp
10054975:	mov    ebp,DWORD PTR [esp+0x18]
10054979:	push   esi
1005497a:	push   edi
1005497b:	movzx  edi,WORD PTR [eax+0x2]
1005497f:	xor    edx,edx
10054981:	test   edi,edi
10054983:	mov    ebx,ecx
10054985:	mov    DWORD PTR [esp+0x14],0xffffffff
1005498d:	mov    ecx,0x7
10054992:	mov    esi,0x4
10054997:	jne    0x100549a3
10054999:	mov    ecx,0x8a
1005499e:	mov    esi,0x3
100549a3:	test   ebx,ebx
100549a5:	mov    WORD PTR [eax+ebx*4+0x6],0xffff
100549ac:	jl     0x10054a55
100549b2:	add    eax,0x6
100549b5:	add    ebx,0x1
100549b8:	mov    DWORD PTR [esp+0x18],ebx
100549bc:	mov    DWORD PTR [esp+0x10],eax
100549c0:	mov    ebx,0x1
100549c5:	mov    eax,edi
100549c7:	mov    edi,DWORD PTR [esp+0x10]
100549cb:	movzx  edi,WORD PTR [edi]
100549ce:	add    edx,ebx
100549d0:	cmp    edx,ecx
100549d2:	jge    0x100549d8
100549d4:	cmp    eax,edi
100549d6:	je     0x10054a46
100549d8:	cmp    edx,esi
100549da:	jge    0x100549e6
100549dc:	add    WORD PTR [ebp+eax*4+0xa7c],dx
100549e4:	jmp    0x10054a16
100549e6:	test   eax,eax
100549e8:	je     0x10054a01
100549ea:	cmp    eax,DWORD PTR [esp+0x14]
100549ee:	je     0x100549f8
100549f0:	add    WORD PTR [ebp+eax*4+0xa7c],bx
100549f8:	add    WORD PTR [ebp+0xabc],bx
100549ff:	jmp    0x10054a16
10054a01:	cmp    edx,0xa
10054a04:	jg     0x10054a0f
10054a06:	add    WORD PTR [ebp+0xac0],bx
10054a0d:	jmp    0x10054a16
10054a0f:	add    WORD PTR [ebp+0xac4],bx
10054a16:	xor    edx,edx
10054a18:	test   edi,edi
10054a1a:	mov    DWORD PTR [esp+0x14],eax
10054a1e:	jne    0x10054a2c
10054a20:	mov    ecx,0x8a
10054a25:	mov    esi,0x3
10054a2a:	jmp    0x10054a46
10054a2c:	cmp    eax,edi
10054a2e:	jne    0x10054a3c
10054a30:	mov    ecx,0x6
10054a35:	mov    esi,0x3
10054a3a:	jmp    0x10054a46
10054a3c:	mov    ecx,0x7
10054a41:	mov    esi,0x4
10054a46:	add    DWORD PTR [esp+0x10],0x4
10054a4b:	sub    DWORD PTR [esp+0x18],ebx
10054a4f:	jne    0x100549c5
10054a55:	pop    edi
10054a56:	pop    esi
10054a57:	pop    ebp
10054a58:	pop    ebx
10054a59:	add    esp,0xc
10054a5c:	ret    
10054a5d:	int3   
10054a5e:	int3   
10054a5f:	int3   
10054a60:	sub    esp,0x18
10054a63:	push   ebx
10054a64:	push   ebp
10054a65:	movzx  ebp,WORD PTR [edx+0x2]
10054a69:	push   esi
10054a6a:	xor    esi,esi
10054a6c:	test   ebp,ebp
10054a6e:	push   edi
10054a6f:	mov    ebx,ecx
10054a71:	mov    DWORD PTR [esp+0x1c],0xffffffff
10054a79:	mov    DWORD PTR [esp+0x14],ebp
10054a7d:	mov    ecx,0x7
10054a82:	mov    edi,0x4
10054a87:	jne    0x10054a93
10054a89:	mov    ecx,0x8a
10054a8e:	mov    edi,0x3
10054a93:	test   ebx,ebx
10054a95:	jl     0x10054f69
10054a9b:	add    edx,0x6
10054a9e:	add    ebx,0x1
10054aa1:	mov    DWORD PTR [esp+0x18],edx
10054aa5:	mov    DWORD PTR [esp+0x20],ebx
10054aa9:	mov    ebp,0x1
10054aae:	mov    edi,edi
10054ab0:	mov    ebx,DWORD PTR [esp+0x18]
10054ab4:	movzx  ebx,WORD PTR [ebx]
10054ab7:	mov    edx,DWORD PTR [esp+0x14]
10054abb:	add    esi,ebp
10054abd:	cmp    esi,ecx
10054abf:	mov    DWORD PTR [esp+0x24],edx
10054ac3:	mov    DWORD PTR [esp+0x14],ebx
10054ac7:	mov    DWORD PTR [esp+0x10],esi
10054acb:	jge    0x10054ad5
10054acd:	cmp    edx,ebx
10054acf:	je     0x10054f5a
10054ad5:	cmp    esi,edi
10054ad7:	jge    0x10054b7f
10054add:	lea    ecx,[ecx+0x0]
10054ae0:	movzx  edi,WORD PTR [eax+edx*4+0xa7e]
10054ae8:	mov    ecx,DWORD PTR [eax+0x16bc]
10054aee:	mov    ebx,0x10
10054af3:	sub    ebx,edi
10054af5:	cmp    ecx,ebx
10054af7:	jle    0x10054b54
10054af9:	movzx  esi,WORD PTR [eax+edx*4+0xa7c]
10054b01:	mov    edx,esi
10054b03:	shl    edx,cl
10054b05:	mov    ecx,DWORD PTR [eax+0x8]
10054b08:	or     WORD PTR [eax+0x16b8],dx
10054b0f:	movzx  ebx,BYTE PTR [eax+0x16b8]
10054b16:	mov    edx,DWORD PTR [eax+0x14]
10054b19:	mov    BYTE PTR [ecx+edx*1],bl
10054b1c:	add    DWORD PTR [eax+0x14],ebp
10054b1f:	mov    ecx,DWORD PTR [eax+0x14]
10054b22:	movzx  ebx,BYTE PTR [eax+0x16b9]
10054b29:	mov    edx,DWORD PTR [eax+0x8]
10054b2c:	mov    BYTE PTR [ecx+edx*1],bl
10054b2f:	mov    edx,DWORD PTR [eax+0x16bc]
10054b35:	add    DWORD PTR [eax+0x14],ebp
10054b38:	mov    cl,0x10
10054b3a:	sub    cl,dl
10054b3c:	shr    si,cl
10054b3f:	lea    ecx,[edx+edi*1-0x10]
10054b43:	mov    edx,DWORD PTR [esp+0x24]
10054b47:	mov    WORD PTR [eax+0x16b8],si
10054b4e:	mov    esi,DWORD PTR [esp+0x10]
10054b52:	jmp    0x10054b68
10054b54:	mov    bx,WORD PTR [eax+edx*4+0xa7c]
10054b5c:	shl    bx,cl
10054b5f:	or     WORD PTR [eax+0x16b8],bx
10054b66:	add    ecx,edi
10054b68:	sub    esi,ebp
10054b6a:	mov    DWORD PTR [eax+0x16bc],ecx
10054b70:	mov    DWORD PTR [esp+0x10],esi
10054b74:	jne    0x10054ae0
10054b7a:	jmp    0x10054f26
10054b7f:	test   edx,edx
10054b81:	je     0x10054d2c
10054b87:	cmp    edx,DWORD PTR [esp+0x1c]
10054b8b:	je     0x10054c2d
10054b91:	movzx  edi,WORD PTR [eax+edx*4+0xa7e]
10054b99:	mov    ecx,DWORD PTR [eax+0x16bc]
10054b9f:	mov    ebx,0x10
10054ba4:	sub    ebx,edi
10054ba6:	cmp    ecx,ebx
10054ba8:	mov    DWORD PTR [esp+0x1c],edi
10054bac:	jle    0x10054c09
10054bae:	movzx  esi,WORD PTR [eax+edx*4+0xa7c]
10054bb6:	mov    edi,esi
10054bb8:	shl    edi,cl
10054bba:	mov    ecx,DWORD PTR [eax+0x8]
10054bbd:	or     WORD PTR [eax+0x16b8],di
10054bc4:	movzx  ebx,BYTE PTR [eax+0x16b8]
10054bcb:	mov    edi,DWORD PTR [eax+0x14]
10054bce:	mov    BYTE PTR [ecx+edi*1],bl
10054bd1:	add    DWORD PTR [eax+0x14],ebp
10054bd4:	movzx  ebx,BYTE PTR [eax+0x16b9]
10054bdb:	mov    ecx,DWORD PTR [eax+0x8]
10054bde:	mov    edi,DWORD PTR [eax+0x14]
10054be1:	mov    BYTE PTR [edi+ecx*1],bl
10054be4:	mov    ebx,DWORD PTR [eax+0x16bc]
10054bea:	add    DWORD PTR [eax+0x14],ebp
10054bed:	mov    cl,0x10
10054bef:	sub    cl,bl
10054bf1:	shr    si,cl
10054bf4:	mov    ecx,DWORD PTR [esp+0x1c]
10054bf8:	lea    ecx,[ebx+ecx*1-0x10]
10054bfc:	mov    WORD PTR [eax+0x16b8],si
10054c03:	mov    esi,DWORD PTR [esp+0x10]
10054c07:	jmp    0x10054c21
10054c09:	mov    di,WORD PTR [eax+edx*4+0xa7c]
10054c11:	shl    di,cl
10054c14:	or     WORD PTR [eax+0x16b8],di
10054c1b:	mov    edi,DWORD PTR [esp+0x1c]
10054c1f:	add    ecx,edi
10054c21:	sub    esi,ebp
10054c23:	mov    DWORD PTR [eax+0x16bc],ecx
10054c29:	mov    DWORD PTR [esp+0x10],esi
10054c2d:	movzx  edi,WORD PTR [eax+0xabe]
10054c34:	mov    ecx,DWORD PTR [eax+0x16bc]
10054c3a:	mov    ebx,0x10
10054c3f:	sub    ebx,edi
10054c41:	cmp    ecx,ebx
10054c43:	mov    DWORD PTR [esp+0x1c],edi
10054c47:	jle    0x10054ca3
10054c49:	movzx  esi,WORD PTR [eax+0xabc]
10054c50:	mov    edi,esi
10054c52:	shl    edi,cl
10054c54:	mov    ecx,DWORD PTR [eax+0x8]
10054c57:	or     WORD PTR [eax+0x16b8],di
10054c5e:	movzx  ebx,BYTE PTR [eax+0x16b8]
10054c65:	mov    edi,DWORD PTR [eax+0x14]
10054c68:	mov    BYTE PTR [ecx+edi*1],bl
10054c6b:	add    DWORD PTR [eax+0x14],ebp
10054c6e:	movzx  ebx,BYTE PTR [eax+0x16b9]
10054c75:	mov    ecx,DWORD PTR [eax+0x8]
10054c78:	mov    edi,DWORD PTR [eax+0x14]
10054c7b:	mov    BYTE PTR [edi+ecx*1],bl
10054c7e:	mov    ebx,DWORD PTR [eax+0x16bc]
10054c84:	add    DWORD PTR [eax+0x14],ebp
10054c87:	mov    cl,0x10
10054c89:	sub    cl,bl
10054c8b:	shr    si,cl
10054c8e:	mov    ecx,DWORD PTR [esp+0x1c]
10054c92:	lea    ecx,[ebx+ecx*1-0x10]
10054c96:	mov    WORD PTR [eax+0x16b8],si
10054c9d:	mov    esi,DWORD PTR [esp+0x10]
10054ca1:	jmp    0x10054cba
10054ca3:	mov    di,WORD PTR [eax+0xabc]
10054caa:	shl    di,cl
10054cad:	or     WORD PTR [eax+0x16b8],di
10054cb4:	mov    edi,DWORD PTR [esp+0x1c]
10054cb8:	add    ecx,edi
10054cba:	add    esi,0xfffffffd
10054cbd:	cmp    ecx,0xe
10054cc0:	mov    DWORD PTR [eax+0x16bc],ecx
10054cc6:	jle    0x10054d1b
10054cc8:	mov    edi,esi
10054cca:	shl    edi,cl
10054ccc:	mov    ecx,DWORD PTR [eax+0x8]
10054ccf:	or     WORD PTR [eax+0x16b8],di
10054cd6:	movzx  ebx,BYTE PTR [eax+0x16b8]
10054cdd:	mov    edi,DWORD PTR [eax+0x14]
10054ce0:	mov    BYTE PTR [ecx+edi*1],bl
10054ce3:	add    DWORD PTR [eax+0x14],ebp
10054ce6:	movzx  ebx,BYTE PTR [eax+0x16b9]
10054ced:	mov    edi,DWORD PTR [eax+0x14]
10054cf0:	mov    ecx,DWORD PTR [eax+0x8]
10054cf3:	mov    BYTE PTR [edi+ecx*1],bl
10054cf6:	mov    ebx,DWORD PTR [eax+0x16bc]
10054cfc:	add    DWORD PTR [eax+0x14],ebp
10054cff:	mov    cl,0x10
10054d01:	sub    cl,bl
10054d03:	shr    si,cl
10054d06:	add    ebx,0xfffffff2
10054d09:	mov    DWORD PTR [eax+0x16bc],ebx
10054d0f:	mov    WORD PTR [eax+0x16b8],si
10054d16:	jmp    0x10054f26
10054d1b:	shl    esi,cl
10054d1d:	or     WORD PTR [eax+0x16b8],si
10054d24:	add    ecx,0x2
10054d27:	jmp    0x10054f20
10054d2c:	cmp    esi,0xa
10054d2f:	mov    ecx,DWORD PTR [eax+0x16bc]
10054d35:	mov    ebx,0x10
10054d3a:	jg     0x10054e34
10054d40:	movzx  edi,WORD PTR [eax+0xac2]
10054d47:	sub    ebx,edi
10054d49:	cmp    ecx,ebx
10054d4b:	mov    DWORD PTR [esp+0x1c],edi
10054d4f:	jle    0x10054dab
10054d51:	movzx  esi,WORD PTR [eax+0xac0]
10054d58:	mov    edi,esi
10054d5a:	shl    edi,cl
10054d5c:	mov    ecx,DWORD PTR [eax+0x8]
10054d5f:	or     WORD PTR [eax+0x16b8],di
10054d66:	movzx  ebx,BYTE PTR [eax+0x16b8]
10054d6d:	mov    edi,DWORD PTR [eax+0x14]
10054d70:	mov    BYTE PTR [ecx+edi*1],bl
10054d73:	add    DWORD PTR [eax+0x14],ebp
10054d76:	movzx  ebx,BYTE PTR [eax+0x16b9]
10054d7d:	mov    ecx,DWORD PTR [eax+0x8]
10054d80:	mov    edi,DWORD PTR [eax+0x14]
10054d83:	mov    BYTE PTR [edi+ecx*1],bl
10054d86:	mov    ebx,DWORD PTR [eax+0x16bc]
10054d8c:	add    DWORD PTR [eax+0x14],ebp
10054d8f:	mov    cl,0x10
10054d91:	sub    cl,bl
10054d93:	shr    si,cl
10054d96:	mov    ecx,DWORD PTR [esp+0x1c]
10054d9a:	lea    ecx,[ebx+ecx*1-0x10]
10054d9e:	mov    WORD PTR [eax+0x16b8],si
10054da5:	mov    esi,DWORD PTR [esp+0x10]
10054da9:	jmp    0x10054dc2
10054dab:	mov    di,WORD PTR [eax+0xac0]
10054db2:	shl    di,cl
10054db5:	or     WORD PTR [eax+0x16b8],di
10054dbc:	mov    edi,DWORD PTR [esp+0x1c]
10054dc0:	add    ecx,edi
10054dc2:	add    esi,0xfffffffd
10054dc5:	cmp    ecx,0xd
10054dc8:	mov    DWORD PTR [eax+0x16bc],ecx
10054dce:	jle    0x10054e23
10054dd0:	mov    edi,esi
10054dd2:	shl    edi,cl
10054dd4:	mov    ecx,DWORD PTR [eax+0x8]
10054dd7:	or     WORD PTR [eax+0x16b8],di
10054dde:	movzx  ebx,BYTE PTR [eax+0x16b8]
10054de5:	mov    edi,DWORD PTR [eax+0x14]
10054de8:	mov    BYTE PTR [ecx+edi*1],bl
10054deb:	add    DWORD PTR [eax+0x14],ebp
10054dee:	movzx  ebx,BYTE PTR [eax+0x16b9]
10054df5:	mov    edi,DWORD PTR [eax+0x14]
10054df8:	mov    ecx,DWORD PTR [eax+0x8]
10054dfb:	mov    BYTE PTR [edi+ecx*1],bl
10054dfe:	mov    ebx,DWORD PTR [eax+0x16bc]
10054e04:	add    DWORD PTR [eax+0x14],ebp
10054e07:	mov    cl,0x10
10054e09:	sub    cl,bl
10054e0b:	shr    si,cl
10054e0e:	add    ebx,0xfffffff3
10054e11:	mov    DWORD PTR [eax+0x16bc],ebx
10054e17:	mov    WORD PTR [eax+0x16b8],si
10054e1e:	jmp    0x10054f26
10054e23:	shl    esi,cl
10054e25:	or     WORD PTR [eax+0x16b8],si
10054e2c:	add    ecx,0x3
10054e2f:	jmp    0x10054f20
10054e34:	movzx  edi,WORD PTR [eax+0xac6]
10054e3b:	sub    ebx,edi
10054e3d:	cmp    ecx,ebx
10054e3f:	mov    DWORD PTR [esp+0x1c],edi
10054e43:	jle    0x10054e9f
10054e45:	movzx  esi,WORD PTR [eax+0xac4]
10054e4c:	mov    edi,esi
10054e4e:	shl    edi,cl
10054e50:	mov    ecx,DWORD PTR [eax+0x8]
10054e53:	or     WORD PTR [eax+0x16b8],di
10054e5a:	movzx  ebx,BYTE PTR [eax+0x16b8]
10054e61:	mov    edi,DWORD PTR [eax+0x14]
10054e64:	mov    BYTE PTR [ecx+edi*1],bl
10054e67:	add    DWORD PTR [eax+0x14],ebp
10054e6a:	movzx  ebx,BYTE PTR [eax+0x16b9]
10054e71:	mov    ecx,DWORD PTR [eax+0x8]
10054e74:	mov    edi,DWORD PTR [eax+0x14]
10054e77:	mov    BYTE PTR [edi+ecx*1],bl
10054e7a:	mov    ebx,DWORD PTR [eax+0x16bc]
10054e80:	add    DWORD PTR [eax+0x14],ebp
10054e83:	mov    cl,0x10
10054e85:	sub    cl,bl
10054e87:	shr    si,cl
10054e8a:	mov    ecx,DWORD PTR [esp+0x1c]
10054e8e:	lea    ecx,[ebx+ecx*1-0x10]
10054e92:	mov    WORD PTR [eax+0x16b8],si
10054e99:	mov    esi,DWORD PTR [esp+0x10]
10054e9d:	jmp    0x10054eb6
10054e9f:	mov    di,WORD PTR [eax+0xac4]
10054ea6:	shl    di,cl
10054ea9:	or     WORD PTR [eax+0x16b8],di
10054eb0:	mov    edi,DWORD PTR [esp+0x1c]
10054eb4:	add    ecx,edi
10054eb6:	add    esi,0xfffffff5
10054eb9:	cmp    ecx,0x9
10054ebc:	mov    DWORD PTR [eax+0x16bc],ecx
10054ec2:	jle    0x10054f14
10054ec4:	mov    edi,esi
10054ec6:	shl    edi,cl
10054ec8:	mov    ecx,DWORD PTR [eax+0x8]
10054ecb:	or     WORD PTR [eax+0x16b8],di
10054ed2:	movzx  ebx,BYTE PTR [eax+0x16b8]
10054ed9:	mov    edi,DWORD PTR [eax+0x14]
10054edc:	mov    BYTE PTR [ecx+edi*1],bl
10054edf:	add    DWORD PTR [eax+0x14],ebp
10054ee2:	movzx  ebx,BYTE PTR [eax+0x16b9]
10054ee9:	mov    edi,DWORD PTR [eax+0x14]
10054eec:	mov    ecx,DWORD PTR [eax+0x8]
10054eef:	mov    BYTE PTR [edi+ecx*1],bl
10054ef2:	mov    ebx,DWORD PTR [eax+0x16bc]
10054ef8:	add    DWORD PTR [eax+0x14],ebp
10054efb:	mov    cl,0x10
10054efd:	sub    cl,bl
10054eff:	shr    si,cl
10054f02:	add    ebx,0xfffffff7
10054f05:	mov    DWORD PTR [eax+0x16bc],ebx
10054f0b:	mov    WORD PTR [eax+0x16b8],si
10054f12:	jmp    0x10054f26
10054f14:	shl    esi,cl
10054f16:	or     WORD PTR [eax+0x16b8],si
10054f1d:	add    ecx,0x7
10054f20:	mov    DWORD PTR [eax+0x16bc],ecx
10054f26:	mov    ecx,DWORD PTR [esp+0x14]
10054f2a:	xor    esi,esi
10054f2c:	test   ecx,ecx
10054f2e:	mov    DWORD PTR [esp+0x1c],edx
10054f32:	jne    0x10054f40
10054f34:	mov    ecx,0x8a
10054f39:	mov    edi,0x3
10054f3e:	jmp    0x10054f5a
10054f40:	cmp    edx,ecx
10054f42:	jne    0x10054f50
10054f44:	mov    ecx,0x6
10054f49:	mov    edi,0x3
10054f4e:	jmp    0x10054f5a
10054f50:	mov    ecx,0x7
10054f55:	mov    edi,0x4
10054f5a:	add    DWORD PTR [esp+0x18],0x4
10054f5f:	sub    DWORD PTR [esp+0x20],ebp
10054f63:	jne    0x10054ab0
10054f69:	pop    edi
10054f6a:	pop    esi
10054f6b:	pop    ebp
10054f6c:	pop    ebx
10054f6d:	add    esp,0x18
10054f70:	ret    
10054f71:	int3   
10054f72:	int3   
10054f73:	int3   
10054f74:	int3   
10054f75:	int3   
10054f76:	int3   
10054f77:	int3   
10054f78:	int3   
10054f79:	int3   
10054f7a:	int3   
10054f7b:	int3   
10054f7c:	int3   
10054f7d:	int3   
10054f7e:	int3   
10054f7f:	int3   
10054f80:	push   ecx
10054f81:	mov    ecx,DWORD PTR [eax+0x16bc]
10054f87:	cmp    ecx,0xb
10054f8a:	push   ebx
10054f8b:	mov    ebx,DWORD PTR [esp+0x14]
10054f8f:	push   ebp
10054f90:	push   esi
10054f91:	push   edi
10054f92:	mov    ebp,0x1
10054f97:	jle    0x10054ff7
10054f99:	mov    esi,DWORD PTR [esp+0x18]
10054f9d:	add    esi,0xfffffeff
10054fa3:	mov    edx,esi
10054fa5:	shl    edx,cl
10054fa7:	mov    ecx,DWORD PTR [eax+0x14]
10054faa:	or     WORD PTR [eax+0x16b8],dx
10054fb1:	movzx  ebx,BYTE PTR [eax+0x16b8]
10054fb8:	mov    edx,DWORD PTR [eax+0x8]
10054fbb:	mov    BYTE PTR [ecx+edx*1],bl
10054fbe:	add    DWORD PTR [eax+0x14],ebp
10054fc1:	movzx  ebx,BYTE PTR [eax+0x16b9]
10054fc8:	mov    ecx,DWORD PTR [eax+0x14]
10054fcb:	mov    edx,DWORD PTR [eax+0x8]
10054fce:	mov    BYTE PTR [ecx+edx*1],bl
10054fd1:	mov    edx,DWORD PTR [eax+0x16bc]
10054fd7:	add    DWORD PTR [eax+0x14],ebp
10054fda:	mov    ebx,DWORD PTR [esp+0x20]
10054fde:	mov    cl,0x10
10054fe0:	sub    cl,dl
10054fe2:	shr    si,cl
10054fe5:	add    edx,0xfffffff5
10054fe8:	mov    DWORD PTR [eax+0x16bc],edx
10054fee:	mov    WORD PTR [eax+0x16b8],si
10054ff5:	jmp    0x10055013
10054ff7:	mov    edx,DWORD PTR [esp+0x18]
10054ffb:	add    edx,0xfffffeff
10055001:	shl    edx,cl
10055003:	or     WORD PTR [eax+0x16b8],dx
1005500a:	add    ecx,0x5
1005500d:	mov    DWORD PTR [eax+0x16bc],ecx
10055013:	mov    ecx,DWORD PTR [eax+0x16bc]
10055019:	cmp    ecx,0xb
1005501c:	jle    0x1005507d
1005501e:	mov    esi,DWORD PTR [esp+0x1c]
10055022:	add    esi,0xffffffff
10055025:	mov    edx,esi
10055027:	shl    edx,cl
10055029:	mov    ecx,DWORD PTR [eax+0x14]
1005502c:	mov    DWORD PTR [esp+0x10],ebx
10055030:	or     WORD PTR [eax+0x16b8],dx
10055037:	movzx  ebx,BYTE PTR [eax+0x16b8]
1005503e:	mov    edx,DWORD PTR [eax+0x8]
10055041:	mov    BYTE PTR [ecx+edx*1],bl
10055044:	add    DWORD PTR [eax+0x14],ebp
10055047:	movzx  ebx,BYTE PTR [eax+0x16b9]
1005504e:	mov    ecx,DWORD PTR [eax+0x14]
10055051:	mov    edx,DWORD PTR [eax+0x8]
10055054:	mov    BYTE PTR [ecx+edx*1],bl
10055057:	mov    edx,DWORD PTR [eax+0x16bc]
1005505d:	add    DWORD PTR [eax+0x14],ebp
10055060:	mov    ebx,DWORD PTR [esp+0x10]
10055064:	mov    cl,0x10
10055066:	sub    cl,dl
10055068:	shr    si,cl
1005506b:	add    edx,0xfffffff5
1005506e:	mov    DWORD PTR [eax+0x16bc],edx
10055074:	mov    WORD PTR [eax+0x16b8],si
1005507b:	jmp    0x10055096
1005507d:	mov    edx,DWORD PTR [esp+0x1c]
10055081:	add    edx,0xffffffff
10055084:	shl    edx,cl
10055086:	or     WORD PTR [eax+0x16b8],dx
1005508d:	add    ecx,0x5
10055090:	mov    DWORD PTR [eax+0x16bc],ecx
10055096:	mov    ecx,DWORD PTR [eax+0x16bc]
1005509c:	cmp    ecx,0xc
1005509f:	jle    0x100550fc
100550a1:	lea    esi,[ebx-0x4]
100550a4:	mov    edx,esi
100550a6:	shl    edx,cl
100550a8:	mov    ecx,DWORD PTR [eax+0x14]
100550ab:	mov    DWORD PTR [esp+0x10],ebx
100550af:	or     WORD PTR [eax+0x16b8],dx
100550b6:	movzx  ebx,BYTE PTR [eax+0x16b8]
100550bd:	mov    edx,DWORD PTR [eax+0x8]
100550c0:	mov    BYTE PTR [ecx+edx*1],bl
100550c3:	add    DWORD PTR [eax+0x14],ebp
100550c6:	movzx  ebx,BYTE PTR [eax+0x16b9]
100550cd:	mov    ecx,DWORD PTR [eax+0x14]
100550d0:	mov    edx,DWORD PTR [eax+0x8]
100550d3:	mov    BYTE PTR [ecx+edx*1],bl
100550d6:	mov    edx,DWORD PTR [eax+0x16bc]
100550dc:	add    DWORD PTR [eax+0x14],ebp
100550df:	mov    ebx,DWORD PTR [esp+0x10]
100550e3:	mov    cl,0x10
100550e5:	sub    cl,dl
100550e7:	shr    si,cl
100550ea:	add    edx,0xfffffff4
100550ed:	mov    DWORD PTR [eax+0x16bc],edx
100550f3:	mov    WORD PTR [eax+0x16b8],si
100550fa:	jmp    0x10055111
100550fc:	lea    edx,[ebx-0x4]
100550ff:	shl    edx,cl
10055101:	or     WORD PTR [eax+0x16b8],dx
10055108:	add    ecx,0x4
1005510b:	mov    DWORD PTR [eax+0x16bc],ecx
10055111:	xor    edi,edi
10055113:	test   ebx,ebx
10055115:	jle    0x100551b3
1005511b:	jmp    0x10055120
1005511d:	lea    ecx,[ecx+0x0]
10055120:	mov    ecx,DWORD PTR [eax+0x16bc]
10055126:	cmp    ecx,0xd
10055129:	movzx  edx,BYTE PTR [edi+0x10068abc]
10055130:	jle    0x1005518e
10055132:	movzx  esi,WORD PTR [eax+edx*4+0xa7e]
1005513a:	mov    edx,esi
1005513c:	shl    edx,cl
1005513e:	mov    ecx,DWORD PTR [eax+0x14]
10055141:	or     WORD PTR [eax+0x16b8],dx
10055148:	movzx  ebx,BYTE PTR [eax+0x16b8]
1005514f:	mov    edx,DWORD PTR [eax+0x8]
10055152:	mov    BYTE PTR [ecx+edx*1],bl
10055155:	add    DWORD PTR [eax+0x14],ebp
10055158:	movzx  ebx,BYTE PTR [eax+0x16b9]
1005515f:	mov    ecx,DWORD PTR [eax+0x14]
10055162:	mov    edx,DWORD PTR [eax+0x8]
10055165:	mov    BYTE PTR [ecx+edx*1],bl
10055168:	mov    edx,DWORD PTR [eax+0x16bc]
1005516e:	add    DWORD PTR [eax+0x14],ebp
10055171:	mov    ebx,DWORD PTR [esp+0x20]
10055175:	mov    cl,0x10
10055177:	sub    cl,dl
10055179:	shr    si,cl
1005517c:	add    edx,0xfffffff3
1005517f:	mov    DWORD PTR [eax+0x16bc],edx
10055185:	mov    WORD PTR [eax+0x16b8],si
1005518c:	jmp    0x100551a9
1005518e:	mov    dx,WORD PTR [eax+edx*4+0xa7e]
10055196:	shl    dx,cl
10055199:	or     WORD PTR [eax+0x16b8],dx
100551a0:	add    ecx,0x3
100551a3:	mov    DWORD PTR [eax+0x16bc],ecx
100551a9:	add    edi,ebp
100551ab:	cmp    edi,ebx
100551ad:	jl     0x10055120
100551b3:	mov    ecx,DWORD PTR [esp+0x18]
100551b7:	add    ecx,0xffffffff
100551ba:	lea    edx,[eax+0x94]
100551c0:	call   0x10054a60
100551c5:	mov    ecx,DWORD PTR [esp+0x1c]
100551c9:	pop    edi
100551ca:	pop    esi
100551cb:	pop    ebp
100551cc:	add    ecx,0xffffffff
100551cf:	lea    edx,[eax+0x988]
100551d5:	pop    ebx
100551d6:	add    esp,0x4
100551d9:	jmp    0x10054a60
100551de:	int3   
100551df:	int3   
100551e0:	sub    esp,0xc
100551e3:	push   ebx
100551e4:	mov    ebx,DWORD PTR [esp+0x14]
100551e8:	push   ebp
100551e9:	xor    ecx,ecx
100551eb:	cmp    DWORD PTR [eax+0x16a0],ecx
100551f1:	push   esi
100551f2:	push   edi
100551f3:	je     0x10055532
100551f9:	lea    esp,[esp+0x0]
10055200:	mov    edx,DWORD PTR [eax+0x16a4]
10055206:	movzx  ebp,WORD PTR [edx+ecx*2]
1005520a:	mov    edx,DWORD PTR [eax+0x1698]
10055210:	movzx  esi,BYTE PTR [ecx+edx*1]
10055214:	add    ecx,0x1
10055217:	test   ebp,ebp
10055219:	mov    DWORD PTR [esp+0x18],ecx
1005521d:	mov    ecx,DWORD PTR [eax+0x16bc]
10055223:	jne    0x100552aa
10055229:	movzx  edi,WORD PTR [ebx+esi*4+0x2]
1005522e:	mov    edx,0x10
10055233:	sub    edx,edi
10055235:	cmp    ecx,edx
10055237:	jle    0x10055295
10055239:	movzx  esi,WORD PTR [ebx+esi*4]
1005523d:	mov    edx,esi
1005523f:	shl    edx,cl
10055241:	mov    ecx,DWORD PTR [eax+0x8]
10055244:	mov    DWORD PTR [esp+0x10],ebx
10055248:	or     WORD PTR [eax+0x16b8],dx
1005524f:	movzx  ebx,BYTE PTR [eax+0x16b8]
10055256:	mov    edx,DWORD PTR [eax+0x14]
10055259:	mov    BYTE PTR [ecx+edx*1],bl
1005525c:	add    DWORD PTR [eax+0x14],0x1
10055260:	movzx  ebx,BYTE PTR [eax+0x16b9]
10055267:	mov    ecx,DWORD PTR [eax+0x14]
1005526a:	mov    edx,DWORD PTR [eax+0x8]
1005526d:	mov    BYTE PTR [ecx+edx*1],bl
10055270:	mov    edx,DWORD PTR [eax+0x16bc]
10055276:	add    DWORD PTR [eax+0x14],0x1
1005527a:	mov    ebx,DWORD PTR [esp+0x10]
1005527e:	mov    cl,0x10
10055280:	sub    cl,dl
10055282:	shr    si,cl
10055285:	lea    ecx,[edx+edi*1-0x10]
10055289:	mov    WORD PTR [eax+0x16b8],si
10055290:	jmp    0x1005551c
10055295:	mov    dx,WORD PTR [ebx+esi*4]
10055299:	shl    dx,cl
1005529c:	or     WORD PTR [eax+0x16b8],dx
100552a3:	add    ecx,edi
100552a5:	jmp    0x1005551c
100552aa:	movzx  edx,BYTE PTR [esi+0x10069290]
100552b1:	movzx  edi,WORD PTR [ebx+edx*4+0x406]
100552b9:	mov    ebx,0x10
100552be:	sub    ebx,edi
100552c0:	cmp    ecx,ebx
100552c2:	mov    DWORD PTR [esp+0x10],edi
100552c6:	mov    edi,DWORD PTR [esp+0x20]
100552ca:	mov    DWORD PTR [esp+0x14],edx
100552ce:	jle    0x10055333
100552d0:	movzx  edi,WORD PTR [edi+edx*4+0x404]
100552d8:	mov    edx,edi
100552da:	shl    edx,cl
100552dc:	mov    ecx,DWORD PTR [eax+0x8]
100552df:	or     WORD PTR [eax+0x16b8],dx
100552e6:	movzx  ebx,BYTE PTR [eax+0x16b8]
100552ed:	mov    edx,DWORD PTR [eax+0x14]
100552f0:	mov    BYTE PTR [ecx+edx*1],bl
100552f3:	add    DWORD PTR [eax+0x14],0x1
100552f7:	mov    ecx,DWORD PTR [eax+0x14]
100552fa:	movzx  ebx,BYTE PTR [eax+0x16b9]
10055301:	mov    edx,DWORD PTR [eax+0x8]
10055304:	mov    BYTE PTR [ecx+edx*1],bl
10055307:	mov    edx,DWORD PTR [eax+0x16bc]
1005530d:	add    DWORD PTR [eax+0x14],0x1
10055311:	mov    cl,0x10
10055313:	sub    cl,dl
10055315:	shr    di,cl
10055318:	mov    ecx,DWORD PTR [esp+0x10]
1005531c:	lea    edx,[edx+ecx*1-0x10]
10055320:	mov    DWORD PTR [eax+0x16bc],edx
10055326:	mov    edx,DWORD PTR [esp+0x14]
1005532a:	mov    WORD PTR [eax+0x16b8],di
10055331:	jmp    0x10055351
10055333:	mov    di,WORD PTR [edi+edx*4+0x404]
1005533b:	shl    di,cl
1005533e:	or     WORD PTR [eax+0x16b8],di
10055345:	mov    edi,DWORD PTR [esp+0x10]
10055349:	add    ecx,edi
1005534b:	mov    DWORD PTR [eax+0x16bc],ecx
10055351:	mov    edi,DWORD PTR [edx*4+0x10068a48]
10055358:	test   edi,edi
1005535a:	mov    ebx,DWORD PTR [esp+0x20]
1005535e:	je     0x100553da
10055360:	sub    esi,DWORD PTR [edx*4+0x10069390]
10055367:	mov    ecx,DWORD PTR [eax+0x16bc]
1005536d:	mov    edx,0x10
10055372:	sub    edx,edi
10055374:	cmp    ecx,edx
10055376:	jle    0x100553c9
10055378:	mov    edx,esi
1005537a:	shl    edx,cl
1005537c:	mov    ecx,DWORD PTR [eax+0x8]
1005537f:	or     WORD PTR [eax+0x16b8],dx
10055386:	movzx  ebx,BYTE PTR [eax+0x16b8]
1005538d:	mov    edx,DWORD PTR [eax+0x14]
10055390:	mov    BYTE PTR [ecx+edx*1],bl
10055393:	add    DWORD PTR [eax+0x14],0x1
10055397:	movzx  ebx,BYTE PTR [eax+0x16b9]
1005539e:	mov    ecx,DWORD PTR [eax+0x14]
100553a1:	mov    edx,DWORD PTR [eax+0x8]
100553a4:	mov    BYTE PTR [ecx+edx*1],bl
100553a7:	mov    edx,DWORD PTR [eax+0x16bc]
100553ad:	add    DWORD PTR [eax+0x14],0x1
100553b1:	mov    ebx,DWORD PTR [esp+0x20]
100553b5:	mov    cl,0x10
100553b7:	sub    cl,dl
100553b9:	shr    si,cl
100553bc:	lea    ecx,[edx+edi*1-0x10]
100553c0:	mov    WORD PTR [eax+0x16b8],si
100553c7:	jmp    0x100553d4
100553c9:	shl    esi,cl
100553cb:	or     WORD PTR [eax+0x16b8],si
100553d2:	add    ecx,edi
100553d4:	mov    DWORD PTR [eax+0x16bc],ecx
100553da:	sub    ebp,0x1
100553dd:	cmp    ebp,0x100
100553e3:	jae    0x100553ee
100553e5:	movzx  edi,BYTE PTR [ebp+0x10069090]
100553ec:	jmp    0x100553fa
100553ee:	mov    edx,ebp
100553f0:	shr    edx,0x7
100553f3:	movzx  edi,BYTE PTR [edx+0x10069190]
100553fa:	mov    ecx,DWORD PTR [esp+0x24]
100553fe:	movzx  edx,WORD PTR [ecx+edi*4+0x2]
10055403:	mov    ecx,DWORD PTR [eax+0x16bc]
10055409:	mov    esi,0x10
1005540e:	sub    esi,edx
10055410:	cmp    ecx,esi
10055412:	mov    DWORD PTR [esp+0x14],edx
10055416:	jle    0x1005547b
10055418:	mov    edx,DWORD PTR [esp+0x24]
1005541c:	movzx  esi,WORD PTR [edx+edi*4]
10055420:	mov    edx,esi
10055422:	shl    edx,cl
10055424:	mov    ecx,DWORD PTR [eax+0x8]
10055427:	or     WORD PTR [eax+0x16b8],dx
1005542e:	movzx  ebx,BYTE PTR [eax+0x16b8]
10055435:	mov    edx,DWORD PTR [eax+0x14]
10055438:	mov    BYTE PTR [ecx+edx*1],bl
1005543b:	add    DWORD PTR [eax+0x14],0x1
1005543f:	movzx  ebx,BYTE PTR [eax+0x16b9]
10055446:	mov    ecx,DWORD PTR [eax+0x14]
10055449:	mov    edx,DWORD PTR [eax+0x8]
1005544c:	mov    BYTE PTR [ecx+edx*1],bl
1005544f:	mov    edx,DWORD PTR [eax+0x16bc]
10055455:	add    DWORD PTR [eax+0x14],0x1
10055459:	mov    ebx,DWORD PTR [esp+0x20]
1005545d:	mov    cl,0x10
1005545f:	sub    cl,dl
10055461:	shr    si,cl
10055464:	mov    ecx,DWORD PTR [esp+0x14]
10055468:	lea    edx,[edx+ecx*1-0x10]
1005546c:	mov    DWORD PTR [eax+0x16bc],edx
10055472:	mov    WORD PTR [eax+0x16b8],si
10055479:	jmp    0x10055495
1005547b:	mov    esi,DWORD PTR [esp+0x24]
1005547f:	mov    si,WORD PTR [esi+edi*4]
10055483:	shl    si,cl
10055486:	or     WORD PTR [eax+0x16b8],si
1005548d:	add    ecx,edx
1005548f:	mov    DWORD PTR [eax+0x16bc],ecx
10055495:	mov    esi,DWORD PTR [edi*4+0x10068ad0]
1005549c:	test   esi,esi
1005549e:	je     0x10055522
100554a4:	mov    ecx,DWORD PTR [eax+0x16bc]
100554aa:	sub    ebp,DWORD PTR [edi*4+0x10069408]
100554b1:	mov    edx,0x10
100554b6:	sub    edx,esi
100554b8:	cmp    ecx,edx
100554ba:	jle    0x10055511
100554bc:	mov    edx,ebp
100554be:	shl    edx,cl
100554c0:	mov    ecx,DWORD PTR [eax+0x8]
100554c3:	mov    DWORD PTR [esp+0x14],ebx
100554c7:	or     WORD PTR [eax+0x16b8],dx
100554ce:	movzx  ebx,BYTE PTR [eax+0x16b8]
100554d5:	mov    edx,DWORD PTR [eax+0x14]
100554d8:	mov    BYTE PTR [ecx+edx*1],bl
100554db:	add    DWORD PTR [eax+0x14],0x1
100554df:	movzx  ebx,BYTE PTR [eax+0x16b9]
100554e6:	mov    ecx,DWORD PTR [eax+0x14]
100554e9:	mov    edx,DWORD PTR [eax+0x8]
100554ec:	mov    BYTE PTR [ecx+edx*1],bl
100554ef:	mov    edx,DWORD PTR [eax+0x16bc]
100554f5:	add    DWORD PTR [eax+0x14],0x1
100554f9:	mov    ebx,DWORD PTR [esp+0x14]
100554fd:	mov    cl,0x10
100554ff:	sub    cl,dl
10055501:	shr    bp,cl
10055504:	lea    ecx,[edx+esi*1-0x10]
10055508:	mov    WORD PTR [eax+0x16b8],bp
1005550f:	jmp    0x1005551c
10055511:	shl    ebp,cl
10055513:	or     WORD PTR [eax+0x16b8],bp
1005551a:	add    ecx,esi
1005551c:	mov    DWORD PTR [eax+0x16bc],ecx
10055522:	mov    ecx,DWORD PTR [esp+0x18]
10055526:	cmp    ecx,DWORD PTR [eax+0x16a0]
1005552c:	jb     0x10055200
10055532:	movzx  edi,WORD PTR [ebx+0x402]
10055539:	mov    ecx,DWORD PTR [eax+0x16bc]
1005553f:	mov    edx,0x10
10055544:	sub    edx,edi
10055546:	cmp    ecx,edx
10055548:	jle    0x100555bd
1005554a:	movzx  esi,WORD PTR [ebx+0x400]
10055551:	mov    edx,esi
10055553:	shl    edx,cl
10055555:	mov    ecx,DWORD PTR [eax+0x8]
10055558:	mov    DWORD PTR [esp+0x20],ebx
1005555c:	or     WORD PTR [eax+0x16b8],dx
10055563:	mov    edx,DWORD PTR [eax+0x14]
10055566:	mov    bl,BYTE PTR [eax+0x16b8]
1005556c:	mov    BYTE PTR [ecx+edx*1],bl
1005556f:	add    DWORD PTR [eax+0x14],0x1
10055573:	mov    ebp,DWORD PTR [eax+0x14]
10055576:	mov    ecx,DWORD PTR [eax+0x8]
10055579:	mov    dl,BYTE PTR [eax+0x16b9]
1005557f:	mov    ebx,DWORD PTR [esp+0x20]
10055583:	mov    BYTE PTR [ecx+ebp*1],dl
10055586:	mov    edx,DWORD PTR [eax+0x16bc]
1005558c:	add    DWORD PTR [eax+0x14],0x1
10055590:	mov    cl,0x10
10055592:	sub    cl,dl
10055594:	shr    si,cl
10055597:	lea    ecx,[edx+edi*1-0x10]
1005559b:	pop    edi
1005559c:	mov    DWORD PTR [eax+0x16bc],ecx
100555a2:	mov    WORD PTR [eax+0x16b8],si
100555a9:	movzx  edx,WORD PTR [ebx+0x402]
100555b0:	pop    esi
100555b1:	pop    ebp
100555b2:	mov    DWORD PTR [eax+0x16b4],edx
100555b8:	pop    ebx
100555b9:	add    esp,0xc
100555bc:	ret    
100555bd:	mov    dx,WORD PTR [ebx+0x400]
100555c4:	shl    dx,cl
100555c7:	or     WORD PTR [eax+0x16b8],dx
100555ce:	add    ecx,edi
100555d0:	pop    edi
100555d1:	mov    DWORD PTR [eax+0x16bc],ecx
100555d7:	movzx  ecx,WORD PTR [ebx+0x402]
100555de:	pop    esi
100555df:	pop    ebp
100555e0:	mov    DWORD PTR [eax+0x16b4],ecx
100555e6:	pop    ebx
100555e7:	add    esp,0xc
100555ea:	ret    
100555eb:	int3   
100555ec:	int3   
100555ed:	int3   
100555ee:	int3   
100555ef:	int3   
100555f0:	xor    eax,eax
100555f2:	lea    ecx,[edx+0x94]
100555f8:	cmp    WORD PTR [ecx],0x0
100555fc:	jne    0x10055609
100555fe:	add    eax,0x1
10055601:	add    ecx,0x4
10055604:	cmp    eax,0x9
10055607:	jl     0x100555f8
10055609:	cmp    eax,0x9
1005560c:	jne    0x100556ad
10055612:	mov    eax,0xe
10055617:	lea    ecx,[edx+0xd0]
1005561d:	lea    ecx,[ecx+0x0]
10055620:	cmp    WORD PTR [ecx-0x4],0x0
10055625:	jne    0x100556ad
1005562b:	cmp    WORD PTR [ecx],0x0
1005562f:	jne    0x10055666
10055631:	cmp    WORD PTR [ecx+0x4],0x0
10055636:	jne    0x10055677
10055638:	cmp    WORD PTR [ecx+0x8],0x0
1005563d:	jne    0x10055688
1005563f:	cmp    WORD PTR [ecx+0xc],0x0
10055644:	jne    0x10055699
10055646:	cmp    WORD PTR [ecx+0x10],0x0
1005564b:	jne    0x100556aa
1005564d:	add    eax,0x6
10055650:	add    ecx,0x18
10055653:	cmp    eax,0x20
10055656:	jl     0x10055620
10055658:	mov    edx,DWORD PTR [edx]
1005565a:	xor    ecx,ecx
1005565c:	cmp    eax,0x20
1005565f:	sete   cl
10055662:	mov    DWORD PTR [edx+0x2c],ecx
10055665:	ret    
10055666:	mov    edx,DWORD PTR [edx]
10055668:	xor    ecx,ecx
1005566a:	add    eax,0x1
1005566d:	cmp    eax,0x20
10055670:	sete   cl
10055673:	mov    DWORD PTR [edx+0x2c],ecx
10055676:	ret    
10055677:	mov    edx,DWORD PTR [edx]
10055679:	xor    ecx,ecx
1005567b:	add    eax,0x2
1005567e:	cmp    eax,0x20
10055681:	sete   cl
10055684:	mov    DWORD PTR [edx+0x2c],ecx
10055687:	ret    
10055688:	mov    edx,DWORD PTR [edx]
1005568a:	xor    ecx,ecx
1005568c:	add    eax,0x3
1005568f:	cmp    eax,0x20
10055692:	sete   cl
10055695:	mov    DWORD PTR [edx+0x2c],ecx
10055698:	ret    
10055699:	mov    edx,DWORD PTR [edx]
1005569b:	xor    ecx,ecx
1005569d:	add    eax,0x4
100556a0:	cmp    eax,0x20
100556a3:	sete   cl
100556a6:	mov    DWORD PTR [edx+0x2c],ecx
100556a9:	ret    
100556aa:	add    eax,0x5
100556ad:	mov    edx,DWORD PTR [edx]
100556af:	xor    ecx,ecx
100556b1:	cmp    eax,0x20
100556b4:	sete   cl
100556b7:	mov    DWORD PTR [edx+0x2c],ecx
100556ba:	ret    
100556bb:	int3   
100556bc:	int3   
100556bd:	int3   
100556be:	int3   
100556bf:	int3   
100556c0:	xor    eax,eax
100556c2:	push   esi
100556c3:	mov    esi,ecx
100556c5:	and    esi,0x1
100556c8:	or     eax,esi
100556ca:	sub    edx,0x1
100556cd:	shr    ecx,1
100556cf:	add    eax,eax
100556d1:	test   edx,edx
100556d3:	jg     0x100556c3
100556d5:	shr    eax,1
100556d7:	pop    esi
100556d8:	ret    
100556d9:	int3   
100556da:	int3   
100556db:	int3   
100556dc:	int3   
100556dd:	int3   
100556de:	int3   
100556df:	int3   
100556e0:	mov    ecx,DWORD PTR [eax+0x16bc]
100556e6:	cmp    ecx,0x10
100556e9:	push   ebx
100556ea:	jne    0x10055725
100556ec:	movzx  ebx,BYTE PTR [eax+0x16b8]
100556f3:	mov    edx,DWORD PTR [eax+0x14]
100556f6:	mov    ecx,DWORD PTR [eax+0x8]
100556f9:	mov    BYTE PTR [ecx+edx*1],bl
100556fc:	add    DWORD PTR [eax+0x14],0x1
10055700:	movzx  ebx,BYTE PTR [eax+0x16b9]
10055707:	mov    ecx,DWORD PTR [eax+0x14]
1005570a:	mov    edx,DWORD PTR [eax+0x8]
1005570d:	mov    BYTE PTR [ecx+edx*1],bl
10055710:	add    DWORD PTR [eax+0x14],0x1
10055714:	xor    ecx,ecx
10055716:	mov    DWORD PTR [eax+0x16bc],ecx
1005571c:	mov    WORD PTR [eax+0x16b8],cx
10055723:	pop    ebx
10055724:	ret    
10055725:	cmp    ecx,0x8
10055728:	jl     0x10055753
1005572a:	mov    ecx,DWORD PTR [eax+0x8]
1005572d:	mov    edx,DWORD PTR [eax+0x14]
10055730:	mov    bl,BYTE PTR [eax+0x16b8]
10055736:	mov    BYTE PTR [ecx+edx*1],bl
10055739:	movzx  cx,BYTE PTR [eax+0x16b9]
10055741:	add    DWORD PTR [eax+0x14],0x1
10055745:	add    DWORD PTR [eax+0x16bc],0xfffffff8
1005574c:	mov    WORD PTR [eax+0x16b8],cx
10055753:	pop    ebx
10055754:	ret    
10055755:	int3   
10055756:	int3   
10055757:	int3   
10055758:	int3   
10055759:	int3   
1005575a:	int3   
1005575b:	int3   
1005575c:	int3   
1005575d:	int3   
1005575e:	int3   
1005575f:	int3   
10055760:	mov    edx,DWORD PTR [eax+0x16bc]
10055766:	cmp    edx,0x8
10055769:	push   ebx
1005576a:	push   esi
1005576b:	jle    0x100557aa
1005576d:	movzx  ebx,BYTE PTR [eax+0x16b8]
10055774:	mov    edx,DWORD PTR [eax+0x14]
10055777:	mov    ecx,DWORD PTR [eax+0x8]
1005577a:	mov    BYTE PTR [ecx+edx*1],bl
1005577d:	movzx  ebx,BYTE PTR [eax+0x16b9]
10055784:	mov    edx,DWORD PTR [eax+0x8]
10055787:	mov    esi,0x1
1005578c:	add    DWORD PTR [eax+0x14],esi
1005578f:	mov    ecx,DWORD PTR [eax+0x14]
10055792:	mov    BYTE PTR [ecx+edx*1],bl
10055795:	add    DWORD PTR [eax+0x14],esi
10055798:	xor    ecx,ecx
1005579a:	pop    esi
1005579b:	mov    WORD PTR [eax+0x16b8],cx
100557a2:	mov    DWORD PTR [eax+0x16bc],ecx
100557a8:	pop    ebx
100557a9:	ret    
100557aa:	xor    ecx,ecx
100557ac:	cmp    edx,ecx
100557ae:	jle    0x100557c3
100557b0:	mov    esi,DWORD PTR [eax+0x14]
100557b3:	mov    edx,DWORD PTR [eax+0x8]
100557b6:	mov    bl,BYTE PTR [eax+0x16b8]
100557bc:	mov    BYTE PTR [edx+esi*1],bl
100557bf:	add    DWORD PTR [eax+0x14],0x1
100557c3:	pop    esi
100557c4:	mov    WORD PTR [eax+0x16b8],cx
100557cb:	mov    DWORD PTR [eax+0x16bc],ecx
100557d1:	pop    ebx
100557d2:	ret    
100557d3:	int3   
100557d4:	int3   
100557d5:	int3   
100557d6:	int3   
100557d7:	int3   
100557d8:	int3   
100557d9:	int3   
100557da:	int3   
100557db:	int3   
100557dc:	int3   
100557dd:	int3   
100557de:	int3   
100557df:	int3   
100557e0:	push   ebx
100557e1:	push   esi
100557e2:	push   edi
100557e3:	mov    ebx,ecx
100557e5:	mov    esi,edx
100557e7:	call   0x10055760
100557ec:	cmp    DWORD PTR [esp+0x10],0x0
100557f1:	mov    DWORD PTR [eax+0x16b4],0x8
100557fb:	mov    edi,0x1
10055800:	je     0x1005583c
10055802:	mov    ecx,DWORD PTR [eax+0x14]
10055805:	mov    edx,DWORD PTR [eax+0x8]
10055808:	mov    BYTE PTR [ecx+edx*1],bl
1005580b:	add    DWORD PTR [eax+0x14],edi
1005580e:	mov    ecx,DWORD PTR [eax+0x14]
10055811:	mov    edx,DWORD PTR [eax+0x8]
10055814:	mov    BYTE PTR [ecx+edx*1],bh
10055817:	add    DWORD PTR [eax+0x14],edi
1005581a:	mov    edx,DWORD PTR [eax+0x8]
1005581d:	push   ebp
1005581e:	mov    ebp,DWORD PTR [eax+0x14]
10055821:	mov    cl,bl
10055823:	not    cl
10055825:	mov    BYTE PTR [edx+ebp*1],cl
10055828:	add    DWORD PTR [eax+0x14],edi
1005582b:	mov    ebp,DWORD PTR [eax+0x14]
1005582e:	mov    edx,DWORD PTR [eax+0x8]
10055831:	mov    ecx,ebx
10055833:	not    ecx
10055835:	mov    BYTE PTR [edx+ebp*1],ch
10055838:	add    DWORD PTR [eax+0x14],edi
1005583b:	pop    ebp
1005583c:	test   ebx,ebx
1005583e:	je     0x1005585e
10055840:	mov    ecx,DWORD PTR [eax+0x14]
10055843:	mov    edx,DWORD PTR [eax+0x8]
10055846:	sub    ebx,edi
10055848:	mov    DWORD PTR [esp+0x10],ebx
1005584c:	mov    bl,BYTE PTR [esi]
1005584e:	mov    BYTE PTR [ecx+edx*1],bl
10055851:	mov    ebx,DWORD PTR [esp+0x10]
10055855:	add    DWORD PTR [eax+0x14],edi
10055858:	add    esi,edi
1005585a:	test   ebx,ebx
1005585c:	jne    0x10055840
1005585e:	pop    edi
1005585f:	pop    esi
10055860:	pop    ebx
10055861:	ret    
10055862:	int3   
10055863:	int3   
10055864:	int3   
10055865:	int3   
10055866:	int3   
10055867:	int3   
10055868:	int3   
10055869:	int3   
1005586a:	int3   
1005586b:	int3   
1005586c:	int3   
1005586d:	int3   
1005586e:	int3   
1005586f:	int3   
10055870:	mov    edx,DWORD PTR [esp+0x4]
10055874:	lea    eax,[edx+0x94]
1005587a:	mov    DWORD PTR [edx+0xb18],eax
10055880:	lea    eax,[edx+0xa7c]
10055886:	mov    DWORD PTR [edx+0xb30],eax
1005588c:	xor    eax,eax
1005588e:	lea    ecx,[edx+0x988]
10055894:	mov    DWORD PTR [edx+0xb20],0x1007efb0
1005589e:	mov    DWORD PTR [edx+0xb24],ecx
100558a4:	mov    DWORD PTR [edx+0xb2c],0x1007efc4
100558ae:	mov    DWORD PTR [edx+0xb38],0x1007efd8
100558b8:	mov    WORD PTR [edx+0x16b8],ax
100558bf:	mov    DWORD PTR [edx+0x16bc],eax
100558c5:	mov    DWORD PTR [edx+0x16b4],0x8
100558cf:	jmp    0x10054610
100558d4:	int3   
100558d5:	int3   
100558d6:	int3   
100558d7:	int3   
100558d8:	int3   
100558d9:	int3   
100558da:	int3   
100558db:	int3   
100558dc:	int3   
100558dd:	int3   
100558de:	int3   
100558df:	int3   
100558e0:	sub    esp,0x24
100558e3:	mov    eax,ds:0x1007e030
100558e8:	xor    eax,esp
100558ea:	mov    DWORD PTR [esp+0x20],eax
100558ee:	push   esi
100558ef:	lea    esi,[esp+0x6]
100558f3:	xor    ecx,ecx
100558f5:	mov    eax,0x1
100558fa:	sub    edx,esi
100558fc:	lea    esp,[esp+0x0]
10055900:	lea    esi,[edx+eax*2]
10055903:	mov    si,WORD PTR [esp+esi*1+0x4]
10055908:	add    si,cx
1005590b:	add    si,si
1005590e:	movzx  ecx,si
10055911:	mov    WORD PTR [esp+eax*2+0x4],cx
10055916:	add    eax,0x1
10055919:	cmp    eax,0xf
1005591c:	jle    0x10055900
1005591e:	xor    esi,esi
10055920:	test   ebx,ebx
10055922:	jl     0x1005594d
10055924:	movzx  edx,WORD PTR [edi+esi*4+0x2]
10055929:	test   edx,edx
1005592b:	je     0x10055946
1005592d:	movzx  eax,WORD PTR [esp+edx*2+0x4]
10055932:	movzx  ecx,ax
10055935:	add    eax,0x1
10055938:	mov    WORD PTR [esp+edx*2+0x4],ax
1005593d:	call   0x100556c0
10055942:	mov    WORD PTR [edi+esi*4],ax
10055946:	add    esi,0x1
10055949:	cmp    esi,ebx
1005594b:	jle    0x10055924
1005594d:	mov    ecx,DWORD PTR [esp+0x24]
10055951:	pop    esi
10055952:	xor    ecx,esp
10055954:	call   0x100430d7
10055959:	add    esp,0x24
1005595c:	ret    
1005595d:	int3   
1005595e:	int3   
1005595f:	int3   
10055960:	sub    esp,0x8
10055963:	mov    eax,DWORD PTR [esp+0xc]
10055967:	push   ebx
10055968:	push   ebp
10055969:	push   edi
1005596a:	mov    edi,DWORD PTR [eax]
1005596c:	mov    eax,DWORD PTR [eax+0x8]
1005596f:	mov    ecx,DWORD PTR [eax+0xc]
10055972:	mov    ebp,DWORD PTR [eax]
10055974:	xor    edx,edx
10055976:	or     ebx,0xffffffff
10055979:	xor    eax,eax
1005597b:	cmp    ecx,edx
1005597d:	mov    DWORD PTR [esp+0x10],ecx
10055981:	mov    DWORD PTR [esp+0xc],ebx
10055985:	mov    DWORD PTR [esi+0x1450],edx
1005598b:	mov    DWORD PTR [esi+0x1454],0x23d
10055995:	jle    0x100559ce
10055997:	cmp    WORD PTR [edi+eax*4],dx
1005599b:	je     0x100559c0
1005599d:	add    DWORD PTR [esi+0x1450],0x1
100559a4:	mov    ecx,DWORD PTR [esi+0x1450]
100559aa:	mov    DWORD PTR [esi+ecx*4+0xb5c],eax
100559b1:	mov    DWORD PTR [esp+0xc],eax
100559b5:	mov    BYTE PTR [eax+esi*1+0x1458],dl
100559bc:	mov    ebx,eax
100559be:	jmp    0x100559c5
100559c0:	mov    WORD PTR [edi+eax*4+0x2],dx
100559c5:	add    eax,0x1
100559c8:	cmp    eax,DWORD PTR [esp+0x10]
100559cc:	jl     0x10055997
100559ce:	cmp    DWORD PTR [esi+0x1450],0x2
100559d5:	jge    0x10055a29
100559d7:	cmp    ebx,0x2
100559da:	jge    0x100559e3
100559dc:	add    ebx,0x1
100559df:	mov    eax,ebx
100559e1:	jmp    0x100559e5
100559e3:	xor    eax,eax
100559e5:	add    DWORD PTR [esi+0x1450],0x1
100559ec:	mov    ecx,DWORD PTR [esi+0x1450]
100559f2:	mov    DWORD PTR [esi+ecx*4+0xb5c],eax
100559f9:	mov    WORD PTR [edi+eax*4],0x1
100559ff:	mov    BYTE PTR [esi+eax*1+0x1458],dl
10055a06:	add    DWORD PTR [esi+0x16a8],0xffffffff
10055a0d:	cmp    ebp,edx
10055a0f:	je     0x10055a1c
10055a11:	movzx  eax,WORD PTR [ebp+eax*4+0x2]
10055a16:	sub    DWORD PTR [esi+0x16ac],eax
10055a1c:	cmp    DWORD PTR [esi+0x1450],0x2
10055a23:	jl     0x100559d7
10055a25:	mov    DWORD PTR [esp+0xc],ebx
10055a29:	mov    ecx,DWORD PTR [esp+0x18]
10055a2d:	mov    DWORD PTR [ecx+0x4],ebx
10055a30:	mov    eax,DWORD PTR [esi+0x1450]
10055a36:	cdq    
10055a37:	sub    eax,edx
10055a39:	mov    ebp,eax
10055a3b:	sar    ebp,1
10055a3d:	cmp    ebp,0x1
10055a40:	jl     0x10055a55
10055a42:	push   ebp
10055a43:	mov    eax,esi
10055a45:	call   0x10054680
10055a4a:	sub    ebp,0x1
10055a4d:	add    esp,0x4
10055a50:	cmp    ebp,0x1
10055a53:	jge    0x10055a42
10055a55:	mov    ebx,DWORD PTR [esp+0x10]
10055a59:	lea    esp,[esp+0x0]
10055a60:	mov    eax,DWORD PTR [esi+0x1450]
10055a66:	mov    edx,DWORD PTR [esi+eax*4+0xb5c]
10055a6d:	mov    ebp,DWORD PTR [esi+0xb60]
10055a73:	add    eax,0xffffffff
10055a76:	mov    DWORD PTR [esi+0x1450],eax
10055a7c:	push   0x1
10055a7e:	mov    eax,esi
10055a80:	mov    DWORD PTR [esi+0xb60],edx
10055a86:	call   0x10054680
10055a8b:	mov    eax,DWORD PTR [esi+0xb60]
10055a91:	or     edx,0xffffffff
10055a94:	add    DWORD PTR [esi+0x1454],edx
10055a9a:	mov    ecx,DWORD PTR [esi+0x1454]
10055aa0:	mov    DWORD PTR [esi+ecx*4+0xb5c],ebp
10055aa7:	add    DWORD PTR [esi+0x1454],edx
10055aad:	mov    ecx,DWORD PTR [esi+0x1454]
10055ab3:	mov    DWORD PTR [esi+ecx*4+0xb5c],eax
10055aba:	mov    cx,WORD PTR [edi+eax*4]
10055abe:	add    cx,WORD PTR [edi+ebp*4]
10055ac2:	add    esp,0x4
10055ac5:	mov    WORD PTR [edi+ebx*4],cx
10055ac9:	mov    cl,BYTE PTR [esi+eax*1+0x1458]
10055ad0:	mov    dl,BYTE PTR [esi+ebp*1+0x1458]
10055ad7:	cmp    dl,cl
10055ad9:	jb     0x10055ae0
10055adb:	movzx  ecx,dl
10055ade:	jmp    0x10055ae3
10055ae0:	movzx  ecx,cl
10055ae3:	add    cl,0x1
10055ae6:	mov    BYTE PTR [esi+ebx*1+0x1458],cl
10055aed:	movzx  ecx,bx
10055af0:	mov    WORD PTR [edi+eax*4+0x2],cx
10055af5:	mov    WORD PTR [edi+ebp*4+0x2],cx
10055afa:	mov    DWORD PTR [esi+0xb60],ebx
10055b00:	push   0x1
10055b02:	mov    eax,esi
10055b04:	add    ebx,0x1
10055b07:	call   0x10054680
10055b0c:	add    esp,0x4
10055b0f:	cmp    DWORD PTR [esi+0x1450],0x2
10055b16:	jge    0x10055a60
10055b1c:	add    DWORD PTR [esi+0x1454],0xffffffff
10055b23:	mov    eax,DWORD PTR [esi+0x1454]
10055b29:	mov    edx,DWORD PTR [esi+0xb60]
10055b2f:	mov    ecx,DWORD PTR [esp+0x18]
10055b33:	mov    DWORD PTR [esi+eax*4+0xb5c],edx
10055b3a:	mov    eax,esi
10055b3c:	call   0x10054750
10055b41:	mov    ebx,DWORD PTR [esp+0xc]
10055b45:	lea    edx,[esi+0xb3c]
10055b4b:	call   0x100558e0
10055b50:	pop    edi
10055b51:	pop    ebp
10055b52:	pop    ebx
10055b53:	add    esp,0x8
10055b56:	ret    
10055b57:	int3   
10055b58:	int3   
10055b59:	int3   
10055b5a:	int3   
10055b5b:	int3   
10055b5c:	int3   
10055b5d:	int3   
10055b5e:	int3   
10055b5f:	int3   
10055b60:	push   esi
10055b61:	mov    esi,eax
10055b63:	mov    ecx,DWORD PTR [esi+0xb1c]
10055b69:	lea    eax,[esi+0x94]
10055b6f:	push   esi
10055b70:	call   0x10054970
10055b75:	mov    ecx,DWORD PTR [esi+0xb28]
10055b7b:	lea    eax,[esi+0x988]
10055b81:	push   esi
10055b82:	call   0x10054970
10055b87:	lea    eax,[esi+0xb30]
10055b8d:	push   eax
10055b8e:	call   0x10055960
10055b93:	add    esp,0xc
10055b96:	mov    eax,0x12
10055b9b:	jmp    0x10055ba0
10055b9d:	lea    ecx,[ecx+0x0]
10055ba0:	movzx  ecx,BYTE PTR [eax+0x10068abc]
10055ba7:	cmp    WORD PTR [esi+ecx*4+0xa7e],0x0
10055bb0:	jne    0x10055c1d
10055bb2:	movzx  edx,BYTE PTR [eax+0x10068abb]
10055bb9:	cmp    WORD PTR [esi+edx*4+0xa7e],0x0
10055bc2:	jne    0x10055bfc
10055bc4:	movzx  ecx,BYTE PTR [eax+0x10068aba]
10055bcb:	cmp    WORD PTR [esi+ecx*4+0xa7e],0x0
10055bd4:	jne    0x10055c0b
10055bd6:	movzx  edx,BYTE PTR [eax+0x10068ab9]
10055bdd:	cmp    WORD PTR [esi+edx*4+0xa7e],0x0
10055be6:	jne    0x10055c1a
10055be8:	sub    eax,0x4
10055beb:	cmp    eax,0x3
10055bee:	jge    0x10055ba0
10055bf0:	lea    ecx,[eax+eax*2+0x11]
10055bf4:	add    DWORD PTR [esi+0x16a8],ecx
10055bfa:	pop    esi
10055bfb:	ret    
10055bfc:	sub    eax,0x1
10055bff:	lea    ecx,[eax+eax*2+0x11]
10055c03:	add    DWORD PTR [esi+0x16a8],ecx
10055c09:	pop    esi
10055c0a:	ret    
10055c0b:	sub    eax,0x2
10055c0e:	lea    ecx,[eax+eax*2+0x11]
10055c12:	add    DWORD PTR [esi+0x16a8],ecx
10055c18:	pop    esi
10055c19:	ret    
10055c1a:	sub    eax,0x3
10055c1d:	lea    ecx,[eax+eax*2+0x11]
10055c21:	add    DWORD PTR [esi+0x16a8],ecx
10055c27:	pop    esi
10055c28:	ret    
10055c29:	int3   
10055c2a:	int3   
10055c2b:	int3   
10055c2c:	int3   
10055c2d:	int3   
10055c2e:	int3   
10055c2f:	int3   
10055c30:	mov    eax,DWORD PTR [esp+0x4]
10055c34:	mov    ecx,DWORD PTR [eax+0x16bc]
10055c3a:	cmp    ecx,0xd
10055c3d:	jle    0x10055ca8
10055c3f:	push   ebx
10055c40:	push   esi
10055c41:	mov    esi,DWORD PTR [esp+0x18]
10055c45:	mov    edx,esi
10055c47:	shl    edx,cl
10055c49:	mov    ecx,DWORD PTR [eax+0x8]
10055c4c:	or     WORD PTR [eax+0x16b8],dx
10055c53:	movzx  ebx,BYTE PTR [eax+0x16b8]
10055c5a:	mov    edx,DWORD PTR [eax+0x14]
10055c5d:	mov    BYTE PTR [ecx+edx*1],bl
10055c60:	movzx  ebx,BYTE PTR [eax+0x16b9]
10055c67:	add    DWORD PTR [eax+0x14],0x1
10055c6b:	mov    ecx,DWORD PTR [eax+0x14]
10055c6e:	mov    edx,DWORD PTR [eax+0x8]
10055c71:	mov    BYTE PTR [ecx+edx*1],bl
10055c74:	mov    edx,DWORD PTR [eax+0x16bc]
10055c7a:	add    DWORD PTR [eax+0x14],0x1
10055c7e:	mov    cl,0x10
10055c80:	sub    cl,dl
10055c82:	shr    si,cl
10055c85:	mov    ecx,DWORD PTR [esp+0x14]
10055c89:	add    edx,0xfffffff3
10055c8c:	mov    DWORD PTR [eax+0x16bc],edx
10055c92:	mov    edx,DWORD PTR [esp+0x10]
10055c96:	mov    WORD PTR [eax+0x16b8],si
10055c9d:	pop    esi
10055c9e:	pop    ebx
10055c9f:	push   0x1
10055ca1:	call   0x100557e0
10055ca6:	pop    ecx
10055ca7:	ret    
10055ca8:	mov    edx,DWORD PTR [esp+0x10]
10055cac:	shl    edx,cl
10055cae:	add    ecx,0x3
10055cb1:	mov    DWORD PTR [eax+0x16bc],ecx
10055cb7:	mov    ecx,DWORD PTR [esp+0xc]
10055cbb:	or     WORD PTR [eax+0x16b8],dx
10055cc2:	mov    edx,DWORD PTR [esp+0x8]
10055cc6:	push   0x1
10055cc8:	call   0x100557e0
10055ccd:	pop    ecx
10055cce:	ret    
10055ccf:	int3   
10055cd0:	mov    eax,DWORD PTR [esp+0x4]
10055cd4:	mov    ecx,DWORD PTR [eax+0x16bc]
10055cda:	mov    edx,0x2
10055cdf:	shl    edx,cl
10055ce1:	push   ebx
10055ce2:	push   esi
10055ce3:	push   edi
10055ce4:	or     WORD PTR [eax+0x16b8],dx
10055ceb:	cmp    ecx,0xd
10055cee:	mov    esi,0x1
10055cf3:	jle    0x10055d3f
10055cf5:	movzx  ebx,BYTE PTR [eax+0x16b8]
10055cfc:	mov    edx,DWORD PTR [eax+0x14]
10055cff:	mov    ecx,DWORD PTR [eax+0x8]
10055d02:	mov    BYTE PTR [ecx+edx*1],bl
10055d05:	add    DWORD PTR [eax+0x14],esi
10055d08:	movzx  ebx,BYTE PTR [eax+0x16b9]
10055d0f:	mov    ecx,DWORD PTR [eax+0x14]
10055d12:	mov    edx,DWORD PTR [eax+0x8]
10055d15:	mov    BYTE PTR [ecx+edx*1],bl
10055d18:	mov    edx,DWORD PTR [eax+0x16bc]
10055d1e:	add    DWORD PTR [eax+0x14],esi
10055d21:	mov    cl,0x10
10055d23:	sub    cl,dl
10055d25:	mov    edi,0x2
10055d2a:	shr    di,cl
10055d2d:	add    edx,0xfffffff3
10055d30:	mov    DWORD PTR [eax+0x16bc],edx
10055d36:	mov    WORD PTR [eax+0x16b8],di
10055d3d:	jmp    0x10055d48
10055d3f:	add    ecx,0x3
10055d42:	mov    DWORD PTR [eax+0x16bc],ecx
10055d48:	mov    ecx,DWORD PTR [eax+0x16bc]
10055d4e:	xor    edx,edx
10055d50:	shl    edx,cl
10055d52:	or     WORD PTR [eax+0x16b8],dx
10055d59:	cmp    ecx,0x9
10055d5c:	jle    0x10055da5
10055d5e:	movzx  ebx,BYTE PTR [eax+0x16b8]
10055d65:	mov    edx,DWORD PTR [eax+0x14]
10055d68:	mov    ecx,DWORD PTR [eax+0x8]
10055d6b:	mov    BYTE PTR [ecx+edx*1],bl
10055d6e:	add    DWORD PTR [eax+0x14],esi
10055d71:	movzx  ebx,BYTE PTR [eax+0x16b9]
10055d78:	mov    ecx,DWORD PTR [eax+0x14]
10055d7b:	mov    edx,DWORD PTR [eax+0x8]
10055d7e:	mov    BYTE PTR [ecx+edx*1],bl
10055d81:	mov    edx,DWORD PTR [eax+0x16bc]
10055d87:	add    DWORD PTR [eax+0x14],esi
10055d8a:	mov    cl,0x10
10055d8c:	sub    cl,dl
10055d8e:	xor    edi,edi
10055d90:	shr    di,cl
10055d93:	add    edx,0xfffffff7
10055d96:	mov    DWORD PTR [eax+0x16bc],edx
10055d9c:	mov    WORD PTR [eax+0x16b8],di
10055da3:	jmp    0x10055dae
10055da5:	add    ecx,0x7
10055da8:	mov    DWORD PTR [eax+0x16bc],ecx
10055dae:	call   0x100556e0
10055db3:	mov    ecx,DWORD PTR [eax+0x16bc]
10055db9:	mov    edx,DWORD PTR [eax+0x16b4]
10055dbf:	sub    edx,ecx
10055dc1:	add    edx,0xb
10055dc4:	cmp    edx,0x9
10055dc7:	jge    0x10055eaf
10055dcd:	mov    edx,0x2
10055dd2:	shl    edx,cl
10055dd4:	or     WORD PTR [eax+0x16b8],dx
10055ddb:	cmp    ecx,0xd
10055dde:	jle    0x10055e2a
10055de0:	movzx  ebx,BYTE PTR [eax+0x16b8]
10055de7:	mov    edx,DWORD PTR [eax+0x14]
10055dea:	mov    ecx,DWORD PTR [eax+0x8]
10055ded:	mov    BYTE PTR [ecx+edx*1],bl
10055df0:	add    DWORD PTR [eax+0x14],esi
10055df3:	movzx  ebx,BYTE PTR [eax+0x16b9]
10055dfa:	mov    ecx,DWORD PTR [eax+0x14]
10055dfd:	mov    edx,DWORD PTR [eax+0x8]
10055e00:	mov    BYTE PTR [ecx+edx*1],bl
10055e03:	mov    edx,DWORD PTR [eax+0x16bc]
10055e09:	add    DWORD PTR [eax+0x14],esi
10055e0c:	mov    cl,0x10
10055e0e:	sub    cl,dl
10055e10:	mov    edi,0x2
10055e15:	shr    di,cl
10055e18:	add    edx,0xfffffff3
10055e1b:	mov    DWORD PTR [eax+0x16bc],edx
10055e21:	mov    WORD PTR [eax+0x16b8],di
10055e28:	jmp    0x10055e33
10055e2a:	add    ecx,0x3
10055e2d:	mov    DWORD PTR [eax+0x16bc],ecx
10055e33:	mov    ecx,DWORD PTR [eax+0x16bc]
10055e39:	xor    edx,edx
10055e3b:	shl    edx,cl
10055e3d:	or     WORD PTR [eax+0x16b8],dx
10055e44:	cmp    ecx,0x9
10055e47:	jle    0x10055ea1
10055e49:	movzx  ebx,BYTE PTR [eax+0x16b8]
10055e50:	mov    edx,DWORD PTR [eax+0x14]
10055e53:	mov    ecx,DWORD PTR [eax+0x8]
10055e56:	mov    BYTE PTR [ecx+edx*1],bl
10055e59:	add    DWORD PTR [eax+0x14],esi
10055e5c:	movzx  ebx,BYTE PTR [eax+0x16b9]
10055e63:	mov    ecx,DWORD PTR [eax+0x14]
10055e66:	mov    edx,DWORD PTR [eax+0x8]
10055e69:	mov    BYTE PTR [ecx+edx*1],bl
10055e6c:	mov    edx,DWORD PTR [eax+0x16bc]
10055e72:	add    DWORD PTR [eax+0x14],esi
10055e75:	mov    cl,0x10
10055e77:	sub    cl,dl
10055e79:	xor    esi,esi
10055e7b:	shr    si,cl
10055e7e:	add    edx,0xfffffff7
10055e81:	mov    DWORD PTR [eax+0x16bc],edx
10055e87:	mov    WORD PTR [eax+0x16b8],si
10055e8e:	call   0x100556e0
10055e93:	pop    edi
10055e94:	pop    esi
10055e95:	mov    DWORD PTR [eax+0x16b4],0x7
10055e9f:	pop    ebx
10055ea0:	ret    
10055ea1:	add    ecx,0x7
10055ea4:	mov    DWORD PTR [eax+0x16bc],ecx
10055eaa:	call   0x100556e0
10055eaf:	pop    edi
10055eb0:	pop    esi
10055eb1:	mov    DWORD PTR [eax+0x16b4],0x7
10055ebb:	pop    ebx
10055ebc:	ret    
10055ebd:	int3   
10055ebe:	int3   
10055ebf:	int3   
10055ec0:	push   ecx
10055ec1:	push   ebx
10055ec2:	mov    ebx,DWORD PTR [esp+0x14]
10055ec6:	push   esi
10055ec7:	mov    esi,DWORD PTR [esp+0x10]
10055ecb:	cmp    DWORD PTR [esi+0x84],0x0
10055ed2:	push   edi
10055ed3:	mov    DWORD PTR [esp+0xc],0x0
10055edb:	jle    0x10055f34
10055edd:	test   ebx,ebx
10055edf:	jbe    0x10055ef0
10055ee1:	mov    eax,DWORD PTR [esi]
10055ee3:	cmp    DWORD PTR [eax+0x2c],0x2
10055ee7:	jne    0x10055ef0
10055ee9:	mov    edx,esi
10055eeb:	call   0x100555f0
10055ef0:	lea    ecx,[esi+0xb18]
10055ef6:	push   ecx
10055ef7:	call   0x10055960
10055efc:	lea    edx,[esi+0xb24]
10055f02:	push   edx
10055f03:	call   0x10055960
10055f08:	add    esp,0x8
10055f0b:	mov    eax,esi
10055f0d:	call   0x10055b60
10055f12:	mov    edx,DWORD PTR [esi+0x16a8]
10055f18:	mov    ecx,DWORD PTR [esi+0x16ac]
10055f1e:	add    edx,0xa
10055f21:	add    ecx,0xa
10055f24:	shr    edx,0x3
10055f27:	shr    ecx,0x3
10055f2a:	cmp    ecx,edx
10055f2c:	mov    DWORD PTR [esp+0xc],eax
10055f30:	ja     0x10055f39
10055f32:	jmp    0x10055f37
10055f34:	lea    ecx,[ebx+0x5]
10055f37:	mov    edx,ecx
10055f39:	lea    eax,[ebx+0x4]
10055f3c:	cmp    eax,edx
10055f3e:	ja     0x10055f5d
10055f40:	mov    eax,DWORD PTR [esp+0x18]
10055f44:	test   eax,eax
10055f46:	je     0x10055f5d
10055f48:	mov    edi,DWORD PTR [esp+0x20]
10055f4c:	push   edi
10055f4d:	push   ebx
10055f4e:	push   eax
10055f4f:	push   esi
10055f50:	call   0x10055c30
10055f55:	add    esp,0x10
10055f58:	jmp    0x100560b2
10055f5d:	cmp    DWORD PTR [esi+0x88],0x4
10055f64:	je     0x10056028
10055f6a:	cmp    ecx,edx
10055f6c:	je     0x10056028
10055f72:	mov    ecx,DWORD PTR [esi+0x16bc]
10055f78:	cmp    ecx,0xd
10055f7b:	mov    edi,DWORD PTR [esp+0x20]
10055f7f:	lea    edx,[edi+0x4]
10055f82:	jle    0x10055fd6
10055f84:	mov    eax,edx
10055f86:	shl    eax,cl
10055f88:	mov    ecx,DWORD PTR [esi+0x8]
10055f8b:	or     WORD PTR [esi+0x16b8],ax
10055f92:	movzx  ebx,BYTE PTR [esi+0x16b8]
10055f99:	mov    eax,DWORD PTR [esi+0x14]
10055f9c:	mov    BYTE PTR [ecx+eax*1],bl
10055f9f:	add    DWORD PTR [esi+0x14],0x1
10055fa3:	movzx  ebx,BYTE PTR [esi+0x16b9]
10055faa:	mov    ecx,DWORD PTR [esi+0x14]
10055fad:	mov    eax,DWORD PTR [esi+0x8]
10055fb0:	mov    BYTE PTR [ecx+eax*1],bl
10055fb3:	mov    ebx,DWORD PTR [esi+0x16bc]
10055fb9:	add    DWORD PTR [esi+0x14],0x1
10055fbd:	mov    cl,0x10
10055fbf:	sub    cl,bl
10055fc1:	shr    dx,cl
10055fc4:	add    ebx,0xfffffff3
10055fc7:	mov    DWORD PTR [esi+0x16bc],ebx
10055fcd:	mov    WORD PTR [esi+0x16b8],dx
10055fd4:	jmp    0x10055fe8
10055fd6:	shl    edx,cl
10055fd8:	or     WORD PTR [esi+0x16b8],dx
10055fdf:	add    ecx,0x3
10055fe2:	mov    DWORD PTR [esi+0x16bc],ecx
10055fe8:	mov    eax,DWORD PTR [esp+0xc]
10055fec:	mov    ecx,DWORD PTR [esi+0xb28]
10055ff2:	mov    edx,DWORD PTR [esi+0xb1c]
10055ff8:	add    eax,0x1
10055ffb:	push   eax
10055ffc:	add    ecx,0x1
10055fff:	push   ecx
10056000:	add    edx,0x1
10056003:	push   edx
10056004:	mov    eax,esi
10056006:	call   0x10054f80
1005600b:	lea    eax,[esi+0x988]
10056011:	push   eax
10056012:	lea    ecx,[esi+0x94]
10056018:	push   ecx
10056019:	mov    eax,esi
1005601b:	call   0x100551e0
10056020:	add    esp,0x14
10056023:	jmp    0x100560b2
10056028:	mov    ecx,DWORD PTR [esi+0x16bc]
1005602e:	cmp    ecx,0xd
10056031:	mov    edi,DWORD PTR [esp+0x20]
10056035:	lea    eax,[edi+0x2]
10056038:	jle    0x1005608c
1005603a:	mov    edx,eax
1005603c:	shl    edx,cl
1005603e:	mov    ecx,DWORD PTR [esi+0x8]
10056041:	or     WORD PTR [esi+0x16b8],dx
10056048:	movzx  ebx,BYTE PTR [esi+0x16b8]
1005604f:	mov    edx,DWORD PTR [esi+0x14]
10056052:	mov    BYTE PTR [ecx+edx*1],bl
10056055:	add    DWORD PTR [esi+0x14],0x1
10056059:	movzx  ebx,BYTE PTR [esi+0x16b9]
10056060:	mov    ecx,DWORD PTR [esi+0x14]
10056063:	mov    edx,DWORD PTR [esi+0x8]
10056066:	mov    BYTE PTR [ecx+edx*1],bl
10056069:	mov    edx,DWORD PTR [esi+0x16bc]
1005606f:	add    DWORD PTR [esi+0x14],0x1
10056073:	mov    cl,0x10
10056075:	sub    cl,dl
10056077:	shr    ax,cl
1005607a:	add    edx,0xfffffff3
1005607d:	mov    DWORD PTR [esi+0x16bc],edx
10056083:	mov    WORD PTR [esi+0x16b8],ax
1005608a:	jmp    0x1005609e
1005608c:	shl    eax,cl
1005608e:	or     WORD PTR [esi+0x16b8],ax
10056095:	add    ecx,0x3
10056098:	mov    DWORD PTR [esi+0x16bc],ecx
1005609e:	push   0x10069018
100560a3:	push   0x10068b98
100560a8:	mov    eax,esi
100560aa:	call   0x100551e0
100560af:	add    esp,0x8
100560b2:	mov    edx,esi
100560b4:	call   0x10054610
100560b9:	test   edi,edi
100560bb:	pop    edi
100560bc:	je     0x100560ca
100560be:	mov    eax,esi
100560c0:	pop    esi
100560c1:	pop    ebx
100560c2:	add    esp,0x4
100560c5:	jmp    0x10055760
100560ca:	pop    esi
100560cb:	pop    ebx
100560cc:	pop    ecx
100560cd:	ret    
100560ce:	int3   
100560cf:	int3   
100560d0:	push   esi
100560d1:	mov    esi,edx
100560d3:	test   esi,esi
100560d5:	not    eax
100560d7:	je     0x10056102
100560d9:	lea    esp,[esp+0x0]
100560e0:	test   cl,0x3
100560e3:	je     0x10056102
100560e5:	movzx  edx,BYTE PTR [ecx]
100560e8:	xor    edx,eax
100560ea:	and    edx,0xff
100560f0:	shr    eax,0x8
100560f3:	xor    eax,DWORD PTR [edx*4+0x10069480]
100560fa:	add    ecx,0x1
100560fd:	sub    esi,0x1
10056100:	jne    0x100560e0
10056102:	cmp    esi,0x20
10056105:	push   ebx
10056106:	push   edi
10056107:	jb     0x100562ec
1005610d:	mov    edi,esi
1005610f:	shr    edi,0x5
10056112:	xor    eax,DWORD PTR [ecx]
10056114:	add    ecx,0x4
10056117:	mov    edx,eax
10056119:	shr    edx,0x10
1005611c:	movzx  ebx,ah
1005611f:	and    edx,0xff
10056125:	mov    edx,DWORD PTR [edx*4+0x10069880]
1005612c:	xor    edx,DWORD PTR [ebx*4+0x10069c80]
10056133:	mov    ebx,eax
10056135:	and    eax,0xff
1005613a:	shr    ebx,0x18
1005613d:	xor    edx,DWORD PTR [ebx*4+0x10069480]
10056144:	add    ecx,0x4
10056147:	xor    edx,DWORD PTR [eax*4+0x1006a080]
1005614e:	add    ecx,0x4
10056151:	xor    edx,DWORD PTR [ecx-0x8]
10056154:	add    ecx,0x4
10056157:	mov    eax,edx
10056159:	shr    eax,0x10
1005615c:	and    eax,0xff
10056161:	mov    eax,DWORD PTR [eax*4+0x10069880]
10056168:	movzx  ebx,dh
1005616b:	xor    eax,DWORD PTR [ebx*4+0x10069c80]
10056172:	mov    ebx,edx
10056174:	and    edx,0xff
1005617a:	shr    ebx,0x18
1005617d:	xor    eax,DWORD PTR [ebx*4+0x10069480]
10056184:	add    ecx,0x4
10056187:	xor    eax,DWORD PTR [edx*4+0x1006a080]
1005618e:	add    ecx,0x4
10056191:	xor    eax,DWORD PTR [ecx-0x10]
10056194:	mov    edx,eax
10056196:	shr    edx,0x10
10056199:	movzx  ebx,ah
1005619c:	and    edx,0xff
100561a2:	mov    edx,DWORD PTR [edx*4+0x10069880]
100561a9:	xor    edx,DWORD PTR [ebx*4+0x10069c80]
100561b0:	mov    ebx,eax
100561b2:	and    eax,0xff
100561b7:	shr    ebx,0x18
100561ba:	xor    edx,DWORD PTR [ebx*4+0x10069480]
100561c1:	xor    edx,DWORD PTR [eax*4+0x1006a080]
100561c8:	xor    edx,DWORD PTR [ecx-0xc]
100561cb:	mov    eax,edx
100561cd:	shr    eax,0x10
100561d0:	and    eax,0xff
100561d5:	mov    eax,DWORD PTR [eax*4+0x10069880]
100561dc:	movzx  ebx,dh
100561df:	xor    eax,DWORD PTR [ebx*4+0x10069c80]
100561e6:	mov    ebx,edx
100561e8:	and    edx,0xff
100561ee:	shr    ebx,0x18
100561f1:	xor    eax,DWORD PTR [ebx*4+0x10069480]
100561f8:	xor    eax,DWORD PTR [edx*4+0x1006a080]
100561ff:	xor    eax,DWORD PTR [ecx-0x8]
10056202:	mov    edx,eax
10056204:	shr    edx,0x10
10056207:	movzx  ebx,ah
1005620a:	and    edx,0xff
10056210:	mov    edx,DWORD PTR [edx*4+0x10069880]
10056217:	xor    edx,DWORD PTR [ebx*4+0x10069c80]
1005621e:	mov    ebx,eax
10056220:	and    eax,0xff
10056225:	shr    ebx,0x18
10056228:	xor    edx,DWORD PTR [ebx*4+0x10069480]
1005622f:	xor    edx,DWORD PTR [eax*4+0x1006a080]
10056236:	xor    edx,DWORD PTR [ecx-0x4]
10056239:	mov    eax,edx
1005623b:	shr    eax,0x10
1005623e:	and    eax,0xff
10056243:	mov    eax,DWORD PTR [eax*4+0x10069880]
1005624a:	movzx  ebx,dh
1005624d:	xor    eax,DWORD PTR [ebx*4+0x10069c80]
10056254:	mov    ebx,edx
10056256:	shr    ebx,0x18
10056259:	xor    eax,DWORD PTR [ebx*4+0x10069480]
10056260:	and    edx,0xff
10056266:	xor    eax,DWORD PTR [edx*4+0x1006a080]
1005626d:	xor    eax,DWORD PTR [ecx]
1005626f:	add    ecx,0x4
10056272:	mov    edx,eax
10056274:	shr    edx,0x10
10056277:	movzx  ebx,ah
1005627a:	and    edx,0xff
10056280:	mov    edx,DWORD PTR [edx*4+0x10069880]
10056287:	xor    edx,DWORD PTR [ebx*4+0x10069c80]
1005628e:	mov    ebx,eax
10056290:	and    eax,0xff
10056295:	shr    ebx,0x18
10056298:	xor    edx,DWORD PTR [ebx*4+0x10069480]
1005629f:	add    ecx,0x4
100562a2:	xor    edx,DWORD PTR [eax*4+0x1006a080]
100562a9:	sub    esi,0x20
100562ac:	xor    edx,DWORD PTR [ecx-0x4]
100562af:	mov    eax,edx
100562b1:	shr    eax,0x10
100562b4:	and    eax,0xff
100562b9:	mov    eax,DWORD PTR [eax*4+0x10069880]
100562c0:	movzx  ebx,dh
100562c3:	xor    eax,DWORD PTR [ebx*4+0x10069c80]
100562ca:	mov    ebx,edx
100562cc:	shr    ebx,0x18
100562cf:	xor    eax,DWORD PTR [ebx*4+0x10069480]
100562d6:	and    edx,0xff
100562dc:	xor    eax,DWORD PTR [edx*4+0x1006a080]
100562e3:	sub    edi,0x1
100562e6:	jne    0x10056112
100562ec:	cmp    esi,0x4
100562ef:	jb     0x10056339
100562f1:	mov    edx,esi
100562f3:	shr    edx,0x2
100562f6:	xor    eax,DWORD PTR [ecx]
100562f8:	add    ecx,0x4
100562fb:	mov    edi,eax
100562fd:	shr    edi,0x10
10056300:	and    edi,0xff
10056306:	mov    edi,DWORD PTR [edi*4+0x10069880]
1005630d:	movzx  ebx,ah
10056310:	xor    edi,DWORD PTR [ebx*4+0x10069c80]
10056317:	mov    ebx,eax
10056319:	shr    ebx,0x18
1005631c:	xor    edi,DWORD PTR [ebx*4+0x10069480]
10056323:	and    eax,0xff
10056328:	xor    edi,DWORD PTR [eax*4+0x1006a080]
1005632f:	sub    esi,0x4
10056332:	sub    edx,0x1
10056335:	mov    eax,edi
10056337:	jne    0x100562f6
10056339:	test   esi,esi
1005633b:	pop    edi
1005633c:	pop    ebx
1005633d:	je     0x1005635d
1005633f:	nop
10056340:	movzx  edx,BYTE PTR [ecx]
10056343:	xor    edx,eax
10056345:	and    edx,0xff
1005634b:	shr    eax,0x8
1005634e:	xor    eax,DWORD PTR [edx*4+0x10069480]
10056355:	add    ecx,0x1
10056358:	sub    esi,0x1
1005635b:	jne    0x10056340
1005635d:	not    eax
1005635f:	pop    esi
10056360:	ret    
10056361:	int3   
10056362:	int3   
10056363:	int3   
10056364:	int3   
10056365:	int3   
10056366:	int3   
10056367:	int3   
10056368:	int3   
10056369:	int3   
1005636a:	int3   
1005636b:	int3   
1005636c:	int3   
1005636d:	int3   
1005636e:	int3   
1005636f:	int3   
10056370:	mov    ecx,DWORD PTR [esp+0x8]
10056374:	test   ecx,ecx
10056376:	jne    0x1005637b
10056378:	xor    eax,eax
1005637a:	ret    
1005637b:	mov    edx,DWORD PTR [esp+0xc]
1005637f:	mov    eax,DWORD PTR [esp+0x4]
10056383:	jmp    0x100560d0
10056388:	int3   
10056389:	int3   
1005638a:	int3   
1005638b:	int3   
1005638c:	int3   
1005638d:	int3   
1005638e:	int3   
1005638f:	int3   
10056390:	mov    eax,DWORD PTR [esp+0x8]
10056394:	imul   eax,DWORD PTR [esp+0xc]
10056399:	push   eax
1005639a:	call   0x10045222
1005639f:	add    esp,0x4
100563a2:	ret    
100563a3:	int3   
100563a4:	int3   
100563a5:	int3   
100563a6:	int3   
100563a7:	int3   
100563a8:	int3   
100563a9:	int3   
100563aa:	int3   
100563ab:	int3   
100563ac:	int3   
100563ad:	int3   
100563ae:	int3   
100563af:	int3   
100563b0:	mov    eax,DWORD PTR [esp+0x8]
100563b4:	push   eax
100563b5:	call   0x10043748
100563ba:	pop    ecx
100563bb:	ret    
100563bc:	int3   
100563bd:	int3   
100563be:	int3   
100563bf:	int3   
100563c0:	sub    esp,0x3c
100563c3:	push   ebx
100563c4:	push   ebp
100563c5:	push   esi
100563c6:	push   edi
100563c7:	mov    ecx,DWORD PTR [esp+0x50]
100563cb:	mov    eax,DWORD PTR [ecx+0x1c]
100563ce:	mov    edx,DWORD PTR [ecx+0x4]
100563d1:	mov    ebx,DWORD PTR [eax+0x38]
100563d4:	mov    ebp,DWORD PTR [ecx]
100563d6:	sub    ebp,0x1
100563d9:	lea    edx,[edx+ebp*1-0x5]
100563dd:	mov    DWORD PTR [esp+0x14],edx
100563e1:	mov    esi,DWORD PTR [ecx+0xc]
100563e4:	mov    ecx,DWORD PTR [ecx+0x10]
100563e7:	mov    edx,ecx
100563e9:	sub    edx,DWORD PTR [esp+0x54]
100563ed:	sub    esi,0x1
100563f0:	add    edx,esi
100563f2:	lea    ecx,[ecx+esi*1-0x101]
100563f9:	mov    DWORD PTR [esp+0x38],edx
100563fd:	mov    edx,DWORD PTR [eax+0x28]
10056400:	mov    DWORD PTR [esp+0x2c],ecx
10056404:	mov    ecx,DWORD PTR [eax+0x2c]
10056407:	mov    DWORD PTR [esp+0x28],edx
1005640b:	mov    edx,DWORD PTR [eax+0x30]
1005640e:	mov    DWORD PTR [esp+0x3c],ecx
10056412:	mov    ecx,DWORD PTR [eax+0x34]
10056415:	mov    DWORD PTR [esp+0x44],edx
10056419:	mov    edx,DWORD PTR [eax+0x4c]
1005641c:	mov    DWORD PTR [esp+0x40],ecx
10056420:	mov    ecx,DWORD PTR [eax+0x50]
10056423:	mov    DWORD PTR [esp+0x20],edx
10056427:	mov    DWORD PTR [esp+0x24],ecx
1005642b:	mov    ecx,DWORD PTR [eax+0x54]
1005642e:	mov    edx,0x1
10056433:	shl    edx,cl
10056435:	mov    ecx,DWORD PTR [eax+0x58]
10056438:	mov    DWORD PTR [esp+0x18],eax
1005643c:	mov    edi,DWORD PTR [eax+0x3c]
1005643f:	mov    DWORD PTR [esp+0x54],0x1
10056447:	mov    eax,DWORD PTR [esp+0x54]
1005644b:	shl    eax,cl
1005644d:	sub    edx,0x1
10056450:	mov    DWORD PTR [esp+0x10],ebp
10056454:	mov    DWORD PTR [esp+0x48],edx
10056458:	sub    eax,0x1
1005645b:	mov    DWORD PTR [esp+0x30],eax
1005645f:	nop
10056460:	cmp    edi,0xf
10056463:	jae    0x10056489
10056465:	movzx  eax,BYTE PTR [ebp+0x1]
10056469:	add    ebp,0x1
1005646c:	mov    ecx,edi
1005646e:	shl    eax,cl
10056470:	add    ebp,0x1
10056473:	add    edi,0x8
10056476:	mov    ecx,edi
10056478:	add    ebx,eax
1005647a:	movzx  eax,BYTE PTR [ebp+0x0]
1005647e:	shl    eax,cl
10056480:	mov    DWORD PTR [esp+0x10],ebp
10056484:	add    ebx,eax
10056486:	add    edi,0x8
10056489:	mov    ecx,DWORD PTR [esp+0x20]
1005648d:	and    edx,ebx
1005648f:	mov    eax,DWORD PTR [ecx+edx*4]
10056492:	mov    edx,eax
10056494:	shr    edx,0x8
10056497:	movzx  ecx,dl
1005649a:	movzx  edx,al
1005649d:	shr    ebx,cl
1005649f:	sub    edi,ecx
100564a1:	test   edx,edx
100564a3:	je     0x100564e8
100564a5:	test   dl,0x10
100564a8:	jne    0x100564f5
100564aa:	test   dl,0x40
100564ad:	jne    0x100567fa
100564b3:	mov    ecx,0x1
100564b8:	mov    DWORD PTR [esp+0x54],ecx
100564bc:	mov    ecx,edx
100564be:	mov    edx,DWORD PTR [esp+0x54]
100564c2:	shl    edx,cl
100564c4:	shr    eax,0x10
100564c7:	sub    edx,0x1
100564ca:	and    edx,ebx
100564cc:	add    edx,eax
100564ce:	mov    eax,DWORD PTR [esp+0x20]
100564d2:	mov    eax,DWORD PTR [eax+edx*4]
100564d5:	mov    ecx,eax
100564d7:	shr    ecx,0x8
100564da:	movzx  ecx,cl
100564dd:	movzx  edx,al
100564e0:	shr    ebx,cl
100564e2:	sub    edi,ecx
100564e4:	test   edx,edx
100564e6:	jne    0x100564a5
100564e8:	add    esi,0x1
100564eb:	shr    eax,0x10
100564ee:	mov    BYTE PTR [esi],al
100564f0:	jmp    0x10056755
100564f5:	shr    eax,0x10
100564f8:	and    edx,0xf
100564fb:	mov    DWORD PTR [esp+0x54],eax
100564ff:	je     0x1005652f
10056501:	cmp    edi,edx
10056503:	jae    0x10056519
10056505:	movzx  eax,BYTE PTR [ebp+0x1]
10056509:	add    ebp,0x1
1005650c:	mov    ecx,edi
1005650e:	shl    eax,cl
10056510:	mov    DWORD PTR [esp+0x10],ebp
10056514:	add    ebx,eax
10056516:	add    edi,0x8
10056519:	mov    ecx,edx
1005651b:	mov    eax,0x1
10056520:	shl    eax,cl
10056522:	sub    eax,0x1
10056525:	and    eax,ebx
10056527:	add    DWORD PTR [esp+0x54],eax
1005652b:	shr    ebx,cl
1005652d:	sub    edi,edx
1005652f:	cmp    edi,0xf
10056532:	jae    0x10056558
10056534:	movzx  edx,BYTE PTR [ebp+0x1]
10056538:	add    ebp,0x1
1005653b:	movzx  eax,BYTE PTR [ebp+0x1]
1005653f:	mov    ecx,edi
10056541:	add    ebp,0x1
10056544:	shl    edx,cl
10056546:	add    edi,0x8
10056549:	mov    ecx,edi
1005654b:	shl    eax,cl
1005654d:	add    ebx,edx
1005654f:	mov    DWORD PTR [esp+0x10],ebp
10056553:	add    ebx,eax
10056555:	add    edi,0x8
10056558:	mov    ecx,DWORD PTR [esp+0x30]
1005655c:	mov    edx,DWORD PTR [esp+0x24]
10056560:	and    ecx,ebx
10056562:	mov    edx,DWORD PTR [edx+ecx*4]
10056565:	mov    eax,edx
10056567:	shr    eax,0x8
1005656a:	movzx  ecx,al
1005656d:	movzx  eax,dl
10056570:	shr    ebx,cl
10056572:	sub    edi,ecx
10056574:	test   al,0x10
10056576:	mov    DWORD PTR [esp+0x1c],edx
1005657a:	jne    0x100565bb
1005657c:	lea    esp,[esp+0x0]
10056580:	test   al,0x40
10056582:	jne    0x100567ed
10056588:	mov    ecx,eax
1005658a:	movzx  eax,WORD PTR [esp+0x1e]
1005658f:	mov    edx,0x1
10056594:	shl    edx,cl
10056596:	mov    ecx,DWORD PTR [esp+0x24]
1005659a:	sub    edx,0x1
1005659d:	and    edx,ebx
1005659f:	add    edx,eax
100565a1:	mov    edx,DWORD PTR [ecx+edx*4]
100565a4:	mov    eax,edx
100565a6:	shr    eax,0x8
100565a9:	movzx  ecx,al
100565ac:	movzx  eax,dl
100565af:	shr    ebx,cl
100565b1:	sub    edi,ecx
100565b3:	test   al,0x10
100565b5:	mov    DWORD PTR [esp+0x1c],edx
100565b9:	je     0x10056580
100565bb:	shr    edx,0x10
100565be:	and    eax,0xf
100565c1:	cmp    edi,eax
100565c3:	mov    DWORD PTR [esp+0x1c],edx
100565c7:	jae    0x100565f5
100565c9:	movzx  edx,BYTE PTR [ebp+0x1]
100565cd:	add    ebp,0x1
100565d0:	mov    ecx,edi
100565d2:	shl    edx,cl
100565d4:	add    edi,0x8
100565d7:	mov    DWORD PTR [esp+0x10],ebp
100565db:	add    ebx,edx
100565dd:	cmp    edi,eax
100565df:	jae    0x100565f5
100565e1:	movzx  edx,BYTE PTR [ebp+0x1]
100565e5:	add    ebp,0x1
100565e8:	mov    ecx,edi
100565ea:	shl    edx,cl
100565ec:	mov    DWORD PTR [esp+0x10],ebp
100565f0:	add    ebx,edx
100565f2:	add    edi,0x8
100565f5:	mov    ecx,0x1
100565fa:	mov    edx,ecx
100565fc:	mov    ecx,eax
100565fe:	shl    edx,cl
10056600:	sub    edi,eax
10056602:	sub    edx,0x1
10056605:	and    edx,ebx
10056607:	mov    ecx,edx
10056609:	mov    edx,DWORD PTR [esp+0x1c]
1005660d:	add    edx,ecx
1005660f:	mov    ecx,eax
10056611:	mov    eax,esi
10056613:	sub    eax,DWORD PTR [esp+0x38]
10056617:	shr    ebx,cl
10056619:	cmp    edx,eax
1005661b:	mov    DWORD PTR [esp+0x1c],edx
1005661f:	jbe    0x10056774
10056625:	mov    ebp,edx
10056627:	sub    ebp,eax
10056629:	cmp    ebp,DWORD PTR [esp+0x3c]
1005662d:	ja     0x100567d2
10056633:	mov    ecx,DWORD PTR [esp+0x40]
10056637:	mov    eax,DWORD PTR [esp+0x44]
1005663b:	add    ecx,0xffffffff
1005663e:	test   eax,eax
10056640:	mov    DWORD PTR [esp+0x34],ecx
10056644:	jne    0x10056672
10056646:	mov    eax,DWORD PTR [esp+0x28]
1005664a:	sub    eax,ebp
1005664c:	add    ecx,eax
1005664e:	cmp    ebp,DWORD PTR [esp+0x54]
10056652:	jae    0x100566ea
10056658:	sub    DWORD PTR [esp+0x54],ebp
1005665c:	lea    esp,[esp+0x0]
10056660:	mov    al,BYTE PTR [ecx+0x1]
10056663:	add    ecx,0x1
10056666:	add    esi,0x1
10056669:	sub    ebp,0x1
1005666c:	mov    BYTE PTR [esi],al
1005666e:	jne    0x10056660
10056670:	jmp    0x100566e6
10056672:	cmp    eax,ebp
10056674:	jae    0x100566c8
10056676:	mov    edx,eax
10056678:	sub    edx,ebp
1005667a:	add    edx,DWORD PTR [esp+0x28]
1005667e:	sub    ebp,eax
10056680:	add    ecx,edx
10056682:	cmp    ebp,DWORD PTR [esp+0x54]
10056686:	jae    0x100566ea
10056688:	sub    DWORD PTR [esp+0x54],ebp
1005668c:	lea    esp,[esp+0x0]
10056690:	mov    dl,BYTE PTR [ecx+0x1]
10056693:	add    ecx,0x1
10056696:	add    esi,0x1
10056699:	sub    ebp,0x1
1005669c:	mov    BYTE PTR [esi],dl
1005669e:	jne    0x10056690
100566a0:	cmp    eax,DWORD PTR [esp+0x54]
100566a4:	mov    ecx,DWORD PTR [esp+0x34]
100566a8:	jae    0x100566ea
100566aa:	sub    DWORD PTR [esp+0x54],eax
100566ae:	mov    ebp,eax
100566b0:	mov    al,BYTE PTR [ecx+0x1]
100566b3:	add    ecx,0x1
100566b6:	add    esi,0x1
100566b9:	sub    ebp,0x1
100566bc:	mov    BYTE PTR [esi],al
100566be:	jne    0x100566b0
100566c0:	mov    ecx,esi
100566c2:	sub    ecx,DWORD PTR [esp+0x1c]
100566c6:	jmp    0x100566ea
100566c8:	sub    eax,ebp
100566ca:	add    ecx,eax
100566cc:	cmp    ebp,DWORD PTR [esp+0x54]
100566d0:	jae    0x100566ea
100566d2:	sub    DWORD PTR [esp+0x54],ebp
100566d6:	mov    al,BYTE PTR [ecx+0x1]
100566d9:	add    ecx,0x1
100566dc:	add    esi,0x1
100566df:	sub    ebp,0x1
100566e2:	mov    BYTE PTR [esi],al
100566e4:	jne    0x100566d6
100566e6:	mov    ecx,esi
100566e8:	sub    ecx,edx
100566ea:	mov    eax,DWORD PTR [esp+0x54]
100566ee:	cmp    eax,0x2
100566f1:	jbe    0x10056731
100566f3:	lea    edx,[eax-0x3]
100566f6:	mov    eax,0xaaaaaaab
100566fb:	mul    edx
100566fd:	mov    ebp,edx
100566ff:	shr    ebp,1
10056701:	add    ebp,0x1
10056704:	movzx  eax,BYTE PTR [ecx+0x1]
10056708:	sub    DWORD PTR [esp+0x54],0x3
1005670d:	add    ecx,0x1
10056710:	add    esi,0x1
10056713:	mov    BYTE PTR [esi],al
10056715:	mov    dl,BYTE PTR [ecx+0x1]
10056718:	add    ecx,0x1
1005671b:	add    esi,0x1
1005671e:	mov    BYTE PTR [esi],dl
10056720:	movzx  eax,BYTE PTR [ecx+0x1]
10056724:	add    ecx,0x1
10056727:	add    esi,0x1
1005672a:	sub    ebp,0x1
1005672d:	mov    BYTE PTR [esi],al
1005672f:	jne    0x10056704
10056731:	mov    ebp,DWORD PTR [esp+0x54]
10056735:	test   ebp,ebp
10056737:	je     0x10056751
10056739:	mov    dl,BYTE PTR [ecx+0x1]
1005673c:	add    ecx,0x1
1005673f:	add    esi,0x1
10056742:	cmp    ebp,0x1
10056745:	mov    BYTE PTR [esi],dl
10056747:	jbe    0x10056751
10056749:	mov    al,BYTE PTR [ecx+0x1]
1005674c:	add    esi,0x1
1005674f:	mov    BYTE PTR [esi],al
10056751:	mov    ebp,DWORD PTR [esp+0x10]
10056755:	mov    edx,DWORD PTR [esp+0x14]
10056759:	cmp    ebp,edx
1005675b:	jae    0x10056824
10056761:	cmp    esi,DWORD PTR [esp+0x2c]
10056765:	jae    0x10056824
1005676b:	mov    edx,DWORD PTR [esp+0x48]
1005676f:	jmp    0x10056460
10056774:	mov    eax,esi
10056776:	sub    eax,edx
10056778:	jmp    0x10056780
1005677a:	lea    ebx,[ebx+0x0]
10056780:	movzx  ecx,BYTE PTR [eax+0x1]
10056784:	add    eax,0x1
10056787:	mov    BYTE PTR [esi+0x1],cl
1005678a:	mov    dl,BYTE PTR [eax+0x1]
1005678d:	add    esi,0x1
10056790:	add    eax,0x1
10056793:	add    esi,0x1
10056796:	mov    BYTE PTR [esi],dl
10056798:	movzx  ecx,BYTE PTR [eax+0x1]
1005679c:	add    eax,0x1
1005679f:	add    esi,0x1
100567a2:	mov    BYTE PTR [esi],cl
100567a4:	mov    ecx,DWORD PTR [esp+0x54]
100567a8:	sub    ecx,0x3
100567ab:	cmp    ecx,0x2
100567ae:	mov    DWORD PTR [esp+0x54],ecx
100567b2:	ja     0x10056780
100567b4:	test   ecx,ecx
100567b6:	je     0x10056755
100567b8:	mov    dl,BYTE PTR [eax+0x1]
100567bb:	add    eax,0x1
100567be:	add    esi,0x1
100567c1:	cmp    ecx,0x1
100567c4:	mov    BYTE PTR [esi],dl
100567c6:	jbe    0x10056755
100567c8:	mov    al,BYTE PTR [eax+0x1]
100567cb:	add    esi,0x1
100567ce:	mov    BYTE PTR [esi],al
100567d0:	jmp    0x10056755
100567d2:	mov    ecx,DWORD PTR [esp+0x50]
100567d6:	mov    edx,DWORD PTR [esp+0x18]
100567da:	mov    ebp,DWORD PTR [esp+0x10]
100567de:	mov    DWORD PTR [ecx+0x18],0x100688b8
100567e5:	mov    DWORD PTR [edx],0x1b
100567eb:	jmp    0x10056820
100567ed:	mov    eax,DWORD PTR [esp+0x50]
100567f1:	mov    DWORD PTR [eax+0x18],0x100688d8
100567f8:	jmp    0x10056816
100567fa:	test   dl,0x20
100567fd:	je     0x1005680b
100567ff:	mov    edx,DWORD PTR [esp+0x18]
10056803:	mov    DWORD PTR [edx],0xb
10056809:	jmp    0x10056820
1005680b:	mov    eax,DWORD PTR [esp+0x50]
1005680f:	mov    DWORD PTR [eax+0x18],0x100688f0
10056816:	mov    ecx,DWORD PTR [esp+0x18]
1005681a:	mov    DWORD PTR [ecx],0x1b
10056820:	mov    edx,DWORD PTR [esp+0x14]
10056824:	mov    eax,edi
10056826:	shr    eax,0x3
10056829:	sub    ebp,eax
1005682b:	add    eax,eax
1005682d:	add    eax,eax
1005682f:	add    eax,eax
10056831:	sub    edi,eax
10056833:	mov    ecx,edi
10056835:	mov    eax,0x1
1005683a:	shl    eax,cl
1005683c:	mov    ecx,DWORD PTR [esp+0x50]
10056840:	sub    edx,ebp
10056842:	add    edx,0x5
10056845:	sub    eax,0x1
10056848:	and    ebx,eax
1005684a:	lea    eax,[ebp+0x1]
1005684d:	mov    DWORD PTR [ecx],eax
1005684f:	lea    eax,[esi+0x1]
10056852:	mov    DWORD PTR [ecx+0xc],eax
10056855:	mov    eax,DWORD PTR [esp+0x2c]
10056859:	sub    eax,esi
1005685b:	add    eax,0x101
10056860:	mov    DWORD PTR [ecx+0x10],eax
10056863:	mov    eax,DWORD PTR [esp+0x18]
10056867:	mov    DWORD PTR [ecx+0x4],edx
1005686a:	mov    DWORD PTR [eax+0x3c],edi
1005686d:	pop    edi
1005686e:	pop    esi
1005686f:	pop    ebp
10056870:	mov    DWORD PTR [eax+0x38],ebx
10056873:	pop    ebx
10056874:	add    esp,0x3c
10056877:	ret    
10056878:	int3   
10056879:	int3   
1005687a:	int3   
1005687b:	int3   
1005687c:	int3   
1005687d:	int3   
1005687e:	int3   
1005687f:	int3   
10056880:	sub    esp,0x8c
10056886:	mov    eax,ds:0x1007e030
1005688b:	xor    eax,esp
1005688d:	mov    DWORD PTR [esp+0x88],eax
10056894:	mov    eax,DWORD PTR [esp+0xa4]
1005689b:	mov    edx,DWORD PTR [esp+0xa0]
100568a2:	push   ebx
100568a3:	mov    ebx,DWORD PTR [esp+0xa0]
100568aa:	push   ebp
100568ab:	mov    ebp,DWORD PTR [esp+0x9c]
100568b2:	push   esi
100568b3:	mov    esi,DWORD PTR [esp+0xa4]
100568ba:	mov    DWORD PTR [esp+0x18],eax
100568be:	xor    eax,eax
100568c0:	test   esi,esi
100568c2:	mov    DWORD PTR [esp+0x50],ebp
100568c6:	mov    DWORD PTR [esp+0x38],ebx
100568ca:	mov    DWORD PTR [esp+0x48],edx
100568ce:	mov    DWORD PTR [esp+0x54],eax
100568d2:	mov    DWORD PTR [esp+0x58],eax
100568d6:	mov    DWORD PTR [esp+0x5c],eax
100568da:	mov    DWORD PTR [esp+0x60],eax
100568de:	mov    DWORD PTR [esp+0x64],eax
100568e2:	mov    DWORD PTR [esp+0x68],eax
100568e6:	mov    DWORD PTR [esp+0x6c],eax
100568ea:	mov    DWORD PTR [esp+0x70],eax
100568ee:	jbe    0x10056906
100568f0:	movzx  ecx,WORD PTR [ebp+eax*2+0x0]
100568f5:	add    WORD PTR [esp+ecx*2+0x54],0x1
100568fb:	lea    ecx,[esp+ecx*2+0x54]
100568ff:	add    eax,0x1
10056902:	cmp    eax,esi
10056904:	jb     0x100568f0
10056906:	mov    eax,DWORD PTR [edx]
10056908:	mov    DWORD PTR [esp+0x10],eax
1005690c:	mov    ecx,0xf
10056911:	cmp    WORD PTR [esp+ecx*2+0x54],0x0
10056917:	jne    0x10056921
10056919:	sub    ecx,0x1
1005691c:	cmp    ecx,0x1
1005691f:	jae    0x10056911
10056921:	cmp    eax,ecx
10056923:	mov    DWORD PTR [esp+0x1c],ecx
10056927:	jbe    0x1005692f
10056929:	mov    DWORD PTR [esp+0x10],ecx
1005692d:	mov    eax,ecx
1005692f:	test   ecx,ecx
10056931:	jne    0x10056974
10056933:	mov    WORD PTR [esp+0xe],cx
10056938:	mov    ecx,DWORD PTR [ebx]
1005693a:	mov    BYTE PTR [esp+0xc],0x40
1005693f:	mov    BYTE PTR [esp+0xd],0x1
10056944:	mov    eax,DWORD PTR [esp+0xc]
10056948:	mov    DWORD PTR [ecx],eax
1005694a:	add    DWORD PTR [ebx],0x4
1005694d:	mov    ecx,DWORD PTR [ebx]
1005694f:	pop    esi
10056950:	mov    DWORD PTR [ecx],eax
10056952:	add    DWORD PTR [ebx],0x4
10056955:	pop    ebp
10056956:	mov    DWORD PTR [edx],0x1
1005695c:	xor    eax,eax
1005695e:	pop    ebx
1005695f:	mov    ecx,DWORD PTR [esp+0x88]
10056966:	xor    ecx,esp
10056968:	call   0x100430d7
1005696d:	add    esp,0x8c
10056973:	ret    
10056974:	mov    esi,0x1
10056979:	lea    esp,[esp+0x0]
10056980:	cmp    WORD PTR [esp+esi*2+0x54],0x0
10056986:	jne    0x100569c4
10056988:	cmp    WORD PTR [esp+esi*2+0x56],0x0
1005698e:	jne    0x100569b2
10056990:	cmp    WORD PTR [esp+esi*2+0x58],0x0
10056996:	jne    0x100569b7
10056998:	cmp    WORD PTR [esp+esi*2+0x5a],0x0
1005699e:	jne    0x100569bc
100569a0:	cmp    WORD PTR [esp+esi*2+0x5c],0x0
100569a6:	jne    0x100569c1
100569a8:	add    esi,0x5
100569ab:	cmp    esi,0xf
100569ae:	jbe    0x10056980
100569b0:	jmp    0x100569c4
100569b2:	add    esi,0x1
100569b5:	jmp    0x100569c4
100569b7:	add    esi,0x2
100569ba:	jmp    0x100569c4
100569bc:	add    esi,0x3
100569bf:	jmp    0x100569c4
100569c1:	add    esi,0x4
100569c4:	cmp    eax,esi
100569c6:	jae    0x100569cc
100569c8:	mov    DWORD PTR [esp+0x10],esi
100569cc:	mov    edx,0x1
100569d1:	mov    eax,edx
100569d3:	push   edi
100569d4:	movzx  edi,WORD PTR [esp+eax*2+0x58]
100569d9:	add    edx,edx
100569db:	sub    edx,edi
100569dd:	js     0x100569fb
100569df:	add    eax,0x1
100569e2:	cmp    eax,0xf
100569e5:	jbe    0x100569d4
100569e7:	test   edx,edx
100569e9:	mov    edi,DWORD PTR [esp+0xa0]
100569f0:	jle    0x10056a03
100569f2:	test   edi,edi
100569f4:	je     0x100569fb
100569f6:	cmp    ecx,0x1
100569f9:	je     0x10056a03
100569fb:	or     eax,0xffffffff
100569fe:	jmp    0x10056d55
10056a03:	mov    WORD PTR [esp+0x7a],0x0
10056a0a:	mov    eax,0x2
10056a0f:	nop
10056a10:	mov    cx,WORD PTR [esp+eax*1+0x78]
10056a15:	add    cx,WORD PTR [esp+eax*1+0x58]
10056a1a:	add    eax,0x2
10056a1d:	cmp    eax,0x1e
10056a20:	mov    WORD PTR [esp+eax*1+0x78],cx
10056a25:	jb     0x10056a10
10056a27:	mov    ecx,DWORD PTR [esp+0x1c]
10056a2b:	xor    eax,eax
10056a2d:	cmp    DWORD PTR [esp+0xa8],eax
10056a34:	jbe    0x10056a67
10056a36:	cmp    WORD PTR [ebp+eax*2+0x0],0x0
10056a3c:	je     0x10056a5b
10056a3e:	movzx  edx,WORD PTR [ebp+eax*2+0x0]
10056a43:	movzx  edx,WORD PTR [esp+edx*2+0x78]
10056a48:	mov    WORD PTR [ecx+edx*2],ax
10056a4c:	movzx  edx,WORD PTR [ebp+eax*2+0x0]
10056a51:	add    WORD PTR [esp+edx*2+0x78],0x1
10056a57:	lea    edx,[esp+edx*2+0x78]
10056a5b:	add    eax,0x1
10056a5e:	cmp    eax,DWORD PTR [esp+0xa8]
10056a65:	jb     0x10056a36
10056a67:	mov    eax,edi
10056a69:	sub    eax,0x0
10056a6c:	mov    edx,0xffffffff
10056a71:	je     0x10056ab4
10056a73:	sub    eax,0x1
10056a76:	je     0x10056a8e
10056a78:	mov    DWORD PTR [esp+0x2c],0x1006b5d8
10056a80:	mov    DWORD PTR [esp+0x38],0x1006b618
10056a88:	mov    DWORD PTR [esp+0x30],edx
10056a8c:	jmp    0x10056ac4
10056a8e:	mov    eax,0x1006b558
10056a93:	sub    eax,0x202
10056a98:	mov    DWORD PTR [esp+0x2c],eax
10056a9c:	mov    eax,0x1006b598
10056aa1:	sub    eax,0x202
10056aa6:	mov    DWORD PTR [esp+0x38],eax
10056aaa:	mov    DWORD PTR [esp+0x30],0x100
10056ab2:	jmp    0x10056ac4
10056ab4:	mov    DWORD PTR [esp+0x38],ecx
10056ab8:	mov    DWORD PTR [esp+0x2c],ecx
10056abc:	mov    DWORD PTR [esp+0x30],0x13
10056ac4:	mov    eax,DWORD PTR [ebx]
10056ac6:	mov    ecx,DWORD PTR [esp+0x14]
10056aca:	mov    DWORD PTR [esp+0x24],eax
10056ace:	mov    eax,0x1
10056ad3:	shl    eax,cl
10056ad5:	xor    ebp,ebp
10056ad7:	xor    ebx,ebx
10056ad9:	cmp    edi,0x1
10056adc:	lea    ecx,[eax-0x1]
10056adf:	mov    DWORD PTR [esp+0x18],esi
10056ae3:	mov    DWORD PTR [esp+0x34],edx
10056ae7:	mov    DWORD PTR [esp+0x44],eax
10056aeb:	mov    DWORD PTR [esp+0x28],eax
10056aef:	mov    DWORD PTR [esp+0x40],ecx
10056af3:	jne    0x10056b00
10056af5:	cmp    eax,0x5b0
10056afa:	jae    0x10056d50
10056b00:	mov    edx,DWORD PTR [esp+0x1c]
10056b04:	mov    DWORD PTR [esp+0x1c],edx
10056b08:	jmp    0x10056b10
10056b0a:	lea    ebx,[ebx+0x0]
10056b10:	mov    al,BYTE PTR [esp+0x18]
10056b14:	mov    esi,DWORD PTR [esp+0x1c]
10056b18:	mov    edx,DWORD PTR [esp+0x30]
10056b1c:	sub    al,bl
10056b1e:	mov    BYTE PTR [esp+0x11],al
10056b22:	movzx  eax,WORD PTR [esi]
10056b25:	movzx  ecx,ax
10056b28:	cmp    ecx,edx
10056b2a:	jge    0x10056b38
10056b2c:	mov    BYTE PTR [esp+0x10],0x0
10056b31:	mov    WORD PTR [esp+0x12],ax
10056b36:	jmp    0x10056b65
10056b38:	jle    0x10056b59
10056b3a:	movzx  eax,WORD PTR [esi]
10056b3d:	mov    ecx,DWORD PTR [esp+0x38]
10056b41:	add    eax,eax
10056b43:	mov    dl,BYTE PTR [eax+ecx*1]
10056b46:	mov    ecx,DWORD PTR [esp+0x2c]
10056b4a:	mov    BYTE PTR [esp+0x10],dl
10056b4e:	mov    dx,WORD PTR [eax+ecx*1]
10056b52:	mov    WORD PTR [esp+0x12],dx
10056b57:	jmp    0x10056b65
10056b59:	mov    BYTE PTR [esp+0x10],0x60
10056b5e:	mov    WORD PTR [esp+0x12],0x0
10056b65:	mov    ecx,DWORD PTR [esp+0x18]
10056b69:	mov    eax,DWORD PTR [esp+0x44]
10056b6d:	sub    ecx,ebx
10056b6f:	mov    edx,0x1
10056b74:	shl    edx,cl
10056b76:	mov    ecx,ebx
10056b78:	mov    edi,ebp
10056b7a:	shr    edi,cl
10056b7c:	mov    ecx,DWORD PTR [esp+0x24]
10056b80:	mov    DWORD PTR [esp+0x50],eax
10056b84:	lea    esi,[edx*4+0x0]
10056b8b:	add    edi,eax
10056b8d:	lea    ecx,[ecx+edi*4]
10056b90:	mov    edi,DWORD PTR [esp+0x10]
10056b94:	sub    eax,edx
10056b96:	sub    ecx,esi
10056b98:	test   eax,eax
10056b9a:	mov    DWORD PTR [ecx],edi
10056b9c:	jne    0x10056b94
10056b9e:	mov    edx,DWORD PTR [esp+0x18]
10056ba2:	lea    ecx,[edx-0x1]
10056ba5:	mov    eax,0x1
10056baa:	shl    eax,cl
10056bac:	test   ebp,eax
10056bae:	je     0x10056bb6
10056bb0:	shr    eax,1
10056bb2:	test   ebp,eax
10056bb4:	jne    0x10056bb0
10056bb6:	test   eax,eax
10056bb8:	je     0x10056bc5
10056bba:	lea    ecx,[eax-0x1]
10056bbd:	and    ecx,ebp
10056bbf:	add    ecx,eax
10056bc1:	mov    ebp,ecx
10056bc3:	jmp    0x10056bc7
10056bc5:	xor    ebp,ebp
10056bc7:	add    WORD PTR [esp+edx*2+0x58],0xffff
10056bce:	movzx  eax,WORD PTR [esp+edx*2+0x58]
10056bd3:	add    DWORD PTR [esp+0x1c],0x2
10056bd8:	test   ax,ax
10056bdb:	jne    0x10056bfa
10056bdd:	cmp    edx,DWORD PTR [esp+0x20]
10056be1:	je     0x10056cc3
10056be7:	mov    edx,DWORD PTR [esp+0x1c]
10056beb:	movzx  eax,WORD PTR [edx]
10056bee:	mov    ecx,DWORD PTR [esp+0x54]
10056bf2:	movzx  edx,WORD PTR [ecx+eax*2]
10056bf6:	mov    DWORD PTR [esp+0x18],edx
10056bfa:	cmp    edx,DWORD PTR [esp+0x14]
10056bfe:	jbe    0x10056b10
10056c04:	mov    esi,DWORD PTR [esp+0x40]
10056c08:	and    esi,ebp
10056c0a:	cmp    esi,DWORD PTR [esp+0x34]
10056c0e:	mov    DWORD PTR [esp+0x48],esi
10056c12:	je     0x10056b10
10056c18:	test   ebx,ebx
10056c1a:	jne    0x10056c20
10056c1c:	mov    ebx,DWORD PTR [esp+0x14]
10056c20:	mov    eax,DWORD PTR [esp+0x24]
10056c24:	mov    ecx,DWORD PTR [esp+0x50]
10056c28:	lea    edx,[eax+ecx*4]
10056c2b:	mov    ecx,DWORD PTR [esp+0x18]
10056c2f:	sub    ecx,ebx
10056c31:	mov    DWORD PTR [esp+0x24],edx
10056c35:	mov    eax,0x1
10056c3a:	lea    edx,[ebx+ecx*1]
10056c3d:	shl    eax,cl
10056c3f:	cmp    edx,DWORD PTR [esp+0x20]
10056c43:	jae    0x10056c6e
10056c45:	lea    esi,[esp+edx*2+0x58]
10056c49:	lea    esp,[esp+0x0]
10056c50:	movzx  edi,WORD PTR [esi]
10056c53:	sub    eax,edi
10056c55:	test   eax,eax
10056c57:	jle    0x10056c6a
10056c59:	add    edx,0x1
10056c5c:	add    ecx,0x1
10056c5f:	add    esi,0x2
10056c62:	add    eax,eax
10056c64:	cmp    edx,DWORD PTR [esp+0x20]
10056c68:	jb     0x10056c50
10056c6a:	mov    esi,DWORD PTR [esp+0x48]
10056c6e:	mov    eax,0x1
10056c73:	shl    eax,cl
10056c75:	add    DWORD PTR [esp+0x28],eax
10056c79:	cmp    DWORD PTR [esp+0xa0],0x1
10056c81:	mov    DWORD PTR [esp+0x44],eax
10056c85:	jne    0x10056c95
10056c87:	cmp    DWORD PTR [esp+0x28],0x5b0
10056c8f:	jae    0x10056d50
10056c95:	mov    edx,esi
10056c97:	mov    esi,DWORD PTR [esp+0x3c]
10056c9b:	mov    eax,DWORD PTR [esi]
10056c9d:	mov    BYTE PTR [eax+edx*4],cl
10056ca0:	mov    ecx,DWORD PTR [esi]
10056ca2:	mov    al,BYTE PTR [esp+0x14]
10056ca6:	mov    BYTE PTR [ecx+edx*4+0x1],al
10056caa:	mov    eax,DWORD PTR [esi]
10056cac:	mov    ecx,DWORD PTR [esp+0x24]
10056cb0:	sub    ecx,eax
10056cb2:	sar    ecx,0x2
10056cb5:	mov    DWORD PTR [esp+0x34],edx
10056cb9:	mov    WORD PTR [eax+edx*4+0x2],cx
10056cbe:	jmp    0x10056b10
10056cc3:	mov    edi,DWORD PTR [esp+0x3c]
10056cc7:	mov    al,dl
10056cc9:	sub    al,bl
10056ccb:	test   ebp,ebp
10056ccd:	mov    BYTE PTR [esp+0x10],0x40
10056cd2:	mov    BYTE PTR [esp+0x11],al
10056cd6:	mov    WORD PTR [esp+0x12],0x0
10056cdd:	je     0x10056d35
10056cdf:	mov    esi,DWORD PTR [esp+0x24]
10056ce3:	test   ebx,ebx
10056ce5:	je     0x10056d05
10056ce7:	mov    ecx,DWORD PTR [esp+0x40]
10056ceb:	and    ecx,ebp
10056ced:	cmp    ecx,DWORD PTR [esp+0x34]
10056cf1:	je     0x10056d05
10056cf3:	mov    eax,DWORD PTR [esp+0x14]
10056cf7:	mov    esi,DWORD PTR [edi]
10056cf9:	xor    ebx,ebx
10056cfb:	mov    DWORD PTR [esp+0x18],eax
10056cff:	mov    BYTE PTR [esp+0x11],al
10056d03:	mov    edx,eax
10056d05:	mov    ecx,ebx
10056d07:	mov    eax,ebp
10056d09:	shr    eax,cl
10056d0b:	mov    ecx,DWORD PTR [esp+0x10]
10056d0f:	mov    DWORD PTR [esi+eax*4],ecx
10056d12:	lea    ecx,[edx-0x1]
10056d15:	mov    eax,0x1
10056d1a:	shl    eax,cl
10056d1c:	test   ebp,eax
10056d1e:	je     0x10056d26
10056d20:	shr    eax,1
10056d22:	test   ebp,eax
10056d24:	jne    0x10056d20
10056d26:	test   eax,eax
10056d28:	je     0x10056d35
10056d2a:	lea    ecx,[eax-0x1]
10056d2d:	and    ecx,ebp
10056d2f:	add    ecx,eax
10056d31:	mov    ebp,ecx
10056d33:	jne    0x10056ce3
10056d35:	mov    edx,DWORD PTR [esp+0x28]
10056d39:	mov    ecx,DWORD PTR [esp+0x4c]
10056d3d:	lea    eax,[edx*4+0x0]
10056d44:	add    DWORD PTR [edi],eax
10056d46:	mov    edx,DWORD PTR [esp+0x14]
10056d4a:	mov    DWORD PTR [ecx],edx
10056d4c:	xor    eax,eax
10056d4e:	jmp    0x10056d55
10056d50:	mov    eax,0x1
10056d55:	mov    ecx,DWORD PTR [esp+0x98]
10056d5c:	pop    edi
10056d5d:	pop    esi
10056d5e:	pop    ebp
10056d5f:	pop    ebx
10056d60:	xor    ecx,esp
10056d62:	call   0x100430d7
10056d67:	add    esp,0x8c
10056d6d:	ret    
10056d6e:	jmp    DWORD PTR ds:0x10066404
10056d74:	jmp    DWORD PTR ds:0x10066218
10056d7a:	jmp    DWORD PTR ds:0x10066278
10056d80:	push   ebp
10056d81:	mov    ebp,esp
10056d83:	sub    esp,0xc
10056d86:	mov    eax,ds:0x1007e030
10056d8b:	xor    eax,ebp
10056d8d:	mov    DWORD PTR [ebp-0x4],eax
10056d90:	push   esi
10056d91:	xor    esi,esi
10056d93:	call   DWORD PTR ds:0x1006606c
10056d99:	push   0x7
10056d9b:	lea    ecx,[ebp-0xc]
10056d9e:	push   ecx
10056d9f:	push   0x1004
10056da4:	push   eax
10056da5:	call   DWORD PTR ds:0x1006623c
10056dab:	test   eax,eax
10056dad:	je     0x10056dce
10056daf:	mov    cl,BYTE PTR [ebp-0xc]
10056db2:	test   cl,cl
10056db4:	lea    eax,[ebp-0xc]
10056db7:	je     0x10056dce
10056db9:	imul   esi,esi,0xa
10056dbc:	movsx  ecx,cl
10056dbf:	inc    eax
10056dc0:	lea    esi,[esi+ecx*1-0x30]
10056dc4:	mov    cl,BYTE PTR [eax]
10056dc6:	test   cl,cl
10056dc8:	jne    0x10056db9
10056dca:	test   esi,esi
10056dcc:	jne    0x10056dd6
10056dce:	call   DWORD PTR ds:0x100661e0
10056dd4:	mov    esi,eax
10056dd6:	mov    ecx,DWORD PTR [ebp-0x4]
10056dd9:	mov    eax,esi
10056ddb:	xor    ecx,ebp
10056ddd:	pop    esi
10056dde:	call   0x100430d7
10056de3:	leave  
10056de4:	ret    
10056de5:	push   0x3
10056de7:	pop    eax
10056de8:	ret    
10056de9:	push   ebp
10056dea:	mov    ebp,esp
10056dec:	sub    esp,0x98
10056df2:	mov    eax,ds:0x1007e030
10056df7:	xor    eax,ebp
10056df9:	mov    DWORD PTR [ebp-0x4],eax
10056dfc:	lea    eax,[ebp-0x98]
10056e02:	push   eax
10056e03:	mov    DWORD PTR [ebp-0x98],0x94
10056e0d:	call   DWORD PTR ds:0x100661a8
10056e13:	cmp    DWORD PTR [ebp-0x88],0x2
10056e1a:	jne    0x10056e2a
10056e1c:	cmp    DWORD PTR [ebp-0x94],0x5
10056e23:	mov    eax,0x10056de5
10056e28:	jae    0x10056e2f
10056e2a:	mov    eax,0x10056d80
10056e2f:	push   eax
10056e30:	push   0x1007efec
10056e35:	call   DWORD PTR ds:0x1006621c
10056e3b:	call   DWORD PTR ds:0x1007efec
10056e41:	mov    ecx,DWORD PTR [ebp-0x4]
10056e44:	xor    ecx,ebp
10056e46:	call   0x100430d7
10056e4b:	leave  
10056e4c:	ret    
10056e4d:	mov    eax,DWORD PTR [esp+0x4]
10056e51:	test   eax,eax
10056e53:	jne    0x10056e5c
10056e55:	mov    eax,0x80070057
10056e5a:	jmp    0x10056e6d
10056e5c:	cmp    DWORD PTR [eax],0x2c
10056e5f:	jne    0x10056e55
10056e61:	and    DWORD PTR [eax+0x1c],0x0
10056e65:	lea    ecx,[eax+0x4]
10056e68:	call   0x10014565
10056e6d:	ret    0x4
10056e70:	push   esi
10056e71:	mov    esi,ecx
10056e73:	mov    eax,DWORD PTR [esi]
10056e75:	test   eax,eax
10056e77:	je     0x10056e83
10056e79:	push   eax
10056e7a:	call   0x10043748
10056e7f:	and    DWORD PTR [esi],0x0
10056e82:	pop    ecx
10056e83:	and    DWORD PTR [esi+0x4],0x0
10056e87:	and    DWORD PTR [esi+0x8],0x0
10056e8b:	pop    esi
10056e8c:	ret    
10056e8d:	mov    eax,DWORD PTR [esp+0x4]
10056e91:	test   eax,eax
10056e93:	jl     0x10056ea2
10056e95:	cmp    eax,DWORD PTR [ecx+0x4]
10056e98:	jge    0x10056ea2
10056e9a:	mov    ecx,DWORD PTR [ecx]
10056e9c:	lea    eax,[ecx+eax*2]
10056e9f:	ret    0x4
10056ea2:	push   0x0
10056ea4:	push   0x0
10056ea6:	push   0x1
10056ea8:	push   0xc000008c
10056ead:	call   DWORD PTR ds:0x10066128
10056eb3:	int3   
10056eb4:	mov    eax,DWORD PTR [esp+0x4]
10056eb8:	test   eax,eax
10056eba:	jl     0x10056ec9
10056ebc:	cmp    eax,DWORD PTR [ecx+0x4]
10056ebf:	jge    0x10056ec9
10056ec1:	mov    ecx,DWORD PTR [ecx]
10056ec3:	lea    eax,[ecx+eax*4]
10056ec6:	ret    0x4
10056ec9:	push   0x0
10056ecb:	push   0x0
10056ecd:	push   0x1
10056ecf:	push   0xc000008c
10056ed4:	call   DWORD PTR ds:0x10066128
10056eda:	int3   
10056edb:	push   esi
10056edc:	mov    esi,ecx
10056ede:	lea    ecx,[esi+0x4]
10056ee1:	call   0x10014551
10056ee6:	xor    eax,eax
10056ee8:	mov    DWORD PTR [esi+0x20],eax
10056eeb:	mov    DWORD PTR [esi+0x24],eax
10056eee:	mov    DWORD PTR [esi+0x28],eax
10056ef1:	mov    eax,esi
10056ef3:	pop    esi
10056ef4:	ret    
10056ef5:	push   esi
10056ef6:	mov    esi,DWORD PTR [esp+0x8]
10056efa:	test   esi,esi
10056efc:	jne    0x10056f05
10056efe:	mov    eax,0x80070057
10056f03:	jmp    0x10056f51
10056f05:	mov    eax,DWORD PTR [esi]
10056f07:	test   eax,eax
10056f09:	je     0x10056f4f
10056f0b:	cmp    eax,0x2c
10056f0e:	jne    0x10056efe
10056f10:	push   edi
10056f11:	xor    edi,edi
10056f13:	cmp    DWORD PTR [esi+0x24],edi
10056f16:	jle    0x10056f39
10056f18:	push   ebx
10056f19:	lea    ebx,[esi+0x20]
10056f1c:	push   edi
10056f1d:	mov    ecx,ebx
10056f1f:	call   0x10056e8d
10056f24:	movzx  eax,WORD PTR [eax]
10056f27:	push   DWORD PTR [esp+0x14]
10056f2b:	push   eax
10056f2c:	call   DWORD PTR ds:0x10066368
10056f32:	inc    edi
10056f33:	cmp    edi,DWORD PTR [esi+0x24]
10056f36:	jl     0x10056f1c
10056f38:	pop    ebx
10056f39:	lea    ecx,[esi+0x20]
10056f3c:	call   0x10056e70
10056f41:	lea    eax,[esi+0x4]
10056f44:	push   eax
10056f45:	call   DWORD PTR ds:0x10066138
10056f4b:	and    DWORD PTR [esi],0x0
10056f4e:	pop    edi
10056f4f:	xor    eax,eax
10056f51:	pop    esi
10056f52:	ret    0x8
10056f55:	push   esi
10056f56:	mov    esi,ecx
10056f58:	lea    ecx,[esi+0x18]
10056f5b:	call   0x10014551
10056f60:	xor    eax,eax
10056f62:	mov    DWORD PTR [esi+0x30],eax
10056f65:	mov    DWORD PTR [esi+0x34],eax
10056f68:	mov    DWORD PTR [esi+0x38],eax
10056f6b:	mov    eax,esi
10056f6d:	pop    esi
10056f6e:	ret    
10056f6f:	push   esi
10056f70:	mov    esi,ecx
10056f72:	lea    eax,[esi+0x18]
10056f75:	push   eax
10056f76:	call   DWORD PTR ds:0x10066138
10056f7c:	lea    ecx,[esi+0x30]
10056f7f:	pop    esi
10056f80:	jmp    0x10056e70
10056f85:	push   ebp
10056f86:	mov    ebp,esp
10056f88:	push   ecx
10056f89:	push   ecx
10056f8a:	push   esi
10056f8b:	mov    esi,ecx
10056f8d:	lea    eax,[esi+0x18]
10056f90:	push   eax
10056f91:	mov    DWORD PTR [ebp-0x8],eax
10056f94:	call   DWORD PTR ds:0x100660f0
10056f9a:	mov    eax,DWORD PTR [esi+0x34]
10056f9d:	mov    ecx,DWORD PTR [ebp+0x8]
10056fa0:	cmp    ecx,eax
10056fa2:	mov    BYTE PTR [ebp-0x4],0x1
10056fa6:	jg     0x10056fcc
10056fa8:	test   ecx,ecx
10056faa:	jl     0x10056fcc
10056fac:	cmp    ecx,eax
10056fae:	jne    0x10056fbf
10056fb0:	mov    esi,DWORD PTR [esi+0x8]
10056fb3:	lea    ecx,[ebp-0x8]
10056fb6:	call   0x10010e45
10056fbb:	mov    eax,esi
10056fbd:	jmp    0x10056fd6
10056fbf:	push   ecx
10056fc0:	lea    ecx,[esi+0x30]
10056fc3:	call   0x10056eb4
10056fc8:	mov    esi,DWORD PTR [eax]
10056fca:	jmp    0x10056fb3
10056fcc:	lea    ecx,[ebp-0x8]
10056fcf:	call   0x10010e45
10056fd4:	xor    eax,eax
10056fd6:	pop    esi
10056fd7:	leave  
10056fd8:	ret    0x4
10056fdb:	push   esi
10056fdc:	mov    esi,ecx
10056fde:	call   0x10056edb
10056fe3:	push   esi
10056fe4:	mov    DWORD PTR [esi],0x2c
10056fea:	call   0x10056e4d
10056fef:	test   eax,eax
10056ff1:	jge    0x10056ffd
10056ff3:	mov    BYTE PTR ds:0x10080c00,0x1
10056ffa:	and    DWORD PTR [esi],0x0
10056ffd:	mov    eax,esi
10056fff:	pop    esi
10057000:	ret    
10057001:	push   ebp
10057002:	lea    ebp,[esp-0x78]
10057006:	sub    esp,0x98
1005700c:	mov    eax,ds:0x1007e030
10057011:	xor    eax,ebp
10057013:	mov    DWORD PTR [ebp+0x74],eax
10057016:	push   esi
10057017:	mov    esi,ecx
10057019:	call   0x10056f55
1005701e:	mov    eax,0x10000000
10057023:	push   0x94
10057028:	mov    DWORD PTR [esi+0x8],eax
1005702b:	mov    DWORD PTR [esi+0x4],eax
1005702e:	lea    eax,[ebp-0x20]
10057031:	push   0x0
10057033:	push   eax
10057034:	mov    DWORD PTR [esi],0x3c
1005703a:	mov    BYTE PTR [esi+0xc],0x0
1005703e:	call   0x10045ea0
10057043:	add    esp,0xc
10057046:	lea    eax,[ebp-0x20]
10057049:	push   eax
1005704a:	mov    DWORD PTR [ebp-0x20],0x94
10057051:	call   DWORD PTR ds:0x100661a8
10057057:	cmp    DWORD PTR [ebp-0x10],0x2
1005705b:	jne    0x10057065
1005705d:	cmp    DWORD PTR [ebp-0x1c],0x5
10057061:	jb     0x1005707d
10057063:	jmp    0x10057079
10057065:	cmp    DWORD PTR [ebp-0x10],0x1
10057069:	jne    0x1005707d
1005706b:	cmp    DWORD PTR [ebp-0x1c],0x4
1005706f:	ja     0x10057079
10057071:	jne    0x1005707d
10057073:	cmp    DWORD PTR [ebp-0x18],0x0
10057077:	jbe    0x1005707d
10057079:	mov    BYTE PTR [esi+0xc],0x1
1005707d:	lea    ecx,[esi+0x18]
10057080:	mov    DWORD PTR [esi+0x10],0x800
10057087:	mov    DWORD PTR [esi+0x14],0x1006b8e8
1005708e:	call   0x10014565
10057093:	test   eax,eax
10057095:	jge    0x1005709e
10057097:	mov    BYTE PTR ds:0x10080c00,0x1
1005709e:	mov    ecx,DWORD PTR [ebp+0x74]
100570a1:	mov    eax,esi
100570a3:	xor    ecx,ebp
100570a5:	pop    esi
100570a6:	call   0x100430d7
100570ab:	add    ebp,0x78
100570ae:	leave  
100570af:	ret    
100570b0:	push   esi
100570b1:	push   DWORD PTR ds:0x10080a04
100570b7:	mov    esi,ecx
100570b9:	push   esi
100570ba:	call   0x10056ef5
100570bf:	lea    ecx,[esi+0x20]
100570c2:	pop    esi
100570c3:	jmp    0x10056e70
100570c8:	cmp    BYTE PTR [ecx+0x8],0x0
100570cc:	mov    DWORD PTR [ecx],0x1006b8f8
100570d2:	je     0x100570e2
100570d4:	mov    ecx,DWORD PTR [ecx+0x4]
100570d7:	test   ecx,ecx
100570d9:	je     0x100570e2
100570db:	push   ecx
100570dc:	call   DWORD PTR ds:0x100661c8
100570e2:	ret    
100570e3:	push   DWORD PTR [esp+0x4]
100570e7:	push   0x0
100570e9:	push   DWORD PTR [ecx+0x4]
100570ec:	call   DWORD PTR ds:0x1006618c
100570f2:	ret    0x4
100570f5:	cmp    DWORD PTR [esp+0x4],0x0
100570fa:	je     0x1005710b
100570fc:	push   DWORD PTR [esp+0x4]
10057100:	push   0x0
10057102:	push   DWORD PTR [ecx+0x4]
10057105:	call   DWORD PTR ds:0x10066188
1005710b:	ret    0x4
1005710e:	push   ebp
1005710f:	mov    ebp,esp
10057111:	xor    eax,eax
10057113:	cmp    DWORD PTR [ebp+0x8],eax
10057116:	jne    0x10057121
10057118:	push   DWORD PTR [ebp+0xc]
1005711b:	mov    eax,DWORD PTR [ecx]
1005711d:	call   DWORD PTR [eax]
1005711f:	jmp    0x10057142
10057121:	cmp    DWORD PTR [ebp+0xc],eax
10057124:	jne    0x10057132
10057126:	push   DWORD PTR [ebp+0x8]
10057129:	mov    eax,DWORD PTR [ecx]
1005712b:	call   DWORD PTR [eax+0x4]
1005712e:	xor    eax,eax
10057130:	jmp    0x10057142
10057132:	push   DWORD PTR [ebp+0xc]
10057135:	push   DWORD PTR [ebp+0x8]
10057138:	push   eax
10057139:	push   DWORD PTR [ecx+0x4]
1005713c:	call   DWORD PTR ds:0x100661a0
10057142:	pop    ebp
10057143:	ret    0x8
10057146:	push   DWORD PTR [esp+0x4]
1005714a:	push   0x0
1005714c:	push   DWORD PTR [ecx+0x4]
1005714f:	call   DWORD PTR ds:0x100661c0
10057155:	ret    0x4
10057158:	push   esi
10057159:	mov    esi,ecx
1005715b:	call   0x100570c8
10057160:	test   BYTE PTR [esp+0x8],0x1
10057165:	je     0x1005716e
10057167:	push   esi
10057168:	call   0x100430d2
1005716d:	pop    ecx
1005716e:	mov    eax,esi
10057170:	pop    esi
10057171:	ret    0x4
10057174:	mov    eax,ecx
10057176:	mov    ecx,DWORD PTR [esp+0x4]
1005717a:	mov    DWORD PTR [eax+0x4],ecx
1005717d:	mov    DWORD PTR [eax],0x1006b90c
10057183:	xor    ecx,ecx
10057185:	mov    DWORD PTR [eax+0x14],0x2
1005718c:	mov    DWORD PTR [eax+0xc],ecx
1005718f:	mov    DWORD PTR [eax+0x10],ecx
10057192:	mov    WORD PTR [eax+0x18],cx
10057196:	mov    WORD PTR [eax+0x1a],cx
1005719a:	mov    DWORD PTR [eax+0x8],eax
1005719d:	ret    0x4
100571a0:	mov    ecx,DWORD PTR [ecx+0x4]
100571a3:	mov    eax,DWORD PTR [ecx]
100571a5:	jmp    DWORD PTR [eax+0x4]
100571a8:	xor    edx,edx
100571aa:	lea    eax,[ecx+0x14]
100571ad:	inc    edx
100571ae:	lock xadd DWORD PTR [eax],edx
100571b2:	lea    eax,[ecx+0x8]
100571b5:	ret    
100571b6:	mov    eax,ecx
100571b8:	ret    
100571b9:	test   BYTE PTR [esp+0x4],0x1
100571be:	push   esi
100571bf:	mov    esi,ecx
100571c1:	mov    DWORD PTR [esi],0x1006b90c
100571c7:	je     0x100571d0
100571c9:	push   esi
100571ca:	call   0x100430d2
100571cf:	pop    ecx
100571d0:	mov    eax,esi
100571d2:	pop    esi
100571d3:	ret    0x4
100571d6:	mov    eax,DWORD PTR [esp+0x8]
100571da:	mov    ecx,DWORD PTR [esp+0xc]
100571de:	or     edx,0xffffffff
100571e1:	sub    edx,eax
100571e3:	cmp    edx,ecx
100571e5:	jae    0x100571ed
100571e7:	mov    eax,0x80070057
100571ec:	ret    
100571ed:	add    eax,ecx
100571ef:	mov    ecx,DWORD PTR [esp+0x4]
100571f3:	mov    DWORD PTR [ecx],eax
100571f5:	xor    eax,eax
100571f7:	ret    
100571f8:	push   ebp
100571f9:	mov    ebp,esp
100571fb:	push   esi
100571fc:	mov    esi,DWORD PTR [ebp+0x8]
100571ff:	push   edi
10057200:	push   DWORD PTR [ebp+0xc]
10057203:	add    esi,0x8
10057206:	and    esi,0xfffffff8
10057209:	lea    eax,[ebp+0x8]
1005720c:	push   esi
1005720d:	push   eax
1005720e:	mov    edi,ecx
10057210:	call   0x100144e6
10057215:	add    esp,0xc
10057218:	test   eax,eax
1005721a:	jl     0x10057252
1005721c:	push   DWORD PTR [ebp+0x8]
1005721f:	lea    eax,[ebp+0x8]
10057222:	push   0x10
10057224:	push   eax
10057225:	call   0x100571d6
1005722a:	add    esp,0xc
1005722d:	test   eax,eax
1005722f:	jl     0x10057252
10057231:	mov    ecx,DWORD PTR [edi+0x4]
10057234:	push   DWORD PTR [ebp+0x8]
10057237:	mov    eax,DWORD PTR [ecx]
10057239:	call   DWORD PTR [eax]
1005723b:	test   eax,eax
1005723d:	je     0x10057252
1005723f:	dec    esi
10057240:	and    DWORD PTR [eax+0x4],0x0
10057244:	mov    DWORD PTR [eax],edi
10057246:	mov    DWORD PTR [eax+0xc],0x1
1005724d:	mov    DWORD PTR [eax+0x8],esi
10057250:	jmp    0x10057254
10057252:	xor    eax,eax
10057254:	pop    edi
10057255:	pop    esi
10057256:	pop    ebp
10057257:	ret    0x8
1005725a:	push   ebp
1005725b:	mov    ebp,esp
1005725d:	push   esi
1005725e:	mov    esi,DWORD PTR [ebp+0xc]
10057261:	push   edi
10057262:	push   DWORD PTR [ebp+0x10]
10057265:	add    esi,0x8
10057268:	and    esi,0xfffffff8
1005726b:	lea    eax,[ebp+0xc]
1005726e:	push   esi
1005726f:	push   eax
10057270:	mov    edi,ecx
10057272:	call   0x100144e6
10057277:	add    esp,0xc
1005727a:	test   eax,eax
1005727c:	jl     0x100572ab
1005727e:	push   DWORD PTR [ebp+0xc]
10057281:	lea    eax,[ebp+0xc]
10057284:	push   0x10
10057286:	push   eax
10057287:	call   0x100075f5
1005728c:	add    esp,0xc
1005728f:	test   eax,eax
10057291:	jl     0x100572ab
10057293:	push   DWORD PTR [ebp+0xc]
10057296:	mov    ecx,DWORD PTR [edi+0x4]
10057299:	push   DWORD PTR [ebp+0x8]
1005729c:	mov    eax,DWORD PTR [ecx]
1005729e:	call   DWORD PTR [eax+0x8]
100572a1:	test   eax,eax
100572a3:	je     0x100572ab
100572a5:	dec    esi
100572a6:	mov    DWORD PTR [eax+0x8],esi
100572a9:	jmp    0x100572ad
100572ab:	xor    eax,eax
100572ad:	pop    edi
100572ae:	pop    esi
100572af:	pop    ebp
100572b0:	ret    0xc
100572b3:	mov    eax,ds:0x10080a90
100572b8:	cmp    eax,0x1
100572bb:	push   DWORD PTR [esp+0x4]
100572bf:	jne    0x100572d1
100572c1:	push   0x0
100572c3:	call   DWORD PTR ds:0x100661ac
100572c9:	push   eax
100572ca:	call   DWORD PTR ds:0x10066188
100572d0:	ret    
100572d1:	push   eax
100572d2:	call   DWORD PTR ds:0x10080a94
100572d8:	ret    
100572d9:	push   ebx
100572da:	push   0xc
100572dc:	call   DWORD PTR ds:0x1006605c
100572e2:	test   eax,eax
100572e4:	jne    0x100572ee
100572e6:	inc    eax
100572e7:	mov    ds:0x10080a90,eax
100572ec:	pop    ebx
100572ed:	ret    
100572ee:	push   ebp
100572ef:	push   esi
100572f0:	push   edi
100572f1:	push   0x1006f884
100572f6:	call   DWORD PTR ds:0x10066220
100572fc:	mov    edi,eax
100572fe:	xor    ebp,ebp
10057300:	cmp    edi,ebp
10057302:	je     0x10057324
10057304:	mov    esi,DWORD PTR ds:0x1006612c
1005730a:	push   0x1006b940
1005730f:	push   edi
10057310:	call   esi
10057312:	push   0x1006b924
10057317:	push   edi
10057318:	mov    ds:0x10080a94,eax
1005731d:	call   esi
1005731f:	mov    ds:0x10080a98,eax
10057324:	cmp    DWORD PTR ds:0x10080a94,ebp
1005732a:	je     0x10057387
1005732c:	cmp    DWORD PTR ds:0x10080a98,ebp
10057332:	je     0x10057387
10057334:	mov    eax,fs:0x18
1005733a:	mov    esi,DWORD PTR [eax+0x30]
1005733d:	add    esi,0x34
10057340:	mov    eax,DWORD PTR [esi]
10057342:	cmp    eax,ebp
10057344:	jne    0x1005737d
10057346:	mov    ebx,DWORD PTR ds:0x100661ac
1005734c:	push   0x8
1005734e:	push   ebp
1005734f:	call   ebx
10057351:	push   eax
10057352:	call   DWORD PTR ds:0x1006618c
10057358:	mov    edi,eax
1005735a:	cmp    edi,ebp
1005735c:	je     0x10057387
1005735e:	push   ebp
1005735f:	push   edi
10057360:	push   esi
10057361:	mov    DWORD PTR [edi],ebp
10057363:	mov    DWORD PTR [edi+0x4],ebp
10057366:	call   DWORD PTR ds:0x100660e0
1005736c:	test   eax,eax
1005736e:	je     0x1005737b
10057370:	push   edi
10057371:	push   ebp
10057372:	call   ebx
10057374:	push   eax
10057375:	call   DWORD PTR ds:0x10066188
1005737b:	mov    eax,DWORD PTR [esi]
1005737d:	mov    ds:0x10080a90,eax
10057382:	xor    eax,eax
10057384:	inc    eax
10057385:	jmp    0x10057389
10057387:	xor    eax,eax
10057389:	pop    edi
1005738a:	pop    esi
1005738b:	pop    ebp
1005738c:	pop    ebx
1005738d:	ret    
1005738e:	push   DWORD PTR [esp+0x4]
10057392:	call   0x100572b3
10057397:	pop    ecx
10057398:	ret    0x4
1005739b:	cmp    DWORD PTR ds:0x10080a90,0x0
100573a2:	push   esi
100573a3:	jne    0x100573ae
100573a5:	call   0x100572d9
100573aa:	test   eax,eax
100573ac:	je     0x100573f1
100573ae:	mov    eax,ds:0x10080a90
100573b3:	cmp    eax,0x1
100573b6:	jne    0x100573cf
100573b8:	push   0xd
100573ba:	push   0x0
100573bc:	call   DWORD PTR ds:0x100661ac
100573c2:	push   eax
100573c3:	call   DWORD PTR ds:0x1006618c
100573c9:	test   eax,eax
100573cb:	je     0x100573f1
100573cd:	pop    esi
100573ce:	ret    
100573cf:	push   eax
100573d0:	call   DWORD PTR ds:0x10080a98
100573d6:	test   eax,eax
100573d8:	jne    0x10057439
100573da:	push   0x40
100573dc:	mov    eax,0x1000
100573e1:	push   eax
100573e2:	push   eax
100573e3:	push   0x0
100573e5:	call   DWORD PTR ds:0x10066194
100573eb:	mov    esi,eax
100573ed:	test   esi,esi
100573ef:	jne    0x100573f5
100573f1:	xor    eax,eax
100573f3:	pop    esi
100573f4:	ret    
100573f5:	mov    eax,DWORD PTR [esi]
100573f7:	push   edi
100573f8:	push   DWORD PTR ds:0x10080a90
100573fe:	call   DWORD PTR ds:0x10080a98
10057404:	mov    edi,eax
10057406:	test   edi,edi
10057408:	je     0x1005741c
1005740a:	push   0x8000
1005740f:	push   0x0
10057411:	push   esi
10057412:	call   DWORD PTR ds:0x100661d0
10057418:	mov    eax,edi
1005741a:	jmp    0x10057438
1005741c:	lea    edi,[esi+0xff0]
10057422:	push   esi
10057423:	push   DWORD PTR ds:0x10080a90
10057429:	call   DWORD PTR ds:0x10080a94
1005742f:	add    esi,0x10
10057432:	cmp    esi,edi
10057434:	jb     0x10057422
10057436:	mov    eax,esi
10057438:	pop    edi
10057439:	pop    esi
1005743a:	ret    
1005743b:	jmp    0x1005739b
10057440:	push   0x44
10057442:	mov    eax,0x10060338
10057447:	call   0x10059c75
1005744c:	push   0x1006b980
10057451:	lea    ecx,[ebp-0x28]
10057454:	call   0x100011d1
10057459:	and    DWORD PTR [ebp-0x4],0x0
1005745d:	lea    eax,[ebp-0x28]
10057460:	push   eax
10057461:	lea    ecx,[ebp-0x50]
10057464:	call   0x1000106e
10057469:	push   0x10074ec0
1005746e:	lea    eax,[ebp-0x50]
10057471:	push   eax
10057472:	mov    DWORD PTR [ebp-0x50],0x1006b96c
10057479:	call   0x10047c54
1005747e:	int3   
1005747f:	push   0x44
10057481:	mov    eax,0x10060338
10057486:	call   0x10059c75
1005748b:	push   0x1006b990
10057490:	lea    ecx,[ebp-0x28]
10057493:	call   0x100011d1
10057498:	and    DWORD PTR [ebp-0x4],0x0
1005749c:	lea    eax,[ebp-0x28]
1005749f:	push   eax
100574a0:	lea    ecx,[ebp-0x50]
100574a3:	call   0x1000106e
100574a8:	push   0x10074de0
100574ad:	lea    eax,[ebp-0x50]
100574b0:	push   eax
100574b1:	mov    DWORD PTR [ebp-0x50],0x1006b978
100574b8:	call   0x10047c54
100574bd:	int3   
100574be:	int3   
100574bf:	int3   
100574c0:	push   ebp
100574c1:	mov    ebp,esp
100574c3:	sub    esp,0x34
100574c6:	push   0x1
100574c8:	mov    eax,DWORD PTR [ebp+0x8]
100574cb:	push   eax
100574cc:	call   0x10057d00
100574d1:	mov    DWORD PTR [ebp+0x8],eax
100574d4:	push   0x0
100574d6:	mov    ecx,DWORD PTR [ebp+0xc]
100574d9:	push   ecx
100574da:	call   0x10057d00
100574df:	mov    DWORD PTR [ebp+0xc],eax
100574e2:	mov    edx,DWORD PTR [ebp+0x8]
100574e5:	movzx  eax,BYTE PTR [edx+0x1f]
100574e9:	mov    DWORD PTR [ebp-0xc],eax
100574ec:	cmp    DWORD PTR [ebp-0xc],0x0
100574f0:	je     0x100574f8
100574f2:	cmp    DWORD PTR [ebp-0xc],0x1f
100574f6:	jl     0x10057507
100574f8:	push   0x6
100574fa:	call   DWORD PTR ds:0x1006615c
10057500:	xor    eax,eax
10057502:	jmp    0x10057618
10057507:	mov    ecx,DWORD PTR [ebp+0x8]
1005750a:	add    ecx,DWORD PTR [ebp-0xc]
1005750d:	movzx  edx,BYTE PTR [ecx]
10057510:	cmp    edx,0xe9
10057516:	je     0x10057527
10057518:	push   0x6
1005751a:	call   DWORD PTR ds:0x1006615c
10057520:	xor    eax,eax
10057522:	jmp    0x10057618
10057527:	mov    eax,DWORD PTR [ebp+0x8]
1005752a:	add    eax,DWORD PTR [ebp-0xc]
1005752d:	mov    ecx,DWORD PTR [eax+0x1]
10057530:	mov    DWORD PTR [ebp-0x20],ecx
10057533:	mov    edx,DWORD PTR [ebp+0x8]
10057536:	add    edx,DWORD PTR [ebp-0xc]
10057539:	mov    eax,DWORD PTR [ebp-0x20]
1005753c:	lea    ecx,[edx+eax*1+0x5]
10057540:	sub    ecx,DWORD PTR [ebp-0xc]
10057543:	mov    DWORD PTR [ebp-0x8],ecx
10057546:	mov    edx,DWORD PTR [ebp-0x8]
10057549:	movzx  eax,BYTE PTR [edx]
1005754c:	cmp    eax,0xe9
10057551:	je     0x10057562
10057553:	push   0x9
10057555:	call   DWORD PTR ds:0x1006615c
1005755b:	xor    eax,eax
1005755d:	jmp    0x10057618
10057562:	mov    ecx,DWORD PTR [ebp-0x8]
10057565:	mov    edx,DWORD PTR [ecx+0x1]
10057568:	mov    DWORD PTR [ebp-0x20],edx
1005756b:	mov    eax,DWORD PTR [ebp-0x20]
1005756e:	mov    ecx,DWORD PTR [ebp-0x8]
10057571:	lea    edx,[ecx+eax*1+0x5]
10057575:	mov    DWORD PTR [ebp-0x28],edx
10057578:	mov    eax,DWORD PTR [ebp-0x28]
1005757b:	cmp    eax,DWORD PTR [ebp+0xc]
1005757e:	je     0x1005758f
10057580:	push   0xc
10057582:	call   DWORD PTR ds:0x1006615c
10057588:	xor    eax,eax
1005758a:	jmp    0x10057618
1005758f:	mov    ecx,DWORD PTR [ebp-0xc]
10057592:	push   ecx
10057593:	mov    edx,DWORD PTR [ebp-0x8]
10057596:	push   edx
10057597:	lea    ecx,[ebp-0x1c]
1005759a:	call   0x10057620
1005759f:	mov    eax,DWORD PTR [ebp+0x8]
100575a2:	mov    DWORD PTR [ebp-0x4],eax
100575a5:	mov    ecx,DWORD PTR [ebp-0x8]
100575a8:	mov    DWORD PTR [ebp-0x24],ecx
100575ab:	mov    DWORD PTR [ebp-0x2c],0x0
100575b2:	jmp    0x100575bd
100575b4:	mov    edx,DWORD PTR [ebp-0x8]
100575b7:	add    edx,DWORD PTR [ebp-0x2c]
100575ba:	mov    DWORD PTR [ebp-0x24],edx
100575bd:	mov    eax,DWORD PTR [ebp-0x2c]
100575c0:	cmp    eax,DWORD PTR [ebp-0xc]
100575c3:	jge    0x100575e2
100575c5:	push   0x0
100575c7:	mov    ecx,DWORD PTR [ebp-0x4]
100575ca:	push   ecx
100575cb:	mov    edx,DWORD PTR [ebp-0x24]
100575ce:	push   edx
100575cf:	call   0x10057f10
100575d4:	mov    DWORD PTR [ebp-0x4],eax
100575d7:	mov    eax,DWORD PTR [ebp-0x4]
100575da:	sub    eax,DWORD PTR [ebp+0x8]
100575dd:	mov    DWORD PTR [ebp-0x2c],eax
100575e0:	jmp    0x100575b4
100575e2:	mov    ecx,DWORD PTR [ebp-0x2c]
100575e5:	cmp    ecx,DWORD PTR [ebp-0xc]
100575e8:	je     0x10057606
100575ea:	push   0xd
100575ec:	call   DWORD PTR ds:0x1006615c
100575f2:	mov    DWORD PTR [ebp-0x30],0x0
100575f9:	lea    ecx,[ebp-0x1c]
100575fc:	call   0x100576a0
10057601:	mov    eax,DWORD PTR [ebp-0x30]
10057604:	jmp    0x10057618
10057606:	mov    DWORD PTR [ebp-0x34],0x1
1005760d:	lea    ecx,[ebp-0x1c]
10057610:	call   0x100576a0
10057615:	mov    eax,DWORD PTR [ebp-0x34]
10057618:	mov    esp,ebp
1005761a:	pop    ebp
1005761b:	ret    0x8
1005761e:	int3   
1005761f:	int3   
10057620:	push   ebp
10057621:	mov    ebp,esp
10057623:	push   ecx
10057624:	mov    DWORD PTR [ebp-0x4],ecx
10057627:	mov    eax,DWORD PTR [ebp-0x4]
1005762a:	mov    ecx,DWORD PTR [ebp+0x8]
1005762d:	mov    DWORD PTR [eax+0x4],ecx
10057630:	mov    edx,DWORD PTR [ebp-0x4]
10057633:	mov    eax,DWORD PTR [ebp+0xc]
10057636:	mov    DWORD PTR [edx+0x8],eax
10057639:	mov    ecx,DWORD PTR [ebp-0x4]
1005763c:	mov    DWORD PTR [ecx+0xc],0x0
10057643:	call   DWORD PTR ds:0x10066108
10057649:	mov    edx,DWORD PTR [ebp-0x4]
1005764c:	mov    DWORD PTR [edx],eax
1005764e:	mov    eax,DWORD PTR [ebp-0x4]
10057651:	cmp    DWORD PTR [eax+0x4],0x0
10057655:	je     0x10057691
10057657:	mov    ecx,DWORD PTR [ebp-0x4]
1005765a:	cmp    DWORD PTR [ecx+0x8],0x0
1005765e:	je     0x10057691
10057660:	mov    edx,DWORD PTR [ebp+0xc]
10057663:	push   edx
10057664:	mov    eax,DWORD PTR [ebp+0x8]
10057667:	push   eax
10057668:	mov    ecx,DWORD PTR [ebp-0x4]
1005766b:	mov    edx,DWORD PTR [ecx]
1005766d:	push   edx
1005766e:	call   DWORD PTR ds:0x10066158
10057674:	test   eax,eax
10057676:	jne    0x1005767a
10057678:	jmp    0x10057691
1005767a:	mov    eax,DWORD PTR [ebp-0x4]
1005767d:	add    eax,0xc
10057680:	push   eax
10057681:	push   0x40
10057683:	mov    ecx,DWORD PTR [ebp+0xc]
10057686:	push   ecx
10057687:	mov    edx,DWORD PTR [ebp+0x8]
1005768a:	push   edx
1005768b:	call   DWORD PTR ds:0x10066190
10057691:	mov    eax,DWORD PTR [ebp-0x4]
10057694:	mov    esp,ebp
10057696:	pop    ebp
10057697:	ret    0x8
1005769a:	int3   
1005769b:	int3   
1005769c:	int3   
1005769d:	int3   
1005769e:	int3   
1005769f:	int3   
100576a0:	push   ebp
100576a1:	mov    ebp,esp
100576a3:	sub    esp,0x8
100576a6:	mov    DWORD PTR [ebp-0x8],ecx
100576a9:	mov    eax,DWORD PTR [ebp-0x8]
100576ac:	cmp    DWORD PTR [eax+0xc],0x0
100576b0:	je     0x1005770a
100576b2:	mov    ecx,DWORD PTR [ebp-0x8]
100576b5:	cmp    DWORD PTR [ecx+0x4],0x0
100576b9:	je     0x1005770a
100576bb:	mov    edx,DWORD PTR [ebp-0x8]
100576be:	cmp    DWORD PTR [edx+0x8],0x0
100576c2:	je     0x1005770a
100576c4:	mov    DWORD PTR [ebp-0x4],0x0
100576cb:	mov    eax,DWORD PTR [ebp-0x8]
100576ce:	mov    ecx,DWORD PTR [eax+0x8]
100576d1:	push   ecx
100576d2:	mov    edx,DWORD PTR [ebp-0x8]
100576d5:	mov    eax,DWORD PTR [edx+0x4]
100576d8:	push   eax
100576d9:	mov    ecx,DWORD PTR [ebp-0x8]
100576dc:	mov    edx,DWORD PTR [ecx]
100576de:	push   edx
100576df:	call   DWORD PTR ds:0x10066158
100576e5:	test   eax,eax
100576e7:	jne    0x100576eb
100576e9:	jmp    0x1005770a
100576eb:	lea    eax,[ebp-0x4]
100576ee:	push   eax
100576ef:	mov    ecx,DWORD PTR [ebp-0x8]
100576f2:	mov    edx,DWORD PTR [ecx+0xc]
100576f5:	push   edx
100576f6:	mov    eax,DWORD PTR [ebp-0x8]
100576f9:	mov    ecx,DWORD PTR [eax+0x8]
100576fc:	push   ecx
100576fd:	mov    edx,DWORD PTR [ebp-0x8]
10057700:	mov    eax,DWORD PTR [edx+0x4]
10057703:	push   eax
10057704:	call   DWORD PTR ds:0x10066190
1005770a:	mov    esp,ebp
1005770c:	pop    ebp
1005770d:	ret    
1005770e:	int3   
1005770f:	int3   
10057710:	push   ebp
10057711:	mov    ebp,esp
10057713:	sub    esp,0xc
10057716:	push   0x20
10057718:	call   0x100436de
1005771d:	add    esp,0x4
10057720:	mov    DWORD PTR [ebp-0x8],eax
10057723:	mov    eax,DWORD PTR [ebp-0x8]
10057726:	mov    DWORD PTR [ebp-0x4],eax
10057729:	cmp    DWORD PTR [ebp-0x4],0x0
1005772d:	jne    0x10057733
1005772f:	xor    eax,eax
10057731:	jmp    0x10057780
10057733:	push   0x0
10057735:	mov    ecx,DWORD PTR [ebp+0x8]
10057738:	push   ecx
10057739:	call   0x10057d00
1005773e:	mov    DWORD PTR [ebp+0x8],eax
10057741:	push   0x0
10057743:	mov    edx,DWORD PTR [ebp+0xc]
10057746:	push   edx
10057747:	call   0x10057d00
1005774c:	mov    DWORD PTR [ebp+0xc],eax
1005774f:	mov    eax,DWORD PTR [ebp+0xc]
10057752:	push   eax
10057753:	mov    ecx,DWORD PTR [ebp-0x4]
10057756:	push   ecx
10057757:	mov    edx,DWORD PTR [ebp+0x8]
1005775a:	push   edx
1005775b:	call   0x10057790
10057760:	add    esp,0xc
10057763:	test   eax,eax
10057765:	je     0x1005776c
10057767:	mov    eax,DWORD PTR [ebp-0x4]
1005776a:	jmp    0x10057780
1005776c:	mov    eax,DWORD PTR [ebp-0x4]
1005776f:	mov    DWORD PTR [ebp-0xc],eax
10057772:	mov    ecx,DWORD PTR [ebp-0xc]
10057775:	push   ecx
10057776:	call   0x100430d2
1005777b:	add    esp,0x4
1005777e:	xor    eax,eax
10057780:	mov    esp,ebp
10057782:	pop    ebp
10057783:	ret    0x8
10057786:	int3   
10057787:	int3   
10057788:	int3   
10057789:	int3   
1005778a:	int3   
1005778b:	int3   
1005778c:	int3   
1005778d:	int3   
1005778e:	int3   
1005778f:	int3   
10057790:	push   ebp
10057791:	mov    ebp,esp
10057793:	sub    esp,0x54
10057796:	mov    eax,DWORD PTR [ebp+0x8]
10057799:	mov    DWORD PTR [ebp-0x18],eax
1005779c:	mov    DWORD PTR [ebp-0x30],0x0
100577a3:	cmp    DWORD PTR [ebp-0x30],0x5
100577a7:	jge    0x10057876
100577ad:	mov    ecx,DWORD PTR [ebp-0x18]
100577b0:	mov    DWORD PTR [ebp-0x38],ecx
100577b3:	mov    edx,DWORD PTR [ebp-0x38]
100577b6:	mov    al,BYTE PTR [edx]
100577b8:	mov    BYTE PTR [ebp-0x31],al
100577bb:	push   0x0
100577bd:	mov    ecx,DWORD PTR [ebp-0x18]
100577c0:	push   ecx
100577c1:	push   0x0
100577c3:	call   0x10057f10
100577c8:	mov    DWORD PTR [ebp-0x18],eax
100577cb:	mov    edx,DWORD PTR [ebp-0x18]
100577ce:	sub    edx,DWORD PTR [ebp+0x8]
100577d1:	mov    DWORD PTR [ebp-0x30],edx
100577d4:	movzx  eax,BYTE PTR [ebp-0x31]
100577d8:	cmp    eax,0xe9
100577dd:	je     0x10057802
100577df:	movzx  ecx,BYTE PTR [ebp-0x31]
100577e3:	cmp    ecx,0xe0
100577e9:	je     0x10057802
100577eb:	movzx  edx,BYTE PTR [ebp-0x31]
100577ef:	cmp    edx,0xc2
100577f5:	je     0x10057802
100577f7:	movzx  eax,BYTE PTR [ebp-0x31]
100577fb:	cmp    eax,0xc3
10057800:	jne    0x10057804
10057802:	jmp    0x10057876
10057804:	movzx  ecx,BYTE PTR [ebp-0x31]
10057808:	cmp    ecx,0xff
1005780e:	jne    0x1005781e
10057810:	mov    edx,DWORD PTR [ebp-0x38]
10057813:	movzx  eax,BYTE PTR [edx+0x1]
10057817:	cmp    eax,0x25
1005781a:	jne    0x1005781e
1005781c:	jmp    0x10057876
1005781e:	movzx  ecx,BYTE PTR [ebp-0x31]
10057822:	cmp    ecx,0x26
10057825:	je     0x10057854
10057827:	movzx  edx,BYTE PTR [ebp-0x31]
1005782b:	cmp    edx,0x2e
1005782e:	je     0x10057854
10057830:	movzx  eax,BYTE PTR [ebp-0x31]
10057834:	cmp    eax,0x36
10057837:	je     0x10057854
10057839:	movzx  ecx,BYTE PTR [ebp-0x31]
1005783d:	cmp    ecx,0x3e
10057840:	je     0x10057854
10057842:	movzx  edx,BYTE PTR [ebp-0x31]
10057846:	cmp    edx,0x64
10057849:	je     0x10057854
1005784b:	movzx  eax,BYTE PTR [ebp-0x31]
1005784f:	cmp    eax,0x65
10057852:	jne    0x10057871
10057854:	mov    ecx,DWORD PTR [ebp-0x38]
10057857:	movzx  edx,BYTE PTR [ecx+0x1]
1005785b:	cmp    edx,0xff
10057861:	jne    0x10057871
10057863:	mov    eax,DWORD PTR [ebp-0x38]
10057866:	movzx  ecx,BYTE PTR [eax+0x2]
1005786a:	cmp    ecx,0x25
1005786d:	jne    0x10057871
1005786f:	jmp    0x10057876
10057871:	jmp    0x100577a3
10057876:	cmp    DWORD PTR [ebp-0x30],0x5
1005787a:	jge    0x10057883
1005787c:	xor    eax,eax
1005787e:	jmp    0x100579fa
10057883:	cmp    DWORD PTR [ebp-0x30],0x1a
10057887:	jle    0x10057890
10057889:	xor    eax,eax
1005788b:	jmp    0x100579fa
10057890:	push   0x20
10057892:	mov    edx,DWORD PTR [ebp+0xc]
10057895:	push   edx
10057896:	lea    ecx,[ebp-0x28]
10057899:	call   0x10057620
1005789e:	mov    eax,DWORD PTR [ebp-0x30]
100578a1:	push   eax
100578a2:	mov    ecx,DWORD PTR [ebp+0x8]
100578a5:	push   ecx
100578a6:	lea    ecx,[ebp-0x14]
100578a9:	call   0x10057620
100578ae:	push   0x40
100578b0:	lea    ecx,[ebp-0x28]
100578b3:	call   0x10057a00
100578b8:	test   eax,eax
100578ba:	jne    0x100578db
100578bc:	mov    DWORD PTR [ebp-0x40],0x0
100578c3:	lea    ecx,[ebp-0x14]
100578c6:	call   0x100576a0
100578cb:	lea    ecx,[ebp-0x28]
100578ce:	call   0x100576a0
100578d3:	mov    eax,DWORD PTR [ebp-0x40]
100578d6:	jmp    0x100579fa
100578db:	lea    ecx,[ebp-0x14]
100578de:	call   0x10057a40
100578e3:	test   eax,eax
100578e5:	jne    0x10057906
100578e7:	mov    DWORD PTR [ebp-0x44],0x0
100578ee:	lea    ecx,[ebp-0x14]
100578f1:	call   0x100576a0
100578f6:	lea    ecx,[ebp-0x28]
100578f9:	call   0x100576a0
100578fe:	mov    eax,DWORD PTR [ebp-0x44]
10057901:	jmp    0x100579fa
10057906:	mov    edx,DWORD PTR [ebp+0x8]
10057909:	mov    DWORD PTR [ebp-0x4],edx
1005790c:	mov    eax,DWORD PTR [ebp+0xc]
1005790f:	mov    DWORD PTR [ebp-0x2c],eax
10057912:	mov    DWORD PTR [ebp-0x3c],0x0
10057919:	mov    ecx,DWORD PTR [ebp-0x3c]
1005791c:	cmp    ecx,DWORD PTR [ebp-0x30]
1005791f:	jge    0x10057947
10057921:	push   0x0
10057923:	mov    edx,DWORD PTR [ebp-0x4]
10057926:	push   edx
10057927:	mov    eax,DWORD PTR [ebp-0x2c]
1005792a:	push   eax
1005792b:	call   0x10057f10
10057930:	mov    DWORD PTR [ebp-0x4],eax
10057933:	mov    ecx,DWORD PTR [ebp-0x4]
10057936:	sub    ecx,DWORD PTR [ebp+0x8]
10057939:	mov    DWORD PTR [ebp-0x3c],ecx
1005793c:	mov    edx,DWORD PTR [ebp+0xc]
1005793f:	add    edx,DWORD PTR [ebp-0x3c]
10057942:	mov    DWORD PTR [ebp-0x2c],edx
10057945:	jmp    0x10057919
10057947:	mov    eax,DWORD PTR [ebp-0x3c]
1005794a:	cmp    eax,DWORD PTR [ebp-0x30]
1005794d:	je     0x1005796e
1005794f:	mov    DWORD PTR [ebp-0x48],0x0
10057956:	lea    ecx,[ebp-0x14]
10057959:	call   0x100576a0
1005795e:	lea    ecx,[ebp-0x28]
10057961:	call   0x100576a0
10057966:	mov    eax,DWORD PTR [ebp-0x48]
10057969:	jmp    0x100579fa
1005796e:	push   0x5
10057970:	mov    ecx,DWORD PTR [ebp+0x8]
10057973:	add    ecx,DWORD PTR [ebp-0x30]
10057976:	push   ecx
10057977:	mov    edx,DWORD PTR [ebp-0x2c]
1005797a:	push   edx
1005797b:	call   0x10057a80
10057980:	add    esp,0xc
10057983:	test   eax,eax
10057985:	jne    0x100579a3
10057987:	mov    DWORD PTR [ebp-0x4c],0x0
1005798e:	lea    ecx,[ebp-0x14]
10057991:	call   0x100576a0
10057996:	lea    ecx,[ebp-0x28]
10057999:	call   0x100576a0
1005799e:	mov    eax,DWORD PTR [ebp-0x4c]
100579a1:	jmp    0x100579fa
100579a3:	mov    eax,DWORD PTR [ebp+0xc]
100579a6:	mov    cl,BYTE PTR [ebp-0x30]
100579a9:	mov    BYTE PTR [eax+0x1f],cl
100579ac:	mov    edx,DWORD PTR [ebp-0x30]
100579af:	push   edx
100579b0:	mov    eax,DWORD PTR [ebp+0x10]
100579b3:	push   eax
100579b4:	mov    ecx,DWORD PTR [ebp+0x8]
100579b7:	push   ecx
100579b8:	call   0x10057a80
100579bd:	add    esp,0xc
100579c0:	test   eax,eax
100579c2:	jne    0x100579e0
100579c4:	mov    DWORD PTR [ebp-0x50],0x0
100579cb:	lea    ecx,[ebp-0x14]
100579ce:	call   0x100576a0
100579d3:	lea    ecx,[ebp-0x28]
100579d6:	call   0x100576a0
100579db:	mov    eax,DWORD PTR [ebp-0x50]
100579de:	jmp    0x100579fa
100579e0:	mov    DWORD PTR [ebp-0x54],0x1
100579e7:	lea    ecx,[ebp-0x14]
100579ea:	call   0x100576a0
100579ef:	lea    ecx,[ebp-0x28]
100579f2:	call   0x100576a0
100579f7:	mov    eax,DWORD PTR [ebp-0x54]
100579fa:	mov    esp,ebp
100579fc:	pop    ebp
100579fd:	ret    
100579fe:	int3   
100579ff:	int3   
10057a00:	push   ebp
10057a01:	mov    ebp,esp
10057a03:	push   ecx
10057a04:	mov    DWORD PTR [ebp-0x4],ecx
10057a07:	mov    eax,DWORD PTR [ebp-0x4]
10057a0a:	cmp    DWORD PTR [eax+0xc],0x0
10057a0e:	je     0x10057a32
10057a10:	mov    ecx,DWORD PTR [ebp-0x4]
10057a13:	cmp    DWORD PTR [ecx+0x4],0x0
10057a17:	je     0x10057a32
10057a19:	mov    edx,DWORD PTR [ebp-0x4]
10057a1c:	cmp    DWORD PTR [edx+0x8],0x0
10057a20:	je     0x10057a32
10057a22:	mov    eax,DWORD PTR [ebp-0x4]
10057a25:	mov    ecx,DWORD PTR [ebp+0x8]
10057a28:	mov    DWORD PTR [eax+0xc],ecx
10057a2b:	mov    eax,0x1
10057a30:	jmp    0x10057a34
10057a32:	xor    eax,eax
10057a34:	mov    esp,ebp
10057a36:	pop    ebp
10057a37:	ret    0x4
10057a3a:	int3   
10057a3b:	int3   
10057a3c:	int3   
10057a3d:	int3   
10057a3e:	int3   
10057a3f:	int3   
10057a40:	push   ebp
10057a41:	mov    ebp,esp
10057a43:	sub    esp,0x8
10057a46:	mov    DWORD PTR [ebp-0x4],ecx
10057a49:	mov    eax,DWORD PTR [ebp-0x4]
10057a4c:	cmp    DWORD PTR [eax+0x4],0x0
10057a50:	je     0x10057a6d
10057a52:	mov    ecx,DWORD PTR [ebp-0x4]
10057a55:	cmp    DWORD PTR [ecx+0x8],0x0
10057a59:	je     0x10057a6d
10057a5b:	mov    edx,DWORD PTR [ebp-0x4]
10057a5e:	cmp    DWORD PTR [edx+0xc],0x0
10057a62:	je     0x10057a6d
10057a64:	mov    DWORD PTR [ebp-0x8],0x1
10057a6b:	jmp    0x10057a74
10057a6d:	mov    DWORD PTR [ebp-0x8],0x0
10057a74:	mov    eax,DWORD PTR [ebp-0x8]
10057a77:	mov    esp,ebp
10057a79:	pop    ebp
10057a7a:	ret    
10057a7b:	int3   
10057a7c:	int3   
10057a7d:	int3   
10057a7e:	int3   
10057a7f:	int3   
10057a80:	push   ebp
10057a81:	mov    ebp,esp
10057a83:	cmp    DWORD PTR [ebp+0x10],0x5
10057a87:	jge    0x10057a8d
10057a89:	xor    eax,eax
10057a8b:	jmp    0x10057ad2
10057a8d:	push   0x0
10057a8f:	mov    eax,DWORD PTR [ebp+0xc]
10057a92:	push   eax
10057a93:	mov    ecx,DWORD PTR [ebp+0x8]
10057a96:	push   ecx
10057a97:	call   0x10057ae0
10057a9c:	add    esp,0xc
10057a9f:	mov    DWORD PTR [ebp+0x8],eax
10057aa2:	mov    edx,DWORD PTR [ebp+0x10]
10057aa5:	sub    edx,0x5
10057aa8:	mov    DWORD PTR [ebp+0x10],edx
10057aab:	jmp    0x10057ab6
10057aad:	mov    eax,DWORD PTR [ebp+0x10]
10057ab0:	sub    eax,0x1
10057ab3:	mov    DWORD PTR [ebp+0x10],eax
10057ab6:	cmp    DWORD PTR [ebp+0x10],0x0
10057aba:	jle    0x10057acd
10057abc:	mov    ecx,DWORD PTR [ebp+0x8]
10057abf:	push   ecx
10057ac0:	call   0x10057b20
10057ac5:	add    esp,0x4
10057ac8:	mov    DWORD PTR [ebp+0x8],eax
10057acb:	jmp    0x10057aad
10057acd:	mov    eax,0x1
10057ad2:	pop    ebp
10057ad3:	ret    
10057ad4:	int3   
10057ad5:	int3   
10057ad6:	int3   
10057ad7:	int3   
10057ad8:	int3   
10057ad9:	int3   
10057ada:	int3   
10057adb:	int3   
10057adc:	int3   
10057add:	int3   
10057ade:	int3   
10057adf:	int3   
10057ae0:	push   ebp
10057ae1:	mov    ebp,esp
10057ae3:	cmp    DWORD PTR [ebp+0x10],0x0
10057ae7:	jne    0x10057aef
10057ae9:	mov    eax,DWORD PTR [ebp+0x8]
10057aec:	mov    DWORD PTR [ebp+0x10],eax
10057aef:	mov    ecx,DWORD PTR [ebp+0x8]
10057af2:	mov    BYTE PTR [ecx],0xe9
10057af5:	mov    edx,DWORD PTR [ebp+0x8]
10057af8:	add    edx,0x1
10057afb:	mov    DWORD PTR [ebp+0x8],edx
10057afe:	mov    eax,DWORD PTR [ebp+0x10]
10057b01:	add    eax,0x5
10057b04:	mov    ecx,DWORD PTR [ebp+0xc]
10057b07:	sub    ecx,eax
10057b09:	mov    edx,DWORD PTR [ebp+0x8]
10057b0c:	mov    DWORD PTR [edx],ecx
10057b0e:	mov    eax,DWORD PTR [ebp+0x8]
10057b11:	add    eax,0x4
10057b14:	mov    DWORD PTR [ebp+0x8],eax
10057b17:	mov    eax,DWORD PTR [ebp+0x8]
10057b1a:	pop    ebp
10057b1b:	ret    
10057b1c:	int3   
10057b1d:	int3   
10057b1e:	int3   
10057b1f:	int3   
10057b20:	push   ebp
10057b21:	mov    ebp,esp
10057b23:	mov    eax,DWORD PTR [ebp+0x8]
10057b26:	mov    BYTE PTR [eax],0xcc
10057b29:	mov    ecx,DWORD PTR [ebp+0x8]
10057b2c:	add    ecx,0x1
10057b2f:	mov    DWORD PTR [ebp+0x8],ecx
10057b32:	mov    eax,DWORD PTR [ebp+0x8]
10057b35:	pop    ebp
10057b36:	ret    
10057b37:	int3   
10057b38:	int3   
10057b39:	int3   
10057b3a:	int3   
10057b3b:	int3   
10057b3c:	int3   
10057b3d:	int3   
10057b3e:	int3   
10057b3f:	int3   
10057b40:	push   ebp
10057b41:	mov    ebp,esp
10057b43:	sub    esp,0xc
10057b46:	cmp    DWORD PTR ds:0x10080ac4,0x0
10057b4d:	je     0x10057b59
10057b4f:	mov    eax,ds:0x10080ac4
10057b54:	jmp    0x10057cf6
10057b59:	mov    DWORD PTR ds:0x10080ac4,0x10080a9c
10057b63:	push   0x28
10057b65:	push   0x0
10057b67:	push   0x10080a9c
10057b6c:	call   0x10045ea0
10057b71:	add    esp,0xc
10057b74:	call   DWORD PTR ds:0x10066108
10057b7a:	mov    ds:0x10080a9c,eax
10057b7f:	push   0x1007eff4
10057b84:	call   DWORD PTR ds:0x10066220
10057b8a:	mov    ds:0x10080aa0,eax
10057b8f:	cmp    DWORD PTR ds:0x10080aa0,0x0
10057b96:	jne    0x10057b9f
10057b98:	xor    eax,eax
10057b9a:	jmp    0x10057cf6
10057b9f:	push   0x1007f004
10057ba4:	mov    eax,ds:0x10080aa0
10057ba9:	push   eax
10057baa:	call   DWORD PTR ds:0x1006612c
10057bb0:	mov    ds:0x10080aa4,eax
10057bb5:	push   0x1007f01c
10057bba:	mov    ecx,DWORD PTR ds:0x10080aa0
10057bc0:	push   ecx
10057bc1:	call   DWORD PTR ds:0x1006612c
10057bc7:	mov    ds:0x10080aa8,eax
10057bcc:	push   0x1007f02c
10057bd1:	mov    edx,DWORD PTR ds:0x10080aa0
10057bd7:	push   edx
10057bd8:	call   DWORD PTR ds:0x1006612c
10057bde:	mov    ds:0x10080aac,eax
10057be3:	push   0x1007f03c
10057be8:	mov    eax,ds:0x10080aa0
10057bed:	push   eax
10057bee:	call   DWORD PTR ds:0x1006612c
10057bf4:	mov    ds:0x10080ab0,eax
10057bf9:	push   0x1007f04c
10057bfe:	mov    ecx,DWORD PTR ds:0x10080aa0
10057c04:	push   ecx
10057c05:	call   DWORD PTR ds:0x1006612c
10057c0b:	mov    ds:0x10080ab4,eax
10057c10:	push   0x1007f05c
10057c15:	mov    edx,DWORD PTR ds:0x10080aa0
10057c1b:	push   edx
10057c1c:	call   DWORD PTR ds:0x1006612c
10057c22:	mov    ds:0x10080ab8,eax
10057c27:	push   0x1007f070
10057c2c:	mov    eax,ds:0x10080aa0
10057c31:	push   eax
10057c32:	call   DWORD PTR ds:0x1006612c
10057c38:	mov    ds:0x10080abc,eax
10057c3d:	push   0x1007f084
10057c42:	mov    ecx,DWORD PTR ds:0x10080aa0
10057c48:	push   ecx
10057c49:	call   DWORD PTR ds:0x1006612c
10057c4f:	mov    ds:0x10080ac0,eax
10057c54:	push   0x8
10057c56:	push   0x0
10057c58:	lea    edx,[ebp-0x8]
10057c5b:	push   edx
10057c5c:	call   0x10045ea0
10057c61:	add    esp,0xc
10057c64:	mov    WORD PTR [ebp-0x8],0x9
10057c6a:	cmp    DWORD PTR ds:0x10080aa4,0x0
10057c71:	je     0x10057c7d
10057c73:	lea    eax,[ebp-0x8]
10057c76:	push   eax
10057c77:	call   DWORD PTR ds:0x10080aa4
10057c7d:	cmp    DWORD PTR ds:0x10080aa4,0x0
10057c84:	je     0x10057c8f
10057c86:	movzx  ecx,WORD PTR [ebp-0x8]
10057c8a:	cmp    ecx,0x9
10057c8d:	jge    0x10057caa
10057c8f:	mov    edx,DWORD PTR ds:0x10080aa0
10057c95:	push   edx
10057c96:	call   DWORD PTR ds:0x100660fc
10057c9c:	mov    DWORD PTR ds:0x10080aa0,0x0
10057ca6:	xor    eax,eax
10057ca8:	jmp    0x10057cf6
10057caa:	cmp    DWORD PTR ds:0x10080aa8,0x0
10057cb1:	je     0x10057cc3
10057cb3:	push   0x0
10057cb5:	push   0x0
10057cb7:	mov    eax,ds:0x10080a9c
10057cbc:	push   eax
10057cbd:	call   DWORD PTR ds:0x10080aa8
10057cc3:	cmp    DWORD PTR ds:0x10080ab0,0x0
10057cca:	je     0x10057cf1
10057ccc:	cmp    DWORD PTR ds:0x10080aac,0x0
10057cd3:	je     0x10057cf1
10057cd5:	call   DWORD PTR ds:0x10080ab0
10057cdb:	mov    DWORD PTR [ebp-0xc],eax
10057cde:	mov    ecx,DWORD PTR [ebp-0xc]
10057ce1:	and    ecx,0x7
10057ce4:	mov    DWORD PTR [ebp-0xc],ecx
10057ce7:	mov    edx,DWORD PTR [ebp-0xc]
10057cea:	push   edx
10057ceb:	call   DWORD PTR ds:0x10080aac
10057cf1:	mov    eax,ds:0x10080ac4
10057cf6:	mov    esp,ebp
10057cf8:	pop    ebp
10057cf9:	ret    
10057cfa:	int3   
10057cfb:	int3   
10057cfc:	int3   
10057cfd:	int3   
10057cfe:	int3   
10057cff:	int3   
10057d00:	push   ebp
10057d01:	mov    ebp,esp
10057d03:	cmp    DWORD PTR [ebp+0x8],0x0
10057d07:	jne    0x10057d0d
10057d09:	xor    eax,eax
10057d0b:	jmp    0x10057d60
10057d0d:	mov    eax,DWORD PTR [ebp+0x8]
10057d10:	movzx  ecx,BYTE PTR [eax]
10057d13:	cmp    ecx,0xff
10057d19:	jne    0x10057d3a
10057d1b:	mov    edx,DWORD PTR [ebp+0x8]
10057d1e:	movzx  eax,BYTE PTR [edx+0x1]
10057d22:	cmp    eax,0x25
10057d25:	jne    0x10057d3a
10057d27:	mov    ecx,DWORD PTR [ebp+0x8]
10057d2a:	mov    edx,DWORD PTR [ecx+0x2]
10057d2d:	mov    DWORD PTR [ebp+0x8],edx
10057d30:	mov    eax,DWORD PTR [ebp+0x8]
10057d33:	mov    ecx,DWORD PTR [eax]
10057d35:	mov    DWORD PTR [ebp+0x8],ecx
10057d38:	jmp    0x10057d5d
10057d3a:	mov    edx,DWORD PTR [ebp+0x8]
10057d3d:	movzx  eax,BYTE PTR [edx]
10057d40:	cmp    eax,0xe9
10057d45:	jne    0x10057d5d
10057d47:	cmp    DWORD PTR [ebp+0xc],0x0
10057d4b:	je     0x10057d5d
10057d4d:	mov    ecx,DWORD PTR [ebp+0x8]
10057d50:	mov    edx,DWORD PTR [ecx+0x1]
10057d53:	mov    eax,DWORD PTR [ebp+0x8]
10057d56:	lea    ecx,[eax+edx*1+0x5]
10057d5a:	mov    DWORD PTR [ebp+0x8],ecx
10057d5d:	mov    eax,DWORD PTR [ebp+0x8]
10057d60:	pop    ebp
10057d61:	ret    0x8
10057d64:	int3   
10057d65:	int3   
10057d66:	int3   
10057d67:	int3   
10057d68:	int3   
10057d69:	int3   
10057d6a:	int3   
10057d6b:	int3   
10057d6c:	int3   
10057d6d:	int3   
10057d6e:	int3   
10057d6f:	int3   
10057d70:	push   ebp
10057d71:	mov    ebp,esp
10057d73:	sub    esp,0x668
10057d79:	mov    eax,DWORD PTR [ebp+0x8]
10057d7c:	push   eax
10057d7d:	call   DWORD PTR ds:0x10066220
10057d83:	mov    DWORD PTR [ebp-0x668],eax
10057d89:	cmp    DWORD PTR [ebp-0x668],0x0
10057d90:	jne    0x10057d99
10057d92:	xor    eax,eax
10057d94:	jmp    0x10057efc
10057d99:	mov    ecx,DWORD PTR [ebp+0xc]
10057d9c:	push   ecx
10057d9d:	mov    edx,DWORD PTR [ebp-0x668]
10057da3:	push   edx
10057da4:	call   DWORD PTR ds:0x1006612c
10057daa:	mov    DWORD PTR [ebp-0x664],eax
10057db0:	cmp    DWORD PTR [ebp-0x664],0x0
10057db7:	je     0x10057dc4
10057db9:	mov    eax,DWORD PTR [ebp-0x664]
10057dbf:	jmp    0x10057efc
10057dc4:	call   0x10057b40
10057dc9:	mov    DWORD PTR [ebp-0x21c],eax
10057dcf:	cmp    DWORD PTR [ebp-0x21c],0x0
10057dd6:	je     0x10057dfc
10057dd8:	mov    eax,DWORD PTR [ebp-0x21c]
10057dde:	cmp    DWORD PTR [eax+0x18],0x0
10057de2:	je     0x10057dfc
10057de4:	mov    ecx,DWORD PTR [ebp-0x21c]
10057dea:	cmp    DWORD PTR [ecx+0x1c],0x0
10057dee:	je     0x10057dfc
10057df0:	mov    edx,DWORD PTR [ebp-0x21c]
10057df6:	cmp    DWORD PTR [edx+0x20],0x0
10057dfa:	jne    0x10057e03
10057dfc:	xor    eax,eax
10057dfe:	jmp    0x10057efc
10057e03:	push   0x0
10057e05:	mov    eax,DWORD PTR [ebp-0x668]
10057e0b:	push   eax
10057e0c:	push   0x0
10057e0e:	mov    ecx,DWORD PTR [ebp+0x8]
10057e11:	push   ecx
10057e12:	push   0x0
10057e14:	mov    edx,DWORD PTR [ebp-0x21c]
10057e1a:	mov    eax,DWORD PTR [edx]
10057e1c:	push   eax
10057e1d:	mov    ecx,DWORD PTR [ebp-0x21c]
10057e23:	call   DWORD PTR [ecx+0x18]
10057e26:	push   0x23c
10057e2b:	push   0x0
10057e2d:	lea    edx,[ebp-0x460]
10057e33:	push   edx
10057e34:	call   0x10045ea0
10057e39:	add    esp,0xc
10057e3c:	lea    eax,[ebp-0x460]
10057e42:	push   eax
10057e43:	mov    ecx,DWORD PTR [ebp-0x668]
10057e49:	push   ecx
10057e4a:	mov    edx,DWORD PTR [ebp-0x21c]
10057e50:	mov    eax,DWORD PTR [edx]
10057e52:	push   eax
10057e53:	mov    ecx,DWORD PTR [ebp-0x21c]
10057e59:	call   DWORD PTR [ecx+0x1c]
10057e5c:	test   eax,eax
10057e5e:	jne    0x10057e67
10057e60:	xor    eax,eax
10057e62:	jmp    0x10057efc
10057e67:	lea    edx,[ebp-0x444]
10057e6d:	push   edx
10057e6e:	lea    eax,[ebp-0x660]
10057e74:	push   eax
10057e75:	call   0x100466e0
10057e7a:	add    esp,0x8
10057e7d:	push   0x1007f090
10057e82:	lea    ecx,[ebp-0x660]
10057e88:	push   ecx
10057e89:	call   0x100466f0
10057e8e:	add    esp,0x8
10057e91:	mov    edx,DWORD PTR [ebp+0xc]
10057e94:	push   edx
10057e95:	lea    eax,[ebp-0x660]
10057e9b:	push   eax
10057e9c:	call   0x100466f0
10057ea1:	add    esp,0x8
10057ea4:	push   0x218
10057ea9:	push   0x0
10057eab:	lea    ecx,[ebp-0x218]
10057eb1:	push   ecx
10057eb2:	call   0x10045ea0
10057eb7:	add    esp,0xc
10057eba:	mov    DWORD PTR [ebp-0x218],0x18
10057ec4:	mov    DWORD PTR [ebp-0x208],0x80
10057ece:	lea    edx,[ebp-0x218]
10057ed4:	push   edx
10057ed5:	lea    eax,[ebp-0x660]
10057edb:	push   eax
10057edc:	mov    ecx,DWORD PTR [ebp-0x21c]
10057ee2:	mov    edx,DWORD PTR [ecx]
10057ee4:	push   edx
10057ee5:	mov    eax,DWORD PTR [ebp-0x21c]
10057eeb:	call   DWORD PTR [eax+0x20]
10057eee:	test   eax,eax
10057ef0:	jne    0x10057ef6
10057ef2:	xor    eax,eax
10057ef4:	jmp    0x10057efc
10057ef6:	mov    eax,DWORD PTR [ebp-0x214]
10057efc:	mov    esp,ebp
10057efe:	pop    ebp
10057eff:	ret    0x8
10057f02:	int3   
10057f03:	int3   
10057f04:	int3   
10057f05:	int3   
10057f06:	int3   
10057f07:	int3   
10057f08:	int3   
10057f09:	int3   
10057f0a:	int3   
10057f0b:	int3   
10057f0c:	int3   
10057f0d:	int3   
10057f0e:	int3   
10057f0f:	int3   
10057f10:	push   ebp
10057f11:	mov    ebp,esp
10057f13:	sub    esp,0x58
10057f16:	push   0x0
10057f18:	mov    eax,DWORD PTR [ebp+0x10]
10057f1b:	push   eax
10057f1c:	lea    ecx,[ebp-0x58]
10057f1f:	call   0x10057f40
10057f24:	mov    ecx,DWORD PTR [ebp+0xc]
10057f27:	push   ecx
10057f28:	mov    edx,DWORD PTR [ebp+0x8]
10057f2b:	push   edx
10057f2c:	lea    ecx,[ebp-0x58]
10057f2f:	call   0x10058040
10057f34:	mov    esp,ebp
10057f36:	pop    ebp
10057f37:	ret    0xc
10057f3a:	int3   
10057f3b:	int3   
10057f3c:	int3   
10057f3d:	int3   
10057f3e:	int3   
10057f3f:	int3   
10057f40:	push   ebp
10057f41:	mov    ebp,esp
10057f43:	sub    esp,0xc
10057f46:	mov    DWORD PTR [ebp-0x4],ecx
10057f49:	mov    ecx,DWORD PTR [ebp-0x4]
10057f4c:	call   0x10057fe0
10057f51:	mov    ecx,DWORD PTR [ebp-0x4]
10057f54:	call   0x10058020
10057f59:	cmp    DWORD PTR [ebp+0x8],0x0
10057f5d:	je     0x10057f67
10057f5f:	mov    eax,DWORD PTR [ebp+0x8]
10057f62:	mov    DWORD PTR [ebp-0x8],eax
10057f65:	jmp    0x10057f70
10057f67:	mov    ecx,DWORD PTR [ebp-0x4]
10057f6a:	add    ecx,0x14
10057f6d:	mov    DWORD PTR [ebp-0x8],ecx
10057f70:	mov    edx,DWORD PTR [ebp-0x4]
10057f73:	mov    eax,DWORD PTR [ebp-0x8]
10057f76:	mov    DWORD PTR [edx+0x8],eax
10057f79:	cmp    DWORD PTR [ebp+0xc],0x0
10057f7d:	je     0x10057f87
10057f7f:	mov    ecx,DWORD PTR [ebp+0xc]
10057f82:	mov    DWORD PTR [ebp-0xc],ecx
10057f85:	jmp    0x10057f90
10057f87:	mov    edx,DWORD PTR [ebp-0x4]
10057f8a:	add    edx,0x10
10057f8d:	mov    DWORD PTR [ebp-0xc],edx
10057f90:	mov    eax,DWORD PTR [ebp-0x4]
10057f93:	mov    ecx,DWORD PTR [ebp-0xc]
10057f96:	mov    DWORD PTR [eax+0xc],ecx
10057f99:	mov    edx,DWORD PTR [ebp-0x4]
10057f9c:	mov    eax,DWORD PTR [edx+0x8]
10057f9f:	mov    DWORD PTR [eax],0x0
10057fa5:	mov    ecx,DWORD PTR [ebp-0x4]
10057fa8:	mov    edx,DWORD PTR [ecx+0xc]
10057fab:	mov    DWORD PTR [edx],0x0
10057fb1:	mov    eax,DWORD PTR [ebp-0x4]
10057fb4:	mov    esp,ebp
10057fb6:	pop    ebp
10057fb7:	ret    0x8
10057fba:	int3   
10057fbb:	int3   
10057fbc:	int3   
10057fbd:	int3   
10057fbe:	int3   
10057fbf:	int3   
10057fc0:	push   ebp
10057fc1:	mov    ebp,esp
10057fc3:	push   ecx
10057fc4:	mov    DWORD PTR [ebp-0x4],ecx
10057fc7:	mov    eax,DWORD PTR [ebp-0x4]
10057fca:	mov    DWORD PTR [eax],0x1
10057fd0:	mov    esp,ebp
10057fd2:	pop    ebp
10057fd3:	ret    
10057fd4:	int3   
10057fd5:	int3   
10057fd6:	int3   
10057fd7:	int3   
10057fd8:	int3   
10057fd9:	int3   
10057fda:	int3   
10057fdb:	int3   
10057fdc:	int3   
10057fdd:	int3   
10057fde:	int3   
10057fdf:	int3   
10057fe0:	push   ebp
10057fe1:	mov    ebp,esp
10057fe3:	push   ecx
10057fe4:	mov    DWORD PTR [ebp-0x4],ecx
10057fe7:	mov    eax,DWORD PTR [ebp-0x4]
10057fea:	mov    DWORD PTR [eax],0x0
10057ff0:	mov    esp,ebp
10057ff2:	pop    ebp
10057ff3:	ret    
10057ff4:	int3   
10057ff5:	int3   
10057ff6:	int3   
10057ff7:	int3   
10057ff8:	int3   
10057ff9:	int3   
10057ffa:	int3   
10057ffb:	int3   
10057ffc:	int3   
10057ffd:	int3   
10057ffe:	int3   
10057fff:	int3   
10058000:	push   ebp
10058001:	mov    ebp,esp
10058003:	push   ecx
10058004:	mov    DWORD PTR [ebp-0x4],ecx
10058007:	mov    eax,DWORD PTR [ebp-0x4]
1005800a:	mov    DWORD PTR [eax+0x4],0x1
10058011:	mov    esp,ebp
10058013:	pop    ebp
10058014:	ret    
10058015:	int3   
10058016:	int3   
10058017:	int3   
10058018:	int3   
10058019:	int3   
1005801a:	int3   
1005801b:	int3   
1005801c:	int3   
1005801d:	int3   
1005801e:	int3   
1005801f:	int3   
10058020:	push   ebp
10058021:	mov    ebp,esp
10058023:	push   ecx
10058024:	mov    DWORD PTR [ebp-0x4],ecx
10058027:	mov    eax,DWORD PTR [ebp-0x4]
1005802a:	mov    DWORD PTR [eax+0x4],0x0
10058031:	mov    esp,ebp
10058033:	pop    ebp
10058034:	ret    
10058035:	int3   
10058036:	int3   
10058037:	int3   
10058038:	int3   
10058039:	int3   
1005803a:	int3   
1005803b:	int3   
1005803c:	int3   
1005803d:	int3   
1005803e:	int3   
1005803f:	int3   
10058040:	push   ebp
10058041:	mov    ebp,esp
10058043:	sub    esp,0x8
10058046:	mov    DWORD PTR [ebp-0x8],ecx
10058049:	cmp    DWORD PTR [ebp+0x8],0x0
1005804d:	jne    0x10058058
1005804f:	mov    eax,DWORD PTR [ebp-0x8]
10058052:	add    eax,0x18
10058055:	mov    DWORD PTR [ebp+0x8],eax
10058058:	cmp    DWORD PTR [ebp+0xc],0x0
1005805c:	jne    0x1005806a
1005805e:	push   0xd
10058060:	call   DWORD PTR ds:0x1006615c
10058066:	xor    eax,eax
10058068:	jmp    0x1005808f
1005806a:	mov    ecx,DWORD PTR [ebp+0xc]
1005806d:	movzx  edx,BYTE PTR [ecx]
10058070:	lea    eax,[edx*8+0x1006baa8]
10058077:	mov    DWORD PTR [ebp-0x4],eax
1005807a:	mov    ecx,DWORD PTR [ebp+0xc]
1005807d:	push   ecx
1005807e:	mov    edx,DWORD PTR [ebp+0x8]
10058081:	push   edx
10058082:	mov    eax,DWORD PTR [ebp-0x4]
10058085:	push   eax
10058086:	mov    edx,DWORD PTR [ebp-0x4]
10058089:	mov    ecx,DWORD PTR [ebp-0x8]
1005808c:	call   DWORD PTR [edx+0x4]
1005808f:	mov    esp,ebp
10058091:	pop    ebp
10058092:	ret    0x8
10058095:	int3   
10058096:	int3   
10058097:	int3   
10058098:	int3   
10058099:	int3   
1005809a:	int3   
1005809b:	int3   
1005809c:	int3   
1005809d:	int3   
1005809e:	int3   
1005809f:	int3   
100580a0:	push   ebp
100580a1:	mov    ebp,esp
100580a3:	sub    esp,0x1c
100580a6:	mov    DWORD PTR [ebp-0x10],ecx
100580a9:	mov    eax,DWORD PTR [ebp+0x8]
100580ac:	mov    ecx,DWORD PTR [eax]
100580ae:	shr    ecx,0x14
100580b1:	and    ecx,0xf
100580b4:	and    ecx,0x2
100580b7:	test   ecx,ecx
100580b9:	je     0x100580ea
100580bb:	mov    edx,DWORD PTR [ebp-0x10]
100580be:	cmp    DWORD PTR [edx+0x4],0x0
100580c2:	je     0x100580d4
100580c4:	mov    eax,DWORD PTR [ebp+0x8]
100580c7:	mov    ecx,DWORD PTR [eax]
100580c9:	shr    ecx,0xb
100580cc:	and    ecx,0x7
100580cf:	mov    DWORD PTR [ebp-0x14],ecx
100580d2:	jmp    0x100580e2
100580d4:	mov    edx,DWORD PTR [ebp+0x8]
100580d7:	mov    eax,DWORD PTR [edx]
100580d9:	shr    eax,0x8
100580dc:	and    eax,0x7
100580df:	mov    DWORD PTR [ebp-0x14],eax
100580e2:	mov    ecx,DWORD PTR [ebp-0x14]
100580e5:	mov    DWORD PTR [ebp-0x18],ecx
100580e8:	jmp    0x10058116
100580ea:	mov    edx,DWORD PTR [ebp-0x10]
100580ed:	cmp    DWORD PTR [edx],0x0
100580f0:	je     0x10058102
100580f2:	mov    eax,DWORD PTR [ebp+0x8]
100580f5:	mov    ecx,DWORD PTR [eax]
100580f7:	shr    ecx,0xb
100580fa:	and    ecx,0x7
100580fd:	mov    DWORD PTR [ebp-0x1c],ecx
10058100:	jmp    0x10058110
10058102:	mov    edx,DWORD PTR [ebp+0x8]
10058105:	mov    eax,DWORD PTR [edx]
10058107:	shr    eax,0x8
1005810a:	and    eax,0x7
1005810d:	mov    DWORD PTR [ebp-0x1c],eax
10058110:	mov    ecx,DWORD PTR [ebp-0x1c]
10058113:	mov    DWORD PTR [ebp-0x18],ecx
10058116:	mov    edx,DWORD PTR [ebp-0x18]
10058119:	mov    DWORD PTR [ebp-0x8],edx
1005811c:	mov    eax,DWORD PTR [ebp-0x8]
1005811f:	mov    DWORD PTR [ebp-0x4],eax
10058122:	mov    ecx,DWORD PTR [ebp+0x8]
10058125:	mov    edx,DWORD PTR [ecx]
10058127:	shr    edx,0xe
1005812a:	and    edx,0x7
1005812d:	test   edx,edx
1005812f:	jbe    0x100581de
10058135:	mov    eax,DWORD PTR [ebp+0x8]
10058138:	mov    ecx,DWORD PTR [eax]
1005813a:	shr    ecx,0xe
1005813d:	and    ecx,0x7
10058140:	mov    edx,DWORD PTR [ebp+0x10]
10058143:	mov    al,BYTE PTR [edx+ecx*1]
10058146:	mov    BYTE PTR [ebp-0x9],al
10058149:	movzx  ecx,BYTE PTR [ebp-0x9]
1005814d:	mov    dl,BYTE PTR [ecx+0x1006b9a8]
10058153:	mov    BYTE PTR [ebp-0xa],dl
10058156:	movzx  eax,BYTE PTR [ebp-0xa]
1005815a:	and    eax,0x10
1005815d:	test   eax,eax
1005815f:	je     0x100581cf
10058161:	mov    ecx,DWORD PTR [ebp+0x8]
10058164:	mov    edx,DWORD PTR [ecx]
10058166:	shr    edx,0xe
10058169:	and    edx,0x7
1005816c:	mov    eax,DWORD PTR [ebp+0x10]
1005816f:	mov    cl,BYTE PTR [eax+edx*1+0x1]
10058173:	mov    BYTE PTR [ebp-0xb],cl
10058176:	movzx  edx,BYTE PTR [ebp-0xb]
1005817a:	and    edx,0x7
1005817d:	cmp    edx,0x5
10058180:	jne    0x100581cf
10058182:	movzx  eax,BYTE PTR [ebp-0x9]
10058186:	and    eax,0xc0
1005818b:	test   eax,eax
1005818d:	jne    0x1005819a
1005818f:	mov    ecx,DWORD PTR [ebp-0x4]
10058192:	add    ecx,0x4
10058195:	mov    DWORD PTR [ebp-0x4],ecx
10058198:	jmp    0x100581cf
1005819a:	movzx  edx,BYTE PTR [ebp-0x9]
1005819e:	and    edx,0xc0
100581a4:	cmp    edx,0x40
100581a7:	jne    0x100581b4
100581a9:	mov    eax,DWORD PTR [ebp-0x4]
100581ac:	add    eax,0x1
100581af:	mov    DWORD PTR [ebp-0x4],eax
100581b2:	jmp    0x100581cf
100581b4:	movzx  ecx,BYTE PTR [ebp-0x9]
100581b8:	and    ecx,0xc0
100581be:	cmp    ecx,0x80
100581c4:	jne    0x100581cf
100581c6:	mov    edx,DWORD PTR [ebp-0x4]
100581c9:	add    edx,0x4
100581cc:	mov    DWORD PTR [ebp-0x4],edx
100581cf:	movzx  eax,BYTE PTR [ebp-0xa]
100581d3:	and    eax,0xf
100581d6:	mov    ecx,DWORD PTR [ebp-0x4]
100581d9:	add    ecx,eax
100581db:	mov    DWORD PTR [ebp-0x4],ecx
100581de:	mov    edx,DWORD PTR [ebp-0x4]
100581e1:	push   edx
100581e2:	mov    eax,DWORD PTR [ebp+0x10]
100581e5:	push   eax
100581e6:	mov    ecx,DWORD PTR [ebp+0xc]
100581e9:	push   ecx
100581ea:	call   0x10045420
100581ef:	add    esp,0xc
100581f2:	mov    edx,DWORD PTR [ebp+0x8]
100581f5:	mov    eax,DWORD PTR [edx]
100581f7:	shl    eax,0xc
100581fa:	sar    eax,0x1d
100581fd:	test   eax,eax
100581ff:	je     0x10058229
10058201:	mov    ecx,DWORD PTR [ebp+0x8]
10058204:	mov    edx,DWORD PTR [ecx]
10058206:	shl    edx,0xc
10058209:	sar    edx,0x1d
1005820c:	push   edx
1005820d:	mov    eax,DWORD PTR [ebp-0x8]
10058210:	push   eax
10058211:	mov    ecx,DWORD PTR [ebp+0x10]
10058214:	push   ecx
10058215:	mov    edx,DWORD PTR [ebp+0xc]
10058218:	push   edx
10058219:	mov    ecx,DWORD PTR [ebp-0x10]
1005821c:	call   0x100582d0
10058221:	mov    ecx,DWORD PTR [ebp-0x10]
10058224:	mov    edx,DWORD PTR [ecx+0x8]
10058227:	mov    DWORD PTR [edx],eax
10058229:	mov    eax,DWORD PTR [ebp+0x8]
1005822c:	mov    ecx,DWORD PTR [eax]
1005822e:	shr    ecx,0x14
10058231:	and    ecx,0xf
10058234:	and    ecx,0x4
10058237:	test   ecx,ecx
10058239:	je     0x1005824d
1005823b:	mov    edx,DWORD PTR [ebp-0x10]
1005823e:	mov    eax,DWORD PTR [edx+0xc]
10058241:	mov    ecx,DWORD PTR [eax]
10058243:	neg    ecx
10058245:	mov    edx,DWORD PTR [ebp-0x10]
10058248:	mov    eax,DWORD PTR [edx+0xc]
1005824b:	mov    DWORD PTR [eax],ecx
1005824d:	mov    ecx,DWORD PTR [ebp+0x8]
10058250:	mov    edx,DWORD PTR [ecx]
10058252:	shr    edx,0x14
10058255:	and    edx,0xf
10058258:	and    edx,0x1
1005825b:	test   edx,edx
1005825d:	je     0x1005826b
1005825f:	mov    eax,DWORD PTR [ebp-0x10]
10058262:	mov    ecx,DWORD PTR [eax+0x8]
10058265:	mov    DWORD PTR [ecx],0xffffffff
1005826b:	mov    eax,DWORD PTR [ebp+0x10]
1005826e:	add    eax,DWORD PTR [ebp-0x4]
10058271:	mov    esp,ebp
10058273:	pop    ebp
10058274:	ret    0xc
10058277:	int3   
10058278:	int3   
10058279:	int3   
1005827a:	int3   
1005827b:	int3   
1005827c:	int3   
1005827d:	int3   
1005827e:	int3   
1005827f:	int3   
10058280:	push   ebp
10058281:	mov    ebp,esp
10058283:	push   ecx
10058284:	mov    DWORD PTR [ebp-0x4],ecx
10058287:	mov    eax,DWORD PTR [ebp+0x10]
1005828a:	push   eax
1005828b:	mov    ecx,DWORD PTR [ebp+0xc]
1005828e:	push   ecx
1005828f:	mov    edx,DWORD PTR [ebp+0x8]
10058292:	push   edx
10058293:	mov    ecx,DWORD PTR [ebp-0x4]
10058296:	call   0x100580a0
1005829b:	mov    eax,DWORD PTR [ebp+0x10]
1005829e:	movzx  ecx,BYTE PTR [eax+0x1]
100582a2:	lea    edx,[ecx*8+0x1006baa8]
100582a9:	mov    DWORD PTR [ebp+0x8],edx
100582ac:	mov    eax,DWORD PTR [ebp+0x10]
100582af:	add    eax,0x1
100582b2:	push   eax
100582b3:	mov    ecx,DWORD PTR [ebp+0xc]
100582b6:	add    ecx,0x1
100582b9:	push   ecx
100582ba:	mov    edx,DWORD PTR [ebp+0x8]
100582bd:	push   edx
100582be:	mov    eax,DWORD PTR [ebp+0x8]
100582c1:	mov    ecx,DWORD PTR [ebp-0x4]
100582c4:	call   DWORD PTR [eax+0x4]
100582c7:	mov    esp,ebp
100582c9:	pop    ebp
100582ca:	ret    0xc
100582cd:	int3   
100582ce:	int3   
100582cf:	int3   
100582d0:	push   ebp
100582d1:	mov    ebp,esp
100582d3:	sub    esp,0x20
100582d6:	mov    DWORD PTR [ebp-0x18],ecx
100582d9:	mov    eax,DWORD PTR [ebp+0x10]
100582dc:	sub    eax,DWORD PTR [ebp+0x14]
100582df:	mov    DWORD PTR [ebp-0x10],eax
100582e2:	mov    DWORD PTR [ebp-0x4],0x0
100582e9:	mov    ecx,DWORD PTR [ebp+0x8]
100582ec:	add    ecx,DWORD PTR [ebp+0x14]
100582ef:	mov    DWORD PTR [ebp-0x14],ecx
100582f2:	mov    DWORD PTR [ebp-0xc],0x0
100582f9:	mov    edx,DWORD PTR [ebp-0x10]
100582fc:	mov    DWORD PTR [ebp-0x1c],edx
100582ff:	cmp    DWORD PTR [ebp-0x1c],0x1
10058303:	je     0x10058313
10058305:	cmp    DWORD PTR [ebp-0x1c],0x2
10058309:	je     0x1005832a
1005830b:	cmp    DWORD PTR [ebp-0x1c],0x4
1005830f:	je     0x10058341
10058311:	jmp    0x10058355
10058313:	mov    eax,DWORD PTR [ebp-0x14]
10058316:	movsx  ecx,BYTE PTR [eax]
10058319:	mov    DWORD PTR [ebp-0xc],ecx
1005831c:	mov    edx,DWORD PTR [ebp-0x18]
1005831f:	mov    eax,DWORD PTR [edx+0xc]
10058322:	mov    DWORD PTR [eax],0x3
10058328:	jmp    0x10058355
1005832a:	mov    ecx,DWORD PTR [ebp-0x14]
1005832d:	movsx  edx,WORD PTR [ecx]
10058330:	mov    DWORD PTR [ebp-0xc],edx
10058333:	mov    eax,DWORD PTR [ebp-0x18]
10058336:	mov    ecx,DWORD PTR [eax+0xc]
10058339:	mov    DWORD PTR [ecx],0x2
1005833f:	jmp    0x10058355
10058341:	mov    edx,DWORD PTR [ebp-0x14]
10058344:	mov    eax,DWORD PTR [edx]
10058346:	mov    DWORD PTR [ebp-0xc],eax
10058349:	mov    ecx,DWORD PTR [ebp-0x18]
1005834c:	mov    edx,DWORD PTR [ecx+0xc]
1005834f:	mov    DWORD PTR [edx],0x0
10058355:	mov    eax,DWORD PTR [ebp+0xc]
10058358:	add    eax,DWORD PTR [ebp+0x10]
1005835b:	add    eax,DWORD PTR [ebp-0xc]
1005835e:	mov    DWORD PTR [ebp-0x4],eax
10058361:	mov    ecx,DWORD PTR [ebp+0x8]
10058364:	sub    ecx,DWORD PTR [ebp+0xc]
10058367:	mov    edx,DWORD PTR [ebp-0xc]
1005836a:	sub    edx,ecx
1005836c:	mov    DWORD PTR [ebp-0x8],edx
1005836f:	mov    eax,DWORD PTR [ebp-0x10]
10058372:	mov    DWORD PTR [ebp-0x20],eax
10058375:	cmp    DWORD PTR [ebp-0x20],0x1
10058379:	je     0x10058389
1005837b:	cmp    DWORD PTR [ebp-0x20],0x2
1005837f:	je     0x10058393
10058381:	cmp    DWORD PTR [ebp-0x20],0x4
10058385:	je     0x1005839f
10058387:	jmp    0x100583a7
10058389:	mov    ecx,DWORD PTR [ebp-0x14]
1005838c:	mov    dl,BYTE PTR [ebp-0x8]
1005838f:	mov    BYTE PTR [ecx],dl
10058391:	jmp    0x100583a7
10058393:	mov    eax,DWORD PTR [ebp-0x14]
10058396:	mov    cx,WORD PTR [ebp-0x8]
1005839a:	mov    WORD PTR [eax],cx
1005839d:	jmp    0x100583a7
1005839f:	mov    edx,DWORD PTR [ebp-0x14]
100583a2:	mov    eax,DWORD PTR [ebp-0x8]
100583a5:	mov    DWORD PTR [edx],eax
100583a7:	mov    eax,DWORD PTR [ebp-0x4]
100583aa:	mov    esp,ebp
100583ac:	pop    ebp
100583ad:	ret    0x10
100583b0:	push   ebp
100583b1:	mov    ebp,esp
100583b3:	push   ecx
100583b4:	mov    DWORD PTR [ebp-0x4],ecx
100583b7:	mov    eax,DWORD PTR [ebp+0x10]
100583ba:	add    eax,0x1
100583bd:	mov    esp,ebp
100583bf:	pop    ebp
100583c0:	ret    0xc
100583c3:	int3   
100583c4:	int3   
100583c5:	int3   
100583c6:	int3   
100583c7:	int3   
100583c8:	int3   
100583c9:	int3   
100583ca:	int3   
100583cb:	int3   
100583cc:	int3   
100583cd:	int3   
100583ce:	int3   
100583cf:	int3   
100583d0:	push   ebp
100583d1:	mov    ebp,esp
100583d3:	push   ecx
100583d4:	mov    DWORD PTR [ebp-0x4],ecx
100583d7:	mov    eax,DWORD PTR [ebp+0x10]
100583da:	push   eax
100583db:	mov    ecx,DWORD PTR [ebp+0xc]
100583de:	push   ecx
100583df:	mov    edx,DWORD PTR [ebp+0x8]
100583e2:	push   edx
100583e3:	mov    ecx,DWORD PTR [ebp-0x4]
100583e6:	call   0x100580a0
100583eb:	mov    eax,DWORD PTR [ebp+0x10]
100583ee:	movzx  ecx,BYTE PTR [eax+0x1]
100583f2:	lea    edx,[ecx*8+0x1006c2b0]
100583f9:	mov    DWORD PTR [ebp+0x8],edx
100583fc:	mov    eax,DWORD PTR [ebp+0x10]
100583ff:	add    eax,0x1
10058402:	push   eax
10058403:	mov    ecx,DWORD PTR [ebp+0xc]
10058406:	add    ecx,0x1
10058409:	push   ecx
1005840a:	mov    edx,DWORD PTR [ebp+0x8]
1005840d:	push   edx
1005840e:	mov    eax,DWORD PTR [ebp+0x8]
10058411:	mov    ecx,DWORD PTR [ebp-0x4]
10058414:	call   DWORD PTR [eax+0x4]
10058417:	mov    esp,ebp
10058419:	pop    ebp
1005841a:	ret    0xc
1005841d:	int3   
1005841e:	int3   
1005841f:	int3   
10058420:	push   ebp
10058421:	mov    ebp,esp
10058423:	push   ecx
10058424:	mov    DWORD PTR [ebp-0x4],ecx
10058427:	mov    ecx,DWORD PTR [ebp-0x4]
1005842a:	call   0x10057fc0
1005842f:	mov    eax,DWORD PTR [ebp+0x10]
10058432:	push   eax
10058433:	mov    ecx,DWORD PTR [ebp+0xc]
10058436:	push   ecx
10058437:	mov    edx,DWORD PTR [ebp+0x8]
1005843a:	push   edx
1005843b:	mov    ecx,DWORD PTR [ebp-0x4]
1005843e:	call   0x10058280
10058443:	mov    esp,ebp
10058445:	pop    ebp
10058446:	ret    0xc
10058449:	int3   
1005844a:	int3   
1005844b:	int3   
1005844c:	int3   
1005844d:	int3   
1005844e:	int3   
1005844f:	int3   
10058450:	push   ebp
10058451:	mov    ebp,esp
10058453:	push   ecx
10058454:	mov    DWORD PTR [ebp-0x4],ecx
10058457:	mov    ecx,DWORD PTR [ebp-0x4]
1005845a:	call   0x10058000
1005845f:	mov    eax,DWORD PTR [ebp+0x10]
10058462:	push   eax
10058463:	mov    ecx,DWORD PTR [ebp+0xc]
10058466:	push   ecx
10058467:	mov    edx,DWORD PTR [ebp+0x8]
1005846a:	push   edx
1005846b:	mov    ecx,DWORD PTR [ebp-0x4]
1005846e:	call   0x10058280
10058473:	mov    esp,ebp
10058475:	pop    ebp
10058476:	ret    0xc
10058479:	int3   
1005847a:	int3   
1005847b:	int3   
1005847c:	int3   
1005847d:	int3   
1005847e:	int3   
1005847f:	int3   
10058480:	push   ebp
10058481:	mov    ebp,esp
10058483:	sub    esp,0x14
10058486:	mov    DWORD PTR [ebp-0x14],ecx
10058489:	mov    eax,DWORD PTR [ebp+0x10]
1005848c:	movzx  ecx,BYTE PTR [eax+0x1]
10058490:	and    ecx,0x38
10058493:	test   ecx,ecx
10058495:	jne    0x100584b9
10058497:	mov    DWORD PTR [ebp-0x10],0x5bf6
1005849e:	mov    DWORD PTR [ebp-0xc],0x100580a0
100584a5:	mov    edx,DWORD PTR [ebp+0x10]
100584a8:	push   edx
100584a9:	mov    eax,DWORD PTR [ebp+0xc]
100584ac:	push   eax
100584ad:	lea    ecx,[ebp-0x10]
100584b0:	push   ecx
100584b1:	mov    ecx,DWORD PTR [ebp-0x14]
100584b4:	call   DWORD PTR [ebp-0xc]
100584b7:	jmp    0x100584d9
100584b9:	mov    DWORD PTR [ebp-0x8],0x52f6
100584c0:	mov    DWORD PTR [ebp-0x4],0x100580a0
100584c7:	mov    edx,DWORD PTR [ebp+0x10]
100584ca:	push   edx
100584cb:	mov    eax,DWORD PTR [ebp+0xc]
100584ce:	push   eax
100584cf:	lea    ecx,[ebp-0x8]
100584d2:	push   ecx
100584d3:	mov    ecx,DWORD PTR [ebp-0x14]
100584d6:	call   DWORD PTR [ebp-0x4]
100584d9:	mov    esp,ebp
100584db:	pop    ebp
100584dc:	ret    0xc
100584df:	int3   
100584e0:	push   ebp
100584e1:	mov    ebp,esp
100584e3:	sub    esp,0x14
100584e6:	mov    DWORD PTR [ebp-0x14],ecx
100584e9:	mov    eax,DWORD PTR [ebp+0x10]
100584ec:	movzx  ecx,BYTE PTR [eax+0x1]
100584f0:	and    ecx,0x38
100584f3:	test   ecx,ecx
100584f5:	jne    0x10058519
100584f7:	mov    DWORD PTR [ebp-0x10],0x66f7
100584fe:	mov    DWORD PTR [ebp-0xc],0x100580a0
10058505:	mov    edx,DWORD PTR [ebp+0x10]
10058508:	push   edx
10058509:	mov    eax,DWORD PTR [ebp+0xc]
1005850c:	push   eax
1005850d:	lea    ecx,[ebp-0x10]
10058510:	push   ecx
10058511:	mov    ecx,DWORD PTR [ebp-0x14]
10058514:	call   DWORD PTR [ebp-0xc]
10058517:	jmp    0x10058539
10058519:	mov    DWORD PTR [ebp-0x8],0x52f7
10058520:	mov    DWORD PTR [ebp-0x4],0x100580a0
10058527:	mov    edx,DWORD PTR [ebp+0x10]
1005852a:	push   edx
1005852b:	mov    eax,DWORD PTR [ebp+0xc]
1005852e:	push   eax
1005852f:	lea    ecx,[ebp-0x8]
10058532:	push   ecx
10058533:	mov    ecx,DWORD PTR [ebp-0x14]
10058536:	call   DWORD PTR [ebp-0x4]
10058539:	mov    esp,ebp
1005853b:	pop    ebp
1005853c:	ret    0xc
1005853f:	int3   
10058540:	push   ebp
10058541:	mov    ebp,esp
10058543:	sub    esp,0x10
10058546:	mov    DWORD PTR [ebp-0x10],ecx
10058549:	mov    eax,DWORD PTR [ebp+0x10]
1005854c:	movzx  ecx,BYTE PTR [eax+0x1]
10058550:	cmp    ecx,0x15
10058553:	je     0x10058561
10058555:	mov    edx,DWORD PTR [ebp+0x10]
10058558:	movzx  eax,BYTE PTR [edx+0x1]
1005855c:	cmp    eax,0x25
1005855f:	jne    0x10058579
10058561:	mov    ecx,DWORD PTR [ebp+0x10]
10058564:	mov    edx,DWORD PTR [ecx+0x2]
10058567:	mov    DWORD PTR [ebp-0xc],edx
1005856a:	mov    eax,DWORD PTR [ebp-0x10]
1005856d:	mov    ecx,DWORD PTR [eax+0x8]
10058570:	mov    edx,DWORD PTR [ebp-0xc]
10058573:	mov    eax,DWORD PTR [edx]
10058575:	mov    DWORD PTR [ecx],eax
10058577:	jmp    0x100585c1
10058579:	mov    ecx,DWORD PTR [ebp+0x10]
1005857c:	movzx  edx,BYTE PTR [ecx+0x1]
10058580:	and    edx,0x38
10058583:	cmp    edx,0x10
10058586:	je     0x100585b5
10058588:	mov    eax,DWORD PTR [ebp+0x10]
1005858b:	movzx  ecx,BYTE PTR [eax+0x1]
1005858f:	and    ecx,0x38
10058592:	cmp    ecx,0x18
10058595:	je     0x100585b5
10058597:	mov    edx,DWORD PTR [ebp+0x10]
1005859a:	movzx  eax,BYTE PTR [edx+0x1]
1005859e:	and    eax,0x38
100585a1:	cmp    eax,0x20
100585a4:	je     0x100585b5
100585a6:	mov    ecx,DWORD PTR [ebp+0x10]
100585a9:	movzx  edx,BYTE PTR [ecx+0x1]
100585ad:	and    edx,0x38
100585b0:	cmp    edx,0x28
100585b3:	jne    0x100585c1
100585b5:	mov    eax,DWORD PTR [ebp-0x10]
100585b8:	mov    ecx,DWORD PTR [eax+0x8]
100585bb:	mov    DWORD PTR [ecx],0xffffffff
100585c1:	mov    DWORD PTR [ebp-0x8],0x52ff
100585c8:	mov    DWORD PTR [ebp-0x4],0x100580a0
100585cf:	mov    edx,DWORD PTR [ebp+0x10]
100585d2:	push   edx
100585d3:	mov    eax,DWORD PTR [ebp+0xc]
100585d6:	push   eax
100585d7:	lea    ecx,[ebp-0x8]
100585da:	push   ecx
100585db:	mov    ecx,DWORD PTR [ebp-0x10]
100585de:	call   DWORD PTR [ebp-0x4]
100585e1:	mov    esp,ebp
100585e3:	pop    ebp
100585e4:	ret    0xc
100585e7:	mov    eax,DWORD PTR [esp+0x4]
100585eb:	mov    dx,WORD PTR [esp+0x8]
100585f0:	jmp    0x100585f9
100585f2:	cmp    cx,dx
100585f5:	je     0x10058608
100585f7:	inc    eax
100585f8:	inc    eax
100585f9:	movzx  ecx,WORD PTR [eax]
100585fc:	test   cx,cx
100585ff:	jne    0x100585f2
10058601:	cmp    WORD PTR [eax],dx
10058604:	je     0x10058608
10058606:	xor    eax,eax
10058608:	ret    
10058609:	push   ebp
1005860a:	mov    ebp,esp
1005860c:	sub    esp,0x14
1005860f:	push   ebx
10058610:	push   esi
10058611:	push   edi
10058612:	mov    edi,DWORD PTR [ebp+0x8]
10058615:	xor    ebx,ebx
10058617:	cmp    edi,ebx
10058619:	je     0x1005863c
1005861b:	cmp    DWORD PTR [ebp+0xc],ebx
1005861e:	jbe    0x10058641
10058620:	cmp    edi,ebx
10058622:	je     0x100586e0
10058628:	push   DWORD PTR [ebp+0xc]
1005862b:	push   edi
1005862c:	call   0x10050b1e
10058631:	cmp    eax,DWORD PTR [ebp+0xc]
10058634:	pop    ecx
10058635:	pop    ecx
10058636:	jb     0x1005865f
10058638:	mov    BYTE PTR [edi],bl
1005863a:	jmp    0x10058641
1005863c:	cmp    DWORD PTR [ebp+0xc],ebx
1005863f:	je     0x10058620
10058641:	call   0x10046df5
10058646:	push   0x16
10058648:	pop    esi
10058649:	push   ebx
1005864a:	push   ebx
1005864b:	push   ebx
1005864c:	push   ebx
1005864d:	push   ebx
1005864e:	mov    DWORD PTR [eax],esi
10058650:	call   0x100435cc
10058655:	add    esp,0x14
10058658:	mov    eax,esi
1005865a:	jmp    0x100586e2
1005865f:	push   DWORD PTR [ebp+0x10]
10058662:	lea    ecx,[ebp-0x14]
10058665:	call   0x10045785
1005866a:	mov    esi,edi
1005866c:	cmp    BYTE PTR [esi],bl
1005866e:	je     0x100586d2
10058670:	mov    cl,BYTE PTR [edi]
10058672:	mov    edx,DWORD PTR [ebp-0x10]
10058675:	movzx  eax,cl
10058678:	add    eax,edx
1005867a:	mov    dl,BYTE PTR [eax+0x1d]
1005867d:	test   dl,0x4
10058680:	je     0x100586bb
10058682:	mov    eax,DWORD PTR [ebp-0x10]
10058685:	push   0x1
10058687:	push   DWORD PTR [eax+0x4]
1005868a:	lea    ecx,[ebp-0x4]
1005868d:	push   0x2
1005868f:	push   ecx
10058690:	push   0x2
10058692:	push   edi
10058693:	push   0x100
10058698:	push   DWORD PTR [eax+0xc]
1005869b:	lea    eax,[ebp-0x14]
1005869e:	push   eax
1005869f:	call   0x1004b51c
100586a4:	add    esp,0x24
100586a7:	cmp    eax,ebx
100586a9:	je     0x100586e7
100586ab:	mov    ecx,DWORD PTR [ebp-0x4]
100586ae:	mov    BYTE PTR [esi],cl
100586b0:	inc    esi
100586b1:	inc    edi
100586b2:	cmp    eax,0x1
100586b5:	jle    0x100586cd
100586b7:	mov    BYTE PTR [esi],ch
100586b9:	jmp    0x100586cc
100586bb:	test   dl,0x10
100586be:	je     0x100586c8
100586c0:	mov    al,BYTE PTR [eax+0x11d]
100586c6:	jmp    0x100586ca
100586c8:	mov    al,cl
100586ca:	mov    BYTE PTR [esi],al
100586cc:	inc    esi
100586cd:	inc    edi
100586ce:	cmp    BYTE PTR [edi],bl
100586d0:	jne    0x10058670
100586d2:	cmp    BYTE PTR [ebp-0x8],bl
100586d5:	mov    BYTE PTR [esi],bl
100586d7:	je     0x100586e0
100586d9:	mov    eax,DWORD PTR [ebp-0xc]
100586dc:	and    DWORD PTR [eax+0x70],0xfffffffd
100586e0:	xor    eax,eax
100586e2:	pop    edi
100586e3:	pop    esi
100586e4:	pop    ebx
100586e5:	leave  
100586e6:	ret    
100586e7:	call   0x10046df5
100586ec:	mov    DWORD PTR [eax],0x2a
100586f2:	mov    eax,DWORD PTR [ebp+0x8]
100586f5:	mov    BYTE PTR [eax],bl
100586f7:	call   0x10046df5
100586fc:	cmp    BYTE PTR [ebp-0x8],bl
100586ff:	mov    eax,DWORD PTR [eax]
10058701:	je     0x100586e2
10058703:	mov    ecx,DWORD PTR [ebp-0xc]
10058706:	and    DWORD PTR [ecx+0x70],0xfffffffd
1005870a:	jmp    0x100586e2
1005870c:	push   0x0
1005870e:	push   DWORD PTR [esp+0xc]
10058712:	push   DWORD PTR [esp+0xc]
10058716:	call   0x10058609
1005871b:	add    esp,0xc
1005871e:	ret    
1005871f:	push   ebp
10058720:	mov    ebp,esp
10058722:	sub    esp,0x20
10058725:	push   ebx
10058726:	xor    ebx,ebx
10058728:	cmp    DWORD PTR [ebp+0xc],ebx
1005872b:	jne    0x1005874a
1005872d:	call   0x10046df5
10058732:	push   ebx
10058733:	push   ebx
10058734:	push   ebx
10058735:	push   ebx
10058736:	push   ebx
10058737:	mov    DWORD PTR [eax],0x16
1005873d:	call   0x100435cc
10058742:	add    esp,0x14
10058745:	or     eax,0xffffffff
10058748:	jmp    0x10058797
1005874a:	mov    eax,DWORD PTR [ebp+0x8]
1005874d:	cmp    eax,ebx
1005874f:	je     0x1005872d
10058751:	push   esi
10058752:	mov    DWORD PTR [ebp-0x18],eax
10058755:	mov    DWORD PTR [ebp-0x20],eax
10058758:	lea    eax,[ebp+0x10]
1005875b:	push   eax
1005875c:	push   ebx
1005875d:	push   DWORD PTR [ebp+0xc]
10058760:	lea    eax,[ebp-0x20]
10058763:	push   eax
10058764:	mov    DWORD PTR [ebp-0x1c],0x7fffffff
1005876b:	mov    DWORD PTR [ebp-0x14],0x42
10058772:	call   0x1004d6b8
10058777:	add    esp,0x10
1005877a:	dec    DWORD PTR [ebp-0x1c]
1005877d:	mov    esi,eax
1005877f:	js     0x10058788
10058781:	mov    eax,DWORD PTR [ebp-0x20]
10058784:	mov    BYTE PTR [eax],bl
10058786:	jmp    0x10058794
10058788:	lea    eax,[ebp-0x20]
1005878b:	push   eax
1005878c:	push   ebx
1005878d:	call   0x10048a6d
10058792:	pop    ecx
10058793:	pop    ecx
10058794:	mov    eax,esi
10058796:	pop    esi
10058797:	pop    ebx
10058798:	leave  
10058799:	ret    
1005879a:	push   ebp
1005879b:	mov    ebp,esp
1005879d:	sub    esp,0x1c
100587a0:	mov    edx,DWORD PTR [ebp+0x10]
100587a3:	push   esi
100587a4:	mov    esi,DWORD PTR [ebp+0x8]
100587a7:	push   0xfffffffe
100587a9:	pop    eax
100587aa:	cmp    esi,eax
100587ac:	mov    DWORD PTR [ebp-0x14],eax
100587af:	mov    DWORD PTR [ebp-0x1c],edx
100587b2:	jne    0x100587cf
100587b4:	call   0x10046e08
100587b9:	and    DWORD PTR [eax],0x0
100587bc:	call   0x10046df5
100587c1:	mov    DWORD PTR [eax],0x9
100587c7:	or     eax,0xffffffff
100587ca:	jmp    0x10058d39
100587cf:	push   edi
100587d0:	xor    edi,edi
100587d2:	cmp    esi,edi
100587d4:	jl     0x100587de
100587d6:	cmp    esi,DWORD PTR ds:0x10082464
100587dc:	jb     0x10058805
100587de:	call   0x10046e08
100587e3:	mov    DWORD PTR [eax],edi
100587e5:	call   0x10046df5
100587ea:	push   edi
100587eb:	push   edi
100587ec:	push   edi
100587ed:	push   edi
100587ee:	push   edi
100587ef:	mov    DWORD PTR [eax],0x9
100587f5:	call   0x100435cc
100587fa:	add    esp,0x14
100587fd:	or     eax,0xffffffff
10058800:	jmp    0x10058d38
10058805:	mov    eax,esi
10058807:	and    esi,0x1f
1005880a:	imul   esi,esi,0x28
1005880d:	sar    eax,0x5
10058810:	push   ebx
10058811:	lea    ebx,[eax*4+0x10082480]
10058818:	mov    eax,DWORD PTR [ebx]
1005881a:	add    eax,esi
1005881c:	mov    cl,BYTE PTR [eax+0x4]
1005881f:	test   cl,0x1
10058822:	jne    0x1005883b
10058824:	call   0x10046e08
10058829:	mov    DWORD PTR [eax],edi
1005882b:	call   0x10046df5
10058830:	mov    DWORD PTR [eax],0x9
10058836:	jmp    0x10058982
1005883b:	cmp    edx,edi
1005883d:	mov    DWORD PTR [ebp-0x10],edi
10058840:	je     0x10058d35
10058846:	test   cl,0x2
10058849:	jne    0x10058d35
1005884f:	mov    ecx,DWORD PTR [ebp+0xc]
10058852:	cmp    ecx,edi
10058854:	je     0x10058970
1005885a:	mov    al,BYTE PTR [eax+0x24]
1005885d:	add    al,al
1005885f:	sar    al,1
10058861:	mov    BYTE PTR [ebp-0x2],al
10058864:	movsx  eax,al
10058867:	dec    eax
10058868:	je     0x10058968
1005886e:	dec    eax
1005886f:	jne    0x10058883
10058871:	mov    eax,edx
10058873:	not    eax
10058875:	test   al,0x1
10058877:	je     0x10058970
1005887d:	and    edx,0xfffffffe
10058880:	mov    DWORD PTR [ebp+0x10],edx
10058883:	mov    DWORD PTR [ebp-0xc],ecx
10058886:	mov    ecx,DWORD PTR [ebx]
10058888:	mov    eax,DWORD PTR [ebp-0xc]
1005888b:	lea    edi,[esi+ecx*1]
1005888e:	test   BYTE PTR [edi+0x4],0x48
10058892:	je     0x1005890a
10058894:	mov    cl,BYTE PTR [edi+0x5]
10058897:	cmp    cl,0xa
1005889a:	je     0x1005890a
1005889c:	xor    edx,edx
1005889e:	cmp    DWORD PTR [ebp+0x10],edx
100588a1:	je     0x1005890a
100588a3:	mov    BYTE PTR [eax],cl
100588a5:	mov    ecx,DWORD PTR [ebx]
100588a7:	inc    eax
100588a8:	dec    DWORD PTR [ebp+0x10]
100588ab:	cmp    BYTE PTR [ebp-0x2],dl
100588ae:	mov    DWORD PTR [ebp-0x10],0x1
100588b5:	mov    BYTE PTR [esi+ecx*1+0x5],0xa
100588ba:	je     0x1005890a
100588bc:	mov    ecx,DWORD PTR [ebx]
100588be:	mov    cl,BYTE PTR [esi+ecx*1+0x25]
100588c2:	cmp    cl,0xa
100588c5:	je     0x1005890a
100588c7:	cmp    DWORD PTR [ebp+0x10],edx
100588ca:	je     0x1005890a
100588cc:	mov    BYTE PTR [eax],cl
100588ce:	mov    ecx,DWORD PTR [ebx]
100588d0:	inc    eax
100588d1:	dec    DWORD PTR [ebp+0x10]
100588d4:	cmp    BYTE PTR [ebp-0x2],0x1
100588d8:	mov    DWORD PTR [ebp-0x10],0x2
100588df:	mov    BYTE PTR [esi+ecx*1+0x25],0xa
100588e4:	jne    0x1005890a
100588e6:	mov    ecx,DWORD PTR [ebx]
100588e8:	mov    cl,BYTE PTR [esi+ecx*1+0x26]
100588ec:	cmp    cl,0xa
100588ef:	je     0x1005890a
100588f1:	cmp    DWORD PTR [ebp+0x10],edx
100588f4:	je     0x1005890a
100588f6:	mov    BYTE PTR [eax],cl
100588f8:	mov    ecx,DWORD PTR [ebx]
100588fa:	inc    eax
100588fb:	dec    DWORD PTR [ebp+0x10]
100588fe:	mov    DWORD PTR [ebp-0x10],0x3
10058905:	mov    BYTE PTR [esi+ecx*1+0x26],0xa
1005890a:	push   0x0
1005890c:	lea    ecx,[ebp-0x18]
1005890f:	push   ecx
10058910:	push   DWORD PTR [ebp+0x10]
10058913:	push   eax
10058914:	mov    eax,DWORD PTR [ebx]
10058916:	push   DWORD PTR [esi+eax*1]
10058919:	call   DWORD PTR ds:0x100660d4
1005891f:	test   eax,eax
10058921:	je     0x10058cff
10058927:	mov    edi,DWORD PTR [ebp-0x18]
1005892a:	test   edi,edi
1005892c:	jl     0x10058cff
10058932:	cmp    edi,DWORD PTR [ebp+0x10]
10058935:	ja     0x10058cff
1005893b:	mov    eax,DWORD PTR [ebx]
1005893d:	add    DWORD PTR [ebp-0x10],edi
10058940:	lea    eax,[esi+eax*1+0x4]
10058944:	test   BYTE PTR [eax],0x80
10058947:	je     0x10058b9f
1005894d:	cmp    BYTE PTR [ebp-0x2],0x2
10058951:	je     0x10058bc9
10058957:	test   edi,edi
10058959:	je     0x100589d4
1005895b:	mov    ecx,DWORD PTR [ebp-0xc]
1005895e:	cmp    BYTE PTR [ecx],0xa
10058961:	jne    0x100589d4
10058963:	or     BYTE PTR [eax],0x4
10058966:	jmp    0x100589d7
10058968:	mov    eax,edx
1005896a:	not    eax
1005896c:	test   al,0x1
1005896e:	jne    0x10058991
10058970:	call   0x10046e08
10058975:	mov    DWORD PTR [eax],edi
10058977:	call   0x10046df5
1005897c:	mov    DWORD PTR [eax],0x16
10058982:	push   edi
10058983:	push   edi
10058984:	push   edi
10058985:	push   edi
10058986:	push   edi
10058987:	call   0x100435cc
1005898c:	add    esp,0x14
1005898f:	jmp    0x100589cc
10058991:	mov    eax,edx
10058993:	push   0x4
10058995:	pop    ecx
10058996:	shr    eax,1
10058998:	cmp    eax,ecx
1005899a:	mov    DWORD PTR [ebp+0x10],ecx
1005899d:	jb     0x100589a2
1005899f:	mov    DWORD PTR [ebp+0x10],eax
100589a2:	push   DWORD PTR [ebp+0x10]
100589a5:	call   0x100476c2
100589aa:	cmp    eax,edi
100589ac:	pop    ecx
100589ad:	mov    DWORD PTR [ebp-0xc],eax
100589b0:	jne    0x10058886
100589b6:	call   0x10046df5
100589bb:	mov    DWORD PTR [eax],0xc
100589c1:	call   0x10046e08
100589c6:	mov    DWORD PTR [eax],0x8
100589cc:	or     eax,0xffffffff
100589cf:	jmp    0x10058d37
100589d4:	and    BYTE PTR [eax],0xfb
100589d7:	mov    edi,DWORD PTR [ebp-0xc]
100589da:	mov    eax,DWORD PTR [ebp-0x10]
100589dd:	add    eax,edi
100589df:	cmp    edi,eax
100589e1:	mov    DWORD PTR [ebp+0x10],edi
100589e4:	mov    DWORD PTR [ebp-0x10],eax
100589e7:	jae    0x10058abd
100589ed:	mov    ecx,DWORD PTR [ebp+0x10]
100589f0:	mov    al,BYTE PTR [ecx]
100589f2:	cmp    al,0x1a
100589f4:	je     0x10058aa8
100589fa:	cmp    al,0xd
100589fc:	je     0x10058a0a
100589fe:	mov    BYTE PTR [edi],al
10058a00:	inc    edi
10058a01:	inc    ecx
10058a02:	mov    DWORD PTR [ebp+0x10],ecx
10058a05:	jmp    0x10058a9a
10058a0a:	mov    eax,DWORD PTR [ebp-0x10]
10058a0d:	dec    eax
10058a0e:	cmp    ecx,eax
10058a10:	jae    0x10058a29
10058a12:	lea    eax,[ecx+0x1]
10058a15:	cmp    BYTE PTR [eax],0xa
10058a18:	jne    0x10058a24
10058a1a:	inc    ecx
10058a1b:	inc    ecx
10058a1c:	mov    DWORD PTR [ebp+0x10],ecx
10058a1f:	mov    BYTE PTR [edi],0xa
10058a22:	jmp    0x10058a99
10058a24:	mov    DWORD PTR [ebp+0x10],eax
10058a27:	jmp    0x10058a96
10058a29:	inc    DWORD PTR [ebp+0x10]
10058a2c:	push   0x0
10058a2e:	lea    eax,[ebp-0x18]
10058a31:	push   eax
10058a32:	push   0x1
10058a34:	lea    eax,[ebp-0x1]
10058a37:	push   eax
10058a38:	mov    eax,DWORD PTR [ebx]
10058a3a:	push   DWORD PTR [esi+eax*1]
10058a3d:	call   DWORD PTR ds:0x100660d4
10058a43:	test   eax,eax
10058a45:	jne    0x10058a51
10058a47:	call   DWORD PTR ds:0x100660cc
10058a4d:	test   eax,eax
10058a4f:	jne    0x10058a96
10058a51:	cmp    DWORD PTR [ebp-0x18],0x0
10058a55:	je     0x10058a96
10058a57:	mov    eax,DWORD PTR [ebx]
10058a59:	test   BYTE PTR [esi+eax*1+0x4],0x48
10058a5e:	je     0x10058a74
10058a60:	cmp    BYTE PTR [ebp-0x1],0xa
10058a64:	je     0x10058a1f
10058a66:	mov    BYTE PTR [edi],0xd
10058a69:	mov    eax,DWORD PTR [ebx]
10058a6b:	mov    cl,BYTE PTR [ebp-0x1]
10058a6e:	mov    BYTE PTR [esi+eax*1+0x5],cl
10058a72:	jmp    0x10058a99
10058a74:	cmp    edi,DWORD PTR [ebp-0xc]
10058a77:	jne    0x10058a7f
10058a79:	cmp    BYTE PTR [ebp-0x1],0xa
10058a7d:	je     0x10058a1f
10058a7f:	push   0x1
10058a81:	push   0xffffffff
10058a83:	push   0xffffffff
10058a85:	push   DWORD PTR [ebp+0x8]
10058a88:	call   0x1004c9b1
10058a8d:	add    esp,0x10
10058a90:	cmp    BYTE PTR [ebp-0x1],0xa
10058a94:	je     0x10058a9a
10058a96:	mov    BYTE PTR [edi],0xd
10058a99:	inc    edi
10058a9a:	mov    eax,DWORD PTR [ebp-0x10]
10058a9d:	cmp    DWORD PTR [ebp+0x10],eax
10058aa0:	jb     0x100589ed
10058aa6:	jmp    0x10058abd
10058aa8:	mov    eax,DWORD PTR [ebx]
10058aaa:	lea    eax,[esi+eax*1+0x4]
10058aae:	test   BYTE PTR [eax],0x40
10058ab1:	jne    0x10058ab8
10058ab3:	or     BYTE PTR [eax],0x2
10058ab6:	jmp    0x10058abd
10058ab8:	mov    al,BYTE PTR [ecx]
10058aba:	mov    BYTE PTR [edi],al
10058abc:	inc    edi
10058abd:	mov    eax,edi
10058abf:	sub    eax,DWORD PTR [ebp-0xc]
10058ac2:	cmp    BYTE PTR [ebp-0x2],0x1
10058ac6:	mov    DWORD PTR [ebp-0x10],eax
10058ac9:	jne    0x10058b9f
10058acf:	test   eax,eax
10058ad1:	je     0x10058b9f
10058ad7:	dec    edi
10058ad8:	mov    cl,BYTE PTR [edi]
10058ada:	test   cl,cl
10058adc:	js     0x10058ae4
10058ade:	inc    edi
10058adf:	jmp    0x10058b6a
10058ae4:	xor    eax,eax
10058ae6:	inc    eax
10058ae7:	movzx  ecx,cl
10058aea:	jmp    0x10058afb
10058aec:	cmp    eax,0x4
10058aef:	jg     0x10058b04
10058af1:	cmp    edi,DWORD PTR [ebp-0xc]
10058af4:	jb     0x10058b04
10058af6:	dec    edi
10058af7:	movzx  ecx,BYTE PTR [edi]
10058afa:	inc    eax
10058afb:	cmp    BYTE PTR [ecx+0x1007f0a0],0x0
10058b02:	je     0x10058aec
10058b04:	mov    dl,BYTE PTR [edi]
10058b06:	movzx  ecx,dl
10058b09:	movsx  ecx,BYTE PTR [ecx+0x1007f0a0]
10058b10:	test   ecx,ecx
10058b12:	jne    0x10058b21
10058b14:	call   0x10046df5
10058b19:	mov    DWORD PTR [eax],0x2a
10058b1f:	jmp    0x10058b9b
10058b21:	inc    ecx
10058b22:	cmp    ecx,eax
10058b24:	jne    0x10058b2a
10058b26:	add    edi,eax
10058b28:	jmp    0x10058b6a
10058b2a:	mov    ecx,DWORD PTR [ebx]
10058b2c:	add    ecx,esi
10058b2e:	test   BYTE PTR [ecx+0x4],0x48
10058b32:	je     0x10058b58
10058b34:	inc    edi
10058b35:	cmp    eax,0x2
10058b38:	mov    BYTE PTR [ecx+0x5],dl
10058b3b:	jl     0x10058b46
10058b3d:	mov    dl,BYTE PTR [edi]
10058b3f:	mov    ecx,DWORD PTR [ebx]
10058b41:	mov    BYTE PTR [esi+ecx*1+0x25],dl
10058b45:	inc    edi
10058b46:	cmp    eax,0x3
10058b49:	jne    0x10058b54
10058b4b:	mov    dl,BYTE PTR [edi]
10058b4d:	mov    ecx,DWORD PTR [ebx]
10058b4f:	mov    BYTE PTR [esi+ecx*1+0x26],dl
10058b53:	inc    edi
10058b54:	sub    edi,eax
10058b56:	jmp    0x10058b6a
10058b58:	neg    eax
10058b5a:	cdq    
10058b5b:	push   0x1
10058b5d:	push   edx
10058b5e:	push   eax
10058b5f:	push   DWORD PTR [ebp+0x8]
10058b62:	call   0x1004c9b1
10058b67:	add    esp,0x10
10058b6a:	mov    eax,DWORD PTR [ebp-0x1c]
10058b6d:	sub    edi,DWORD PTR [ebp-0xc]
10058b70:	shr    eax,1
10058b72:	push   eax
10058b73:	push   DWORD PTR [ebp+0xc]
10058b76:	push   edi
10058b77:	push   DWORD PTR [ebp-0xc]
10058b7a:	push   0x0
10058b7c:	push   0xfde9
10058b81:	call   DWORD PTR ds:0x1006608c
10058b87:	test   eax,eax
10058b89:	mov    DWORD PTR [ebp-0x10],eax
10058b8c:	jne    0x10058bc2
10058b8e:	call   DWORD PTR ds:0x100660cc
10058b94:	push   eax
10058b95:	call   0x10046e1b
10058b9a:	pop    ecx
10058b9b:	or     DWORD PTR [ebp-0x14],0xffffffff
10058b9f:	mov    eax,DWORD PTR [ebp-0xc]
10058ba2:	cmp    eax,DWORD PTR [ebp+0xc]
10058ba5:	je     0x10058bae
10058ba7:	push   eax
10058ba8:	call   0x10043748
10058bad:	pop    ecx
10058bae:	mov    eax,DWORD PTR [ebp-0x14]
10058bb1:	cmp    eax,0xfffffffe
10058bb4:	jne    0x10058d37
10058bba:	mov    eax,DWORD PTR [ebp-0x10]
10058bbd:	jmp    0x10058d37
10058bc2:	add    eax,eax
10058bc4:	mov    DWORD PTR [ebp-0x10],eax
10058bc7:	jmp    0x10058b9f
10058bc9:	test   edi,edi
10058bcb:	je     0x10058bdb
10058bcd:	mov    ecx,DWORD PTR [ebp-0xc]
10058bd0:	cmp    WORD PTR [ecx],0xa
10058bd4:	jne    0x10058bdb
10058bd6:	or     BYTE PTR [eax],0x4
10058bd9:	jmp    0x10058bde
10058bdb:	and    BYTE PTR [eax],0xfb
10058bde:	mov    edi,DWORD PTR [ebp-0xc]
10058be1:	mov    eax,DWORD PTR [ebp-0x10]
10058be4:	add    eax,edi
10058be6:	cmp    edi,eax
10058be8:	mov    DWORD PTR [ebp+0x10],edi
10058beb:	mov    DWORD PTR [ebp-0x10],eax
10058bee:	jae    0x10058cf4
10058bf4:	mov    eax,DWORD PTR [ebp+0x10]
10058bf7:	movzx  ecx,WORD PTR [eax]
10058bfa:	cmp    cx,0x1a
10058bfe:	je     0x10058cdc
10058c04:	cmp    cx,0xd
10058c08:	je     0x10058c19
10058c0a:	mov    WORD PTR [edi],cx
10058c0d:	inc    edi
10058c0e:	inc    edi
10058c0f:	inc    eax
10058c10:	inc    eax
10058c11:	mov    DWORD PTR [ebp+0x10],eax
10058c14:	jmp    0x10058cce
10058c19:	mov    ecx,DWORD PTR [ebp-0x10]
10058c1c:	add    ecx,0xfffffffe
10058c1f:	cmp    eax,ecx
10058c21:	jae    0x10058c44
10058c23:	lea    ecx,[eax+0x2]
10058c26:	cmp    WORD PTR [ecx],0xa
10058c2a:	jne    0x10058c3c
10058c2c:	add    eax,0x4
10058c2f:	mov    DWORD PTR [ebp+0x10],eax
10058c32:	mov    WORD PTR [edi],0xa
10058c37:	jmp    0x10058ccc
10058c3c:	mov    DWORD PTR [ebp+0x10],ecx
10058c3f:	jmp    0x10058cc7
10058c44:	add    DWORD PTR [ebp+0x10],0x2
10058c48:	push   0x0
10058c4a:	lea    eax,[ebp-0x18]
10058c4d:	push   eax
10058c4e:	push   0x2
10058c50:	lea    eax,[ebp-0x8]
10058c53:	push   eax
10058c54:	mov    eax,DWORD PTR [ebx]
10058c56:	push   DWORD PTR [esi+eax*1]
10058c59:	call   DWORD PTR ds:0x100660d4
10058c5f:	test   eax,eax
10058c61:	jne    0x10058c6d
10058c63:	call   DWORD PTR ds:0x100660cc
10058c69:	test   eax,eax
10058c6b:	jne    0x10058cc7
10058c6d:	cmp    DWORD PTR [ebp-0x18],0x0
10058c71:	je     0x10058cc7
10058c73:	mov    eax,DWORD PTR [ebx]
10058c75:	test   BYTE PTR [esi+eax*1+0x4],0x48
10058c7a:	je     0x10058ca3
10058c7c:	cmp    WORD PTR [ebp-0x8],0xa
10058c81:	je     0x10058c32
10058c83:	mov    WORD PTR [edi],0xd
10058c88:	mov    eax,DWORD PTR [ebx]
10058c8a:	mov    cl,BYTE PTR [ebp-0x8]
10058c8d:	mov    BYTE PTR [esi+eax*1+0x5],cl
10058c91:	mov    eax,DWORD PTR [ebx]
10058c93:	mov    cl,BYTE PTR [ebp-0x7]
10058c96:	mov    BYTE PTR [esi+eax*1+0x25],cl
10058c9a:	mov    eax,DWORD PTR [ebx]
10058c9c:	mov    BYTE PTR [esi+eax*1+0x26],0xa
10058ca1:	jmp    0x10058ccc
10058ca3:	cmp    edi,DWORD PTR [ebp-0xc]
10058ca6:	jne    0x10058caf
10058ca8:	cmp    WORD PTR [ebp-0x8],0xa
10058cad:	je     0x10058c32
10058caf:	push   0x1
10058cb1:	push   0xffffffff
10058cb3:	push   0xfffffffe
10058cb5:	push   DWORD PTR [ebp+0x8]
10058cb8:	call   0x1004c9b1
10058cbd:	add    esp,0x10
10058cc0:	cmp    WORD PTR [ebp-0x8],0xa
10058cc5:	je     0x10058cce
10058cc7:	mov    WORD PTR [edi],0xd
10058ccc:	inc    edi
10058ccd:	inc    edi
10058cce:	mov    eax,DWORD PTR [ebp-0x10]
10058cd1:	cmp    DWORD PTR [ebp+0x10],eax
10058cd4:	jb     0x10058bf4
10058cda:	jmp    0x10058cf4
10058cdc:	mov    ecx,DWORD PTR [ebx]
10058cde:	lea    esi,[esi+ecx*1+0x4]
10058ce2:	test   BYTE PTR [esi],0x40
10058ce5:	jne    0x10058cec
10058ce7:	or     BYTE PTR [esi],0x2
10058cea:	jmp    0x10058cf4
10058cec:	mov    ax,WORD PTR [eax]
10058cef:	mov    WORD PTR [edi],ax
10058cf2:	inc    edi
10058cf3:	inc    edi
10058cf4:	sub    edi,DWORD PTR [ebp-0xc]
10058cf7:	mov    DWORD PTR [ebp-0x10],edi
10058cfa:	jmp    0x10058b9f
10058cff:	call   DWORD PTR ds:0x100660cc
10058d05:	push   0x5
10058d07:	pop    esi
10058d08:	cmp    eax,esi
10058d0a:	jne    0x10058d23
10058d0c:	call   0x10046df5
10058d11:	mov    DWORD PTR [eax],0x9
10058d17:	call   0x10046e08
10058d1c:	mov    DWORD PTR [eax],esi
10058d1e:	jmp    0x10058b9b
10058d23:	cmp    eax,0x6d
10058d26:	jne    0x10058b94
10058d2c:	and    DWORD PTR [ebp-0x14],0x0
10058d30:	jmp    0x10058b9f
10058d35:	xor    eax,eax
10058d37:	pop    ebx
10058d38:	pop    edi
10058d39:	pop    esi
10058d3a:	leave  
10058d3b:	ret    
10058d3c:	push   0x10
10058d3e:	push   0x10074b40
10058d43:	call   0x10046f34
10058d48:	mov    eax,DWORD PTR [ebp+0x8]
10058d4b:	cmp    eax,0xfffffffe
10058d4e:	jne    0x10058d6b
10058d50:	call   0x10046e08
10058d55:	and    DWORD PTR [eax],0x0
10058d58:	call   0x10046df5
10058d5d:	mov    DWORD PTR [eax],0x9
10058d63:	or     eax,0xffffffff
10058d66:	jmp    0x10058e08
10058d6b:	xor    edi,edi
10058d6d:	cmp    eax,edi
10058d6f:	jl     0x10058d79
10058d71:	cmp    eax,DWORD PTR ds:0x10082464
10058d77:	jb     0x10058d9a
10058d79:	call   0x10046e08
10058d7e:	mov    DWORD PTR [eax],edi
10058d80:	call   0x10046df5
10058d85:	mov    DWORD PTR [eax],0x9
10058d8b:	push   edi
10058d8c:	push   edi
10058d8d:	push   edi
10058d8e:	push   edi
10058d8f:	push   edi
10058d90:	call   0x100435cc
10058d95:	add    esp,0x14
10058d98:	jmp    0x10058d63
10058d9a:	mov    ecx,eax
10058d9c:	sar    ecx,0x5
10058d9f:	lea    ebx,[ecx*4+0x10082480]
10058da6:	mov    esi,eax
10058da8:	and    esi,0x1f
10058dab:	imul   esi,esi,0x28
10058dae:	mov    ecx,DWORD PTR [ebx]
10058db0:	movzx  ecx,BYTE PTR [ecx+esi*1+0x4]
10058db5:	and    ecx,0x1
10058db8:	je     0x10058d79
10058dba:	push   eax
10058dbb:	call   0x1004fc70
10058dc0:	pop    ecx
10058dc1:	mov    DWORD PTR [ebp-0x4],edi
10058dc4:	mov    eax,DWORD PTR [ebx]
10058dc6:	test   BYTE PTR [eax+esi*1+0x4],0x1
10058dcb:	je     0x10058de3
10058dcd:	push   DWORD PTR [ebp+0x10]
10058dd0:	push   DWORD PTR [ebp+0xc]
10058dd3:	push   DWORD PTR [ebp+0x8]
10058dd6:	call   0x1005879a
10058ddb:	add    esp,0xc
10058dde:	mov    DWORD PTR [ebp-0x1c],eax
10058de1:	jmp    0x10058df9
10058de3:	call   0x10046df5
10058de8:	mov    DWORD PTR [eax],0x9
10058dee:	call   0x10046e08
10058df3:	mov    DWORD PTR [eax],edi
10058df5:	or     DWORD PTR [ebp-0x1c],0xffffffff
10058df9:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10058e00:	call   0x10058e0e
10058e05:	mov    eax,DWORD PTR [ebp-0x1c]
10058e08:	call   0x10046f79
10058e0d:	ret    
10058e0e:	push   DWORD PTR [ebp+0x8]
10058e11:	call   0x1004fd10
10058e16:	pop    ecx
10058e17:	ret    
10058e18:	push   0xc
10058e1a:	push   0x10074b60
10058e1f:	call   0x10046f34
10058e24:	xor    ebx,ebx
10058e26:	mov    DWORD PTR [ebp-0x1c],ebx
10058e29:	xor    eax,eax
10058e2b:	mov    edi,DWORD PTR [ebp+0x8]
10058e2e:	cmp    edi,ebx
10058e30:	setne  al
10058e33:	cmp    eax,ebx
10058e35:	jne    0x10058e53
10058e37:	call   0x10046df5
10058e3c:	mov    DWORD PTR [eax],0x16
10058e42:	push   ebx
10058e43:	push   ebx
10058e44:	push   ebx
10058e45:	push   ebx
10058e46:	push   ebx
10058e47:	call   0x100435cc
10058e4c:	add    esp,0x14
10058e4f:	xor    eax,eax
10058e51:	jmp    0x10058ecc
10058e53:	xor    eax,eax
10058e55:	mov    esi,DWORD PTR [ebp+0xc]
10058e58:	cmp    esi,ebx
10058e5a:	setne  al
10058e5d:	cmp    eax,ebx
10058e5f:	je     0x10058e37
10058e61:	xor    eax,eax
10058e63:	cmp    BYTE PTR [esi],bl
10058e65:	setne  al
10058e68:	cmp    eax,ebx
10058e6a:	je     0x10058e37
10058e6c:	call   0x1005a86b
10058e71:	mov    DWORD PTR [ebp+0x8],eax
10058e74:	cmp    eax,ebx
10058e76:	jne    0x10058e85
10058e78:	call   0x10046df5
10058e7d:	mov    DWORD PTR [eax],0x18
10058e83:	jmp    0x10058e4f
10058e85:	mov    DWORD PTR [ebp-0x4],ebx
10058e88:	cmp    BYTE PTR [edi],bl
10058e8a:	jne    0x10058eac
10058e8c:	call   0x10046df5
10058e91:	mov    DWORD PTR [eax],0x16
10058e97:	push   0xfffffffe
10058e99:	lea    eax,[ebp-0x10]
10058e9c:	push   eax
10058e9d:	push   0x1007e030
10058ea2:	call   0x1004c3bc
10058ea7:	add    esp,0xc
10058eaa:	jmp    0x10058e4f
10058eac:	push   eax
10058ead:	push   DWORD PTR [ebp+0x10]
10058eb0:	push   esi
10058eb1:	push   edi
10058eb2:	call   0x1005a5c9
10058eb7:	add    esp,0x10
10058eba:	mov    DWORD PTR [ebp-0x1c],eax
10058ebd:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10058ec4:	call   0x10058ed2
10058ec9:	mov    eax,DWORD PTR [ebp-0x1c]
10058ecc:	call   0x10046f79
10058ed1:	ret    
10058ed2:	push   DWORD PTR [ebp+0x8]
10058ed5:	call   0x1004d3ba
10058eda:	pop    ecx
10058edb:	ret    
10058edc:	push   0x40
10058ede:	push   DWORD PTR [esp+0xc]
10058ee2:	push   DWORD PTR [esp+0xc]
10058ee6:	call   0x10058e18
10058eeb:	add    esp,0xc
10058eee:	ret    
10058eef:	push   ebp
10058ef0:	mov    ebp,esp
10058ef2:	sub    esp,0x18
10058ef5:	push   ebx
10058ef6:	push   DWORD PTR [ebp+0xc]
10058ef9:	lea    ecx,[ebp-0x18]
10058efc:	call   0x10045785
10058f01:	mov    ebx,DWORD PTR [ebp+0x8]
10058f04:	cmp    ebx,0x100
10058f0a:	jae    0x10058f60
10058f0c:	mov    ecx,DWORD PTR [ebp-0x18]
10058f0f:	cmp    DWORD PTR [ecx+0xac],0x1
10058f16:	jle    0x10058f2c
10058f18:	lea    eax,[ebp-0x18]
10058f1b:	push   eax
10058f1c:	push   0x2
10058f1e:	push   ebx
10058f1f:	call   0x1004b5a3
10058f24:	mov    ecx,DWORD PTR [ebp-0x18]
10058f27:	add    esp,0xc
10058f2a:	jmp    0x10058f39
10058f2c:	mov    eax,DWORD PTR [ecx+0xc8]
10058f32:	movzx  eax,BYTE PTR [eax+ebx*2]
10058f36:	and    eax,0x2
10058f39:	test   eax,eax
10058f3b:	je     0x10058f4c
10058f3d:	mov    eax,DWORD PTR [ecx+0xd0]
10058f43:	movzx  eax,BYTE PTR [eax+ebx*1]
10058f47:	jmp    0x10058ff7
10058f4c:	cmp    BYTE PTR [ebp-0xc],0x0
10058f50:	je     0x10058f59
10058f52:	mov    eax,DWORD PTR [ebp-0x10]
10058f55:	and    DWORD PTR [eax+0x70],0xfffffffd
10058f59:	mov    eax,ebx
10058f5b:	jmp    0x10059004
10058f60:	mov    eax,DWORD PTR [ebp-0x18]
10058f63:	cmp    DWORD PTR [eax+0xac],0x1
10058f6a:	jle    0x10058f9d
10058f6c:	mov    DWORD PTR [ebp+0x8],ebx
10058f6f:	sar    DWORD PTR [ebp+0x8],0x8
10058f73:	lea    eax,[ebp-0x18]
10058f76:	push   eax
10058f77:	mov    eax,DWORD PTR [ebp+0x8]
10058f7a:	and    eax,0xff
10058f7f:	push   eax
10058f80:	call   0x1004b55f
10058f85:	test   eax,eax
10058f87:	pop    ecx
10058f88:	pop    ecx
10058f89:	je     0x10058f9d
10058f8b:	mov    al,BYTE PTR [ebp+0x8]
10058f8e:	push   0x2
10058f90:	mov    BYTE PTR [ebp-0x4],al
10058f93:	mov    BYTE PTR [ebp-0x3],bl
10058f96:	mov    BYTE PTR [ebp-0x2],0x0
10058f9a:	pop    ecx
10058f9b:	jmp    0x10058fb2
10058f9d:	call   0x10046df5
10058fa2:	mov    DWORD PTR [eax],0x2a
10058fa8:	xor    ecx,ecx
10058faa:	mov    BYTE PTR [ebp-0x4],bl
10058fad:	mov    BYTE PTR [ebp-0x3],0x0
10058fb1:	inc    ecx
10058fb2:	mov    eax,DWORD PTR [ebp-0x18]
10058fb5:	push   0x1
10058fb7:	push   DWORD PTR [eax+0x4]
10058fba:	lea    edx,[ebp-0x8]
10058fbd:	push   0x3
10058fbf:	push   edx
10058fc0:	push   ecx
10058fc1:	lea    ecx,[ebp-0x4]
10058fc4:	push   ecx
10058fc5:	push   0x200
10058fca:	push   DWORD PTR [eax+0x14]
10058fcd:	lea    eax,[ebp-0x18]
10058fd0:	push   eax
10058fd1:	call   0x1004b51c
10058fd6:	add    esp,0x24
10058fd9:	test   eax,eax
10058fdb:	je     0x10058f4c
10058fe1:	cmp    eax,0x1
10058fe4:	jne    0x10058fec
10058fe6:	movzx  eax,BYTE PTR [ebp-0x8]
10058fea:	jmp    0x10058ff7
10058fec:	movzx  ecx,BYTE PTR [ebp-0x7]
10058ff0:	xor    eax,eax
10058ff2:	mov    ah,BYTE PTR [ebp-0x8]
10058ff5:	or     eax,ecx
10058ff7:	cmp    BYTE PTR [ebp-0xc],0x0
10058ffb:	je     0x10059004
10058ffd:	mov    ecx,DWORD PTR [ebp-0x10]
10059000:	and    DWORD PTR [ecx+0x70],0xfffffffd
10059004:	pop    ebx
10059005:	leave  
10059006:	ret    
10059007:	cmp    DWORD PTR ds:0x100802c8,0x0
1005900e:	jne    0x10059020
10059010:	mov    eax,DWORD PTR [esp+0x4]
10059014:	lea    ecx,[eax-0x61]
10059017:	cmp    ecx,0x19
1005901a:	ja     0x1005902d
1005901c:	add    eax,0xffffffe0
1005901f:	ret    
10059020:	push   0x0
10059022:	push   DWORD PTR [esp+0x8]
10059026:	call   0x10058eef
1005902b:	pop    ecx
1005902c:	pop    ecx
1005902d:	ret    
1005902e:	push   esi
1005902f:	mov    esi,DWORD PTR [esp+0x8]
10059033:	push   esi
10059034:	call   0x1004fbff
10059039:	cmp    eax,0xffffffff
1005903c:	pop    ecx
1005903d:	jne    0x1005904f
1005903f:	call   0x10046df5
10059044:	mov    DWORD PTR [eax],0x9
1005904a:	or     eax,0xffffffff
1005904d:	pop    esi
1005904e:	ret    
1005904f:	push   edi
10059050:	push   DWORD PTR [esp+0x14]
10059054:	push   0x0
10059056:	push   DWORD PTR [esp+0x18]
1005905a:	push   eax
1005905b:	call   DWORD PTR ds:0x10066224
10059061:	mov    edi,eax
10059063:	cmp    edi,0xffffffff
10059066:	jne    0x10059070
10059068:	call   DWORD PTR ds:0x100660cc
1005906e:	jmp    0x10059072
10059070:	xor    eax,eax
10059072:	test   eax,eax
10059074:	je     0x10059082
10059076:	push   eax
10059077:	call   0x10046e1b
1005907c:	pop    ecx
1005907d:	or     eax,0xffffffff
10059080:	jmp    0x1005909d
10059082:	mov    eax,esi
10059084:	and    esi,0x1f
10059087:	imul   esi,esi,0x28
1005908a:	sar    eax,0x5
1005908d:	mov    eax,DWORD PTR [eax*4+0x10082480]
10059094:	lea    eax,[eax+esi*1+0x4]
10059098:	and    BYTE PTR [eax],0xfd
1005909b:	mov    eax,edi
1005909d:	pop    edi
1005909e:	pop    esi
1005909f:	ret    
100590a0:	push   ebp
100590a1:	mov    ebp,esp
100590a3:	sub    esp,0x14
100590a6:	push   ebx
100590a7:	push   DWORD PTR [ebp+0x10]
100590aa:	lea    ecx,[ebp-0x14]
100590ad:	call   0x10045785
100590b2:	xor    ebx,ebx
100590b4:	cmp    DWORD PTR [ebp+0x8],ebx
100590b7:	jne    0x100590e7
100590b9:	call   0x10046df5
100590be:	push   ebx
100590bf:	push   ebx
100590c0:	push   ebx
100590c1:	push   ebx
100590c2:	push   ebx
100590c3:	mov    DWORD PTR [eax],0x16
100590c9:	call   0x100435cc
100590ce:	add    esp,0x14
100590d1:	cmp    BYTE PTR [ebp-0x8],bl
100590d4:	je     0x100590dd
100590d6:	mov    eax,DWORD PTR [ebp-0xc]
100590d9:	and    DWORD PTR [eax+0x70],0xfffffffd
100590dd:	mov    eax,0x7fffffff
100590e2:	jmp    0x100591a5
100590e7:	push   esi
100590e8:	mov    esi,DWORD PTR [ebp+0xc]
100590eb:	cmp    esi,ebx
100590ed:	jne    0x1005911d
100590ef:	call   0x10046df5
100590f4:	push   ebx
100590f5:	push   ebx
100590f6:	push   ebx
100590f7:	push   ebx
100590f8:	push   ebx
100590f9:	mov    DWORD PTR [eax],0x16
100590ff:	call   0x100435cc
10059104:	add    esp,0x14
10059107:	cmp    BYTE PTR [ebp-0x8],bl
1005910a:	je     0x10059113
1005910c:	mov    eax,DWORD PTR [ebp-0xc]
1005910f:	and    DWORD PTR [eax+0x70],0xfffffffd
10059113:	mov    eax,0x7fffffff
10059118:	jmp    0x100591a4
1005911d:	push   edi
1005911e:	mov    edi,DWORD PTR [ebp-0x10]
10059121:	cmp    DWORD PTR [edi+0x8],ebx
10059124:	jne    0x10059133
10059126:	push   esi
10059127:	push   DWORD PTR [ebp+0x8]
1005912a:	call   0x10047ba0
1005912f:	pop    ecx
10059130:	pop    ecx
10059131:	jmp    0x100591ae
10059133:	mov    eax,DWORD PTR [ebp+0x8]
10059136:	movzx  cx,BYTE PTR [eax]
1005913a:	movzx  ecx,cx
1005913d:	movzx  edx,cl
10059140:	inc    eax
10059141:	test   BYTE PTR [edx+edi*1+0x1d],0x4
10059146:	mov    DWORD PTR [ebp+0x8],eax
10059149:	je     0x10059161
1005914b:	mov    al,BYTE PTR [eax]
1005914d:	cmp    al,bl
1005914f:	jne    0x10059155
10059151:	xor    ecx,ecx
10059153:	jmp    0x10059161
10059155:	xor    edx,edx
10059157:	inc    DWORD PTR [ebp+0x8]
1005915a:	mov    dh,cl
1005915c:	mov    dl,al
1005915e:	movzx  ecx,dx
10059161:	movzx  ax,BYTE PTR [esi]
10059165:	movzx  eax,ax
10059168:	movzx  edx,al
1005916b:	inc    esi
1005916c:	test   BYTE PTR [edx+edi*1+0x1d],0x4
10059171:	je     0x1005918b
10059173:	mov    dl,BYTE PTR [esi]
10059175:	cmp    dl,bl
10059177:	mov    BYTE PTR [ebp-0x1],dl
1005917a:	jne    0x10059180
1005917c:	xor    eax,eax
1005917e:	jmp    0x1005918b
10059180:	xor    edx,edx
10059182:	mov    dh,al
10059184:	inc    esi
10059185:	mov    dl,BYTE PTR [ebp-0x1]
10059188:	movzx  eax,dx
1005918b:	cmp    ax,cx
1005918e:	jne    0x100591a8
10059190:	cmp    cx,bx
10059193:	jne    0x10059133
10059195:	cmp    BYTE PTR [ebp-0x8],bl
10059198:	je     0x100591a1
1005919a:	mov    eax,DWORD PTR [ebp-0xc]
1005919d:	and    DWORD PTR [eax+0x70],0xfffffffd
100591a1:	xor    eax,eax
100591a3:	pop    edi
100591a4:	pop    esi
100591a5:	pop    ebx
100591a6:	leave  
100591a7:	ret    
100591a8:	sbb    eax,eax
100591aa:	and    eax,0x2
100591ad:	dec    eax
100591ae:	cmp    BYTE PTR [ebp-0x8],bl
100591b1:	je     0x100591a3
100591b3:	mov    ecx,DWORD PTR [ebp-0xc]
100591b6:	and    DWORD PTR [ecx+0x70],0xfffffffd
100591ba:	jmp    0x100591a3
100591bc:	push   0x0
100591be:	push   DWORD PTR [esp+0xc]
100591c2:	push   DWORD PTR [esp+0xc]
100591c6:	call   0x100590a0
100591cb:	add    esp,0xc
100591ce:	ret    
100591cf:	push   ebp
100591d0:	mov    ebp,esp
100591d2:	sub    esp,0x20
100591d5:	push   ebx
100591d6:	xor    ebx,ebx
100591d8:	cmp    DWORD PTR [ebp+0x14],ebx
100591db:	jne    0x100591fd
100591dd:	call   0x10046df5
100591e2:	push   ebx
100591e3:	push   ebx
100591e4:	push   ebx
100591e5:	push   ebx
100591e6:	push   ebx
100591e7:	mov    DWORD PTR [eax],0x16
100591ed:	call   0x100435cc
100591f2:	add    esp,0x14
100591f5:	or     eax,0xffffffff
100591f8:	jmp    0x10059296
100591fd:	push   esi
100591fe:	mov    esi,DWORD PTR [ebp+0xc]
10059201:	push   edi
10059202:	mov    edi,DWORD PTR [ebp+0x10]
10059205:	cmp    edi,ebx
10059207:	je     0x1005922a
10059209:	cmp    esi,ebx
1005920b:	jne    0x1005922a
1005920d:	call   0x10046df5
10059212:	push   ebx
10059213:	push   ebx
10059214:	push   ebx
10059215:	push   ebx
10059216:	push   ebx
10059217:	mov    DWORD PTR [eax],0x16
1005921d:	call   0x100435cc
10059222:	add    esp,0x14
10059225:	or     eax,0xffffffff
10059228:	jmp    0x10059294
1005922a:	mov    eax,0x7fffffff
1005922f:	cmp    edi,eax
10059231:	mov    DWORD PTR [ebp-0x1c],eax
10059234:	ja     0x10059239
10059236:	mov    DWORD PTR [ebp-0x1c],edi
10059239:	push   DWORD PTR [ebp+0x1c]
1005923c:	lea    eax,[ebp-0x20]
1005923f:	push   DWORD PTR [ebp+0x18]
10059242:	mov    DWORD PTR [ebp-0x14],0x42
10059249:	push   DWORD PTR [ebp+0x14]
1005924c:	mov    DWORD PTR [ebp-0x18],esi
1005924f:	push   eax
10059250:	mov    DWORD PTR [ebp-0x20],esi
10059253:	call   DWORD PTR [ebp+0x8]
10059256:	add    esp,0x10
10059259:	cmp    esi,ebx
1005925b:	mov    DWORD PTR [ebp+0x14],eax
1005925e:	je     0x10059294
10059260:	cmp    eax,ebx
10059262:	jl     0x10059286
10059264:	dec    DWORD PTR [ebp-0x1c]
10059267:	js     0x10059270
10059269:	mov    eax,DWORD PTR [ebp-0x20]
1005926c:	mov    BYTE PTR [eax],bl
1005926e:	jmp    0x10059281
10059270:	lea    eax,[ebp-0x20]
10059273:	push   eax
10059274:	push   ebx
10059275:	call   0x10048a6d
1005927a:	cmp    eax,0xffffffff
1005927d:	pop    ecx
1005927e:	pop    ecx
1005927f:	je     0x10059286
10059281:	mov    eax,DWORD PTR [ebp+0x14]
10059284:	jmp    0x10059294
10059286:	xor    eax,eax
10059288:	cmp    DWORD PTR [ebp-0x1c],ebx
1005928b:	mov    BYTE PTR [esi+edi*1-0x1],bl
1005928f:	setge  al
10059292:	dec    eax
10059293:	dec    eax
10059294:	pop    edi
10059295:	pop    esi
10059296:	pop    ebx
10059297:	leave  
10059298:	ret    
10059299:	push   ebp
1005929a:	mov    ebp,esp
1005929c:	push   ebx
1005929d:	xor    ebx,ebx
1005929f:	cmp    DWORD PTR [ebp+0x10],ebx
100592a2:	jne    0x100592c1
100592a4:	call   0x10046df5
100592a9:	push   ebx
100592aa:	push   ebx
100592ab:	push   ebx
100592ac:	push   ebx
100592ad:	push   ebx
100592ae:	mov    DWORD PTR [eax],0x16
100592b4:	call   0x100435cc
100592b9:	add    esp,0x14
100592bc:	or     eax,0xffffffff
100592bf:	jmp    0x1005931c
100592c1:	push   esi
100592c2:	mov    esi,DWORD PTR [ebp+0x8]
100592c5:	cmp    esi,ebx
100592c7:	je     0x100592ce
100592c9:	cmp    DWORD PTR [ebp+0xc],ebx
100592cc:	ja     0x100592db
100592ce:	call   0x10046df5
100592d3:	mov    DWORD PTR [eax],0x16
100592d9:	jmp    0x1005930b
100592db:	push   DWORD PTR [ebp+0x18]
100592de:	push   DWORD PTR [ebp+0x14]
100592e1:	push   DWORD PTR [ebp+0x10]
100592e4:	push   DWORD PTR [ebp+0xc]
100592e7:	push   esi
100592e8:	push   0x1004e190
100592ed:	call   0x100591cf
100592f2:	add    esp,0x18
100592f5:	cmp    eax,ebx
100592f7:	jge    0x100592fb
100592f9:	mov    BYTE PTR [esi],bl
100592fb:	cmp    eax,0xfffffffe
100592fe:	jne    0x1005931b
10059300:	call   0x10046df5
10059305:	mov    DWORD PTR [eax],0x22
1005930b:	push   ebx
1005930c:	push   ebx
1005930d:	push   ebx
1005930e:	push   ebx
1005930f:	push   ebx
10059310:	call   0x100435cc
10059315:	add    esp,0x14
10059318:	or     eax,0xffffffff
1005931b:	pop    esi
1005931c:	pop    ebx
1005931d:	pop    ebp
1005931e:	ret    
1005931f:	push   DWORD PTR [esp+0x10]
10059323:	push   0x0
10059325:	push   DWORD PTR [esp+0x14]
10059329:	push   DWORD PTR [esp+0x14]
1005932d:	push   DWORD PTR [esp+0x14]
10059331:	call   0x10059299
10059336:	add    esp,0x14
10059339:	ret    
1005933a:	push   ebx
1005933b:	push   esi
1005933c:	mov    esi,DWORD PTR [esp+0xc]
10059340:	xor    ebx,ebx
10059342:	cmp    esi,ebx
10059344:	jne    0x10059362
10059346:	call   0x10046df5
1005934b:	push   ebx
1005934c:	push   ebx
1005934d:	push   ebx
1005934e:	push   ebx
1005934f:	push   ebx
10059350:	mov    DWORD PTR [eax],0x16
10059356:	call   0x100435cc
1005935b:	add    esp,0x14
1005935e:	xor    eax,eax
10059360:	jmp    0x10059378
10059362:	movzx  eax,BYTE PTR [esi]
10059365:	push   eax
10059366:	call   0x1004f9a0
1005936b:	inc    esi
1005936c:	test   eax,eax
1005936e:	pop    ecx
1005936f:	je     0x10059376
10059371:	cmp    BYTE PTR [esi],bl
10059373:	je     0x10059376
10059375:	inc    esi
10059376:	mov    eax,esi
10059378:	pop    esi
10059379:	pop    ebx
1005937a:	ret    
1005937b:	push   DWORD PTR [esp+0x8]
1005937f:	push   0x0
10059381:	push   DWORD PTR [esp+0xc]
10059385:	push   0x1004d6b8
1005938a:	call   0x10043949
1005938f:	add    esp,0x10
10059392:	ret    
10059393:	push   ebp
10059394:	mov    ebp,esp
10059396:	push   ecx
10059397:	push   ebx
10059398:	mov    eax,DWORD PTR [ebp+0xc]
1005939b:	add    eax,0xc
1005939e:	mov    DWORD PTR [ebp-0x4],eax
100593a1:	mov    ebx,DWORD PTR fs:0x0
100593a8:	mov    eax,DWORD PTR [ebx]
100593aa:	mov    fs:0x0,eax
100593b0:	mov    eax,DWORD PTR [ebp+0x8]
100593b3:	mov    ebx,DWORD PTR [ebp+0xc]
100593b6:	mov    ebp,DWORD PTR [ebp-0x4]
100593b9:	mov    esp,DWORD PTR [ebx-0x4]
100593bc:	jmp    eax
100593be:	pop    ebx
100593bf:	leave  
100593c0:	ret    0x8
100593c3:	pop    eax
100593c4:	pop    ecx
100593c5:	xchg   DWORD PTR [esp],eax
100593c8:	jmp    eax
100593ca:	push   ebp
100593cb:	mov    ebp,esp
100593cd:	push   ecx
100593ce:	push   ecx
100593cf:	push   ebx
100593d0:	push   esi
100593d1:	push   edi
100593d2:	mov    esi,DWORD PTR fs:0x0
100593d9:	mov    DWORD PTR [ebp-0x4],esi
100593dc:	mov    DWORD PTR [ebp-0x8],0x100593f3
100593e3:	push   0x0
100593e5:	push   DWORD PTR [ebp+0xc]
100593e8:	push   DWORD PTR [ebp-0x8]
100593eb:	push   DWORD PTR [ebp+0x8]
100593ee:	call   0x10056d74
100593f3:	mov    eax,DWORD PTR [ebp+0xc]
100593f6:	mov    eax,DWORD PTR [eax+0x4]
100593f9:	and    eax,0xfffffffd
100593fc:	mov    ecx,DWORD PTR [ebp+0xc]
100593ff:	mov    DWORD PTR [ecx+0x4],eax
10059402:	mov    edi,DWORD PTR fs:0x0
10059409:	mov    ebx,DWORD PTR [ebp-0x4]
1005940c:	mov    DWORD PTR [ebx],edi
1005940e:	mov    DWORD PTR fs:0x0,ebx
10059415:	pop    edi
10059416:	pop    esi
10059417:	pop    ebx
10059418:	leave  
10059419:	ret    0x8
1005941c:	push   ebp
1005941d:	mov    ebp,esp
1005941f:	sub    esp,0x8
10059422:	push   ebx
10059423:	push   esi
10059424:	push   edi
10059425:	cld    
10059426:	mov    DWORD PTR [ebp-0x4],eax
10059429:	xor    eax,eax
1005942b:	push   eax
1005942c:	push   eax
1005942d:	push   eax
1005942e:	push   DWORD PTR [ebp-0x4]
10059431:	push   DWORD PTR [ebp+0x14]
10059434:	push   DWORD PTR [ebp+0x10]
10059437:	push   DWORD PTR [ebp+0xc]
1005943a:	push   DWORD PTR [ebp+0x8]
1005943d:	call   0x1005b537
10059442:	add    esp,0x20
10059445:	mov    DWORD PTR [ebp-0x8],eax
10059448:	pop    edi
10059449:	pop    esi
1005944a:	pop    ebx
1005944b:	mov    eax,DWORD PTR [ebp-0x8]
1005944e:	mov    esp,ebp
10059450:	pop    ebp
10059451:	ret    
10059452:	push   esi
10059453:	cld    
10059454:	mov    esi,DWORD PTR [esp+0xc]
10059458:	mov    ecx,DWORD PTR [esi+0x8]
1005945b:	xor    ecx,esi
1005945d:	call   0x100430d7
10059462:	push   0x0
10059464:	push   esi
10059465:	push   DWORD PTR [esi+0x14]
10059468:	push   DWORD PTR [esi+0xc]
1005946b:	push   0x0
1005946d:	push   DWORD PTR [esp+0x24]
10059471:	push   DWORD PTR [esi+0x10]
10059474:	push   DWORD PTR [esp+0x24]
10059478:	call   0x1005b537
1005947d:	add    esp,0x20
10059480:	pop    esi
10059481:	ret    
10059482:	push   ebp
10059483:	mov    ebp,esp
10059485:	sub    esp,0x38
10059488:	push   ebx
10059489:	cmp    DWORD PTR [ebp+0x8],0x123
10059490:	jne    0x100594a4
10059492:	mov    eax,0x1005952b
10059497:	mov    ecx,DWORD PTR [ebp+0xc]
1005949a:	mov    DWORD PTR [ecx],eax
1005949c:	xor    eax,eax
1005949e:	inc    eax
1005949f:	jmp    0x10059554
100594a4:	and    DWORD PTR [ebp-0x28],0x0
100594a8:	mov    DWORD PTR [ebp-0x24],0x10059557
100594af:	mov    eax,ds:0x1007e030
100594b4:	lea    ecx,[ebp-0x28]
100594b7:	xor    eax,ecx
100594b9:	mov    DWORD PTR [ebp-0x20],eax
100594bc:	mov    eax,DWORD PTR [ebp+0x18]
100594bf:	mov    DWORD PTR [ebp-0x1c],eax
100594c2:	mov    eax,DWORD PTR [ebp+0xc]
100594c5:	mov    DWORD PTR [ebp-0x18],eax
100594c8:	mov    eax,DWORD PTR [ebp+0x1c]
100594cb:	mov    DWORD PTR [ebp-0x14],eax
100594ce:	mov    eax,DWORD PTR [ebp+0x20]
100594d1:	mov    DWORD PTR [ebp-0x10],eax
100594d4:	and    DWORD PTR [ebp-0xc],0x0
100594d8:	and    DWORD PTR [ebp-0x8],0x0
100594dc:	and    DWORD PTR [ebp-0x4],0x0
100594e0:	mov    DWORD PTR [ebp-0xc],esp
100594e3:	mov    DWORD PTR [ebp-0x8],ebp
100594e6:	mov    eax,fs:0x0
100594ec:	mov    DWORD PTR [ebp-0x28],eax
100594ef:	lea    eax,[ebp-0x28]
100594f2:	mov    fs:0x0,eax
100594f8:	mov    DWORD PTR [ebp-0x38],0x1
100594ff:	mov    eax,DWORD PTR [ebp+0x8]
10059502:	mov    DWORD PTR [ebp-0x34],eax
10059505:	mov    eax,DWORD PTR [ebp+0x10]
10059508:	mov    DWORD PTR [ebp-0x30],eax
1005950b:	call   0x1004739c
10059510:	mov    eax,DWORD PTR [eax+0x80]
10059516:	mov    DWORD PTR [ebp-0x2c],eax
10059519:	lea    eax,[ebp-0x34]
1005951c:	push   eax
1005951d:	mov    eax,DWORD PTR [ebp+0x8]
10059520:	push   DWORD PTR [eax]
10059522:	call   DWORD PTR [ebp-0x2c]
10059525:	pop    ecx
10059526:	pop    ecx
10059527:	and    DWORD PTR [ebp-0x38],0x0
1005952b:	cmp    DWORD PTR [ebp-0x4],0x0
1005952f:	je     0x10059548
10059531:	mov    ebx,DWORD PTR fs:0x0
10059538:	mov    eax,DWORD PTR [ebx]
1005953a:	mov    ebx,DWORD PTR [ebp-0x28]
1005953d:	mov    DWORD PTR [ebx],eax
1005953f:	mov    DWORD PTR fs:0x0,ebx
10059546:	jmp    0x10059551
10059548:	mov    eax,DWORD PTR [ebp-0x28]
1005954b:	mov    fs:0x0,eax
10059551:	mov    eax,DWORD PTR [ebp-0x38]
10059554:	pop    ebx
10059555:	leave  
10059556:	ret    
10059557:	push   ebp
10059558:	mov    ebp,esp
1005955a:	push   ecx
1005955b:	push   ebx
1005955c:	cld    
1005955d:	mov    eax,DWORD PTR [ebp+0xc]
10059560:	mov    ecx,DWORD PTR [eax+0x8]
10059563:	xor    ecx,DWORD PTR [ebp+0xc]
10059566:	call   0x100430d7
1005956b:	mov    eax,DWORD PTR [ebp+0x8]
1005956e:	mov    eax,DWORD PTR [eax+0x4]
10059571:	and    eax,0x66
10059574:	je     0x10059587
10059576:	mov    eax,DWORD PTR [ebp+0xc]
10059579:	mov    DWORD PTR [eax+0x24],0x1
10059580:	xor    eax,eax
10059582:	inc    eax
10059583:	jmp    0x100595f1
10059585:	jmp    0x100595f1
10059587:	push   0x1
10059589:	mov    eax,DWORD PTR [ebp+0xc]
1005958c:	push   DWORD PTR [eax+0x18]
1005958f:	mov    eax,DWORD PTR [ebp+0xc]
10059592:	push   DWORD PTR [eax+0x14]
10059595:	mov    eax,DWORD PTR [ebp+0xc]
10059598:	push   DWORD PTR [eax+0xc]
1005959b:	push   0x0
1005959d:	push   DWORD PTR [ebp+0x10]
100595a0:	mov    eax,DWORD PTR [ebp+0xc]
100595a3:	push   DWORD PTR [eax+0x10]
100595a6:	push   DWORD PTR [ebp+0x8]
100595a9:	call   0x1005b537
100595ae:	add    esp,0x20
100595b1:	mov    eax,DWORD PTR [ebp+0xc]
100595b4:	cmp    DWORD PTR [eax+0x24],0x0
100595b8:	jne    0x100595c5
100595ba:	push   DWORD PTR [ebp+0x8]
100595bd:	push   DWORD PTR [ebp+0xc]
100595c0:	call   0x100593ca
100595c5:	push   0x0
100595c7:	push   0x0
100595c9:	push   0x0
100595cb:	push   0x0
100595cd:	push   0x0
100595cf:	lea    eax,[ebp-0x4]
100595d2:	push   eax
100595d3:	push   0x123
100595d8:	call   0x10059482
100595dd:	add    esp,0x1c
100595e0:	mov    eax,DWORD PTR [ebp-0x4]
100595e3:	mov    ebx,DWORD PTR [ebp+0xc]
100595e6:	mov    esp,DWORD PTR [ebx+0x1c]
100595e9:	mov    ebp,DWORD PTR [ebx+0x20]
100595ec:	jmp    eax
100595ee:	xor    eax,eax
100595f0:	inc    eax
100595f1:	pop    ebx
100595f2:	leave  
100595f3:	ret    
100595f4:	push   ebp
100595f5:	mov    ebp,esp
100595f7:	push   ecx
100595f8:	push   ebx
100595f9:	push   esi
100595fa:	push   edi
100595fb:	mov    edi,DWORD PTR [ebp+0x8]
100595fe:	mov    eax,DWORD PTR [edi+0x10]
10059601:	mov    esi,DWORD PTR [edi+0xc]
10059604:	mov    DWORD PTR [ebp-0x4],eax
10059607:	mov    ebx,esi
10059609:	jmp    0x10059638
1005960b:	cmp    esi,0xffffffff
1005960e:	jne    0x10059615
10059610:	call   0x10046eea
10059615:	mov    ecx,DWORD PTR [ebp-0x4]
10059618:	dec    esi
10059619:	mov    eax,esi
1005961b:	imul   eax,eax,0x14
1005961e:	add    eax,ecx
10059620:	mov    ecx,DWORD PTR [ebp+0x10]
10059623:	cmp    DWORD PTR [eax+0x4],ecx
10059626:	jge    0x1005962d
10059628:	cmp    ecx,DWORD PTR [eax+0x8]
1005962b:	jle    0x10059632
1005962d:	cmp    esi,0xffffffff
10059630:	jne    0x1005963b
10059632:	dec    DWORD PTR [ebp+0xc]
10059635:	mov    ebx,DWORD PTR [ebp+0x8]
10059638:	mov    DWORD PTR [ebp+0x8],esi
1005963b:	cmp    DWORD PTR [ebp+0xc],0x0
1005963f:	jge    0x1005960b
10059641:	mov    eax,DWORD PTR [ebp+0x14]
10059644:	inc    esi
10059645:	mov    DWORD PTR [eax],esi
10059647:	mov    eax,DWORD PTR [ebp+0x18]
1005964a:	mov    DWORD PTR [eax],ebx
1005964c:	cmp    ebx,DWORD PTR [edi+0xc]
1005964f:	ja     0x10059655
10059651:	cmp    esi,ebx
10059653:	jbe    0x1005965a
10059655:	call   0x10046eea
1005965a:	mov    eax,esi
1005965c:	imul   eax,eax,0x14
1005965f:	add    eax,DWORD PTR [ebp-0x4]
10059662:	pop    edi
10059663:	pop    esi
10059664:	pop    ebx
10059665:	leave  
10059666:	ret    
10059667:	mov    eax,DWORD PTR [esp+0x8]
1005966b:	push   esi
1005966c:	mov    esi,DWORD PTR [esp+0x8]
10059670:	mov    DWORD PTR [esi],eax
10059672:	call   0x1004739c
10059677:	mov    eax,DWORD PTR [eax+0x98]
1005967d:	mov    DWORD PTR [esi+0x4],eax
10059680:	call   0x1004739c
10059685:	mov    DWORD PTR [eax+0x98],esi
1005968b:	mov    eax,esi
1005968d:	pop    esi
1005968e:	ret    
1005968f:	call   0x1004739c
10059694:	mov    eax,DWORD PTR [eax+0x98]
1005969a:	jmp    0x100596a7
1005969c:	mov    ecx,DWORD PTR [eax]
1005969e:	cmp    ecx,DWORD PTR [esp+0x4]
100596a2:	je     0x100596ad
100596a4:	mov    eax,DWORD PTR [eax+0x4]
100596a7:	test   eax,eax
100596a9:	jne    0x1005969c
100596ab:	inc    eax
100596ac:	ret    
100596ad:	xor    eax,eax
100596af:	ret    
100596b0:	push   esi
100596b1:	call   0x1004739c
100596b6:	mov    esi,DWORD PTR [esp+0x8]
100596ba:	cmp    esi,DWORD PTR [eax+0x98]
100596c0:	jne    0x100596d2
100596c2:	call   0x1004739c
100596c7:	mov    ecx,DWORD PTR [esi+0x4]
100596ca:	mov    DWORD PTR [eax+0x98],ecx
100596d0:	pop    esi
100596d1:	ret    
100596d2:	call   0x1004739c
100596d7:	mov    eax,DWORD PTR [eax+0x98]
100596dd:	jmp    0x100596e8
100596df:	mov    ecx,DWORD PTR [eax+0x4]
100596e2:	cmp    esi,ecx
100596e4:	je     0x100596f4
100596e6:	mov    eax,ecx
100596e8:	cmp    DWORD PTR [eax+0x4],0x0
100596ec:	jne    0x100596df
100596ee:	pop    esi
100596ef:	jmp    0x10046eea
100596f4:	mov    ecx,DWORD PTR [esi+0x4]
100596f7:	mov    DWORD PTR [eax+0x4],ecx
100596fa:	pop    esi
100596fb:	ret    
100596fc:	push   ebp
100596fd:	mov    ebp,esp
100596ff:	sub    esp,0x18
10059702:	mov    eax,ds:0x1007e030
10059707:	and    DWORD PTR [ebp-0x18],0x0
1005970b:	lea    ecx,[ebp-0x18]
1005970e:	xor    eax,ecx
10059710:	mov    ecx,DWORD PTR [ebp+0x8]
10059713:	mov    DWORD PTR [ebp-0x10],eax
10059716:	mov    eax,DWORD PTR [ebp+0xc]
10059719:	mov    DWORD PTR [ebp-0xc],eax
1005971c:	mov    eax,DWORD PTR [ebp+0x14]
1005971f:	inc    eax
10059720:	mov    DWORD PTR [ebp-0x14],0x10059452
10059727:	mov    DWORD PTR [ebp-0x8],ecx
1005972a:	mov    DWORD PTR [ebp-0x4],eax
1005972d:	mov    eax,fs:0x0
10059733:	mov    DWORD PTR [ebp-0x18],eax
10059736:	lea    eax,[ebp-0x18]
10059739:	mov    fs:0x0,eax
1005973f:	push   DWORD PTR [ebp+0x18]
10059742:	push   ecx
10059743:	push   DWORD PTR [ebp+0x10]
10059746:	call   0x1005b620
1005974b:	mov    ecx,eax
1005974d:	mov    eax,DWORD PTR [ebp-0x18]
10059750:	mov    fs:0x0,eax
10059756:	mov    eax,ecx
10059758:	leave  
10059759:	ret    
1005975a:	ret    
1005975b:	mov    eax,0x1005c0f9
10059760:	mov    ds:0x1007ea80,eax
10059765:	mov    DWORD PTR ds:0x1007ea84,0x1005b7f5
1005976f:	mov    DWORD PTR ds:0x1007ea88,0x1005b7b3
10059779:	mov    DWORD PTR ds:0x1007ea8c,0x1005b7e7
10059783:	mov    DWORD PTR ds:0x1007ea90,0x1005b75d
1005978d:	mov    ds:0x1007ea94,eax
10059792:	mov    DWORD PTR ds:0x1007ea98,0x1005c073
1005979c:	mov    DWORD PTR ds:0x1007ea9c,0x1005b773
100597a6:	mov    DWORD PTR ds:0x1007eaa0,0x1005b6dd
100597b0:	mov    DWORD PTR ds:0x1007eaa4,0x1005b66c
100597ba:	ret    
100597bb:	call   0x1005975b
100597c0:	call   0x1005c17f
100597c5:	cmp    DWORD PTR [esp+0x4],0x0
100597ca:	mov    ds:0x10080acc,eax
100597cf:	je     0x100597d6
100597d1:	call   0x1005c11a
100597d6:	fnclex 
100597d8:	ret    
100597d9:	push   0x18
100597db:	push   0x10074b80
100597e0:	call   0x10046f34
100597e5:	mov    eax,DWORD PTR [ebp+0x8]
100597e8:	mov    DWORD PTR [ebp-0x1c],eax
100597eb:	mov    DWORD PTR [ebp-0x20],eax
100597ee:	xor    ebx,ebx
100597f0:	cmp    eax,ebx
100597f2:	jne    0x10059818
100597f4:	cmp    DWORD PTR [ebp+0xc],ebx
100597f7:	je     0x10059818
100597f9:	call   0x10046df5
100597fe:	mov    DWORD PTR [eax],0x16
10059804:	push   ebx
10059805:	push   ebx
10059806:	push   ebx
10059807:	push   ebx
10059808:	push   ebx
10059809:	call   0x100435cc
1005980e:	add    esp,0x14
10059811:	xor    eax,eax
10059813:	jmp    0x1005994f
10059818:	xor    eax,eax
1005981a:	cmp    DWORD PTR [ebp+0xc],ebx
1005981d:	setge  al
10059820:	cmp    eax,ebx
10059822:	je     0x100597f9
10059824:	xor    eax,eax
10059826:	mov    esi,DWORD PTR [ebp+0x10]
10059829:	cmp    esi,ebx
1005982b:	setne  al
1005982e:	cmp    eax,ebx
10059830:	je     0x100597f9
10059832:	cmp    DWORD PTR [ebp+0xc],ebx
10059835:	je     0x10059811
10059837:	mov    edi,esi
10059839:	mov    DWORD PTR [ebp-0x24],edi
1005983c:	push   esi
1005983d:	call   0x1004d368
10059842:	pop    ecx
10059843:	mov    DWORD PTR [ebp-0x4],ebx
10059846:	test   BYTE PTR [esi+0xc],0x40
1005984a:	jne    0x100598fa
10059850:	push   esi
10059851:	call   0x1004d40c
10059856:	pop    ecx
10059857:	cmp    eax,0xffffffff
1005985a:	je     0x1005988c
1005985c:	push   esi
1005985d:	call   0x1004d40c
10059862:	pop    ecx
10059863:	cmp    eax,0xfffffffe
10059866:	je     0x1005988c
10059868:	push   esi
10059869:	call   0x1004d40c
1005986e:	sar    eax,0x5
10059871:	lea    edi,[eax*4+0x10082480]
10059878:	push   esi
10059879:	call   0x1004d40c
1005987e:	pop    ecx
1005987f:	pop    ecx
10059880:	and    eax,0x1f
10059883:	imul   eax,eax,0x28
10059886:	add    eax,DWORD PTR [edi]
10059888:	mov    edi,esi
1005988a:	jmp    0x10059891
1005988c:	mov    eax,0x1007e9d0
10059891:	test   BYTE PTR [eax+0x24],0x7f
10059895:	jne    0x100598df
10059897:	push   esi
10059898:	call   0x1004d40c
1005989d:	pop    ecx
1005989e:	cmp    eax,0xffffffff
100598a1:	je     0x100598d4
100598a3:	push   esi
100598a4:	call   0x1004d40c
100598a9:	pop    ecx
100598aa:	cmp    eax,0xfffffffe
100598ad:	je     0x100598d4
100598af:	push   esi
100598b0:	call   0x1004d40c
100598b5:	sar    eax,0x5
100598b8:	lea    edi,[eax*4+0x10082480]
100598bf:	push   esi
100598c0:	call   0x1004d40c
100598c5:	pop    ecx
100598c6:	pop    ecx
100598c7:	and    eax,0x1f
100598ca:	imul   eax,eax,0x28
100598cd:	add    eax,DWORD PTR [edi]
100598cf:	mov    edi,DWORD PTR [ebp-0x24]
100598d2:	jmp    0x100598d9
100598d4:	mov    eax,0x1007e9d0
100598d9:	test   BYTE PTR [eax+0x24],0x80
100598dd:	je     0x100598fa
100598df:	call   0x10046df5
100598e4:	mov    DWORD PTR [eax],0x16
100598ea:	push   ebx
100598eb:	push   ebx
100598ec:	push   ebx
100598ed:	push   ebx
100598ee:	push   ebx
100598ef:	call   0x100435cc
100598f4:	add    esp,0x14
100598f7:	mov    DWORD PTR [ebp-0x20],ebx
100598fa:	cmp    DWORD PTR [ebp-0x20],ebx
100598fd:	je     0x10059940
100598ff:	dec    DWORD PTR [ebp+0xc]
10059902:	je     0x1005993b
10059904:	dec    DWORD PTR [edi+0x4]
10059907:	js     0x10059913
10059909:	mov    ecx,DWORD PTR [edi]
1005990b:	movzx  eax,BYTE PTR [ecx]
1005990e:	inc    ecx
1005990f:	mov    DWORD PTR [edi],ecx
10059911:	jmp    0x1005991a
10059913:	push   edi
10059914:	call   0x1005c1a8
10059919:	pop    ecx
1005991a:	mov    DWORD PTR [ebp-0x28],eax
1005991d:	cmp    eax,0xffffffff
10059920:	jne    0x1005992f
10059922:	mov    eax,DWORD PTR [ebp-0x1c]
10059925:	cmp    eax,DWORD PTR [ebp+0x8]
10059928:	jne    0x1005993e
1005992a:	mov    DWORD PTR [ebp-0x20],ebx
1005992d:	jmp    0x10059940
1005992f:	mov    ecx,DWORD PTR [ebp-0x1c]
10059932:	mov    BYTE PTR [ecx],al
10059934:	inc    DWORD PTR [ebp-0x1c]
10059937:	cmp    al,0xa
10059939:	jne    0x100598ff
1005993b:	mov    eax,DWORD PTR [ebp-0x1c]
1005993e:	mov    BYTE PTR [eax],bl
10059940:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10059947:	call   0x10059958
1005994c:	mov    eax,DWORD PTR [ebp-0x20]
1005994f:	call   0x10046f79
10059954:	ret    
10059955:	mov    edi,DWORD PTR [ebp-0x24]
10059958:	push   edi
10059959:	call   0x1004d3ba
1005995e:	pop    ecx
1005995f:	ret    
10059960:	push   ebp
10059961:	mov    ebp,esp
10059963:	sub    esp,0x20
10059966:	push   ebx
10059967:	xor    ebx,ebx
10059969:	cmp    DWORD PTR [ebp+0x10],ebx
1005996c:	jne    0x1005998b
1005996e:	call   0x10046df5
10059973:	push   ebx
10059974:	push   ebx
10059975:	push   ebx
10059976:	push   ebx
10059977:	push   ebx
10059978:	mov    DWORD PTR [eax],0x16
1005997e:	call   0x100435cc
10059983:	add    esp,0x14
10059986:	or     eax,0xffffffff
10059989:	jmp    0x10059a0a
1005998b:	mov    ecx,DWORD PTR [ebp+0xc]
1005998e:	cmp    ecx,ebx
10059990:	push   esi
10059991:	mov    esi,DWORD PTR [ebp+0x8]
10059994:	je     0x100599b7
10059996:	cmp    esi,ebx
10059998:	jne    0x100599b7
1005999a:	call   0x10046df5
1005999f:	push   ebx
100599a0:	push   ebx
100599a1:	push   ebx
100599a2:	push   ebx
100599a3:	push   ebx
100599a4:	mov    DWORD PTR [eax],0x16
100599aa:	call   0x100435cc
100599af:	add    esp,0x14
100599b2:	or     eax,0xffffffff
100599b5:	jmp    0x10059a09
100599b7:	mov    eax,0x7fffffff
100599bc:	cmp    ecx,eax
100599be:	mov    DWORD PTR [ebp-0x1c],eax
100599c1:	ja     0x100599c6
100599c3:	mov    DWORD PTR [ebp-0x1c],ecx
100599c6:	push   edi
100599c7:	lea    eax,[ebp+0x14]
100599ca:	push   eax
100599cb:	push   ebx
100599cc:	push   DWORD PTR [ebp+0x10]
100599cf:	lea    eax,[ebp-0x20]
100599d2:	push   eax
100599d3:	mov    DWORD PTR [ebp-0x14],0x42
100599da:	mov    DWORD PTR [ebp-0x18],esi
100599dd:	mov    DWORD PTR [ebp-0x20],esi
100599e0:	call   0x1004d6b8
100599e5:	add    esp,0x10
100599e8:	cmp    esi,ebx
100599ea:	mov    edi,eax
100599ec:	je     0x10059a08
100599ee:	dec    DWORD PTR [ebp-0x1c]
100599f1:	js     0x100599fa
100599f3:	mov    eax,DWORD PTR [ebp-0x20]
100599f6:	mov    BYTE PTR [eax],bl
100599f8:	jmp    0x10059a06
100599fa:	lea    eax,[ebp-0x20]
100599fd:	push   eax
100599fe:	push   ebx
100599ff:	call   0x10048a6d
10059a04:	pop    ecx
10059a05:	pop    ecx
10059a06:	mov    eax,edi
10059a08:	pop    edi
10059a09:	pop    esi
10059a0a:	pop    ebx
10059a0b:	leave  
10059a0c:	ret    
10059a0d:	int3   
10059a0e:	int3   
10059a0f:	int3   
10059a10:	mov    ecx,DWORD PTR [esp+0xc]
10059a14:	push   edi
10059a15:	test   ecx,ecx
10059a17:	je     0x10059aaf
10059a1d:	push   esi
10059a1e:	push   ebx
10059a1f:	mov    ebx,ecx
10059a21:	mov    esi,DWORD PTR [esp+0x14]
10059a25:	test   esi,0x3
10059a2b:	mov    edi,DWORD PTR [esp+0x10]
10059a2f:	jne    0x10059a3c
10059a31:	shr    ecx,0x2
10059a34:	jne    0x10059abf
10059a3a:	jmp    0x10059a63
10059a3c:	mov    al,BYTE PTR [esi]
10059a3e:	add    esi,0x1
10059a41:	mov    BYTE PTR [edi],al
10059a43:	add    edi,0x1
10059a46:	sub    ecx,0x1
10059a49:	je     0x10059a76
10059a4b:	test   al,al
10059a4d:	je     0x10059a7e
10059a4f:	test   esi,0x3
10059a55:	jne    0x10059a3c
10059a57:	mov    ebx,ecx
10059a59:	shr    ecx,0x2
10059a5c:	jne    0x10059abf
10059a5e:	and    ebx,0x3
10059a61:	je     0x10059a76
10059a63:	mov    al,BYTE PTR [esi]
10059a65:	add    esi,0x1
10059a68:	mov    BYTE PTR [edi],al
10059a6a:	add    edi,0x1
10059a6d:	test   al,al
10059a6f:	je     0x10059aa8
10059a71:	sub    ebx,0x1
10059a74:	jne    0x10059a63
10059a76:	mov    eax,DWORD PTR [esp+0x10]
10059a7a:	pop    ebx
10059a7b:	pop    esi
10059a7c:	pop    edi
10059a7d:	ret    
10059a7e:	test   edi,0x3
10059a84:	je     0x10059a9c
10059a86:	mov    BYTE PTR [edi],al
10059a88:	add    edi,0x1
10059a8b:	sub    ecx,0x1
10059a8e:	je     0x10059b2c
10059a94:	test   edi,0x3
10059a9a:	jne    0x10059a86
10059a9c:	mov    ebx,ecx
10059a9e:	shr    ecx,0x2
10059aa1:	jne    0x10059b17
10059aa3:	mov    BYTE PTR [edi],al
10059aa5:	add    edi,0x1
10059aa8:	sub    ebx,0x1
10059aab:	jne    0x10059aa3
10059aad:	pop    ebx
10059aae:	pop    esi
10059aaf:	mov    eax,DWORD PTR [esp+0x8]
10059ab3:	pop    edi
10059ab4:	ret    
10059ab5:	mov    DWORD PTR [edi],edx
10059ab7:	add    edi,0x4
10059aba:	sub    ecx,0x1
10059abd:	je     0x10059a5e
10059abf:	mov    edx,0x7efefeff
10059ac4:	mov    eax,DWORD PTR [esi]
10059ac6:	add    edx,eax
10059ac8:	xor    eax,0xffffffff
10059acb:	xor    eax,edx
10059acd:	mov    edx,DWORD PTR [esi]
10059acf:	add    esi,0x4
10059ad2:	test   eax,0x81010100
10059ad7:	je     0x10059ab5
10059ad9:	test   dl,dl
10059adb:	je     0x10059b09
10059add:	test   dh,dh
10059adf:	je     0x10059aff
10059ae1:	test   edx,0xff0000
10059ae7:	je     0x10059af5
10059ae9:	test   edx,0xff000000
10059aef:	jne    0x10059ab5
10059af1:	mov    DWORD PTR [edi],edx
10059af3:	jmp    0x10059b0d
10059af5:	and    edx,0xffff
10059afb:	mov    DWORD PTR [edi],edx
10059afd:	jmp    0x10059b0d
10059aff:	and    edx,0xff
10059b05:	mov    DWORD PTR [edi],edx
10059b07:	jmp    0x10059b0d
10059b09:	xor    edx,edx
10059b0b:	mov    DWORD PTR [edi],edx
10059b0d:	add    edi,0x4
10059b10:	xor    eax,eax
10059b12:	sub    ecx,0x1
10059b15:	je     0x10059b23
10059b17:	xor    eax,eax
10059b19:	mov    DWORD PTR [edi],eax
10059b1b:	add    edi,0x4
10059b1e:	sub    ecx,0x1
10059b21:	jne    0x10059b19
10059b23:	and    ebx,0x3
10059b26:	jne    0x10059aa3
10059b2c:	mov    eax,DWORD PTR [esp+0x10]
10059b30:	pop    ebx
10059b31:	pop    esi
10059b32:	pop    edi
10059b33:	ret    
10059b34:	int3   
10059b35:	int3   
10059b36:	int3   
10059b37:	int3   
10059b38:	int3   
10059b39:	int3   
10059b3a:	int3   
10059b3b:	int3   
10059b3c:	int3   
10059b3d:	int3   
10059b3e:	int3   
10059b3f:	int3   
10059b40:	push   ebp
10059b41:	mov    ebp,esp
10059b43:	push   edi
10059b44:	mov    edi,DWORD PTR [ebp+0x8]
10059b47:	xor    eax,eax
10059b49:	or     ecx,0xffffffff
10059b4c:	repnz scas al,BYTE PTR es:[edi]
10059b4e:	add    ecx,0x1
10059b51:	neg    ecx
10059b53:	sub    edi,0x1
10059b56:	mov    al,BYTE PTR [ebp+0xc]
10059b59:	std    
10059b5a:	repnz scas al,BYTE PTR es:[edi]
10059b5c:	add    edi,0x1
10059b5f:	cmp    BYTE PTR [edi],al
10059b61:	je     0x10059b67
10059b63:	xor    eax,eax
10059b65:	jmp    0x10059b69
10059b67:	mov    eax,edi
10059b69:	cld    
10059b6a:	pop    edi
10059b6b:	leave  
10059b6c:	ret    
10059b6d:	push   ebp
10059b6e:	mov    ebp,esp
10059b70:	push   ecx
10059b71:	push   ecx
10059b72:	mov    eax,DWORD PTR [ebp+0xc]
10059b75:	push   ebx
10059b76:	xor    ebx,ebx
10059b78:	cmp    eax,ebx
10059b7a:	push   esi
10059b7b:	push   edi
10059b7c:	je     0x10059c63
10059b82:	cmp    BYTE PTR [eax],bl
10059b84:	je     0x10059c63
10059b8a:	cmp    DWORD PTR [ebp+0x8],ebx
10059b8d:	mov    esi,DWORD PTR ds:0x10066058
10059b93:	jne    0x10059bf0
10059b95:	push   ebx
10059b96:	push   ebx
10059b97:	push   ebx
10059b98:	push   eax
10059b99:	call   esi
10059b9b:	cmp    eax,ebx
10059b9d:	jne    0x10059bb2
10059b9f:	call   DWORD PTR ds:0x100660cc
10059ba5:	push   eax
10059ba6:	call   0x10046e1b
10059bab:	xor    eax,eax
10059bad:	jmp    0x10059c6f
10059bb2:	mov    edi,DWORD PTR [ebp+0x10]
10059bb5:	cmp    edi,eax
10059bb7:	ja     0x10059bbb
10059bb9:	mov    edi,eax
10059bbb:	cmp    edi,0xffffffff
10059bbe:	jbe    0x10059bd2
10059bc0:	call   0x10046df5
10059bc5:	mov    DWORD PTR [eax],0x16
10059bcb:	xor    eax,eax
10059bcd:	jmp    0x10059c70
10059bd2:	push   0x1
10059bd4:	push   edi
10059bd5:	call   0x100438f4
10059bda:	cmp    eax,ebx
10059bdc:	pop    ecx
10059bdd:	pop    ecx
10059bde:	mov    DWORD PTR [ebp-0x4],eax
10059be1:	jne    0x10059c17
10059be3:	call   0x10046df5
10059be8:	mov    DWORD PTR [eax],0xc
10059bee:	jmp    0x10059bcb
10059bf0:	mov    edi,DWORD PTR [ebp+0x10]
10059bf3:	cmp    edi,ebx
10059bf5:	ja     0x10059c11
10059bf7:	call   0x10046df5
10059bfc:	push   ebx
10059bfd:	push   ebx
10059bfe:	push   ebx
10059bff:	push   ebx
10059c00:	push   ebx
10059c01:	mov    DWORD PTR [eax],0x16
10059c07:	call   0x100435cc
10059c0c:	add    esp,0x14
10059c0f:	jmp    0x10059bcb
10059c11:	mov    eax,DWORD PTR [ebp+0x8]
10059c14:	mov    DWORD PTR [ebp-0x4],eax
10059c17:	lea    eax,[ebp-0x8]
10059c1a:	push   eax
10059c1b:	push   DWORD PTR [ebp-0x4]
10059c1e:	push   edi
10059c1f:	push   DWORD PTR [ebp+0xc]
10059c22:	call   esi
10059c24:	cmp    eax,edi
10059c26:	jb     0x10059c43
10059c28:	cmp    DWORD PTR [ebp+0x8],ebx
10059c2b:	jne    0x10059c36
10059c2d:	push   DWORD PTR [ebp-0x4]
10059c30:	call   0x10043748
10059c35:	pop    ecx
10059c36:	call   0x10046df5
10059c3b:	mov    DWORD PTR [eax],0x22
10059c41:	jmp    0x10059bcb
10059c43:	cmp    eax,ebx
10059c45:	jne    0x10059c5e
10059c47:	cmp    DWORD PTR [ebp+0x8],ebx
10059c4a:	jne    0x10059b9f
10059c50:	push   DWORD PTR [ebp-0x4]
10059c53:	call   0x10043748
10059c58:	pop    ecx
10059c59:	jmp    0x10059b9f
10059c5e:	mov    eax,DWORD PTR [ebp-0x4]
10059c61:	jmp    0x10059c70
10059c63:	push   DWORD PTR [ebp+0x10]
10059c66:	push   DWORD PTR [ebp+0x8]
10059c69:	call   0x1005c434
10059c6e:	pop    ecx
10059c6f:	pop    ecx
10059c70:	pop    edi
10059c71:	pop    esi
10059c72:	pop    ebx
10059c73:	leave  
10059c74:	ret    
10059c75:	push   eax
10059c76:	push   DWORD PTR fs:0x0
10059c7d:	lea    eax,[esp+0xc]
10059c81:	sub    esp,DWORD PTR [esp+0xc]
10059c85:	push   ebx
10059c86:	push   esi
10059c87:	push   edi
10059c88:	mov    DWORD PTR [eax],ebp
10059c8a:	mov    ebp,eax
10059c8c:	mov    eax,ds:0x1007e030
10059c91:	xor    eax,ebp
10059c93:	push   eax
10059c94:	push   DWORD PTR [ebp-0x4]
10059c97:	mov    DWORD PTR [ebp-0x4],0xffffffff
10059c9e:	lea    eax,[ebp-0xc]
10059ca1:	mov    fs:0x0,eax
10059ca7:	ret    
10059ca8:	push   eax
10059ca9:	push   DWORD PTR fs:0x0
10059cb0:	lea    eax,[esp+0xc]
10059cb4:	sub    esp,DWORD PTR [esp+0xc]
10059cb8:	push   ebx
10059cb9:	push   esi
10059cba:	push   edi
10059cbb:	mov    DWORD PTR [eax],ebp
10059cbd:	mov    ebp,eax
10059cbf:	mov    eax,ds:0x1007e030
10059cc4:	xor    eax,ebp
10059cc6:	push   eax
10059cc7:	mov    DWORD PTR [ebp-0x10],esp
10059cca:	push   DWORD PTR [ebp-0x4]
10059ccd:	mov    DWORD PTR [ebp-0x4],0xffffffff
10059cd4:	lea    eax,[ebp-0xc]
10059cd7:	mov    fs:0x0,eax
10059cdd:	ret    
10059cde:	push   eax
10059cdf:	push   DWORD PTR fs:0x0
10059ce6:	lea    eax,[esp+0xc]
10059cea:	sub    esp,DWORD PTR [esp+0xc]
10059cee:	push   ebx
10059cef:	push   esi
10059cf0:	push   edi
10059cf1:	mov    DWORD PTR [eax],ebp
10059cf3:	mov    ebp,eax
10059cf5:	mov    eax,ds:0x1007e030
10059cfa:	xor    eax,ebp
10059cfc:	push   eax
10059cfd:	mov    DWORD PTR [ebp-0x10],eax
10059d00:	push   DWORD PTR [ebp-0x4]
10059d03:	mov    DWORD PTR [ebp-0x4],0xffffffff
10059d0a:	lea    eax,[ebp-0xc]
10059d0d:	mov    fs:0x0,eax
10059d13:	ret    
10059d14:	push   eax
10059d15:	push   DWORD PTR fs:0x0
10059d1c:	lea    eax,[esp+0xc]
10059d20:	sub    esp,DWORD PTR [esp+0xc]
10059d24:	push   ebx
10059d25:	push   esi
10059d26:	push   edi
10059d27:	mov    DWORD PTR [eax],ebp
10059d29:	mov    ebp,eax
10059d2b:	mov    eax,ds:0x1007e030
10059d30:	xor    eax,ebp
10059d32:	push   eax
10059d33:	mov    DWORD PTR [ebp-0x14],eax
10059d36:	mov    DWORD PTR [ebp-0x10],esp
10059d39:	push   DWORD PTR [ebp-0x4]
10059d3c:	mov    DWORD PTR [ebp-0x4],0xffffffff
10059d43:	lea    eax,[ebp-0xc]
10059d46:	mov    fs:0x0,eax
10059d4c:	ret    
10059d4d:	mov    ecx,DWORD PTR [ebp-0xc]
10059d50:	mov    DWORD PTR fs:0x0,ecx
10059d57:	pop    ecx
10059d58:	pop    edi
10059d59:	pop    edi
10059d5a:	pop    esi
10059d5b:	pop    ebx
10059d5c:	mov    esp,ebp
10059d5e:	pop    ebp
10059d5f:	push   ecx
10059d60:	ret    
10059d61:	mov    ecx,DWORD PTR [ebp-0x10]
10059d64:	xor    ecx,ebp
10059d66:	call   0x100430d7
10059d6b:	jmp    0x10059d4d
10059d70:	mov    ecx,DWORD PTR [ebp-0x14]
10059d73:	xor    ecx,ebp
10059d75:	call   0x100430d7
10059d7a:	jmp    0x10059d4d
10059d7f:	int3   
10059d80:	push   esi
10059d81:	inc    ebx
10059d82:	xor    dh,BYTE PTR [eax]
10059d84:	pop    eax
10059d85:	inc    ebx
10059d86:	xor    BYTE PTR [eax],dh
10059d88:	push   ebp
10059d89:	mov    ebp,esp
10059d8b:	sub    esp,0x8
10059d8e:	push   ebx
10059d8f:	push   esi
10059d90:	push   edi
10059d91:	push   ebp
10059d92:	cld    
10059d93:	mov    ebx,DWORD PTR [ebp+0xc]
10059d96:	mov    eax,DWORD PTR [ebp+0x8]
10059d99:	test   DWORD PTR [eax+0x4],0x6
10059da0:	jne    0x10059e69
10059da6:	mov    DWORD PTR [ebp-0x8],eax
10059da9:	mov    eax,DWORD PTR [ebp+0x10]
10059dac:	mov    DWORD PTR [ebp-0x4],eax
10059daf:	lea    eax,[ebp-0x8]
10059db2:	mov    DWORD PTR [ebx-0x4],eax
10059db5:	mov    esi,DWORD PTR [ebx+0xc]
10059db8:	mov    edi,DWORD PTR [ebx+0x8]
10059dbb:	push   ebx
10059dbc:	call   0x1005c870
10059dc1:	add    esp,0x4
10059dc4:	or     eax,eax
10059dc6:	jle    0x10059e5b
10059dcc:	cmp    esi,0xffffffff
10059dcf:	je     0x10059e62
10059dd5:	lea    ecx,[esi+esi*2]
10059dd8:	mov    eax,DWORD PTR [edi+ecx*4+0x4]
10059ddc:	or     eax,eax
10059dde:	je     0x10059e46
10059de0:	push   esi
10059de1:	push   ebp
10059de2:	lea    ebp,[ebx+0x10]
10059de5:	xor    ebx,ebx
10059de7:	xor    ecx,ecx
10059de9:	xor    edx,edx
10059deb:	xor    esi,esi
10059ded:	xor    edi,edi
10059def:	call   eax
10059df1:	pop    ebp
10059df2:	pop    esi
10059df3:	mov    ebx,DWORD PTR [ebp+0xc]
10059df6:	or     eax,eax
10059df8:	je     0x10059e46
10059dfa:	js     0x10059e54
10059dfc:	push   0x1
10059dfe:	push   DWORD PTR [ebp+0x8]
10059e01:	call   0x1005c773
10059e06:	add    esp,0x8
10059e09:	mov    edi,DWORD PTR [ebx+0x8]
10059e0c:	push   ebx
10059e0d:	call   0x1004f9b4
10059e12:	add    esp,0x4
10059e15:	lea    ebp,[ebx+0x10]
10059e18:	push   esi
10059e19:	push   ebx
10059e1a:	call   0x1004fa19
10059e1f:	add    esp,0x8
10059e22:	lea    ecx,[esi+esi*2]
10059e25:	push   0x1
10059e27:	mov    eax,DWORD PTR [edi+ecx*4+0x8]
10059e2b:	call   0x1004fac9
10059e30:	mov    eax,DWORD PTR [edi+ecx*4]
10059e33:	mov    DWORD PTR [ebx+0xc],eax
10059e36:	mov    eax,DWORD PTR [edi+ecx*4+0x8]
10059e3a:	xor    ebx,ebx
10059e3c:	xor    ecx,ecx
10059e3e:	xor    edx,edx
10059e40:	xor    esi,esi
10059e42:	xor    edi,edi
10059e44:	call   eax
10059e46:	mov    edi,DWORD PTR [ebx+0x8]
10059e49:	lea    ecx,[esi+esi*2]
10059e4c:	mov    esi,DWORD PTR [edi+ecx*4]
10059e4f:	jmp    0x10059dcc
10059e54:	mov    eax,0x0
10059e59:	jmp    0x10059e7e
10059e5b:	mov    eax,DWORD PTR [ebp+0x8]
10059e5e:	or     DWORD PTR [eax+0x4],0x8
10059e62:	mov    eax,0x1
10059e67:	jmp    0x10059e7e
10059e69:	push   ebp
10059e6a:	lea    ebp,[ebx+0x10]
10059e6d:	push   0xffffffff
10059e6f:	push   ebx
10059e70:	call   0x1004fa19
10059e75:	add    esp,0x8
10059e78:	pop    ebp
10059e79:	mov    eax,0x1
10059e7e:	pop    ebp
10059e7f:	pop    edi
10059e80:	pop    esi
10059e81:	pop    ebx
10059e82:	mov    esp,ebp
10059e84:	pop    ebp
10059e85:	ret    
10059e86:	push   ebp
10059e87:	mov    ecx,DWORD PTR [esp+0x8]
10059e8b:	mov    ebp,DWORD PTR [ecx]
10059e8d:	mov    eax,DWORD PTR [ecx+0x1c]
10059e90:	push   eax
10059e91:	mov    eax,DWORD PTR [ecx+0x18]
10059e94:	push   eax
10059e95:	call   0x1004fa19
10059e9a:	add    esp,0x8
10059e9d:	pop    ebp
10059e9e:	ret    0x4
10059ea1:	push   ebp
10059ea2:	mov    ebp,esp
10059ea4:	sub    esp,0x28
10059ea7:	push   ebx
10059ea8:	push   esi
10059ea9:	xor    ebx,ebx
10059eab:	test   BYTE PTR [ebp+0x10],0x80
10059eaf:	push   edi
10059eb0:	push   0x10
10059eb2:	mov    esi,eax
10059eb4:	mov    DWORD PTR [ebp-0x14],ebx
10059eb7:	mov    DWORD PTR [ebp-0x18],ebx
10059eba:	mov    BYTE PTR [ebp-0x2],bl
10059ebd:	mov    DWORD PTR [ebp-0x28],0xc
10059ec4:	mov    DWORD PTR [ebp-0x24],ebx
10059ec7:	pop    edi
10059ec8:	je     0x10059ed3
10059eca:	mov    DWORD PTR [ebp-0x20],ebx
10059ecd:	mov    BYTE PTR [ebp-0x1],0x10
10059ed1:	jmp    0x10059edd
10059ed3:	mov    DWORD PTR [ebp-0x20],0x1
10059eda:	mov    BYTE PTR [ebp-0x1],bl
10059edd:	lea    eax,[ebp-0x14]
10059ee0:	push   eax
10059ee1:	call   0x1005ce82
10059ee6:	test   eax,eax
10059ee8:	pop    ecx
10059ee9:	je     0x10059ef8
10059eeb:	push   ebx
10059eec:	push   ebx
10059eed:	push   ebx
10059eee:	push   ebx
10059eef:	push   ebx
10059ef0:	call   0x100434d0
10059ef5:	add    esp,0x14
10059ef8:	lea    eax,[ebp-0x18]
10059efb:	push   eax
10059efc:	call   0x100478e1
10059f01:	test   eax,eax
10059f03:	pop    ecx
10059f04:	je     0x10059f13
10059f06:	push   ebx
10059f07:	push   ebx
10059f08:	push   ebx
10059f09:	push   ebx
10059f0a:	push   ebx
10059f0b:	call   0x100434d0
10059f10:	add    esp,0x14
10059f13:	mov    eax,0x8000
10059f18:	test   DWORD PTR [ebp+0x10],eax
10059f1b:	jne    0x10059f2f
10059f1d:	test   DWORD PTR [ebp+0x10],0x74000
10059f24:	jne    0x10059f2b
10059f26:	cmp    DWORD PTR [ebp-0x14],eax
10059f29:	je     0x10059f2f
10059f2b:	or     BYTE PTR [ebp-0x1],0x80
10059f2f:	mov    eax,DWORD PTR [ebp+0x10]
10059f32:	push   0x3
10059f34:	pop    edx
10059f35:	and    eax,edx
10059f37:	sub    eax,ebx
10059f39:	mov    ecx,0x80000000
10059f3e:	je     0x10059f7e
10059f40:	dec    eax
10059f41:	je     0x10059f75
10059f43:	dec    eax
10059f44:	je     0x10059f6c
10059f46:	call   0x10046e08
10059f4b:	mov    DWORD PTR [eax],ebx
10059f4d:	or     DWORD PTR [esi],0xffffffff
10059f50:	call   0x10046df5
10059f55:	push   0x16
10059f57:	pop    esi
10059f58:	push   ebx
10059f59:	push   ebx
10059f5a:	push   ebx
10059f5b:	push   ebx
10059f5c:	push   ebx
10059f5d:	mov    DWORD PTR [eax],esi
10059f5f:	call   0x100435cc
10059f64:	add    esp,0x14
10059f67:	jmp    0x1005a3fb
10059f6c:	mov    DWORD PTR [ebp-0xc],0xc0000000
10059f73:	jmp    0x10059f81
10059f75:	mov    DWORD PTR [ebp-0xc],0x40000000
10059f7c:	jmp    0x10059f81
10059f7e:	mov    DWORD PTR [ebp-0xc],ecx
10059f81:	mov    eax,DWORD PTR [ebp+0x14]
10059f84:	sub    eax,edi
10059f86:	je     0x10059fbd
10059f88:	sub    eax,edi
10059f8a:	je     0x10059fb4
10059f8c:	sub    eax,edi
10059f8e:	je     0x10059fab
10059f90:	sub    eax,edi
10059f92:	je     0x10059fa6
10059f94:	sub    eax,0x40
10059f97:	jne    0x10059f46
10059f99:	xor    eax,eax
10059f9b:	cmp    DWORD PTR [ebp-0xc],ecx
10059f9e:	sete   al
10059fa1:	mov    DWORD PTR [ebp-0x8],eax
10059fa4:	jmp    0x10059fc0
10059fa6:	mov    DWORD PTR [ebp-0x8],edx
10059fa9:	jmp    0x10059fc0
10059fab:	mov    DWORD PTR [ebp-0x8],0x2
10059fb2:	jmp    0x10059fc0
10059fb4:	mov    DWORD PTR [ebp-0x8],0x1
10059fbb:	jmp    0x10059fc0
10059fbd:	mov    DWORD PTR [ebp-0x8],ebx
10059fc0:	mov    eax,DWORD PTR [ebp+0x10]
10059fc3:	mov    edx,0x700
10059fc8:	and    eax,edx
10059fca:	mov    ecx,0x400
10059fcf:	cmp    eax,ecx
10059fd1:	jg     0x1005a011
10059fd3:	je     0x1005a008
10059fd5:	cmp    eax,ebx
10059fd7:	je     0x1005a008
10059fd9:	cmp    eax,0x100
10059fde:	je     0x10059fff
10059fe0:	cmp    eax,0x200
10059fe5:	je     0x1005a083
10059feb:	cmp    eax,0x300
10059ff0:	jne    0x10059f46
10059ff6:	mov    DWORD PTR [ebp-0x10],0x2
10059ffd:	jmp    0x1005a02e
10059fff:	mov    DWORD PTR [ebp-0x10],0x4
1005a006:	jmp    0x1005a02e
1005a008:	mov    DWORD PTR [ebp-0x10],0x3
1005a00f:	jmp    0x1005a02e
1005a011:	cmp    eax,0x500
1005a016:	je     0x1005a027
1005a018:	cmp    eax,0x600
1005a01d:	je     0x1005a083
1005a01f:	cmp    eax,edx
1005a021:	jne    0x10059f46
1005a027:	mov    DWORD PTR [ebp-0x10],0x1
1005a02e:	mov    ecx,DWORD PTR [ebp+0x10]
1005a031:	mov    eax,0x100
1005a036:	test   eax,ecx
1005a038:	mov    edi,0x80
1005a03d:	je     0x1005a051
1005a03f:	mov    edx,DWORD PTR ds:0x1007fde4
1005a045:	not    edx
1005a047:	and    edx,DWORD PTR [ebp+0x18]
1005a04a:	test   dl,dl
1005a04c:	js     0x1005a051
1005a04e:	xor    edi,edi
1005a050:	inc    edi
1005a051:	test   cl,0x40
1005a054:	je     0x1005a06d
1005a056:	or     DWORD PTR [ebp-0xc],0x10000
1005a05d:	or     edi,0x4000000
1005a063:	cmp    DWORD PTR [ebp-0x18],0x2
1005a067:	jne    0x1005a06d
1005a069:	or     DWORD PTR [ebp-0x8],0x4
1005a06d:	test   cx,0x1000
1005a072:	je     0x1005a076
1005a074:	or     edi,eax
1005a076:	test   cl,0x20
1005a079:	je     0x1005a08c
1005a07b:	or     edi,0x8000000
1005a081:	jmp    0x1005a097
1005a083:	mov    DWORD PTR [ebp-0x10],0x5
1005a08a:	jmp    0x1005a02e
1005a08c:	test   cl,0x10
1005a08f:	je     0x1005a097
1005a091:	or     edi,0x10000000
1005a097:	call   0x1004fd32
1005a09c:	cmp    eax,0xffffffff
1005a09f:	mov    DWORD PTR [esi],eax
1005a0a1:	jne    0x1005a0ba
1005a0a3:	call   0x10046e08
1005a0a8:	mov    DWORD PTR [eax],ebx
1005a0aa:	or     DWORD PTR [esi],0xffffffff
1005a0ad:	call   0x10046df5
1005a0b2:	mov    DWORD PTR [eax],0x18
1005a0b8:	jmp    0x1005a10a
1005a0ba:	mov    eax,DWORD PTR [ebp+0x8]
1005a0bd:	push   ebx
1005a0be:	push   edi
1005a0bf:	push   DWORD PTR [ebp-0x10]
1005a0c2:	mov    DWORD PTR [eax],0x1
1005a0c8:	lea    eax,[ebp-0x28]
1005a0cb:	push   eax
1005a0cc:	push   DWORD PTR [ebp-0x8]
1005a0cf:	push   DWORD PTR [ebp-0xc]
1005a0d2:	push   DWORD PTR [ebp+0xc]
1005a0d5:	call   DWORD PTR ds:0x10066254
1005a0db:	mov    edi,eax
1005a0dd:	cmp    edi,0xffffffff
1005a0e0:	jne    0x1005a116
1005a0e2:	mov    esi,DWORD PTR [esi]
1005a0e4:	mov    eax,esi
1005a0e6:	and    esi,0x1f
1005a0e9:	imul   esi,esi,0x28
1005a0ec:	sar    eax,0x5
1005a0ef:	mov    eax,DWORD PTR [eax*4+0x10082480]
1005a0f6:	lea    eax,[eax+esi*1+0x4]
1005a0fa:	and    BYTE PTR [eax],0xfe
1005a0fd:	call   DWORD PTR ds:0x100660cc
1005a103:	push   eax
1005a104:	call   0x10046e1b
1005a109:	pop    ecx
1005a10a:	call   0x10046df5
1005a10f:	mov    eax,DWORD PTR [eax]
1005a111:	jmp    0x1005a4da
1005a116:	push   edi
1005a117:	call   DWORD PTR ds:0x100661f4
1005a11d:	cmp    eax,ebx
1005a11f:	jne    0x1005a145
1005a121:	mov    esi,DWORD PTR [esi]
1005a123:	mov    eax,esi
1005a125:	and    esi,0x1f
1005a128:	imul   esi,esi,0x28
1005a12b:	sar    eax,0x5
1005a12e:	mov    eax,DWORD PTR [eax*4+0x10082480]
1005a135:	lea    eax,[eax+esi*1+0x4]
1005a139:	and    BYTE PTR [eax],0xfe
1005a13c:	push   edi
1005a13d:	call   DWORD PTR ds:0x10066070
1005a143:	jmp    0x1005a0fd
1005a145:	cmp    eax,0x2
1005a148:	jne    0x1005a150
1005a14a:	or     BYTE PTR [ebp-0x1],0x40
1005a14e:	jmp    0x1005a159
1005a150:	cmp    eax,0x3
1005a153:	jne    0x1005a159
1005a155:	or     BYTE PTR [ebp-0x1],0x8
1005a159:	push   edi
1005a15a:	push   DWORD PTR [esi]
1005a15c:	call   0x1004fb01
1005a161:	mov    eax,DWORD PTR [esi]
1005a163:	mov    edx,eax
1005a165:	and    eax,0x1f
1005a168:	imul   eax,eax,0x28
1005a16b:	sar    edx,0x5
1005a16e:	mov    edx,DWORD PTR [edx*4+0x10082480]
1005a175:	pop    ecx
1005a176:	pop    ecx
1005a177:	mov    cl,BYTE PTR [ebp-0x1]
1005a17a:	or     cl,0x1
1005a17d:	mov    BYTE PTR [edx+eax*1+0x4],cl
1005a181:	mov    eax,DWORD PTR [esi]
1005a183:	mov    edx,eax
1005a185:	and    eax,0x1f
1005a188:	imul   eax,eax,0x28
1005a18b:	sar    edx,0x5
1005a18e:	mov    edx,DWORD PTR [edx*4+0x10082480]
1005a195:	lea    eax,[edx+eax*1+0x24]
1005a199:	and    BYTE PTR [eax],0x80
1005a19c:	mov    BYTE PTR [ebp-0x3],cl
1005a19f:	and    BYTE PTR [ebp-0x3],0x48
1005a1a3:	mov    BYTE PTR [ebp-0x1],cl
1005a1a6:	jne    0x1005a22c
1005a1ac:	test   cl,0x80
1005a1af:	je     0x1005a466
1005a1b5:	test   BYTE PTR [ebp+0x10],0x2
1005a1b9:	je     0x1005a22c
1005a1bb:	push   0x2
1005a1bd:	or     edi,0xffffffff
1005a1c0:	push   edi
1005a1c1:	push   DWORD PTR [esi]
1005a1c3:	call   0x1005902e
1005a1c8:	add    esp,0xc
1005a1cb:	cmp    eax,edi
1005a1cd:	mov    DWORD PTR [ebp-0x8],eax
1005a1d0:	jne    0x1005a1eb
1005a1d2:	call   0x10046e08
1005a1d7:	cmp    DWORD PTR [eax],0x83
1005a1dd:	je     0x1005a22c
1005a1df:	push   DWORD PTR [esi]
1005a1e1:	call   0x10050991
1005a1e6:	jmp    0x1005a109
1005a1eb:	push   0x1
1005a1ed:	lea    eax,[ebp-0x4]
1005a1f0:	push   eax
1005a1f1:	push   DWORD PTR [esi]
1005a1f3:	mov    BYTE PTR [ebp-0x4],bl
1005a1f6:	call   0x1005879a
1005a1fb:	add    esp,0xc
1005a1fe:	test   eax,eax
1005a200:	jne    0x1005a21c
1005a202:	cmp    BYTE PTR [ebp-0x4],0x1a
1005a206:	jne    0x1005a21c
1005a208:	mov    eax,DWORD PTR [ebp-0x8]
1005a20b:	cdq    
1005a20c:	push   edx
1005a20d:	push   eax
1005a20e:	push   DWORD PTR [esi]
1005a210:	call   0x1005cc12
1005a215:	add    esp,0xc
1005a218:	cmp    eax,edi
1005a21a:	je     0x1005a1df
1005a21c:	push   ebx
1005a21d:	push   ebx
1005a21e:	push   DWORD PTR [esi]
1005a220:	call   0x1005902e
1005a225:	add    esp,0xc
1005a228:	cmp    eax,edi
1005a22a:	je     0x1005a1df
1005a22c:	test   BYTE PTR [ebp-0x1],0x80
1005a230:	je     0x1005a466
1005a236:	mov    ecx,0x74000
1005a23b:	test   DWORD PTR [ebp+0x10],ecx
1005a23e:	mov    edi,0x4000
1005a243:	jne    0x1005a254
1005a245:	mov    eax,DWORD PTR [ebp-0x14]
1005a248:	and    eax,ecx
1005a24a:	jne    0x1005a251
1005a24c:	or     DWORD PTR [ebp+0x10],edi
1005a24f:	jmp    0x1005a254
1005a251:	or     DWORD PTR [ebp+0x10],eax
1005a254:	mov    eax,DWORD PTR [ebp+0x10]
1005a257:	and    eax,ecx
1005a259:	cmp    eax,edi
1005a25b:	je     0x1005a2a1
1005a25d:	cmp    eax,0x10000
1005a262:	je     0x1005a28d
1005a264:	cmp    eax,0x14000
1005a269:	je     0x1005a28d
1005a26b:	cmp    eax,0x20000
1005a270:	je     0x1005a29b
1005a272:	cmp    eax,0x24000
1005a277:	je     0x1005a29b
1005a279:	cmp    eax,0x40000
1005a27e:	je     0x1005a287
1005a280:	cmp    eax,0x44000
1005a285:	jne    0x1005a2a4
1005a287:	mov    BYTE PTR [ebp-0x2],0x1
1005a28b:	jmp    0x1005a2a4
1005a28d:	mov    ecx,DWORD PTR [ebp+0x10]
1005a290:	mov    eax,0x301
1005a295:	and    ecx,eax
1005a297:	cmp    ecx,eax
1005a299:	jne    0x1005a2a4
1005a29b:	mov    BYTE PTR [ebp-0x2],0x2
1005a29f:	jmp    0x1005a2a4
1005a2a1:	mov    BYTE PTR [ebp-0x2],bl
1005a2a4:	test   DWORD PTR [ebp+0x10],0x70000
1005a2ab:	je     0x1005a466
1005a2b1:	test   BYTE PTR [ebp-0x1],0x40
1005a2b5:	mov    DWORD PTR [ebp-0x8],ebx
1005a2b8:	jne    0x1005a466
1005a2be:	mov    eax,DWORD PTR [ebp-0xc]
1005a2c1:	mov    ecx,0xc0000000
1005a2c6:	and    eax,ecx
1005a2c8:	cmp    eax,0x40000000
1005a2cd:	je     0x1005a38a
1005a2d3:	cmp    eax,0x80000000
1005a2d8:	je     0x1005a351
1005a2da:	cmp    eax,ecx
1005a2dc:	jne    0x1005a466
1005a2e2:	mov    eax,DWORD PTR [ebp-0x10]
1005a2e5:	cmp    eax,ebx
1005a2e7:	jbe    0x1005a466
1005a2ed:	cmp    eax,0x2
1005a2f0:	jbe    0x1005a300
1005a2f2:	cmp    eax,0x4
1005a2f5:	jbe    0x1005a327
1005a2f7:	cmp    eax,0x5
1005a2fa:	jne    0x1005a466
1005a300:	movsx  eax,BYTE PTR [ebp-0x2]
1005a304:	xor    edi,edi
1005a306:	dec    eax
1005a307:	je     0x1005a433
1005a30d:	dec    eax
1005a30e:	jne    0x1005a466
1005a314:	mov    DWORD PTR [ebp-0x8],0xfeff
1005a31b:	mov    DWORD PTR [ebp-0x10],0x2
1005a322:	jmp    0x1005a441
1005a327:	push   0x2
1005a329:	push   ebx
1005a32a:	push   ebx
1005a32b:	push   DWORD PTR [esi]
1005a32d:	call   0x1004c9b1
1005a332:	add    esp,0x10
1005a335:	or     eax,edx
1005a337:	je     0x1005a300
1005a339:	push   ebx
1005a33a:	push   ebx
1005a33b:	push   ebx
1005a33c:	push   DWORD PTR [esi]
1005a33e:	call   0x1004c9b1
1005a343:	and    eax,edx
1005a345:	add    esp,0x10
1005a348:	cmp    eax,0xffffffff
1005a34b:	je     0x1005a1df
1005a351:	push   0x3
1005a353:	lea    eax,[ebp-0x8]
1005a356:	push   eax
1005a357:	push   DWORD PTR [esi]
1005a359:	call   0x1005879a
1005a35e:	add    esp,0xc
1005a361:	cmp    eax,0xffffffff
1005a364:	je     0x1005a1df
1005a36a:	cmp    eax,0x2
1005a36d:	je     0x1005a3da
1005a36f:	cmp    eax,0x3
1005a372:	jne    0x1005a425
1005a378:	cmp    DWORD PTR [ebp-0x8],0xbfbbef
1005a37f:	jne    0x1005a3da
1005a381:	mov    BYTE PTR [ebp-0x2],0x1
1005a385:	jmp    0x1005a466
1005a38a:	mov    eax,DWORD PTR [ebp-0x10]
1005a38d:	cmp    eax,ebx
1005a38f:	jbe    0x1005a466
1005a395:	cmp    eax,0x2
1005a398:	jbe    0x1005a300
1005a39e:	cmp    eax,0x4
1005a3a1:	ja     0x1005a2f7
1005a3a7:	push   0x2
1005a3a9:	push   ebx
1005a3aa:	push   ebx
1005a3ab:	push   DWORD PTR [esi]
1005a3ad:	call   0x1004c9b1
1005a3b2:	add    esp,0x10
1005a3b5:	or     eax,edx
1005a3b7:	je     0x1005a300
1005a3bd:	push   ebx
1005a3be:	push   ebx
1005a3bf:	push   ebx
1005a3c0:	push   DWORD PTR [esi]
1005a3c2:	call   0x1004c9b1
1005a3c7:	add    esp,0x10
1005a3ca:	and    eax,edx
1005a3cc:	cmp    eax,0xffffffff
1005a3cf:	jne    0x1005a466
1005a3d5:	jmp    0x1005a1df
1005a3da:	mov    eax,DWORD PTR [ebp-0x8]
1005a3dd:	and    eax,0xffff
1005a3e2:	cmp    eax,0xfffe
1005a3e7:	jne    0x1005a402
1005a3e9:	push   DWORD PTR [esi]
1005a3eb:	call   0x10050991
1005a3f0:	pop    ecx
1005a3f1:	call   0x10046df5
1005a3f6:	push   0x16
1005a3f8:	pop    esi
1005a3f9:	mov    DWORD PTR [eax],esi
1005a3fb:	mov    eax,esi
1005a3fd:	jmp    0x1005a4da
1005a402:	cmp    eax,0xfeff
1005a407:	jne    0x1005a425
1005a409:	push   ebx
1005a40a:	push   0x2
1005a40c:	push   DWORD PTR [esi]
1005a40e:	call   0x1005902e
1005a413:	add    esp,0xc
1005a416:	cmp    eax,0xffffffff
1005a419:	je     0x1005a1df
1005a41f:	mov    BYTE PTR [ebp-0x2],0x2
1005a423:	jmp    0x1005a466
1005a425:	push   ebx
1005a426:	push   ebx
1005a427:	push   DWORD PTR [esi]
1005a429:	call   0x1005902e
1005a42e:	add    esp,0xc
1005a431:	jmp    0x1005a3cc
1005a433:	mov    DWORD PTR [ebp-0x8],0xbfbbef
1005a43a:	mov    DWORD PTR [ebp-0x10],0x3
1005a441:	mov    eax,DWORD PTR [ebp-0x10]
1005a444:	sub    eax,edi
1005a446:	push   eax
1005a447:	lea    eax,[ebp+edi*1-0x8]
1005a44b:	push   eax
1005a44c:	push   DWORD PTR [esi]
1005a44e:	call   0x1004d113
1005a453:	add    esp,0xc
1005a456:	cmp    eax,0xffffffff
1005a459:	je     0x1005a1df
1005a45f:	add    edi,eax
1005a461:	cmp    DWORD PTR [ebp-0x10],edi
1005a464:	jg     0x1005a441
1005a466:	mov    eax,DWORD PTR [esi]
1005a468:	mov    ecx,eax
1005a46a:	and    eax,0x1f
1005a46d:	imul   eax,eax,0x28
1005a470:	sar    ecx,0x5
1005a473:	mov    ecx,DWORD PTR [ecx*4+0x10082480]
1005a47a:	lea    eax,[ecx+eax*1+0x24]
1005a47e:	mov    cl,BYTE PTR [eax]
1005a480:	xor    cl,BYTE PTR [ebp-0x2]
1005a483:	and    cl,0x7f
1005a486:	xor    BYTE PTR [eax],cl
1005a488:	mov    eax,DWORD PTR [esi]
1005a48a:	mov    ecx,eax
1005a48c:	and    eax,0x1f
1005a48f:	imul   eax,eax,0x28
1005a492:	sar    ecx,0x5
1005a495:	mov    ecx,DWORD PTR [ecx*4+0x10082480]
1005a49c:	lea    eax,[ecx+eax*1+0x24]
1005a4a0:	mov    ecx,DWORD PTR [ebp+0x10]
1005a4a3:	mov    dl,BYTE PTR [eax]
1005a4a5:	shr    ecx,0x10
1005a4a8:	shl    cl,0x7
1005a4ab:	and    dl,0x7f
1005a4ae:	or     cl,dl
1005a4b0:	cmp    BYTE PTR [ebp-0x3],bl
1005a4b3:	mov    BYTE PTR [eax],cl
1005a4b5:	jne    0x1005a4d8
1005a4b7:	test   BYTE PTR [ebp+0x10],0x8
1005a4bb:	je     0x1005a4d8
1005a4bd:	mov    esi,DWORD PTR [esi]
1005a4bf:	mov    eax,esi
1005a4c1:	and    esi,0x1f
1005a4c4:	imul   esi,esi,0x28
1005a4c7:	sar    eax,0x5
1005a4ca:	mov    eax,DWORD PTR [eax*4+0x10082480]
1005a4d1:	lea    eax,[eax+esi*1+0x4]
1005a4d5:	or     BYTE PTR [eax],0x20
1005a4d8:	mov    eax,ebx
1005a4da:	pop    edi
1005a4db:	pop    esi
1005a4dc:	pop    ebx
1005a4dd:	leave  
1005a4de:	ret    
1005a4df:	push   0x14
1005a4e1:	push   0x10074ba0
1005a4e6:	call   0x10046f34
1005a4eb:	xor    esi,esi
1005a4ed:	mov    DWORD PTR [ebp-0x1c],esi
1005a4f0:	xor    eax,eax
1005a4f2:	mov    edi,DWORD PTR [ebp+0x18]
1005a4f5:	cmp    edi,esi
1005a4f7:	setne  al
1005a4fa:	cmp    eax,esi
1005a4fc:	jne    0x1005a519
1005a4fe:	call   0x10046df5
1005a503:	push   0x16
1005a505:	pop    edi
1005a506:	mov    DWORD PTR [eax],edi
1005a508:	push   esi
1005a509:	push   esi
1005a50a:	push   esi
1005a50b:	push   esi
1005a50c:	push   esi
1005a50d:	call   0x100435cc
1005a512:	add    esp,0x14
1005a515:	mov    eax,edi
1005a517:	jmp    0x1005a572
1005a519:	or     DWORD PTR [edi],0xffffffff
1005a51c:	xor    eax,eax
1005a51e:	cmp    DWORD PTR [ebp+0x8],esi
1005a521:	setne  al
1005a524:	cmp    eax,esi
1005a526:	je     0x1005a4fe
1005a528:	cmp    DWORD PTR [ebp+0x1c],esi
1005a52b:	je     0x1005a53c
1005a52d:	mov    eax,DWORD PTR [ebp+0x14]
1005a530:	and    eax,0xfffffe7f
1005a535:	neg    eax
1005a537:	sbb    eax,eax
1005a539:	inc    eax
1005a53a:	je     0x1005a4fe
1005a53c:	mov    DWORD PTR [ebp-0x4],esi
1005a53f:	push   DWORD PTR [ebp+0x14]
1005a542:	push   DWORD PTR [ebp+0x10]
1005a545:	push   DWORD PTR [ebp+0xc]
1005a548:	push   DWORD PTR [ebp+0x8]
1005a54b:	lea    eax,[ebp-0x1c]
1005a54e:	push   eax
1005a54f:	mov    eax,edi
1005a551:	call   0x10059ea1
1005a556:	add    esp,0x14
1005a559:	mov    DWORD PTR [ebp-0x20],eax
1005a55c:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1005a563:	call   0x1005a57d
1005a568:	mov    eax,DWORD PTR [ebp-0x20]
1005a56b:	cmp    eax,esi
1005a56d:	je     0x1005a572
1005a56f:	or     DWORD PTR [edi],0xffffffff
1005a572:	call   0x10046f79
1005a577:	ret    
1005a578:	xor    esi,esi
1005a57a:	mov    edi,DWORD PTR [ebp+0x18]
1005a57d:	cmp    DWORD PTR [ebp-0x1c],esi
1005a580:	je     0x1005a5aa
1005a582:	cmp    DWORD PTR [ebp-0x20],esi
1005a585:	je     0x1005a5a2
1005a587:	mov    eax,DWORD PTR [edi]
1005a589:	mov    ecx,eax
1005a58b:	sar    ecx,0x5
1005a58e:	and    eax,0x1f
1005a591:	imul   eax,eax,0x28
1005a594:	mov    ecx,DWORD PTR [ecx*4+0x10082480]
1005a59b:	lea    eax,[ecx+eax*1+0x4]
1005a59f:	and    BYTE PTR [eax],0xfe
1005a5a2:	push   DWORD PTR [edi]
1005a5a4:	call   0x1004fd10
1005a5a9:	pop    ecx
1005a5aa:	ret    
1005a5ab:	push   ebp
1005a5ac:	mov    ebp,esp
1005a5ae:	push   0x1
1005a5b0:	push   DWORD PTR [ebp+0x8]
1005a5b3:	push   DWORD PTR [ebp+0x18]
1005a5b6:	push   DWORD PTR [ebp+0x14]
1005a5b9:	push   DWORD PTR [ebp+0x10]
1005a5bc:	push   DWORD PTR [ebp+0xc]
1005a5bf:	call   0x1005a4df
1005a5c4:	add    esp,0x18
1005a5c7:	pop    ebp
1005a5c8:	ret    
1005a5c9:	push   ebp
1005a5ca:	mov    ebp,esp
1005a5cc:	sub    esp,0x10
1005a5cf:	mov    eax,ds:0x10080bf4
1005a5d4:	push   ebx
1005a5d5:	xor    ebx,ebx
1005a5d7:	push   esi
1005a5d8:	mov    esi,DWORD PTR [ebp+0xc]
1005a5db:	mov    DWORD PTR [ebp-0x4],eax
1005a5de:	mov    DWORD PTR [ebp-0xc],ebx
1005a5e1:	mov    DWORD PTR [ebp-0x8],ebx
1005a5e4:	mov    DWORD PTR [ebp-0x10],ebx
1005a5e7:	jmp    0x1005a5ea
1005a5e9:	inc    esi
1005a5ea:	cmp    BYTE PTR [esi],0x20
1005a5ed:	je     0x1005a5e9
1005a5ef:	mov    al,BYTE PTR [esi]
1005a5f1:	cmp    al,0x61
1005a5f3:	je     0x1005a62e
1005a5f5:	cmp    al,0x72
1005a5f7:	je     0x1005a625
1005a5f9:	cmp    al,0x77
1005a5fb:	je     0x1005a61c
1005a5fd:	call   0x10046df5
1005a602:	push   ebx
1005a603:	push   ebx
1005a604:	push   ebx
1005a605:	push   ebx
1005a606:	push   ebx
1005a607:	mov    DWORD PTR [eax],0x16
1005a60d:	call   0x100435cc
1005a612:	add    esp,0x14
1005a615:	xor    eax,eax
1005a617:	jmp    0x1005a867
1005a61c:	mov    DWORD PTR [ebp+0xc],0x301
1005a623:	jmp    0x1005a635
1005a625:	or     DWORD PTR [ebp-0x4],0x1
1005a629:	mov    DWORD PTR [ebp+0xc],ebx
1005a62c:	jmp    0x1005a639
1005a62e:	mov    DWORD PTR [ebp+0xc],0x109
1005a635:	or     DWORD PTR [ebp-0x4],0x2
1005a639:	xor    ecx,ecx
1005a63b:	inc    ecx
1005a63c:	inc    esi
1005a63d:	mov    al,BYTE PTR [esi]
1005a63f:	cmp    al,bl
1005a641:	push   edi
1005a642:	je     0x1005a801
1005a648:	mov    edx,0x80
1005a64d:	mov    edi,0x4000
1005a652:	cmp    ecx,ebx
1005a654:	je     0x1005a785
1005a65a:	movsx  eax,al
1005a65d:	cmp    eax,0x53
1005a660:	jg     0x1005a708
1005a666:	je     0x1005a6f6
1005a66c:	sub    eax,0x20
1005a66f:	je     0x1005a77a
1005a675:	sub    eax,0xb
1005a678:	je     0x1005a6d0
1005a67a:	dec    eax
1005a67b:	je     0x1005a6c4
1005a67d:	sub    eax,0x18
1005a680:	je     0x1005a6b1
1005a682:	sub    eax,0xa
1005a685:	je     0x1005a6a9
1005a687:	sub    eax,0x4
1005a68a:	jne    0x1005a80a
1005a690:	cmp    DWORD PTR [ebp-0x8],ebx
1005a693:	jne    0x1005a76f
1005a699:	or     DWORD PTR [ebp+0xc],0x10
1005a69d:	mov    DWORD PTR [ebp-0x8],0x1
1005a6a4:	jmp    0x1005a77a
1005a6a9:	or     DWORD PTR [ebp+0xc],edx
1005a6ac:	jmp    0x1005a77a
1005a6b1:	test   BYTE PTR [ebp+0xc],0x40
1005a6b5:	jne    0x1005a76f
1005a6bb:	or     DWORD PTR [ebp+0xc],0x40
1005a6bf:	jmp    0x1005a77a
1005a6c4:	mov    DWORD PTR [ebp-0x10],0x1
1005a6cb:	jmp    0x1005a76f
1005a6d0:	test   BYTE PTR [ebp+0xc],0x2
1005a6d4:	jne    0x1005a76f
1005a6da:	mov    eax,DWORD PTR [ebp+0xc]
1005a6dd:	and    eax,0xfffffffe
1005a6e0:	or     eax,0x2
1005a6e3:	mov    DWORD PTR [ebp+0xc],eax
1005a6e6:	mov    eax,DWORD PTR [ebp-0x4]
1005a6e9:	and    eax,0xfffffffc
1005a6ec:	or     eax,edx
1005a6ee:	mov    DWORD PTR [ebp-0x4],eax
1005a6f1:	jmp    0x1005a77a
1005a6f6:	cmp    DWORD PTR [ebp-0x8],ebx
1005a6f9:	jne    0x1005a76f
1005a6fb:	or     DWORD PTR [ebp+0xc],0x20
1005a6ff:	mov    DWORD PTR [ebp-0x8],0x1
1005a706:	jmp    0x1005a77a
1005a708:	sub    eax,0x54
1005a70b:	je     0x1005a767
1005a70d:	sub    eax,0xe
1005a710:	je     0x1005a756
1005a712:	dec    eax
1005a713:	je     0x1005a745
1005a715:	sub    eax,0xb
1005a718:	je     0x1005a730
1005a71a:	sub    eax,0x6
1005a71d:	jne    0x1005a80a
1005a723:	test   WORD PTR [ebp+0xc],0xc000
1005a729:	jne    0x1005a76f
1005a72b:	or     DWORD PTR [ebp+0xc],edi
1005a72e:	jmp    0x1005a77a
1005a730:	cmp    DWORD PTR [ebp-0xc],ebx
1005a733:	jne    0x1005a76f
1005a735:	and    DWORD PTR [ebp-0x4],0xffffbfff
1005a73c:	mov    DWORD PTR [ebp-0xc],0x1
1005a743:	jmp    0x1005a77a
1005a745:	cmp    DWORD PTR [ebp-0xc],ebx
1005a748:	jne    0x1005a76f
1005a74a:	or     DWORD PTR [ebp-0x4],edi
1005a74d:	mov    DWORD PTR [ebp-0xc],0x1
1005a754:	jmp    0x1005a77a
1005a756:	test   WORD PTR [ebp+0xc],0xc000
1005a75c:	jne    0x1005a76f
1005a75e:	or     DWORD PTR [ebp+0xc],0x8000
1005a765:	jmp    0x1005a77a
1005a767:	test   WORD PTR [ebp+0xc],0x1000
1005a76d:	je     0x1005a773
1005a76f:	xor    ecx,ecx
1005a771:	jmp    0x1005a77a
1005a773:	or     DWORD PTR [ebp+0xc],0x1000
1005a77a:	inc    esi
1005a77b:	mov    al,BYTE PTR [esi]
1005a77d:	cmp    al,bl
1005a77f:	jne    0x1005a652
1005a785:	cmp    DWORD PTR [ebp-0x10],ebx
1005a788:	je     0x1005a801
1005a78a:	jmp    0x1005a78d
1005a78c:	inc    esi
1005a78d:	cmp    BYTE PTR [esi],0x20
1005a790:	je     0x1005a78c
1005a792:	push   0x4
1005a794:	push   esi
1005a795:	push   0x1006cac4
1005a79a:	call   0x1005d01f
1005a79f:	add    esp,0xc
1005a7a2:	test   eax,eax
1005a7a4:	jne    0x1005a80a
1005a7a6:	add    esi,0x4
1005a7a9:	push   0x1006cacc
1005a7ae:	push   esi
1005a7af:	call   0x1005c69a
1005a7b4:	test   eax,eax
1005a7b6:	pop    ecx
1005a7b7:	pop    ecx
1005a7b8:	jne    0x1005a7c6
1005a7ba:	add    esi,0x5
1005a7bd:	or     DWORD PTR [ebp+0xc],0x40000
1005a7c4:	jmp    0x1005a801
1005a7c6:	push   0x1006cad4
1005a7cb:	push   esi
1005a7cc:	call   0x1005c69a
1005a7d1:	test   eax,eax
1005a7d3:	pop    ecx
1005a7d4:	pop    ecx
1005a7d5:	jne    0x1005a7e3
1005a7d7:	add    esi,0x8
1005a7da:	or     DWORD PTR [ebp+0xc],0x20000
1005a7e1:	jmp    0x1005a801
1005a7e3:	push   0x1006cae0
1005a7e8:	push   esi
1005a7e9:	call   0x1005c69a
1005a7ee:	test   eax,eax
1005a7f0:	pop    ecx
1005a7f1:	pop    ecx
1005a7f2:	jne    0x1005a80a
1005a7f4:	add    esi,0x7
1005a7f7:	or     DWORD PTR [ebp+0xc],0x10000
1005a7fe:	jmp    0x1005a801
1005a800:	inc    esi
1005a801:	cmp    BYTE PTR [esi],0x20
1005a804:	je     0x1005a800
1005a806:	cmp    BYTE PTR [esi],bl
1005a808:	je     0x1005a824
1005a80a:	call   0x10046df5
1005a80f:	push   ebx
1005a810:	push   ebx
1005a811:	push   ebx
1005a812:	push   ebx
1005a813:	push   ebx
1005a814:	mov    DWORD PTR [eax],0x16
1005a81a:	call   0x100435cc
1005a81f:	add    esp,0x14
1005a822:	jmp    0x1005a842
1005a824:	push   0x180
1005a829:	push   DWORD PTR [ebp+0x10]
1005a82c:	lea    eax,[ebp-0x10]
1005a82f:	push   DWORD PTR [ebp+0xc]
1005a832:	push   DWORD PTR [ebp+0x8]
1005a835:	push   eax
1005a836:	call   0x1005a5ab
1005a83b:	add    esp,0x14
1005a83e:	test   eax,eax
1005a840:	je     0x1005a846
1005a842:	xor    eax,eax
1005a844:	jmp    0x1005a866
1005a846:	mov    eax,DWORD PTR [ebp+0x14]
1005a849:	inc    DWORD PTR ds:0x1008046c
1005a84f:	mov    ecx,DWORD PTR [ebp-0x4]
1005a852:	mov    DWORD PTR [eax+0xc],ecx
1005a855:	mov    ecx,DWORD PTR [ebp-0x10]
1005a858:	mov    DWORD PTR [eax+0x4],ebx
1005a85b:	mov    DWORD PTR [eax],ebx
1005a85d:	mov    DWORD PTR [eax+0x8],ebx
1005a860:	mov    DWORD PTR [eax+0x1c],ebx
1005a863:	mov    DWORD PTR [eax+0x10],ecx
1005a866:	pop    edi
1005a867:	pop    esi
1005a868:	pop    ebx
1005a869:	leave  
1005a86a:	ret    
1005a86b:	push   0x10
1005a86d:	push   0x10074bc0
1005a872:	call   0x10046f34
1005a877:	xor    ebx,ebx
1005a879:	xor    edi,edi
1005a87b:	mov    DWORD PTR [ebp-0x1c],edi
1005a87e:	push   0x1
1005a880:	call   0x10047f3d
1005a885:	pop    ecx
1005a886:	mov    DWORD PTR [ebp-0x4],ebx
1005a889:	xor    esi,esi
1005a88b:	mov    DWORD PTR [ebp-0x20],esi
1005a88e:	cmp    esi,DWORD PTR ds:0x10082460
1005a894:	jge    0x1005a95b
1005a89a:	mov    eax,ds:0x10081440
1005a89f:	lea    eax,[eax+esi*4]
1005a8a2:	cmp    DWORD PTR [eax],ebx
1005a8a4:	je     0x1005a8f6
1005a8a6:	mov    eax,DWORD PTR [eax]
1005a8a8:	test   BYTE PTR [eax+0xc],0x83
1005a8ac:	jne    0x1005a8ef
1005a8ae:	lea    eax,[esi-0x3]
1005a8b1:	cmp    eax,0x10
1005a8b4:	ja     0x1005a8c8
1005a8b6:	lea    eax,[esi+0x10]
1005a8b9:	push   eax
1005a8ba:	call   0x10047e7a
1005a8bf:	pop    ecx
1005a8c0:	test   eax,eax
1005a8c2:	je     0x1005a95b
1005a8c8:	mov    eax,ds:0x10081440
1005a8cd:	push   DWORD PTR [eax+esi*4]
1005a8d0:	push   esi
1005a8d1:	call   0x1004d397
1005a8d6:	pop    ecx
1005a8d7:	pop    ecx
1005a8d8:	mov    eax,ds:0x10081440
1005a8dd:	mov    eax,DWORD PTR [eax+esi*4]
1005a8e0:	test   BYTE PTR [eax+0xc],0x83
1005a8e4:	je     0x1005a8f2
1005a8e6:	push   eax
1005a8e7:	push   esi
1005a8e8:	call   0x1004d3e9
1005a8ed:	pop    ecx
1005a8ee:	pop    ecx
1005a8ef:	inc    esi
1005a8f0:	jmp    0x1005a88b
1005a8f2:	mov    edi,eax
1005a8f4:	jmp    0x1005a958
1005a8f6:	shl    esi,0x2
1005a8f9:	push   0x38
1005a8fb:	call   0x100476c2
1005a900:	pop    ecx
1005a901:	mov    ecx,DWORD PTR ds:0x10081440
1005a907:	mov    DWORD PTR [esi+ecx*1],eax
1005a90a:	mov    eax,ds:0x10081440
1005a90f:	add    eax,esi
1005a911:	cmp    DWORD PTR [eax],ebx
1005a913:	je     0x1005a95b
1005a915:	push   0xfa0
1005a91a:	mov    eax,DWORD PTR [eax]
1005a91c:	add    eax,0x20
1005a91f:	push   eax
1005a920:	call   0x1004c83b
1005a925:	pop    ecx
1005a926:	pop    ecx
1005a927:	test   eax,eax
1005a929:	mov    eax,ds:0x10081440
1005a92e:	jne    0x1005a943
1005a930:	push   DWORD PTR [esi+eax*1]
1005a933:	call   0x10043748
1005a938:	pop    ecx
1005a939:	mov    eax,ds:0x10081440
1005a93e:	mov    DWORD PTR [esi+eax*1],ebx
1005a941:	jmp    0x1005a95b
1005a943:	mov    eax,DWORD PTR [esi+eax*1]
1005a946:	add    eax,0x20
1005a949:	push   eax
1005a94a:	call   DWORD PTR ds:0x100660f0
1005a950:	mov    eax,ds:0x10081440
1005a955:	mov    edi,DWORD PTR [esi+eax*1]
1005a958:	mov    DWORD PTR [ebp-0x1c],edi
1005a95b:	cmp    edi,ebx
1005a95d:	je     0x1005a971
1005a95f:	mov    DWORD PTR [edi+0x4],ebx
1005a962:	mov    DWORD PTR [edi+0xc],ebx
1005a965:	mov    DWORD PTR [edi+0x8],ebx
1005a968:	mov    DWORD PTR [edi],ebx
1005a96a:	mov    DWORD PTR [edi+0x1c],ebx
1005a96d:	or     DWORD PTR [edi+0x10],0xffffffff
1005a971:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1005a978:	call   0x1005a988
1005a97d:	mov    eax,edi
1005a97f:	call   0x10046f79
1005a984:	ret    
1005a985:	mov    edi,DWORD PTR [ebp-0x1c]
1005a988:	push   0x1
1005a98a:	call   0x10047e65
1005a98f:	pop    ecx
1005a990:	ret    
1005a991:	mov    DWORD PTR [ecx],0x1006caf0
1005a997:	jmp    0x10043210
1005a99c:	push   esi
1005a99d:	mov    esi,ecx
1005a99f:	mov    DWORD PTR [esi],0x1006caf0
1005a9a5:	call   0x10043210
1005a9aa:	test   BYTE PTR [esp+0x8],0x1
1005a9af:	je     0x1005a9b8
1005a9b1:	push   esi
1005a9b2:	call   0x100430d2
1005a9b7:	pop    ecx
1005a9b8:	mov    eax,esi
1005a9ba:	pop    esi
1005a9bb:	ret    0x4
1005a9be:	push   esi
1005a9bf:	push   edi
1005a9c0:	mov    edi,DWORD PTR [esp+0xc]
1005a9c4:	mov    eax,DWORD PTR [edi+0x4]
1005a9c7:	test   eax,eax
1005a9c9:	je     0x1005aa14
1005a9cb:	lea    edx,[eax+0x8]
1005a9ce:	cmp    BYTE PTR [edx],0x0
1005a9d1:	je     0x1005aa14
1005a9d3:	mov    esi,DWORD PTR [esp+0x10]
1005a9d7:	mov    ecx,DWORD PTR [esi+0x4]
1005a9da:	cmp    eax,ecx
1005a9dc:	je     0x1005a9f2
1005a9de:	add    ecx,0x8
1005a9e1:	push   ecx
1005a9e2:	push   edx
1005a9e3:	call   0x10047ba0
1005a9e8:	test   eax,eax
1005a9ea:	pop    ecx
1005a9eb:	pop    ecx
1005a9ec:	je     0x1005a9f2
1005a9ee:	xor    eax,eax
1005a9f0:	jmp    0x1005aa17
1005a9f2:	test   BYTE PTR [esi],0x2
1005a9f5:	je     0x1005a9fc
1005a9f7:	test   BYTE PTR [edi],0x8
1005a9fa:	je     0x1005a9ee
1005a9fc:	mov    eax,DWORD PTR [esp+0x14]
1005aa00:	mov    eax,DWORD PTR [eax]
1005aa02:	test   al,0x1
1005aa04:	je     0x1005aa0b
1005aa06:	test   BYTE PTR [edi],0x1
1005aa09:	je     0x1005a9ee
1005aa0b:	test   al,0x2
1005aa0d:	je     0x1005aa14
1005aa0f:	test   BYTE PTR [edi],0x2
1005aa12:	je     0x1005a9ee
1005aa14:	xor    eax,eax
1005aa16:	inc    eax
1005aa17:	pop    edi
1005aa18:	pop    esi
1005aa19:	ret    
1005aa1a:	mov    eax,DWORD PTR [esp+0x4]
1005aa1e:	mov    eax,DWORD PTR [eax]
1005aa20:	mov    eax,DWORD PTR [eax]
1005aa22:	cmp    eax,0xe0434f4d
1005aa27:	je     0x1005aa41
1005aa29:	cmp    eax,0xe06d7363
1005aa2e:	jne    0x1005aa5b
1005aa30:	call   0x1004739c
1005aa35:	and    DWORD PTR [eax+0x90],0x0
1005aa3c:	jmp    0x10046e9e
1005aa41:	call   0x1004739c
1005aa46:	cmp    DWORD PTR [eax+0x90],0x0
1005aa4d:	jle    0x1005aa5b
1005aa4f:	call   0x1004739c
1005aa54:	add    eax,0x90
1005aa59:	dec    DWORD PTR [eax]
1005aa5b:	xor    eax,eax
1005aa5d:	ret    
1005aa5e:	push   0x10
1005aa60:	push   0x10074be0
1005aa65:	call   0x10046f34
1005aa6a:	mov    edi,DWORD PTR [ebp+0x10]
1005aa6d:	mov    ebx,DWORD PTR [ebp+0x8]
1005aa70:	cmp    DWORD PTR [edi+0x4],0x80
1005aa77:	jg     0x1005aa7f
1005aa79:	movsx  esi,BYTE PTR [ebx+0x8]
1005aa7d:	jmp    0x1005aa82
1005aa7f:	mov    esi,DWORD PTR [ebx+0x8]
1005aa82:	mov    DWORD PTR [ebp-0x1c],esi
1005aa85:	call   0x1004739c
1005aa8a:	add    eax,0x90
1005aa8f:	inc    DWORD PTR [eax]
1005aa91:	and    DWORD PTR [ebp-0x4],0x0
1005aa95:	cmp    esi,DWORD PTR [ebp+0x14]
1005aa98:	je     0x1005aaff
1005aa9a:	cmp    esi,0xffffffff
1005aa9d:	jle    0x1005aaa4
1005aa9f:	cmp    esi,DWORD PTR [edi+0x4]
1005aaa2:	jl     0x1005aaa9
1005aaa4:	call   0x10046eea
1005aaa9:	mov    eax,esi
1005aaab:	shl    eax,0x3
1005aaae:	mov    ecx,DWORD PTR [edi+0x8]
1005aab1:	add    ecx,eax
1005aab3:	mov    esi,DWORD PTR [ecx]
1005aab5:	mov    DWORD PTR [ebp-0x20],esi
1005aab8:	mov    DWORD PTR [ebp-0x4],0x1
1005aabf:	cmp    DWORD PTR [ecx+0x4],0x0
1005aac3:	je     0x1005aada
1005aac5:	mov    DWORD PTR [ebx+0x8],esi
1005aac8:	push   0x103
1005aacd:	push   ebx
1005aace:	mov    ecx,DWORD PTR [edi+0x8]
1005aad1:	push   DWORD PTR [ecx+eax*1+0x4]
1005aad5:	call   0x1005b620
1005aada:	and    DWORD PTR [ebp-0x4],0x0
1005aade:	jmp    0x1005aafa
1005aae0:	push   DWORD PTR [ebp-0x14]
1005aae3:	call   0x1005aa1a
1005aae8:	pop    ecx
1005aae9:	ret    
1005aaea:	mov    esp,DWORD PTR [ebp-0x18]
1005aaed:	and    DWORD PTR [ebp-0x4],0x0
1005aaf1:	mov    edi,DWORD PTR [ebp+0x10]
1005aaf4:	mov    ebx,DWORD PTR [ebp+0x8]
1005aaf7:	mov    esi,DWORD PTR [ebp-0x20]
1005aafa:	mov    DWORD PTR [ebp-0x1c],esi
1005aafd:	jmp    0x1005aa95
1005aaff:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1005ab06:	call   0x1005ab24
1005ab0b:	cmp    esi,DWORD PTR [ebp+0x14]
1005ab0e:	je     0x1005ab15
1005ab10:	call   0x10046eea
1005ab15:	mov    DWORD PTR [ebx+0x8],esi
1005ab18:	call   0x10046f79
1005ab1d:	ret    
1005ab1e:	mov    ebx,DWORD PTR [ebp+0x8]
1005ab21:	mov    esi,DWORD PTR [ebp-0x1c]
1005ab24:	call   0x1004739c
1005ab29:	cmp    DWORD PTR [eax+0x90],0x0
1005ab30:	jle    0x1005ab3e
1005ab32:	call   0x1004739c
1005ab37:	add    eax,0x90
1005ab3c:	dec    DWORD PTR [eax]
1005ab3e:	ret    
1005ab3f:	mov    eax,DWORD PTR [eax]
1005ab41:	cmp    DWORD PTR [eax],0xe06d7363
1005ab47:	jne    0x1005ab81
1005ab49:	cmp    DWORD PTR [eax+0x10],0x3
1005ab4d:	jne    0x1005ab81
1005ab4f:	mov    ecx,DWORD PTR [eax+0x14]
1005ab52:	cmp    ecx,0x19930520
1005ab58:	je     0x1005ab6a
1005ab5a:	cmp    ecx,0x19930521
1005ab60:	je     0x1005ab6a
1005ab62:	cmp    ecx,0x19930522
1005ab68:	jne    0x1005ab81
1005ab6a:	cmp    DWORD PTR [eax+0x1c],0x0
1005ab6e:	jne    0x1005ab81
1005ab70:	call   0x1004739c
1005ab75:	xor    ecx,ecx
1005ab77:	inc    ecx
1005ab78:	mov    DWORD PTR [eax+0x20c],ecx
1005ab7e:	mov    eax,ecx
1005ab80:	ret    
1005ab81:	xor    eax,eax
1005ab83:	ret    
1005ab84:	push   0x8
1005ab86:	push   0x10074c08
1005ab8b:	call   0x10046f34
1005ab90:	mov    ecx,DWORD PTR [ebp+0x8]
1005ab93:	test   ecx,ecx
1005ab95:	je     0x1005abc1
1005ab97:	cmp    DWORD PTR [ecx],0xe06d7363
1005ab9d:	jne    0x1005abc1
1005ab9f:	mov    eax,DWORD PTR [ecx+0x1c]
1005aba2:	test   eax,eax
1005aba4:	je     0x1005abc1
1005aba6:	mov    eax,DWORD PTR [eax+0x4]
1005aba9:	test   eax,eax
1005abab:	je     0x1005abc1
1005abad:	and    DWORD PTR [ebp-0x4],0x0
1005abb1:	push   eax
1005abb2:	push   DWORD PTR [ecx+0x18]
1005abb5:	call   0x100593c3
1005abba:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1005abc1:	call   0x10046f79
1005abc6:	ret    
1005abc7:	xor    eax,eax
1005abc9:	cmp    BYTE PTR [ebp+0xc],al
1005abcc:	setne  al
1005abcf:	ret    
1005abd0:	mov    esp,DWORD PTR [ebp-0x18]
1005abd3:	jmp    0x10046e9e
1005abd8:	mov    ecx,DWORD PTR [esp+0x8]
1005abdc:	mov    eax,DWORD PTR [ecx]
1005abde:	push   esi
1005abdf:	mov    esi,DWORD PTR [esp+0x8]
1005abe3:	add    eax,esi
1005abe5:	cmp    DWORD PTR [ecx+0x4],0x0
1005abe9:	jl     0x1005abfb
1005abeb:	mov    edx,DWORD PTR [ecx+0x4]
1005abee:	mov    ecx,DWORD PTR [ecx+0x8]
1005abf1:	mov    esi,DWORD PTR [edx+esi*1]
1005abf4:	mov    ecx,DWORD PTR [esi+ecx*1]
1005abf7:	add    ecx,edx
1005abf9:	add    eax,ecx
1005abfb:	pop    esi
1005abfc:	ret    
1005abfd:	push   ebp
1005abfe:	mov    ebp,esp
1005ac00:	sub    esp,0xc
1005ac03:	test   edi,edi
1005ac05:	jne    0x1005ac11
1005ac07:	call   0x10046eea
1005ac0c:	jmp    0x10046e9e
1005ac11:	and    DWORD PTR [ebp-0x8],0x0
1005ac15:	cmp    DWORD PTR [edi],0x0
1005ac18:	mov    BYTE PTR [ebp-0x1],0x0
1005ac1c:	jle    0x1005ac71
1005ac1e:	push   ebx
1005ac1f:	push   esi
1005ac20:	mov    eax,DWORD PTR [ebp+0x8]
1005ac23:	mov    eax,DWORD PTR [eax+0x1c]
1005ac26:	mov    eax,DWORD PTR [eax+0xc]
1005ac29:	mov    ebx,DWORD PTR [eax]
1005ac2b:	test   ebx,ebx
1005ac2d:	lea    esi,[eax+0x4]
1005ac30:	jle    0x1005ac65
1005ac32:	mov    eax,DWORD PTR [ebp-0x8]
1005ac35:	shl    eax,0x4
1005ac38:	mov    DWORD PTR [ebp-0xc],eax
1005ac3b:	mov    ecx,DWORD PTR [ebp+0x8]
1005ac3e:	push   DWORD PTR [ecx+0x1c]
1005ac41:	mov    eax,DWORD PTR [esi]
1005ac43:	push   eax
1005ac44:	mov    eax,DWORD PTR [edi+0x4]
1005ac47:	add    eax,DWORD PTR [ebp-0xc]
1005ac4a:	push   eax
1005ac4b:	call   0x1005a9be
1005ac50:	add    esp,0xc
1005ac53:	test   eax,eax
1005ac55:	jne    0x1005ac61
1005ac57:	dec    ebx
1005ac58:	add    esi,0x4
1005ac5b:	test   ebx,ebx
1005ac5d:	jg     0x1005ac3b
1005ac5f:	jmp    0x1005ac65
1005ac61:	mov    BYTE PTR [ebp-0x1],0x1
1005ac65:	inc    DWORD PTR [ebp-0x8]
1005ac68:	mov    eax,DWORD PTR [ebp-0x8]
1005ac6b:	cmp    eax,DWORD PTR [edi]
1005ac6d:	jl     0x1005ac20
1005ac6f:	pop    esi
1005ac70:	pop    ebx
1005ac71:	mov    al,BYTE PTR [ebp-0x1]
1005ac74:	leave  
1005ac75:	ret    
1005ac76:	push   0x4
1005ac78:	mov    eax,0x1005f7cb
1005ac7d:	call   0x10059ca8
1005ac82:	call   0x1004739c
1005ac87:	cmp    DWORD PTR [eax+0x94],0x0
1005ac8e:	je     0x1005ac95
1005ac90:	call   0x10046eea
1005ac95:	and    DWORD PTR [ebp-0x4],0x0
1005ac99:	call   0x10046ed7
1005ac9e:	or     DWORD PTR [ebp-0x4],0xffffffff
1005aca2:	jmp    0x10046e9e
1005aca7:	call   0x1004739c
1005acac:	mov    ecx,DWORD PTR [ebp+0x8]
1005acaf:	push   0x0
1005acb1:	push   0x0
1005acb3:	mov    DWORD PTR [eax+0x94],ecx
1005acb9:	call   0x10047c54
1005acbe:	int3   
1005acbf:	push   0x2c
1005acc1:	push   0x10074c80
1005acc6:	call   0x10046f34
1005accb:	mov    ebx,ecx
1005accd:	mov    edi,DWORD PTR [ebp+0xc]
1005acd0:	mov    esi,DWORD PTR [ebp+0x8]
1005acd3:	mov    DWORD PTR [ebp-0x1c],ebx
1005acd6:	and    DWORD PTR [ebp-0x34],0x0
1005acda:	mov    eax,DWORD PTR [edi-0x4]
1005acdd:	mov    DWORD PTR [ebp-0x24],eax
1005ace0:	push   DWORD PTR [esi+0x18]
1005ace3:	lea    eax,[ebp-0x3c]
1005ace6:	push   eax
1005ace7:	call   0x10059667
1005acec:	pop    ecx
1005aced:	pop    ecx
1005acee:	mov    DWORD PTR [ebp-0x28],eax
1005acf1:	call   0x1004739c
1005acf6:	mov    eax,DWORD PTR [eax+0x88]
1005acfc:	mov    DWORD PTR [ebp-0x2c],eax
1005acff:	call   0x1004739c
1005ad04:	mov    eax,DWORD PTR [eax+0x8c]
1005ad0a:	mov    DWORD PTR [ebp-0x30],eax
1005ad0d:	call   0x1004739c
1005ad12:	mov    DWORD PTR [eax+0x88],esi
1005ad18:	call   0x1004739c
1005ad1d:	mov    ecx,DWORD PTR [ebp+0x10]
1005ad20:	mov    DWORD PTR [eax+0x8c],ecx
1005ad26:	and    DWORD PTR [ebp-0x4],0x0
1005ad2a:	xor    eax,eax
1005ad2c:	inc    eax
1005ad2d:	mov    DWORD PTR [ebp+0x10],eax
1005ad30:	mov    DWORD PTR [ebp-0x4],eax
1005ad33:	push   DWORD PTR [ebp+0x1c]
1005ad36:	push   DWORD PTR [ebp+0x18]
1005ad39:	push   ebx
1005ad3a:	push   DWORD PTR [ebp+0x14]
1005ad3d:	push   edi
1005ad3e:	call   0x100596fc
1005ad43:	add    esp,0x14
1005ad46:	mov    DWORD PTR [ebp-0x1c],eax
1005ad49:	and    DWORD PTR [ebp-0x4],0x0
1005ad4d:	jmp    0x1005adbe
1005ad4f:	mov    eax,DWORD PTR [ebp-0x14]
1005ad52:	call   0x1005ab3f
1005ad57:	ret    
1005ad58:	mov    esp,DWORD PTR [ebp-0x18]
1005ad5b:	call   0x1004739c
1005ad60:	and    DWORD PTR [eax+0x20c],0x0
1005ad67:	mov    esi,DWORD PTR [ebp+0x14]
1005ad6a:	mov    edi,DWORD PTR [ebp+0xc]
1005ad6d:	cmp    DWORD PTR [esi+0x4],0x80
1005ad74:	jg     0x1005ad7c
1005ad76:	movsx  ecx,BYTE PTR [edi+0x8]
1005ad7a:	jmp    0x1005ad7f
1005ad7c:	mov    ecx,DWORD PTR [edi+0x8]
1005ad7f:	mov    ebx,DWORD PTR [esi+0x10]
1005ad82:	and    DWORD PTR [ebp-0x20],0x0
1005ad86:	mov    eax,DWORD PTR [ebp-0x20]
1005ad89:	cmp    eax,DWORD PTR [esi+0xc]
1005ad8c:	jae    0x1005ada6
1005ad8e:	imul   eax,eax,0x14
1005ad91:	add    eax,ebx
1005ad93:	mov    edx,DWORD PTR [eax+0x4]
1005ad96:	cmp    ecx,edx
1005ad98:	jle    0x1005adda
1005ad9a:	cmp    ecx,DWORD PTR [eax+0x8]
1005ad9d:	jg     0x1005adda
1005ad9f:	mov    eax,DWORD PTR [esi+0x8]
1005ada2:	mov    ecx,DWORD PTR [eax+edx*8+0x8]
1005ada6:	push   ecx
1005ada7:	push   esi
1005ada8:	push   0x0
1005adaa:	push   edi
1005adab:	call   0x1005aa5e
1005adb0:	add    esp,0x10
1005adb3:	and    DWORD PTR [ebp-0x1c],0x0
1005adb7:	and    DWORD PTR [ebp-0x4],0x0
1005adbb:	mov    esi,DWORD PTR [ebp+0x8]
1005adbe:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1005adc5:	mov    DWORD PTR [ebp+0x10],0x0
1005adcc:	call   0x1005ade5
1005add1:	mov    eax,DWORD PTR [ebp-0x1c]
1005add4:	call   0x10046f79
1005add9:	ret    
1005adda:	inc    DWORD PTR [ebp-0x20]
1005addd:	jmp    0x1005ad86
1005addf:	mov    edi,DWORD PTR [ebp+0xc]
1005ade2:	mov    esi,DWORD PTR [ebp+0x8]
1005ade5:	mov    eax,DWORD PTR [ebp-0x24]
1005ade8:	mov    DWORD PTR [edi-0x4],eax
1005adeb:	push   DWORD PTR [ebp-0x28]
1005adee:	call   0x100596b0
1005adf3:	pop    ecx
1005adf4:	call   0x1004739c
1005adf9:	mov    ecx,DWORD PTR [ebp-0x2c]
1005adfc:	mov    DWORD PTR [eax+0x88],ecx
1005ae02:	call   0x1004739c
1005ae07:	mov    ecx,DWORD PTR [ebp-0x30]
1005ae0a:	mov    DWORD PTR [eax+0x8c],ecx
1005ae10:	cmp    DWORD PTR [esi],0xe06d7363
1005ae16:	jne    0x1005ae5a
1005ae18:	cmp    DWORD PTR [esi+0x10],0x3
1005ae1c:	jne    0x1005ae5a
1005ae1e:	mov    eax,DWORD PTR [esi+0x14]
1005ae21:	cmp    eax,0x19930520
1005ae26:	je     0x1005ae36
1005ae28:	cmp    eax,0x19930521
1005ae2d:	je     0x1005ae36
1005ae2f:	cmp    eax,0x19930522
1005ae34:	jne    0x1005ae5a
1005ae36:	cmp    DWORD PTR [ebp-0x34],0x0
1005ae3a:	jne    0x1005ae5a
1005ae3c:	cmp    DWORD PTR [ebp-0x1c],0x0
1005ae40:	je     0x1005ae5a
1005ae42:	push   DWORD PTR [esi+0x18]
1005ae45:	call   0x1005968f
1005ae4a:	pop    ecx
1005ae4b:	test   eax,eax
1005ae4d:	je     0x1005ae5a
1005ae4f:	push   DWORD PTR [ebp+0x10]
1005ae52:	push   esi
1005ae53:	call   0x1005ab84
1005ae58:	pop    ecx
1005ae59:	pop    ecx
1005ae5a:	ret    
1005ae5b:	push   0xc
1005ae5d:	push   0x10074ca8
1005ae62:	call   0x10046f34
1005ae67:	xor    edx,edx
1005ae69:	mov    DWORD PTR [ebp-0x1c],edx
1005ae6c:	mov    eax,DWORD PTR [ebp+0x10]
1005ae6f:	mov    ecx,DWORD PTR [eax+0x4]
1005ae72:	cmp    ecx,edx
1005ae74:	je     0x1005afd2
1005ae7a:	cmp    BYTE PTR [ecx+0x8],dl
1005ae7d:	je     0x1005afd2
1005ae83:	mov    ecx,DWORD PTR [eax+0x8]
1005ae86:	cmp    ecx,edx
1005ae88:	jne    0x1005ae96
1005ae8a:	test   DWORD PTR [eax],0x80000000
1005ae90:	je     0x1005afd2
1005ae96:	mov    eax,DWORD PTR [eax]
1005ae98:	mov    esi,DWORD PTR [ebp+0xc]
1005ae9b:	test   eax,eax
1005ae9d:	js     0x1005aea3
1005ae9f:	lea    esi,[ecx+esi*1+0xc]
1005aea3:	mov    DWORD PTR [ebp-0x4],edx
1005aea6:	xor    ebx,ebx
1005aea8:	inc    ebx
1005aea9:	push   ebx
1005aeaa:	test   al,0x8
1005aeac:	je     0x1005aeef
1005aeae:	mov    edi,DWORD PTR [ebp+0x8]
1005aeb1:	push   DWORD PTR [edi+0x18]
1005aeb4:	call   0x1004faf4
1005aeb9:	pop    ecx
1005aeba:	pop    ecx
1005aebb:	test   eax,eax
1005aebd:	je     0x1005afb5
1005aec3:	push   ebx
1005aec4:	push   esi
1005aec5:	call   0x1004faf4
1005aeca:	pop    ecx
1005aecb:	pop    ecx
1005aecc:	test   eax,eax
1005aece:	je     0x1005afb5
1005aed4:	mov    eax,DWORD PTR [edi+0x18]
1005aed7:	mov    DWORD PTR [esi],eax
1005aed9:	mov    ecx,DWORD PTR [ebp+0x14]
1005aedc:	add    ecx,0x8
1005aedf:	push   ecx
1005aee0:	push   eax
1005aee1:	call   0x1005abd8
1005aee6:	pop    ecx
1005aee7:	pop    ecx
1005aee8:	mov    DWORD PTR [esi],eax
1005aeea:	jmp    0x1005afba
1005aeef:	mov    edi,DWORD PTR [ebp+0x14]
1005aef2:	mov    eax,DWORD PTR [ebp+0x8]
1005aef5:	push   DWORD PTR [eax+0x18]
1005aef8:	test   BYTE PTR [edi],bl
1005aefa:	je     0x1005af44
1005aefc:	call   0x1004faf4
1005af01:	pop    ecx
1005af02:	pop    ecx
1005af03:	test   eax,eax
1005af05:	je     0x1005afb5
1005af0b:	push   ebx
1005af0c:	push   esi
1005af0d:	call   0x1004faf4
1005af12:	pop    ecx
1005af13:	pop    ecx
1005af14:	test   eax,eax
1005af16:	je     0x1005afb5
1005af1c:	push   DWORD PTR [edi+0x14]
1005af1f:	mov    eax,DWORD PTR [ebp+0x8]
1005af22:	push   DWORD PTR [eax+0x18]
1005af25:	push   esi
1005af26:	call   0x10045960
1005af2b:	add    esp,0xc
1005af2e:	cmp    DWORD PTR [edi+0x14],0x4
1005af32:	jne    0x1005afba
1005af38:	mov    eax,DWORD PTR [esi]
1005af3a:	test   eax,eax
1005af3c:	je     0x1005afba
1005af3e:	add    edi,0x8
1005af41:	push   edi
1005af42:	jmp    0x1005aee0
1005af44:	cmp    DWORD PTR [edi+0x18],edx
1005af47:	jne    0x1005af81
1005af49:	call   0x1004faf4
1005af4e:	pop    ecx
1005af4f:	pop    ecx
1005af50:	test   eax,eax
1005af52:	je     0x1005afb5
1005af54:	push   ebx
1005af55:	push   esi
1005af56:	call   0x1004faf4
1005af5b:	pop    ecx
1005af5c:	pop    ecx
1005af5d:	test   eax,eax
1005af5f:	je     0x1005afb5
1005af61:	push   DWORD PTR [edi+0x14]
1005af64:	add    edi,0x8
1005af67:	push   edi
1005af68:	mov    eax,DWORD PTR [ebp+0x8]
1005af6b:	push   DWORD PTR [eax+0x18]
1005af6e:	call   0x1005abd8
1005af73:	pop    ecx
1005af74:	pop    ecx
1005af75:	push   eax
1005af76:	push   esi
1005af77:	call   0x10045960
1005af7c:	add    esp,0xc
1005af7f:	jmp    0x1005afba
1005af81:	call   0x1004faf4
1005af86:	pop    ecx
1005af87:	pop    ecx
1005af88:	test   eax,eax
1005af8a:	je     0x1005afb5
1005af8c:	push   ebx
1005af8d:	push   esi
1005af8e:	call   0x1004faf4
1005af93:	pop    ecx
1005af94:	pop    ecx
1005af95:	test   eax,eax
1005af97:	je     0x1005afb5
1005af99:	push   DWORD PTR [edi+0x18]
1005af9c:	call   0x1004faf4
1005afa1:	pop    ecx
1005afa2:	test   eax,eax
1005afa4:	je     0x1005afb5
1005afa6:	test   BYTE PTR [edi],0x4
1005afa9:	push   0x0
1005afab:	pop    eax
1005afac:	setne  al
1005afaf:	inc    eax
1005afb0:	mov    DWORD PTR [ebp-0x1c],eax
1005afb3:	jmp    0x1005afba
1005afb5:	call   0x10046eea
1005afba:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1005afc1:	mov    eax,DWORD PTR [ebp-0x1c]
1005afc4:	jmp    0x1005afd4
1005afc6:	xor    eax,eax
1005afc8:	inc    eax
1005afc9:	ret    
1005afca:	mov    esp,DWORD PTR [ebp-0x18]
1005afcd:	jmp    0x10046e9e
1005afd2:	xor    eax,eax
1005afd4:	call   0x10046f79
1005afd9:	ret    
1005afda:	push   0x8
1005afdc:	push   0x10074cc8
1005afe1:	call   0x10046f34
1005afe6:	mov    eax,DWORD PTR [ebp+0x10]
1005afe9:	test   DWORD PTR [eax],0x80000000
1005afef:	je     0x1005aff6
1005aff1:	mov    ebx,DWORD PTR [ebp+0xc]
1005aff4:	jmp    0x1005b000
1005aff6:	mov    ecx,DWORD PTR [eax+0x8]
1005aff9:	mov    edx,DWORD PTR [ebp+0xc]
1005affc:	lea    ebx,[ecx+edx*1+0xc]
1005b000:	and    DWORD PTR [ebp-0x4],0x0
1005b004:	mov    esi,DWORD PTR [ebp+0x14]
1005b007:	push   esi
1005b008:	push   eax
1005b009:	push   DWORD PTR [ebp+0xc]
1005b00c:	mov    edi,DWORD PTR [ebp+0x8]
1005b00f:	push   edi
1005b010:	call   0x1005ae5b
1005b015:	add    esp,0x10
1005b018:	dec    eax
1005b019:	je     0x1005b03a
1005b01b:	dec    eax
1005b01c:	jne    0x1005b052
1005b01e:	push   0x1
1005b020:	lea    eax,[esi+0x8]
1005b023:	push   eax
1005b024:	push   DWORD PTR [edi+0x18]
1005b027:	call   0x1005abd8
1005b02c:	pop    ecx
1005b02d:	pop    ecx
1005b02e:	push   eax
1005b02f:	push   DWORD PTR [esi+0x18]
1005b032:	push   ebx
1005b033:	call   0x100593c3
1005b038:	jmp    0x1005b052
1005b03a:	lea    eax,[esi+0x8]
1005b03d:	push   eax
1005b03e:	push   DWORD PTR [edi+0x18]
1005b041:	call   0x1005abd8
1005b046:	pop    ecx
1005b047:	pop    ecx
1005b048:	push   eax
1005b049:	push   DWORD PTR [esi+0x18]
1005b04c:	push   ebx
1005b04d:	call   0x100593c3
1005b052:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1005b059:	call   0x10046f79
1005b05e:	ret    
1005b05f:	xor    eax,eax
1005b061:	inc    eax
1005b062:	ret    
1005b063:	mov    esp,DWORD PTR [ebp-0x18]
1005b066:	jmp    0x10046e9e
1005b06b:	push   ebp
1005b06c:	mov    ebp,esp
1005b06e:	cmp    DWORD PTR [ebp+0x18],0x0
1005b072:	je     0x1005b084
1005b074:	push   DWORD PTR [ebp+0x18]
1005b077:	push   ebx
1005b078:	push   esi
1005b079:	push   DWORD PTR [ebp+0x8]
1005b07c:	call   0x1005afda
1005b081:	add    esp,0x10
1005b084:	cmp    DWORD PTR [ebp+0x20],0x0
1005b088:	push   DWORD PTR [ebp+0x8]
1005b08b:	jne    0x1005b090
1005b08d:	push   esi
1005b08e:	jmp    0x1005b093
1005b090:	push   DWORD PTR [ebp+0x20]
1005b093:	call   0x100593ca
1005b098:	push   DWORD PTR [edi]
1005b09a:	push   DWORD PTR [ebp+0x14]
1005b09d:	push   DWORD PTR [ebp+0x10]
1005b0a0:	push   esi
1005b0a1:	call   0x1005aa5e
1005b0a6:	mov    eax,DWORD PTR [edi+0x4]
1005b0a9:	push   0x100
1005b0ae:	push   DWORD PTR [ebp+0x1c]
1005b0b1:	inc    eax
1005b0b2:	push   DWORD PTR [ebp+0x14]
1005b0b5:	mov    DWORD PTR [esi+0x8],eax
1005b0b8:	push   DWORD PTR [ebp+0xc]
1005b0bb:	mov    ecx,DWORD PTR [ebx+0xc]
1005b0be:	push   esi
1005b0bf:	push   DWORD PTR [ebp+0x8]
1005b0c2:	call   0x1005acbf
1005b0c7:	add    esp,0x28
1005b0ca:	test   eax,eax
1005b0cc:	je     0x1005b0d5
1005b0ce:	push   esi
1005b0cf:	push   eax
1005b0d0:	call   0x10059393
1005b0d5:	pop    ebp
1005b0d6:	ret    
1005b0d7:	push   ebp
1005b0d8:	mov    ebp,esp
1005b0da:	push   ecx
1005b0db:	push   ecx
1005b0dc:	push   esi
1005b0dd:	mov    esi,DWORD PTR [ebp+0x8]
1005b0e0:	cmp    DWORD PTR [esi],0x80000003
1005b0e6:	je     0x1005b1c6
1005b0ec:	push   edi
1005b0ed:	call   0x1004739c
1005b0f2:	cmp    DWORD PTR [eax+0x80],0x0
1005b0f9:	je     0x1005b13a
1005b0fb:	call   0x1004739c
1005b100:	lea    edi,[eax+0x80]
1005b106:	call   0x10047189
1005b10b:	cmp    DWORD PTR [edi],eax
1005b10d:	je     0x1005b13a
1005b10f:	cmp    DWORD PTR [esi],0xe0434f4d
1005b115:	je     0x1005b13a
1005b117:	push   DWORD PTR [ebp+0x24]
1005b11a:	push   DWORD PTR [ebp+0x20]
1005b11d:	push   DWORD PTR [ebp+0x18]
1005b120:	push   DWORD PTR [ebp+0x14]
1005b123:	push   DWORD PTR [ebp+0x10]
1005b126:	push   DWORD PTR [ebp+0xc]
1005b129:	push   esi
1005b12a:	call   0x10059482
1005b12f:	add    esp,0x1c
1005b132:	test   eax,eax
1005b134:	jne    0x1005b1c5
1005b13a:	mov    edi,DWORD PTR [ebp+0x18]
1005b13d:	cmp    DWORD PTR [edi+0xc],0x0
1005b141:	jne    0x1005b148
1005b143:	call   0x10046eea
1005b148:	mov    esi,DWORD PTR [ebp+0x1c]
1005b14b:	lea    eax,[ebp-0x8]
1005b14e:	push   eax
1005b14f:	lea    eax,[ebp-0x4]
1005b152:	push   eax
1005b153:	push   esi
1005b154:	push   DWORD PTR [ebp+0x20]
1005b157:	push   edi
1005b158:	call   0x100595f4
1005b15d:	mov    edi,eax
1005b15f:	mov    eax,DWORD PTR [ebp-0x4]
1005b162:	add    esp,0x14
1005b165:	cmp    eax,DWORD PTR [ebp-0x8]
1005b168:	jae    0x1005b1c5
1005b16a:	push   ebx
1005b16b:	cmp    esi,DWORD PTR [edi]
1005b16d:	jl     0x1005b1b6
1005b16f:	cmp    esi,DWORD PTR [edi+0x4]
1005b172:	jg     0x1005b1b6
1005b174:	mov    eax,DWORD PTR [edi+0xc]
1005b177:	mov    ecx,DWORD PTR [edi+0x10]
1005b17a:	shl    eax,0x4
1005b17d:	add    eax,ecx
1005b17f:	mov    ecx,DWORD PTR [eax-0xc]
1005b182:	test   ecx,ecx
1005b184:	je     0x1005b18c
1005b186:	cmp    BYTE PTR [ecx+0x8],0x0
1005b18a:	jne    0x1005b1b6
1005b18c:	lea    ebx,[eax-0x10]
1005b18f:	test   BYTE PTR [ebx],0x40
1005b192:	jne    0x1005b1b6
1005b194:	push   DWORD PTR [ebp+0x24]
1005b197:	mov    esi,DWORD PTR [ebp+0xc]
1005b19a:	push   DWORD PTR [ebp+0x20]
1005b19d:	push   0x0
1005b19f:	push   DWORD PTR [ebp+0x18]
1005b1a2:	push   DWORD PTR [ebp+0x14]
1005b1a5:	push   DWORD PTR [ebp+0x10]
1005b1a8:	push   DWORD PTR [ebp+0x8]
1005b1ab:	call   0x1005b06b
1005b1b0:	mov    esi,DWORD PTR [ebp+0x1c]
1005b1b3:	add    esp,0x1c
1005b1b6:	inc    DWORD PTR [ebp-0x4]
1005b1b9:	mov    eax,DWORD PTR [ebp-0x4]
1005b1bc:	add    edi,0x14
1005b1bf:	cmp    eax,DWORD PTR [ebp-0x8]
1005b1c2:	jb     0x1005b16b
1005b1c4:	pop    ebx
1005b1c5:	pop    edi
1005b1c6:	pop    esi
1005b1c7:	leave  
1005b1c8:	ret    
1005b1c9:	push   ebp
1005b1ca:	mov    ebp,esp
1005b1cc:	sub    esp,0x2c
1005b1cf:	mov    ecx,DWORD PTR [ebp+0xc]
1005b1d2:	push   ebx
1005b1d3:	mov    ebx,DWORD PTR [ebp+0x18]
1005b1d6:	mov    eax,DWORD PTR [ebx+0x4]
1005b1d9:	cmp    eax,0x80
1005b1de:	push   esi
1005b1df:	push   edi
1005b1e0:	mov    BYTE PTR [ebp-0x1],0x0
1005b1e4:	jg     0x1005b1ec
1005b1e6:	movsx  ecx,BYTE PTR [ecx+0x8]
1005b1ea:	jmp    0x1005b1ef
1005b1ec:	mov    ecx,DWORD PTR [ecx+0x8]
1005b1ef:	cmp    ecx,0xffffffff
1005b1f2:	mov    DWORD PTR [ebp-0x8],ecx
1005b1f5:	jl     0x1005b1fb
1005b1f7:	cmp    ecx,eax
1005b1f9:	jl     0x1005b200
1005b1fb:	call   0x10046eea
1005b200:	mov    esi,DWORD PTR [ebp+0x8]
1005b203:	mov    edi,0xe06d7363
1005b208:	cmp    DWORD PTR [esi],edi
1005b20a:	jne    0x1005b4db
1005b210:	cmp    DWORD PTR [esi+0x10],0x3
1005b214:	mov    ebx,0x19930520
1005b219:	jne    0x1005b348
1005b21f:	mov    eax,DWORD PTR [esi+0x14]
1005b222:	cmp    eax,ebx
1005b224:	je     0x1005b238
1005b226:	cmp    eax,0x19930521
1005b22b:	je     0x1005b238
1005b22d:	cmp    eax,0x19930522
1005b232:	jne    0x1005b348
1005b238:	cmp    DWORD PTR [esi+0x1c],0x0
1005b23c:	jne    0x1005b348
1005b242:	call   0x1004739c
1005b247:	cmp    DWORD PTR [eax+0x88],0x0
1005b24e:	je     0x1005b51a
1005b254:	call   0x1004739c
1005b259:	mov    esi,DWORD PTR [eax+0x88]
1005b25f:	mov    DWORD PTR [ebp+0x8],esi
1005b262:	call   0x1004739c
1005b267:	mov    eax,DWORD PTR [eax+0x8c]
1005b26d:	push   0x1
1005b26f:	push   esi
1005b270:	mov    DWORD PTR [ebp+0x10],eax
1005b273:	call   0x1004faf4
1005b278:	test   eax,eax
1005b27a:	pop    ecx
1005b27b:	pop    ecx
1005b27c:	jne    0x1005b283
1005b27e:	call   0x10046eea
1005b283:	cmp    DWORD PTR [esi],edi
1005b285:	jne    0x1005b2ad
1005b287:	cmp    DWORD PTR [esi+0x10],0x3
1005b28b:	jne    0x1005b2ad
1005b28d:	mov    eax,DWORD PTR [esi+0x14]
1005b290:	cmp    eax,ebx
1005b292:	je     0x1005b2a2
1005b294:	cmp    eax,0x19930521
1005b299:	je     0x1005b2a2
1005b29b:	cmp    eax,0x19930522
1005b2a0:	jne    0x1005b2ad
1005b2a2:	cmp    DWORD PTR [esi+0x1c],0x0
1005b2a6:	jne    0x1005b2ad
1005b2a8:	call   0x10046eea
1005b2ad:	call   0x1004739c
1005b2b2:	cmp    DWORD PTR [eax+0x94],0x0
1005b2b9:	je     0x1005b348
1005b2bf:	call   0x1004739c
1005b2c4:	mov    edi,DWORD PTR [eax+0x94]
1005b2ca:	call   0x1004739c
1005b2cf:	push   DWORD PTR [ebp+0x8]
1005b2d2:	xor    esi,esi
1005b2d4:	mov    DWORD PTR [eax+0x94],esi
1005b2da:	call   0x1005abfd
1005b2df:	test   al,al
1005b2e1:	pop    ecx
1005b2e2:	jne    0x1005b340
1005b2e4:	xor    ebx,ebx
1005b2e6:	cmp    DWORD PTR [edi],ebx
1005b2e8:	jle    0x1005b307
1005b2ea:	mov    eax,DWORD PTR [edi+0x4]
1005b2ed:	mov    ecx,DWORD PTR [ebx+eax*1+0x4]
1005b2f1:	push   0x1007f1b8
1005b2f6:	call   0x100436aa
1005b2fb:	test   al,al
1005b2fd:	jne    0x1005b30c
1005b2ff:	inc    esi
1005b300:	add    ebx,0x10
1005b303:	cmp    esi,DWORD PTR [edi]
1005b305:	jl     0x1005b2ea
1005b307:	jmp    0x10046e9e
1005b30c:	push   0x1
1005b30e:	push   DWORD PTR [ebp+0x8]
1005b311:	call   0x1005ab84
1005b316:	pop    ecx
1005b317:	pop    ecx
1005b318:	lea    eax,[ebp+0x8]
1005b31b:	push   eax
1005b31c:	lea    ecx,[ebp-0x2c]
1005b31f:	mov    DWORD PTR [ebp+0x8],0x1006caf8
1005b326:	call   0x10043152
1005b32b:	push   0x10074ce4
1005b330:	lea    eax,[ebp-0x2c]
1005b333:	push   eax
1005b334:	mov    DWORD PTR [ebp-0x2c],0x1006caf0
1005b33b:	call   0x10047c54
1005b340:	mov    esi,DWORD PTR [ebp+0x8]
1005b343:	mov    edi,0xe06d7363
1005b348:	cmp    DWORD PTR [esi],edi
1005b34a:	jne    0x1005b4d8
1005b350:	cmp    DWORD PTR [esi+0x10],0x3
1005b354:	jne    0x1005b4d8
1005b35a:	mov    eax,DWORD PTR [esi+0x14]
1005b35d:	cmp    eax,ebx
1005b35f:	je     0x1005b373
1005b361:	cmp    eax,0x19930521
1005b366:	je     0x1005b373
1005b368:	cmp    eax,0x19930522
1005b36d:	jne    0x1005b4d8
1005b373:	mov    edi,DWORD PTR [ebp+0x18]
1005b376:	cmp    DWORD PTR [edi+0xc],0x0
1005b37a:	jbe    0x1005b43f
1005b380:	lea    eax,[ebp-0x1c]
1005b383:	push   eax
1005b384:	lea    eax,[ebp-0x10]
1005b387:	push   eax
1005b388:	push   DWORD PTR [ebp-0x8]
1005b38b:	push   DWORD PTR [ebp+0x20]
1005b38e:	push   edi
1005b38f:	call   0x100595f4
1005b394:	add    esp,0x14
1005b397:	mov    edi,eax
1005b399:	mov    eax,DWORD PTR [ebp-0x10]
1005b39c:	cmp    eax,DWORD PTR [ebp-0x1c]
1005b39f:	jae    0x1005b43c
1005b3a5:	mov    eax,DWORD PTR [ebp-0x8]
1005b3a8:	cmp    DWORD PTR [edi],eax
1005b3aa:	jg     0x1005b431
1005b3b0:	cmp    eax,DWORD PTR [edi+0x4]
1005b3b3:	jg     0x1005b431
1005b3b5:	mov    eax,DWORD PTR [edi+0x10]
1005b3b8:	mov    DWORD PTR [ebp-0xc],eax
1005b3bb:	mov    eax,DWORD PTR [edi+0xc]
1005b3be:	test   eax,eax
1005b3c0:	mov    DWORD PTR [ebp-0x18],eax
1005b3c3:	jle    0x1005b431
1005b3c5:	mov    eax,DWORD PTR [esi+0x1c]
1005b3c8:	mov    eax,DWORD PTR [eax+0xc]
1005b3cb:	lea    ebx,[eax+0x4]
1005b3ce:	mov    eax,DWORD PTR [eax]
1005b3d0:	test   eax,eax
1005b3d2:	mov    DWORD PTR [ebp-0x14],eax
1005b3d5:	jle    0x1005b3fa
1005b3d7:	push   DWORD PTR [esi+0x1c]
1005b3da:	mov    eax,DWORD PTR [ebx]
1005b3dc:	push   eax
1005b3dd:	push   DWORD PTR [ebp-0xc]
1005b3e0:	mov    DWORD PTR [ebp-0x20],eax
1005b3e3:	call   0x1005a9be
1005b3e8:	add    esp,0xc
1005b3eb:	test   eax,eax
1005b3ed:	jne    0x1005b409
1005b3ef:	dec    DWORD PTR [ebp-0x14]
1005b3f2:	add    ebx,0x4
1005b3f5:	cmp    DWORD PTR [ebp-0x14],eax
1005b3f8:	jg     0x1005b3d7
1005b3fa:	dec    DWORD PTR [ebp-0x18]
1005b3fd:	add    DWORD PTR [ebp-0xc],0x10
1005b401:	cmp    DWORD PTR [ebp-0x18],0x0
1005b405:	jg     0x1005b3c5
1005b407:	jmp    0x1005b431
1005b409:	push   DWORD PTR [ebp+0x24]
1005b40c:	mov    ebx,DWORD PTR [ebp-0xc]
1005b40f:	push   DWORD PTR [ebp+0x20]
1005b412:	mov    BYTE PTR [ebp-0x1],0x1
1005b416:	push   DWORD PTR [ebp-0x20]
1005b419:	push   DWORD PTR [ebp+0x18]
1005b41c:	push   DWORD PTR [ebp+0x14]
1005b41f:	push   DWORD PTR [ebp+0x10]
1005b422:	push   esi
1005b423:	mov    esi,DWORD PTR [ebp+0xc]
1005b426:	call   0x1005b06b
1005b42b:	mov    esi,DWORD PTR [ebp+0x8]
1005b42e:	add    esp,0x1c
1005b431:	inc    DWORD PTR [ebp-0x10]
1005b434:	add    edi,0x14
1005b437:	jmp    0x1005b399
1005b43c:	mov    edi,DWORD PTR [ebp+0x18]
1005b43f:	cmp    BYTE PTR [ebp+0x1c],0x0
1005b443:	je     0x1005b44f
1005b445:	push   0x1
1005b447:	push   esi
1005b448:	call   0x1005ab84
1005b44d:	pop    ecx
1005b44e:	pop    ecx
1005b44f:	cmp    BYTE PTR [ebp-0x1],0x0
1005b453:	jne    0x1005b507
1005b459:	mov    eax,DWORD PTR [edi]
1005b45b:	and    eax,0x1fffffff
1005b460:	cmp    eax,0x19930521
1005b465:	jb     0x1005b507
1005b46b:	mov    edi,DWORD PTR [edi+0x1c]
1005b46e:	test   edi,edi
1005b470:	je     0x1005b507
1005b476:	push   esi
1005b477:	call   0x1005abfd
1005b47c:	test   al,al
1005b47e:	pop    ecx
1005b47f:	jne    0x1005b507
1005b485:	call   0x1004739c
1005b48a:	call   0x1004739c
1005b48f:	call   0x1004739c
1005b494:	mov    DWORD PTR [eax+0x88],esi
1005b49a:	call   0x1004739c
1005b49f:	cmp    DWORD PTR [ebp+0x24],0x0
1005b4a3:	mov    ecx,DWORD PTR [ebp+0x10]
1005b4a6:	mov    DWORD PTR [eax+0x8c],ecx
1005b4ac:	push   esi
1005b4ad:	jne    0x1005b4b4
1005b4af:	push   DWORD PTR [ebp+0xc]
1005b4b2:	jmp    0x1005b4b7
1005b4b4:	push   DWORD PTR [ebp+0x24]
1005b4b7:	call   0x100593ca
1005b4bc:	mov    esi,DWORD PTR [ebp+0x18]
1005b4bf:	push   0xffffffff
1005b4c1:	push   esi
1005b4c2:	push   DWORD PTR [ebp+0x14]
1005b4c5:	push   DWORD PTR [ebp+0xc]
1005b4c8:	call   0x1005aa5e
1005b4cd:	add    esp,0x10
1005b4d0:	push   DWORD PTR [esi+0x1c]
1005b4d3:	call   0x1005ac76
1005b4d8:	mov    ebx,DWORD PTR [ebp+0x18]
1005b4db:	cmp    DWORD PTR [ebx+0xc],0x0
1005b4df:	jbe    0x1005b507
1005b4e1:	cmp    BYTE PTR [ebp+0x1c],0x0
1005b4e5:	jne    0x1005b307
1005b4eb:	push   DWORD PTR [ebp+0x24]
1005b4ee:	push   DWORD PTR [ebp+0x20]
1005b4f1:	push   DWORD PTR [ebp-0x8]
1005b4f4:	push   ebx
1005b4f5:	push   DWORD PTR [ebp+0x14]
1005b4f8:	push   DWORD PTR [ebp+0x10]
1005b4fb:	push   DWORD PTR [ebp+0xc]
1005b4fe:	push   esi
1005b4ff:	call   0x1005b0d7
1005b504:	add    esp,0x20
1005b507:	call   0x1004739c
1005b50c:	cmp    DWORD PTR [eax+0x94],0x0
1005b513:	je     0x1005b51a
1005b515:	call   0x10046eea
1005b51a:	pop    edi
1005b51b:	pop    esi
1005b51c:	pop    ebx
1005b51d:	leave  
1005b51e:	ret    
1005b51f:	push   esi
1005b520:	push   DWORD PTR [esp+0x8]
1005b524:	mov    esi,ecx
1005b526:	call   0x100431b8
1005b52b:	mov    DWORD PTR [esi],0x1006caf0
1005b531:	mov    eax,esi
1005b533:	pop    esi
1005b534:	ret    0x4
1005b537:	push   ebp
1005b538:	mov    ebp,esp
1005b53a:	push   ebx
1005b53b:	push   esi
1005b53c:	push   edi
1005b53d:	call   0x1004739c
1005b542:	cmp    DWORD PTR [eax+0x20c],0x0
1005b549:	mov    eax,DWORD PTR [ebp+0x18]
1005b54c:	mov    ecx,DWORD PTR [ebp+0x8]
1005b54f:	mov    edi,0xe06d7363
1005b554:	mov    esi,0x1fffffff
1005b559:	mov    ebx,0x19930522
1005b55e:	jne    0x1005b580
1005b560:	mov    edx,DWORD PTR [ecx]
1005b562:	cmp    edx,edi
1005b564:	je     0x1005b580
1005b566:	cmp    edx,0x80000026
1005b56c:	je     0x1005b580
1005b56e:	mov    edx,DWORD PTR [eax]
1005b570:	and    edx,esi
1005b572:	cmp    edx,ebx
1005b574:	jb     0x1005b580
1005b576:	test   BYTE PTR [eax+0x20],0x1
1005b57a:	jne    0x1005b613
1005b580:	test   BYTE PTR [ecx+0x4],0x66
1005b584:	je     0x1005b5a9
1005b586:	cmp    DWORD PTR [eax+0x4],0x0
1005b58a:	je     0x1005b613
1005b590:	cmp    DWORD PTR [ebp+0x1c],0x0
1005b594:	jne    0x1005b613
1005b596:	push   0xffffffff
1005b598:	push   eax
1005b599:	push   DWORD PTR [ebp+0x14]
1005b59c:	push   DWORD PTR [ebp+0xc]
1005b59f:	call   0x1005aa5e
1005b5a4:	add    esp,0x10
1005b5a7:	jmp    0x1005b613
1005b5a9:	cmp    DWORD PTR [eax+0xc],0x0
1005b5ad:	jne    0x1005b5c1
1005b5af:	mov    edx,DWORD PTR [eax]
1005b5b1:	and    edx,esi
1005b5b3:	cmp    edx,0x19930521
1005b5b9:	jb     0x1005b613
1005b5bb:	cmp    DWORD PTR [eax+0x1c],0x0
1005b5bf:	je     0x1005b613
1005b5c1:	cmp    DWORD PTR [ecx],edi
1005b5c3:	jne    0x1005b5f7
1005b5c5:	cmp    DWORD PTR [ecx+0x10],0x3
1005b5c9:	jb     0x1005b5f7
1005b5cb:	cmp    DWORD PTR [ecx+0x14],ebx
1005b5ce:	jbe    0x1005b5f7
1005b5d0:	mov    edx,DWORD PTR [ecx+0x1c]
1005b5d3:	mov    edx,DWORD PTR [edx+0x8]
1005b5d6:	test   edx,edx
1005b5d8:	je     0x1005b5f7
1005b5da:	movzx  esi,BYTE PTR [ebp+0x24]
1005b5de:	push   esi
1005b5df:	push   DWORD PTR [ebp+0x20]
1005b5e2:	push   DWORD PTR [ebp+0x1c]
1005b5e5:	push   eax
1005b5e6:	push   DWORD PTR [ebp+0x14]
1005b5e9:	push   DWORD PTR [ebp+0x10]
1005b5ec:	push   DWORD PTR [ebp+0xc]
1005b5ef:	push   ecx
1005b5f0:	call   edx
1005b5f2:	add    esp,0x20
1005b5f5:	jmp    0x1005b616
1005b5f7:	push   DWORD PTR [ebp+0x20]
1005b5fa:	push   DWORD PTR [ebp+0x1c]
1005b5fd:	push   DWORD PTR [ebp+0x24]
1005b600:	push   eax
1005b601:	push   DWORD PTR [ebp+0x14]
1005b604:	push   DWORD PTR [ebp+0x10]
1005b607:	push   DWORD PTR [ebp+0xc]
1005b60a:	push   ecx
1005b60b:	call   0x1005b1c9
1005b610:	add    esp,0x20
1005b613:	xor    eax,eax
1005b615:	inc    eax
1005b616:	pop    edi
1005b617:	pop    esi
1005b618:	pop    ebx
1005b619:	pop    ebp
1005b61a:	ret    
1005b61b:	int3   
1005b61c:	int3   
1005b61d:	int3   
1005b61e:	int3   
1005b61f:	int3   
1005b620:	push   ebp
1005b621:	mov    ebp,esp
1005b623:	sub    esp,0x4
1005b626:	push   ebx
1005b627:	push   ecx
1005b628:	mov    eax,DWORD PTR [ebp+0xc]
1005b62b:	add    eax,0xc
1005b62e:	mov    DWORD PTR [ebp-0x4],eax
1005b631:	mov    eax,DWORD PTR [ebp+0x8]
1005b634:	push   ebp
1005b635:	push   DWORD PTR [ebp+0x10]
1005b638:	mov    ecx,DWORD PTR [ebp+0x10]
1005b63b:	mov    ebp,DWORD PTR [ebp-0x4]
1005b63e:	call   0x1004fac0
1005b643:	push   esi
1005b644:	push   edi
1005b645:	call   eax
1005b647:	pop    edi
1005b648:	pop    esi
1005b649:	mov    ebx,ebp
1005b64b:	pop    ebp
1005b64c:	mov    ecx,DWORD PTR [ebp+0x10]
1005b64f:	push   ebp
1005b650:	mov    ebp,ebx
1005b652:	cmp    ecx,0x100
1005b658:	jne    0x1005b65f
1005b65a:	mov    ecx,0x2
1005b65f:	push   ecx
1005b660:	call   0x1004fac0
1005b665:	pop    ebp
1005b666:	pop    ecx
1005b667:	pop    ebx
1005b668:	leave  
1005b669:	ret    0xc
1005b66c:	push   ebp
1005b66d:	mov    ebp,esp
1005b66f:	sub    esp,0x10
1005b672:	push   esi
1005b673:	push   DWORD PTR [ebp+0xc]
1005b676:	lea    ecx,[ebp-0x10]
1005b679:	call   0x10045785
1005b67e:	mov    esi,DWORD PTR [ebp+0x8]
1005b681:	movsx  eax,BYTE PTR [esi]
1005b684:	push   eax
1005b685:	call   0x10046071
1005b68a:	cmp    eax,0x65
1005b68d:	jmp    0x1005b69b
1005b68f:	inc    esi
1005b690:	movzx  eax,BYTE PTR [esi]
1005b693:	push   eax
1005b694:	call   0x1004f4ff
1005b699:	test   eax,eax
1005b69b:	pop    ecx
1005b69c:	jne    0x1005b68f
1005b69e:	movsx  eax,BYTE PTR [esi]
1005b6a1:	push   eax
1005b6a2:	call   0x10046071
1005b6a7:	cmp    eax,0x78
1005b6aa:	pop    ecx
1005b6ab:	jne    0x1005b6af
1005b6ad:	inc    esi
1005b6ae:	inc    esi
1005b6af:	mov    ecx,DWORD PTR [ebp-0x10]
1005b6b2:	mov    ecx,DWORD PTR [ecx+0xbc]
1005b6b8:	mov    ecx,DWORD PTR [ecx]
1005b6ba:	mov    al,BYTE PTR [esi]
1005b6bc:	mov    cl,BYTE PTR [ecx]
1005b6be:	mov    BYTE PTR [esi],cl
1005b6c0:	inc    esi
1005b6c1:	mov    cl,BYTE PTR [esi]
1005b6c3:	mov    BYTE PTR [esi],al
1005b6c5:	mov    al,cl
1005b6c7:	mov    cl,BYTE PTR [esi]
1005b6c9:	inc    esi
1005b6ca:	test   cl,cl
1005b6cc:	jne    0x1005b6c1
1005b6ce:	cmp    BYTE PTR [ebp-0x4],cl
1005b6d1:	pop    esi
1005b6d2:	je     0x1005b6db
1005b6d4:	mov    eax,DWORD PTR [ebp-0x8]
1005b6d7:	and    DWORD PTR [eax+0x70],0xfffffffd
1005b6db:	leave  
1005b6dc:	ret    
1005b6dd:	push   ebp
1005b6de:	mov    ebp,esp
1005b6e0:	sub    esp,0x10
1005b6e3:	push   esi
1005b6e4:	push   DWORD PTR [ebp+0xc]
1005b6e7:	lea    ecx,[ebp-0x10]
1005b6ea:	call   0x10045785
1005b6ef:	mov    eax,DWORD PTR [ebp+0x8]
1005b6f2:	mov    cl,BYTE PTR [eax]
1005b6f4:	test   cl,cl
1005b6f6:	mov    esi,DWORD PTR [ebp-0x10]
1005b6f9:	je     0x1005b710
1005b6fb:	mov    edx,DWORD PTR [esi+0xbc]
1005b701:	mov    edx,DWORD PTR [edx]
1005b703:	mov    dl,BYTE PTR [edx]
1005b705:	cmp    cl,dl
1005b707:	je     0x1005b710
1005b709:	inc    eax
1005b70a:	mov    cl,BYTE PTR [eax]
1005b70c:	test   cl,cl
1005b70e:	jne    0x1005b705
1005b710:	mov    cl,BYTE PTR [eax]
1005b712:	inc    eax
1005b713:	test   cl,cl
1005b715:	je     0x1005b74d
1005b717:	jmp    0x1005b724
1005b719:	cmp    cl,0x65
1005b71c:	je     0x1005b72a
1005b71e:	cmp    cl,0x45
1005b721:	je     0x1005b72a
1005b723:	inc    eax
1005b724:	mov    cl,BYTE PTR [eax]
1005b726:	test   cl,cl
1005b728:	jne    0x1005b719
1005b72a:	mov    edx,eax
1005b72c:	dec    eax
1005b72d:	cmp    BYTE PTR [eax],0x30
1005b730:	je     0x1005b72c
1005b732:	mov    ecx,DWORD PTR [esi+0xbc]
1005b738:	mov    ecx,DWORD PTR [ecx]
1005b73a:	push   ebx
1005b73b:	mov    bl,BYTE PTR [eax]
1005b73d:	cmp    bl,BYTE PTR [ecx]
1005b73f:	pop    ebx
1005b740:	jne    0x1005b743
1005b742:	dec    eax
1005b743:	mov    cl,BYTE PTR [edx]
1005b745:	inc    eax
1005b746:	inc    edx
1005b747:	test   cl,cl
1005b749:	mov    BYTE PTR [eax],cl
1005b74b:	jne    0x1005b743
1005b74d:	cmp    BYTE PTR [ebp-0x4],0x0
1005b751:	pop    esi
1005b752:	je     0x1005b75b
1005b754:	mov    eax,DWORD PTR [ebp-0x8]
1005b757:	and    DWORD PTR [eax+0x70],0xfffffffd
1005b75b:	leave  
1005b75c:	ret    
1005b75d:	fldz   
1005b75f:	mov    eax,DWORD PTR [esp+0x4]
1005b763:	fcomp  QWORD PTR [eax]
1005b765:	fnstsw ax
1005b767:	test   ah,0x41
1005b76a:	jp     0x1005b770
1005b76c:	xor    eax,eax
1005b76e:	inc    eax
1005b76f:	ret    
1005b770:	xor    eax,eax
1005b772:	ret    
1005b773:	push   ebp
1005b774:	mov    ebp,esp
1005b776:	push   ecx
1005b777:	push   ecx
1005b778:	cmp    DWORD PTR [ebp+0x8],0x0
1005b77c:	push   DWORD PTR [ebp+0x14]
1005b77f:	push   DWORD PTR [ebp+0x10]
1005b782:	je     0x1005b79d
1005b784:	lea    eax,[ebp-0x8]
1005b787:	push   eax
1005b788:	call   0x1005d036
1005b78d:	mov    ecx,DWORD PTR [ebp-0x8]
1005b790:	mov    eax,DWORD PTR [ebp+0xc]
1005b793:	mov    DWORD PTR [eax],ecx
1005b795:	mov    ecx,DWORD PTR [ebp-0x4]
1005b798:	mov    DWORD PTR [eax+0x4],ecx
1005b79b:	jmp    0x1005b7ae
1005b79d:	lea    eax,[ebp+0x8]
1005b7a0:	push   eax
1005b7a1:	call   0x1005d0dc
1005b7a6:	mov    eax,DWORD PTR [ebp+0xc]
1005b7a9:	mov    ecx,DWORD PTR [ebp+0x8]
1005b7ac:	mov    DWORD PTR [eax],ecx
1005b7ae:	add    esp,0xc
1005b7b1:	leave  
1005b7b2:	ret    
1005b7b3:	push   0x0
1005b7b5:	push   DWORD PTR [esp+0x10]
1005b7b9:	push   DWORD PTR [esp+0x10]
1005b7bd:	push   DWORD PTR [esp+0x10]
1005b7c1:	call   0x1005b773
1005b7c6:	add    esp,0x10
1005b7c9:	ret    
1005b7ca:	test   edi,edi
1005b7cc:	push   esi
1005b7cd:	mov    esi,eax
1005b7cf:	je     0x1005b7e5
1005b7d1:	push   esi
1005b7d2:	call   0x10043250
1005b7d7:	inc    eax
1005b7d8:	push   eax
1005b7d9:	push   esi
1005b7da:	add    esi,edi
1005b7dc:	push   esi
1005b7dd:	call   0x10045960
1005b7e2:	add    esp,0x10
1005b7e5:	pop    esi
1005b7e6:	ret    
1005b7e7:	push   0x0
1005b7e9:	push   DWORD PTR [esp+0x8]
1005b7ed:	call   0x1005b66c
1005b7f2:	pop    ecx
1005b7f3:	pop    ecx
1005b7f4:	ret    
1005b7f5:	push   0x0
1005b7f7:	push   DWORD PTR [esp+0x8]
1005b7fb:	call   0x1005b6dd
1005b800:	pop    ecx
1005b801:	pop    ecx
1005b802:	ret    
1005b803:	push   ebp
1005b804:	mov    ebp,esp
1005b806:	sub    esp,0x10
1005b809:	push   ebx
1005b80a:	push   esi
1005b80b:	push   edi
1005b80c:	push   DWORD PTR [ebp+0x1c]
1005b80f:	lea    ecx,[ebp-0x10]
1005b812:	mov    ebx,eax
1005b814:	call   0x10045785
1005b819:	xor    esi,esi
1005b81b:	cmp    ebx,esi
1005b81d:	jne    0x1005b84a
1005b81f:	call   0x10046df5
1005b824:	push   0x16
1005b826:	pop    edi
1005b827:	push   esi
1005b828:	push   esi
1005b829:	push   esi
1005b82a:	push   esi
1005b82b:	push   esi
1005b82c:	mov    DWORD PTR [eax],edi
1005b82e:	call   0x100435cc
1005b833:	add    esp,0x14
1005b836:	cmp    BYTE PTR [ebp-0x4],0x0
1005b83a:	je     0x1005b843
1005b83c:	mov    eax,DWORD PTR [ebp-0x8]
1005b83f:	and    DWORD PTR [eax+0x70],0xfffffffd
1005b843:	mov    eax,edi
1005b845:	jmp    0x1005b96b
1005b84a:	cmp    DWORD PTR [ebp+0x8],esi
1005b84d:	jbe    0x1005b81f
1005b84f:	cmp    DWORD PTR [ebp+0xc],esi
1005b852:	jle    0x1005b859
1005b854:	mov    eax,DWORD PTR [ebp+0xc]
1005b857:	jmp    0x1005b85b
1005b859:	xor    eax,eax
1005b85b:	add    eax,0x9
1005b85e:	cmp    DWORD PTR [ebp+0x8],eax
1005b861:	ja     0x1005b86c
1005b863:	call   0x10046df5
1005b868:	push   0x22
1005b86a:	jmp    0x1005b826
1005b86c:	cmp    BYTE PTR [ebp+0x18],0x0
1005b870:	je     0x1005b890
1005b872:	mov    edx,DWORD PTR [ebp+0x14]
1005b875:	xor    eax,eax
1005b877:	cmp    DWORD PTR [ebp+0xc],esi
1005b87a:	setg   al
1005b87d:	xor    ecx,ecx
1005b87f:	cmp    DWORD PTR [edx],0x2d
1005b882:	sete   cl
1005b885:	mov    edi,eax
1005b887:	add    ecx,ebx
1005b889:	mov    eax,ecx
1005b88b:	call   0x1005b7ca
1005b890:	mov    edi,DWORD PTR [ebp+0x14]
1005b893:	cmp    DWORD PTR [edi],0x2d
1005b896:	mov    esi,ebx
1005b898:	jne    0x1005b8a0
1005b89a:	mov    BYTE PTR [ebx],0x2d
1005b89d:	lea    esi,[ebx+0x1]
1005b8a0:	cmp    DWORD PTR [ebp+0xc],0x0
1005b8a4:	jle    0x1005b8be
1005b8a6:	lea    eax,[esi+0x1]
1005b8a9:	mov    cl,BYTE PTR [eax]
1005b8ab:	mov    BYTE PTR [esi],cl
1005b8ad:	mov    esi,eax
1005b8af:	mov    eax,DWORD PTR [ebp-0x10]
1005b8b2:	mov    eax,DWORD PTR [eax+0xbc]
1005b8b8:	mov    eax,DWORD PTR [eax]
1005b8ba:	mov    al,BYTE PTR [eax]
1005b8bc:	mov    BYTE PTR [esi],al
1005b8be:	xor    eax,eax
1005b8c0:	cmp    BYTE PTR [ebp+0x18],al
1005b8c3:	sete   al
1005b8c6:	add    eax,DWORD PTR [ebp+0xc]
1005b8c9:	add    esi,eax
1005b8cb:	cmp    DWORD PTR [ebp+0x8],0xffffffff
1005b8cf:	jne    0x1005b8d6
1005b8d1:	or     ebx,0xffffffff
1005b8d4:	jmp    0x1005b8db
1005b8d6:	sub    ebx,esi
1005b8d8:	add    ebx,DWORD PTR [ebp+0x8]
1005b8db:	push   0x1006cb08
1005b8e0:	push   ebx
1005b8e1:	push   esi
1005b8e2:	call   0x10046e39
1005b8e7:	add    esp,0xc
1005b8ea:	xor    ebx,ebx
1005b8ec:	test   eax,eax
1005b8ee:	je     0x1005b8fd
1005b8f0:	push   ebx
1005b8f1:	push   ebx
1005b8f2:	push   ebx
1005b8f3:	push   ebx
1005b8f4:	push   ebx
1005b8f5:	call   0x100434d0
1005b8fa:	add    esp,0x14
1005b8fd:	cmp    DWORD PTR [ebp+0x10],ebx
1005b900:	lea    ecx,[esi+0x2]
1005b903:	je     0x1005b908
1005b905:	mov    BYTE PTR [esi],0x45
1005b908:	mov    eax,DWORD PTR [edi+0xc]
1005b90b:	inc    esi
1005b90c:	cmp    BYTE PTR [eax],0x30
1005b90f:	je     0x1005b93f
1005b911:	mov    eax,DWORD PTR [edi+0x4]
1005b914:	dec    eax
1005b915:	jns    0x1005b91c
1005b917:	neg    eax
1005b919:	mov    BYTE PTR [esi],0x2d
1005b91c:	inc    esi
1005b91d:	cmp    eax,0x64
1005b920:	jl     0x1005b92c
1005b922:	cdq    
1005b923:	push   0x64
1005b925:	pop    edi
1005b926:	idiv   edi
1005b928:	add    BYTE PTR [esi],al
1005b92a:	mov    eax,edx
1005b92c:	inc    esi
1005b92d:	cmp    eax,0xa
1005b930:	jl     0x1005b93c
1005b932:	cdq    
1005b933:	push   0xa
1005b935:	pop    edi
1005b936:	idiv   edi
1005b938:	add    BYTE PTR [esi],al
1005b93a:	mov    eax,edx
1005b93c:	add    BYTE PTR [esi+0x1],al
1005b93f:	test   BYTE PTR ds:0x10080bf8,0x1
1005b946:	je     0x1005b95c
1005b948:	cmp    BYTE PTR [ecx],0x30
1005b94b:	jne    0x1005b95c
1005b94d:	push   0x3
1005b94f:	lea    eax,[ecx+0x1]
1005b952:	push   eax
1005b953:	push   ecx
1005b954:	call   0x10045960
1005b959:	add    esp,0xc
1005b95c:	cmp    BYTE PTR [ebp-0x4],0x0
1005b960:	je     0x1005b969
1005b962:	mov    eax,DWORD PTR [ebp-0x8]
1005b965:	and    DWORD PTR [eax+0x70],0xfffffffd
1005b969:	xor    eax,eax
1005b96b:	pop    edi
1005b96c:	pop    esi
1005b96d:	pop    ebx
1005b96e:	leave  
1005b96f:	ret    
1005b970:	push   ebp
1005b971:	mov    ebp,esp
1005b973:	sub    esp,0x2c
1005b976:	mov    eax,ds:0x1007e030
1005b97b:	xor    eax,ebp
1005b97d:	mov    DWORD PTR [ebp-0x4],eax
1005b980:	mov    eax,DWORD PTR [ebp+0x8]
1005b983:	push   ebx
1005b984:	push   esi
1005b985:	push   edi
1005b986:	mov    edi,DWORD PTR [ebp+0xc]
1005b989:	push   0x16
1005b98b:	pop    esi
1005b98c:	push   esi
1005b98d:	lea    ecx,[ebp-0x1c]
1005b990:	push   ecx
1005b991:	lea    ecx,[ebp-0x2c]
1005b994:	push   ecx
1005b995:	push   DWORD PTR [eax+0x4]
1005b998:	push   DWORD PTR [eax]
1005b99a:	call   0x1005d2fa
1005b99f:	xor    ebx,ebx
1005b9a1:	add    esp,0x14
1005b9a4:	cmp    edi,ebx
1005b9a6:	jne    0x1005b9c0
1005b9a8:	call   0x10046df5
1005b9ad:	push   ebx
1005b9ae:	push   ebx
1005b9af:	push   ebx
1005b9b0:	push   ebx
1005b9b1:	push   ebx
1005b9b2:	mov    DWORD PTR [eax],esi
1005b9b4:	call   0x100435cc
1005b9b9:	add    esp,0x14
1005b9bc:	mov    eax,esi
1005b9be:	jmp    0x1005ba2f
1005b9c0:	mov    eax,DWORD PTR [ebp+0x10]
1005b9c3:	cmp    eax,ebx
1005b9c5:	jbe    0x1005b9a8
1005b9c7:	cmp    eax,0xffffffff
1005b9ca:	mov    esi,DWORD PTR [ebp+0x14]
1005b9cd:	jne    0x1005b9d4
1005b9cf:	or     eax,0xffffffff
1005b9d2:	jmp    0x1005b9e8
1005b9d4:	xor    ecx,ecx
1005b9d6:	cmp    DWORD PTR [ebp-0x2c],0x2d
1005b9da:	sete   cl
1005b9dd:	sub    eax,ecx
1005b9df:	xor    ecx,ecx
1005b9e1:	cmp    esi,ebx
1005b9e3:	setg   cl
1005b9e6:	sub    eax,ecx
1005b9e8:	lea    ecx,[ebp-0x2c]
1005b9eb:	push   ecx
1005b9ec:	lea    ecx,[esi+0x1]
1005b9ef:	push   ecx
1005b9f0:	push   eax
1005b9f1:	xor    eax,eax
1005b9f3:	cmp    DWORD PTR [ebp-0x2c],0x2d
1005b9f7:	sete   al
1005b9fa:	xor    ecx,ecx
1005b9fc:	cmp    esi,ebx
1005b9fe:	setg   cl
1005ba01:	add    eax,edi
1005ba03:	add    ecx,eax
1005ba05:	push   ecx
1005ba06:	call   0x1005d182
1005ba0b:	add    esp,0x10
1005ba0e:	cmp    eax,ebx
1005ba10:	je     0x1005ba16
1005ba12:	mov    BYTE PTR [edi],bl
1005ba14:	jmp    0x1005ba2f
1005ba16:	push   DWORD PTR [ebp+0x1c]
1005ba19:	lea    eax,[ebp-0x2c]
1005ba1c:	push   ebx
1005ba1d:	push   eax
1005ba1e:	push   DWORD PTR [ebp+0x18]
1005ba21:	mov    eax,edi
1005ba23:	push   esi
1005ba24:	push   DWORD PTR [ebp+0x10]
1005ba27:	call   0x1005b803
1005ba2c:	add    esp,0x18
1005ba2f:	mov    ecx,DWORD PTR [ebp-0x4]
1005ba32:	pop    edi
1005ba33:	pop    esi
1005ba34:	xor    ecx,ebp
1005ba36:	pop    ebx
1005ba37:	call   0x100430d7
1005ba3c:	leave  
1005ba3d:	ret    
1005ba3e:	push   ebp
1005ba3f:	mov    ebp,esp
1005ba41:	push   0x0
1005ba43:	push   DWORD PTR [ebp+0x18]
1005ba46:	push   DWORD PTR [ebp+0x14]
1005ba49:	push   DWORD PTR [ebp+0x10]
1005ba4c:	push   DWORD PTR [ebp+0xc]
1005ba4f:	push   DWORD PTR [ebp+0x8]
1005ba52:	call   0x1005b970
1005ba57:	add    esp,0x18
1005ba5a:	pop    ebp
1005ba5b:	ret    
1005ba5c:	push   ebp
1005ba5d:	mov    ebp,esp
1005ba5f:	sub    esp,0x24
1005ba62:	push   esi
1005ba63:	push   edi
1005ba64:	push   DWORD PTR [ebp+0x1c]
1005ba67:	lea    ecx,[ebp-0x24]
1005ba6a:	mov    DWORD PTR [ebp-0x14],0x3ff
1005ba71:	xor    edi,edi
1005ba73:	mov    DWORD PTR [ebp-0x4],0x30
1005ba7a:	call   0x10045785
1005ba7f:	cmp    DWORD PTR [ebp+0x14],edi
1005ba82:	jge    0x1005ba87
1005ba84:	mov    DWORD PTR [ebp+0x14],edi
1005ba87:	mov    esi,DWORD PTR [ebp+0xc]
1005ba8a:	cmp    esi,edi
1005ba8c:	jne    0x1005bab9
1005ba8e:	call   0x10046df5
1005ba93:	push   0x16
1005ba95:	pop    esi
1005ba96:	push   edi
1005ba97:	push   edi
1005ba98:	push   edi
1005ba99:	push   edi
1005ba9a:	push   edi
1005ba9b:	mov    DWORD PTR [eax],esi
1005ba9d:	call   0x100435cc
1005baa2:	add    esp,0x14
1005baa5:	cmp    BYTE PTR [ebp-0x18],0x0
1005baa9:	je     0x1005bab2
1005baab:	mov    eax,DWORD PTR [ebp-0x1c]
1005baae:	and    DWORD PTR [eax+0x70],0xfffffffd
1005bab2:	mov    eax,esi
1005bab4:	jmp    0x1005bdc9
1005bab9:	cmp    DWORD PTR [ebp+0x10],edi
1005babc:	jbe    0x1005ba8e
1005babe:	mov    eax,DWORD PTR [ebp+0x14]
1005bac1:	add    eax,0xb
1005bac4:	cmp    DWORD PTR [ebp+0x10],eax
1005bac7:	mov    BYTE PTR [esi],0x0
1005baca:	ja     0x1005bad5
1005bacc:	call   0x10046df5
1005bad1:	push   0x22
1005bad3:	jmp    0x1005ba95
1005bad5:	mov    edi,DWORD PTR [ebp+0x8]
1005bad8:	mov    eax,DWORD PTR [edi]
1005bada:	mov    DWORD PTR [ebp-0xc],eax
1005badd:	mov    eax,DWORD PTR [edi+0x4]
1005bae0:	mov    ecx,eax
1005bae2:	shr    ecx,0x14
1005bae5:	mov    edx,0x7ff
1005baea:	push   ebx
1005baeb:	and    ecx,edx
1005baed:	xor    ebx,ebx
1005baef:	cmp    ecx,edx
1005baf1:	jne    0x1005bb87
1005baf7:	test   ebx,ebx
1005baf9:	jne    0x1005bb87
1005baff:	mov    eax,DWORD PTR [ebp+0x10]
1005bb02:	cmp    eax,0xffffffff
1005bb05:	jne    0x1005bb0b
1005bb07:	or     eax,eax
1005bb09:	jmp    0x1005bb0e
1005bb0b:	add    eax,0xfffffffe
1005bb0e:	push   0x0
1005bb10:	push   DWORD PTR [ebp+0x14]
1005bb13:	lea    ebx,[esi+0x2]
1005bb16:	push   eax
1005bb17:	push   ebx
1005bb18:	push   edi
1005bb19:	call   0x1005ba3e
1005bb1e:	add    esp,0x14
1005bb21:	test   eax,eax
1005bb23:	je     0x1005bb3e
1005bb25:	cmp    BYTE PTR [ebp-0x18],0x0
1005bb29:	mov    BYTE PTR [esi],0x0
1005bb2c:	je     0x1005bdc8
1005bb32:	mov    ecx,DWORD PTR [ebp-0x1c]
1005bb35:	and    DWORD PTR [ecx+0x70],0xfffffffd
1005bb39:	jmp    0x1005bdc8
1005bb3e:	cmp    BYTE PTR [ebx],0x2d
1005bb41:	jne    0x1005bb47
1005bb43:	mov    BYTE PTR [esi],0x2d
1005bb46:	inc    esi
1005bb47:	mov    BYTE PTR [esi],0x30
1005bb4a:	inc    esi
1005bb4b:	cmp    DWORD PTR [ebp+0x18],0x0
1005bb4f:	push   0x65
1005bb51:	sete   al
1005bb54:	dec    al
1005bb56:	and    al,0xe0
1005bb58:	add    al,0x78
1005bb5a:	mov    BYTE PTR [esi],al
1005bb5c:	inc    esi
1005bb5d:	push   esi
1005bb5e:	call   0x10059b40
1005bb63:	test   eax,eax
1005bb65:	pop    ecx
1005bb66:	pop    ecx
1005bb67:	je     0x1005bdb9
1005bb6d:	cmp    DWORD PTR [ebp+0x18],0x0
1005bb71:	sete   cl
1005bb74:	dec    cl
1005bb76:	and    cl,0xe0
1005bb79:	add    cl,0x70
1005bb7c:	mov    BYTE PTR [eax],cl
1005bb7e:	mov    BYTE PTR [eax+0x3],0x0
1005bb82:	jmp    0x1005bdb9
1005bb87:	and    eax,0x80000000
1005bb8c:	xor    ecx,ecx
1005bb8e:	or     ecx,eax
1005bb90:	je     0x1005bb96
1005bb92:	mov    BYTE PTR [esi],0x2d
1005bb95:	inc    esi
1005bb96:	mov    ebx,DWORD PTR [ebp+0x18]
1005bb99:	mov    BYTE PTR [esi],0x30
1005bb9c:	inc    esi
1005bb9d:	test   ebx,ebx
1005bb9f:	sete   al
1005bba2:	dec    al
1005bba4:	and    al,0xe0
1005bba6:	add    al,0x78
1005bba8:	mov    BYTE PTR [esi],al
1005bbaa:	mov    ecx,DWORD PTR [edi+0x4]
1005bbad:	inc    esi
1005bbae:	neg    ebx
1005bbb0:	sbb    ebx,ebx
1005bbb2:	and    ebx,0xffffffe0
1005bbb5:	and    ecx,0x7ff00000
1005bbbb:	xor    eax,eax
1005bbbd:	add    ebx,0x27
1005bbc0:	xor    edx,edx
1005bbc2:	or     eax,ecx
1005bbc4:	jne    0x1005bbe7
1005bbc6:	mov    BYTE PTR [esi],0x30
1005bbc9:	mov    ecx,DWORD PTR [edi+0x4]
1005bbcc:	mov    eax,DWORD PTR [edi]
1005bbce:	and    ecx,0xfffff
1005bbd4:	inc    esi
1005bbd5:	or     eax,ecx
1005bbd7:	jne    0x1005bbde
1005bbd9:	mov    DWORD PTR [ebp-0x14],edx
1005bbdc:	jmp    0x1005bbeb
1005bbde:	mov    DWORD PTR [ebp-0x14],0x3fe
1005bbe5:	jmp    0x1005bbeb
1005bbe7:	mov    BYTE PTR [esi],0x31
1005bbea:	inc    esi
1005bbeb:	mov    eax,esi
1005bbed:	inc    esi
1005bbee:	cmp    DWORD PTR [ebp+0x14],edx
1005bbf1:	mov    DWORD PTR [ebp+0xc],eax
1005bbf4:	jne    0x1005bbfa
1005bbf6:	mov    BYTE PTR [eax],dl
1005bbf8:	jmp    0x1005bc09
1005bbfa:	mov    ecx,DWORD PTR [ebp-0x24]
1005bbfd:	mov    ecx,DWORD PTR [ecx+0xbc]
1005bc03:	mov    ecx,DWORD PTR [ecx]
1005bc05:	mov    cl,BYTE PTR [ecx]
1005bc07:	mov    BYTE PTR [eax],cl
1005bc09:	mov    ecx,DWORD PTR [edi+0x4]
1005bc0c:	mov    eax,DWORD PTR [edi]
1005bc0e:	and    ecx,0xfffff
1005bc14:	mov    DWORD PTR [ebp-0x8],ecx
1005bc17:	ja     0x1005bc21
1005bc19:	cmp    eax,edx
1005bc1b:	jbe    0x1005bcd6
1005bc21:	mov    DWORD PTR [ebp-0xc],edx
1005bc24:	mov    DWORD PTR [ebp-0x8],0xf0000
1005bc2b:	cmp    DWORD PTR [ebp+0x14],0x0
1005bc2f:	jle    0x1005bc7e
1005bc31:	mov    edx,DWORD PTR [edi+0x4]
1005bc34:	and    edx,DWORD PTR [ebp-0x8]
1005bc37:	mov    eax,DWORD PTR [edi]
1005bc39:	movsx  ecx,WORD PTR [ebp-0x4]
1005bc3d:	and    eax,DWORD PTR [ebp-0xc]
1005bc40:	and    edx,0xfffff
1005bc46:	call   0x1005d470
1005bc4b:	add    ax,0x30
1005bc4f:	movzx  eax,ax
1005bc52:	cmp    ax,0x39
1005bc56:	jbe    0x1005bc5a
1005bc58:	add    eax,ebx
1005bc5a:	mov    ecx,DWORD PTR [ebp-0x8]
1005bc5d:	sub    DWORD PTR [ebp-0x4],0x4
1005bc61:	mov    BYTE PTR [esi],al
1005bc63:	mov    eax,DWORD PTR [ebp-0xc]
1005bc66:	shrd   eax,ecx,0x4
1005bc6a:	shr    ecx,0x4
1005bc6d:	inc    esi
1005bc6e:	dec    DWORD PTR [ebp+0x14]
1005bc71:	cmp    WORD PTR [ebp-0x4],0x0
1005bc76:	mov    DWORD PTR [ebp-0xc],eax
1005bc79:	mov    DWORD PTR [ebp-0x8],ecx
1005bc7c:	jge    0x1005bc2b
1005bc7e:	cmp    WORD PTR [ebp-0x4],0x0
1005bc83:	jl     0x1005bcd6
1005bc85:	mov    edx,DWORD PTR [edi+0x4]
1005bc88:	and    edx,DWORD PTR [ebp-0x8]
1005bc8b:	mov    eax,DWORD PTR [edi]
1005bc8d:	movsx  ecx,WORD PTR [ebp-0x4]
1005bc91:	and    eax,DWORD PTR [ebp-0xc]
1005bc94:	and    edx,0xfffff
1005bc9a:	call   0x1005d470
1005bc9f:	cmp    ax,0x8
1005bca3:	jbe    0x1005bcd6
1005bca5:	lea    eax,[esi-0x1]
1005bca8:	mov    cl,BYTE PTR [eax]
1005bcaa:	cmp    cl,0x66
1005bcad:	je     0x1005bcb4
1005bcaf:	cmp    cl,0x46
1005bcb2:	jne    0x1005bcba
1005bcb4:	mov    BYTE PTR [eax],0x30
1005bcb7:	dec    eax
1005bcb8:	jmp    0x1005bca8
1005bcba:	cmp    eax,DWORD PTR [ebp+0xc]
1005bcbd:	je     0x1005bcd3
1005bcbf:	mov    cl,BYTE PTR [eax]
1005bcc1:	cmp    cl,0x39
1005bcc4:	jne    0x1005bccd
1005bcc6:	add    bl,0x3a
1005bcc9:	mov    BYTE PTR [eax],bl
1005bccb:	jmp    0x1005bcd6
1005bccd:	inc    cl
1005bccf:	mov    BYTE PTR [eax],cl
1005bcd1:	jmp    0x1005bcd6
1005bcd3:	inc    BYTE PTR [eax-0x1]
1005bcd6:	cmp    DWORD PTR [ebp+0x14],0x0
1005bcda:	jle    0x1005bced
1005bcdc:	push   DWORD PTR [ebp+0x14]
1005bcdf:	push   0x30
1005bce1:	push   esi
1005bce2:	call   0x10045ea0
1005bce7:	add    esp,0xc
1005bcea:	add    esi,DWORD PTR [ebp+0x14]
1005bced:	mov    eax,DWORD PTR [ebp+0xc]
1005bcf0:	cmp    BYTE PTR [eax],0x0
1005bcf3:	jne    0x1005bcf7
1005bcf5:	mov    esi,eax
1005bcf7:	cmp    DWORD PTR [ebp+0x18],0x0
1005bcfb:	mov    cl,0x34
1005bcfd:	sete   al
1005bd00:	dec    al
1005bd02:	and    al,0xe0
1005bd04:	add    al,0x70
1005bd06:	mov    BYTE PTR [esi],al
1005bd08:	mov    eax,DWORD PTR [edi]
1005bd0a:	mov    edx,DWORD PTR [edi+0x4]
1005bd0d:	inc    esi
1005bd0e:	call   0x1005d470
1005bd13:	xor    ebx,ebx
1005bd15:	and    eax,0x7ff
1005bd1a:	and    edx,ebx
1005bd1c:	sub    eax,DWORD PTR [ebp-0x14]
1005bd1f:	push   ebx
1005bd20:	pop    ecx
1005bd21:	sbb    edx,ecx
1005bd23:	js     0x1005bd31
1005bd25:	jg     0x1005bd2b
1005bd27:	cmp    eax,ebx
1005bd29:	jb     0x1005bd31
1005bd2b:	mov    BYTE PTR [esi],0x2b
1005bd2e:	inc    esi
1005bd2f:	jmp    0x1005bd3b
1005bd31:	mov    BYTE PTR [esi],0x2d
1005bd34:	inc    esi
1005bd35:	neg    eax
1005bd37:	adc    edx,ebx
1005bd39:	neg    edx
1005bd3b:	cmp    edx,ebx
1005bd3d:	mov    edi,esi
1005bd3f:	mov    BYTE PTR [esi],0x30
1005bd42:	jl     0x1005bd68
1005bd44:	mov    ecx,0x3e8
1005bd49:	jg     0x1005bd4f
1005bd4b:	cmp    eax,ecx
1005bd4d:	jb     0x1005bd68
1005bd4f:	push   ebx
1005bd50:	push   ecx
1005bd51:	push   edx
1005bd52:	push   eax
1005bd53:	call   0x1005d390
1005bd58:	add    al,0x30
1005bd5a:	mov    BYTE PTR [esi],al
1005bd5c:	inc    esi
1005bd5d:	cmp    esi,edi
1005bd5f:	mov    DWORD PTR [ebp-0x10],edx
1005bd62:	mov    eax,ecx
1005bd64:	mov    edx,ebx
1005bd66:	jne    0x1005bd73
1005bd68:	test   edx,edx
1005bd6a:	jl     0x1005bd8a
1005bd6c:	jg     0x1005bd73
1005bd6e:	cmp    eax,0x64
1005bd71:	jb     0x1005bd8a
1005bd73:	push   0x0
1005bd75:	push   0x64
1005bd77:	push   edx
1005bd78:	push   eax
1005bd79:	call   0x1005d390
1005bd7e:	add    al,0x30
1005bd80:	mov    BYTE PTR [esi],al
1005bd82:	mov    DWORD PTR [ebp-0x10],edx
1005bd85:	inc    esi
1005bd86:	mov    eax,ecx
1005bd88:	mov    edx,ebx
1005bd8a:	cmp    esi,edi
1005bd8c:	jne    0x1005bd99
1005bd8e:	test   edx,edx
1005bd90:	jl     0x1005bdb1
1005bd92:	jg     0x1005bd99
1005bd94:	cmp    eax,0xa
1005bd97:	jb     0x1005bdb1
1005bd99:	push   0x0
1005bd9b:	push   0xa
1005bd9d:	push   edx
1005bd9e:	push   eax
1005bd9f:	call   0x1005d390
1005bda4:	add    al,0x30
1005bda6:	mov    BYTE PTR [esi],al
1005bda8:	mov    DWORD PTR [ebp-0x10],edx
1005bdab:	inc    esi
1005bdac:	mov    eax,ecx
1005bdae:	mov    DWORD PTR [ebp-0x10],ebx
1005bdb1:	add    al,0x30
1005bdb3:	mov    BYTE PTR [esi],al
1005bdb5:	mov    BYTE PTR [esi+0x1],0x0
1005bdb9:	cmp    BYTE PTR [ebp-0x18],0x0
1005bdbd:	je     0x1005bdc6
1005bdbf:	mov    eax,DWORD PTR [ebp-0x1c]
1005bdc2:	and    DWORD PTR [eax+0x70],0xfffffffd
1005bdc6:	xor    eax,eax
1005bdc8:	pop    ebx
1005bdc9:	pop    edi
1005bdca:	pop    esi
1005bdcb:	leave  
1005bdcc:	ret    
1005bdcd:	push   ebp
1005bdce:	mov    ebp,esp
1005bdd0:	sub    esp,0x10
1005bdd3:	push   ebx
1005bdd4:	push   esi
1005bdd5:	push   edi
1005bdd6:	push   DWORD PTR [ebp+0x14]
1005bdd9:	mov    ebx,eax
1005bddb:	mov    esi,DWORD PTR [ebx+0x4]
1005bdde:	mov    edi,ecx
1005bde0:	lea    ecx,[ebp-0x10]
1005bde3:	dec    esi
1005bde4:	call   0x10045785
1005bde9:	test   edi,edi
1005bdeb:	jne    0x1005be1a
1005bded:	call   0x10046df5
1005bdf2:	push   0x16
1005bdf4:	pop    esi
1005bdf5:	mov    DWORD PTR [eax],esi
1005bdf7:	xor    eax,eax
1005bdf9:	push   eax
1005bdfa:	push   eax
1005bdfb:	push   eax
1005bdfc:	push   eax
1005bdfd:	push   eax
1005bdfe:	call   0x100435cc
1005be03:	add    esp,0x14
1005be06:	cmp    BYTE PTR [ebp-0x4],0x0
1005be0a:	je     0x1005be13
1005be0c:	mov    eax,DWORD PTR [ebp-0x8]
1005be0f:	and    DWORD PTR [eax+0x70],0xfffffffd
1005be13:	mov    eax,esi
1005be15:	jmp    0x1005bebd
1005be1a:	cmp    DWORD PTR [ebp+0x8],0x0
1005be1e:	jbe    0x1005bded
1005be20:	cmp    BYTE PTR [ebp+0x10],0x0
1005be24:	je     0x1005be3e
1005be26:	cmp    esi,DWORD PTR [ebp+0xc]
1005be29:	jne    0x1005be3e
1005be2b:	xor    eax,eax
1005be2d:	cmp    DWORD PTR [ebx],0x2d
1005be30:	sete   al
1005be33:	add    eax,esi
1005be35:	add    eax,edi
1005be37:	mov    BYTE PTR [eax],0x30
1005be3a:	mov    BYTE PTR [eax+0x1],0x0
1005be3e:	cmp    DWORD PTR [ebx],0x2d
1005be41:	mov    esi,edi
1005be43:	jne    0x1005be4b
1005be45:	mov    BYTE PTR [edi],0x2d
1005be48:	lea    esi,[edi+0x1]
1005be4b:	mov    eax,DWORD PTR [ebx+0x4]
1005be4e:	xor    edi,edi
1005be50:	inc    edi
1005be51:	test   eax,eax
1005be53:	jg     0x1005be62
1005be55:	mov    eax,esi
1005be57:	call   0x1005b7ca
1005be5c:	mov    BYTE PTR [esi],0x30
1005be5f:	inc    esi
1005be60:	jmp    0x1005be64
1005be62:	add    esi,eax
1005be64:	cmp    DWORD PTR [ebp+0xc],0x0
1005be68:	jle    0x1005beae
1005be6a:	mov    eax,esi
1005be6c:	call   0x1005b7ca
1005be71:	mov    eax,DWORD PTR [ebp-0x10]
1005be74:	mov    eax,DWORD PTR [eax+0xbc]
1005be7a:	mov    eax,DWORD PTR [eax]
1005be7c:	mov    al,BYTE PTR [eax]
1005be7e:	mov    BYTE PTR [esi],al
1005be80:	mov    ebx,DWORD PTR [ebx+0x4]
1005be83:	inc    esi
1005be84:	test   ebx,ebx
1005be86:	jge    0x1005beae
1005be88:	neg    ebx
1005be8a:	cmp    BYTE PTR [ebp+0x10],0x0
1005be8e:	jne    0x1005be95
1005be90:	cmp    DWORD PTR [ebp+0xc],ebx
1005be93:	jl     0x1005be98
1005be95:	mov    DWORD PTR [ebp+0xc],ebx
1005be98:	mov    edi,DWORD PTR [ebp+0xc]
1005be9b:	mov    eax,esi
1005be9d:	call   0x1005b7ca
1005bea2:	push   edi
1005bea3:	push   0x30
1005bea5:	push   esi
1005bea6:	call   0x10045ea0
1005beab:	add    esp,0xc
1005beae:	cmp    BYTE PTR [ebp-0x4],0x0
1005beb2:	je     0x1005bebb
1005beb4:	mov    eax,DWORD PTR [ebp-0x8]
1005beb7:	and    DWORD PTR [eax+0x70],0xfffffffd
1005bebb:	xor    eax,eax
1005bebd:	pop    edi
1005bebe:	pop    esi
1005bebf:	pop    ebx
1005bec0:	leave  
1005bec1:	ret    
1005bec2:	push   ebp
1005bec3:	mov    ebp,esp
1005bec5:	sub    esp,0x2c
1005bec8:	mov    eax,ds:0x1007e030
1005becd:	xor    eax,ebp
1005becf:	mov    DWORD PTR [ebp-0x4],eax
1005bed2:	mov    eax,DWORD PTR [ebp+0x8]
1005bed5:	push   ebx
1005bed6:	push   esi
1005bed7:	push   edi
1005bed8:	mov    edi,DWORD PTR [ebp+0xc]
1005bedb:	push   0x16
1005bedd:	pop    esi
1005bede:	push   esi
1005bedf:	lea    ecx,[ebp-0x1c]
1005bee2:	push   ecx
1005bee3:	lea    ecx,[ebp-0x2c]
1005bee6:	push   ecx
1005bee7:	push   DWORD PTR [eax+0x4]
1005beea:	push   DWORD PTR [eax]
1005beec:	call   0x1005d2fa
1005bef1:	xor    ebx,ebx
1005bef3:	add    esp,0x14
1005bef6:	cmp    edi,ebx
1005bef8:	jne    0x1005bf12
1005befa:	call   0x10046df5
1005beff:	push   ebx
1005bf00:	push   ebx
1005bf01:	push   ebx
1005bf02:	push   ebx
1005bf03:	push   ebx
1005bf04:	mov    DWORD PTR [eax],esi
1005bf06:	call   0x100435cc
1005bf0b:	add    esp,0x14
1005bf0e:	mov    eax,esi
1005bf10:	jmp    0x1005bf6c
1005bf12:	mov    eax,DWORD PTR [ebp+0x10]
1005bf15:	cmp    eax,ebx
1005bf17:	jbe    0x1005befa
1005bf19:	cmp    eax,0xffffffff
1005bf1c:	jne    0x1005bf22
1005bf1e:	or     eax,eax
1005bf20:	jmp    0x1005bf2d
1005bf22:	xor    ecx,ecx
1005bf24:	cmp    DWORD PTR [ebp-0x2c],0x2d
1005bf28:	sete   cl
1005bf2b:	sub    eax,ecx
1005bf2d:	mov    esi,DWORD PTR [ebp+0x14]
1005bf30:	lea    ecx,[ebp-0x2c]
1005bf33:	push   ecx
1005bf34:	mov    ecx,DWORD PTR [ebp-0x28]
1005bf37:	add    ecx,esi
1005bf39:	push   ecx
1005bf3a:	push   eax
1005bf3b:	xor    eax,eax
1005bf3d:	cmp    DWORD PTR [ebp-0x2c],0x2d
1005bf41:	sete   al
1005bf44:	add    eax,edi
1005bf46:	push   eax
1005bf47:	call   0x1005d182
1005bf4c:	add    esp,0x10
1005bf4f:	cmp    eax,ebx
1005bf51:	je     0x1005bf57
1005bf53:	mov    BYTE PTR [edi],bl
1005bf55:	jmp    0x1005bf6c
1005bf57:	push   DWORD PTR [ebp+0x18]
1005bf5a:	lea    eax,[ebp-0x2c]
1005bf5d:	push   ebx
1005bf5e:	push   esi
1005bf5f:	push   DWORD PTR [ebp+0x10]
1005bf62:	mov    ecx,edi
1005bf64:	call   0x1005bdcd
1005bf69:	add    esp,0x10
1005bf6c:	mov    ecx,DWORD PTR [ebp-0x4]
1005bf6f:	pop    edi
1005bf70:	pop    esi
1005bf71:	xor    ecx,ebp
1005bf73:	pop    ebx
1005bf74:	call   0x100430d7
1005bf79:	leave  
1005bf7a:	ret    
1005bf7b:	push   ebp
1005bf7c:	mov    ebp,esp
1005bf7e:	sub    esp,0x30
1005bf81:	mov    eax,ds:0x1007e030
1005bf86:	xor    eax,ebp
1005bf88:	mov    DWORD PTR [ebp-0x4],eax
1005bf8b:	mov    eax,DWORD PTR [ebp+0x8]
1005bf8e:	push   ebx
1005bf8f:	push   esi
1005bf90:	mov    esi,DWORD PTR [ebp+0xc]
1005bf93:	push   edi
1005bf94:	push   0x16
1005bf96:	pop    edi
1005bf97:	push   edi
1005bf98:	lea    ecx,[ebp-0x1c]
1005bf9b:	push   ecx
1005bf9c:	lea    ecx,[ebp-0x30]
1005bf9f:	push   ecx
1005bfa0:	push   DWORD PTR [eax+0x4]
1005bfa3:	push   DWORD PTR [eax]
1005bfa5:	call   0x1005d2fa
1005bfaa:	xor    ebx,ebx
1005bfac:	add    esp,0x14
1005bfaf:	cmp    esi,ebx
1005bfb1:	jne    0x1005bfce
1005bfb3:	call   0x10046df5
1005bfb8:	push   ebx
1005bfb9:	push   ebx
1005bfba:	push   ebx
1005bfbb:	push   ebx
1005bfbc:	push   ebx
1005bfbd:	mov    DWORD PTR [eax],edi
1005bfbf:	call   0x100435cc
1005bfc4:	add    esp,0x14
1005bfc7:	mov    eax,edi
1005bfc9:	jmp    0x1005c064
1005bfce:	mov    ecx,DWORD PTR [ebp+0x10]
1005bfd1:	cmp    ecx,ebx
1005bfd3:	jbe    0x1005bfb3
1005bfd5:	mov    eax,DWORD PTR [ebp-0x2c]
1005bfd8:	dec    eax
1005bfd9:	mov    DWORD PTR [ebp-0x20],eax
1005bfdc:	xor    eax,eax
1005bfde:	cmp    DWORD PTR [ebp-0x30],0x2d
1005bfe2:	sete   al
1005bfe5:	cmp    ecx,0xffffffff
1005bfe8:	lea    edi,[eax+esi*1]
1005bfeb:	jne    0x1005bff1
1005bfed:	or     ecx,ecx
1005bfef:	jmp    0x1005bff3
1005bff1:	sub    ecx,eax
1005bff3:	lea    eax,[ebp-0x30]
1005bff6:	push   eax
1005bff7:	push   DWORD PTR [ebp+0x14]
1005bffa:	push   ecx
1005bffb:	push   edi
1005bffc:	call   0x1005d182
1005c001:	add    esp,0x10
1005c004:	cmp    eax,ebx
1005c006:	je     0x1005c00c
1005c008:	mov    BYTE PTR [esi],bl
1005c00a:	jmp    0x1005c064
1005c00c:	mov    eax,DWORD PTR [ebp-0x2c]
1005c00f:	dec    eax
1005c010:	cmp    DWORD PTR [ebp-0x20],eax
1005c013:	setl   cl
1005c016:	cmp    eax,0xfffffffc
1005c019:	jl     0x1005c048
1005c01b:	cmp    eax,DWORD PTR [ebp+0x14]
1005c01e:	jge    0x1005c048
1005c020:	cmp    cl,bl
1005c022:	je     0x1005c02e
1005c024:	mov    al,BYTE PTR [edi]
1005c026:	inc    edi
1005c027:	test   al,al
1005c029:	jne    0x1005c024
1005c02b:	mov    BYTE PTR [edi-0x2],bl
1005c02e:	push   DWORD PTR [ebp+0x1c]
1005c031:	lea    eax,[ebp-0x30]
1005c034:	push   0x1
1005c036:	push   DWORD PTR [ebp+0x14]
1005c039:	mov    ecx,esi
1005c03b:	push   DWORD PTR [ebp+0x10]
1005c03e:	call   0x1005bdcd
1005c043:	add    esp,0x10
1005c046:	jmp    0x1005c064
1005c048:	push   DWORD PTR [ebp+0x1c]
1005c04b:	lea    eax,[ebp-0x30]
1005c04e:	push   0x1
1005c050:	push   eax
1005c051:	push   DWORD PTR [ebp+0x18]
1005c054:	mov    eax,esi
1005c056:	push   DWORD PTR [ebp+0x14]
1005c059:	push   DWORD PTR [ebp+0x10]
1005c05c:	call   0x1005b803
1005c061:	add    esp,0x18
1005c064:	mov    ecx,DWORD PTR [ebp-0x4]
1005c067:	pop    edi
1005c068:	pop    esi
1005c069:	xor    ecx,ebp
1005c06b:	pop    ebx
1005c06c:	call   0x100430d7
1005c071:	leave  
1005c072:	ret    
1005c073:	push   ebp
1005c074:	mov    ebp,esp
1005c076:	mov    eax,DWORD PTR [ebp+0x14]
1005c079:	cmp    eax,0x65
1005c07c:	je     0x1005c0dd
1005c07e:	cmp    eax,0x45
1005c081:	je     0x1005c0dd
1005c083:	cmp    eax,0x66
1005c086:	jne    0x1005c0a1
1005c088:	push   DWORD PTR [ebp+0x20]
1005c08b:	push   DWORD PTR [ebp+0x18]
1005c08e:	push   DWORD PTR [ebp+0x10]
1005c091:	push   DWORD PTR [ebp+0xc]
1005c094:	push   DWORD PTR [ebp+0x8]
1005c097:	call   0x1005bec2
1005c09c:	add    esp,0x14
1005c09f:	pop    ebp
1005c0a0:	ret    
1005c0a1:	cmp    eax,0x61
1005c0a4:	je     0x1005c0c4
1005c0a6:	cmp    eax,0x41
1005c0a9:	je     0x1005c0c4
1005c0ab:	push   DWORD PTR [ebp+0x20]
1005c0ae:	push   DWORD PTR [ebp+0x1c]
1005c0b1:	push   DWORD PTR [ebp+0x18]
1005c0b4:	push   DWORD PTR [ebp+0x10]
1005c0b7:	push   DWORD PTR [ebp+0xc]
1005c0ba:	push   DWORD PTR [ebp+0x8]
1005c0bd:	call   0x1005bf7b
1005c0c2:	jmp    0x1005c0f4
1005c0c4:	push   DWORD PTR [ebp+0x20]
1005c0c7:	push   DWORD PTR [ebp+0x1c]
1005c0ca:	push   DWORD PTR [ebp+0x18]
1005c0cd:	push   DWORD PTR [ebp+0x10]
1005c0d0:	push   DWORD PTR [ebp+0xc]
1005c0d3:	push   DWORD PTR [ebp+0x8]
1005c0d6:	call   0x1005ba5c
1005c0db:	jmp    0x1005c0f4
1005c0dd:	push   DWORD PTR [ebp+0x20]
1005c0e0:	push   DWORD PTR [ebp+0x1c]
1005c0e3:	push   DWORD PTR [ebp+0x18]
1005c0e6:	push   DWORD PTR [ebp+0x10]
1005c0e9:	push   DWORD PTR [ebp+0xc]
1005c0ec:	push   DWORD PTR [ebp+0x8]
1005c0ef:	call   0x1005b970
1005c0f4:	add    esp,0x18
1005c0f7:	pop    ebp
1005c0f8:	ret    
1005c0f9:	push   ebp
1005c0fa:	mov    ebp,esp
1005c0fc:	push   0x0
1005c0fe:	push   DWORD PTR [ebp+0x1c]
1005c101:	push   DWORD PTR [ebp+0x18]
1005c104:	push   DWORD PTR [ebp+0x14]
1005c107:	push   DWORD PTR [ebp+0x10]
1005c10a:	push   DWORD PTR [ebp+0xc]
1005c10d:	push   DWORD PTR [ebp+0x8]
1005c110:	call   0x1005c073
1005c115:	add    esp,0x1c
1005c118:	pop    ebp
1005c119:	ret    
1005c11a:	push   esi
1005c11b:	push   0x30000
1005c120:	push   0x10000
1005c125:	xor    esi,esi
1005c127:	push   esi
1005c128:	call   0x1005d48f
1005c12d:	add    esp,0xc
1005c130:	test   eax,eax
1005c132:	je     0x1005c141
1005c134:	push   esi
1005c135:	push   esi
1005c136:	push   esi
1005c137:	push   esi
1005c138:	push   esi
1005c139:	call   0x100434d0
1005c13e:	add    esp,0x14
1005c141:	pop    esi
1005c142:	ret    
1005c143:	push   ebp
1005c144:	mov    ebp,esp
1005c146:	sub    esp,0x18
1005c149:	fld    QWORD PTR ds:0x1006cb18
1005c14f:	fstp   QWORD PTR [ebp-0x10]
1005c152:	fld    QWORD PTR ds:0x1006cb10
1005c158:	fstp   QWORD PTR [ebp-0x18]
1005c15b:	fld    QWORD PTR [ebp-0x18]
1005c15e:	fdiv   QWORD PTR [ebp-0x10]
1005c161:	fmul   QWORD PTR [ebp-0x10]
1005c164:	fsubr  QWORD PTR [ebp-0x18]
1005c167:	fstp   QWORD PTR [ebp-0x8]
1005c16a:	fld1   
1005c16c:	fcomp  QWORD PTR [ebp-0x8]
1005c16f:	fnstsw ax
1005c171:	test   ah,0x5
1005c174:	jp     0x1005c17b
1005c176:	xor    eax,eax
1005c178:	inc    eax
1005c179:	leave  
1005c17a:	ret    
1005c17b:	xor    eax,eax
1005c17d:	leave  
1005c17e:	ret    
1005c17f:	push   0x1006cb3c
1005c184:	call   DWORD PTR ds:0x10066198
1005c18a:	test   eax,eax
1005c18c:	je     0x1005c1a3
1005c18e:	push   0x1006cb20
1005c193:	push   eax
1005c194:	call   DWORD PTR ds:0x1006612c
1005c19a:	test   eax,eax
1005c19c:	je     0x1005c1a3
1005c19e:	push   0x0
1005c1a0:	call   eax
1005c1a2:	ret    
1005c1a3:	jmp    0x1005c143
1005c1a8:	push   esi
1005c1a9:	mov    esi,DWORD PTR [esp+0x8]
1005c1ad:	push   edi
1005c1ae:	xor    edi,edi
1005c1b0:	cmp    esi,edi
1005c1b2:	jne    0x1005c1d1
1005c1b4:	call   0x10046df5
1005c1b9:	push   edi
1005c1ba:	push   edi
1005c1bb:	push   edi
1005c1bc:	push   edi
1005c1bd:	push   edi
1005c1be:	mov    DWORD PTR [eax],0x16
1005c1c4:	call   0x100435cc
1005c1c9:	add    esp,0x14
1005c1cc:	jmp    0x1005c2c2
1005c1d1:	mov    eax,DWORD PTR [esi+0xc]
1005c1d4:	test   al,0x83
1005c1d6:	je     0x1005c2c2
1005c1dc:	test   al,0x40
1005c1de:	jne    0x1005c2c2
1005c1e4:	test   al,0x2
1005c1e6:	je     0x1005c1f3
1005c1e8:	or     eax,0x20
1005c1eb:	mov    DWORD PTR [esi+0xc],eax
1005c1ee:	jmp    0x1005c2c2
1005c1f3:	or     eax,0x1
1005c1f6:	test   ax,0x10c
1005c1fa:	mov    DWORD PTR [esi+0xc],eax
1005c1fd:	jne    0x1005c208
1005c1ff:	push   esi
1005c200:	call   0x1004d1ef
1005c205:	pop    ecx
1005c206:	jmp    0x1005c20d
1005c208:	mov    eax,DWORD PTR [esi+0x8]
1005c20b:	mov    DWORD PTR [esi],eax
1005c20d:	push   DWORD PTR [esi+0x18]
1005c210:	push   DWORD PTR [esi+0x8]
1005c213:	push   esi
1005c214:	call   0x1004d40c
1005c219:	pop    ecx
1005c21a:	push   eax
1005c21b:	call   0x10058d3c
1005c220:	add    esp,0xc
1005c223:	cmp    eax,edi
1005c225:	mov    DWORD PTR [esi+0x4],eax
1005c228:	je     0x1005c2b2
1005c22e:	cmp    eax,0xffffffff
1005c231:	je     0x1005c2b2
1005c233:	test   BYTE PTR [esi+0xc],0x82
1005c237:	jne    0x1005c288
1005c239:	push   esi
1005c23a:	call   0x1004d40c
1005c23f:	cmp    eax,0xffffffff
1005c242:	pop    ecx
1005c243:	je     0x1005c273
1005c245:	push   esi
1005c246:	call   0x1004d40c
1005c24b:	cmp    eax,0xfffffffe
1005c24e:	pop    ecx
1005c24f:	je     0x1005c273
1005c251:	push   esi
1005c252:	call   0x1004d40c
1005c257:	sar    eax,0x5
1005c25a:	push   esi
1005c25b:	lea    edi,[eax*4+0x10082480]
1005c262:	call   0x1004d40c
1005c267:	and    eax,0x1f
1005c26a:	imul   eax,eax,0x28
1005c26d:	add    eax,DWORD PTR [edi]
1005c26f:	pop    ecx
1005c270:	pop    ecx
1005c271:	jmp    0x1005c278
1005c273:	mov    eax,0x1007e9d0
1005c278:	mov    al,BYTE PTR [eax+0x4]
1005c27b:	and    al,0x82
1005c27d:	cmp    al,0x82
1005c27f:	jne    0x1005c288
1005c281:	or     DWORD PTR [esi+0xc],0x2000
1005c288:	cmp    DWORD PTR [esi+0x18],0x200
1005c28f:	jne    0x1005c2a5
1005c291:	mov    eax,DWORD PTR [esi+0xc]
1005c294:	test   al,0x8
1005c296:	je     0x1005c2a5
1005c298:	test   ax,0x400
1005c29c:	jne    0x1005c2a5
1005c29e:	mov    DWORD PTR [esi+0x18],0x1000
1005c2a5:	mov    ecx,DWORD PTR [esi]
1005c2a7:	dec    DWORD PTR [esi+0x4]
1005c2aa:	movzx  eax,BYTE PTR [ecx]
1005c2ad:	inc    ecx
1005c2ae:	mov    DWORD PTR [esi],ecx
1005c2b0:	jmp    0x1005c2c5
1005c2b2:	neg    eax
1005c2b4:	sbb    eax,eax
1005c2b6:	and    eax,0x10
1005c2b9:	add    eax,0x10
1005c2bc:	or     DWORD PTR [esi+0xc],eax
1005c2bf:	mov    DWORD PTR [esi+0x4],edi
1005c2c2:	or     eax,0xffffffff
1005c2c5:	pop    edi
1005c2c6:	pop    esi
1005c2c7:	ret    
1005c2c8:	push   ebp
1005c2c9:	mov    ebp,esp
1005c2cb:	mov    eax,DWORD PTR [ebp+0x8]
1005c2ce:	test   eax,eax
1005c2d0:	jne    0x1005c2d7
1005c2d2:	xor    eax,eax
1005c2d4:	inc    eax
1005c2d5:	pop    ebp
1005c2d6:	ret    
1005c2d7:	add    al,0x40
1005c2d9:	mov    BYTE PTR [ebp+0x8],al
1005c2dc:	lea    eax,[ebp+0x8]
1005c2df:	push   eax
1005c2e0:	mov    BYTE PTR [ebp+0x9],0x3a
1005c2e4:	mov    BYTE PTR [ebp+0xa],0x5c
1005c2e8:	mov    BYTE PTR [ebp+0xb],0x0
1005c2ec:	call   DWORD PTR ds:0x10066054
1005c2f2:	test   eax,eax
1005c2f4:	je     0x1005c2fb
1005c2f6:	cmp    eax,0x1
1005c2f9:	jne    0x1005c2d2
1005c2fb:	xor    eax,eax
1005c2fd:	pop    ebp
1005c2fe:	ret    
1005c2ff:	push   ebp
1005c300:	mov    ebp,esp
1005c302:	push   ecx
1005c303:	push   ecx
1005c304:	push   ebx
1005c305:	xor    ebx,ebx
1005c307:	cmp    DWORD PTR [ebp+0x8],ebx
1005c30a:	je     0x1005c343
1005c30c:	push   DWORD PTR [ebp+0x8]
1005c30f:	call   0x1005c2c8
1005c314:	test   eax,eax
1005c316:	pop    ecx
1005c317:	jne    0x1005c34a
1005c319:	call   0x10046e08
1005c31e:	mov    DWORD PTR [eax],0xf
1005c324:	call   0x10046df5
1005c329:	push   ebx
1005c32a:	push   ebx
1005c32b:	push   ebx
1005c32c:	push   ebx
1005c32d:	push   ebx
1005c32e:	mov    DWORD PTR [eax],0xd
1005c334:	call   0x100435cc
1005c339:	add    esp,0x14
1005c33c:	xor    eax,eax
1005c33e:	jmp    0x1005c431
1005c343:	call   0x1005c6ad
1005c348:	jmp    0x1005c34d
1005c34a:	mov    eax,DWORD PTR [ebp+0x8]
1005c34d:	push   edi
1005c34e:	mov    edi,DWORD PTR [ebp+0xc]
1005c351:	cmp    edi,ebx
1005c353:	je     0x1005c382
1005c355:	mov    ecx,DWORD PTR [ebp+0x10]
1005c358:	cmp    ecx,ebx
1005c35a:	jg     0x1005c37b
1005c35c:	call   0x10046df5
1005c361:	push   ebx
1005c362:	push   ebx
1005c363:	push   ebx
1005c364:	push   ebx
1005c365:	push   ebx
1005c366:	mov    DWORD PTR [eax],0x16
1005c36c:	call   0x100435cc
1005c371:	add    esp,0x14
1005c374:	xor    eax,eax
1005c376:	jmp    0x1005c430
1005c37b:	mov    DWORD PTR [ebp+0x8],ecx
1005c37e:	mov    BYTE PTR [edi],bl
1005c380:	jmp    0x1005c385
1005c382:	mov    DWORD PTR [ebp+0x8],ebx
1005c385:	cmp    eax,ebx
1005c387:	je     0x1005c39b
1005c389:	add    al,0x40
1005c38b:	mov    BYTE PTR [ebp-0x4],al
1005c38e:	mov    BYTE PTR [ebp-0x3],0x3a
1005c392:	mov    BYTE PTR [ebp-0x2],0x2e
1005c396:	mov    BYTE PTR [ebp-0x1],bl
1005c399:	jmp    0x1005c3a2
1005c39b:	mov    BYTE PTR [ebp-0x4],0x2e
1005c39f:	mov    BYTE PTR [ebp-0x3],bl
1005c3a2:	push   esi
1005c3a3:	mov    esi,DWORD PTR ds:0x10066058
1005c3a9:	lea    eax,[ebp-0x8]
1005c3ac:	push   eax
1005c3ad:	push   edi
1005c3ae:	push   DWORD PTR [ebp+0x8]
1005c3b1:	lea    eax,[ebp-0x4]
1005c3b4:	push   eax
1005c3b5:	call   esi
1005c3b7:	cmp    eax,ebx
1005c3b9:	je     0x1005c420
1005c3bb:	cmp    edi,ebx
1005c3bd:	je     0x1005c3d3
1005c3bf:	cmp    eax,DWORD PTR [ebp+0x8]
1005c3c2:	jl     0x1005c41c
1005c3c4:	call   0x10046df5
1005c3c9:	mov    DWORD PTR [eax],0x22
1005c3cf:	mov    BYTE PTR [edi],bl
1005c3d1:	jmp    0x1005c42d
1005c3d3:	cmp    eax,DWORD PTR [ebp+0x10]
1005c3d6:	jle    0x1005c3db
1005c3d8:	mov    DWORD PTR [ebp+0x10],eax
1005c3db:	push   0x1
1005c3dd:	push   DWORD PTR [ebp+0x10]
1005c3e0:	call   0x100438f4
1005c3e5:	mov    edi,eax
1005c3e7:	cmp    edi,ebx
1005c3e9:	pop    ecx
1005c3ea:	pop    ecx
1005c3eb:	jne    0x1005c405
1005c3ed:	call   0x10046df5
1005c3f2:	mov    DWORD PTR [eax],0xc
1005c3f8:	call   0x10046e08
1005c3fd:	mov    DWORD PTR [eax],0x8
1005c403:	jmp    0x1005c42d
1005c405:	lea    eax,[ebp-0x8]
1005c408:	push   eax
1005c409:	push   edi
1005c40a:	push   DWORD PTR [ebp+0x10]
1005c40d:	lea    eax,[ebp-0x4]
1005c410:	push   eax
1005c411:	call   esi
1005c413:	cmp    eax,ebx
1005c415:	je     0x1005c420
1005c417:	cmp    eax,DWORD PTR [ebp+0x10]
1005c41a:	jge    0x1005c420
1005c41c:	mov    eax,edi
1005c41e:	jmp    0x1005c42f
1005c420:	call   DWORD PTR ds:0x100660cc
1005c426:	push   eax
1005c427:	call   0x10046e1b
1005c42c:	pop    ecx
1005c42d:	xor    eax,eax
1005c42f:	pop    esi
1005c430:	pop    edi
1005c431:	pop    ebx
1005c432:	leave  
1005c433:	ret    
1005c434:	push   0xc
1005c436:	push   0x10074d20
1005c43b:	call   0x10046f34
1005c440:	push   0x7
1005c442:	call   0x10047f3d
1005c447:	pop    ecx
1005c448:	and    DWORD PTR [ebp-0x4],0x0
1005c44c:	push   DWORD PTR [ebp+0xc]
1005c44f:	push   DWORD PTR [ebp+0x8]
1005c452:	push   0x0
1005c454:	call   0x1005c2ff
1005c459:	add    esp,0xc
1005c45c:	mov    DWORD PTR [ebp-0x1c],eax
1005c45f:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1005c466:	call   0x1005c474
1005c46b:	mov    eax,DWORD PTR [ebp-0x1c]
1005c46e:	call   0x10046f79
1005c473:	ret    
1005c474:	push   0x7
1005c476:	call   0x10047e65
1005c47b:	pop    ecx
1005c47c:	ret    
1005c47d:	int3   
1005c47e:	int3   
1005c47f:	int3   
1005c480:	push   ebp
1005c481:	mov    ebp,esp
1005c483:	sub    esp,0x14
1005c486:	push   esi
1005c487:	push   DWORD PTR [ebp+0x10]
1005c48a:	lea    ecx,[ebp-0x14]
1005c48d:	call   0x10045785
1005c492:	mov    edx,DWORD PTR [ebp+0x8]
1005c495:	xor    esi,esi
1005c497:	cmp    edx,esi
1005c499:	jne    0x1005c4ca
1005c49b:	call   0x10046df5
1005c4a0:	push   esi
1005c4a1:	push   esi
1005c4a2:	push   esi
1005c4a3:	push   esi
1005c4a4:	push   esi
1005c4a5:	mov    DWORD PTR [eax],0x16
1005c4ab:	call   0x100435cc
1005c4b0:	add    esp,0x14
1005c4b3:	cmp    BYTE PTR [ebp-0x8],0x0
1005c4b7:	je     0x1005c4c0
1005c4b9:	mov    eax,DWORD PTR [ebp-0xc]
1005c4bc:	and    DWORD PTR [eax+0x70],0xfffffffd
1005c4c0:	mov    eax,0x7fffffff
1005c4c5:	jmp    0x1005c697
1005c4ca:	push   ebx
1005c4cb:	mov    ebx,DWORD PTR [ebp+0xc]
1005c4ce:	cmp    ebx,esi
1005c4d0:	jne    0x1005c501
1005c4d2:	call   0x10046df5
1005c4d7:	push   esi
1005c4d8:	push   esi
1005c4d9:	push   esi
1005c4da:	push   esi
1005c4db:	push   esi
1005c4dc:	mov    DWORD PTR [eax],0x16
1005c4e2:	call   0x100435cc
1005c4e7:	add    esp,0x14
1005c4ea:	cmp    BYTE PTR [ebp-0x8],0x0
1005c4ee:	je     0x1005c4f7
1005c4f0:	mov    eax,DWORD PTR [ebp-0xc]
1005c4f3:	and    DWORD PTR [eax+0x70],0xfffffffd
1005c4f7:	mov    eax,0x7fffffff
1005c4fc:	jmp    0x1005c696
1005c501:	mov    eax,DWORD PTR [ebp-0x10]
1005c504:	cmp    DWORD PTR [eax+0x8],esi
1005c507:	jne    0x1005c52d
1005c509:	lea    eax,[ebp-0x14]
1005c50c:	push   eax
1005c50d:	push   ebx
1005c50e:	push   edx
1005c50f:	call   0x1004583c
1005c514:	add    esp,0xc
1005c517:	cmp    BYTE PTR [ebp-0x8],0x0
1005c51b:	je     0x1005c696
1005c521:	mov    ecx,DWORD PTR [ebp-0xc]
1005c524:	and    DWORD PTR [ecx+0x70],0xfffffffd
1005c528:	jmp    0x1005c696
1005c52d:	push   edi
1005c52e:	mov    edi,0x200
1005c533:	movzx  cx,BYTE PTR [edx]
1005c537:	movzx  ecx,cx
1005c53a:	movzx  esi,cl
1005c53d:	inc    edx
1005c53e:	test   BYTE PTR [esi+eax*1+0x1d],0x4
1005c543:	mov    DWORD PTR [ebp+0x8],edx
1005c546:	je     0x1005c5a1
1005c548:	cmp    BYTE PTR [edx],0x0
1005c54b:	jne    0x1005c551
1005c54d:	xor    esi,esi
1005c54f:	jmp    0x1005c5bd
1005c551:	push   0x1
1005c553:	push   DWORD PTR [eax+0x4]
1005c556:	lea    ecx,[ebp-0x4]
1005c559:	push   0x2
1005c55b:	push   ecx
1005c55c:	push   0x2
1005c55e:	dec    edx
1005c55f:	push   edx
1005c560:	push   edi
1005c561:	push   DWORD PTR [eax+0xc]
1005c564:	lea    eax,[ebp-0x14]
1005c567:	push   eax
1005c568:	call   0x1004b51c
1005c56d:	add    esp,0x24
1005c570:	cmp    eax,0x1
1005c573:	jne    0x1005c57c
1005c575:	movzx  ax,BYTE PTR [ebp-0x4]
1005c57a:	jmp    0x1005c596
1005c57c:	cmp    eax,0x2
1005c57f:	jne    0x1005c652
1005c585:	movzx  ax,BYTE PTR [ebp-0x4]
1005c58a:	movzx  cx,BYTE PTR [ebp-0x3]
1005c58f:	shl    ax,0x8
1005c593:	add    ax,cx
1005c596:	inc    DWORD PTR [ebp+0x8]
1005c599:	movzx  esi,ax
1005c59c:	mov    eax,DWORD PTR [ebp-0x10]
1005c59f:	jmp    0x1005c5bd
1005c5a1:	movzx  edx,cx
1005c5a4:	lea    ecx,[edx+eax*1]
1005c5a7:	test   BYTE PTR [ecx+0x1d],0x10
1005c5ab:	je     0x1005c5ba
1005c5ad:	movzx  cx,BYTE PTR [ecx+0x11d]
1005c5b5:	movzx  esi,cx
1005c5b8:	jmp    0x1005c5bd
1005c5ba:	movzx  esi,dx
1005c5bd:	movzx  cx,BYTE PTR [ebx]
1005c5c1:	movzx  ecx,cx
1005c5c4:	movzx  edx,cl
1005c5c7:	inc    ebx
1005c5c8:	test   BYTE PTR [edx+eax*1+0x1d],0x4
1005c5cd:	je     0x1005c624
1005c5cf:	cmp    BYTE PTR [ebx],0x0
1005c5d2:	jne    0x1005c5d8
1005c5d4:	xor    ecx,ecx
1005c5d6:	jmp    0x1005c640
1005c5d8:	push   0x1
1005c5da:	push   DWORD PTR [eax+0x4]
1005c5dd:	lea    ecx,[ebp-0x4]
1005c5e0:	push   0x2
1005c5e2:	push   ecx
1005c5e3:	push   0x2
1005c5e5:	lea    ecx,[ebx-0x1]
1005c5e8:	push   ecx
1005c5e9:	push   edi
1005c5ea:	push   DWORD PTR [eax+0xc]
1005c5ed:	lea    eax,[ebp-0x14]
1005c5f0:	push   eax
1005c5f1:	call   0x1004b51c
1005c5f6:	add    esp,0x24
1005c5f9:	cmp    eax,0x1
1005c5fc:	jne    0x1005c605
1005c5fe:	movzx  ax,BYTE PTR [ebp-0x4]
1005c603:	jmp    0x1005c61b
1005c605:	cmp    eax,0x2
1005c608:	jne    0x1005c652
1005c60a:	movzx  ax,BYTE PTR [ebp-0x4]
1005c60f:	movzx  cx,BYTE PTR [ebp-0x3]
1005c614:	shl    ax,0x8
1005c618:	add    ax,cx
1005c61b:	movzx  ecx,ax
1005c61e:	mov    eax,DWORD PTR [ebp-0x10]
1005c621:	inc    ebx
1005c622:	jmp    0x1005c640
1005c624:	movzx  edx,cx
1005c627:	lea    ecx,[edx+eax*1]
1005c62a:	test   BYTE PTR [ecx+0x1d],0x10
1005c62e:	je     0x1005c63d
1005c630:	movzx  cx,BYTE PTR [ecx+0x11d]
1005c638:	movzx  ecx,cx
1005c63b:	jmp    0x1005c640
1005c63d:	movzx  ecx,dx
1005c640:	cmp    cx,si
1005c643:	jne    0x1005c671
1005c645:	test   si,si
1005c648:	je     0x1005c686
1005c64a:	mov    edx,DWORD PTR [ebp+0x8]
1005c64d:	jmp    0x1005c533
1005c652:	call   0x10046df5
1005c657:	mov    DWORD PTR [eax],0x16
1005c65d:	cmp    BYTE PTR [ebp-0x8],0x0
1005c661:	je     0x1005c66a
1005c663:	mov    eax,DWORD PTR [ebp-0xc]
1005c666:	and    DWORD PTR [eax+0x70],0xfffffffd
1005c66a:	mov    eax,0x7fffffff
1005c66f:	jmp    0x1005c695
1005c671:	sbb    eax,eax
1005c673:	and    eax,0x2
1005c676:	dec    eax
1005c677:	cmp    BYTE PTR [ebp-0x8],0x0
1005c67b:	je     0x1005c695
1005c67d:	mov    ecx,DWORD PTR [ebp-0xc]
1005c680:	and    DWORD PTR [ecx+0x70],0xfffffffd
1005c684:	jmp    0x1005c695
1005c686:	cmp    BYTE PTR [ebp-0x8],0x0
1005c68a:	je     0x1005c693
1005c68c:	mov    eax,DWORD PTR [ebp-0xc]
1005c68f:	and    DWORD PTR [eax+0x70],0xfffffffd
1005c693:	xor    eax,eax
1005c695:	pop    edi
1005c696:	pop    ebx
1005c697:	pop    esi
1005c698:	leave  
1005c699:	ret    
1005c69a:	push   0x0
1005c69c:	push   DWORD PTR [esp+0xc]
1005c6a0:	push   DWORD PTR [esp+0xc]
1005c6a4:	call   0x1005c480
1005c6a9:	add    esp,0xc
1005c6ac:	ret    
1005c6ad:	push   ebp
1005c6ae:	lea    ebp,[esp-0x94]
1005c6b5:	sub    esp,0x114
1005c6bb:	mov    eax,ds:0x1007e030
1005c6c0:	xor    eax,ebp
1005c6c2:	mov    DWORD PTR [ebp+0x90],eax
1005c6c8:	and    DWORD PTR [ebp-0x7c],0x0
1005c6cc:	push   ebx
1005c6cd:	push   esi
1005c6ce:	push   edi
1005c6cf:	mov    edi,DWORD PTR ds:0x10066064
1005c6d5:	lea    ebx,[ebp-0x78]
1005c6d8:	mov    eax,ebx
1005c6da:	push   eax
1005c6db:	push   0x105
1005c6e0:	call   edi
1005c6e2:	mov    esi,eax
1005c6e4:	cmp    esi,0x104
1005c6ea:	jle    0x1005c724
1005c6ec:	lea    eax,[esi+0x1]
1005c6ef:	push   0x1
1005c6f1:	push   eax
1005c6f2:	mov    DWORD PTR [ebp-0x80],eax
1005c6f5:	call   0x10047702
1005c6fa:	mov    ebx,eax
1005c6fc:	test   ebx,ebx
1005c6fe:	pop    ecx
1005c6ff:	pop    ecx
1005c700:	jne    0x1005c711
1005c702:	call   0x10046df5
1005c707:	mov    DWORD PTR [eax],0xc
1005c70d:	xor    esi,esi
1005c70f:	jmp    0x1005c724
1005c711:	test   esi,esi
1005c713:	mov    DWORD PTR [ebp-0x7c],0x1
1005c71a:	je     0x1005c724
1005c71c:	push   ebx
1005c71d:	push   DWORD PTR [ebp-0x80]
1005c720:	call   edi
1005c722:	mov    esi,eax
1005c724:	xor    edi,edi
1005c726:	test   esi,esi
1005c728:	je     0x1005c741
1005c72a:	cmp    BYTE PTR [ebx+0x1],0x3a
1005c72e:	jne    0x1005c74c
1005c730:	movzx  eax,BYTE PTR [ebx]
1005c733:	push   eax
1005c734:	call   0x10059007
1005c739:	mov    edi,eax
1005c73b:	pop    ecx
1005c73c:	sub    edi,0x40
1005c73f:	jmp    0x1005c74c
1005c741:	call   0x10046df5
1005c746:	mov    DWORD PTR [eax],0xc
1005c74c:	cmp    DWORD PTR [ebp-0x7c],0x0
1005c750:	je     0x1005c759
1005c752:	push   ebx
1005c753:	call   0x10043748
1005c758:	pop    ecx
1005c759:	mov    ecx,DWORD PTR [ebp+0x90]
1005c75f:	mov    eax,edi
1005c761:	pop    edi
1005c762:	pop    esi
1005c763:	xor    ecx,ebp
1005c765:	pop    ebx
1005c766:	call   0x100430d7
1005c76b:	add    ebp,0x94
1005c771:	leave  
1005c772:	ret    
1005c773:	push   esi
1005c774:	mov    esi,DWORD PTR [esp+0x8]
1005c778:	cmp    DWORD PTR [esi],0xe06d7363
1005c77e:	jne    0x1005c7a5
1005c780:	cmp    DWORD PTR ds:0x1006cae8,0x0
1005c787:	je     0x1005c7a5
1005c789:	push   0x1006cae8
1005c78e:	call   0x1004c582
1005c793:	test   eax,eax
1005c795:	pop    ecx
1005c796:	je     0x1005c7a5
1005c798:	push   DWORD PTR [esp+0xc]
1005c79c:	push   esi
1005c79d:	call   DWORD PTR ds:0x1006cae8
1005c7a3:	pop    ecx
1005c7a4:	pop    ecx
1005c7a5:	pop    esi
1005c7a6:	ret    
1005c7a7:	int3   
1005c7a8:	int3   
1005c7a9:	int3   
1005c7aa:	int3   
1005c7ab:	int3   
1005c7ac:	int3   
1005c7ad:	int3   
1005c7ae:	int3   
1005c7af:	int3   
1005c7b0:	push   ebx
1005c7b1:	push   ebp
1005c7b2:	mov    ebp,DWORD PTR [esp+0xc]
1005c7b6:	xor    eax,eax
1005c7b8:	or     edx,0xffffffff
1005c7bb:	cmp    ecx,0xffffffff
1005c7be:	push   esi
1005c7bf:	je     0x1005c852
1005c7c5:	lea    ecx,[ecx+ecx*2]
1005c7c8:	mov    esi,DWORD PTR [ebp+ecx*4+0x8]
1005c7cc:	lea    ebx,[ebp+ecx*4+0x0]
1005c7d0:	sub    esi,edi
1005c7d2:	and    esi,0xfffff000
1005c7d8:	cmp    esi,edx
1005c7da:	je     0x1005c809
1005c7dc:	test   eax,eax
1005c7de:	je     0x1005c7f0
1005c7e0:	mov    ecx,DWORD PTR [eax+0xc]
1005c7e3:	cmp    esi,ecx
1005c7e5:	jb     0x1005c7f0
1005c7e7:	mov    edx,DWORD PTR [eax+0x8]
1005c7ea:	add    edx,ecx
1005c7ec:	cmp    esi,edx
1005c7ee:	jb     0x1005c807
1005c7f0:	push   esi
1005c7f1:	push   edi
1005c7f2:	call   0x1004c540
1005c7f7:	add    esp,0x8
1005c7fa:	test   eax,eax
1005c7fc:	je     0x1005c85b
1005c7fe:	test   DWORD PTR [eax+0x24],0x20000000
1005c805:	je     0x1005c85b
1005c807:	mov    edx,esi
1005c809:	mov    ecx,DWORD PTR [ebx+0x4]
1005c80c:	test   ecx,ecx
1005c80e:	je     0x1005c847
1005c810:	sub    ecx,edi
1005c812:	and    ecx,0xfffff000
1005c818:	mov    esi,ecx
1005c81a:	cmp    esi,edx
1005c81c:	je     0x1005c847
1005c81e:	mov    ecx,DWORD PTR [eax+0xc]
1005c821:	cmp    esi,ecx
1005c823:	jb     0x1005c82e
1005c825:	mov    edx,DWORD PTR [eax+0x8]
1005c828:	add    edx,ecx
1005c82a:	cmp    esi,edx
1005c82c:	jb     0x1005c845
1005c82e:	push   esi
1005c82f:	push   edi
1005c830:	call   0x1004c540
1005c835:	add    esp,0x8
1005c838:	test   eax,eax
1005c83a:	je     0x1005c85b
1005c83c:	test   DWORD PTR [eax+0x24],0x20000000
1005c843:	je     0x1005c85b
1005c845:	mov    edx,esi
1005c847:	mov    ecx,DWORD PTR [ebx]
1005c849:	cmp    ecx,0xffffffff
1005c84c:	jne    0x1005c7c5
1005c852:	pop    esi
1005c853:	pop    ebp
1005c854:	mov    eax,0x1
1005c859:	pop    ebx
1005c85a:	ret    
1005c85b:	pop    esi
1005c85c:	pop    ebp
1005c85d:	xor    eax,eax
1005c85f:	pop    ebx
1005c860:	ret    
1005c861:	int3   
1005c862:	int3   
1005c863:	int3   
1005c864:	int3   
1005c865:	int3   
1005c866:	int3   
1005c867:	int3   
1005c868:	int3   
1005c869:	int3   
1005c86a:	int3   
1005c86b:	int3   
1005c86c:	int3   
1005c86d:	int3   
1005c86e:	int3   
1005c86f:	int3   
1005c870:	push   ebp
1005c871:	mov    ebp,esp
1005c873:	push   0xfffffffe
1005c875:	push   0x10074d40
1005c87a:	push   0x10046f90
1005c87f:	mov    eax,fs:0x0
1005c885:	push   eax
1005c886:	sub    esp,0x30
1005c889:	push   ebx
1005c88a:	push   esi
1005c88b:	push   edi
1005c88c:	mov    eax,ds:0x1007e030
1005c891:	xor    DWORD PTR [ebp-0x8],eax
1005c894:	xor    eax,ebp
1005c896:	push   eax
1005c897:	lea    eax,[ebp-0x10]
1005c89a:	mov    fs:0x0,eax
1005c8a0:	mov    DWORD PTR [ebp-0x18],esp
1005c8a3:	mov    esi,DWORD PTR [ebp+0x8]
1005c8a6:	mov    edx,DWORD PTR [esi+0x8]
1005c8a9:	mov    DWORD PTR [ebp-0x1c],edx
1005c8ac:	test   dl,0x3
1005c8af:	je     0x1005c8c5
1005c8b1:	xor    eax,eax
1005c8b3:	mov    ecx,DWORD PTR [ebp-0x10]
1005c8b6:	mov    DWORD PTR fs:0x0,ecx
1005c8bd:	pop    ecx
1005c8be:	pop    edi
1005c8bf:	pop    esi
1005c8c0:	pop    ebx
1005c8c1:	mov    esp,ebp
1005c8c3:	pop    ebp
1005c8c4:	ret    
1005c8c5:	mov    eax,fs:0x18
1005c8cb:	mov    ecx,DWORD PTR [eax+0x8]
1005c8ce:	mov    DWORD PTR [ebp-0x20],ecx
1005c8d1:	cmp    edx,ecx
1005c8d3:	jb     0x1005c8da
1005c8d5:	cmp    edx,DWORD PTR [eax+0x4]
1005c8d8:	jb     0x1005c8b1
1005c8da:	mov    edi,DWORD PTR [esi+0xc]
1005c8dd:	mov    DWORD PTR [ebp-0x24],edi
1005c8e0:	cmp    edi,0xffffffff
1005c8e3:	je     0x1005cbfb
1005c8e9:	xor    ebx,ebx
1005c8eb:	xor    eax,eax
1005c8ed:	mov    ecx,edx
1005c8ef:	nop
1005c8f0:	mov    esi,DWORD PTR [ecx]
1005c8f2:	cmp    esi,0xffffffff
1005c8f5:	je     0x1005c8fb
1005c8f7:	cmp    esi,eax
1005c8f9:	jae    0x1005c8b1
1005c8fb:	cmp    DWORD PTR [ecx+0x4],0x0
1005c8ff:	je     0x1005c906
1005c901:	mov    ebx,0x1
1005c906:	add    eax,0x1
1005c909:	add    ecx,0xc
1005c90c:	cmp    eax,edi
1005c90e:	jbe    0x1005c8f0
1005c910:	test   ebx,ebx
1005c912:	je     0x1005c923
1005c914:	mov    ecx,DWORD PTR [ebp+0x8]
1005c917:	mov    eax,DWORD PTR [ecx-0x8]
1005c91a:	cmp    eax,DWORD PTR [ebp-0x20]
1005c91d:	jb     0x1005c8b1
1005c91f:	cmp    eax,ecx
1005c921:	jae    0x1005c8b1
1005c923:	mov    eax,edx
1005c925:	and    eax,0xfffff000
1005c92a:	mov    DWORD PTR [ebp-0x20],eax
1005c92d:	xor    esi,esi
1005c92f:	mov    eax,ds:0x10080ad0
1005c934:	cmp    esi,eax
1005c936:	jge    0x1005ca7d
1005c93c:	mov    ebx,DWORD PTR [esi*8+0x10080ad8]
1005c943:	mov    edi,DWORD PTR [esi*8+0x10080adc]
1005c94a:	cmp    ebx,DWORD PTR [ebp-0x20]
1005c94d:	jne    0x1005cad1
1005c953:	mov    DWORD PTR [ebp-0x4],0x0
1005c95a:	push   edi
1005c95b:	call   0x1004c510
1005c960:	add    esp,0x4
1005c963:	test   eax,eax
1005c965:	je     0x1005ca73
1005c96b:	mov    eax,DWORD PTR [ebp-0x1c]
1005c96e:	push   eax
1005c96f:	mov    ecx,DWORD PTR [ebp-0x24]
1005c972:	call   0x1005c7b0
1005c977:	add    esp,0x4
1005c97a:	test   eax,eax
1005c97c:	je     0x1005ca73
1005c982:	mov    ecx,DWORD PTR [ebp+0x8]
1005c985:	mov    edx,DWORD PTR [ecx+0x4]
1005c988:	sub    edx,edi
1005c98a:	push   edx
1005c98b:	push   edi
1005c98c:	call   0x1004c540
1005c991:	add    esp,0x8
1005c994:	test   eax,eax
1005c996:	je     0x1005ca73
1005c99c:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1005c9a3:	test   esi,esi
1005c9a5:	jle    0x1005cbfb
1005c9ab:	mov    eax,0x1
1005c9b0:	mov    ecx,0x10080b58
1005c9b5:	xchg   DWORD PTR [ecx],eax
1005c9b7:	test   eax,eax
1005c9b9:	jne    0x1005cbfb
1005c9bf:	mov    eax,DWORD PTR [ebp-0x20]
1005c9c2:	cmp    DWORD PTR [esi*8+0x10080ad8],eax
1005c9c9:	je     0x1005ca13
1005c9cb:	mov    ecx,DWORD PTR ds:0x10080ad0
1005c9d1:	lea    esi,[ecx-0x1]
1005c9d4:	test   esi,esi
1005c9d6:	jl     0x1005ca02
1005c9d8:	jmp    0x1005c9e0
1005c9da:	lea    ebx,[ebx+0x0]
1005c9e0:	cmp    DWORD PTR [esi*8+0x10080ad8],eax
1005c9e7:	je     0x1005c9f0
1005c9e9:	sub    esi,0x1
1005c9ec:	jns    0x1005c9e0
1005c9ee:	jmp    0x1005c9fe
1005c9f0:	mov    ebx,DWORD PTR [esi*8+0x10080ad8]
1005c9f7:	mov    edi,DWORD PTR [esi*8+0x10080adc]
1005c9fe:	test   esi,esi
1005ca00:	jge    0x1005ca15
1005ca02:	cmp    ecx,0x10
1005ca05:	jge    0x1005ca10
1005ca07:	add    ecx,0x1
1005ca0a:	mov    DWORD PTR ds:0x10080ad0,ecx
1005ca10:	lea    esi,[ecx-0x1]
1005ca13:	test   esi,esi
1005ca15:	jle    0x1005cbf2
1005ca1b:	xor    eax,eax
1005ca1d:	test   esi,esi
1005ca1f:	jl     0x1005cbf2
1005ca25:	jmp    0x1005ca30
1005ca27:	lea    esp,[esp+0x0]
1005ca2e:	mov    edi,edi
1005ca30:	mov    ecx,DWORD PTR [eax*8+0x10080ad8]
1005ca37:	mov    edx,DWORD PTR [eax*8+0x10080adc]
1005ca3e:	mov    DWORD PTR [eax*8+0x10080ad8],ebx
1005ca45:	mov    DWORD PTR [eax*8+0x10080adc],edi
1005ca4c:	mov    ebx,ecx
1005ca4e:	mov    edi,edx
1005ca50:	add    eax,0x1
1005ca53:	cmp    eax,esi
1005ca55:	jle    0x1005ca30
1005ca57:	jmp    0x1005cbf2
1005ca5c:	mov    ecx,DWORD PTR [ebp-0x14]
1005ca5f:	mov    edx,DWORD PTR [ecx]
1005ca61:	mov    eax,DWORD PTR [edx]
1005ca63:	xor    ecx,ecx
1005ca65:	cmp    eax,0xc0000005
1005ca6a:	sete   cl
1005ca6d:	mov    eax,ecx
1005ca6f:	ret    
1005ca70:	mov    esp,DWORD PTR [ebp-0x18]
1005ca73:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1005ca7a:	mov    edx,DWORD PTR [ebp-0x1c]
1005ca7d:	push   0x1c
1005ca7f:	lea    eax,[ebp-0x40]
1005ca82:	push   eax
1005ca83:	push   edx
1005ca84:	call   DWORD PTR ds:0x100660f4
1005ca8a:	test   eax,eax
1005ca8c:	je     0x1005cbfb
1005ca92:	mov    eax,DWORD PTR [ebp-0x28]
1005ca95:	cmp    eax,0x1000000
1005ca9a:	je     0x1005cb00
1005ca9c:	cmp    eax,0x20000
1005caa1:	jne    0x1005caeb
1005caa3:	cmp    DWORD PTR ds:0x10080ad4,0x0
1005caaa:	jne    0x1005cae2
1005caac:	mov    DWORD PTR ds:0x10080b60,0x94
1005cab6:	push   0x10080b60
1005cabb:	call   DWORD PTR ds:0x100661a8
1005cac1:	test   eax,eax
1005cac3:	je     0x1005cad9
1005cac5:	mov    DWORD PTR ds:0x10080ad4,0x1
1005cacf:	jmp    0x1005cae2
1005cad1:	add    esi,0x1
1005cad4:	jmp    0x1005c934
1005cad9:	cmp    DWORD PTR ds:0x10080ad4,0x0
1005cae0:	je     0x1005cb00
1005cae2:	cmp    DWORD PTR ds:0x10080b70,0x1
1005cae9:	je     0x1005cb00
1005caeb:	or     eax,0xffffffff
1005caee:	mov    ecx,DWORD PTR [ebp-0x10]
1005caf1:	mov    DWORD PTR fs:0x0,ecx
1005caf8:	pop    ecx
1005caf9:	pop    edi
1005cafa:	pop    esi
1005cafb:	pop    ebx
1005cafc:	mov    esp,ebp
1005cafe:	pop    ebp
1005caff:	ret    
1005cb00:	mov    edi,DWORD PTR [ebp-0x3c]
1005cb03:	push   edi
1005cb04:	call   0x1004c510
1005cb09:	add    esp,0x4
1005cb0c:	test   eax,eax
1005cb0e:	je     0x1005caeb
1005cb10:	test   BYTE PTR [ebp-0x2c],0xcc
1005cb14:	je     0x1005cb3a
1005cb16:	mov    ecx,DWORD PTR [ebp-0x1c]
1005cb19:	sub    ecx,edi
1005cb1b:	push   ecx
1005cb1c:	push   edi
1005cb1d:	call   0x1004c540
1005cb22:	add    esp,0x8
1005cb25:	test   eax,eax
1005cb27:	je     0x1005c8b1
1005cb2d:	test   DWORD PTR [eax+0x24],0x80000000
1005cb34:	jne    0x1005c8b1
1005cb3a:	mov    edx,DWORD PTR [ebp-0x1c]
1005cb3d:	push   edx
1005cb3e:	mov    ecx,DWORD PTR [ebp-0x24]
1005cb41:	call   0x1005c7b0
1005cb46:	add    esp,0x4
1005cb49:	test   eax,eax
1005cb4b:	je     0x1005c8b1
1005cb51:	mov    eax,DWORD PTR [ebp+0x8]
1005cb54:	mov    ecx,DWORD PTR [eax+0x4]
1005cb57:	sub    ecx,edi
1005cb59:	push   ecx
1005cb5a:	push   edi
1005cb5b:	call   0x1004c540
1005cb60:	add    esp,0x8
1005cb63:	test   eax,eax
1005cb65:	je     0x1005c8b1
1005cb6b:	mov    edx,0x1
1005cb70:	mov    eax,0x10080b58
1005cb75:	xchg   DWORD PTR [eax],edx
1005cb77:	test   edx,edx
1005cb79:	jne    0x1005cbfb
1005cb7f:	mov    esi,DWORD PTR ds:0x10080ad0
1005cb85:	mov    eax,esi
1005cb87:	mov    ecx,DWORD PTR [ebp-0x20]
1005cb8a:	test   esi,esi
1005cb8c:	jle    0x1005cba3
1005cb8e:	lea    edx,[esi*8+0x10080ad0]
1005cb95:	cmp    DWORD PTR [edx],ecx
1005cb97:	je     0x1005cba3
1005cb99:	sub    eax,0x1
1005cb9c:	sub    edx,0x8
1005cb9f:	test   eax,eax
1005cba1:	jg     0x1005cb95
1005cba3:	test   eax,eax
1005cba5:	jne    0x1005cbe8
1005cba7:	cmp    esi,0xf
1005cbaa:	jle    0x1005cbb1
1005cbac:	mov    esi,0xf
1005cbb1:	mov    edx,DWORD PTR [ebp-0x3c]
1005cbb4:	test   esi,esi
1005cbb6:	jl     0x1005cbd6
1005cbb8:	mov    eax,0x10080ad8
1005cbbd:	lea    ebx,[esi+0x1]
1005cbc0:	mov    esi,DWORD PTR [eax]
1005cbc2:	mov    edi,DWORD PTR [eax+0x4]
1005cbc5:	mov    DWORD PTR [eax],ecx
1005cbc7:	mov    DWORD PTR [eax+0x4],edx
1005cbca:	mov    ecx,esi
1005cbcc:	mov    edx,edi
1005cbce:	add    eax,0x8
1005cbd1:	sub    ebx,0x1
1005cbd4:	jne    0x1005cbc0
1005cbd6:	cmp    DWORD PTR ds:0x10080ad0,0x10
1005cbdd:	jge    0x1005cbf2
1005cbdf:	add    DWORD PTR ds:0x10080ad0,0x1
1005cbe6:	jmp    0x1005cbf2
1005cbe8:	mov    ecx,DWORD PTR [ebp-0x3c]
1005cbeb:	mov    DWORD PTR [eax*8+0x10080ad4],ecx
1005cbf2:	mov    eax,0x10080b58
1005cbf7:	xor    edx,edx
1005cbf9:	xchg   DWORD PTR [eax],edx
1005cbfb:	mov    eax,0x1
1005cc00:	mov    ecx,DWORD PTR [ebp-0x10]
1005cc03:	mov    DWORD PTR fs:0x0,ecx
1005cc0a:	pop    ecx
1005cc0b:	pop    edi
1005cc0c:	pop    esi
1005cc0d:	pop    ebx
1005cc0e:	mov    esp,ebp
1005cc10:	pop    ebp
1005cc11:	ret    
1005cc12:	push   ebp
1005cc13:	mov    ebp,esp
1005cc15:	sub    esp,0x18
1005cc18:	push   ebx
1005cc19:	push   esi
1005cc1a:	push   edi
1005cc1b:	xor    ebx,ebx
1005cc1d:	push   0x1
1005cc1f:	push   ebx
1005cc20:	push   ebx
1005cc21:	push   DWORD PTR [ebp+0x8]
1005cc24:	mov    DWORD PTR [ebp-0x10],ebx
1005cc27:	mov    DWORD PTR [ebp-0xc],ebx
1005cc2a:	call   0x1004c9b1
1005cc2f:	mov    DWORD PTR [ebp-0x18],eax
1005cc32:	and    eax,edx
1005cc34:	add    esp,0x10
1005cc37:	cmp    eax,0xffffffff
1005cc3a:	mov    DWORD PTR [ebp-0x14],edx
1005cc3d:	je     0x1005cc98
1005cc3f:	push   0x2
1005cc41:	push   ebx
1005cc42:	push   ebx
1005cc43:	push   DWORD PTR [ebp+0x8]
1005cc46:	call   0x1004c9b1
1005cc4b:	mov    ecx,eax
1005cc4d:	and    ecx,edx
1005cc4f:	add    esp,0x10
1005cc52:	cmp    ecx,0xffffffff
1005cc55:	je     0x1005cc98
1005cc57:	mov    esi,DWORD PTR [ebp+0xc]
1005cc5a:	mov    edi,DWORD PTR [ebp+0x10]
1005cc5d:	sub    esi,eax
1005cc5f:	sbb    edi,edx
1005cc61:	js     0x1005cd2d
1005cc67:	jg     0x1005cc71
1005cc69:	cmp    esi,ebx
1005cc6b:	jbe    0x1005cd2d
1005cc71:	mov    ebx,0x1000
1005cc76:	push   ebx
1005cc77:	push   0x8
1005cc79:	call   DWORD PTR ds:0x100661ac
1005cc7f:	push   eax
1005cc80:	call   DWORD PTR ds:0x1006618c
1005cc86:	test   eax,eax
1005cc88:	mov    DWORD PTR [ebp-0x4],eax
1005cc8b:	jne    0x1005cca4
1005cc8d:	call   0x10046df5
1005cc92:	mov    DWORD PTR [eax],0xc
1005cc98:	call   0x10046df5
1005cc9d:	mov    eax,DWORD PTR [eax]
1005cc9f:	pop    edi
1005cca0:	pop    esi
1005cca1:	pop    ebx
1005cca2:	leave  
1005cca3:	ret    
1005cca4:	push   0x8000
1005cca9:	push   DWORD PTR [ebp+0x8]
1005ccac:	call   0x1005cdc6
1005ccb1:	pop    ecx
1005ccb2:	pop    ecx
1005ccb3:	mov    DWORD PTR [ebp-0x8],eax
1005ccb6:	test   edi,edi
1005ccb8:	jl     0x1005ccc4
1005ccba:	jg     0x1005ccc0
1005ccbc:	cmp    esi,ebx
1005ccbe:	jb     0x1005ccc4
1005ccc0:	mov    eax,ebx
1005ccc2:	jmp    0x1005ccc6
1005ccc4:	mov    eax,esi
1005ccc6:	push   eax
1005ccc7:	push   DWORD PTR [ebp-0x4]
1005ccca:	push   DWORD PTR [ebp+0x8]
1005cccd:	call   0x1004cb4d
1005ccd2:	add    esp,0xc
1005ccd5:	cmp    eax,0xffffffff
1005ccd8:	je     0x1005cd10
1005ccda:	cdq    
1005ccdb:	sub    esi,eax
1005ccdd:	sbb    edi,edx
1005ccdf:	js     0x1005cce7
1005cce1:	jg     0x1005ccb6
1005cce3:	test   esi,esi
1005cce5:	ja     0x1005ccb6
1005cce7:	mov    esi,DWORD PTR [ebp-0x10]
1005ccea:	push   DWORD PTR [ebp-0x8]
1005cced:	push   DWORD PTR [ebp+0x8]
1005ccf0:	call   0x1005cdc6
1005ccf5:	pop    ecx
1005ccf6:	pop    ecx
1005ccf7:	push   DWORD PTR [ebp-0x4]
1005ccfa:	push   0x0
1005ccfc:	call   DWORD PTR ds:0x100661ac
1005cd02:	push   eax
1005cd03:	call   DWORD PTR ds:0x10066188
1005cd09:	xor    ebx,ebx
1005cd0b:	jmp    0x1005cd96
1005cd10:	call   0x10046e08
1005cd15:	cmp    DWORD PTR [eax],0x5
1005cd18:	jne    0x1005cd25
1005cd1a:	call   0x10046df5
1005cd1f:	mov    DWORD PTR [eax],0xd
1005cd25:	or     esi,0xffffffff
1005cd28:	mov    DWORD PTR [ebp-0xc],esi
1005cd2b:	jmp    0x1005ccea
1005cd2d:	cmp    edi,ebx
1005cd2f:	jg     0x1005cda2
1005cd31:	jl     0x1005cd37
1005cd33:	cmp    esi,ebx
1005cd35:	jae    0x1005cda2
1005cd37:	push   ebx
1005cd38:	push   DWORD PTR [ebp+0x10]
1005cd3b:	push   DWORD PTR [ebp+0xc]
1005cd3e:	push   DWORD PTR [ebp+0x8]
1005cd41:	call   0x1004c9b1
1005cd46:	and    eax,edx
1005cd48:	add    esp,0x10
1005cd4b:	cmp    eax,0xffffffff
1005cd4e:	je     0x1005cc98
1005cd54:	push   DWORD PTR [ebp+0x8]
1005cd57:	call   0x1004fbff
1005cd5c:	pop    ecx
1005cd5d:	push   eax
1005cd5e:	call   DWORD PTR ds:0x10066068
1005cd64:	neg    eax
1005cd66:	sbb    eax,eax
1005cd68:	neg    eax
1005cd6a:	dec    eax
1005cd6b:	cdq    
1005cd6c:	mov    DWORD PTR [ebp-0x10],eax
1005cd6f:	and    eax,edx
1005cd71:	cmp    eax,0xffffffff
1005cd74:	mov    DWORD PTR [ebp-0xc],edx
1005cd77:	jne    0x1005cda2
1005cd79:	call   0x10046df5
1005cd7e:	mov    DWORD PTR [eax],0xd
1005cd84:	call   0x10046e08
1005cd89:	mov    esi,eax
1005cd8b:	call   DWORD PTR ds:0x100660cc
1005cd91:	mov    DWORD PTR [esi],eax
1005cd93:	mov    esi,DWORD PTR [ebp-0x10]
1005cd96:	and    esi,DWORD PTR [ebp-0xc]
1005cd99:	cmp    esi,0xffffffff
1005cd9c:	je     0x1005cc98
1005cda2:	push   ebx
1005cda3:	push   DWORD PTR [ebp-0x14]
1005cda6:	push   DWORD PTR [ebp-0x18]
1005cda9:	push   DWORD PTR [ebp+0x8]
1005cdac:	call   0x1004c9b1
1005cdb1:	and    eax,edx
1005cdb3:	add    esp,0x10
1005cdb6:	cmp    eax,0xffffffff
1005cdb9:	je     0x1005cc98
1005cdbf:	xor    eax,eax
1005cdc1:	jmp    0x1005cc9f
1005cdc6:	push   ebp
1005cdc7:	mov    ebp,esp
1005cdc9:	mov    edx,DWORD PTR [ebp+0x8]
1005cdcc:	mov    eax,edx
1005cdce:	sar    eax,0x5
1005cdd1:	and    edx,0x1f
1005cdd4:	imul   edx,edx,0x28
1005cdd7:	push   ebx
1005cdd8:	mov    ebx,DWORD PTR [ebp+0xc]
1005cddb:	push   esi
1005cddc:	lea    esi,[eax*4+0x10082480]
1005cde3:	mov    eax,DWORD PTR [esi]
1005cde5:	lea    ecx,[eax+edx*1]
1005cde8:	movzx  eax,BYTE PTR [ecx+0x4]
1005cdec:	and    eax,0x80
1005cdf1:	mov    DWORD PTR [ebp+0x8],eax
1005cdf4:	mov    al,BYTE PTR [ecx+0x24]
1005cdf7:	add    al,al
1005cdf9:	movsx  eax,al
1005cdfc:	push   edi
1005cdfd:	mov    edi,0x4000
1005ce02:	sar    eax,1
1005ce04:	cmp    ebx,edi
1005ce06:	je     0x1005ce58
1005ce08:	cmp    ebx,0x8000
1005ce0e:	je     0x1005ce52
1005ce10:	cmp    ebx,0x10000
1005ce16:	je     0x1005ce3e
1005ce18:	cmp    ebx,0x20000
1005ce1e:	je     0x1005ce3e
1005ce20:	cmp    ebx,0x40000
1005ce26:	jne    0x1005ce65
1005ce28:	or     BYTE PTR [ecx+0x4],0x80
1005ce2c:	mov    ecx,DWORD PTR [esi]
1005ce2e:	lea    ecx,[ecx+edx*1+0x24]
1005ce32:	mov    dl,BYTE PTR [ecx]
1005ce34:	and    dl,0x81
1005ce37:	or     dl,0x1
1005ce3a:	mov    BYTE PTR [ecx],dl
1005ce3c:	jmp    0x1005ce65
1005ce3e:	or     BYTE PTR [ecx+0x4],0x80
1005ce42:	mov    ecx,DWORD PTR [esi]
1005ce44:	lea    ecx,[ecx+edx*1+0x24]
1005ce48:	mov    dl,BYTE PTR [ecx]
1005ce4a:	and    dl,0x82
1005ce4d:	or     dl,0x2
1005ce50:	jmp    0x1005ce3a
1005ce52:	and    BYTE PTR [ecx+0x4],0x7f
1005ce56:	jmp    0x1005ce65
1005ce58:	or     BYTE PTR [ecx+0x4],0x80
1005ce5c:	mov    ecx,DWORD PTR [esi]
1005ce5e:	lea    ecx,[ecx+edx*1+0x24]
1005ce62:	and    BYTE PTR [ecx],0x80
1005ce65:	cmp    DWORD PTR [ebp+0x8],0x0
1005ce69:	jne    0x1005ce72
1005ce6b:	mov    eax,0x8000
1005ce70:	jmp    0x1005ce7d
1005ce72:	neg    eax
1005ce74:	sbb    eax,eax
1005ce76:	and    eax,0xc000
1005ce7b:	add    eax,edi
1005ce7d:	pop    edi
1005ce7e:	pop    esi
1005ce7f:	pop    ebx
1005ce80:	pop    ebp
1005ce81:	ret    
1005ce82:	mov    eax,DWORD PTR [esp+0x4]
1005ce86:	push   esi
1005ce87:	xor    esi,esi
1005ce89:	cmp    eax,esi
1005ce8b:	jne    0x1005ceaa
1005ce8d:	call   0x10046df5
1005ce92:	push   esi
1005ce93:	push   esi
1005ce94:	push   esi
1005ce95:	push   esi
1005ce96:	push   esi
1005ce97:	mov    DWORD PTR [eax],0x16
1005ce9d:	call   0x100435cc
1005cea2:	add    esp,0x14
1005cea5:	push   0x16
1005cea7:	pop    eax
1005cea8:	pop    esi
1005cea9:	ret    
1005ceaa:	mov    ecx,DWORD PTR ds:0x10080bfc
1005ceb0:	mov    DWORD PTR [eax],ecx
1005ceb2:	xor    eax,eax
1005ceb4:	pop    esi
1005ceb5:	ret    
1005ceb6:	push   ebp
1005ceb7:	mov    ebp,esp
1005ceb9:	sub    esp,0x10
1005cebc:	push   ebx
1005cebd:	xor    ebx,ebx
1005cebf:	cmp    DWORD PTR [ebp+0x10],ebx
1005cec2:	jne    0x1005cecb
1005cec4:	xor    eax,eax
1005cec6:	jmp    0x1005d008
1005cecb:	push   edi
1005cecc:	push   DWORD PTR [ebp+0x14]
1005cecf:	lea    ecx,[ebp-0x10]
1005ced2:	call   0x10045785
1005ced7:	mov    edi,DWORD PTR [ebp-0xc]
1005ceda:	cmp    DWORD PTR [edi+0x8],ebx
1005cedd:	jne    0x1005cf05
1005cedf:	push   DWORD PTR [ebp+0x10]
1005cee2:	push   DWORD PTR [ebp+0xc]
1005cee5:	push   DWORD PTR [ebp+0x8]
1005cee8:	call   0x1004f3a6
1005ceed:	add    esp,0xc
1005cef0:	cmp    BYTE PTR [ebp-0x4],bl
1005cef3:	je     0x1005d007
1005cef9:	mov    ecx,DWORD PTR [ebp-0x8]
1005cefc:	and    DWORD PTR [ecx+0x70],0xfffffffd
1005cf00:	jmp    0x1005d007
1005cf05:	cmp    DWORD PTR [ebp+0x8],ebx
1005cf08:	jne    0x1005cf38
1005cf0a:	call   0x10046df5
1005cf0f:	push   ebx
1005cf10:	push   ebx
1005cf11:	push   ebx
1005cf12:	push   ebx
1005cf13:	push   ebx
1005cf14:	mov    DWORD PTR [eax],0x16
1005cf1a:	call   0x100435cc
1005cf1f:	add    esp,0x14
1005cf22:	cmp    BYTE PTR [ebp-0x4],bl
1005cf25:	je     0x1005cf2e
1005cf27:	mov    eax,DWORD PTR [ebp-0x8]
1005cf2a:	and    DWORD PTR [eax+0x70],0xfffffffd
1005cf2e:	mov    eax,0x7fffffff
1005cf33:	jmp    0x1005d007
1005cf38:	push   esi
1005cf39:	mov    esi,DWORD PTR [ebp+0xc]
1005cf3c:	cmp    esi,ebx
1005cf3e:	jne    0x1005cf6e
1005cf40:	call   0x10046df5
1005cf45:	push   ebx
1005cf46:	push   ebx
1005cf47:	push   ebx
1005cf48:	push   ebx
1005cf49:	push   ebx
1005cf4a:	mov    DWORD PTR [eax],0x16
1005cf50:	call   0x100435cc
1005cf55:	add    esp,0x14
1005cf58:	cmp    BYTE PTR [ebp-0x4],bl
1005cf5b:	je     0x1005cf64
1005cf5d:	mov    eax,DWORD PTR [ebp-0x8]
1005cf60:	and    DWORD PTR [eax+0x70],0xfffffffd
1005cf64:	mov    eax,0x7fffffff
1005cf69:	jmp    0x1005d006
1005cf6e:	mov    eax,DWORD PTR [ebp+0x8]
1005cf71:	movzx  cx,BYTE PTR [eax]
1005cf75:	dec    DWORD PTR [ebp+0x10]
1005cf78:	movzx  ecx,cx
1005cf7b:	movzx  edx,cl
1005cf7e:	inc    eax
1005cf7f:	test   BYTE PTR [edx+edi*1+0x1d],0x4
1005cf84:	mov    DWORD PTR [ebp+0x8],eax
1005cf87:	je     0x1005cfb5
1005cf89:	cmp    DWORD PTR [ebp+0x10],ebx
1005cf8c:	jne    0x1005cf9f
1005cf8e:	movzx  eax,BYTE PTR [esi]
1005cf91:	xor    ecx,ecx
1005cf93:	test   BYTE PTR [eax+edi*1+0x1d],0x4
1005cf98:	jne    0x1005cff8
1005cf9a:	movzx  eax,ax
1005cf9d:	jmp    0x1005cfe5
1005cf9f:	mov    al,BYTE PTR [eax]
1005cfa1:	cmp    al,bl
1005cfa3:	jne    0x1005cfa9
1005cfa5:	xor    ecx,ecx
1005cfa7:	jmp    0x1005cfb5
1005cfa9:	xor    edx,edx
1005cfab:	inc    DWORD PTR [ebp+0x8]
1005cfae:	mov    dh,cl
1005cfb0:	mov    dl,al
1005cfb2:	movzx  ecx,dx
1005cfb5:	movzx  ax,BYTE PTR [esi]
1005cfb9:	movzx  eax,ax
1005cfbc:	movzx  edx,al
1005cfbf:	inc    esi
1005cfc0:	test   BYTE PTR [edx+edi*1+0x1d],0x4
1005cfc5:	je     0x1005cfe5
1005cfc7:	cmp    DWORD PTR [ebp+0x10],ebx
1005cfca:	jne    0x1005cfd0
1005cfcc:	xor    eax,eax
1005cfce:	jmp    0x1005cfe5
1005cfd0:	mov    dl,BYTE PTR [esi]
1005cfd2:	dec    DWORD PTR [ebp+0x10]
1005cfd5:	cmp    dl,bl
1005cfd7:	je     0x1005cfcc
1005cfd9:	xor    ebx,ebx
1005cfdb:	mov    bh,al
1005cfdd:	inc    esi
1005cfde:	mov    bl,dl
1005cfe0:	movzx  eax,bx
1005cfe3:	xor    ebx,ebx
1005cfe5:	cmp    ax,cx
1005cfe8:	jne    0x1005d00b
1005cfea:	cmp    cx,bx
1005cfed:	je     0x1005cff8
1005cfef:	cmp    DWORD PTR [ebp+0x10],ebx
1005cff2:	jne    0x1005cf6e
1005cff8:	cmp    BYTE PTR [ebp-0x4],bl
1005cffb:	je     0x1005d004
1005cffd:	mov    eax,DWORD PTR [ebp-0x8]
1005d000:	and    DWORD PTR [eax+0x70],0xfffffffd
1005d004:	xor    eax,eax
1005d006:	pop    esi
1005d007:	pop    edi
1005d008:	pop    ebx
1005d009:	leave  
1005d00a:	ret    
1005d00b:	sbb    eax,eax
1005d00d:	and    eax,0x2
1005d010:	dec    eax
1005d011:	cmp    BYTE PTR [ebp-0x4],bl
1005d014:	je     0x1005d006
1005d016:	mov    ecx,DWORD PTR [ebp-0x8]
1005d019:	and    DWORD PTR [ecx+0x70],0xfffffffd
1005d01d:	jmp    0x1005d006
1005d01f:	push   0x0
1005d021:	push   DWORD PTR [esp+0x10]
1005d025:	push   DWORD PTR [esp+0x10]
1005d029:	push   DWORD PTR [esp+0x10]
1005d02d:	call   0x1005ceb6
1005d032:	add    esp,0x10
1005d035:	ret    
1005d036:	push   ebp
1005d037:	mov    ebp,esp
1005d039:	sub    esp,0x28
1005d03c:	mov    eax,ds:0x1007e030
1005d041:	xor    eax,ebp
1005d043:	mov    DWORD PTR [ebp-0x4],eax
1005d046:	push   ebx
1005d047:	push   esi
1005d048:	mov    esi,DWORD PTR [ebp+0x8]
1005d04b:	push   edi
1005d04c:	push   DWORD PTR [ebp+0x10]
1005d04f:	mov    edi,DWORD PTR [ebp+0xc]
1005d052:	lea    ecx,[ebp-0x24]
1005d055:	call   0x10045785
1005d05a:	lea    eax,[ebp-0x24]
1005d05d:	push   eax
1005d05e:	xor    ebx,ebx
1005d060:	push   ebx
1005d061:	push   ebx
1005d062:	push   ebx
1005d063:	push   ebx
1005d064:	push   edi
1005d065:	lea    eax,[ebp-0x28]
1005d068:	push   eax
1005d069:	lea    eax,[ebp-0x10]
1005d06c:	push   eax
1005d06d:	call   0x1005df7d
1005d072:	mov    DWORD PTR [ebp-0x14],eax
1005d075:	lea    eax,[ebp-0x10]
1005d078:	push   esi
1005d079:	push   eax
1005d07a:	call   0x1005d4f9
1005d07f:	add    esp,0x28
1005d082:	test   BYTE PTR [ebp-0x14],0x3
1005d086:	jne    0x1005d0b3
1005d088:	cmp    eax,0x1
1005d08b:	jne    0x1005d09e
1005d08d:	cmp    BYTE PTR [ebp-0x18],bl
1005d090:	je     0x1005d099
1005d092:	mov    eax,DWORD PTR [ebp-0x1c]
1005d095:	and    DWORD PTR [eax+0x70],0xfffffffd
1005d099:	push   0x3
1005d09b:	pop    eax
1005d09c:	jmp    0x1005d0cd
1005d09e:	cmp    eax,0x2
1005d0a1:	jne    0x1005d0bf
1005d0a3:	cmp    BYTE PTR [ebp-0x18],bl
1005d0a6:	je     0x1005d0af
1005d0a8:	mov    eax,DWORD PTR [ebp-0x1c]
1005d0ab:	and    DWORD PTR [eax+0x70],0xfffffffd
1005d0af:	push   0x4
1005d0b1:	jmp    0x1005d09b
1005d0b3:	test   BYTE PTR [ebp-0x14],0x1
1005d0b7:	jne    0x1005d0a3
1005d0b9:	test   BYTE PTR [ebp-0x14],0x2
1005d0bd:	jne    0x1005d08d
1005d0bf:	cmp    BYTE PTR [ebp-0x18],bl
1005d0c2:	je     0x1005d0cb
1005d0c4:	mov    eax,DWORD PTR [ebp-0x1c]
1005d0c7:	and    DWORD PTR [eax+0x70],0xfffffffd
1005d0cb:	xor    eax,eax
1005d0cd:	mov    ecx,DWORD PTR [ebp-0x4]
1005d0d0:	pop    edi
1005d0d1:	pop    esi
1005d0d2:	xor    ecx,ebp
1005d0d4:	pop    ebx
1005d0d5:	call   0x100430d7
1005d0da:	leave  
1005d0db:	ret    
1005d0dc:	push   ebp
1005d0dd:	mov    ebp,esp
1005d0df:	sub    esp,0x28
1005d0e2:	mov    eax,ds:0x1007e030
1005d0e7:	xor    eax,ebp
1005d0e9:	mov    DWORD PTR [ebp-0x4],eax
1005d0ec:	push   ebx
1005d0ed:	push   esi
1005d0ee:	mov    esi,DWORD PTR [ebp+0x8]
1005d0f1:	push   edi
1005d0f2:	push   DWORD PTR [ebp+0x10]
1005d0f5:	mov    edi,DWORD PTR [ebp+0xc]
1005d0f8:	lea    ecx,[ebp-0x24]
1005d0fb:	call   0x10045785
1005d100:	lea    eax,[ebp-0x24]
1005d103:	push   eax
1005d104:	xor    ebx,ebx
1005d106:	push   ebx
1005d107:	push   ebx
1005d108:	push   ebx
1005d109:	push   ebx
1005d10a:	push   edi
1005d10b:	lea    eax,[ebp-0x28]
1005d10e:	push   eax
1005d10f:	lea    eax,[ebp-0x10]
1005d112:	push   eax
1005d113:	call   0x1005df7d
1005d118:	mov    DWORD PTR [ebp-0x14],eax
1005d11b:	lea    eax,[ebp-0x10]
1005d11e:	push   esi
1005d11f:	push   eax
1005d120:	call   0x1005da3b
1005d125:	add    esp,0x28
1005d128:	test   BYTE PTR [ebp-0x14],0x3
1005d12c:	jne    0x1005d159
1005d12e:	cmp    eax,0x1
1005d131:	jne    0x1005d144
1005d133:	cmp    BYTE PTR [ebp-0x18],bl
1005d136:	je     0x1005d13f
1005d138:	mov    eax,DWORD PTR [ebp-0x1c]
1005d13b:	and    DWORD PTR [eax+0x70],0xfffffffd
1005d13f:	push   0x3
1005d141:	pop    eax
1005d142:	jmp    0x1005d173
1005d144:	cmp    eax,0x2
1005d147:	jne    0x1005d165
1005d149:	cmp    BYTE PTR [ebp-0x18],bl
1005d14c:	je     0x1005d155
1005d14e:	mov    eax,DWORD PTR [ebp-0x1c]
1005d151:	and    DWORD PTR [eax+0x70],0xfffffffd
1005d155:	push   0x4
1005d157:	jmp    0x1005d141
1005d159:	test   BYTE PTR [ebp-0x14],0x1
1005d15d:	jne    0x1005d149
1005d15f:	test   BYTE PTR [ebp-0x14],0x2
1005d163:	jne    0x1005d133
1005d165:	cmp    BYTE PTR [ebp-0x18],bl
1005d168:	je     0x1005d171
1005d16a:	mov    eax,DWORD PTR [ebp-0x1c]
1005d16d:	and    DWORD PTR [eax+0x70],0xfffffffd
1005d171:	xor    eax,eax
1005d173:	mov    ecx,DWORD PTR [ebp-0x4]
1005d176:	pop    edi
1005d177:	pop    esi
1005d178:	xor    ecx,ebp
1005d17a:	pop    ebx
1005d17b:	call   0x100430d7
1005d180:	leave  
1005d181:	ret    
1005d182:	push   ebp
1005d183:	mov    ebp,esp
1005d185:	mov    ecx,DWORD PTR [ebp+0x14]
1005d188:	push   ebx
1005d189:	push   esi
1005d18a:	mov    esi,DWORD PTR [ebp+0x8]
1005d18d:	xor    ebx,ebx
1005d18f:	cmp    esi,ebx
1005d191:	push   edi
1005d192:	mov    edi,DWORD PTR [ecx+0xc]
1005d195:	jne    0x1005d1b5
1005d197:	call   0x10046df5
1005d19c:	push   0x16
1005d19e:	pop    esi
1005d19f:	mov    DWORD PTR [eax],esi
1005d1a1:	push   ebx
1005d1a2:	push   ebx
1005d1a3:	push   ebx
1005d1a4:	push   ebx
1005d1a5:	push   ebx
1005d1a6:	call   0x100435cc
1005d1ab:	add    esp,0x14
1005d1ae:	mov    eax,esi
1005d1b0:	jmp    0x1005d23a
1005d1b5:	cmp    DWORD PTR [ebp+0xc],ebx
1005d1b8:	jbe    0x1005d197
1005d1ba:	mov    edx,DWORD PTR [ebp+0x10]
1005d1bd:	cmp    edx,ebx
1005d1bf:	mov    BYTE PTR [esi],bl
1005d1c1:	jle    0x1005d1c7
1005d1c3:	mov    eax,edx
1005d1c5:	jmp    0x1005d1c9
1005d1c7:	xor    eax,eax
1005d1c9:	inc    eax
1005d1ca:	cmp    DWORD PTR [ebp+0xc],eax
1005d1cd:	ja     0x1005d1dd
1005d1cf:	call   0x10046df5
1005d1d4:	push   0x22
1005d1d6:	pop    ecx
1005d1d7:	mov    DWORD PTR [eax],ecx
1005d1d9:	mov    esi,ecx
1005d1db:	jmp    0x1005d1a1
1005d1dd:	cmp    edx,ebx
1005d1df:	mov    BYTE PTR [esi],0x30
1005d1e2:	lea    eax,[esi+0x1]
1005d1e5:	jle    0x1005d201
1005d1e7:	mov    cl,BYTE PTR [edi]
1005d1e9:	cmp    cl,bl
1005d1eb:	je     0x1005d1f3
1005d1ed:	movsx  ecx,cl
1005d1f0:	inc    edi
1005d1f1:	jmp    0x1005d1f6
1005d1f3:	push   0x30
1005d1f5:	pop    ecx
1005d1f6:	mov    BYTE PTR [eax],cl
1005d1f8:	inc    eax
1005d1f9:	dec    edx
1005d1fa:	cmp    edx,ebx
1005d1fc:	jg     0x1005d1e7
1005d1fe:	mov    ecx,DWORD PTR [ebp+0x14]
1005d201:	cmp    edx,ebx
1005d203:	mov    BYTE PTR [eax],bl
1005d205:	jl     0x1005d219
1005d207:	cmp    BYTE PTR [edi],0x35
1005d20a:	jl     0x1005d219
1005d20c:	jmp    0x1005d211
1005d20e:	mov    BYTE PTR [eax],0x30
1005d211:	dec    eax
1005d212:	cmp    BYTE PTR [eax],0x39
1005d215:	je     0x1005d20e
1005d217:	inc    BYTE PTR [eax]
1005d219:	cmp    BYTE PTR [esi],0x31
1005d21c:	jne    0x1005d223
1005d21e:	inc    DWORD PTR [ecx+0x4]
1005d221:	jmp    0x1005d238
1005d223:	lea    edi,[esi+0x1]
1005d226:	push   edi
1005d227:	call   0x10043250
1005d22c:	inc    eax
1005d22d:	push   eax
1005d22e:	push   edi
1005d22f:	push   esi
1005d230:	call   0x10045960
1005d235:	add    esp,0x10
1005d238:	xor    eax,eax
1005d23a:	pop    edi
1005d23b:	pop    esi
1005d23c:	pop    ebx
1005d23d:	pop    ebp
1005d23e:	ret    
1005d23f:	push   ebp
1005d240:	mov    ebp,esp
1005d242:	push   ecx
1005d243:	mov    edx,DWORD PTR [ebp+0xc]
1005d246:	movzx  eax,WORD PTR [edx+0x6]
1005d24a:	push   ebx
1005d24b:	mov    ecx,eax
1005d24d:	push   esi
1005d24e:	push   edi
1005d24f:	shr    ecx,0x4
1005d252:	and    eax,0x8000
1005d257:	mov    edi,0x7ff
1005d25c:	and    ecx,edi
1005d25e:	mov    DWORD PTR [ebp+0xc],eax
1005d261:	mov    eax,DWORD PTR [edx+0x4]
1005d264:	mov    edx,DWORD PTR [edx]
1005d266:	movzx  ebx,cx
1005d269:	mov    esi,0x80000000
1005d26e:	and    eax,0xfffff
1005d273:	test   ebx,ebx
1005d275:	mov    DWORD PTR [ebp-0x4],esi
1005d278:	je     0x1005d28d
1005d27a:	cmp    ebx,edi
1005d27c:	je     0x1005d286
1005d27e:	add    ecx,0x3c00
1005d284:	jmp    0x1005d2ae
1005d286:	mov    edi,0x7fff
1005d28b:	jmp    0x1005d2b1
1005d28d:	xor    ebx,ebx
1005d28f:	cmp    eax,ebx
1005d291:	jne    0x1005d2a5
1005d293:	cmp    edx,ebx
1005d295:	jne    0x1005d2a5
1005d297:	mov    eax,DWORD PTR [ebp+0x8]
1005d29a:	mov    cx,WORD PTR [ebp+0xc]
1005d29e:	mov    DWORD PTR [eax+0x4],ebx
1005d2a1:	mov    DWORD PTR [eax],ebx
1005d2a3:	jmp    0x1005d2f1
1005d2a5:	add    ecx,0x3c01
1005d2ab:	mov    DWORD PTR [ebp-0x4],ebx
1005d2ae:	movzx  edi,cx
1005d2b1:	mov    ecx,edx
1005d2b3:	shr    ecx,0x15
1005d2b6:	shl    eax,0xb
1005d2b9:	or     ecx,eax
1005d2bb:	or     ecx,DWORD PTR [ebp-0x4]
1005d2be:	mov    eax,DWORD PTR [ebp+0x8]
1005d2c1:	shl    edx,0xb
1005d2c4:	test   esi,ecx
1005d2c6:	mov    DWORD PTR [eax+0x4],ecx
1005d2c9:	mov    DWORD PTR [eax],edx
1005d2cb:	jne    0x1005d2ec
1005d2cd:	mov    ecx,DWORD PTR [eax]
1005d2cf:	mov    edx,DWORD PTR [eax+0x4]
1005d2d2:	mov    ebx,ecx
1005d2d4:	add    edx,edx
1005d2d6:	shr    ebx,0x1f
1005d2d9:	or     edx,ebx
1005d2db:	add    ecx,ecx
1005d2dd:	add    edi,0xffff
1005d2e3:	test   esi,edx
1005d2e5:	mov    DWORD PTR [eax+0x4],edx
1005d2e8:	mov    DWORD PTR [eax],ecx
1005d2ea:	je     0x1005d2cd
1005d2ec:	mov    ecx,DWORD PTR [ebp+0xc]
1005d2ef:	or     ecx,edi
1005d2f1:	pop    edi
1005d2f2:	pop    esi
1005d2f3:	mov    WORD PTR [eax+0x8],cx
1005d2f7:	pop    ebx
1005d2f8:	leave  
1005d2f9:	ret    
1005d2fa:	push   ebp
1005d2fb:	mov    ebp,esp
1005d2fd:	sub    esp,0x30
1005d300:	mov    eax,ds:0x1007e030
1005d305:	xor    eax,ebp
1005d307:	mov    DWORD PTR [ebp-0x4],eax
1005d30a:	mov    eax,DWORD PTR [ebp+0x14]
1005d30d:	push   ebx
1005d30e:	mov    ebx,DWORD PTR [ebp+0x10]
1005d311:	push   esi
1005d312:	mov    DWORD PTR [ebp-0x30],eax
1005d315:	push   edi
1005d316:	lea    eax,[ebp+0x8]
1005d319:	push   eax
1005d31a:	lea    eax,[ebp-0x10]
1005d31d:	push   eax
1005d31e:	call   0x1005d23f
1005d323:	pop    ecx
1005d324:	pop    ecx
1005d325:	lea    eax,[ebp-0x2c]
1005d328:	push   eax
1005d329:	push   0x0
1005d32b:	push   0x11
1005d32d:	sub    esp,0xc
1005d330:	lea    esi,[ebp-0x10]
1005d333:	mov    edi,esp
1005d335:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005d336:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005d337:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
1005d339:	call   0x1005e641
1005d33e:	mov    esi,DWORD PTR [ebp-0x30]
1005d341:	mov    DWORD PTR [ebx+0x8],eax
1005d344:	movsx  eax,BYTE PTR [ebp-0x2a]
1005d348:	mov    DWORD PTR [ebx],eax
1005d34a:	movsx  eax,WORD PTR [ebp-0x2c]
1005d34e:	mov    DWORD PTR [ebx+0x4],eax
1005d351:	lea    eax,[ebp-0x28]
1005d354:	push   eax
1005d355:	push   DWORD PTR [ebp+0x18]
1005d358:	push   esi
1005d359:	call   0x10046e39
1005d35e:	add    esp,0x24
1005d361:	test   eax,eax
1005d363:	je     0x1005d374
1005d365:	xor    eax,eax
1005d367:	push   eax
1005d368:	push   eax
1005d369:	push   eax
1005d36a:	push   eax
1005d36b:	push   eax
1005d36c:	call   0x100434d0
1005d371:	add    esp,0x14
1005d374:	mov    ecx,DWORD PTR [ebp-0x4]
1005d377:	pop    edi
1005d378:	mov    DWORD PTR [ebx+0xc],esi
1005d37b:	pop    esi
1005d37c:	mov    eax,ebx
1005d37e:	xor    ecx,ebp
1005d380:	pop    ebx
1005d381:	call   0x100430d7
1005d386:	leave  
1005d387:	ret    
1005d388:	int3   
1005d389:	int3   
1005d38a:	int3   
1005d38b:	int3   
1005d38c:	int3   
1005d38d:	int3   
1005d38e:	int3   
1005d38f:	int3   
1005d390:	push   edi
1005d391:	push   esi
1005d392:	push   ebp
1005d393:	xor    edi,edi
1005d395:	xor    ebp,ebp
1005d397:	mov    eax,DWORD PTR [esp+0x14]
1005d39b:	or     eax,eax
1005d39d:	jge    0x1005d3b4
1005d39f:	inc    edi
1005d3a0:	inc    ebp
1005d3a1:	mov    edx,DWORD PTR [esp+0x10]
1005d3a5:	neg    eax
1005d3a7:	neg    edx
1005d3a9:	sbb    eax,0x0
1005d3ac:	mov    DWORD PTR [esp+0x14],eax
1005d3b0:	mov    DWORD PTR [esp+0x10],edx
1005d3b4:	mov    eax,DWORD PTR [esp+0x1c]
1005d3b8:	or     eax,eax
1005d3ba:	jge    0x1005d3d0
1005d3bc:	inc    edi
1005d3bd:	mov    edx,DWORD PTR [esp+0x18]
1005d3c1:	neg    eax
1005d3c3:	neg    edx
1005d3c5:	sbb    eax,0x0
1005d3c8:	mov    DWORD PTR [esp+0x1c],eax
1005d3cc:	mov    DWORD PTR [esp+0x18],edx
1005d3d0:	or     eax,eax
1005d3d2:	jne    0x1005d3fc
1005d3d4:	mov    ecx,DWORD PTR [esp+0x18]
1005d3d8:	mov    eax,DWORD PTR [esp+0x14]
1005d3dc:	xor    edx,edx
1005d3de:	div    ecx
1005d3e0:	mov    ebx,eax
1005d3e2:	mov    eax,DWORD PTR [esp+0x10]
1005d3e6:	div    ecx
1005d3e8:	mov    esi,eax
1005d3ea:	mov    eax,ebx
1005d3ec:	mul    DWORD PTR [esp+0x18]
1005d3f0:	mov    ecx,eax
1005d3f2:	mov    eax,esi
1005d3f4:	mul    DWORD PTR [esp+0x18]
1005d3f8:	add    edx,ecx
1005d3fa:	jmp    0x1005d443
1005d3fc:	mov    ebx,eax
1005d3fe:	mov    ecx,DWORD PTR [esp+0x18]
1005d402:	mov    edx,DWORD PTR [esp+0x14]
1005d406:	mov    eax,DWORD PTR [esp+0x10]
1005d40a:	shr    ebx,1
1005d40c:	rcr    ecx,1
1005d40e:	shr    edx,1
1005d410:	rcr    eax,1
1005d412:	or     ebx,ebx
1005d414:	jne    0x1005d40a
1005d416:	div    ecx
1005d418:	mov    esi,eax
1005d41a:	mul    DWORD PTR [esp+0x1c]
1005d41e:	mov    ecx,eax
1005d420:	mov    eax,DWORD PTR [esp+0x18]
1005d424:	mul    esi
1005d426:	add    edx,ecx
1005d428:	jb     0x1005d438
1005d42a:	cmp    edx,DWORD PTR [esp+0x14]
1005d42e:	ja     0x1005d438
1005d430:	jb     0x1005d441
1005d432:	cmp    eax,DWORD PTR [esp+0x10]
1005d436:	jbe    0x1005d441
1005d438:	dec    esi
1005d439:	sub    eax,DWORD PTR [esp+0x18]
1005d43d:	sbb    edx,DWORD PTR [esp+0x1c]
1005d441:	xor    ebx,ebx
1005d443:	sub    eax,DWORD PTR [esp+0x10]
1005d447:	sbb    edx,DWORD PTR [esp+0x14]
1005d44b:	dec    ebp
1005d44c:	jns    0x1005d455
1005d44e:	neg    edx
1005d450:	neg    eax
1005d452:	sbb    edx,0x0
1005d455:	mov    ecx,edx
1005d457:	mov    edx,ebx
1005d459:	mov    ebx,ecx
1005d45b:	mov    ecx,eax
1005d45d:	mov    eax,esi
1005d45f:	dec    edi
1005d460:	jne    0x1005d469
1005d462:	neg    edx
1005d464:	neg    eax
1005d466:	sbb    edx,0x0
1005d469:	pop    ebp
1005d46a:	pop    esi
1005d46b:	pop    edi
1005d46c:	ret    0x10
1005d46f:	int3   
1005d470:	cmp    cl,0x40
1005d473:	jae    0x1005d48a
1005d475:	cmp    cl,0x20
1005d478:	jae    0x1005d480
1005d47a:	shrd   eax,edx,cl
1005d47d:	shr    edx,cl
1005d47f:	ret    
1005d480:	mov    eax,edx
1005d482:	xor    edx,edx
1005d484:	and    cl,0x1f
1005d487:	shr    eax,cl
1005d489:	ret    
1005d48a:	xor    eax,eax
1005d48c:	xor    edx,edx
1005d48e:	ret    
1005d48f:	push   ebp
1005d490:	mov    ebp,esp
1005d492:	mov    eax,DWORD PTR [ebp+0x10]
1005d495:	mov    ecx,DWORD PTR [ebp+0xc]
1005d498:	and    eax,0xfff7ffff
1005d49d:	and    ecx,eax
1005d49f:	test   ecx,0xfcf0fce0
1005d4a5:	push   esi
1005d4a6:	je     0x1005d4d9
1005d4a8:	push   edi
1005d4a9:	mov    edi,DWORD PTR [ebp+0x8]
1005d4ac:	xor    esi,esi
1005d4ae:	cmp    edi,esi
1005d4b0:	je     0x1005d4bd
1005d4b2:	push   esi
1005d4b3:	push   esi
1005d4b4:	call   0x1005f037
1005d4b9:	pop    ecx
1005d4ba:	pop    ecx
1005d4bb:	mov    DWORD PTR [edi],eax
1005d4bd:	call   0x10046df5
1005d4c2:	push   0x16
1005d4c4:	pop    edi
1005d4c5:	push   esi
1005d4c6:	push   esi
1005d4c7:	push   esi
1005d4c8:	push   esi
1005d4c9:	push   esi
1005d4ca:	mov    DWORD PTR [eax],edi
1005d4cc:	call   0x100435cc
1005d4d1:	add    esp,0x14
1005d4d4:	mov    eax,edi
1005d4d6:	pop    edi
1005d4d7:	jmp    0x1005d4f6
1005d4d9:	mov    esi,DWORD PTR [ebp+0x8]
1005d4dc:	test   esi,esi
1005d4de:	push   eax
1005d4df:	push   DWORD PTR [ebp+0xc]
1005d4e2:	je     0x1005d4ed
1005d4e4:	call   0x1005f037
1005d4e9:	mov    DWORD PTR [esi],eax
1005d4eb:	jmp    0x1005d4f2
1005d4ed:	call   0x1005f037
1005d4f2:	pop    ecx
1005d4f3:	pop    ecx
1005d4f4:	xor    eax,eax
1005d4f6:	pop    esi
1005d4f7:	pop    ebp
1005d4f8:	ret    
1005d4f9:	push   ebp
1005d4fa:	mov    ebp,esp
1005d4fc:	sub    esp,0x2c
1005d4ff:	mov    eax,DWORD PTR [ebp+0x8]
1005d502:	movzx  ecx,WORD PTR [eax+0xa]
1005d506:	push   ebx
1005d507:	mov    ebx,ecx
1005d509:	and    ecx,0x8000
1005d50f:	mov    DWORD PTR [ebp-0x14],ecx
1005d512:	mov    ecx,DWORD PTR [eax+0x6]
1005d515:	mov    DWORD PTR [ebp-0x20],ecx
1005d518:	mov    ecx,DWORD PTR [eax+0x2]
1005d51b:	movzx  eax,WORD PTR [eax]
1005d51e:	and    ebx,0x7fff
1005d524:	sub    ebx,0x3fff
1005d52a:	shl    eax,0x10
1005d52d:	cmp    ebx,0xffffc001
1005d533:	push   edi
1005d534:	mov    DWORD PTR [ebp-0x1c],ecx
1005d537:	mov    DWORD PTR [ebp-0x18],eax
1005d53a:	jne    0x1005d563
1005d53c:	xor    ebx,ebx
1005d53e:	xor    eax,eax
1005d540:	cmp    DWORD PTR [ebp+eax*4-0x20],ebx
1005d544:	jne    0x1005d553
1005d546:	inc    eax
1005d547:	cmp    eax,0x3
1005d54a:	jl     0x1005d540
1005d54c:	xor    eax,eax
1005d54e:	jmp    0x1005d9f8
1005d553:	xor    eax,eax
1005d555:	lea    edi,[ebp-0x20]
1005d558:	stos   DWORD PTR es:[edi],eax
1005d559:	stos   DWORD PTR es:[edi],eax
1005d55a:	push   0x2
1005d55c:	stos   DWORD PTR es:[edi],eax
1005d55d:	pop    eax
1005d55e:	jmp    0x1005d9f8
1005d563:	and    DWORD PTR [ebp+0x8],0x0
1005d567:	push   esi
1005d568:	lea    esi,[ebp-0x20]
1005d56b:	lea    edi,[ebp-0x2c]
1005d56e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005d56f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005d570:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005d571:	mov    esi,DWORD PTR ds:0x1007f1f8
1005d577:	dec    esi
1005d578:	lea    ecx,[esi+0x1]
1005d57b:	mov    eax,ecx
1005d57d:	cdq    
1005d57e:	and    edx,0x1f
1005d581:	add    eax,edx
1005d583:	sar    eax,0x5
1005d586:	mov    edx,ecx
1005d588:	and    edx,0x8000001f
1005d58e:	mov    DWORD PTR [ebp-0x10],ebx
1005d591:	mov    DWORD PTR [ebp-0xc],eax
1005d594:	jns    0x1005d59b
1005d596:	dec    edx
1005d597:	or     edx,0xffffffe0
1005d59a:	inc    edx
1005d59b:	lea    edi,[ebp+eax*4-0x20]
1005d59f:	push   0x1f
1005d5a1:	xor    eax,eax
1005d5a3:	pop    ecx
1005d5a4:	sub    ecx,edx
1005d5a6:	inc    eax
1005d5a7:	shl    eax,cl
1005d5a9:	mov    DWORD PTR [ebp-0x8],ecx
1005d5ac:	test   DWORD PTR [edi],eax
1005d5ae:	je     0x1005d641
1005d5b4:	mov    eax,DWORD PTR [ebp-0xc]
1005d5b7:	or     edx,0xffffffff
1005d5ba:	shl    edx,cl
1005d5bc:	not    edx
1005d5be:	test   DWORD PTR [ebp+eax*4-0x20],edx
1005d5c2:	jmp    0x1005d5c9
1005d5c4:	cmp    DWORD PTR [ebp+eax*4-0x20],0x0
1005d5c9:	jne    0x1005d5d3
1005d5cb:	inc    eax
1005d5cc:	cmp    eax,0x3
1005d5cf:	jl     0x1005d5c4
1005d5d1:	jmp    0x1005d641
1005d5d3:	mov    eax,esi
1005d5d5:	cdq    
1005d5d6:	push   0x1f
1005d5d8:	pop    ecx
1005d5d9:	and    edx,ecx
1005d5db:	add    eax,edx
1005d5dd:	sar    eax,0x5
1005d5e0:	and    esi,0x8000001f
1005d5e6:	jns    0x1005d5ed
1005d5e8:	dec    esi
1005d5e9:	or     esi,0xffffffe0
1005d5ec:	inc    esi
1005d5ed:	and    DWORD PTR [ebp-0x4],0x0
1005d5f1:	sub    ecx,esi
1005d5f3:	xor    edx,edx
1005d5f5:	inc    edx
1005d5f6:	shl    edx,cl
1005d5f8:	lea    ecx,[ebp+eax*4-0x20]
1005d5fc:	mov    esi,DWORD PTR [ecx]
1005d5fe:	add    esi,edx
1005d600:	mov    DWORD PTR [ebp+0x8],esi
1005d603:	mov    esi,DWORD PTR [ecx]
1005d605:	cmp    DWORD PTR [ebp+0x8],esi
1005d608:	jb     0x1005d62c
1005d60a:	cmp    DWORD PTR [ebp+0x8],edx
1005d60d:	jmp    0x1005d62a
1005d60f:	test   ecx,ecx
1005d611:	je     0x1005d63e
1005d613:	and    DWORD PTR [ebp-0x4],0x0
1005d617:	lea    ecx,[ebp+eax*4-0x20]
1005d61b:	mov    edx,DWORD PTR [ecx]
1005d61d:	lea    esi,[edx+0x1]
1005d620:	cmp    esi,edx
1005d622:	mov    DWORD PTR [ebp+0x8],esi
1005d625:	jb     0x1005d62c
1005d627:	cmp    esi,0x1
1005d62a:	jae    0x1005d633
1005d62c:	mov    DWORD PTR [ebp-0x4],0x1
1005d633:	dec    eax
1005d634:	mov    edx,DWORD PTR [ebp+0x8]
1005d637:	mov    DWORD PTR [ecx],edx
1005d639:	mov    ecx,DWORD PTR [ebp-0x4]
1005d63c:	jns    0x1005d60f
1005d63e:	mov    DWORD PTR [ebp+0x8],ecx
1005d641:	mov    ecx,DWORD PTR [ebp-0x8]
1005d644:	or     eax,0xffffffff
1005d647:	shl    eax,cl
1005d649:	and    DWORD PTR [edi],eax
1005d64b:	mov    eax,DWORD PTR [ebp-0xc]
1005d64e:	inc    eax
1005d64f:	cmp    eax,0x3
1005d652:	jge    0x1005d661
1005d654:	push   0x3
1005d656:	pop    ecx
1005d657:	lea    edi,[ebp+eax*4-0x20]
1005d65b:	sub    ecx,eax
1005d65d:	xor    eax,eax
1005d65f:	rep stos DWORD PTR es:[edi],eax
1005d661:	cmp    DWORD PTR [ebp+0x8],0x0
1005d665:	je     0x1005d668
1005d667:	inc    ebx
1005d668:	mov    eax,ds:0x1007f1f4
1005d66d:	mov    ecx,eax
1005d66f:	sub    ecx,DWORD PTR ds:0x1007f1f8
1005d675:	cmp    ebx,ecx
1005d677:	jge    0x1005d686
1005d679:	xor    eax,eax
1005d67b:	lea    edi,[ebp-0x20]
1005d67e:	stos   DWORD PTR es:[edi],eax
1005d67f:	stos   DWORD PTR es:[edi],eax
1005d680:	stos   DWORD PTR es:[edi],eax
1005d681:	jmp    0x1005d893
1005d686:	cmp    ebx,eax
1005d688:	jg     0x1005d89d
1005d68e:	sub    eax,DWORD PTR [ebp-0x10]
1005d691:	lea    esi,[ebp-0x2c]
1005d694:	mov    ecx,eax
1005d696:	lea    edi,[ebp-0x20]
1005d699:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005d69a:	cdq    
1005d69b:	and    edx,0x1f
1005d69e:	add    eax,edx
1005d6a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005d6a1:	mov    edx,ecx
1005d6a3:	sar    eax,0x5
1005d6a6:	and    edx,0x8000001f
1005d6ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005d6ad:	jns    0x1005d6b4
1005d6af:	dec    edx
1005d6b0:	or     edx,0xffffffe0
1005d6b3:	inc    edx
1005d6b4:	and    DWORD PTR [ebp-0xc],0x0
1005d6b8:	and    DWORD PTR [ebp+0x8],0x0
1005d6bc:	or     edi,0xffffffff
1005d6bf:	mov    ecx,edx
1005d6c1:	shl    edi,cl
1005d6c3:	mov    DWORD PTR [ebp-0x4],0x20
1005d6ca:	sub    DWORD PTR [ebp-0x4],edx
1005d6cd:	not    edi
1005d6cf:	mov    ebx,DWORD PTR [ebp+0x8]
1005d6d2:	lea    ebx,[ebp+ebx*4-0x20]
1005d6d6:	mov    esi,DWORD PTR [ebx]
1005d6d8:	mov    ecx,esi
1005d6da:	and    ecx,edi
1005d6dc:	mov    DWORD PTR [ebp-0x10],ecx
1005d6df:	mov    ecx,edx
1005d6e1:	shr    esi,cl
1005d6e3:	mov    ecx,DWORD PTR [ebp-0x4]
1005d6e6:	or     esi,DWORD PTR [ebp-0xc]
1005d6e9:	mov    DWORD PTR [ebx],esi
1005d6eb:	mov    esi,DWORD PTR [ebp-0x10]
1005d6ee:	shl    esi,cl
1005d6f0:	inc    DWORD PTR [ebp+0x8]
1005d6f3:	cmp    DWORD PTR [ebp+0x8],0x3
1005d6f7:	mov    DWORD PTR [ebp-0xc],esi
1005d6fa:	jl     0x1005d6cf
1005d6fc:	mov    esi,eax
1005d6fe:	push   0x2
1005d700:	shl    esi,0x2
1005d703:	lea    ecx,[ebp-0x18]
1005d706:	pop    edx
1005d707:	sub    ecx,esi
1005d709:	cmp    edx,eax
1005d70b:	jl     0x1005d715
1005d70d:	mov    esi,DWORD PTR [ecx]
1005d70f:	mov    DWORD PTR [ebp+edx*4-0x20],esi
1005d713:	jmp    0x1005d71a
1005d715:	and    DWORD PTR [ebp+edx*4-0x20],0x0
1005d71a:	dec    edx
1005d71b:	sub    ecx,0x4
1005d71e:	test   edx,edx
1005d720:	jge    0x1005d709
1005d722:	mov    esi,DWORD PTR ds:0x1007f1f8
1005d728:	dec    esi
1005d729:	lea    ecx,[esi+0x1]
1005d72c:	mov    eax,ecx
1005d72e:	cdq    
1005d72f:	and    edx,0x1f
1005d732:	add    eax,edx
1005d734:	sar    eax,0x5
1005d737:	mov    edx,ecx
1005d739:	and    edx,0x8000001f
1005d73f:	mov    DWORD PTR [ebp-0xc],eax
1005d742:	jns    0x1005d749
1005d744:	dec    edx
1005d745:	or     edx,0xffffffe0
1005d748:	inc    edx
1005d749:	push   0x1f
1005d74b:	pop    ecx
1005d74c:	sub    ecx,edx
1005d74e:	xor    edx,edx
1005d750:	inc    edx
1005d751:	shl    edx,cl
1005d753:	lea    ebx,[ebp+eax*4-0x20]
1005d757:	mov    DWORD PTR [ebp-0x10],ecx
1005d75a:	test   DWORD PTR [ebx],edx
1005d75c:	je     0x1005d7e4
1005d762:	or     edx,0xffffffff
1005d765:	shl    edx,cl
1005d767:	not    edx
1005d769:	test   DWORD PTR [ebp+eax*4-0x20],edx
1005d76d:	jmp    0x1005d774
1005d76f:	cmp    DWORD PTR [ebp+eax*4-0x20],0x0
1005d774:	jne    0x1005d77e
1005d776:	inc    eax
1005d777:	cmp    eax,0x3
1005d77a:	jl     0x1005d76f
1005d77c:	jmp    0x1005d7e4
1005d77e:	mov    eax,esi
1005d780:	cdq    
1005d781:	push   0x1f
1005d783:	pop    ecx
1005d784:	and    edx,ecx
1005d786:	add    eax,edx
1005d788:	sar    eax,0x5
1005d78b:	and    esi,0x8000001f
1005d791:	jns    0x1005d798
1005d793:	dec    esi
1005d794:	or     esi,0xffffffe0
1005d797:	inc    esi
1005d798:	and    DWORD PTR [ebp+0x8],0x0
1005d79c:	xor    edx,edx
1005d79e:	sub    ecx,esi
1005d7a0:	inc    edx
1005d7a1:	shl    edx,cl
1005d7a3:	lea    ecx,[ebp+eax*4-0x20]
1005d7a7:	mov    esi,DWORD PTR [ecx]
1005d7a9:	lea    edi,[esi+edx*1]
1005d7ac:	cmp    edi,esi
1005d7ae:	jb     0x1005d7b4
1005d7b0:	cmp    edi,edx
1005d7b2:	jae    0x1005d7bb
1005d7b4:	mov    DWORD PTR [ebp+0x8],0x1
1005d7bb:	mov    DWORD PTR [ecx],edi
1005d7bd:	mov    ecx,DWORD PTR [ebp+0x8]
1005d7c0:	jmp    0x1005d7e1
1005d7c2:	test   ecx,ecx
1005d7c4:	je     0x1005d7e4
1005d7c6:	lea    ecx,[ebp+eax*4-0x20]
1005d7ca:	mov    edx,DWORD PTR [ecx]
1005d7cc:	lea    esi,[edx+0x1]
1005d7cf:	xor    edi,edi
1005d7d1:	cmp    esi,edx
1005d7d3:	jb     0x1005d7da
1005d7d5:	cmp    esi,0x1
1005d7d8:	jae    0x1005d7dd
1005d7da:	xor    edi,edi
1005d7dc:	inc    edi
1005d7dd:	mov    DWORD PTR [ecx],esi
1005d7df:	mov    ecx,edi
1005d7e1:	dec    eax
1005d7e2:	jns    0x1005d7c2
1005d7e4:	mov    ecx,DWORD PTR [ebp-0x10]
1005d7e7:	or     eax,0xffffffff
1005d7ea:	shl    eax,cl
1005d7ec:	and    DWORD PTR [ebx],eax
1005d7ee:	mov    eax,DWORD PTR [ebp-0xc]
1005d7f1:	inc    eax
1005d7f2:	cmp    eax,0x3
1005d7f5:	jge    0x1005d804
1005d7f7:	push   0x3
1005d7f9:	pop    ecx
1005d7fa:	lea    edi,[ebp+eax*4-0x20]
1005d7fe:	sub    ecx,eax
1005d800:	xor    eax,eax
1005d802:	rep stos DWORD PTR es:[edi],eax
1005d804:	mov    ecx,DWORD PTR ds:0x1007f1fc
1005d80a:	inc    ecx
1005d80b:	mov    eax,ecx
1005d80d:	cdq    
1005d80e:	and    edx,0x1f
1005d811:	add    eax,edx
1005d813:	mov    edx,ecx
1005d815:	sar    eax,0x5
1005d818:	and    edx,0x8000001f
1005d81e:	jns    0x1005d825
1005d820:	dec    edx
1005d821:	or     edx,0xffffffe0
1005d824:	inc    edx
1005d825:	and    DWORD PTR [ebp-0xc],0x0
1005d829:	and    DWORD PTR [ebp+0x8],0x0
1005d82d:	or     edi,0xffffffff
1005d830:	mov    ecx,edx
1005d832:	shl    edi,cl
1005d834:	mov    DWORD PTR [ebp-0x4],0x20
1005d83b:	sub    DWORD PTR [ebp-0x4],edx
1005d83e:	not    edi
1005d840:	mov    ebx,DWORD PTR [ebp+0x8]
1005d843:	lea    ebx,[ebp+ebx*4-0x20]
1005d847:	mov    esi,DWORD PTR [ebx]
1005d849:	mov    ecx,esi
1005d84b:	and    ecx,edi
1005d84d:	mov    DWORD PTR [ebp-0x10],ecx
1005d850:	mov    ecx,edx
1005d852:	shr    esi,cl
1005d854:	mov    ecx,DWORD PTR [ebp-0x4]
1005d857:	or     esi,DWORD PTR [ebp-0xc]
1005d85a:	mov    DWORD PTR [ebx],esi
1005d85c:	mov    esi,DWORD PTR [ebp-0x10]
1005d85f:	shl    esi,cl
1005d861:	inc    DWORD PTR [ebp+0x8]
1005d864:	cmp    DWORD PTR [ebp+0x8],0x3
1005d868:	mov    DWORD PTR [ebp-0xc],esi
1005d86b:	jl     0x1005d840
1005d86d:	mov    esi,eax
1005d86f:	push   0x2
1005d871:	shl    esi,0x2
1005d874:	lea    ecx,[ebp-0x18]
1005d877:	pop    edx
1005d878:	sub    ecx,esi
1005d87a:	cmp    edx,eax
1005d87c:	jl     0x1005d886
1005d87e:	mov    esi,DWORD PTR [ecx]
1005d880:	mov    DWORD PTR [ebp+edx*4-0x20],esi
1005d884:	jmp    0x1005d88b
1005d886:	and    DWORD PTR [ebp+edx*4-0x20],0x0
1005d88b:	dec    edx
1005d88c:	sub    ecx,0x4
1005d88f:	test   edx,edx
1005d891:	jge    0x1005d87a
1005d893:	push   0x2
1005d895:	xor    ebx,ebx
1005d897:	pop    eax
1005d898:	jmp    0x1005d9f7
1005d89d:	cmp    ebx,DWORD PTR ds:0x1007f1f0
1005d8a3:	mov    ecx,DWORD PTR ds:0x1007f1fc
1005d8a9:	jl     0x1005d95c
1005d8af:	xor    eax,eax
1005d8b1:	lea    edi,[ebp-0x20]
1005d8b4:	stos   DWORD PTR es:[edi],eax
1005d8b5:	stos   DWORD PTR es:[edi],eax
1005d8b6:	stos   DWORD PTR es:[edi],eax
1005d8b7:	or     DWORD PTR [ebp-0x20],0x80000000
1005d8be:	mov    eax,ecx
1005d8c0:	cdq    
1005d8c1:	and    edx,0x1f
1005d8c4:	add    eax,edx
1005d8c6:	mov    edx,ecx
1005d8c8:	sar    eax,0x5
1005d8cb:	and    edx,0x8000001f
1005d8d1:	jns    0x1005d8d8
1005d8d3:	dec    edx
1005d8d4:	or     edx,0xffffffe0
1005d8d7:	inc    edx
1005d8d8:	and    DWORD PTR [ebp-0xc],0x0
1005d8dc:	and    DWORD PTR [ebp+0x8],0x0
1005d8e0:	or     edi,0xffffffff
1005d8e3:	mov    ecx,edx
1005d8e5:	shl    edi,cl
1005d8e7:	mov    DWORD PTR [ebp-0x4],0x20
1005d8ee:	sub    DWORD PTR [ebp-0x4],edx
1005d8f1:	not    edi
1005d8f3:	mov    ebx,DWORD PTR [ebp+0x8]
1005d8f6:	lea    ebx,[ebp+ebx*4-0x20]
1005d8fa:	mov    esi,DWORD PTR [ebx]
1005d8fc:	mov    ecx,esi
1005d8fe:	and    ecx,edi
1005d900:	mov    DWORD PTR [ebp-0x10],ecx
1005d903:	mov    ecx,edx
1005d905:	shr    esi,cl
1005d907:	mov    ecx,DWORD PTR [ebp-0x4]
1005d90a:	or     esi,DWORD PTR [ebp-0xc]
1005d90d:	mov    DWORD PTR [ebx],esi
1005d90f:	mov    esi,DWORD PTR [ebp-0x10]
1005d912:	shl    esi,cl
1005d914:	inc    DWORD PTR [ebp+0x8]
1005d917:	cmp    DWORD PTR [ebp+0x8],0x3
1005d91b:	mov    DWORD PTR [ebp-0xc],esi
1005d91e:	jl     0x1005d8f3
1005d920:	mov    esi,eax
1005d922:	push   0x2
1005d924:	shl    esi,0x2
1005d927:	lea    ecx,[ebp-0x18]
1005d92a:	pop    edx
1005d92b:	sub    ecx,esi
1005d92d:	cmp    edx,eax
1005d92f:	jl     0x1005d939
1005d931:	mov    esi,DWORD PTR [ecx]
1005d933:	mov    DWORD PTR [ebp+edx*4-0x20],esi
1005d937:	jmp    0x1005d93e
1005d939:	and    DWORD PTR [ebp+edx*4-0x20],0x0
1005d93e:	dec    edx
1005d93f:	sub    ecx,0x4
1005d942:	test   edx,edx
1005d944:	jge    0x1005d92d
1005d946:	mov    eax,ds:0x1007f1f0
1005d94b:	mov    ecx,DWORD PTR ds:0x1007f204
1005d951:	lea    ebx,[ecx+eax*1]
1005d954:	xor    eax,eax
1005d956:	inc    eax
1005d957:	jmp    0x1005d9f7
1005d95c:	mov    eax,ds:0x1007f204
1005d961:	and    DWORD PTR [ebp-0x20],0x7fffffff
1005d968:	add    ebx,eax
1005d96a:	mov    eax,ecx
1005d96c:	cdq    
1005d96d:	and    edx,0x1f
1005d970:	add    eax,edx
1005d972:	mov    edx,ecx
1005d974:	sar    eax,0x5
1005d977:	and    edx,0x8000001f
1005d97d:	jns    0x1005d984
1005d97f:	dec    edx
1005d980:	or     edx,0xffffffe0
1005d983:	inc    edx
1005d984:	and    DWORD PTR [ebp-0xc],0x0
1005d988:	and    DWORD PTR [ebp+0x8],0x0
1005d98c:	or     esi,0xffffffff
1005d98f:	mov    ecx,edx
1005d991:	shl    esi,cl
1005d993:	mov    DWORD PTR [ebp-0x4],0x20
1005d99a:	sub    DWORD PTR [ebp-0x4],edx
1005d99d:	not    esi
1005d99f:	mov    ecx,DWORD PTR [ebp+0x8]
1005d9a2:	mov    edi,DWORD PTR [ebp+ecx*4-0x20]
1005d9a6:	mov    ecx,edi
1005d9a8:	and    ecx,esi
1005d9aa:	mov    DWORD PTR [ebp-0x10],ecx
1005d9ad:	mov    ecx,edx
1005d9af:	shr    edi,cl
1005d9b1:	mov    ecx,DWORD PTR [ebp+0x8]
1005d9b4:	or     edi,DWORD PTR [ebp-0xc]
1005d9b7:	mov    DWORD PTR [ebp+ecx*4-0x20],edi
1005d9bb:	mov    edi,DWORD PTR [ebp-0x10]
1005d9be:	mov    ecx,DWORD PTR [ebp-0x4]
1005d9c1:	shl    edi,cl
1005d9c3:	inc    DWORD PTR [ebp+0x8]
1005d9c6:	cmp    DWORD PTR [ebp+0x8],0x3
1005d9ca:	mov    DWORD PTR [ebp-0xc],edi
1005d9cd:	jl     0x1005d99f
1005d9cf:	mov    esi,eax
1005d9d1:	push   0x2
1005d9d3:	shl    esi,0x2
1005d9d6:	lea    ecx,[ebp-0x18]
1005d9d9:	pop    edx
1005d9da:	sub    ecx,esi
1005d9dc:	cmp    edx,eax
1005d9de:	jl     0x1005d9e8
1005d9e0:	mov    esi,DWORD PTR [ecx]
1005d9e2:	mov    DWORD PTR [ebp+edx*4-0x20],esi
1005d9e6:	jmp    0x1005d9ed
1005d9e8:	and    DWORD PTR [ebp+edx*4-0x20],0x0
1005d9ed:	dec    edx
1005d9ee:	sub    ecx,0x4
1005d9f1:	test   edx,edx
1005d9f3:	jge    0x1005d9dc
1005d9f5:	xor    eax,eax
1005d9f7:	pop    esi
1005d9f8:	push   0x1f
1005d9fa:	pop    ecx
1005d9fb:	sub    ecx,DWORD PTR ds:0x1007f1fc
1005da01:	shl    ebx,cl
1005da03:	mov    ecx,DWORD PTR [ebp-0x14]
1005da06:	neg    ecx
1005da08:	sbb    ecx,ecx
1005da0a:	and    ecx,0x80000000
1005da10:	or     ebx,ecx
1005da12:	mov    ecx,DWORD PTR ds:0x1007f200
1005da18:	or     ebx,DWORD PTR [ebp-0x20]
1005da1b:	cmp    ecx,0x40
1005da1e:	jne    0x1005da2d
1005da20:	mov    ecx,DWORD PTR [ebp+0xc]
1005da23:	mov    edx,DWORD PTR [ebp-0x1c]
1005da26:	mov    DWORD PTR [ecx+0x4],ebx
1005da29:	mov    DWORD PTR [ecx],edx
1005da2b:	jmp    0x1005da37
1005da2d:	cmp    ecx,0x20
1005da30:	jne    0x1005da37
1005da32:	mov    ecx,DWORD PTR [ebp+0xc]
1005da35:	mov    DWORD PTR [ecx],ebx
1005da37:	pop    edi
1005da38:	pop    ebx
1005da39:	leave  
1005da3a:	ret    
1005da3b:	push   ebp
1005da3c:	mov    ebp,esp
1005da3e:	sub    esp,0x2c
1005da41:	mov    eax,DWORD PTR [ebp+0x8]
1005da44:	movzx  ecx,WORD PTR [eax+0xa]
1005da48:	push   ebx
1005da49:	mov    ebx,ecx
1005da4b:	and    ecx,0x8000
1005da51:	mov    DWORD PTR [ebp-0x14],ecx
1005da54:	mov    ecx,DWORD PTR [eax+0x6]
1005da57:	mov    DWORD PTR [ebp-0x20],ecx
1005da5a:	mov    ecx,DWORD PTR [eax+0x2]
1005da5d:	movzx  eax,WORD PTR [eax]
1005da60:	and    ebx,0x7fff
1005da66:	sub    ebx,0x3fff
1005da6c:	shl    eax,0x10
1005da6f:	cmp    ebx,0xffffc001
1005da75:	push   edi
1005da76:	mov    DWORD PTR [ebp-0x1c],ecx
1005da79:	mov    DWORD PTR [ebp-0x18],eax
1005da7c:	jne    0x1005daa5
1005da7e:	xor    ebx,ebx
1005da80:	xor    eax,eax
1005da82:	cmp    DWORD PTR [ebp+eax*4-0x20],ebx
1005da86:	jne    0x1005da95
1005da88:	inc    eax
1005da89:	cmp    eax,0x3
1005da8c:	jl     0x1005da82
1005da8e:	xor    eax,eax
1005da90:	jmp    0x1005df3a
1005da95:	xor    eax,eax
1005da97:	lea    edi,[ebp-0x20]
1005da9a:	stos   DWORD PTR es:[edi],eax
1005da9b:	stos   DWORD PTR es:[edi],eax
1005da9c:	push   0x2
1005da9e:	stos   DWORD PTR es:[edi],eax
1005da9f:	pop    eax
1005daa0:	jmp    0x1005df3a
1005daa5:	and    DWORD PTR [ebp+0x8],0x0
1005daa9:	push   esi
1005daaa:	lea    esi,[ebp-0x20]
1005daad:	lea    edi,[ebp-0x2c]
1005dab0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005dab1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005dab2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005dab3:	mov    esi,DWORD PTR ds:0x1007f210
1005dab9:	dec    esi
1005daba:	lea    ecx,[esi+0x1]
1005dabd:	mov    eax,ecx
1005dabf:	cdq    
1005dac0:	and    edx,0x1f
1005dac3:	add    eax,edx
1005dac5:	sar    eax,0x5
1005dac8:	mov    edx,ecx
1005daca:	and    edx,0x8000001f
1005dad0:	mov    DWORD PTR [ebp-0x10],ebx
1005dad3:	mov    DWORD PTR [ebp-0xc],eax
1005dad6:	jns    0x1005dadd
1005dad8:	dec    edx
1005dad9:	or     edx,0xffffffe0
1005dadc:	inc    edx
1005dadd:	lea    edi,[ebp+eax*4-0x20]
1005dae1:	push   0x1f
1005dae3:	xor    eax,eax
1005dae5:	pop    ecx
1005dae6:	sub    ecx,edx
1005dae8:	inc    eax
1005dae9:	shl    eax,cl
1005daeb:	mov    DWORD PTR [ebp-0x8],ecx
1005daee:	test   DWORD PTR [edi],eax
1005daf0:	je     0x1005db83
1005daf6:	mov    eax,DWORD PTR [ebp-0xc]
1005daf9:	or     edx,0xffffffff
1005dafc:	shl    edx,cl
1005dafe:	not    edx
1005db00:	test   DWORD PTR [ebp+eax*4-0x20],edx
1005db04:	jmp    0x1005db0b
1005db06:	cmp    DWORD PTR [ebp+eax*4-0x20],0x0
1005db0b:	jne    0x1005db15
1005db0d:	inc    eax
1005db0e:	cmp    eax,0x3
1005db11:	jl     0x1005db06
1005db13:	jmp    0x1005db83
1005db15:	mov    eax,esi
1005db17:	cdq    
1005db18:	push   0x1f
1005db1a:	pop    ecx
1005db1b:	and    edx,ecx
1005db1d:	add    eax,edx
1005db1f:	sar    eax,0x5
1005db22:	and    esi,0x8000001f
1005db28:	jns    0x1005db2f
1005db2a:	dec    esi
1005db2b:	or     esi,0xffffffe0
1005db2e:	inc    esi
1005db2f:	and    DWORD PTR [ebp-0x4],0x0
1005db33:	sub    ecx,esi
1005db35:	xor    edx,edx
1005db37:	inc    edx
1005db38:	shl    edx,cl
1005db3a:	lea    ecx,[ebp+eax*4-0x20]
1005db3e:	mov    esi,DWORD PTR [ecx]
1005db40:	add    esi,edx
1005db42:	mov    DWORD PTR [ebp+0x8],esi
1005db45:	mov    esi,DWORD PTR [ecx]
1005db47:	cmp    DWORD PTR [ebp+0x8],esi
1005db4a:	jb     0x1005db6e
1005db4c:	cmp    DWORD PTR [ebp+0x8],edx
1005db4f:	jmp    0x1005db6c
1005db51:	test   ecx,ecx
1005db53:	je     0x1005db80
1005db55:	and    DWORD PTR [ebp-0x4],0x0
1005db59:	lea    ecx,[ebp+eax*4-0x20]
1005db5d:	mov    edx,DWORD PTR [ecx]
1005db5f:	lea    esi,[edx+0x1]
1005db62:	cmp    esi,edx
1005db64:	mov    DWORD PTR [ebp+0x8],esi
1005db67:	jb     0x1005db6e
1005db69:	cmp    esi,0x1
1005db6c:	jae    0x1005db75
1005db6e:	mov    DWORD PTR [ebp-0x4],0x1
1005db75:	dec    eax
1005db76:	mov    edx,DWORD PTR [ebp+0x8]
1005db79:	mov    DWORD PTR [ecx],edx
1005db7b:	mov    ecx,DWORD PTR [ebp-0x4]
1005db7e:	jns    0x1005db51
1005db80:	mov    DWORD PTR [ebp+0x8],ecx
1005db83:	mov    ecx,DWORD PTR [ebp-0x8]
1005db86:	or     eax,0xffffffff
1005db89:	shl    eax,cl
1005db8b:	and    DWORD PTR [edi],eax
1005db8d:	mov    eax,DWORD PTR [ebp-0xc]
1005db90:	inc    eax
1005db91:	cmp    eax,0x3
1005db94:	jge    0x1005dba3
1005db96:	push   0x3
1005db98:	pop    ecx
1005db99:	lea    edi,[ebp+eax*4-0x20]
1005db9d:	sub    ecx,eax
1005db9f:	xor    eax,eax
1005dba1:	rep stos DWORD PTR es:[edi],eax
1005dba3:	cmp    DWORD PTR [ebp+0x8],0x0
1005dba7:	je     0x1005dbaa
1005dba9:	inc    ebx
1005dbaa:	mov    eax,ds:0x1007f20c
1005dbaf:	mov    ecx,eax
1005dbb1:	sub    ecx,DWORD PTR ds:0x1007f210
1005dbb7:	cmp    ebx,ecx
1005dbb9:	jge    0x1005dbc8
1005dbbb:	xor    eax,eax
1005dbbd:	lea    edi,[ebp-0x20]
1005dbc0:	stos   DWORD PTR es:[edi],eax
1005dbc1:	stos   DWORD PTR es:[edi],eax
1005dbc2:	stos   DWORD PTR es:[edi],eax
1005dbc3:	jmp    0x1005ddd5
1005dbc8:	cmp    ebx,eax
1005dbca:	jg     0x1005dddf
1005dbd0:	sub    eax,DWORD PTR [ebp-0x10]
1005dbd3:	lea    esi,[ebp-0x2c]
1005dbd6:	mov    ecx,eax
1005dbd8:	lea    edi,[ebp-0x20]
1005dbdb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005dbdc:	cdq    
1005dbdd:	and    edx,0x1f
1005dbe0:	add    eax,edx
1005dbe2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005dbe3:	mov    edx,ecx
1005dbe5:	sar    eax,0x5
1005dbe8:	and    edx,0x8000001f
1005dbee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005dbef:	jns    0x1005dbf6
1005dbf1:	dec    edx
1005dbf2:	or     edx,0xffffffe0
1005dbf5:	inc    edx
1005dbf6:	and    DWORD PTR [ebp-0xc],0x0
1005dbfa:	and    DWORD PTR [ebp+0x8],0x0
1005dbfe:	or     edi,0xffffffff
1005dc01:	mov    ecx,edx
1005dc03:	shl    edi,cl
1005dc05:	mov    DWORD PTR [ebp-0x4],0x20
1005dc0c:	sub    DWORD PTR [ebp-0x4],edx
1005dc0f:	not    edi
1005dc11:	mov    ebx,DWORD PTR [ebp+0x8]
1005dc14:	lea    ebx,[ebp+ebx*4-0x20]
1005dc18:	mov    esi,DWORD PTR [ebx]
1005dc1a:	mov    ecx,esi
1005dc1c:	and    ecx,edi
1005dc1e:	mov    DWORD PTR [ebp-0x10],ecx
1005dc21:	mov    ecx,edx
1005dc23:	shr    esi,cl
1005dc25:	mov    ecx,DWORD PTR [ebp-0x4]
1005dc28:	or     esi,DWORD PTR [ebp-0xc]
1005dc2b:	mov    DWORD PTR [ebx],esi
1005dc2d:	mov    esi,DWORD PTR [ebp-0x10]
1005dc30:	shl    esi,cl
1005dc32:	inc    DWORD PTR [ebp+0x8]
1005dc35:	cmp    DWORD PTR [ebp+0x8],0x3
1005dc39:	mov    DWORD PTR [ebp-0xc],esi
1005dc3c:	jl     0x1005dc11
1005dc3e:	mov    esi,eax
1005dc40:	push   0x2
1005dc42:	shl    esi,0x2
1005dc45:	lea    ecx,[ebp-0x18]
1005dc48:	pop    edx
1005dc49:	sub    ecx,esi
1005dc4b:	cmp    edx,eax
1005dc4d:	jl     0x1005dc57
1005dc4f:	mov    esi,DWORD PTR [ecx]
1005dc51:	mov    DWORD PTR [ebp+edx*4-0x20],esi
1005dc55:	jmp    0x1005dc5c
1005dc57:	and    DWORD PTR [ebp+edx*4-0x20],0x0
1005dc5c:	dec    edx
1005dc5d:	sub    ecx,0x4
1005dc60:	test   edx,edx
1005dc62:	jge    0x1005dc4b
1005dc64:	mov    esi,DWORD PTR ds:0x1007f210
1005dc6a:	dec    esi
1005dc6b:	lea    ecx,[esi+0x1]
1005dc6e:	mov    eax,ecx
1005dc70:	cdq    
1005dc71:	and    edx,0x1f
1005dc74:	add    eax,edx
1005dc76:	sar    eax,0x5
1005dc79:	mov    edx,ecx
1005dc7b:	and    edx,0x8000001f
1005dc81:	mov    DWORD PTR [ebp-0xc],eax
1005dc84:	jns    0x1005dc8b
1005dc86:	dec    edx
1005dc87:	or     edx,0xffffffe0
1005dc8a:	inc    edx
1005dc8b:	push   0x1f
1005dc8d:	pop    ecx
1005dc8e:	sub    ecx,edx
1005dc90:	xor    edx,edx
1005dc92:	inc    edx
1005dc93:	shl    edx,cl
1005dc95:	lea    ebx,[ebp+eax*4-0x20]
1005dc99:	mov    DWORD PTR [ebp-0x10],ecx
1005dc9c:	test   DWORD PTR [ebx],edx
1005dc9e:	je     0x1005dd26
1005dca4:	or     edx,0xffffffff
1005dca7:	shl    edx,cl
1005dca9:	not    edx
1005dcab:	test   DWORD PTR [ebp+eax*4-0x20],edx
1005dcaf:	jmp    0x1005dcb6
1005dcb1:	cmp    DWORD PTR [ebp+eax*4-0x20],0x0
1005dcb6:	jne    0x1005dcc0
1005dcb8:	inc    eax
1005dcb9:	cmp    eax,0x3
1005dcbc:	jl     0x1005dcb1
1005dcbe:	jmp    0x1005dd26
1005dcc0:	mov    eax,esi
1005dcc2:	cdq    
1005dcc3:	push   0x1f
1005dcc5:	pop    ecx
1005dcc6:	and    edx,ecx
1005dcc8:	add    eax,edx
1005dcca:	sar    eax,0x5
1005dccd:	and    esi,0x8000001f
1005dcd3:	jns    0x1005dcda
1005dcd5:	dec    esi
1005dcd6:	or     esi,0xffffffe0
1005dcd9:	inc    esi
1005dcda:	and    DWORD PTR [ebp+0x8],0x0
1005dcde:	xor    edx,edx
1005dce0:	sub    ecx,esi
1005dce2:	inc    edx
1005dce3:	shl    edx,cl
1005dce5:	lea    ecx,[ebp+eax*4-0x20]
1005dce9:	mov    esi,DWORD PTR [ecx]
1005dceb:	lea    edi,[esi+edx*1]
1005dcee:	cmp    edi,esi
1005dcf0:	jb     0x1005dcf6
1005dcf2:	cmp    edi,edx
1005dcf4:	jae    0x1005dcfd
1005dcf6:	mov    DWORD PTR [ebp+0x8],0x1
1005dcfd:	mov    DWORD PTR [ecx],edi
1005dcff:	mov    ecx,DWORD PTR [ebp+0x8]
1005dd02:	jmp    0x1005dd23
1005dd04:	test   ecx,ecx
1005dd06:	je     0x1005dd26
1005dd08:	lea    ecx,[ebp+eax*4-0x20]
1005dd0c:	mov    edx,DWORD PTR [ecx]
1005dd0e:	lea    esi,[edx+0x1]
1005dd11:	xor    edi,edi
1005dd13:	cmp    esi,edx
1005dd15:	jb     0x1005dd1c
1005dd17:	cmp    esi,0x1
1005dd1a:	jae    0x1005dd1f
1005dd1c:	xor    edi,edi
1005dd1e:	inc    edi
1005dd1f:	mov    DWORD PTR [ecx],esi
1005dd21:	mov    ecx,edi
1005dd23:	dec    eax
1005dd24:	jns    0x1005dd04
1005dd26:	mov    ecx,DWORD PTR [ebp-0x10]
1005dd29:	or     eax,0xffffffff
1005dd2c:	shl    eax,cl
1005dd2e:	and    DWORD PTR [ebx],eax
1005dd30:	mov    eax,DWORD PTR [ebp-0xc]
1005dd33:	inc    eax
1005dd34:	cmp    eax,0x3
1005dd37:	jge    0x1005dd46
1005dd39:	push   0x3
1005dd3b:	pop    ecx
1005dd3c:	lea    edi,[ebp+eax*4-0x20]
1005dd40:	sub    ecx,eax
1005dd42:	xor    eax,eax
1005dd44:	rep stos DWORD PTR es:[edi],eax
1005dd46:	mov    ecx,DWORD PTR ds:0x1007f214
1005dd4c:	inc    ecx
1005dd4d:	mov    eax,ecx
1005dd4f:	cdq    
1005dd50:	and    edx,0x1f
1005dd53:	add    eax,edx
1005dd55:	mov    edx,ecx
1005dd57:	sar    eax,0x5
1005dd5a:	and    edx,0x8000001f
1005dd60:	jns    0x1005dd67
1005dd62:	dec    edx
1005dd63:	or     edx,0xffffffe0
1005dd66:	inc    edx
1005dd67:	and    DWORD PTR [ebp-0xc],0x0
1005dd6b:	and    DWORD PTR [ebp+0x8],0x0
1005dd6f:	or     edi,0xffffffff
1005dd72:	mov    ecx,edx
1005dd74:	shl    edi,cl
1005dd76:	mov    DWORD PTR [ebp-0x4],0x20
1005dd7d:	sub    DWORD PTR [ebp-0x4],edx
1005dd80:	not    edi
1005dd82:	mov    ebx,DWORD PTR [ebp+0x8]
1005dd85:	lea    ebx,[ebp+ebx*4-0x20]
1005dd89:	mov    esi,DWORD PTR [ebx]
1005dd8b:	mov    ecx,esi
1005dd8d:	and    ecx,edi
1005dd8f:	mov    DWORD PTR [ebp-0x10],ecx
1005dd92:	mov    ecx,edx
1005dd94:	shr    esi,cl
1005dd96:	mov    ecx,DWORD PTR [ebp-0x4]
1005dd99:	or     esi,DWORD PTR [ebp-0xc]
1005dd9c:	mov    DWORD PTR [ebx],esi
1005dd9e:	mov    esi,DWORD PTR [ebp-0x10]
1005dda1:	shl    esi,cl
1005dda3:	inc    DWORD PTR [ebp+0x8]
1005dda6:	cmp    DWORD PTR [ebp+0x8],0x3
1005ddaa:	mov    DWORD PTR [ebp-0xc],esi
1005ddad:	jl     0x1005dd82
1005ddaf:	mov    esi,eax
1005ddb1:	push   0x2
1005ddb3:	shl    esi,0x2
1005ddb6:	lea    ecx,[ebp-0x18]
1005ddb9:	pop    edx
1005ddba:	sub    ecx,esi
1005ddbc:	cmp    edx,eax
1005ddbe:	jl     0x1005ddc8
1005ddc0:	mov    esi,DWORD PTR [ecx]
1005ddc2:	mov    DWORD PTR [ebp+edx*4-0x20],esi
1005ddc6:	jmp    0x1005ddcd
1005ddc8:	and    DWORD PTR [ebp+edx*4-0x20],0x0
1005ddcd:	dec    edx
1005ddce:	sub    ecx,0x4
1005ddd1:	test   edx,edx
1005ddd3:	jge    0x1005ddbc
1005ddd5:	push   0x2
1005ddd7:	xor    ebx,ebx
1005ddd9:	pop    eax
1005ddda:	jmp    0x1005df39
1005dddf:	cmp    ebx,DWORD PTR ds:0x1007f208
1005dde5:	mov    ecx,DWORD PTR ds:0x1007f214
1005ddeb:	jl     0x1005de9e
1005ddf1:	xor    eax,eax
1005ddf3:	lea    edi,[ebp-0x20]
1005ddf6:	stos   DWORD PTR es:[edi],eax
1005ddf7:	stos   DWORD PTR es:[edi],eax
1005ddf8:	stos   DWORD PTR es:[edi],eax
1005ddf9:	or     DWORD PTR [ebp-0x20],0x80000000
1005de00:	mov    eax,ecx
1005de02:	cdq    
1005de03:	and    edx,0x1f
1005de06:	add    eax,edx
1005de08:	mov    edx,ecx
1005de0a:	sar    eax,0x5
1005de0d:	and    edx,0x8000001f
1005de13:	jns    0x1005de1a
1005de15:	dec    edx
1005de16:	or     edx,0xffffffe0
1005de19:	inc    edx
1005de1a:	and    DWORD PTR [ebp-0xc],0x0
1005de1e:	and    DWORD PTR [ebp+0x8],0x0
1005de22:	or     edi,0xffffffff
1005de25:	mov    ecx,edx
1005de27:	shl    edi,cl
1005de29:	mov    DWORD PTR [ebp-0x4],0x20
1005de30:	sub    DWORD PTR [ebp-0x4],edx
1005de33:	not    edi
1005de35:	mov    ebx,DWORD PTR [ebp+0x8]
1005de38:	lea    ebx,[ebp+ebx*4-0x20]
1005de3c:	mov    esi,DWORD PTR [ebx]
1005de3e:	mov    ecx,esi
1005de40:	and    ecx,edi
1005de42:	mov    DWORD PTR [ebp-0x10],ecx
1005de45:	mov    ecx,edx
1005de47:	shr    esi,cl
1005de49:	mov    ecx,DWORD PTR [ebp-0x4]
1005de4c:	or     esi,DWORD PTR [ebp-0xc]
1005de4f:	mov    DWORD PTR [ebx],esi
1005de51:	mov    esi,DWORD PTR [ebp-0x10]
1005de54:	shl    esi,cl
1005de56:	inc    DWORD PTR [ebp+0x8]
1005de59:	cmp    DWORD PTR [ebp+0x8],0x3
1005de5d:	mov    DWORD PTR [ebp-0xc],esi
1005de60:	jl     0x1005de35
1005de62:	mov    esi,eax
1005de64:	push   0x2
1005de66:	shl    esi,0x2
1005de69:	lea    ecx,[ebp-0x18]
1005de6c:	pop    edx
1005de6d:	sub    ecx,esi
1005de6f:	cmp    edx,eax
1005de71:	jl     0x1005de7b
1005de73:	mov    esi,DWORD PTR [ecx]
1005de75:	mov    DWORD PTR [ebp+edx*4-0x20],esi
1005de79:	jmp    0x1005de80
1005de7b:	and    DWORD PTR [ebp+edx*4-0x20],0x0
1005de80:	dec    edx
1005de81:	sub    ecx,0x4
1005de84:	test   edx,edx
1005de86:	jge    0x1005de6f
1005de88:	mov    eax,ds:0x1007f208
1005de8d:	mov    ecx,DWORD PTR ds:0x1007f21c
1005de93:	lea    ebx,[ecx+eax*1]
1005de96:	xor    eax,eax
1005de98:	inc    eax
1005de99:	jmp    0x1005df39
1005de9e:	mov    eax,ds:0x1007f21c
1005dea3:	and    DWORD PTR [ebp-0x20],0x7fffffff
1005deaa:	add    ebx,eax
1005deac:	mov    eax,ecx
1005deae:	cdq    
1005deaf:	and    edx,0x1f
1005deb2:	add    eax,edx
1005deb4:	mov    edx,ecx
1005deb6:	sar    eax,0x5
1005deb9:	and    edx,0x8000001f
1005debf:	jns    0x1005dec6
1005dec1:	dec    edx
1005dec2:	or     edx,0xffffffe0
1005dec5:	inc    edx
1005dec6:	and    DWORD PTR [ebp-0xc],0x0
1005deca:	and    DWORD PTR [ebp+0x8],0x0
1005dece:	or     esi,0xffffffff
1005ded1:	mov    ecx,edx
1005ded3:	shl    esi,cl
1005ded5:	mov    DWORD PTR [ebp-0x4],0x20
1005dedc:	sub    DWORD PTR [ebp-0x4],edx
1005dedf:	not    esi
1005dee1:	mov    ecx,DWORD PTR [ebp+0x8]
1005dee4:	mov    edi,DWORD PTR [ebp+ecx*4-0x20]
1005dee8:	mov    ecx,edi
1005deea:	and    ecx,esi
1005deec:	mov    DWORD PTR [ebp-0x10],ecx
1005deef:	mov    ecx,edx
1005def1:	shr    edi,cl
1005def3:	mov    ecx,DWORD PTR [ebp+0x8]
1005def6:	or     edi,DWORD PTR [ebp-0xc]
1005def9:	mov    DWORD PTR [ebp+ecx*4-0x20],edi
1005defd:	mov    edi,DWORD PTR [ebp-0x10]
1005df00:	mov    ecx,DWORD PTR [ebp-0x4]
1005df03:	shl    edi,cl
1005df05:	inc    DWORD PTR [ebp+0x8]
1005df08:	cmp    DWORD PTR [ebp+0x8],0x3
1005df0c:	mov    DWORD PTR [ebp-0xc],edi
1005df0f:	jl     0x1005dee1
1005df11:	mov    esi,eax
1005df13:	push   0x2
1005df15:	shl    esi,0x2
1005df18:	lea    ecx,[ebp-0x18]
1005df1b:	pop    edx
1005df1c:	sub    ecx,esi
1005df1e:	cmp    edx,eax
1005df20:	jl     0x1005df2a
1005df22:	mov    esi,DWORD PTR [ecx]
1005df24:	mov    DWORD PTR [ebp+edx*4-0x20],esi
1005df28:	jmp    0x1005df2f
1005df2a:	and    DWORD PTR [ebp+edx*4-0x20],0x0
1005df2f:	dec    edx
1005df30:	sub    ecx,0x4
1005df33:	test   edx,edx
1005df35:	jge    0x1005df1e
1005df37:	xor    eax,eax
1005df39:	pop    esi
1005df3a:	push   0x1f
1005df3c:	pop    ecx
1005df3d:	sub    ecx,DWORD PTR ds:0x1007f214
1005df43:	shl    ebx,cl
1005df45:	mov    ecx,DWORD PTR [ebp-0x14]
1005df48:	neg    ecx
1005df4a:	sbb    ecx,ecx
1005df4c:	and    ecx,0x80000000
1005df52:	or     ebx,ecx
1005df54:	mov    ecx,DWORD PTR ds:0x1007f218
1005df5a:	or     ebx,DWORD PTR [ebp-0x20]
1005df5d:	cmp    ecx,0x40
1005df60:	jne    0x1005df6f
1005df62:	mov    ecx,DWORD PTR [ebp+0xc]
1005df65:	mov    edx,DWORD PTR [ebp-0x1c]
1005df68:	mov    DWORD PTR [ecx+0x4],ebx
1005df6b:	mov    DWORD PTR [ecx],edx
1005df6d:	jmp    0x1005df79
1005df6f:	cmp    ecx,0x20
1005df72:	jne    0x1005df79
1005df74:	mov    ecx,DWORD PTR [ebp+0xc]
1005df77:	mov    DWORD PTR [ecx],ebx
1005df79:	pop    edi
1005df7a:	pop    ebx
1005df7b:	leave  
1005df7c:	ret    
1005df7d:	push   ebp
1005df7e:	mov    ebp,esp
1005df80:	sub    esp,0x7c
1005df83:	mov    eax,ds:0x1007e030
1005df88:	xor    eax,ebp
1005df8a:	mov    DWORD PTR [ebp-0x4],eax
1005df8d:	mov    eax,DWORD PTR [ebp+0x8]
1005df90:	push   ebx
1005df91:	xor    ebx,ebx
1005df93:	push   esi
1005df94:	xor    esi,esi
1005df96:	mov    DWORD PTR [ebp-0x7c],eax
1005df99:	mov    eax,DWORD PTR [ebp+0xc]
1005df9c:	inc    esi
1005df9d:	xor    ecx,ecx
1005df9f:	cmp    DWORD PTR [ebp+0x24],ebx
1005dfa2:	push   edi
1005dfa3:	mov    DWORD PTR [ebp-0x70],eax
1005dfa6:	lea    edi,[ebp-0x20]
1005dfa9:	mov    DWORD PTR [ebp-0x74],ebx
1005dfac:	mov    DWORD PTR [ebp-0x68],esi
1005dfaf:	mov    DWORD PTR [ebp-0x4c],ebx
1005dfb2:	mov    DWORD PTR [ebp-0x58],ebx
1005dfb5:	mov    DWORD PTR [ebp-0x5c],ebx
1005dfb8:	mov    DWORD PTR [ebp-0x60],ebx
1005dfbb:	mov    DWORD PTR [ebp-0x64],ebx
1005dfbe:	mov    DWORD PTR [ebp-0x50],ebx
1005dfc1:	mov    DWORD PTR [ebp-0x6c],ebx
1005dfc4:	jne    0x1005dfe5
1005dfc6:	call   0x10046df5
1005dfcb:	push   ebx
1005dfcc:	push   ebx
1005dfcd:	push   ebx
1005dfce:	push   ebx
1005dfcf:	push   ebx
1005dfd0:	mov    DWORD PTR [eax],0x16
1005dfd6:	call   0x100435cc
1005dfdb:	add    esp,0x14
1005dfde:	xor    eax,eax
1005dfe0:	jmp    0x1005e5ff
1005dfe5:	mov    edx,DWORD PTR [ebp+0x10]
1005dfe8:	mov    DWORD PTR [ebp-0x54],edx
1005dfeb:	mov    al,BYTE PTR [edx]
1005dfed:	cmp    al,0x20
1005dfef:	je     0x1005dffd
1005dff1:	cmp    al,0x9
1005dff3:	je     0x1005dffd
1005dff5:	cmp    al,0xa
1005dff7:	je     0x1005dffd
1005dff9:	cmp    al,0xd
1005dffb:	jne    0x1005e000
1005dffd:	inc    edx
1005dffe:	jmp    0x1005dfeb
1005e000:	mov    bl,0x30
1005e002:	mov    al,BYTE PTR [edx]
1005e004:	inc    edx
1005e005:	cmp    ecx,0xb
1005e008:	ja     0x1005e23d
1005e00e:	jmp    DWORD PTR [ecx*4+0x1005e611]
1005e015:	mov    cl,al
1005e017:	sub    cl,0x31
1005e01a:	cmp    cl,0x8
1005e01d:	ja     0x1005e025
1005e01f:	push   0x3
1005e021:	pop    ecx
1005e022:	dec    edx
1005e023:	jmp    0x1005e002
1005e025:	mov    ecx,DWORD PTR [ebp+0x24]
1005e028:	mov    ecx,DWORD PTR [ecx]
1005e02a:	mov    ecx,DWORD PTR [ecx+0xbc]
1005e030:	mov    ecx,DWORD PTR [ecx]
1005e032:	cmp    al,BYTE PTR [ecx]
1005e034:	jne    0x1005e03b
1005e036:	push   0x5
1005e038:	pop    ecx
1005e039:	jmp    0x1005e002
1005e03b:	movsx  eax,al
1005e03e:	sub    eax,0x2b
1005e041:	je     0x1005e060
1005e043:	dec    eax
1005e044:	dec    eax
1005e045:	je     0x1005e054
1005e047:	sub    eax,0x3
1005e04a:	jne    0x1005e1db
1005e050:	mov    ecx,esi
1005e052:	jmp    0x1005e002
1005e054:	push   0x2
1005e056:	pop    ecx
1005e057:	mov    DWORD PTR [ebp-0x74],0x8000
1005e05e:	jmp    0x1005e002
1005e060:	and    DWORD PTR [ebp-0x74],0x0
1005e064:	push   0x2
1005e066:	pop    ecx
1005e067:	jmp    0x1005e002
1005e069:	mov    cl,al
1005e06b:	sub    cl,0x31
1005e06e:	cmp    cl,0x8
1005e071:	mov    DWORD PTR [ebp-0x58],esi
1005e074:	jbe    0x1005e01f
1005e076:	mov    ecx,DWORD PTR [ebp+0x24]
1005e079:	mov    ecx,DWORD PTR [ecx]
1005e07b:	mov    ecx,DWORD PTR [ecx+0xbc]
1005e081:	mov    ecx,DWORD PTR [ecx]
1005e083:	cmp    al,BYTE PTR [ecx]
1005e085:	jne    0x1005e08b
1005e087:	push   0x4
1005e089:	jmp    0x1005e038
1005e08b:	cmp    al,0x2b
1005e08d:	je     0x1005e0b7
1005e08f:	cmp    al,0x2d
1005e091:	je     0x1005e0b7
1005e093:	cmp    al,bl
1005e095:	je     0x1005e050
1005e097:	cmp    al,0x43
1005e099:	jle    0x1005e1db
1005e09f:	cmp    al,0x45
1005e0a1:	jle    0x1005e0b3
1005e0a3:	cmp    al,0x63
1005e0a5:	jle    0x1005e1db
1005e0ab:	cmp    al,0x65
1005e0ad:	jg     0x1005e1db
1005e0b3:	push   0x6
1005e0b5:	jmp    0x1005e038
1005e0b7:	dec    edx
1005e0b8:	push   0xb
1005e0ba:	jmp    0x1005e038
1005e0bf:	mov    cl,al
1005e0c1:	sub    cl,0x31
1005e0c4:	cmp    cl,0x8
1005e0c7:	jbe    0x1005e01f
1005e0cd:	mov    ecx,DWORD PTR [ebp+0x24]
1005e0d0:	mov    ecx,DWORD PTR [ecx]
1005e0d2:	mov    ecx,DWORD PTR [ecx+0xbc]
1005e0d8:	mov    ecx,DWORD PTR [ecx]
1005e0da:	cmp    al,BYTE PTR [ecx]
1005e0dc:	je     0x1005e036
1005e0e2:	cmp    al,bl
1005e0e4:	je     0x1005e050
1005e0ea:	mov    edx,DWORD PTR [ebp-0x54]
1005e0ed:	jmp    0x1005e206
1005e0f2:	mov    DWORD PTR [ebp-0x58],esi
1005e0f5:	jmp    0x1005e111
1005e0f7:	cmp    al,0x39
1005e0f9:	jg     0x1005e115
1005e0fb:	cmp    DWORD PTR [ebp-0x4c],0x19
1005e0ff:	jae    0x1005e10b
1005e101:	inc    DWORD PTR [ebp-0x4c]
1005e104:	sub    al,bl
1005e106:	mov    BYTE PTR [edi],al
1005e108:	inc    edi
1005e109:	jmp    0x1005e10e
1005e10b:	inc    DWORD PTR [ebp-0x50]
1005e10e:	mov    al,BYTE PTR [edx]
1005e110:	inc    edx
1005e111:	cmp    al,bl
1005e113:	jge    0x1005e0f7
1005e115:	mov    ecx,DWORD PTR [ebp+0x24]
1005e118:	mov    ecx,DWORD PTR [ecx]
1005e11a:	mov    ecx,DWORD PTR [ecx+0xbc]
1005e120:	mov    ecx,DWORD PTR [ecx]
1005e122:	cmp    al,BYTE PTR [ecx]
1005e124:	je     0x1005e087
1005e12a:	cmp    al,0x2b
1005e12c:	je     0x1005e0b7
1005e12e:	cmp    al,0x2d
1005e130:	je     0x1005e0b7
1005e132:	jmp    0x1005e097
1005e137:	cmp    DWORD PTR [ebp-0x4c],0x0
1005e13b:	mov    DWORD PTR [ebp-0x58],esi
1005e13e:	mov    DWORD PTR [ebp-0x5c],esi
1005e141:	jne    0x1005e169
1005e143:	jmp    0x1005e14b
1005e145:	dec    DWORD PTR [ebp-0x50]
1005e148:	mov    al,BYTE PTR [edx]
1005e14a:	inc    edx
1005e14b:	cmp    al,bl
1005e14d:	je     0x1005e145
1005e14f:	jmp    0x1005e169
1005e151:	cmp    al,0x39
1005e153:	jg     0x1005e12a
1005e155:	cmp    DWORD PTR [ebp-0x4c],0x19
1005e159:	jae    0x1005e166
1005e15b:	inc    DWORD PTR [ebp-0x4c]
1005e15e:	sub    al,bl
1005e160:	mov    BYTE PTR [edi],al
1005e162:	inc    edi
1005e163:	dec    DWORD PTR [ebp-0x50]
1005e166:	mov    al,BYTE PTR [edx]
1005e168:	inc    edx
1005e169:	cmp    al,bl
1005e16b:	jge    0x1005e151
1005e16d:	jmp    0x1005e12a
1005e16f:	sub    al,bl
1005e171:	cmp    al,0x9
1005e173:	mov    DWORD PTR [ebp-0x5c],esi
1005e176:	ja     0x1005e0ea
1005e17c:	push   0x4
1005e17e:	jmp    0x1005e021
1005e183:	lea    ecx,[edx-0x2]
1005e186:	mov    DWORD PTR [ebp-0x54],ecx
1005e189:	mov    cl,al
1005e18b:	sub    cl,0x31
1005e18e:	cmp    cl,0x8
1005e191:	ja     0x1005e19a
1005e193:	push   0x9
1005e195:	jmp    0x1005e021
1005e19a:	movsx  eax,al
1005e19d:	sub    eax,0x2b
1005e1a0:	je     0x1005e1c2
1005e1a2:	dec    eax
1005e1a3:	dec    eax
1005e1a4:	je     0x1005e1b6
1005e1a6:	sub    eax,0x3
1005e1a9:	jne    0x1005e0ea
1005e1af:	push   0x8
1005e1b1:	jmp    0x1005e038
1005e1b6:	or     DWORD PTR [ebp-0x68],0xffffffff
1005e1ba:	push   0x7
1005e1bc:	pop    ecx
1005e1bd:	jmp    0x1005e002
1005e1c2:	push   0x7
1005e1c4:	jmp    0x1005e038
1005e1c9:	mov    DWORD PTR [ebp-0x60],esi
1005e1cc:	jmp    0x1005e1d1
1005e1ce:	mov    al,BYTE PTR [edx]
1005e1d0:	inc    edx
1005e1d1:	cmp    al,bl
1005e1d3:	je     0x1005e1ce
1005e1d5:	sub    al,0x31
1005e1d7:	cmp    al,0x8
1005e1d9:	jbe    0x1005e193
1005e1db:	dec    edx
1005e1dc:	jmp    0x1005e206
1005e1de:	mov    cl,al
1005e1e0:	sub    cl,0x31
1005e1e3:	cmp    cl,0x8
1005e1e6:	jbe    0x1005e193
1005e1e8:	cmp    al,bl
1005e1ea:	jmp    0x1005e1a9
1005e1ec:	cmp    DWORD PTR [ebp+0x20],0x0
1005e1f0:	je     0x1005e239
1005e1f2:	movsx  eax,al
1005e1f5:	sub    eax,0x2b
1005e1f8:	lea    ecx,[edx-0x1]
1005e1fb:	mov    DWORD PTR [ebp-0x54],ecx
1005e1fe:	je     0x1005e1c2
1005e200:	dec    eax
1005e201:	dec    eax
1005e202:	je     0x1005e1b6
1005e204:	mov    edx,ecx
1005e206:	cmp    DWORD PTR [ebp-0x58],0x0
1005e20a:	mov    eax,DWORD PTR [ebp-0x70]
1005e20d:	mov    DWORD PTR [eax],edx
1005e20f:	je     0x1005e5ba
1005e215:	push   0x18
1005e217:	pop    eax
1005e218:	cmp    DWORD PTR [ebp-0x4c],eax
1005e21b:	jbe    0x1005e22d
1005e21d:	cmp    BYTE PTR [ebp-0x9],0x5
1005e221:	jl     0x1005e226
1005e223:	inc    BYTE PTR [ebp-0x9]
1005e226:	dec    edi
1005e227:	inc    DWORD PTR [ebp-0x50]
1005e22a:	mov    DWORD PTR [ebp-0x4c],eax
1005e22d:	cmp    DWORD PTR [ebp-0x4c],0x0
1005e231:	jbe    0x1005e5e1
1005e237:	jmp    0x1005e292
1005e239:	push   0xa
1005e23b:	pop    ecx
1005e23c:	dec    edx
1005e23d:	cmp    ecx,0xa
1005e240:	jne    0x1005e002
1005e246:	jmp    0x1005e206
1005e248:	mov    DWORD PTR [ebp-0x60],esi
1005e24b:	xor    ecx,ecx
1005e24d:	jmp    0x1005e268
1005e24f:	cmp    al,0x39
1005e251:	jg     0x1005e273
1005e253:	imul   ecx,ecx,0xa
1005e256:	movsx  esi,al
1005e259:	lea    ecx,[ecx+esi*1-0x30]
1005e25d:	cmp    ecx,0x1450
1005e263:	jg     0x1005e26e
1005e265:	mov    al,BYTE PTR [edx]
1005e267:	inc    edx
1005e268:	cmp    al,bl
1005e26a:	jge    0x1005e24f
1005e26c:	jmp    0x1005e273
1005e26e:	mov    ecx,0x1451
1005e273:	mov    DWORD PTR [ebp-0x64],ecx
1005e276:	jmp    0x1005e283
1005e278:	cmp    al,0x39
1005e27a:	jg     0x1005e1db
1005e280:	mov    al,BYTE PTR [edx]
1005e282:	inc    edx
1005e283:	cmp    al,bl
1005e285:	jge    0x1005e278
1005e287:	jmp    0x1005e1db
1005e28c:	dec    DWORD PTR [ebp-0x4c]
1005e28f:	inc    DWORD PTR [ebp-0x50]
1005e292:	dec    edi
1005e293:	cmp    BYTE PTR [edi],0x0
1005e296:	je     0x1005e28c
1005e298:	lea    eax,[ebp-0x3c]
1005e29b:	push   eax
1005e29c:	push   DWORD PTR [ebp-0x4c]
1005e29f:	lea    eax,[ebp-0x20]
1005e2a2:	push   eax
1005e2a3:	call   0x1005f33a
1005e2a8:	mov    eax,DWORD PTR [ebp-0x64]
1005e2ab:	xor    ecx,ecx
1005e2ad:	add    esp,0xc
1005e2b0:	cmp    DWORD PTR [ebp-0x68],ecx
1005e2b3:	jge    0x1005e2b7
1005e2b5:	neg    eax
1005e2b7:	add    eax,DWORD PTR [ebp-0x50]
1005e2ba:	cmp    DWORD PTR [ebp-0x60],ecx
1005e2bd:	jne    0x1005e2c2
1005e2bf:	add    eax,DWORD PTR [ebp+0x18]
1005e2c2:	cmp    DWORD PTR [ebp-0x5c],ecx
1005e2c5:	jne    0x1005e2ca
1005e2c7:	sub    eax,DWORD PTR [ebp+0x1c]
1005e2ca:	cmp    eax,0x1450
1005e2cf:	jg     0x1005e5c3
1005e2d5:	cmp    eax,0xffffebb0
1005e2da:	jl     0x1005e5da
1005e2e0:	mov    esi,0x1007f220
1005e2e5:	sub    esi,0x60
1005e2e8:	cmp    eax,ecx
1005e2ea:	mov    DWORD PTR [ebp-0x54],eax
1005e2ed:	je     0x1005e5a8
1005e2f3:	jge    0x1005e302
1005e2f5:	neg    eax
1005e2f7:	mov    esi,0x1007f380
1005e2fc:	mov    DWORD PTR [ebp-0x54],eax
1005e2ff:	sub    esi,0x60
1005e302:	cmp    DWORD PTR [ebp+0x14],ecx
1005e305:	jne    0x1005e30b
1005e307:	mov    WORD PTR [ebp-0x3c],cx
1005e30b:	cmp    DWORD PTR [ebp-0x54],ecx
1005e30e:	je     0x1005e5a8
1005e314:	mov    eax,DWORD PTR [ebp-0x54]
1005e317:	sar    DWORD PTR [ebp-0x54],0x3
1005e31b:	add    esi,0x54
1005e31e:	and    eax,0x7
1005e321:	test   eax,eax
1005e323:	mov    DWORD PTR [ebp-0x4c],esi
1005e326:	je     0x1005e59e
1005e32c:	imul   eax,eax,0xc
1005e32f:	add    eax,esi
1005e331:	mov    ebx,eax
1005e333:	cmp    WORD PTR [ebx],0x8000
1005e338:	mov    DWORD PTR [ebp-0x70],ebx
1005e33b:	jb     0x1005e351
1005e33d:	mov    esi,ebx
1005e33f:	lea    edi,[ebp-0x48]
1005e342:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005e343:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005e344:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005e345:	dec    DWORD PTR [ebp-0x46]
1005e348:	mov    esi,DWORD PTR [ebp-0x4c]
1005e34b:	lea    ebx,[ebp-0x48]
1005e34e:	mov    DWORD PTR [ebp-0x70],ebx
1005e351:	movzx  edx,WORD PTR [ebx+0xa]
1005e355:	mov    ecx,DWORD PTR [ebp-0x32]
1005e358:	xor    eax,eax
1005e35a:	mov    DWORD PTR [ebp-0x50],eax
1005e35d:	mov    DWORD PTR [ebp-0x2c],eax
1005e360:	mov    DWORD PTR [ebp-0x28],eax
1005e363:	mov    DWORD PTR [ebp-0x24],eax
1005e366:	mov    eax,edx
1005e368:	mov    edi,0x7fff
1005e36d:	xor    eax,ecx
1005e36f:	and    ecx,edi
1005e371:	and    edx,edi
1005e373:	and    eax,0x8000
1005e378:	cmp    cx,0x7fff
1005e37d:	lea    edi,[edx+ecx*1]
1005e380:	movzx  edi,di
1005e383:	jae    0x1005e584
1005e389:	cmp    dx,0x7fff
1005e38e:	jae    0x1005e584
1005e394:	cmp    di,0xbffd
1005e399:	ja     0x1005e584
1005e39f:	cmp    di,0x3fbf
1005e3a4:	ja     0x1005e3b3
1005e3a6:	xor    eax,eax
1005e3a8:	mov    DWORD PTR [ebp-0x38],eax
1005e3ab:	mov    DWORD PTR [ebp-0x3c],eax
1005e3ae:	jmp    0x1005e59b
1005e3b3:	test   cx,cx
1005e3b6:	jne    0x1005e3d7
1005e3b8:	inc    edi
1005e3b9:	test   DWORD PTR [ebp-0x34],0x7fffffff
1005e3c0:	jne    0x1005e3d7
1005e3c2:	cmp    DWORD PTR [ebp-0x38],0x0
1005e3c6:	jne    0x1005e3d7
1005e3c8:	cmp    DWORD PTR [ebp-0x3c],0x0
1005e3cc:	jne    0x1005e3d7
1005e3ce:	and    WORD PTR [ebp-0x32],cx
1005e3d2:	jmp    0x1005e59e
1005e3d7:	xor    ecx,ecx
1005e3d9:	cmp    dx,cx
1005e3dc:	jne    0x1005e3ff
1005e3de:	inc    edi
1005e3df:	test   DWORD PTR [ebx+0x8],0x7fffffff
1005e3e6:	jne    0x1005e3ff
1005e3e8:	cmp    DWORD PTR [ebx+0x4],ecx
1005e3eb:	jne    0x1005e3ff
1005e3ed:	cmp    DWORD PTR [ebx],ecx
1005e3ef:	jne    0x1005e3ff
1005e3f1:	mov    DWORD PTR [ebp-0x34],ecx
1005e3f4:	mov    DWORD PTR [ebp-0x38],ecx
1005e3f7:	mov    DWORD PTR [ebp-0x3c],ecx
1005e3fa:	jmp    0x1005e59e
1005e3ff:	and    DWORD PTR [ebp-0x68],ecx
1005e402:	lea    esi,[ebp-0x28]
1005e405:	mov    DWORD PTR [ebp-0x58],0x5
1005e40c:	mov    ecx,DWORD PTR [ebp-0x68]
1005e40f:	mov    edx,DWORD PTR [ebp-0x58]
1005e412:	add    ecx,ecx
1005e414:	test   edx,edx
1005e416:	mov    DWORD PTR [ebp-0x64],edx
1005e419:	jle    0x1005e470
1005e41b:	lea    ecx,[ebp+ecx*1-0x3c]
1005e41f:	add    ebx,0x8
1005e422:	mov    DWORD PTR [ebp-0x5c],ecx
1005e425:	mov    DWORD PTR [ebp-0x60],ebx
1005e428:	mov    ecx,DWORD PTR [ebp-0x60]
1005e42b:	mov    edx,DWORD PTR [ebp-0x5c]
1005e42e:	movzx  edx,WORD PTR [edx]
1005e431:	movzx  ecx,WORD PTR [ecx]
1005e434:	and    DWORD PTR [ebp-0x78],0x0
1005e438:	imul   ecx,edx
1005e43b:	mov    edx,DWORD PTR [esi-0x4]
1005e43e:	lea    ebx,[edx+ecx*1]
1005e441:	cmp    ebx,edx
1005e443:	jb     0x1005e449
1005e445:	cmp    ebx,ecx
1005e447:	jae    0x1005e450
1005e449:	mov    DWORD PTR [ebp-0x78],0x1
1005e450:	cmp    DWORD PTR [ebp-0x78],0x0
1005e454:	mov    DWORD PTR [esi-0x4],ebx
1005e457:	je     0x1005e45c
1005e459:	inc    WORD PTR [esi]
1005e45c:	add    DWORD PTR [ebp-0x5c],0x2
1005e460:	sub    DWORD PTR [ebp-0x60],0x2
1005e464:	dec    DWORD PTR [ebp-0x64]
1005e467:	cmp    DWORD PTR [ebp-0x64],0x0
1005e46b:	jg     0x1005e428
1005e46d:	mov    ebx,DWORD PTR [ebp-0x70]
1005e470:	inc    esi
1005e471:	inc    esi
1005e472:	inc    DWORD PTR [ebp-0x68]
1005e475:	dec    DWORD PTR [ebp-0x58]
1005e478:	cmp    DWORD PTR [ebp-0x58],0x0
1005e47c:	jg     0x1005e40c
1005e47e:	add    edi,0xc002
1005e484:	test   di,di
1005e487:	jle    0x1005e4c4
1005e489:	test   DWORD PTR [ebp-0x24],0x80000000
1005e490:	jne    0x1005e4bf
1005e492:	mov    esi,DWORD PTR [ebp-0x28]
1005e495:	mov    ecx,DWORD PTR [ebp-0x2c]
1005e498:	shl    DWORD PTR [ebp-0x2c],1
1005e49b:	shr    ecx,0x1f
1005e49e:	mov    edx,esi
1005e4a0:	add    esi,esi
1005e4a2:	or     esi,ecx
1005e4a4:	mov    ecx,DWORD PTR [ebp-0x24]
1005e4a7:	shr    edx,0x1f
1005e4aa:	add    ecx,ecx
1005e4ac:	or     ecx,edx
1005e4ae:	add    edi,0xffff
1005e4b4:	test   di,di
1005e4b7:	mov    DWORD PTR [ebp-0x28],esi
1005e4ba:	mov    DWORD PTR [ebp-0x24],ecx
1005e4bd:	jg     0x1005e489
1005e4bf:	test   di,di
1005e4c2:	jg     0x1005e512
1005e4c4:	add    edi,0xffff
1005e4ca:	test   di,di
1005e4cd:	jge    0x1005e512
1005e4cf:	mov    ecx,edi
1005e4d1:	neg    ecx
1005e4d3:	movzx  esi,cx
1005e4d6:	add    edi,esi
1005e4d8:	test   BYTE PTR [ebp-0x2c],0x1
1005e4dc:	je     0x1005e4e1
1005e4de:	inc    DWORD PTR [ebp-0x50]
1005e4e1:	mov    ecx,DWORD PTR [ebp-0x24]
1005e4e4:	mov    ebx,DWORD PTR [ebp-0x28]
1005e4e7:	mov    edx,DWORD PTR [ebp-0x28]
1005e4ea:	shr    DWORD PTR [ebp-0x24],1
1005e4ed:	shl    ecx,0x1f
1005e4f0:	shr    ebx,1
1005e4f2:	or     ebx,ecx
1005e4f4:	mov    ecx,DWORD PTR [ebp-0x2c]
1005e4f7:	shl    edx,0x1f
1005e4fa:	shr    ecx,1
1005e4fc:	or     ecx,edx
1005e4fe:	dec    esi
1005e4ff:	mov    DWORD PTR [ebp-0x28],ebx
1005e502:	mov    DWORD PTR [ebp-0x2c],ecx
1005e505:	jne    0x1005e4d8
1005e507:	cmp    DWORD PTR [ebp-0x50],0x0
1005e50b:	je     0x1005e512
1005e50d:	or     WORD PTR [ebp-0x2c],0x1
1005e512:	cmp    WORD PTR [ebp-0x2c],0x8000
1005e518:	ja     0x1005e52b
1005e51a:	mov    ecx,DWORD PTR [ebp-0x2c]
1005e51d:	and    ecx,0x1ffff
1005e523:	cmp    ecx,0x18000
1005e529:	jne    0x1005e55e
1005e52b:	cmp    DWORD PTR [ebp-0x2a],0xffffffff
1005e52f:	jne    0x1005e55b
1005e531:	and    DWORD PTR [ebp-0x2a],0x0
1005e535:	cmp    DWORD PTR [ebp-0x26],0xffffffff
1005e539:	jne    0x1005e556
1005e53b:	and    DWORD PTR [ebp-0x26],0x0
1005e53f:	cmp    WORD PTR [ebp-0x22],0xffff
1005e545:	jne    0x1005e550
1005e547:	mov    WORD PTR [ebp-0x22],0x8000
1005e54d:	inc    edi
1005e54e:	jmp    0x1005e55e
1005e550:	inc    WORD PTR [ebp-0x22]
1005e554:	jmp    0x1005e55e
1005e556:	inc    DWORD PTR [ebp-0x26]
1005e559:	jmp    0x1005e55e
1005e55b:	inc    DWORD PTR [ebp-0x2a]
1005e55e:	cmp    di,0x7fff
1005e563:	mov    esi,DWORD PTR [ebp-0x4c]
1005e566:	jae    0x1005e584
1005e568:	mov    cx,WORD PTR [ebp-0x2a]
1005e56c:	mov    WORD PTR [ebp-0x3c],cx
1005e570:	mov    ecx,DWORD PTR [ebp-0x28]
1005e573:	mov    DWORD PTR [ebp-0x3a],ecx
1005e576:	mov    ecx,DWORD PTR [ebp-0x24]
1005e579:	or     edi,eax
1005e57b:	mov    DWORD PTR [ebp-0x36],ecx
1005e57e:	mov    WORD PTR [ebp-0x32],di
1005e582:	jmp    0x1005e59e
1005e584:	neg    ax
1005e587:	sbb    eax,eax
1005e589:	and    DWORD PTR [ebp-0x38],0x0
1005e58d:	and    eax,0x80000000
1005e592:	add    eax,0x7fff8000
1005e597:	and    DWORD PTR [ebp-0x3c],0x0
1005e59b:	mov    DWORD PTR [ebp-0x34],eax
1005e59e:	cmp    DWORD PTR [ebp-0x54],0x0
1005e5a2:	jne    0x1005e314
1005e5a8:	mov    eax,DWORD PTR [ebp-0x34]
1005e5ab:	movzx  ecx,WORD PTR [ebp-0x3c]
1005e5af:	mov    esi,DWORD PTR [ebp-0x3a]
1005e5b2:	mov    edx,DWORD PTR [ebp-0x36]
1005e5b5:	shr    eax,0x10
1005e5b8:	jmp    0x1005e5e9
1005e5ba:	mov    DWORD PTR [ebp-0x6c],0x4
1005e5c1:	jmp    0x1005e5e1
1005e5c3:	xor    esi,esi
1005e5c5:	mov    eax,0x7fff
1005e5ca:	mov    edx,0x80000000
1005e5cf:	xor    ecx,ecx
1005e5d1:	mov    DWORD PTR [ebp-0x6c],0x2
1005e5d8:	jmp    0x1005e5e9
1005e5da:	mov    DWORD PTR [ebp-0x6c],0x1
1005e5e1:	xor    ecx,ecx
1005e5e3:	xor    eax,eax
1005e5e5:	xor    edx,edx
1005e5e7:	xor    esi,esi
1005e5e9:	mov    edi,DWORD PTR [ebp-0x7c]
1005e5ec:	or     eax,DWORD PTR [ebp-0x74]
1005e5ef:	mov    WORD PTR [edi],cx
1005e5f2:	mov    WORD PTR [edi+0xa],ax
1005e5f6:	mov    eax,DWORD PTR [ebp-0x6c]
1005e5f9:	mov    DWORD PTR [edi+0x2],esi
1005e5fc:	mov    DWORD PTR [edi+0x6],edx
1005e5ff:	mov    ecx,DWORD PTR [ebp-0x4]
1005e602:	pop    edi
1005e603:	pop    esi
1005e604:	xor    ecx,ebp
1005e606:	pop    ebx
1005e607:	call   0x100430d7
1005e60c:	leave  
1005e60d:	ret    
1005e60e:	lea    ecx,[ecx+0x0]
1005e611:	adc    eax,0x691005e0
1005e616:	loopne 0x1005e61d
1005e618:	adc    BYTE PTR [edi-0xdeffa20],bh
1005e61e:	loopne 0x1005e625
1005e620:	adc    BYTE PTR [edi],dh
1005e622:	loope  0x1005e629
1005e624:	adc    BYTE PTR [edi-0x1f],ch
1005e627:	add    eax,0x5e18310
1005e62c:	adc    dh,bl
1005e62e:	loope  0x1005e635
1005e630:	adc    cl,cl
1005e632:	loope  0x1005e639
1005e634:	adc    BYTE PTR [eax-0x1e],cl
1005e637:	add    eax,0x5e23d10
1005e63c:	adc    ah,ch
1005e63e:	loope  0x1005e645
1005e640:	adc    BYTE PTR [ebp-0x75],dl
1005e643:	in     al,dx
1005e644:	sub    esp,0x74
1005e647:	mov    eax,ds:0x1007e030
1005e64c:	xor    eax,ebp
1005e64e:	mov    DWORD PTR [ebp-0x4],eax
1005e651:	push   ebx
1005e652:	mov    ebx,DWORD PTR [ebp+0x1c]
1005e655:	push   esi
1005e656:	push   edi
1005e657:	lea    esi,[ebp+0x8]
1005e65a:	lea    edi,[ebp-0x10]
1005e65d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005e65e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005e65f:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
1005e661:	mov    edx,DWORD PTR [ebp-0x8]
1005e664:	mov    ecx,edx
1005e666:	mov    eax,0x8000
1005e66b:	and    ecx,eax
1005e66d:	and    edx,0x7fff
1005e673:	test   cx,cx
1005e676:	mov    DWORD PTR [ebp-0x60],ebx
1005e679:	mov    BYTE PTR [ebp-0x30],0xcc
1005e67d:	mov    BYTE PTR [ebp-0x2f],0xcc
1005e681:	mov    BYTE PTR [ebp-0x2e],0xcc
1005e685:	mov    BYTE PTR [ebp-0x2d],0xcc
1005e689:	mov    BYTE PTR [ebp-0x2c],0xcc
1005e68d:	mov    BYTE PTR [ebp-0x2b],0xcc
1005e691:	mov    BYTE PTR [ebp-0x2a],0xcc
1005e695:	mov    BYTE PTR [ebp-0x29],0xcc
1005e699:	mov    BYTE PTR [ebp-0x28],0xcc
1005e69d:	mov    BYTE PTR [ebp-0x27],0xcc
1005e6a1:	mov    BYTE PTR [ebp-0x26],0xfb
1005e6a5:	mov    BYTE PTR [ebp-0x25],0x3f
1005e6a9:	mov    DWORD PTR [ebp-0x74],0x1
1005e6b0:	mov    DWORD PTR [ebp-0x6c],ecx
1005e6b3:	je     0x1005e6bb
1005e6b5:	mov    BYTE PTR [ebx+0x2],0x2d
1005e6b9:	jmp    0x1005e6bf
1005e6bb:	mov    BYTE PTR [ebx+0x2],0x20
1005e6bf:	test   dx,dx
1005e6c2:	mov    esi,DWORD PTR [ebp-0xc]
1005e6c5:	mov    edi,DWORD PTR [ebp-0x10]
1005e6c8:	jne    0x1005e6f8
1005e6ca:	test   esi,esi
1005e6cc:	jne    0x1005e6f8
1005e6ce:	test   edi,edi
1005e6d0:	jne    0x1005e6f8
1005e6d2:	and    WORD PTR [ebx],di
1005e6d5:	cmp    cx,ax
1005e6d8:	setne  al
1005e6db:	dec    al
1005e6dd:	and    al,0xd
1005e6df:	add    al,0x20
1005e6e1:	mov    BYTE PTR [ebx+0x2],al
1005e6e4:	mov    BYTE PTR [ebx+0x3],0x1
1005e6e8:	mov    BYTE PTR [ebx+0x4],0x30
1005e6ec:	mov    BYTE PTR [ebx+0x5],0x0
1005e6f0:	xor    eax,eax
1005e6f2:	inc    eax
1005e6f3:	jmp    0x1005eec1
1005e6f8:	cmp    dx,0x7fff
1005e6fd:	jne    0x1005e7a1
1005e703:	mov    eax,0x80000000
1005e708:	cmp    esi,eax
1005e70a:	mov    WORD PTR [ebx],0x1
1005e70f:	jne    0x1005e715
1005e711:	test   edi,edi
1005e713:	je     0x1005e724
1005e715:	test   esi,0x40000000
1005e71b:	jne    0x1005e724
1005e71d:	push   0x1006cb60
1005e722:	jmp    0x1005e775
1005e724:	test   cx,cx
1005e727:	je     0x1005e73c
1005e729:	cmp    esi,0xc0000000
1005e72f:	jne    0x1005e73c
1005e731:	test   edi,edi
1005e733:	jne    0x1005e770
1005e735:	push   0x1006cb58
1005e73a:	jmp    0x1005e749
1005e73c:	cmp    esi,eax
1005e73e:	jne    0x1005e770
1005e740:	test   edi,edi
1005e742:	jne    0x1005e770
1005e744:	push   0x1006cb50
1005e749:	lea    eax,[ebx+0x4]
1005e74c:	push   0x16
1005e74e:	push   eax
1005e74f:	call   0x10046e39
1005e754:	add    esp,0xc
1005e757:	xor    esi,esi
1005e759:	test   eax,eax
1005e75b:	je     0x1005e76a
1005e75d:	push   esi
1005e75e:	push   esi
1005e75f:	push   esi
1005e760:	push   esi
1005e761:	push   esi
1005e762:	call   0x100434d0
1005e767:	add    esp,0x14
1005e76a:	mov    BYTE PTR [ebx+0x3],0x5
1005e76e:	jmp    0x1005e79a
1005e770:	push   0x1006cb48
1005e775:	lea    eax,[ebx+0x4]
1005e778:	push   0x16
1005e77a:	push   eax
1005e77b:	call   0x10046e39
1005e780:	add    esp,0xc
1005e783:	xor    esi,esi
1005e785:	test   eax,eax
1005e787:	je     0x1005e796
1005e789:	push   esi
1005e78a:	push   esi
1005e78b:	push   esi
1005e78c:	push   esi
1005e78d:	push   esi
1005e78e:	call   0x100434d0
1005e793:	add    esp,0x14
1005e796:	mov    BYTE PTR [ebx+0x3],0x6
1005e79a:	xor    eax,eax
1005e79c:	jmp    0x1005eec1
1005e7a1:	movzx  ecx,dx
1005e7a4:	mov    ebx,ecx
1005e7a6:	imul   ecx,ecx,0x4d10
1005e7ac:	shr    ebx,0x8
1005e7af:	mov    eax,esi
1005e7b1:	shr    eax,0x18
1005e7b4:	lea    eax,[ebx+eax*2]
1005e7b7:	imul   eax,eax,0x4d
1005e7ba:	lea    eax,[eax+ecx*1-0x134312f4]
1005e7c1:	sar    eax,0x10
1005e7c4:	movzx  ecx,ax
1005e7c7:	movsx  ebx,cx
1005e7ca:	mov    DWORD PTR [ebp-0x4c],ecx
1005e7cd:	xor    eax,eax
1005e7cf:	mov    ecx,0x1007f220
1005e7d4:	neg    ebx
1005e7d6:	sub    ecx,0x60
1005e7d9:	cmp    ebx,eax
1005e7db:	mov    WORD PTR [ebp-0x16],dx
1005e7df:	mov    DWORD PTR [ebp-0x1a],esi
1005e7e2:	mov    DWORD PTR [ebp-0x1e],edi
1005e7e5:	mov    WORD PTR [ebp-0x20],ax
1005e7e9:	mov    DWORD PTR [ebp-0x68],ecx
1005e7ec:	je     0x1005eaa0
1005e7f2:	jge    0x1005e801
1005e7f4:	mov    ecx,0x1007f380
1005e7f9:	neg    ebx
1005e7fb:	sub    ecx,0x60
1005e7fe:	mov    DWORD PTR [ebp-0x68],ecx
1005e801:	cmp    ebx,eax
1005e803:	je     0x1005eaa0
1005e809:	add    DWORD PTR [ebp-0x68],0x54
1005e80d:	mov    ecx,ebx
1005e80f:	and    ecx,0x7
1005e812:	sar    ebx,0x3
1005e815:	test   ecx,ecx
1005e817:	je     0x1005ea96
1005e81d:	imul   ecx,ecx,0xc
1005e820:	add    ecx,DWORD PTR [ebp-0x68]
1005e823:	cmp    WORD PTR [ecx],0x8000
1005e828:	mov    DWORD PTR [ebp-0x64],ecx
1005e82b:	jb     0x1005e840
1005e82d:	mov    esi,ecx
1005e82f:	lea    edi,[ebp-0x3c]
1005e832:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005e833:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005e834:	lea    eax,[ebp-0x3c]
1005e837:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005e838:	dec    DWORD PTR [ebp-0x3a]
1005e83b:	mov    DWORD PTR [ebp-0x64],eax
1005e83e:	mov    ecx,eax
1005e840:	movzx  edi,WORD PTR [ecx+0xa]
1005e844:	mov    edx,DWORD PTR [ebp-0x16]
1005e847:	xor    eax,eax
1005e849:	mov    ecx,edi
1005e84b:	mov    esi,0x7fff
1005e850:	xor    ecx,edx
1005e852:	and    edx,esi
1005e854:	and    edi,esi
1005e856:	mov    DWORD PTR [ebp-0x48],eax
1005e859:	mov    DWORD PTR [ebp-0x10],eax
1005e85c:	mov    DWORD PTR [ebp-0xc],eax
1005e85f:	mov    DWORD PTR [ebp-0x8],eax
1005e862:	and    ecx,0x8000
1005e868:	cmp    dx,si
1005e86b:	lea    eax,[edi+edx*1]
1005e86e:	movzx  eax,ax
1005e871:	jae    0x1005ea7a
1005e877:	cmp    di,si
1005e87a:	jae    0x1005ea7a
1005e880:	cmp    ax,0xbffd
1005e884:	ja     0x1005ea7a
1005e88a:	cmp    ax,0x3fbf
1005e88e:	ja     0x1005e8a0
1005e890:	xor    eax,eax
1005e892:	mov    DWORD PTR [ebp-0x18],eax
1005e895:	mov    DWORD PTR [ebp-0x1c],eax
1005e898:	mov    DWORD PTR [ebp-0x20],eax
1005e89b:	jmp    0x1005ea96
1005e8a0:	xor    esi,esi
1005e8a2:	cmp    dx,si
1005e8a5:	jne    0x1005e8c4
1005e8a7:	inc    eax
1005e8a8:	test   DWORD PTR [ebp-0x18],0x7fffffff
1005e8af:	jne    0x1005e8c4
1005e8b1:	cmp    DWORD PTR [ebp-0x1c],esi
1005e8b4:	jne    0x1005e8c4
1005e8b6:	cmp    DWORD PTR [ebp-0x20],esi
1005e8b9:	jne    0x1005e8c4
1005e8bb:	mov    WORD PTR [ebp-0x16],si
1005e8bf:	jmp    0x1005ea96
1005e8c4:	cmp    di,si
1005e8c7:	jne    0x1005e8ed
1005e8c9:	mov    edx,DWORD PTR [ebp-0x64]
1005e8cc:	inc    eax
1005e8cd:	test   DWORD PTR [edx+0x8],0x7fffffff
1005e8d4:	jne    0x1005e8ed
1005e8d6:	cmp    DWORD PTR [edx+0x4],esi
1005e8d9:	jne    0x1005e8ed
1005e8db:	cmp    DWORD PTR [edx],esi
1005e8dd:	jne    0x1005e8ed
1005e8df:	mov    DWORD PTR [ebp-0x18],esi
1005e8e2:	mov    DWORD PTR [ebp-0x1c],esi
1005e8e5:	mov    DWORD PTR [ebp-0x20],esi
1005e8e8:	jmp    0x1005ea96
1005e8ed:	lea    edi,[ebp-0xc]
1005e8f0:	mov    DWORD PTR [ebp-0x5c],esi
1005e8f3:	mov    DWORD PTR [ebp-0x44],edi
1005e8f6:	mov    DWORD PTR [ebp-0x40],0x5
1005e8fd:	mov    edx,DWORD PTR [ebp-0x5c]
1005e900:	mov    esi,DWORD PTR [ebp-0x40]
1005e903:	add    edx,edx
1005e905:	test   esi,esi
1005e907:	mov    DWORD PTR [ebp-0x50],esi
1005e90a:	jle    0x1005e964
1005e90c:	lea    edx,[ebp+edx*1-0x20]
1005e910:	mov    DWORD PTR [ebp-0x58],edx
1005e913:	mov    edx,DWORD PTR [ebp-0x64]
1005e916:	add    edx,0x8
1005e919:	mov    DWORD PTR [ebp-0x54],edx
1005e91c:	mov    edx,DWORD PTR [ebp-0x58]
1005e91f:	mov    esi,DWORD PTR [ebp-0x54]
1005e922:	movzx  esi,WORD PTR [esi]
1005e925:	movzx  edx,WORD PTR [edx]
1005e928:	mov    edi,DWORD PTR [edi-0x4]
1005e92b:	imul   edx,esi
1005e92e:	and    DWORD PTR [ebp-0x70],0x0
1005e932:	lea    esi,[edi+edx*1]
1005e935:	cmp    esi,edi
1005e937:	jb     0x1005e93d
1005e939:	cmp    esi,edx
1005e93b:	jae    0x1005e944
1005e93d:	mov    DWORD PTR [ebp-0x70],0x1
1005e944:	cmp    DWORD PTR [ebp-0x70],0x0
1005e948:	mov    edi,DWORD PTR [ebp-0x44]
1005e94b:	mov    DWORD PTR [edi-0x4],esi
1005e94e:	je     0x1005e953
1005e950:	inc    WORD PTR [edi]
1005e953:	add    DWORD PTR [ebp-0x58],0x2
1005e957:	sub    DWORD PTR [ebp-0x54],0x2
1005e95b:	dec    DWORD PTR [ebp-0x50]
1005e95e:	cmp    DWORD PTR [ebp-0x50],0x0
1005e962:	jg     0x1005e91c
1005e964:	inc    edi
1005e965:	inc    edi
1005e966:	inc    DWORD PTR [ebp-0x5c]
1005e969:	dec    DWORD PTR [ebp-0x40]
1005e96c:	cmp    DWORD PTR [ebp-0x40],0x0
1005e970:	mov    DWORD PTR [ebp-0x44],edi
1005e973:	jg     0x1005e8fd
1005e975:	add    eax,0xc002
1005e97a:	test   ax,ax
1005e97d:	jle    0x1005e9ba
1005e97f:	test   DWORD PTR [ebp-0x8],0x80000000
1005e986:	jne    0x1005e9b5
1005e988:	mov    edx,DWORD PTR [ebp-0x10]
1005e98b:	mov    edi,DWORD PTR [ebp-0xc]
1005e98e:	mov    esi,DWORD PTR [ebp-0xc]
1005e991:	shl    DWORD PTR [ebp-0x10],1
1005e994:	shr    edx,0x1f
1005e997:	add    edi,edi
1005e999:	or     edi,edx
1005e99b:	mov    edx,DWORD PTR [ebp-0x8]
1005e99e:	shr    esi,0x1f
1005e9a1:	add    edx,edx
1005e9a3:	or     edx,esi
1005e9a5:	add    eax,0xffff
1005e9aa:	test   ax,ax
1005e9ad:	mov    DWORD PTR [ebp-0xc],edi
1005e9b0:	mov    DWORD PTR [ebp-0x8],edx
1005e9b3:	jg     0x1005e97f
1005e9b5:	test   ax,ax
1005e9b8:	jg     0x1005ea0c
1005e9ba:	add    eax,0xffff
1005e9bf:	test   ax,ax
1005e9c2:	jge    0x1005ea0c
1005e9c4:	mov    edx,eax
1005e9c6:	neg    edx
1005e9c8:	movzx  edx,dx
1005e9cb:	mov    DWORD PTR [ebp-0x44],edx
1005e9ce:	add    eax,edx
1005e9d0:	test   BYTE PTR [ebp-0x10],0x1
1005e9d4:	je     0x1005e9d9
1005e9d6:	inc    DWORD PTR [ebp-0x48]
1005e9d9:	mov    edx,DWORD PTR [ebp-0x8]
1005e9dc:	mov    edi,DWORD PTR [ebp-0xc]
1005e9df:	mov    esi,DWORD PTR [ebp-0xc]
1005e9e2:	shr    DWORD PTR [ebp-0x8],1
1005e9e5:	shl    edx,0x1f
1005e9e8:	shr    edi,1
1005e9ea:	or     edi,edx
1005e9ec:	mov    edx,DWORD PTR [ebp-0x10]
1005e9ef:	shl    esi,0x1f
1005e9f2:	shr    edx,1
1005e9f4:	or     edx,esi
1005e9f6:	dec    DWORD PTR [ebp-0x44]
1005e9f9:	mov    DWORD PTR [ebp-0xc],edi
1005e9fc:	mov    DWORD PTR [ebp-0x10],edx
1005e9ff:	jne    0x1005e9d0
1005ea01:	cmp    DWORD PTR [ebp-0x48],0x0
1005ea05:	je     0x1005ea0c
1005ea07:	or     WORD PTR [ebp-0x10],0x1
1005ea0c:	cmp    WORD PTR [ebp-0x10],0x8000
1005ea12:	ja     0x1005ea25
1005ea14:	mov    edx,DWORD PTR [ebp-0x10]
1005ea17:	and    edx,0x1ffff
1005ea1d:	cmp    edx,0x18000
1005ea23:	jne    0x1005ea58
1005ea25:	cmp    DWORD PTR [ebp-0xe],0xffffffff
1005ea29:	jne    0x1005ea55
1005ea2b:	and    DWORD PTR [ebp-0xe],0x0
1005ea2f:	cmp    DWORD PTR [ebp-0xa],0xffffffff
1005ea33:	jne    0x1005ea50
1005ea35:	and    DWORD PTR [ebp-0xa],0x0
1005ea39:	cmp    WORD PTR [ebp-0x6],0xffff
1005ea3f:	jne    0x1005ea4a
1005ea41:	mov    WORD PTR [ebp-0x6],0x8000
1005ea47:	inc    eax
1005ea48:	jmp    0x1005ea58
1005ea4a:	inc    WORD PTR [ebp-0x6]
1005ea4e:	jmp    0x1005ea58
1005ea50:	inc    DWORD PTR [ebp-0xa]
1005ea53:	jmp    0x1005ea58
1005ea55:	inc    DWORD PTR [ebp-0xe]
1005ea58:	cmp    ax,0x7fff
1005ea5c:	jae    0x1005ea7a
1005ea5e:	mov    dx,WORD PTR [ebp-0xe]
1005ea62:	mov    WORD PTR [ebp-0x20],dx
1005ea66:	mov    edx,DWORD PTR [ebp-0xc]
1005ea69:	mov    DWORD PTR [ebp-0x1e],edx
1005ea6c:	mov    edx,DWORD PTR [ebp-0x8]
1005ea6f:	or     eax,ecx
1005ea71:	mov    DWORD PTR [ebp-0x1a],edx
1005ea74:	mov    WORD PTR [ebp-0x16],ax
1005ea78:	jmp    0x1005ea96
1005ea7a:	neg    cx
1005ea7d:	sbb    ecx,ecx
1005ea7f:	and    DWORD PTR [ebp-0x1c],0x0
1005ea83:	and    ecx,0x80000000
1005ea89:	add    ecx,0x7fff8000
1005ea8f:	and    DWORD PTR [ebp-0x20],0x0
1005ea93:	mov    DWORD PTR [ebp-0x18],ecx
1005ea96:	test   ebx,ebx
1005ea98:	jne    0x1005e809
1005ea9e:	xor    eax,eax
1005eaa0:	mov    ecx,DWORD PTR [ebp-0x18]
1005eaa3:	shr    ecx,0x10
1005eaa6:	cmp    cx,0x3fff
1005eaab:	mov    ebx,0x7fff
1005eab0:	jb     0x1005ed00
1005eab6:	mov    esi,DWORD PTR [ebp-0x26]
1005eab9:	inc    DWORD PTR [ebp-0x4c]
1005eabc:	movzx  edx,cx
1005eabf:	mov    ecx,esi
1005eac1:	xor    ecx,edx
1005eac3:	and    edx,ebx
1005eac5:	and    esi,ebx
1005eac7:	and    ecx,0x8000
1005eacd:	cmp    dx,bx
1005ead0:	lea    edi,[esi+edx*1]
1005ead3:	mov    DWORD PTR [ebp-0x58],eax
1005ead6:	mov    DWORD PTR [ebp-0x10],eax
1005ead9:	mov    DWORD PTR [ebp-0xc],eax
1005eadc:	mov    DWORD PTR [ebp-0x8],eax
1005eadf:	movzx  edi,di
1005eae2:	jae    0x1005ece6
1005eae8:	cmp    si,bx
1005eaeb:	jae    0x1005ece6
1005eaf1:	cmp    di,0xbffd
1005eaf6:	ja     0x1005ece6
1005eafc:	cmp    di,0x3fbf
1005eb01:	ja     0x1005eb0b
1005eb03:	mov    DWORD PTR [ebp-0x18],eax
1005eb06:	jmp    0x1005ecfa
1005eb0b:	cmp    dx,ax
1005eb0e:	jne    0x1005eb2d
1005eb10:	inc    edi
1005eb11:	test   DWORD PTR [ebp-0x18],0x7fffffff
1005eb18:	jne    0x1005eb2d
1005eb1a:	cmp    DWORD PTR [ebp-0x1c],eax
1005eb1d:	jne    0x1005eb2d
1005eb1f:	cmp    DWORD PTR [ebp-0x20],eax
1005eb22:	jne    0x1005eb2d
1005eb24:	mov    WORD PTR [ebp-0x16],ax
1005eb28:	jmp    0x1005ed00
1005eb2d:	cmp    si,ax
1005eb30:	jne    0x1005eb46
1005eb32:	inc    edi
1005eb33:	test   DWORD PTR [ebp-0x28],0x7fffffff
1005eb3a:	jne    0x1005eb46
1005eb3c:	cmp    DWORD PTR [ebp-0x2c],eax
1005eb3f:	jne    0x1005eb46
1005eb41:	cmp    DWORD PTR [ebp-0x30],eax
1005eb44:	je     0x1005eb03
1005eb46:	and    DWORD PTR [ebp-0x54],0x0
1005eb4a:	lea    eax,[ebp-0xc]
1005eb4d:	mov    DWORD PTR [ebp-0x40],0x5
1005eb54:	mov    edx,DWORD PTR [ebp-0x54]
1005eb57:	mov    esi,DWORD PTR [ebp-0x40]
1005eb5a:	add    edx,edx
1005eb5c:	test   esi,esi
1005eb5e:	mov    DWORD PTR [ebp-0x50],esi
1005eb61:	jle    0x1005ebb5
1005eb63:	lea    esi,[ebp-0x28]
1005eb66:	lea    edx,[ebp+edx*1-0x20]
1005eb6a:	mov    DWORD PTR [ebp-0x5c],esi
1005eb6d:	mov    DWORD PTR [ebp-0x48],edx
1005eb70:	mov    edx,DWORD PTR [ebp-0x5c]
1005eb73:	mov    esi,DWORD PTR [ebp-0x48]
1005eb76:	movzx  esi,WORD PTR [esi]
1005eb79:	movzx  edx,WORD PTR [edx]
1005eb7c:	and    DWORD PTR [ebp-0x44],0x0
1005eb80:	imul   edx,esi
1005eb83:	mov    esi,DWORD PTR [eax-0x4]
1005eb86:	lea    ebx,[esi+edx*1]
1005eb89:	cmp    ebx,esi
1005eb8b:	jb     0x1005eb91
1005eb8d:	cmp    ebx,edx
1005eb8f:	jae    0x1005eb98
1005eb91:	mov    DWORD PTR [ebp-0x44],0x1
1005eb98:	cmp    DWORD PTR [ebp-0x44],0x0
1005eb9c:	mov    DWORD PTR [eax-0x4],ebx
1005eb9f:	je     0x1005eba4
1005eba1:	inc    WORD PTR [eax]
1005eba4:	add    DWORD PTR [ebp-0x48],0x2
1005eba8:	sub    DWORD PTR [ebp-0x5c],0x2
1005ebac:	dec    DWORD PTR [ebp-0x50]
1005ebaf:	cmp    DWORD PTR [ebp-0x50],0x0
1005ebb3:	jg     0x1005eb70
1005ebb5:	inc    eax
1005ebb6:	inc    eax
1005ebb7:	inc    DWORD PTR [ebp-0x54]
1005ebba:	dec    DWORD PTR [ebp-0x40]
1005ebbd:	cmp    DWORD PTR [ebp-0x40],0x0
1005ebc1:	jg     0x1005eb54
1005ebc3:	add    edi,0xc002
1005ebc9:	xor    eax,eax
1005ebcb:	cmp    di,ax
1005ebce:	jle    0x1005ec0c
1005ebd0:	test   DWORD PTR [ebp-0x8],0x80000000
1005ebd7:	jne    0x1005ec07
1005ebd9:	mov    edx,DWORD PTR [ebp-0x10]
1005ebdc:	mov    ebx,DWORD PTR [ebp-0xc]
1005ebdf:	mov    esi,DWORD PTR [ebp-0xc]
1005ebe2:	shl    DWORD PTR [ebp-0x10],1
1005ebe5:	shr    edx,0x1f
1005ebe8:	add    ebx,ebx
1005ebea:	or     ebx,edx
1005ebec:	mov    edx,DWORD PTR [ebp-0x8]
1005ebef:	shr    esi,0x1f
1005ebf2:	add    edx,edx
1005ebf4:	or     edx,esi
1005ebf6:	add    edi,0xffff
1005ebfc:	cmp    di,ax
1005ebff:	mov    DWORD PTR [ebp-0xc],ebx
1005ec02:	mov    DWORD PTR [ebp-0x8],edx
1005ec05:	jg     0x1005ebd0
1005ec07:	cmp    di,ax
1005ec0a:	jg     0x1005ec5b
1005ec0c:	add    edi,0xffff
1005ec12:	cmp    di,ax
1005ec15:	jge    0x1005ec5b
1005ec17:	mov    eax,edi
1005ec19:	neg    eax
1005ec1b:	movzx  eax,ax
1005ec1e:	add    edi,eax
1005ec20:	test   BYTE PTR [ebp-0x10],0x1
1005ec24:	je     0x1005ec29
1005ec26:	inc    DWORD PTR [ebp-0x58]
1005ec29:	mov    edx,DWORD PTR [ebp-0x8]
1005ec2c:	mov    ebx,DWORD PTR [ebp-0xc]
1005ec2f:	mov    esi,DWORD PTR [ebp-0xc]
1005ec32:	shr    DWORD PTR [ebp-0x8],1
1005ec35:	shl    edx,0x1f
1005ec38:	shr    ebx,1
1005ec3a:	or     ebx,edx
1005ec3c:	mov    edx,DWORD PTR [ebp-0x10]
1005ec3f:	shl    esi,0x1f
1005ec42:	shr    edx,1
1005ec44:	or     edx,esi
1005ec46:	dec    eax
1005ec47:	mov    DWORD PTR [ebp-0xc],ebx
1005ec4a:	mov    DWORD PTR [ebp-0x10],edx
1005ec4d:	jne    0x1005ec20
1005ec4f:	xor    eax,eax
1005ec51:	cmp    DWORD PTR [ebp-0x58],eax
1005ec54:	je     0x1005ec5b
1005ec56:	or     WORD PTR [ebp-0x10],0x1
1005ec5b:	cmp    WORD PTR [ebp-0x10],0x8000
1005ec61:	ja     0x1005ec74
1005ec63:	mov    edx,DWORD PTR [ebp-0x10]
1005ec66:	and    edx,0x1ffff
1005ec6c:	cmp    edx,0x18000
1005ec72:	jne    0x1005eca5
1005ec74:	cmp    DWORD PTR [ebp-0xe],0xffffffff
1005ec78:	jne    0x1005eca2
1005ec7a:	cmp    DWORD PTR [ebp-0xa],0xffffffff
1005ec7e:	mov    DWORD PTR [ebp-0xe],eax
1005ec81:	jne    0x1005ec9d
1005ec83:	cmp    WORD PTR [ebp-0x6],0xffff
1005ec89:	mov    DWORD PTR [ebp-0xa],eax
1005ec8c:	jne    0x1005ec97
1005ec8e:	mov    WORD PTR [ebp-0x6],0x8000
1005ec94:	inc    edi
1005ec95:	jmp    0x1005eca5
1005ec97:	inc    WORD PTR [ebp-0x6]
1005ec9b:	jmp    0x1005eca5
1005ec9d:	inc    DWORD PTR [ebp-0xa]
1005eca0:	jmp    0x1005eca5
1005eca2:	inc    DWORD PTR [ebp-0xe]
1005eca5:	cmp    di,0x7fff
1005ecaa:	jb     0x1005ecca
1005ecac:	neg    cx
1005ecaf:	mov    DWORD PTR [ebp-0x1c],eax
1005ecb2:	mov    DWORD PTR [ebp-0x20],eax
1005ecb5:	sbb    ecx,ecx
1005ecb7:	and    ecx,0x80000000
1005ecbd:	add    ecx,0x7fff8000
1005ecc3:	mov    DWORD PTR [ebp-0x18],ecx
1005ecc6:	xor    eax,eax
1005ecc8:	jmp    0x1005ed00
1005ecca:	mov    ax,WORD PTR [ebp-0xe]
1005ecce:	mov    WORD PTR [ebp-0x20],ax
1005ecd2:	mov    eax,DWORD PTR [ebp-0xc]
1005ecd5:	mov    DWORD PTR [ebp-0x1e],eax
1005ecd8:	mov    eax,DWORD PTR [ebp-0x8]
1005ecdb:	or     edi,ecx
1005ecdd:	mov    DWORD PTR [ebp-0x1a],eax
1005ece0:	mov    WORD PTR [ebp-0x16],di
1005ece4:	jmp    0x1005ecc6
1005ece6:	neg    cx
1005ece9:	sbb    ecx,ecx
1005eceb:	and    ecx,0x80000000
1005ecf1:	add    ecx,0x7fff8000
1005ecf7:	mov    DWORD PTR [ebp-0x18],ecx
1005ecfa:	mov    DWORD PTR [ebp-0x1c],eax
1005ecfd:	mov    DWORD PTR [ebp-0x20],eax
1005ed00:	test   BYTE PTR [ebp+0x18],0x1
1005ed04:	mov    edx,DWORD PTR [ebp-0x60]
1005ed07:	mov    ecx,DWORD PTR [ebp-0x4c]
1005ed0a:	mov    WORD PTR [edx],cx
1005ed0d:	je     0x1005ed41
1005ed0f:	movsx  ecx,cx
1005ed12:	add    DWORD PTR [ebp+0x14],ecx
1005ed15:	cmp    DWORD PTR [ebp+0x14],eax
1005ed18:	jg     0x1005ed41
1005ed1a:	and    WORD PTR [edx],0x0
1005ed1e:	cmp    WORD PTR [ebp-0x6c],0x8000
1005ed24:	mov    BYTE PTR [edx+0x3],0x1
1005ed28:	setne  al
1005ed2b:	dec    al
1005ed2d:	and    al,0xd
1005ed2f:	add    al,0x20
1005ed31:	mov    BYTE PTR [edx+0x2],al
1005ed34:	mov    BYTE PTR [edx+0x4],0x30
1005ed38:	mov    BYTE PTR [edx+0x5],0x0
1005ed3c:	jmp    0x1005e6f0
1005ed41:	push   0x15
1005ed43:	pop    ecx
1005ed44:	cmp    DWORD PTR [ebp+0x14],ecx
1005ed47:	jle    0x1005ed4c
1005ed49:	mov    DWORD PTR [ebp+0x14],ecx
1005ed4c:	mov    esi,DWORD PTR [ebp-0x18]
1005ed4f:	shr    esi,0x10
1005ed52:	push   0x8
1005ed54:	sub    esi,0x3ffe
1005ed5a:	mov    WORD PTR [ebp-0x16],ax
1005ed5e:	pop    ebx
1005ed5f:	mov    eax,DWORD PTR [ebp-0x20]
1005ed62:	mov    edi,DWORD PTR [ebp-0x1c]
1005ed65:	mov    ecx,DWORD PTR [ebp-0x1c]
1005ed68:	shl    DWORD PTR [ebp-0x20],1
1005ed6b:	shr    eax,0x1f
1005ed6e:	add    edi,edi
1005ed70:	or     edi,eax
1005ed72:	mov    eax,DWORD PTR [ebp-0x18]
1005ed75:	shr    ecx,0x1f
1005ed78:	add    eax,eax
1005ed7a:	or     eax,ecx
1005ed7c:	dec    ebx
1005ed7d:	mov    DWORD PTR [ebp-0x1c],edi
1005ed80:	mov    DWORD PTR [ebp-0x18],eax
1005ed83:	jne    0x1005ed5f
1005ed85:	test   esi,esi
1005ed87:	jge    0x1005edbb
1005ed89:	neg    esi
1005ed8b:	and    esi,0xff
1005ed91:	jle    0x1005edbb
1005ed93:	mov    eax,DWORD PTR [ebp-0x18]
1005ed96:	mov    edi,DWORD PTR [ebp-0x1c]
1005ed99:	mov    ecx,DWORD PTR [ebp-0x1c]
1005ed9c:	shr    DWORD PTR [ebp-0x18],1
1005ed9f:	shl    eax,0x1f
1005eda2:	shr    edi,1
1005eda4:	or     edi,eax
1005eda6:	mov    eax,DWORD PTR [ebp-0x20]
1005eda9:	shl    ecx,0x1f
1005edac:	shr    eax,1
1005edae:	or     eax,ecx
1005edb0:	dec    esi
1005edb1:	test   esi,esi
1005edb3:	mov    DWORD PTR [ebp-0x1c],edi
1005edb6:	mov    DWORD PTR [ebp-0x20],eax
1005edb9:	jg     0x1005ed93
1005edbb:	mov    eax,DWORD PTR [ebp+0x14]
1005edbe:	inc    eax
1005edbf:	test   eax,eax
1005edc1:	lea    ebx,[edx+0x4]
1005edc4:	mov    DWORD PTR [ebp-0x40],ebx
1005edc7:	mov    DWORD PTR [ebp-0x4c],eax
1005edca:	jle    0x1005ee85
1005edd0:	mov    edx,DWORD PTR [ebp-0x20]
1005edd3:	mov    eax,DWORD PTR [ebp-0x1c]
1005edd6:	lea    esi,[ebp-0x20]
1005edd9:	lea    edi,[ebp-0x3c]
1005eddc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005eddd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005edde:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005eddf:	shl    DWORD PTR [ebp-0x20],1
1005ede2:	mov    edi,DWORD PTR [ebp-0x20]
1005ede5:	shl    DWORD PTR [ebp-0x20],1
1005ede8:	shr    edx,0x1f
1005edeb:	lea    ecx,[eax+eax*1]
1005edee:	or     ecx,edx
1005edf0:	mov    edx,DWORD PTR [ebp-0x18]
1005edf3:	mov    esi,eax
1005edf5:	shr    esi,0x1f
1005edf8:	add    edx,edx
1005edfa:	or     edx,esi
1005edfc:	mov    eax,ecx
1005edfe:	lea    esi,[ecx+ecx*1]
1005ee01:	shr    eax,0x1f
1005ee04:	lea    ecx,[edx+edx*1]
1005ee07:	mov    edx,DWORD PTR [ebp-0x3c]
1005ee0a:	shr    edi,0x1f
1005ee0d:	or     ecx,eax
1005ee0f:	mov    eax,DWORD PTR [ebp-0x20]
1005ee12:	or     esi,edi
1005ee14:	lea    edi,[edx+eax*1]
1005ee17:	cmp    edi,eax
1005ee19:	jb     0x1005ee1f
1005ee1b:	cmp    edi,edx
1005ee1d:	jae    0x1005ee37
1005ee1f:	lea    eax,[esi+0x1]
1005ee22:	xor    edx,edx
1005ee24:	cmp    eax,esi
1005ee26:	jb     0x1005ee2d
1005ee28:	cmp    eax,0x1
1005ee2b:	jae    0x1005ee30
1005ee2d:	xor    edx,edx
1005ee2f:	inc    edx
1005ee30:	test   edx,edx
1005ee32:	mov    esi,eax
1005ee34:	je     0x1005ee37
1005ee36:	inc    ecx
1005ee37:	mov    eax,DWORD PTR [ebp-0x38]
1005ee3a:	lea    edx,[eax+esi*1]
1005ee3d:	cmp    edx,esi
1005ee3f:	mov    DWORD PTR [ebp-0x44],edx
1005ee42:	jb     0x1005ee48
1005ee44:	cmp    edx,eax
1005ee46:	jae    0x1005ee49
1005ee48:	inc    ecx
1005ee49:	add    ecx,DWORD PTR [ebp-0x34]
1005ee4c:	shr    edx,0x1f
1005ee4f:	add    ecx,ecx
1005ee51:	or     ecx,edx
1005ee53:	lea    esi,[edi+edi*1]
1005ee56:	mov    DWORD PTR [ebp-0x20],esi
1005ee59:	mov    esi,DWORD PTR [ebp-0x44]
1005ee5c:	mov    DWORD PTR [ebp-0x18],ecx
1005ee5f:	shr    ecx,0x18
1005ee62:	add    esi,esi
1005ee64:	add    cl,0x30
1005ee67:	mov    eax,edi
1005ee69:	shr    eax,0x1f
1005ee6c:	or     esi,eax
1005ee6e:	mov    BYTE PTR [ebx],cl
1005ee70:	inc    ebx
1005ee71:	dec    DWORD PTR [ebp-0x4c]
1005ee74:	cmp    DWORD PTR [ebp-0x4c],0x0
1005ee78:	mov    DWORD PTR [ebp-0x1c],esi
1005ee7b:	mov    BYTE PTR [ebp-0x15],0x0
1005ee7f:	jg     0x1005edd0
1005ee85:	dec    ebx
1005ee86:	mov    al,BYTE PTR [ebx]
1005ee88:	dec    ebx
1005ee89:	cmp    al,0x35
1005ee8b:	jge    0x1005ee9b
1005ee8d:	mov    ecx,DWORD PTR [ebp-0x40]
1005ee90:	jmp    0x1005eed6
1005ee92:	cmp    BYTE PTR [ebx],0x39
1005ee95:	jne    0x1005eea0
1005ee97:	mov    BYTE PTR [ebx],0x30
1005ee9a:	dec    ebx
1005ee9b:	cmp    ebx,DWORD PTR [ebp-0x40]
1005ee9e:	jae    0x1005ee92
1005eea0:	cmp    ebx,DWORD PTR [ebp-0x40]
1005eea3:	mov    eax,DWORD PTR [ebp-0x60]
1005eea6:	jae    0x1005eeac
1005eea8:	inc    ebx
1005eea9:	inc    WORD PTR [eax]
1005eeac:	inc    BYTE PTR [ebx]
1005eeae:	sub    bl,al
1005eeb0:	sub    bl,0x3
1005eeb3:	movsx  ecx,bl
1005eeb6:	mov    BYTE PTR [eax+0x3],bl
1005eeb9:	mov    BYTE PTR [ecx+eax*1+0x4],0x0
1005eebe:	mov    eax,DWORD PTR [ebp-0x74]
1005eec1:	mov    ecx,DWORD PTR [ebp-0x4]
1005eec4:	pop    edi
1005eec5:	pop    esi
1005eec6:	xor    ecx,ebp
1005eec8:	pop    ebx
1005eec9:	call   0x100430d7
1005eece:	leave  
1005eecf:	ret    
1005eed0:	cmp    BYTE PTR [ebx],0x30
1005eed3:	jne    0x1005eeda
1005eed5:	dec    ebx
1005eed6:	cmp    ebx,ecx
1005eed8:	jae    0x1005eed0
1005eeda:	cmp    ebx,ecx
1005eedc:	mov    eax,DWORD PTR [ebp-0x60]
1005eedf:	jae    0x1005eeae
1005eee1:	and    WORD PTR [eax],0x0
1005eee5:	cmp    WORD PTR [ebp-0x6c],0x8000
1005eeeb:	mov    BYTE PTR [eax+0x3],0x1
1005eeef:	setne  dl
1005eef2:	dec    dl
1005eef4:	and    dl,0xd
1005eef7:	add    dl,0x20
1005eefa:	mov    BYTE PTR [eax+0x2],dl
1005eefd:	mov    BYTE PTR [ecx],0x30
1005ef00:	mov    BYTE PTR [eax+0x5],0x0
1005ef04:	jmp    0x1005e6f0
1005ef09:	xor    eax,eax
1005ef0b:	test   bl,0x10
1005ef0e:	je     0x1005ef11
1005ef10:	inc    eax
1005ef11:	test   bl,0x8
1005ef14:	je     0x1005ef19
1005ef16:	or     eax,0x4
1005ef19:	test   bl,0x4
1005ef1c:	je     0x1005ef21
1005ef1e:	or     eax,0x8
1005ef21:	test   bl,0x2
1005ef24:	je     0x1005ef29
1005ef26:	or     eax,0x10
1005ef29:	test   bl,0x1
1005ef2c:	je     0x1005ef31
1005ef2e:	or     eax,0x20
1005ef31:	test   ebx,0x80000
1005ef37:	je     0x1005ef3c
1005ef39:	or     eax,0x2
1005ef3c:	mov    ecx,ebx
1005ef3e:	mov    edx,0x300
1005ef43:	and    ecx,edx
1005ef45:	push   esi
1005ef46:	mov    esi,0x200
1005ef4b:	je     0x1005ef70
1005ef4d:	cmp    ecx,0x100
1005ef53:	je     0x1005ef6b
1005ef55:	cmp    ecx,esi
1005ef57:	je     0x1005ef64
1005ef59:	cmp    ecx,edx
1005ef5b:	jne    0x1005ef70
1005ef5d:	or     eax,0xc00
1005ef62:	jmp    0x1005ef70
1005ef64:	or     eax,0x800
1005ef69:	jmp    0x1005ef70
1005ef6b:	or     eax,0x400
1005ef70:	mov    ecx,ebx
1005ef72:	and    ecx,0x30000
1005ef78:	je     0x1005ef86
1005ef7a:	cmp    ecx,0x10000
1005ef80:	jne    0x1005ef88
1005ef82:	or     eax,esi
1005ef84:	jmp    0x1005ef88
1005ef86:	or     eax,edx
1005ef88:	test   ebx,0x40000
1005ef8e:	pop    esi
1005ef8f:	je     0x1005ef96
1005ef91:	or     eax,0x1000
1005ef96:	ret    
1005ef97:	xor    eax,eax
1005ef99:	test   dl,0x10
1005ef9c:	je     0x1005efa3
1005ef9e:	mov    eax,0x80
1005efa3:	test   dl,0x8
1005efa6:	push   ebx
1005efa7:	push   esi
1005efa8:	push   edi
1005efa9:	mov    ebx,0x200
1005efae:	je     0x1005efb2
1005efb0:	or     eax,ebx
1005efb2:	test   dl,0x4
1005efb5:	je     0x1005efbc
1005efb7:	or     eax,0x400
1005efbc:	test   dl,0x2
1005efbf:	je     0x1005efc6
1005efc1:	or     eax,0x800
1005efc6:	test   dl,0x1
1005efc9:	je     0x1005efd0
1005efcb:	or     eax,0x1000
1005efd0:	test   edx,0x80000
1005efd6:	mov    edi,0x100
1005efdb:	je     0x1005efdf
1005efdd:	or     eax,edi
1005efdf:	mov    ecx,edx
1005efe1:	mov    esi,0x300
1005efe6:	and    ecx,esi
1005efe8:	je     0x1005f009
1005efea:	cmp    ecx,edi
1005efec:	je     0x1005f004
1005efee:	cmp    ecx,ebx
1005eff0:	je     0x1005effd
1005eff2:	cmp    ecx,esi
1005eff4:	jne    0x1005f009
1005eff6:	or     eax,0x6000
1005effb:	jmp    0x1005f009
1005effd:	or     eax,0x4000
1005f002:	jmp    0x1005f009
1005f004:	or     eax,0x2000
1005f009:	mov    ecx,0x3000000
1005f00e:	pop    edi
1005f00f:	and    edx,ecx
1005f011:	cmp    edx,0x1000000
1005f017:	pop    esi
1005f018:	pop    ebx
1005f019:	je     0x1005f031
1005f01b:	cmp    edx,0x2000000
1005f021:	je     0x1005f02d
1005f023:	cmp    edx,ecx
1005f025:	jne    0x1005f036
1005f027:	or     eax,0x8000
1005f02c:	ret    
1005f02d:	or     eax,0x40
1005f030:	ret    
1005f031:	or     eax,0x8040
1005f036:	ret    
1005f037:	sub    esp,0x10
1005f03a:	push   ebx
1005f03b:	push   ebp
1005f03c:	push   esi
1005f03d:	push   edi
1005f03e:	fstcw  WORD PTR [esp+0x14]
1005f043:	mov    ebx,DWORD PTR [esp+0x14]
1005f047:	xor    edx,edx
1005f049:	test   bl,0x1
1005f04c:	je     0x1005f051
1005f04e:	push   0x10
1005f050:	pop    edx
1005f051:	test   bl,0x4
1005f054:	je     0x1005f059
1005f056:	or     edx,0x8
1005f059:	test   bl,0x8
1005f05c:	je     0x1005f061
1005f05e:	or     edx,0x4
1005f061:	test   bl,0x10
1005f064:	je     0x1005f069
1005f066:	or     edx,0x2
1005f069:	test   bl,0x20
1005f06c:	je     0x1005f071
1005f06e:	or     edx,0x1
1005f071:	test   bl,0x2
1005f074:	je     0x1005f07c
1005f076:	or     edx,0x80000
1005f07c:	movzx  ecx,bx
1005f07f:	mov    eax,ecx
1005f081:	mov    edi,0xc00
1005f086:	and    eax,edi
1005f088:	mov    ebp,0x300
1005f08d:	mov    esi,0x200
1005f092:	je     0x1005f0b4
1005f094:	cmp    eax,0x400
1005f099:	je     0x1005f0ae
1005f09b:	cmp    eax,0x800
1005f0a0:	je     0x1005f0aa
1005f0a2:	cmp    eax,edi
1005f0a4:	jne    0x1005f0b4
1005f0a6:	or     edx,ebp
1005f0a8:	jmp    0x1005f0b4
1005f0aa:	or     edx,esi
1005f0ac:	jmp    0x1005f0b4
1005f0ae:	or     edx,0x100
1005f0b4:	and    ecx,ebp
1005f0b6:	je     0x1005f0c4
1005f0b8:	cmp    ecx,esi
1005f0ba:	jne    0x1005f0ca
1005f0bc:	or     edx,0x10000
1005f0c2:	jmp    0x1005f0ca
1005f0c4:	or     edx,0x20000
1005f0ca:	test   bx,0x1000
1005f0cf:	je     0x1005f0d7
1005f0d1:	or     edx,0x40000
1005f0d7:	mov    esi,DWORD PTR [esp+0x28]
1005f0db:	mov    ecx,DWORD PTR [esp+0x24]
1005f0df:	mov    eax,esi
1005f0e1:	not    eax
1005f0e3:	and    eax,edx
1005f0e5:	and    ecx,esi
1005f0e7:	or     eax,ecx
1005f0e9:	cmp    eax,edx
1005f0eb:	mov    DWORD PTR [esp+0x1c],eax
1005f0ef:	je     0x1005f19f
1005f0f5:	mov    ebx,eax
1005f0f7:	call   0x1005ef09
1005f0fc:	movzx  eax,ax
1005f0ff:	mov    DWORD PTR [esp+0x10],eax
1005f103:	fldcw  WORD PTR [esp+0x10]
1005f107:	fstcw  WORD PTR [esp+0x10]
1005f10c:	mov    ebx,DWORD PTR [esp+0x10]
1005f110:	xor    edx,edx
1005f112:	test   bl,0x1
1005f115:	je     0x1005f11a
1005f117:	push   0x10
1005f119:	pop    edx
1005f11a:	test   bl,0x4
1005f11d:	je     0x1005f122
1005f11f:	or     edx,0x8
1005f122:	test   bl,0x8
1005f125:	je     0x1005f12a
1005f127:	or     edx,0x4
1005f12a:	test   bl,0x10
1005f12d:	je     0x1005f132
1005f12f:	or     edx,0x2
1005f132:	test   bl,0x20
1005f135:	je     0x1005f13a
1005f137:	or     edx,0x1
1005f13a:	test   bl,0x2
1005f13d:	je     0x1005f145
1005f13f:	or     edx,0x80000
1005f145:	movzx  ecx,bx
1005f148:	mov    eax,ecx
1005f14a:	and    eax,edi
1005f14c:	je     0x1005f172
1005f14e:	cmp    eax,0x400
1005f153:	je     0x1005f16c
1005f155:	cmp    eax,0x800
1005f15a:	je     0x1005f164
1005f15c:	cmp    eax,edi
1005f15e:	jne    0x1005f172
1005f160:	or     edx,ebp
1005f162:	jmp    0x1005f172
1005f164:	or     edx,0x200
1005f16a:	jmp    0x1005f172
1005f16c:	or     edx,0x100
1005f172:	and    ecx,ebp
1005f174:	je     0x1005f186
1005f176:	cmp    ecx,0x200
1005f17c:	jne    0x1005f18c
1005f17e:	or     edx,0x10000
1005f184:	jmp    0x1005f18c
1005f186:	or     edx,0x20000
1005f18c:	test   bx,0x1000
1005f191:	je     0x1005f199
1005f193:	or     edx,0x40000
1005f199:	mov    eax,edx
1005f19b:	mov    DWORD PTR [esp+0x1c],edx
1005f19f:	cmp    DWORD PTR ds:0x10082584,0x0
1005f1a6:	je     0x1005f332
1005f1ac:	and    esi,0x308031f
1005f1b2:	mov    edi,esi
1005f1b4:	stmxcsr DWORD PTR [esp+0x18]
1005f1b9:	mov    eax,DWORD PTR [esp+0x18]
1005f1bd:	xor    esi,esi
1005f1bf:	test   al,al
1005f1c1:	jns    0x1005f1c6
1005f1c3:	push   0x10
1005f1c5:	pop    esi
1005f1c6:	test   ax,0x200
1005f1ca:	je     0x1005f1cf
1005f1cc:	or     esi,0x8
1005f1cf:	test   ax,0x400
1005f1d3:	je     0x1005f1d8
1005f1d5:	or     esi,0x4
1005f1d8:	test   ax,0x800
1005f1dc:	je     0x1005f1e1
1005f1de:	or     esi,0x2
1005f1e1:	test   ax,0x1000
1005f1e5:	je     0x1005f1ea
1005f1e7:	or     esi,0x1
1005f1ea:	test   ax,0x100
1005f1ee:	je     0x1005f1f6
1005f1f0:	or     esi,0x80000
1005f1f6:	mov    ecx,eax
1005f1f8:	mov    ebp,0x6000
1005f1fd:	and    ecx,ebp
1005f1ff:	je     0x1005f22b
1005f201:	cmp    ecx,0x2000
1005f207:	je     0x1005f225
1005f209:	cmp    ecx,0x4000
1005f20f:	je     0x1005f21d
1005f211:	cmp    ecx,ebp
1005f213:	jne    0x1005f22b
1005f215:	or     esi,0x300
1005f21b:	jmp    0x1005f22b
1005f21d:	or     esi,0x200
1005f223:	jmp    0x1005f22b
1005f225:	or     esi,0x100
1005f22b:	mov    ebx,0x8040
1005f230:	and    eax,ebx
1005f232:	sub    eax,0x40
1005f235:	je     0x1005f253
1005f237:	sub    eax,0x7fc0
1005f23c:	je     0x1005f24b
1005f23e:	sub    eax,0x40
1005f241:	jne    0x1005f259
1005f243:	or     esi,0x1000000
1005f249:	jmp    0x1005f259
1005f24b:	or     esi,0x3000000
1005f251:	jmp    0x1005f259
1005f253:	or     esi,0x2000000
1005f259:	mov    edx,edi
1005f25b:	and    edi,DWORD PTR [esp+0x24]
1005f25f:	not    edx
1005f261:	and    edx,esi
1005f263:	or     edx,edi
1005f265:	cmp    edx,esi
1005f267:	jne    0x1005f270
1005f269:	mov    eax,esi
1005f26b:	jmp    0x1005f31b
1005f270:	call   0x1005ef97
1005f275:	push   eax
1005f276:	mov    DWORD PTR [esp+0x2c],eax
1005f27a:	call   0x1005f506
1005f27f:	pop    ecx
1005f280:	stmxcsr DWORD PTR [esp+0x28]
1005f285:	mov    eax,DWORD PTR [esp+0x28]
1005f289:	xor    edx,edx
1005f28b:	test   al,al
1005f28d:	jns    0x1005f292
1005f28f:	push   0x10
1005f291:	pop    edx
1005f292:	mov    edi,0x200
1005f297:	test   edi,eax
1005f299:	je     0x1005f29e
1005f29b:	or     edx,0x8
1005f29e:	test   ax,0x400
1005f2a2:	je     0x1005f2a7
1005f2a4:	or     edx,0x4
1005f2a7:	test   ax,0x800
1005f2ab:	je     0x1005f2b0
1005f2ad:	or     edx,0x2
1005f2b0:	test   ax,0x1000
1005f2b4:	je     0x1005f2b9
1005f2b6:	or     edx,0x1
1005f2b9:	mov    esi,0x100
1005f2be:	test   esi,eax
1005f2c0:	je     0x1005f2c8
1005f2c2:	or     edx,0x80000
1005f2c8:	mov    ecx,eax
1005f2ca:	and    ecx,ebp
1005f2cc:	je     0x1005f2f0
1005f2ce:	cmp    ecx,0x2000
1005f2d4:	je     0x1005f2ee
1005f2d6:	cmp    ecx,0x4000
1005f2dc:	je     0x1005f2ea
1005f2de:	cmp    ecx,ebp
1005f2e0:	jne    0x1005f2f0
1005f2e2:	or     edx,0x300
1005f2e8:	jmp    0x1005f2f0
1005f2ea:	or     edx,edi
1005f2ec:	jmp    0x1005f2f0
1005f2ee:	or     edx,esi
1005f2f0:	and    eax,ebx
1005f2f2:	sub    eax,0x40
1005f2f5:	je     0x1005f313
1005f2f7:	sub    eax,0x7fc0
1005f2fc:	je     0x1005f30b
1005f2fe:	sub    eax,0x40
1005f301:	jne    0x1005f319
1005f303:	or     edx,0x1000000
1005f309:	jmp    0x1005f319
1005f30b:	or     edx,0x3000000
1005f311:	jmp    0x1005f319
1005f313:	or     edx,0x2000000
1005f319:	mov    eax,edx
1005f31b:	mov    ecx,DWORD PTR [esp+0x1c]
1005f31f:	mov    edx,eax
1005f321:	xor    edx,ecx
1005f323:	or     eax,ecx
1005f325:	test   edx,0x8031f
1005f32b:	je     0x1005f332
1005f32d:	or     eax,0x80000000
1005f332:	pop    edi
1005f333:	pop    esi
1005f334:	pop    ebp
1005f335:	pop    ebx
1005f336:	add    esp,0x10
1005f339:	ret    
1005f33a:	push   ebp
1005f33b:	mov    ebp,esp
1005f33d:	sub    esp,0x18
1005f340:	mov    eax,ds:0x1007e030
1005f345:	xor    eax,ebp
1005f347:	mov    DWORD PTR [ebp-0x4],eax
1005f34a:	mov    eax,DWORD PTR [ebp+0x10]
1005f34d:	push   ebx
1005f34e:	push   esi
1005f34f:	xor    esi,esi
1005f351:	cmp    DWORD PTR [ebp+0xc],esi
1005f354:	push   edi
1005f355:	mov    DWORD PTR [ebp-0x18],0x404e
1005f35c:	mov    DWORD PTR [eax],esi
1005f35e:	mov    DWORD PTR [eax+0x4],esi
1005f361:	mov    DWORD PTR [eax+0x8],esi
1005f364:	jbe    0x1005f4b0
1005f36a:	mov    edx,DWORD PTR [eax]
1005f36c:	mov    ebx,DWORD PTR [eax+0x4]
1005f36f:	mov    esi,eax
1005f371:	lea    edi,[ebp-0x10]
1005f374:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005f375:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005f376:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005f377:	mov    ecx,edx
1005f379:	shr    ecx,0x1f
1005f37c:	lea    edi,[edx+edx*1]
1005f37f:	lea    edx,[ebx+ebx*1]
1005f382:	or     edx,ecx
1005f384:	mov    ecx,DWORD PTR [eax+0x8]
1005f387:	mov    esi,ebx
1005f389:	shr    esi,0x1f
1005f38c:	add    ecx,ecx
1005f38e:	or     ecx,esi
1005f390:	mov    DWORD PTR [ebp-0x14],edi
1005f393:	mov    esi,edi
1005f395:	and    DWORD PTR [ebp-0x14],0x0
1005f399:	mov    ebx,edx
1005f39b:	shr    ebx,0x1f
1005f39e:	add    ecx,ecx
1005f3a0:	shr    edi,0x1f
1005f3a3:	or     ecx,ebx
1005f3a5:	mov    ebx,DWORD PTR [ebp-0x10]
1005f3a8:	add    esi,esi
1005f3aa:	add    edx,edx
1005f3ac:	or     edx,edi
1005f3ae:	lea    edi,[esi+ebx*1]
1005f3b1:	cmp    edi,esi
1005f3b3:	mov    DWORD PTR [eax],esi
1005f3b5:	mov    DWORD PTR [eax+0x4],edx
1005f3b8:	mov    DWORD PTR [eax+0x8],ecx
1005f3bb:	jb     0x1005f3c1
1005f3bd:	cmp    edi,ebx
1005f3bf:	jae    0x1005f3c8
1005f3c1:	mov    DWORD PTR [ebp-0x14],0x1
1005f3c8:	xor    ebx,ebx
1005f3ca:	cmp    DWORD PTR [ebp-0x14],ebx
1005f3cd:	mov    DWORD PTR [eax],edi
1005f3cf:	je     0x1005f3eb
1005f3d1:	lea    esi,[edx+0x1]
1005f3d4:	cmp    esi,edx
1005f3d6:	jb     0x1005f3dd
1005f3d8:	cmp    esi,0x1
1005f3db:	jae    0x1005f3e0
1005f3dd:	xor    ebx,ebx
1005f3df:	inc    ebx
1005f3e0:	test   ebx,ebx
1005f3e2:	mov    DWORD PTR [eax+0x4],esi
1005f3e5:	je     0x1005f3eb
1005f3e7:	inc    ecx
1005f3e8:	mov    DWORD PTR [eax+0x8],ecx
1005f3eb:	mov    ecx,DWORD PTR [eax+0x4]
1005f3ee:	mov    edx,DWORD PTR [ebp-0xc]
1005f3f1:	lea    ebx,[ecx+edx*1]
1005f3f4:	xor    esi,esi
1005f3f6:	cmp    ebx,ecx
1005f3f8:	jb     0x1005f3fe
1005f3fa:	cmp    ebx,edx
1005f3fc:	jae    0x1005f401
1005f3fe:	xor    esi,esi
1005f400:	inc    esi
1005f401:	test   esi,esi
1005f403:	mov    DWORD PTR [eax+0x4],ebx
1005f406:	je     0x1005f40b
1005f408:	inc    DWORD PTR [eax+0x8]
1005f40b:	mov    ecx,DWORD PTR [ebp-0x8]
1005f40e:	add    DWORD PTR [eax+0x8],ecx
1005f411:	and    DWORD PTR [ebp-0x14],0x0
1005f415:	lea    ecx,[edi+edi*1]
1005f418:	mov    edx,edi
1005f41a:	shr    edx,0x1f
1005f41d:	lea    edi,[ebx+ebx*1]
1005f420:	or     edi,edx
1005f422:	mov    edx,DWORD PTR [eax+0x8]
1005f425:	mov    esi,ebx
1005f427:	shr    esi,0x1f
1005f42a:	lea    ebx,[edx+edx*1]
1005f42d:	mov    edx,DWORD PTR [ebp+0x8]
1005f430:	or     ebx,esi
1005f432:	mov    DWORD PTR [eax],ecx
1005f434:	mov    DWORD PTR [eax+0x4],edi
1005f437:	mov    DWORD PTR [eax+0x8],ebx
1005f43a:	movsx  edx,BYTE PTR [edx]
1005f43d:	lea    esi,[ecx+edx*1]
1005f440:	cmp    esi,ecx
1005f442:	mov    DWORD PTR [ebp-0x10],edx
1005f445:	jb     0x1005f44b
1005f447:	cmp    esi,edx
1005f449:	jae    0x1005f452
1005f44b:	mov    DWORD PTR [ebp-0x14],0x1
1005f452:	cmp    DWORD PTR [ebp-0x14],0x0
1005f456:	mov    DWORD PTR [eax],esi
1005f458:	je     0x1005f476
1005f45a:	lea    ecx,[edi+0x1]
1005f45d:	xor    edx,edx
1005f45f:	cmp    ecx,edi
1005f461:	jb     0x1005f468
1005f463:	cmp    ecx,0x1
1005f466:	jae    0x1005f46b
1005f468:	xor    edx,edx
1005f46a:	inc    edx
1005f46b:	test   edx,edx
1005f46d:	mov    DWORD PTR [eax+0x4],ecx
1005f470:	je     0x1005f476
1005f472:	inc    ebx
1005f473:	mov    DWORD PTR [eax+0x8],ebx
1005f476:	dec    DWORD PTR [ebp+0xc]
1005f479:	inc    DWORD PTR [ebp+0x8]
1005f47c:	cmp    DWORD PTR [ebp+0xc],0x0
1005f480:	ja     0x1005f36a
1005f486:	xor    esi,esi
1005f488:	jmp    0x1005f4b0
1005f48a:	mov    ecx,DWORD PTR [eax+0x4]
1005f48d:	mov    edx,ecx
1005f48f:	shr    edx,0x10
1005f492:	mov    DWORD PTR [eax+0x8],edx
1005f495:	mov    edx,DWORD PTR [eax]
1005f497:	mov    edi,edx
1005f499:	shl    ecx,0x10
1005f49c:	shr    edi,0x10
1005f49f:	or     ecx,edi
1005f4a1:	shl    edx,0x10
1005f4a4:	add    DWORD PTR [ebp-0x18],0xfff0
1005f4ab:	mov    DWORD PTR [eax+0x4],ecx
1005f4ae:	mov    DWORD PTR [eax],edx
1005f4b0:	cmp    DWORD PTR [eax+0x8],esi
1005f4b3:	je     0x1005f48a
1005f4b5:	mov    ebx,0x8000
1005f4ba:	test   DWORD PTR [eax+0x8],ebx
1005f4bd:	jne    0x1005f4ef
1005f4bf:	mov    esi,DWORD PTR [eax]
1005f4c1:	mov    edi,DWORD PTR [eax+0x4]
1005f4c4:	add    DWORD PTR [ebp-0x18],0xffff
1005f4cb:	mov    ecx,esi
1005f4cd:	add    esi,esi
1005f4cf:	shr    ecx,0x1f
1005f4d2:	mov    DWORD PTR [eax],esi
1005f4d4:	lea    esi,[edi+edi*1]
1005f4d7:	or     esi,ecx
1005f4d9:	mov    ecx,DWORD PTR [eax+0x8]
1005f4dc:	mov    edx,edi
1005f4de:	shr    edx,0x1f
1005f4e1:	add    ecx,ecx
1005f4e3:	or     ecx,edx
1005f4e5:	test   ebx,ecx
1005f4e7:	mov    DWORD PTR [eax+0x4],esi
1005f4ea:	mov    DWORD PTR [eax+0x8],ecx
1005f4ed:	je     0x1005f4bf
1005f4ef:	mov    cx,WORD PTR [ebp-0x18]
1005f4f3:	mov    WORD PTR [eax+0xa],cx
1005f4f7:	mov    ecx,DWORD PTR [ebp-0x4]
1005f4fa:	pop    edi
1005f4fb:	pop    esi
1005f4fc:	xor    ecx,ebp
1005f4fe:	pop    ebx
1005f4ff:	call   0x100430d7
1005f504:	leave  
1005f505:	ret    
1005f506:	push   0x8
1005f508:	push   0x10074d60
1005f50d:	call   0x10046f34
1005f512:	xor    eax,eax
1005f514:	cmp    DWORD PTR ds:0x10082584,eax
1005f51a:	je     0x1005f572
1005f51c:	test   BYTE PTR [ebp+0x8],0x40
1005f520:	je     0x1005f56a
1005f522:	cmp    DWORD PTR ds:0x1007f4f4,eax
1005f528:	je     0x1005f56a
1005f52a:	mov    DWORD PTR [ebp-0x4],eax
1005f52d:	ldmxcsr DWORD PTR [ebp+0x8]
1005f531:	jmp    0x1005f561
1005f533:	mov    eax,DWORD PTR [ebp-0x14]
1005f536:	mov    eax,DWORD PTR [eax]
1005f538:	mov    eax,DWORD PTR [eax]
1005f53a:	cmp    eax,0xc0000005
1005f53f:	je     0x1005f54b
1005f541:	cmp    eax,0xc000001d
1005f546:	je     0x1005f54b
1005f548:	xor    eax,eax
1005f54a:	ret    
1005f54b:	xor    eax,eax
1005f54d:	inc    eax
1005f54e:	ret    
1005f54f:	mov    esp,DWORD PTR [ebp-0x18]
1005f552:	and    DWORD PTR ds:0x1007f4f4,0x0
1005f559:	and    DWORD PTR [ebp+0x8],0xffffffbf
1005f55d:	ldmxcsr DWORD PTR [ebp+0x8]
1005f561:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1005f568:	jmp    0x1005f572
1005f56a:	and    DWORD PTR [ebp+0x8],0xffffffbf
1005f56e:	ldmxcsr DWORD PTR [ebp+0x8]
1005f572:	call   0x10046f79
1005f577:	ret    
1005f578:	int3   
1005f579:	int3   
1005f57a:	int3   
1005f57b:	int3   
1005f57c:	int3   
1005f57d:	int3   
1005f57e:	int3   
1005f57f:	int3   
1005f580:	push   edi
1005f581:	push   esi
1005f582:	push   ebx
1005f583:	xor    edi,edi
1005f585:	mov    eax,DWORD PTR [esp+0x14]
1005f589:	or     eax,eax
1005f58b:	jge    0x1005f5a1
1005f58d:	inc    edi
1005f58e:	mov    edx,DWORD PTR [esp+0x10]
1005f592:	neg    eax
1005f594:	neg    edx
1005f596:	sbb    eax,0x0
1005f599:	mov    DWORD PTR [esp+0x14],eax
1005f59d:	mov    DWORD PTR [esp+0x10],edx
1005f5a1:	mov    eax,DWORD PTR [esp+0x1c]
1005f5a5:	or     eax,eax
1005f5a7:	jge    0x1005f5bd
1005f5a9:	inc    edi
1005f5aa:	mov    edx,DWORD PTR [esp+0x18]
1005f5ae:	neg    eax
1005f5b0:	neg    edx
1005f5b2:	sbb    eax,0x0
1005f5b5:	mov    DWORD PTR [esp+0x1c],eax
1005f5b9:	mov    DWORD PTR [esp+0x18],edx
1005f5bd:	or     eax,eax
1005f5bf:	jne    0x1005f5d9
1005f5c1:	mov    ecx,DWORD PTR [esp+0x18]
1005f5c5:	mov    eax,DWORD PTR [esp+0x14]
1005f5c9:	xor    edx,edx
1005f5cb:	div    ecx
1005f5cd:	mov    ebx,eax
1005f5cf:	mov    eax,DWORD PTR [esp+0x10]
1005f5d3:	div    ecx
1005f5d5:	mov    edx,ebx
1005f5d7:	jmp    0x1005f61a
1005f5d9:	mov    ebx,eax
1005f5db:	mov    ecx,DWORD PTR [esp+0x18]
1005f5df:	mov    edx,DWORD PTR [esp+0x14]
1005f5e3:	mov    eax,DWORD PTR [esp+0x10]
1005f5e7:	shr    ebx,1
1005f5e9:	rcr    ecx,1
1005f5eb:	shr    edx,1
1005f5ed:	rcr    eax,1
1005f5ef:	or     ebx,ebx
1005f5f1:	jne    0x1005f5e7
1005f5f3:	div    ecx
1005f5f5:	mov    esi,eax
1005f5f7:	mul    DWORD PTR [esp+0x1c]
1005f5fb:	mov    ecx,eax
1005f5fd:	mov    eax,DWORD PTR [esp+0x18]
1005f601:	mul    esi
1005f603:	add    edx,ecx
1005f605:	jb     0x1005f615
1005f607:	cmp    edx,DWORD PTR [esp+0x14]
1005f60b:	ja     0x1005f615
1005f60d:	jb     0x1005f616
1005f60f:	cmp    eax,DWORD PTR [esp+0x10]
1005f613:	jbe    0x1005f616
1005f615:	dec    esi
1005f616:	xor    edx,edx
1005f618:	mov    eax,esi
1005f61a:	dec    edi
1005f61b:	jne    0x1005f624
1005f61d:	neg    edx
1005f61f:	neg    eax
1005f621:	sbb    edx,0x0
1005f624:	pop    ebx
1005f625:	pop    esi
1005f626:	pop    edi
1005f627:	ret    0x10
1005f62a:	int3   
1005f62b:	int3   
1005f62c:	push   0x10046f90
1005f631:	push   DWORD PTR fs:0x0
1005f638:	mov    eax,DWORD PTR [esp+0x10]
1005f63c:	mov    DWORD PTR [esp+0x10],ebp
1005f640:	lea    ebp,[esp+0x10]
1005f644:	sub    esp,eax
1005f646:	push   ebx
1005f647:	push   esi
1005f648:	push   edi
1005f649:	mov    eax,ds:0x1007e030
1005f64e:	xor    DWORD PTR [ebp-0x4],eax
1005f651:	xor    eax,ebp
1005f653:	mov    DWORD PTR [ebp-0x1c],eax
1005f656:	push   eax
1005f657:	mov    DWORD PTR [ebp-0x18],esp
1005f65a:	push   DWORD PTR [ebp-0x8]
1005f65d:	mov    eax,DWORD PTR [ebp-0x4]
1005f660:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1005f667:	mov    DWORD PTR [ebp-0x8],eax
1005f66a:	lea    eax,[ebp-0x10]
1005f66d:	mov    fs:0x0,eax
1005f673:	ret    
1005f674:	mov    ecx,DWORD PTR [ebp-0x1c]
1005f677:	xor    ecx,ebp
1005f679:	call   0x100430d7
1005f67e:	jmp    0x10046f79
1005f683:	int3   
1005f684:	int3   
1005f685:	int3   
1005f686:	int3   
1005f687:	int3   
1005f688:	int3   
1005f689:	int3   
1005f68a:	int3   
1005f68b:	int3   
1005f68c:	int3   
1005f68d:	int3   
1005f68e:	int3   
1005f68f:	int3   
1005f690:	cmp    DWORD PTR ds:0x10082584,0x0
1005f697:	je     0x1005f6c6
1005f699:	push   ebp
1005f69a:	mov    ebp,esp
1005f69c:	sub    esp,0x8
1005f69f:	and    esp,0xfffffff8
1005f6a2:	fstp   QWORD PTR [esp]
1005f6a5:	cvttsd2si eax,QWORD PTR [esp]
1005f6aa:	leave  
1005f6ab:	ret    
1005f6ac:	cmp    DWORD PTR ds:0x10082584,0x0
1005f6b3:	je     0x1005f6c6
1005f6b5:	sub    esp,0x4
1005f6b8:	fnstcw WORD PTR [esp]
1005f6bb:	pop    eax
1005f6bc:	and    ax,0x7f
1005f6c0:	cmp    ax,0x7f
1005f6c4:	je     0x1005f699
1005f6c6:	push   ebp
1005f6c7:	mov    ebp,esp
1005f6c9:	sub    esp,0x20
1005f6cc:	and    esp,0xfffffff0
1005f6cf:	fld    st(0)
1005f6d1:	fst    DWORD PTR [esp+0x18]
1005f6d5:	fistp  QWORD PTR [esp+0x10]
1005f6d9:	fild   QWORD PTR [esp+0x10]
1005f6dd:	mov    edx,DWORD PTR [esp+0x18]
1005f6e1:	mov    eax,DWORD PTR [esp+0x10]
1005f6e5:	test   eax,eax
1005f6e7:	je     0x1005f725
1005f6e9:	fsubp  st(1),st
1005f6eb:	test   edx,edx
1005f6ed:	jns    0x1005f70d
1005f6ef:	fstp   DWORD PTR [esp]
1005f6f2:	mov    ecx,DWORD PTR [esp]
1005f6f5:	xor    ecx,0x80000000
1005f6fb:	add    ecx,0x7fffffff
1005f701:	adc    eax,0x0
1005f704:	mov    edx,DWORD PTR [esp+0x14]
1005f708:	adc    edx,0x0
1005f70b:	jmp    0x1005f739
1005f70d:	fstp   DWORD PTR [esp]
1005f710:	mov    ecx,DWORD PTR [esp]
1005f713:	add    ecx,0x7fffffff
1005f719:	sbb    eax,0x0
1005f71c:	mov    edx,DWORD PTR [esp+0x14]
1005f720:	sbb    edx,0x0
1005f723:	jmp    0x1005f739
1005f725:	mov    edx,DWORD PTR [esp+0x14]
1005f729:	test   edx,0x7fffffff
1005f72f:	jne    0x1005f6e9
1005f731:	fstp   DWORD PTR [esp+0x18]
1005f735:	fstp   DWORD PTR [esp+0x18]
1005f739:	leave  
1005f73a:	ret    
1005f73b:	int3   
1005f73c:	int3   
1005f73d:	int3   
1005f73e:	int3   
1005f73f:	int3   
1005f740:	push   ebx
1005f741:	push   esi
1005f742:	mov    eax,DWORD PTR [esp+0x18]
1005f746:	or     eax,eax
1005f748:	jne    0x1005f762
1005f74a:	mov    ecx,DWORD PTR [esp+0x14]
1005f74e:	mov    eax,DWORD PTR [esp+0x10]
1005f752:	xor    edx,edx
1005f754:	div    ecx
1005f756:	mov    ebx,eax
1005f758:	mov    eax,DWORD PTR [esp+0xc]
1005f75c:	div    ecx
1005f75e:	mov    edx,ebx
1005f760:	jmp    0x1005f7a3
1005f762:	mov    ecx,eax
1005f764:	mov    ebx,DWORD PTR [esp+0x14]
1005f768:	mov    edx,DWORD PTR [esp+0x10]
1005f76c:	mov    eax,DWORD PTR [esp+0xc]
1005f770:	shr    ecx,1
1005f772:	rcr    ebx,1
1005f774:	shr    edx,1
1005f776:	rcr    eax,1
1005f778:	or     ecx,ecx
1005f77a:	jne    0x1005f770
1005f77c:	div    ebx
1005f77e:	mov    esi,eax
1005f780:	mul    DWORD PTR [esp+0x18]
1005f784:	mov    ecx,eax
1005f786:	mov    eax,DWORD PTR [esp+0x14]
1005f78a:	mul    esi
1005f78c:	add    edx,ecx
1005f78e:	jb     0x1005f79e
1005f790:	cmp    edx,DWORD PTR [esp+0x10]
1005f794:	ja     0x1005f79e
1005f796:	jb     0x1005f79f
1005f798:	cmp    eax,DWORD PTR [esp+0xc]
1005f79c:	jbe    0x1005f79f
1005f79e:	dec    esi
1005f79f:	xor    edx,edx
1005f7a1:	mov    eax,esi
1005f7a3:	pop    esi
1005f7a4:	pop    ebx
1005f7a5:	ret    0x10
1005f7a8:	int3   
1005f7a9:	int3   
1005f7aa:	int3   
1005f7ab:	int3   
1005f7ac:	int3   
1005f7ad:	int3   
1005f7ae:	int3   
1005f7af:	int3   
1005f7b0:	mov    edx,DWORD PTR [esp+0x8]
1005f7b4:	lea    eax,[edx+0xc]
1005f7b7:	mov    ecx,DWORD PTR [edx-0x14]
1005f7ba:	xor    ecx,eax
1005f7bc:	call   0x100430d7
1005f7c1:	mov    eax,0x10074ae8
1005f7c6:	jmp    0x1005941c
1005f7cb:	mov    edx,DWORD PTR [esp+0x8]
1005f7cf:	lea    eax,[edx+0xc]
1005f7d2:	mov    ecx,DWORD PTR [edx-0x14]
1005f7d5:	xor    ecx,eax
1005f7d7:	call   0x100430d7
1005f7dc:	mov    eax,0x10074c58
1005f7e1:	jmp    0x1005941c
1005f7e6:	mov    ecx,DWORD PTR [ebp-0x10]
1005f7e9:	jmp    0x1002b17f
1005f7ee:	mov    edx,DWORD PTR [esp+0x8]
1005f7f2:	lea    eax,[edx+0xc]
1005f7f5:	mov    ecx,DWORD PTR [edx-0x14]
1005f7f8:	xor    ecx,eax
1005f7fa:	call   0x100430d7
1005f7ff:	mov    eax,0x10074f64
1005f804:	jmp    0x1005941c
1005f809:	mov    eax,DWORD PTR [ebp-0x10]
1005f80c:	add    eax,0x4
1005f80f:	jmp    0x10012625
1005f814:	mov    edx,DWORD PTR [esp+0x8]
1005f818:	lea    eax,[edx+0xc]
1005f81b:	mov    ecx,DWORD PTR [edx-0x14]
1005f81e:	xor    ecx,eax
1005f820:	call   0x100430d7
1005f825:	mov    eax,0x10074f90
1005f82a:	jmp    0x1005941c
1005f82f:	lea    eax,[ebp+0x10]
1005f832:	jmp    0x10012625
1005f837:	mov    edx,DWORD PTR [esp+0x8]
1005f83b:	lea    eax,[edx+0xc]
1005f83e:	mov    ecx,DWORD PTR [edx-0x10]
1005f841:	xor    ecx,eax
1005f843:	call   0x100430d7
1005f848:	mov    eax,0x10074fbc
1005f84d:	jmp    0x1005941c
1005f852:	lea    eax,[ebp+0x8]
1005f855:	jmp    0x10012625
1005f85a:	mov    edx,DWORD PTR [esp+0x8]
1005f85e:	lea    eax,[edx+0xc]
1005f861:	mov    ecx,DWORD PTR [edx-0x10]
1005f864:	xor    ecx,eax
1005f866:	call   0x100430d7
1005f86b:	mov    eax,0x10074fe8
1005f870:	jmp    0x1005941c
1005f875:	lea    eax,[ebp-0x28]
1005f878:	jmp    0x10012625
1005f87d:	mov    edx,DWORD PTR [esp+0x8]
1005f881:	lea    eax,[edx+0xc]
1005f884:	mov    ecx,DWORD PTR [edx-0x30]
1005f887:	xor    ecx,eax
1005f889:	call   0x100430d7
1005f88e:	mov    ecx,DWORD PTR [edx-0x4]
1005f891:	xor    ecx,eax
1005f893:	call   0x100430d7
1005f898:	mov    eax,0x10075014
1005f89d:	jmp    0x1005941c
1005f8a2:	push   DWORD PTR [ebp-0x10]
1005f8a5:	call   0x100430d2
1005f8aa:	pop    ecx
1005f8ab:	ret    
1005f8ac:	mov    edx,DWORD PTR [esp+0x8]
1005f8b0:	lea    eax,[edx+0xc]
1005f8b3:	mov    ecx,DWORD PTR [edx-0x14]
1005f8b6:	xor    ecx,eax
1005f8b8:	call   0x100430d7
1005f8bd:	mov    eax,0x10075040
1005f8c2:	jmp    0x1005941c
1005f8c7:	int3   
1005f8c8:	int3   
1005f8c9:	int3   
1005f8ca:	int3   
1005f8cb:	int3   
1005f8cc:	int3   
1005f8cd:	int3   
1005f8ce:	int3   
1005f8cf:	int3   
1005f8d0:	lea    eax,[ebp-0x10]
1005f8d3:	jmp    0x100020a1
1005f8d8:	mov    edx,DWORD PTR [esp+0x8]
1005f8dc:	lea    eax,[edx-0x1c]
1005f8df:	mov    ecx,DWORD PTR [edx-0x20]
1005f8e2:	xor    ecx,eax
1005f8e4:	call   0x100430d7
1005f8e9:	mov    eax,0x1007506c
1005f8ee:	jmp    0x1005941c
1005f8f3:	int3   
1005f8f4:	int3   
1005f8f5:	int3   
1005f8f6:	int3   
1005f8f7:	int3   
1005f8f8:	int3   
1005f8f9:	int3   
1005f8fa:	int3   
1005f8fb:	int3   
1005f8fc:	int3   
1005f8fd:	int3   
1005f8fe:	int3   
1005f8ff:	int3   
1005f900:	lea    ecx,[ebp-0x20]
1005f903:	jmp    0x1002258a
1005f908:	mov    edx,DWORD PTR [esp+0x8]
1005f90c:	lea    eax,[edx-0x14]
1005f90f:	mov    ecx,DWORD PTR [edx-0x18]
1005f912:	xor    ecx,eax
1005f914:	call   0x100430d7
1005f919:	mov    eax,0x10075098
1005f91e:	jmp    0x1005941c
1005f923:	int3   
1005f924:	int3   
1005f925:	int3   
1005f926:	int3   
1005f927:	int3   
1005f928:	int3   
1005f929:	int3   
1005f92a:	int3   
1005f92b:	int3   
1005f92c:	int3   
1005f92d:	int3   
1005f92e:	int3   
1005f92f:	int3   
1005f930:	mov    eax,DWORD PTR [ebp-0x10]
1005f933:	and    eax,0x1
1005f936:	je     0x1005f948
1005f93c:	and    DWORD PTR [ebp-0x10],0xfffffffe
1005f940:	mov    edi,DWORD PTR [ebp+0x8]
1005f943:	jmp    0x100024f2
1005f948:	ret    
1005f949:	mov    edx,DWORD PTR [esp+0x8]
1005f94d:	lea    eax,[edx-0x8]
1005f950:	mov    ecx,DWORD PTR [edx-0xc]
1005f953:	xor    ecx,eax
1005f955:	call   0x100430d7
1005f95a:	mov    eax,0x100750c4
1005f95f:	jmp    0x1005941c
1005f964:	int3   
1005f965:	int3   
1005f966:	int3   
1005f967:	int3   
1005f968:	int3   
1005f969:	int3   
1005f96a:	int3   
1005f96b:	int3   
1005f96c:	int3   
1005f96d:	int3   
1005f96e:	int3   
1005f96f:	int3   
1005f970:	lea    eax,[ebp-0x54]
1005f973:	jmp    0x100020a1
1005f978:	lea    eax,[ebp-0x4c]
1005f97b:	jmp    0x100020a1
1005f980:	mov    edx,DWORD PTR [esp+0x8]
1005f984:	lea    eax,[edx-0x58]
1005f987:	mov    ecx,DWORD PTR [edx-0x5c]
1005f98a:	xor    ecx,eax
1005f98c:	call   0x100430d7
1005f991:	mov    eax,0x100750f8
1005f996:	jmp    0x1005941c
1005f99b:	int3   
1005f99c:	int3   
1005f99d:	int3   
1005f99e:	int3   
1005f99f:	int3   
1005f9a0:	lea    eax,[ebp-0x50]
1005f9a3:	jmp    0x100020a1
1005f9a8:	lea    eax,[ebp-0x4c]
1005f9ab:	jmp    0x100020a1
1005f9b0:	mov    edx,DWORD PTR [esp+0x8]
1005f9b4:	lea    eax,[edx-0x5c]
1005f9b7:	mov    ecx,DWORD PTR [edx-0x60]
1005f9ba:	xor    ecx,eax
1005f9bc:	call   0x100430d7
1005f9c1:	mov    eax,0x1007512c
1005f9c6:	jmp    0x1005941c
1005f9cb:	mov    ecx,DWORD PTR [ebp+0x8]
1005f9ce:	jmp    0x1002b17f
1005f9d3:	mov    eax,DWORD PTR [ebp+0x8]
1005f9d6:	add    eax,0x4
1005f9d9:	jmp    0x1002d379
1005f9de:	mov    edx,DWORD PTR [esp+0x8]
1005f9e2:	lea    eax,[edx+0xc]
1005f9e5:	mov    ecx,DWORD PTR [edx-0x10]
1005f9e8:	xor    ecx,eax
1005f9ea:	call   0x100430d7
1005f9ef:	mov    eax,0x10075160
1005f9f4:	jmp    0x1005941c
1005f9f9:	lea    ecx,[ebp-0x20]
1005f9fc:	jmp    0x1002258a
1005fa01:	mov    edx,DWORD PTR [esp+0x8]
1005fa05:	lea    eax,[edx+0xc]
1005fa08:	mov    ecx,DWORD PTR [edx-0x24]
1005fa0b:	xor    ecx,eax
1005fa0d:	call   0x100430d7
1005fa12:	mov    eax,0x1007518c
1005fa17:	jmp    0x1005941c
1005fa1c:	mov    edx,DWORD PTR [esp+0x8]
1005fa20:	lea    eax,[edx+0xc]
1005fa23:	mov    ecx,DWORD PTR [edx-0x14]
1005fa26:	xor    ecx,eax
1005fa28:	call   0x100430d7
1005fa2d:	mov    eax,0x100751e4
1005fa32:	jmp    0x1005941c
1005fa37:	mov    edx,DWORD PTR [esp+0x8]
1005fa3b:	lea    eax,[edx+0xc]
1005fa3e:	mov    ecx,DWORD PTR [edx-0x1c]
1005fa41:	xor    ecx,eax
1005fa43:	call   0x100430d7
1005fa48:	mov    eax,0x1007523c
1005fa4d:	jmp    0x1005941c
1005fa52:	lea    eax,[ebp-0x10]
1005fa55:	jmp    0x10012625
1005fa5a:	mov    edx,DWORD PTR [esp+0x8]
1005fa5e:	lea    eax,[edx+0xc]
1005fa61:	mov    ecx,DWORD PTR [edx-0x14]
1005fa64:	xor    ecx,eax
1005fa66:	call   0x100430d7
1005fa6b:	mov    eax,0x10075268
1005fa70:	jmp    0x1005941c
1005fa75:	push   DWORD PTR [ebp-0x20]
1005fa78:	call   0x10043600
1005fa7d:	pop    ecx
1005fa7e:	ret    
1005fa7f:	lea    eax,[ebp-0x14]
1005fa82:	jmp    0x1002b4ce
1005fa87:	mov    edx,DWORD PTR [esp+0x8]
1005fa8b:	lea    eax,[edx+0xc]
1005fa8e:	mov    ecx,DWORD PTR [edx-0x28]
1005fa91:	xor    ecx,eax
1005fa93:	call   0x100430d7
1005fa98:	mov    eax,0x100752d0
1005fa9d:	jmp    0x1005941c
1005faa2:	lea    eax,[ebp-0x10]
1005faa5:	jmp    0x100020a1
1005faaa:	mov    edx,DWORD PTR [esp+0x8]
1005faae:	lea    eax,[edx+0xc]
1005fab1:	mov    ecx,DWORD PTR [edx-0x18]
1005fab4:	xor    ecx,eax
1005fab6:	call   0x100430d7
1005fabb:	mov    eax,0x1007531c
1005fac0:	jmp    0x1005941c
1005fac5:	push   DWORD PTR [ebp-0x14]
1005fac8:	call   0x10043600
1005facd:	pop    ecx
1005face:	ret    
1005facf:	lea    eax,[ebp+0x8]
1005fad2:	jmp    0x1002b4ce
1005fad7:	mov    edx,DWORD PTR [esp+0x8]
1005fadb:	lea    eax,[edx+0xc]
1005fade:	mov    ecx,DWORD PTR [edx-0x24]
1005fae1:	xor    ecx,eax
1005fae3:	call   0x100430d7
1005fae8:	mov    eax,0x10075384
1005faed:	jmp    0x1005941c
1005faf2:	mov    edx,DWORD PTR [esp+0x8]
1005faf6:	lea    eax,[edx+0xc]
1005faf9:	mov    ecx,DWORD PTR [edx-0x1c]
1005fafc:	xor    ecx,eax
1005fafe:	call   0x100430d7
1005fb03:	mov    eax,0x100753dc
1005fb08:	jmp    0x1005941c
1005fb0d:	mov    eax,DWORD PTR [ebp-0x10]
1005fb10:	and    eax,0x1
1005fb13:	je     0x1005fb25
1005fb19:	and    DWORD PTR [ebp-0x10],0xfffffffe
1005fb1d:	mov    edi,DWORD PTR [ebp+0x8]
1005fb20:	jmp    0x100024f2
1005fb25:	ret    
1005fb26:	mov    edx,DWORD PTR [esp+0x8]
1005fb2a:	lea    eax,[edx+0xc]
1005fb2d:	mov    ecx,DWORD PTR [edx-0x14]
1005fb30:	xor    ecx,eax
1005fb32:	call   0x100430d7
1005fb37:	mov    eax,0x10075408
1005fb3c:	jmp    0x1005941c
1005fb41:	mov    edx,DWORD PTR [esp+0x8]
1005fb45:	lea    eax,[edx+0xc]
1005fb48:	mov    ecx,DWORD PTR [edx-0x1c]
1005fb4b:	xor    ecx,eax
1005fb4d:	call   0x100430d7
1005fb52:	mov    eax,0x10075494
1005fb57:	jmp    0x1005941c
1005fb5c:	mov    ecx,DWORD PTR [ebp-0x10]
1005fb5f:	jmp    0x10043210
1005fb64:	mov    edx,DWORD PTR [esp+0x8]
1005fb68:	lea    eax,[edx+0xc]
1005fb6b:	mov    ecx,DWORD PTR [edx-0x14]
1005fb6e:	xor    ecx,eax
1005fb70:	call   0x100430d7
1005fb75:	mov    eax,0x100754c0
1005fb7a:	jmp    0x1005941c
1005fb7f:	jmp    0x1000205f
1005fb84:	mov    edx,DWORD PTR [esp+0x8]
1005fb88:	lea    eax,[edx+0xc]
1005fb8b:	mov    ecx,DWORD PTR [edx-0x10]
1005fb8e:	xor    ecx,eax
1005fb90:	call   0x100430d7
1005fb95:	mov    eax,0x100754ec
1005fb9a:	jmp    0x1005941c
1005fb9f:	mov    edx,DWORD PTR [esp+0x8]
1005fba3:	lea    eax,[edx+0xc]
1005fba6:	mov    ecx,DWORD PTR [edx-0x18]
1005fba9:	xor    ecx,eax
1005fbab:	call   0x100430d7
1005fbb0:	mov    eax,0x10075544
1005fbb5:	jmp    0x1005941c
1005fbba:	mov    edx,DWORD PTR [esp+0x8]
1005fbbe:	lea    eax,[edx+0xc]
1005fbc1:	mov    ecx,DWORD PTR [edx-0x1c]
1005fbc4:	xor    ecx,eax
1005fbc6:	call   0x100430d7
1005fbcb:	mov    eax,0x1007559c
1005fbd0:	jmp    0x1005941c
1005fbd5:	mov    edx,DWORD PTR [esp+0x8]
1005fbd9:	lea    eax,[edx+0xc]
1005fbdc:	mov    ecx,DWORD PTR [edx-0x1c]
1005fbdf:	xor    ecx,eax
1005fbe1:	call   0x100430d7
1005fbe6:	mov    eax,0x100755f4
1005fbeb:	jmp    0x1005941c
1005fbf0:	mov    edx,DWORD PTR [esp+0x8]
1005fbf4:	lea    eax,[edx+0xc]
1005fbf7:	mov    ecx,DWORD PTR [edx-0x1c]
1005fbfa:	xor    ecx,eax
1005fbfc:	call   0x100430d7
1005fc01:	mov    eax,0x1007564c
1005fc06:	jmp    0x1005941c
1005fc0b:	mov    ecx,DWORD PTR [ebp+0x8]
1005fc0e:	jmp    0x10007f38
1005fc13:	mov    ecx,DWORD PTR [ebp+0x8]
1005fc16:	add    ecx,0x1c
1005fc19:	jmp    0x10007f38
1005fc1e:	mov    edx,DWORD PTR [esp+0x8]
1005fc22:	lea    eax,[edx+0xc]
1005fc25:	mov    ecx,DWORD PTR [edx-0x10]
1005fc28:	xor    ecx,eax
1005fc2a:	call   0x100430d7
1005fc2f:	mov    eax,0x10075680
1005fc34:	jmp    0x1005941c
1005fc39:	mov    edx,DWORD PTR [esp+0x8]
1005fc3d:	lea    eax,[edx+0xc]
1005fc40:	mov    ecx,DWORD PTR [edx-0x1c]
1005fc43:	xor    ecx,eax
1005fc45:	call   0x100430d7
1005fc4a:	mov    eax,0x100756d8
1005fc4f:	jmp    0x1005941c
1005fc54:	mov    edx,DWORD PTR [esp+0x8]
1005fc58:	lea    eax,[edx+0xc]
1005fc5b:	mov    ecx,DWORD PTR [edx-0x1c]
1005fc5e:	xor    ecx,eax
1005fc60:	call   0x100430d7
1005fc65:	mov    eax,0x10075730
1005fc6a:	jmp    0x1005941c
1005fc6f:	lea    esi,[ebp-0x18]
1005fc72:	jmp    0x100075ca
1005fc77:	mov    edx,DWORD PTR [esp+0x8]
1005fc7b:	lea    eax,[edx+0xc]
1005fc7e:	mov    ecx,DWORD PTR [edx-0x20]
1005fc81:	xor    ecx,eax
1005fc83:	call   0x100430d7
1005fc88:	mov    ecx,DWORD PTR [edx-0x8]
1005fc8b:	xor    ecx,eax
1005fc8d:	call   0x100430d7
1005fc92:	mov    eax,0x10075790
1005fc97:	jmp    0x1005941c
1005fc9c:	mov    edx,DWORD PTR [esp+0x8]
1005fca0:	lea    eax,[edx+0xc]
1005fca3:	mov    ecx,DWORD PTR [edx-0x1c]
1005fca6:	xor    ecx,eax
1005fca8:	call   0x100430d7
1005fcad:	mov    eax,0x100757e8
1005fcb2:	jmp    0x1005941c
1005fcb7:	mov    edx,DWORD PTR [esp+0x8]
1005fcbb:	lea    eax,[edx+0xc]
1005fcbe:	mov    ecx,DWORD PTR [edx-0x1c]
1005fcc1:	xor    ecx,eax
1005fcc3:	call   0x100430d7
1005fcc8:	mov    eax,0x10075840
1005fccd:	jmp    0x1005941c
1005fcd2:	lea    eax,[ebp-0x18]
1005fcd5:	jmp    0x10012625
1005fcda:	lea    eax,[ebp+0xc]
1005fcdd:	jmp    0x10012625
1005fce2:	lea    eax,[ebp-0x18]
1005fce5:	jmp    0x10012625
1005fcea:	lea    eax,[ebp+0xc]
1005fced:	jmp    0x10012625
1005fcf2:	lea    eax,[ebp-0x14]
1005fcf5:	jmp    0x10012625
1005fcfa:	lea    eax,[ebp+0x10]
1005fcfd:	jmp    0x10012625
1005fd02:	lea    eax,[ebp-0x1c]
1005fd05:	jmp    0x10012625
1005fd0a:	mov    edx,DWORD PTR [esp+0x8]
1005fd0e:	lea    eax,[edx+0xc]
1005fd11:	mov    ecx,DWORD PTR [edx-0x28]
1005fd14:	xor    ecx,eax
1005fd16:	call   0x100430d7
1005fd1b:	mov    eax,0x1007589c
1005fd20:	jmp    0x1005941c
1005fd25:	lea    eax,[ebp+0x8]
1005fd28:	jmp    0x1002b4ce
1005fd2d:	mov    edx,DWORD PTR [esp+0x8]
1005fd31:	lea    eax,[edx+0xc]
1005fd34:	mov    ecx,DWORD PTR [edx-0x14]
1005fd37:	xor    ecx,eax
1005fd39:	call   0x100430d7
1005fd3e:	mov    eax,0x100758c8
1005fd43:	jmp    0x1005941c
1005fd48:	lea    eax,[ebp-0x10]
1005fd4b:	jmp    0x1002b4ce
1005fd50:	mov    edx,DWORD PTR [esp+0x8]
1005fd54:	lea    eax,[edx+0xc]
1005fd57:	mov    ecx,DWORD PTR [edx-0x28]
1005fd5a:	xor    ecx,eax
1005fd5c:	call   0x100430d7
1005fd61:	mov    ecx,DWORD PTR [edx+0x3f4]
1005fd67:	xor    ecx,eax
1005fd69:	call   0x100430d7
1005fd6e:	mov    eax,0x100758f4
1005fd73:	jmp    0x1005941c
1005fd78:	lea    ecx,[ebp-0x24]
1005fd7b:	jmp    0x10010e45
1005fd80:	lea    eax,[ebp-0x10]
1005fd83:	jmp    0x10012625
1005fd88:	lea    eax,[ebp-0x18]
1005fd8b:	jmp    0x10012625
1005fd90:	lea    eax,[ebp-0x1c]
1005fd93:	jmp    0x10012625
1005fd98:	mov    edx,DWORD PTR [esp+0x8]
1005fd9c:	lea    eax,[edx+0xc]
1005fd9f:	mov    ecx,DWORD PTR [edx-0x28]
1005fda2:	xor    ecx,eax
1005fda4:	call   0x100430d7
1005fda9:	mov    ecx,DWORD PTR [edx+0x214]
1005fdaf:	xor    ecx,eax
1005fdb1:	call   0x100430d7
1005fdb6:	mov    eax,0x10075938
1005fdbb:	jmp    0x1005941c
1005fdc0:	jmp    0x1000205f
1005fdc5:	mov    edx,DWORD PTR [esp+0x8]
1005fdc9:	lea    eax,[edx+0xc]
1005fdcc:	mov    ecx,DWORD PTR [edx-0x18]
1005fdcf:	xor    ecx,eax
1005fdd1:	call   0x100430d7
1005fdd6:	mov    eax,0x10075998
1005fddb:	jmp    0x1005941c
1005fde0:	jmp    0x1000205f
1005fde5:	mov    edx,DWORD PTR [esp+0x8]
1005fde9:	lea    eax,[edx+0xc]
1005fdec:	mov    ecx,DWORD PTR [edx-0x18]
1005fdef:	xor    ecx,eax
1005fdf1:	call   0x100430d7
1005fdf6:	mov    eax,0x100759f8
1005fdfb:	jmp    0x1005941c
1005fe00:	lea    ecx,[ebp-0x10]
1005fe03:	jmp    0x10015fdf
1005fe08:	mov    edx,DWORD PTR [esp+0x8]
1005fe0c:	lea    eax,[edx+0xc]
1005fe0f:	mov    ecx,DWORD PTR [edx-0x14]
1005fe12:	xor    ecx,eax
1005fe14:	call   0x100430d7
1005fe19:	mov    eax,0x10075a24
1005fe1e:	jmp    0x1005941c
1005fe23:	lea    eax,[ebp+0x0]
1005fe26:	jmp    0x10017a33
1005fe2b:	lea    eax,[ebp+0x0]
1005fe2e:	jmp    0x10017a33
1005fe33:	mov    edx,DWORD PTR [esp+0x8]
1005fe37:	lea    eax,[edx+0xc]
1005fe3a:	mov    ecx,DWORD PTR [edx-0x2c]
1005fe3d:	xor    ecx,eax
1005fe3f:	call   0x100430d7
1005fe44:	mov    ecx,DWORD PTR [edx+0x2110]
1005fe4a:	xor    ecx,eax
1005fe4c:	call   0x100430d7
1005fe51:	mov    eax,0x10075ac0
1005fe56:	jmp    0x1005941c
1005fe5b:	mov    ecx,DWORD PTR [ebp+0x8]
1005fe5e:	jmp    0x10007f38
1005fe63:	mov    ecx,DWORD PTR [ebp+0x8]
1005fe66:	add    ecx,0x1c
1005fe69:	jmp    0x10007f38
1005fe6e:	mov    ecx,DWORD PTR [ebp+0x8]
1005fe71:	add    ecx,0x38
1005fe74:	jmp    0x10007f38
1005fe79:	mov    edx,DWORD PTR [esp+0x8]
1005fe7d:	lea    eax,[edx+0xc]
1005fe80:	mov    ecx,DWORD PTR [edx-0x10]
1005fe83:	xor    ecx,eax
1005fe85:	call   0x100430d7
1005fe8a:	mov    eax,0x10075afc
1005fe8f:	jmp    0x1005941c
1005fe94:	mov    ecx,DWORD PTR [ebp+0x8]
1005fe97:	jmp    0x10007f38
1005fe9c:	mov    ecx,DWORD PTR [ebp+0x8]
1005fe9f:	add    ecx,0x1c
1005fea2:	jmp    0x10007f38
1005fea7:	mov    ecx,DWORD PTR [ebp+0x8]
1005feaa:	add    ecx,0x38
1005fead:	jmp    0x10007f38
1005feb2:	mov    ecx,DWORD PTR [ebp+0x8]
1005feb5:	add    ecx,0x54
1005feb8:	jmp    0x10007f38
1005febd:	mov    edx,DWORD PTR [esp+0x8]
1005fec1:	lea    eax,[edx+0xc]
1005fec4:	mov    ecx,DWORD PTR [edx-0x10]
1005fec7:	xor    ecx,eax
1005fec9:	call   0x100430d7
1005fece:	mov    eax,0x10075b40
1005fed3:	jmp    0x1005941c
1005fed8:	mov    edx,DWORD PTR [esp+0x8]
1005fedc:	lea    eax,[edx+0xc]
1005fedf:	mov    ecx,DWORD PTR [edx-0x1c]
1005fee2:	xor    ecx,eax
1005fee4:	call   0x100430d7
1005fee9:	mov    eax,0x10075b98
1005feee:	jmp    0x1005941c
1005fef3:	mov    edx,DWORD PTR [esp+0x8]
1005fef7:	lea    eax,[edx+0xc]
1005fefa:	mov    ecx,DWORD PTR [edx-0x18]
1005fefd:	xor    ecx,eax
1005feff:	call   0x100430d7
1005ff04:	mov    eax,0x10075bf0
1005ff09:	jmp    0x1005941c
1005ff0e:	mov    eax,DWORD PTR [ebp+0x8]
1005ff11:	jmp    0x100020a1
1005ff16:	mov    edx,DWORD PTR [esp+0x8]
1005ff1a:	lea    eax,[edx+0xc]
1005ff1d:	mov    ecx,DWORD PTR [edx-0x10]
1005ff20:	xor    ecx,eax
1005ff22:	call   0x100430d7
1005ff27:	mov    eax,0x10075c1c
1005ff2c:	jmp    0x1005941c
1005ff31:	mov    edx,DWORD PTR [esp+0x8]
1005ff35:	lea    eax,[edx+0xc]
1005ff38:	mov    ecx,DWORD PTR [edx-0x18]
1005ff3b:	xor    ecx,eax
1005ff3d:	call   0x100430d7
1005ff42:	mov    eax,0x10075ca8
1005ff47:	jmp    0x1005941c
1005ff4c:	jmp    0x1000205f
1005ff51:	mov    edx,DWORD PTR [esp+0x8]
1005ff55:	lea    eax,[edx+0xc]
1005ff58:	mov    ecx,DWORD PTR [edx-0x18]
1005ff5b:	xor    ecx,eax
1005ff5d:	call   0x100430d7
1005ff62:	mov    eax,0x10075d08
1005ff67:	jmp    0x1005941c
1005ff6c:	lea    esi,[ebp+0x8]
1005ff6f:	jmp    0x10004b4a
1005ff74:	mov    edx,DWORD PTR [esp+0x8]
1005ff78:	lea    eax,[edx+0xc]
1005ff7b:	mov    ecx,DWORD PTR [edx-0x14]
1005ff7e:	xor    ecx,eax
1005ff80:	call   0x100430d7
1005ff85:	mov    eax,0x10075d34
1005ff8a:	jmp    0x1005941c
1005ff8f:	mov    eax,DWORD PTR [ebp-0x10]
1005ff92:	and    eax,0x1
1005ff95:	je     0x1005ffa7
1005ff9b:	and    DWORD PTR [ebp-0x10],0xfffffffe
1005ff9f:	mov    eax,DWORD PTR [ebp+0x8]
1005ffa2:	jmp    0x10002078
1005ffa7:	ret    
1005ffa8:	mov    edx,DWORD PTR [esp+0x8]
1005ffac:	lea    eax,[edx+0xc]
1005ffaf:	mov    ecx,DWORD PTR [edx-0x1c]
1005ffb2:	xor    ecx,eax
1005ffb4:	call   0x100430d7
1005ffb9:	mov    eax,0x10075d60
1005ffbe:	jmp    0x1005941c
1005ffc3:	lea    ecx,[ebp+0x8]
1005ffc6:	jmp    0x10007f38
1005ffcb:	mov    ecx,DWORD PTR [ebp-0x10]
1005ffce:	jmp    0x10007f38
1005ffd3:	mov    edx,DWORD PTR [esp+0x8]
1005ffd7:	lea    eax,[edx+0xc]
1005ffda:	mov    ecx,DWORD PTR [edx-0x14]
1005ffdd:	xor    ecx,eax
1005ffdf:	call   0x100430d7
1005ffe4:	mov    eax,0x10075d94
1005ffe9:	jmp    0x1005941c
1005ffee:	mov    ecx,DWORD PTR [ebp+0x8]
1005fff1:	jmp    0x10043210
1005fff6:	mov    edx,DWORD PTR [esp+0x8]
1005fffa:	lea    eax,[edx+0xc]
1005fffd:	mov    ecx,DWORD PTR [edx-0x10]
10060000:	xor    ecx,eax
10060002:	call   0x100430d7
10060007:	mov    eax,0x10075dc0
1006000c:	jmp    0x1005941c
10060011:	int3   
10060012:	int3   
10060013:	int3   
10060014:	int3   
10060015:	int3   
10060016:	int3   
10060017:	int3   
10060018:	int3   
10060019:	int3   
1006001a:	int3   
1006001b:	int3   
1006001c:	int3   
1006001d:	int3   
1006001e:	int3   
1006001f:	int3   
10060020:	mov    ecx,DWORD PTR [ebp+0x4]
10060023:	jmp    0x10007f38
10060028:	mov    edx,DWORD PTR [esp+0x8]
1006002c:	lea    eax,[edx-0x4]
1006002f:	mov    ecx,DWORD PTR [edx-0x8]
10060032:	xor    ecx,eax
10060034:	call   0x100430d7
10060039:	mov    eax,0x10075dec
1006003e:	jmp    0x1005941c
10060043:	int3   
10060044:	int3   
10060045:	int3   
10060046:	int3   
10060047:	int3   
10060048:	int3   
10060049:	int3   
1006004a:	int3   
1006004b:	int3   
1006004c:	int3   
1006004d:	int3   
1006004e:	int3   
1006004f:	int3   
10060050:	lea    eax,[ebp-0x34]
10060053:	jmp    0x100020a1
10060058:	mov    edx,DWORD PTR [esp+0x8]
1006005c:	lea    eax,[edx-0x38]
1006005f:	mov    ecx,DWORD PTR [edx-0x3c]
10060062:	xor    ecx,eax
10060064:	call   0x100430d7
10060069:	add    eax,0xc
1006006c:	mov    ecx,DWORD PTR [edx-0x8]
1006006f:	xor    ecx,eax
10060071:	call   0x100430d7
10060076:	mov    eax,0x10075e18
1006007b:	jmp    0x1005941c
10060080:	mov    ecx,DWORD PTR [ebp-0x10]
10060083:	jmp    0x10043210
10060088:	mov    edx,DWORD PTR [esp+0x8]
1006008c:	lea    eax,[edx-0xc]
1006008f:	mov    ecx,DWORD PTR [edx-0x10]
10060092:	xor    ecx,eax
10060094:	call   0x100430d7
10060099:	mov    eax,0x10075e44
1006009e:	jmp    0x1005941c
100600a3:	int3   
100600a4:	int3   
100600a5:	int3   
100600a6:	int3   
100600a7:	int3   
100600a8:	int3   
100600a9:	int3   
100600aa:	int3   
100600ab:	int3   
100600ac:	int3   
100600ad:	int3   
100600ae:	int3   
100600af:	int3   
100600b0:	lea    ecx,[ebp-0x28]
100600b3:	jmp    0x10007f38
100600b8:	mov    edx,DWORD PTR [esp+0x8]
100600bc:	lea    eax,[edx-0x28]
100600bf:	mov    ecx,DWORD PTR [edx-0x2c]
100600c2:	xor    ecx,eax
100600c4:	call   0x100430d7
100600c9:	mov    eax,0x10075e70
100600ce:	jmp    0x1005941c
100600d3:	int3   
100600d4:	int3   
100600d5:	int3   
100600d6:	int3   
100600d7:	int3   
100600d8:	int3   
100600d9:	int3   
100600da:	int3   
100600db:	int3   
100600dc:	int3   
100600dd:	int3   
100600de:	int3   
100600df:	int3   
100600e0:	lea    eax,[ebp-0x4c]
100600e3:	jmp    0x10034580
100600e8:	mov    edx,DWORD PTR [esp+0x8]
100600ec:	lea    eax,[edx-0x50]
100600ef:	mov    ecx,DWORD PTR [edx-0x54]
100600f2:	xor    ecx,eax
100600f4:	call   0x100430d7
100600f9:	mov    eax,0x10075e9c
100600fe:	jmp    0x1005941c
10060103:	int3   
10060104:	int3   
10060105:	int3   
10060106:	int3   
10060107:	int3   
10060108:	int3   
10060109:	int3   
1006010a:	int3   
1006010b:	int3   
1006010c:	int3   
1006010d:	int3   
1006010e:	int3   
1006010f:	int3   
10060110:	mov    eax,DWORD PTR [ebp-0x14]
10060113:	and    eax,0x1
10060116:	je     0x10060128
1006011c:	and    DWORD PTR [ebp-0x14],0xfffffffe
10060120:	mov    ecx,DWORD PTR [ebp-0x10]
10060123:	jmp    0x10007f38
10060128:	ret    
10060129:	mov    edx,DWORD PTR [esp+0x8]
1006012d:	lea    eax,[edx-0x18]
10060130:	mov    ecx,DWORD PTR [edx-0x1c]
10060133:	xor    ecx,eax
10060135:	call   0x100430d7
1006013a:	mov    eax,0x10075ec8
1006013f:	jmp    0x1005941c
10060144:	mov    edx,DWORD PTR [esp+0x8]
10060148:	lea    eax,[edx+0xc]
1006014b:	mov    ecx,DWORD PTR [edx-0x18]
1006014e:	xor    ecx,eax
10060150:	call   0x100430d7
10060155:	mov    eax,0x10075f20
1006015a:	jmp    0x1005941c
1006015f:	mov    eax,DWORD PTR [ebp+0x8]
10060162:	jmp    0x1002b4ce
10060167:	mov    edx,DWORD PTR [esp+0x8]
1006016b:	lea    eax,[edx+0xc]
1006016e:	mov    ecx,DWORD PTR [edx-0x10]
10060171:	xor    ecx,eax
10060173:	call   0x100430d7
10060178:	mov    eax,0x10075f4c
1006017d:	jmp    0x1005941c
10060182:	jmp    0x1000205f
10060187:	mov    edx,DWORD PTR [esp+0x8]
1006018b:	lea    eax,[edx+0xc]
1006018e:	mov    ecx,DWORD PTR [edx-0x18]
10060191:	xor    ecx,eax
10060193:	call   0x100430d7
10060198:	mov    eax,0x10075fac
1006019d:	jmp    0x1005941c
100601a2:	lea    ecx,[ebp-0x20]
100601a5:	jmp    0x1002258a
100601aa:	mov    edx,DWORD PTR [esp+0x8]
100601ae:	lea    eax,[edx+0xc]
100601b1:	mov    ecx,DWORD PTR [edx-0x24]
100601b4:	xor    ecx,eax
100601b6:	call   0x100430d7
100601bb:	mov    eax,0x10076040
100601c0:	jmp    0x1005941c
100601c5:	lea    ecx,[ebp-0x2c]
100601c8:	jmp    0x10007f38
100601cd:	mov    edx,DWORD PTR [esp+0x8]
100601d1:	lea    eax,[edx+0xc]
100601d4:	mov    ecx,DWORD PTR [edx-0x30]
100601d7:	xor    ecx,eax
100601d9:	call   0x100430d7
100601de:	mov    eax,0x1007606c
100601e3:	jmp    0x1005941c
100601e8:	lea    ecx,[ebp-0x38]
100601eb:	jmp    0x1002258a
100601f0:	lea    eax,[ebp-0x28]
100601f3:	jmp    0x1002b4ce
100601f8:	lea    esi,[ebp-0x28]
100601fb:	jmp    0x1002dbc7
10060200:	mov    edx,DWORD PTR [esp+0x8]
10060204:	lea    eax,[edx-0x4c]
10060207:	mov    ecx,DWORD PTR [edx-0x50]
1006020a:	xor    ecx,eax
1006020c:	call   0x100430d7
10060211:	mov    eax,0x100760a8
10060216:	jmp    0x1005941c
1006021b:	mov    eax,DWORD PTR [ebp+0x8]
1006021e:	jmp    0x10012625
10060223:	mov    edx,DWORD PTR [esp+0x8]
10060227:	lea    eax,[edx+0xc]
1006022a:	mov    ecx,DWORD PTR [edx-0x10]
1006022d:	xor    ecx,eax
1006022f:	call   0x100430d7
10060234:	mov    eax,0x100760d4
10060239:	jmp    0x1005941c
1006023e:	lea    ecx,[ebp+0xc]
10060241:	jmp    0x1002258a
10060246:	lea    eax,[ebp-0x18]
10060249:	jmp    0x1002b4ce
1006024e:	lea    eax,[ebp-0x14]
10060251:	jmp    0x1002b4ce
10060256:	mov    edx,DWORD PTR [esp+0x8]
1006025a:	lea    eax,[edx+0xc]
1006025d:	mov    ecx,DWORD PTR [edx-0x1c]
10060260:	xor    ecx,eax
10060262:	call   0x100430d7
10060267:	mov    ecx,DWORD PTR [edx-0x4]
1006026a:	xor    ecx,eax
1006026c:	call   0x100430d7
10060271:	mov    eax,0x10076110
10060276:	jmp    0x1005941c
1006027b:	lea    eax,[ebp-0x18]
1006027e:	jmp    0x10009c4e
10060283:	lea    eax,[ebp-0x14]
10060286:	jmp    0x1003a080
1006028b:	mov    edx,DWORD PTR [esp+0x8]
1006028f:	lea    eax,[edx+0xc]
10060292:	mov    ecx,DWORD PTR [edx-0x1c]
10060295:	xor    ecx,eax
10060297:	call   0x100430d7
1006029c:	mov    eax,0x10076144
100602a1:	jmp    0x1005941c
100602a6:	mov    edx,DWORD PTR [esp+0x8]
100602aa:	lea    eax,[edx+0xc]
100602ad:	mov    ecx,DWORD PTR [edx-0x1c]
100602b0:	xor    ecx,eax
100602b2:	call   0x100430d7
100602b7:	mov    eax,0x1007619c
100602bc:	jmp    0x1005941c
100602c1:	mov    eax,DWORD PTR [ebp-0x10]
100602c4:	and    eax,0x1
100602c7:	je     0x100602d9
100602cd:	and    DWORD PTR [ebp-0x10],0xfffffffe
100602d1:	lea    eax,[ebp+0x8]
100602d4:	jmp    0x10012625
100602d9:	ret    
100602da:	mov    edx,DWORD PTR [esp+0x8]
100602de:	lea    eax,[edx+0xc]
100602e1:	mov    ecx,DWORD PTR [edx-0x18]
100602e4:	xor    ecx,eax
100602e6:	call   0x100430d7
100602eb:	mov    eax,0x100761c8
100602f0:	jmp    0x1005941c
100602f5:	mov    edx,DWORD PTR [esp+0x8]
100602f9:	lea    eax,[edx+0xc]
100602fc:	mov    ecx,DWORD PTR [edx-0x1c]
100602ff:	xor    ecx,eax
10060301:	call   0x100430d7
10060306:	mov    eax,0x10076220
1006030b:	jmp    0x1005941c
10060310:	jmp    0x1000205f
10060315:	mov    edx,DWORD PTR [esp+0x8]
10060319:	lea    eax,[edx+0xc]
1006031c:	mov    ecx,DWORD PTR [edx-0x18]
1006031f:	xor    ecx,eax
10060321:	call   0x100430d7
10060326:	mov    eax,0x10076280
1006032b:	jmp    0x1005941c
10060330:	lea    ecx,[ebp-0x28]
10060333:	jmp    0x10007f38
10060338:	mov    edx,DWORD PTR [esp+0x8]
1006033c:	lea    eax,[edx+0xc]
1006033f:	mov    ecx,DWORD PTR [edx-0x54]
10060342:	xor    ecx,eax
10060344:	call   0x100430d7
10060349:	mov    eax,0x100762ac
1006034e:	jmp    0x1005941c
10060353:	mov    eax,DWORD PTR [ebp-0x10]
10060356:	add    eax,0x8
10060359:	jmp    0x1002118c
1006035e:	mov    edx,DWORD PTR [esp+0x8]
10060362:	lea    eax,[edx+0xc]
10060365:	mov    ecx,DWORD PTR [edx-0x14]
10060368:	xor    ecx,eax
1006036a:	call   0x100430d7
1006036f:	mov    eax,0x100762d8
10060374:	jmp    0x1005941c
10060379:	mov    eax,DWORD PTR [ebp+0x8]
1006037c:	add    eax,0x8
1006037f:	jmp    0x1002118c
10060384:	mov    edx,DWORD PTR [esp+0x8]
10060388:	lea    eax,[edx+0xc]
1006038b:	mov    ecx,DWORD PTR [edx-0x10]
1006038e:	xor    ecx,eax
10060390:	call   0x100430d7
10060395:	mov    eax,0x10076304
1006039a:	jmp    0x1005941c
1006039f:	lea    ecx,[ebp-0x2c]
100603a2:	jmp    0x10007f38
100603a7:	mov    edx,DWORD PTR [esp+0x8]
100603ab:	lea    eax,[edx+0xc]
100603ae:	mov    ecx,DWORD PTR [edx-0x58]
100603b1:	xor    ecx,eax
100603b3:	call   0x100430d7
100603b8:	mov    eax,0x10076330
100603bd:	jmp    0x1005941c
100603c2:	push   DWORD PTR [ebp-0x18]
100603c5:	call   0x100430d2
100603ca:	pop    ecx
100603cb:	ret    
100603cc:	mov    edx,DWORD PTR [esp+0x8]
100603d0:	lea    eax,[edx+0xc]
100603d3:	mov    ecx,DWORD PTR [edx-0x20]
100603d6:	xor    ecx,eax
100603d8:	call   0x100430d7
100603dd:	mov    eax,0x10076390
100603e2:	jmp    0x1005941c
100603e7:	lea    esi,[ebp-0x28]
100603ea:	jmp    0x10020355
100603ef:	lea    eax,[ebp-0x14]
100603f2:	jmp    0x10012625
100603f7:	lea    eax,[ebp-0x20]
100603fa:	jmp    0x1002b4ce
100603ff:	lea    esi,[ebp-0x2c]
10060402:	jmp    0x100075ca
10060407:	lea    eax,[ebp-0x1c]
1006040a:	jmp    0x10012625
1006040f:	mov    edx,DWORD PTR [esp+0x8]
10060413:	lea    eax,[edx+0xc]
10060416:	mov    ecx,DWORD PTR [edx-0x30]
10060419:	xor    ecx,eax
1006041b:	call   0x100430d7
10060420:	mov    ecx,DWORD PTR [edx-0x4]
10060423:	xor    ecx,eax
10060425:	call   0x100430d7
1006042a:	mov    eax,0x100763dc
1006042f:	jmp    0x1005941c
10060434:	lea    esi,[ebp-0x24]
10060437:	jmp    0x10020355
1006043c:	lea    eax,[ebp-0x14]
1006043f:	jmp    0x10012625
10060444:	lea    esi,[ebp-0x28]
10060447:	jmp    0x100075ca
1006044c:	lea    eax,[ebp-0x18]
1006044f:	jmp    0x10012625
10060454:	mov    edx,DWORD PTR [esp+0x8]
10060458:	lea    eax,[edx+0xc]
1006045b:	mov    ecx,DWORD PTR [edx-0x2c]
1006045e:	xor    ecx,eax
10060460:	call   0x100430d7
10060465:	mov    ecx,DWORD PTR [edx-0x4]
10060468:	xor    ecx,eax
1006046a:	call   0x100430d7
1006046f:	mov    eax,0x10076420
10060474:	jmp    0x1005941c
10060479:	lea    eax,[ebp+0x8]
1006047c:	jmp    0x1002b4ce
10060481:	lea    eax,[ebp+0x10]
10060484:	jmp    0x1002b4ce
10060489:	mov    edx,DWORD PTR [esp+0x8]
1006048d:	lea    eax,[edx+0xc]
10060490:	mov    ecx,DWORD PTR [edx-0x14]
10060493:	xor    ecx,eax
10060495:	call   0x100430d7
1006049a:	mov    eax,0x10076454
1006049f:	jmp    0x1005941c
100604a4:	lea    eax,[ebp-0x40]
100604a7:	jmp    0x10012625
100604ac:	lea    eax,[ebp-0x3c]
100604af:	jmp    0x10012625
100604b4:	lea    eax,[ebp-0x44]
100604b7:	jmp    0x10012625
100604bc:	lea    eax,[ebp-0x44]
100604bf:	jmp    0x10012625
100604c4:	lea    ecx,[ebp-0x20]
100604c7:	jmp    0x1002258a
100604cc:	lea    ecx,[ebp-0x30]
100604cf:	jmp    0x1002258a
100604d4:	mov    edx,DWORD PTR [esp+0x8]
100604d8:	lea    eax,[edx-0x4c]
100604db:	mov    ecx,DWORD PTR [edx-0x50]
100604de:	xor    ecx,eax
100604e0:	call   0x100430d7
100604e5:	mov    eax,0x100764a8
100604ea:	jmp    0x1005941c
100604ef:	lea    esi,[ebp-0x78]
100604f2:	jmp    0x1001a784
100604f7:	mov    edx,DWORD PTR [esp+0x8]
100604fb:	lea    eax,[edx+0xc]
100604fe:	mov    ecx,DWORD PTR [edx-0x8c]
10060504:	xor    ecx,eax
10060506:	call   0x100430d7
1006050b:	mov    ecx,DWORD PTR [edx-0x4]
1006050e:	xor    ecx,eax
10060510:	call   0x100430d7
10060515:	mov    eax,0x100764d4
1006051a:	jmp    0x1005941c
1006051f:	mov    edx,DWORD PTR [esp+0x8]
10060523:	lea    eax,[edx+0xc]
10060526:	mov    ecx,DWORD PTR [edx-0x20]
10060529:	xor    ecx,eax
1006052b:	call   0x100430d7
10060530:	mov    eax,0x1007652c
10060535:	jmp    0x1005941c
1006053a:	mov    edx,DWORD PTR [esp+0x8]
1006053e:	lea    eax,[edx+0xc]
10060541:	mov    ecx,DWORD PTR [edx-0x18]
10060544:	xor    ecx,eax
10060546:	call   0x100430d7
1006054b:	mov    eax,0x10076584
10060550:	jmp    0x1005941c
10060555:	lea    esi,[ebp-0x444]
1006055b:	jmp    0x10014719
10060560:	lea    esi,[ebp-0x440]
10060566:	jmp    0x10014719
1006056b:	mov    edx,DWORD PTR [esp+0x8]
1006056f:	lea    eax,[edx-0x444]
10060575:	mov    ecx,DWORD PTR [edx-0x448]
1006057b:	xor    ecx,eax
1006057d:	call   0x100430d7
10060582:	add    eax,0xc
10060585:	mov    ecx,DWORD PTR [edx-0x8]
10060588:	xor    ecx,eax
1006058a:	call   0x100430d7
1006058f:	mov    eax,0x100765b8
10060594:	jmp    0x1005941c
10060599:	lea    esi,[ebp-0x2c]
1006059c:	jmp    0x10017a27
100605a1:	lea    esi,[ebp-0x28]
100605a4:	jmp    0x10017a27
100605a9:	mov    edx,DWORD PTR [esp+0x8]
100605ad:	lea    eax,[edx+0xc]
100605b0:	mov    ecx,DWORD PTR [edx-0x30]
100605b3:	xor    ecx,eax
100605b5:	call   0x100430d7
100605ba:	mov    eax,0x10076654
100605bf:	jmp    0x1005941c
100605c4:	lea    esi,[ebp-0x9c]
100605ca:	jmp    0x1000bdb4
100605cf:	mov    edx,DWORD PTR [esp+0x8]
100605d3:	lea    eax,[edx+0xc]
100605d6:	mov    ecx,DWORD PTR [edx-0xa4]
100605dc:	xor    ecx,eax
100605de:	call   0x100430d7
100605e3:	mov    ecx,DWORD PTR [edx-0x4]
100605e6:	xor    ecx,eax
100605e8:	call   0x100430d7
100605ed:	mov    eax,0x10076680
100605f2:	jmp    0x1005941c
100605f7:	mov    ecx,DWORD PTR [ebp+0x8]
100605fa:	jmp    0x10007f38
100605ff:	mov    ecx,DWORD PTR [ebp+0x8]
10060602:	add    ecx,0x1c
10060605:	jmp    0x10007f38
1006060a:	mov    ecx,DWORD PTR [ebp+0x8]
1006060d:	add    ecx,0x38
10060610:	jmp    0x10007f38
10060615:	mov    ecx,DWORD PTR [ebp+0x8]
10060618:	add    ecx,0x54
1006061b:	jmp    0x10007f38
10060620:	mov    ecx,DWORD PTR [ebp+0x8]
10060623:	add    ecx,0x70
10060626:	jmp    0x10007f38
1006062b:	mov    edx,DWORD PTR [esp+0x8]
1006062f:	lea    eax,[edx+0xc]
10060632:	mov    ecx,DWORD PTR [edx-0x10]
10060635:	xor    ecx,eax
10060637:	call   0x100430d7
1006063c:	mov    eax,0x100766cc
10060641:	jmp    0x1005941c
10060646:	lea    esi,[ebp-0x20]
10060649:	jmp    0x10009816
1006064e:	mov    edx,DWORD PTR [esp+0x8]
10060652:	lea    eax,[edx+0xc]
10060655:	mov    ecx,DWORD PTR [edx-0x24]
10060658:	xor    ecx,eax
1006065a:	call   0x100430d7
1006065f:	mov    eax,0x100766f8
10060664:	jmp    0x1005941c
10060669:	lea    ecx,[ebp-0x28]
1006066c:	jmp    0x10007f38
10060671:	mov    edx,DWORD PTR [esp+0x8]
10060675:	lea    eax,[edx+0xc]
10060678:	mov    ecx,DWORD PTR [edx-0x2c]
1006067b:	xor    ecx,eax
1006067d:	call   0x100430d7
10060682:	mov    eax,0x10076724
10060687:	jmp    0x1005941c
1006068c:	lea    ecx,[ebp-0x30]
1006068f:	jmp    0x10007f38
10060694:	mov    edx,DWORD PTR [esp+0x8]
10060698:	lea    eax,[edx+0xc]
1006069b:	mov    ecx,DWORD PTR [edx-0x3c]
1006069e:	xor    ecx,eax
100606a0:	call   0x100430d7
100606a5:	mov    ecx,DWORD PTR [edx-0x8]
100606a8:	xor    ecx,eax
100606aa:	call   0x100430d7
100606af:	mov    eax,0x10076784
100606b4:	jmp    0x1005941c
100606b9:	mov    edx,DWORD PTR [esp+0x8]
100606bd:	lea    eax,[edx+0xc]
100606c0:	mov    ecx,DWORD PTR [edx-0x18]
100606c3:	xor    ecx,eax
100606c5:	call   0x100430d7
100606ca:	mov    eax,0x100767dc
100606cf:	jmp    0x1005941c
100606d4:	mov    edx,DWORD PTR [esp+0x8]
100606d8:	lea    eax,[edx+0xc]
100606db:	mov    ecx,DWORD PTR [edx-0x34]
100606de:	xor    ecx,eax
100606e0:	call   0x100430d7
100606e5:	mov    eax,0x10076868
100606ea:	jmp    0x1005941c
100606ef:	mov    edx,DWORD PTR [esp+0x8]
100606f3:	lea    eax,[edx+0xc]
100606f6:	mov    ecx,DWORD PTR [edx-0x20]
100606f9:	xor    ecx,eax
100606fb:	call   0x100430d7
10060700:	mov    eax,0x100768c0
10060705:	jmp    0x1005941c
1006070a:	mov    edx,DWORD PTR [esp+0x8]
1006070e:	lea    eax,[edx+0xc]
10060711:	mov    ecx,DWORD PTR [edx-0x18]
10060714:	xor    ecx,eax
10060716:	call   0x100430d7
1006071b:	mov    eax,0x10076918
10060720:	jmp    0x1005941c
10060725:	lea    ecx,[ebp-0x44]
10060728:	jmp    0x10007f38
1006072d:	lea    ecx,[ebp-0x28]
10060730:	jmp    0x10007f38
10060735:	lea    ecx,[ebp-0x28]
10060738:	jmp    0x10007f38
1006073d:	lea    ecx,[ebp-0x44]
10060740:	jmp    0x10007f38
10060745:	lea    ecx,[ebp-0x7c]
10060748:	jmp    0x10007f38
1006074d:	lea    ecx,[ebp-0x60]
10060750:	jmp    0x10007f38
10060755:	mov    edx,DWORD PTR [esp+0x8]
10060759:	lea    eax,[edx+0xc]
1006075c:	mov    ecx,DWORD PTR [edx-0x84]
10060762:	xor    ecx,eax
10060764:	call   0x100430d7
10060769:	mov    eax,0x1007696c
1006076e:	jmp    0x1005941c
10060773:	mov    eax,DWORD PTR [ebp+0x8]
10060776:	jmp    0x10009808
1006077b:	mov    esi,DWORD PTR [ebp+0x8]
1006077e:	add    esi,0x4
10060781:	jmp    0x10009816
10060786:	mov    edx,DWORD PTR [esp+0x8]
1006078a:	lea    eax,[edx+0xc]
1006078d:	mov    ecx,DWORD PTR [edx-0x10]
10060790:	xor    ecx,eax
10060792:	call   0x100430d7
10060797:	mov    eax,0x100769a0
1006079c:	jmp    0x1005941c
100607a1:	lea    esi,[ebp-0x14]
100607a4:	jmp    0x100075ca
100607a9:	mov    edx,DWORD PTR [esp+0x8]
100607ad:	lea    eax,[edx+0xc]
100607b0:	mov    ecx,DWORD PTR [edx-0x30]
100607b3:	xor    ecx,eax
100607b5:	call   0x100430d7
100607ba:	mov    ecx,DWORD PTR [edx-0x4]
100607bd:	xor    ecx,eax
100607bf:	call   0x100430d7
100607c4:	mov    eax,0x100769cc
100607c9:	jmp    0x1005941c
100607ce:	mov    esi,DWORD PTR [ebp+0x8]
100607d1:	jmp    0x10004b4a
100607d6:	mov    edx,DWORD PTR [esp+0x8]
100607da:	lea    eax,[edx+0xc]
100607dd:	mov    ecx,DWORD PTR [edx-0x10]
100607e0:	xor    ecx,eax
100607e2:	call   0x100430d7
100607e7:	mov    eax,0x100769f8
100607ec:	jmp    0x1005941c
100607f1:	jmp    0x1000205f
100607f6:	mov    edx,DWORD PTR [esp+0x8]
100607fa:	lea    eax,[edx+0xc]
100607fd:	mov    ecx,DWORD PTR [edx-0x18]
10060800:	xor    ecx,eax
10060802:	call   0x100430d7
10060807:	mov    eax,0x10076a58
1006080c:	jmp    0x1005941c
10060811:	lea    esi,[ebp-0x38]
10060814:	jmp    0x10004b4a
10060819:	lea    esi,[ebp-0x70]
1006081c:	jmp    0x10004b4a
10060821:	lea    edi,[ebp-0x70]
10060824:	jmp    0x10004ca8
10060829:	mov    edx,DWORD PTR [esp+0x8]
1006082d:	lea    eax,[edx+0xc]
10060830:	mov    ecx,DWORD PTR [edx-0x74]
10060833:	xor    ecx,eax
10060835:	call   0x100430d7
1006083a:	mov    eax,0x10076a94
1006083f:	jmp    0x1005941c
10060844:	lea    ecx,[ebp-0x38]
10060847:	jmp    0x10007f38
1006084c:	lea    ecx,[ebp-0x70]
1006084f:	jmp    0x10007f38
10060854:	lea    esi,[ebp-0x70]
10060857:	jmp    0x10004c90
1006085c:	mov    edx,DWORD PTR [esp+0x8]
10060860:	lea    eax,[edx+0xc]
10060863:	mov    ecx,DWORD PTR [edx-0x74]
10060866:	xor    ecx,eax
10060868:	call   0x100430d7
1006086d:	mov    eax,0x10076ad0
10060872:	jmp    0x1005941c
10060877:	mov    eax,ds:0x10080c1c
1006087c:	and    eax,0xfffffffe
1006087f:	mov    ds:0x10080c1c,eax
10060884:	ret    
10060885:	mov    edx,DWORD PTR [esp+0x8]
10060889:	lea    eax,[edx+0xc]
1006088c:	mov    ecx,DWORD PTR [edx-0x10]
1006088f:	xor    ecx,eax
10060891:	call   0x100430d7
10060896:	mov    eax,0x10076afc
1006089b:	jmp    0x1005941c
100608a0:	mov    eax,ds:0x10080c38
100608a5:	and    eax,0xfffffffe
100608a8:	mov    ds:0x10080c38,eax
100608ad:	ret    
100608ae:	mov    edx,DWORD PTR [esp+0x8]
100608b2:	lea    eax,[edx+0xc]
100608b5:	mov    ecx,DWORD PTR [edx-0x10]
100608b8:	xor    ecx,eax
100608ba:	call   0x100430d7
100608bf:	mov    eax,0x10076b28
100608c4:	jmp    0x1005941c
100608c9:	lea    esi,[ebp-0x4c]
100608cc:	jmp    0x10004b4a
100608d1:	lea    esi,[ebp-0x30]
100608d4:	jmp    0x10004b4a
100608d9:	lea    ecx,[ebp-0x30]
100608dc:	jmp    0x10007f38
100608e1:	mov    edx,DWORD PTR [esp+0x8]
100608e5:	lea    eax,[edx-0x84]
100608eb:	mov    ecx,DWORD PTR [edx-0x88]
100608f1:	xor    ecx,eax
100608f3:	call   0x100430d7
100608f8:	add    eax,0xc
100608fb:	mov    ecx,DWORD PTR [edx-0x8]
100608fe:	xor    ecx,eax
10060900:	call   0x100430d7
10060905:	mov    eax,0x10076b64
1006090a:	jmp    0x1005941c
1006090f:	lea    eax,[ebp-0x10]
10060912:	jmp    0x10002078
10060917:	lea    eax,[ebp-0x14]
1006091a:	jmp    0x10002078
1006091f:	lea    edi,[ebp-0x1c]
10060922:	jmp    0x100024f2
10060927:	lea    edi,[ebp-0x20]
1006092a:	jmp    0x100024f2
1006092f:	lea    eax,[ebp-0x18]
10060932:	jmp    0x10002078
10060937:	lea    esi,[ebp-0x1c]
1006093a:	jmp    0x100046bf
1006093f:	mov    edx,DWORD PTR [esp+0x8]
10060943:	lea    eax,[edx+0xc]
10060946:	mov    ecx,DWORD PTR [edx-0x28]
10060949:	xor    ecx,eax
1006094b:	call   0x100430d7
10060950:	mov    eax,0x10076bc8
10060955:	jmp    0x1005941c
1006095a:	mov    eax,DWORD PTR [ebp+0x8]
1006095d:	jmp    0x10001238
10060962:	mov    edx,DWORD PTR [esp+0x8]
10060966:	lea    eax,[edx+0xc]
10060969:	mov    ecx,DWORD PTR [edx-0x10]
1006096c:	xor    ecx,eax
1006096e:	call   0x100430d7
10060973:	mov    eax,0x10076bf4
10060978:	jmp    0x1005941c
1006097d:	int3   
1006097e:	int3   
1006097f:	int3   
10060980:	lea    ecx,[ebp-0x2c]
10060983:	jmp    0x10007f38
10060988:	mov    eax,DWORD PTR [ebp-0x34]
1006098b:	push   eax
1006098c:	call   0x100430d2
10060991:	pop    ecx
10060992:	ret    
10060993:	mov    edx,DWORD PTR [esp+0x8]
10060997:	lea    eax,[edx-0x38]
1006099a:	mov    ecx,DWORD PTR [edx-0x3c]
1006099d:	xor    ecx,eax
1006099f:	call   0x100430d7
100609a4:	add    eax,0xc
100609a7:	mov    ecx,DWORD PTR [edx-0x4]
100609aa:	xor    ecx,eax
100609ac:	call   0x100430d7
100609b1:	mov    eax,0x10076c28
100609b6:	jmp    0x1005941c
100609bb:	int3   
100609bc:	int3   
100609bd:	int3   
100609be:	int3   
100609bf:	int3   
100609c0:	lea    eax,[ebp+0xc]
100609c3:	jmp    0x10037460
100609c8:	mov    edx,DWORD PTR [esp+0x8]
100609cc:	lea    eax,[edx-0x14]
100609cf:	mov    ecx,DWORD PTR [edx-0x18]
100609d2:	xor    ecx,eax
100609d4:	call   0x100430d7
100609d9:	mov    eax,0x10076c54
100609de:	jmp    0x1005941c
100609e3:	int3   
100609e4:	int3   
100609e5:	int3   
100609e6:	int3   
100609e7:	int3   
100609e8:	int3   
100609e9:	int3   
100609ea:	int3   
100609eb:	int3   
100609ec:	int3   
100609ed:	int3   
100609ee:	int3   
100609ef:	int3   
100609f0:	lea    esi,[ebp-0x14]
100609f3:	jmp    0x100075ca
100609f8:	mov    eax,DWORD PTR [ebp-0x1c]
100609fb:	and    eax,0x1
100609fe:	je     0x10060a10
10060a04:	and    DWORD PTR [ebp-0x1c],0xfffffffe
10060a08:	lea    ecx,[ebp-0x58]
10060a0b:	jmp    0x10007f38
10060a10:	ret    
10060a11:	mov    eax,DWORD PTR [ebp-0x1c]
10060a14:	and    eax,0x2
10060a17:	je     0x10060a29
10060a1d:	and    DWORD PTR [ebp-0x1c],0xfffffffd
10060a21:	lea    ecx,[ebp-0x3c]
10060a24:	jmp    0x10007f38
10060a29:	ret    
10060a2a:	mov    edx,DWORD PTR [esp+0x8]
10060a2e:	lea    eax,[edx+0xc]
10060a31:	mov    ecx,DWORD PTR [edx-0x5c]
10060a34:	xor    ecx,eax
10060a36:	call   0x100430d7
10060a3b:	mov    ecx,DWORD PTR [edx-0x4]
10060a3e:	xor    ecx,eax
10060a40:	call   0x100430d7
10060a45:	mov    eax,0x10076c90
10060a4a:	jmp    0x1005941c
10060a4f:	int3   
10060a50:	lea    esi,[ebp+0x0]
10060a53:	jmp    0x1000be1c
10060a58:	lea    eax,[ebp-0x10]
10060a5b:	jmp    0x100020a1
10060a60:	mov    edx,DWORD PTR [esp+0x8]
10060a64:	lea    eax,[edx+0xc]
10060a67:	mov    ecx,DWORD PTR [edx-0x60]
10060a6a:	xor    ecx,eax
10060a6c:	call   0x100430d7
10060a71:	mov    ecx,DWORD PTR [edx+0xa0]
10060a77:	xor    ecx,eax
10060a79:	call   0x100430d7
10060a7e:	mov    eax,0x10076cc4
10060a83:	jmp    0x1005941c
10060a88:	int3   
10060a89:	int3   
10060a8a:	int3   
10060a8b:	int3   
10060a8c:	int3   
10060a8d:	int3   
10060a8e:	int3   
10060a8f:	int3   
10060a90:	lea    eax,[ebp-0x60]
10060a93:	jmp    0x100020a1
10060a98:	lea    esi,[ebp-0x3c]
10060a9b:	jmp    0x100346f0
10060aa0:	lea    esi,[ebp-0x3c]
10060aa3:	jmp    0x100346f0
10060aa8:	lea    esi,[ebp-0x34]
10060aab:	jmp    0x100346f0
10060ab0:	lea    eax,[ebp-0x44]
10060ab3:	jmp    0x100020a1
10060ab8:	mov    edx,DWORD PTR [esp+0x8]
10060abc:	lea    eax,[edx+0xc]
10060abf:	mov    ecx,DWORD PTR [edx-0x64]
10060ac2:	xor    ecx,eax
10060ac4:	call   0x100430d7
10060ac9:	mov    ecx,DWORD PTR [edx-0x4]
10060acc:	xor    ecx,eax
10060ace:	call   0x100430d7
10060ad3:	mov    eax,0x10076d10
10060ad8:	jmp    0x1005941c
10060add:	int3   
10060ade:	int3   
10060adf:	int3   
10060ae0:	lea    eax,[ebp-0xa0]
10060ae6:	jmp    0x10034580
10060aeb:	lea    eax,[ebp-0x98]
10060af1:	jmp    0x10034580
10060af6:	lea    ecx,[ebp-0x4c]
10060af9:	jmp    0x10007f38
10060afe:	lea    eax,[ebp-0x9c]
10060b04:	jmp    0x10034580
10060b09:	lea    eax,[ebp-0x94]
10060b0f:	jmp    0x10034580
10060b14:	lea    eax,[ebp-0xa4]
10060b1a:	jmp    0x10034580
10060b1f:	lea    eax,[ebp-0x90]
10060b25:	jmp    0x10034580
10060b2a:	lea    eax,[ebp-0x90]
10060b30:	jmp    0x10034580
10060b35:	mov    edx,DWORD PTR [esp+0x8]
10060b39:	lea    eax,[edx-0xb0]
10060b3f:	mov    ecx,DWORD PTR [edx-0xb4]
10060b45:	xor    ecx,eax
10060b47:	call   0x100430d7
10060b4c:	add    eax,0x10
10060b4f:	mov    ecx,DWORD PTR [edx-0x4]
10060b52:	xor    ecx,eax
10060b54:	call   0x100430d7
10060b59:	mov    eax,0x10076d78
10060b5e:	jmp    0x1005941c
10060b63:	mov    edx,DWORD PTR [esp+0x8]
10060b67:	lea    eax,[edx+0xc]
10060b6a:	mov    ecx,DWORD PTR [edx-0x1c]
10060b6d:	xor    ecx,eax
10060b6f:	call   0x100430d7
10060b74:	mov    eax,0x10076dd0
10060b79:	jmp    0x1005941c
10060b7e:	mov    edx,DWORD PTR [esp+0x8]
10060b82:	lea    eax,[edx+0xc]
10060b85:	mov    ecx,DWORD PTR [edx-0x1c]
10060b88:	xor    ecx,eax
10060b8a:	call   0x100430d7
10060b8f:	mov    eax,0x10076e28
10060b94:	jmp    0x1005941c
10060b99:	mov    eax,DWORD PTR [ebp-0x30]
10060b9c:	and    eax,0x1
10060b9f:	je     0x10060bb1
10060ba5:	and    DWORD PTR [ebp-0x30],0xfffffffe
10060ba9:	mov    ecx,DWORD PTR [ebp-0x28]
10060bac:	jmp    0x10007f38
10060bb1:	ret    
10060bb2:	lea    ecx,[ebp-0x40]
10060bb5:	jmp    0x1002258a
10060bba:	lea    ecx,[ebp-0x50]
10060bbd:	jmp    0x1002258a
10060bc2:	lea    eax,[ebp-0x18]
10060bc5:	jmp    0x10012625
10060bca:	lea    edi,[ebp-0x20]
10060bcd:	jmp    0x100024f2
10060bd2:	mov    edx,DWORD PTR [esp+0x8]
10060bd6:	lea    eax,[edx+0xc]
10060bd9:	mov    ecx,DWORD PTR [edx-0x54]
10060bdc:	xor    ecx,eax
10060bde:	call   0x100430d7
10060be3:	mov    ecx,DWORD PTR [edx+0x40c]
10060be9:	xor    ecx,eax
10060beb:	call   0x100430d7
10060bf0:	mov    eax,0x10076e74
10060bf5:	jmp    0x1005941c
10060bfa:	lea    ecx,[ebp-0x20]
10060bfd:	jmp    0x1002258a
10060c02:	lea    eax,[ebp-0x38]
10060c05:	jmp    0x1002b4ce
10060c0a:	lea    ecx,[ebp-0x38]
10060c0d:	jmp    0x1002258a
10060c12:	mov    edx,DWORD PTR [esp+0x8]
10060c16:	lea    eax,[edx-0x3c]
10060c19:	mov    ecx,DWORD PTR [edx-0x40]
10060c1c:	xor    ecx,eax
10060c1e:	call   0x100430d7
10060c23:	mov    eax,0x10076eb0
10060c28:	jmp    0x1005941c
10060c2d:	mov    ecx,DWORD PTR [ebp+0x8]
10060c30:	jmp    0x10007f38
10060c35:	lea    ecx,[ebp-0x28]
10060c38:	jmp    0x10007f38
10060c3d:	mov    edx,DWORD PTR [esp+0x8]
10060c41:	lea    eax,[edx+0xc]
10060c44:	mov    ecx,DWORD PTR [edx-0x30]
10060c47:	xor    ecx,eax
10060c49:	call   0x100430d7
10060c4e:	mov    eax,0x10076ee4
10060c53:	jmp    0x1005941c
10060c58:	mov    edx,DWORD PTR [esp+0x8]
10060c5c:	lea    eax,[edx+0xc]
10060c5f:	mov    ecx,DWORD PTR [edx-0x28]
10060c62:	xor    ecx,eax
10060c64:	call   0x100430d7
10060c69:	mov    eax,0x10076f3c
10060c6e:	jmp    0x1005941c
10060c73:	mov    edx,DWORD PTR [esp+0x8]
10060c77:	lea    eax,[edx+0xc]
10060c7a:	mov    ecx,DWORD PTR [edx-0x28]
10060c7d:	xor    ecx,eax
10060c7f:	call   0x100430d7
10060c84:	mov    eax,0x10076f94
10060c89:	jmp    0x1005941c
10060c8e:	mov    edx,DWORD PTR [esp+0x8]
10060c92:	lea    eax,[edx+0xc]
10060c95:	mov    ecx,DWORD PTR [edx-0x28]
10060c98:	xor    ecx,eax
10060c9a:	call   0x100430d7
10060c9f:	mov    eax,0x10076fec
10060ca4:	jmp    0x1005941c
10060ca9:	mov    edx,DWORD PTR [esp+0x8]
10060cad:	lea    eax,[edx+0xc]
10060cb0:	mov    ecx,DWORD PTR [edx-0x28]
10060cb3:	xor    ecx,eax
10060cb5:	call   0x100430d7
10060cba:	mov    eax,0x10077044
10060cbf:	jmp    0x1005941c
10060cc4:	lea    eax,[ebp-0x28]
10060cc7:	jmp    0x10026e8c
10060ccc:	lea    eax,[ebp-0x28]
10060ccf:	jmp    0x10026e8c
10060cd4:	lea    eax,[ebp-0x28]
10060cd7:	jmp    0x10026e8c
10060cdc:	push   DWORD PTR [ebp-0x30]
10060cdf:	call   0x100430d2
10060ce4:	pop    ecx
10060ce5:	ret    
10060ce6:	lea    eax,[ebp-0x1c]
10060ce9:	jmp    0x10026e8c
10060cee:	mov    edx,DWORD PTR [esp+0x8]
10060cf2:	lea    eax,[edx-0x34]
10060cf5:	mov    ecx,DWORD PTR [edx-0x38]
10060cf8:	xor    ecx,eax
10060cfa:	call   0x100430d7
10060cff:	mov    eax,0x10077090
10060d04:	jmp    0x1005941c
10060d09:	mov    eax,DWORD PTR [ebp-0x10]
10060d0c:	add    eax,0x8
10060d0f:	jmp    0x10012625
10060d14:	mov    eax,DWORD PTR [ebp-0x10]
10060d17:	add    eax,0xc
10060d1a:	jmp    0x10012625
10060d1f:	mov    eax,DWORD PTR [ebp-0x10]
10060d22:	add    eax,0x10
10060d25:	jmp    0x100245a5
10060d2a:	mov    edx,DWORD PTR [esp+0x8]
10060d2e:	lea    eax,[edx+0xc]
10060d31:	mov    ecx,DWORD PTR [edx-0x14]
10060d34:	xor    ecx,eax
10060d36:	call   0x100430d7
10060d3b:	mov    eax,0x100770cc
10060d40:	jmp    0x1005941c
10060d45:	lea    eax,[ebp-0x4c]
10060d48:	jmp    0x10024443
10060d4d:	lea    eax,[ebp-0x54]
10060d50:	jmp    0x10012625
10060d55:	lea    edi,[ebp-0x50]
10060d58:	jmp    0x100024f2
10060d5d:	mov    edx,DWORD PTR [esp+0x8]
10060d61:	lea    eax,[edx-0x54]
10060d64:	mov    ecx,DWORD PTR [edx-0x58]
10060d67:	xor    ecx,eax
10060d69:	call   0x100430d7
10060d6e:	mov    eax,0x10077108
10060d73:	jmp    0x1005941c
10060d78:	mov    eax,DWORD PTR [ebp-0x10]
10060d7b:	add    eax,0x8
10060d7e:	jmp    0x10012625
10060d83:	mov    eax,DWORD PTR [ebp-0x10]
10060d86:	add    eax,0xc
10060d89:	jmp    0x10012625
10060d8e:	mov    edx,DWORD PTR [esp+0x8]
10060d92:	lea    eax,[edx+0xc]
10060d95:	mov    ecx,DWORD PTR [edx-0x14]
10060d98:	xor    ecx,eax
10060d9a:	call   0x100430d7
10060d9f:	mov    eax,0x1007713c
10060da4:	jmp    0x1005941c
10060da9:	mov    edx,DWORD PTR [esp+0x8]
10060dad:	lea    eax,[edx+0xc]
10060db0:	mov    ecx,DWORD PTR [edx-0x1c]
10060db3:	xor    ecx,eax
10060db5:	call   0x100430d7
10060dba:	mov    eax,0x10077194
10060dbf:	jmp    0x1005941c
10060dc4:	lea    esi,[ebp-0x30]
10060dc7:	jmp    0x10004b4a
10060dcc:	lea    esi,[ebp-0x5c]
10060dcf:	jmp    0x10004b4a
10060dd4:	mov    edx,DWORD PTR [esp+0x8]
10060dd8:	lea    eax,[edx-0x6c]
10060ddb:	mov    ecx,DWORD PTR [edx-0x70]
10060dde:	xor    ecx,eax
10060de0:	call   0x100430d7
10060de5:	add    eax,0xc
10060de8:	mov    ecx,DWORD PTR [edx-0x8]
10060deb:	xor    ecx,eax
10060ded:	call   0x100430d7
10060df2:	mov    eax,0x100771c8
10060df7:	jmp    0x1005941c
10060dfc:	lea    esi,[ebp-0x40]
10060dff:	jmp    0x10004b4a
10060e04:	lea    esi,[ebp-0x6c]
10060e07:	jmp    0x10004b4a
10060e0c:	mov    edx,DWORD PTR [esp+0x8]
10060e10:	lea    eax,[edx-0x7c]
10060e13:	mov    ecx,DWORD PTR [edx-0x80]
10060e16:	xor    ecx,eax
10060e18:	call   0x100430d7
10060e1d:	add    eax,0xc
10060e20:	mov    ecx,DWORD PTR [edx-0x8]
10060e23:	xor    ecx,eax
10060e25:	call   0x100430d7
10060e2a:	mov    eax,0x100771fc
10060e2f:	jmp    0x1005941c
10060e34:	mov    edx,DWORD PTR [esp+0x8]
10060e38:	lea    eax,[edx+0xc]
10060e3b:	mov    ecx,DWORD PTR [edx-0x24]
10060e3e:	xor    ecx,eax
10060e40:	call   0x100430d7
10060e45:	mov    eax,0x10077254
10060e4a:	jmp    0x1005941c
10060e4f:	mov    edx,DWORD PTR [esp+0x8]
10060e53:	lea    eax,[edx+0xc]
10060e56:	mov    ecx,DWORD PTR [edx-0x14]
10060e59:	xor    ecx,eax
10060e5b:	call   0x100430d7
10060e60:	mov    eax,0x100772ac
10060e65:	jmp    0x1005941c
10060e6a:	lea    eax,[ebp-0x1c]
10060e6d:	jmp    0x1001b147
10060e72:	mov    edx,DWORD PTR [esp+0x8]
10060e76:	lea    eax,[edx+0xc]
10060e79:	mov    ecx,DWORD PTR [edx-0x24]
10060e7c:	xor    ecx,eax
10060e7e:	call   0x100430d7
10060e83:	mov    eax,0x100772d8
10060e88:	jmp    0x1005941c
10060e8d:	lea    ecx,[ebp+0x24]
10060e90:	jmp    0x1000119e
10060e95:	lea    ecx,[ebp+0x8]
10060e98:	jmp    0x10007f38
10060e9d:	mov    ecx,DWORD PTR [ebp-0x10]
10060ea0:	jmp    0x10007f38
10060ea5:	mov    edx,DWORD PTR [esp+0x8]
10060ea9:	lea    eax,[edx+0xc]
10060eac:	mov    ecx,DWORD PTR [edx-0x18]
10060eaf:	xor    ecx,eax
10060eb1:	call   0x100430d7
10060eb6:	mov    eax,0x10077314
10060ebb:	jmp    0x1005941c
10060ec0:	jmp    0x1000205f
10060ec5:	mov    edx,DWORD PTR [esp+0x8]
10060ec9:	lea    eax,[edx+0xc]
10060ecc:	mov    ecx,DWORD PTR [edx-0x18]
10060ecf:	xor    ecx,eax
10060ed1:	call   0x100430d7
10060ed6:	mov    eax,0x10077374
10060edb:	jmp    0x1005941c
10060ee0:	mov    edx,DWORD PTR [esp+0x8]
10060ee4:	lea    eax,[edx+0xc]
10060ee7:	mov    ecx,DWORD PTR [edx-0x24]
10060eea:	xor    ecx,eax
10060eec:	call   0x100430d7
10060ef1:	mov    eax,0x100773cc
10060ef6:	jmp    0x1005941c
10060efb:	mov    edx,DWORD PTR [esp+0x8]
10060eff:	lea    eax,[edx+0xc]
10060f02:	mov    ecx,DWORD PTR [edx-0x18]
10060f05:	xor    ecx,eax
10060f07:	call   0x100430d7
10060f0c:	mov    eax,0x10077424
10060f11:	jmp    0x1005941c
10060f16:	lea    eax,[ebp-0x1c]
10060f19:	jmp    0x10019710
10060f1e:	mov    edx,DWORD PTR [esp+0x8]
10060f22:	lea    eax,[edx-0x1c]
10060f25:	mov    ecx,DWORD PTR [edx-0x20]
10060f28:	xor    ecx,eax
10060f2a:	call   0x100430d7
10060f2f:	mov    eax,0x10077450
10060f34:	jmp    0x1005941c
10060f39:	lea    esi,[ebp-0x10]
10060f3c:	jmp    0x100075ca
10060f41:	mov    edx,DWORD PTR [esp+0x8]
10060f45:	lea    eax,[edx+0xc]
10060f48:	mov    ecx,DWORD PTR [edx-0x14]
10060f4b:	xor    ecx,eax
10060f4d:	call   0x100430d7
10060f52:	mov    eax,0x1007747c
10060f57:	jmp    0x1005941c
10060f5c:	lea    esi,[ebp+0x24]
10060f5f:	jmp    0x100133d3
10060f64:	lea    ecx,[ebp+0x8]
10060f67:	jmp    0x10007f38
10060f6c:	mov    ecx,DWORD PTR [ebp-0x10]
10060f6f:	jmp    0x10007f38
10060f74:	mov    edx,DWORD PTR [esp+0x8]
10060f78:	lea    eax,[edx+0xc]
10060f7b:	mov    ecx,DWORD PTR [edx-0x18]
10060f7e:	xor    ecx,eax
10060f80:	call   0x100430d7
10060f85:	mov    eax,0x100774b8
10060f8a:	jmp    0x1005941c
10060f8f:	jmp    0x1000205f
10060f94:	mov    edx,DWORD PTR [esp+0x8]
10060f98:	lea    eax,[edx+0xc]
10060f9b:	mov    ecx,DWORD PTR [edx-0x18]
10060f9e:	xor    ecx,eax
10060fa0:	call   0x100430d7
10060fa5:	mov    eax,0x10077518
10060faa:	jmp    0x1005941c
10060faf:	lea    ecx,[ebp-0x30]
10060fb2:	jmp    0x10007f38
10060fb7:	mov    edx,DWORD PTR [esp+0x8]
10060fbb:	lea    eax,[edx+0xc]
10060fbe:	mov    ecx,DWORD PTR [edx-0x5c]
10060fc1:	xor    ecx,eax
10060fc3:	call   0x100430d7
10060fc8:	mov    eax,0x10077544
10060fcd:	jmp    0x1005941c
10060fd2:	lea    ecx,[ebp-0x34]
10060fd5:	jmp    0x10007f38
10060fda:	lea    esi,[ebp-0x28]
10060fdd:	jmp    0x10009816
10060fe2:	lea    ecx,[ebp-0x50]
10060fe5:	jmp    0x10007f38
10060fea:	mov    edx,DWORD PTR [esp+0x8]
10060fee:	lea    eax,[edx+0xc]
10060ff1:	mov    ecx,DWORD PTR [edx-0x54]
10060ff4:	xor    ecx,eax
10060ff6:	call   0x100430d7
10060ffb:	mov    eax,0x10077580
10061000:	jmp    0x1005941c
10061005:	lea    edi,[ebp+0x8]
10061008:	jmp    0x100024f2
1006100d:	lea    ecx,[ebp-0x28]
10061010:	jmp    0x10007f38
10061015:	mov    edx,DWORD PTR [esp+0x8]
10061019:	lea    eax,[edx+0xc]
1006101c:	mov    ecx,DWORD PTR [edx-0x2c]
1006101f:	xor    ecx,eax
10061021:	call   0x100430d7
10061026:	mov    eax,0x100775b4
1006102b:	jmp    0x1005941c
10061030:	lea    ecx,[ebp-0x30]
10061033:	jmp    0x10007f38
10061038:	mov    edx,DWORD PTR [esp+0x8]
1006103c:	lea    eax,[edx+0xc]
1006103f:	mov    ecx,DWORD PTR [edx-0x40]
10061042:	xor    ecx,eax
10061044:	call   0x100430d7
10061049:	mov    ecx,DWORD PTR [edx-0x8]
1006104c:	xor    ecx,eax
1006104e:	call   0x100430d7
10061053:	mov    eax,0x10077648
10061058:	jmp    0x1005941c
1006105d:	mov    edx,DWORD PTR [esp+0x8]
10061061:	lea    eax,[edx+0xc]
10061064:	mov    ecx,DWORD PTR [edx-0x20]
10061067:	xor    ecx,eax
10061069:	call   0x100430d7
1006106e:	mov    eax,0x100776a0
10061073:	jmp    0x1005941c
10061078:	push   DWORD PTR [ebp-0x14]
1006107b:	call   0x100430d2
10061080:	pop    ecx
10061081:	ret    
10061082:	mov    eax,DWORD PTR [ebp-0x10]
10061085:	and    eax,0x1
10061088:	je     0x1006109a
1006108e:	and    DWORD PTR [ebp-0x10],0xfffffffe
10061092:	mov    eax,DWORD PTR [ebp+0x8]
10061095:	jmp    0x10009c4e
1006109a:	ret    
1006109b:	push   DWORD PTR [ebp-0x14]
1006109e:	call   0x100430d2
100610a3:	pop    ecx
100610a4:	ret    
100610a5:	mov    edx,DWORD PTR [esp+0x8]
100610a9:	lea    eax,[edx+0xc]
100610ac:	mov    ecx,DWORD PTR [edx-0x18]
100610af:	xor    ecx,eax
100610b1:	call   0x100430d7
100610b6:	mov    eax,0x100776dc
100610bb:	jmp    0x1005941c
100610c0:	lea    eax,[ebp-0x10]
100610c3:	jmp    0x10009c4e
100610c8:	mov    edx,DWORD PTR [esp+0x8]
100610cc:	lea    eax,[edx+0xc]
100610cf:	mov    ecx,DWORD PTR [edx-0x18]
100610d2:	xor    ecx,eax
100610d4:	call   0x100430d7
100610d9:	mov    eax,0x10077708
100610de:	jmp    0x1005941c
100610e3:	lea    edi,[ebp+0xc]
100610e6:	jmp    0x100024f2
100610eb:	lea    ecx,[ebp-0x28]
100610ee:	jmp    0x10007f38
100610f3:	lea    ecx,[ebp-0x44]
100610f6:	jmp    0x10007f38
100610fb:	mov    edx,DWORD PTR [esp+0x8]
100610ff:	lea    eax,[edx+0xc]
10061102:	mov    ecx,DWORD PTR [edx-0x48]
10061105:	xor    ecx,eax
10061107:	call   0x100430d7
1006110c:	mov    eax,0x10077744
10061111:	jmp    0x1005941c
10061116:	lea    esi,[ebp+0x24]
10061119:	jmp    0x10009816
1006111e:	lea    ecx,[ebp+0x8]
10061121:	jmp    0x10007f38
10061126:	mov    ecx,DWORD PTR [ebp-0x10]
10061129:	jmp    0x10007f38
1006112e:	mov    edx,DWORD PTR [esp+0x8]
10061132:	lea    eax,[edx+0xc]
10061135:	mov    ecx,DWORD PTR [edx-0x18]
10061138:	xor    ecx,eax
1006113a:	call   0x100430d7
1006113f:	mov    eax,0x10077780
10061144:	jmp    0x1005941c
10061149:	mov    ecx,DWORD PTR [ebp+0x8]
1006114c:	jmp    0x10007f38
10061151:	mov    edx,DWORD PTR [esp+0x8]
10061155:	lea    eax,[edx+0xc]
10061158:	mov    ecx,DWORD PTR [edx-0x10]
1006115b:	xor    ecx,eax
1006115d:	call   0x100430d7
10061162:	mov    eax,0x100777ac
10061167:	jmp    0x1005941c
1006116c:	jmp    0x1000205f
10061171:	mov    edx,DWORD PTR [esp+0x8]
10061175:	lea    eax,[edx+0xc]
10061178:	mov    ecx,DWORD PTR [edx-0x1c]
1006117b:	xor    ecx,eax
1006117d:	call   0x100430d7
10061182:	mov    eax,0x1007780c
10061187:	jmp    0x1005941c
1006118c:	mov    esi,DWORD PTR [ebp+0x8]
1006118f:	jmp    0x100046bf
10061194:	mov    esi,DWORD PTR [ebp+0x8]
10061197:	add    esi,0x4
1006119a:	jmp    0x1000cab6
1006119f:	mov    esi,DWORD PTR [ebp+0x8]
100611a2:	add    esi,0x8
100611a5:	jmp    0x1000cac7
100611aa:	mov    eax,DWORD PTR [ebp+0x8]
100611ad:	add    eax,0xc
100611b0:	jmp    0x100260a4
100611b5:	mov    edx,DWORD PTR [esp+0x8]
100611b9:	lea    eax,[edx+0xc]
100611bc:	mov    ecx,DWORD PTR [edx-0x10]
100611bf:	xor    ecx,eax
100611c1:	call   0x100430d7
100611c6:	mov    eax,0x10077850
100611cb:	jmp    0x1005941c
100611d0:	mov    eax,DWORD PTR [ebp-0x58]
100611d3:	and    eax,0x1
100611d6:	je     0x100611e8
100611dc:	and    DWORD PTR [ebp-0x58],0xfffffffe
100611e0:	mov    ecx,DWORD PTR [ebp-0x5c]
100611e3:	jmp    0x10007f38
100611e8:	ret    
100611e9:	mov    edx,DWORD PTR [esp+0x8]
100611ed:	lea    eax,[edx+0xc]
100611f0:	mov    ecx,DWORD PTR [edx-0x60]
100611f3:	xor    ecx,eax
100611f5:	call   0x100430d7
100611fa:	mov    ecx,DWORD PTR [edx-0x4]
100611fd:	xor    ecx,eax
100611ff:	call   0x100430d7
10061204:	mov    eax,0x1007787c
10061209:	jmp    0x1005941c
1006120e:	lea    esi,[ebp-0x18]
10061211:	jmp    0x1000aae1
10061216:	mov    edx,DWORD PTR [esp+0x8]
1006121a:	lea    eax,[edx+0xc]
1006121d:	mov    ecx,DWORD PTR [edx-0x15c]
10061223:	xor    ecx,eax
10061225:	call   0x100430d7
1006122a:	mov    eax,0x100778a8
1006122f:	jmp    0x1005941c
10061234:	jmp    0x10037b60
10061239:	mov    edx,DWORD PTR [esp+0x8]
1006123d:	lea    eax,[edx-0x14]
10061240:	mov    ecx,DWORD PTR [edx-0x18]
10061243:	xor    ecx,eax
10061245:	call   0x100430d7
1006124a:	mov    eax,0x100778d4
1006124f:	jmp    0x1005941c
10061254:	mov    eax,DWORD PTR [ebp-0x68]
10061257:	and    eax,0x1
1006125a:	je     0x1006126c
10061260:	and    DWORD PTR [ebp-0x68],0xfffffffe
10061264:	lea    ecx,[ebp-0x4c]
10061267:	jmp    0x10007f38
1006126c:	ret    
1006126d:	lea    esi,[ebp-0x68]
10061270:	jmp    0x1000aae1
10061275:	lea    ecx,[ebp-0x4c]
10061278:	jmp    0x10007f38
1006127d:	lea    ecx,[ebp-0x30]
10061280:	jmp    0x10007f38
10061285:	mov    edx,DWORD PTR [esp+0x8]
10061289:	lea    eax,[edx-0x6c]
1006128c:	mov    ecx,DWORD PTR [edx-0x70]
1006128f:	xor    ecx,eax
10061291:	call   0x100430d7
10061296:	add    eax,0xc
10061299:	mov    ecx,DWORD PTR [edx-0x8]
1006129c:	xor    ecx,eax
1006129e:	call   0x100430d7
100612a3:	mov    eax,0x10077920
100612a8:	jmp    0x1005941c
100612ad:	mov    eax,DWORD PTR [ebp-0xc8]
100612b3:	and    eax,0x1
100612b6:	je     0x100612ce
100612bc:	and    DWORD PTR [ebp-0xc8],0xfffffffe
100612c3:	lea    ecx,[ebp-0xc0]
100612c9:	jmp    0x10007f38
100612ce:	ret    
100612cf:	lea    esi,[ebp-0xc8]
100612d5:	jmp    0x1000aae1
100612da:	lea    ecx,[ebp-0x88]
100612e0:	jmp    0x10007f38
100612e5:	lea    ecx,[ebp-0x30]
100612e8:	jmp    0x10007f38
100612ed:	lea    esi,[ebp-0xa0]
100612f3:	jmp    0x10009816
100612f8:	mov    esi,DWORD PTR [ebp-0xc4]
100612fe:	jmp    0x10009816
10061303:	lea    edi,[ebp-0x5c]
10061306:	jmp    0x1000c876
1006130b:	lea    ecx,[ebp-0x88]
10061311:	jmp    0x10007f38
10061316:	lea    edi,[ebp-0x88]
1006131c:	jmp    0x1000c876
10061321:	mov    edx,DWORD PTR [esp+0x8]
10061325:	lea    eax,[edx-0xcc]
1006132b:	mov    ecx,DWORD PTR [edx-0xd0]
10061331:	xor    ecx,eax
10061333:	call   0x100430d7
10061338:	add    eax,0xc
1006133b:	mov    ecx,DWORD PTR [edx-0x8]
1006133e:	xor    ecx,eax
10061340:	call   0x100430d7
10061345:	mov    eax,0x10077998
1006134a:	jmp    0x1005941c
1006134f:	mov    esi,DWORD PTR [ebp-0x10]
10061352:	jmp    0x100046bf
10061357:	mov    esi,DWORD PTR [ebp-0x10]
1006135a:	add    esi,0x4
1006135d:	jmp    0x100046bf
10061362:	mov    edx,DWORD PTR [esp+0x8]
10061366:	lea    eax,[edx+0xc]
10061369:	mov    ecx,DWORD PTR [edx-0x14]
1006136c:	xor    ecx,eax
1006136e:	call   0x100430d7
10061373:	mov    eax,0x100779cc
10061378:	jmp    0x1005941c
1006137d:	mov    edx,DWORD PTR [esp+0x8]
10061381:	lea    eax,[edx+0xc]
10061384:	mov    ecx,DWORD PTR [edx-0x18]
10061387:	xor    ecx,eax
10061389:	call   0x100430d7
1006138e:	mov    eax,0x10077a24
10061393:	jmp    0x1005941c
10061398:	lea    ecx,[ebp-0x38]
1006139b:	jmp    0x10007f38
100613a0:	mov    edx,DWORD PTR [esp+0x8]
100613a4:	lea    eax,[edx+0xc]
100613a7:	mov    ecx,DWORD PTR [edx-0x44]
100613aa:	xor    ecx,eax
100613ac:	call   0x100430d7
100613b1:	mov    ecx,DWORD PTR [edx-0x8]
100613b4:	xor    ecx,eax
100613b6:	call   0x100430d7
100613bb:	mov    eax,0x10077ab8
100613c0:	jmp    0x1005941c
100613c5:	mov    edx,DWORD PTR [esp+0x8]
100613c9:	lea    eax,[edx+0xc]
100613cc:	mov    ecx,DWORD PTR [edx-0x20]
100613cf:	xor    ecx,eax
100613d1:	call   0x100430d7
100613d6:	mov    eax,0x10077b10
100613db:	jmp    0x1005941c
100613e0:	lea    esi,[ebp-0x18]
100613e3:	jmp    0x100075ca
100613e8:	mov    edx,DWORD PTR [esp+0x8]
100613ec:	lea    eax,[edx+0xc]
100613ef:	mov    ecx,DWORD PTR [edx-0x1c]
100613f2:	xor    ecx,eax
100613f4:	call   0x100430d7
100613f9:	mov    eax,0x10077b3c
100613fe:	jmp    0x1005941c
10061403:	lea    ecx,[ebp-0x4c]
10061406:	jmp    0x10007f38
1006140b:	lea    ecx,[ebp-0x30]
1006140e:	jmp    0x10007f38
10061413:	lea    ecx,[ebp-0x30]
10061416:	jmp    0x10007f38
1006141b:	mov    edx,DWORD PTR [esp+0x8]
1006141f:	lea    eax,[edx-0x84]
10061425:	mov    ecx,DWORD PTR [edx-0x88]
1006142b:	xor    ecx,eax
1006142d:	call   0x100430d7
10061432:	add    eax,0xc
10061435:	mov    ecx,DWORD PTR [edx-0x8]
10061438:	xor    ecx,eax
1006143a:	call   0x100430d7
1006143f:	mov    eax,0x10077b78
10061444:	jmp    0x1005941c
10061449:	int3   
1006144a:	int3   
1006144b:	int3   
1006144c:	int3   
1006144d:	int3   
1006144e:	int3   
1006144f:	int3   
10061450:	mov    eax,DWORD PTR [ebp-0x24]
10061453:	and    eax,0x1
10061456:	je     0x10061468
1006145c:	and    DWORD PTR [ebp-0x24],0xfffffffe
10061460:	mov    ecx,DWORD PTR [ebp-0x20]
10061463:	jmp    0x10007f38
10061468:	ret    
10061469:	mov    edx,DWORD PTR [esp+0x8]
1006146d:	lea    eax,[edx-0x20]
10061470:	mov    ecx,DWORD PTR [edx-0x24]
10061473:	xor    ecx,eax
10061475:	call   0x100430d7
1006147a:	add    eax,0x8
1006147d:	mov    ecx,DWORD PTR [edx-0x4]
10061480:	xor    ecx,eax
10061482:	call   0x100430d7
10061487:	mov    eax,0x10077ba4
1006148c:	jmp    0x1005941c
10061491:	int3   
10061492:	int3   
10061493:	int3   
10061494:	int3   
10061495:	int3   
10061496:	int3   
10061497:	int3   
10061498:	int3   
10061499:	int3   
1006149a:	int3   
1006149b:	int3   
1006149c:	int3   
1006149d:	int3   
1006149e:	int3   
1006149f:	int3   
100614a0:	lea    edi,[ebp-0x3c]
100614a3:	jmp    0x100024f2
100614a8:	lea    edi,[ebp-0x44]
100614ab:	jmp    0x100024f2
100614b0:	lea    edi,[ebp-0x38]
100614b3:	jmp    0x100024f2
100614b8:	lea    edi,[ebp-0x44]
100614bb:	jmp    0x100024f2
100614c0:	lea    edi,[ebp-0x48]
100614c3:	jmp    0x100024f2
100614c8:	lea    ecx,[ebp-0x20]
100614cb:	jmp    0x1002258a
100614d0:	mov    edx,DWORD PTR [esp+0x8]
100614d4:	lea    eax,[edx-0x5c]
100614d7:	mov    ecx,DWORD PTR [edx-0x60]
100614da:	xor    ecx,eax
100614dc:	call   0x100430d7
100614e1:	mov    eax,0x10077bf8
100614e6:	jmp    0x1005941c
100614eb:	int3   
100614ec:	int3   
100614ed:	int3   
100614ee:	int3   
100614ef:	int3   
100614f0:	lea    eax,[ebp-0x14]
100614f3:	jmp    0x10002078
100614f8:	lea    ecx,[ebp-0x30]
100614fb:	jmp    0x10007f38
10061500:	mov    edx,DWORD PTR [esp+0x8]
10061504:	lea    eax,[edx+0xc]
10061507:	mov    ecx,DWORD PTR [edx-0x48]
1006150a:	xor    ecx,eax
1006150c:	call   0x100430d7
10061511:	mov    ecx,DWORD PTR [edx+0x195c]
10061517:	xor    ecx,eax
10061519:	call   0x100430d7
1006151e:	mov    eax,0x10077c2c
10061523:	jmp    0x1005941c
10061528:	int3   
10061529:	int3   
1006152a:	int3   
1006152b:	int3   
1006152c:	int3   
1006152d:	int3   
1006152e:	int3   
1006152f:	int3   
10061530:	lea    esi,[ebp-0x30]
10061533:	jmp    0x10014719
10061538:	lea    eax,[ebp-0x40]
1006153b:	jmp    0x10002078
10061540:	lea    eax,[ebp-0x2c]
10061543:	jmp    0x10002078
10061548:	lea    eax,[ebp-0x3c]
1006154b:	jmp    0x10002078
10061550:	lea    esi,[ebp-0x28]
10061553:	jmp    0x100066c4
10061558:	mov    eax,DWORD PTR [ebp+0x4]
1006155b:	jmp    0x10002078
10061560:	mov    edx,DWORD PTR [esp+0x8]
10061564:	lea    eax,[edx-0x44]
10061567:	mov    ecx,DWORD PTR [edx-0x48]
1006156a:	xor    ecx,eax
1006156c:	call   0x100430d7
10061571:	mov    eax,0x10077c80
10061576:	jmp    0x1005941c
1006157b:	int3   
1006157c:	int3   
1006157d:	int3   
1006157e:	int3   
1006157f:	int3   
10061580:	lea    ecx,[ebp-0x28]
10061583:	jmp    0x10007f38
10061588:	mov    ecx,DWORD PTR [ebp+0x4]
1006158b:	jmp    0x10043210
10061590:	mov    edx,DWORD PTR [esp+0x8]
10061594:	lea    eax,[edx-0x28]
10061597:	mov    ecx,DWORD PTR [edx-0x2c]
1006159a:	xor    ecx,eax
1006159c:	call   0x100430d7
100615a1:	mov    eax,0x10077cb4
100615a6:	jmp    0x1005941c
100615ab:	int3   
100615ac:	int3   
100615ad:	int3   
100615ae:	int3   
100615af:	int3   
100615b0:	lea    ecx,[ebp-0x17c]
100615b6:	jmp    0x10007f38
100615bb:	lea    ecx,[ebp-0x160]
100615c1:	jmp    0x10043210
100615c6:	lea    eax,[ebp-0x1a0]
100615cc:	jmp    0x100020a1
100615d1:	lea    ecx,[ebp-0x198]
100615d7:	jmp    0x10007f38
100615dc:	lea    ecx,[ebp-0x138]
100615e2:	jmp    0x10043210
100615e7:	mov    edx,DWORD PTR [esp+0x8]
100615eb:	lea    eax,[edx-0x1a4]
100615f1:	mov    ecx,DWORD PTR [edx-0x1a8]
100615f7:	xor    ecx,eax
100615f9:	call   0x100430d7
100615fe:	add    eax,0xc
10061601:	mov    ecx,DWORD PTR [edx-0x4]
10061604:	xor    ecx,eax
10061606:	call   0x100430d7
1006160b:	mov    eax,0x10077d00
10061610:	jmp    0x1005941c
10061615:	int3   
10061616:	int3   
10061617:	int3   
10061618:	int3   
10061619:	int3   
1006161a:	int3   
1006161b:	int3   
1006161c:	int3   
1006161d:	int3   
1006161e:	int3   
1006161f:	int3   
10061620:	lea    eax,[ebp-0x58]
10061623:	jmp    0x100020a1
10061628:	lea    eax,[ebp-0x64]
1006162b:	jmp    0x10037460
10061630:	lea    ecx,[ebp-0x54]
10061633:	jmp    0x10007f38
10061638:	lea    ecx,[ebp-0x38]
1006163b:	jmp    0x10043210
10061640:	lea    ecx,[ebp-0x54]
10061643:	jmp    0x10007f38
10061648:	lea    ecx,[ebp-0x38]
1006164b:	jmp    0x10043210
10061650:	lea    ecx,[ebp-0x54]
10061653:	jmp    0x10007f38
10061658:	mov    edx,DWORD PTR [esp+0x8]
1006165c:	lea    eax,[edx-0x64]
1006165f:	mov    ecx,DWORD PTR [edx-0x68]
10061662:	xor    ecx,eax
10061664:	call   0x100430d7
10061669:	mov    eax,0x10077d5c
1006166e:	jmp    0x1005941c
10061673:	int3   
10061674:	int3   
10061675:	int3   
10061676:	int3   
10061677:	int3   
10061678:	int3   
10061679:	int3   
1006167a:	int3   
1006167b:	int3   
1006167c:	int3   
1006167d:	int3   
1006167e:	int3   
1006167f:	int3   
10061680:	lea    eax,[ebp-0x5c]
10061683:	jmp    0x10037460
10061688:	lea    ecx,[ebp-0x54]
1006168b:	jmp    0x10007f38
10061690:	lea    ecx,[ebp-0x38]
10061693:	jmp    0x10043210
10061698:	mov    edx,DWORD PTR [esp+0x8]
1006169c:	lea    eax,[edx-0x5c]
1006169f:	mov    ecx,DWORD PTR [edx-0x60]
100616a2:	xor    ecx,eax
100616a4:	call   0x100430d7
100616a9:	mov    eax,0x10077d98
100616ae:	jmp    0x1005941c
100616b3:	int3   
100616b4:	int3   
100616b5:	int3   
100616b6:	int3   
100616b7:	int3   
100616b8:	int3   
100616b9:	int3   
100616ba:	int3   
100616bb:	int3   
100616bc:	int3   
100616bd:	int3   
100616be:	int3   
100616bf:	int3   
100616c0:	lea    ecx,[ebp-0x140]
100616c6:	jmp    0x10007f38
100616cb:	lea    ecx,[ebp-0x194]
100616d1:	jmp    0x10043210
100616d6:	lea    ecx,[ebp-0x140]
100616dc:	jmp    0x10007f38
100616e1:	lea    ecx,[ebp-0x140]
100616e7:	jmp    0x10007f38
100616ec:	lea    ecx,[ebp-0x140]
100616f2:	jmp    0x10007f38
100616f7:	lea    ecx,[ebp-0x16c]
100616fd:	jmp    0x10007f38
10061702:	mov    edx,DWORD PTR [esp+0x8]
10061706:	lea    eax,[edx+0xc]
10061709:	mov    ecx,DWORD PTR [edx-0x19c]
1006170f:	xor    ecx,eax
10061711:	call   0x100430d7
10061716:	mov    ecx,DWORD PTR [edx-0x4]
10061719:	xor    ecx,eax
1006171b:	call   0x100430d7
10061720:	mov    eax,0x10077dec
10061725:	jmp    0x1005941c
1006172a:	int3   
1006172b:	int3   
1006172c:	int3   
1006172d:	int3   
1006172e:	int3   
1006172f:	int3   
10061730:	lea    ecx,[ebp-0x2c]
10061733:	jmp    0x10007f38
10061738:	lea    ecx,[ebp-0x64]
1006173b:	jmp    0x10007f38
10061740:	lea    ecx,[ebp-0x80]
10061743:	jmp    0x10007f38
10061748:	lea    ecx,[ebp-0x48]
1006174b:	jmp    0x10007f38
10061750:	mov    edx,DWORD PTR [esp+0x8]
10061754:	lea    eax,[edx-0x80]
10061757:	mov    ecx,DWORD PTR [edx-0x84]
1006175d:	xor    ecx,eax
1006175f:	call   0x100430d7
10061764:	add    eax,0xc
10061767:	mov    ecx,DWORD PTR [edx-0x4]
1006176a:	xor    ecx,eax
1006176c:	call   0x100430d7
10061771:	mov    eax,0x10077e30
10061776:	jmp    0x1005941c
1006177b:	int3   
1006177c:	int3   
1006177d:	int3   
1006177e:	int3   
1006177f:	int3   
10061780:	lea    eax,[ebp-0x10]
10061783:	jmp    0x100020a1
10061788:	mov    edx,DWORD PTR [esp+0x8]
1006178c:	lea    eax,[edx-0x10]
1006178f:	mov    ecx,DWORD PTR [edx-0x14]
10061792:	xor    ecx,eax
10061794:	call   0x100430d7
10061799:	mov    eax,0x10077e5c
1006179e:	jmp    0x1005941c
100617a3:	int3   
100617a4:	int3   
100617a5:	int3   
100617a6:	int3   
100617a7:	int3   
100617a8:	int3   
100617a9:	int3   
100617aa:	int3   
100617ab:	int3   
100617ac:	int3   
100617ad:	int3   
100617ae:	int3   
100617af:	int3   
100617b0:	lea    ecx,[ebp-0x54]
100617b3:	jmp    0x10007f38
100617b8:	lea    ecx,[ebp-0x38]
100617bb:	jmp    0x10043210
100617c0:	mov    edx,DWORD PTR [esp+0x8]
100617c4:	lea    eax,[edx-0x5c]
100617c7:	mov    ecx,DWORD PTR [edx-0x60]
100617ca:	xor    ecx,eax
100617cc:	call   0x100430d7
100617d1:	mov    eax,0x10077e90
100617d6:	jmp    0x1005941c
100617db:	int3   
100617dc:	int3   
100617dd:	int3   
100617de:	int3   
100617df:	int3   
100617e0:	lea    ecx,[ebp-0x54]
100617e3:	jmp    0x10007f38
100617e8:	lea    ecx,[ebp-0x38]
100617eb:	jmp    0x10043210
100617f0:	mov    edx,DWORD PTR [esp+0x8]
100617f4:	lea    eax,[edx-0x58]
100617f7:	mov    ecx,DWORD PTR [edx-0x5c]
100617fa:	xor    ecx,eax
100617fc:	call   0x100430d7
10061801:	mov    eax,0x10077ec4
10061806:	jmp    0x1005941c
1006180b:	int3   
1006180c:	int3   
1006180d:	int3   
1006180e:	int3   
1006180f:	int3   
10061810:	lea    ecx,[ebp-0x50]
10061813:	jmp    0x10007f38
10061818:	lea    ecx,[ebp-0x34]
1006181b:	jmp    0x10043210
10061820:	mov    edx,DWORD PTR [esp+0x8]
10061824:	lea    eax,[edx-0x54]
10061827:	mov    ecx,DWORD PTR [edx-0x58]
1006182a:	xor    ecx,eax
1006182c:	call   0x100430d7
10061831:	mov    eax,0x10077ef8
10061836:	jmp    0x1005941c
1006183b:	int3   
1006183c:	int3   
1006183d:	int3   
1006183e:	int3   
1006183f:	int3   
10061840:	lea    ecx,[ebp-0x54]
10061843:	jmp    0x10007f38
10061848:	lea    ecx,[ebp-0x38]
1006184b:	jmp    0x10043210
10061850:	mov    edx,DWORD PTR [esp+0x8]
10061854:	lea    eax,[edx-0x6c]
10061857:	mov    ecx,DWORD PTR [edx-0x70]
1006185a:	xor    ecx,eax
1006185c:	call   0x100430d7
10061861:	mov    eax,0x10077f2c
10061866:	jmp    0x1005941c
1006186b:	int3   
1006186c:	int3   
1006186d:	int3   
1006186e:	int3   
1006186f:	int3   
10061870:	lea    eax,[ebp-0x5c]
10061873:	jmp    0x10037460
10061878:	lea    ecx,[ebp-0x54]
1006187b:	jmp    0x10007f38
10061880:	lea    ecx,[ebp-0x38]
10061883:	jmp    0x10043210
10061888:	lea    ecx,[ebp-0x54]
1006188b:	jmp    0x10007f38
10061890:	lea    ecx,[ebp-0x38]
10061893:	jmp    0x10043210
10061898:	mov    edx,DWORD PTR [esp+0x8]
1006189c:	lea    eax,[edx-0x5c]
1006189f:	mov    ecx,DWORD PTR [edx-0x60]
100618a2:	xor    ecx,eax
100618a4:	call   0x100430d7
100618a9:	mov    eax,0x10077f78
100618ae:	jmp    0x1005941c
100618b3:	int3   
100618b4:	int3   
100618b5:	int3   
100618b6:	int3   
100618b7:	int3   
100618b8:	int3   
100618b9:	int3   
100618ba:	int3   
100618bb:	int3   
100618bc:	int3   
100618bd:	int3   
100618be:	int3   
100618bf:	int3   
100618c0:	lea    eax,[ebp-0x5c]
100618c3:	jmp    0x10037460
100618c8:	lea    ecx,[ebp-0x54]
100618cb:	jmp    0x10007f38
100618d0:	lea    ecx,[ebp-0x38]
100618d3:	jmp    0x10043210
100618d8:	mov    edx,DWORD PTR [esp+0x8]
100618dc:	lea    eax,[edx-0x64]
100618df:	mov    ecx,DWORD PTR [edx-0x68]
100618e2:	xor    ecx,eax
100618e4:	call   0x100430d7
100618e9:	mov    eax,0x10077fb4
100618ee:	jmp    0x1005941c
100618f3:	int3   
100618f4:	int3   
100618f5:	int3   
100618f6:	int3   
100618f7:	int3   
100618f8:	int3   
100618f9:	int3   
100618fa:	int3   
100618fb:	int3   
100618fc:	int3   
100618fd:	int3   
100618fe:	int3   
100618ff:	int3   
10061900:	lea    eax,[ebp-0x5c]
10061903:	jmp    0x10037460
10061908:	lea    ecx,[ebp-0x54]
1006190b:	jmp    0x10007f38
10061910:	lea    ecx,[ebp-0x38]
10061913:	jmp    0x10043210
10061918:	lea    ecx,[ebp-0x54]
1006191b:	jmp    0x10007f38
10061920:	lea    ecx,[ebp-0x38]
10061923:	jmp    0x10043210
10061928:	lea    ecx,[ebp-0x54]
1006192b:	jmp    0x10007f38
10061930:	lea    ecx,[ebp-0x54]
10061933:	jmp    0x10007f38
10061938:	lea    ecx,[ebp-0x54]
1006193b:	jmp    0x10007f38
10061940:	mov    edx,DWORD PTR [esp+0x8]
10061944:	lea    eax,[edx-0x60]
10061947:	mov    ecx,DWORD PTR [edx-0x64]
1006194a:	xor    ecx,eax
1006194c:	call   0x100430d7
10061951:	mov    eax,0x10078018
10061956:	jmp    0x1005941c
1006195b:	int3   
1006195c:	int3   
1006195d:	int3   
1006195e:	int3   
1006195f:	int3   
10061960:	lea    eax,[ebp-0x58]
10061963:	jmp    0x10037460
10061968:	lea    ecx,[ebp-0x50]
1006196b:	jmp    0x10007f38
10061970:	lea    ecx,[ebp-0x34]
10061973:	jmp    0x10043210
10061978:	mov    edx,DWORD PTR [esp+0x8]
1006197c:	lea    eax,[edx-0x5c]
1006197f:	mov    ecx,DWORD PTR [edx-0x60]
10061982:	xor    ecx,eax
10061984:	call   0x100430d7
10061989:	mov    eax,0x10078054
1006198e:	jmp    0x1005941c
10061993:	int3   
10061994:	int3   
10061995:	int3   
10061996:	int3   
10061997:	int3   
10061998:	int3   
10061999:	int3   
1006199a:	int3   
1006199b:	int3   
1006199c:	int3   
1006199d:	int3   
1006199e:	int3   
1006199f:	int3   
100619a0:	lea    ecx,[ebp-0x864]
100619a6:	jmp    0x10007f38
100619ab:	lea    ecx,[ebp-0x848]
100619b1:	jmp    0x10043210
100619b6:	mov    edx,DWORD PTR [esp+0x8]
100619ba:	lea    eax,[edx-0x8a4]
100619c0:	mov    ecx,DWORD PTR [edx-0x8a8]
100619c6:	xor    ecx,eax
100619c8:	call   0x100430d7
100619cd:	add    eax,0xc
100619d0:	mov    ecx,DWORD PTR [edx-0x8]
100619d3:	xor    ecx,eax
100619d5:	call   0x100430d7
100619da:	mov    eax,0x10078088
100619df:	jmp    0x1005941c
100619e4:	int3   
100619e5:	int3   
100619e6:	int3   
100619e7:	int3   
100619e8:	int3   
100619e9:	int3   
100619ea:	int3   
100619eb:	int3   
100619ec:	int3   
100619ed:	int3   
100619ee:	int3   
100619ef:	int3   
100619f0:	lea    ecx,[ebp-0x4c]
100619f3:	jmp    0x10007f38
100619f8:	lea    ecx,[ebp-0x30]
100619fb:	jmp    0x10007f38
10061a00:	mov    edx,DWORD PTR [esp+0x8]
10061a04:	lea    eax,[edx+0xc]
10061a07:	mov    ecx,DWORD PTR [edx-0xac]
10061a0d:	xor    ecx,eax
10061a0f:	call   0x100430d7
10061a14:	mov    ecx,DWORD PTR [edx-0x8]
10061a17:	xor    ecx,eax
10061a19:	call   0x100430d7
10061a1e:	mov    eax,0x100780f0
10061a23:	jmp    0x1005941c
10061a28:	int3   
10061a29:	int3   
10061a2a:	int3   
10061a2b:	int3   
10061a2c:	int3   
10061a2d:	int3   
10061a2e:	int3   
10061a2f:	int3   
10061a30:	mov    eax,DWORD PTR [ebp-0x14]
10061a33:	and    eax,0x1
10061a36:	je     0x10061a48
10061a3c:	and    DWORD PTR [ebp-0x14],0xfffffffe
10061a40:	mov    ecx,DWORD PTR [ebp-0x10]
10061a43:	jmp    0x10007f38
10061a48:	ret    
10061a49:	mov    edx,DWORD PTR [esp+0x8]
10061a4d:	lea    eax,[edx-0x28]
10061a50:	mov    ecx,DWORD PTR [edx-0x2c]
10061a53:	xor    ecx,eax
10061a55:	call   0x100430d7
10061a5a:	mov    eax,0x1007811c
10061a5f:	jmp    0x1005941c
10061a64:	int3   
10061a65:	int3   
10061a66:	int3   
10061a67:	int3   
10061a68:	int3   
10061a69:	int3   
10061a6a:	int3   
10061a6b:	int3   
10061a6c:	int3   
10061a6d:	int3   
10061a6e:	int3   
10061a6f:	int3   
10061a70:	mov    eax,DWORD PTR [ebp-0x58]
10061a73:	and    eax,0x1
10061a76:	je     0x10061a88
10061a7c:	and    DWORD PTR [ebp-0x58],0xfffffffe
10061a80:	mov    eax,DWORD PTR [ebp+0x4]
10061a83:	jmp    0x10002078
10061a88:	ret    
10061a89:	lea    ecx,[ebp-0x54]
10061a8c:	jmp    0x10007f38
10061a91:	lea    ecx,[ebp-0x38]
10061a94:	jmp    0x10043210
10061a99:	mov    edx,DWORD PTR [esp+0x8]
10061a9d:	lea    eax,[edx-0x58]
10061aa0:	mov    ecx,DWORD PTR [edx-0x5c]
10061aa3:	xor    ecx,eax
10061aa5:	call   0x100430d7
10061aaa:	mov    eax,0x10078158
10061aaf:	jmp    0x1005941c
10061ab4:	int3   
10061ab5:	int3   
10061ab6:	int3   
10061ab7:	int3   
10061ab8:	int3   
10061ab9:	int3   
10061aba:	int3   
10061abb:	int3   
10061abc:	int3   
10061abd:	int3   
10061abe:	int3   
10061abf:	int3   
10061ac0:	mov    eax,DWORD PTR [ebp-0x54]
10061ac3:	and    eax,0x1
10061ac6:	je     0x10061ad8
10061acc:	and    DWORD PTR [ebp-0x54],0xfffffffe
10061ad0:	mov    ecx,DWORD PTR [ebp-0x58]
10061ad3:	jmp    0x10007f38
10061ad8:	ret    
10061ad9:	lea    esi,[ebp-0x68]
10061adc:	jmp    0x1000466f
10061ae1:	lea    ecx,[ebp-0x48]
10061ae4:	jmp    0x10007f38
10061ae9:	lea    ecx,[ebp-0x2c]
10061aec:	jmp    0x10007f38
10061af1:	lea    ecx,[ebp-0x2c]
10061af4:	jmp    0x10007f38
10061af9:	lea    ecx,[ebp-0x48]
10061afc:	jmp    0x10007f38
10061b01:	mov    edx,DWORD PTR [esp+0x8]
10061b05:	lea    eax,[edx-0x74]
10061b08:	mov    ecx,DWORD PTR [edx-0x78]
10061b0b:	xor    ecx,eax
10061b0d:	call   0x100430d7
10061b12:	add    eax,0x10
10061b15:	mov    ecx,DWORD PTR [edx-0x4]
10061b18:	xor    ecx,eax
10061b1a:	call   0x100430d7
10061b1f:	mov    eax,0x100781ac
10061b24:	jmp    0x1005941c
10061b29:	mov    edx,DWORD PTR [esp+0x8]
10061b2d:	lea    eax,[edx+0xc]
10061b30:	mov    ecx,DWORD PTR [edx-0x1c]
10061b33:	xor    ecx,eax
10061b35:	call   0x100430d7
10061b3a:	mov    eax,0x10078204
10061b3f:	jmp    0x1005941c
10061b44:	mov    edx,DWORD PTR [esp+0x8]
10061b48:	lea    eax,[edx+0xc]
10061b4b:	mov    ecx,DWORD PTR [edx-0x1c]
10061b4e:	xor    ecx,eax
10061b50:	call   0x100430d7
10061b55:	mov    eax,0x1007825c
10061b5a:	jmp    0x1005941c
10061b5f:	mov    eax,DWORD PTR [ebp+0x8]
10061b62:	add    eax,0x10
10061b65:	jmp    0x1002bf55
10061b6a:	mov    eax,DWORD PTR [ebp+0x8]
10061b6d:	add    eax,0x20
10061b70:	jmp    0x1002bf55
10061b75:	mov    edx,DWORD PTR [esp+0x8]
10061b79:	lea    eax,[edx+0xc]
10061b7c:	mov    ecx,DWORD PTR [edx-0x10]
10061b7f:	xor    ecx,eax
10061b81:	call   0x100430d7
10061b86:	mov    eax,0x10078290
10061b8b:	jmp    0x1005941c
10061b90:	mov    eax,DWORD PTR [ebp-0x1fc]
10061b96:	and    eax,0x1
10061b99:	je     0x10061bb1
10061b9f:	and    DWORD PTR [ebp-0x1fc],0xfffffffe
10061ba6:	lea    ecx,[ebp-0x198]
10061bac:	jmp    0x10007f38
10061bb1:	ret    
10061bb2:	mov    eax,DWORD PTR [ebp-0x1fc]
10061bb8:	and    eax,0x2
10061bbb:	je     0x10061bd3
10061bc1:	and    DWORD PTR [ebp-0x1fc],0xfffffffd
10061bc8:	lea    ecx,[ebp-0x160]
10061bce:	jmp    0x10007f38
10061bd3:	ret    
10061bd4:	mov    eax,DWORD PTR [ebp-0x1fc]
10061bda:	and    eax,0x4
10061bdd:	je     0x10061bf5
10061be3:	and    DWORD PTR [ebp-0x1fc],0xfffffffb
10061bea:	lea    ecx,[ebp-0x17c]
10061bf0:	jmp    0x10007f38
10061bf5:	ret    
10061bf6:	mov    eax,DWORD PTR [ebp-0x1fc]
10061bfc:	and    eax,0x8
10061bff:	je     0x10061c17
10061c05:	and    DWORD PTR [ebp-0x1fc],0xfffffff7
10061c0c:	lea    ecx,[ebp-0x128]
10061c12:	jmp    0x10007f38
10061c17:	ret    
10061c18:	lea    ecx,[ebp-0x1ec]
10061c1e:	jmp    0x10007f38
10061c23:	lea    ecx,[ebp-0x1b4]
10061c29:	jmp    0x10007f38
10061c2e:	lea    ecx,[ebp-0x1d0]
10061c34:	jmp    0x10007f38
10061c39:	lea    ecx,[ebp-0xd4]
10061c3f:	jmp    0x10007f38
10061c44:	lea    ecx,[ebp-0x10c]
10061c4a:	jmp    0x10007f38
10061c4f:	lea    ecx,[ebp-0x144]
10061c55:	jmp    0x10007f38
10061c5a:	lea    ecx,[ebp-0xf0]
10061c60:	jmp    0x10007f38
10061c65:	lea    ecx,[ebp-0xb8]
10061c6b:	jmp    0x10007f38
10061c70:	lea    esi,[ebp-0x9c]
10061c76:	jmp    0x1000bdb4
10061c7b:	mov    edx,DWORD PTR [esp+0x8]
10061c7f:	lea    eax,[edx-0x1fc]
10061c85:	mov    ecx,DWORD PTR [edx-0x200]
10061c8b:	xor    ecx,eax
10061c8d:	call   0x100430d7
10061c92:	mov    eax,0x10078320
10061c97:	jmp    0x1005941c
10061c9c:	lea    ecx,[ebp-0x48]
10061c9f:	jmp    0x10007f38
10061ca4:	lea    ecx,[ebp-0x2c]
10061ca7:	jmp    0x10007f38
10061cac:	mov    edx,DWORD PTR [esp+0x8]
10061cb0:	lea    eax,[edx-0x44]
10061cb3:	mov    ecx,DWORD PTR [edx-0x48]
10061cb6:	xor    ecx,eax
10061cb8:	call   0x100430d7
10061cbd:	mov    eax,0x10078354
10061cc2:	jmp    0x1005941c
10061cc7:	mov    esi,DWORD PTR [ebp+0x8]
10061cca:	add    esi,0x4
10061ccd:	jmp    0x10024f30
10061cd2:	mov    esi,DWORD PTR [ebp+0x8]
10061cd5:	add    esi,0x18
10061cd8:	jmp    0x10024f30
10061cdd:	mov    eax,DWORD PTR [ebp+0x8]
10061ce0:	add    eax,0x2c
10061ce3:	jmp    0x10012625
10061ce8:	mov    eax,DWORD PTR [ebp+0x8]
10061ceb:	add    eax,0x30
10061cee:	jmp    0x100260a4
10061cf3:	mov    eax,DWORD PTR [ebp+0x8]
10061cf6:	add    eax,0x34
10061cf9:	jmp    0x1000cad8
10061cfe:	mov    edx,DWORD PTR [esp+0x8]
10061d02:	lea    eax,[edx+0xc]
10061d05:	mov    ecx,DWORD PTR [edx-0x10]
10061d08:	xor    ecx,eax
10061d0a:	call   0x100430d7
10061d0f:	mov    eax,0x100783a0
10061d14:	jmp    0x1005941c
10061d19:	mov    edx,DWORD PTR [esp+0x8]
10061d1d:	lea    eax,[edx+0xc]
10061d20:	mov    ecx,DWORD PTR [edx-0x1c]
10061d23:	xor    ecx,eax
10061d25:	call   0x100430d7
10061d2a:	mov    eax,0x100783f8
10061d2f:	jmp    0x1005941c
10061d34:	lea    esi,[ebp-0x2c]
10061d37:	jmp    0x10004b4a
10061d3c:	mov    edx,DWORD PTR [esp+0x8]
10061d40:	lea    eax,[edx+0xc]
10061d43:	mov    ecx,DWORD PTR [edx-0x44]
10061d46:	xor    ecx,eax
10061d48:	call   0x100430d7
10061d4d:	mov    ecx,DWORD PTR [edx-0x4]
10061d50:	xor    ecx,eax
10061d52:	call   0x100430d7
10061d57:	mov    eax,0x10078424
10061d5c:	jmp    0x1005941c
10061d61:	lea    eax,[ebp-0x18]
10061d64:	jmp    0x10034ec0
10061d69:	lea    ecx,[ebp-0x38]
10061d6c:	jmp    0x10007f38
10061d71:	lea    ecx,[ebp-0x54]
10061d74:	jmp    0x10007f38
10061d79:	lea    edi,[ebp-0x1c]
10061d7c:	jmp    0x100024f2
10061d81:	mov    edx,DWORD PTR [esp+0x8]
10061d85:	lea    eax,[edx+0xc]
10061d88:	mov    ecx,DWORD PTR [edx-0x58]
10061d8b:	xor    ecx,eax
10061d8d:	call   0x100430d7
10061d92:	mov    ecx,DWORD PTR [edx-0x8]
10061d95:	xor    ecx,eax
10061d97:	call   0x100430d7
10061d9c:	mov    eax,0x1007849c
10061da1:	jmp    0x1005941c
10061da6:	lea    eax,[ebp-0x54]
10061da9:	jmp    0x10034ec0
10061dae:	lea    ecx,[ebp-0x4c]
10061db1:	jmp    0x10007f38
10061db6:	lea    ecx,[ebp-0x30]
10061db9:	jmp    0x10007f38
10061dbe:	mov    edx,DWORD PTR [esp+0x8]
10061dc2:	lea    eax,[edx+0xc]
10061dc5:	mov    ecx,DWORD PTR [edx-0x58]
10061dc8:	xor    ecx,eax
10061dca:	call   0x100430d7
10061dcf:	mov    ecx,DWORD PTR [edx-0x8]
10061dd2:	xor    ecx,eax
10061dd4:	call   0x100430d7
10061dd9:	mov    eax,0x1007850c
10061dde:	jmp    0x1005941c
10061de3:	lea    eax,[ebp-0x14]
10061de6:	jmp    0x10012625
10061deb:	lea    eax,[ebp-0x2c]
10061dee:	jmp    0x10012625
10061df3:	lea    eax,[ebp-0x24]
10061df6:	jmp    0x10012625
10061dfb:	lea    eax,[ebp-0x28]
10061dfe:	jmp    0x10012625
10061e03:	lea    eax,[ebp-0x20]
10061e06:	jmp    0x10012625
10061e0b:	mov    edx,DWORD PTR [esp+0x8]
10061e0f:	lea    eax,[edx-0x2c]
10061e12:	mov    ecx,DWORD PTR [edx-0x30]
10061e15:	xor    ecx,eax
10061e17:	call   0x100430d7
10061e1c:	mov    eax,0x10078558
10061e21:	jmp    0x1005941c
10061e26:	lea    eax,[ebp-0x2c]
10061e29:	jmp    0x10034ec0
10061e2e:	lea    ecx,[ebp-0x9c]
10061e34:	jmp    0x10007f38
10061e39:	lea    ecx,[ebp-0x80]
10061e3c:	jmp    0x10007f38
10061e41:	lea    esi,[ebp-0x9c]
10061e47:	jmp    0x1001a784
10061e4c:	lea    eax,[ebp-0x28]
10061e4f:	jmp    0x1001b147
10061e54:	lea    esi,[ebp-0x1c]
10061e57:	jmp    0x1001b21b
10061e5c:	lea    ecx,[ebp-0xe0]
10061e62:	jmp    0x10007f38
10061e67:	mov    edx,DWORD PTR [esp+0x8]
10061e6b:	lea    eax,[edx+0xc]
10061e6e:	mov    ecx,DWORD PTR [edx-0xe4]
10061e74:	xor    ecx,eax
10061e76:	call   0x100430d7
10061e7b:	mov    eax,0x100785ec
10061e80:	jmp    0x1005941c
10061e85:	lea    eax,[ebp-0x38]
10061e88:	jmp    0x1000123d
10061e8d:	mov    edx,DWORD PTR [esp+0x8]
10061e91:	lea    eax,[edx+0xc]
10061e94:	mov    ecx,DWORD PTR [edx-0x48]
10061e97:	xor    ecx,eax
10061e99:	call   0x100430d7
10061e9e:	mov    eax,0x10078620
10061ea3:	jmp    0x1005941c
10061ea8:	lea    ecx,[ebp-0x7c]
10061eab:	jmp    0x10007f38
10061eb0:	lea    ecx,[ebp-0x3c]
10061eb3:	jmp    0x1000119e
10061eb8:	mov    ecx,DWORD PTR [ebp-0x54]
10061ebb:	jmp    0x1000119e
10061ec0:	lea    esi,[ebp-0xfc]
10061ec6:	jmp    0x10019f4f
10061ecb:	lea    ecx,[ebp-0xbc]
10061ed1:	jmp    0x10007f38
10061ed6:	lea    esi,[ebp-0xbc]
10061edc:	jmp    0x10019f4f
10061ee1:	mov    edx,DWORD PTR [esp+0x8]
10061ee5:	lea    eax,[edx+0xc]
10061ee8:	mov    ecx,DWORD PTR [edx-0x100]
10061eee:	xor    ecx,eax
10061ef0:	call   0x100430d7
10061ef5:	mov    ecx,DWORD PTR [edx-0x8]
10061ef8:	xor    ecx,eax
10061efa:	call   0x100430d7
10061eff:	mov    eax,0x100786ac
10061f04:	jmp    0x1005941c
10061f09:	lea    ecx,[ebp-0x4c]
10061f0c:	jmp    0x10007f38
10061f11:	lea    ecx,[ebp-0x30]
10061f14:	jmp    0x10007f38
10061f19:	lea    ecx,[ebp-0x6c]
10061f1c:	jmp    0x1000119e
10061f21:	mov    edx,DWORD PTR [esp+0x8]
10061f25:	lea    eax,[edx-0x64]
10061f28:	mov    ecx,DWORD PTR [edx-0x68]
10061f2b:	xor    ecx,eax
10061f2d:	call   0x100430d7
10061f32:	add    eax,0x4
10061f35:	mov    ecx,DWORD PTR [edx-0x8]
10061f38:	xor    ecx,eax
10061f3a:	call   0x100430d7
10061f3f:	mov    eax,0x100786f0
10061f44:	jmp    0x1005941c
10061f49:	lea    eax,[ebp-0x14]
10061f4c:	jmp    0x100020a1
10061f51:	lea    eax,[ebp-0x18]
10061f54:	jmp    0x10034ec0
10061f59:	mov    edx,DWORD PTR [esp+0x8]
10061f5d:	lea    eax,[edx-0xc]
10061f60:	mov    ecx,DWORD PTR [edx-0x10]
10061f63:	xor    ecx,eax
10061f65:	call   0x100430d7
10061f6a:	mov    eax,0x10078724
10061f6f:	jmp    0x1005941c
10061f74:	mov    eax,DWORD PTR [ebp-0x10]
10061f77:	and    eax,0x1
10061f7a:	je     0x10061f8c
10061f80:	and    DWORD PTR [ebp-0x10],0xfffffffe
10061f84:	mov    esi,DWORD PTR [ebp+0x8]
10061f87:	jmp    0x10009d3c
10061f8c:	ret    
10061f8d:	lea    ecx,[ebp-0x34]
10061f90:	jmp    0x10007f38
10061f95:	lea    ecx,[ebp-0x34]
10061f98:	jmp    0x10007f38
10061f9d:	lea    ecx,[ebp-0x34]
10061fa0:	jmp    0x10007f38
10061fa5:	lea    ecx,[ebp-0x34]
10061fa8:	jmp    0x10007f38
10061fad:	lea    ecx,[ebp-0x34]
10061fb0:	jmp    0x10007f38
10061fb5:	lea    ecx,[ebp-0x34]
10061fb8:	jmp    0x10007f38
10061fbd:	lea    ecx,[ebp-0x34]
10061fc0:	jmp    0x10007f38
10061fc5:	mov    edx,DWORD PTR [esp+0x8]
10061fc9:	lea    eax,[edx+0xc]
10061fcc:	mov    ecx,DWORD PTR [edx-0x38]
10061fcf:	xor    ecx,eax
10061fd1:	call   0x100430d7
10061fd6:	mov    eax,0x10078788
10061fdb:	jmp    0x1005941c
10061fe0:	lea    eax,[ebp-0x60]
10061fe3:	jmp    0x10014a8b
10061fe8:	lea    esi,[ebp-0x6c]
10061feb:	jmp    0x100075ca
10061ff0:	mov    edx,DWORD PTR [esp+0x8]
10061ff4:	lea    eax,[edx+0xc]
10061ff7:	mov    ecx,DWORD PTR [edx-0x70]
10061ffa:	xor    ecx,eax
10061ffc:	call   0x100430d7
10062001:	mov    ecx,DWORD PTR [edx-0x4]
10062004:	xor    ecx,eax
10062006:	call   0x100430d7
1006200b:	mov    eax,0x100787bc
10062010:	jmp    0x1005941c
10062015:	lea    ecx,[ebp+0x8]
10062018:	jmp    0x10007f38
1006201d:	mov    edx,DWORD PTR [esp+0x8]
10062021:	lea    eax,[edx+0xc]
10062024:	mov    ecx,DWORD PTR [edx-0x44]
10062027:	xor    ecx,eax
10062029:	call   0x100430d7
1006202e:	mov    eax,0x100787e8
10062033:	jmp    0x1005941c
10062038:	lea    eax,[ebp-0x28]
1006203b:	jmp    0x1000123d
10062040:	mov    edx,DWORD PTR [esp+0x8]
10062044:	lea    eax,[edx-0x4c]
10062047:	mov    ecx,DWORD PTR [edx-0x50]
1006204a:	xor    ecx,eax
1006204c:	call   0x100430d7
10062051:	mov    eax,0x1007881c
10062056:	jmp    0x1005941c
1006205b:	lea    esi,[ebp-0xac]
10062061:	jmp    0x100133d3
10062066:	mov    esi,DWORD PTR [ebp-0xc0]
1006206c:	jmp    0x100133d3
10062071:	lea    edi,[ebp-0x234]
10062077:	jmp    0x1001345a
1006207c:	lea    ecx,[ebp-0x184]
10062082:	jmp    0x10007f38
10062087:	lea    edi,[ebp-0x184]
1006208d:	jmp    0x1001345a
10062092:	mov    edx,DWORD PTR [esp+0x8]
10062096:	lea    eax,[edx+0xc]
10062099:	mov    ecx,DWORD PTR [edx-0x238]
1006209f:	xor    ecx,eax
100620a1:	call   0x100430d7
100620a6:	mov    ecx,DWORD PTR [edx-0x8]
100620a9:	xor    ecx,eax
100620ab:	call   0x100430d7
100620b0:	mov    eax,0x1007889c
100620b5:	jmp    0x1005941c
100620ba:	jmp    0x100133ce
100620bf:	mov    edx,DWORD PTR [esp+0x8]
100620c3:	lea    eax,[edx+0xc]
100620c6:	mov    ecx,DWORD PTR [edx-0x10]
100620c9:	xor    ecx,eax
100620cb:	call   0x100430d7
100620d0:	mov    eax,0x100788c8
100620d5:	jmp    0x1005941c
100620da:	mov    eax,DWORD PTR [ebp-0x14]
100620dd:	and    eax,0x1
100620e0:	je     0x100620f2
100620e6:	and    DWORD PTR [ebp-0x14],0xfffffffe
100620ea:	mov    esi,DWORD PTR [ebp+0x8]
100620ed:	jmp    0x1000466f
100620f2:	ret    
100620f3:	lea    ecx,[ebp-0x50]
100620f6:	jmp    0x10007f38
100620fb:	lea    ecx,[ebp-0x34]
100620fe:	jmp    0x10007f38
10062103:	mov    edx,DWORD PTR [esp+0x8]
10062107:	lea    eax,[edx+0xc]
1006210a:	mov    ecx,DWORD PTR [edx-0x54]
1006210d:	xor    ecx,eax
1006210f:	call   0x100430d7
10062114:	mov    eax,0x10078904
10062119:	jmp    0x1005941c
1006211e:	lea    esi,[ebp-0x1c]
10062121:	jmp    0x1000466f
10062126:	mov    edx,DWORD PTR [esp+0x8]
1006212a:	lea    eax,[edx+0xc]
1006212d:	mov    ecx,DWORD PTR [edx-0x20]
10062130:	xor    ecx,eax
10062132:	call   0x100430d7
10062137:	mov    eax,0x10078930
1006213c:	jmp    0x1005941c
10062141:	lea    ecx,[ebp-0x2c]
10062144:	jmp    0x10007f38
10062149:	lea    ecx,[ebp-0x48]
1006214c:	jmp    0x10007f38
10062151:	lea    eax,[ebp+0x10]
10062154:	jmp    0x100020a1
10062159:	mov    edx,DWORD PTR [esp+0x8]
1006215d:	lea    eax,[edx+0xc]
10062160:	mov    ecx,DWORD PTR [edx-0x4c]
10062163:	xor    ecx,eax
10062165:	call   0x100430d7
1006216a:	mov    eax,0x1007896c
1006216f:	jmp    0x1005941c
10062174:	lea    ecx,[ebp-0x28]
10062177:	jmp    0x10007f38
1006217c:	lea    ecx,[ebp-0x44]
1006217f:	jmp    0x10007f38
10062184:	mov    edx,DWORD PTR [esp+0x8]
10062188:	lea    eax,[edx+0xc]
1006218b:	mov    ecx,DWORD PTR [edx-0x4c]
1006218e:	xor    ecx,eax
10062190:	call   0x100430d7
10062195:	mov    eax,0x100789a0
1006219a:	jmp    0x1005941c
1006219f:	lea    ecx,[ebp-0x2c]
100621a2:	jmp    0x10007f38
100621a7:	mov    edx,DWORD PTR [esp+0x8]
100621ab:	lea    eax,[edx+0xc]
100621ae:	mov    ecx,DWORD PTR [edx-0x44]
100621b1:	xor    ecx,eax
100621b3:	call   0x100430d7
100621b8:	mov    ecx,DWORD PTR [edx-0x4]
100621bb:	xor    ecx,eax
100621bd:	call   0x100430d7
100621c2:	mov    eax,0x100789cc
100621c7:	jmp    0x1005941c
100621cc:	mov    edx,DWORD PTR [esp+0x8]
100621d0:	lea    eax,[edx+0xc]
100621d3:	mov    ecx,DWORD PTR [edx-0x18]
100621d6:	xor    ecx,eax
100621d8:	call   0x100430d7
100621dd:	mov    eax,0x10078a24
100621e2:	jmp    0x1005941c
100621e7:	lea    ecx,[ebp-0x4c]
100621ea:	jmp    0x10007f38
100621ef:	lea    ecx,[ebp-0x2c]
100621f2:	jmp    0x10007f38
100621f7:	mov    edx,DWORD PTR [esp+0x8]
100621fb:	lea    eax,[edx+0xc]
100621fe:	mov    ecx,DWORD PTR [edx-0x50]
10062201:	xor    ecx,eax
10062203:	call   0x100430d7
10062208:	mov    ecx,DWORD PTR [edx-0x4]
1006220b:	xor    ecx,eax
1006220d:	call   0x100430d7
10062212:	mov    eax,0x10078a58
10062217:	jmp    0x1005941c
1006221c:	push   DWORD PTR [ebp-0x14]
1006221f:	call   0x100430d2
10062224:	pop    ecx
10062225:	ret    
10062226:	mov    edx,DWORD PTR [esp+0x8]
1006222a:	lea    eax,[edx+0xc]
1006222d:	mov    ecx,DWORD PTR [edx-0x18]
10062230:	xor    ecx,eax
10062232:	call   0x100430d7
10062237:	mov    ecx,DWORD PTR [edx+0x1000c]
1006223d:	xor    ecx,eax
1006223f:	call   0x100430d7
10062244:	mov    eax,0x10078a84
10062249:	jmp    0x1005941c
1006224e:	lea    ecx,[ebp-0x2c]
10062251:	jmp    0x10007f38
10062256:	mov    edx,DWORD PTR [esp+0x8]
1006225a:	lea    eax,[edx+0xc]
1006225d:	mov    ecx,DWORD PTR [edx-0x38]
10062260:	xor    ecx,eax
10062262:	call   0x100430d7
10062267:	mov    ecx,DWORD PTR [edx-0x4]
1006226a:	xor    ecx,eax
1006226c:	call   0x100430d7
10062271:	mov    eax,0x10078ab0
10062276:	jmp    0x1005941c
1006227b:	mov    eax,DWORD PTR [ebp-0x14]
1006227e:	and    eax,0x1
10062281:	je     0x10062293
10062287:	and    DWORD PTR [ebp-0x14],0xfffffffe
1006228b:	lea    ecx,[ebp-0x30]
1006228e:	jmp    0x10007f38
10062293:	ret    
10062294:	lea    esi,[ebp-0x14]
10062297:	jmp    0x1000aae1
1006229c:	lea    ecx,[ebp-0x4c]
1006229f:	jmp    0x10007f38
100622a4:	mov    edx,DWORD PTR [esp+0x8]
100622a8:	lea    eax,[edx+0xc]
100622ab:	mov    ecx,DWORD PTR [edx-0x50]
100622ae:	xor    ecx,eax
100622b0:	call   0x100430d7
100622b5:	mov    eax,0x10078aec
100622ba:	jmp    0x1005941c
100622bf:	lea    ecx,[ebp-0x80]
100622c2:	jmp    0x10007f38
100622c7:	lea    ecx,[ebp-0x80]
100622ca:	jmp    0x10007f38
100622cf:	lea    ecx,[ebp-0x48]
100622d2:	jmp    0x10007f38
100622d7:	lea    ecx,[ebp-0x64]
100622da:	jmp    0x10007f38
100622df:	lea    ecx,[ebp-0x2c]
100622e2:	jmp    0x10007f38
100622e7:	mov    edx,DWORD PTR [esp+0x8]
100622eb:	lea    eax,[edx-0x84]
100622f1:	mov    ecx,DWORD PTR [edx-0x88]
100622f7:	xor    ecx,eax
100622f9:	call   0x100430d7
100622fe:	mov    eax,0x10078b38
10062303:	jmp    0x1005941c
10062308:	lea    esi,[ebp+0x24]
1006230b:	jmp    0x10009d3c
10062310:	lea    ecx,[ebp+0x8]
10062313:	jmp    0x10007f38
10062318:	mov    ecx,DWORD PTR [ebp-0x10]
1006231b:	jmp    0x10007f38
10062320:	mov    edx,DWORD PTR [esp+0x8]
10062324:	lea    eax,[edx+0xc]
10062327:	mov    ecx,DWORD PTR [edx-0x18]
1006232a:	xor    ecx,eax
1006232c:	call   0x100430d7
10062331:	mov    eax,0x10078b74
10062336:	jmp    0x1005941c
1006233b:	jmp    0x1000205f
10062340:	mov    edx,DWORD PTR [esp+0x8]
10062344:	lea    eax,[edx+0xc]
10062347:	mov    ecx,DWORD PTR [edx-0x1c]
1006234a:	xor    ecx,eax
1006234c:	call   0x100430d7
10062351:	mov    eax,0x10078bd4
10062356:	jmp    0x1005941c
1006235b:	lea    eax,[ebp-0x14]
1006235e:	jmp    0x10009c4e
10062363:	mov    edx,DWORD PTR [esp+0x8]
10062367:	lea    eax,[edx+0xc]
1006236a:	mov    ecx,DWORD PTR [edx-0x1c]
1006236d:	xor    ecx,eax
1006236f:	call   0x100430d7
10062374:	mov    eax,0x10078c00
10062379:	jmp    0x1005941c
1006237e:	mov    eax,DWORD PTR [ebp-0xcc]
10062384:	and    eax,0x1
10062387:	je     0x1006239f
1006238d:	and    DWORD PTR [ebp-0xcc],0xfffffffe
10062394:	lea    ecx,[ebp-0xa0]
1006239a:	jmp    0x10007f38
1006239f:	ret    
100623a0:	mov    eax,DWORD PTR [ebp-0xcc]
100623a6:	and    eax,0x2
100623a9:	je     0x100623c1
100623af:	and    DWORD PTR [ebp-0xcc],0xfffffffd
100623b6:	lea    ecx,[ebp-0xbc]
100623bc:	jmp    0x10007f38
100623c1:	ret    
100623c2:	lea    ecx,[ebp-0x30]
100623c5:	jmp    0x10007f38
100623ca:	lea    ecx,[ebp-0x4c]
100623cd:	jmp    0x10007f38
100623d2:	lea    ecx,[ebp-0xbc]
100623d8:	jmp    0x10007f38
100623dd:	lea    ecx,[ebp-0x84]
100623e3:	jmp    0x10007f38
100623e8:	lea    ecx,[ebp-0xa0]
100623ee:	jmp    0x10007f38
100623f3:	lea    ecx,[ebp-0x68]
100623f6:	jmp    0x10007f38
100623fb:	lea    ecx,[ebp-0x84]
10062401:	jmp    0x10007f38
10062406:	mov    edx,DWORD PTR [esp+0x8]
1006240a:	lea    eax,[edx-0xcc]
10062410:	mov    ecx,DWORD PTR [edx-0xd0]
10062416:	xor    ecx,eax
10062418:	call   0x100430d7
1006241d:	add    eax,0xc
10062420:	mov    ecx,DWORD PTR [edx-0x8]
10062423:	xor    ecx,eax
10062425:	call   0x100430d7
1006242a:	mov    eax,0x10078c80
1006242f:	jmp    0x1005941c
10062434:	lea    ecx,[ebp-0x48]
10062437:	jmp    0x10007f38
1006243c:	lea    ecx,[ebp-0x2c]
1006243f:	jmp    0x10007f38
10062444:	mov    edx,DWORD PTR [esp+0x8]
10062448:	lea    eax,[edx+0xc]
1006244b:	mov    ecx,DWORD PTR [edx-0x4c]
1006244e:	xor    ecx,eax
10062450:	call   0x100430d7
10062455:	mov    eax,0x10078cb4
1006245a:	jmp    0x1005941c
1006245f:	lea    ecx,[ebp-0x30]
10062462:	jmp    0x10007f38
10062467:	mov    edx,DWORD PTR [esp+0x8]
1006246b:	lea    eax,[edx-0x44]
1006246e:	mov    ecx,DWORD PTR [edx-0x48]
10062471:	xor    ecx,eax
10062473:	call   0x100430d7
10062478:	add    eax,0xc
1006247b:	mov    ecx,DWORD PTR [edx-0x8]
1006247e:	xor    ecx,eax
10062480:	call   0x100430d7
10062485:	mov    eax,0x10078ce0
1006248a:	jmp    0x1005941c
1006248f:	lea    ecx,[ebp-0x50]
10062492:	jmp    0x10007f38
10062497:	lea    eax,[ebp-0xd8]
1006249d:	jmp    0x100020a1
100624a2:	lea    ecx,[ebp-0x34]
100624a5:	jmp    0x10007f38
100624aa:	lea    esi,[ebp-0xb8]
100624b0:	jmp    0x10009d3c
100624b5:	mov    esi,DWORD PTR [ebp-0xc8]
100624bb:	jmp    0x10009d3c
100624c0:	lea    edi,[ebp-0x7c]
100624c3:	jmp    0x10007f42
100624c8:	lea    edi,[ebp-0xa8]
100624ce:	jmp    0x10007f42
100624d3:	mov    edx,DWORD PTR [esp+0x8]
100624d7:	lea    eax,[edx-0xdc]
100624dd:	mov    ecx,DWORD PTR [edx-0xe0]
100624e3:	xor    ecx,eax
100624e5:	call   0x100430d7
100624ea:	add    eax,0xc
100624ed:	mov    ecx,DWORD PTR [edx-0x8]
100624f0:	xor    ecx,eax
100624f2:	call   0x100430d7
100624f7:	mov    eax,0x10078d3c
100624fc:	jmp    0x1005941c
10062501:	lea    eax,[ebp+0xc]
10062504:	jmp    0x100020a1
10062509:	lea    ecx,[ebp-0x30]
1006250c:	jmp    0x10007f38
10062511:	mov    esi,DWORD PTR [ebp-0x50]
10062514:	jmp    0x10009d3c
10062519:	lea    edi,[ebp-0xa8]
1006251f:	jmp    0x10007f42
10062524:	lea    edi,[ebp-0x7c]
10062527:	jmp    0x10007f42
1006252c:	mov    edx,DWORD PTR [esp+0x8]
10062530:	lea    eax,[edx+0xc]
10062533:	mov    ecx,DWORD PTR [edx-0xac]
10062539:	xor    ecx,eax
1006253b:	call   0x100430d7
10062540:	mov    ecx,DWORD PTR [edx-0x4]
10062543:	xor    ecx,eax
10062545:	call   0x100430d7
1006254a:	mov    eax,0x10078d88
1006254f:	jmp    0x1005941c
10062554:	lea    ecx,[ebp-0x30]
10062557:	jmp    0x10007f38
1006255c:	mov    edx,DWORD PTR [esp+0x8]
10062560:	lea    eax,[edx+0xc]
10062563:	mov    ecx,DWORD PTR [edx-0x4c]
10062566:	xor    ecx,eax
10062568:	call   0x100430d7
1006256d:	mov    ecx,DWORD PTR [edx-0x4]
10062570:	xor    ecx,eax
10062572:	call   0x100430d7
10062577:	mov    eax,0x10078db4
1006257c:	jmp    0x1005941c
10062581:	lea    eax,[ebp-0x14]
10062584:	jmp    0x100020a1
10062589:	mov    edx,DWORD PTR [esp+0x8]
1006258d:	lea    eax,[edx+0xc]
10062590:	mov    ecx,DWORD PTR [edx-0x2c]
10062593:	xor    ecx,eax
10062595:	call   0x100430d7
1006259a:	mov    eax,0x10078de0
1006259f:	jmp    0x1005941c
100625a4:	lea    ecx,[ebp-0x68]
100625a7:	jmp    0x10006ce3
100625ac:	lea    ecx,[ebp-0x30]
100625af:	jmp    0x100070e5
100625b4:	lea    ecx,[ebp-0x40]
100625b7:	jmp    0x10006ce3
100625bc:	lea    ecx,[ebp-0x2c]
100625bf:	jmp    0x10007f38
100625c4:	lea    ecx,[ebp-0x84]
100625ca:	jmp    0x10007f38
100625cf:	lea    ecx,[ebp-0x58]
100625d2:	jmp    0x10006ce3
100625d7:	lea    ecx,[ebp-0x84]
100625dd:	jmp    0x10007f38
100625e2:	mov    edx,DWORD PTR [esp+0x8]
100625e6:	lea    eax,[edx+0xc]
100625e9:	mov    ecx,DWORD PTR [edx-0x88]
100625ef:	xor    ecx,eax
100625f1:	call   0x100430d7
100625f6:	mov    ecx,DWORD PTR [edx-0x4]
100625f9:	xor    ecx,eax
100625fb:	call   0x100430d7
10062600:	mov    eax,0x10078e3c
10062605:	jmp    0x1005941c
1006260a:	lea    eax,[ebp-0x1c]
1006260d:	jmp    0x10034ec0
10062612:	mov    edx,DWORD PTR [esp+0x8]
10062616:	lea    eax,[edx-0x14]
10062619:	mov    ecx,DWORD PTR [edx-0x18]
1006261c:	xor    ecx,eax
1006261e:	call   0x100430d7
10062623:	mov    eax,0x10078e68
10062628:	jmp    0x1005941c
1006262d:	push   DWORD PTR [ebp-0x14]
10062630:	call   0x100430d2
10062635:	pop    ecx
10062636:	ret    
10062637:	lea    eax,[ebp-0x14]
1006263a:	jmp    0x10004233
1006263f:	mov    edx,DWORD PTR [esp+0x8]
10062643:	lea    eax,[edx+0xc]
10062646:	mov    ecx,DWORD PTR [edx-0x18]
10062649:	xor    ecx,eax
1006264b:	call   0x100430d7
10062650:	mov    eax,0x10078e9c
10062655:	jmp    0x1005941c
1006265a:	mov    eax,DWORD PTR [ebp+0x8]
1006265d:	jmp    0x10002078
10062662:	mov    edx,DWORD PTR [esp+0x8]
10062666:	lea    eax,[edx+0xc]
10062669:	mov    ecx,DWORD PTR [edx-0x10]
1006266c:	xor    ecx,eax
1006266e:	call   0x100430d7
10062673:	mov    eax,0x10078ec8
10062678:	jmp    0x1005941c
1006267d:	int3   
1006267e:	int3   
1006267f:	int3   
10062680:	lea    eax,[ebp-0x14]
10062683:	jmp    0x100020a1
10062688:	lea    eax,[ebp-0x10]
1006268b:	jmp    0x100020a1
10062690:	mov    edx,DWORD PTR [esp+0x8]
10062694:	lea    eax,[edx-0x20]
10062697:	mov    ecx,DWORD PTR [edx-0x24]
1006269a:	xor    ecx,eax
1006269c:	call   0x100430d7
100626a1:	mov    eax,0x10078efc
100626a6:	jmp    0x1005941c
100626ab:	int3   
100626ac:	int3   
100626ad:	int3   
100626ae:	int3   
100626af:	int3   
100626b0:	mov    eax,DWORD PTR [ebp-0x18]
100626b3:	push   eax
100626b4:	call   0x100430d2
100626b9:	pop    ecx
100626ba:	ret    
100626bb:	lea    edi,[ebp-0x28]
100626be:	jmp    0x100024f2
100626c3:	mov    eax,DWORD PTR [ebp-0x18]
100626c6:	push   eax
100626c7:	call   0x100430d2
100626cc:	pop    ecx
100626cd:	ret    
100626ce:	lea    edi,[ebp-0x18]
100626d1:	jmp    0x100024f2
100626d6:	lea    edi,[ebp-0x14]
100626d9:	jmp    0x100024f2
100626de:	mov    edx,DWORD PTR [esp+0x8]
100626e2:	lea    eax,[edx+0xc]
100626e5:	mov    ecx,DWORD PTR [edx-0x2c]
100626e8:	xor    ecx,eax
100626ea:	call   0x100430d7
100626ef:	mov    ecx,DWORD PTR [edx-0x4]
100626f2:	xor    ecx,eax
100626f4:	call   0x100430d7
100626f9:	mov    eax,0x10078f58
100626fe:	jmp    0x1005941c
10062703:	int3   
10062704:	int3   
10062705:	int3   
10062706:	int3   
10062707:	int3   
10062708:	int3   
10062709:	int3   
1006270a:	int3   
1006270b:	int3   
1006270c:	int3   
1006270d:	int3   
1006270e:	int3   
1006270f:	int3   
10062710:	lea    eax,[ebp-0x14]
10062713:	jmp    0x10034580
10062718:	lea    eax,[ebp-0x24]
1006271b:	jmp    0x10034ec0
10062720:	lea    eax,[ebp-0x1c]
10062723:	jmp    0x10034580
10062728:	mov    edx,DWORD PTR [esp+0x8]
1006272c:	lea    eax,[edx+0xc]
1006272f:	mov    ecx,DWORD PTR [edx-0x2c]
10062732:	xor    ecx,eax
10062734:	call   0x100430d7
10062739:	mov    eax,0x10078fc8
1006273e:	jmp    0x1005941c
10062743:	int3   
10062744:	int3   
10062745:	int3   
10062746:	int3   
10062747:	int3   
10062748:	int3   
10062749:	int3   
1006274a:	int3   
1006274b:	int3   
1006274c:	int3   
1006274d:	int3   
1006274e:	int3   
1006274f:	int3   
10062750:	mov    edx,DWORD PTR [esp+0x8]
10062754:	lea    eax,[edx+0xc]
10062757:	mov    ecx,DWORD PTR [edx-0x20]
1006275a:	xor    ecx,eax
1006275c:	call   0x100430d7
10062761:	mov    eax,0x10079020
10062766:	jmp    0x1005941c
1006276b:	int3   
1006276c:	int3   
1006276d:	int3   
1006276e:	int3   
1006276f:	int3   
10062770:	lea    ecx,[ebp-0x40]
10062773:	jmp    0x10037b30
10062778:	mov    edx,DWORD PTR [esp+0x8]
1006277c:	lea    eax,[edx-0x44]
1006277f:	mov    ecx,DWORD PTR [edx-0x48]
10062782:	xor    ecx,eax
10062784:	call   0x100430d7
10062789:	mov    eax,0x1007904c
1006278e:	jmp    0x1005941c
10062793:	int3   
10062794:	int3   
10062795:	int3   
10062796:	int3   
10062797:	int3   
10062798:	int3   
10062799:	int3   
1006279a:	int3   
1006279b:	int3   
1006279c:	int3   
1006279d:	int3   
1006279e:	int3   
1006279f:	int3   
100627a0:	lea    ecx,[ebp-0x14]
100627a3:	jmp    0x10037b30
100627a8:	mov    eax,DWORD PTR [ebp-0x1c]
100627ab:	and    eax,0x1
100627ae:	je     0x100627c0
100627b4:	and    DWORD PTR [ebp-0x1c],0xfffffffe
100627b8:	mov    ecx,DWORD PTR [ebp-0x18]
100627bb:	jmp    0x10007f38
100627c0:	ret    
100627c1:	mov    edx,DWORD PTR [esp+0x8]
100627c5:	lea    eax,[edx-0x1c]
100627c8:	mov    ecx,DWORD PTR [edx-0x20]
100627cb:	xor    ecx,eax
100627cd:	call   0x100430d7
100627d2:	mov    eax,0x10079080
100627d7:	jmp    0x1005941c
100627dc:	int3   
100627dd:	int3   
100627de:	int3   
100627df:	int3   
100627e0:	lea    eax,[ebp-0x1c]
100627e3:	jmp    0x100020a1
100627e8:	lea    ecx,[ebp-0x44]
100627eb:	jmp    0x10007f38
100627f0:	mov    edx,DWORD PTR [esp+0x8]
100627f4:	lea    eax,[edx+0xc]
100627f7:	mov    ecx,DWORD PTR [edx-0x48]
100627fa:	xor    ecx,eax
100627fc:	call   0x100430d7
10062801:	mov    eax,0x100790e8
10062806:	jmp    0x1005941c
1006280b:	int3   
1006280c:	int3   
1006280d:	int3   
1006280e:	int3   
1006280f:	int3   
10062810:	lea    ecx,[ebp-0x54]
10062813:	jmp    0x10007f38
10062818:	lea    ecx,[ebp-0x38]
1006281b:	jmp    0x10043210
10062820:	lea    eax,[ebp-0x58]
10062823:	jmp    0x100020a1
10062828:	mov    edx,DWORD PTR [esp+0x8]
1006282c:	lea    eax,[edx-0x5c]
1006282f:	mov    ecx,DWORD PTR [edx-0x60]
10062832:	xor    ecx,eax
10062834:	call   0x100430d7
10062839:	mov    eax,0x10079124
1006283e:	jmp    0x1005941c
10062843:	int3   
10062844:	int3   
10062845:	int3   
10062846:	int3   
10062847:	int3   
10062848:	int3   
10062849:	int3   
1006284a:	int3   
1006284b:	int3   
1006284c:	int3   
1006284d:	int3   
1006284e:	int3   
1006284f:	int3   
10062850:	mov    eax,DWORD PTR [ebp-0x58]
10062853:	and    eax,0x1
10062856:	je     0x10062868
1006285c:	and    DWORD PTR [ebp-0x58],0xfffffffe
10062860:	mov    eax,DWORD PTR [ebp+0x4]
10062863:	jmp    0x10002078
10062868:	ret    
10062869:	lea    ecx,[ebp-0x54]
1006286c:	jmp    0x10007f38
10062871:	lea    ecx,[ebp-0x38]
10062874:	jmp    0x10043210
10062879:	mov    edx,DWORD PTR [esp+0x8]
1006287d:	lea    eax,[edx-0x60]
10062880:	mov    ecx,DWORD PTR [edx-0x64]
10062883:	xor    ecx,eax
10062885:	call   0x100430d7
1006288a:	mov    eax,0x10079160
1006288f:	jmp    0x1005941c
10062894:	int3   
10062895:	int3   
10062896:	int3   
10062897:	int3   
10062898:	int3   
10062899:	int3   
1006289a:	int3   
1006289b:	int3   
1006289c:	int3   
1006289d:	int3   
1006289e:	int3   
1006289f:	int3   
100628a0:	mov    eax,DWORD PTR [ebp-0x14]
100628a3:	and    eax,0x1
100628a6:	je     0x100628b8
100628ac:	and    DWORD PTR [ebp-0x14],0xfffffffe
100628b0:	mov    ecx,DWORD PTR [ebp-0x10]
100628b3:	jmp    0x10007f38
100628b8:	ret    
100628b9:	lea    ecx,[ebp-0x30]
100628bc:	jmp    0x10007f38
100628c1:	lea    ecx,[ebp-0x30]
100628c4:	jmp    0x10007f38
100628c9:	lea    ecx,[ebp-0x30]
100628cc:	jmp    0x10007f38
100628d1:	lea    ecx,[ebp-0x30]
100628d4:	jmp    0x10007f38
100628d9:	lea    ecx,[ebp-0x30]
100628dc:	jmp    0x10007f38
100628e1:	lea    ecx,[ebp-0x30]
100628e4:	jmp    0x10007f38
100628e9:	mov    edx,DWORD PTR [esp+0x8]
100628ed:	lea    eax,[edx-0x34]
100628f0:	mov    ecx,DWORD PTR [edx-0x38]
100628f3:	xor    ecx,eax
100628f5:	call   0x100430d7
100628fa:	mov    eax,0x100791bc
100628ff:	jmp    0x1005941c
10062904:	lea    ecx,[ebp-0x64]
10062907:	jmp    0x10007f38
1006290c:	lea    ecx,[ebp-0x2c]
1006290f:	jmp    0x10007f38
10062914:	lea    esi,[ebp-0x90]
1006291a:	jmp    0x1000466f
1006291f:	lea    ecx,[ebp-0x80]
10062922:	jmp    0x10007f38
10062927:	lea    ecx,[ebp-0x48]
1006292a:	jmp    0x10007f38
1006292f:	lea    ecx,[ebp-0x80]
10062932:	jmp    0x10007f38
10062937:	mov    edx,DWORD PTR [esp+0x8]
1006293b:	lea    eax,[edx-0x94]
10062941:	mov    ecx,DWORD PTR [edx-0x98]
10062947:	xor    ecx,eax
10062949:	call   0x100430d7
1006294e:	mov    eax,0x10079220
10062953:	jmp    0x1005941c
10062958:	lea    ecx,[ebp-0x64]
1006295b:	jmp    0x10007f38
10062960:	lea    ecx,[ebp-0x2c]
10062963:	jmp    0x10007f38
10062968:	lea    ecx,[ebp-0x48]
1006296b:	jmp    0x10007f38
10062970:	mov    edx,DWORD PTR [esp+0x8]
10062974:	lea    eax,[edx-0x64]
10062977:	mov    ecx,DWORD PTR [edx-0x68]
1006297a:	xor    ecx,eax
1006297c:	call   0x100430d7
10062981:	mov    eax,0x1007925c
10062986:	jmp    0x1005941c
1006298b:	lea    eax,[ebp-0x24]
1006298e:	jmp    0x1003a080
10062993:	push   DWORD PTR [ebp-0x1c]
10062996:	call   0x100430d2
1006299b:	pop    ecx
1006299c:	ret    
1006299d:	mov    eax,DWORD PTR [ebp-0x10]
100629a0:	and    eax,0x1
100629a3:	je     0x100629b5
100629a9:	and    DWORD PTR [ebp-0x10],0xfffffffe
100629ad:	lea    ecx,[ebp-0x44]
100629b0:	jmp    0x10007f38
100629b5:	ret    
100629b6:	mov    eax,DWORD PTR [ebp-0x10]
100629b9:	and    eax,0x2
100629bc:	je     0x100629ce
100629c2:	and    DWORD PTR [ebp-0x10],0xfffffffd
100629c6:	lea    ecx,[ebp-0x7c]
100629c9:	jmp    0x10007f38
100629ce:	ret    
100629cf:	mov    eax,DWORD PTR [ebp-0x10]
100629d2:	and    eax,0x4
100629d5:	je     0x100629e7
100629db:	and    DWORD PTR [ebp-0x10],0xfffffffb
100629df:	lea    ecx,[ebp-0x60]
100629e2:	jmp    0x10007f38
100629e7:	ret    
100629e8:	mov    eax,DWORD PTR [ebp-0x10]
100629eb:	and    eax,0x8
100629ee:	je     0x10062a03
100629f4:	and    DWORD PTR [ebp-0x10],0xfffffff7
100629f8:	lea    ecx,[ebp-0x98]
100629fe:	jmp    0x10007f38
10062a03:	ret    
10062a04:	lea    ecx,[ebp-0x44]
10062a07:	jmp    0x10007f38
10062a0c:	lea    ecx,[ebp-0x98]
10062a12:	jmp    0x10007f38
10062a17:	lea    ecx,[ebp-0x60]
10062a1a:	jmp    0x10007f38
10062a1f:	lea    ecx,[ebp-0x7c]
10062a22:	jmp    0x10007f38
10062a27:	mov    edx,DWORD PTR [esp+0x8]
10062a2b:	lea    eax,[edx+0xc]
10062a2e:	mov    ecx,DWORD PTR [edx-0xb8]
10062a34:	xor    ecx,eax
10062a36:	call   0x100430d7
10062a3b:	mov    eax,0x100792f0
10062a40:	jmp    0x1005941c
10062a45:	lea    eax,[ebp-0x10]
10062a48:	jmp    0x10002078
10062a4d:	mov    edx,DWORD PTR [esp+0x8]
10062a51:	lea    eax,[edx+0xc]
10062a54:	mov    ecx,DWORD PTR [edx-0x14]
10062a57:	xor    ecx,eax
10062a59:	call   0x100430d7
10062a5e:	mov    eax,0x1007931c
10062a63:	jmp    0x1005941c
10062a68:	lea    ecx,[ebp-0xbc]
10062a6e:	jmp    0x10007f38
10062a73:	lea    eax,[ebp-0xdc]
10062a79:	jmp    0x10012625
10062a7e:	lea    eax,[ebp-0xe0]
10062a84:	jmp    0x10012625
10062a89:	lea    ecx,[ebp-0xbc]
10062a8f:	jmp    0x10007f38
10062a94:	lea    ecx,[ebp-0xbc]
10062a9a:	jmp    0x10007f38
10062a9f:	lea    ecx,[ebp-0x30]
10062aa2:	jmp    0x10007f38
10062aa7:	lea    eax,[ebp-0xa0]
10062aad:	jmp    0x100020a1
10062ab2:	lea    ecx,[ebp-0xbc]
10062ab8:	jmp    0x10007f38
10062abd:	lea    ecx,[ebp-0xbc]
10062ac3:	jmp    0x10007f38
10062ac8:	lea    ecx,[ebp-0xbc]
10062ace:	jmp    0x10007f38
10062ad3:	lea    ecx,[ebp-0xbc]
10062ad9:	jmp    0x10007f38
10062ade:	lea    edi,[ebp-0xe4]
10062ae4:	jmp    0x100024f2
10062ae9:	lea    ecx,[ebp-0x74]
10062aec:	jmp    0x10007f38
10062af1:	mov    edx,DWORD PTR [esp+0x8]
10062af5:	lea    eax,[edx-0xe4]
10062afb:	mov    ecx,DWORD PTR [edx-0xe8]
10062b01:	xor    ecx,eax
10062b03:	call   0x100430d7
10062b08:	add    eax,0xc
10062b0b:	mov    ecx,DWORD PTR [edx-0x8]
10062b0e:	xor    ecx,eax
10062b10:	call   0x100430d7
10062b15:	mov    eax,0x100793a8
10062b1a:	jmp    0x1005941c
10062b1f:	lea    ecx,[ebp-0x28]
10062b22:	jmp    0x1002258a
10062b27:	lea    ecx,[ebp-0x38]
10062b2a:	jmp    0x1002258a
10062b2f:	mov    edx,DWORD PTR [esp+0x8]
10062b33:	lea    eax,[edx+0xc]
10062b36:	mov    ecx,DWORD PTR [edx-0x3c]
10062b39:	xor    ecx,eax
10062b3b:	call   0x100430d7
10062b40:	mov    eax,0x10079410
10062b45:	jmp    0x1005941c
10062b4a:	lea    eax,[ebp-0x18]
10062b4d:	jmp    0x10012625
10062b52:	lea    ecx,[ebp-0x60]
10062b55:	jmp    0x1002258a
10062b5a:	lea    ecx,[ebp-0x50]
10062b5d:	jmp    0x1002258a
10062b62:	lea    ecx,[ebp-0x70]
10062b65:	jmp    0x1002258a
10062b6a:	lea    edi,[ebp+0x10]
10062b6d:	jmp    0x100024f2
10062b72:	lea    ecx,[ebp-0x80]
10062b75:	jmp    0x1002258a
10062b7a:	lea    ecx,[ebp-0x40]
10062b7d:	jmp    0x1002258a
10062b82:	lea    ecx,[ebp-0x30]
10062b85:	jmp    0x1002258a
10062b8a:	lea    edi,[ebp+0x10]
10062b8d:	jmp    0x100024f2
10062b92:	mov    edx,DWORD PTR [esp+0x8]
10062b96:	lea    eax,[edx+0xc]
10062b99:	mov    ecx,DWORD PTR [edx-0xb4]
10062b9f:	xor    ecx,eax
10062ba1:	call   0x100430d7
10062ba6:	mov    eax,0x100794f0
10062bab:	jmp    0x1005941c
10062bb0:	lea    eax,[ebp-0x18]
10062bb3:	jmp    0x10012625
10062bb8:	lea    eax,[ebp-0x28]
10062bbb:	jmp    0x100042aa
10062bc0:	lea    eax,[ebp-0x28]
10062bc3:	jmp    0x10024443
10062bc8:	lea    esi,[ebp-0x1c]
10062bcb:	jmp    0x100046bf
10062bd0:	mov    edx,DWORD PTR [esp+0x8]
10062bd4:	lea    eax,[edx+0xc]
10062bd7:	mov    ecx,DWORD PTR [edx-0x60]
10062bda:	xor    ecx,eax
10062bdc:	call   0x100430d7
10062be1:	mov    eax,0x10079568
10062be6:	jmp    0x1005941c
10062beb:	lea    eax,[ebp-0x30]
10062bee:	jmp    0x100042aa
10062bf3:	lea    ecx,[ebp+0x54]
10062bf6:	jmp    0x10007f38
10062bfb:	lea    ecx,[ebp+0x1c]
10062bfe:	jmp    0x10007f38
10062c03:	lea    ecx,[ebp+0x0]
10062c06:	jmp    0x10007f38
10062c0b:	lea    ecx,[ebp+0x38]
10062c0e:	jmp    0x10007f38
10062c13:	lea    esi,[ebp-0xf0]
10062c19:	jmp    0x10003431
10062c1e:	lea    ecx,[ebp-0x68]
10062c21:	jmp    0x10007f38
10062c26:	lea    ecx,[ebp-0x4c]
10062c29:	jmp    0x10007f38
10062c2e:	mov    edx,DWORD PTR [esp+0x8]
10062c32:	lea    eax,[edx+0xc]
10062c35:	mov    ecx,DWORD PTR [edx-0xf4]
10062c3b:	xor    ecx,eax
10062c3d:	call   0x100430d7
10062c42:	mov    ecx,DWORD PTR [edx+0x7c]
10062c45:	xor    ecx,eax
10062c47:	call   0x100430d7
10062c4c:	mov    eax,0x10079614
10062c51:	jmp    0x1005941c
10062c56:	mov    edx,DWORD PTR [esp+0x8]
10062c5a:	lea    eax,[edx+0xc]
10062c5d:	mov    ecx,DWORD PTR [edx-0x20]
10062c60:	xor    ecx,eax
10062c62:	call   0x100430d7
10062c67:	mov    eax,0x1007966c
10062c6c:	jmp    0x1005941c
10062c71:	lea    ecx,[ebp-0x6c]
10062c74:	jmp    0x10007f38
10062c79:	lea    ecx,[ebp-0x34]
10062c7c:	jmp    0x1000119e
10062c81:	lea    ecx,[ebp-0x50]
10062c84:	jmp    0x10007f38
10062c89:	lea    ecx,[ebp-0x88]
10062c8f:	jmp    0x10007f38
10062c94:	lea    ecx,[ebp-0x88]
10062c9a:	jmp    0x10007f38
10062c9f:	mov    edx,DWORD PTR [esp+0x8]
10062ca3:	lea    eax,[edx-0x9c]
10062ca9:	mov    ecx,DWORD PTR [edx-0xa0]
10062caf:	xor    ecx,eax
10062cb1:	call   0x100430d7
10062cb6:	add    eax,0xc
10062cb9:	mov    ecx,DWORD PTR [edx-0x8]
10062cbc:	xor    ecx,eax
10062cbe:	call   0x100430d7
10062cc3:	mov    eax,0x100796c0
10062cc8:	jmp    0x1005941c
10062ccd:	push   DWORD PTR [ebp-0x14]
10062cd0:	call   0x100430d2
10062cd5:	pop    ecx
10062cd6:	ret    
10062cd7:	mov    edx,DWORD PTR [esp+0x8]
10062cdb:	lea    eax,[edx+0xc]
10062cde:	mov    ecx,DWORD PTR [edx-0x18]
10062ce1:	xor    ecx,eax
10062ce3:	call   0x100430d7
10062ce8:	mov    eax,0x10079720
10062ced:	jmp    0x1005941c
10062cf2:	lea    esi,[ebp-0x28]
10062cf5:	jmp    0x100075ca
10062cfa:	lea    eax,[ebp+0x0]
10062cfd:	jmp    0x10017a33
10062d02:	mov    edx,DWORD PTR [esp+0x8]
10062d06:	lea    eax,[edx+0xc]
10062d09:	mov    ecx,DWORD PTR [edx-0x2c]
10062d0c:	xor    ecx,eax
10062d0e:	call   0x100430d7
10062d13:	mov    ecx,DWORD PTR [edx+0x410]
10062d19:	xor    ecx,eax
10062d1b:	call   0x100430d7
10062d20:	mov    eax,0x10079788
10062d25:	jmp    0x1005941c
10062d2a:	mov    edx,DWORD PTR [esp+0x8]
10062d2e:	lea    eax,[edx+0xc]
10062d31:	mov    ecx,DWORD PTR [edx-0x20]
10062d34:	xor    ecx,eax
10062d36:	call   0x100430d7
10062d3b:	mov    eax,0x100797e0
10062d40:	jmp    0x1005941c
10062d45:	lea    ecx,[ebp-0x110]
10062d4b:	jmp    0x10007f38
10062d50:	lea    ecx,[ebp-0x60]
10062d53:	jmp    0x10007f38
10062d58:	lea    esi,[ebp-0xec]
10062d5e:	jmp    0x10003431
10062d63:	lea    ecx,[ebp-0x44]
10062d66:	jmp    0x10007f38
10062d6b:	mov    edx,DWORD PTR [esp+0x8]
10062d6f:	lea    eax,[edx+0xc]
10062d72:	mov    ecx,DWORD PTR [edx-0x114]
10062d78:	xor    ecx,eax
10062d7a:	call   0x100430d7
10062d7f:	mov    ecx,DWORD PTR [edx-0x4]
10062d82:	xor    ecx,eax
10062d84:	call   0x100430d7
10062d89:	mov    eax,0x1007982c
10062d8e:	jmp    0x1005941c
10062d93:	lea    ecx,[ebp-0x44]
10062d96:	jmp    0x10007f38
10062d9b:	lea    ecx,[ebp-0x28]
10062d9e:	jmp    0x10007f38
10062da3:	mov    edx,DWORD PTR [esp+0x8]
10062da7:	lea    eax,[edx+0xc]
10062daa:	mov    ecx,DWORD PTR [edx-0x48]
10062dad:	xor    ecx,eax
10062daf:	call   0x100430d7
10062db4:	mov    eax,0x10079860
10062db9:	jmp    0x1005941c
10062dbe:	mov    edx,DWORD PTR [esp+0x8]
10062dc2:	lea    eax,[edx+0xc]
10062dc5:	mov    ecx,DWORD PTR [edx-0x1c]
10062dc8:	xor    ecx,eax
10062dca:	call   0x100430d7
10062dcf:	mov    eax,0x100798b8
10062dd4:	jmp    0x1005941c
10062dd9:	lea    eax,[ebp-0x58]
10062ddc:	jmp    0x10012625
10062de1:	lea    edi,[ebp-0x5c]
10062de4:	jmp    0x100024f2
10062de9:	lea    ecx,[ebp-0x30]
10062dec:	jmp    0x10007f38
10062df1:	lea    ecx,[ebp-0x50]
10062df4:	jmp    0x1000119e
10062df9:	lea    edi,[ebp-0x54]
10062dfc:	jmp    0x100024f2
10062e01:	lea    ecx,[ebp-0x98]
10062e07:	jmp    0x10007f38
10062e0c:	lea    edi,[ebp-0x54]
10062e0f:	jmp    0x100024f2
10062e14:	mov    edx,DWORD PTR [esp+0x8]
10062e18:	lea    eax,[edx+0xc]
10062e1b:	mov    ecx,DWORD PTR [edx-0x9c]
10062e21:	xor    ecx,eax
10062e23:	call   0x100430d7
10062e28:	mov    ecx,DWORD PTR [edx-0x8]
10062e2b:	xor    ecx,eax
10062e2d:	call   0x100430d7
10062e32:	mov    eax,0x10079954
10062e37:	jmp    0x1005941c
10062e3c:	lea    esi,[ebp-0x24]
10062e3f:	jmp    0x10009816
10062e44:	lea    ecx,[ebp-0x40]
10062e47:	jmp    0x10007f38
10062e4c:	mov    edx,DWORD PTR [esp+0x8]
10062e50:	lea    eax,[edx+0xc]
10062e53:	mov    ecx,DWORD PTR [edx-0x44]
10062e56:	xor    ecx,eax
10062e58:	call   0x100430d7
10062e5d:	mov    eax,0x10079988
10062e62:	jmp    0x1005941c
10062e67:	lea    eax,[ebp-0x18]
10062e6a:	jmp    0x100020a1
10062e6f:	mov    edx,DWORD PTR [esp+0x8]
10062e73:	lea    eax,[edx+0xc]
10062e76:	mov    ecx,DWORD PTR [edx-0x24]
10062e79:	xor    ecx,eax
10062e7b:	call   0x100430d7
10062e80:	mov    eax,0x100799b4
10062e85:	jmp    0x1005941c
10062e8a:	lea    esi,[ebp-0x28]
10062e8d:	jmp    0x1000466f
10062e92:	mov    edx,DWORD PTR [esp+0x8]
10062e96:	lea    eax,[edx+0xc]
10062e99:	mov    ecx,DWORD PTR [edx-0x2c]
10062e9c:	xor    ecx,eax
10062e9e:	call   0x100430d7
10062ea3:	mov    eax,0x10079a1c
10062ea8:	jmp    0x1005941c
10062ead:	lea    esi,[ebp-0x24]
10062eb0:	jmp    0x1000466f
10062eb5:	mov    edx,DWORD PTR [esp+0x8]
10062eb9:	lea    eax,[edx+0xc]
10062ebc:	mov    ecx,DWORD PTR [edx-0x28]
10062ebf:	xor    ecx,eax
10062ec1:	call   0x100430d7
10062ec6:	mov    eax,0x10079ab0
10062ecb:	jmp    0x1005941c
10062ed0:	lea    edi,[ebp+0xc]
10062ed3:	jmp    0x100024f2
10062ed8:	lea    edi,[ebp+0x8]
10062edb:	jmp    0x100024f2
10062ee0:	lea    ecx,[ebp-0x44]
10062ee3:	jmp    0x10007f38
10062ee8:	lea    ecx,[ebp-0x28]
10062eeb:	jmp    0x10007f38
10062ef0:	mov    edx,DWORD PTR [esp+0x8]
10062ef4:	lea    eax,[edx+0xc]
10062ef7:	mov    ecx,DWORD PTR [edx-0x48]
10062efa:	xor    ecx,eax
10062efc:	call   0x100430d7
10062f01:	mov    eax,0x10079af4
10062f06:	jmp    0x1005941c
10062f0b:	lea    ecx,[ebp-0x180]
10062f11:	jmp    0x10007f38
10062f16:	lea    esi,[ebp-0xc0]
10062f1c:	jmp    0x1000bdb4
10062f21:	lea    ecx,[ebp-0x180]
10062f27:	jmp    0x10007f38
10062f2c:	lea    ecx,[ebp-0x180]
10062f32:	jmp    0x10007f38
10062f37:	lea    ecx,[ebp-0x180]
10062f3d:	jmp    0x10007f38
10062f42:	lea    ecx,[ebp-0x180]
10062f48:	jmp    0x10007f38
10062f4d:	lea    esi,[ebp-0x158]
10062f53:	jmp    0x1000be1c
10062f58:	lea    ecx,[ebp-0x2c]
10062f5b:	jmp    0x10007f38
10062f60:	lea    ecx,[ebp-0x180]
10062f66:	jmp    0x10007f38
10062f6b:	lea    ecx,[ebp-0x1b8]
10062f71:	jmp    0x10007f38
10062f76:	lea    ecx,[ebp-0x1f0]
10062f7c:	jmp    0x10007f38
10062f81:	lea    ecx,[ebp-0x20c]
10062f87:	jmp    0x10007f38
10062f8c:	lea    ecx,[ebp-0x1d4]
10062f92:	jmp    0x10007f38
10062f97:	lea    ecx,[ebp-0x19c]
10062f9d:	jmp    0x10007f38
10062fa2:	lea    ecx,[ebp-0x180]
10062fa8:	jmp    0x10007f38
10062fad:	lea    ecx,[ebp-0x180]
10062fb3:	jmp    0x10007f38
10062fb8:	lea    ecx,[ebp-0x180]
10062fbe:	jmp    0x10007f38
10062fc3:	lea    ecx,[ebp-0x2c]
10062fc6:	jmp    0x10007f38
10062fcb:	lea    ecx,[ebp-0x19c]
10062fd1:	jmp    0x10007f38
10062fd6:	lea    ecx,[ebp-0x19c]
10062fdc:	jmp    0x10007f38
10062fe1:	lea    ecx,[ebp-0x1b8]
10062fe7:	jmp    0x10007f38
10062fec:	mov    edx,DWORD PTR [esp+0x8]
10062ff0:	lea    eax,[edx+0xc]
10062ff3:	mov    ecx,DWORD PTR [edx-0x210]
10062ff9:	xor    ecx,eax
10062ffb:	call   0x100430d7
10063000:	mov    ecx,DWORD PTR [edx-0x4]
10063003:	xor    ecx,eax
10063005:	call   0x100430d7
1006300a:	mov    eax,0x10079bc8
1006300f:	jmp    0x1005941c
10063014:	mov    eax,DWORD PTR [ebp-0x14]
10063017:	and    eax,0x1
1006301a:	je     0x1006302c
10063020:	and    DWORD PTR [ebp-0x14],0xfffffffe
10063024:	lea    ecx,[ebp-0x30]
10063027:	jmp    0x10007f38
1006302c:	ret    
1006302d:	mov    eax,DWORD PTR [ebp-0x14]
10063030:	and    eax,0x2
10063033:	je     0x10063045
10063039:	and    DWORD PTR [ebp-0x14],0xfffffffd
1006303d:	lea    ecx,[ebp-0x30]
10063040:	jmp    0x10007f38
10063045:	ret    
10063046:	mov    eax,DWORD PTR [ebp-0x14]
10063049:	and    eax,0x4
1006304c:	je     0x1006305e
10063052:	and    DWORD PTR [ebp-0x14],0xfffffffb
10063056:	lea    ecx,[ebp-0x30]
10063059:	jmp    0x10007f38
1006305e:	ret    
1006305f:	mov    eax,DWORD PTR [ebp-0x14]
10063062:	and    eax,0x8
10063065:	je     0x10063077
1006306b:	and    DWORD PTR [ebp-0x14],0xfffffff7
1006306f:	lea    ecx,[ebp-0x4c]
10063072:	jmp    0x10007f38
10063077:	ret    
10063078:	mov    edx,DWORD PTR [esp+0x8]
1006307c:	lea    eax,[edx+0xc]
1006307f:	mov    ecx,DWORD PTR [edx-0x50]
10063082:	xor    ecx,eax
10063084:	call   0x100430d7
10063089:	mov    eax,0x10079c0c
1006308e:	jmp    0x1005941c
10063093:	mov    eax,DWORD PTR [ebp-0x14]
10063096:	and    eax,0x1
10063099:	je     0x100630ab
1006309f:	and    DWORD PTR [ebp-0x14],0xfffffffe
100630a3:	lea    ecx,[ebp-0x30]
100630a6:	jmp    0x10007f38
100630ab:	ret    
100630ac:	mov    eax,DWORD PTR [ebp-0x14]
100630af:	and    eax,0x2
100630b2:	je     0x100630c4
100630b8:	and    DWORD PTR [ebp-0x14],0xfffffffd
100630bc:	lea    ecx,[ebp-0x30]
100630bf:	jmp    0x10007f38
100630c4:	ret    
100630c5:	mov    eax,DWORD PTR [ebp-0x14]
100630c8:	and    eax,0x4
100630cb:	je     0x100630dd
100630d1:	and    DWORD PTR [ebp-0x14],0xfffffffb
100630d5:	lea    ecx,[ebp-0x4c]
100630d8:	jmp    0x10007f38
100630dd:	ret    
100630de:	mov    edx,DWORD PTR [esp+0x8]
100630e2:	lea    eax,[edx+0xc]
100630e5:	mov    ecx,DWORD PTR [edx-0x54]
100630e8:	xor    ecx,eax
100630ea:	call   0x100430d7
100630ef:	mov    eax,0x10079c48
100630f4:	jmp    0x1005941c
100630f9:	lea    eax,[ebp-0x48]
100630fc:	push   eax
100630fd:	call   0x10006cd6
10063102:	ret    
10063103:	lea    ecx,[ebp-0x80]
10063106:	jmp    0x10007f38
1006310b:	lea    ecx,[ebp-0x30]
1006310e:	jmp    0x1000119e
10063113:	mov    edx,DWORD PTR [esp+0x8]
10063117:	lea    eax,[edx+0xc]
1006311a:	mov    ecx,DWORD PTR [edx-0x84]
10063120:	xor    ecx,eax
10063122:	call   0x100430d7
10063127:	mov    ecx,DWORD PTR [edx-0x4]
1006312a:	xor    ecx,eax
1006312c:	call   0x100430d7
10063131:	mov    eax,0x10079c8c
10063136:	jmp    0x1005941c
1006313b:	lea    eax,[ebp-0x14]
1006313e:	jmp    0x10002078
10063143:	lea    eax,[ebp-0x18]
10063146:	jmp    0x10002078
1006314b:	lea    eax,[ebp-0x1c]
1006314e:	jmp    0x10002078
10063153:	lea    eax,[ebp-0x1c]
10063156:	jmp    0x10034ec0
1006315b:	mov    edx,DWORD PTR [esp+0x8]
1006315f:	lea    eax,[edx-0x1c]
10063162:	mov    ecx,DWORD PTR [edx-0x20]
10063165:	xor    ecx,eax
10063167:	call   0x100430d7
1006316c:	mov    eax,0x10079cd0
10063171:	jmp    0x1005941c
10063176:	lea    eax,[ebp-0x78]
10063179:	jmp    0x10002078
1006317e:	lea    eax,[ebp-0x6c]
10063181:	jmp    0x10002078
10063186:	lea    eax,[ebp-0x70]
10063189:	jmp    0x10002078
1006318e:	lea    eax,[ebp-0x74]
10063191:	jmp    0x10034ec0
10063196:	mov    edx,DWORD PTR [esp+0x8]
1006319a:	lea    eax,[edx-0x7c]
1006319d:	mov    ecx,DWORD PTR [edx-0x80]
100631a0:	xor    ecx,eax
100631a2:	call   0x100430d7
100631a7:	mov    eax,0x10079d14
100631ac:	jmp    0x1005941c
100631b1:	lea    eax,[ebp-0x18]
100631b4:	jmp    0x10002078
100631b9:	lea    eax,[ebp-0x14]
100631bc:	jmp    0x10002078
100631c1:	lea    eax,[ebp-0x10]
100631c4:	jmp    0x10002078
100631c9:	lea    eax,[ebp-0x10]
100631cc:	jmp    0x10034ec0
100631d1:	mov    edx,DWORD PTR [esp+0x8]
100631d5:	lea    eax,[edx+0xc]
100631d8:	mov    ecx,DWORD PTR [edx-0x1c]
100631db:	xor    ecx,eax
100631dd:	call   0x100430d7
100631e2:	mov    eax,0x10079d58
100631e7:	jmp    0x1005941c
100631ec:	lea    ecx,[ebp-0x2c]
100631ef:	jmp    0x10007f38
100631f4:	push   DWORD PTR [ebp-0x30]
100631f7:	call   0x100430d2
100631fc:	pop    ecx
100631fd:	ret    
100631fe:	lea    eax,[ebp-0x48]
10063201:	jmp    0x100046a9
10063206:	lea    ecx,[ebp-0x64]
10063209:	jmp    0x10007f38
1006320e:	mov    edx,DWORD PTR [esp+0x8]
10063212:	lea    eax,[edx+0xc]
10063215:	mov    ecx,DWORD PTR [edx-0x68]
10063218:	xor    ecx,eax
1006321a:	call   0x100430d7
1006321f:	mov    ecx,DWORD PTR [edx-0x4]
10063222:	xor    ecx,eax
10063224:	call   0x100430d7
10063229:	mov    eax,0x10079d9c
1006322e:	jmp    0x1005941c
10063233:	lea    ecx,[ebp-0x3c]
10063236:	jmp    0x10037b30
1006323b:	lea    eax,[ebp-0x30]
1006323e:	jmp    0x100020a1
10063243:	mov    edx,DWORD PTR [esp+0x8]
10063247:	lea    eax,[edx+0xc]
1006324a:	mov    ecx,DWORD PTR [edx-0x40]
1006324d:	xor    ecx,eax
1006324f:	call   0x100430d7
10063254:	mov    ecx,DWORD PTR [edx-0x4]
10063257:	xor    ecx,eax
10063259:	call   0x100430d7
1006325e:	mov    eax,0x10079dd0
10063263:	jmp    0x1005941c
10063268:	lea    ecx,[ebp-0x3c]
1006326b:	jmp    0x10037b30
10063270:	lea    ecx,[ebp-0x2c]
10063273:	jmp    0x10007f38
10063278:	lea    ecx,[ebp-0x58]
1006327b:	jmp    0x10007f38
10063280:	lea    ecx,[ebp-0x58]
10063283:	jmp    0x10007f38
10063288:	lea    eax,[ebp-0x30]
1006328b:	jmp    0x100020a1
10063290:	mov    edx,DWORD PTR [esp+0x8]
10063294:	lea    eax,[edx+0xc]
10063297:	mov    ecx,DWORD PTR [edx-0x60]
1006329a:	xor    ecx,eax
1006329c:	call   0x100430d7
100632a1:	mov    ecx,DWORD PTR [edx-0x4]
100632a4:	xor    ecx,eax
100632a6:	call   0x100430d7
100632ab:	mov    eax,0x10079e1c
100632b0:	jmp    0x1005941c
100632b5:	lea    ecx,[ebp-0xc0]
100632bb:	jmp    0x10007f38
100632c0:	lea    ecx,[ebp-0x30]
100632c3:	jmp    0x10007f38
100632c8:	lea    ecx,[ebp-0x4c]
100632cb:	jmp    0x10007f38
100632d0:	lea    ecx,[ebp-0x68]
100632d3:	jmp    0x10007f38
100632d8:	lea    ecx,[ebp-0x84]
100632de:	jmp    0x10007f38
100632e3:	lea    ecx,[ebp-0xc0]
100632e9:	jmp    0x10007f38
100632ee:	lea    ecx,[ebp-0xc0]
100632f4:	jmp    0x10007f38
100632f9:	lea    esi,[ebp-0x14c]
100632ff:	jmp    0x10003431
10063304:	mov    edx,DWORD PTR [esp+0x8]
10063308:	lea    eax,[edx+0xc]
1006330b:	mov    ecx,DWORD PTR [edx-0x150]
10063311:	xor    ecx,eax
10063313:	call   0x100430d7
10063318:	mov    ecx,DWORD PTR [edx-0x4]
1006331b:	xor    ecx,eax
1006331d:	call   0x100430d7
10063322:	mov    eax,0x10079e88
10063327:	jmp    0x1005941c
1006332c:	lea    ecx,[ebp-0x34]
1006332f:	jmp    0x1000119e
10063334:	mov    edx,DWORD PTR [esp+0x8]
10063338:	lea    eax,[edx+0xc]
1006333b:	mov    ecx,DWORD PTR [edx-0x38]
1006333e:	xor    ecx,eax
10063340:	call   0x100430d7
10063345:	mov    ecx,DWORD PTR [edx-0x4]
10063348:	xor    ecx,eax
1006334a:	call   0x100430d7
1006334f:	mov    eax,0x10079eb4
10063354:	jmp    0x1005941c
10063359:	int3   
1006335a:	int3   
1006335b:	int3   
1006335c:	int3   
1006335d:	int3   
1006335e:	int3   
1006335f:	int3   
10063360:	lea    eax,[ebp-0x2c]
10063363:	jmp    0x100020a1
10063368:	lea    eax,[ebp-0x28]
1006336b:	jmp    0x100020a1
10063370:	mov    edx,DWORD PTR [esp+0x8]
10063374:	lea    eax,[edx-0x40]
10063377:	mov    ecx,DWORD PTR [edx-0x44]
1006337a:	xor    ecx,eax
1006337c:	call   0x100430d7
10063381:	add    eax,0x10
10063384:	mov    ecx,DWORD PTR [edx-0x8]
10063387:	xor    ecx,eax
10063389:	call   0x100430d7
1006338e:	mov    eax,0x10079ee8
10063393:	jmp    0x1005941c
10063398:	int3   
10063399:	int3   
1006339a:	int3   
1006339b:	int3   
1006339c:	int3   
1006339d:	int3   
1006339e:	int3   
1006339f:	int3   
100633a0:	lea    ecx,[ebp-0x40]
100633a3:	jmp    0x10037b30
100633a8:	mov    edx,DWORD PTR [esp+0x8]
100633ac:	lea    eax,[edx-0x3c]
100633af:	mov    ecx,DWORD PTR [edx-0x40]
100633b2:	xor    ecx,eax
100633b4:	call   0x100430d7
100633b9:	mov    eax,0x10079f14
100633be:	jmp    0x1005941c
100633c3:	int3   
100633c4:	int3   
100633c5:	int3   
100633c6:	int3   
100633c7:	int3   
100633c8:	int3   
100633c9:	int3   
100633ca:	int3   
100633cb:	int3   
100633cc:	int3   
100633cd:	int3   
100633ce:	int3   
100633cf:	int3   
100633d0:	lea    eax,[ebp-0x7c]
100633d3:	jmp    0x10002078
100633d8:	lea    ecx,[ebp-0xa8]
100633de:	jmp    0x10007f38
100633e3:	lea    ecx,[ebp-0x140]
100633e9:	jmp    0x10007f38
100633ee:	lea    ecx,[ebp-0x124]
100633f4:	jmp    0x10007f38
100633f9:	lea    ecx,[ebp-0x108]
100633ff:	jmp    0x10007f38
10063404:	lea    ecx,[ebp-0xec]
1006340a:	jmp    0x10007f38
1006340f:	lea    ecx,[ebp-0xd0]
10063415:	jmp    0x10043210
1006341a:	mov    edx,DWORD PTR [esp+0x8]
1006341e:	lea    eax,[edx+0xc]
10063421:	mov    ecx,DWORD PTR [edx-0x144]
10063427:	xor    ecx,eax
10063429:	call   0x100430d7
1006342e:	mov    ecx,DWORD PTR [edx-0x4]
10063431:	xor    ecx,eax
10063433:	call   0x100430d7
10063438:	mov    eax,0x10079f70
1006343d:	jmp    0x1005941c
10063442:	int3   
10063443:	int3   
10063444:	int3   
10063445:	int3   
10063446:	int3   
10063447:	int3   
10063448:	int3   
10063449:	int3   
1006344a:	int3   
1006344b:	int3   
1006344c:	int3   
1006344d:	int3   
1006344e:	int3   
1006344f:	int3   
10063450:	lea    eax,[ebp+0x4]
10063453:	jmp    0x10002078
10063458:	lea    eax,[ebp+0x4]
1006345b:	jmp    0x10002078
10063460:	mov    edx,DWORD PTR [esp+0x8]
10063464:	lea    eax,[edx-0x8]
10063467:	mov    ecx,DWORD PTR [edx-0xc]
1006346a:	xor    ecx,eax
1006346c:	call   0x100430d7
10063471:	mov    eax,0x10079fa4
10063476:	jmp    0x1005941c
1006347b:	lea    ecx,[ebp-0x58]
1006347e:	jmp    0x10007f38
10063483:	lea    ecx,[ebp+0x54]
10063486:	jmp    0x10007f38
1006348b:	lea    ecx,[ebp+0x1c]
1006348e:	jmp    0x10007f38
10063493:	lea    eax,[ebp-0x3c]
10063496:	jmp    0x100020a1
1006349b:	lea    eax,[ebp-0x1c]
1006349e:	jmp    0x100020a1
100634a3:	lea    ecx,[ebp+0x38]
100634a6:	jmp    0x10007f38
100634ab:	lea    ecx,[ebp+0x0]
100634ae:	jmp    0x10007f38
100634b3:	lea    ecx,[ebp-0x74]
100634b6:	jmp    0x10007f38
100634bb:	mov    edx,DWORD PTR [esp+0x8]
100634bf:	lea    eax,[edx+0xc]
100634c2:	mov    ecx,DWORD PTR [edx-0x78]
100634c5:	xor    ecx,eax
100634c7:	call   0x100430d7
100634cc:	mov    ecx,DWORD PTR [edx+0x7c]
100634cf:	xor    ecx,eax
100634d1:	call   0x100430d7
100634d6:	mov    eax,0x1007a044
100634db:	jmp    0x1005941c
100634e0:	lea    ecx,[ebp-0x50]
100634e3:	jmp    0x10007f38
100634e8:	lea    ecx,[ebp-0x88]
100634ee:	jmp    0x10007f38
100634f3:	lea    ecx,[ebp-0x6c]
100634f6:	jmp    0x10007f38
100634fb:	lea    ecx,[ebp-0x34]
100634fe:	jmp    0x1000119e
10063503:	lea    ecx,[ebp-0x50]
10063506:	jmp    0x10007f38
1006350b:	lea    ecx,[ebp-0xfc]
10063511:	jmp    0x10007f38
10063516:	lea    ecx,[ebp-0xfc]
1006351c:	jmp    0x10007f38
10063521:	push   DWORD PTR [ebp-0x110]
10063527:	call   0x100430d2
1006352c:	pop    ecx
1006352d:	ret    
1006352e:	lea    eax,[ebp-0xe0]
10063534:	jmp    0x100046a9
10063539:	lea    ecx,[ebp-0xfc]
1006353f:	jmp    0x10007f38
10063544:	lea    ecx,[ebp-0xdc]
1006354a:	jmp    0x10007f38
1006354f:	lea    ecx,[ebp-0xc0]
10063555:	jmp    0x10007f38
1006355a:	lea    ecx,[ebp-0xa4]
10063560:	jmp    0x10007f38
10063565:	lea    ecx,[ebp-0x50]
10063568:	jmp    0x10007f38
1006356d:	lea    ecx,[ebp-0xdc]
10063573:	jmp    0x10007f38
10063578:	mov    edx,DWORD PTR [esp+0x8]
1006357c:	lea    eax,[edx-0x114]
10063582:	mov    ecx,DWORD PTR [edx-0x118]
10063588:	xor    ecx,eax
1006358a:	call   0x100430d7
1006358f:	add    eax,0xc
10063592:	mov    ecx,DWORD PTR [edx-0x8]
10063595:	xor    ecx,eax
10063597:	call   0x100430d7
1006359c:	mov    eax,0x1007a0e8
100635a1:	jmp    0x1005941c
100635a6:	lea    ecx,[ebp-0xc0]
100635ac:	jmp    0x10007f38
100635b1:	lea    ecx,[ebp-0x34]
100635b4:	jmp    0x1000119e
100635b9:	lea    ecx,[ebp-0x114]
100635bf:	jmp    0x10007f38
100635c4:	lea    ecx,[ebp-0xf8]
100635ca:	jmp    0x10007f38
100635cf:	lea    ecx,[ebp-0xdc]
100635d5:	jmp    0x10007f38
100635da:	lea    ecx,[ebp-0x50]
100635dd:	jmp    0x10007f38
100635e2:	lea    ecx,[ebp-0x6c]
100635e5:	jmp    0x10007f38
100635ea:	mov    edx,DWORD PTR [esp+0x8]
100635ee:	lea    eax,[edx-0x11c]
100635f4:	mov    ecx,DWORD PTR [edx-0x120]
100635fa:	xor    ecx,eax
100635fc:	call   0x100430d7
10063601:	add    eax,0xc
10063604:	mov    ecx,DWORD PTR [edx-0x8]
10063607:	xor    ecx,eax
10063609:	call   0x100430d7
1006360e:	mov    eax,0x1007a150
10063613:	jmp    0x1005941c
10063618:	lea    ecx,[ebp-0x2c]
1006361b:	jmp    0x10007f38
10063620:	mov    edx,DWORD PTR [esp+0x8]
10063624:	lea    eax,[edx-0x24]
10063627:	mov    ecx,DWORD PTR [edx-0x28]
1006362a:	xor    ecx,eax
1006362c:	call   0x100430d7
10063631:	mov    eax,0x1007a17c
10063636:	jmp    0x1005941c
1006363b:	lea    ecx,[ebp-0x30]
1006363e:	jmp    0x10007f38
10063643:	mov    edx,DWORD PTR [esp+0x8]
10063647:	lea    eax,[edx-0x34]
1006364a:	mov    ecx,DWORD PTR [edx-0x38]
1006364d:	xor    ecx,eax
1006364f:	call   0x100430d7
10063654:	add    eax,0x8
10063657:	mov    ecx,DWORD PTR [edx-0x8]
1006365a:	xor    ecx,eax
1006365c:	call   0x100430d7
10063661:	mov    eax,0x1007a1a8
10063666:	jmp    0x1005941c
1006366b:	lea    ecx,[ebp-0x4c]
1006366e:	jmp    0x10007f38
10063673:	lea    ecx,[ebp-0x30]
10063676:	jmp    0x10007f38
1006367b:	lea    ecx,[ebp-0x68]
1006367e:	jmp    0x10007f38
10063683:	mov    edx,DWORD PTR [esp+0x8]
10063687:	lea    eax,[edx-0x6c]
1006368a:	mov    ecx,DWORD PTR [edx-0x70]
1006368d:	xor    ecx,eax
1006368f:	call   0x100430d7
10063694:	add    eax,0xc
10063697:	mov    ecx,DWORD PTR [edx-0x8]
1006369a:	xor    ecx,eax
1006369c:	call   0x100430d7
100636a1:	mov    eax,0x1007a1ec
100636a6:	jmp    0x1005941c
100636ab:	jmp    0x10037b60
100636b0:	mov    edx,DWORD PTR [esp+0x8]
100636b4:	lea    eax,[edx+0xc]
100636b7:	mov    ecx,DWORD PTR [edx-0x10]
100636ba:	xor    ecx,eax
100636bc:	call   0x100430d7
100636c1:	mov    eax,0x1007a218
100636c6:	jmp    0x1005941c
100636cb:	lea    ecx,[ebp-0x30]
100636ce:	jmp    0x10007f38
100636d3:	mov    edx,DWORD PTR [esp+0x8]
100636d7:	lea    eax,[edx+0xc]
100636da:	mov    ecx,DWORD PTR [edx-0x5c]
100636dd:	xor    ecx,eax
100636df:	call   0x100430d7
100636e4:	mov    eax,0x1007a278
100636e9:	jmp    0x1005941c
100636ee:	lea    eax,[ebp+0x8]
100636f1:	jmp    0x1001b147
100636f6:	mov    eax,DWORD PTR [ebp-0xac]
100636fc:	and    eax,0x1
100636ff:	je     0x10063717
10063705:	and    DWORD PTR [ebp-0xac],0xfffffffe
1006370c:	mov    ecx,DWORD PTR [ebp-0x9c]
10063712:	jmp    0x10007f38
10063717:	ret    
10063718:	lea    ecx,[ebp-0x94]
1006371e:	jmp    0x10007f38
10063723:	lea    ecx,[ebp-0xc8]
10063729:	jmp    0x10007f38
1006372e:	lea    ecx,[ebp-0xc8]
10063734:	jmp    0x10007f38
10063739:	lea    ecx,[ebp-0xc8]
1006373f:	jmp    0x10007f38
10063744:	mov    edx,DWORD PTR [esp+0x8]
10063748:	lea    eax,[edx+0xc]
1006374b:	mov    ecx,DWORD PTR [edx-0xcc]
10063751:	xor    ecx,eax
10063753:	call   0x100430d7
10063758:	mov    ecx,DWORD PTR [edx-0x4]
1006375b:	xor    ecx,eax
1006375d:	call   0x100430d7
10063762:	mov    eax,0x1007a2cc
10063767:	jmp    0x1005941c
1006376c:	mov    eax,DWORD PTR [ebp-0x10]
1006376f:	and    eax,0x1
10063772:	je     0x10063784
10063778:	and    DWORD PTR [ebp-0x10],0xfffffffe
1006377c:	mov    esi,DWORD PTR [ebp+0x8]
1006377f:	jmp    0x1000caef
10063784:	ret    
10063785:	lea    ecx,[ebp-0x40]
10063788:	jmp    0x10007f38
1006378d:	lea    esi,[ebp-0x24]
10063790:	jmp    0x1000466f
10063795:	mov    edx,DWORD PTR [esp+0x8]
10063799:	lea    eax,[edx+0xc]
1006379c:	mov    ecx,DWORD PTR [edx-0x44]
1006379f:	xor    ecx,eax
100637a1:	call   0x100430d7
100637a6:	mov    eax,0x1007a308
100637ab:	jmp    0x1005941c
100637b0:	lea    ecx,[ebp-0x1034]
100637b6:	jmp    0x10007f38
100637bb:	lea    esi,[ebp-0x1050]
100637c1:	jmp    0x1000caef
100637c6:	lea    esi,[ebp-0x1064]
100637cc:	jmp    0x1000caef
100637d1:	mov    edx,DWORD PTR [esp+0x8]
100637d5:	lea    eax,[edx+0xc]
100637d8:	mov    ecx,DWORD PTR [edx-0x106c]
100637de:	xor    ecx,eax
100637e0:	call   0x100430d7
100637e5:	mov    ecx,DWORD PTR [edx-0x8]
100637e8:	xor    ecx,eax
100637ea:	call   0x100430d7
100637ef:	mov    eax,0x1007a3ac
100637f4:	jmp    0x1005941c
100637f9:	lea    ecx,[ebp-0x84]
100637ff:	jmp    0x10007f38
10063804:	lea    ecx,[ebp-0x30]
10063807:	jmp    0x10007f38
1006380c:	lea    ecx,[ebp-0x68]
1006380f:	jmp    0x10007f38
10063814:	lea    ecx,[ebp-0x4c]
10063817:	jmp    0x10007f38
1006381c:	mov    edx,DWORD PTR [esp+0x8]
10063820:	lea    eax,[edx-0x8c]
10063826:	mov    ecx,DWORD PTR [edx-0x90]
1006382c:	xor    ecx,eax
1006382e:	call   0x100430d7
10063833:	add    eax,0x8
10063836:	mov    ecx,DWORD PTR [edx-0x8]
10063839:	xor    ecx,eax
1006383b:	call   0x100430d7
10063840:	mov    eax,0x1007a3f8
10063845:	jmp    0x1005941c
1006384a:	mov    eax,DWORD PTR [ebp+0x8]
1006384d:	jmp    0x10009c00
10063852:	mov    eax,DWORD PTR [ebp+0x8]
10063855:	add    eax,0x4
10063858:	jmp    0x10009c00
1006385d:	mov    eax,DWORD PTR [ebp+0x8]
10063860:	add    eax,0x8
10063863:	jmp    0x10009c00
10063868:	mov    eax,DWORD PTR [ebp+0x8]
1006386b:	add    eax,0xc
1006386e:	jmp    0x10009c00
10063873:	mov    edx,DWORD PTR [esp+0x8]
10063877:	lea    eax,[edx+0xc]
1006387a:	mov    ecx,DWORD PTR [edx-0x10]
1006387d:	xor    ecx,eax
1006387f:	call   0x100430d7
10063884:	mov    eax,0x1007a43c
10063889:	jmp    0x1005941c
1006388e:	mov    eax,DWORD PTR [ebp+0x8]
10063891:	jmp    0x10009c00
10063896:	mov    eax,DWORD PTR [ebp+0x8]
10063899:	add    eax,0x4
1006389c:	jmp    0x10009c00
100638a1:	mov    eax,DWORD PTR [ebp+0x8]
100638a4:	add    eax,0x8
100638a7:	jmp    0x10009c00
100638ac:	mov    ebx,DWORD PTR [ebp+0x8]
100638af:	add    ebx,0x18
100638b2:	jmp    0x10007a34
100638b7:	mov    eax,DWORD PTR [ebp+0x8]
100638ba:	add    eax,0x30
100638bd:	jmp    0x10009c4e
100638c2:	mov    edx,DWORD PTR [esp+0x8]
100638c6:	lea    eax,[edx+0xc]
100638c9:	mov    ecx,DWORD PTR [edx-0x10]
100638cc:	xor    ecx,eax
100638ce:	call   0x100430d7
100638d3:	mov    eax,0x1007a488
100638d8:	jmp    0x1005941c
100638dd:	mov    eax,DWORD PTR [ebp+0x8]
100638e0:	jmp    0x10009c00
100638e5:	mov    eax,DWORD PTR [ebp+0x8]
100638e8:	add    eax,0x4
100638eb:	jmp    0x10009c00
100638f0:	mov    eax,DWORD PTR [ebp+0x8]
100638f3:	add    eax,0x8
100638f6:	jmp    0x10009c00
100638fb:	mov    edx,DWORD PTR [esp+0x8]
100638ff:	lea    eax,[edx+0xc]
10063902:	mov    ecx,DWORD PTR [edx-0x10]
10063905:	xor    ecx,eax
10063907:	call   0x100430d7
1006390c:	mov    eax,0x1007a4c4
10063911:	jmp    0x1005941c
10063916:	lea    ecx,[ebp-0x34]
10063919:	jmp    0x100070e5
1006391e:	mov    edx,DWORD PTR [esp+0x8]
10063922:	lea    eax,[edx+0xc]
10063925:	mov    ecx,DWORD PTR [edx-0x40]
10063928:	xor    ecx,eax
1006392a:	call   0x100430d7
1006392f:	mov    ecx,DWORD PTR [edx-0x4]
10063932:	xor    ecx,eax
10063934:	call   0x100430d7
10063939:	mov    eax,0x1007a4f0
1006393e:	jmp    0x1005941c
10063943:	lea    ecx,[ebp-0x30]
10063946:	jmp    0x10007f38
1006394b:	mov    edx,DWORD PTR [esp+0x8]
1006394f:	lea    eax,[edx+0xc]
10063952:	mov    ecx,DWORD PTR [edx-0x34]
10063955:	xor    ecx,eax
10063957:	call   0x100430d7
1006395c:	mov    ecx,DWORD PTR [edx-0x8]
1006395f:	xor    ecx,eax
10063961:	call   0x100430d7
10063966:	mov    eax,0x1007a550
1006396b:	jmp    0x1005941c
10063970:	lea    ecx,[ebp-0x2c]
10063973:	jmp    0x10007f38
10063978:	mov    eax,DWORD PTR [ebp-0x30]
1006397b:	jmp    0x10002078
10063980:	mov    eax,DWORD PTR [ebp-0x34]
10063983:	and    eax,0x1
10063986:	je     0x10063998
1006398c:	and    DWORD PTR [ebp-0x34],0xfffffffe
10063990:	mov    eax,DWORD PTR [ebp-0x30]
10063993:	jmp    0x10002078
10063998:	ret    
10063999:	mov    edx,DWORD PTR [esp+0x8]
1006399d:	lea    eax,[edx-0x34]
100639a0:	mov    ecx,DWORD PTR [edx-0x38]
100639a3:	xor    ecx,eax
100639a5:	call   0x100430d7
100639aa:	add    eax,0xc
100639ad:	mov    ecx,DWORD PTR [edx-0x4]
100639b0:	xor    ecx,eax
100639b2:	call   0x100430d7
100639b7:	mov    eax,0x1007a58c
100639bc:	jmp    0x1005941c
100639c1:	int3   
100639c2:	int3   
100639c3:	int3   
100639c4:	int3   
100639c5:	int3   
100639c6:	int3   
100639c7:	int3   
100639c8:	int3   
100639c9:	int3   
100639ca:	int3   
100639cb:	int3   
100639cc:	int3   
100639cd:	int3   
100639ce:	int3   
100639cf:	int3   
100639d0:	lea    ecx,[ebp-0xa4]
100639d6:	jmp    0x10007f38
100639db:	lea    ecx,[ebp-0x88]
100639e1:	jmp    0x10007f38
100639e6:	lea    eax,[ebp-0xb8]
100639ec:	jmp    0x10034ec0
100639f1:	lea    ecx,[ebp-0x34]
100639f4:	jmp    0x10007f38
100639f9:	lea    ecx,[ebp-0x50]
100639fc:	jmp    0x10007f38
10063a01:	lea    ecx,[ebp-0x6c]
10063a04:	jmp    0x10007f38
10063a09:	lea    ecx,[ebp-0x50]
10063a0c:	jmp    0x10007f38
10063a11:	lea    ecx,[ebp-0x34]
10063a14:	jmp    0x10007f38
10063a19:	lea    ecx,[ebp-0xd8]
10063a1f:	jmp    0x10007f38
10063a24:	lea    ecx,[ebp-0x50]
10063a27:	jmp    0x10007f38
10063a2c:	lea    ecx,[ebp-0x34]
10063a2f:	jmp    0x10007f38
10063a34:	lea    ecx,[ebp-0xd8]
10063a3a:	jmp    0x10007f38
10063a3f:	lea    ecx,[ebp-0x34]
10063a42:	jmp    0x10007f38
10063a47:	lea    ecx,[ebp-0xd8]
10063a4d:	jmp    0x10007f38
10063a52:	lea    ecx,[ebp-0x50]
10063a55:	jmp    0x10007f38
10063a5a:	lea    ecx,[ebp-0x34]
10063a5d:	jmp    0x10007f38
10063a62:	lea    ecx,[ebp-0xd8]
10063a68:	jmp    0x10007f38
10063a6d:	lea    ecx,[ebp-0x34]
10063a70:	jmp    0x10007f38
10063a75:	lea    ecx,[ebp-0xd8]
10063a7b:	jmp    0x10007f38
10063a80:	lea    ecx,[ebp-0x34]
10063a83:	jmp    0x10007f38
10063a88:	mov    edx,DWORD PTR [esp+0x8]
10063a8c:	lea    eax,[edx+0xc]
10063a8f:	mov    ecx,DWORD PTR [edx-0xe0]
10063a95:	xor    ecx,eax
10063a97:	call   0x100430d7
10063a9c:	mov    ecx,DWORD PTR [edx-0xc]
10063a9f:	xor    ecx,eax
10063aa1:	call   0x100430d7
10063aa6:	mov    eax,0x1007a684
10063aab:	jmp    0x1005941c
10063ab0:	lea    ecx,[ebp-0x74]
10063ab3:	jmp    0x10007f38
10063ab8:	lea    ecx,[ebp-0x48]
10063abb:	jmp    0x10007f38
10063ac0:	lea    ecx,[ebp-0xc8]
10063ac6:	jmp    0x10007f38
10063acb:	lea    ecx,[ebp-0x2c]
10063ace:	jmp    0x10007f38
10063ad3:	lea    ecx,[ebp-0xac]
10063ad9:	jmp    0x10007f38
10063ade:	lea    ecx,[ebp-0x74]
10063ae1:	jmp    0x10007f38
10063ae6:	lea    ecx,[ebp-0x90]
10063aec:	jmp    0x10007f38
10063af1:	lea    ecx,[ebp-0x90]
10063af7:	jmp    0x10007f38
10063afc:	mov    edx,DWORD PTR [esp+0x8]
10063b00:	lea    eax,[edx+0xc]
10063b03:	mov    ecx,DWORD PTR [edx-0xcc]
10063b09:	xor    ecx,eax
10063b0b:	call   0x100430d7
10063b10:	mov    ecx,DWORD PTR [edx-0x4]
10063b13:	xor    ecx,eax
10063b15:	call   0x100430d7
10063b1a:	mov    eax,0x1007a6f8
10063b1f:	jmp    0x1005941c
10063b24:	lea    eax,[ebp-0x10]
10063b27:	jmp    0x1003a080
10063b2c:	mov    edx,DWORD PTR [esp+0x8]
10063b30:	lea    eax,[edx+0xc]
10063b33:	mov    ecx,DWORD PTR [edx-0x14]
10063b36:	xor    ecx,eax
10063b38:	call   0x100430d7
10063b3d:	mov    eax,0x1007a724
10063b42:	jmp    0x1005941c
10063b47:	lea    eax,[ebp-0x10]
10063b4a:	jmp    0x10009c4e
10063b4f:	mov    edx,DWORD PTR [esp+0x8]
10063b53:	lea    eax,[edx+0xc]
10063b56:	mov    ecx,DWORD PTR [edx-0x14]
10063b59:	xor    ecx,eax
10063b5b:	call   0x100430d7
10063b60:	mov    eax,0x1007a750
10063b65:	jmp    0x1005941c
10063b6a:	push   DWORD PTR [ebp-0x14]
10063b6d:	call   0x100430d2
10063b72:	pop    ecx
10063b73:	ret    
10063b74:	lea    eax,[ebp-0x14]
10063b77:	jmp    0x10009e42
10063b7c:	lea    eax,[ebp-0x10]
10063b7f:	jmp    0x10009c4e
10063b84:	mov    edx,DWORD PTR [esp+0x8]
10063b88:	lea    eax,[edx+0xc]
10063b8b:	mov    ecx,DWORD PTR [edx-0x18]
10063b8e:	xor    ecx,eax
10063b90:	call   0x100430d7
10063b95:	mov    eax,0x1007a78c
10063b9a:	jmp    0x1005941c
10063b9f:	lea    eax,[ebp-0x80]
10063ba2:	jmp    0x10012625
10063ba7:	lea    eax,[ebp+0x14]
10063baa:	jmp    0x10012625
10063baf:	lea    ecx,[ebp-0x5c]
10063bb2:	jmp    0x1002258a
10063bb7:	lea    ecx,[ebp-0x3c]
10063bba:	jmp    0x1002258a
10063bbf:	lea    ecx,[ebp-0x6c]
10063bc2:	jmp    0x1002258a
10063bc7:	lea    ecx,[ebp-0x2c]
10063bca:	jmp    0x1002258a
10063bcf:	lea    edi,[ebp+0x10]
10063bd2:	jmp    0x100024f2
10063bd7:	lea    ecx,[ebp-0x7c]
10063bda:	jmp    0x1002258a
10063bdf:	lea    ecx,[ebp-0x4c]
10063be2:	jmp    0x1002258a
10063be7:	mov    edx,DWORD PTR [esp+0x8]
10063beb:	lea    eax,[edx+0xc]
10063bee:	mov    ecx,DWORD PTR [edx-0xe8]
10063bf4:	xor    ecx,eax
10063bf6:	call   0x100430d7
10063bfb:	mov    eax,0x1007a834
10063c00:	jmp    0x1005941c
10063c05:	lea    eax,[ebp-0x40]
10063c08:	jmp    0x10034ec0
10063c0d:	lea    eax,[ebp-0x64]
10063c10:	jmp    0x100020a1
10063c15:	lea    eax,[ebp-0x5c]
10063c18:	jmp    0x100020a1
10063c1d:	lea    esi,[ebp-0x54]
10063c20:	jmp    0x10009d3c
10063c25:	mov    edx,DWORD PTR [esp+0x8]
10063c29:	lea    eax,[edx+0xc]
10063c2c:	mov    ecx,DWORD PTR [edx-0x68]
10063c2f:	xor    ecx,eax
10063c31:	call   0x100430d7
10063c36:	mov    ecx,DWORD PTR [edx-0x8]
10063c39:	xor    ecx,eax
10063c3b:	call   0x100430d7
10063c40:	mov    eax,0x1007a8ac
10063c45:	jmp    0x1005941c
10063c4a:	lea    eax,[ebp-0x54]
10063c4d:	jmp    0x100020a1
10063c52:	lea    eax,[ebp-0x60]
10063c55:	jmp    0x100020a1
10063c5a:	lea    eax,[ebp-0x58]
10063c5d:	jmp    0x10034ec0
10063c62:	lea    esi,[ebp-0x98]
10063c68:	jmp    0x10009d3c
10063c6d:	lea    ecx,[ebp-0x50]
10063c70:	jmp    0x10007f38
10063c75:	lea    ecx,[ebp-0xb8]
10063c7b:	jmp    0x10007f38
10063c80:	lea    esi,[ebp-0x24]
10063c83:	jmp    0x10009d3c
10063c88:	lea    eax,[ebp-0x80]
10063c8b:	jmp    0x1001829c
10063c90:	lea    ecx,[ebp-0x50]
10063c93:	jmp    0x10007f38
10063c98:	mov    edx,DWORD PTR [esp+0x8]
10063c9c:	lea    eax,[edx+0xc]
10063c9f:	mov    ecx,DWORD PTR [edx-0xbc]
10063ca5:	xor    ecx,eax
10063ca7:	call   0x100430d7
10063cac:	mov    ecx,DWORD PTR [edx-0x8]
10063caf:	xor    ecx,eax
10063cb1:	call   0x100430d7
10063cb6:	mov    eax,0x1007a94c
10063cbb:	jmp    0x1005941c
10063cc0:	lea    esi,[ebp-0x20]
10063cc3:	jmp    0x10009d3c
10063cc8:	mov    edx,DWORD PTR [esp+0x8]
10063ccc:	lea    eax,[edx-0x1c]
10063ccf:	mov    ecx,DWORD PTR [edx-0x20]
10063cd2:	xor    ecx,eax
10063cd4:	call   0x100430d7
10063cd9:	mov    eax,0x1007a978
10063cde:	jmp    0x1005941c
10063ce3:	lea    eax,[ebp-0x14]
10063ce6:	jmp    0x100020a1
10063ceb:	mov    eax,DWORD PTR [ebp-0x48]
10063cee:	and    eax,0x1
10063cf1:	je     0x10063d03
10063cf7:	and    DWORD PTR [ebp-0x48],0xfffffffe
10063cfb:	mov    ecx,DWORD PTR [ebp-0x18]
10063cfe:	jmp    0x10007f38
10063d03:	ret    
10063d04:	lea    eax,[ebp-0x1c]
10063d07:	jmp    0x10034ec0
10063d0c:	lea    ecx,[ebp-0x40]
10063d0f:	jmp    0x10007f38
10063d14:	lea    esi,[ebp-0x34]
10063d17:	jmp    0x10009d3c
10063d1c:	mov    edx,DWORD PTR [esp+0x8]
10063d20:	lea    eax,[edx+0xc]
10063d23:	mov    ecx,DWORD PTR [edx-0x4c]
10063d26:	xor    ecx,eax
10063d28:	call   0x100430d7
10063d2d:	mov    eax,0x1007a9d4
10063d32:	jmp    0x1005941c
10063d37:	lea    eax,[ebp-0x28]
10063d3a:	jmp    0x10012625
10063d3f:	mov    edx,DWORD PTR [esp+0x8]
10063d43:	lea    eax,[edx-0x24]
10063d46:	mov    ecx,DWORD PTR [edx-0x28]
10063d49:	xor    ecx,eax
10063d4b:	call   0x100430d7
10063d50:	add    eax,0x4
10063d53:	mov    ecx,DWORD PTR [edx-0x8]
10063d56:	xor    ecx,eax
10063d58:	call   0x100430d7
10063d5d:	mov    eax,0x1007aa00
10063d62:	jmp    0x1005941c
10063d67:	lea    eax,[ebp-0x18]
10063d6a:	jmp    0x100020a1
10063d6f:	mov    edx,DWORD PTR [esp+0x8]
10063d73:	lea    eax,[edx+0xc]
10063d76:	mov    ecx,DWORD PTR [edx-0x1c]
10063d79:	xor    ecx,eax
10063d7b:	call   0x100430d7
10063d80:	mov    eax,0x1007aa2c
10063d85:	jmp    0x1005941c
10063d8a:	lea    ecx,[ebp+0x8]
10063d8d:	jmp    0x10007f38
10063d92:	mov    edx,DWORD PTR [esp+0x8]
10063d96:	lea    eax,[edx+0xc]
10063d99:	mov    ecx,DWORD PTR [edx-0x14]
10063d9c:	xor    ecx,eax
10063d9e:	call   0x100430d7
10063da3:	mov    eax,0x1007aa58
10063da8:	jmp    0x1005941c
10063dad:	lea    ecx,[ebp-0x2c]
10063db0:	jmp    0x10007f38
10063db5:	lea    ecx,[ebp-0x70]
10063db8:	jmp    0x10007f38
10063dbd:	mov    edx,DWORD PTR [esp+0x8]
10063dc1:	lea    eax,[edx+0xc]
10063dc4:	mov    ecx,DWORD PTR [edx-0x90]
10063dca:	xor    ecx,eax
10063dcc:	call   0x100430d7
10063dd1:	mov    ecx,DWORD PTR [edx-0x4]
10063dd4:	xor    ecx,eax
10063dd6:	call   0x100430d7
10063ddb:	mov    eax,0x1007aa8c
10063de0:	jmp    0x1005941c
10063de5:	push   DWORD PTR [ebp-0x34]
10063de8:	call   0x100430d2
10063ded:	pop    ecx
10063dee:	ret    
10063def:	lea    eax,[ebp-0x34]
10063df2:	jmp    0x10009e51
10063df7:	lea    ecx,[ebp-0x2c]
10063dfa:	jmp    0x10007f38
10063dff:	push   DWORD PTR [ebp-0x40]
10063e02:	call   0x100430d2
10063e07:	pop    ecx
10063e08:	ret    
10063e09:	push   DWORD PTR [ebp-0x40]
10063e0c:	call   0x100430d2
10063e11:	pop    ecx
10063e12:	ret    
10063e13:	push   DWORD PTR [ebp-0x40]
10063e16:	call   0x100430d2
10063e1b:	pop    ecx
10063e1c:	ret    
10063e1d:	push   DWORD PTR [ebp-0x40]
10063e20:	call   0x100430d2
10063e25:	pop    ecx
10063e26:	ret    
10063e27:	lea    eax,[ebp-0x38]
10063e2a:	jmp    0x10009c4e
10063e2f:	mov    edx,DWORD PTR [esp+0x8]
10063e33:	lea    eax,[edx+0xc]
10063e36:	mov    ecx,DWORD PTR [edx-0x4c]
10063e39:	xor    ecx,eax
10063e3b:	call   0x100430d7
10063e40:	mov    ecx,DWORD PTR [edx-0x4]
10063e43:	xor    ecx,eax
10063e45:	call   0x100430d7
10063e4a:	mov    eax,0x1007ab18
10063e4f:	jmp    0x1005941c
10063e54:	push   DWORD PTR [ebp-0x30]
10063e57:	call   0x100430d2
10063e5c:	pop    ecx
10063e5d:	ret    
10063e5e:	lea    eax,[ebp-0x40]
10063e61:	jmp    0x10009e42
10063e66:	lea    ecx,[ebp-0x2c]
10063e69:	jmp    0x10007f38
10063e6e:	push   DWORD PTR [ebp-0x3c]
10063e71:	call   0x100430d2
10063e76:	pop    ecx
10063e77:	ret    
10063e78:	push   DWORD PTR [ebp-0x3c]
10063e7b:	call   0x100430d2
10063e80:	pop    ecx
10063e81:	ret    
10063e82:	push   DWORD PTR [ebp-0x3c]
10063e85:	call   0x100430d2
10063e8a:	pop    ecx
10063e8b:	ret    
10063e8c:	push   DWORD PTR [ebp-0x3c]
10063e8f:	call   0x100430d2
10063e94:	pop    ecx
10063e95:	ret    
10063e96:	lea    eax,[ebp-0x34]
10063e99:	jmp    0x10009c4e
10063e9e:	mov    edx,DWORD PTR [esp+0x8]
10063ea2:	lea    eax,[edx+0xc]
10063ea5:	mov    ecx,DWORD PTR [edx-0x44]
10063ea8:	xor    ecx,eax
10063eaa:	call   0x100430d7
10063eaf:	mov    ecx,DWORD PTR [edx-0x4]
10063eb2:	xor    ecx,eax
10063eb4:	call   0x100430d7
10063eb9:	mov    eax,0x1007ab80
10063ebe:	jmp    0x1005941c
10063ec3:	push   DWORD PTR [ebp-0x10]
10063ec6:	call   0x100430d2
10063ecb:	pop    ecx
10063ecc:	ret    
10063ecd:	lea    eax,[ebp-0x10]
10063ed0:	jmp    0x10009e51
10063ed5:	mov    edx,DWORD PTR [esp+0x8]
10063ed9:	lea    eax,[edx+0xc]
10063edc:	mov    ecx,DWORD PTR [edx-0x18]
10063edf:	xor    ecx,eax
10063ee1:	call   0x100430d7
10063ee6:	mov    eax,0x1007abb4
10063eeb:	jmp    0x1005941c
10063ef0:	push   DWORD PTR [ebp-0x10]
10063ef3:	call   0x100430d2
10063ef8:	pop    ecx
10063ef9:	ret    
10063efa:	lea    eax,[ebp-0x14]
10063efd:	jmp    0x10009e42
10063f02:	mov    edx,DWORD PTR [esp+0x8]
10063f06:	lea    eax,[edx+0xc]
10063f09:	mov    ecx,DWORD PTR [edx-0x18]
10063f0c:	xor    ecx,eax
10063f0e:	call   0x100430d7
10063f13:	mov    eax,0x1007abe8
10063f18:	jmp    0x1005941c
10063f1d:	lea    ecx,[ebp-0x10]
10063f20:	jmp    0x100070e5
10063f25:	mov    edx,DWORD PTR [esp+0x8]
10063f29:	lea    eax,[edx+0xc]
10063f2c:	mov    ecx,DWORD PTR [edx-0x14]
10063f2f:	xor    ecx,eax
10063f31:	call   0x100430d7
10063f36:	mov    eax,0x1007ac14
10063f3b:	jmp    0x1005941c
10063f40:	lea    eax,[ebp-0x21c]
10063f46:	jmp    0x10002078
10063f4b:	lea    ecx,[ebp-0x260]
10063f51:	jmp    0x10007f38
10063f56:	lea    esi,[ebp-0x220]
10063f5c:	jmp    0x100066c4
10063f61:	lea    eax,[ebp-0x230]
10063f67:	jmp    0x100020a1
10063f6c:	mov    edx,DWORD PTR [esp+0x8]
10063f70:	lea    eax,[edx+0xc]
10063f73:	mov    ecx,DWORD PTR [edx-0x264]
10063f79:	xor    ecx,eax
10063f7b:	call   0x100430d7
10063f80:	mov    ecx,DWORD PTR [edx-0x4]
10063f83:	xor    ecx,eax
10063f85:	call   0x100430d7
10063f8a:	mov    eax,0x1007ac58
10063f8f:	jmp    0x1005941c
10063f94:	lea    esi,[ebp-0x64]
10063f97:	jmp    0x10009d3c
10063f9c:	lea    ecx,[ebp-0x30]
10063f9f:	jmp    0x10007f38
10063fa4:	lea    ecx,[ebp-0x4c]
10063fa7:	jmp    0x10007f38
10063fac:	lea    ecx,[ebp-0x88]
10063fb2:	jmp    0x10007f38
10063fb7:	mov    edx,DWORD PTR [esp+0x8]
10063fbb:	lea    eax,[edx+0xc]
10063fbe:	mov    ecx,DWORD PTR [edx-0x8c]
10063fc4:	xor    ecx,eax
10063fc6:	call   0x100430d7
10063fcb:	mov    ecx,DWORD PTR [edx-0x4]
10063fce:	xor    ecx,eax
10063fd0:	call   0x100430d7
10063fd5:	mov    eax,0x1007ac9c
10063fda:	jmp    0x1005941c
10063fdf:	int3   
10063fe0:	lea    ecx,[ebp-0x1ac]
10063fe6:	jmp    0x10007f38
10063feb:	lea    ecx,[ebp-0x1c8]
10063ff1:	jmp    0x10007f38
10063ff6:	lea    ecx,[ebp-0x1e4]
10063ffc:	jmp    0x10007f38
10064001:	lea    ecx,[ebp-0x158]
10064007:	jmp    0x10007f38
1006400c:	lea    ecx,[ebp-0x174]
10064012:	jmp    0x10007f38
10064017:	lea    ecx,[ebp-0x30]
1006401a:	jmp    0x10007f38
1006401f:	lea    ecx,[ebp-0x4c]
10064022:	jmp    0x10007f38
10064027:	lea    ecx,[ebp-0x104]
1006402d:	jmp    0x10007f38
10064032:	lea    ecx,[ebp-0x190]
10064038:	jmp    0x10007f38
1006403d:	lea    eax,[ebp-0x1fc]
10064043:	jmp    0x100020a1
10064048:	lea    ecx,[ebp-0x190]
1006404e:	jmp    0x10007f38
10064053:	lea    ecx,[ebp-0x1c8]
10064059:	jmp    0x10007f38
1006405e:	lea    esi,[ebp-0xe8]
10064064:	jmp    0x1000be1c
10064069:	lea    ecx,[ebp-0x174]
1006406f:	jmp    0x10007f38
10064074:	lea    ecx,[ebp-0x190]
1006407a:	jmp    0x10007f38
1006407f:	lea    ecx,[ebp-0x13c]
10064085:	jmp    0x10007f38
1006408a:	lea    ecx,[ebp-0x158]
10064090:	jmp    0x10007f38
10064095:	lea    ecx,[ebp-0x1c8]
1006409b:	jmp    0x10007f38
100640a0:	lea    ecx,[ebp-0x1e4]
100640a6:	jmp    0x10007f38
100640ab:	lea    ecx,[ebp-0x1ac]
100640b1:	jmp    0x10007f38
100640b6:	lea    ecx,[ebp-0x120]
100640bc:	jmp    0x10007f38
100640c1:	lea    ecx,[ebp-0x13c]
100640c7:	jmp    0x10007f38
100640cc:	mov    edx,DWORD PTR [esp+0x8]
100640d0:	lea    eax,[edx-0x1fc]
100640d6:	mov    ecx,DWORD PTR [edx-0x200]
100640dc:	xor    ecx,eax
100640de:	call   0x100430d7
100640e3:	add    eax,0xc
100640e6:	mov    ecx,DWORD PTR [edx-0x8]
100640e9:	xor    ecx,eax
100640eb:	call   0x100430d7
100640f0:	mov    eax,0x1007ad98
100640f5:	jmp    0x1005941c
100640fa:	int3   
100640fb:	int3   
100640fc:	int3   
100640fd:	int3   
100640fe:	int3   
100640ff:	int3   
10064100:	lea    eax,[ebp-0x14]
10064103:	jmp    0x100020a1
10064108:	lea    eax,[ebp-0x10]
1006410b:	jmp    0x100020a1
10064110:	mov    edx,DWORD PTR [esp+0x8]
10064114:	lea    eax,[edx-0x28]
10064117:	mov    ecx,DWORD PTR [edx-0x2c]
1006411a:	xor    ecx,eax
1006411c:	call   0x100430d7
10064121:	mov    eax,0x1007adcc
10064126:	jmp    0x1005941c
1006412b:	int3   
1006412c:	int3   
1006412d:	int3   
1006412e:	int3   
1006412f:	int3   
10064130:	lea    ecx,[ebp-0x28]
10064133:	jmp    0x10007f38
10064138:	mov    edx,DWORD PTR [esp+0x8]
1006413c:	lea    eax,[edx-0x24]
1006413f:	mov    ecx,DWORD PTR [edx-0x28]
10064142:	xor    ecx,eax
10064144:	call   0x100430d7
10064149:	mov    eax,0x1007adf8
1006414e:	jmp    0x1005941c
10064153:	lea    eax,[ebp+0x4]
10064156:	jmp    0x10009e42
1006415b:	lea    eax,[ebp+0x8]
1006415e:	jmp    0x10009e51
10064163:	lea    ecx,[ebp+0x44]
10064166:	jmp    0x10007f38
1006416b:	lea    ecx,[ebp-0x44]
1006416e:	jmp    0x10007f38
10064173:	lea    ecx,[ebp-0x60]
10064176:	jmp    0x10007f38
1006417b:	lea    ecx,[ebp-0x28]
1006417e:	jmp    0x10007f38
10064183:	lea    ecx,[ebp+0xc]
10064186:	jmp    0x10007f38
1006418b:	mov    edx,DWORD PTR [esp+0x8]
1006418f:	lea    eax,[edx+0xc]
10064192:	mov    ecx,DWORD PTR [edx-0x64]
10064195:	xor    ecx,eax
10064197:	call   0x100430d7
1006419c:	mov    ecx,DWORD PTR [edx+0x6c]
1006419f:	xor    ecx,eax
100641a1:	call   0x100430d7
100641a6:	mov    eax,0x1007ae70
100641ab:	jmp    0x1005941c
100641b0:	lea    ecx,[ebp-0x4a4]
100641b6:	jmp    0x10007f38
100641bb:	lea    ecx,[ebp-0x530]
100641c1:	jmp    0x10007f38
100641c6:	lea    ecx,[ebp-0x4dc]
100641cc:	jmp    0x10007f38
100641d1:	lea    ecx,[ebp-0x4f8]
100641d7:	jmp    0x10007f38
100641dc:	lea    ecx,[ebp-0x434]
100641e2:	jmp    0x10007f38
100641e7:	lea    ecx,[ebp-0x450]
100641ed:	jmp    0x10007f38
100641f2:	lea    ecx,[ebp-0x488]
100641f8:	jmp    0x10007f38
100641fd:	lea    ecx,[ebp-0x5a8]
10064203:	jmp    0x1002258a
10064208:	lea    ecx,[ebp-0x598]
1006420e:	jmp    0x1002258a
10064213:	lea    eax,[ebp-0x5cc]
10064219:	jmp    0x10012625
1006421e:	lea    edi,[ebp-0x5c8]
10064224:	jmp    0x100024f2
10064229:	lea    ecx,[ebp-0x46c]
1006422f:	jmp    0x10007f38
10064234:	lea    ecx,[ebp-0x54c]
1006423a:	jmp    0x10007f38
1006423f:	lea    ecx,[ebp-0x584]
10064245:	jmp    0x10007f38
1006424a:	lea    ecx,[ebp-0x514]
10064250:	jmp    0x10007f38
10064255:	lea    ecx,[ebp-0x568]
1006425b:	jmp    0x10007f38
10064260:	lea    eax,[ebp-0x5d4]
10064266:	jmp    0x10009e42
1006426b:	lea    eax,[ebp-0x5c0]
10064271:	jmp    0x10009e51
10064276:	mov    edx,DWORD PTR [esp+0x8]
1006427a:	lea    eax,[edx-0x5e4]
10064280:	mov    ecx,DWORD PTR [edx-0x5e8]
10064286:	xor    ecx,eax
10064288:	call   0x100430d7
1006428d:	add    eax,0xc
10064290:	mov    ecx,DWORD PTR [edx-0x8]
10064293:	xor    ecx,eax
10064295:	call   0x100430d7
1006429a:	mov    eax,0x1007af40
1006429f:	jmp    0x1005941c
100642a4:	lea    ecx,[ebp-0x220]
100642aa:	jmp    0x10007f38
100642af:	lea    ecx,[ebp-0x27c]
100642b5:	jmp    0x10007f38
100642ba:	lea    ecx,[ebp-0x27c]
100642c0:	jmp    0x10007f38
100642c5:	lea    ecx,[ebp-0x258]
100642cb:	jmp    0x10007f38
100642d0:	lea    ecx,[ebp-0x220]
100642d6:	jmp    0x10007f38
100642db:	lea    ecx,[ebp-0x27c]
100642e1:	jmp    0x10007f38
100642e6:	lea    esi,[ebp-0x140]
100642ec:	jmp    0x1000bdb4
100642f1:	lea    ecx,[ebp-0x27c]
100642f7:	jmp    0x10007f38
100642fc:	lea    ecx,[ebp-0x27c]
10064302:	jmp    0x10007f38
10064307:	lea    ecx,[ebp-0x27c]
1006430d:	jmp    0x10007f38
10064312:	lea    ecx,[ebp-0x27c]
10064318:	jmp    0x10007f38
1006431d:	lea    ecx,[ebp-0x27c]
10064323:	jmp    0x10007f38
10064328:	lea    ecx,[ebp-0x178]
1006432e:	jmp    0x10007f38
10064333:	lea    ecx,[ebp-0x258]
10064339:	jmp    0x10007f38
1006433e:	lea    ecx,[ebp-0x258]
10064344:	jmp    0x10007f38
10064349:	lea    ecx,[ebp-0x23c]
1006434f:	jmp    0x10007f38
10064354:	lea    esi,[ebp-0xb0]
1006435a:	jmp    0x1000be1c
1006435f:	lea    ecx,[ebp-0x15c]
10064365:	jmp    0x10007f38
1006436a:	lea    ecx,[ebp-0x23c]
10064370:	jmp    0x10007f38
10064375:	lea    ecx,[ebp-0x194]
1006437b:	jmp    0x10007f38
10064380:	lea    ecx,[ebp-0x1cc]
10064386:	jmp    0x10007f38
1006438b:	lea    ecx,[ebp-0x1e8]
10064391:	jmp    0x10007f38
10064396:	lea    ecx,[ebp-0x204]
1006439c:	jmp    0x10007f38
100643a1:	lea    ecx,[ebp-0x1b0]
100643a7:	jmp    0x10007f38
100643ac:	mov    edx,DWORD PTR [esp+0x8]
100643b0:	lea    eax,[edx-0x28c]
100643b6:	mov    ecx,DWORD PTR [edx-0x290]
100643bc:	xor    ecx,eax
100643be:	call   0x100430d7
100643c3:	add    eax,0xc
100643c6:	mov    ecx,DWORD PTR [edx-0x8]
100643c9:	xor    ecx,eax
100643cb:	call   0x100430d7
100643d0:	mov    eax,0x1007b030
100643d5:	jmp    0x1005941c
100643da:	lea    ecx,[ebp-0x68]
100643dd:	jmp    0x10007f38
100643e2:	lea    ecx,[ebp-0x30]
100643e5:	jmp    0x10007f38
100643ea:	lea    ecx,[ebp-0x4c]
100643ed:	jmp    0x10007f38
100643f2:	lea    ecx,[ebp-0xa0]
100643f8:	jmp    0x10007f38
100643fd:	lea    ecx,[ebp-0x84]
10064403:	jmp    0x10007f38
10064408:	lea    ecx,[ebp-0x68]
1006440b:	jmp    0x10007f38
10064410:	lea    ecx,[ebp-0xa0]
10064416:	jmp    0x10007f38
1006441b:	lea    ecx,[ebp-0x84]
10064421:	jmp    0x10007f38
10064426:	lea    ecx,[ebp-0xa0]
1006442c:	jmp    0x10007f38
10064431:	mov    edx,DWORD PTR [esp+0x8]
10064435:	lea    eax,[edx-0xa4]
1006443b:	mov    ecx,DWORD PTR [edx-0xa8]
10064441:	xor    ecx,eax
10064443:	call   0x100430d7
10064448:	add    eax,0xc
1006444b:	mov    ecx,DWORD PTR [edx-0x8]
1006444e:	xor    ecx,eax
10064450:	call   0x100430d7
10064455:	mov    eax,0x1007b0a8
1006445a:	jmp    0x1005941c
1006445f:	lea    ecx,[ebp-0x84]
10064465:	jmp    0x10007f38
1006446a:	lea    ecx,[ebp-0x30]
1006446d:	jmp    0x10007f38
10064472:	lea    ecx,[ebp-0xa0]
10064478:	jmp    0x10007f38
1006447d:	lea    ecx,[ebp-0xa0]
10064483:	jmp    0x10007f38
10064488:	lea    ecx,[ebp-0x68]
1006448b:	jmp    0x10007f38
10064490:	lea    ecx,[ebp-0x4c]
10064493:	jmp    0x10007f38
10064498:	mov    edx,DWORD PTR [esp+0x8]
1006449c:	lea    eax,[edx-0xac]
100644a2:	mov    ecx,DWORD PTR [edx-0xb0]
100644a8:	xor    ecx,eax
100644aa:	call   0x100430d7
100644af:	add    eax,0xc
100644b2:	mov    ecx,DWORD PTR [edx-0x8]
100644b5:	xor    ecx,eax
100644b7:	call   0x100430d7
100644bc:	mov    eax,0x1007b104
100644c1:	jmp    0x1005941c
100644c6:	lea    eax,[ebp-0x1c]
100644c9:	jmp    0x10009e51
100644ce:	lea    eax,[ebp-0x18]
100644d1:	jmp    0x10009e51
100644d6:	mov    edx,DWORD PTR [esp+0x8]
100644da:	lea    eax,[edx+0xc]
100644dd:	mov    ecx,DWORD PTR [edx-0x44]
100644e0:	xor    ecx,eax
100644e2:	call   0x100430d7
100644e7:	mov    eax,0x1007b138
100644ec:	jmp    0x1005941c
100644f1:	lea    eax,[ebp-0x18]
100644f4:	jmp    0x10009e51
100644f9:	lea    eax,[ebp-0x14]
100644fc:	jmp    0x10009e51
10064501:	mov    edx,DWORD PTR [esp+0x8]
10064505:	lea    eax,[edx+0xc]
10064508:	mov    ecx,DWORD PTR [edx-0x40]
1006450b:	xor    ecx,eax
1006450d:	call   0x100430d7
10064512:	mov    eax,0x1007b16c
10064517:	jmp    0x1005941c
1006451c:	lea    eax,[ebp-0x20]
1006451f:	jmp    0x10009e42
10064524:	lea    eax,[ebp-0x14]
10064527:	jmp    0x10009e42
1006452c:	lea    eax,[ebp-0x1c]
1006452f:	jmp    0x10009e51
10064534:	lea    eax,[ebp-0x18]
10064537:	jmp    0x10009c4e
1006453c:	lea    esi,[ebp-0x40]
1006453f:	jmp    0x100264a9
10064544:	mov    edx,DWORD PTR [esp+0x8]
10064548:	lea    eax,[edx+0xc]
1006454b:	mov    ecx,DWORD PTR [edx-0x44]
1006454e:	xor    ecx,eax
10064550:	call   0x100430d7
10064555:	mov    eax,0x1007b1b8
1006455a:	jmp    0x1005941c
1006455f:	lea    eax,[ebp-0x14]
10064562:	jmp    0x100260a4
10064567:	mov    edx,DWORD PTR [esp+0x8]
1006456b:	lea    eax,[edx+0xc]
1006456e:	mov    ecx,DWORD PTR [edx-0x18]
10064571:	xor    ecx,eax
10064573:	call   0x100430d7
10064578:	mov    eax,0x1007b218
1006457d:	jmp    0x1005941c
10064582:	mov    eax,DWORD PTR [ebp-0x14]
10064585:	and    eax,0x1
10064588:	je     0x1006459a
1006458e:	and    DWORD PTR [ebp-0x14],0xfffffffe
10064592:	lea    eax,[ebp+0x18]
10064595:	jmp    0x10034ec0
1006459a:	ret    
1006459b:	mov    edx,DWORD PTR [esp+0x8]
1006459f:	lea    eax,[edx+0xc]
100645a2:	mov    ecx,DWORD PTR [edx-0x20]
100645a5:	xor    ecx,eax
100645a7:	call   0x100430d7
100645ac:	mov    eax,0x1007b288
100645b1:	jmp    0x1005941c
100645b6:	lea    ecx,[ebp-0x10]
100645b9:	jmp    0x10015fdf
100645be:	mov    edx,DWORD PTR [esp+0x8]
100645c2:	lea    eax,[edx+0xc]
100645c5:	mov    ecx,DWORD PTR [edx-0x24]
100645c8:	xor    ecx,eax
100645ca:	call   0x100430d7
100645cf:	mov    eax,0x1007b2b4
100645d4:	jmp    0x1005941c
100645d9:	lea    ecx,[ebp-0x18]
100645dc:	jmp    0x10010e45
100645e1:	lea    eax,[ebp-0x24]
100645e4:	jmp    0x10012625
100645e9:	lea    eax,[ebp-0x28]
100645ec:	jmp    0x10012625
100645f1:	lea    eax,[ebp-0x20]
100645f4:	jmp    0x10012625
100645f9:	mov    edx,DWORD PTR [esp+0x8]
100645fd:	lea    eax,[edx-0x2c]
10064600:	mov    ecx,DWORD PTR [edx-0x30]
10064603:	xor    ecx,eax
10064605:	call   0x100430d7
1006460a:	mov    eax,0x1007b2f8
1006460f:	jmp    0x1005941c
10064614:	lea    ecx,[ebp-0x2c]
10064617:	jmp    0x10007f38
1006461c:	mov    edx,DWORD PTR [esp+0x8]
10064620:	lea    eax,[edx+0xc]
10064623:	mov    ecx,DWORD PTR [edx-0x3c]
10064626:	xor    ecx,eax
10064628:	call   0x100430d7
1006462d:	mov    ecx,DWORD PTR [edx-0x4]
10064630:	xor    ecx,eax
10064632:	call   0x100430d7
10064637:	mov    eax,0x1007b324
1006463c:	jmp    0x1005941c
10064641:	lea    ecx,[ebp-0x30]
10064644:	jmp    0x10007f38
10064649:	mov    edx,DWORD PTR [esp+0x8]
1006464d:	lea    eax,[edx+0xc]
10064650:	mov    ecx,DWORD PTR [edx-0x34]
10064653:	xor    ecx,eax
10064655:	call   0x100430d7
1006465a:	mov    eax,0x1007b350
1006465f:	jmp    0x1005941c
10064664:	lea    ecx,[ebp-0x2c]
10064667:	jmp    0x10007f38
1006466c:	push   DWORD PTR [ebp-0x34]
1006466f:	call   0x100430d2
10064674:	pop    ecx
10064675:	ret    
10064676:	mov    edx,DWORD PTR [esp+0x8]
1006467a:	lea    eax,[edx+0xc]
1006467d:	mov    ecx,DWORD PTR [edx-0x40]
10064680:	xor    ecx,eax
10064682:	call   0x100430d7
10064687:	mov    ecx,DWORD PTR [edx-0x4]
1006468a:	xor    ecx,eax
1006468c:	call   0x100430d7
10064691:	mov    eax,0x1007b384
10064696:	jmp    0x1005941c
1006469b:	lea    ecx,[ebp-0x30]
1006469e:	jmp    0x10007f38
100646a3:	lea    ecx,[ebp-0x4c]
100646a6:	jmp    0x10007f38
100646ab:	lea    eax,[ebp-0x5c]
100646ae:	jmp    0x100020a1
100646b3:	mov    edx,DWORD PTR [esp+0x8]
100646b7:	lea    eax,[edx-0x64]
100646ba:	mov    ecx,DWORD PTR [edx-0x68]
100646bd:	xor    ecx,eax
100646bf:	call   0x100430d7
100646c4:	add    eax,0xc
100646c7:	mov    ecx,DWORD PTR [edx-0x8]
100646ca:	xor    ecx,eax
100646cc:	call   0x100430d7
100646d1:	mov    eax,0x1007b3c0
100646d6:	jmp    0x1005941c
100646db:	lea    ecx,[ebp-0x2c]
100646de:	jmp    0x10007f38
100646e3:	push   DWORD PTR [ebp-0x4c]
100646e6:	call   0x100430d2
100646eb:	pop    ecx
100646ec:	ret    
100646ed:	lea    ecx,[ebp-0x48]
100646f0:	jmp    0x10007f38
100646f5:	push   DWORD PTR [ebp-0x54]
100646f8:	call   0x100430d2
100646fd:	pop    ecx
100646fe:	ret    
100646ff:	mov    edx,DWORD PTR [esp+0x8]
10064703:	lea    eax,[edx+0xc]
10064706:	mov    ecx,DWORD PTR [edx-0x5c]
10064709:	xor    ecx,eax
1006470b:	call   0x100430d7
10064710:	mov    ecx,DWORD PTR [edx-0x4]
10064713:	xor    ecx,eax
10064715:	call   0x100430d7
1006471a:	mov    eax,0x1007b404
1006471f:	jmp    0x1005941c
10064724:	lea    ecx,[ebp-0x30]
10064727:	jmp    0x10007f38
1006472c:	lea    ecx,[ebp-0xa0]
10064732:	jmp    0x10007f38
10064737:	lea    ecx,[ebp-0xbc]
1006473d:	jmp    0x10007f38
10064742:	lea    ecx,[ebp-0xbc]
10064748:	jmp    0x10007f38
1006474d:	mov    eax,DWORD PTR [ebp-0xcc]
10064753:	and    eax,0x1
10064756:	je     0x1006476e
1006475c:	and    DWORD PTR [ebp-0xcc],0xfffffffe
10064763:	lea    ecx,[ebp-0xa0]
10064769:	jmp    0x10007f38
1006476e:	ret    
1006476f:	mov    eax,DWORD PTR [ebp-0xcc]
10064775:	and    eax,0x2
10064778:	je     0x1006478d
1006477e:	and    DWORD PTR [ebp-0xcc],0xfffffffd
10064785:	lea    ecx,[ebp-0x68]
10064788:	jmp    0x10007f38
1006478d:	ret    
1006478e:	mov    eax,DWORD PTR [ebp-0xcc]
10064794:	and    eax,0x4
10064797:	je     0x100647af
1006479d:	and    DWORD PTR [ebp-0xcc],0xfffffffb
100647a4:	lea    ecx,[ebp-0xbc]
100647aa:	jmp    0x10007f38
100647af:	ret    
100647b0:	mov    eax,DWORD PTR [ebp-0xcc]
100647b6:	and    eax,0x8
100647b9:	je     0x100647ce
100647bf:	and    DWORD PTR [ebp-0xcc],0xfffffff7
100647c6:	lea    ecx,[ebp-0x4c]
100647c9:	jmp    0x10007f38
100647ce:	ret    
100647cf:	mov    eax,DWORD PTR [ebp-0xcc]
100647d5:	and    eax,0x10
100647d8:	je     0x100647f0
100647de:	and    DWORD PTR [ebp-0xcc],0xffffffef
100647e5:	lea    ecx,[ebp-0x84]
100647eb:	jmp    0x10007f38
100647f0:	ret    
100647f1:	push   DWORD PTR [ebp-0xc4]
100647f7:	call   0x100430d2
100647fc:	pop    ecx
100647fd:	ret    
100647fe:	mov    edx,DWORD PTR [esp+0x8]
10064802:	lea    eax,[edx-0xd4]
10064808:	mov    ecx,DWORD PTR [edx-0xd8]
1006480e:	xor    ecx,eax
10064810:	call   0x100430d7
10064815:	add    eax,0xc
10064818:	mov    ecx,DWORD PTR [edx-0x8]
1006481b:	xor    ecx,eax
1006481d:	call   0x100430d7
10064822:	mov    eax,0x1007b478
10064827:	jmp    0x1005941c
1006482c:	lea    eax,[ebp-0x18]
1006482f:	jmp    0x10009c00
10064834:	lea    eax,[ebp-0x14]
10064837:	jmp    0x10009c00
1006483c:	lea    eax,[ebp-0x10]
1006483f:	jmp    0x10009c00
10064844:	mov    edx,DWORD PTR [esp+0x8]
10064848:	lea    eax,[edx+0xc]
1006484b:	mov    ecx,DWORD PTR [edx-0x1c]
1006484e:	xor    ecx,eax
10064850:	call   0x100430d7
10064855:	mov    eax,0x1007b4b4
1006485a:	jmp    0x1005941c
1006485f:	lea    ecx,[ebp-0x2c]
10064862:	jmp    0x10007f38
10064867:	push   DWORD PTR [ebp-0x50]
1006486a:	call   0x100430d2
1006486f:	pop    ecx
10064870:	ret    
10064871:	lea    ecx,[ebp-0x48]
10064874:	jmp    0x10007f38
10064879:	push   DWORD PTR [ebp-0x50]
1006487c:	call   0x100430d2
10064881:	pop    ecx
10064882:	ret    
10064883:	mov    edx,DWORD PTR [esp+0x8]
10064887:	lea    eax,[edx+0xc]
1006488a:	mov    ecx,DWORD PTR [edx-0x60]
1006488d:	xor    ecx,eax
1006488f:	call   0x100430d7
10064894:	mov    ecx,DWORD PTR [edx-0x4]
10064897:	xor    ecx,eax
10064899:	call   0x100430d7
1006489e:	mov    eax,0x1007b4f8
100648a3:	jmp    0x1005941c
100648a8:	lea    eax,[ebp-0x10]
100648ab:	jmp    0x10009c00
100648b0:	lea    eax,[ebp-0x14]
100648b3:	jmp    0x10009c00
100648b8:	lea    eax,[ebp-0x18]
100648bb:	jmp    0x10009c00
100648c0:	mov    edx,DWORD PTR [esp+0x8]
100648c4:	lea    eax,[edx+0xc]
100648c7:	mov    ecx,DWORD PTR [edx-0x20]
100648ca:	xor    ecx,eax
100648cc:	call   0x100430d7
100648d1:	mov    eax,0x1007b534
100648d6:	jmp    0x1005941c
100648db:	lea    eax,[ebp-0x14]
100648de:	jmp    0x100020a1
100648e3:	lea    eax,[ebp-0x5c]
100648e6:	push   eax
100648e7:	call   0x10009f31
100648ec:	ret    
100648ed:	mov    eax,DWORD PTR [ebp-0x18]
100648f0:	and    eax,0x1
100648f3:	je     0x10064905
100648f9:	and    DWORD PTR [ebp-0x18],0xfffffffe
100648fd:	mov    eax,DWORD PTR [ebp+0xc]
10064900:	jmp    0x100020a1
10064905:	ret    
10064906:	mov    edx,DWORD PTR [esp+0x8]
1006490a:	lea    eax,[edx+0xc]
1006490d:	mov    ecx,DWORD PTR [edx-0x60]
10064910:	xor    ecx,eax
10064912:	call   0x100430d7
10064917:	mov    eax,0x1007b570
1006491c:	jmp    0x1005941c
10064921:	lea    ecx,[ebp-0x64]
10064924:	jmp    0x10007f38
10064929:	lea    ecx,[ebp-0x48]
1006492c:	jmp    0x10007f38
10064931:	lea    ecx,[ebp-0x80]
10064934:	jmp    0x10007f38
10064939:	lea    ecx,[ebp-0x2c]
1006493c:	jmp    0x10007f38
10064941:	lea    esi,[ebp-0x98]
10064947:	jmp    0x1000caef
1006494c:	mov    edx,DWORD PTR [esp+0x8]
10064950:	lea    eax,[edx-0x9c]
10064956:	mov    ecx,DWORD PTR [edx-0xa0]
1006495c:	xor    ecx,eax
1006495e:	call   0x100430d7
10064963:	mov    eax,0x1007b5bc
10064968:	jmp    0x1005941c
1006496d:	lea    eax,[ebp+0xc]
10064970:	jmp    0x100020a1
10064975:	mov    eax,DWORD PTR [ebp-0x10]
10064978:	and    eax,0x1
1006497b:	je     0x1006498d
10064981:	and    DWORD PTR [ebp-0x10],0xfffffffe
10064985:	mov    eax,DWORD PTR [ebp+0x8]
10064988:	jmp    0x100020a1
1006498d:	ret    
1006498e:	lea    eax,[ebp+0x10]
10064991:	jmp    0x10009e42
10064996:	mov    edx,DWORD PTR [esp+0x8]
1006499a:	lea    eax,[edx+0xc]
1006499d:	mov    ecx,DWORD PTR [edx-0x14]
100649a0:	xor    ecx,eax
100649a2:	call   0x100430d7
100649a7:	mov    eax,0x1007b5f8
100649ac:	jmp    0x1005941c
100649b1:	lea    eax,[ebp-0x14]
100649b4:	jmp    0x10009c4e
100649b9:	lea    eax,[ebp-0x18]
100649bc:	jmp    0x10009c4e
100649c1:	lea    eax,[ebp-0x14]
100649c4:	jmp    0x10009c4e
100649c9:	mov    edx,DWORD PTR [esp+0x8]
100649cd:	lea    eax,[edx+0xc]
100649d0:	mov    ecx,DWORD PTR [edx-0x20]
100649d3:	xor    ecx,eax
100649d5:	call   0x100430d7
100649da:	mov    eax,0x1007b634
100649df:	jmp    0x1005941c
100649e4:	lea    eax,[ebp+0x10]
100649e7:	jmp    0x10009e51
100649ec:	lea    eax,[ebp-0x1c]
100649ef:	jmp    0x100260a4
100649f4:	lea    eax,[ebp+0x8]
100649f7:	jmp    0x10009e42
100649fc:	mov    edx,DWORD PTR [esp+0x8]
10064a00:	lea    eax,[edx+0xc]
10064a03:	mov    ecx,DWORD PTR [edx-0x20]
10064a06:	xor    ecx,eax
10064a08:	call   0x100430d7
10064a0d:	mov    eax,0x1007b6a4
10064a12:	jmp    0x1005941c
10064a17:	lea    eax,[ebp-0x14]
10064a1a:	jmp    0x1000d0d0
10064a1f:	lea    esi,[ebp-0x10]
10064a22:	jmp    0x1000aae1
10064a27:	lea    eax,[ebp-0x1c]
10064a2a:	jmp    0x100020a1
10064a2f:	mov    eax,DWORD PTR [ebp-0x18]
10064a32:	and    eax,0x1
10064a35:	je     0x10064a47
10064a3b:	and    DWORD PTR [ebp-0x18],0xfffffffe
10064a3f:	mov    eax,DWORD PTR [ebp+0x8]
10064a42:	jmp    0x100020a1
10064a47:	ret    
10064a48:	mov    edx,DWORD PTR [esp+0x8]
10064a4c:	lea    eax,[edx+0xc]
10064a4f:	mov    ecx,DWORD PTR [edx-0x20]
10064a52:	xor    ecx,eax
10064a54:	call   0x100430d7
10064a59:	mov    eax,0x1007b6e8
10064a5e:	jmp    0x1005941c
10064a63:	lea    eax,[ebp-0x10]
10064a66:	jmp    0x100020a1
10064a6b:	lea    ecx,[ebp-0x38]
10064a6e:	jmp    0x10007f38
10064a73:	mov    edx,DWORD PTR [esp+0x8]
10064a77:	lea    eax,[edx+0xc]
10064a7a:	mov    ecx,DWORD PTR [edx-0x3c]
10064a7d:	xor    ecx,eax
10064a7f:	call   0x100430d7
10064a84:	mov    eax,0x1007b71c
10064a89:	jmp    0x1005941c
10064a8e:	jmp    0x10037b60
10064a93:	lea    eax,[ebp-0x14]
10064a96:	jmp    0x10034ec0
10064a9b:	lea    ecx,[ebp+0x70]
10064a9e:	jmp    0x10007f38
10064aa3:	lea    ecx,[ebp-0x5c]
10064aa6:	jmp    0x10007f38
10064aab:	lea    ecx,[ebp-0x94]
10064ab1:	jmp    0x10007f38
10064ab6:	lea    ecx,[ebp+0x1c]
10064ab9:	jmp    0x10007f38
10064abe:	lea    ecx,[ebp+0x0]
10064ac1:	jmp    0x10007f38
10064ac6:	lea    ecx,[ebp+0x38]
10064ac9:	jmp    0x10007f38
10064ace:	lea    ecx,[ebp-0x78]
10064ad1:	jmp    0x10007f38
10064ad6:	lea    ecx,[ebp-0x94]
10064adc:	jmp    0x10007f38
10064ae1:	lea    ecx,[ebp-0x5c]
10064ae4:	jmp    0x10007f38
10064ae9:	lea    ecx,[ebp-0x94]
10064aef:	jmp    0x10007f38
10064af4:	lea    ecx,[ebp-0x5c]
10064af7:	jmp    0x10007f38
10064afc:	lea    ecx,[ebp-0x78]
10064aff:	jmp    0x10007f38
10064b04:	lea    eax,[ebp-0x14]
10064b07:	jmp    0x10002078
10064b0c:	lea    esi,[ebp-0x40]
10064b0f:	jmp    0x1000466f
10064b14:	lea    ecx,[ebp-0x5c]
10064b17:	jmp    0x10007f38
10064b1c:	lea    ecx,[ebp-0x78]
10064b1f:	jmp    0x10007f38
10064b24:	lea    ecx,[ebp-0xb0]
10064b2a:	jmp    0x10007f38
10064b2f:	lea    ecx,[ebp-0x94]
10064b35:	jmp    0x10007f38
10064b3a:	lea    ecx,[ebp-0x5c]
10064b3d:	jmp    0x10007f38
10064b42:	lea    ecx,[ebp-0x78]
10064b45:	jmp    0x10007f38
10064b4a:	lea    eax,[ebp-0x14]
10064b4d:	jmp    0x10002078
10064b52:	lea    ecx,[ebp-0x78]
10064b55:	jmp    0x10007f38
10064b5a:	lea    ecx,[ebp-0xb0]
10064b60:	jmp    0x10007f38
10064b65:	lea    ecx,[ebp+0x54]
10064b68:	jmp    0x10007f38
10064b6d:	lea    ecx,[ebp-0x94]
10064b73:	jmp    0x10007f38
10064b78:	lea    eax,[ebp-0x1c]
10064b7b:	jmp    0x100020a1
10064b80:	lea    ecx,[ebp-0xb0]
10064b86:	jmp    0x10007f38
10064b8b:	lea    ecx,[ebp-0x78]
10064b8e:	jmp    0x10007f38
10064b93:	lea    ecx,[ebp-0x5c]
10064b96:	jmp    0x10007f38
10064b9b:	lea    eax,[ebp-0x14]
10064b9e:	jmp    0x100042aa
10064ba3:	mov    edx,DWORD PTR [esp+0x8]
10064ba7:	lea    eax,[edx+0xc]
10064baa:	mov    ecx,DWORD PTR [edx-0xb4]
10064bb0:	xor    ecx,eax
10064bb2:	call   0x100430d7
10064bb7:	mov    ecx,DWORD PTR [edx+0x98]
10064bbd:	xor    ecx,eax
10064bbf:	call   0x100430d7
10064bc4:	mov    eax,0x1007b88c
10064bc9:	jmp    0x1005941c
10064bce:	lea    esi,[ebp-0x1c]
10064bd1:	jmp    0x1002bdfb
10064bd6:	lea    eax,[ebp-0x20]
10064bd9:	jmp    0x10012625
10064bde:	lea    ecx,[ebp+0xa8]
10064be4:	jmp    0x10007f38
10064be9:	lea    ecx,[ebp+0x8c]
10064bef:	jmp    0x10007f38
10064bf4:	lea    eax,[ebp-0x74]
10064bf7:	jmp    0x10019710
10064bfc:	lea    ecx,[ebp-0xb0]
10064c02:	jmp    0x10007f38
10064c07:	lea    ecx,[ebp+0x70]
10064c0a:	jmp    0x10007f38
10064c0f:	lea    ecx,[ebp+0x54]
10064c12:	jmp    0x10007f38
10064c17:	lea    ecx,[ebp+0x54]
10064c1a:	jmp    0x10007f38
10064c1f:	lea    eax,[ebp-0x28]
10064c22:	jmp    0x10002078
10064c27:	lea    ecx,[ebp-0xb0]
10064c2d:	jmp    0x10007f38
10064c32:	lea    ecx,[ebp-0x120]
10064c38:	jmp    0x10007f38
10064c3d:	lea    ecx,[ebp-0x104]
10064c43:	jmp    0x10007f38
10064c48:	lea    ecx,[ebp-0x13c]
10064c4e:	jmp    0x10007f38
10064c53:	lea    ecx,[ebp-0x174]
10064c59:	jmp    0x10007f38
10064c5e:	lea    ecx,[ebp-0xe8]
10064c64:	jmp    0x10007f38
10064c69:	lea    ecx,[ebp-0x190]
10064c6f:	jmp    0x10007f38
10064c74:	lea    eax,[ebp-0x54]
10064c77:	jmp    0x100020a1
10064c7c:	lea    ecx,[ebp+0x70]
10064c7f:	jmp    0x10007f38
10064c84:	lea    eax,[ebp-0x24]
10064c87:	jmp    0x10012625
10064c8c:	lea    ecx,[ebp-0x158]
10064c92:	jmp    0x10007f38
10064c97:	lea    edi,[ebp-0x5c]
10064c9a:	jmp    0x100024f2
10064c9f:	lea    ecx,[ebp-0xcc]
10064ca5:	jmp    0x10007f38
10064caa:	lea    edi,[ebp-0x48]
10064cad:	jmp    0x100024f2
10064cb2:	lea    ecx,[ebp+0x1c]
10064cb5:	jmp    0x10007f38
10064cba:	lea    ecx,[ebp+0x54]
10064cbd:	jmp    0x10007f38
10064cc2:	lea    edi,[ebp-0x60]
10064cc5:	jmp    0x100024f2
10064cca:	lea    ecx,[ebp-0xcc]
10064cd0:	jmp    0x10007f38
10064cd5:	lea    edi,[ebp-0x44]
10064cd8:	jmp    0x100024f2
10064cdd:	lea    ecx,[ebp+0x0]
10064ce0:	jmp    0x10007f38
10064ce5:	lea    edi,[ebp-0x4c]
10064ce8:	jmp    0x100024f2
10064ced:	lea    ecx,[ebp+0x38]
10064cf0:	jmp    0x10007f38
10064cf5:	lea    eax,[ebp-0x2c]
10064cf8:	jmp    0x10012625
10064cfd:	lea    ecx,[ebp-0x94]
10064d03:	jmp    0x1002258a
10064d08:	lea    ecx,[ebp-0x78]
10064d0b:	jmp    0x1002258a
10064d10:	lea    eax,[ebp-0x2c]
10064d13:	jmp    0x10002078
10064d18:	mov    edx,DWORD PTR [esp+0x8]
10064d1c:	lea    eax,[edx+0xc]
10064d1f:	mov    ecx,DWORD PTR [edx-0x194]
10064d25:	xor    ecx,eax
10064d27:	call   0x100430d7
10064d2c:	mov    ecx,DWORD PTR [edx+0xd0]
10064d32:	xor    ecx,eax
10064d34:	call   0x100430d7
10064d39:	mov    eax,0x1007ba5c
10064d3e:	jmp    0x1005941c
10064d43:	lea    ecx,[ebp-0xb8]
10064d49:	jmp    0x10007f38
10064d4e:	lea    ecx,[ebp-0x9c]
10064d54:	jmp    0x10007f38
10064d59:	lea    ecx,[ebp-0xf0]
10064d5f:	jmp    0x10007f38
10064d64:	lea    ecx,[ebp-0xf0]
10064d6a:	jmp    0x10007f38
10064d6f:	lea    ecx,[ebp-0xf0]
10064d75:	jmp    0x10007f38
10064d7a:	lea    ecx,[ebp-0xf0]
10064d80:	jmp    0x10007f38
10064d85:	lea    ecx,[ebp-0xf0]
10064d8b:	jmp    0x10007f38
10064d90:	lea    ecx,[ebp-0xf0]
10064d96:	jmp    0x10007f38
10064d9b:	lea    ecx,[ebp-0xf0]
10064da1:	jmp    0x10007f38
10064da6:	lea    ecx,[ebp-0x144]
10064dac:	jmp    0x10007f38
10064db1:	lea    eax,[ebp-0x128]
10064db7:	jmp    0x100020a1
10064dbc:	lea    ecx,[ebp-0x124]
10064dc2:	jmp    0x10007f38
10064dc7:	lea    ecx,[ebp-0x124]
10064dcd:	jmp    0x10007f38
10064dd2:	lea    ecx,[ebp-0x124]
10064dd8:	jmp    0x10007f38
10064ddd:	mov    edx,DWORD PTR [esp+0x8]
10064de1:	lea    eax,[edx+0xc]
10064de4:	mov    ecx,DWORD PTR [edx-0x148]
10064dea:	xor    ecx,eax
10064dec:	call   0x100430d7
10064df1:	mov    ecx,DWORD PTR [edx-0x8]
10064df4:	xor    ecx,eax
10064df6:	call   0x100430d7
10064dfb:	mov    eax,0x1007bb34
10064e00:	jmp    0x1005941c
10064e05:	lea    ecx,[ebp+0xb0]
10064e0b:	jmp    0x10007f38
10064e10:	lea    ecx,[ebp-0x48]
10064e13:	jmp    0x10007f38
10064e18:	lea    eax,[ebp-0x1c]
10064e1b:	jmp    0x100020a1
10064e20:	lea    ecx,[ebp+0x94]
10064e26:	jmp    0x10007f38
10064e2b:	lea    edi,[ebp-0x14]
10064e2e:	jmp    0x100024f2
10064e33:	lea    edi,[ebp-0x14]
10064e36:	jmp    0x100024f2
10064e3b:	lea    esi,[ebp+0x0]
10064e3e:	jmp    0x1000be1c
10064e43:	lea    ecx,[ebp+0xb0]
10064e49:	jmp    0x10007f38
10064e4e:	lea    ecx,[ebp+0x94]
10064e54:	jmp    0x10007f38
10064e59:	lea    eax,[ebp-0x1c]
10064e5c:	jmp    0x100020a1
10064e61:	lea    ecx,[ebp+0xb0]
10064e67:	jmp    0x10007f38
10064e6c:	lea    edi,[ebp-0x18]
10064e6f:	jmp    0x100024f2
10064e74:	lea    edi,[ebp-0x18]
10064e77:	jmp    0x100024f2
10064e7c:	mov    edx,DWORD PTR [esp+0x8]
10064e80:	lea    eax,[edx+0xc]
10064e83:	mov    ecx,DWORD PTR [edx-0x4c]
10064e86:	xor    ecx,eax
10064e88:	call   0x100430d7
10064e8d:	mov    ecx,DWORD PTR [edx+0xd8]
10064e93:	xor    ecx,eax
10064e95:	call   0x100430d7
10064e9a:	mov    eax,0x1007bc04
10064e9f:	jmp    0x1005941c
10064ea4:	lea    eax,[ebp-0x40]
10064ea7:	jmp    0x1001b251
10064eac:	lea    ecx,[ebp-0x30]
10064eaf:	jmp    0x10007f38
10064eb4:	lea    ecx,[ebp-0x78]
10064eb7:	jmp    0x10007f38
10064ebc:	lea    ecx,[ebp-0x5c]
10064ebf:	jmp    0x10007f38
10064ec4:	lea    eax,[ebp-0x34]
10064ec7:	jmp    0x100020a1
10064ecc:	mov    edx,DWORD PTR [esp+0x8]
10064ed0:	lea    eax,[edx+0xc]
10064ed3:	mov    ecx,DWORD PTR [edx-0x80]
10064ed6:	xor    ecx,eax
10064ed8:	call   0x100430d7
10064edd:	mov    ecx,DWORD PTR [edx-0x8]
10064ee0:	xor    ecx,eax
10064ee2:	call   0x100430d7
10064ee7:	mov    eax,0x1007bc94
10064eec:	jmp    0x1005941c
10064ef1:	lea    eax,[ebp-0x18]
10064ef4:	jmp    0x100042aa
10064ef9:	mov    edx,DWORD PTR [esp+0x8]
10064efd:	lea    eax,[edx+0xc]
10064f00:	mov    ecx,DWORD PTR [edx-0x1c]
10064f03:	xor    ecx,eax
10064f05:	call   0x100430d7
10064f0a:	mov    eax,0x1007bcf4
10064f0f:	jmp    0x1005941c
10064f14:	lea    eax,[ebp-0x14]
10064f17:	jmp    0x10012625
10064f1c:	lea    esi,[ebp-0x1c]
10064f1f:	jmp    0x1002bdfb
10064f24:	mov    edx,DWORD PTR [esp+0x8]
10064f28:	lea    eax,[edx+0xc]
10064f2b:	mov    ecx,DWORD PTR [edx-0x20]
10064f2e:	xor    ecx,eax
10064f30:	call   0x100430d7
10064f35:	mov    eax,0x1007bd5c
10064f3a:	jmp    0x1005941c
10064f3f:	lea    eax,[ebp-0x14]
10064f42:	jmp    0x10012625
10064f47:	lea    esi,[ebp-0x1c]
10064f4a:	jmp    0x1002bdfb
10064f4f:	mov    edx,DWORD PTR [esp+0x8]
10064f53:	lea    eax,[edx+0xc]
10064f56:	mov    ecx,DWORD PTR [edx-0x20]
10064f59:	xor    ecx,eax
10064f5b:	call   0x100430d7
10064f60:	mov    eax,0x1007bdc4
10064f65:	jmp    0x1005941c
10064f6a:	lea    eax,[ebp-0x34]
10064f6d:	jmp    0x10024da1
10064f72:	lea    eax,[ebp-0x2c]
10064f75:	jmp    0x1000dcca
10064f7a:	push   DWORD PTR [ebp-0x40]
10064f7d:	call   0x100430d2
10064f82:	pop    ecx
10064f83:	ret    
10064f84:	lea    eax,[ebp-0x40]
10064f87:	jmp    0x10009e51
10064f8c:	lea    eax,[ebp-0x3c]
10064f8f:	jmp    0x10009c4e
10064f94:	lea    eax,[ebp-0x38]
10064f97:	jmp    0x10009c4e
10064f9c:	mov    edx,DWORD PTR [esp+0x8]
10064fa0:	lea    eax,[edx-0x54]
10064fa3:	mov    ecx,DWORD PTR [edx-0x58]
10064fa6:	xor    ecx,eax
10064fa8:	call   0x100430d7
10064fad:	mov    eax,0x1007be18
10064fb2:	jmp    0x1005941c
10064fb7:	lea    eax,[ebp-0x14]
10064fba:	jmp    0x10009c4e
10064fbf:	mov    edx,DWORD PTR [esp+0x8]
10064fc3:	lea    eax,[edx+0xc]
10064fc6:	mov    ecx,DWORD PTR [edx-0x18]
10064fc9:	xor    ecx,eax
10064fcb:	call   0x100430d7
10064fd0:	mov    eax,0x1007be78
10064fd5:	jmp    0x1005941c
10064fda:	lea    eax,[ebp+0x8]
10064fdd:	jmp    0x1001b147
10064fe2:	lea    eax,[ebp-0x10]
10064fe5:	jmp    0x10034ec0
10064fea:	lea    ecx,[ebp-0x30]
10064fed:	jmp    0x10007f38
10064ff2:	mov    edx,DWORD PTR [esp+0x8]
10064ff6:	lea    eax,[edx+0xc]
10064ff9:	mov    ecx,DWORD PTR [edx-0x38]
10064ffc:	xor    ecx,eax
10064ffe:	call   0x100430d7
10065003:	mov    eax,0x1007beb4
10065008:	jmp    0x1005941c
1006500d:	lea    ecx,[ebp-0x30]
10065010:	jmp    0x10007f38
10065015:	lea    eax,[ebp-0x54]
10065018:	jmp    0x100046a9
1006501d:	lea    ecx,[ebp-0x4c]
10065020:	jmp    0x10007f38
10065025:	lea    eax,[ebp-0x50]
10065028:	jmp    0x10034ec0
1006502d:	push   DWORD PTR [ebp-0x58]
10065030:	call   0x100430d2
10065035:	pop    ecx
10065036:	ret    
10065037:	lea    esi,[ebp-0x6c]
1006503a:	jmp    0x1002b4d7
1006503f:	lea    eax,[ebp-0x64]
10065042:	jmp    0x10002078
10065047:	push   DWORD PTR [ebp-0x50]
1006504a:	call   0x100430d2
1006504f:	pop    ecx
10065050:	ret    
10065051:	lea    eax,[ebp-0x78]
10065054:	jmp    0x1002db9c
10065059:	lea    esi,[ebp-0x50]
1006505c:	jmp    0x100046bf
10065061:	lea    esi,[ebp-0x60]
10065064:	jmp    0x100046bf
10065069:	mov    edx,DWORD PTR [esp+0x8]
1006506d:	lea    eax,[edx+0xc]
10065070:	mov    ecx,DWORD PTR [edx-0x7c]
10065073:	xor    ecx,eax
10065075:	call   0x100430d7
1006507a:	mov    ecx,DWORD PTR [edx-0x8]
1006507d:	xor    ecx,eax
1006507f:	call   0x100430d7
10065084:	mov    eax,0x1007bf74
10065089:	jmp    0x1005941c
1006508e:	lea    ecx,[ebp-0xbc]
10065094:	jmp    0x10007f38
10065099:	lea    ecx,[ebp-0x68]
1006509c:	jmp    0x10007f38
100650a1:	lea    ecx,[ebp-0x30]
100650a4:	jmp    0x10007f38
100650a9:	lea    ecx,[ebp-0xa0]
100650af:	jmp    0x10007f38
100650b4:	lea    ecx,[ebp-0x84]
100650ba:	jmp    0x10007f38
100650bf:	lea    ecx,[ebp-0x4c]
100650c2:	jmp    0x10007f38
100650c7:	lea    ecx,[ebp-0xf4]
100650cd:	jmp    0x10007f38
100650d2:	lea    ecx,[ebp-0x114]
100650d8:	jmp    0x10007f38
100650dd:	lea    ecx,[ebp-0xa0]
100650e3:	jmp    0x10007f38
100650e8:	lea    ecx,[ebp-0x4c]
100650eb:	jmp    0x10007f38
100650f0:	lea    ecx,[ebp-0x84]
100650f6:	jmp    0x10007f38
100650fb:	lea    ecx,[ebp-0x114]
10065101:	jmp    0x10007f38
10065106:	lea    ecx,[ebp-0xf4]
1006510c:	jmp    0x10007f38
10065111:	lea    ecx,[ebp-0xd8]
10065117:	jmp    0x10007f38
1006511c:	push   DWORD PTR [ebp-0x118]
10065122:	call   0x100430d2
10065127:	pop    ecx
10065128:	ret    
10065129:	lea    ecx,[ebp-0x114]
1006512f:	jmp    0x10007f38
10065134:	lea    ecx,[ebp-0xa0]
1006513a:	jmp    0x10007f38
1006513f:	lea    ecx,[ebp-0xf4]
10065145:	jmp    0x10007f38
1006514a:	lea    ecx,[ebp-0x114]
10065150:	jmp    0x10007f38
10065155:	lea    ecx,[ebp-0x114]
1006515b:	jmp    0x10007f38
10065160:	lea    ecx,[ebp-0xa0]
10065166:	jmp    0x10007f38
1006516b:	lea    ecx,[ebp-0xf4]
10065171:	jmp    0x10007f38
10065176:	lea    ecx,[ebp-0x114]
1006517c:	jmp    0x10007f38
10065181:	lea    ecx,[ebp-0xf4]
10065187:	jmp    0x10007f38
1006518c:	lea    ecx,[ebp-0x114]
10065192:	jmp    0x10007f38
10065197:	lea    ecx,[ebp-0x114]
1006519d:	jmp    0x10007f38
100651a2:	lea    ecx,[ebp-0x114]
100651a8:	jmp    0x10007f38
100651ad:	mov    edx,DWORD PTR [esp+0x8]
100651b1:	lea    eax,[edx-0x12c]
100651b7:	mov    ecx,DWORD PTR [edx-0x130]
100651bd:	xor    ecx,eax
100651bf:	call   0x100430d7
100651c4:	add    eax,0xc
100651c7:	mov    ecx,DWORD PTR [edx-0x8]
100651ca:	xor    ecx,eax
100651cc:	call   0x100430d7
100651d1:	mov    eax,0x1007c078
100651d6:	jmp    0x1005941c
100651db:	lea    ecx,[ebp+0x88]
100651e1:	jmp    0x10007f38
100651e6:	lea    eax,[ebp-0x1c]
100651e9:	jmp    0x100042aa
100651ee:	lea    esi,[ebp+0x0]
100651f1:	jmp    0x10003431
100651f6:	mov    edx,DWORD PTR [esp+0x8]
100651fa:	lea    eax,[edx+0xc]
100651fd:	mov    ecx,DWORD PTR [edx-0x34]
10065200:	xor    ecx,eax
10065202:	call   0x100430d7
10065207:	mov    ecx,DWORD PTR [edx+0xb0]
1006520d:	xor    ecx,eax
1006520f:	call   0x100430d7
10065214:	mov    eax,0x1007c0e8
10065219:	jmp    0x1005941c
1006521e:	jmp    0x10037b60
10065223:	lea    ecx,[ebp-0x14]
10065226:	jmp    0x10015fdf
1006522b:	mov    edx,DWORD PTR [esp+0x8]
1006522f:	lea    eax,[edx+0xc]
10065232:	mov    ecx,DWORD PTR [edx-0x18]
10065235:	xor    ecx,eax
10065237:	call   0x100430d7
1006523c:	mov    eax,0x1007c150
10065241:	jmp    0x1005941c
10065246:	lea    eax,[ebp-0x2c]
10065249:	jmp    0x1000dcca
1006524e:	push   DWORD PTR [ebp-0x38]
10065251:	call   0x100430d2
10065256:	pop    ecx
10065257:	ret    
10065258:	lea    eax,[ebp-0x34]
1006525b:	jmp    0x10009e42
10065260:	lea    eax,[ebp-0x40]
10065263:	jmp    0x10009c4e
10065268:	lea    eax,[ebp-0x30]
1006526b:	jmp    0x1003a080
10065270:	mov    edx,DWORD PTR [esp+0x8]
10065274:	lea    eax,[edx-0x4c]
10065277:	mov    ecx,DWORD PTR [edx-0x50]
1006527a:	xor    ecx,eax
1006527c:	call   0x100430d7
10065281:	mov    eax,0x1007c19c
10065286:	jmp    0x1005941c
1006528b:	jmp    0x10037b60
10065290:	lea    ecx,[ebp-0x14]
10065293:	jmp    0x10015fdf
10065298:	mov    edx,DWORD PTR [esp+0x8]
1006529c:	lea    eax,[edx+0xc]
1006529f:	mov    ecx,DWORD PTR [edx-0x18]
100652a2:	xor    ecx,eax
100652a4:	call   0x100430d7
100652a9:	mov    eax,0x1007c204
100652ae:	jmp    0x1005941c
100652b3:	lea    ecx,[ebp-0xa88]
100652b9:	jmp    0x10015fdf
100652be:	push   0x10015fdf
100652c3:	push   0x40
100652c5:	push   0x4
100652c7:	lea    eax,[ebp-0x210]
100652cd:	push   eax
100652ce:	call   0x10043339
100652d3:	ret    
100652d4:	push   0x10015fdf
100652d9:	push   0x40
100652db:	push   0x4
100652dd:	lea    eax,[ebp-0x310]
100652e3:	push   eax
100652e4:	call   0x10043339
100652e9:	ret    
100652ea:	push   0x10015fdf
100652ef:	push   0x40
100652f1:	push   0x4
100652f3:	lea    eax,[ebp-0x110]
100652f9:	push   eax
100652fa:	call   0x10043339
100652ff:	ret    
10065300:	lea    ecx,[ebp-0xa8c]
10065306:	jmp    0x10015fdf
1006530b:	mov    edx,DWORD PTR [esp+0x8]
1006530f:	lea    eax,[edx-0xa94]
10065315:	mov    ecx,DWORD PTR [edx-0xa98]
1006531b:	xor    ecx,eax
1006531d:	call   0x100430d7
10065322:	mov    eax,0x1007c250
10065327:	jmp    0x1005941c
1006532c:	lea    ecx,[ebp+0xc]
1006532f:	jmp    0x10015fdf
10065334:	mov    edx,DWORD PTR [esp+0x8]
10065338:	lea    eax,[edx+0xc]
1006533b:	mov    ecx,DWORD PTR [edx-0x14]
1006533e:	xor    ecx,eax
10065340:	call   0x100430d7
10065345:	mov    eax,0x1007c27c
1006534a:	jmp    0x1005941c
1006534f:	mov    eax,0x10080f30
10065354:	jmp    0x1001b147
10065359:	mov    edx,DWORD PTR [esp+0x8]
1006535d:	lea    eax,[edx+0xc]
10065360:	mov    ecx,DWORD PTR [edx-0x10]
10065363:	xor    ecx,eax
10065365:	call   0x100430d7
1006536a:	mov    eax,0x1007c2c4
1006536f:	jmp    0x1005941c
10065374:	mov    esi,0x10080da4
10065379:	jmp    0x100046bf
1006537e:	mov    esi,0x10080da8
10065383:	jmp    0x100046bf
10065388:	mov    edx,DWORD PTR [esp+0x8]
1006538c:	lea    eax,[edx+0xc]
1006538f:	mov    ecx,DWORD PTR [edx-0x10]
10065392:	xor    ecx,eax
10065394:	call   0x100430d7
10065399:	mov    eax,0x1007c2f8
1006539e:	jmp    0x1005941c
100653a3:	int3   
100653a4:	int3   
100653a5:	int3   
100653a6:	int3   
100653a7:	int3   
100653a8:	int3   
100653a9:	int3   
100653aa:	int3   
100653ab:	int3   
100653ac:	int3   
100653ad:	int3   
100653ae:	int3   
100653af:	int3   
100653b0:	push   0x32
100653b2:	push   0xa
100653b4:	push   0x10080d54
100653b9:	call   0x100199a3
100653be:	push   0x100659d0
100653c3:	call   0x100434b4
100653c8:	pop    ecx
100653c9:	ret    
100653ca:	xor    eax,eax
100653cc:	push   eax
100653cd:	push   eax
100653ce:	push   eax
100653cf:	call   DWORD PTR ds:0x10066074
100653d5:	mov    ds:0x10080d78,eax
100653da:	ret    
100653db:	push   0x100659db
100653e0:	call   0x100434b4
100653e5:	pop    ecx
100653e6:	ret    
100653e7:	push   0x79290298
100653ec:	push   0xf0614bc
100653f1:	push   0x5b78dee
100653f6:	push   0x5c7ee1a4
100653fb:	push   0x4b9adcf2
10065400:	push   0x15c82192
10065405:	push   0x1006d060
1006540a:	call   0x100042d1
1006540f:	pop    ecx
10065410:	pop    ecx
10065411:	push   eax
10065412:	call   0x100042d1
10065417:	pop    ecx
10065418:	pop    ecx
10065419:	push   eax
1006541a:	call   0x100042d1
1006541f:	pop    ecx
10065420:	pop    ecx
10065421:	push   eax
10065422:	call   0x100042d1
10065427:	pop    ecx
10065428:	pop    ecx
10065429:	push   eax
1006542a:	call   0x100042d1
1006542f:	pop    ecx
10065430:	pop    ecx
10065431:	push   eax
10065432:	call   0x100042d1
10065437:	push   eax
10065438:	push   0xd
1006543a:	push   0x1006d09c
1006543f:	call   0x100042e3
10065444:	add    esp,0x14
10065447:	mov    ds:0x10080d8c,eax
1006544c:	ret    
1006544d:	push   0x47c01fae
10065452:	push   0x455ff398
10065457:	push   0x365169be
1006545c:	push   0xc915cb8
10065461:	push   0x289245c6
10065466:	push   0x1006d0ac
1006546b:	call   0x100042d1
10065470:	pop    ecx
10065471:	pop    ecx
10065472:	push   eax
10065473:	call   0x100042d1
10065478:	pop    ecx
10065479:	pop    ecx
1006547a:	push   eax
1006547b:	call   0x100042d1
10065480:	pop    ecx
10065481:	pop    ecx
10065482:	push   eax
10065483:	call   0x100042d1
10065488:	pop    ecx
10065489:	pop    ecx
1006548a:	push   eax
1006548b:	call   0x100042d1
10065490:	push   eax
10065491:	push   0x10
10065493:	push   0x1006d0e4
10065498:	call   0x100042e3
1006549d:	add    esp,0x14
100654a0:	mov    ds:0x10080d90,eax
100654a5:	ret    
100654a6:	push   0x18d90ad0
100654ab:	push   0xabd2a32
100654b0:	push   0x1006d0f8
100654b5:	call   0x100042d1
100654ba:	pop    ecx
100654bb:	pop    ecx
100654bc:	push   eax
100654bd:	call   0x100042d1
100654c2:	push   eax
100654c3:	push   0x11
100654c5:	push   0x1006d130
100654ca:	call   0x100042e3
100654cf:	add    esp,0x14
100654d2:	mov    ds:0x10080d88,eax
100654d7:	ret    
100654d8:	push   0x4d04ea30
100654dd:	push   0x17261de0
100654e2:	push   0x1006d144
100654e7:	call   0x100042d1
100654ec:	pop    ecx
100654ed:	pop    ecx
100654ee:	push   eax
100654ef:	call   0x100042d1
100654f4:	push   eax
100654f5:	push   0x11
100654f7:	push   0x1006d174
100654fc:	call   0x100042e3
10065501:	add    esp,0x14
10065504:	mov    ds:0x10080d84,eax
10065509:	ret    
1006550a:	call   0x1000be58
1006550f:	push   0x100659f6
10065514:	call   0x100434b4
10065519:	pop    ecx
1006551a:	ret    
1006551b:	push   0x549798d6
10065520:	push   0x383cb5d0
10065525:	push   0x4154a73a
1006552a:	push   0x1006dc9c
1006552f:	call   0x100042d1
10065534:	pop    ecx
10065535:	pop    ecx
10065536:	push   eax
10065537:	call   0x100042d1
1006553c:	pop    ecx
1006553d:	pop    ecx
1006553e:	push   eax
1006553f:	call   0x100042d1
10065544:	push   eax
10065545:	push   0x2
10065547:	push   0x1006dcc8
1006554c:	call   0x100042e3
10065551:	add    esp,0x14
10065554:	mov    ds:0x10081438,eax
10065559:	ret    
1006555a:	push   0x1006e1d0
1006555f:	push   0x1
10065561:	push   0x1006d47c
10065566:	call   0x100042e3
1006556b:	add    esp,0xc
1006556e:	mov    ds:0x1008143c,eax
10065573:	ret    
10065574:	push   0x6f4446ba
10065579:	push   0x1ac4f88
1006557e:	push   0x1006e254
10065583:	call   0x100042d1
10065588:	pop    ecx
10065589:	pop    ecx
1006558a:	push   eax
1006558b:	call   0x100042d1
10065590:	push   eax
10065591:	push   0x10
10065593:	push   0x1006e294
10065598:	call   0x100042e3
1006559d:	add    esp,0x14
100655a0:	mov    ds:0x10080dc0,eax
100655a5:	ret    
100655a6:	push   0x19d39ea2
100655ab:	push   0x6df2627e
100655b0:	push   0x52b99c4
100655b5:	push   0x52c558aa
100655ba:	push   0x1006e2a8
100655bf:	call   0x100042d1
100655c4:	pop    ecx
100655c5:	pop    ecx
100655c6:	push   eax
100655c7:	call   0x100042d1
100655cc:	pop    ecx
100655cd:	pop    ecx
100655ce:	push   eax
100655cf:	call   0x100042d1
100655d4:	pop    ecx
100655d5:	pop    ecx
100655d6:	push   eax
100655d7:	call   0x100042d1
100655dc:	push   eax
100655dd:	push   0x10
100655df:	push   0x1006e2d4
100655e4:	call   0x100042e3
100655e9:	add    esp,0x14
100655ec:	mov    ds:0x10080dbc,eax
100655f1:	ret    
100655f2:	push   0x7b8383fa
100655f7:	push   0x2c6f86fe
100655fc:	push   0x6609204c
10065601:	push   0x1006e2e8
10065606:	call   0x100042d1
1006560b:	pop    ecx
1006560c:	pop    ecx
1006560d:	push   eax
1006560e:	call   0x100042d1
10065613:	pop    ecx
10065614:	pop    ecx
10065615:	push   eax
10065616:	call   0x100042d1
1006561b:	push   eax
1006561c:	push   0x10
1006561e:	push   0x1006e318
10065623:	call   0x100042e3
10065628:	add    esp,0x14
1006562b:	mov    ds:0x10080db8,eax
10065630:	ret    
10065631:	push   edi
10065632:	mov    edi,0x10080dc8
10065637:	call   0x10012c2e
1006563c:	push   0x10065a54
10065641:	call   0x100434b4
10065646:	pop    ecx
10065647:	pop    edi
10065648:	ret    
10065649:	xor    eax,eax
1006564b:	push   eax
1006564c:	push   eax
1006564d:	push   eax
1006564e:	call   DWORD PTR ds:0x10066074
10065654:	mov    ds:0x10080dc4,eax
10065659:	ret    
1006565a:	call   0x10012ff5
1006565f:	push   0x10065a61
10065664:	call   0x100434b4
10065669:	pop    ecx
1006566a:	ret    
1006566b:	call   0x10018200
10065670:	mov    ds:0x10080e7c,eax
10065675:	mov    BYTE PTR [eax+0x15],0x1
10065679:	mov    eax,ds:0x10080e7c
1006567e:	mov    DWORD PTR [eax+0x4],eax
10065681:	mov    eax,ds:0x10080e7c
10065686:	mov    DWORD PTR [eax],eax
10065688:	mov    eax,ds:0x10080e7c
1006568d:	mov    DWORD PTR [eax+0x8],eax
10065690:	and    DWORD PTR ds:0x10080e80,0x0
10065697:	push   0x10065a66
1006569c:	call   0x100434b4
100656a1:	pop    ecx
100656a2:	ret    
100656a3:	push   esi
100656a4:	mov    esi,0x10080e98
100656a9:	push   edi
100656aa:	mov    ecx,esi
100656ac:	call   0x10014551
100656b1:	xor    eax,eax
100656b3:	mov    edi,0x10080e88
100656b8:	mov    ecx,esi
100656ba:	mov    ds:0x10080e8c,eax
100656bf:	mov    ds:0x10080e94,eax
100656c4:	mov    ds:0x10080e90,eax
100656c9:	mov    DWORD PTR ds:0x10080c04,edi
100656cf:	mov    ds:0x10080eb0,eax
100656d4:	call   0x10014565
100656d9:	test   eax,eax
100656db:	jge    0x100656e6
100656dd:	mov    BYTE PTR ds:0x10080c00,0x1
100656e4:	jmp    0x100656f0
100656e6:	mov    DWORD PTR ds:0x10080e8c,0x24
100656f0:	push   0x10065a6b
100656f5:	mov    DWORD PTR ds:0x10080e88,0x1006fc98
100656ff:	mov    DWORD PTR ds:0x10080c18,edi
10065705:	call   0x100434b4
1006570a:	pop    ecx
1006570b:	pop    edi
1006570c:	pop    esi
1006570d:	ret    
1006570e:	xor    eax,eax
10065710:	push   eax
10065711:	push   eax
10065712:	push   eax
10065713:	call   DWORD PTR ds:0x10066074
10065719:	mov    ds:0x10080ec8,eax
1006571e:	ret    
1006571f:	push   0x10065a7f
10065724:	call   0x100434b4
10065729:	pop    ecx
1006572a:	ret    
1006572b:	call   0x1001956e
10065730:	mov    ds:0x10080ed0,eax
10065735:	mov    BYTE PTR [eax+0x29],0x1
10065739:	mov    eax,ds:0x10080ed0
1006573e:	mov    DWORD PTR [eax+0x4],eax
10065741:	mov    eax,ds:0x10080ed0
10065746:	mov    DWORD PTR [eax],eax
10065748:	mov    eax,ds:0x10080ed0
1006574d:	mov    DWORD PTR [eax+0x8],eax
10065750:	and    DWORD PTR ds:0x10080ed4,0x0
10065757:	push   0x10065a8c
1006575c:	call   0x100434b4
10065761:	pop    ecx
10065762:	ret    
10065763:	call   0x100197ce
10065768:	mov    ds:0x10080edc,eax
1006576d:	xor    eax,eax
1006576f:	push   eax
10065770:	push   eax
10065771:	push   eax
10065772:	mov    ds:0x10080ee0,eax
10065777:	call   DWORD PTR ds:0x10066074
1006577d:	push   0x10065a96
10065782:	mov    ds:0x10080ee4,eax
10065787:	call   0x100434b4
1006578c:	pop    ecx
1006578d:	ret    
1006578e:	push   0x32
10065790:	push   0xa
10065792:	push   0x10080ee8
10065797:	call   0x100199a3
1006579c:	push   0x10065ab6
100657a1:	call   0x100434b4
100657a6:	pop    ecx
100657a7:	ret    
100657a8:	push   0xfa
100657ad:	push   0x32
100657af:	push   0x10080f0c
100657b4:	call   0x100199a3
100657b9:	push   0x10065ac1
100657be:	call   0x100434b4
100657c3:	pop    ecx
100657c4:	ret    
100657c5:	push   0x0
100657c7:	mov    eax,0x10065359
100657cc:	call   0x10059c75
100657d1:	call   0x1001b2d0
100657d6:	xor    esi,esi
100657d8:	mov    ds:0x10080f34,eax
100657dd:	mov    DWORD PTR ds:0x10080f38,esi
100657e3:	mov    DWORD PTR [esp+0x18],esi
100657e7:	call   0x1001b2e8
100657ec:	push   esi
100657ed:	push   esi
100657ee:	push   esi
100657ef:	mov    ds:0x10080f40,eax
100657f4:	mov    DWORD PTR ds:0x10080f44,esi
100657fa:	mov    DWORD PTR ds:0x10080f4c,esi
10065800:	call   DWORD PTR ds:0x10066074
10065806:	push   0x10065acc
1006580b:	mov    ds:0x10080f48,eax
10065810:	call   0x100434b4
10065815:	pop    ecx
10065816:	call   0x10059d4d
1006581b:	ret    
1006581c:	call   0x10021b02
10065821:	mov    ds:0x10080f58,eax
10065826:	mov    BYTE PTR [eax+0x21],0x1
1006582a:	mov    eax,ds:0x10080f58
1006582f:	mov    DWORD PTR [eax+0x4],eax
10065832:	mov    eax,ds:0x10080f58
10065837:	mov    DWORD PTR [eax],eax
10065839:	mov    eax,ds:0x10080f58
1006583e:	mov    DWORD PTR [eax+0x8],eax
10065841:	and    DWORD PTR ds:0x10080f5c,0x0
10065848:	push   0x10065ae2
1006584d:	call   0x100434b4
10065852:	pop    ecx
10065853:	ret    
10065854:	xor    eax,eax
10065856:	push   eax
10065857:	push   eax
10065858:	push   eax
10065859:	call   DWORD PTR ds:0x10066074
1006585f:	mov    ds:0x10080f50,eax
10065864:	ret    
10065865:	xor    eax,eax
10065867:	push   eax
10065868:	push   eax
10065869:	push   eax
1006586a:	call   DWORD PTR ds:0x10066074
10065870:	mov    ds:0x10080f60,eax
10065875:	ret    
10065876:	xor    eax,eax
10065878:	push   eax
10065879:	push   eax
1006587a:	push   eax
1006587b:	push   eax
1006587c:	call   DWORD PTR ds:0x10066130
10065882:	mov    ds:0x10080f6c,eax
10065887:	ret    
10065888:	xor    eax,eax
1006588a:	push   eax
1006588b:	push   eax
1006588c:	push   eax
1006588d:	push   eax
1006588e:	call   DWORD PTR ds:0x10066130
10065894:	mov    ds:0x10080f64,eax
10065899:	ret    
1006589a:	xor    eax,eax
1006589c:	push   eax
1006589d:	push   eax
1006589e:	push   eax
1006589f:	push   eax
100658a0:	call   DWORD PTR ds:0x10066130
100658a6:	mov    ds:0x10080f68,eax
100658ab:	ret    
100658ac:	call   0x1001b300
100658b1:	and    DWORD PTR ds:0x10080f90,0x0
100658b8:	push   0x10065b0e
100658bd:	mov    ds:0x10080f8c,eax
100658c2:	call   0x100434b4
100658c7:	pop    ecx
100658c8:	ret    
100658c9:	call   0x1001b300
100658ce:	and    DWORD PTR ds:0x10080f84,0x0
100658d5:	push   0x10065b2e
100658da:	mov    ds:0x10080f80,eax
100658df:	call   0x100434b4
100658e4:	pop    ecx
100658e5:	ret    
100658e6:	call   0x1001b300
100658eb:	and    DWORD PTR ds:0x10080f9c,0x0
100658f2:	push   0x10065b4e
100658f7:	mov    ds:0x10080f98,eax
100658fc:	call   0x100434b4
10065901:	pop    ecx
10065902:	ret    
10065903:	call   0x1001b300
10065908:	and    DWORD PTR ds:0x10080f78,0x0
1006590f:	push   0x10065b6e
10065914:	mov    ds:0x10080f74,eax
10065919:	call   0x100434b4
1006591e:	pop    ecx
1006591f:	ret    
10065920:	push   0x0
10065922:	push   0x0
10065924:	push   0x1
10065926:	push   0x0
10065928:	call   DWORD PTR ds:0x10066130
1006592e:	mov    ds:0x10080fa0,eax
10065933:	ret    
10065934:	int3   
10065935:	int3   
10065936:	int3   
10065937:	int3   
10065938:	int3   
10065939:	int3   
1006593a:	int3   
1006593b:	int3   
1006593c:	int3   
1006593d:	int3   
1006593e:	int3   
1006593f:	int3   
10065940:	push   0x10065b90
10065945:	call   0x100434b4
1006594a:	pop    ecx
1006594b:	ret    
1006594c:	int3   
1006594d:	int3   
1006594e:	int3   
1006594f:	int3   
10065950:	push   0x10065be0
10065955:	call   0x100434b4
1006595a:	pop    ecx
1006595b:	ret    
1006595c:	mov    ecx,0x10080a00
10065961:	call   0x10057001
10065966:	push   0x10065bec
1006596b:	call   0x100434b4
10065970:	pop    ecx
10065971:	ret    
10065972:	mov    ecx,0x10080a3c
10065977:	call   0x10056fdb
1006597c:	push   0x10065bf6
10065981:	call   0x100434b4
10065986:	pop    ecx
10065987:	ret    
10065988:	call   DWORD PTR ds:0x100661ac
1006598e:	push   0x10065c00
10065993:	mov    DWORD PTR ds:0x10080a68,0x1006b8f8
1006599d:	mov    ds:0x10080a6c,eax
100659a2:	mov    BYTE PTR ds:0x10080a70,0x0
100659a9:	call   0x100434b4
100659ae:	pop    ecx
100659af:	ret    
100659b0:	push   0x10080a68
100659b5:	mov    ecx,0x10080a74
100659ba:	call   0x10057174
100659bf:	push   0x10065c0a
100659c4:	call   0x100434b4
100659c9:	pop    ecx
100659ca:	ret    
100659cb:	int3   
100659cc:	int3   
100659cd:	int3   
100659ce:	int3   
100659cf:	int3   
100659d0:	push   0x10080d54
100659d5:	call   0x10001201
100659da:	ret    
100659db:	ret    
100659dc:	jmp    0x10005235
100659e1:	jmp    0x10004ee2
100659e6:	mov    eax,ds:0x10081428
100659eb:	test   eax,eax
100659ed:	je     0x100659f5
100659ef:	mov    ecx,DWORD PTR [eax]
100659f1:	push   eax
100659f2:	call   DWORD PTR [ecx+0x8]
100659f5:	ret    
100659f6:	push   0x0
100659f8:	mov    eax,0x10065388
100659fd:	call   0x10059c75
10065a02:	push   0xffffffff
10065a04:	mov    DWORD PTR [esp+0x1c],0x1
10065a0c:	push   DWORD PTR ds:0x10080da8
10065a12:	call   DWORD PTR ds:0x10066084
10065a18:	mov    eax,0x10080dac
10065a1d:	call   0x1000d3d0
10065a22:	mov    eax,ds:0x10080da8
10065a27:	test   eax,eax
10065a29:	mov    esi,DWORD PTR ds:0x10066070
10065a2f:	je     0x10065a34
10065a31:	push   eax
10065a32:	call   esi
10065a34:	mov    eax,ds:0x10080da4
10065a39:	and    DWORD PTR ds:0x10080da8,0x0
10065a40:	test   eax,eax
10065a42:	je     0x10065a47
10065a44:	push   eax
10065a45:	call   esi
10065a47:	and    DWORD PTR ds:0x10080da4,0x0
10065a4e:	call   0x10059d4d
10065a53:	ret    
10065a54:	push   esi
10065a55:	mov    esi,0x10080dc8
10065a5a:	call   0x1000bdb4
10065a5f:	pop    esi
10065a60:	ret    
10065a61:	jmp    0x1001306c
10065a66:	jmp    0x10017a40
10065a6b:	mov    DWORD PTR ds:0x10080e88,0x1006fc98
10065a75:	mov    ecx,0x10080e88
10065a7a:	jmp    0x100145bf
10065a7f:	push   esi
10065a80:	mov    esi,0x10080eb8
10065a85:	call   0x1000a2fa
10065a8a:	pop    esi
10065a8b:	ret    
10065a8c:	mov    eax,0x10080ecc
10065a91:	jmp    0x1001910e
10065a96:	push   esi
10065a97:	mov    esi,0x10080ed8
10065a9c:	call   0x10019727
10065aa1:	push   DWORD PTR ds:0x10080edc
10065aa7:	call   0x100430d2
10065aac:	and    DWORD PTR ds:0x10080edc,0x0
10065ab3:	pop    ecx
10065ab4:	pop    esi
10065ab5:	ret    
10065ab6:	push   0x10080ee8
10065abb:	call   0x10001201
10065ac0:	ret    
10065ac1:	push   0x10080f0c
10065ac6:	call   0x10001201
10065acb:	ret    
10065acc:	push   esi
10065acd:	mov    esi,0x10080f3c
10065ad2:	call   0x1001b21b
10065ad7:	mov    eax,0x10080f30
10065adc:	pop    esi
10065add:	jmp    0x1001b147
10065ae2:	jmp    0x100207f0
10065ae7:	mov    eax,ds:0x1008142c
10065aec:	test   eax,eax
10065aee:	push   esi
10065aef:	mov    esi,eax
10065af1:	je     0x10065b0c
10065af3:	push   0x10022a41
10065af8:	push   0x2
10065afa:	push   0x14
10065afc:	add    eax,0x4
10065aff:	push   eax
10065b00:	call   0x10043339
10065b05:	push   esi
10065b06:	call   0x100430d2
10065b0b:	pop    ecx
10065b0c:	pop    esi
10065b0d:	ret    
10065b0e:	push   esi
10065b0f:	mov    esi,0x10080f88
10065b14:	call   0x10026f44
10065b19:	push   DWORD PTR ds:0x10080f8c
10065b1f:	call   0x100430d2
10065b24:	and    DWORD PTR ds:0x10080f8c,0x0
10065b2b:	pop    ecx
10065b2c:	pop    esi
10065b2d:	ret    
10065b2e:	push   esi
10065b2f:	mov    esi,0x10080f7c
10065b34:	call   0x10026f44
10065b39:	push   DWORD PTR ds:0x10080f80
10065b3f:	call   0x100430d2
10065b44:	and    DWORD PTR ds:0x10080f80,0x0
10065b4b:	pop    ecx
10065b4c:	pop    esi
10065b4d:	ret    
10065b4e:	push   esi
10065b4f:	mov    esi,0x10080f94
10065b54:	call   0x10026f44
10065b59:	push   DWORD PTR ds:0x10080f98
10065b5f:	call   0x100430d2
10065b64:	and    DWORD PTR ds:0x10080f98,0x0
10065b6b:	pop    ecx
10065b6c:	pop    esi
10065b6d:	ret    
10065b6e:	push   esi
10065b6f:	mov    esi,0x10080f70
10065b74:	call   0x10026f44
10065b79:	push   DWORD PTR ds:0x10080f74
10065b7f:	call   0x100430d2
10065b84:	and    DWORD PTR ds:0x10080f74,0x0
10065b8b:	pop    ecx
10065b8c:	pop    esi
10065b8d:	ret    
10065b8e:	int3   
10065b8f:	int3   
10065b90:	cmp    DWORD PTR ds:0x1007f71c,0x10
10065b97:	jb     0x10065ba7
10065b99:	mov    eax,ds:0x1007f708
10065b9e:	push   eax
10065b9f:	call   0x100430d2
10065ba4:	add    esp,0x4
10065ba7:	xor    eax,eax
10065ba9:	mov    DWORD PTR ds:0x1007f71c,0xf
10065bb3:	mov    ds:0x1007f718,eax
10065bb8:	mov    ds:0x1007f708,al
10065bbd:	ret    
10065bbe:	mov    DWORD PTR ds:0x1007fa84,0x100665c8
10065bc8:	mov    ecx,0x1007fa84
10065bcd:	jmp    0x10043210
10065bd2:	int3   
10065bd3:	int3   
10065bd4:	int3   
10065bd5:	int3   
10065bd6:	int3   
10065bd7:	int3   
10065bd8:	int3   
10065bd9:	int3   
10065bda:	int3   
10065bdb:	int3   
10065bdc:	int3   
10065bdd:	int3   
10065bde:	int3   
10065bdf:	int3   
10065be0:	push   0x1007ef80
10065be5:	call   DWORD PTR ds:0x10066294
10065beb:	ret    
10065bec:	mov    ecx,0x10080a00
10065bf1:	jmp    0x10056f6f
10065bf6:	mov    ecx,0x10080a3c
10065bfb:	jmp    0x100570b0
10065c00:	mov    ecx,0x10080a68
10065c05:	jmp    0x100570c8
10065c0a:	mov    DWORD PTR ds:0x10080a74,0x1006b90c
10065c14:	ret    
